0x15f80:	sub	rsp, 8
0x15f84:	add	rsp, 8
0x15f88:	ret	


0x15f70:	mov	rdx, qword ptr [rip + 0x206091]
0x15f77:	xor	esi, esi
0x15f79:	jmp	0x1ec0


0x15f60:	ret	


0x15ef0:	push	r15
0x15ef2:	push	r14
0x15ef4:	mov	r15, rdx
0x15ef7:	push	r13
0x15ef9:	push	r12
0x15efb:	lea	r12, [rip + 0x205aae]
0x15f02:	push	rbp
0x15f03:	lea	rbp, [rip + 0x205aae]
0x15f0a:	push	rbx
0x15f0b:	mov	r13d, edi
0x15f0e:	mov	r14, rsi
0x15f11:	sub	rbp, r12
0x15f14:	sub	rsp, 8
0x15f18:	sar	rbp, 3
0x15f1c:	call	0x1a98


0x15eb0:	sub	rsp, 8
0x15eb4:	mov	edi, 0xe
0x15eb9:	call	0x1dd0


0x15e50:	sub	rsp, 8
0x15e54:	xor	esi, esi
0x15e56:	call	0x1e20


0x15dd0:	push	r12
0x15dd2:	push	rbp
0x15dd3:	mov	rbp, rdi
0x15dd6:	push	rbx
0x15dd7:	call	0x1b70


0x15d80:	test	rdx, rdx
0x15d83:	jne	0x15da8


0x15d60:	sub	rsp, 8
0x15d64:	push	0
0x15d66:	push	qword ptr [rsp + 0x28]
0x15d6a:	push	qword ptr [rsp + 0x28]
0x15d6e:	push	qword ptr [rsp + 0x28]
0x15d72:	call	0x15950


0x15d40:	sub	rsp, 8
0x15d44:	push	1
0x15d46:	push	qword ptr [rsp + 0x20]
0x15d4a:	push	qword ptr [rsp + 0x20]
0x15d4e:	push	0
0x15d50:	call	0x15950


0x15d20:	sub	rsp, 8
0x15d24:	push	0
0x15d26:	push	r9
0x15d28:	mov	r9, rdx
0x15d2b:	call	0x154d0


0x15d00:	sub	rsp, 8
0x15d04:	mov	r9, rdx
0x15d07:	push	1
0x15d09:	push	r8
0x15d0b:	xor	r8d, r8d
0x15d0e:	call	0x154d0


0x15c60:	test	r8d, 0xfffffff8
0x15c67:	jne	0x15cf8


0x15c10:	push	rbx
0x15c11:	mov	rbx, rdi
0x15c14:	mov	rdi, qword ptr [rdi]
0x15c17:	test	rdi, rdi
0x15c1a:	je	0x15c21


0x15b80:	push	r13
0x15b82:	push	r12
0x15b84:	push	rbp
0x15b85:	push	rbx
0x15b86:	sub	rsp, 8
0x15b8a:	cmp	edi, 0x10
0x15b8d:	ja	0x15bf0


0x15a70:	mov	eax, edx
0x15a72:	push	r14
0x15a74:	push	r13
0x15a76:	and	eax, 1
0x15a79:	push	r12
0x15a7b:	push	rbp
0x15a7c:	cmp	eax, 1
0x15a7f:	push	rbx
0x15a80:	mov	rbx, rdi
0x15a83:	sbb	r14, r14
0x15a86:	mov	qword ptr [rdi], 0
0x15a8d:	mov	qword ptr [rdi + 8], 0
0x15a95:	and	r14d, 0xfd4fca
0x15a9c:	mov	qword ptr [rdi + 0x10], 0
0x15aa4:	mov	edi, 0x100
0x15aa9:	mov	r12, rsi
0x15aac:	mov	ebp, edx
0x15aae:	add	r14, 0x3b2fc
0x15ab5:	call	0x1da0


0x15950:	push	r15
0x15952:	push	r14
0x15954:	push	r13
0x15956:	push	r12
0x15958:	mov	r12, rdi
0x1595b:	push	rbp
0x1595c:	push	rbx
0x1595d:	mov	rbp, r8
0x15960:	mov	rbx, rdx
0x15963:	mov	rdx, rbp
0x15966:	sub	rsp, 0x28
0x1596a:	shr	rdx, 0x3f
0x1596e:	mov	rax, qword ptr [rsp + 0x70]
0x15973:	mov	edi, edx
0x15975:	mov	r8d, dword ptr [rsp + 0x78]
0x1597a:	shr	rax, 0x3f
0x1597e:	or	dil, al
0x15981:	jne	0x15a50


0x154d0:	push	r15
0x154d2:	push	r14
0x154d4:	mov	rax, r8
0x154d7:	push	r13
0x154d9:	push	r12
0x154db:	add	r8, rcx
0x154de:	push	rbp
0x154df:	push	rbx
0x154e0:	sub	rsp, 0x38
0x154e4:	test	rcx, rcx
0x154e7:	mov	ebx, dword ptr [rsp + 0x78]
0x154eb:	mov	r12, qword ptr [rsp + 0x70]
0x154f0:	mov	dword ptr [rsp + 0x28], ebx
0x154f4:	js	0x15830


0x15400:	push	r12
0x15402:	push	rbp
0x15403:	xor	eax, eax
0x15405:	push	rbx
0x15406:	mov	rbp, qword ptr [rdi + 0x20]
0x1540a:	mov	rbx, rdi
0x1540d:	mov	r12, qword ptr [rdi]
0x15410:	lea	rdi, [rbp + 8]
0x15414:	mov	rcx, rbp
0x15417:	mov	qword ptr [rbp], 0
0x1541f:	mov	qword ptr [rbp + 0xf8], 0
0x1542a:	and	rdi, 0xfffffffffffffff8
0x1542e:	sub	rcx, rdi
0x15431:	add	ecx, 0x100
0x15437:	shr	ecx, 3
0x1543a:	rep stosq	qword ptr [rdi], rax


0x153f0:	mov	rax, qword ptr [rip + 0x206f89]
0x153f7:	mov	qword ptr [rip + 0x206f82], rdi
0x153fe:	ret	


0x15380:	sub	rsp, 8
0x15384:	mov	rcx, qword ptr [rip + 0x206ff5]
0x1538b:	mov	r8, rdi
0x1538e:	mov	rdi, rdx
0x15391:	mov	rax, rcx
0x15394:	shr	rax, 0x19
0x15398:	and	eax, 1
0x1539b:	shl	eax, 4
0x1539e:	mov	edx, eax
0x153a0:	movzx	eax, byte ptr [rdi + 0x38]
0x153a4:	and	eax, 0xffffffef
0x153a7:	or	eax, edx
0x153a9:	mov	rdx, rsi
0x153ac:	mov	rsi, r8
0x153af:	or	eax, 0xffffff80
0x153b2:	mov	byte ptr [rdi + 0x38], al
0x153b5:	call	0x14280


0x14280:	push	r15
0x14282:	push	r14
0x14284:	push	r13
0x14286:	push	r12
0x14288:	push	rbp
0x14289:	push	rbx
0x1428a:	sub	rsp, 0x128
0x14291:	mov	qword ptr [rdi + 0x18], rcx
0x14295:	mov	qword ptr [rdi + 0x10], 0
0x1429d:	mov	rax, qword ptr fs:[0x28]
0x142a6:	mov	qword ptr [rsp + 0x118], rax
0x142ae:	xor	eax, eax
0x142b0:	movzx	eax, byte ptr [rdi + 0x38]
0x142b4:	mov	qword ptr [rsp + 8], rdi
0x142b9:	mov	qword ptr [rsp + 0x10], rsi
0x142be:	mov	qword ptr [rsp], rdx
0x142c2:	mov	qword ptr [rsp + 0x18], rcx
0x142c7:	mov	dword ptr [rsp + 0x4c], 0
0x142cf:	mov	qword ptr [rdi + 0x30], 0
0x142d7:	mov	rbx, qword ptr [rdi]
0x142da:	mov	byte ptr [rsp + 0x20], al
0x142de:	and	eax, 0xffffff90
0x142e1:	cmp	qword ptr [rdi + 8], 0xe7
0x142e9:	mov	byte ptr [rdi + 0x38], al
0x142ec:	jbe	0x150e6


0x14100:	push	r15
0x14102:	push	r14
0x14104:	mov	r14, rcx
0x14107:	push	r13
0x14109:	push	r12
0x1410b:	mov	r13, r9
0x1410e:	push	rbp
0x1410f:	push	rbx
0x14110:	mov	rbp, rdx
0x14113:	mov	r12, rdi
0x14116:	sub	rsp, 0x58
0x1411a:	mov	rbx, qword ptr [rsi]
0x1411d:	mov	rax, qword ptr fs:[0x28]
0x14126:	mov	qword ptr [rsp + 0x48], rax
0x1412b:	xor	eax, eax
0x1412d:	mov	qword ptr [rsp + 0x28], rsi
0x14132:	mov	qword ptr [rsp + 0x10], r8
0x14137:	mov	rax, qword ptr [rbx + 0xa8]
0x1413e:	mov	qword ptr [rsp + 0x20], rax
0x14143:	call	0x13f70


0x13f70:	push	r15
0x13f72:	push	r14
0x13f74:	mov	r15, rcx
0x13f77:	push	r13
0x13f79:	push	r12
0x13f7b:	mov	r13, rsi
0x13f7e:	push	rbp
0x13f7f:	push	rbx
0x13f80:	mov	rbx, r9
0x13f83:	mov	rbp, rdx
0x13f86:	mov	r12, r8
0x13f89:	sub	rsp, 0x48
0x13f8d:	mov	rax, qword ptr fs:[0x28]
0x13f96:	mov	qword ptr [rsp + 0x38], rax
0x13f9b:	xor	eax, eax
0x13f9d:	mov	rax, qword ptr [rsi]
0x13fa0:	mov	qword ptr [rsp], rdi
0x13fa4:	mov	qword ptr [rsp + 0x10], rax
0x13fa9:	call	0x12a90


0x12a90:	push	r15
0x12a92:	push	r14
0x12a94:	push	r13
0x12a96:	push	r12
0x12a98:	push	rbp
0x12a99:	push	rbx
0x12a9a:	sub	rsp, 0x128
0x12aa1:	mov	qword ptr [rsp + 0x20], rcx
0x12aa6:	movzx	ecx, byte ptr [rdx + 8]
0x12aaa:	mov	rax, qword ptr fs:[0x28]
0x12ab3:	mov	qword ptr [rsp + 0x118], rax
0x12abb:	xor	eax, eax
0x12abd:	mov	rax, qword ptr [rsi]
0x12ac0:	mov	qword ptr [rsp + 0x18], rdx
0x12ac5:	mov	qword ptr [rsp + 0x40], r9
0x12aca:	cmp	cl, 0x24
0x12acd:	mov	qword ptr [rsp + 0x10], rax
0x12ad2:	ja	0x12b90


0x129d0:	push	r14
0x129d2:	mov	r14, rdi
0x129d5:	push	r13
0x129d7:	mov	r13, rsi
0x129da:	push	r12
0x129dc:	mov	r12, -2
0x129e3:	push	rbp
0x129e4:	mov	rbp, rdx
0x129e7:	push	rbx
0x129e8:	mov	rbx, -1
0x129ef:	nop	
0x129f0:	mov	rdx, rbp
0x129f3:	mov	rsi, r14
0x129f6:	mov	rdi, r13
0x129f9:	call	0x122d0


0x122d0:	push	r15
0x122d2:	push	r14
0x122d4:	push	r13
0x122d6:	push	r12
0x122d8:	push	rbp
0x122d9:	push	rbx
0x122da:	mov	rbp, rdi
0x122dd:	sub	rsp, 0x38
0x122e1:	mov	r14, qword ptr [rsi + 0x48]
0x122e5:	mov	rax, qword ptr fs:[0x28]
0x122ee:	mov	qword ptr [rsp + 0x28], rax
0x122f3:	xor	eax, eax
0x122f5:	cmp	qword ptr [rsi + 0x68], r14
0x122f9:	jle	0x12390


0x12070:	push	r14
0x12072:	push	r13
0x12074:	mov	r10, rsi
0x12077:	push	r12
0x12079:	push	rbp
0x1207a:	movsxd	r11, ecx
0x1207d:	push	rbx
0x1207e:	mov	rbp, rdx
0x12081:	mov	rbx, rdi
0x12084:	sub	rsp, 0x20
0x12088:	mov	r12, qword ptr [rsi + 0x48]
0x1208c:	mov	rax, qword ptr fs:[0x28]
0x12095:	mov	qword ptr [rsp + 0x18], rax
0x1209a:	xor	eax, eax
0x1209c:	cmp	dword ptr [rsi + 0x90], 1
0x120a3:	je	0x120f8


0x11820:	push	r15
0x11822:	push	r14
0x11824:	mov	rax, rdi
0x11827:	push	r13
0x11829:	push	r12
0x1182b:	mov	r13, rsi
0x1182e:	push	rbp
0x1182f:	push	rbx
0x11830:	mov	rbp, rdx
0x11833:	mov	rbx, rcx
0x11836:	lea	rcx, [rdx*8]
0x1183e:	sub	rsp, 0xa8
0x11845:	mov	r12, qword ptr [rax + 0x98]
0x1184c:	mov	rax, qword ptr [rax + 0xb8]
0x11853:	mov	qword ptr [rsp + 8], rdi
0x11858:	mov	qword ptr [rsp + 0x18], rcx
0x1185d:	mov	rdi, qword ptr fs:[0x28]
0x11866:	mov	qword ptr [rsp + 0x98], rdi
0x1186e:	xor	edi, edi
0x11870:	mov	rdx, qword ptr [rax + rdx*8]
0x11874:	mov	dword ptr [rsp + 0x5c], 0
0x1187c:	mov	rcx, qword ptr [rbx + 8]
0x11880:	test	rdx, rdx
0x11883:	je	0x11ad8


0x100f0:	push	r15
0x100f2:	push	r14
0x100f4:	push	r13
0x100f6:	push	r12
0x100f8:	mov	r13, r9
0x100fb:	push	rbp
0x100fc:	push	rbx
0x100fd:	mov	rbp, rcx
0x10100:	mov	ecx, 0x20
0x10105:	mov	r12, r8
0x10108:	sub	rsp, 0x238
0x1010f:	mov	rbx, qword ptr [rdi]
0x10112:	mov	rax, qword ptr [rsp + 0x278]
0x1011a:	mov	qword ptr [rsp + 0x48], rdi
0x1011f:	mov	qword ptr [rsp + 0x78], rsi
0x10124:	mov	rsi, rdi
0x10127:	lea	rdi, [rsp + 0x120]
0x1012f:	mov	qword ptr [rsp + 0x88], rdx
0x10137:	mov	qword ptr [rsp + 0x38], rbx
0x1013c:	mov	qword ptr [rsp + 0xb8], rax
0x10144:	mov	qword ptr [rsp], rdi
0x10148:	mov	rax, qword ptr fs:[0x28]
0x10151:	mov	qword ptr [rsp + 0x228], rax
0x10159:	xor	eax, eax
0x1015b:	rep stosq	qword ptr [rdi], rax


0xfdb0:	push	r15
0xfdb2:	push	r14
0xfdb4:	mov	r14, rdi
0xfdb7:	push	r13
0xfdb9:	push	r12
0xfdbb:	mov	r13, rsi
0xfdbe:	push	rbp
0xfdbf:	push	rbx
0xfdc0:	sub	rsp, 0x68
0xfdc4:	mov	r15, qword ptr [rsi + 0x18]
0xfdc8:	mov	rbx, qword ptr [rsi + 0x10]
0xfdcc:	mov	qword ptr [rsp], rdi
0xfdd0:	mov	edi, 8
0xfdd5:	mov	qword ptr [rsp + 0x40], 1
0xfdde:	mov	rax, qword ptr fs:[0x28]
0xfde7:	mov	qword ptr [rsp + 0x58], rax
0xfdec:	xor	eax, eax
0xfdee:	mov	qword ptr [rsp + 0x48], 1
0xfdf7:	call	0x1da0


0xfbc0:	push	r15
0xfbc2:	push	r14
0xfbc4:	push	r13
0xfbc6:	push	r12
0xfbc8:	mov	r13, rdi
0xfbcb:	push	rbp
0xfbcc:	push	rbx
0xfbcd:	mov	rbx, rsi
0xfbd0:	sub	rsp, 0x38
0xfbd4:	mov	r12, qword ptr [rsi + 0x48]
0xfbd8:	mov	r14, qword ptr [rsi + 0xb8]
0xfbdf:	mov	rax, qword ptr fs:[0x28]
0xfbe8:	mov	qword ptr [rsp + 0x28], rax
0xfbed:	xor	eax, eax
0xfbef:	mov	r15, qword ptr [rsi + 0x98]
0xfbf6:	lea	rbp, [r12*8]
0xfbfe:	add	r14, rbp
0xfc01:	cmp	qword ptr [rsi + 0xc0], r12
0xfc08:	jge	0xfc50


0xf2d0:	push	r15
0xf2d2:	push	r14
0xf2d4:	push	r13
0xf2d6:	push	r12
0xf2d8:	push	rbp
0xf2d9:	push	rbx
0xf2da:	sub	rsp, 0xb8
0xf2e1:	mov	r15, qword ptr [rdi + 0x48]
0xf2e5:	mov	rax, qword ptr fs:[0x28]
0xf2ee:	mov	qword ptr [rsp + 0xa8], rax
0xf2f6:	xor	eax, eax
0xf2f8:	cmp	qword ptr [rsi], 0
0xf2fc:	mov	rax, qword ptr [rdi + 0x98]
0xf303:	mov	qword ptr [rsp + 0x48], rsi
0xf308:	mov	qword ptr [rsp + 0x40], rdx
0xf30d:	mov	qword ptr [rsp + 0x38], rax
0xf312:	jle	0xf640


0xf130:	push	r15
0xf132:	push	r14
0xf134:	mov	r14, rcx
0xf137:	push	r13
0xf139:	push	r12
0xf13b:	mov	r13, rsi
0xf13e:	push	rbp
0xf13f:	push	rbx
0xf140:	lea	rsi, [rdx + 0x10]
0xf144:	mov	rbp, rdx
0xf147:	mov	r9, r8
0xf14a:	mov	r12, r8
0xf14d:	sub	rsp, 0x20
0xf151:	mov	rcx, qword ptr [rdx + 8]
0xf155:	mov	r8, r14
0xf158:	push	8
0xf15a:	mov	rdx, qword ptr [rdx]
0xf15d:	mov	rbx, rdi
0xf160:	call	0xe0e0


0xe840:	push	rbp
0xe841:	mov	rbp, rsp
0xe844:	push	r15
0xe846:	push	r14
0xe848:	push	r13
0xe84a:	push	r12
0xe84c:	mov	r13, rcx
0xe84f:	push	rbx
0xe850:	mov	r12, rsi
0xe853:	sub	rsp, 0xb8
0xe85a:	mov	qword ptr [rbp - 0x98], rdx
0xe861:	mov	qword ptr [rbp - 0x50], 0
0xe869:	mov	rax, qword ptr fs:[0x28]
0xe872:	mov	qword ptr [rbp - 0x38], rax
0xe876:	xor	eax, eax
0xe878:	mov	rax, qword ptr [rdi]
0xe87b:	test	r8b, r8b
0xe87e:	mov	qword ptr [rbp - 0x48], 2
0xe886:	mov	qword ptr [rbp - 0x40], 0
0xe88e:	mov	qword ptr [rbp - 0x90], rax
0xe895:	je	0xf03d


0xe0e0:	push	r15
0xe0e2:	push	r14
0xe0e4:	mov	r15, rdi
0xe0e7:	push	r13
0xe0e9:	push	r12
0xe0eb:	push	rbp
0xe0ec:	push	rbx
0xe0ed:	mov	rbp, rcx
0xe0f0:	mov	rbx, rdx
0xe0f3:	sub	rsp, 0xd8
0xe0fa:	mov	rcx, qword ptr [rdi + 0x98]
0xe101:	mov	r13, qword ptr [rsi + 8]
0xe105:	mov	rax, qword ptr fs:[0x28]
0xe10e:	mov	qword ptr [rsp + 0xc8], rax
0xe116:	xor	eax, eax
0xe118:	mov	rax, rdx
0xe11b:	mov	qword ptr [rsp + 0x60], rsi
0xe120:	mov	qword ptr [rsp + 0x78], r8
0xe125:	shl	rax, 4
0xe129:	add	rax, qword ptr [rcx]
0xe12c:	mov	qword ptr [rsp + 0x40], r9
0xe131:	mov	qword ptr [rsp + 0x30], rcx
0xe136:	mov	dword ptr [rsp + 0x88], 0
0xe141:	mov	rax, qword ptr [rax]
0xe144:	mov	qword ptr [rsp + 0x48], rax
0xe149:	movsxd	rax, dword ptr [rdi + 0xe0]
0xe150:	add	rax, r9
0xe153:	cmp	rax, r13
0xe156:	jge	0xe776


0xde80:	shl	rdx, 4
0xde84:	push	r13
0xde86:	push	r12
0xde88:	lea	r9, [rdi + rdx]
0xde8c:	push	rbp
0xde8d:	push	rbx
0xde8e:	sub	rsp, 8
0xde92:	movzx	r11d, byte ptr [r9 + 8]
0xde97:	cmp	r11b, 7
0xde9b:	je	0xdfb0


0xd950:	push	r15
0xd952:	push	r14
0xd954:	mov	rax, rdi
0xd957:	push	r13
0xd959:	push	r12
0xd95b:	push	rbp
0xd95c:	push	rbx
0xd95d:	xor	ebx, ebx
0xd95f:	mov	rbp, rcx
0xd962:	sub	rsp, 0x178
0xd969:	mov	rax, qword ptr [rax]
0xd96c:	mov	qword ptr [rsp + 0x30], rdi
0xd971:	mov	qword ptr [rsp + 0x20], rsi
0xd976:	mov	rdi, qword ptr fs:[0x28]
0xd97f:	mov	qword ptr [rsp + 0x168], rdi
0xd987:	xor	edi, edi
0xd989:	cmp	dword ptr [rax + 0xb4], 1
0xd990:	mov	qword ptr [rsp + 0x28], rdx
0xd995:	mov	qword ptr [rsp + 8], rax
0xd99a:	jne	0xd9b3


0xd6e0:	push	r15
0xd6e2:	push	r14
0xd6e4:	mov	r14, rdx
0xd6e7:	push	r13
0xd6e9:	push	r12
0xd6eb:	mov	r13, rcx
0xd6ee:	push	rbp
0xd6ef:	push	rbx
0xd6f0:	mov	rbp, rdi
0xd6f3:	mov	edi, 0x20
0xd6f8:	mov	r12d, r8d
0xd6fb:	sub	rsp, 0x58
0xd6ff:	mov	qword ptr [rsp], rsi
0xd703:	mov	esi, 1
0xd708:	mov	qword ptr [rsp + 8], r9
0xd70d:	mov	rax, qword ptr fs:[0x28]
0xd716:	mov	qword ptr [rsp + 0x48], rax
0xd71b:	xor	eax, eax
0xd71d:	mov	qword ptr [rsp + 0x18], 0
0xd726:	call	0x1d30


0xced0:	push	r14
0xced2:	push	r13
0xced4:	mov	r13, rcx
0xced7:	push	r12
0xced9:	push	rbp
0xceda:	mov	r12, r9
0xcedd:	push	rbx
0xcede:	mov	rbp, rdi
0xcee1:	mov	rbx, rsi
0xcee4:	sub	rsp, 0x10
0xcee8:	test	qword ptr [rsp + 0x40], 0x400000
0xcef1:	je	0xcf18


0xce80:	push	rbp
0xce81:	push	rbx
0xce82:	mov	rbp, rdi
0xce85:	mov	rdi, rsi
0xce88:	mov	rbx, rsi
0xce8b:	sub	rsp, 8
0xce8f:	call	0x1c10


0xcde0:	push	r12
0xcde2:	push	rbp
0xcde3:	push	rbx
0xcde4:	mov	rax, qword ptr [rdi]
0xcde7:	sub	rax, 1
0xcdeb:	test	rax, rax
0xcdee:	mov	qword ptr [rdi], rax
0xcdf1:	js	0xce55


0xcd90:	push	r12
0xcd92:	push	rbp
0xcd93:	mov	rbp, rdi
0xcd96:	push	rbx
0xcd97:	cmp	qword ptr [rdi], 0
0xcd9b:	jle	0xcdd2


0xcd00:	cmp	byte ptr [rsi + 0x30], 0x10
0xcd04:	je	0xcd68


0xc160:	push	r15
0xc162:	push	r14
0xc164:	mov	r15, rdi
0xc167:	push	r13
0xc169:	push	r12
0xc16b:	mov	edi, 0x3800
0xc170:	push	rbp
0xc171:	push	rbx
0xc172:	sub	rsp, 0x108
0xc179:	mov	rax, qword ptr fs:[0x28]
0xc182:	mov	qword ptr [rsp + 0xf8], rax
0xc18a:	xor	eax, eax
0xc18c:	mov	qword ptr [rsp + 8], rsi
0xc191:	call	0x1da0


0xbf20:	push	r15
0xbf22:	push	r14
0xbf24:	mov	r14, rdx
0xbf27:	push	r13
0xbf29:	push	r12
0xbf2b:	lea	rdx, [rsi + rsi*2]
0xbf2f:	push	rbp
0xbf30:	push	rbx
0xbf31:	pxor	xmm0, xmm0
0xbf35:	sub	rsp, 0x48
0xbf39:	mov	rax, qword ptr fs:[0x28]
0xbf42:	mov	qword ptr [rsp + 0x38], rax
0xbf47:	xor	eax, eax
0xbf49:	mov	rax, qword ptr [rdi + 0x38]
0xbf4d:	mov	qword ptr [rsp + 0x30], 0
0xbf56:	movaps	xmmword ptr [rsp + 0x20], xmm0
0xbf5b:	mov	qword ptr [rsp + 0x10], rcx
0xbf60:	lea	rbp, [rax + rdx*8]
0xbf64:	mov	r10, qword ptr [rbp + 8]
0xbf68:	test	r10, r10
0xbf6b:	jle	0xc152


0xb780:	push	r15
0xb782:	push	r14
0xb784:	mov	r15, rsi
0xb787:	push	r13
0xb789:	push	r12
0xb78b:	mov	r10d, edx
0xb78e:	push	rbp
0xb78f:	push	rbx
0xb790:	mov	rbp, rsi
0xb793:	mov	rbx, rdi
0xb796:	sub	rsp, 0x48
0xb79a:	mov	rax, qword ptr fs:[0x28]
0xb7a3:	mov	qword ptr [rsp + 0x38], rax
0xb7a8:	xor	eax, eax
0xb7aa:	mov	rax, qword ptr [rdi + 0x28]
0xb7ae:	sub	rbp, rax
0xb7b1:	cmp	rax, rsi
0xb7b4:	jle	0xb816


0xb6b0:	push	r12
0xb6b2:	mov	r12, rdx
0xb6b5:	push	rbp
0xb6b6:	push	rbx
0xb6b7:	mov	edx, dword ptr [rdi + 0xa0]
0xb6bd:	mov	rbx, rsi
0xb6c0:	mov	rsi, rcx
0xb6c3:	mov	rbp, rdi
0xb6c6:	call	0xb4b0


0xb5a0:	mov	rax, qword ptr [rdi + 8]
0xb5a4:	movzx	ecx, byte ptr [rax + rdx]
0xb5a8:	movzx	eax, byte ptr [rsi + 8]
0xb5ac:	cmp	al, 3
0xb5ae:	je	0xb668


0xb4b0:	push	rbp
0xb4b1:	push	rbx
0xb4b2:	mov	rbp, rdi
0xb4b5:	sub	rsp, 8
0xb4b9:	test	rsi, rsi
0xb4bc:	js	0xb510


0xb360:	push	r15
0xb362:	push	r14
0xb364:	push	r13
0xb366:	push	r12
0xb368:	push	rbp
0xb369:	push	rbx
0xb36a:	sub	rsp, 0x28
0xb36e:	cmp	qword ptr [rsi], 0
0xb372:	mov	r13, qword ptr [rdi + 0x98]
0xb379:	jle	0xb440


0xafc0:	push	r15
0xafc2:	push	r14
0xafc4:	push	r13
0xafc6:	push	r12
0xafc8:	mov	r12, rdx
0xafcb:	push	rbp
0xafcc:	push	rbx
0xafcd:	mov	rbx, rdi
0xafd0:	mov	rbp, rsi
0xafd3:	xor	esi, esi
0xafd5:	sub	rsp, 0x78
0xafd9:	mov	rdi, qword ptr [rdi + 0xc8]
0xafe0:	mov	rax, qword ptr fs:[0x28]
0xafe9:	mov	qword ptr [rsp + 0x68], rax
0xafee:	xor	eax, eax
0xaff0:	mov	qword ptr [rsp + 0x20], rcx
0xaff5:	mov	dword ptr [rsp + 0x2c], r8d
0xaffa:	mov	rdx, rdi
0xaffd:	cmp	rsi, rdx
0xb000:	jge	0xb057


0xaee0:	push	r15
0xaee2:	push	r14
0xaee4:	push	r13
0xaee6:	push	r12
0xaee8:	push	rbp
0xaee9:	push	rbx
0xaeea:	sub	rsp, 0x48
0xaeee:	mov	rax, qword ptr fs:[0x28]
0xaef7:	mov	qword ptr [rsp + 0x38], rax
0xaefc:	xor	eax, eax
0xaefe:	test	rcx, rcx
0xaf01:	jle	0xaf96


0xace0:	push	r15
0xace2:	push	r14
0xace4:	push	r13
0xace6:	push	r12
0xace8:	push	rbp
0xace9:	push	rbx
0xacea:	sub	rsp, 8
0xacee:	mov	rbp, qword ptr [rdx + 8]
0xacf2:	test	rbp, rbp
0xacf5:	je	0xaed0


0xaa20:	push	r15
0xaa22:	push	r14
0xaa24:	push	r13
0xaa26:	push	r12
0xaa28:	push	rbp
0xaa29:	push	rbx
0xaa2a:	sub	rsp, 0x28
0xaa2e:	mov	r10, qword ptr [rdx + 8]
0xaa32:	test	r10, r10
0xaa35:	je	0xacbf


0xa8c0:	test	rsi, rsi
0xa8c3:	push	r14
0xa8c5:	push	r13
0xa8c7:	push	r12
0xa8c9:	push	rbp
0xa8ca:	push	rbx
0xa8cb:	je	0xa975


0xa830:	push	r12
0xa832:	push	rbp
0xa833:	push	rbx
0xa834:	mov	rax, qword ptr [rsi + 8]
0xa838:	mov	qword ptr [rdi + 8], rax
0xa83c:	mov	r12, qword ptr [rsi + 8]
0xa840:	test	r12, r12
0xa843:	jle	0xa880


0xa790:	push	rbp
0xa791:	push	rbx
0xa792:	mov	rbp, rdi
0xa795:	mov	rbx, rsi
0xa798:	sub	rsp, 0x18
0xa79c:	mov	rdx, qword ptr [rsi + 8]
0xa7a0:	mov	rax, qword ptr fs:[0x28]
0xa7a9:	mov	qword ptr [rsp + 8], rax
0xa7ae:	xor	eax, eax
0xa7b0:	mov	dword ptr [rsp + 4], 0
0xa7b8:	test	rdx, rdx
0xa7bb:	je	0xa7c3


0xa550:	push	r15
0xa552:	push	r14
0xa554:	push	r13
0xa556:	push	r12
0xa558:	mov	r13, rdx
0xa55b:	push	rbp
0xa55c:	push	rbx
0xa55d:	sub	rsp, 0x48
0xa561:	mov	rbx, qword ptr [rsi]
0xa564:	mov	rbp, qword ptr [rdx + 8]
0xa568:	mov	rax, qword ptr fs:[0x28]
0xa571:	mov	qword ptr [rsp + 0x38], rax
0xa576:	xor	eax, eax
0xa578:	test	byte ptr [rsi + 0x38], 0x10
0xa57c:	mov	qword ptr [rsp + 0x18], rdi
0xa581:	je	0xa6f8


0xa470:	push	r14
0xa472:	push	r13
0xa474:	lea	r13, [rsi + 0x70]
0xa478:	push	r12
0xa47a:	push	rbp
0xa47b:	lea	r12, [rsi + 0x80]
0xa482:	push	rbx
0xa483:	mov	rbx, rdi
0xa486:	sub	rsp, 0x10
0xa48a:	mov	rbp, qword ptr [rdi]
0xa48d:	mov	rax, qword ptr fs:[0x28]
0xa496:	mov	qword ptr [rsp + 8], rax
0xa49b:	xor	eax, eax
0xa49d:	mov	r14, rsp
0xa4a0:	lea	r8, [rbx + 0x28]
0xa4a4:	xor	ecx, ecx
0xa4a6:	xor	edx, edx
0xa4a8:	mov	rsi, r12
0xa4ab:	mov	rdi, r13
0xa4ae:	call	0xa390


0xa390:	push	rbx
0xa391:	mov	rbx, rdi
0xa394:	sub	rsp, 0x20
0xa398:	mov	eax, dword ptr [rsi]
0xa39a:	cmp	eax, 0xf
0xa39d:	je	0xa418


0xa1e0:	mov	r9, qword ptr [rsi + 8]
0xa1e4:	xor	eax, eax
0xa1e6:	test	r9, r9
0xa1e9:	je	0xa2a8


0xa080:	push	r15
0xa082:	push	r14
0xa084:	mov	r14, rdi
0xa087:	push	r13
0xa089:	push	r12
0xa08b:	mov	r15, rsi
0xa08e:	push	rbp
0xa08f:	push	rbx
0xa090:	mov	rbp, rdx
0xa093:	mov	ebx, ecx
0xa095:	sub	rsp, 0x38
0xa099:	mov	r12, qword ptr [rsi + 8]
0xa09d:	mov	rax, qword ptr fs:[0x28]
0xa0a6:	mov	qword ptr [rsp + 0x28], rax
0xa0ab:	xor	eax, eax
0xa0ad:	mov	qword ptr [rsp + 0x18], 0
0xa0b6:	lea	rdi, [r12*8]
0xa0be:	mov	qword ptr [rsp + 0x10], r12
0xa0c3:	call	0x1da0


0x9dd0:	push	r15
0x9dd2:	push	r14
0x9dd4:	mov	r15, rsi
0x9dd7:	push	r13
0x9dd9:	push	r12
0x9ddb:	push	rbp
0x9ddc:	push	rbx
0x9ddd:	lea	rbx, [rdx + rdx*2]
0x9de1:	mov	rbp, rdx
0x9de4:	sub	rsp, 0x68
0x9de8:	mov	r12, qword ptr [rsi + 0x28]
0x9dec:	shl	rbx, 3
0x9df0:	mov	rax, qword ptr fs:[0x28]
0x9df9:	mov	qword ptr [rsp + 0x58], rax
0x9dfe:	xor	eax, eax
0x9e00:	mov	qword ptr [rsp + 0x10], rdi
0x9e05:	mov	dword ptr [rsp + 0x1c], ecx
0x9e09:	add	r12, rbx
0x9e0c:	mov	rax, qword ptr [r12 + 8]
0x9e11:	mov	qword ptr [rsp + 0x28], 0
0x9e1a:	lea	rdi, [rax + 1]
0x9e1e:	mov	qword ptr [rsp + 0x20], rdi
0x9e23:	shl	rdi, 3
0x9e27:	call	0x1da0


0x9bf0:	test	rsi, rsi
0x9bf3:	je	0x9ce8


0x9980:	push	r15
0x9982:	push	r14
0x9984:	push	r13
0x9986:	push	r12
0x9988:	push	rbp
0x9989:	push	rbx
0x998a:	xor	ebx, ebx
0x998c:	sub	rsp, 0x48
0x9990:	mov	rax, qword ptr [rdi + 0x98]
0x9997:	mov	r15, qword ptr [rdi + 0xc8]
0x999e:	mov	r12, qword ptr [rsp + 0x80]
0x99a6:	mov	qword ptr [rsp + 8], rax
0x99ab:	mov	rbp, r15
0x99ae:	cmp	rbx, rbp
0x99b1:	jge	0x9a0b


0x9920:	movzx	eax, byte ptr [rsi + 0x30]
0x9924:	mov	rdx, qword ptr [rsi + 8]
0x9928:	cmp	al, 0xb
0x992a:	je	0x9970


0x9890:	movzx	eax, byte ptr [rsi + 0x30]
0x9894:	cmp	al, 4
0x9896:	je	0x98f0


0x9850:	mov	rax, qword ptr [rdi]
0x9853:	cmp	rax, rdx
0x9856:	jle	0x9882


0x9750:	push	r15
0x9752:	push	r14
0x9754:	lea	r14, [rsi + 0x10]
0x9758:	push	r13
0x975a:	push	r12
0x975c:	mov	r15, rcx
0x975f:	push	rbp
0x9760:	push	rbx
0x9761:	mov	r12, rdi
0x9764:	mov	rbp, rsi
0x9767:	mov	rbx, rdx
0x976a:	mov	r13d, r8d
0x976d:	sub	rsp, 8
0x9771:	mov	rdi, qword ptr [rbp + 8]
0x9775:	mov	rdx, rbx
0x9778:	mov	rsi, r14
0x977b:	call	0x96d0


0x96d0:	xor	eax, eax
0x96d2:	test	rdi, rdi
0x96d5:	jle	0x9715


0x9670:	mov	rdx, qword ptr [rdi + 8]
0x9674:	xor	eax, eax
0x9676:	cmp	rdx, qword ptr [rsi + 8]
0x967a:	je	0x9680


0x9620:	mov	rcx, qword ptr [rdi + 0x30]
0x9624:	lea	rax, [rsi + 1]
0x9628:	cmp	rax, rcx
0x962b:	jge	0x9668


0x9560:	push	r14
0x9562:	push	r13
0x9564:	mov	r14, rdi
0x9567:	push	r12
0x9569:	push	rbp
0x956a:	push	rbx
0x956b:	cmp	qword ptr [rdi + 0xe8], 0
0x9573:	jle	0x95f9


0x9400:	push	r14
0x9402:	push	r13
0x9404:	push	r12
0x9406:	mov	r12, rdi
0x9409:	push	rbp
0x940a:	push	rbx
0x940b:	mov	rdi, qword ptr [rdi]
0x940e:	test	rdi, rdi
0x9411:	je	0x943e


0x93c0:	push	rbx
0x93c1:	mov	rbx, rdi
0x93c4:	mov	rdi, qword ptr [rdi + 0x10]
0x93c8:	call	0x1b00


0x9360:	push	rbx
0x9361:	mov	rbx, rdi
0x9364:	mov	rdi, qword ptr [rdi + 0x30]
0x9368:	call	0x1b00


0x90e0:	push	r15
0x90e2:	push	r14
0x90e4:	mov	r9, rsi
0x90e7:	push	r13
0x90e9:	push	r12
0x90eb:	mov	r14, rdi
0x90ee:	push	rbp
0x90ef:	push	rbx
0x90f0:	mov	r13, rdx
0x90f3:	mov	ebp, r8d
0x90f6:	sub	rsp, 0x18
0x90fa:	mov	qword ptr [rsp + 8], rcx
0x90ff:	mov	r8, qword ptr [r14]
0x9102:	mov	rax, r9
0x9105:	mov	rdi, qword ptr [r14 + 0x28]
0x9109:	shl	rax, 4
0x910d:	mov	r12, r13
0x9110:	add	rax, r8
0x9113:	cmp	byte ptr [rax + 8], 4
0x9117:	je	0x92d0


0x9040:	push	r13
0x9042:	push	r12
0x9044:	mov	r13, rsi
0x9047:	push	rbp
0x9048:	push	rbx
0x9049:	shl	r13, 4
0x904d:	mov	rbp, rsi
0x9050:	mov	r12d, edx
0x9053:	mov	rbx, rdi
0x9056:	sub	rsp, 8
0x905a:	mov	rax, qword ptr [rdi]
0x905d:	mov	rsi, qword ptr [rax + r13]
0x9061:	mov	rdx, qword ptr [rax + r13 + 8]
0x9066:	call	0x8e70


0x8e70:	push	r15
0x8e72:	push	r14
0x8e74:	mov	r14, rsi
0x8e77:	push	r13
0x8e79:	push	r12
0x8e7b:	push	rbp
0x8e7c:	push	rbx
0x8e7d:	mov	rbx, rdi
0x8e80:	sub	rsp, 0x18
0x8e84:	mov	rsi, qword ptr [rdi + 0x10]
0x8e88:	mov	rbp, qword ptr [rdi + 8]
0x8e8c:	cmp	rsi, rbp
0x8e8f:	jae	0x8f40


0x8e50:	lea	rdi, [rsi + 0x28]
0x8e54:	sub	rsp, 8
0x8e58:	call	0x8e20


0x8e20:	mov	eax, dword ptr [rdi + 8]
0x8e23:	and	eax, 0x400ff
0x8e28:	cmp	eax, 6
0x8e2b:	je	0x8e40


0x8df0:	push	rbx
0x8df1:	mov	rbx, rdi
0x8df4:	mov	rdi, qword ptr [rdi]
0x8df7:	call	0x1b00


0x8d60:	push	r12
0x8d62:	push	rbp
0x8d63:	mov	rbp, rsi
0x8d66:	push	rbx
0x8d67:	mov	rax, qword ptr [rdi + 0x40]
0x8d6b:	mov	rbx, rdi
0x8d6e:	mov	r12, qword ptr [rdi + 0xc0]
0x8d75:	cmp	rax, rsi
0x8d78:	jg	0x8da0


0x8c10:	push	rbp
0x8c11:	push	rbx
0x8c12:	movabs	rdx, 0xffffffffffffffe
0x8c1c:	sub	rsp, 8
0x8c20:	mov	rax, qword ptr [rdi + 0x40]
0x8c24:	cmp	rax, rdx
0x8c27:	ja	0x8d38


0x85f0:	push	r15
0x85f2:	push	r14
0x85f4:	mov	r14, rdi
0x85f7:	push	r13
0x85f9:	push	r12
0x85fb:	push	rbp
0x85fc:	push	rbx
0x85fd:	sub	rsp, 0xa8
0x8604:	mov	rbx, qword ptr [rdi + 0x58]
0x8608:	mov	r15, qword ptr [rdi + 0x30]
0x860c:	mov	rax, qword ptr fs:[0x28]
0x8615:	mov	qword ptr [rsp + 0x98], rax
0x861d:	xor	eax, eax
0x861f:	cmp	qword ptr [rdi + 0x40], rbx
0x8623:	cmovle	rbx, qword ptr [rdi + 0x40]
0x8628:	cmp	byte ptr [rdi + 0x8a], 0
0x862f:	jne	0x863c


0x8420:	push	r15
0x8422:	push	r14
0x8424:	push	r13
0x8426:	push	r12
0x8428:	push	rbp
0x8429:	push	rbx
0x842a:	mov	rbx, rdi
0x842d:	sub	rsp, 0x68
0x8431:	mov	r12, qword ptr [rdi + 0x58]
0x8435:	mov	rbp, qword ptr [rdi + 0x30]
0x8439:	mov	rax, qword ptr fs:[0x28]
0x8442:	mov	qword ptr [rsp + 0x58], rax
0x8447:	xor	eax, eax
0x8449:	cmp	qword ptr [rdi + 0x40], r12
0x844d:	cmovle	r12, qword ptr [rdi + 0x40]
0x8452:	cmp	r12, rbp
0x8455:	jle	0x84e4


0x83b0:	push	r12
0x83b2:	mov	r12, qword ptr [rdi + 0x58]
0x83b6:	cmp	qword ptr [rdi + 0x40], r12
0x83ba:	push	rbp
0x83bb:	mov	rbp, rdi
0x83be:	cmovle	r12, qword ptr [rdi + 0x40]
0x83c3:	push	rbx
0x83c4:	mov	rbx, qword ptr [rdi + 0x30]
0x83c8:	cmp	r12, rbx
0x83cb:	jle	0x8405


0x82c0:	push	r14
0x82c2:	push	r13
0x82c4:	mov	r14, rdi
0x82c7:	push	r12
0x82c9:	push	rbp
0x82ca:	mov	r12, rdx
0x82cd:	push	rbx
0x82ce:	mov	rbx, qword ptr [rsi + 0x10]
0x82d2:	mov	rbp, rsi
0x82d5:	mov	qword ptr [rsi], rdx
0x82d8:	mov	qword ptr [rsi + 0x28], 0
0x82e0:	lea	r13, [rsi + 0x20]
0x82e4:	lea	rdi, [rbx*8]
0x82ec:	mov	qword ptr [rsi + 0x20], rbx
0x82f0:	call	0x1da0


0x8190:	push	rbp
0x8191:	push	rbx
0x8192:	mov	rbp, rsi
0x8195:	mov	rbx, rdi
0x8198:	sub	rsp, 8
0x819c:	mov	rdx, qword ptr [rdi]
0x819f:	test	rdx, rdx
0x81a2:	je	0x81c8


0x8120:	push	rbp
0x8121:	push	rbx
0x8122:	mov	rbp, rsi
0x8125:	mov	rbx, rdi
0x8128:	sub	rsp, 8
0x812c:	mov	rsi, qword ptr [rdi + 8]
0x8130:	cmp	qword ptr [rdi], rsi
0x8133:	mov	rax, qword ptr [rdi + 0x10]
0x8137:	je	0x8158


0x8080:	push	rbp
0x8081:	push	rbx
0x8082:	mov	rbp, rsi
0x8085:	mov	rbx, rdi
0x8088:	sub	rsp, 8
0x808c:	cmp	dword ptr [rdi + 0x90], 1
0x8093:	jle	0x80dd


0x8020:	push	r12
0x8022:	mov	r12, rsi
0x8025:	push	rbp
0x8026:	mov	rbp, rdx
0x8029:	push	rbx
0x802a:	mov	rbx, rdi
0x802d:	jmp	0x8033


0x7fb0:	push	r12
0x7fb2:	mov	r12, rsi
0x7fb5:	push	rbp
0x7fb6:	mov	rbp, rdx
0x7fb9:	push	rbx
0x7fba:	mov	rbx, rdi
0x7fbd:	jmp	0x7fc3


0x7f40:	mov	rax, qword ptr [rdi + 0xd8]
0x7f47:	lea	rsi, [rsi + rsi*4]
0x7f4b:	lea	rax, [rax + rsi*8]
0x7f4f:	mov	r10, qword ptr [rax + 0x10]
0x7f53:	cmp	r10, r8
0x7f56:	jg	0x7fa0


0x7d10:	push	r15
0x7d12:	push	r14
0x7d14:	mov	r9, rdx
0x7d17:	push	r13
0x7d19:	push	r12
0x7d1b:	lea	rdx, [rcx + rcx*2]
0x7d1f:	push	rbp
0x7d20:	push	rbx
0x7d21:	mov	r15d, esi
0x7d24:	sub	rsp, 0x48
0x7d28:	mov	r14, qword ptr [rdi + 0x98]
0x7d2f:	mov	qword ptr [rsp], rdi
0x7d33:	mov	rax, qword ptr [r14 + 0x30]
0x7d37:	lea	r12, [rax + rdx*8]
0x7d3b:	cmp	qword ptr [r12 + 8], 0
0x7d41:	jle	0x7ed5


0x7cf0:	cmp	byte ptr [rsi + 0x30], 0x11
0x7cf4:	je	0x7d00


0x7bc0:	mov	rax, qword ptr [rsi + 0x48]
0x7bc4:	cmp	qword ptr [rsi + 0x68], rax
0x7bc8:	jle	0x7c20


0x7b30:	push	r13
0x7b32:	push	r12
0x7b34:	mov	r13, rsi
0x7b37:	push	rbp
0x7b38:	push	rbx
0x7b39:	mov	rbx, rdi
0x7b3c:	mov	r12, rdx
0x7b3f:	sub	rsp, 0x18
0x7b43:	mov	rax, qword ptr fs:[0x28]
0x7b4c:	mov	qword ptr [rsp + 8], rax
0x7b51:	xor	eax, eax
0x7b53:	lea	rax, [rsp + 4]
0x7b58:	test	rdi, rdi
0x7b5b:	cmove	rbx, rax
0x7b5f:	mov	rdi, rbx
0x7b62:	call	0x1c40


0x7ad0:	mov	rax, qword ptr [rdi + 8]
0x7ad4:	cmp	qword ptr [rdi + 0x10], rax
0x7ad8:	je	0x7ae0


0x7a90:	test	rdi, rdi
0x7a93:	push	rbx
0x7a94:	mov	rbx, rdi
0x7a97:	je	0x7aaa


0x7810:	push	r12
0x7812:	push	rbp
0x7813:	mov	ebp, edi
0x7815:	push	rbx
0x7816:	sub	rsp, 0x50
0x781a:	mov	rax, qword ptr fs:[0x28]
0x7823:	mov	qword ptr [rsp + 0x18], rax
0x7828:	xor	eax, eax
0x782a:	lea	rax, [rsp + 0x70]
0x782f:	test	esi, esi
0x7831:	mov	qword ptr [rsp + 0x30], rdx
0x7836:	mov	qword ptr [rsp + 0x38], rcx
0x783b:	mov	qword ptr [rsp + 0x40], r8
0x7840:	mov	qword ptr [rsp + 8], rax
0x7845:	lea	rax, [rsp + 0x20]
0x784a:	mov	qword ptr [rsp + 0x48], r9
0x784f:	mov	dword ptr [rsp], 0x10
0x7856:	mov	qword ptr [rsp + 0x10], rax
0x785b:	je	0x7a62


0x7790:	push	r12
0x7792:	push	rbp
0x7793:	push	rbx
0x7794:	mov	rbx, rdi
0x7797:	call	0x1d80


0x7370:	push	r15
0x7372:	push	r14
0x7374:	push	r13
0x7376:	push	r12
0x7378:	push	rbp
0x7379:	push	rbx
0x737a:	sub	rsp, 0x28
0x737e:	mov	rax, qword ptr fs:[0x28]
0x7387:	mov	qword ptr [rsp + 0x18], rax
0x738c:	xor	eax, eax
0x738e:	cmp	edx, 0x24
0x7391:	ja	0x76f5


0x6cb0:	push	r15
0x6cb2:	push	r14
0x6cb4:	push	r13
0x6cb6:	push	r12
0x6cb8:	push	rbp
0x6cb9:	push	rbx
0x6cba:	sub	rsp, 0x28
0x6cbe:	mov	rax, qword ptr fs:[0x28]
0x6cc7:	mov	qword ptr [rsp + 0x18], rax
0x6ccc:	xor	eax, eax
0x6cce:	cmp	edx, 0x24
0x6cd1:	ja	0x733f


0x6c80:	sub	rsp, 0x10
0x6c84:	push	r9
0x6c86:	mov	r9, r8
0x6c89:	mov	r8, rcx
0x6c8c:	mov	rcx, rdx
0x6c8f:	mov	rdx, rsi
0x6c92:	mov	esi, 0xa
0x6c97:	call	0x6b60


0x6b60:	push	r15
0x6b62:	push	r14
0x6b64:	mov	r15, rcx
0x6b67:	push	r13
0x6b69:	push	r12
0x6b6b:	mov	r14, rdx
0x6b6e:	push	rbp
0x6b6f:	push	rbx
0x6b70:	mov	edx, esi
0x6b72:	xor	esi, esi
0x6b74:	mov	r12, rdi
0x6b77:	mov	r13, r9
0x6b7a:	sub	rsp, 0x18
0x6b7e:	mov	rcx, rsp
0x6b81:	mov	ebx, dword ptr [rsp + 0x50]
0x6b85:	mov	rax, qword ptr fs:[0x28]
0x6b8e:	mov	qword ptr [rsp + 8], rax
0x6b93:	xor	eax, eax
0x6b95:	call	0x6cb0


0x6b40:	push	rbx
0x6b41:	mov	rbx, rdi
0x6b44:	call	0x1c10


0x6b10:	push	rbp
0x6b11:	push	rbx
0x6b12:	mov	rbp, rdi
0x6b15:	mov	rdi, rsi
0x6b18:	mov	rbx, rsi
0x6b1b:	sub	rsp, 8
0x6b1f:	call	0x6910


0x6ae0:	mov	rax, rdi
0x6ae3:	sub	rsp, 8
0x6ae7:	mul	rsi
0x6aea:	seto	dl
0x6aed:	test	rax, rax
0x6af0:	js	0x6b09


0x6ac0:	push	rbx
0x6ac1:	mov	rbx, rdi
0x6ac4:	call	0x6910


0x6a70:	test	rdi, rdi
0x6a73:	mov	rax, qword ptr [rsi]
0x6a76:	je	0x6aa0


0x69e0:	test	rdi, rdi
0x69e3:	mov	r9, rdx
0x69e6:	mov	rcx, qword ptr [rsi]
0x69e9:	je	0x6a20


0x69b0:	mov	rax, rsi
0x69b3:	mul	rdx
0x69b6:	mov	rsi, rax
0x69b9:	seto	al
0x69bc:	test	rsi, rsi
0x69bf:	js	0x69cb


0x6970:	test	rsi, rsi
0x6973:	push	rbx
0x6974:	mov	rbx, rsi
0x6977:	jne	0x697e


0x6960:	jmp	0x6910


0x6930:	mov	rax, rdi
0x6933:	mul	rsi
0x6936:	mov	rdi, rax
0x6939:	seto	al
0x693c:	test	rdi, rdi
0x693f:	js	0x694b


0x6910:	push	rbx
0x6911:	mov	rbx, rdi
0x6914:	call	0x1da0


0x6890:	push	rbx
0x6891:	lea	rsi, [rip + 0x1084a]
0x6898:	mov	edx, 5
0x689d:	xor	edi, edi
0x689f:	call	0x1bf0


0x67b0:	push	rbp
0x67b1:	push	rbx
0x67b2:	mov	r10d, 0x20
0x67b8:	xor	r11d, r11d
0x67bb:	sub	rsp, 0xb8
0x67c2:	mov	rax, qword ptr fs:[0x28]
0x67cb:	mov	qword ptr [rsp + 0x78], rax
0x67d0:	xor	eax, eax
0x67d2:	lea	rax, [rsp + 0xd0]
0x67da:	mov	qword ptr [rsp + 0xa0], r8
0x67e2:	lea	rbx, [rsp + 0xd0]
0x67ea:	lea	r8, [rsp + 0x20]
0x67ef:	mov	qword ptr [rsp + 0xa8], r9
0x67f7:	mov	dword ptr [rsp + 8], 0x20
0x67ff:	mov	qword ptr [rsp + 0x10], rax
0x6804:	lea	rax, [rsp + 0x80]
0x680c:	xor	r9d, r9d
0x680f:	mov	qword ptr [rsp + 0x18], rax
0x6814:	mov	rbp, rax
0x6817:	nop	word ptr [rax + rax]
0x6820:	cmp	r10d, 0x2f
0x6824:	ja	0x687c


0x6730:	sub	rsp, 0x68
0x6734:	mov	r10, r8
0x6737:	xor	r9d, r9d
0x673a:	mov	rax, qword ptr fs:[0x28]
0x6743:	mov	qword ptr [rsp + 0x58], rax
0x6748:	xor	eax, eax
0x674a:	mov	r8, rsp
0x674d:	nop	dword ptr [rax]
0x6750:	mov	eax, dword ptr [r10]
0x6753:	cmp	eax, 0x2f
0x6756:	ja	0x679a


0x6710:	xor	r9d, r9d
0x6713:	cmp	qword ptr [r8], 0
0x6717:	je	0x672b


0x62f0:	push	r15
0x62f2:	push	r14
0x62f4:	push	r13
0x62f6:	push	r12
0x62f8:	mov	r12, r9
0x62fb:	push	rbp
0x62fc:	push	rbx
0x62fd:	mov	rbp, rdi
0x6300:	mov	rbx, r8
0x6303:	sub	rsp, 0x28
0x6307:	test	rsi, rsi
0x630a:	je	0x6428


0x62e0:	mov	edx, 3
0x62e5:	xor	esi, esi
0x62e7:	xor	eax, eax
0x62e9:	jmp	0x7810


0x6280:	push	r13
0x6282:	push	r12
0x6284:	mov	r13d, edi
0x6287:	push	rbp
0x6288:	push	rbx
0x6289:	mov	r12, rsi
0x628c:	mov	rbx, rdx
0x628f:	sub	rsp, 8
0x6293:	nop	dword ptr [rax + rax]
0x6298:	mov	rdx, rbx
0x629b:	mov	rsi, r12
0x629e:	mov	edi, r13d
0x62a1:	call	0x1cf0


0x6260:	lea	rcx, [rip + 0x215dd9]
0x6267:	mov	rsi, rdi
0x626a:	mov	rdx, -1
0x6271:	xor	edi, edi
0x6273:	jmp	0x5920


0x6240:	lea	rcx, [rip + 0x215df9]
0x6247:	mov	rdx, -1
0x624e:	jmp	0x5920


0x6220:	lea	rcx, [rip + 0x215e19]
0x6227:	mov	rdx, rsi
0x622a:	mov	rsi, rdi
0x622d:	xor	edi, edi
0x622f:	jmp	0x5920


0x6210:	lea	rcx, [rip + 0x215e29]
0x6217:	jmp	0x5920


0x61f0:	mov	r8, rcx
0x61f3:	mov	rcx, rdx
0x61f6:	mov	rdx, rsi
0x61f9:	mov	rsi, rdi
0x61fc:	xor	edi, edi
0x61fe:	jmp	0x6120


0x61d0:	mov	rcx, rdx
0x61d3:	mov	r8, -1
0x61da:	mov	rdx, rsi
0x61dd:	mov	rsi, rdi
0x61e0:	xor	edi, edi
0x61e2:	jmp	0x6120


0x61c0:	mov	r8, -1
0x61c7:	jmp	0x6120


0x6120:	sub	rsp, 0x48
0x6124:	mov	r9, rcx
0x6127:	mov	rcx, qword ptr [rip + 0x216242]
0x612e:	movdqa	xmm0, xmmword ptr [rip + 0x21620a]
0x6136:	mov	rax, qword ptr fs:[0x28]
0x613f:	mov	qword ptr [rsp + 0x38], rax
0x6144:	xor	eax, eax
0x6146:	movaps	xmmword ptr [rsp], xmm0
0x614a:	test	rsi, rsi
0x614d:	mov	qword ptr [rsp + 0x30], rcx
0x6152:	mov	dword ptr [rsp], 0xa
0x6159:	movdqa	xmm0, xmmword ptr [rip + 0x2161ef]
0x6161:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x6166:	movdqa	xmm0, xmmword ptr [rip + 0x2161f2]
0x616e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x6173:	je	0x61a7


0x6090:	sub	rsp, 0x48
0x6094:	mov	rax, rdx
0x6097:	mov	rdx, qword ptr fs:[0x28]
0x60a0:	mov	qword ptr [rsp + 0x38], rdx
0x60a5:	xor	edx, edx
0x60a7:	cmp	esi, 0xa
0x60aa:	je	0x6114


0x6080:	mov	edx, 0x3a
0x6085:	jmp	0x5fb0


0x6060:	mov	edx, 0x3a
0x6065:	mov	rsi, -1
0x606c:	jmp	0x5fb0


0x6050:	movsx	edx, sil
0x6054:	mov	rsi, -1
0x605b:	jmp	0x5fb0


0x5fb0:	sub	rsp, 0x48
0x5fb4:	mov	ecx, edx
0x5fb6:	mov	rax, qword ptr fs:[0x28]
0x5fbf:	mov	qword ptr [rsp + 0x38], rax
0x5fc4:	xor	eax, eax
0x5fc6:	mov	rax, qword ptr [rip + 0x2163a3]
0x5fcd:	mov	r8, rsp
0x5fd0:	and	ecx, 0x1f
0x5fd3:	movdqa	xmm0, xmmword ptr [rip + 0x216365]
0x5fdb:	mov	qword ptr [rsp + 0x30], rax
0x5fe0:	mov	eax, edx
0x5fe2:	movaps	xmmword ptr [rsp], xmm0
0x5fe6:	shr	al, 5
0x5fe9:	movzx	eax, al
0x5fec:	lea	r9, [r8 + rax*4 + 8]
0x5ff1:	movdqa	xmm0, xmmword ptr [rip + 0x216357]
0x5ff9:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x5ffe:	movdqa	xmm0, xmmword ptr [rip + 0x21635a]
0x6006:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x600b:	mov	edx, dword ptr [r9]
0x600e:	mov	eax, edx
0x6010:	shr	eax, cl
0x6012:	not	eax
0x6014:	and	eax, 1
0x6017:	shl	eax, cl
0x6019:	mov	rcx, r8
0x601c:	xor	eax, edx
0x601e:	mov	rdx, rsi
0x6021:	mov	rsi, rdi
0x6024:	mov	dword ptr [r9], eax
0x6027:	xor	edi, edi
0x6029:	call	0x5920


0x5fa0:	mov	rcx, rdx
0x5fa3:	mov	rdx, rsi
0x5fa6:	mov	esi, edi
0x5fa8:	xor	edi, edi
0x5faa:	jmp	0x5f00


0x5f90:	mov	rdx, rsi
0x5f93:	mov	esi, edi
0x5f95:	xor	edi, edi
0x5f97:	jmp	0x5e70


0x5f00:	sub	rsp, 0x48
0x5f04:	mov	rax, rdx
0x5f07:	mov	rdx, rcx
0x5f0a:	mov	rcx, qword ptr fs:[0x28]
0x5f13:	mov	qword ptr [rsp + 0x38], rcx
0x5f18:	xor	ecx, ecx
0x5f1a:	cmp	esi, 0xa
0x5f1d:	je	0x5f80


0x5e70:	sub	rsp, 0x48
0x5e74:	mov	rax, rdx
0x5e77:	mov	rdx, qword ptr fs:[0x28]
0x5e80:	mov	qword ptr [rsp + 0x38], rdx
0x5e85:	xor	edx, edx
0x5e87:	cmp	esi, 0xa
0x5e8a:	je	0x5ef4


0x5e50:	lea	rcx, [rip + 0x2164e9]
0x5e57:	mov	rdx, rsi
0x5e5a:	mov	rsi, rdi
0x5e5d:	xor	edi, edi
0x5e5f:	jmp	0x5920


0x5e30:	lea	rcx, [rip + 0x216509]
0x5e37:	mov	rsi, rdi
0x5e3a:	mov	rdx, -1
0x5e41:	xor	edi, edi
0x5e43:	jmp	0x5920


0x5e20:	lea	rcx, [rip + 0x216519]
0x5e27:	jmp	0x5920


0x5e00:	lea	rcx, [rip + 0x216539]
0x5e07:	mov	rdx, -1
0x5e0e:	jmp	0x5920


0x5d60:	mov	eax, dword ptr [rip + 0x216312]
0x5d66:	push	r12
0x5d68:	mov	r12, qword ptr [rip + 0x216311]
0x5d6f:	push	rbp
0x5d70:	push	rbx
0x5d71:	cmp	eax, 1
0x5d74:	jle	0x5da1


0x5d50:	mov	rcx, rdx
0x5d53:	xor	edx, edx
0x5d55:	jmp	0x5c60


0x5c60:	push	r15
0x5c62:	push	r14
0x5c64:	lea	rax, [rip + 0x2166d5]
0x5c6b:	push	r13
0x5c6d:	push	r12
0x5c6f:	mov	r12, rdx
0x5c72:	push	rbp
0x5c73:	push	rbx
0x5c74:	mov	rbx, rcx
0x5c77:	mov	r14, rdi
0x5c7a:	mov	r15, rsi
0x5c7d:	sub	rsp, 0x38
0x5c81:	test	rcx, rcx
0x5c84:	cmove	rbx, rax
0x5c88:	xor	ebp, ebp
0x5c8a:	call	0x1b20


0x5be0:	push	r15
0x5be2:	push	r14
0x5be4:	lea	rax, [rip + 0x216755]
0x5beb:	push	r13
0x5bed:	push	r12
0x5bef:	mov	r13, rdi
0x5bf2:	push	rbp
0x5bf3:	push	rbx
0x5bf4:	mov	rbx, r8
0x5bf7:	mov	r14, rsi
0x5bfa:	mov	r15, rdx
0x5bfd:	sub	rsp, 0x18
0x5c01:	test	r8, r8
0x5c04:	cmove	rbx, rax
0x5c08:	mov	qword ptr [rsp + 8], rcx
0x5c0d:	call	0x1b20


0x5bb0:	lea	rax, [rip + 0x216789]
0x5bb7:	test	rdi, rdi
0x5bba:	cmove	rdi, rax
0x5bbe:	test	rsi, rsi
0x5bc1:	mov	dword ptr [rdi], 0xa
0x5bc7:	je	0x5bd7


0x5b90:	lea	rax, [rip + 0x2167a9]
0x5b97:	test	rdi, rdi
0x5b9a:	cmove	rdi, rax
0x5b9e:	mov	eax, dword ptr [rdi + 4]
0x5ba1:	mov	dword ptr [rdi + 4], esi
0x5ba4:	ret	


0x5b50:	lea	rax, [rip + 0x2167e9]
0x5b57:	test	rdi, rdi
0x5b5a:	mov	ecx, esi
0x5b5c:	cmove	rdi, rax
0x5b60:	mov	eax, esi
0x5b62:	and	ecx, 0x1f
0x5b65:	shr	al, 5
0x5b68:	movzx	eax, al
0x5b6b:	lea	rdi, [rdi + rax*4 + 8]
0x5b70:	mov	esi, dword ptr [rdi]
0x5b72:	mov	eax, esi
0x5b74:	shr	eax, cl
0x5b76:	xor	edx, eax
0x5b78:	and	eax, 1
0x5b7b:	and	edx, 1
0x5b7e:	shl	edx, cl
0x5b80:	xor	edx, esi
0x5b82:	mov	dword ptr [rdi], edx
0x5b84:	ret	


0x5b30:	lea	rax, [rip + 0x216809]
0x5b37:	test	rdi, rdi
0x5b3a:	cmove	rdi, rax
0x5b3e:	mov	dword ptr [rdi], esi
0x5b40:	ret	


0x5b10:	lea	rax, [rip + 0x216829]
0x5b17:	test	rdi, rdi
0x5b1a:	cmove	rdi, rax
0x5b1e:	mov	eax, dword ptr [rdi]
0x5b20:	ret	


0x5ad0:	push	r12
0x5ad2:	push	rbp
0x5ad3:	push	rbx
0x5ad4:	mov	rbx, rdi
0x5ad7:	call	0x1b20


0x5920:	push	r15
0x5922:	push	r14
0x5924:	movsxd	r15, edi
0x5927:	push	r13
0x5929:	push	r12
0x592b:	mov	r14, rdx
0x592e:	push	rbp
0x592f:	push	rbx
0x5930:	mov	rbp, rcx
0x5933:	sub	rsp, 0x28
0x5937:	mov	qword ptr [rsp + 8], rsi
0x593c:	call	0x1b20


0x46e0:	push	r15
0x46e2:	push	r14
0x46e4:	mov	r15d, r8d
0x46e7:	push	r13
0x46e9:	push	r12
0x46eb:	mov	r14, rdi
0x46ee:	push	rbp
0x46ef:	push	rbx
0x46f0:	mov	ebx, r9d
0x46f3:	mov	r13, rsi
0x46f6:	mov	rbp, rcx
0x46f9:	and	ebx, 2
0x46fc:	sub	rsp, 0xb8
0x4703:	mov	rax, qword ptr [rsp + 0xf0]
0x470b:	mov	qword ptr [rsp + 0x10], rdx
0x4710:	mov	dword ptr [rsp + 8], r8d
0x4715:	mov	dword ptr [rsp + 0x78], r9d
0x471a:	mov	qword ptr [rsp + 0x20], rax
0x471f:	mov	rax, qword ptr [rsp + 0xf8]
0x4727:	mov	qword ptr [rsp + 0x68], rax
0x472c:	mov	rax, qword ptr [rsp + 0x100]
0x4734:	mov	qword ptr [rsp + 0x60], rax
0x4739:	mov	rax, qword ptr fs:[0x28]
0x4742:	mov	qword ptr [rsp + 0xa8], rax
0x474a:	xor	eax, eax
0x474c:	call	0x1c00


0x45f0:	push	rbp
0x45f1:	push	rbx
0x45f2:	mov	rbp, rdi
0x45f5:	mov	ebx, esi
0x45f7:	sub	rsp, 8
0x45fb:	call	0x15eb0


0x4550:	test	rdi, rdi
0x4553:	push	rbx
0x4554:	je	0x45cd


0x4500:	lea	rcx, [rsi + 0x14]
0x4504:	mov	byte ptr [rsi + 0x14], 0
0x4508:	movabs	rsi, 0xcccccccccccccccd
0x4512:	nop	word ptr [rax + rax]
0x4518:	mov	rax, rdi
0x451b:	sub	rcx, 1
0x451f:	mul	rsi
0x4522:	shr	rdx, 3
0x4526:	lea	rax, [rdx + rdx*4]
0x452a:	add	rax, rax
0x452d:	sub	rdi, rax
0x4530:	add	edi, 0x30
0x4533:	test	rdx, rdx
0x4536:	mov	byte ptr [rcx], dil
0x4539:	mov	rdi, rdx
0x453c:	jne	0x4518


0x4460:	push	r12
0x4462:	push	rbp
0x4463:	mov	rbp, rsi
0x4466:	push	rbx
0x4467:	call	0x1e90


0x4400:	push	r13
0x4402:	push	r12
0x4404:	xor	eax, eax
0x4406:	push	rbp
0x4407:	push	rbx
0x4408:	mov	ebp, edi
0x440a:	mov	rdi, rsi
0x440d:	mov	esi, edx
0x440f:	mov	edx, ecx
0x4411:	sub	rsp, 8
0x4415:	call	0x1e70


0x4350:	push	rbp
0x4351:	push	rbx
0x4352:	sub	rsp, 8
0x4356:	mov	rdi, qword ptr [rip + 0x217d4b]
0x435d:	call	0x15dd0


0x4340:	mov	byte ptr [rip + 0x217ee1], dil
0x4347:	ret	


0x4330:	mov	qword ptr [rip + 0x217ef9], rdi
0x4337:	ret	


0x3f10:	push	r13
0x3f12:	push	r12
0x3f14:	mov	edx, 5
0x3f19:	push	rbp
0x3f1a:	push	rbx
0x3f1b:	mov	ebp, edi
0x3f1d:	sub	rsp, 0x88
0x3f24:	mov	rbx, qword ptr [rip + 0x21830d]
0x3f2b:	mov	rax, qword ptr fs:[0x28]
0x3f34:	mov	qword ptr [rsp + 0x78], rax
0x3f39:	xor	eax, eax
0x3f3b:	test	edi, edi
0x3f3d:	je	0x3f6d


0x3ea0:	mov	rax, qword ptr [rip + 0x218379]
0x3ea7:	test	rax, rax
0x3eaa:	je	0x3eb8


0x3da0:	push	rbp
0x3da1:	push	rbx
0x3da2:	mov	rbp, rdi
0x3da5:	sub	rsp, 8
0x3da9:	mov	rbx, qword ptr [rip + 0x218470]
0x3db0:	test	rbx, rbx
0x3db3:	je	0x3e78


0x3d70:	sub	rsp, 8
0x3d74:	jmp	0x3d88


0x3c90:	push	rbx
0x3c91:	mov	rbx, qword ptr [rip + 0x218468]
0x3c98:	test	rbx, rbx
0x3c9b:	je	0x3cbd


0x3930:	push	r15
0x3932:	push	r14
0x3934:	mov	ecx, 0x1fff
0x3939:	push	r13
0x393b:	push	r12
0x393d:	push	rbp
0x393e:	push	rbx
0x393f:	sub	rsp, 0x18
0x3943:	cmp	qword ptr [rip + 0x2188c2], 0x1fff
0x394e:	cmovae	rcx, qword ptr [rip + 0x2188ba]
0x3956:	mov	rbp, rcx
0x3959:	cmp	rbp, 0x1fff
0x3960:	jbe	0x3b2c


0x3850:	sub	rsp, 8
0x3854:	mov	rcx, qword ptr [rip + 0x218945]
0x385b:	cmp	rcx, qword ptr [rip + 0x2188a6]
0x3862:	mov	rdi, qword ptr [rip + 0x21893f]
0x3869:	je	0x38a8


0x3810:	lea	rsi, [rip + 0x127ba]
0x3817:	sub	rsp, 8
0x381b:	mov	edx, 5
0x3820:	xor	edi, edi
0x3822:	call	0x1bf0


0x37c0:	push	r12
0x37c2:	push	rbp
0x37c3:	mov	rbp, rdi
0x37c6:	mov	rdi, qword ptr [rsi]
0x37c9:	push	rbx
0x37ca:	mov	r12, rsi
0x37cd:	test	rdi, rdi
0x37d0:	je	0x37ec


0x36d0:	push	r13
0x36d2:	push	r12
0x36d4:	mov	r13, rdx
0x36d7:	push	rbp
0x36d8:	push	rbx
0x36d9:	mov	rbp, rsi
0x36dc:	mov	r12, rcx
0x36df:	sub	rsp, 8
0x36e3:	cmp	qword ptr [rdi], 0
0x36e7:	je	0x3780


0x3610:	push	r13
0x3612:	push	r12
0x3614:	push	rbp
0x3615:	push	rbx
0x3616:	mov	rbx, rsi
0x3619:	sub	rsp, 0x28
0x361d:	mov	rbp, rsp
0x3620:	mov	rsi, rbp
0x3623:	mov	rax, qword ptr fs:[0x28]
0x362c:	mov	qword ptr [rsp + 0x18], rax
0x3631:	xor	eax, eax
0x3633:	call	0x4500


0x35e0:	movzx	eax, byte ptr [rip + 0x218bcb]
0x35e7:	push	rbx
0x35e8:	mov	ebx, edi
0x35ea:	test	al, al
0x35ec:	je	0x35f8


0x34d0:	push	r12
0x34d2:	push	rbp
0x34d3:	mov	ebp, 0x4b
0x34d8:	push	rbx
0x34d9:	sub	rsp, 0x90
0x34e0:	mov	rax, qword ptr fs:[0x28]
0x34e9:	mov	qword ptr [rsp + 0x88], rax
0x34f1:	xor	eax, eax
0x34f3:	mov	edi, dword ptr [rip + 0x218cdf]
0x34f9:	call	0x30a0


0x3440:	push	rbp
0x3441:	push	rbx
0x3442:	mov	rbx, rdi
0x3445:	mov	esi, 1
0x344a:	sub	rsp, 8
0x344e:	mov	rdx, qword ptr [rbx]
0x3451:	mov	rdi, qword ptr [rdi + 8]
0x3455:	mov	rcx, qword ptr [rip + 0x218d6c]
0x345c:	call	0x1df0


0x3280:	push	r13
0x3282:	push	r12
0x3284:	push	rbp
0x3285:	push	rbx
0x3286:	sub	rsp, 0xa8
0x328d:	mov	rdi, qword ptr [rip + 0x218f34]
0x3294:	mov	rax, qword ptr fs:[0x28]
0x329d:	mov	qword ptr [rsp + 0x98], rax
0x32a5:	xor	eax, eax
0x32a7:	test	rdi, rdi
0x32aa:	je	0x32eb


0x3220:	push	rbx
0x3221:	sub	rsp, 0x90
0x3228:	mov	rax, qword ptr fs:[0x28]
0x3231:	mov	qword ptr [rsp + 0x88], rax
0x3239:	xor	eax, eax
0x323b:	mov	rbx, rsp
0x323e:	call	0x3280


0x3160:	mov	eax, dword ptr [rip + 0x219072]
0x3166:	test	eax, eax
0x3168:	je	0x3208


0x30a0:	push	r12
0x30a2:	mov	rsi, qword ptr [rip + 0x21913f]
0x30a9:	push	rbp
0x30aa:	mov	ebp, edi
0x30ac:	mov	rdi, qword ptr [rip + 0x21913d]
0x30b3:	push	rbx
0x30b4:	call	0x1b60


0x3090:	push	rbp
0x3091:	mov	rbp, rsp
0x3094:	pop	rbp
0x3095:	jmp	0x3000


0x3050:	cmp	byte ptr [rip + 0x219091], 0
0x3057:	jne	0x3088


0x3000:	lea	rdi, [rip + 0x219099]
0x3007:	lea	rsi, [rip + 0x219092]
0x300e:	push	rbp
0x300f:	sub	rsi, rdi
0x3012:	mov	rbp, rsp
0x3015:	sar	rsi, 3
0x3019:	mov	rax, rsi
0x301c:	shr	rax, 0x3f
0x3020:	add	rsi, rax
0x3023:	sar	rsi, 1
0x3026:	je	0x3040


0x2fc0:	lea	rdi, [rip + 0x2190d9]
0x2fc7:	push	rbp
0x2fc8:	lea	rax, [rip + 0x2190d1]
0x2fcf:	cmp	rax, rdi
0x2fd2:	mov	rbp, rsp
0x2fd5:	je	0x2ff0


0x2f90:	xor	ebp, ebp
0x2f92:	mov	r9, rdx
0x2f95:	pop	rsi
0x2f96:	mov	rdx, rsp
0x2f99:	and	rsp, 0xfffffffffffffff0
0x2f9d:	push	rax
0x2f9e:	push	rsp
0x2f9f:	lea	r8, [rip + 0x12fba]
0x2fa6:	lea	rcx, [rip + 0x12f43]
0x2fad:	lea	rdi, [rip - 0xf54]
0x2fb4:	call	qword ptr [rip + 0x219026]


0x2060:	push	r15
0x2062:	push	r14
0x2064:	push	r13
0x2066:	push	r12
0x2068:	mov	r12, rsi
0x206b:	push	rbp
0x206c:	push	rbx
0x206d:	lea	rbx, [rip + 0x21994c]
0x2074:	sub	rsp, 0x108
0x207b:	mov	dword ptr [rsp + 8], edi
0x207f:	mov	rdi, qword ptr [rsi]
0x2082:	mov	rax, qword ptr fs:[0x28]
0x208b:	mov	qword ptr [rsp + 0xf8], rax
0x2093:	xor	eax, eax
0x2095:	call	0x4550


0x1f80:	push	r13
0x1f82:	push	r12
0x1f84:	push	rbp
0x1f85:	push	rbx
0x1f86:	mov	ebp, edx
0x1f88:	mov	rbx, rsi
0x1f8b:	sub	rsp, 0x28
0x1f8f:	movsxd	rdx, dword ptr [rdi + 0x18]
0x1f93:	mov	rax, qword ptr fs:[0x28]
0x1f9c:	mov	qword ptr [rsp + 0x18], rax
0x1fa1:	xor	eax, eax
0x1fa3:	mov	rax, qword ptr [rip + 0x21a20e]
0x1faa:	mov	rdi, qword ptr [rax + rdx*8]
0x1fae:	call	0x6260


0x1a98:	sub	rsp, 8
0x1a9c:	mov	rax, qword ptr [rip + 0x21a545]
0x1aa3:	test	rax, rax
0x1aa6:	je	0x1aaa


0x1ec0:	jmp	qword ptr [rip + 0x21a0ba]


0x1dd0:	jmp	qword ptr [rip + 0x21a132]


0x1e20:	jmp	qword ptr [rip + 0x21a10a]


0x1b70:	jmp	qword ptr [rip + 0x21a262]


0x15d85:	and	byte ptr [rdi + 0x38], 0xf9
0x15d89:	mov	qword ptr [rsi], 0
0x15d90:	mov	qword ptr [rsi + 0x10], 0
0x15d98:	mov	qword ptr [rsi + 8], 0
0x15da0:	ret	


0x15da8:	movzx	eax, byte ptr [rdi + 0x38]
0x15dac:	and	eax, 0xfffffff9
0x15daf:	or	eax, 2
0x15db2:	mov	byte ptr [rdi + 0x38], al
0x15db5:	mov	qword ptr [rsi], rdx
0x15db8:	mov	qword ptr [rsi + 8], rcx
0x15dbc:	mov	qword ptr [rsi + 0x10], r8
0x15dc0:	ret	


0x15c6d:	push	r13
0x15c6f:	push	r12
0x15c71:	mov	r13, rdx
0x15c74:	push	rbp
0x15c75:	push	rbx
0x15c76:	mov	r12, rcx
0x15c79:	mov	ebx, r8d
0x15c7c:	mov	rbp, rdi
0x15c7f:	sub	rsp, 0x18
0x15c83:	test	r8b, 4
0x15c87:	jne	0x15cd8


0x15cf8:	mov	eax, 2
0x15cfd:	ret	


0x15c21:	mov	rdi, qword ptr [rbx + 0x20]
0x15c25:	mov	qword ptr [rbx], 0
0x15c2c:	mov	qword ptr [rbx + 8], 0
0x15c34:	call	0x1b00


0x15c1c:	call	0x9400


0x15b8f:	lea	rax, [rip + 0x20ca]
0x15b96:	movsxd	rdi, edi
0x15b99:	lea	rsi, [rip + 0x2160]
0x15ba0:	mov	rbp, rdx
0x15ba3:	mov	edx, 5
0x15ba8:	mov	r12, rcx
0x15bab:	add	rsi, qword ptr [rax + rdi*8]
0x15baf:	xor	edi, edi
0x15bb1:	call	0x1bf0


0x15bf0:	call	0x1b10


0x1da0:	jmp	qword ptr [rip + 0x21a14a]


0x15987:	test	rbx, rbx
0x1598a:	js	0x15a50


0x15a50:	mov	rbx, -2
0x15a57:	jmp	0x159ea


0x15830:	mov	r12, -1
0x15837:	jmp	0x15602


0x154fa:	cmp	rcx, rdx
0x154fd:	jg	0x15830


0x1543d:	mov	rcx, rbp
0x15440:	mov	rdi, rbx
0x15443:	mov	rsi, qword ptr [r12 + 0x48]
0x15448:	lea	rdx, [rsi + 0x18]
0x1544c:	add	rsi, 0x10
0x15450:	call	0xd950


0x1543a:	rep stosq	qword ptr [rdi], rax


0x150e6:	mov	rdi, rbx
0x150e9:	mov	esi, 0xe8
0x150ee:	call	0x1e00


0x142f2:	lea	rdi, [rbx + 8]
0x142f6:	mov	rax, qword ptr [rsp + 8]
0x142fb:	mov	rcx, rbx
0x142fe:	and	rdi, 0xfffffffffffffff8
0x14302:	sub	rcx, rdi
0x14305:	mov	qword ptr [rax + 0x10], 0xe8
0x1430d:	xor	eax, eax
0x1430f:	add	ecx, 0xe8
0x14315:	mov	qword ptr [rbx], 0
0x1431c:	mov	qword ptr [rbx + 0xe0], 0
0x14327:	shr	ecx, 3
0x1432a:	rep stosq	qword ptr [rdi], rax


0x12ad8:	mov	rbp, rsi
0x12adb:	lea	rsi, [rip + 0x4fbe]
0x12ae2:	movzx	edx, cl
0x12ae5:	mov	r14, rdi
0x12ae8:	movsxd	rax, dword ptr [rsi + rdx*4]
0x12aec:	add	rax, rsi
0x12aef:	jmp	rax


0x12b90:	mov	qword ptr [rsp + 0x28], 0
0x12b99:	nop	dword ptr [rax]
0x12ba0:	mov	rdi, qword ptr [rsp + 0x118]
0x12ba8:	xor	rdi, qword ptr fs:[0x28]
0x12bb1:	mov	rax, qword ptr [rsp + 0x28]
0x12bb6:	jne	0x13f2e


0x12390:	mov	byte ptr [rdi + 8], 2
0x12394:	mov	rdi, qword ptr [rsp + 0x28]
0x12399:	xor	rdi, qword ptr fs:[0x28]
0x123a2:	jne	0x129c8


0x122ff:	movzx	r13d, byte ptr [rdi + 0xa]
0x12304:	mov	r15, rdx
0x12307:	mov	rdx, qword ptr [rsi + 8]
0x1230b:	mov	rbx, rsi
0x1230e:	movzx	r12d, byte ptr [rdx + r14]
0x12313:	and	r13d, 0xffffff9f
0x12317:	mov	byte ptr [rdi + 0xa], r13b
0x1231b:	mov	eax, dword ptr [rsi + 0x90]
0x12321:	mov	byte ptr [rdi], r12b
0x12324:	cmp	eax, 1
0x12327:	jle	0x123c0


0x120f8:	movzx	eax, byte ptr [rbp + 8]
0x120fc:	add	r11, r12
0x120ff:	mov	qword ptr [r10 + 0x48], r11
0x12103:	mov	edx, eax
0x12105:	and	edx, 0xfffffffb
0x12108:	cmp	dl, 0x1a
0x1210b:	je	0x12130


0x120a5:	mov	rsi, r12
0x120a8:	mov	rdi, r10
0x120ab:	call	0x9620


0x11ad8:	lea	r14, [rbp*8]
0x11ae0:	add	r14, qword ptr [rsi]
0x11ae3:	test	rcx, rcx
0x11ae6:	jne	0x11ba0


0x11889:	lea	rdi, [rdx + 8]
0x1188d:	test	rcx, rcx
0x11890:	mov	qword ptr [rsp + 0x10], rdi
0x11895:	jne	0x118e8


0x1015b:	rep stosq	qword ptr [rdi], rax


0xfc0a:	mov	qword ptr [r14], rdx
0xfc0d:	mov	rbp, rdx
0xfc10:	mov	qword ptr [rsi + 0xc0], r12
0xfc17:	cmp	qword ptr [r15 + 0x98], 0
0xfc1f:	jne	0xfd48


0xfc50:	mov	rax, qword ptr [r14]
0xfc53:	test	rax, rax
0xfc56:	je	0xfd38


0xf640:	xor	eax, eax
0xf642:	nop	word ptr [rax + rax]
0xf648:	mov	rbx, qword ptr [rsp + 0xa8]
0xf650:	xor	rbx, qword ptr fs:[0x28]
0xf659:	jne	0xfbac


0xf318:	lea	rax, [r15*8]
0xf320:	mov	r14, rdi
0xf323:	mov	qword ptr [rsp], 0
0xf32b:	mov	qword ptr [rsp + 8], r15
0xf330:	mov	qword ptr [rsp + 0x60], rax
0xf335:	lea	rax, [rsp + 0x90]
0xf33d:	mov	qword ptr [rsp + 0x68], rax
0xf342:	lea	rax, [rsp + 0x8c]
0xf34a:	mov	qword ptr [rsp + 0x78], rax
0xf34f:	jmp	0xf397


0xf03d:	mov	qword ptr [rbp - 0x88], 0
0xf048:	jmp	0xe8bd


0xe89b:	mov	edi, 0x60
0xe8a0:	call	0x1da0


0xe15c:	mov	rax, qword ptr [rsp + 0x60]
0xe161:	mov	rdx, qword ptr [r15 + 0xb8]
0xe168:	mov	rcx, qword ptr [r15 + 0x48]
0xe16c:	mov	r12, qword ptr [rax]
0xe16f:	mov	r14, qword ptr [rax + 0x10]
0xe173:	mov	qword ptr [rsp + 0x68], rdx
0xe178:	mov	qword ptr [rsp + 0x70], rcx
0xe17d:	mov	edx, dword ptr [r15 + 0xa0]
0xe184:	test	r12, r12
0xe187:	mov	qword ptr [r15 + 0xb8], r14
0xe18e:	je	0xe570


0xe776:	lea	r12, [rax + 1]
0xe77a:	movabs	rax, 0x7fffffffffffffff
0xe784:	sub	rax, r13
0xe787:	cmp	rax, r12
0xe78a:	jl	0xe7fb


0xdfb0:	mov	rdx, qword ptr [rcx + 8]
0xdfb4:	lea	rsi, [rdx + r8]
0xdfb8:	movzx	eax, byte ptr [rsi]
0xdfbb:	cmp	al, 0xc1
0xdfbd:	jbe	0xdf70


0xdea1:	cmp	dword ptr [rcx + 0x90], 1
0xdea8:	je	0xdf70


0xd99c:	mov	rax, qword ptr [rsp + 0x30]
0xd9a1:	mov	rax, qword ptr [rax + 0x18]
0xd9a5:	mov	rbx, rax
0xd9a8:	mov	qword ptr [rsp], rax
0xd9ac:	shr	rbx, 0x16
0xd9b0:	and	ebx, 1
0xd9b3:	mov	rax, qword ptr [rsp + 0x20]
0xd9b8:	cmp	qword ptr [rax], 0
0xd9bc:	jle	0xddcd


0xd9b3:	mov	rax, qword ptr [rsp + 0x20]
0xd9b8:	cmp	qword ptr [rax], 0
0xd9bc:	jle	0xddcd


0x1d30:	jmp	qword ptr [rip + 0x21a182]


0xcf18:	mov	rcx, qword ptr [r13]
0xcf1c:	cmp	qword ptr [r8], rcx
0xcf1f:	mov	rax, qword ptr [rdx]
0xcf22:	je	0xd039


0xcef3:	lea	rdi, [rip + 0xa785]
0xcefa:	mov	ecx, 6
0xceff:	mov	rsi, r9
0xcf02:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1c10:	jmp	qword ptr [rip + 0x21a212]


0xce55:	lea	rcx, [rip + 0xad84]
0xce5c:	lea	rsi, [rip + 0xa7a5]
0xce63:	lea	rdi, [rip + 0xa806]
0xce6a:	mov	edx, 0x555
0xce6f:	call	0x1c90


0xcdf3:	lea	rbx, [rax + rax*2]
0xcdf7:	mov	rax, qword ptr [rsi]
0xcdfa:	mov	r12, rsi
0xcdfd:	shl	rcx, 4
0xce01:	mov	rbp, r9
0xce04:	mov	rdi, r8
0xce07:	shl	rbx, 4
0xce0b:	add	rax, rbx
0xce0e:	mov	rsi, qword ptr [rax]
0xce11:	mov	qword ptr [rdx], rsi
0xce14:	mov	rsi, qword ptr [rax + 0x10]
0xce18:	mov	rdx, rcx
0xce1b:	call	0x1d70


0xcdd2:	pop	rbx
0xcdd3:	mov	rdi, qword ptr [rbp + 0x10]
0xcdd7:	pop	rbp
0xcdd8:	pop	r12
0xcdda:	jmp	0x1b00


0xcd9d:	xor	ebx, ebx
0xcd9f:	xor	r12d, r12d
0xcda2:	nop	word ptr [rax + rax]
0xcda8:	mov	rax, qword ptr [rbp + 0x10]
0xcdac:	add	r12, 1
0xcdb0:	mov	rdi, qword ptr [rax + rbx + 0x28]
0xcdb5:	call	0x1b00


0xcd68:	mov	rax, qword ptr [rsi + 8]
0xcd6c:	mov	rdx, qword ptr [rax + 0x18]
0xcd70:	mov	rax, qword ptr [rax + 0x38]
0xcd74:	mov	qword ptr [rsi + 0x18], rdx
0xcd78:	mov	qword ptr [rsi + 0x38], rax
0xcd7c:	xor	eax, eax
0xcd7e:	ret	


0xcd06:	push	rbp
0xcd07:	push	rbx
0xcd08:	mov	rbx, rsi
0xcd0b:	mov	rbp, rdi
0xcd0e:	sub	rsp, 8
0xcd12:	mov	qword ptr [rbx + 0x18], rsi
0xcd16:	mov	rdx, qword ptr [rbx + 0x30]
0xcd1a:	mov	rsi, qword ptr [rsi + 0x28]
0xcd1e:	call	0x8e70


0xc152:	xor	edi, edi
0xc154:	jmp	0xc111


0xbf71:	lea	rax, [rsp + 0x20]
0xbf76:	mov	r12, rdi
0xbf79:	mov	r13, rsi
0xbf7c:	xor	ebx, ebx
0xbf7e:	mov	qword ptr [rsp + 0x18], rax
0xbf83:	jmp	0xbfdd


0xb816:	test	rbp, rbp
0xb819:	je	0xb87e


0xb7b6:	cmp	dword ptr [rdi + 0x90], 1
0xb7bd:	jg	0xb8f0


0xb668:	mov	r8, qword ptr [rsi]
0xb66b:	movzx	eax, cl
0xb66e:	sar	rax, 6
0xb672:	mov	r8, qword ptr [r8 + rax*8]
0xb676:	xor	eax, eax
0xb678:	bt	r8, rcx
0xb67c:	jb	0xb5f0


0xb5b4:	jbe	0xb650


0xb510:	mov	eax, dword ptr [rbp + 0x70]
0xb513:	add	rsp, 8
0xb517:	pop	rbx
0xb518:	pop	rbp
0xb519:	ret	


0xb4be:	cmp	qword ptr [rdi + 0x58], rsi
0xb4c2:	je	0xb568


0xb440:	xor	eax, eax
0xb442:	add	rsp, 0x28
0xb446:	pop	rbx
0xb447:	pop	rbp
0xb448:	pop	r12
0xb44a:	pop	r13
0xb44c:	pop	r14
0xb44e:	pop	r15
0xb450:	ret	


0xb37f:	mov	r14, rdx
0xb382:	mov	r12, rsi
0xb385:	mov	r15, rdi
0xb388:	xor	ebx, ebx
0xb38a:	jmp	0xb39e


0xb002:	lea	rax, [rsi + rdx]
0xb006:	mov	r8, qword ptr [rbx + 0xd8]
0xb00d:	mov	rcx, rax
0xb010:	shr	rcx, 0x3f
0xb014:	add	rcx, rax
0xb017:	sar	rcx, 1
0xb01a:	lea	rax, [rcx + rcx*4]
0xb01e:	cmp	r12, qword ptr [r8 + rax*8 + 8]
0xb023:	jle	0xb052


0xb057:	cmp	rdi, rsi
0xb05a:	jle	0xb07d


0xaf96:	xor	eax, eax
0xaf98:	mov	rcx, qword ptr [rsp + 0x38]
0xaf9d:	xor	rcx, qword ptr fs:[0x28]
0xafa6:	jne	0xafb7


0xaf07:	lea	rax, [rsp + 0x1c]
0xaf0c:	mov	r14, rdi
0xaf0f:	mov	rbx, rsi
0xaf12:	mov	r12, rdx
0xaf15:	mov	rbp, rcx
0xaf18:	xor	r15d, r15d
0xaf1b:	lea	r13, [rsp + 0x20]
0xaf20:	mov	qword ptr [rsp + 8], rax
0xaf25:	jmp	0xaf7c


0xaed0:	mov	dword ptr [rdi], 0
0xaed6:	xor	ebx, ebx
0xaed8:	jmp	0xae6f


0xacfb:	test	rbp, rbp
0xacfe:	jle	0xad1c


0xacbf:	mov	dword ptr [rdi], 0
0xacc5:	xor	r14d, r14d
0xacc8:	jmp	0xaacc


0xaa3b:	mov	r8d, ecx
0xaa3e:	test	r10, r10
0xaa41:	lea	r12, [r8 + r10]
0xaa45:	jle	0xaa5c


0xa975:	test	rdx, rdx
0xa978:	je	0xa981


0xa8d1:	test	rdx, rdx
0xa8d4:	mov	r13, qword ptr [rsi + 8]
0xa8d8:	je	0xa970


0xa880:	pxor	xmm0, xmm0
0xa884:	mov	qword ptr [rdi + 0x10], 0
0xa88c:	xor	eax, eax
0xa88e:	movups	xmmword ptr [rdi], xmm0
0xa891:	pop	rbx
0xa892:	pop	rbp
0xa893:	pop	r12
0xa895:	ret	


0xa845:	mov	rbx, rdi
0xa848:	mov	qword ptr [rdi], rax
0xa84b:	lea	rdi, [rax*8]
0xa853:	mov	rbp, rsi
0xa856:	call	0x1da0


0xa7c3:	mov	rdx, qword ptr [rbx + 0x10]
0xa7c7:	test	rdx, rdx
0xa7ca:	je	0xa7d2


0xa7bd:	cmp	byte ptr [rdx + 0x30], 0x11
0xa7c1:	je	0xa810


0xa6f8:	lea	rax, [rbx + 0x70]
0xa6fc:	lea	r14, [rsp + 0x20]
0xa701:	sub	rbx, -0x80
0xa705:	xor	ecx, ecx
0xa707:	xor	edx, edx
0xa709:	mov	rsi, rbx
0xa70c:	mov	r15, rax
0xa70f:	mov	r8, r14
0xa712:	mov	rdi, rax
0xa715:	mov	byte ptr [rsp + 0x28], 8
0xa71a:	mov	qword ptr [rsp + 8], rax
0xa71f:	call	0xa390


0xa587:	test	rbp, rbp
0xa58a:	je	0xa600


0xa418:	mov	edi, 0x3c8
0xa41d:	mov	qword ptr [rsp + 0x18], r8
0xa422:	mov	qword ptr [rsp + 0x10], rcx
0xa427:	mov	qword ptr [rsp + 8], rdx
0xa42c:	mov	qword ptr [rsp], rsi
0xa430:	call	0x1da0


0xa39f:	movsxd	r9, eax
0xa3a2:	lea	r10d, [rax + 1]
0xa3a6:	mov	rdi, qword ptr [rdi]
0xa3a9:	mov	rax, r9
0xa3ac:	shl	rax, 6
0xa3b0:	add	rax, 8
0xa3b4:	shl	r9, 6
0xa3b8:	mov	dword ptr [rsi], r10d
0xa3bb:	add	rax, rdi
0xa3be:	lea	rsi, [rdi + r9]
0xa3c2:	mov	qword ptr [rsi + 8], 0
0xa3ca:	mov	qword ptr [rsi + 0x10], rdx
0xa3ce:	lea	rdi, [rsi + 0x20]
0xa3d2:	mov	qword ptr [rsi + 0x18], rcx
0xa3d6:	movdqu	xmm0, xmmword ptr [r8]
0xa3db:	movups	xmmword ptr [rsi + 0x30], xmm0
0xa3df:	and	byte ptr [rdi + 0x1a], 0xf3
0xa3e3:	test	rdx, rdx
0xa3e6:	mov	qword ptr [rsi + 0x20], 0
0xa3ee:	mov	qword ptr [rsi + 0x28], 0
0xa3f6:	mov	qword ptr [rsi + 0x40], -1
0xa3fe:	je	0xa403


0xa2a8:	ret	


0xa1ef:	mov	r11, qword ptr [rdx + 8]
0xa1f3:	test	r11, r11
0xa1f6:	je	0xa2a8


0x9ce8:	xor	eax, eax
0x9cea:	ret	


0x9bf9:	mov	rdx, qword ptr [rsi + 8]
0x9bfd:	test	rdx, rdx
0x9c00:	je	0x9ce8


0x99b3:	lea	rax, [rbx + rbp]
0x99b7:	mov	r13, qword ptr [rdi + 0xd8]
0x99be:	mov	r10, rax
0x99c1:	shr	r10, 0x3f
0x99c5:	add	r10, rax
0x99c8:	sar	r10, 1
0x99cb:	lea	rax, [r10 + r10*4]
0x99cf:	cmp	r8, qword ptr [r13 + rax*8 + 8]
0x99d4:	jle	0x9a06


0x9a0b:	cmp	r15, rbx
0x9a0e:	jle	0x9bb0


0x9970:	mov	qword ptr [rdx + 0x20], rsi
0x9974:	xor	eax, eax
0x9976:	ret	


0x992c:	cmp	al, 0x10
0x992e:	je	0x9958


0x98f0:	mov	rax, qword ptr [rdi + 0xe0]
0x98f7:	test	rax, rax
0x98fa:	je	0x989c


0x9898:	cmp	al, 0x11
0x989a:	je	0x98a0


0x9882:	ret	


0x9858:	sub	rax, 1
0x985c:	cmp	rdx, rax
0x985f:	mov	qword ptr [rdi], rax
0x9862:	jge	0x9882


0x9715:	ret	


0x96d7:	mov	r8, qword ptr [rsi]
0x96da:	sub	rdi, 1
0x96de:	xor	esi, esi
0x96e0:	cmp	rsi, rdi
0x96e3:	jae	0x970d


0x9680:	lea	rax, [rdx - 1]
0x9684:	lea	rdx, [rax*8]
0x968c:	jmp	0x96ad


0x967c:	ret	


0x962d:	mov	rdx, qword ptr [rdi + 0x10]
0x9631:	lea	rdi, [rax*4]
0x9639:	cmp	dword ptr [rdx + rax*4], -1
0x963d:	jne	0x9668


0x9668:	mov	eax, 1
0x966d:	ret	


0x95f9:	pop	rbx
0x95fa:	mov	qword ptr [r14 + 0xe8], 0
0x9605:	mov	qword ptr [r14 + 0xc8], 0
0x9610:	pop	rbp
0x9611:	pop	r12
0x9613:	pop	r13
0x9615:	pop	r14
0x9617:	ret	


0x9579:	xor	r13d, r13d
0x957c:	nop	dword ptr [rax]
0x9580:	mov	rax, qword ptr [r14 + 0xf8]
0x9587:	mov	r12, qword ptr [rax + r13*8]
0x958b:	cmp	qword ptr [r12 + 0x20], 0
0x9591:	jle	0x95bd


0x943e:	mov	rdi, qword ptr [r12 + 0x18]
0x9443:	call	0x1b00


0x9413:	cmp	qword ptr [r12 + 0x10], 0
0x9419:	je	0x943e


0x1b00:	jmp	qword ptr [rip + 0x21a29a]


0x92d0:	mov	rax, qword ptr [r14 + 0x18]
0x92d4:	lea	rbx, [r13 + r13*2]
0x92d9:	lea	r15, [r9*8]
0x92e1:	mov	edx, ebp
0x92e3:	shl	rbx, 3
0x92e7:	mov	r9, qword ptr [rax + r9*8]
0x92eb:	mov	qword ptr [rdi + rbx + 8], 0
0x92f4:	mov	rdi, r14
0x92f7:	mov	rsi, r9
0x92fa:	mov	qword ptr [rsp], r9
0x92fe:	call	0x9040


0x911d:	lea	r12, [r9 + r9*2]
0x9121:	shl	r12, 3
0x9125:	lea	rsi, [rdi + r12]
0x9129:	mov	rcx, qword ptr [rsi + 8]
0x912d:	test	rcx, rcx
0x9130:	je	0x9329


0x8e95:	mov	r12, qword ptr [rdi + 0x18]
0x8e99:	mov	rbp, qword ptr [rdi + 0x28]
0x8e9d:	mov	rax, rsi
0x8ea0:	mov	ecx, edx
0x8ea2:	shl	rax, 4
0x8ea6:	add	rax, qword ptr [rbx]
0x8ea9:	and	ecx, 0xfffc00ff
0x8eaf:	mov	qword ptr [rax + 8], rdx
0x8eb3:	mov	dword ptr [rax + 8], ecx
0x8eb6:	xor	ecx, ecx
0x8eb8:	cmp	dl, 6
0x8ebb:	mov	qword ptr [rax], r14
0x8ebe:	sete	cl
0x8ec1:	cmp	dl, 5
0x8ec4:	jne	0x8ed2


0x8f40:	lea	r13, [rbp + rbp]
0x8f45:	movabs	rax, 0xaaaaaaaaaaaaaaa
0x8f4f:	cmp	r13, rax
0x8f52:	ja	0x9032


0x8e40:	mov	rdi, qword ptr [rdi]
0x8e43:	jmp	0x8df0


0x8e2d:	cmp	eax, 3
0x8e30:	je	0x8e38


0x8d7a:	cmp	rax, qword ptr [rdi + 0x58]
0x8d7e:	jge	0x8da0


0x8da0:	mov	rax, qword ptr [rbx + 0x30]
0x8da4:	cmp	rax, rbp
0x8da7:	jg	0x8d8f


0x8c2d:	mov	rdx, qword ptr [rdi + 0x58]
0x8c31:	add	rax, rax
0x8c34:	movsxd	rsi, esi
0x8c37:	mov	rbx, rdi
0x8c3a:	cmp	rax, rdx
0x8c3d:	cmovg	rax, rdx
0x8c41:	cmp	rax, rsi
0x8c44:	cmovge	rsi, rax
0x8c48:	call	0x8080


0x8d38:	mov	ebp, 0xc
0x8d3d:	add	rsp, 8
0x8d41:	mov	eax, ebp
0x8d43:	pop	rbx
0x8d44:	pop	rbp
0x8d45:	ret	


0x8631:	cmp	qword ptr [rdi + 0x78], 0
0x8636:	je	0x87c0


0x863c:	mov	r13, qword ptr [r14 + 0x38]
0x8640:	cmp	r15, rbx
0x8643:	jl	0x8680


0x84e4:	mov	rax, qword ptr [rsp + 0x58]
0x84e9:	xor	rax, qword ptr fs:[0x28]
0x84f2:	mov	qword ptr [rbx + 0x30], rbp
0x84f6:	mov	qword ptr [rbx + 0x38], rbp
0x84fa:	jne	0x85de


0x845b:	lea	r14, [rdi + 0x20]
0x845f:	lea	r13, [rsp + 0xc]
0x8464:	nop	dword ptr [rax]
0x8468:	mov	rdi, qword ptr [rbx + 0x78]
0x846c:	mov	rdx, r12
0x846f:	mov	r15, qword ptr [rbx + 0x20]
0x8473:	sub	rdx, rbp
0x8476:	test	rdi, rdi
0x8479:	jne	0x8560


0x8405:	mov	qword ptr [rbp + 0x30], rbx
0x8409:	mov	qword ptr [rbp + 0x38], rbx
0x840d:	pop	rbx
0x840e:	pop	rbp
0x840f:	pop	r12
0x8411:	ret	


0x83cd:	call	0x1ac0


0x81c8:	mov	qword ptr [rdi], 1
0x81cf:	mov	qword ptr [rdi + 8], 1
0x81d7:	mov	edi, 8
0x81dc:	call	0x1da0


0x81a4:	mov	rsi, qword ptr [rdi + 8]
0x81a8:	mov	rax, qword ptr [rdi + 0x10]
0x81ac:	test	rsi, rsi
0x81af:	jne	0x8200


0x8158:	add	rsi, 1
0x815c:	lea	rdx, [rsi + rsi]
0x8160:	shl	rsi, 4
0x8164:	mov	qword ptr [rdi], rdx
0x8167:	mov	rdi, rax
0x816a:	call	0x1e00


0x8139:	lea	rdx, [rsi + 1]
0x813d:	mov	qword ptr [rbx + 8], rdx
0x8141:	mov	qword ptr [rax + rsi*8], rbp
0x8145:	mov	eax, 1
0x814a:	add	rsp, 8
0x814e:	pop	rbx
0x814f:	pop	rbp
0x8150:	ret	


0x80dd:	cmp	byte ptr [rbx + 0x8b], 0
0x80e4:	jne	0x80f8


0x8095:	movabs	rax, 0x1fffffffffffffff
0x809f:	cmp	rsi, rax
0x80a2:	ja	0x8110


0x8033:	mov	rsi, rbx
0x8036:	mov	rdi, rbp
0x8039:	call	r12


0x7fc3:	mov	rax, qword ptr [rbx + 8]
0x7fc7:	test	rax, rax
0x7fca:	jne	0x7fc0


0x7f58:	mov	rax, qword ptr [rax + 0x18]
0x7f5c:	cmp	rax, r8
0x7f5f:	jl	0x7f80


0x7fa0:	mov	eax, 0xffffffff
0x7fa5:	ret	


0x7ed5:	add	rsp, 0x48
0x7ed9:	mov	eax, r15d
0x7edc:	pop	rbx
0x7edd:	sar	eax, 1
0x7edf:	pop	rbp
0x7ee0:	pop	r12
0x7ee2:	pop	r13
0x7ee4:	pop	r14
0x7ee6:	pop	r15
0x7ee8:	ret	


0x7d47:	lea	rax, [r8 + r8*4]
0x7d4b:	mov	r11, rcx
0x7d4e:	mov	ecx, r9d
0x7d51:	mov	r10, r8
0x7d54:	xor	ebx, ebx
0x7d56:	mov	dword ptr [rsp + 0x20], esi
0x7d5a:	shl	rax, 3
0x7d5e:	mov	r15, r9
0x7d61:	mov	qword ptr [rsp + 0x10], r11
0x7d66:	mov	qword ptr [rsp + 0x28], rax
0x7d6b:	mov	eax, 1
0x7d70:	shl	rax, cl
0x7d73:	mov	qword ptr [rsp + 0x18], rax
0x7d78:	not	eax
0x7d7a:	mov	word ptr [rsp + 0x26], ax
0x7d7f:	mov	eax, esi
0x7d81:	and	eax, 1
0x7d84:	mov	dword ptr [rsp + 0xc], eax
0x7d88:	mov	eax, esi
0x7d8a:	and	eax, 2
0x7d8d:	mov	dword ptr [rsp + 8], eax
0x7d91:	jmp	0x7db5


0x7d00:	cmp	rdi, qword ptr [rsi + 0x28]
0x7d04:	jne	0x7cf6


0x7cf6:	xor	eax, eax
0x7cf8:	ret	


0x7c20:	mov	byte ptr [rdi + 8], 2
0x7c24:	xor	eax, eax
0x7c26:	ret	


0x7bca:	mov	r8, qword ptr [rsi + 8]
0x7bce:	cmp	dword ptr [rsi + 0x90], 1
0x7bd5:	movzx	ecx, byte ptr [r8 + rax]
0x7bda:	mov	byte ptr [rdi], cl
0x7bdc:	jle	0x7bf3


0x1c40:	jmp	qword ptr [rip + 0x21a1fa]


0x7ae0:	mov	rax, qword ptr [rdi + 0x20]
0x7ae4:	cmp	qword ptr [rdi + 0x28], rax
0x7ae8:	jne	0x7ada


0x7ada:	jmp	0x1e80


0x7aaa:	mov	rdi, rbx
0x7aad:	pop	rbx
0x7aae:	jmp	0x1dc0


0x7a99:	call	0x1de0


0x7a62:	mov	rax, qword ptr [rsp + 0x10]
0x7a67:	xor	esi, esi
0x7a69:	mov	edx, dword ptr [rax + 0x10]
0x7a6c:	xor	eax, eax
0x7a6e:	call	0x1b90


0x7861:	cmp	esi, 0x406
0x7867:	jne	0x78b0


0x1d80:	jmp	qword ptr [rip + 0x21a15a]


0x7397:	lea	rax, [rsp + 0x10]
0x739c:	mov	r15, rsi
0x739f:	test	rsi, rsi
0x73a2:	mov	rbp, rdi
0x73a5:	mov	dword ptr [rsp + 8], edx
0x73a9:	mov	r14, rcx
0x73ac:	mov	r13, r8
0x73af:	cmove	r15, rax
0x73b3:	call	0x1b20


0x76f5:	lea	rcx, [rip + 0xfefc]
0x76fc:	lea	rsi, [rip + 0xfced]
0x7703:	lea	rdi, [rip + 0xfd06]
0x770a:	mov	edx, 0x54
0x770f:	call	0x1c90


0x6cd7:	lea	rax, [rsp + 0x10]
0x6cdc:	test	rsi, rsi
0x6cdf:	mov	rbx, rsi
0x6ce2:	mov	r12, rdi
0x6ce5:	mov	ebp, edx
0x6ce7:	mov	r14, rcx
0x6cea:	cmove	rbx, rax
0x6cee:	mov	r15, r8
0x6cf1:	call	0x1b20


0x733f:	lea	rcx, [rip + 0x101ca]
0x7346:	lea	rsi, [rip + 0x100a3]
0x734d:	lea	rdi, [rip + 0x100bc]
0x7354:	mov	edx, 0x54
0x7359:	call	0x1c90


0x6b09:	call	0x3810


0x6af2:	movzx	edx, dl
0x6af5:	test	rdx, rdx
0x6af8:	jne	0x6b09


0x6aa0:	test	rax, rax
0x6aa3:	mov	edx, 0x80
0x6aa8:	cmove	rax, rdx
0x6aac:	test	rax, rax
0x6aaf:	jns	0x6a92


0x6a78:	movabs	rdx, 0x5555555555555553
0x6a82:	cmp	rax, rdx
0x6a85:	ja	0x6ab1


0x6a20:	test	rcx, rcx
0x6a23:	je	0x6a48


0x69eb:	xor	edx, edx
0x69ed:	movabs	rax, 0x5555555555555554
0x69f7:	div	r9
0x69fa:	cmp	rax, rcx
0x69fd:	jbe	0x6a3b


0x69cb:	sub	rsp, 8
0x69cf:	call	0x3810


0x69c1:	movzx	eax, al
0x69c4:	test	rax, rax
0x69c7:	jne	0x69cb


0x6979:	test	rdi, rdi
0x697c:	jne	0x6998


0x697e:	mov	rsi, rbx
0x6981:	call	0x1e00


0x694b:	sub	rsp, 8
0x694f:	call	0x3810


0x6941:	movzx	eax, al
0x6944:	test	rax, rax
0x6947:	jne	0x694b


0x1bf0:	jmp	qword ptr [rip + 0x21a222]


0x6826:	mov	eax, r10d
0x6829:	mov	r11d, 1
0x682f:	add	r10d, 8
0x6833:	add	rax, rbp
0x6836:	mov	rax, qword ptr [rax]
0x6839:	test	rax, rax
0x683c:	mov	qword ptr [r8 + r9*8], rax
0x6840:	je	0x684c


0x687c:	mov	rax, rbx
0x687f:	add	rbx, 8
0x6883:	jmp	0x6836


0x6758:	mov	r11d, eax
0x675b:	add	r11, qword ptr [r10 + 0x10]
0x675f:	add	eax, 8
0x6762:	mov	dword ptr [r10], eax
0x6765:	mov	rax, qword ptr [r11]
0x6768:	test	rax, rax
0x676b:	mov	qword ptr [r8 + r9*8], rax
0x676f:	je	0x677b


0x679a:	mov	r11, qword ptr [r10 + 8]
0x679e:	lea	rax, [r11 + 8]
0x67a2:	mov	qword ptr [r10 + 8], rax
0x67a6:	jmp	0x6765


0x672b:	jmp	0x62f0


0x6428:	mov	r8, rcx
0x642b:	mov	rcx, rdx
0x642e:	lea	rdx, [rip + 0x10c5f]
0x6435:	mov	esi, 1
0x643a:	xor	eax, eax
0x643c:	call	0x1f00


0x6310:	mov	r8, rdx
0x6313:	lea	rdx, [rip + 0x10d6e]
0x631a:	mov	r9, rcx
0x631d:	xor	eax, eax
0x631f:	mov	rcx, rsi
0x6322:	mov	esi, 1
0x6327:	call	0x1f00


0x1cf0:	jmp	qword ptr [rip + 0x21a1a2]


0x61a7:	call	0x1b10


0x6175:	test	rdx, rdx
0x6178:	je	0x61a7


0x6114:	call	0x1b10


0x60ac:	mov	dword ptr [rsp], esi
0x60af:	mov	rcx, rsp
0x60b2:	mov	rdx, -1
0x60b9:	mov	rsi, rax
0x60bc:	mov	qword ptr [rsp + 4], 0
0x60c5:	mov	qword ptr [rsp + 0xc], 0x4000000
0x60ce:	mov	qword ptr [rsp + 0x14], 0
0x60d7:	mov	qword ptr [rsp + 0x1c], 0
0x60e0:	mov	qword ptr [rsp + 0x24], 0
0x60e9:	mov	qword ptr [rsp + 0x2c], 0
0x60f2:	mov	dword ptr [rsp + 0x34], 0
0x60fa:	call	0x5920


0x5f80:	call	0x1b10


0x5f1f:	mov	dword ptr [rsp], esi
0x5f22:	mov	rcx, rsp
0x5f25:	mov	rsi, rax
0x5f28:	mov	qword ptr [rsp + 4], 0
0x5f31:	mov	qword ptr [rsp + 0xc], 0
0x5f3a:	mov	qword ptr [rsp + 0x14], 0
0x5f43:	mov	qword ptr [rsp + 0x1c], 0
0x5f4c:	mov	qword ptr [rsp + 0x24], 0
0x5f55:	mov	qword ptr [rsp + 0x2c], 0
0x5f5e:	mov	dword ptr [rsp + 0x34], 0
0x5f66:	call	0x5920


0x5ef4:	call	0x1b10


0x5e8c:	mov	dword ptr [rsp], esi
0x5e8f:	mov	rcx, rsp
0x5e92:	mov	rdx, -1
0x5e99:	mov	rsi, rax
0x5e9c:	mov	qword ptr [rsp + 4], 0
0x5ea5:	mov	qword ptr [rsp + 0xc], 0
0x5eae:	mov	qword ptr [rsp + 0x14], 0
0x5eb7:	mov	qword ptr [rsp + 0x1c], 0
0x5ec0:	mov	qword ptr [rsp + 0x24], 0
0x5ec9:	mov	qword ptr [rsp + 0x2c], 0
0x5ed2:	mov	dword ptr [rsp + 0x34], 0
0x5eda:	call	0x5920


0x5da1:	mov	rdi, qword ptr [r12 + 8]
0x5da6:	lea	rbx, [rip + 0x216493]
0x5dad:	cmp	rdi, rbx
0x5db0:	je	0x5dc9


0x5d76:	sub	eax, 2
0x5d79:	lea	rbx, [r12 + 0x18]
0x5d7e:	shl	rax, 4
0x5d82:	lea	rbp, [r12 + rax + 0x28]
0x5d87:	nop	word ptr [rax + rax]
0x5d90:	mov	rdi, qword ptr [rbx]
0x5d93:	add	rbx, 0x10
0x5d97:	call	0x1b00


0x1b20:	jmp	qword ptr [rip + 0x21a28a]


0x5bd7:	sub	rsp, 8
0x5bdb:	call	0x1b10


0x5bc9:	test	rdx, rdx
0x5bcc:	je	0x5bd7


0x1c00:	jmp	qword ptr [rip + 0x21a21a]


0x45cd:	mov	rcx, qword ptr [rip + 0x217b0c]
0x45d4:	lea	rdi, [rip + 0x1258d]
0x45db:	mov	edx, 0x37
0x45e0:	mov	esi, 1
0x45e5:	call	0x1ef0


0x4556:	mov	esi, 0x2f
0x455b:	mov	rbx, rdi
0x455e:	call	0x1c70


0x453e:	mov	rax, rcx
0x4541:	ret	


0x4518:	mov	rax, rdi
0x451b:	sub	rcx, 1
0x451f:	mul	rsi
0x4522:	shr	rdx, 3
0x4526:	lea	rax, [rdx + rdx*4]
0x452a:	add	rax, rax
0x452d:	sub	rdi, rax
0x4530:	add	edi, 0x30
0x4533:	test	rdx, rdx
0x4536:	mov	byte ptr [rcx], dil
0x4539:	mov	rdi, rdx
0x453c:	jne	0x4518


0x1e90:	jmp	qword ptr [rip + 0x21a0d2]


0x1e70:	jmp	qword ptr [rip + 0x21a0e2]


0x3f6d:	lea	rsi, [rip + 0x122ec]
0x3f74:	xor	edi, edi
0x3f76:	call	0x1bf0


0x3f3f:	lea	rsi, [rip + 0x122f2]
0x3f46:	xor	edi, edi
0x3f48:	call	0x1bf0


0x3eb8:	cmp	byte ptr [rip + 0x218339], 0
0x3ebf:	push	rbx
0x3ec0:	jne	0x3ed8


0x3eac:	mov	rax, qword ptr [rax + 0x18]
0x3eb0:	ret	


0x3e78:	cmp	byte ptr [rip + 0x218379], 0
0x3e7f:	jne	0x3e68


0x3db9:	mov	rdx, qword ptr [rbx + 0x10]
0x3dbd:	cmp	rdx, rbp
0x3dc0:	jbe	0x3dd7


0x3d88:	call	0x3c90


0x3cbd:	mov	rdx, qword ptr [rip + 0x21855c]
0x3cc4:	test	rdx, rdx
0x3cc7:	je	0x3d40


0x3c9d:	lea	rsi, [rbx + 0x30]
0x3ca1:	lea	rdi, [rbx + 0x28]
0x3ca5:	call	0x37c0


0x3b2c:	mov	ebp, 0x2000
0x3b31:	mov	r13d, 0x1fff
0x3b37:	jmp	0x398c


0x38a8:	test	rdi, rdi
0x38ab:	je	0x38f8


0x386b:	lea	rax, [rcx + 1]
0x386f:	mov	qword ptr [rip + 0x21892a], rax
0x3876:	lea	rax, [rcx + rcx*2]
0x387a:	shl	rax, 5
0x387e:	add	rax, rdi
0x3881:	mov	byte ptr [rax + 0x1e], 0
0x3885:	mov	qword ptr [rax + 0x10], 0
0x388d:	mov	byte ptr [rax + 0x1c], 0
0x3891:	mov	qword ptr [rax + 8], 0
0x3899:	mov	qword ptr [rax], 0
0x38a0:	add	rsp, 8
0x38a4:	ret	


0x37ec:	mov	rdi, qword ptr [rbp]
0x37f0:	mov	qword ptr [r12], 0
0x37f8:	call	0x1b00


0x3780:	mov	rbx, rdi
0x3783:	mov	edi, 0x520
0x3788:	call	0x6910


0x36ed:	mov	rbx, qword ptr [rbp]
0x36f1:	mov	rax, qword ptr [rbx]
0x36f4:	cmp	rax, 0x50
0x36f8:	je	0x3730


0x35f8:	mov	edi, ebx
0x35fa:	xor	esi, esi
0x35fc:	call	0x1d50


0x35ee:	mov	edi, 1
0x35f3:	call	0x3160


0x1df0:	jmp	qword ptr [rip + 0x21a122]


0x32eb:	mov	rax, qword ptr [rsp + 0x98]
0x32f3:	xor	rax, qword ptr fs:[0x28]
0x32fc:	jne	0x33c1


0x32ac:	test	byte ptr [rdi], 0x20
0x32af:	jne	0x3406


0x3208:	mov	dword ptr [rip + 0x218fc6], 0
0x3212:	ret	


0x316e:	push	r13
0x3170:	push	r12
0x3172:	lea	r13, [rip + 0x139e8]
0x3179:	push	rbp
0x317a:	push	rbx
0x317b:	mov	r12d, edi
0x317e:	xor	ebx, ebx
0x3180:	sub	rsp, 8
0x3184:	jmp	0x319d


0x1b60:	jmp	qword ptr [rip + 0x21a26a]


0x3059:	cmp	qword ptr [rip + 0x218f97], 0
0x3061:	push	rbp
0x3062:	mov	rbp, rsp
0x3065:	je	0x3073


0x3088:	ret	


0x3040:	pop	rbp
0x3041:	ret	


0x3028:	mov	rax, qword ptr [rip + 0x218fc1]
0x302f:	test	rax, rax
0x3032:	je	0x3040


0x2ff0:	pop	rbp
0x2ff1:	ret	


0x2fd7:	mov	rax, qword ptr [rip + 0x218ffa]
0x2fde:	test	rax, rax
0x2fe1:	je	0x2ff0




0x1aaa:	add	rsp, 8
0x1aae:	ret	


0x1aa8:	call	rax










0x15c89:	mov	rdi, rsi
0x15c8c:	mov	qword ptr [rsp + 8], rsi
0x15c91:	call	0x1c10


0x15cd8:	test	byte ptr [rbp + 0x38], 0x10
0x15cdc:	mov	rcx, qword ptr [rcx]
0x15cdf:	mov	rdx, qword ptr [r12 + 8]
0x15ce4:	jne	0x15ca6


0x1b10:	jmp	qword ptr [rip + 0x21a292]




0x15990:	mov	r15, rbx
0x15993:	add	r15, rbp
0x15996:	jo	0x15a50


0x159ea:	add	rsp, 0x28
0x159ee:	mov	rax, rbx
0x159f1:	pop	rbx
0x159f2:	pop	rbp
0x159f3:	pop	r12
0x159f5:	pop	r13
0x159f7:	pop	r14
0x159f9:	pop	r15
0x159fb:	ret	


0x15602:	add	rsp, 0x38
0x15606:	mov	rax, r12
0x15609:	pop	rbx
0x1560a:	pop	rbp
0x1560b:	pop	r12
0x1560d:	pop	r13
0x1560f:	pop	r14
0x15611:	pop	r15
0x15613:	ret	


0x15503:	cmp	r8, rdx
0x15506:	mov	rbx, rcx
0x15509:	mov	r15, rdi
0x1550c:	jg	0x15790


0x1e00:	jmp	qword ptr [rip + 0x21a11a]


0x1432d:	movabs	rax, 0x555555555555554
0x14337:	mov	dword ptr [rbx + 0x80], 0xf
0x14341:	cmp	qword ptr [rsp], rax
0x14345:	ja	0x14986


0x1432a:	rep stosq	qword ptr [rdi], rax


0x12bbc:	add	rsp, 0x128
0x12bc3:	pop	rbx
0x12bc4:	pop	rbp
0x12bc5:	pop	r12
0x12bc7:	pop	r13
0x12bc9:	pop	r14
0x12bcb:	pop	r15
0x12bcd:	ret	


0x13f2e:	call	0x1c20


0x123a8:	add	rsp, 0x38
0x123ac:	pop	rbx
0x123ad:	pop	rbp
0x123ae:	pop	r12
0x123b0:	pop	r13
0x123b2:	pop	r14
0x123b4:	pop	r15
0x123b6:	ret	


0x129c8:	call	0x1c20


0x123c0:	cmp	r12b, 0x5c
0x123c4:	je	0x12440


0x1232d:	cmp	r14, qword ptr [rsi + 0x30]
0x12331:	je	0x124d0


0x12130:	mov	r12, qword ptr [r10 + 0x68]
0x12134:	cmp	r11, r12
0x12137:	jge	0x12258


0x1210d:	cmp	al, 0x1c
0x1210f:	je	0x12130


0x11aec:	mov	qword ptr [r14], 0
0x11af3:	xor	eax, eax
0x11af5:	jmp	0x118b8


0x11ba0:	mov	qword ptr [rsp + 0x10], 0
0x11ba9:	jmp	0x11948


0x11897:	mov	rdx, qword ptr [rsi]
0x1189a:	mov	qword ptr [rdx + rbp*8], 0
0x118a2:	mov	rdx, qword ptr [rax + rbp*8]
0x118a6:	xor	eax, eax
0x118a8:	test	byte ptr [rdx + 0x68], 0x40
0x118ac:	jne	0x1198f


0x118e8:	lea	rdi, [rsp + 0x60]
0x118ed:	mov	rdx, rbx
0x118f0:	mov	rsi, r12
0x118f3:	mov	dword ptr [rsp + 0x60], 0
0x118fb:	call	0xace0


0x1015e:	mov	rdi, qword ptr [rsi + 0x20]
0x10162:	mov	qword ptr [rsp + 0x1b8], rbx
0x1016a:	test	rdi, rdi
0x1016d:	mov	qword ptr [rsp + 0x68], rdi
0x10172:	je	0x10196


0xfc25:	mov	rcx, qword ptr [rsp + 0x28]
0xfc2a:	xor	rcx, qword ptr fs:[0x28]
0xfc33:	mov	rax, rbp
0xfc36:	jne	0xfda7


0xfd48:	test	rbp, rbp
0xfd4b:	je	0xfda0


0xfd38:	mov	qword ptr [r14], rdx
0xfd3b:	mov	rbp, rdx
0xfd3e:	jmp	0xfc17


0xfc5c:	test	rdx, rdx
0xfc5f:	mov	rax, qword ptr [rax + 0x50]
0xfc63:	je	0xfcf0


0xf65f:	add	rsp, 0xb8
0xf666:	pop	rbx
0xf667:	pop	rbp
0xf668:	pop	r12
0xf66a:	pop	r13
0xf66c:	pop	r14
0xf66e:	pop	r15
0xf670:	ret	


0xfbac:	call	0x1c20


0xf397:	mov	rax, qword ptr [rsp + 0x40]
0xf39c:	mov	rdi, qword ptr [rsp]
0xf3a0:	mov	rax, qword ptr [rax]
0xf3a3:	mov	r13, qword ptr [rax + rdi*8]
0xf3a7:	mov	rdi, qword ptr [rsp + 0x38]
0xf3ac:	mov	rax, qword ptr [rdi]
0xf3af:	mov	rbx, r13
0xf3b2:	shl	rbx, 4
0xf3b6:	add	rax, rbx
0xf3b9:	cmp	byte ptr [rax + 8], 4
0xf3bd:	jne	0xf380


0xe8bd:	mov	rax, qword ptr [rbp - 0x90]
0xe8c4:	pxor	xmm0, xmm0
0xe8c8:	mov	qword ptr [rbp - 0x60], 0
0xe8d0:	mov	rbx, qword ptr [rax + 0x90]
0xe8d7:	mov	rax, qword ptr [rbp - 0x98]
0xe8de:	movaps	xmmword ptr [rbp - 0x70], xmm0
0xe8e2:	shl	rax, 4
0xe8e6:	cmp	rax, 0xfbf
0xe8ec:	mov	qword ptr [rbp - 0xb8], rax
0xe8f3:	ja	0xefe6


0xe570:	lea	rsi, [rbp - 1]
0xe574:	mov	qword ptr [r15 + 0x48], rbp
0xe578:	mov	rdi, r15
0xe57b:	call	0xb4b0


0xe194:	lea	rsi, [r12 - 1]
0xe199:	mov	qword ptr [r15 + 0x48], r12
0xe19d:	mov	rdi, r15
0xe1a0:	call	0xb4b0


0xe7fb:	mov	eax, 0xc
0xe800:	jmp	0xe664


0xe78c:	lea	r14, [r13 + r12]
0xe791:	movabs	rax, 0x1fffffffffffffff
0xe79b:	cmp	r14, rax
0xe79e:	ja	0xe7fb


0xdf70:	xor	ebp, ebp
0xdf72:	add	rsp, 8
0xdf76:	mov	eax, ebp
0xdf78:	pop	rbx
0xdf79:	pop	rbp
0xdf7a:	pop	r12
0xdf7c:	pop	r13
0xdf7e:	ret	


0xdfbf:	mov	rcx, qword ptr [rcx + 0x58]
0xdfc3:	lea	rdi, [r8 + 1]
0xdfc7:	cmp	rdi, rcx
0xdfca:	jge	0xdf70


0xdeae:	mov	rbx, rsi
0xdeb1:	mov	rdi, rcx
0xdeb4:	mov	rsi, r8
0xdeb7:	mov	r10, rcx
0xdeba:	call	0x9620


0xddcd:	mov	rax, qword ptr [rsp + 0x168]
0xddd5:	xor	rax, qword ptr fs:[0x28]
0xddde:	jne	0xde72


0xd9c2:	lea	rax, [rsp + 0x58]
0xd9c7:	mov	qword ptr [rsp], 0
0xd9cf:	mov	qword ptr [rsp + 0x40], rax
0xd9d4:	lea	rax, [rsp + 0x54]
0xd9d9:	mov	qword ptr [rsp + 0x48], rax
0xd9de:	lea	rax, [rsp + 0x60]
0xd9e3:	mov	qword ptr [rsp + 0x38], rax
0xd9e8:	jmp	0xda2e




0xd039:	lea	r14, [rcx + rcx + 1]
0xd03e:	mov	rdi, rax
0xd041:	mov	qword ptr [rsp + 8], r8
0xd046:	mov	qword ptr [rsp], rdx
0xd04a:	lea	rsi, [r14*8]
0xd052:	call	0x1e00


0xcf28:	lea	rdx, [rcx + 1]
0xcf2c:	mov	rdi, r12
0xcf2f:	mov	qword ptr [r13], rdx
0xcf33:	lea	r13, [rax + rcx*8]
0xcf37:	call	0x1d10


0xcf02:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xcf04:	seta	al
0xcf07:	sbb	al, 0
0xcf09:	test	al, al
0xcf0b:	jne	0xd006




0x1c90:	jmp	qword ptr [rip + 0x21a1d2]


0x1d70:	jmp	qword ptr [rip + 0x21a162]


0xc111:	call	0x1b00


0xbfdd:	mov	rax, qword ptr [rbp + 0x10]
0xbfe1:	mov	rax, qword ptr [rax + rbx*8]
0xbfe5:	cmp	r13, rax
0xbfe8:	je	0xbfd0


0xb87e:	mov	rax, qword ptr [rbx + 0x58]
0xb882:	sub	qword ptr [rbx + 0x68], rbp
0xb886:	mov	qword ptr [rbx + 0x28], r15
0xb88a:	sub	rax, rbp
0xb88d:	cmp	dword ptr [rbx + 0x90], 1
0xb894:	mov	qword ptr [rbx + 0x58], rax
0xb898:	jle	0xb938


0xb81b:	mov	rax, qword ptr [rbx + 0x38]
0xb81f:	movzx	edx, byte ptr [rbx + 0x8c]
0xb826:	mov	r8, qword ptr [rbx + 0x30]
0xb82a:	cmp	rax, rbp
0xb82d:	jle	0xb950


0xb7c3:	mov	rax, qword ptr [rbx + 0x50]
0xb7c7:	mov	qword ptr [rbx + 0x30], 0
0xb7cf:	mov	rbp, r15
0xb7d2:	mov	qword ptr [rbx + 0x28], 0
0xb7da:	mov	qword ptr [rbx + 0x38], 0
0xb7e2:	mov	byte ptr [rbx + 0x8c], 0
0xb7e9:	mov	qword ptr [rbx + 0x58], rax
0xb7ed:	mov	rax, qword ptr [rbx + 0x60]
0xb7f1:	mov	qword ptr [rbx + 0x68], rax
0xb7f5:	mov	eax, r10d
0xb7f8:	and	eax, 1
0xb7fb:	cmp	eax, 1
0xb7fe:	sbb	eax, eax
0xb800:	and	eax, 2
0xb803:	add	eax, 4
0xb806:	cmp	byte ptr [rbx + 0x8b], 0
0xb80d:	mov	dword ptr [rbx + 0x70], eax
0xb810:	je	0xb8e0


0xb8f0:	mov	qword ptr [rdi + 0x20], 0
0xb8f8:	jmp	0xb7c3


0xb5f0:	push	rbx
0xb5f1:	mov	ebx, dword ptr [rsi + 8]
0xb5f4:	mov	eax, 1
0xb5f9:	test	ebx, 0x3ff00
0xb5ff:	je	0xb64c


0xb682:	ret	


0xb650:	cmp	al, 1
0xb652:	jne	0xb660


0xb5ba:	cmp	al, 5
0xb5bc:	je	0xb5d0


0xb568:	and	edx, 2
0xb56b:	cmp	edx, 1
0xb56e:	sbb	eax, eax
0xb570:	and	eax, 2
0xb573:	add	eax, 8
0xb576:	jmp	0xb502


0xb4c8:	cmp	dword ptr [rdi + 0x90], 1
0xb4cf:	jle	0xb520


0xb39e:	mov	rax, qword ptr [r14]
0xb3a1:	mov	rbp, qword ptr [rax + rbx*8]
0xb3a5:	mov	rax, rbp
0xb3a8:	shl	rax, 4
0xb3ac:	add	rax, qword ptr [r13]
0xb3b0:	cmp	byte ptr [rax + 8], 8
0xb3b4:	jne	0xb390


0xb052:	cmp	rsi, rcx
0xb055:	jl	0xb030


0xb025:	jmp	0xb0a8


0xb07d:	xor	eax, eax
0xb07f:	mov	rbx, qword ptr [rsp + 0x68]
0xb084:	xor	rbx, qword ptr fs:[0x28]
0xb08d:	jne	0xb359


0xb05c:	mov	rcx, qword ptr [rbx + 0xd8]
0xb063:	lea	rax, [rsi + rsi*4]
0xb067:	shl	rax, 3
0xb06b:	cmp	qword ptr [rcx + rax + 8], r12
0xb070:	mov	qword ptr [rsp + 0x30], rax
0xb075:	jne	0xb07d


0xafa8:	add	rsp, 0x48
0xafac:	pop	rbx
0xafad:	pop	rbp
0xafae:	pop	r12
0xafb0:	pop	r13
0xafb2:	pop	r14
0xafb4:	pop	r15
0xafb6:	ret	


0xafb7:	call	0x1c20


0xaf7c:	mov	rsi, qword ptr [rbx + r15*8]
0xaf80:	mov	rdx, qword ptr [r12 + r15*8]
0xaf84:	test	rsi, rsi
0xaf87:	jne	0xaf30


0xae6f:	add	rsp, 8
0xae73:	mov	rax, rbx
0xae76:	pop	rbx
0xae77:	pop	rbp
0xae78:	pop	r12
0xae7a:	pop	r13
0xae7c:	pop	r14
0xae7e:	pop	r15
0xae80:	ret	


0xad1c:	mov	rax, qword ptr [rsi + 0x88]
0xad23:	mov	r14, rdx
0xad26:	mov	r12, rsi
0xad29:	mov	r13, rdi
0xad2c:	and	rax, rbp
0xad2f:	lea	rdx, [rax + rax*2]
0xad33:	mov	rax, qword ptr [rsi + 0x40]
0xad37:	lea	rax, [rax + rdx*8]
0xad3b:	mov	r10, qword ptr [rax]
0xad3e:	test	r10, r10
0xad41:	jle	0xad76


0xad00:	mov	rax, qword ptr [rdx + 0x10]
0xad04:	lea	rcx, [rax + rbp*8]
0xad08:	nop	dword ptr [rax + rax]
0xad10:	add	rbp, qword ptr [rax]
0xad13:	add	rax, 8
0xad17:	cmp	rcx, rax
0xad1a:	jne	0xad10


0xaacc:	add	rsp, 0x28
0xaad0:	mov	rax, r14
0xaad3:	pop	rbx
0xaad4:	pop	rbp
0xaad5:	pop	r12
0xaad7:	pop	r13
0xaad9:	pop	r14
0xaadb:	pop	r15
0xaadd:	ret	


0xaa5c:	mov	rax, qword ptr [rsi + 0x88]
0xaa63:	mov	rbp, rdx
0xaa66:	mov	dword ptr [rsp + 4], ecx
0xaa6a:	mov	r13, rsi
0xaa6d:	mov	qword ptr [rsp + 0x18], rdi
0xaa72:	and	rax, r12
0xaa75:	lea	rdx, [rax + rax*2]
0xaa79:	mov	rax, qword ptr [rsi + 0x40]
0xaa7d:	lea	rax, [rax + rdx*8]
0xaa81:	mov	r11, qword ptr [rax]
0xaa84:	test	r11, r11
0xaa87:	jle	0xaae0


0xaa47:	mov	rax, qword ptr [rdx + 0x10]
0xaa4b:	lea	r10, [rax + r10*8]
0xaa4f:	nop	
0xaa50:	add	r12, qword ptr [rax]
0xaa53:	add	rax, 8
0xaa57:	cmp	r10, rax
0xaa5a:	jne	0xaa50


0xa981:	pxor	xmm0, xmm0
0xa985:	mov	qword ptr [rdi + 0x10], 0
0xa98d:	xor	eax, eax
0xa98f:	movaps	xmmword ptr [rdi], xmm0
0xa992:	pop	rbx
0xa993:	pop	rbp
0xa994:	pop	r12
0xa996:	pop	r13
0xa998:	pop	r14
0xa99a:	ret	


0xa97a:	cmp	qword ptr [rdx + 8], 0
0xa97f:	jg	0xa9a0


0xa970:	test	r13, r13
0xa973:	jg	0xa9a3


0xa8de:	test	r13, r13
0xa8e1:	jle	0xa970


0xa7d2:	mov	rcx, qword ptr [rsp + 8]
0xa7d7:	xor	rcx, qword ptr fs:[0x28]
0xa7e0:	mov	eax, dword ptr [rsp + 4]
0xa7e4:	jne	0xa82b


0xa7cc:	cmp	byte ptr [rdx + 0x30], 0x11
0xa7d0:	je	0xa7f0


0xa810:	lea	rdi, [rsp + 4]
0xa815:	mov	rsi, rbp
0xa818:	call	0xa550


0xa600:	lea	rax, [rbx + 0x70]
0xa604:	lea	r14, [rsp + 0x20]
0xa609:	sub	rbx, -0x80
0xa60d:	xor	ecx, ecx
0xa60f:	xor	edx, edx
0xa611:	mov	rsi, rbx
0xa614:	mov	r15, rax
0xa617:	mov	r8, r14
0xa61a:	mov	rdi, rax
0xa61d:	mov	byte ptr [rsp + 0x28], 8
0xa622:	mov	qword ptr [rsp + 8], rax
0xa627:	call	0xa390


0xa58c:	mov	rax, qword ptr [rdx + 0x28]
0xa590:	cmp	rax, 0x3f
0xa594:	jg	0xa6cd


0xa403:	test	rcx, rcx
0xa406:	je	0xa40b


0xa400:	mov	qword ptr [rdx], rax
0xa403:	test	rcx, rcx
0xa406:	je	0xa40b


0xa1fc:	push	r13
0xa1fe:	push	r12
0xa200:	lea	rax, [r9 + r11]
0xa204:	push	rbp
0xa205:	push	rbx
0xa206:	mov	r12, rdx
0xa209:	mov	rbx, rdi
0xa20c:	mov	rbp, rsi
0xa20f:	sub	rsp, 8
0xa213:	mov	rcx, qword ptr [rdi + 8]
0xa217:	mov	r13, qword ptr [rdi]
0xa21a:	mov	rdi, qword ptr [rdi + 0x10]
0xa21e:	lea	rdx, [rax + rcx]
0xa222:	cmp	rdx, r13
0xa225:	jg	0xa350


0x9c06:	push	r12
0x9c08:	push	rbp
0x9c09:	mov	r12, rsi
0x9c0c:	push	rbx
0x9c0d:	mov	rax, qword ptr [rdi + 8]
0x9c11:	mov	rbx, rdi
0x9c14:	mov	rsi, qword ptr [rdi]
0x9c17:	lea	rcx, [rax + rdx*2]
0x9c1b:	cmp	rsi, rcx
0x9c1e:	jl	0x9d68


0x9a06:	cmp	rbx, r10
0x9a09:	jl	0x99e0


0x99d6:	jmp	0x9b70


0x9bb0:	mov	rbx, -1
0x9bb7:	jmp	0x9a32


0x9a14:	mov	r11, qword ptr [rdi + 0xd8]
0x9a1b:	lea	rax, [rbx + rbx*4]
0x9a1f:	lea	rax, [r11 + rax*8]
0x9a23:	cmp	r8, qword ptr [rax + 8]
0x9a27:	mov	rax, -1
0x9a2e:	cmovne	rbx, rax
0x9a32:	mov	rax, r15
0x9a35:	xor	ebp, ebp
0x9a37:	cmp	rbp, rax
0x9a3a:	jge	0x9a94


0x9958:	mov	rax, qword ptr [rsi + 0x10]
0x995c:	mov	rcx, qword ptr [rax + 0x18]
0x9960:	mov	qword ptr [rdx + 0x20], rcx
0x9964:	mov	rdx, qword ptr [rsi + 0x20]
0x9968:	mov	qword ptr [rax + 0x20], rdx
0x996c:	xor	eax, eax
0x996e:	ret	


0x9930:	test	rdx, rdx
0x9933:	je	0x993d


0x989c:	xor	eax, eax
0x989e:	ret	


0x98fc:	movsxd	rdx, dword ptr [rsi + 0x28]
0x9900:	mov	rcx, qword ptr [rax + rdx*8]
0x9904:	mov	eax, 1
0x9909:	shl	eax, cl
0x990b:	mov	qword ptr [rsi + 0x28], rcx
0x990f:	cdqe	
0x9911:	or	qword ptr [rdi + 0xa0], rax
0x9918:	xor	eax, eax
0x991a:	ret	


0x98a0:	mov	rax, qword ptr [rsi + 8]
0x98a4:	test	rax, rax
0x98a7:	je	0x989c


0x9864:	mov	rax, qword ptr [rsi]
0x9867:	nop	word ptr [rax + rax]
0x9870:	mov	rcx, qword ptr [rax + rdx*8 + 8]
0x9875:	mov	qword ptr [rax + rdx*8], rcx
0x9879:	add	rdx, 1
0x987d:	cmp	rdx, qword ptr [rdi]
0x9880:	jl	0x9870


0x96e5:	lea	rcx, [rsi + rdi]
0x96e9:	shr	rcx, 1
0x96ec:	cmp	rdx, qword ptr [r8 + rcx*8]
0x96f0:	jle	0x9708


0x970d:	xor	eax, eax
0x970f:	cmp	rdx, qword ptr [r8 + rsi*8]
0x9713:	je	0x9740


0x96ad:	test	rax, rax
0x96b0:	jns	0x9690


0x963f:	sub	rcx, rsi
0x9642:	lea	rsi, [rdx + rdi - 4]
0x9647:	mov	edx, 2
0x964c:	jmp	0x965b


0x95bd:	mov	rdi, qword ptr [r12 + 0x28]
0x95c2:	call	0x1b00


0x9593:	xor	ebx, ebx
0x9595:	nop	dword ptr [rax]
0x9598:	mov	rax, qword ptr [r12 + 0x28]
0x959d:	mov	rbp, qword ptr [rax + rbx*8]
0x95a1:	add	rbx, 1
0x95a5:	mov	rdi, qword ptr [rbp + 0x20]
0x95a9:	call	0x1b00


0x941b:	xor	ebx, ebx
0x941d:	jmp	0x9424




0x9329:	mov	rax, qword ptr [r14 + 0x18]
0x932d:	mov	rcx, qword ptr [rax + r9*8]
0x9331:	mov	qword ptr [rax + r13*8], rcx
0x9335:	xor	eax, eax
0x9337:	jmp	0x9210


0x9136:	lea	rbx, [r13 + r13*2]
0x913b:	mov	rsi, qword ptr [rsi + 0x10]
0x913f:	shl	rbx, 3
0x9143:	add	rdi, rbx
0x9146:	cmp	rcx, 1
0x914a:	mov	r15, qword ptr [rsi]
0x914d:	mov	qword ptr [rdi + 8], 0
0x9155:	je	0x9270


0x8ec6:	xor	ecx, ecx
0x8ec8:	cmp	dword ptr [rbx + 0xb4], 1
0x8ecf:	setg	cl
0x8ed2:	movzx	edx, byte ptr [rax + 0xa]
0x8ed6:	shl	ecx, 4
0x8ed9:	pxor	xmm0, xmm0
0x8edd:	and	edx, 0xffffffef
0x8ee0:	or	edx, ecx
0x8ee2:	mov	byte ptr [rax + 0xa], dl
0x8ee5:	mov	qword ptr [r12 + rsi*8], -1
0x8eed:	mov	rax, qword ptr [rbx + 0x10]
0x8ef1:	lea	rax, [rax + rax*2]
0x8ef5:	lea	rax, [rbp + rax*8]
0x8efa:	movups	xmmword ptr [rax], xmm0
0x8efd:	mov	qword ptr [rax + 0x10], 0
0x8f05:	mov	rax, qword ptr [rbx + 0x10]
0x8f09:	lea	rdx, [rax + rax*2]
0x8f0d:	mov	rax, qword ptr [rbx + 0x30]
0x8f11:	lea	rax, [rax + rdx*8]
0x8f15:	movups	xmmword ptr [rax], xmm0
0x8f18:	mov	qword ptr [rax + 0x10], 0
0x8f20:	mov	rax, qword ptr [rbx + 0x10]
0x8f24:	lea	rdx, [rax + 1]
0x8f28:	mov	qword ptr [rbx + 0x10], rdx
0x8f2c:	add	rsp, 0x18
0x8f30:	pop	rbx
0x8f31:	pop	rbp
0x8f32:	pop	r12
0x8f34:	pop	r13
0x8f36:	pop	r14
0x8f38:	pop	r15
0x8f3a:	ret	


0x8ed2:	movzx	edx, byte ptr [rax + 0xa]
0x8ed6:	shl	ecx, 4
0x8ed9:	pxor	xmm0, xmm0
0x8edd:	and	edx, 0xffffffef
0x8ee0:	or	edx, ecx
0x8ee2:	mov	byte ptr [rax + 0xa], dl
0x8ee5:	mov	qword ptr [r12 + rsi*8], -1
0x8eed:	mov	rax, qword ptr [rbx + 0x10]
0x8ef1:	lea	rax, [rax + rax*2]
0x8ef5:	lea	rax, [rbp + rax*8]
0x8efa:	movups	xmmword ptr [rax], xmm0
0x8efd:	mov	qword ptr [rax + 0x10], 0
0x8f05:	mov	rax, qword ptr [rbx + 0x10]
0x8f09:	lea	rdx, [rax + rax*2]
0x8f0d:	mov	rax, qword ptr [rbx + 0x30]
0x8f11:	lea	rax, [rax + rdx*8]
0x8f15:	movups	xmmword ptr [rax], xmm0
0x8f18:	mov	qword ptr [rax + 0x10], 0
0x8f20:	mov	rax, qword ptr [rbx + 0x10]
0x8f24:	lea	rdx, [rax + 1]
0x8f28:	mov	qword ptr [rbx + 0x10], rdx
0x8f2c:	add	rsp, 0x18
0x8f30:	pop	rbx
0x8f31:	pop	rbp
0x8f32:	pop	r12
0x8f34:	pop	r13
0x8f36:	pop	r14
0x8f38:	pop	r15
0x8f3a:	ret	


0x8f58:	mov	rdi, qword ptr [rdi]
0x8f5b:	mov	rsi, rbp
0x8f5e:	mov	qword ptr [rsp + 8], rdx
0x8f63:	shl	rsi, 5
0x8f67:	call	0x1e00


0x9032:	mov	rax, -1
0x9039:	jmp	0x8f2c


0x8e38:	mov	rdi, qword ptr [rdi]
0x8e3b:	jmp	0x1b00


0x8e32:	ret	


0x8d80:	lea	esi, [rbp + 1]
0x8d83:	mov	rdi, rbx
0x8d86:	call	0x8c10


0x8da9:	cmp	rax, qword ptr [rbx + 0x58]
0x8dad:	jge	0x8d8f


0x8d8f:	cmp	r12, rbp
0x8d92:	jl	0x8dc0


0x87c0:	cmp	byte ptr [rdi + 0x8c], 0
0x87c7:	jne	0x863c


0x8680:	lea	rax, [r14 + 0x20]
0x8684:	mov	qword ptr [rsp + 8], rax
0x8689:	mov	rax, rbx
0x868c:	sub	rax, r15
0x868f:	mov	qword ptr [rsp + 0x10], rax
0x8694:	lea	rax, [rsp + 0x44]
0x8699:	mov	qword ptr [rsp + 0x20], rax
0x869e:	mov	rdx, qword ptr [r14 + 0x78]
0x86a2:	mov	rax, qword ptr [r14 + 0x20]
0x86a6:	test	rdx, rdx
0x86a9:	mov	qword ptr [rsp + 0x48], rax
0x86ae:	jne	0x89b9


0x8645:	mov	qword ptr [r14 + 0x30], r15
0x8649:	mov	qword ptr [r14 + 0x38], r13
0x864d:	xor	eax, eax
0x864f:	mov	rcx, qword ptr [rsp + 0x98]
0x8657:	xor	rcx, qword ptr fs:[0x28]
0x8660:	jne	0x8bea


0x8500:	add	rsp, 0x68
0x8504:	pop	rbx
0x8505:	pop	rbp
0x8506:	pop	r12
0x8508:	pop	r13
0x850a:	pop	r14
0x850c:	pop	r15
0x850e:	ret	


0x85de:	call	0x1c20


0x847f:	mov	rsi, qword ptr [rbx + 0x28]
0x8483:	add	rsi, rbp
0x8486:	add	rsi, qword ptr [rbx]
0x8489:	mov	rcx, r14
0x848c:	mov	rdi, r13
0x848f:	call	0x7b30


0x8560:	mov	ecx, dword ptr [rbx + 0x90]
0x8566:	xor	eax, eax
0x8568:	lea	rsi, [rsp + 0x10]
0x856d:	test	ecx, ecx
0x856f:	jg	0x8591


0x1ac0:	jmp	qword ptr [rip + 0x21a2ba]


0x81b1:	mov	qword ptr [rax], rbp
0x81b4:	add	qword ptr [rdi + 8], 1
0x81b9:	mov	eax, 1
0x81be:	add	rsp, 8
0x81c2:	pop	rbx
0x81c3:	pop	rbp
0x81c4:	ret	


0x8200:	cmp	rdx, rsi
0x8203:	je	0x8290


0x80e6:	mov	qword ptr [rbx + 0x40], rbp
0x80ea:	add	rsp, 8
0x80ee:	xor	eax, eax
0x80f0:	pop	rbx
0x80f1:	pop	rbp
0x80f2:	ret	


0x80f8:	mov	rdi, qword ptr [rbx + 8]
0x80fc:	mov	rsi, rbp
0x80ff:	call	0x1e00


0x80a4:	mov	rdi, qword ptr [rdi + 0x10]
0x80a8:	lea	rsi, [rsi*4]
0x80b0:	call	0x1e00


0x8110:	add	rsp, 8
0x8114:	mov	eax, 0xc
0x8119:	pop	rbx
0x811a:	pop	rbp
0x811b:	ret	


0x7fcc:	mov	rax, qword ptr [rbx + 0x10]
0x7fd0:	test	rax, rax
0x7fd3:	jne	0x7fc0


0x7fc0:	mov	rbx, rax
0x7fc3:	mov	rax, qword ptr [rbx + 8]
0x7fc7:	test	rax, rax
0x7fca:	jne	0x7fc0


0x7f80:	mov	eax, 1
0x7f85:	ret	


0x7f61:	xor	esi, esi
0x7f63:	cmp	r10, r8
0x7f66:	sete	sil
0x7f6a:	or	esi, 2
0x7f6d:	cmp	rax, r8
0x7f70:	je	0x7f95


0x7db5:	mov	rax, qword ptr [r12 + 0x10]
0x7dba:	mov	rbp, qword ptr [rax + rbx*8]
0x7dbe:	mov	rax, rbp
0x7dc1:	shl	rax, 4
0x7dc5:	add	rax, qword ptr [r14]
0x7dc8:	movzx	edx, byte ptr [rax + 8]
0x7dcc:	cmp	dl, 8
0x7dcf:	jne	0x7d98


0x7d06:	or	byte ptr [rsi + 0x32], 8
0x7d0a:	xor	eax, eax
0x7d0c:	ret	


0x7bf3:	cmp	cl, 0x5c
0x7bf6:	je	0x7c60


0x7bde:	cmp	rax, qword ptr [rsi + 0x30]
0x7be2:	je	0x7bf3




0x7aea:	cmp	qword ptr [rdi + 0x48], 0
0x7aef:	jne	0x7ada


0x1e80:	jmp	qword ptr [rip + 0x21a0da]


0x1dc0:	jmp	qword ptr [rip + 0x21a13a]


0x1de0:	jmp	qword ptr [rip + 0x21a12a]


0x1b90:	jmp	qword ptr [rip + 0x21a252]


0x7869:	mov	rax, qword ptr [rsp + 0x10]
0x786e:	cmp	dword ptr [rip + 0x214b03], 0
0x7875:	mov	dword ptr [rsp], 0x18
0x787c:	mov	r12d, dword ptr [rax + 0x10]
0x7880:	mov	edx, r12d
0x7883:	js	0x79b3


0x78b0:	cmp	esi, 0xb
0x78b3:	je	0x78e0




0x6afa:	call	0x1d30


0x6ab1:	sub	rsp, 8
0x6ab5:	call	0x3810


0x6a92:	mov	qword ptr [rsi], rax
0x6a95:	mov	rsi, rax
0x6a98:	jmp	0x6970


0x6a87:	mov	rdx, rax
0x6a8a:	shr	rdx, 1
0x6a8d:	lea	rax, [rdx + rax + 1]
0x6a92:	mov	qword ptr [rsi], rax
0x6a95:	mov	rsi, rax
0x6a98:	jmp	0x6970


0x6a48:	xor	edx, edx
0x6a4a:	mov	eax, 0x80
0x6a4f:	xor	r8d, r8d
0x6a52:	div	r9
0x6a55:	test	rax, rax
0x6a58:	sete	r8b
0x6a5c:	lea	rcx, [r8 + rax]
0x6a60:	jmp	0x6a25


0x6a25:	mov	rax, rcx
0x6a28:	mul	r9
0x6a2b:	seto	dl
0x6a2e:	test	rax, rax
0x6a31:	movzx	edx, dl
0x6a34:	js	0x6a3b


0x6a3b:	sub	rsp, 8
0x6a3f:	call	0x3810


0x69ff:	mov	rax, rcx
0x6a02:	shr	rax, 1
0x6a05:	lea	rcx, [rax + rcx + 1]
0x6a0a:	mov	qword ptr [rsi], rcx
0x6a0d:	imul	rcx, r9
0x6a11:	mov	rsi, rcx
0x6a14:	jmp	0x6970


0x69c9:	jmp	0x6970


0x6998:	call	0x1b00


0x6949:	jmp	0x6910




0x684c:	test	r11b, r11b
0x684f:	jne	0x6875


0x6842:	add	r9, 1
0x6846:	cmp	r9, 0xa
0x684a:	jne	0x6820


0x6836:	mov	rax, qword ptr [rax]
0x6839:	test	rax, rax
0x683c:	mov	qword ptr [r8 + r9*8], rax
0x6840:	je	0x684c


0x677b:	call	0x62f0


0x6771:	add	r9, 1
0x6775:	cmp	r9, 0xa
0x6779:	jne	0x6750


0x6765:	mov	rax, qword ptr [r11]
0x6768:	test	rax, rax
0x676b:	mov	qword ptr [r8 + r9*8], rax
0x676f:	je	0x677b


0x6720:	add	r9, 1
0x6724:	cmp	qword ptr [r8 + r9*8], 0
0x6729:	jne	0x6720


0x1f00:	jmp	qword ptr [rip + 0x21a09a]




0x617a:	mov	qword ptr [rsp + 0x28], rsi
0x617f:	mov	qword ptr [rsp + 0x30], rdx
0x6184:	mov	rcx, rsp
0x6187:	mov	rdx, r8
0x618a:	mov	rsi, r9
0x618d:	call	0x5920


0x5dc9:	lea	rbx, [rip + 0x2162c0]
0x5dd0:	cmp	r12, rbx
0x5dd3:	je	0x5de4


0x5db2:	call	0x1b00




0x5bce:	mov	qword ptr [rdi + 0x28], rsi
0x5bd2:	mov	qword ptr [rdi + 0x30], rdx
0x5bd6:	ret	




0x1ef0:	jmp	qword ptr [rip + 0x21a0a2]


0x1c70:	jmp	qword ptr [rip + 0x21a1e2]






0x3ec2:	call	0x3930


0x3ed8:	lea	rsi, [rip + 0x12128]
0x3edf:	mov	edx, 5
0x3ee4:	xor	edi, edi
0x3ee6:	call	0x1bf0


0x3e81:	call	0x3930


0x3e68:	add	rsp, 8
0x3e6c:	xor	eax, eax
0x3e6e:	pop	rbx
0x3e6f:	pop	rbp
0x3e70:	ret	


0x3dd7:	mov	rax, qword ptr [rbx + 0x20]
0x3ddb:	add	rax, rdx
0x3dde:	cmp	rax, rbp
0x3de1:	ja	0x3e30


0x3dc2:	jmp	0x3e68


0x3d40:	cmp	byte ptr [rip + 0x2184b1], 0
0x3d47:	jne	0x3d60


0x3cc9:	mov	rax, qword ptr [rdx + 0x18]
0x3ccd:	cmp	rax, qword ptr [rip + 0x21852c]
0x3cd4:	jbe	0x3cdd


0x398c:	mov	edi, 0x48
0x3991:	call	0x6910


0x38f8:	test	rcx, rcx
0x38fb:	mov	eax, 1
0x3900:	mov	edx, 0x60
0x3905:	cmove	rcx, rax
0x3909:	mov	rax, rdx
0x390c:	xor	esi, esi
0x390e:	mul	rcx
0x3911:	jo	0x3922


0x38ad:	movabs	rax, 0xe38e38e38e38e2
0x38b7:	cmp	rcx, rax
0x38ba:	ja	0x391d


0x3730:	mov	edi, 0x520
0x3735:	call	0x6910


0x36fa:	mov	rsi, qword ptr [rbx + 8]
0x36fe:	add	rax, 1
0x3702:	mov	rdi, rsi
0x3705:	add	rsi, 1
0x3709:	shl	rdi, 4
0x370d:	add	rdi, rbx
0x3710:	mov	qword ptr [rdi + 0x20], r13
0x3714:	mov	qword ptr [rdi + 0x18], r12
0x3718:	mov	qword ptr [rbx], rax
0x371b:	mov	qword ptr [rbx + 8], rsi
0x371f:	add	rsp, 8
0x3723:	pop	rbx
0x3724:	pop	rbp
0x3725:	pop	r12
0x3727:	pop	r13
0x3729:	ret	


0x1d50:	jmp	qword ptr [rip + 0x21a172]




0x3302:	add	rsp, 0xa8
0x3309:	pop	rbx
0x330a:	pop	rbp
0x330b:	pop	r12
0x330d:	pop	r13
0x330f:	ret	


0x33c1:	call	0x1c20


0x32b5:	call	0x7790


0x3406:	mov	rsi, qword ptr [rip + 0x218db3]
0x340d:	mov	edi, 4
0x3412:	call	0x5f90


0x319d:	mov	edi, ebx
0x319f:	call	0x30a0




0x3073:	call	0x2fc0


0x3067:	mov	rdi, qword ptr [rip + 0x218f9a]
0x306e:	call	0x1f70


0x3034:	pop	rbp
0x3035:	jmp	rax


0x2fe3:	pop	rbp
0x2fe4:	jmp	rax


0x15ce6:	sub	rsp, 8
0x15cea:	push	rbx
0x15ceb:	push	r12
0x15ced:	push	r13
0x15cef:	jmp	0x15caf


0x15ca6:	sub	rsp, 8
0x15caa:	push	rbx
0x15cab:	push	0
0x15cad:	push	0
0x15caf:	mov	rdi, rbp
0x15cb2:	mov	r9, rdx
0x15cb5:	mov	r8, rdx
0x15cb8:	call	0x100f0




0x1599c:	test	rbp, rbp
0x1599f:	mov	r14, rcx
0x159a2:	mov	rcx, r9
0x159a5:	je	0x15a60


0x15512:	test	rax, rax
0x15515:	js	0x15520


0x15790:	mov	r8, rdx
0x15793:	jmp	0x15537




0x1434b:	mov	r14, qword ptr [rsp]
0x1434f:	lea	rax, [r14 + 1]
0x14353:	mov	rdi, rax
0x14356:	mov	qword ptr [rbx + 8], rax
0x1435a:	mov	qword ptr [rsp + 0x28], rax
0x1435f:	shl	rdi, 4
0x14363:	call	0x1da0


0x14986:	mov	dword ptr [rsp + 0x4c], 0xc
0x1498e:	jmp	0x145fc


0x1c20:	jmp	qword ptr [rip + 0x21a20a]


0x12440:	lea	rsi, [r14 + 1]
0x12444:	cmp	rsi, qword ptr [rbx + 0x58]
0x12448:	jge	0x124f0


0x123c6:	mov	byte ptr [rbp + 8], 1
0x123ca:	mov	qword ptr [rsp], rdx
0x123ce:	call	0x1f50


0x124d0:	cmp	r12b, 0x5c
0x124d4:	je	0x12440


0x12337:	mov	rcx, qword ptr [rsi + 0x10]
0x1233b:	mov	ecx, dword ptr [rcx + r14*4]
0x1233f:	cmp	ecx, -1
0x12342:	je	0x12420


0x1213d:	movzx	r13d, byte ptr [rbp]
0x12142:	xor	r8d, r8d
0x12145:	jmp	0x12172


0x12258:	mov	eax, 7
0x1225d:	jmp	0x120d1


0x12111:	cmp	al, 0x16
0x12113:	jne	0x1211e


0x118b8:	mov	rdi, qword ptr [rsp + 0x98]
0x118c0:	xor	rdi, qword ptr fs:[0x28]
0x118c9:	jne	0x1206b


0x11948:	lea	rdi, [rsp + 0x5c]
0x1194d:	mov	rdx, rbx
0x11950:	mov	rsi, r12
0x11953:	call	0xace0


0x1198f:	mov	rax, qword ptr [rsp + 8]
0x11994:	xor	ebx, ebx
0x11996:	mov	rsi, qword ptr [rax + 0xc8]
0x1199d:	mov	rdx, rsi
0x119a0:	cmp	rbx, rdx
0x119a3:	jge	0x11a03


0x10196:	mov	rax, qword ptr [rsp + 0x48]
0x1019b:	mov	qword ptr [rsp + 0x98], 0
0x101a7:	mov	rax, qword ptr [rax + 0x30]
0x101ab:	cmp	rax, qword ptr [rsp + 0x270]
0x101b3:	jae	0x101d4


0x10174:	movzx	edx, byte ptr [rsi + 0x38]
0x10178:	test	dl, 8
0x1017b:	je	0x10610


0xfc3c:	add	rsp, 0x38
0xfc40:	pop	rbx
0xfc41:	pop	rbp
0xfc42:	pop	r12
0xfc44:	pop	r13
0xfc46:	pop	r14
0xfc48:	pop	r15
0xfc4a:	ret	


0xfda7:	call	0x1c20


0xfda0:	xor	ebp, ebp
0xfda2:	jmp	0xfc25


0xfd4d:	lea	r14, [rbp + 0x10]
0xfd51:	lea	r15, [rbp + 0x18]
0xfd55:	mov	rcx, r12
0xfd58:	mov	rdi, rbx
0xfd5b:	mov	rdx, r15
0xfd5e:	mov	rsi, r14
0xfd61:	call	0xb360


0xfc17:	cmp	qword ptr [r15 + 0x98], 0
0xfc1f:	jne	0xfd48


0xfcf0:	movdqu	xmm0, xmmword ptr [rax]
0xfcf4:	mov	rdi, rbx
0xfcf7:	mov	edx, dword ptr [rsi + 0xa0]
0xfcfd:	lea	rsi, [r12 - 1]
0xfd02:	movaps	xmmword ptr [rsp + 0x10], xmm0
0xfd07:	mov	rax, qword ptr [rax + 0x10]
0xfd0b:	mov	qword ptr [rsp + 0x20], rax
0xfd10:	call	0xb4b0


0xfc69:	mov	r14, qword ptr [rdx + 0x50]
0xfc6d:	lea	rdi, [rsp + 0x10]
0xfc72:	mov	rdx, rax
0xfc75:	mov	qword ptr [rsp], rdi
0xfc79:	mov	rsi, r14
0xfc7c:	call	0xa8c0


0xf3bf:	mov	ebp, dword ptr [rax + 8]
0xf3c2:	test	ebp, 0x3ff00
0xf3c8:	je	0xf410


0xf380:	mov	rdi, qword ptr [rsp + 0x48]
0xf385:	add	qword ptr [rsp], 1
0xf38a:	mov	rax, qword ptr [rsp]
0xf38e:	cmp	rax, qword ptr [rdi]
0xf391:	jge	0xf640


0xe8f9:	add	rax, 0x10
0xe8fd:	mov	byte ptr [rbp - 0xc9], 0
0xe904:	sub	rsp, rax
0xe907:	lea	rax, [rsp + 0xf]
0xe90c:	and	rax, 0xfffffffffffffff0
0xe910:	mov	qword ptr [rbp - 0xc0], rax
0xe917:	mov	rdx, qword ptr [rbp - 0xb8]
0xe91e:	mov	rdi, qword ptr [rbp - 0xc0]
0xe925:	mov	rsi, r13
0xe928:	call	0x1d70


0xefe6:	mov	rdi, qword ptr [rbp - 0xb8]
0xefed:	call	0x1da0


0xe664:	mov	rbx, qword ptr [rsp + 0xc8]
0xe66c:	xor	rbx, qword ptr fs:[0x28]
0xe675:	jne	0xe82c


0xe7a0:	mov	rax, qword ptr [rsp + 0x60]
0xe7a5:	lea	rsi, [r14*8]
0xe7ad:	mov	rdi, qword ptr [rax + 0x10]
0xe7b1:	call	0x1e00


0xdfcc:	cmp	al, 0xdf
0xdfce:	movzx	edx, byte ptr [rdx + r8 + 1]
0xdfd4:	ja	0xe03e


0xdde4:	add	rsp, 0x178
0xddeb:	pop	rbx
0xddec:	pop	rbp
0xdded:	pop	r12
0xddef:	pop	r13
0xddf1:	pop	r14
0xddf3:	pop	r15
0xddf5:	ret	


0xde72:	call	0x1c20


0xda2e:	mov	rax, qword ptr [rsp + 0x28]
0xda33:	mov	rdi, qword ptr [rsp]
0xda37:	mov	rax, qword ptr [rax]
0xda3a:	mov	r12, qword ptr [rax + rdi*8]
0xda3e:	mov	rax, qword ptr [rsp + 8]
0xda43:	mov	rcx, qword ptr [rax]
0xda46:	mov	rax, r12
0xda49:	shl	rax, 4
0xda4d:	mov	qword ptr [rsp + 0x10], rax
0xda52:	lea	rsi, [rcx + rax]
0xda56:	movzx	eax, byte ptr [rsi + 8]
0xda5a:	cmp	eax, 1
0xda5d:	mov	edx, eax
0xda5f:	jne	0xd9f0


0x1d10:	jmp	qword ptr [rip + 0x21a192]


0xcf11:	lea	r12, [rip + 0xa761]
0xcf18:	mov	rcx, qword ptr [r13]
0xcf1c:	cmp	qword ptr [r8], rcx
0xcf1f:	mov	rax, qword ptr [rdx]
0xcf22:	je	0xd039


0xd006:	lea	rdi, [rip + 0xa678]
0xd00d:	mov	ecx, 6
0xd012:	mov	rsi, r9
0xd015:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]






0xbfd0:	add	rbx, 1
0xbfd4:	cmp	r10, rbx
0xbfd7:	jle	0xc0b0


0xbfea:	mov	rdx, rax
0xbfed:	shl	rdx, 4
0xbff1:	add	rdx, qword ptr [r12]
0xbff5:	test	byte ptr [rdx + 8], 8
0xbff9:	je	0xbfd0


0xb938:	cmp	byte ptr [rbx + 0x8b], 0
0xb93f:	jne	0xbcf0


0xb89e:	cmp	byte ptr [rbx + 0x88], 0
0xb8a5:	mov	rdi, rbx
0xb8a8:	je	0xb928


0xb950:	test	dl, dl
0xb952:	jne	0xbdfd


0xb833:	test	dl, dl
0xb835:	jne	0xba48


0xb8e0:	mov	rax, qword ptr [rbx]
0xb8e3:	mov	qword ptr [rbx + 8], rax
0xb8e7:	jmp	0xb816


0xb64c:	pop	rbx
0xb64d:	ret	


0xb601:	mov	rsi, rdx
0xb604:	mov	edx, dword ptr [rdi + 0xa0]
0xb60a:	shr	ebx, 8
0xb60d:	call	0xb4b0


0xb654:	xor	eax, eax
0xb656:	cmp	byte ptr [rsi], cl
0xb658:	je	0xb5f0


0xb660:	xor	eax, eax
0xb662:	ret	


0xb5d0:	cmp	cl, 0xa
0xb5d3:	je	0xb698


0xb5be:	cmp	al, 7
0xb5c0:	jne	0xb660


0xb502:	add	rsp, 8
0xb506:	pop	rbx
0xb507:	pop	rbp
0xb508:	ret	


0xb520:	mov	rax, qword ptr [rdi + 8]
0xb524:	mov	rcx, qword ptr [rdi + 0x80]
0xb52b:	movzx	eax, byte ptr [rax + rsi]
0xb52f:	mov	rdx, rax
0xb532:	sar	rax, 6
0xb536:	mov	rcx, qword ptr [rcx + rax*8]
0xb53a:	mov	eax, 1
0xb53f:	bt	rcx, rdx
0xb543:	jb	0xb502


0xb4d1:	mov	rax, qword ptr [rdi + 0x10]
0xb4d5:	jmp	0xb4ea


0xb3b6:	mov	rax, qword ptr [rax]
0xb3b9:	cmp	rax, 0x3f
0xb3bd:	jg	0xb390


0xb390:	add	rbx, 1
0xb394:	cmp	rbx, qword ptr [r12]
0xb398:	jge	0xb440


0xb030:	lea	rdx, [rsi + rcx]
0xb034:	mov	rax, rdx
0xb037:	shr	rax, 0x3f
0xb03b:	add	rax, rdx
0xb03e:	sar	rax, 1
0xb041:	lea	rdx, [rax + rax*4]
0xb045:	mov	r9, rax
0xb048:	cmp	r12, qword ptr [r8 + rdx*8 + 8]
0xb04d:	jg	0xb0b0


0xb0a8:	mov	r9, rcx
0xb0ab:	mov	rcx, rdx
0xb0ae:	nop	
0xb0b0:	lea	rsi, [r9 + 1]
0xb0b4:	mov	rdx, rcx
0xb0b7:	jmp	0xaffd


0xb093:	add	rsp, 0x78
0xb097:	pop	rbx
0xb098:	pop	rbp
0xb099:	pop	r12
0xb09b:	pop	r13
0xb09d:	pop	r14
0xb09f:	pop	r15
0xb0a1:	ret	


0xb359:	call	0x1c20


0xb077:	cmp	rsi, -1
0xb07b:	jne	0xb0c0


0xaf89:	mov	qword ptr [rbx + r15*8], rdx
0xaf8d:	add	r15, 1
0xaf91:	cmp	rbp, r15
0xaf94:	jne	0xaf7c


0xaf30:	test	rdx, rdx
0xaf33:	je	0xaf73


0xad76:	mov	esi, 1
0xad7b:	mov	edi, 0x70
0xad80:	call	0x1d30


0xad43:	mov	r11, qword ptr [rax + 0x10]
0xad47:	xor	r9d, r9d
0xad4a:	nop	word ptr [rax + rax]
0xad50:	mov	rbx, qword ptr [r11 + r9*8]
0xad54:	cmp	qword ptr [rbx], rbp
0xad57:	jne	0xad6d


0xad10:	add	rbp, qword ptr [rax]
0xad13:	add	rax, 8
0xad17:	cmp	rcx, rax
0xad1a:	jne	0xad10


0xaae0:	mov	esi, 1
0xaae5:	mov	edi, 0x70
0xaaea:	call	0x1d30


0xaa89:	mov	rbx, qword ptr [rax + 0x10]
0xaa8d:	xor	r10d, r10d
0xaa90:	mov	r9d, ecx
0xaa93:	jmp	0xaaa1


0xaa50:	add	r12, qword ptr [rax]
0xaa53:	add	rax, 8
0xaa57:	cmp	r10, rax
0xaa5a:	jne	0xaa50


0xa9a0:	mov	rsi, rdx
0xa9a3:	pop	rbx
0xa9a4:	pop	rbp
0xa9a5:	pop	r12
0xa9a7:	pop	r13
0xa9a9:	pop	r14
0xa9ab:	jmp	0xa830


0xa9a3:	pop	rbx
0xa9a4:	pop	rbp
0xa9a5:	pop	r12
0xa9a7:	pop	r13
0xa9a9:	pop	r14
0xa9ab:	jmp	0xa830


0xa8e7:	mov	r14, qword ptr [rdx + 8]
0xa8eb:	test	r14, r14
0xa8ee:	jle	0xa9a3


0xa7e6:	add	rsp, 0x18
0xa7ea:	pop	rbx
0xa7eb:	pop	rbp
0xa7ec:	ret	


0xa82b:	call	0x1c20


0xa7f0:	lea	rdi, [rsp + 4]
0xa7f5:	mov	rsi, rbp
0xa7f8:	call	0xa550


0xa59a:	mov	rdx, qword ptr [rbx + 0xa0]
0xa5a1:	bt	rdx, rax
0xa5a5:	jae	0xa6cd


0xa6cd:	mov	rdi, qword ptr [rsp + 0x38]
0xa6d2:	xor	rdi, qword ptr fs:[0x28]
0xa6db:	mov	rax, rbp
0xa6de:	jne	0xa782


0xa40b:	add	rsp, 0x20
0xa40f:	pop	rbx
0xa410:	ret	


0xa408:	mov	qword ptr [rcx], rax
0xa40b:	add	rsp, 0x20
0xa40f:	pop	rbx
0xa410:	ret	


0xa22b:	lea	rsi, [rcx + r9]
0xa22f:	mov	r13, qword ptr [rbp + 0x10]
0xa233:	mov	rdx, qword ptr [r12 + 0x10]
0xa238:	sub	r9, 1
0xa23c:	sub	rcx, 1
0xa240:	add	rsi, r11
0xa243:	sub	r11, 1
0xa247:	mov	rax, qword ptr [r13 + r9*8]
0xa24c:	mov	r8, qword ptr [rdx + r11*8]
0xa250:	cmp	rax, r8
0xa253:	je	0xa266


0xa350:	add	r13, rax
0xa353:	lea	rsi, [r13*8]
0xa35b:	call	0x1e00


0x9d68:	add	rdx, rsi
0x9d6b:	mov	rdi, qword ptr [rdi + 0x10]
0x9d6f:	lea	rbp, [rdx + rdx]
0x9d73:	shl	rdx, 4
0x9d77:	mov	rsi, rdx
0x9d7a:	call	0x1e00


0x9c24:	test	rax, rax
0x9c27:	je	0x9da0


0x99e0:	lea	r11, [rbx + r10]
0x99e4:	mov	rax, r11
0x99e7:	shr	rax, 0x3f
0x99eb:	add	rax, r11
0x99ee:	sar	rax, 1
0x99f1:	lea	r11, [rax + rax*4]
0x99f5:	mov	r14, rax
0x99f8:	cmp	qword ptr [r13 + r11*8 + 8], r8
0x99fd:	jl	0x9b80


0x9b70:	mov	r14, r10
0x9b73:	mov	r10, rbp
0x9b76:	nop	word ptr cs:[rax + rax]
0x9b80:	lea	rbx, [r14 + 1]
0x9b84:	mov	rbp, r10
0x9b87:	jmp	0x99ae


0x9a32:	mov	rax, r15
0x9a35:	xor	ebp, ebp
0x9a37:	cmp	rbp, rax
0x9a3a:	jge	0x9a94


0x9a3c:	lea	r11, [rbp + rax]
0x9a41:	mov	r10, r11
0x9a44:	shr	r10, 0x3f
0x9a48:	add	r10, r11
0x9a4b:	mov	r11, qword ptr [rdi + 0xd8]
0x9a52:	sar	r10, 1
0x9a55:	lea	r13, [r10 + r10*4]
0x9a59:	cmp	r12, qword ptr [r11 + r13*8 + 8]
0x9a5e:	jle	0x9a8f


0x9a94:	cmp	r15, rbp
0x9a97:	jle	0x9bc0


0x993d:	mov	rax, qword ptr [rsi + 0x10]
0x9941:	test	rax, rax
0x9944:	je	0x994e


0x9935:	mov	rax, qword ptr [rsi + 0x20]
0x9939:	mov	qword ptr [rdx + 0x20], rax
0x993d:	mov	rax, qword ptr [rsi + 0x10]
0x9941:	test	rax, rax
0x9944:	je	0x994e


0x98a9:	cmp	byte ptr [rax + 0x30], 0x11
0x98ad:	jne	0x989c


0x9870:	mov	rcx, qword ptr [rax + rdx*8 + 8]
0x9875:	mov	qword ptr [rax + rdx*8], rcx
0x9879:	add	rdx, 1
0x987d:	cmp	rdx, qword ptr [rdi]
0x9880:	jl	0x9870


0x9708:	cmp	rsi, rcx
0x970b:	jb	0x96f8


0x96f2:	jmp	0x9720


0x9740:	lea	rax, [rsi + 1]
0x9744:	ret	


0x96b2:	mov	eax, 1
0x96b7:	ret	


0x9690:	mov	rcx, qword ptr [rdi + 0x10]
0x9694:	mov	r8, qword ptr [rcx + rdx]
0x9698:	mov	rcx, qword ptr [rsi + 0x10]
0x969c:	mov	rcx, qword ptr [rcx + rdx]
0x96a0:	sub	rdx, 8
0x96a4:	cmp	r8, rcx
0x96a7:	jne	0x96c0


0x965b:	cmp	rdx, rcx
0x965e:	mov	eax, edx
0x9660:	jne	0x9650


0x9424:	mov	rax, rbx
0x9427:	add	rbx, 1
0x942b:	shl	rax, 4
0x942f:	add	rdi, rax
0x9432:	call	0x8e20


0x9210:	add	rsp, 0x18
0x9214:	pop	rbx
0x9215:	pop	rbp
0x9216:	pop	r12
0x9218:	pop	r13
0x921a:	pop	r14
0x921c:	pop	r15
0x921e:	ret	


0x9270:	cmp	r9, qword ptr [rsp + 8]
0x9275:	jne	0x9280


0x915b:	mov	rdx, qword ptr [r14 + 0x10]
0x915f:	lea	rsi, [rdx - 1]
0x9163:	mov	rax, rsi
0x9166:	shl	rax, 4
0x916a:	add	rax, r8
0x916d:	test	byte ptr [rax + 0xa], 4
0x9171:	je	0x9220


0x8f2c:	add	rsp, 0x18
0x8f30:	pop	rbx
0x8f31:	pop	rbp
0x8f32:	pop	r12
0x8f34:	pop	r13
0x8f36:	pop	r14
0x8f38:	pop	r15
0x8f3a:	ret	


0x8daf:	lea	esi, [rbp + 1]
0x8db2:	mov	rdi, rbx
0x8db5:	call	0x8c10


0x8dc0:	mov	rax, qword ptr [rbx + 0xb8]
0x8dc7:	mov	rdx, rbp
0x8dca:	xor	esi, esi
0x8dcc:	sub	rdx, r12
0x8dcf:	shl	rdx, 3
0x8dd3:	lea	rdi, [rax + r12*8 + 8]
0x8dd8:	call	0x1cb0


0x8d94:	xor	eax, eax
0x8d96:	pop	rbx
0x8d97:	pop	rbp
0x8d98:	pop	r12
0x8d9a:	ret	


0x87cd:	cmp	r15, rbx
0x87d0:	jge	0x8968


0x86b4:	mov	rbp, qword ptr [r14 + 0x28]
0x86b8:	add	rbp, r13
0x86bb:	add	rbp, qword ptr [r14]
0x86be:	mov	qword ptr [rsp + 0x18], rbp
0x86c3:	mov	rcx, qword ptr [rsp + 8]
0x86c8:	mov	rdx, qword ptr [rsp + 0x10]
0x86cd:	mov	rsi, qword ptr [rsp + 0x18]
0x86d2:	mov	rdi, qword ptr [rsp + 0x20]
0x86d7:	call	0x7b30


0x89b9:	mov	eax, dword ptr [r14 + 0x90]
0x89c0:	test	eax, eax
0x89c2:	jle	0x8be0


0x8666:	add	rsp, 0xa8
0x866d:	pop	rbx
0x866e:	pop	rbp
0x866f:	pop	r12
0x8671:	pop	r13
0x8673:	pop	r14
0x8675:	pop	r15
0x8677:	ret	


0x8bea:	call	0x1c20


0x8571:	jmp	0x8489


0x8591:	mov	rcx, qword ptr [rbx]
0x8594:	add	rcx, rbp
0x8597:	add	rcx, rax
0x859a:	add	rcx, qword ptr [rbx + 0x28]
0x859e:	movzx	ecx, byte ptr [rcx]
0x85a1:	movzx	ecx, byte ptr [rdi + rcx]
0x85a5:	mov	rdi, qword ptr [rbx + 8]
0x85a9:	add	rdi, rbp
0x85ac:	mov	byte ptr [rdi + rax], cl
0x85af:	mov	byte ptr [rsi + rax], cl
0x85b2:	lea	ecx, [rax + 1]
0x85b5:	cmp	ecx, dword ptr [rbx + 0x90]
0x85bb:	jl	0x8580




0x8290:	lea	rdx, [rsi + rsi]
0x8294:	shl	rsi, 4
0x8298:	mov	qword ptr [rdi], rdx
0x829b:	mov	rdi, rax
0x829e:	call	0x1e00


0x8209:	cmp	qword ptr [rax], rbp
0x820c:	lea	rdx, [rsi*8]
0x8214:	jle	0x8250


0x7fd5:	mov	rsi, rbx
0x7fd8:	mov	rdi, rbp
0x7fdb:	call	r12


0x7f95:	mov	r8, r9
0x7f98:	jmp	0x7d10


0x7f72:	xor	eax, eax
0x7f74:	cmp	r10, r8
0x7f77:	je	0x7f90


0x7dd1:	mov	ecx, dword ptr [rsp + 0xc]
0x7dd5:	test	ecx, ecx
0x7dd7:	je	0x7da6


0x7d98:	cmp	dl, 9
0x7d9b:	je	0x7ef0


0x7c60:	and	edx, 1
0x7c63:	je	0x7c6f


0x7bf8:	cmp	cl, 0x5b
0x7bfb:	je	0x7c30


0x7be4:	mov	r9, qword ptr [rsi + 0x10]
0x7be8:	cmp	dword ptr [r9 + rax*4], -1
0x7bed:	je	0x7c6f


0x7af1:	push	r12
0x7af3:	push	rbp
0x7af4:	mov	r12d, edx
0x7af7:	push	rbx
0x7af8:	mov	rbp, rsi
0x7afb:	mov	rbx, rdi
0x7afe:	call	0x1d80










0x79b3:	xor	esi, esi
0x79b5:	xor	eax, eax
0x79b7:	call	0x1b90


0x7889:	xor	eax, eax
0x788b:	mov	esi, 0x406
0x7890:	call	0x1b90


0x78e0:	mov	edi, ebp
0x78e2:	xor	eax, eax
0x78e4:	call	0x1b90


0x78b5:	jg	0x7910


0x6a36:	test	rdx, rdx
0x6a39:	je	0x6a0a


0x6851:	call	0x62f0


0x6875:	mov	dword ptr [rsp + 8], r10d
0x687a:	jmp	0x6851


0x6820:	cmp	r10d, 0x2f
0x6824:	ja	0x687c


0x6750:	mov	eax, dword ptr [r10]
0x6753:	cmp	eax, 0x2f
0x6756:	ja	0x679a




0x5de4:	pop	rbx
0x5de5:	mov	dword ptr [rip + 0x216289], 1
0x5def:	pop	rbp
0x5df0:	pop	r12
0x5df2:	ret	


0x5dd5:	mov	rdi, r12
0x5dd8:	call	0x1b00






0x3de3:	mov	rax, qword ptr [rbx + 0x40]
0x3de7:	test	rax, rax
0x3dea:	jne	0x3dd0


0x3e30:	sub	rbp, rdx
0x3e33:	mov	rax, qword ptr [rbx + 0x30]
0x3e37:	cmp	rbp, 0x4f
0x3e3b:	jbe	0x3e51


0x3d49:	call	0x3930


0x3d60:	xor	eax, eax
0x3d62:	pop	rbx
0x3d63:	ret	


0x3cdd:	mov	rsi, qword ptr [rdx + 0x38]
0x3ce1:	add	rax, 1
0x3ce5:	mov	qword ptr [rdx + 0x18], rax
0x3ce9:	mov	rax, qword ptr [rsi + 0x10]
0x3ced:	lea	rcx, [rax + 1]
0x3cf1:	mov	rax, rcx
0x3cf4:	mov	qword ptr [rsi + 0x10], rcx
0x3cf8:	shl	rax, 4
0x3cfc:	cmp	qword ptr [rsi], rcx
0x3cff:	lea	rax, [rsi + rax + 8]
0x3d04:	je	0x3d10


0x3cd6:	mov	qword ptr [rip + 0x218523], rax
0x3cdd:	mov	rsi, qword ptr [rdx + 0x38]
0x3ce1:	add	rax, 1
0x3ce5:	mov	qword ptr [rdx + 0x18], rax
0x3ce9:	mov	rax, qword ptr [rsi + 0x10]
0x3ced:	lea	rcx, [rax + 1]
0x3cf1:	mov	rax, rcx
0x3cf4:	mov	qword ptr [rsi + 0x10], rcx
0x3cf8:	shl	rax, 4
0x3cfc:	cmp	qword ptr [rsi], rcx
0x3cff:	lea	rax, [rsi + rax + 8]
0x3d04:	je	0x3d10


0x3922:	mov	esi, 1
0x3927:	jmp	0x3913


0x3913:	test	rax, rax
0x3916:	js	0x391d


0x38bc:	mov	rax, rcx
0x38bf:	shr	rax, 1
0x38c2:	lea	rcx, [rcx + rax + 1]
0x38c7:	lea	rsi, [rcx + rcx*2]
0x38cb:	mov	qword ptr [rip + 0x218836], rcx
0x38d2:	shl	rsi, 5
0x38d6:	call	0x6970


0x391d:	call	0x3810




0x1f70:	jmp	qword ptr [rip + 0x21a082]


0x15caf:	mov	rdi, rbp
0x15cb2:	mov	r9, rdx
0x15cb5:	mov	r8, rdx
0x15cb8:	call	0x100f0


0x15a60:	mov	r14, rsi
0x15a63:	xor	r13d, r13d
0x15a66:	jmp	0x159b8


0x159ab:	xor	r13d, r13d
0x159ae:	test	rbx, rbx
0x159b1:	mov	qword ptr [rsp + 8], rsi
0x159b6:	jne	0x15a00


0x15520:	test	r8, r8
0x15523:	js	0x15808


0x15517:	cmp	rcx, r8
0x1551a:	jg	0x15790


0x15537:	movzx	eax, byte ptr [r15 + 0x38]
0x1553c:	mov	r13d, eax
0x1553f:	shr	r13b, 5
0x15543:	mov	edi, r13d
0x15546:	and	edi, 3
0x15549:	cmp	r8, rbx
0x1554c:	mov	dword ptr [rsp + 0x2c], edi
0x15550:	jle	0x15561


0x145fc:	mov	rdi, rbx
0x145ff:	call	0x9400




0x1244e:	cmp	byte ptr [rbx + 0x8b], 0
0x12455:	jne	0x128e0


0x124f0:	mov	byte ptr [rbp + 8], 0x24
0x124f4:	mov	eax, 1
0x124f9:	jmp	0x12394


0x1f50:	jmp	qword ptr [rip + 0x21a072]


0x124da:	mov	rax, qword ptr [rbx + 0x10]
0x124de:	mov	byte ptr [rbp + 8], 1
0x124e2:	mov	ecx, dword ptr [rax + r14*4]
0x124e6:	jmp	0x12356


0x12420:	or	r13d, 0x20
0x12424:	mov	byte ptr [rdi + 8], 1
0x12428:	mov	eax, 1
0x1242d:	mov	byte ptr [rdi + 0xa], r13b
0x12431:	jmp	0x12394


0x12348:	cmp	r12b, 0x5c
0x1234c:	je	0x12440


0x12172:	cmp	al, 0x1e
0x12174:	movsxd	r14, r8d
0x12177:	je	0x121e0


0x120d1:	mov	rcx, qword ptr [rsp + 0x18]
0x120d6:	xor	rcx, qword ptr fs:[0x28]
0x120df:	jne	0x122c8


0x12115:	test	r9b, r9b
0x12118:	je	0x12262


0x1211e:	movzx	eax, byte ptr [rbp]
0x12122:	mov	dword ptr [rbx], 0
0x12128:	mov	byte ptr [rbx + 8], al
0x1212b:	xor	eax, eax
0x1212d:	jmp	0x120d1


0x118cf:	add	rsp, 0xa8
0x118d6:	pop	rbx
0x118d7:	pop	rbp
0x118d8:	pop	r12
0x118da:	pop	r13
0x118dc:	pop	r14
0x118de:	pop	r15
0x118e0:	ret	


0x1206b:	call	0x1c20


0x119a5:	lea	rax, [rbx + rdx]
0x119a9:	mov	rcx, rax
0x119ac:	shr	rcx, 0x3f
0x119b0:	add	rcx, rax
0x119b3:	mov	rax, qword ptr [rsp + 8]
0x119b8:	sar	rcx, 1
0x119bb:	mov	rdi, qword ptr [rax + 0xd8]
0x119c2:	lea	rax, [rcx + rcx*4]
0x119c6:	cmp	rbp, qword ptr [rdi + rax*8 + 8]
0x119cb:	jle	0x119fe


0x11a03:	cmp	rsi, rbx
0x11a06:	jle	0x11b00


0x101b5:	mov	rcx, qword ptr [rsp + 0x270]
0x101bd:	lea	rdx, [rcx - 1]
0x101c1:	sub	rdx, rax
0x101c4:	sub	qword ptr [rsp + 0x270], rdx
0x101cc:	mov	qword ptr [rsp + 0x98], rdx
0x101d4:	mov	rsi, qword ptr [rsp + 0x48]
0x101d9:	cmp	qword ptr [rsi + 0x10], 0
0x101de:	je	0x11070


0x101d4:	mov	rsi, qword ptr [rsp + 0x48]
0x101d9:	cmp	qword ptr [rsi + 0x10], 0
0x101de:	je	0x11070


0x10610:	mov	qword ptr [rsp + 0x68], 0
0x10619:	jmp	0x10196


0x10181:	cmp	rbp, r8
0x10184:	je	0x10610


0xf410:	mov	rdi, qword ptr [r14 + 0xc8]
0xf417:	mov	rax, qword ptr [r14 + 0x98]
0xf41e:	xor	ecx, ecx
0xf420:	mov	r10, qword ptr [r14 + 8]
0xf424:	mov	r9, qword ptr [rsp + 8]
0xf429:	mov	qword ptr [rsp + 0x70], rdi
0xf42e:	mov	qword ptr [rsp + 0x50], rax
0xf433:	cmp	rcx, rdi
0xf436:	jge	0xf48b


0xf3ca:	mov	edx, dword ptr [r14 + 0xa0]
0xf3d1:	mov	rsi, qword ptr [rsp + 8]
0xf3d6:	mov	rdi, r14
0xf3d9:	call	0xb4b0


0xe67b:	add	rsp, 0xd8
0xe682:	pop	rbx
0xe683:	pop	rbp
0xe684:	pop	r12
0xe686:	pop	r13
0xe688:	pop	r14
0xe68a:	pop	r15
0xe68c:	ret	


0xe82c:	call	0x1c20


0xdfd6:	add	edx, -0x80
0xdfd9:	mov	ebp, 2
0xdfde:	cmp	dl, 0x3f
0xdfe1:	ja	0xdf70


0xe03e:	cmp	al, 0xef
0xe040:	ja	0xe088


0xda61:	movzx	r13d, byte ptr [rsi]
0xda65:	test	ebx, ebx
0xda67:	mov	byte ptr [rbp + r13], 1
0xda6d:	je	0xda80


0xd9f0:	cmp	eax, 3
0xd9f3:	je	0xdce6




0xd015:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd017:	mov	rcx, qword ptr [r13]
0xd01b:	seta	al
0xd01e:	sbb	al, 0
0xd020:	test	al, al
0xd022:	lea	rax, [rip + 0xa650]
0xd029:	cmove	r12, rax
0xd02d:	cmp	qword ptr [r8], rcx
0xd030:	mov	rax, qword ptr [rdx]
0xd033:	jne	0xcf28


0xc0b0:	xor	r9d, r9d
0xc0b3:	test	r10, r10
0xc0b6:	lea	r11, [rsp + 0x30]
0xc0bb:	jle	0xc10c


0xbffb:	lea	r9, [rax + rax*2]
0xbfff:	mov	rcx, qword ptr [r12 + 0x28]
0xc004:	lea	r11, [rbp + 0x10]
0xc008:	mov	rdi, r10
0xc00b:	shl	r9, 3
0xc00f:	mov	rsi, r11
0xc012:	add	rcx, r9
0xc015:	mov	r15, qword ptr [rcx + 0x10]
0xc019:	mov	qword ptr [rsp + 8], rcx
0xc01e:	mov	r8, qword ptr [r15]
0xc021:	mov	rdx, r8
0xc024:	mov	qword ptr [rsp], r8
0xc028:	call	0x96d0


0xb945:	mov	qword ptr [rbx + 0x30], rax
0xb949:	jmp	0xb8b3


0xbcf0:	cmp	byte ptr [rbx + 0x88], 0
0xbcf7:	jne	0xbdf0


0xb928:	call	0x8420


0xb8aa:	call	0x85f0


0xb958:	movsxd	rdx, dword ptr [rbx + 0x90]
0xb95f:	mov	qword ptr [rbx + 0x30], 0
0xb967:	mov	r11, qword ptr [rbx + 0x28]
0xb96b:	cmp	edx, 1
0xb96e:	jle	0xbd58


0xbdfd:	mov	rdx, qword ptr [rbx + 0x50]
0xbe01:	mov	byte ptr [rbx + 0x8c], 0
0xbe08:	add	rdx, rbp
0xbe0b:	sub	rdx, r15
0xbe0e:	mov	qword ptr [rbx + 0x58], rdx
0xbe12:	mov	rdx, qword ptr [rbx + 0x60]
0xbe16:	add	rdx, rbp
0xbe19:	sub	rdx, r15
0xbe1c:	mov	qword ptr [rbx + 0x68], rdx
0xbe20:	jmp	0xb958


0xb83b:	lea	rsi, [rbp - 1]
0xb83f:	mov	edx, r10d
0xb842:	mov	rdi, rbx
0xb845:	mov	qword ptr [rsp], r8
0xb849:	call	0xb4b0


0xba48:	mov	r14, qword ptr [rbx + 0x18]
0xba4c:	mov	rcx, r8
0xba4f:	xor	esi, esi
0xba51:	jmp	0xba63


0xb65a:	ret	


0xb698:	mov	rcx, qword ptr [rdi + 0x98]
0xb69f:	xor	eax, eax
0xb6a1:	test	byte ptr [rcx + 0xd8], 0x40
0xb6a8:	jne	0xb5f0


0xb5d9:	test	cl, cl
0xb5db:	jne	0xb5f0


0xb5c6:	xor	eax, eax
0xb5c8:	test	cl, cl
0xb5ca:	js	0xb65a


0xb545:	xor	eax, eax
0xb547:	cmp	dl, 0xa
0xb54a:	jne	0xb502


0xb4ea:	mov	ebx, dword ptr [rax + rsi*4]
0xb4ed:	cmp	ebx, -1
0xb4f0:	je	0xb4e0


0xb3bf:	mov	rsi, qword ptr [r13 + 0xa0]
0xb3c6:	bt	rsi, rax
0xb3ca:	jae	0xb390


0xb04f:	mov	rcx, rax
0xb052:	cmp	rsi, rcx
0xb055:	jl	0xb030


0xb0b0:	lea	rsi, [r9 + 1]
0xb0b4:	mov	rdx, rcx
0xb0b7:	jmp	0xaffd


0xaffd:	cmp	rsi, rdx
0xb000:	jge	0xb057


0xb0c0:	lea	rax, [rbp + 0x10]
0xb0c4:	mov	r13, qword ptr [rbx + 0x98]
0xb0cb:	mov	qword ptr [rsp], rax
0xb0cf:	lea	rax, [rsp + 0x4c]
0xb0d4:	mov	qword ptr [rsp + 0x38], rax
0xb0d9:	lea	rax, [rsp + 0x50]
0xb0de:	mov	qword ptr [rsp + 0x10], rax
0xb0e3:	mov	rax, qword ptr [rsp + 0x30]
0xb0e8:	lea	r15, [rcx + rax]
0xb0ec:	jmp	0xb1c8


0xaf73:	add	r15, 1
0xaf77:	cmp	rbp, r15
0xaf7a:	je	0xaf96


0xaf35:	add	rdx, 8
0xaf39:	add	rsi, 8
0xaf3d:	mov	rdi, r13
0xaf40:	call	0xa8c0


0xad59:	lea	rdi, [rbx + 8]
0xad5d:	mov	rsi, r14
0xad60:	call	0x9670


0xad6d:	add	r9, 1
0xad71:	cmp	r10, r9
0xad74:	jne	0xad50


0xaaa1:	mov	r14, qword ptr [rbx + r10*8]
0xaaa5:	cmp	qword ptr [r14], r12
0xaaa8:	jne	0xaa98


0xa8f4:	mov	r12, rdi
0xa8f7:	lea	rdi, [r13 + r14]
0xa8fc:	mov	rbx, rdx
0xa8ff:	mov	rbp, rsi
0xa902:	mov	qword ptr [r12], rdi
0xa906:	shl	rdi, 3
0xa90a:	call	0x1da0


0xa5ab:	lea	rax, [rbx + 0x70]
0xa5af:	lea	r14, [rsp + 0x20]
0xa5b4:	sub	rbx, -0x80
0xa5b8:	xor	ecx, ecx
0xa5ba:	xor	edx, edx
0xa5bc:	mov	rsi, rbx
0xa5bf:	mov	r15, rax
0xa5c2:	mov	r8, r14
0xa5c5:	mov	rdi, rax
0xa5c8:	mov	byte ptr [rsp + 0x28], 8
0xa5cd:	mov	qword ptr [rsp + 8], rax
0xa5d2:	call	0xa390


0xa6e4:	add	rsp, 0x48
0xa6e8:	pop	rbx
0xa6e9:	pop	rbp
0xa6ea:	pop	r12
0xa6ec:	pop	r13
0xa6ee:	pop	r14
0xa6f0:	pop	r15
0xa6f2:	ret	


0xa782:	call	0x1c20


0xa266:	test	rcx, rcx
0xa269:	jns	0xa27a


0xa255:	jge	0xa2b0


0x9da0:	mov	qword ptr [rbx + 8], rdx
0x9da4:	mov	rax, qword ptr [r12 + 8]
0x9da9:	mov	rdi, qword ptr [rbx + 0x10]
0x9dad:	mov	rsi, qword ptr [r12 + 0x10]
0x9db2:	lea	rdx, [rax*8]
0x9dba:	call	0x1d70


0x9c2d:	lea	rbp, [rax + rdx*2]
0x9c31:	sub	rdx, 1
0x9c35:	sub	rax, 1
0x9c39:	mov	rdi, rdx
0x9c3c:	not	rdi
0x9c3f:	test	rdi, rdi
0x9c42:	jns	0x9c80


0x9b80:	lea	rbx, [r14 + 1]
0x9b84:	mov	rbp, r10
0x9b87:	jmp	0x99ae


0x9a03:	mov	r10, rax
0x9a06:	cmp	rbx, r10
0x9a09:	jl	0x99e0


0x99ae:	cmp	rbx, rbp
0x99b1:	jge	0x9a0b


0x9a8f:	cmp	rbp, r10
0x9a92:	jl	0x9a68


0x9a60:	jmp	0x9b90


0x9bc0:	mov	rbp, -1
0x9bc7:	jmp	0x9abc


0x9a9d:	mov	r10, qword ptr [rdi + 0xd8]
0x9aa4:	lea	rax, [rbp + rbp*4]
0x9aa9:	lea	rax, [r10 + rax*8]
0x9aad:	cmp	r12, qword ptr [rax + 8]
0x9ab1:	mov	rax, -1
0x9ab8:	cmovne	rbp, rax
0x9abc:	cmp	qword ptr [rsi], 0
0x9ac0:	jle	0x9be2


0x994e:	xor	eax, eax
0x9950:	ret	


0x9946:	mov	rdx, qword ptr [rsi + 0x20]
0x994a:	mov	qword ptr [rax + 0x20], rdx
0x994e:	xor	eax, eax
0x9950:	ret	


0x98af:	mov	rcx, qword ptr [rax + 0x28]
0x98b3:	mov	rax, qword ptr [rax + 8]
0x98b7:	test	rax, rax
0x98ba:	mov	qword ptr [rsi + 8], rax
0x98be:	je	0x98c3


0x96f8:	lea	rax, [rsi + rcx]
0x96fc:	shr	rax, 1
0x96ff:	cmp	qword ptr [r8 + rax*8], rdx
0x9703:	jl	0x9730


0x9720:	mov	rax, rcx
0x9723:	mov	rcx, rdi
0x9726:	nop	word ptr cs:[rax + rax]
0x9730:	lea	rsi, [rax + 1]
0x9734:	mov	rdi, rcx
0x9737:	jmp	0x96e0


0x96a9:	sub	rax, 1
0x96ad:	test	rax, rax
0x96b0:	jns	0x9690


0x96c0:	xor	eax, eax
0x96c2:	ret	


0x9662:	ret	


0x9650:	add	rdx, 1
0x9654:	cmp	dword ptr [rsi + rdx*4 - 4], -1
0x9659:	jne	0x966d


0x9277:	cmp	r9, r13
0x927a:	jne	0x933c


0x9280:	mov	eax, dword ptr [rax + 8]
0x9283:	mov	rsi, r15
0x9286:	mov	rdi, r14
0x9289:	shr	eax, 8
0x928c:	and	eax, 0x3ff
0x9291:	or	ebp, eax
0x9293:	mov	edx, ebp
0x9295:	call	0x9040


0x9220:	mov	edx, ebp
0x9222:	mov	rsi, r15
0x9225:	mov	rdi, r14
0x9228:	call	0x9040


0x9177:	test	rsi, rsi
0x917a:	jle	0x9220


0x1cb0:	jmp	qword ptr [rip + 0x21a1c2]


0x87d6:	lea	rax, [rdi + 0x20]
0x87da:	mov	qword ptr [rsp + 8], rax
0x87df:	lea	rax, [rsp + 0x44]
0x87e4:	mov	qword ptr [rsp + 0x30], rax
0x87e9:	lea	rax, [rsp + 0x48]
0x87ee:	mov	qword ptr [rsp + 0x38], rax
0x87f3:	lea	rax, [rsp + 0x50]
0x87f8:	mov	qword ptr [rsp + 0x28], rax
0x87fd:	nop	dword ptr [rax]
0x8800:	mov	rbp, qword ptr [r14 + 0x28]
0x8804:	mov	r13, r15
0x8807:	add	rbp, r15
0x880a:	add	rbp, qword ptr [r14]
0x880d:	movzx	r12d, byte ptr [rbp]
0x8812:	test	r12b, 0x80
0x8816:	jne	0x882a


0x8968:	mov	qword ptr [r14 + 0x30], r15
0x896c:	mov	qword ptr [r14 + 0x38], r15
0x8970:	xor	eax, eax
0x8972:	jmp	0x864f


0x8be0:	lea	rcx, [rsp + 0x50]
0x8be5:	jmp	0x89fb


0x89c8:	mov	rdi, qword ptr [r14 + 0x28]
0x89cc:	lea	r11d, [rax - 1]
0x89d0:	lea	rcx, [rsp + 0x50]
0x89d5:	xor	eax, eax
0x89d7:	add	rdi, r13
0x89da:	add	rdi, qword ptr [r14]
0x89dd:	jmp	0x89ea


0x8489:	mov	rcx, r14
0x848c:	mov	rdi, r13
0x848f:	call	0x7b30


0x8580:	add	rax, 1
0x8584:	cmp	rdx, rax
0x8587:	je	0x8489


0x85bd:	jmp	0x8489


0x8250:	mov	rcx, qword ptr [rax + rdx - 8]
0x8255:	cmp	rbp, rcx
0x8258:	jge	0x8233


0x8216:	test	rsi, rsi
0x8219:	jle	0x8233


0x7f90:	mov	esi, 1
0x7f95:	mov	r8, r9
0x7f98:	jmp	0x7d10


0x7f79:	ret	


0x7da6:	add	rbx, 1
0x7daa:	cmp	qword ptr [r12 + 8], rbx
0x7daf:	jle	0x7ed0


0x7dd9:	cmp	qword ptr [rax], r15
0x7ddc:	jne	0x7da6


0x7ef0:	mov	edx, dword ptr [rsp + 8]
0x7ef4:	test	edx, edx
0x7ef6:	je	0x7da6


0x7da1:	cmp	dl, 4
0x7da4:	je	0x7df8


0x7c6f:	mov	byte ptr [rdi + 8], 1
0x7c73:	mov	eax, 1
0x7c78:	ret	


0x7c65:	lea	rdx, [rax + 1]
0x7c69:	cmp	rdx, qword ptr [rsi + 0x58]
0x7c6d:	jl	0x7cb0


0x7c30:	lea	rcx, [rax + 1]
0x7c34:	cmp	rcx, qword ptr [rsi + 0x58]
0x7c38:	jge	0x7c80


0x7bfd:	cmp	cl, 0x5d
0x7c00:	je	0x7ca0


0x78b7:	cmp	esi, 4
0x78ba:	je	0x7990


0x7910:	cmp	esi, 0x407
0x7916:	jg	0x7960


0x6a0a:	mov	qword ptr [rsi], rcx
0x6a0d:	imul	rcx, r9
0x6a11:	mov	rsi, rcx
0x6a14:	jmp	0x6970


0x3dec:	cmp	byte ptr [rip + 0x218405], 0
0x3df3:	jne	0x3e68


0x3dd0:	mov	rdx, qword ptr [rax + 0x10]
0x3dd4:	mov	rbx, rax
0x3dd7:	mov	rax, qword ptr [rbx + 0x20]
0x3ddb:	add	rax, rdx
0x3dde:	cmp	rax, rbp
0x3de1:	ja	0x3e30


0x3e51:	shl	rbp, 4
0x3e55:	add	rsp, 8
0x3e59:	lea	rax, [rax + rbp + 0x18]
0x3e5e:	pop	rbx
0x3e5f:	pop	rbp
0x3e60:	ret	


0x3d10:	mov	rcx, qword ptr [rsi + 0x518]
0x3d17:	test	rcx, rcx
0x3d1a:	mov	qword ptr [rdx + 0x38], rcx
0x3d1e:	je	0x3d26


0x3d06:	pop	rbx
0x3d07:	ret	


0x3918:	test	rsi, rsi
0x391b:	je	0x38c7


0x159b8:	movzx	r8d, r8b
0x159bc:	mov	rdx, r15
0x159bf:	mov	rsi, r14
0x159c2:	push	r8
0x159c4:	push	qword ptr [rsp + 0x70]
0x159c8:	mov	rdi, r12
0x159cb:	mov	r9, qword ptr [rsp + 0x80]
0x159d3:	mov	r8, qword ptr [rsp + 0x70]
0x159d8:	call	0x154d0


0x15a00:	mov	rdi, r15
0x15a03:	mov	dword ptr [rsp + 0x1c], r8d
0x15a08:	mov	qword ptr [rsp + 0x10], r9
0x15a0d:	call	0x1da0


0x15808:	movzx	eax, byte ptr [r15 + 0x38]
0x1580d:	xor	r8d, r8d
0x15810:	mov	r13d, eax
0x15813:	shr	r13b, 5
0x15817:	mov	edi, r13d
0x1581a:	and	edi, 3
0x1581d:	mov	dword ptr [rsp + 0x2c], edi
0x15821:	jmp	0x15561


0x15529:	test	rax, rax
0x1552c:	jns	0x15537


0x15561:	test	al, 0x10
0x15563:	jne	0x15730


0x15552:	cmp	qword ptr [r15 + 0x20], 0
0x15557:	je	0x15561


0x1245b:	movzx	edi, byte ptr [rdx + r14 + 1]
0x12461:	mov	r12d, edi
0x12464:	mov	dword ptr [rsp + 8], edi
0x12468:	cmp	eax, 1
0x1246b:	mov	byte ptr [rbp], r12b
0x1246f:	mov	byte ptr [rbp + 8], 1
0x12473:	jle	0x128c0


0x128e0:	cmp	eax, 1
0x128e3:	jle	0x12914


0x12394:	mov	rdi, qword ptr [rsp + 0x28]
0x12399:	xor	rdi, qword ptr fs:[0x28]
0x123a2:	jne	0x129c8




0x12356:	mov	edi, ecx
0x12358:	mov	qword ptr [rsp + 8], rdx
0x1235d:	mov	dword ptr [rsp], ecx
0x12360:	call	0x1d90


0x12352:	mov	byte ptr [rdi + 8], 1
0x12356:	mov	edi, ecx
0x12358:	mov	qword ptr [rsp + 8], rdx
0x1235d:	mov	dword ptr [rsp], ecx
0x12360:	call	0x1d90


0x121e0:	cmp	byte ptr [r10 + 0x8b], 0
0x121e8:	je	0x12179


0x12179:	mov	rdx, qword ptr [r10 + 8]
0x1217d:	lea	rax, [r11 + 1]
0x12181:	mov	qword ptr [r10 + 0x48], rax
0x12185:	movzx	r9d, byte ptr [rdx + r11]
0x1218a:	cmp	rax, r12
0x1218d:	jge	0x12258


0x120e5:	add	rsp, 0x20
0x120e9:	pop	rbx
0x120ea:	pop	rbp
0x120eb:	pop	r12
0x120ed:	pop	r13
0x120ef:	pop	r14
0x120f1:	ret	


0x122c8:	call	0x1c20


0x12262:	mov	rdi, rsp
0x12265:	mov	rdx, r8
0x12268:	mov	rsi, r10
0x1226b:	call	0x7bc0


0x119fe:	cmp	rbx, rcx
0x11a01:	jl	0x119d8


0x119cd:	jmp	0x11b07


0x11b00:	xor	eax, eax
0x11b02:	jmp	0x118b8


0x11a0c:	lea	rax, [rbx + rbx*4]
0x11a10:	lea	rsi, [rax*8]
0x11a18:	mov	rax, qword ptr [rsp + 8]
0x11a1d:	mov	qword ptr [rsp + 0x40], rsi
0x11a22:	mov	rax, qword ptr [rax + 0xd8]
0x11a29:	cmp	rbp, qword ptr [rax + rsi + 8]
0x11a2e:	jne	0x11b00


0x11070:	mov	dword ptr [rsp + 0x5c], 1
0x11078:	jmp	0x10c69


0x101e4:	mov	rdi, qword ptr [rsp + 0x38]
0x101e9:	mov	rax, qword ptr [rdi + 0x48]
0x101ed:	test	rax, rax
0x101f0:	je	0x11070


0x1018a:	and	edx, 1
0x1018d:	cmove	rax, rdi
0x10191:	mov	qword ptr [rsp + 0x68], rax
0x10196:	mov	rax, qword ptr [rsp + 0x48]
0x1019b:	mov	qword ptr [rsp + 0x98], 0
0x101a7:	mov	rax, qword ptr [rax + 0x30]
0x101ab:	cmp	rax, qword ptr [rsp + 0x270]
0x101b3:	jae	0x101d4


0xf438:	lea	rax, [rcx + rdi]
0xf43c:	mov	r11, qword ptr [r14 + 0xd8]
0xf443:	mov	rsi, rax
0xf446:	shr	rsi, 0x3f
0xf44a:	add	rsi, rax
0xf44d:	sar	rsi, 1
0xf450:	lea	rax, [rsi + rsi*4]
0xf454:	cmp	r9, qword ptr [r11 + rax*8 + 8]
0xf459:	jle	0xf486


0xf48b:	cmp	qword ptr [rsp + 0x70], rcx
0xf490:	jle	0xf4b6


0xdfe3:	jmp	0xdf72


0xe042:	cmp	al, 0xe0
0xe044:	jne	0xe04f


0xe088:	cmp	al, 0xf7
0xe08a:	ja	0xe0a0


0xda80:	mov	rax, qword ptr [rsp + 0x30]
0xda85:	test	byte ptr [rax + 0x1a], 0x40
0xda89:	je	0xda17


0xda6f:	call	0x1f40


0xdce6:	mov	r13, rbp
0xdce9:	xor	r12d, r12d
0xdcec:	mov	qword ptr [rsp + 0x18], 0
0xdcf5:	mov	rax, qword ptr [rsp + 0x10]
0xdcfa:	mov	rsi, qword ptr [rsp + 0x18]
0xdcff:	xor	r14d, r14d
0xdd02:	mov	rax, qword ptr [rcx + rax]
0xdd06:	mov	r15, qword ptr [rax + rsi]
0xdd0a:	nop	word ptr [rax + rax]
0xdd10:	bt	r15, r14
0xdd14:	jae	0xdd35


0xd9f9:	cmp	eax, 6
0xd9fc:	je	0xdb88


0xc10c:	mov	rdi, qword ptr [rsp + 0x30]
0xc111:	call	0x1b00


0xb8b3:	mov	qword ptr [rbx + 0x48], 0
0xb8bb:	xor	eax, eax
0xb8bd:	mov	rcx, qword ptr [rsp + 0x38]
0xb8c2:	xor	rcx, qword ptr fs:[0x28]
0xb8cb:	jne	0xbf1a


0xbcfd:	mov	rcx, qword ptr [rbx + 0x78]
0xbd01:	test	rcx, rcx
0xbd04:	je	0xb8b3


0xbdf0:	mov	rdi, rbx
0xbdf3:	call	0x83b0


0xbd58:	mov	rax, qword ptr [rbx]
0xbd5b:	mov	rdx, qword ptr [rbx + 0x78]
0xbd5f:	add	rax, rbp
0xbd62:	test	rdx, rdx
0xbd65:	movzx	eax, byte ptr [r11 + rax - 1]
0xbd6b:	mov	qword ptr [rbx + 0x38], 0
0xbd73:	je	0xbd79


0xb974:	cmp	byte ptr [rbx + 0x89], 0
0xb97b:	jne	0xbc38


0xba63:	lea	rdx, [rsi + rcx]
0xba67:	mov	rax, rdx
0xba6a:	shr	rax, 0x3f
0xba6e:	add	rax, rdx
0xba71:	sar	rax, 1
0xba74:	mov	rdx, qword ptr [r14 + rax*8]
0xba78:	mov	r12, rax
0xba7b:	cmp	rdx, rbp
0xba7e:	jle	0xba58


0xb6ae:	ret	


0xb5dd:	mov	rcx, qword ptr [rdi + 0x98]
0xb5e4:	xor	eax, eax
0xb5e6:	test	byte ptr [rcx + 0xd8], 0x80
0xb5ed:	jne	0xb65a


0xb54c:	xor	eax, eax
0xb54e:	cmp	byte ptr [rbp + 0x8d], 0
0xb555:	setne	al
0xb558:	add	rsp, 8
0xb55c:	add	eax, eax
0xb55e:	pop	rbx
0xb55f:	pop	rbp
0xb560:	ret	


0xb4e0:	sub	rsi, 1
0xb4e4:	cmp	rsi, -1
0xb4e8:	je	0xb510


0xb4f2:	cmp	byte ptr [rbp + 0x8e], 0
0xb4f9:	jne	0xb578


0xb3cc:	mov	r8, qword ptr [r15 + 0xe8]
0xb3d3:	cmp	r8, qword ptr [r15 + 0xf0]
0xb3da:	mov	r9, qword ptr [r15 + 0xf8]
0xb3e1:	je	0xb458


0xb1c8:	mov	r10, qword ptr [r15]
0xb1cb:	mov	r9, qword ptr [rbp + 8]
0xb1cf:	mov	rsi, qword ptr [rsp]
0xb1d3:	mov	rdx, r10
0xb1d6:	mov	rdi, r9
0xb1d9:	call	0x96d0


0xad50:	mov	rbx, qword ptr [r11 + r9*8]
0xad54:	cmp	qword ptr [rbx], rbp
0xad57:	jne	0xad6d


0xaaaa:	movzx	eax, byte ptr [r14 + 0x68]
0xaaaf:	and	eax, 0xf
0xaab2:	cmp	eax, r9d
0xaab5:	jne	0xaa98


0xaa98:	add	r10, 1
0xaa9c:	cmp	r10, r11
0xaa9f:	je	0xaae0


0xa26b:	jmp	0xa288


0xa27a:	mov	r10, qword ptr [rdi + rcx*8]
0xa27e:	cmp	r10, r8
0xa281:	jg	0xa270


0xa257:	sub	r11, 1
0xa25b:	js	0xa2c0


0xa2b0:	sub	r9, 1
0xa2b4:	js	0xa2c0


0x9c44:	test	rax, rax
0x9c47:	js	0x9c80


0x9c80:	test	rdx, rdx
0x9c83:	jns	0x9d18


0x9a68:	lea	r13, [rbp + r10]
0x9a6d:	mov	rax, r13
0x9a70:	shr	rax, 0x3f
0x9a74:	add	rax, r13
0x9a77:	sar	rax, 1
0x9a7a:	lea	r13, [rax + rax*4]
0x9a7e:	mov	r14, rax
0x9a81:	cmp	qword ptr [r11 + r13*8 + 8], r12
0x9a86:	jl	0x9ba0


0x9b90:	mov	r14, r10
0x9b93:	mov	r10, rax
0x9b96:	nop	word ptr cs:[rax + rax]
0x9ba0:	lea	rbp, [r14 + 1]
0x9ba4:	mov	rax, r10
0x9ba7:	jmp	0x9a37


0x9abc:	cmp	qword ptr [rsi], 0
0x9ac0:	jle	0x9be2


0x9be2:	xor	eax, eax
0x9be4:	jmp	0x9b5e


0x9ac6:	mov	qword ptr [rsp + 0x30], rbp
0x9acb:	mov	qword ptr [rsp + 0x20], r9
0x9ad0:	mov	r13, rdi
0x9ad3:	mov	qword ptr [rsp + 0x18], r8
0x9ad8:	mov	qword ptr [rsp + 0x10], rcx
0x9add:	xor	r14d, r14d
0x9ae0:	mov	qword ptr [rsp + 0x38], rsi
0x9ae5:	mov	qword ptr [rsp + 0x28], rbx
0x9aea:	mov	rbp, rdx
0x9aed:	mov	r15, r12
0x9af0:	mov	rax, qword ptr [rbp]
0x9af4:	mov	rdx, qword ptr [r13 + 0xd8]
0x9afb:	mov	rdi, r13
0x9afe:	mov	r9, qword ptr [rsp + 0x28]
0x9b03:	mov	r8, qword ptr [rsp + 0x18]
0x9b08:	mov	rcx, qword ptr [rsp + 0x10]
0x9b0d:	mov	rsi, qword ptr [rax + r14*8]
0x9b11:	lea	rax, [rsi + rsi*4]
0x9b15:	lea	rax, [rdx + rax*8]
0x9b19:	mov	rdx, qword ptr [rsp + 8]
0x9b1e:	mov	rax, qword ptr [rax]
0x9b21:	shl	rax, 4
0x9b25:	add	rax, qword ptr [rdx]
0x9b28:	mov	r12, qword ptr [rax]
0x9b2b:	mov	rdx, r12
0x9b2e:	call	0x7f40


0x98c3:	mov	rax, qword ptr [rdi + 0xe0]
0x98ca:	mov	rdx, qword ptr [rsi + 0x28]
0x98ce:	cmp	rcx, 0x3f
0x98d2:	mov	rdx, qword ptr [rax + rdx*8]
0x98d6:	mov	qword ptr [rax + rcx*8], rdx
0x98da:	jg	0x989c


0x98c0:	mov	qword ptr [rax], rsi
0x98c3:	mov	rax, qword ptr [rdi + 0xe0]
0x98ca:	mov	rdx, qword ptr [rsi + 0x28]
0x98ce:	cmp	rcx, 0x3f
0x98d2:	mov	rdx, qword ptr [rax + rdx*8]
0x98d6:	mov	qword ptr [rax + rcx*8], rdx
0x98da:	jg	0x989c


0x9730:	lea	rsi, [rax + 1]
0x9734:	mov	rdi, rcx
0x9737:	jmp	0x96e0


0x9705:	mov	rcx, rax
0x9708:	cmp	rsi, rcx
0x970b:	jb	0x96f8


0x96e0:	cmp	rsi, rdi
0x96e3:	jae	0x970d


0x966d:	ret	


0x933c:	mov	rsi, r15
0x933f:	call	0x8190


0x9180:	shl	rdx, 4
0x9184:	sub	r8, rax
0x9187:	mov	rcx, qword ptr [r14 + 0x20]
0x918b:	lea	r8, [r8 + rdx - 0x20]
0x9190:	jmp	0x91aa




0x8818:	mov	rdi, qword ptr [rsp + 8]
0x881d:	call	0x1f10


0x882a:	mov	rax, qword ptr [r14 + 0x20]
0x882e:	mov	rdi, qword ptr [rsp + 0x30]
0x8833:	mov	rdx, rbx
0x8836:	mov	rcx, qword ptr [rsp + 8]
0x883b:	sub	rdx, r15
0x883e:	mov	rsi, rbp
0x8841:	mov	qword ptr [rsp + 0x10], rdx
0x8846:	mov	qword ptr [rsp + 0x48], rax
0x884b:	mov	qword ptr [rsp + 0x20], rdi
0x8850:	call	0x7b30


0x864f:	mov	rcx, qword ptr [rsp + 0x98]
0x8657:	xor	rcx, qword ptr fs:[0x28]
0x8660:	jne	0x8bea


0x89fb:	mov	qword ptr [rsp + 0x18], rcx
0x8a00:	jmp	0x86c3


0x89ea:	movzx	esi, byte ptr [rdi + rax]
0x89ee:	cmp	r11, rax
0x89f1:	movzx	esi, byte ptr [rdx + rsi]
0x89f5:	mov	byte ptr [rcx + rax], sil
0x89f9:	jne	0x89df


0x858d:	mov	rdi, qword ptr [rbx + 0x78]
0x8591:	mov	rcx, qword ptr [rbx]
0x8594:	add	rcx, rbp
0x8597:	add	rcx, rax
0x859a:	add	rcx, qword ptr [rbx + 0x28]
0x859e:	movzx	ecx, byte ptr [rcx]
0x85a1:	movzx	ecx, byte ptr [rdi + rcx]
0x85a5:	mov	rdi, qword ptr [rbx + 8]
0x85a9:	add	rdi, rbp
0x85ac:	mov	byte ptr [rdi + rax], cl
0x85af:	mov	byte ptr [rsi + rax], cl
0x85b2:	lea	ecx, [rax + 1]
0x85b5:	cmp	ecx, dword ptr [rbx + 0x90]
0x85bb:	jl	0x8580


0x8233:	mov	qword ptr [rax + rdx], rbp
0x8237:	mov	eax, 1
0x823c:	add	qword ptr [rbx + 8], 1
0x8241:	jmp	0x81be


0x821b:	add	rdx, rax
0x821e:	nop	
0x8220:	mov	rcx, qword ptr [rdx - 8]
0x8224:	sub	rdx, 8
0x8228:	mov	qword ptr [rdx + 8], rcx
0x822c:	cmp	rax, rdx
0x822f:	jne	0x8220


0x7ed0:	mov	r15d, dword ptr [rsp + 0x20]
0x7ed5:	add	rsp, 0x48
0x7ed9:	mov	eax, r15d
0x7edc:	pop	rbx
0x7edd:	sar	eax, 1
0x7edf:	pop	rbp
0x7ee0:	pop	r12
0x7ee2:	pop	r13
0x7ee4:	pop	r14
0x7ee6:	pop	r15
0x7ee8:	ret	


0x7dde:	add	rsp, 0x48
0x7de2:	mov	eax, 0xffffffff
0x7de7:	pop	rbx
0x7de8:	pop	rbp
0x7de9:	pop	r12
0x7deb:	pop	r13
0x7ded:	pop	r14
0x7def:	pop	r15
0x7df1:	ret	


0x7efc:	cmp	qword ptr [rax], r15
0x7eff:	jne	0x7da6


0x7df8:	cmp	r10, -1
0x7dfc:	je	0x7da6


0x7cb0:	mov	qword ptr [rsi + 0x48], rdx
0x7cb4:	movzx	eax, byte ptr [r8 + rax + 1]
0x7cba:	mov	byte ptr [rdi + 8], 1
0x7cbe:	mov	byte ptr [rdi], al
0x7cc0:	mov	eax, 1
0x7cc5:	ret	


0x7c3a:	movzx	eax, byte ptr [r8 + rax + 1]
0x7c40:	cmp	al, 0x3a
0x7c42:	mov	byte ptr [rdi], al
0x7c44:	je	0x7ce0


0x7c80:	mov	byte ptr [rdi + 8], 1
0x7c84:	mov	byte ptr [rdi], 0x5b
0x7c87:	mov	eax, 1
0x7c8c:	ret	


0x7ca0:	mov	byte ptr [rdi + 8], 0x15
0x7ca4:	mov	eax, 1
0x7ca9:	ret	


0x7c06:	cmp	cl, 0x5e
0x7c09:	je	0x7c90


0x7990:	mov	eax, dword ptr [rsp]
0x7993:	cmp	eax, 0x2f
0x7996:	ja	0x7a84


0x78c0:	jg	0x7980


0x7918:	cmp	esi, 0x406
0x791e:	jge	0x7990


0x7960:	cmp	esi, 0x409
0x7966:	je	0x7990


0x3df5:	call	0x3930


0x3e40:	sub	rbp, 0x50
0x3e44:	mov	rax, qword ptr [rax + 0x518]
0x3e4b:	cmp	rbp, 0x4f
0x3e4f:	ja	0x3e40


0x3d26:	mov	qword ptr [rip + 0x2183d3], rdx
0x3d2d:	mov	rdx, qword ptr [rdx + 0x40]
0x3d31:	pop	rbx
0x3d32:	mov	qword ptr [rip + 0x2184e7], rdx
0x3d39:	ret	


0x3d20:	cmp	qword ptr [rcx], 0
0x3d24:	jne	0x3d06


0x38c7:	lea	rsi, [rcx + rcx*2]
0x38cb:	mov	qword ptr [rip + 0x218836], rcx
0x38d2:	shl	rsi, 5
0x38d6:	call	0x6970


0x1552e:	cmp	rbx, r8
0x15531:	jle	0x15808


0x15569:	test	r12, r12
0x1556c:	je	0x15730


0x15730:	mov	edi, 0x10
0x15735:	mov	r14d, 1
0x1573b:	mov	r13d, 1
0x15741:	xor	r12d, r12d
0x15744:	jmp	0x1558f


0x15559:	test	al, 8
0x1555b:	je	0x15750


0x128c0:	call	0x1f50


0x12479:	mov	rax, qword ptr [rbx + 0x10]
0x1247d:	mov	r8d, dword ptr [rax + rsi*4]
0x12481:	mov	edi, r8d
0x12484:	mov	dword ptr [rsp], r8d
0x12488:	call	0x1d90


0x12914:	cmp	byte ptr [rbx + 0x8c], 0
0x1291b:	mov	rcx, qword ptr [rbx]
0x1291e:	mov	rdi, qword ptr [rbx + 0x28]
0x12922:	je	0x12968


0x128e5:	mov	rcx, qword ptr [rbx + 0x10]
0x128e9:	lea	rdi, [rsi*4]
0x128f1:	mov	r8d, dword ptr [rcx + rsi*4]
0x128f5:	cmp	r8d, -1
0x128f9:	je	0x129af


0x1d90:	jmp	qword ptr [rip + 0x21a152]


0x121ea:	cmp	byte ptr [r10 + 0x8c], 0
0x121f2:	je	0x12288


0x12193:	cmp	r13b, r9b
0x12196:	jne	0x12150


0x119d8:	lea	rdx, [rbx + rcx]
0x119dc:	mov	rax, rdx
0x119df:	shr	rax, 0x3f
0x119e3:	add	rax, rdx
0x119e6:	sar	rax, 1
0x119e9:	lea	rdx, [rax + rax*4]
0x119ed:	mov	r8, rax
0x119f0:	cmp	rbp, qword ptr [rdi + rdx*8 + 8]
0x119f5:	jg	0x11b10


0x11b07:	mov	r8, rcx
0x11b0a:	mov	rcx, rdx
0x11b0d:	nop	dword ptr [rax]
0x11b10:	lea	rbx, [r8 + 1]
0x11b14:	mov	rdx, rcx
0x11b17:	jmp	0x119a0


0x11a34:	cmp	rbx, -1
0x11a38:	je	0x11b00


0x10c69:	mov	rsi, qword ptr [rsp + 0x228]
0x10c71:	xor	rsi, qword ptr fs:[0x28]
0x10c7a:	mov	eax, dword ptr [rsp + 0x5c]
0x10c7e:	jne	0x1181b


0x101f6:	mov	rdx, qword ptr [rdi + 0x50]
0x101fa:	test	rdx, rdx
0x101fd:	je	0x11070


0xf486:	cmp	rsi, rcx
0xf489:	jg	0xf460


0xf45b:	jmp	0xf628


0xf4b6:	mov	rax, qword ptr [rsp + 0x50]
0xf4bb:	cmp	qword ptr [r14 + 0xe8], 0
0xf4c3:	mov	rdx, qword ptr [rax]
0xf4c6:	mov	rax, qword ptr [rdx + rbx]
0xf4ca:	mov	qword ptr [rsp + 0x58], rax
0xf4cf:	jle	0xf68b


0xf492:	mov	rdx, qword ptr [r14 + 0xd8]
0xf499:	lea	rax, [rcx + rcx*4]
0xf49d:	mov	rdi, qword ptr [rsp + 8]
0xf4a2:	lea	rax, [rdx + rax*8]
0xf4a6:	cmp	qword ptr [rax + 8], rdi
0xf4aa:	jne	0xf4b6


0xdf72:	add	rsp, 8
0xdf76:	mov	eax, ebp
0xdf78:	pop	rbx
0xdf79:	pop	rbp
0xdf7a:	pop	r12
0xdf7c:	pop	r13
0xdf7e:	ret	


0xe046:	cmp	dl, 0x9f
0xe049:	jbe	0xdf70


0xe04f:	mov	ebp, 3
0xe054:	movsxd	rdi, ebp
0xe057:	add	r8, rdi
0xe05a:	cmp	rcx, r8
0xe05d:	jl	0xdf70


0xe08c:	cmp	al, 0xf0
0xe08e:	jne	0xe099


0xe0a0:	cmp	al, 0xfb
0xe0a2:	ja	0xe0b8


0xda17:	mov	rdi, qword ptr [rsp + 0x20]
0xda1c:	add	qword ptr [rsp], 1
0xda21:	mov	rax, qword ptr [rsp]
0xda25:	cmp	rax, qword ptr [rdi]
0xda28:	jge	0xddcd


0xda8b:	mov	rsi, qword ptr [rsp + 8]
0xda90:	cmp	dword ptr [rsi + 0xb4], 1
0xda97:	jle	0xda17


0x1f40:	jmp	qword ptr [rip + 0x21a07a]


0xdd16:	test	ebx, ebx
0xdd18:	mov	byte ptr [r13 + r14], 1
0xdd1e:	je	0xdd35


0xdd35:	add	r14, 1
0xdd39:	cmp	r14, 0x40
0xdd3d:	jne	0xdd10


0xdb88:	mov	rax, qword ptr [rsp + 8]
0xdb8d:	mov	r12, qword ptr [rsi]
0xdb90:	cmp	dword ptr [rax + 0xb4], 1
0xdb97:	jle	0xdbbd


0xda02:	and	edx, 0xfffffffd
0xda05:	cmp	dl, 5
0xda08:	je	0xde04


0xb8d1:	add	rsp, 0x48
0xb8d5:	pop	rbx
0xb8d6:	pop	rbp
0xb8d7:	pop	r12
0xb8d9:	pop	r13
0xb8db:	pop	r14
0xb8dd:	pop	r15
0xb8df:	ret	


0xbf1a:	call	0x1c20


0xbd0a:	cmp	qword ptr [rbx + 0x40], rax
0xbd0e:	mov	rdx, qword ptr [rbx + 0x30]
0xbd12:	cmovle	rax, qword ptr [rbx + 0x40]
0xbd17:	cmp	rax, rdx
0xbd1a:	jg	0xbd28


0xbd79:	mov	rcx, qword ptr [rbx + 0x80]
0xbd80:	movzx	edx, al
0xbd83:	sar	rdx, 6
0xbd87:	mov	rcx, qword ptr [rcx + rdx*8]
0xbd8b:	mov	edx, 1
0xbd90:	bt	rcx, rax
0xbd94:	jb	0xbdb0


0xbd75:	movzx	eax, byte ptr [rdx + rax]
0xbd79:	mov	rcx, qword ptr [rbx + 0x80]
0xbd80:	movzx	edx, al
0xbd83:	sar	rdx, 6
0xbd87:	mov	rcx, qword ptr [rcx + rdx*8]
0xbd8b:	mov	edx, 1
0xbd90:	bt	rcx, rax
0xbd94:	jb	0xbdb0


0xb981:	lea	r14, [r11 + rax]
0xb985:	cmp	r15, r14
0xb988:	jle	0xbdcf


0xbc38:	mov	rcx, qword ptr [rbx]
0xbc3b:	mov	rdi, rbp
0xbc3e:	sub	rdi, rdx
0xbc41:	mov	rdx, rdi
0xbc44:	lea	r12, [rcx + r11]
0xbc48:	add	rdx, r12
0xbc4b:	lea	rsi, [r12 + rbp - 1]
0xbc50:	cmp	rcx, rdx
0xbc53:	cmovb	rcx, rdx
0xbc57:	cmp	rcx, rsi
0xbc5a:	jbe	0xbc75


0xba58:	jge	0xba93


0xba80:	mov	rcx, rax
0xba83:	jmp	0xba5e


0xb4fb:	xor	eax, eax
0xb4fd:	cmp	ebx, 0xa
0xb500:	je	0xb54c


0xb578:	mov	edi, ebx
0xb57a:	call	0x1d90


0xb458:	lea	rax, [r8 + r8]
0xb45c:	mov	rsi, r8
0xb45f:	mov	rdi, r9
0xb462:	shl	rsi, 4
0xb466:	mov	qword ptr [rsp + 8], rcx
0xb46b:	mov	qword ptr [rsp + 0x10], rax
0xb470:	call	0x1e00


0xb3e3:	mov	esi, 0x30
0xb3e8:	mov	edi, 1
0xb3ed:	mov	qword ptr [rsp + 0x10], r9
0xb3f2:	mov	qword ptr [rsp + 8], r8
0xb3f7:	mov	qword ptr [rsp + 0x18], rcx
0xb3fc:	call	0x1d30


0xaab7:	mov	rdi, qword ptr [r14 + 0x50]
0xaabb:	test	rdi, rdi
0xaabe:	je	0xaa98


0xa288:	sub	rsi, 1
0xa28c:	mov	qword ptr [rdi + rsi*8], r8
0xa290:	sub	r9, 1
0xa294:	js	0xa2c0


0xa283:	cmp	r10, r8
0xa286:	je	0xa290


0xa270:	sub	rcx, 1
0xa274:	cmp	rcx, -1
0xa278:	je	0xa288


0xa2c0:	mov	rcx, qword ptr [rbx + 8]
0xa2c4:	mov	rdx, qword ptr [rbp + 8]
0xa2c8:	add	rdx, rcx
0xa2cb:	add	rdx, qword ptr [r12 + 8]
0xa2d0:	lea	rax, [rcx - 1]
0xa2d4:	lea	r9, [rdx - 1]
0xa2d8:	sub	rdx, rsi
0xa2db:	add	rcx, rdx
0xa2de:	test	rdx, rdx
0xa2e1:	mov	qword ptr [rbx + 8], rcx
0xa2e5:	jle	0xa32d


0xa25d:	mov	r8, qword ptr [rdx + r11*8]
0xa261:	cmp	rax, r8
0xa264:	jne	0xa255


0xa2b6:	mov	rax, qword ptr [r13 + r9*8]
0xa2bb:	jmp	0xa250


0x9c49:	mov	rcx, qword ptr [rbx + 0x10]
0x9c4d:	mov	rsi, qword ptr [r12 + 0x10]
0x9c52:	mov	rsi, qword ptr [rsi + rdx*8]
0x9c56:	cmp	qword ptr [rcx + rax*8], rsi
0x9c5a:	je	0x9cf0


0x9c89:	mov	rcx, qword ptr [rbx + 8]
0x9c8d:	mov	rax, qword ptr [r12 + 8]
0x9c92:	lea	r8, [rcx + rax*2 - 1]
0x9c97:	mov	rdx, r8
0x9c9a:	sub	rdx, rbp
0x9c9d:	add	rdx, 1
0x9ca1:	je	0x9cda


0x9d18:	mov	rax, qword ptr [rbx + 0x10]
0x9d1c:	add	rdx, 1
0x9d20:	mov	rsi, qword ptr [r12 + 0x10]
0x9d25:	sub	rbp, rdx
0x9d28:	shl	rdx, 3
0x9d2c:	lea	rdi, [rax + rbp*8]
0x9d30:	call	0x1d70


0x9ba0:	lea	rbp, [r14 + 1]
0x9ba4:	mov	rax, r10
0x9ba7:	jmp	0x9a37


0x9a8c:	mov	r10, rax
0x9a8f:	cmp	rbp, r10
0x9a92:	jl	0x9a68


0x9a37:	cmp	rbp, rax
0x9a3a:	jge	0x9a94


0x9b5e:	add	rsp, 0x48
0x9b62:	pop	rbx
0x9b63:	pop	rbp
0x9b64:	pop	r12
0x9b66:	pop	r13
0x9b68:	pop	r14
0x9b6a:	pop	r15
0x9b6c:	ret	


0x98dc:	mov	rax, -2
0x98e3:	rol	rax, cl
0x98e6:	and	qword ptr [rdi + 0xa0], rax
0x98ed:	jmp	0x989c


0x91aa:	cmp	qword ptr [rcx + rsi*8], r15
0x91ae:	jne	0x9198


0x1f10:	jmp	qword ptr [rip + 0x21a092]


0x86c3:	mov	rcx, qword ptr [rsp + 8]
0x86c8:	mov	rdx, qword ptr [rsp + 0x10]
0x86cd:	mov	rsi, qword ptr [rsp + 0x18]
0x86d2:	mov	rdi, qword ptr [rsp + 0x20]
0x86d7:	call	0x7b30


0x89df:	add	rax, 1
0x89e3:	cmp	qword ptr [rsp + 0x10], rax
0x89e8:	je	0x89fb


0x8272:	jmp	0x8233


0x8260:	mov	qword ptr [rax + rdx], rcx
0x8264:	sub	rdx, 8
0x8268:	mov	rcx, qword ptr [rax + rdx - 8]
0x826d:	cmp	rcx, rbp
0x8270:	jg	0x8260


0x81be:	add	rsp, 8
0x81c2:	pop	rbx
0x81c3:	pop	rbp
0x81c4:	ret	


0x8231:	xor	edx, edx
0x8233:	mov	qword ptr [rax + rdx], rbp
0x8237:	mov	eax, 1
0x823c:	add	qword ptr [rbx + 8], 1
0x8241:	jmp	0x81be


0x8220:	mov	rcx, qword ptr [rdx - 8]
0x8224:	sub	rdx, 8
0x8228:	mov	qword ptr [rdx + 8], rcx
0x822c:	cmp	rax, rdx
0x822f:	jne	0x8220


0x7f05:	add	rsp, 0x48
0x7f09:	xor	eax, eax
0x7f0b:	pop	rbx
0x7f0c:	pop	rbp
0x7f0d:	pop	r12
0x7f0f:	pop	r13
0x7f11:	pop	r14
0x7f13:	pop	r15
0x7f15:	ret	


0x7dfe:	mov	rax, qword ptr [rsp]
0x7e02:	mov	r13, qword ptr [rsp + 0x28]
0x7e07:	mov	rdi, rbp
0x7e0a:	mov	qword ptr [rsp + 0x30], r12
0x7e0f:	mov	qword ptr [rsp + 0x38], rbx
0x7e14:	mov	r12, r10
0x7e17:	add	r13, qword ptr [rax + 0xd8]
0x7e1e:	lea	rax, [rbp + rbp*2]
0x7e23:	mov	rbp, r14
0x7e26:	mov	r14, rdi
0x7e29:	shl	rax, 3
0x7e2d:	mov	rbx, rax
0x7e30:	cmp	qword ptr [r13], r14
0x7e34:	jne	0x7ea0


0x7ce0:	and	edx, 4
0x7ce3:	je	0x7c80


0x7c4a:	cmp	al, 0x3d
0x7c4c:	je	0x7cd0


0x7c90:	mov	byte ptr [rdi + 8], 0x19
0x7c94:	mov	eax, 1
0x7c99:	ret	


0x7c0f:	cmp	cl, 0x2d
0x7c12:	jne	0x7c6f


0x799c:	add	rax, qword ptr [rsp + 0x10]
0x79a1:	mov	edx, dword ptr [rax]
0x79a3:	mov	edi, ebp
0x79a5:	xor	eax, eax
0x79a7:	call	0x1b90


0x7a84:	mov	rax, qword ptr [rsp + 8]
0x7a89:	jmp	0x79a1


0x78c6:	cmp	esi, 2
0x78c9:	je	0x7990


0x7980:	cmp	esi, 9
0x7983:	je	0x78e0


0x7920:	cmp	esi, 0x401
0x7926:	je	0x78e0


0x7968:	jl	0x78e0


0x15572:	and	eax, 6
0x15575:	mov	rcx, qword ptr [r15 + 0x30]
0x15579:	cmp	al, 4
0x1557b:	je	0x15710


0x1558f:	mov	qword ptr [rsp + 0x20], r9
0x15594:	mov	qword ptr [rsp + 0x18], rdx
0x15599:	mov	qword ptr [rsp + 0x10], rsi
0x1559e:	mov	qword ptr [rsp + 8], r8
0x155a3:	call	0x1da0


0x15750:	mov	rdi, r15
0x15753:	mov	qword ptr [rsp + 0x20], r9
0x15758:	mov	qword ptr [rsp + 0x18], rdx
0x1575d:	mov	qword ptr [rsp + 0x10], rsi
0x15762:	mov	qword ptr [rsp + 8], r8
0x15767:	call	0x15400


0x12968:	add	rcx, rsi
0x1296b:	movzx	edi, byte ptr [rcx + rdi]
0x1296f:	mov	r12d, edi
0x12972:	mov	dword ptr [rsp + 8], edi
0x12976:	jmp	0x12468


0x12924:	mov	r8, qword ptr [rbx + 0x18]
0x12928:	add	rcx, rdi
0x1292b:	add	rcx, qword ptr [r8 + rsi*8]
0x1292f:	movzx	edi, byte ptr [rcx]
0x12932:	mov	r12d, edi
0x12935:	mov	dword ptr [rsp + 8], edi
0x12939:	and	edi, 0x80
0x1293f:	jne	0x1245b


0x129af:	movzx	eax, byte ptr [rdx + r14 + 1]
0x129b5:	mov	byte ptr [rbp + 8], 1
0x129b9:	mov	r12d, eax
0x129bc:	mov	byte ptr [rbp], al
0x129bf:	mov	dword ptr [rsp + 8], eax
0x129c3:	jmp	0x12481


0x128ff:	lea	r9, [r14 + 2]
0x12903:	cmp	qword ptr [rbx + 0x30], r9
0x12907:	je	0x12914




0x12288:	lea	rax, [r11 + 1]
0x1228c:	add	r11, qword ptr [r10]
0x1228f:	mov	rdx, qword ptr [r10 + 0x28]
0x12293:	mov	qword ptr [r10 + 0x48], rax
0x12297:	movzx	r9d, byte ptr [r11 + rdx]
0x1229c:	jmp	0x1218a


0x121f8:	cmp	r11, qword ptr [r10 + 0x30]
0x121fc:	je	0x1220d


0x12198:	mov	rdx, qword ptr [r10 + 8]
0x1219c:	cmp	byte ptr [rdx + rax], 0x5d
0x121a0:	jne	0x12150


0x12150:	mov	rax, qword ptr [rbx + 8]
0x12154:	mov	byte ptr [rax + r8], r9b
0x12158:	add	r8, 1
0x1215c:	cmp	r8, 0x20
0x12160:	je	0x12258


0x119fb:	mov	rcx, rax
0x119fe:	cmp	rbx, rcx
0x11a01:	jl	0x119d8


0x11b10:	lea	rbx, [r8 + 1]
0x11b14:	mov	rdx, rcx
0x11b17:	jmp	0x119a0


0x119a0:	cmp	rbx, rdx
0x119a3:	jge	0x11a03


0x11a3e:	mov	rax, qword ptr [rsp + 8]
0x11a43:	mov	qword ptr [rsp + 0x60], 0
0x11a4c:	mov	r12, qword ptr [rax + 0x98]
0x11a53:	mov	rax, qword ptr [rsp + 0x10]
0x11a58:	cmp	qword ptr [rax + 8], 0
0x11a5d:	jle	0x11b00


0x10c84:	add	rsp, 0x238
0x10c8b:	pop	rbx
0x10c8c:	pop	rbp
0x10c8d:	pop	r12
0x10c8f:	pop	r13
0x10c91:	pop	r14
0x10c93:	pop	r15
0x10c95:	ret	


0x1181b:	call	0x1c20


0x10203:	mov	rcx, qword ptr [rdi + 0x58]
0x10207:	test	rcx, rcx
0x1020a:	je	0x11070


0xf460:	lea	rdx, [rsi + rcx]
0xf464:	mov	rax, rdx
0xf467:	shr	rax, 0x3f
0xf46b:	add	rax, rdx
0xf46e:	sar	rax, 1
0xf471:	lea	rdx, [rax + rax*4]
0xf475:	mov	r8, rax
0xf478:	cmp	r9, qword ptr [r11 + rdx*8 + 8]
0xf47d:	jg	0xf630


0xf628:	mov	r8, rsi
0xf62b:	mov	rsi, rdi
0xf62e:	nop	
0xf630:	lea	rcx, [r8 + 1]
0xf634:	mov	rdi, rsi
0xf637:	jmp	0xf433


0xf68b:	mov	rax, qword ptr [rsp + 0x70]
0xf690:	cmp	qword ptr [rsp + 0x70], rax
0xf695:	mov	dword ptr [rsp + 0x8c], 0
0xf6a0:	jge	0xf380


0xf4d5:	mov	qword ptr [rsp + 0x30], r13
0xf4da:	mov	qword ptr [rsp + 0x28], 0
0xf4e3:	mov	r13, r10
0xf4e6:	mov	rax, qword ptr [r14 + 0xf8]
0xf4ed:	mov	rbx, qword ptr [rsp + 0x28]
0xf4f2:	mov	rdi, qword ptr [rsp + 0x58]
0xf4f7:	mov	rbx, qword ptr [rax + rbx*8]
0xf4fb:	mov	rax, qword ptr [rbx + 8]
0xf4ff:	shl	rax, 4
0xf503:	cmp	rdi, qword ptr [rdx + rax]
0xf507:	je	0xf530


0xf4ac:	cmp	rcx, -1
0xf4b0:	jne	0xf686


0xe063:	mov	eax, 1
0xe068:	jmp	0xe077


0xe090:	cmp	dl, 0x8f
0xe093:	jbe	0xdf70


0xe099:	mov	ebp, 4
0xe09e:	jmp	0xe054


0xe0a4:	cmp	al, 0xf8
0xe0a6:	jne	0xe0b1


0xe0b8:	cmp	al, 0xfd
0xe0ba:	ja	0xdf70


0xda9d:	mov	rax, qword ptr [rsi]
0xdaa0:	mov	rdi, qword ptr [rsp + 0x10]
0xdaa5:	movzx	edx, byte ptr [rax + rdi]
0xdaa9:	mov	byte ptr [rsp + 0x60], dl
0xdaad:	lea	rdx, [r12 + 1]
0xdab2:	cmp	qword ptr [rsi + 0x10], rdx
0xdab6:	jbe	0xddf6




0xdd20:	call	0x1f40


0xdd3f:	add	r12, 0x40
0xdd43:	add	qword ptr [rsp + 0x18], 8
0xdd49:	add	r13, 0x40
0xdd4d:	cmp	r12, 0x100
0xdd54:	je	0xda17


0xdd10:	bt	r15, r14
0xdd14:	jae	0xdd35


0xdbbd:	xor	r13d, r13d
0xdbc0:	cmp	qword ptr [r12 + 0x28], 0
0xdbc6:	jle	0xda17


0xdb99:	cmp	qword ptr [r12 + 0x48], 0
0xdb9f:	jne	0xdc9f


0xde04:	movdqa	xmm0, xmmword ptr [rip + 0xa074]
0xde0c:	cmp	eax, 2
0xde0f:	movups	xmmword ptr [rbp], xmm0
0xde13:	movups	xmmword ptr [rbp + 0x10], xmm0
0xde17:	movups	xmmword ptr [rbp + 0x20], xmm0
0xde1b:	movups	xmmword ptr [rbp + 0x30], xmm0
0xde1f:	movups	xmmword ptr [rbp + 0x40], xmm0
0xde23:	movups	xmmword ptr [rbp + 0x50], xmm0
0xde27:	movups	xmmword ptr [rbp + 0x60], xmm0
0xde2b:	movups	xmmword ptr [rbp + 0x70], xmm0
0xde2f:	movups	xmmword ptr [rbp + 0x80], xmm0
0xde36:	movups	xmmword ptr [rbp + 0x90], xmm0
0xde3d:	movups	xmmword ptr [rbp + 0xa0], xmm0
0xde44:	movups	xmmword ptr [rbp + 0xb0], xmm0
0xde4b:	movups	xmmword ptr [rbp + 0xc0], xmm0
0xde52:	movups	xmmword ptr [rbp + 0xd0], xmm0
0xde59:	movups	xmmword ptr [rbp + 0xe0], xmm0
0xde60:	movups	xmmword ptr [rbp + 0xf0], xmm0
0xde67:	jne	0xddcd


0xda0e:	cmp	eax, 2
0xda11:	je	0xdd64


0xbd1c:	jmp	0xbd48


0xbd28:	mov	rsi, qword ptr [rbx]
0xbd2b:	add	rsi, rdx
0xbd2e:	movzx	esi, byte ptr [rsi + r15]
0xbd33:	movzx	esi, byte ptr [rcx + rsi]
0xbd37:	mov	rcx, qword ptr [rbx + 8]
0xbd3b:	mov	byte ptr [rcx + rdx], sil
0xbd3f:	add	rdx, 1
0xbd43:	cmp	rax, rdx
0xbd46:	jne	0xbd20


0xbdb0:	mov	dword ptr [rbx + 0x70], edx
0xbdb3:	jmp	0xbb28


0xbd96:	xor	edx, edx
0xbd98:	cmp	al, 0xa
0xbd9a:	jne	0xbdb0


0xbdcf:	sub	r14, r15
0xbdd2:	mov	r12, r14
0xbdd5:	mov	qword ptr [rbx + 0x30], r14
0xbdd9:	lea	rsi, [r8 - 1]
0xbddd:	mov	edx, r10d
0xbde0:	mov	rdi, rbx
0xbde3:	call	0xb4b0


0xb98e:	lea	rax, [rbx + 0x20]
0xb992:	lea	r13, [rsp + 0x24]
0xb997:	mov	qword ptr [rsp + 0x10], rax
0xb99c:	nop	dword ptr [rax]
0xb9a0:	mov	r12, qword ptr [rbx + 0x50]
0xb9a4:	mov	rsi, qword ptr [rbx]
0xb9a7:	mov	rdi, r13
0xb9aa:	mov	rax, qword ptr [rbx + 0x20]
0xb9ae:	mov	rcx, qword ptr [rsp + 0x10]
0xb9b3:	mov	dword ptr [rsp + 0xc], r10d
0xb9b8:	mov	qword ptr [rsp], r8
0xb9bc:	sub	r12, r14
0xb9bf:	add	rsi, r14
0xb9c2:	mov	rdx, r12
0xb9c5:	mov	qword ptr [rsp + 0x18], rax
0xb9ca:	call	0x7b30


0xbc75:	movzx	edx, byte ptr [rsi]
0xbc78:	and	edx, 0xffffffc0
0xbc7b:	cmp	dl, 0x80
0xbc7e:	je	0xbc68


0xbc5c:	jmp	0xb981


0xba5a:	lea	rsi, [rax + 1]
0xba5e:	cmp	rsi, rcx
0xba61:	jge	0xba88


0xba93:	lea	r13, [r12 - 1]
0xba98:	mov	edx, r10d
0xba9b:	mov	rdi, rbx
0xba9e:	mov	qword ptr [rsp], r8
0xbaa2:	mov	rsi, r13
0xbaa5:	call	0xb4b0


0xba5e:	cmp	rsi, rcx
0xba61:	jge	0xba88


0xaac0:	mov	rsi, rbp
0xaac3:	call	0x9670


0xa296:	sub	r11, 1
0xa29a:	js	0xa2c0


0xa290:	sub	r9, 1
0xa294:	js	0xa2c0


0xa32d:	shl	rdx, 3
0xa331:	lea	rsi, [rdi + rsi*8]
0xa335:	call	0x1d70


0xa2e7:	test	rax, rax
0xa2ea:	js	0xa32d


0xa250:	cmp	rax, r8
0xa253:	je	0xa266


0x9cf0:	sub	rdx, 1
0x9cf4:	sub	rax, 1
0x9cf8:	mov	rdi, rdx
0x9cfb:	not	rdi
0x9cfe:	jmp	0x9c3f


0x9c60:	jge	0x9d08


0x9cda:	xor	eax, eax
0x9cdc:	pop	rbx
0x9cdd:	pop	rbp
0x9cde:	pop	r12
0x9ce0:	ret	


0x9ca3:	mov	rdi, qword ptr [rbx + 0x10]
0x9ca7:	lea	rax, [rcx - 1]
0x9cab:	add	rcx, rdx
0x9cae:	mov	qword ptr [rbx + 8], rcx
0x9cb2:	nop	word ptr [rax + rax]
0x9cb8:	mov	rsi, qword ptr [rdi + r8*8]
0x9cbc:	mov	rcx, qword ptr [rdi + rax*8]
0x9cc0:	lea	r9, [rax + rdx]
0x9cc4:	lea	r9, [rdi + r9*8]
0x9cc8:	cmp	rsi, rcx
0x9ccb:	jle	0x9d40


0x91b0:	mov	edx, dword ptr [rax + 8]
0x91b3:	shr	edx, 8
0x91b6:	and	edx, 0x3ff
0x91bc:	cmp	ebp, edx
0x91be:	jne	0x9198


0x9198:	add	rax, r8
0x919b:	sub	rsi, 1
0x919f:	test	byte ptr [rax + 0xa], 4
0x91a3:	je	0x9220




0x7e36:	cmp	r15, 0x3f
0x7e3a:	jg	0x7e48


0x7ea0:	add	r13, 0x28
0x7ea4:	cmp	byte ptr [r13 - 8], 0
0x7ea9:	jne	0x7e30


0x7ce5:	mov	byte ptr [rdi + 8], 0x1e
0x7ce9:	mov	eax, 2
0x7cee:	ret	


0x7cd0:	mov	byte ptr [rdi + 8], 0x1c
0x7cd4:	mov	eax, 2
0x7cd9:	ret	


0x7c52:	cmp	al, 0x2e
0x7c54:	jne	0x7c80


0x7c14:	mov	byte ptr [rdi + 8], 0x16
0x7c18:	mov	eax, 1
0x7c1d:	ret	


0x79a1:	mov	edx, dword ptr [rax]
0x79a3:	mov	edi, ebp
0x79a5:	xor	eax, eax
0x79a7:	call	0x1b90


0x78cf:	jg	0x78e0


0x7989:	jg	0x7990


0x7928:	cmp	esi, 0x402
0x792e:	je	0x7990


0x796e:	cmp	esi, 0x40a
0x7974:	jne	0x7938


0x15710:	mov	r14, qword ptr [r12]
0x15714:	cmp	r14, rcx
0x15717:	ja	0x15581


0x15581:	lea	r14, [rcx + 1]
0x15585:	mov	r13, r14
0x15588:	mov	rdi, r14
0x1558b:	shl	rdi, 4
0x1558f:	mov	qword ptr [rsp + 0x20], r9
0x15594:	mov	qword ptr [rsp + 0x18], rdx
0x15599:	mov	qword ptr [rsp + 0x10], rsi
0x1559e:	mov	qword ptr [rsp + 8], r8
0x155a3:	call	0x1da0


0x12468:	cmp	eax, 1
0x1246b:	mov	byte ptr [rbp], r12b
0x1246f:	mov	byte ptr [rbp + 8], 1
0x12473:	jle	0x128c0


0x12945:	jmp	0x12468


0x12481:	mov	edi, r8d
0x12484:	mov	dword ptr [rsp], r8d
0x12488:	call	0x1d90


0x12909:	cmp	dword ptr [rcx + rdi + 4], -1
0x1290e:	je	0x129af


0x1218a:	cmp	rax, r12
0x1218d:	jge	0x12258


0x1220d:	mov	rax, qword ptr [r10 + 0x18]
0x12211:	mov	rax, qword ptr [rax + r11*8]
0x12215:	add	rax, qword ptr [r10]
0x12218:	add	rax, qword ptr [r10 + 0x28]
0x1221c:	movzx	r9d, byte ptr [rax]
0x12220:	test	r9b, 0x80
0x12224:	jne	0x12179


0x121fe:	mov	rax, qword ptr [r10 + 0x10]
0x12202:	cmp	dword ptr [rax + r11*4], -1
0x12207:	je	0x12179


0x121a2:	add	rax, 1
0x121a6:	mov	qword ptr [r10 + 0x48], rax
0x121aa:	mov	rax, qword ptr [rbx + 8]
0x121ae:	mov	byte ptr [rax + r14], 0
0x121b3:	movzx	eax, byte ptr [rbp + 8]
0x121b7:	cmp	al, 0x1c
0x121b9:	je	0x122bb


0x12166:	movzx	eax, byte ptr [rbp + 8]
0x1216a:	mov	r11, qword ptr [r10 + 0x48]
0x1216e:	mov	r12, qword ptr [r10 + 0x68]
0x12172:	cmp	al, 0x1e
0x12174:	movsxd	r14, r8d
0x12177:	je	0x121e0


0x11a63:	lea	rax, [rsp + 0x60]
0x11a68:	mov	qword ptr [rsp + 0x20], 0
0x11a71:	mov	qword ptr [rsp + 0x48], rbx
0x11a76:	mov	r15, r13
0x11a79:	mov	qword ptr [rsp + 0x38], rax
0x11a7e:	jmp	0x11aa2


0x10210:	cmp	qword ptr [rdi + 0x60], 0
0x10215:	je	0x11070


0xf483:	mov	rsi, rax
0xf486:	cmp	rsi, rcx
0xf489:	jg	0xf460


0xf630:	lea	rcx, [r8 + 1]
0xf634:	mov	rdi, rsi
0xf637:	jmp	0xf433


0xf433:	cmp	rcx, rdi
0xf436:	jge	0xf48b


0xf6a6:	lea	rax, [r13*8]
0xf6ae:	mov	r12, qword ptr [rsp + 0x70]
0xf6b3:	mov	rbp, qword ptr [rsp + 0x38]
0xf6b8:	mov	qword ptr [rsp + 0x50], rax
0xf6bd:	lea	rax, [r13 + r13*2]
0xf6c2:	lea	r8, [r12 + r12*4]
0xf6c6:	shl	rax, 3
0xf6ca:	mov	qword ptr [rsp + 0x58], rax
0xf6cf:	lea	r15, [r8*8]
0xf6d7:	jmp	0xf80d


0xf530:	cmp	qword ptr [rbx + 0x20], 0
0xf535:	mov	r11, qword ptr [rbx]
0xf538:	jle	0xfba2


0xf509:	add	qword ptr [rsp + 0x28], 1
0xf50f:	mov	rax, qword ptr [rsp + 0x28]
0xf514:	cmp	rax, qword ptr [r14 + 0xe8]
0xf51b:	jge	0xfb91


0xf686:	cmp	r13, qword ptr [rax]
0xf689:	jne	0xf678


0xe077:	movzx	ebx, byte ptr [rsi + rax]
0xe07b:	lea	edx, [rbx - 0x80]
0xe07e:	cmp	dl, 0x3f
0xe081:	jbe	0xe06a


0xe054:	movsxd	rdi, ebp
0xe057:	add	r8, rdi
0xe05a:	cmp	rcx, r8
0xe05d:	jl	0xdf70


0xe0a8:	cmp	dl, 0x87
0xe0ab:	jbe	0xdf70


0xe0b1:	mov	ebp, 5
0xe0b6:	jmp	0xe054


0xe0c0:	cmp	al, 0xfc
0xe0c2:	jne	0xe0cd


0xddf6:	mov	rax, qword ptr [rsp + 0x38]
0xddfb:	add	rax, 1
0xddff:	jmp	0xdb24


0xdabc:	lea	rcx, [rax + rdi + 0x10]
0xdac1:	mov	eax, dword ptr [rcx + 8]
0xdac4:	and	eax, 0x2000ff
0xdac9:	cmp	eax, 0x200001
0xdace:	jne	0xddf6


0xdd5a:	mov	rax, qword ptr [rsp + 8]
0xdd5f:	mov	rcx, qword ptr [rax]
0xdd62:	jmp	0xdcf5


0xdbcc:	mov	r15, r12
0xdbcf:	mov	r14, qword ptr [rsp + 0x40]
0xdbd4:	mov	r12, rbp
0xdbd7:	mov	rbp, r13
0xdbda:	mov	r13d, ebx
0xdbdd:	jmp	0xdbed


0xdba5:	test	byte ptr [r12 + 0x20], 1
0xdbab:	jne	0xdc9f


0xdc9f:	mov	r12, qword ptr [rsp + 0x40]
0xdca4:	mov	r13, qword ptr [rsp + 0x48]
0xdca9:	mov	byte ptr [rsp + 0x54], 0
0xdcae:	nop	
0xdcb0:	xor	edi, edi
0xdcb2:	mov	qword ptr [r12], 0
0xdcba:	mov	rcx, r12
0xdcbd:	mov	edx, 1
0xdcc2:	mov	rsi, r13
0xdcc5:	call	0x7b30


0xde6d:	jmp	0xddc4


0xdd64:	movdqa	xmm0, xmmword ptr [rip + 0xa114]
0xdd6c:	movups	xmmword ptr [rbp], xmm0
0xdd70:	movups	xmmword ptr [rbp + 0x10], xmm0
0xdd74:	movups	xmmword ptr [rbp + 0x20], xmm0
0xdd78:	movups	xmmword ptr [rbp + 0x30], xmm0
0xdd7c:	movups	xmmword ptr [rbp + 0x40], xmm0
0xdd80:	movups	xmmword ptr [rbp + 0x50], xmm0
0xdd84:	movups	xmmword ptr [rbp + 0x60], xmm0
0xdd88:	movups	xmmword ptr [rbp + 0x70], xmm0
0xdd8c:	movups	xmmword ptr [rbp + 0x80], xmm0
0xdd93:	movups	xmmword ptr [rbp + 0x90], xmm0
0xdd9a:	movups	xmmword ptr [rbp + 0xa0], xmm0
0xdda1:	movups	xmmword ptr [rbp + 0xb0], xmm0
0xdda8:	movups	xmmword ptr [rbp + 0xc0], xmm0
0xddaf:	movups	xmmword ptr [rbp + 0xd0], xmm0
0xddb6:	movups	xmmword ptr [rbp + 0xe0], xmm0
0xddbd:	movups	xmmword ptr [rbp + 0xf0], xmm0
0xddc4:	mov	rax, qword ptr [rsp + 0x30]
0xddc9:	or	byte ptr [rax + 0x38], 1
0xddcd:	mov	rax, qword ptr [rsp + 0x168]
0xddd5:	xor	rax, qword ptr fs:[0x28]
0xddde:	jne	0xde72


0xbd48:	mov	qword ptr [rbx + 0x30], rdx
0xbd4c:	mov	qword ptr [rbx + 0x38], rdx
0xbd50:	jmp	0xb8b3


0xbd20:	mov	r15, qword ptr [rbx + 0x28]
0xbd24:	mov	rcx, qword ptr [rbx + 0x78]
0xbd28:	mov	rsi, qword ptr [rbx]
0xbd2b:	add	rsi, rdx
0xbd2e:	movzx	esi, byte ptr [rsi + r15]
0xbd33:	movzx	esi, byte ptr [rcx + rsi]
0xbd37:	mov	rcx, qword ptr [rbx + 8]
0xbd3b:	mov	byte ptr [rcx + rdx], sil
0xbd3f:	add	rdx, 1
0xbd43:	cmp	rax, rdx
0xbd46:	jne	0xbd20


0xbb28:	movzx	eax, byte ptr [rbx + 0x8b]
0xbb2f:	jmp	0xbbfc


0xbd9c:	xor	edx, edx
0xbd9e:	cmp	byte ptr [rbx + 0x8d], 0
0xbda5:	setne	dl
0xbda8:	add	edx, edx
0xbdaa:	nop	word ptr [rax + rax]
0xbdb0:	mov	dword ptr [rbx + 0x70], edx
0xbdb3:	jmp	0xbb28


0xbc68:	sub	rsi, 1
0xbc6c:	cmp	rcx, rsi
0xbc6f:	ja	0xb981


0xbc80:	mov	rdx, qword ptr [rbx + 0x58]
0xbc84:	mov	rcx, qword ptr [rbx + 0x78]
0xbc88:	mov	r14, rsi
0xbc8b:	add	rdx, r12
0xbc8e:	sub	rdx, rsi
0xbc91:	test	rcx, rcx
0xbc94:	jne	0xbee2


0xba88:	lea	r12, [rax + 1]
0xba8c:	cmp	rdx, rbp
0xba8f:	cmovge	r12, rax
0xba93:	lea	r13, [r12 - 1]
0xba98:	mov	edx, r10d
0xba9b:	mov	rdi, rbx
0xba9e:	mov	qword ptr [rsp], r8
0xbaa2:	mov	rsi, r13
0xbaa5:	call	0xb4b0


0xa29c:	mov	rax, qword ptr [r13 + r9*8]
0xa2a1:	jmp	0xa25d


0x9c3f:	test	rdi, rdi
0x9c42:	jns	0x9c80


0x9c66:	sub	rdx, 1
0x9c6a:	sub	rbp, 1
0x9c6e:	mov	rdi, rdx
0x9c71:	mov	qword ptr [rcx + rbp*8], rsi
0x9c75:	not	rdi
0x9c78:	test	rdi, rdi
0x9c7b:	js	0x9c44


0x9d08:	sub	rax, 1
0x9d0c:	jmp	0x9c3f


0x9d40:	sub	rax, 1
0x9d44:	mov	qword ptr [r9], rcx
0x9d47:	jns	0x9cb8


0x9ccd:	sub	r8, 1
0x9cd1:	sub	rdx, 1
0x9cd5:	mov	qword ptr [r9], rsi
0x9cd8:	jne	0x9cb8


0x91c0:	call	0x8190


0x91a5:	test	rsi, rsi
0x91a8:	jle	0x9220


0x7e3c:	movzx	eax, word ptr [r13 + 0x22]
0x7e41:	test	qword ptr [rsp + 0x18], rax
0x7e46:	je	0x7ea0


0x7e48:	mov	rax, qword ptr [rbp + 0x28]
0x7e4c:	mov	rax, qword ptr [rax + rbx + 0x10]
0x7e51:	mov	rcx, qword ptr [rax]
0x7e54:	cmp	qword ptr [rsp + 0x10], rcx
0x7e59:	je	0x7f20


0x7eab:	mov	rbx, qword ptr [rsp + 0x38]
0x7eb0:	mov	r10, r12
0x7eb3:	mov	r12, qword ptr [rsp + 0x30]
0x7eb8:	mov	r14, rbp
0x7ebb:	add	rbx, 1
0x7ebf:	cmp	qword ptr [r12 + 8], rbx
0x7ec4:	jg	0x7db5


0x7e30:	cmp	qword ptr [r13], r14
0x7e34:	jne	0x7ea0


0x7c56:	mov	byte ptr [rdi + 8], 0x1a
0x7c5a:	mov	eax, 2
0x7c5f:	ret	


0x78d1:	cmp	esi, 1
0x78d4:	jne	0x7938


0x798b:	cmp	esi, 8
0x798e:	jne	0x7938


0x7930:	cmp	esi, 0x400
0x7936:	je	0x7990


0x7976:	jmp	0x78e0


0x7938:	mov	eax, dword ptr [rsp]
0x793b:	cmp	eax, 0x2f
0x793e:	ja	0x7a7a


0x1571d:	test	r14, r14
0x15720:	mov	r13, r14
0x15723:	jg	0x15588


0x1222a:	cmp	dword ptr [r10 + 0x90], 1
0x12232:	mov	eax, 1
0x12237:	je	0x12246


0x122bb:	mov	dword ptr [rbx], 2
0x122c1:	xor	eax, eax
0x122c3:	jmp	0x120d1


0x121bf:	cmp	al, 0x1e
0x121c1:	je	0x122ae


0x11aa2:	mov	rax, qword ptr [rsp + 0x10]
0x11aa7:	mov	rdi, qword ptr [rsp + 0x20]
0x11aac:	mov	rax, qword ptr [rax + 0x10]
0x11ab0:	mov	r14, qword ptr [rax + rdi*8]
0x11ab4:	mov	rax, r14
0x11ab7:	shl	rax, 4
0x11abb:	add	rax, qword ptr [r12]
0x11abf:	cmp	r14, qword ptr [r15 + 0x10]
0x11ac3:	movzx	eax, byte ptr [rax + 8]
0x11ac7:	jne	0x11a80


0x1021b:	cmp	qword ptr [rax + 0x10], 0
0x10220:	jne	0x10258


0xf80d:	mov	rax, qword ptr [r14 + 0xd8]
0xf814:	add	rax, r15
0xf817:	cmp	r13, qword ptr [rax]
0xf81a:	jne	0xf7f8


0xfba2:	mov	r12, qword ptr [rsp + 8]
0xfba7:	jmp	0xf872


0xf53e:	mov	rcx, qword ptr [rsp + 8]
0xf543:	mov	r8, r13
0xf546:	xor	ebp, ebp
0xf548:	mov	r13, rbx
0xf54b:	mov	rbx, rcx
0xf54e:	jmp	0xf5bc


0xf521:	mov	rax, qword ptr [rsp + 0x50]
0xf526:	mov	rdx, qword ptr [rax]
0xf529:	jmp	0xf4e6


0xfb91:	mov	r13, qword ptr [rsp + 0x30]
0xfb96:	mov	rax, qword ptr [r14 + 0xc8]
0xfb9d:	jmp	0xf690


0xf678:	add	rax, 0x28
0xf67c:	cmp	byte ptr [rax - 8], 0
0xf680:	je	0xf4b6


0xe06a:	add	rax, 1
0xe06e:	cmp	rdi, rax
0xe071:	jle	0xdf72


0xe083:	jmp	0xdf70


0xe0c4:	cmp	dl, 0x83
0xe0c7:	jbe	0xdf70


0xe0cd:	mov	ebp, 6
0xe0d2:	jmp	0xe054


0xdb24:	mov	rsi, qword ptr [rsp + 0x38]
0xdb29:	mov	rcx, qword ptr [rsp + 0x40]
0xdb2e:	mov	rdi, qword ptr [rsp + 0x48]
0xdb33:	sub	rax, rsi
0xdb36:	mov	qword ptr [rcx], 0
0xdb3d:	mov	r12, rax
0xdb40:	mov	rdx, rax
0xdb43:	call	0x7b30


0xdad4:	add	rdi, 0x20
0xdad8:	mov	r13, rdi
0xdadb:	mov	rdi, qword ptr [rsp + 0x38]
0xdae0:	lea	rax, [rdi + 1]
0xdae4:	jmp	0xdb0b


0xdcf5:	mov	rax, qword ptr [rsp + 0x10]
0xdcfa:	mov	rsi, qword ptr [rsp + 0x18]
0xdcff:	xor	r14d, r14d
0xdd02:	mov	rax, qword ptr [rcx + rax]
0xdd06:	mov	r15, qword ptr [rax + rsi]
0xdd0a:	nop	word ptr [rax + rax]
0xdd10:	bt	r15, r14
0xdd14:	jae	0xdd35


0xdbed:	mov	qword ptr [r14], 0
0xdbf4:	mov	rax, qword ptr [r15]
0xdbf7:	mov	rdx, r14
0xdbfa:	mov	rdi, qword ptr [rsp + 0x38]
0xdbff:	lea	rbx, [rbp*4]
0xdc07:	mov	esi, dword ptr [rax + rbp*4]
0xdc0a:	call	0x1db0


0xdbb1:	cmp	qword ptr [r12 + 0x40], 0
0xdbb7:	jne	0xdc9f


0xddc4:	mov	rax, qword ptr [rsp + 0x30]
0xddc9:	or	byte ptr [rax + 0x38], 1
0xddcd:	mov	rax, qword ptr [rsp + 0x168]
0xddd5:	xor	rax, qword ptr fs:[0x28]
0xddde:	jne	0xde72


0xbbfc:	test	al, al
0xbbfe:	je	0xb87a


0xbc9a:	lea	r13, [rsp + 0x24]
0xbc9f:	add	r12, rbp
0xbca2:	lea	rcx, [rsp + 0x28]
0xbca7:	sub	r12, r14
0xbcaa:	mov	dword ptr [rsp + 0xc], r10d
0xbcaf:	mov	qword ptr [rsp], r8
0xbcb3:	mov	rdi, r13
0xbcb6:	mov	qword ptr [rsp + 0x28], 0
0xbcbf:	call	0x7b30


0xbee2:	cmp	rdx, 6
0xbee6:	mov	edi, 6
0xbeeb:	lea	r11, [rsp + 0x32]
0xbef0:	cmovle	rdi, rdx
0xbef4:	sub	edi, 1
0xbef7:	test	edi, edi
0xbef9:	movsxd	rax, edi
0xbefc:	js	0xbf12


0xa320:	sub	rax, 1
0xa324:	mov	qword ptr [r10], rcx
0xa327:	cmp	rax, -1
0xa32b:	jne	0xa2f0


0xa305:	sub	r9, 1
0xa309:	sub	rdx, 1
0xa30d:	mov	qword ptr [r10], r8
0xa310:	jne	0xa2f0


0x9d4d:	lea	rsi, [rdi + rbp*8]
0x9d51:	shl	rdx, 3
0x9d55:	call	0x1d70


0x9cb8:	mov	rsi, qword ptr [rdi + r8*8]
0x9cbc:	mov	rcx, qword ptr [rdi + rax*8]
0x9cc0:	lea	r9, [rax + rdx]
0x9cc4:	lea	r9, [rdi + r9*8]
0x9cc8:	cmp	rsi, rcx
0x9ccb:	jle	0x9d40


0x7f20:	mov	r15d, dword ptr [rsp + 0x20]
0x7f25:	add	rsp, 0x48
0x7f29:	pop	rbx
0x7f2a:	pop	rbp
0x7f2b:	mov	eax, r15d
0x7f2e:	and	eax, 1
0x7f31:	pop	r12
0x7f33:	neg	eax
0x7f35:	pop	r13
0x7f37:	pop	r14
0x7f39:	pop	r15
0x7f3b:	ret	


0x7e5f:	mov	esi, dword ptr [rsp + 0x20]
0x7e63:	mov	rdi, qword ptr [rsp]
0x7e67:	mov	r8, r12
0x7e6a:	mov	rdx, r15
0x7e6d:	call	0x7d10


0x7944:	add	rax, qword ptr [rsp + 0x10]
0x7949:	mov	rdx, qword ptr [rax]
0x794c:	mov	edi, ebp
0x794e:	xor	eax, eax
0x7950:	call	0x1b90


0x7a7a:	mov	rax, qword ptr [rsp + 8]
0x7a7f:	jmp	0x7949


0x15588:	mov	rdi, r14
0x1558b:	shl	rdi, 4
0x1558f:	mov	qword ptr [rsp + 0x20], r9
0x15594:	mov	qword ptr [rsp + 0x18], rdx
0x15599:	mov	qword ptr [rsp + 0x10], rsi
0x1559e:	mov	qword ptr [rsp + 8], r8
0x155a3:	call	0x1da0


0x12246:	add	rax, r11
0x12249:	mov	qword ptr [r10 + 0x48], rax
0x1224d:	jmp	0x1218a


0x12239:	mov	rsi, r11
0x1223c:	mov	rdi, r10
0x1223f:	call	0x9620


0x122ae:	mov	dword ptr [rbx], 4
0x122b4:	xor	eax, eax
0x122b6:	jmp	0x120d1


0x121c7:	cmp	al, 0x1a
0x121c9:	je	0x122a1


0x11ac9:	cmp	rbp, qword ptr [r15 + 0x18]
0x11acd:	jne	0x11a80


0x11a80:	cmp	al, 4
0x11a82:	je	0x11e08


0x10222:	cmp	qword ptr [rdx + 0x10], 0
0x10227:	jne	0x10258


0x10258:	cmp	qword ptr [rsp + 0x270], 0
0x10261:	mov	dword ptr [rsp + 0x58], 1
0x10269:	je	0x105f0


0xf81c:	mov	rdi, qword ptr [rsp + 8]
0xf821:	cmp	rdi, qword ptr [rax + 8]
0xf825:	jne	0xf7f8


0xf7f8:	add	r12, 1
0xf7fc:	add	r15, 0x28
0xf800:	cmp	r12, qword ptr [r14 + 0xc8]
0xf807:	jge	0xf380


0xf872:	cmp	qword ptr [rsp + 8], r11
0xf877:	jl	0xf509


0xf5bc:	mov	rax, qword ptr [r13 + 0x28]
0xf5c0:	mov	r9, qword ptr [rax + rbp*8]
0xf5c4:	mov	r15, qword ptr [r9 + 8]
0xf5c8:	mov	rdx, r15
0xf5cb:	sub	rdx, r11
0xf5ce:	test	rdx, rdx
0xf5d1:	lea	r12, [rdx + rbx]
0xf5d5:	jle	0xf583


0xf4e6:	mov	rax, qword ptr [r14 + 0xf8]
0xf4ed:	mov	rbx, qword ptr [rsp + 0x28]
0xf4f2:	mov	rdi, qword ptr [rsp + 0x58]
0xf4f7:	mov	rbx, qword ptr [rax + rbx*8]
0xf4fb:	mov	rax, qword ptr [rbx + 8]
0xf4ff:	shl	rax, 4
0xf503:	cmp	rdi, qword ptr [rdx + rax]
0xf507:	je	0xf530


0xf690:	cmp	qword ptr [rsp + 0x70], rax
0xf695:	mov	dword ptr [rsp + 0x8c], 0
0xf6a0:	jge	0xf380


0xdb0b:	movzx	edx, byte ptr [rcx]
0xdb0e:	add	rax, 1
0xdb12:	mov	byte ptr [rax - 1], dl
0xdb15:	mov	rdx, rax
0xdb18:	sub	rdx, rdi
0xdb1b:	add	rdx, r12
0xdb1e:	cmp	qword ptr [rsi + 0x10], rdx
0xdb22:	ja	0xdaf0


0x1db0:	jmp	qword ptr [rip + 0x21a142]


0xb87a:	add	qword ptr [rbx + 8], rbp
0xb87e:	mov	rax, qword ptr [rbx + 0x58]
0xb882:	sub	qword ptr [rbx + 0x68], rbp
0xb886:	mov	qword ptr [rbx + 0x28], r15
0xb88a:	sub	rax, rbp
0xb88d:	cmp	dword ptr [rbx + 0x90], 1
0xb894:	mov	qword ptr [rbx + 0x58], rax
0xb898:	jle	0xb938


0xbc04:	jmp	0xb87e


0xbf12:	mov	rsi, r11
0xbf15:	jmp	0xbc9a


0xbefe:	movzx	edi, byte ptr [rsi + rax]
0xbf02:	movzx	edi, byte ptr [rcx + rdi]
0xbf06:	mov	byte ptr [r11 + rax], dil
0xbf0a:	sub	rax, 1
0xbf0e:	test	eax, eax
0xbf10:	jns	0xbefe


0xa2f0:	mov	r8, qword ptr [rdi + r9*8]
0xa2f4:	mov	rcx, qword ptr [rdi + rax*8]
0xa2f8:	lea	r10, [rax + rdx]
0xa2fc:	lea	r10, [rdi + r10*8]
0xa300:	cmp	r8, rcx
0xa303:	jle	0xa320


0xa312:	xor	edx, edx
0xa314:	jmp	0xa331


0x7949:	mov	rdx, qword ptr [rax]
0x794c:	mov	edi, ebp
0x794e:	xor	eax, eax
0x7950:	call	0x1b90


0x122a1:	mov	dword ptr [rbx], 3
0x122a7:	xor	eax, eax
0x122a9:	jmp	0x120d1


0x121cf:	xor	eax, eax
0x121d1:	jmp	0x120d1


0x11acf:	jmp	0x11a88


0x11e08:	mov	rax, qword ptr [rsp + 8]
0x11e0d:	mov	r13, qword ptr [rsp + 0x40]
0x11e12:	mov	rbx, qword ptr [rsp + 0x48]
0x11e17:	add	r13, qword ptr [rax + 0xd8]
0x11e1e:	lea	rax, [r14 + r14*2]
0x11e22:	shl	rax, 3
0x11e26:	mov	qword ptr [rsp + 0x30], rax
0x11e2b:	lea	rax, [r14*8]
0x11e33:	mov	qword ptr [rsp + 0x28], rax
0x11e38:	mov	rax, r15
0x11e3b:	mov	r15, r13
0x11e3e:	mov	r13, rbx
0x11e41:	mov	rbx, rax
0x11e44:	jmp	0x11fae


0x11a88:	mov	rcx, qword ptr [rsp + 0x10]
0x11a8d:	add	qword ptr [rsp + 0x20], 1
0x11a93:	mov	rax, qword ptr [rsp + 0x20]
0x11a98:	cmp	rax, qword ptr [rcx + 8]
0x11a9c:	jge	0x1205b


0x10229:	cmp	qword ptr [rcx + 0x10], 0
0x1022e:	je	0x10236


0x105f0:	mov	rax, qword ptr [rsp + 0x38]
0x105f5:	cmp	qword ptr [rax + 0x98], 0
0x105fd:	setne	al
0x10600:	movzx	eax, al
0x10603:	mov	dword ptr [rsp + 0x58], eax
0x10607:	jmp	0x1026f


0x1026f:	mov	r11, qword ptr [rsp + 0x38]
0x10274:	mov	rax, qword ptr [rsp + 0x48]
0x10279:	mov	rdi, qword ptr [rsp + 0x88]
0x10281:	mov	rsi, qword ptr [r11 + 0x10]
0x10285:	mov	rbx, qword ptr [rax + 0x28]
0x10289:	mov	edx, dword ptr [r11 + 0xb4]
0x10290:	mov	rax, qword ptr [rax + 0x18]
0x10294:	mov	qword ptr [rsp + 0x178], rdi
0x1029c:	mov	qword ptr [rsp + 0x170], rdi
0x102a4:	mov	qword ptr [rsp + 8], rsi
0x102a9:	lea	rsi, [rsi + 1]
0x102ad:	mov	qword ptr [rsp + 0xb0], rbx
0x102b5:	movsxd	rcx, edx
0x102b8:	shr	rax, 0x16
0x102bc:	mov	qword ptr [rsp + 0x198], rbx
0x102c4:	and	eax, 1
0x102c7:	cmp	rsi, rcx
0x102ca:	mov	dword ptr [rsp + 0x1b0], edx
0x102d1:	cmovl	rsi, rcx
0x102d5:	lea	rcx, [rdi + 1]
0x102d9:	mov	byte ptr [rsp + 0x1a8], al
0x102e0:	mov	qword ptr [rsp + 0x188], rdi
0x102e8:	mov	qword ptr [rsp + 0x180], rdi
0x102f0:	cmp	rsi, rcx
0x102f3:	mov	rdi, qword ptr [rsp]
0x102f7:	cmovg	rsi, rcx
0x102fb:	test	rbx, rbx
0x102fe:	mov	rcx, qword ptr [rsp + 0x78]
0x10303:	setne	bl
0x10306:	or	eax, ebx
0x10308:	mov	byte ptr [rsp + 0x1ab], al
0x1030f:	movzx	eax, byte ptr [r11 + 0xb0]
0x10317:	mov	qword ptr [rsp + 0x120], rcx
0x1031f:	mov	edx, eax
0x10321:	shr	al, 3
0x10324:	shr	dl, 2
0x10327:	and	eax, 1
0x1032a:	and	edx, 1
0x1032d:	mov	byte ptr [rsp + 0x1aa], al
0x10334:	mov	byte ptr [rsp + 0x1a9], dl
0x1033b:	call	0x8080


0xf827:	mov	rbx, qword ptr [rax + 0x18]
0xf82b:	mov	rax, qword ptr [rax + 0x10]
0xf82f:	mov	rdx, qword ptr [rbp + 0x30]
0xf833:	mov	rcx, rbx
0xf836:	sub	rcx, rax
0xf839:	mov	qword ptr [rsp + 0x20], rcx
0xf83e:	je	0xf6e0


0xf87d:	mov	rax, r12
0xf880:	lea	r15, [r11*8]
0xf888:	mov	r12, rbx
0xf88b:	mov	rbx, r11
0xf88e:	mov	r11, r13
0xf891:	mov	r13, rax
0xf894:	nop	dword ptr [rax]
0xf898:	mov	rax, rbx
0xf89b:	sub	rax, qword ptr [r12]
0xf89f:	test	rax, rax
0xf8a2:	jle	0xf8c5


0xf583:	mov	r8, qword ptr [rsp + 8]
0xf588:	mov	rcx, qword ptr [rsp + 0x30]
0xf58d:	mov	rdx, r9
0xf590:	mov	rsi, r13
0xf593:	mov	rdi, r14
0xf596:	call	0xf130


0xf5d7:	cmp	qword ptr [r14 + 0x30], r12
0xf5db:	jge	0xf550


0xdaf0:	mov	rcx, qword ptr [rsi]
0xdaf3:	add	rcx, r13
0xdaf6:	add	r13, 0x10
0xdafa:	mov	edx, dword ptr [rcx + 8]
0xdafd:	and	edx, 0x2000ff
0xdb03:	cmp	edx, 0x200001
0xdb09:	jne	0xdb24




0xa331:	lea	rsi, [rdi + rsi*8]
0xa335:	call	0x1d70


0x11fae:	cmp	r14, qword ptr [r15]
0x11fb1:	je	0x11e50


0x1205b:	cmp	qword ptr [rsp + 0x60], 0
0x12061:	je	0x11b00


0x10236:	test	rbp, rbp
0x10239:	je	0x1024c


0x10230:	cmp	byte ptr [rsi + 0x38], 0
0x10234:	js	0x10258


0xf6e0:	mov	rcx, qword ptr [rbp + 0x28]
0xf6e4:	mov	rdi, qword ptr [rsp + 0x58]
0xf6e9:	mov	rcx, qword ptr [rcx + rdi + 0x10]
0xf6ee:	mov	rcx, qword ptr [rcx]
0xf6f1:	lea	rcx, [rcx + rcx*2]
0xf6f5:	lea	rcx, [rdx + rcx*8]
0xf6f9:	mov	qword ptr [rsp + 0x18], rcx
0xf6fe:	add	rbx, qword ptr [rsp + 8]
0xf703:	mov	edx, dword ptr [r14 + 0xa0]
0xf70a:	mov	rdi, r14
0xf70d:	sub	rbx, rax
0xf710:	lea	rsi, [rbx - 1]
0xf714:	call	0xb4b0


0xf844:	mov	rcx, qword ptr [rbp + 0x18]
0xf848:	mov	rdi, qword ptr [rsp + 0x50]
0xf84d:	mov	rcx, qword ptr [rcx + rdi]
0xf851:	lea	rcx, [rcx + rcx*2]
0xf855:	lea	rcx, [rdx + rcx*8]
0xf859:	mov	qword ptr [rsp + 0x18], rcx
0xf85e:	jmp	0xf6fe


0xf8c5:	mov	rax, qword ptr [r14 + 0xb8]
0xf8cc:	mov	rax, qword ptr [rax + r15]
0xf8d0:	test	rax, rax
0xf8d3:	je	0xf9df


0xf8a4:	cmp	qword ptr [r14 + 0x30], r13
0xf8a8:	jle	0xfb31


0xf5e1:	cmp	qword ptr [r14 + 0x58], r12
0xf5e5:	mov	qword ptr [rsp + 0x18], rdx
0xf5ea:	mov	qword ptr [rsp + 0x10], r9
0xf5ef:	jl	0xfa48


0xf550:	lea	rsi, [r8 + r11]
0xf554:	lea	rdi, [r8 + rbx]
0xf558:	mov	qword ptr [rsp + 0x20], r9
0xf55d:	mov	qword ptr [rsp + 0x18], r11
0xf562:	mov	qword ptr [rsp + 0x10], r8
0xf567:	call	0x1d00


0x11e50:	mov	rax, qword ptr [r15 + 0x18]
0x11e54:	sub	rax, qword ptr [r15 + 0x10]
0x11e58:	test	rax, rax
0x11e5b:	lea	r9, [rbp + rax]
0x11e60:	je	0x11fc0


0x11fb7:	mov	rax, r15
0x11fba:	jmp	0x11fa0


0x12067:	xor	eax, eax
0x12069:	jmp	0x1203a


0x1024c:	xor	r12d, r12d
0x1024f:	xor	ebp, ebp
0x10251:	nop	dword ptr [rax]
0x10258:	cmp	qword ptr [rsp + 0x270], 0
0x10261:	mov	dword ptr [rsp + 0x58], 1
0x10269:	je	0x105f0


0x1023b:	test	r12, r12
0x1023e:	mov	dword ptr [rsp + 0x5c], 1
0x10246:	jne	0x10c69


0xf6fe:	add	rbx, qword ptr [rsp + 8]
0xf703:	mov	edx, dword ptr [r14 + 0xa0]
0xf70a:	mov	rdi, r14
0xf70d:	sub	rbx, rax
0xf710:	lea	rsi, [rbx - 1]
0xf714:	call	0xb4b0


0xf9df:	add	rbx, 1
0xf9e3:	add	r15, 8
0xf9e7:	cmp	qword ptr [rsp + 8], rbx
0xf9ec:	jge	0xf898


0xf8d9:	mov	rcx, qword ptr [rax + 0x10]
0xf8dd:	test	rcx, rcx
0xf8e0:	jle	0xf9df


0xfb31:	cmp	qword ptr [r14 + 0x58], r13
0xfb35:	jle	0xf9f2


0xf8ae:	movzx	ecx, byte ptr [r11 + rbx - 1]
0xf8b4:	lea	rax, [r13 + 1]
0xf8b8:	cmp	byte ptr [r11 + r13], cl
0xf8bc:	jne	0xf9f2


0xfa48:	mov	rcx, rbx
0xfa4b:	mov	rbx, r13
0xfa4e:	mov	r13, r8
0xfa51:	cmp	qword ptr [rbx + 0x20], rbp
0xfa55:	jg	0xf509


0xf5f5:	mov	rsi, r12
0xf5f8:	mov	rdi, r14
0xf5fb:	mov	qword ptr [rsp + 0x20], r11
0xf600:	call	0x8d60


0x1d00:	jmp	qword ptr [rip + 0x21a19a]


0x11fc0:	mov	rax, qword ptr [r12 + 0x28]
0x11fc5:	mov	rdi, qword ptr [rsp + 0x30]
0x11fca:	mov	rax, qword ptr [rax + rdi + 0x10]
0x11fcf:	mov	r10, qword ptr [rax]
0x11fd2:	jmp	0x11e74


0x11e66:	mov	rax, qword ptr [r12 + 0x18]
0x11e6b:	mov	rsi, qword ptr [rsp + 0x28]
0x11e70:	mov	r10, qword ptr [rax + rsi]
0x11e74:	cmp	r9, qword ptr [rbx + 0x18]
0x11e78:	jg	0x11fb7


0x11fa0:	add	r13, 1
0x11fa4:	cmp	byte ptr [rax + 0x20], 0
0x11fa8:	lea	r15, [rax + 0x28]
0x11fac:	je	0x11fe0


0x1203a:	mov	rdi, qword ptr [rsp + 0x90]
0x12042:	mov	dword ptr [rsp + 8], eax
0x12046:	call	0x1b00


0xf9f2:	mov	r13, r11
0xf9f5:	jmp	0xf509


0xf898:	mov	rax, rbx
0xf89b:	sub	rax, qword ptr [r12]
0xf89f:	test	rax, rax
0xf8a2:	jle	0xf8c5


0xf8e6:	mov	rdi, qword ptr [rax + 0x18]
0xf8ea:	mov	rax, qword ptr [rsp + 0x50]
0xf8ef:	xor	edx, edx
0xf8f1:	mov	r8, qword ptr [rsp + 0x58]
0xf8f6:	mov	rsi, qword ptr [rax]
0xf8f9:	jmp	0xf90d


0xfb3b:	lea	esi, [r13 + 1]
0xfb3f:	mov	rdi, r14
0xfb42:	call	0x8c10


0xf8c2:	mov	r13, rax
0xf8c5:	mov	rax, qword ptr [r14 + 0xb8]
0xf8cc:	mov	rax, qword ptr [rax + r15]
0xf8d0:	test	rax, rax
0xf8d3:	je	0xf9df


0xfa5b:	test	rbp, rbp
0xfa5e:	mov	r12, rcx
0xfa61:	je	0xf872




0x11e74:	cmp	r9, qword ptr [rbx + 0x18]
0x11e78:	jg	0x11fb7


0x11e7e:	mov	rax, qword ptr [rbx]
0x11e81:	mov	rax, qword ptr [rax + r9*8]
0x11e85:	test	rax, rax
0x11e88:	je	0x11fb7


0x11fe0:	mov	r15, rbx
0x11fe3:	jmp	0x11a88


0xf90d:	mov	rbp, qword ptr [rdi + rdx*8]
0xf911:	mov	rax, rbp
0xf914:	shl	rax, 4
0xf918:	add	rax, rsi
0xf91b:	cmp	byte ptr [rax + 8], 9
0xf91f:	jne	0xf900


0xfa67:	mov	r15, r11
0xfa6a:	jmp	0xf86e


0x11e8e:	mov	rdi, qword ptr [rax + 0x10]
0x11e92:	lea	rsi, [rax + 0x18]
0x11e96:	mov	rdx, r10
0x11e99:	call	0x96d0


0xf921:	cmp	r8, qword ptr [rax]
0xf924:	jne	0xf900


0xf900:	add	rdx, 1
0xf904:	cmp	rcx, rdx
0xf907:	je	0xf9df


0xf86e:	lea	r11, [r15 + 1]
0xf872:	cmp	qword ptr [rsp + 8], r11
0xf877:	jl	0xf509


0xf926:	cmp	rbp, -1
0xf92a:	je	0xf9df


0xf930:	mov	rsi, qword ptr [r12 + 0x10]
0xf935:	mov	rcx, qword ptr [r12]
0xf939:	test	rsi, rsi
0xf93c:	je	0xfa00


0xfa00:	mov	rsi, rbx
0xfa03:	mov	edi, 0x18
0xfa08:	mov	qword ptr [rsp + 0x18], r11
0xfa0d:	sub	rsi, rcx
0xfa10:	mov	qword ptr [rsp + 0x10], rcx
0xfa15:	add	rsi, 1
0xfa19:	call	0x1d30


0xf942:	mov	qword ptr [rsp + 0x10], r11
0xf947:	mov	rdx, qword ptr [r12 + 8]
0xf94c:	sub	rsp, 8
0xf950:	push	9
0xf952:	mov	r9, rbx
0xf955:	mov	r8, rbp
0xf958:	mov	rdi, r14
0xf95b:	call	0xe0e0


0xf605:	test	eax, eax
0xf607:	jne	0xf648


0xf609:	mov	r8, qword ptr [r14 + 8]
0xf60d:	mov	rdx, qword ptr [rsp + 0x18]
0xf612:	mov	r9, qword ptr [rsp + 0x10]
0xf617:	mov	r11, qword ptr [rsp + 0x20]
0xf61c:	jmp	0xf550


0xf648:	mov	rbx, qword ptr [rsp + 0xa8]
0xf650:	xor	rbx, qword ptr fs:[0x28]
0xf659:	jne	0xfbac


0x7e72:	cmp	eax, -1
0x7e75:	je	0x7dde


0x7e7b:	test	eax, eax
0x7e7d:	jne	0x7e87


0x7e7f:	mov	esi, dword ptr [rsp + 8]
0x7e83:	test	esi, esi
0x7e85:	jne	0x7f05


0x7e87:	cmp	r15, 0x3f
0x7e8b:	jg	0x7ea0


0x7e8d:	movzx	eax, word ptr [rsp + 0x26]
0x7e92:	and	word ptr [r13 + 0x22], ax
0x7e97:	nop	word ptr [rax + rax]
0x7ea0:	add	r13, 0x28
0x7ea4:	cmp	byte ptr [r13 - 8], 0
0x7ea9:	jne	0x7e30


0x91c5:	test	al, al
0x91c7:	je	0x920b


0x920b:	mov	eax, 0xc
0x9210:	add	rsp, 0x18
0x9214:	pop	rbx
0x9215:	pop	rbp
0x9216:	pop	r12
0x9218:	pop	r13
0x921a:	pop	r14
0x921c:	pop	r15
0x921e:	ret	


0x91c9:	mov	rax, qword ptr [r14 + 0x28]
0x91cd:	mov	edx, ebp
0x91cf:	mov	rdi, r14
0x91d2:	mov	rax, qword ptr [rax + r12 + 0x10]
0x91d7:	mov	r9, qword ptr [rax + 8]
0x91db:	mov	rsi, r9
0x91de:	mov	qword ptr [rsp], r9
0x91e2:	call	0x9040


0x9344:	mov	edx, eax
0x9346:	xor	eax, eax
0x9348:	test	dl, dl
0x934a:	jne	0x9210


0x9350:	jmp	0x920b


0x9b33:	mov	ebx, eax
0x9b35:	mov	rax, qword ptr [rbp]
0x9b39:	mov	r9, qword ptr [rsp + 0x30]
0x9b3e:	mov	rcx, qword ptr [rsp + 0x20]
0x9b43:	mov	r8, r15
0x9b46:	mov	rdx, r12
0x9b49:	mov	rdi, r13
0x9b4c:	mov	rsi, qword ptr [rax + r14*8]
0x9b50:	call	0x7f40


0x9b55:	cmp	ebx, eax
0x9b57:	je	0x9bd0


0x9bd0:	mov	rax, qword ptr [rsp + 0x38]
0x9bd5:	add	r14, 1
0x9bd9:	cmp	r14, qword ptr [rax]
0x9bdc:	jl	0x9af0


0x9b59:	mov	eax, 1
0x9b5e:	add	rsp, 0x48
0x9b62:	pop	rbx
0x9b63:	pop	rbp
0x9b64:	pop	r12
0x9b66:	pop	r13
0x9b68:	pop	r14
0x9b6a:	pop	r15
0x9b6c:	ret	


0x9af0:	mov	rax, qword ptr [rbp]
0x9af4:	mov	rdx, qword ptr [r13 + 0xd8]
0x9afb:	mov	rdi, r13
0x9afe:	mov	r9, qword ptr [rsp + 0x28]
0x9b03:	mov	r8, qword ptr [rsp + 0x18]
0x9b08:	mov	rcx, qword ptr [rsp + 0x10]
0x9b0d:	mov	rsi, qword ptr [rax + r14*8]
0x9b11:	lea	rax, [rsi + rsi*4]
0x9b15:	lea	rax, [rdx + rax*8]
0x9b19:	mov	rdx, qword ptr [rsp + 8]
0x9b1e:	mov	rax, qword ptr [rax]
0x9b21:	shl	rax, 4
0x9b25:	add	rax, qword ptr [rdx]
0x9b28:	mov	r12, qword ptr [rax]
0x9b2b:	mov	rdx, r12
0x9b2e:	call	0x7f40


0xbdf8:	jmp	0xb8b3


0x12270:	cmp	byte ptr [rsp + 8], 0x15
0x12275:	mov	eax, 0xb
0x1227a:	je	0x1211e


0x12280:	jmp	0x120d1


0xaac8:	test	al, al
0xaaca:	je	0xaa98


0xad65:	test	al, al
0xad67:	jne	0xae6f


0xb8af:	test	eax, eax
0xb8b1:	jne	0xb8bd


0xb8bd:	mov	rcx, qword ptr [rsp + 0x38]
0xb8c2:	xor	rcx, qword ptr fs:[0x28]
0xb8cb:	jne	0xbf1a


0xb92d:	jmp	0xb8b3


0xaf45:	test	eax, eax
0xaf47:	mov	dword ptr [rsp + 0x1c], eax
0xaf4b:	jne	0xaf98


0xaf4d:	mov	rdi, qword ptr [rsp + 8]
0xaf52:	mov	rdx, r13
0xaf55:	mov	rsi, r14
0xaf58:	call	0xace0


0xaf98:	mov	rcx, qword ptr [rsp + 0x38]
0xaf9d:	xor	rcx, qword ptr fs:[0x28]
0xafa6:	jne	0xafb7


0xfc81:	test	eax, eax
0xfc83:	mov	dword ptr [r13], eax
0xfc87:	jne	0xfda0


0xfc8d:	mov	rax, qword ptr [rbx + 0x48]
0xfc91:	mov	edx, dword ptr [rbx + 0xa0]
0xfc97:	mov	rdi, rbx
0xfc9a:	lea	rsi, [rax - 1]
0xfc9e:	call	0xb4b0


0xfd66:	test	eax, eax
0xfd68:	mov	dword ptr [r13], eax
0xfd6c:	jne	0xfda0


0xfd6e:	test	byte ptr [rbp + 0x68], 0x40
0xfd72:	je	0xfc25


0xfd78:	mov	rdx, r15
0xfd7b:	mov	rsi, r14
0xfd7e:	mov	rdi, rbx
0xfd81:	call	0xf2d0


0xfd86:	test	eax, eax
0xfd88:	mov	dword ptr [r13], eax
0xfd8c:	jne	0xfda0


0xfd8e:	mov	rax, qword ptr [rbx + 0xb8]
0xfd95:	mov	rbp, qword ptr [rax + r12*8]
0xfd99:	jmp	0xfc25


0x15cbd:	add	rsp, 0x20
0x15cc1:	test	eax, eax
0x15cc3:	setne	al
0x15cc6:	add	rsp, 0x18
0x15cca:	pop	rbx
0x15ccb:	movzx	eax, al
0x15cce:	pop	rbp
0x15ccf:	pop	r12
0x15cd1:	pop	r13
0x15cd3:	ret	


0x3078:	mov	byte ptr [rip + 0x219069], 1
0x307f:	pop	rbp
0x3080:	ret	


0xfb47:	test	eax, eax
0xfb49:	jne	0xf648


0xfb4f:	mov	r11, qword ptr [r14 + 8]
0xfb53:	jmp	0xf8ae


0x8dba:	test	eax, eax
0x8dbc:	je	0x8d8f


0x8dbe:	jmp	0x8d96


0x8d96:	pop	rbx
0x8d97:	pop	rbp
0x8d98:	pop	r12
0x8d9a:	ret	


0x8d8b:	test	eax, eax
0x8d8d:	jne	0x8d96


0xa7fd:	test	rax, rax
0xa800:	mov	qword ptr [rbx + 0x10], rax
0xa804:	je	0xa7d2


0xa806:	mov	qword ptr [rax], rbx
0xa809:	jmp	0xa7d2


0xa81d:	test	rax, rax
0xa820:	mov	qword ptr [rbx + 8], rax
0xa824:	je	0xa7c3


0xa826:	mov	qword ptr [rax], rbx
0xa829:	jmp	0xa7c3


0xaf5d:	mov	rdi, qword ptr [rsp + 0x30]
0xaf62:	mov	qword ptr [rbx + r15*8], rax
0xaf66:	call	0x1b00


0x11958:	mov	qword ptr [r14], rax
0x1195b:	mov	eax, dword ptr [rsp + 0x5c]
0x1195f:	test	eax, eax
0x11961:	jne	0x118b8


0x11967:	cmp	qword ptr [rsp + 0x10], 0
0x1196d:	je	0x118b8


0x11973:	mov	rax, qword ptr [rsp + 8]
0x11978:	mov	rax, qword ptr [rax + 0xb8]
0x1197f:	mov	rdx, qword ptr [rax + rbp*8]
0x11983:	xor	eax, eax
0x11985:	test	byte ptr [rdx + 0x68], 0x40
0x11989:	je	0x118b8


0x11900:	mov	rdx, rax
0x11903:	mov	eax, dword ptr [rsp + 0x60]
0x11907:	test	eax, eax
0x11909:	jne	0x118b8


0x1190b:	mov	r15, qword ptr [rdx + 0x38]
0x1190f:	lea	r14, [rdx + 0x38]
0x11913:	test	r15, r15
0x11916:	je	0x11b20


0x11b20:	mov	rdi, qword ptr [rbx + 8]
0x11b24:	mov	qword ptr [rdx + 0x40], 0
0x11b2c:	mov	qword ptr [rsp + 0x20], rdx
0x11b31:	mov	qword ptr [rdx + 0x38], rdi
0x11b35:	shl	rdi, 3
0x11b39:	call	0x1da0


0x1191c:	mov	rsi, qword ptr [rsp + 0x10]
0x11921:	mov	rdx, r14
0x11924:	mov	rdi, rbx
0x11927:	call	0xa1e0


0x1192c:	test	eax, eax
0x1192e:	mov	dword ptr [rsp + 0x5c], eax
0x11932:	jne	0x118b8


0x11934:	cmp	qword ptr [r13 + 0x28], 0
0x11939:	jne	0x11bb0


0x1193f:	mov	r14, qword ptr [rsp + 0x18]
0x11944:	add	r14, qword ptr [r13]
0x11948:	lea	rdi, [rsp + 0x5c]
0x1194d:	mov	rdx, rbx
0x11950:	mov	rsi, r12
0x11953:	call	0xace0


0x11bb0:	mov	rax, qword ptr [rsp + 8]
0x11bb5:	mov	rax, qword ptr [rax + 0xd8]
0x11bbc:	mov	qword ptr [rsp + 0x20], rax
0x11bc1:	jle	0x11c9b


0x11c9b:	mov	dword ptr [rsp + 0x5c], 0
0x11ca3:	jmp	0x1193f


0x11bc7:	xor	r15d, r15d
0x11bca:	nop	word ptr [rax + rax]
0x11bd0:	mov	rax, qword ptr [r13 + 0x30]
0x11bd4:	mov	rdi, qword ptr [rsp + 0x20]
0x11bd9:	mov	rax, qword ptr [rax + r15*8]
0x11bdd:	lea	rax, [rax + rax*4]
0x11be1:	lea	rdx, [rdi + rax*8]
0x11be5:	cmp	rbp, qword ptr [rdx + 0x10]
0x11be9:	jle	0x11c8d


0x11c8d:	add	r15, 1
0x11c91:	cmp	r15, qword ptr [r13 + 0x28]
0x11c95:	jl	0x11bd0


0x11bef:	cmp	rbp, qword ptr [rdx + 8]
0x11bf3:	jg	0x11c8d


0x11bd0:	mov	rax, qword ptr [r13 + 0x30]
0x11bd4:	mov	rdi, qword ptr [rsp + 0x20]
0x11bd9:	mov	rax, qword ptr [rax + r15*8]
0x11bdd:	lea	rax, [rax + rax*4]
0x11be1:	lea	rdx, [rdi + rax*8]
0x11be5:	cmp	rbp, qword ptr [rdx + 0x10]
0x11be9:	jle	0x11c8d


0x11bf9:	mov	rcx, qword ptr [rdx]
0x11bfc:	mov	rax, qword ptr [r12]
0x11c00:	mov	rsi, qword ptr [rbx + 8]
0x11c04:	shl	rcx, 4
0x11c08:	cmp	rbp, qword ptr [rdx + 0x18]
0x11c0c:	mov	r8, qword ptr [rax + rcx]
0x11c10:	je	0x11cb0


0x11cb0:	test	rsi, rsi
0x11cb3:	jle	0x11c8d


0x11c16:	xor	r14d, r14d
0x11c19:	test	rsi, rsi
0x11c1c:	jle	0x11c8d


0x11cb5:	mov	r10, qword ptr [rbx + 0x10]
0x11cb9:	mov	r9, -1
0x11cc0:	lea	r11, [r10 + rsi*8]
0x11cc4:	mov	rcx, r10
0x11cc7:	mov	rsi, r9
0x11cca:	jmp	0x11ce6


0x11c1e:	mov	qword ptr [rsp + 0x28], rbp
0x11c23:	mov	rbp, r8
0x11c26:	jmp	0x11c3e


0x11ce6:	mov	rdi, qword ptr [rcx]
0x11ce9:	mov	rdx, rdi
0x11cec:	shl	rdx, 4
0x11cf0:	add	rdx, rax
0x11cf3:	movzx	r14d, byte ptr [rdx + 8]
0x11cf8:	cmp	r14d, 8
0x11cfc:	jne	0x11cd0


0x11c3e:	mov	rdx, qword ptr [rbx + 0x10]
0x11c42:	mov	rsi, qword ptr [rdx + r14*8]
0x11c46:	mov	rdx, rsi
0x11c49:	shl	rdx, 4
0x11c4d:	add	rax, rdx
0x11c50:	movzx	edx, byte ptr [rax + 8]
0x11c54:	sub	edx, 8
0x11c57:	cmp	edx, 1
0x11c5a:	ja	0x11c30


0x11cfe:	cmp	r8, qword ptr [rdx]
0x11d01:	cmove	rsi, rdi
0x11d05:	add	rcx, 8
0x11d09:	cmp	r11, rcx
0x11d0c:	jne	0x11ce6


0x11cd0:	cmp	r14d, 9
0x11cd4:	jne	0x11cdd


0x11c5c:	cmp	rbp, qword ptr [rax]
0x11c5f:	jne	0x11c30


0x11c30:	add	r14, 1
0x11c34:	cmp	r14, qword ptr [rbx + 8]
0x11c38:	jge	0x11c88


0x11d0e:	test	rsi, rsi
0x11d11:	mov	r14, r9
0x11d14:	mov	qword ptr [rsp + 0x28], r9
0x11d19:	js	0x11de0


0x11cd6:	cmp	r8, qword ptr [rdx]
0x11cd9:	cmove	r9, rdi
0x11cdd:	add	rcx, 8
0x11ce1:	cmp	r11, rcx
0x11ce4:	je	0x11d0e


0x11cdd:	add	rcx, 8
0x11ce1:	cmp	r11, rcx
0x11ce4:	je	0x11d0e


0x11c61:	mov	rcx, qword ptr [rsp + 0x10]
0x11c66:	mov	rdx, rbx
0x11c69:	mov	rdi, r12
0x11c6c:	call	0xbf20


0x11c3a:	mov	rax, qword ptr [r12]
0x11c3e:	mov	rdx, qword ptr [rbx + 0x10]
0x11c42:	mov	rsi, qword ptr [rdx + r14*8]
0x11c46:	mov	rdx, rsi
0x11c49:	shl	rdx, 4
0x11c4d:	add	rax, rdx
0x11c50:	movzx	edx, byte ptr [rax + 8]
0x11c54:	sub	edx, 8
0x11c57:	cmp	edx, 1
0x11c5a:	ja	0x11c30


0x11c88:	mov	rbp, qword ptr [rsp + 0x28]
0x11c8d:	add	r15, 1
0x11c91:	cmp	r15, qword ptr [r13 + 0x28]
0x11c95:	jl	0x11bd0


0x11de0:	cmp	qword ptr [rsp + 0x28], 0
0x11de6:	jns	0x11d4f


0x11d1f:	mov	rcx, qword ptr [rsp + 0x10]
0x11d24:	mov	rdx, rbx
0x11d27:	mov	rdi, r12
0x11d2a:	call	0xbf20


0x11dec:	jmp	0x11c8d


0x11d4f:	xor	r14d, r14d
0x11d52:	mov	qword ptr [rsp + 0x30], rbp
0x11d57:	mov	rbp, r14
0x11d5a:	mov	r14, qword ptr [rsp + 0x28]
0x11d5f:	jmp	0x11d7a


0x11d7a:	mov	r10, qword ptr [r10 + rbp*8]
0x11d7e:	mov	rax, qword ptr [r12 + 0x38]
0x11d83:	mov	rdx, r14
0x11d86:	lea	r9, [r10 + r10*2]
0x11d8a:	shl	r9, 3
0x11d8e:	add	rax, r9
0x11d91:	mov	rdi, qword ptr [rax + 8]
0x11d95:	lea	rsi, [rax + 0x10]
0x11d99:	call	0x96d0


0x3d8d:	test	rax, rax
0x3d90:	jne	0x3d80


0x3d92:	add	rsp, 8
0x3d96:	ret	


0x3d80:	mov	rdi, rax
0x3d83:	call	0x3440


0x10340:	test	eax, eax
0x10342:	mov	dword ptr [rsp + 0x5c], eax
0x10346:	jne	0x10c40


0x1034c:	mov	rdi, qword ptr [rsp + 0x38]
0x10351:	lea	rax, [rdi + 0xb8]
0x10358:	mov	qword ptr [rsp + 0x1a0], rax
0x10360:	movzx	eax, byte ptr [rdi + 0xb0]
0x10367:	mov	byte ptr [rsp + 8], al
0x1036b:	shr	al, 4
0x1036e:	and	eax, 1
0x10371:	cmp	byte ptr [rsp + 0x1ab], 0
0x10379:	mov	byte ptr [rsp + 0x1ae], al
0x10380:	jne	0x103a5


0x10c40:	mov	rdi, qword ptr [rsp + 0x1d8]
0x10c48:	call	0x1b00


0x10382:	mov	rsi, qword ptr [rsp + 0x38]
0x10387:	mov	rax, qword ptr [rsp + 0x78]
0x1038c:	cmp	dword ptr [rsi + 0xb4], 1
0x10393:	mov	qword ptr [rsp + 0x128], rax
0x1039b:	mov	rax, qword ptr [rsp + 0x88]
0x103a3:	jle	0x103a7


0x103a5:	xor	eax, eax
0x103a7:	mov	qword ptr [rsp + 0x150], rax
0x103af:	mov	qword ptr [rsp + 0x158], rax
0x103b7:	mov	rax, qword ptr [rsp + 0x48]
0x103bc:	mov	qword ptr [rsp + 0x188], r13
0x103c4:	mov	qword ptr [rsp + 0x180], r13
0x103cc:	movzx	eax, byte ptr [rax + 0x38]
0x103d0:	mov	byte ptr [rsp + 8], al
0x103d4:	shr	al, 7
0x103d7:	mov	byte ptr [rsp + 0x1ad], al
0x103de:	mov	rax, qword ptr [rsp + 0x38]
0x103e3:	mov	r14, qword ptr [rax + 0x98]
0x103ea:	mov	eax, dword ptr [rsp + 0x280]
0x103f1:	mov	qword ptr [rsp + 0x1c8], -1
0x103fd:	lea	r13, [r14 + r14]
0x10401:	mov	dword ptr [rsp + 0x1c0], eax
0x10408:	test	r13, r13
0x1040b:	jle	0x1045f


0x103a7:	mov	qword ptr [rsp + 0x150], rax
0x103af:	mov	qword ptr [rsp + 0x158], rax
0x103b7:	mov	rax, qword ptr [rsp + 0x48]
0x103bc:	mov	qword ptr [rsp + 0x188], r13
0x103c4:	mov	qword ptr [rsp + 0x180], r13
0x103cc:	movzx	eax, byte ptr [rax + 0x38]
0x103d0:	mov	byte ptr [rsp + 8], al
0x103d4:	shr	al, 7
0x103d7:	mov	byte ptr [rsp + 0x1ad], al
0x103de:	mov	rax, qword ptr [rsp + 0x38]
0x103e3:	mov	r14, qword ptr [rax + 0x98]
0x103ea:	mov	eax, dword ptr [rsp + 0x280]
0x103f1:	mov	qword ptr [rsp + 0x1c8], -1
0x103fd:	lea	r13, [r14 + r14]
0x10401:	mov	dword ptr [rsp + 0x1c0], eax
0x10408:	test	r13, r13
0x1040b:	jle	0x1045f


0x1045f:	cmp	qword ptr [rsp + 0x270], 1
0x10468:	mov	qword ptr [rsp + 0x1f0], r13
0x10470:	mov	dword ptr [rsp + 0x200], 1
0x1047b:	mov	qword ptr [rsp + 0x210], r13
0x10483:	jbe	0x115a8


0x1040d:	movabs	rax, 0x666666666666666
0x10417:	cmp	r13, rax
0x1041a:	jg	0x11160


0x115a8:	mov	rax, qword ptr [rsp + 0x38]
0x115ad:	test	byte ptr [rax + 0xb0], 2
0x115b4:	jne	0x10489


0x10489:	mov	rax, qword ptr [rsp + 0x160]
0x10491:	movabs	rdx, 0x1ffffffffffffffe
0x1049b:	cmp	rax, rdx
0x1049e:	ja	0x11160


0x10420:	lea	rdi, [r13 + r14*8]
0x10425:	shl	rdi, 3
0x10429:	call	0x1da0


0x11160:	mov	rdi, qword ptr [rsp + 0x1d8]
0x11168:	mov	dword ptr [rsp + 0x5c], 0xc
0x11170:	jmp	0x10c48


0x115ba:	mov	qword ptr [rsp + 0x1d8], 0
0x115c6:	jmp	0x104c5


0x104a4:	lea	rdi, [rax*8 + 8]
0x104ac:	call	0x1da0


0x10c48:	call	0x1b00


0x104c5:	mov	eax, dword ptr [rsp + 0x280]
0x104cc:	mov	qword ptr [rsp + 0xd8], rbp
0x104d4:	and	eax, 1
0x104d7:	cmp	eax, 1
0x104da:	sbb	eax, eax
0x104dc:	and	eax, 2
0x104df:	add	eax, 4
0x104e2:	mov	dword ptr [rsp + 0x190], eax
0x104e9:	xor	eax, eax
0x104eb:	cmp	rbp, r12
0x104ee:	setle	al
0x104f1:	lea	eax, [rax + rax - 1]
0x104f5:	mov	dword ptr [rsp + 0xac], eax
0x104fc:	mov	rax, r12
0x104ff:	cmovle	rax, rbp
0x10503:	mov	qword ptr [rsp + 0x90], rax
0x1050b:	mov	rax, r12
0x1050e:	cmovge	rax, rbp
0x10512:	cmp	qword ptr [rsp + 0x68], 0
0x10518:	mov	qword ptr [rsp + 0x70], rax
0x1051d:	mov	rax, qword ptr [rsp + 0x38]
0x10522:	mov	esi, dword ptr [rax + 0xb4]
0x10528:	mov	eax, 8
0x1052d:	mov	dword ptr [rsp + 0xc8], esi
0x10534:	je	0x1056f


0x1056f:	cmp	rbp, qword ptr [rsp + 0x70]
0x10574:	setg	cl
0x10577:	cmp	rbp, qword ptr [rsp + 0x90]
0x1057f:	setl	dl
0x10582:	or	cl, dl
0x10584:	jne	0x11059


0x10536:	cmp	esi, 1
0x10539:	mov	ecx, 4
0x1053e:	je	0x1055e


0x1058a:	lea	rcx, [rsp + 0xd8]
0x10592:	cmp	rbp, r12
0x10595:	mov	edx, 0
0x1059a:	cmovle	rdx, rcx
0x1059e:	test	rdx, rdx
0x105a1:	mov	qword ptr [rsp + 0xc0], rdx
0x105a9:	setne	byte ptr [rsp + 0xcf]
0x105b1:	sub	eax, 4
0x105b4:	mov	dword ptr [rsp + 0xa8], eax
0x105bb:	lea	rax, [rsp + 0xd0]
0x105c3:	mov	qword ptr [rsp + 0x28], rax
0x105c8:	mov	eax, dword ptr [rsp + 0xa8]
0x105cf:	cmp	eax, 4
0x105d2:	ja	0x111bd


0x11059:	mov	rdi, qword ptr [rsp + 0x1d8]
0x11061:	mov	dword ptr [rsp + 0x5c], 1
0x11069:	jmp	0x10c48


0x1055e:	xor	edx, edx
0x10560:	cmp	rbp, r12
0x10563:	movzx	eax, bl
0x10566:	setle	dl
0x10569:	or	eax, ecx
0x1056b:	add	edx, edx
0x1056d:	or	eax, edx
0x1056f:	cmp	rbp, qword ptr [rsp + 0x70]
0x10574:	setg	cl
0x10577:	cmp	rbp, qword ptr [rsp + 0x90]
0x1057f:	setl	dl
0x10582:	or	cl, dl
0x10584:	jne	0x11059


0x10540:	mov	rax, qword ptr [rsp + 0x48]
0x10545:	test	byte ptr [rax + 0x1a], 0x40
0x10549:	jne	0x112ce


0x105d8:	lea	rcx, [rip + 0x7181]
0x105df:	movsxd	rax, dword ptr [rcx + rax*4]
0x105e3:	add	rax, rcx
0x105e6:	jmp	rax


0x111bd:	mov	rbx, qword ptr [rsp + 0x68]
0x111c2:	mov	r13d, dword ptr [rsp + 0xac]
0x111ca:	mov	r14, qword ptr [rsp + 0x90]
0x111d2:	mov	r15, qword ptr [rsp + 0x70]
0x111d7:	mov	r12, qword ptr [rsp + 0x88]
0x111df:	jmp	0x11228


0x1054f:	cmp	qword ptr [rsp + 0xb0], 0
0x10558:	jne	0x112ce


0x112ce:	xor	ecx, ecx
0x112d0:	jmp	0x1055e


0x11228:	mov	rdx, rbp
0x1122b:	sub	rdx, qword ptr [rsp + 0x148]
0x11233:	cmp	qword ptr [rsp + 0x158], rdx
0x1123b:	ja	0x111e8


0x1123d:	mov	edx, dword ptr [rsp + 0x280]
0x11244:	mov	rdi, qword ptr [rsp]
0x11248:	mov	rsi, rbp
0x1124b:	call	0xb780


0x111e8:	cmp	r12, rbp
0x111eb:	mov	rax, rbx
0x111ee:	jle	0x111ff


0x111ff:	cmp	byte ptr [rax], 0
0x11202:	jne	0x106c8


0x111f0:	mov	rax, qword ptr [rsp + 0x128]
0x111f8:	movzx	eax, byte ptr [rax + rdx]
0x111fc:	add	rax, rbx
0x111ff:	cmp	byte ptr [rax], 0
0x11202:	jne	0x106c8


0x11208:	movsxd	rax, r13d
0x1120b:	add	rbp, rax
0x1120e:	cmp	rbp, r14
0x11211:	mov	qword ptr [rsp + 0xd8], rbp
0x11219:	jl	0x11059


0x106c8:	mov	edx, dword ptr [rsp + 0x280]
0x106cf:	mov	rdi, qword ptr [rsp]
0x106d3:	mov	rsi, rbp
0x106d6:	call	0xb780


0x1121f:	cmp	rbp, r15
0x11222:	jg	0x11059


0x106db:	test	eax, eax
0x106dd:	mov	dword ptr [rsp + 0x5c], eax
0x106e1:	jne	0x10c40


0x106e7:	cmp	dword ptr [rsp + 0xc8], 1
0x106ef:	je	0x1070d


0x1070d:	mov	rbx, qword ptr [rsp + 0x1b8]
0x10715:	movzx	eax, byte ptr [rsp + 0x58]
0x1071a:	mov	dword ptr [rsp + 0x200], 0
0x10725:	mov	qword ptr [rsp + 0x1e8], 0
0x10731:	mov	qword ptr [rsp + 0x1e0], 0
0x1073d:	mov	dword ptr [rsp + 0xd0], 0
0x10748:	mov	r14, qword ptr [rbx + 0x48]
0x1074c:	and	eax, 1
0x1074f:	mov	byte ptr [rsp + 0xce], al
0x10756:	mov	rax, qword ptr [rsp + 0x168]
0x1075e:	cmp	byte ptr [r14 + 0x68], 0
0x10763:	mov	qword ptr [rsp + 8], rax
0x10768:	js	0x110e0


0x106f1:	cmp	qword ptr [rsp + 0x150], 0
0x106fa:	je	0x1070d


0x110e0:	mov	edx, dword ptr [rsp + 0x1c0]
0x110e7:	mov	rdi, qword ptr [rsp]
0x110eb:	lea	rsi, [rax - 1]
0x110ef:	call	0xb4b0


0x1076e:	mov	rax, qword ptr [rsp + 0x1d8]
0x10776:	test	rax, rax
0x10779:	je	0x10792


0x106fc:	mov	rax, qword ptr [rsp + 0x130]
0x10704:	cmp	dword ptr [rax], -1
0x10707:	je	0x11031


0x10792:	movzx	eax, byte ptr [rsp + 0xcf]
0x1079a:	mov	byte ptr [rsp + 0x18], al
0x1079e:	movzx	eax, byte ptr [r14 + 0x68]
0x107a3:	test	al, 0x10
0x107a5:	mov	qword ptr [rsp + 0x20], -1
0x107ae:	mov	qword ptr [rsp + 0x30], 0
0x107b7:	jne	0x11640


0x1077b:	cmp	qword ptr [rbx + 0x98], 0
0x10783:	mov	rdi, qword ptr [rsp + 8]
0x10788:	mov	qword ptr [rax + rdi*8], r14
0x1078c:	jne	0x1167b


0x11031:	movsxd	rax, dword ptr [rsp + 0xac]
0x11039:	add	rbp, rax
0x1103c:	cmp	rbp, qword ptr [rsp + 0x90]
0x11044:	mov	qword ptr [rsp + 0xd8], rbp
0x1104c:	jl	0x11059


0x107bd:	mov	rax, qword ptr [rsp + 0xc0]
0x107c5:	mov	r8, qword ptr [rsp + 0x168]
0x107cd:	mov	qword ptr [rsp + 0x50], rax
0x107d2:	lea	rax, [rsp + 0xe0]
0x107da:	mov	qword ptr [rsp + 0x60], rax
0x107df:	lea	rax, [rsp + 0xd4]
0x107e7:	mov	qword ptr [rsp + 0x80], rax
0x107ef:	jmp	0x1084c


0x11640:	cmp	byte ptr [r14 + 0x68], 0
0x11645:	js	0x116b6


0x1167b:	lea	rbx, [r14 + 0x10]
0x1167f:	lea	rbp, [r14 + 0x18]
0x11683:	mov	rdi, qword ptr [rsp]
0x11687:	xor	ecx, ecx
0x11689:	mov	rdx, rbp
0x1168c:	mov	rsi, rbx
0x1168f:	call	0xb360


0x1104e:	cmp	rbp, qword ptr [rsp + 0x70]
0x11053:	jle	0x105c8


0x1084c:	cmp	qword ptr [rsp + 0x188], r8
0x10854:	jle	0x10944


0x116b6:	mov	rsi, qword ptr [r14 + 0x10]
0x116ba:	mov	rcx, qword ptr [rsp + 8]
0x116bf:	lea	rdx, [r14 + 0x18]
0x116c3:	mov	rdi, qword ptr [rsp]
0x116c7:	call	0xb6b0


0x11647:	mov	esi, dword ptr [rsp + 0x58]
0x1164b:	mov	rax, qword ptr [rsp + 8]
0x11650:	test	esi, esi
0x11652:	mov	qword ptr [rsp + 0x20], rax
0x11657:	je	0x10956


0x105c8:	mov	eax, dword ptr [rsp + 0xa8]
0x105cf:	cmp	eax, 4
0x105d2:	ja	0x111bd


0x10944:	mov	rax, qword ptr [rsp + 0x50]
0x10949:	test	rax, rax
0x1094c:	je	0x10956


0x1085a:	mov	rax, qword ptr [rsp + 0x160]
0x10862:	lea	rbx, [r8 + 1]
0x10866:	cmp	rbx, rax
0x10869:	jge	0x10d10


0x10956:	mov	rax, qword ptr [rsp + 0x20]
0x1095b:	cmp	rax, -1
0x1095f:	je	0x11020


0x1165d:	mov	qword ptr [rsp + 0x30], 1
0x11666:	jmp	0x107bd


0x1094e:	mov	rdi, qword ptr [rsp + 8]
0x10953:	add	qword ptr [rax], rdi
0x10956:	mov	rax, qword ptr [rsp + 0x20]
0x1095b:	cmp	rax, -1
0x1095f:	je	0x11020


0x1086f:	mov	rax, qword ptr [rsp + 0x150]
0x10877:	cmp	rbx, rax
0x1087a:	jge	0x11000


0x10d10:	cmp	rax, qword ptr [rsp + 0x178]
0x10d18:	jge	0x1086f


0x11020:	mov	rdi, qword ptr [rsp]
0x11024:	call	0x9560


0x10965:	cmp	rax, -2
0x10969:	je	0x11160


0x10880:	test	byte ptr [r14 + 0x68], 0x20
0x10885:	jne	0x10d50


0x11000:	cmp	rax, qword ptr [rsp + 0x178]
0x11008:	jge	0x10880


0x10d1e:	mov	rdi, qword ptr [rsp]
0x10d22:	lea	esi, [rbx + 1]
0x10d25:	call	0x8c10


0x1096f:	mov	rax, qword ptr [rsp + 0x20]
0x10974:	mov	qword ptr [rsp + 0x1c8], rax
0x1097c:	mov	rax, qword ptr [rsp + 0x48]
0x10981:	test	byte ptr [rax + 0x38], 0x10
0x10985:	jne	0x11140


0x1088b:	lea	rax, [r8 + 1]
0x1088f:	mov	qword ptr [rsp + 0x168], rax
0x10897:	mov	rax, qword ptr [rsp + 0x128]
0x1089f:	movzx	r13d, byte ptr [rax + r8]
0x108a4:	mov	rax, qword ptr [r14 + 0x58]
0x108a8:	test	rax, rax
0x108ab:	je	0x10fc0


0x10d50:	cmp	qword ptr [r14 + 0x10], 0
0x10d55:	mov	r13, qword ptr [rsp + 0x1b8]
0x10d5d:	jle	0x1108b


0x1100e:	jmp	0x10d1e


0x1098b:	cmp	qword ptr [rsp + 0x270], 1
0x10994:	jbe	0x1128c


0x11140:	mov	rax, qword ptr [rsp + 0x38]
0x11145:	cmp	qword ptr [rax + 0x98], 0
0x1114d:	je	0x1137c


0x10fc0:	mov	rbp, qword ptr [r14 + 0x60]
0x10fc4:	test	rbp, rbp
0x10fc7:	je	0x11175


0x108b1:	mov	r13, qword ptr [rax + r13*8]
0x108b5:	cmp	qword ptr [rsp + 0x1d8], 0
0x108be:	je	0x108d4


0x1108b:	mov	dword ptr [rsp + 0xd0], 0
0x11096:	jmp	0x1088b


0x10d63:	lea	rax, [r13 + 0xd8]
0x10d6a:	xor	r12d, r12d
0x10d6d:	mov	qword ptr [rsp + 0xa0], rbx
0x10d75:	mov	rbx, r12
0x10d78:	mov	r12, r8
0x10d7b:	mov	qword ptr [rsp + 0x40], rax
0x10d80:	jmp	0x10ed8


0x1128c:	mov	rax, qword ptr [rsp + 0x38]
0x11291:	cmp	qword ptr [rax + 0x98], 0
0x11299:	je	0x1137c


0x1099a:	mov	rcx, qword ptr [rsp + 0x20]
0x1099f:	mov	rbx, qword ptr [rsp + 0x1d8]
0x109a7:	mov	rdi, qword ptr [rsp]
0x109ab:	mov	rax, qword ptr [rbx + rcx*8]
0x109af:	mov	rsi, qword ptr [rax + 0x10]
0x109b3:	lea	rdx, [rax + 0x18]
0x109b7:	call	0xb6b0


0x1137c:	cmp	qword ptr [rsp + 0x270], 0
0x11385:	je	0x10c40


0x11153:	jmp	0x1129f


0x11175:	mov	rdi, qword ptr [rsp + 0x1b8]
0x1117d:	mov	rsi, r14
0x11180:	call	0xc160


0x10fcd:	mov	rax, qword ptr [rsp + 0x168]
0x10fd5:	mov	edx, dword ptr [rsp + 0x1c0]
0x10fdc:	mov	rdi, qword ptr [rsp]
0x10fe0:	lea	rsi, [rax - 1]
0x10fe4:	call	0xb4b0


0x108d4:	test	r13, r13
0x108d7:	jne	0x107f8


0x108c0:	mov	rsi, qword ptr [rsp]
0x108c4:	mov	rdi, qword ptr [rsp + 0x28]
0x108c9:	mov	rdx, r13
0x108cc:	call	0xfbc0


0x10ed8:	mov	rax, qword ptr [r14 + 0x18]
0x10edc:	mov	rbp, qword ptr [r13]
0x10ee0:	mov	r15, qword ptr [rax + rbx*8]
0x10ee4:	mov	rax, r15
0x10ee7:	shl	rax, 4
0x10eeb:	add	rax, rbp
0x10eee:	test	byte ptr [rax + 0xa], 0x10
0x10ef2:	je	0x10eca


0x1129f:	mov	rcx, qword ptr [rsp + 0x20]
0x112a4:	mov	rbx, qword ptr [rsp + 0x1d8]
0x112ac:	mov	rdi, qword ptr [rsp]
0x112b0:	mov	rax, qword ptr [rbx + rcx*8]
0x112b4:	mov	rsi, qword ptr [rax + 0x10]
0x112b8:	lea	rdx, [rax + 0x18]
0x112bc:	call	0xb6b0


0x1138b:	cmp	qword ptr [rsp + 0x270], 1
0x11394:	je	0x117b8


0x108dd:	mov	ecx, dword ptr [rsp + 0xd0]
0x108e4:	mov	rdi, qword ptr [rsp + 0x1d8]
0x108ec:	test	ecx, ecx
0x108ee:	jne	0x111b0


0x107f8:	cmp	r14, r13
0x107fb:	mov	r8, qword ptr [rsp + 0x168]
0x10803:	sete	al
0x10806:	and	byte ptr [rsp + 0x18], al
0x1080a:	movzx	eax, byte ptr [r13 + 0x68]
0x1080f:	cmove	rbx, qword ptr [rsp + 8]
0x10815:	test	al, 0x10
0x10817:	mov	qword ptr [rsp + 8], rbx
0x1081c:	je	0x10849


0x10eca:	add	rbx, 1
0x10ece:	cmp	rbx, qword ptr [r14 + 0x10]
0x10ed2:	jge	0x11080


0x10ef4:	mov	ecx, dword ptr [rax + 8]
0x10ef7:	test	ecx, 0x3ff00
0x10efd:	mov	dword ptr [rsp + 0x10], ecx
0x10f01:	je	0x10dc0


0x117b8:	mov	rsi, qword ptr [rsp + 0xb8]
0x117c0:	mov	rax, qword ptr [rsp + 0x1c8]
0x117c8:	mov	qword ptr [rsi], 0
0x117cf:	mov	qword ptr [rsi + 8], rax
0x117d3:	xor	eax, eax
0x117d5:	jmp	0x11451


0x1139a:	mov	rsi, qword ptr [rsp + 0xb8]
0x113a2:	mov	rcx, qword ptr [rsp + 0x270]
0x113aa:	mov	rdx, -1
0x113b1:	shl	rcx, 4
0x113b5:	lea	rax, [rsi + 0x10]
0x113b9:	add	rcx, rsi
0x113bc:	mov	qword ptr [rax + 8], rdx
0x113c0:	mov	qword ptr [rax], rdx
0x113c3:	add	rax, 0x10
0x113c7:	cmp	rcx, rax
0x113ca:	jne	0x113bc


0x108f4:	test	rdi, rdi
0x108f7:	je	0x10944


0x111b0:	mov	dword ptr [rsp + 0x5c], 0xc
0x111b8:	jmp	0x10c48


0x10849:	mov	r14, r13
0x1084c:	cmp	qword ptr [rsp + 0x188], r8
0x10854:	jle	0x10944


0x1081e:	test	al, al
0x10820:	js	0x10ce0


0x11080:	mov	rbx, qword ptr [rsp + 0xa0]
0x11088:	mov	r8, r12
0x1108b:	mov	dword ptr [rsp + 0xd0], 0
0x11096:	jmp	0x1088b


0x10dc0:	mov	rcx, qword ptr [rsp]
0x10dc4:	mov	rsi, qword ptr [rsp + 0x40]
0x10dc9:	mov	r8, r12
0x10dcc:	mov	rdx, r15
0x10dcf:	mov	rdi, rbp
0x10dd2:	call	0xde80


0x10f07:	mov	edx, dword ptr [rsp + 0x1c0]
0x10f0e:	mov	rdi, qword ptr [rsp]
0x10f12:	mov	rsi, r12
0x10f15:	call	0xb4b0


0x11451:	movzx	r11d, byte ptr [rsp + 0x1ac]
0x1145a:	mov	r10, qword ptr [rsp + 0x150]
0x11462:	xor	ecx, ecx
0x11464:	mov	r9, qword ptr [rsp + 0x138]
0x1146c:	mov	r8, qword ptr [rsp + 0x158]
0x11474:	mov	rdi, qword ptr [rsp + 0xd8]
0x1147c:	mov	rdx, qword ptr [rsp + 0xb8]
0x11484:	jmp	0x11489


0x113cc:	mov	rdi, qword ptr [rsp + 0xb8]
0x113d4:	mov	rax, qword ptr [rsp + 0x1c8]
0x113dc:	mov	qword ptr [rdi + 8], rax
0x113e0:	mov	rax, qword ptr [rsp + 0x48]
0x113e5:	mov	qword ptr [rdi], 0
0x113ec:	test	byte ptr [rax + 0x38], 0x10
0x113f0:	jne	0x117d3


0x113bc:	mov	qword ptr [rax + 8], rdx
0x113c0:	mov	qword ptr [rax], rdx
0x113c3:	add	rax, 0x10
0x113c7:	cmp	rcx, rax
0x113ca:	jne	0x113bc


0x108f9:	movzx	eax, byte ptr [rsp + 0xce]
0x10901:	xor	eax, 1
0x10904:	test	byte ptr [rsp + 0x30], al
0x10908:	jne	0x10944


0x10ce0:	mov	rsi, qword ptr [r13 + 0x10]
0x10ce4:	mov	rdi, qword ptr [rsp]
0x10ce8:	lea	rdx, [r13 + 0x18]
0x10cec:	mov	rcx, r8
0x10cef:	mov	qword ptr [rsp + 0x10], r8
0x10cf4:	call	0xb6b0


0x10826:	mov	eax, dword ptr [rsp + 0x58]
0x1082a:	mov	qword ptr [rsp + 0x20], r8
0x1082f:	test	eax, eax
0x10831:	je	0x10956


0x11489:	cmp	rax, -1
0x1148d:	je	0x114a9


0x113f6:	cmp	qword ptr [rsp + 0x270], 1
0x113ff:	je	0x117d3


0x117d3:	xor	eax, eax
0x117d5:	jmp	0x11451


0x1090a:	mov	rsi, qword ptr [rsp + 0x1e0]
0x10912:	mov	rax, qword ptr [rsp + 0x168]
0x1091a:	xor	ecx, ecx
0x1091c:	jmp	0x10933


0x10837:	mov	qword ptr [rsp + 0x30], 1
0x10840:	mov	qword ptr [rsp + 0x50], 0
0x10849:	mov	r14, r13
0x1084c:	cmp	qword ptr [rsp + 0x188], r8
0x10854:	jle	0x10944


0x114a9:	add	rcx, 1
0x114ad:	add	rdx, 0x10
0x114b1:	cmp	rcx, qword ptr [rsp + 0x270]
0x114b9:	jne	0x11486


0x1148f:	test	r11b, r11b
0x11492:	mov	rsi, qword ptr [rdx + 8]
0x11496:	jne	0x117da


0x11405:	mov	rax, qword ptr [rsp + 0x38]
0x1140a:	xor	r8d, r8d
0x1140d:	test	byte ptr [rax + 0xb0], 1
0x11414:	je	0x11425


0x10933:	lea	rdx, [rax + 1]
0x10937:	cmp	rsi, rdx
0x1093a:	jge	0x10920


0x114bb:	cmp	qword ptr [rsp + 0x98], 0
0x114c4:	jle	0x11505


0x11486:	mov	rax, qword ptr [rdx]
0x11489:	cmp	rax, -1
0x1148d:	je	0x114a9


0x1149c:	add	rax, rdi
0x1149f:	add	rsi, rdi
0x114a2:	mov	qword ptr [rdx], rax
0x114a5:	mov	qword ptr [rdx + 8], rsi
0x114a9:	add	rcx, 1
0x114ad:	add	rdx, 0x10
0x114b1:	cmp	rcx, qword ptr [rsp + 0x270]
0x114b9:	jne	0x11486


0x117da:	cmp	r10, rax
0x117dd:	je	0x117fc


0x11425:	mov	rbx, qword ptr [rsp + 0xb8]
0x1142d:	mov	rdx, qword ptr [rsp + 0x270]
0x11435:	mov	rsi, qword ptr [rsp]
0x11439:	mov	rdi, qword ptr [rsp + 0x48]
0x1143e:	mov	rcx, rbx
0x11441:	call	0xe840


0x11416:	xor	r8d, r8d
0x11419:	cmp	qword ptr [rax + 0x98], 0
0x11421:	setg	r8b
0x11425:	mov	rbx, qword ptr [rsp + 0xb8]
0x1142d:	mov	rdx, qword ptr [rsp + 0x270]
0x11435:	mov	rsi, qword ptr [rsp]
0x11439:	mov	rdi, qword ptr [rsp + 0x48]
0x1143e:	mov	rcx, rbx
0x11441:	call	0xe840


0x1093c:	test	cl, cl
0x1093e:	jne	0x1180e


0x10920:	cmp	qword ptr [rdi + rdx*8], 0
0x10925:	mov	rax, rdx
0x10928:	mov	ecx, 1
0x1092d:	jne	0x10ca0


0x11505:	mov	rax, qword ptr [rsp + 0x38]
0x1150a:	mov	rdi, qword ptr [rsp + 0x1d8]
0x11512:	mov	r9, qword ptr [rax + 0xe0]
0x11519:	test	r9, r9
0x1151c:	je	0x10c48


0x114c6:	mov	rdx, qword ptr [rsp + 0x98]
0x114ce:	mov	rdi, qword ptr [rsp + 0xb8]
0x114d6:	mov	rax, rcx
0x114d9:	shl	rax, 4
0x114dd:	add	rdx, rcx
0x114e0:	lea	rax, [rdi + rax + 8]
0x114e5:	shl	rdx, 4
0x114e9:	lea	rsi, [rdi + rdx + 8]
0x114ee:	mov	rdx, -1
0x114f5:	mov	qword ptr [rax - 8], rdx
0x114f9:	mov	qword ptr [rax], rdx
0x114fc:	add	rax, 0x10
0x11500:	cmp	rsi, rax
0x11503:	jne	0x114f5


0x117fc:	mov	rax, r8
0x117ff:	jmp	0x117e3


0x117df:	mov	rax, qword ptr [r9 + rax*8]
0x117e3:	cmp	r10, rsi
0x117e6:	mov	qword ptr [rdx], rax
0x117e9:	je	0x117f4


0x1180e:	mov	qword ptr [rsp + 0x168], rax
0x11816:	jmp	0x10944


0x10ca0:	mov	rsi, qword ptr [rsp]
0x10ca4:	mov	rdi, qword ptr [rsp + 0x28]
0x10ca9:	mov	qword ptr [rsp + 0x168], rdx
0x10cb1:	xor	edx, edx
0x10cb3:	call	0xfbc0


0x11522:	mov	r10, qword ptr [rsp + 0xb8]
0x1152a:	xor	r8d, r8d
0x1152d:	lea	rdx, [r10 + 0x10]
0x11531:	jmp	0x11569


0x114f5:	mov	qword ptr [rax - 8], rdx
0x114f9:	mov	qword ptr [rax], rdx
0x114fc:	add	rax, 0x10
0x11500:	cmp	rsi, rax
0x11503:	jne	0x114f5


0x117e3:	cmp	r10, rsi
0x117e6:	mov	qword ptr [rdx], rax
0x117e9:	je	0x117f4


0x117f4:	mov	rsi, r8
0x117f7:	jmp	0x1149c


0x117eb:	mov	rsi, qword ptr [r9 + rsi*8]
0x117ef:	jmp	0x1149c


0x11569:	lea	rsi, [r8 + 1]
0x1156d:	cmp	rsi, rcx
0x11570:	jne	0x11533


0x11572:	jmp	0x10c48


0x11533:	mov	rax, qword ptr [r9 + rsi*8 - 8]
0x11538:	cmp	rax, r8
0x1153b:	je	0x11562


0x11562:	add	rdx, 0x10
0x11566:	mov	r8, rsi
0x11569:	lea	rsi, [r8 + 1]
0x1156d:	cmp	rsi, rcx
0x11570:	jne	0x11533


0x1153d:	add	rax, 1
0x11541:	shl	rax, 4
0x11545:	mov	rax, qword ptr [r10 + rax]
0x11549:	mov	qword ptr [rdx], rax
0x1154c:	mov	rax, qword ptr [r9 + rsi*8 - 8]
0x11551:	add	rax, 1
0x11555:	shl	rax, 4
0x11559:	mov	rax, qword ptr [r10 + rax + 8]
0x1155e:	mov	qword ptr [rdx + 8], rax
0x11562:	add	rdx, 0x10
0x11566:	mov	r8, rsi
0x11569:	lea	rsi, [r8 + 1]
0x1156d:	cmp	rsi, rcx
0x11570:	jne	0x11533


0x10dd7:	test	eax, eax
0x10dd9:	je	0x10ec2


0x10ec2:	mov	r12, qword ptr [rsp + 0x168]
0x10eca:	add	rbx, 1
0x10ece:	cmp	rbx, qword ptr [r14 + 0x10]
0x10ed2:	jge	0x11080


0x10ddf:	movsxd	rbp, eax
0x10de2:	add	rbp, qword ptr [rsp + 0x168]
0x10dea:	cmp	dword ptr [rsp + 0x200], eax
0x10df1:	cmovge	eax, dword ptr [rsp + 0x200]
0x10df9:	mov	rdi, qword ptr [rsp]
0x10dfd:	mov	rsi, rbp
0x10e00:	mov	dword ptr [rsp + 0x200], eax
0x10e07:	call	0x8d60


0x10e0c:	test	eax, eax
0x10e0e:	mov	dword ptr [rsp + 0xd4], eax
0x10e15:	jne	0x110b0


0x10e1b:	mov	rax, qword ptr [r13 + 0x18]
0x10e1f:	lea	r12, [rbp*8]
0x10e27:	mov	rax, qword ptr [rax + r15*8]
0x10e2b:	mov	r15, qword ptr [rsp + 0x1d8]
0x10e33:	lea	rdx, [rax + rax*2]
0x10e37:	mov	rax, qword ptr [r13 + 0x30]
0x10e3b:	add	r15, r12
0x10e3e:	lea	rdx, [rax + rdx*8]
0x10e42:	mov	rax, qword ptr [r15]
0x10e45:	test	rax, rax
0x10e48:	je	0x10f48


0x110b0:	mov	rbx, qword ptr [rsp + 0xa0]
0x110b8:	mov	rdi, qword ptr [rsp + 0x1d8]
0x110c0:	test	rdi, rdi
0x110c3:	mov	dword ptr [rsp + 0xd0], eax
0x110ca:	je	0x111b0


0x10f48:	movdqu	xmm0, xmmword ptr [rdx]
0x10f4c:	lea	rsi, [rbp - 1]
0x10f50:	mov	rdi, qword ptr [rsp]
0x10f54:	movaps	xmmword ptr [rsp + 0xe0], xmm0
0x10f5c:	mov	rax, qword ptr [rdx + 0x10]
0x10f60:	mov	edx, dword ptr [rsp + 0x1c0]
0x10f67:	mov	qword ptr [rsp + 0xf0], rax
0x10f6f:	call	0xb4b0


0x10e4e:	mov	rsi, qword ptr [rax + 0x50]
0x10e52:	mov	rdi, qword ptr [rsp + 0x60]
0x10e57:	call	0xa8c0


0x110d0:	xor	r13d, r13d
0x110d3:	jmp	0x108c0


0x10e5c:	test	eax, eax
0x10e5e:	mov	dword ptr [rsp + 0xd4], eax
0x10e65:	jne	0x110b0


0x10e6b:	mov	edx, dword ptr [rsp + 0x1c0]
0x10e72:	mov	rdi, qword ptr [rsp]
0x10e76:	lea	rsi, [rbp - 1]
0x10e7a:	call	0xb4b0


0x10cb8:	mov	edx, dword ptr [rsp + 0xd0]
0x10cbf:	test	edx, edx
0x10cc1:	jne	0x115fd


0x10cc7:	test	rax, rax
0x10cca:	jne	0x11610


0x115fd:	test	rax, rax
0x11600:	mov	r13, rax
0x11603:	jne	0x107f8


0x10cd0:	mov	rdi, qword ptr [rsp + 0x1d8]
0x10cd8:	jmp	0x1090a


0x11610:	mov	r13, rax
0x11613:	jmp	0x107f8


0x11609:	jmp	0x10944


0x108d1:	mov	r13, rax
0x108d4:	test	r13, r13
0x108d7:	jne	0x107f8


0x10d2a:	test	eax, eax
0x10d2c:	mov	dword ptr [rsp + 0xd0], eax
0x10d33:	jne	0x11618


0x10d39:	test	byte ptr [r14 + 0x68], 0x20
0x10d3e:	mov	r8, qword ptr [rsp + 0x168]
0x10d46:	je	0x1088b


0x11618:	cmp	eax, 0xc
0x1161b:	je	0x11160


0x11621:	lea	rcx, [rip + 0x65c8]
0x11628:	lea	rsi, [rip + 0x5fd9]
0x1162f:	lea	rdi, [rip + 0x6086]
0x11636:	mov	edx, 0x46c
0x1163b:	call	0x1c90


0x11029:	mov	rbp, qword ptr [rsp + 0xd8]
0x11031:	movsxd	rax, dword ptr [rsp + 0xac]
0x11039:	add	rbp, rax
0x1103c:	cmp	rbp, qword ptr [rsp + 0x90]
0x11044:	mov	qword ptr [rsp + 0xd8], rbp
0x1104c:	jl	0x11059


0x11694:	test	eax, eax
0x11696:	mov	dword ptr [rsp + 0xd0], eax
0x1169d:	jne	0x116e8


0x1169f:	movzx	eax, byte ptr [r14 + 0x68]
0x116a4:	test	al, 0x40
0x116a6:	jne	0x11790


0x116e8:	cdqe	
0x116ea:	mov	qword ptr [rsp + 0x20], rax
0x116ef:	jmp	0x10956


0x116ac:	mov	byte ptr [rsp + 0x18], 0
0x116b1:	jmp	0x107a3


0x11790:	mov	rdi, qword ptr [rsp]
0x11794:	mov	rdx, rbp
0x11797:	mov	rsi, rbx
0x1179a:	call	0xf2d0


0x107a3:	test	al, 0x10
0x107a5:	mov	qword ptr [rsp + 0x20], -1
0x107ae:	mov	qword ptr [rsp + 0x30], 0
0x107b7:	jne	0x11640


0x1179f:	test	eax, eax
0x117a1:	mov	dword ptr [rsp + 0xd0], eax
0x117a8:	jne	0x116e8


0x117ae:	movzx	eax, byte ptr [r14 + 0x68]
0x117b3:	jmp	0x116ac


0x11250:	test	eax, eax
0x11252:	jne	0x10c38


0x11258:	mov	rdx, rbp
0x1125b:	sub	rdx, qword ptr [rsp + 0x148]
0x11263:	jmp	0x111e8


0x10c38:	mov	dword ptr [rsp + 0x5c], eax
0x10c3c:	nop	dword ptr [rax]
0x10c40:	mov	rdi, qword ptr [rsp + 0x1d8]
0x10c48:	call	0x1b00


0x8c4d:	test	eax, eax
0x8c4f:	mov	ebp, eax
0x8c51:	jne	0x8d0d


0x8c57:	mov	rdi, qword ptr [rbx + 0xb8]
0x8c5e:	test	rdi, rdi
0x8c61:	je	0x8c84


0x8d0d:	add	rsp, 8
0x8d11:	mov	eax, ebp
0x8d13:	pop	rbx
0x8d14:	pop	rbp
0x8d15:	ret	


0x8c84:	cmp	byte ptr [rbx + 0x88], 0
0x8c8b:	mov	eax, dword ptr [rbx + 0x90]
0x8c91:	je	0x8cb0


0x8c63:	mov	rax, qword ptr [rbx + 0x40]
0x8c67:	lea	rsi, [rax*8 + 8]
0x8c6f:	call	0x1e00


0x8cb0:	cmp	eax, 1
0x8cb3:	jg	0x8d20


0x8c93:	cmp	eax, 1
0x8c96:	mov	rdi, rbx
0x8c99:	jle	0x8d50


0x8cb5:	mov	rcx, qword ptr [rbx + 0x78]
0x8cb9:	test	rcx, rcx
0x8cbc:	je	0x8d0d


0x8d20:	mov	rdi, rbx
0x8d23:	call	0x8420


0x8d50:	call	0x83b0


0x8c9f:	add	rsp, 8
0x8ca3:	pop	rbx
0x8ca4:	pop	rbp
0x8ca5:	jmp	0x85f0


0x8cbe:	mov	rsi, qword ptr [rbx + 0x58]
0x8cc2:	cmp	qword ptr [rbx + 0x40], rsi
0x8cc6:	cmovle	rsi, qword ptr [rbx + 0x40]
0x8ccb:	mov	rax, qword ptr [rbx + 0x30]
0x8ccf:	cmp	rsi, rax
0x8cd2:	jg	0x8ce4


0x8cd4:	jmp	0x8d05


0x8ce4:	mov	rdx, qword ptr [rbx]
0x8ce7:	add	rdx, rax
0x8cea:	add	rdx, qword ptr [rbx + 0x28]
0x8cee:	movzx	edx, byte ptr [rdx]
0x8cf1:	movzx	ecx, byte ptr [rcx + rdx]
0x8cf5:	mov	rdx, qword ptr [rbx + 8]
0x8cf9:	mov	byte ptr [rdx + rax], cl
0x8cfc:	add	rax, 1
0x8d00:	cmp	rsi, rax
0x8d03:	jne	0x8ce0


0x8d05:	mov	qword ptr [rbx + 0x30], rax
0x8d09:	mov	qword ptr [rbx + 0x38], rax
0x8d0d:	add	rsp, 8
0x8d11:	mov	eax, ebp
0x8d13:	pop	rbx
0x8d14:	pop	rbp
0x8d15:	ret	


0x8ce0:	mov	rcx, qword ptr [rbx + 0x78]
0x8ce4:	mov	rdx, qword ptr [rbx]
0x8ce7:	add	rdx, rax
0x8cea:	add	rdx, qword ptr [rbx + 0x28]
0x8cee:	movzx	edx, byte ptr [rdx]
0x8cf1:	movzx	ecx, byte ptr [rcx + rdx]
0x8cf5:	mov	rdx, qword ptr [rbx + 8]
0x8cf9:	mov	byte ptr [rdx + rax], cl
0x8cfc:	add	rax, 1
0x8d00:	cmp	rsi, rax
0x8d03:	jne	0x8ce0


0x8d55:	add	rsp, 8
0x8d59:	mov	eax, ebp
0x8d5b:	pop	rbx
0x8d5c:	pop	rbp
0x8d5d:	ret	


0x8d28:	add	rsp, 8
0x8d2c:	mov	eax, ebp
0x8d2e:	pop	rbx
0x8d2f:	pop	rbp
0x8d30:	ret	


0x12244:	cdqe	
0x12246:	add	rax, r11
0x12249:	mov	qword ptr [r10 + 0x48], rax
0x1224d:	jmp	0x1218a


0xdebf:	cmp	r11b, 5
0xdec3:	mov	ebp, eax
0xdec5:	je	0xdf80


0xdf80:	cmp	eax, 1
0xdf83:	jle	0xdf70


0xdecb:	cmp	r11b, 6
0xdecf:	jne	0xdf70


0xdf85:	mov	rax, qword ptr [rbx]
0xdf88:	test	al, 0x40
0xdf8a:	je	0xdfa0


0xded5:	cmp	eax, 1
0xded8:	jle	0xdf70


0xdfa0:	mov	rdx, qword ptr [r10 + 8]
0xdfa4:	cmp	byte ptr [rdx + r8], 0xa
0xdfa9:	jne	0xdf8c


0xdf8c:	test	al, 0x80
0xdf8e:	je	0xdf72


0xdede:	mov	r13, qword ptr [r9]
0xdee1:	mov	rsi, qword ptr [r13 + 0x40]
0xdee5:	mov	rdx, qword ptr [r13 + 0x28]
0xdee9:	test	rsi, rsi
0xdeec:	jne	0xdef9


0xdfab:	jmp	0xdf70


0xdf90:	mov	rax, qword ptr [r10 + 8]
0xdf94:	cmp	byte ptr [rax + r8], 0
0xdf99:	je	0xdf70


0xdeee:	cmp	qword ptr [r13 + 0x48], 0
0xdef3:	je	0xdfe8


0xdef9:	mov	rax, qword ptr [r10 + 0x10]
0xdefd:	test	rdx, rdx
0xdf00:	mov	r12d, dword ptr [rax + r8*4]
0xdf04:	jle	0xdf27


0xdf9b:	jmp	0xdf72


0xdfe8:	test	rdx, rdx
0xdfeb:	jne	0xdef9


0xdf27:	mov	rax, qword ptr [r13 + 0x48]
0xdf2b:	test	rax, rax
0xdf2e:	jle	0xe00c


0xdf06:	mov	rcx, qword ptr [r13]
0xdf0a:	cmp	r12d, dword ptr [rcx]
0xdf0d:	je	0xdf62


0xdff1:	test	byte ptr [r13 + 0x20], 1
0xdff6:	jne	0xdf72


0xe00c:	test	rsi, rsi
0xe00f:	jle	0xdff1


0xdf34:	xor	ebx, ebx
0xdf36:	jmp	0xdf4e


0xdf62:	test	byte ptr [r13 + 0x20], 1
0xdf67:	je	0xdf72


0xdf0f:	xor	eax, eax
0xdf11:	jmp	0xdf1e


0xdffc:	jmp	0xdf70


0xe011:	mov	rdx, qword ptr [r13 + 8]
0xe015:	xor	eax, eax
0xe017:	jmp	0xe029


0xdf4e:	mov	rax, qword ptr [r13 + 0x18]
0xdf52:	mov	edi, r12d
0xdf55:	mov	rsi, qword ptr [rax + rbx*8]
0xdf59:	call	0x1bc0


0xdf1e:	add	rax, 1
0xdf22:	cmp	rax, rdx
0xdf25:	jne	0xdf18


0xe029:	cmp	r12d, dword ptr [rdx + rax*4]
0xe02d:	jl	0xe020


0x1bc0:	jmp	qword ptr [rip + 0x21a23a]


0xdf18:	cmp	r12d, dword ptr [rcx + rax*4]
0xdf1c:	je	0xdf62


0xe020:	add	rax, 1
0xe024:	cmp	rax, rsi
0xe027:	je	0xdff1


0xe02f:	mov	rcx, qword ptr [r13 + 0x10]
0xe033:	cmp	r12d, dword ptr [rcx + rax*4]
0xe037:	jg	0xe020




0xe039:	jmp	0xdf62


0x120b0:	cmp	eax, 1
0x120b3:	jle	0x120f8


0x120b5:	mov	rdx, qword ptr [r10 + 0x10]
0x120b9:	cdqe	
0x120bb:	mov	dword ptr [rbx], 1
0x120c1:	add	rax, r12
0x120c4:	mov	edx, dword ptr [rdx + r12*4]
0x120c8:	mov	dword ptr [rbx + 8], edx
0x120cb:	mov	qword ptr [r10 + 0x48], rax
0x120cf:	xor	eax, eax
0x120d1:	mov	rcx, qword ptr [rsp + 0x18]
0x120d6:	xor	rcx, qword ptr fs:[0x28]
0x120df:	jne	0x122c8


0x15455:	mov	rax, qword ptr [r12 + 0x50]
0x1545a:	cmp	qword ptr [r12 + 0x48], rax
0x1545f:	je	0x15479


0x15479:	mov	rsi, qword ptr [r12 + 0x58]
0x1547e:	cmp	rsi, rax
0x15481:	je	0x1549b


0x15461:	lea	rdx, [rax + 0x18]
0x15465:	lea	rsi, [rax + 0x10]
0x15469:	mov	rcx, rbp
0x1546c:	mov	rdi, rbx
0x1546f:	call	0xd950


0x1549b:	mov	rsi, qword ptr [r12 + 0x60]
0x154a0:	cmp	rsi, rax
0x154a3:	je	0x154b8


0x15483:	lea	rdx, [rsi + 0x18]
0x15487:	mov	rcx, rbp
0x1548a:	add	rsi, 0x10
0x1548e:	mov	rdi, rbx
0x15491:	call	0xd950


0x154b8:	or	byte ptr [rbx + 0x38], 8
0x154bc:	xor	eax, eax
0x154be:	pop	rbx
0x154bf:	pop	rbp
0x154c0:	pop	r12
0x154c2:	ret	


0x154a5:	lea	rdx, [rsi + 0x18]
0x154a9:	mov	rcx, rbp
0x154ac:	add	rsi, 0x10
0x154b0:	mov	rdi, rbx
0x154b3:	call	0xd950


0x15496:	mov	rax, qword ptr [r12 + 0x48]
0x1549b:	mov	rsi, qword ptr [r12 + 0x60]
0x154a0:	cmp	rsi, rax
0x154a3:	je	0x154b8


0x15474:	mov	rax, qword ptr [r12 + 0x48]
0x15479:	mov	rsi, qword ptr [r12 + 0x58]
0x1547e:	cmp	rsi, rax
0x15481:	je	0x1549b


0x1576c:	movzx	eax, byte ptr [r15 + 0x38]
0x15771:	mov	r9, qword ptr [rsp + 0x20]
0x15776:	mov	rdx, qword ptr [rsp + 0x18]
0x1577b:	mov	rsi, qword ptr [rsp + 0x10]
0x15780:	mov	r8, qword ptr [rsp + 8]
0x15785:	jmp	0x15561


0x3243:	lea	rsi, [rip + 0x218ed6]
0x324a:	xor	edi, edi
0x324c:	mov	rdx, rbx
0x324f:	call	0x1ad0


0x1ad0:	jmp	qword ptr [rip + 0x21a2b2]




0x3638:	mov	rdi, rax
0x363b:	call	0x6260


0x9437:	cmp	qword ptr [r12 + 0x10], rbx
0x943c:	ja	0x9420


0x9420:	mov	rdi, qword ptr [r12]
0x9424:	mov	rax, rbx
0x9427:	add	rbx, 1
0x942b:	shl	rax, 4
0x942f:	add	rdi, rax
0x9432:	call	0x8e20


0x8e5d:	xor	eax, eax
0x8e5f:	add	rsp, 8
0x8e63:	ret	


0xcd23:	cmp	rax, -1
0xcd27:	mov	rdx, rax
0xcd2a:	mov	qword ptr [rbx + 0x38], rax
0xcd2e:	je	0xcd80


0xcd80:	mov	eax, 0xc
0xcd85:	jmp	0xcd5c


0xcd30:	xor	eax, eax
0xcd32:	cmp	byte ptr [rbx + 0x30], 0xc
0xcd36:	jne	0xcd5c


0xcd5c:	add	rsp, 8
0xcd60:	pop	rbx
0xcd61:	pop	rbp
0xcd62:	ret	


0xcd38:	mov	ecx, dword ptr [rbx + 0x28]
0xcd3b:	shl	rdx, 4
0xcd3f:	add	rdx, qword ptr [rbp]
0xcd43:	and	ecx, 0x3ff
0xcd49:	shl	ecx, 8
0xcd4c:	mov	esi, ecx
0xcd4e:	mov	ecx, dword ptr [rdx + 8]
0xcd51:	and	ecx, 0xfffc00ff
0xcd57:	or	ecx, esi
0xcd59:	mov	dword ptr [rdx + 8], ecx
0xcd5c:	add	rsp, 8
0xcd60:	pop	rbx
0xcd61:	pop	rbp
0xcd62:	ret	


0x906b:	cmp	rax, -1
0x906f:	je	0x90d4


0x90d4:	add	rsp, 8
0x90d8:	pop	rbx
0x90d9:	pop	rbp
0x90da:	pop	r12
0x90dc:	pop	r13
0x90de:	ret	


0x9071:	mov	edi, r12d
0x9074:	mov	r8, qword ptr [rbx]
0x9077:	mov	rsi, rax
0x907a:	and	di, 0x3ff
0x907f:	shl	rsi, 4
0x9083:	mov	ecx, edi
0x9085:	and	ecx, 0x3ff
0x908b:	add	rsi, r8
0x908e:	shl	ecx, 8
0x9091:	mov	edx, ecx
0x9093:	mov	ecx, dword ptr [rsi + 8]
0x9096:	and	ecx, 0xfffc00ff
0x909c:	or	ecx, edx
0x909e:	mov	dword ptr [rsi + 8], ecx
0x90a1:	mov	edx, dword ptr [r8 + r13 + 8]
0x90a6:	and	ecx, 0xfffc00ff
0x90ac:	shr	edx, 8
0x90af:	or	edx, edi
0x90b1:	and	edx, 0x3ff
0x90b7:	shl	edx, 8
0x90ba:	or	edx, ecx
0x90bc:	mov	ecx, edx
0x90be:	mov	dword ptr [rsi + 8], edx
0x90c1:	shr	ecx, 0x10
0x90c4:	mov	edx, ecx
0x90c6:	or	edx, 4
0x90c9:	mov	byte ptr [rsi + 0xa], dl
0x90cc:	mov	rdx, qword ptr [rbx + 0x20]
0x90d0:	mov	qword ptr [rdx + rax*8], rbp
0x90d4:	add	rsp, 8
0x90d8:	pop	rbx
0x90d9:	pop	rbp
0x90da:	pop	r12
0x90dc:	pop	r13
0x90de:	ret	


0x91e7:	cmp	rax, -1
0x91eb:	mov	r13, rax
0x91ee:	je	0x920b


0x91f0:	add	rbx, qword ptr [r14 + 0x28]
0x91f4:	mov	rsi, r13
0x91f7:	mov	rdi, rbx
0x91fa:	call	0x8190


0x91ff:	test	al, al
0x9201:	mov	r9, qword ptr [rsp]
0x9205:	jne	0x90ff


0x90ff:	mov	r8, qword ptr [r14]
0x9102:	mov	rax, r9
0x9105:	mov	rdi, qword ptr [r14 + 0x28]
0x9109:	shl	rax, 4
0x910d:	mov	r12, r13
0x9110:	add	rax, r8
0x9113:	cmp	byte ptr [rax + 8], 4
0x9117:	je	0x92d0


0x922d:	cmp	rax, -1
0x9231:	mov	r13, rax
0x9234:	je	0x920b


0x9236:	mov	rdi, qword ptr [r14 + 0x28]
0x923a:	mov	rsi, r13
0x923d:	add	rdi, rbx
0x9240:	call	0x8190


0x9245:	test	al, al
0x9247:	je	0x920b


0x9249:	mov	rcx, qword ptr [rsp + 8]
0x924e:	mov	r8d, ebp
0x9251:	mov	rdx, r13
0x9254:	mov	rsi, r15
0x9257:	mov	rdi, r14
0x925a:	call	0x90e0


0x925f:	test	eax, eax
0x9261:	je	0x91c9


0x9267:	jmp	0x9210


0x929a:	cmp	rax, -1
0x929e:	mov	r13, rax
0x92a1:	je	0x920b


0x92a7:	add	rbx, qword ptr [r14 + 0x28]
0x92ab:	mov	rsi, rax
0x92ae:	mov	rdi, rbx
0x92b1:	call	0x8190


0x92b6:	test	al, al
0x92b8:	je	0x920b


0x92be:	mov	r9, r15
0x92c1:	jmp	0x90ff


0x9303:	cmp	rax, -1
0x9307:	mov	r13, rax
0x930a:	mov	r9, qword ptr [rsp]
0x930e:	je	0x920b


0x9314:	mov	rax, qword ptr [r14 + 0x18]
0x9318:	mov	qword ptr [rsp], r9
0x931c:	mov	rcx, qword ptr [rax + r15]
0x9320:	mov	qword ptr [rax + r12*8], rcx
0x9324:	jmp	0x91f0


0x11d9e:	test	rax, rax
0x11da1:	jne	0x11d68


0x11da3:	add	r9, qword ptr [r12 + 0x30]
0x11da8:	mov	rdi, qword ptr [r9 + 8]
0x11dac:	lea	rsi, [r9 + 0x10]
0x11db0:	call	0x96d0


0x11d68:	add	rbp, 1
0x11d6c:	cmp	rbp, qword ptr [rbx + 8]
0x11d70:	jge	0x11df8


0x11d76:	mov	r10, qword ptr [rbx + 0x10]
0x11d7a:	mov	r10, qword ptr [r10 + rbp*8]
0x11d7e:	mov	rax, qword ptr [r12 + 0x38]
0x11d83:	mov	rdx, r14
0x11d86:	lea	r9, [r10 + r10*2]
0x11d8a:	shl	r9, 3
0x11d8e:	add	rax, r9
0x11d91:	mov	rdi, qword ptr [rax + 8]
0x11d95:	lea	rsi, [rax + 0x10]
0x11d99:	call	0x96d0


0x11df8:	mov	rbp, qword ptr [rsp + 0x30]
0x11dfd:	jmp	0x11c8d


0x11db5:	test	rax, rax
0x11db8:	jne	0x11d68


0x11dba:	mov	rcx, qword ptr [rsp + 0x10]
0x11dbf:	mov	rdx, rbx
0x11dc2:	mov	rsi, r10
0x11dc5:	mov	rdi, r12
0x11dc8:	call	0xbf20


0x11e9e:	test	rax, rax
0x11ea1:	je	0x11fb7


0x11ea7:	sub	rsp, 8
0x11eab:	lea	rdx, [rbx + 0x30]
0x11eaf:	lea	rsi, [rbx + 0x28]
0x11eb3:	push	r9
0x11eb5:	mov	rdi, qword ptr [rsp + 0x18]
0x11eba:	mov	rcx, r14
0x11ebd:	mov	r9, r10
0x11ec0:	mov	r8, rbp
0x11ec3:	call	0x9980


0x11ec8:	test	al, al
0x11eca:	pop	rdx
0x11ecb:	pop	rcx
0x11ecc:	jne	0x11fb7


0x11ed2:	cmp	qword ptr [rsp + 0x60], 0
0x11ed8:	je	0x11fe8


0x11fe8:	mov	rax, qword ptr [rbx + 0x30]
0x11fec:	lea	rsi, [rbx + 0x20]
0x11ff0:	movdqa	xmm0, xmmword ptr [rbx]
0x11ff4:	mov	qword ptr [rsp + 0x90], rax
0x11ffc:	mov	rax, qword ptr [rsp + 0x38]
0x12001:	movaps	xmmword ptr [rsp + 0x60], xmm0
0x12006:	lea	rdi, [rax + 0x20]
0x1200a:	movdqa	xmm0, xmmword ptr [rbx + 0x10]
0x1200f:	movaps	xmmword ptr [rsp + 0x70], xmm0
0x12014:	movdqa	xmm0, xmmword ptr [rbx + 0x20]
0x12019:	movaps	xmmword ptr [rsp + 0x80], xmm0
0x12021:	call	0xa830


0x11ede:	mov	rax, qword ptr [rsp + 0x38]
0x11ee3:	mov	rsi, r13
0x11ee6:	mov	qword ptr [rsp + 0x70], r14
0x11eeb:	mov	qword ptr [rsp + 0x78], rbp
0x11ef0:	lea	rdi, [rax + 0x20]
0x11ef4:	call	0x8190


0x11ef9:	test	al, al
0x11efb:	je	0x12054


0x12054:	mov	eax, 0xc
0x12059:	jmp	0x1202e


0x11f01:	mov	rdi, qword ptr [rsp + 0x18]
0x11f06:	mov	rax, qword ptr [rsp + 0x60]
0x11f0b:	mov	rsi, qword ptr [rsp + 0x38]
0x11f10:	mov	r15, qword ptr [rax + rdi]
0x11f14:	mov	rdi, qword ptr [rsp + 8]
0x11f19:	call	0xfdb0


0x1202e:	cmp	qword ptr [rsp + 0x60], 0
0x12034:	je	0x118b8


0x12026:	test	eax, eax
0x12028:	je	0x11ede


0xb1de:	test	rax, rax
0xb1e1:	je	0xb1b9


0xb1b9:	add	r15, 0x28
0xb1bd:	cmp	byte ptr [r15 - 8], 0
0xb1c2:	je	0xb07d


0xb1e3:	mov	r8, qword ptr [r15 + 0x18]
0xb1e7:	add	r8, r12
0xb1ea:	mov	r14, r8
0xb1ed:	sub	r14, qword ptr [r15 + 0x10]
0xb1f1:	cmp	r12, r14
0xb1f4:	jne	0xb0f8


0xb1fa:	mov	rcx, qword ptr [r13 + 0x28]
0xb1fe:	lea	rax, [r10 + r10*2]
0xb202:	mov	rsi, qword ptr [rsp]
0xb206:	mov	rdi, r9
0xb209:	lea	rax, [rcx + rax*8]
0xb20d:	mov	rax, qword ptr [rax + 0x10]
0xb211:	mov	r14, qword ptr [rax]
0xb214:	mov	rdx, r14
0xb217:	call	0x96d0


0xb0f8:	mov	rax, qword ptr [r13 + 0x18]
0xb0fc:	mov	rcx, qword ptr [rax + r10*8]
0xb100:	mov	r10, qword ptr [rbx + 0xb8]
0xb107:	lea	rax, [r14*8]
0xb10f:	mov	qword ptr [rsp + 0x18], rax
0xb114:	add	r10, rax
0xb117:	mov	qword ptr [rsp + 8], rcx
0xb11c:	mov	r9, qword ptr [r10]
0xb11f:	test	r9, r9
0xb122:	je	0xb2b0


0xb2b0:	mov	edi, 8
0xb2b5:	mov	qword ptr [rsp + 0x18], r10
0xb2ba:	mov	qword ptr [rsp + 0x50], 1
0xb2c3:	mov	qword ptr [rsp + 0x58], 1
0xb2cc:	call	0x1da0


0xb128:	mov	rdi, qword ptr [r9 + 0x10]
0xb12c:	lea	rsi, [r9 + 0x18]
0xb130:	mov	rdx, rcx
0xb133:	call	0x96d0


0xb138:	test	rax, rax
0xb13b:	jne	0xb1b9


0xb13d:	mov	rdi, qword ptr [rsp + 0x10]
0xb142:	lea	rsi, [r9 + 8]
0xb146:	call	0xa830


0xb14b:	mov	rsi, qword ptr [rsp + 8]
0xb150:	mov	rdi, qword ptr [rsp + 0x10]
0xb155:	mov	dword ptr [rsp + 0x4c], eax
0xb159:	call	0x8190


0xb15e:	mov	edx, dword ptr [rsp + 0x4c]
0xb162:	test	edx, edx
0xb164:	jne	0xb306


0xb16a:	cmp	al, 1
0xb16c:	jne	0xb306


0xb306:	mov	rdi, qword ptr [rsp + 0x60]
0xb30b:	call	0x1b00


0xb172:	mov	r10, qword ptr [rsp + 0x18]
0xb177:	add	r10, qword ptr [rbx + 0xb8]
0xb17e:	mov	rdx, qword ptr [rsp + 0x10]
0xb183:	mov	rdi, qword ptr [rsp + 0x38]
0xb188:	mov	rsi, r13
0xb18b:	mov	qword ptr [rsp + 8], r10
0xb190:	call	0xace0


0xb195:	mov	r10, qword ptr [rsp + 8]
0xb19a:	mov	rdi, qword ptr [rsp + 0x60]
0xb19f:	mov	qword ptr [r10], rax
0xb1a2:	call	0x1b00


0xb21c:	test	rax, rax
0xb21f:	jne	0xb1b9


0xb221:	mov	edi, 8
0xb226:	mov	qword ptr [rsp + 0x50], 1
0xb22f:	mov	qword ptr [rsp + 0x58], 1
0xb238:	call	0x1da0


0xc0d8:	test	rax, rax
0xc0db:	jne	0xc102


0xc0dd:	lea	rbx, [r14 + 0x10]
0xc0e1:	mov	rdi, qword ptr [r14 + 8]
0xc0e5:	mov	rsi, rbx
0xc0e8:	call	0x96d0


0xc102:	add	r9, 1
0xc106:	cmp	qword ptr [rbp + 8], r9
0xc10a:	jg	0xc0c0


0xc0c0:	mov	rax, qword ptr [rbp + 0x10]
0xc0c4:	mov	rdi, qword ptr [rsp + 0x28]
0xc0c9:	mov	rsi, r11
0xc0cc:	mov	r10, qword ptr [rax + r9*8]
0xc0d0:	mov	rdx, r10
0xc0d3:	call	0x96d0


0xc0ed:	sub	rax, 1
0xc0f1:	mov	rdx, rax
0xc0f4:	js	0xc102


0xc0f6:	lea	rdi, [r14 + 8]
0xc0fa:	mov	rsi, rbx
0xc0fd:	call	0x9850


0xc02d:	mov	rcx, qword ptr [rsp + 8]
0xc032:	mov	r8, qword ptr [rsp]
0xc036:	cmp	qword ptr [rcx + 8], 1
0xc03b:	jg	0xbf88


0xc041:	test	rax, rax
0xc044:	jne	0xbfd0


0xbf88:	test	rax, rax
0xbf8b:	jne	0xc068


0xc046:	mov	rdi, qword ptr [r14 + 8]
0xc04a:	lea	rsi, [r14 + 0x10]
0xc04e:	mov	rdx, r8
0xc051:	call	0x96d0


0xbf91:	mov	rdi, qword ptr [r14 + 8]
0xbf95:	lea	rsi, [r14 + 0x10]
0xbf99:	mov	rdx, r8
0xbf9c:	call	0x96d0


0xc068:	mov	r15, qword ptr [r15 + 8]
0xc06c:	test	r15, r15
0xc06f:	jle	0xbfd0


0xc075:	mov	rdx, r15
0xc078:	mov	rsi, r11
0xc07b:	mov	rdi, r10
0xc07e:	call	0x96d0


0xc083:	test	rax, rax
0xc086:	jne	0xbfd0


0xc08c:	mov	rdi, qword ptr [r14 + 8]
0xc090:	lea	rsi, [r14 + 0x10]
0xc094:	call	0x96d0


0xc099:	test	rax, rax
0xc09c:	je	0xbfd0


0xc0a2:	jmp	0xbfaa


0xbfaa:	mov	rdx, qword ptr [r12 + 0x38]
0xbfaf:	mov	rsi, qword ptr [rsp + 0x10]
0xbfb4:	mov	rdi, qword ptr [rsp + 0x18]
0xbfb9:	add	rdx, r9
0xbfbc:	call	0xa1e0


0xbfc1:	test	eax, eax
0xbfc3:	jne	0xc140


0xbfc9:	mov	r10, qword ptr [rbp + 8]
0xbfcd:	nop	dword ptr [rax]
0xbfd0:	add	rbx, 1
0xbfd4:	cmp	r10, rbx
0xbfd7:	jle	0xc0b0


0xc140:	mov	rdi, qword ptr [rsp + 0x30]
0xc145:	mov	dword ptr [rsp], eax
0xc148:	call	0x1b00


0xbfa1:	test	rax, rax
0xbfa4:	je	0xc068


0xc056:	test	rax, rax
0xc059:	jne	0xbfaa


0xc05f:	jmp	0xbfd0


0x9780:	test	rax, rax
0x9783:	jne	0x97f0


0x9785:	mov	rax, rbx
0x9788:	shl	rax, 4
0x978c:	add	rax, qword ptr [r12]
0x9790:	movzx	edx, byte ptr [rax + 8]
0x9794:	cmp	edx, r13d
0x9797:	jne	0x979e


0x97f0:	xor	eax, eax
0x97f2:	add	rsp, 8
0x97f6:	pop	rbx
0x97f7:	pop	rbp
0x97f8:	pop	r12
0x97fa:	pop	r13
0x97fc:	pop	r14
0x97fe:	pop	r15
0x9800:	ret	


0x9799:	cmp	qword ptr [rax], r15
0x979c:	je	0x97d8


0x979e:	mov	rsi, rbx
0x97a1:	mov	rdi, rbp
0x97a4:	call	0x8190


0x97d8:	cmp	r13d, 9
0x97dc:	jne	0x97f0


0x97de:	mov	rsi, rbx
0x97e1:	mov	rdi, rbp
0x97e4:	call	0x8190


0x97e9:	test	al, al
0x97eb:	je	0x9808


0x9808:	add	rsp, 8
0x980c:	mov	eax, 0xc
0x9811:	pop	rbx
0x9812:	pop	rbp
0x9813:	pop	r12
0x9815:	pop	r13
0x9817:	pop	r14
0x9819:	pop	r15
0x981b:	ret	


0x97a9:	test	al, al
0x97ab:	je	0x9808


0x97ad:	lea	rbx, [rbx + rbx*2]
0x97b1:	mov	rdx, qword ptr [r12 + 0x28]
0x97b6:	shl	rbx, 3
0x97ba:	add	rdx, rbx
0x97bd:	mov	rax, qword ptr [rdx + 8]
0x97c1:	test	rax, rax
0x97c4:	je	0x97f0


0x97c6:	cmp	rax, 2
0x97ca:	mov	rdx, qword ptr [rdx + 0x10]
0x97ce:	je	0x9820


0x9820:	mov	rdx, qword ptr [rdx + 8]
0x9824:	mov	r8d, r13d
0x9827:	mov	rcx, r15
0x982a:	mov	rsi, rbp
0x982d:	mov	rdi, r12
0x9830:	call	0x9750


0x97d0:	mov	rbx, qword ptr [rdx]
0x97d3:	jmp	0x9771


0x9771:	mov	rdi, qword ptr [rbp + 8]
0x9775:	mov	rdx, rbx
0x9778:	mov	rsi, r14
0x977b:	call	0x96d0


0x9835:	test	eax, eax
0x9837:	jne	0x97f2


0x9839:	mov	rax, qword ptr [r12 + 0x28]
0x983e:	mov	rdx, qword ptr [rax + rbx + 0x10]
0x9843:	jmp	0x97d0


0x97f2:	add	rsp, 8
0x97f6:	pop	rbx
0x97f7:	pop	rbp
0x97f8:	pop	r12
0x97fa:	pop	r13
0x97fc:	pop	r14
0x97fe:	pop	r15
0x9800:	ret	


0xa5d7:	mov	rdi, r15
0xa5da:	mov	r8, r14
0xa5dd:	xor	ecx, ecx
0xa5df:	xor	edx, edx
0xa5e1:	mov	rsi, rbx
0xa5e4:	mov	r12, rax
0xa5e7:	mov	byte ptr [rsp + 0x28], 9
0xa5ec:	call	0xa390


0xa5f1:	mov	r15, rax
0xa5f4:	jmp	0xa74d


0xa74d:	mov	rdi, qword ptr [rsp + 8]
0xa752:	mov	r8, r14
0xa755:	mov	rcx, r15
0xa758:	mov	rdx, rbp
0xa75b:	mov	rsi, rbx
0xa75e:	mov	byte ptr [rsp + 0x28], 0x10
0xa763:	call	0xa390


0xa768:	mov	r11, rax
0xa76b:	jmp	0xa64c


0xa64c:	mov	rdi, qword ptr [rsp + 8]
0xa651:	mov	r8, r14
0xa654:	mov	rcx, r11
0xa657:	mov	rdx, r12
0xa65a:	mov	rsi, rbx
0xa65d:	mov	byte ptr [rsp + 0x28], 0x10
0xa662:	mov	qword ptr [rsp + 0x10], r11
0xa667:	call	0xa390


0xa66c:	test	rax, rax
0xa66f:	mov	rbp, rax
0xa672:	je	0xa770


0xa770:	mov	rax, qword ptr [rsp + 0x18]
0xa775:	xor	ebp, ebp
0xa777:	mov	dword ptr [rax], 0xc
0xa77d:	jmp	0xa6cd


0xa678:	mov	r11, qword ptr [rsp + 0x10]
0xa67d:	test	r11, r11
0xa680:	je	0xa770


0xa686:	test	r12, r12
0xa689:	je	0xa770


0xa68f:	test	r15, r15
0xa692:	je	0xa770


0xa698:	mov	rax, qword ptr [r13 + 0x28]
0xa69c:	mov	qword ptr [r15 + 0x28], rax
0xa6a0:	mov	qword ptr [r12 + 0x28], rax
0xa6a5:	movzx	eax, byte ptr [r13 + 0x32]
0xa6aa:	movzx	edx, byte ptr [r15 + 0x32]
0xa6af:	and	eax, 8
0xa6b2:	and	edx, 0xfffffff7
0xa6b5:	mov	ecx, eax
0xa6b7:	or	edx, ecx
0xa6b9:	mov	byte ptr [r15 + 0x32], dl
0xa6bd:	movzx	eax, byte ptr [r12 + 0x32]
0xa6c3:	and	eax, 0xfffffff7
0xa6c6:	or	eax, ecx
0xa6c8:	mov	byte ptr [r12 + 0x32], al
0xa6cd:	mov	rdi, qword ptr [rsp + 0x38]
0xa6d2:	xor	rdi, qword ptr fs:[0x28]
0xa6db:	mov	rax, rbp
0xa6de:	jne	0xa782


0xa62c:	mov	rdi, r15
0xa62f:	mov	r8, r14
0xa632:	xor	ecx, ecx
0xa634:	xor	edx, edx
0xa636:	mov	rsi, rbx
0xa639:	mov	r12, rax
0xa63c:	mov	byte ptr [rsp + 0x28], 9
0xa641:	call	0xa390


0xa646:	mov	r11, rax
0xa649:	mov	r15, rax
0xa64c:	mov	rdi, qword ptr [rsp + 8]
0xa651:	mov	r8, r14
0xa654:	mov	rcx, r11
0xa657:	mov	rdx, r12
0xa65a:	mov	rsi, rbx
0xa65d:	mov	byte ptr [rsp + 0x28], 0x10
0xa662:	mov	qword ptr [rsp + 0x10], r11
0xa667:	call	0xa390


0xa724:	xor	ecx, ecx
0xa726:	xor	edx, edx
0xa728:	mov	rdi, r15
0xa72b:	mov	r8, r14
0xa72e:	mov	rsi, rbx
0xa731:	mov	r12, rax
0xa734:	mov	byte ptr [rsp + 0x28], 9
0xa739:	call	0xa390


0xa73e:	test	rbp, rbp
0xa741:	mov	r15, rax
0xa744:	mov	r11, rax
0xa747:	je	0xa64c


0xa4b3:	test	rax, rax
0xa4b6:	mov	qword ptr [r14], rax
0xa4b9:	je	0xa50c


0xa50c:	mov	rcx, qword ptr [rsp + 8]
0xa511:	xor	rcx, qword ptr fs:[0x28]
0xa51a:	jne	0xa53c


0xa4bb:	mov	qword ptr [rax], rbp
0xa4be:	mov	rbp, qword ptr [r14]
0xa4c1:	or	byte ptr [rbp + 0x32], 4
0xa4c5:	mov	rax, qword ptr [rbx + 8]
0xa4c9:	test	rax, rax
0xa4cc:	je	0xa4e0


0xa51c:	add	rsp, 0x10
0xa520:	pop	rbx
0xa521:	pop	rbp
0xa522:	pop	r12
0xa524:	pop	r13
0xa526:	pop	r14
0xa528:	ret	


0xa53c:	call	0x1c20


0xa4e0:	xor	edx, edx
0xa4e2:	jmp	0xa4eb


0xa4ce:	lea	r14, [rbp + 8]
0xa4d2:	mov	rbx, rax
0xa4d5:	jmp	0xa4a0


0xa4eb:	mov	rax, qword ptr [rbx + 0x10]
0xa4ef:	test	rax, rax
0xa4f2:	je	0xa4f9


0xa4a0:	lea	r8, [rbx + 0x28]
0xa4a4:	xor	ecx, ecx
0xa4a6:	xor	edx, edx
0xa4a8:	mov	rsi, r12
0xa4ab:	mov	rdi, r13
0xa4ae:	call	0xa390


0xa4f9:	mov	rax, qword ptr [rbx]
0xa4fc:	mov	rbp, qword ptr [rbp]
0xa500:	mov	rdx, rbx
0xa503:	test	rax, rax
0xa506:	jne	0xa4e8


0xa4f4:	cmp	rax, rdx
0xa4f7:	jne	0xa530


0xa508:	mov	rax, qword ptr [rsp]
0xa50c:	mov	rcx, qword ptr [rsp + 8]
0xa511:	xor	rcx, qword ptr fs:[0x28]
0xa51a:	jne	0xa53c


0xa4e8:	mov	rbx, rax
0xa4eb:	mov	rax, qword ptr [rbx + 0x10]
0xa4ef:	test	rax, rax
0xa4f2:	je	0xa4f9


0xa530:	lea	r14, [rbp + 0x10]
0xa534:	mov	rbx, rax
0xa537:	jmp	0xa4a0


0x10e7f:	mov	rdx, qword ptr [rsp + 0x60]
0x10e84:	mov	rdi, qword ptr [rsp + 0x80]
0x10e8c:	mov	ecx, eax
0x10e8e:	add	r12, qword ptr [rsp + 0x1d8]
0x10e96:	mov	rsi, r13
0x10e99:	call	0xaa20


0x10e9e:	mov	rdi, qword ptr [rsp + 0xf0]
0x10ea6:	mov	qword ptr [r12], rax
0x10eaa:	call	0x1b00


0x10f74:	mov	rdi, qword ptr [rsp + 0x80]
0x10f7c:	mov	rdx, qword ptr [rsp + 0x60]
0x10f81:	mov	ecx, eax
0x10f83:	mov	rsi, r13
0x10f86:	call	0xaa20


0x10f8b:	mov	rdi, qword ptr [rsp + 0x1d8]
0x10f93:	mov	qword ptr [r15], rax
0x10f96:	cmp	qword ptr [rdi + rbp*8], 0
0x10f9b:	jne	0x10ec2


0x10fa1:	mov	eax, dword ptr [rsp + 0xd4]
0x10fa8:	test	eax, eax
0x10faa:	je	0x10ec2


0x10fb0:	mov	rbx, qword ptr [rsp + 0xa0]
0x10fb8:	jmp	0x110c0


0x110c0:	test	rdi, rdi
0x110c3:	mov	dword ptr [rsp + 0xd0], eax
0x110ca:	je	0x111b0


0x10f1a:	mov	ecx, dword ptr [rsp + 0x10]
0x10f1e:	shr	ecx, 8
0x10f21:	mov	edx, ecx
0x10f23:	and	dx, 0x3ff
0x10f28:	test	cl, 4
0x10f2b:	jne	0x10d88


0x10f31:	and	ecx, 8
0x10f34:	je	0x10d99


0x10d88:	test	al, 1
0x10d8a:	je	0x10eca


0x10d99:	test	dl, 0x20
0x10d9c:	je	0x10da6


0x10f3a:	test	al, 1
0x10f3c:	je	0x10d99


0x10d90:	and	ecx, 8
0x10d93:	jne	0x10eca


0x10da6:	and	edx, 0x80
0x10dac:	je	0x10dc0


0x10d9e:	test	al, 2
0x10da0:	je	0x10eca


0x10f42:	jmp	0x10eca


0x10dae:	test	al, 8
0x10db0:	je	0x10eca


0x10fe9:	test	al, 1
0x10feb:	je	0x110a0


0x110a0:	mov	r13, qword ptr [rbp + r13*8]
0x110a5:	jmp	0x108b5


0x10ff1:	mov	r13, qword ptr [rbp + r13*8 + 0x800]
0x10ff9:	jmp	0x108b5


0x108b5:	cmp	qword ptr [rsp + 0x1d8], 0
0x108be:	je	0x108d4


0x110f4:	test	al, 1
0x110f6:	je	0x11265


0x11265:	test	eax, eax
0x11267:	je	0x1076e


0x110fc:	mov	r14, qword ptr [rbx + 0x50]
0x11100:	test	r14, r14
0x11103:	jne	0x1076e


0x1126d:	mov	edx, eax
0x1126f:	and	edx, 6
0x11272:	cmp	edx, 6
0x11275:	je	0x116df


0x11109:	mov	eax, dword ptr [rsp + 0xd0]
0x11110:	cmp	eax, 0xc
0x11113:	mov	dword ptr [rsp + 0x5c], eax
0x11117:	je	0x10c40


0x116df:	mov	r14, qword ptr [rbx + 0x60]
0x116e3:	jmp	0x11100


0x1127b:	test	al, 2
0x1127d:	je	0x11730


0x1111d:	lea	rcx, [rip + 0x6acc]
0x11124:	lea	rsi, [rip + 0x64dd]
0x1112b:	lea	rdi, [rip + 0x658a]
0x11132:	mov	edx, 0x435
0x11137:	call	0x1c90


0x11100:	test	r14, r14
0x11103:	jne	0x1076e


0x11730:	test	al, 4
0x11732:	je	0x1076e


0x11283:	mov	r14, qword ptr [rbx + 0x58]
0x11287:	jmp	0x11100


0x11738:	mov	rdx, qword ptr [r14 + 0x50]
0x1173c:	mov	rdi, qword ptr [rsp + 0x28]
0x11741:	mov	ecx, eax
0x11743:	mov	rsi, rbx
0x11746:	call	0xaa20


0x1174b:	mov	r14, rax
0x1174e:	jmp	0x11100


0xfca3:	mov	r8, qword ptr [rbx + 0xb8]
0xfcaa:	mov	rdx, qword ptr [rsp]
0xfcae:	mov	ecx, eax
0xfcb0:	mov	rsi, r15
0xfcb3:	mov	rdi, r13
0xfcb6:	add	r8, rbp
0xfcb9:	mov	qword ptr [rsp + 8], r8
0xfcbe:	call	0xaa20


0xfcc3:	mov	r8, qword ptr [rsp + 8]
0xfcc8:	test	r14, r14
0xfccb:	mov	rbp, rax
0xfcce:	mov	qword ptr [r8], rax
0xfcd1:	je	0xfc17


0xfcd7:	mov	rdi, qword ptr [rsp + 0x20]
0xfcdc:	call	0x1b00


0xf719:	mov	rsi, qword ptr [rsp + 0x60]
0xf71e:	mov	ecx, eax
0xf720:	mov	rax, qword ptr [r14 + 0xb8]
0xf727:	lea	r10, [rbx*8]
0xf72f:	mov	qword ptr [rsp + 0x10], 0
0xf738:	lea	r11, [rax + r10]
0xf73c:	mov	rax, qword ptr [rax + rsi]
0xf740:	mov	rdx, qword ptr [r11]
0xf743:	test	rax, rax
0xf746:	je	0xf751


0xf751:	test	rdx, rdx
0xf754:	je	0xfa70


0xf748:	mov	rax, qword ptr [rax + 0x10]
0xf74c:	mov	qword ptr [rsp + 0x10], rax
0xf751:	test	rdx, rdx
0xf754:	je	0xfa70


0xfa70:	mov	rdx, qword ptr [rsp + 0x18]
0xfa75:	mov	rdi, qword ptr [rsp + 0x78]
0xfa7a:	mov	rsi, rbp
0xfa7d:	mov	qword ptr [rsp + 0x28], r11
0xfa82:	call	0xaa20


0xf75a:	mov	rsi, qword ptr [rdx + 0x50]
0xf75e:	mov	rdi, qword ptr [rsp + 0x68]
0xf763:	mov	rdx, qword ptr [rsp + 0x18]
0xf768:	mov	qword ptr [rsp + 0x30], r10
0xf76d:	mov	dword ptr [rsp + 0x28], ecx
0xf771:	call	0xa8c0


0xf776:	test	eax, eax
0xf778:	mov	dword ptr [rsp + 0x8c], eax
0xf77f:	mov	ecx, dword ptr [rsp + 0x28]
0xf783:	mov	r10, qword ptr [rsp + 0x30]
0xf788:	jne	0xfb18


0xf78e:	add	r10, qword ptr [r14 + 0xb8]
0xf795:	mov	rdx, qword ptr [rsp + 0x68]
0xf79a:	mov	rsi, rbp
0xf79d:	mov	rdi, qword ptr [rsp + 0x78]
0xf7a2:	mov	qword ptr [rsp + 0x28], r10
0xf7a7:	call	0xaa20


0xfb18:	mov	rdi, qword ptr [rsp + 0xa0]
0xfb20:	call	0x1b00


0xf7ac:	mov	r10, qword ptr [rsp + 0x28]
0xf7b1:	mov	rdi, qword ptr [rsp + 0xa0]
0xf7b9:	mov	qword ptr [r10], rax
0xf7bc:	call	0x1b00


0xfa87:	mov	r11, qword ptr [rsp + 0x28]
0xfa8c:	mov	rdx, qword ptr [r14 + 0xb8]
0xfa93:	mov	qword ptr [r11], rax
0xfa96:	cmp	qword ptr [rdx + rbx*8], 0
0xfa9b:	jne	0xf7d3


0xfaa1:	mov	eax, dword ptr [rsp + 0x8c]
0xfaa8:	test	eax, eax
0xfaaa:	je	0xf7d3


0xf7d3:	cmp	qword ptr [rsp + 0x20], 0
0xf7d9:	jne	0xf7f8


0xfab0:	jmp	0xf648


0xf7db:	mov	rax, qword ptr [rsp + 0x60]
0xf7e0:	mov	rbx, qword ptr [rsp + 0x10]
0xf7e5:	mov	rax, qword ptr [rdx + rax]
0xf7e9:	cmp	qword ptr [rax + 0x10], rbx
0xf7ed:	jg	0xfab8


0xfab8:	mov	rax, qword ptr [rsp + 0x18]
0xfabd:	mov	rcx, qword ptr [rsp + 8]
0xfac2:	mov	rdi, r14
0xfac5:	lea	r8, [rax + 0x10]
0xfac9:	lea	rbx, [rax + 8]
0xfacd:	mov	rdx, r8
0xfad0:	mov	rsi, rbx
0xfad3:	mov	qword ptr [rsp + 0x10], r8
0xfad8:	call	0xb360


0xfadd:	test	eax, eax
0xfadf:	mov	dword ptr [rsp + 0x8c], eax
0xfae6:	jne	0xf648


0xfaec:	mov	r8, qword ptr [rsp + 0x10]
0xfaf1:	mov	rsi, rbx
0xfaf4:	mov	rdi, r14
0xfaf7:	mov	rdx, r8
0xfafa:	call	0xf2d0


0xfaff:	test	eax, eax
0xfb01:	mov	dword ptr [rsp + 0x8c], eax
0xfb08:	je	0xf7f8


0xfb0e:	jmp	0xf648


0xbaaa:	cmp	rbp, r12
0xbaad:	mov	dword ptr [rbx + 0x70], eax
0xbab0:	mov	r8, qword ptr [rsp]
0xbab4:	jne	0xbb38


0xbaba:	cmp	rbp, r8
0xbabd:	jge	0xbb38


0xbb38:	mov	rax, qword ptr [rbx + 0x50]
0xbb3c:	mov	byte ptr [rbx + 0x8c], 0
0xbb43:	add	rax, rbp
0xbb46:	sub	rax, r15
0xbb49:	mov	qword ptr [rbx + 0x58], rax
0xbb4d:	mov	rax, qword ptr [rbx + 0x60]
0xbb51:	add	rax, rbp
0xbb54:	sub	rax, r15
0xbb57:	test	r12, r12
0xbb5a:	mov	qword ptr [rbx + 0x68], rax
0xbb5e:	jle	0xbb83


0xbabf:	cmp	qword ptr [r14 + r12*8], rbp
0xbac3:	jne	0xbb38


0xbb83:	cmp	r12, r8
0xbb86:	jge	0xbdb8


0xbb60:	cmp	qword ptr [r14 + r12*8 - 8], rbp
0xbb65:	je	0xbb7b


0xbac5:	mov	rdi, qword ptr [rbx + 0x10]
0xbac9:	sub	r8, rbp
0xbacc:	lea	rdx, [r8*4]
0xbad4:	lea	rsi, [rdi + rbp*4]
0xbad8:	call	0x1e50


0xbb8c:	mov	rax, qword ptr [rbx + 0x10]
0xbb90:	jmp	0xbba5


0xbdb8:	jne	0xbbac


0xbb7b:	test	r13, r13
0xbb7e:	mov	r12, r13
0xbb81:	jne	0xbb70


0xbb67:	jmp	0xbb83


0x1e50:	jmp	qword ptr [rip + 0x21a0f2]


0xbba5:	cmp	dword ptr [rax + r12*4], -1
0xbbaa:	je	0xbb98


0xbbac:	mov	rdx, qword ptr [r14 + r12*8]
0xbbb0:	sub	rdx, rbp
0xbbb3:	cmp	rdx, 0
0xbbb7:	mov	qword ptr [rbx + 0x30], rdx
0xbbbb:	je	0xbbf1


0xbb70:	cmp	qword ptr [r14 + r13*8 - 8], rbp
0xbb75:	jne	0xbb83




0xbb98:	add	r12, 1
0xbb9c:	cmp	r12, r8
0xbb9f:	je	0xbdc0


0xbbf1:	movzx	eax, byte ptr [rbx + 0x8b]
0xbbf8:	mov	qword ptr [rbx + 0x38], rdx
0xbbfc:	test	al, al
0xbbfe:	je	0xb87a


0xbbbd:	jle	0xbbdf


0xbb77:	sub	r13, 1
0xbb7b:	test	r13, r13
0xbb7e:	mov	r12, r13
0xbb81:	jne	0xbb70


0xbdc0:	mov	qword ptr [rbx + 0x30], 0
0xbdc8:	xor	edx, edx
0xbdca:	jmp	0xbbf1


0xbbdf:	mov	rdi, qword ptr [rbx + 8]
0xbbe3:	mov	esi, 0xff
0xbbe8:	call	0x1cb0


0xbbbf:	mov	rax, qword ptr [rbx + 0x10]
0xbbc3:	lea	rcx, [rax + rdx*4]
0xbbc7:	nop	word ptr [rax + rax]
0xbbd0:	mov	dword ptr [rax], 0xffffffff
0xbbd6:	add	rax, 4
0xbbda:	cmp	rcx, rax
0xbbdd:	jne	0xbbd0


0xbbd0:	mov	dword ptr [rax], 0xffffffff
0xbbd6:	add	rax, 4
0xbbda:	cmp	rcx, rax
0xbbdd:	jne	0xbbd0


0xbde8:	mov	dword ptr [rbx + 0x70], eax
0xbdeb:	jmp	0xba2a


0xba2a:	cmp	r12, 0
0xba2e:	jne	0xbe4a


0xba34:	movzx	eax, byte ptr [rbx + 0x8b]
0xba3b:	mov	qword ptr [rbx + 0x38], r12
0xba3f:	jmp	0xbbfc


0xbe4a:	jle	0xbe67


0xbe67:	cmp	byte ptr [rbx + 0x8b], 0
0xbe6e:	jne	0xbec8


0xbe4c:	mov	rax, qword ptr [rbx + 0x10]
0xbe50:	lea	rdx, [rax + r12*4]
0xbe54:	nop	dword ptr [rax]
0xbe58:	mov	dword ptr [rax], 0xffffffff
0xbe5e:	add	rax, 4
0xbe62:	cmp	rdx, rax
0xbe65:	jne	0xbe58


0xbe70:	mov	qword ptr [rbx + 0x38], r12
0xbe74:	jmp	0xb87a


0xbec8:	mov	rdi, qword ptr [rbx + 8]
0xbecc:	mov	rdx, r12
0xbecf:	mov	esi, 0xff
0xbed4:	call	0x1cb0


0xbe58:	mov	dword ptr [rax], 0xffffffff
0xbe5e:	add	rax, 4
0xbe62:	cmp	rdx, rax
0xbe65:	jne	0xbe58


0xb84e:	mov	r8, qword ptr [rsp]
0xb852:	mov	dword ptr [rbx + 0x70], eax
0xb855:	sub	r8, rbp
0xb858:	cmp	dword ptr [rbx + 0x90], 1
0xb85f:	jg	0xb900


0xb865:	cmp	byte ptr [rbx + 0x8b], 0
0xb86c:	jne	0xbc10


0xb900:	mov	rdi, qword ptr [rbx + 0x10]
0xb904:	lea	rdx, [r8*4]
0xb90c:	lea	rsi, [rdi + rbp*4]
0xb910:	call	0x1e50


0xb872:	sub	qword ptr [rbx + 0x38], rbp
0xb876:	mov	qword ptr [rbx + 0x30], r8
0xb87a:	add	qword ptr [rbx + 8], rbp
0xb87e:	mov	rax, qword ptr [rbx + 0x58]
0xb882:	sub	qword ptr [rbx + 0x68], rbp
0xb886:	mov	qword ptr [rbx + 0x28], r15
0xb88a:	sub	rax, rbp
0xb88d:	cmp	dword ptr [rbx + 0x90], 1
0xb894:	mov	qword ptr [rbx + 0x58], rax
0xb898:	jle	0xb938


0xbc10:	mov	rdi, qword ptr [rbx + 8]
0xbc14:	mov	rdx, r8
0xbc17:	lea	rsi, [rdi + rbp]
0xbc1b:	call	0x1e50


0xf3de:	mov	edx, ebp
0xf3e0:	shr	edx, 8
0xf3e3:	mov	ecx, edx
0xf3e5:	and	cx, 0x3ff
0xf3ea:	test	dl, 4
0xf3ed:	jne	0xf358


0xf3f3:	and	edx, 8
0xf3f6:	je	0xf361


0xf358:	test	al, 1
0xf35a:	je	0xf380


0xf361:	test	cl, 0x20
0xf364:	je	0xf36a


0xf3fc:	test	al, 1
0xf3fe:	je	0xf361


0xf35c:	and	edx, 8
0xf35f:	jne	0xf380


0xf36a:	and	ecx, 0x80
0xf370:	je	0xf410


0xf366:	test	al, 2
0xf368:	je	0xf380


0xf404:	jmp	0xf380


0xf376:	test	al, 8
0xf378:	jne	0xf410


0xb612:	mov	ecx, ebx
0xb614:	mov	edx, eax
0xb616:	and	cx, 0x3ff
0xb61b:	test	bl, 4
0xb61e:	je	0xb688


0xb688:	and	ebx, 8
0xb68b:	je	0xb62c


0xb620:	xor	eax, eax
0xb622:	test	dl, 1
0xb625:	je	0xb64c


0xb62c:	test	cl, 0x20
0xb62f:	je	0xb638


0xb68d:	test	al, 1
0xb68f:	je	0xb62c


0xb627:	and	ebx, 8
0xb62a:	jne	0xb64c


0xb638:	shr	edx, 3
0xb63b:	mov	eax, 1
0xb640:	and	edx, 1
0xb643:	and	ecx, 0x80
0xb649:	cmovne	eax, edx
0xb64c:	pop	rbx
0xb64d:	ret	


0xb631:	xor	eax, eax
0xb633:	test	dl, 2
0xb636:	je	0xb64c


0xb691:	xor	eax, eax
0xb693:	pop	rbx
0xb694:	ret	


0xfd15:	lea	rdx, [rsp + 0x10]
0xfd1a:	mov	ecx, eax
0xfd1c:	mov	rsi, r15
0xfd1f:	mov	rdi, r13
0xfd22:	call	0xaa20


0xfd27:	mov	rbp, rax
0xfd2a:	mov	qword ptr [r14], rax
0xfd2d:	jmp	0xfc17


0xe1a5:	cmp	r12, rbp
0xe1a8:	mov	r13d, eax
0xe1ab:	je	0xe583


0xe583:	mov	edi, 8
0xe588:	mov	qword ptr [rsp + 0x90], 1
0xe594:	mov	qword ptr [rsp + 0x98], 1
0xe5a0:	call	0x1da0


0xe1b1:	mov	rbp, qword ptr [r14 + r12*8]
0xe1b5:	test	rbp, rbp
0xe1b8:	je	0xe1c4


0xe1c4:	pxor	xmm0, xmm0
0xe1c8:	mov	qword ptr [rsp + 0xa0], 0
0xe1d4:	movaps	xmmword ptr [rsp + 0x90], xmm0
0xe1dc:	cmp	r12, qword ptr [rsp + 0x40]
0xe1e1:	jge	0xe508


0xe1ba:	test	byte ptr [rbp + 0x68], 0x40
0xe1be:	jne	0xe6e0


0xe1e7:	mov	ecx, dword ptr [r15 + 0xe0]
0xe1ee:	test	ecx, ecx
0xe1f0:	js	0xe508


0xe508:	mov	rdi, qword ptr [rsp + 0xa0]
0xe510:	call	0x1b00


0xe6e0:	lea	rbx, [rsp + 0x90]
0xe6e8:	lea	rsi, [rbp + 8]
0xe6ec:	mov	rdi, rbx
0xe6ef:	call	0xa830


0xe1f6:	lea	rbx, [rsp + 0x90]
0xe1fe:	lea	rax, [r12*8 + 8]
0xe206:	mov	qword ptr [rsp], r12
0xe20a:	mov	qword ptr [rsp + 0x20], 0
0xe213:	mov	qword ptr [rsp + 8], rbx
0xe218:	lea	rbx, [rsp + 0xb0]
0xe220:	mov	qword ptr [rsp + 0x10], rax
0xe225:	mov	rax, qword ptr [r15 + 0xb8]
0xe22c:	mov	qword ptr [rsp + 0x18], rbx
0xe231:	lea	rbx, [rsp + 0x8c]
0xe239:	mov	qword ptr [rsp + 0x58], rbx
0xe23e:	mov	rcx, qword ptr [rsp + 0x10]
0xe243:	mov	qword ptr [rsp + 0x98], 0
0xe24f:	mov	rsi, qword ptr [rax + rcx]
0xe253:	test	rsi, rsi
0xe256:	je	0xe618


0xe618:	test	rbp, rbp
0xe61b:	jne	0xe282


0xe25c:	mov	rdi, qword ptr [rsp + 8]
0xe261:	add	rsi, 8
0xe265:	call	0x9bf0


0xe621:	mov	rax, qword ptr [rsp]
0xe625:	lea	rbx, [rax + 1]
0xe629:	mov	r12, rbx
0xe62c:	jmp	0xe494


0xe282:	cmp	qword ptr [rbp + 0x28], 0
0xe287:	mov	rax, qword ptr [rsp + 0x18]
0xe28c:	pxor	xmm0, xmm0
0xe290:	mov	r12, qword ptr [r15 + 0x98]
0xe297:	mov	dword ptr [rsp + 0x8c], 0
0xe2a2:	mov	qword ptr [rax + 0x10], 0
0xe2aa:	movaps	xmmword ptr [rax], xmm0
0xe2ad:	jle	0xe7e0


0xe494:	mov	edx, dword ptr [r15 + 0xa0]
0xe49b:	mov	rsi, qword ptr [rsp]
0xe49f:	mov	rdi, r15
0xe4a2:	call	0xb4b0


0xe7e0:	xor	edi, edi
0xe7e2:	jmp	0xe698


0xe2b3:	lea	rax, [r12 + 0xd8]
0xe2bb:	xor	ebx, ebx
0xe2bd:	mov	qword ptr [rsp + 0x28], rax
0xe2c2:	jmp	0xe309


0xe698:	call	0x1b00


0xe309:	mov	rax, qword ptr [rbp + 0x30]
0xe30d:	mov	rdi, qword ptr [r12]
0xe311:	mov	r14, qword ptr [rax + rbx*8]
0xe315:	mov	r13, r14
0xe318:	shl	r13, 4
0xe31c:	lea	rsi, [rdi + r13]
0xe320:	test	byte ptr [rsi + 0xa], 0x10
0xe324:	je	0xe2c8


0xe2c8:	mov	rdx, qword ptr [rsp]
0xe2cc:	mov	rdi, r15
0xe2cf:	call	0xb5a0


0xe326:	mov	r8, qword ptr [rsp]
0xe32a:	mov	rsi, qword ptr [rsp + 0x28]
0xe32f:	mov	rcx, r15
0xe332:	mov	rdx, r14
0xe335:	call	0xde80


0xe33a:	cmp	eax, 1
0xe33d:	jle	0xe600


0xe600:	test	eax, eax
0xe602:	jne	0xe2d8


0xe343:	cdqe	
0xe345:	add	rax, qword ptr [rsp]
0xe349:	mov	rdx, qword ptr [r12 + 0x18]
0xe34e:	lea	r13, [r14*8]
0xe356:	mov	rdx, qword ptr [rdx + r14*8]
0xe35a:	mov	rcx, rax
0xe35d:	mov	qword ptr [rsp + 0x38], rax
0xe362:	lea	r14, [rax*8]
0xe36a:	mov	rax, qword ptr [r15 + 0xb8]
0xe371:	mov	rsi, qword ptr [rax + rcx*8]
0xe375:	mov	qword ptr [rsp + 0xb8], 0
0xe381:	test	rsi, rsi
0xe384:	je	0xe3a9


0xe608:	mov	rsi, qword ptr [r12]
0xe60c:	add	rsi, r13
0xe60f:	jmp	0xe2c8


0xe2d8:	lea	r13, [r14*8]
0xe2e0:	mov	rax, qword ptr [r12 + 0x18]
0xe2e5:	mov	rdi, qword ptr [rsp + 8]
0xe2ea:	mov	rsi, qword ptr [rax + r13]
0xe2ee:	call	0x8190


0xe3a9:	mov	rdi, qword ptr [rsp + 0x18]
0xe3ae:	mov	rsi, rdx
0xe3b1:	call	0x8190


0xe386:	mov	rdi, qword ptr [rsp + 0x18]
0xe38b:	add	rsi, 8
0xe38f:	mov	qword ptr [rsp + 0x50], rdx
0xe394:	call	0x9bf0


0xe3b6:	test	al, al
0xe3b8:	je	0xe638


0xe638:	mov	rdi, qword ptr [rsp + 0xc0]
0xe640:	call	0x1b00


0xe3be:	add	r14, qword ptr [r15 + 0xb8]
0xe3c5:	mov	rdx, qword ptr [rsp + 0x18]
0xe3ca:	mov	rsi, r12
0xe3cd:	mov	rdi, qword ptr [rsp + 0x58]
0xe3d2:	call	0xace0


0xe3d7:	mov	rdx, qword ptr [rsp + 0x38]
0xe3dc:	mov	qword ptr [r14], rax
0xe3df:	mov	rax, qword ptr [r15 + 0xb8]
0xe3e6:	cmp	qword ptr [rax + rdx*8], 0
0xe3eb:	jne	0xe2e0


0xe3f1:	mov	edx, dword ptr [rsp + 0x8c]
0xe3f8:	test	edx, edx
0xe3fa:	je	0xe2e0


0xe2e0:	mov	rax, qword ptr [r12 + 0x18]
0xe2e5:	mov	rdi, qword ptr [rsp + 8]
0xe2ea:	mov	rsi, qword ptr [rax + r13]
0xe2ee:	call	0x8190


0xe400:	mov	rdi, qword ptr [rsp + 0xc0]
0xe408:	call	0x1b00


0xe2f3:	test	al, al
0xe2f5:	je	0xe638


0xe2fb:	add	rbx, 1
0xe2ff:	cmp	rbx, qword ptr [rbp + 0x28]
0xe303:	jge	0xe690


0xe690:	mov	rdi, qword ptr [rsp + 0xc0]
0xe698:	call	0x1b00


0xe2d4:	test	al, al
0xe2d6:	je	0xe2fb


0xe399:	test	eax, eax
0xe39b:	mov	dword ptr [rsp + 0x8c], eax
0xe3a2:	mov	rdx, qword ptr [rsp + 0x50]
0xe3a7:	jne	0xe400


0xe26a:	test	eax, eax
0xe26c:	mov	dword ptr [rsp + 0x88], eax
0xe273:	jne	0xe650


0xe279:	test	rbp, rbp
0xe27c:	je	0xe428


0xe650:	mov	rdi, qword ptr [rsp + 0xa0]
0xe658:	call	0x1b00


0xe428:	mov	rax, qword ptr [rsp]
0xe42c:	cmp	qword ptr [rsp + 0x98], 0
0xe435:	lea	rbx, [rax + 1]
0xe439:	mov	r12, rbx
0xe43c:	je	0xe494


0xe43e:	mov	ecx, dword ptr [rsp + 0x110]
0xe445:	mov	rdx, qword ptr [rsp + 0x48]
0xe44a:	mov	rsi, qword ptr [rsp + 8]
0xe44f:	mov	rdi, qword ptr [rsp + 0x30]
0xe454:	call	0xa080


0xe6f4:	test	eax, eax
0xe6f6:	mov	dword ptr [rsp + 0x88], eax
0xe6fd:	jne	0xe664


0xe703:	test	byte ptr [rbp + 0x68], 0x40
0xe707:	je	0xe1dc


0xe1dc:	cmp	r12, qword ptr [rsp + 0x40]
0xe1e1:	jge	0xe508


0xe70d:	cmp	qword ptr [rsp + 0x98], 0
0xe716:	je	0xe742


0xe742:	mov	rsi, qword ptr [rsp + 0x30]
0xe747:	lea	rdi, [rsp + 0x88]
0xe74f:	mov	ecx, r13d
0xe752:	mov	rdx, rbx
0xe755:	call	0xaa20


0xe718:	mov	r8d, dword ptr [rsp + 0x110]
0xe720:	mov	rcx, qword ptr [rsp + 0x48]
0xe725:	mov	rdx, r12
0xe728:	mov	rsi, rbx
0xe72b:	mov	rdi, r15
0xe72e:	call	0xafc0


0xe733:	test	eax, eax
0xe735:	mov	dword ptr [rsp + 0x88], eax
0xe73c:	jne	0xe650


0xe75a:	test	rax, rax
0xe75d:	mov	rbp, rax
0xe760:	je	0xe7e7


0xe7e7:	mov	esi, dword ptr [rsp + 0x88]
0xe7ee:	test	esi, esi
0xe7f0:	je	0xe766


0xe766:	mov	rax, qword ptr [r15 + 0xb8]
0xe76d:	mov	qword ptr [rax + r12*8], rbp
0xe771:	jmp	0xe1dc


0xe7f6:	jmp	0xe650


0xe4a7:	mov	rdx, qword ptr [rsp + 8]
0xe4ac:	mov	rsi, qword ptr [rsp + 0x30]
0xe4b1:	lea	rdi, [rsp + 0x88]
0xe4b9:	mov	ecx, eax
0xe4bb:	call	0xaa20


0xe4c0:	test	rax, rax
0xe4c3:	mov	rbp, rax
0xe4c6:	je	0xe6b0


0xe6b0:	mov	eax, dword ptr [rsp + 0x88]
0xe6b7:	test	eax, eax
0xe6b9:	jne	0xe650


0xe4cc:	mov	rax, qword ptr [r15 + 0xb8]
0xe4d3:	mov	rdx, qword ptr [rsp + 0x10]
0xe4d8:	mov	qword ptr [rsp + 0x20], 0
0xe4e1:	mov	qword ptr [rax + rdx], rbp
0xe4e5:	cmp	qword ptr [rsp + 0x40], rbx
0xe4ea:	jle	0xe508


0xe6bb:	mov	rax, qword ptr [r15 + 0xb8]
0xe6c2:	mov	rdx, qword ptr [rsp + 0x10]
0xe6c7:	add	qword ptr [rsp + 0x20], 1
0xe6cd:	mov	qword ptr [rax + rdx], 0
0xe6d5:	jmp	0xe4e5


0xe4ec:	movsxd	rdx, dword ptr [r15 + 0xe0]
0xe4f3:	add	qword ptr [rsp + 0x10], 8
0xe4f9:	cmp	rdx, qword ptr [rsp + 0x20]
0xe4fe:	mov	qword ptr [rsp], rbx
0xe502:	jge	0xe23e


0xe4e5:	cmp	qword ptr [rsp + 0x40], rbx
0xe4ea:	jle	0xe508


0xe23e:	mov	rcx, qword ptr [rsp + 0x10]
0xe243:	mov	qword ptr [rsp + 0x98], 0
0xe24f:	mov	rsi, qword ptr [rax + rcx]
0xe253:	test	rsi, rsi
0xe256:	je	0xe618


0xe580:	mov	r13d, eax
0xe583:	mov	edi, 8
0xe588:	mov	qword ptr [rsp + 0x90], 1
0xe594:	mov	qword ptr [rsp + 0x98], 1
0xe5a0:	call	0x1da0


0xb6cb:	test	rbx, rbx
0xb6ce:	jle	0xb778


0xb778:	pop	rbx
0xb779:	xor	eax, eax
0xb77b:	pop	rbp
0xb77c:	pop	r12
0xb77e:	ret	


0xb6d4:	mov	rdx, qword ptr [rbp + 0x98]
0xb6db:	mov	r11d, eax
0xb6de:	mov	ebp, eax
0xb6e0:	and	eax, 1
0xb6e3:	mov	r9, qword ptr [r12]
0xb6e7:	xor	esi, esi
0xb6e9:	and	ebp, 8
0xb6ec:	and	r11d, 2
0xb6f0:	mov	r10d, eax
0xb6f3:	mov	r8, qword ptr [rdx]
0xb6f6:	jmp	0xb709


0xb709:	mov	rax, qword ptr [r9 + rsi*8]
0xb70d:	mov	rdx, rax
0xb710:	shl	rdx, 4
0xb714:	add	rdx, r8
0xb717:	mov	ecx, dword ptr [rdx + 8]
0xb71a:	shr	ecx, 8
0xb71d:	mov	edi, ecx
0xb71f:	and	di, 0x3ff
0xb724:	cmp	byte ptr [rdx + 8], 2
0xb728:	jne	0xb700


0xb72a:	test	di, di
0xb72d:	je	0xb755


0xb700:	add	rsi, 1
0xb704:	cmp	rsi, rbx
0xb707:	je	0xb778


0xb755:	pop	rbx
0xb756:	pop	rbp
0xb757:	pop	r12
0xb759:	ret	


0xb72f:	test	cl, 4
0xb732:	je	0xb760


0xb760:	and	ecx, 8
0xb763:	je	0xb73e


0xb734:	test	r10d, r10d
0xb737:	je	0xb700


0xb73e:	test	dil, 0x20
0xb742:	je	0xb749


0xb765:	test	r10d, r10d
0xb768:	jne	0xb700


0xb739:	and	ecx, 8
0xb73c:	jne	0xb700


0xb749:	and	edi, 0x80
0xb74f:	je	0xb755


0xb744:	test	r11d, r11d
0xb747:	je	0xb700


0xb76a:	test	dil, 0x20
0xb76e:	je	0xb749


0xb751:	test	ebp, ebp
0xb753:	je	0xb700


0xb770:	jmp	0xb744


0x10cf9:	test	rax, rax
0x10cfc:	mov	r8, qword ptr [rsp + 0x10]
0x10d01:	je	0x10849


0x10d07:	jmp	0x10826


0x112c1:	mov	qword ptr [rsp + 0x1d0], rax
0x112c9:	jmp	0x109e8


0x109e8:	mov	r13, qword ptr [rsp + 0x1d0]
0x109f0:	movabs	rsi, 0x1ffffffffffffffe
0x109fa:	cmp	qword ptr [rsp + 0x20], rsi
0x109ff:	mov	r15, qword ptr [rsp + 0x1b8]
0x10a07:	ja	0x1166b


0x10a0d:	mov	rax, qword ptr [rsp + 0x20]
0x10a12:	add	rax, 1
0x10a16:	lea	rbx, [rax*8]
0x10a1e:	mov	qword ptr [rsp + 8], rax
0x10a23:	mov	rdi, rbx
0x10a26:	call	0x1da0


0x1166b:	mov	rdi, rbx
0x1166e:	mov	dword ptr [rsp + 0x5c], 0xc
0x11676:	jmp	0x10c48


0x109bc:	mov	r13, rax
0x109bf:	mov	qword ptr [rsp + 0x1d0], rax
0x109c7:	mov	rax, qword ptr [rsp + 0x38]
0x109cc:	test	byte ptr [rax + 0xb0], 1
0x109d3:	jne	0x109f0


0x109d5:	mov	rax, qword ptr [rsp + 0x38]
0x109da:	cmp	qword ptr [rax + 0x98], 0
0x109e2:	je	0x1137c


0x109f0:	movabs	rsi, 0x1ffffffffffffffe
0x109fa:	cmp	qword ptr [rsp + 0x20], rsi
0x109ff:	mov	r15, qword ptr [rsp + 0x1b8]
0x10a07:	ja	0x1166b


0x116cc:	test	rax, rax
0x116cf:	mov	qword ptr [rsp + 0x30], rax
0x116d4:	je	0x107bd


0x116da:	jmp	0x11647


0xf960:	pop	rdx
0xf961:	cmp	eax, 1
0xf964:	pop	rcx
0xf965:	mov	r11, qword ptr [rsp + 0x10]
0xf96a:	je	0xf9df


0xf96c:	test	eax, eax
0xf96e:	jne	0xf648


0xf974:	mov	rax, qword ptr [r12 + 0x20]
0xf979:	cmp	rax, qword ptr [r12 + 0x18]
0xf97e:	je	0xfb58


0xfb58:	lea	rdx, [rax + rax + 1]
0xfb5d:	mov	rdi, qword ptr [r12 + 0x28]
0xfb62:	lea	rsi, [rdx*8]
0xfb6a:	mov	qword ptr [rsp + 0x10], rdx
0xfb6f:	call	0x1e00


0xf984:	mov	esi, 0x28
0xf989:	mov	edi, 1
0xf98e:	call	0x1d30


0xf165:	test	eax, eax
0xf167:	pop	rdx
0xf168:	pop	rcx
0xf169:	je	0xf180


0xf180:	mov	rax, qword ptr [rbx + 0xc8]
0xf187:	mov	rdx, qword ptr [rbx + 0xd0]
0xf18e:	mov	r15, qword ptr [rbp + 8]
0xf192:	mov	rcx, qword ptr [r13]
0xf196:	mov	rdi, qword ptr [rbx + 0xd8]
0xf19d:	cmp	rax, rdx
0xf1a0:	mov	rsi, r15
0xf1a3:	jge	0xf240


0xf16b:	add	rsp, 0x18
0xf16f:	pop	rbx
0xf170:	pop	rbp
0xf171:	pop	r12
0xf173:	pop	r13
0xf175:	pop	r14
0xf177:	pop	r15
0xf179:	ret	


0xf1a9:	lea	rdx, [rax + rax*4]
0xf1ad:	shl	rdx, 3
0xf1b1:	test	rax, rax
0xf1b4:	jle	0xf1c1


0xf240:	lea	rsi, [rdx + rdx*4]
0xf244:	mov	qword ptr [rsp + 8], rcx
0xf249:	shl	rsi, 4
0xf24d:	call	0x1e00


0xf1c1:	add	rdi, rdx
0xf1c4:	xor	edx, edx
0xf1c6:	cmp	r15, rcx
0xf1c9:	sete	dl
0xf1cc:	add	rax, 1
0xf1d0:	mov	qword ptr [rdi], r14
0xf1d3:	neg	edx
0xf1d5:	mov	qword ptr [rdi + 8], r12
0xf1d9:	mov	qword ptr [rdi + 0x10], rcx
0xf1dd:	mov	word ptr [rdi + 0x22], dx
0xf1e1:	mov	qword ptr [rdi + 0x18], r15
0xf1e5:	mov	qword ptr [rbx + 0xc8], rax
0xf1ec:	mov	byte ptr [rdi + 0x20], 0
0xf1f0:	mov	rax, r15
0xf1f3:	movsxd	rdx, dword ptr [rbx + 0xe0]
0xf1fa:	sub	rax, rcx
0xf1fd:	cmp	rdx, rax
0xf200:	jge	0xf20c


0xf1b6:	lea	r8, [rdi + rdx - 0x28]
0xf1bb:	cmp	r12, qword ptr [r8 + 8]
0xf1bf:	je	0xf230


0xf202:	sub	r15d, ecx
0xf205:	mov	dword ptr [rbx + 0xe0], r15d
0xf20c:	add	rsi, r12
0xf20f:	sub	rsi, qword ptr [r13]
0xf213:	add	rsp, 0x18
0xf217:	mov	rdi, rbx
0xf21a:	pop	rbx
0xf21b:	pop	rbp
0xf21c:	pop	r12
0xf21e:	pop	r13
0xf220:	pop	r14
0xf222:	pop	r15
0xf224:	jmp	0x8d60


0xf20c:	add	rsi, r12
0xf20f:	sub	rsi, qword ptr [r13]
0xf213:	add	rsp, 0x18
0xf217:	mov	rdi, rbx
0xf21a:	pop	rbx
0xf21b:	pop	rbp
0xf21c:	pop	r12
0xf21e:	pop	r13
0xf220:	pop	r14
0xf222:	pop	r15
0xf224:	jmp	0x8d60


0xf230:	mov	byte ptr [r8 + 0x20], 1
0xf235:	jmp	0xf1c1


0xf59b:	cmp	eax, 1
0xf59e:	mov	r8, qword ptr [r14 + 8]
0xf5a2:	ja	0xf648


0xf5a8:	add	rbp, 1
0xf5ac:	cmp	rbp, qword ptr [r13 + 0x20]
0xf5b0:	mov	r11, r15
0xf5b3:	mov	rbx, r12
0xf5b6:	jge	0xf868


0xf868:	mov	rbx, r13
0xf86b:	mov	r13, r8
0xf86e:	lea	r11, [r15 + 1]
0xf872:	cmp	qword ptr [rsp + 8], r11
0xf877:	jl	0xf509


0x129fe:	cdqe	
0x12a00:	add	qword ptr [r14 + 0x48], rax
0x12a04:	movzx	eax, byte ptr [r13 + 8]
0x12a09:	movzx	edx, byte ptr [r13]
0x12a0e:	cmp	al, 2
0x12a10:	je	0x12a60


0x12a60:	mov	rbx, -2
0x12a67:	mov	rax, rbx
0x12a6a:	pop	rbx
0x12a6b:	pop	rbp
0x12a6c:	pop	r12
0x12a6e:	pop	r13
0x12a70:	pop	r14
0x12a72:	ret	


0x12a12:	cmp	al, 0x18
0x12a14:	je	0x12a67


0x12a67:	mov	rax, rbx
0x12a6a:	pop	rbx
0x12a6b:	pop	rbp
0x12a6c:	pop	r12
0x12a6e:	pop	r13
0x12a70:	pop	r14
0x12a72:	ret	


0x12a16:	cmp	dl, 0x2c
0x12a19:	je	0x12a67


0x12a1b:	cmp	al, 1
0x12a1d:	je	0x12a28


0x12a28:	lea	eax, [rdx - 0x30]
0x12a2b:	cmp	al, 9
0x12a2d:	ja	0x12a1f


0x12a1f:	mov	rbx, r12
0x12a22:	jmp	0x129f0


0x12a2f:	cmp	rbx, -2
0x12a33:	je	0x12a1f


0x129f0:	mov	rdx, rbp
0x129f3:	mov	rsi, r14
0x129f6:	mov	rdi, r13
0x129f9:	call	0x122d0


0x12a35:	cmp	rbx, -1
0x12a39:	je	0x12a78


0x12a78:	movzx	ebx, dl
0x12a7b:	sub	ebx, 0x30
0x12a7e:	movsxd	rbx, ebx
0x12a81:	jmp	0x129f0


0x12a3b:	lea	rax, [rbx + rbx*4]
0x12a3f:	lea	rbx, [rdx + rax*2]
0x12a43:	mov	eax, 0x8030
0x12a48:	cmp	rbx, 0x8030
0x12a4f:	cmovg	rbx, rax
0x12a53:	sub	rbx, 0x30
0x12a57:	jmp	0x129f0


0x13fae:	mov	edx, dword ptr [rbx]
0x13fb0:	mov	r14, rax
0x13fb3:	test	edx, edx
0x13fb5:	je	0x13fc0


0x13fc0:	lea	rax, [rsp + 0x20]
0x13fc5:	mov	qword ptr [rsp + 0x18], rax
0x13fca:	nop	word ptr [rax + rax]
0x13fd0:	movzx	eax, byte ptr [rbp + 8]
0x13fd4:	mov	edx, eax
0x13fd6:	and	edx, 0xfffffff7
0x13fd9:	cmp	dl, 2
0x13fdc:	je	0x14070


0x13fb7:	test	rax, rax
0x13fba:	je	0x140ba


0x14070:	mov	rcx, qword ptr [rsp + 0x38]
0x14075:	xor	rcx, qword ptr fs:[0x28]
0x1407e:	mov	rax, r14
0x14081:	jne	0x140ed


0x13fe2:	cmp	al, 9
0x13fe4:	jne	0x13fef


0x140ba:	xor	r14d, r14d
0x140bd:	jmp	0x14070


0x14083:	add	rsp, 0x48
0x14087:	pop	rbx
0x14088:	pop	rbp
0x14089:	pop	r12
0x1408b:	pop	r13
0x1408d:	pop	r14
0x1408f:	pop	r15
0x14091:	ret	


0x140ed:	call	0x1c20


0x13fe6:	test	r12, r12
0x13fe9:	jne	0x14070


0x13fef:	mov	rdi, qword ptr [rsp]
0x13ff3:	mov	r9, rbx
0x13ff6:	mov	r8, r12
0x13ff9:	mov	rcx, r15
0x13ffc:	mov	rdx, rbp
0x13fff:	mov	rsi, r13
0x14002:	call	0x12a90


0x14007:	mov	r9, rax
0x1400a:	mov	eax, dword ptr [rbx]
0x1400c:	test	eax, eax
0x1400e:	je	0x14019


0x14019:	test	r14, r14
0x1401c:	je	0x14098


0x14010:	test	r9, r9
0x14013:	je	0x140a4


0x14098:	test	r14, r14
0x1409b:	cmove	r14, r9
0x1409f:	jmp	0x13fd0


0x1401e:	test	r9, r9
0x14021:	je	0x14098


0x140a4:	test	r14, r14
0x140a7:	je	0x140ba


0x13fd0:	movzx	eax, byte ptr [rbp + 8]
0x13fd4:	mov	edx, eax
0x13fd6:	and	edx, 0xfffffff7
0x13fd9:	cmp	dl, 2
0x13fdc:	je	0x14070


0x14023:	mov	rax, qword ptr [rsp + 0x10]
0x14028:	mov	r8, qword ptr [rsp + 0x18]
0x1402d:	mov	rcx, r9
0x14030:	mov	rdx, r14
0x14033:	mov	qword ptr [rsp + 8], r9
0x14038:	mov	byte ptr [rsp + 0x28], 0x10
0x1403d:	lea	rsi, [rax + 0x80]
0x14044:	lea	rdi, [rax + 0x70]
0x14048:	call	0xa390


0x140a9:	lea	rsi, [rip - 0xb260]
0x140b0:	xor	edx, edx
0x140b2:	mov	rdi, r14
0x140b5:	call	0x7fb0


0x1404d:	test	rax, rax
0x14050:	mov	r9, qword ptr [rsp + 8]
0x14055:	je	0x140c0


0x140c0:	lea	rsi, [rip - 0xb277]
0x140c7:	mov	rdi, r9
0x140ca:	xor	edx, edx
0x140cc:	call	0x7fb0


0x14057:	mov	r14, rax
0x1405a:	movzx	eax, byte ptr [rbp + 8]
0x1405e:	mov	edx, eax
0x14060:	and	edx, 0xfffffff7
0x14063:	cmp	dl, 2
0x14066:	jne	0x13fe2


0x14148:	mov	edx, dword ptr [r13]
0x1414c:	mov	r15, rax
0x1414f:	test	edx, edx
0x14151:	je	0x1415c


0x1415c:	lea	rax, [rsp + 0x30]
0x14161:	mov	qword ptr [rsp + 8], rax
0x14166:	jmp	0x141f4


0x14153:	test	rax, rax
0x14156:	je	0x14242


0x141f4:	cmp	byte ptr [rbp + 8], 0xa
0x141f8:	jne	0x14248


0x14242:	xor	r15d, r15d
0x14245:	nop	dword ptr [rax]
0x14248:	mov	rcx, qword ptr [rsp + 0x48]
0x1424d:	xor	rcx, qword ptr fs:[0x28]
0x14256:	mov	rax, r15
0x14259:	jne	0x1427a


0x141fa:	mov	rdx, r14
0x141fd:	mov	rsi, r12
0x14200:	mov	rdi, rbp
0x14203:	or	rdx, 0x800000
0x1420a:	call	0x122d0


0x14248:	mov	rcx, qword ptr [rsp + 0x48]
0x1424d:	xor	rcx, qword ptr fs:[0x28]
0x14256:	mov	rax, r15
0x14259:	jne	0x1427a


0x1425b:	add	rsp, 0x58
0x1425f:	pop	rbx
0x14260:	pop	rbp
0x14261:	pop	r12
0x14263:	pop	r13
0x14265:	pop	r14
0x14267:	pop	r15
0x14269:	ret	


0x1427a:	call	0x1c20


0x1420f:	cdqe	
0x14211:	add	qword ptr [r12 + 0x48], rax
0x14216:	movzx	eax, byte ptr [rbp + 8]
0x1421a:	mov	edx, eax
0x1421c:	and	edx, 0xfffffff7
0x1421f:	cmp	dl, 2
0x14222:	jne	0x14170


0x14228:	xor	ecx, ecx
0x1422a:	jmp	0x141cf


0x14170:	cmp	al, 9
0x14172:	jne	0x14180


0x141cf:	mov	r8, qword ptr [rsp + 8]
0x141d4:	lea	rsi, [rbx + 0x80]
0x141db:	lea	rdi, [rbx + 0x70]
0x141df:	mov	rdx, r15
0x141e2:	mov	byte ptr [rsp + 0x38], 0xa
0x141e7:	call	0xa390


0x14174:	cmp	qword ptr [rsp + 0x10], 0
0x1417a:	jne	0x14228


0x14180:	mov	rax, qword ptr [rbx + 0xa8]
0x14187:	mov	r8, qword ptr [rsp + 0x10]
0x1418c:	mov	rcx, r14
0x1418f:	mov	rsi, qword ptr [rsp + 0x28]
0x14194:	mov	r9, r13
0x14197:	mov	rdx, rbp
0x1419a:	mov	rdi, r12
0x1419d:	mov	qword ptr [rsp + 0x18], rax
0x141a2:	mov	rax, qword ptr [rsp + 0x20]
0x141a7:	mov	qword ptr [rbx + 0xa8], rax
0x141ae:	call	0x13f70


0x141b3:	mov	rcx, rax
0x141b6:	mov	eax, dword ptr [r13]
0x141ba:	test	eax, eax
0x141bc:	je	0x141c3


0x141c3:	mov	rax, qword ptr [rsp + 0x18]
0x141c8:	or	qword ptr [rbx + 0xa8], rax
0x141cf:	mov	r8, qword ptr [rsp + 8]
0x141d4:	lea	rsi, [rbx + 0x80]
0x141db:	lea	rdi, [rbx + 0x70]
0x141df:	mov	rdx, r15
0x141e2:	mov	byte ptr [rsp + 0x38], 0xa
0x141e7:	call	0xa390


0x141be:	test	rcx, rcx
0x141c1:	je	0x1422c


0x1422c:	test	r15, r15
0x1422f:	je	0x14242


0x14231:	lea	rsi, [rip - 0xb3e8]
0x14238:	xor	edx, edx
0x1423a:	mov	rdi, r15
0x1423d:	call	0x7fb0


0x141ec:	test	rax, rax
0x141ef:	mov	r15, rax
0x141f2:	je	0x14270


0x14270:	mov	dword ptr [r13], 0xc
0x14278:	jmp	0x14248


0x159dd:	mov	rdi, r13
0x159e0:	mov	rbx, rax
0x159e3:	call	0x1b00


0x15d13:	add	rsp, 0x18
0x15d17:	ret	


0x15d30:	add	rsp, 0x18
0x15d34:	ret	


0x15d55:	add	rsp, 0x28
0x15d59:	ret	


0x15d77:	add	rsp, 0x28
0x15d7b:	ret	


0x15f21:	test	rbp, rbp
0x15f24:	je	0x15f46


0x15f46:	add	rsp, 8
0x15f4a:	pop	rbx
0x15f4b:	pop	rbp
0x15f4c:	pop	r12
0x15f4e:	pop	r13
0x15f50:	pop	r14
0x15f52:	pop	r15
0x15f54:	ret	


0x15f26:	xor	ebx, ebx
0x15f28:	nop	dword ptr [rax + rax]
0x15f30:	mov	rdx, r15
0x15f33:	mov	rsi, r14
0x15f36:	mov	edi, r13d
0x15f39:	call	qword ptr [r12 + rbx*8]


0xbc20:	movzx	eax, byte ptr [rbx + 0x8b]
0xbc27:	sub	qword ptr [rbx + 0x30], rbp
0xbc2b:	sub	qword ptr [rbx + 0x38], rbp
0xbc2f:	jmp	0xbbfc


0xb915:	mov	r8, qword ptr [rbx + 0x30]
0xb919:	sub	r8, rbp
0xb91c:	jmp	0xb865


0xbadd:	mov	rdi, qword ptr [rbx + 8]
0xbae1:	mov	rdx, qword ptr [rbx + 0x30]
0xbae5:	lea	rsi, [rdi + rbp]
0xbae9:	sub	rdx, rbp
0xbaec:	call	0x1e50


0xbaf1:	mov	rax, qword ptr [rbx + 0x30]
0xbaf5:	sub	qword ptr [rbx + 0x38], rbp
0xbaf9:	sub	rax, rbp
0xbafc:	test	rax, rax
0xbaff:	mov	qword ptr [rbx + 0x30], rax
0xbb03:	jle	0xbb28


0xbb05:	mov	rcx, qword ptr [rbx + 0x18]
0xbb09:	xor	eax, eax
0xbb0b:	lea	rsi, [rcx + rbp*8]
0xbb0f:	nop	
0xbb10:	mov	rdx, qword ptr [rsi + rax*8]
0xbb14:	sub	rdx, rbp
0xbb17:	mov	qword ptr [rcx + rax*8], rdx
0xbb1b:	add	rax, 1
0xbb1f:	cmp	qword ptr [rbx + 0x30], rax
0xbb23:	jg	0xbb10


0xbb10:	mov	rdx, qword ptr [rsi + rax*8]
0xbb14:	sub	rdx, rbp
0xbb17:	mov	qword ptr [rcx + rax*8], rdx
0xbb1b:	add	rax, 1
0xbb1f:	cmp	qword ptr [rbx + 0x30], rax
0xbb23:	jg	0xbb10


0x3254:	movzx	eax, byte ptr [rip + 0x218f57]
0x325b:	test	al, al
0x325d:	je	0x3266


0x3266:	mov	edi, 2
0x326b:	xor	edx, edx
0x326d:	mov	rsi, rbx
0x3270:	call	0x1ad0


0x325f:	xor	edi, edi
0x3261:	call	0x3160


0x3275:	mov	edi, 1
0x327a:	call	0x1ee0


0x1ee0:	jmp	qword ptr [rip + 0x21a0aa]




0xdf5e:	test	eax, eax
0xdf60:	je	0xdf40


0xdf40:	add	rbx, 1
0xdf44:	cmp	rbx, qword ptr [r13 + 0x48]
0xdf48:	jge	0xe008


0xe008:	mov	rsi, qword ptr [r13 + 0x40]
0xe00c:	test	rsi, rsi
0xe00f:	jle	0xdff1


0xf56c:	test	eax, eax
0xf56e:	mov	r8, qword ptr [rsp + 0x10]
0xf573:	mov	r11, qword ptr [rsp + 0x18]
0xf578:	mov	r9, qword ptr [rsp + 0x20]
0xf57d:	jne	0xfa48


0xdc0f:	cmp	rax, -1
0xdc13:	je	0xdc3f


0xdc3f:	mov	rax, qword ptr [rsp + 0x30]
0xdc44:	test	byte ptr [rax + 0x1a], 0x40
0xdc48:	je	0xdbdf


0xdc15:	movzx	edx, byte ptr [rsp + 0x60]
0xdc1a:	test	r13d, r13d
0xdc1d:	mov	byte ptr [r12 + rdx], 1
0xdc22:	mov	qword ptr [rsp + 0x10], rdx
0xdc27:	je	0xdc3f


0xdbdf:	add	rbp, 1
0xdbe3:	cmp	rbp, qword ptr [r15 + 0x28]
0xdbe7:	jge	0xdc94


0xdc4a:	mov	rax, qword ptr [rsp + 8]
0xdc4f:	cmp	dword ptr [rax + 0xb4], 1
0xdc56:	jle	0xdbdf


0xdc29:	call	0x1f40


0xdc94:	mov	ebx, r13d
0xdc97:	mov	rbp, r12
0xdc9a:	jmp	0xda17


0xdc58:	mov	rax, qword ptr [r15]
0xdc5b:	mov	edi, dword ptr [rax + rbx]
0xdc5e:	call	0x1ea0


0x1ea0:	jmp	qword ptr [rip + 0x21a0ca]




0x8822:	test	eax, eax
0x8824:	jne	0x8918


0x8918:	call	0x1ac0


0xdc2e:	mov	rdx, qword ptr [rsp + 0x10]
0xdc33:	mov	rax, qword ptr [rax]
0xdc36:	movsxd	rax, dword ptr [rax + rdx*4]
0xdc3a:	mov	byte ptr [r12 + rax], 1
0xdc3f:	mov	rax, qword ptr [rsp + 0x30]
0xdc44:	test	byte ptr [rax + 0x1a], 0x40
0xdc48:	je	0xdbdf


0xdd25:	mov	rax, qword ptr [rax]
0xdd28:	lea	rdx, [r12 + r14]
0xdd2c:	movsxd	rax, dword ptr [rax + rdx*4]
0xdd30:	mov	byte ptr [rbp + rax], 1
0xdd35:	add	r14, 1
0xdd39:	cmp	r14, 0x40
0xdd3d:	jne	0xdd10


0xda74:	mov	rax, qword ptr [rax]
0xda77:	movsxd	rax, dword ptr [rax + r13*4]
0xda7b:	mov	byte ptr [rbp + rax], 1
0xda80:	mov	rax, qword ptr [rsp + 0x30]
0xda85:	test	byte ptr [rax + 0x1a], 0x40
0xda89:	je	0xda17


0x1248d:	mov	r8d, dword ptr [rsp]
0x12491:	test	eax, eax
0x12493:	setne	al
0x12496:	cmp	r8d, 0x5f
0x1249a:	sete	dl
0x1249d:	lea	ecx, [r12 - 0x27]
0x124a2:	or	eax, edx
0x124a4:	shl	eax, 6
0x124a7:	or	r13d, eax
0x124aa:	cmp	cl, 0x56
0x124ad:	mov	byte ptr [rbp + 0xa], r13b
0x124b1:	ja	0x128b5


0x124b7:	lea	rdx, [rip + 0x5486]
0x124be:	movzx	ecx, cl
0x124c1:	movsxd	rax, dword ptr [rdx + rcx*4]
0x124c5:	add	rax, rdx
0x124c8:	jmp	rax


0x128b5:	mov	eax, 2
0x128ba:	jmp	0x12394


0xb57f:	test	eax, eax
0xb581:	jne	0xb58c


0xb583:	cmp	ebx, 0x5f
0xb586:	jne	0xb4fb


0xb58c:	mov	eax, 1
0xb591:	jmp	0xb502


0x12365:	mov	ecx, dword ptr [rsp]
0x12368:	test	eax, eax
0x1236a:	setne	al
0x1236d:	cmp	ecx, 0x5f
0x12370:	sete	cl
0x12373:	or	eax, ecx
0x12375:	shl	eax, 6
0x12378:	or	r13d, eax
0x1237b:	mov	byte ptr [rbp + 0xa], r13b
0x1237f:	mov	rdx, qword ptr [rsp + 8]
0x12384:	jmp	0x123fc


0x123fc:	sub	r12d, 0xa
0x12400:	cmp	r12b, 0x73
0x12404:	ja	0x1253c


0x1240a:	lea	rcx, [rip + 0x5363]
0x12411:	movzx	r12d, r12b
0x12415:	movsxd	rax, dword ptr [rcx + r12*4]
0x12419:	add	rax, rcx
0x1241c:	jmp	rax


0x1253c:	mov	eax, 1
0x12541:	jmp	0x12394


0xbed9:	mov	r12, qword ptr [rbx + 0x30]
0xbedd:	jmp	0xba34


0xbbed:	mov	rdx, qword ptr [rbx + 0x30]
0xbbf1:	movzx	eax, byte ptr [rbx + 0x8b]
0xbbf8:	mov	qword ptr [rbx + 0x38], rdx
0xbbfc:	test	al, al
0xbbfe:	je	0xb87a


0x8ddd:	mov	qword ptr [rbx + 0xc0], rbp
0x8de4:	jmp	0x8d94


0x128c5:	mov	rsi, qword ptr [rax]
0x128c8:	movzx	edx, r12b
0x128cc:	movzx	eax, word ptr [rsi + rdx*2]
0x128d0:	shr	ax, 3
0x128d4:	and	eax, 1
0x128d7:	cmp	r12b, 0x5f
0x128db:	jmp	0x1249a


0x1249a:	sete	dl
0x1249d:	lea	ecx, [r12 - 0x27]
0x124a2:	or	eax, edx
0x124a4:	shl	eax, 6
0x124a7:	or	r13d, eax
0x124aa:	cmp	cl, 0x56
0x124ad:	mov	byte ptr [rbp + 0xa], r13b
0x124b1:	ja	0x128b5


0x123d3:	mov	rsi, qword ptr [rax]
0x123d6:	movzx	ecx, r12b
0x123da:	movzx	eax, word ptr [rsi + rcx*2]
0x123de:	shr	ax, 3
0x123e2:	and	eax, 1
0x123e5:	cmp	r12b, 0x5f
0x123e9:	sete	cl
0x123ec:	or	eax, ecx
0x123ee:	shl	eax, 6
0x123f1:	or	r13d, eax
0x123f4:	mov	byte ptr [rbp + 0xa], r13b
0x123f8:	mov	rdx, qword ptr [rsp]
0x123fc:	sub	r12d, 0xa
0x12400:	cmp	r12b, 0x73
0x12404:	ja	0x1253c


0xcf3c:	lea	rdi, [rip + 0xa748]
0xcf43:	mov	qword ptr [r13], rax
0xcf47:	mov	ecx, 6
0xcf4c:	mov	rsi, r12
0xcf4f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xcf4f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xcf51:	seta	al
0xcf54:	sbb	al, 0
0xcf56:	test	al, al
0xcf58:	je	0xcfc8


0xcfc8:	call	0x1f50


0xcf5a:	lea	rdi, [rip + 0xa730]
0xcf61:	mov	ecx, 6
0xcf66:	mov	rsi, r12
0xcf69:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xcf69:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xcf6b:	seta	al
0xcf6e:	sbb	al, 0
0xcf70:	test	al, al
0xcf72:	jne	0xd078


0xcf78:	call	0x1f50


0xd078:	lea	rdi, [rip + 0xa606]
0xd07f:	mov	ecx, 6
0xd084:	mov	rsi, r12
0xd087:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd087:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd089:	seta	al
0xd08c:	sbb	al, 0
0xd08e:	test	al, al
0xd090:	je	0xd0fa


0xd0fa:	call	0x1f50


0xd092:	lea	rdi, [rip + 0xa5fe]
0xd099:	mov	ecx, 6
0xd09e:	mov	rsi, r12
0xd0a1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd0a1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd0a3:	seta	al
0xd0a6:	sbb	al, 0
0xd0a8:	test	al, al
0xd0aa:	jne	0xd142


0xd0b0:	call	0x1f50


0xd142:	lea	rdi, [rip + 0xa530]
0xd149:	mov	ecx, 6
0xd14e:	mov	rsi, r12
0xd151:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd151:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd153:	seta	al
0xd156:	sbb	al, 0
0xd158:	test	al, al
0xd15a:	je	0xd203


0xd203:	call	0x1f50


0xd160:	lea	rdi, [rip + 0xa54f]
0xd167:	mov	ecx, 6
0xd16c:	mov	rsi, r12
0xd16f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd16f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd171:	seta	al
0xd174:	sbb	al, 0
0xd176:	test	al, al
0xd178:	jne	0xd283


0xd17e:	call	0x1f50


0xd283:	lea	rdi, [rip + 0xa413]
0xd28a:	mov	ecx, 6
0xd28f:	mov	rsi, r12
0xd292:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd292:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd294:	seta	al
0xd297:	sbb	al, 0
0xd299:	test	al, al
0xd29b:	jne	0xd31c


0xd29d:	call	0x1f50


0xd31c:	lea	rdi, [rip + 0xa35c]
0xd323:	mov	ecx, 6
0xd328:	mov	rsi, r12
0xd32b:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd32b:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd32d:	seta	al
0xd330:	sbb	al, 0
0xd332:	test	al, al
0xd334:	jne	0xd382


0xd336:	call	0x1f50


0xd382:	lea	rdi, [rip + 0xa31a]
0xd389:	mov	ecx, 6
0xd38e:	mov	rsi, r12
0xd391:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd391:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd393:	seta	al
0xd396:	sbb	al, 0
0xd398:	test	al, al
0xd39a:	jne	0xd48e


0xd3a0:	call	0x1f50


0xd48e:	lea	rsi, [rip + 0xa214]
0xd495:	mov	rdi, r12
0xd498:	call	0x1d40


0x1d40:	jmp	qword ptr [rip + 0x21a17a]




0xd3a5:	xor	ecx, ecx
0xd3a7:	test	rbp, rbp
0xd3aa:	mov	rdx, qword ptr [rax]
0xd3ad:	mov	esi, 1
0xd3b2:	jne	0xd454


0xd3b8:	test	byte ptr [rdx + rcx*2], 1
0xd3bc:	je	0xd3cf


0xd454:	xor	eax, eax
0xd456:	mov	edi, 1
0xd45b:	test	byte ptr [rdx + rax*2], 1
0xd45f:	je	0xd47d


0xd3cf:	add	rcx, 1
0xd3d3:	cmp	rcx, 0x100
0xd3da:	jne	0xd3b8


0xd3be:	mov	rax, rcx
0xd3c1:	mov	rdi, rsi
0xd3c4:	sar	rax, 6
0xd3c8:	shl	rdi, cl
0xd3cb:	or	qword ptr [rbx + rax*8], rdi
0xd3cf:	add	rcx, 1
0xd3d3:	cmp	rcx, 0x100
0xd3da:	jne	0xd3b8


0xd47d:	add	rax, 1
0xd481:	cmp	rax, 0x100
0xd487:	jne	0xd45b


0xd461:	movzx	ecx, byte ptr [rbp + rax]
0xd466:	mov	r14, rdi
0xd469:	mov	rsi, rcx
0xd46c:	and	ecx, 0x3f
0xd46f:	shr	rsi, 3
0xd473:	shl	r14, cl
0xd476:	and	esi, 0x18
0xd479:	or	qword ptr [rbx + rsi], r14
0xd47d:	add	rax, 1
0xd481:	cmp	rax, 0x100
0xd487:	jne	0xd45b


0xd3dc:	jmp	0xcfb4


0xd489:	jmp	0xcfb4


0xd45b:	test	byte ptr [rdx + rax*2], 1
0xd45f:	je	0xd47d


0xcfb4:	xor	eax, eax
0xcfb6:	add	rsp, 0x10
0xcfba:	pop	rbx
0xcfbb:	pop	rbp
0xcfbc:	pop	r12
0xcfbe:	pop	r13
0xcfc0:	pop	r14
0xcfc2:	ret	


0xd33b:	xor	ecx, ecx
0xd33d:	test	rbp, rbp
0xd340:	mov	rax, qword ptr [rax]
0xd343:	mov	edi, 1
0xd348:	jne	0xd670


0xd34e:	test	byte ptr [rax + rcx*2 + 1], 1
0xd353:	je	0xd366


0xd670:	xor	edx, edx
0xd672:	test	byte ptr [rax + rdx*2 + 1], 1
0xd677:	je	0xd695


0xd366:	add	rcx, 1
0xd36a:	cmp	rcx, 0x100
0xd371:	jne	0xd34e


0xd355:	mov	rdx, rcx
0xd358:	mov	rsi, rdi
0xd35b:	sar	rdx, 6
0xd35f:	shl	rsi, cl
0xd362:	or	qword ptr [rbx + rdx*8], rsi
0xd366:	add	rcx, 1
0xd36a:	cmp	rcx, 0x100
0xd371:	jne	0xd34e


0xd695:	add	rdx, 1
0xd699:	cmp	rdx, 0x100
0xd6a0:	jne	0xd672


0xd679:	movzx	ecx, byte ptr [rbp + rdx]
0xd67e:	mov	r9, rdi
0xd681:	mov	rsi, rcx
0xd684:	and	ecx, 0x3f
0xd687:	shr	rsi, 3
0xd68b:	shl	r9, cl
0xd68e:	and	esi, 0x18
0xd691:	or	qword ptr [rbx + rsi], r9
0xd695:	add	rdx, 1
0xd699:	cmp	rdx, 0x100
0xd6a0:	jne	0xd672


0xd373:	jmp	0xcfb4


0xd6a2:	jmp	0xcfb4


0xd672:	test	byte ptr [rax + rdx*2 + 1], 1
0xd677:	je	0xd695


0xd2a2:	xor	ecx, ecx
0xd2a4:	test	rbp, rbp
0xd2a7:	mov	rdx, qword ptr [rax]
0xd2aa:	mov	edi, 1
0xd2af:	jne	0xd6a7


0xd6a7:	xor	eax, eax
0xd6a9:	test	byte ptr [rdx + rax*2 + 1], 0x40
0xd6ae:	je	0xd6cc


0xd2d0:	add	rcx, 1
0xd2d4:	cmp	rcx, 0x100
0xd2db:	jne	0xd2b8


0xd2bf:	mov	rax, rcx
0xd2c2:	mov	rsi, rdi
0xd2c5:	sar	rax, 6
0xd2c9:	shl	rsi, cl
0xd2cc:	or	qword ptr [rbx + rax*8], rsi
0xd2d0:	add	rcx, 1
0xd2d4:	cmp	rcx, 0x100
0xd2db:	jne	0xd2b8


0xd6cc:	add	rax, 1
0xd6d0:	cmp	rax, 0x100
0xd6d6:	jne	0xd6a9


0xd6b0:	movzx	ecx, byte ptr [rbp + rax]
0xd6b5:	mov	r14, rdi
0xd6b8:	mov	rsi, rcx
0xd6bb:	and	ecx, 0x3f
0xd6be:	shr	rsi, 3
0xd6c2:	shl	r14, cl
0xd6c5:	and	esi, 0x18
0xd6c8:	or	qword ptr [rbx + rsi], r14
0xd6cc:	add	rax, 1
0xd6d0:	cmp	rax, 0x100
0xd6d6:	jne	0xd6a9


0xd2dd:	jmp	0xcfb4


0xd2b8:	test	byte ptr [rdx + rcx*2 + 1], 0x40
0xd2bd:	je	0xd2d0


0xd6d8:	jmp	0xcfb4


0xd6a9:	test	byte ptr [rdx + rax*2 + 1], 0x40
0xd6ae:	je	0xd6cc


0xd183:	xor	ecx, ecx
0xd185:	test	rbp, rbp
0xd188:	mov	rdx, qword ptr [rax]
0xd18b:	mov	edi, 1
0xd190:	jne	0xd63a


0xd63a:	xor	eax, eax
0xd63c:	test	byte ptr [rdx + rax*2 + 1], 8
0xd641:	je	0xd65f


0xd1b8:	add	rcx, 1
0xd1bc:	cmp	rcx, 0x100
0xd1c3:	jne	0xd1a0


0xd1a7:	mov	rax, rcx
0xd1aa:	mov	rsi, rdi
0xd1ad:	sar	rax, 6
0xd1b1:	shl	rsi, cl
0xd1b4:	or	qword ptr [rbx + rax*8], rsi
0xd1b8:	add	rcx, 1
0xd1bc:	cmp	rcx, 0x100
0xd1c3:	jne	0xd1a0


0xd65f:	add	rax, 1
0xd663:	cmp	rax, 0x100
0xd669:	jne	0xd63c


0xd643:	movzx	ecx, byte ptr [rbp + rax]
0xd648:	mov	r14, rdi
0xd64b:	mov	rsi, rcx
0xd64e:	and	ecx, 0x3f
0xd651:	shr	rsi, 3
0xd655:	shl	r14, cl
0xd658:	and	esi, 0x18
0xd65b:	or	qword ptr [rbx + rsi], r14
0xd65f:	add	rax, 1
0xd663:	cmp	rax, 0x100
0xd669:	jne	0xd63c


0xd1c5:	jmp	0xcfb4


0xd1a0:	test	byte ptr [rdx + rcx*2 + 1], 8
0xd1a5:	je	0xd1b8


0xd66b:	jmp	0xcfb4


0xd63c:	test	byte ptr [rdx + rax*2 + 1], 8
0xd641:	je	0xd65f


0xd208:	xor	ecx, ecx
0xd20a:	test	rbp, rbp
0xd20d:	mov	rdx, qword ptr [rax]
0xd210:	mov	edi, 1
0xd215:	jne	0xd3e8


0xd3e8:	xor	eax, eax
0xd3ea:	test	byte ptr [rdx + rax*2 + 1], 4
0xd3ef:	je	0xd40d


0xd238:	add	rcx, 1
0xd23c:	cmp	rcx, 0x100
0xd243:	jne	0xd220


0xd227:	mov	rax, rcx
0xd22a:	mov	rsi, rdi
0xd22d:	sar	rax, 6
0xd231:	shl	rsi, cl
0xd234:	or	qword ptr [rbx + rax*8], rsi
0xd238:	add	rcx, 1
0xd23c:	cmp	rcx, 0x100
0xd243:	jne	0xd220


0xd40d:	add	rax, 1
0xd411:	cmp	rax, 0x100
0xd417:	jne	0xd3ea


0xd3f1:	movzx	ecx, byte ptr [rbp + rax]
0xd3f6:	mov	r9, rdi
0xd3f9:	mov	rsi, rcx
0xd3fc:	and	ecx, 0x3f
0xd3ff:	shr	rsi, 3
0xd403:	shl	r9, cl
0xd406:	and	esi, 0x18
0xd409:	or	qword ptr [rbx + rsi], r9
0xd40d:	add	rax, 1
0xd411:	cmp	rax, 0x100
0xd417:	jne	0xd3ea


0xd245:	jmp	0xcfb4


0xd220:	test	byte ptr [rdx + rcx*2 + 1], 4
0xd225:	je	0xd238


0xd419:	jmp	0xcfb4


0xd3ea:	test	byte ptr [rdx + rax*2 + 1], 4
0xd3ef:	je	0xd40d


0xd0b5:	xor	ecx, ecx
0xd0b7:	test	rbp, rbp
0xd0ba:	mov	rdx, qword ptr [rax]
0xd0bd:	mov	edi, 1
0xd0c2:	jne	0xd41e


0xd41e:	xor	eax, eax
0xd420:	test	byte ptr [rdx + rax*2 + 1], 0x20
0xd425:	je	0xd443


0xd0e8:	add	rcx, 1
0xd0ec:	cmp	rcx, 0x100
0xd0f3:	jne	0xd0d0


0xd0d7:	mov	rax, rcx
0xd0da:	mov	rsi, rdi
0xd0dd:	sar	rax, 6
0xd0e1:	shl	rsi, cl
0xd0e4:	or	qword ptr [rbx + rax*8], rsi
0xd0e8:	add	rcx, 1
0xd0ec:	cmp	rcx, 0x100
0xd0f3:	jne	0xd0d0


0xd443:	add	rax, 1
0xd447:	cmp	rax, 0x100
0xd44d:	jne	0xd420


0xd427:	movzx	ecx, byte ptr [rbp + rax]
0xd42c:	mov	r9, rdi
0xd42f:	mov	rsi, rcx
0xd432:	and	ecx, 0x3f
0xd435:	shr	rsi, 3
0xd439:	shl	r9, cl
0xd43c:	and	esi, 0x18
0xd43f:	or	qword ptr [rbx + rsi], r9
0xd443:	add	rax, 1
0xd447:	cmp	rax, 0x100
0xd44d:	jne	0xd420


0xd0f5:	jmp	0xcfb4


0xd0d0:	test	byte ptr [rdx + rcx*2 + 1], 0x20
0xd0d5:	je	0xd0e8


0xd44f:	jmp	0xcfb4


0xd420:	test	byte ptr [rdx + rax*2 + 1], 0x20
0xd425:	je	0xd443


0xd0ff:	xor	ecx, ecx
0xd101:	test	rbp, rbp
0xd104:	mov	rdx, qword ptr [rax]
0xd107:	mov	edi, 1
0xd10c:	jne	0xd2e2


0xd2e2:	xor	eax, eax
0xd2e4:	nop	dword ptr [rax]
0xd2e8:	test	byte ptr [rdx + rax*2 + 1], 2
0xd2ed:	je	0xd30b


0xd130:	add	rcx, 1
0xd134:	cmp	rcx, 0x100
0xd13b:	jne	0xd118


0xd11f:	mov	rax, rcx
0xd122:	mov	rsi, rdi
0xd125:	sar	rax, 6
0xd129:	shl	rsi, cl
0xd12c:	or	qword ptr [rbx + rax*8], rsi
0xd130:	add	rcx, 1
0xd134:	cmp	rcx, 0x100
0xd13b:	jne	0xd118


0xd30b:	add	rax, 1
0xd30f:	cmp	rax, 0x100
0xd315:	jne	0xd2e8


0xd2ef:	movzx	ecx, byte ptr [rbp + rax]
0xd2f4:	mov	r14, rdi
0xd2f7:	mov	rsi, rcx
0xd2fa:	and	ecx, 0x3f
0xd2fd:	shr	rsi, 3
0xd301:	shl	r14, cl
0xd304:	and	esi, 0x18
0xd307:	or	qword ptr [rbx + rsi], r14
0xd30b:	add	rax, 1
0xd30f:	cmp	rax, 0x100
0xd315:	jne	0xd2e8


0xd13d:	jmp	0xcfb4


0xd118:	test	byte ptr [rdx + rcx*2 + 1], 2
0xd11d:	je	0xd130


0xd317:	jmp	0xcfb4


0xd2e8:	test	byte ptr [rdx + rax*2 + 1], 2
0xd2ed:	je	0xd30b


0xcf7d:	xor	ecx, ecx
0xcf7f:	test	rbp, rbp
0xcf82:	mov	rdx, qword ptr [rax]
0xcf85:	mov	edi, 1
0xcf8a:	jne	0xd24a


0xcf90:	test	byte ptr [rdx + rcx*2], 2
0xcf94:	je	0xcfa7


0xd24a:	xor	eax, eax
0xd24c:	nop	dword ptr [rax]
0xd250:	test	byte ptr [rdx + rax*2], 2
0xd254:	je	0xd272


0xcfa7:	add	rcx, 1
0xcfab:	cmp	rcx, 0x100
0xcfb2:	jne	0xcf90


0xcf96:	mov	rax, rcx
0xcf99:	mov	rsi, rdi
0xcf9c:	sar	rax, 6
0xcfa0:	shl	rsi, cl
0xcfa3:	or	qword ptr [rbx + rax*8], rsi
0xcfa7:	add	rcx, 1
0xcfab:	cmp	rcx, 0x100
0xcfb2:	jne	0xcf90


0xd272:	add	rax, 1
0xd276:	cmp	rax, 0x100
0xd27c:	jne	0xd250


0xd256:	movzx	ecx, byte ptr [rbp + rax]
0xd25b:	mov	r11, rdi
0xd25e:	mov	rsi, rcx
0xd261:	and	ecx, 0x3f
0xd264:	shr	rsi, 3
0xd268:	shl	r11, cl
0xd26b:	and	esi, 0x18
0xd26e:	or	qword ptr [rbx + rsi], r11
0xd272:	add	rax, 1
0xd276:	cmp	rax, 0x100
0xd27c:	jne	0xd250


0xd27e:	jmp	0xcfb4


0xd250:	test	byte ptr [rdx + rax*2], 2
0xd254:	je	0xd272


0xcfcd:	xor	ecx, ecx
0xcfcf:	test	rbp, rbp
0xcfd2:	mov	rdx, qword ptr [rax]
0xcfd5:	mov	edi, 1
0xcfda:	jne	0xd1ca


0xcfe0:	test	byte ptr [rdx + rcx*2], 8
0xcfe4:	je	0xcff7


0xd1ca:	xor	eax, eax
0xd1cc:	nop	dword ptr [rax]
0xd1d0:	test	byte ptr [rdx + rax*2], 8
0xd1d4:	je	0xd1f2


0xcff7:	add	rcx, 1
0xcffb:	cmp	rcx, 0x100
0xd002:	jne	0xcfe0


0xcfe6:	mov	rax, rcx
0xcfe9:	mov	rsi, rdi
0xcfec:	sar	rax, 6
0xcff0:	shl	rsi, cl
0xcff3:	or	qword ptr [rbx + rax*8], rsi
0xcff7:	add	rcx, 1
0xcffb:	cmp	rcx, 0x100
0xd002:	jne	0xcfe0


0xd1f2:	add	rax, 1
0xd1f6:	cmp	rax, 0x100
0xd1fc:	jne	0xd1d0


0xd1d6:	movzx	ecx, byte ptr [rbp + rax]
0xd1db:	mov	r10, rdi
0xd1de:	mov	rsi, rcx
0xd1e1:	and	ecx, 0x3f
0xd1e4:	shr	rsi, 3
0xd1e8:	shl	r10, cl
0xd1eb:	and	esi, 0x18
0xd1ee:	or	qword ptr [rbx + rsi], r10
0xd1f2:	add	rax, 1
0xd1f6:	cmp	rax, 0x100
0xd1fc:	jne	0xd1d0


0xd004:	jmp	0xcfb4


0xd1fe:	jmp	0xcfb4


0xd1d0:	test	byte ptr [rdx + rax*2], 8
0xd1d4:	je	0xd1f2


0x3601:	mov	edi, ebx
0x3603:	pop	rbx
0x3604:	jmp	0x1af0


0x1af0:	jmp	qword ptr [rip + 0x21a2a2]




0x4563:	test	rax, rax
0x4566:	je	0x45bd


0x45bd:	mov	qword ptr [rip + 0x217c74], rbx
0x45c4:	mov	qword ptr [rip + 0x217af5], rbx
0x45cb:	pop	rbx
0x45cc:	ret	


0x4568:	lea	r8, [rax + 1]
0x456c:	mov	rdx, r8
0x456f:	sub	rdx, rbx
0x4572:	cmp	rdx, 6
0x4576:	jle	0x45bd


0x4578:	lea	rsi, [rax - 6]
0x457c:	lea	rdi, [rip + 0x1261d]
0x4583:	mov	ecx, 7
0x4588:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4588:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x458a:	seta	dl
0x458d:	sbb	dl, 0
0x4590:	test	dl, dl
0x4592:	jne	0x45bd


0x4594:	lea	rdi, [rip + 0x1260d]
0x459b:	mov	ecx, 3
0x45a0:	mov	rsi, r8
0x45a3:	mov	rbx, r8
0x45a6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x45a6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x45a8:	seta	dl
0x45ab:	sbb	dl, 0
0x45ae:	test	dl, dl
0x45b0:	jne	0x45bd


0x45b2:	lea	rbx, [rax + 4]
0x45b6:	mov	qword ptr [rip + 0x217ae3], rbx
0x45bd:	mov	qword ptr [rip + 0x217c74], rbx
0x45c4:	mov	qword ptr [rip + 0x217af5], rbx
0x45cb:	pop	rbx
0x45cc:	ret	


0x45ea:	call	0x1b10


0x632c:	lea	rsi, [rip + 0x10d68]
0x6333:	xor	edi, edi
0x6335:	mov	edx, 5
0x633a:	call	0x1bf0


0x6441:	jmp	0x632c


0x7955:	mov	ebx, eax
0x7957:	jmp	0x78f0


0x78f0:	mov	rcx, qword ptr [rsp + 0x18]
0x78f5:	xor	rcx, qword ptr fs:[0x28]
0x78fe:	mov	eax, ebx
0x7900:	jne	0x7a5d


0x7906:	add	rsp, 0x50
0x790a:	pop	rbx
0x790b:	pop	rbp
0x790c:	pop	r12
0x790e:	ret	


0x7a5d:	call	0x1c20


0x78e9:	mov	ebx, eax
0x78eb:	nop	dword ptr [rax + rax]
0x78f0:	mov	rcx, qword ptr [rsp + 0x18]
0x78f5:	xor	rcx, qword ptr fs:[0x28]
0x78fe:	mov	eax, ebx
0x7900:	jne	0x7a5d


0x79ac:	mov	ebx, eax
0x79ae:	jmp	0x78f0


0x7895:	test	eax, eax
0x7897:	mov	ebx, eax
0x7899:	js	0x7a28


0x7a28:	call	0x1b20


0x789f:	mov	dword ptr [rip + 0x214acf], 1
0x78a9:	jmp	0x78f0


0x79bc:	test	eax, eax
0x79be:	mov	ebx, eax
0x79c0:	js	0x78f0


0x79c6:	cmp	dword ptr [rip + 0x2149ab], -1
0x79cd:	jne	0x78f0


0x79d3:	xor	eax, eax
0x79d5:	mov	esi, 1
0x79da:	mov	edi, ebx
0x79dc:	call	0x1b90


0x79e1:	test	eax, eax
0x79e3:	js	0x7a01


0x7a01:	call	0x1b20


0x79e5:	or	eax, 1
0x79e8:	mov	esi, 2
0x79ed:	mov	edi, ebx
0x79ef:	mov	edx, eax
0x79f1:	xor	eax, eax
0x79f3:	call	0x1b90


0x79f8:	cmp	eax, -1
0x79fb:	jne	0x78f0


0x7a73:	mov	ebx, eax
0x7a75:	jmp	0x78f0


0x7a9e:	test	eax, eax
0x7aa0:	je	0x7aaa


0x7aa2:	test	dword ptr [rbx], 0x100
0x7aa8:	jne	0x7ab8


0x7ab8:	mov	rdi, rbx
0x7abb:	mov	edx, 1
0x7ac0:	xor	esi, esi
0x7ac2:	call	0x7ad0


0x891d:	mov	rax, qword ptr [rax]
0x8920:	mov	rdx, qword ptr [r14 + 8]
0x8924:	mov	eax, dword ptr [rax + r12*4]
0x8928:	mov	byte ptr [rdx + r15], al
0x892c:	mov	rdx, qword ptr [r14 + 8]
0x8930:	mov	rax, qword ptr [r14 + 0x10]
0x8934:	movzx	edx, byte ptr [rdx + r15]
0x8939:	mov	dword ptr [rax + r15*4], edx
0x893d:	add	r15, 1
0x8941:	jmp	0x88ea


0x88ea:	cmp	rbx, r15
0x88ed:	jg	0x8800


0x88f3:	jmp	0x8968


0x8800:	mov	rbp, qword ptr [r14 + 0x28]
0x8804:	mov	r13, r15
0x8807:	add	rbp, r15
0x880a:	add	rbp, qword ptr [r14]
0x880d:	movzx	r12d, byte ptr [rbp]
0x8812:	test	r12b, 0x80
0x8816:	jne	0x882a


0x83ef:	mov	rsi, qword ptr [rax]
0x83f2:	mov	rcx, qword ptr [rbp + 8]
0x83f6:	mov	edx, dword ptr [rsi + rdx*4]
0x83f9:	mov	byte ptr [rcx + rbx], dl
0x83fc:	add	rbx, 1
0x8400:	cmp	r12, rbx
0x8403:	jne	0x83d8


0x8418:	movzx	edx, byte ptr [rcx + rdx]
0x841c:	jmp	0x83ef


0x83d8:	mov	rdx, qword ptr [rbp]
0x83dc:	mov	rcx, qword ptr [rbp + 0x78]
0x83e0:	add	rdx, rbx
0x83e3:	add	rdx, qword ptr [rbp + 0x28]
0x83e7:	test	rcx, rcx
0x83ea:	movzx	edx, byte ptr [rdx]
0x83ed:	jne	0x8418


0xa33a:	xor	eax, eax
0xa33c:	add	rsp, 8
0xa340:	pop	rbx
0xa341:	pop	rbp
0xa342:	pop	r12
0xa344:	pop	r13
0xa346:	ret	


0x9d5a:	xor	eax, eax
0x9d5c:	jmp	0x9cdc


0x9cdc:	pop	rbx
0x9cdd:	pop	rbp
0x9cde:	pop	r12
0x9ce0:	ret	


0x9d35:	jmp	0x9c89


0x9dbf:	jmp	0x9cda


0xe92d:	lea	rax, [rbp - 0x70]
0xe931:	mov	rcx, qword ptr [r13]
0xe935:	mov	qword ptr [rbp - 0xa8], rax
0xe93c:	add	rax, 0x10
0xe940:	mov	qword ptr [rbp - 0x78], rcx
0xe944:	mov	qword ptr [rbp - 0xc8], rax
0xe94b:	lea	rax, [rbp - 0x78]
0xe94f:	mov	qword ptr [rbp - 0xb0], rax
0xe956:	jmp	0xea39


0xea39:	mov	rax, qword ptr [r13 + 8]
0xea3d:	cmp	rax, rcx
0xea40:	jl	0xef30


0xef30:	mov	rdi, qword ptr [rbp - 0x60]
0xef34:	call	0x1b00


0xea46:	mov	rdi, qword ptr [rbp - 0x90]
0xea4d:	mov	r9, rbx
0xea50:	mov	r15, rbx
0xea53:	shl	r9, 4
0xea57:	mov	rdx, qword ptr [rdi]
0xea5a:	add	rdx, r9
0xea5d:	movzx	esi, byte ptr [rdx + 8]
0xea61:	cmp	esi, 8
0xea64:	jne	0xe960


0xea6a:	mov	rdx, qword ptr [rdx]
0xea6d:	add	rdx, 1
0xea71:	cmp	qword ptr [rbp - 0x98], rdx
0xea78:	jle	0xe969


0xe960:	cmp	esi, 9
0xe963:	je	0xeb50


0xe969:	cmp	rax, rcx
0xe96c:	jne	0xe97c


0xea7e:	shl	rdx, 4
0xea82:	add	rdx, r13
0xea85:	mov	qword ptr [rdx + 8], -1
0xea8d:	mov	qword ptr [rdx], rcx
0xea90:	mov	rax, qword ptr [r13 + 8]
0xea94:	jmp	0xe969


0xeb50:	mov	rdi, qword ptr [rdx]
0xeb53:	lea	rsi, [rdi + 1]
0xeb57:	cmp	qword ptr [rbp - 0x98], rsi
0xeb5e:	jle	0xe969


0xe96e:	cmp	qword ptr [r12 + 0xb0], rbx
0xe976:	je	0xed50


0xe97c:	mov	r14, qword ptr [r12 + 0x98]
0xe984:	mov	rdi, qword ptr [r14]
0xe987:	lea	rsi, [rdi + r9]
0xe98b:	movzx	eax, byte ptr [rsi + 8]
0xe98f:	test	al, 8
0xe991:	jne	0xeaa0


0xeb64:	shl	rsi, 4
0xeb68:	lea	rax, [r13 + rsi]
0xeb6d:	cmp	qword ptr [rax], rcx
0xeb70:	jl	0xeef0


0xed50:	cmp	qword ptr [rbp - 0x88], 0
0xed58:	je	0xf08c


0xe997:	test	byte ptr [rsi + 0xa], 0x10
0xe99b:	jne	0xeba0


0xeaa0:	mov	rax, qword ptr [r12 + 0xb8]
0xeaa8:	mov	rdx, qword ptr [rbp - 0x78]
0xeaac:	mov	rsi, rbx
0xeaaf:	mov	rdi, qword ptr [rbp - 0xa8]
0xeab6:	mov	r9, qword ptr [rax + rdx*8]
0xeaba:	mov	rax, qword ptr [r14 + 0x28]
0xeabe:	lea	rdx, [rbx + rbx*2]
0xeac2:	mov	qword ptr [rbp - 0xa0], r9
0xeac9:	lea	r15, [rax + rdx*8]
0xeacd:	call	0x8190


0xeef0:	mov	rdx, qword ptr [rbp - 0xb8]
0xeef7:	mov	rdi, qword ptr [rbp - 0xc0]
0xeefe:	mov	rsi, r13
0xef01:	mov	qword ptr [rax + 8], rcx
0xef05:	mov	qword ptr [rbp - 0xd8], r9
0xef0c:	mov	qword ptr [rbp - 0xa0], rcx
0xef13:	call	0x1d70


0xeb76:	test	byte ptr [rdx + 0xa], 8
0xeb7a:	je	0xeb8e


0xf08c:	mov	rdi, qword ptr [rbp - 0x60]
0xf090:	call	0x1b00


0xed5e:	mov	rcx, qword ptr [rbp - 0x98]
0xed65:	test	rcx, rcx
0xed68:	je	0xed8a


0xe9a1:	cmp	al, 4
0xe9a3:	je	0xebe0


0xeba0:	mov	r8, qword ptr [rbp - 0x78]
0xeba4:	lea	rsi, [r14 + 0xd8]
0xebab:	mov	rcx, r12
0xebae:	mov	rdx, rbx
0xebb1:	mov	qword ptr [rbp - 0xa0], r9
0xebb8:	call	0xde80


0xeb8e:	mov	qword ptr [rax + 8], rcx
0xeb92:	mov	rax, qword ptr [r13 + 8]
0xeb96:	jmp	0xe969


0xeb7c:	mov	rdi, qword ptr [rbp - 0xc0]
0xeb83:	cmp	qword ptr [rdi + rsi], -1
0xeb88:	jne	0xef7b


0xed8a:	mov	rdi, qword ptr [rbp - 0x60]
0xed8e:	call	0x1b00


0xed6a:	mov	rax, r13
0xed6d:	xor	edx, edx
0xed6f:	nop	
0xed70:	cmp	qword ptr [rax], 0
0xed74:	js	0xed7d


0xebe0:	mov	rax, qword ptr [rsi]
0xebe3:	add	rax, 1
0xebe7:	shl	rax, 4
0xebeb:	add	rax, r13
0xebee:	mov	rdx, qword ptr [rax + 8]
0xebf2:	mov	rdi, qword ptr [rax]
0xebf5:	mov	rcx, rdx
0xebf8:	sub	rcx, rdi
0xebfb:	cmp	qword ptr [rbp - 0x88], 0
0xec03:	je	0xedb8


0xe9a9:	mov	rcx, qword ptr [rbp - 0x78]
0xe9ad:	mov	rdx, rcx
0xe9b0:	mov	rdi, r12
0xe9b3:	mov	qword ptr [rbp - 0xa0], rcx
0xe9ba:	call	0xb5a0


0xef7b:	mov	rdx, qword ptr [rbp - 0xb8]
0xef82:	mov	rsi, rdi
0xef85:	mov	rdi, r13
0xef88:	mov	qword ptr [rbp - 0xd8], rcx
0xef8f:	mov	qword ptr [rbp - 0xa0], r9
0xef96:	call	0x1d70


0xed7d:	add	rdx, 1
0xed81:	add	rax, 0x10
0xed85:	cmp	rcx, rdx
0xed88:	jne	0xed70


0xed76:	cmp	qword ptr [rax + 8], -1
0xed7b:	je	0xedd0


0xedb8:	test	rcx, rcx
0xedbb:	je	0xee70


0xec09:	cmp	rdi, -1
0xec0d:	je	0xee26


0xed70:	cmp	qword ptr [rax], 0
0xed74:	js	0xed7d


0xedd0:	mov	rdi, qword ptr [rbp - 0x88]
0xedd7:	mov	r9, qword ptr [rbp - 0xa8]
0xedde:	mov	r8, r13
0xede1:	mov	rcx, qword ptr [rbp - 0x98]
0xede8:	mov	rdx, qword ptr [rbp - 0xb0]
0xedef:	lea	rsi, [rdi + 0x10]
0xedf3:	call	0xcde0


0xee70:	mov	rdi, qword ptr [rbp - 0xa8]
0xee77:	mov	rsi, rbx
0xee7a:	mov	qword ptr [rbp - 0xa0], r9
0xee81:	call	0x8190


0xedc1:	mov	r15, qword ptr [rbp - 0x78]
0xedc5:	jmp	0xec65


0xee26:	mov	rdi, qword ptr [rbp - 0x88]
0xee2d:	mov	rcx, qword ptr [rbp - 0x98]
0xee34:	lea	rdx, [rbp - 0x78]
0xee38:	mov	r9, qword ptr [rbp - 0xa8]
0xee3f:	mov	r8, r13
0xee42:	lea	rsi, [rdi + 0x10]
0xee46:	call	0xcde0


0xec13:	cmp	rdx, -1
0xec17:	je	0xee26


0xec65:	mov	rax, qword ptr [r14 + 0x18]
0xec69:	lea	rdx, [r15 + rcx]
0xec6d:	mov	rbx, qword ptr [rax + rbx*8]
0xec71:	jmp	0xe9da


0xec1d:	test	rcx, rcx
0xec20:	je	0xee70


0xe9da:	cmp	qword ptr [rbp - 0x88], 0
0xe9e2:	mov	qword ptr [rbp - 0x78], rdx
0xe9e6:	je	0xea24


0xec26:	mov	r15, qword ptr [rbp - 0x78]
0xec2a:	mov	rdx, qword ptr [r12 + 0x30]
0xec2f:	mov	rax, qword ptr [r12 + 8]
0xec34:	sub	rdx, r15
0xec37:	cmp	rcx, rdx
0xec3a:	jg	0xee26


0xea24:	mov	qword ptr [rbp - 0x68], 0
0xea2c:	test	rbx, rbx
0xea2f:	js	0xee0a


0xe9e8:	cmp	rdx, qword ptr [r12 + 0xa8]
0xe9f0:	jg	0xee26


0xec40:	lea	rsi, [rax + r15]
0xec44:	add	rdi, rax
0xec47:	mov	rdx, rcx
0xec4a:	mov	qword ptr [rbp - 0xa0], rcx
0xec51:	call	0x1d00


0xee0a:	cmp	rbx, -2
0xee0e:	je	0xefb8


0xea35:	mov	rcx, qword ptr [rbp - 0x78]
0xea39:	mov	rax, qword ptr [r13 + 8]
0xea3d:	cmp	rax, rcx
0xea40:	jl	0xef30


0xe9f6:	mov	rax, qword ptr [r12 + 0xb8]
0xe9fe:	mov	rax, qword ptr [rax + rdx*8]
0xea02:	test	rax, rax
0xea05:	je	0xee26


0xefb8:	mov	rdi, qword ptr [rbp - 0x60]
0xefbc:	call	0x1b00


0xea0b:	mov	rdi, qword ptr [rax + 0x10]
0xea0f:	lea	rsi, [rax + 0x18]
0xea13:	mov	rdx, rbx
0xea16:	call	0x96d0


0xf0dc:	mov	rdi, qword ptr [rbp - 0x60]
0xf0e0:	call	0x1b00


0xea1b:	test	rax, rax
0xea1e:	je	0xee26


0xec56:	test	eax, eax
0xec58:	mov	rcx, qword ptr [rbp - 0xa0]
0xec5f:	jne	0xee26


0xe9bf:	test	al, al
0xe9c1:	mov	rcx, qword ptr [rbp - 0xa0]
0xe9c8:	je	0xee18


0xee18:	cmp	qword ptr [rbp - 0x88], 0
0xee20:	je	0xf0dc


0xe9ce:	mov	rax, qword ptr [r14 + 0x18]
0xe9d2:	lea	rdx, [rcx + 1]
0xe9d6:	mov	rbx, qword ptr [rax + r15*8]
0xe9da:	cmp	qword ptr [rbp - 0x88], 0
0xe9e2:	mov	qword ptr [rbp - 0x78], rdx
0xe9e6:	je	0xea24


0xebbd:	movsxd	rcx, eax
0xebc0:	test	rcx, rcx
0xebc3:	jne	0xedc1


0xebc9:	mov	r9, qword ptr [rbp - 0xa0]
0xebd0:	mov	rsi, qword ptr [r14]
0xebd3:	mov	rcx, qword ptr [rbp - 0x78]
0xebd7:	add	rsi, r9
0xebda:	jmp	0xe9ad


0xe9ad:	mov	rdx, rcx
0xe9b0:	mov	rdi, r12
0xe9b3:	mov	qword ptr [rbp - 0xa0], rcx
0xe9ba:	call	0xb5a0


0xee86:	test	al, al
0xee88:	je	0xefb8


0xee8e:	mov	rdx, qword ptr [r14 + 0x28]
0xee92:	lea	rax, [rbx + rbx*2]
0xee96:	mov	rcx, qword ptr [rbp - 0x78]
0xee9a:	lea	rax, [rdx + rax*8]
0xee9e:	mov	qword ptr [rbp - 0xd8], rcx
0xeea5:	mov	rax, qword ptr [rax + 0x10]
0xeea9:	mov	rbx, qword ptr [rax]
0xeeac:	mov	rax, qword ptr [r12 + 0xb8]
0xeeb4:	mov	rax, qword ptr [rax + rcx*8]
0xeeb8:	mov	rdx, rbx
0xeebb:	mov	rdi, qword ptr [rax + 0x10]
0xeebf:	lea	rsi, [rax + 0x18]
0xeec3:	call	0x96d0


0xeec8:	test	rax, rax
0xeecb:	jne	0xea2c


0xeed1:	mov	r9, qword ptr [rbp - 0xa0]
0xeed8:	mov	rsi, qword ptr [r14]
0xeedb:	mov	rcx, qword ptr [rbp - 0xd8]
0xeee2:	add	rsi, r9
0xeee5:	jmp	0xe9ad


0xea2c:	test	rbx, rbx
0xea2f:	js	0xee0a


0xead2:	test	al, al
0xead4:	mov	r9, qword ptr [rbp - 0xa0]
0xeadb:	je	0xefb8


0xeae1:	mov	r10, qword ptr [r15 + 8]
0xeae5:	test	r10, r10
0xeae8:	jle	0xee18


0xeaee:	mov	r15, qword ptr [r15 + 0x10]
0xeaf2:	mov	r11, qword ptr [r9 + 0x10]
0xeaf6:	lea	r14, [r9 + 0x18]
0xeafa:	mov	rbx, -1
0xeb01:	xor	r9d, r9d
0xeb04:	mov	qword ptr [rbp - 0xa0], r12
0xeb0b:	nop	dword ptr [rax + rax]
0xeb10:	mov	r12, qword ptr [r15 + r9*8]
0xeb14:	mov	rsi, r14
0xeb17:	mov	rdi, r11
0xeb1a:	mov	rdx, r12
0xeb1d:	call	0x96d0


0xeb22:	test	rax, rax
0xeb25:	je	0xeb34


0xeb34:	add	r9, 1
0xeb38:	cmp	r10, r9
0xeb3b:	jne	0xeb10


0xeb27:	cmp	rbx, -1
0xeb2b:	jne	0xec80


0xeb3d:	mov	r12, qword ptr [rbp - 0xa0]
0xeb44:	jmp	0xea2c


0xeb10:	mov	r12, qword ptr [r15 + r9*8]
0xeb14:	mov	rsi, r14
0xeb17:	mov	rdi, r11
0xeb1a:	mov	rdx, r12
0xeb1d:	call	0x96d0


0xeb31:	mov	rbx, r12
0xeb34:	add	r9, 1
0xeb38:	cmp	r10, r9
0xeb3b:	jne	0xeb10


0xec80:	mov	rsi, qword ptr [rbp - 0xc8]
0xec87:	mov	rdi, qword ptr [rbp - 0x68]
0xec8b:	mov	rdx, rbx
0xec8e:	mov	r14, r12
0xec91:	mov	r12, qword ptr [rbp - 0xa0]
0xec98:	call	0x96d0


0xec9d:	test	rax, rax
0xeca0:	jne	0xee60


0xeca6:	mov	rcx, qword ptr [rbp - 0x88]
0xecad:	test	rcx, rcx
0xecb0:	je	0xea2c


0xee60:	mov	rbx, r14
0xee63:	jmp	0xea2c


0xecb6:	mov	r15, qword ptr [rcx]
0xecb9:	mov	rdx, qword ptr [rbp - 0x78]
0xecbd:	lea	rax, [r15 + 1]
0xecc1:	cmp	rax, qword ptr [rcx + 8]
0xecc5:	mov	qword ptr [rcx], rax
0xecc8:	je	0xf04d


0xf04d:	lea	rsi, [rax + rax*2]
0xf051:	mov	rax, qword ptr [rbp - 0x88]
0xf058:	mov	qword ptr [rbp - 0xa0], rdx
0xf05f:	shl	rsi, 5
0xf063:	mov	rdi, qword ptr [rax + 0x10]
0xf067:	call	0x1e00


0xecce:	mov	rax, qword ptr [rcx + 0x10]
0xecd2:	lea	r15, [r15 + r15*2]
0xecd6:	shl	r15, 4
0xecda:	add	r15, rax
0xecdd:	mov	qword ptr [r15 + 8], r14
0xece1:	mov	r14, qword ptr [rbp - 0xb8]
0xece8:	mov	qword ptr [r15], rdx
0xeceb:	mov	rdi, r14
0xecee:	call	0x1da0


0xef9b:	mov	rax, qword ptr [r13 + 8]
0xef9f:	mov	r9, qword ptr [rbp - 0xa0]
0xefa6:	mov	rcx, qword ptr [rbp - 0xd8]
0xefad:	jmp	0xe969


0xef18:	mov	rax, qword ptr [r13 + 8]
0xef1c:	mov	rcx, qword ptr [rbp - 0xa0]
0xef23:	mov	r9, qword ptr [rbp - 0xd8]
0xef2a:	jmp	0xe969


0xce20:	mov	rdi, qword ptr [rbp + 0x10]
0xce24:	call	0x1b00


0xf06c:	test	rax, rax
0xf06f:	je	0xf0b5


0xf0b5:	mov	rdi, qword ptr [rbp - 0x60]
0xf0b9:	call	0x1b00


0xf071:	mov	rcx, qword ptr [rbp - 0x88]
0xf078:	mov	rdx, qword ptr [rbp - 0xa0]
0xf07f:	shl	qword ptr [rcx + 8], 1
0xf083:	mov	qword ptr [rcx + 0x10], rax
0xf087:	jmp	0xecd2


0xecd2:	lea	r15, [r15 + r15*2]
0xecd6:	shl	r15, 4
0xecda:	add	r15, rax
0xecdd:	mov	qword ptr [r15 + 8], r14
0xece1:	mov	r14, qword ptr [rbp - 0xb8]
0xece8:	mov	qword ptr [r15], rdx
0xeceb:	mov	rdi, r14
0xecee:	call	0x1da0


0xf252:	test	rax, rax
0xf255:	mov	rcx, qword ptr [rsp + 8]
0xf25a:	je	0xf2b0


0xf2b0:	mov	rdi, qword ptr [rbx + 0xd8]
0xf2b7:	call	0x1b00


0xf25c:	mov	rsi, qword ptr [rbx + 0xc8]
0xf263:	mov	rdx, qword ptr [rbx + 0xd0]
0xf26a:	mov	qword ptr [rbx + 0xd8], rax
0xf271:	mov	qword ptr [rsp + 8], rcx
0xf276:	lea	rsi, [rsi + rsi*4]
0xf27a:	lea	rdx, [rdx + rdx*4]
0xf27e:	lea	rdi, [rax + rsi*8]
0xf282:	shl	rdx, 3
0xf286:	xor	esi, esi
0xf288:	call	0x1cb0


0xf28d:	shl	qword ptr [rbx + 0xd0], 1
0xf294:	mov	rax, qword ptr [rbx + 0xc8]
0xf29b:	mov	rdi, qword ptr [rbx + 0xd8]
0xf2a2:	mov	rsi, qword ptr [rbp + 8]
0xf2a6:	mov	rcx, qword ptr [rsp + 8]
0xf2ab:	jmp	0xf1a9


0xfb74:	test	rax, rax
0xfb77:	je	0xfa39


0xfa39:	mov	eax, 0xc
0xfa3e:	jmp	0xf648


0xfb7d:	mov	rdx, qword ptr [rsp + 0x10]
0xfb82:	mov	qword ptr [r12 + 0x28], rax
0xfb87:	mov	qword ptr [r12 + 0x18], rdx
0xfb8c:	jmp	0xf984


0x8c74:	test	rax, rax
0x8c77:	je	0x8d38


0x8c7d:	mov	qword ptr [rbx + 0xb8], rax
0x8c84:	cmp	byte ptr [rbx + 0x88], 0
0x8c8b:	mov	eax, dword ptr [rbx + 0x90]
0x8c91:	je	0x8cb0


0xb475:	test	rax, rax
0xb478:	mov	r9, rax
0xb47b:	mov	rcx, qword ptr [rsp + 8]
0xb480:	je	0xb451


0xb451:	mov	eax, 0xc
0xb456:	jmp	0xb442


0xb482:	mov	qword ptr [r15 + 0xf8], rax
0xb489:	mov	rax, qword ptr [rsp + 0x10]
0xb48e:	mov	r8, qword ptr [r15 + 0xe8]
0xb495:	mov	qword ptr [r15 + 0xf0], rax
0xb49c:	jmp	0xb3e3


0xb442:	add	rsp, 0x28
0xb446:	pop	rbx
0xb447:	pop	rbp
0xb448:	pop	r12
0xb44a:	pop	r13
0xb44c:	pop	r14
0xb44e:	pop	r15
0xb450:	ret	


0x82a3:	test	rax, rax
0x82a6:	je	0x82b5


0x82b5:	xor	eax, eax
0x82b7:	jmp	0x81be


0x82a8:	mov	qword ptr [rbx + 0x10], rax
0x82ac:	mov	rsi, qword ptr [rbx + 8]
0x82b0:	jmp	0x8209


0x9d7f:	test	rax, rax
0x9d82:	je	0x9dc4


0x9dc4:	mov	eax, 0xc
0x9dc9:	jmp	0x9cdc


0x9d84:	mov	qword ptr [rbx + 0x10], rax
0x9d88:	mov	qword ptr [rbx], rbp
0x9d8b:	mov	rax, qword ptr [rbx + 8]
0x9d8f:	mov	rdx, qword ptr [r12 + 8]
0x9d94:	jmp	0x9c24


0xa360:	test	rax, rax
0xa363:	mov	rdi, rax
0xa366:	je	0xa381


0xa381:	mov	eax, 0xc
0xa386:	jmp	0xa33c


0xa368:	mov	qword ptr [rbx + 0x10], rax
0xa36c:	mov	qword ptr [rbx], r13
0xa36f:	mov	rcx, qword ptr [rbx + 8]
0xa373:	mov	r9, qword ptr [rbp + 8]
0xa377:	mov	r11, qword ptr [r12 + 8]
0xa37c:	jmp	0xa22b


0xa33c:	add	rsp, 8
0xa340:	pop	rbx
0xa341:	pop	rbp
0xa342:	pop	r12
0xa344:	pop	r13
0xa346:	ret	


0xe7b6:	test	rax, rax
0xe7b9:	je	0xe7fb


0xe7bb:	mov	rcx, qword ptr [rsp + 0x60]
0xe7c0:	lea	rdx, [r12*8]
0xe7c8:	lea	rdi, [rax + r13*8]
0xe7cc:	xor	esi, esi
0xe7ce:	mov	qword ptr [rcx + 0x10], rax
0xe7d2:	mov	qword ptr [rcx + 8], r14
0xe7d6:	call	0x1cb0


0xe7db:	jmp	0xe15c


0x80b5:	test	rax, rax
0x80b8:	je	0x8110


0x80ba:	mov	rdi, qword ptr [rbx + 0x18]
0x80be:	mov	qword ptr [rbx + 0x10], rax
0x80c2:	test	rdi, rdi
0x80c5:	je	0x80dd


0x80c7:	lea	rsi, [rbp*8]
0x80cf:	call	0x1e00


0x80d4:	test	rax, rax
0x80d7:	je	0x8110


0x80d9:	mov	qword ptr [rbx + 0x18], rax
0x80dd:	cmp	byte ptr [rbx + 0x8b], 0
0x80e4:	jne	0x80f8


0x8104:	test	rax, rax
0x8107:	je	0x8110


0x8109:	mov	qword ptr [rbx + 8], rax
0x810d:	jmp	0x80e6


0x8f6c:	test	rax, rax
0x8f6f:	je	0x9032


0x8f75:	mov	r15, rbp
0x8f78:	mov	rdi, qword ptr [rbx + 0x18]
0x8f7c:	mov	qword ptr [rbx], rax
0x8f7f:	shl	r15, 4
0x8f83:	mov	rsi, r15
0x8f86:	call	0x1e00


0x8f8b:	mov	rdi, qword ptr [rbx + 0x20]
0x8f8f:	mov	rsi, r15
0x8f92:	lea	r15, [r13 + rbp*4]
0x8f97:	mov	r12, rax
0x8f9a:	shl	r15, 3
0x8f9e:	call	0x1e00


0x8fa3:	mov	rdi, qword ptr [rbx + 0x28]
0x8fa7:	mov	rsi, r15
0x8faa:	mov	qword ptr [rsp], rax
0x8fae:	call	0x1e00


0x8fb3:	mov	rdi, qword ptr [rbx + 0x30]
0x8fb7:	mov	rsi, r15
0x8fba:	mov	rbp, rax
0x8fbd:	call	0x1e00


0x8fc2:	test	r12, r12
0x8fc5:	mov	rcx, qword ptr [rsp]
0x8fc9:	je	0x9000


0x9000:	mov	rdi, r12
0x9003:	mov	qword ptr [rsp + 8], rax
0x9008:	mov	qword ptr [rsp], rcx
0x900c:	call	0x1b00


0x8fcb:	test	rcx, rcx
0x8fce:	je	0x9000


0x8fd0:	test	rbp, rbp
0x8fd3:	je	0x9000


0x8fd5:	test	rax, rax
0x8fd8:	mov	rdx, qword ptr [rsp + 8]
0x8fdd:	je	0x9000


0x8fdf:	mov	qword ptr [rbx + 0x18], r12
0x8fe3:	mov	qword ptr [rbx + 0x20], rcx
0x8fe7:	mov	qword ptr [rbx + 0x28], rbp
0x8feb:	mov	qword ptr [rbx + 0x30], rax
0x8fef:	mov	qword ptr [rbx + 8], r13
0x8ff3:	mov	rsi, qword ptr [rbx + 0x10]
0x8ff7:	jmp	0x8e9d


0x8e9d:	mov	rax, rsi
0x8ea0:	mov	ecx, edx
0x8ea2:	shl	rax, 4
0x8ea6:	add	rax, qword ptr [rbx]
0x8ea9:	and	ecx, 0xfffc00ff
0x8eaf:	mov	qword ptr [rax + 8], rdx
0x8eb3:	mov	dword ptr [rax + 8], ecx
0x8eb6:	xor	ecx, ecx
0x8eb8:	cmp	dl, 6
0x8ebb:	mov	qword ptr [rax], r14
0x8ebe:	sete	cl
0x8ec1:	cmp	dl, 5
0x8ec4:	jne	0x8ed2


0xd057:	test	rax, rax
0xd05a:	je	0xd378


0xd378:	mov	eax, 0xc
0xd37d:	jmp	0xcfb6


0xd060:	mov	rdx, qword ptr [rsp]
0xd064:	mov	r8, qword ptr [rsp + 8]
0xd069:	mov	qword ptr [rdx], rax
0xd06c:	mov	qword ptr [r8], r14
0xd06f:	mov	rcx, qword ptr [r13]
0xd073:	jmp	0xcf28


0xcfb6:	add	rsp, 0x10
0xcfba:	pop	rbx
0xcfbb:	pop	rbp
0xcfbc:	pop	r12
0xcfbe:	pop	r13
0xcfc0:	pop	r14
0xcfc2:	ret	


0x6986:	test	rax, rax
0x6989:	jne	0x6990


0x698b:	test	rbx, rbx
0x698e:	jne	0x69a1


0x6990:	pop	rbx
0x6991:	ret	


0x69a1:	call	0x3810


0x38db:	mov	rcx, qword ptr [rip + 0x2188be]
0x38e2:	mov	rdi, rax
0x38e5:	mov	qword ptr [rip + 0x2188bc], rax
0x38ec:	jmp	0x386b


0x816f:	test	rax, rax
0x8172:	je	0x8180


0x8180:	xor	eax, eax
0x8182:	jmp	0x814a


0x8174:	mov	qword ptr [rbx + 0x10], rax
0x8178:	mov	rsi, qword ptr [rbx + 8]
0x817c:	jmp	0x8139


0x814a:	add	rsp, 8
0x814e:	pop	rbx
0x814f:	pop	rbp
0x8150:	ret	


0x150f3:	test	rax, rax
0x150f6:	mov	rbx, rax
0x150f9:	je	0x15291


0x15291:	mov	eax, 0xc
0x15296:	jmp	0x1461c


0x150ff:	mov	rax, qword ptr [rsp + 8]
0x15104:	mov	qword ptr [rax + 8], 0xe8
0x1510c:	mov	qword ptr [rax], rbx
0x1510f:	jmp	0x142f2


0x1461c:	mov	rbx, qword ptr [rsp + 0x118]
0x14624:	xor	rbx, qword ptr fs:[0x28]
0x1462d:	jne	0x15370


0x14633:	add	rsp, 0x128
0x1463a:	pop	rbx
0x1463b:	pop	rbp
0x1463c:	pop	r12
0x1463e:	pop	r13
0x14640:	pop	r14
0x14642:	pop	r15
0x14644:	ret	


0x15370:	call	0x1c20


0x209a:	lea	rsi, [rip + 0x15040]
0x20a1:	mov	edi, 6
0x20a6:	call	0x1e20


0x30b9:	mov	rax, qword ptr [rip + 0x219120]
0x30c0:	test	rax, rax
0x30c3:	je	0x3110


0x3110:	mov	r12d, dword ptr [rip + 0x218ef9]
0x3117:	mov	rbx, qword ptr [rip + 0x2190d2]
0x311e:	mov	rdi, qword ptr [rip + 0x2190c3]
0x3125:	call	0x1c10


0x30c5:	mov	r12, qword ptr [rip + 0x219114]
0x30cc:	mov	rbx, qword ptr [rip + 0x21911d]
0x30d3:	mov	rdi, qword ptr [rip + 0x21910e]
0x30da:	call	0x1c10


0x3461:	mov	rdx, qword ptr [rbx]
0x3464:	cmp	rdx, rax
0x3467:	jne	0x3477


0x3469:	add	qword ptr [rip + 0x218d60], rdx
0x3470:	add	rsp, 8
0x3474:	pop	rbx
0x3475:	pop	rbp
0x3476:	ret	


0x3477:	mov	rsi, qword ptr [rip + 0x218d42]
0x347e:	mov	edi, 4
0x3483:	call	0x5f90


0x441a:	cmp	ebp, eax
0x441c:	mov	ebx, eax
0x441e:	je	0x4449


0x4449:	add	rsp, 8
0x444d:	mov	eax, ebx
0x444f:	pop	rbx
0x4450:	pop	rbp
0x4451:	pop	r12
0x4453:	pop	r13
0x4455:	ret	


0x4420:	test	eax, eax
0x4422:	js	0x4449


0x4424:	mov	esi, ebp
0x4426:	mov	edi, eax
0x4428:	call	0x1c50


0x1c50:	jmp	qword ptr [rip + 0x21a1f2]




0x446c:	test	rax, rax
0x446f:	mov	rbx, rax
0x4472:	je	0x4481


0x4481:	mov	rax, rbx
0x4484:	pop	rbx
0x4485:	pop	rbp
0x4486:	pop	r12
0x4488:	ret	


0x4474:	mov	rdi, rax
0x4477:	call	0x1d80


0x4751:	cmp	r15d, 0xa
0x4755:	mov	qword ptr [rsp + 0x58], rax
0x475a:	ja	0x590f


0x4760:	lea	rcx, [rip + 0x124b9]
0x4767:	mov	edx, r15d
0x476a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x476e:	add	rax, rcx
0x4771:	jmp	rax


0x590f:	call	0x1b10


0x7a06:	mov	r12d, dword ptr [rax]
0x7a09:	mov	rbp, rax
0x7a0c:	mov	edi, ebx
0x7a0e:	call	0x1cc0


0x1cc0:	jmp	qword ptr [rip + 0x21a1ba]




0x7a2d:	cmp	dword ptr [rax], 0x16
0x7a30:	jne	0x789f


0x7a36:	xor	esi, esi
0x7a38:	xor	eax, eax
0x7a3a:	mov	edx, r12d
0x7a3d:	mov	edi, ebp
0x7a3f:	call	0x1b90


0x7a44:	test	eax, eax
0x7a46:	mov	ebx, eax
0x7a48:	js	0x78f0


0x7a4e:	mov	dword ptr [rip + 0x214920], 0xffffffff
0x7a58:	jmp	0x79d3


0x6cf6:	xor	ecx, ecx
0x6cf8:	mov	edx, ebp
0x6cfa:	mov	dword ptr [rax], 0
0x6d00:	mov	rsi, rbx
0x6d03:	mov	rdi, r12
0x6d06:	mov	r13, rax
0x6d09:	call	0x1bb0


0x1bb0:	jmp	qword ptr [rip + 0x21a242]




0x73b8:	mov	dword ptr [rax], 0
0x73be:	mov	r12, rax
0x73c1:	movzx	ebx, byte ptr [rbp]
0x73c5:	call	0x1f50


0x73ca:	mov	edx, dword ptr [rsp + 8]
0x73ce:	mov	rsi, qword ptr [rax]
0x73d1:	mov	rax, rbp
0x73d4:	jmp	0x73e7


0x73e7:	movzx	ecx, bl
0x73ea:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0x73ef:	jne	0x73e0


0x73f1:	cmp	bl, 0x2d
0x73f4:	je	0x7448


0x73e0:	add	rax, 1
0x73e4:	movzx	ebx, byte ptr [rax]
0x73e7:	movzx	ecx, bl
0x73ea:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0x73ef:	jne	0x73e0


0x7448:	mov	ebp, 4
0x744d:	mov	rdi, qword ptr [rsp + 0x18]
0x7452:	xor	rdi, qword ptr fs:[0x28]
0x745b:	mov	eax, ebp
0x745d:	jne	0x76f0


0x73f6:	xor	ecx, ecx
0x73f8:	mov	rsi, r15
0x73fb:	mov	rdi, rbp
0x73fe:	call	0x1ca0


0x7463:	add	rsp, 0x28
0x7467:	pop	rbx
0x7468:	pop	rbp
0x7469:	pop	r12
0x746b:	pop	r13
0x746d:	pop	r14
0x746f:	pop	r15
0x7471:	ret	


0x76f0:	call	0x1c20


0x1ca0:	jmp	qword ptr [rip + 0x21a1ca]




0x5941:	mov	r13, rax
0x5944:	mov	eax, dword ptr [rax]
0x5946:	test	r15d, r15d
0x5949:	mov	rbx, qword ptr [rip + 0x216730]
0x5950:	mov	dword ptr [rsp + 0x18], eax
0x5954:	js	0x5ac1


0x5ac1:	call	0x1b10


0x595a:	cmp	dword ptr [rip + 0x216717], r15d
0x5961:	jg	0x59c5


0x5963:	cmp	r15d, 0x7fffffff
0x596a:	je	0x5ac6


0x59c5:	mov	eax, dword ptr [rbp + 4]
0x59c8:	shl	r15, 4
0x59cc:	sub	rsp, 8
0x59d0:	add	rbx, r15
0x59d3:	lea	r15, [rbp + 8]
0x59d7:	mov	r8d, dword ptr [rbp]
0x59db:	mov	r11, qword ptr [rbx]
0x59de:	mov	r12, qword ptr [rbx + 8]
0x59e2:	mov	rcx, r14
0x59e5:	or	eax, 1
0x59e8:	mov	dword ptr [rsp + 0x24], eax
0x59ec:	push	qword ptr [rbp + 0x30]
0x59ef:	mov	r9d, eax
0x59f2:	push	qword ptr [rbp + 0x28]
0x59f5:	push	r15
0x59f7:	mov	rsi, r11
0x59fa:	mov	rdx, qword ptr [rsp + 0x28]
0x59ff:	mov	rdi, r12
0x5a02:	mov	qword ptr [rsp + 0x30], r11
0x5a07:	call	0x46e0


0x5ac6:	call	0x3810


0x5970:	lea	r12d, [r15 + 1]
0x5974:	lea	rax, [rip + 0x216715]
0x597b:	movsxd	rsi, r12d
0x597e:	shl	rsi, 4
0x5982:	cmp	rbx, rax
0x5985:	je	0x5aa0


0x5aa0:	xor	edi, edi
0x5aa2:	call	0x6970


0x598b:	mov	rdi, rbx
0x598e:	call	0x6970


0x5993:	mov	rbx, rax
0x5996:	mov	qword ptr [rip + 0x2166e3], rax
0x599d:	movsxd	rdi, dword ptr [rip + 0x2166d4]
0x59a4:	mov	edx, r12d
0x59a7:	xor	esi, esi
0x59a9:	sub	edx, edi
0x59ab:	shl	rdi, 4
0x59af:	movsxd	rdx, edx
0x59b2:	add	rdi, rbx
0x59b5:	shl	rdx, 4
0x59b9:	call	0x1cb0


0x59be:	mov	dword ptr [rip + 0x2166b3], r12d
0x59c5:	mov	eax, dword ptr [rbp + 4]
0x59c8:	shl	r15, 4
0x59cc:	sub	rsp, 8
0x59d0:	add	rbx, r15
0x59d3:	lea	r15, [rbp + 8]
0x59d7:	mov	r8d, dword ptr [rbp]
0x59db:	mov	r11, qword ptr [rbx]
0x59de:	mov	r12, qword ptr [rbx + 8]
0x59e2:	mov	rcx, r14
0x59e5:	or	eax, 1
0x59e8:	mov	dword ptr [rsp + 0x24], eax
0x59ec:	push	qword ptr [rbp + 0x30]
0x59ef:	mov	r9d, eax
0x59f2:	push	qword ptr [rbp + 0x28]
0x59f5:	push	r15
0x59f7:	mov	rsi, r11
0x59fa:	mov	rdx, qword ptr [rsp + 0x28]
0x59ff:	mov	rdi, r12
0x5a02:	mov	qword ptr [rsp + 0x30], r11
0x5a07:	call	0x46e0


0x5aa7:	movdqa	xmm0, xmmword ptr [rip + 0x2165e1]
0x5aaf:	mov	rbx, rax
0x5ab2:	mov	qword ptr [rip + 0x2165c7], rax
0x5ab9:	movups	xmmword ptr [rax], xmm0
0x5abc:	jmp	0x599d


0x599d:	movsxd	rdi, dword ptr [rip + 0x2166d4]
0x59a4:	mov	edx, r12d
0x59a7:	xor	esi, esi
0x59a9:	sub	edx, edi
0x59ab:	shl	rdi, 4
0x59af:	movsxd	rdx, edx
0x59b2:	add	rdi, rbx
0x59b5:	shl	rdx, 4
0x59b9:	call	0x1cb0


0x5adc:	mov	r12d, dword ptr [rax]
0x5adf:	mov	rbp, rax
0x5ae2:	lea	rax, [rip + 0x216857]
0x5ae9:	test	rbx, rbx
0x5aec:	mov	esi, 0x38
0x5af1:	cmove	rbx, rax
0x5af5:	mov	rdi, rbx
0x5af8:	call	0x6b10


0x5c12:	mov	r12d, dword ptr [rax]
0x5c15:	mov	rbp, rax
0x5c18:	lea	rax, [rbx + 8]
0x5c1c:	sub	rsp, 8
0x5c20:	mov	r9d, dword ptr [rbx + 4]
0x5c24:	push	qword ptr [rbx + 0x30]
0x5c27:	mov	r8d, dword ptr [rbx]
0x5c2a:	push	qword ptr [rbx + 0x28]
0x5c2d:	mov	rdx, r15
0x5c30:	push	rax
0x5c31:	mov	rcx, qword ptr [rsp + 0x28]
0x5c36:	mov	rsi, r14
0x5c39:	mov	rdi, r13
0x5c3c:	call	0x46e0


0x5c8f:	test	r12, r12
0x5c92:	mov	r13, rax
0x5c95:	mov	eax, dword ptr [rax]
0x5c97:	sete	bpl
0x5c9b:	or	ebp, dword ptr [rbx + 4]
0x5c9e:	lea	r10, [rbx + 8]
0x5ca2:	sub	rsp, 8
0x5ca6:	mov	r8d, dword ptr [rbx]
0x5ca9:	mov	rcx, r15
0x5cac:	mov	dword ptr [rsp + 0x14], eax
0x5cb0:	push	qword ptr [rbx + 0x30]
0x5cb3:	mov	rdx, r14
0x5cb6:	push	qword ptr [rbx + 0x28]
0x5cb9:	push	r10
0x5cbb:	xor	esi, esi
0x5cbd:	mov	r9d, ebp
0x5cc0:	xor	edi, edi
0x5cc2:	mov	qword ptr [rsp + 0x40], r10
0x5cc7:	call	0x46e0


0x62a6:	test	rax, rax
0x62a9:	mov	rbp, rax
0x62ac:	jns	0x62d0


0x62ae:	call	0x1b20


0x62d0:	add	rsp, 8
0x62d4:	mov	rax, rbp
0x62d7:	pop	rbx
0x62d8:	pop	rbp
0x62d9:	pop	r12
0x62db:	pop	r13
0x62dd:	ret	


0x62b3:	mov	eax, dword ptr [rax]
0x62b5:	cmp	eax, 4
0x62b8:	je	0x6298


0x6298:	mov	rdx, rbx
0x629b:	mov	rsi, r12
0x629e:	mov	edi, r13d
0x62a1:	call	0x1cf0


0x62ba:	cmp	rbx, 0x7ff00000
0x62c1:	jbe	0x62d0


0x62c3:	cmp	eax, 0x16
0x62c6:	jne	0x62d0


0x62c8:	mov	ebx, 0x7ff00000
0x62cd:	jmp	0x6298


0x633f:	lea	rdx, [rip + 0x1107a]
0x6346:	mov	rcx, rax
0x6349:	mov	r8d, 0x7e3
0x634f:	mov	esi, 1
0x6354:	mov	rdi, rbp
0x6357:	xor	eax, eax
0x6359:	call	0x1f00


0x635e:	lea	rsi, [rip + 0x10dc3]
0x6365:	xor	edi, edi
0x6367:	mov	edx, 5
0x636c:	call	0x1bf0


0x6371:	mov	rsi, rbp
0x6374:	mov	rdi, rax
0x6377:	call	0x1d20


0x1d20:	jmp	qword ptr [rip + 0x21a18a]




0x3eeb:	mov	rbx, rax
0x3eee:	call	0x1b20


0x3ef3:	mov	esi, dword ptr [rax]
0x3ef5:	mov	rdx, rbx
0x3ef8:	mov	edi, 1
0x3efd:	xor	eax, eax
0x3eff:	call	0x1e60


0x1e60:	jmp	qword ptr [rip + 0x21a0ea]




0x3f4d:	mov	rdi, qword ptr [rip + 0x21818c]
0x3f54:	mov	rdx, rax
0x3f57:	mov	rcx, rbx
0x3f5a:	mov	esi, 1
0x3f5f:	xor	eax, eax
0x3f61:	call	0x1f00


0x3f66:	mov	edi, ebp
0x3f68:	call	0x1ee0


0x3f7b:	mov	rdx, rbx
0x3f7e:	mov	rsi, rax
0x3f81:	mov	edi, 1
0x3f86:	xor	eax, eax
0x3f88:	call	0x1e30


0x1e30:	jmp	qword ptr [rip + 0x21a102]




0x15bb6:	mov	rdi, rax
0x15bb9:	mov	r13, rax
0x15bbc:	call	0x1c10


0x3827:	lea	rdx, [rip + 0x13333]
0x382e:	mov	rcx, rax
0x3831:	xor	esi, esi
0x3833:	xor	edi, edi
0x3835:	xor	eax, eax
0x3837:	call	0x1e60


0x68a4:	lea	rdx, [rip + 0x1084c]
0x68ab:	mov	rsi, rax
0x68ae:	mov	edi, 1
0x68b3:	xor	eax, eax
0x68b5:	call	0x1e30


0x447c:	cmp	eax, 2
0x447f:	jbe	0x4490


0x4490:	mov	edi, eax
0x4492:	call	0x62e0


0x7b03:	mov	edx, r12d
0x7b06:	mov	rsi, rbp
0x7b09:	mov	edi, eax
0x7b0b:	call	0x1c80


0x1c80:	jmp	qword ptr [rip + 0x21a1da]




0x779c:	test	eax, eax
0x779e:	mov	rdi, rbx
0x77a1:	js	0x77f7


0x77f7:	pop	rbx
0x77f8:	pop	rbp
0x77f9:	pop	r12
0x77fb:	jmp	0x1bd0


0x77a3:	call	0x1de0


0x1bd0:	jmp	qword ptr [rip + 0x21a232]




0x77a8:	test	eax, eax
0x77aa:	jne	0x77d8


0x77ac:	mov	rdi, rbx
0x77af:	call	0x7a90


0x77d8:	mov	rdi, rbx
0x77db:	call	0x1d80


0x77e0:	xor	esi, esi
0x77e2:	mov	edx, 1
0x77e7:	mov	edi, eax
0x77e9:	call	0x1c80


0x7b67:	cmp	rax, -3
0x7b6b:	mov	rbp, rax
0x7b6e:	jbe	0x7b90


0x7b90:	mov	rdx, qword ptr [rsp + 8]
0x7b95:	xor	rdx, qword ptr fs:[0x28]
0x7b9e:	mov	rax, rbp
0x7ba1:	jne	0x7bae


0x7b70:	test	r12, r12
0x7b73:	je	0x7b90


0x7ba3:	add	rsp, 0x18
0x7ba7:	pop	rbx
0x7ba8:	pop	rbp
0x7ba9:	pop	r12
0x7bab:	pop	r13
0x7bad:	ret	


0x7bae:	call	0x1c20


0x7b75:	xor	edi, edi
0x7b77:	call	0x15e50


0xbcc4:	cmp	r12, rax
0xbcc7:	mov	r8, qword ptr [rsp]
0xbccb:	mov	r10d, dword ptr [rsp + 0xc]
0xbcd0:	ja	0xbcdc


0xbcd2:	cmp	rax, -3
0xbcd6:	jbe	0xbea1


0xbcdc:	mov	r11, qword ptr [rbx + 0x28]
0xbce0:	mov	rax, qword ptr [rbx + 0x38]
0xbce4:	jmp	0xb981


0xbea1:	mov	edx, dword ptr [rsp + 0x24]
0xbea5:	sub	rax, r12
0xbea8:	mov	qword ptr [rbx + 0x20], 0
0xbeb0:	mov	r12, rax
0xbeb3:	mov	qword ptr [rbx + 0x30], rax
0xbeb7:	cmp	edx, -1
0xbeba:	jne	0xba05


0xbec0:	jmp	0xbcdc


0xba05:	cmp	byte ptr [rbx + 0x8e], 0
0xba0c:	jne	0xbe79


0xba12:	xor	eax, eax
0xba14:	cmp	edx, 0xa
0xba17:	jne	0xba27


0xbe79:	mov	edi, edx
0xbe7b:	mov	dword ptr [rsp], edx
0xbe7e:	call	0x1d90


0xba19:	xor	eax, eax
0xba1b:	cmp	byte ptr [rbx + 0x8d], 0
0xba22:	setne	al
0xba25:	add	eax, eax
0xba27:	mov	dword ptr [rbx + 0x70], eax
0xba2a:	cmp	r12, 0
0xba2e:	jne	0xbe4a


0xba27:	mov	dword ptr [rbx + 0x70], eax
0xba2a:	cmp	r12, 0
0xba2e:	jne	0xbe4a


0xbe83:	test	eax, eax
0xbe85:	jne	0xbe93


0xbe87:	mov	edx, dword ptr [rsp]
0xbe8a:	cmp	edx, 0x5f
0xbe8d:	jne	0xba12


0xbe93:	mov	eax, 1
0xbe98:	jmp	0xba27


0xdb48:	cmp	r12, rax
0xdb4b:	jne	0xda17


0xdb51:	mov	edi, dword ptr [rsp + 0x54]
0xdb55:	call	0x1ea0


0xdcca:	cmp	rax, -2
0xdcce:	jne	0xdcda


0xdcd0:	movzx	eax, byte ptr [rsp + 0x54]
0xdcd5:	mov	byte ptr [rbp + rax], 1
0xdcda:	add	byte ptr [rsp + 0x54], 1
0xdcdf:	jne	0xdcb0


0xdcda:	add	byte ptr [rsp + 0x54], 1
0xdcdf:	jne	0xdcb0


0xdce1:	jmp	0xda17


0xdcb0:	xor	edi, edi
0xdcb2:	mov	qword ptr [r12], 0
0xdcba:	mov	rcx, r12
0xdcbd:	mov	edx, 1
0xdcc2:	mov	rsi, r13
0xdcc5:	call	0x7b30


0xb9cf:	lea	rcx, [rax - 1]
0xb9d3:	mov	edx, dword ptr [rsp + 0x24]
0xb9d7:	mov	r8, qword ptr [rsp]
0xb9db:	mov	r10d, dword ptr [rsp + 0xc]
0xb9e0:	cmp	rcx, -4
0xb9e4:	ja	0xbe25


0xb9ea:	add	r14, rax
0xb9ed:	cmp	r15, r14
0xb9f0:	jg	0xb9a0


0xbe25:	test	rax, rax
0xbe28:	je	0xbe9d


0xb9f2:	sub	r14, r15
0xb9f5:	cmp	edx, -1
0xb9f8:	mov	r12, r14
0xb9fb:	mov	qword ptr [rbx + 0x30], r14
0xb9ff:	je	0xbdd9


0xb9a0:	mov	r12, qword ptr [rbx + 0x50]
0xb9a4:	mov	rsi, qword ptr [rbx]
0xb9a7:	mov	rdi, r13
0xb9aa:	mov	rax, qword ptr [rbx + 0x20]
0xb9ae:	mov	rcx, qword ptr [rsp + 0x10]
0xb9b3:	mov	dword ptr [rsp + 0xc], r10d
0xb9b8:	mov	qword ptr [rsp], r8
0xb9bc:	sub	r12, r14
0xb9bf:	add	rsi, r14
0xb9c2:	mov	rdx, r12
0xb9c5:	mov	qword ptr [rsp + 0x18], rax
0xb9ca:	call	0x7b30


0xbe9d:	xor	edx, edx
0xbe9f:	jmp	0xbe37


0xbe2a:	test	r12, r12
0xbe2d:	je	0xbe9d


0xbdd9:	lea	rsi, [r8 - 1]
0xbddd:	mov	edx, r10d
0xbde0:	mov	rdi, rbx
0xbde3:	call	0xb4b0


0xbe37:	mov	rax, qword ptr [rsp + 0x18]
0xbe3c:	mov	qword ptr [rbx + 0x20], rax
0xbe40:	mov	eax, 1
0xbe45:	jmp	0xb9ea


0xbe2f:	mov	rax, qword ptr [rbx]
0xbe32:	movzx	edx, byte ptr [rax + r14]
0xbe37:	mov	rax, qword ptr [rsp + 0x18]
0xbe3c:	mov	qword ptr [rbx + 0x20], rax
0xbe40:	mov	eax, 1
0xbe45:	jmp	0xb9ea


0x86dc:	mov	rbp, rax
0x86df:	lea	rax, [rax - 1]
0x86e3:	cmp	rax, -4
0x86e7:	mov	qword ptr [rsp + 0x20], rax
0x86ec:	ja	0x8a29


0x86f2:	mov	edx, dword ptr [rsp + 0x44]
0x86f6:	mov	edi, edx
0x86f8:	mov	dword ptr [rsp + 0x10], edx
0x86fc:	call	0x1eb0


0x8a29:	cmp	qword ptr [rsp + 0x20], -3
0x8a2f:	jne	0x8a3b


0x1eb0:	jmp	qword ptr [rip + 0x21a0c2]


0x8a31:	mov	rax, qword ptr [r14 + 0x58]
0x8a35:	cmp	qword ptr [r14 + 0x40], rax
0x8a39:	jl	0x8ab8


0x8a3b:	mov	rax, qword ptr [r14]
0x8a3e:	mov	rdx, qword ptr [r14 + 0x78]
0x8a42:	add	rax, r13
0x8a45:	add	rax, qword ptr [r14 + 0x28]
0x8a49:	test	rdx, rdx
0x8a4c:	movzx	eax, byte ptr [rax]
0x8a4f:	jne	0x8bfc




0x8ab8:	mov	rax, qword ptr [rsp + 0x48]
0x8abd:	mov	qword ptr [r14 + 0x20], rax
0x8ac1:	jmp	0x8645


0x8a55:	mov	rdx, qword ptr [r14 + 8]
0x8a59:	mov	rcx, r15
0x8a5c:	mov	byte ptr [rdx + r15], al
0x8a60:	cmp	byte ptr [r14 + 0x8c], 0
0x8a68:	jne	0x8bef


0x8bfc:	movzx	eax, byte ptr [rdx + rax]
0x8c00:	jmp	0x8a55


0x8a6e:	mov	rdx, qword ptr [r14 + 0x10]
0x8a72:	add	r13, 1
0x8a76:	add	r15, 1
0x8a7a:	cmp	rbp, -1
0x8a7e:	mov	dword ptr [rdx + rcx*4], eax
0x8a81:	jne	0x8640


0x8bef:	mov	rdx, qword ptr [r14 + 0x18]
0x8bf3:	mov	qword ptr [rdx + r15*8], r13
0x8bf7:	jmp	0x8a6e


0x8a87:	mov	rax, qword ptr [rsp + 0x48]
0x8a8c:	mov	qword ptr [r14 + 0x20], rax
0x8a90:	jmp	0x8640


0x8640:	cmp	r15, rbx
0x8643:	jl	0x8680


0x8855:	mov	rbp, rax
0x8858:	lea	rax, [rax - 1]
0x885c:	cmp	rax, -4
0x8860:	ja	0x8948


0x8866:	mov	edx, dword ptr [rsp + 0x44]
0x886a:	mov	edi, edx
0x886c:	mov	dword ptr [rsp + 0x18], edx
0x8870:	call	0x1eb0


0x8948:	cmp	rax, -3
0x894c:	jne	0x8980


0x894e:	mov	rax, qword ptr [r14 + 0x58]
0x8952:	cmp	qword ptr [r14 + 0x40], rax
0x8956:	jge	0x8980


0x8980:	mov	rax, qword ptr [r14]
0x8983:	mov	rdx, qword ptr [r14 + 8]
0x8987:	add	rax, r15
0x898a:	add	rax, qword ptr [r14 + 0x28]
0x898e:	movzx	eax, byte ptr [rax]
0x8991:	mov	byte ptr [rdx + r15], al
0x8995:	mov	rdx, qword ptr [r14 + 0x10]
0x8999:	add	r15, 1
0x899d:	cmp	rbp, -1
0x89a1:	mov	dword ptr [rdx + r13*4], eax
0x89a5:	jne	0x88ea


0x8958:	mov	rax, qword ptr [rsp + 0x48]
0x895d:	mov	qword ptr [r14 + 0x20], rax
0x8961:	nop	dword ptr [rax]
0x8968:	mov	qword ptr [r14 + 0x30], r15
0x896c:	mov	qword ptr [r14 + 0x38], r15
0x8970:	xor	eax, eax
0x8972:	jmp	0x864f


0x89ab:	mov	rax, qword ptr [rsp + 0x48]
0x89b0:	mov	qword ptr [r14 + 0x20], rax
0x89b4:	jmp	0x88ea


0x8494:	lea	rdx, [rax - 1]
0x8498:	cmp	rdx, -3
0x849c:	ja	0x8530


0x84a2:	cmp	rax, -2
0x84a6:	mov	edx, dword ptr [rsp + 0xc]
0x84aa:	je	0x8520


0x8530:	mov	rax, qword ptr [rbx]
0x8533:	mov	rcx, qword ptr [rbx + 0x78]
0x8537:	add	rax, rbp
0x853a:	add	rax, qword ptr [rbx + 0x28]
0x853e:	test	rcx, rcx
0x8541:	movzx	edx, byte ptr [rax]
0x8544:	mov	dword ptr [rsp + 0xc], edx
0x8548:	jne	0x85d1


0x8520:	mov	rax, qword ptr [rbx + 0x58]
0x8524:	cmp	qword ptr [rbx + 0x40], rax
0x8528:	jl	0x85c8


0x84ac:	mov	rcx, qword ptr [rbx + 0x10]
0x84b0:	lea	rsi, [rbp + 1]
0x84b4:	lea	rdi, [rbp*4]
0x84bc:	mov	dword ptr [rcx + rbp*4], edx
0x84bf:	add	rbp, rax
0x84c2:	cmp	rsi, rbp
0x84c5:	jge	0x8510


0x854e:	mov	qword ptr [rbx + 0x20], r15
0x8552:	mov	eax, 1
0x8557:	jmp	0x84ac


0x85d1:	movzx	edx, byte ptr [rcx + rdx]
0x85d5:	mov	dword ptr [rsp + 0xc], edx
0x85d9:	jmp	0x854e


0x85c8:	mov	qword ptr [rbx + 0x20], r15
0x85cc:	jmp	0x84e4


0x84c7:	lea	rdx, [rcx + rdi + 4]
0x84cc:	lea	rax, [rcx + rbp*4]
0x84d0:	mov	dword ptr [rdx], 0xffffffff
0x84d6:	add	rdx, 4
0x84da:	cmp	rax, rdx
0x84dd:	jne	0x84d0


0x8510:	mov	rbp, rsi
0x8513:	cmp	rbp, r12
0x8516:	jl	0x8468


0x84df:	cmp	rbp, r12
0x84e2:	jl	0x8468


0x84d0:	mov	dword ptr [rdx], 0xffffffff
0x84d6:	add	rdx, 4
0x84da:	cmp	rax, rdx
0x84dd:	jne	0x84d0


0x8468:	mov	rdi, qword ptr [rbx + 0x78]
0x846c:	mov	rdx, r12
0x846f:	mov	r15, qword ptr [rbx + 0x20]
0x8473:	sub	rdx, rbp
0x8476:	test	rdi, rdi
0x8479:	jne	0x8560


0x851c:	jmp	0x84e4


0x9011:	mov	rcx, qword ptr [rsp]
0x9015:	mov	rdi, rcx
0x9018:	call	0x1b00


0x901d:	mov	rdi, rbp
0x9020:	call	0x1b00


0x9025:	mov	rax, qword ptr [rsp + 8]
0x902a:	mov	rdi, rax
0x902d:	call	0x1b00


0xf2bc:	mov	eax, 0xc
0xf2c1:	jmp	0xf16b


0xf0be:	cmp	byte ptr [rbp - 0xc9], 0
0xf0c5:	je	0xed38


0xed38:	mov	rdi, qword ptr [rbp - 0x88]
0xed3f:	call	0xcd90


0xf0cb:	mov	rdi, qword ptr [rbp - 0xc0]
0xf0d2:	call	0x1b00


0xf0d7:	jmp	0xefce


0xefce:	cmp	qword ptr [rbp - 0x88], 0
0xefd6:	jne	0xed38


0xefdc:	mov	eax, 0xc
0xefe1:	jmp	0xef59


0xef59:	mov	rbx, qword ptr [rbp - 0x38]
0xef5d:	xor	rbx, qword ptr fs:[0x28]
0xef66:	jne	0xf125


0xef6c:	lea	rsp, [rbp - 0x28]
0xef70:	pop	rbx
0xef71:	pop	r12
0xef73:	pop	r13
0xef75:	pop	r14
0xef77:	pop	r15
0xef79:	pop	rbp
0xef7a:	ret	


0xf125:	call	0x1c20


0x11446:	test	eax, eax
0x11448:	jne	0x1171d


0x1144e:	mov	rax, qword ptr [rbx]
0x11451:	movzx	r11d, byte ptr [rsp + 0x1ac]
0x1145a:	mov	r10, qword ptr [rsp + 0x150]
0x11462:	xor	ecx, ecx
0x11464:	mov	r9, qword ptr [rsp + 0x138]
0x1146c:	mov	r8, qword ptr [rsp + 0x158]
0x11474:	mov	rdi, qword ptr [rsp + 0xd8]
0x1147c:	mov	rdx, qword ptr [rsp + 0xb8]
0x11484:	jmp	0x11489


0x1171d:	mov	rdi, qword ptr [rsp + 0x1d8]
0x11725:	mov	dword ptr [rsp + 0x5c], eax
0x11729:	jmp	0x10c48


0xce29:	mov	rax, qword ptr [r12]
0xce2d:	mov	rdi, qword ptr [rax + rbx + 0x10]
0xce32:	call	0x1b00


0xce37:	add	rbx, qword ptr [r12]
0xce3b:	movdqu	xmm0, xmmword ptr [rbx + 0x18]
0xce40:	movaps	xmmword ptr [rbp], xmm0
0xce44:	mov	rax, qword ptr [rbx + 0x28]
0xce48:	mov	qword ptr [rbp + 0x10], rax
0xce4c:	mov	rax, qword ptr [rbx + 8]
0xce50:	pop	rbx
0xce51:	pop	rbp
0xce52:	pop	r12
0xce54:	ret	


0xee4b:	mov	rcx, qword ptr [rbp - 0x78]
0xee4f:	mov	rbx, rax
0xee52:	jmp	0xe94b


0xe94b:	lea	rax, [rbp - 0x78]
0xe94f:	mov	qword ptr [rbp - 0xb0], rax
0xe956:	jmp	0xea39


0xedf8:	mov	r9, rax
0xedfb:	mov	rbx, rax
0xedfe:	mov	r15, rax
0xee01:	shl	r9, 4
0xee05:	jmp	0xe97c


0xf0e5:	cmp	byte ptr [rbp - 0xc9], 0
0xf0ec:	mov	eax, 1
0xf0f1:	je	0xef59


0xf0f7:	mov	rdi, qword ptr [rbp - 0xc0]
0xf0fe:	mov	dword ptr [rbp - 0x88], eax
0xf104:	call	0x1b00


0xf109:	mov	eax, dword ptr [rbp - 0x88]
0xf10f:	jmp	0xef59


0xefc1:	cmp	byte ptr [rbp - 0xc9], 0
0xefc8:	jne	0xf0cb


0xed93:	cmp	byte ptr [rbp - 0xc9], 0
0xed9a:	jne	0xf114


0xeda0:	mov	rdi, qword ptr [rbp - 0x88]
0xeda7:	call	0xcd90


0xf114:	mov	rdi, qword ptr [rbp - 0xc0]
0xf11b:	call	0x1b00


0xf120:	jmp	0xeda0


0xf095:	cmp	byte ptr [rbp - 0xc9], 0
0xf09c:	je	0xef57


0xef57:	xor	eax, eax
0xef59:	mov	rbx, qword ptr [rbp - 0x38]
0xef5d:	xor	rbx, qword ptr fs:[0x28]
0xef66:	jne	0xf125


0xf0a2:	mov	rdi, qword ptr [rbp - 0xc0]
0xf0a9:	call	0x1b00


0xf0ae:	xor	eax, eax
0xf0b0:	jmp	0xef59


0xef39:	cmp	byte ptr [rbp - 0xc9], 0
0xef40:	jne	0xf01c


0xef46:	mov	rdi, qword ptr [rbp - 0x88]
0xef4d:	test	rdi, rdi
0xef50:	je	0xef57


0xf01c:	mov	rdi, qword ptr [rbp - 0xc0]
0xf023:	call	0x1b00


0xef52:	call	0xcd90


0xf028:	mov	rdi, qword ptr [rbp - 0x88]
0xf02f:	test	rdi, rdi
0xf032:	jne	0xef52


0xf038:	jmp	0xef57


0x159e8:	pop	rax
0x159e9:	pop	rdx
0x159ea:	add	rsp, 0x28
0x159ee:	mov	rax, rbx
0x159f1:	pop	rbx
0x159f2:	pop	rbp
0x159f3:	pop	r12
0x159f5:	pop	r13
0x159f7:	pop	r14
0x159f9:	pop	r15
0x159fb:	ret	


0xe65d:	mov	eax, dword ptr [rsp + 0x88]
0xe664:	mov	rbx, qword ptr [rsp + 0xc8]
0xe66c:	xor	rbx, qword ptr fs:[0x28]
0xe675:	jne	0xe82c


0xe69d:	mov	dword ptr [rsp + 0x88], 0
0xe6a8:	jmp	0xe428


0xe40d:	mov	eax, dword ptr [rsp + 0x8c]
0xe414:	test	eax, eax
0xe416:	mov	dword ptr [rsp + 0x88], eax
0xe41d:	jne	0xe650


0xe645:	mov	dword ptr [rsp + 0x88], 0xc
0xe650:	mov	rdi, qword ptr [rsp + 0xa0]
0xe658:	call	0x1b00


0xe515:	mov	rax, qword ptr [r15 + 0xb8]
0xe51c:	mov	rbx, qword ptr [rsp + 0x40]
0xe521:	mov	rax, qword ptr [rax + rbx*8]
0xe525:	test	rax, rax
0xe528:	je	0xe805


0xe805:	mov	rax, qword ptr [rsp + 0x60]
0xe80a:	mov	qword ptr [rax], r12
0xe80d:	mov	rax, qword ptr [rsp + 0x68]
0xe812:	mov	qword ptr [r15 + 0xb8], rax
0xe819:	mov	rax, qword ptr [rsp + 0x70]
0xe81e:	mov	qword ptr [r15 + 0x48], rax
0xe822:	mov	eax, 1
0xe827:	jmp	0xe664


0xe52e:	mov	rbx, qword ptr [rsp + 0x60]
0xe533:	mov	rdx, qword ptr [rsp + 0x78]
0xe538:	lea	rsi, [rax + 0x18]
0xe53c:	mov	qword ptr [rbx], r12
0xe53f:	mov	rbx, qword ptr [rsp + 0x68]
0xe544:	mov	qword ptr [r15 + 0xb8], rbx
0xe54b:	mov	rbx, qword ptr [rsp + 0x70]
0xe550:	mov	qword ptr [r15 + 0x48], rbx
0xe554:	mov	rdi, qword ptr [rax + 0x10]
0xe558:	call	0x96d0


0xe55d:	test	rax, rax
0xe560:	sete	al
0xe563:	movzx	eax, al
0xe566:	jmp	0xe664


0xf7c1:	mov	rdx, qword ptr [r14 + 0xb8]
0xf7c8:	cmp	qword ptr [rdx + rbx*8], 0
0xf7cd:	je	0xfaa1


0xfb25:	mov	eax, dword ptr [rsp + 0x8c]
0xfb2c:	jmp	0xf648


0xfce1:	jmp	0xfc17


0x10eaf:	mov	rdi, qword ptr [rsp + 0x1d8]
0x10eb7:	cmp	qword ptr [rdi + rbp*8], 0
0x10ebc:	je	0x10fa1


0xc14d:	mov	eax, dword ptr [rsp]
0xc150:	jmp	0xc118


0xc118:	mov	rsi, qword ptr [rsp + 0x38]
0xc11d:	xor	rsi, qword ptr fs:[0x28]
0xc126:	jne	0xc156


0xc128:	add	rsp, 0x48
0xc12c:	pop	rbx
0xc12d:	pop	rbp
0xc12e:	pop	r12
0xc130:	pop	r13
0xc132:	pop	r14
0xc134:	pop	r15
0xc136:	ret	


0xc156:	call	0x1c20


0x11dcd:	test	eax, eax
0x11dcf:	jne	0x118b8


0x11dd5:	sub	rbp, 1
0x11dd9:	jmp	0x11d68


0x11d2f:	test	eax, eax
0x11d31:	jne	0x118b8


0x11d37:	test	r14, r14
0x11d3a:	js	0x11c8d


0x11d40:	cmp	qword ptr [rbx + 8], 0
0x11d45:	jle	0x11c8d


0x11d4b:	mov	r10, qword ptr [rbx + 0x10]
0x11d4f:	xor	r14d, r14d
0x11d52:	mov	qword ptr [rsp + 0x30], rbp
0x11d57:	mov	rbp, r14
0x11d5a:	mov	r14, qword ptr [rsp + 0x28]
0x11d5f:	jmp	0x11d7a


0x11c71:	test	eax, eax
0x11c73:	jne	0x118b8


0x11c79:	add	r14, 1
0x11c7d:	cmp	r14, qword ptr [rbx + 8]
0x11c81:	jl	0x11c3a


0xb1a7:	mov	rax, qword ptr [rbx + 0xb8]
0xb1ae:	cmp	qword ptr [rax + r14*8], 0
0xb1b3:	je	0xb2f5


0xb2f5:	mov	eax, dword ptr [rsp + 0x4c]
0xb2f9:	test	eax, eax
0xb2fb:	je	0xb1b9


0xb301:	jmp	0xb07f


0xb07f:	mov	rbx, qword ptr [rsp + 0x68]
0xb084:	xor	rbx, qword ptr fs:[0x28]
0xb08d:	jne	0xb359


0xb310:	mov	eax, dword ptr [rsp + 0x4c]
0xb314:	test	eax, eax
0xb316:	jne	0xb07f


0xb31c:	mov	eax, 0xc
0xb321:	jmp	0xb07f


0x10c4d:	mov	rax, qword ptr [rsp + 0x38]
0x10c52:	cmp	qword ptr [rax + 0x98], 0
0x10c5a:	jne	0x11580


0x10c60:	mov	rdi, qword ptr [rsp]
0x10c64:	call	0x93c0


0x11580:	mov	rdi, qword ptr [rsp]
0x11584:	call	0x9560


0x11589:	mov	rdi, qword ptr [rsp + 0x218]
0x11591:	call	0x1b00


0x11596:	mov	rdi, qword ptr [rsp + 0x1f8]
0x1159e:	call	0x1b00


0x115a3:	jmp	0x10c60


0xaf6b:	mov	eax, dword ptr [rsp + 0x1c]
0xaf6f:	test	eax, eax
0xaf71:	jne	0xaf98


0x1204b:	mov	eax, dword ptr [rsp + 8]
0x1204f:	jmp	0x118b8


0xc116:	xor	eax, eax
0xc118:	mov	rsi, qword ptr [rsp + 0x38]
0xc11d:	xor	rsi, qword ptr fs:[0x28]
0xc126:	jne	0xc156


0x5ddd:	mov	qword ptr [rip + 0x21629c], rbx
0x5de4:	pop	rbx
0x5de5:	mov	dword ptr [rip + 0x216289], 1
0x5def:	pop	rbp
0x5df0:	pop	r12
0x5df2:	ret	


0x5db7:	mov	qword ptr [rip + 0x2162ce], 0x100
0x5dc2:	mov	qword ptr [rip + 0x2162cf], rbx
0x5dc9:	lea	rbx, [rip + 0x2162c0]
0x5dd0:	cmp	r12, rbx
0x5dd3:	je	0x5de4


0x699d:	xor	eax, eax
0x699f:	pop	rbx
0x69a0:	ret	


0x95ae:	mov	rdi, rbp
0x95b1:	call	0x1b00


0x95b6:	cmp	qword ptr [r12 + 0x20], rbx
0x95bb:	jg	0x9598


0x9598:	mov	rax, qword ptr [r12 + 0x28]
0x959d:	mov	rbp, qword ptr [rax + rbx*8]
0x95a1:	add	rbx, 1
0x95a5:	mov	rdi, qword ptr [rbp + 0x20]
0x95a9:	call	0x1b00


0x95c7:	mov	rax, qword ptr [r12 + 0x10]
0x95cc:	test	rax, rax
0x95cf:	je	0x95e4


0x95e4:	mov	rdi, r12
0x95e7:	add	r13, 1
0x95eb:	call	0x1b00


0x95d1:	mov	rdi, qword ptr [rax + 0x10]
0x95d5:	call	0x1b00


0x95da:	mov	rdi, qword ptr [r12 + 0x10]
0x95df:	call	0x1b00


0x95f0:	cmp	qword ptr [r14 + 0xe8], r13
0x95f7:	jg	0x9580


0x9580:	mov	rax, qword ptr [r14 + 0xf8]
0x9587:	mov	r12, qword ptr [rax + r13*8]
0x958b:	cmp	qword ptr [r12 + 0x20], 0
0x9591:	jle	0x95bd


0x37e4:	test	rbx, rbx
0x37e7:	mov	rdi, rbx
0x37ea:	jne	0x37d8


0x37d8:	mov	rbx, qword ptr [rdi + 0x518]
0x37df:	call	0x1b00


0x37fd:	mov	qword ptr [rbp], 0
0x3805:	pop	rbx
0x3806:	pop	rbp
0x3807:	pop	r12
0x3809:	ret	


0x3caa:	mov	rdi, rbx
0x3cad:	call	0x1b00


0x3cb2:	mov	qword ptr [rip + 0x218443], 0
0x3cbd:	mov	rdx, qword ptr [rip + 0x21855c]
0x3cc4:	test	rdx, rdx
0x3cc7:	je	0x3d40


0x5d9c:	cmp	rbx, rbp
0x5d9f:	jne	0x5d90


0x5d90:	mov	rdi, qword ptr [rbx]
0x5d93:	add	rbx, 0x10
0x5d97:	call	0x1b00


0x9448:	cmp	qword ptr [r12 + 0x10], 0
0x944e:	je	0x94a3


0x94a3:	mov	rdi, qword ptr [r12 + 0x28]
0x94a8:	call	0x1b00


0x9450:	xor	ebx, ebx
0x9452:	xor	ebp, ebp
0x9454:	nop	dword ptr [rax]
0x9458:	mov	rax, qword ptr [r12 + 0x30]
0x945d:	test	rax, rax
0x9460:	je	0x946c


0x946c:	mov	rax, qword ptr [r12 + 0x38]
0x9471:	test	rax, rax
0x9474:	je	0x9480


0x9462:	mov	rdi, qword ptr [rax + rbx + 0x10]
0x9467:	call	0x1b00


0x9480:	mov	rax, qword ptr [r12 + 0x28]
0x9485:	test	rax, rax
0x9488:	je	0x9494


0x9476:	mov	rdi, qword ptr [rax + rbx + 0x10]
0x947b:	call	0x1b00


0x9494:	add	rbp, 1
0x9498:	add	rbx, 0x18
0x949c:	cmp	qword ptr [r12 + 0x10], rbp
0x94a1:	ja	0x9458


0x948a:	mov	rdi, qword ptr [rax + rbx + 0x10]
0x948f:	call	0x1b00


0x9458:	mov	rax, qword ptr [r12 + 0x30]
0x945d:	test	rax, rax
0x9460:	je	0x946c


0x94ad:	mov	rdi, qword ptr [r12 + 0x30]
0x94b2:	call	0x1b00


0x94b7:	mov	rdi, qword ptr [r12 + 0x38]
0x94bc:	call	0x1b00


0x94c1:	mov	rdi, qword ptr [r12]
0x94c5:	call	0x1b00


0x94ca:	mov	rdi, qword ptr [r12 + 0x40]
0x94cf:	test	rdi, rdi
0x94d2:	je	0x9527


0x9527:	call	0x1b00


0x94d4:	xor	r14d, r14d
0x94d7:	xor	r13d, r13d
0x94da:	nop	word ptr [rax + rax]
0x94e0:	lea	rbp, [rdi + r14]
0x94e4:	cmp	qword ptr [rbp], 0
0x94e9:	jle	0x9507


0x9507:	mov	rdi, qword ptr [rbp + 0x10]
0x950b:	add	r13, 1
0x950f:	add	r14, 0x18
0x9513:	call	0x1b00


0x94eb:	xor	ebx, ebx
0x94ed:	nop	dword ptr [rax]
0x94f0:	mov	rax, qword ptr [rbp + 0x10]
0x94f4:	mov	rdi, qword ptr [rax + rbx*8]
0x94f8:	add	rbx, 1
0x94fc:	call	0x9360


0x9518:	cmp	qword ptr [r12 + 0x88], r13
0x9520:	mov	rdi, qword ptr [r12 + 0x40]
0x9525:	jae	0x94e0


0x94e0:	lea	rbp, [rdi + r14]
0x94e4:	cmp	qword ptr [rbp], 0
0x94e9:	jle	0x9507


0x952c:	mov	rdi, qword ptr [r12 + 0x78]
0x9531:	lea	rax, [rip + 0xe708]
0x9538:	cmp	rdi, rax
0x953b:	je	0x9542


0x9542:	mov	rdi, qword ptr [r12 + 0xe0]
0x954a:	call	0x1b00


0x953d:	call	0x1b00


0x954f:	pop	rbx
0x9550:	mov	rdi, r12
0x9553:	pop	rbp
0x9554:	pop	r12
0x9556:	pop	r13
0x9558:	pop	r14
0x955a:	jmp	0x1b00


0xcdba:	mov	rax, qword ptr [rbp + 0x10]
0xcdbe:	mov	rdi, qword ptr [rax + rbx + 0x10]
0xcdc3:	add	rbx, 0x30
0xcdc7:	call	0x1b00


0xcdcc:	cmp	r12, qword ptr [rbp]
0xcdd0:	jl	0xcda8


0xcda8:	mov	rax, qword ptr [rbp + 0x10]
0xcdac:	add	r12, 1
0xcdb0:	mov	rdi, qword ptr [rax + rbx + 0x28]
0xcdb5:	call	0x1b00


0x15c39:	mov	rdi, qword ptr [rbx + 0x28]
0x15c3d:	mov	qword ptr [rbx + 0x20], 0
0x15c45:	call	0x1b00


0x15c4a:	mov	qword ptr [rbx + 0x28], 0
0x15c52:	pop	rbx
0x15c53:	ret	


0x8dfc:	mov	rdi, qword ptr [rbx + 8]
0x8e00:	call	0x1b00


0x8e05:	mov	rdi, qword ptr [rbx + 0x10]
0x8e09:	call	0x1b00


0x8e0e:	mov	rdi, qword ptr [rbx + 0x18]
0x8e12:	call	0x1b00


0x8e17:	mov	rdi, rbx
0x8e1a:	pop	rbx
0x8e1b:	jmp	0x1b00


0x936d:	mov	rdi, qword ptr [rbx + 0x48]
0x9371:	call	0x1b00


0x9376:	mov	rax, qword ptr [rbx + 0x50]
0x937a:	lea	rdx, [rbx + 8]
0x937e:	cmp	rax, rdx
0x9381:	je	0x9395


0x9395:	mov	rdi, qword ptr [rbx + 0x18]
0x9399:	call	0x1b00


0x9383:	mov	rdi, qword ptr [rax + 0x10]
0x9387:	call	0x1b00


0x938c:	mov	rdi, qword ptr [rbx + 0x50]
0x9390:	call	0x1b00


0x939e:	mov	rdi, qword ptr [rbx + 0x60]
0x93a2:	call	0x1b00


0x93a7:	mov	rdi, qword ptr [rbx + 0x58]
0x93ab:	call	0x1b00


0x93b0:	mov	rdi, rbx
0x93b3:	pop	rbx
0x93b4:	jmp	0x1b00


0x93cd:	mov	rdi, qword ptr [rbx + 0x18]
0x93d1:	call	0x1b00


0x93d6:	cmp	byte ptr [rbx + 0x8b], 0
0x93dd:	jne	0x93e8


0x93df:	pop	rbx
0x93e0:	ret	


0x93e8:	mov	rdi, qword ptr [rbx + 8]
0x93ec:	pop	rbx
0x93ed:	jmp	0x1b00


0x15bc1:	test	r12, r12
0x15bc4:	lea	rbx, [rax + 1]
0x15bc8:	je	0x15bdd


0x15bdd:	add	rsp, 8
0x15be1:	mov	rax, rbx
0x15be4:	pop	rbx
0x15be5:	pop	rbp
0x15be6:	pop	r12
0x15be8:	pop	r13
0x15bea:	ret	


0x15bca:	cmp	rbx, r12
0x15bcd:	mov	rdx, rbx
0x15bd0:	ja	0x15bf8


0x15bd2:	mov	rsi, r13
0x15bd5:	mov	rdi, rbp
0x15bd8:	call	0x1d70


0x15bf8:	lea	rdx, [r12 - 1]
0x15bfd:	mov	byte ptr [rbp + r12 - 1], 0
0x15c03:	jmp	0x15bd2


0x30df:	lea	rdi, [rbx + rax]
0x30e3:	mov	r8d, ebp
0x30e6:	mov	rcx, r12
0x30e9:	mov	rdx, -1
0x30f0:	mov	esi, 1
0x30f5:	xor	eax, eax
0x30f7:	call	0x1f60


0x1f60:	jmp	qword ptr [rip + 0x21a06a]




0x312a:	lea	rcx, [rip + 0x12e73]
0x3131:	lea	rdi, [rbx + rax]
0x3135:	mov	r9d, ebp
0x3138:	mov	r8d, r12d
0x313b:	mov	rdx, -1
0x3142:	mov	esi, 1
0x3147:	xor	eax, eax
0x3149:	call	0x1f60


0x15c96:	xor	ecx, ecx
0x15c98:	test	byte ptr [rbp + 0x38], 0x10
0x15c9c:	mov	rdx, rax
0x15c9f:	mov	rsi, qword ptr [rsp + 8]
0x15ca4:	je	0x15ce6


0x6b49:	mov	rdi, rbx
0x6b4c:	lea	rsi, [rax + 1]
0x6b50:	pop	rbx
0x6b51:	jmp	0x6b10


0xce94:	cmp	rax, 1
0xce98:	jne	0xcec0


0xce9a:	movzx	ecx, byte ptr [rbx]
0xce9d:	mov	rdx, rcx
0xcea0:	and	ecx, 0x3f
0xcea3:	shr	rdx, 3
0xcea7:	shl	rax, cl
0xceaa:	and	edx, 0x18
0xcead:	or	qword ptr [rbp + rdx], rax
0xceb2:	add	rsp, 8
0xceb6:	xor	eax, eax
0xceb8:	pop	rbx
0xceb9:	pop	rbp
0xceba:	ret	


0xcec0:	add	rsp, 8
0xcec4:	mov	eax, 3
0xcec9:	pop	rbx
0xceca:	pop	rbp
0xcecb:	ret	


0xf993:	test	rax, rax
0xf996:	je	0xfa39


0xf99c:	mov	rdx, qword ptr [r12 + 0x20]
0xf9a1:	mov	rcx, qword ptr [r12 + 0x28]
0xf9a6:	mov	rsi, r12
0xf9a9:	mov	r8, qword ptr [rsp + 8]
0xf9ae:	mov	rdi, r14
0xf9b1:	mov	qword ptr [rcx + rdx*8], rax
0xf9b5:	mov	rcx, qword ptr [rsp + 0x30]
0xf9ba:	add	rdx, 1
0xf9be:	mov	qword ptr [rax], rbp
0xf9c1:	mov	qword ptr [rax + 8], rbx
0xf9c5:	mov	qword ptr [r12 + 0x20], rdx
0xf9ca:	mov	rdx, rax
0xf9cd:	call	0xf130


0xf9d2:	cmp	eax, 1
0xf9d5:	mov	r11, qword ptr [r14 + 8]
0xf9d9:	ja	0xf648


0xfa1e:	test	rax, rax
0xfa21:	mov	rsi, rax
0xfa24:	mov	qword ptr [r12 + 0x10], rax
0xfa29:	mov	rcx, qword ptr [rsp + 0x10]
0xfa2e:	mov	r11, qword ptr [rsp + 0x18]
0xfa33:	jne	0xf942


0xb401:	mov	r8, qword ptr [rsp + 8]
0xb406:	mov	r9, qword ptr [rsp + 0x10]
0xb40b:	test	rax, rax
0xb40e:	mov	qword ptr [r9 + r8*8], rax
0xb412:	je	0xb451


0xb414:	add	r8, 1
0xb418:	add	rbx, 1
0xb41c:	mov	rcx, qword ptr [rsp + 0x18]
0xb421:	mov	qword ptr [r15 + 0xe8], r8
0xb428:	cmp	rbx, qword ptr [r12]
0xb42c:	mov	qword ptr [rax + 8], rbp
0xb430:	mov	qword ptr [rax], rcx
0xb433:	jl	0xb39e


0xaaef:	test	rax, rax
0xaaf2:	mov	r14, rax
0xaaf5:	je	0xac36


0xac36:	mov	rax, qword ptr [rsp + 0x18]
0xac3b:	xor	r14d, r14d
0xac3e:	mov	dword ptr [rax], 0xc
0xac44:	jmp	0xaacc


0xaafb:	lea	rax, [rax + 8]
0xaaff:	mov	rsi, rbp
0xab02:	mov	rdi, rax
0xab05:	mov	rbx, rax
0xab08:	call	0xa830


0xab0d:	test	eax, eax
0xab0f:	jne	0xaccd


0xab15:	movzx	eax, byte ptr [r14 + 0x68]
0xab1a:	movzx	edx, byte ptr [rsp + 4]
0xab1f:	mov	qword ptr [r14 + 0x50], rbx
0xab23:	and	edx, 0xf
0xab26:	and	eax, 0xfffffff0
0xab29:	or	eax, edx
0xab2b:	cmp	qword ptr [rbp + 8], 0
0xab30:	mov	byte ptr [r14 + 0x68], al
0xab34:	jle	0xac18


0xaccd:	mov	rdi, r14
0xacd0:	call	0x1b00


0xac18:	mov	rdx, r12
0xac1b:	mov	rsi, r14
0xac1e:	mov	rdi, r13
0xac21:	call	0x82c0


0xab3a:	lea	rcx, [r14 + 0x18]
0xab3e:	xor	r15d, r15d
0xab41:	mov	qword ptr [rsp + 0x10], r12
0xab46:	xor	r10d, r10d
0xab49:	mov	r12, r13
0xab4c:	mov	r13, r15
0xab4f:	mov	qword ptr [rsp + 8], rcx
0xab54:	mov	r15, rbx
0xab57:	nop	word ptr [rax + rax]
0xab60:	mov	rax, qword ptr [rbp + 0x10]
0xab64:	mov	rax, qword ptr [rax + r13*8]
0xab68:	shl	rax, 4
0xab6c:	add	rax, qword ptr [r12]
0xab70:	movzx	esi, byte ptr [rax + 8]
0xab74:	mov	ebx, dword ptr [rax + 8]
0xab77:	shr	ebx, 8
0xab7a:	and	bx, 0x3ff
0xab7f:	cmp	esi, 1
0xab82:	movzx	edi, bx
0xab85:	jne	0xab8b


0xab87:	test	edi, edi
0xab89:	je	0xac02


0xab8b:	movzx	edx, byte ptr [r14 + 0x68]
0xab90:	movzx	eax, byte ptr [rax + 0xa]
0xab94:	mov	r9d, edx
0xab97:	shr	al, 4
0xab9a:	and	edx, 0xffffffdf
0xab9d:	shr	r9b, 5
0xaba1:	or	eax, r9d
0xaba4:	and	eax, 1
0xaba7:	shl	eax, 5
0xabaa:	or	eax, edx
0xabac:	cmp	esi, 2
0xabaf:	mov	byte ptr [r14 + 0x68], al
0xabb3:	je	0xac80


0xac02:	add	r13, 1
0xac06:	cmp	r13, qword ptr [rbp + 8]
0xac0a:	jl	0xab60


0xac80:	or	eax, 0x10
0xac83:	mov	byte ptr [r14 + 0x68], al
0xac87:	jmp	0xabc5


0xabb9:	cmp	esi, 4
0xabbc:	jne	0xabc5


0xab60:	mov	rax, qword ptr [rbp + 0x10]
0xab64:	mov	rax, qword ptr [rax + r13*8]
0xab68:	shl	rax, 4
0xab6c:	add	rax, qword ptr [r12]
0xab70:	movzx	esi, byte ptr [rax + 8]
0xab74:	mov	ebx, dword ptr [rax + 8]
0xab77:	shr	ebx, 8
0xab7a:	and	bx, 0x3ff
0xab7f:	cmp	esi, 1
0xab82:	movzx	edi, bx
0xab85:	jne	0xab8b


0xac10:	mov	r13, r12
0xac13:	mov	r12, qword ptr [rsp + 0x10]
0xac18:	mov	rdx, r12
0xac1b:	mov	rsi, r14
0xac1e:	mov	rdi, r13
0xac21:	call	0x82c0


0xabc5:	test	edi, edi
0xabc7:	je	0xac02


0xabbe:	or	eax, 0x40
0xabc1:	mov	byte ptr [r14 + 0x68], al
0xabc5:	test	edi, edi
0xabc7:	je	0xac02


0xabc9:	cmp	r15, qword ptr [r14 + 0x50]
0xabcd:	je	0xac90


0xac90:	mov	edi, 0x18
0xac95:	call	0x1da0


0xabd3:	test	bl, 1
0xabd6:	je	0xac50


0xac50:	test	bl, 2
0xac53:	je	0xac5c


0xabd8:	test	byte ptr [rsp + 4], 1
0xabdd:	je	0xabe8


0xac5c:	test	bl, 0x10
0xac5f:	je	0xac68


0xac55:	test	byte ptr [rsp + 4], 1
0xac5a:	jne	0xabe8


0xabe8:	mov	rdx, r13
0xabeb:	sub	rdx, r10
0xabee:	js	0xabfe


0xabdf:	test	bl, 2
0xabe2:	je	0xac5c


0xac68:	and	ebx, 0x40
0xac6b:	je	0xac02


0xac61:	test	byte ptr [rsp + 4], 2
0xac66:	je	0xabe8


0xabfe:	add	r10, 1
0xac02:	add	r13, 1
0xac06:	cmp	r13, qword ptr [rbp + 8]
0xac0a:	jl	0xab60


0xabf0:	mov	rsi, qword ptr [rsp + 8]
0xabf5:	lea	rdi, [r14 + 0x10]
0xabf9:	call	0x9850


0xac6d:	test	byte ptr [rsp + 4], 4
0xac72:	jne	0xac02


0xac74:	jmp	0xabe8


0xacd5:	jmp	0xac36


0xad85:	test	rax, rax
0xad88:	mov	rbx, rax
0xad8b:	je	0xaeb8


0xaeb8:	mov	dword ptr [r13], 0xc
0xaec0:	xor	ebx, ebx
0xaec2:	jmp	0xae6f


0xad91:	lea	r15, [rax + 8]
0xad95:	mov	rsi, r14
0xad98:	mov	rdi, r15
0xad9b:	call	0xa830


0xada0:	test	eax, eax
0xada2:	jne	0xaeb0


0xada8:	mov	rax, qword ptr [r14 + 8]
0xadac:	mov	qword ptr [rbx + 0x50], r15
0xadb0:	test	rax, rax
0xadb3:	jle	0xae5d


0xaeb0:	mov	rdi, rbx
0xaeb3:	call	0x1b00


0xae5d:	mov	rdx, rbp
0xae60:	mov	rsi, rbx
0xae63:	mov	rdi, r12
0xae66:	call	0x82c0


0xadb9:	mov	rsi, qword ptr [r14 + 0x10]
0xadbd:	mov	r8, qword ptr [r12]
0xadc1:	lea	r9, [rsi + rax*8]
0xadc5:	jmp	0xae14


0xae14:	mov	rax, qword ptr [rsi]
0xae17:	shl	rax, 4
0xae1b:	add	rax, r8
0xae1e:	movzx	edi, byte ptr [rax + 8]
0xae22:	cmp	edi, 1
0xae25:	jne	0xadd0


0xae27:	test	dword ptr [rax + 8], 0x3ff00
0xae2e:	je	0xae0b


0xadd0:	movzx	ecx, byte ptr [rbx + 0x68]
0xadd4:	movzx	edx, byte ptr [rax + 0xa]
0xadd8:	mov	r10d, ecx
0xaddb:	shr	dl, 4
0xadde:	and	ecx, 0xffffffdf
0xade1:	shr	r10b, 5
0xade5:	or	edx, r10d
0xade8:	and	edx, 1
0xadeb:	shl	edx, 5
0xadee:	or	edx, ecx
0xadf0:	cmp	edi, 2
0xadf3:	mov	byte ptr [rbx + 0x68], dl
0xadf6:	je	0xae88


0xae0b:	add	rsi, 8
0xae0f:	cmp	r9, rsi
0xae12:	je	0xae5d


0xae30:	movzx	edx, byte ptr [rbx + 0x68]
0xae34:	movzx	eax, byte ptr [rax + 0xa]
0xae38:	mov	ecx, edx
0xae3a:	shr	al, 4
0xae3d:	and	edx, 0xffffffdf
0xae40:	shr	cl, 5
0xae43:	or	eax, ecx
0xae45:	and	eax, 1
0xae48:	shl	eax, 5
0xae4b:	or	eax, edx
0xae4d:	mov	byte ptr [rbx + 0x68], al
0xae50:	add	rsi, 8
0xae54:	or	byte ptr [rbx + 0x68], 0x80
0xae58:	cmp	r9, rsi
0xae5b:	jne	0xae14


0xae88:	or	edx, 0x10
0xae8b:	mov	byte ptr [rbx + 0x68], dl
0xae8e:	jmp	0xae0b


0xadfc:	cmp	edi, 4
0xadff:	jne	0xae98


0xae05:	or	edx, 0x40
0xae08:	mov	byte ptr [rbx + 0x68], dl
0xae0b:	add	rsi, 8
0xae0f:	cmp	r9, rsi
0xae12:	je	0xae5d


0xae98:	cmp	edi, 0xc
0xae9b:	je	0xae50


0xae50:	add	rsi, 8
0xae54:	or	byte ptr [rbx + 0x68], 0x80
0xae58:	cmp	r9, rsi
0xae5b:	jne	0xae14


0xae9d:	test	dword ptr [rax + 8], 0x3ff00
0xaea4:	je	0xae0b


0xaeaa:	jmp	0xae50


0x6aff:	test	rax, rax
0x6b02:	je	0x6b09


0x6b04:	add	rsp, 8
0x6b08:	ret	


0xd72b:	test	rax, rax
0xd72e:	je	0xd8f0


0xd8f0:	mov	rax, qword ptr [rsp + 8]
0xd8f5:	xor	r14d, r14d
0xd8f8:	mov	dword ptr [rax], 0xc
0xd8fe:	jmp	0xd8a2


0xd734:	mov	esi, 1
0xd739:	mov	edi, 0x50
0xd73e:	mov	rbx, rax
0xd741:	call	0x1d30


0xd8a2:	mov	rdi, qword ptr [rsp + 0x48]
0xd8a7:	xor	rdi, qword ptr fs:[0x28]
0xd8b0:	mov	rax, r14
0xd8b3:	jne	0xd945


0xd8b9:	add	rsp, 0x58
0xd8bd:	pop	rbx
0xd8be:	pop	rbp
0xd8bf:	pop	r12
0xd8c1:	pop	r13
0xd8c3:	pop	r14
0xd8c5:	pop	r15
0xd8c7:	ret	


0xd945:	call	0x1c20


0xd746:	test	rax, rax
0xd749:	mov	r15, rax
0xd74c:	je	0xd900


0xd900:	mov	rdi, rbx
0xd903:	xor	r14d, r14d
0xd906:	call	0x1b00


0xd752:	movzx	eax, byte ptr [rax + 0x20]
0xd756:	sub	rsp, 8
0xd75a:	mov	edx, r12d
0xd75d:	push	0
0xd75f:	and	edx, 1
0xd762:	mov	rdi, qword ptr [rsp + 0x10]
0xd767:	lea	rcx, [r15 + 0x48]
0xd76b:	mov	r9, r14
0xd76e:	mov	rsi, rbx
0xd771:	lea	r8, [rsp + 0x28]
0xd776:	and	eax, 0xfffffffe
0xd779:	or	eax, edx
0xd77b:	lea	rdx, [r15 + 0x18]
0xd77f:	mov	byte ptr [r15 + 0x20], al
0xd783:	call	0xced0


0xd788:	test	eax, eax
0xd78a:	pop	rdx
0xd78b:	pop	rcx
0xd78c:	jne	0xd920


0xd792:	movsx	rcx, byte ptr [r13]
0xd797:	mov	esi, 1
0xd79c:	test	cl, cl
0xd79e:	je	0xd7da


0xd920:	mov	rdi, rbx
0xd923:	mov	dword ptr [rsp], eax
0xd926:	xor	r14d, r14d
0xd929:	call	0x1b00


0xd7da:	test	r12b, r12b
0xd7dd:	je	0xd7f2


0xd7a0:	lea	rax, [rcx + 0x3f]
0xd7a4:	test	rcx, rcx
0xd7a7:	mov	rdx, rcx
0xd7aa:	cmovns	rax, rcx
0xd7ae:	sar	rdx, 0x3f
0xd7b2:	add	r13, 1
0xd7b6:	shr	rdx, 0x3a
0xd7ba:	sar	rax, 6
0xd7be:	add	rcx, rdx
0xd7c1:	and	ecx, 0x3f
0xd7c4:	sub	rcx, rdx
0xd7c7:	mov	rdx, rsi
0xd7ca:	shl	rdx, cl
0xd7cd:	movsx	rcx, byte ptr [r13]
0xd7d2:	or	qword ptr [rbx + rax*8], rdx
0xd7d6:	test	cl, cl
0xd7d8:	jne	0xd7a0


0xd7f2:	cmp	dword ptr [rbp + 0xb4], 1
0xd7f9:	jle	0xd813


0xd7df:	lea	rdx, [rbx + 0x20]
0xd7e3:	mov	rax, rbx
0xd7e6:	not	qword ptr [rax]
0xd7e9:	add	rax, 8
0xd7ed:	cmp	rdx, rax
0xd7f0:	jne	0xd7e6


0xd813:	lea	r9, [rsp + 0x20]
0xd818:	lea	r12, [rbp + 0x70]
0xd81c:	lea	r13, [rbp + 0x80]
0xd823:	xor	ecx, ecx
0xd825:	xor	edx, edx
0xd827:	mov	byte ptr [rsp + 0x28], 3
0xd82c:	mov	r8, r9
0xd82f:	mov	rsi, r13
0xd832:	mov	rdi, r12
0xd835:	mov	qword ptr [rsp + 0x20], rbx
0xd83a:	mov	qword ptr [rsp], r9
0xd83e:	call	0xa390


0xd7fb:	mov	rcx, qword ptr [rbp + 0x78]
0xd7ff:	xor	eax, eax
0xd801:	mov	rdx, qword ptr [rcx + rax]
0xd805:	and	qword ptr [rbx + rax], rdx
0xd809:	add	rax, 8
0xd80d:	cmp	rax, 0x20
0xd811:	jne	0xd801


0xd7e6:	not	qword ptr [rax]
0xd7e9:	add	rax, 8
0xd7ed:	cmp	rdx, rax
0xd7f0:	jne	0xd7e6


0xd801:	mov	rdx, qword ptr [rcx + rax]
0xd805:	and	qword ptr [rbx + rax], rdx
0xd809:	add	rax, 8
0xd80d:	cmp	rax, 0x20
0xd811:	jne	0xd801


0xd843:	test	rax, rax
0xd846:	mov	r14, rax
0xd849:	je	0xd8e0


0xd8e0:	mov	rdi, rbx
0xd8e3:	call	0x1b00


0xd84f:	cmp	dword ptr [rbp + 0xb4], 1
0xd856:	jle	0xd8d0


0xd8d0:	mov	rdi, r15
0xd8d3:	call	0x8df0


0xd858:	or	byte ptr [rbp + 0xb0], 2
0xd85f:	mov	r9, qword ptr [rsp]
0xd863:	xor	ecx, ecx
0xd865:	xor	edx, edx
0xd867:	mov	rsi, r13
0xd86a:	mov	rdi, r12
0xd86d:	mov	byte ptr [rsp + 0x28], 6
0xd872:	mov	qword ptr [rsp + 0x20], r15
0xd877:	mov	r8, r9
0xd87a:	call	0xa390


0xd87f:	test	rax, rax
0xd882:	je	0xd8e0


0xd884:	lea	r8, [rsp + 0x30]
0xd889:	mov	rdx, r14
0xd88c:	mov	rcx, rax
0xd88f:	mov	rsi, r13
0xd892:	mov	rdi, r12
0xd895:	mov	byte ptr [rsp + 0x38], 0xa
0xd89a:	call	0xa390


0xd89f:	mov	r14, rax
0xd8a2:	mov	rdi, qword ptr [rsp + 0x48]
0xd8a7:	xor	rdi, qword ptr fs:[0x28]
0xd8b0:	mov	rax, r14
0xd8b3:	jne	0xd945


0xd8e8:	mov	rdi, r15
0xd8eb:	call	0x8df0


0xd92e:	mov	rdi, r15
0xd931:	call	0x8df0


0xd90b:	mov	rax, qword ptr [rsp + 8]
0xd910:	mov	dword ptr [rax], 0xc
0xd916:	jmp	0xd8a2


0x153ba:	test	eax, eax
0x153bc:	je	0x153e8


0x153e8:	xor	eax, eax
0x153ea:	add	rsp, 8
0x153ee:	ret	


0x153be:	lea	rdx, [rip + 0x289b]
0x153c5:	cdqe	
0x153c7:	lea	rsi, [rip + 0x2932]
0x153ce:	xor	edi, edi
0x153d0:	add	rsi, qword ptr [rdx + rax*8]
0x153d4:	mov	edx, 5
0x153d9:	add	rsp, 8
0x153dd:	jmp	0x1bf0


0xac9a:	test	rax, rax
0xac9d:	mov	qword ptr [r14 + 0x50], rax
0xaca1:	je	0xac2e


0xac2e:	mov	rdi, r14
0xac31:	call	0x9360


0xaca3:	mov	rsi, rbp
0xaca6:	mov	rdi, rax
0xaca9:	call	0xa830


0xacae:	test	eax, eax
0xacb0:	jne	0xac36


0xacb2:	or	byte ptr [r14 + 0x68], 0x80
0xacb7:	xor	r10d, r10d
0xacba:	jmp	0xabd3


0xecf3:	test	rax, rax
0xecf6:	mov	qword ptr [r15 + 0x10], rax
0xecfa:	je	0xed22


0xed22:	mov	rdi, qword ptr [rbp - 0x60]
0xed26:	call	0x1b00


0xecfc:	mov	rdx, r14
0xecff:	mov	rsi, r13
0xed02:	mov	rdi, rax
0xed05:	call	0x1d70


0xed0a:	mov	rsi, qword ptr [rbp - 0xa8]
0xed11:	lea	rdi, [r15 + 0x18]
0xed15:	call	0xa830


0xed1a:	test	eax, eax
0xed1c:	je	0xea2c


0xed2b:	cmp	byte ptr [rbp - 0xc9], 0
0xed32:	jne	0xf0cb


0x10a2b:	test	rax, rax
0x10a2e:	mov	r12, rax
0x10a31:	je	0x11160


0x10a37:	cmp	qword ptr [r15 + 0x98], 0
0x10a3f:	je	0x112d5


0x112d5:	pxor	xmm0, xmm0
0x112d9:	mov	qword ptr [rsp + 0xe0], rax
0x112e1:	mov	rdi, qword ptr [rsp]
0x112e5:	mov	rax, qword ptr [rsp + 0x20]
0x112ea:	lea	rbx, [rsp + 0xe0]
0x112f2:	mov	qword ptr [rsp + 0xe8], 0
0x112fe:	mov	qword ptr [rsp + 0xf0], r13
0x11306:	mov	rsi, rbx
0x11309:	mov	qword ptr [rsp + 0x110], 0
0x11315:	movaps	xmmword ptr [rsp + 0x100], xmm0
0x1131d:	mov	qword ptr [rsp + 0xf8], rax
0x11325:	call	0xfdb0


0x10a45:	mov	rdi, rbx
0x10a48:	call	0x1da0


0x10a4d:	test	rax, rax
0x10a50:	mov	rbp, rax
0x10a53:	je	0x11158


0x11158:	mov	rdi, r12
0x1115b:	call	0x1b00


0x10a59:	mov	r14, qword ptr [rsp + 0x20]
0x10a5e:	lea	rbx, [rsp + 0xe0]
0x10a66:	mov	qword ptr [rsp + 0x10], r15
0x10a6b:	mov	qword ptr [rsp + 0x18], rax
0x10a70:	mov	rax, qword ptr [rsp + 8]
0x10a75:	xor	esi, esi
0x10a77:	mov	rdi, rbp
0x10a7a:	lea	rdx, [rax*8]
0x10a82:	call	0x1cb0


0x10a87:	pxor	xmm0, xmm0
0x10a8b:	mov	qword ptr [rsp + 0xe0], r12
0x10a93:	mov	qword ptr [rsp + 0xe8], rbp
0x10a9b:	mov	qword ptr [rsp + 0xf0], r13
0x10aa3:	mov	rsi, rbx
0x10aa6:	mov	qword ptr [rsp + 0xf8], r14
0x10aae:	mov	rdi, qword ptr [rsp]
0x10ab2:	movaps	xmmword ptr [rbx + 0x20], xmm0
0x10ab6:	mov	qword ptr [rbx + 0x30], 0
0x10abe:	call	0xfdb0


0xe5a5:	test	rax, rax
0xe5a8:	mov	qword ptr [rsp + 0xa0], rax
0xe5b0:	je	0xe7fb


0xe5b6:	mov	qword ptr [rax], rbx
0xe5b9:	mov	ecx, dword ptr [rsp + 0x110]
0xe5c0:	lea	rbx, [rsp + 0x90]
0xe5c8:	mov	rdx, qword ptr [rsp + 0x48]
0xe5cd:	mov	rdi, qword ptr [rsp + 0x30]
0xe5d2:	mov	r12, rbp
0xe5d5:	mov	rsi, rbx
0xe5d8:	mov	dword ptr [rsp + 0x88], 0
0xe5e3:	call	0xa080


0xb23d:	test	rax, rax
0xb240:	mov	qword ptr [rsp + 0x60], rax
0xb245:	je	0xb33d


0xb33d:	mov	qword ptr [rsp + 0x58], 0
0xb346:	mov	qword ptr [rsp + 0x50], 0
0xb34f:	mov	eax, 0xc
0xb354:	jmp	0xb250


0xb24b:	mov	qword ptr [rax], r14
0xb24e:	xor	eax, eax
0xb250:	mov	r15, qword ptr [rsp + 0x10]
0xb255:	mov	rdx, qword ptr [rsp + 0x20]
0xb25a:	mov	rdi, r13
0xb25d:	mov	ecx, dword ptr [rsp + 0x2c]
0xb261:	mov	dword ptr [rsp + 0x4c], eax
0xb265:	mov	rsi, r15
0xb268:	call	0xa080


0xb250:	mov	r15, qword ptr [rsp + 0x10]
0xb255:	mov	rdx, qword ptr [rsp + 0x20]
0xb25a:	mov	rdi, r13
0xb25d:	mov	ecx, dword ptr [rsp + 0x2c]
0xb261:	mov	dword ptr [rsp + 0x4c], eax
0xb265:	mov	rsi, r15
0xb268:	call	0xa080


0xb2d1:	test	rax, rax
0xb2d4:	mov	qword ptr [rsp + 0x60], rax
0xb2d9:	je	0xb31c


0xb2db:	mov	rdi, qword ptr [rsp + 8]
0xb2e0:	mov	dword ptr [rsp + 0x4c], 0
0xb2e8:	mov	r10, qword ptr [rsp + 0x18]
0xb2ed:	mov	qword ptr [rax], rdi
0xb2f0:	jmp	0xb17e


0xb17e:	mov	rdx, qword ptr [rsp + 0x10]
0xb183:	mov	rdi, qword ptr [rsp + 0x38]
0xb188:	mov	rsi, r13
0xb18b:	mov	qword ptr [rsp + 8], r10
0xb190:	call	0xace0


0x104b1:	test	rax, rax
0x104b4:	mov	rdi, rax
0x104b7:	mov	qword ptr [rsp + 0x1d8], rax
0x104bf:	je	0x111b0


0x1042e:	mov	rdi, r14
0x10431:	mov	r15, rax
0x10434:	mov	qword ptr [rsp + 0x1f8], rax
0x1043c:	shl	rdi, 4
0x10440:	call	0x1da0


0x10445:	test	rax, rax
0x10448:	mov	qword ptr [rsp + 0x218], rax
0x10450:	je	0x11160


0x10456:	test	r15, r15
0x10459:	je	0x11160


0x11b3e:	mov	rdx, qword ptr [rsp + 0x20]
0x11b43:	test	rax, rax
0x11b46:	mov	qword ptr [rdx + 0x48], rax
0x11b4a:	je	0x11b93


0x11b93:	mov	eax, 0xc
0x11b98:	jmp	0x118b8


0x11b4c:	cmp	qword ptr [rbx + 8], 0
0x11b51:	mov	dword ptr [rsp + 0x60], 0
0x11b59:	jg	0x11b6e


0x11b5b:	jmp	0x1191c


0x11b6e:	mov	rax, qword ptr [rbx + 0x10]
0x11b72:	mov	rdi, r14
0x11b75:	mov	rax, qword ptr [rax + r15*8]
0x11b79:	lea	rdx, [rax + rax*2]
0x11b7d:	mov	rax, qword ptr [r12 + 0x38]
0x11b82:	lea	rsi, [rax + rdx*8]
0x11b86:	call	0x9bf0


0x11b8b:	test	eax, eax
0x11b8d:	mov	dword ptr [rsp + 0x60], eax
0x11b91:	je	0x11b60


0x11b60:	add	r15, 1
0x11b64:	cmp	r15, qword ptr [rbx + 8]
0x11b68:	jge	0x1191c


0x155a8:	test	rax, rax
0x155ab:	mov	rbp, rax
0x155ae:	je	0x15840


0x15840:	mov	r12, -2
0x15847:	jmp	0x15602


0x155b4:	sub	rsp, 8
0x155b8:	mov	rcx, rbx
0x155bb:	mov	rdi, r15
0x155be:	mov	eax, dword ptr [rsp + 0x34]
0x155c2:	push	rax
0x155c3:	push	rbp
0x155c4:	push	r14
0x155c6:	mov	r9, qword ptr [rsp + 0x40]
0x155cb:	mov	r8, qword ptr [rsp + 0x28]
0x155d0:	mov	rdx, qword ptr [rsp + 0x38]
0x155d5:	mov	rsi, qword ptr [rsp + 0x30]
0x155da:	call	0x100f0


0x155df:	add	rsp, 0x20
0x155e3:	test	eax, eax
0x155e5:	je	0x15618


0x15618:	test	r12, r12
0x1561b:	je	0x156e8


0x155e7:	cmp	eax, 1
0x155ea:	mov	r12, -1
0x155f1:	je	0x155fa


0x156e8:	cmp	byte ptr [rsp + 0x28], 0
0x156ed:	mov	r12, qword ptr [rbp]
0x156f1:	je	0x155fa


0x15621:	movzx	eax, byte ptr [r15 + 0x38]
0x15626:	lea	rdx, [r13 + 1]
0x1562a:	shr	al, 1
0x1562c:	and	eax, 3
0x1562f:	je	0x157a0


0x155fa:	mov	rdi, rbp
0x155fd:	call	0x1b00


0x155f3:	mov	r12, -2
0x155fa:	mov	rdi, rbp
0x155fd:	call	0x1b00


0x156f7:	cmp	r12, rbx
0x156fa:	jne	0x158f2


0x157a0:	lea	r14, [rdx*8]
0x157a8:	mov	qword ptr [rsp + 8], rdx
0x157ad:	mov	rdi, r14
0x157b0:	call	0x1da0


0x15635:	cmp	eax, 1
0x15638:	je	0x15850


0x15700:	mov	r12, qword ptr [rbp + 8]
0x15704:	sub	r12, rbx
0x15707:	jmp	0x155fa


0x158f2:	lea	rcx, [rip + 0x22d7]
0x158f9:	lea	rsi, [rip + 0x1d08]
0x15900:	lea	rdi, [rip + 0x1e26]
0x15907:	mov	edx, 0x1be
0x1590c:	call	0x1c90


0x15850:	cmp	qword ptr [r12], rdx
0x15854:	mov	r9d, 1
0x1585a:	jae	0x15657


0x1563e:	cmp	eax, 2
0x15641:	jne	0x15930


0x15860:	lea	rcx, [rdx*8]
0x15868:	mov	rdi, qword ptr [r12 + 8]
0x1586d:	mov	byte ptr [rsp + 0x18], r9b
0x15872:	mov	qword ptr [rsp + 0x10], rdx
0x15877:	mov	rsi, rcx
0x1587a:	mov	qword ptr [rsp + 8], rcx
0x1587f:	call	0x1e00


0x15657:	test	r13, r13
0x1565a:	jle	0x158c8


0x15647:	cmp	r14, qword ptr [r12]
0x1564b:	ja	0x15911


0x15930:	lea	rcx, [rip + 0x2289]
0x15937:	lea	rsi, [rip + 0x1cca]
0x1593e:	lea	rdi, [rip + 0x1db3]
0x15945:	mov	edx, 0x1f9
0x1594a:	call	0x1c90


0x158c8:	xor	edx, edx
0x158ca:	xor	r13d, r13d
0x158cd:	jmp	0x1569b


0x15660:	mov	r8, qword ptr [r12 + 8]
0x15665:	mov	rdi, qword ptr [r12 + 0x10]
0x1566a:	lea	rsi, [r13*8]
0x15672:	mov	rdx, r13
0x15675:	xor	eax, eax
0x15677:	nop	word ptr [rax + rax]
0x15680:	mov	rcx, qword ptr [rbp + rax*2]
0x15685:	mov	qword ptr [r8 + rax], rcx
0x15689:	mov	rcx, qword ptr [rbp + rax*2 + 8]
0x1568e:	mov	qword ptr [rdi + rax], rcx
0x15692:	add	rax, 8
0x15696:	cmp	rsi, rax
0x15699:	jne	0x15680


0x15651:	mov	r9d, 2
0x15657:	test	r13, r13
0x1565a:	jle	0x158c8


0x15911:	lea	rcx, [rip + 0x22a8]
0x15918:	lea	rsi, [rip + 0x1ce9]
0x1591f:	lea	rdi, [rip + 0x1def]
0x15926:	mov	edx, 0x1fb
0x1592b:	call	0x1c90


0x1569b:	cmp	qword ptr [r12], rdx
0x1569f:	jbe	0x156cd


0x15680:	mov	rcx, qword ptr [rbp + rax*2]
0x15685:	mov	qword ptr [r8 + rax], rcx
0x15689:	mov	rcx, qword ptr [rbp + rax*2 + 8]
0x1568e:	mov	qword ptr [rdi + rax], rcx
0x15692:	add	rax, 8
0x15696:	cmp	rsi, rax
0x15699:	jne	0x15680


0x156cd:	movzx	eax, byte ptr [r15 + 0x38]
0x156d2:	lea	r13d, [r9 + r9]
0x156d6:	and	eax, 0xfffffff9
0x156d9:	or	eax, r13d
0x156dc:	test	al, 6
0x156de:	mov	byte ptr [r15 + 0x38], al
0x156e2:	je	0x155f3


0x156a1:	mov	rsi, qword ptr [r12 + 0x10]
0x156a6:	mov	rcx, qword ptr [r12 + 8]
0x156ab:	mov	rax, -1
0x156b2:	nop	word ptr [rax + rax]
0x156b8:	mov	qword ptr [rsi + rdx*8], rax
0x156bc:	add	r13, 1
0x156c0:	mov	qword ptr [rcx + rdx*8], rax
0x156c4:	cmp	r13, qword ptr [r12]
0x156c8:	mov	rdx, r13
0x156cb:	jb	0x156b8


0x156b8:	mov	qword ptr [rsi + rdx*8], rax
0x156bc:	add	r13, 1
0x156c0:	mov	qword ptr [rcx + rdx*8], rax
0x156c4:	cmp	r13, qword ptr [r12]
0x156c8:	mov	rdx, r13
0x156cb:	jb	0x156b8


0x15884:	test	rax, rax
0x15887:	mov	r14, rax
0x1588a:	je	0x158da


0x158da:	xor	r9d, r9d
0x158dd:	jmp	0x156cd


0x1588c:	mov	rcx, qword ptr [rsp + 8]
0x15891:	mov	rdi, qword ptr [r12 + 0x10]
0x15896:	mov	rsi, rcx
0x15899:	call	0x1e00


0x1589e:	test	rax, rax
0x158a1:	mov	rdx, qword ptr [rsp + 0x10]
0x158a6:	movzx	r9d, byte ptr [rsp + 0x18]
0x158ac:	je	0x158e2


0x158e2:	mov	rdi, r14
0x158e5:	call	0x1b00


0x158ae:	mov	qword ptr [r12 + 8], r14
0x158b3:	mov	qword ptr [r12 + 0x10], rax
0x158b8:	mov	qword ptr [r12], rdx
0x158bc:	jmp	0x15657


0x158ea:	xor	r9d, r9d
0x158ed:	jmp	0x156cd


0x157b5:	test	rax, rax
0x157b8:	mov	qword ptr [r12 + 8], rax
0x157bd:	mov	rdx, qword ptr [rsp + 8]
0x157c2:	je	0x158da


0x157c8:	mov	rdi, r14
0x157cb:	mov	qword ptr [rsp + 8], rdx
0x157d0:	mov	qword ptr [rsp + 0x10], rax
0x157d5:	call	0x1da0


0x157da:	test	rax, rax
0x157dd:	mov	qword ptr [r12 + 0x10], rax
0x157e2:	mov	rdx, qword ptr [rsp + 8]
0x157e7:	mov	rcx, qword ptr [rsp + 0x10]
0x157ec:	je	0x158d2


0x158d2:	mov	rdi, rcx
0x158d5:	call	0x1b00


0x157f2:	mov	qword ptr [r12], rdx
0x157f6:	mov	r9d, 1
0x157fc:	jmp	0x15657


0x15a12:	test	rax, rax
0x15a15:	mov	r13, rax
0x15a18:	je	0x15a50


0x15a1a:	mov	rsi, qword ptr [rsp + 8]
0x15a1f:	mov	rdx, rbx
0x15a22:	mov	rdi, rax
0x15a25:	call	0x1d70


0x15a2a:	lea	rdi, [r13 + rbx]
0x15a2f:	mov	rsi, r14
0x15a32:	mov	rdx, rbp
0x15a35:	mov	r14, r13
0x15a38:	call	0x1d70


0x15a3d:	mov	rcx, qword ptr [rsp + 0x10]
0x15a42:	mov	r8d, dword ptr [rsp + 0x1c]
0x15a47:	jmp	0x159b8


0xa90f:	test	rax, rax
0xa912:	mov	qword ptr [r12 + 0x10], rax
0xa917:	je	0xaa08


0xaa08:	mov	eax, 0xc
0xaa0d:	jmp	0xa992


0xa91d:	mov	r9, qword ptr [rbx + 0x10]
0xa921:	mov	r8, qword ptr [rbp + 0x10]
0xa925:	xor	ebx, ebx
0xa927:	xor	ecx, ecx
0xa929:	xor	esi, esi
0xa92b:	jmp	0xa94e


0xa992:	pop	rbx
0xa993:	pop	rbp
0xa994:	pop	r12
0xa996:	pop	r13
0xa998:	pop	r14
0xa99a:	ret	


0xa94e:	mov	rdx, qword ptr [r8 + rsi*8]
0xa952:	mov	rdi, qword ptr [r9 + rcx*8]
0xa956:	add	rbx, 1
0xa95a:	cmp	rdx, rdi
0xa95d:	jle	0xa930


0xa930:	sete	dil
0xa934:	mov	qword ptr [rax + rbx*8 - 8], rdx
0xa939:	add	rsi, 1
0xa93d:	movzx	edi, dil
0xa941:	add	rcx, rdi
0xa944:	cmp	r13, rsi
0xa947:	jle	0xa9b0


0xa95f:	add	rcx, 1
0xa963:	mov	qword ptr [rax + rbx*8 - 8], rdi
0xa968:	jmp	0xa944


0xa9b0:	cmp	r14, rcx
0xa9b3:	jg	0xa9e8


0xa949:	cmp	r14, rcx
0xa94c:	jle	0xa9c8


0xa944:	cmp	r13, rsi
0xa947:	jle	0xa9b0


0xa9b5:	mov	qword ptr [r12 + 8], rbx
0xa9ba:	xor	eax, eax
0xa9bc:	pop	rbx
0xa9bd:	pop	rbp
0xa9be:	pop	r12
0xa9c0:	pop	r13
0xa9c2:	pop	r14
0xa9c4:	ret	


0xa9e8:	sub	r14, rcx
0xa9eb:	lea	rdi, [rax + rbx*8]
0xa9ef:	lea	rsi, [r9 + rcx*8]
0xa9f3:	lea	rdx, [r14*8]
0xa9fb:	add	rbx, r14
0xa9fe:	call	0x1d70


0xa9c8:	sub	r13, rsi
0xa9cb:	lea	rdi, [rax + rbx*8]
0xa9cf:	lea	rsi, [r8 + rsi*8]
0xa9d3:	lea	rdx, [r13*8]
0xa9db:	add	rbx, r13
0xa9de:	call	0x1d70


0xa9e3:	jmp	0xa9b5


0xaa03:	jmp	0xa9b5


0xeff2:	test	rax, rax
0xeff5:	mov	qword ptr [rbp - 0xc0], rax
0xeffc:	mov	byte ptr [rbp - 0xc9], 1
0xf003:	jne	0xe917


0xf009:	mov	rdi, qword ptr [rbp - 0x88]
0xf010:	test	rdi, rdi
0xf013:	je	0xefdc


0xe917:	mov	rdx, qword ptr [rbp - 0xb8]
0xe91e:	mov	rdi, qword ptr [rbp - 0xc0]
0xe925:	mov	rsi, r13
0xe928:	call	0x1d70


0xf015:	call	0xcd90


0x14368:	test	r14, r14
0x1436b:	mov	qword ptr [rbx], rax
0x1436e:	je	0x15055


0x15055:	xor	ebp, ebp
0x15057:	mov	esi, 1
0x1505c:	jmp	0x1438d


0x14374:	mov	esi, 1
0x14379:	nop	dword ptr [rax]
0x14380:	add	rsi, rsi
0x14383:	cmp	qword ptr [rsp], rsi
0x14387:	jae	0x14380


0x1438d:	mov	edi, 0x18
0x14392:	call	0x1d30


0x14389:	lea	rbp, [rsi - 1]
0x1438d:	mov	edi, 0x18
0x14392:	call	0x1d30


0x14380:	add	rsi, rsi
0x14383:	cmp	qword ptr [rsp], rsi
0x14387:	jae	0x14380


0x14397:	mov	qword ptr [rbx + 0x88], rbp
0x1439e:	mov	qword ptr [rbx + 0x40], rax
0x143a2:	call	0x1c00


0x143a7:	mov	edi, 0xe
0x143ac:	mov	dword ptr [rbx + 0xb4], eax
0x143b2:	call	0x1dd0


0x81e1:	test	rax, rax
0x81e4:	mov	qword ptr [rbx + 0x10], rax
0x81e8:	je	0x8278


0x8278:	mov	qword ptr [rbx + 8], 0
0x8280:	mov	qword ptr [rbx], 0
0x8287:	jmp	0x81be


0x81ee:	mov	qword ptr [rax], rbp
0x81f1:	add	rsp, 8
0x81f5:	mov	eax, 1
0x81fa:	pop	rbx
0x81fb:	pop	rbp
0x81fc:	ret	


0xa435:	test	rax, rax
0xa438:	mov	rdi, rax
0xa43b:	je	0xa46c


0xa46c:	xor	eax, eax
0xa46e:	jmp	0xa40b


0xa43d:	mov	rax, qword ptr [rbx]
0xa440:	mov	r10d, 1
0xa446:	mov	qword ptr [rbx], rdi
0xa449:	xor	r9d, r9d
0xa44c:	mov	r8, qword ptr [rsp + 0x18]
0xa451:	mov	rcx, qword ptr [rsp + 0x10]
0xa456:	mov	rdx, qword ptr [rsp + 8]
0xa45b:	mov	rsi, qword ptr [rsp]
0xa45f:	mov	qword ptr [rdi], rax
0xa462:	mov	eax, 8
0xa467:	jmp	0xa3b4


0xa3b4:	shl	r9, 6
0xa3b8:	mov	dword ptr [rsi], r10d
0xa3bb:	add	rax, rdi
0xa3be:	lea	rsi, [rdi + r9]
0xa3c2:	mov	qword ptr [rsi + 8], 0
0xa3ca:	mov	qword ptr [rsi + 0x10], rdx
0xa3ce:	lea	rdi, [rsi + 0x20]
0xa3d2:	mov	qword ptr [rsi + 0x18], rcx
0xa3d6:	movdqu	xmm0, xmmword ptr [r8]
0xa3db:	movups	xmmword ptr [rsi + 0x30], xmm0
0xa3df:	and	byte ptr [rdi + 0x1a], 0xf3
0xa3e3:	test	rdx, rdx
0xa3e6:	mov	qword ptr [rsi + 0x20], 0
0xa3ee:	mov	qword ptr [rsi + 0x28], 0
0xa3f6:	mov	qword ptr [rsi + 0x40], -1
0xa3fe:	je	0xa403


0xa85b:	test	rax, rax
0xa85e:	mov	qword ptr [rbx + 0x10], rax
0xa862:	je	0xa8a0


0xa8a0:	mov	qword ptr [rbx + 8], 0
0xa8a8:	mov	qword ptr [rbx], 0
0xa8af:	mov	eax, 0xc
0xa8b4:	jmp	0xa87a


0xa864:	mov	rsi, qword ptr [rbp + 0x10]
0xa868:	lea	rdx, [r12*8]
0xa870:	mov	rdi, rax
0xa873:	call	0x1d70


0xa87a:	pop	rbx
0xa87b:	pop	rbp
0xa87c:	pop	r12
0xa87e:	ret	


0xa878:	xor	eax, eax
0xa87a:	pop	rbx
0xa87b:	pop	rbp
0xa87c:	pop	r12
0xa87e:	ret	


0xe8a5:	lea	rcx, [rbp - 0x50]
0xe8a9:	test	rax, rax
0xe8ac:	mov	qword ptr [rbp - 0x40], rax
0xe8b0:	mov	qword ptr [rbp - 0x88], rcx
0xe8b7:	je	0xefdc


0x6919:	test	rax, rax
0x691c:	jne	0x6923


0x691e:	test	rbx, rbx
0x6921:	jne	0x6925


0x6923:	pop	rbx
0x6924:	ret	


0x6925:	call	0x3810


0x373a:	mov	qword ptr [rax + 0x518], 0
0x3745:	mov	qword ptr [rax], 0
0x374c:	mov	qword ptr [rax + 8], 0
0x3754:	mov	qword ptr [rax + 0x10], 0
0x375c:	mov	qword ptr [rbx + 0x518], rax
0x3763:	mov	rax, qword ptr [rbp]
0x3767:	mov	rbx, qword ptr [rax + 0x518]
0x376e:	mov	qword ptr [rbp], rbx
0x3772:	mov	rax, qword ptr [rbx]
0x3775:	jmp	0x36fa


0x3996:	mov	rdi, rbp
0x3999:	mov	rbx, rax
0x399c:	call	0x6910


0x39a1:	mov	rbp, qword ptr [rip + 0x218868]
0x39a8:	mov	r12, rax
0x39ab:	mov	qword ptr [rbx + 0x28], rax
0x39af:	mov	rax, qword ptr [rip + 0x218852]
0x39b6:	mov	qword ptr [rbx], r13
0x39b9:	mov	qword ptr [rbx + 0x38], 0
0x39c1:	mov	qword ptr [rbx + 0x30], 0
0x39c9:	mov	qword ptr [rbx + 0x20], 0
0x39d1:	mov	qword ptr [rbx + 8], 0
0x39d9:	add	rax, 1
0x39dd:	test	rbp, rbp
0x39e0:	mov	qword ptr [rbx + 0x40], 0
0x39e8:	mov	qword ptr [rbx + 0x18], rax
0x39ec:	mov	qword ptr [rbx + 0x10], rax
0x39f0:	jne	0x3b40


0x39f6:	xor	edi, edi
0x39f8:	mov	rdx, r13
0x39fb:	mov	rsi, r12
0x39fe:	call	0x6280


0x3b40:	mov	rsi, qword ptr [rip + 0x2186d1]
0x3b47:	mov	rdx, rbp
0x3b4a:	mov	rdi, r12
0x3b4d:	call	0x1d70


0x3b52:	sub	r13, rbp
0x3b55:	mov	qword ptr [rbx + 8], rbp
0x3b59:	mov	qword ptr [rip + 0x2186ac], 0
0x3b64:	je	0x3a2b


0x3a2b:	lea	rax, [rbx + 0x38]
0x3a2f:	xor	r14d, r14d
0x3a32:	mov	qword ptr [rsp + 8], rax
0x3a37:	jmp	0x3a69


0x3b6a:	add	r12, rbp
0x3b6d:	jmp	0x39f6


0x3a69:	mov	rdx, rbp
0x3a6c:	mov	esi, 0xa
0x3a71:	mov	rdi, r12
0x3a74:	call	0x1ce0


0x1ce0:	jmp	qword ptr [rip + 0x21a1aa]




0x3a03:	test	rax, rax
0x3a06:	jne	0x3b78


0x3a0c:	mov	byte ptr [rip + 0x2187e5], 1
0x3a13:	add	rax, qword ptr [rbx + 8]
0x3a17:	test	rax, rax
0x3a1a:	mov	rbp, rax
0x3a1d:	mov	qword ptr [rbx + 8], rax
0x3a21:	je	0x3ad4


0x3b78:	cmp	rax, -1
0x3b7c:	jne	0x3a13


0x3ad4:	cmp	byte ptr [rip + 0x21871d], 0
0x3adb:	jne	0x3c30


0x3a27:	mov	r12, qword ptr [rbx + 0x28]
0x3a2b:	lea	rax, [rbx + 0x38]
0x3a2f:	xor	r14d, r14d
0x3a32:	mov	qword ptr [rsp + 8], rax
0x3a37:	jmp	0x3a69


0x3b82:	lea	rsi, [rip + 0x12459]
0x3b89:	mov	edx, 5
0x3b8e:	xor	edi, edi
0x3b90:	call	0x1bf0


0x3a13:	add	rax, qword ptr [rbx + 8]
0x3a17:	test	rax, rax
0x3a1a:	mov	rbp, rax
0x3a1d:	mov	qword ptr [rbx + 8], rax
0x3a21:	je	0x3ad4


0x3ae1:	mov	rcx, qword ptr [rbx]
0x3ae4:	mov	eax, 2
0x3ae9:	xor	esi, esi
0x3aeb:	mul	rcx
0x3aee:	jo	0x3c7b


0x3c30:	lea	rsi, [rbx + 0x30]
0x3c34:	lea	rdi, [rbx + 0x28]
0x3c38:	call	0x37c0


0x3c7b:	mov	esi, 1
0x3c80:	jmp	0x3af4


0x3af4:	test	rax, rax
0x3af7:	js	0x3c85


0x3c85:	call	0x3810


0x3afd:	test	rsi, rsi
0x3b00:	jne	0x3c85


0x3b06:	lea	rsi, [rbx + 0x30]
0x3b0a:	lea	rdi, [rbx + 0x28]
0x3b0e:	lea	rbp, [rcx + rcx]
0x3b12:	call	0x37c0


0x3b17:	mov	rdi, rbx
0x3b1a:	call	0x1b00


0x3b1f:	cmp	rbp, 0x1fff
0x3b26:	ja	0x3970


0x3970:	sub	rbp, 0x1800
0x3977:	and	rbp, 0xfffffffffffff800
0x397e:	lea	r13, [rbp + 0x1fff]
0x3985:	add	rbp, 0x2000
0x398c:	mov	edi, 0x48
0x3991:	call	0x6910


0x3c3d:	mov	rdi, rbx
0x3c40:	call	0x1b00


0x3c45:	add	rsp, 0x18
0x3c49:	xor	eax, eax
0x3c4b:	pop	rbx
0x3c4c:	pop	rbp
0x3c4d:	pop	r12
0x3c4f:	pop	r13
0x3c51:	pop	r14
0x3c53:	pop	r15
0x3c55:	ret	


0x3b95:	mov	rbx, rax
0x3b98:	call	0x1b20


0x3b9d:	mov	esi, dword ptr [rax]
0x3b9f:	mov	rdx, rbx
0x3ba2:	xor	edi, edi
0x3ba4:	xor	eax, eax
0x3ba6:	call	0x1e60


0x3dfa:	test	al, al
0x3dfc:	je	0x3e68


0x3dfe:	mov	rax, qword ptr [rbx + 0x40]
0x3e02:	test	rax, rax
0x3e05:	jne	0x3dd0


0x3e07:	lea	rcx, [rip + 0x12cf2]
0x3e0e:	lea	rsi, [rip + 0x12403]
0x3e15:	lea	rdi, [rip + 0x121e9]
0x3e1c:	mov	edx, 0x26a
0x3e21:	call	0x1c90


0x3d4e:	test	al, al
0x3d50:	je	0x3d60


0x3d52:	mov	rdx, qword ptr [rip + 0x2184c7]
0x3d59:	jmp	0x3cc9


0x3e86:	test	al, al
0x3e88:	je	0x3e68


0x3e8a:	mov	rbx, qword ptr [rip + 0x21838f]
0x3e91:	jmp	0x3db9


0x3ec7:	test	al, al
0x3ec9:	je	0x3ed8


0x3ecb:	mov	rax, qword ptr [rip + 0x21834e]
0x3ed2:	pop	rbx
0x3ed3:	mov	rax, qword ptr [rax + 0x18]
0x3ed7:	ret	


0x378d:	mov	qword ptr [rbp], rax
0x3791:	mov	qword ptr [rax + 0x518], 0
0x379c:	mov	qword ptr [rax], 0
0x37a3:	mov	qword ptr [rax + 8], 0
0x37ab:	mov	qword ptr [rax + 0x10], 0
0x37b3:	mov	qword ptr [rbx], rax
0x37b6:	jmp	0x36ed


0x6ac9:	mov	rdx, rbx
0x6acc:	xor	esi, esi
0x6ace:	mov	rdi, rax
0x6ad1:	pop	rbx
0x6ad2:	jmp	0x1cb0


0x6b24:	add	rsp, 8
0x6b28:	mov	rdx, rbx
0x6b2b:	mov	rsi, rbp
0x6b2e:	pop	rbx
0x6b2f:	pop	rbp
0x6b30:	mov	rdi, rax
0x6b33:	jmp	0x1d70


0x82f5:	test	rax, rax
0x82f8:	mov	qword ptr [rbp + 0x30], rax
0x82fc:	je	0x833e


0x833e:	pop	rbx
0x833f:	mov	eax, 0xc
0x8344:	pop	rbp
0x8345:	pop	r12
0x8347:	pop	r13
0x8349:	pop	r14
0x834b:	ret	


0x82fe:	test	rbx, rbx
0x8301:	jle	0x8350


0x8350:	and	r12, qword ptr [r14 + 0x88]
0x8357:	mov	rax, qword ptr [r14 + 0x40]
0x835b:	lea	rdx, [r12 + r12*2]
0x835f:	lea	rbx, [rax + rdx*8]
0x8363:	mov	rdx, qword ptr [rbx]
0x8366:	cmp	qword ptr [rbx + 8], rdx
0x836a:	mov	rax, qword ptr [rbx + 0x10]
0x836e:	lea	rsi, [rdx + 1]
0x8372:	jle	0x8386


0x8303:	xor	ebx, ebx
0x8305:	jmp	0x831a


0x8386:	lea	r12, [rsi + rsi]
0x838a:	mov	rdi, rax
0x838d:	shl	rsi, 4
0x8391:	call	0x1e00


0x8374:	mov	qword ptr [rbx], rsi
0x8377:	mov	qword ptr [rax + rdx*8], rbp
0x837b:	xor	eax, eax
0x837d:	pop	rbx
0x837e:	pop	rbp
0x837f:	pop	r12
0x8381:	pop	r13
0x8383:	pop	r14
0x8385:	ret	


0x831a:	mov	rax, qword ptr [rbp + 0x18]
0x831e:	mov	rsi, qword ptr [rax + rbx*8]
0x8322:	mov	rax, rsi
0x8325:	shl	rax, 4
0x8329:	add	rax, qword ptr [r14]
0x832c:	test	byte ptr [rax + 8], 8
0x8330:	jne	0x8310


0x8332:	mov	rdi, r13
0x8335:	call	0x8120


0x8310:	add	rbx, 1
0x8314:	cmp	qword ptr [rbp + 0x10], rbx
0x8318:	jle	0x8350


0x833a:	test	al, al
0x833c:	jne	0x8310


0x8396:	test	rax, rax
0x8399:	je	0x833e


0x839b:	mov	rdx, qword ptr [rbx]
0x839e:	mov	qword ptr [rbx + 0x10], rax
0x83a2:	mov	qword ptr [rbx + 8], r12
0x83a6:	lea	rsi, [rdx + 1]
0x83aa:	jmp	0x8374


0xae6b:	test	eax, eax
0xae6d:	jne	0xaec4


0xaec4:	mov	rdi, rbx
0xaec7:	call	0x9360


0xac26:	test	eax, eax
0xac28:	je	0xaacc


0x9e2c:	test	rax, rax
0x9e2f:	mov	qword ptr [rsp + 0x30], rax
0x9e34:	je	0xa070


0xa070:	mov	eax, 0xc
0xa075:	jmp	0x9f76


0x9e3a:	mov	rax, qword ptr [r15 + 0x30]
0x9e3e:	mov	rdx, qword ptr [r15]
0x9e41:	mov	r13, rbp
0x9e44:	shl	r13, 4
0x9e48:	mov	qword ptr [rax + rbx + 8], -1
0x9e51:	lea	rax, [rdx + r13]
0x9e55:	mov	r8d, dword ptr [rax + 8]
0x9e59:	test	r8d, 0x3ff00
0x9e60:	jne	0xa000


0x9f76:	mov	rsi, qword ptr [rsp + 0x58]
0x9f7b:	xor	rsi, qword ptr fs:[0x28]
0x9f84:	jne	0xa07a


0x9e66:	test	byte ptr [rax + 8], 8
0x9e6a:	je	0x9f30


0xa000:	cmp	qword ptr [r12 + 8], 0
0xa006:	je	0x9f30


0x9f8a:	add	rsp, 0x68
0x9f8e:	pop	rbx
0x9f8f:	pop	rbp
0x9f90:	pop	r12
0x9f92:	pop	r13
0x9f94:	pop	r14
0x9f96:	pop	r15
0x9f98:	ret	


0xa07a:	call	0x1c20


0x9f30:	lea	rdi, [rsp + 0x20]
0x9f35:	mov	rsi, rbp
0x9f38:	call	0x8190


0x9e70:	mov	rsi, qword ptr [r15 + 0x28]
0x9e74:	lea	rax, [rsi + rbx]
0x9e78:	cmp	qword ptr [rax + 8], 0
0x9e7d:	jle	0x9f30


0xa00c:	mov	rcx, qword ptr [r12 + 0x10]
0xa011:	mov	rcx, qword ptr [rcx]
0xa014:	shl	rcx, 4
0xa018:	test	byte ptr [rdx + rcx + 0xa], 4
0xa01d:	jne	0x9e66


0x9e83:	lea	rdx, [rsp + 0x20]
0x9e88:	mov	byte ptr [rsp + 0x1b], 0
0x9e8d:	xor	r14d, r14d
0x9e90:	lea	r12, [rsp + 0x40]
0x9e95:	mov	qword ptr [rsp + 8], rdx
0x9e9a:	jmp	0x9eb6


0xa023:	shr	r8d, 8
0xa027:	mov	rcx, rbp
0xa02a:	mov	rdx, rbp
0xa02d:	and	r8d, 0x3ff
0xa034:	mov	rsi, rbp
0xa037:	mov	rdi, r15
0xa03a:	call	0x90e0


0x9eb6:	mov	rax, qword ptr [rax + 0x10]
0x9eba:	mov	rdx, qword ptr [rax + r14*8]
0x9ebe:	mov	rax, qword ptr [r15 + 0x30]
0x9ec2:	lea	r8, [rdx + rdx*2]
0x9ec6:	lea	r13, [r8*8]
0x9ece:	add	rax, r13
0x9ed1:	mov	rcx, qword ptr [rax + 8]
0x9ed5:	cmp	rcx, -1
0x9ed9:	je	0x9fa0


0x9fa0:	lea	rax, [rsi + rbx]
0x9fa4:	add	r14, 1
0x9fa8:	mov	byte ptr [rsp + 0x1b], 1
0x9fad:	cmp	qword ptr [rax + 8], r14
0x9fb1:	jg	0x9eb6


0x9edf:	test	rcx, rcx
0x9ee2:	je	0xa058


0x9fb7:	lea	rdi, [rsp + 0x20]
0x9fbc:	mov	rsi, rbp
0x9fbf:	call	0x8190


0xa058:	mov	rsi, r15
0xa05b:	mov	rdi, r12
0xa05e:	call	0x9dd0


0x9ee8:	movdqu	xmm0, xmmword ptr [rax]
0x9eec:	movaps	xmmword ptr [rsp + 0x40], xmm0
0x9ef1:	mov	rax, qword ptr [rax + 0x10]
0x9ef5:	mov	qword ptr [rsp + 0x50], rax
0x9efa:	mov	rdi, qword ptr [rsp + 8]
0x9eff:	mov	rsi, r12
0x9f02:	call	0x9bf0


0x9f07:	test	eax, eax
0x9f09:	jne	0x9f76


0x9f0b:	mov	rax, qword ptr [r15 + 0x30]
0x9f0f:	cmp	qword ptr [rax + r13 + 8], 0
0x9f15:	jne	0x9ea0


0x9f17:	mov	rdi, qword ptr [rsp + 0x50]
0x9f1c:	call	0x1b00


0x9ea0:	mov	rsi, qword ptr [r15 + 0x28]
0x9ea4:	add	r14, 1
0x9ea8:	lea	rax, [rsi + rbx]
0x9eac:	cmp	qword ptr [rax + 8], r14
0x9eb0:	jle	0x9fb7


0x9f21:	mov	byte ptr [rsp + 0x1b], 1
0x9f26:	jmp	0x9ea0


0xa063:	test	eax, eax
0xa065:	je	0x9efa


0x9efa:	mov	rdi, qword ptr [rsp + 8]
0x9eff:	mov	rsi, r12
0x9f02:	call	0x9bf0


0xa06b:	jmp	0x9f76


0xa03f:	test	eax, eax
0xa041:	jne	0x9f76


0xa047:	mov	rax, qword ptr [r15]
0xa04a:	add	rax, r13
0xa04d:	jmp	0x9e66


0x9fc4:	test	al, al
0x9fc6:	je	0xa070


0x9fcc:	cmp	byte ptr [rsp + 0x1c], 1
0x9fd1:	mov	rax, qword ptr [r15 + 0x30]
0x9fd5:	lea	rdx, [rax + rbx]
0x9fd9:	je	0x9f49


0x9f49:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x9f4f:	movups	xmmword ptr [rax + rbx], xmm0
0x9f53:	mov	rdx, qword ptr [rsp + 0x30]
0x9f58:	mov	qword ptr [rax + rbx + 0x10], rdx
0x9f5d:	mov	rbx, qword ptr [rsp + 0x10]
0x9f62:	mov	rax, qword ptr [rsp + 0x30]
0x9f67:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x9f6d:	movaps	xmmword ptr [rbx], xmm0
0x9f70:	mov	qword ptr [rbx + 0x10], rax
0x9f74:	xor	eax, eax
0x9f76:	mov	rsi, qword ptr [rsp + 0x58]
0x9f7b:	xor	rsi, qword ptr fs:[0x28]
0x9f84:	jne	0xa07a


0x9fdf:	cmp	byte ptr [rsp + 0x1b], 0
0x9fe4:	je	0x9f49


0x9fea:	mov	qword ptr [rdx + 8], 0
0x9ff2:	jmp	0x9f5d


0x9f5d:	mov	rbx, qword ptr [rsp + 0x10]
0x9f62:	mov	rax, qword ptr [rsp + 0x30]
0x9f67:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x9f6d:	movaps	xmmword ptr [rbx], xmm0
0x9f70:	mov	qword ptr [rbx + 0x10], rax
0x9f74:	xor	eax, eax
0x9f76:	mov	rsi, qword ptr [rsp + 0x58]
0x9f7b:	xor	rsi, qword ptr fs:[0x28]
0x9f84:	jne	0xa07a


0x9f3d:	test	al, al
0x9f3f:	je	0xa070


0x9f45:	mov	rax, qword ptr [r15 + 0x30]
0x9f49:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x9f4f:	movups	xmmword ptr [rax + rbx], xmm0
0x9f53:	mov	rdx, qword ptr [rsp + 0x30]
0x9f58:	mov	qword ptr [rax + rbx + 0x10], rdx
0x9f5d:	mov	rbx, qword ptr [rsp + 0x10]
0x9f62:	mov	rax, qword ptr [rsp + 0x30]
0x9f67:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x9f6d:	movaps	xmmword ptr [rbx], xmm0
0x9f70:	mov	qword ptr [rbx + 0x10], rax
0x9f74:	xor	eax, eax
0x9f76:	mov	rsi, qword ptr [rsp + 0x58]
0x9f7b:	xor	rsi, qword ptr fs:[0x28]
0x9f84:	jne	0xa07a


0xa0c8:	test	rax, rax
0xa0cb:	mov	qword ptr [rsp + 0x20], rax
0xa0d0:	je	0xa1cd


0xa1cd:	mov	eax, 0xc
0xa1d2:	jmp	0xa1ae


0xa0d6:	test	r12, r12
0xa0d9:	jle	0xa16b


0xa1ae:	mov	rdx, qword ptr [rsp + 0x28]
0xa1b3:	xor	rdx, qword ptr fs:[0x28]
0xa1bc:	jne	0xa1d4


0xa16b:	mov	rdi, qword ptr [r15 + 0x10]
0xa16f:	call	0x1b00


0xa0df:	lea	r12, [rsp + 0x10]
0xa0e4:	xor	r13d, r13d
0xa0e7:	nop	word ptr [rax + rax]
0xa0f0:	mov	rax, qword ptr [r15 + 0x10]
0xa0f4:	mov	rdx, qword ptr [rax + r13*8]
0xa0f8:	mov	rax, qword ptr [r14 + 0x30]
0xa0fc:	lea	rcx, [rdx + rdx*2]
0xa100:	lea	rsi, [rax + rcx*8]
0xa104:	mov	r8, qword ptr [rsi + 8]
0xa108:	test	r8, r8
0xa10b:	jle	0xa190


0xa1be:	add	rsp, 0x38
0xa1c2:	pop	rbx
0xa1c3:	pop	rbp
0xa1c4:	pop	r12
0xa1c6:	pop	r13
0xa1c8:	pop	r14
0xa1ca:	pop	r15
0xa1cc:	ret	


0xa1d4:	call	0x1c20


0xa190:	mov	rdi, r12
0xa193:	call	0x9bf0


0xa111:	mov	r10, qword ptr [rsi + 0x10]
0xa115:	mov	r9, qword ptr [r14]
0xa118:	xor	ecx, ecx
0xa11a:	jmp	0xa129


0xa129:	mov	rdi, qword ptr [r10 + rcx*8]
0xa12d:	mov	rax, rdi
0xa130:	shl	rax, 4
0xa134:	add	rax, r9
0xa137:	movzx	r11d, byte ptr [rax + 8]
0xa13c:	cmp	ebx, r11d
0xa13f:	jne	0xa120


0xa141:	cmp	rbp, qword ptr [rax]
0xa144:	jne	0xa120


0xa120:	add	rcx, 1
0xa124:	cmp	r8, rcx
0xa127:	je	0xa190


0xa146:	cmp	rdi, -1
0xa14a:	je	0xa190


0xa14c:	mov	r8d, ebx
0xa14f:	mov	rcx, rbp
0xa152:	mov	rsi, r12
0xa155:	mov	rdi, r14
0xa158:	call	0x9750


0xa15d:	test	eax, eax
0xa15f:	jne	0xa19c


0xa161:	add	r13, 1
0xa165:	cmp	qword ptr [r15 + 8], r13
0xa169:	jg	0xa0f0


0xa19c:	mov	rdi, qword ptr [rsp + 0x20]
0xa1a1:	mov	dword ptr [rsp + 0xc], eax
0xa1a5:	call	0x1b00


0xa0f0:	mov	rax, qword ptr [r15 + 0x10]
0xa0f4:	mov	rdx, qword ptr [rax + r13*8]
0xa0f8:	mov	rax, qword ptr [r14 + 0x30]
0xa0fc:	lea	rcx, [rdx + rdx*2]
0xa100:	lea	rsi, [rax + rcx*8]
0xa104:	mov	r8, qword ptr [rsi + 8]
0xa108:	test	r8, r8
0xa10b:	jle	0xa190


0xa198:	test	eax, eax
0xa19a:	je	0xa161


0xa1aa:	mov	eax, dword ptr [rsp + 0xc]
0xa1ae:	mov	rdx, qword ptr [rsp + 0x28]
0xa1b3:	xor	rdx, qword ptr fs:[0x28]
0xa1bc:	jne	0xa1d4


0xa174:	mov	rax, qword ptr [rsp + 0x20]
0xa179:	movdqa	xmm0, xmmword ptr [rsp + 0x10]
0xa17f:	mov	qword ptr [r15 + 0x10], rax
0xa183:	xor	eax, eax
0xa185:	movaps	xmmword ptr [r15], xmm0
0xa189:	jmp	0xa1ae


0xb26d:	mov	rsi, r15
0xb270:	mov	rdi, rbp
0xb273:	mov	r14d, eax
0xb276:	call	0x9bf0


0xb27b:	mov	rdi, qword ptr [rsp + 0x60]
0xb280:	mov	r15d, eax
0xb283:	call	0x1b00


0xb288:	mov	eax, dword ptr [rsp + 0x4c]
0xb28c:	mov	edx, r14d
0xb28f:	or	edx, r15d
0xb292:	or	edx, eax
0xb294:	jne	0xb326


0xb29a:	mov	rcx, qword ptr [rbx + 0xd8]
0xb2a1:	jmp	0xb0e3


0xb326:	test	eax, eax
0xb328:	jne	0xb07f


0xb0e3:	mov	rax, qword ptr [rsp + 0x30]
0xb0e8:	lea	r15, [rcx + rax]
0xb0ec:	jmp	0xb1c8


0xb32e:	test	r14d, r14d
0xb331:	mov	eax, r14d
0xb334:	cmove	eax, r15d
0xb338:	jmp	0xb07f


0xe5e8:	test	eax, eax
0xe5ea:	mov	dword ptr [rsp + 0x88], eax
0xe5f1:	je	0xe70d


0xe5f7:	jmp	0xe650


0xe459:	test	eax, eax
0xe45b:	mov	dword ptr [rsp + 0x88], eax
0xe462:	jne	0xe650


0xe468:	mov	r8d, dword ptr [rsp + 0x110]
0xe470:	mov	rcx, qword ptr [rsp + 0x48]
0xe475:	mov	rdx, rbx
0xe478:	mov	rsi, qword ptr [rsp + 8]
0xe47d:	mov	rdi, r15
0xe480:	call	0xafc0


0xe485:	test	eax, eax
0xe487:	mov	dword ptr [rsp + 0x88], eax
0xe48e:	jne	0xe650


0xc196:	test	rax, rax
0xc199:	mov	qword ptr [rsp + 0x18], rax
0xc19e:	je	0xc570


0xc570:	xor	eax, eax
0xc572:	mov	rbx, qword ptr [rsp + 0xf8]
0xc57a:	xor	rbx, qword ptr fs:[0x28]
0xc583:	jne	0xccd4


0xc1a4:	mov	rax, qword ptr [rsp + 0x18]
0xc1a9:	pxor	xmm0, xmm0
0xc1ad:	lea	rbx, [rax + 0x1800]
0xc1b4:	mov	rax, qword ptr [rsp + 8]
0xc1b9:	movaps	xmmword ptr [rsp + 0x90], xmm0
0xc1c1:	mov	qword ptr [rsp + 0x40], rbx
0xc1c6:	movaps	xmmword ptr [rsp + 0xa0], xmm0
0xc1ce:	cmp	qword ptr [rax + 0x10], 0
0xc1d3:	mov	qword ptr [rax + 0x58], 0
0xc1db:	mov	qword ptr [rax + 0x60], 0
0xc1e3:	jle	0xcc5a


0xc589:	add	rsp, 0x108
0xc590:	pop	rbx
0xc591:	pop	rbp
0xc592:	pop	r12
0xc594:	pop	r13
0xc596:	pop	r14
0xc598:	pop	r15
0xc59a:	ret	


0xccd4:	call	0x1c20


0xcc5a:	mov	rdi, qword ptr [rsp + 0x18]
0xcc5f:	call	0x1b00


0xc1e9:	mov	qword ptr [rsp + 0x30], r15
0xc1ee:	xor	ebp, ebp
0xc1f0:	mov	qword ptr [rsp + 0x10], 0
0xc1f9:	mov	r15, rbx
0xc1fc:	mov	rbx, qword ptr [rsp + 0x10]
0xc201:	lea	rax, [rbx*8]
0xc209:	mov	qword ptr [rsp + 0x20], rax
0xc20e:	mov	rax, qword ptr [rsp + 8]
0xc213:	mov	rax, qword ptr [rax + 0x18]
0xc217:	mov	r13, qword ptr [rax + rbx*8]
0xc21b:	mov	rax, qword ptr [rsp + 0x30]
0xc220:	shl	r13, 4
0xc224:	add	r13, qword ptr [rax]
0xc227:	movzx	r14d, byte ptr [r13 + 8]
0xc22c:	mov	eax, dword ptr [r13 + 8]
0xc230:	shr	eax, 8
0xc233:	and	ax, 0x3ff
0xc237:	cmp	r14d, 1
0xc23b:	je	0xc5a0


0xc5a0:	movzx	ecx, byte ptr [r13]
0xc5a5:	lea	r12, [rsp + 0x90]
0xc5ad:	mov	edi, 1
0xc5b2:	mov	rdx, rcx
0xc5b5:	and	ecx, 0x3f
0xc5b8:	shr	rdx, 3
0xc5bc:	shl	rdi, cl
0xc5bf:	and	edx, 0x18
0xc5c2:	or	qword ptr [r12 + rdx], rdi
0xc5c6:	test	ax, ax
0xc5c9:	je	0xc690


0xc241:	cmp	r14d, 3
0xc245:	je	0xca10


0xc690:	xor	ebx, ebx
0xc692:	test	rbp, rbp
0xc695:	jle	0xc7fb


0xc5cf:	test	al, 0x20
0xc5d1:	jne	0xc940


0xca10:	mov	rsi, qword ptr [r13]
0xca14:	lea	r12, [rsp + 0x90]
0xca1c:	xor	edx, edx
0xca1e:	mov	rcx, qword ptr [r12 + rdx]
0xca22:	or	rcx, qword ptr [rsi + rdx]
0xca26:	mov	qword ptr [r12 + rdx], rcx
0xca2a:	add	rdx, 8
0xca2e:	cmp	rdx, 0x20
0xca32:	jne	0xca1e


0xc24b:	cmp	r14d, 5
0xc24f:	je	0xc8d0


0xc7fb:	cmp	rbp, rbx
0xc7fe:	jne	0xc25f


0xc69b:	mov	qword ptr [rsp + 0x28], r13
0xc6a0:	mov	r13, r15
0xc6a3:	nop	dword ptr [rax + rax]
0xc6a8:	mov	r10, rbx
0xc6ab:	shl	r10, 5
0xc6af:	cmp	r14d, 1
0xc6b3:	jne	0xc6d8


0xc5d7:	test	al, 0x80
0xc5d9:	jne	0xc874


0xc940:	mov	rdx, qword ptr [rsp + 0x90]
0xc948:	pxor	xmm0, xmm0
0xc94c:	and	dh, 4
0xc94f:	movaps	xmmword ptr [r12], xmm0
0xc954:	movaps	xmmword ptr [r12 + 0x10], xmm0
0xc95a:	je	0xc25f


0xca34:	jmp	0xc5c6


0xca1e:	mov	rcx, qword ptr [r12 + rdx]
0xca22:	or	rcx, qword ptr [rsi + rdx]
0xca26:	mov	qword ptr [r12 + rdx], rcx
0xca2a:	add	rdx, 8
0xca2e:	cmp	rdx, 0x20
0xca32:	jne	0xca1e


0xc8d0:	mov	rsi, qword ptr [rsp + 0x30]
0xc8d5:	cmp	dword ptr [rsi + 0xb4], 1
0xc8dc:	jle	0xc9e5


0xc255:	cmp	r14d, 7
0xc259:	je	0xca39


0xc804:	mov	rax, rbp
0xc807:	movdqa	xmm0, xmmword ptr [rsp + 0x90]
0xc810:	shl	rax, 5
0xc814:	mov	rbx, qword ptr [rsp + 0x20]
0xc819:	mov	edi, 8
0xc81e:	add	rax, r15
0xc821:	movups	xmmword ptr [rax], xmm0
0xc824:	movdqa	xmm0, xmmword ptr [rsp + 0xa0]
0xc82d:	movups	xmmword ptr [rax + 0x10], xmm0
0xc831:	mov	rax, qword ptr [rsp + 8]
0xc836:	mov	rax, qword ptr [rax + 0x18]
0xc83a:	mov	r13, qword ptr [rax + rbx]
0xc83e:	mov	rbx, qword ptr [rsp + 0x18]
0xc843:	lea	rax, [rbp + rbp*2]
0xc848:	lea	rbx, [rbx + rax*8]
0xc84c:	mov	qword ptr [rbx], 1
0xc853:	mov	qword ptr [rbx + 8], 1
0xc85b:	call	0x1da0


0xc25f:	mov	rbx, qword ptr [rsp + 8]
0xc264:	add	qword ptr [rsp + 0x10], 1
0xc26a:	mov	rax, qword ptr [rsp + 0x10]
0xc26f:	cmp	rax, qword ptr [rbx + 0x10]
0xc273:	jl	0xc1fc


0xc6b5:	mov	rax, qword ptr [rsp + 0x28]
0xc6ba:	movzx	edx, byte ptr [rax]
0xc6bd:	mov	rax, rdx
0xc6c0:	shr	rax, 3
0xc6c4:	and	eax, 0x18
0xc6c7:	add	rax, r13
0xc6ca:	mov	rax, qword ptr [rax + r10]
0xc6ce:	bt	rax, rdx
0xc6d2:	jae	0xc7eb


0xc6d8:	lea	rdi, [r13 + r10]
0xc6dd:	lea	rsi, [rsp + 0xb0]
0xc6e5:	xor	ecx, ecx
0xc6e7:	xor	eax, eax
0xc6e9:	mov	rdx, qword ptr [r12 + rax*8]
0xc6ed:	and	rdx, qword ptr [rdi + rax*8]
0xc6f1:	mov	qword ptr [rsi + rax*8], rdx
0xc6f5:	add	rax, 1
0xc6f9:	or	rcx, rdx
0xc6fc:	cmp	rax, 4
0xc700:	jne	0xc6e9


0xc5df:	test	al, 4
0xc5e1:	je	0xc635


0xc874:	pxor	xmm0, xmm0
0xc878:	movaps	xmmword ptr [r12], xmm0
0xc87d:	movaps	xmmword ptr [r12 + 0x10], xmm0
0xc883:	jmp	0xc25f


0xc960:	mov	qword ptr [rsp + 0x90], 0x400
0xc96c:	jmp	0xc5d7


0xc5c6:	test	ax, ax
0xc5c9:	je	0xc690


0xc9e5:	pcmpeqd	xmm0, xmm0
0xc9e9:	lea	r12, [rsp + 0x90]
0xc9f1:	movaps	xmmword ptr [rsp + 0x90], xmm0
0xc9f9:	movaps	xmmword ptr [rsp + 0xa0], xmm0
0xca01:	jmp	0xc906


0xc8e2:	mov	rsi, qword ptr [rsi + 0x78]
0xc8e6:	lea	r12, [rsp + 0x90]
0xc8ee:	xor	edx, edx
0xc8f0:	mov	rcx, qword ptr [r12 + rdx]
0xc8f4:	or	rcx, qword ptr [rsi + rdx]
0xc8f8:	mov	qword ptr [r12 + rdx], rcx
0xc8fc:	add	rdx, 8
0xc900:	cmp	rdx, 0x20
0xc904:	jne	0xc8f0


0xca39:	pcmpeqd	xmm0, xmm0
0xca3d:	lea	r12, [rsp + 0x90]
0xca45:	movaps	xmmword ptr [rsp + 0x90], xmm0
0xca4d:	jmp	0xc906


0xc1fc:	mov	rbx, qword ptr [rsp + 0x10]
0xc201:	lea	rax, [rbx*8]
0xc209:	mov	qword ptr [rsp + 0x20], rax
0xc20e:	mov	rax, qword ptr [rsp + 8]
0xc213:	mov	rax, qword ptr [rax + 0x18]
0xc217:	mov	r13, qword ptr [rax + rbx*8]
0xc21b:	mov	rax, qword ptr [rsp + 0x30]
0xc220:	shl	r13, 4
0xc224:	add	r13, qword ptr [rax]
0xc227:	movzx	r14d, byte ptr [r13 + 8]
0xc22c:	mov	eax, dword ptr [r13 + 8]
0xc230:	shr	eax, 8
0xc233:	and	ax, 0x3ff
0xc237:	cmp	r14d, 1
0xc23b:	je	0xc5a0


0xc275:	test	rbp, rbp
0xc278:	mov	r15, qword ptr [rsp + 0x30]
0xc27d:	jle	0xccd9


0xc7eb:	add	rbx, 1
0xc7ef:	cmp	rbx, rbp
0xc7f2:	jl	0xc6a8


0xc702:	test	rcx, rcx
0xc705:	je	0xc7eb


0xc6e9:	mov	rdx, qword ptr [r12 + rax*8]
0xc6ed:	and	rdx, qword ptr [rdi + rax*8]
0xc6f1:	mov	qword ptr [rsi + rax*8], rdx
0xc6f5:	add	rax, 1
0xc6f9:	or	rcx, rdx
0xc6fc:	cmp	rax, 4
0xc700:	jne	0xc6e9


0xc635:	test	al, 8
0xc637:	je	0xc690


0xc5e3:	cmp	r14d, 1
0xc5e7:	je	0xc9c5


0xc906:	mov	rbx, qword ptr [rsp + 0x30]
0xc90b:	mov	rdx, qword ptr [rbx + 0xd8]
0xc912:	test	dl, 0x40
0xc915:	jne	0xc923


0xc8f0:	mov	rcx, qword ptr [r12 + rdx]
0xc8f4:	or	rcx, qword ptr [rsi + rdx]
0xc8f8:	mov	qword ptr [r12 + rdx], rcx
0xc8fc:	add	rdx, 8
0xc900:	cmp	rdx, 0x20
0xc904:	jne	0xc8f0


0xccd9:	mov	rdi, qword ptr [rsp + 0x18]
0xccde:	call	0x1b00


0xc283:	lea	rbx, [rbp + 1]
0xc287:	mov	qword ptr [rsp + 0x78], 0
0xc290:	mov	qword ptr [rsp + 0x70], rbx
0xc295:	shl	rbx, 3
0xc299:	mov	rdi, rbx
0xc29c:	call	0x1da0


0xc6a8:	mov	r10, rbx
0xc6ab:	shl	r10, 5
0xc6af:	cmp	r14d, 1
0xc6b3:	jne	0xc6d8


0xc7f8:	mov	r15, r13
0xc7fb:	cmp	rbp, rbx
0xc7fe:	jne	0xc25f


0xc70b:	lea	r11, [rsp + 0xd0]
0xc713:	xor	r15d, r15d
0xc716:	xor	r9d, r9d
0xc719:	xor	ecx, ecx
0xc71b:	mov	rsi, qword ptr [r12 + rcx*8]
0xc71f:	mov	rax, qword ptr [rdi + rcx*8]
0xc723:	mov	rdx, rsi
0xc726:	not	rdx
0xc729:	and	rdx, rax
0xc72c:	not	rax
0xc72f:	and	rax, rsi
0xc732:	mov	qword ptr [r11 + rcx*8], rdx
0xc736:	or	r9, rdx
0xc739:	mov	qword ptr [r12 + rcx*8], rax
0xc73d:	add	rcx, 1
0xc741:	or	r15, rax
0xc744:	cmp	rcx, 4
0xc748:	jne	0xc71b


0xc639:	cmp	r14d, 1
0xc63d:	je	0xc971


0xc9c5:	test	byte ptr [r13 + 0xa], 0x40
0xc9ca:	je	0xc874


0xc5ed:	mov	r8, qword ptr [rsp + 0x30]
0xc5f2:	cmp	dword ptr [r8 + 0xb4], 1
0xc5fa:	jle	0xca52


0xc917:	and	qword ptr [rsp + 0x90], 0xfffffffffffffbff
0xc923:	and	edx, 0x80
0xc929:	je	0xc5c6


0xc923:	and	edx, 0x80
0xc929:	je	0xc5c6


0xc74a:	mov	rdi, qword ptr [rsp + 0x18]
0xc74f:	lea	rax, [rbx + rbx*2]
0xc753:	test	r9, r9
0xc756:	lea	rdx, [rdi + rax*8]
0xc75a:	je	0xc7c4


0xc71b:	mov	rsi, qword ptr [r12 + rcx*8]
0xc71f:	mov	rax, qword ptr [rdi + rcx*8]
0xc723:	mov	rdx, rsi
0xc726:	not	rdx
0xc729:	and	rdx, rax
0xc72c:	not	rax
0xc72f:	and	rax, rsi
0xc732:	mov	qword ptr [r11 + rcx*8], rdx
0xc736:	or	r9, rdx
0xc739:	mov	qword ptr [r12 + rcx*8], rax
0xc73d:	add	rcx, 1
0xc741:	or	r15, rax
0xc744:	cmp	rcx, 4
0xc748:	jne	0xc71b


0xc971:	test	byte ptr [r13 + 0xa], 0x40
0xc976:	jne	0xc874


0xc643:	mov	rdi, qword ptr [rsp + 0x30]
0xc648:	cmp	dword ptr [rdi + 0xb4], 1
0xc64f:	jle	0xc98e


0xc9d0:	mov	r8, qword ptr [rsp + 0x30]
0xc9d5:	cmp	dword ptr [r8 + 0xb4], 1
0xc9dd:	jg	0xc600


0xca52:	mov	rdi, qword ptr [rsp + 0x30]
0xca57:	xor	esi, esi
0xca59:	xor	edx, edx
0xca5b:	mov	rcx, qword ptr [r12 + rdx*8]
0xca5f:	and	rcx, qword ptr [rdi + rdx*8 + 0xb8]
0xca67:	mov	qword ptr [r12 + rdx*8], rcx
0xca6b:	add	rdx, 1
0xca6f:	or	rsi, rcx
0xca72:	cmp	rdx, 4
0xca76:	jne	0xca5b


0xc600:	mov	rdi, qword ptr [r8 + 0x78]
0xc604:	xor	esi, esi
0xc606:	xor	ecx, ecx
0xc608:	mov	rdx, qword ptr [rdi + rcx*8]
0xc60c:	not	rdx
0xc60f:	or	rdx, qword ptr [r8 + rcx*8 + 0xb8]
0xc617:	and	rdx, qword ptr [r12 + rcx*8]
0xc61b:	mov	qword ptr [r12 + rcx*8], rdx
0xc61f:	add	rcx, 1
0xc623:	or	rsi, rdx
0xc626:	cmp	rcx, 4
0xc62a:	jne	0xc608


0xc92f:	and	qword ptr [rsp + 0x90], 0xfffffffffffffffe
0xc938:	jmp	0xc5c6


0xc7c4:	mov	rax, qword ptr [rsp + 8]
0xc7c9:	mov	rsi, qword ptr [rsp + 0x20]
0xc7ce:	mov	rdi, rdx
0xc7d1:	mov	rax, qword ptr [rax + 0x18]
0xc7d5:	mov	rsi, qword ptr [rax + rsi]
0xc7d9:	call	0x8190


0xc75c:	mov	rax, rbp
0xc75f:	movdqa	xmm0, xmmword ptr [rsp + 0xd0]
0xc768:	shl	rax, 5
0xc76c:	mov	rsi, rdx
0xc76f:	mov	qword ptr [rsp + 0x38], rdx
0xc774:	add	rax, r13
0xc777:	movups	xmmword ptr [rax], xmm0
0xc77a:	movdqa	xmm0, xmmword ptr [rsp + 0xe0]
0xc783:	movups	xmmword ptr [rax + 0x10], xmm0
0xc787:	lea	rax, [rbp + rbp*2]
0xc78c:	lea	rdi, [rdi + rax*8]
0xc790:	movdqa	xmm0, xmmword ptr [rsp + 0xb0]
0xc799:	movups	xmmword ptr [r13 + r10], xmm0
0xc79f:	movdqa	xmm0, xmmword ptr [rsp + 0xc0]
0xc7a8:	movups	xmmword ptr [r13 + r10 + 0x10], xmm0
0xc7ae:	call	0xa830


0xc97c:	mov	rdi, qword ptr [rsp + 0x30]
0xc981:	cmp	dword ptr [rdi + 0xb4], 1
0xc988:	jg	0xc655


0xc98e:	mov	rsi, qword ptr [rsp + 0x30]
0xc993:	xor	ecx, ecx
0xc995:	xor	edx, edx
0xc997:	mov	rax, qword ptr [rsi + rdx*8 + 0xb8]
0xc99f:	not	rax
0xc9a2:	and	rax, qword ptr [r12 + rdx*8]
0xc9a6:	mov	qword ptr [r12 + rdx*8], rax
0xc9aa:	add	rdx, 1
0xc9ae:	or	rcx, rax
0xc9b1:	cmp	rdx, 4
0xc9b5:	jne	0xc997


0xc655:	mov	rsi, qword ptr [rdi + 0x78]
0xc659:	xor	ecx, ecx
0xc65b:	xor	edx, edx
0xc65d:	mov	rax, qword ptr [rdi + rdx*8 + 0xb8]
0xc665:	and	rax, qword ptr [rsi + rdx*8]
0xc669:	not	rax
0xc66c:	and	rax, qword ptr [r12 + rdx*8]
0xc670:	mov	qword ptr [r12 + rdx*8], rax
0xc674:	add	rdx, 1
0xc678:	or	rcx, rax
0xc67b:	cmp	rdx, 4
0xc67f:	jne	0xc65d


0xc9e3:	jmp	0xca52


0xca78:	test	rsi, rsi
0xca7b:	jne	0xc635


0xca5b:	mov	rcx, qword ptr [r12 + rdx*8]
0xca5f:	and	rcx, qword ptr [rdi + rdx*8 + 0xb8]
0xca67:	mov	qword ptr [r12 + rdx*8], rcx
0xca6b:	add	rdx, 1
0xca6f:	or	rsi, rcx
0xca72:	cmp	rdx, 4
0xca76:	jne	0xca5b


0xc62c:	test	rsi, rsi
0xc62f:	je	0xc25f


0xc608:	mov	rdx, qword ptr [rdi + rcx*8]
0xc60c:	not	rdx
0xc60f:	or	rdx, qword ptr [r8 + rcx*8 + 0xb8]
0xc617:	and	rdx, qword ptr [r12 + rcx*8]
0xc61b:	mov	qword ptr [r12 + rcx*8], rdx
0xc61f:	add	rcx, 1
0xc623:	or	rsi, rdx
0xc626:	cmp	rcx, 4
0xc62a:	jne	0xc608


0xc9b7:	test	rcx, rcx
0xc9ba:	jne	0xc690


0xc997:	mov	rax, qword ptr [rsi + rdx*8 + 0xb8]
0xc99f:	not	rax
0xc9a2:	and	rax, qword ptr [r12 + rdx*8]
0xc9a6:	mov	qword ptr [r12 + rdx*8], rax
0xc9aa:	add	rdx, 1
0xc9ae:	or	rcx, rax
0xc9b1:	cmp	rdx, 4
0xc9b5:	jne	0xc997


0xc681:	test	rcx, rcx
0xc684:	je	0xc25f


0xc65d:	mov	rax, qword ptr [rdi + rdx*8 + 0xb8]
0xc665:	and	rax, qword ptr [rsi + rdx*8]
0xc669:	not	rax
0xc66c:	and	rax, qword ptr [r12 + rdx*8]
0xc670:	mov	qword ptr [r12 + rdx*8], rax
0xc674:	add	rdx, 1
0xc678:	or	rcx, rax
0xc67b:	cmp	rdx, 4
0xc67f:	jne	0xc65d


0xca81:	jmp	0xc25f


0xc9c0:	jmp	0xc25f


0xc7b3:	test	eax, eax
0xc7b5:	jne	0xc890


0xc7bb:	mov	rdx, qword ptr [rsp + 0x38]
0xc7c0:	add	rbp, 1
0xc7c4:	mov	rax, qword ptr [rsp + 8]
0xc7c9:	mov	rsi, qword ptr [rsp + 0x20]
0xc7ce:	mov	rdi, rdx
0xc7d1:	mov	rax, qword ptr [rax + 0x18]
0xc7d5:	mov	rsi, qword ptr [rax + rsi]
0xc7d9:	call	0x8190


0xc890:	mov	rax, qword ptr [rsp + 0x18]
0xc895:	lea	rbx, [rax + 0x10]
0xc899:	lea	rax, [rbp + rbp*2]
0xc89e:	lea	rbp, [rbx + rax*8]
0xc8a2:	nop	word ptr [rax + rax]
0xc8a8:	mov	rdi, qword ptr [rbx]
0xc8ab:	add	rbx, 0x18
0xc8af:	call	0x1b00


0xc7de:	test	al, al
0xc7e0:	je	0xc890


0xc7e6:	test	r15, r15
0xc7e9:	je	0xc7f8


0xc8b4:	cmp	rbp, rbx
0xc8b7:	jne	0xc8a8


0xc8b9:	mov	rdi, qword ptr [rsp + 0x18]
0xc8be:	call	0x1b00


0xc8a8:	mov	rdi, qword ptr [rbx]
0xc8ab:	add	rbx, 0x18
0xc8af:	call	0x1b00


0xc8c3:	jmp	0xc570


0xcce3:	test	rbp, rbp
0xcce6:	jne	0xc570


0xccec:	jmp	0xcc64


0xcc64:	mov	esi, 0x100
0xcc69:	mov	edi, 8
0xcc6e:	call	0x1d30


0xcc73:	mov	rbx, qword ptr [rsp + 8]
0xcc78:	test	rax, rax
0xcc7b:	mov	qword ptr [rbx + 0x58], rax
0xcc7f:	setne	al
0xcc82:	jmp	0xc572


0xc572:	mov	rbx, qword ptr [rsp + 0xf8]
0xc57a:	xor	rbx, qword ptr fs:[0x28]
0xc583:	jne	0xccd4


0x11185:	test	al, al
0x11187:	jne	0x108a4


0x1118d:	mov	rdi, qword ptr [rsp + 0x1d8]
0x11195:	mov	dword ptr [rsp + 0xd0], 0xc
0x111a0:	test	rdi, rdi
0x111a3:	jne	0x110d0


0x108a4:	mov	rax, qword ptr [r14 + 0x58]
0x108a8:	test	rax, rax
0x108ab:	je	0x10fc0


0xc2a1:	test	rax, rax
0xc2a4:	mov	r12, rax
0xc2a7:	mov	qword ptr [rsp + 0x80], rax
0xc2af:	je	0xcaaf


0xcaaf:	mov	rdi, r12
0xcab2:	call	0x1b00


0xc2b5:	movabs	rax, 0xaaaaaaaaaaaa855
0xc2bf:	mov	dword ptr [rsp + 0x6c], 0
0xc2c7:	cmp	rbp, rax
0xc2ca:	jg	0xcaaf


0xc2d0:	lea	rax, [rbp + rbp*2]
0xc2d5:	shl	rax, 3
0xc2d9:	mov	rdi, rax
0xc2dc:	mov	qword ptr [rsp + 0x58], rax
0xc2e1:	call	0x1da0


0xcab7:	mov	rax, qword ptr [rsp + 0x18]
0xcabc:	lea	rbx, [rax + 0x10]
0xcac0:	lea	rax, [rbp + rbp*2]
0xcac5:	lea	rbp, [rbx + rax*8]
0xcac9:	nop	dword ptr [rax]
0xcad0:	mov	rdi, qword ptr [rbx]
0xcad3:	add	rbx, 0x18
0xcad7:	call	0x1b00


0xcadc:	cmp	rbp, rbx
0xcadf:	jne	0xcad0


0xcae1:	mov	rdi, qword ptr [rsp + 0x18]
0xcae6:	call	0x1b00


0xcad0:	mov	rdi, qword ptr [rbx]
0xcad3:	add	rbx, 0x18
0xcad7:	call	0x1b00


0xcaeb:	jmp	0xc570


0xc2e6:	test	rax, rax
0xc2e9:	mov	qword ptr [rsp + 0x10], rax
0xc2ee:	je	0xcaaf


0xc2f4:	mov	rax, qword ptr [rsp + 0x10]
0xc2f9:	sub	rbx, 8
0xc2fd:	mov	r12, qword ptr [rsp + 0x40]
0xc302:	pxor	xmm0, xmm0
0xc306:	lea	r14, [rsp + 0x70]
0xc30b:	mov	qword ptr [rsp + 0x20], rbp
0xc310:	mov	byte ptr [rsp + 0x4f], 0
0xc315:	mov	rbp, r15
0xc318:	add	rax, rbx
0xc31b:	mov	qword ptr [rsp + 0x50], r12
0xc320:	add	rbx, rax
0xc323:	mov	qword ptr [rsp + 0x30], rax
0xc328:	mov	rax, qword ptr [rsp + 0x18]
0xc32d:	movaps	xmmword ptr [rsp + 0xd0], xmm0
0xc335:	mov	qword ptr [rsp + 0x38], rbx
0xc33a:	xor	ebx, ebx
0xc33c:	lea	r13, [rax + 8]
0xc340:	lea	rax, [rsp + 0x6c]
0xc345:	movaps	xmmword ptr [rsp + 0xe0], xmm0
0xc34d:	mov	qword ptr [rsp + 0x28], rax
0xc352:	mov	qword ptr [rsp + 0x78], 0
0xc35b:	cmp	qword ptr [r13], 0
0xc360:	jle	0xc3a8


0xc3a8:	mov	rdi, qword ptr [rsp + 0x28]
0xc3ad:	xor	ecx, ecx
0xc3af:	mov	rsi, rbp
0xc3b2:	mov	rdx, r14
0xc3b5:	call	0xaa20


0xc362:	xor	r15d, r15d
0xc365:	nop	dword ptr [rax]
0xc368:	mov	rax, qword ptr [r13 + 8]
0xc36c:	mov	rdx, qword ptr [rax + r15*8]
0xc370:	mov	rax, qword ptr [rbp + 0x18]
0xc374:	mov	rax, qword ptr [rax + rdx*8]
0xc378:	cmp	rax, -1
0xc37c:	je	0xc39e


0xc39e:	add	r15, 1
0xc3a2:	cmp	qword ptr [r13], r15
0xc3a6:	jg	0xc368


0xc37e:	lea	rdx, [rax + rax*2]
0xc382:	mov	rax, qword ptr [rbp + 0x30]
0xc386:	mov	rdi, r14
0xc389:	lea	rsi, [rax + rdx*8]
0xc38d:	call	0x9bf0


0xc368:	mov	rax, qword ptr [r13 + 8]
0xc36c:	mov	rdx, qword ptr [rax + r15*8]
0xc370:	mov	rax, qword ptr [rbp + 0x18]
0xc374:	mov	rax, qword ptr [rax + rdx*8]
0xc378:	cmp	rax, -1
0xc37c:	je	0xc39e


0xc392:	test	eax, eax
0xc394:	mov	dword ptr [rsp + 0x6c], eax
0xc398:	jne	0xca98


0xca98:	mov	rbp, qword ptr [rsp + 0x20]
0xca9d:	mov	rdi, qword ptr [rsp + 0x10]
0xcaa2:	call	0x1b00


0xcaa7:	mov	r12, qword ptr [rsp + 0x80]
0xcaaf:	mov	rdi, r12
0xcab2:	call	0x1b00


0xc3ba:	mov	rsi, qword ptr [rsp + 0x10]
0xc3bf:	test	rax, rax
0xc3c2:	mov	qword ptr [rsi + rbx*8], rax
0xc3c6:	je	0xcb78


0xcb78:	mov	ecx, dword ptr [rsp + 0x6c]
0xcb7c:	test	ecx, ecx
0xcb7e:	je	0xc3cc


0xc3cc:	cmp	byte ptr [rax + 0x68], 0
0xc3d0:	js	0xcaf0


0xcb84:	jmp	0xca98


0xcaf0:	mov	rdi, qword ptr [rsp + 0x28]
0xcaf5:	mov	ecx, 1
0xcafa:	mov	rdx, r14
0xcafd:	mov	rsi, rbp
0xcb00:	call	0xaa20


0xc3d6:	mov	rdi, qword ptr [rsp + 0x30]
0xc3db:	mov	rsi, qword ptr [rsp + 0x38]
0xc3e0:	mov	qword ptr [rdi + rbx*8], rax
0xc3e4:	mov	rax, qword ptr [rsp + 0x10]
0xc3e9:	mov	rax, qword ptr [rax + rbx*8]
0xc3ed:	mov	qword ptr [rsi + rbx*8], rax
0xc3f1:	lea	rdx, [rsp + 0xd0]
0xc3f9:	xor	eax, eax
0xc3fb:	mov	rcx, qword ptr [rdx + rax]
0xc3ff:	or	rcx, qword ptr [r12 + rax]
0xc403:	mov	qword ptr [rdx + rax], rcx
0xc407:	add	rax, 8
0xc40b:	cmp	rax, 0x20
0xc40f:	jne	0xc3fb


0xc411:	add	rbx, 1
0xc415:	add	r13, 0x18
0xc419:	add	r12, 0x20
0xc41d:	cmp	rbx, qword ptr [rsp + 0x20]
0xc422:	jne	0xc352


0xc3fb:	mov	rcx, qword ptr [rdx + rax]
0xc3ff:	or	rcx, qword ptr [r12 + rax]
0xc403:	mov	qword ptr [rdx + rax], rcx
0xc407:	add	rax, 8
0xc40b:	cmp	rax, 0x20
0xc40f:	jne	0xc3fb


0xc428:	cmp	byte ptr [rsp + 0x4f], 0
0xc42d:	mov	r15, rbp
0xc430:	mov	rbp, qword ptr [rsp + 0x20]
0xc435:	mov	qword ptr [rsp + 0x20], rdx
0xc43a:	jne	0xcb89


0xc352:	mov	qword ptr [rsp + 0x78], 0
0xc35b:	cmp	qword ptr [r13], 0
0xc360:	jle	0xc3a8


0xc440:	mov	esi, 0x100
0xc445:	mov	edi, 8
0xc44a:	call	0x1d30


0xcb89:	mov	esi, 0x200
0xcb8e:	mov	edi, 8
0xcb93:	call	0x1d30


0xcb98:	mov	r11, rax
0xcb9b:	mov	rax, qword ptr [rsp + 8]
0xcba0:	test	r11, r11
0xcba3:	mov	qword ptr [rax + 0x60], r11
0xcba7:	je	0xca9d


0xca9d:	mov	rdi, qword ptr [rsp + 0x10]
0xcaa2:	call	0x1b00


0xcbad:	mov	r13, qword ptr [rsp + 0x40]
0xcbb2:	mov	r10, qword ptr [rsp + 0x10]
0xcbb7:	mov	r12, r11
0xcbba:	mov	r14, qword ptr [rsp + 0x30]
0xcbbf:	mov	rdx, qword ptr [rsp + 0x20]
0xcbc4:	xor	ebx, ebx
0xcbc6:	add	r13, 0x20
0xcbca:	mov	rax, qword ptr [rdx + rbx]
0xcbce:	test	rax, rax
0xcbd1:	je	0xcbef


0xcbef:	add	rbx, 8
0xcbf3:	add	r12, 0x200
0xcbfa:	cmp	rbx, 0x20
0xcbfe:	jne	0xcbca


0xcbd3:	mov	rsi, r12
0xcbd6:	mov	ecx, 1
0xcbdb:	test	al, 1
0xcbdd:	jne	0xcc8c


0xcc00:	jmp	0xc4be


0xcbca:	mov	rax, qword ptr [rdx + rbx]
0xcbce:	test	rax, rax
0xcbd1:	je	0xcbef


0xcbe3:	add	rcx, rcx
0xcbe6:	add	rsi, 8
0xcbea:	shr	rax, 1
0xcbed:	jne	0xcbdb


0xcc8c:	mov	rdi, qword ptr [rsp + 0x18]
0xcc91:	test	qword ptr [rdi + rbx + 0x1800], rcx
0xcc99:	jne	0xccd0


0xc4be:	test	byte ptr [rsp + 0xd1], 4
0xc4c6:	je	0xc502


0xcbdb:	test	al, 1
0xcbdd:	jne	0xcc8c


0xcc9b:	lea	r9, [r13 + rbx]
0xcca0:	xor	r8d, r8d
0xcca3:	mov	r15, qword ptr [r9]
0xcca6:	add	r8, 1
0xccaa:	add	r9, 0x20
0xccae:	mov	rdi, r8
0xccb1:	and	r15, rcx
0xccb4:	test	r15, r15
0xccb7:	je	0xcca3


0xccd0:	xor	edi, edi
0xccd2:	jmp	0xccb9


0xc502:	mov	rdi, qword ptr [rsp + 0x10]
0xc507:	call	0x1b00


0xc4c8:	xor	eax, eax
0xc4ca:	mov	rdx, qword ptr [rsp + 0x50]
0xc4cf:	jmp	0xc4de


0xcca3:	mov	r15, qword ptr [r9]
0xcca6:	add	r8, 1
0xccaa:	add	r9, 0x20
0xccae:	mov	rdi, r8
0xccb1:	and	r15, rcx
0xccb4:	test	r15, r15
0xccb7:	je	0xcca3


0xccb9:	mov	r8, qword ptr [r10 + rdi*8]
0xccbd:	mov	qword ptr [rsi], r8
0xccc0:	mov	rdi, qword ptr [r14 + rdi*8]
0xccc4:	mov	qword ptr [rsi + 0x800], rdi
0xcccb:	jmp	0xcbe3


0xc4de:	test	qword ptr [rdx], 0x400
0xc4e5:	je	0xc4d1


0xc4d1:	add	rax, 1
0xc4d5:	add	rdx, 0x20
0xc4d9:	cmp	rax, rbp
0xc4dc:	je	0xc502


0xc4e7:	mov	rbx, qword ptr [rsp + 0x38]
0xc4ec:	cmp	byte ptr [rsp + 0x4f], 0
0xc4f1:	mov	rax, qword ptr [rbx + rax*8]
0xc4f5:	mov	qword ptr [r11 + 0x50], rax
0xc4f9:	je	0xc502


0xc4fb:	mov	qword ptr [r11 + 0x850], rax
0xc502:	mov	rdi, qword ptr [rsp + 0x10]
0xc507:	call	0x1b00


0xc50c:	mov	rdi, qword ptr [rsp + 0x80]
0xc514:	call	0x1b00


0xc519:	mov	rax, qword ptr [rsp + 0x18]
0xc51e:	mov	rbx, qword ptr [rsp + 0x58]
0xc523:	lea	rbp, [rax + 0x10]
0xc527:	add	rbx, rbp
0xc52a:	mov	rdi, qword ptr [rbp]
0xc52e:	add	rbp, 0x18
0xc532:	call	0x1b00


0xc537:	cmp	rbx, rbp
0xc53a:	jne	0xc52a


0xc53c:	mov	rdi, qword ptr [rsp + 0x18]
0xc541:	call	0x1b00


0xc52a:	mov	rdi, qword ptr [rbp]
0xc52e:	add	rbp, 0x18
0xc532:	call	0x1b00


0xc546:	mov	eax, 1
0xc54b:	jmp	0xc572


0xc44f:	mov	r11, rax
0xc452:	mov	rax, qword ptr [rsp + 8]
0xc457:	test	r11, r11
0xc45a:	mov	qword ptr [rax + 0x58], r11
0xc45e:	je	0xca9d


0xc464:	mov	rbx, qword ptr [rsp + 0x40]
0xc469:	mov	r12, qword ptr [rsp + 0x10]
0xc46e:	xor	r9d, r9d
0xc471:	mov	r13, qword ptr [rsp + 0x30]
0xc476:	mov	rdx, qword ptr [rsp + 0x20]
0xc47b:	add	rbx, 0x20
0xc47f:	mov	rax, qword ptr [rdx + r9]
0xc483:	test	rax, rax
0xc486:	je	0xc4b4


0xc4b4:	add	r9, 8
0xc4b8:	cmp	r9, 0x20
0xc4bc:	jne	0xc47f


0xc488:	mov	rsi, r9
0xc48b:	mov	ecx, 1
0xc490:	shl	rsi, 6
0xc494:	add	rsi, r11
0xc497:	nop	word ptr [rax + rax]
0xc4a0:	test	al, 1
0xc4a2:	jne	0xcc08


0xc47f:	mov	rax, qword ptr [rdx + r9]
0xc483:	test	rax, rax
0xc486:	je	0xc4b4


0xc4a8:	add	rcx, rcx
0xc4ab:	add	rsi, 8
0xc4af:	shr	rax, 1
0xc4b2:	jne	0xc4a0


0xcc08:	mov	rdi, qword ptr [rsp + 0x18]
0xcc0d:	test	qword ptr [rdi + r9 + 0x1800], rcx
0xcc15:	jne	0xcc87


0xc4a0:	test	al, 1
0xc4a2:	jne	0xcc08


0xcc17:	lea	rdi, [rbx + r9]
0xcc1b:	xor	r8d, r8d
0xcc1e:	nop	
0xcc20:	mov	r10, qword ptr [rdi]
0xcc23:	add	r8, 1
0xcc27:	add	rdi, 0x20
0xcc2b:	and	r10, rcx
0xcc2e:	test	r10, r10
0xcc31:	je	0xcc20


0xcc87:	xor	r8d, r8d
0xcc8a:	jmp	0xcc37


0xcc20:	mov	r10, qword ptr [rdi]
0xcc23:	add	r8, 1
0xcc27:	add	rdi, 0x20
0xcc2b:	and	r10, rcx
0xcc2e:	test	r10, r10
0xcc31:	je	0xcc20


0xcc33:	shl	r8, 3
0xcc37:	test	qword ptr [r15 + r9 + 0xb8], rcx
0xcc3f:	je	0xcc4e


0xcc37:	test	qword ptr [r15 + r9 + 0xb8], rcx
0xcc3f:	je	0xcc4e


0xcc4e:	mov	rdi, qword ptr [r12 + r8]
0xcc52:	mov	qword ptr [rsi], rdi
0xcc55:	jmp	0xc4a8


0xcc41:	mov	rdi, qword ptr [r13 + r8]
0xcc46:	mov	qword ptr [rsi], rdi
0xcc49:	jmp	0xc4a8


0xcb05:	mov	rdi, qword ptr [rsp + 0x30]
0xcb0a:	test	rax, rax
0xcb0d:	mov	qword ptr [rdi + rbx*8], rax
0xcb11:	je	0xca86


0xca86:	mov	edx, dword ptr [rsp + 0x6c]
0xca8a:	test	edx, edx
0xca8c:	je	0xcb17


0xcb17:	mov	rdi, qword ptr [rsp + 0x10]
0xcb1c:	cmp	rax, qword ptr [rdi + rbx*8]
0xcb20:	je	0xcb3b


0xcb3b:	mov	rdi, qword ptr [rsp + 0x28]
0xcb40:	mov	rsi, rbp
0xcb43:	mov	ecx, 2
0xcb48:	mov	rdx, r14
0xcb4b:	call	0xaa20


0xcb22:	movzx	edi, byte ptr [rsp + 0x4f]
0xcb27:	cmp	dword ptr [rbp + 0xb4], 2
0xcb2e:	mov	eax, 1
0xcb33:	cmovge	edi, eax
0xcb36:	mov	byte ptr [rsp + 0x4f], dil
0xcb3b:	mov	rdi, qword ptr [rsp + 0x28]
0xcb40:	mov	rsi, rbp
0xcb43:	mov	ecx, 2
0xcb48:	mov	rdx, r14
0xcb4b:	call	0xaa20


0xcb50:	mov	rsi, qword ptr [rsp + 0x38]
0xcb55:	test	rax, rax
0xcb58:	mov	qword ptr [rsi + rbx*8], rax
0xcb5c:	jne	0xc3f1


0xcb62:	mov	eax, dword ptr [rsp + 0x6c]
0xcb66:	test	eax, eax
0xcb68:	je	0xc3f1


0xc3f1:	lea	rdx, [rsp + 0xd0]
0xc3f9:	xor	eax, eax
0xc3fb:	mov	rcx, qword ptr [rdx + rax]
0xc3ff:	or	rcx, qword ptr [r12 + rax]
0xc403:	mov	qword ptr [rdx + rax], rcx
0xc407:	add	rax, 8
0xc40b:	cmp	rax, 0x20
0xc40f:	jne	0xc3fb


0xcb6e:	jmp	0xca98


0xc860:	test	rax, rax
0xc863:	mov	qword ptr [rbx + 0x10], rax
0xc867:	je	0xc54d


0xc54d:	test	rbp, rbp
0xc550:	mov	qword ptr [rbx + 8], 0
0xc558:	mov	qword ptr [rbx], 0
0xc55f:	jne	0xc890


0xc86d:	mov	qword ptr [rax], r13
0xc870:	add	rbp, 1
0xc874:	pxor	xmm0, xmm0
0xc878:	movaps	xmmword ptr [r12], xmm0
0xc87d:	movaps	xmmword ptr [r12 + 0x10], xmm0
0xc883:	jmp	0xc25f


0xc565:	mov	rdi, qword ptr [rsp + 0x18]
0xc56a:	call	0x1b00


0xfdfc:	test	rax, rax
0xfdff:	mov	qword ptr [rsp + 0x50], rax
0xfe04:	je	0x100e4


0x100e4:	mov	eax, 0xc
0x100e9:	jmp	0x100c5


0xfe0a:	lea	rcx, [rsp + 0x40]
0xfe0f:	mov	qword ptr [rax], rbx
0xfe12:	mov	rdx, r15
0xfe15:	mov	rsi, r13
0xfe18:	mov	rdi, r14
0xfe1b:	mov	qword ptr [rsp + 0x10], rcx
0xfe20:	call	0x11820


0x100c5:	mov	rdx, qword ptr [rsp + 0x58]
0x100ca:	xor	rdx, qword ptr fs:[0x28]
0x100d3:	jne	0x100eb


0x100d5:	add	rsp, 0x68
0x100d9:	pop	rbx
0x100da:	pop	rbp
0x100db:	pop	r12
0x100dd:	pop	r13
0x100df:	pop	r14
0x100e1:	pop	r15
0x100e3:	ret	


0x100eb:	call	0x1c20


0xfe25:	test	eax, eax
0xfe27:	jne	0x100b5


0xfe2d:	lea	rax, [r15*8]
0xfe35:	test	r15, r15
0xfe38:	mov	dword ptr [rsp + 0x2c], 0
0xfe40:	mov	qword ptr [rsp + 8], rax
0xfe45:	lea	rax, [r13 + 0x30]
0xfe49:	mov	qword ptr [rsp + 0x38], rax
0xfe4e:	jle	0x10057


0x100b5:	mov	rdi, qword ptr [rsp + 0x50]
0x100ba:	mov	dword ptr [rsp], eax
0x100bd:	call	0x1b00


0x10057:	xor	eax, eax
0x10059:	jmp	0x100b5


0xfe54:	mov	rdi, qword ptr [r13]
0xfe58:	mov	rax, qword ptr [rsp + 8]
0xfe5d:	cmp	qword ptr [rdi + rax], 0
0xfe62:	je	0x10078


0x10078:	mov	rax, qword ptr [rsp]
0x1007c:	add	dword ptr [rsp + 0x2c], 1
0x10081:	mov	ecx, dword ptr [rsp + 0x2c]
0x10085:	cmp	dword ptr [rax + 0xe0], ecx
0x1008b:	jge	0xfe84


0xfe68:	mov	rax, qword ptr [rsp]
0xfe6c:	mov	dword ptr [rsp + 0x2c], 0
0xfe74:	mov	ecx, dword ptr [rsp + 0x2c]
0xfe78:	cmp	dword ptr [rax + 0xe0], ecx
0xfe7e:	jl	0x10091


0x10091:	mov	rdx, qword ptr [rsp + 8]
0x10096:	xor	esi, esi
0x10098:	call	0x1cb0


0xfe84:	mov	rbx, qword ptr [rsp]
0xfe88:	mov	rdi, qword ptr [rsp + 8]
0xfe8d:	sub	r15, 1
0xfe91:	mov	qword ptr [rsp + 0x48], 0
0xfe9a:	mov	rax, qword ptr [rbx + 0xb8]
0xfea1:	mov	r12, qword ptr [rax + rdi - 8]
0xfea6:	test	r12, r12
0xfea9:	je	0x10030


0x10030:	mov	rcx, qword ptr [rsp + 0x10]
0x10035:	mov	rdi, qword ptr [rsp]
0x10039:	mov	rdx, r15
0x1003c:	mov	rsi, r13
0x1003f:	call	0x11820


0xfeaf:	cmp	qword ptr [r12 + 0x28], 0
0xfeb5:	mov	r14, qword ptr [rbx + 0x98]
0xfebc:	jle	0x10030


0xfec2:	xor	ebx, ebx
0xfec4:	jmp	0xff6b


0xff6b:	mov	rax, qword ptr [r12 + 0x30]
0xff70:	mov	rsi, qword ptr [r14]
0xff73:	mov	rbp, qword ptr [rax + rbx*8]
0xff77:	mov	r9, rbp
0xff7a:	shl	r9, 4
0xff7e:	add	rsi, r9
0xff81:	test	byte ptr [rsi + 0xa], 0x10
0xff85:	je	0xfed0


0xfed0:	mov	rdi, qword ptr [rsp]
0xfed4:	mov	rdx, r15
0xfed7:	call	0xb5a0


0xff8b:	mov	rcx, qword ptr [rsp]
0xff8f:	mov	rax, qword ptr [r13 + 0x18]
0xff93:	mov	r8, r15
0xff96:	mov	rdx, rbp
0xff99:	mov	qword ptr [rsp + 0x18], r9
0xff9e:	mov	r11, qword ptr [rcx + 0x98]
0xffa5:	mov	qword ptr [rsp + 0x20], rax
0xffaa:	mov	rdi, qword ptr [r11]
0xffad:	lea	rsi, [r11 + 0xd8]
0xffb4:	mov	qword ptr [rsp + 0x30], r11
0xffb9:	call	0xde80


0xffbe:	movsxd	r10, eax
0xffc1:	mov	r9, qword ptr [rsp + 0x18]
0xffc6:	cmp	r10d, 0
0xffca:	jle	0x10060


0x10060:	jne	0xff12


0xffd0:	movsxd	rax, r10d
0xffd3:	add	rax, r15
0xffd6:	cmp	qword ptr [rsp + 0x20], rax
0xffdb:	jl	0xff12


0x10066:	mov	rsi, qword ptr [r14]
0x10069:	add	rsi, r9
0x1006c:	jmp	0xfed0


0xff12:	cmp	qword ptr [r13 + 0x28], 0
0xff17:	je	0xff47


0xffe1:	mov	rdx, qword ptr [r13]
0xffe5:	mov	r11, qword ptr [rsp + 0x30]
0xffea:	mov	rax, qword ptr [rdx + rax*8]
0xffee:	test	rax, rax
0xfff1:	je	0x10066


0xff47:	mov	rdi, qword ptr [rsp + 0x10]
0xff4c:	mov	rsi, rbp
0xff4f:	call	0x8190


0xff19:	mov	rax, qword ptr [r14 + 0x18]
0xff1d:	sub	rsp, 8
0xff21:	lea	rsi, [r13 + 0x28]
0xff25:	lea	r8, [r10 + r15]
0xff29:	mov	r9, rbp
0xff2c:	mov	rcx, qword ptr [rax + rbp*8]
0xff30:	push	r15
0xff32:	mov	rdx, qword ptr [rsp + 0x48]
0xff37:	mov	rdi, qword ptr [rsp + 0x10]
0xff3c:	call	0x9980


0xfff3:	mov	rdx, qword ptr [r11 + 0x18]
0xfff7:	mov	rdi, qword ptr [rax + 0x10]
0xfffb:	lea	rsi, [rax + 0x18]
0xffff:	mov	qword ptr [rsp + 0x18], r9
0x10004:	mov	rdx, qword ptr [rdx + rbp*8]
0x10008:	call	0x96d0


0x1000d:	test	rax, rax
0x10010:	jne	0xff12


0x10016:	mov	r9, qword ptr [rsp + 0x18]
0x1001b:	mov	rsi, qword ptr [r14]
0x1001e:	add	rsi, r9
0x10021:	jmp	0xfed0


0xff41:	test	al, al
0xff43:	pop	rdx
0xff44:	pop	rcx
0xff45:	jne	0xff5c


0xff5c:	add	rbx, 1
0xff60:	cmp	rbx, qword ptr [r12 + 0x28]
0xff65:	jge	0x10030


0xff54:	test	al, al
0xff56:	je	0x100b0


0x100b0:	mov	eax, 0xc
0x100b5:	mov	rdi, qword ptr [rsp + 0x50]
0x100ba:	mov	dword ptr [rsp], eax
0x100bd:	call	0x1b00


0xfedc:	test	al, al
0xfede:	je	0xff5c


0xfee0:	mov	rax, qword ptr [r13]
0xfee4:	mov	rcx, qword ptr [rsp + 8]
0xfee9:	mov	rax, qword ptr [rax + rcx]
0xfeed:	test	rax, rax
0xfef0:	je	0xff5c


0xfef2:	mov	rdx, qword ptr [r14 + 0x18]
0xfef6:	mov	rdi, qword ptr [rax + 0x10]
0xfefa:	lea	rsi, [rax + 0x18]
0xfefe:	mov	rdx, qword ptr [rdx + rbp*8]
0xff02:	call	0x96d0


0xff07:	test	rax, rax
0xff0a:	je	0xff5c


0xff0c:	mov	r10d, 1
0xff12:	cmp	qword ptr [r13 + 0x28], 0
0xff17:	je	0xff47


0x10044:	test	eax, eax
0x10046:	jne	0x100b5


0x10048:	sub	qword ptr [rsp + 8], 8
0x1004e:	test	r15, r15
0x10051:	jne	0xfe54


0x1009d:	mov	rdi, qword ptr [rsp + 0x50]
0x100a2:	call	0x1b00


0x100a7:	xor	eax, eax
0x100a9:	jmp	0x100c5


0x100c2:	mov	eax, dword ptr [rsp]
0x100c5:	mov	rdx, qword ptr [rsp + 0x58]
0x100ca:	xor	rdx, qword ptr fs:[0x28]
0x100d3:	jne	0x100eb


0x10ac3:	mov	rdi, qword ptr [rsp + 0x110]
0x10acb:	mov	r15d, eax
0x10ace:	call	0x1b00


0x10ad3:	test	r15d, r15d
0x10ad6:	jne	0x116f4


0x10adc:	cmp	qword ptr [r12], 0
0x10ae1:	jne	0x11753


0x116f4:	mov	r14, qword ptr [rsp + 0x18]
0x116f9:	mov	eax, r15d
0x116fc:	mov	rdi, r12
0x116ff:	mov	dword ptr [rsp + 8], eax
0x11703:	call	0x1b00


0x10ae7:	cmp	qword ptr [rbp], 0
0x10aec:	jne	0x11753


0x11753:	mov	r15, qword ptr [rsp + 0x10]
0x11758:	mov	rcx, qword ptr [rsp + 8]
0x1175d:	mov	rdx, rbp
0x11760:	mov	rsi, r12
0x11763:	mov	qword ptr [rsp + 0x20], r14
0x11768:	mov	rdi, r15
0x1176b:	call	0xaee0


0x10af2:	mov	rdx, qword ptr [rsp + 0x1d8]
0x10afa:	nop	word ptr [rax + rax]
0x10b00:	sub	r14, 1
0x10b04:	cmp	r14, -1
0x10b08:	je	0x115cb


0x115cb:	mov	rdi, r12
0x115ce:	call	0x1b00


0x10b0e:	mov	rax, qword ptr [rdx + r14*8]
0x10b12:	test	rax, rax
0x10b15:	je	0x10b00


0x10b00:	sub	r14, 1
0x10b04:	cmp	r14, -1
0x10b08:	je	0x115cb


0x10b17:	test	byte ptr [rax + 0x68], 0x10
0x10b1b:	je	0x10b00


0x10b1d:	mov	rsi, qword ptr [rax + 0x10]
0x10b21:	mov	rdi, qword ptr [rsp]
0x10b25:	lea	rdx, [rax + 0x18]
0x10b29:	mov	rcx, r14
0x10b2c:	call	0xb6b0


0x10b31:	mov	r13, rax
0x10b34:	lea	rax, [r14 + 1]
0x10b38:	mov	qword ptr [rsp + 8], rax
0x10b3d:	jmp	0x10a70


0x10a70:	mov	rax, qword ptr [rsp + 8]
0x10a75:	xor	esi, esi
0x10a77:	mov	rdi, rbp
0x10a7a:	lea	rdx, [rax*8]
0x10a82:	call	0x1cb0


0x11770:	mov	rdi, rbp
0x11773:	mov	dword ptr [rsp + 8], eax
0x11777:	call	0x1b00


0x1177c:	mov	eax, dword ptr [rsp + 8]
0x11780:	test	eax, eax
0x11782:	je	0x11352


0x11352:	mov	rdi, qword ptr [rsp + 0x1d8]
0x1135a:	call	0x1b00


0x11788:	xor	r14d, r14d
0x1178b:	jmp	0x116fc


0x116fc:	mov	rdi, r12
0x116ff:	mov	dword ptr [rsp + 8], eax
0x11703:	call	0x1b00


0x11708:	mov	rdi, r14
0x1170b:	call	0x1b00


0x11710:	mov	eax, dword ptr [rsp + 8]
0x11714:	cmp	eax, 1
0x11717:	je	0x11020


0x1135f:	mov	rax, qword ptr [rsp + 0x20]
0x11364:	mov	qword ptr [rsp + 0x1d8], r12
0x1136c:	mov	qword ptr [rsp + 0x1d0], r13
0x11374:	mov	qword ptr [rsp + 0x1c8], rax
0x1137c:	cmp	qword ptr [rsp + 0x270], 0
0x11385:	je	0x10c40


0x115d3:	mov	rdi, rbp
0x115d6:	call	0x1b00


0x115db:	jmp	0x11020


0x1132a:	mov	rdi, qword ptr [rsp + 0x110]
0x11332:	mov	dword ptr [rsp + 8], eax
0x11336:	call	0x1b00


0x1133b:	mov	eax, dword ptr [rsp + 8]
0x1133f:	test	eax, eax
0x11341:	jne	0x11788


0x11347:	cmp	qword ptr [r12], 0
0x1134c:	je	0x11013


0x11013:	mov	rdi, r12
0x11016:	call	0x1b00


0x11f1e:	test	eax, eax
0x11f20:	jne	0x1202e


0x11f26:	mov	rsi, qword ptr [rbx + 8]
0x11f2a:	mov	rdx, qword ptr [rsp + 0x60]
0x11f2f:	test	rsi, rsi
0x11f32:	je	0x11f4d


0x11f4d:	mov	r11, qword ptr [rsp + 0x38]
0x11f52:	mov	rax, qword ptr [rsp + 0x18]
0x11f57:	mov	rdi, qword ptr [rsp + 0x88]
0x11f5f:	lea	r9, [r11 + 0x30]
0x11f63:	mov	qword ptr [rdx + rax], r15
0x11f67:	mov	rdx, r13
0x11f6a:	mov	rsi, r9
0x11f6d:	call	0x96d0


0x11f34:	lea	rcx, [rbp + 1]
0x11f38:	mov	rdi, r12
0x11f3b:	call	0xaee0


0x11f40:	test	eax, eax
0x11f42:	jne	0x1202e


0x11f48:	mov	rdx, qword ptr [rsp + 0x60]
0x11f4d:	mov	r11, qword ptr [rsp + 0x38]
0x11f52:	mov	rax, qword ptr [rsp + 0x18]
0x11f57:	mov	rdi, qword ptr [rsp + 0x88]
0x11f5f:	lea	r9, [r11 + 0x30]
0x11f63:	mov	qword ptr [rdx + rax], r15
0x11f67:	mov	rdx, r13
0x11f6a:	mov	rsi, r9
0x11f6d:	call	0x96d0


0x11f72:	sub	rax, 1
0x11f76:	mov	rdx, rax
0x11f79:	js	0x11f87


0x11f87:	mov	rcx, qword ptr [rsp + 8]
0x11f8c:	lea	rax, [r13 + r13*4]
0x11f91:	mov	rdx, qword ptr [rcx + 0xd8]
0x11f98:	lea	rax, [rdx + rax*8]
0x11f9c:	nop	dword ptr [rax]
0x11fa0:	add	r13, 1
0x11fa4:	cmp	byte ptr [rax + 0x20], 0
0x11fa8:	lea	r15, [rax + 0x28]
0x11fac:	je	0x11fe0


0x11f7b:	lea	rdi, [r11 + 0x28]
0x11f7f:	mov	rsi, r9
0x11f82:	call	0x9850


0x15aba:	test	rax, rax
0x15abd:	mov	qword ptr [rbx + 0x20], rax
0x15ac1:	je	0x15b70


0x15b70:	mov	ebp, 0xc
0x15b75:	pop	rbx
0x15b76:	mov	eax, ebp
0x15b78:	pop	rbp
0x15b79:	pop	r12
0x15b7b:	pop	r13
0x15b7d:	pop	r14
0x15b7f:	ret	


0x15ac7:	mov	r13, rbp
0x15aca:	shl	r13, 0x15
0x15ace:	and	r13d, 0x400000
0x15ad5:	or	r13, r14
0x15ad8:	test	bpl, 4
0x15adc:	jne	0x15b40


0x15ade:	and	byte ptr [rbx + 0x38], 0x7f
0x15ae2:	movzx	edx, byte ptr [rbx + 0x38]
0x15ae6:	shr	ebp, 3
0x15ae9:	mov	rdi, r12
0x15aec:	and	ebp, 1
0x15aef:	mov	qword ptr [rbx + 0x28], 0
0x15af7:	shl	ebp, 4
0x15afa:	and	edx, 0xffffffef
0x15afd:	or	ebp, edx
0x15aff:	mov	byte ptr [rbx + 0x38], bpl
0x15b03:	call	0x1c10


0x15b40:	and	r13, 0xffffffffffffffbf
0x15b44:	or	byte ptr [rbx + 0x38], 0x80
0x15b48:	or	r13, 0x100
0x15b4f:	jmp	0x15ae2


0x15ae2:	movzx	edx, byte ptr [rbx + 0x38]
0x15ae6:	shr	ebp, 3
0x15ae9:	mov	rdi, r12
0x15aec:	and	ebp, 1
0x15aef:	mov	qword ptr [rbx + 0x28], 0
0x15af7:	shl	ebp, 4
0x15afa:	and	edx, 0xffffffef
0x15afd:	or	ebp, edx
0x15aff:	mov	byte ptr [rbx + 0x38], bpl
0x15b03:	call	0x1c10


0x15b08:	mov	rcx, r13
0x15b0b:	mov	rdx, rax
0x15b0e:	mov	rsi, r12
0x15b11:	mov	rdi, rbx
0x15b14:	call	0x14280


0x15b19:	cmp	eax, 0x10
0x15b1c:	mov	ebp, eax
0x15b1e:	je	0x15b58


0x15b58:	mov	ebp, 8
0x15b5d:	mov	rdi, qword ptr [rbx + 0x20]
0x15b61:	call	0x1b00


0x15b20:	test	eax, eax
0x15b22:	jne	0x15b5d


0x15b24:	mov	rdi, rbx
0x15b27:	call	0x15400


0x15b5d:	mov	rdi, qword ptr [rbx + 0x20]
0x15b61:	call	0x1b00


0x15b2c:	pop	rbx
0x15b2d:	mov	eax, ebp
0x15b2f:	pop	rbp
0x15b30:	pop	r12
0x15b32:	pop	r13
0x15b34:	pop	r14
0x15b36:	ret	


0x15b66:	mov	qword ptr [rbx + 0x20], 0
0x15b6e:	jmp	0x15b2c


0x15ddc:	mov	ebx, dword ptr [rbp]
0x15ddf:	mov	rdi, rbp
0x15de2:	mov	r12, rax
0x15de5:	call	0x7790


0x20ab:	lea	rsi, [rip + 0x14011]
0x20b2:	lea	rdi, [rip + 0x13fe1]
0x20b9:	call	0x1be0


0x1be0:	jmp	qword ptr [rip + 0x21a22a]




0x15e5b:	mov	rdx, rax
0x15e5e:	mov	eax, 1
0x15e63:	test	rdx, rdx
0x15e66:	je	0x15e85


0x15e85:	add	rsp, 8
0x15e89:	ret	


0x15e68:	lea	rdi, [rip + 0x2021]
0x15e6f:	mov	ecx, 2
0x15e74:	mov	rsi, rdx
0x15e77:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x15e77:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x15e79:	seta	cl
0x15e7c:	sbb	cl, 0
0x15e7f:	xor	eax, eax
0x15e81:	test	cl, cl
0x15e83:	jne	0x15e90


0x15e90:	lea	rdi, [rip + 0x1ffb]
0x15e97:	mov	ecx, 6
0x15e9c:	mov	rsi, rdx
0x15e9f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x15e9f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x15ea1:	seta	al
0x15ea4:	sbb	al, 0
0x15ea6:	test	al, al
0x15ea8:	setne	al
0x15eab:	add	rsp, 8
0x15eaf:	ret	


0x7b7c:	test	al, al
0x7b7e:	jne	0x7b90


0x7b80:	movzx	eax, byte ptr [r13]
0x7b85:	mov	ebp, 1
0x7b8a:	mov	dword ptr [rbx], eax
0x7b8c:	nop	dword ptr [rax]
0x7b90:	mov	rdx, qword ptr [rsp + 8]
0x7b95:	xor	rdx, qword ptr fs:[0x28]
0x7b9e:	mov	rax, rbp
0x7ba1:	jne	0x7bae


0x143b7:	movzx	edx, byte ptr [rax]
0x143ba:	and	edx, 0xffffffdf
0x143bd:	cmp	dl, 0x55
0x143c0:	jne	0x14410


0x143c2:	movzx	edx, byte ptr [rax + 1]
0x143c6:	and	edx, 0xffffffdf
0x143c9:	cmp	dl, 0x54
0x143cc:	jne	0x14410


0x14410:	movzx	eax, byte ptr [rbx + 0xb0]
0x14417:	mov	edx, eax
0x14419:	and	edx, 0xfffffff7
0x1441c:	cmp	dword ptr [rbx + 0xb4], 1
0x14423:	mov	byte ptr [rbx + 0xb0], dl
0x14429:	jle	0x1443e


0x143ce:	movzx	edx, byte ptr [rax + 2]
0x143d2:	and	edx, 0xffffffdf
0x143d5:	cmp	dl, 0x46
0x143d8:	jne	0x14410


0x1443e:	cmp	qword ptr [rbx], 0
0x14442:	je	0x14986


0x1442b:	test	al, 4
0x1442d:	je	0x14993


0x143da:	xor	edx, edx
0x143dc:	cmp	byte ptr [rax + 3], 0x2d
0x143e0:	lea	rdi, [rip + 0x32e7]
0x143e7:	mov	ecx, 2
0x143ec:	sete	dl
0x143ef:	lea	rsi, [rax + rdx + 3]
0x143f4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x14448:	cmp	qword ptr [rbx + 0x40], 0
0x1444d:	je	0x14986


0x14993:	mov	esi, 1
0x14998:	mov	edi, 0x20
0x1499d:	call	0x1d30


0x14433:	lea	rax, [rip + 0x3806]
0x1443a:	mov	qword ptr [rbx + 0x78], rax
0x1443e:	cmp	qword ptr [rbx], 0
0x14442:	je	0x14986


0x143f4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x143f6:	seta	al
0x143f9:	sbb	al, 0
0x143fb:	test	al, al
0x143fd:	jne	0x14410


0x14453:	mov	rax, qword ptr [rsp + 0x18]
0x14458:	lea	rbp, [rsp + 0x80]
0x14460:	mov	ecx, 0x12
0x14465:	mov	dword ptr [rsp + 0x4c], 0
0x1446d:	lea	r8, [rbp + 8]
0x14471:	and	eax, 0x400000
0x14476:	mov	qword ptr [rsp + 0x20], rax
0x1447b:	mov	rax, qword ptr [rsp + 8]
0x14480:	setne	dl
0x14483:	mov	rdi, r8
0x14486:	mov	rsi, qword ptr [rax + 0x28]
0x1448a:	xor	eax, eax
0x1448c:	rep stosq	qword ptr [rdi], rax


0x143ff:	or	byte ptr [rbx + 0xb0], 4
0x14406:	nop	word ptr cs:[rax + rax]
0x14410:	movzx	eax, byte ptr [rbx + 0xb0]
0x14417:	mov	edx, eax
0x14419:	and	edx, 0xfffffff7
0x1441c:	cmp	dword ptr [rbx + 0xb4], 1
0x14423:	mov	byte ptr [rbx + 0xb0], dl
0x14429:	jle	0x1443e


0x1448c:	rep stosq	qword ptr [rdi], rax


0x1448f:	mov	rax, qword ptr [rsp + 0x10]
0x14494:	mov	rdi, qword ptr [rsp]
0x14498:	test	rsi, rsi
0x1449b:	mov	byte ptr [rsp + 0x108], dl
0x144a2:	mov	ecx, dword ptr [rbx + 0xb4]
0x144a8:	setne	r12b
0x144ac:	mov	qword ptr [rsp + 0xf8], rsi
0x144b4:	mov	qword ptr [rsp + 0x80], rax
0x144bc:	movzx	eax, byte ptr [rbx + 0xb0]
0x144c3:	or	r12d, edx
0x144c6:	mov	qword ptr [rsp + 0xd8], rdi
0x144ce:	mov	qword ptr [rsp + 0xd0], rdi
0x144d6:	mov	esi, r12d
0x144d9:	mov	byte ptr [rsp + 0x10b], r12b
0x144e1:	mov	dword ptr [rsp + 0x110], ecx
0x144e8:	mov	qword ptr [rsp + 0xe8], rdi
0x144f0:	mov	qword ptr [rsp + 0xe0], rdi
0x144f8:	mov	edx, eax
0x144fa:	shr	al, 3
0x144fd:	shr	dl, 2
0x14500:	and	eax, 1
0x14503:	and	edx, 1
0x14506:	test	rdi, rdi
0x14509:	mov	byte ptr [rsp + 0x10a], al
0x14510:	mov	byte ptr [rsp + 0x109], dl
0x14517:	jne	0x14955


0x1451d:	test	sil, sil
0x14520:	je	0x1452f


0x14955:	mov	rsi, qword ptr [rsp + 0x28]
0x1495a:	mov	rdi, rbp
0x1495d:	call	0x8080


0x1452f:	cmp	qword ptr [rsp + 0x20], 0
0x14535:	mov	rax, qword ptr [rsp + 0x10]
0x1453a:	mov	qword ptr [rsp + 0x88], rax
0x14542:	je	0x14645


0x14522:	mov	rax, qword ptr [rsp + 0x88]
0x1452a:	mov	qword ptr [rsp + 0x10], rax
0x1452f:	cmp	qword ptr [rsp + 0x20], 0
0x14535:	mov	rax, qword ptr [rsp + 0x10]
0x1453a:	mov	qword ptr [rsp + 0x88], rax
0x14542:	je	0x14645


0x14645:	cmp	ecx, 1
0x14648:	jg	0x14ffa


0x14548:	cmp	ecx, 1
0x1454b:	jle	0x1513d


0x1464e:	test	r12b, r12b
0x14651:	mov	rsi, qword ptr [rsp + 0xc0]
0x14659:	je	0x14c74


0x14ffa:	mov	rdi, rbp
0x14ffd:	call	0x8420


0x1513d:	mov	rdi, rbp
0x15140:	call	0x83b0


0x14551:	mov	rdi, rbp
0x14554:	call	0x85f0


0x14c74:	mov	qword ptr [rsp + 0xb0], rsi
0x14c7c:	mov	qword ptr [rsp + 0xb8], rsi
0x14c84:	mov	dword ptr [rsp + 0x4c], 0
0x14c8c:	jmp	0x146d8


0x1465f:	cmp	qword ptr [rsp + 0xd8], rsi
0x14667:	mov	rax, qword ptr [rsp + 0xb0]
0x1466f:	cmovle	rsi, qword ptr [rsp + 0xd8]
0x14678:	cmp	rsi, rax
0x1467b:	jg	0x1468d


0x146d8:	mov	r12, qword ptr [rsp + 8]
0x146dd:	mov	r14, qword ptr [rsp + 0x18]
0x146e2:	lea	r13, [rsp + 0x50]
0x146e7:	mov	rsi, rbp
0x146ea:	mov	rdi, r13
0x146ed:	mov	qword ptr [rsp + 0x28], r13
0x146f2:	mov	r15, qword ptr [r12]
0x146f6:	mov	rdx, r14
0x146f9:	mov	qword ptr [r12 + 0x30], 0
0x14702:	or	rdx, 0x800000
0x14709:	mov	qword ptr [r15 + 0xd8], r14
0x14710:	call	0x122d0


0x1467d:	jmp	0x146c0


0x1468d:	mov	rdx, qword ptr [rsp + 0x80]
0x14695:	mov	rcx, qword ptr [rsp + 0xf8]
0x1469d:	add	rdx, rax
0x146a0:	add	rdx, qword ptr [rsp + 0xa8]
0x146a8:	movzx	edx, byte ptr [rdx]
0x146ab:	movzx	edx, byte ptr [rcx + rdx]
0x146af:	mov	rcx, qword ptr [rsp + 0x10]
0x146b4:	mov	byte ptr [rcx + rax], dl
0x146b7:	add	rax, 1
0x146bb:	cmp	rsi, rax
0x146be:	jne	0x14680


0x146c0:	mov	qword ptr [rsp + 0xb0], rax
0x146c8:	mov	qword ptr [rsp + 0xb8], rax
0x146d0:	mov	dword ptr [rsp + 0x4c], 0
0x146d8:	mov	r12, qword ptr [rsp + 8]
0x146dd:	mov	r14, qword ptr [rsp + 0x18]
0x146e2:	lea	r13, [rsp + 0x50]
0x146e7:	mov	rsi, rbp
0x146ea:	mov	rdi, r13
0x146ed:	mov	qword ptr [rsp + 0x28], r13
0x146f2:	mov	r15, qword ptr [r12]
0x146f6:	mov	rdx, r14
0x146f9:	mov	qword ptr [r12 + 0x30], 0
0x14702:	or	rdx, 0x800000
0x14709:	mov	qword ptr [r15 + 0xd8], r14
0x14710:	call	0x122d0


0x14680:	mov	rdx, qword ptr [rsp + 0x88]
0x14688:	mov	qword ptr [rsp + 0x10], rdx
0x1468d:	mov	rdx, qword ptr [rsp + 0x80]
0x14695:	mov	rcx, qword ptr [rsp + 0xf8]
0x1469d:	add	rdx, rax
0x146a0:	add	rdx, qword ptr [rsp + 0xa8]
0x146a8:	movzx	edx, byte ptr [rdx]
0x146ab:	movzx	edx, byte ptr [rcx + rdx]
0x146af:	mov	rcx, qword ptr [rsp + 0x10]
0x146b4:	mov	byte ptr [rcx + rax], dl
0x146b7:	add	rax, 1
0x146bb:	cmp	rsi, rax
0x146be:	jne	0x14680


0x14715:	lea	r9, [rsp + 0x4c]
0x1471a:	xor	r8d, r8d
0x1471d:	mov	rcx, r14
0x14720:	mov	rdx, r13
0x14723:	mov	rsi, r12
0x14726:	mov	rdi, rbp
0x14729:	cdqe	
0x1472b:	add	qword ptr [rsp + 0xc8], rax
0x14733:	call	0x14100


0x14738:	mov	ecx, dword ptr [rsp + 0x4c]
0x1473c:	test	ecx, ecx
0x1473e:	jne	0x15167


0x14744:	lea	r13, [r15 + 0x70]
0x14748:	lea	r12, [rsp + 0x60]
0x1474d:	sub	r15, -0x80
0x14751:	xor	edx, edx
0x14753:	xor	ecx, ecx
0x14755:	mov	rsi, r15
0x14758:	mov	r8, r12
0x1475b:	mov	rdi, r13
0x1475e:	mov	qword ptr [rsp], rax
0x14762:	mov	byte ptr [rsp + 0x68], 2
0x14767:	call	0xa390


0x15167:	test	rax, rax
0x1516a:	je	0x1529b


0x1529b:	mov	rax, qword ptr [rsp + 8]
0x152a0:	mov	qword ptr [rbx + 0x68], 0
0x152a8:	mov	r13, qword ptr [rax]
0x152ab:	jmp	0x145ac


0x15170:	lea	r13, [r15 + 0x70]
0x15174:	lea	r12, [rsp + 0x60]
0x15179:	sub	r15, -0x80
0x1517d:	xor	ecx, ecx
0x1517f:	xor	edx, edx
0x15181:	mov	rsi, r15
0x15184:	mov	r8, r12
0x15187:	mov	rdi, r13
0x1518a:	mov	qword ptr [rsp], rax
0x1518e:	mov	byte ptr [rsp + 0x68], 2
0x15193:	call	0xa390


0x145ac:	mov	rdi, qword ptr [r13 + 0x70]
0x145b0:	test	rdi, rdi
0x145b3:	je	0x145c8


0x145c8:	mov	rdi, qword ptr [r13 + 0x20]
0x145cc:	mov	qword ptr [r13 + 0x70], 0
0x145d4:	mov	dword ptr [r13 + 0x80], 0xf
0x145df:	mov	qword ptr [r13 + 0x68], 0
0x145e7:	call	0x1b00


0x145c0:	test	r12, r12
0x145c3:	mov	rdi, r12
0x145c6:	jne	0x145b8


0x145b8:	mov	r12, qword ptr [rdi]
0x145bb:	call	0x1b00


0x145ec:	mov	qword ptr [r13 + 0x20], 0
0x145f4:	mov	rdi, rbp
0x145f7:	call	0x93c0


0x15198:	mov	r9, qword ptr [rsp]
0x1519c:	mov	r11, rax
0x1519f:	jmp	0x1477b


0x1477b:	mov	rcx, r11
0x1477e:	mov	rdx, r9
0x14781:	mov	r8, r12
0x14784:	mov	rsi, r15
0x14787:	mov	rdi, r13
0x1478a:	mov	qword ptr [rsp], r11
0x1478e:	mov	byte ptr [rsp + 0x68], 0x10
0x14793:	call	0xa390


0x14798:	mov	r11, qword ptr [rsp]
0x1479c:	mov	rdx, r11
0x1479f:	mov	r11, rax
0x147a2:	test	rdx, rdx
0x147a5:	mov	rcx, qword ptr [rsp + 8]
0x147aa:	sete	dl
0x147ad:	test	r11, r11
0x147b0:	sete	al
0x147b3:	or	dl, al
0x147b5:	mov	r13, qword ptr [rcx]
0x147b8:	jne	0x15152


0x147be:	mov	r15, qword ptr [r13 + 8]
0x147c2:	mov	qword ptr [rbx + 0x68], r11
0x147c6:	lea	rcx, [r15*8]
0x147ce:	lea	r15, [r15 + r15*2]
0x147d2:	mov	rdi, rcx
0x147d5:	mov	qword ptr [rsp], rcx
0x147d9:	shl	r15, 3
0x147dd:	call	0x1da0


0x15152:	mov	dword ptr [rsp + 0x4c], 0xc
0x1515a:	mov	qword ptr [rbx + 0x68], 0
0x15162:	jmp	0x145ac


0x147e2:	mov	rcx, qword ptr [rsp]
0x147e6:	mov	qword ptr [r13 + 0x18], rax
0x147ea:	mov	qword ptr [rsp + 0x18], rax
0x147ef:	mov	rdi, rcx
0x147f2:	call	0x1da0


0x147f7:	mov	rdi, r15
0x147fa:	mov	qword ptr [r13 + 0x20], rax
0x147fe:	mov	qword ptr [rsp + 0x10], rax
0x14803:	call	0x1da0


0x14808:	mov	rdi, r15
0x1480b:	mov	qword ptr [r13 + 0x28], rax
0x1480f:	mov	qword ptr [rsp], rax
0x14813:	call	0x1da0


0x14818:	mov	rdx, qword ptr [rsp + 0x18]
0x1481d:	mov	qword ptr [r13 + 0x30], rax
0x14821:	mov	rsi, qword ptr [rsp]
0x14825:	mov	rcx, qword ptr [rsp + 0x10]
0x1482a:	test	rdx, rdx
0x1482d:	je	0x14fed


0x14fed:	mov	dword ptr [rsp + 0x4c], 0xc
0x14ff5:	jmp	0x145ac


0x14833:	test	rcx, rcx
0x14836:	je	0x14fed


0x1483c:	test	rsi, rsi
0x1483f:	je	0x14fed


0x14845:	test	rax, rax
0x14848:	je	0x14fed


0x1484e:	mov	rax, qword ptr [rsp + 8]
0x14853:	mov	r15, qword ptr [rax + 0x30]
0x14857:	lea	rdi, [r15*8]
0x1485f:	call	0x1da0


0x14864:	test	rax, rax
0x14867:	mov	qword ptr [r13 + 0xe0], rax
0x1486e:	je	0x148dd


0x148dd:	mov	rdi, qword ptr [r13 + 0x68]
0x148e1:	mov	rdx, qword ptr [rsp + 8]
0x148e6:	lea	rsi, [rip - 0xa15d]
0x148ed:	call	0x7fb0


0x14870:	test	r15, r15
0x14873:	je	0x1488d


0x1488d:	mov	rdi, qword ptr [r13 + 0x68]
0x14891:	lea	rsi, [rip - 0xb008]
0x14898:	mov	rdx, r13
0x1489b:	call	0x8020


0x14875:	xor	edx, edx
0x14877:	nop	word ptr [rax + rax]
0x14880:	mov	qword ptr [rax + rdx*8], rdx
0x14884:	add	rdx, 1
0x14888:	cmp	rdx, r15
0x1488b:	jne	0x14880


0x14880:	mov	qword ptr [rax + rdx*8], rdx
0x14884:	add	rdx, 1
0x14888:	cmp	rdx, r15
0x1488b:	jne	0x14880


0x1476c:	mov	r9, qword ptr [rsp]
0x14770:	mov	r11, rax
0x14773:	mov	rdx, rax
0x14776:	test	r9, r9
0x14779:	je	0x147a2


0x147a2:	test	rdx, rdx
0x147a5:	mov	rcx, qword ptr [rsp + 8]
0x147aa:	sete	dl
0x147ad:	test	r11, r11
0x147b0:	sete	al
0x147b3:	or	dl, al
0x147b5:	mov	r13, qword ptr [rcx]
0x147b8:	jne	0x15152


0x14559:	test	eax, eax
0x1455b:	jne	0x145a0


0x1455d:	mov	rax, qword ptr [rsp]
0x14561:	cmp	rax, qword ptr [rsp + 0xb8]
0x14569:	jle	0x15120


0x145a0:	mov	dword ptr [rsp + 0x4c], eax
0x145a4:	mov	rax, qword ptr [rsp + 8]
0x145a9:	mov	r13, qword ptr [rax]
0x145ac:	mov	rdi, qword ptr [r13 + 0x70]
0x145b0:	test	rdi, rdi
0x145b3:	je	0x145c8


0x15120:	mov	dword ptr [rsp + 0x4c], 0
0x15128:	jmp	0x146d8


0x1456f:	movsxd	rax, dword ptr [rbx + 0xb4]
0x14576:	mov	rsi, qword ptr [rsp + 0xc0]
0x1457e:	add	rax, qword ptr [rsp + 0xb0]
0x14586:	cmp	rsi, rax
0x14589:	jg	0x15120


0x1458f:	add	rsi, rsi
0x14592:	mov	rdi, rbp
0x14595:	call	0x8080


0x15145:	mov	dword ptr [rsp + 0x4c], 0
0x1514d:	jmp	0x146d8


0x15002:	mov	dword ptr [rsp + 0x4c], 0
0x1500a:	jmp	0x146d8


0x1459a:	test	eax, eax
0x1459c:	je	0x14551


0x14962:	test	eax, eax
0x14964:	jne	0x145a0


0x1496a:	movzx	esi, byte ptr [rsp + 0x10b]
0x14972:	mov	ecx, dword ptr [rbx + 0xb4]
0x14978:	test	sil, sil
0x1497b:	je	0x1452f


0x14981:	jmp	0x14522


0x149a2:	test	rax, rax
0x149a5:	mov	qword ptr [rbx + 0x78], rax
0x149a9:	je	0x14986


0x149ab:	xor	r12d, r12d
0x149ae:	xor	ebp, ebp
0x149b0:	mov	r13d, 1
0x149b6:	xor	r15d, r15d
0x149b9:	nop	dword ptr [rax]
0x149c0:	lea	r14d, [rbp + r15]
0x149c5:	mov	edi, r14d
0x149c8:	call	0x1e40


0x1e40:	jmp	qword ptr [rip + 0x21a0fa]




0x15ebe:	test	rax, rax
0x15ec1:	je	0x15ee0


0x15ee0:	lea	rax, [rip + 0x1fb1]
0x15ee7:	add	rsp, 8
0x15eeb:	ret	


0x15ec3:	cmp	byte ptr [rax], 0
0x15ec6:	lea	rdx, [rip + 0x1fcb]
0x15ecd:	cmove	rax, rdx
0x15ed1:	add	rsp, 8
0x15ed5:	ret	


0x4600:	movzx	edx, byte ptr [rax]
0x4603:	and	edx, 0xffffffdf
0x4606:	cmp	dl, 0x55
0x4609:	je	0x4680


0x4680:	movzx	edx, byte ptr [rax + 1]
0x4684:	and	edx, 0xffffffdf
0x4687:	cmp	dl, 0x54
0x468a:	jne	0x4610


0x460b:	cmp	dl, 0x47
0x460e:	je	0x4630


0x468c:	movzx	edx, byte ptr [rax + 2]
0x4690:	and	edx, 0xffffffdf
0x4693:	cmp	dl, 0x46
0x4696:	jne	0x4610


0x4610:	lea	rax, [rip + 0x125a4]
0x4617:	lea	rdx, [rip + 0x1259f]
0x461e:	cmp	ebx, 9
0x4621:	cmovne	rax, rdx
0x4625:	add	rsp, 8
0x4629:	pop	rbx
0x462a:	pop	rbp
0x462b:	ret	


0x4630:	movzx	edx, byte ptr [rax + 1]
0x4634:	and	edx, 0xffffffdf
0x4637:	cmp	dl, 0x42
0x463a:	jne	0x4610


0x469c:	cmp	byte ptr [rax + 3], 0x2d
0x46a0:	jne	0x4610


0x463c:	cmp	byte ptr [rax + 2], 0x31
0x4640:	jne	0x4610


0x46a6:	cmp	byte ptr [rax + 4], 0x38
0x46aa:	jne	0x4610


0x4642:	cmp	byte ptr [rax + 3], 0x38
0x4646:	jne	0x4610


0x46b0:	cmp	byte ptr [rax + 5], 0
0x46b4:	jne	0x4610


0x4648:	cmp	byte ptr [rax + 4], 0x30
0x464c:	jne	0x4610


0x46ba:	cmp	byte ptr [rbp], 0x60
0x46be:	lea	rax, [rip + 0x124e7]
0x46c5:	lea	rdx, [rip + 0x124e4]
0x46cc:	cmovne	rax, rdx
0x46d0:	add	rsp, 8
0x46d4:	pop	rbx
0x46d5:	pop	rbp
0x46d6:	ret	


0x464e:	cmp	byte ptr [rax + 5], 0x33
0x4652:	jne	0x4610


0x4654:	cmp	byte ptr [rax + 6], 0x30
0x4658:	jne	0x4610


0x465a:	cmp	byte ptr [rax + 7], 0
0x465e:	jne	0x4610


0x4660:	cmp	byte ptr [rbp], 0x60
0x4664:	lea	rax, [rip + 0x12549]
0x466b:	lea	rdx, [rip + 0x12546]
0x4672:	cmovne	rax, rdx
0x4676:	add	rsp, 8
0x467a:	pop	rbx
0x467b:	pop	rbp
0x467c:	ret	


0x149cd:	cmp	eax, -1
0x149d0:	je	0x149e5


0x149e5:	test	r14d, 0xffffff80
0x149ec:	jne	0x149fa


0x149d2:	mov	rsi, qword ptr [rbx + 0x78]
0x149d6:	mov	rdi, r13
0x149d9:	mov	ecx, r15d
0x149dc:	shl	rdi, cl
0x149df:	add	rsi, r12
0x149e2:	or	qword ptr [rsi], rdi
0x149e5:	test	r14d, 0xffffff80
0x149ec:	jne	0x149fa


0x149ee:	cmp	eax, r14d
0x149f1:	je	0x149fa


0x149fa:	add	r15, 1
0x149fe:	cmp	r15, 0x40
0x14a02:	jne	0x149c0


0x149f3:	or	byte ptr [rbx + 0xb0], 8
0x149fa:	add	r15, 1
0x149fe:	cmp	r15, 0x40
0x14a02:	jne	0x149c0


0x14a04:	add	ebp, 0x40
0x14a07:	add	r12, 8
0x14a0b:	cmp	ebp, 0x100
0x14a11:	jne	0x149b6


0x149c0:	lea	r14d, [rbp + r15]
0x149c5:	mov	edi, r14d
0x149c8:	call	0x1e40


0x14a13:	jmp	0x1443e


0x149b6:	xor	r15d, r15d
0x149b9:	nop	dword ptr [rax]
0x149c0:	lea	r14d, [rbp + r15]
0x149c5:	mov	edi, r14d
0x149c8:	call	0x1e40


0x20be:	lea	rdi, [rip + 0x13fd5]
0x20c5:	call	0x1ba0


0x1ba0:	jmp	qword ptr [rip + 0x21a24a]




0x3a79:	test	rax, rax
0x3a7c:	mov	r15, rax
0x3a7f:	jne	0x3a40


0x3a81:	test	rbp, rbp
0x3a84:	je	0x3aaa


0x3a40:	mov	r13, rax
0x3a43:	mov	rsi, qword ptr [rsp + 8]
0x3a48:	mov	rdx, r12
0x3a4b:	sub	r13, r12
0x3a4e:	lea	rdi, [rbx + 0x30]
0x3a52:	lea	r12, [r15 + 1]
0x3a56:	add	r13, 1
0x3a5a:	add	r14, 1
0x3a5e:	mov	rcx, r13
0x3a61:	sub	rbp, r13
0x3a64:	call	0x36d0


0x3aaa:	mov	rax, qword ptr [rip + 0x218757]
0x3ab1:	mov	qword ptr [rbx + 0x20], r14
0x3ab5:	lea	rdx, [rax + 1]
0x3ab9:	add	rax, r14
0x3abc:	test	r14, r14
0x3abf:	mov	qword ptr [rip + 0x218742], rax
0x3ac6:	mov	qword ptr [rbx + 0x10], rdx
0x3aca:	mov	qword ptr [rbx + 0x18], rdx
0x3ace:	jne	0x3bb0


0x3a86:	cmp	byte ptr [rip + 0x21876b], 0
0x3a8d:	je	0x3c00


0x3bb0:	mov	rax, qword ptr [rbx + 0x30]
0x3bb4:	mov	qword ptr [rbx + 0x40], 0
0x3bbc:	mov	qword ptr [rbx + 0x38], rax
0x3bc0:	mov	rax, qword ptr [rip + 0x218659]
0x3bc7:	test	rax, rax
0x3bca:	jne	0x3bdb


0x3c00:	mov	rdi, r12
0x3c03:	mov	rsi, rbp
0x3c06:	call	0x6b10


0x3a93:	lea	rsi, [rbx + 0x38]
0x3a97:	lea	rdi, [rbx + 0x30]
0x3a9b:	mov	rcx, rbp
0x3a9e:	mov	rdx, r12
0x3aa1:	add	r14, 1
0x3aa5:	call	0x36d0


0x3bcc:	jmp	0x3c60


0x3bdb:	mov	rdx, qword ptr [rax + 0x40]
0x3bdf:	test	rdx, rdx
0x3be2:	jne	0x3bd8


0x3c60:	mov	qword ptr [rip + 0x2185b9], rbx
0x3c67:	add	rsp, 0x18
0x3c6b:	mov	eax, 1
0x3c70:	pop	rbx
0x3c71:	pop	rbp
0x3c72:	pop	r12
0x3c74:	pop	r13
0x3c76:	pop	r14
0x3c78:	pop	r15
0x3c7a:	ret	


0x3be4:	mov	qword ptr [rax + 0x40], rbx
0x3be8:	add	rsp, 0x18
0x3bec:	mov	eax, 1
0x3bf1:	pop	rbx
0x3bf2:	pop	rbp
0x3bf3:	pop	r12
0x3bf5:	pop	r13
0x3bf7:	pop	r14
0x3bf9:	pop	r15
0x3bfb:	ret	


0x3bd8:	mov	rax, rdx
0x3bdb:	mov	rdx, qword ptr [rax + 0x40]
0x3bdf:	test	rdx, rdx
0x3be2:	jne	0x3bd8


0xd936:	mov	rdi, qword ptr [rsp + 8]
0xd93b:	mov	eax, dword ptr [rsp]
0xd93e:	mov	dword ptr [rdi], eax
0xd940:	jmp	0xd8a2


0xd8d8:	jmp	0xd8a2


0x314e:	pop	rbx
0x314f:	mov	rax, qword ptr [rip + 0x21909a]
0x3156:	pop	rbp
0x3157:	pop	r12
0x3159:	ret	


0x30fc:	pop	rbx
0x30fd:	mov	rax, qword ptr [rip + 0x2190ec]
0x3104:	pop	rbp
0x3105:	pop	r12
0x3107:	ret	


0xaecc:	jmp	0xaeb8


0x9501:	cmp	qword ptr [rbp], rbx
0x9505:	jg	0x94f0


0x94f0:	mov	rax, qword ptr [rbp + 0x10]
0x94f4:	mov	rdi, qword ptr [rax + rbx*8]
0x94f8:	add	rbx, 1
0x94fc:	call	0x9360


0xf01a:	jmp	0xefdc


0xedac:	xor	eax, eax
0xedae:	jmp	0xef59


0xed44:	mov	eax, 0xc
0xed49:	jmp	0xef59


0x8875:	mov	edx, dword ptr [rsp + 0x18]
0x8879:	mov	r12d, eax
0x887c:	cmp	edx, eax
0x887e:	je	0x88f8


0x88f8:	mov	rsi, qword ptr [r14 + 0x28]
0x88fc:	mov	rdi, qword ptr [r14 + 8]
0x8900:	mov	rdx, rbp
0x8903:	add	rsi, r15
0x8906:	add	rsi, qword ptr [r14]
0x8909:	add	rdi, r15
0x890c:	call	0x1d70


0x8880:	mov	rdx, qword ptr [rsp + 0x38]
0x8885:	mov	rdi, qword ptr [rsp + 0x28]
0x888a:	mov	esi, eax
0x888c:	call	0x1db0


0x8891:	cmp	rbp, rax
0x8894:	jne	0x8a08


0x889a:	mov	rdi, qword ptr [r14 + 8]
0x889e:	mov	rsi, qword ptr [rsp + 0x28]
0x88a3:	mov	rdx, rbp
0x88a6:	add	rdi, r15
0x88a9:	call	0x1d70


0x8a08:	mov	r13, r15
0x8a0b:	jmp	0x869e


0x869e:	mov	rdx, qword ptr [r14 + 0x78]
0x86a2:	mov	rax, qword ptr [r14 + 0x20]
0x86a6:	test	rdx, rdx
0x86a9:	mov	qword ptr [rsp + 0x48], rax
0x86ae:	jne	0x89b9


0x88ae:	add	r15, 1
0x88b2:	mov	rdx, qword ptr [r14 + 0x10]
0x88b6:	lea	rax, [r13*4]
0x88be:	lea	rcx, [r15 + rbp - 1]
0x88c3:	cmp	r15, rcx
0x88c6:	mov	dword ptr [rdx + r13*4], r12d
0x88ca:	jge	0x88ea


0x88cc:	lea	rax, [rdx + rax + 4]
0x88d1:	lea	rdx, [rdx + rcx*4]
0x88d5:	nop	dword ptr [rax]
0x88d8:	mov	dword ptr [rax], 0xffffffff
0x88de:	add	rax, 4
0x88e2:	cmp	rdx, rax
0x88e5:	jne	0x88d8


0x88e7:	mov	r15, rcx
0x88ea:	cmp	rbx, r15
0x88ed:	jg	0x8800


0x88d8:	mov	dword ptr [rax], 0xffffffff
0x88de:	add	rax, 4
0x88e2:	cmp	rdx, rax
0x88e5:	jne	0x88d8


0x8911:	jmp	0x88ae


0x8701:	mov	edx, dword ptr [rsp + 0x10]
0x8705:	mov	r12d, eax
0x8708:	mov	qword ptr [rsp + 8], r15
0x870d:	cmp	edx, eax
0x870f:	je	0x8a10


0x8a10:	mov	rdi, qword ptr [r14 + 8]
0x8a14:	mov	rsi, qword ptr [rsp + 0x18]
0x8a19:	mov	rdx, rbp
0x8a1c:	add	rdi, r15
0x8a1f:	call	0x1d70


0x8715:	lea	rcx, [rsp + 0x50]
0x871a:	lea	rdx, [rsp + 0x48]
0x871f:	mov	esi, eax
0x8721:	mov	rdi, rcx
0x8724:	mov	qword ptr [rsp + 0x10], rcx
0x8729:	call	0x1db0


0x872e:	cmp	rbp, rax
0x8731:	mov	r11, rax
0x8734:	mov	rcx, qword ptr [rsp + 0x10]
0x8739:	jne	0x8ac6


0x873f:	mov	rdi, qword ptr [r14 + 8]
0x8743:	mov	rdx, rbp
0x8746:	mov	rsi, rcx
0x8749:	add	rdi, r15
0x874c:	call	0x1d70


0x8ac6:	cmp	rax, -1
0x8aca:	je	0x8a10


0x8ad0:	lea	rax, [rax + r15]
0x8ad4:	mov	rsi, rax
0x8ad7:	mov	qword ptr [rsp + 8], rax
0x8adc:	mov	rax, qword ptr [r14 + 0x40]
0x8ae0:	cmp	rsi, rax
0x8ae3:	ja	0x8ab8


0x8ae5:	cmp	qword ptr [r14 + 0x18], 0
0x8aea:	je	0x8ba8


0x8ba8:	lea	rdi, [rax*8]
0x8bb0:	mov	qword ptr [rsp + 0x18], rcx
0x8bb5:	mov	qword ptr [rsp + 0x10], r11
0x8bba:	call	0x1da0


0x8af0:	cmp	byte ptr [r14 + 0x8c], 0
0x8af8:	jne	0x8b1a


0x8afa:	test	r15, r15
0x8afd:	je	0x8b12


0x8b1a:	mov	rdi, qword ptr [r14 + 8]
0x8b1e:	mov	rsi, rcx
0x8b21:	mov	rdx, r11
0x8b24:	mov	qword ptr [rsp + 0x10], r11
0x8b29:	add	rdi, r15
0x8b2c:	call	0x1d70


0x8b12:	mov	byte ptr [r14 + 0x8c], 1
0x8b1a:	mov	rdi, qword ptr [r14 + 8]
0x8b1e:	mov	rsi, rcx
0x8b21:	mov	rdx, r11
0x8b24:	mov	qword ptr [rsp + 0x10], r11
0x8b29:	add	rdi, r15
0x8b2c:	call	0x1d70


0x8aff:	mov	rdx, qword ptr [r14 + 0x18]
0x8b03:	xor	eax, eax
0x8b05:	mov	qword ptr [rdx + rax*8], rax
0x8b09:	add	rax, 1
0x8b0d:	cmp	rax, r15
0x8b10:	jne	0x8b05


0x8b05:	mov	qword ptr [rdx + rax*8], rax
0x8b09:	add	rax, 1
0x8b0d:	cmp	rax, r15
0x8b10:	jne	0x8b05


0x8bbf:	test	rax, rax
0x8bc2:	mov	qword ptr [r14 + 0x18], rax
0x8bc6:	mov	r11, qword ptr [rsp + 0x10]
0x8bcb:	mov	rcx, qword ptr [rsp + 0x18]
0x8bd0:	jne	0x8af0


0x8bd6:	mov	eax, 0xc
0x8bdb:	jmp	0x864f


0x8b31:	mov	rax, qword ptr [r14 + 0x10]
0x8b35:	mov	r11, qword ptr [rsp + 0x10]
0x8b3a:	lea	rcx, [rax + r15*4]
0x8b3e:	mov	rax, qword ptr [r14 + 0x18]
0x8b42:	cmp	r11, 1
0x8b46:	mov	dword ptr [rcx], r12d
0x8b49:	lea	rsi, [rax + r15*8]
0x8b4d:	mov	qword ptr [rsi], r13
0x8b50:	jbe	0x8b7a


0x8b7a:	mov	rbx, qword ptr [r14 + 0x58]
0x8b7e:	sub	r11, rbp
0x8b81:	add	rbx, r11
0x8b84:	cmp	r13, qword ptr [r14 + 0x60]
0x8b88:	mov	qword ptr [r14 + 0x58], rbx
0x8b8c:	jge	0x8b92


0x8b52:	mov	eax, 1
0x8b57:	mov	rdx, qword ptr [rsp + 0x20]
0x8b5c:	cmp	rax, rbp
0x8b5f:	cmovb	rdx, rax
0x8b63:	add	rdx, r13
0x8b66:	mov	qword ptr [rsi + rax*8], rdx
0x8b6a:	mov	dword ptr [rcx + rax*4], 0xffffffff
0x8b71:	add	rax, 1
0x8b75:	cmp	rax, r11
0x8b78:	jne	0x8b57


0x8b8e:	add	qword ptr [r14 + 0x68], r11
0x8b92:	cmp	qword ptr [r14 + 0x40], rbx
0x8b96:	mov	r15, qword ptr [rsp + 8]
0x8b9b:	cmovle	rbx, qword ptr [r14 + 0x40]
0x8ba0:	add	r13, rbp
0x8ba3:	jmp	0x8640


0x8b92:	cmp	qword ptr [r14 + 0x40], rbx
0x8b96:	mov	r15, qword ptr [rsp + 8]
0x8b9b:	cmovle	rbx, qword ptr [r14 + 0x40]
0x8ba0:	add	r13, rbp
0x8ba3:	jmp	0x8640


0x8b57:	mov	rdx, qword ptr [rsp + 0x20]
0x8b5c:	cmp	rax, rbp
0x8b5f:	cmovb	rdx, rax
0x8b63:	add	rdx, r13
0x8b66:	mov	qword ptr [rsi + rax*8], rdx
0x8b6a:	mov	dword ptr [rcx + rax*4], 0xffffffff
0x8b71:	add	rax, 1
0x8b75:	cmp	rax, r11
0x8b78:	jne	0x8b57


0x8751:	cmp	byte ptr [r14 + 0x8c], 0
0x8759:	lea	rax, [rbp + r13]
0x875e:	jne	0x8a95


0x8764:	add	r15, 1
0x8768:	mov	rsi, qword ptr [rsp + 8]
0x876d:	mov	rdx, qword ptr [r14 + 0x10]
0x8771:	lea	rcx, [r15 + rbp - 1]
0x8776:	mov	r13, rax
0x8779:	cmp	r15, rcx
0x877c:	lea	rax, [rsi*4]
0x8784:	mov	dword ptr [rdx + rsi*4], r12d
0x8788:	jge	0x8640


0x8a95:	mov	rdx, qword ptr [r14 + 0x18]
0x8a99:	mov	rcx, r15
0x8a9c:	mov	r10, r13
0x8a9f:	sub	rcx, r13
0x8aa2:	lea	rdx, [rdx + rcx*8]
0x8aa6:	mov	qword ptr [rdx + r10*8], r10
0x8aaa:	add	r10, 1
0x8aae:	cmp	rax, r10
0x8ab1:	jne	0x8aa6


0x878e:	lea	rax, [rdx + rax + 4]
0x8793:	lea	rdx, [rdx + rcx*4]
0x8797:	nop	word ptr [rax + rax]
0x87a0:	mov	dword ptr [rax], 0xffffffff
0x87a6:	add	rax, 4
0x87aa:	cmp	rdx, rax
0x87ad:	jne	0x87a0


0x8ab3:	jmp	0x8764


0x8aa6:	mov	qword ptr [rdx + r10*8], r10
0x8aaa:	add	r10, 1
0x8aae:	cmp	rax, r10
0x8ab1:	jne	0x8aa6


0x87af:	mov	r15, rcx
0x87b2:	jmp	0x8640


0x87a0:	mov	dword ptr [rax], 0xffffffff
0x87a6:	add	rax, 4
0x87aa:	cmp	rdx, rax
0x87ad:	jne	0x87a0


0x8a24:	jmp	0x8751


0x77ee:	cmp	rax, -1
0x77f2:	jne	0x77ac


0x77f4:	mov	rdi, rbx
0x77f7:	pop	rbx
0x77f8:	pop	rbp
0x77f9:	pop	r12
0x77fb:	jmp	0x1bd0


0x7b10:	cmp	rax, -1
0x7b14:	je	0x7b22


0x7b22:	pop	rbx
0x7b23:	pop	rbp
0x7b24:	pop	r12
0x7b26:	ret	


0x7b16:	and	dword ptr [rbx], 0xffffffef
0x7b19:	mov	qword ptr [rbx + 0x90], rax
0x7b20:	xor	eax, eax
0x7b22:	pop	rbx
0x7b23:	pop	rbp
0x7b24:	pop	r12
0x7b26:	ret	


0x4497:	test	eax, eax
0x4499:	mov	r12d, eax
0x449c:	js	0x44d8


0x44d8:	call	0x1b20


0x449e:	mov	rdi, rbx
0x44a1:	call	0x7790


0x44dd:	mov	r12d, dword ptr [rax]
0x44e0:	mov	rbp, rax
0x44e3:	mov	rdi, rbx
0x44e6:	call	0x7790


0x68ba:	lea	rsi, [rip + 0x1084c]
0x68c1:	mov	edx, 5
0x68c6:	xor	edi, edi
0x68c8:	call	0x1bf0


0x68cd:	lea	rcx, [rip + 0xfeac]
0x68d4:	lea	rdx, [rip + 0xf7bb]
0x68db:	mov	rsi, rax
0x68de:	mov	edi, 1
0x68e3:	xor	eax, eax
0x68e5:	call	0x1e30


0x68ea:	mov	rbx, qword ptr [rip + 0x2157b7]
0x68f1:	lea	rsi, [rip + 0x10a48]
0x68f8:	xor	edi, edi
0x68fa:	mov	edx, 5
0x68ff:	call	0x1bf0


0x6904:	mov	rsi, rbx
0x6907:	mov	rdi, rax
0x690a:	pop	rbx
0x690b:	jmp	0x1d20


0x3f8d:	mov	rbx, qword ptr [rip + 0x218114]
0x3f94:	lea	rsi, [rip + 0x122ed]
0x3f9b:	mov	edx, 5
0x3fa0:	xor	edi, edi
0x3fa2:	call	0x1bf0


0x3fa7:	mov	rsi, rbx
0x3faa:	mov	rdi, rax
0x3fad:	call	0x1d20


0x3bab:	call	0x3220


0x383c:	call	0x3220


0x3f04:	nop	
0x3f06:	nop	word ptr cs:[rax + rax]


0x3fb2:	mov	rbx, qword ptr [rip + 0x2180ef]
0x3fb9:	lea	rsi, [rip + 0x12350]
0x3fc0:	mov	edx, 5
0x3fc5:	xor	edi, edi
0x3fc7:	call	0x1bf0


0x3fcc:	mov	rsi, rbx
0x3fcf:	mov	rdi, rax
0x3fd2:	call	0x1d20


0x3fd7:	mov	rbx, qword ptr [rip + 0x2180ca]
0x3fde:	lea	rsi, [rip + 0x12353]
0x3fe5:	mov	edx, 5
0x3fea:	xor	edi, edi
0x3fec:	call	0x1bf0


0x3ff1:	mov	rsi, rbx
0x3ff4:	mov	rdi, rax
0x3ff7:	call	0x1d20


0x3ffc:	mov	rbx, qword ptr [rip + 0x2180a5]
0x4003:	lea	rsi, [rip + 0x1237e]
0x400a:	mov	edx, 5
0x400f:	xor	edi, edi
0x4011:	call	0x1bf0


0x4016:	mov	rsi, rbx
0x4019:	mov	rdi, rax
0x401c:	call	0x1d20


0x4021:	mov	rbx, qword ptr [rip + 0x218080]
0x4028:	lea	rsi, [rip + 0x12419]
0x402f:	mov	edx, 5
0x4034:	xor	edi, edi
0x4036:	call	0x1bf0


0x403b:	mov	rsi, rbx
0x403e:	mov	rdi, rax
0x4041:	call	0x1d20


0x4046:	mov	rbx, qword ptr [rip + 0x21805b]
0x404d:	lea	rsi, [rip + 0x1243c]
0x4054:	mov	edx, 5
0x4059:	xor	edi, edi
0x405b:	call	0x1bf0


0x4060:	mov	rsi, rbx
0x4063:	mov	rdi, rax
0x4066:	call	0x1d20


0x406b:	mov	rbx, qword ptr [rip + 0x218036]
0x4072:	lea	rsi, [rip + 0x124df]
0x4079:	mov	edx, 5
0x407e:	xor	edi, edi
0x4080:	call	0x1bf0


0x4085:	mov	rsi, rbx
0x4088:	mov	rdi, rax
0x408b:	call	0x1d20


0x4090:	mov	rbx, qword ptr [rip + 0x218011]
0x4097:	lea	rsi, [rip + 0x124ea]
0x409e:	mov	edx, 5
0x40a3:	xor	edi, edi
0x40a5:	call	0x1bf0


0x40aa:	mov	rsi, rbx
0x40ad:	mov	rdi, rax
0x40b0:	call	0x1d20


0x40b5:	mov	rbx, qword ptr [rip + 0x217fec]
0x40bc:	lea	rsi, [rip + 0x124fd]
0x40c3:	mov	edx, 5
0x40c8:	xor	edi, edi
0x40ca:	call	0x1bf0


0x40cf:	mov	rsi, rbx
0x40d2:	mov	rdi, rax
0x40d5:	lea	rbx, [rip + 0x11f3d]
0x40dc:	call	0x1d20


0x40e1:	lea	rax, [rip + 0x11f38]
0x40e8:	lea	rcx, [rip + 0x11f72]
0x40ef:	mov	qword ptr [rsp + 0x60], 0
0x40f8:	mov	qword ptr [rsp + 0x68], 0
0x4101:	mov	rdx, rsp
0x4104:	mov	qword ptr [rsp], rax
0x4108:	lea	rax, [rip + 0x11f13]
0x410f:	mov	qword ptr [rsp + 0x30], rcx
0x4114:	lea	rcx, [rip + 0x11f50]
0x411b:	mov	qword ptr [rsp + 8], rax
0x4120:	lea	rax, [rip + 0x11f73]
0x4127:	mov	qword ptr [rsp + 0x40], rcx
0x412c:	lea	rcx, [rip + 0x11f42]
0x4133:	mov	qword ptr [rsp + 0x10], rax
0x4138:	lea	rax, [rip + 0x11ef3]
0x413f:	mov	qword ptr [rsp + 0x50], rcx
0x4144:	mov	qword ptr [rsp + 0x18], rax
0x4149:	lea	rax, [rip + 0x11ef8]
0x4150:	mov	qword ptr [rsp + 0x20], rax
0x4155:	lea	rax, [rip + 0x11ef6]
0x415c:	mov	qword ptr [rsp + 0x28], rax
0x4161:	mov	qword ptr [rsp + 0x38], rax
0x4166:	mov	qword ptr [rsp + 0x48], rax
0x416b:	mov	qword ptr [rsp + 0x58], rax
0x4170:	add	rdx, 0x10
0x4174:	mov	rdi, qword ptr [rdx]
0x4177:	test	rdi, rdi
0x417a:	je	0x418f


0x418f:	mov	r12, qword ptr [rdx + 8]
0x4193:	xor	edi, edi
0x4195:	mov	edx, 5
0x419a:	lea	rsi, [rip + 0x11ede]
0x41a1:	test	r12, r12
0x41a4:	je	0x426b


0x417c:	mov	ecx, 7
0x4181:	mov	rsi, rbx
0x4184:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x426b:	call	0x1bf0


0x41aa:	call	0x1bf0


0x4184:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4186:	seta	al
0x4189:	sbb	al, 0
0x418b:	test	al, al
0x418d:	jne	0x4170


0x4170:	add	rdx, 0x10
0x4174:	mov	rdi, qword ptr [rdx]
0x4177:	test	rdi, rdi
0x417a:	je	0x418f


0x41af:	lea	rcx, [rip + 0x125ca]
0x41b6:	lea	rdx, [rip + 0x11ed9]
0x41bd:	mov	rsi, rax
0x41c0:	mov	edi, 1
0x41c5:	xor	eax, eax
0x41c7:	call	0x1e30


0x41cc:	xor	esi, esi
0x41ce:	mov	edi, 5
0x41d3:	call	0x1e20


0x41d8:	test	rax, rax
0x41db:	je	0x41f9


0x41f9:	lea	rsi, [rip + 0x11ea8]
0x4200:	xor	edi, edi
0x4202:	mov	edx, 5
0x4207:	call	0x1bf0


0x41dd:	lea	rsi, [rip + 0x11ec0]
0x41e4:	mov	edx, 3
0x41e9:	mov	rdi, rax
0x41ec:	call	0x1b40


0x1b40:	jmp	qword ptr [rip + 0x21a27a]




0x420c:	lea	rcx, [rip + 0x11e06]
0x4213:	lea	rdx, [rip + 0x12566]
0x421a:	mov	rsi, rax
0x421d:	mov	edi, 1
0x4222:	xor	eax, eax
0x4224:	call	0x1e30


0x4229:	cmp	r12, rbx
0x422c:	lea	rcx, [rip + 0x11e09]
0x4233:	lea	rbx, [rip + 0x12ea7]
0x423a:	cmove	rbx, rcx
0x423e:	lea	rsi, [rip + 0x125ab]
0x4245:	xor	edi, edi
0x4247:	mov	edx, 5
0x424c:	call	0x1bf0


0x4251:	mov	rcx, rbx
0x4254:	mov	rsi, rax
0x4257:	mov	rdx, r12
0x425a:	mov	edi, 1
0x425f:	xor	eax, eax
0x4261:	call	0x1e30


0x4266:	jmp	0x3f66


0x4270:	lea	rcx, [rip + 0x12509]
0x4277:	lea	rdx, [rip + 0x11e18]
0x427e:	mov	rsi, rax
0x4281:	mov	edi, 1
0x4286:	xor	eax, eax
0x4288:	call	0x1e30


0x428d:	xor	esi, esi
0x428f:	mov	edi, 5
0x4294:	call	0x1e20


0x4299:	test	rax, rax
0x429c:	je	0x42b6


0x42b6:	lea	rsi, [rip + 0x11deb]
0x42bd:	mov	edx, 5
0x42c2:	xor	edi, edi
0x42c4:	lea	r12, [rip + 0x11d4e]
0x42cb:	lea	rbx, [rip + 0x11d6a]
0x42d2:	call	0x1bf0


0x429e:	lea	rsi, [rip + 0x11dff]
0x42a5:	mov	edx, 3
0x42aa:	mov	rdi, rax
0x42ad:	call	0x1b40


0x42d7:	lea	rcx, [rip + 0x11d3b]
0x42de:	lea	rdx, [rip + 0x1249b]
0x42e5:	mov	rsi, rax
0x42e8:	mov	edi, 1
0x42ed:	xor	eax, eax
0x42ef:	call	0x1e30


0x42f4:	jmp	0x423e


0x423e:	lea	rsi, [rip + 0x125ab]
0x4245:	xor	edi, edi
0x4247:	mov	edx, 5
0x424c:	call	0x1bf0


0x637c:	cmp	r12, 9
0x6380:	ja	0x66c0


0x6386:	lea	rdx, [rip + 0x10ff7]
0x638d:	movsxd	rax, dword ptr [rdx + r12*4]
0x6391:	add	rax, rdx
0x6394:	jmp	rax


0x66c0:	mov	r10, qword ptr [rbx + 0x40]
0x66c4:	mov	r9, qword ptr [rbx + 0x38]
0x66c8:	mov	edx, 5
0x66cd:	mov	rax, qword ptr [rbx + 0x10]
0x66d1:	mov	r8, qword ptr [rbx + 8]
0x66d5:	lea	rsi, [rip + 0x10c24]
0x66dc:	mov	r13, qword ptr [rbx + 0x30]
0x66e0:	mov	r12, qword ptr [rbx + 0x28]
0x66e4:	mov	r15, qword ptr [rbx + 0x20]
0x66e8:	mov	r14, qword ptr [rbx + 0x18]
0x66ec:	mov	qword ptr [rsp + 0x18], r10
0x66f1:	mov	qword ptr [rsp + 0x10], r9
0x66f6:	mov	qword ptr [rsp], rax
0x66fa:	mov	qword ptr [rsp + 8], r8
0x66ff:	mov	rbx, qword ptr [rbx]
0x6702:	jmp	0x6492


0x6492:	xor	edi, edi
0x6494:	call	0x1bf0


0x6499:	mov	r10, qword ptr [rsp + 0x18]
0x649e:	push	r10
0x64a0:	jmp	0x63e4


0x63e4:	mov	r9, qword ptr [rsp + 0x18]
0x63e9:	mov	rdx, rax
0x63ec:	mov	rcx, rbx
0x63ef:	mov	esi, 1
0x63f4:	mov	rdi, rbp
0x63f7:	xor	eax, eax
0x63f9:	push	r9
0x63fb:	push	r13
0x63fd:	push	r12
0x63ff:	push	r15
0x6401:	push	r14
0x6403:	mov	r9, qword ptr [rsp + 0x30]
0x6408:	mov	r8, qword ptr [rsp + 0x38]
0x640d:	call	0x1f00


0x6412:	add	rsp, 0x30
0x6416:	add	rsp, 0x28
0x641a:	pop	rbx
0x641b:	pop	rbp
0x641c:	pop	r12
0x641e:	pop	r13
0x6420:	pop	r14
0x6422:	pop	r15
0x6424:	ret	


0x3c0b:	mov	rdi, qword ptr [rip + 0x218606]
0x3c12:	mov	r12, rax
0x3c15:	call	0x1b00


0x3c1a:	mov	qword ptr [rip + 0x2185f7], r12
0x3c21:	mov	qword ptr [rip + 0x2185e8], rbp
0x3c28:	jmp	0x3aaa


0x5afd:	mov	dword ptr [rbp], r12d
0x5b01:	pop	rbx
0x5b02:	pop	rbp
0x5b03:	pop	r12
0x5b05:	ret	


0x7403:	mov	rcx, qword ptr [r15]
0x7406:	mov	rbx, rax
0x7409:	cmp	rcx, rbp
0x740c:	je	0x7438


0x7438:	test	r13, r13
0x743b:	mov	qword ptr [rsp + 8], rcx
0x7440:	jne	0x7480


0x740e:	mov	eax, dword ptr [r12]
0x7412:	test	eax, eax
0x7414:	je	0x7478


0x7480:	movzx	r12d, byte ptr [rbp]
0x7485:	test	r12b, r12b
0x7488:	je	0x7448


0x7478:	xor	ebp, ebp
0x747a:	jmp	0x7420


0x7416:	cmp	eax, 0x22
0x7419:	mov	ebp, 1
0x741e:	jne	0x7448


0x748a:	movsx	esi, r12b
0x748e:	mov	rdi, r13
0x7491:	xor	ebp, ebp
0x7493:	call	0x1c60


0x7420:	test	r13, r13
0x7423:	je	0x742e


0x1c60:	jmp	qword ptr [rip + 0x21a1ea]


0x742e:	mov	qword ptr [r14], rbx
0x7431:	jmp	0x744d


0x7425:	movzx	r12d, byte ptr [rcx]
0x7429:	test	r12b, r12b
0x742c:	jne	0x74a7




0x744d:	mov	rdi, qword ptr [rsp + 0x18]
0x7452:	xor	rdi, qword ptr fs:[0x28]
0x745b:	mov	eax, ebp
0x745d:	jne	0x76f0


0x74a7:	movsx	esi, r12b
0x74ab:	mov	rdi, r13
0x74ae:	mov	qword ptr [rsp + 8], rcx
0x74b3:	call	0x1c60


0x6d0e:	mov	rcx, qword ptr [rbx]
0x6d11:	mov	rbp, rax
0x6d14:	cmp	rcx, r12
0x6d17:	je	0x6d78


0x6d78:	test	r15, r15
0x6d7b:	je	0x7210


0x6d19:	mov	eax, dword ptr [r13]
0x6d1d:	test	eax, eax
0x6d1f:	jne	0x6d60


0x7210:	mov	r12d, 4
0x7216:	jmp	0x6d39


0x6d81:	movzx	r13d, byte ptr [rcx]
0x6d85:	mov	qword ptr [rsp + 8], rcx
0x6d8a:	mov	r12d, 4
0x6d90:	test	r13b, r13b
0x6d93:	je	0x6d39


0x6d21:	xor	r12d, r12d
0x6d24:	test	r15, r15
0x6d27:	je	0x6d36


0x6d60:	cmp	eax, 0x22
0x6d63:	mov	r12d, 4
0x6d69:	jne	0x6d39


0x6d39:	mov	rdi, qword ptr [rsp + 0x18]
0x6d3e:	xor	rdi, qword ptr fs:[0x28]
0x6d47:	mov	eax, r12d
0x6d4a:	jne	0x735e


0x6d95:	movsx	esi, r13b
0x6d99:	mov	rdi, r15
0x6d9c:	call	0x1c60


0x6d36:	mov	qword ptr [r14], rbp
0x6d39:	mov	rdi, qword ptr [rsp + 0x18]
0x6d3e:	xor	rdi, qword ptr fs:[0x28]
0x6d47:	mov	eax, r12d
0x6d4a:	jne	0x735e


0x6d29:	movzx	r13d, byte ptr [rcx]
0x6d2d:	test	r13b, r13b
0x6d30:	jne	0x6db3


0x6d6b:	mov	r12d, 1
0x6d71:	jmp	0x6d24


0x6d50:	add	rsp, 0x28
0x6d54:	pop	rbx
0x6d55:	pop	rbp
0x6d56:	pop	r12
0x6d58:	pop	r13
0x6d5a:	pop	r14
0x6d5c:	pop	r15
0x6d5e:	ret	


0x735e:	call	0x1c20


0x6db3:	movsx	esi, r13b
0x6db7:	mov	rdi, r15
0x6dba:	mov	qword ptr [rsp + 8], rcx
0x6dbf:	call	0x1c60


0x6d24:	test	r15, r15
0x6d27:	je	0x6d36


0x7a13:	mov	ebx, 0xffffffff
0x7a18:	mov	dword ptr [rbp], r12d
0x7a1c:	jmp	0x78f0


0x442d:	mov	r12d, eax
0x4430:	call	0x1b20


0x4435:	mov	r13d, dword ptr [rax]
0x4438:	mov	rbp, rax
0x443b:	mov	edi, ebx
0x443d:	call	0x1cc0


0x4442:	mov	ebx, r12d
0x4445:	mov	dword ptr [rbp], r13d
0x4449:	add	rsp, 8
0x444d:	mov	eax, ebx
0x444f:	pop	rbx
0x4450:	pop	rbp
0x4451:	pop	r12
0x4453:	pop	r13
0x4455:	ret	


0x7ac7:	mov	rdi, rbx
0x7aca:	pop	rbx
0x7acb:	jmp	0x1dc0


0xd49d:	test	eax, eax
0xd49f:	jne	0xd51a


0xd4a1:	call	0x1f50


0xd51a:	lea	rsi, [rip + 0xa18e]
0xd521:	mov	rdi, r12
0xd524:	call	0x1d40


0xd529:	test	eax, eax
0xd52b:	jne	0xd5a4


0xd52d:	call	0x1f50


0xd5a4:	lea	rsi, [rip + 0xa10a]
0xd5ab:	mov	rdi, r12
0xd5ae:	call	0x1d40


0xd5b3:	test	eax, eax
0xd5b5:	jne	0xd630


0xd5b7:	call	0x1f50


0xd630:	mov	eax, 4
0xd635:	jmp	0xcfb6


0xd5bc:	xor	ecx, ecx
0xd5be:	test	rbp, rbp
0xd5c1:	mov	rsi, qword ptr [rax]
0xd5c4:	mov	edx, 1
0xd5c9:	jne	0xd5f5


0xd5cb:	test	byte ptr [rsi + rcx*2 + 1], 0x10
0xd5d0:	je	0xd5e3


0xd5f5:	xor	eax, eax
0xd5f7:	mov	edi, 1
0xd5fc:	test	byte ptr [rsi + rax*2 + 1], 0x10
0xd601:	je	0xd61f


0xd5e3:	add	rcx, 1
0xd5e7:	cmp	rcx, 0x100
0xd5ee:	jne	0xd5cb


0xd5d2:	mov	rax, rcx
0xd5d5:	mov	rdi, rdx
0xd5d8:	sar	rax, 6
0xd5dc:	shl	rdi, cl
0xd5df:	or	qword ptr [rbx + rax*8], rdi
0xd5e3:	add	rcx, 1
0xd5e7:	cmp	rcx, 0x100
0xd5ee:	jne	0xd5cb


0xd61f:	add	rax, 1
0xd623:	cmp	rax, 0x100
0xd629:	jne	0xd5fc


0xd603:	movzx	ecx, byte ptr [rbp + rax]
0xd608:	mov	r9, rdi
0xd60b:	mov	rdx, rcx
0xd60e:	and	ecx, 0x3f
0xd611:	shr	rdx, 3
0xd615:	shl	r9, cl
0xd618:	and	edx, 0x18
0xd61b:	or	qword ptr [rbx + rdx], r9
0xd61f:	add	rax, 1
0xd623:	cmp	rax, 0x100
0xd629:	jne	0xd5fc


0xd5f0:	jmp	0xcfb4


0xd62b:	jmp	0xcfb4


0xd5fc:	test	byte ptr [rsi + rax*2 + 1], 0x10
0xd601:	je	0xd61f


0xd532:	xor	ecx, ecx
0xd534:	test	rbp, rbp
0xd537:	mov	rsi, qword ptr [rax]
0xd53a:	mov	edx, 1
0xd53f:	jne	0xd56a


0xd541:	test	byte ptr [rsi + rcx*2], 4
0xd545:	je	0xd558


0xd56a:	xor	eax, eax
0xd56c:	mov	edi, 1
0xd571:	test	byte ptr [rsi + rax*2], 4
0xd575:	je	0xd593


0xd558:	add	rcx, 1
0xd55c:	cmp	rcx, 0x100
0xd563:	jne	0xd541


0xd547:	mov	rax, rcx
0xd54a:	mov	rdi, rdx
0xd54d:	sar	rax, 6
0xd551:	shl	rdi, cl
0xd554:	or	qword ptr [rbx + rax*8], rdi
0xd558:	add	rcx, 1
0xd55c:	cmp	rcx, 0x100
0xd563:	jne	0xd541


0xd593:	add	rax, 1
0xd597:	cmp	rax, 0x100
0xd59d:	jne	0xd571


0xd577:	movzx	ecx, byte ptr [rbp + rax]
0xd57c:	mov	r14, rdi
0xd57f:	mov	rdx, rcx
0xd582:	and	ecx, 0x3f
0xd585:	shr	rdx, 3
0xd589:	shl	r14, cl
0xd58c:	and	edx, 0x18
0xd58f:	or	qword ptr [rbx + rdx], r14
0xd593:	add	rax, 1
0xd597:	cmp	rax, 0x100
0xd59d:	jne	0xd571


0xd565:	jmp	0xcfb4


0xd59f:	jmp	0xcfb4


0xd571:	test	byte ptr [rsi + rax*2], 4
0xd575:	je	0xd593


0xd4a6:	xor	ecx, ecx
0xd4a8:	test	rbp, rbp
0xd4ab:	mov	rsi, qword ptr [rax]
0xd4ae:	mov	edx, 1
0xd4b3:	jne	0xd4df


0xd4b5:	cmp	word ptr [rsi + rcx*2], 0
0xd4ba:	jns	0xd4cd


0xd4df:	xor	eax, eax
0xd4e1:	mov	edi, 1
0xd4e6:	cmp	word ptr [rsi + rax*2], 0
0xd4eb:	jns	0xd509


0xd4bc:	mov	rax, rcx
0xd4bf:	mov	rdi, rdx
0xd4c2:	sar	rax, 6
0xd4c6:	shl	rdi, cl
0xd4c9:	or	qword ptr [rbx + rax*8], rdi
0xd4cd:	add	rcx, 1
0xd4d1:	cmp	rcx, 0x100
0xd4d8:	jne	0xd4b5


0xd4cd:	add	rcx, 1
0xd4d1:	cmp	rcx, 0x100
0xd4d8:	jne	0xd4b5


0xd4ed:	movzx	ecx, byte ptr [rbp + rax]
0xd4f2:	mov	r9, rdi
0xd4f5:	mov	rdx, rcx
0xd4f8:	and	ecx, 0x3f
0xd4fb:	shr	rdx, 3
0xd4ff:	shl	r9, cl
0xd502:	and	edx, 0x18
0xd505:	or	qword ptr [rbx + rdx], r9
0xd509:	add	rax, 1
0xd50d:	cmp	rax, 0x100
0xd513:	jne	0xd4e6


0xd509:	add	rax, 1
0xd50d:	cmp	rax, 0x100
0xd513:	jne	0xd4e6


0xd4da:	jmp	0xcfb4


0xd515:	jmp	0xcfb4


0xd4e6:	cmp	word ptr [rsi + rax*2], 0
0xd4eb:	jns	0xd509


0xdb5a:	mov	rdx, qword ptr [rsp + 0x40]
0xdb5f:	mov	rdi, qword ptr [rsp + 0x38]
0xdb64:	mov	esi, eax
0xdb66:	call	0x1db0


0xdb6b:	cmp	rax, -1
0xdb6f:	je	0xda17


0xdb75:	movzx	eax, byte ptr [rsp + 0x60]
0xdb7a:	mov	byte ptr [rbp + rax], 1
0xdb7f:	jmp	0xda17


0xdc63:	mov	rdi, qword ptr [rsp + 0x38]
0xdc68:	mov	rdx, r14
0xdc6b:	mov	esi, eax
0xdc6d:	call	0x1db0


0xdc72:	cmp	rax, -1
0xdc76:	je	0xdbdf


0xdc7c:	movzx	eax, byte ptr [rsp + 0x60]
0xdc81:	add	rbp, 1
0xdc85:	mov	byte ptr [r12 + rax], 1
0xdc8a:	cmp	rbp, qword ptr [r15 + 0x28]
0xdc8e:	jl	0xdbed


0x6856:	mov	rax, qword ptr [rsp + 0x78]
0x685b:	xor	rax, qword ptr fs:[0x28]
0x6864:	jne	0x6870


0x6866:	add	rsp, 0xb8
0x686d:	pop	rbx
0x686e:	pop	rbp
0x686f:	ret	


0x6870:	call	0x1c20


0x6780:	mov	rax, qword ptr [rsp + 0x58]
0x6785:	xor	rax, qword ptr fs:[0x28]
0x678e:	jne	0x6795


0x6790:	add	rsp, 0x68
0x6794:	ret	


0x6795:	call	0x1c20


0x31a4:	mov	rdi, rax
0x31a7:	mov	rbp, rax
0x31aa:	call	0x1b30


0x1b30:	jmp	qword ptr [rip + 0x21a282]




0x34fe:	mov	rbx, rax
0x3501:	mov	qword ptr [rip + 0x218cb8], rax
0x3508:	mov	eax, dword ptr [rip + 0x218cca]
0x350e:	cmp	eax, -1
0x3511:	jne	0x3540


0x3513:	mov	rdx, rbx
0x3516:	mov	esi, 3
0x351b:	xor	edi, edi
0x351d:	call	0x6090


0x3540:	mov	r12, rsp
0x3543:	lea	rsi, [rip + 0x218bd6]
0x354a:	xor	edi, edi
0x354c:	mov	rdx, r12
0x354f:	call	0x1ad0


0x3554:	lea	rsi, [rip + 0x12a61]
0x355b:	mov	rdi, rbx
0x355e:	call	0x4460


0x3563:	mov	rbx, rax
0x3566:	mov	qword ptr [rip + 0x218c5b], rax
0x356d:	call	0x1b20


0x3572:	mov	edx, dword ptr [rip + 0x218c60]
0x3578:	mov	ebp, dword ptr [rax]
0x357a:	xor	eax, eax
0x357c:	test	rbx, rbx
0x357f:	mov	rsi, r12
0x3582:	mov	edi, 2
0x3587:	setne	al
0x358a:	add	eax, edx
0x358c:	xor	edx, edx
0x358e:	mov	dword ptr [rip + 0x218c44], eax
0x3594:	call	0x1ad0


0x3599:	test	rbx, rbx
0x359c:	je	0x35cd


0x35cd:	mov	rbx, qword ptr [rip + 0x218bec]
0x35d4:	jmp	0x3513


0x359e:	mov	rax, qword ptr [rsp + 0x88]
0x35a6:	xor	rax, qword ptr fs:[0x28]
0x35af:	mov	qword ptr [rip + 0x218c16], 0
0x35ba:	jne	0x35c8


0x35bc:	add	rsp, 0x90
0x35c3:	pop	rbx
0x35c4:	pop	rbp
0x35c5:	pop	r12
0x35c7:	ret	


0x35c8:	call	0x1c20


0x6b9a:	test	eax, eax
0x6b9c:	jne	0x6c30


0x6ba2:	mov	rbp, qword ptr [rsp]
0x6ba6:	cmp	rbp, r14
0x6ba9:	jl	0x6bb0


0x6c30:	mov	ebp, eax
0x6c32:	call	0x1b20


0x6bb0:	call	0x1b20


0x6bab:	cmp	rbp, r15
0x6bae:	jle	0x6c06


0x6c06:	mov	rdx, qword ptr [rsp + 8]
0x6c0b:	xor	rdx, qword ptr fs:[0x28]
0x6c14:	mov	rax, rbp
0x6c17:	jne	0x6c6c


0x6c19:	add	rsp, 0x18
0x6c1d:	pop	rbx
0x6c1e:	pop	rbp
0x6c1f:	pop	r12
0x6c21:	pop	r13
0x6c23:	pop	r14
0x6c25:	pop	r15
0x6c27:	ret	


0x6c6c:	call	0x1c20


0x6bb5:	cmp	rbp, 0x3fffffff
0x6bbc:	mov	r14, rax
0x6bbf:	jle	0x6c50


0x6c50:	cmp	rbp, -0x40000001
0x6c57:	mov	eax, 0x22
0x6c5c:	mov	edx, 0x4b
0x6c61:	cmovle	eax, edx
0x6c64:	mov	dword ptr [r14], eax
0x6c67:	jmp	0x6bcc


0x6bc5:	mov	dword ptr [r14], 0x4b
0x6bcc:	mov	rdi, r12
0x6bcf:	call	0x6260


0x6bcc:	mov	rdi, r12
0x6bcf:	call	0x6260


0x6c37:	cmp	ebp, 1
0x6c3a:	mov	r14, rax
0x6c3d:	je	0x6bc5


0x6c3f:	cmp	ebp, 3
0x6c42:	jne	0x6bcc


0x6c44:	mov	dword ptr [rax], 0
0x6c4a:	jmp	0x6bcc


0x6c9c:	add	rsp, 0x18
0x6ca0:	ret	


0x31af:	test	eax, eax
0x31b1:	je	0x3190


0x3190:	mov	eax, dword ptr [rip + 0x219042]
0x3196:	add	ebx, 1
0x3199:	cmp	ebx, eax
0x319b:	jae	0x31ed


0x31b3:	test	r12b, r12b
0x31b6:	jne	0x3190


0x31ed:	mov	dword ptr [rip + 0x218fe1], 0
0x31f7:	add	rsp, 8
0x31fb:	pop	rbx
0x31fc:	pop	rbp
0x31fd:	pop	r12
0x31ff:	pop	r13
0x3201:	ret	


0x31b8:	mov	rdx, rbp
0x31bb:	xor	edi, edi
0x31bd:	mov	esi, 3
0x31c2:	call	0x6090


0x6dc4:	test	rax, rax
0x6dc7:	mov	rcx, qword ptr [rsp + 8]
0x6dcc:	je	0x6e28


0x6e28:	mov	qword ptr [r14], rbp
0x6e2b:	or	r12d, 2
0x6e2f:	jmp	0x6d39


0x6dce:	lea	eax, [r13 - 0x45]
0x6dd2:	cmp	al, 0x2f
0x6dd4:	ja	0x6e38


0x6dd6:	movabs	rdx, 0x814400308945
0x6de0:	bt	rdx, rax
0x6de4:	jae	0x6e38


0x6e38:	mov	edi, 1
0x6e3d:	mov	eax, 0x400
0x6e42:	sub	r13d, 0x42
0x6e46:	cmp	r13b, 0x35
0x6e4a:	ja	0x6e28


0x6de6:	mov	esi, 0x30
0x6deb:	mov	rdi, r15
0x6dee:	mov	qword ptr [rsp + 8], rcx
0x6df3:	call	0x1c60


0x6e4c:	lea	rsi, [rip + 0x105e5]
0x6e53:	movzx	r13d, r13b
0x6e57:	movsxd	rdx, dword ptr [rsi + r13*4]
0x6e5b:	add	rdx, rsi
0x6e5e:	jmp	rdx


0x6df8:	test	rax, rax
0x6dfb:	mov	rcx, qword ptr [rsp + 8]
0x6e00:	je	0x6e38


0x6e02:	movzx	eax, byte ptr [rcx + 1]
0x6e06:	cmp	al, 0x44
0x6e08:	je	0x6e16


0x6e16:	mov	edi, 2
0x6e1b:	mov	eax, 0x3e8
0x6e20:	jmp	0x6e42


0x6e0a:	cmp	al, 0x69
0x6e0c:	je	0x72f8


0x6e42:	sub	r13d, 0x42
0x6e46:	cmp	r13b, 0x35
0x6e4a:	ja	0x6e28


0x72f8:	xor	edi, edi
0x72fa:	cmp	byte ptr [rcx + 2], 0x42
0x72fe:	mov	eax, 0x400
0x7303:	sete	dil
0x7307:	lea	edi, [rdi + rdi + 1]
0x730b:	jmp	0x6e42


0x6e12:	cmp	al, 0x42
0x6e14:	jne	0x6e38


0x6da1:	test	rax, rax
0x6da4:	mov	rcx, qword ptr [rsp + 8]
0x6da9:	je	0x6d39


0x6dab:	mov	ebp, 1
0x6db0:	xor	r12d, r12d
0x6db3:	movsx	esi, r13b
0x6db7:	mov	rdi, r15
0x6dba:	mov	qword ptr [rsp + 8], rcx
0x6dbf:	call	0x1c60


0x74b8:	test	rax, rax
0x74bb:	mov	rcx, qword ptr [rsp + 8]
0x74c0:	je	0x758c


0x758c:	mov	qword ptr [r14], rbx
0x758f:	or	ebp, 2
0x7592:	jmp	0x744d


0x74c6:	lea	eax, [r12 - 0x45]
0x74cb:	cmp	al, 0x2f
0x74cd:	ja	0x7520


0x74cf:	movabs	rdx, 0x814400308945
0x74d9:	bt	rdx, rax
0x74dd:	jae	0x7520


0x7520:	mov	edi, 1
0x7525:	mov	esi, 0x400
0x752a:	sub	r12d, 0x42
0x752e:	cmp	r12b, 0x35
0x7532:	ja	0x758c


0x74df:	mov	esi, 0x30
0x74e4:	mov	rdi, r13
0x74e7:	mov	qword ptr [rsp + 8], rcx
0x74ec:	call	0x1c60


0x7534:	lea	rdx, [rip + 0xffe5]
0x753b:	movzx	r12d, r12b
0x753f:	movsxd	rax, dword ptr [rdx + r12*4]
0x7543:	add	rax, rdx
0x7546:	jmp	rax


0x74f1:	test	rax, rax
0x74f4:	mov	rcx, qword ptr [rsp + 8]
0x74f9:	je	0x7520


0x74fb:	movzx	eax, byte ptr [rcx + 1]
0x74ff:	cmp	al, 0x44
0x7501:	je	0x750f


0x750f:	mov	edi, 2
0x7514:	mov	esi, 0x3e8
0x7519:	jmp	0x752a


0x7503:	cmp	al, 0x69
0x7505:	je	0x76d8


0x752a:	sub	r12d, 0x42
0x752e:	cmp	r12b, 0x35
0x7532:	ja	0x758c


0x76d8:	xor	edi, edi
0x76da:	cmp	byte ptr [rcx + 2], 0x42
0x76de:	mov	esi, 0x400
0x76e3:	sete	dil
0x76e7:	lea	edi, [rdi + rdi + 1]
0x76eb:	jmp	0x752a


0x750b:	cmp	al, 0x42
0x750d:	jne	0x7520


0x7498:	test	rax, rax
0x749b:	mov	ebx, 1
0x74a0:	mov	rcx, qword ptr [rsp + 8]
0x74a5:	je	0x7448


0x42b2:	test	eax, eax
0x42b4:	jne	0x42f9


0x42f9:	lea	r12, [rip + 0x11d19]
0x4300:	mov	r13, qword ptr [rip + 0x217da1]
0x4307:	lea	rsi, [rip + 0x1249a]
0x430e:	xor	edi, edi
0x4310:	mov	edx, 5
0x4315:	call	0x1bf0


0x431a:	mov	rsi, r13
0x431d:	mov	rdi, rax
0x4320:	call	0x1d20


0x4325:	jmp	0x41f9


0x41f1:	test	eax, eax
0x41f3:	jne	0x4300


0x4300:	mov	r13, qword ptr [rip + 0x217da1]
0x4307:	lea	rsi, [rip + 0x1249a]
0x430e:	xor	edi, edi
0x4310:	mov	edx, 5
0x4315:	call	0x1bf0


0x20ca:	lea	rdi, [rip + 0x227f]
0x20d1:	call	0x15f70


0x20d6:	lea	rax, [rip + 0x13ffe]
0x20dd:	mov	byte ptr [rip + 0x21a0ce], 1
0x20e4:	mov	qword ptr [rip + 0x21a0cd], r12
0x20eb:	mov	qword ptr [rip + 0x21a0b2], 0
0x20f6:	mov	qword ptr [rip + 0x21a09f], 0
0x2101:	mov	byte ptr [rip + 0x21a0ab], 0
0x2108:	mov	byte ptr [rip + 0x21a0a1], 0
0x210f:	mov	qword ptr [rip + 0x21a0d2], rax
0x2116:	nop	word ptr cs:[rax + rax]
0x2120:	mov	edi, dword ptr [rsp + 8]
0x2124:	lea	rdx, [rip + 0x13fde]
0x212b:	xor	r8d, r8d
0x212e:	mov	rcx, rbx
0x2131:	mov	rsi, r12
0x2134:	call	0x1c30


0x1c30:	jmp	qword ptr [rip + 0x21a202]




0x77b4:	test	eax, eax
0x77b6:	je	0x77f4


0x77b8:	call	0x1b20


0x77bd:	mov	r12d, dword ptr [rax]
0x77c0:	mov	rdi, rbx
0x77c3:	mov	rbp, rax
0x77c6:	call	0x1bd0


0x77cb:	test	r12d, r12d
0x77ce:	jne	0x7800


0x77d0:	pop	rbx
0x77d1:	pop	rbp
0x77d2:	pop	r12
0x77d4:	ret	


0x7800:	mov	dword ptr [rbp], r12d
0x7804:	mov	eax, 0xffffffff
0x7809:	jmp	0x77d0


0x44eb:	xor	ebx, ebx
0x44ed:	mov	dword ptr [rbp], r12d
0x44f1:	jmp	0x4481


0x44a6:	test	eax, eax
0x44a8:	jne	0x44bd


0x44aa:	mov	rsi, rbp
0x44ad:	mov	edi, r12d
0x44b0:	call	0x1e10


0x44bd:	call	0x1b20


0x1e10:	jmp	qword ptr [rip + 0x21a112]




0x44c2:	mov	ebp, dword ptr [rax]
0x44c4:	mov	rbx, rax
0x44c7:	mov	edi, r12d
0x44ca:	call	0x1cc0


0x44cf:	mov	dword ptr [rbx], ebp
0x44d1:	xor	ebx, ebx
0x44d3:	jmp	0x4481


0x15dea:	and	ebx, 0x20
0x15ded:	test	ebx, ebx
0x15def:	jne	0x15e08


0x15df1:	test	eax, eax
0x15df3:	je	0x15dff


0x15e08:	test	eax, eax
0x15e0a:	jne	0x15e28


0x15dff:	pop	rbx
0x15e00:	pop	rbp
0x15e01:	pop	r12
0x15e03:	ret	


0x15df5:	test	r12, r12
0x15df8:	mov	eax, 0xffffffff
0x15dfd:	je	0x15e38


0x15e0c:	call	0x1b20


0x15e28:	pop	rbx
0x15e29:	mov	eax, 0xffffffff
0x15e2e:	pop	rbp
0x15e2f:	pop	r12
0x15e31:	ret	


0x15e38:	call	0x1b20


0x15e3d:	cmp	dword ptr [rax], 9
0x15e40:	pop	rbx
0x15e41:	pop	rbp
0x15e42:	pop	r12
0x15e44:	setne	al
0x15e47:	movzx	eax, al
0x15e4a:	neg	eax
0x15e4c:	ret	


0x15e11:	mov	dword ptr [rax], 0
0x15e17:	mov	eax, 0xffffffff
0x15e1c:	pop	rbx
0x15e1d:	pop	rbp
0x15e1e:	pop	r12
0x15e20:	ret	


0x32ba:	test	eax, eax
0x32bc:	jne	0x33c6


0x32c2:	mov	rdi, qword ptr [rip + 0x218f07]
0x32c9:	test	rdi, rdi
0x32cc:	jne	0x32d7


0x33c6:	mov	rdx, qword ptr [rip + 0x218df3]
0x33cd:	mov	esi, 3
0x33d2:	xor	edi, edi
0x33d4:	call	0x6090


0x32ce:	cmp	byte ptr [rip + 0x218edc], 0
0x32d5:	jne	0x3340


0x32d7:	cmp	byte ptr [rip + 0x218ed5], 0
0x32de:	je	0x3310


0x3340:	lea	rsi, [rip + 0x218dd9]
0x3347:	mov	rbp, rsp
0x334a:	mov	rdx, rbp
0x334d:	call	0x1ad0


0x3310:	lea	rsi, [rsp + 0x80]
0x3318:	call	0x4500


0x32e0:	mov	qword ptr [rip + 0x218edd], 0
0x32eb:	mov	rax, qword ptr [rsp + 0x98]
0x32f3:	xor	rax, qword ptr fs:[0x28]
0x32fc:	jne	0x33c1


0x331d:	mov	rdi, qword ptr [rip + 0x218d84]
0x3324:	lea	rdx, [rip + 0x13d65]
0x332b:	mov	rcx, rax
0x332e:	mov	esi, 1
0x3333:	xor	eax, eax
0x3335:	call	0x1f00


0x333a:	jmp	0x32e0


0x3352:	mov	r12, qword ptr [rip + 0x218e67]
0x3359:	mov	rdi, r12
0x335c:	call	0x1b30


0x3361:	mov	ebx, eax
0x3363:	call	0x1b20


0x3368:	mov	r13d, dword ptr [rax]
0x336b:	mov	eax, dword ptr [rip + 0x218e67]
0x3371:	xor	edx, edx
0x3373:	test	ebx, ebx
0x3375:	mov	rsi, rbp
0x3378:	mov	edi, 2
0x337d:	sete	dl
0x3380:	sub	eax, edx
0x3382:	xor	edx, edx
0x3384:	mov	dword ptr [rip + 0x218e4e], eax
0x338a:	call	0x1ad0


0x338f:	test	ebx, ebx
0x3391:	je	0x32e0


0x3397:	mov	rdx, r12
0x339a:	xor	edi, edi
0x339c:	mov	esi, 3
0x33a1:	call	0x6090


0x14604:	mov	rax, qword ptr [rsp + 8]
0x14609:	mov	qword ptr [rax], 0
0x14610:	mov	qword ptr [rax + 8], 0
0x14618:	mov	eax, dword ptr [rsp + 0x4c]
0x1461c:	mov	rbx, qword ptr [rsp + 0x118]
0x14624:	xor	rbx, qword ptr fs:[0x28]
0x1462d:	jne	0x15370


0x4362:	test	eax, eax
0x4364:	je	0x437c


0x437c:	mov	rdi, qword ptr [rip + 0x217d5d]
0x4383:	call	0x15dd0


0x4366:	call	0x1b20


0x436b:	cmp	byte ptr [rip + 0x217eb6], 0
0x4372:	mov	rbx, rax
0x4375:	je	0x4393


0x4393:	lea	rsi, [rip + 0x127b7]
0x439a:	xor	edi, edi
0x439c:	mov	edx, 5
0x43a1:	call	0x1bf0


0x4377:	cmp	dword ptr [rax], 0x20
0x437a:	jne	0x4393


0x43a6:	mov	rdi, qword ptr [rip + 0x217e83]
0x43ad:	mov	rbp, rax
0x43b0:	test	rdi, rdi
0x43b3:	je	0x43dd


0x43dd:	mov	esi, dword ptr [rbx]
0x43df:	lea	rdx, [rip + 0x1277b]
0x43e6:	mov	rcx, rax
0x43e9:	xor	edi, edi
0x43eb:	xor	eax, eax
0x43ed:	call	0x1e60


0x43b5:	call	0x6060


0x43f2:	jmp	0x43d2


0x43d2:	mov	edi, dword ptr [rip + 0x217c48]
0x43d8:	call	0x1b50


0x1b50:	jmp	qword ptr [rip + 0x21a272]




0x4388:	test	eax, eax
0x438a:	jne	0x43d2


0x438c:	add	rsp, 8
0x4390:	pop	rbx
0x4391:	pop	rbp
0x4392:	ret	


0x44b5:	test	rax, rax
0x44b8:	mov	rbx, rax
0x44bb:	jne	0x4481


0x2139:	cmp	eax, -1
0x213c:	je	0x2291


0x2291:	mov	eax, dword ptr [rip + 0x219e19]
0x2297:	mov	edx, dword ptr [rsp + 8]
0x229b:	sub	edx, eax
0x229d:	sub	edx, 1
0x22a0:	jle	0x2d64


0x2142:	cmp	eax, 0x6b
0x2145:	je	0x2210


0x2d64:	cmp	eax, dword ptr [rsp + 8]
0x2d68:	jl	0x2f46


0x22a6:	mov	rdi, qword ptr [rip + 0x219f3b]
0x22ad:	xor	eax, eax
0x22af:	or	rcx, 0xffffffffffffffff
0x22b3:	repne scasb	al, byte ptr [rdi]


0x2210:	mov	byte ptr [rip + 0x219f9b], 0
0x2217:	jmp	0x2120


0x214b:	jle	0x2178


0x2f46:	movsxd	r14, dword ptr [rsp + 8]
0x2f4b:	mov	rdi, qword ptr [r12 + r14*8 - 8]
0x2f50:	call	0x6260


0x2d6e:	lea	rsi, [rip + 0x1339f]
0x2d75:	mov	edx, 5
0x2d7a:	xor	edi, edi
0x2d7c:	call	0x1bf0


0x22b3:	repne scasb	al, byte ptr [rdi]


0x22b5:	mov	rax, rcx
0x22b8:	not	rax
0x22bb:	lea	rbx, [rax - 1]
0x22bf:	mov	rax, qword ptr [rip + 0x219f1a]
0x22c6:	test	rax, rax
0x22c9:	je	0x2316


0x2120:	mov	edi, dword ptr [rsp + 8]
0x2124:	lea	rdx, [rip + 0x13fde]
0x212b:	xor	r8d, r8d
0x212e:	mov	rcx, rbx
0x2131:	mov	rsi, r12
0x2134:	call	0x1c30


0x2178:	cmp	eax, 0xffffff7e
0x217d:	je	0x2d99


0x214d:	cmp	eax, 0x73
0x2150:	je	0x21fc


0x2316:	mov	eax, dword ptr [rip + 0x219cf4]
0x231c:	cmp	eax, 9
0x231f:	jbe	0x2b9b


0x22cb:	mov	r8, qword ptr [rip + 0x219f0e]
0x22d2:	xor	edi, edi
0x22d4:	movzx	ecx, byte ptr [r8]
0x22d8:	mov	rdx, r8
0x22db:	test	cl, cl
0x22dd:	jne	0x22f5


0x2d99:	xor	edi, edi
0x2d9b:	call	0x3f10


0x2183:	jle	0x2248


0x21fc:	mov	byte ptr [rip + 0x219fb0], 1
0x2203:	jmp	0x2120


0x2156:	jle	0x21b0


0x2b9b:	mov	edx, 0xa
0x2ba0:	jmp	0x233f


0x2325:	movsxd	rdx, dword ptr [rip + 0x219ce4]
0x232c:	mov	rax, -2
0x2333:	sub	rax, rbx
0x2336:	cmp	rax, rdx
0x2339:	jb	0x2ad7


0x22df:	jmp	0x2c3b


0x22f5:	cmp	cl, 0x25
0x22f8:	lea	rax, [rdx + 1]
0x22fc:	movzx	esi, byte ptr [rdx + 1]
0x2300:	jne	0x22e8


0x2248:	cmp	eax, 0xffffff7d
0x224d:	jne	0x2d8f


0x2189:	cmp	eax, 0x62
0x218c:	je	0x2230


0x21b0:	cmp	eax, 0x6e
0x21b3:	jne	0x21f3


0x2158:	cmp	eax, 0x7a
0x215b:	je	0x2220


0x233f:	lea	rdi, [rbx + rdx + 1]
0x2344:	call	0x6910


0x2ad7:	call	0x3810


0x2c3b:	lea	rsi, [rip + 0x13be6]
0x2c42:	mov	edx, 5
0x2c47:	xor	edi, edi
0x2c49:	call	0x1bf0


0x2302:	cmp	sil, 0x25
0x2306:	jne	0x2942


0x22e8:	mov	ecx, esi
0x22ea:	test	cl, cl
0x22ec:	mov	rdx, rax
0x22ef:	je	0x2aab


0x2253:	sub	rsp, 8
0x2257:	mov	rdi, qword ptr [rip + 0x219e4a]
0x225e:	mov	rcx, qword ptr [rip + 0x219db3]
0x2265:	push	0
0x2267:	lea	r9, [rip + 0x13e7f]
0x226e:	lea	r8, [rip + 0x13e88]
0x2275:	lea	rdx, [rip + 0x13e1a]
0x227c:	lea	rsi, [rip + 0x13d96]
0x2283:	xor	eax, eax
0x2285:	call	0x67b0


0x2d8f:	mov	edi, 1
0x2d94:	call	0x3f10


0x2230:	mov	rax, qword ptr [rip + 0x219e81]
0x2237:	mov	qword ptr [rip + 0x219fa2], rax
0x223e:	jmp	0x2120


0x2192:	cmp	eax, 0x66
0x2195:	jne	0x2d8f


0x21b5:	lea	rsi, [rip + 0x13f22]
0x21bc:	mov	edx, 5
0x21c1:	xor	edi, edi
0x21c3:	call	0x1bf0


0x21f3:	cmp	eax, 0x71
0x21f6:	jne	0x2d8f


0x2220:	mov	byte ptr [rip + 0x219f8a], 1
0x2227:	jmp	0x2120


0x2161:	add	eax, -0x80
0x2164:	jne	0x2d8f


0x230c:	movzx	ecx, byte ptr [rdx + 2]
0x2310:	lea	rax, [rdx + 2]
0x2314:	jmp	0x22ea


0x2942:	test	dil, dil
0x2945:	jne	0x2eab


0x2aab:	test	dil, dil
0x2aae:	je	0x2c3b


0x219b:	mov	rax, qword ptr [rip + 0x219f16]
0x21a2:	mov	qword ptr [rip + 0x21a03f], rax
0x21a9:	jmp	0x2120


0x216a:	mov	byte ptr [rip + 0x21a03f], 1
0x2171:	jmp	0x2120


0x22ea:	test	cl, cl
0x22ec:	mov	rdx, rax
0x22ef:	je	0x2aab


0x294b:	xor	edi, edi
0x294d:	movzx	edx, byte ptr [rax]
0x2950:	mov	rsi, rax
0x2953:	cmp	dl, 0x27
0x2956:	je	0x2a01


0x2eab:	lea	rsi, [rip + 0x139a6]
0x2eb2:	mov	edx, 5
0x2eb7:	xor	edi, edi
0x2eb9:	call	0x1bf0


0x2ab4:	or	r9d, 0xffffffff
0x2ab8:	or	rcx, 0xffffffffffffffff
0x2abc:	mov	edx, 1
0x2ac1:	xor	esi, esi
0x2ac3:	xor	edi, edi
0x2ac5:	xor	eax, eax
0x2ac7:	call	0x1ae0


0x2a01:	or	edi, 1
0x2a04:	jmp	0x2966


0x295c:	jg	0x296c


0x1ae0:	jmp	qword ptr [rip + 0x21a2aa]


0x2966:	add	rax, 1
0x296a:	jmp	0x294d


0x295e:	cmp	dl, 0x23
0x2961:	jne	0x2976


0x296c:	cmp	dl, 0x2d
0x296f:	je	0x2966




0x294d:	movzx	edx, byte ptr [rax]
0x2950:	mov	rsi, rax
0x2953:	cmp	dl, 0x27
0x2956:	je	0x2a01


0x2963:	or	edi, 2
0x2966:	add	rax, 1
0x296a:	jmp	0x294d


0x2976:	movsx	eax, dl
0x2979:	sub	eax, 0x30
0x297c:	cmp	eax, 9
0x297f:	ja	0x2999


0x2971:	cmp	dl, 0x30
0x2974:	je	0x2966


0x2999:	cmp	dl, 0x2e
0x299c:	je	0x29f0


0x2988:	add	rsi, 1
0x298c:	movsx	eax, byte ptr [rsi]
0x298f:	mov	edx, eax
0x2991:	sub	eax, 0x30
0x2994:	cmp	eax, 9
0x2997:	jbe	0x2988


0x29f0:	add	rsi, 1
0x29f4:	movsx	eax, byte ptr [rsi]
0x29f7:	sub	eax, 0x30
0x29fa:	cmp	eax, 9
0x29fd:	ja	0x299e


0x299e:	movzx	r13d, byte ptr [rsi]
0x29a2:	cmp	r13b, 0x69
0x29a6:	mov	rbp, r13
0x29a9:	je	0x2bf8


0x29ff:	jmp	0x29f0


0x2bf8:	mov	byte ptr [rsi], 0x75
0x2bfb:	mov	eax, 1
0x2c00:	jmp	0x29d4


0x29af:	jle	0x2b44


0x29d4:	not	eax
0x29d6:	and	edi, eax
0x29d8:	jne	0x2dd3


0x2b44:	cmp	r13b, 0x58
0x2b48:	je	0x29cf


0x29b5:	cmp	r13b, 0x75
0x29b9:	je	0x2bee


0x29de:	movzx	ecx, byte ptr [rsi + 1]
0x29e2:	lea	rax, [rsi + 1]
0x29e6:	mov	edi, 1
0x29eb:	jmp	0x22ea


0x2dd3:	and	edi, 2
0x2dd6:	lea	rsi, [rip + 0x13b33]
0x2ddd:	mov	edx, 5
0x2de2:	cmp	edi, 1
0x2de5:	sbb	ebx, ebx
0x2de7:	xor	edi, edi
0x2de9:	and	ebx, 4
0x2dec:	add	ebx, 0x23
0x2def:	call	0x1bf0


0x29cf:	mov	eax, 2
0x29d4:	not	eax
0x29d6:	and	edi, eax
0x29d8:	jne	0x2dd3


0x2b4e:	cmp	r13b, 0x64
0x2b52:	je	0x2bf8


0x2bee:	mov	eax, 1
0x2bf3:	jmp	0x29d4


0x29bf:	cmp	r13b, 0x78
0x29c3:	je	0x29cf


0x2b58:	test	r13b, r13b
0x2b5b:	je	0x2f22


0x29c5:	cmp	r13b, 0x6f
0x29c9:	jne	0x2b61


0x2f22:	lea	rsi, [rip + 0x1395f]
0x2f29:	mov	edx, 5
0x2f2e:	xor	edi, edi
0x2f30:	call	0x1bf0


0x2b61:	call	0x1f50


0x2b66:	mov	rax, qword ptr [rax]
0x2b69:	mov	edx, 5
0x2b6e:	test	byte ptr [rax + rbp*2 + 1], 0x40
0x2b73:	je	0x2c19


0x2c19:	lea	rsi, [rip + 0x13cc0]
0x2c20:	xor	edi, edi
0x2c22:	call	0x1bf0


0x2b79:	lea	rsi, [rip + 0x13d30]
0x2b80:	xor	edi, edi
0x2b82:	call	0x1bf0


0x228a:	xor	edi, edi
0x228c:	call	0x1ee0


0x2349:	mov	ebx, dword ptr [rip + 0x219d61]
0x234f:	mov	qword ptr [rip + 0x219e9a], rax
0x2356:	lea	rsi, [rip + 0x1484d]
0x235d:	movsxd	rax, ebx
0x2360:	mov	rbp, qword ptr [r12 + rax*8]
0x2364:	lea	ebx, [rax + 1]
0x2367:	mov	dword ptr [rip + 0x219d43], ebx
0x236d:	mov	rdi, rbp
0x2370:	call	0x1d40


0x2375:	test	eax, eax
0x2377:	jne	0x2ae9


0x237d:	cmp	ebx, dword ptr [rsp + 8]
0x2381:	jge	0x2568


0x2ae9:	xor	ecx, ecx
0x2aeb:	xor	edx, edx
0x2aed:	xor	edi, edi
0x2aef:	mov	rsi, rbp
0x2af2:	call	0x4400


0x2387:	movsxd	rax, ebx
0x238a:	mov	rbp, qword ptr [r12 + rax*8]
0x238e:	mov	qword ptr [rsp + 0x10], rax
0x2393:	lea	rax, [rsp + 0x30]
0x2398:	mov	qword ptr [rsp + 0x20], rax
0x239d:	lea	rax, [rsp + 0x38]
0x23a2:	mov	qword ptr [rsp + 0x28], rax
0x23a7:	movzx	eax, byte ptr [rbp]
0x23ab:	cmp	al, 0x25
0x23ad:	sete	r15b
0x23b1:	cmp	al, 0x2f
0x23b3:	je	0x2478


0x2568:	lea	rbx, [rip + 0x145b1]
0x256f:	lea	rdi, [rip + 0x219baa]
0x2576:	lea	r13, [rsp + 0x40]
0x257b:	lea	r15, [rip + 0x219b9e]
0x2582:	lea	r14, [rbx + 0x2c]
0x2586:	mov	rbp, rbx
0x2589:	call	0x1d60


0x2478:	movsx	esi, al
0x247b:	lea	rax, [rbp + 1]
0x247f:	mov	r14d, esi
0x2482:	mov	rdi, rax
0x2485:	mov	qword ptr [rsp + 0x18], rax
0x248a:	call	0x1c70


0x1d60:	jmp	qword ptr [rip + 0x21a16a]


0x23c9:	mov	rax, qword ptr [rsp + 0x10]
0x23ce:	lea	rbp, [r12 + rax*8]
0x23d2:	call	0x3850




0x23d7:	mov	rcx, qword ptr [rsp + 0x20]
0x23dc:	mov	rdi, qword ptr [rbp]
0x23e0:	lea	r8, [rip + 0x14cfa]
0x23e7:	xor	esi, esi
0x23e9:	mov	dword ptr [rax + 0x18], ebx
0x23ec:	mov	edx, 0xa
0x23f1:	mov	r14, rax
0x23f4:	call	0x7370


0x23f9:	test	eax, eax
0x23fb:	jne	0x2c8a


0x2401:	mov	rax, qword ptr [rsp + 0x30]
0x2406:	test	rax, rax
0x2409:	je	0x2c5f


0x2c8a:	mov	rdi, qword ptr [rbp]
0x2c8e:	call	0x6260


0x2c5f:	mov	rbx, qword ptr [rbp]
0x2c63:	lea	rsi, [rip + 0x13d56]
0x2c6a:	mov	edx, 5
0x2c6f:	xor	edi, edi
0x2c71:	call	0x1bf0


0x240f:	mov	rdi, qword ptr [rip + 0x219cfa]
0x2416:	cmp	rax, rdi
0x2419:	jb	0x2d1e


0x2d1e:	lea	rsi, [rsp + 0xe0]
0x2d26:	call	0x4500


0x241f:	je	0x279a


0x279a:	mov	rdi, qword ptr [rbp]
0x279e:	call	0x6260


0x2425:	mov	qword ptr [rip + 0x219ce4], rax
0x242c:	mov	qword ptr [r14 + 8], rax
0x2430:	lea	eax, [rbx + 1]
0x2433:	cmp	dword ptr [rsp + 8], eax
0x2437:	jle	0x2568


0x243d:	mov	r13, qword ptr [rsp + 0x10]
0x2442:	add	r13, 1
0x2446:	mov	rbp, qword ptr [r12 + r13*8]
0x244a:	lea	r15, [r13*8]
0x2452:	cmp	byte ptr [rbp], 0x7b
0x2456:	je	0x2722


0x2722:	xor	eax, eax
0x2724:	or	rcx, 0xffffffffffffffff
0x2728:	mov	rdi, rbp
0x272b:	repne scasb	al, byte ptr [rdi]


0x245c:	cdqe	
0x245e:	mov	rbx, rax
0x2461:	mov	qword ptr [rsp + 0x10], rax
0x2466:	movzx	eax, byte ptr [rbp]
0x246a:	cmp	al, 0x25
0x246c:	sete	r15b
0x2470:	cmp	al, 0x2f
0x2472:	jne	0x23c0


0x272b:	repne scasb	al, byte ptr [rdi]


0x272d:	mov	rax, rcx
0x2730:	not	rax
0x2733:	lea	r13, [rbp + rax - 2]
0x2738:	cmp	byte ptr [r13], 0x7d
0x273d:	jne	0x2e6a


0x23c0:	test	r15b, r15b
0x23c3:	jne	0x2478


0x2743:	lea	rdi, [rbp + 1]
0x2747:	lea	rax, [r13 - 1]
0x274b:	mov	byte ptr [r13], 0
0x2750:	cmp	rdi, rax
0x2753:	je	0x27d4


0x2e6a:	mov	rdi, rbp
0x2e6d:	call	0x6260


0x27d4:	cmp	byte ptr [rbp + 1], 0x2a
0x27d8:	jne	0x2755


0x2755:	mov	rcx, qword ptr [rsp + 0x28]
0x275a:	lea	r8, [rip + 0x14980]
0x2761:	xor	esi, esi
0x2763:	mov	edx, 0xa
0x2768:	call	0x7370


0x27de:	mov	byte ptr [r14 + 0x1c], 1
0x27e3:	jmp	0x277e


0x277e:	lea	eax, [rbx + 2]
0x2781:	cmp	dword ptr [rsp + 8], eax
0x2785:	mov	byte ptr [r13], 0x7d
0x278a:	jle	0x2568


0x2790:	mov	rbp, qword ptr [r12 + r15 + 8]
0x2795:	jmp	0x245c


0x276d:	test	eax, eax
0x276f:	jne	0x2e30


0x2775:	mov	rax, qword ptr [rsp + 0x38]
0x277a:	mov	qword ptr [r14 + 0x10], rax
0x277e:	lea	eax, [rbx + 2]
0x2781:	cmp	dword ptr [rsp + 8], eax
0x2785:	mov	byte ptr [r13], 0x7d
0x278a:	jle	0x2568


0x2e30:	mov	rax, qword ptr [rip + 0x219381]
0x2e37:	mov	rdi, qword ptr [rax + r15]
0x2e3b:	call	0x6260


0x2d2b:	mov	rdi, qword ptr [rbp]
0x2d2f:	mov	r12, rax
0x2d32:	call	0x6260


0x248f:	test	rax, rax
0x2492:	mov	r13, rax
0x2495:	je	0x2cf4


0x2cf4:	lea	rsi, [rip + 0x13c4d]
0x2cfb:	mov	edx, 5
0x2d00:	xor	edi, edi
0x2d02:	call	0x1bf0


0x249b:	call	0x3850


0x24a0:	mov	edi, 0x100
0x24a5:	mov	byte ptr [rax + 0x1d], r15b
0x24a9:	mov	dword ptr [rax + 0x18], ebx
0x24ac:	mov	byte ptr [rax + 0x1e], 1
0x24b0:	mov	qword ptr [rax + 0x20], 0
0x24b8:	mov	r14, rax
0x24bb:	mov	qword ptr [rax + 0x28], 0
0x24c3:	call	0x6910


0x24c8:	mov	rsi, r13
0x24cb:	mov	rdi, qword ptr [rsp + 0x18]
0x24d0:	lea	rdx, [r14 + 0x20]
0x24d4:	sub	rsi, rbp
0x24d7:	mov	qword ptr [r14 + 0x40], rax
0x24db:	mov	qword ptr [r14 + 0x48], 0
0x24e3:	sub	rsi, 1
0x24e7:	mov	qword ptr [rip + 0x219e8e], 0x2c6
0x24f2:	call	0x15380


0x24f7:	test	rax, rax
0x24fa:	mov	r15, rax
0x24fd:	jne	0x2cbd


0x2503:	cmp	byte ptr [r13 + 1], 0
0x2508:	je	0x2430


0x2cbd:	mov	rdi, rbp
0x2cc0:	call	0x6260


0x2430:	lea	eax, [rbx + 1]
0x2433:	cmp	dword ptr [rsp + 8], eax
0x2437:	jle	0x2568


0x250e:	lea	rdi, [r13 + 1]
0x2512:	lea	r8, [rip + 0x14bc8]
0x2519:	xor	esi, esi
0x251b:	mov	rcx, r14
0x251e:	mov	edx, 0xa
0x2523:	call	0x6cb0


0x2528:	test	eax, eax
0x252a:	je	0x2430


0x2530:	mov	rdi, rbp
0x2533:	call	0x6260


0x2af7:	test	eax, eax
0x2af9:	mov	ebx, dword ptr [rip + 0x2195b1]
0x2aff:	jns	0x237d


0x2b05:	mov	rsi, rbp
0x2b08:	mov	edi, 4
0x2b0d:	call	0x5f90


0x2d07:	mov	r8d, r14d
0x2d0a:	mov	rdx, rax
0x2d0d:	mov	rcx, rbp
0x2d10:	xor	esi, esi
0x2d12:	mov	edi, 1
0x2d17:	xor	eax, eax
0x2d19:	call	0x1e60


0x2c76:	mov	rcx, rbx
0x2c79:	mov	rdx, rax
0x2c7c:	xor	esi, esi
0x2c7e:	mov	edi, 1
0x2c83:	xor	eax, eax
0x2c85:	call	0x1e60


0x2b87:	mov	ecx, r13d
0x2b8a:	mov	rdx, rax
0x2b8d:	xor	esi, esi
0x2b8f:	mov	edi, 1
0x2b94:	xor	eax, eax
0x2b96:	call	0x1e60


0x2c27:	mov	ecx, r13d
0x2c2a:	mov	rdx, rax
0x2c2d:	xor	esi, esi
0x2c2f:	mov	edi, 1
0x2c34:	xor	eax, eax
0x2c36:	call	0x1e60


0x2f35:	xor	esi, esi
0x2f37:	mov	rdx, rax
0x2f3a:	mov	edi, 1
0x2f3f:	xor	eax, eax
0x2f41:	call	0x1e60


0x2df4:	mov	r8d, r13d
0x2df7:	mov	rdx, rax
0x2dfa:	mov	ecx, ebx
0x2dfc:	xor	esi, esi
0x2dfe:	mov	edi, 1
0x2e03:	xor	eax, eax
0x2e05:	call	0x1e60


0x2e0a:	lea	rsi, [rip + 0x13cb7]
0x2e11:	mov	edx, 5
0x2e16:	xor	edi, edi
0x2e18:	call	0x1bf0


0x2e1d:	xor	esi, esi
0x2e1f:	mov	rdx, rax
0x2e22:	xor	edi, edi
0x2e24:	xor	eax, eax
0x2e26:	call	0x1e60


0x2e2b:	call	0x3220


0x2ebe:	xor	esi, esi
0x2ec0:	mov	rdx, rax
0x2ec3:	mov	edi, 1
0x2ec8:	xor	eax, eax
0x2eca:	call	0x1e60


0x2ecf:	movsxd	rax, dword ptr [rsp + 0x18]
0x2ed4:	mov	rdx, qword ptr [rip + 0x2192dd]
0x2edb:	mov	rdi, qword ptr [rdx + rax*8]
0x2edf:	call	0x6260


0x21c8:	mov	rdi, qword ptr [rip + 0x219ee9]
0x21cf:	lea	rcx, [rip + 0x14f0b]
0x21d6:	mov	r8, rax
0x21d9:	xor	r9d, r9d
0x21dc:	mov	edx, 0x7fffffff
0x21e1:	xor	esi, esi
0x21e3:	call	0x6c80


0x21e8:	mov	dword ptr [rip + 0x219e22], eax
0x21ee:	jmp	0x2120


0x2c4e:	xor	esi, esi
0x2c50:	mov	rdx, rax
0x2c53:	mov	edi, 1
0x2c58:	xor	eax, eax
0x2c5a:	call	0x1e60


0x2d81:	xor	esi, esi
0x2d83:	mov	rdx, rax
0x2d86:	xor	edi, edi
0x2d88:	xor	eax, eax
0x2d8a:	call	0x1e60


0x258e:	mov	r12d, dword ptr [rbp]
0x2592:	xor	esi, esi
0x2594:	mov	rdx, r13
0x2597:	mov	edi, r12d
0x259a:	call	0x1b80


0x1b80:	jmp	qword ptr [rip + 0x21a25a]




0x2acc:	test	eax, eax
0x2ace:	movsxd	rdx, eax
0x2ad1:	jns	0x233f


0x259f:	cmp	qword ptr [rsp + 0x40], 1
0x25a5:	je	0x25b2


0x25b2:	add	rbp, 4
0x25b6:	cmp	r14, rbp
0x25b9:	jne	0x258e


0x25a7:	mov	esi, r12d
0x25aa:	mov	rdi, r15
0x25ad:	call	0x1f30


0x25bb:	lea	rax, [rip + 0x101e]
0x25c2:	lea	rdi, [rsp + 0x48]
0x25c7:	lea	rsi, [rip + 0x219b52]
0x25ce:	mov	ecx, 0x20
0x25d3:	mov	dword ptr [rsp + 0xc8], 0
0x25de:	lea	r14, [rip + 0x219b3b]
0x25e5:	mov	qword ptr [rsp + 0x40], rax
0x25ea:	rep movsd	dword ptr [rdi], dword ptr [rsi]


0x1f30:	jmp	qword ptr [rip + 0x21a082]


0x25ea:	rep movsd	dword ptr [rdi], dword ptr [rsi]




0x25ec:	jmp	0x25f9


0x25f9:	mov	r12d, dword ptr [rbx]
0x25fc:	mov	rdi, r14
0x25ff:	mov	esi, r12d
0x2602:	call	0x1ed0


0x1ed0:	jmp	qword ptr [rip + 0x21a0b2]




0x2607:	test	eax, eax
0x2609:	je	0x25f0


0x25f0:	add	rbx, 4
0x25f4:	cmp	rbp, rbx
0x25f7:	je	0x2621


0x260b:	xor	edx, edx
0x260d:	mov	rsi, r13
0x2610:	mov	edi, r12d
0x2613:	add	rbx, 4
0x2617:	call	0x1b80


0x2621:	mov	qword ptr [rsp + 8], 0
0x262a:	mov	rax, qword ptr [rsp + 8]
0x262f:	cmp	rax, qword ptr [rip + 0x219b6a]
0x2636:	jae	0x2ba5


0x263c:	imul	r15, qword ptr [rsp + 8], 0x60
0x2642:	mov	r12, qword ptr [rip + 0x219b5f]
0x2649:	xor	r14d, r14d
0x264c:	cmp	byte ptr [r12 + r15 + 0x1e], 0
0x2652:	je	0x2823


0x2ba5:	call	0x34d0


0x2823:	add	r12, r15
0x2826:	cmp	byte ptr [r12 + 0x1c], 0
0x282c:	jne	0x2839


0x2658:	lea	rbx, [r12 + r15]
0x265c:	cmp	byte ptr [rbx + 0x1c], 0
0x2660:	jne	0x266c


0x282e:	cmp	r14, qword ptr [r12 + 0x10]
0x2833:	ja	0x2a09


0x2839:	mov	rbp, qword ptr [r12 + 8]
0x283e:	lea	r13, [r14 + 1]
0x2842:	call	0x34d0


0x2662:	cmp	r14, qword ptr [rbx + 0x10]
0x2666:	ja	0x2a09


0x266c:	movzx	r12d, byte ptr [rbx + 0x1d]
0x2671:	test	r12b, r12b
0x2674:	je	0x2aa1


0x2a09:	add	qword ptr [rsp + 8], 1
0x2a0f:	jmp	0x262a


0x2aa1:	call	0x34d0


0x267a:	cmp	byte ptr [rip + 0x219b2f], 0
0x2681:	je	0x2691


0x262a:	mov	rax, qword ptr [rsp + 8]
0x262f:	cmp	rax, qword ptr [rip + 0x219b6a]
0x2636:	jae	0x2ba5


0x2691:	cmp	qword ptr [rbx], 0
0x2695:	lea	rbp, [rbx + 0x20]
0x2699:	jns	0x26e6


0x2683:	cmp	qword ptr [rip + 0x219b75], 0
0x268b:	jne	0x2c05


0x269b:	jmp	0x28f8


0x26e6:	mov	rax, qword ptr [rip + 0x219b13]
0x26ed:	lea	rdi, [rax + 1]
0x26f1:	mov	qword ptr [rip + 0x219b08], rdi
0x26f8:	call	0x3da0


0x2c05:	call	0x3c90


0x28f8:	mov	rax, qword ptr [rip + 0x219901]
0x28ff:	lea	rdi, [rax + 1]
0x2903:	mov	qword ptr [rip + 0x2198f6], rdi
0x290a:	call	0x3da0


0x2c0a:	jmp	0x2691


0x290f:	test	rax, rax
0x2912:	jne	0x28c0


0x2914:	jmp	0x2702


0x28c0:	mov	rcx, qword ptr [rax]
0x28c3:	mov	rsi, qword ptr [rax + 8]
0x28c7:	mov	rdi, rbp
0x28ca:	cmp	byte ptr [rsi + rcx - 1], 0xa
0x28cf:	lea	rdx, [rcx - 1]
0x28d3:	cmovne	rdx, rcx
0x28d7:	xor	r9d, r9d
0x28da:	xor	ecx, ecx
0x28dc:	mov	r8, rdx
0x28df:	call	0x15d20


0x2702:	cmp	byte ptr [rbx + 0x1c], 0
0x2706:	je	0x2e9c


0x2e9c:	movzx	edx, r12b
0x2ea0:	mov	rsi, r14
0x2ea3:	mov	rdi, rbx
0x2ea6:	call	0x1f80


0x270c:	test	r12b, r12b
0x270f:	jne	0x271b


0x2711:	call	0x3d70


0x271b:	xor	edi, edi
0x271d:	call	0x1ee0


0x2716:	call	0x3280


0x28e4:	cmp	rax, -2
0x28e8:	je	0x2e0a


0x28ee:	cmp	rax, -1
0x28f2:	jne	0x2a14


0x2a14:	mov	rax, qword ptr [rip + 0x2197e5]
0x2a1b:	add	rax, qword ptr [rbx]
0x2a1e:	mov	rbp, rax
0x2a21:	mov	qword ptr [rsp + 0x10], rax
0x2a26:	mov	eax, dword ptr [rbx + 0x18]
0x2a29:	mov	dword ptr [rsp + 0x18], eax
0x2a2d:	call	0x3ea0


0x2a32:	cmp	rbp, rax
0x2a35:	jb	0x2f10


0x2f10:	movsxd	rdx, dword ptr [rsp + 0x18]
0x2f15:	mov	rax, qword ptr [rip + 0x21929c]
0x2f1c:	mov	rdi, qword ptr [rax + rdx*8]
0x2f20:	jmp	0x2edf


0x2a3b:	mov	r13, qword ptr [rsp + 0x10]
0x2a40:	sub	r13, rax
0x2a43:	je	0x2a76


0x2edf:	call	0x6260


0x2a76:	test	r12b, r12b
0x2a79:	je	0x2c0f


0x2a45:	xor	ebp, ebp
0x2a47:	jmp	0x2a59


0x2c0f:	call	0x3280


0x2a7f:	cmp	qword ptr [rbx], 0
0x2a83:	jle	0x2a91


0x2a59:	call	0x3c90


0x2a91:	add	r14, 1
0x2a95:	mov	r12, qword ptr [rip + 0x21970c]
0x2a9c:	jmp	0x2658


0x2a85:	mov	rax, qword ptr [rsp + 0x10]
0x2a8a:	mov	qword ptr [rip + 0x21976f], rax
0x2a91:	add	r14, 1
0x2a95:	mov	r12, qword ptr [rip + 0x21970c]
0x2a9c:	jmp	0x2658


0x2a5e:	test	rax, rax
0x2a61:	je	0x2ecf


0x2a67:	test	r12b, r12b
0x2a6a:	jne	0x2a50


0x2a6c:	mov	rdi, rax
0x2a6f:	call	0x3440


0x2a50:	add	rbp, 1
0x2a54:	cmp	r13, rbp
0x2a57:	je	0x2a76


0x2a74:	jmp	0x2a50


0x2c14:	jmp	0x2a7f


0x26fd:	test	rax, rax
0x2700:	jne	0x26a0


0x26a0:	mov	rcx, qword ptr [rax]
0x26a3:	mov	rsi, qword ptr [rax + 8]
0x26a7:	mov	rdi, rbp
0x26aa:	cmp	byte ptr [rsi + rcx - 1], 0xa
0x26af:	lea	rdx, [rcx - 1]
0x26b3:	cmovne	rdx, rcx
0x26b7:	xor	r9d, r9d
0x26ba:	xor	ecx, ecx
0x26bc:	mov	r8, rdx
0x26bf:	call	0x15d20


0x26c4:	cmp	rax, -2
0x26c8:	je	0x2e0a


0x26ce:	cmp	rax, -1
0x26d2:	jne	0x2a14


0x26d8:	call	0x3c90


0x26dd:	test	r12b, r12b
0x26e0:	je	0x2adc


0x2adc:	mov	rdi, rax
0x2adf:	call	0x3440


0x2ae4:	jmp	0x26e6


0x2aa6:	jmp	0x267a


0x2847:	mov	rax, qword ptr [rip + 0x2199b2]
0x284e:	imul	rbp, r13
0x2852:	lea	rdi, [rax + 1]
0x2856:	call	0x3da0


0x285b:	test	rax, rax
0x285e:	je	0x2919


0x2919:	cmp	byte ptr [rip + 0x219890], 0
0x2920:	je	0x2864


0x2864:	call	0x3ea0


0x2926:	mov	rdi, qword ptr [r12 + 8]
0x292b:	mov	rsi, r14
0x292e:	call	0x3610


0x2869:	cmp	rbp, rax
0x286c:	lea	rbx, [rax + 1]
0x2870:	jbe	0x27e5


0x27e5:	call	0x3280


0x2876:	add	rbp, 1
0x287a:	nop	word ptr [rax + rax]
0x2880:	call	0x3c90


0x2885:	test	rax, rax
0x2888:	je	0x2926


0x288e:	mov	rdi, rax
0x2891:	add	rbx, 1
0x2895:	call	0x3440


0x289a:	cmp	rbx, rbp
0x289d:	jne	0x2880


0x289f:	call	0x3280


0x2880:	call	0x3c90


0x28a4:	cmp	byte ptr [rip + 0x219905], 0
0x28ab:	je	0x2800


0x2800:	mov	rax, qword ptr [rip + 0x2199f9]
0x2807:	lea	rdi, [rax + 1]
0x280b:	call	0x3da0


0x28b1:	call	0x3c90


0x28b6:	jmp	0x2800


0x2810:	test	rax, rax
0x2813:	je	0x2933


0x2933:	cmp	byte ptr [rip + 0x219876], 0
0x293a:	jne	0x2819


0x2819:	mov	r12, qword ptr [rip + 0x219988]
0x2820:	mov	r14, r13
0x2823:	add	r12, r15
0x2826:	cmp	byte ptr [r12 + 0x1c], 0
0x282c:	jne	0x2839


0x2940:	jmp	0x2926


0x27ea:	cmp	byte ptr [rip + 0x2199bf], 0
0x27f1:	jne	0x28b1


0x2baa:	call	0x3d70


0x2baf:	call	0x3280


0x2bb4:	xor	edi, edi
0x2bb6:	call	0x1cc0


0x2bbb:	test	eax, eax
0x2bbd:	jne	0x2da5


0x2bc3:	xor	eax, eax
0x2bc5:	mov	rcx, qword ptr [rsp + 0xf8]
0x2bcd:	xor	rcx, qword ptr fs:[0x28]
0x2bd6:	jne	0x2da0


0x2da5:	lea	rsi, [rip + 0x13236]
0x2dac:	mov	edx, 5
0x2db1:	xor	edi, edi
0x2db3:	call	0x1bf0


0x2bdc:	add	rsp, 0x108
0x2be3:	pop	rbx
0x2be4:	pop	rbp
0x2be5:	pop	r12
0x2be7:	pop	r13
0x2be9:	pop	r14
0x2beb:	pop	r15
0x2bed:	ret	


0x2da0:	call	0x1c20


0x2db8:	mov	rbx, rax
0x2dbb:	call	0x1b20


0x2dc0:	mov	esi, dword ptr [rax]
0x2dc2:	mov	rdx, rbx
0x2dc5:	xor	edi, edi
0x2dc7:	xor	eax, eax
0x2dc9:	call	0x1e60


0x2dce:	call	0x3220


0x261c:	cmp	rbp, rbx
0x261f:	jne	0x25f9


0x43ba:	mov	esi, dword ptr [rbx]
0x43bc:	lea	rdx, [rip + 0x1279a]
0x43c3:	mov	rcx, rax
0x43c6:	mov	r8, rbp
0x43c9:	xor	edi, edi
0x43cb:	xor	eax, eax
0x43cd:	call	0x1e60


0x33a6:	lea	rdx, [rip + 0x137b4]
0x33ad:	mov	rcx, rax
0x33b0:	mov	esi, r13d
0x33b3:	xor	edi, edi
0x33b5:	xor	eax, eax
0x33b7:	call	0x1e60


0x33bc:	jmp	0x32e0


0x33d9:	mov	rbx, rax
0x33dc:	call	0x1b20


0x33e1:	mov	esi, dword ptr [rax]
0x33e3:	lea	rdx, [rip + 0x13777]
0x33ea:	mov	rcx, rbx
0x33ed:	xor	edi, edi
0x33ef:	xor	eax, eax
0x33f1:	call	0x1e60


0x33f6:	mov	qword ptr [rip + 0x218dc7], 0
0x3401:	call	0x3220


0x31c7:	mov	rbp, rax
0x31ca:	add	ebx, 1
0x31cd:	call	0x1b20


0x31d2:	mov	esi, dword ptr [rax]
0x31d4:	xor	edi, edi
0x31d6:	xor	eax, eax
0x31d8:	mov	rcx, rbp
0x31db:	mov	rdx, r13
0x31de:	call	0x1e60


0x31e3:	mov	eax, dword ptr [rip + 0x218fef]
0x31e9:	cmp	ebx, eax
0x31eb:	jb	0x319d


0x3522:	lea	rdx, [rip + 0x13638]
0x3529:	mov	rcx, rax
0x352c:	mov	esi, ebp
0x352e:	xor	edi, edi
0x3530:	xor	eax, eax
0x3532:	call	0x1e60


0x3537:	call	0x3220


0x148a0:	mov	rax, qword ptr [rsp + 8]
0x148a5:	mov	rdi, qword ptr [r13 + 0xe0]
0x148ac:	mov	rdx, qword ptr [rax + 0x30]
0x148b0:	test	rdx, rdx
0x148b3:	je	0x151a4


0x151a4:	call	0x1b00


0x148b9:	mov	rax, qword ptr [rdi]
0x148bc:	test	rax, rax
0x148bf:	je	0x148ce


0x148ce:	add	rax, 1
0x148d2:	cmp	rdx, rax
0x148d5:	ja	0x148c8


0x148c1:	jmp	0x148dd


0x148d7:	je	0x151a4


0x148c8:	cmp	qword ptr [rdi + rax*8], rax
0x148cc:	jne	0x148dd


0x151a9:	mov	qword ptr [r13 + 0xe0], 0
0x151b4:	jmp	0x148dd


0x5ccc:	lea	rsi, [rax + 1]
0x5cd0:	mov	qword ptr [rsp + 0x48], rax
0x5cd5:	add	rsp, 0x20
0x5cd9:	mov	rdi, rsi
0x5cdc:	mov	qword ptr [rsp + 0x18], rsi
0x5ce1:	call	0x6910


0x5ce6:	mov	qword ptr [rsp + 0x10], rax
0x5ceb:	sub	rsp, 8
0x5cef:	push	qword ptr [rbx + 0x30]
0x5cf2:	push	qword ptr [rbx + 0x28]
0x5cf5:	mov	r10, qword ptr [rsp + 0x38]
0x5cfa:	mov	r9d, ebp
0x5cfd:	mov	r8d, dword ptr [rbx]
0x5d00:	mov	rcx, r15
0x5d03:	mov	rdx, r14
0x5d06:	mov	rdi, rax
0x5d09:	push	r10
0x5d0b:	mov	rsi, qword ptr [rsp + 0x38]
0x5d10:	call	0x46e0


0x5d15:	mov	eax, dword ptr [rsp + 0x2c]
0x5d19:	add	rsp, 0x20
0x5d1d:	test	r12, r12
0x5d20:	mov	dword ptr [r13], eax
0x5d24:	je	0x5d2f


0x5d2f:	mov	rax, qword ptr [rsp + 0x10]
0x5d34:	add	rsp, 0x38
0x5d38:	pop	rbx
0x5d39:	pop	rbp
0x5d3a:	pop	r12
0x5d3c:	pop	r13
0x5d3e:	pop	r14
0x5d40:	pop	r15
0x5d42:	ret	


0x5d26:	mov	r11, qword ptr [rsp + 0x28]
0x5d2b:	mov	qword ptr [r12], r11
0x5d2f:	mov	rax, qword ptr [rsp + 0x10]
0x5d34:	add	rsp, 0x38
0x5d38:	pop	rbx
0x5d39:	pop	rbp
0x5d3a:	pop	r12
0x5d3c:	pop	r13
0x5d3e:	pop	r14
0x5d40:	pop	r15
0x5d42:	ret	


0x5c41:	mov	dword ptr [rbp], r12d
0x5c45:	add	rsp, 0x38
0x5c49:	pop	rbx
0x5c4a:	pop	rbp
0x5c4b:	pop	r12
0x5c4d:	pop	r13
0x5c4f:	pop	r14
0x5c51:	pop	r15
0x5c53:	ret	


0x5a0c:	add	rsp, 0x20
0x5a10:	mov	r11, qword ptr [rsp + 0x10]
0x5a15:	cmp	r11, rax
0x5a18:	ja	0x5a81


0x5a1a:	lea	rsi, [rax + 1]
0x5a1e:	lea	rax, [rip + 0x21681b]
0x5a25:	cmp	r12, rax
0x5a28:	mov	qword ptr [rbx], rsi
0x5a2b:	je	0x5a3f


0x5a81:	mov	eax, dword ptr [rsp + 0x18]
0x5a85:	mov	dword ptr [r13], eax
0x5a89:	add	rsp, 0x28
0x5a8d:	mov	rax, r12
0x5a90:	pop	rbx
0x5a91:	pop	rbp
0x5a92:	pop	r12
0x5a94:	pop	r13
0x5a96:	pop	r14
0x5a98:	pop	r15
0x5a9a:	ret	


0x5a3f:	mov	rdi, rsi
0x5a42:	mov	qword ptr [rsp + 0x10], rsi
0x5a47:	call	0x6910


0x5a2d:	mov	rdi, r12
0x5a30:	mov	qword ptr [rsp + 0x10], rsi
0x5a35:	call	0x1b00


0x5a3a:	mov	rsi, qword ptr [rsp + 0x10]
0x5a3f:	mov	rdi, rsi
0x5a42:	mov	qword ptr [rsp + 0x10], rsi
0x5a47:	call	0x6910


0x5a4c:	sub	rsp, 8
0x5a50:	mov	qword ptr [rbx + 8], rax
0x5a54:	mov	r8d, dword ptr [rbp]
0x5a58:	push	qword ptr [rbp + 0x30]
0x5a5b:	push	qword ptr [rbp + 0x28]
0x5a5e:	mov	rcx, r14
0x5a61:	push	r15
0x5a63:	mov	r9d, dword ptr [rsp + 0x3c]
0x5a68:	mov	rdi, rax
0x5a6b:	mov	rdx, qword ptr [rsp + 0x28]
0x5a70:	mov	rsi, qword ptr [rsp + 0x30]
0x5a75:	mov	r12, rax
0x5a78:	call	0x46e0


0x6192:	mov	rdi, qword ptr [rsp + 0x38]
0x6197:	xor	rdi, qword ptr fs:[0x28]
0x61a0:	jne	0x61ac


0x61a2:	add	rsp, 0x48
0x61a6:	ret	


0x61ac:	call	0x1c20


0x5edf:	mov	rcx, qword ptr [rsp + 0x38]
0x5ee4:	xor	rcx, qword ptr fs:[0x28]
0x5eed:	jne	0x5ef9


0x5eef:	add	rsp, 0x48
0x5ef3:	ret	


0x5ef9:	call	0x1c20


0x5f6b:	mov	rdx, qword ptr [rsp + 0x38]
0x5f70:	xor	rdx, qword ptr fs:[0x28]
0x5f79:	jne	0x5f85


0x5f7b:	add	rsp, 0x48
0x5f7f:	ret	


0x5f85:	call	0x1c20


0x60ff:	mov	rcx, qword ptr [rsp + 0x38]
0x6104:	xor	rcx, qword ptr fs:[0x28]
0x610d:	jne	0x6119


0x610f:	add	rsp, 0x48
0x6113:	ret	


0x6119:	call	0x1c20


0x602e:	mov	rsi, qword ptr [rsp + 0x38]
0x6033:	xor	rsi, qword ptr fs:[0x28]
0x603c:	jne	0x6043


0x603e:	add	rsp, 0x48
0x6042:	ret	


0x6043:	call	0x1c20


0x5a7d:	add	rsp, 0x20
0x5a81:	mov	eax, dword ptr [rsp + 0x18]
0x5a85:	mov	dword ptr [r13], eax
0x5a89:	add	rsp, 0x28
0x5a8d:	mov	rax, r12
0x5a90:	pop	rbx
0x5a91:	pop	rbp
0x5a92:	pop	r12
0x5a94:	pop	r13
0x5a96:	pop	r14
0x5a98:	pop	r15
0x5a9a:	ret	


0x148f2:	test	eax, eax
0x148f4:	jne	0x145a0


0x148fa:	mov	rdi, qword ptr [r13 + 0x68]
0x148fe:	lea	rsi, [rip - 0x7c05]
0x14905:	mov	rdx, r13
0x14908:	call	0x7fb0


0x1490d:	test	eax, eax
0x1490f:	jne	0x145a0


0x14915:	mov	rdi, qword ptr [r13 + 0x68]
0x14919:	lea	rsi, [rip - 0xb000]
0x14920:	mov	rdx, r13
0x14923:	call	0x8020


0x14928:	mov	rdx, qword ptr [r13 + 0x68]
0x1492c:	lea	rsi, [rip + 0x3215]
0x14933:	nop	dword ptr [rax + rax]
0x14938:	movzx	ecx, byte ptr [rdx + 0x30]
0x1493c:	mov	rdi, qword ptr [rdx + 0x38]
0x14940:	cmp	cl, 0x10
0x14943:	ja	0x14a18


0x14949:	movzx	eax, cl
0x1494c:	movsxd	rax, dword ptr [rsi + rax*4]
0x14950:	add	rax, rsi
0x14953:	jmp	rax


0x14a18:	and	ecx, 8
0x14a1b:	jne	0x15332


0x14a21:	mov	rax, qword ptr [rdx + 0x20]
0x14a25:	mov	rcx, qword ptr [rax + 0x38]
0x14a29:	mov	rax, qword ptr [r13 + 0x18]
0x14a2d:	mov	qword ptr [rax + rdi*8], rcx
0x14a31:	mov	r15, qword ptr [rdx + 8]
0x14a35:	xor	edi, edi
0x14a37:	test	r15, r15
0x14a3a:	je	0x14a4b


0x15332:	lea	rcx, [rip + 0x28c7]
0x15339:	lea	rsi, [rip + 0x22e8]
0x15340:	lea	rdi, [rip + 0x2301]
0x15347:	mov	edx, 0x5c2
0x1534c:	call	0x1c90


0x14a4b:	mov	r15, qword ptr [rdx + 0x10]
0x14a4f:	test	r15, r15
0x14a52:	sete	cl
0x14a55:	cmp	r15, rdi
0x14a58:	sete	al
0x14a5b:	or	cl, al
0x14a5d:	mov	byte ptr [rsp + 0x10], cl
0x14a61:	je	0x14a3c


0x14a3c:	mov	rdx, r15
0x14a3f:	jmp	0x14938


0x14a63:	mov	rax, qword ptr [rdx]
0x14a66:	mov	rdi, rdx
0x14a69:	test	rax, rax
0x14a6c:	jne	0x14a48


0x14938:	movzx	ecx, byte ptr [rdx + 0x30]
0x1493c:	mov	rdi, qword ptr [rdx + 0x38]
0x14940:	cmp	cl, 0x10
0x14943:	ja	0x14a18


0x14a6e:	xor	r14d, r14d
0x14a71:	xor	r15d, r15d
0x14a74:	nop	dword ptr [rax]
0x14a78:	mov	rdx, qword ptr [r13 + 0x10]
0x14a7c:	cmp	rdx, r15
0x14a7f:	je	0x14aa6


0x14a48:	mov	rdx, rax
0x14a4b:	mov	r15, qword ptr [rdx + 0x10]
0x14a4f:	test	r15, r15
0x14a52:	sete	cl
0x14a55:	cmp	r15, rdi
0x14a58:	sete	al
0x14a5b:	or	cl, al
0x14a5d:	mov	byte ptr [rsp + 0x10], cl
0x14a61:	je	0x14a3c


0x14aa6:	test	r14b, r14b
0x14aa9:	je	0x14cee


0x14a81:	lea	r10, [r15 + r15*2]
0x14a85:	mov	rax, qword ptr [r13 + 0x30]
0x14a89:	shl	r10, 3
0x14a8d:	cmp	qword ptr [rax + r10 + 8], 0
0x14a93:	je	0x14c98


0x14cee:	mov	rax, qword ptr [rsp + 8]
0x14cf3:	test	byte ptr [rax + 0x38], 0x10
0x14cf7:	jne	0x14d0a


0x14aaf:	xor	r14d, r14d
0x14ab2:	xor	r15d, r15d
0x14ab5:	jmp	0x14a81


0x14c98:	mov	ecx, 1
0x14c9d:	mov	rdx, r15
0x14ca0:	mov	rsi, r13
0x14ca3:	mov	rdi, r12
0x14ca6:	mov	qword ptr [rsp], r10
0x14caa:	call	0x9dd0


0x14a99:	mov	rdx, qword ptr [r13 + 0x10]
0x14a9d:	add	r15, 1
0x14aa1:	cmp	rdx, r15
0x14aa4:	jne	0x14a81


0x14cf9:	cmp	qword ptr [rax + 0x30], 0
0x14cfe:	je	0x14d0a


0x14d0a:	cmp	qword ptr [r13 + 0x98], 0
0x14d12:	je	0x14e0b


0x14d00:	test	byte ptr [r13 + 0xb0], 1
0x14d08:	jne	0x14d18


0x14e0b:	movzx	eax, byte ptr [rbx + 0xb0]
0x14e12:	mov	dword ptr [rsp + 0x4c], 0
0x14e1a:	shr	al, 2
0x14e1d:	cmp	qword ptr [rsp + 0x20], 0
0x14e23:	sete	dl
0x14e26:	and	al, dl
0x14e28:	jne	0x1500f


0x14d18:	lea	rdi, [rdx + rdx*2]
0x14d1c:	mov	qword ptr [rsp], rdx
0x14d20:	shl	rdi, 3
0x14d24:	call	0x1da0


0x14e2e:	mov	rax, qword ptr [rbx + 0x68]
0x14e32:	mov	rdi, r12
0x14e35:	mov	rax, qword ptr [rax + 0x18]
0x14e39:	mov	rax, qword ptr [rax + 0x38]
0x14e3d:	lea	rdx, [rax + rax*2]
0x14e41:	mov	qword ptr [rbx + 0x90], rax
0x14e48:	mov	rax, qword ptr [rbx + 0x30]
0x14e4c:	lea	rsi, [rax + rdx*8]
0x14e50:	call	0xa830


0x1500f:	mov	rcx, qword ptr [rsp + 8]
0x15014:	cmp	qword ptr [rcx + 0x28], 0
0x15019:	jne	0x14e2e


0x1501f:	mov	r10, qword ptr [rbx + 0x10]
0x15023:	test	r10, r10
0x15026:	je	0x152da


0x152da:	cmp	qword ptr [rbx + 0x98], 0
0x152e2:	movzx	edx, byte ptr [rbx + 0xb0]
0x152e9:	mov	dword ptr [rbx + 0xb4], 1
0x152f3:	setg	al
0x152f6:	and	edx, 0xfffffff9
0x152f9:	or	eax, r14d
0x152fc:	and	eax, 1
0x152ff:	add	eax, eax
0x15301:	or	eax, edx
0x15303:	mov	byte ptr [rbx + 0xb0], al
0x15309:	jmp	0x14e2e


0x1502c:	mov	rsi, qword ptr [rbx]
0x1502f:	lea	r9, [rip + 0x2b56]
0x15036:	xor	r8d, r8d
0x15039:	xor	edx, edx
0x1503b:	mov	rcx, rsi
0x1503e:	cmp	byte ptr [rcx + 8], 0xc
0x15042:	ja	0x1530e


0x15048:	movzx	edi, byte ptr [rcx + 8]
0x1504c:	movsxd	rdi, dword ptr [r9 + rdi*4]
0x15050:	add	rdi, r9
0x15053:	jmp	rdi


0x1530e:	call	0x1b10


0x14e55:	test	eax, eax
0x14e57:	mov	r15d, eax
0x14e5a:	mov	dword ptr [rsp + 0x50], eax
0x14e5e:	jne	0x14f7f


0x14e64:	cmp	qword ptr [rbx + 0x98], 0
0x14e6c:	jle	0x14f40


0x14f7f:	mov	rax, qword ptr [rsp + 8]
0x14f84:	mov	dword ptr [rsp + 0x4c], r15d
0x14f89:	mov	r13, qword ptr [rax]
0x14f8c:	mov	rdi, qword ptr [r13 + 0x70]
0x14f90:	test	rdi, rdi
0x14f93:	je	0x14fa8


0x14f40:	mov	rdi, qword ptr [rsp + 0x28]
0x14f45:	xor	ecx, ecx
0x14f47:	mov	rdx, r12
0x14f4a:	mov	rsi, rbx
0x14f4d:	call	0xaa20


0x14e72:	mov	r9, qword ptr [rsp + 0x68]
0x14e77:	test	r9, r9
0x14e7a:	jle	0x14f40


0x14fa8:	mov	rdi, qword ptr [r13 + 0x20]
0x14fac:	mov	qword ptr [r13 + 0x70], 0
0x14fb4:	mov	dword ptr [r13 + 0x80], 0xf
0x14fbf:	mov	qword ptr [r13 + 0x68], 0
0x14fc7:	call	0x1b00


0x14e80:	xor	r10d, r10d
0x14e83:	lea	r13, [r12 + 0x10]
0x14e88:	jmp	0x14e9d


0x14e9d:	mov	rcx, qword ptr [rsp + 0x70]
0x14ea2:	mov	rsi, qword ptr [rbx]
0x14ea5:	mov	r8, qword ptr [rcx + r10*8]
0x14ea9:	mov	rdi, r8
0x14eac:	shl	rdi, 4
0x14eb0:	add	rdi, rsi
0x14eb3:	cmp	byte ptr [rdi + 8], 4
0x14eb7:	jne	0x14e90


0x14eb9:	xor	edx, edx
0x14ebb:	jmp	0x14ec9


0x14e90:	add	r10, 1
0x14e94:	cmp	r9, r10
0x14e97:	jle	0x14f40


0x14ec9:	mov	rax, qword ptr [rcx + rdx*8]
0x14ecd:	shl	rax, 4
0x14ed1:	add	rax, rsi
0x14ed4:	cmp	byte ptr [rax + 8], 9
0x14ed8:	jne	0x14ec0


0x14eda:	mov	r11, qword ptr [rdi]
0x14edd:	cmp	qword ptr [rax], r11
0x14ee0:	jne	0x14ec0


0x14ec0:	add	rdx, 1
0x14ec4:	cmp	r9, rdx
0x14ec7:	je	0x14e90


0x14ee2:	mov	rdx, qword ptr [rbx + 0x28]
0x14ee6:	lea	rax, [r8 + r8*2]
0x14eea:	mov	rsi, r13
0x14eed:	mov	rdi, r9
0x14ef0:	lea	rax, [rdx + rax*8]
0x14ef4:	mov	rax, qword ptr [rax + 0x10]
0x14ef8:	mov	r11, qword ptr [rax]
0x14efb:	mov	rdx, r11
0x14efe:	call	0x96d0


0x14f03:	test	rax, rax
0x14f06:	jne	0x14e90


0x14f08:	mov	rax, qword ptr [rbx + 0x30]
0x14f0c:	lea	rdx, [r11 + r11*2]
0x14f10:	mov	rdi, r12
0x14f13:	lea	rsi, [rax + rdx*8]
0x14f17:	call	0x9bf0


0x14f1c:	test	eax, eax
0x14f1e:	jne	0x15260


0x14f24:	mov	r9, qword ptr [rsp + 0x68]
0x14f29:	mov	r10d, 1
0x14f2f:	cmp	r9, r10
0x14f32:	jg	0x14e9d


0x15260:	mov	r15d, eax
0x15263:	jmp	0x14f7f


0x14fa0:	test	r12, r12
0x14fa3:	mov	rdi, r12
0x14fa6:	jne	0x14f98


0x14f98:	mov	r12, qword ptr [rdi]
0x14f9b:	call	0x1b00


0x14fcc:	mov	qword ptr [r13 + 0x20], 0
0x14fd4:	mov	rdi, rbp
0x14fd7:	call	0x93c0


0x14fdc:	mov	eax, dword ptr [rsp + 0x4c]
0x14fe0:	test	eax, eax
0x14fe2:	je	0x1461c


0x14fe8:	jmp	0x145fc


0x14f52:	test	rax, rax
0x14f55:	mov	qword ptr [rbx + 0x48], rax
0x14f59:	je	0x150c2


0x150c2:	mov	r15d, dword ptr [rsp + 0x50]
0x150c7:	jmp	0x14f7f


0x14f5f:	cmp	byte ptr [rax + 0x68], 0
0x14f63:	js	0x15061


0x15061:	mov	r14, qword ptr [rsp + 0x28]
0x15066:	mov	ecx, 1
0x1506b:	mov	rdx, r12
0x1506e:	mov	rsi, rbx
0x15071:	mov	rdi, r14
0x15074:	call	0xaa20


0x14f69:	mov	qword ptr [rbx + 0x60], rax
0x14f6d:	mov	qword ptr [rbx + 0x58], rax
0x14f71:	mov	qword ptr [rbx + 0x50], rax
0x14f75:	mov	rdi, qword ptr [rsp + 0x70]
0x14f7a:	call	0x1b00


0x15079:	mov	ecx, 2
0x1507e:	mov	rdx, r12
0x15081:	mov	rsi, rbx
0x15084:	mov	rdi, r14
0x15087:	mov	qword ptr [rbx + 0x50], rax
0x1508b:	call	0xaa20


0x15090:	mov	ecx, 6
0x15095:	mov	qword ptr [rbx + 0x58], rax
0x15099:	mov	rdx, r12
0x1509c:	mov	rsi, rbx
0x1509f:	mov	rdi, r14
0x150a2:	call	0xaa20


0x150a7:	cmp	qword ptr [rbx + 0x50], 0
0x150ac:	mov	qword ptr [rbx + 0x60], rax
0x150b0:	je	0x150c2


0x150b2:	cmp	qword ptr [rbx + 0x58], 0
0x150b7:	je	0x150c2


0x150b9:	test	rax, rax
0x150bc:	jne	0x14f75


0x14f75:	mov	rdi, qword ptr [rsp + 0x70]
0x14f7a:	call	0x1b00


0x14d29:	test	rax, rax
0x14d2c:	mov	qword ptr [r13 + 0x38], rax
0x14d30:	je	0x1527c


0x1527c:	mov	rax, qword ptr [rsp + 8]
0x15281:	mov	dword ptr [rsp + 0x4c], 0xc
0x15289:	mov	r13, qword ptr [rax]
0x1528c:	jmp	0x145ac


0x14d36:	mov	rdx, qword ptr [rsp]
0x14d3a:	xor	esi, esi
0x14d3c:	xor	ecx, ecx
0x14d3e:	test	rdx, rdx
0x14d41:	jne	0x14d54


0x14d43:	jmp	0x14e0b


0x14d54:	pxor	xmm0, xmm0
0x14d58:	add	rax, rsi
0x14d5b:	add	rcx, 1
0x14d5f:	mov	qword ptr [rax + 0x10], 0
0x14d67:	add	rsi, 0x18
0x14d6b:	movups	xmmword ptr [rax], xmm0
0x14d6e:	mov	rax, qword ptr [r13 + 0x10]
0x14d72:	cmp	rcx, rax
0x14d75:	jb	0x14d50


0x14d50:	mov	rax, qword ptr [r13 + 0x38]
0x14d54:	pxor	xmm0, xmm0
0x14d58:	add	rax, rsi
0x14d5b:	add	rcx, 1
0x14d5f:	mov	qword ptr [rax + 0x10], 0
0x14d67:	add	rsi, 0x18
0x14d6b:	movups	xmmword ptr [rax], xmm0
0x14d6e:	mov	rax, qword ptr [r13 + 0x10]
0x14d72:	cmp	rcx, rax
0x14d75:	jb	0x14d50


0x14d77:	test	rax, rax
0x14d7a:	je	0x14e0b


0x14d80:	mov	rax, qword ptr [r13 + 0x30]
0x14d84:	mov	qword ptr [rsp + 0x18], 0
0x14d8d:	mov	qword ptr [rsp + 0x10], 0
0x14d96:	mov	rcx, qword ptr [rsp + 0x18]
0x14d9b:	lea	rdx, [rax + rcx]
0x14d9f:	cmp	qword ptr [rdx + 8], 0
0x14da4:	mov	rcx, qword ptr [rdx + 0x10]
0x14da8:	jle	0x14df4


0x14df4:	add	qword ptr [rsp + 0x10], 1
0x14dfa:	add	qword ptr [rsp + 0x18], 0x18
0x14e00:	mov	rdx, qword ptr [rsp + 0x10]
0x14e05:	cmp	rdx, qword ptr [r13 + 0x10]
0x14e09:	jb	0x14d96


0x14daa:	xor	r15d, r15d
0x14dad:	jmp	0x14dc8


0x14d96:	mov	rcx, qword ptr [rsp + 0x18]
0x14d9b:	lea	rdx, [rax + rcx]
0x14d9f:	cmp	qword ptr [rdx + 8], 0
0x14da4:	mov	rcx, qword ptr [rdx + 0x10]
0x14da8:	jle	0x14df4


0x14dc8:	mov	rax, qword ptr [rcx + r15*8]
0x14dcc:	mov	qword ptr [rsp], rcx
0x14dd0:	lea	rsi, [rax + rax*2]
0x14dd4:	mov	rax, qword ptr [r13 + 0x38]
0x14dd8:	lea	rdi, [rax + rsi*8]
0x14ddc:	mov	rsi, qword ptr [rsp + 0x10]
0x14de1:	call	0x8120


0x14de6:	test	al, al
0x14de8:	jne	0x14db0


0x14dea:	mov	eax, 0xc
0x14def:	jmp	0x145a0


0x14db0:	mov	rax, qword ptr [r13 + 0x30]
0x14db4:	mov	rdx, qword ptr [rsp + 0x18]
0x14db9:	add	r15, 1
0x14dbd:	mov	rcx, qword ptr [rsp]
0x14dc1:	cmp	r15, qword ptr [rax + rdx + 8]
0x14dc6:	jge	0x14df4


0x14caf:	test	eax, eax
0x14cb1:	jne	0x145a0


0x14cb7:	mov	rax, qword ptr [r13 + 0x30]
0x14cbb:	mov	r10, qword ptr [rsp]
0x14cbf:	add	r15, 1
0x14cc3:	cmp	qword ptr [rax + r10 + 8], 0
0x14cc9:	jne	0x14a78


0x14ccf:	mov	rdi, qword ptr [rsp + 0x70]
0x14cd4:	call	0x1b00


0x14a78:	mov	rdx, qword ptr [r13 + 0x10]
0x14a7c:	cmp	rdx, r15
0x14a7f:	je	0x14aa6


0x14cd9:	cmp	qword ptr [r13 + 0x10], r15
0x14cdd:	je	0x14aaf


0x14ce3:	movzx	r14d, byte ptr [rsp + 0x10]
0x14ce9:	jmp	0x14a81


0x140d1:	lea	rsi, [rip - 0xb288]
0x140d8:	mov	rdi, r14
0x140db:	xor	edx, edx
0x140dd:	xor	r14d, r14d
0x140e0:	call	0x7fb0


0x140e5:	mov	dword ptr [rbx], 0xc
0x140eb:	jmp	0x14070


0x2b12:	lea	rsi, [rip + 0x13624]
0x2b19:	mov	edx, 5
0x2b1e:	xor	edi, edi
0x2b20:	mov	rbp, rax
0x2b23:	call	0x1bf0


0x2b28:	mov	rbx, rax
0x2b2b:	call	0x1b20


0x2b30:	mov	esi, dword ptr [rax]
0x2b32:	mov	rcx, rbp
0x2b35:	mov	rdx, rbx
0x2b38:	mov	edi, 1
0x2b3d:	xor	eax, eax
0x2b3f:	call	0x1e60


0x3488:	lea	rsi, [rip + 0x12b1a]
0x348f:	mov	edx, 5
0x3494:	xor	edi, edi
0x3496:	mov	rbp, rax
0x3499:	call	0x1bf0


0x349e:	mov	rbx, rax
0x34a1:	call	0x1b20


0x34a6:	mov	esi, dword ptr [rax]
0x34a8:	mov	rcx, rbp
0x34ab:	mov	rdx, rbx
0x34ae:	xor	edi, edi
0x34b0:	xor	eax, eax
0x34b2:	call	0x1e60


0x34b7:	mov	qword ptr [rip + 0x218d06], 0
0x34c2:	call	0x3220


0x3417:	lea	rsi, [rip + 0x12b8b]
0x341e:	mov	rbx, rax
0x3421:	mov	edx, 5
0x3426:	xor	edi, edi
0x3428:	call	0x1bf0


0x342d:	mov	rcx, rbx
0x3430:	mov	rdx, rax
0x3433:	xor	esi, esi
0x3435:	jmp	0x33ed


0x33ed:	xor	edi, edi
0x33ef:	xor	eax, eax
0x33f1:	call	0x1e60


0x15f3d:	add	rbx, 1
0x15f41:	cmp	rbp, rbx
0x15f44:	jne	0x15f30


0x15f30:	mov	rdx, r15
0x15f33:	mov	rsi, r14
0x15f36:	mov	edi, r13d
0x15f39:	call	qword ptr [r12 + rbx*8]


0x7fde:	test	eax, eax
0x7fe0:	jne	0x8016


0x8016:	pop	rbx
0x8017:	pop	rbp
0x8018:	pop	r12
0x801a:	ret	


0x7ff0:	mov	rax, qword ptr [rdx + 0x10]
0x7ff4:	cmp	rax, rbx
0x7ff7:	mov	rbx, rdx
0x7ffa:	sete	sil
0x7ffe:	test	rax, rax
0x8001:	sete	cl
0x8004:	or	sil, cl
0x8007:	je	0x7fc0


0x8009:	mov	rsi, rbx
0x800c:	mov	rdi, rbp
0x800f:	call	r12


0x8012:	test	eax, eax
0x8014:	je	0x7fe8


0x7fe8:	mov	rdx, qword ptr [rbx]
0x7feb:	test	rdx, rdx
0x7fee:	je	0x8016


0x803c:	test	eax, eax
0x803e:	jne	0x806c


0x8040:	mov	rdx, qword ptr [rbx + 8]
0x8044:	xor	ecx, ecx
0x8046:	test	rdx, rdx
0x8049:	jne	0x8030


0x806c:	pop	rbx
0x806d:	pop	rbp
0x806e:	pop	r12
0x8070:	ret	


0x804b:	jmp	0x8053


0x8030:	mov	rbx, rdx
0x8033:	mov	rsi, rbx
0x8036:	mov	rdi, rbp
0x8039:	call	r12


0x8053:	mov	rdx, qword ptr [rbx + 0x10]
0x8057:	cmp	rdx, rcx
0x805a:	je	0x8061


0x8061:	mov	rdx, qword ptr [rbx]
0x8064:	mov	rcx, rbx
0x8067:	test	rdx, rdx
0x806a:	jne	0x8050


0x805c:	test	rdx, rdx
0x805f:	jne	0x8030


0x8050:	mov	rbx, rdx
0x8053:	mov	rdx, qword ptr [rbx + 0x10]
0x8057:	cmp	rdx, rcx
0x805a:	je	0x8061


0x2ee4:	lea	rsi, [rip + 0x13281]
0x2eeb:	mov	rbx, rax
0x2eee:	mov	edx, 5
0x2ef3:	xor	edi, edi
0x2ef5:	call	0x1bf0


0x2efa:	mov	rcx, rbx
0x2efd:	mov	rdx, rax
0x2f00:	xor	esi, esi
0x2f02:	xor	edi, edi
0x2f04:	xor	eax, eax
0x2f06:	call	0x1e60


0x2f0b:	call	0x3220


0x2538:	lea	rsi, [rip + 0x14459]
0x253f:	mov	rbx, rax
0x2542:	mov	edx, 5
0x2547:	xor	edi, edi
0x2549:	call	0x1bf0


0x254e:	mov	rcx, rbx
0x2551:	mov	rdx, rax
0x2554:	xor	esi, esi
0x2556:	mov	edi, 1
0x255b:	xor	eax, eax
0x255d:	call	0x1e60


0x2cc5:	lea	rsi, [rip + 0x13ca4]
0x2ccc:	mov	rbx, rax
0x2ccf:	mov	edx, 5
0x2cd4:	xor	edi, edi
0x2cd6:	call	0x1bf0


0x2cdb:	mov	r8, r15
0x2cde:	mov	rdx, rax
0x2ce1:	mov	rcx, rbx
0x2ce4:	xor	esi, esi
0x2ce6:	xor	edi, edi
0x2ce8:	xor	eax, eax
0x2cea:	call	0x1e60


0x2cef:	call	0x3220


0x2d37:	lea	rsi, [rip + 0x13cb2]
0x2d3e:	mov	rbx, rax
0x2d41:	mov	edx, 5
0x2d46:	xor	edi, edi
0x2d48:	call	0x1bf0


0x2d4d:	mov	r8, r12
0x2d50:	mov	rdx, rax
0x2d53:	mov	rcx, rbx
0x2d56:	xor	esi, esi
0x2d58:	mov	edi, 1
0x2d5d:	xor	eax, eax
0x2d5f:	call	0x1e60


0x2e40:	lea	rsi, [rip + 0x13c51]
0x2e47:	mov	rbx, rax
0x2e4a:	mov	edx, 5
0x2e4f:	xor	edi, edi
0x2e51:	call	0x1bf0


0x2e56:	mov	rcx, rbx
0x2e59:	mov	rdx, rax
0x2e5c:	xor	esi, esi
0x2e5e:	mov	edi, 1
0x2e63:	xor	eax, eax
0x2e65:	call	0x1e60


0x2e72:	lea	rsi, [rip + 0x13bf7]
0x2e79:	mov	rbx, rax
0x2e7c:	mov	edx, 5
0x2e81:	xor	edi, edi
0x2e83:	call	0x1bf0


0x2e88:	mov	rcx, rbx
0x2e8b:	mov	rdx, rax
0x2e8e:	xor	esi, esi
0x2e90:	mov	edi, 1
0x2e95:	xor	eax, eax
0x2e97:	call	0x1e60


0x27a3:	lea	rsi, [rip + 0x14286]
0x27aa:	mov	rbp, rax
0x27ad:	mov	edx, 5
0x27b2:	xor	edi, edi
0x27b4:	call	0x1bf0


0x27b9:	mov	rcx, rbp
0x27bc:	mov	rdx, rax
0x27bf:	xor	esi, esi
0x27c1:	xor	eax, eax
0x27c3:	xor	edi, edi
0x27c5:	call	0x1e60


0x27ca:	mov	rax, qword ptr [rsp + 0x30]
0x27cf:	jmp	0x2425


0x2c93:	lea	rsi, [rip + 0x134be]
0x2c9a:	mov	rbx, rax
0x2c9d:	mov	edx, 5
0x2ca2:	xor	edi, edi
0x2ca4:	call	0x1bf0


0x2ca9:	mov	rcx, rbx
0x2cac:	mov	rdx, rax
0x2caf:	xor	esi, esi
0x2cb1:	mov	edi, 1
0x2cb6:	xor	eax, eax
0x2cb8:	call	0x1e60


0x2f55:	lea	rsi, [rip + 0x131c8]
0x2f5c:	mov	rbx, rax
0x2f5f:	xor	edi, edi
0x2f61:	mov	edx, 5
0x2f66:	call	0x1bf0


0x2f6b:	mov	rcx, rbx
0x2f6e:	mov	rdx, rax
0x2f71:	xor	esi, esi
0x2f73:	xor	edi, edi
0x2f75:	xor	eax, eax
0x2f77:	call	0x1e60


0x2f7c:	jmp	0x2d8f


0x6bd4:	mov	esi, dword ptr [r14]
0x6bd7:	mov	r8, rax
0x6bda:	mov	eax, 0
0x6bdf:	lea	rdx, [rip + 0xff77]
0x6be6:	mov	rcx, r13
0x6be9:	cmp	esi, 0x16
0x6bec:	cmove	esi, eax
0x6bef:	test	ebx, ebx
0x6bf1:	mov	eax, 1
0x6bf6:	cmove	ebx, eax
0x6bf9:	xor	eax, eax
0x6bfb:	mov	edi, ebx
0x6bfd:	call	0x1e60


0x6c02:	mov	rbp, qword ptr [rsp]
0x6c06:	mov	rdx, qword ptr [rsp + 8]
0x6c0b:	xor	rdx, qword ptr fs:[0x28]
0x6c14:	mov	rax, rbp
0x6c17:	jne	0x6c6c


0x3640:	lea	rsi, [rip + 0x12ba9]
0x3647:	xor	edi, edi
0x3649:	mov	r12, qword ptr [rip + 0x218be8]
0x3650:	mov	edx, 5
0x3655:	mov	r13, rax
0x3658:	call	0x1bf0


0x365d:	mov	rdi, qword ptr [rip + 0x218a7c]
0x3664:	mov	rdx, rax
0x3667:	mov	r8, r13
0x366a:	xor	eax, eax
0x366c:	mov	rcx, r12
0x366f:	mov	esi, 1
0x3674:	call	0x1f00


0x3679:	test	rbx, rbx
0x367c:	je	0x36bd


0x36bd:	mov	rsi, qword ptr [rip + 0x218a1c]
0x36c4:	mov	edi, 0xa
0x36c9:	call	0x1cd0


0x367e:	mov	rdi, rbx
0x3681:	mov	rsi, rbp
0x3684:	call	0x4500


0x1cd0:	jmp	qword ptr [rip + 0x21a1b2]




0x3689:	lea	rsi, [rip + 0x1292e]
0x3690:	mov	edx, 5
0x3695:	xor	edi, edi
0x3697:	mov	rbx, rax
0x369a:	call	0x1bf0


0x369f:	mov	rdi, qword ptr [rip + 0x218a3a]
0x36a6:	mov	rdx, rax
0x36a9:	mov	rcx, rbx
0x36ac:	mov	esi, 1
0x36b1:	xor	eax, eax
0x36b3:	call	0x1f00


0x36b8:	call	0x3220


0x36ce:	jmp	0x36b8


0x1fb3:	lea	rsi, [rip + 0x14033]
0x1fba:	xor	edi, edi
0x1fbc:	mov	r12, qword ptr [rip + 0x21a275]
0x1fc3:	mov	edx, 5
0x1fc8:	mov	r13, rax
0x1fcb:	call	0x1bf0


0x1fd0:	mov	rdi, qword ptr [rip + 0x21a109]
0x1fd7:	mov	rdx, rax
0x1fda:	mov	r8, r13
0x1fdd:	xor	eax, eax
0x1fdf:	mov	rcx, r12
0x1fe2:	mov	esi, 1
0x1fe7:	call	0x1f00


0x1fec:	test	rbx, rbx
0x1fef:	je	0x202d


0x202d:	mov	rsi, qword ptr [rip + 0x21a0ac]
0x2034:	mov	edi, 0xa
0x2039:	call	0x1cd0


0x1ff1:	mov	rsi, rsp
0x1ff4:	mov	rdi, rbx
0x1ff7:	call	0x4500


0x1ffc:	lea	rsi, [rip + 0x13fbb]
0x2003:	xor	edi, edi
0x2005:	mov	edx, 5
0x200a:	mov	rbx, rax
0x200d:	call	0x1bf0


0x2012:	mov	rdi, qword ptr [rip + 0x21a0c7]
0x2019:	mov	rdx, rax
0x201c:	mov	rcx, rbx
0x201f:	mov	esi, 1
0x2024:	xor	eax, eax
0x2026:	call	0x1f00


0x202b:	jmp	0x203e


0x203e:	test	bpl, bpl
0x2041:	jne	0x204d


0x2043:	call	0x3d70


0x204d:	call	0x3220


0x2048:	call	0x3280






0x6580:	lea	rsi, [rip + 0x10c71]
0x6587:	mov	edx, 5
0x658c:	xor	edi, edi
0x658e:	mov	r14, qword ptr [rbx + 0x18]
0x6592:	mov	r13, qword ptr [rbx + 0x10]
0x6596:	mov	r12, qword ptr [rbx + 8]
0x659a:	mov	rbx, qword ptr [rbx]
0x659d:	call	0x1bf0


0x63a0:	mov	r9, qword ptr [rbx + 0x38]
0x63a4:	mov	rax, qword ptr [rbx + 0x10]
0x63a8:	lea	rsi, [rip + 0x10ee9]
0x63af:	mov	r8, qword ptr [rbx + 8]
0x63b3:	mov	edx, 5
0x63b8:	xor	edi, edi
0x63ba:	mov	r13, qword ptr [rbx + 0x30]
0x63be:	mov	r12, qword ptr [rbx + 0x28]
0x63c2:	mov	qword ptr [rsp + 0x10], r9
0x63c7:	mov	r15, qword ptr [rbx + 0x20]
0x63cb:	mov	r14, qword ptr [rbx + 0x18]
0x63cf:	mov	qword ptr [rsp], rax
0x63d3:	mov	qword ptr [rsp + 8], r8
0x63d8:	mov	rbx, qword ptr [rbx]
0x63db:	call	0x1bf0


0x64a8:	mov	rbx, qword ptr [rbx]
0x64ab:	lea	rsi, [rip + 0x10bed]
0x64b2:	mov	edx, 5
0x64b7:	xor	edi, edi
0x64b9:	call	0x1bf0


0x64e8:	mov	r12, qword ptr [rbx + 8]
0x64ec:	lea	rsi, [rip + 0x10bbc]
0x64f3:	mov	rbx, qword ptr [rbx]
0x64f6:	mov	edx, 5
0x64fb:	xor	edi, edi
0x64fd:	call	0x1bf0


0x6608:	mov	r8, qword ptr [rbx + 8]
0x660c:	mov	r12, qword ptr [rbx + 0x28]
0x6610:	lea	rsi, [rip + 0x10c29]
0x6617:	mov	r15, qword ptr [rbx + 0x20]
0x661b:	mov	r14, qword ptr [rbx + 0x18]
0x661f:	mov	edx, 5
0x6624:	mov	r13, qword ptr [rbx + 0x10]
0x6628:	xor	edi, edi
0x662a:	mov	rbx, qword ptr [rbx]
0x662d:	mov	qword ptr [rsp], r8
0x6631:	call	0x1bf0


0x6530:	mov	r13, qword ptr [rbx + 0x10]
0x6534:	mov	r12, qword ptr [rbx + 8]
0x6538:	lea	rsi, [rip + 0x10b87]
0x653f:	mov	rbx, qword ptr [rbx]
0x6542:	mov	edx, 5
0x6547:	xor	edi, edi
0x6549:	call	0x1bf0


0x6670:	mov	r9, qword ptr [rbx + 0x10]
0x6674:	mov	r13, qword ptr [rbx + 0x30]
0x6678:	lea	rsi, [rip + 0x10be9]
0x667f:	mov	r12, qword ptr [rbx + 0x28]
0x6683:	mov	r15, qword ptr [rbx + 0x20]
0x6687:	mov	edx, 5
0x668c:	mov	r14, qword ptr [rbx + 0x18]
0x6690:	mov	r8, qword ptr [rbx + 8]
0x6694:	xor	edi, edi
0x6696:	mov	qword ptr [rsp + 8], r9
0x669b:	mov	rbx, qword ptr [rbx]
0x669e:	mov	qword ptr [rsp], r8
0x66a2:	call	0x1bf0


0x6450:	mov	r10, qword ptr [rbx + 0x40]
0x6454:	mov	r9, qword ptr [rbx + 0x38]
0x6458:	lea	rsi, [rip + 0x10e69]
0x645f:	mov	rax, qword ptr [rbx + 0x10]
0x6463:	mov	r8, qword ptr [rbx + 8]
0x6467:	mov	edx, 5
0x646c:	mov	r13, qword ptr [rbx + 0x30]
0x6470:	mov	r12, qword ptr [rbx + 0x28]
0x6474:	mov	r15, qword ptr [rbx + 0x20]
0x6478:	mov	r14, qword ptr [rbx + 0x18]
0x647c:	mov	rbx, qword ptr [rbx]
0x647f:	mov	qword ptr [rsp + 0x18], r10
0x6484:	mov	qword ptr [rsp + 0x10], r9
0x6489:	mov	qword ptr [rsp], rax
0x648d:	mov	qword ptr [rsp + 8], r8
0x6492:	xor	edi, edi
0x6494:	call	0x1bf0


0x6416:	add	rsp, 0x28
0x641a:	pop	rbx
0x641b:	pop	rbp
0x641c:	pop	r12
0x641e:	pop	r13
0x6420:	pop	r14
0x6422:	pop	r15
0x6424:	ret	


0x65d8:	mov	r15, qword ptr [rbx + 0x20]
0x65dc:	lea	rsi, [rip + 0x10c35]
0x65e3:	mov	edx, 5
0x65e8:	xor	edi, edi
0x65ea:	mov	r14, qword ptr [rbx + 0x18]
0x65ee:	mov	r13, qword ptr [rbx + 0x10]
0x65f2:	mov	r12, qword ptr [rbx + 8]
0x65f6:	mov	rbx, qword ptr [rbx]
0x65f9:	call	0x1bf0


0x10b42:	cmp	qword ptr [rsp + 0x70], rbp
0x10b47:	jle	0x1067f


0x10bb4:	cmp	qword ptr [rsp + 0x90], rbp
0x10bbc:	jg	0x11059


0x1061e:	cmp	qword ptr [rsp + 0x70], rbp
0x10623:	jle	0x1067f


0x1067f:	cmp	qword ptr [rsp + 0x70], rbp
0x10684:	jne	0x106c8


0x10b4d:	mov	rax, qword ptr [rsp + 0x78]
0x10b52:	mov	rdi, qword ptr [rsp + 0xb0]
0x10b5a:	mov	rsi, qword ptr [rsp + 0x68]
0x10b5f:	movzx	eax, byte ptr [rax + rbp]
0x10b63:	movzx	edx, byte ptr [rdi + rax]
0x10b67:	lea	rax, [rbp + 1]
0x10b6b:	cmp	byte ptr [rsi + rdx], 0
0x10b6f:	jne	0x106c8


0x10bc2:	xor	ecx, ecx
0x10bc4:	mov	rax, rbp
0x10bc7:	mov	rdi, qword ptr [rsp + 0x68]
0x10bcc:	mov	rsi, qword ptr [rsp + 0xb0]
0x10bd4:	mov	r9, qword ptr [rsp + 0x90]
0x10bdc:	mov	r10, qword ptr [rsp + 0x78]
0x10be1:	mov	r8, qword ptr [rsp + 0x88]
0x10be9:	jmp	0x10c02


0x10625:	mov	rax, qword ptr [rsp + 0x78]
0x1062a:	mov	rdi, qword ptr [rsp + 0x68]
0x1062f:	movzx	edx, byte ptr [rax + rbp]
0x10633:	lea	rax, [rbp + 1]
0x10637:	cmp	byte ptr [rdi + rdx], 0
0x1063b:	jne	0x106c8


0x10686:	xor	eax, eax
0x10688:	mov	rsi, qword ptr [rsp + 0x70]
0x1068d:	cmp	qword ptr [rsp + 0x88], rsi
0x10695:	jle	0x106a0


0x10b75:	mov	rsi, qword ptr [rsp + 0x68]
0x10b7a:	mov	rdi, qword ptr [rsp + 0xb0]
0x10b82:	mov	rcx, qword ptr [rsp + 0x70]
0x10b87:	mov	r8, qword ptr [rsp + 0x78]
0x10b8c:	jmp	0x10ba7


0x10c02:	xor	edx, edx
0x10c04:	cmp	r8, rax
0x10c07:	jle	0x10c0e


0x10641:	mov	rsi, qword ptr [rsp + 0x68]
0x10646:	mov	rcx, qword ptr [rsp + 0x70]
0x1064b:	mov	rdi, qword ptr [rsp + 0x78]
0x10650:	jmp	0x1066a


0x106a0:	mov	rsi, qword ptr [rsp + 0xb0]
0x106a8:	test	rsi, rsi
0x106ab:	je	0x106b1


0x10697:	mov	rax, qword ptr [rsp + 0x78]
0x1069c:	movzx	eax, byte ptr [rax + rsi]
0x106a0:	mov	rsi, qword ptr [rsp + 0xb0]
0x106a8:	test	rsi, rsi
0x106ab:	je	0x106b1


0x10ba7:	cmp	rcx, rax
0x10baa:	mov	rbp, rax
0x10bad:	jne	0x10b90


0x10c0e:	test	rsi, rsi
0x10c11:	je	0x10c17


0x10c09:	movzx	edx, byte ptr [r10 + rax]
0x10c0e:	test	rsi, rsi
0x10c11:	je	0x10c17


0x1066a:	cmp	rcx, rax
0x1066d:	mov	rbp, rax
0x10670:	jne	0x10658


0x106b1:	mov	rdi, qword ptr [rsp + 0x68]
0x106b6:	cmp	byte ptr [rdi + rax], 0
0x106ba:	je	0x11059


0x106ad:	movzx	eax, byte ptr [rsi + rax]
0x106b1:	mov	rdi, qword ptr [rsp + 0x68]
0x106b6:	cmp	byte ptr [rdi + rax], 0
0x106ba:	je	0x11059


0x10baf:	jmp	0x10672


0x10b90:	movzx	eax, byte ptr [r8 + rax]
0x10b95:	movzx	edx, byte ptr [rdi + rax]
0x10b99:	lea	rax, [rbp + 1]
0x10b9d:	cmp	byte ptr [rsi + rdx], 0
0x10ba1:	jne	0x11801


0x10c17:	cmp	byte ptr [rdi + rdx], 0
0x10c1b:	je	0x10bf0


0x10c13:	movzx	edx, byte ptr [rsi + rdx]
0x10c17:	cmp	byte ptr [rdi + rdx], 0
0x10c1b:	je	0x10bf0


0x10672:	mov	rax, qword ptr [rsp + 0x70]
0x10677:	mov	qword ptr [rsp + 0xd8], rax
0x1067f:	cmp	qword ptr [rsp + 0x70], rbp
0x10684:	jne	0x106c8


0x10658:	movzx	edx, byte ptr [rdi + rax]
0x1065c:	lea	rax, [rax + 1]
0x10660:	cmp	byte ptr [rsi + rdx], 0
0x10664:	jne	0x11801


0x106c0:	mov	rbp, qword ptr [rsp + 0x70]
0x106c5:	nop	dword ptr [rax]
0x106c8:	mov	edx, dword ptr [rsp + 0x280]
0x106cf:	mov	rdi, qword ptr [rsp]
0x106d3:	mov	rsi, rbp
0x106d6:	call	0xb780


0x11801:	mov	qword ptr [rsp + 0xd8], rbp
0x11809:	jmp	0x106c8


0x10bf0:	sub	rax, 1
0x10bf4:	mov	ecx, 1
0x10bf9:	cmp	rax, r9
0x10bfc:	jl	0x115e0


0x10c1d:	test	cl, cl
0x10c1f:	je	0x106c8


0x115e0:	mov	qword ptr [rsp + 0xd8], rax
0x115e8:	mov	rdi, qword ptr [rsp + 0x1d8]
0x115f0:	mov	dword ptr [rsp + 0x5c], 1
0x115f8:	jmp	0x10c48


0x10c25:	mov	qword ptr [rsp + 0xd8], rax
0x10c2d:	mov	rbp, rax
0x10c30:	jmp	0x106c8


0x65fe:	push	r15
0x6600:	jmp	0x65a6


0x65a6:	push	r14
0x65a8:	mov	rdx, rax
0x65ab:	mov	r9, r13
0x65ae:	mov	r8, r12
0x65b1:	mov	rcx, rbx
0x65b4:	mov	rdi, rbp
0x65b7:	mov	esi, 1
0x65bc:	xor	eax, eax
0x65be:	call	0x1f00


0x65c3:	pop	rax
0x65c4:	pop	rdx
0x65c5:	add	rsp, 0x28
0x65c9:	pop	rbx
0x65ca:	pop	rbp
0x65cb:	pop	r12
0x65cd:	pop	r13
0x65cf:	pop	r14
0x65d1:	pop	r15
0x65d3:	ret	


0x66a7:	push	r13
0x66a9:	push	r12
0x66ab:	push	r15
0x66ad:	push	r14
0x66af:	mov	r9, qword ptr [rsp + 0x28]
0x66b4:	jmp	0x6643


0x6643:	mov	r8, qword ptr [rsp + 0x20]
0x6648:	mov	rcx, rbx
0x664b:	mov	rdx, rax
0x664e:	mov	rdi, rbp
0x6651:	mov	esi, 1
0x6656:	xor	eax, eax
0x6658:	call	0x1f00


0x665d:	add	rsp, 0x20
0x6661:	add	rsp, 0x28
0x6665:	pop	rbx
0x6666:	pop	rbp
0x6667:	pop	r12
0x6669:	pop	r13
0x666b:	pop	r14
0x666d:	pop	r15
0x666f:	ret	


0x654e:	add	rsp, 0x28
0x6552:	mov	r9, r13
0x6555:	mov	r8, r12
0x6558:	mov	rcx, rbx
0x655b:	mov	rdi, rbp
0x655e:	mov	rdx, rax
0x6561:	pop	rbx
0x6562:	pop	rbp
0x6563:	pop	r12
0x6565:	pop	r13
0x6567:	pop	r14
0x6569:	pop	r15
0x656b:	mov	esi, 1
0x6570:	xor	eax, eax
0x6572:	jmp	0x1f00


0x6636:	sub	rsp, 8
0x663a:	mov	r9, r13
0x663d:	push	r12
0x663f:	push	r15
0x6641:	push	r14
0x6643:	mov	r8, qword ptr [rsp + 0x20]
0x6648:	mov	rcx, rbx
0x664b:	mov	rdx, rax
0x664e:	mov	rdi, rbp
0x6651:	mov	esi, 1
0x6656:	xor	eax, eax
0x6658:	call	0x1f00


0x6502:	add	rsp, 0x28
0x6506:	mov	r8, r12
0x6509:	mov	rcx, rbx
0x650c:	mov	rdi, rbp
0x650f:	mov	rdx, rax
0x6512:	mov	esi, 1
0x6517:	pop	rbx
0x6518:	pop	rbp
0x6519:	pop	r12
0x651b:	pop	r13
0x651d:	pop	r14
0x651f:	pop	r15
0x6521:	xor	eax, eax
0x6523:	jmp	0x1f00


0x64be:	add	rsp, 0x28
0x64c2:	mov	rcx, rbx
0x64c5:	mov	rdi, rbp
0x64c8:	pop	rbx
0x64c9:	pop	rbp
0x64ca:	pop	r12
0x64cc:	pop	r13
0x64ce:	pop	r14
0x64d0:	pop	r15
0x64d2:	mov	rdx, rax
0x64d5:	mov	esi, 1
0x64da:	xor	eax, eax
0x64dc:	jmp	0x1f00


0x63e0:	sub	rsp, 8
0x63e4:	mov	r9, qword ptr [rsp + 0x18]
0x63e9:	mov	rdx, rax
0x63ec:	mov	rcx, rbx
0x63ef:	mov	esi, 1
0x63f4:	mov	rdi, rbp
0x63f7:	xor	eax, eax
0x63f9:	push	r9
0x63fb:	push	r13
0x63fd:	push	r12
0x63ff:	push	r15
0x6401:	push	r14
0x6403:	mov	r9, qword ptr [rsp + 0x30]
0x6408:	mov	r8, qword ptr [rsp + 0x38]
0x640d:	call	0x1f00


0x65a2:	sub	rsp, 8
0x65a6:	push	r14
0x65a8:	mov	rdx, rax
0x65ab:	mov	r9, r13
0x65ae:	mov	r8, r12
0x65b1:	mov	rcx, rbx
0x65b4:	mov	rdi, rbp
0x65b7:	mov	esi, 1
0x65bc:	xor	eax, eax
0x65be:	call	0x1f00


0x5280:	sub	rsp, 8
0x5284:	mov	rcx, rbp
0x5287:	mov	rsi, r13
0x528a:	push	qword ptr [rsp + 0x68]
0x528e:	push	qword ptr [rsp + 0x78]
0x5292:	mov	rdi, r14
0x5295:	push	0
0x5297:	mov	r9d, dword ptr [rsp + 0x98]
0x529f:	mov	r8d, dword ptr [rsp + 0x28]
0x52a4:	mov	rdx, qword ptr [rsp + 0x30]
0x52a9:	and	r9d, 0xfffffffd
0x52ad:	call	0x46e0


0x52b2:	add	rsp, 0x20
0x52b6:	mov	r15, rax
0x52b9:	mov	rbx, qword ptr [rsp + 0xa8]
0x52c1:	xor	rbx, qword ptr fs:[0x28]
0x52ca:	mov	rax, r15
0x52cd:	jne	0x58d3


0x52d3:	add	rsp, 0xb8
0x52da:	pop	rbx
0x52db:	pop	rbp
0x52dc:	pop	r12
0x52de:	pop	r13
0x52e0:	pop	r14
0x52e2:	pop	r15
0x52e4:	ret	


0x58d3:	call	0x1c20


0x587d:	sub	rsp, 8
0x5881:	mov	r8d, 5
0x5887:	mov	rcx, r11
0x588a:	push	qword ptr [rsp + 0x68]
0x588e:	push	qword ptr [rsp + 0x78]
0x5892:	mov	rdi, r14
0x5895:	push	qword ptr [rsp + 0x38]
0x5899:	mov	r9d, dword ptr [rsp + 0x98]
0x58a1:	mov	rdx, qword ptr [rsp + 0x30]
0x58a6:	mov	rsi, qword ptr [rsp + 0x70]
0x58ab:	call	0x46e0


0x58b0:	add	rsp, 0x20
0x58b4:	mov	r15, rax
0x58b7:	jmp	0x52b9


0x52b9:	mov	rbx, qword ptr [rsp + 0xa8]
0x52c1:	xor	rbx, qword ptr fs:[0x28]
0x52ca:	mov	rax, r15
0x52cd:	jne	0x58d3


0x13789:	sub	rsp, 8
0x1378d:	mov	rdi, qword ptr [r14 + 0x78]
0x13791:	lea	rdx, [r13 + 0x18]
0x13795:	push	qword ptr [rsp + 0x28]
0x13799:	mov	r9, qword ptr [rsp + 0xb8]
0x137a1:	lea	rcx, [r13 + 0x48]
0x137a5:	mov	r8, qword ptr [rsp + 0x68]
0x137aa:	mov	rsi, r12
0x137ad:	call	0xced0


0x137b2:	mov	rdx, qword ptr [rsp + 0x50]
0x137b7:	test	eax, eax
0x137b9:	mov	dword ptr [rdx], eax
0x137bb:	pop	r9
0x137bd:	pop	r10
0x137bf:	je	0x136d0


0x136d0:	movzx	eax, byte ptr [r15 + 8]
0x136d5:	cmp	al, 2
0x136d7:	je	0x13871


0x137c5:	jmp	0x13708


0x13871:	mov	rax, qword ptr [rsp + 0x40]
0x13876:	mov	dword ptr [rax], 7
0x1387c:	jmp	0x13708


0x136dd:	cmp	al, 0x15
0x136df:	je	0x13af2


0x13708:	mov	rdi, r12
0x1370b:	call	0x1b00


0x13af2:	add	qword ptr [r14 + 0x48], rbx
0x13af6:	cmp	byte ptr [rsp + 0x57], 0
0x13afb:	je	0x13b11


0x136e5:	xor	r9d, r9d
0x136e8:	jmp	0x13372


0x13b11:	mov	rax, qword ptr [rsp + 0x10]
0x13b16:	mov	edx, dword ptr [rax + 0xb4]
0x13b1c:	cmp	edx, 1
0x13b1f:	jle	0x13b39


0x13afd:	lea	rdx, [r12 + 0x20]
0x13b02:	mov	rax, r12
0x13b05:	not	qword ptr [rax]
0x13b08:	add	rax, 8
0x13b0c:	cmp	rdx, rax
0x13b0f:	jne	0x13b05


0x13372:	mov	rax, qword ptr [rsp + 0x28]
0x13377:	mov	r8, qword ptr [rsp + 0x20]
0x1337c:	and	r9d, 1
0x13380:	mov	rdi, qword ptr [rsp]
0x13384:	mov	ecx, ebx
0x13386:	mov	rdx, r15
0x13389:	mov	rsi, r14
0x1338c:	mov	dword ptr [rsp + 0xa0], 3
0x13397:	mov	qword ptr [rsp + 0xa8], rax
0x1339f:	call	0x12070


0x13b39:	cmp	qword ptr [r13 + 0x28], 0
0x13b3e:	jne	0x13bc8


0x13b21:	mov	rcx, qword ptr [rax + 0x78]
0x13b25:	xor	eax, eax
0x13b27:	mov	rsi, qword ptr [rcx + rax]
0x13b2b:	and	qword ptr [r12 + rax], rsi
0x13b2f:	add	rax, 8
0x13b33:	cmp	rax, 0x20
0x13b37:	jne	0x13b27


0x13b05:	not	qword ptr [rax]
0x13b08:	add	rax, 8
0x13b0c:	cmp	rdx, rax
0x13b0f:	jne	0x13b05


0x13b44:	cmp	qword ptr [r13 + 0x30], 0
0x13b49:	jne	0x13bc8


0x13bc8:	mov	rax, qword ptr [rsp + 0x10]
0x13bcd:	lea	r15, [rsp + 0xb0]
0x13bd5:	xor	edx, edx
0x13bd7:	xor	ecx, ecx
0x13bd9:	mov	r8, r15
0x13bdc:	or	byte ptr [rax + 0xb0], 2
0x13be3:	lea	rbx, [rax + 0x70]
0x13be7:	lea	rbp, [rax + 0x80]
0x13bee:	mov	byte ptr [rsp + 0xb8], 6
0x13bf6:	mov	qword ptr [rsp + 0xb0], r13
0x13bfe:	mov	rdi, rbx
0x13c01:	mov	rsi, rbp
0x13c04:	call	0xa390


0x13b27:	mov	rsi, qword ptr [rcx + rax]
0x13b2b:	and	qword ptr [r12 + rax], rsi
0x13b2f:	add	rax, 8
0x13b33:	cmp	rax, 0x20
0x13b37:	jne	0x13b27


0x13b4b:	cmp	qword ptr [r13 + 0x38], 0
0x13b50:	jne	0x13bc8


0x13b52:	cmp	qword ptr [r13 + 0x40], 0
0x13b57:	jne	0x13bc8


0x13b59:	sub	edx, 1
0x13b5c:	jle	0x13b6c


0x13b6c:	mov	rdi, r13
0x13b6f:	call	0x8df0


0x13b5e:	cmp	qword ptr [r13 + 0x48], 0
0x13b63:	jne	0x13bc8


0x13b65:	test	byte ptr [r13 + 0x20], 1
0x13b6a:	jne	0x13bc8


0x13b74:	mov	rax, qword ptr [rsp + 0x10]
0x13b79:	lea	r8, [rsp + 0xb0]
0x13b81:	xor	ecx, ecx
0x13b83:	xor	edx, edx
0x13b85:	mov	byte ptr [rsp + 0xb8], 3
0x13b8d:	mov	qword ptr [rsp + 0xb0], r12
0x13b95:	lea	rsi, [rax + 0x80]
0x13b9c:	lea	rdi, [rax + 0x70]
0x13ba0:	call	0xa390


0x13ba5:	test	rax, rax
0x13ba8:	mov	qword ptr [rsp + 0x28], rax
0x13bad:	jne	0x12c2c


0x13bb3:	mov	rax, qword ptr [rsp + 0x40]
0x13bb8:	mov	dword ptr [rax], 0xc
0x13bbe:	jmp	0x13708


0x12c2c:	mov	rbx, qword ptr [rsp + 0x18]
0x12c31:	mov	rdx, qword ptr [rsp + 0x20]
0x12c36:	mov	rsi, r14
0x12c39:	lea	r15, [rsp + 0xc0]
0x12c41:	mov	rdi, rbx
0x12c44:	call	0x122d0


0x12c49:	cdqe	
0x12c4b:	add	qword ptr [r14 + 0x48], rax
0x12c4f:	movzx	eax, byte ptr [rbx + 8]
0x12c53:	nop	dword ptr [rax + rax]
0x12c58:	cmp	al, 0x17
0x12c5a:	ja	0x12ba0


0x12c60:	cmp	al, 0x12
0x12c62:	mov	ecx, 0x8c0800
0x12c67:	sete	bl
0x12c6a:	bt	rcx, rax
0x12c6e:	jae	0x12ba0


0x12ba0:	mov	rdi, qword ptr [rsp + 0x118]
0x12ba8:	xor	rdi, qword ptr fs:[0x28]
0x12bb1:	mov	rax, qword ptr [rsp + 0x28]
0x12bb6:	jne	0x13f2e


0x12c74:	mov	rcx, qword ptr [rsp + 0x18]
0x12c79:	cmp	al, 0x17
0x12c7b:	mov	rbp, qword ptr [r14 + 0x48]
0x12c7f:	movdqa	xmm0, xmmword ptr [rcx]
0x12c83:	je	0x12fa8


0x12fa8:	mov	rdx, qword ptr [rsp + 0x20]
0x12fad:	mov	rsi, rcx
0x12fb0:	mov	rdi, r14
0x12fb3:	movaps	xmmword ptr [rsp], xmm0
0x12fb7:	call	0x129d0


0x12c89:	cmp	al, 0x13
0x12c8b:	movzx	ebx, bl
0x12c8e:	je	0x12f40


0x12f40:	mov	qword ptr [rsp], 1
0x12f48:	mov	rdx, qword ptr [rsp + 0x20]
0x12f4d:	mov	rdi, qword ptr [rsp + 0x18]
0x12f52:	mov	rsi, r14
0x12f55:	call	0x122d0


0x12c94:	mov	rdx, qword ptr [rsp + 0x20]
0x12c99:	mov	rdi, qword ptr [rsp + 0x18]
0x12c9e:	mov	rsi, r14
0x12ca1:	call	0x122d0


0x12ca6:	cdqe	
0x12ca8:	add	qword ptr [r14 + 0x48], rax
0x12cac:	cmp	qword ptr [rsp + 0x28], 0
0x12cb2:	je	0x13040


0x13040:	mov	rax, qword ptr [rsp + 0x40]
0x13045:	mov	ecx, dword ptr [rax]
0x13047:	test	ecx, ecx
0x13049:	je	0x12f97


0x12cb8:	mov	qword ptr [rsp], -1
0x12cc0:	test	rbx, rbx
0x12cc3:	mov	rbp, qword ptr [rsp + 0x28]
0x12cc8:	mov	qword ptr [rsp + 0x30], 0
0x12cd1:	jg	0x12e50


0x12f97:	mov	qword ptr [rsp + 0x28], 0
0x12fa0:	jmp	0x12dee


0x1304f:	jmp	0x12b90


0x12cd7:	cmp	byte ptr [rbp + 0x30], 0x11
0x12cdb:	je	0x13020


0x12e50:	cmp	rbx, 1
0x12e54:	je	0x1368c


0x12dee:	test	qword ptr [rsp + 0x20], 0x1000000
0x12df7:	mov	rax, qword ptr [rsp + 0x18]
0x12dfc:	movzx	eax, byte ptr [rax + 8]
0x12e00:	je	0x12c58


0x13020:	mov	rdx, qword ptr [rbp + 0x28]
0x13024:	lea	rsi, [rip - 0xb33b]
0x1302b:	mov	rdi, rbp
0x1302e:	call	0x7fb0


0x12ce1:	cmp	qword ptr [rsp], -1
0x12ce6:	mov	rdx, rbp
0x12ce9:	mov	r8, r15
0x12cec:	sete	al
0x12cef:	xor	ecx, ecx
0x12cf1:	add	eax, 0xa
0x12cf4:	mov	byte ptr [rsp + 0xc8], al
0x12cfb:	mov	rax, qword ptr [rsp + 0x10]
0x12d00:	lea	r12, [rax + 0x70]
0x12d04:	lea	r13, [rax + 0x80]
0x12d0b:	mov	rdi, r12
0x12d0e:	mov	rsi, r13
0x12d11:	call	0xa390


0x1368c:	mov	r13, qword ptr [rsp + 0x28]
0x13691:	mov	qword ptr [rsp + 0x30], r13
0x13696:	jmp	0x12ee4


0x12e5a:	mov	rax, qword ptr [rsp + 0x10]
0x12e5f:	mov	r13, rbp
0x12e62:	mov	qword ptr [rsp + 0x48], r14
0x12e67:	lea	r12, [rax + 0x80]
0x12e6e:	lea	rdi, [rax + 0x70]
0x12e72:	mov	rax, rbp
0x12e75:	mov	r14, rax
0x12e78:	mov	ebp, 2
0x12e7d:	mov	rsi, r12
0x12e80:	mov	qword ptr [rsp + 0x30], rdi
0x12e85:	mov	r12, r13
0x12e88:	mov	r13, rbx
0x12e8b:	mov	rbx, rsi
0x12e8e:	nop	
0x12e90:	mov	rsi, qword ptr [rsp + 0x10]
0x12e95:	mov	rdi, r12
0x12e98:	call	0xa470


0x12c58:	cmp	al, 0x17
0x12c5a:	ja	0x12ba0


0x12e06:	cmp	al, 0xb
0x12e08:	je	0x12e12


0x12ee4:	cmp	qword ptr [rsp], rbx
0x12ee8:	je	0x13054


0x12e12:	mov	rax, qword ptr [rsp + 0x28]
0x12e17:	test	rax, rax
0x12e1a:	je	0x12e2d


0x12e0a:	cmp	al, 0x17
0x12e0c:	jne	0x12c58


0x13054:	mov	rdx, qword ptr [rsp + 0x30]
0x13059:	nop	dword ptr [rax]
0x13060:	mov	qword ptr [rsp + 0x28], rdx
0x13065:	jmp	0x12dee


0x12eee:	mov	rsi, qword ptr [rsp + 0x10]
0x12ef3:	mov	rdi, r13
0x12ef6:	call	0xa470


0x12e2d:	mov	rax, qword ptr [rsp + 0x40]
0x12e32:	mov	qword ptr [rsp + 0x28], 0
0x12e3b:	mov	dword ptr [rax], 0xd
0x12e41:	jmp	0x12ba0


0x12e1c:	lea	rsi, [rip - 0x9fd3]
0x12e23:	xor	edx, edx
0x12e25:	mov	rdi, rax
0x12e28:	call	0x7fb0


0x12efb:	test	rax, rax
0x12efe:	mov	rbp, rax
0x12f01:	jne	0x12cd7


0x12e9d:	mov	rdi, qword ptr [rsp + 0x30]
0x12ea2:	mov	r12, rax
0x12ea5:	mov	rdx, r14
0x12ea8:	mov	r8, r15
0x12eab:	mov	rcx, rax
0x12eae:	mov	rsi, rbx
0x12eb1:	mov	byte ptr [rsp + 0xc8], 0x10
0x12eb9:	call	0xa390


0x12f2e:	mov	qword ptr [rsp + 0x28], 0
0x12f37:	jmp	0x12ba0


0x13033:	jmp	0x12ce1


0x12f5a:	cdqe	
0x12f5c:	add	qword ptr [r14 + 0x48], rax
0x12f60:	cmp	qword ptr [rsp + 0x28], 0
0x12f66:	je	0x13040


0x12f6c:	mov	rax, qword ptr [rsp]
0x12f70:	or	rax, rbx
0x12f73:	jne	0x12cc0


0x12f79:	mov	rdi, qword ptr [rsp + 0x28]
0x12f7e:	lea	rsi, [rip - 0xa135]
0x12f85:	xor	edx, edx
0x12f87:	call	0x7fb0


0x12cc0:	test	rbx, rbx
0x12cc3:	mov	rbp, qword ptr [rsp + 0x28]
0x12cc8:	mov	qword ptr [rsp + 0x30], 0
0x12cd1:	jg	0x12e50


0x12f8c:	mov	rax, qword ptr [rsp + 0x40]
0x12f91:	mov	esi, dword ptr [rax]
0x12f93:	test	esi, esi
0x12f95:	jne	0x12f1b


0x12f1b:	mov	rdi, qword ptr [rsp + 0x28]
0x12f20:	lea	rsi, [rip - 0xa0d7]
0x12f27:	xor	edx, edx
0x12f29:	call	0x7fb0


0x12fbc:	cmp	rax, -1
0x12fc0:	mov	rbx, rax
0x12fc3:	movdqa	xmm0, xmmword ptr [rsp]
0x12fc8:	je	0x13070


0x13070:	mov	rax, qword ptr [rsp + 0x18]
0x13075:	cmp	byte ptr [rax + 8], 1
0x13079:	jne	0x13130


0x12fce:	cmp	rax, -2
0x12fd2:	je	0x12fed


0x1307f:	mov	rax, qword ptr [rsp + 0x18]
0x13084:	cmp	byte ptr [rax], 0x2c
0x13087:	jne	0x13130


0x13130:	mov	rax, qword ptr [rsp + 0x40]
0x13135:	mov	dword ptr [rax], 0xa
0x1313b:	cmp	qword ptr [rsp + 0x28], 0
0x13141:	jne	0x12f1b


0x12fed:	test	qword ptr [rsp + 0x20], 0x200000
0x12ff6:	je	0x13f33


0x12fd4:	mov	rax, qword ptr [rsp + 0x18]
0x12fd9:	movzx	eax, byte ptr [rax + 8]
0x12fdd:	cmp	al, 0x18
0x12fdf:	je	0x13100


0x1308d:	xor	ebx, ebx
0x1308f:	mov	rdx, qword ptr [rsp + 0x20]
0x13094:	mov	rsi, qword ptr [rsp + 0x18]
0x13099:	mov	rdi, r14
0x1309c:	movaps	xmmword ptr [rsp + 0x30], xmm0
0x130a1:	call	0x129d0


0x13147:	jmp	0x12b90


0x13f33:	mov	rax, qword ptr [rsp + 0x18]
0x13f38:	cmp	byte ptr [rax + 8], 2
0x13f3c:	jne	0x13130


0x12ffc:	mov	rax, qword ptr [rsp + 0x18]
0x13001:	mov	qword ptr [r14 + 0x48], rbp
0x13005:	movaps	xmmword ptr [rax], xmm0
0x13008:	mov	byte ptr [rax + 8], 1
0x1300c:	mov	rax, qword ptr [rsp + 0x28]
0x13011:	jmp	0x12dd5


0x13100:	mov	qword ptr [rsp], rbx
0x13104:	xor	eax, eax
0x13106:	cmp	qword ptr [rsp], 0x7fff
0x1310e:	setg	al
0x13111:	jmp	0x130e7


0x12fe5:	cmp	al, 1
0x12fe7:	je	0x13113


0x13f42:	mov	rax, qword ptr [rsp + 0x40]
0x13f47:	mov	dword ptr [rax], 9
0x13f4d:	jmp	0x1313b


0x12dd5:	mov	rdi, qword ptr [rsp + 0x40]
0x12dda:	mov	edx, dword ptr [rdi]
0x12ddc:	test	edx, edx
0x12dde:	je	0x12de9


0x130e7:	test	rax, rax
0x130ea:	je	0x12f48


0x13113:	mov	rax, qword ptr [rsp + 0x18]
0x13118:	cmp	byte ptr [rax], 0x2c
0x1311b:	je	0x1308f


0x1313b:	cmp	qword ptr [rsp + 0x28], 0
0x13141:	jne	0x12f1b


0x12de9:	mov	qword ptr [rsp + 0x28], rax
0x12dee:	test	qword ptr [rsp + 0x20], 0x1000000
0x12df7:	mov	rax, qword ptr [rsp + 0x18]
0x12dfc:	movzx	eax, byte ptr [rax + 8]
0x12e00:	je	0x12c58


0x12de0:	test	rax, rax
0x12de3:	je	0x1313b


0x12f48:	mov	rdx, qword ptr [rsp + 0x20]
0x12f4d:	mov	rdi, qword ptr [rsp + 0x18]
0x12f52:	mov	rsi, r14
0x12f55:	call	0x122d0


0x130f0:	mov	rax, qword ptr [rsp + 0x40]
0x130f5:	mov	dword ptr [rax], 0xf
0x130fb:	jmp	0x1313b


0x1308f:	mov	rdx, qword ptr [rsp + 0x20]
0x13094:	mov	rsi, qword ptr [rsp + 0x18]
0x13099:	mov	rdi, r14
0x1309c:	movaps	xmmword ptr [rsp + 0x30], xmm0
0x130a1:	call	0x129d0


0x13121:	test	qword ptr [rsp + 0x20], 0x200000
0x1312a:	jne	0x12ffc


0x130a6:	cmp	rax, -2
0x130aa:	mov	qword ptr [rsp], rax
0x130ae:	movdqa	xmm0, xmmword ptr [rsp + 0x30]
0x130b4:	je	0x12fed


0x130ba:	mov	rax, qword ptr [rsp]
0x130be:	cmp	rax, -1
0x130c2:	je	0x130c9


0x130c9:	mov	rax, qword ptr [rsp + 0x18]
0x130ce:	cmp	byte ptr [rax + 8], 0x18
0x130d2:	jne	0x13130


0x130c4:	cmp	rax, rbx
0x130c7:	jl	0x13130


0x130d4:	cmp	qword ptr [rsp], -1
0x130d9:	jne	0x13104


0x130db:	xor	eax, eax
0x130dd:	cmp	rbx, 0x7fff
0x130e4:	setg	al
0x130e7:	test	rax, rax
0x130ea:	je	0x12f48


0x13104:	xor	eax, eax
0x13106:	cmp	qword ptr [rsp], 0x7fff
0x1310e:	setg	al
0x13111:	jmp	0x130e7


0x12ebe:	test	r12, r12
0x12ec1:	mov	r14, rax
0x12ec4:	je	0x12f10


0x12f10:	mov	rax, qword ptr [rsp + 0x40]
0x12f15:	mov	dword ptr [rax], 0xc
0x12f1b:	mov	rdi, qword ptr [rsp + 0x28]
0x12f20:	lea	rsi, [rip - 0xa0d7]
0x12f27:	xor	edx, edx
0x12f29:	call	0x7fb0


0x12ec6:	test	rax, rax
0x12ec9:	je	0x12f10


0x12ecb:	add	rbp, 1
0x12ecf:	cmp	rbp, r13
0x12ed2:	jle	0x12e90


0x12e90:	mov	rsi, qword ptr [rsp + 0x10]
0x12e95:	mov	rdi, r12
0x12e98:	call	0xa470


0x12ed4:	mov	r14, qword ptr [rsp + 0x48]
0x12ed9:	mov	rbx, r13
0x12edc:	mov	qword ptr [rsp + 0x30], rax
0x12ee1:	mov	r13, r12
0x12ee4:	cmp	qword ptr [rsp], rbx
0x12ee8:	je	0x13054


0x12d16:	test	rax, rax
0x12d19:	mov	rdx, rax
0x12d1c:	je	0x12f10


0x12d22:	add	rbx, 2
0x12d26:	cmp	rbx, qword ptr [rsp]
0x12d2a:	jg	0x12dab


0x12d2c:	mov	qword ptr [rsp + 0x48], r14
0x12d31:	mov	r14, rax
0x12d34:	mov	rsi, qword ptr [rsp + 0x10]
0x12d39:	mov	rdi, rbp
0x12d3c:	call	0xa470


0x12dab:	mov	rax, qword ptr [rsp + 0x30]
0x12db0:	test	rax, rax
0x12db3:	je	0x13060


0x13060:	mov	qword ptr [rsp + 0x28], rdx
0x13065:	jmp	0x12dee


0x12db9:	mov	rcx, rdx
0x12dbc:	mov	r8, r15
0x12dbf:	mov	rdx, rax
0x12dc2:	mov	rsi, r13
0x12dc5:	mov	rdi, r12
0x12dc8:	mov	byte ptr [rsp + 0xc8], 0x10
0x12dd0:	call	0xa390


0x12d41:	mov	r8, r15
0x12d44:	mov	rbp, rax
0x12d47:	mov	rcx, rax
0x12d4a:	mov	rdx, r14
0x12d4d:	mov	rsi, r13
0x12d50:	mov	rdi, r12
0x12d53:	mov	byte ptr [rsp + 0xc8], 0x10
0x12d5b:	call	0xa390


0x12d60:	test	rbp, rbp
0x12d63:	je	0x12f10


0x12d69:	test	rax, rax
0x12d6c:	je	0x12f10


0x12d72:	xor	ecx, ecx
0x12d74:	mov	r8, r15
0x12d77:	mov	rdx, rax
0x12d7a:	mov	rsi, r13
0x12d7d:	mov	rdi, r12
0x12d80:	mov	byte ptr [rsp + 0xc8], 0xa
0x12d88:	call	0xa390


0x12d8d:	test	rax, rax
0x12d90:	mov	r14, rax
0x12d93:	je	0x12f10


0x12d99:	add	rbx, 1
0x12d9d:	cmp	rbx, qword ptr [rsp]
0x12da1:	jle	0x12d34


0x12d34:	mov	rsi, qword ptr [rsp + 0x10]
0x12d39:	mov	rdi, rbp
0x12d3c:	call	0xa470


0x12da3:	mov	r14, qword ptr [rsp + 0x48]
0x12da8:	mov	rdx, rax
0x12dab:	mov	rax, qword ptr [rsp + 0x30]
0x12db0:	test	rax, rax
0x12db3:	je	0x13060


0x13c09:	mov	rdi, rax
0x13c0c:	mov	qword ptr [rsp + 0x28], rax
0x13c11:	lea	rdx, [r12 + 0x20]
0x13c16:	test	rdi, rdi
0x13c19:	mov	rax, r12
0x13c1c:	je	0x13bb3


0x13c1e:	cmp	qword ptr [rax], 0
0x13c22:	jne	0x13ecd


0x13c28:	add	rax, 8
0x13c2c:	cmp	rdx, rax
0x13c2f:	jne	0x13c1e


0x13ecd:	xor	ecx, ecx
0x13ecf:	xor	edx, edx
0x13ed1:	mov	r8, r15
0x13ed4:	mov	rsi, rbp
0x13ed7:	mov	rdi, rbx
0x13eda:	mov	byte ptr [rsp + 0xb8], 3
0x13ee2:	mov	qword ptr [rsp + 0xb0], r12
0x13eea:	call	0xa390


0x13c31:	mov	rdi, r12
0x13c34:	call	0x1b00


0x13eef:	test	rax, rax
0x13ef2:	je	0x13bb3


0x13ef8:	mov	rcx, qword ptr [rsp + 0x28]
0x13efd:	lea	r8, [rsp + 0xc0]
0x13f05:	mov	rdx, rax
0x13f08:	mov	rsi, rbp
0x13f0b:	mov	rdi, rbx
0x13f0e:	mov	byte ptr [rsp + 0xc8], 0xa
0x13f16:	call	0xa390


0x13f1b:	test	rax, rax
0x13f1e:	mov	qword ptr [rsp + 0x28], rax
0x13f23:	jne	0x12c2c


0x13f29:	jmp	0x13bb3


0x133a4:	test	eax, eax
0x133a6:	jne	0x1388b


0x133ac:	mov	rdx, qword ptr [rsp + 0x20]
0x133b1:	mov	rsi, r14
0x133b4:	mov	rdi, r15
0x133b7:	call	0x7bc0


0x1388b:	mov	rdx, qword ptr [rsp + 0x40]
0x13890:	mov	dword ptr [rdx], eax
0x13892:	jmp	0x13708


0x133bc:	movsxd	rbx, eax
0x133bf:	mov	eax, dword ptr [rsp + 0xa0]
0x133c6:	lea	edx, [rax - 2]
0x133c9:	and	edx, 0xfffffffd
0x133cc:	je	0x133e5


0x133e5:	cmp	eax, 4
0x133e8:	ja	0x13d8a


0x133ce:	movzx	edx, byte ptr [r15 + 8]
0x133d3:	cmp	dl, 2
0x133d6:	je	0x13871


0x133ee:	movsxd	rax, dword ptr [rbp + rax*4]
0x133f3:	add	rax, rbp
0x133f6:	jmp	rax


0x13d8a:	lea	rcx, [rip + 0x3e7f]
0x13d91:	lea	rsi, [rip + 0x3890]
0x13d98:	lea	rdi, [rip + 0x38d8]
0x13d9f:	mov	edx, 0xced
0x13da4:	call	0x1c90


0x133dc:	cmp	dl, 0x16
0x133df:	je	0x13897


0x13897:	movsxd	rax, ebx
0x1389a:	mov	r11, qword ptr [rsp + 0x20]
0x1389f:	add	qword ptr [r14 + 0x48], rax
0x138a3:	mov	r10, qword ptr [rsp + 0x60]
0x138a8:	mov	rdx, r11
0x138ab:	mov	rdi, r10
0x138ae:	call	0x7bc0


0x138b3:	movzx	edx, byte ptr [rsp + 0xc8]
0x138bb:	cmp	dl, 2
0x138be:	je	0x13871


0x138c0:	cmp	dl, 0x15
0x138c3:	je	0x13ad7


0x13ad7:	mov	eax, ebx
0x13ad9:	neg	eax
0x13adb:	cdqe	
0x13add:	add	qword ptr [r14 + 0x48], rax
0x13ae1:	mov	byte ptr [r15 + 8], 1
0x13ae6:	mov	eax, dword ptr [rsp + 0xa0]
0x13aed:	jmp	0x133e5


0x138c9:	mov	rdx, qword ptr [rsp + 0x68]
0x138ce:	lea	rdi, [rsp + 0xb0]
0x138d6:	mov	r9d, 1
0x138dc:	mov	r8, r11
0x138df:	mov	ecx, eax
0x138e1:	mov	dword ptr [rsp + 0xb0], 3
0x138ec:	mov	qword ptr [rsp + 0xb8], rdx
0x138f4:	mov	rdx, r10
0x138f7:	call	0x12070


0x138fc:	test	eax, eax
0x138fe:	jne	0x1388b


0x13900:	mov	rdx, qword ptr [rsp + 0x20]
0x13905:	mov	rsi, r14
0x13908:	mov	rdi, r15
0x1390b:	call	0x7bc0


0x13910:	movsxd	rbx, eax
0x13913:	mov	rax, qword ptr [rsp + 0x10]
0x13918:	mov	esi, dword ptr [rsp + 0xa0]
0x1391f:	mov	r9d, 0
0x13925:	cmp	dword ptr [rax + 0xb4], 1
0x1392c:	lea	eax, [rsi - 2]
0x1392f:	cmovg	r9, r13
0x13933:	and	eax, 0xfffffffd
0x13936:	je	0x13da9


0x13da9:	mov	rax, qword ptr [rsp + 0x40]
0x13dae:	mov	dword ptr [rax], 0xb
0x13db4:	jmp	0x13708


0x1393c:	mov	r10d, dword ptr [rsp + 0xb0]
0x13944:	lea	eax, [r10 - 2]
0x13948:	and	eax, 0xfffffffd
0x1394b:	je	0x13da9


0x13951:	cmp	esi, 3
0x13954:	sete	r11b
0x13958:	je	0x13ded


0x13ded:	mov	rdi, qword ptr [rsp + 0xa8]
0x13df5:	xor	eax, eax
0x13df7:	or	rcx, 0xffffffffffffffff
0x13dfb:	repne scasb	al, byte ptr [rdi]


0x1395e:	cmp	r10d, 3
0x13962:	je	0x13db9


0x13dfb:	repne scasb	al, byte ptr [rdi]


0x13dfd:	mov	rax, rcx
0x13e00:	not	rax
0x13e03:	sub	rax, 1
0x13e07:	cmp	rax, 1
0x13e0b:	jbe	0x1395e


0x13db9:	mov	rdi, qword ptr [rsp + 0xb8]
0x13dc1:	xor	eax, eax
0x13dc3:	or	rcx, 0xffffffffffffffff
0x13dc7:	repne scasb	al, byte ptr [rdi]


0x13968:	test	esi, esi
0x1396a:	jne	0x13cd9


0x13e11:	jmp	0x13ddd


0x13dc7:	repne scasb	al, byte ptr [rdi]


0x13dc9:	mov	rax, rcx
0x13dcc:	not	rax
0x13dcf:	sub	rax, 1
0x13dd3:	cmp	rax, 1
0x13dd7:	jbe	0x13968


0x13970:	movzx	edx, byte ptr [rsp + 0xa8]
0x13978:	test	r10d, r10d
0x1397b:	jne	0x13cbd


0x13cd9:	xor	edx, edx
0x13cdb:	cmp	esi, 3
0x13cde:	jne	0x13978


0x13ddd:	mov	rax, qword ptr [rsp + 0x40]
0x13de2:	mov	dword ptr [rax], 3
0x13de8:	jmp	0x13708


0x13981:	movzx	r8d, byte ptr [rsp + 0xb8]
0x1398a:	test	esi, esi
0x1398c:	je	0x13c76


0x13cbd:	cmp	r10d, 3
0x13cc1:	je	0x13f52


0x13ce4:	mov	rax, qword ptr [rsp + 0xa8]
0x13cec:	movzx	edx, byte ptr [rax]
0x13cef:	jmp	0x13978


0x13978:	test	r10d, r10d
0x1397b:	jne	0x13cbd


0x13c76:	test	r9, r9
0x13c79:	je	0x13cf4


0x13992:	test	r11b, r11b
0x13995:	jne	0x13c76


0x13f52:	mov	rax, qword ptr [rsp + 0xb8]
0x13f5a:	movzx	r8d, byte ptr [rax]
0x13f5e:	jmp	0x1398a


0x13cc7:	test	esi, esi
0x13cc9:	je	0x13c73


0x13cf4:	test	r10d, r10d
0x13cf7:	je	0x139d7


0x13c7b:	mov	edi, edx
0x13c7d:	mov	dword ptr [rsp + 0x78], r8d
0x13c82:	mov	qword ptr [rsp + 0x70], r9
0x13c87:	call	0x1e40


0x1399b:	test	r9, r9
0x1399e:	mov	edx, dword ptr [rsp + 0xa8]
0x139a5:	je	0x139c4


0x1398a:	test	esi, esi
0x1398c:	je	0x13c76


0x13c73:	xor	r8d, r8d
0x13c76:	test	r9, r9
0x13c79:	je	0x13cf4


0x13ccb:	test	r11b, r11b
0x13cce:	jne	0x13c73


0x139d7:	test	qword ptr [rsp + 0x20], 0x10000
0x139e0:	je	0x139eb


0x13cfd:	cmp	r10d, 3
0x13d01:	jne	0x13cb0


0x139c4:	cmp	edx, -1
0x139c7:	je	0x13ddd


0x139a7:	mov	edi, r8d
0x139aa:	mov	dword ptr [rsp + 0x78], edx
0x139ae:	mov	qword ptr [rsp + 0x70], r9
0x139b3:	call	0x1e40


0x13cd0:	mov	edx, dword ptr [rsp + 0xa8]
0x13cd7:	jmp	0x13cb0


0x139eb:	test	r9, r9
0x139ee:	je	0x13a16


0x139e2:	cmp	r8d, edx
0x139e5:	jb	0x13da9


0x13d03:	jmp	0x139d7


0x13cb0:	mov	r8d, dword ptr [rsp + 0xb8]
0x13cb8:	jmp	0x139c4


0x139cd:	cmp	r8d, -1
0x139d1:	je	0x13ddd


0x13a16:	xor	eax, eax
0x13a18:	mov	edi, 1
0x13a1d:	cmp	edx, eax
0x13a1f:	mov	ecx, eax
0x13a21:	ja	0x13a39


0x139f0:	mov	rax, qword ptr [r9 + 0x40]
0x139f4:	cmp	rax, qword ptr [rsp + 0x48]
0x139f9:	mov	rcx, qword ptr [r9 + 8]
0x139fd:	je	0x13e13


0x13a23:	cmp	r8d, eax
0x13a26:	jb	0x13a39


0x13a39:	add	rax, 1
0x13a3d:	cmp	rax, 0x100
0x13a43:	jne	0x13a1d


0x13e13:	mov	rax, qword ptr [rsp + 0x48]
0x13e18:	mov	rdi, rcx
0x13e1b:	mov	dword ptr [rsp + 0x8c], r8d
0x13e23:	mov	dword ptr [rsp + 0x88], edx
0x13e2a:	mov	qword ptr [rsp + 0x70], r9
0x13e2f:	add	rax, rax
0x13e32:	add	rax, 1
0x13e36:	lea	r10, [rax*4]
0x13e3e:	mov	qword ptr [rsp + 0x48], rax
0x13e43:	mov	rsi, r10
0x13e46:	mov	qword ptr [rsp + 0x80], r10
0x13e4e:	call	0x1e00


0x13a03:	mov	dword ptr [rcx + rax*4], edx
0x13a06:	mov	rcx, qword ptr [r9 + 0x10]
0x13a0a:	lea	rsi, [rax + 1]
0x13a0e:	mov	qword ptr [r9 + 0x40], rsi
0x13a12:	mov	dword ptr [rcx + rax*4], r8d
0x13a16:	xor	eax, eax
0x13a18:	mov	edi, 1
0x13a1d:	cmp	edx, eax
0x13a1f:	mov	ecx, eax
0x13a21:	ja	0x13a39


0x13a28:	mov	rsi, rax
0x13a2b:	mov	r11, rdi
0x13a2e:	sar	rsi, 6
0x13a32:	shl	r11, cl
0x13a35:	or	qword ptr [r12 + rsi*8], r11
0x13a39:	add	rax, 1
0x13a3d:	cmp	rax, 0x100
0x13a43:	jne	0x13a1d


0x13a45:	mov	rax, qword ptr [rsp + 0x40]
0x13a4a:	mov	dword ptr [rax], 0
0x13a50:	jmp	0x136d0


0x13a1d:	cmp	edx, eax
0x13a1f:	mov	ecx, eax
0x13a21:	ja	0x13a39


0x13e53:	mov	r9, qword ptr [rsp + 0x70]
0x13e58:	mov	r10, qword ptr [rsp + 0x80]
0x13e60:	mov	qword ptr [rsp + 0x78], rax
0x13e65:	mov	rdi, qword ptr [r9 + 0x10]
0x13e69:	mov	rsi, r10
0x13e6c:	call	0x1e00


0x13e71:	mov	rcx, qword ptr [rsp + 0x78]
0x13e76:	test	rcx, rcx
0x13e79:	je	0x13ea5


0x13ea5:	mov	rdi, rcx
0x13ea8:	mov	qword ptr [rsp], rax
0x13eac:	call	0x1b00


0x13e7b:	test	rax, rax
0x13e7e:	mov	r9, qword ptr [rsp + 0x70]
0x13e83:	mov	edx, dword ptr [rsp + 0x88]
0x13e8a:	mov	r8d, dword ptr [rsp + 0x8c]
0x13e92:	je	0x13ea5


0x13e94:	mov	qword ptr [r9 + 0x10], rax
0x13e98:	mov	qword ptr [r9 + 8], rcx
0x13e9c:	mov	rax, qword ptr [r9 + 0x40]
0x13ea0:	jmp	0x13a03


0x139b8:	mov	r9, qword ptr [rsp + 0x70]
0x139bd:	mov	edx, dword ptr [rsp + 0x78]
0x139c1:	mov	r8d, eax
0x139c4:	cmp	edx, -1
0x139c7:	je	0x13ddd


0x13c8c:	mov	edx, eax
0x13c8e:	mov	eax, dword ptr [rsp + 0xb0]
0x13c95:	mov	r9, qword ptr [rsp + 0x70]
0x13c9a:	mov	r8d, dword ptr [rsp + 0x78]
0x13c9f:	cmp	eax, 3
0x13ca2:	je	0x139a7


0x13ca8:	test	eax, eax
0x13caa:	je	0x139a7


0x13eb1:	mov	rax, qword ptr [rsp]
0x13eb5:	mov	rdi, rax
0x13eb8:	call	0x1b00


0x13ebd:	mov	rax, qword ptr [rsp + 0x40]
0x13ec2:	mov	dword ptr [rax], 0xc
0x13ec8:	jmp	0x13708


0x13c39:	jmp	0x12c2c


0x13710:	mov	rdi, r13
0x13713:	call	0x8df0


0x13718:	mov	rax, qword ptr [rsp + 0x40]
0x1371d:	mov	r8d, dword ptr [rax]
0x13720:	test	r8d, r8d
0x13723:	jne	0x12b90


0x13729:	mov	qword ptr [rsp + 0x28], 0
0x13732:	jmp	0x12c2c


0x1ab0:	push	qword ptr [rip + 0x21a2ba]
0x1ab6:	jmp	qword ptr [rip + 0x21a2bc]


0x1abc:	nop	dword ptr [rax]


0x1ac6:	push	0
0x1acb:	jmp	0x1ab0


0x1ad6:	push	1
0x1adb:	jmp	0x1ab0


0x1ae6:	push	2
0x1aeb:	jmp	0x1ab0


0x1af6:	push	3
0x1afb:	jmp	0x1ab0


0x1b06:	push	4
0x1b0b:	jmp	0x1ab0


0x1b16:	push	5
0x1b1b:	jmp	0x1ab0


0x1b26:	push	6
0x1b2b:	jmp	0x1ab0


0x1b36:	push	7
0x1b3b:	jmp	0x1ab0


0x1b46:	push	8
0x1b4b:	jmp	0x1ab0


0x1b56:	push	9
0x1b5b:	jmp	0x1ab0


0x1b66:	push	0xa
0x1b6b:	jmp	0x1ab0


0x1b76:	push	0xb
0x1b7b:	jmp	0x1ab0


0x1b86:	push	0xc
0x1b8b:	jmp	0x1ab0


0x1b96:	push	0xd
0x1b9b:	jmp	0x1ab0


0x1ba6:	push	0xe
0x1bab:	jmp	0x1ab0


0x1bb6:	push	0xf
0x1bbb:	jmp	0x1ab0


0x1bc6:	push	0x10
0x1bcb:	jmp	0x1ab0


0x1bd6:	push	0x11
0x1bdb:	jmp	0x1ab0


0x1be6:	push	0x12
0x1beb:	jmp	0x1ab0


0x1bf6:	push	0x13
0x1bfb:	jmp	0x1ab0


0x1c06:	push	0x14
0x1c0b:	jmp	0x1ab0


0x1c16:	push	0x15
0x1c1b:	jmp	0x1ab0


0x1c26:	push	0x16
0x1c2b:	jmp	0x1ab0


0x1c36:	push	0x17
0x1c3b:	jmp	0x1ab0


0x1c46:	push	0x18
0x1c4b:	jmp	0x1ab0


0x1c56:	push	0x19
0x1c5b:	jmp	0x1ab0


0x1c66:	push	0x1a
0x1c6b:	jmp	0x1ab0


0x1c76:	push	0x1b
0x1c7b:	jmp	0x1ab0


0x1c86:	push	0x1c
0x1c8b:	jmp	0x1ab0


0x1c96:	push	0x1d
0x1c9b:	jmp	0x1ab0


0x1ca6:	push	0x1e
0x1cab:	jmp	0x1ab0


0x1cb6:	push	0x1f
0x1cbb:	jmp	0x1ab0


0x1cc6:	push	0x20
0x1ccb:	jmp	0x1ab0


0x1cd6:	push	0x21
0x1cdb:	jmp	0x1ab0


0x1ce6:	push	0x22
0x1ceb:	jmp	0x1ab0


0x1cf6:	push	0x23
0x1cfb:	jmp	0x1ab0


0x1d06:	push	0x24
0x1d0b:	jmp	0x1ab0


0x1d16:	push	0x25
0x1d1b:	jmp	0x1ab0


0x1d26:	push	0x26
0x1d2b:	jmp	0x1ab0


0x1d36:	push	0x27
0x1d3b:	jmp	0x1ab0


0x1d46:	push	0x28
0x1d4b:	jmp	0x1ab0


0x1d56:	push	0x29
0x1d5b:	jmp	0x1ab0


0x1d66:	push	0x2a
0x1d6b:	jmp	0x1ab0


0x1d76:	push	0x2b
0x1d7b:	jmp	0x1ab0


0x1d86:	push	0x2c
0x1d8b:	jmp	0x1ab0


0x1d96:	push	0x2d
0x1d9b:	jmp	0x1ab0


0x1da6:	push	0x2e
0x1dab:	jmp	0x1ab0


0x1db6:	push	0x2f
0x1dbb:	jmp	0x1ab0


0x1dc6:	push	0x30
0x1dcb:	jmp	0x1ab0


0x1dd6:	push	0x31
0x1ddb:	jmp	0x1ab0


0x1de6:	push	0x32
0x1deb:	jmp	0x1ab0


0x1df6:	push	0x33
0x1dfb:	jmp	0x1ab0


0x1e06:	push	0x34
0x1e0b:	jmp	0x1ab0


0x1e16:	push	0x35
0x1e1b:	jmp	0x1ab0


0x1e26:	push	0x36
0x1e2b:	jmp	0x1ab0


0x1e36:	push	0x37
0x1e3b:	jmp	0x1ab0


0x1e46:	push	0x38
0x1e4b:	jmp	0x1ab0


0x1e56:	push	0x39
0x1e5b:	jmp	0x1ab0


0x1e66:	push	0x3a
0x1e6b:	jmp	0x1ab0


0x1e76:	push	0x3b
0x1e7b:	jmp	0x1ab0


0x1e86:	push	0x3c
0x1e8b:	jmp	0x1ab0


0x1e96:	push	0x3d
0x1e9b:	jmp	0x1ab0


0x1ea6:	push	0x3e
0x1eab:	jmp	0x1ab0


0x1eb6:	push	0x3f
0x1ebb:	jmp	0x1ab0


0x1ec6:	push	0x40
0x1ecb:	jmp	0x1ab0


0x1ed6:	push	0x41
0x1edb:	jmp	0x1ab0


0x1ee6:	push	0x42
0x1eeb:	jmp	0x1ab0


0x1ef6:	push	0x43
0x1efb:	jmp	0x1ab0


0x1f06:	push	0x44
0x1f0b:	jmp	0x1ab0


0x1f16:	push	0x45
0x1f1b:	jmp	0x1ab0


0x1f20:	jmp	qword ptr [rip + 0x21a08a]




0x1f26:	push	0x46
0x1f2b:	jmp	0x1ab0


0x1f36:	push	0x47
0x1f3b:	jmp	0x1ab0


0x1f46:	push	0x48
0x1f4b:	jmp	0x1ab0


0x1f56:	push	0x49
0x1f5b:	jmp	0x1ab0


0x1f66:	push	0x4a
0x1f6b:	jmp	0x1ab0


0x2052:	nop	word ptr cs:[rax + rax]
0x205c:	nop	dword ptr [rax]


0x2f81:	nop	word ptr cs:[rax + rax]
0x2f8b:	nop	dword ptr [rax + rax]


0x2fba:	hlt	


0x2fbb:	nop	dword ptr [rax + rax]


0x2ff2:	nop	dword ptr [rax]
0x2ff6:	nop	word ptr cs:[rax + rax]


0x3042:	nop	dword ptr [rax]
0x3046:	nop	word ptr cs:[rax + rax]


0x308a:	nop	word ptr [rax + rax]


0x309a:	nop	word ptr [rax + rax]


0x315a:	nop	word ptr [rax + rax]


0x3213:	nop	dword ptr [rax]
0x3216:	nop	word ptr cs:[rax + rax]


0x327f:	nop	


0x3437:	nop	word ptr [rax + rax]


0x34c7:	nop	word ptr [rax + rax]


0x35d9:	nop	dword ptr [rax]


0x3609:	nop	dword ptr [rax]


0x37bb:	nop	dword ptr [rax + rax]


0x380a:	nop	word ptr [rax + rax]


0x3841:	nop	dword ptr [rax + rax]
0x3846:	nop	word ptr cs:[rax + rax]


0x3929:	nop	dword ptr [rax]


0x3c8a:	nop	word ptr [rax + rax]


0x3d64:	nop	
0x3d66:	nop	word ptr cs:[rax + rax]


0x3d97:	nop	word ptr [rax + rax]


0x3e96:	nop	word ptr cs:[rax + rax]


0x432a:	nop	word ptr [rax + rax]


0x4338:	nop	dword ptr [rax + rax]


0x4348:	nop	dword ptr [rax + rax]


0x43f4:	nop	word ptr cs:[rax + rax]
0x43fe:	nop	


0x4456:	nop	word ptr cs:[rax + rax]


0x44f3:	nop	word ptr cs:[rax + rax]
0x44fd:	nop	dword ptr [rax]


0x4542:	nop	word ptr cs:[rax + rax]
0x454c:	nop	dword ptr [rax]


0x45ef:	nop	


0x46d7:	nop	word ptr [rax + rax]


0x4773:	mov	byte ptr [rsp + 0xe], 1
0x4778:	mov	byte ptr [rsp + 0x7c], 0
0x477d:	xor	r12d, r12d
0x4780:	mov	qword ptr [rsp + 0x50], 0
0x4789:	mov	byte ptr [rsp + 0xf], 1
0x478e:	mov	byte ptr [rsp + 0xd], 0
0x4793:	lea	rax, [rip + 0x12423]
0x479a:	mov	qword ptr [rsp + 0x18], 1
0x47a3:	xor	r15d, r15d
0x47a6:	mov	dword ptr [rsp + 8], 2
0x47ae:	mov	qword ptr [rsp + 0x48], rax
0x47b3:	xor	r11d, r11d
0x47b6:	mov	rax, rbp
0x47b9:	mov	r8d, r12d
0x47bc:	mov	rbp, r11
0x47bf:	mov	r11, rax
0x47c2:	nop	word ptr [rax + rax]
0x47c8:	cmp	r11, rbp
0x47cb:	setne	r12b
0x47cf:	cmp	r11, -1
0x47d3:	jne	0x47e2


0x47d5:	mov	rax, qword ptr [rsp + 0x10]
0x47da:	cmp	byte ptr [rax + rbp], 0
0x47de:	setne	r12b
0x47e2:	test	r12b, r12b
0x47e5:	je	0x4e40


0x47e2:	test	r12b, r12b
0x47e5:	je	0x4e40


0x4e40:	cmp	dword ptr [rsp + 8], 2
0x4e45:	movzx	ebx, byte ptr [rsp + 0xf]
0x4e4a:	mov	r12d, r8d
0x4e4d:	mov	rbp, r11
0x4e50:	sete	dl
0x4e53:	mov	eax, ebx
0x4e55:	test	r15, r15
0x4e58:	sete	cl
0x4e5b:	and	eax, edx
0x4e5d:	and	al, cl
0x4e5f:	jne	0x58c6


0x47eb:	cmp	dword ptr [rsp + 8], 2
0x47f0:	mov	rdi, qword ptr [rsp + 0x10]
0x47f5:	lea	r9, [rdi + rbp]
0x47f9:	setne	al
0x47fc:	and	al, byte ptr [rsp + 0xd]
0x4800:	mov	r10d, eax
0x4803:	je	0x48b0


0x4e65:	mov	eax, ebx
0x4e67:	xor	eax, 1
0x4e6a:	and	dl, al
0x4e6c:	je	0x57dc


0x58c6:	mov	dword ptr [rsp + 8], 2
0x58ce:	jmp	0x5269


0x48b0:	movzx	ebx, byte ptr [r9]
0x48b4:	cmp	bl, 0x7e
0x48b7:	ja	0x4bd8


0x4809:	mov	rax, qword ptr [rsp + 0x18]
0x480e:	test	rax, rax
0x4811:	je	0x4c40


0x57dc:	mov	rbx, qword ptr [rsp + 0x48]
0x57e1:	test	rbx, rbx
0x57e4:	je	0x5812


0x4e72:	cmp	byte ptr [rsp + 0x7c], 0
0x4e77:	je	0x57da


0x5269:	cmp	byte ptr [rsp + 0xd], 0
0x526e:	je	0x5280


0x48bd:	lea	rcx, [rip + 0x12388]
0x48c4:	movzx	edx, bl
0x48c7:	movsxd	rax, dword ptr [rcx + rdx*4]
0x48cb:	add	rax, rcx
0x48ce:	jmp	rax


0x4bd8:	cmp	qword ptr [rsp + 0x58], 1
0x4bde:	jne	0x4f88


0x4c40:	movzx	ebx, byte ptr [r9]
0x4c44:	cmp	bl, 0x7e
0x4c47:	ja	0x4bd0


0x4817:	cmp	r11, -1
0x481b:	lea	rbx, [rbp + rax]
0x4820:	jne	0x4850


0x5812:	cmp	r13, r15
0x5815:	jbe	0x52b9


0x57e6:	test	al, al
0x57e8:	je	0x5812


0x57da:	mov	eax, edx
0x57dc:	mov	rbx, qword ptr [rsp + 0x48]
0x57e1:	test	rbx, rbx
0x57e4:	je	0x5812


0x4e7d:	cmp	byte ptr [rsp + 0xe], 0
0x4e82:	jne	0x587d


0x5270:	test	al, al
0x5272:	mov	eax, 4
0x5277:	cmove	eax, dword ptr [rsp + 8]
0x527c:	mov	dword ptr [rsp + 8], eax


0x4be4:	mov	qword ptr [rsp + 0x38], r11
0x4be9:	mov	byte ptr [rsp + 0x30], r8b
0x4bee:	mov	byte ptr [rsp + 0x28], r10b
0x4bf3:	call	0x1f50


0x4f88:	lea	rax, [rsp + 0xa0]
0x4f90:	cmp	r11, -1
0x4f94:	mov	qword ptr [rsp + 0xa0], 0
0x4fa0:	mov	qword ptr [rsp + 0x28], rax
0x4fa5:	jne	0x4fd4


0x4c49:	lea	rcx, [rip + 0x121f8]
0x4c50:	movzx	edx, bl
0x4c53:	movsxd	rax, dword ptr [rcx + rdx*4]
0x4c57:	add	rax, rcx
0x4c5a:	jmp	rax


0x4bd0:	xor	r10d, r10d
0x4bd3:	nop	dword ptr [rax + rax]
0x4bd8:	cmp	qword ptr [rsp + 0x58], 1
0x4bde:	jne	0x4f88


0x4822:	cmp	rax, 1
0x4826:	jbe	0x4850


0x4850:	cmp	rbx, r11
0x4853:	mov	byte ptr [rsp + 0x28], r10b
0x4858:	ja	0x4e10


0x581b:	mov	byte ptr [r14 + r15], 0
0x5820:	jmp	0x52b9


0x57ea:	movzx	ecx, byte ptr [rbx]
0x57ed:	mov	rax, rbx
0x57f0:	test	cl, cl
0x57f2:	je	0x5812


0x4e88:	test	r13, r13
0x4e8b:	sete	al
0x4e8e:	cmp	qword ptr [rsp + 0x50], 0
0x4e94:	setne	dl
0x4e97:	and	al, dl
0x4e99:	je	0x58bc


0x4fa7:	mov	rdi, qword ptr [rsp + 0x10]
0x4fac:	mov	byte ptr [rsp + 0x40], r8b
0x4fb1:	mov	byte ptr [rsp + 0x38], r10b
0x4fb6:	mov	qword ptr [rsp + 0x30], r9
0x4fbb:	call	0x1c10


0x4fd4:	lea	rax, [rsp + 0x9c]
0x4fdc:	xor	ecx, ecx
0x4fde:	mov	byte ptr [rsp + 0x7e], bl
0x4fe2:	mov	byte ptr [rsp + 0x7d], r8b
0x4fe7:	mov	rbx, rcx
0x4fea:	mov	qword ptr [rsp + 0x88], r9
0x4ff2:	mov	qword ptr [rsp + 0x38], rax
0x4ff7:	mov	byte ptr [rsp + 0x7f], r10b
0x4ffc:	mov	qword ptr [rsp + 0x80], r15
0x5004:	mov	qword ptr [rsp + 0x40], r14
0x5009:	mov	qword ptr [rsp + 0x70], r13
0x500e:	mov	qword ptr [rsp + 0x30], r11
0x5013:	mov	rax, qword ptr [rsp + 0x10]
0x5018:	lea	r14, [rbp + rbx]
0x501d:	mov	rdx, qword ptr [rsp + 0x30]
0x5022:	mov	rcx, qword ptr [rsp + 0x28]
0x5027:	mov	rdi, qword ptr [rsp + 0x38]
0x502c:	lea	r13, [rax + r14]
0x5030:	sub	rdx, r14
0x5033:	mov	rsi, r13
0x5036:	call	0x7b30


0x4828:	mov	byte ptr [rsp + 0x38], r8b
0x482d:	mov	byte ptr [rsp + 0x30], r10b
0x4832:	mov	qword ptr [rsp + 0x28], r9
0x4837:	call	0x1c10


0x485e:	mov	rdx, qword ptr [rsp + 0x18]
0x4863:	mov	rsi, qword ptr [rsp + 0x48]
0x4868:	mov	rdi, r9
0x486b:	mov	qword ptr [rsp + 0x40], r11
0x4870:	mov	byte ptr [rsp + 0x38], r8b
0x4875:	mov	qword ptr [rsp + 0x30], r9
0x487a:	call	0x1d00


0x4e10:	xor	r10d, r10d
0x4e13:	jmp	0x48b0


0x57f4:	mov	rdx, r15
0x57f7:	sub	rax, r15
0x57fa:	cmp	r13, rdx
0x57fd:	jbe	0x5803


0x58bc:	movzx	eax, byte ptr [rsp + 0x7c]
0x58c1:	jmp	0x57dc


0x4e9f:	mov	r13, qword ptr [rsp + 0x50]
0x4ea4:	lea	rbx, [rip + 0x11d12]
0x4eab:	mov	byte ptr [r14], 0x27
0x4eaf:	mov	dword ptr [rsp + 8], 2
0x4eb7:	mov	r15d, 1
0x4ebd:	mov	qword ptr [rsp + 0x18], 1
0x4ec6:	mov	byte ptr [rsp + 0xf], 0
0x4ecb:	mov	qword ptr [rsp + 0x48], rbx
0x4ed0:	mov	byte ptr [rsp + 0x7c], al
0x4ed4:	jmp	0x47b3


0x5803:	add	rdx, 1
0x5807:	movzx	ecx, byte ptr [rax + rdx]
0x580b:	test	cl, cl
0x580d:	jne	0x57fa


0x57ff:	mov	byte ptr [r14 + rdx], cl
0x5803:	add	rdx, 1
0x5807:	movzx	ecx, byte ptr [rax + rdx]
0x580b:	test	cl, cl
0x580d:	jne	0x57fa


0x47b3:	xor	r11d, r11d
0x47b6:	mov	rax, rbp
0x47b9:	mov	r8d, r12d
0x47bc:	mov	rbp, r11
0x47bf:	mov	r11, rax
0x47c2:	nop	word ptr [rax + rax]
0x47c8:	cmp	r11, rbp
0x47cb:	setne	r12b
0x47cf:	cmp	r11, -1
0x47d3:	jne	0x47e2


0x580f:	mov	r15, rdx
0x5812:	cmp	r13, r15
0x5815:	jbe	0x52b9


0x57fa:	cmp	r13, rdx
0x57fd:	jbe	0x5803


0x487f:	test	eax, eax
0x4881:	mov	r9, qword ptr [rsp + 0x30]
0x4886:	movzx	r8d, byte ptr [rsp + 0x38]
0x488c:	mov	r11, qword ptr [rsp + 0x40]
0x4891:	jne	0x4e10


0x4897:	cmp	byte ptr [rsp + 0xf], 0
0x489c:	movzx	r10d, byte ptr [rsp + 0x28]
0x48a2:	jne	0x5825


0x5825:	cmp	dword ptr [rsp + 8], 2
0x582a:	movzx	ebx, byte ptr [rsp + 0xf]
0x582f:	mov	rbp, r11
0x5832:	sete	al
0x5835:	mov	byte ptr [rsp + 0xd], bl
0x5839:	jmp	0x5269


0x503b:	test	rax, rax
0x503e:	mov	r15, rax
0x5041:	je	0x5091


0x5091:	mov	edx, r12d
0x5094:	mov	rdi, rbx
0x5097:	movzx	r8d, byte ptr [rsp + 0x7d]
0x509d:	xor	edx, 1
0x50a0:	movzx	ebx, byte ptr [rsp + 0x7e]
0x50a5:	movzx	r10d, byte ptr [rsp + 0x7f]
0x50ab:	and	dl, byte ptr [rsp + 0xd]
0x50af:	mov	r15, qword ptr [rsp + 0x80]
0x50b7:	mov	r14, qword ptr [rsp + 0x40]
0x50bc:	mov	r13, qword ptr [rsp + 0x70]
0x50c1:	mov	r11, qword ptr [rsp + 0x30]
0x50c6:	cmp	rdi, 1
0x50ca:	jbe	0x56cb


0x5043:	cmp	rax, -1
0x5047:	je	0x5665


0x56cb:	mov	eax, edx
0x56cd:	jmp	0x4c27


0x50d0:	mov	rcx, rdi
0x50d3:	xor	esi, esi
0x50d5:	movzx	r9d, byte ptr [rsp + 0xf]
0x50db:	add	rcx, rbp
0x50de:	mov	rdi, qword ptr [rsp + 0x10]
0x50e3:	jmp	0x519e


0x5665:	mov	rdi, rbx
0x5668:	movzx	r8d, byte ptr [rsp + 0x7d]
0x566e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x5673:	movzx	r10d, byte ptr [rsp + 0x7f]
0x5679:	mov	r15, qword ptr [rsp + 0x80]
0x5681:	xor	r12d, r12d
0x5684:	mov	r14, qword ptr [rsp + 0x40]
0x5689:	mov	r13, qword ptr [rsp + 0x70]
0x568e:	mov	r11, qword ptr [rsp + 0x30]
0x5693:	movzx	edx, byte ptr [rsp + 0xd]
0x5698:	jmp	0x50c6


0x504d:	cmp	rax, -2
0x5051:	je	0x55f1


0x4c27:	test	al, al
0x4c29:	jne	0x55c1


0x519e:	test	dl, dl
0x51a0:	jne	0x50f0


0x50c6:	cmp	rdi, 1
0x50ca:	jbe	0x56cb


0x55f1:	mov	r11, qword ptr [rsp + 0x30]
0x55f6:	mov	rsi, r14
0x55f9:	mov	rcx, r13
0x55fc:	mov	rax, rbx
0x55ff:	mov	rdi, rbx
0x5602:	movzx	r8d, byte ptr [rsp + 0x7d]
0x5608:	movzx	ebx, byte ptr [rsp + 0x7e]
0x560d:	mov	r9, qword ptr [rsp + 0x88]
0x5615:	cmp	rsi, r11
0x5618:	movzx	r10d, byte ptr [rsp + 0x7f]
0x561e:	mov	r15, qword ptr [rsp + 0x80]
0x5626:	mov	r14, qword ptr [rsp + 0x40]
0x562b:	mov	r13, qword ptr [rsp + 0x70]
0x5630:	jae	0x5658


0x5057:	cmp	dword ptr [rsp + 8], 2
0x505c:	sete	al
0x505f:	and	al, byte ptr [rsp + 0xf]
0x5063:	jne	0x5200


0x4c2f:	cmp	dword ptr [rsp + 8], 2
0x4c34:	sete	dl
0x4c37:	jmp	0x4908


0x55c1:	movzx	edx, byte ptr [rsp + 0xd]
0x55c6:	xor	r12d, r12d
0x55c9:	jmp	0x50d0


0x51a6:	mov	eax, esi
0x51a8:	xor	eax, 1
0x51ab:	and	eax, r8d
0x51ae:	test	r10b, r10b
0x51b1:	je	0x51c1


0x50f0:	cmp	dword ptr [rsp + 8], 2
0x50f5:	sete	al
0x50f8:	test	r9b, r9b
0x50fb:	jne	0x55b0


0x5632:	cmp	byte ptr [rcx], 0
0x5635:	jne	0x5647


0x5658:	movzx	edx, byte ptr [rsp + 0xd]
0x565d:	xor	r12d, r12d
0x5660:	jmp	0x50c6


0x5069:	mov	edi, dword ptr [rsp + 0x9c]
0x5070:	call	0x1f20


0x5200:	cmp	r15, 1
0x5204:	je	0x5069


0x4908:	cmp	byte ptr [rsp + 0xd], 1
0x490d:	jne	0x4a22


0x51c1:	add	rbp, 1
0x51c5:	cmp	rbp, rcx
0x51c8:	jae	0x494c


0x51b3:	cmp	r13, r15
0x51b6:	jbe	0x51bd


0x5101:	mov	esi, r8d
0x5104:	xor	esi, 1
0x5107:	and	al, sil
0x510a:	je	0x513b


0x55b0:	movzx	ebx, byte ptr [rsp + 0xf]
0x55b5:	mov	rbp, r11
0x55b8:	mov	byte ptr [rsp + 0xd], bl
0x55bc:	jmp	0x5269


0x5637:	jmp	0x5658


0x5647:	add	rax, 1
0x564b:	lea	rdx, [rbp + rax]
0x5650:	cmp	r11, rdx
0x5653:	ja	0x5640


0x520a:	mov	rdi, qword ptr [rsp + 0x10]
0x520f:	lea	rcx, [rdi + r15]
0x5213:	lea	rdx, [rdi + r14 + 1]
0x5218:	lea	r8, [rcx + r14]
0x521c:	jmp	0x522d


0x4913:	test	dl, dl
0x4915:	jne	0x4a22


0x4a22:	cmp	byte ptr [rsp + 0xf], 0
0x4a27:	jne	0x491b


0x51ce:	test	al, al
0x51d0:	je	0x55ce


0x494c:	test	al, al
0x494e:	je	0x4970


0x51bd:	add	r15, 1
0x51c1:	add	rbp, 1
0x51c5:	cmp	rbp, rcx
0x51c8:	jae	0x494c


0x51b8:	mov	byte ptr [r14 + r15], 0x5c
0x51bd:	add	r15, 1
0x51c1:	add	rbp, 1
0x51c5:	cmp	rbp, rcx
0x51c8:	jae	0x494c


0x513b:	cmp	r13, r15
0x513e:	jbe	0x5145


0x510c:	cmp	r13, r15
0x510f:	jbe	0x5116


0x5655:	mov	rdi, rax
0x5658:	movzx	edx, byte ptr [rsp + 0xd]
0x565d:	xor	r12d, r12d
0x5660:	jmp	0x50c6


0x5640:	cmp	byte ptr [r9 + rax], 0
0x5645:	je	0x5655


0x522d:	movzx	ecx, byte ptr [rdx]
0x5230:	sub	ecx, 0x5b
0x5233:	cmp	cl, 0x21
0x5236:	ja	0x5220


0x491b:	mov	rsi, qword ptr [rsp + 0x20]
0x4920:	test	rsi, rsi
0x4923:	je	0x4939


0x4a2d:	jmp	0x4939


0x55ce:	xor	r10d, r10d
0x55d1:	jmp	0x518d


0x51d6:	cmp	r13, r15
0x51d9:	jbe	0x51e0


0x4970:	cmp	r15, r13
0x4973:	jae	0x4979


0x4950:	cmp	r13, r15
0x4953:	jbe	0x495a


0x5145:	lea	rax, [r15 + 1]
0x5149:	cmp	r13, rax
0x514c:	jbe	0x515b


0x5140:	mov	byte ptr [r14 + r15], 0x5c
0x5145:	lea	rax, [r15 + 1]
0x5149:	cmp	r13, rax
0x514c:	jbe	0x515b


0x5116:	lea	rsi, [r15 + 1]
0x511a:	cmp	r13, rsi
0x511d:	jbe	0x5125


0x5111:	mov	byte ptr [r14 + r15], 0x27
0x5116:	lea	rsi, [r15 + 1]
0x511a:	cmp	r13, rsi
0x511d:	jbe	0x5125


0x5238:	mov	esi, 1
0x523d:	shl	rsi, cl
0x5240:	mov	rcx, rsi
0x5243:	movabs	rsi, 0x20000002b
0x524d:	test	rcx, rsi
0x5250:	je	0x5220


0x5220:	add	rdx, 1
0x5224:	cmp	r8, rdx
0x5227:	je	0x5069


0x4939:	test	r10b, r10b
0x493c:	jne	0x4a83


0x4925:	mov	edx, ebx
0x4927:	shr	dl, 5
0x492a:	movzx	edx, dl
0x492d:	mov	edx, dword ptr [rsi + rdx*4]
0x4930:	bt	edx, ebx
0x4933:	jb	0x4a83


0x518d:	cmp	r13, r15
0x5190:	jbe	0x5196


0x51e0:	lea	rax, [r15 + 1]
0x51e4:	cmp	r13, rax
0x51e7:	jbe	0x51ef


0x51db:	mov	byte ptr [r14 + r15], 0x27
0x51e0:	lea	rax, [r15 + 1]
0x51e4:	cmp	r13, rax
0x51e7:	jbe	0x51ef


0x4975:	mov	byte ptr [r14 + r15], bl
0x4979:	movzx	edi, byte ptr [rsp + 0xe]
0x497e:	add	r15, 1
0x4982:	mov	eax, 0
0x4987:	test	r12b, r12b
0x498a:	cmove	edi, eax
0x498d:	mov	byte ptr [rsp + 0xe], dil
0x4992:	jmp	0x47c8


0x4979:	movzx	edi, byte ptr [rsp + 0xe]
0x497e:	add	r15, 1
0x4982:	mov	eax, 0
0x4987:	test	r12b, r12b
0x498a:	cmove	edi, eax
0x498d:	mov	byte ptr [rsp + 0xe], dil
0x4992:	jmp	0x47c8


0x495a:	lea	rax, [r15 + 1]
0x495e:	cmp	r13, rax
0x4961:	jbe	0x4969


0x4955:	mov	byte ptr [r14 + r15], 0x27
0x495a:	lea	rax, [r15 + 1]
0x495e:	cmp	r13, rax
0x4961:	jbe	0x4969


0x515b:	lea	rax, [r15 + 2]
0x515f:	cmp	r13, rax
0x5162:	jbe	0x5174


0x514e:	mov	eax, ebx
0x5150:	shr	al, 6
0x5153:	add	eax, 0x30
0x5156:	mov	byte ptr [r14 + r15 + 1], al
0x515b:	lea	rax, [r15 + 2]
0x515f:	cmp	r13, rax
0x5162:	jbe	0x5174


0x5125:	lea	rsi, [r15 + 2]
0x5129:	cmp	r13, rsi
0x512c:	jbe	0x5134


0x511f:	mov	byte ptr [r14 + r15 + 1], 0x24
0x5125:	lea	rsi, [r15 + 2]
0x5129:	cmp	r13, rsi
0x512c:	jbe	0x5134


0x5252:	mov	r14, qword ptr [rsp + 0x40]
0x5257:	mov	r13, qword ptr [rsp + 0x70]
0x525c:	mov	rbp, qword ptr [rsp + 0x30]
0x5261:	mov	dword ptr [rsp + 8], 2
0x5269:	cmp	byte ptr [rsp + 0xd], 0
0x526e:	je	0x5280


0x4942:	xor	eax, 1
0x4945:	add	rbp, 1
0x4949:	and	eax, r8d
0x494c:	test	al, al
0x494e:	je	0x4970


0x4a83:	cmp	dword ptr [rsp + 8], 2
0x4a88:	sete	dl
0x4a8b:	cmp	byte ptr [rsp + 0xf], 0
0x4a90:	mov	eax, edx
0x4a92:	jne	0x52e8


0x5196:	movzx	ebx, byte ptr [rdi + rbp]
0x519a:	add	r15, 1
0x519e:	test	dl, dl
0x51a0:	jne	0x50f0


0x5192:	mov	byte ptr [r14 + r15], bl
0x5196:	movzx	ebx, byte ptr [rdi + rbp]
0x519a:	add	r15, 1
0x519e:	test	dl, dl
0x51a0:	jne	0x50f0


0x51ef:	add	r15, 2
0x51f3:	xor	r10d, r10d
0x51f6:	xor	r8d, r8d
0x51f9:	jmp	0x518d


0x51e9:	mov	byte ptr [r14 + r15 + 1], 0x27
0x51ef:	add	r15, 2
0x51f3:	xor	r10d, r10d
0x51f6:	xor	r8d, r8d
0x51f9:	jmp	0x518d


0x47c8:	cmp	r11, rbp
0x47cb:	setne	r12b
0x47cf:	cmp	r11, -1
0x47d3:	jne	0x47e2


0x4969:	add	r15, 2
0x496d:	xor	r8d, r8d
0x4970:	cmp	r15, r13
0x4973:	jae	0x4979


0x4963:	mov	byte ptr [r14 + r15 + 1], 0x27
0x4969:	add	r15, 2
0x496d:	xor	r8d, r8d
0x4970:	cmp	r15, r13
0x4973:	jae	0x4979


0x5174:	and	ebx, 7
0x5177:	add	rbp, 1
0x517b:	add	r15, 3
0x517f:	add	ebx, 0x30
0x5182:	cmp	rbp, rcx
0x5185:	jae	0x4970


0x5164:	mov	eax, ebx
0x5166:	shr	al, 3
0x5169:	and	eax, 7
0x516c:	add	eax, 0x30
0x516f:	mov	byte ptr [r14 + r15 + 2], al
0x5174:	and	ebx, 7
0x5177:	add	rbp, 1
0x517b:	add	r15, 3
0x517f:	add	ebx, 0x30
0x5182:	cmp	rbp, rcx
0x5185:	jae	0x4970


0x5134:	add	r15, 3
0x5138:	mov	r8d, eax
0x513b:	cmp	r13, r15
0x513e:	jbe	0x5145


0x512e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x5134:	add	r15, 3
0x5138:	mov	r8d, eax
0x513b:	cmp	r13, r15
0x513e:	jbe	0x5145


0x4a98:	mov	eax, r8d
0x4a9b:	xor	eax, 1
0x4a9e:	and	al, dl
0x4aa0:	je	0x4ad1


0x52e8:	mov	rbp, r11
0x52eb:	jmp	0x5269


0x518b:	mov	esi, edx
0x518d:	cmp	r13, r15
0x5190:	jbe	0x5196


0x4ad1:	cmp	r13, r15
0x4ad4:	jbe	0x4adb


0x4aa2:	cmp	r13, r15
0x4aa5:	jbe	0x4aac


0x4adb:	add	r15, 1
0x4adf:	add	rbp, 1
0x4ae3:	jmp	0x4970


0x4ad6:	mov	byte ptr [r14 + r15], 0x5c
0x4adb:	add	r15, 1
0x4adf:	add	rbp, 1
0x4ae3:	jmp	0x4970


0x4aac:	lea	rdx, [r15 + 1]
0x4ab0:	cmp	r13, rdx
0x4ab3:	jbe	0x4abb


0x4aa7:	mov	byte ptr [r14 + r15], 0x27
0x4aac:	lea	rdx, [r15 + 1]
0x4ab0:	cmp	r13, rdx
0x4ab3:	jbe	0x4abb


0x4abb:	lea	rdx, [r15 + 2]
0x4abf:	cmp	r13, rdx
0x4ac2:	jbe	0x4aca


0x4ab5:	mov	byte ptr [r14 + r15 + 1], 0x24
0x4abb:	lea	rdx, [r15 + 2]
0x4abf:	cmp	r13, rdx
0x4ac2:	jbe	0x4aca


0x4aca:	add	r15, 3
0x4ace:	mov	r8d, eax
0x4ad1:	cmp	r13, r15
0x4ad4:	jbe	0x4adb


0x4ac4:	mov	byte ptr [r14 + r15 + 2], 0x27
0x4aca:	add	r15, 3
0x4ace:	mov	r8d, eax
0x4ad1:	cmp	r13, r15
0x4ad4:	jbe	0x4adb


0x5075:	mov	rdi, qword ptr [rsp + 0x28]
0x507a:	test	eax, eax
0x507c:	mov	eax, 0
0x5081:	cmove	r12d, eax
0x5085:	add	rbx, r15
0x5088:	call	0x1f10


0x508d:	test	eax, eax
0x508f:	je	0x5013


0x5013:	mov	rax, qword ptr [rsp + 0x10]
0x5018:	lea	r14, [rbp + rbx]
0x501d:	mov	rdx, qword ptr [rsp + 0x30]
0x5022:	mov	rcx, qword ptr [rsp + 0x28]
0x5027:	mov	rdi, qword ptr [rsp + 0x38]
0x502c:	lea	r13, [rax + r14]
0x5030:	sub	rdx, r14
0x5033:	mov	rsi, r13
0x5036:	call	0x7b30


0x483c:	movzx	r8d, byte ptr [rsp + 0x38]
0x4842:	movzx	r10d, byte ptr [rsp + 0x30]
0x4848:	mov	r11, rax
0x484b:	mov	r9, qword ptr [rsp + 0x28]
0x4850:	cmp	rbx, r11
0x4853:	mov	byte ptr [rsp + 0x28], r10b
0x4858:	ja	0x4e10


0x4fc0:	movzx	r8d, byte ptr [rsp + 0x40]
0x4fc6:	movzx	r10d, byte ptr [rsp + 0x38]
0x4fcc:	mov	r11, rax
0x4fcf:	mov	r9, qword ptr [rsp + 0x30]
0x4fd4:	lea	rax, [rsp + 0x9c]
0x4fdc:	xor	ecx, ecx
0x4fde:	mov	byte ptr [rsp + 0x7e], bl
0x4fe2:	mov	byte ptr [rsp + 0x7d], r8b
0x4fe7:	mov	rbx, rcx
0x4fea:	mov	qword ptr [rsp + 0x88], r9
0x4ff2:	mov	qword ptr [rsp + 0x38], rax
0x4ff7:	mov	byte ptr [rsp + 0x7f], r10b
0x4ffc:	mov	qword ptr [rsp + 0x80], r15
0x5004:	mov	qword ptr [rsp + 0x40], r14
0x5009:	mov	qword ptr [rsp + 0x70], r13
0x500e:	mov	qword ptr [rsp + 0x30], r11
0x5013:	mov	rax, qword ptr [rsp + 0x10]
0x5018:	lea	r14, [rbp + rbx]
0x501d:	mov	rdx, qword ptr [rsp + 0x30]
0x5022:	mov	rcx, qword ptr [rsp + 0x28]
0x5027:	mov	rdi, qword ptr [rsp + 0x38]
0x502c:	lea	r13, [rax + r14]
0x5030:	sub	rdx, r14
0x5033:	mov	rsi, r13
0x5036:	call	0x7b30


0x4bf8:	mov	rcx, qword ptr [rax]
0x4bfb:	movzx	edx, bl
0x4bfe:	movzx	r10d, byte ptr [rsp + 0x28]
0x4c04:	movzx	r8d, byte ptr [rsp + 0x30]
0x4c0a:	mov	r11, qword ptr [rsp + 0x38]
0x4c0f:	mov	edi, 1
0x4c14:	movzx	eax, word ptr [rcx + rdx*2]
0x4c18:	and	ax, 0x4000
0x4c1c:	setne	r12b
0x4c20:	sete	al
0x4c23:	and	al, byte ptr [rsp + 0xd]
0x4c27:	test	al, al
0x4c29:	jne	0x55c1


0x48d0:	xor	r10d, r10d
0x48d3:	cmp	r11, 1
0x48d7:	setne	al
0x48da:	cmp	r11, -1
0x48de:	jne	0x48ec


0x48e0:	mov	rax, qword ptr [rsp + 0x10]
0x48e5:	cmp	byte ptr [rax + 1], 0
0x48e9:	setne	al
0x48ec:	cmp	dword ptr [rsp + 8], 2
0x48f1:	sete	dl
0x48f4:	test	al, al
0x48f6:	je	0x4b48


0x48ec:	cmp	dword ptr [rsp + 8], 2
0x48f1:	sete	dl
0x48f4:	test	al, al
0x48f6:	je	0x4b48


0x4b48:	test	rbp, rbp
0x4b4b:	jne	0x48fc


0x48fc:	xor	r12d, r12d
0x48ff:	xor	eax, eax
0x4901:	nop	dword ptr [rax]
0x4908:	cmp	byte ptr [rsp + 0xd], 1
0x490d:	jne	0x4a22


0x4b51:	movzx	eax, byte ptr [rsp + 0xf]
0x4b56:	and	al, dl
0x4b58:	je	0x4908


0x4b5e:	mov	rbp, r11
0x4b61:	mov	dword ptr [rsp + 8], 2
0x4b69:	jmp	0x5269


0x4f68:	cmp	byte ptr [rsp + 0xf], 0
0x4f6d:	jne	0x5790


0x49b0:	cmp	eax, 5
0x49b3:	je	0x4f28


0x4f73:	xor	r12d, r12d
0x4f76:	xor	eax, eax
0x4f78:	mov	ebx, 0x3f
0x4f7d:	jmp	0x4939


0x5790:	mov	rbp, r11
0x5793:	movzx	eax, byte ptr [rsp + 0xf]
0x5798:	jmp	0x5269


0x4f28:	test	byte ptr [rsp + 0x78], 4
0x4f2d:	je	0x4f50


0x49b9:	cmp	eax, 2
0x49bc:	mov	ebx, 0x3f
0x49c1:	sete	dl
0x49c4:	xor	r12d, r12d
0x49c7:	xor	eax, eax
0x49c9:	jmp	0x4908


0x4f50:	xor	edx, edx
0x4f52:	xor	r12d, r12d
0x4f55:	xor	eax, eax
0x4f57:	mov	ebx, 0x3f
0x4f5c:	jmp	0x4908


0x4f2f:	lea	rcx, [rbp + 2]
0x4f33:	cmp	rcx, r11
0x4f36:	jae	0x4f50


0x4f38:	mov	rax, qword ptr [rsp + 0x10]
0x4f3d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x4f42:	je	0x56d2


0x56d2:	movzx	ebx, byte ptr [rax + rcx]
0x56d6:	cmp	bl, 0x3e
0x56d9:	ja	0x4f50


0x56df:	movabs	rax, 0x7000a38200000000
0x56e9:	bt	rax, rbx
0x56ed:	jae	0x4f50


0x56f3:	cmp	byte ptr [rsp + 0xf], 0
0x56f8:	jne	0x58e2


0x56fe:	cmp	r13, r15
0x5701:	jbe	0x5708


0x58e2:	mov	rbp, r11
0x58e5:	jmp	0x5280


0x5708:	lea	rax, [r15 + 1]
0x570c:	cmp	r13, rax
0x570f:	jbe	0x5717


0x5703:	mov	byte ptr [r14 + r15], 0x3f
0x5708:	lea	rax, [r15 + 1]
0x570c:	cmp	r13, rax
0x570f:	jbe	0x5717


0x5717:	lea	rax, [r15 + 2]
0x571b:	cmp	r13, rax
0x571e:	jbe	0x5726


0x5711:	mov	byte ptr [r14 + r15 + 1], 0x22
0x5717:	lea	rax, [r15 + 2]
0x571b:	cmp	r13, rax
0x571e:	jbe	0x5726


0x5726:	lea	rax, [r15 + 3]
0x572a:	cmp	r13, rax
0x572d:	jbe	0x5735


0x5720:	mov	byte ptr [r14 + r15 + 2], 0x22
0x5726:	lea	rax, [r15 + 3]
0x572a:	cmp	r13, rax
0x572d:	jbe	0x5735


0x5735:	add	r15, 4
0x5739:	xor	edx, edx
0x573b:	xor	r12d, r12d
0x573e:	xor	eax, eax
0x5740:	mov	rbp, rcx
0x5743:	jmp	0x4908


0x572f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x5735:	add	r15, 4
0x5739:	xor	edx, edx
0x573b:	xor	r12d, r12d
0x573e:	xor	eax, eax
0x5740:	mov	rbp, rcx
0x5743:	jmp	0x4908


0x4ee0:	cmp	byte ptr [rsp + 0xf], 0
0x4ee5:	jne	0x5790


0x49de:	mov	byte ptr [rsp + 0x7c], r12b
0x49e3:	xor	edx, edx
0x49e5:	xor	eax, eax
0x49e7:	mov	ebx, 0x27
0x49ec:	jmp	0x4908


0x4eeb:	test	r13, r13
0x4eee:	je	0x52f0


0x52f0:	cmp	r13, r15
0x52f3:	jbe	0x52fa


0x4ef4:	xor	edx, edx
0x4ef6:	cmp	qword ptr [rsp + 0x50], 0
0x4efc:	jne	0x52f0


0x52fa:	lea	rax, [r15 + 1]
0x52fe:	cmp	r13, rax
0x5301:	jbe	0x5309


0x52f5:	mov	byte ptr [r14 + r15], 0x27
0x52fa:	lea	rax, [r15 + 1]
0x52fe:	cmp	r13, rax
0x5301:	jbe	0x5309


0x4f02:	mov	qword ptr [rsp + 0x50], r13
0x4f07:	add	r15, 3
0x4f0b:	xor	eax, eax
0x4f0d:	mov	byte ptr [rsp + 0x7c], r12b
0x4f12:	xor	r8d, r8d
0x4f15:	mov	r13, rdx
0x4f18:	mov	ebx, 0x27
0x4f1d:	jmp	0x4939


0x5309:	lea	rax, [r15 + 2]
0x530d:	cmp	r13, rax
0x5310:	jbe	0x5902


0x5303:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x5309:	lea	rax, [r15 + 2]
0x530d:	cmp	r13, rax
0x5310:	jbe	0x5902


0x5902:	mov	rdx, r13
0x5905:	mov	r13, qword ptr [rsp + 0x50]
0x590a:	jmp	0x4f02


0x5316:	mov	rdx, r13
0x5319:	mov	byte ptr [r14 + r15 + 2], 0x27
0x531f:	mov	r13, qword ptr [rsp + 0x50]
0x5324:	jmp	0x4f02


0x4a14:	cmp	byte ptr [rsp + 0xd], 0
0x4a19:	jne	0x4a80


0x4a1b:	mov	ebx, edx
0x4a1d:	xor	r12d, r12d
0x4a20:	xor	eax, eax
0x4a22:	cmp	byte ptr [rsp + 0xf], 0
0x4a27:	jne	0x491b


0x4a80:	xor	r12d, r12d
0x4a83:	cmp	dword ptr [rsp + 8], 2
0x4a88:	sete	dl
0x4a8b:	cmp	byte ptr [rsp + 0xf], 0
0x4a90:	mov	eax, edx
0x4a92:	jne	0x52e8


0x4e20:	cmp	byte ptr [rsp + 0xf], 0
0x4e25:	jne	0x5790


0x4a53:	cmp	byte ptr [rsp + 0xd], 0
0x4a58:	je	0x4c70


0x4e2b:	add	rbp, 1
0x4e2f:	mov	eax, r8d
0x4e32:	xor	r12d, r12d
0x4e35:	mov	ebx, 0x5c
0x4e3a:	jmp	0x494c


0x4c70:	mov	edx, 0x5c
0x4c75:	mov	ebx, 0x5c
0x4c7a:	jmp	0x4a14


0x4a5e:	cmp	byte ptr [rsp + 0xf], 0
0x4a63:	je	0x4c70


0x4a69:	cmp	qword ptr [rsp + 0x18], 0
0x4a6f:	jne	0x4e2b


0x4a75:	mov	ebx, 0x5c
0x4a7a:	nop	word ptr [rax + rax]
0x4a80:	xor	r12d, r12d
0x4a83:	cmp	dword ptr [rsp + 8], 2
0x4a88:	sete	dl
0x4a8b:	cmp	byte ptr [rsp + 0xf], 0
0x4a90:	mov	eax, edx
0x4a92:	jne	0x52e8


0x4afb:	xor	edx, edx
0x4afd:	test	byte ptr [rsp + 0x78], 1
0x4b02:	je	0x4a1b


0x4cc3:	cmp	dword ptr [rsp + 8], 2
0x4cc8:	sete	dl
0x4ccb:	cmp	byte ptr [rsp + 0xf], 0
0x4cd0:	jne	0x586a


0x4b08:	add	rbp, 1
0x4b0c:	jmp	0x47c8


0x4cd6:	mov	eax, r8d
0x4cd9:	mov	rcx, r15
0x4cdc:	xor	eax, 1
0x4cdf:	and	al, dl
0x4ce1:	je	0x4d10


0x586a:	movzx	ebx, byte ptr [rsp + 0xf]
0x586f:	mov	rbp, r11
0x5872:	mov	eax, edx
0x5874:	mov	byte ptr [rsp + 0xd], bl
0x5878:	jmp	0x5269


0x4d10:	cmp	r13, rcx
0x4d13:	jbe	0x4d1a


0x4ce3:	cmp	r13, r15
0x4ce6:	jbe	0x4ced


0x4d1a:	cmp	dword ptr [rsp + 8], 2
0x4d1f:	lea	r15, [rcx + 1]
0x4d23:	je	0x5329


0x4d15:	mov	byte ptr [r14 + rcx], 0x5c
0x4d1a:	cmp	dword ptr [rsp + 8], 2
0x4d1f:	lea	r15, [rcx + 1]
0x4d23:	je	0x5329


0x4ced:	lea	rcx, [r15 + 1]
0x4cf1:	cmp	r13, rcx
0x4cf4:	jbe	0x4cfc


0x4ce8:	mov	byte ptr [r14 + r15], 0x27
0x4ced:	lea	rcx, [r15 + 1]
0x4cf1:	cmp	r13, rcx
0x4cf4:	jbe	0x4cfc


0x5329:	mov	eax, r12d
0x532c:	mov	ebx, 0x30
0x5331:	xor	r12d, r12d
0x5334:	jmp	0x4939


0x4d29:	lea	rax, [rbp + 1]
0x4d2d:	cmp	rax, r11
0x4d30:	jae	0x4d4b


0x4cfc:	lea	rcx, [r15 + 2]
0x4d00:	cmp	r13, rcx
0x4d03:	ja	0x5339


0x4cf6:	mov	byte ptr [r14 + r15 + 1], 0x24
0x4cfc:	lea	rcx, [r15 + 2]
0x4d00:	cmp	r13, rcx
0x4d03:	ja	0x5339


0x4d32:	mov	rax, qword ptr [rsp + 0x10]
0x4d37:	movzx	eax, byte ptr [rax + rbp + 1]
0x4d3c:	mov	byte ptr [rsp + 0x28], al
0x4d40:	sub	eax, 0x30
0x4d43:	cmp	al, 9
0x4d45:	jbe	0x5579


0x4d4b:	mov	eax, r12d
0x4d4e:	mov	ebx, 0x30
0x4d53:	xor	r12d, r12d
0x4d56:	jmp	0x4908


0x4d09:	lea	rcx, [r15 + 3]
0x4d0d:	mov	r8d, eax
0x4d10:	cmp	r13, rcx
0x4d13:	jbe	0x4d1a


0x5339:	mov	byte ptr [r14 + r15 + 2], 0x27
0x533f:	jmp	0x4d09


0x5579:	cmp	r13, r15
0x557c:	jbe	0x5583


0x5583:	lea	rax, [rcx + 2]
0x5587:	cmp	r13, rax
0x558a:	jbe	0x5592


0x557e:	mov	byte ptr [r14 + r15], 0x30
0x5583:	lea	rax, [rcx + 2]
0x5587:	cmp	r13, rax
0x558a:	jbe	0x5592


0x5592:	mov	eax, r12d
0x5595:	lea	r15, [rcx + 3]
0x5599:	xor	r12d, r12d
0x559c:	mov	ebx, 0x30
0x55a1:	jmp	0x4908


0x558c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x5592:	mov	eax, r12d
0x5595:	lea	r15, [rcx + 3]
0x5599:	xor	r12d, r12d
0x559c:	mov	ebx, 0x30
0x55a1:	jmp	0x4908


0x4a02:	cmp	dword ptr [rsp + 8], 2
0x4a07:	sete	al
0x4a0a:	and	al, byte ptr [rsp + 0xf]
0x4a0e:	jne	0x4b5e


0x4dc0:	mov	edx, 0xd
0x4dc5:	xor	r10d, r10d
0x4dc8:	mov	ebx, 0x72
0x4dcd:	jmp	0x4a02


0x5344:	test	ebx, ebx
0x5346:	jne	0x4773


0x534c:	mov	byte ptr [rsp + 0xd], 1
0x5351:	test	r13, r13
0x5354:	jne	0x58ea


0x535a:	lea	rax, [rip + 0x1185c]
0x5361:	mov	qword ptr [rsp + 0x50], 0
0x536a:	mov	byte ptr [rsp + 0xe], 1
0x536f:	mov	byte ptr [rsp + 0x7c], 0
0x5374:	xor	r12d, r12d
0x5377:	mov	byte ptr [rsp + 0xf], 0
0x537c:	mov	qword ptr [rsp + 0x18], 1
0x5385:	mov	qword ptr [rsp + 0x48], rax
0x538a:	mov	r15d, 1
0x5390:	mov	dword ptr [rsp + 8], 2
0x5398:	jmp	0x47b3


0x58ea:	mov	byte ptr [rsp + 0xe], 1
0x58ef:	xor	eax, eax
0x58f1:	xor	r12d, r12d
0x58f4:	mov	qword ptr [rsp + 0x50], 0
0x58fd:	jmp	0x4ea4


0x4ea4:	lea	rbx, [rip + 0x11d12]
0x4eab:	mov	byte ptr [r14], 0x27
0x4eaf:	mov	dword ptr [rsp + 8], 2
0x4eb7:	mov	r15d, 1
0x4ebd:	mov	qword ptr [rsp + 0x18], 1
0x4ec6:	mov	byte ptr [rsp + 0xf], 0
0x4ecb:	mov	qword ptr [rsp + 0x48], rbx
0x4ed0:	mov	byte ptr [rsp + 0x7c], al
0x4ed4:	jmp	0x47b3


0x53a8:	test	r13, r13
0x53ab:	je	0x55d6


0x579d:	lea	rax, [rip + 0x11417]
0x57a4:	mov	byte ptr [rsp + 0xe], 1
0x57a9:	mov	byte ptr [rsp + 0x7c], 0
0x57ae:	xor	r12d, r12d
0x57b1:	mov	qword ptr [rsp + 0x50], 0
0x57ba:	mov	byte ptr [rsp + 0xf], 1
0x57bf:	mov	byte ptr [rsp + 0xd], 1
0x57c4:	mov	qword ptr [rsp + 0x18], 1
0x57cd:	xor	r15d, r15d
0x57d0:	mov	qword ptr [rsp + 0x48], rax
0x57d5:	jmp	0x47b3


0x55d6:	mov	qword ptr [rsp + 0x50], 0
0x55df:	mov	byte ptr [rsp + 0xe], 1
0x55e4:	xor	r12d, r12d
0x55e7:	mov	byte ptr [rsp + 0x7c], 0
0x55ec:	jmp	0x53cb


0x53b1:	mov	byte ptr [r14], 0x22
0x53b5:	mov	byte ptr [rsp + 0xe], 1
0x53ba:	xor	r12d, r12d
0x53bd:	mov	byte ptr [rsp + 0x7c], 0
0x53c2:	mov	qword ptr [rsp + 0x50], 0
0x53cb:	lea	rax, [rip + 0x117e9]
0x53d2:	mov	byte ptr [rsp + 0xf], 0
0x53d7:	mov	byte ptr [rsp + 0xd], 1
0x53dc:	mov	qword ptr [rsp + 0x18], 1
0x53e5:	mov	r15d, 1
0x53eb:	mov	qword ptr [rsp + 0x48], rax
0x53f0:	jmp	0x47b3


0x53cb:	lea	rax, [rip + 0x117e9]
0x53d2:	mov	byte ptr [rsp + 0xf], 0
0x53d7:	mov	byte ptr [rsp + 0xd], 1
0x53dc:	mov	qword ptr [rsp + 0x18], 1
0x53e5:	mov	r15d, 1
0x53eb:	mov	qword ptr [rsp + 0x48], rax
0x53f0:	jmp	0x47b3


0x53f5:	lea	rax, [rip + 0x117bf]
0x53fc:	mov	byte ptr [rsp + 0xe], 1
0x5401:	mov	byte ptr [rsp + 0x7c], 0
0x5406:	xor	r12d, r12d
0x5409:	mov	qword ptr [rsp + 0x50], 0
0x5412:	mov	byte ptr [rsp + 0xf], 1
0x5417:	mov	byte ptr [rsp + 0xd], 1
0x541c:	mov	qword ptr [rsp + 0x18], 1
0x5425:	xor	r15d, r15d
0x5428:	mov	qword ptr [rsp + 0x48], rax
0x542d:	mov	dword ptr [rsp + 8], 5
0x5435:	jmp	0x47b3


0x543a:	mov	byte ptr [rsp + 0xe], 1
0x543f:	mov	byte ptr [rsp + 0x7c], 0
0x5444:	xor	r12d, r12d
0x5447:	mov	qword ptr [rsp + 0x50], 0
0x5450:	mov	byte ptr [rsp + 0xf], 0
0x5455:	xor	r15d, r15d
0x5458:	mov	byte ptr [rsp + 0xd], 1
0x545d:	mov	qword ptr [rsp + 0x18], 0
0x5466:	mov	qword ptr [rsp + 0x48], 0
0x546f:	jmp	0x47b3


0x5474:	cmp	dword ptr [rsp + 8], 0xa
0x5479:	je	0x54d1


0x54d1:	xor	r15d, r15d
0x54d4:	test	ebx, ebx
0x54d6:	je	0x569d


0x547b:	lea	rsi, [rip + 0x1173d]
0x5482:	xor	edi, edi
0x5484:	mov	edx, 5
0x5489:	call	0x1bf0


0x569d:	mov	rdx, qword ptr [rsp + 0x68]
0x56a2:	movzx	eax, byte ptr [rdx]
0x56a5:	test	al, al
0x56a7:	je	0x54dc


0x54dc:	test	ebx, ebx
0x54de:	mov	rbx, qword ptr [rsp + 0x60]
0x54e3:	setne	byte ptr [rsp + 0xf]
0x54e8:	xor	r12d, r12d
0x54eb:	mov	rdi, rbx
0x54ee:	call	0x1c10


0x56b9:	add	r15, 1
0x56bd:	movzx	eax, byte ptr [rdx + r15]
0x56c2:	test	al, al
0x56c4:	jne	0x56b0


0x56b5:	mov	byte ptr [r14 + r15], al
0x56b9:	add	r15, 1
0x56bd:	movzx	eax, byte ptr [rdx + r15]
0x56c2:	test	al, al
0x56c4:	jne	0x56b0


0x56c6:	jmp	0x54dc


0x56b0:	cmp	r13, r15
0x56b3:	jbe	0x56b9


0x54f3:	mov	qword ptr [rsp + 0x48], rbx
0x54f8:	mov	qword ptr [rsp + 0x18], rax
0x54fd:	mov	byte ptr [rsp + 0xe], 1
0x5502:	mov	byte ptr [rsp + 0x7c], 0
0x5507:	mov	qword ptr [rsp + 0x50], 0
0x5510:	mov	byte ptr [rsp + 0xd], 1
0x5515:	jmp	0x47b3


0x548e:	mov	rcx, rax
0x5491:	mov	qword ptr [rsp + 0x68], rax
0x5496:	lea	rax, [rip + 0x11722]
0x549d:	cmp	rcx, rax
0x54a0:	je	0x583e


0x583e:	mov	esi, dword ptr [rsp + 8]
0x5842:	mov	rdi, rcx
0x5845:	call	0x45f0


0x54a6:	lea	rsi, [rip + 0x11710]
0x54ad:	xor	edi, edi
0x54af:	mov	edx, 5
0x54b4:	call	0x1bf0


0x54b9:	mov	rcx, rax
0x54bc:	mov	qword ptr [rsp + 0x60], rax
0x54c1:	lea	rax, [rip + 0x116f5]
0x54c8:	cmp	rcx, rax
0x54cb:	je	0x5854


0x5854:	mov	esi, dword ptr [rsp + 8]
0x5858:	mov	rdi, rcx
0x585b:	call	0x45f0


0x5860:	mov	qword ptr [rsp + 0x60], rax
0x5865:	jmp	0x54d1


0x584a:	mov	qword ptr [rsp + 0x68], rax
0x584f:	jmp	0x54a6


0x551a:	mov	byte ptr [rsp + 0xe], 1
0x551f:	mov	byte ptr [rsp + 0x7c], 0
0x5524:	xor	r12d, r12d
0x5527:	mov	qword ptr [rsp + 0x50], 0
0x5530:	mov	byte ptr [rsp + 0xf], 0
0x5535:	xor	r15d, r15d
0x5538:	mov	byte ptr [rsp + 0xd], 0
0x553d:	mov	qword ptr [rsp + 0x18], 0
0x5546:	mov	qword ptr [rsp + 0x48], 0
0x554f:	jmp	0x47b3


0x5554:	mov	byte ptr [rsp + 0xe], 1
0x5559:	mov	byte ptr [rsp + 0x7c], 0
0x555e:	xor	r12d, r12d
0x5561:	mov	qword ptr [rsp + 0x50], 0
0x556a:	mov	byte ptr [rsp + 0xf], 1
0x556f:	mov	byte ptr [rsp + 0xd], 1
0x5574:	jmp	0x4793


0x4793:	lea	rax, [rip + 0x12423]
0x479a:	mov	qword ptr [rsp + 0x18], 1
0x47a3:	xor	r15d, r15d
0x47a6:	mov	dword ptr [rsp + 8], 2
0x47ae:	mov	qword ptr [rsp + 0x48], rax
0x47b3:	xor	r11d, r11d
0x47b6:	mov	rax, rbp
0x47b9:	mov	r8d, r12d
0x47bc:	mov	rbp, r11
0x47bf:	mov	r11, rax
0x47c2:	nop	word ptr [rax + rax]
0x47c8:	cmp	r11, rbp
0x47cb:	setne	r12b
0x47cf:	cmp	r11, -1
0x47d3:	jne	0x47e2


0x5748:	test	ebx, ebx
0x574a:	je	0x58d8


0x58d8:	mov	byte ptr [rsp + 0xd], 0
0x58dd:	jmp	0x5351


0x5750:	lea	rax, [rip + 0x11466]
0x5757:	mov	byte ptr [rsp + 0xe], 1
0x575c:	mov	byte ptr [rsp + 0x7c], 0
0x5761:	xor	r12d, r12d
0x5764:	mov	qword ptr [rsp + 0x50], 0
0x576d:	mov	byte ptr [rsp + 0xf], 1
0x5772:	mov	byte ptr [rsp + 0xd], 0
0x5777:	mov	qword ptr [rsp + 0x18], 1
0x5780:	xor	r15d, r15d
0x5783:	mov	qword ptr [rsp + 0x48], rax
0x5788:	jmp	0x47b3


0x5351:	test	r13, r13
0x5354:	jne	0x58ea


0x5914:	nop	
0x5916:	nop	word ptr cs:[rax + rax]


0x5acb:	nop	dword ptr [rax + rax]


0x5b06:	nop	word ptr cs:[rax + rax]


0x5b21:	nop	dword ptr [rax + rax]
0x5b26:	nop	word ptr cs:[rax + rax]


0x5b41:	nop	dword ptr [rax + rax]
0x5b46:	nop	word ptr cs:[rax + rax]


0x5b85:	nop	
0x5b86:	nop	word ptr cs:[rax + rax]


0x5ba5:	nop	
0x5ba6:	nop	word ptr cs:[rax + rax]


0x5c54:	nop	
0x5c56:	nop	word ptr cs:[rax + rax]


0x5d43:	nop	dword ptr [rax]
0x5d46:	nop	word ptr cs:[rax + rax]


0x5d5a:	nop	word ptr [rax + rax]


0x5df3:	nop	dword ptr [rax]
0x5df6:	nop	word ptr cs:[rax + rax]


0x5e13:	nop	dword ptr [rax]
0x5e16:	nop	word ptr cs:[rax + rax]


0x5e2c:	nop	dword ptr [rax]


0x5e48:	nop	dword ptr [rax + rax]


0x5e64:	nop	
0x5e66:	nop	word ptr cs:[rax + rax]


0x5efe:	nop	


0x5f8a:	nop	word ptr [rax + rax]


0x5f9c:	nop	dword ptr [rax]


0x5faf:	nop	


0x6048:	nop	dword ptr [rax + rax]


0x6071:	nop	dword ptr [rax + rax]
0x6076:	nop	word ptr cs:[rax + rax]


0x608a:	nop	word ptr [rax + rax]


0x611e:	nop	


0x61b1:	nop	dword ptr [rax + rax]
0x61b6:	nop	word ptr cs:[rax + rax]


0x61cc:	nop	dword ptr [rax]


0x61e7:	nop	word ptr [rax + rax]


0x6203:	nop	dword ptr [rax]
0x6206:	nop	word ptr cs:[rax + rax]


0x621c:	nop	dword ptr [rax]


0x6234:	nop	
0x6236:	nop	word ptr cs:[rax + rax]


0x6253:	nop	dword ptr [rax]
0x6256:	nop	word ptr cs:[rax + rax]


0x6278:	nop	dword ptr [rax + rax]


0x62de:	nop	


0x62ee:	nop	


0x6707:	nop	word ptr [rax + rax]


0x67a8:	nop	dword ptr [rax + rax]


0x6885:	nop	
0x6886:	nop	word ptr cs:[rax + rax]


0x692a:	nop	word ptr [rax + rax]


0x6954:	nop	
0x6956:	nop	word ptr cs:[rax + rax]


0x6962:	nop	dword ptr [rax]
0x6966:	nop	word ptr cs:[rax + rax]


0x69a6:	nop	word ptr cs:[rax + rax]


0x69d4:	nop	
0x69d6:	nop	word ptr cs:[rax + rax]


0x6a62:	nop	dword ptr [rax]
0x6a66:	nop	word ptr cs:[rax + rax]


0x6aba:	nop	word ptr [rax + rax]


0x6ad7:	nop	word ptr [rax + rax]


0x6b0e:	nop	


0x6b38:	nop	dword ptr [rax + rax]


0x6b53:	nop	word ptr cs:[rax + rax]
0x6b5d:	nop	dword ptr [rax]


0x6c71:	nop	dword ptr [rax + rax]
0x6c76:	nop	word ptr cs:[rax + rax]


0x6ca1:	nop	word ptr cs:[rax + rax]
0x6cab:	nop	dword ptr [rax + rax]


0x6e60:	movabs	r8, 0x8000000000000000
0x6e6a:	movsxd	rsi, eax
0x6e6d:	mov	rax, r8
0x6e70:	cqo	
0x6e72:	idiv	rsi
0x6e75:	cmp	rbp, rax
0x6e78:	mov	r9, rax
0x6e7b:	jl	0x7325


0x7325:	mov	eax, 1
0x732a:	mov	rbp, r8
0x732d:	jmp	0x6eb8


0x6e81:	movabs	r10, 0x7fffffffffffffff
0x6e8b:	mov	rax, r10
0x6e8e:	cqo	
0x6e90:	idiv	rsi
0x6e93:	cmp	rbp, rax
0x6e96:	jg	0x7332


0x6eb8:	or	r12d, eax
0x6ebb:	nop	dword ptr [rax + rax]
0x6ec0:	movsxd	rax, edi
0x6ec3:	add	rcx, rax
0x6ec6:	mov	eax, r12d
0x6ec9:	or	eax, 2
0x6ecc:	mov	qword ptr [rbx], rcx
0x6ecf:	cmp	byte ptr [rcx], 0
0x6ed2:	cmovne	r12d, eax
0x6ed6:	jmp	0x6d36


0x6e9c:	imul	rbp, rsi
0x6ea0:	cmp	r9, rbp
0x6ea3:	jg	0x7325


0x7332:	mov	eax, 1
0x7337:	mov	rbp, r10
0x733a:	jmp	0x6eb8


0x6ea9:	cmp	rax, rbp
0x6eac:	jl	0x7332


0x6eb2:	imul	rbp, rsi
0x6eb6:	xor	eax, eax
0x6eb8:	or	r12d, eax
0x6ebb:	nop	dword ptr [rax + rax]
0x6ec0:	movsxd	rax, edi
0x6ec3:	add	rcx, rax
0x6ec6:	mov	eax, r12d
0x6ec9:	or	eax, 2
0x6ecc:	mov	qword ptr [rbx], rcx
0x6ecf:	cmp	byte ptr [rcx], 0
0x6ed2:	cmovne	r12d, eax
0x6ed6:	jmp	0x6d36


0x7220:	mov	r12d, 1
0x7226:	movabs	rbp, 0x8000000000000000
0x7230:	jmp	0x6ec0


0x6ef3:	movabs	rax, 0x3fffffffffffffff
0x6efd:	cmp	rbp, rax
0x6f00:	jg	0x72e0


0x6ec0:	movsxd	rax, edi
0x6ec3:	add	rcx, rax
0x6ec6:	mov	eax, r12d
0x6ec9:	or	eax, 2
0x6ecc:	mov	qword ptr [rbx], rcx
0x6ecf:	cmp	byte ptr [rcx], 0
0x6ed2:	cmovne	r12d, eax
0x6ed6:	jmp	0x6d36


0x6f06:	add	rbp, rbp
0x6f09:	jmp	0x6ec0


0x72e0:	mov	r12d, 1
0x72e6:	movabs	rbp, 0x7fffffffffffffff
0x72f0:	jmp	0x6ec0


0x6f23:	movabs	rax, 0x3fffffffffffff
0x6f2d:	cmp	rbp, rax
0x6f30:	jg	0x72e0


0x6f36:	shl	rbp, 9
0x6f3a:	jmp	0x6ec0


0x6f8f:	cmp	r10, rbp
0x6f92:	jle	0x6f70


0x6f70:	mov	rax, r9
0x6f73:	cqo	
0x6f75:	idiv	rsi
0x6f78:	cmp	rax, rbp
0x6f7b:	jl	0x7268


0x6f94:	mov	r11d, 1
0x6f9a:	movabs	rbp, 0x8000000000000000
0x6fa4:	jmp	0x6f85


0x7268:	mov	r11d, 1
0x726e:	movabs	rbp, 0x7fffffffffffffff
0x7278:	jmp	0x6f85


0x6f81:	imul	rbp, rsi
0x6f85:	sub	r8d, 1
0x6f89:	je	0x70b0


0x6f85:	sub	r8d, 1
0x6f89:	je	0x70b0


0x70b0:	or	r12d, r11d
0x70b3:	jmp	0x6ec0


0x6fff:	cmp	r10, rbp
0x7002:	jle	0x6fe0


0x6fe0:	mov	rax, r9
0x6fe3:	cqo	
0x6fe5:	idiv	rsi
0x6fe8:	cmp	rax, rbp
0x6feb:	jl	0x7238


0x7004:	mov	r11d, 1
0x700a:	movabs	rbp, 0x8000000000000000
0x7014:	jmp	0x6ff5


0x7238:	mov	r11d, 1
0x723e:	movabs	rbp, 0x7fffffffffffffff
0x7248:	jmp	0x6ff5


0x6ff1:	imul	rbp, rsi
0x6ff5:	sub	r8d, 1
0x6ff9:	je	0x70b0


0x6ff5:	sub	r8d, 1
0x6ff9:	je	0x70b0


0x703e:	sub	r8, 1
0x7042:	mov	rax, r8
0x7045:	cqo	
0x7047:	idiv	rsi
0x704a:	cmp	rbp, rax
0x704d:	jg	0x72e0


0x7053:	imul	rbp, rsi
0x7057:	jmp	0x6ec0


0x7091:	mov	rax, r9
0x7094:	cqo	
0x7096:	idiv	rsi
0x7099:	cmp	rax, rbp
0x709c:	jl	0x7310


0x7280:	mov	r11d, 1
0x7286:	movabs	rbp, 0x8000000000000000
0x7290:	jmp	0x70a6


0x7310:	mov	r11d, 1
0x7316:	movabs	rbp, 0x7fffffffffffffff
0x7320:	jmp	0x70a6


0x70a2:	imul	rbp, rsi
0x70a6:	sub	r8d, 1
0x70aa:	jne	0x7088


0x70a6:	sub	r8d, 1
0x70aa:	jne	0x7088


0x7088:	cmp	r10, rbp
0x708b:	jg	0x7280


0x710b:	cmp	r10, rbp
0x710e:	jle	0x70f0


0x70f0:	mov	rax, r9
0x70f3:	cqo	
0x70f5:	idiv	rsi
0x70f8:	cmp	rax, rbp
0x70fb:	jl	0x7298


0x7110:	mov	r11d, 1
0x7116:	movabs	rbp, 0x8000000000000000
0x7120:	jmp	0x7105


0x7298:	mov	r11d, 1
0x729e:	movabs	rbp, 0x7fffffffffffffff
0x72a8:	jmp	0x7105


0x7101:	imul	rbp, rsi
0x7105:	sub	r8d, 1
0x7109:	je	0x70b0


0x7105:	sub	r8d, 1
0x7109:	je	0x70b0


0x7177:	cmp	r10, rbp
0x717a:	jle	0x7158


0x7158:	mov	rax, r9
0x715b:	cqo	
0x715d:	idiv	rsi
0x7160:	cmp	rax, rbp
0x7163:	jl	0x72b0


0x717c:	mov	r11d, 1
0x7182:	movabs	rbp, 0x8000000000000000
0x718c:	jmp	0x716d


0x72b0:	mov	r11d, 1
0x72b6:	movabs	rbp, 0x7fffffffffffffff
0x72c0:	jmp	0x716d


0x7169:	imul	rbp, rsi
0x716d:	sub	r8d, 1
0x7171:	je	0x70b0


0x716d:	sub	r8d, 1
0x7171:	je	0x70b0


0x71a3:	movabs	rax, 0x1fffffffffffff
0x71ad:	cmp	rbp, rax
0x71b0:	jg	0x72e0


0x71b6:	shl	rbp, 0xa
0x71ba:	jmp	0x6ec0


0x71ed:	mov	rax, r9
0x71f0:	cqo	
0x71f2:	idiv	rsi
0x71f5:	cmp	rax, rbp
0x71f8:	jl	0x72c8


0x7250:	mov	r11d, 1
0x7256:	movabs	rbp, 0x8000000000000000
0x7260:	jmp	0x7202


0x72c8:	mov	r11d, 1
0x72ce:	movabs	rbp, 0x7fffffffffffffff
0x72d8:	jmp	0x7202


0x71fe:	imul	rbp, rsi
0x7202:	sub	r8d, 1
0x7206:	jne	0x71e8


0x7202:	sub	r8d, 1
0x7206:	jne	0x71e8


0x7208:	jmp	0x70b0


0x71e8:	cmp	r10, rbp
0x71eb:	jg	0x7250


0x7363:	nop	word ptr cs:[rax + rax]
0x736d:	nop	dword ptr [rax]


0x7548:	mov	rax, rbx
0x754b:	mul	rsi
0x754e:	jo	0x7741


0x7741:	or	rax, 0xffffffffffffffff
0x7745:	mov	r8d, 1
0x774b:	jmp	0x7557


0x7554:	xor	r8d, r8d
0x7557:	mul	rsi
0x755a:	jo	0x7732


0x7557:	mul	rsi
0x755a:	jo	0x7732


0x7732:	mov	r8d, 1
0x7738:	or	rbx, 0xffffffffffffffff
0x773c:	jmp	0x7563


0x7560:	mov	rbx, rax
0x7563:	or	ebp, r8d
0x7566:	nop	word ptr cs:[rax + rax]
0x7570:	movsxd	rdi, edi
0x7573:	mov	eax, ebp
0x7575:	add	rcx, rdi
0x7578:	or	eax, 2
0x757b:	mov	qword ptr [r15], rcx
0x757e:	cmp	byte ptr [rcx], 0
0x7581:	mov	qword ptr [r14], rbx
0x7584:	cmovne	ebp, eax
0x7587:	jmp	0x744d


0x7563:	or	ebp, r8d
0x7566:	nop	word ptr cs:[rax + rax]
0x7570:	movsxd	rdi, edi
0x7573:	mov	eax, ebp
0x7575:	add	rcx, rdi
0x7578:	or	eax, 2
0x757b:	mov	qword ptr [r15], rcx
0x757e:	cmp	byte ptr [rcx], 0
0x7581:	mov	qword ptr [r14], rbx
0x7584:	cmovne	ebp, eax
0x7587:	jmp	0x744d


0x7597:	mov	edx, 2
0x759c:	mov	rax, rdx
0x759f:	mul	rbx
0x75a2:	jo	0x763e


0x763e:	mov	ebp, 1
0x7643:	or	rbx, 0xffffffffffffffff
0x7647:	jmp	0x7570


0x75a8:	add	rbx, rbx
0x75ab:	jmp	0x7570


0x7570:	movsxd	rdi, edi
0x7573:	mov	eax, ebp
0x7575:	add	rcx, rdi
0x7578:	or	eax, 2
0x757b:	mov	qword ptr [r15], rcx
0x757e:	cmp	byte ptr [rcx], 0
0x7581:	mov	qword ptr [r14], rbx
0x7584:	cmovne	ebp, eax
0x7587:	jmp	0x744d


0x75ad:	mov	edx, 0x200
0x75b2:	mov	rax, rdx
0x75b5:	mul	rbx
0x75b8:	jo	0x763e


0x75be:	shl	rbx, 9
0x75c2:	jmp	0x7570


0x75c4:	mov	r8d, 7
0x75ca:	xor	r9d, r9d
0x75cd:	nop	dword ptr [rax]
0x75d0:	mov	rax, rbx
0x75d3:	mul	rsi
0x75d6:	mov	rbx, rax
0x75d9:	jo	0x776e


0x776e:	mov	r9d, 1
0x7774:	or	rbx, 0xffffffffffffffff
0x7778:	jmp	0x75df


0x75df:	sub	r8d, 1
0x75e3:	jne	0x75d0


0x75e5:	or	ebp, r9d
0x75e8:	jmp	0x7570


0x75d0:	mov	rax, rbx
0x75d3:	mul	rsi
0x75d6:	mov	rbx, rax
0x75d9:	jo	0x776e


0x75ea:	mov	r8d, 8
0x75f0:	xor	r9d, r9d
0x75f3:	nop	dword ptr [rax + rax]
0x75f8:	mov	rax, rbx
0x75fb:	mul	rsi
0x75fe:	mov	rbx, rax
0x7601:	jo	0x7750


0x7750:	mov	r9d, 1
0x7756:	or	rbx, 0xffffffffffffffff
0x775a:	jmp	0x7607


0x7607:	sub	r8d, 1
0x760b:	jne	0x75f8


0x760d:	jmp	0x75e5


0x75f8:	mov	rax, rbx
0x75fb:	mul	rsi
0x75fe:	mov	rbx, rax
0x7601:	jo	0x7750


0x760f:	mov	r8d, 4
0x7615:	xor	r9d, r9d
0x7618:	mov	rax, rbx
0x761b:	mul	rsi
0x761e:	mov	rbx, rax
0x7621:	jo	0x7723


0x7723:	mov	r9d, 1
0x7729:	or	rbx, 0xffffffffffffffff
0x772d:	jmp	0x7627


0x7627:	sub	r8d, 1
0x762b:	jne	0x7618


0x762d:	jmp	0x75e5


0x7618:	mov	rax, rbx
0x761b:	mul	rsi
0x761e:	mov	rbx, rax
0x7621:	jo	0x7723


0x762f:	mov	rax, rbx
0x7632:	mul	rsi
0x7635:	mov	rbx, rax
0x7638:	jno	0x7570


0x775f:	mov	r9d, 1
0x7765:	or	rbx, 0xffffffffffffffff
0x7769:	jmp	0x7668


0x7668:	sub	r8d, 1
0x766c:	jne	0x7659


0x766e:	jmp	0x75e5


0x7659:	mov	rax, rbx
0x765c:	mul	rsi
0x765f:	mov	rbx, rax
0x7662:	jo	0x775f


0x7673:	mov	r8d, 6
0x7679:	xor	r9d, r9d
0x767c:	mov	rax, rbx
0x767f:	mul	rsi
0x7682:	mov	rbx, rax
0x7685:	jo	0x7714


0x7714:	mov	r9d, 1
0x771a:	or	rbx, 0xffffffffffffffff
0x771e:	jmp	0x768b


0x768b:	sub	r8d, 1
0x768f:	jne	0x767c


0x7691:	jmp	0x75e5


0x767c:	mov	rax, rbx
0x767f:	mul	rsi
0x7682:	mov	rbx, rax
0x7685:	jo	0x7714


0x7696:	mov	edx, 0x400
0x769b:	mov	rax, rdx
0x769e:	mul	rbx
0x76a1:	jo	0x763e


0x76a3:	shl	rbx, 0xa
0x76a7:	jmp	0x7570


0x76ac:	mov	rax, rbx
0x76af:	mul	rsi
0x76b2:	jo	0x777d


0x777d:	mov	r8d, 1
0x7783:	or	rax, 0xffffffffffffffff
0x7787:	jmp	0x76bb


0x76b8:	xor	r8d, r8d
0x76bb:	mul	rsi
0x76be:	jno	0x7557


0x76bb:	mul	rsi
0x76be:	jno	0x7557


0x76c4:	mov	r8d, 1
0x76ca:	or	rax, 0xffffffffffffffff
0x76ce:	jmp	0x7557


0x778c:	nop	dword ptr [rax]


0x780b:	nop	dword ptr [rax + rax]


0x7a8e:	nop	


0x7b27:	nop	word ptr [rax + rax]


0x7bb3:	nop	word ptr cs:[rax + rax]
0x7bbd:	nop	dword ptr [rax]


0x7cef:	nop	


0x7d0d:	nop	dword ptr [rax]


0x7f3c:	nop	dword ptr [rax]


0x7fa6:	nop	word ptr cs:[rax + rax]


0x801b:	nop	dword ptr [rax + rax]


0x8071:	nop	dword ptr [rax + rax]
0x8076:	nop	word ptr cs:[rax + rax]


0x811c:	nop	dword ptr [rax]


0x8184:	nop	
0x8186:	nop	word ptr cs:[rax + rax]


0x82bc:	nop	dword ptr [rax]


0x83ac:	nop	dword ptr [rax]


0x841e:	nop	


0x85e3:	nop	dword ptr [rax]
0x85e6:	nop	word ptr cs:[rax + rax]


0x8c05:	nop	
0x8c06:	nop	word ptr cs:[rax + rax]


0x8d5e:	nop	


0x8de6:	nop	word ptr cs:[rax + rax]


0x8e45:	nop	
0x8e46:	nop	word ptr cs:[rax + rax]


0x8e64:	nop	
0x8e66:	nop	word ptr cs:[rax + rax]


0x903e:	nop	


0x90df:	nop	


0x9355:	nop	
0x9356:	nop	word ptr cs:[rax + rax]


0x93b9:	nop	dword ptr [rax]


0x93f2:	nop	dword ptr [rax]
0x93f6:	nop	word ptr cs:[rax + rax]


0x955f:	nop	


0x9618:	nop	dword ptr [rax + rax]


0x966f:	nop	


0x96c3:	nop	dword ptr [rax]
0x96c6:	nop	word ptr cs:[rax + rax]


0x9745:	nop	
0x9746:	nop	word ptr cs:[rax + rax]


0x9845:	nop	
0x9846:	nop	word ptr cs:[rax + rax]


0x9884:	nop	
0x9886:	nop	word ptr cs:[rax + rax]


0x991b:	nop	dword ptr [rax + rax]


0x9977:	nop	word ptr [rax + rax]


0x9be9:	nop	dword ptr [rax]


0x9dce:	nop	


0xa07f:	nop	


0xa1d9:	nop	dword ptr [rax]


0xa388:	nop	dword ptr [rax + rax]


0xa541:	nop	dword ptr [rax + rax]
0xa546:	nop	word ptr cs:[rax + rax]


0xa787:	nop	word ptr [rax + rax]


0xa8b6:	nop	word ptr cs:[rax + rax]


0xaa12:	nop	dword ptr [rax]
0xaa16:	nop	word ptr cs:[rax + rax]


0xacda:	nop	word ptr [rax + rax]


0xaeda:	nop	word ptr [rax + rax]


0xafbc:	nop	dword ptr [rax]


0xb35e:	nop	


0xb4a1:	nop	dword ptr [rax + rax]
0xb4a6:	nop	word ptr cs:[rax + rax]


0xb596:	nop	word ptr cs:[rax + rax]


0xb77f:	nop	


0xbf1f:	nop	


0xc15b:	nop	dword ptr [rax + rax]


0xccf1:	nop	dword ptr [rax + rax]
0xccf6:	nop	word ptr cs:[rax + rax]


0xcd87:	nop	word ptr [rax + rax]


0xcddf:	nop	


0xce74:	nop	
0xce76:	nop	word ptr cs:[rax + rax]


0xcecc:	nop	dword ptr [rax]


0xd6dd:	nop	dword ptr [rax]


0xd94a:	nop	word ptr [rax + rax]


0xde77:	nop	word ptr [rax + rax]


0xe0d4:	nop	
0xe0d6:	nop	word ptr cs:[rax + rax]


0xe831:	nop	dword ptr [rax + rax]
0xe836:	nop	word ptr cs:[rax + rax]


0xf12a:	nop	word ptr [rax + rax]


0xf2c6:	nop	word ptr cs:[rax + rax]


0xfbb1:	nop	dword ptr [rax + rax]
0xfbb6:	nop	word ptr cs:[rax + rax]


0xfdac:	nop	dword ptr [rax]


0x122cd:	nop	dword ptr [rax]


0x12519:	mov	byte ptr [rbp + 8], 0x18
0x1251d:	jmp	0x12394


0x12612:	mov	byte ptr [rbp + 8], 0xa
0x12616:	mov	eax, 1
0x1261b:	jmp	0x12394


0x12569:	mov	byte ptr [rbp + 8], 0x17
0x1256d:	jmp	0x12394


0x12581:	test	r14, r14
0x12584:	jne	0x1294a


0x1258a:	mov	byte ptr [rbp + 8], 0xc
0x1258e:	mov	dword ptr [rbp], 0x10
0x12595:	mov	eax, 1
0x1259a:	jmp	0x12394


0x1294a:	cmp	byte ptr [rdx + r14 - 1], 0xa
0x12950:	jne	0x1253c


0x12956:	test	r15d, 0x800
0x1295d:	je	0x1253c


0x12963:	jmp	0x1258a


0x125c2:	mov	byte ptr [rbp + 8], 0x13
0x125c6:	jmp	0x12394


0x125f2:	mov	byte ptr [rbp + 8], 0x12
0x125f6:	jmp	0x12394


0x12620:	mov	byte ptr [rbp + 8], 0xb
0x12624:	mov	eax, 1
0x12629:	jmp	0x12394


0x12642:	mov	byte ptr [rbp + 8], 9
0x12646:	jmp	0x12394


0x12662:	mov	byte ptr [rbp + 8], 8
0x12666:	jmp	0x12394


0x12676:	add	r14, 1
0x1267a:	cmp	r14, qword ptr [rbx + 0x58]
0x1267e:	jne	0x1297b


0x12684:	mov	byte ptr [rbp + 8], 0xc
0x12688:	mov	dword ptr [rbp], 0x20
0x1268f:	mov	eax, 1
0x12694:	jmp	0x12394


0x1297b:	lea	rdi, [rsp + 0x10]
0x12980:	mov	rdx, r15
0x12983:	mov	qword ptr [rbx + 0x48], r14
0x12987:	mov	rsi, rbx
0x1298a:	call	0x122d0


0x1298f:	movzx	eax, byte ptr [rsp + 0x18]
0x12994:	sub	qword ptr [rbx + 0x48], 1
0x12999:	lea	edx, [rax - 9]
0x1299c:	mov	eax, 1
0x129a1:	cmp	dl, 1
0x129a4:	ja	0x12394


0x129aa:	jmp	0x12684


0x12699:	test	r15d, 0x8400
0x126a0:	mov	eax, 2
0x126a5:	jne	0x12394


0x126ab:	mov	byte ptr [rbp + 8], 0xa
0x126af:	jmp	0x12394


0x126b4:	and	r15d, 0x1200
0x126bb:	mov	eax, 2
0x126c0:	cmp	r15, 0x200
0x126c7:	jne	0x12394


0x126cd:	jmp	0x12569


0x126d2:	test	r15d, 0x80000
0x126d9:	mov	eax, 2
0x126de:	jne	0x12394


0x126e4:	mov	byte ptr [rbp + 8], 0x20
0x126e8:	jmp	0x12394


0x126ed:	test	r15d, 0x80000
0x126f4:	mov	eax, 2
0x126f9:	jne	0x12394


0x126ff:	mov	byte ptr [rbp + 8], 0x22
0x12703:	jmp	0x12394


0x12708:	and	r15d, 0x1200
0x1270f:	mov	eax, 2
0x12714:	cmp	r15, 0x200
0x1271b:	jne	0x12394


0x12721:	jmp	0x12519


0x12726:	test	r15d, 0x80000
0x1272d:	mov	eax, 2
0x12732:	jne	0x12394


0x12738:	mov	byte ptr [rbp + 8], 0xc
0x1273c:	mov	dword ptr [rbp], 0x100
0x12743:	jmp	0x12394


0x12748:	test	r15d, 0x80000
0x1274f:	mov	eax, 2
0x12754:	jne	0x12394


0x1275a:	mov	byte ptr [rbp + 8], 0xc
0x1275e:	mov	dword ptr [rbp], 0x40
0x12765:	jmp	0x12394


0x1276a:	test	r15d, 0x80000
0x12771:	mov	eax, 2
0x12776:	jne	0x12394


0x1277c:	mov	byte ptr [rbp + 8], 0x21
0x12780:	jmp	0x12394


0x12785:	test	r15d, 0x80000
0x1278c:	mov	eax, 2
0x12791:	jne	0x12394


0x12797:	mov	byte ptr [rbp + 8], 0x23
0x1279b:	jmp	0x12394


0x127a0:	test	r15d, 0x80000
0x127a7:	mov	eax, 2
0x127ac:	jne	0x12394


0x127b2:	mov	byte ptr [rbp + 8], 0xc
0x127b6:	mov	dword ptr [rbp], 0x200
0x127bd:	jmp	0x12394


0x127c2:	and	r15d, 0x402
0x127c9:	mov	eax, 2
0x127ce:	cmp	r15, 2
0x127d2:	jne	0x12394


0x127d8:	jmp	0x125c2


0x127dd:	test	r15d, 0x80000
0x127e4:	mov	eax, 2
0x127e9:	jne	0x12394


0x127ef:	mov	byte ptr [rbp + 8], 0xc
0x127f3:	mov	dword ptr [rbp], 9
0x127fa:	jmp	0x12394


0x127ff:	test	r15d, 0x80000
0x12806:	mov	eax, 2
0x1280b:	jne	0x12394


0x12811:	mov	byte ptr [rbp + 8], 0xc
0x12815:	mov	dword ptr [rbp], 6
0x1281c:	jmp	0x12394


0x12821:	test	r15d, 0x4000
0x12828:	mov	eax, 2
0x1282d:	jne	0x12394


0x12833:	mov	edx, dword ptr [rsp + 8]
0x12837:	mov	byte ptr [rbp + 8], 4
0x1283b:	sub	edx, 0x31
0x1283e:	movsxd	rdx, edx
0x12841:	mov	qword ptr [rbp], rdx
0x12845:	jmp	0x12394


0x1284a:	and	r15d, 0x402
0x12851:	mov	eax, 2
0x12856:	cmp	r15, 2
0x1285a:	jne	0x12394


0x12860:	jmp	0x125f2


0x12865:	test	r15d, 0x2000
0x1286c:	mov	eax, 2
0x12871:	jne	0x12394


0x12877:	jmp	0x12642


0x1287c:	test	r15d, 0x2000
0x12883:	mov	eax, 2
0x12888:	jne	0x12394


0x1288e:	jmp	0x12662


0x12893:	test	r15d, 0x80000
0x1289a:	mov	eax, 2
0x1289f:	jne	0x12394


0x128a5:	mov	byte ptr [rbp + 8], 0xc
0x128a9:	mov	dword ptr [rbp], 0x80
0x128b0:	jmp	0x12394


0x129cd:	nop	dword ptr [rax]


0x12a86:	nop	word ptr cs:[rax + rax]


0x12af1:	mov	rbx, qword ptr [rbp + 0x30]
0x12af5:	mov	r15, qword ptr [rsp + 0x20]
0x12afa:	mov	rsi, rdi
0x12afd:	mov	r13, qword ptr [rsp + 0x18]
0x12b02:	mov	qword ptr [rsp], r8
0x12b06:	lea	rax, [rbx + 1]
0x12b0a:	mov	rdx, r15
0x12b0d:	or	rdx, 0x800000
0x12b14:	mov	rdi, r13
0x12b17:	mov	qword ptr [rbp + 0x30], rax
0x12b1b:	call	0x122d0


0x12b20:	cdqe	
0x12b22:	add	qword ptr [r14 + 0x48], rax
0x12b26:	xor	eax, eax
0x12b28:	cmp	byte ptr [r13 + 8], 9
0x12b2d:	mov	rdx, r13
0x12b30:	je	0x13630


0x13630:	cmp	rbx, 8
0x13634:	jbe	0x1369b


0x12b36:	mov	r13, qword ptr [rsp + 0x40]
0x12b3b:	mov	r8, qword ptr [rsp]
0x12b3f:	mov	rcx, r15
0x12b42:	mov	rsi, rbp
0x12b45:	mov	rdi, r14
0x12b48:	add	r8, 1
0x12b4c:	mov	r9, r13
0x12b4f:	call	0x14100


0x1369b:	mov	rsi, qword ptr [rsp + 0x10]
0x136a0:	mov	edx, 1
0x136a5:	mov	ecx, ebx
0x136a7:	shl	edx, cl
0x136a9:	movsxd	rdx, edx
0x136ac:	or	qword ptr [rsi + 0xa8], rdx
0x136b3:	jmp	0x13636


0x13636:	mov	rdi, qword ptr [rsp + 0x10]
0x1363b:	lea	r8, [rsp + 0xc0]
0x13643:	xor	ecx, ecx
0x13645:	mov	rdx, rax
0x13648:	mov	byte ptr [rsp + 0xc8], 0x11
0x13650:	lea	rsi, [rdi + 0x80]
0x13657:	add	rdi, 0x70
0x1365b:	call	0xa390


0x13660:	test	rax, rax
0x13663:	mov	qword ptr [rsp + 0x28], rax
0x13668:	je	0x135f8


0x135f8:	mov	rax, qword ptr [rsp + 0x40]
0x135fd:	mov	dword ptr [rax], 0xc
0x13603:	jmp	0x12b90


0x1366a:	mov	qword ptr [rax + 0x28], rbx
0x1366e:	jmp	0x12c2c


0x12b54:	mov	r11d, dword ptr [r13]
0x12b58:	test	r11d, r11d
0x12b5b:	jne	0x12b90


0x12b5d:	mov	rdx, qword ptr [rsp + 0x18]
0x12b62:	cmp	byte ptr [rdx + 8], 9
0x12b66:	je	0x13630


0x12b6c:	test	rax, rax
0x12b6f:	je	0x12b82


0x12b82:	mov	rax, qword ptr [rsp + 0x40]
0x12b87:	mov	dword ptr [rax], 8
0x12b8d:	nop	dword ptr [rax]
0x12b90:	mov	qword ptr [rsp + 0x28], 0
0x12b99:	nop	dword ptr [rax]
0x12ba0:	mov	rdi, qword ptr [rsp + 0x118]
0x12ba8:	xor	rdi, qword ptr fs:[0x28]
0x12bb1:	mov	rax, qword ptr [rsp + 0x28]
0x12bb6:	jne	0x13f2e


0x12b71:	lea	rsi, [rip - 0x9d28]
0x12b78:	xor	edx, edx
0x12b7a:	mov	rdi, rax
0x12b7d:	call	0x7fb0


0x12bce:	test	qword ptr [rsp + 0x20], 0x1000000
0x12bd7:	jne	0x12e2d


0x12bdd:	mov	rax, qword ptr [rsp + 0x20]
0x12be2:	test	al, 0x20
0x12be4:	jne	0x12e2d


0x12bea:	test	al, 0x10
0x12bec:	jne	0x13a55


0x12bf2:	cmp	cl, 9
0x12bf5:	je	0x13608


0x13a55:	mov	rbx, qword ptr [rsp + 0x18]
0x13a5a:	mov	rdx, rax
0x13a5d:	mov	rsi, r14
0x13a60:	mov	qword ptr [rsp], r8
0x13a64:	mov	r15, rax
0x13a67:	mov	rdi, rbx
0x13a6a:	call	0x122d0


0x13608:	test	qword ptr [rsp + 0x20], 0x20000
0x13611:	jne	0x12bfb


0x12bfb:	mov	rax, qword ptr [rsp + 0x10]
0x12c00:	mov	r8, qword ptr [rsp + 0x18]
0x12c05:	xor	ecx, ecx
0x12c07:	xor	edx, edx
0x12c09:	lea	rsi, [rax + 0x80]
0x12c10:	lea	rdi, [rax + 0x70]
0x12c14:	mov	byte ptr [r8 + 8], 1
0x12c19:	call	0xa390


0x13617:	mov	rax, qword ptr [rsp + 0x40]
0x1361c:	mov	qword ptr [rsp + 0x28], 0
0x13625:	mov	dword ptr [rax], 0x10
0x1362b:	jmp	0x12ba0


0x12c1e:	test	rax, rax
0x12c21:	mov	qword ptr [rsp + 0x28], rax
0x12c26:	je	0x135f8


0x13a6f:	cdqe	
0x13a71:	add	qword ptr [r14 + 0x48], rax
0x13a75:	mov	r9, qword ptr [rsp + 0x40]
0x13a7a:	mov	r8, qword ptr [rsp]
0x13a7e:	mov	rcx, r15
0x13a81:	mov	rdx, rbx
0x13a84:	mov	rsi, rbp
0x13a87:	mov	rdi, r14
0x13a8a:	call	0x12a90


0x13a8f:	mov	qword ptr [rsp + 0x28], rax
0x13a94:	jmp	0x12ba0


0x131c1:	mov	rax, qword ptr [rsp + 0x10]
0x131c6:	lea	rbx, [rax + 0x70]
0x131ca:	lea	r12, [rax + 0x80]
0x131d1:	lea	eax, [rbp - 0x100]
0x131d7:	test	eax, 0xfffffeff
0x131dc:	jne	0x1384a


0x1315f:	mov	rax, qword ptr [rsp + 0x10]
0x13164:	movzx	eax, byte ptr [rax + 0xb0]
0x1316b:	test	al, 0x10
0x1316d:	jne	0x131c1


0x131e2:	cmp	ebp, 0x100
0x131e8:	mov	r15, qword ptr [rsp + 0x18]
0x131ed:	je	0x13822


0x1384a:	mov	r8, qword ptr [rsp + 0x18]
0x1384f:	xor	ecx, ecx
0x13851:	xor	edx, edx
0x13853:	mov	rsi, r12
0x13856:	mov	rdi, rbx
0x13859:	call	0xa390


0x1316f:	mov	rdi, qword ptr [rsp + 0x10]
0x13174:	or	eax, 0x10
0x13177:	test	al, 8
0x13179:	mov	byte ptr [rdi + 0xb0], al
0x1317f:	jne	0x13d83


0x13822:	mov	dword ptr [r15], 6
0x13829:	mov	r8, r15
0x1382c:	xor	ecx, ecx
0x1382e:	xor	edx, edx
0x13830:	mov	rsi, r12
0x13833:	mov	rdi, rbx
0x13836:	call	0xa390


0x131f3:	mov	dword ptr [r15], 5
0x131fa:	mov	r8, r15
0x131fd:	xor	ecx, ecx
0x131ff:	xor	edx, edx
0x13201:	mov	rsi, r12
0x13204:	mov	rdi, rbx
0x13207:	call	0xa390


0x13185:	movabs	rdx, 0x3ff000000000000
0x1318f:	test	al, 4
0x13191:	mov	qword ptr [rdi + 0xb8], rdx
0x13198:	movabs	rdx, 0x7fffffe87fffffe
0x131a2:	mov	qword ptr [rdi + 0xc0], rdx
0x131a9:	je	0x13d08


0x13d83:	xor	ebx, ebx
0x13d85:	xor	r12d, r12d
0x13d88:	jmp	0x13d13


0x13d08:	mov	ebx, 0x80
0x13d0d:	mov	r12d, 2
0x13d13:	call	0x1f50


0x131af:	pxor	xmm0, xmm0
0x131b3:	mov	rax, qword ptr [rsp + 0x18]
0x131b8:	movups	xmmword ptr [rdi + 0xc8], xmm0
0x131bf:	mov	ebp, dword ptr [rax]
0x131c1:	mov	rax, qword ptr [rsp + 0x10]
0x131c6:	lea	rbx, [rax + 0x70]
0x131ca:	lea	r12, [rax + 0x80]
0x131d1:	lea	eax, [rbp - 0x100]
0x131d7:	test	eax, 0xfffffeff
0x131dc:	jne	0x1384a


0x13d13:	call	0x1f50


0x13d18:	movsxd	rdx, ebx
0x13d1b:	movsxd	r9, r12d
0x13d1e:	mov	r8d, 1
0x13d24:	add	rdx, rdx
0x13d27:	add	rdx, qword ptr [rax]
0x13d2a:	mov	rax, qword ptr [rsp + 0x10]
0x13d2f:	lea	rdi, [rax + r9*8]
0x13d33:	xor	eax, eax
0x13d35:	jmp	0x13d52


0x13d52:	test	byte ptr [rdx + rax*2], 8
0x13d56:	mov	ecx, eax
0x13d58:	je	0x13d40


0x13d40:	lea	esi, [rbx + rax]
0x13d43:	cmp	esi, 0x5f
0x13d46:	je	0x13d5a


0x13d5a:	mov	rsi, r8
0x13d5d:	shl	rsi, cl
0x13d60:	or	qword ptr [rdi + 0xb8], rsi
0x13d67:	jmp	0x13d48


0x13d48:	add	rax, 1
0x13d4c:	cmp	rax, 0x40
0x13d50:	je	0x13d69


0x13d69:	add	r9, 1
0x13d6d:	add	ebx, 0x40
0x13d70:	sub	rdx, -0x80
0x13d74:	add	rdi, 8
0x13d78:	cmp	r9d, 3
0x13d7c:	jle	0x13d33


0x13d33:	xor	eax, eax
0x13d35:	jmp	0x13d52


0x13d7e:	jmp	0x131c1


0x1320c:	mov	dword ptr [r15], 0xa
0x13213:	mov	rbp, rax
0x13216:	mov	r8, qword ptr [rsp + 0x18]
0x1321b:	xor	ecx, ecx
0x1321d:	xor	edx, edx
0x1321f:	mov	rsi, r12
0x13222:	mov	rdi, rbx
0x13225:	call	0xa390


0x1322a:	lea	r8, [rsp + 0xc0]
0x13232:	mov	rdx, rbp
0x13235:	mov	rdi, rbx
0x13238:	mov	rcx, rax
0x1323b:	mov	rsi, r12
0x1323e:	mov	r13, rax
0x13241:	mov	byte ptr [rsp + 0xc8], 0xa
0x13249:	call	0xa390


0x1324e:	test	rbp, rbp
0x13251:	mov	rdi, rax
0x13254:	mov	qword ptr [rsp + 0x28], rax
0x13259:	sete	dl
0x1325c:	test	r13, r13
0x1325f:	sete	al
0x13262:	or	dl, al
0x13264:	jne	0x135f8


0x1326a:	test	rdi, rdi
0x1326d:	je	0x135f8


0x13273:	mov	rdx, qword ptr [rsp + 0x20]
0x13278:	mov	rdi, qword ptr [rsp + 0x18]
0x1327d:	mov	rsi, r14
0x13280:	call	0x122d0


0x13285:	cdqe	
0x13287:	add	qword ptr [r14 + 0x48], rax
0x1328b:	jmp	0x12ba0


0x1383b:	mov	dword ptr [r15], 9
0x13842:	mov	rbp, rax
0x13845:	jmp	0x13216


0x13216:	mov	r8, qword ptr [rsp + 0x18]
0x1321b:	xor	ecx, ecx
0x1321d:	xor	edx, edx
0x1321f:	mov	rsi, r12
0x13222:	mov	rdi, rbx
0x13225:	call	0xa390


0x1385e:	test	rax, rax
0x13861:	mov	qword ptr [rsp + 0x28], rax
0x13866:	jne	0x13273


0x1386c:	jmp	0x135f8


0x13290:	mov	esi, 1
0x13295:	mov	edi, 0x20
0x1329a:	mov	qword ptr [rsp + 0x98], 0
0x132a6:	call	0x1d30


0x132ab:	mov	esi, 1
0x132b0:	mov	r12, rax
0x132b3:	mov	edi, 0x50
0x132b8:	call	0x1d30


0x132bd:	test	r12, r12
0x132c0:	mov	r13, rax
0x132c3:	sete	dl
0x132c6:	test	rax, rax
0x132c9:	sete	al
0x132cc:	or	dl, al
0x132ce:	jne	0x13aa9


0x132d4:	mov	r10, qword ptr [rsp + 0x18]
0x132d9:	mov	rdx, qword ptr [rsp + 0x20]
0x132de:	mov	rsi, r14
0x132e1:	mov	rdi, r10
0x132e4:	call	0x7bc0


0x13aa9:	mov	rdi, r12
0x13aac:	call	0x1b00


0x13ab1:	mov	rdi, r13
0x13ab4:	call	0x1b00


0x13ab9:	jmp	0x135f8


0x132e9:	movsxd	rbx, eax
0x132ec:	movzx	eax, byte ptr [r10 + 8]
0x132f1:	cmp	al, 2
0x132f3:	je	0x13a99


0x13a99:	mov	rax, qword ptr [rsp + 0x40]
0x13a9e:	mov	dword ptr [rax], 2
0x13aa4:	jmp	0x13708


0x132f9:	cmp	al, 0x19
0x132fb:	mov	byte ptr [rsp + 0x57], 0
0x13300:	je	0x137ca


0x137ca:	or	byte ptr [r13 + 0x20], 1
0x137cf:	test	qword ptr [rsp + 0x20], 0x100
0x137d8:	je	0x137e2


0x13306:	cmp	al, 0x15
0x13308:	je	0x13814


0x137e2:	add	qword ptr [r14 + 0x48], rbx
0x137e6:	mov	r11, qword ptr [rsp + 0x18]
0x137eb:	mov	rsi, r14
0x137ee:	mov	rdx, qword ptr [rsp + 0x20]
0x137f3:	mov	rdi, r11
0x137f6:	call	0x7bc0


0x137da:	or	qword ptr [r12], 0x400
0x137e2:	add	qword ptr [r14 + 0x48], rbx
0x137e6:	mov	r11, qword ptr [rsp + 0x18]
0x137eb:	mov	rsi, r14
0x137ee:	mov	rdx, qword ptr [rsp + 0x20]
0x137f3:	mov	rdi, r11
0x137f6:	call	0x7bc0


0x13814:	mov	rax, qword ptr [rsp + 0x18]
0x13819:	mov	byte ptr [rax + 8], 1
0x1381d:	jmp	0x1330e


0x1330e:	lea	rax, [rsp + 0xd0]
0x13316:	mov	r15, qword ptr [rsp + 0x18]
0x1331b:	lea	rbp, [rip + 0x4812]
0x13322:	mov	qword ptr [rsp + 0x48], 0
0x1332b:	mov	r9d, 1
0x13331:	mov	qword ptr [rsp + 0x30], 0
0x1333a:	mov	qword ptr [rsp + 0x28], rax
0x1333f:	lea	rax, [rsp + 0xa0]
0x13347:	mov	qword ptr [rsp], rax
0x1334b:	lea	rax, [rsp + 0x98]
0x13353:	mov	qword ptr [rsp + 0x58], rax
0x13358:	lea	rax, [rsp + 0xc0]
0x13360:	mov	qword ptr [rsp + 0x60], rax
0x13365:	lea	rax, [rsp + 0xf0]
0x1336d:	mov	qword ptr [rsp + 0x68], rax
0x13372:	mov	rax, qword ptr [rsp + 0x28]
0x13377:	mov	r8, qword ptr [rsp + 0x20]
0x1337c:	and	r9d, 1
0x13380:	mov	rdi, qword ptr [rsp]
0x13384:	mov	ecx, ebx
0x13386:	mov	rdx, r15
0x13389:	mov	rsi, r14
0x1338c:	mov	dword ptr [rsp + 0xa0], 3
0x13397:	mov	qword ptr [rsp + 0xa8], rax
0x1339f:	call	0x12070


0x137fb:	mov	ebx, eax
0x137fd:	movzx	eax, byte ptr [r11 + 8]
0x13802:	cmp	al, 2
0x13804:	je	0x13a99


0x1380a:	mov	byte ptr [rsp + 0x57], 1
0x1380f:	jmp	0x13306


0x133f8:	mov	rbx, qword ptr [rsp + 0x40]
0x133fd:	cmp	cl, 0x23
0x13400:	mov	rsi, qword ptr [rdi + 0x78]
0x13404:	sete	r8b
0x13408:	lea	rcx, [rip + 0x3cd2]
0x1340f:	lea	rdx, [rip + 0x4281]
0x13416:	movzx	r8d, r8b
0x1341a:	mov	r9, rbx
0x1341d:	mov	rdi, qword ptr [rsp + 0x10]
0x13422:	call	0xd6e0


0x13427:	mov	edi, dword ptr [rbx]
0x13429:	mov	qword ptr [rsp + 0x28], rax
0x1342e:	test	edi, edi
0x13430:	je	0x12c2c


0x13436:	test	rax, rax
0x13439:	jne	0x12c2c


0x1343f:	jmp	0x12b90


0x1341d:	mov	rdi, qword ptr [rsp + 0x10]
0x13422:	call	0xd6e0


0x1346f:	mov	rax, qword ptr [rsp + 0x18]
0x13474:	mov	rdi, qword ptr [rsp + 0x10]
0x13479:	mov	rcx, qword ptr [rax]
0x1347c:	mov	eax, 1
0x13481:	shl	eax, cl
0x13483:	cdqe	
0x13485:	test	qword ptr [rdi + 0xa8], rax
0x1348c:	je	0x13abe


0x13abe:	mov	rax, qword ptr [rsp + 0x40]
0x13ac3:	mov	qword ptr [rsp + 0x28], 0
0x13acc:	mov	dword ptr [rax], 6
0x13ad2:	jmp	0x12ba0


0x13492:	mov	rbx, qword ptr [rsp + 0x10]
0x13497:	mov	r8, qword ptr [rsp + 0x18]
0x1349c:	xor	ecx, ecx
0x1349e:	xor	edx, edx
0x134a0:	or	qword ptr [rbx + 0xa0], rax
0x134a7:	lea	rsi, [rbx + 0x80]
0x134ae:	lea	rdi, [rbx + 0x70]
0x134b2:	call	0xa390


0x134b7:	test	rax, rax
0x134ba:	mov	qword ptr [rsp + 0x28], rax
0x134bf:	je	0x135f8


0x134c5:	add	qword ptr [rbx + 0x98], 1
0x134cd:	or	byte ptr [rbx + 0xb0], 2
0x134d4:	jmp	0x12c2c


0x134d9:	mov	rbx, qword ptr [rsp + 0x10]
0x134de:	mov	r8, qword ptr [rsp + 0x18]
0x134e3:	xor	ecx, ecx
0x134e5:	xor	edx, edx
0x134e7:	lea	rsi, [rbx + 0x80]
0x134ee:	lea	rdi, [rbx + 0x70]
0x134f2:	call	0xa390


0x134f7:	test	rax, rax
0x134fa:	mov	qword ptr [rsp + 0x28], rax
0x134ff:	je	0x135f8


0x13505:	cmp	dword ptr [rbx + 0xb4], 1
0x1350c:	jle	0x12c2c


0x13512:	or	byte ptr [rbx + 0xb0], 2
0x13519:	jmp	0x12c2c


0x1351e:	mov	rax, qword ptr [rsp + 0x10]
0x13523:	mov	r8, qword ptr [rsp + 0x18]
0x13528:	xor	ecx, ecx
0x1352a:	xor	edx, edx
0x1352c:	lea	rbx, [rax + 0x70]
0x13530:	lea	rbp, [rax + 0x80]
0x13537:	mov	rdi, rbx
0x1353a:	mov	rsi, rbp
0x1353d:	call	0xa390


0x13542:	test	rax, rax
0x13545:	mov	qword ptr [rsp + 0x28], rax
0x1354a:	je	0x135f8


0x13550:	mov	rax, qword ptr [rsp + 0x10]
0x13555:	lea	r12, [rsp + 0xc0]
0x1355d:	mov	r15, qword ptr [rsp + 0x28]
0x13562:	cmp	dword ptr [rax + 0xb4], 1
0x13569:	jle	0x12c2c


0x1356f:	mov	rax, qword ptr [r14 + 0x48]
0x13573:	cmp	qword ptr [r14 + 0x68], rax
0x13577:	jle	0x13881


0x13881:	mov	qword ptr [rsp + 0x28], r15
0x13886:	jmp	0x12c2c


0x1357d:	cmp	rax, qword ptr [r14 + 0x30]
0x13581:	je	0x13881


0x13587:	mov	rdx, qword ptr [r14 + 0x10]
0x1358b:	cmp	dword ptr [rdx + rax*4], -1
0x1358f:	jne	0x13881


0x13595:	mov	r13, qword ptr [rsp + 0x18]
0x1359a:	mov	rdx, qword ptr [rsp + 0x20]
0x1359f:	mov	rsi, r14
0x135a2:	mov	rdi, r13
0x135a5:	call	0x122d0


0x135aa:	cdqe	
0x135ac:	add	qword ptr [r14 + 0x48], rax
0x135b0:	mov	r8, r13
0x135b3:	xor	ecx, ecx
0x135b5:	xor	edx, edx
0x135b7:	mov	rsi, rbp
0x135ba:	mov	rdi, rbx
0x135bd:	call	0xa390


0x135c2:	mov	rdx, r15
0x135c5:	mov	r13, rax
0x135c8:	mov	r8, r12
0x135cb:	mov	rcx, rax
0x135ce:	mov	rsi, rbp
0x135d1:	mov	rdi, rbx
0x135d4:	mov	byte ptr [rsp + 0xc8], 0x10
0x135dc:	call	0xa390


0x135e1:	test	r13, r13
0x135e4:	mov	r15, rax
0x135e7:	sete	dl
0x135ea:	test	rax, rax
0x135ed:	sete	al
0x135f0:	or	dl, al
0x135f2:	je	0x1356f


0x13673:	mov	rax, qword ptr [rsp + 0x40]
0x13678:	mov	qword ptr [rsp + 0x28], 0
0x13681:	mov	dword ptr [rax], 5
0x13687:	jmp	0x12ba0


0x136b5:	mov	rsi, qword ptr [rsp + 0xa8]
0x136bd:	mov	rdi, r12
0x136c0:	call	0xce80


0x136c5:	mov	rdx, qword ptr [rsp + 0x40]
0x136ca:	test	eax, eax
0x136cc:	mov	dword ptr [rdx], eax
0x136ce:	jne	0x13708


0x136ed:	mov	rsi, qword ptr [rsp + 0xa8]
0x136f5:	mov	rdi, r12
0x136f8:	call	0xce80


0x136fd:	mov	rdx, qword ptr [rsp + 0x40]
0x13702:	test	eax, eax
0x13704:	mov	dword ptr [rdx], eax
0x13706:	je	0x136d0


0x13737:	mov	rdx, qword ptr [r13 + 0x28]
0x1373b:	cmp	rdx, qword ptr [rsp + 0x30]
0x13740:	mov	rax, qword ptr [r13]
0x13744:	je	0x13c3e


0x13c3e:	mov	rdx, qword ptr [rsp + 0x30]
0x13c43:	lea	rdi, [rdx + rdx + 1]
0x13c48:	lea	rsi, [rdi*4]
0x13c50:	mov	qword ptr [rsp + 0x30], rdi
0x13c55:	mov	rdi, rax
0x13c58:	call	0x1e00


0x1374a:	lea	rcx, [rdx + 1]
0x1374e:	mov	qword ptr [r13 + 0x28], rcx
0x13752:	mov	ecx, dword ptr [rsp + 0xa8]
0x13759:	mov	dword ptr [rax + rdx*4], ecx
0x1375c:	jmp	0x136d0


0x13c5d:	test	rax, rax
0x13c60:	je	0x13bb3


0x13c66:	mov	qword ptr [r13], rax
0x13c6a:	mov	rdx, qword ptr [r13 + 0x28]
0x13c6e:	jmp	0x1374a


0x13761:	movzx	edx, byte ptr [rsp + 0xa8]
0x13769:	mov	esi, 1
0x1376e:	mov	rax, rdx
0x13771:	and	edx, 0x3f
0x13774:	shr	rax, 3
0x13778:	mov	ecx, edx
0x1377a:	and	eax, 0x18
0x1377d:	shl	rsi, cl
0x13780:	or	qword ptr [r12 + rax], rsi
0x13784:	jmp	0x136d0


0x13f63:	nop	dword ptr [rax]
0x13f66:	nop	word ptr cs:[rax + rax]


0x140f2:	nop	dword ptr [rax]
0x140f6:	nop	word ptr cs:[rax + rax]


0x1427f:	nop	


0x14ab7:	or	byte ptr [r13 + 0xb0], 1
0x14abf:	mov	r15, qword ptr [rdx + 8]
0x14ac3:	test	r15, r15
0x14ac6:	je	0x150d9


0x150d9:	mov	rax, qword ptr [rdx + 0x20]
0x150dd:	mov	rcx, qword ptr [rax + 0x38]
0x150e1:	jmp	0x14ad4


0x14acc:	mov	rax, qword ptr [r15 + 0x18]
0x14ad0:	mov	rcx, qword ptr [rax + 0x38]
0x14ad4:	mov	rax, qword ptr [rdx + 0x10]
0x14ad8:	test	rax, rax
0x14adb:	je	0x150cc


0x14ad4:	mov	rax, qword ptr [rdx + 0x10]
0x14ad8:	test	rax, rax
0x14adb:	je	0x150cc


0x150cc:	mov	rax, qword ptr [rdx + 0x20]
0x150d0:	mov	r9, qword ptr [rax + 0x38]
0x150d4:	jmp	0x14ae9


0x14ae1:	mov	rax, qword ptr [rax + 0x18]
0x14ae5:	mov	r9, qword ptr [rax + 0x38]
0x14ae9:	test	rcx, rcx
0x14aec:	js	0x15351


0x14ae9:	test	rcx, rcx
0x14aec:	js	0x15351


0x15351:	lea	rcx, [rip + 0x28a8]
0x15358:	lea	rsi, [rip + 0x22c9]
0x1535f:	lea	rdi, [rip + 0x237d]
0x15366:	mov	edx, 0x5af
0x1536b:	call	0x1c90


0x14af2:	test	r9, r9
0x14af5:	js	0x15313


0x15313:	lea	rcx, [rip + 0x28e6]
0x1531a:	lea	rsi, [rip + 0x2307]
0x15321:	lea	rdi, [rip + 0x23c5]
0x15328:	mov	edx, 0x5b0
0x1532d:	call	0x1c90


0x14afb:	mov	rax, qword ptr [r13 + 0x28]
0x14aff:	lea	rdi, [rdi + rdi*2]
0x14b03:	mov	qword ptr [rsp + 0x38], rsi
0x14b08:	mov	qword ptr [rsp + 0x30], r9
0x14b0d:	mov	qword ptr [rsp + 0x18], rcx
0x14b12:	mov	qword ptr [rsp + 0x10], rdx
0x14b17:	lea	r10, [rax + rdi*8]
0x14b1b:	mov	edi, 0x10
0x14b20:	mov	qword ptr [r10], 2
0x14b27:	mov	qword ptr [rsp], r10
0x14b2b:	call	0x1da0


0x14b30:	mov	r10, qword ptr [rsp]
0x14b34:	test	rax, rax
0x14b37:	mov	rdx, qword ptr [rsp + 0x10]
0x14b3c:	mov	rcx, qword ptr [rsp + 0x18]
0x14b41:	mov	r9, qword ptr [rsp + 0x30]
0x14b46:	mov	rsi, qword ptr [rsp + 0x38]
0x14b4b:	mov	qword ptr [r10 + 0x10], rax
0x14b4f:	je	0x14dea


0x14b55:	cmp	rcx, r9
0x14b58:	je	0x1512d


0x1512d:	mov	qword ptr [r10 + 8], 1
0x15135:	mov	qword ptr [rax], rcx
0x15138:	jmp	0x14a35


0x14b5e:	mov	qword ptr [r10 + 8], 2
0x14b66:	jl	0x15114


0x14a35:	xor	edi, edi
0x14a37:	test	r15, r15
0x14a3a:	je	0x14a4b


0x15114:	mov	qword ptr [rax], rcx
0x15117:	mov	qword ptr [rax + 8], r9
0x1511b:	jmp	0x14a35


0x14b6c:	mov	qword ptr [rax], r9
0x14b6f:	mov	qword ptr [rax + 8], rcx
0x14b73:	jmp	0x14a35


0x14b78:	mov	rax, qword ptr [rdx + 0x20]
0x14b7c:	lea	rcx, [rdi + rdi*2]
0x14b80:	mov	edi, 8
0x14b85:	mov	qword ptr [rsp + 0x10], rsi
0x14b8a:	mov	qword ptr [rsp], rdx
0x14b8e:	mov	r14, qword ptr [rax + 0x38]
0x14b92:	mov	rax, qword ptr [r13 + 0x28]
0x14b96:	lea	r15, [rax + rcx*8]
0x14b9a:	mov	qword ptr [r15], 1
0x14ba1:	mov	qword ptr [r15 + 8], 1
0x14ba9:	call	0x1da0


0x14bae:	test	rax, rax
0x14bb1:	mov	qword ptr [r15 + 0x10], rax
0x14bb5:	mov	rdx, qword ptr [rsp]
0x14bb9:	mov	rsi, qword ptr [rsp + 0x10]
0x14bbe:	je	0x15268


0x15268:	mov	qword ptr [r15 + 8], 0
0x15270:	mov	qword ptr [r15], 0
0x15277:	jmp	0x14dea


0x14bc4:	mov	qword ptr [rax], r14
0x14bc7:	mov	r15, qword ptr [rdx + 8]
0x14bcb:	jmp	0x14a35


0x14bd0:	cmp	qword ptr [rdx + 0x20], 0
0x14bd5:	je	0x14a31


0x14a31:	mov	r15, qword ptr [rdx + 8]
0x14a35:	xor	edi, edi
0x14a37:	test	r15, r15
0x14a3a:	je	0x14a4b


0x14bdb:	lea	rcx, [rip + 0x301e]
0x14be2:	lea	rsi, [rip + 0x2a3f]
0x14be9:	lea	rdi, [rip + 0x2ae0]
0x14bf0:	mov	edx, 0x59f
0x14bf5:	call	0x1c90


0x14c1a:	mov	rax, qword ptr [r13 + 0x28]
0x14c1e:	lea	rcx, [rdi + rdi*2]
0x14c22:	mov	edi, 8
0x14c27:	mov	qword ptr [rsp + 0x18], rsi
0x14c2c:	mov	qword ptr [rsp + 0x10], rdx
0x14c31:	lea	rcx, [rax + rcx*8]
0x14c35:	mov	qword ptr [rcx], 1
0x14c3c:	mov	qword ptr [rcx + 8], 1
0x14c44:	mov	qword ptr [rsp], rcx
0x14c48:	call	0x1da0


0x14c4d:	mov	rcx, qword ptr [rsp]
0x14c51:	test	rax, rax
0x14c54:	mov	rdx, qword ptr [rsp + 0x10]
0x14c59:	mov	rsi, qword ptr [rsp + 0x18]
0x14c5e:	mov	qword ptr [rcx + 0x10], rax
0x14c62:	je	0x152b0


0x152b0:	mov	qword ptr [rcx + 8], 0
0x152b8:	mov	qword ptr [rcx], 0
0x152bf:	mov	eax, 0xc
0x152c4:	jmp	0x145a0


0x14c68:	mov	qword ptr [rax], r15
0x14c6b:	mov	r15, qword ptr [rdx + 8]
0x14c6f:	jmp	0x14a35


0x151b9:	mov	r8d, eax
0x151bc:	add	rdx, 1
0x151c0:	add	rcx, 0x10
0x151c4:	cmp	rdx, r10
0x151c7:	jne	0x1503e


0x151cd:	or	r14b, r8b
0x151d0:	je	0x152da


0x1503e:	cmp	byte ptr [rcx + 8], 0xc
0x15042:	ja	0x1530e


0x151d6:	mov	rax, rdx
0x151d9:	shl	rax, 4
0x151dd:	add	rax, rsi
0x151e0:	jmp	0x151f8


0x151f8:	movzx	edx, byte ptr [rsi + 8]
0x151fc:	cmp	dl, 1
0x151ff:	jne	0x151e2


0x15201:	cmp	byte ptr [rsi], 0
0x15204:	jns	0x151eb


0x151e2:	cmp	dl, 5
0x151e5:	jne	0x151eb


0x15206:	and	byte ptr [rsi + 0xa], 0xdf
0x1520a:	jmp	0x151eb


0x151eb:	add	rsi, 0x10
0x151ef:	cmp	rax, rsi
0x151f2:	je	0x152d7


0x151e7:	mov	byte ptr [rsi + 8], 7
0x151eb:	add	rsi, 0x10
0x151ef:	cmp	rax, rsi
0x151f2:	je	0x152d7


0x152d7:	mov	r14d, r8d
0x152da:	cmp	qword ptr [rbx + 0x98], 0
0x152e2:	movzx	edx, byte ptr [rbx + 0xb0]
0x152e9:	mov	dword ptr [rbx + 0xb4], 1
0x152f3:	setg	al
0x152f6:	and	edx, 0xfffffff9
0x152f9:	or	eax, r14d
0x152fc:	and	eax, 1
0x152ff:	add	eax, eax
0x15301:	or	eax, edx
0x15303:	mov	byte ptr [rbx + 0xb0], al
0x15309:	jmp	0x14e2e


0x151bc:	add	rdx, 1
0x151c0:	add	rcx, 0x10
0x151c4:	cmp	rdx, r10
0x151c7:	jne	0x1503e


0x15219:	mov	edi, dword ptr [rcx]
0x1521b:	cmp	edi, 0x20
0x1521e:	je	0x151bc


0x15220:	jbe	0x152c9


0x152c9:	cmp	edi, 0x10
0x152cc:	je	0x151bc


0x15226:	cmp	edi, 0x40
0x15229:	je	0x151bc


0x152d2:	jmp	0x14e2e


0x1522b:	add	edi, -0x80
0x1522e:	je	0x151bc


0x15230:	jmp	0x14e2e


0x15246:	cmp	qword ptr [rdi + 0x18], 0
0x1524b:	je	0x151bc


0x15251:	jmp	0x14e2e


0x15375:	nop	
0x15376:	nop	word ptr cs:[rax + rax]


0x153ef:	nop	


0x153ff:	nop	


0x154c3:	nop	dword ptr [rax]
0x154c6:	nop	word ptr cs:[rax + rax]


0x1594f:	nop	


0x15a6b:	nop	dword ptr [rax + rax]


0x15c05:	nop	
0x15c06:	nop	word ptr cs:[rax + rax]


0x15c54:	nop	
0x15c56:	nop	word ptr cs:[rax + rax]


0x15cfe:	nop	


0x15d18:	nop	dword ptr [rax + rax]


0x15d35:	nop	
0x15d36:	nop	word ptr cs:[rax + rax]


0x15d5a:	nop	word ptr [rax + rax]


0x15d7c:	nop	dword ptr [rax]


0x15dc1:	nop	word ptr cs:[rax + rax]
0x15dcb:	nop	dword ptr [rax + rax]


0x15e4d:	nop	dword ptr [rax]


0x15eec:	nop	dword ptr [rax]


0x15f55:	nop	
0x15f56:	nop	word ptr cs:[rax + rax]


0x15f62:	nop	word ptr cs:[rax + rax]
0x15f6c:	nop	dword ptr [rax]


0x49a0:	xor	r10d, r10d
0x49a3:	mov	eax, dword ptr [rsp + 8]
0x49a7:	cmp	eax, 2
0x49aa:	je	0x4f68


0x49d0:	xor	r10d, r10d
0x49d3:	cmp	dword ptr [rsp + 8], 2
0x49d8:	je	0x4ee0


0x49f8:	mov	edx, 9
0x49fd:	mov	ebx, 0x74
0x4a02:	cmp	dword ptr [rsp + 8], 2
0x4a07:	sete	al
0x4a0a:	and	al, byte ptr [rsp + 0xf]
0x4a0e:	jne	0x4b5e


0x4a38:	mov	edx, 8
0x4a3d:	mov	ebx, 0x62
0x4a42:	jmp	0x4a14


0x4a48:	cmp	dword ptr [rsp + 8], 2
0x4a4d:	je	0x4e20


0x4af0:	cmp	byte ptr [rsp + 0xd], 0
0x4af5:	jne	0x4cc3


0x4b18:	cmp	dword ptr [rsp + 8], 2
0x4b1d:	sete	dl
0x4b20:	xor	eax, eax
0x4b22:	jmp	0x4908


0x4b30:	mov	edx, 7
0x4b35:	mov	ebx, 0x61
0x4b3a:	jmp	0x4a14


0x4b40:	cmp	dword ptr [rsp + 8], 2
0x4b45:	sete	dl
0x4b48:	test	rbp, rbp
0x4b4b:	jne	0x48fc


0x4b70:	cmp	dword ptr [rsp + 8], 2
0x4b75:	sete	dl
0x4b78:	xor	r12d, r12d
0x4b7b:	jmp	0x4b51


0x4b80:	cmp	dword ptr [rsp + 8], 2
0x4b85:	mov	ebx, 0x20
0x4b8a:	sete	dl
0x4b8d:	jmp	0x4b51


0x4b90:	mov	edx, 0xd
0x4b95:	mov	ebx, 0x72
0x4b9a:	jmp	0x4a02


0x4ba0:	mov	edx, 0xc
0x4ba5:	mov	ebx, 0x66
0x4baa:	jmp	0x4a14


0x4bb0:	mov	edx, 0xb
0x4bb5:	mov	ebx, 0x76
0x4bba:	jmp	0x4a14


0x4bc0:	mov	edx, 0xa
0x4bc5:	mov	ebx, 0x6e
0x4bca:	jmp	0x4a02


0x4c60:	xor	r10d, r10d
0x4c63:	cmp	byte ptr [rsp + 0xd], 0
0x4c68:	jne	0x4a5e


0x4c80:	mov	edx, 0xc
0x4c85:	xor	r10d, r10d
0x4c88:	mov	ebx, 0x66
0x4c8d:	jmp	0x4a14


0x4c98:	mov	edx, 0xa
0x4c9d:	xor	r10d, r10d
0x4ca0:	mov	ebx, 0x6e
0x4ca5:	jmp	0x4a02


0x4cb0:	mov	ebx, 0x61
0x4cb5:	jmp	0x4a80


0x4cc0:	xor	r10d, r10d
0x4cc3:	cmp	dword ptr [rsp + 8], 2
0x4cc8:	sete	dl
0x4ccb:	cmp	byte ptr [rsp + 0xf], 0
0x4cd0:	jne	0x586a


0x4d60:	cmp	dword ptr [rsp + 8], 2
0x4d65:	mov	r12d, r10d
0x4d68:	sete	dl
0x4d6b:	xor	r10d, r10d
0x4d6e:	xor	eax, eax
0x4d70:	jmp	0x4908


0x4d78:	cmp	dword ptr [rsp + 8], 2
0x4d7d:	sete	dl
0x4d80:	xor	r10d, r10d
0x4d83:	jmp	0x4b48


0x4d90:	cmp	dword ptr [rsp + 8], 2
0x4d95:	sete	dl
0x4d98:	xor	r10d, r10d
0x4d9b:	xor	r12d, r12d
0x4d9e:	jmp	0x4b51


0x4da8:	cmp	dword ptr [rsp + 8], 2
0x4dad:	mov	r12d, r10d
0x4db0:	mov	ebx, 0x20
0x4db5:	sete	dl
0x4db8:	xor	r10d, r10d
0x4dbb:	jmp	0x4b51


0x4dd8:	mov	ebx, 0x76
0x4ddd:	jmp	0x4a80


0x4de8:	mov	edx, 9
0x4ded:	xor	r10d, r10d
0x4df0:	mov	ebx, 0x74
0x4df5:	jmp	0x4a02


0x4e00:	mov	ebx, 0x62
0x4e05:	jmp	0x4a80


0x53a0:	test	ebx, ebx
0x53a2:	jne	0x579d


0x6ee0:	movabs	rax, 0xc000000000000000
0x6eea:	cmp	rbp, rax
0x6eed:	jl	0x7220


0x6f10:	movabs	rax, 0xffc0000000000000
0x6f1a:	cmp	rbp, rax
0x6f1d:	jl	0x7220


0x6f40:	movsxd	rsi, eax
0x6f43:	movabs	rax, 0x8000000000000000
0x6f4d:	mov	r8d, 7
0x6f53:	cqo	
0x6f55:	xor	r11d, r11d
0x6f58:	movabs	r9, 0x7fffffffffffffff
0x6f62:	idiv	rsi
0x6f65:	mov	r10, rax
0x6f68:	jmp	0x6f8f


0x6fb0:	movsxd	rsi, eax
0x6fb3:	movabs	rax, 0x8000000000000000
0x6fbd:	mov	r8d, 8
0x6fc3:	cqo	
0x6fc5:	xor	r11d, r11d
0x6fc8:	movabs	r9, 0x7fffffffffffffff
0x6fd2:	idiv	rsi
0x6fd5:	mov	r10, rax
0x6fd8:	jmp	0x6fff


0x7020:	movabs	r8, 0x8000000000000000
0x702a:	movsxd	rsi, eax
0x702d:	mov	rax, r8
0x7030:	cqo	
0x7032:	idiv	rsi
0x7035:	cmp	rbp, rax
0x7038:	jl	0x7220


0x7060:	movsxd	rsi, eax
0x7063:	movabs	rax, 0x8000000000000000
0x706d:	mov	r8d, 3
0x7073:	cqo	
0x7075:	xor	r11d, r11d
0x7078:	movabs	r9, 0x7fffffffffffffff
0x7082:	idiv	rsi
0x7085:	mov	r10, rax
0x7088:	cmp	r10, rbp
0x708b:	jg	0x7280


0x70c0:	movsxd	rsi, eax
0x70c3:	movabs	rax, 0x8000000000000000
0x70cd:	mov	r8d, 6
0x70d3:	cqo	
0x70d5:	xor	r11d, r11d
0x70d8:	movabs	r9, 0x7fffffffffffffff
0x70e2:	idiv	rsi
0x70e5:	mov	r10, rax
0x70e8:	jmp	0x710b


0x7128:	movsxd	rsi, eax
0x712b:	movabs	rax, 0x8000000000000000
0x7135:	mov	r8d, 5
0x713b:	cqo	
0x713d:	xor	r11d, r11d
0x7140:	movabs	r9, 0x7fffffffffffffff
0x714a:	idiv	rsi
0x714d:	mov	r10, rax
0x7150:	jmp	0x7177


0x7190:	movabs	rax, 0xffe0000000000000
0x719a:	cmp	rbp, rax
0x719d:	jl	0x7220


0x71c0:	movsxd	rsi, eax
0x71c3:	movabs	rax, 0x8000000000000000
0x71cd:	mov	r8d, 4
0x71d3:	cqo	
0x71d5:	xor	r11d, r11d
0x71d8:	movabs	r9, 0x7fffffffffffffff
0x71e2:	idiv	rsi
0x71e5:	mov	r10, rax
0x71e8:	cmp	r10, rbp
0x71eb:	jg	0x7250


0x7650:	mov	r8d, 5
0x7656:	xor	r9d, r9d
0x7659:	mov	rax, rbx
0x765c:	mul	rsi
0x765f:	mov	rbx, rax
0x7662:	jo	0x775f


0x12500:	and	r15d, 0x1200
0x12507:	mov	eax, 1
0x1250c:	cmp	r15, 0x1200
0x12513:	jne	0x12394


0x12528:	and	r15d, 0x8400
0x1252f:	cmp	r15, 0x8000
0x12536:	je	0x12612


0x12550:	and	r15d, 0x1200
0x12557:	mov	eax, 1
0x1255c:	cmp	r15, 0x1200
0x12563:	jne	0x12394


0x12578:	test	r15d, 0x800008
0x1257f:	jne	0x1258a


0x125a0:	mov	byte ptr [rbp + 8], 0x14
0x125a4:	mov	eax, 1
0x125a9:	jmp	0x12394


0x125b0:	test	r15d, 0x402
0x125b7:	mov	eax, 1
0x125bc:	jne	0x12394


0x125d0:	mov	byte ptr [rbp + 8], 5
0x125d4:	mov	eax, 1
0x125d9:	jmp	0x12394


0x125e0:	test	r15d, 0x402
0x125e7:	mov	eax, 1
0x125ec:	jne	0x12394


0x12600:	test	r15d, 0x800
0x12607:	mov	eax, 1
0x1260c:	je	0x12394


0x12630:	test	r15d, 0x2000
0x12637:	mov	eax, 1
0x1263c:	je	0x12394


0x12650:	test	r15d, 0x2000
0x12657:	mov	eax, 1
0x1265c:	je	0x12394


0x12670:	test	r15b, 8
0x12674:	jne	0x12684


0x13150:	mov	rax, qword ptr [rsp + 0x18]
0x13155:	mov	ebp, dword ptr [rax]
0x13157:	test	ebp, 0x30f
0x1315d:	je	0x131c1


0x13448:	mov	rbx, qword ptr [rsp + 0x40]
0x1344d:	cmp	cl, 0x21
0x13450:	mov	rsi, qword ptr [rdi + 0x78]
0x13454:	sete	r8b
0x13458:	lea	rcx, [rip + 0x2c47]
0x1345f:	lea	rdx, [rip + 0x4225]
0x13466:	movzx	r8d, r8b
0x1346a:	mov	r9, rbx
0x1346d:	jmp	0x1341d


0x14c00:	mov	rax, qword ptr [rdx + 0x20]
0x14c04:	mov	r15, qword ptr [rax + 0x38]
0x14c08:	mov	rax, qword ptr [r13 + 0x18]
0x14c0c:	mov	qword ptr [rax + rdi*8], r15
0x14c10:	cmp	byte ptr [rdx + 0x30], 4
0x14c14:	jne	0x14a31


0x15210:	cmp	byte ptr [rcx], 0
0x15213:	cmovs	r14d, eax
0x15217:	jmp	0x151bc


0x15238:	mov	rdi, qword ptr [rcx]
0x1523b:	cmp	qword ptr [rdi + 0x10], 0
0x15240:	jne	0x14e2e


0x2173:	nop	dword ptr [rax + rax]


0x21ae:	nop	


0x2208:	nop	dword ptr [rax + rax]


0x221c:	nop	dword ptr [rax]


0x222c:	nop	dword ptr [rax]


0x2243:	nop	dword ptr [rax + rax]


0x22e4:	nop	dword ptr [rax]


0x23b9:	nop	dword ptr [rax]


0x2562:	nop	word ptr [rax + rax]


0x25ee:	nop	


0x27f7:	nop	word ptr [rax + rax]


0x28bb:	nop	dword ptr [rax + rax]


0x2981:	nop	dword ptr [rax]


0x2a49:	nop	dword ptr [rax]


0x2fe6:	nop	word ptr cs:[rax + rax]


0x3037:	nop	word ptr [rax + rax]


0x3081:	nop	dword ptr [rax]


0x3108:	nop	dword ptr [rax + rax]


0x3186:	nop	word ptr cs:[rax + rax]


0x3202:	nop	word ptr [rax + rax]


0x333c:	nop	dword ptr [rax]


0x353c:	nop	dword ptr [rax]


0x372a:	nop	word ptr [rax + rax]


0x377a:	nop	word ptr [rax + rax]


0x37d2:	nop	word ptr [rax + rax]


0x38a5:	nop	dword ptr [rax]


0x38f1:	nop	dword ptr [rax]


0x3966:	nop	word ptr cs:[rax + rax]


0x3a39:	nop	dword ptr [rax]


0x3b3c:	nop	dword ptr [rax]


0x3b72:	nop	word ptr [rax + rax]


0x3bd1:	nop	dword ptr [rax]


0x3bfc:	nop	dword ptr [rax]


0x3c2d:	nop	dword ptr [rax]


0x3c56:	nop	word ptr cs:[rax + rax]


0x3d08:	nop	dword ptr [rax + rax]


0x3d3a:	nop	word ptr [rax + rax]


0x3d5e:	nop	


0x3d76:	nop	word ptr cs:[rax + rax]


0x3dc7:	nop	word ptr [rax + rax]


0x3e26:	nop	word ptr cs:[rax + rax]


0x3e3d:	nop	dword ptr [rax]


0x3e61:	nop	dword ptr [rax]


0x3e71:	nop	dword ptr [rax]


0x3eb1:	nop	dword ptr [rax]


0x4489:	nop	dword ptr [rax]


0x44d5:	nop	dword ptr [rax]


0x462c:	nop	dword ptr [rax]


0x467d:	nop	dword ptr [rax]


0x48a8:	nop	dword ptr [rax + rax]


0x4997:	nop	word ptr [rax + rax]


0x49ce:	nop	


0x49f1:	nop	dword ptr [rax]


0x4a32:	nop	word ptr [rax + rax]


0x4a44:	nop	dword ptr [rax]


0x4ae8:	nop	dword ptr [rax + rax]


0x4b11:	nop	dword ptr [rax]


0x4b27:	nop	word ptr [rax + rax]


0x4b3f:	nop	


0x4b6e:	nop	


0x4b7d:	nop	dword ptr [rax]


0x4b8f:	nop	


0x4b9f:	nop	


0x4baf:	nop	


0x4bbf:	nop	


0x4bcf:	nop	


0x4c3c:	nop	dword ptr [rax]


0x4c5c:	nop	dword ptr [rax]


0x4c6e:	nop	


0x4c7f:	nop	


0x4c92:	nop	word ptr [rax + rax]


0x4caa:	nop	word ptr [rax + rax]


0x4cba:	nop	word ptr [rax + rax]


0x4d5b:	nop	dword ptr [rax + rax]


0x4d75:	nop	dword ptr [rax]


0x4d88:	nop	dword ptr [rax + rax]


0x4da3:	nop	dword ptr [rax + rax]


0x4dd2:	nop	word ptr [rax + rax]


0x4de2:	nop	word ptr [rax + rax]


0x4dfa:	nop	word ptr [rax + rax]


0x4e0a:	nop	word ptr [rax + rax]


0x4e18:	nop	dword ptr [rax + rax]


0x4e3f:	nop	


0x4ed9:	nop	dword ptr [rax]


0x4f22:	nop	word ptr [rax + rax]


0x4f48:	nop	dword ptr [rax + rax]


0x4f61:	nop	dword ptr [rax]


0x4f82:	nop	word ptr [rax + rax]


0x50e8:	nop	dword ptr [rax + rax]


0x51fb:	nop	dword ptr [rax + rax]


0x521e:	nop	


0x52e5:	nop	dword ptr [rax]


0x539d:	nop	dword ptr [rax]


0x55a6:	nop	word ptr cs:[rax + rax]


0x5639:	nop	dword ptr [rax]


0x56ad:	nop	dword ptr [rax]


0x578d:	nop	dword ptr [rax]


0x5a9b:	nop	dword ptr [rax + rax]


0x62cf:	nop	


0x6396:	nop	word ptr cs:[rax + rax]


0x6425:	nop	dword ptr [rax]


0x6446:	nop	word ptr cs:[rax + rax]


0x64a5:	nop	dword ptr [rax]


0x64e1:	nop	dword ptr [rax]


0x6528:	nop	dword ptr [rax + rax]


0x6577:	nop	word ptr [rax + rax]


0x65d4:	nop	dword ptr [rax]


0x6602:	nop	word ptr [rax + rax]


0x66b6:	nop	word ptr cs:[rax + rax]


0x6719:	nop	dword ptr [rax]


0x6992:	nop	word ptr [rax + rax]


0x6a19:	nop	dword ptr [rax]


0x6a44:	nop	dword ptr [rax]


0x6a9d:	nop	dword ptr [rax]


0x6c28:	nop	dword ptr [rax + rax]


0x6c4c:	nop	dword ptr [rax]


0x6d5f:	nop	


0x6d73:	nop	dword ptr [rax + rax]


0x6e22:	nop	word ptr [rax + rax]


0x6e34:	nop	dword ptr [rax]


0x6edb:	nop	dword ptr [rax + rax]


0x6f0b:	nop	dword ptr [rax + rax]


0x6f3c:	nop	dword ptr [rax]


0x6f6a:	nop	word ptr [rax + rax]


0x6fa6:	nop	word ptr cs:[rax + rax]


0x6fda:	nop	word ptr [rax + rax]


0x7016:	nop	word ptr cs:[rax + rax]


0x705c:	nop	dword ptr [rax]


0x70ac:	nop	dword ptr [rax]


0x70b8:	nop	dword ptr [rax + rax]


0x70ea:	nop	word ptr [rax + rax]


0x7122:	nop	word ptr [rax + rax]


0x7152:	nop	word ptr [rax + rax]


0x718e:	nop	


0x71bf:	nop	


0x720d:	nop	dword ptr [rax]


0x721b:	nop	dword ptr [rax + rax]


0x7235:	nop	dword ptr [rax]


0x724d:	nop	dword ptr [rax]


0x7262:	nop	word ptr [rax + rax]


0x727d:	nop	dword ptr [rax]


0x7295:	nop	dword ptr [rax]


0x72ad:	nop	dword ptr [rax]


0x72c5:	nop	dword ptr [rax]


0x72dd:	nop	dword ptr [rax]


0x72f5:	nop	dword ptr [rax]


0x73d6:	nop	word ptr cs:[rax + rax]


0x7433:	nop	dword ptr [rax + rax]


0x7442:	nop	word ptr [rax + rax]


0x7472:	nop	word ptr [rax + rax]


0x747c:	nop	dword ptr [rax]


0x751b:	nop	dword ptr [rax + rax]


0x764c:	nop	dword ptr [rax]


0x76d3:	nop	dword ptr [rax + rax]


0x77d5:	nop	dword ptr [rax]


0x78ab:	nop	dword ptr [rax + rax]


0x78d6:	nop	word ptr cs:[rax + rax]


0x790f:	nop	


0x7959:	nop	dword ptr [rax]


0x797b:	nop	dword ptr [rax + rax]


0x7a21:	nop	dword ptr [rax]


0x7ab3:	nop	dword ptr [rax + rax]


0x7adf:	nop	


0x7c1e:	nop	


0x7c27:	nop	word ptr [rax + rax]


0x7c79:	nop	dword ptr [rax]


0x7c8d:	nop	dword ptr [rax]


0x7c9a:	nop	word ptr [rax + rax]


0x7caa:	nop	word ptr [rax + rax]


0x7cc6:	nop	word ptr cs:[rax + rax]


0x7cda:	nop	word ptr [rax + rax]


0x7cf9:	nop	dword ptr [rax]


0x7d93:	nop	dword ptr [rax + rax]


0x7df2:	nop	word ptr [rax + rax]


0x7eca:	nop	word ptr [rax + rax]


0x7ee9:	nop	dword ptr [rax]


0x7f16:	nop	word ptr cs:[rax + rax]


0x7f7b:	nop	dword ptr [rax + rax]


0x7f86:	nop	word ptr cs:[rax + rax]


0x7f9d:	nop	dword ptr [rax]


0x7fbf:	nop	


0x7fe2:	nop	word ptr [rax + rax]


0x802f:	nop	


0x804d:	nop	dword ptr [rax]


0x80f3:	nop	dword ptr [rax + rax]


0x810f:	nop	


0x8151:	nop	dword ptr [rax]


0x817e:	nop	


0x81c5:	nop	dword ptr [rax]


0x81fd:	nop	dword ptr [rax]


0x8246:	nop	word ptr cs:[rax + rax]


0x825a:	nop	word ptr [rax + rax]


0x8274:	nop	dword ptr [rax]


0x828c:	nop	dword ptr [rax]


0x8307:	nop	word ptr [rax + rax]


0x834c:	nop	dword ptr [rax]


0x83d2:	nop	word ptr [rax + rax]


0x8412:	nop	word ptr [rax + rax]


0x850f:	nop	


0x851e:	nop	


0x852e:	nop	


0x855c:	nop	dword ptr [rax]


0x8576:	nop	word ptr cs:[rax + rax]


0x85c2:	nop	word ptr [rax + rax]


0x8678:	nop	dword ptr [rax + rax]


0x87b7:	nop	word ptr [rax + rax]


0x88f5:	nop	dword ptr [rax]


0x8913:	nop	dword ptr [rax + rax]


0x8943:	nop	dword ptr [rax + rax]


0x8977:	nop	word ptr [rax + rax]


0x8a05:	nop	dword ptr [rax]


0x8caa:	nop	word ptr [rax + rax]


0x8cd6:	nop	word ptr cs:[rax + rax]


0x8d16:	nop	word ptr cs:[rax + rax]


0x8d31:	nop	dword ptr [rax]


0x8d46:	nop	word ptr cs:[rax + rax]


0x8d9b:	nop	dword ptr [rax + rax]


0x8e34:	nop	dword ptr [rax]


0x8f3b:	nop	dword ptr [rax + rax]


0x8ffc:	nop	dword ptr [rax]


0x9192:	nop	word ptr [rax + rax]


0x921f:	nop	


0x9269:	nop	dword ptr [rax]


0x92c6:	nop	word ptr cs:[rax + rax]


0x93e1:	nop	dword ptr [rax]


0x941f:	nop	


0x964e:	nop	


0x9664:	nop	dword ptr [rax]


0x967e:	nop	


0x968e:	nop	


0x96b8:	nop	dword ptr [rax + rax]


0x96f4:	nop	dword ptr [rax]


0x9717:	nop	word ptr [rax + rax]


0x9739:	nop	dword ptr [rax]


0x97d5:	nop	dword ptr [rax]


0x97ed:	nop	dword ptr [rax]


0x9801:	nop	dword ptr [rax]


0x981c:	nop	dword ptr [rax]


0x989f:	nop	


0x98ef:	nop	


0x9951:	nop	dword ptr [rax]


0x996f:	nop	


0x99db:	nop	dword ptr [rax + rax]


0x9a65:	nop	dword ptr [rax]


0x9b6d:	nop	dword ptr [rax]


0x9b8c:	nop	dword ptr [rax]


0x9bac:	nop	dword ptr [rax]


0x9bbc:	nop	dword ptr [rax]


0x9bcc:	nop	dword ptr [rax]


0x9c7d:	nop	dword ptr [rax]


0x9ce1:	nop	dword ptr [rax]


0x9ceb:	nop	dword ptr [rax + rax]


0x9d03:	nop	dword ptr [rax + rax]


0x9d11:	nop	dword ptr [rax]


0x9d3a:	nop	word ptr [rax + rax]


0x9d61:	nop	dword ptr [rax]


0x9d99:	nop	dword ptr [rax]


0x9e9c:	nop	dword ptr [rax]


0x9f2b:	nop	dword ptr [rax + rax]


0x9f99:	nop	dword ptr [rax]


0x9ff7:	nop	word ptr [rax + rax]


0xa052:	nop	word ptr [rax + rax]


0xa11c:	nop	dword ptr [rax]


0xa18b:	nop	dword ptr [rax + rax]


0xa26d:	nop	dword ptr [rax]


0xa2a3:	nop	dword ptr [rax + rax]


0xa2aa:	nop	word ptr [rax + rax]


0xa2bd:	nop	dword ptr [rax]


0xa2ec:	nop	dword ptr [rax]


0xa316:	nop	word ptr cs:[rax + rax]


0xa347:	nop	word ptr [rax + rax]


0xa411:	nop	dword ptr [rax]


0xa4d7:	nop	word ptr [rax + rax]


0xa4e4:	nop	dword ptr [rax]


0xa529:	nop	dword ptr [rax]


0xa5f9:	nop	dword ptr [rax]


0xa6f3:	nop	dword ptr [rax + rax]


0xa7ed:	nop	dword ptr [rax]


0xa80b:	nop	dword ptr [rax + rax]


0xa87f:	nop	


0xa896:	nop	word ptr cs:[rax + rax]


0xa92d:	nop	dword ptr [rax]


0xa96a:	nop	word ptr [rax + rax]


0xa99b:	nop	dword ptr [rax + rax]


0xa9c5:	nop	dword ptr [rax]


0xa9e5:	nop	dword ptr [rax]


0xaa05:	nop	dword ptr [rax]


0xaa95:	nop	dword ptr [rax]


0xaade:	nop	


0xabe4:	nop	dword ptr [rax]


0xac49:	nop	dword ptr [rax]


0xac79:	nop	dword ptr [rax]


0xac8c:	nop	dword ptr [rax]


0xadc7:	nop	word ptr [rax + rax]


0xae81:	nop	dword ptr [rax]


0xae93:	nop	dword ptr [rax + rax]


0xaeac:	nop	dword ptr [rax]


0xaece:	nop	


0xaf27:	nop	word ptr [rax + rax]


0xb02a:	nop	word ptr [rax + rax]


0xb0a2:	nop	word ptr [rax + rax]


0xb0bc:	nop	dword ptr [rax]


0xb0f1:	nop	dword ptr [rax]


0xb2a6:	nop	word ptr cs:[rax + rax]


0xb38c:	nop	dword ptr [rax]


0xb439:	nop	dword ptr [rax]


0xb4d7:	nop	word ptr [rax + rax]


0xb509:	nop	dword ptr [rax]


0xb51a:	nop	word ptr [rax + rax]


0xb561:	nop	dword ptr [rax]


0xb5ef:	nop	


0xb64e:	nop	


0xb65c:	nop	dword ptr [rax]


0xb663:	nop	dword ptr [rax + rax]


0xb684:	nop	dword ptr [rax]


0xb695:	nop	dword ptr [rax]


0xb6f8:	nop	dword ptr [rax + rax]


0xb75a:	nop	word ptr [rax + rax]


0xb772:	nop	word ptr [rax + rax]


0xb8ec:	nop	dword ptr [rax]


0xb8fd:	nop	dword ptr [rax]


0xb921:	nop	dword ptr [rax]


0xb932:	nop	word ptr [rax + rax]


0xb94e:	nop	


0xba44:	nop	dword ptr [rax]


0xba53:	nop	dword ptr [rax + rax]


0xba85:	nop	dword ptr [rax]


0xbb25:	nop	dword ptr [rax]


0xbb34:	nop	dword ptr [rax]


0xbb69:	nop	dword ptr [rax]


0xbb92:	nop	word ptr [rax + rax]


0xbc09:	nop	dword ptr [rax]


0xbc31:	nop	dword ptr [rax]


0xbc61:	nop	dword ptr [rax]


0xbce9:	nop	dword ptr [rax]


0xbd1e:	nop	


0xbd55:	nop	dword ptr [rax]


0xbdbe:	nop	


0xbec5:	nop	dword ptr [rax]


0xbf85:	nop	dword ptr [rax]


0xc064:	nop	dword ptr [rax]


0xc0a7:	nop	word ptr [rax + rax]


0xc0bd:	nop	dword ptr [rax]


0xc137:	nop	word ptr [rax + rax]


0xc56f:	nop	


0xc59b:	nop	dword ptr [rax + rax]


0xc68a:	nop	word ptr [rax + rax]


0xc888:	nop	dword ptr [rax + rax]


0xc8c8:	nop	dword ptr [rax + rax]


0xc93d:	nop	dword ptr [rax]


0xca06:	nop	word ptr cs:[rax + rax]


0xca92:	nop	word ptr [rax + rax]


0xcb73:	nop	dword ptr [rax + rax]


0xcc05:	nop	dword ptr [rax]


0xcd63:	nop	dword ptr [rax + rax]


0xcd7f:	nop	


0xcebb:	nop	dword ptr [rax + rax]


0xcfc3:	nop	dword ptr [rax + rax]


0xd0c8:	nop	dword ptr [rax + rax]


0xd112:	nop	word ptr [rax + rax]


0xd196:	nop	word ptr cs:[rax + rax]


0xd21b:	nop	dword ptr [rax + rax]


0xd2b5:	nop	dword ptr [rax]


0xd3e1:	nop	dword ptr [rax]


0xd8c8:	nop	dword ptr [rax + rax]


0xd8da:	nop	word ptr [rax + rax]


0xd918:	nop	dword ptr [rax + rax]


0xd9ea:	nop	word ptr [rax + rax]


0xdae6:	nop	word ptr cs:[rax + rax]


0xdb84:	nop	dword ptr [rax]


0xdf13:	nop	dword ptr [rax + rax]


0xdf38:	nop	dword ptr [rax + rax]


0xdf69:	nop	dword ptr [rax]


0xdf7f:	nop	


0xdf9d:	nop	dword ptr [rax]


0xdfad:	nop	dword ptr [rax]


0xdfe5:	nop	dword ptr [rax]


0xe001:	nop	dword ptr [rax]


0xe019:	nop	dword ptr [rax]


0xe2c4:	nop	dword ptr [rax]


0xe423:	nop	dword ptr [rax + rax]


0xe56b:	nop	dword ptr [rax + rax]


0xe5f9:	nop	dword ptr [rax]


0xe614:	nop	dword ptr [rax]


0xe631:	nop	dword ptr [rax]


0xe68d:	nop	dword ptr [rax]


0xe6ad:	nop	dword ptr [rax]


0xe6da:	nop	word ptr [rax + rax]


0xe95b:	nop	dword ptr [rax + rax]


0xea99:	nop	dword ptr [rax]


0xeb49:	nop	dword ptr [rax]


0xeb9b:	nop	dword ptr [rax + rax]


0xebdf:	nop	


0xec76:	nop	word ptr cs:[rax + rax]


0xed4e:	nop	


0xedb3:	nop	dword ptr [rax + rax]


0xedca:	nop	word ptr [rax + rax]


0xee14:	nop	dword ptr [rax]


0xee57:	nop	word ptr [rax + rax]


0xee68:	nop	dword ptr [rax + rax]


0xeeea:	nop	word ptr [rax + rax]


0xef2f:	nop	


0xefb2:	nop	word ptr [rax + rax]


0xf17a:	nop	word ptr [rax + rax]


0xf229:	nop	dword ptr [rax]


0xf237:	nop	word ptr [rax + rax]


0xf351:	nop	dword ptr [rax]


0xf37e:	nop	


0xf409:	nop	dword ptr [rax]


0xf52b:	nop	dword ptr [rax + rax]


0xf621:	nop	dword ptr [rax]


0xf63c:	nop	dword ptr [rax]


0xf671:	nop	dword ptr [rax]


0xf6dc:	nop	dword ptr [rax]


0xf7f3:	nop	dword ptr [rax + rax]


0xf863:	nop	dword ptr [rax + rax]


0xf8fb:	nop	dword ptr [rax + rax]


0xf9fa:	nop	word ptr [rax + rax]


0xfa43:	nop	dword ptr [rax + rax]


0xfa6f:	nop	


0xfab5:	nop	dword ptr [rax]


0xfb13:	nop	dword ptr [rax + rax]


0xfc4b:	nop	dword ptr [rax + rax]


0xfce6:	nop	word ptr cs:[rax + rax]


0xfd32:	nop	word ptr [rax + rax]


0xfd43:	nop	dword ptr [rax + rax]


0xfd9e:	nop	


0xfec9:	nop	dword ptr [rax]


0x10026:	nop	word ptr cs:[rax + rax]


0x1005b:	nop	dword ptr [rax + rax]


0x10071:	nop	dword ptr [rax]


0x100ab:	nop	dword ptr [rax + rax]


0x105e8:	nop	dword ptr [rax + rax]


0x1060c:	nop	dword ptr [rax]


0x10652:	nop	word ptr [rax + rax]


0x107f1:	nop	dword ptr [rax]


0x1091e:	nop	


0x10b8e:	nop	


0x10beb:	nop	dword ptr [rax + rax]


0x10c35:	nop	dword ptr [rax]


0x10c96:	nop	word ptr cs:[rax + rax]


0x10cdd:	nop	dword ptr [rax]


0x10d0c:	nop	dword ptr [rax]


0x10d4c:	nop	dword ptr [rax]


0x10d85:	nop	dword ptr [rax]


0x10db6:	nop	word ptr cs:[rax + rax]


0x10f44:	nop	dword ptr [rax]


0x10fbd:	nop	dword ptr [rax]


0x10ffe:	nop	


0x1101b:	nop	dword ptr [rax + rax]


0x1106e:	nop	


0x1107d:	nop	dword ptr [rax]


0x1109b:	nop	dword ptr [rax + rax]


0x110aa:	nop	word ptr [rax + rax]


0x110d8:	nop	dword ptr [rax + rax]


0x1113c:	nop	dword ptr [rax]


0x111a9:	nop	dword ptr [rax]


0x111e1:	nop	dword ptr [rax]


0x11577:	nop	word ptr [rax + rax]


0x1160e:	nop	


0x1172e:	nop	


0x118b2:	nop	word ptr [rax + rax]


0x118e1:	nop	dword ptr [rax]


0x119d2:	nop	word ptr [rax + rax]


0x11ad1:	nop	dword ptr [rax]


0x11afa:	nop	word ptr [rax + rax]


0x11b1c:	nop	dword ptr [rax]


0x11b9d:	nop	dword ptr [rax]


0x11bae:	nop	


0x11c28:	nop	dword ptr [rax + rax]


0x11c83:	nop	dword ptr [rax + rax]


0x11ca8:	nop	dword ptr [rax + rax]


0x11ccc:	nop	dword ptr [rax]


0x11d61:	nop	dword ptr [rax]


0x11ddb:	nop	dword ptr [rax + rax]


0x11df1:	nop	dword ptr [rax]


0x11e02:	nop	word ptr [rax + rax]


0x11e49:	nop	dword ptr [rax]


0x11fbc:	nop	dword ptr [rax]


0x11fd7:	nop	word ptr [rax + rax]


0x120f2:	nop	word ptr [rax + rax]


0x1212f:	nop	


0x12147:	nop	word ptr [rax + rax]


0x121d6:	nop	word ptr cs:[rax + rax]


0x12252:	nop	word ptr [rax + rax]


0x12285:	nop	dword ptr [rax]


0x12386:	nop	word ptr cs:[rax + rax]


0x123b7:	nop	word ptr [rax + rax]


0x1241e:	nop	


0x12436:	nop	word ptr cs:[rax + rax]


0x124ca:	nop	word ptr [rax + rax]


0x124eb:	nop	dword ptr [rax + rax]


0x124fe:	nop	


0x12522:	nop	word ptr [rax + rax]


0x12546:	nop	word ptr cs:[rax + rax]


0x12572:	nop	word ptr [rax + rax]


0x1259f:	nop	


0x125ae:	nop	


0x125cb:	nop	dword ptr [rax + rax]


0x125de:	nop	


0x125fb:	nop	dword ptr [rax + rax]


0x1262e:	nop	


0x1264b:	nop	dword ptr [rax + rax]


0x1266b:	nop	dword ptr [rax + rax]


0x128bf:	nop	


0x12a24:	nop	dword ptr [rax]


0x12a59:	nop	dword ptr [rax]


0x12a73:	nop	dword ptr [rax + rax]


0x12e46:	nop	word ptr cs:[rax + rax]


0x12f07:	nop	word ptr [rax + rax]


0x12f3c:	nop	dword ptr [rax]


0x12fa5:	nop	dword ptr [rax]


0x13016:	nop	word ptr cs:[rax + rax]


0x13038:	nop	dword ptr [rax + rax]


0x1306a:	nop	word ptr [rax + rax]


0x130fd:	nop	dword ptr [rax]


0x1314c:	nop	dword ptr [rax]


0x13444:	nop	dword ptr [rax]


0x13bc3:	nop	dword ptr [rax + rax]


0x13d37:	nop	word ptr [rax + rax]


0x1406c:	nop	dword ptr [rax]


0x14092:	nop	word ptr [rax + rax]


0x140bf:	nop	


0x1416b:	nop	dword ptr [rax + rax]


0x1426a:	nop	word ptr [rax + rax]


0x1459e:	nop	


0x145b5:	nop	dword ptr [rax]


0x1467f:	nop	


0x148c3:	nop	dword ptr [rax + rax]


0x14a44:	nop	dword ptr [rax]


0x14bfa:	nop	word ptr [rax + rax]


0x14c91:	nop	dword ptr [rax]


0x14d48:	nop	dword ptr [rax + rax]


0x14daf:	nop	


0x14e8a:	nop	word ptr [rax + rax]


0x14ebd:	nop	dword ptr [rax]


0x14f38:	nop	dword ptr [rax + rax]


0x14f95:	nop	dword ptr [rax]


0x1520c:	nop	dword ptr [rax]


0x15235:	nop	dword ptr [rax]


0x15256:	nop	word ptr cs:[rax + rax]


0x153e2:	nop	word ptr [rax + rax]


0x15614:	nop	dword ptr [rax]


0x1570c:	nop	dword ptr [rax]


0x15729:	nop	dword ptr [rax]


0x15749:	nop	dword ptr [rax]


0x1578a:	nop	word ptr [rax + rax]


0x15798:	nop	dword ptr [rax + rax]


0x15801:	nop	dword ptr [rax]


0x15826:	nop	word ptr cs:[rax + rax]


0x1583c:	nop	dword ptr [rax]


0x1584c:	nop	dword ptr [rax]


0x158c1:	nop	dword ptr [rax]


0x159fc:	nop	dword ptr [rax]


0x15a4c:	nop	dword ptr [rax]


0x15a59:	nop	dword ptr [rax]


0x15b37:	nop	word ptr [rax + rax]


0x15b51:	nop	dword ptr [rax]


0x15beb:	nop	dword ptr [rax + rax]


0x15bf5:	nop	dword ptr [rax]


0x15cd4:	nop	dword ptr [rax]


0x15cf1:	nop	dword ptr [rax]


0x15da1:	nop	dword ptr [rax]


0x15e04:	nop	dword ptr [rax]


0x15e21:	nop	dword ptr [rax]


0x15e32:	nop	word ptr [rax + rax]


0x15e8a:	nop	word ptr [rax + rax]


0x15ed6:	nop	word ptr cs:[rax + rax]


