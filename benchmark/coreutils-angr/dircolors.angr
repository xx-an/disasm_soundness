0x6190:	sub	rsp, 8
0x6194:	add	rsp, 8
0x6198:	ret	


0x6180:	mov	rdx, qword ptr [rip + 0x203e81]
0x6187:	xor	esi, esi
0x6189:	jmp	0x1f90


0x6170:	ret	


0x6100:	push	r15
0x6102:	push	r14
0x6104:	mov	r15, rdx
0x6107:	push	r13
0x6109:	push	r12
0x610b:	lea	r12, [rip + 0x20373e]
0x6112:	push	rbp
0x6113:	lea	rbp, [rip + 0x20373e]
0x611a:	push	rbx
0x611b:	mov	r13d, edi
0x611e:	mov	r14, rsi
0x6121:	sub	rbp, r12
0x6124:	sub	rsp, 8
0x6128:	sar	rbp, 3
0x612c:	call	0x1cd0


0x60c0:	sub	rsp, 8
0x60c4:	mov	edi, 0xe
0x60c9:	call	0x1f00


0x6060:	sub	rsp, 8
0x6064:	xor	esi, esi
0x6066:	call	0x1f40


0x5fe0:	push	r12
0x5fe2:	push	rbp
0x5fe3:	mov	rbp, rdi
0x5fe6:	push	rbx
0x5fe7:	call	0x1d50


0x5fb0:	mov	rdx, qword ptr [rdi + 8]
0x5fb4:	xor	eax, eax
0x5fb6:	test	rdx, rdx
0x5fb9:	je	0x5fd8


0x5f40:	push	r12
0x5f42:	push	rbp
0x5f43:	mov	rbp, rsi
0x5f46:	push	rbx
0x5f47:	mov	rsi, qword ptr [rdi + 8]
0x5f4b:	mov	rbx, rdi
0x5f4e:	test	rsi, rsi
0x5f51:	je	0x5f7d


0x5f00:	mov	rax, qword ptr [rdi + 8]
0x5f04:	test	rax, rax
0x5f07:	je	0x5f36


0x5e10:	push	r14
0x5e12:	push	r13
0x5e14:	xor	edx, edx
0x5e16:	push	r12
0x5e18:	push	rbp
0x5e19:	push	rbx
0x5e1a:	mov	rbx, qword ptr [rdi + 0x18]
0x5e1e:	sub	rbx, qword ptr [rdi + 0x10]
0x5e22:	mov	rbp, qword ptr [rdi + 8]
0x5e26:	add	rsi, rbx
0x5e29:	mov	rcx, rbx
0x5e2c:	setb	dl
0x5e2f:	add	rsi, qword ptr [rdi + 0x30]
0x5e33:	setb	al
0x5e36:	shr	rcx, 3
0x5e3a:	cmp	qword ptr [rdi], rsi
0x5e3d:	lea	r12, [rsi + rcx + 0x64]
0x5e42:	cmovae	rsi, qword ptr [rdi]
0x5e46:	cmp	rsi, r12
0x5e49:	cmovae	r12, rsi
0x5e4d:	test	rdx, rdx
0x5e50:	jne	0x5ef5


0x5df0:	or	byte ptr [rdi + 0x50], 1
0x5df4:	mov	qword ptr [rdi + 0x38], rcx
0x5df8:	mov	qword ptr [rdi + 0x40], r8
0x5dfc:	mov	qword ptr [rdi + 0x48], r9
0x5e00:	jmp	0x5d40


0x5dd0:	and	byte ptr [rdi + 0x50], 0xfe
0x5dd4:	mov	qword ptr [rdi + 0x38], rcx
0x5dd8:	mov	qword ptr [rdi + 0x40], r8
0x5ddc:	jmp	0x5d40


0x5d40:	test	rdx, rdx
0x5d43:	push	r12
0x5d45:	push	rbp
0x5d46:	push	rbx
0x5d47:	mov	rbx, rdi
0x5d4a:	je	0x5db0


0x5d20:	test	byte ptr [rdi + 0x50], 1
0x5d24:	mov	rax, qword ptr [rdi + 0x40]
0x5d28:	jne	0x5d30


0x5d00:	test	byte ptr [rdi + 0x50], 1
0x5d04:	mov	rax, qword ptr [rdi + 0x38]
0x5d08:	jne	0x5d10


0x5cc0:	lea	rsi, [rip + 0x2588]
0x5cc7:	sub	rsp, 8
0x5ccb:	mov	edx, 5
0x5cd0:	xor	edi, edi
0x5cd2:	call	0x1da0


0x5c30:	push	r13
0x5c32:	push	r12
0x5c34:	mov	r13, rsi
0x5c37:	push	rbp
0x5c38:	push	rbx
0x5c39:	mov	rbx, rdi
0x5c3c:	mov	r12, rdx
0x5c3f:	sub	rsp, 0x18
0x5c43:	mov	rax, qword ptr fs:[0x28]
0x5c4c:	mov	qword ptr [rsp + 8], rax
0x5c51:	xor	eax, eax
0x5c53:	lea	rax, [rsp + 4]
0x5c58:	test	rdi, rdi
0x5c5b:	cmove	rbx, rax
0x5c5f:	mov	rdi, rbx
0x5c62:	call	0x1df0


0x5bd0:	mov	rax, qword ptr [rdi + 8]
0x5bd4:	cmp	qword ptr [rdi + 0x10], rax
0x5bd8:	je	0x5be0


0x5b90:	test	rdi, rdi
0x5b93:	push	rbx
0x5b94:	mov	rbx, rdi
0x5b97:	je	0x5baa


0x5b10:	push	r12
0x5b12:	push	rbp
0x5b13:	push	rbx
0x5b14:	mov	rbx, rdi
0x5b17:	call	0x1ee0


0x5af0:	sub	rsp, 8
0x5af4:	call	0x1e70


0x5ab0:	lea	rsi, [rip + 0x2798]
0x5ab7:	sub	rsp, 8
0x5abb:	mov	edx, 5
0x5ac0:	xor	edi, edi
0x5ac2:	call	0x1da0


0x5a90:	push	rbx
0x5a91:	mov	rbx, rdi
0x5a94:	call	0x1dc0


0x5a60:	push	rbp
0x5a61:	push	rbx
0x5a62:	mov	rbp, rdi
0x5a65:	mov	rdi, rsi
0x5a68:	mov	rbx, rsi
0x5a6b:	sub	rsp, 8
0x5a6f:	call	0x5860


0x5a30:	mov	rax, rdi
0x5a33:	sub	rsp, 8
0x5a37:	mul	rsi
0x5a3a:	seto	dl
0x5a3d:	test	rax, rax
0x5a40:	js	0x5a59


0x5a10:	push	rbx
0x5a11:	mov	rbx, rdi
0x5a14:	call	0x5860


0x59c0:	test	rdi, rdi
0x59c3:	mov	rax, qword ptr [rsi]
0x59c6:	je	0x59f0


0x5930:	test	rdi, rdi
0x5933:	mov	r9, rdx
0x5936:	mov	rcx, qword ptr [rsi]
0x5939:	je	0x5970


0x5900:	mov	rax, rsi
0x5903:	mul	rdx
0x5906:	mov	rsi, rax
0x5909:	seto	al
0x590c:	test	rsi, rsi
0x590f:	js	0x591b


0x58c0:	test	rsi, rsi
0x58c3:	push	rbx
0x58c4:	mov	rbx, rsi
0x58c7:	jne	0x58ce


0x58b0:	jmp	0x5860


0x5880:	mov	rax, rdi
0x5883:	mul	rsi
0x5886:	mov	rdi, rax
0x5889:	seto	al
0x588c:	test	rdi, rdi
0x588f:	js	0x589b


0x5860:	push	rbx
0x5861:	mov	rbx, rdi
0x5864:	call	0x2008


0x57e0:	push	rbx
0x57e1:	lea	rsi, [rip + 0x275a]
0x57e8:	mov	edx, 5
0x57ed:	xor	edi, edi
0x57ef:	call	0x1da0


0x5700:	push	rbp
0x5701:	push	rbx
0x5702:	mov	r10d, 0x20
0x5708:	xor	r11d, r11d
0x570b:	sub	rsp, 0xb8
0x5712:	mov	rax, qword ptr fs:[0x28]
0x571b:	mov	qword ptr [rsp + 0x78], rax
0x5720:	xor	eax, eax
0x5722:	lea	rax, [rsp + 0xd0]
0x572a:	mov	qword ptr [rsp + 0xa0], r8
0x5732:	lea	rbx, [rsp + 0xd0]
0x573a:	lea	r8, [rsp + 0x20]
0x573f:	mov	qword ptr [rsp + 0xa8], r9
0x5747:	mov	dword ptr [rsp + 8], 0x20
0x574f:	mov	qword ptr [rsp + 0x10], rax
0x5754:	lea	rax, [rsp + 0x80]
0x575c:	xor	r9d, r9d
0x575f:	mov	qword ptr [rsp + 0x18], rax
0x5764:	mov	rbp, rax
0x5767:	nop	word ptr [rax + rax]
0x5770:	cmp	r10d, 0x2f
0x5774:	ja	0x57cc


0x5680:	sub	rsp, 0x68
0x5684:	mov	r10, r8
0x5687:	xor	r9d, r9d
0x568a:	mov	rax, qword ptr fs:[0x28]
0x5693:	mov	qword ptr [rsp + 0x58], rax
0x5698:	xor	eax, eax
0x569a:	mov	r8, rsp
0x569d:	nop	dword ptr [rax]
0x56a0:	mov	eax, dword ptr [r10]
0x56a3:	cmp	eax, 0x2f
0x56a6:	ja	0x56ea


0x5660:	xor	r9d, r9d
0x5663:	cmp	qword ptr [r8], 0
0x5667:	je	0x567b


0x5240:	push	r15
0x5242:	push	r14
0x5244:	push	r13
0x5246:	push	r12
0x5248:	mov	r12, r9
0x524b:	push	rbp
0x524c:	push	rbx
0x524d:	mov	rbp, rdi
0x5250:	mov	rbx, r8
0x5253:	sub	rsp, 0x28
0x5257:	test	rsi, rsi
0x525a:	je	0x5378


0x5220:	lea	rcx, [rip + 0x204df9]
0x5227:	mov	rsi, rdi
0x522a:	mov	rdx, -1
0x5231:	xor	edi, edi
0x5233:	jmp	0x48e0


0x5200:	lea	rcx, [rip + 0x204e19]
0x5207:	mov	rdx, -1
0x520e:	jmp	0x48e0


0x51e0:	lea	rcx, [rip + 0x204e39]
0x51e7:	mov	rdx, rsi
0x51ea:	mov	rsi, rdi
0x51ed:	xor	edi, edi
0x51ef:	jmp	0x48e0


0x51d0:	lea	rcx, [rip + 0x204e49]
0x51d7:	jmp	0x48e0


0x51b0:	mov	r8, rcx
0x51b3:	mov	rcx, rdx
0x51b6:	mov	rdx, rsi
0x51b9:	mov	rsi, rdi
0x51bc:	xor	edi, edi
0x51be:	jmp	0x50e0


0x5190:	mov	rcx, rdx
0x5193:	mov	r8, -1
0x519a:	mov	rdx, rsi
0x519d:	mov	rsi, rdi
0x51a0:	xor	edi, edi
0x51a2:	jmp	0x50e0


0x5180:	mov	r8, -1
0x5187:	jmp	0x50e0


0x50e0:	sub	rsp, 0x48
0x50e4:	mov	r9, rcx
0x50e7:	mov	rcx, qword ptr [rip + 0x2051c2]
0x50ee:	movdqa	xmm0, xmmword ptr [rip + 0x20518a]
0x50f6:	mov	rax, qword ptr fs:[0x28]
0x50ff:	mov	qword ptr [rsp + 0x38], rax
0x5104:	xor	eax, eax
0x5106:	movaps	xmmword ptr [rsp], xmm0
0x510a:	test	rsi, rsi
0x510d:	mov	qword ptr [rsp + 0x30], rcx
0x5112:	mov	dword ptr [rsp], 0xa
0x5119:	movdqa	xmm0, xmmword ptr [rip + 0x20516f]
0x5121:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x5126:	movdqa	xmm0, xmmword ptr [rip + 0x205172]
0x512e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x5133:	je	0x5167


0x5050:	sub	rsp, 0x48
0x5054:	mov	rax, rdx
0x5057:	mov	rdx, qword ptr fs:[0x28]
0x5060:	mov	qword ptr [rsp + 0x38], rdx
0x5065:	xor	edx, edx
0x5067:	cmp	esi, 0xa
0x506a:	je	0x50d4


0x5040:	mov	edx, 0x3a
0x5045:	jmp	0x4f70


0x5020:	mov	edx, 0x3a
0x5025:	mov	rsi, -1
0x502c:	jmp	0x4f70


0x5010:	movsx	edx, sil
0x5014:	mov	rsi, -1
0x501b:	jmp	0x4f70


0x4f70:	sub	rsp, 0x48
0x4f74:	mov	ecx, edx
0x4f76:	mov	rax, qword ptr fs:[0x28]
0x4f7f:	mov	qword ptr [rsp + 0x38], rax
0x4f84:	xor	eax, eax
0x4f86:	mov	rax, qword ptr [rip + 0x205323]
0x4f8d:	mov	r8, rsp
0x4f90:	and	ecx, 0x1f
0x4f93:	movdqa	xmm0, xmmword ptr [rip + 0x2052e5]
0x4f9b:	mov	qword ptr [rsp + 0x30], rax
0x4fa0:	mov	eax, edx
0x4fa2:	movaps	xmmword ptr [rsp], xmm0
0x4fa6:	shr	al, 5
0x4fa9:	movzx	eax, al
0x4fac:	lea	r9, [r8 + rax*4 + 8]
0x4fb1:	movdqa	xmm0, xmmword ptr [rip + 0x2052d7]
0x4fb9:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x4fbe:	movdqa	xmm0, xmmword ptr [rip + 0x2052da]
0x4fc6:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x4fcb:	mov	edx, dword ptr [r9]
0x4fce:	mov	eax, edx
0x4fd0:	shr	eax, cl
0x4fd2:	not	eax
0x4fd4:	and	eax, 1
0x4fd7:	shl	eax, cl
0x4fd9:	mov	rcx, r8
0x4fdc:	xor	eax, edx
0x4fde:	mov	rdx, rsi
0x4fe1:	mov	rsi, rdi
0x4fe4:	mov	dword ptr [r9], eax
0x4fe7:	xor	edi, edi
0x4fe9:	call	0x48e0


0x4f60:	mov	rcx, rdx
0x4f63:	mov	rdx, rsi
0x4f66:	mov	esi, edi
0x4f68:	xor	edi, edi
0x4f6a:	jmp	0x4ec0


0x4f50:	mov	rdx, rsi
0x4f53:	mov	esi, edi
0x4f55:	xor	edi, edi
0x4f57:	jmp	0x4e30


0x4ec0:	sub	rsp, 0x48
0x4ec4:	mov	rax, rdx
0x4ec7:	mov	rdx, rcx
0x4eca:	mov	rcx, qword ptr fs:[0x28]
0x4ed3:	mov	qword ptr [rsp + 0x38], rcx
0x4ed8:	xor	ecx, ecx
0x4eda:	cmp	esi, 0xa
0x4edd:	je	0x4f40


0x4e30:	sub	rsp, 0x48
0x4e34:	mov	rax, rdx
0x4e37:	mov	rdx, qword ptr fs:[0x28]
0x4e40:	mov	qword ptr [rsp + 0x38], rdx
0x4e45:	xor	edx, edx
0x4e47:	cmp	esi, 0xa
0x4e4a:	je	0x4eb4


0x4e10:	lea	rcx, [rip + 0x205469]
0x4e17:	mov	rdx, rsi
0x4e1a:	mov	rsi, rdi
0x4e1d:	xor	edi, edi
0x4e1f:	jmp	0x48e0


0x4df0:	lea	rcx, [rip + 0x205489]
0x4df7:	mov	rsi, rdi
0x4dfa:	mov	rdx, -1
0x4e01:	xor	edi, edi
0x4e03:	jmp	0x48e0


0x4de0:	lea	rcx, [rip + 0x205499]
0x4de7:	jmp	0x48e0


0x4dc0:	lea	rcx, [rip + 0x2054b9]
0x4dc7:	mov	rdx, -1
0x4dce:	jmp	0x48e0


0x4d20:	mov	eax, dword ptr [rip + 0x205332]
0x4d26:	push	r12
0x4d28:	mov	r12, qword ptr [rip + 0x205331]
0x4d2f:	push	rbp
0x4d30:	push	rbx
0x4d31:	cmp	eax, 1
0x4d34:	jle	0x4d61


0x4d10:	mov	rcx, rdx
0x4d13:	xor	edx, edx
0x4d15:	jmp	0x4c20


0x4c20:	push	r15
0x4c22:	push	r14
0x4c24:	lea	rax, [rip + 0x205655]
0x4c2b:	push	r13
0x4c2d:	push	r12
0x4c2f:	mov	r12, rdx
0x4c32:	push	rbp
0x4c33:	push	rbx
0x4c34:	mov	rbx, rcx
0x4c37:	mov	r14, rdi
0x4c3a:	mov	r15, rsi
0x4c3d:	sub	rsp, 0x38
0x4c41:	test	rcx, rcx
0x4c44:	cmove	rbx, rax
0x4c48:	xor	ebp, ebp
0x4c4a:	call	0x1d20


0x4ba0:	push	r15
0x4ba2:	push	r14
0x4ba4:	lea	rax, [rip + 0x2056d5]
0x4bab:	push	r13
0x4bad:	push	r12
0x4baf:	mov	r13, rdi
0x4bb2:	push	rbp
0x4bb3:	push	rbx
0x4bb4:	mov	rbx, r8
0x4bb7:	mov	r14, rsi
0x4bba:	mov	r15, rdx
0x4bbd:	sub	rsp, 0x18
0x4bc1:	test	r8, r8
0x4bc4:	cmove	rbx, rax
0x4bc8:	mov	qword ptr [rsp + 8], rcx
0x4bcd:	call	0x1d20


0x4b70:	lea	rax, [rip + 0x205709]
0x4b77:	test	rdi, rdi
0x4b7a:	cmove	rdi, rax
0x4b7e:	test	rsi, rsi
0x4b81:	mov	dword ptr [rdi], 0xa
0x4b87:	je	0x4b97


0x4b50:	lea	rax, [rip + 0x205729]
0x4b57:	test	rdi, rdi
0x4b5a:	cmove	rdi, rax
0x4b5e:	mov	eax, dword ptr [rdi + 4]
0x4b61:	mov	dword ptr [rdi + 4], esi
0x4b64:	ret	


0x4b10:	lea	rax, [rip + 0x205769]
0x4b17:	test	rdi, rdi
0x4b1a:	mov	ecx, esi
0x4b1c:	cmove	rdi, rax
0x4b20:	mov	eax, esi
0x4b22:	and	ecx, 0x1f
0x4b25:	shr	al, 5
0x4b28:	movzx	eax, al
0x4b2b:	lea	rdi, [rdi + rax*4 + 8]
0x4b30:	mov	esi, dword ptr [rdi]
0x4b32:	mov	eax, esi
0x4b34:	shr	eax, cl
0x4b36:	xor	edx, eax
0x4b38:	and	eax, 1
0x4b3b:	and	edx, 1
0x4b3e:	shl	edx, cl
0x4b40:	xor	edx, esi
0x4b42:	mov	dword ptr [rdi], edx
0x4b44:	ret	


0x4af0:	lea	rax, [rip + 0x205789]
0x4af7:	test	rdi, rdi
0x4afa:	cmove	rdi, rax
0x4afe:	mov	dword ptr [rdi], esi
0x4b00:	ret	


0x4ad0:	lea	rax, [rip + 0x2057a9]
0x4ad7:	test	rdi, rdi
0x4ada:	cmove	rdi, rax
0x4ade:	mov	eax, dword ptr [rdi]
0x4ae0:	ret	


0x4a90:	push	r12
0x4a92:	push	rbp
0x4a93:	push	rbx
0x4a94:	mov	rbx, rdi
0x4a97:	call	0x1d20


0x48e0:	push	r15
0x48e2:	push	r14
0x48e4:	movsxd	r15, edi
0x48e7:	push	r13
0x48e9:	push	r12
0x48eb:	mov	r14, rdx
0x48ee:	push	rbp
0x48ef:	push	rbx
0x48f0:	mov	rbp, rcx
0x48f3:	sub	rsp, 0x28
0x48f7:	mov	qword ptr [rsp + 8], rsi
0x48fc:	call	0x1d20


0x36a0:	push	r15
0x36a2:	push	r14
0x36a4:	mov	r15d, r8d
0x36a7:	push	r13
0x36a9:	push	r12
0x36ab:	mov	r14, rdi
0x36ae:	push	rbp
0x36af:	push	rbx
0x36b0:	mov	ebx, r9d
0x36b3:	mov	r13, rsi
0x36b6:	mov	rbp, rcx
0x36b9:	and	ebx, 2
0x36bc:	sub	rsp, 0xb8
0x36c3:	mov	rax, qword ptr [rsp + 0xf0]
0x36cb:	mov	qword ptr [rsp + 0x10], rdx
0x36d0:	mov	dword ptr [rsp + 8], r8d
0x36d5:	mov	dword ptr [rsp + 0x78], r9d
0x36da:	mov	qword ptr [rsp + 0x20], rax
0x36df:	mov	rax, qword ptr [rsp + 0xf8]
0x36e7:	mov	qword ptr [rsp + 0x68], rax
0x36ec:	mov	rax, qword ptr [rsp + 0x100]
0x36f4:	mov	qword ptr [rsp + 0x60], rax
0x36f9:	mov	rax, qword ptr fs:[0x28]
0x3702:	mov	qword ptr [rsp + 0xa8], rax
0x370a:	xor	eax, eax
0x370c:	call	0x1db0


0x35b0:	push	rbp
0x35b1:	push	rbx
0x35b2:	mov	rbp, rdi
0x35b5:	mov	ebx, esi
0x35b7:	sub	rsp, 8
0x35bb:	call	0x60c0


0x3510:	test	rdi, rdi
0x3513:	push	rbx
0x3514:	je	0x358d


0x3360:	push	r15
0x3362:	push	r14
0x3364:	mov	r15, rsi
0x3367:	push	r13
0x3369:	push	r12
0x336b:	mov	r12, rdx
0x336e:	push	rbp
0x336f:	push	rbx
0x3370:	sub	rsp, 0x18
0x3374:	mov	qword ptr [rsp + 8], rdi
0x3379:	mov	rdi, rdx
0x337c:	call	0x1ee0


0x3310:	push	rbp
0x3311:	push	rbx
0x3312:	mov	ebp, edi
0x3314:	lea	rdi, [rip + 0x46a1]
0x331b:	xor	esi, esi
0x331d:	xor	eax, eax
0x331f:	sub	rsp, 8
0x3323:	mov	ebx, 1
0x3328:	call	0x1f70


0x32c0:	push	rbx
0x32c1:	mov	rbx, rdi
0x32c4:	call	0x1dc0


0x3260:	movzx	edx, byte ptr [rdi]
0x3263:	mov	rax, rdi
0x3266:	cmp	dl, 0x2f
0x3269:	jne	0x327c


0x31b0:	push	rbp
0x31b1:	push	rbx
0x31b2:	sub	rsp, 8
0x31b6:	mov	rdi, qword ptr [rip + 0x206eeb]
0x31bd:	call	0x5fe0


0x31a0:	mov	byte ptr [rip + 0x206fb1], dil
0x31a7:	ret	


0x3190:	mov	qword ptr [rip + 0x206fc9], rdi
0x3197:	ret	


0x3140:	xor	eax, eax
0x3142:	cmp	rdi, rsi
0x3145:	jne	0x315c


0x2dd0:	push	r13
0x2dd2:	push	r12
0x2dd4:	mov	edx, 5
0x2dd9:	push	rbp
0x2dda:	push	rbx
0x2ddb:	mov	ebp, edi
0x2ddd:	sub	rsp, 0x88
0x2de4:	mov	rbx, qword ptr [rip + 0x20737d]
0x2deb:	mov	rax, qword ptr fs:[0x28]
0x2df4:	mov	qword ptr [rsp + 0x78], rax
0x2df9:	xor	eax, eax
0x2dfb:	test	edi, edi
0x2dfd:	je	0x2e2d


0x27a0:	push	r15
0x27a2:	push	r14
0x27a4:	mov	r14, rdi
0x27a7:	push	r13
0x27a9:	push	r12
0x27ab:	lea	rdi, [rip + 0x39fe]
0x27b2:	push	rbp
0x27b3:	push	rbx
0x27b4:	sub	rsp, 0x48
0x27b8:	mov	rax, qword ptr fs:[0x28]
0x27c1:	mov	qword ptr [rsp + 0x38], rax
0x27c6:	xor	eax, eax
0x27c8:	mov	qword ptr [rsp + 8], rsi
0x27cd:	mov	qword ptr [rsp + 0x28], 0
0x27d6:	mov	qword ptr [rsp + 0x30], 0
0x27df:	call	0x1d00


0x25b0:	movzx	edx, byte ptr [rdi]
0x25b3:	test	dl, dl
0x25b5:	je	0x2770


0x25a0:	push	rbp
0x25a1:	mov	rbp, rsp
0x25a4:	pop	rbp
0x25a5:	jmp	0x2510


0x2560:	cmp	byte ptr [rip + 0x207b81], 0
0x2567:	jne	0x2598


0x2510:	lea	rdi, [rip + 0x207b71]
0x2517:	lea	rsi, [rip + 0x207b6a]
0x251e:	push	rbp
0x251f:	sub	rsi, rdi
0x2522:	mov	rbp, rsp
0x2525:	sar	rsi, 3
0x2529:	mov	rax, rsi
0x252c:	shr	rax, 0x3f
0x2530:	add	rsi, rax
0x2533:	sar	rsi, 1
0x2536:	je	0x2550


0x24d0:	lea	rdi, [rip + 0x207bb1]
0x24d7:	push	rbp
0x24d8:	lea	rax, [rip + 0x207ba9]
0x24df:	cmp	rax, rdi
0x24e2:	mov	rbp, rsp
0x24e5:	je	0x2500


0x24a0:	xor	ebp, ebp
0x24a2:	mov	r9, rdx
0x24a5:	pop	rsi
0x24a6:	mov	rdx, rsp
0x24a9:	and	rsp, 0xfffffffffffffff0
0x24ad:	push	rax
0x24ae:	push	rsp
0x24af:	lea	r8, [rip + 0x3cba]
0x24b6:	lea	rcx, [rip + 0x3c43]
0x24bd:	lea	rdi, [rip - 0x4a4]
0x24c4:	call	qword ptr [rip + 0x207b06]


0x2020:	push	r14
0x2022:	push	r13
0x2024:	mov	r13d, 2
0x202a:	push	r12
0x202c:	push	rbp
0x202d:	mov	ebp, edi
0x202f:	push	rbx
0x2030:	mov	rdi, qword ptr [rsi]
0x2033:	mov	rbx, rsi
0x2036:	xor	r12d, r12d
0x2039:	call	0x3510


0x1cd0:	sub	rsp, 8
0x1cd4:	mov	rax, qword ptr [rip + 0x2082fd]
0x1cdb:	test	rax, rax
0x1cde:	je	0x1ce2


0x1f90:	jmp	qword ptr [rip + 0x207ff2]


0x1f00:	jmp	qword ptr [rip + 0x20803a]


0x1f40:	jmp	qword ptr [rip + 0x20801a]


0x1d50:	jmp	qword ptr [rip + 0x208112]


0x5fd8:	ret	


0x5f7d:	test	rbp, rbp
0x5f80:	jne	0x5fa5


0x5f36:	ret	


0x5e56:	movzx	eax, al
0x5e59:	test	rax, rax
0x5e5c:	jne	0x5ef5


0x5ef5:	call	qword ptr [rip + 0x204185]


0x5db0:	mov	r12d, 0xf
0x5db6:	mov	ebp, 0x10
0x5dbb:	jmp	0x5d53


0x5d4c:	lea	r12, [rdx - 1]
0x5d50:	mov	rbp, rdx
0x5d53:	test	rsi, rsi
0x5d56:	mov	eax, 0xfe0
0x5d5b:	mov	qword ptr [rbx + 0x30], r12
0x5d5f:	cmove	rsi, rax
0x5d63:	mov	rdi, rbx
0x5d66:	mov	qword ptr [rbx], rsi
0x5d69:	call	0x5d00


0x5d2a:	mov	rdi, rsi
0x5d2d:	jmp	rax


0x5d30:	mov	rdi, qword ptr [rdi + 0x48]
0x5d34:	jmp	rax


0x5d0a:	mov	rdi, rsi
0x5d0d:	jmp	rax


0x5d10:	mov	rdi, qword ptr [rdi + 0x48]
0x5d14:	jmp	rax


0x1da0:	jmp	qword ptr [rip + 0x2080ea]


0x1df0:	jmp	qword ptr [rip + 0x2080c2]


0x5be0:	mov	rax, qword ptr [rdi + 0x20]
0x5be4:	cmp	qword ptr [rdi + 0x28], rax
0x5be8:	jne	0x5bda


0x5bda:	jmp	0x1f80


0x5baa:	mov	rdi, rbx
0x5bad:	pop	rbx
0x5bae:	jmp	0x1ef0


0x5b99:	call	0x1f10


0x1ee0:	jmp	qword ptr [rip + 0x20804a]


0x1e70:	jmp	qword ptr [rip + 0x208082]


0x1dc0:	jmp	qword ptr [rip + 0x2080da]


0x5a59:	call	0x5ab0


0x5a42:	movzx	edx, dl
0x5a45:	test	rdx, rdx
0x5a48:	jne	0x5a59


0x59f0:	test	rax, rax
0x59f3:	mov	edx, 0x80
0x59f8:	cmove	rax, rdx
0x59fc:	test	rax, rax
0x59ff:	jns	0x59e2


0x59c8:	movabs	rdx, 0x5555555555555553
0x59d2:	cmp	rax, rdx
0x59d5:	ja	0x5a01


0x5970:	test	rcx, rcx
0x5973:	je	0x5998


0x593b:	xor	edx, edx
0x593d:	movabs	rax, 0x5555555555555554
0x5947:	div	r9
0x594a:	cmp	rax, rcx
0x594d:	jbe	0x598b


0x591b:	sub	rsp, 8
0x591f:	call	0x5ab0


0x5911:	movzx	eax, al
0x5914:	test	rax, rax
0x5917:	jne	0x591b


0x58c9:	test	rdi, rdi
0x58cc:	jne	0x58e8


0x58ce:	mov	rsi, rbx
0x58d1:	call	0x1f30


0x589b:	sub	rsp, 8
0x589f:	call	0x5ab0


0x5891:	movzx	eax, al
0x5894:	test	rax, rax
0x5897:	jne	0x589b


0x2008:	jmp	qword ptr [rip + 0x207fd2]


0x5776:	mov	eax, r10d
0x5779:	mov	r11d, 1
0x577f:	add	r10d, 8
0x5783:	add	rax, rbp
0x5786:	mov	rax, qword ptr [rax]
0x5789:	test	rax, rax
0x578c:	mov	qword ptr [r8 + r9*8], rax
0x5790:	je	0x579c


0x57cc:	mov	rax, rbx
0x57cf:	add	rbx, 8
0x57d3:	jmp	0x5786


0x56a8:	mov	r11d, eax
0x56ab:	add	r11, qword ptr [r10 + 0x10]
0x56af:	add	eax, 8
0x56b2:	mov	dword ptr [r10], eax
0x56b5:	mov	rax, qword ptr [r11]
0x56b8:	test	rax, rax
0x56bb:	mov	qword ptr [r8 + r9*8], rax
0x56bf:	je	0x56cb


0x56ea:	mov	r11, qword ptr [r10 + 8]
0x56ee:	lea	rax, [r11 + 8]
0x56f2:	mov	qword ptr [r10 + 8], rax
0x56f6:	jmp	0x56b5


0x567b:	jmp	0x5240


0x5378:	mov	r8, rcx
0x537b:	mov	rcx, rdx
0x537e:	lea	rdx, [rip + 0x2b6f]
0x5385:	mov	esi, 1
0x538a:	xor	eax, eax
0x538c:	call	0x1fc0


0x5260:	mov	r8, rdx
0x5263:	lea	rdx, [rip + 0x2c7e]
0x526a:	mov	r9, rcx
0x526d:	xor	eax, eax
0x526f:	mov	rcx, rsi
0x5272:	mov	esi, 1
0x5277:	call	0x1fc0


0x5167:	call	0x1d10


0x5135:	test	rdx, rdx
0x5138:	je	0x5167


0x50d4:	call	0x1d10


0x506c:	mov	dword ptr [rsp], esi
0x506f:	mov	rcx, rsp
0x5072:	mov	rdx, -1
0x5079:	mov	rsi, rax
0x507c:	mov	qword ptr [rsp + 4], 0
0x5085:	mov	qword ptr [rsp + 0xc], 0x4000000
0x508e:	mov	qword ptr [rsp + 0x14], 0
0x5097:	mov	qword ptr [rsp + 0x1c], 0
0x50a0:	mov	qword ptr [rsp + 0x24], 0
0x50a9:	mov	qword ptr [rsp + 0x2c], 0
0x50b2:	mov	dword ptr [rsp + 0x34], 0
0x50ba:	call	0x48e0


0x4f40:	call	0x1d10


0x4edf:	mov	dword ptr [rsp], esi
0x4ee2:	mov	rcx, rsp
0x4ee5:	mov	rsi, rax
0x4ee8:	mov	qword ptr [rsp + 4], 0
0x4ef1:	mov	qword ptr [rsp + 0xc], 0
0x4efa:	mov	qword ptr [rsp + 0x14], 0
0x4f03:	mov	qword ptr [rsp + 0x1c], 0
0x4f0c:	mov	qword ptr [rsp + 0x24], 0
0x4f15:	mov	qword ptr [rsp + 0x2c], 0
0x4f1e:	mov	dword ptr [rsp + 0x34], 0
0x4f26:	call	0x48e0


0x4eb4:	call	0x1d10


0x4e4c:	mov	dword ptr [rsp], esi
0x4e4f:	mov	rcx, rsp
0x4e52:	mov	rdx, -1
0x4e59:	mov	rsi, rax
0x4e5c:	mov	qword ptr [rsp + 4], 0
0x4e65:	mov	qword ptr [rsp + 0xc], 0
0x4e6e:	mov	qword ptr [rsp + 0x14], 0
0x4e77:	mov	qword ptr [rsp + 0x1c], 0
0x4e80:	mov	qword ptr [rsp + 0x24], 0
0x4e89:	mov	qword ptr [rsp + 0x2c], 0
0x4e92:	mov	dword ptr [rsp + 0x34], 0
0x4e9a:	call	0x48e0


0x4d61:	mov	rdi, qword ptr [r12 + 8]
0x4d66:	lea	rbx, [rip + 0x205413]
0x4d6d:	cmp	rdi, rbx
0x4d70:	je	0x4d89


0x4d36:	sub	eax, 2
0x4d39:	lea	rbx, [r12 + 0x18]
0x4d3e:	shl	rax, 4
0x4d42:	lea	rbp, [r12 + rax + 0x28]
0x4d47:	nop	word ptr [rax + rax]
0x4d50:	mov	rdi, qword ptr [rbx]
0x4d53:	add	rbx, 0x10
0x4d57:	call	0x2000


0x1d20:	jmp	qword ptr [rip + 0x20812a]


0x4b97:	sub	rsp, 8
0x4b9b:	call	0x1d10


0x4b89:	test	rdx, rdx
0x4b8c:	je	0x4b97


0x1db0:	jmp	qword ptr [rip + 0x2080e2]


0x358d:	mov	rcx, qword ptr [rip + 0x206b4c]
0x3594:	lea	rdi, [rip + 0x442d]
0x359b:	mov	edx, 0x37
0x35a0:	mov	esi, 1
0x35a5:	call	0x1fb0


0x3516:	mov	esi, 0x2f
0x351b:	mov	rbx, rdi
0x351e:	call	0x1e10


0x1f70:	jmp	qword ptr [rip + 0x208002]


0x327c:	test	dl, dl
0x327e:	je	0x32ba


0x3147:	jmp	0x318c


0x315c:	movzx	eax, byte ptr [rdi]
0x315f:	mov	edx, eax
0x3161:	lea	ecx, [rax + 0x20]
0x3164:	sub	edx, 0x41
0x3167:	cmp	dl, 0x1a
0x316a:	movzx	edx, byte ptr [rsi]
0x316d:	cmovb	eax, ecx
0x3170:	mov	ecx, edx
0x3172:	lea	r9d, [rdx + 0x20]
0x3176:	sub	ecx, 0x41
0x3179:	cmp	cl, 0x1a
0x317c:	cmovb	edx, r9d
0x3180:	test	al, al
0x3182:	jne	0x3150


0x2e2d:	lea	rsi, [rip + 0x33ad]
0x2e34:	xor	edi, edi
0x2e36:	call	0x1da0


0x2dff:	lea	rsi, [rip + 0x36c2]
0x2e06:	xor	edi, edi
0x2e08:	call	0x1da0


0x1d00:	jmp	qword ptr [rip + 0x20813a]


0x2770:	ret	


0x25bb:	push	r12
0x25bd:	mov	r12d, 1
0x25c3:	push	rbp
0x25c4:	lea	rbp, [rip + 0x207b35]
0x25cb:	push	rbx
0x25cc:	mov	rbx, rdi
0x25cf:	jmp	0x2645


0x2569:	cmp	qword ptr [rip + 0x207a7f], 0
0x2571:	push	rbp
0x2572:	mov	rbp, rsp
0x2575:	je	0x2583


0x2598:	ret	


0x2550:	pop	rbp
0x2551:	ret	


0x2538:	mov	rax, qword ptr [rip + 0x207aa9]
0x253f:	test	rax, rax
0x2542:	je	0x2550


0x2500:	pop	rbp
0x2501:	ret	


0x24e7:	mov	rax, qword ptr [rip + 0x207ada]
0x24ee:	test	rax, rax
0x24f1:	je	0x2500




0x1ce2:	add	rsp, 8
0x1ce6:	ret	


0x1ce0:	call	rax










0x5fd2:	ret	


0x5fc0:	mov	rcx, qword ptr [rdx]
0x5fc3:	sub	rcx, rdx
0x5fc6:	mov	rdx, qword ptr [rdx + 8]
0x5fca:	add	rax, rcx
0x5fcd:	test	rdx, rdx
0x5fd0:	jne	0x5fc0


0x5f82:	pop	rbx
0x5f83:	pop	rbp
0x5f84:	pop	r12
0x5f86:	ret	


0x5fa5:	call	0x1d10


0x5f5d:	mov	rax, qword ptr [rsi]
0x5f60:	cmp	rax, rbp
0x5f63:	jae	0x5f90


0x5f65:	mov	r12, qword ptr [rsi + 8]
0x5f69:	mov	rdi, rbx
0x5f6c:	call	0x5d20


0x5f1a:	mov	rax, qword ptr [rax + 8]
0x5f1e:	test	rax, rax
0x5f21:	jne	0x5f10


0x5f15:	cmp	qword ptr [rax], rsi
0x5f18:	jae	0x5f30


0x5e62:	mov	rsi, r12
0x5e65:	mov	r13, rdi
0x5e68:	call	0x5d00


0x5d53:	test	rsi, rsi
0x5d56:	mov	eax, 0xfe0
0x5d5b:	mov	qword ptr [rbx + 0x30], r12
0x5d5f:	cmove	rsi, rax
0x5d63:	mov	rdi, rbx
0x5d66:	mov	qword ptr [rbx], rsi
0x5d69:	call	0x5d00






0x5bea:	cmp	qword ptr [rdi + 0x48], 0
0x5bef:	jne	0x5bda


0x1f80:	jmp	qword ptr [rip + 0x207ffa]


0x1ef0:	jmp	qword ptr [rip + 0x208042]


0x1f10:	jmp	qword ptr [rip + 0x208032]








0x5a4a:	call	0x1ea0


0x5a01:	sub	rsp, 8
0x5a05:	call	0x5ab0


0x59e2:	mov	qword ptr [rsi], rax
0x59e5:	mov	rsi, rax
0x59e8:	jmp	0x58c0


0x59d7:	mov	rdx, rax
0x59da:	shr	rdx, 1
0x59dd:	lea	rax, [rdx + rax + 1]
0x59e2:	mov	qword ptr [rsi], rax
0x59e5:	mov	rsi, rax
0x59e8:	jmp	0x58c0


0x5998:	xor	edx, edx
0x599a:	mov	eax, 0x80
0x599f:	xor	r8d, r8d
0x59a2:	div	r9
0x59a5:	test	rax, rax
0x59a8:	sete	r8b
0x59ac:	lea	rcx, [r8 + rax]
0x59b0:	jmp	0x5975


0x5975:	mov	rax, rcx
0x5978:	mul	r9
0x597b:	seto	dl
0x597e:	test	rax, rax
0x5981:	movzx	edx, dl
0x5984:	js	0x598b


0x598b:	sub	rsp, 8
0x598f:	call	0x5ab0


0x594f:	mov	rax, rcx
0x5952:	shr	rax, 1
0x5955:	lea	rcx, [rax + rcx + 1]
0x595a:	mov	qword ptr [rsi], rcx
0x595d:	imul	rcx, r9
0x5961:	mov	rsi, rcx
0x5964:	jmp	0x58c0


0x5919:	jmp	0x58c0


0x58e8:	call	0x2000


0x1f30:	jmp	qword ptr [rip + 0x208022]


0x5899:	jmp	0x5860




0x579c:	test	r11b, r11b
0x579f:	jne	0x57c5


0x5792:	add	r9, 1
0x5796:	cmp	r9, 0xa
0x579a:	jne	0x5770


0x5786:	mov	rax, qword ptr [rax]
0x5789:	test	rax, rax
0x578c:	mov	qword ptr [r8 + r9*8], rax
0x5790:	je	0x579c


0x56cb:	call	0x5240


0x56c1:	add	r9, 1
0x56c5:	cmp	r9, 0xa
0x56c9:	jne	0x56a0


0x56b5:	mov	rax, qword ptr [r11]
0x56b8:	test	rax, rax
0x56bb:	mov	qword ptr [r8 + r9*8], rax
0x56bf:	je	0x56cb


0x5670:	add	r9, 1
0x5674:	cmp	qword ptr [r8 + r9*8], 0
0x5679:	jne	0x5670


0x1fc0:	jmp	qword ptr [rip + 0x207fda]


0x1d10:	jmp	qword ptr [rip + 0x208132]


0x513a:	mov	qword ptr [rsp + 0x28], rsi
0x513f:	mov	qword ptr [rsp + 0x30], rdx
0x5144:	mov	rcx, rsp
0x5147:	mov	rdx, r8
0x514a:	mov	rsi, r9
0x514d:	call	0x48e0


0x4d89:	lea	rbx, [rip + 0x2052e0]
0x4d90:	cmp	r12, rbx
0x4d93:	je	0x4da4


0x4d72:	call	0x2000


0x2000:	jmp	qword ptr [rip + 0x207fba]




0x4b8e:	mov	qword ptr [rdi + 0x28], rsi
0x4b92:	mov	qword ptr [rdi + 0x30], rdx
0x4b96:	ret	




0x1fb0:	jmp	qword ptr [rip + 0x207fe2]


0x1e10:	jmp	qword ptr [rip + 0x2080b2]




0x3270:	add	rax, 1
0x3274:	movzx	edx, byte ptr [rax]
0x3277:	cmp	dl, 0x2f
0x327a:	je	0x3270


0x32ba:	ret	


0x3280:	mov	rcx, rax
0x3283:	xor	esi, esi
0x3285:	jmp	0x32a5


0x318c:	ret	


0x3184:	movzx	eax, al
0x3187:	movzx	edx, dl
0x318a:	sub	eax, edx
0x318c:	ret	


0x3150:	add	rdi, 1
0x3154:	add	rsi, 1
0x3158:	cmp	al, dl
0x315a:	jne	0x3184




0x2645:	cmp	dl, 0x3d
0x2648:	mov	rcx, qword ptr [rip + 0x207ad1]
0x264f:	mov	rax, qword ptr [rip + 0x207ac2]
0x2656:	je	0x25ea


0x2583:	call	0x24d0


0x2577:	mov	rdi, qword ptr [rip + 0x207a8a]
0x257e:	call	0x2010


0x2544:	pop	rbp
0x2545:	jmp	rax


0x24f3:	pop	rbp
0x24f4:	jmp	rax


0x5f90:	mov	qword ptr [rbx + 0x18], rbp
0x5f94:	mov	qword ptr [rbx + 0x10], rbp
0x5f98:	mov	qword ptr [rbx + 0x20], rax
0x5f9c:	mov	qword ptr [rbx + 8], rsi
0x5fa0:	pop	rbx
0x5fa1:	pop	rbp
0x5fa2:	pop	r12
0x5fa4:	ret	


0x5f23:	xor	eax, eax
0x5f25:	ret	


0x5f10:	cmp	rsi, rax
0x5f13:	jbe	0x5f1a


0x5f30:	mov	eax, 1
0x5f35:	ret	


0x5bf1:	push	r12
0x5bf3:	push	rbp
0x5bf4:	mov	r12d, edx
0x5bf7:	push	rbx
0x5bf8:	mov	rbp, rsi
0x5bfb:	mov	rbx, rdi
0x5bfe:	call	0x1ee0








0x1ea0:	jmp	qword ptr [rip + 0x20806a]


0x5986:	test	rdx, rdx
0x5989:	je	0x595a




0x57a1:	call	0x5240


0x57c5:	mov	dword ptr [rsp + 8], r10d
0x57ca:	jmp	0x57a1


0x5770:	cmp	r10d, 0x2f
0x5774:	ja	0x57cc


0x56a0:	mov	eax, dword ptr [r10]
0x56a3:	cmp	eax, 0x2f
0x56a6:	ja	0x56ea






0x4da4:	pop	rbx
0x4da5:	mov	dword ptr [rip + 0x2052a9], 1
0x4daf:	pop	rbp
0x4db0:	pop	r12
0x4db2:	ret	


0x4d95:	mov	rdi, r12
0x4d98:	call	0x2000








0x32a5:	cmp	dl, 0x2f
0x32a8:	jne	0x3290


0x25ea:	test	r12b, r12b
0x25ed:	je	0x2690


0x2658:	jle	0x25d8


0x2010:	jmp	qword ptr [rip + 0x207fda]




0x595a:	mov	qword ptr [rsi], rcx
0x595d:	imul	rcx, r9
0x5961:	mov	rsi, rcx
0x5964:	jmp	0x58c0


0x32aa:	add	rcx, 1
0x32ae:	movzx	edx, byte ptr [rcx]
0x32b1:	mov	esi, 1
0x32b6:	test	dl, dl
0x32b8:	jne	0x32a5


0x3290:	test	sil, sil
0x3293:	je	0x329a


0x2690:	mov	r12d, 1
0x2696:	jmp	0x2620


0x25f3:	cmp	rcx, rax
0x25f6:	je	0x2778


0x25d8:	cmp	dl, 0x27
0x25db:	je	0x26a0


0x265e:	cmp	dl, 0x5c
0x2661:	je	0x2668


0x329a:	add	rcx, 1
0x329e:	movzx	edx, byte ptr [rcx]
0x32a1:	test	dl, dl
0x32a3:	je	0x32ba


0x3295:	mov	rax, rcx
0x3298:	xor	esi, esi
0x329a:	add	rcx, 1
0x329e:	movzx	edx, byte ptr [rcx]
0x32a1:	test	dl, dl
0x32a3:	je	0x32ba


0x2620:	cmp	rcx, rax
0x2623:	je	0x2671


0x2778:	mov	esi, 1
0x277d:	mov	rdi, rbp
0x2780:	call	0x5e10


0x25fc:	lea	rdx, [rax + 1]
0x2600:	mov	qword ptr [rip + 0x207b11], rdx
0x2607:	mov	byte ptr [rax], 0x5c
0x260a:	mov	rcx, qword ptr [rip + 0x207b0f]
0x2611:	mov	rax, qword ptr [rip + 0x207b00]
0x2618:	nop	dword ptr [rax + rax]
0x2620:	cmp	rcx, rax
0x2623:	je	0x2671


0x26a0:	cmp	rcx, rax
0x26a3:	je	0x2718


0x25e1:	cmp	dl, 0x3a
0x25e4:	jne	0x2690


0x2668:	xor	r12d, 1
0x266c:	cmp	rcx, rax
0x266f:	jne	0x2625


0x2663:	cmp	dl, 0x5e
0x2666:	jne	0x2690


0x2671:	mov	esi, 1
0x2676:	mov	rdi, rbp
0x2679:	call	0x5e10


0x2625:	lea	rdx, [rax + 1]
0x2629:	add	rbx, 1
0x262d:	mov	qword ptr [rip + 0x207ae4], rdx
0x2634:	movzx	edx, byte ptr [rbx - 1]
0x2638:	mov	byte ptr [rax], dl
0x263a:	movzx	edx, byte ptr [rbx]
0x263d:	test	dl, dl
0x263f:	je	0x2710


0x2718:	mov	esi, 1
0x271d:	mov	rdi, rbp
0x2720:	call	0x5e10


0x26a5:	lea	rdx, [rax + 1]
0x26a9:	mov	qword ptr [rip + 0x207a68], rdx
0x26b0:	mov	byte ptr [rax], 0x27
0x26b3:	mov	rax, qword ptr [rip + 0x207a5e]
0x26ba:	cmp	qword ptr [rip + 0x207a5f], rax
0x26c1:	je	0x2750


0x2710:	pop	rbx
0x2711:	pop	rbp
0x2712:	pop	r12
0x2714:	ret	


0x2750:	mov	esi, 1
0x2755:	mov	rdi, rbp
0x2758:	call	0x5e10


0x26c7:	lea	rdx, [rax + 1]
0x26cb:	mov	qword ptr [rip + 0x207a46], rdx
0x26d2:	mov	byte ptr [rax], 0x5c
0x26d5:	mov	rax, qword ptr [rip + 0x207a3c]
0x26dc:	cmp	qword ptr [rip + 0x207a3d], rax
0x26e3:	je	0x2738


0x2738:	mov	esi, 1
0x273d:	mov	rdi, rbp
0x2740:	call	0x5e10


0x26e5:	lea	rdx, [rax + 1]
0x26e9:	mov	r12d, 1
0x26ef:	mov	qword ptr [rip + 0x207a22], rdx
0x26f6:	mov	byte ptr [rax], 0x27
0x26f9:	mov	rcx, qword ptr [rip + 0x207a20]
0x2700:	mov	rax, qword ptr [rip + 0x207a11]
0x2707:	jmp	0x2620


0x2588:	mov	byte ptr [rip + 0x207b59], 1
0x258f:	pop	rbp
0x2590:	ret	


0x6131:	test	rbp, rbp
0x6134:	je	0x6156


0x6156:	add	rsp, 8
0x615a:	pop	rbx
0x615b:	pop	rbp
0x615c:	pop	r12
0x615e:	pop	r13
0x6160:	pop	r14
0x6162:	pop	r15
0x6164:	ret	


0x6136:	xor	ebx, ebx
0x6138:	nop	dword ptr [rax + rax]
0x6140:	mov	rdx, r15
0x6143:	mov	rsi, r14
0x6146:	mov	edi, r13d
0x6149:	call	qword ptr [r12 + rbx*8]


0x5a4f:	test	rax, rax
0x5a52:	je	0x5a59


0x5a54:	add	rsp, 8
0x5a58:	ret	


0x3523:	test	rax, rax
0x3526:	je	0x357d


0x357d:	mov	qword ptr [rip + 0x206be4], rbx
0x3584:	mov	qword ptr [rip + 0x206b35], rbx
0x358b:	pop	rbx
0x358c:	ret	


0x3528:	lea	r8, [rax + 1]
0x352c:	mov	rdx, r8
0x352f:	sub	rdx, rbx
0x3532:	cmp	rdx, 6
0x3536:	jle	0x357d


0x3538:	lea	rsi, [rax - 6]
0x353c:	lea	rdi, [rip + 0x44bd]
0x3543:	mov	ecx, 7
0x3548:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3548:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x354a:	seta	dl
0x354d:	sbb	dl, 0
0x3550:	test	dl, dl
0x3552:	jne	0x357d


0x3554:	lea	rdi, [rip + 0x44ad]
0x355b:	mov	ecx, 3
0x3560:	mov	rsi, r8
0x3563:	mov	rbx, r8
0x3566:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3566:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3568:	seta	dl
0x356b:	sbb	dl, 0
0x356e:	test	dl, dl
0x3570:	jne	0x357d


0x3572:	lea	rbx, [rax + 4]
0x3576:	mov	qword ptr [rip + 0x206b23], rbx
0x357d:	mov	qword ptr [rip + 0x206be4], rbx
0x3584:	mov	qword ptr [rip + 0x206b35], rbx
0x358b:	pop	rbx
0x358c:	ret	


0x35aa:	call	0x1d10


0x4d9d:	mov	qword ptr [rip + 0x2052bc], rbx
0x4da4:	pop	rbx
0x4da5:	mov	dword ptr [rip + 0x2052a9], 1
0x4daf:	pop	rbp
0x4db0:	pop	r12
0x4db2:	ret	


0x4d77:	mov	qword ptr [rip + 0x2052ee], 0x100
0x4d82:	mov	qword ptr [rip + 0x2052ef], rbx
0x4d89:	lea	rbx, [rip + 0x2052e0]
0x4d90:	cmp	r12, rbx
0x4d93:	je	0x4da4


0x58ed:	xor	eax, eax
0x58ef:	pop	rbx
0x58f0:	ret	


0x4d5c:	cmp	rbx, rbp
0x4d5f:	jne	0x4d50


0x4d50:	mov	rdi, qword ptr [rbx]
0x4d53:	add	rbx, 0x10
0x4d57:	call	0x2000


0x527c:	lea	rsi, [rip + 0x2c78]
0x5283:	xor	edi, edi
0x5285:	mov	edx, 5
0x528a:	call	0x1da0


0x5391:	jmp	0x527c


0x58d6:	test	rax, rax
0x58d9:	jne	0x58e0


0x58db:	test	rbx, rbx
0x58de:	jne	0x58f1


0x58e0:	pop	rbx
0x58e1:	ret	


0x58f1:	call	0x5ab0


0x5b9e:	test	eax, eax
0x5ba0:	je	0x5baa


0x5ba2:	test	dword ptr [rbx], 0x100
0x5ba8:	jne	0x5bb8


0x5bb8:	mov	rdi, rbx
0x5bbb:	mov	edx, 1
0x5bc0:	xor	esi, esi
0x5bc2:	call	0x5bd0


0x203e:	lea	rsi, [rip + 0x4280]
0x2045:	mov	edi, 6
0x204a:	call	0x1f40


0x27e4:	test	rax, rax
0x27e7:	je	0x2be8


0x2be8:	lea	rax, [rip + 0x35b5]
0x2bef:	mov	qword ptr [rsp + 0x10], rax
0x2bf4:	jmp	0x2803


0x27ed:	cmp	byte ptr [rax], 0
0x27f0:	mov	rdi, rax
0x27f3:	lea	rax, [rip + 0x39aa]
0x27fa:	cmovne	rax, rdi
0x27fe:	mov	qword ptr [rsp + 0x10], rax
0x2803:	lea	r12, [rip + 0x40d6]
0x280a:	mov	dword ptr [rsp], 3
0x2811:	mov	byte ptr [rsp + 7], 1
0x2816:	xor	ebp, ebp
0x2818:	nop	dword ptr [rax + rax]
0x2820:	add	rbp, 1
0x2824:	test	r14, r14
0x2827:	je	0x29cd


0x2803:	lea	r12, [rip + 0x40d6]
0x280a:	mov	dword ptr [rsp], 3
0x2811:	mov	byte ptr [rsp + 7], 1
0x2816:	xor	ebp, ebp
0x2818:	nop	dword ptr [rax + rax]
0x2820:	add	rbp, 1
0x2824:	test	r14, r14
0x2827:	je	0x29cd


0x29cd:	lea	rax, [rip + 0x4fd0]
0x29d4:	cmp	r12, rax
0x29d7:	je	0x2b58


0x282d:	lea	rsi, [rsp + 0x30]
0x2832:	lea	rdi, [rsp + 0x28]
0x2837:	mov	rcx, r14
0x283a:	mov	edx, 0xa
0x283f:	call	0x1eb0


0x2b58:	mov	rdi, qword ptr [rsp + 0x38]
0x2b5d:	xor	rdi, qword ptr fs:[0x28]
0x2b66:	movzx	eax, byte ptr [rsp + 7]
0x2b6b:	jne	0x2dbe


0x29dd:	mov	rdi, r12
0x29e0:	mov	r15, r12
0x29e3:	call	0x1dc0


0x1eb0:	jmp	qword ptr [rip + 0x208062]


0x2b71:	add	rsp, 0x48
0x2b75:	pop	rbx
0x2b76:	pop	rbp
0x2b77:	pop	r12
0x2b79:	pop	r13
0x2b7b:	pop	r14
0x2b7d:	pop	r15
0x2b7f:	ret	


0x2dbe:	call	0x1dd0




0x1dd0:	jmp	qword ptr [rip + 0x2080d2]




0x332d:	cmp	ebp, eax
0x332f:	je	0x3349


0x3349:	add	rsp, 8
0x334d:	mov	eax, ebx
0x334f:	pop	rbx
0x3350:	pop	rbp
0x3351:	ret	


0x3331:	xor	ebx, ebx
0x3333:	test	eax, eax
0x3335:	js	0x3349


0x3337:	mov	edi, eax
0x3339:	call	0x1e60


0x1e60:	jmp	qword ptr [rip + 0x20808a]




0x3711:	cmp	r15d, 0xa
0x3715:	mov	qword ptr [rsp + 0x58], rax
0x371a:	ja	0x48cf


0x3720:	lea	rcx, [rip + 0x4359]
0x3727:	mov	edx, r15d
0x372a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x372e:	add	rax, rcx
0x3731:	jmp	rax


0x48cf:	call	0x1d10


0x4901:	mov	r13, rax
0x4904:	mov	eax, dword ptr [rax]
0x4906:	test	r15d, r15d
0x4909:	mov	rbx, qword ptr [rip + 0x205750]
0x4910:	mov	dword ptr [rsp + 0x18], eax
0x4914:	js	0x4a81


0x4a81:	call	0x1d10


0x491a:	cmp	dword ptr [rip + 0x205737], r15d
0x4921:	jg	0x4985


0x4923:	cmp	r15d, 0x7fffffff
0x492a:	je	0x4a86


0x4985:	mov	eax, dword ptr [rbp + 4]
0x4988:	shl	r15, 4
0x498c:	sub	rsp, 8
0x4990:	add	rbx, r15
0x4993:	lea	r15, [rbp + 8]
0x4997:	mov	r8d, dword ptr [rbp]
0x499b:	mov	r11, qword ptr [rbx]
0x499e:	mov	r12, qword ptr [rbx + 8]
0x49a2:	mov	rcx, r14
0x49a5:	or	eax, 1
0x49a8:	mov	dword ptr [rsp + 0x24], eax
0x49ac:	push	qword ptr [rbp + 0x30]
0x49af:	mov	r9d, eax
0x49b2:	push	qword ptr [rbp + 0x28]
0x49b5:	push	r15
0x49b7:	mov	rsi, r11
0x49ba:	mov	rdx, qword ptr [rsp + 0x28]
0x49bf:	mov	rdi, r12
0x49c2:	mov	qword ptr [rsp + 0x30], r11
0x49c7:	call	0x36a0


0x4a86:	call	0x5ab0


0x4930:	lea	r12d, [r15 + 1]
0x4934:	lea	rax, [rip + 0x205735]
0x493b:	movsxd	rsi, r12d
0x493e:	shl	rsi, 4
0x4942:	cmp	rbx, rax
0x4945:	je	0x4a60


0x4a60:	xor	edi, edi
0x4a62:	call	0x58c0


0x494b:	mov	rdi, rbx
0x494e:	call	0x58c0


0x4953:	mov	rbx, rax
0x4956:	mov	qword ptr [rip + 0x205703], rax
0x495d:	movsxd	rdi, dword ptr [rip + 0x2056f4]
0x4964:	mov	edx, r12d
0x4967:	xor	esi, esi
0x4969:	sub	edx, edi
0x496b:	shl	rdi, 4
0x496f:	movsxd	rdx, edx
0x4972:	add	rdi, rbx
0x4975:	shl	rdx, 4
0x4979:	call	0x1e40


0x1e40:	jmp	qword ptr [rip + 0x20809a]




0x4a67:	movdqa	xmm0, xmmword ptr [rip + 0x205601]
0x4a6f:	mov	rbx, rax
0x4a72:	mov	qword ptr [rip + 0x2055e7], rax
0x4a79:	movups	xmmword ptr [rax], xmm0
0x4a7c:	jmp	0x495d


0x495d:	movsxd	rdi, dword ptr [rip + 0x2056f4]
0x4964:	mov	edx, r12d
0x4967:	xor	esi, esi
0x4969:	sub	edx, edi
0x496b:	shl	rdi, 4
0x496f:	movsxd	rdx, edx
0x4972:	add	rdi, rbx
0x4975:	shl	rdx, 4
0x4979:	call	0x1e40


0x4a9c:	mov	r12d, dword ptr [rax]
0x4a9f:	mov	rbp, rax
0x4aa2:	lea	rax, [rip + 0x2057d7]
0x4aa9:	test	rbx, rbx
0x4aac:	mov	esi, 0x38
0x4ab1:	cmove	rbx, rax
0x4ab5:	mov	rdi, rbx
0x4ab8:	call	0x5a60


0x4bd2:	mov	r12d, dword ptr [rax]
0x4bd5:	mov	rbp, rax
0x4bd8:	lea	rax, [rbx + 8]
0x4bdc:	sub	rsp, 8
0x4be0:	mov	r9d, dword ptr [rbx + 4]
0x4be4:	push	qword ptr [rbx + 0x30]
0x4be7:	mov	r8d, dword ptr [rbx]
0x4bea:	push	qword ptr [rbx + 0x28]
0x4bed:	mov	rdx, r15
0x4bf0:	push	rax
0x4bf1:	mov	rcx, qword ptr [rsp + 0x28]
0x4bf6:	mov	rsi, r14
0x4bf9:	mov	rdi, r13
0x4bfc:	call	0x36a0


0x4c4f:	test	r12, r12
0x4c52:	mov	r13, rax
0x4c55:	mov	eax, dword ptr [rax]
0x4c57:	sete	bpl
0x4c5b:	or	ebp, dword ptr [rbx + 4]
0x4c5e:	lea	r10, [rbx + 8]
0x4c62:	sub	rsp, 8
0x4c66:	mov	r8d, dword ptr [rbx]
0x4c69:	mov	rcx, r15
0x4c6c:	mov	dword ptr [rsp + 0x14], eax
0x4c70:	push	qword ptr [rbx + 0x30]
0x4c73:	mov	rdx, r14
0x4c76:	push	qword ptr [rbx + 0x28]
0x4c79:	push	r10
0x4c7b:	xor	esi, esi
0x4c7d:	mov	r9d, ebp
0x4c80:	xor	edi, edi
0x4c82:	mov	qword ptr [rsp + 0x40], r10
0x4c87:	call	0x36a0


0x5869:	test	rax, rax
0x586c:	jne	0x5873


0x586e:	test	rbx, rbx
0x5871:	jne	0x5875


0x5873:	pop	rbx
0x5874:	ret	


0x5875:	call	0x5ab0


0x5a19:	mov	rdx, rbx
0x5a1c:	xor	esi, esi
0x5a1e:	mov	rdi, rax
0x5a21:	pop	rbx
0x5a22:	jmp	0x1e40


0x5a74:	add	rsp, 8
0x5a78:	mov	rdx, rbx
0x5a7b:	mov	rsi, rbp
0x5a7e:	pop	rbx
0x5a7f:	pop	rbp
0x5a80:	mov	rdi, rax
0x5a83:	jmp	0x1ed0


0x1ed0:	jmp	qword ptr [rip + 0x208052]




0x29e8:	lea	r12, [r12 + rax + 1]
0x29ed:	jmp	0x2852


0x2852:	call	0x1ff0


0x1ff0:	jmp	qword ptr [rip + 0x207fc2]




0x32c9:	cmp	rax, 1
0x32cd:	jbe	0x32da


0x32da:	pop	rbx
0x32db:	ret	


0x32cf:	cmp	byte ptr [rbx + rax - 1], 0x2f
0x32d4:	lea	rdx, [rax - 1]
0x32d8:	je	0x32e8


0x32e8:	cmp	rdx, 1
0x32ec:	je	0x3300


0x3300:	mov	eax, 1
0x3305:	pop	rbx
0x3306:	ret	


0x32ee:	cmp	byte ptr [rbx + rdx - 1], 0x2f
0x32f3:	lea	rax, [rdx - 1]
0x32f7:	je	0x32e0


0x32e0:	mov	rdx, rax
0x32e3:	nop	dword ptr [rax + rax]
0x32e8:	cmp	rdx, 1
0x32ec:	je	0x3300


0x32f9:	mov	rax, rdx
0x32fc:	pop	rbx
0x32fd:	ret	


0x5a99:	mov	rdi, rbx
0x5a9c:	lea	rsi, [rax + 1]
0x5aa0:	pop	rbx
0x5aa1:	jmp	0x5a60


0x5af9:	test	rax, rax
0x5afc:	je	0x5b03


0x5b03:	call	0x5ab0


0x5afe:	add	rsp, 8
0x5b02:	ret	


0x5c03:	mov	edx, r12d
0x5c06:	mov	rsi, rbp
0x5c09:	mov	edi, eax
0x5c0b:	call	0x1e20


0x1e20:	jmp	qword ptr [rip + 0x2080aa]




0x3381:	mov	ebx, eax
0x3383:	call	0x1d20


0x3388:	cmp	ebx, 1
0x338b:	mov	r14, rax
0x338e:	je	0x34f0


0x34f0:	xor	ebx, ebx
0x34f2:	xor	ebp, ebp
0x34f4:	jmp	0x33d0


0x3394:	cmp	ebx, 2
0x3397:	je	0x34e0


0x33d0:	xor	esi, esi
0x33d2:	xor	edi, edi
0x33d4:	call	0x1e00


0x34e0:	xor	ebx, ebx
0x34e2:	jmp	0x33ba


0x339d:	test	ebx, ebx
0x339f:	je	0x3458


0x1e00:	jmp	qword ptr [rip + 0x2080ba]


0x33ba:	mov	esi, 1
0x33bf:	mov	edi, 1
0x33c4:	call	0x1e00


0x3458:	xor	ebx, ebx
0x345a:	xor	ebp, ebp
0x345c:	xor	r13d, r13d
0x345f:	jmp	0x3410


0x33a5:	mov	esi, 2
0x33aa:	mov	edi, 2
0x33af:	call	0x1e00




0x3410:	mov	rdi, qword ptr [rsp + 8]
0x3415:	mov	rdx, r12
0x3418:	mov	rsi, r15
0x341b:	call	0x1e50


0x1e50:	jmp	qword ptr [rip + 0x208092]




0x5b1c:	test	eax, eax
0x5b1e:	mov	rdi, rbx
0x5b21:	js	0x5b77


0x5b77:	pop	rbx
0x5b78:	pop	rbp
0x5b79:	pop	r12
0x5b7b:	jmp	0x1d80


0x5b23:	call	0x1f10


0x1d80:	jmp	qword ptr [rip + 0x2080fa]




0x5b28:	test	eax, eax
0x5b2a:	jne	0x5b58


0x5b2c:	mov	rdi, rbx
0x5b2f:	call	0x5b90


0x5b58:	mov	rdi, rbx
0x5b5b:	call	0x1ee0


0x5b60:	xor	esi, esi
0x5b62:	mov	edx, 1
0x5b67:	mov	edi, eax
0x5b69:	call	0x1e20


0x5c67:	cmp	rax, -3
0x5c6b:	mov	rbp, rax
0x5c6e:	jbe	0x5c90


0x5c90:	mov	rdx, qword ptr [rsp + 8]
0x5c95:	xor	rdx, qword ptr fs:[0x28]
0x5c9e:	mov	rax, rbp
0x5ca1:	jne	0x5cae


0x5c70:	test	r12, r12
0x5c73:	je	0x5c90


0x5ca3:	add	rsp, 0x18
0x5ca7:	pop	rbx
0x5ca8:	pop	rbp
0x5ca9:	pop	r12
0x5cab:	pop	r13
0x5cad:	ret	


0x5cae:	call	0x1dd0


0x5c75:	xor	edi, edi
0x5c77:	call	0x6060


0x528f:	lea	rdx, [rip + 0x2f8a]
0x5296:	mov	rcx, rax
0x5299:	mov	r8d, 0x7e3
0x529f:	mov	esi, 1
0x52a4:	mov	rdi, rbp
0x52a7:	xor	eax, eax
0x52a9:	call	0x1fc0


0x52ae:	lea	rsi, [rip + 0x2cd3]
0x52b5:	xor	edi, edi
0x52b7:	mov	edx, 5
0x52bc:	call	0x1da0


0x52c1:	mov	rsi, rbp
0x52c4:	mov	rdi, rax
0x52c7:	call	0x1e90


0x1e90:	jmp	qword ptr [rip + 0x208072]




0x2e0d:	mov	rdi, qword ptr [rip + 0x2072cc]
0x2e14:	mov	rdx, rax
0x2e17:	mov	rcx, rbx
0x2e1a:	mov	esi, 1
0x2e1f:	xor	eax, eax
0x2e21:	call	0x1fc0


0x2e26:	mov	edi, ebp
0x2e28:	call	0x1fa0


0x1fa0:	jmp	qword ptr [rip + 0x207fea]




0x2e3b:	mov	rdx, rbx
0x2e3e:	mov	rsi, rax
0x2e41:	mov	edi, 1
0x2e46:	xor	eax, eax
0x2e48:	call	0x1f50


0x1f50:	jmp	qword ptr [rip + 0x208012]




0x57f4:	lea	rdx, [rip + 0x275c]
0x57fb:	mov	rsi, rax
0x57fe:	mov	edi, 1
0x5803:	xor	eax, eax
0x5805:	call	0x1f50


0x5ac7:	mov	edi, dword ptr [rip + 0x20454b]
0x5acd:	lea	rdx, [rip + 0x1ee5]
0x5ad4:	mov	rcx, rax
0x5ad7:	xor	esi, esi
0x5ad9:	xor	eax, eax
0x5adb:	call	0x1f60


0x1f60:	jmp	qword ptr [rip + 0x20800a]




0x5cd7:	mov	rdi, qword ptr [rip + 0x204402]
0x5cde:	lea	rdx, [rip + 0x220b]
0x5ce5:	mov	rcx, rax
0x5ce8:	mov	esi, 1
0x5ced:	xor	eax, eax
0x5cef:	call	0x1fc0


0x5cf4:	mov	edi, dword ptr [rip + 0x20431e]
0x5cfa:	call	0x1fa0


0x5fec:	mov	ebx, dword ptr [rbp]
0x5fef:	mov	rdi, rbp
0x5ff2:	mov	r12, rax
0x5ff5:	call	0x5b10


0x204f:	lea	rsi, [rip + 0x4283]
0x2056:	lea	rdi, [rip + 0x421c]
0x205d:	call	0x1d90


0x1d90:	jmp	qword ptr [rip + 0x2080f2]




0x606b:	mov	rdx, rax
0x606e:	mov	eax, 1
0x6073:	test	rdx, rdx
0x6076:	je	0x6095


0x6095:	add	rsp, 8
0x6099:	ret	


0x6078:	lea	rdi, [rip + 0x36d]
0x607f:	mov	ecx, 2
0x6084:	mov	rsi, rdx
0x6087:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6087:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6089:	seta	cl
0x608c:	sbb	cl, 0
0x608f:	xor	eax, eax
0x6091:	test	cl, cl
0x6093:	jne	0x60a0


0x60a0:	lea	rdi, [rip + 0x21b9]
0x60a7:	mov	ecx, 6
0x60ac:	mov	rsi, rdx
0x60af:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x60af:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x60b1:	seta	al
0x60b4:	sbb	al, 0
0x60b6:	test	al, al
0x60b8:	setne	al
0x60bb:	add	rsp, 8
0x60bf:	ret	


0x5c7c:	test	al, al
0x5c7e:	jne	0x5c90


0x5c80:	movzx	eax, byte ptr [r13]
0x5c85:	mov	ebp, 1
0x5c8a:	mov	dword ptr [rbx], eax
0x5c8c:	nop	dword ptr [rax]
0x5c90:	mov	rdx, qword ptr [rsp + 8]
0x5c95:	xor	rdx, qword ptr fs:[0x28]
0x5c9e:	mov	rax, rbp
0x5ca1:	jne	0x5cae


0x60ce:	test	rax, rax
0x60d1:	je	0x60f0


0x60f0:	lea	rax, [rip + 0x216f]
0x60f7:	add	rsp, 8
0x60fb:	ret	


0x60d3:	cmp	byte ptr [rax], 0
0x60d6:	lea	rdx, [rip + 0x2189]
0x60dd:	cmove	rax, rdx
0x60e1:	add	rsp, 8
0x60e5:	ret	


0x35c0:	movzx	edx, byte ptr [rax]
0x35c3:	and	edx, 0xffffffdf
0x35c6:	cmp	dl, 0x55
0x35c9:	je	0x3640


0x3640:	movzx	edx, byte ptr [rax + 1]
0x3644:	and	edx, 0xffffffdf
0x3647:	cmp	dl, 0x54
0x364a:	jne	0x35d0


0x35cb:	cmp	dl, 0x47
0x35ce:	je	0x35f0


0x364c:	movzx	edx, byte ptr [rax + 2]
0x3650:	and	edx, 0xffffffdf
0x3653:	cmp	dl, 0x46
0x3656:	jne	0x35d0


0x35d0:	lea	rax, [rip + 0x4444]
0x35d7:	lea	rdx, [rip + 0x2cf9]
0x35de:	cmp	ebx, 9
0x35e1:	cmovne	rax, rdx
0x35e5:	add	rsp, 8
0x35e9:	pop	rbx
0x35ea:	pop	rbp
0x35eb:	ret	


0x35f0:	movzx	edx, byte ptr [rax + 1]
0x35f4:	and	edx, 0xffffffdf
0x35f7:	cmp	dl, 0x42
0x35fa:	jne	0x35d0


0x365c:	cmp	byte ptr [rax + 3], 0x2d
0x3660:	jne	0x35d0


0x35fc:	cmp	byte ptr [rax + 2], 0x31
0x3600:	jne	0x35d0


0x3666:	cmp	byte ptr [rax + 4], 0x38
0x366a:	jne	0x35d0


0x3602:	cmp	byte ptr [rax + 3], 0x38
0x3606:	jne	0x35d0


0x3670:	cmp	byte ptr [rax + 5], 0
0x3674:	jne	0x35d0


0x3608:	cmp	byte ptr [rax + 4], 0x30
0x360c:	jne	0x35d0


0x367a:	cmp	byte ptr [rbp], 0x60
0x367e:	lea	rax, [rip + 0x4387]
0x3685:	lea	rdx, [rip + 0x4384]
0x368c:	cmovne	rax, rdx
0x3690:	add	rsp, 8
0x3694:	pop	rbx
0x3695:	pop	rbp
0x3696:	ret	


0x360e:	cmp	byte ptr [rax + 5], 0x33
0x3612:	jne	0x35d0


0x3614:	cmp	byte ptr [rax + 6], 0x30
0x3618:	jne	0x35d0


0x361a:	cmp	byte ptr [rax + 7], 0
0x361e:	jne	0x35d0


0x3620:	cmp	byte ptr [rbp], 0x60
0x3624:	lea	rax, [rip + 0x43e9]
0x362b:	lea	rdx, [rip + 0x43e6]
0x3632:	cmovne	rax, rdx
0x3636:	add	rsp, 8
0x363a:	pop	rbx
0x363b:	pop	rbp
0x363c:	ret	


0x2062:	lea	rdi, [rip + 0x4210]
0x2069:	call	0x1d70


0x1d70:	jmp	qword ptr [rip + 0x208102]




0x5ae0:	call	0x1d10


0x580a:	lea	rsi, [rip + 0x275c]
0x5811:	mov	edx, 5
0x5816:	xor	edi, edi
0x5818:	call	0x1da0


0x581d:	lea	rcx, [rip + 0xf2c]
0x5824:	lea	rdx, [rip + 0xa4a]
0x582b:	mov	rsi, rax
0x582e:	mov	edi, 1
0x5833:	xor	eax, eax
0x5835:	call	0x1f50


0x583a:	mov	rbx, qword ptr [rip + 0x204867]
0x5841:	lea	rsi, [rip + 0x2958]
0x5848:	xor	edi, edi
0x584a:	mov	edx, 5
0x584f:	call	0x1da0


0x5854:	mov	rsi, rbx
0x5857:	mov	rdi, rax
0x585a:	pop	rbx
0x585b:	jmp	0x1e90


0x2e4d:	mov	rbx, qword ptr [rip + 0x207254]
0x2e54:	lea	rsi, [rip + 0x3695]
0x2e5b:	mov	edx, 5
0x2e60:	xor	edi, edi
0x2e62:	call	0x1da0


0x2e67:	mov	rsi, rbx
0x2e6a:	mov	rdi, rax
0x2e6d:	call	0x1e90


0x2e72:	mov	rbx, qword ptr [rip + 0x20722f]
0x2e79:	lea	rsi, [rip + 0x3788]
0x2e80:	mov	edx, 5
0x2e85:	xor	edi, edi
0x2e87:	call	0x1da0


0x2e8c:	mov	rsi, rbx
0x2e8f:	mov	rdi, rax
0x2e92:	call	0x1e90


0x2e97:	mov	rbx, qword ptr [rip + 0x20720a]
0x2e9e:	lea	rsi, [rip + 0x3793]
0x2ea5:	mov	edx, 5
0x2eaa:	xor	edi, edi
0x2eac:	call	0x1da0


0x2eb1:	mov	rsi, rbx
0x2eb4:	mov	rdi, rax
0x2eb7:	call	0x1e90


0x2ebc:	mov	rbx, qword ptr [rip + 0x2071e5]
0x2ec3:	lea	rsi, [rip + 0x37a6]
0x2eca:	mov	edx, 5
0x2ecf:	xor	edi, edi
0x2ed1:	call	0x1da0


0x2ed6:	mov	rsi, rbx
0x2ed9:	mov	rdi, rax
0x2edc:	lea	rbx, [rip + 0x32f4]
0x2ee3:	call	0x1e90


0x2ee8:	lea	rax, [rip + 0x3310]
0x2eef:	lea	rcx, [rip + 0x334a]
0x2ef6:	mov	qword ptr [rsp + 0x60], 0
0x2eff:	mov	qword ptr [rsp + 0x68], 0
0x2f08:	mov	rdx, rsp
0x2f0b:	mov	qword ptr [rsp], rax
0x2f0f:	lea	rax, [rip + 0x32eb]
0x2f16:	mov	qword ptr [rsp + 0x30], rcx
0x2f1b:	lea	rcx, [rip + 0x3328]
0x2f22:	mov	qword ptr [rsp + 8], rax
0x2f27:	lea	rax, [rip + 0x334b]
0x2f2e:	mov	qword ptr [rsp + 0x40], rcx
0x2f33:	lea	rcx, [rip + 0x331a]
0x2f3a:	mov	qword ptr [rsp + 0x10], rax
0x2f3f:	lea	rax, [rip + 0x32cb]
0x2f46:	mov	qword ptr [rsp + 0x50], rcx
0x2f4b:	mov	qword ptr [rsp + 0x18], rax
0x2f50:	lea	rax, [rip + 0x32d0]
0x2f57:	mov	qword ptr [rsp + 0x20], rax
0x2f5c:	lea	rax, [rip + 0x32ce]
0x2f63:	mov	qword ptr [rsp + 0x28], rax
0x2f68:	mov	qword ptr [rsp + 0x38], rax
0x2f6d:	mov	qword ptr [rsp + 0x48], rax
0x2f72:	mov	qword ptr [rsp + 0x58], rax
0x2f77:	nop	word ptr [rax + rax]
0x2f80:	add	rdx, 0x10
0x2f84:	mov	rdi, qword ptr [rdx]
0x2f87:	test	rdi, rdi
0x2f8a:	je	0x2f9f


0x2f9f:	mov	r12, qword ptr [rdx + 8]
0x2fa3:	xor	edi, edi
0x2fa5:	mov	edx, 5
0x2faa:	lea	rsi, [rip + 0x32ad]
0x2fb1:	test	r12, r12
0x2fb4:	je	0x307b


0x2f8c:	mov	ecx, 0xa
0x2f91:	mov	rsi, rbx
0x2f94:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x307b:	call	0x1da0


0x2fba:	call	0x1da0


0x2f94:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2f96:	seta	al
0x2f99:	sbb	al, 0
0x2f9b:	test	al, al
0x2f9d:	jne	0x2f80


0x2f80:	add	rdx, 0x10
0x2f84:	mov	rdi, qword ptr [rdx]
0x2f87:	test	rdi, rdi
0x2f8a:	je	0x2f9f


0x2fbf:	lea	rcx, [rip + 0x378a]
0x2fc6:	lea	rdx, [rip + 0x32a8]
0x2fcd:	mov	rsi, rax
0x2fd0:	mov	edi, 1
0x2fd5:	xor	eax, eax
0x2fd7:	call	0x1f50


0x2fdc:	xor	esi, esi
0x2fde:	mov	edi, 5
0x2fe3:	call	0x1f40


0x2fe8:	test	rax, rax
0x2feb:	je	0x3009


0x3009:	lea	rsi, [rip + 0x3277]
0x3010:	xor	edi, edi
0x3012:	mov	edx, 5
0x3017:	call	0x1da0


0x2fed:	lea	rsi, [rip + 0x328f]
0x2ff4:	mov	edx, 3
0x2ff9:	mov	rdi, rax
0x2ffc:	call	0x1d30


0x1d30:	jmp	qword ptr [rip + 0x208122]




0x301c:	lea	rcx, [rip + 0x31b4]
0x3023:	lea	rdx, [rip + 0x3726]
0x302a:	mov	rsi, rax
0x302d:	mov	edi, 1
0x3032:	xor	eax, eax
0x3034:	call	0x1f50


0x3039:	cmp	r12, rbx
0x303c:	lea	rcx, [rip + 0x31d8]
0x3043:	lea	rbx, [rip + 0x327b]
0x304a:	cmove	rbx, rcx
0x304e:	lea	rsi, [rip + 0x376b]
0x3055:	xor	edi, edi
0x3057:	mov	edx, 5
0x305c:	call	0x1da0


0x3061:	mov	rcx, rbx
0x3064:	mov	rsi, rax
0x3067:	mov	rdx, r12
0x306a:	mov	edi, 1
0x306f:	xor	eax, eax
0x3071:	call	0x1f50


0x3076:	jmp	0x2e26


0x3080:	lea	rcx, [rip + 0x36c9]
0x3087:	lea	rdx, [rip + 0x31e7]
0x308e:	mov	rsi, rax
0x3091:	mov	edi, 1
0x3096:	xor	eax, eax
0x3098:	call	0x1f50


0x309d:	xor	esi, esi
0x309f:	mov	edi, 5
0x30a4:	call	0x1f40


0x30a9:	test	rax, rax
0x30ac:	je	0x30c6


0x30c6:	lea	rsi, [rip + 0x31ba]
0x30cd:	mov	edx, 5
0x30d2:	xor	edi, edi
0x30d4:	lea	r12, [rip + 0x30fc]
0x30db:	lea	rbx, [rip + 0x3139]
0x30e2:	call	0x1da0


0x30ae:	lea	rsi, [rip + 0x31ce]
0x30b5:	mov	edx, 3
0x30ba:	mov	rdi, rax
0x30bd:	call	0x1d30


0x30e7:	lea	rcx, [rip + 0x30e9]
0x30ee:	lea	rdx, [rip + 0x365b]
0x30f5:	mov	rsi, rax
0x30f8:	mov	edi, 1
0x30fd:	xor	eax, eax
0x30ff:	call	0x1f50


0x3104:	jmp	0x304e


0x304e:	lea	rsi, [rip + 0x376b]
0x3055:	xor	edi, edi
0x3057:	mov	edx, 5
0x305c:	call	0x1da0


0x52cc:	cmp	r12, 9
0x52d0:	ja	0x5610


0x52d6:	lea	rdx, [rip + 0x2f0b]
0x52dd:	movsxd	rax, dword ptr [rdx + r12*4]
0x52e1:	add	rax, rdx
0x52e4:	jmp	rax


0x5610:	mov	r10, qword ptr [rbx + 0x40]
0x5614:	mov	r9, qword ptr [rbx + 0x38]
0x5618:	mov	edx, 5
0x561d:	mov	rax, qword ptr [rbx + 0x10]
0x5621:	mov	r8, qword ptr [rbx + 8]
0x5625:	lea	rsi, [rip + 0x2b34]
0x562c:	mov	r13, qword ptr [rbx + 0x30]
0x5630:	mov	r12, qword ptr [rbx + 0x28]
0x5634:	mov	r15, qword ptr [rbx + 0x20]
0x5638:	mov	r14, qword ptr [rbx + 0x18]
0x563c:	mov	qword ptr [rsp + 0x18], r10
0x5641:	mov	qword ptr [rsp + 0x10], r9
0x5646:	mov	qword ptr [rsp], rax
0x564a:	mov	qword ptr [rsp + 8], r8
0x564f:	mov	rbx, qword ptr [rbx]
0x5652:	jmp	0x53e2


0x53e2:	xor	edi, edi
0x53e4:	call	0x1da0


0x53e9:	mov	r10, qword ptr [rsp + 0x18]
0x53ee:	push	r10
0x53f0:	jmp	0x5334


0x5334:	mov	r9, qword ptr [rsp + 0x18]
0x5339:	mov	rdx, rax
0x533c:	mov	rcx, rbx
0x533f:	mov	esi, 1
0x5344:	mov	rdi, rbp
0x5347:	xor	eax, eax
0x5349:	push	r9
0x534b:	push	r13
0x534d:	push	r12
0x534f:	push	r15
0x5351:	push	r14
0x5353:	mov	r9, qword ptr [rsp + 0x30]
0x5358:	mov	r8, qword ptr [rsp + 0x38]
0x535d:	call	0x1fc0


0x5362:	add	rsp, 0x30
0x5366:	add	rsp, 0x28
0x536a:	pop	rbx
0x536b:	pop	rbp
0x536c:	pop	r12
0x536e:	pop	r13
0x5370:	pop	r14
0x5372:	pop	r15
0x5374:	ret	


0x3420:	mov	r12, rax
0x3423:	test	bl, bl
0x3425:	mov	r15d, dword ptr [r14]
0x3428:	jne	0x34d0


0x342e:	test	bpl, bpl
0x3431:	jne	0x34a0


0x34d0:	mov	edi, 2
0x34d5:	call	0x1e60


0x3433:	test	r13b, r13b
0x3436:	jne	0x34af


0x34a0:	mov	edi, 1
0x34a5:	call	0x1e60


0x3438:	test	r12, r12
0x343b:	jne	0x3440


0x34af:	xor	edi, edi
0x34b1:	call	0x1e60


0x343d:	mov	dword ptr [r14], r15d
0x3440:	add	rsp, 0x18
0x3444:	mov	rax, r12
0x3447:	pop	rbx
0x3448:	pop	rbp
0x3449:	pop	r12
0x344b:	pop	r13
0x344d:	pop	r14
0x344f:	pop	r15
0x3451:	ret	


0x3440:	add	rsp, 0x18
0x3444:	mov	rax, r12
0x3447:	pop	rbx
0x3448:	pop	rbp
0x3449:	pop	r12
0x344b:	pop	r13
0x344d:	pop	r14
0x344f:	pop	r15
0x3451:	ret	


0x33b4:	cmp	eax, 2
0x33b7:	setne	bl
0x33ba:	mov	esi, 1
0x33bf:	mov	edi, 1
0x33c4:	call	0x1e00


0x33c9:	cmp	eax, 1
0x33cc:	setne	bpl
0x33d0:	xor	esi, esi
0x33d2:	xor	edi, edi
0x33d4:	call	0x1e00


0x33d9:	test	eax, eax
0x33db:	je	0x3468


0x3468:	xor	r13d, r13d
0x346b:	test	bpl, bpl
0x346e:	je	0x33f8


0x33e1:	xor	edi, edi
0x33e3:	call	0x3310


0x33f8:	test	bl, bl
0x33fa:	je	0x3410


0x3470:	mov	edi, 1
0x3475:	call	0x3310


0x33fc:	mov	edi, 2
0x3401:	call	0x3310


0x3406:	test	al, al
0x3408:	mov	ebx, eax
0x340a:	je	0x34c0


0x34c0:	mov	r15d, dword ptr [r14]
0x34c3:	xor	r12d, r12d
0x34c6:	nop	word ptr cs:[rax + rax]
0x34d0:	mov	edi, 2
0x34d5:	call	0x1e60


0x347a:	test	al, al
0x347c:	mov	ebp, eax
0x347e:	jne	0x33f8


0x3484:	xor	r12d, r12d
0x3487:	test	bl, bl
0x3489:	mov	r15d, dword ptr [r14]
0x348c:	je	0x34a0


0x348e:	mov	edi, 2
0x3493:	call	0x1e60


0x33e8:	test	al, al
0x33ea:	mov	r13d, eax
0x33ed:	je	0x3500


0x3500:	mov	r13d, 1
0x3506:	xor	r12d, r12d
0x3509:	jmp	0x3423


0x33f3:	test	bpl, bpl
0x33f6:	jne	0x3470


0x3423:	test	bl, bl
0x3425:	mov	r15d, dword ptr [r14]
0x3428:	jne	0x34d0


0x5b6e:	cmp	rax, -1
0x5b72:	jne	0x5b2c


0x5b74:	mov	rdi, rbx
0x5b77:	pop	rbx
0x5b78:	pop	rbp
0x5b79:	pop	r12
0x5b7b:	jmp	0x1d80


0x5c10:	cmp	rax, -1
0x5c14:	je	0x5c22


0x5c22:	pop	rbx
0x5c23:	pop	rbp
0x5c24:	pop	r12
0x5c26:	ret	


0x5c16:	and	dword ptr [rbx], 0xffffffef
0x5c19:	mov	qword ptr [rbx + 0x90], rax
0x5c20:	xor	eax, eax
0x5c22:	pop	rbx
0x5c23:	pop	rbp
0x5c24:	pop	r12
0x5c26:	ret	


0x2857:	mov	rcx, qword ptr [rax]
0x285a:	mov	r13, rax
0x285d:	movzx	edx, byte ptr [r15]
0x2861:	test	byte ptr [rcx + rdx*2 + 1], 0x20
0x2866:	jne	0x2a10


0x286c:	test	dl, dl
0x286e:	je	0x2820


0x2a10:	add	r15, 1
0x2a14:	jmp	0x285d


0x2820:	add	rbp, 1
0x2824:	test	r14, r14
0x2827:	je	0x29cd


0x2870:	cmp	dl, 0x23
0x2873:	je	0x2820


0x285d:	movzx	edx, byte ptr [r15]
0x2861:	test	byte ptr [rcx + rdx*2 + 1], 0x20
0x2866:	jne	0x2a10


0x2875:	mov	rbx, r15
0x2878:	nop	dword ptr [rax + rax]
0x2880:	add	rbx, 1
0x2884:	movzx	eax, byte ptr [rbx]
0x2887:	mov	rdx, rax
0x288a:	movzx	eax, word ptr [rcx + rax*2]
0x288e:	shr	ax, 0xd
0x2892:	xor	eax, 1
0x2895:	test	dl, dl
0x2897:	setne	dl
0x289a:	test	dl, al
0x289c:	jne	0x2880


0x289e:	mov	rsi, rbx
0x28a1:	mov	rdi, r15
0x28a4:	sub	rsi, r15
0x28a7:	call	0x5af0


0x2880:	add	rbx, 1
0x2884:	movzx	eax, byte ptr [rbx]
0x2887:	mov	rdx, rax
0x288a:	movzx	eax, word ptr [rcx + rax*2]
0x288e:	shr	ax, 0xd
0x2892:	xor	eax, 1
0x2895:	test	dl, dl
0x2897:	setne	dl
0x289a:	test	dl, al
0x289c:	jne	0x2880


0x28ac:	cmp	byte ptr [rbx], 0
0x28af:	mov	r15, rax
0x28b2:	je	0x2a20


0x2a20:	test	r15, r15
0x2a23:	je	0x2820


0x28b8:	mov	rcx, qword ptr [r13]
0x28bc:	nop	dword ptr [rax]
0x28c0:	add	rbx, 1
0x28c4:	movzx	edx, byte ptr [rbx]
0x28c7:	test	byte ptr [rcx + rdx*2 + 1], 0x20
0x28cc:	mov	rax, rdx
0x28cf:	jne	0x28c0


0x2a29:	mov	rdx, qword ptr [rsp + 8]
0x2a2e:	mov	esi, 3
0x2a33:	xor	edi, edi
0x2a35:	call	0x5050


0x28d1:	test	dl, dl
0x28d3:	je	0x2a20


0x28c0:	add	rbx, 1
0x28c4:	movzx	edx, byte ptr [rbx]
0x28c7:	test	byte ptr [rcx + rdx*2 + 1], 0x20
0x28cc:	mov	rax, rdx
0x28cf:	jne	0x28c0


0x28d9:	cmp	al, 0x23
0x28db:	mov	rdx, rbx
0x28de:	jne	0x28eb


0x28e0:	jmp	0x2a20


0x28eb:	movzx	eax, byte ptr [rdx + 1]
0x28ef:	lea	rsi, [rdx + 1]
0x28f3:	test	al, al
0x28f5:	setne	dil
0x28f9:	cmp	al, 0x23
0x28fb:	setne	al
0x28fe:	test	dil, al
0x2901:	jne	0x28e8


0x2903:	movzx	eax, byte ptr [rsi - 1]
0x2907:	test	byte ptr [rcx + rax*2 + 1], 0x20
0x290c:	jne	0x29f8


0x28e8:	mov	rdx, rsi
0x28eb:	movzx	eax, byte ptr [rdx + 1]
0x28ef:	lea	rsi, [rdx + 1]
0x28f3:	test	al, al
0x28f5:	setne	dil
0x28f9:	cmp	al, 0x23
0x28fb:	setne	al
0x28fe:	test	dil, al
0x2901:	jne	0x28e8


0x2912:	sub	rsi, rbx
0x2915:	mov	rdi, rbx
0x2918:	call	0x5af0


0x29f8:	sub	rdx, 1
0x29fc:	movzx	eax, byte ptr [rdx]
0x29ff:	test	byte ptr [rcx + rax*2 + 1], 0x20
0x2a04:	jne	0x29f8


0x2a06:	lea	rsi, [rdx + 1]
0x2a0a:	jmp	0x2912


0x291d:	test	r15, r15
0x2920:	mov	rbx, rax
0x2923:	je	0x2820


0x2929:	test	rax, rax
0x292c:	je	0x2a29


0x2932:	lea	rsi, [rip + 0x3877]
0x2939:	mov	rdi, r15
0x293c:	call	0x3140


0x2941:	test	eax, eax
0x2943:	je	0x2a80


0x2a80:	mov	rsi, qword ptr [rsp + 0x10]
0x2a85:	xor	edx, edx
0x2a87:	mov	rdi, rbx
0x2a8a:	call	0x1e30


0x2949:	mov	eax, dword ptr [rsp]
0x294c:	cmp	eax, 2
0x294f:	je	0x2ab0


0x1e30:	jmp	qword ptr [rip + 0x2080a2]


0x2ab0:	movzx	eax, byte ptr [r15]
0x2ab4:	mov	dword ptr [rsp], 1
0x2abb:	cmp	al, 0x2e
0x2abd:	jne	0x2965


0x2955:	test	eax, eax
0x2957:	je	0x29b0




0x2ac3:	mov	rax, qword ptr [rip + 0x20764e]
0x2aca:	cmp	qword ptr [rip + 0x20764f], rax
0x2ad1:	je	0x2c16


0x2965:	cmp	al, 0x2a
0x2967:	je	0x2b80


0x29b0:	mov	rdi, r15
0x29b3:	call	0x2000


0x2959:	movzx	eax, byte ptr [r15]
0x295d:	cmp	al, 0x2e
0x295f:	je	0x2ac3


0x2c16:	lea	rdi, [rip + 0x2074e3]
0x2c1d:	mov	esi, 1
0x2c22:	call	0x5e10


0x2ad7:	lea	rdx, [rax + 1]
0x2adb:	mov	rdi, r15
0x2ade:	mov	qword ptr [rip + 0x207633], rdx
0x2ae5:	mov	byte ptr [rax], 0x2a
0x2ae8:	call	0x25b0


0x2b80:	mov	rdi, r15
0x2b83:	call	0x25b0


0x296d:	lea	rsi, [rip + 0x3841]
0x2974:	mov	rdi, r15
0x2977:	call	0x3140


0x297c:	test	eax, eax
0x297e:	je	0x29b0


0x2980:	lea	rsi, [rip + 0x3836]
0x2987:	mov	rdi, r15
0x298a:	call	0x3140


0x298f:	test	eax, eax
0x2991:	je	0x29b0


0x2993:	lea	rsi, [rip + 0x3829]
0x299a:	mov	rdi, r15
0x299d:	call	0x3140


0x29a2:	test	eax, eax
0x29a4:	jne	0x2c33


0x2c33:	xor	r13d, r13d
0x2c36:	mov	qword ptr [rsp + 0x18], rbx
0x2c3b:	lea	rsi, [rip + 0x3567]
0x2c42:	mov	rbx, r13
0x2c45:	jmp	0x2c68


0x2c68:	mov	rdi, r15
0x2c6b:	mov	r13d, ebx
0x2c6e:	call	0x3140


0x2c73:	test	eax, eax
0x2c75:	jne	0x2c50


0x2c77:	mov	rax, qword ptr [rip + 0x20749a]
0x2c7e:	cmp	qword ptr [rip + 0x20749b], rax
0x2c85:	mov	rbx, qword ptr [rsp + 0x18]
0x2c8a:	je	0x2d92


0x2c50:	lea	rax, [rip + 0x206e49]
0x2c57:	add	rbx, 1
0x2c5b:	mov	rsi, qword ptr [rax + rbx*8]
0x2c5f:	test	rsi, rsi
0x2c62:	je	0x2d0e


0x2d92:	lea	rdi, [rip + 0x207367]
0x2d99:	mov	esi, 1
0x2d9e:	call	0x5e10


0x2c90:	lea	rax, [rip + 0x206cc9]
0x2c97:	movsxd	r13, r13d
0x2c9a:	mov	r13, qword ptr [rax + r13*8]
0x2c9e:	mov	rax, qword ptr [rip + 0x207473]
0x2ca5:	lea	rdx, [rax + 1]
0x2ca9:	mov	qword ptr [rip + 0x207468], rdx
0x2cb0:	movzx	edx, byte ptr [r13]
0x2cb5:	mov	byte ptr [rax], dl
0x2cb7:	mov	rax, qword ptr [rip + 0x20745a]
0x2cbe:	cmp	qword ptr [rip + 0x20745b], rax
0x2cc5:	je	0x2da8


0x2d0e:	cmp	dword ptr [rsp], 3
0x2d12:	mov	rbx, qword ptr [rsp + 0x18]
0x2d17:	je	0x29b0


0x2da8:	lea	rdi, [rip + 0x207351]
0x2daf:	mov	esi, 1
0x2db4:	call	0x5e10


0x2ccb:	mov	rax, qword ptr [rip + 0x207446]
0x2cd2:	lea	rdx, [rax + 1]
0x2cd6:	mov	qword ptr [rip + 0x20743b], rdx
0x2cdd:	movzx	edx, byte ptr [r13 + 1]
0x2ce2:	mov	byte ptr [rax], dl
0x2ce4:	mov	rax, qword ptr [rip + 0x20742d]
0x2ceb:	cmp	qword ptr [rip + 0x20742e], rax
0x2cf2:	jne	0x2b9c


0x2d1d:	mov	rdx, qword ptr [rsp + 8]
0x2d22:	test	rdx, rdx
0x2d25:	je	0x2d7a


0x2cf8:	lea	rdi, [rip + 0x207401]
0x2cff:	mov	esi, 1
0x2d04:	call	0x5e10


0x2b9c:	mov	rax, qword ptr [rip + 0x207575]
0x2ba3:	mov	rdi, rbx
0x2ba6:	lea	rdx, [rax + 1]
0x2baa:	mov	qword ptr [rip + 0x207567], rdx
0x2bb1:	mov	byte ptr [rax], 0x3d
0x2bb4:	call	0x25b0


0x2d7a:	lea	rsi, [rip + 0x344b]
0x2d81:	mov	edx, 5
0x2d86:	xor	edi, edi
0x2d88:	call	0x1da0


0x2d27:	mov	esi, 3
0x2d2c:	xor	edi, edi
0x2d2e:	call	0x5050


0x2d8d:	mov	r13, rax
0x2d90:	jmp	0x2d36


0x2d36:	lea	rsi, [rip + 0x376b]
0x2d3d:	xor	edi, edi
0x2d3f:	mov	edx, 5
0x2d44:	call	0x1da0


0x2d49:	mov	r9, r15
0x2d4c:	mov	rdx, rax
0x2d4f:	mov	r8, rbp
0x2d52:	mov	rcx, r13
0x2d55:	xor	esi, esi
0x2d57:	xor	edi, edi
0x2d59:	xor	eax, eax
0x2d5b:	call	0x1f60


0x2d60:	mov	rdi, r15
0x2d63:	mov	byte ptr [rsp + 7], 0
0x2d68:	call	0x2000


0x2bb9:	mov	rax, qword ptr [rip + 0x207558]
0x2bc0:	cmp	qword ptr [rip + 0x207559], rax
0x2bc7:	je	0x2bd5


0x2bd5:	lea	rdi, [rip + 0x207524]
0x2bdc:	mov	esi, 1
0x2be1:	call	0x5e10


0x2bc9:	mov	rax, qword ptr [rip + 0x207548]
0x2bd0:	jmp	0x2b2b


0x2b2b:	lea	rdx, [rax + 1]
0x2b2f:	mov	rdi, r15
0x2b32:	mov	qword ptr [rip + 0x2075df], rdx
0x2b39:	mov	byte ptr [rax], 0x3a
0x2b3c:	call	0x2000


0x2b88:	mov	rax, qword ptr [rip + 0x207589]
0x2b8f:	cmp	qword ptr [rip + 0x20758a], rax
0x2b96:	je	0x2cf8


0x2aed:	mov	rax, qword ptr [rip + 0x207624]
0x2af4:	cmp	qword ptr [rip + 0x207625], rax
0x2afb:	je	0x2bf9


0x2bf9:	lea	rdi, [rip + 0x207500]
0x2c00:	mov	esi, 1
0x2c05:	call	0x5e10


0x2b01:	lea	rdx, [rax + 1]
0x2b05:	mov	rdi, rbx
0x2b08:	mov	qword ptr [rip + 0x207609], rdx
0x2b0f:	mov	byte ptr [rax], 0x3d
0x2b12:	call	0x25b0


0x2b17:	mov	rax, qword ptr [rip + 0x2075fa]
0x2b1e:	cmp	qword ptr [rip + 0x2075fb], rax
0x2b25:	je	0x2bd5


0x2b41:	mov	rdi, rbx
0x2b44:	call	0x2000


0x2b49:	jmp	0x29c0


0x29c0:	add	rbp, 1
0x29c4:	test	r14, r14
0x29c7:	jne	0x282d


0x2d6d:	mov	rdi, rbx
0x2d70:	call	0x2000


0x2d75:	jmp	0x29c0


0x29b8:	mov	rdi, rbx
0x29bb:	call	0x2000


0x4abd:	mov	dword ptr [rbp], r12d
0x4ac1:	pop	rbx
0x4ac2:	pop	rbp
0x4ac3:	pop	r12
0x4ac5:	ret	


0x497e:	mov	dword ptr [rip + 0x2056d3], r12d
0x4985:	mov	eax, dword ptr [rbp + 4]
0x4988:	shl	r15, 4
0x498c:	sub	rsp, 8
0x4990:	add	rbx, r15
0x4993:	lea	r15, [rbp + 8]
0x4997:	mov	r8d, dword ptr [rbp]
0x499b:	mov	r11, qword ptr [rbx]
0x499e:	mov	r12, qword ptr [rbx + 8]
0x49a2:	mov	rcx, r14
0x49a5:	or	eax, 1
0x49a8:	mov	dword ptr [rsp + 0x24], eax
0x49ac:	push	qword ptr [rbp + 0x30]
0x49af:	mov	r9d, eax
0x49b2:	push	qword ptr [rbp + 0x28]
0x49b5:	push	r15
0x49b7:	mov	rsi, r11
0x49ba:	mov	rdx, qword ptr [rsp + 0x28]
0x49bf:	mov	rdi, r12
0x49c2:	mov	qword ptr [rsp + 0x30], r11
0x49c7:	call	0x36a0


0x34aa:	test	r13b, r13b
0x34ad:	je	0x3438


0x34da:	jmp	0x342e


0x34b6:	jmp	0x3438


0x333e:	call	0x1d20


0x3343:	mov	dword ptr [rax], 9
0x3349:	add	rsp, 8
0x334d:	mov	eax, ebx
0x334f:	pop	rbx
0x3350:	pop	rbp
0x3351:	ret	


0x2844:	test	rax, rax
0x2847:	jle	0x2b4e


0x2b4e:	mov	rdi, qword ptr [rsp + 0x28]
0x2b53:	call	0x2000


0x284d:	mov	r15, qword ptr [rsp + 0x28]
0x2852:	call	0x1ff0


0x5bc7:	mov	rdi, rbx
0x5bca:	pop	rbx
0x5bcb:	jmp	0x1ef0


0x57a6:	mov	rax, qword ptr [rsp + 0x78]
0x57ab:	xor	rax, qword ptr fs:[0x28]
0x57b4:	jne	0x57c0


0x57b6:	add	rsp, 0xb8
0x57bd:	pop	rbx
0x57be:	pop	rbp
0x57bf:	ret	


0x57c0:	call	0x1dd0


0x56d0:	mov	rax, qword ptr [rsp + 0x58]
0x56d5:	xor	rax, qword ptr fs:[0x28]
0x56de:	jne	0x56e5


0x56e0:	add	rsp, 0x68
0x56e4:	ret	


0x56e5:	call	0x1dd0


0x2a8f:	test	eax, eax
0x2a91:	je	0x2aa4


0x2aa4:	mov	dword ptr [rsp], 2
0x2aab:	jmp	0x29b0


0x2a93:	cmp	dword ptr [rsp], 2
0x2a97:	mov	dword ptr [rsp], 0
0x2a9e:	jne	0x29b0


0x30c2:	test	eax, eax
0x30c4:	jne	0x3109


0x3109:	lea	r12, [rip + 0x30c7]
0x3110:	mov	r13, qword ptr [rip + 0x206f91]
0x3117:	lea	rsi, [rip + 0x365a]
0x311e:	xor	edi, edi
0x3120:	mov	edx, 5
0x3125:	call	0x1da0


0x312a:	mov	rsi, r13
0x312d:	mov	rdi, rax
0x3130:	call	0x1e90


0x3135:	jmp	0x3009


0x3001:	test	eax, eax
0x3003:	jne	0x3110


0x3110:	mov	r13, qword ptr [rip + 0x206f91]
0x3117:	lea	rsi, [rip + 0x365a]
0x311e:	xor	edi, edi
0x3120:	mov	edx, 5
0x3125:	call	0x1da0


0x206e:	lea	rdi, [rip + 0x113b]
0x2075:	call	0x6180


0x207a:	lea	rcx, [rip + 0x2077df]
0x2081:	lea	rdx, [rip + 0x4278]
0x2088:	xor	r8d, r8d
0x208b:	mov	rsi, rbx
0x208e:	mov	edi, ebp
0x2090:	call	0x1de0


0x1de0:	jmp	qword ptr [rip + 0x2080ca]




0x5b34:	test	eax, eax
0x5b36:	je	0x5b74


0x5b38:	call	0x1d20


0x5b3d:	mov	r12d, dword ptr [rax]
0x5b40:	mov	rdi, rbx
0x5b43:	mov	rbp, rax
0x5b46:	call	0x1d80


0x5b4b:	test	r12d, r12d
0x5b4e:	jne	0x5b80


0x5b50:	pop	rbx
0x5b51:	pop	rbp
0x5b52:	pop	r12
0x5b54:	ret	


0x5b80:	mov	dword ptr [rbp], r12d
0x5b84:	mov	eax, 0xffffffff
0x5b89:	jmp	0x5b50


0x5ffa:	and	ebx, 0x20
0x5ffd:	test	ebx, ebx
0x5fff:	jne	0x6018


0x6001:	test	eax, eax
0x6003:	je	0x600f


0x6018:	test	eax, eax
0x601a:	jne	0x6038


0x600f:	pop	rbx
0x6010:	pop	rbp
0x6011:	pop	r12
0x6013:	ret	


0x6005:	test	r12, r12
0x6008:	mov	eax, 0xffffffff
0x600d:	je	0x6048


0x601c:	call	0x1d20


0x6038:	pop	rbx
0x6039:	mov	eax, 0xffffffff
0x603e:	pop	rbp
0x603f:	pop	r12
0x6041:	ret	


0x6048:	call	0x1d20


0x604d:	cmp	dword ptr [rax], 9
0x6050:	pop	rbx
0x6051:	pop	rbp
0x6052:	pop	r12
0x6054:	setne	al
0x6057:	movzx	eax, al
0x605a:	neg	eax
0x605c:	ret	


0x6021:	mov	dword ptr [rax], 0
0x6027:	mov	eax, 0xffffffff
0x602c:	pop	rbx
0x602d:	pop	rbp
0x602e:	pop	r12
0x6030:	ret	


0x31c2:	test	eax, eax
0x31c4:	je	0x31dc


0x31dc:	mov	rdi, qword ptr [rip + 0x206efd]
0x31e3:	call	0x5fe0


0x31c6:	call	0x1d20


0x31cb:	cmp	byte ptr [rip + 0x206f86], 0
0x31d2:	mov	rbx, rax
0x31d5:	je	0x31f3


0x31f3:	lea	rsi, [rip + 0x47af]
0x31fa:	xor	edi, edi
0x31fc:	mov	edx, 5
0x3201:	call	0x1da0


0x31d7:	cmp	dword ptr [rax], 0x20
0x31da:	jne	0x31f3


0x3206:	mov	rdi, qword ptr [rip + 0x206f53]
0x320d:	mov	rbp, rax
0x3210:	test	rdi, rdi
0x3213:	je	0x323d


0x323d:	mov	esi, dword ptr [rbx]
0x323f:	lea	rdx, [rip + 0x4773]
0x3246:	mov	rcx, rax
0x3249:	xor	edi, edi
0x324b:	xor	eax, eax
0x324d:	call	0x1f60


0x3215:	call	0x5020


0x3252:	jmp	0x3232


0x3232:	mov	edi, dword ptr [rip + 0x206de0]
0x3238:	call	0x1d40


0x1d40:	jmp	qword ptr [rip + 0x20811a]




0x31e8:	test	eax, eax
0x31ea:	jne	0x3232


0x31ec:	add	rsp, 8
0x31f0:	pop	rbx
0x31f1:	pop	rbp
0x31f2:	ret	


0x2095:	cmp	eax, -1
0x2098:	je	0x211b


0x211b:	movsxd	rax, dword ptr [rip + 0x207f96]
0x2122:	sub	ebp, eax
0x2124:	cmp	r13d, 2
0x2128:	lea	rbx, [rbx + rax*8]
0x212c:	je	0x2137


0x209e:	cmp	eax, 0x62
0x20a1:	je	0x2100


0x2137:	mov	eax, r12d
0x213a:	xor	eax, 1
0x213d:	movzx	eax, al
0x2140:	cmp	eax, ebp
0x2142:	jl	0x23af


0x212e:	test	r12b, r12b
0x2131:	jne	0x2416


0x2100:	xor	r13d, r13d
0x2103:	jmp	0x207a


0x20a3:	jle	0x20c0


0x23af:	test	r12b, r12b
0x23b2:	jne	0x2439


0x2148:	test	r12b, r12b
0x214b:	je	0x2197


0x2416:	lea	rsi, [rip + 0x43db]
0x241d:	xor	edi, edi
0x241f:	mov	edx, 5
0x2424:	call	0x1da0


0x20c0:	cmp	eax, 0xffffff7d
0x20c5:	jne	0x23a1


0x20a5:	cmp	eax, 0x63
0x20a8:	je	0x2110


0x23b8:	mov	rdi, qword ptr [rbx + 8]
0x23bc:	call	0x5220


0x2439:	mov	rdi, qword ptr [rbx]
0x243c:	call	0x5220


0x2197:	cmp	r13d, 2
0x219b:	je	0x2301


0x214d:	lea	rbx, [rip + 0x478c]
0x2154:	or	rbp, 0xffffffffffffffff
0x2158:	mov	r13, rbx
0x215b:	jmp	0x2178


0x20cb:	mov	rdi, qword ptr [rip + 0x207fd6]
0x20d2:	mov	rcx, qword ptr [rip + 0x207f37]
0x20d9:	lea	r8, [rip + 0x4211]
0x20e0:	lea	rdx, [rip + 0x418e]
0x20e7:	lea	rsi, [rip + 0x40e9]
0x20ee:	xor	r9d, r9d
0x20f1:	xor	eax, eax
0x20f3:	call	0x5700


0x23a1:	cmp	eax, 0xffffff7e
0x23a6:	jne	0x23e8


0x2110:	mov	r13d, 1
0x2116:	jmp	0x207a


0x20aa:	cmp	eax, 0x70
0x20ad:	jne	0x23e8


0x2301:	lea	rdi, [rip + 0x3ffc]
0x2308:	call	0x1d00


0x21a1:	mov	r8, qword ptr [rip + 0x207e18]
0x21a8:	mov	rcx, qword ptr [rip + 0x207e31]
0x21af:	lea	rdi, [rip + 0x207f4a]
0x21b6:	xor	edx, edx
0x21b8:	xor	esi, esi
0x21ba:	call	0x5dd0


0x2178:	mov	rax, r13
0x217b:	sub	rax, rbx
0x217e:	cmp	rax, 0x10c3
0x2184:	jbe	0x215d


0x23a8:	xor	edi, edi
0x23aa:	call	0x2dd0


0x23e8:	mov	edi, 1
0x23ed:	call	0x2dd0


0x20b3:	mov	r12d, 1
0x20b9:	jmp	0x207a


0x215d:	mov	rdi, r13
0x2160:	call	0x1d60


0x2186:	xor	r12d, 1
0x218a:	pop	rbx
0x218b:	movzx	eax, r12b
0x218f:	pop	rbp
0x2190:	pop	r12
0x2192:	pop	r13
0x2194:	pop	r14
0x2196:	ret	


0x1d60:	jmp	qword ptr [rip + 0x20810a]




0x230d:	test	rax, rax
0x2310:	je	0x23f2


0x23f2:	lea	rsi, [rip + 0x4467]
0x23f9:	mov	edx, 5
0x23fe:	xor	edi, edi
0x2400:	call	0x1da0


0x2316:	cmp	byte ptr [rax], 0
0x2319:	je	0x23f2


0x231f:	mov	rdi, rax
0x2322:	mov	r13d, 1
0x2328:	call	0x3260


0x232d:	lea	rsi, [rip + 0x3fd7]
0x2334:	mov	rdi, rax
0x2337:	mov	r14, rax
0x233a:	call	0x1ec0


0x1ec0:	jmp	qword ptr [rip + 0x20805a]




0x20f8:	xor	edi, edi
0x20fa:	call	0x1fa0


0x2405:	xor	esi, esi
0x2407:	mov	rdx, rax
0x240a:	mov	edi, 1
0x240f:	xor	eax, eax
0x2411:	call	0x1f60


0x2429:	xor	esi, esi
0x242b:	mov	rdx, rax
0x242e:	xor	edi, edi
0x2430:	xor	eax, eax
0x2432:	call	0x1f60


0x2437:	jmp	0x23e8


0x233f:	test	eax, eax
0x2341:	je	0x21a1


0x2347:	lea	rsi, [rip + 0x3fbc]
0x234e:	mov	rdi, r14
0x2351:	xor	r13d, r13d
0x2354:	call	0x1ec0


0x2359:	test	eax, eax
0x235b:	sete	r13b
0x235f:	jmp	0x21a1


0x2165:	xor	eax, eax
0x2167:	mov	rdi, r13
0x216a:	mov	rcx, rbp
0x216d:	repne scasb	al, byte ptr [rdi]


0x216f:	mov	rax, rcx
0x2172:	not	rax
0x2175:	add	r13, rax
0x2178:	mov	rax, r13
0x217b:	sub	rax, rbx
0x217e:	cmp	rax, 0x10c3
0x2184:	jbe	0x215d


0x216d:	repne scasb	al, byte ptr [rdi]


0x21bf:	test	ebp, ebp
0x21c1:	je	0x22f0


0x22f0:	xor	esi, esi
0x22f2:	xor	edi, edi
0x22f4:	call	0x27a0


0x21c7:	mov	rbx, qword ptr [rbx]
0x21ca:	lea	rsi, [rip + 0x5839]
0x21d1:	mov	rdi, rbx
0x21d4:	call	0x1ec0


0x21d9:	test	eax, eax
0x21db:	je	0x21fc


0x21fc:	mov	rdi, qword ptr [rip + 0x207ead]
0x2203:	mov	rsi, rbx
0x2206:	call	0x27a0


0x21dd:	mov	rdx, qword ptr [rip + 0x207ecc]
0x21e4:	lea	rsi, [rip + 0x57c8]
0x21eb:	mov	rdi, rbx
0x21ee:	call	0x3360


0x21f3:	test	rax, rax
0x21f6:	je	0x2364


0x2364:	mov	rdx, rbx
0x2367:	xor	edi, edi
0x2369:	mov	esi, 3
0x236e:	call	0x5050


0x220b:	mov	rdi, qword ptr [rip + 0x207e9e]
0x2212:	mov	ebp, eax
0x2214:	call	0x5b10


0x2219:	test	eax, eax
0x221b:	jne	0x2364


0x2221:	mov	r12d, ebp
0x2224:	test	r12b, r12b
0x2227:	je	0x2186


0x222d:	mov	rax, qword ptr [rip + 0x207ee4]
0x2234:	mov	rbp, qword ptr [rip + 0x207ed5]
0x223b:	mov	rbx, rax
0x223e:	sub	rbx, rbp
0x2241:	cmp	rax, rbp
0x2244:	je	0x2395


0x2395:	or	byte ptr [rip + 0x207db4], 2
0x239c:	jmp	0x224a


0x224a:	mov	rdx, qword ptr [rip + 0x207edf]
0x2251:	mov	rcx, qword ptr [rip + 0x207ec8]
0x2258:	add	rax, rdx
0x225b:	not	rdx
0x225e:	mov	rsi, rcx
0x2261:	and	rax, rdx
0x2264:	mov	rdx, qword ptr [rip + 0x207e9d]
0x226b:	mov	qword ptr [rip + 0x207ea6], rax
0x2272:	sub	rsi, rdx
0x2275:	sub	rax, rdx
0x2278:	cmp	rax, rsi
0x227b:	jbe	0x2284


0x2284:	mov	rax, qword ptr [rip + 0x207e8d]
0x228b:	lea	r14, [rip + 0x4031]
0x2292:	test	r13d, r13d
0x2295:	mov	rsi, qword ptr [rip + 0x207e0c]
0x229c:	lea	rdi, [rip + 0x4023]
0x22a3:	mov	qword ptr [rip + 0x207e66], rax
0x22aa:	lea	rax, [rip + 0x3ff1]
0x22b1:	cmove	r14, rax
0x22b5:	lea	rax, [rip + 0x3ffb]
0x22bc:	cmove	rdi, rax
0x22c0:	call	0x1e90


0x227d:	mov	qword ptr [rip + 0x207e94], rcx
0x2284:	mov	rax, qword ptr [rip + 0x207e8d]
0x228b:	lea	r14, [rip + 0x4031]
0x2292:	test	r13d, r13d
0x2295:	mov	rsi, qword ptr [rip + 0x207e0c]
0x229c:	lea	rdi, [rip + 0x4023]
0x22a3:	mov	qword ptr [rip + 0x207e66], rax
0x22aa:	lea	rax, [rip + 0x3ff1]
0x22b1:	cmove	r14, rax
0x22b5:	lea	rax, [rip + 0x3ffb]
0x22bc:	cmove	rdi, rax
0x22c0:	call	0x1e90


0x22c5:	mov	rcx, qword ptr [rip + 0x207ddc]
0x22cc:	mov	rdi, rbp
0x22cf:	mov	rdx, rbx
0x22d2:	mov	esi, 1
0x22d7:	call	0x1f20


0x1f20:	jmp	qword ptr [rip + 0x20802a]




0x22f9:	mov	r12d, eax
0x22fc:	jmp	0x2224


0x2224:	test	r12b, r12b
0x2227:	je	0x2186


0x22dc:	mov	rsi, qword ptr [rip + 0x207dc5]
0x22e3:	mov	rdi, r14
0x22e6:	call	0x1e90


0x22eb:	jmp	0x2186


0x2441:	lea	rsi, [rip + 0x3ec7]
0x2448:	mov	rbx, rax
0x244b:	xor	edi, edi
0x244d:	mov	edx, 5
0x2452:	call	0x1da0


0x2457:	mov	rcx, rbx
0x245a:	mov	rdx, rax
0x245d:	xor	esi, esi
0x245f:	xor	edi, edi
0x2461:	xor	eax, eax
0x2463:	call	0x1f60


0x2468:	lea	rsi, [rip + 0x4431]
0x246f:	xor	edi, edi
0x2471:	mov	edx, 5
0x2476:	call	0x1da0


0x247b:	mov	rdi, qword ptr [rip + 0x207c5e]
0x2482:	lea	rdx, [rip + 0x5a67]
0x2489:	mov	rcx, rax
0x248c:	mov	esi, 1
0x2491:	xor	eax, eax
0x2493:	call	0x1fc0


0x2498:	jmp	0x23e8


0x23c1:	lea	rsi, [rip + 0x3f47]
0x23c8:	mov	rbx, rax
0x23cb:	mov	edx, 5
0x23d0:	xor	edi, edi
0x23d2:	call	0x1da0


0x23d7:	mov	rcx, rbx
0x23da:	mov	rdx, rax
0x23dd:	xor	esi, esi
0x23df:	xor	edi, edi
0x23e1:	xor	eax, eax
0x23e3:	call	0x1f60


0x321a:	mov	esi, dword ptr [rbx]
0x321c:	lea	rdx, [rip + 0x4792]
0x3223:	mov	rcx, rax
0x3226:	mov	r8, rbp
0x3229:	xor	edi, edi
0x322b:	xor	eax, eax
0x322d:	call	0x1f60


0x2373:	mov	rbx, rax
0x2376:	call	0x1d20


0x237b:	mov	esi, dword ptr [rax]
0x237d:	lea	rdx, [rip + 0x5635]
0x2384:	mov	rcx, rbx
0x2387:	xor	edi, edi
0x2389:	xor	eax, eax
0x238b:	call	0x1f60


0x2390:	jmp	0x2186


0x2d33:	mov	r13, rax
0x2d36:	lea	rsi, [rip + 0x376b]
0x2d3d:	xor	edi, edi
0x2d3f:	mov	edx, 5
0x2d44:	call	0x1da0


0x2a3a:	lea	rsi, [rip + 0x3a37]
0x2a41:	mov	rbx, rax
0x2a44:	mov	edx, 5
0x2a49:	xor	edi, edi
0x2a4b:	call	0x1da0


0x2a50:	mov	r8, rbp
0x2a53:	mov	rdx, rax
0x2a56:	mov	rcx, rbx
0x2a59:	xor	esi, esi
0x2a5b:	xor	edi, edi
0x2a5d:	xor	eax, eax
0x2a5f:	call	0x1f60


0x2a64:	mov	rdi, r15
0x2a67:	call	0x2000


0x2a6c:	mov	byte ptr [rsp + 7], 0
0x2a71:	jmp	0x2820


0x49cc:	add	rsp, 0x20
0x49d0:	mov	r11, qword ptr [rsp + 0x10]
0x49d5:	cmp	r11, rax
0x49d8:	ja	0x4a41


0x49da:	lea	rsi, [rax + 1]
0x49de:	lea	rax, [rip + 0x20579b]
0x49e5:	cmp	r12, rax
0x49e8:	mov	qword ptr [rbx], rsi
0x49eb:	je	0x49ff


0x4a41:	mov	eax, dword ptr [rsp + 0x18]
0x4a45:	mov	dword ptr [r13], eax
0x4a49:	add	rsp, 0x28
0x4a4d:	mov	rax, r12
0x4a50:	pop	rbx
0x4a51:	pop	rbp
0x4a52:	pop	r12
0x4a54:	pop	r13
0x4a56:	pop	r14
0x4a58:	pop	r15
0x4a5a:	ret	


0x49ff:	mov	rdi, rsi
0x4a02:	mov	qword ptr [rsp + 0x10], rsi
0x4a07:	call	0x5860


0x49ed:	mov	rdi, r12
0x49f0:	mov	qword ptr [rsp + 0x10], rsi
0x49f5:	call	0x2000


0x49fa:	mov	rsi, qword ptr [rsp + 0x10]
0x49ff:	mov	rdi, rsi
0x4a02:	mov	qword ptr [rsp + 0x10], rsi
0x4a07:	call	0x5860


0x4a0c:	sub	rsp, 8
0x4a10:	mov	qword ptr [rbx + 8], rax
0x4a14:	mov	r8d, dword ptr [rbp]
0x4a18:	push	qword ptr [rbp + 0x30]
0x4a1b:	push	qword ptr [rbp + 0x28]
0x4a1e:	mov	rcx, r14
0x4a21:	push	r15
0x4a23:	mov	r9d, dword ptr [rsp + 0x3c]
0x4a28:	mov	rdi, rax
0x4a2b:	mov	rdx, qword ptr [rsp + 0x28]
0x4a30:	mov	rsi, qword ptr [rsp + 0x30]
0x4a35:	mov	r12, rax
0x4a38:	call	0x36a0


0x5152:	mov	rdi, qword ptr [rsp + 0x38]
0x5157:	xor	rdi, qword ptr fs:[0x28]
0x5160:	jne	0x516c


0x5162:	add	rsp, 0x48
0x5166:	ret	


0x516c:	call	0x1dd0


0x4e9f:	mov	rcx, qword ptr [rsp + 0x38]
0x4ea4:	xor	rcx, qword ptr fs:[0x28]
0x4ead:	jne	0x4eb9


0x4eaf:	add	rsp, 0x48
0x4eb3:	ret	


0x4eb9:	call	0x1dd0


0x4f2b:	mov	rdx, qword ptr [rsp + 0x38]
0x4f30:	xor	rdx, qword ptr fs:[0x28]
0x4f39:	jne	0x4f45


0x4f3b:	add	rsp, 0x48
0x4f3f:	ret	


0x4f45:	call	0x1dd0


0x50bf:	mov	rcx, qword ptr [rsp + 0x38]
0x50c4:	xor	rcx, qword ptr fs:[0x28]
0x50cd:	jne	0x50d9


0x50cf:	add	rsp, 0x48
0x50d3:	ret	


0x50d9:	call	0x1dd0


0x4fee:	mov	rsi, qword ptr [rsp + 0x38]
0x4ff3:	xor	rsi, qword ptr fs:[0x28]
0x4ffc:	jne	0x5003


0x4ffe:	add	rsp, 0x48
0x5002:	ret	


0x5003:	call	0x1dd0


0x4a3d:	add	rsp, 0x20
0x4a41:	mov	eax, dword ptr [rsp + 0x18]
0x4a45:	mov	dword ptr [r13], eax
0x4a49:	add	rsp, 0x28
0x4a4d:	mov	rax, r12
0x4a50:	pop	rbx
0x4a51:	pop	rbp
0x4a52:	pop	r12
0x4a54:	pop	r13
0x4a56:	pop	r14
0x4a58:	pop	r15
0x4a5a:	ret	


0x4c8c:	lea	rsi, [rax + 1]
0x4c90:	mov	qword ptr [rsp + 0x48], rax
0x4c95:	add	rsp, 0x20
0x4c99:	mov	rdi, rsi
0x4c9c:	mov	qword ptr [rsp + 0x18], rsi
0x4ca1:	call	0x5860


0x4ca6:	mov	qword ptr [rsp + 0x10], rax
0x4cab:	sub	rsp, 8
0x4caf:	push	qword ptr [rbx + 0x30]
0x4cb2:	push	qword ptr [rbx + 0x28]
0x4cb5:	mov	r10, qword ptr [rsp + 0x38]
0x4cba:	mov	r9d, ebp
0x4cbd:	mov	r8d, dword ptr [rbx]
0x4cc0:	mov	rcx, r15
0x4cc3:	mov	rdx, r14
0x4cc6:	mov	rdi, rax
0x4cc9:	push	r10
0x4ccb:	mov	rsi, qword ptr [rsp + 0x38]
0x4cd0:	call	0x36a0


0x4cd5:	mov	eax, dword ptr [rsp + 0x2c]
0x4cd9:	add	rsp, 0x20
0x4cdd:	test	r12, r12
0x4ce0:	mov	dword ptr [r13], eax
0x4ce4:	je	0x4cef


0x4cef:	mov	rax, qword ptr [rsp + 0x10]
0x4cf4:	add	rsp, 0x38
0x4cf8:	pop	rbx
0x4cf9:	pop	rbp
0x4cfa:	pop	r12
0x4cfc:	pop	r13
0x4cfe:	pop	r14
0x4d00:	pop	r15
0x4d02:	ret	


0x4ce6:	mov	r11, qword ptr [rsp + 0x28]
0x4ceb:	mov	qword ptr [r12], r11
0x4cef:	mov	rax, qword ptr [rsp + 0x10]
0x4cf4:	add	rsp, 0x38
0x4cf8:	pop	rbx
0x4cf9:	pop	rbp
0x4cfa:	pop	r12
0x4cfc:	pop	r13
0x4cfe:	pop	r14
0x4d00:	pop	r15
0x4d02:	ret	


0x4c01:	mov	dword ptr [rbp], r12d
0x4c05:	add	rsp, 0x38
0x4c09:	pop	rbx
0x4c0a:	pop	rbp
0x4c0b:	pop	r12
0x4c0d:	pop	r13
0x4c0f:	pop	r14
0x4c11:	pop	r15
0x4c13:	ret	


0x2c0a:	mov	rax, qword ptr [rip + 0x207507]
0x2c11:	jmp	0x2b01


0x2be6:	jmp	0x2bc9


0x2d09:	jmp	0x2b9c


0x2db9:	jmp	0x2ccb


0x2da3:	jmp	0x2c90


0x2c27:	mov	rax, qword ptr [rip + 0x2074ea]
0x2c2e:	jmp	0x2ad7


0x2745:	mov	rax, qword ptr [rip + 0x2079cc]
0x274c:	jmp	0x26e5


0x275d:	mov	rax, qword ptr [rip + 0x2079b4]
0x2764:	jmp	0x26c7


0x2725:	mov	rax, qword ptr [rip + 0x2079ec]
0x272c:	jmp	0x26a5


0x267e:	mov	rax, qword ptr [rip + 0x207a93]
0x2685:	jmp	0x2625


0x2785:	mov	rax, qword ptr [rip + 0x20798c]
0x278c:	jmp	0x25fc


0x5f71:	or	byte ptr [rbx + 0x50], 2
0x5f75:	test	r12, r12
0x5f78:	mov	rsi, r12
0x5f7b:	jne	0x5f58


0x5f58:	cmp	rsi, rbp
0x5f5b:	jae	0x5f65


0x5d6e:	test	rax, rax
0x5d71:	mov	qword ptr [rbx + 8], rax
0x5d75:	je	0x5dbd


0x5dbd:	call	qword ptr [rip + 0x2042bd]


0x5d77:	lea	rdx, [rax + r12 + 0x10]
0x5d7c:	neg	rbp
0x5d7f:	and	rbp, rdx
0x5d82:	mov	rdx, qword ptr [rbx]
0x5d85:	mov	qword ptr [rbx + 0x10], rbp
0x5d89:	mov	qword ptr [rbx + 0x18], rbp
0x5d8d:	add	rdx, rax
0x5d90:	mov	qword ptr [rax], rdx
0x5d93:	mov	qword ptr [rbx + 0x20], rdx
0x5d97:	mov	qword ptr [rax + 8], 0
0x5d9f:	mov	eax, 1
0x5da4:	and	byte ptr [rbx + 0x50], 0xf9
0x5da8:	pop	rbx
0x5da9:	pop	rbp
0x5daa:	pop	r12
0x5dac:	ret	


0x5e6d:	test	rax, rax
0x5e70:	mov	r14, rax
0x5e73:	je	0x5ef5


0x5e79:	lea	rsi, [rax + r12]
0x5e7d:	mov	qword ptr [r13 + 8], rax
0x5e81:	mov	qword ptr [rax + 8], rbp
0x5e85:	mov	rdx, rbx
0x5e88:	mov	qword ptr [r13 + 0x20], rsi
0x5e8c:	mov	qword ptr [rax], rsi
0x5e8f:	mov	rax, qword ptr [r13 + 0x30]
0x5e93:	mov	rsi, qword ptr [r13 + 0x10]
0x5e97:	lea	r12, [r14 + rax + 0x10]
0x5e9c:	not	rax
0x5e9f:	and	r12, rax
0x5ea2:	mov	rdi, r12
0x5ea5:	call	0x1ed0


0x5eaa:	test	byte ptr [r13 + 0x50], 2
0x5eaf:	jne	0x5ec6


0x5eb1:	mov	rax, qword ptr [r13 + 0x30]
0x5eb5:	lea	rdx, [rbp + rax + 0x10]
0x5eba:	not	rax
0x5ebd:	and	rax, rdx
0x5ec0:	cmp	qword ptr [r13 + 0x10], rax
0x5ec4:	je	0x5ee0


0x5ec6:	and	byte ptr [r13 + 0x50], 0xfd
0x5ecb:	add	rbx, r12
0x5ece:	mov	qword ptr [r13 + 0x10], r12
0x5ed2:	mov	qword ptr [r13 + 0x18], rbx
0x5ed6:	pop	rbx
0x5ed7:	pop	rbp
0x5ed8:	pop	r12
0x5eda:	pop	r13
0x5edc:	pop	r14
0x5ede:	ret	


0x5ee0:	mov	rax, qword ptr [rbp + 8]
0x5ee4:	mov	rsi, rbp
0x5ee7:	mov	rdi, r13
0x5eea:	mov	qword ptr [r14 + 8], rax
0x5eee:	call	0x5d20


0x5ef3:	jmp	0x5ec6


0x5dc3:	nop	dword ptr [rax]
0x5dc6:	nop	word ptr cs:[rax + rax]


0x614d:	add	rbx, 1
0x6151:	cmp	rbp, rbx
0x6154:	jne	0x6140


0x6140:	mov	rdx, r15
0x6143:	mov	rsi, r14
0x6146:	mov	edi, r13d
0x6149:	call	qword ptr [r12 + rbx*8]


0x5efb:	nop	dword ptr [rax + rax]






0x5480:	mov	r13, qword ptr [rbx + 0x10]
0x5484:	mov	r12, qword ptr [rbx + 8]
0x5488:	lea	rsi, [rip + 0x2a97]
0x548f:	mov	rbx, qword ptr [rbx]
0x5492:	mov	edx, 5
0x5497:	xor	edi, edi
0x5499:	call	0x1da0


0x55c0:	mov	r9, qword ptr [rbx + 0x10]
0x55c4:	mov	r13, qword ptr [rbx + 0x30]
0x55c8:	lea	rsi, [rip + 0x2af9]
0x55cf:	mov	r12, qword ptr [rbx + 0x28]
0x55d3:	mov	r15, qword ptr [rbx + 0x20]
0x55d7:	mov	edx, 5
0x55dc:	mov	r14, qword ptr [rbx + 0x18]
0x55e0:	mov	r8, qword ptr [rbx + 8]
0x55e4:	xor	edi, edi
0x55e6:	mov	qword ptr [rsp + 8], r9
0x55eb:	mov	rbx, qword ptr [rbx]
0x55ee:	mov	qword ptr [rsp], r8
0x55f2:	call	0x1da0


0x53a0:	mov	r10, qword ptr [rbx + 0x40]
0x53a4:	mov	r9, qword ptr [rbx + 0x38]
0x53a8:	lea	rsi, [rip + 0x2d79]
0x53af:	mov	rax, qword ptr [rbx + 0x10]
0x53b3:	mov	r8, qword ptr [rbx + 8]
0x53b7:	mov	edx, 5
0x53bc:	mov	r13, qword ptr [rbx + 0x30]
0x53c0:	mov	r12, qword ptr [rbx + 0x28]
0x53c4:	mov	r15, qword ptr [rbx + 0x20]
0x53c8:	mov	r14, qword ptr [rbx + 0x18]
0x53cc:	mov	rbx, qword ptr [rbx]
0x53cf:	mov	qword ptr [rsp + 0x18], r10
0x53d4:	mov	qword ptr [rsp + 0x10], r9
0x53d9:	mov	qword ptr [rsp], rax
0x53dd:	mov	qword ptr [rsp + 8], r8
0x53e2:	xor	edi, edi
0x53e4:	call	0x1da0


0x5558:	mov	r8, qword ptr [rbx + 8]
0x555c:	mov	r12, qword ptr [rbx + 0x28]
0x5560:	lea	rsi, [rip + 0x2b39]
0x5567:	mov	r15, qword ptr [rbx + 0x20]
0x556b:	mov	r14, qword ptr [rbx + 0x18]
0x556f:	mov	edx, 5
0x5574:	mov	r13, qword ptr [rbx + 0x10]
0x5578:	xor	edi, edi
0x557a:	mov	rbx, qword ptr [rbx]
0x557d:	mov	qword ptr [rsp], r8
0x5581:	call	0x1da0


0x5366:	add	rsp, 0x28
0x536a:	pop	rbx
0x536b:	pop	rbp
0x536c:	pop	r12
0x536e:	pop	r13
0x5370:	pop	r14
0x5372:	pop	r15
0x5374:	ret	


0x5528:	mov	r15, qword ptr [rbx + 0x20]
0x552c:	lea	rsi, [rip + 0x2b45]
0x5533:	mov	edx, 5
0x5538:	xor	edi, edi
0x553a:	mov	r14, qword ptr [rbx + 0x18]
0x553e:	mov	r13, qword ptr [rbx + 0x10]
0x5542:	mov	r12, qword ptr [rbx + 8]
0x5546:	mov	rbx, qword ptr [rbx]
0x5549:	call	0x1da0


0x54d0:	lea	rsi, [rip + 0x2b81]
0x54d7:	mov	edx, 5
0x54dc:	xor	edi, edi
0x54de:	mov	r14, qword ptr [rbx + 0x18]
0x54e2:	mov	r13, qword ptr [rbx + 0x10]
0x54e6:	mov	r12, qword ptr [rbx + 8]
0x54ea:	mov	rbx, qword ptr [rbx]
0x54ed:	call	0x1da0


0x52f0:	mov	r9, qword ptr [rbx + 0x38]
0x52f4:	mov	rax, qword ptr [rbx + 0x10]
0x52f8:	lea	rsi, [rip + 0x2df9]
0x52ff:	mov	r8, qword ptr [rbx + 8]
0x5303:	mov	edx, 5
0x5308:	xor	edi, edi
0x530a:	mov	r13, qword ptr [rbx + 0x30]
0x530e:	mov	r12, qword ptr [rbx + 0x28]
0x5312:	mov	qword ptr [rsp + 0x10], r9
0x5317:	mov	r15, qword ptr [rbx + 0x20]
0x531b:	mov	r14, qword ptr [rbx + 0x18]
0x531f:	mov	qword ptr [rsp], rax
0x5323:	mov	qword ptr [rsp + 8], r8
0x5328:	mov	rbx, qword ptr [rbx]
0x532b:	call	0x1da0


0x53f8:	mov	rbx, qword ptr [rbx]
0x53fb:	lea	rsi, [rip + 0x2afd]
0x5402:	mov	edx, 5
0x5407:	xor	edi, edi
0x5409:	call	0x1da0


0x5438:	mov	r12, qword ptr [rbx + 8]
0x543c:	lea	rsi, [rip + 0x2acc]
0x5443:	mov	rbx, qword ptr [rbx]
0x5446:	mov	edx, 5
0x544b:	xor	edi, edi
0x544d:	call	0x1da0


0x5452:	add	rsp, 0x28
0x5456:	mov	r8, r12
0x5459:	mov	rcx, rbx
0x545c:	mov	rdi, rbp
0x545f:	mov	rdx, rax
0x5462:	mov	esi, 1
0x5467:	pop	rbx
0x5468:	pop	rbp
0x5469:	pop	r12
0x546b:	pop	r13
0x546d:	pop	r14
0x546f:	pop	r15
0x5471:	xor	eax, eax
0x5473:	jmp	0x1fc0


0x540e:	add	rsp, 0x28
0x5412:	mov	rcx, rbx
0x5415:	mov	rdi, rbp
0x5418:	pop	rbx
0x5419:	pop	rbp
0x541a:	pop	r12
0x541c:	pop	r13
0x541e:	pop	r14
0x5420:	pop	r15
0x5422:	mov	rdx, rax
0x5425:	mov	esi, 1
0x542a:	xor	eax, eax
0x542c:	jmp	0x1fc0


0x5330:	sub	rsp, 8
0x5334:	mov	r9, qword ptr [rsp + 0x18]
0x5339:	mov	rdx, rax
0x533c:	mov	rcx, rbx
0x533f:	mov	esi, 1
0x5344:	mov	rdi, rbp
0x5347:	xor	eax, eax
0x5349:	push	r9
0x534b:	push	r13
0x534d:	push	r12
0x534f:	push	r15
0x5351:	push	r14
0x5353:	mov	r9, qword ptr [rsp + 0x30]
0x5358:	mov	r8, qword ptr [rsp + 0x38]
0x535d:	call	0x1fc0


0x54f2:	sub	rsp, 8
0x54f6:	push	r14
0x54f8:	mov	rdx, rax
0x54fb:	mov	r9, r13
0x54fe:	mov	r8, r12
0x5501:	mov	rcx, rbx
0x5504:	mov	rdi, rbp
0x5507:	mov	esi, 1
0x550c:	xor	eax, eax
0x550e:	call	0x1fc0


0x5513:	pop	rax
0x5514:	pop	rdx
0x5515:	add	rsp, 0x28
0x5519:	pop	rbx
0x551a:	pop	rbp
0x551b:	pop	r12
0x551d:	pop	r13
0x551f:	pop	r14
0x5521:	pop	r15
0x5523:	ret	


0x554e:	push	r15
0x5550:	jmp	0x54f6


0x54f6:	push	r14
0x54f8:	mov	rdx, rax
0x54fb:	mov	r9, r13
0x54fe:	mov	r8, r12
0x5501:	mov	rcx, rbx
0x5504:	mov	rdi, rbp
0x5507:	mov	esi, 1
0x550c:	xor	eax, eax
0x550e:	call	0x1fc0


0x5586:	sub	rsp, 8
0x558a:	mov	r9, r13
0x558d:	push	r12
0x558f:	push	r15
0x5591:	push	r14
0x5593:	mov	r8, qword ptr [rsp + 0x20]
0x5598:	mov	rcx, rbx
0x559b:	mov	rdx, rax
0x559e:	mov	rdi, rbp
0x55a1:	mov	esi, 1
0x55a6:	xor	eax, eax
0x55a8:	call	0x1fc0


0x55ad:	add	rsp, 0x20
0x55b1:	add	rsp, 0x28
0x55b5:	pop	rbx
0x55b6:	pop	rbp
0x55b7:	pop	r12
0x55b9:	pop	r13
0x55bb:	pop	r14
0x55bd:	pop	r15
0x55bf:	ret	


0x55f7:	push	r13
0x55f9:	push	r12
0x55fb:	push	r15
0x55fd:	push	r14
0x55ff:	mov	r9, qword ptr [rsp + 0x28]
0x5604:	jmp	0x5593


0x5593:	mov	r8, qword ptr [rsp + 0x20]
0x5598:	mov	rcx, rbx
0x559b:	mov	rdx, rax
0x559e:	mov	rdi, rbp
0x55a1:	mov	esi, 1
0x55a6:	xor	eax, eax
0x55a8:	call	0x1fc0


0x549e:	add	rsp, 0x28
0x54a2:	mov	r9, r13
0x54a5:	mov	r8, r12
0x54a8:	mov	rcx, rbx
0x54ab:	mov	rdi, rbp
0x54ae:	mov	rdx, rax
0x54b1:	pop	rbx
0x54b2:	pop	rbp
0x54b3:	pop	r12
0x54b5:	pop	r13
0x54b7:	pop	r14
0x54b9:	pop	r15
0x54bb:	mov	esi, 1
0x54c0:	xor	eax, eax
0x54c2:	jmp	0x1fc0


0x4240:	sub	rsp, 8
0x4244:	mov	rcx, rbp
0x4247:	mov	rsi, r13
0x424a:	push	qword ptr [rsp + 0x68]
0x424e:	push	qword ptr [rsp + 0x78]
0x4252:	mov	rdi, r14
0x4255:	push	0
0x4257:	mov	r9d, dword ptr [rsp + 0x98]
0x425f:	mov	r8d, dword ptr [rsp + 0x28]
0x4264:	mov	rdx, qword ptr [rsp + 0x30]
0x4269:	and	r9d, 0xfffffffd
0x426d:	call	0x36a0


0x4272:	add	rsp, 0x20
0x4276:	mov	r15, rax
0x4279:	mov	rbx, qword ptr [rsp + 0xa8]
0x4281:	xor	rbx, qword ptr fs:[0x28]
0x428a:	mov	rax, r15
0x428d:	jne	0x4893


0x4293:	add	rsp, 0xb8
0x429a:	pop	rbx
0x429b:	pop	rbp
0x429c:	pop	r12
0x429e:	pop	r13
0x42a0:	pop	r14
0x42a2:	pop	r15
0x42a4:	ret	


0x4893:	call	0x1dd0


0x483d:	sub	rsp, 8
0x4841:	mov	r8d, 5
0x4847:	mov	rcx, r11
0x484a:	push	qword ptr [rsp + 0x68]
0x484e:	push	qword ptr [rsp + 0x78]
0x4852:	mov	rdi, r14
0x4855:	push	qword ptr [rsp + 0x38]
0x4859:	mov	r9d, dword ptr [rsp + 0x98]
0x4861:	mov	rdx, qword ptr [rsp + 0x30]
0x4866:	mov	rsi, qword ptr [rsp + 0x70]
0x486b:	call	0x36a0


0x4870:	add	rsp, 0x20
0x4874:	mov	r15, rax
0x4877:	jmp	0x4279


0x4279:	mov	rbx, qword ptr [rsp + 0xa8]
0x4281:	xor	rbx, qword ptr fs:[0x28]
0x428a:	mov	rax, r15
0x428d:	jne	0x4893


0x1cf0:	push	qword ptr [rip + 0x20813a]
0x1cf6:	jmp	qword ptr [rip + 0x20813c]


0x1cfc:	nop	dword ptr [rax]


0x1d06:	push	0
0x1d0b:	jmp	0x1cf0


0x1d16:	push	1
0x1d1b:	jmp	0x1cf0


0x1d26:	push	2
0x1d2b:	jmp	0x1cf0


0x1d36:	push	3
0x1d3b:	jmp	0x1cf0


0x1d46:	push	4
0x1d4b:	jmp	0x1cf0


0x1d56:	push	5
0x1d5b:	jmp	0x1cf0


0x1d66:	push	6
0x1d6b:	jmp	0x1cf0


0x1d76:	push	7
0x1d7b:	jmp	0x1cf0


0x1d86:	push	8
0x1d8b:	jmp	0x1cf0


0x1d96:	push	9
0x1d9b:	jmp	0x1cf0


0x1da6:	push	0xa
0x1dab:	jmp	0x1cf0


0x1db6:	push	0xb
0x1dbb:	jmp	0x1cf0


0x1dc6:	push	0xc
0x1dcb:	jmp	0x1cf0


0x1dd6:	push	0xd
0x1ddb:	jmp	0x1cf0


0x1de6:	push	0xe
0x1deb:	jmp	0x1cf0


0x1df6:	push	0xf
0x1dfb:	jmp	0x1cf0


0x1e06:	push	0x10
0x1e0b:	jmp	0x1cf0


0x1e16:	push	0x11
0x1e1b:	jmp	0x1cf0


0x1e26:	push	0x12
0x1e2b:	jmp	0x1cf0


0x1e36:	push	0x13
0x1e3b:	jmp	0x1cf0


0x1e46:	push	0x14
0x1e4b:	jmp	0x1cf0


0x1e56:	push	0x15
0x1e5b:	jmp	0x1cf0


0x1e66:	push	0x16
0x1e6b:	jmp	0x1cf0


0x1e76:	push	0x17
0x1e7b:	jmp	0x1cf0


0x1e80:	jmp	qword ptr [rip + 0x20807a]




0x1e86:	push	0x18
0x1e8b:	jmp	0x1cf0


0x1e96:	push	0x19
0x1e9b:	jmp	0x1cf0


0x1ea6:	push	0x1a
0x1eab:	jmp	0x1cf0


0x1eb6:	push	0x1b
0x1ebb:	jmp	0x1cf0


0x1ec6:	push	0x1c
0x1ecb:	jmp	0x1cf0


0x1ed6:	push	0x1d
0x1edb:	jmp	0x1cf0


0x1ee6:	push	0x1e
0x1eeb:	jmp	0x1cf0


0x1ef6:	push	0x1f
0x1efb:	jmp	0x1cf0


0x1f06:	push	0x20
0x1f0b:	jmp	0x1cf0


0x1f16:	push	0x21
0x1f1b:	jmp	0x1cf0


0x1f26:	push	0x22
0x1f2b:	jmp	0x1cf0


0x1f36:	push	0x23
0x1f3b:	jmp	0x1cf0


0x1f46:	push	0x24
0x1f4b:	jmp	0x1cf0


0x1f56:	push	0x25
0x1f5b:	jmp	0x1cf0


0x1f66:	push	0x26
0x1f6b:	jmp	0x1cf0


0x1f76:	push	0x27
0x1f7b:	jmp	0x1cf0


0x1f86:	push	0x28
0x1f8b:	jmp	0x1cf0


0x1f96:	push	0x29
0x1f9b:	jmp	0x1cf0


0x1fa6:	push	0x2a
0x1fab:	jmp	0x1cf0


0x1fb6:	push	0x2b
0x1fbb:	jmp	0x1cf0


0x1fc6:	push	0x2c
0x1fcb:	jmp	0x1cf0


0x1fd0:	jmp	qword ptr [rip + 0x207fd2]




0x1fd6:	push	0x2d
0x1fdb:	jmp	0x1cf0


0x1fe0:	jmp	qword ptr [rip + 0x207fca]




0x1fe6:	push	0x2e
0x1feb:	jmp	0x1cf0


0x1ff6:	push	0x2f
0x1ffb:	jmp	0x1cf0


0x2006:	nop	


0x200e:	nop	


0x249d:	nop	dword ptr [rax]


0x24ca:	hlt	


0x24cb:	nop	dword ptr [rax + rax]


0x2502:	nop	dword ptr [rax]
0x2506:	nop	word ptr cs:[rax + rax]


0x2552:	nop	dword ptr [rax]
0x2556:	nop	word ptr cs:[rax + rax]


0x259a:	nop	word ptr [rax + rax]


0x25aa:	nop	word ptr [rax + rax]


0x2791:	nop	dword ptr [rax + rax]
0x2796:	nop	word ptr cs:[rax + rax]


0x2dc3:	nop	dword ptr [rax]
0x2dc6:	nop	word ptr cs:[rax + rax]


0x313a:	nop	word ptr [rax + rax]


0x318e:	nop	


0x3198:	nop	dword ptr [rax + rax]


0x31a8:	nop	dword ptr [rax + rax]


0x3254:	nop	word ptr cs:[rax + rax]
0x325e:	nop	


0x32bc:	nop	dword ptr [rax]


0x3307:	nop	word ptr [rax + rax]


0x3352:	nop	dword ptr [rax]
0x3356:	nop	word ptr cs:[rax + rax]


0x350e:	nop	


0x35af:	nop	


0x3697:	nop	word ptr [rax + rax]


0x3733:	mov	byte ptr [rsp + 0xe], 1
0x3738:	mov	byte ptr [rsp + 0x7c], 0
0x373d:	xor	r12d, r12d
0x3740:	mov	qword ptr [rsp + 0x50], 0
0x3749:	mov	byte ptr [rsp + 0xf], 1
0x374e:	mov	byte ptr [rsp + 0xd], 0
0x3753:	lea	rax, [rip + 0x2b7d]
0x375a:	mov	qword ptr [rsp + 0x18], 1
0x3763:	xor	r15d, r15d
0x3766:	mov	dword ptr [rsp + 8], 2
0x376e:	mov	qword ptr [rsp + 0x48], rax
0x3773:	xor	r11d, r11d
0x3776:	mov	rax, rbp
0x3779:	mov	r8d, r12d
0x377c:	mov	rbp, r11
0x377f:	mov	r11, rax
0x3782:	nop	word ptr [rax + rax]
0x3788:	cmp	r11, rbp
0x378b:	setne	r12b
0x378f:	cmp	r11, -1
0x3793:	jne	0x37a2


0x3795:	mov	rax, qword ptr [rsp + 0x10]
0x379a:	cmp	byte ptr [rax + rbp], 0
0x379e:	setne	r12b
0x37a2:	test	r12b, r12b
0x37a5:	je	0x3e00


0x37a2:	test	r12b, r12b
0x37a5:	je	0x3e00


0x3e00:	cmp	dword ptr [rsp + 8], 2
0x3e05:	movzx	ebx, byte ptr [rsp + 0xf]
0x3e0a:	mov	r12d, r8d
0x3e0d:	mov	rbp, r11
0x3e10:	sete	dl
0x3e13:	mov	eax, ebx
0x3e15:	test	r15, r15
0x3e18:	sete	cl
0x3e1b:	and	eax, edx
0x3e1d:	and	al, cl
0x3e1f:	jne	0x4886


0x37ab:	cmp	dword ptr [rsp + 8], 2
0x37b0:	mov	rdi, qword ptr [rsp + 0x10]
0x37b5:	lea	r9, [rdi + rbp]
0x37b9:	setne	al
0x37bc:	and	al, byte ptr [rsp + 0xd]
0x37c0:	mov	r10d, eax
0x37c3:	je	0x3870


0x3e25:	mov	eax, ebx
0x3e27:	xor	eax, 1
0x3e2a:	and	dl, al
0x3e2c:	je	0x479c


0x4886:	mov	dword ptr [rsp + 8], 2
0x488e:	jmp	0x4229


0x3870:	movzx	ebx, byte ptr [r9]
0x3874:	cmp	bl, 0x7e
0x3877:	ja	0x3b98


0x37c9:	mov	rax, qword ptr [rsp + 0x18]
0x37ce:	test	rax, rax
0x37d1:	je	0x3c00


0x479c:	mov	rbx, qword ptr [rsp + 0x48]
0x47a1:	test	rbx, rbx
0x47a4:	je	0x47d2


0x3e32:	cmp	byte ptr [rsp + 0x7c], 0
0x3e37:	je	0x479a


0x4229:	cmp	byte ptr [rsp + 0xd], 0
0x422e:	je	0x4240


0x387d:	lea	rcx, [rip + 0x4228]
0x3884:	movzx	edx, bl
0x3887:	movsxd	rax, dword ptr [rcx + rdx*4]
0x388b:	add	rax, rcx
0x388e:	jmp	rax


0x3b98:	cmp	qword ptr [rsp + 0x58], 1
0x3b9e:	jne	0x3f48


0x3c00:	movzx	ebx, byte ptr [r9]
0x3c04:	cmp	bl, 0x7e
0x3c07:	ja	0x3b90


0x37d7:	cmp	r11, -1
0x37db:	lea	rbx, [rbp + rax]
0x37e0:	jne	0x3810


0x47d2:	cmp	r13, r15
0x47d5:	jbe	0x4279


0x47a6:	test	al, al
0x47a8:	je	0x47d2


0x479a:	mov	eax, edx
0x479c:	mov	rbx, qword ptr [rsp + 0x48]
0x47a1:	test	rbx, rbx
0x47a4:	je	0x47d2


0x3e3d:	cmp	byte ptr [rsp + 0xe], 0
0x3e42:	jne	0x483d


0x4230:	test	al, al
0x4232:	mov	eax, 4
0x4237:	cmove	eax, dword ptr [rsp + 8]
0x423c:	mov	dword ptr [rsp + 8], eax


0x3ba4:	mov	qword ptr [rsp + 0x38], r11
0x3ba9:	mov	byte ptr [rsp + 0x30], r8b
0x3bae:	mov	byte ptr [rsp + 0x28], r10b
0x3bb3:	call	0x1ff0


0x3f48:	lea	rax, [rsp + 0xa0]
0x3f50:	cmp	r11, -1
0x3f54:	mov	qword ptr [rsp + 0xa0], 0
0x3f60:	mov	qword ptr [rsp + 0x28], rax
0x3f65:	jne	0x3f94


0x3c09:	lea	rcx, [rip + 0x4098]
0x3c10:	movzx	edx, bl
0x3c13:	movsxd	rax, dword ptr [rcx + rdx*4]
0x3c17:	add	rax, rcx
0x3c1a:	jmp	rax


0x3b90:	xor	r10d, r10d
0x3b93:	nop	dword ptr [rax + rax]
0x3b98:	cmp	qword ptr [rsp + 0x58], 1
0x3b9e:	jne	0x3f48


0x37e2:	cmp	rax, 1
0x37e6:	jbe	0x3810


0x3810:	cmp	rbx, r11
0x3813:	mov	byte ptr [rsp + 0x28], r10b
0x3818:	ja	0x3dd0


0x47db:	mov	byte ptr [r14 + r15], 0
0x47e0:	jmp	0x4279


0x47aa:	movzx	ecx, byte ptr [rbx]
0x47ad:	mov	rax, rbx
0x47b0:	test	cl, cl
0x47b2:	je	0x47d2


0x3e48:	test	r13, r13
0x3e4b:	sete	al
0x3e4e:	cmp	qword ptr [rsp + 0x50], 0
0x3e54:	setne	dl
0x3e57:	and	al, dl
0x3e59:	je	0x487c


0x3f67:	mov	rdi, qword ptr [rsp + 0x10]
0x3f6c:	mov	byte ptr [rsp + 0x40], r8b
0x3f71:	mov	byte ptr [rsp + 0x38], r10b
0x3f76:	mov	qword ptr [rsp + 0x30], r9
0x3f7b:	call	0x1dc0


0x3f94:	lea	rax, [rsp + 0x9c]
0x3f9c:	xor	ecx, ecx
0x3f9e:	mov	byte ptr [rsp + 0x7e], bl
0x3fa2:	mov	byte ptr [rsp + 0x7d], r8b
0x3fa7:	mov	rbx, rcx
0x3faa:	mov	qword ptr [rsp + 0x88], r9
0x3fb2:	mov	qword ptr [rsp + 0x38], rax
0x3fb7:	mov	byte ptr [rsp + 0x7f], r10b
0x3fbc:	mov	qword ptr [rsp + 0x80], r15
0x3fc4:	mov	qword ptr [rsp + 0x40], r14
0x3fc9:	mov	qword ptr [rsp + 0x70], r13
0x3fce:	mov	qword ptr [rsp + 0x30], r11
0x3fd3:	mov	rax, qword ptr [rsp + 0x10]
0x3fd8:	lea	r14, [rbp + rbx]
0x3fdd:	mov	rdx, qword ptr [rsp + 0x30]
0x3fe2:	mov	rcx, qword ptr [rsp + 0x28]
0x3fe7:	mov	rdi, qword ptr [rsp + 0x38]
0x3fec:	lea	r13, [rax + r14]
0x3ff0:	sub	rdx, r14
0x3ff3:	mov	rsi, r13
0x3ff6:	call	0x5c30


0x37e8:	mov	byte ptr [rsp + 0x38], r8b
0x37ed:	mov	byte ptr [rsp + 0x30], r10b
0x37f2:	mov	qword ptr [rsp + 0x28], r9
0x37f7:	call	0x1dc0


0x381e:	mov	rdx, qword ptr [rsp + 0x18]
0x3823:	mov	rsi, qword ptr [rsp + 0x48]
0x3828:	mov	rdi, r9
0x382b:	mov	qword ptr [rsp + 0x40], r11
0x3830:	mov	byte ptr [rsp + 0x38], r8b
0x3835:	mov	qword ptr [rsp + 0x30], r9
0x383a:	call	0x1e80


0x3dd0:	xor	r10d, r10d
0x3dd3:	jmp	0x3870


0x47b4:	mov	rdx, r15
0x47b7:	sub	rax, r15
0x47ba:	cmp	r13, rdx
0x47bd:	jbe	0x47c3


0x487c:	movzx	eax, byte ptr [rsp + 0x7c]
0x4881:	jmp	0x479c


0x3e5f:	mov	r13, qword ptr [rsp + 0x50]
0x3e64:	lea	rbx, [rip + 0x246c]
0x3e6b:	mov	byte ptr [r14], 0x27
0x3e6f:	mov	dword ptr [rsp + 8], 2
0x3e77:	mov	r15d, 1
0x3e7d:	mov	qword ptr [rsp + 0x18], 1
0x3e86:	mov	byte ptr [rsp + 0xf], 0
0x3e8b:	mov	qword ptr [rsp + 0x48], rbx
0x3e90:	mov	byte ptr [rsp + 0x7c], al
0x3e94:	jmp	0x3773


0x47c3:	add	rdx, 1
0x47c7:	movzx	ecx, byte ptr [rax + rdx]
0x47cb:	test	cl, cl
0x47cd:	jne	0x47ba


0x47bf:	mov	byte ptr [r14 + rdx], cl
0x47c3:	add	rdx, 1
0x47c7:	movzx	ecx, byte ptr [rax + rdx]
0x47cb:	test	cl, cl
0x47cd:	jne	0x47ba


0x3773:	xor	r11d, r11d
0x3776:	mov	rax, rbp
0x3779:	mov	r8d, r12d
0x377c:	mov	rbp, r11
0x377f:	mov	r11, rax
0x3782:	nop	word ptr [rax + rax]
0x3788:	cmp	r11, rbp
0x378b:	setne	r12b
0x378f:	cmp	r11, -1
0x3793:	jne	0x37a2


0x47cf:	mov	r15, rdx
0x47d2:	cmp	r13, r15
0x47d5:	jbe	0x4279


0x47ba:	cmp	r13, rdx
0x47bd:	jbe	0x47c3


0x383f:	test	eax, eax
0x3841:	mov	r9, qword ptr [rsp + 0x30]
0x3846:	movzx	r8d, byte ptr [rsp + 0x38]
0x384c:	mov	r11, qword ptr [rsp + 0x40]
0x3851:	jne	0x3dd0


0x3857:	cmp	byte ptr [rsp + 0xf], 0
0x385c:	movzx	r10d, byte ptr [rsp + 0x28]
0x3862:	jne	0x47e5


0x47e5:	cmp	dword ptr [rsp + 8], 2
0x47ea:	movzx	ebx, byte ptr [rsp + 0xf]
0x47ef:	mov	rbp, r11
0x47f2:	sete	al
0x47f5:	mov	byte ptr [rsp + 0xd], bl
0x47f9:	jmp	0x4229


0x3ffb:	test	rax, rax
0x3ffe:	mov	r15, rax
0x4001:	je	0x4051


0x4051:	mov	edx, r12d
0x4054:	mov	rdi, rbx
0x4057:	movzx	r8d, byte ptr [rsp + 0x7d]
0x405d:	xor	edx, 1
0x4060:	movzx	ebx, byte ptr [rsp + 0x7e]
0x4065:	movzx	r10d, byte ptr [rsp + 0x7f]
0x406b:	and	dl, byte ptr [rsp + 0xd]
0x406f:	mov	r15, qword ptr [rsp + 0x80]
0x4077:	mov	r14, qword ptr [rsp + 0x40]
0x407c:	mov	r13, qword ptr [rsp + 0x70]
0x4081:	mov	r11, qword ptr [rsp + 0x30]
0x4086:	cmp	rdi, 1
0x408a:	jbe	0x468b


0x4003:	cmp	rax, -1
0x4007:	je	0x4625


0x468b:	mov	eax, edx
0x468d:	jmp	0x3be7


0x4090:	mov	rcx, rdi
0x4093:	xor	esi, esi
0x4095:	movzx	r9d, byte ptr [rsp + 0xf]
0x409b:	add	rcx, rbp
0x409e:	mov	rdi, qword ptr [rsp + 0x10]
0x40a3:	jmp	0x415e


0x4625:	mov	rdi, rbx
0x4628:	movzx	r8d, byte ptr [rsp + 0x7d]
0x462e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x4633:	movzx	r10d, byte ptr [rsp + 0x7f]
0x4639:	mov	r15, qword ptr [rsp + 0x80]
0x4641:	xor	r12d, r12d
0x4644:	mov	r14, qword ptr [rsp + 0x40]
0x4649:	mov	r13, qword ptr [rsp + 0x70]
0x464e:	mov	r11, qword ptr [rsp + 0x30]
0x4653:	movzx	edx, byte ptr [rsp + 0xd]
0x4658:	jmp	0x4086


0x400d:	cmp	rax, -2
0x4011:	je	0x45b1


0x3be7:	test	al, al
0x3be9:	jne	0x4581


0x415e:	test	dl, dl
0x4160:	jne	0x40b0


0x4086:	cmp	rdi, 1
0x408a:	jbe	0x468b


0x45b1:	mov	r11, qword ptr [rsp + 0x30]
0x45b6:	mov	rsi, r14
0x45b9:	mov	rcx, r13
0x45bc:	mov	rax, rbx
0x45bf:	mov	rdi, rbx
0x45c2:	movzx	r8d, byte ptr [rsp + 0x7d]
0x45c8:	movzx	ebx, byte ptr [rsp + 0x7e]
0x45cd:	mov	r9, qword ptr [rsp + 0x88]
0x45d5:	cmp	rsi, r11
0x45d8:	movzx	r10d, byte ptr [rsp + 0x7f]
0x45de:	mov	r15, qword ptr [rsp + 0x80]
0x45e6:	mov	r14, qword ptr [rsp + 0x40]
0x45eb:	mov	r13, qword ptr [rsp + 0x70]
0x45f0:	jae	0x4618


0x4017:	cmp	dword ptr [rsp + 8], 2
0x401c:	sete	al
0x401f:	and	al, byte ptr [rsp + 0xf]
0x4023:	jne	0x41c0


0x3bef:	cmp	dword ptr [rsp + 8], 2
0x3bf4:	sete	dl
0x3bf7:	jmp	0x38c8


0x4581:	movzx	edx, byte ptr [rsp + 0xd]
0x4586:	xor	r12d, r12d
0x4589:	jmp	0x4090


0x4166:	mov	eax, esi
0x4168:	xor	eax, 1
0x416b:	and	eax, r8d
0x416e:	test	r10b, r10b
0x4171:	je	0x4181


0x40b0:	cmp	dword ptr [rsp + 8], 2
0x40b5:	sete	al
0x40b8:	test	r9b, r9b
0x40bb:	jne	0x4570


0x45f2:	cmp	byte ptr [rcx], 0
0x45f5:	jne	0x4607


0x4618:	movzx	edx, byte ptr [rsp + 0xd]
0x461d:	xor	r12d, r12d
0x4620:	jmp	0x4086


0x4029:	mov	edi, dword ptr [rsp + 0x9c]
0x4030:	call	0x1fe0


0x41c0:	cmp	r15, 1
0x41c4:	je	0x4029


0x38c8:	cmp	byte ptr [rsp + 0xd], 1
0x38cd:	jne	0x39e2


0x4181:	add	rbp, 1
0x4185:	cmp	rbp, rcx
0x4188:	jae	0x390c


0x4173:	cmp	r13, r15
0x4176:	jbe	0x417d


0x40c1:	mov	esi, r8d
0x40c4:	xor	esi, 1
0x40c7:	and	al, sil
0x40ca:	je	0x40fb


0x4570:	movzx	ebx, byte ptr [rsp + 0xf]
0x4575:	mov	rbp, r11
0x4578:	mov	byte ptr [rsp + 0xd], bl
0x457c:	jmp	0x4229


0x45f7:	jmp	0x4618


0x4607:	add	rax, 1
0x460b:	lea	rdx, [rbp + rax]
0x4610:	cmp	r11, rdx
0x4613:	ja	0x4600


0x41ca:	mov	rdi, qword ptr [rsp + 0x10]
0x41cf:	lea	rcx, [rdi + r15]
0x41d3:	lea	rdx, [rdi + r14 + 1]
0x41d8:	lea	r8, [rcx + r14]
0x41dc:	jmp	0x41ed


0x38d3:	test	dl, dl
0x38d5:	jne	0x39e2


0x39e2:	cmp	byte ptr [rsp + 0xf], 0
0x39e7:	jne	0x38db


0x418e:	test	al, al
0x4190:	je	0x458e


0x390c:	test	al, al
0x390e:	je	0x3930


0x417d:	add	r15, 1
0x4181:	add	rbp, 1
0x4185:	cmp	rbp, rcx
0x4188:	jae	0x390c


0x4178:	mov	byte ptr [r14 + r15], 0x5c
0x417d:	add	r15, 1
0x4181:	add	rbp, 1
0x4185:	cmp	rbp, rcx
0x4188:	jae	0x390c


0x40fb:	cmp	r13, r15
0x40fe:	jbe	0x4105


0x40cc:	cmp	r13, r15
0x40cf:	jbe	0x40d6


0x4615:	mov	rdi, rax
0x4618:	movzx	edx, byte ptr [rsp + 0xd]
0x461d:	xor	r12d, r12d
0x4620:	jmp	0x4086


0x4600:	cmp	byte ptr [r9 + rax], 0
0x4605:	je	0x4615


0x41ed:	movzx	ecx, byte ptr [rdx]
0x41f0:	sub	ecx, 0x5b
0x41f3:	cmp	cl, 0x21
0x41f6:	ja	0x41e0


0x38db:	mov	rsi, qword ptr [rsp + 0x20]
0x38e0:	test	rsi, rsi
0x38e3:	je	0x38f9


0x39ed:	jmp	0x38f9


0x458e:	xor	r10d, r10d
0x4591:	jmp	0x414d


0x4196:	cmp	r13, r15
0x4199:	jbe	0x41a0


0x3930:	cmp	r15, r13
0x3933:	jae	0x3939


0x3910:	cmp	r13, r15
0x3913:	jbe	0x391a


0x4105:	lea	rax, [r15 + 1]
0x4109:	cmp	r13, rax
0x410c:	jbe	0x411b


0x4100:	mov	byte ptr [r14 + r15], 0x5c
0x4105:	lea	rax, [r15 + 1]
0x4109:	cmp	r13, rax
0x410c:	jbe	0x411b


0x40d6:	lea	rsi, [r15 + 1]
0x40da:	cmp	r13, rsi
0x40dd:	jbe	0x40e5


0x40d1:	mov	byte ptr [r14 + r15], 0x27
0x40d6:	lea	rsi, [r15 + 1]
0x40da:	cmp	r13, rsi
0x40dd:	jbe	0x40e5


0x41f8:	mov	esi, 1
0x41fd:	shl	rsi, cl
0x4200:	mov	rcx, rsi
0x4203:	movabs	rsi, 0x20000002b
0x420d:	test	rcx, rsi
0x4210:	je	0x41e0


0x41e0:	add	rdx, 1
0x41e4:	cmp	r8, rdx
0x41e7:	je	0x4029


0x38f9:	test	r10b, r10b
0x38fc:	jne	0x3a43


0x38e5:	mov	edx, ebx
0x38e7:	shr	dl, 5
0x38ea:	movzx	edx, dl
0x38ed:	mov	edx, dword ptr [rsi + rdx*4]
0x38f0:	bt	edx, ebx
0x38f3:	jb	0x3a43


0x414d:	cmp	r13, r15
0x4150:	jbe	0x4156


0x41a0:	lea	rax, [r15 + 1]
0x41a4:	cmp	r13, rax
0x41a7:	jbe	0x41af


0x419b:	mov	byte ptr [r14 + r15], 0x27
0x41a0:	lea	rax, [r15 + 1]
0x41a4:	cmp	r13, rax
0x41a7:	jbe	0x41af


0x3935:	mov	byte ptr [r14 + r15], bl
0x3939:	movzx	edi, byte ptr [rsp + 0xe]
0x393e:	add	r15, 1
0x3942:	mov	eax, 0
0x3947:	test	r12b, r12b
0x394a:	cmove	edi, eax
0x394d:	mov	byte ptr [rsp + 0xe], dil
0x3952:	jmp	0x3788


0x3939:	movzx	edi, byte ptr [rsp + 0xe]
0x393e:	add	r15, 1
0x3942:	mov	eax, 0
0x3947:	test	r12b, r12b
0x394a:	cmove	edi, eax
0x394d:	mov	byte ptr [rsp + 0xe], dil
0x3952:	jmp	0x3788


0x391a:	lea	rax, [r15 + 1]
0x391e:	cmp	r13, rax
0x3921:	jbe	0x3929


0x3915:	mov	byte ptr [r14 + r15], 0x27
0x391a:	lea	rax, [r15 + 1]
0x391e:	cmp	r13, rax
0x3921:	jbe	0x3929


0x411b:	lea	rax, [r15 + 2]
0x411f:	cmp	r13, rax
0x4122:	jbe	0x4134


0x410e:	mov	eax, ebx
0x4110:	shr	al, 6
0x4113:	add	eax, 0x30
0x4116:	mov	byte ptr [r14 + r15 + 1], al
0x411b:	lea	rax, [r15 + 2]
0x411f:	cmp	r13, rax
0x4122:	jbe	0x4134


0x40e5:	lea	rsi, [r15 + 2]
0x40e9:	cmp	r13, rsi
0x40ec:	jbe	0x40f4


0x40df:	mov	byte ptr [r14 + r15 + 1], 0x24
0x40e5:	lea	rsi, [r15 + 2]
0x40e9:	cmp	r13, rsi
0x40ec:	jbe	0x40f4


0x4212:	mov	r14, qword ptr [rsp + 0x40]
0x4217:	mov	r13, qword ptr [rsp + 0x70]
0x421c:	mov	rbp, qword ptr [rsp + 0x30]
0x4221:	mov	dword ptr [rsp + 8], 2
0x4229:	cmp	byte ptr [rsp + 0xd], 0
0x422e:	je	0x4240


0x3902:	xor	eax, 1
0x3905:	add	rbp, 1
0x3909:	and	eax, r8d
0x390c:	test	al, al
0x390e:	je	0x3930


0x3a43:	cmp	dword ptr [rsp + 8], 2
0x3a48:	sete	dl
0x3a4b:	cmp	byte ptr [rsp + 0xf], 0
0x3a50:	mov	eax, edx
0x3a52:	jne	0x42a8


0x4156:	movzx	ebx, byte ptr [rdi + rbp]
0x415a:	add	r15, 1
0x415e:	test	dl, dl
0x4160:	jne	0x40b0


0x4152:	mov	byte ptr [r14 + r15], bl
0x4156:	movzx	ebx, byte ptr [rdi + rbp]
0x415a:	add	r15, 1
0x415e:	test	dl, dl
0x4160:	jne	0x40b0


0x41af:	add	r15, 2
0x41b3:	xor	r10d, r10d
0x41b6:	xor	r8d, r8d
0x41b9:	jmp	0x414d


0x41a9:	mov	byte ptr [r14 + r15 + 1], 0x27
0x41af:	add	r15, 2
0x41b3:	xor	r10d, r10d
0x41b6:	xor	r8d, r8d
0x41b9:	jmp	0x414d


0x3788:	cmp	r11, rbp
0x378b:	setne	r12b
0x378f:	cmp	r11, -1
0x3793:	jne	0x37a2


0x3929:	add	r15, 2
0x392d:	xor	r8d, r8d
0x3930:	cmp	r15, r13
0x3933:	jae	0x3939


0x3923:	mov	byte ptr [r14 + r15 + 1], 0x27
0x3929:	add	r15, 2
0x392d:	xor	r8d, r8d
0x3930:	cmp	r15, r13
0x3933:	jae	0x3939


0x4134:	and	ebx, 7
0x4137:	add	rbp, 1
0x413b:	add	r15, 3
0x413f:	add	ebx, 0x30
0x4142:	cmp	rbp, rcx
0x4145:	jae	0x3930


0x4124:	mov	eax, ebx
0x4126:	shr	al, 3
0x4129:	and	eax, 7
0x412c:	add	eax, 0x30
0x412f:	mov	byte ptr [r14 + r15 + 2], al
0x4134:	and	ebx, 7
0x4137:	add	rbp, 1
0x413b:	add	r15, 3
0x413f:	add	ebx, 0x30
0x4142:	cmp	rbp, rcx
0x4145:	jae	0x3930


0x40f4:	add	r15, 3
0x40f8:	mov	r8d, eax
0x40fb:	cmp	r13, r15
0x40fe:	jbe	0x4105


0x40ee:	mov	byte ptr [r14 + r15 + 2], 0x27
0x40f4:	add	r15, 3
0x40f8:	mov	r8d, eax
0x40fb:	cmp	r13, r15
0x40fe:	jbe	0x4105


0x3a58:	mov	eax, r8d
0x3a5b:	xor	eax, 1
0x3a5e:	and	al, dl
0x3a60:	je	0x3a91


0x42a8:	mov	rbp, r11
0x42ab:	jmp	0x4229


0x414b:	mov	esi, edx
0x414d:	cmp	r13, r15
0x4150:	jbe	0x4156


0x3a91:	cmp	r13, r15
0x3a94:	jbe	0x3a9b


0x3a62:	cmp	r13, r15
0x3a65:	jbe	0x3a6c


0x3a9b:	add	r15, 1
0x3a9f:	add	rbp, 1
0x3aa3:	jmp	0x3930


0x3a96:	mov	byte ptr [r14 + r15], 0x5c
0x3a9b:	add	r15, 1
0x3a9f:	add	rbp, 1
0x3aa3:	jmp	0x3930


0x3a6c:	lea	rdx, [r15 + 1]
0x3a70:	cmp	r13, rdx
0x3a73:	jbe	0x3a7b


0x3a67:	mov	byte ptr [r14 + r15], 0x27
0x3a6c:	lea	rdx, [r15 + 1]
0x3a70:	cmp	r13, rdx
0x3a73:	jbe	0x3a7b


0x3a7b:	lea	rdx, [r15 + 2]
0x3a7f:	cmp	r13, rdx
0x3a82:	jbe	0x3a8a


0x3a75:	mov	byte ptr [r14 + r15 + 1], 0x24
0x3a7b:	lea	rdx, [r15 + 2]
0x3a7f:	cmp	r13, rdx
0x3a82:	jbe	0x3a8a


0x3a8a:	add	r15, 3
0x3a8e:	mov	r8d, eax
0x3a91:	cmp	r13, r15
0x3a94:	jbe	0x3a9b


0x3a84:	mov	byte ptr [r14 + r15 + 2], 0x27
0x3a8a:	add	r15, 3
0x3a8e:	mov	r8d, eax
0x3a91:	cmp	r13, r15
0x3a94:	jbe	0x3a9b


0x4035:	mov	rdi, qword ptr [rsp + 0x28]
0x403a:	test	eax, eax
0x403c:	mov	eax, 0
0x4041:	cmove	r12d, eax
0x4045:	add	rbx, r15
0x4048:	call	0x1fd0


0x404d:	test	eax, eax
0x404f:	je	0x3fd3


0x3fd3:	mov	rax, qword ptr [rsp + 0x10]
0x3fd8:	lea	r14, [rbp + rbx]
0x3fdd:	mov	rdx, qword ptr [rsp + 0x30]
0x3fe2:	mov	rcx, qword ptr [rsp + 0x28]
0x3fe7:	mov	rdi, qword ptr [rsp + 0x38]
0x3fec:	lea	r13, [rax + r14]
0x3ff0:	sub	rdx, r14
0x3ff3:	mov	rsi, r13
0x3ff6:	call	0x5c30


0x37fc:	movzx	r8d, byte ptr [rsp + 0x38]
0x3802:	movzx	r10d, byte ptr [rsp + 0x30]
0x3808:	mov	r11, rax
0x380b:	mov	r9, qword ptr [rsp + 0x28]
0x3810:	cmp	rbx, r11
0x3813:	mov	byte ptr [rsp + 0x28], r10b
0x3818:	ja	0x3dd0


0x3f80:	movzx	r8d, byte ptr [rsp + 0x40]
0x3f86:	movzx	r10d, byte ptr [rsp + 0x38]
0x3f8c:	mov	r11, rax
0x3f8f:	mov	r9, qword ptr [rsp + 0x30]
0x3f94:	lea	rax, [rsp + 0x9c]
0x3f9c:	xor	ecx, ecx
0x3f9e:	mov	byte ptr [rsp + 0x7e], bl
0x3fa2:	mov	byte ptr [rsp + 0x7d], r8b
0x3fa7:	mov	rbx, rcx
0x3faa:	mov	qword ptr [rsp + 0x88], r9
0x3fb2:	mov	qword ptr [rsp + 0x38], rax
0x3fb7:	mov	byte ptr [rsp + 0x7f], r10b
0x3fbc:	mov	qword ptr [rsp + 0x80], r15
0x3fc4:	mov	qword ptr [rsp + 0x40], r14
0x3fc9:	mov	qword ptr [rsp + 0x70], r13
0x3fce:	mov	qword ptr [rsp + 0x30], r11
0x3fd3:	mov	rax, qword ptr [rsp + 0x10]
0x3fd8:	lea	r14, [rbp + rbx]
0x3fdd:	mov	rdx, qword ptr [rsp + 0x30]
0x3fe2:	mov	rcx, qword ptr [rsp + 0x28]
0x3fe7:	mov	rdi, qword ptr [rsp + 0x38]
0x3fec:	lea	r13, [rax + r14]
0x3ff0:	sub	rdx, r14
0x3ff3:	mov	rsi, r13
0x3ff6:	call	0x5c30


0x3bb8:	mov	rcx, qword ptr [rax]
0x3bbb:	movzx	edx, bl
0x3bbe:	movzx	r10d, byte ptr [rsp + 0x28]
0x3bc4:	movzx	r8d, byte ptr [rsp + 0x30]
0x3bca:	mov	r11, qword ptr [rsp + 0x38]
0x3bcf:	mov	edi, 1
0x3bd4:	movzx	eax, word ptr [rcx + rdx*2]
0x3bd8:	and	ax, 0x4000
0x3bdc:	setne	r12b
0x3be0:	sete	al
0x3be3:	and	al, byte ptr [rsp + 0xd]
0x3be7:	test	al, al
0x3be9:	jne	0x4581


0x3890:	xor	r10d, r10d
0x3893:	cmp	r11, 1
0x3897:	setne	al
0x389a:	cmp	r11, -1
0x389e:	jne	0x38ac


0x38a0:	mov	rax, qword ptr [rsp + 0x10]
0x38a5:	cmp	byte ptr [rax + 1], 0
0x38a9:	setne	al
0x38ac:	cmp	dword ptr [rsp + 8], 2
0x38b1:	sete	dl
0x38b4:	test	al, al
0x38b6:	je	0x3b08


0x38ac:	cmp	dword ptr [rsp + 8], 2
0x38b1:	sete	dl
0x38b4:	test	al, al
0x38b6:	je	0x3b08


0x3b08:	test	rbp, rbp
0x3b0b:	jne	0x38bc


0x38bc:	xor	r12d, r12d
0x38bf:	xor	eax, eax
0x38c1:	nop	dword ptr [rax]
0x38c8:	cmp	byte ptr [rsp + 0xd], 1
0x38cd:	jne	0x39e2


0x3b11:	movzx	eax, byte ptr [rsp + 0xf]
0x3b16:	and	al, dl
0x3b18:	je	0x38c8


0x3b1e:	mov	rbp, r11
0x3b21:	mov	dword ptr [rsp + 8], 2
0x3b29:	jmp	0x4229


0x3f28:	cmp	byte ptr [rsp + 0xf], 0
0x3f2d:	jne	0x4750


0x3970:	cmp	eax, 5
0x3973:	je	0x3ee8


0x3f33:	xor	r12d, r12d
0x3f36:	xor	eax, eax
0x3f38:	mov	ebx, 0x3f
0x3f3d:	jmp	0x38f9


0x4750:	mov	rbp, r11
0x4753:	movzx	eax, byte ptr [rsp + 0xf]
0x4758:	jmp	0x4229


0x3ee8:	test	byte ptr [rsp + 0x78], 4
0x3eed:	je	0x3f10


0x3979:	cmp	eax, 2
0x397c:	mov	ebx, 0x3f
0x3981:	sete	dl
0x3984:	xor	r12d, r12d
0x3987:	xor	eax, eax
0x3989:	jmp	0x38c8


0x3f10:	xor	edx, edx
0x3f12:	xor	r12d, r12d
0x3f15:	xor	eax, eax
0x3f17:	mov	ebx, 0x3f
0x3f1c:	jmp	0x38c8


0x3eef:	lea	rcx, [rbp + 2]
0x3ef3:	cmp	rcx, r11
0x3ef6:	jae	0x3f10


0x3ef8:	mov	rax, qword ptr [rsp + 0x10]
0x3efd:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x3f02:	je	0x4692


0x4692:	movzx	ebx, byte ptr [rax + rcx]
0x4696:	cmp	bl, 0x3e
0x4699:	ja	0x3f10


0x469f:	movabs	rax, 0x7000a38200000000
0x46a9:	bt	rax, rbx
0x46ad:	jae	0x3f10


0x46b3:	cmp	byte ptr [rsp + 0xf], 0
0x46b8:	jne	0x48a2


0x46be:	cmp	r13, r15
0x46c1:	jbe	0x46c8


0x48a2:	mov	rbp, r11
0x48a5:	jmp	0x4240


0x46c8:	lea	rax, [r15 + 1]
0x46cc:	cmp	r13, rax
0x46cf:	jbe	0x46d7


0x46c3:	mov	byte ptr [r14 + r15], 0x3f
0x46c8:	lea	rax, [r15 + 1]
0x46cc:	cmp	r13, rax
0x46cf:	jbe	0x46d7


0x46d7:	lea	rax, [r15 + 2]
0x46db:	cmp	r13, rax
0x46de:	jbe	0x46e6


0x46d1:	mov	byte ptr [r14 + r15 + 1], 0x22
0x46d7:	lea	rax, [r15 + 2]
0x46db:	cmp	r13, rax
0x46de:	jbe	0x46e6


0x46e6:	lea	rax, [r15 + 3]
0x46ea:	cmp	r13, rax
0x46ed:	jbe	0x46f5


0x46e0:	mov	byte ptr [r14 + r15 + 2], 0x22
0x46e6:	lea	rax, [r15 + 3]
0x46ea:	cmp	r13, rax
0x46ed:	jbe	0x46f5


0x46f5:	add	r15, 4
0x46f9:	xor	edx, edx
0x46fb:	xor	r12d, r12d
0x46fe:	xor	eax, eax
0x4700:	mov	rbp, rcx
0x4703:	jmp	0x38c8


0x46ef:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x46f5:	add	r15, 4
0x46f9:	xor	edx, edx
0x46fb:	xor	r12d, r12d
0x46fe:	xor	eax, eax
0x4700:	mov	rbp, rcx
0x4703:	jmp	0x38c8


0x3ea0:	cmp	byte ptr [rsp + 0xf], 0
0x3ea5:	jne	0x4750


0x399e:	mov	byte ptr [rsp + 0x7c], r12b
0x39a3:	xor	edx, edx
0x39a5:	xor	eax, eax
0x39a7:	mov	ebx, 0x27
0x39ac:	jmp	0x38c8


0x3eab:	test	r13, r13
0x3eae:	je	0x42b0


0x42b0:	cmp	r13, r15
0x42b3:	jbe	0x42ba


0x3eb4:	xor	edx, edx
0x3eb6:	cmp	qword ptr [rsp + 0x50], 0
0x3ebc:	jne	0x42b0


0x42ba:	lea	rax, [r15 + 1]
0x42be:	cmp	r13, rax
0x42c1:	jbe	0x42c9


0x42b5:	mov	byte ptr [r14 + r15], 0x27
0x42ba:	lea	rax, [r15 + 1]
0x42be:	cmp	r13, rax
0x42c1:	jbe	0x42c9


0x3ec2:	mov	qword ptr [rsp + 0x50], r13
0x3ec7:	add	r15, 3
0x3ecb:	xor	eax, eax
0x3ecd:	mov	byte ptr [rsp + 0x7c], r12b
0x3ed2:	xor	r8d, r8d
0x3ed5:	mov	r13, rdx
0x3ed8:	mov	ebx, 0x27
0x3edd:	jmp	0x38f9


0x42c9:	lea	rax, [r15 + 2]
0x42cd:	cmp	r13, rax
0x42d0:	jbe	0x48c2


0x42c3:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x42c9:	lea	rax, [r15 + 2]
0x42cd:	cmp	r13, rax
0x42d0:	jbe	0x48c2


0x48c2:	mov	rdx, r13
0x48c5:	mov	r13, qword ptr [rsp + 0x50]
0x48ca:	jmp	0x3ec2


0x42d6:	mov	rdx, r13
0x42d9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x42df:	mov	r13, qword ptr [rsp + 0x50]
0x42e4:	jmp	0x3ec2


0x39d4:	cmp	byte ptr [rsp + 0xd], 0
0x39d9:	jne	0x3a40


0x39db:	mov	ebx, edx
0x39dd:	xor	r12d, r12d
0x39e0:	xor	eax, eax
0x39e2:	cmp	byte ptr [rsp + 0xf], 0
0x39e7:	jne	0x38db


0x3a40:	xor	r12d, r12d
0x3a43:	cmp	dword ptr [rsp + 8], 2
0x3a48:	sete	dl
0x3a4b:	cmp	byte ptr [rsp + 0xf], 0
0x3a50:	mov	eax, edx
0x3a52:	jne	0x42a8


0x3de0:	cmp	byte ptr [rsp + 0xf], 0
0x3de5:	jne	0x4750


0x3a13:	cmp	byte ptr [rsp + 0xd], 0
0x3a18:	je	0x3c30


0x3deb:	add	rbp, 1
0x3def:	mov	eax, r8d
0x3df2:	xor	r12d, r12d
0x3df5:	mov	ebx, 0x5c
0x3dfa:	jmp	0x390c


0x3c30:	mov	edx, 0x5c
0x3c35:	mov	ebx, 0x5c
0x3c3a:	jmp	0x39d4


0x3a1e:	cmp	byte ptr [rsp + 0xf], 0
0x3a23:	je	0x3c30


0x3a29:	cmp	qword ptr [rsp + 0x18], 0
0x3a2f:	jne	0x3deb


0x3a35:	mov	ebx, 0x5c
0x3a3a:	nop	word ptr [rax + rax]
0x3a40:	xor	r12d, r12d
0x3a43:	cmp	dword ptr [rsp + 8], 2
0x3a48:	sete	dl
0x3a4b:	cmp	byte ptr [rsp + 0xf], 0
0x3a50:	mov	eax, edx
0x3a52:	jne	0x42a8


0x3abb:	xor	edx, edx
0x3abd:	test	byte ptr [rsp + 0x78], 1
0x3ac2:	je	0x39db


0x3c83:	cmp	dword ptr [rsp + 8], 2
0x3c88:	sete	dl
0x3c8b:	cmp	byte ptr [rsp + 0xf], 0
0x3c90:	jne	0x482a


0x3ac8:	add	rbp, 1
0x3acc:	jmp	0x3788


0x3c96:	mov	eax, r8d
0x3c99:	mov	rcx, r15
0x3c9c:	xor	eax, 1
0x3c9f:	and	al, dl
0x3ca1:	je	0x3cd0


0x482a:	movzx	ebx, byte ptr [rsp + 0xf]
0x482f:	mov	rbp, r11
0x4832:	mov	eax, edx
0x4834:	mov	byte ptr [rsp + 0xd], bl
0x4838:	jmp	0x4229


0x3cd0:	cmp	r13, rcx
0x3cd3:	jbe	0x3cda


0x3ca3:	cmp	r13, r15
0x3ca6:	jbe	0x3cad


0x3cda:	cmp	dword ptr [rsp + 8], 2
0x3cdf:	lea	r15, [rcx + 1]
0x3ce3:	je	0x42e9


0x3cd5:	mov	byte ptr [r14 + rcx], 0x5c
0x3cda:	cmp	dword ptr [rsp + 8], 2
0x3cdf:	lea	r15, [rcx + 1]
0x3ce3:	je	0x42e9


0x3cad:	lea	rcx, [r15 + 1]
0x3cb1:	cmp	r13, rcx
0x3cb4:	jbe	0x3cbc


0x3ca8:	mov	byte ptr [r14 + r15], 0x27
0x3cad:	lea	rcx, [r15 + 1]
0x3cb1:	cmp	r13, rcx
0x3cb4:	jbe	0x3cbc


0x42e9:	mov	eax, r12d
0x42ec:	mov	ebx, 0x30
0x42f1:	xor	r12d, r12d
0x42f4:	jmp	0x38f9


0x3ce9:	lea	rax, [rbp + 1]
0x3ced:	cmp	rax, r11
0x3cf0:	jae	0x3d0b


0x3cbc:	lea	rcx, [r15 + 2]
0x3cc0:	cmp	r13, rcx
0x3cc3:	ja	0x42f9


0x3cb6:	mov	byte ptr [r14 + r15 + 1], 0x24
0x3cbc:	lea	rcx, [r15 + 2]
0x3cc0:	cmp	r13, rcx
0x3cc3:	ja	0x42f9


0x3cf2:	mov	rax, qword ptr [rsp + 0x10]
0x3cf7:	movzx	eax, byte ptr [rax + rbp + 1]
0x3cfc:	mov	byte ptr [rsp + 0x28], al
0x3d00:	sub	eax, 0x30
0x3d03:	cmp	al, 9
0x3d05:	jbe	0x4539


0x3d0b:	mov	eax, r12d
0x3d0e:	mov	ebx, 0x30
0x3d13:	xor	r12d, r12d
0x3d16:	jmp	0x38c8


0x3cc9:	lea	rcx, [r15 + 3]
0x3ccd:	mov	r8d, eax
0x3cd0:	cmp	r13, rcx
0x3cd3:	jbe	0x3cda


0x42f9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x42ff:	jmp	0x3cc9


0x4539:	cmp	r13, r15
0x453c:	jbe	0x4543


0x4543:	lea	rax, [rcx + 2]
0x4547:	cmp	r13, rax
0x454a:	jbe	0x4552


0x453e:	mov	byte ptr [r14 + r15], 0x30
0x4543:	lea	rax, [rcx + 2]
0x4547:	cmp	r13, rax
0x454a:	jbe	0x4552


0x4552:	mov	eax, r12d
0x4555:	lea	r15, [rcx + 3]
0x4559:	xor	r12d, r12d
0x455c:	mov	ebx, 0x30
0x4561:	jmp	0x38c8


0x454c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x4552:	mov	eax, r12d
0x4555:	lea	r15, [rcx + 3]
0x4559:	xor	r12d, r12d
0x455c:	mov	ebx, 0x30
0x4561:	jmp	0x38c8


0x39c2:	cmp	dword ptr [rsp + 8], 2
0x39c7:	sete	al
0x39ca:	and	al, byte ptr [rsp + 0xf]
0x39ce:	jne	0x3b1e


0x3d80:	mov	edx, 0xd
0x3d85:	xor	r10d, r10d
0x3d88:	mov	ebx, 0x72
0x3d8d:	jmp	0x39c2


0x4304:	test	ebx, ebx
0x4306:	jne	0x3733


0x430c:	mov	byte ptr [rsp + 0xd], 1
0x4311:	test	r13, r13
0x4314:	jne	0x48aa


0x431a:	lea	rax, [rip + 0x1fb6]
0x4321:	mov	qword ptr [rsp + 0x50], 0
0x432a:	mov	byte ptr [rsp + 0xe], 1
0x432f:	mov	byte ptr [rsp + 0x7c], 0
0x4334:	xor	r12d, r12d
0x4337:	mov	byte ptr [rsp + 0xf], 0
0x433c:	mov	qword ptr [rsp + 0x18], 1
0x4345:	mov	qword ptr [rsp + 0x48], rax
0x434a:	mov	r15d, 1
0x4350:	mov	dword ptr [rsp + 8], 2
0x4358:	jmp	0x3773


0x48aa:	mov	byte ptr [rsp + 0xe], 1
0x48af:	xor	eax, eax
0x48b1:	xor	r12d, r12d
0x48b4:	mov	qword ptr [rsp + 0x50], 0
0x48bd:	jmp	0x3e64


0x3e64:	lea	rbx, [rip + 0x246c]
0x3e6b:	mov	byte ptr [r14], 0x27
0x3e6f:	mov	dword ptr [rsp + 8], 2
0x3e77:	mov	r15d, 1
0x3e7d:	mov	qword ptr [rsp + 0x18], 1
0x3e86:	mov	byte ptr [rsp + 0xf], 0
0x3e8b:	mov	qword ptr [rsp + 0x48], rbx
0x3e90:	mov	byte ptr [rsp + 0x7c], al
0x3e94:	jmp	0x3773


0x4368:	test	r13, r13
0x436b:	je	0x4596


0x475d:	lea	rax, [rip + 0x32b7]
0x4764:	mov	byte ptr [rsp + 0xe], 1
0x4769:	mov	byte ptr [rsp + 0x7c], 0
0x476e:	xor	r12d, r12d
0x4771:	mov	qword ptr [rsp + 0x50], 0
0x477a:	mov	byte ptr [rsp + 0xf], 1
0x477f:	mov	byte ptr [rsp + 0xd], 1
0x4784:	mov	qword ptr [rsp + 0x18], 1
0x478d:	xor	r15d, r15d
0x4790:	mov	qword ptr [rsp + 0x48], rax
0x4795:	jmp	0x3773


0x4596:	mov	qword ptr [rsp + 0x50], 0
0x459f:	mov	byte ptr [rsp + 0xe], 1
0x45a4:	xor	r12d, r12d
0x45a7:	mov	byte ptr [rsp + 0x7c], 0
0x45ac:	jmp	0x438b


0x4371:	mov	byte ptr [r14], 0x22
0x4375:	mov	byte ptr [rsp + 0xe], 1
0x437a:	xor	r12d, r12d
0x437d:	mov	byte ptr [rsp + 0x7c], 0
0x4382:	mov	qword ptr [rsp + 0x50], 0
0x438b:	lea	rax, [rip + 0x3689]
0x4392:	mov	byte ptr [rsp + 0xf], 0
0x4397:	mov	byte ptr [rsp + 0xd], 1
0x439c:	mov	qword ptr [rsp + 0x18], 1
0x43a5:	mov	r15d, 1
0x43ab:	mov	qword ptr [rsp + 0x48], rax
0x43b0:	jmp	0x3773


0x438b:	lea	rax, [rip + 0x3689]
0x4392:	mov	byte ptr [rsp + 0xf], 0
0x4397:	mov	byte ptr [rsp + 0xd], 1
0x439c:	mov	qword ptr [rsp + 0x18], 1
0x43a5:	mov	r15d, 1
0x43ab:	mov	qword ptr [rsp + 0x48], rax
0x43b0:	jmp	0x3773


0x43b5:	lea	rax, [rip + 0x365f]
0x43bc:	mov	byte ptr [rsp + 0xe], 1
0x43c1:	mov	byte ptr [rsp + 0x7c], 0
0x43c6:	xor	r12d, r12d
0x43c9:	mov	qword ptr [rsp + 0x50], 0
0x43d2:	mov	byte ptr [rsp + 0xf], 1
0x43d7:	mov	byte ptr [rsp + 0xd], 1
0x43dc:	mov	qword ptr [rsp + 0x18], 1
0x43e5:	xor	r15d, r15d
0x43e8:	mov	qword ptr [rsp + 0x48], rax
0x43ed:	mov	dword ptr [rsp + 8], 5
0x43f5:	jmp	0x3773


0x43fa:	mov	byte ptr [rsp + 0xe], 1
0x43ff:	mov	byte ptr [rsp + 0x7c], 0
0x4404:	xor	r12d, r12d
0x4407:	mov	qword ptr [rsp + 0x50], 0
0x4410:	mov	byte ptr [rsp + 0xf], 0
0x4415:	xor	r15d, r15d
0x4418:	mov	byte ptr [rsp + 0xd], 1
0x441d:	mov	qword ptr [rsp + 0x18], 0
0x4426:	mov	qword ptr [rsp + 0x48], 0
0x442f:	jmp	0x3773


0x4434:	cmp	dword ptr [rsp + 8], 0xa
0x4439:	je	0x4491


0x4491:	xor	r15d, r15d
0x4494:	test	ebx, ebx
0x4496:	je	0x465d


0x443b:	lea	rsi, [rip + 0x35db]
0x4442:	xor	edi, edi
0x4444:	mov	edx, 5
0x4449:	call	0x1da0


0x465d:	mov	rdx, qword ptr [rsp + 0x68]
0x4662:	movzx	eax, byte ptr [rdx]
0x4665:	test	al, al
0x4667:	je	0x449c


0x449c:	test	ebx, ebx
0x449e:	mov	rbx, qword ptr [rsp + 0x60]
0x44a3:	setne	byte ptr [rsp + 0xf]
0x44a8:	xor	r12d, r12d
0x44ab:	mov	rdi, rbx
0x44ae:	call	0x1dc0


0x4679:	add	r15, 1
0x467d:	movzx	eax, byte ptr [rdx + r15]
0x4682:	test	al, al
0x4684:	jne	0x4670


0x4675:	mov	byte ptr [r14 + r15], al
0x4679:	add	r15, 1
0x467d:	movzx	eax, byte ptr [rdx + r15]
0x4682:	test	al, al
0x4684:	jne	0x4670


0x4686:	jmp	0x449c


0x4670:	cmp	r13, r15
0x4673:	jbe	0x4679


0x44b3:	mov	qword ptr [rsp + 0x48], rbx
0x44b8:	mov	qword ptr [rsp + 0x18], rax
0x44bd:	mov	byte ptr [rsp + 0xe], 1
0x44c2:	mov	byte ptr [rsp + 0x7c], 0
0x44c7:	mov	qword ptr [rsp + 0x50], 0
0x44d0:	mov	byte ptr [rsp + 0xd], 1
0x44d5:	jmp	0x3773


0x444e:	mov	rcx, rax
0x4451:	mov	qword ptr [rsp + 0x68], rax
0x4456:	lea	rax, [rip + 0x35c0]
0x445d:	cmp	rcx, rax
0x4460:	je	0x47fe


0x47fe:	mov	esi, dword ptr [rsp + 8]
0x4802:	mov	rdi, rcx
0x4805:	call	0x35b0


0x4466:	lea	rsi, [rip + 0x1e6a]
0x446d:	xor	edi, edi
0x446f:	mov	edx, 5
0x4474:	call	0x1da0


0x4479:	mov	rcx, rax
0x447c:	mov	qword ptr [rsp + 0x60], rax
0x4481:	lea	rax, [rip + 0x1e4f]
0x4488:	cmp	rcx, rax
0x448b:	je	0x4814


0x4814:	mov	esi, dword ptr [rsp + 8]
0x4818:	mov	rdi, rcx
0x481b:	call	0x35b0


0x4820:	mov	qword ptr [rsp + 0x60], rax
0x4825:	jmp	0x4491


0x480a:	mov	qword ptr [rsp + 0x68], rax
0x480f:	jmp	0x4466


0x44da:	mov	byte ptr [rsp + 0xe], 1
0x44df:	mov	byte ptr [rsp + 0x7c], 0
0x44e4:	xor	r12d, r12d
0x44e7:	mov	qword ptr [rsp + 0x50], 0
0x44f0:	mov	byte ptr [rsp + 0xf], 0
0x44f5:	xor	r15d, r15d
0x44f8:	mov	byte ptr [rsp + 0xd], 0
0x44fd:	mov	qword ptr [rsp + 0x18], 0
0x4506:	mov	qword ptr [rsp + 0x48], 0
0x450f:	jmp	0x3773


0x4514:	mov	byte ptr [rsp + 0xe], 1
0x4519:	mov	byte ptr [rsp + 0x7c], 0
0x451e:	xor	r12d, r12d
0x4521:	mov	qword ptr [rsp + 0x50], 0
0x452a:	mov	byte ptr [rsp + 0xf], 1
0x452f:	mov	byte ptr [rsp + 0xd], 1
0x4534:	jmp	0x3753


0x3753:	lea	rax, [rip + 0x2b7d]
0x375a:	mov	qword ptr [rsp + 0x18], 1
0x3763:	xor	r15d, r15d
0x3766:	mov	dword ptr [rsp + 8], 2
0x376e:	mov	qword ptr [rsp + 0x48], rax
0x3773:	xor	r11d, r11d
0x3776:	mov	rax, rbp
0x3779:	mov	r8d, r12d
0x377c:	mov	rbp, r11
0x377f:	mov	r11, rax
0x3782:	nop	word ptr [rax + rax]
0x3788:	cmp	r11, rbp
0x378b:	setne	r12b
0x378f:	cmp	r11, -1
0x3793:	jne	0x37a2


0x4708:	test	ebx, ebx
0x470a:	je	0x4898


0x4898:	mov	byte ptr [rsp + 0xd], 0
0x489d:	jmp	0x4311


0x4710:	lea	rax, [rip + 0x1bc0]
0x4717:	mov	byte ptr [rsp + 0xe], 1
0x471c:	mov	byte ptr [rsp + 0x7c], 0
0x4721:	xor	r12d, r12d
0x4724:	mov	qword ptr [rsp + 0x50], 0
0x472d:	mov	byte ptr [rsp + 0xf], 1
0x4732:	mov	byte ptr [rsp + 0xd], 0
0x4737:	mov	qword ptr [rsp + 0x18], 1
0x4740:	xor	r15d, r15d
0x4743:	mov	qword ptr [rsp + 0x48], rax
0x4748:	jmp	0x3773


0x4311:	test	r13, r13
0x4314:	jne	0x48aa


0x48d4:	nop	
0x48d6:	nop	word ptr cs:[rax + rax]


0x4a8b:	nop	dword ptr [rax + rax]


0x4ac6:	nop	word ptr cs:[rax + rax]


0x4ae1:	nop	dword ptr [rax + rax]
0x4ae6:	nop	word ptr cs:[rax + rax]


0x4b01:	nop	dword ptr [rax + rax]
0x4b06:	nop	word ptr cs:[rax + rax]


0x4b45:	nop	
0x4b46:	nop	word ptr cs:[rax + rax]


0x4b65:	nop	
0x4b66:	nop	word ptr cs:[rax + rax]


0x4c14:	nop	
0x4c16:	nop	word ptr cs:[rax + rax]


0x4d03:	nop	dword ptr [rax]
0x4d06:	nop	word ptr cs:[rax + rax]


0x4d1a:	nop	word ptr [rax + rax]


0x4db3:	nop	dword ptr [rax]
0x4db6:	nop	word ptr cs:[rax + rax]


0x4dd3:	nop	dword ptr [rax]
0x4dd6:	nop	word ptr cs:[rax + rax]


0x4dec:	nop	dword ptr [rax]


0x4e08:	nop	dword ptr [rax + rax]


0x4e24:	nop	
0x4e26:	nop	word ptr cs:[rax + rax]


0x4ebe:	nop	


0x4f4a:	nop	word ptr [rax + rax]


0x4f5c:	nop	dword ptr [rax]


0x4f6f:	nop	


0x5008:	nop	dword ptr [rax + rax]


0x5031:	nop	dword ptr [rax + rax]
0x5036:	nop	word ptr cs:[rax + rax]


0x504a:	nop	word ptr [rax + rax]


0x50de:	nop	


0x5171:	nop	dword ptr [rax + rax]
0x5176:	nop	word ptr cs:[rax + rax]


0x518c:	nop	dword ptr [rax]


0x51a7:	nop	word ptr [rax + rax]


0x51c3:	nop	dword ptr [rax]
0x51c6:	nop	word ptr cs:[rax + rax]


0x51dc:	nop	dword ptr [rax]


0x51f4:	nop	
0x51f6:	nop	word ptr cs:[rax + rax]


0x5213:	nop	dword ptr [rax]
0x5216:	nop	word ptr cs:[rax + rax]


0x5238:	nop	dword ptr [rax + rax]


0x5657:	nop	word ptr [rax + rax]


0x56f8:	nop	dword ptr [rax + rax]


0x57d5:	nop	
0x57d6:	nop	word ptr cs:[rax + rax]


0x587a:	nop	word ptr [rax + rax]


0x58a4:	nop	
0x58a6:	nop	word ptr cs:[rax + rax]


0x58b2:	nop	dword ptr [rax]
0x58b6:	nop	word ptr cs:[rax + rax]


0x58f6:	nop	word ptr cs:[rax + rax]


0x5924:	nop	
0x5926:	nop	word ptr cs:[rax + rax]


0x59b2:	nop	dword ptr [rax]
0x59b6:	nop	word ptr cs:[rax + rax]


0x5a0a:	nop	word ptr [rax + rax]


0x5a27:	nop	word ptr [rax + rax]


0x5a5e:	nop	


0x5a88:	nop	dword ptr [rax + rax]


0x5aa3:	nop	word ptr cs:[rax + rax]
0x5aad:	nop	dword ptr [rax]


0x5ae5:	nop	word ptr cs:[rax + rax]
0x5aef:	nop	


0x5b08:	nop	dword ptr [rax + rax]


0x5b8b:	nop	dword ptr [rax + rax]


0x5c27:	nop	word ptr [rax + rax]


0x5cb3:	nop	word ptr cs:[rax + rax]
0x5cbd:	nop	dword ptr [rax]


0x5cff:	nop	


0x5d16:	nop	word ptr cs:[rax + rax]


0x5d36:	nop	word ptr cs:[rax + rax]


0x5de1:	nop	dword ptr [rax + rax]
0x5de6:	nop	word ptr cs:[rax + rax]


0x5e05:	nop	
0x5e06:	nop	word ptr cs:[rax + rax]


0x5f38:	nop	dword ptr [rax + rax]


0x5faa:	nop	word ptr [rax + rax]


0x5fda:	nop	word ptr [rax + rax]


0x605d:	nop	dword ptr [rax]


0x60fc:	nop	dword ptr [rax]


0x6165:	nop	
0x6166:	nop	word ptr cs:[rax + rax]


0x6172:	nop	word ptr cs:[rax + rax]
0x617c:	nop	dword ptr [rax]


0x3960:	xor	r10d, r10d
0x3963:	mov	eax, dword ptr [rsp + 8]
0x3967:	cmp	eax, 2
0x396a:	je	0x3f28


0x3990:	xor	r10d, r10d
0x3993:	cmp	dword ptr [rsp + 8], 2
0x3998:	je	0x3ea0


0x39b8:	mov	edx, 9
0x39bd:	mov	ebx, 0x74
0x39c2:	cmp	dword ptr [rsp + 8], 2
0x39c7:	sete	al
0x39ca:	and	al, byte ptr [rsp + 0xf]
0x39ce:	jne	0x3b1e


0x39f8:	mov	edx, 8
0x39fd:	mov	ebx, 0x62
0x3a02:	jmp	0x39d4


0x3a08:	cmp	dword ptr [rsp + 8], 2
0x3a0d:	je	0x3de0


0x3ab0:	cmp	byte ptr [rsp + 0xd], 0
0x3ab5:	jne	0x3c83


0x3ad8:	cmp	dword ptr [rsp + 8], 2
0x3add:	sete	dl
0x3ae0:	xor	eax, eax
0x3ae2:	jmp	0x38c8


0x3af0:	mov	edx, 7
0x3af5:	mov	ebx, 0x61
0x3afa:	jmp	0x39d4


0x3b00:	cmp	dword ptr [rsp + 8], 2
0x3b05:	sete	dl
0x3b08:	test	rbp, rbp
0x3b0b:	jne	0x38bc


0x3b30:	cmp	dword ptr [rsp + 8], 2
0x3b35:	sete	dl
0x3b38:	xor	r12d, r12d
0x3b3b:	jmp	0x3b11


0x3b40:	cmp	dword ptr [rsp + 8], 2
0x3b45:	mov	ebx, 0x20
0x3b4a:	sete	dl
0x3b4d:	jmp	0x3b11


0x3b50:	mov	edx, 0xd
0x3b55:	mov	ebx, 0x72
0x3b5a:	jmp	0x39c2


0x3b60:	mov	edx, 0xc
0x3b65:	mov	ebx, 0x66
0x3b6a:	jmp	0x39d4


0x3b70:	mov	edx, 0xb
0x3b75:	mov	ebx, 0x76
0x3b7a:	jmp	0x39d4


0x3b80:	mov	edx, 0xa
0x3b85:	mov	ebx, 0x6e
0x3b8a:	jmp	0x39c2


0x3c20:	xor	r10d, r10d
0x3c23:	cmp	byte ptr [rsp + 0xd], 0
0x3c28:	jne	0x3a1e


0x3c40:	mov	edx, 0xc
0x3c45:	xor	r10d, r10d
0x3c48:	mov	ebx, 0x66
0x3c4d:	jmp	0x39d4


0x3c58:	mov	edx, 0xa
0x3c5d:	xor	r10d, r10d
0x3c60:	mov	ebx, 0x6e
0x3c65:	jmp	0x39c2


0x3c70:	mov	ebx, 0x61
0x3c75:	jmp	0x3a40


0x3c80:	xor	r10d, r10d
0x3c83:	cmp	dword ptr [rsp + 8], 2
0x3c88:	sete	dl
0x3c8b:	cmp	byte ptr [rsp + 0xf], 0
0x3c90:	jne	0x482a


0x3d20:	cmp	dword ptr [rsp + 8], 2
0x3d25:	mov	r12d, r10d
0x3d28:	sete	dl
0x3d2b:	xor	r10d, r10d
0x3d2e:	xor	eax, eax
0x3d30:	jmp	0x38c8


0x3d38:	cmp	dword ptr [rsp + 8], 2
0x3d3d:	sete	dl
0x3d40:	xor	r10d, r10d
0x3d43:	jmp	0x3b08


0x3d50:	cmp	dword ptr [rsp + 8], 2
0x3d55:	sete	dl
0x3d58:	xor	r10d, r10d
0x3d5b:	xor	r12d, r12d
0x3d5e:	jmp	0x3b11


0x3d68:	cmp	dword ptr [rsp + 8], 2
0x3d6d:	mov	r12d, r10d
0x3d70:	mov	ebx, 0x20
0x3d75:	sete	dl
0x3d78:	xor	r10d, r10d
0x3d7b:	jmp	0x3b11


0x3d98:	mov	ebx, 0x76
0x3d9d:	jmp	0x3a40


0x3da8:	mov	edx, 9
0x3dad:	xor	r10d, r10d
0x3db0:	mov	ebx, 0x74
0x3db5:	jmp	0x39c2


0x3dc0:	mov	ebx, 0x62
0x3dc5:	jmp	0x3a40


0x4360:	test	ebx, ebx
0x4362:	jne	0x475d


0x20bb:	nop	dword ptr [rax + rax]


0x20ff:	nop	


0x2108:	nop	dword ptr [rax + rax]


0x24f6:	nop	word ptr cs:[rax + rax]


0x2547:	nop	word ptr [rax + rax]


0x2591:	nop	dword ptr [rax]


0x25d1:	nop	dword ptr [rax]


0x2687:	nop	word ptr [rax + rax]


0x2698:	nop	dword ptr [rax + rax]


0x270c:	nop	dword ptr [rax]


0x2715:	nop	dword ptr [rax]


0x2731:	nop	dword ptr [rax]


0x274e:	nop	


0x2769:	nop	dword ptr [rax]


0x2772:	nop	word ptr [rax + rax]


0x28e5:	nop	dword ptr [rax]


0x29aa:	nop	word ptr [rax + rax]


0x29f2:	nop	word ptr [rax + rax]


0x2a0f:	nop	


0x2a19:	nop	dword ptr [rax]


0x2a76:	nop	word ptr cs:[rax + rax]


0x2c47:	nop	word ptr [rax + rax]


0x3149:	nop	dword ptr [rax]


0x326b:	nop	dword ptr [rax + rax]


0x3287:	nop	word ptr [rax + rax]


0x32dc:	nop	dword ptr [rax]


0x32fe:	nop	


0x3452:	nop	word ptr [rax + rax]


0x3461:	nop	dword ptr [rax]


0x3498:	nop	dword ptr [rax + rax]


0x34b8:	nop	dword ptr [rax + rax]


0x34df:	nop	


0x34e7:	nop	word ptr [rax + rax]


0x34f9:	nop	dword ptr [rax]


0x35ec:	nop	dword ptr [rax]


0x363d:	nop	dword ptr [rax]


0x3868:	nop	dword ptr [rax + rax]


0x3957:	nop	word ptr [rax + rax]


0x398e:	nop	


0x39b1:	nop	dword ptr [rax]


0x39f2:	nop	word ptr [rax + rax]


0x3a04:	nop	dword ptr [rax]


0x3aa8:	nop	dword ptr [rax + rax]


0x3ad1:	nop	dword ptr [rax]


0x3ae7:	nop	word ptr [rax + rax]


0x3aff:	nop	


0x3b2e:	nop	


0x3b3d:	nop	dword ptr [rax]


0x3b4f:	nop	


0x3b5f:	nop	


0x3b6f:	nop	


0x3b7f:	nop	


0x3b8f:	nop	


0x3bfc:	nop	dword ptr [rax]


0x3c1c:	nop	dword ptr [rax]


0x3c2e:	nop	


0x3c3f:	nop	


0x3c52:	nop	word ptr [rax + rax]


0x3c6a:	nop	word ptr [rax + rax]


0x3c7a:	nop	word ptr [rax + rax]


0x3d1b:	nop	dword ptr [rax + rax]


0x3d35:	nop	dword ptr [rax]


0x3d48:	nop	dword ptr [rax + rax]


0x3d63:	nop	dword ptr [rax + rax]


0x3d92:	nop	word ptr [rax + rax]


0x3da2:	nop	word ptr [rax + rax]


0x3dba:	nop	word ptr [rax + rax]


0x3dca:	nop	word ptr [rax + rax]


0x3dd8:	nop	dword ptr [rax + rax]


0x3dff:	nop	


0x3e99:	nop	dword ptr [rax]


0x3ee2:	nop	word ptr [rax + rax]


0x3f08:	nop	dword ptr [rax + rax]


0x3f21:	nop	dword ptr [rax]


0x3f42:	nop	word ptr [rax + rax]


0x40a8:	nop	dword ptr [rax + rax]


0x41bb:	nop	dword ptr [rax + rax]


0x41de:	nop	


0x42a5:	nop	dword ptr [rax]


0x435d:	nop	dword ptr [rax]


0x4566:	nop	word ptr cs:[rax + rax]


0x45f9:	nop	dword ptr [rax]


0x466d:	nop	dword ptr [rax]


0x474d:	nop	dword ptr [rax]


0x4a5b:	nop	dword ptr [rax + rax]


0x52e6:	nop	word ptr cs:[rax + rax]


0x5375:	nop	dword ptr [rax]


0x5396:	nop	word ptr cs:[rax + rax]


0x53f5:	nop	dword ptr [rax]


0x5431:	nop	dword ptr [rax]


0x5478:	nop	dword ptr [rax + rax]


0x54c7:	nop	word ptr [rax + rax]


0x5524:	nop	dword ptr [rax]


0x5552:	nop	word ptr [rax + rax]


0x5606:	nop	word ptr cs:[rax + rax]


0x5669:	nop	dword ptr [rax]


0x58e2:	nop	word ptr [rax + rax]


0x5969:	nop	dword ptr [rax]


0x5994:	nop	dword ptr [rax]


0x59ed:	nop	dword ptr [rax]


0x5b55:	nop	dword ptr [rax]


0x5bb3:	nop	dword ptr [rax + rax]


0x5bdf:	nop	


0x5d0f:	nop	


0x5d2f:	nop	


0x5dad:	nop	dword ptr [rax]


0x5edf:	nop	


0x5f09:	nop	dword ptr [rax]


0x5f26:	nop	word ptr cs:[rax + rax]


0x5f53:	nop	dword ptr [rax + rax]


0x5f87:	nop	word ptr [rax + rax]


0x5fbb:	nop	dword ptr [rax + rax]


0x5fd4:	nop	dword ptr [rax]


0x6014:	nop	dword ptr [rax]


0x6031:	nop	dword ptr [rax]


0x6042:	nop	word ptr [rax + rax]


0x609a:	nop	word ptr [rax + rax]


0x60e6:	nop	word ptr cs:[rax + rax]


