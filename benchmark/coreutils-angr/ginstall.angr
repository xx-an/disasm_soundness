0x163a0:	sub	rsp, 8
0x163a4:	add	rsp, 8
0x163a8:	ret	


0x16390:	mov	rdx, qword ptr [rip + 0x206c71]
0x16397:	xor	esi, esi
0x16399:	jmp	0x2ff0


0x16380:	ret	


0x16310:	push	r15
0x16312:	push	r14
0x16314:	mov	r15, rdx
0x16317:	push	r13
0x16319:	push	r12
0x1631b:	lea	r12, [rip + 0x20638e]
0x16322:	push	rbp
0x16323:	lea	rbp, [rip + 0x20638e]
0x1632a:	push	rbx
0x1632b:	mov	r13d, edi
0x1632e:	mov	r14, rsi
0x16331:	sub	rbp, r12
0x16334:	sub	rsp, 8
0x16338:	sar	rbp, 3
0x1633c:	call	0x28c0


0x15620:	push	r15
0x15622:	push	r14
0x15624:	lea	rcx, [rsi + 0x20]
0x15628:	push	r13
0x1562a:	push	r12
0x1562c:	lea	rax, [rdx + 0x10]
0x15630:	push	rbp
0x15631:	push	rbx
0x15632:	mov	r14, rsi
0x15635:	mov	r15, rdx
0x15638:	xor	ebx, ebx
0x1563a:	mov	r9d, 7
0x15640:	sub	rsp, 0x58
0x15644:	mov	r10d, 7
0x1564a:	mov	qword ptr [rsi], 0
0x15651:	mov	qword ptr [rsi + 8], rcx
0x15655:	mov	qword ptr [rsp + 0x28], rcx
0x1565a:	mov	r8, -1
0x15661:	mov	qword ptr [rdx], 0
0x15668:	mov	qword ptr [rsp + 8], rax
0x1566d:	mov	qword ptr [rdx + 8], rax
0x15671:	mov	qword ptr [rsp + 0x18], 0
0x1567a:	mov	qword ptr [rsp + 0x10], 0
0x15683:	mov	qword ptr [rsp + 0x20], 0
0x1568c:	jmp	0x1569b


0x15420:	cmp	qword ptr [rsi], 0
0x15424:	mov	rax, qword ptr [rsi + 8]
0x15428:	je	0x1548d


0x15380:	push	r12
0x15382:	push	rbp
0x15383:	mov	rbp, rsi
0x15386:	push	rbx
0x15387:	call	0x2f90


0x14260:	push	rbp
0x14261:	mov	rbp, rsp
0x14264:	push	r15
0x14266:	push	r14
0x14268:	push	r13
0x1426a:	push	r12
0x1426c:	lea	r14, [rbp - 0x3b0]
0x14273:	push	rbx
0x14274:	mov	rbx, rdx
0x14277:	mov	r12, rcx
0x1427a:	mov	rdx, r14
0x1427d:	sub	rsp, 0x408
0x14284:	mov	qword ptr [rbp - 0x418], rsi
0x1428b:	lea	rsi, [rbp - 0x2c0]
0x14292:	mov	qword ptr [rbp - 0x3e8], rdi
0x14299:	mov	rdi, rbx
0x1429c:	mov	qword ptr [rbp - 0x410], r14
0x142a3:	mov	rax, qword ptr fs:[0x28]
0x142ac:	mov	qword ptr [rbp - 0x38], rax
0x142b0:	xor	eax, eax
0x142b2:	mov	qword ptr [rbp - 0x408], rsi
0x142b9:	call	0x15620


0x14250:	or	dword ptr [rdi], 0x20
0x14253:	ret	


0x13fd0:	push	r12
0x13fd2:	push	rbp
0x13fd3:	mov	ebp, edi
0x13fd5:	push	rbx
0x13fd6:	sub	rsp, 0x50
0x13fda:	mov	rax, qword ptr fs:[0x28]
0x13fe3:	mov	qword ptr [rsp + 0x18], rax
0x13fe8:	xor	eax, eax
0x13fea:	lea	rax, [rsp + 0x70]
0x13fef:	test	esi, esi
0x13ff1:	mov	qword ptr [rsp + 0x30], rdx
0x13ff6:	mov	qword ptr [rsp + 0x38], rcx
0x13ffb:	mov	qword ptr [rsp + 0x40], r8
0x14000:	mov	qword ptr [rsp + 8], rax
0x14005:	lea	rax, [rsp + 0x20]
0x1400a:	mov	qword ptr [rsp + 0x48], r9
0x1400f:	mov	dword ptr [rsp], 0x10
0x14016:	mov	qword ptr [rsp + 0x10], rax
0x1401b:	je	0x14222


0x13f50:	push	r12
0x13f52:	push	rbp
0x13f53:	push	rbx
0x13f54:	mov	rbx, rdi
0x13f57:	call	0x2db0


0x13f40:	mov	edx, 3
0x13f45:	xor	esi, esi
0x13f47:	xor	eax, eax
0x13f49:	jmp	0x13fd0


0x13d00:	push	r13
0x13d02:	push	r12
0x13d04:	lea	r12, [rdi + 0x800]
0x13d0b:	push	rbp
0x13d0c:	mov	rdx, rdi
0x13d0f:	push	rbx
0x13d10:	mov	rax, rdi
0x13d13:	movabs	rcx, 0x98f5704f6c44c0ab
0x13d1d:	movabs	r10, 0xae985bf2cbfc89ed
0x13d27:	movabs	rbp, 0x48fe4a0fa5a09315
0x13d31:	movabs	rsi, 0x82f053db8355e0ce
0x13d3b:	movabs	r8, 0xb29b2e824a595524
0x13d45:	movabs	rbx, 0x8c0ea5053d4712a0
0x13d4f:	movabs	r11, 0xb9f8b322c73ac862
0x13d59:	movabs	r9, 0x647c4677a2884b7c
0x13d63:	nop	dword ptr [rax + rax]
0x13d68:	add	rsi, qword ptr [rax + 0x20]
0x13d6c:	add	rcx, qword ptr [rax + 0x38]
0x13d70:	mov	r13, qword ptr [rax]
0x13d73:	add	rbp, qword ptr [rax + 0x28]
0x13d77:	add	r10, qword ptr [rax + 0x30]
0x13d7b:	sub	r13, rsi
0x13d7e:	add	r9, r13
0x13d81:	mov	r13, rcx
0x13d84:	shr	r13, 9
0x13d88:	add	rcx, r9
0x13d8b:	xor	rbp, r13
0x13d8e:	mov	r13, qword ptr [rax + 8]
0x13d92:	sub	r13, rbp
0x13d95:	add	r11, r13
0x13d98:	mov	r13, r9
0x13d9b:	shl	r13, 9
0x13d9f:	add	r9, r11
0x13da2:	xor	r10, r13
0x13da5:	mov	r13, qword ptr [rax + 0x10]
0x13da9:	sub	r13, r10
0x13dac:	add	rbx, r13
0x13daf:	mov	r13, r11
0x13db2:	shr	r13, 0x17
0x13db6:	add	r11, rbx
0x13db9:	xor	rcx, r13
0x13dbc:	mov	r13, qword ptr [rax + 0x18]
0x13dc0:	sub	r13, rcx
0x13dc3:	add	r8, r13
0x13dc6:	mov	r13, rbx
0x13dc9:	shl	r13, 0xf
0x13dcd:	add	rbx, r8
0x13dd0:	xor	r9, r13
0x13dd3:	mov	r13, r8
0x13dd6:	sub	rsi, r9
0x13dd9:	shr	r13, 0xe
0x13ddd:	mov	qword ptr [rax], r9
0x13de0:	xor	r11, r13
0x13de3:	mov	r13, rsi
0x13de6:	add	r8, rsi
0x13de9:	sub	rbp, r11
0x13dec:	shl	r13, 0x14
0x13df0:	mov	qword ptr [rax + 8], r11
0x13df4:	xor	rbx, r13
0x13df7:	lea	r13, [rsi + rbp]
0x13dfb:	mov	rsi, rbp
0x13dfe:	sub	r10, rbx
0x13e01:	shr	rsi, 0x11
0x13e05:	mov	qword ptr [rax + 0x10], rbx
0x13e09:	xor	r8, rsi
0x13e0c:	mov	rsi, r10
0x13e0f:	add	rbp, r10
0x13e12:	sub	rcx, r8
0x13e15:	shl	rsi, 0xe
0x13e19:	mov	qword ptr [rax + 0x18], r8
0x13e1d:	xor	rsi, r13
0x13e20:	add	r10, rcx
0x13e23:	mov	qword ptr [rax + 0x28], rbp
0x13e27:	mov	qword ptr [rax + 0x20], rsi
0x13e2b:	mov	qword ptr [rax + 0x30], r10
0x13e2f:	add	rax, 0x40
0x13e33:	mov	qword ptr [rax - 8], rcx
0x13e37:	cmp	r12, rax
0x13e3a:	jne	0x13d68


0x13a70:	mov	rax, qword ptr [rdi + 0x810]
0x13a77:	mov	rdx, qword ptr [rdi + 0x800]
0x13a7e:	lea	r9, [rdi + 0x400]
0x13a85:	lea	rcx, [rax + 1]
0x13a89:	mov	rax, rdi
0x13a8c:	mov	qword ptr [rdi + 0x810], rcx
0x13a93:	add	rcx, qword ptr [rdi + 0x808]
0x13a9a:	nop	word ptr [rax + rax]
0x13aa0:	mov	r8, rdx
0x13aa3:	shl	r8, 0x15
0x13aa7:	xor	rdx, r8
0x13aaa:	mov	r8, qword ptr [rax]
0x13aad:	not	rdx
0x13ab0:	add	rdx, qword ptr [rax + 0x400]
0x13ab7:	mov	r10, r8
0x13aba:	and	r10d, 0x7f8
0x13ac1:	mov	r11, qword ptr [rdi + r10]
0x13ac5:	mov	r10, rdx
0x13ac8:	shr	r10, 5
0x13acc:	add	r11, rdx
0x13acf:	xor	rdx, r10
0x13ad2:	add	rcx, r11
0x13ad5:	mov	qword ptr [rax], rcx
0x13ad8:	shr	rcx, 8
0x13adc:	and	ecx, 0x7f8
0x13ae2:	mov	r11, qword ptr [rdi + rcx]
0x13ae6:	add	r11, r8
0x13ae9:	mov	qword ptr [rsi], r11
0x13aec:	add	rdx, qword ptr [rax + 0x408]
0x13af3:	mov	rcx, qword ptr [rax + 8]
0x13af7:	mov	r10, rdx
0x13afa:	mov	rdx, rcx
0x13afd:	and	edx, 0x7f8
0x13b03:	mov	r8, qword ptr [rdi + rdx]
0x13b07:	mov	rdx, r10
0x13b0a:	shl	rdx, 0xc
0x13b0e:	xor	rdx, r10
0x13b11:	add	r8, r10
0x13b14:	add	r8, r11
0x13b17:	mov	qword ptr [rax + 8], r8
0x13b1b:	shr	r8, 8
0x13b1f:	and	r8d, 0x7f8
0x13b26:	add	rcx, qword ptr [rdi + r8]
0x13b2a:	mov	qword ptr [rsi + 8], rcx
0x13b2e:	mov	r8, qword ptr [rax + 0x10]
0x13b32:	mov	r11, rcx
0x13b35:	add	rdx, qword ptr [rax + 0x410]
0x13b3c:	mov	rcx, r8
0x13b3f:	and	ecx, 0x7f8
0x13b45:	mov	r10, qword ptr [rdi + rcx]
0x13b49:	add	r10, rdx
0x13b4c:	mov	rcx, r10
0x13b4f:	add	rcx, r11
0x13b52:	mov	qword ptr [rax + 0x10], rcx
0x13b56:	shr	rcx, 8
0x13b5a:	and	ecx, 0x7f8
0x13b60:	mov	r10, qword ptr [rdi + rcx]
0x13b64:	mov	rcx, rdx
0x13b67:	shr	rcx, 0x21
0x13b6b:	xor	rdx, rcx
0x13b6e:	add	r10, r8
0x13b71:	mov	qword ptr [rsi + 0x10], r10
0x13b75:	mov	rcx, qword ptr [rax + 0x18]
0x13b79:	add	rdx, qword ptr [rax + 0x418]
0x13b80:	mov	r8, rcx
0x13b83:	and	r8d, 0x7f8
0x13b8a:	mov	r11, qword ptr [rdi + r8]
0x13b8e:	add	r11, rdx
0x13b91:	mov	r8, r11
0x13b94:	add	r8, r10
0x13b97:	add	rax, 0x20
0x13b9b:	add	rsi, 0x20
0x13b9f:	mov	qword ptr [rax - 8], r8
0x13ba3:	shr	r8, 8
0x13ba7:	and	r8d, 0x7f8
0x13bae:	add	rcx, qword ptr [rdi + r8]
0x13bb2:	mov	qword ptr [rsi - 8], rcx
0x13bb6:	cmp	rax, r9
0x13bb9:	jb	0x13aa0


0x13a20:	push	rbp
0x13a21:	push	rbx
0x13a22:	mov	rdx, -1
0x13a29:	mov	rbx, rdi
0x13a2c:	mov	esi, 0x1038
0x13a31:	sub	rsp, 8
0x13a35:	mov	rbp, qword ptr [rdi]
0x13a38:	call	0x2f50


0x13880:	push	r15
0x13882:	push	r14
0x13884:	push	r13
0x13886:	push	r12
0x13888:	mov	r12, rdi
0x1388b:	push	rbp
0x1388c:	push	rbx
0x1388d:	mov	rbp, rdx
0x13890:	mov	rbx, rsi
0x13893:	sub	rsp, 0x18
0x13897:	mov	rcx, qword ptr [rdi]
0x1389a:	test	rcx, rcx
0x1389d:	mov	qword ptr [rsp + 8], rcx
0x138a2:	je	0x13908


0x13870:	mov	qword ptr [rdi + 0x10], rsi
0x13874:	ret	


0x13860:	mov	qword ptr [rdi + 8], rsi
0x13864:	ret	


0x13530:	push	r15
0x13532:	push	r14
0x13534:	push	r13
0x13536:	push	r12
0x13538:	push	rbp
0x13539:	push	rbx
0x1353a:	sub	rsp, 0x38
0x1353e:	mov	rax, qword ptr fs:[0x28]
0x13547:	mov	qword ptr [rsp + 0x28], rax
0x1354c:	xor	eax, eax
0x1354e:	test	rsi, rsi
0x13551:	je	0x13678


0x134d0:	push	rbp
0x134d1:	push	rbx
0x134d2:	sub	rsp, 8
0x134d6:	test	rdi, rdi
0x134d9:	je	0x13518


0x13470:	push	r13
0x13472:	push	r12
0x13474:	push	rbp
0x13475:	push	rbx
0x13476:	mov	rbx, rdi
0x13479:	sub	rsp, 8
0x1347d:	mov	rdi, qword ptr [rdi]
0x13480:	call	0x13a20


0x13450:	push	rbx
0x13451:	mov	rdx, -1
0x13458:	mov	rbx, rdi
0x1345b:	mov	esi, 0x18
0x13460:	call	0x2f50


0x13330:	push	r15
0x13332:	push	r14
0x13334:	lea	r15, [rsi + 1]
0x13338:	push	r13
0x1333a:	push	r12
0x1333c:	mov	r13, rdi
0x1333f:	push	rbp
0x13340:	push	rbx
0x13341:	mov	r14, rsi
0x13344:	sub	rsp, 0x28
0x13348:	mov	rbp, qword ptr [rdi + 8]
0x1334c:	mov	rbx, qword ptr [rdi + 0x10]
0x13350:	mov	rax, qword ptr fs:[0x28]
0x13359:	mov	qword ptr [rsp + 0x18], rax
0x1335e:	xor	eax, eax
0x13360:	mov	rax, qword ptr [rdi]
0x13363:	lea	r12, [rsp + 0x10]
0x13368:	mov	qword ptr [rsp + 8], rax
0x1336d:	jmp	0x133a5


0x13320:	mov	rax, qword ptr [rdi]
0x13323:	ret	


0x132e0:	push	rbx
0x132e1:	call	0x13530


0x132b0:	push	rbx
0x132b1:	mov	rbx, rdi
0x132b4:	mov	edi, 0x18
0x132b9:	call	0x12010


0x13240:	sub	rsp, 0x58
0x13244:	mov	qword ptr [rsp + 0x38], rcx
0x13249:	xor	ecx, ecx
0x1324b:	mov	rax, qword ptr fs:[0x28]
0x13254:	mov	qword ptr [rsp + 0x18], rax
0x13259:	xor	eax, eax
0x1325b:	test	dl, 0x40
0x1325e:	jne	0x13288


0x13020:	push	r15
0x13022:	push	r14
0x13024:	mov	r15d, edx
0x13027:	push	r13
0x13029:	push	r12
0x1302b:	mov	r13d, ecx
0x1302e:	push	rbp
0x1302f:	push	rbx
0x13030:	mov	ebp, edi
0x13032:	mov	r12, rsi
0x13035:	mov	r14d, r9d
0x13038:	sub	rsp, 0xb8
0x1303f:	mov	rax, qword ptr fs:[0x28]
0x13048:	mov	qword ptr [rsp + 0xa8], rax
0x13050:	xor	eax, eax
0x13052:	test	edi, edi
0x13054:	mov	dword ptr [rsp + 0xc], r8d
0x13059:	lea	rdx, [rsp + 0x10]
0x1305e:	js	0x13130


0x12fe0:	sub	rsp, 8
0x12fe4:	mov	edi, 0xe
0x12fe9:	call	0x2e10


0x12fa0:	movsx	rcx, byte ptr [rdi]
0x12fa4:	test	cl, cl
0x12fa6:	je	0x12fd0


0x12f40:	sub	rsp, 8
0x12f44:	xor	esi, esi
0x12f46:	call	0x2ed0


0x12ef0:	sub	rsp, 0x28
0x12ef4:	xor	edi, edi
0x12ef6:	mov	rsi, rsp
0x12ef9:	mov	rax, qword ptr fs:[0x28]
0x12f02:	mov	qword ptr [rsp + 0x18], rax
0x12f07:	xor	eax, eax
0x12f09:	call	0x2a10


0x12ee0:	mov	rsi, rdi
0x12ee3:	xor	edi, edi
0x12ee5:	jmp	0x2a10


0x12e40:	push	r14
0x12e42:	push	r13
0x12e44:	push	r12
0x12e46:	push	rbp
0x12e47:	push	rbx
0x12e48:	call	0x2a90


0x12dc0:	push	r12
0x12dc2:	push	rbp
0x12dc3:	mov	rbp, rdi
0x12dc6:	push	rbx
0x12dc7:	call	0x29a0


0x12d70:	push	r14
0x12d72:	push	r13
0x12d74:	push	r12
0x12d76:	push	rbp
0x12d77:	push	rbx
0x12d78:	mov	r14, qword ptr [rsi]
0x12d7b:	test	r14, r14
0x12d7e:	je	0x12db1


0x12d00:	push	r15
0x12d02:	push	r14
0x12d04:	mov	r14, rdi
0x12d07:	push	r13
0x12d09:	push	r12
0x12d0b:	mov	r12, rsi
0x12d0e:	push	rbp
0x12d0f:	push	rbx
0x12d10:	mov	rbp, rcx
0x12d13:	mov	rbx, rdx
0x12d16:	mov	rcx, r8
0x12d19:	mov	rdx, rbp
0x12d1c:	sub	rsp, 8
0x12d20:	mov	rsi, rbx
0x12d23:	mov	rdi, r12
0x12d26:	mov	r15, r8
0x12d29:	mov	r13, r9
0x12d2c:	call	0x12a40


0x12be0:	push	r15
0x12be2:	push	r14
0x12be4:	mov	r14, rdi
0x12be7:	push	r13
0x12be9:	push	r12
0x12beb:	xor	edi, edi
0x12bed:	push	rbp
0x12bee:	push	rbx
0x12bef:	mov	rbp, rsi
0x12bf2:	lea	rsi, [rip + 0x6248]
0x12bf9:	mov	r12, rdx
0x12bfc:	mov	edx, 5
0x12c01:	sub	rsp, 8
0x12c05:	mov	rbx, qword ptr [rip + 0x20a514]
0x12c0c:	call	0x2ad0


0x12b60:	cmp	rdx, -1
0x12b64:	push	r12
0x12b66:	mov	edx, 5
0x12b6b:	push	rbp
0x12b6c:	mov	r12, rsi
0x12b6f:	push	rbx
0x12b70:	mov	rbp, rdi
0x12b73:	je	0x12bc0


0x12a40:	push	r15
0x12a42:	push	r14
0x12a44:	mov	r15, rsi
0x12a47:	push	r13
0x12a49:	push	r12
0x12a4b:	mov	r13, rcx
0x12a4e:	push	rbp
0x12a4f:	push	rbx
0x12a50:	mov	rbp, rdx
0x12a53:	sub	rsp, 0x28
0x12a57:	mov	qword ptr [rsp + 8], rdi
0x12a5c:	mov	qword ptr [rsp + 0x18], rdx
0x12a61:	call	0x2af0


0x12a30:	mov	edi, 1
0x12a35:	jmp	0x4920


0x12a00:	sub	rsp, 8
0x12a04:	mov	rax, rsi
0x12a07:	mov	esi, edx
0x12a09:	mov	edx, dword ptr [rdi]
0x12a0b:	mov	rdi, rax
0x12a0e:	call	0x129e0


0x129e0:	mov	eax, esi
0x129e2:	mov	esi, edx
0x129e4:	cmp	eax, -1
0x129e7:	je	0x129f0


0x129d0:	mov	dword ptr [rcx], edx
0x129d2:	xor	eax, eax
0x129d4:	ret	


0x129c0:	ret	


0x128c0:	push	r13
0x128c2:	push	r12
0x128c4:	mov	rax, rsi
0x128c7:	push	rbp
0x128c8:	push	rbx
0x128c9:	mov	r13, rdi
0x128cc:	sub	rsp, 0x7f8
0x128d3:	lea	r12, [rsp + 0x10]
0x128d8:	lea	rsi, [rsp + 8]
0x128dd:	mov	qword ptr [rsp + 8], 0x7d0
0x128e6:	mov	rcx, qword ptr fs:[0x28]
0x128ef:	mov	qword ptr [rsp + 0x7e8], rcx
0x128f7:	xor	ecx, ecx
0x128f9:	mov	rdi, r12
0x128fc:	mov	rcx, rdx
0x128ff:	mov	rdx, rax
0x12902:	call	0x14260


0x12830:	push	r13
0x12832:	push	r12
0x12834:	mov	r13, rsi
0x12837:	push	rbp
0x12838:	push	rbx
0x12839:	mov	rbx, rdi
0x1283c:	mov	r12, rdx
0x1283f:	sub	rsp, 0x18
0x12843:	mov	rax, qword ptr fs:[0x28]
0x1284c:	mov	qword ptr [rsp + 8], rax
0x12851:	xor	eax, eax
0x12853:	lea	rax, [rsp + 4]
0x12858:	test	rdi, rdi
0x1285b:	cmove	rbx, rax
0x1285f:	mov	rdi, rbx
0x12862:	call	0x2b60


0x127d0:	mov	rax, qword ptr [rdi + 8]
0x127d4:	cmp	qword ptr [rdi + 0x10], rax
0x127d8:	je	0x127e0


0x127a0:	xor	eax, eax
0x127a2:	mov	rcx, qword ptr [rdi + 0x20]
0x127a6:	cmp	qword ptr [rdi + 0x28], rcx
0x127aa:	ja	0x127c7


0x12760:	test	rdi, rdi
0x12763:	push	rbx
0x12764:	mov	rbx, rdi
0x12767:	je	0x1277a


0x126c0:	push	rbx
0x126c1:	mov	edx, 0xa
0x126c6:	xor	ebx, ebx
0x126c8:	sub	rsp, 0x20
0x126cc:	mov	rcx, qword ptr [rip + 0x20aa1d]
0x126d3:	lea	rsi, [rsp + 0x10]
0x126d8:	lea	rdi, [rsp + 8]
0x126dd:	mov	qword ptr [rsp + 8], 0
0x126e6:	mov	rax, qword ptr fs:[0x28]
0x126ef:	mov	qword ptr [rsp + 0x18], rax
0x126f4:	xor	eax, eax
0x126f6:	mov	qword ptr [rsp + 0x10], 0
0x126ff:	call	0x2ce0


0x122a0:	push	r15
0x122a2:	push	r14
0x122a4:	push	r13
0x122a6:	push	r12
0x122a8:	push	rbp
0x122a9:	push	rbx
0x122aa:	sub	rsp, 0x28
0x122ae:	mov	rax, qword ptr fs:[0x28]
0x122b7:	mov	qword ptr [rsp + 0x18], rax
0x122bc:	xor	eax, eax
0x122be:	cmp	edx, 0x24
0x122c1:	ja	0x12625


0x12260:	lea	rsi, [rip + 0x6a68]
0x12267:	sub	rsp, 8
0x1226b:	mov	edx, 5
0x12270:	xor	edi, edi
0x12272:	call	0x2ad0


0x12240:	push	rbx
0x12241:	mov	rbx, rdi
0x12244:	call	0x2af0


0x12210:	push	rbp
0x12211:	push	rbx
0x12212:	mov	rbp, rdi
0x12215:	mov	rdi, rsi
0x12218:	mov	rbx, rsi
0x1221b:	sub	rsp, 8
0x1221f:	call	0x12010


0x121e0:	mov	rax, rdi
0x121e3:	sub	rsp, 8
0x121e7:	mul	rsi
0x121ea:	seto	dl
0x121ed:	test	rax, rax
0x121f0:	js	0x12209


0x121c0:	push	rbx
0x121c1:	mov	rbx, rdi
0x121c4:	call	0x12010


0x12170:	test	rdi, rdi
0x12173:	mov	rax, qword ptr [rsi]
0x12176:	je	0x121a0


0x120e0:	test	rdi, rdi
0x120e3:	mov	r9, rdx
0x120e6:	mov	rcx, qword ptr [rsi]
0x120e9:	je	0x12120


0x120b0:	mov	rax, rsi
0x120b3:	mul	rdx
0x120b6:	mov	rsi, rax
0x120b9:	seto	al
0x120bc:	test	rsi, rsi
0x120bf:	js	0x120cb


0x12070:	test	rsi, rsi
0x12073:	push	rbx
0x12074:	mov	rbx, rsi
0x12077:	jne	0x1207e


0x12060:	jmp	0x12010


0x12030:	mov	rax, rdi
0x12033:	mul	rsi
0x12036:	mov	rdi, rax
0x12039:	seto	al
0x1203c:	test	rdi, rdi
0x1203f:	js	0x1204b


0x12010:	push	rbx
0x12011:	mov	rbx, rdi
0x12014:	call	0x2df0


0x11fd0:	cmp	byte ptr [rip + 0x20d75a], 0
0x11fd7:	je	0x11fe8


0x11f50:	push	rbx
0x11f51:	lea	rsi, [rip + 0x6a81]
0x11f58:	mov	edx, 5
0x11f5d:	xor	edi, edi
0x11f5f:	call	0x2ad0


0x11e70:	push	rbp
0x11e71:	push	rbx
0x11e72:	mov	r10d, 0x20
0x11e78:	xor	r11d, r11d
0x11e7b:	sub	rsp, 0xb8
0x11e82:	mov	rax, qword ptr fs:[0x28]
0x11e8b:	mov	qword ptr [rsp + 0x78], rax
0x11e90:	xor	eax, eax
0x11e92:	lea	rax, [rsp + 0xd0]
0x11e9a:	mov	qword ptr [rsp + 0xa0], r8
0x11ea2:	lea	rbx, [rsp + 0xd0]
0x11eaa:	lea	r8, [rsp + 0x20]
0x11eaf:	mov	qword ptr [rsp + 0xa8], r9
0x11eb7:	mov	dword ptr [rsp + 8], 0x20
0x11ebf:	mov	qword ptr [rsp + 0x10], rax
0x11ec4:	lea	rax, [rsp + 0x80]
0x11ecc:	xor	r9d, r9d
0x11ecf:	mov	qword ptr [rsp + 0x18], rax
0x11ed4:	mov	rbp, rax
0x11ed7:	nop	word ptr [rax + rax]
0x11ee0:	cmp	r10d, 0x2f
0x11ee4:	ja	0x11f3c


0x11df0:	sub	rsp, 0x68
0x11df4:	mov	r10, r8
0x11df7:	xor	r9d, r9d
0x11dfa:	mov	rax, qword ptr fs:[0x28]
0x11e03:	mov	qword ptr [rsp + 0x58], rax
0x11e08:	xor	eax, eax
0x11e0a:	mov	r8, rsp
0x11e0d:	nop	dword ptr [rax]
0x11e10:	mov	eax, dword ptr [r10]
0x11e13:	cmp	eax, 0x2f
0x11e16:	ja	0x11e5a


0x11dd0:	xor	r9d, r9d
0x11dd3:	cmp	qword ptr [r8], 0
0x11dd7:	je	0x11deb


0x119b0:	push	r15
0x119b2:	push	r14
0x119b4:	push	r13
0x119b6:	push	r12
0x119b8:	mov	r12, r9
0x119bb:	push	rbp
0x119bc:	push	rbx
0x119bd:	mov	rbp, rdi
0x119c0:	mov	rbx, r8
0x119c3:	sub	rsp, 0x28
0x119c7:	test	rsi, rsi
0x119ca:	je	0x11ae8


0x11750:	push	r12
0x11752:	push	rbp
0x11753:	mov	r12, rdi
0x11756:	push	rbx
0x11757:	sub	rsp, 0xd0
0x1175e:	mov	rax, qword ptr fs:[0x28]
0x11767:	mov	qword ptr [rsp + 0xc8], rax
0x1176f:	xor	eax, eax
0x11771:	test	rsi, rsi
0x11774:	je	0x11870


0x11740:	mov	rdx, rsi
0x11743:	mov	rsi, rdi
0x11746:	mov	edi, 0xffffffff
0x1174b:	jmp	0x112e0


0x112e0:	push	r14
0x112e2:	push	r13
0x112e4:	push	r12
0x112e6:	push	rbp
0x112e7:	mov	r12, rsi
0x112ea:	push	rbx
0x112eb:	mov	ebx, edi
0x112ed:	sub	rsp, 0x110
0x112f4:	mov	rax, qword ptr fs:[0x28]
0x112fd:	mov	qword ptr [rsp + 0x108], rax
0x11305:	xor	eax, eax
0x11307:	test	rdx, rdx
0x1130a:	je	0x115d0


0x112d0:	mov	ecx, 0x100
0x112d5:	jmp	0x2930


0x11220:	mov	r9, qword ptr [rdi + 8]
0x11224:	lea	rcx, [r9 - 0x3ffffffe]
0x1122b:	cmp	rcx, 1
0x1122f:	jbe	0x1123a


0x11140:	push	rbp
0x11141:	push	rbx
0x11142:	mov	rbp, rdi
0x11145:	sub	rsp, 0x18
0x11149:	mov	rbx, qword ptr [rsi]
0x1114c:	mov	rax, qword ptr [rbx + 8]
0x11150:	mov	rdx, qword ptr [rbx + 0x18]
0x11154:	cmp	rax, 0x3ffffffe
0x1115a:	je	0x111c0


0x11120:	mov	r8d, ecx
0x11123:	mov	rcx, rdx
0x11126:	mov	rdx, rsi
0x11129:	mov	rsi, rdi
0x1112c:	mov	edi, 0xffffff9c
0x11131:	jmp	0x109a0


0x109a0:	push	r15
0x109a2:	push	r14
0x109a4:	push	r13
0x109a6:	push	r12
0x109a8:	push	rbp
0x109a9:	push	rbx
0x109aa:	mov	ebx, r8d
0x109ad:	and	ebx, 1
0x109b0:	sub	rsp, 0x128
0x109b7:	mov	r13, qword ptr [rcx + 0x60]
0x109bb:	mov	r14, qword ptr [rdx + 0x58]
0x109bf:	mov	rax, qword ptr fs:[0x28]
0x109c8:	mov	qword ptr [rsp + 0x118], rax
0x109d0:	xor	eax, eax
0x109d2:	test	ebx, ebx
0x109d4:	mov	r12, qword ptr [rcx + 0x58]
0x109d8:	mov	r15, qword ptr [rdx + 0x60]
0x109dc:	mov	r9d, r13d
0x109df:	je	0x10ac8


0x10990:	mov	rax, qword ptr [rsi]
0x10993:	cmp	qword ptr [rdi], rax
0x10996:	sete	al
0x10999:	ret	


0x10980:	mov	rax, qword ptr [rdi]
0x10983:	xor	edx, edx
0x10985:	div	rsi
0x10988:	mov	rax, rdx
0x1098b:	ret	


0x10940:	push	r13
0x10942:	push	r12
0x10944:	push	rbp
0x10945:	push	rbx
0x10946:	mov	ebx, edi
0x10948:	sub	rsp, 8
0x1094c:	cmp	edi, 2
0x1094f:	ja	0x10972


0x10930:	mov	r8d, 6
0x10936:	jmp	0x10710


0x10920:	mov	r8d, 6
0x10926:	jmp	0x10890


0x10890:	sub	rsp, 0x18
0x10894:	cmp	ecx, 1
0x10897:	mov	dword ptr [rsp + 0xc], edx
0x1089b:	je	0x10900


0x10710:	push	r15
0x10712:	push	r14
0x10714:	mov	r15, rdi
0x10717:	push	r13
0x10719:	push	r12
0x1071b:	mov	r14, r8
0x1071e:	push	rbp
0x1071f:	push	rbx
0x10720:	mov	ebp, esi
0x10722:	sub	rsp, 0x38
0x10726:	mov	qword ptr [rsp + 0x18], rdx
0x1072b:	mov	qword ptr [rsp], rdi
0x1072f:	mov	qword ptr [rsp + 0x20], rcx
0x10734:	call	0x2950


0x106f0:	mov	esi, dword ptr [rsi]
0x106f2:	mov	edx, 0x180
0x106f7:	xor	eax, eax
0x106f9:	and	sil, 0x3c
0x106fd:	or	sil, 0xc2
0x10701:	jmp	0x2f60


0x106e0:	mov	esi, 0x1c0
0x106e5:	jmp	0x29c0


0x10660:	push	rbx
0x10661:	mov	rsi, rdi
0x10664:	mov	edi, 1
0x10669:	sub	rsp, 0xa0
0x10670:	mov	rdx, rsp
0x10673:	mov	rax, qword ptr fs:[0x28]
0x1067c:	mov	qword ptr [rsp + 0x98], rax
0x10684:	xor	eax, eax
0x10686:	call	0x2b00


0x104d0:	push	r15
0x104d2:	push	r14
0x104d4:	mov	eax, edi
0x104d6:	push	r13
0x104d8:	push	r12
0x104da:	sub	eax, 1
0x104dd:	push	rbp
0x104de:	push	rbx
0x104df:	mov	r12, rcx
0x104e2:	mov	rbp, rdx
0x104e5:	sub	rsp, 0x38
0x104e9:	mov	rcx, qword ptr fs:[0x28]
0x104f2:	mov	qword ptr [rsp + 0x28], rcx
0x104f7:	xor	ecx, ecx
0x104f9:	test	eax, eax
0x104fb:	mov	dword ptr [rsp + 0x18], edi
0x104ff:	mov	qword ptr [rsp + 0x10], rsi
0x10504:	mov	dword ptr [rsp + 0x20], 0
0x1050c:	mov	dword ptr [rsp + 0x1c], eax
0x10510:	js	0x10552


0x10450:	push	rbx
0x10451:	cmp	dword ptr [rdi], 4
0x10454:	ja	0x104a6


0x102f0:	push	r12
0x102f2:	push	rbp
0x102f3:	push	rbx
0x102f4:	sub	rsp, 0x10
0x102f8:	mov	rax, qword ptr fs:[0x28]
0x10301:	mov	qword ptr [rsp + 8], rax
0x10306:	xor	eax, eax
0x10308:	cmp	dword ptr [rdi], 4
0x1030b:	ja	0x1041d


0x10040:	test	rcx, rcx
0x10043:	push	r14
0x10045:	mov	r14d, edx
0x10048:	push	r13
0x1004a:	mov	r13, rsi
0x1004d:	push	r12
0x1004f:	mov	r12, rdi
0x10052:	push	rbp
0x10053:	mov	rbp, rcx
0x10056:	push	rbx
0x10057:	je	0x10178


0x10020:	xor	eax, eax
0x10022:	cmp	dword ptr [rdi], 4
0x10025:	je	0x10030


0x10010:	mov	dword ptr [rdi], 0
0x10016:	ret	


0xffb0:	push	r12
0xffb2:	push	rbp
0xffb3:	mov	ebp, esi
0xffb5:	push	rbx
0xffb6:	call	0x12e40


0xfc30:	push	r15
0xfc32:	lea	rax, [rip + 0x20cd87]
0xfc39:	push	r14
0xfc3b:	push	r13
0xfc3d:	push	r12
0xfc3f:	mov	esi, esi
0xfc41:	push	rbp
0xfc42:	push	rbx
0xfc43:	sub	rsp, 0x48
0xfc47:	mov	rax, qword ptr [rax + rsi*8]
0xfc4b:	test	rdi, rdi
0xfc4e:	mov	qword ptr [rsp + 8], rax
0xfc53:	je	0xff5d


0xfc20:	mov	rsi, qword ptr [rsi]
0xfc23:	mov	rdi, qword ptr [rdi]
0xfc26:	jmp	0x2cf0


0xfc00:	mov	rax, qword ptr [rsi + 8]
0xfc04:	cmp	qword ptr [rdi + 8], rax
0xfc08:	jb	0xfc18


0xfbe0:	mov	edx, 0xffffff9c
0xfbe5:	mov	rcx, rsi
0xfbe8:	mov	rsi, rdi
0xfbeb:	mov	edi, edx
0xfbed:	jmp	0xfb40


0xfb40:	push	r15
0xfb42:	push	r14
0xfb44:	mov	r15d, edx
0xfb47:	push	r13
0xfb49:	push	r12
0xfb4b:	push	rbp
0xfb4c:	push	rbx
0xfb4d:	mov	rbp, rcx
0xfb50:	mov	rbx, rsi
0xfb53:	sub	rsp, 0x18
0xfb57:	mov	dword ptr [rsp + 0xc], edi
0xfb5b:	mov	rdi, rsi
0xfb5e:	call	0xb3a0


0xfa10:	push	r13
0xfa12:	push	r12
0xfa14:	mov	r13d, edi
0xfa17:	push	rbp
0xfa18:	push	rbx
0xfa19:	mov	rdi, rsi
0xfa1c:	mov	ebp, edx
0xfa1e:	mov	r12, rcx
0xfa21:	sub	rsp, 0x138
0xfa28:	mov	rax, qword ptr fs:[0x28]
0xfa31:	mov	qword ptr [rsp + 0x128], rax
0xfa39:	xor	eax, eax
0xfa3b:	call	0xb2c0


0xf9b0:	push	r13
0xf9b2:	push	r12
0xf9b4:	mov	r13d, edi
0xf9b7:	push	rbp
0xf9b8:	push	rbx
0xf9b9:	mov	r12, rsi
0xf9bc:	mov	rbx, rdx
0xf9bf:	sub	rsp, 8
0xf9c3:	nop	dword ptr [rax + rax]
0xf9c8:	mov	rdx, rbx
0xf9cb:	mov	rsi, r12
0xf9ce:	mov	edi, r13d
0xf9d1:	call	0x2a20


0xf950:	push	r13
0xf952:	push	r12
0xf954:	mov	r13d, edi
0xf957:	push	rbp
0xf958:	push	rbx
0xf959:	mov	r12, rsi
0xf95c:	mov	rbx, rdx
0xf95f:	sub	rsp, 8
0xf963:	nop	dword ptr [rax + rax]
0xf968:	mov	rdx, rbx
0xf96b:	mov	rsi, r12
0xf96e:	mov	edi, r13d
0xf971:	call	0x2c80


0xf6e0:	push	r15
0xf6e2:	push	r14
0xf6e4:	mov	r9d, r8d
0xf6e7:	push	r13
0xf6e9:	push	r12
0xf6eb:	mov	r14d, edx
0xf6ee:	push	rbp
0xf6ef:	push	rbx
0xf6f0:	mov	r12, rsi
0xf6f3:	mov	r13, rcx
0xf6f6:	mov	ebp, r8d
0xf6f9:	mov	r8, rcx
0xf6fc:	sub	rsp, 0x148
0xf703:	mov	ecx, edx
0xf705:	mov	rdx, rsi
0xf708:	mov	rax, qword ptr fs:[0x28]
0xf711:	mov	qword ptr [rsp + 0x138], rax
0xf719:	xor	eax, eax
0xf71b:	mov	esi, edi
0xf71d:	mov	dword ptr [rsp + 4], edi
0xf721:	mov	edi, 0x13c
0xf726:	call	0x2d50


0xf6c0:	lea	rcx, [rip + 0x20d999]
0xf6c7:	mov	rsi, rdi
0xf6ca:	mov	rdx, -1
0xf6d1:	xor	edi, edi
0xf6d3:	jmp	0xed80


0xf6a0:	lea	rcx, [rip + 0x20d9b9]
0xf6a7:	mov	rdx, -1
0xf6ae:	jmp	0xed80


0xf680:	lea	rcx, [rip + 0x20d9d9]
0xf687:	mov	rdx, rsi
0xf68a:	mov	rsi, rdi
0xf68d:	xor	edi, edi
0xf68f:	jmp	0xed80


0xf670:	lea	rcx, [rip + 0x20d9e9]
0xf677:	jmp	0xed80


0xf650:	mov	r8, rcx
0xf653:	mov	rcx, rdx
0xf656:	mov	rdx, rsi
0xf659:	mov	rsi, rdi
0xf65c:	xor	edi, edi
0xf65e:	jmp	0xf580


0xf630:	mov	rcx, rdx
0xf633:	mov	r8, -1
0xf63a:	mov	rdx, rsi
0xf63d:	mov	rsi, rdi
0xf640:	xor	edi, edi
0xf642:	jmp	0xf580


0xf620:	mov	r8, -1
0xf627:	jmp	0xf580


0xf580:	sub	rsp, 0x48
0xf584:	mov	r9, rcx
0xf587:	mov	rcx, qword ptr [rip + 0x210182]
0xf58e:	movdqa	xmm0, xmmword ptr [rip + 0x21014a]
0xf596:	mov	rax, qword ptr fs:[0x28]
0xf59f:	mov	qword ptr [rsp + 0x38], rax
0xf5a4:	xor	eax, eax
0xf5a6:	movaps	xmmword ptr [rsp], xmm0
0xf5aa:	test	rsi, rsi
0xf5ad:	mov	qword ptr [rsp + 0x30], rcx
0xf5b2:	mov	dword ptr [rsp], 0xa
0xf5b9:	movdqa	xmm0, xmmword ptr [rip + 0x21012f]
0xf5c1:	movaps	xmmword ptr [rsp + 0x10], xmm0
0xf5c6:	movdqa	xmm0, xmmword ptr [rip + 0x210132]
0xf5ce:	movaps	xmmword ptr [rsp + 0x20], xmm0
0xf5d3:	je	0xf607


0xf4f0:	sub	rsp, 0x48
0xf4f4:	mov	rax, rdx
0xf4f7:	mov	rdx, qword ptr fs:[0x28]
0xf500:	mov	qword ptr [rsp + 0x38], rdx
0xf505:	xor	edx, edx
0xf507:	cmp	esi, 0xa
0xf50a:	je	0xf574


0xf4e0:	mov	edx, 0x3a
0xf4e5:	jmp	0xf410


0xf4c0:	mov	edx, 0x3a
0xf4c5:	mov	rsi, -1
0xf4cc:	jmp	0xf410


0xf4b0:	movsx	edx, sil
0xf4b4:	mov	rsi, -1
0xf4bb:	jmp	0xf410


0xf410:	sub	rsp, 0x48
0xf414:	mov	ecx, edx
0xf416:	mov	rax, qword ptr fs:[0x28]
0xf41f:	mov	qword ptr [rsp + 0x38], rax
0xf424:	xor	eax, eax
0xf426:	mov	rax, qword ptr [rip + 0x2102e3]
0xf42d:	mov	r8, rsp
0xf430:	and	ecx, 0x1f
0xf433:	movdqa	xmm0, xmmword ptr [rip + 0x2102a5]
0xf43b:	mov	qword ptr [rsp + 0x30], rax
0xf440:	mov	eax, edx
0xf442:	movaps	xmmword ptr [rsp], xmm0
0xf446:	shr	al, 5
0xf449:	movzx	eax, al
0xf44c:	lea	r9, [r8 + rax*4 + 8]
0xf451:	movdqa	xmm0, xmmword ptr [rip + 0x210297]
0xf459:	movaps	xmmword ptr [rsp + 0x10], xmm0
0xf45e:	movdqa	xmm0, xmmword ptr [rip + 0x21029a]
0xf466:	movaps	xmmword ptr [rsp + 0x20], xmm0
0xf46b:	mov	edx, dword ptr [r9]
0xf46e:	mov	eax, edx
0xf470:	shr	eax, cl
0xf472:	not	eax
0xf474:	and	eax, 1
0xf477:	shl	eax, cl
0xf479:	mov	rcx, r8
0xf47c:	xor	eax, edx
0xf47e:	mov	rdx, rsi
0xf481:	mov	rsi, rdi
0xf484:	mov	dword ptr [r9], eax
0xf487:	xor	edi, edi
0xf489:	call	0xed80


0xf400:	mov	rcx, rdx
0xf403:	mov	rdx, rsi
0xf406:	mov	esi, edi
0xf408:	xor	edi, edi
0xf40a:	jmp	0xf360


0xf3f0:	mov	rdx, rsi
0xf3f3:	mov	esi, edi
0xf3f5:	xor	edi, edi
0xf3f7:	jmp	0xf2d0


0xf360:	sub	rsp, 0x48
0xf364:	mov	rax, rdx
0xf367:	mov	rdx, rcx
0xf36a:	mov	rcx, qword ptr fs:[0x28]
0xf373:	mov	qword ptr [rsp + 0x38], rcx
0xf378:	xor	ecx, ecx
0xf37a:	cmp	esi, 0xa
0xf37d:	je	0xf3e0


0xf2d0:	sub	rsp, 0x48
0xf2d4:	mov	rax, rdx
0xf2d7:	mov	rdx, qword ptr fs:[0x28]
0xf2e0:	mov	qword ptr [rsp + 0x38], rdx
0xf2e5:	xor	edx, edx
0xf2e7:	cmp	esi, 0xa
0xf2ea:	je	0xf354


0xf2b0:	lea	rcx, [rip + 0x210429]
0xf2b7:	mov	rdx, rsi
0xf2ba:	mov	rsi, rdi
0xf2bd:	xor	edi, edi
0xf2bf:	jmp	0xed80


0xf290:	lea	rcx, [rip + 0x210449]
0xf297:	mov	rsi, rdi
0xf29a:	mov	rdx, -1
0xf2a1:	xor	edi, edi
0xf2a3:	jmp	0xed80


0xf280:	lea	rcx, [rip + 0x210459]
0xf287:	jmp	0xed80


0xf260:	lea	rcx, [rip + 0x210479]
0xf267:	mov	rdx, -1
0xf26e:	jmp	0xed80


0xf1c0:	mov	eax, dword ptr [rip + 0x20ded2]
0xf1c6:	push	r12
0xf1c8:	mov	r12, qword ptr [rip + 0x20ded1]
0xf1cf:	push	rbp
0xf1d0:	push	rbx
0xf1d1:	cmp	eax, 1
0xf1d4:	jle	0xf201


0xf1b0:	mov	rcx, rdx
0xf1b3:	xor	edx, edx
0xf1b5:	jmp	0xf0c0


0xf0c0:	push	r15
0xf0c2:	push	r14
0xf0c4:	lea	rax, [rip + 0x210615]
0xf0cb:	push	r13
0xf0cd:	push	r12
0xf0cf:	mov	r12, rdx
0xf0d2:	push	rbp
0xf0d3:	push	rbx
0xf0d4:	mov	rbx, rcx
0xf0d7:	mov	r14, rdi
0xf0da:	mov	r15, rsi
0xf0dd:	sub	rsp, 0x38
0xf0e1:	test	rcx, rcx
0xf0e4:	cmove	rbx, rax
0xf0e8:	xor	ebp, ebp
0xf0ea:	call	0x2950


0xf040:	push	r15
0xf042:	push	r14
0xf044:	lea	rax, [rip + 0x210695]
0xf04b:	push	r13
0xf04d:	push	r12
0xf04f:	mov	r13, rdi
0xf052:	push	rbp
0xf053:	push	rbx
0xf054:	mov	rbx, r8
0xf057:	mov	r14, rsi
0xf05a:	mov	r15, rdx
0xf05d:	sub	rsp, 0x18
0xf061:	test	r8, r8
0xf064:	cmove	rbx, rax
0xf068:	mov	qword ptr [rsp + 8], rcx
0xf06d:	call	0x2950


0xf010:	lea	rax, [rip + 0x2106c9]
0xf017:	test	rdi, rdi
0xf01a:	cmove	rdi, rax
0xf01e:	test	rsi, rsi
0xf021:	mov	dword ptr [rdi], 0xa
0xf027:	je	0xf037


0xeff0:	lea	rax, [rip + 0x2106e9]
0xeff7:	test	rdi, rdi
0xeffa:	cmove	rdi, rax
0xeffe:	mov	eax, dword ptr [rdi + 4]
0xf001:	mov	dword ptr [rdi + 4], esi
0xf004:	ret	


0xefb0:	lea	rax, [rip + 0x210729]
0xefb7:	test	rdi, rdi
0xefba:	mov	ecx, esi
0xefbc:	cmove	rdi, rax
0xefc0:	mov	eax, esi
0xefc2:	and	ecx, 0x1f
0xefc5:	shr	al, 5
0xefc8:	movzx	eax, al
0xefcb:	lea	rdi, [rdi + rax*4 + 8]
0xefd0:	mov	esi, dword ptr [rdi]
0xefd2:	mov	eax, esi
0xefd4:	shr	eax, cl
0xefd6:	xor	edx, eax
0xefd8:	and	eax, 1
0xefdb:	and	edx, 1
0xefde:	shl	edx, cl
0xefe0:	xor	edx, esi
0xefe2:	mov	dword ptr [rdi], edx
0xefe4:	ret	


0xef90:	lea	rax, [rip + 0x210749]
0xef97:	test	rdi, rdi
0xef9a:	cmove	rdi, rax
0xef9e:	mov	dword ptr [rdi], esi
0xefa0:	ret	


0xef70:	lea	rax, [rip + 0x210769]
0xef77:	test	rdi, rdi
0xef7a:	cmove	rdi, rax
0xef7e:	mov	eax, dword ptr [rdi]
0xef80:	ret	


0xef30:	push	r12
0xef32:	push	rbp
0xef33:	push	rbx
0xef34:	mov	rbx, rdi
0xef37:	call	0x2950


0xed80:	push	r15
0xed82:	push	r14
0xed84:	movsxd	r15, edi
0xed87:	push	r13
0xed89:	push	r12
0xed8b:	mov	r14, rdx
0xed8e:	push	rbp
0xed8f:	push	rbx
0xed90:	mov	rbp, rcx
0xed93:	sub	rsp, 0x28
0xed97:	mov	qword ptr [rsp + 8], rsi
0xed9c:	call	0x2950


0xdb40:	push	r15
0xdb42:	push	r14
0xdb44:	mov	r15d, r8d
0xdb47:	push	r13
0xdb49:	push	r12
0xdb4b:	mov	r14, rdi
0xdb4e:	push	rbp
0xdb4f:	push	rbx
0xdb50:	mov	ebx, r9d
0xdb53:	mov	r13, rsi
0xdb56:	mov	rbp, rcx
0xdb59:	and	ebx, 2
0xdb5c:	sub	rsp, 0xb8
0xdb63:	mov	rax, qword ptr [rsp + 0xf0]
0xdb6b:	mov	qword ptr [rsp + 0x10], rdx
0xdb70:	mov	dword ptr [rsp + 8], r8d
0xdb75:	mov	dword ptr [rsp + 0x78], r9d
0xdb7a:	mov	qword ptr [rsp + 0x20], rax
0xdb7f:	mov	rax, qword ptr [rsp + 0xf8]
0xdb87:	mov	qword ptr [rsp + 0x68], rax
0xdb8c:	mov	rax, qword ptr [rsp + 0x100]
0xdb94:	mov	qword ptr [rsp + 0x60], rax
0xdb99:	mov	rax, qword ptr fs:[0x28]
0xdba2:	mov	qword ptr [rsp + 0xa8], rax
0xdbaa:	xor	eax, eax
0xdbac:	call	0x2ae0


0xda50:	push	rbp
0xda51:	push	rbx
0xda52:	mov	rbp, rdi
0xda55:	mov	ebx, esi
0xda57:	sub	rsp, 8
0xda5b:	call	0x12fe0


0xd9f0:	push	rbp
0xd9f1:	push	rbx
0xd9f2:	sub	rsp, 0x18
0xd9f6:	lea	rbx, [rsp + 4]
0xd9fb:	mov	dword ptr [rsp + 4], edx
0xd9ff:	mov	edx, esi
0xda01:	mov	rsi, rdi
0xda04:	mov	rdi, rbx
0xda07:	mov	rax, qword ptr fs:[0x28]
0xda10:	mov	qword ptr [rsp + 8], rax
0xda15:	xor	eax, eax
0xda17:	call	0x12a00


0xd970:	push	r12
0xd972:	push	rbp
0xd973:	mov	r12d, ecx
0xd976:	push	rbx
0xd977:	mov	rbp, rdx
0xd97a:	mov	edx, r8d
0xd97d:	sub	rsp, 0x10
0xd981:	lea	rbx, [rsp + 4]
0xd986:	mov	rax, qword ptr fs:[0x28]
0xd98f:	mov	qword ptr [rsp + 8], rax
0xd994:	xor	eax, eax
0xd996:	mov	rcx, rbx
0xd999:	call	0x129d0


0xd8d0:	test	rdi, rdi
0xd8d3:	push	rbx
0xd8d4:	je	0xd94d


0xd850:	push	r13
0xd852:	push	r12
0xd854:	or	edx, 0x90900
0xd85a:	push	rbp
0xd85b:	push	rbx
0xd85c:	xor	eax, eax
0xd85e:	mov	r12, rcx
0xd861:	sub	rsp, 8
0xd865:	call	0x13240


0xd6e0:	movzx	r10d, byte ptr [rcx + 1]
0xd6e5:	mov	eax, edi
0xd6e7:	and	eax, 0xfff
0xd6ec:	test	r10b, r10b
0xd6ef:	je	0xd840


0xd650:	push	rbx
0xd651:	mov	rsi, rdi
0xd654:	mov	edi, 1
0xd659:	sub	rsp, 0xa0
0xd660:	mov	rdx, rsp
0xd663:	mov	rax, qword ptr fs:[0x28]
0xd66c:	mov	qword ptr [rsp + 0x98], rax
0xd674:	xor	eax, eax
0xd676:	call	0x2dd0


0xd2a0:	push	rbp
0xd2a1:	push	rbx
0xd2a2:	mov	rbx, rdi
0xd2a5:	sub	rsp, 8
0xd2a9:	movsx	eax, byte ptr [rdi]
0xd2ac:	lea	edx, [rax - 0x30]
0xd2af:	cmp	dl, 7
0xd2b2:	jbe	0xd368


0xced0:	push	r15
0xced2:	push	r14
0xced4:	mov	r15, rcx
0xced7:	push	r13
0xced9:	push	r12
0xcedb:	mov	r14, rsi
0xcede:	push	rbp
0xcedf:	push	rbx
0xcee0:	mov	r13, rdx
0xcee3:	mov	rbx, rdi
0xcee6:	mov	r12d, r8d
0xcee9:	sub	rsp, 0xc8
0xcef0:	mov	eax, dword ptr [rsp + 0x118]
0xcef7:	mov	dword ptr [rsp + 0x18], eax
0xcefb:	mov	rax, qword ptr fs:[0x28]
0xcf04:	mov	qword ptr [rsp + 0xb8], rax
0xcf0c:	xor	eax, eax
0xcf0e:	cmp	byte ptr [rdi], 0x2f
0xcf11:	je	0xcf1c


0xcd60:	push	r15
0xcd62:	push	r14
0xcd64:	mov	r14, rdx
0xcd67:	push	r13
0xcd69:	push	r12
0xcd6b:	mov	r13, rdi
0xcd6e:	push	rbp
0xcd6f:	push	rbx
0xcd70:	mov	rbp, rdi
0xcd73:	mov	rbx, rdi
0xcd76:	xor	r12d, r12d
0xcd79:	sub	rsp, 0x28
0xcd7d:	mov	qword ptr [rsp + 8], rsi
0xcd82:	mov	qword ptr [rsp + 0x18], rcx
0xcd87:	mov	byte ptr [rsp + 0x14], 0
0xcd8c:	nop	dword ptr [rax]
0xcd90:	add	rbx, 1
0xcd94:	movzx	edx, byte ptr [rbx - 1]
0xcd98:	test	dl, dl
0xcd9a:	je	0xce38


0xcd40:	push	rbx
0xcd41:	mov	rbx, rdi
0xcd44:	mov	rdi, qword ptr [rdi]
0xcd47:	call	0x30d0


0xcd00:	xor	eax, eax
0xcd02:	mov	rdx, qword ptr [rsi + 8]
0xcd06:	cmp	qword ptr [rdi + 8], rdx
0xcd0a:	je	0xcd10


0xccd0:	xor	eax, eax
0xccd2:	mov	rdx, qword ptr [rsi + 8]
0xccd6:	cmp	qword ptr [rdi + 8], rdx
0xccda:	je	0xcce0


0xccc0:	mov	rax, qword ptr [rdi + 8]
0xccc4:	xor	edx, edx
0xccc6:	div	rsi
0xccc9:	mov	rax, rdx
0xcccc:	ret	


0xcc90:	push	rbp
0xcc91:	push	rbx
0xcc92:	mov	rbp, rdi
0xcc95:	mov	rbx, rsi
0xcc98:	sub	rsp, 8
0xcc9c:	mov	rdi, qword ptr [rdi]
0xcc9f:	call	0x12fa0


0xca80:	push	r12
0xca82:	push	rbp
0xca83:	mov	ecx, 1
0xca88:	push	rbx
0xca89:	mov	rbx, rdi
0xca8c:	sub	rsp, 0x10
0xca90:	mov	rdx, rsp
0xca93:	mov	rax, qword ptr fs:[0x28]
0xca9c:	mov	qword ptr [rsp + 8], rax
0xcaa1:	xor	eax, eax
0xcaa3:	call	0xbaa0


0xca20:	push	rbx
0xca21:	mov	rbx, rsi
0xca24:	sub	rsp, 0x10
0xca28:	mov	rdx, rsp
0xca2b:	mov	rax, qword ptr fs:[0x28]
0xca34:	mov	qword ptr [rsp + 8], rax
0xca39:	xor	eax, eax
0xca3b:	call	0xc790


0xc790:	push	r13
0xc792:	push	r12
0xc794:	push	rbp
0xc795:	push	rbx
0xc796:	sub	rsp, 0x18
0xc79a:	mov	rax, qword ptr fs:[0x28]
0xc7a3:	mov	qword ptr [rsp + 8], rax
0xc7a8:	xor	eax, eax
0xc7aa:	test	rsi, rsi
0xc7ad:	je	0xc96d


0xc550:	push	r12
0xc552:	push	rbp
0xc553:	mov	rbp, rdi
0xc556:	push	rbx
0xc557:	sub	rsp, 0x60
0xc55b:	mov	r12, qword ptr [rdi + 0x28]
0xc55f:	mov	rax, qword ptr fs:[0x28]
0xc568:	mov	qword ptr [rsp + 0x58], rax
0xc56d:	xor	eax, eax
0xc56f:	cmp	byte ptr [r12 + 0x10], 0
0xc575:	jne	0xc5c8


0xc470:	push	r12
0xc472:	push	rbp
0xc473:	mov	r12, rdi
0xc476:	push	rbx
0xc477:	cmp	qword ptr [rdi + 0x40], 0
0xc47c:	mov	rbp, qword ptr [rdi]
0xc47f:	mov	rax, qword ptr [rdi + 8]
0xc483:	je	0xc4d3


0xc3e0:	push	r12
0xc3e2:	push	rbp
0xc3e3:	mov	rbp, rdi
0xc3e6:	push	rbx
0xc3e7:	mov	r12, qword ptr [rdi]
0xc3ea:	cmp	r12, qword ptr [rdi + 8]
0xc3ee:	jae	0xc45b


0xc220:	push	r15
0xc222:	push	r14
0xc224:	lea	rax, [rip - 0x7db]
0xc22b:	push	r13
0xc22d:	push	r12
0xc22f:	mov	r12, rdx
0xc232:	push	rbp
0xc233:	push	rbx
0xc234:	mov	r13, rcx
0xc237:	mov	rbp, rdi
0xc23a:	mov	edi, 0x50
0xc23f:	mov	r15, rsi
0xc242:	sub	rsp, 8
0xc246:	test	rdx, rdx
0xc249:	mov	r14, r8
0xc24c:	cmove	r12, rax
0xc250:	lea	rax, [rip - 0x7f7]
0xc257:	test	rcx, rcx
0xc25a:	cmove	r13, rax
0xc25e:	call	0x2df0


0xc200:	movabs	rax, 0x3f80000000000000
0xc20a:	mov	byte ptr [rdi + 0x10], 0
0xc20e:	mov	qword ptr [rdi], rax
0xc211:	movabs	rax, 0x3fb4fdf43f4ccccd
0xc21b:	mov	qword ptr [rdi + 8], rax
0xc21f:	ret	


0xc1c0:	movzx	ecx, byte ptr [rdi]
0xc1c3:	xor	edx, edx
0xc1c5:	test	cl, cl
0xc1c7:	je	0xc1ed


0xc150:	push	r15
0xc152:	push	r14
0xc154:	push	r13
0xc156:	push	r12
0xc158:	push	rbp
0xc159:	push	rbx
0xc15a:	sub	rsp, 8
0xc15e:	mov	r14, qword ptr [rdi]
0xc161:	cmp	qword ptr [rdi + 8], r14
0xc165:	jbe	0xc1b6


0xc0e0:	mov	r9, qword ptr [rdi]
0xc0e3:	cmp	qword ptr [rdi + 8], r9
0xc0e7:	jbe	0xc142


0xc060:	push	rbp
0xc061:	push	rbx
0xc062:	mov	rbp, rdi
0xc065:	mov	rbx, rsi
0xc068:	sub	rsp, 8
0xc06c:	call	0xba70


0xc010:	cmp	qword ptr [rdi + 0x20], 0
0xc015:	je	0xc043


0xbfb0:	push	r12
0xbfb2:	push	rbp
0xbfb3:	mov	r12, rdi
0xbfb6:	push	rbx
0xbfb7:	mov	rbp, rsi
0xbfba:	call	0xba70


0xbe60:	push	r13
0xbe62:	push	r12
0xbe64:	mov	r12, rsi
0xbe67:	push	rbp
0xbe68:	push	rbx
0xbe69:	xor	ebx, ebx
0xbe6b:	sub	rsp, 8
0xbe6f:	mov	rsi, qword ptr [rdi]
0xbe72:	mov	rcx, qword ptr [rdi + 0x20]
0xbe76:	mov	rbp, qword ptr [rdi + 0x10]
0xbe7a:	mov	r13, qword ptr [rdi + 0x18]
0xbe7e:	mov	rdi, qword ptr [rdi + 8]
0xbe82:	cmp	rsi, rdi
0xbe85:	jae	0xbec5


0xbe00:	mov	rcx, qword ptr [rdi]
0xbe03:	mov	r8, qword ptr [rdi + 8]
0xbe07:	xor	edx, edx
0xbe09:	xor	esi, esi
0xbe0b:	cmp	rcx, r8
0xbe0e:	jae	0xbe46


0xbdb0:	mov	rsi, qword ptr [rdi]
0xbdb3:	mov	rdi, qword ptr [rdi + 8]
0xbdb7:	xor	eax, eax
0xbdb9:	cmp	rsi, rdi
0xbdbc:	jae	0xbdf7


0xbda0:	mov	rax, qword ptr [rdi + 0x20]
0xbda4:	ret	


0xbd90:	mov	rax, qword ptr [rdi + 0x18]
0xbd94:	ret	


0xbd80:	mov	rax, qword ptr [rdi + 0x10]
0xbd84:	ret	


0xbc40:	push	r15
0xbc42:	push	r14
0xbc44:	push	r13
0xbc46:	push	r12
0xbc48:	push	rbp
0xbc49:	push	rbx
0xbc4a:	sub	rsp, 8
0xbc4e:	mov	r12, qword ptr [rsi]
0xbc51:	cmp	r12, qword ptr [rsi + 8]
0xbc55:	jae	0xbd38


0xbbc0:	mov	rdx, qword ptr [rdi]
0xbbc3:	lea	rcx, [rip + 0xc616]
0xbbca:	mov	eax, 1
0xbbcf:	cmp	rdx, rcx
0xbbd2:	je	0xbc35


0xbaa0:	push	r14
0xbaa2:	push	r13
0xbaa4:	mov	r14, rdx
0xbaa7:	push	r12
0xbaa9:	push	rbp
0xbaaa:	mov	r12, rdi
0xbaad:	push	rbx
0xbaae:	mov	rbp, rsi
0xbab1:	mov	r13d, ecx
0xbab4:	call	0xba70


0xba70:	push	rbx
0xba71:	mov	rbx, rdi
0xba74:	mov	rdi, rsi
0xba77:	mov	rsi, qword ptr [rbx + 0x10]
0xba7b:	call	qword ptr [rbx + 0x30]


0xba60:	cmp	rdi, rsi
0xba63:	sete	al
0xba66:	ret	


0xba50:	mov	rax, rdi
0xba53:	xor	edx, edx
0xba55:	ror	rax, 3
0xba59:	div	rsi
0xba5c:	mov	rax, rdx
0xba5f:	ret	


0xb9b0:	cmp	rdi, 0xa
0xb9b4:	mov	eax, 0xa
0xb9b9:	movabs	r9, 0xaaaaaaaaaaaaaaab
0xb9c3:	cmovb	rdi, rax
0xb9c7:	or	rdi, 1
0xb9cb:	cmp	rdi, -1
0xb9cf:	je	0xba3f


0xb930:	push	r13
0xb932:	push	r12
0xb934:	push	rbp
0xb935:	push	rbx
0xb936:	sub	rsp, 8
0xb93a:	test	rdx, rdx
0xb93d:	je	0xb9a1


0xb8b0:	push	r13
0xb8b2:	push	r12
0xb8b4:	push	rbp
0xb8b5:	push	rbx
0xb8b6:	sub	rsp, 8
0xb8ba:	test	rdx, rdx
0xb8bd:	je	0xb921


0xb7b0:	push	r15
0xb7b2:	push	r14
0xb7b4:	mov	r15, rdx
0xb7b7:	push	r13
0xb7b9:	push	r12
0xb7bb:	mov	r12, rdi
0xb7be:	push	rbp
0xb7bf:	push	rbx
0xb7c0:	mov	rbp, rsi
0xb7c3:	sub	rsp, 0x18
0xb7c7:	call	0xb3a0


0xb790:	sub	rsp, 8
0xb794:	call	0xb7b0


0xb780:	mov	edi, dword ptr [rdi + 0x18]
0xb783:	jmp	0xb5f0


0xb5f0:	mov	edx, edi
0xb5f2:	mov	eax, 0x2d
0xb5f7:	and	edx, 0xf000
0xb5fd:	cmp	edx, 0x8000
0xb603:	je	0xb660


0xb590:	sub	rsp, 0x28
0xb594:	mov	rax, qword ptr fs:[0x28]
0xb59d:	mov	qword ptr [rsp + 0x18], rax
0xb5a2:	xor	eax, eax
0xb5a4:	test	rdi, rdi
0xb5a7:	je	0xb5cc


0xb500:	test	rdi, rdi
0xb503:	je	0xb580


0xb490:	sub	rsp, 0x58
0xb494:	mov	qword ptr [rsp + 0x30], rdx
0xb499:	xor	edx, edx
0xb49b:	mov	rax, qword ptr fs:[0x28]
0xb4a4:	mov	qword ptr [rsp + 0x18], rax
0xb4a9:	xor	eax, eax
0xb4ab:	test	sil, 0x40
0xb4af:	jne	0xb4d8


0xb460:	test	rdi, rdi
0xb463:	je	0xb480


0xb450:	jmp	0x2c70


0xb400:	push	rbx
0xb401:	mov	rbx, rdi
0xb404:	call	0x2af0


0xb3a0:	movzx	edx, byte ptr [rdi]
0xb3a3:	mov	rax, rdi
0xb3a6:	cmp	dl, 0x2f
0xb3a9:	jne	0xb3bc


0xb340:	push	rbp
0xb341:	push	rbx
0xb342:	mov	rbp, rdi
0xb345:	sub	rsp, 8
0xb349:	call	0xb2e0


0xb2e0:	push	rbp
0xb2e1:	push	rbx
0xb2e2:	xor	ebp, ebp
0xb2e4:	mov	rbx, rdi
0xb2e7:	sub	rsp, 8
0xb2eb:	cmp	byte ptr [rdi], 0x2f
0xb2ee:	sete	bpl
0xb2f2:	call	0xb3a0


0xb2c0:	sub	rsp, 8
0xb2c4:	call	0xb340


0xb210:	push	rbp
0xb211:	push	rbx
0xb212:	sub	rsp, 8
0xb216:	mov	rdi, qword ptr [rip + 0x211ecb]
0xb21d:	call	0x12dc0


0xb200:	mov	byte ptr [rip + 0x2143a9], dil
0xb207:	ret	


0xb1f0:	mov	qword ptr [rip + 0x2143c1], rdi
0xb1f7:	ret	


0xb0e0:	push	r12
0xb0e2:	push	rbp
0xb0e3:	push	rbx
0xb0e4:	mov	rbx, qword ptr [rip + 0x212005]
0xb0eb:	mov	rdi, rbx
0xb0ee:	call	0x127a0


0xb0d0:	mov	qword ptr [rip + 0x2144d1], rdi
0xb0d7:	ret	


0xb060:	test	rdi, rdi
0xb063:	mov	rcx, rdx
0xb066:	jne	0xb088


0xb010:	test	rsi, rsi
0xb013:	je	0xb01a


0xaff0:	test	rsi, rsi
0xaff3:	je	0xb000


0xafd0:	sub	rsp, 8
0xafd4:	xor	ecx, ecx
0xafd6:	call	0xa960


0xaf90:	sub	rsp, 8
0xaf94:	mov	r9, qword ptr [rip + 0x212125]
0xaf9b:	lea	rdx, [rip + 0x21195e]
0xafa2:	lea	rcx, [rip + 0xd177]
0xafa9:	mov	r8d, 4
0xafaf:	call	0x12d00


0xaf80:	mov	ecx, 1
0xaf85:	jmp	0xa960


0xa960:	push	r15
0xa962:	push	r14
0xa964:	push	r13
0xa966:	push	r12
0xa968:	push	rbp
0xa969:	push	rbx
0xa96a:	mov	rbx, rsi
0xa96d:	sub	rsp, 0x88
0xa974:	mov	dword ptr [rsp + 0x64], edi
0xa978:	mov	rdi, rsi
0xa97b:	mov	qword ptr [rsp + 0x10], rsi
0xa980:	mov	dword ptr [rsp + 0x20], edx
0xa984:	mov	byte ptr [rsp + 0x63], cl
0xa988:	mov	rax, qword ptr fs:[0x28]
0xa991:	mov	qword ptr [rsp + 0x78], rax
0xa996:	xor	eax, eax
0xa998:	call	0xb3a0


0xa910:	test	rdi, rdi
0xa913:	push	rbx
0xa914:	mov	rbx, rdi
0xa917:	je	0xa940


0xa820:	push	r15
0xa822:	push	r14
0xa824:	mov	eax, 0x401
0xa829:	push	r13
0xa82b:	push	r12
0xa82d:	mov	r13, rdi
0xa830:	push	rbp
0xa831:	push	rbx
0xa832:	lea	rbx, [rsi + 1]
0xa836:	movabs	r14, 0x3fffffffffffffff
0xa840:	movabs	r15, 0x7ffffffffffffffe
0xa84a:	sub	rsp, 8
0xa84e:	cmp	rsi, 0x401
0xa855:	cmovae	rbx, rax
0xa859:	nop	dword ptr [rax]
0xa860:	mov	rdi, rbx
0xa863:	call	0x2df0


0xa7d0:	push	r12
0xa7d2:	push	rbp
0xa7d3:	mov	rbp, rdi
0xa7d6:	push	rbx
0xa7d7:	call	0xd9f0


0xa740:	push	r12
0xa742:	push	rbp
0xa743:	mov	r12, rdi
0xa746:	push	rbx
0xa747:	mov	rbp, rdx
0xa74a:	call	0xd970


0xa5e0:	push	r14
0xa5e2:	push	r13
0xa5e4:	push	r12
0xa5e6:	push	rbp
0xa5e7:	mov	r12, rdi
0xa5ea:	push	rbx
0xa5eb:	mov	ebp, esi
0xa5ed:	mov	rbx, rdx
0xa5f0:	sub	rsp, 0x130
0xa5f7:	mov	rax, qword ptr fs:[0x28]
0xa600:	mov	qword ptr [rsp + 0x128], rax
0xa608:	xor	eax, eax
0xa60a:	test	r8d, r8d
0xa60d:	js	0xa6b8


0xa470:	push	r15
0xa472:	push	r14
0xa474:	mov	r14d, edi
0xa477:	push	r13
0xa479:	push	r12
0xa47b:	mov	r13, rsi
0xa47e:	push	rbp
0xa47f:	push	rbx
0xa480:	mov	rbx, rcx
0xa483:	mov	ebp, edx
0xa485:	mov	r12d, r8d
0xa488:	sub	rsp, 0x148
0xa48f:	mov	ecx, dword ptr [rsp + 0x180]
0xa496:	mov	rax, qword ptr fs:[0x28]
0xa49f:	mov	qword ptr [rsp + 0x138], rax
0xa4a7:	xor	eax, eax
0xa4a9:	test	ecx, ecx
0xa4ab:	js	0xa560


0xa450:	mov	rax, rsi
0xa453:	mov	rdx, rdi
0xa456:	mov	esi, dword ptr [rsi + 8]
0xa459:	mov	rdi, qword ptr [rax]
0xa45c:	jmp	0x3070


0xa3f0:	push	r12
0xa3f2:	push	rbp
0xa3f3:	mov	rbp, rdi
0xa3f6:	push	rbx
0xa3f7:	mov	r12, rsi
0xa3fa:	call	0xb3a0


0xa3d0:	mov	rax, rsi
0xa3d3:	mov	rcx, rdi
0xa3d6:	mov	edx, dword ptr [rsi + 0x10]
0xa3d9:	mov	r8d, dword ptr [rax + 0x14]
0xa3dd:	mov	rsi, qword ptr [rsi + 8]
0xa3e1:	mov	edi, dword ptr [rax]
0xa3e3:	jmp	0x2ec0


0xa0c0:	push	r15
0xa0c2:	push	r14
0xa0c4:	xor	r15d, r15d
0xa0c7:	push	r13
0xa0c9:	push	r12
0xa0cb:	mov	r14, rdi
0xa0ce:	push	rbp
0xa0cf:	push	rbx
0xa0d0:	movabs	r13, 0x7fffffffffffffff
0xa0da:	sub	rsp, 0x1018
0xa0e1:	mov	rbx, qword ptr [rdi + 0x28]
0xa0e5:	mov	rdx, qword ptr [rdi + 8]
0xa0e9:	mov	rbp, rsp
0xa0ec:	mov	rax, qword ptr fs:[0x28]
0xa0f5:	mov	qword ptr [rsp + 0x1008], rax
0xa0fd:	xor	eax, eax
0xa0ff:	lea	r12, [rbp + 0x20]
0xa103:	xor	eax, eax
0xa105:	mov	ecx, 0x200
0xa10a:	mov	rdi, rbp
0xa10d:	rep stosq	qword ptr [rdi], rax


0xa090:	mov	dword ptr [rsi], edi
0xa092:	mov	qword ptr [rsi + 0x18], 0
0xa09a:	mov	qword ptr [rsi + 0x28], 0
0xa0a2:	mov	qword ptr [rsi + 8], 0
0xa0aa:	mov	byte ptr [rsi + 0x20], 0
0xa0ae:	mov	byte ptr [rsi + 0x21], 0
0xa0b2:	mov	dword ptr [rsi + 0x10], 1
0xa0b9:	ret	


0xa080:	mov	rdi, qword ptr [rip + 0x215511]
0xa087:	jmp	0xc470


0xa040:	lea	r8, [rip - 0x177]
0xa047:	lea	rcx, [rip - 0x19e]
0xa04e:	lea	rdx, [rip - 0x1b5]
0xa055:	sub	rsp, 8
0xa059:	xor	esi, esi
0xa05b:	mov	edi, 0x67
0xa060:	call	0xc220


0x9fc0:	push	r13
0x9fc2:	push	r12
0x9fc4:	mov	r13, rdi
0x9fc7:	push	rbp
0x9fc8:	push	rbx
0x9fc9:	mov	edi, 0x18
0x9fce:	mov	r12, rsi
0x9fd1:	mov	rbp, rdx
0x9fd4:	sub	rsp, 8
0x9fd8:	call	0x12010


0x9f60:	sub	rsp, 0x28
0x9f64:	mov	qword ptr [rsp], rdi
0x9f68:	mov	rdi, qword ptr [rip + 0x215629]
0x9f6f:	mov	qword ptr [rsp + 8], rsi
0x9f74:	mov	rsi, rsp
0x9f77:	mov	rax, qword ptr fs:[0x28]
0x9f80:	mov	qword ptr [rsp + 0x18], rax
0x9f85:	xor	eax, eax
0x9f87:	call	0xbfb0


0x9ef0:	push	rbx
0x9ef1:	sub	rsp, 0x20
0x9ef5:	mov	qword ptr [rsp], rdi
0x9ef9:	mov	rdi, qword ptr [rip + 0x215698]
0x9f00:	mov	qword ptr [rsp + 8], rsi
0x9f05:	mov	rsi, rsp
0x9f08:	mov	qword ptr [rsp + 0x10], 0
0x9f11:	mov	rax, qword ptr fs:[0x28]
0x9f1a:	mov	qword ptr [rsp + 0x18], rax
0x9f1f:	xor	eax, eax
0x9f21:	call	0xca80


0x9ed0:	push	rbx
0x9ed1:	mov	rbx, rdi
0x9ed4:	mov	rdi, qword ptr [rdi + 0x10]
0x9ed8:	call	0x30d0


0x9eb0:	xor	eax, eax
0x9eb2:	mov	rdx, qword ptr [rsi]
0x9eb5:	cmp	qword ptr [rdi], rdx
0x9eb8:	je	0x9ec0


0x9ea0:	mov	rax, qword ptr [rdi]
0x9ea3:	xor	edx, edx
0x9ea5:	div	rsi
0x9ea8:	mov	rax, rdx
0x9eab:	ret	


0x9d30:	sub	rsp, 0x18
0x9d34:	mov	rax, qword ptr fs:[0x28]
0x9d3d:	mov	qword ptr [rsp + 8], rax
0x9d42:	xor	eax, eax
0x9d44:	test	rcx, rcx
0x9d47:	je	0x9e76


0x5c20:	push	rbp
0x5c21:	mov	rbp, rsp
0x5c24:	push	r15
0x5c26:	push	r14
0x5c28:	push	r13
0x5c2a:	push	r12
0x5c2c:	mov	r14d, edx
0x5c2f:	push	rbx
0x5c30:	mov	rbx, r9
0x5c33:	sub	rsp, 0x398
0x5c3a:	mov	rax, qword ptr [rbp + 0x18]
0x5c3e:	mov	r13d, dword ptr [rbp + 0x10]
0x5c42:	mov	qword ptr [rbp - 0x348], rcx
0x5c49:	mov	rcx, qword ptr [rbp + 0x28]
0x5c4d:	mov	qword ptr [rbp - 0x310], rdi
0x5c54:	mov	qword ptr [rbp - 0x308], rsi
0x5c5b:	mov	qword ptr [rbp - 0x338], rax
0x5c62:	mov	rax, qword ptr [rbp + 0x20]
0x5c66:	mov	qword ptr [rbp - 0x320], rcx
0x5c6d:	mov	qword ptr [rbp - 0x330], r8
0x5c74:	mov	rcx, qword ptr fs:[0x28]
0x5c7d:	mov	qword ptr [rbp - 0x38], rcx
0x5c81:	xor	ecx, ecx
0x5c83:	mov	byte ptr [rax], 0
0x5c86:	movzx	r12d, byte ptr [r9 + 0x18]
0x5c8b:	mov	qword ptr [rbp - 0x340], rax
0x5c92:	mov	byte ptr [rbp - 0x315], r13b
0x5c99:	mov	r15d, dword ptr [r9 + 0x34]
0x5c9d:	test	r12b, r12b
0x5ca0:	je	0x5cc1


0x5bf0:	push	rbx
0x5bf1:	mov	ebx, dword ptr [rip + 0x217439]
0x5bf7:	cmp	ebx, -1
0x5bfa:	je	0x5c00


0x59e0:	push	r15
0x59e2:	push	r14
0x59e4:	push	r13
0x59e6:	push	r12
0x59e8:	mov	r13, rsi
0x59eb:	push	rbp
0x59ec:	push	rbx
0x59ed:	mov	rbp, rdi
0x59f0:	mov	ebx, edx
0x59f2:	sub	rsp, 8
0x59f6:	test	r8b, r8b
0x59f9:	mov	r14d, dword ptr [rcx + 0x1c]
0x59fd:	mov	r12d, dword ptr [rcx + 0x20]
0x5a01:	jne	0x5a35


0x59b0:	push	rbx
0x59b1:	mov	rbx, rdi
0x59b4:	call	0x2950


0x5970:	pxor	xmm0, xmm0
0x5974:	push	rbx
0x5975:	mov	rbx, rdi
0x5978:	movups	xmmword ptr [rdi], xmm0
0x597b:	movups	xmmword ptr [rdi + 0x10], xmm0
0x597f:	movups	xmmword ptr [rdi + 0x20], xmm0
0x5983:	movups	xmmword ptr [rdi + 0x30], xmm0
0x5987:	movups	xmmword ptr [rdi + 0x40], xmm0
0x598b:	call	0x2c00


0x5940:	lea	r8, [rip + 0x73f9]
0x5947:	lea	rcx, [rip + 0x7382]
0x594e:	xor	esi, esi
0x5950:	lea	rdx, [rip + 0x7369]
0x5957:	push	rbx
0x5958:	mov	rbx, rdi
0x595b:	mov	edi, 0x3d
0x5960:	call	0xc220


0x5910:	lea	r8, [rip + 0x7429]
0x5917:	lea	rcx, [rip + 0x73b2]
0x591e:	xor	esi, esi
0x5920:	lea	rdx, [rip + 0x7369]
0x5927:	push	rbx
0x5928:	mov	rbx, rdi
0x592b:	mov	edi, 0x3d
0x5930:	call	0xc220


0x5890:	push	r12
0x5892:	push	rbp
0x5893:	mov	rbp, rcx
0x5896:	push	rbx
0x5897:	mov	r12, rdi
0x589a:	call	0x2950


0x57c0:	push	r13
0x57c2:	push	r12
0x57c4:	push	rbp
0x57c5:	push	rbx
0x57c6:	mov	rbp, r8
0x57c9:	sub	rsp, 8
0x57cd:	cmp	byte ptr [r8 + 0x25], 0
0x57d2:	je	0x5840


0x53b0:	push	r15
0x53b2:	push	r14
0x53b4:	push	r13
0x53b6:	push	r12
0x53b8:	push	rbp
0x53b9:	push	rbx
0x53ba:	sub	rsp, 0x78
0x53be:	mov	rax, qword ptr [rsp + 0xb0]
0x53c6:	mov	rbx, qword ptr [rsp + 0xc8]
0x53ce:	mov	r10, qword ptr [rsp + 0xd0]
0x53d6:	mov	byte ptr [rsp + 0x1f], r9b
0x53db:	mov	qword ptr [rsp + 0x58], rax
0x53e0:	mov	rax, qword ptr [rsp + 0xb8]
0x53e8:	mov	byte ptr [r10], 0
0x53ec:	mov	qword ptr [rsp + 0x40], rbx
0x53f1:	mov	qword ptr [rsp + 0x60], r10
0x53f6:	mov	qword ptr [rbx], 0
0x53fd:	mov	qword ptr [rsp + 0x10], rax
0x5402:	mov	rax, qword ptr [rsp + 0xc0]
0x540a:	test	rax, rax
0x540d:	mov	qword ptr [rsp + 0x28], rax
0x5412:	je	0x57b3


0x52f0:	push	r13
0x52f2:	push	r12
0x52f4:	mov	r13, rsi
0x52f7:	push	rbp
0x52f8:	push	rbx
0x52f9:	mov	r12d, edx
0x52fc:	mov	rsi, rcx
0x52ff:	mov	edx, 1
0x5304:	mov	ebp, edi
0x5306:	sub	rsp, 8
0x530a:	mov	rbx, rcx
0x530d:	call	0x2bc0


0x51a0:	push	r14
0x51a2:	push	r13
0x51a4:	mov	r13, rdi
0x51a7:	push	r12
0x51a9:	push	rbp
0x51aa:	mov	rbp, rdx
0x51ad:	push	rbx
0x51ae:	mov	rbx, rsi
0x51b1:	mov	rdi, rbx
0x51b4:	sub	rsp, 0x20
0x51b8:	mov	esi, dword ptr [rdx]
0x51ba:	mov	rax, qword ptr fs:[0x28]
0x51c3:	mov	qword ptr [rsp + 0x18], rax
0x51c8:	xor	eax, eax
0x51ca:	call	0x4e90


0x5090:	push	r13
0x5092:	push	r12
0x5094:	movzx	r9d, dl
0x5098:	push	rbp
0x5099:	push	rbx
0x509a:	mov	edx, 0xffffff9c
0x509f:	mov	r13, rdi
0x50a2:	mov	r12, rsi
0x50a5:	mov	ebp, ecx
0x50a7:	sub	rsp, 0x10
0x50ab:	test	r8b, r8b
0x50ae:	mov	rcx, rsi
0x50b1:	setne	r8b
0x50b5:	push	-1
0x50b7:	mov	rsi, rdi
0x50ba:	movzx	r8d, r8b
0x50be:	mov	edi, edx
0x50c0:	shl	r8d, 0xa
0x50c4:	call	0xa470


0x4fd0:	push	r12
0x4fd2:	push	rbp
0x4fd3:	mov	r12, rdi
0x4fd6:	push	rbx
0x4fd7:	mov	edi, 1
0x4fdc:	mov	rbx, rdx
0x4fdf:	mov	rdx, rsi
0x4fe2:	mov	esi, 4
0x4fe7:	call	0xf2d0


0x4f90:	push	rbx
0x4f91:	mov	rcx, rdx
0x4f94:	mov	rdx, rsi
0x4f97:	mov	esi, 3
0x4f9c:	call	0x2ca0


0x4ee0:	cmp	qword ptr [rip + 0x21a698], 0
0x4ee8:	push	r12
0x4eea:	mov	r12d, edi
0x4eed:	push	rbp
0x4eee:	push	rbx
0x4eef:	mov	rbx, rsi
0x4ef2:	je	0x4f48


0x4e90:	and	esi, 0xf000
0x4e96:	cmp	esi, 0xa000
0x4e9c:	je	0x4eb8


0x4d70:	push	rbp
0x4d71:	push	rbx
0x4d72:	mov	rbp, rsi
0x4d75:	mov	rbx, rdi
0x4d78:	sub	rsp, 0xd8
0x4d7f:	test	al, al
0x4d81:	mov	qword ptr [rsp + 0x30], rdx
0x4d86:	mov	qword ptr [rsp + 0x38], rcx
0x4d8b:	mov	qword ptr [rsp + 0x40], r8
0x4d90:	mov	qword ptr [rsp + 0x48], r9
0x4d95:	je	0x4dce


0x4920:	push	r13
0x4922:	push	r12
0x4924:	mov	edx, 5
0x4929:	push	rbp
0x492a:	push	rbx
0x492b:	mov	ebp, edi
0x492d:	sub	rsp, 0x88
0x4934:	mov	rbx, qword ptr [rip + 0x21ac85]
0x493b:	mov	rax, qword ptr fs:[0x28]
0x4944:	mov	qword ptr [rsp + 0x78], rax
0x4949:	xor	eax, eax
0x494b:	test	edi, edi
0x494d:	je	0x497d


0x4260:	push	r15
0x4262:	push	r14
0x4264:	push	r13
0x4266:	push	r12
0x4268:	mov	r12, rdi
0x426b:	push	rbp
0x426c:	push	rbx
0x426d:	mov	rbp, rsi
0x4270:	mov	rbx, rdx
0x4273:	sub	rsp, 0x1e8
0x427a:	mov	rax, qword ptr fs:[0x28]
0x4283:	mov	qword ptr [rsp + 0x1d8], rax
0x428b:	xor	eax, eax
0x428d:	cmp	byte ptr [rdx + 0x1f], 0
0x4291:	je	0x42ad


0x41f0:	push	r12
0x41f2:	push	rbp
0x41f3:	mov	r12, rdi
0x41f6:	push	rbx
0x41f7:	mov	rbp, rsi
0x41fa:	mov	rbx, rdx
0x41fd:	sub	rsp, 0x10
0x4201:	cmp	byte ptr [rdx + 0x21], 0
0x4205:	je	0x4212


0x41d0:	cmp	byte ptr [rsi + 0x2e], 0
0x41d4:	jne	0x41e0


0x4190:	push	rbx
0x4191:	mov	rsi, rdi
0x4194:	mov	edi, 4
0x4199:	call	0xf3f0


0x4120:	push	rbp
0x4121:	push	rbx
0x4122:	mov	rcx, rdx
0x4125:	mov	rbx, rdx
0x4128:	lea	r9, [rip + 0xa1]
0x412f:	lea	rdx, [rip + 0xba]
0x4136:	sub	rsp, 8
0x413a:	mov	eax, dword ptr [rip + 0x21b004]
0x4140:	mov	r8d, dword ptr [rip + 0x218ed1]
0x4147:	push	0
0x4149:	push	rax
0x414a:	mov	eax, dword ptr [rip + 0x21b000]
0x4150:	push	rax
0x4151:	mov	eax, dword ptr [rip + 0x218ebd]
0x4157:	push	rax
0x4158:	call	0xced0


0x3f40:	push	r13
0x3f42:	push	r12
0x3f44:	push	rbp
0x3f45:	push	rbx
0x3f46:	mov	rbx, rsi
0x3f49:	sub	rsp, 0x28
0x3f4d:	mov	rax, qword ptr fs:[0x28]
0x3f56:	mov	qword ptr [rsp + 0x18], rax
0x3f5b:	xor	eax, eax
0x3f5d:	test	cl, cl
0x3f5f:	jne	0x3f6a


0x3f30:	push	rbp
0x3f31:	mov	rbp, rsp
0x3f34:	pop	rbp
0x3f35:	jmp	0x3ea0


0x3ef0:	cmp	byte ptr [rip + 0x219231], 0
0x3ef7:	jne	0x3f28


0x3ea0:	lea	rdi, [rip + 0x219221]
0x3ea7:	lea	rsi, [rip + 0x21921a]
0x3eae:	push	rbp
0x3eaf:	sub	rsi, rdi
0x3eb2:	mov	rbp, rsp
0x3eb5:	sar	rsi, 3
0x3eb9:	mov	rax, rsi
0x3ebc:	shr	rax, 0x3f
0x3ec0:	add	rsi, rax
0x3ec3:	sar	rsi, 1
0x3ec6:	je	0x3ee0


0x3e60:	lea	rdi, [rip + 0x219261]
0x3e67:	push	rbp
0x3e68:	lea	rax, [rip + 0x219259]
0x3e6f:	cmp	rax, rdi
0x3e72:	mov	rbp, rsp
0x3e75:	je	0x3e90


0x3e30:	xor	ebp, ebp
0x3e32:	mov	r9, rdx
0x3e35:	pop	rsi
0x3e36:	mov	rdx, rsp
0x3e39:	and	rsp, 0xfffffffffffffff0
0x3e3d:	push	rax
0x3e3e:	push	rsp
0x3e3f:	lea	r8, [rip + 0x1253a]
0x3e46:	lea	rcx, [rip + 0x124c3]
0x3e4d:	lea	rdi, [rip - 0xd24]
0x3e54:	call	qword ptr [rip + 0x219186]


0x3130:	push	r15
0x3132:	push	r14
0x3134:	xor	r15d, r15d
0x3137:	push	r13
0x3139:	push	r12
0x313b:	lea	r12, [rip + 0x21957e]
0x3142:	push	rbp
0x3143:	push	rbx
0x3144:	mov	ebx, edi
0x3146:	mov	rbp, rsi
0x3149:	xor	r14d, r14d
0x314c:	xor	r13d, r13d
0x314f:	sub	rsp, 0x138
0x3156:	mov	rdi, qword ptr [rsi]
0x3159:	mov	dword ptr [rip + 0x21bffd], 0
0x3163:	mov	rax, qword ptr fs:[0x28]
0x316c:	mov	qword ptr [rsp + 0x128], rax
0x3174:	xor	eax, eax
0x3176:	call	0xd8d0


0x30f6:	push	rbx
0x30f7:	call	0x2950


0x30e0:	test	edi, edi
0x30e2:	mov	rax, rsi
0x30e5:	mov	esi, edx
0x30e7:	js	0x30ee


0x28c0:	sub	rsp, 8
0x28c4:	mov	rax, qword ptr [rip + 0x21a71d]
0x28cb:	test	rax, rax
0x28ce:	je	0x28d2


0x2ff0:	jmp	qword ptr [rip + 0x219f6a]


0x1569b:	movzx	eax, byte ptr [rdi]
0x1569e:	test	al, al
0x156a0:	jne	0x15690


0x1548d:	xor	eax, eax
0x1548f:	ret	


0x1542a:	lea	r8, [rip + 0x3adf]
0x15431:	lea	r10, [rip + 0x3b38]
0x15438:	lea	r9, [rip + 0x3abd]
0x1543f:	xor	ecx, ecx
0x15441:	nop	dword ptr [rax]
0x15448:	cmp	dword ptr [rax], 0x16
0x1544b:	ja	0x15490


0x2f90:	jmp	qword ptr [rip + 0x219f9a]


0x14222:	mov	rax, qword ptr [rsp + 0x10]
0x14227:	xor	esi, esi
0x14229:	mov	edx, dword ptr [rax + 0x10]
0x1422c:	xor	eax, eax
0x1422e:	call	0x2a00


0x14021:	cmp	esi, 0x406
0x14027:	jne	0x14070


0x2db0:	jmp	qword ptr [rip + 0x21a08a]


0x13e40:	add	rsi, qword ptr [rdx + 0x20]
0x13e44:	add	rcx, qword ptr [rdx + 0x38]
0x13e48:	mov	r12, qword ptr [rdx]
0x13e4b:	add	rbp, qword ptr [rdx + 0x28]
0x13e4f:	add	r10, qword ptr [rdx + 0x30]
0x13e53:	sub	r12, rsi
0x13e56:	add	r9, r12
0x13e59:	mov	r12, rcx
0x13e5c:	shr	r12, 9
0x13e60:	add	rcx, r9
0x13e63:	xor	rbp, r12
0x13e66:	mov	r12, qword ptr [rdx + 8]
0x13e6a:	sub	r12, rbp
0x13e6d:	add	r11, r12
0x13e70:	mov	r12, r9
0x13e73:	shl	r12, 9
0x13e77:	add	r9, r11
0x13e7a:	xor	r10, r12
0x13e7d:	mov	r12, qword ptr [rdx + 0x10]
0x13e81:	sub	r12, r10
0x13e84:	add	rbx, r12
0x13e87:	mov	r12, r11
0x13e8a:	shr	r12, 0x17
0x13e8e:	add	r11, rbx
0x13e91:	xor	rcx, r12
0x13e94:	mov	r12, qword ptr [rdx + 0x18]
0x13e98:	sub	r12, rcx
0x13e9b:	add	r8, r12
0x13e9e:	mov	r12, rbx
0x13ea1:	shl	r12, 0xf
0x13ea5:	add	rbx, r8
0x13ea8:	xor	r9, r12
0x13eab:	mov	r12, r8
0x13eae:	sub	rsi, r9
0x13eb1:	shr	r12, 0xe
0x13eb5:	mov	qword ptr [rdx], r9
0x13eb8:	xor	r11, r12
0x13ebb:	mov	r12, rsi
0x13ebe:	add	r8, rsi
0x13ec1:	sub	rbp, r11
0x13ec4:	shl	r12, 0x14
0x13ec8:	mov	qword ptr [rdx + 8], r11
0x13ecc:	xor	rbx, r12
0x13ecf:	lea	r12, [rsi + rbp]
0x13ed3:	mov	rsi, rbp
0x13ed6:	sub	r10, rbx
0x13ed9:	shr	rsi, 0x11
0x13edd:	mov	qword ptr [rdx + 0x10], rbx
0x13ee1:	xor	r8, rsi
0x13ee4:	mov	rsi, r10
0x13ee7:	add	rbp, r10
0x13eea:	sub	rcx, r8
0x13eed:	shl	rsi, 0xe
0x13ef1:	mov	qword ptr [rdx + 0x18], r8
0x13ef5:	xor	rsi, r12
0x13ef8:	add	r10, rcx
0x13efb:	mov	qword ptr [rdx + 0x28], rbp
0x13eff:	mov	qword ptr [rdx + 0x20], rsi
0x13f03:	mov	qword ptr [rdx + 0x30], r10
0x13f07:	add	rdx, 0x40
0x13f0b:	mov	qword ptr [rdx - 8], rcx
0x13f0f:	cmp	rax, rdx
0x13f12:	jne	0x13e40


0x13d68:	add	rsi, qword ptr [rax + 0x20]
0x13d6c:	add	rcx, qword ptr [rax + 0x38]
0x13d70:	mov	r13, qword ptr [rax]
0x13d73:	add	rbp, qword ptr [rax + 0x28]
0x13d77:	add	r10, qword ptr [rax + 0x30]
0x13d7b:	sub	r13, rsi
0x13d7e:	add	r9, r13
0x13d81:	mov	r13, rcx
0x13d84:	shr	r13, 9
0x13d88:	add	rcx, r9
0x13d8b:	xor	rbp, r13
0x13d8e:	mov	r13, qword ptr [rax + 8]
0x13d92:	sub	r13, rbp
0x13d95:	add	r11, r13
0x13d98:	mov	r13, r9
0x13d9b:	shl	r13, 9
0x13d9f:	add	r9, r11
0x13da2:	xor	r10, r13
0x13da5:	mov	r13, qword ptr [rax + 0x10]
0x13da9:	sub	r13, r10
0x13dac:	add	rbx, r13
0x13daf:	mov	r13, r11
0x13db2:	shr	r13, 0x17
0x13db6:	add	r11, rbx
0x13db9:	xor	rcx, r13
0x13dbc:	mov	r13, qword ptr [rax + 0x18]
0x13dc0:	sub	r13, rcx
0x13dc3:	add	r8, r13
0x13dc6:	mov	r13, rbx
0x13dc9:	shl	r13, 0xf
0x13dcd:	add	rbx, r8
0x13dd0:	xor	r9, r13
0x13dd3:	mov	r13, r8
0x13dd6:	sub	rsi, r9
0x13dd9:	shr	r13, 0xe
0x13ddd:	mov	qword ptr [rax], r9
0x13de0:	xor	r11, r13
0x13de3:	mov	r13, rsi
0x13de6:	add	r8, rsi
0x13de9:	sub	rbp, r11
0x13dec:	shl	r13, 0x14
0x13df0:	mov	qword ptr [rax + 8], r11
0x13df4:	xor	rbx, r13
0x13df7:	lea	r13, [rsi + rbp]
0x13dfb:	mov	rsi, rbp
0x13dfe:	sub	r10, rbx
0x13e01:	shr	rsi, 0x11
0x13e05:	mov	qword ptr [rax + 0x10], rbx
0x13e09:	xor	r8, rsi
0x13e0c:	mov	rsi, r10
0x13e0f:	add	rbp, r10
0x13e12:	sub	rcx, r8
0x13e15:	shl	rsi, 0xe
0x13e19:	mov	qword ptr [rax + 0x18], r8
0x13e1d:	xor	rsi, r13
0x13e20:	add	r10, rcx
0x13e23:	mov	qword ptr [rax + 0x28], rbp
0x13e27:	mov	qword ptr [rax + 0x20], rsi
0x13e2b:	mov	qword ptr [rax + 0x30], r10
0x13e2f:	add	rax, 0x40
0x13e33:	mov	qword ptr [rax - 8], rcx
0x13e37:	cmp	r12, rax
0x13e3a:	jne	0x13d68


0x13aa0:	mov	r8, rdx
0x13aa3:	shl	r8, 0x15
0x13aa7:	xor	rdx, r8
0x13aaa:	mov	r8, qword ptr [rax]
0x13aad:	not	rdx
0x13ab0:	add	rdx, qword ptr [rax + 0x400]
0x13ab7:	mov	r10, r8
0x13aba:	and	r10d, 0x7f8
0x13ac1:	mov	r11, qword ptr [rdi + r10]
0x13ac5:	mov	r10, rdx
0x13ac8:	shr	r10, 5
0x13acc:	add	r11, rdx
0x13acf:	xor	rdx, r10
0x13ad2:	add	rcx, r11
0x13ad5:	mov	qword ptr [rax], rcx
0x13ad8:	shr	rcx, 8
0x13adc:	and	ecx, 0x7f8
0x13ae2:	mov	r11, qword ptr [rdi + rcx]
0x13ae6:	add	r11, r8
0x13ae9:	mov	qword ptr [rsi], r11
0x13aec:	add	rdx, qword ptr [rax + 0x408]
0x13af3:	mov	rcx, qword ptr [rax + 8]
0x13af7:	mov	r10, rdx
0x13afa:	mov	rdx, rcx
0x13afd:	and	edx, 0x7f8
0x13b03:	mov	r8, qword ptr [rdi + rdx]
0x13b07:	mov	rdx, r10
0x13b0a:	shl	rdx, 0xc
0x13b0e:	xor	rdx, r10
0x13b11:	add	r8, r10
0x13b14:	add	r8, r11
0x13b17:	mov	qword ptr [rax + 8], r8
0x13b1b:	shr	r8, 8
0x13b1f:	and	r8d, 0x7f8
0x13b26:	add	rcx, qword ptr [rdi + r8]
0x13b2a:	mov	qword ptr [rsi + 8], rcx
0x13b2e:	mov	r8, qword ptr [rax + 0x10]
0x13b32:	mov	r11, rcx
0x13b35:	add	rdx, qword ptr [rax + 0x410]
0x13b3c:	mov	rcx, r8
0x13b3f:	and	ecx, 0x7f8
0x13b45:	mov	r10, qword ptr [rdi + rcx]
0x13b49:	add	r10, rdx
0x13b4c:	mov	rcx, r10
0x13b4f:	add	rcx, r11
0x13b52:	mov	qword ptr [rax + 0x10], rcx
0x13b56:	shr	rcx, 8
0x13b5a:	and	ecx, 0x7f8
0x13b60:	mov	r10, qword ptr [rdi + rcx]
0x13b64:	mov	rcx, rdx
0x13b67:	shr	rcx, 0x21
0x13b6b:	xor	rdx, rcx
0x13b6e:	add	r10, r8
0x13b71:	mov	qword ptr [rsi + 0x10], r10
0x13b75:	mov	rcx, qword ptr [rax + 0x18]
0x13b79:	add	rdx, qword ptr [rax + 0x418]
0x13b80:	mov	r8, rcx
0x13b83:	and	r8d, 0x7f8
0x13b8a:	mov	r11, qword ptr [rdi + r8]
0x13b8e:	add	r11, rdx
0x13b91:	mov	r8, r11
0x13b94:	add	r8, r10
0x13b97:	add	rax, 0x20
0x13b9b:	add	rsi, 0x20
0x13b9f:	mov	qword ptr [rax - 8], r8
0x13ba3:	shr	r8, 8
0x13ba7:	and	r8d, 0x7f8
0x13bae:	add	rcx, qword ptr [rdi + r8]
0x13bb2:	mov	qword ptr [rsi - 8], rcx
0x13bb6:	cmp	rax, r9
0x13bb9:	jb	0x13aa0


0x13bbf:	lea	r9, [rdi + 0x800]
0x13bc6:	nop	word ptr cs:[rax + rax]
0x13bd0:	mov	r8, rdx
0x13bd3:	shl	r8, 0x15
0x13bd7:	xor	rdx, r8
0x13bda:	mov	r8, qword ptr [rax]
0x13bdd:	not	rdx
0x13be0:	add	rdx, qword ptr [rax - 0x400]
0x13be7:	mov	r10, r8
0x13bea:	and	r10d, 0x7f8
0x13bf1:	mov	r11, qword ptr [rdi + r10]
0x13bf5:	mov	r10, rdx
0x13bf8:	shr	r10, 5
0x13bfc:	add	r11, rdx
0x13bff:	xor	rdx, r10
0x13c02:	add	rcx, r11
0x13c05:	mov	qword ptr [rax], rcx
0x13c08:	shr	rcx, 8
0x13c0c:	and	ecx, 0x7f8
0x13c12:	mov	r11, qword ptr [rdi + rcx]
0x13c16:	add	r11, r8
0x13c19:	mov	qword ptr [rsi], r11
0x13c1c:	add	rdx, qword ptr [rax - 0x3f8]
0x13c23:	mov	rcx, qword ptr [rax + 8]
0x13c27:	mov	r10, rdx
0x13c2a:	mov	rdx, rcx
0x13c2d:	and	edx, 0x7f8
0x13c33:	mov	r8, qword ptr [rdi + rdx]
0x13c37:	mov	rdx, r10
0x13c3a:	shl	rdx, 0xc
0x13c3e:	xor	rdx, r10
0x13c41:	add	r8, r10
0x13c44:	add	r8, r11
0x13c47:	mov	qword ptr [rax + 8], r8
0x13c4b:	shr	r8, 8
0x13c4f:	and	r8d, 0x7f8
0x13c56:	add	rcx, qword ptr [rdi + r8]
0x13c5a:	mov	qword ptr [rsi + 8], rcx
0x13c5e:	mov	r8, qword ptr [rax + 0x10]
0x13c62:	mov	r11, rcx
0x13c65:	add	rdx, qword ptr [rax - 0x3f0]
0x13c6c:	mov	rcx, r8
0x13c6f:	and	ecx, 0x7f8
0x13c75:	mov	r10, qword ptr [rdi + rcx]
0x13c79:	add	r10, rdx
0x13c7c:	mov	rcx, r10
0x13c7f:	add	rcx, r11
0x13c82:	mov	qword ptr [rax + 0x10], rcx
0x13c86:	shr	rcx, 8
0x13c8a:	and	ecx, 0x7f8
0x13c90:	mov	r10, qword ptr [rdi + rcx]
0x13c94:	mov	rcx, rdx
0x13c97:	shr	rcx, 0x21
0x13c9b:	xor	rdx, rcx
0x13c9e:	add	r10, r8
0x13ca1:	mov	qword ptr [rsi + 0x10], r10
0x13ca5:	mov	rcx, qword ptr [rax + 0x18]
0x13ca9:	add	rdx, qword ptr [rax - 0x3e8]
0x13cb0:	mov	r8, rcx
0x13cb3:	and	r8d, 0x7f8
0x13cba:	mov	r11, qword ptr [rdi + r8]
0x13cbe:	add	r11, rdx
0x13cc1:	mov	r8, r11
0x13cc4:	add	r8, r10
0x13cc7:	add	rax, 0x20
0x13ccb:	add	rsi, 0x20
0x13ccf:	mov	qword ptr [rax - 8], r8
0x13cd3:	shr	r8, 8
0x13cd7:	and	r8d, 0x7f8
0x13cde:	add	rcx, qword ptr [rdi + r8]
0x13ce2:	mov	qword ptr [rsi - 8], rcx
0x13ce6:	cmp	rax, r9
0x13ce9:	jb	0x13bd0


0x2f50:	jmp	qword ptr [rip + 0x219fba]


0x13908:	mov	r14, qword ptr [rdi + 0x18]
0x1390c:	lea	rax, [rdi + 0x838]
0x13913:	lea	r13, [rdi + 0x20]
0x13917:	mov	qword ptr [rsp + 8], rax
0x1391c:	cmp	rdx, r14
0x1391f:	jbe	0x13a02


0x138a4:	call	0x2950


0x13678:	mov	edi, 0x1038
0x1367d:	call	0x12010


0x13557:	test	rdi, rdi
0x1355a:	mov	r12, rdi
0x1355d:	mov	rbp, rsi
0x13560:	je	0x135e0


0x13518:	call	0x2940


0x134db:	call	0xf6c0


0x133a5:	cmp	rbx, r14
0x133a8:	jae	0x13370


0x13260:	xor	eax, eax
0x13262:	call	0x2b10


0x13288:	lea	rax, [rsp + 0x60]
0x1328d:	mov	dword ptr [rsp], 0x18
0x13294:	mov	ecx, dword ptr [rsp + 0x38]
0x13298:	mov	qword ptr [rsp + 8], rax
0x1329d:	lea	rax, [rsp + 0x20]
0x132a2:	mov	qword ptr [rsp + 0x10], rax
0x132a7:	jmp	0x13260


0x13130:	mov	edi, 1
0x13135:	call	0x2dd0


0x13064:	mov	esi, edi
0x13066:	mov	edi, 1
0x1306b:	call	0x2e20


0x2e10:	jmp	qword ptr [rip + 0x21a05a]


0x12fd0:	xor	edx, edx
0x12fd2:	mov	rax, rdx
0x12fd5:	ret	


0x12fa8:	xor	eax, eax
0x12faa:	nop	word ptr [rax + rax]
0x12fb0:	rol	rax, 9
0x12fb4:	add	rdi, 1
0x12fb8:	add	rax, rcx
0x12fbb:	movsx	rcx, byte ptr [rdi]
0x12fbf:	test	cl, cl
0x12fc1:	jne	0x12fb0


0x2ed0:	jmp	qword ptr [rip + 0x219ffa]


0x2a10:	jmp	qword ptr [rip + 0x21a25a]


0x2a90:	jmp	qword ptr [rip + 0x21a21a]


0x29a0:	jmp	qword ptr [rip + 0x21a292]


0x12db1:	pop	rbx
0x12db2:	mov	rax, r14
0x12db5:	pop	rbp
0x12db6:	pop	r12
0x12db8:	pop	r13
0x12dba:	pop	r14
0x12dbc:	ret	


0x12d80:	mov	r12, rcx
0x12d83:	mov	r13, rdi
0x12d86:	mov	rbp, rdx
0x12d89:	lea	rbx, [rsi + 8]
0x12d8d:	jmp	0x12d9f


0x2ad0:	jmp	qword ptr [rip + 0x21a1fa]


0x12bc0:	lea	rsi, [rip + 0x6242]
0x12bc7:	xor	edi, edi
0x12bc9:	call	0x2ad0


0x12b75:	lea	rsi, [rip + 0x62a8]
0x12b7c:	xor	edi, edi
0x12b7e:	call	0x2ad0


0x2af0:	jmp	qword ptr [rip + 0x21a1ea]


0x129f0:	jmp	0x2f10


0x129e9:	mov	edi, eax
0x129eb:	jmp	0x2ef0


0x2b60:	jmp	qword ptr [rip + 0x21a1b2]


0x127e0:	mov	rax, qword ptr [rdi + 0x20]
0x127e4:	cmp	qword ptr [rdi + 0x28], rax
0x127e8:	jne	0x127da


0x127da:	jmp	0x2f70


0x127ac:	mov	rax, qword ptr [rdi + 0x10]
0x127b0:	sub	rax, qword ptr [rdi + 8]
0x127b4:	test	dword ptr [rdi], 0x100
0x127ba:	je	0x127c7


0x127c7:	ret	


0x1277a:	mov	rdi, rbx
0x1277d:	pop	rbx
0x1277e:	jmp	0x2e00


0x12769:	call	0x2e50


0x2ce0:	jmp	qword ptr [rip + 0x21a0f2]


0x122c7:	lea	rax, [rsp + 0x10]
0x122cc:	mov	r15, rsi
0x122cf:	test	rsi, rsi
0x122d2:	mov	rbp, rdi
0x122d5:	mov	dword ptr [rsp + 8], edx
0x122d9:	mov	r14, rcx
0x122dc:	mov	r13, r8
0x122df:	cmove	r15, rax
0x122e3:	call	0x2950


0x12625:	lea	rcx, [rip + 0x67d4]
0x1262c:	lea	rsi, [rip + 0x66ad]
0x12633:	lea	rdi, [rip + 0x66c6]
0x1263a:	mov	edx, 0x54
0x1263f:	call	0x2be0


0x12209:	call	0x12260


0x121f2:	movzx	edx, dl
0x121f5:	test	rdx, rdx
0x121f8:	jne	0x12209


0x121a0:	test	rax, rax
0x121a3:	mov	edx, 0x80
0x121a8:	cmove	rax, rdx
0x121ac:	test	rax, rax
0x121af:	jns	0x12192


0x12178:	movabs	rdx, 0x5555555555555553
0x12182:	cmp	rax, rdx
0x12185:	ja	0x121b1


0x12120:	test	rcx, rcx
0x12123:	je	0x12148


0x120eb:	xor	edx, edx
0x120ed:	movabs	rax, 0x5555555555555554
0x120f7:	div	r9
0x120fa:	cmp	rax, rcx
0x120fd:	jbe	0x1213b


0x120cb:	sub	rsp, 8
0x120cf:	call	0x12260


0x120c1:	movzx	eax, al
0x120c4:	test	rax, rax
0x120c7:	jne	0x120cb


0x12079:	test	rdi, rdi
0x1207c:	jne	0x12098


0x1207e:	mov	rsi, rbx
0x12081:	call	0x2e90


0x1204b:	sub	rsp, 8
0x1204f:	call	0x12260


0x12041:	movzx	eax, al
0x12044:	test	rax, rax
0x12047:	jne	0x1204b


0x2df0:	jmp	qword ptr [rip + 0x21a06a]


0x11fe8:	sub	rsp, 8
0x11fec:	call	0x2c00


0x11fd9:	movzx	eax, byte ptr [rip + 0x20d750]
0x11fe0:	ret	


0x11ee6:	mov	eax, r10d
0x11ee9:	mov	r11d, 1
0x11eef:	add	r10d, 8
0x11ef3:	add	rax, rbp
0x11ef6:	mov	rax, qword ptr [rax]
0x11ef9:	test	rax, rax
0x11efc:	mov	qword ptr [r8 + r9*8], rax
0x11f00:	je	0x11f0c


0x11f3c:	mov	rax, rbx
0x11f3f:	add	rbx, 8
0x11f43:	jmp	0x11ef6


0x11e18:	mov	r11d, eax
0x11e1b:	add	r11, qword ptr [r10 + 0x10]
0x11e1f:	add	eax, 8
0x11e22:	mov	dword ptr [r10], eax
0x11e25:	mov	rax, qword ptr [r11]
0x11e28:	test	rax, rax
0x11e2b:	mov	qword ptr [r8 + r9*8], rax
0x11e2f:	je	0x11e3b


0x11e5a:	mov	r11, qword ptr [r10 + 8]
0x11e5e:	lea	rax, [r11 + 8]
0x11e62:	mov	qword ptr [r10 + 8], rax
0x11e66:	jmp	0x11e25


0x11deb:	jmp	0x119b0


0x11ae8:	mov	r8, rcx
0x11aeb:	mov	rcx, rdx
0x11aee:	lea	rdx, [rip + 0x6e96]
0x11af5:	mov	esi, 1
0x11afa:	xor	eax, eax
0x11afc:	call	0x3050


0x119d0:	mov	r8, rdx
0x119d3:	lea	rdx, [rip + 0x6fa5]
0x119da:	mov	r9, rcx
0x119dd:	xor	eax, eax
0x119df:	mov	rcx, rsi
0x119e2:	mov	esi, 1
0x119e7:	call	0x3050


0x11870:	mov	ecx, dword ptr [rip + 0x20deb2]
0x11876:	xor	edx, edx
0x11878:	xor	ebx, ebx
0x1187a:	mov	qword ptr [rsp + 8], 0
0x11883:	test	ecx, ecx
0x11885:	jns	0x117be


0x1177a:	movdqu	xmm0, xmmword ptr [rsi]
0x1177e:	lea	rdi, [rsp + 0x10]
0x11783:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x11788:	mov	qword ptr [rsp + 8], rdi
0x1178d:	movdqu	xmm0, xmmword ptr [rsi + 0x10]
0x11792:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x11797:	call	0x11220


0x115d0:	mov	qword ptr [rsp + 8], 0
0x115d9:	xor	r13d, r13d
0x115dc:	jmp	0x1133d


0x11310:	movdqu	xmm0, xmmword ptr [rdx]
0x11314:	lea	rdi, [rsp + 0x10]
0x11319:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x1131e:	mov	qword ptr [rsp + 8], rdi
0x11323:	movdqu	xmm0, xmmword ptr [rdx + 0x10]
0x11328:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x1132d:	call	0x11220


0x2930:	jmp	qword ptr [rip + 0x21a2ca]


0x1123a:	mov	rdx, qword ptr [rdi + 0x18]
0x1123e:	lea	r8, [rdx - 0x3ffffffe]
0x11245:	cmp	r8, 1
0x11249:	jbe	0x11254


0x11231:	cmp	r9, 0x3b9ac9ff
0x11238:	ja	0x112b0


0x111c0:	cmp	rdx, 0x3ffffffe
0x111c7:	mov	eax, 1
0x111cc:	je	0x11178


0x1115c:	cmp	rax, 0x3fffffff
0x11162:	je	0x11180


0x10ac8:	cmp	r12, r14
0x10acb:	jg	0x10b18


0x109e5:	cmp	r14, r12
0x109e8:	mov	r10d, edi
0x109eb:	sete	byte ptr [rsp + 0x38]
0x109f0:	movzx	edi, byte ptr [rsp + 0x38]
0x109f5:	cmp	r15d, r13d
0x109f8:	sete	al
0x109fb:	and	al, dil
0x109fe:	mov	byte ptr [rsp + 8], al
0x10a02:	jne	0x10b10


0x10951:	call	0x13f40


0x10972:	add	rsp, 8
0x10976:	mov	eax, ebx
0x10978:	pop	rbx
0x10979:	pop	rbp
0x1097a:	pop	r12
0x1097c:	pop	r13
0x1097e:	ret	


0x10900:	lea	rdx, [rsp + 0xc]
0x10905:	lea	rcx, [rip - 0x22c]
0x1090c:	call	0x10710


0x1089d:	cmp	ecx, 2
0x108a0:	je	0x108c8


0x2950:	jmp	qword ptr [rip + 0x21a2ba]


0x2f60:	jmp	qword ptr [rip + 0x219fb2]


0x29c0:	jmp	qword ptr [rip + 0x21a282]


0x2b00:	jmp	qword ptr [rip + 0x21a1e2]


0x10552:	lea	rbx, [rsp + 0x20]
0x10557:	xor	r15d, r15d
0x1055a:	xor	r13d, r13d
0x1055d:	mov	rdi, rbx
0x10560:	call	0x10450


0x10512:	mov	r13d, eax
0x10515:	cdqe	
0x10517:	lea	rdx, [rax*8]
0x1051f:	mov	rax, qword ptr [rsi + rax*8]
0x10523:	cmp	byte ptr [rax], 0x2f
0x10526:	jne	0x105d8


0x10456:	mov	eax, dword ptr [rdi]
0x10458:	lea	rdx, [rip + 0x841d]
0x1045f:	mov	rbx, rdi
0x10462:	movsxd	rax, dword ptr [rdx + rax*4]
0x10466:	add	rax, rdx
0x10469:	jmp	rax


0x104a6:	lea	rcx, [rip + 0x83e3]
0x104ad:	lea	rsi, [rip + 0x837c]
0x104b4:	lea	rdi, [rip + 0x836c]
0x104bb:	mov	edx, 0xfb
0x104c0:	call	0x2be0


0x10311:	mov	eax, dword ptr [rdi]
0x10313:	lea	rdx, [rip + 0x854e]
0x1031a:	mov	rbx, rdi
0x1031d:	movsxd	rax, dword ptr [rdx + rax*4]
0x10321:	add	rax, rdx
0x10324:	jmp	rax


0x1041d:	lea	rcx, [rip + 0x847c]
0x10424:	lea	rsi, [rip + 0x8405]
0x1042b:	lea	rdi, [rip + 0x83f5]
0x10432:	mov	edx, 0xe2
0x10437:	call	0x2be0


0x10178:	test	dl, 1
0x1017b:	mov	ebx, 0xffffffff
0x10180:	je	0x100d6


0x1005d:	mov	esi, edx
0x1005f:	mov	rdi, r13
0x10062:	shl	esi, 0x11
0x10065:	and	esi, 0x20000
0x1006b:	or	esi, 0x10900
0x10071:	call	0x2a70


0x10030:	mov	eax, dword ptr [rdi + 4]
0x10033:	ret	


0x10027:	ret	


0xff5d:	xor	r13d, r13d
0xff60:	jmp	0xfd8b


0xfc59:	mov	rbx, rdi
0xfc5c:	xor	r14d, r14d
0xfc5f:	xor	r12d, r12d
0xfc62:	call	0x2950


0x2cf0:	jmp	qword ptr [rip + 0x21a0ea]


0xfc18:	mov	eax, 0xffffffff
0xfc1d:	ret	


0xfc0a:	seta	al
0xfc0d:	movzx	eax, al
0xfc10:	ret	


0x2a20:	jmp	qword ptr [rip + 0x21a252]


0x2c80:	jmp	qword ptr [rip + 0x21a122]


0x2d50:	jmp	qword ptr [rip + 0x21a0ba]


0xf607:	call	0x2940


0xf5d5:	test	rdx, rdx
0xf5d8:	je	0xf607


0xf574:	call	0x2940


0xf50c:	mov	dword ptr [rsp], esi
0xf50f:	mov	rcx, rsp
0xf512:	mov	rdx, -1
0xf519:	mov	rsi, rax
0xf51c:	mov	qword ptr [rsp + 4], 0
0xf525:	mov	qword ptr [rsp + 0xc], 0x4000000
0xf52e:	mov	qword ptr [rsp + 0x14], 0
0xf537:	mov	qword ptr [rsp + 0x1c], 0
0xf540:	mov	qword ptr [rsp + 0x24], 0
0xf549:	mov	qword ptr [rsp + 0x2c], 0
0xf552:	mov	dword ptr [rsp + 0x34], 0
0xf55a:	call	0xed80


0xf3e0:	call	0x2940


0xf37f:	mov	dword ptr [rsp], esi
0xf382:	mov	rcx, rsp
0xf385:	mov	rsi, rax
0xf388:	mov	qword ptr [rsp + 4], 0
0xf391:	mov	qword ptr [rsp + 0xc], 0
0xf39a:	mov	qword ptr [rsp + 0x14], 0
0xf3a3:	mov	qword ptr [rsp + 0x1c], 0
0xf3ac:	mov	qword ptr [rsp + 0x24], 0
0xf3b5:	mov	qword ptr [rsp + 0x2c], 0
0xf3be:	mov	dword ptr [rsp + 0x34], 0
0xf3c6:	call	0xed80


0xf354:	call	0x2940


0xf2ec:	mov	dword ptr [rsp], esi
0xf2ef:	mov	rcx, rsp
0xf2f2:	mov	rdx, -1
0xf2f9:	mov	rsi, rax
0xf2fc:	mov	qword ptr [rsp + 4], 0
0xf305:	mov	qword ptr [rsp + 0xc], 0
0xf30e:	mov	qword ptr [rsp + 0x14], 0
0xf317:	mov	qword ptr [rsp + 0x1c], 0
0xf320:	mov	qword ptr [rsp + 0x24], 0
0xf329:	mov	qword ptr [rsp + 0x2c], 0
0xf332:	mov	dword ptr [rsp + 0x34], 0
0xf33a:	call	0xed80


0xf201:	mov	rdi, qword ptr [r12 + 8]
0xf206:	lea	rbx, [rip + 0x2103d3]
0xf20d:	cmp	rdi, rbx
0xf210:	je	0xf229


0xf1d6:	sub	eax, 2
0xf1d9:	lea	rbx, [r12 + 0x18]
0xf1de:	shl	rax, 4
0xf1e2:	lea	rbp, [r12 + rax + 0x28]
0xf1e7:	nop	word ptr [rax + rax]
0xf1f0:	mov	rdi, qword ptr [rbx]
0xf1f3:	add	rbx, 0x10
0xf1f7:	call	0x30d0


0xf037:	sub	rsp, 8
0xf03b:	call	0x2940


0xf029:	test	rdx, rdx
0xf02c:	je	0xf037


0x2ae0:	jmp	qword ptr [rip + 0x21a1f2]


0xd94d:	mov	rcx, qword ptr [rip + 0x20f7cc]
0xd954:	lea	rdi, [rip + 0xa975]
0xd95b:	mov	edx, 0x37
0xd960:	mov	esi, 1
0xd965:	call	0x3040


0xd8d6:	mov	esi, 0x2f
0xd8db:	mov	rbx, rdi
0xd8de:	call	0x2ba0


0xd840:	xor	r11d, r11d
0xd843:	test	r8, r8
0xd846:	je	0xd84b


0xd6f5:	cmp	sil, 1
0xd6f9:	push	r12
0xd6fb:	push	rbp
0xd6fc:	push	rbx
0xd6fd:	sbb	ebx, ebx
0xd6ff:	movzx	ebp, sil
0xd703:	not	ebx
0xd705:	xor	r11d, r11d
0xd708:	and	ebx, 0xc00
0xd70e:	jmp	0xd74a


0x2dd0:	jmp	qword ptr [rip + 0x21a07a]


0xd368:	mov	rdx, rdi
0xd36b:	xor	ebp, ebp
0xd36d:	jmp	0xd37f


0xd2b8:	test	al, al
0xd2ba:	mov	rcx, rdi
0xd2bd:	mov	edi, 1
0xd2c2:	je	0xd2eb


0xcf1c:	test	r13, r13
0xcf1f:	je	0xd050


0xcf13:	cmp	dword ptr [rsi], 4
0xcf16:	je	0xd060


0xce38:	mov	rax, rbp
0xce3b:	sub	rax, r13
0xce3e:	add	rsp, 0x28
0xce42:	pop	rbx
0xce43:	pop	rbp
0xce44:	pop	r12
0xce46:	pop	r13
0xce48:	pop	r14
0xce4a:	pop	r15
0xce4c:	ret	


0xcda0:	movzx	eax, byte ptr [rbx]
0xcda3:	cmp	al, 0x2f
0xcda5:	je	0xce50


0x30d0:	jmp	qword ptr [rip + 0x219efa]


0xcd10:	mov	rcx, qword ptr [rsi + 0x10]
0xcd14:	cmp	qword ptr [rdi + 0x10], rcx
0xcd18:	jne	0xcd0c


0xcd0c:	ret	


0xcce0:	mov	rcx, qword ptr [rsi + 0x10]
0xcce4:	cmp	qword ptr [rdi + 0x10], rcx
0xcce8:	jne	0xccdc


0xccdc:	ret	


0xc96d:	call	0x2940


0xc7b3:	mov	r12, rsp
0xc7b6:	xor	ecx, ecx
0xc7b8:	mov	r13, rdx
0xc7bb:	mov	rdx, r12
0xc7be:	mov	rbx, rdi
0xc7c1:	mov	rbp, rsi
0xc7c4:	call	0xbaa0


0xc577:	test	rsi, rsi
0xc57a:	js	0xc6f8


0xc5c8:	mov	rdi, rsi
0xc5cb:	call	0xb9b0


0xc4d3:	cmp	rbp, rax
0xc4d6:	jae	0xc50c


0xc485:	cmp	qword ptr [rdi + 0x20], 0
0xc48a:	je	0xc4d3


0xc3f0:	cmp	qword ptr [r12], 0
0xc3f5:	je	0xc451


0xc45b:	mov	qword ptr [rbp + 0x18], 0
0xc463:	mov	qword ptr [rbp + 0x20], 0
0xc46b:	pop	rbx
0xc46c:	pop	rbp
0xc46d:	pop	r12
0xc46f:	ret	


0xc1ed:	mov	rax, rdx
0xc1f0:	ret	


0xc1b6:	xor	ebp, ebp
0xc1b8:	jmp	0xc1a4


0xc167:	mov	r13, rdx
0xc16a:	mov	r12, rsi
0xc16d:	mov	r15, rdi
0xc170:	xor	ebp, ebp
0xc172:	mov	rdi, qword ptr [r14]
0xc175:	test	rdi, rdi
0xc178:	je	0xc19a


0xc142:	xor	eax, eax
0xc144:	ret	


0xc0e9:	xor	r8d, r8d
0xc0ec:	mov	rcx, qword ptr [r9]
0xc0ef:	test	rcx, rcx
0xc0f2:	je	0xc12d


0xc043:	xor	eax, eax
0xc045:	ret	


0xc017:	mov	rdx, qword ptr [rdi]
0xc01a:	mov	rcx, qword ptr [rdi + 8]
0xc01e:	cmp	rdx, rcx
0xc021:	jae	0xc048


0xbec5:	lea	rdx, [rip + 0xc29a]
0xbecc:	mov	esi, 1
0xbed1:	mov	rdi, r12
0xbed4:	xor	eax, eax
0xbed6:	call	0x3050


0xbe10:	cmp	qword ptr [rcx], 0
0xbe14:	je	0xbe3d


0xbe46:	xor	eax, eax
0xbe48:	cmp	qword ptr [rdi + 0x18], rsi
0xbe4c:	je	0xbe50


0xbdf7:	ret	


0xbc5b:	mov	rbp, rdi
0xbc5e:	mov	r13, rsi
0xbc61:	mov	r14d, edx
0xbc64:	nop	dword ptr [rax]
0xbc68:	mov	r15, qword ptr [r12]
0xbc6c:	test	r15, r15
0xbc6f:	je	0xbd2a


0xbd38:	add	rsp, 8
0xbd3c:	mov	eax, 1
0xbd41:	pop	rbx
0xbd42:	pop	rbp
0xbd43:	pop	r12
0xbd45:	pop	r13
0xbd47:	pop	r14
0xbd49:	pop	r15
0xbd4b:	ret	


0xbc35:	ret	


0xbbd4:	movss	xmm0, dword ptr [rdx + 8]
0xbbd9:	ucomiss	xmm0, dword ptr [rip + 0xc614]
0xbbe0:	jbe	0xbc30


0xba3f:	mov	rax, rdi
0xba42:	ret	


0xb9a1:	xor	r12d, r12d
0xb9a4:	jmp	0xb974


0xb93f:	mov	r13d, edi
0xb942:	mov	rbp, rsi
0xb945:	mov	rbx, rdx
0xb948:	xor	r12d, r12d
0xb94b:	jmp	0xb960


0xb921:	xor	r12d, r12d
0xb924:	jmp	0xb8f4


0xb8bf:	mov	r13d, edi
0xb8c2:	mov	rbp, rsi
0xb8c5:	mov	rbx, rdx
0xb8c8:	xor	r12d, r12d
0xb8cb:	jmp	0xb8e0


0xb660:	mov	byte ptr [rsi], al
0xb662:	mov	eax, edi
0xb664:	and	eax, 0x100
0xb669:	cmp	eax, 1
0xb66c:	sbb	eax, eax
0xb66e:	and	eax, 0xffffffbb
0xb671:	add	eax, 0x72
0xb674:	mov	byte ptr [rsi + 1], al
0xb677:	mov	eax, edi
0xb679:	and	eax, 0x80
0xb67e:	cmp	eax, 1
0xb681:	sbb	eax, eax
0xb683:	and	eax, 0xffffffb6
0xb686:	add	eax, 0x77
0xb689:	mov	byte ptr [rsi + 2], al
0xb68c:	mov	eax, edi
0xb68e:	and	eax, 0x40
0xb691:	cmp	eax, 1
0xb694:	sbb	eax, eax
0xb696:	test	edi, 0x800
0xb69c:	je	0xb740


0xb605:	cmp	edx, 0x4000
0xb60b:	mov	eax, 0x64
0xb610:	je	0xb660


0xb5cc:	mov	rcx, qword ptr [rsp + 0x18]
0xb5d1:	xor	rcx, qword ptr fs:[0x28]
0xb5da:	jne	0xb5e1


0xb5a9:	mov	rax, qword ptr [rdx + 8]
0xb5ad:	mov	qword ptr [rsp], rsi
0xb5b1:	mov	rsi, rsp
0xb5b4:	mov	qword ptr [rsp + 8], rax
0xb5b9:	mov	rax, qword ptr [rdx]
0xb5bc:	mov	qword ptr [rsp + 0x10], rax
0xb5c1:	call	0xbfb0


0xb580:	ret	


0xb505:	push	r13
0xb507:	push	r12
0xb509:	mov	r13, rdi
0xb50c:	push	rbp
0xb50d:	push	rbx
0xb50e:	mov	r12, rsi
0xb511:	mov	edi, 0x18
0xb516:	mov	rbp, rdx
0xb519:	sub	rsp, 8
0xb51d:	call	0x12010


0xb4b1:	xor	eax, eax
0xb4b3:	call	0x2f60


0xb4d8:	lea	rax, [rsp + 0x60]
0xb4dd:	mov	dword ptr [rsp], 0x10
0xb4e4:	mov	edx, dword ptr [rsp + 0x30]
0xb4e8:	mov	qword ptr [rsp + 8], rax
0xb4ed:	lea	rax, [rsp + 0x20]
0xb4f2:	mov	qword ptr [rsp + 0x10], rax
0xb4f7:	jmp	0xb4b1


0xb480:	ret	


0xb465:	push	rbx
0xb466:	mov	ebx, esi
0xb468:	call	0x2db0


0x2c70:	jmp	qword ptr [rip + 0x21a12a]


0xb3bc:	test	dl, dl
0xb3be:	je	0xb3fa


0xb068:	test	rsi, rsi
0xb06b:	mov	edi, 0x2000
0xb070:	cmovne	rdi, rsi
0xb074:	cmp	rdi, rcx
0xb077:	cmovbe	rcx, rdi
0xb07b:	mov	r8, rcx
0xb07e:	mov	rax, r8
0xb081:	ret	


0xb088:	test	rsi, rsi
0xb08b:	je	0xb074


0xb01a:	lea	rdi, [rip + 0xd0bd]
0xb021:	sub	rsp, 8
0xb025:	call	0x2900


0xb015:	cmp	byte ptr [rsi], 0
0xb018:	jne	0xb042


0xb000:	mov	eax, 2
0xb005:	ret	


0xaff5:	cmp	byte ptr [rsi], 0
0xaff8:	je	0xb000


0xa940:	lea	rdi, [rip + 0xd781]
0xa947:	call	0x2900


0xa919:	cmp	byte ptr [rbx], 0
0xa91c:	jne	0xa930


0xa6b8:	mov	dword ptr [rsp + 0xc], ecx
0xa6bc:	call	0x3070


0xa613:	cmp	cl, 1
0xa616:	jne	0xa688


0xa560:	mov	rcx, rbx
0xa563:	mov	dword ptr [rsp], r9d
0xa567:	call	0x2ec0


0xa4b1:	cmp	r9b, 1
0xa4b5:	jne	0xa530


0x3070:	jmp	qword ptr [rip + 0x219f2a]


0x2ec0:	jmp	qword ptr [rip + 0x21a002]


0xa10d:	rep stosq	qword ptr [rdi], rax


0x9ec0:	mov	rax, qword ptr [rsi + 8]
0x9ec4:	cmp	qword ptr [rdi + 8], rax
0x9ec8:	sete	al
0x9ecb:	ret	


0x9eba:	ret	


0x9e76:	lea	rcx, [rip + 0xe17b]
0x9e7d:	lea	rsi, [rip + 0xe146]
0x9e84:	lea	rdi, [rip + 0xe15c]
0x9e8b:	mov	edx, 0xb86
0x9e90:	call	0x2be0


0x9d4d:	cmp	dword ptr [rcx], 3
0x9d50:	ja	0x9e57


0x5cc1:	test	r15d, r15d
0x5cc4:	je	0x5f78


0x5ca2:	test	r15d, r15d
0x5ca5:	js	0x5f40


0x5c00:	xor	edi, edi
0x5c02:	call	0x2d70


0x5bfc:	mov	eax, ebx
0x5bfe:	pop	rbx
0x5bff:	ret	


0x5a03:	movabs	rax, 0xff0000000000ff
0x5a0d:	test	qword ptr [rdi + 0x18], rax
0x5a11:	je	0x5ab0


0x5a35:	cmp	ebx, -1
0x5a38:	mov	edx, r12d
0x5a3b:	mov	esi, r14d
0x5a3e:	je	0x5a90


0x2c00:	jmp	qword ptr [rip + 0x21a162]


0x5840:	mov	ebx, ecx
0x5842:	and	bl, byte ptr [r8 + 0x21]
0x5846:	jne	0x5878


0x57d4:	mov	r13, rdi
0x57d7:	call	0x2950


0x57b3:	mov	r15d, 1
0x57b9:	jmp	0x54b5


0x5418:	test	r8, r8
0x541b:	mov	qword ptr [rsp + 0x50], r8
0x5420:	mov	dword ptr [rsp + 0x6c], r9d
0x5425:	cmove	r8, rcx
0x5429:	mov	qword ptr [rsp + 0x38], rcx
0x542e:	mov	qword ptr [rsp + 0x20], rdx
0x5433:	mov	dword ptr [rsp + 0x18], esi
0x5437:	mov	dword ptr [rsp + 0x68], edi
0x543b:	xor	r13d, r13d
0x543e:	mov	qword ptr [rsp + 0x48], r8
0x5443:	xor	r15d, r15d
0x5446:	mov	rax, qword ptr [rsp + 0x38]
0x544b:	mov	rdx, qword ptr [rsp + 0x28]
0x5450:	mov	rsi, qword ptr [rsp + 0x20]
0x5455:	mov	edi, dword ptr [rsp + 0x68]
0x5459:	cmp	rax, rdx
0x545c:	cmovbe	rdx, rax
0x5460:	call	0x2c80


0x2bc0:	jmp	qword ptr [rip + 0x21a182]


0x2ca0:	jmp	qword ptr [rip + 0x21a112]


0x4f48:	mov	rdi, qword ptr [rip + 0x2180e9]
0x4f4f:	mov	esi, 1
0x4f54:	call	0x2cd0


0x4ef4:	test	rbx, rbx
0x4ef7:	jne	0x4f05


0x4eb8:	mov	eax, 1
0x4ebd:	ret	


0x4e9e:	push	rbx
0x4e9f:	mov	rbx, rdi
0x4ea2:	call	0x11fd0


0x4dce:	mov	rsi, rbx
0x4dd1:	mov	rax, qword ptr fs:[0x28]
0x4dda:	mov	qword ptr [rsp + 0x18], rax
0x4ddf:	xor	eax, eax
0x4de1:	mov	rdi, qword ptr [rip + 0x21a7d8]
0x4de8:	call	0x2cb0


0x4d97:	movaps	xmmword ptr [rsp + 0x50], xmm0
0x4d9c:	movaps	xmmword ptr [rsp + 0x60], xmm1
0x4da1:	movaps	xmmword ptr [rsp + 0x70], xmm2
0x4da6:	movaps	xmmword ptr [rsp + 0x80], xmm3
0x4dae:	movaps	xmmword ptr [rsp + 0x90], xmm4
0x4db6:	movaps	xmmword ptr [rsp + 0xa0], xmm5
0x4dbe:	movaps	xmmword ptr [rsp + 0xb0], xmm6
0x4dc6:	movaps	xmmword ptr [rsp + 0xc0], xmm7
0x4dce:	mov	rsi, rbx
0x4dd1:	mov	rax, qword ptr fs:[0x28]
0x4dda:	mov	qword ptr [rsp + 0x18], rax
0x4ddf:	xor	eax, eax
0x4de1:	mov	rdi, qword ptr [rip + 0x21a7d8]
0x4de8:	call	0x2cb0


0x497d:	lea	rsi, [rip + 0x11d74]
0x4984:	xor	edi, edi
0x4986:	call	0x2ad0


0x494f:	lea	rsi, [rip + 0x11d7a]
0x4956:	xor	edi, edi
0x4958:	call	0x2ad0


0x42ad:	cmp	byte ptr [rip + 0x21ae8e], 0
0x42b4:	je	0x42ca


0x4293:	lea	rdx, [rsp + 0x20]
0x4298:	mov	rsi, rdi
0x429b:	mov	edi, 1
0x42a0:	call	0x2dd0


0x4212:	mov	esi, 0x1ed
0x4217:	mov	rdi, rbp
0x421a:	call	0x29c0


0x4207:	call	0x2950


0x41d6:	ret	


0x41e0:	jmp	0x4190


0x3f61:	cmp	byte ptr [rdi], 0x2f
0x3f64:	je	0x4010


0x3f6a:	lea	rbp, [rsp + 0x10]
0x3f6f:	mov	rcx, rdx
0x3f72:	lea	rdx, [rip + 0x277]
0x3f79:	mov	rdi, rbx
0x3f7c:	mov	dword ptr [rsp + 0x10], 0
0x3f84:	mov	rsi, rbp
0x3f87:	call	0xcd60


0x3ef9:	cmp	qword ptr [rip + 0x2190f7], 0
0x3f01:	push	rbp
0x3f02:	mov	rbp, rsp
0x3f05:	je	0x3f13


0x3f28:	ret	


0x3ee0:	pop	rbp
0x3ee1:	ret	


0x3ec8:	mov	rax, qword ptr [rip + 0x219121]
0x3ecf:	test	rax, rax
0x3ed2:	je	0x3ee0


0x3e90:	pop	rbp
0x3e91:	ret	


0x3e77:	mov	rax, qword ptr [rip + 0x21915a]
0x3e7e:	test	rax, rax
0x3e81:	je	0x3e90




0x30ee:	mov	rdi, rax
0x30f1:	jmp	0x2f10


0x30e9:	jmp	0x2ef0


0x28d2:	add	rsp, 8
0x28d6:	ret	


0x28d0:	call	rax




0x156a2:	lea	rax, [rbx + rbx*4]
0x156a6:	lea	rax, [rbx + rax*2]
0x156aa:	mov	qword ptr [rcx + rax*8], rdi
0x156ae:	mov	rax, qword ptr [rsp + 0x10]
0x156b3:	mov	qword ptr [r14 + 0x10], rax
0x156b7:	mov	rax, qword ptr [rsp + 0x18]
0x156bc:	mov	qword ptr [r14 + 0x18], rax
0x156c0:	xor	eax, eax
0x156c2:	add	rsp, 0x58
0x156c6:	pop	rbx
0x156c7:	pop	rbp
0x156c8:	pop	r12
0x156ca:	pop	r13
0x156cc:	pop	r14
0x156ce:	pop	r15
0x156d0:	ret	


0x15690:	cmp	al, 0x25
0x15692:	lea	rbp, [rdi + 1]
0x15696:	je	0x156d8


0x1544d:	mov	edx, dword ptr [rax]
0x1544f:	movsxd	rdx, dword ptr [r8 + rdx*4]
0x15453:	add	rdx, r8
0x15456:	jmp	rdx


0x15490:	mov	eax, 0xffffffff
0x15495:	ret	




0x2a00:	jmp	qword ptr [rip + 0x21a262]


0x14029:	mov	rax, qword ptr [rsp + 0x10]
0x1402e:	cmp	dword ptr [rip + 0x20b6ff], 0
0x14035:	mov	dword ptr [rsp], 0x18
0x1403c:	mov	r12d, dword ptr [rax + 0x10]
0x14040:	mov	edx, r12d
0x14043:	js	0x14173


0x14070:	cmp	esi, 0xb
0x14073:	je	0x140a0




0x13f18:	pop	rbx
0x13f19:	mov	qword ptr [rdi + 0x810], 0
0x13f24:	mov	qword ptr [rdi + 0x808], 0
0x13f2f:	pop	rbp
0x13f30:	mov	qword ptr [rdi + 0x800], 0
0x13f3b:	pop	r12
0x13f3d:	pop	r13
0x13f3f:	ret	


0x13bd0:	mov	r8, rdx
0x13bd3:	shl	r8, 0x15
0x13bd7:	xor	rdx, r8
0x13bda:	mov	r8, qword ptr [rax]
0x13bdd:	not	rdx
0x13be0:	add	rdx, qword ptr [rax - 0x400]
0x13be7:	mov	r10, r8
0x13bea:	and	r10d, 0x7f8
0x13bf1:	mov	r11, qword ptr [rdi + r10]
0x13bf5:	mov	r10, rdx
0x13bf8:	shr	r10, 5
0x13bfc:	add	r11, rdx
0x13bff:	xor	rdx, r10
0x13c02:	add	rcx, r11
0x13c05:	mov	qword ptr [rax], rcx
0x13c08:	shr	rcx, 8
0x13c0c:	and	ecx, 0x7f8
0x13c12:	mov	r11, qword ptr [rdi + rcx]
0x13c16:	add	r11, r8
0x13c19:	mov	qword ptr [rsi], r11
0x13c1c:	add	rdx, qword ptr [rax - 0x3f8]
0x13c23:	mov	rcx, qword ptr [rax + 8]
0x13c27:	mov	r10, rdx
0x13c2a:	mov	rdx, rcx
0x13c2d:	and	edx, 0x7f8
0x13c33:	mov	r8, qword ptr [rdi + rdx]
0x13c37:	mov	rdx, r10
0x13c3a:	shl	rdx, 0xc
0x13c3e:	xor	rdx, r10
0x13c41:	add	r8, r10
0x13c44:	add	r8, r11
0x13c47:	mov	qword ptr [rax + 8], r8
0x13c4b:	shr	r8, 8
0x13c4f:	and	r8d, 0x7f8
0x13c56:	add	rcx, qword ptr [rdi + r8]
0x13c5a:	mov	qword ptr [rsi + 8], rcx
0x13c5e:	mov	r8, qword ptr [rax + 0x10]
0x13c62:	mov	r11, rcx
0x13c65:	add	rdx, qword ptr [rax - 0x3f0]
0x13c6c:	mov	rcx, r8
0x13c6f:	and	ecx, 0x7f8
0x13c75:	mov	r10, qword ptr [rdi + rcx]
0x13c79:	add	r10, rdx
0x13c7c:	mov	rcx, r10
0x13c7f:	add	rcx, r11
0x13c82:	mov	qword ptr [rax + 0x10], rcx
0x13c86:	shr	rcx, 8
0x13c8a:	and	ecx, 0x7f8
0x13c90:	mov	r10, qword ptr [rdi + rcx]
0x13c94:	mov	rcx, rdx
0x13c97:	shr	rcx, 0x21
0x13c9b:	xor	rdx, rcx
0x13c9e:	add	r10, r8
0x13ca1:	mov	qword ptr [rsi + 0x10], r10
0x13ca5:	mov	rcx, qword ptr [rax + 0x18]
0x13ca9:	add	rdx, qword ptr [rax - 0x3e8]
0x13cb0:	mov	r8, rcx
0x13cb3:	and	r8d, 0x7f8
0x13cba:	mov	r11, qword ptr [rdi + r8]
0x13cbe:	add	r11, rdx
0x13cc1:	mov	r8, r11
0x13cc4:	add	r8, r10
0x13cc7:	add	rax, 0x20
0x13ccb:	add	rsi, 0x20
0x13ccf:	mov	qword ptr [rax - 8], r8
0x13cd3:	shr	r8, 8
0x13cd7:	and	r8d, 0x7f8
0x13cde:	add	rcx, qword ptr [rdi + r8]
0x13ce2:	mov	qword ptr [rsi - 8], rcx
0x13ce6:	cmp	rax, r9
0x13ce9:	jb	0x13bd0


0x13cef:	mov	qword ptr [rdi + 0x800], rdx
0x13cf6:	mov	qword ptr [rdi + 0x808], rcx
0x13cfd:	ret	




0x13a02:	mov	r15, rax
0x13a05:	sub	r15, r14
0x13a08:	lea	rax, [r15 + 0x800]
0x13a0f:	mov	qword ptr [rsp + 8], rax
0x13a14:	jmp	0x139d6


0x13925:	mov	esi, 0x800
0x1392a:	mov	rdi, rbx
0x1392d:	mov	rdx, r14
0x13930:	sub	rsi, r14
0x13933:	add	rsi, qword ptr [rsp + 8]
0x13938:	add	rbx, r14
0x1393b:	sub	rbp, r14
0x1393e:	call	0x2d80


0x135e0:	mov	edi, 0x1038
0x135e5:	call	0x12010


0x13562:	lea	rsi, [rip + 0x5934]
0x13569:	call	0x15380


0x2940:	jmp	qword ptr [rip + 0x21a2c2]


0x133aa:	mov	rax, rbx
0x133ad:	xor	edx, edx
0x133af:	nop	
0x133b0:	shl	rax, 8
0x133b4:	add	rdx, 1
0x133b8:	add	rax, 0xff
0x133be:	cmp	r14, rax
0x133c1:	ja	0x133b0


0x13370:	cmp	rbx, r14
0x13373:	je	0x133ff


0x2b10:	jmp	qword ptr [rip + 0x21a1da]


0x2e20:	jmp	qword ptr [rip + 0x21a052]




0x12fc3:	xor	edx, edx
0x12fc5:	div	rsi
0x12fc8:	mov	rax, rdx
0x12fcb:	ret	


0x12fb0:	rol	rax, 9
0x12fb4:	add	rdi, 1
0x12fb8:	add	rax, rcx
0x12fbb:	movsx	rcx, byte ptr [rdi]
0x12fbf:	test	cl, cl
0x12fc1:	jne	0x12fb0










0x12d9f:	mov	rdx, r12
0x12da2:	mov	rsi, rbp
0x12da5:	mov	rdi, r13
0x12da8:	call	0x2c90






0x2f10:	jmp	qword ptr [rip + 0x219fda]


0x2ef0:	jmp	qword ptr [rip + 0x219fea]




0x127ea:	cmp	qword ptr [rdi + 0x48], 0
0x127ef:	jne	0x127da


0x2f70:	jmp	qword ptr [rip + 0x219faa]


0x127bc:	mov	rdx, qword ptr [rdi + 0x58]
0x127c0:	sub	rdx, qword ptr [rdi + 0x48]
0x127c4:	add	rax, rdx
0x127c7:	ret	


0x2e00:	jmp	qword ptr [rip + 0x21a062]


0x2e50:	jmp	qword ptr [rip + 0x21a03a]




0x2be0:	jmp	qword ptr [rip + 0x21a172]


0x121fa:	call	0x2cd0


0x121b1:	sub	rsp, 8
0x121b5:	call	0x12260


0x12192:	mov	qword ptr [rsi], rax
0x12195:	mov	rsi, rax
0x12198:	jmp	0x12070


0x12187:	mov	rdx, rax
0x1218a:	shr	rdx, 1
0x1218d:	lea	rax, [rdx + rax + 1]
0x12192:	mov	qword ptr [rsi], rax
0x12195:	mov	rsi, rax
0x12198:	jmp	0x12070


0x12148:	xor	edx, edx
0x1214a:	mov	eax, 0x80
0x1214f:	xor	r8d, r8d
0x12152:	div	r9
0x12155:	test	rax, rax
0x12158:	sete	r8b
0x1215c:	lea	rcx, [r8 + rax]
0x12160:	jmp	0x12125


0x12125:	mov	rax, rcx
0x12128:	mul	r9
0x1212b:	seto	dl
0x1212e:	test	rax, rax
0x12131:	movzx	edx, dl
0x12134:	js	0x1213b


0x1213b:	sub	rsp, 8
0x1213f:	call	0x12260


0x120ff:	mov	rax, rcx
0x12102:	shr	rax, 1
0x12105:	lea	rcx, [rax + rcx + 1]
0x1210a:	mov	qword ptr [rsi], rcx
0x1210d:	imul	rcx, r9
0x12111:	mov	rsi, rcx
0x12114:	jmp	0x12070


0x120c9:	jmp	0x12070


0x12098:	call	0x30d0


0x2e90:	jmp	qword ptr [rip + 0x21a01a]


0x12049:	jmp	0x12010




0x11f0c:	test	r11b, r11b
0x11f0f:	jne	0x11f35


0x11f02:	add	r9, 1
0x11f06:	cmp	r9, 0xa
0x11f0a:	jne	0x11ee0


0x11ef6:	mov	rax, qword ptr [rax]
0x11ef9:	test	rax, rax
0x11efc:	mov	qword ptr [r8 + r9*8], rax
0x11f00:	je	0x11f0c


0x11e3b:	call	0x119b0


0x11e31:	add	r9, 1
0x11e35:	cmp	r9, 0xa
0x11e39:	jne	0x11e10


0x11e25:	mov	rax, qword ptr [r11]
0x11e28:	test	rax, rax
0x11e2b:	mov	qword ptr [r8 + r9*8], rax
0x11e2f:	je	0x11e3b


0x11de0:	add	r9, 1
0x11de4:	cmp	qword ptr [r8 + r9*8], 0
0x11de9:	jne	0x11de0


0x3050:	jmp	qword ptr [rip + 0x219f3a]


0x1188b:	mov	dword ptr [rip + 0x20de93], 0xffffffff
0x11895:	lea	rdx, [rsp + 0x30]
0x1189a:	mov	rsi, r12
0x1189d:	mov	edi, 1
0x118a2:	call	0x2b00


0x117be:	mov	ecx, 0x100
0x117c3:	mov	rsi, r12
0x117c6:	mov	edi, 0xffffff9c
0x117cb:	call	0x2930


0x1133d:	test	ebx, ebx
0x1133f:	jns	0x1134a




0x11254:	xor	esi, esi
0x11256:	xor	r10d, r10d
0x11259:	cmp	rcx, 1
0x1125d:	ja	0x11279


0x1124b:	cmp	rdx, 0x3b9ac9ff
0x11252:	ja	0x112b0


0x112b0:	sub	rsp, 8
0x112b4:	call	0x2950


0x11178:	add	rsp, 0x18
0x1117c:	pop	rbx
0x1117d:	pop	rbp
0x1117e:	ret	


0x111ce:	mov	rax, qword ptr [rdi + 0x50]
0x111d2:	mov	rcx, qword ptr [rdi + 0x48]
0x111d6:	mov	qword ptr [rbx + 8], rax
0x111da:	xor	eax, eax
0x111dc:	cmp	rdx, 0x3fffffff
0x111e3:	mov	qword ptr [rbx], rcx
0x111e6:	jne	0x11178


0x11180:	cmp	rdx, 0x3fffffff
0x11187:	je	0x11208


0x11164:	cmp	rdx, 0x3ffffffe
0x1116b:	je	0x1119e


0x10acd:	mov	ebx, 1
0x10ad2:	jl	0x10adf


0x10b18:	mov	ebx, 0xffffffff
0x10b1d:	jmp	0x10adf


0x10a08:	lea	rax, [r12 - 1]
0x10a0d:	cmp	rax, r14
0x10a10:	jg	0x10b18


0x10b10:	xor	ebx, ebx
0x10b12:	jmp	0x10adf


0x108c8:	lea	rdx, [rsp + 0xc]
0x108cd:	lea	rcx, [rip - 0x274]
0x108d4:	call	0x10710


0x108a2:	test	ecx, ecx
0x108a4:	je	0x108e0










0x1052c:	lea	rax, [rsi + rdx - 8]
0x10531:	jmp	0x10548


0x105d8:	test	r13d, r13d
0x105db:	jle	0x10552


0x100d6:	mov	ecx, dword ptr [r12]
0x100da:	cmp	ecx, 5
0x100dd:	ja	0x102ca


0x10186:	mov	esi, edx
0x10188:	mov	rdi, r13
0x1018b:	shl	esi, 0x11
0x1018e:	and	esi, 0x20000
0x10194:	or	esi, 0x10900
0x1019a:	call	0x2a70


0x2a70:	jmp	qword ptr [rip + 0x21a22a]


0xfd8b:	add	rsp, 0x48
0xfd8f:	mov	rax, r13
0xfd92:	pop	rbx
0xfd93:	pop	rbp
0xfd94:	pop	r12
0xfd96:	pop	r13
0xfd98:	pop	r14
0xfd9a:	pop	r15
0xfd9c:	ret	










0xf5da:	mov	qword ptr [rsp + 0x28], rsi
0xf5df:	mov	qword ptr [rsp + 0x30], rdx
0xf5e4:	mov	rcx, rsp
0xf5e7:	mov	rdx, r8
0xf5ea:	mov	rsi, r9
0xf5ed:	call	0xed80


0xf229:	lea	rbx, [rip + 0x20de80]
0xf230:	cmp	r12, rbx
0xf233:	je	0xf244


0xf212:	call	0x30d0


0xf02e:	mov	qword ptr [rdi + 0x28], rsi
0xf032:	mov	qword ptr [rdi + 0x30], rdx
0xf036:	ret	




0x3040:	jmp	qword ptr [rip + 0x219f42]


0x2ba0:	jmp	qword ptr [rip + 0x21a192]


0xd84b:	ret	


0xd848:	mov	dword ptr [r8], r11d
0xd84b:	ret	


0xd74a:	mov	r9d, dword ptr [rcx + 0xc]
0xd74e:	mov	edi, dword ptr [rcx + 4]
0xd751:	mov	esi, dword ptr [rcx + 8]
0xd754:	not	r9d
0xd757:	and	r9d, ebx
0xd75a:	cmp	r10b, 2
0xd75e:	je	0xd810




0xd37f:	lea	ebp, [rax + rbp*8 - 0x30]
0xd383:	add	rdx, 1
0xd387:	cmp	ebp, 0xfff
0xd38d:	jbe	0xd370


0xd2eb:	mov	edx, 0x10
0xd2f0:	xor	ecx, ecx
0xd2f2:	mov	rax, rdx
0xd2f5:	mul	rdi
0xd2f8:	jo	0xd60f


0xd050:	mov	qword ptr [rsp], rbx
0xd054:	jmp	0xcf50


0xcf25:	mov	rcx, r15
0xcf28:	mov	rdx, r13
0xcf2b:	mov	rsi, r14
0xcf2e:	mov	rdi, rbx
0xcf31:	mov	qword ptr [rsp + 8], r9
0xcf36:	call	0xcd60


0xd060:	mov	ebp, dword ptr [rsi + 4]
0xd063:	test	ebp, ebp
0xd065:	je	0xcf1c


0xce50:	cmp	dl, 0x2f
0xce53:	cmovne	r12, rbx
0xce57:	jmp	0xcd90


0xcdab:	test	al, al
0xcdad:	setne	al
0xcdb0:	cmp	dl, 0x2f
0xcdb3:	sete	r15b
0xcdb7:	and	r15b, al
0xcdba:	je	0xcd90




0xcd1a:	sub	rsp, 8
0xcd1e:	mov	rsi, qword ptr [rsi]
0xcd21:	mov	rdi, qword ptr [rdi]
0xcd24:	call	0x2cf0


0xccea:	sub	rsp, 8
0xccee:	mov	rsi, qword ptr [rsi]
0xccf1:	mov	rdi, qword ptr [rdi]
0xccf4:	call	0xfbe0


0xc6f8:	mov	rax, rsi
0xc6fb:	pxor	xmm0, xmm0
0xc6ff:	shr	rax, 1
0xc702:	and	esi, 1
0xc705:	or	rax, rsi
0xc708:	cvtsi2ss	xmm0, rax
0xc70d:	addss	xmm0, xmm0
0xc711:	jmp	0xc589


0xc580:	pxor	xmm0, xmm0
0xc584:	cvtsi2ss	xmm0, rsi
0xc589:	divss	xmm0, dword ptr [r12 + 8]
0xc590:	ucomiss	xmm0, dword ptr [rip + 0xbc75]
0xc597:	jae	0xc6d0


0xc50c:	mov	rdi, qword ptr [r12 + 0x48]
0xc511:	test	rdi, rdi
0xc514:	je	0xc531


0xc48c:	cmp	rbp, rax
0xc48f:	jae	0xc50c


0xc451:	add	r12, 0x10
0xc455:	cmp	qword ptr [rbp + 8], r12
0xc459:	ja	0xc3f0


0xc3f7:	mov	rbx, qword ptr [r12 + 8]
0xc3fc:	mov	rax, qword ptr [rbp + 0x40]
0xc400:	test	rbx, rbx
0xc403:	je	0xc435


0xc1d0:	mov	rax, rdx
0xc1d3:	add	rdi, 1
0xc1d7:	shl	rax, 5
0xc1db:	sub	rax, rdx
0xc1de:	xor	edx, edx
0xc1e0:	add	rax, rcx
0xc1e3:	movzx	ecx, byte ptr [rdi]
0xc1e6:	div	rsi
0xc1e9:	test	cl, cl
0xc1eb:	jne	0xc1d0


0xc1a4:	add	rsp, 8
0xc1a8:	mov	rax, rbp
0xc1ab:	pop	rbx
0xc1ac:	pop	rbp
0xc1ad:	pop	r12
0xc1af:	pop	r13
0xc1b1:	pop	r14
0xc1b3:	pop	r15
0xc1b5:	ret	


0xc19a:	add	r14, 0x10
0xc19e:	cmp	qword ptr [r15 + 8], r14
0xc1a2:	ja	0xc172


0xc17a:	mov	rbx, r14
0xc17d:	jmp	0xc183


0xc12d:	add	r9, 0x10
0xc131:	cmp	qword ptr [rdi + 8], r9
0xc135:	ja	0xc0ec


0xc0f4:	cmp	rdx, r8
0xc0f7:	jbe	0xc137


0xc023:	mov	rax, qword ptr [rdx]
0xc026:	test	rax, rax
0xc029:	jne	0xc046


0xc048:	sub	rsp, 8
0xc04c:	call	0x2940


0xbebc:	add	rsi, 0x10
0xbec0:	cmp	rsi, rdi
0xbec3:	jb	0xbe90


0xbe96:	mov	rax, qword ptr [rsi + 8]
0xbe9a:	mov	edx, 1
0xbe9f:	test	rax, rax
0xbea2:	je	0xbeb5


0xbe3d:	add	rcx, 0x10
0xbe41:	cmp	rcx, r8
0xbe44:	jb	0xbe10


0xbe16:	mov	rax, qword ptr [rcx + 8]
0xbe1a:	add	rsi, 1
0xbe1e:	add	rdx, 1
0xbe22:	test	rax, rax
0xbe25:	je	0xbe3d


0xbe50:	cmp	qword ptr [rdi + 0x20], rdx
0xbe54:	sete	al
0xbe57:	ret	


0xbe4e:	ret	


0xbdec:	add	rsi, 0x10
0xbdf0:	cmp	rsi, rdi
0xbdf3:	jb	0xbdc0


0xbdc6:	mov	rdx, qword ptr [rsi + 8]
0xbdca:	mov	ecx, 1
0xbdcf:	test	rdx, rdx
0xbdd2:	je	0xbde5


0xbd2a:	add	r12, 0x10
0xbd2e:	cmp	qword ptr [r13 + 8], r12
0xbd32:	ja	0xbc68


0xbc75:	mov	rbx, qword ptr [r12 + 8]
0xbc7a:	test	rbx, rbx
0xbc7d:	jne	0xbc9c


0xbc30:	mov	qword ptr [rdi], rcx
0xbc33:	xor	eax, eax
0xbc35:	ret	


0xbbe2:	movss	xmm1, dword ptr [rip + 0xc60e]
0xbbea:	ucomiss	xmm1, xmm0
0xbbed:	jbe	0xbc30


0xba30:	test	rax, rax
0xba33:	jne	0xba3f


0xb9f7:	test	rcx, rcx
0xb9fa:	je	0xba35


0xb974:	add	rsp, 8
0xb978:	mov	rax, r12
0xb97b:	pop	rbx
0xb97c:	pop	rbp
0xb97d:	pop	r12
0xb97f:	pop	r13
0xb981:	ret	


0xb960:	mov	rdx, rbx
0xb963:	mov	rsi, rbp
0xb966:	mov	edi, r13d
0xb969:	call	0xf9b0


0xb8f4:	add	rsp, 8
0xb8f8:	mov	rax, r12
0xb8fb:	pop	rbx
0xb8fc:	pop	rbp
0xb8fd:	pop	r12
0xb8ff:	pop	r13
0xb901:	ret	


0xb8e0:	mov	rdx, rbx
0xb8e3:	mov	rsi, rbp
0xb8e6:	mov	edi, r13d
0xb8e9:	call	0xf950


0xb740:	and	eax, 0xffffffb5
0xb743:	add	eax, 0x78
0xb746:	jmp	0xb6a8


0xb6a2:	and	eax, 0xffffffe0
0xb6a5:	add	eax, 0x73
0xb6a8:	mov	byte ptr [rsi + 3], al
0xb6ab:	mov	eax, edi
0xb6ad:	and	eax, 0x20
0xb6b0:	cmp	eax, 1
0xb6b3:	sbb	eax, eax
0xb6b5:	and	eax, 0xffffffbb
0xb6b8:	add	eax, 0x72
0xb6bb:	mov	byte ptr [rsi + 4], al
0xb6be:	mov	eax, edi
0xb6c0:	and	eax, 0x10
0xb6c3:	cmp	eax, 1
0xb6c6:	sbb	eax, eax
0xb6c8:	and	eax, 0xffffffb6
0xb6cb:	add	eax, 0x77
0xb6ce:	mov	byte ptr [rsi + 5], al
0xb6d1:	mov	eax, edi
0xb6d3:	and	eax, 8
0xb6d6:	cmp	eax, 1
0xb6d9:	sbb	eax, eax
0xb6db:	test	edi, 0x400
0xb6e1:	je	0xb768


0xb612:	cmp	edx, 0x6000
0xb618:	mov	eax, 0x62
0xb61d:	je	0xb660


0xb5dc:	add	rsp, 0x28
0xb5e0:	ret	


0xb5e1:	call	0x2b30




0xb3b0:	add	rax, 1
0xb3b4:	movzx	edx, byte ptr [rax]
0xb3b7:	cmp	dl, 0x2f
0xb3ba:	je	0xb3b0


0xb3fa:	ret	


0xb3c0:	mov	rcx, rax
0xb3c3:	xor	esi, esi
0xb3c5:	jmp	0xb3e5


0xb074:	cmp	rdi, rcx
0xb077:	cmovbe	rcx, rdi
0xb07b:	mov	r8, rcx
0xb07e:	mov	rax, r8
0xb081:	ret	


0xb08d:	mov	r8, rsi
0xb090:	mov	rax, rdi
0xb093:	xor	edx, edx
0xb095:	div	r8
0xb098:	test	rdx, rdx
0xb09b:	jne	0xb0c8


0x2900:	jmp	qword ptr [rip + 0x21a2e2]


0xb042:	jmp	0xaf90


0xaffa:	jmp	0xaf90


0xa91e:	lea	rbx, [rip + 0xd7a1]
0xa925:	mov	qword ptr [rip + 0x214c74], rbx
0xa92c:	pop	rbx
0xa92d:	ret	


0xa930:	mov	rdi, rbx
0xa933:	call	0xb3a0


0xa618:	cmp	r8d, 0x11
0xa61c:	jne	0xa688


0xa688:	mov	rbx, qword ptr [rsp + 0x128]
0xa690:	xor	rbx, qword ptr fs:[0x28]
0xa699:	mov	eax, r8d
0xa69c:	jne	0xa72d


0xa4b7:	cmp	ecx, 0x11
0xa4ba:	jne	0xa530


0xa530:	mov	rbx, qword ptr [rsp + 0x138]
0xa538:	xor	rbx, qword ptr fs:[0x28]
0xa541:	mov	eax, ecx
0xa543:	jne	0xa5cc






0xa110:	mov	eax, dword ptr [r14 + 0x10]
0xa114:	mov	edi, dword ptr [r14]
0xa117:	mov	esi, 0xc020660b
0xa11c:	mov	qword ptr [rsp], rdx
0xa120:	not	rdx
0xa123:	mov	dword ptr [rsp + 0x18], 0x48
0xa12b:	mov	qword ptr [rsp + 8], rdx
0xa130:	mov	rdx, rbp
0xa133:	mov	dword ptr [rsp + 0x10], eax
0xa137:	xor	eax, eax
0xa139:	call	0x2c10


0x9d56:	mov	eax, dword ptr [rcx + 0xc]
0x9d59:	lea	r10d, [rax - 1]
0x9d5d:	cmp	r10d, 2
0x9d61:	ja	0x9e38


0x9e57:	lea	rcx, [rip + 0xe19a]
0x9e5e:	lea	rsi, [rip + 0xe165]
0x9e65:	lea	rdi, [rip + 0xdda4]
0x9e6c:	mov	edx, 0xb87
0x9e71:	call	0x2be0


0x5f78:	cmp	byte ptr [rbx + 0x31], 0
0x5f7c:	jne	0x5f90


0x5cca:	cmp	r15d, 0x11
0x5cce:	mov	r12, qword ptr [rbp - 0x310]
0x5cd5:	je	0x64d8


0x5f40:	mov	edx, 0xffffff9c
0x5f45:	mov	rcx, rsi
0x5f48:	mov	r8d, 1
0x5f4e:	mov	rsi, rdi
0x5f51:	mov	edi, edx
0x5f53:	call	0xf6e0


0x5cab:	mov	rax, qword ptr [rbp - 0x320]
0x5cb2:	test	r15d, r15d
0x5cb5:	sete	r14b
0x5cb9:	test	rax, rax
0x5cbc:	je	0x5cc1


0x2d70:	jmp	qword ptr [rip + 0x21a0aa]


0x5ab0:	cmp	byte ptr [rdi + 0x2b], 0
0x5ab4:	je	0x5a35


0x5a17:	mov	esi, dword ptr [r9 + 0x18]
0x5a1b:	mov	edx, dword ptr [rcx + 0x18]
0x5a1e:	mov	eax, edx
0x5a20:	mov	ecx, esi
0x5a22:	not	eax
0x5a24:	and	ecx, 0xfff
0x5a2a:	or	ah, 0xe
0x5a2d:	test	eax, ecx
0x5a2f:	jne	0x5b00


0x5a90:	mov	rdi, r13
0x5a93:	call	0x2e40


0x5a40:	mov	edi, ebx
0x5a42:	call	0x2f80




0x5848:	add	rsp, 8
0x584c:	mov	ebx, 1
0x5851:	mov	eax, ebx
0x5853:	pop	rbx
0x5854:	pop	rbp
0x5855:	pop	r12
0x5857:	pop	r13
0x5859:	ret	


0x5878:	call	0x2950


0x54b5:	add	rsp, 0x78
0x54b9:	mov	eax, r15d
0x54bc:	pop	rbx
0x54bd:	pop	rbp
0x54be:	pop	r12
0x54c0:	pop	r13
0x54c2:	pop	r14
0x54c4:	pop	r15
0x54c6:	ret	






0x2cd0:	jmp	qword ptr [rip + 0x21a0fa]


0x4ef9:	jmp	0x4f38


0x4f05:	cmp	qword ptr [rip + 0x21812c], rbx
0x4f0c:	mov	rbp, rbx
0x4f0f:	mov	rsi, qword ptr [rip + 0x21a66a]
0x4f16:	cmovbe	rbp, qword ptr [rip + 0x21811a]
0x4f1e:	mov	edi, r12d
0x4f21:	mov	rdx, rbp
0x4f24:	call	0xb930


0x2cb0:	jmp	qword ptr [rip + 0x21a10a]


0x42ca:	lea	r8, [rsp + 0x1c]
0x42cf:	xor	r9d, r9d
0x42d2:	xor	edx, edx
0x42d4:	mov	rcx, rbx
0x42d7:	mov	rsi, rbp
0x42da:	mov	rdi, r12
0x42dd:	call	0x9d30


0x42b6:	mov	r13d, dword ptr [rip + 0x218d5f]
0x42bd:	test	r13d, 0xffff0e00
0x42c4:	je	0x4488


0x4010:	cmp	byte ptr [rsi], 0x2f
0x4013:	jne	0x3f6a


0x3f13:	call	0x3e60


0x3f07:	mov	rdi, qword ptr [rip + 0x2190fa]
0x3f0e:	call	0x30d8


0x3ed4:	pop	rbp
0x3ed5:	jmp	rax


0x3e83:	pop	rbp
0x3e84:	jmp	rax


0x156d8:	lea	rax, [rbx + rbx*4]
0x156dc:	mov	r13, r8
0x156df:	lea	rax, [rbx + rax*2]
0x156e3:	lea	r12, [rcx + rax*8]
0x156e7:	mov	qword ptr [r12], rdi
0x156eb:	mov	dword ptr [r12 + 0x10], 0
0x156f4:	mov	qword ptr [r12 + 0x18], 0
0x156fd:	mov	qword ptr [r12 + 0x20], 0
0x15706:	mov	qword ptr [r12 + 0x28], r8
0x1570b:	mov	qword ptr [r12 + 0x30], 0
0x15714:	mov	qword ptr [r12 + 0x38], 0
0x1571d:	mov	qword ptr [r12 + 0x40], r8
0x15722:	mov	qword ptr [r12 + 0x50], r8
0x15727:	movzx	ebx, byte ptr [rdi + 1]
0x1572b:	lea	eax, [rbx - 0x30]
0x1572e:	cmp	al, 9
0x15730:	ja	0x1576e


0x15698:	mov	rdi, rbp
0x1569b:	movzx	eax, byte ptr [rdi]
0x1569e:	test	al, al
0x156a0:	jne	0x15690




0x14173:	xor	esi, esi
0x14175:	xor	eax, eax
0x14177:	call	0x2a00


0x14049:	xor	eax, eax
0x1404b:	mov	esi, 0x406
0x14050:	call	0x2a00


0x140a0:	mov	edi, ebp
0x140a2:	xor	eax, eax
0x140a4:	call	0x2a00


0x14075:	jg	0x140d0


0x139d6:	mov	rsi, qword ptr [rsp + 8]
0x139db:	mov	rdx, rbp
0x139de:	mov	rdi, rbx
0x139e1:	sub	r14, rbp
0x139e4:	call	0x2d80


0x2d80:	jmp	qword ptr [rip + 0x21a0a2]




0x133c3:	mov	rdi, qword ptr [rsp + 8]
0x133c8:	mov	rsi, r12
0x133cb:	call	0x13880


0x133b0:	shl	rax, 8
0x133b4:	add	rdx, 1
0x133b8:	add	rax, 0xff
0x133be:	cmp	r14, rax
0x133c1:	ja	0x133b0


0x133ff:	mov	qword ptr [r13 + 0x10], 0
0x13407:	mov	qword ptr [r13 + 8], 0
0x1340f:	mov	rcx, qword ptr [rsp + 0x18]
0x13414:	xor	rcx, qword ptr fs:[0x28]
0x1341d:	mov	rax, rbp
0x13420:	jne	0x13445


0x13379:	mov	rax, rbx
0x1337c:	xor	edx, edx
0x1337e:	sub	rax, r14
0x13381:	div	r15
0x13384:	sub	rbx, rdx
0x13387:	mov	rdi, rdx
0x1338a:	mov	rsi, rax
0x1338d:	xor	edx, edx
0x1338f:	mov	rax, rbp
0x13392:	div	r15
0x13395:	cmp	rbp, rbx
0x13398:	jbe	0x13438






0x2c90:	jmp	qword ptr [rip + 0x21a11a]






0x127f1:	push	r12
0x127f3:	push	rbp
0x127f4:	mov	r12d, edx
0x127f7:	push	rbx
0x127f8:	mov	rbp, rsi
0x127fb:	mov	rbx, rdi
0x127fe:	call	0x2db0










0x12136:	test	rdx, rdx
0x12139:	je	0x1210a




0x11f11:	call	0x119b0


0x11f35:	mov	dword ptr [rsp + 8], r10d
0x11f3a:	jmp	0x11f11


0x11ee0:	cmp	r10d, 0x2f
0x11ee4:	ja	0x11f3c


0x11e10:	mov	eax, dword ptr [r10]
0x11e13:	cmp	eax, 0x2f
0x11e16:	ja	0x11e5a




0x11341:	test	r12, r12
0x11344:	je	0x116e8


0x1134a:	mov	eax, dword ptr [rip + 0x20e3dc]
0x11350:	test	eax, eax
0x11352:	js	0x11388


0x1125f:	xor	esi, esi
0x11261:	cmp	r9, 0x3ffffffe
0x11268:	mov	qword ptr [rdi], 0
0x1126f:	sete	sil
0x11273:	mov	r10d, 1
0x11279:	cmp	r8, 1
0x1127d:	ja	0x1129b


0x11279:	cmp	r8, 1
0x1127d:	ja	0x1129b


0x111e8:	lea	rdi, [rbx + 0x10]
0x111ec:	mov	byte ptr [rsp + 0xf], al
0x111f0:	call	0x12ee0


0x11208:	mov	qword ptr [rsi], 0
0x1120f:	xor	eax, eax
0x11211:	jmp	0x11178


0x11189:	mov	rdi, rbx
0x1118c:	call	0x12ee0


0x1119e:	mov	rax, qword ptr [rbp + 0x60]
0x111a2:	mov	rdx, qword ptr [rbp + 0x58]
0x111a6:	mov	qword ptr [rbx + 0x18], rax
0x111aa:	mov	qword ptr [rbx + 0x10], rdx
0x111ae:	add	rsp, 0x18
0x111b2:	xor	eax, eax
0x111b4:	pop	rbx
0x111b5:	pop	rbp
0x111b6:	ret	


0x1116d:	xor	eax, eax
0x1116f:	cmp	rdx, 0x3fffffff
0x11176:	je	0x111e8


0x10adf:	mov	rsi, qword ptr [rsp + 0x118]
0x10ae7:	xor	rsi, qword ptr fs:[0x28]
0x10af0:	mov	eax, ebx
0x10af2:	jne	0x110c8


0x10ad4:	cmp	r9d, r15d
0x10ad7:	jg	0x10b18


0x10a16:	lea	rax, [r14 - 1]
0x10a1a:	cmp	rax, r12
0x10a1d:	jg	0x10adf


0x108e0:	lea	rdx, [rsp + 0xc]
0x108e5:	lea	rcx, [rip - 0x1fc]
0x108ec:	call	0x10710


0x108a6:	lea	rcx, [rip + 0x8073]
0x108ad:	lea	rsi, [rip + 0x801c]
0x108b4:	lea	rdi, [rip + 0x803d]
0x108bb:	mov	edx, 0x147
0x108c0:	call	0x2be0


0x10548:	sub	r13d, 1
0x1054c:	cmp	r13d, -1
0x10550:	jne	0x10538


0x105e1:	mov	rcx, qword ptr [rsp + 0x10]
0x105e6:	lea	eax, [r13 - 1]
0x105ea:	xor	r15d, r15d
0x105ed:	lea	rbx, [rsp + 0x20]
0x105f2:	lea	rax, [rcx + rax*8 + 8]
0x105f7:	mov	r14, rcx
0x105fa:	mov	qword ptr [rsp + 8], rax
0x105ff:	xor	eax, eax
0x10601:	jmp	0x10648


0x100e3:	mov	eax, 1
0x100e8:	shl	rax, cl
0x100eb:	test	al, 0x36
0x100ed:	jne	0x10124


0x102ca:	lea	rcx, [rip + 0x85df]
0x102d1:	lea	rsi, [rip + 0x8558]
0x102d8:	lea	rdi, [rip + 0x8548]
0x102df:	mov	edx, 0x63
0x102e4:	call	0x2be0




0xf244:	pop	rbx
0xf245:	mov	dword ptr [rip + 0x20de49], 1
0xf24f:	pop	rbp
0xf250:	pop	r12
0xf252:	ret	


0xf235:	mov	rdi, r12
0xf238:	call	0x30d0






0xd810:	mov	r12d, eax
0xd813:	mov	r10d, esi
0xd816:	and	r12d, 0x49
0xd81a:	or	r10d, 0x49
0xd81e:	or	r12d, ebp
0xd821:	cmovne	esi, r10d
0xd825:	jmp	0xd7a8


0xd764:	cmp	r10b, 3
0xd768:	jne	0xd7a8


0xd370:	movsx	eax, byte ptr [rdx]
0xd373:	lea	ecx, [rax - 0x30]
0xd376:	cmp	cl, 7
0xd379:	ja	0xd5c0


0xd38f:	add	rsp, 8
0xd393:	xor	eax, eax
0xd395:	pop	rbx
0xd396:	pop	rbp
0xd397:	ret	


0xd60f:	mov	ecx, 1
0xd614:	jmp	0xd2fe


0xd2fe:	test	rax, rax
0xd301:	js	0xd619


0xd2c8:	mov	edx, eax
0xd2ca:	and	edx, 0xffffffef
0xd2cd:	cmp	dl, 0x2d
0xd2d0:	sete	dl
0xd2d3:	cmp	al, 0x2b
0xd2d5:	sete	al
0xd2d8:	add	rcx, 1
0xd2dc:	or	eax, edx
0xd2de:	movzx	eax, al
0xd2e1:	add	rdi, rax
0xd2e4:	movzx	eax, byte ptr [rcx]
0xd2e7:	test	al, al
0xd2e9:	jne	0xd2c8


0xcf50:	cmp	dword ptr [rsp + 0x108], -1
0xcf58:	mov	eax, dword ptr [rsp + 0x100]
0xcf5f:	mov	esi, r12d
0xcf62:	sete	cl
0xcf65:	cmp	dword ptr [rsp + 0x110], -1
0xcf6d:	sete	dl
0xcf70:	and	eax, 0xc00
0xcf75:	and	esi, 0x200
0xcf7b:	or	eax, esi
0xcf7d:	and	cl, dl
0xcf7f:	mov	byte ptr [rsp + 0x1f], cl
0xcf83:	jne	0xd0d0


0xd06b:	mov	rdi, rbx
0xd06e:	xor	r12d, r12d
0xd071:	call	0xf6c0


0xcd90:	add	rbx, 1
0xcd94:	movzx	edx, byte ptr [rbx - 1]
0xcd98:	test	dl, dl
0xcd9a:	je	0xce38


0xcdbc:	test	r12, r12
0xcdbf:	je	0xcd90


0xc589:	divss	xmm0, dword ptr [r12 + 8]
0xc590:	ucomiss	xmm0, dword ptr [rip + 0xbc75]
0xc597:	jae	0xc6d0


0xc59d:	ucomiss	xmm0, dword ptr [rip + 0xbc6c]
0xc5a4:	jb	0xc720


0xc6d0:	xor	ebx, ebx
0xc6d2:	mov	rcx, qword ptr [rsp + 0x58]
0xc6d7:	xor	rcx, qword ptr fs:[0x28]
0xc6e0:	mov	eax, ebx
0xc6e2:	jne	0xc77a


0xc501:	add	rbp, 0x10
0xc505:	cmp	qword ptr [r12 + 8], rbp
0xc50a:	ja	0xc4e0


0xc531:	mov	rdi, qword ptr [r12]
0xc535:	call	0x30d0


0xc435:	test	rax, rax
0xc438:	je	0xc440


0xc172:	mov	rdi, qword ptr [r14]
0xc175:	test	rdi, rdi
0xc178:	je	0xc19a


0xc183:	mov	rsi, r13
0xc186:	call	r12


0xc137:	mov	rax, r8
0xc13a:	ret	


0xc0ec:	mov	rcx, qword ptr [r9]
0xc0ef:	test	rcx, rcx
0xc0f2:	je	0xc12d


0xc0f9:	mov	qword ptr [rsi + r8*8], rcx
0xc0fd:	mov	rcx, qword ptr [r9 + 8]
0xc101:	lea	rax, [r8 + 1]
0xc105:	test	rcx, rcx
0xc108:	je	0xc12a


0xc046:	ret	


0xbe90:	cmp	qword ptr [rsi], 0
0xbe94:	je	0xbebc


0xbeb5:	cmp	rbx, rdx
0xbeb8:	cmovb	rbx, rdx
0xbebc:	add	rsi, 0x10
0xbec0:	cmp	rsi, rdi
0xbec3:	jb	0xbe90


0xbdc0:	cmp	qword ptr [rsi], 0
0xbdc4:	je	0xbdec


0xbdf5:	ret	


0xbde5:	cmp	rax, rcx
0xbde8:	cmovb	rax, rcx
0xbdec:	add	rsi, 0x10
0xbdf0:	cmp	rsi, rdi
0xbdf3:	jb	0xbdc0


0xbc68:	mov	r15, qword ptr [r12]
0xbc6c:	test	r15, r15
0xbc6f:	je	0xbd2a


0xbc7f:	jmp	0xbcdb


0xbc9c:	mov	r15, qword ptr [rbx]
0xbc9f:	mov	rdi, rbp
0xbca2:	mov	rsi, r15
0xbca5:	call	0xba70


0xbbef:	movss	xmm1, dword ptr [rdx + 0xc]
0xbbf4:	ucomiss	xmm1, dword ptr [rip + 0xc601]
0xbbfb:	jbe	0xbc30


0xba35:	add	rdi, 2
0xba39:	cmp	rdi, -1
0xba3d:	jne	0xb9d8


0xb9fc:	mov	r8d, 0x10
0xba02:	mov	esi, 9
0xba07:	mov	ecx, 3
0xba0c:	jmp	0xba19


0xb6a8:	mov	byte ptr [rsi + 3], al
0xb6ab:	mov	eax, edi
0xb6ad:	and	eax, 0x20
0xb6b0:	cmp	eax, 1
0xb6b3:	sbb	eax, eax
0xb6b5:	and	eax, 0xffffffbb
0xb6b8:	add	eax, 0x72
0xb6bb:	mov	byte ptr [rsi + 4], al
0xb6be:	mov	eax, edi
0xb6c0:	and	eax, 0x10
0xb6c3:	cmp	eax, 1
0xb6c6:	sbb	eax, eax
0xb6c8:	and	eax, 0xffffffb6
0xb6cb:	add	eax, 0x77
0xb6ce:	mov	byte ptr [rsi + 5], al
0xb6d1:	mov	eax, edi
0xb6d3:	and	eax, 8
0xb6d6:	cmp	eax, 1
0xb6d9:	sbb	eax, eax
0xb6db:	test	edi, 0x400
0xb6e1:	je	0xb768


0xb768:	and	eax, 0xffffffb5
0xb76b:	add	eax, 0x78
0xb76e:	jmp	0xb6ed


0xb6e7:	and	eax, 0xffffffe0
0xb6ea:	add	eax, 0x73
0xb6ed:	mov	byte ptr [rsi + 6], al
0xb6f0:	mov	eax, edi
0xb6f2:	and	eax, 4
0xb6f5:	cmp	eax, 1
0xb6f8:	sbb	eax, eax
0xb6fa:	and	eax, 0xffffffbb
0xb6fd:	add	eax, 0x72
0xb700:	mov	byte ptr [rsi + 7], al
0xb703:	mov	eax, edi
0xb705:	and	eax, 2
0xb708:	cmp	eax, 1
0xb70b:	sbb	eax, eax
0xb70d:	and	eax, 0xffffffb6
0xb710:	add	eax, 0x77
0xb713:	mov	byte ptr [rsi + 8], al
0xb716:	mov	eax, edi
0xb718:	and	eax, 1
0xb71b:	cmp	eax, 1
0xb71e:	sbb	eax, eax
0xb720:	and	edi, 0x200
0xb726:	je	0xb750


0xb61f:	cmp	edx, 0x2000
0xb625:	mov	eax, 0x63
0xb62a:	je	0xb660


0x2b30:	jmp	qword ptr [rip + 0x21a1ca]


0xb3e5:	cmp	dl, 0x2f
0xb3e8:	jne	0xb3d0


0xb09d:	xor	edx, edx
0xb09f:	mov	rax, rdi
0xb0a2:	div	r8
0xb0a5:	mov	r8, rsi
0xb0a8:	imul	r8, rax
0xb0ac:	mov	r9, rax
0xb0af:	cmp	r8, rcx
0xb0b2:	ja	0xb074


0xb0c8:	mov	rax, r8
0xb0cb:	mov	r8, rdx
0xb0ce:	jmp	0xb093




0xa61e:	lea	r14, [rsp + 0x20]
0xa623:	mov	rdi, rbx
0xa626:	mov	rsi, r14
0xa629:	call	0xa3f0


0xa6a2:	add	rsp, 0x130
0xa6a9:	pop	rbx
0xa6aa:	pop	rbp
0xa6ab:	pop	r12
0xa6ad:	pop	r13
0xa6af:	pop	r14
0xa6b1:	ret	


0xa72d:	call	0x2b30


0xa4bc:	lea	rax, [rsp + 0x30]
0xa4c1:	mov	rdi, rbx
0xa4c4:	mov	rsi, rax
0xa4c7:	mov	qword ptr [rsp], rax
0xa4cb:	call	0xa3f0


0xa549:	add	rsp, 0x148
0xa550:	pop	rbx
0xa551:	pop	rbp
0xa552:	pop	r12
0xa554:	pop	r13
0xa556:	pop	r14
0xa558:	pop	r15
0xa55a:	ret	


0xa5cc:	call	0x2b30


0x2c10:	jmp	qword ptr [rip + 0x21a15a]


0x9d67:	mov	r10d, dword ptr [rcx + 0x38]
0x9d6b:	cmp	r10d, 2
0x9d6f:	ja	0x9e19


0x9e38:	lea	rcx, [rip + 0xe1b9]
0x9e3f:	lea	rsi, [rip + 0xe184]
0x9e46:	lea	rdi, [rip + 0xddeb]
0x9e4d:	mov	edx, 0xb88
0x9e52:	call	0x2be0


0x5f7e:	mov	r12, qword ptr [rbp - 0x308]
0x5f85:	xor	r15d, r15d
0x5f88:	jmp	0x5cdb


0x5f90:	xor	r15d, r15d
0x5f93:	jmp	0x5d28


0x64d8:	cmp	dword ptr [rbx + 8], 2
0x64dc:	je	0x5d28


0x5cdb:	cmp	dword ptr [rbx + 4], 2
0x5cdf:	lea	r10, [rbp - 0x280]
0x5ce6:	mov	rsi, r12
0x5ce9:	mov	edi, 1
0x5cee:	mov	rdx, r10
0x5cf1:	je	0x64f0


0x5cbe:	mov	byte ptr [rax], r14b
0x5cc1:	test	r15d, r15d
0x5cc4:	je	0x5f78




0x5aba:	mov	esi, dword ptr [r9 + 0x18]
0x5abe:	mov	edx, dword ptr [rdi + 0x10]
0x5ac1:	jmp	0x5a1e


0x5b00:	and	edx, esi
0x5b02:	mov	rdi, r13
0x5b05:	mov	esi, ebx
0x5b07:	and	edx, 0x1c0
0x5b0d:	call	0xd9f0


0x2e40:	jmp	qword ptr [rip + 0x21a042]


0x2f80:	jmp	qword ptr [rip + 0x219fa2]




0x4f38:	pop	rbx
0x4f39:	mov	eax, 1
0x4f3e:	pop	rbp
0x4f3f:	pop	r12
0x4f41:	ret	




0x4488:	lea	rdx, [rsp + 0xb0]
0x4490:	mov	rsi, r12
0x4493:	mov	edi, 1
0x4498:	call	0x2b00


0x4019:	lea	rbp, [rsp + 0x10]
0x401e:	mov	qword ptr [rsp + 8], rdx
0x4023:	mov	dword ptr [rsp + 0x10], 0
0x402b:	mov	rdi, rbp
0x402e:	call	0x10450


0x30d8:	jmp	qword ptr [rip + 0x219f1a]


0x15732:	jmp	0x15b6a


0x1576e:	lea	rax, [rbp + 1]
0x15772:	cmp	bl, 0x27
0x15775:	mov	rdx, rax
0x15778:	jne	0x15740


0x14077:	cmp	esi, 4
0x1407a:	je	0x14150


0x140d0:	cmp	esi, 0x407
0x140d6:	jg	0x14120




0x13422:	add	rsp, 0x28
0x13426:	pop	rbx
0x13427:	pop	rbp
0x13428:	pop	r12
0x1342a:	pop	r13
0x1342c:	pop	r14
0x1342e:	pop	r15
0x13430:	ret	


0x13445:	call	0x2b30


0x13438:	mov	qword ptr [r13 + 8], rax
0x1343c:	mov	qword ptr [r13 + 0x10], rsi
0x13440:	mov	rbp, rdx
0x13443:	jmp	0x1340f


0x1339e:	lea	rbx, [rdi - 1]
0x133a2:	mov	rbp, rdx
0x133a5:	cmp	rbx, r14
0x133a8:	jae	0x13370




0x1210a:	mov	qword ptr [rsi], rcx
0x1210d:	imul	rcx, r9
0x12111:	mov	rsi, rcx
0x12114:	jmp	0x12070


0x116e8:	call	0x2950


0x11388:	test	r13d, r13d
0x1138b:	mov	dword ptr [rip + 0x20e397], 0xffffffff
0x11395:	mov	dword ptr [rip + 0x20e389], 0xffffffff
0x1139f:	jne	0x11500


0x11354:	cmp	r13d, 2
0x11358:	je	0x11560


0x1127f:	xor	eax, eax
0x11281:	cmp	rdx, 0x3ffffffe
0x11288:	mov	qword ptr [rdi + 0x10], 0
0x11290:	sete	al
0x11293:	mov	r10d, 1
0x11299:	add	esi, eax
0x1129b:	xor	eax, eax
0x1129d:	cmp	esi, 1
0x112a0:	sete	al
0x112a3:	add	eax, r10d
0x112a6:	ret	


0x1129b:	xor	eax, eax
0x1129d:	cmp	esi, 1
0x112a0:	sete	al
0x112a3:	add	eax, r10d
0x112a6:	ret	


0x10af8:	add	rsp, 0x128
0x10aff:	pop	rbx
0x10b00:	pop	rbp
0x10b01:	pop	r12
0x10b03:	pop	r13
0x10b05:	pop	r14
0x10b07:	pop	r15
0x10b09:	ret	


0x110c8:	call	0x2b30


0x10ad9:	setl	bl
0x10adc:	movzx	ebx, bl
0x10adf:	mov	rsi, qword ptr [rsp + 0x118]
0x10ae7:	xor	rsi, qword ptr fs:[0x28]
0x10af0:	mov	eax, ebx
0x10af2:	jne	0x110c8


0x10a23:	mov	rbp, rdx
0x10a26:	mov	rdx, qword ptr [rip + 0x20ecf3]
0x10a2d:	mov	r11, rsi
0x10a30:	test	rdx, rdx
0x10a33:	je	0x10fd0


0x10538:	mov	rdx, qword ptr [rax]
0x1053b:	sub	rax, 8
0x1053f:	cmp	byte ptr [rdx], 0x2f
0x10542:	jne	0x105d8


0x10648:	cmp	eax, 3
0x1064b:	jne	0x10608


0x100ef:	test	al, 8
0x100f1:	jne	0x101c0


0x10124:	test	ebx, ebx
0x10126:	js	0x10158


0xd7a8:	mov	r10d, r9d
0xd7ab:	test	edi, edi
0xd7ad:	movzx	r12d, byte ptr [rcx]
0xd7b1:	not	r10d
0xd7b4:	je	0xd710


0xd76a:	and	esi, eax
0xd76c:	mov	r10d, esi
0xd76f:	and	r10d, 0x124
0xd776:	cmp	r10d, 1
0xd77a:	sbb	r10d, r10d
0xd77d:	not	r10d
0xd780:	and	r10d, 0x124
0xd787:	mov	r12d, r10d
0xd78a:	or	r12b, 0x92
0xd78e:	test	sil, 0x92
0xd792:	cmovne	r10d, r12d
0xd796:	mov	r12d, r10d
0xd799:	or	r12d, 0x49
0xd79d:	test	sil, 0x49
0xd7a1:	cmovne	r10d, r12d
0xd7a5:	or	esi, r10d
0xd7a8:	mov	r10d, r9d
0xd7ab:	test	edi, edi
0xd7ad:	movzx	r12d, byte ptr [rcx]
0xd7b1:	not	r10d
0xd7b4:	je	0xd710


0xd5c0:	test	al, al
0xd5c2:	jne	0xd38f


0xd619:	call	0x12260


0xd307:	test	rcx, rcx
0xd30a:	jne	0xd619


0xcf89:	mov	eax, r12d
0xcf8c:	and	eax, 0xffffffc0
0xcf8f:	mov	dword ptr [rsp + 8], eax
0xcf93:	mov	esi, dword ptr [rsp + 8]
0xcf97:	mov	rdi, qword ptr [rsp]
0xcf9b:	mov	qword ptr [rsp + 0x10], r9
0xcfa0:	call	0x29c0


0xd0d0:	test	eax, eax
0xd0d2:	jne	0xd130


0xcdc1:	mov	rax, r12
0xcdc4:	sub	rax, rbp
0xcdc7:	cmp	rax, 1
0xcdcb:	je	0xce60


0xc720:	cvttss2si	rsi, xmm0
0xc725:	jmp	0xc5c8


0xc5aa:	subss	xmm0, dword ptr [rip + 0xbc5e]
0xc5b2:	movabs	rax, 0x8000000000000000
0xc5bc:	cvttss2si	rsi, xmm0
0xc5c1:	xor	rsi, rax
0xc5c4:	nop	dword ptr [rax]
0xc5c8:	mov	rdi, rsi
0xc5cb:	call	0xb9b0


0xc6e8:	add	rsp, 0x60
0xc6ec:	pop	rbx
0xc6ed:	pop	rbp
0xc6ee:	pop	r12
0xc6f0:	ret	


0xc77a:	call	0x2b30


0xc4e0:	mov	rdi, qword ptr [rbp + 8]
0xc4e4:	test	rdi, rdi
0xc4e7:	je	0xc501


0xc4c6:	add	rbp, 0x10
0xc4ca:	cmp	rax, rbp
0xc4cd:	ja	0xc498


0xc4a1:	mov	rbx, rbp
0xc4a4:	jmp	0xc4b3


0xc440:	mov	qword ptr [r12], 0
0xc448:	mov	qword ptr [r12 + 8], 0
0xc451:	add	r12, 0x10
0xc455:	cmp	qword ptr [rbp + 8], r12
0xc459:	ja	0xc3f0


0xc43a:	mov	rdi, qword ptr [r12]
0xc43e:	call	rax


0xc416:	mov	rdx, qword ptr [rbx + 8]
0xc41a:	mov	rcx, qword ptr [rbp + 0x48]
0xc41e:	mov	qword ptr [rbx], 0
0xc425:	test	rdx, rdx
0xc428:	mov	qword ptr [rbx + 8], rcx
0xc42c:	mov	qword ptr [rbp + 0x48], rbx
0xc430:	mov	rbx, rdx
0xc433:	jne	0xc408


0xc40d:	mov	rdi, qword ptr [rbx]
0xc410:	call	rax


0xc12a:	mov	r8, rax
0xc12d:	add	r9, 0x10
0xc131:	cmp	qword ptr [rdi + 8], r9
0xc135:	ja	0xc0ec


0xc039:	mov	rax, qword ptr [rdx]
0xc03c:	test	rax, rax
0xc03f:	je	0xc030


0xbea8:	mov	rax, qword ptr [rax + 8]
0xbeac:	add	rdx, 1
0xbeb0:	test	rax, rax
0xbeb3:	jne	0xbea8


0xbe30:	mov	rax, qword ptr [rax + 8]
0xbe34:	add	rdx, 1
0xbe38:	test	rax, rax
0xbe3b:	jne	0xbe30


0xbdd8:	mov	rdx, qword ptr [rdx + 8]
0xbddc:	add	rcx, 1
0xbde0:	test	rdx, rdx
0xbde3:	jne	0xbdd8


0xbcdb:	test	r14b, r14b
0xbcde:	mov	qword ptr [r12 + 8], 0
0xbce7:	jne	0xbd2a


0xbbfd:	movss	xmm1, dword ptr [rdx]
0xbc01:	ucomiss	xmm1, dword ptr [rip + 0xc5f8]
0xbc08:	jb	0xbc30


0xb9d8:	mov	rax, rdi
0xb9db:	mov	rcx, rdi
0xb9de:	mul	r9
0xb9e1:	mov	rax, rdx
0xb9e4:	shr	rax, 1
0xb9e7:	lea	rax, [rax + rax*2]
0xb9eb:	sub	rcx, rax
0xb9ee:	cmp	rdi, 9
0xb9f2:	mov	rax, rcx
0xb9f5:	jbe	0xba30


0xba19:	add	rcx, 2
0xba1d:	xor	edx, edx
0xba1f:	mov	rax, rdi
0xba22:	div	rcx
0xba25:	add	rsi, r8
0xba28:	cmp	rsi, rdi
0xba2b:	mov	rax, rdx
0xba2e:	jb	0xba10


0xb6ed:	mov	byte ptr [rsi + 6], al
0xb6f0:	mov	eax, edi
0xb6f2:	and	eax, 4
0xb6f5:	cmp	eax, 1
0xb6f8:	sbb	eax, eax
0xb6fa:	and	eax, 0xffffffbb
0xb6fd:	add	eax, 0x72
0xb700:	mov	byte ptr [rsi + 7], al
0xb703:	mov	eax, edi
0xb705:	and	eax, 2
0xb708:	cmp	eax, 1
0xb70b:	sbb	eax, eax
0xb70d:	and	eax, 0xffffffb6
0xb710:	add	eax, 0x77
0xb713:	mov	byte ptr [rsi + 8], al
0xb716:	mov	eax, edi
0xb718:	and	eax, 1
0xb71b:	cmp	eax, 1
0xb71e:	sbb	eax, eax
0xb720:	and	edi, 0x200
0xb726:	je	0xb750


0xb750:	and	eax, 0xffffffb5
0xb753:	add	eax, 0x78
0xb756:	mov	byte ptr [rsi + 9], al
0xb759:	mov	eax, 0x20
0xb75e:	mov	word ptr [rsi + 0xa], ax
0xb762:	ret	


0xb728:	and	eax, 0xffffffe0
0xb72b:	add	eax, 0x74
0xb72e:	mov	byte ptr [rsi + 9], al
0xb731:	mov	eax, 0x20
0xb736:	mov	word ptr [rsi + 0xa], ax
0xb73a:	ret	


0xb62c:	cmp	edx, 0xa000
0xb632:	mov	eax, 0x6c
0xb637:	je	0xb660




0xb3ea:	add	rcx, 1
0xb3ee:	movzx	edx, byte ptr [rcx]
0xb3f1:	mov	esi, 1
0xb3f6:	test	dl, dl
0xb3f8:	jne	0xb3e5


0xb3d0:	test	sil, sil
0xb3d3:	je	0xb3da


0xb0b4:	xor	edx, edx
0xb0b6:	mov	rax, r8
0xb0b9:	div	rsi
0xb0bc:	cmp	rax, r9
0xb0bf:	jne	0xb074


0xb093:	xor	edx, edx
0xb095:	div	r8
0xb098:	test	rdx, rdx
0xb09b:	jne	0xb0c8




0x9d75:	cmp	byte ptr [rcx + 0x17], 0
0x9d79:	jne	0x9dd0


0x9e19:	lea	rcx, [rip + 0xe1d8]
0x9e20:	lea	rsi, [rip + 0xe1a3]
0x9e27:	lea	rdi, [rip + 0xde32]
0x9e2e:	mov	edx, 0xb89
0x9e33:	call	0x2be0


0x5d28:	test	r13b, r13b
0x5d2b:	je	0x5d6a


0x64e2:	jmp	0x5cdb


0x64f0:	call	0x2b00


0x5cf7:	call	0x2dd0


0x5a1e:	mov	eax, edx
0x5a20:	mov	ecx, esi
0x5a22:	not	eax
0x5a24:	and	ecx, 0xfff
0x5a2a:	or	ah, 0xe
0x5a2d:	test	eax, ecx
0x5a2f:	jne	0x5b00






0x15b6a:	mov	rax, rbp
0x15b6d:	nop	dword ptr [rax]
0x15b70:	add	rax, 1
0x15b74:	movzx	edx, byte ptr [rax]
0x15b77:	lea	ecx, [rdx - 0x30]
0x15b7a:	cmp	cl, 9
0x15b7d:	jbe	0x15b70


0x1577a:	or	dword ptr [r12 + 0x10], 1
0x15780:	jmp	0x15768


0x15740:	cmp	bl, 0x2d
0x15743:	je	0x15788


0x14150:	mov	eax, dword ptr [rsp]
0x14153:	cmp	eax, 0x2f
0x14156:	ja	0x14244


0x14080:	jg	0x14140


0x140d8:	cmp	esi, 0x406
0x140de:	jge	0x14150


0x14120:	cmp	esi, 0x409
0x14126:	je	0x14150


0x1340f:	mov	rcx, qword ptr [rsp + 0x18]
0x13414:	xor	rcx, qword ptr fs:[0x28]
0x1341d:	mov	rax, rbp
0x13420:	jne	0x13445


0x113a5:	mov	rsi, qword ptr [rsp + 8]
0x113aa:	test	rsi, rsi
0x113ad:	je	0x11640


0x11500:	cmp	r13d, 3
0x11504:	je	0x1152c


0x11560:	test	ebx, ebx
0x11562:	lea	rdx, [rsp + 0x70]
0x11567:	js	0x11670


0x1135e:	mov	rsi, qword ptr [rsp + 8]
0x11363:	test	ebx, ebx
0x11365:	js	0x11690


0x10fd0:	mov	r8, qword ptr [rip + 0x20bff9]
0x10fd7:	lea	rdx, [rip - 0x65e]
0x10fde:	lea	rcx, [rip - 0x655]
0x10fe5:	mov	qword ptr [rsp + 0x20], rsi
0x10fea:	mov	edi, 0x10
0x10fef:	xor	esi, esi
0x10ff1:	mov	dword ptr [rsp + 0x18], r10d
0x10ff6:	mov	dword ptr [rsp + 0x10], r13d
0x10ffb:	call	0xc220


0x10a39:	mov	rsi, qword ptr [rip + 0x20ecd8]
0x10a40:	test	rsi, rsi
0x10a43:	je	0x10b20


0x1064d:	mov	eax, dword ptr [rsp + 0x24]
0x10651:	test	eax, eax
0x10653:	jg	0x1061a


0x10608:	mov	rdx, r12
0x1060b:	mov	rsi, rbx
0x1060e:	mov	rdi, qword ptr [r14]
0x10611:	call	rbp


0x100f7:	test	ecx, ecx
0x100f9:	jne	0x102ca


0x101c0:	mov	edx, dword ptr [r12 + 4]
0x101c5:	test	edx, edx
0x101c7:	js	0x10259


0x10158:	mov	rdi, r13
0x1015b:	call	0x2b20


0x10128:	mov	edi, ebx
0x1012a:	call	0x2e60


0xd710:	mov	edi, r9d
0xd713:	or	edi, edx
0xd715:	not	edi
0xd717:	and	esi, edi
0xd719:	cmp	r12b, 0x2d
0xd71d:	je	0xd830


0xd7ba:	and	r10d, edi
0xd7bd:	and	esi, r10d
0xd7c0:	cmp	r12b, 0x2d
0xd7c4:	je	0xd830


0xd5c8:	sub	rdx, rbx
0xd5cb:	mov	ebx, ebp
0xd5cd:	mov	eax, 0xfff
0xd5d2:	and	ebx, 0xc00
0xd5d8:	mov	edi, 0x20
0xd5dd:	or	ebx, 0x3ff
0xd5e3:	cmp	rdx, 5
0xd5e7:	cmovge	ebx, eax
0xd5ea:	call	0x12010


0xd310:	shl	rdi, 4
0xd314:	lea	rbp, [rip + 0xaf31]
0xd31b:	call	0x12010


0xd0d4:	mov	rdi, qword ptr [rsp]
0xd0d8:	mov	esi, r12d
0xd0db:	mov	qword ptr [rsp + 0x10], r9
0xd0e0:	call	0x29c0


0xd130:	mov	eax, r12d
0xd133:	and	eax, 0xffffffed
0xd136:	mov	dword ptr [rsp + 8], eax
0xd13a:	jmp	0xcf93


0xce60:	cmp	byte ptr [rbp], 0x2e
0xce64:	je	0xce1e


0xcdd1:	cmp	rax, 2
0xcdd5:	mov	byte ptr [r12], 0
0xcdda:	je	0xcea5


0xc4cf:	mov	rbp, qword ptr [r12]
0xc4d3:	cmp	rbp, rax
0xc4d6:	jae	0xc50c


0xc498:	mov	rdi, qword ptr [rbp]
0xc49c:	test	rdi, rdi
0xc49f:	je	0xc4c6


0xc4b3:	call	qword ptr [r12 + 0x40]


0xc408:	test	rax, rax
0xc40b:	je	0xc416


0xc140:	ret	


0xc115:	mov	r8, qword ptr [rcx]
0xc118:	add	rax, 1
0xc11c:	mov	qword ptr [rsi + rax*8 - 8], r8
0xc121:	mov	rcx, qword ptr [rcx + 8]
0xc125:	test	rcx, rcx
0xc128:	jne	0xc110


0xc030:	add	rdx, 0x10
0xc034:	cmp	rdx, rcx
0xc037:	jae	0xc048


0xc041:	ret	


0xbce9:	mov	rsi, r15
0xbcec:	mov	rdi, rbp
0xbcef:	call	0xba70


0xbc0a:	addss	xmm1, dword ptr [rip + 0xc5e2]
0xbc12:	movss	xmm2, dword ptr [rdx + 4]
0xbc17:	ucomiss	xmm2, xmm1
0xbc1a:	jbe	0xbc30


0xba10:	add	r8, 8
0xba14:	test	rdx, rdx
0xba17:	je	0xba35


0xb639:	cmp	edx, 0x1000
0xb63f:	mov	eax, 0x70
0xb644:	je	0xb660


0xb3da:	add	rcx, 1
0xb3de:	movzx	edx, byte ptr [rcx]
0xb3e1:	test	dl, dl
0xb3e3:	je	0xb3fa


0xb3d5:	mov	rax, rcx
0xb3d8:	xor	esi, esi
0xb3da:	add	rcx, 1
0xb3de:	movzx	edx, byte ptr [rcx]
0xb3e1:	test	dl, dl
0xb3e3:	je	0xb3fa


0xb0c1:	jmp	0xb07e


0x9d7b:	cmp	eax, 2
0x9d7e:	je	0x9d86


0x9dd0:	cmp	byte ptr [rcx + 0x2c], 0
0x9dd4:	je	0x9d7b


0x5d6a:	mov	eax, dword ptr [rbx + 4]
0x5d6d:	mov	dword ptr [rbp - 0x328], 1
0x5d77:	cmp	eax, 4
0x5d7a:	je	0x5d8e


0x5d2d:	mov	rdi, qword ptr [rbx + 0x48]
0x5d31:	test	rdi, rdi
0x5d34:	je	0x5d6a


0x15b70:	add	rax, 1
0x15b74:	movzx	edx, byte ptr [rax]
0x15b77:	lea	ecx, [rdx - 0x30]
0x15b7a:	cmp	cl, 9
0x15b7d:	jbe	0x15b70


0x15b7f:	cmp	dl, 0x24
0x15b82:	mov	r13, r8
0x15b85:	jne	0x1576e


0x15768:	movzx	ebx, byte ptr [rax]
0x1576b:	mov	rbp, rax
0x1576e:	lea	rax, [rbp + 1]
0x15772:	cmp	bl, 0x27
0x15775:	mov	rdx, rax
0x15778:	jne	0x15740


0x15788:	or	dword ptr [r12 + 0x10], 2
0x1578e:	jmp	0x15768


0x15745:	cmp	bl, 0x2b
0x15748:	je	0x15790


0x1415c:	add	rax, qword ptr [rsp + 0x10]
0x14161:	mov	edx, dword ptr [rax]
0x14163:	mov	edi, ebp
0x14165:	xor	eax, eax
0x14167:	call	0x2a00


0x14244:	mov	rax, qword ptr [rsp + 8]
0x14249:	jmp	0x14161


0x14086:	cmp	esi, 2
0x14089:	je	0x14150


0x14140:	cmp	esi, 9
0x14143:	je	0x140a0


0x140e0:	cmp	esi, 0x401
0x140e6:	je	0x140a0


0x14128:	jl	0x140a0


0x11640:	xor	r13d, r13d
0x11643:	jmp	0x1140a


0x113b3:	mov	rax, qword ptr [rsi]
0x113b6:	mov	rdi, qword ptr [rsi + 8]
0x113ba:	movabs	rcx, 0x20c49ba5e353f7cf
0x113c4:	lea	r13, [rsp + 0x30]
0x113c9:	mov	qword ptr [rsp + 0x30], rax
0x113ce:	mov	rax, rdi
0x113d1:	sar	rdi, 0x3f
0x113d5:	imul	rcx
0x113d8:	mov	rax, qword ptr [rsi + 0x10]
0x113dc:	mov	rsi, qword ptr [rsi + 0x18]
0x113e0:	mov	qword ptr [rsp + 0x40], rax
0x113e5:	mov	rax, rsi
0x113e8:	sar	rsi, 0x3f
0x113ec:	sar	rdx, 7
0x113f0:	sub	rdx, rdi
0x113f3:	mov	qword ptr [rsp + 0x38], rdx
0x113f8:	imul	rcx
0x113fb:	mov	rcx, rdx
0x113fe:	sar	rcx, 7
0x11402:	sub	rcx, rsi
0x11405:	mov	qword ptr [rsp + 0x48], rcx
0x1140a:	test	ebx, ebx
0x1140c:	mov	rdx, r13
0x1140f:	js	0x115e8


0x1152c:	cmp	qword ptr [rsp + 8], 0
0x11532:	je	0x11640


0x11506:	test	ebx, ebx
0x11508:	lea	rdx, [rsp + 0x70]
0x1150d:	js	0x11650


0x11670:	mov	rsi, r12
0x11673:	mov	edi, 1
0x11678:	call	0x2dd0


0x1156d:	mov	esi, ebx
0x1156f:	mov	edi, 1
0x11574:	call	0x2e20


0x11690:	xor	ecx, ecx
0x11692:	mov	rdx, rsi
0x11695:	mov	edi, 0xffffff9c
0x1169a:	mov	rsi, r12
0x1169d:	call	0x2930


0x1136b:	mov	edi, ebx
0x1136d:	call	0x2fc0


0x10b20:	mov	edi, 0x10
0x10b25:	mov	qword ptr [rsp + 0x28], r11
0x10b2a:	mov	dword ptr [rsp + 0x20], r10d
0x10b2f:	mov	dword ptr [rsp + 0x18], r9d
0x10b34:	mov	qword ptr [rsp + 0x10], rdx
0x10b39:	call	0x2df0


0x10a49:	mov	rax, qword ptr [rbp]
0x10a4d:	mov	rdi, rdx
0x10a50:	mov	qword ptr [rsp + 0x28], r11
0x10a55:	mov	dword ptr [rsp + 0x20], r10d
0x10a5a:	mov	dword ptr [rsp + 0x18], r9d
0x10a5f:	mov	qword ptr [rsi], rax
0x10a62:	call	0xca20


0x10655:	jmp	0x10608


0x1061a:	mov	rax, qword ptr [r14 + 8]
0x1061e:	cmp	byte ptr [rax], 0x2f
0x10621:	je	0x10635


0x100ff:	lea	rdi, [rip + 0x7d5d]
0x10106:	xor	esi, esi
0x10108:	xor	eax, eax
0x1010a:	call	0xb490


0x10259:	call	0x30a0


0x101cd:	test	ebx, ebx
0x101cf:	jns	0x10128


0x2b20:	jmp	qword ptr [rip + 0x21a1d2]


0x2e60:	jmp	qword ptr [rip + 0x21a032]


0xd830:	or	r11d, esi
0xd833:	not	esi
0xd835:	and	eax, esi
0xd837:	jmp	0xd738


0xd723:	cmp	r12b, 0x3d
0xd727:	je	0xd7db


0xd7c6:	cmp	r12b, 0x3d
0xd7ca:	jne	0xd72d


0xcf93:	mov	esi, dword ptr [rsp + 8]
0xcf97:	mov	rdi, qword ptr [rsp]
0xcf9b:	mov	qword ptr [rsp + 0x10], r9
0xcfa0:	call	0x29c0


0xce1e:	mov	rbp, rbx
0xce21:	add	rbx, 1
0xce25:	movzx	edx, byte ptr [rbx - 1]
0xce29:	test	dl, dl
0xce2b:	jne	0xcda0


0xce66:	mov	byte ptr [r12], 0
0xce6b:	jmp	0xcde0


0xcea5:	cmp	byte ptr [rbp], 0x2e
0xcea9:	jne	0xcde0


0xcde0:	mov	rdx, qword ptr [rsp + 0x18]
0xcde5:	mov	rsi, rbp
0xcde8:	mov	rdi, r13
0xcdeb:	call	r14


0xc110:	cmp	rdx, rax
0xc113:	je	0xc140


0xbc1c:	movss	xmm3, dword ptr [rip + 0xc5e0]
0xbc24:	ucomiss	xmm3, xmm2
0xbc27:	jb	0xbc30


0xb646:	cmp	edx, 0xc000
0xb64c:	mov	eax, 0x73
0xb651:	mov	edx, 0x3f
0xb656:	cmovne	eax, edx
0xb659:	nop	dword ptr [rax]
0xb660:	mov	byte ptr [rsi], al
0xb662:	mov	eax, edi
0xb664:	and	eax, 0x100
0xb669:	cmp	eax, 1
0xb66c:	sbb	eax, eax
0xb66e:	and	eax, 0xffffffbb
0xb671:	add	eax, 0x72
0xb674:	mov	byte ptr [rsi + 1], al
0xb677:	mov	eax, edi
0xb679:	and	eax, 0x80
0xb67e:	cmp	eax, 1
0xb681:	sbb	eax, eax
0xb683:	and	eax, 0xffffffb6
0xb686:	add	eax, 0x77
0xb689:	mov	byte ptr [rsi + 2], al
0xb68c:	mov	eax, edi
0xb68e:	and	eax, 0x40
0xb691:	cmp	eax, 1
0xb694:	sbb	eax, eax
0xb696:	test	edi, 0x800
0xb69c:	je	0xb740


0xb07e:	mov	rax, r8
0xb081:	ret	


0x9d86:	mov	byte ptr [rsp + 7], 0
0x9d8b:	push	r9
0x9d8d:	movzx	edx, dl
0x9d90:	push	r8
0x9d92:	mov	r9, rcx
0x9d95:	xor	r8d, r8d
0x9d98:	xor	ecx, ecx
0x9d9a:	mov	qword ptr [rip + 0x2157e7], rsi
0x9da1:	mov	qword ptr [rip + 0x2157e8], rdi
0x9da8:	lea	rax, [rsp + 0x17]
0x9dad:	push	rax
0x9dae:	push	1
0x9db0:	call	0x5c20


0x9d80:	cmp	r10d, 2
0x9d84:	je	0x9df5


0x9dd6:	lea	rcx, [rip + 0xe21b]
0x9ddd:	lea	rsi, [rip + 0xe1e6]
0x9de4:	lea	rdi, [rip + 0xde9d]
0x9deb:	mov	edx, 0xb8a
0x9df0:	call	0x2be0


0x5d8e:	test	r14b, r14b
0x5d91:	jne	0x5fa0


0x5d7c:	cmp	eax, 3
0x5d7f:	sete	al
0x5d82:	movzx	eax, al
0x5d85:	and	eax, r13d
0x5d88:	mov	dword ptr [rbp - 0x328], eax
0x5d8e:	test	r14b, r14b
0x5d91:	jne	0x5fa0


0x5d36:	mov	eax, dword ptr [rbp - 0x314]
0x5d3c:	lea	r10, [rbp - 0x280]
0x5d43:	and	eax, 0xf000
0x5d48:	cmp	eax, 0x4000
0x5d4d:	je	0x5d5b


0x15b8b:	xor	edx, edx
0x15b8d:	movsx	eax, bl
0x15b90:	movabs	rdi, 0x1999999999999999
0x15b9a:	mov	rsi, r8
0x15b9d:	sub	eax, 0x30
0x15ba0:	cmp	rdx, rdi
0x15ba3:	cdqe	
0x15ba5:	ja	0x15bae


0x15790:	or	dword ptr [r12 + 0x10], 4
0x15796:	jmp	0x15768


0x1574a:	cmp	bl, 0x20
0x1574d:	je	0x157a0


0x14161:	mov	edx, dword ptr [rax]
0x14163:	mov	edi, ebp
0x14165:	xor	eax, eax
0x14167:	call	0x2a00


0x1408f:	jg	0x140a0


0x14149:	jg	0x14150


0x140e8:	cmp	esi, 0x402
0x140ee:	je	0x14150


0x1412e:	cmp	esi, 0x40a
0x14134:	jne	0x140f8


0x1140a:	test	ebx, ebx
0x1140c:	mov	rdx, r13
0x1140f:	js	0x115e8


0x115e8:	mov	rsi, r12
0x115eb:	mov	edi, 0xffffff9c
0x115f0:	call	0x30b0


0x11415:	xor	esi, esi
0x11417:	mov	edi, ebx
0x11419:	call	0x30b0


0x11538:	lea	rsi, [rsp + 8]
0x1153d:	lea	rdi, [rsp + 0x70]
0x11542:	xor	ebp, ebp
0x11544:	call	0x11140


0x11650:	mov	rsi, r12
0x11653:	mov	edi, 1
0x11658:	call	0x2dd0


0x11513:	mov	esi, ebx
0x11515:	mov	edi, 1
0x1151a:	call	0x2e20


0x2fc0:	jmp	qword ptr [rip + 0x219f82]


0x10635:	add	r14, 8
0x10639:	cmp	r14, qword ptr [rsp + 8]
0x1063e:	je	0x1055d


0x10623:	mov	esi, r15d
0x10626:	mov	rdi, rbx
0x10629:	call	0x102f0


0x30a0:	jmp	qword ptr [rip + 0x219f12]


0x101d5:	jmp	0x10158






0xd738:	add	rcx, 0x10
0xd73c:	movzx	r10d, byte ptr [rcx + 1]
0xd741:	test	r10b, r10b
0xd744:	je	0xd7fc


0xd7db:	and	r10d, 0xfff
0xd7e2:	add	rcx, 0x10
0xd7e6:	and	eax, r9d
0xd7e9:	or	r11d, r10d
0xd7ec:	movzx	r10d, byte ptr [rcx + 1]
0xd7f1:	or	eax, esi
0xd7f3:	test	r10b, r10b
0xd7f6:	jne	0xd74a


0xd72d:	cmp	r12b, 0x2b
0xd731:	jne	0xd738


0xd7d0:	not	edi
0xd7d2:	or	r9d, edi
0xd7d5:	mov	r10d, r9d
0xd7d8:	not	r10d
0xd7db:	and	r10d, 0xfff
0xd7e2:	add	rcx, 0x10
0xd7e6:	and	eax, r9d
0xd7e9:	or	r11d, r10d
0xd7ec:	movzx	r10d, byte ptr [rcx + 1]
0xd7f1:	or	eax, esi
0xd7f3:	test	r10b, r10b
0xd7f6:	jne	0xd74a


0xceaf:	cmp	byte ptr [rbp + 1], 0x2e
0xceb3:	jne	0xcde0


0xbc29:	ucomiss	xmm0, xmm1
0xbc2c:	ja	0xbc35


0x9df5:	lea	rcx, [rip + 0xe1fc]
0x9dfc:	lea	rsi, [rip + 0xe1c7]
0x9e03:	lea	rdi, [rip + 0xdea6]
0x9e0a:	mov	edx, 0xb8d
0x9e0f:	call	0x2be0


0x5d97:	cmp	r15d, 0x11
0x5d9b:	je	0x6700


0x5fa0:	xor	r9d, r9d
0x5fa3:	mov	qword ptr [rbp - 0x350], 0
0x5fae:	test	r13b, r13b
0x5fb1:	je	0x6070


0x5d5b:	mov	rsi, qword ptr [rbp - 0x310]
0x5d62:	mov	rdx, r10
0x5d65:	call	0xb500


0x5d4f:	mov	r11d, dword ptr [rbx]
0x5d52:	test	r11d, r11d
0x5d55:	je	0x6668


0x15ba7:	lea	rsi, [rdx + rdx*4]
0x15bab:	add	rsi, rsi
0x15bae:	mov	rcx, rbp
0x15bb1:	add	rax, rsi
0x15bb4:	movzx	ebx, byte ptr [rbp + 1]
0x15bb8:	setb	sil
0x15bbc:	add	rbp, 1
0x15bc0:	mov	rdx, rax
0x15bc3:	movzx	esi, sil
0x15bc7:	test	rsi, rsi
0x15bca:	lea	edi, [rbx - 0x30]
0x15bcd:	jne	0x15f5e


0x15bae:	mov	rcx, rbp
0x15bb1:	add	rax, rsi
0x15bb4:	movzx	ebx, byte ptr [rbp + 1]
0x15bb8:	setb	sil
0x15bbc:	add	rbp, 1
0x15bc0:	mov	rdx, rax
0x15bc3:	movzx	esi, sil
0x15bc7:	test	rsi, rsi
0x15bca:	lea	edi, [rbx - 0x30]
0x15bcd:	jne	0x15f5e


0x157a0:	or	dword ptr [r12 + 0x10], 8
0x157a6:	jmp	0x15768


0x1574f:	cmp	bl, 0x23
0x15752:	je	0x157b0


0x14091:	cmp	esi, 1
0x14094:	jne	0x140f8


0x1414b:	cmp	esi, 8
0x1414e:	jne	0x140f8


0x140f0:	cmp	esi, 0x400
0x140f6:	je	0x14150


0x14136:	jmp	0x140a0


0x140f8:	mov	eax, dword ptr [rsp]
0x140fb:	cmp	eax, 0x2f
0x140fe:	ja	0x1423a


0x30b0:	jmp	qword ptr [rip + 0x219f0a]




0x1055d:	mov	rdi, rbx
0x10560:	call	0x10450


0x10644:	mov	eax, dword ptr [rsp + 0x20]
0x10648:	cmp	eax, 3
0x1064b:	jne	0x10608




0xd7fc:	test	r8, r8
0xd7ff:	je	0xd804


0xd733:	or	r11d, esi
0xd736:	or	eax, esi
0xd738:	add	rcx, 0x10
0xd73c:	movzx	r10d, byte ptr [rcx + 1]
0xd741:	test	r10b, r10b
0xd744:	je	0xd7fc


0xceb9:	xor	r15d, r15d
0xcebc:	mov	byte ptr [rsp + 0x14], 0
0xcec1:	xor	edx, edx
0xcec3:	jmp	0xcdff


0x6700:	cmp	dword ptr [rbx + 8], 2
0x6704:	jne	0x5da1


0x5da1:	mov	eax, dword ptr [rbp - 0x314]
0x5da7:	and	eax, 0xf000
0x5dac:	cmp	eax, 0x8000
0x5db1:	je	0x66a0


0x6070:	cmp	byte ptr [rbx + 0x2e], 0
0x6074:	je	0x6080


0x5fb7:	cmp	qword ptr [rbx + 0x40], 0
0x5fbc:	je	0x6070


0x6668:	mov	rsi, qword ptr [rbp - 0x310]
0x666f:	mov	rdx, r10
0x6672:	mov	qword ptr [rbp - 0x328], r10
0x6679:	call	0xb590


0x15bd3:	cmp	dil, 9
0x15bd7:	jbe	0x15b8d


0x15f5e:	cmp	dil, 9
0x15f62:	ja	0x15e6b


0x157b0:	or	dword ptr [r12 + 0x10], 0x10
0x157b6:	jmp	0x15768


0x15754:	cmp	bl, 0x30
0x15757:	je	0x157c0


0x14104:	add	rax, qword ptr [rsp + 0x10]
0x14109:	mov	rdx, qword ptr [rax]
0x1410c:	mov	edi, ebp
0x1410e:	xor	eax, eax
0x14110:	call	0x2a00


0x1423a:	mov	rax, qword ptr [rsp + 8]
0x1423f:	jmp	0x14109




0xd804:	pop	rbx
0xd805:	pop	rbp
0xd806:	pop	r12
0xd808:	ret	


0xd801:	mov	dword ptr [r8], r11d
0xd804:	pop	rbx
0xd805:	pop	rbp
0xd806:	pop	r12
0xd808:	ret	


0xcdff:	mov	rdi, qword ptr [rsp + 8]
0xce04:	xor	ecx, ecx
0xce06:	mov	rsi, rbp
0xce09:	call	0x10040


0x670a:	xor	r8d, r8d
0x670d:	xor	r9d, r9d
0x6710:	jmp	0x5e3f


0x66a0:	movzx	r9d, byte ptr [rbx + 0x18]
0x66a5:	mov	r8d, 0x100
0x66ab:	test	r9b, r9b
0x66ae:	jne	0x5de1


0x5db7:	cmp	eax, 0xa000
0x5dbc:	mov	r8d, 0x100
0x5dc2:	sete	r9b
0x5dc6:	cmp	eax, 0x4000
0x5dcb:	sete	al
0x5dce:	or	r9d, eax
0x5dd1:	movzx	eax, byte ptr [rbx + 0x14]
0x5dd5:	xor	eax, 1
0x5dd8:	or	r9b, al
0x5ddb:	je	0x66a0


0x6080:	test	r15d, r15d
0x6083:	je	0x6420


0x6076:	cmp	byte ptr [rbx + 0x18], 0
0x607a:	je	0x6630


0x5fc2:	movzx	r12d, byte ptr [rbx + 0x18]
0x5fc7:	test	r12b, r12b
0x5fca:	jne	0x6070


0x15b8d:	movsx	eax, bl
0x15b90:	movabs	rdi, 0x1999999999999999
0x15b9a:	mov	rsi, r8
0x15b9d:	sub	eax, 0x30
0x15ba0:	cmp	rdx, rdi
0x15ba3:	cdqe	
0x15ba5:	ja	0x15bae


0x15bd9:	mov	r13, rax
0x15bdc:	sub	r13, 1
0x15be0:	cmp	r13, -3
0x15be4:	ja	0x15e6b


0x15f68:	movsx	eax, bl
0x15f6b:	mov	rsi, r8
0x15f6e:	mov	rcx, rbp
0x15f71:	sub	eax, 0x30
0x15f74:	cdqe	
0x15f76:	jmp	0x15bb1


0x15e6b:	mov	rcx, qword ptr [r15 + 8]
0x15e6f:	cmp	qword ptr [rsp + 8], rcx
0x15e74:	je	0x15e7e


0x157c0:	or	dword ptr [r12 + 0x10], 0x20
0x157c6:	jmp	0x15768


0x15759:	cmp	bl, 0x49
0x1575c:	jne	0x157d0


0x14109:	mov	rdx, qword ptr [rax]
0x1410c:	mov	edi, ebp
0x1410e:	xor	eax, eax
0x14110:	call	0x2a00


0x5e3f:	cmp	byte ptr [rbx + 0x2d], 0
0x5e43:	je	0x6840


0x66b4:	movzx	r9d, byte ptr [rbx + 0x2c]
0x66b9:	test	r9b, r9b
0x66bc:	jne	0x5de1


0x5de1:	lea	r12, [rbp - 0x1f0]
0x5de8:	mov	rdx, qword ptr [rbp - 0x308]
0x5def:	mov	esi, 0xffffff9c
0x5df4:	mov	edi, 1
0x5df9:	mov	byte ptr [rbp - 0x350], r9b
0x5e00:	mov	rcx, r12
0x5e03:	call	0x2b80


0x6420:	cmp	byte ptr [rbx + 0x18], 0
0x6424:	je	0x60bb


0x6089:	cmp	byte ptr [rbx + 0x2a], 0
0x608d:	je	0x60a5


0x6630:	mov	eax, dword ptr [rbp - 0x314]
0x6636:	and	eax, 0xf000
0x663b:	cmp	eax, 0x4000
0x6640:	je	0x6080


0x5fd0:	mov	edx, dword ptr [rbx]
0x5fd2:	test	edx, edx
0x5fd4:	jne	0x6c58


0x15bea:	lea	rbp, [rcx + 2]
0x15bee:	movzx	ebx, byte ptr [rcx + 2]
0x15bf2:	jmp	0x1576e


0x15bb1:	add	rax, rsi
0x15bb4:	movzx	ebx, byte ptr [rbp + 1]
0x15bb8:	setb	sil
0x15bbc:	add	rbp, 1
0x15bc0:	mov	rdx, rax
0x15bc3:	movzx	esi, sil
0x15bc7:	test	rsi, rsi
0x15bca:	lea	edi, [rbx - 0x30]
0x15bcd:	jne	0x15f5e


0x15e7e:	mov	rdi, qword ptr [r14 + 8]
0x15e82:	cmp	qword ptr [rsp + 0x28], rdi
0x15e87:	je	0x15e8e


0x15e76:	mov	rdi, rcx
0x15e79:	call	0x30d0


0x1575e:	or	dword ptr [r12 + 0x10], 0x40
0x15764:	nop	dword ptr [rax]
0x15768:	movzx	ebx, byte ptr [rax]
0x1576b:	mov	rbp, rax
0x1576e:	lea	rax, [rbp + 1]
0x15772:	cmp	bl, 0x27
0x15775:	mov	rdx, rax
0x15778:	jne	0x15740


0x157d0:	cmp	bl, 0x2a
0x157d3:	je	0x15989


0x6840:	cmp	byte ptr [rbx + 0x18], 0
0x6844:	jne	0x6e20


0x5e49:	mov	eax, dword ptr [rbp - 0x314]
0x5e4f:	and	eax, 0xf000
0x5e54:	cmp	eax, 0x4000
0x5e59:	je	0x7280


0x66c2:	movzx	r9d, byte ptr [rbx + 0x17]
0x66c7:	test	r9b, r9b
0x66ca:	jne	0x5de1


0x2b80:	jmp	qword ptr [rip + 0x21a1a2]


0x60bb:	movzx	eax, r14b
0x60bf:	mov	qword ptr [rbp - 0x358], 0
0x60ca:	mov	dword ptr [rbp - 0x320], eax
0x60d0:	mov	r12d, dword ptr [rbp - 0x314]
0x60d7:	and	r12d, 0xfff
0x60de:	cmp	byte ptr [rbx + 0x2b], 0
0x60e2:	je	0x60ef


0x642a:	cmp	byte ptr [rbx + 0x2e], 0
0x642e:	jne	0x6fb0


0x60a5:	movzx	eax, byte ptr [rbx + 0x18]
0x60a9:	test	al, al
0x60ab:	jne	0x6550


0x608f:	mov	eax, dword ptr [rbp - 0x314]
0x6095:	and	eax, 0xf000
0x609a:	cmp	eax, 0x4000
0x609f:	je	0x6c70


0x6646:	mov	rdx, qword ptr [rbp - 0x350]
0x664d:	mov	rsi, qword ptr [rbp - 0x308]
0x6654:	mov	rdi, qword ptr [rbp - 0x310]
0x665b:	call	0x4fd0


0x5fda:	test	r9b, r9b
0x5fdd:	lea	rdx, [rbp - 0x1f0]
0x5fe4:	je	0x7860


0x6c58:	cmp	byte ptr [rbx + 0x2e], 0
0x6c5c:	jne	0x6630


0x15e8e:	call	0x2950


0x15e89:	call	0x30d0


0x15989:	mov	rsi, qword ptr [rsp + 0x10]
0x1598e:	mov	ecx, 1
0x15993:	mov	qword ptr [r12 + 0x18], rbp
0x15998:	mov	qword ptr [r12 + 0x20], rax
0x1599d:	test	rsi, rsi
0x159a0:	cmovne	rcx, rsi
0x159a4:	mov	qword ptr [rsp + 0x10], rcx
0x159a9:	movzx	ecx, byte ptr [rbp + 1]
0x159ad:	lea	esi, [rcx - 0x30]
0x159b0:	cmp	sil, 9
0x159b4:	jbe	0x15c95


0x157d9:	lea	ecx, [rbx - 0x30]
0x157dc:	cmp	cl, 9
0x157df:	jbe	0x15bf7


0x684a:	mov	eax, dword ptr [rbp - 0x314]
0x6850:	and	eax, 0xf000
0x6855:	cmp	eax, 0x4000
0x685a:	je	0x68b0


0x6e20:	mov	eax, dword ptr [rbx + 8]
0x6e23:	cmp	eax, 2
0x6e26:	je	0x6ea4


0x7280:	cmp	byte ptr [rbx + 0x18], 0
0x7284:	je	0x68b0


0x5e5f:	xor	ecx, ecx
0x5e61:	cmp	byte ptr [rbx + 0x1f], 0
0x5e65:	je	0x5e85


0x66d0:	mov	r10d, dword ptr [rbx]
0x66d3:	mov	r9d, 1
0x66d9:	test	r10d, r10d
0x66dc:	jne	0x5de1




0x60ef:	cmp	byte ptr [rbx + 0x1d], 0
0x60f3:	jne	0x6718


0x60e4:	mov	r12d, dword ptr [rbx + 0x10]
0x60e8:	and	r12d, 0xfff
0x60ef:	cmp	byte ptr [rbx + 0x1d], 0
0x60f3:	jne	0x6718


0x6434:	cmp	byte ptr [rbx + 0x21], 0
0x6438:	jne	0x6f90


0x6fb0:	lea	rsi, [rip + 0x10e44]
0x6fb7:	mov	edx, 5
0x6fbc:	xor	edi, edi
0x6fbe:	call	0x2ad0


0x60b1:	cmp	byte ptr [rbx + 0x22], 0
0x60b5:	jne	0x7c90


0x6550:	cmp	qword ptr [rbp - 0x270], 1
0x6558:	je	0x7588


0x6c70:	test	r13b, r13b
0x6c73:	mov	rdx, qword ptr [rbp - 0x280]
0x6c7a:	mov	rdi, qword ptr [rbp - 0x278]
0x6c81:	je	0x7530


0x7860:	lea	rcx, [rbp - 0xd0]
0x7867:	mov	rsi, qword ptr [rbp - 0x308]
0x786e:	mov	edi, 1
0x7873:	mov	rdx, rcx
0x7876:	mov	qword ptr [rbp - 0x358], rcx
0x787d:	call	0x2b00


0x5fea:	mov	eax, dword ptr [rdx + 0x18]
0x5fed:	and	eax, 0xf000
0x5ff2:	cmp	eax, 0xa000
0x5ff7:	jne	0x6070


0x6c62:	test	r15d, r15d
0x6c65:	je	0x60bb


0x15c95:	mov	rsi, rax
0x15c98:	add	rsi, 1
0x15c9c:	movzx	edi, byte ptr [rsi]
0x15c9f:	lea	r11d, [rdi - 0x30]
0x15ca3:	cmp	r11b, 9
0x15ca7:	jbe	0x15c98


0x159ba:	mov	rsi, qword ptr [rsp + 0x20]
0x159bf:	cmp	rsi, -1
0x159c3:	lea	rdx, [rsi + 1]
0x159c7:	mov	qword ptr [r12 + 0x28], rsi
0x159cc:	je	0x15e6b


0x15bf7:	mov	qword ptr [r12 + 0x18], rbp
0x15bfc:	movzx	edi, byte ptr [rbp]
0x15c00:	mov	rsi, rbp
0x15c03:	lea	ecx, [rdi - 0x30]
0x15c06:	cmp	cl, 9
0x15c09:	jbe	0x15c17


0x157e5:	cmp	bl, 0x2e
0x157e8:	je	0x15abf


0x68b0:	test	r14b, r14b
0x68b3:	jne	0x6460


0x685c:	mov	eax, dword ptr [rbx + 8]
0x685f:	cmp	eax, 2
0x6862:	je	0x6460


0x6ea4:	cmp	qword ptr [rbp - 0x320], 0
0x6eac:	je	0x6460


0x6e28:	cmp	eax, 3
0x6e2b:	je	0x6e78


0x728a:	jmp	0x6e20


0x5e85:	lea	r10, [rbp - 0x280]
0x5e8c:	mov	rdi, qword ptr [rbp - 0x308]
0x5e93:	lea	rsi, [rbp - 0x1f0]
0x5e9a:	mov	byte ptr [rbp - 0x358], r9b
0x5ea1:	mov	byte ptr [rbp - 0x350], r8b
0x5ea8:	mov	rdx, r10
0x5eab:	call	0x11120


0x5e67:	cmp	byte ptr [rbx + 0x18], 0
0x5e6b:	mov	ecx, 1
0x5e70:	je	0x5e85


0x66e2:	movzx	r9d, byte ptr [rbx + 0x15]
0x66e7:	xor	r8d, r8d
0x66ea:	test	r9b, r9b
0x66ed:	setne	r8b
0x66f1:	shl	r8d, 8
0x66f5:	jmp	0x5de1


0x60f9:	mov	r15d, dword ptr [rbp - 0x314]
0x6100:	and	r15d, 0xf000
0x6107:	cmp	r15d, 0x4000
0x610e:	je	0x6f50


0x6718:	mov	ecx, dword ptr [rbp - 0x320]
0x671e:	mov	edx, dword ptr [rbp - 0x314]
0x6724:	mov	r8, rbx
0x6727:	mov	rsi, qword ptr [rbp - 0x308]
0x672e:	mov	rdi, qword ptr [rbp - 0x310]
0x6735:	call	0x57c0


0x643e:	mov	rax, qword ptr [rbp - 0x320]
0x6445:	test	rax, rax
0x6448:	je	0x644d


0x6f90:	mov	rdi, qword ptr [rbp - 0x308]
0x6f97:	mov	rcx, rbx
0x6f9a:	mov	edx, 1
0x6f9f:	xor	esi, esi
0x6fa1:	call	0x5890


0x7c90:	cmp	byte ptr [rbx + 0x17], 0
0x7c94:	je	0x6d38


0x7588:	mov	rsi, qword ptr [rbp - 0x280]
0x758f:	mov	rdi, qword ptr [rbp - 0x278]
0x7596:	call	0x9f60


0x655e:	cmp	byte ptr [rbx + 0x22], 0
0x6562:	mov	qword ptr [rbp - 0x358], 0
0x656d:	je	0x6579


0x7530:	mov	rsi, rdx
0x7533:	call	0x9f60


0x6c87:	mov	rsi, rdi
0x6c8a:	mov	rdi, qword ptr [rbp - 0x308]
0x6c91:	call	0x9fc0


0x5ff9:	mov	rdi, qword ptr [rbx + 0x40]
0x5ffd:	mov	rsi, qword ptr [rbp - 0x308]
0x6004:	call	0xb590


0x6c6b:	jmp	0x6089


0x15c98:	add	rsi, 1
0x15c9c:	movzx	edi, byte ptr [rsi]
0x15c9f:	lea	r11d, [rdi - 0x30]
0x15ca3:	cmp	r11b, 9
0x15ca7:	jbe	0x15c98


0x15ca9:	cmp	dil, 0x24
0x15cad:	jne	0x159ba


0x159d2:	mov	rbx, qword ptr [rsp + 0x20]
0x159d7:	mov	rbp, rax
0x159da:	mov	qword ptr [rsp + 0x20], rdx
0x159df:	cmp	r9, rbx
0x159e2:	mov	rcx, qword ptr [r15 + 8]
0x159e6:	ja	0x16062


0x15c17:	movzx	edi, byte ptr [rax]
0x15c1a:	lea	edx, [rdi - 0x30]
0x15c1d:	cmp	dl, 9
0x15c20:	jbe	0x15c10


0x15c0b:	jmp	0x15c40


0x15abf:	cmp	byte ptr [rbp + 1], 0x2a
0x15ac3:	mov	qword ptr [r12 + 0x30], rbp
0x15ac8:	jne	0x15c4e


0x157ee:	xor	eax, eax
0x157f0:	mov	esi, 1
0x157f5:	jmp	0x15827


0x68b9:	mov	eax, dword ptr [rbp - 0x1d8]
0x68bf:	mov	r12d, dword ptr [rbp - 0x314]
0x68c6:	mov	edx, eax
0x68c8:	and	r12d, 0xf000
0x68cf:	and	edx, 0xf000
0x68d5:	cmp	edx, 0x4000
0x68db:	je	0x6ef0


0x6460:	mov	r12d, 1
0x6466:	mov	rsi, qword ptr [rbp - 0x38]
0x646a:	xor	rsi, qword ptr fs:[0x28]
0x6473:	mov	eax, r12d
0x6476:	jne	0x9144


0x6868:	cmp	eax, 3
0x686b:	jne	0x68b0


0x6eb2:	mov	rax, qword ptr [rbp - 0x320]
0x6eb9:	mov	byte ptr [rax], 1
0x6ebc:	jmp	0x6460


0x6e78:	mov	rsi, qword ptr [rbp - 0x308]
0x6e7f:	lea	rdx, [rbp - 0x1d8]
0x6e86:	mov	rdi, rbx
0x6e89:	mov	byte ptr [rbp - 0x358], r9b
0x6e90:	mov	byte ptr [rbp - 0x350], r8b
0x6e97:	call	0x51a0


0x6e2d:	cmp	eax, 4
0x6e30:	jne	0x68b0


0x5e72:	xor	ecx, ecx
0x5e74:	mov	rax, qword ptr [rbp - 0x280]
0x5e7b:	cmp	qword ptr [rbp - 0x1f0], rax
0x5e82:	setne	cl
0x5e85:	lea	r10, [rbp - 0x280]
0x5e8c:	mov	rdi, qword ptr [rbp - 0x308]
0x5e93:	lea	rsi, [rbp - 0x1f0]
0x5e9a:	mov	byte ptr [rbp - 0x358], r9b
0x5ea1:	mov	byte ptr [rbp - 0x350], r8b
0x5ea8:	mov	rdx, r10
0x5eab:	call	0x11120


0x6f50:	mov	ecx, dword ptr [rbp - 0x320]
0x6f56:	mov	edx, dword ptr [rbp - 0x314]
0x6f5c:	mov	r8, rbx
0x6f5f:	mov	rsi, qword ptr [rbp - 0x308]
0x6f66:	mov	rdi, qword ptr [rbp - 0x310]
0x6f6d:	call	0x57c0


0x6114:	mov	ecx, dword ptr [rbp - 0x320]
0x611a:	mov	edx, dword ptr [rbp - 0x314]
0x6120:	mov	r8, rbx
0x6123:	mov	rsi, qword ptr [rbp - 0x308]
0x612a:	mov	rdi, qword ptr [rbp - 0x310]
0x6131:	call	0x57c0


0x644d:	test	r13b, r13b
0x6450:	je	0x6460


0x644a:	mov	byte ptr [rax], 1
0x644d:	test	r13b, r13b
0x6450:	je	0x6460


0x6d38:	cmp	qword ptr [rbp - 0x270], 1
0x6d40:	ja	0x7128


0x7c9a:	mov	qword ptr [rbp - 0x358], 0
0x7ca5:	jmp	0x6d73


0x6579:	cmp	r15d, 0x11
0x657d:	jne	0x65ab


0x656f:	cmp	byte ptr [rbx + 0x17], 0
0x6573:	je	0x6d38


0x15cb3:	xor	esi, esi
0x15cb5:	movsx	eax, cl
0x15cb8:	movabs	rdi, 0x1999999999999999
0x15cc2:	mov	rcx, r8
0x15cc5:	sub	eax, 0x30
0x15cc8:	cmp	rsi, rdi
0x15ccb:	cdqe	
0x15ccd:	ja	0x15cd6


0x159ec:	add	r9, r9
0x159ef:	lea	rax, [rbx + 1]
0x159f3:	cmp	r9, rbx
0x159f6:	cmovbe	r9, rax
0x159fa:	movabs	rax, 0x7ffffffffffffff
0x15a04:	cmp	r9, rax
0x15a07:	ja	0x162ab


0x16062:	mov	rax, qword ptr [r15]
0x16065:	jmp	0x15a67


0x15c10:	mov	rbp, rax
0x15c13:	add	rax, 1
0x15c17:	movzx	edi, byte ptr [rax]
0x15c1a:	lea	edx, [rdi - 0x30]
0x15c1d:	cmp	dl, 9
0x15c20:	jbe	0x15c10


0x15c22:	mov	rcx, rax
0x15c25:	lea	rdx, [rbp + 2]
0x15c29:	mov	rbp, rax
0x15c2c:	sub	rcx, rsi
0x15c2f:	mov	rsi, qword ptr [rsp + 0x10]
0x15c34:	cmp	rsi, rcx
0x15c37:	cmovae	rcx, rsi
0x15c3b:	mov	qword ptr [rsp + 0x10], rcx
0x15c40:	mov	qword ptr [r12 + 0x20], rbp
0x15c45:	movzx	ebx, byte ptr [rbp]
0x15c49:	jmp	0x157e5


0x15c40:	mov	qword ptr [r12 + 0x20], rbp
0x15c45:	movzx	ebx, byte ptr [rbp]
0x15c49:	jmp	0x157e5


0x15ace:	mov	rsi, qword ptr [rsp + 0x18]
0x15ad3:	lea	r11, [rbp + 2]
0x15ad7:	mov	eax, 2
0x15adc:	mov	qword ptr [r12 + 0x38], r11
0x15ae1:	cmp	rsi, 2
0x15ae5:	cmovae	rax, rsi
0x15ae9:	mov	qword ptr [rsp + 0x18], rax
0x15aee:	movsx	eax, byte ptr [rbp + 2]
0x15af2:	lea	edx, [rax - 0x30]
0x15af5:	cmp	dl, 9
0x15af8:	jbe	0x1618c


0x15c4e:	movzx	eax, byte ptr [rbp + 1]
0x15c52:	sub	eax, 0x30
0x15c55:	cmp	al, 9
0x15c57:	ja	0x15c6e


0x15827:	add	rbp, 1
0x1582b:	cmp	bl, 0x68
0x1582e:	jne	0x15800


0x6ef0:	cmp	r12d, 0x4000
0x6ef7:	je	0x7410


0x68e1:	cmp	r12d, 0x4000
0x68e8:	je	0x7b88


0x647c:	lea	rsp, [rbp - 0x28]
0x6480:	pop	rbx
0x6481:	pop	r12
0x6483:	pop	r13
0x6485:	pop	r14
0x6487:	pop	r15
0x6489:	pop	rbp
0x648a:	ret	


0x9144:	call	0x2b30


0x686d:	mov	rsi, qword ptr [rbp - 0x308]
0x6874:	lea	rdx, [rbp - 0x1d8]
0x687b:	mov	rdi, rbx
0x687e:	mov	byte ptr [rbp - 0x358], r9b
0x6885:	mov	byte ptr [rbp - 0x350], r8b
0x688c:	call	0x51a0


0x6e36:	cmp	byte ptr [rbx + 0x2f], 0
0x6e3a:	je	0x68b0


0x6452:	cmp	byte ptr [rbx + 0x31], 0
0x6456:	je	0x6ec8


0x6d46:	test	r13b, r13b
0x6d49:	mov	edx, dword ptr [rbx + 4]
0x6d4c:	je	0x6d57


0x7128:	mov	rdx, qword ptr [rbp - 0x280]
0x712f:	mov	rsi, qword ptr [rbp - 0x278]
0x7136:	mov	rdi, qword ptr [rbp - 0x308]
0x713d:	call	0x9fc0


0x6d73:	movzx	eax, r14b
0x6d77:	mov	dword ptr [rbp - 0x320], eax
0x6d7d:	jmp	0x60d0


0x657f:	mov	rsi, qword ptr [rbp - 0x308]
0x6586:	mov	rdi, qword ptr [rbp - 0x310]
0x658d:	call	0x2fa0


0x65ab:	cmp	r15d, 0x16
0x65af:	je	0x75d0


0x15ccf:	lea	rcx, [rsi + rsi*4]
0x15cd3:	add	rcx, rcx
0x15cd6:	mov	rbp, rdx
0x15cd9:	xor	r11d, r11d
0x15cdc:	add	rax, rcx
0x15cdf:	movzx	ecx, byte ptr [rdx + 1]
0x15ce3:	setb	r11b
0x15ce7:	add	rdx, 1
0x15ceb:	mov	rsi, rax
0x15cee:	test	r11, r11
0x15cf1:	lea	edi, [rcx - 0x30]
0x15cf4:	jne	0x161fe


0x15cd6:	mov	rbp, rdx
0x15cd9:	xor	r11d, r11d
0x15cdc:	add	rax, rcx
0x15cdf:	movzx	ecx, byte ptr [rdx + 1]
0x15ce3:	setb	r11b
0x15ce7:	add	rdx, 1
0x15ceb:	mov	rsi, rax
0x15cee:	test	r11, r11
0x15cf1:	lea	edi, [rcx - 0x30]
0x15cf4:	jne	0x161fe


0x15a0d:	mov	rsi, r9
0x15a10:	mov	qword ptr [rsp + 0x40], r9
0x15a15:	mov	qword ptr [rsp + 0x38], r10
0x15a1a:	shl	rsi, 5
0x15a1e:	cmp	qword ptr [rsp + 8], rcx
0x15a23:	mov	qword ptr [rsp + 0x30], r8
0x15a28:	je	0x16141


0x162ab:	cmp	qword ptr [rsp + 8], rcx
0x162b0:	jne	0x16114


0x15a67:	mov	rdx, rax
0x15a6a:	shl	rdx, 5
0x15a6e:	add	rdx, rcx
0x15a71:	cmp	rax, rbx
0x15a74:	ja	0x15a96


0x1618c:	mov	rdx, r11
0x1618f:	add	rdx, 1
0x16193:	movzx	ecx, byte ptr [rdx]
0x16196:	lea	esi, [rcx - 0x30]
0x16199:	cmp	sil, 9
0x1619d:	jbe	0x1618f


0x15afe:	mov	rbx, qword ptr [r12 + 0x40]
0x15b03:	cmp	rbx, -1
0x15b07:	je	0x16165


0x15c6e:	mov	rsi, qword ptr [rsp + 0x18]
0x15c73:	mov	rax, rdx
0x15c76:	mov	qword ptr [r12 + 0x38], rdx
0x15c7b:	sub	rax, rbp
0x15c7e:	movzx	ebx, byte ptr [rdx]
0x15c81:	mov	rbp, rdx
0x15c84:	cmp	rsi, rax
0x15c87:	cmovae	rax, rsi
0x15c8b:	mov	qword ptr [rsp + 0x18], rax
0x15c90:	jmp	0x157ee


0x15830:	mov	ecx, eax
0x15832:	mov	edx, esi
0x15834:	and	ecx, 1
0x15837:	shl	edx, cl
0x15839:	or	eax, edx
0x1583b:	jmp	0x15823


0x15800:	cmp	bl, 0x4c
0x15803:	je	0x15840


0x7410:	mov	r15d, dword ptr [rbx]
0x7413:	movzx	eax, byte ptr [rbx + 0x18]
0x7417:	test	al, al
0x7419:	jne	0x7dd0


0x6efd:	cmp	byte ptr [rbx + 0x18], 0
0x6f01:	je	0x6f0f


0x7b88:	cmp	byte ptr [rbx + 0x18], 0
0x7b8c:	je	0x7f9b


0x68ee:	test	r13b, r13b
0x68f1:	mov	r15d, dword ptr [rbx]
0x68f4:	je	0x7413


0x6e40:	mov	esi, dword ptr [rbp - 0x1d8]
0x6e46:	mov	rdi, qword ptr [rbp - 0x308]
0x6e4d:	mov	byte ptr [rbp - 0x358], r9b
0x6e54:	mov	byte ptr [rbp - 0x350], r8b
0x6e5b:	call	0x4e90


0x6ec8:	mov	rdi, qword ptr [rbx + 0x40]
0x6ecc:	mov	rsi, qword ptr [rbp - 0x308]
0x6ed3:	lea	rdx, [rbp - 0x280]
0x6eda:	mov	r12d, r13d
0x6edd:	call	0xb500


0x6d57:	cmp	edx, 4
0x6d5a:	mov	qword ptr [rbp - 0x358], 0
0x6d65:	je	0x7128


0x6d4e:	cmp	edx, 3
0x6d51:	je	0x7128


0x60d0:	mov	r12d, dword ptr [rbp - 0x314]
0x60d7:	and	r12d, 0xfff
0x60de:	cmp	byte ptr [rbx + 0x2b], 0
0x60e2:	je	0x60ef


0x2fa0:	jmp	qword ptr [rip + 0x219f92]


0x75d0:	mov	rdx, qword ptr [rip + 0x217fb1]
0x75d7:	mov	esi, 4
0x75dc:	mov	edi, 1
0x75e1:	call	0xf2d0


0x65b5:	cmp	r15d, 0x12
0x65b9:	jne	0x6d88


0x15cfa:	cmp	dil, 9
0x15cfe:	jbe	0x15cb5


0x161fe:	cmp	dil, 9
0x16202:	ja	0x15e6b


0x16141:	mov	rdi, rsi
0x16144:	call	0x2df0


0x15a2e:	mov	rdi, rcx
0x15a31:	call	0x2e90


0x162b6:	jmp	0x1611c


0x16114:	mov	rdi, rcx
0x16117:	call	0x30d0


0x15a96:	shl	rbx, 5
0x15a9a:	lea	rax, [rcx + rbx]
0x15a9e:	mov	edx, dword ptr [rax]
0x15aa0:	test	edx, edx
0x15aa2:	jne	0x15f7b


0x1618f:	add	rdx, 1
0x16193:	movzx	ecx, byte ptr [rdx]
0x16196:	lea	esi, [rcx - 0x30]
0x16199:	cmp	sil, 9
0x1619d:	jbe	0x1618f


0x1619f:	cmp	cl, 0x24
0x161a2:	jne	0x15afe


0x16165:	mov	rsi, qword ptr [rsp + 0x20]
0x1616a:	cmp	rsi, -1
0x1616e:	lea	rax, [rsi + 1]
0x16172:	mov	qword ptr [r12 + 0x40], rsi
0x16177:	je	0x15e6b


0x15b0d:	cmp	r9, rbx
0x15b10:	mov	rcx, qword ptr [r15 + 8]
0x15b14:	jbe	0x1607f


0x15c60:	add	rdx, 1
0x15c64:	movzx	eax, byte ptr [rdx]
0x15c67:	sub	eax, 0x30
0x15c6a:	cmp	al, 9
0x15c6c:	jbe	0x15c60


0x15823:	movzx	ebx, byte ptr [rbp]
0x15827:	add	rbp, 1
0x1582b:	cmp	bl, 0x68
0x1582e:	jne	0x15800


0x15840:	or	eax, 4
0x15843:	jmp	0x15823


0x15805:	cmp	bl, 0x6c
0x15808:	je	0x15820


0x741f:	test	r15d, r15d
0x7422:	jne	0x690e


0x7dd0:	mov	eax, dword ptr [rbp - 0x268]
0x7dd6:	and	eax, 0xf000
0x7ddb:	cmp	eax, 0x4000
0x7de0:	je	0x8170


0x6f0f:	mov	rsi, qword ptr [rbp - 0x308]
0x6f16:	mov	edi, 4
0x6f1b:	xor	r12d, r12d
0x6f1e:	call	0xf3f0


0x6f03:	mov	r15d, dword ptr [rbx]
0x6f06:	test	r15d, r15d
0x6f09:	jne	0x7ba7


0x7f9b:	mov	rdx, qword ptr [rbp - 0x310]
0x7fa2:	mov	esi, 4
0x7fa7:	mov	edi, 1
0x7fac:	call	0xf2d0


0x7b92:	mov	r15d, dword ptr [rbx]
0x7b95:	test	r15d, r15d
0x7b98:	je	0x7f9b


0x7413:	movzx	eax, byte ptr [rbx + 0x18]
0x7417:	test	al, al
0x7419:	jne	0x7dd0


0x68fa:	cmp	r15d, 3
0x68fe:	jne	0x73b0


0x6d6b:	test	al, al
0x6d6d:	jne	0x6579




0x65bf:	mov	r12d, dword ptr [rbp - 0x314]
0x65c6:	mov	rdi, qword ptr [rbp - 0x308]
0x65cd:	and	r12d, 0xf000
0x65d4:	cmp	r12d, 0x4000
0x65db:	je	0x7640


0x6d88:	mov	rdx, qword ptr [rbp - 0x308]
0x6d8f:	mov	esi, 4
0x6d94:	mov	edi, 1
0x6d99:	call	0xf2d0


0x15cb5:	movsx	eax, cl
0x15cb8:	movabs	rdi, 0x1999999999999999
0x15cc2:	mov	rcx, r8
0x15cc5:	sub	eax, 0x30
0x15cc8:	cmp	rsi, rdi
0x15ccb:	cdqe	
0x15ccd:	ja	0x15cd6


0x15d00:	lea	rbx, [rax - 1]
0x15d04:	cmp	rbx, -3
0x15d08:	ja	0x15e6b


0x16208:	movsx	eax, cl
0x1620b:	mov	rbp, rdx
0x1620e:	mov	rcx, r8
0x16211:	sub	eax, 0x30
0x16214:	cdqe	
0x16216:	jmp	0x15cd9


0x1611c:	mov	rdi, qword ptr [r14 + 8]
0x16120:	cmp	qword ptr [rsp + 0x28], rdi
0x16125:	je	0x1612c


0x15a80:	add	rax, 1
0x15a84:	mov	dword ptr [rdx], 0
0x15a8a:	add	rdx, 0x20
0x15a8e:	cmp	rax, rbx
0x15a91:	jbe	0x15a80


0x15a93:	mov	qword ptr [r15], rax
0x15a96:	shl	rbx, 5
0x15a9a:	lea	rax, [rcx + rbx]
0x15a9e:	mov	edx, dword ptr [rax]
0x15aa0:	test	edx, edx
0x15aa2:	jne	0x15f7b


0x15aa8:	mov	dword ptr [rax], 5
0x15aae:	movzx	ebx, byte ptr [rbp]
0x15ab2:	lea	rdx, [rbp + 1]
0x15ab6:	cmp	bl, 0x2e
0x15ab9:	jne	0x157ee


0x15f7b:	cmp	edx, 5
0x15f7e:	jne	0x15e6f


0x161a8:	xor	ecx, ecx
0x161aa:	movabs	rsi, 0x1999999999999999
0x161b4:	sub	eax, 0x30
0x161b7:	mov	rdx, r8
0x161ba:	cmp	rcx, rsi
0x161bd:	cdqe	
0x161bf:	ja	0x161c8


0x1617d:	mov	rbx, qword ptr [rsp + 0x20]
0x16182:	mov	qword ptr [rsp + 0x20], rax
0x16187:	jmp	0x15b0d


0x1607f:	add	r9, r9
0x16082:	lea	rax, [rbx + 1]
0x16086:	cmp	r9, rbx
0x16089:	cmovbe	r9, rax
0x1608d:	movabs	rax, 0x7ffffffffffffff
0x16097:	cmp	r9, rax
0x1609a:	ja	0x162ab


0x15b1a:	mov	rax, qword ptr [r15]
0x15b1d:	mov	rdx, rax
0x15b20:	shl	rdx, 5
0x15b24:	add	rdx, rcx
0x15b27:	cmp	rax, rbx
0x15b2a:	ja	0x15b46


0x15820:	add	eax, 8
0x15823:	movzx	ebx, byte ptr [rbp]
0x15827:	add	rbp, 1
0x1582b:	cmp	bl, 0x68
0x1582e:	jne	0x15800


0x1580a:	cmp	bl, 0x6a
0x1580d:	je	0x15820


0x7428:	mov	edx, dword ptr [rbp - 0x1d8]
0x742e:	and	edx, 0xf000
0x7434:	cmp	edx, 0x4000
0x743a:	sete	r12b
0x743e:	or	r12b, al
0x7441:	je	0x7fdb


0x690e:	mov	rdi, qword ptr [rbp - 0x310]
0x6915:	mov	byte ptr [rbp - 0x358], r9b
0x691c:	mov	byte ptr [rbp - 0x350], r8b
0x6923:	call	0xb3a0


0x8170:	mov	eax, dword ptr [rbp - 0x1d8]
0x8176:	and	eax, 0xf000
0x817b:	cmp	eax, 0x4000
0x8180:	je	0x7de6


0x7de6:	test	r15d, r15d
0x7de9:	je	0x7447


0x7ba7:	mov	edx, dword ptr [rbp - 0x268]
0x7bad:	and	edx, 0xf000
0x7bb3:	cmp	edx, 0x4000
0x7bb9:	je	0x8176


0x7b9e:	test	r13b, r13b
0x7ba1:	jne	0x68fa


0x6904:	cmp	byte ptr [rbx + 0x18], 0
0x6908:	jne	0x7ba7


0x73b0:	mov	rdi, qword ptr [rbx + 0x40]
0x73b4:	mov	rsi, qword ptr [rbp - 0x308]
0x73bb:	lea	rdx, [rbp - 0x1f0]
0x73c2:	mov	byte ptr [rbp - 0x358], r9b
0x73c9:	mov	byte ptr [rbp - 0x350], r8b
0x73d0:	call	0xb590


0x7640:	call	0x2ac0


0x65e1:	call	0x2960


0x15d0e:	mov	qword ptr [r12 + 0x28], rbx
0x15d13:	add	rbp, 2
0x15d17:	jmp	0x159df


0x15cd9:	xor	r11d, r11d
0x15cdc:	add	rax, rcx
0x15cdf:	movzx	ecx, byte ptr [rdx + 1]
0x15ce3:	setb	r11b
0x15ce7:	add	rdx, 1
0x15ceb:	mov	rsi, rax
0x15cee:	test	r11, r11
0x15cf1:	lea	edi, [rcx - 0x30]
0x15cf4:	jne	0x161fe


0x1612c:	call	0x2950


0x16127:	call	0x30d0


0x15f84:	movzx	ebx, byte ptr [rbp]
0x15f88:	lea	rdx, [rbp + 1]
0x15f8c:	jmp	0x157e5


0x15e6f:	cmp	qword ptr [rsp + 8], rcx
0x15e74:	je	0x15e7e


0x161c1:	lea	rdx, [rcx + rcx*4]
0x161c5:	add	rdx, rdx
0x161c8:	mov	rsi, r11
0x161cb:	xor	ebx, ebx
0x161cd:	add	rdx, rax
0x161d0:	movsx	eax, byte ptr [r11 + 1]
0x161d5:	setb	bl
0x161d8:	add	r11, 1
0x161dc:	mov	rcx, rdx
0x161df:	test	rbx, rbx
0x161e2:	lea	edi, [rax - 0x30]
0x161e5:	je	0x16258


0x161c8:	mov	rsi, r11
0x161cb:	xor	ebx, ebx
0x161cd:	add	rdx, rax
0x161d0:	movsx	eax, byte ptr [r11 + 1]
0x161d5:	setb	bl
0x161d8:	add	r11, 1
0x161dc:	mov	rcx, rdx
0x161df:	test	rbx, rbx
0x161e2:	lea	edi, [rax - 0x30]
0x161e5:	je	0x16258


0x160a0:	mov	rsi, r9
0x160a3:	mov	qword ptr [rsp + 0x48], r9
0x160a8:	mov	qword ptr [rsp + 0x40], r10
0x160ad:	shl	rsi, 5
0x160b1:	cmp	qword ptr [rsp + 8], rcx
0x160b6:	mov	qword ptr [rsp + 0x38], r8
0x160bb:	mov	qword ptr [rsp + 0x30], r11
0x160c0:	je	0x1627e


0x15b46:	shl	rbx, 5
0x15b4a:	lea	rax, [rcx + rbx]
0x15b4e:	mov	edx, dword ptr [rax]
0x15b50:	test	edx, edx
0x15b52:	jne	0x1606a


0x1580f:	mov	edx, ebx
0x15811:	and	edx, 0xffffffdf
0x15814:	cmp	dl, 0x5a
0x15817:	je	0x15820


0x7fdb:	cmp	byte ptr [rbx + 0x15], 0
0x7fdf:	jne	0x7ff9


0x7447:	mov	r14d, r8d
0x744a:	mov	r15d, 0x11
0x7450:	mov	qword ptr [rbp - 0x350], 0
0x745b:	jmp	0x5fae


0x8186:	test	r15d, r15d
0x8189:	jne	0x7bbf


0x7def:	jmp	0x7bbf


0x8176:	and	eax, 0xf000
0x817b:	cmp	eax, 0x4000
0x8180:	je	0x7de6


0x7bbf:	mov	rdi, qword ptr [rbp - 0x310]
0x7bc6:	mov	byte ptr [rbp - 0x358], r9b
0x7bcd:	mov	byte ptr [rbp - 0x350], r8b
0x7bd4:	call	0xb3a0


0x2ac0:	jmp	qword ptr [rip + 0x21a202]


0x2960:	jmp	qword ptr [rip + 0x21a2b2]


0x159df:	cmp	r9, rbx
0x159e2:	mov	rcx, qword ptr [r15 + 8]
0x159e6:	ja	0x16062


0x16258:	cmp	dil, 9
0x1625c:	jbe	0x161aa


0x161e7:	cmp	dil, 9
0x161eb:	ja	0x15e6b


0x1627e:	mov	rdi, rsi
0x16281:	call	0x2df0


0x160c6:	mov	rdi, rcx
0x160c9:	call	0x2e90


0x15b30:	add	rax, 1
0x15b34:	mov	dword ptr [rdx], 0
0x15b3a:	add	rdx, 0x20
0x15b3e:	cmp	rax, rbx
0x15b41:	jbe	0x15b30


0x15b43:	mov	qword ptr [r15], rax
0x15b46:	shl	rbx, 5
0x15b4a:	lea	rax, [rcx + rbx]
0x15b4e:	mov	edx, dword ptr [rax]
0x15b50:	test	edx, edx
0x15b52:	jne	0x1606a


0x15b58:	mov	dword ptr [rax], 5
0x15b5e:	mov	rbp, r11
0x15b61:	movzx	ebx, byte ptr [r11]
0x15b65:	jmp	0x157ee


0x1606a:	cmp	edx, 5
0x1606d:	jne	0x15e6f


0x15819:	cmp	bl, 0x74
0x1581c:	jne	0x15848


0x7fe1:	cmp	byte ptr [rbx + 0x22], 0
0x7fe5:	je	0x83c6


0x7ff9:	mov	r14, qword ptr [rbp - 0x308]
0x8000:	mov	byte ptr [rbp - 0x350], r9b
0x8007:	mov	rdi, r14
0x800a:	call	0x2960


0x5fae:	test	r13b, r13b
0x5fb1:	je	0x6070


0x818f:	mov	rdx, qword ptr [rbp - 0x308]
0x8196:	mov	esi, 3
0x819b:	xor	edi, edi
0x819d:	call	0xf4f0






0x161aa:	movabs	rsi, 0x1999999999999999
0x161b4:	sub	eax, 0x30
0x161b7:	mov	rdx, r8
0x161ba:	cmp	rcx, rsi
0x161bd:	cdqe	
0x161bf:	ja	0x161c8


0x16262:	lea	rbx, [rdx - 1]
0x16266:	cmp	rbx, -3
0x1626a:	ja	0x15e6b


0x161f1:	sub	eax, 0x30
0x161f4:	mov	rdx, r8
0x161f7:	mov	rsi, r11
0x161fa:	cdqe	
0x161fc:	jmp	0x161cb


0x16073:	movzx	ebx, byte ptr [r11]
0x16077:	mov	rbp, r11
0x1607a:	jmp	0x157ee


0x15848:	lea	edx, [rbx - 0x25]
0x1584b:	cmp	dl, 0x53
0x1584e:	ja	0x15e6b


0x83c6:	cmp	dword ptr [rbx + 4], 2
0x83ca:	jne	0x7447


0x7feb:	cmp	qword ptr [rbp - 0x1e0], 1
0x7ff3:	jbe	0x83c6


0x16270:	mov	qword ptr [r12 + 0x40], rbx
0x16275:	lea	r11, [rsi + 2]
0x16279:	jmp	0x15b0d


0x161cb:	xor	ebx, ebx
0x161cd:	add	rdx, rax
0x161d0:	movsx	eax, byte ptr [r11 + 1]
0x161d5:	setb	bl
0x161d8:	add	r11, 1
0x161dc:	mov	rcx, rdx
0x161df:	test	rbx, rbx
0x161e2:	lea	edi, [rax - 0x30]
0x161e5:	je	0x16258


0x15854:	lea	rcx, [rip + 0x3731]
0x1585b:	movzx	edx, dl
0x1585e:	movsxd	rdx, dword ptr [rcx + rdx*4]
0x15862:	add	rdx, rcx
0x15865:	jmp	rdx


0x83d0:	mov	eax, dword ptr [rbp - 0x268]
0x83d6:	and	eax, 0xf000
0x83db:	cmp	eax, 0x8000
0x83e0:	jne	0x7ff9


0x83e6:	jmp	0x7447


0x6136:	test	al, al
0x6138:	mov	dword ptr [rbp - 0x35c], 0
0x6142:	je	0x5f30


0x5f30:	xor	r12d, r12d
0x5f33:	jmp	0x6466


0x6148:	movzx	eax, byte ptr [rbx + 0x2c]
0x614c:	test	al, al
0x614e:	mov	byte ptr [rbp - 0x320], al
0x6154:	jne	0x6ae0


0x6466:	mov	rsi, qword ptr [rbp - 0x38]
0x646a:	xor	rsi, qword ptr fs:[0x28]
0x6473:	mov	eax, r12d
0x6476:	jne	0x9144


0x615a:	cmp	byte ptr [rbx + 0x17], 0
0x615e:	je	0x74a8


0x6ae0:	mov	rax, qword ptr [rbp - 0x310]
0x6ae7:	cmp	byte ptr [rax], 0x2f
0x6aea:	je	0x6b24


0x74a8:	cmp	r15d, 0x8000
0x74af:	je	0x7cb0


0x6164:	cmp	byte ptr [rbx + 0x16], 0
0x6168:	mov	edx, 1
0x616d:	jne	0x6178


0x6b24:	movzx	ecx, byte ptr [rbx + 0x16]
0x6b28:	mov	rdx, qword ptr [rbp - 0x308]
0x6b2f:	mov	r8d, 0xffffffff
0x6b35:	mov	rdi, qword ptr [rbp - 0x310]
0x6b3c:	mov	esi, 0xffffff9c
0x6b41:	call	0xa5e0


0x6aec:	mov	rdi, qword ptr [rbp - 0x308]
0x6af3:	call	0xb2c0


0x7cb0:	mov	eax, dword ptr [rbp - 0x268]
0x7cb6:	xor	esi, esi
0x7cb8:	cmp	dword ptr [rbx + 4], 2
0x7cbc:	mov	rdi, qword ptr [rbp - 0x310]
0x7cc3:	mov	dword ptr [rbp - 0x340], eax
0x7cc9:	movzx	eax, byte ptr [rbx + 0x23]
0x7ccd:	sete	sil
0x7cd1:	shl	esi, 0x11
0x7cd4:	mov	byte ptr [rbp - 0x338], al
0x7cda:	xor	eax, eax
0x7cdc:	call	0xb490


0x74b5:	cmp	r15d, 0xa000
0x74bc:	setne	r8b
0x74c0:	and	r8b, byte ptr [rbx + 0x14]
0x74c4:	jne	0x7cb0


0x616f:	xor	edx, edx
0x6171:	cmp	dword ptr [rbx + 8], 3
0x6175:	sete	dl
0x6178:	mov	r8d, dword ptr [rbp - 0x328]
0x617f:	mov	rsi, qword ptr [rbp - 0x308]
0x6186:	xor	ecx, ecx
0x6188:	mov	rdi, qword ptr [rbp - 0x310]
0x618f:	call	0x5090


0x6178:	mov	r8d, dword ptr [rbp - 0x328]
0x617f:	mov	rsi, qword ptr [rbp - 0x308]
0x6186:	xor	ecx, ecx
0x6188:	mov	rdi, qword ptr [rbp - 0x310]
0x618f:	call	0x5090


0x74ca:	cmp	r15d, 0x1000
0x74d1:	je	0x8592


0x8592:	mov	r12d, dword ptr [rbp - 0x35c]
0x8599:	mov	rsi, qword ptr [rbp - 0x308]
0x85a0:	lea	rcx, [rbp - 0x2f8]
0x85a7:	xor	edi, edi
0x85a9:	mov	byte ptr [rbp - 0x320], r8b
0x85b0:	mov	qword ptr [rbp - 0x2f8], 0
0x85bb:	not	r12d
0x85be:	and	r12d, dword ptr [rbp - 0x314]
0x85c5:	mov	edx, r12d
0x85c8:	call	0x2da0


0x74d7:	mov	eax, r15d
0x74da:	and	ah, 0xbf
0x74dd:	cmp	eax, 0x2000
0x74e2:	je	0x81cc


0x2da0:	jmp	qword ptr [rip + 0x21a092]


0x81cc:	mov	edx, dword ptr [rbp - 0x35c]
0x81d2:	mov	rax, qword ptr [rbp - 0x258]
0x81d9:	lea	rcx, [rbp - 0x2f0]
0x81e0:	mov	rsi, qword ptr [rbp - 0x308]
0x81e7:	xor	edi, edi
0x81e9:	mov	byte ptr [rbp - 0x328], r8b
0x81f0:	not	edx
0x81f2:	and	edx, dword ptr [rbp - 0x314]
0x81f8:	mov	qword ptr [rbp - 0x2f0], rax
0x81ff:	call	0x2da0


0x74e8:	cmp	r15d, 0xc000
0x74ef:	je	0x81cc




0x74f5:	cmp	r15d, 0xa000
0x74fc:	je	0x8880


0x8880:	mov	rsi, qword ptr [rbp - 0x250]
0x8887:	mov	rdi, qword ptr [rbp - 0x310]
0x888e:	call	0xa820


0x7502:	mov	rsi, qword ptr [rbp - 0x310]
0x7509:	mov	edi, 4
0x750e:	call	0xf3f0


0x6b46:	xor	r8d, r8d
0x6b49:	test	eax, eax
0x6b4b:	mov	r12d, eax
0x6b4e:	jle	0x619f


0x619f:	cmp	r15d, 0x4000
0x61a6:	setne	r15b
0x61aa:	test	r14b, r14b
0x61ad:	jne	0x61c2


0x6b54:	mov	rdx, qword ptr [rbp - 0x310]
0x6b5b:	mov	esi, 4
0x6b60:	mov	edi, 1
0x6b65:	call	0xf2d0


0x61af:	movzx	eax, byte ptr [rbx + 0x14]
0x61b3:	xor	eax, 1
0x61b6:	and	al, r15b
0x61b9:	mov	r12d, eax
0x61bc:	jne	0x7ef0


0x61c2:	test	r13b, r13b
0x61c5:	mov	r12d, 1
0x61cb:	je	0x6222


0x7ef0:	mov	r15d, eax
0x7ef3:	movabs	rax, 0xff000000ff00
0x7efd:	test	qword ptr [rbx + 0x20], rax
0x7f01:	je	0x61c2


0x6222:	cmp	byte ptr [rbx + 0x17], 0
0x6226:	je	0x6231


0x61cd:	mov	byte ptr [rbp - 0x330], 0
0x61d4:	cmp	qword ptr [rbx + 0x40], 0
0x61d9:	je	0x620d


0x7f07:	movzx	esi, byte ptr [rbx + 0x25]
0x7f0b:	mov	rdi, qword ptr [rbp - 0x308]
0x7f12:	xor	edx, edx
0x7f14:	mov	rcx, rbx
0x7f17:	mov	byte ptr [rbp - 0x328], r8b
0x7f1e:	call	0x5890


0x6231:	test	r8b, r8b
0x6234:	jne	0x6466


0x6228:	test	r15b, r15b
0x622b:	jne	0x6466


0x620d:	movzx	eax, byte ptr [rbp - 0x330]
0x6214:	movzx	r12d, byte ptr [rbp - 0x315]
0x621c:	mov	byte ptr [rbp - 0x315], al
0x6222:	cmp	byte ptr [rbx + 0x17], 0
0x6226:	je	0x6231


0x61db:	lea	r12, [rbp - 0xd0]
0x61e2:	mov	rsi, qword ptr [rbp - 0x308]
0x61e9:	mov	edi, 1
0x61ee:	mov	byte ptr [rbp - 0x328], r8b
0x61f5:	mov	rdx, r12
0x61f8:	call	0x2b00


0x623a:	cmp	byte ptr [rbx + 0x1f], 0
0x623e:	je	0x62f8


0x62f8:	cmp	byte ptr [rbp - 0x320], 0
0x62ff:	jne	0x6466


0x6244:	mov	rax, qword ptr [rbp - 0x238]
0x624b:	cmp	byte ptr [rbp - 0x320], 0
0x6252:	lea	rsi, [rbp - 0xd0]
0x6259:	mov	rdi, qword ptr [rbp - 0x308]
0x6260:	mov	qword ptr [rbp - 0xd0], rax
0x6267:	mov	rax, qword ptr [rbp - 0x230]
0x626e:	mov	qword ptr [rbp - 0xc8], rax
0x6275:	mov	rax, qword ptr [rbp - 0x228]
0x627c:	mov	qword ptr [rbp - 0xc0], rax
0x6283:	mov	rax, qword ptr [rbp - 0x220]
0x628a:	mov	qword ptr [rbp - 0xb8], rax
0x6291:	je	0x8240


0x6305:	cmp	byte ptr [rbx + 0x1d], 0
0x6309:	je	0x6367


0x8240:	call	0x11740


0x6297:	call	0x11750


0x6367:	movabs	rax, 0xff0000000000ff
0x6371:	test	qword ptr [rbx + 0x18], rax
0x6375:	jne	0x8410


0x630b:	test	r14b, r14b
0x630e:	jne	0x6322


0x637b:	cmp	byte ptr [rbx + 0x2b], 0
0x637f:	jne	0x8775


0x8410:	mov	r8d, dword ptr [rbp - 0x314]
0x8417:	mov	rdx, qword ptr [rbp - 0x308]
0x841e:	mov	ecx, 0xffffffff
0x8423:	mov	rdi, qword ptr [rbp - 0x310]
0x842a:	mov	esi, ecx
0x842c:	call	0xa740


0x6310:	mov	eax, dword ptr [rbp - 0x1d4]
0x6316:	cmp	dword ptr [rbp - 0x264], eax
0x631c:	je	0x89ca


0x6322:	mov	rsi, qword ptr [rbp - 0x308]
0x6329:	lea	rcx, [rbp - 0x280]
0x6330:	lea	r9, [rbp - 0x1f0]
0x6337:	movzx	r8d, r14b
0x633b:	mov	edx, 0xffffffff
0x6340:	mov	rdi, rbx
0x6343:	call	0x59e0


0x6385:	test	byte ptr [rbx + 0x20], r14b
0x6389:	jne	0x8a29


0x8775:	mov	edx, dword ptr [rbx + 0x10]
0x8778:	mov	rdi, qword ptr [rbp - 0x308]
0x877f:	mov	esi, 0xffffffff
0x8784:	call	0xa7d0


0x89ca:	mov	eax, dword ptr [rbp - 0x1d0]
0x89d0:	cmp	dword ptr [rbp - 0x260], eax
0x89d6:	jne	0x6322


0x638f:	mov	eax, dword ptr [rbp - 0x35c]
0x6395:	test	eax, eax
0x6397:	jne	0x89e1


0x8a29:	mov	eax, dword ptr [rbp - 0x314]
0x8a2f:	mov	edx, 0x1b6
0x8a34:	mov	ebx, 0x1ff
0x8a39:	and	eax, 0x7000
0x8a3e:	cmp	eax, 0x4000
0x8a43:	cmovne	ebx, edx
0x8a46:	call	0x5bf0


0x89dc:	jmp	0x6367


0x639d:	cmp	byte ptr [rbp - 0x315], 0
0x63a4:	je	0x6466


0x89e1:	call	0x5bf0


0x63aa:	mov	esi, dword ptr [rbp - 0x38c]
0x63b0:	or	esi, dword ptr [rbp - 0x35c]
0x63b6:	mov	rdi, qword ptr [rbp - 0x308]
0x63bd:	call	0x2f10


0x89e6:	not	eax
0x89e8:	and	dword ptr [rbp - 0x35c], eax
0x89ee:	je	0x639d


0x89f4:	cmp	byte ptr [rbp - 0x315], 1
0x89fb:	je	0x63aa


0x8a01:	test	r14b, r14b
0x8a04:	jne	0x9377


0x8a0a:	mov	eax, dword ptr [rbp - 0x1d8]
0x8a10:	mov	dword ptr [rbp - 0x38c], eax
0x8a16:	not	eax
0x8a18:	test	dword ptr [rbp - 0x35c], eax
0x8a1e:	jne	0x63aa


0x9377:	mov	rsi, qword ptr [rbp - 0x308]
0x937e:	lea	rdx, [rbp - 0x1f0]
0x9385:	mov	edi, 1
0x938a:	call	0x2b00


0x8a24:	jmp	0x6466


0x8a4b:	not	eax
0x8a4d:	mov	edx, eax
0x8a4f:	and	edx, ebx
0x8a51:	jmp	0x8778


0x8778:	mov	rdi, qword ptr [rbp - 0x308]
0x877f:	mov	esi, 0xffffffff
0x8784:	call	0xa7d0


0x6f72:	test	al, al
0x6f74:	je	0x5f30


0x6f7a:	mov	eax, r12d
0x6f7d:	and	eax, 0x12
0x6f80:	mov	dword ptr [rbp - 0x35c], eax
0x6f86:	jmp	0x6769


0x6769:	mov	rax, qword ptr [rbp - 0x330]
0x6770:	mov	rdx, qword ptr [rbp - 0x278]
0x6777:	mov	rcx, qword ptr [rbp - 0x280]
0x677e:	test	rax, rax
0x6781:	jne	0x679c


0x6783:	jmp	0x7080


0x679c:	cmp	qword ptr [rax + 8], rdx
0x67a0:	jne	0x6790


0x7080:	sub	rsp, 0x30
0x7084:	mov	rsi, qword ptr [rbp - 0x330]
0x708b:	lea	rax, [rsp + 0xf]
0x7090:	and	rax, 0xfffffffffffffff0
0x7094:	test	r14b, r14b
0x7097:	mov	qword ptr [rbp - 0x328], rax
0x709e:	mov	qword ptr [rax], rsi
0x70a1:	mov	qword ptr [rax + 8], rdx
0x70a5:	mov	qword ptr [rax + 0x10], rcx
0x70a9:	jne	0x70c1


0x67a2:	cmp	qword ptr [rax + 0x10], rcx
0x67a6:	jne	0x6790


0x6790:	mov	rax, qword ptr [rax]
0x6793:	test	rax, rax
0x6796:	je	0x7080


0x70ab:	mov	eax, dword ptr [rbp - 0x1d8]
0x70b1:	and	eax, 0xf000
0x70b6:	cmp	eax, 0x4000
0x70bb:	je	0x8118


0x70c1:	mov	esi, dword ptr [rbp - 0x35c]
0x70c7:	mov	r15, qword ptr [rbp - 0x308]
0x70ce:	not	esi
0x70d0:	mov	rdi, r15
0x70d3:	and	esi, r12d
0x70d6:	call	0x29c0


0x67a8:	mov	rsi, qword ptr [rbp - 0x310]
0x67af:	mov	edi, 4
0x67b4:	call	0xf3f0


0x8118:	movabs	rax, 0xff000000ff00
0x8122:	test	qword ptr [rbx + 0x20], rax
0x8126:	jne	0x86e0


0x812c:	mov	byte ptr [rbp - 0x330], 0
0x8133:	mov	dword ptr [rbp - 0x35c], 0
0x813d:	jmp	0x7968


0x86e0:	movzx	esi, byte ptr [rbx + 0x25]
0x86e4:	mov	rdi, qword ptr [rbp - 0x308]
0x86eb:	xor	edx, edx
0x86ed:	mov	rcx, rbx
0x86f0:	call	0x5890


0x7968:	mov	rax, qword ptr [rbp - 0x348]
0x796f:	test	rax, rax
0x7972:	setne	r12b
0x7976:	and	r12b, byte ptr [rbx + 0x1c]
0x797a:	jne	0x815b


0x7980:	movdqu	xmm0, xmmword ptr [rbx]
0x7984:	mov	esi, 2
0x7989:	mov	rdi, qword ptr [rbp - 0x310]
0x7990:	movaps	xmmword ptr [rbp - 0x2f0], xmm0
0x7997:	movdqu	xmm0, xmmword ptr [rbx + 0x10]
0x799c:	movaps	xmmword ptr [rbp - 0x2e0], xmm0
0x79a3:	movdqu	xmm0, xmmword ptr [rbx + 0x20]
0x79a8:	movaps	xmmword ptr [rbp - 0x2d0], xmm0
0x79af:	movdqu	xmm0, xmmword ptr [rbx + 0x30]
0x79b4:	movaps	xmmword ptr [rbp - 0x2c0], xmm0
0x79bb:	movdqu	xmm0, xmmword ptr [rbx + 0x40]
0x79c0:	movaps	xmmword ptr [rbp - 0x2b0], xmm0
0x79c7:	call	0xffb0


0x815b:	mov	rcx, qword ptr [rbp - 0x280]
0x8162:	cmp	qword ptr [rax], rcx
0x8165:	jne	0x7b63


0x816b:	jmp	0x7980


0x7b63:	test	r13b, r13b
0x7b66:	jne	0x8142


0x7b6c:	movzx	eax, byte ptr [rbp - 0x330]
0x7b73:	mov	byte ptr [rbp - 0x320], 0
0x7b7a:	mov	byte ptr [rbp - 0x315], al
0x7b80:	jmp	0x623a


0x8142:	mov	byte ptr [rbp - 0x315], r12b
0x8149:	xor	r15d, r15d
0x814c:	xor	r8d, r8d
0x814f:	mov	byte ptr [rbp - 0x320], 0
0x8156:	jmp	0x61d4


0x61d4:	cmp	qword ptr [rbx + 0x40], 0
0x61d9:	je	0x620d


0x673a:	test	al, al
0x673c:	je	0x5f30


0x6742:	mov	r15d, dword ptr [rbp - 0x314]
0x6749:	mov	eax, r12d
0x674c:	and	eax, 0x3f
0x674f:	mov	dword ptr [rbp - 0x35c], eax
0x6755:	and	r15d, 0xf000
0x675c:	cmp	r15d, 0x4000
0x6763:	jne	0x6148


0x73d5:	test	al, al
0x73d7:	movzx	r8d, byte ptr [rbp - 0x350]
0x73df:	movzx	r9d, byte ptr [rbp - 0x358]
0x73e7:	jne	0x8735


0x73ed:	cmp	r12d, 0x4000
0x73f4:	je	0x7410


0x8735:	mov	rdx, qword ptr [rbp - 0x310]
0x873c:	mov	esi, 4
0x8741:	mov	edi, 1
0x8746:	call	0xf2d0


0x73f6:	mov	eax, dword ptr [rbp - 0x1d8]
0x73fc:	mov	edx, eax
0x73fe:	and	edx, 0xf000
0x7404:	cmp	edx, 0x4000
0x740a:	je	0x6efd


0x6009:	test	al, al
0x600b:	je	0x6070


0x600d:	mov	rdx, qword ptr [rbp - 0x308]
0x6014:	mov	esi, 4
0x6019:	mov	edi, 1
0x601e:	call	0xf2d0


0x667e:	test	al, al
0x6680:	mov	r12d, eax
0x6683:	jne	0x7548


0x6689:	mov	rdi, qword ptr [rbx + 0x48]
0x668d:	mov	r10, qword ptr [rbp - 0x328]
0x6694:	jmp	0x5d5b


0x7548:	mov	rsi, qword ptr [rbp - 0x310]
0x754f:	mov	edi, 4
0x7554:	call	0xf3f0


0x6ee2:	jmp	0x6466


0x11549:	test	al, al
0x1154b:	je	0x113a5


0x11551:	jmp	0x115f7


0x115f7:	mov	rcx, qword ptr [rsp + 0x108]
0x115ff:	xor	rcx, qword ptr fs:[0x28]
0x11608:	mov	eax, ebp
0x1160a:	jne	0x11726


0x11610:	add	rsp, 0x110
0x11617:	pop	rbx
0x11618:	pop	rbp
0x11619:	pop	r12
0x1161b:	pop	r13
0x1161d:	pop	r14
0x1161f:	ret	


0x11726:	call	0x2b30


0x9db5:	add	rsp, 0x20
0x9db9:	mov	rsi, qword ptr [rsp + 8]
0x9dbe:	xor	rsi, qword ptr fs:[0x28]
0x9dc7:	jne	0x9e14


0x9dc9:	add	rsp, 0x18
0x9dcd:	ret	


0x9e14:	call	0x2b30


0x3f18:	mov	byte ptr [rip + 0x219209], 1
0x3f1f:	pop	rbp
0x3f20:	ret	


0x42e2:	test	al, al
0x42e4:	jne	0x4323


0x42e6:	xor	ebx, ebx
0x42e8:	mov	rcx, qword ptr [rsp + 0x1d8]
0x42f0:	xor	rcx, qword ptr fs:[0x28]
0x42f9:	mov	eax, ebx
0x42fb:	jne	0x4848


0x4323:	cmp	byte ptr [rip + 0x21ae17], 0
0x432a:	jne	0x46c0


0x4301:	add	rsp, 0x1e8
0x4308:	pop	rbx
0x4309:	pop	rbp
0x430a:	pop	r12
0x430c:	pop	r13
0x430e:	pop	r14
0x4310:	pop	r15
0x4312:	ret	


0x4848:	call	0x2b30


0x4330:	cmp	byte ptr [rbx + 0x1f], 0
0x4334:	je	0x43e0


0x46c0:	call	0x30a0


0x43e0:	mov	esi, dword ptr [rip + 0x21ad6a]
0x43e6:	mov	edx, dword ptr [rip + 0x21ad58]
0x43ec:	cmp	esi, -1
0x43ef:	jne	0x43f6


0x433a:	mov	eax, dword ptr [rsp + 0x38]
0x433e:	and	eax, 0xf000
0x4343:	cmp	eax, 0x8000
0x4348:	je	0x43e0


0x43f1:	cmp	edx, -1
0x43f4:	je	0x4406


0x43f6:	mov	rdi, rbp
0x43f9:	call	0x2e40


0x434e:	mov	rax, qword ptr [rsp + 0x68]
0x4353:	lea	rsi, [rsp + 0x140]
0x435b:	mov	rdi, rbp
0x435e:	mov	qword ptr [rsp + 0x140], rax
0x4366:	mov	rax, qword ptr [rsp + 0x70]
0x436b:	mov	qword ptr [rsp + 0x148], rax
0x4373:	mov	rax, qword ptr [rsp + 0x78]
0x4378:	mov	qword ptr [rsp + 0x150], rax
0x4380:	mov	rax, qword ptr [rsp + 0x80]
0x4388:	mov	qword ptr [rsp + 0x158], rax
0x4390:	call	0x11740


0x4406:	mov	esi, dword ptr [rip + 0x218c10]
0x440c:	mov	rdi, rbp
0x440f:	mov	ebx, 1
0x4414:	call	0x2f10


0x4f29:	cmp	rax, rbp
0x4f2c:	je	0x4f00


0x4f00:	sub	rbx, rax
0x4f03:	je	0x4f38


0x4f2e:	pop	rbx
0x4f2f:	xor	eax, eax
0x4f31:	pop	rbp
0x4f32:	pop	r12
0x4f34:	ret	


0xcf3b:	test	rax, rax
0xcf3e:	js	0xd220


0xd220:	cmp	rax, -1
0xd224:	jne	0xd11c


0xcf44:	mov	r9, qword ptr [rsp + 8]
0xcf49:	add	rax, rbx
0xcf4c:	mov	qword ptr [rsp], rax
0xcf50:	cmp	dword ptr [rsp + 0x108], -1
0xcf58:	mov	eax, dword ptr [rsp + 0x100]
0xcf5f:	mov	esi, r12d
0xcf62:	sete	cl
0xcf65:	cmp	dword ptr [rsp + 0x110], -1
0xcf6d:	sete	dl
0xcf70:	and	eax, 0xc00
0xcf75:	and	esi, 0x200
0xcf7b:	or	eax, esi
0xcf7d:	and	cl, dl
0xcf7f:	mov	byte ptr [rsp + 0x1f], cl
0xcf83:	jne	0xd0d0


0xd22a:	call	0x2950


0xd11c:	mov	r12d, 1
0xd122:	jmp	0xd09d


0xd09d:	mov	rdi, qword ptr [rsp + 0xb8]
0xd0a5:	xor	rdi, qword ptr fs:[0x28]
0xd0ae:	mov	eax, r12d
0xd0b1:	jne	0xd285


0xd0b7:	add	rsp, 0xc8
0xd0be:	pop	rbx
0xd0bf:	pop	rbp
0xd0c0:	pop	r12
0xd0c2:	pop	r13
0xd0c4:	pop	r14
0xd0c6:	pop	r15
0xd0c8:	ret	


0xd285:	call	0x2b30


0x3f8c:	cmp	rax, -1
0x3f90:	jne	0x405a


0x3f96:	mov	rsi, rbx
0x3f99:	mov	edi, 4
0x3f9e:	call	0xf3f0


0x405a:	xor	esi, esi
0x405c:	mov	rdi, rbp
0x405f:	call	0x102f0


0x4ea7:	test	al, al
0x4ea9:	je	0x4ec0


0x4ec0:	mov	rdi, rbx
0x4ec3:	mov	esi, 2
0x4ec8:	call	0x2fd0


0x4eab:	mov	eax, 1
0x4eb0:	pop	rbx
0x4eb1:	ret	


0x2fd0:	jmp	qword ptr [rip + 0x219f7a]




0xc5d0:	mov	edx, 8
0xc5d5:	mov	rbx, rax
0xc5d8:	xor	ecx, ecx
0xc5da:	mov	rax, rdx
0xc5dd:	mul	rbx
0xc5e0:	jo	0xc77f


0xc77f:	mov	ecx, 1
0xc784:	jmp	0xc5e6


0xc5e6:	test	rax, rax
0xc5e9:	mov	eax, 1
0xc5ee:	cmovs	rcx, rax
0xc5f2:	test	rbx, rbx
0xc5f5:	je	0xc6d0


0xc5fb:	and	ecx, 1
0xc5fe:	jne	0xc6d0


0xc604:	cmp	qword ptr [rbp + 0x10], rbx
0xc608:	je	0xc730


0xc730:	mov	ebx, 1
0xc735:	jmp	0xc6d2


0xc60e:	mov	esi, 0x10
0xc613:	mov	rdi, rbx
0xc616:	call	0x2cd0


0xc6d2:	mov	rcx, qword ptr [rsp + 0x58]
0xc6d7:	xor	rcx, qword ptr fs:[0x28]
0xc6e0:	mov	eax, ebx
0xc6e2:	jne	0xc77a


0x11332:	test	eax, eax
0x11334:	mov	r13d, eax
0x11337:	js	0x116f3


0x116f3:	mov	ebp, 0xffffffff
0x116f8:	jmp	0x115f7


0x1179c:	test	eax, eax
0x1179e:	mov	ebx, eax
0x117a0:	js	0x118b0


0x118b0:	mov	ebp, 0xffffffff
0x118b5:	jmp	0x11848


0x117a6:	mov	eax, dword ptr [rip + 0x20df7c]
0x117ac:	test	eax, eax
0x117ae:	js	0x117e6


0x11848:	mov	rcx, qword ptr [rsp + 0xc8]
0x11850:	xor	rcx, qword ptr fs:[0x28]
0x11859:	mov	eax, ebp
0x1185b:	jne	0x11996


0x117e6:	test	ebx, ebx
0x117e8:	mov	dword ptr [rip + 0x20df36], 0xffffffff
0x117f2:	je	0x11895


0x117b0:	cmp	ebx, 2
0x117b3:	je	0x118e0


0x11861:	add	rsp, 0xd0
0x11868:	pop	rbx
0x11869:	pop	rbp
0x1186a:	pop	r12
0x1186c:	ret	


0x11996:	call	0x2b30


0x11895:	lea	rdx, [rsp + 0x30]
0x1189a:	mov	rsi, r12
0x1189d:	mov	edi, 1
0x118a2:	call	0x2b00


0x117f8:	cmp	ebx, 3
0x117fb:	jne	0x11938


0x118e0:	lea	rdx, [rsp + 0x30]
0x118e5:	mov	rsi, r12
0x118e8:	mov	edi, 1
0x118ed:	call	0x2b00


0x117b9:	mov	rdx, qword ptr [rsp + 8]
0x117be:	mov	ecx, 0x100
0x117c3:	mov	rsi, r12
0x117c6:	mov	edi, 0xffffff9c
0x117cb:	call	0x2930


0x11801:	cmp	qword ptr [rsp + 8], 0
0x11807:	je	0x11820


0x11938:	lea	rdx, [rsp + 0x30]
0x1193d:	mov	rsi, r12
0x11940:	mov	edi, 1
0x11945:	call	0x2b00


0x11820:	mov	eax, dword ptr [rsp + 0x48]
0x11824:	and	eax, 0xf000
0x11829:	cmp	eax, 0xa000
0x1182e:	je	0x11986


0x11809:	lea	rsi, [rsp + 8]
0x1180e:	lea	rdi, [rsp + 0x30]
0x11813:	xor	ebp, ebp
0x11815:	call	0x11140


0x11986:	call	0x2950


0x11834:	mov	rdx, qword ptr [rsp + 8]
0x11839:	mov	rsi, r12
0x1183c:	mov	edi, 0xffffffff
0x11841:	call	0x112e0


0x11846:	mov	ebp, eax
0x11848:	mov	rcx, qword ptr [rsp + 0xc8]
0x11850:	xor	rcx, qword ptr fs:[0x28]
0x11859:	mov	eax, ebp
0x1185b:	jne	0x11996


0x1181a:	test	al, al
0x1181c:	jne	0x11848


0x629c:	test	eax, eax
0x629e:	je	0x62f8


0x62a0:	call	0x2950


0x415d:	xor	eax, 1
0x4160:	add	rsp, 0x20
0x4164:	test	al, al
0x4166:	movzx	ebp, al
0x4169:	jne	0x417c


0x416b:	cmp	byte ptr [rbx + 0x21], 0
0x416f:	je	0x417c


0x417c:	add	rsp, 8
0x4180:	mov	eax, ebp
0x4182:	pop	rbx
0x4183:	pop	rbp
0x4184:	ret	


0x4171:	call	0x2950


0x50c9:	test	eax, eax
0x50cb:	mov	ebx, eax
0x50cd:	pop	rdx
0x50ce:	pop	rcx
0x50cf:	jg	0x5138


0x50d1:	shr	ebx, 0x1f
0x50d4:	and	bl, bpl
0x50d7:	jne	0x50f0


0x5138:	mov	rdx, r13
0x513b:	mov	esi, 4
0x5140:	mov	edi, 1
0x5145:	call	0xf2d0


0x50d9:	add	rsp, 8
0x50dd:	mov	ebx, 1
0x50e2:	mov	eax, ebx
0x50e4:	pop	rbx
0x50e5:	pop	rbp
0x50e6:	pop	r12
0x50e8:	pop	r13
0x50ea:	ret	


0x50f0:	mov	rsi, r12
0x50f3:	mov	edi, 4
0x50f8:	call	0xf3f0


0x6194:	test	al, al
0x6196:	je	0x6bb0


0x6bb0:	cmp	byte ptr [rbx + 0x25], 0
0x6bb4:	jne	0x6d30


0x619c:	xor	r8d, r8d
0x619f:	cmp	r15d, 0x4000
0x61a6:	setne	r15b
0x61aa:	test	r14b, r14b
0x61ad:	jne	0x61c2


0x6bba:	cmp	qword ptr [rbp - 0x358], 0
0x6bc2:	je	0x7460


0x6d30:	call	0x30f6


0x7460:	mov	rsi, qword ptr [rbp - 0x280]
0x7467:	mov	rdi, qword ptr [rbp - 0x278]
0x746e:	call	0x9ef0


0x6bc8:	mov	rax, qword ptr [rbp - 0x350]
0x6bcf:	test	rax, rax
0x6bd2:	je	0x5f30


0x6bd8:	mov	rsi, qword ptr [rbp - 0x308]
0x6bdf:	mov	rdi, rax
0x6be2:	call	0x2fa0


0x6e60:	test	al, al
0x6e62:	movzx	r8d, byte ptr [rbp - 0x350]
0x6e6a:	movzx	r9d, byte ptr [rbp - 0x358]
0x6e72:	jne	0x68b0


0x51cf:	test	al, al
0x51d1:	jne	0x5268


0x51d7:	mov	edi, dword ptr [rbp]
0x51da:	lea	r12, [rsp + 0xc]
0x51df:	mov	rsi, r12
0x51e2:	call	0xb5f0


0x5268:	mov	rsi, rbx
0x526b:	mov	edi, 4
0x5270:	call	0xf3f0


0x51e7:	mov	ebp, dword ptr [rbp]
0x51ea:	mov	rsi, rbx
0x51ed:	mov	edi, 4
0x51f2:	mov	byte ptr [rsp + 0x16], 0
0x51f7:	call	0xf3f0


0xb0f3:	test	rax, rax
0xb0f6:	jne	0xb198


0xb0fc:	mov	rdi, rbx
0xb0ff:	call	0x12dc0


0xb198:	xor	esi, esi
0xb19a:	mov	rdi, rbx
0xb19d:	mov	edx, 1
0xb1a2:	call	0x127d0


0xcca4:	xor	rax, qword ptr [rbp + 8]
0xcca8:	xor	edx, edx
0xccaa:	add	rsp, 8
0xccae:	div	rbx
0xccb1:	pop	rbx
0xccb2:	pop	rbp
0xccb3:	mov	rax, rdx
0xccb6:	ret	


0xd99e:	test	eax, eax
0xd9a0:	jne	0xd9d8


0xd9a2:	mov	rsi, rbp
0xd9a5:	mov	rdi, rbx
0xd9a8:	mov	edx, r12d
0xd9ab:	call	0x12a00


0xd9d8:	mov	ebp, 0xfffffffe
0xd9dd:	jmp	0xd9ba


0xd9ba:	mov	rcx, qword ptr [rsp + 8]
0xd9bf:	xor	rcx, qword ptr fs:[0x28]
0xd9c8:	mov	eax, ebp
0xd9ca:	jne	0xd9df


0xd9cc:	add	rsp, 0x10
0xd9d0:	pop	rbx
0xd9d1:	pop	rbp
0xd9d2:	pop	r12
0xd9d4:	ret	


0xd9df:	call	0x2b30


0xa74f:	cmp	eax, -2
0xa752:	mov	ebx, eax
0xa754:	je	0xa7a0


0xa7a0:	mov	rdi, r12
0xa7a3:	call	0xf6c0


0xa756:	cmp	eax, -1
0xa759:	jne	0xa792


0xa75b:	mov	rdi, rbp
0xa75e:	call	0xf6c0


0xa792:	mov	eax, ebx
0xa794:	pop	rbx
0xa795:	pop	rbp
0xa796:	pop	r12
0xa798:	ret	


0x8431:	test	eax, eax
0x8433:	jne	0x640a


0x8439:	jmp	0x6466


0x640a:	cmp	byte ptr [rbx + 0x24], 0
0x640e:	jne	0x5f30


0x6414:	jmp	0x6466


0x7bd9:	cmp	byte ptr [rax], 0x2e
0x7bdc:	mov	r14, rax
0x7bdf:	movzx	r8d, byte ptr [rbp - 0x350]
0x7be7:	movzx	r9d, byte ptr [rbp - 0x358]
0x7bef:	jne	0x697d


0x7bf5:	mov	eax, 1
0x7bfa:	jmp	0x6942


0x697d:	cmp	r15d, 3
0x6981:	je	0x69e9


0x6942:	xor	edx, edx
0x6944:	cmp	byte ptr [r14 + 1], 0x2e
0x6949:	sete	dl
0x694c:	movzx	edx, byte ptr [r14 + rdx + 1]
0x6952:	test	dl, dl
0x6954:	je	0x7428


0x69e9:	mov	edx, dword ptr [rbx]
0x69eb:	mov	rsi, qword ptr [rbp - 0x308]
0x69f2:	mov	edi, 0xffffff9c
0x69f7:	mov	byte ptr [rbp - 0x350], r9b
0x69fe:	call	0xaf80


0x6983:	mov	rdi, r14
0x6986:	mov	byte ptr [rbp - 0x35c], r9b
0x698d:	call	0x2af0


0x695a:	cmp	dl, 0x2f
0x695d:	je	0x7428


0x6963:	test	al, al
0x6965:	jne	0x697d


0x6967:	mov	eax, dword ptr [rbp - 0x1d8]
0x696d:	and	eax, 0xf000
0x6972:	cmp	eax, 0x4000
0x6977:	je	0x7447


0x6928:	cmp	byte ptr [rax], 0x2e
0x692b:	mov	r14, rax
0x692e:	movzx	r8d, byte ptr [rbp - 0x350]
0x6936:	movzx	r9d, byte ptr [rbp - 0x358]
0x693e:	jne	0x6967


0x6940:	xor	eax, eax
0x6942:	xor	edx, edx
0x6944:	cmp	byte ptr [r14 + 1], 0x2e
0x6949:	sete	dl
0x694c:	movzx	edx, byte ptr [r14 + rdx + 1]
0x6952:	test	dl, dl
0x6954:	je	0x7428


0xa938:	cmp	rax, rbx
0xa93b:	jne	0xa91e


0xa93d:	jmp	0xa925


0xa925:	mov	qword ptr [rip + 0x214c74], rbx
0xa92c:	pop	rbx
0xa92d:	ret	


0xa3ff:	sub	rax, rbp
0xa402:	lea	rdi, [rax + 9]
0xa406:	mov	rbx, rax
0xa409:	cmp	rdi, 0x100
0xa410:	jbe	0xa421


0xa421:	mov	rdx, rbx
0xa424:	mov	rsi, rbp
0xa427:	mov	rdi, r12
0xa42a:	call	0x2f20


0xa412:	call	0x2df0


0x2f20:	jmp	qword ptr [rip + 0x219fd2]




0xa99d:	mov	rdi, rax
0xa9a0:	mov	r14, rax
0xa9a3:	call	0x2af0


0xb2f7:	mov	rcx, rax
0xb2fa:	sub	rcx, rbx
0xb2fd:	cmp	rcx, rbp
0xb300:	jbe	0xb330


0xb330:	add	rsp, 8
0xb334:	mov	rdx, rcx
0xb337:	mov	rax, rdx
0xb33a:	pop	rbx
0xb33b:	pop	rbp
0xb33c:	ret	


0xb302:	cmp	byte ptr [rax - 1], 0x2f
0xb306:	lea	rdx, [rcx - 1]
0xb30a:	je	0xb31e


0xb31e:	cmp	rbp, rdx
0xb321:	jne	0xb310


0xb30c:	jmp	0xb330


0xb323:	add	rsp, 8
0xb327:	mov	rax, rdx
0xb32a:	pop	rbx
0xb32b:	pop	rbp
0xb32c:	ret	


0xb310:	cmp	byte ptr [rbx + rdx - 1], 0x2f
0xb315:	lea	rax, [rdx - 1]
0xb319:	jne	0xb323


0xb31b:	mov	rdx, rax
0xb31e:	cmp	rbp, rdx
0xb321:	jne	0xb310


0xb34e:	test	rax, rax
0xb351:	mov	rbx, rax
0xb354:	sete	al
0xb357:	movzx	eax, al
0xb35a:	lea	rdi, [rbx + rax + 1]
0xb35f:	call	0x2df0


0xb7cc:	mov	rbx, rax
0xb7cf:	mov	rdi, rax
0xb7d2:	call	0xb400


0xfb63:	mov	rdi, rbp
0xfb66:	mov	r12, rax
0xfb69:	call	0xb3a0


0xfb6e:	mov	rdi, r12
0xfb71:	mov	r13, rax
0xfb74:	call	0xb400


0x142be:	test	eax, eax
0x142c0:	js	0x15128


0x15128:	xor	r15d, r15d
0x1512b:	jmp	0x1443f


0x142c6:	mov	rsi, r14
0x142c9:	mov	rdi, r12
0x142cc:	call	0x15420


0x1443f:	mov	rdi, qword ptr [rbp - 0x38]
0x14443:	xor	rdi, qword ptr fs:[0x28]
0x1444c:	mov	rax, r15
0x1444f:	jne	0x15357


0x14455:	lea	rsp, [rbp - 0x28]
0x14459:	pop	rbx
0x1445a:	pop	r12
0x1445c:	pop	r13
0x1445e:	pop	r14
0x14460:	pop	r15
0x14462:	pop	rbp
0x14463:	ret	


0x15357:	call	0x2b30


0x142d1:	test	eax, eax
0x142d3:	js	0x15190


0x15190:	mov	rax, qword ptr [rbp - 0x408]
0x15197:	mov	rdi, qword ptr [rbp - 0x2b8]
0x1519e:	add	rax, 0x20
0x151a2:	cmp	rdi, rax
0x151a5:	je	0x151ac


0x142d9:	mov	rax, qword ptr [rbp - 0x2b0]
0x142e0:	mov	rdx, -1
0x142e7:	add	rax, 7
0x142eb:	cmp	rax, 6
0x142ef:	cmovbe	rax, rdx
0x142f3:	add	rax, qword ptr [rbp - 0x2a8]
0x142fa:	jb	0x14d28


0x151ac:	mov	rax, qword ptr [rbp - 0x410]
0x151b3:	mov	rdi, qword ptr [rbp - 0x3a8]
0x151ba:	add	rax, 0x10
0x151be:	cmp	rdi, rax
0x151c1:	je	0x151c8


0x151a7:	call	0x30d0


0x14d28:	call	0x2950


0x14300:	mov	rdi, rax
0x14303:	xor	r8d, r8d
0x14306:	add	rdi, 6
0x1430a:	setb	r8b
0x1430e:	jb	0x14d28


0x151c8:	call	0x2950


0x151c3:	call	0x30d0


0x14314:	cmp	rdi, 0xf9f
0x1431b:	jbe	0x14468


0x14468:	add	rax, 0x24
0x1446c:	mov	qword ptr [rbp - 0x420], 0
0x14477:	and	rax, 0xfffffffffffffff0
0x1447b:	sub	rsp, rax
0x1447e:	lea	rax, [rsp + 0xf]
0x14483:	and	rax, 0xfffffffffffffff0
0x14487:	mov	qword ptr [rbp - 0x3d8], rax
0x1448e:	jmp	0x14355


0x14321:	cmp	rdi, -1
0x14325:	mov	qword ptr [rbp - 0x3c8], r8
0x1432c:	je	0x14d28


0x14355:	xor	r12d, r12d
0x14358:	cmp	qword ptr [rbp - 0x3e8], 0
0x14360:	je	0x1436c


0x14332:	call	0x2df0


0x1436c:	mov	r13, qword ptr [rbp - 0x2b8]
0x14373:	lea	rax, [rbp - 0x3bc]
0x1437a:	mov	r15, qword ptr [rbp - 0x3e8]
0x14381:	mov	qword ptr [rbp - 0x400], 0
0x1438c:	mov	qword ptr [rbp - 0x3f0], rax
0x14393:	mov	rax, rbx
0x14396:	mov	rbx, r8
0x14399:	mov	rcx, qword ptr [r13]
0x1439d:	mov	r8, rax
0x143a0:	cmp	rcx, r8
0x143a3:	je	0x14d11


0x14362:	mov	rax, qword ptr [rbp - 0x418]
0x14369:	mov	r12, qword ptr [rax]
0x1436c:	mov	r13, qword ptr [rbp - 0x2b8]
0x14373:	lea	rax, [rbp - 0x3bc]
0x1437a:	mov	r15, qword ptr [rbp - 0x3e8]
0x14381:	mov	qword ptr [rbp - 0x400], 0
0x1438c:	mov	qword ptr [rbp - 0x3f0], rax
0x14393:	mov	rax, rbx
0x14396:	mov	rbx, r8
0x14399:	mov	rcx, qword ptr [r13]
0x1439d:	mov	r8, rax
0x143a0:	cmp	rcx, r8
0x143a3:	je	0x14d11


0x14d11:	mov	r14, rbx
0x14d14:	jmp	0x14513


0x143a9:	sub	rcx, r8
0x143ac:	mov	rax, rbx
0x143af:	add	rax, rcx
0x143b2:	mov	r14, rax
0x143b5:	jae	0x14498


0x14513:	mov	rax, qword ptr [rbp - 0x400]
0x1451a:	cmp	qword ptr [rbp - 0x2c0], rax
0x14521:	je	0x151db


0x143bb:	cmp	r12, -1
0x143bf:	je	0x14e90


0x14498:	cmp	r12, rax
0x1449b:	jae	0x14504


0x151db:	mov	rbx, r14
0x151de:	xor	eax, eax
0x151e0:	add	rbx, 1
0x151e4:	jb	0x152f0


0x14527:	movzx	edx, byte ptr [r13 + 0x48]
0x1452c:	mov	rax, qword ptr [r13 + 0x50]
0x14530:	cmp	dl, 0x25
0x14533:	je	0x14cc8


0x14e90:	mov	r14, r12
0x14e93:	jmp	0x14504


0x143c5:	call	0x2950


0x1449d:	test	r12, r12
0x144a0:	jne	0x14dd0


0x14504:	lea	rdi, [r15 + rbx]
0x14508:	mov	rdx, rcx
0x1450b:	mov	rsi, r8
0x1450e:	call	0x2d80


0x152f0:	cmp	r12, -1
0x152f4:	mov	eax, 1
0x152f9:	je	0x1523c


0x151ea:	cmp	r12, rbx
0x151ed:	jae	0x1523c


0x14cc8:	cmp	rax, -1
0x14ccc:	jne	0x15186


0x14539:	cmp	rax, -1
0x1453d:	je	0x15186


0x144a6:	cmp	rax, 0xc
0x144aa:	ja	0x14de2


0x14dd0:	js	0x143c5


0x1523c:	cmp	r15, qword ptr [rbp - 0x3e8]
0x15243:	mov	byte ptr [r15 + r14], 0
0x15248:	je	0x15261


0x152ff:	test	r12, r12
0x15302:	je	0x143c5


0x151ef:	test	r12, r12
0x151f2:	jne	0x15329


0x14cd2:	mov	rax, r14
0x14cd5:	add	rax, 1
0x14cd9:	mov	rbx, rax
0x14cdc:	jae	0x14d68


0x15186:	call	0x2940


0x14543:	mov	r8, qword ptr [rbp - 0x3a8]
0x1454a:	shl	rax, 5
0x1454e:	add	rax, r8
0x14551:	cmp	dl, 0x6e
0x14554:	mov	edi, dword ptr [rax]
0x14556:	mov	dword ptr [rbp - 0x3d0], edi
0x1455c:	je	0x14d40


0x144b0:	mov	r12d, 0xc
0x144b6:	cmp	r15, qword ptr [rbp - 0x3e8]
0x144bd:	sete	dl
0x144c0:	test	r15, r15
0x144c3:	je	0x14e08


0x14de2:	cmp	rax, -1
0x14de6:	je	0x143c5


0x14dd6:	add	r12, r12
0x14dd9:	cmp	r12, rax
0x14ddc:	jae	0x144b6


0x15261:	mov	rax, qword ptr [rbp - 0x420]
0x15268:	test	rax, rax
0x1526b:	je	0x15275


0x1524a:	cmp	r12, rbx
0x1524d:	jbe	0x15261


0x15308:	js	0x143c5


0x151f8:	cmp	rbx, 0xc
0x151fc:	ja	0x1530e


0x15329:	js	0x143c5


0x14ce2:	cmp	r12, -1
0x14ce6:	jne	0x143c5


0x14d68:	cmp	r12, rax
0x14d6b:	jae	0x14cef


0x14d40:	mov	edx, edi
0x14d42:	sub	edx, 0x12
0x14d45:	cmp	edx, 4
0x14d48:	ja	0x15186


0x14562:	mov	eax, dword ptr [r13 + 0x10]
0x14566:	mov	rdi, qword ptr [rbp - 0x3d8]
0x1456d:	test	al, 1
0x1456f:	mov	byte ptr [rdi], 0x25
0x14572:	lea	rbx, [rdi + 1]
0x14576:	je	0x14587


0x14e08:	mov	rdi, r12
0x14e0b:	mov	qword ptr [rbp - 0x3e0], r8
0x14e12:	mov	byte ptr [rbp - 0x3d0], dl
0x14e18:	mov	qword ptr [rbp - 0x3c8], rcx
0x14e1f:	call	0x2df0


0x144c9:	test	dl, dl
0x144cb:	jne	0x14e08


0x14dec:	cmp	r15, qword ptr [rbp - 0x3e8]
0x14df3:	mov	r12, rax
0x14df6:	sete	dl
0x14df9:	test	r15, r15
0x14dfc:	jne	0x144c9


0x144b6:	cmp	r15, qword ptr [rbp - 0x3e8]
0x144bd:	sete	dl
0x144c0:	test	r15, r15
0x144c3:	je	0x14e08


0x15275:	mov	rax, qword ptr [rbp - 0x408]
0x1527c:	mov	rdi, qword ptr [rbp - 0x2b8]
0x15283:	add	rax, 0x20
0x15287:	cmp	rdi, rax
0x1528a:	je	0x15291


0x1526d:	mov	rdi, rax
0x15270:	call	0x30d0


0x1524f:	mov	rdi, r15
0x15252:	mov	rsi, rbx
0x15255:	call	0x2e90


0x1530e:	test	rax, rax
0x15311:	jne	0x143c5


0x15202:	mov	r12d, 0xc
0x15208:	cmp	r15, qword ptr [rbp - 0x3e8]
0x1520f:	sete	r13b
0x15213:	test	r15, r15
0x15216:	je	0x152bc


0x1532f:	add	r12, r12
0x15332:	cmp	r12, rbx
0x15335:	jae	0x15208


0x14cec:	mov	rbx, r12
0x14cef:	mov	byte ptr [r15 + r14], 0x25
0x14cf4:	mov	r8, qword ptr [r13 + 8]
0x14cf8:	add	r13, 0x58
0x14cfc:	mov	rcx, qword ptr [r13]
0x14d00:	add	qword ptr [rbp - 0x400], 1
0x14d08:	cmp	rcx, r8
0x14d0b:	jne	0x143a9


0x14d6d:	test	r12, r12
0x14d70:	jne	0x15140


0x14cef:	mov	byte ptr [r15 + r14], 0x25
0x14cf4:	mov	r8, qword ptr [r13 + 8]
0x14cf8:	add	r13, 0x58
0x14cfc:	mov	rcx, qword ptr [r13]
0x14d00:	add	qword ptr [rbp - 0x400], 1
0x14d08:	cmp	rcx, r8
0x14d0b:	jne	0x143a9


0x14d4e:	lea	rdi, [rip + 0x4193]
0x14d55:	mov	rax, qword ptr [rax + 0x10]
0x14d59:	movsxd	rdx, dword ptr [rdi + rdx*4]
0x14d5d:	add	rdx, rdi
0x14d60:	jmp	rdx


0x14587:	test	al, 2
0x14589:	je	0x14592


0x14578:	mov	rdi, qword ptr [rbp - 0x3d8]
0x1457f:	lea	rbx, [rdi + 2]
0x14583:	mov	byte ptr [rdi + 1], 0x27
0x14587:	test	al, 2
0x14589:	je	0x14592


0x144d1:	mov	rsi, r12
0x144d4:	mov	rdi, r15
0x144d7:	mov	qword ptr [rbp - 0x3d0], r8
0x144de:	mov	qword ptr [rbp - 0x3c8], rcx
0x144e5:	call	0x2e90


0x15291:	mov	rax, qword ptr [rbp - 0x410]
0x15298:	mov	rdi, qword ptr [rbp - 0x3a8]
0x1529f:	add	rax, 0x10
0x152a3:	cmp	rdi, rax
0x152a6:	je	0x152ad


0x1528c:	call	0x30d0


0x15317:	cmp	rbx, -1
0x1531b:	je	0x143c5


0x152bc:	mov	rdi, r12
0x152bf:	call	0x2df0


0x1521c:	test	r13b, r13b
0x1521f:	jne	0x152bc


0x1533b:	jmp	0x1530e


0x15208:	cmp	r15, qword ptr [rbp - 0x3e8]
0x1520f:	sete	r13b
0x15213:	test	r15, r15
0x15216:	je	0x152bc


0x14d76:	cmp	rax, 0xc
0x14d7a:	ja	0x15152


0x15140:	js	0x143c5


0x14592:	test	al, 4
0x14594:	je	0x1459d


0x1458b:	mov	byte ptr [rbx], 0x2d
0x1458e:	add	rbx, 1
0x14592:	test	al, 4
0x14594:	je	0x1459d


0x152ad:	mov	rax, qword ptr [rbp - 0x418]
0x152b4:	mov	qword ptr [rax], r14
0x152b7:	jmp	0x1443f


0x152a8:	call	0x30d0


0x15321:	mov	r12, rbx
0x15324:	jmp	0x15208


0x15225:	mov	rsi, r12
0x15228:	mov	rdi, r15
0x1522b:	call	0x2e90


0x14d80:	mov	r12d, 0xc
0x14d86:	cmp	r15, qword ptr [rbp - 0x3e8]
0x14d8d:	sete	dl
0x14d90:	test	r15, r15
0x14d93:	je	0x15000


0x15152:	cmp	rax, -1
0x15156:	je	0x143c5


0x15146:	add	r12, r12
0x15149:	cmp	r12, rax
0x1514c:	jae	0x14d86


0x1459d:	test	al, 8
0x1459f:	je	0x145a8


0x14596:	mov	byte ptr [rbx], 0x2b
0x14599:	add	rbx, 1
0x1459d:	test	al, 8
0x1459f:	je	0x145a8


0x15000:	mov	rdi, r12
0x15003:	mov	byte ptr [rbp - 0x3c8], dl
0x15009:	call	0x2df0


0x14d99:	test	dl, dl
0x14d9b:	jne	0x15000


0x1515c:	mov	r12, rax
0x1515f:	jmp	0x14d86


0x14d86:	cmp	r15, qword ptr [rbp - 0x3e8]
0x14d8d:	sete	dl
0x14d90:	test	r15, r15
0x14d93:	je	0x15000


0x145a8:	test	al, 0x10
0x145aa:	je	0x145b3


0x145a1:	mov	byte ptr [rbx], 0x20
0x145a4:	add	rbx, 1
0x145a8:	test	al, 0x10
0x145aa:	je	0x145b3


0x14da1:	mov	rsi, r12
0x14da4:	mov	rdi, r15
0x14da7:	call	0x2e90


0x145b3:	test	al, 0x40
0x145b5:	je	0x145be


0x145ac:	mov	byte ptr [rbx], 0x23
0x145af:	add	rbx, 1
0x145b3:	test	al, 0x40
0x145b5:	je	0x145be


0x145be:	test	al, 0x20
0x145c0:	je	0x145c9


0x145b7:	mov	byte ptr [rbx], 0x49
0x145ba:	add	rbx, 1
0x145be:	test	al, 0x20
0x145c0:	je	0x145c9


0x145c9:	mov	rsi, qword ptr [r13 + 0x18]
0x145cd:	mov	rdx, qword ptr [r13 + 0x20]
0x145d1:	cmp	rsi, rdx
0x145d4:	je	0x14606


0x145c2:	mov	byte ptr [rbx], 0x30
0x145c5:	add	rbx, 1
0x145c9:	mov	rsi, qword ptr [r13 + 0x18]
0x145cd:	mov	rdx, qword ptr [r13 + 0x20]
0x145d1:	cmp	rsi, rdx
0x145d4:	je	0x14606


0x14606:	mov	rsi, qword ptr [r13 + 0x30]
0x1460a:	mov	rdx, qword ptr [r13 + 0x38]
0x1460e:	cmp	rsi, rdx
0x14611:	je	0x14643


0x145d6:	mov	rcx, rdx
0x145d9:	mov	rdi, rbx
0x145dc:	mov	qword ptr [rbp - 0x3e0], r8
0x145e3:	sub	rcx, rsi
0x145e6:	mov	rdx, rcx
0x145e9:	mov	qword ptr [rbp - 0x3c8], rcx
0x145f0:	call	0x2d80


0x14643:	mov	edi, dword ptr [rbp - 0x3d0]
0x14649:	cmp	edi, 0x10
0x1464c:	ja	0x1467b


0x14613:	mov	rcx, rdx
0x14616:	mov	rdi, rbx
0x14619:	mov	qword ptr [rbp - 0x3e0], r8
0x14620:	sub	rcx, rsi
0x14623:	mov	rdx, rcx
0x14626:	mov	qword ptr [rbp - 0x3c8], rcx
0x1462d:	call	0x2d80


0x1464e:	mov	eax, 1
0x14653:	mov	ecx, edi
0x14655:	shl	rax, cl
0x14658:	test	eax, 0x14180
0x1465d:	jne	0x14674


0x1467b:	movzx	eax, byte ptr [r13 + 0x48]
0x14680:	mov	byte ptr [rbx + 1], 0
0x14684:	mov	byte ptr [rbx], al
0x14686:	mov	rax, qword ptr [r13 + 0x28]
0x1468a:	cmp	rax, -1
0x1468e:	je	0x14dc0


0x1465f:	test	ah, 0x10
0x14662:	jne	0x14fc0


0x14674:	mov	byte ptr [rbx], 0x6c
0x14677:	add	rbx, 1
0x1467b:	movzx	eax, byte ptr [r13 + 0x48]
0x14680:	mov	byte ptr [rbx + 1], 0
0x14684:	mov	byte ptr [rbx], al
0x14686:	mov	rax, qword ptr [r13 + 0x28]
0x1468a:	cmp	rax, -1
0x1468e:	je	0x14dc0


0x14dc0:	mov	dword ptr [rbp - 0x3e0], 0
0x14dca:	jmp	0x146b7


0x14694:	shl	rax, 5
0x14698:	add	rax, r8
0x1469b:	cmp	dword ptr [rax], 5
0x1469e:	jne	0x15186


0x14668:	test	ah, 6
0x1466b:	je	0x1467b


0x14fc0:	mov	byte ptr [rbx], 0x4c
0x14fc3:	add	rbx, 1
0x14fc7:	jmp	0x1467b


0x146b7:	mov	rax, qword ptr [r13 + 0x40]
0x146bb:	cmp	rax, -1
0x146bf:	je	0x146ec


0x146a4:	mov	eax, dword ptr [rax + 0x10]
0x146a7:	mov	dword ptr [rbp - 0x3e0], 1
0x146b1:	mov	dword ptr [rbp - 0x3b8], eax
0x146b7:	mov	rax, qword ptr [r13 + 0x40]
0x146bb:	cmp	rax, -1
0x146bf:	je	0x146ec


0x1466d:	mov	byte ptr [rbx], 0x6c
0x14670:	add	rbx, 1
0x14674:	mov	byte ptr [rbx], 0x6c
0x14677:	add	rbx, 1
0x1467b:	movzx	eax, byte ptr [r13 + 0x48]
0x14680:	mov	byte ptr [rbx + 1], 0
0x14684:	mov	byte ptr [rbx], al
0x14686:	mov	rax, qword ptr [r13 + 0x28]
0x1468a:	cmp	rax, -1
0x1468e:	je	0x14dc0


0x146ec:	mov	rax, r14
0x146ef:	xor	edx, edx
0x146f1:	add	rax, 2
0x146f5:	jb	0x1535c


0x146c1:	shl	rax, 5
0x146c5:	add	r8, rax
0x146c8:	cmp	dword ptr [r8], 5
0x146cc:	jne	0x15186


0x1535c:	cmp	r12, -1
0x15360:	mov	edx, 1
0x15365:	je	0x1474b


0x146fb:	cmp	r12, rax
0x146fe:	jae	0x1474b


0x146d2:	mov	eax, dword ptr [rbp - 0x3e0]
0x146d8:	mov	edx, dword ptr [r8 + 0x10]
0x146dc:	mov	dword ptr [rbp + rax*4 - 0x3b8], edx
0x146e3:	lea	eax, [rax + 1]
0x146e6:	mov	dword ptr [rbp - 0x3e0], eax
0x146ec:	mov	rax, r14
0x146ef:	xor	edx, edx
0x146f1:	add	rax, 2
0x146f5:	jb	0x1535c


0x1474b:	mov	byte ptr [r15 + r14], 0
0x14750:	call	0x2950


0x1536b:	test	r12, r12
0x1536e:	je	0x143c5


0x14700:	test	r12, r12
0x14703:	jne	0x14f28


0x15374:	jns	0x14f40


0x14709:	cmp	rax, 0xc
0x1470d:	ja	0x14f40


0x14f28:	js	0x143c5


0x1537a:	jmp	0x143c5


0x14f40:	test	rdx, rdx
0x14f43:	jne	0x143c5


0x14713:	mov	r12d, 0xc
0x14719:	cmp	r15, qword ptr [rbp - 0x3e8]
0x14720:	sete	dl
0x14723:	test	r15, r15
0x14726:	je	0x14f70


0x14f2e:	add	r12, r12
0x14f31:	cmp	r12, rax
0x14f34:	jae	0x14719


0x14f49:	cmp	rax, -1
0x14f4d:	je	0x143c5


0x14f70:	mov	rdi, r12
0x14f73:	mov	byte ptr [rbp - 0x3c8], dl
0x14f79:	call	0x2df0


0x1472c:	test	dl, dl
0x1472e:	jne	0x14f70


0x14719:	cmp	r15, qword ptr [rbp - 0x3e8]
0x14720:	sete	dl
0x14723:	test	r15, r15
0x14726:	je	0x14f70


0x14f53:	cmp	r15, qword ptr [rbp - 0x3e8]
0x14f5a:	mov	r12, rax
0x14f5d:	sete	dl
0x14f60:	test	r15, r15
0x14f63:	jne	0x1472c


0x14734:	mov	rsi, r12
0x14737:	mov	rdi, r15
0x1473a:	call	0x2e90


0x12907:	test	rax, rax
0x1290a:	mov	rbx, qword ptr [rsp + 8]
0x1290f:	je	0x1299e


0x1299e:	mov	rdi, r13
0x129a1:	mov	ebx, 0xffffffff
0x129a6:	call	0x14250


0x12915:	mov	rcx, r13
0x12918:	mov	rdx, rbx
0x1291b:	mov	esi, 1
0x12920:	mov	rdi, rax
0x12923:	mov	rbp, rax
0x12926:	call	0x3040


0x129ab:	jmp	0x12946


0x12946:	mov	rcx, qword ptr [rsp + 0x7e8]
0x1294e:	xor	rcx, qword ptr fs:[0x28]
0x12957:	mov	eax, ebx
0x12959:	jne	0x129ad


0x1295b:	add	rsp, 0x7f8
0x12962:	pop	rbx
0x12963:	pop	rbp
0x12964:	pop	r12
0x12966:	pop	r13
0x12968:	ret	


0x129ad:	call	0x2b30


0x16341:	test	rbp, rbp
0x16344:	je	0x16366


0x16366:	add	rsp, 8
0x1636a:	pop	rbx
0x1636b:	pop	rbp
0x1636c:	pop	r12
0x1636e:	pop	r13
0x16370:	pop	r14
0x16372:	pop	r15
0x16374:	ret	


0x16346:	xor	ebx, ebx
0x16348:	nop	dword ptr [rax + rax]
0x16350:	mov	rdx, r15
0x16353:	mov	rsi, r14
0x16356:	mov	edi, r13d
0x16359:	call	qword ptr [r12 + rbx*8]


0xa42f:	movabs	rcx, 0x5858585858587543
0xa439:	mov	byte ptr [rax + 8], 0
0xa43d:	mov	qword ptr [rax], rcx
0xa440:	mov	rax, r12
0xa443:	pop	rbx
0xa444:	pop	rbp
0xa445:	pop	r12
0xa447:	ret	


0x4ecd:	test	eax, eax
0x4ecf:	sete	al
0x4ed2:	pop	rbx
0x4ed3:	ret	


0x4419:	test	eax, eax
0x441b:	jne	0x46a0


0x4421:	cmp	byte ptr [rip + 0x218bf8], 0
0x4428:	je	0x42e8


0x46a0:	mov	rsi, rbp
0x46a3:	mov	edi, 4
0x46a8:	call	0xf3f0


0x42e8:	mov	rcx, qword ptr [rsp + 0x1d8]
0x42f0:	xor	rcx, qword ptr fs:[0x28]
0x42f9:	mov	eax, ebx
0x42fb:	jne	0x4848


0x442e:	cmp	dword ptr [rip + 0x21ad2b], 1
0x4435:	jne	0x42e8


0x443b:	lea	rdx, [rsp + 0x140]
0x4443:	mov	rsi, rbp
0x4446:	mov	edi, 1
0x444b:	call	0x2b00


0x63c2:	test	eax, eax
0x63c4:	je	0x6466


0x63ca:	mov	rsi, qword ptr [rbp - 0x308]
0x63d1:	mov	edi, 4
0x63d6:	call	0xf3f0


0x4395:	test	eax, eax
0x4397:	je	0x43e0


0x4399:	mov	rsi, rbp
0x439c:	mov	edi, 4
0x43a1:	call	0xf3f0


0x8245:	test	eax, eax
0x8247:	je	0x6305


0x824d:	jmp	0x62aa


0x62aa:	mov	rsi, qword ptr [rbp - 0x308]
0x62b1:	mov	edi, 4
0x62b6:	call	0xf3f0


0x8204:	test	eax, eax
0x8206:	mov	byte ptr [rbp - 0x320], 0
0x820d:	movzx	r8d, byte ptr [rbp - 0x328]
0x8215:	je	0x619f


0x821b:	mov	rsi, qword ptr [rbp - 0x308]
0x8222:	mov	edi, 4
0x8227:	call	0xf3f0


0x85cd:	test	eax, eax
0x85cf:	movzx	r8d, byte ptr [rbp - 0x320]
0x85d7:	je	0x619f


0x85dd:	mov	rdi, qword ptr [rbp - 0x308]
0x85e4:	mov	esi, r12d
0x85e7:	and	esi, 0xffffefff
0x85ed:	call	0x2d60


0x2d60:	jmp	qword ptr [rip + 0x21a0b2]




0x800f:	test	eax, eax
0x8011:	movzx	r9d, byte ptr [rbp - 0x350]
0x8019:	je	0x8393


0x8393:	movzx	r14d, byte ptr [rbx + 0x2e]
0x8398:	test	r14b, r14b
0x839b:	jne	0x896c


0x801f:	call	0x2950


0x83a1:	test	r13b, r13b
0x83a4:	jne	0x8948


0x896c:	mov	rsi, qword ptr [rbp - 0x308]
0x8973:	mov	edi, 4
0x8978:	mov	byte ptr [rbp - 0x358], r9b
0x897f:	mov	r15d, 0x11
0x8985:	call	0xf3f0


0x83aa:	mov	qword ptr [rbp - 0x350], 0
0x83b5:	mov	r14d, 1
0x83bb:	mov	r15d, 0x11
0x83c1:	jmp	0x6089


0x8948:	cmp	qword ptr [rbx + 0x40], 0
0x894d:	mov	r14d, r13d
0x8950:	mov	qword ptr [rbp - 0x350], 0
0x895b:	mov	r15d, 0x11
0x8961:	jne	0x5fc2


0x8967:	jmp	0x6089


0x65e6:	test	eax, eax
0x65e8:	je	0x65fb


0x65fb:	cmp	r12d, 0x4000
0x6602:	setne	dl
0x6605:	and	dl, byte ptr [rbx + 0x2e]
0x6608:	mov	r14d, edx
0x660b:	jne	0x7f50


0x65ea:	call	0x2950


0x6611:	mov	dword ptr [rbp - 0x320], 1
0x661b:	mov	r14d, 1
0x6621:	jmp	0x60d0


0x7f50:	lea	rsi, [rip + 0xfec2]
0x7f57:	mov	edx, 5
0x7f5c:	xor	edi, edi
0x7f5e:	call	0x2ad0


0x7645:	test	eax, eax
0x7647:	je	0x6611


0x764d:	call	0x2950


0x6be7:	test	eax, eax
0x6be9:	jne	0x7480


0x6bef:	cmp	byte ptr [rbx + 0x2e], 0
0x6bf3:	je	0x5f30


0x7480:	mov	rsi, qword ptr [rbp - 0x308]
0x7487:	mov	edi, 4
0x748c:	call	0xf3f0


0x6bf9:	mov	rdx, qword ptr [rbp - 0x308]
0x6c00:	mov	esi, 4
0x6c05:	mov	edi, 1
0x6c0a:	call	0xf2d0


0x6592:	test	eax, eax
0x6594:	je	0x642a


0x659a:	call	0x2950


0x5eb0:	test	eax, eax
0x5eb2:	movzx	r8d, byte ptr [rbp - 0x350]
0x5eba:	movzx	r9d, byte ptr [rbp - 0x358]
0x5ec2:	js	0x6e10


0x6e10:	cmp	byte ptr [rbx + 0x18], 0
0x6e14:	je	0x685c


0x5ec8:	mov	rax, qword ptr [rbp - 0x320]
0x5ecf:	test	rax, rax
0x5ed2:	je	0x5ed7


0x5ed7:	mov	rdx, qword ptr [rbp - 0x280]
0x5ede:	mov	rsi, qword ptr [rbp - 0x278]
0x5ee5:	mov	rdi, qword ptr [rbp - 0x308]
0x5eec:	call	0x9fc0


0x5ed4:	mov	byte ptr [rax], 1
0x5ed7:	mov	rdx, qword ptr [rbp - 0x280]
0x5ede:	mov	rsi, qword ptr [rbp - 0x278]
0x5ee5:	mov	rdi, qword ptr [rbp - 0x308]
0x5eec:	call	0x9fc0


0x5e08:	test	eax, eax
0x5e0a:	movzx	r9d, byte ptr [rbp - 0x350]
0x5e12:	jne	0x6490


0x5e18:	xor	r8d, r8d
0x5e1b:	cmp	dword ptr [rbx + 8], 2
0x5e1f:	je	0x5e3f


0x6490:	call	0x2950


0x5e21:	mov	rax, qword ptr [rbp - 0x1e8]
0x5e28:	cmp	qword ptr [rbp - 0x278], rax
0x5e2f:	je	0x6ff8


0x6ff8:	mov	rax, qword ptr [rbp - 0x1f0]
0x6fff:	cmp	qword ptr [rbp - 0x280], rax
0x7006:	jne	0x5e35


0x5e35:	cmp	dword ptr [rbx + 4], 2
0x5e39:	je	0x71b0


0x700c:	movzx	eax, byte ptr [rbx + 0x17]
0x7010:	test	al, al
0x7012:	jne	0x73a8


0x71b0:	xor	ecx, ecx
0x71b2:	xor	r15d, r15d
0x71b5:	mov	eax, dword ptr [rbp - 0x268]
0x71bb:	lea	rdx, [rbp - 0x280]
0x71c2:	and	eax, 0xf000
0x71c7:	cmp	eax, 0xa000
0x71cc:	je	0x7e73


0x7018:	cmp	dword ptr [rbx + 4], 2
0x701c:	mov	ecx, 1
0x7021:	mov	r15d, 1
0x7027:	je	0x71b5


0x73a8:	mov	r14d, eax
0x73ab:	jmp	0x5e3f


0x7e73:	mov	eax, dword ptr [rbp - 0x1d8]
0x7e79:	lea	rdx, [rbp - 0x280]
0x7e80:	and	eax, 0xf000
0x7e85:	cmp	eax, 0xa000
0x7e8a:	jne	0x71d2


0x71d2:	mov	esi, dword ptr [rbx]
0x71d4:	test	esi, esi
0x71d6:	je	0x76b8


0x71b5:	mov	eax, dword ptr [rbp - 0x268]
0x71bb:	lea	rdx, [rbp - 0x280]
0x71c2:	and	eax, 0xf000
0x71c7:	cmp	eax, 0xa000
0x71cc:	je	0x7e73


0x702d:	lea	r12, [rbp - 0x160]
0x7034:	mov	rsi, qword ptr [rbp - 0x308]
0x703b:	mov	edi, 1
0x7040:	mov	byte ptr [rbp - 0x358], r9b
0x7047:	mov	byte ptr [rbp - 0x350], r8b
0x704e:	mov	rdx, r12
0x7051:	call	0x2b00


0x7e90:	mov	rsi, qword ptr [rbp - 0x308]
0x7e97:	mov	rdi, qword ptr [rbp - 0x310]
0x7e9e:	mov	byte ptr [rbp - 0x358], r9b
0x7ea5:	mov	byte ptr [rbp - 0x350], r8b
0x7eac:	call	0xfbe0


0x76b8:	movzx	esi, byte ptr [rbx + 0x18]
0x76bc:	test	sil, sil
0x76bf:	jne	0x7290


0x71dc:	test	cl, cl
0x71de:	jne	0x8272


0x76c5:	cmp	byte ptr [rbx + 0x15], 0
0x76c9:	jne	0x7290


0x7290:	mov	eax, dword ptr [r12 + 0x18]
0x7295:	and	eax, 0xf000
0x729a:	cmp	eax, 0xa000
0x729f:	je	0x5e3f


0x71e4:	cmp	byte ptr [rbx + 0x18], 0
0x71e8:	jne	0x706e


0x8272:	mov	rsi, qword ptr [rbp - 0x308]
0x8279:	mov	rdi, qword ptr [rbp - 0x310]
0x8280:	mov	byte ptr [rbp - 0x358], r9b
0x8287:	mov	byte ptr [rbp - 0x350], r8b
0x828e:	call	0xfbe0


0x76cf:	mov	eax, dword ptr [rdx + 0x18]
0x76d2:	and	eax, 0xf000
0x76d7:	cmp	eax, 0xa000
0x76dc:	jne	0x86c5


0x72a5:	test	cl, cl
0x72a7:	je	0x72b5


0x71ee:	cmp	dword ptr [rbx + 4], 2
0x71f2:	je	0x706e


0x706e:	xor	r14d, r14d
0x7071:	jmp	0x5e3f


0x76e2:	cmp	byte ptr [rbx + 0x2c], 0
0x76e6:	je	0x76fd


0x86c5:	mov	eax, dword ptr [r12 + 0x18]
0x86ca:	and	eax, 0xf000
0x86cf:	cmp	eax, 0xa000
0x86d4:	je	0x72ec


0x72b5:	mov	eax, dword ptr [rdx + 0x18]
0x72b8:	and	eax, 0xf000
0x72bd:	cmp	eax, 0xa000
0x72c2:	je	0x72f0


0x72a9:	cmp	qword ptr [r12 + 0x10], 1
0x72af:	ja	0x866b


0x71f8:	mov	eax, dword ptr [rdx + 0x18]
0x71fb:	and	eax, 0xf000
0x7200:	cmp	eax, 0xa000
0x7205:	jne	0x706e


0x76fd:	cmp	dword ptr [rbx + 4], 2
0x7701:	jne	0x7220


0x76e8:	mov	eax, dword ptr [r12 + 0x18]
0x76ed:	and	eax, 0xf000
0x76f2:	cmp	eax, 0xa000
0x76f7:	je	0x5e3f


0x72ec:	movzx	esi, byte ptr [rbx + 0x18]
0x72f0:	test	sil, sil
0x72f3:	je	0x76e2


0x86da:	jmp	0x72c4


0x72f0:	test	sil, sil
0x72f3:	je	0x76e2


0x72c4:	mov	rax, qword ptr [r12 + 8]
0x72c9:	cmp	qword ptr [rdx + 8], rax
0x72cd:	jne	0x5e3f


0x866b:	mov	rsi, qword ptr [rbp - 0x308]
0x8672:	mov	rdi, qword ptr [rbp - 0x310]
0x8679:	mov	byte ptr [rbp - 0x35c], r9b
0x8680:	mov	byte ptr [rbp - 0x358], r8b
0x8687:	mov	qword ptr [rbp - 0x350], rdx
0x868e:	call	0xfbe0


0x720b:	mov	eax, dword ptr [r12 + 0x18]
0x7210:	and	eax, 0xf000
0x7215:	cmp	eax, 0xa000
0x721a:	je	0x706e


0x7707:	mov	eax, dword ptr [rdx + 0x18]
0x770a:	and	eax, 0xf000
0x770f:	cmp	eax, 0xa000
0x7714:	je	0x918c


0x7220:	mov	rdx, qword ptr [rbp - 0x308]
0x7227:	mov	esi, 4
0x722c:	mov	edi, 1
0x7231:	call	0xf2d0


0x72f9:	mov	eax, dword ptr [rbp - 0x268]
0x72ff:	and	eax, 0xf000
0x7304:	cmp	eax, 0xa000
0x7309:	jne	0x76e2


0x72d3:	mov	rax, qword ptr [r12]
0x72d7:	cmp	qword ptr [rdx], rax
0x72da:	jne	0x5e3f


0x918c:	mov	rsi, qword ptr [rbp - 0x310]
0x9193:	lea	rdx, [rbp - 0xd0]
0x919a:	mov	edi, 1
0x919f:	mov	byte ptr [rbp - 0x358], r9b
0x91a6:	mov	byte ptr [rbp - 0x350], r8b
0x91ad:	call	0x2dd0


0x771a:	movdqa	xmm0, xmmword ptr [rdx]
0x771e:	movaps	xmmword ptr [rbp - 0xd0], xmm0
0x7725:	movdqa	xmm0, xmmword ptr [rdx + 0x10]
0x772a:	movaps	xmmword ptr [rbp - 0xc0], xmm0
0x7731:	movdqa	xmm0, xmmword ptr [rdx + 0x20]
0x7736:	movaps	xmmword ptr [rbp - 0xb0], xmm0
0x773d:	movdqa	xmm0, xmmword ptr [rdx + 0x30]
0x7742:	movaps	xmmword ptr [rbp - 0xa0], xmm0
0x7749:	movdqa	xmm0, xmmword ptr [rdx + 0x40]
0x774e:	movaps	xmmword ptr [rbp - 0x90], xmm0
0x7755:	movdqa	xmm0, xmmword ptr [rdx + 0x50]
0x775a:	movaps	xmmword ptr [rbp - 0x80], xmm0
0x775e:	movdqa	xmm0, xmmword ptr [rdx + 0x60]
0x7763:	movaps	xmmword ptr [rbp - 0x70], xmm0
0x7767:	movdqa	xmm0, xmmword ptr [rdx + 0x70]
0x776c:	movaps	xmmword ptr [rbp - 0x60], xmm0
0x7770:	movdqa	xmm0, xmmword ptr [rdx + 0x80]
0x7778:	movaps	xmmword ptr [rbp - 0x50], xmm0
0x777c:	mov	eax, dword ptr [r12 + 0x18]
0x7781:	and	eax, 0xf000
0x7786:	cmp	eax, 0xa000
0x778b:	je	0x9149


0x730f:	cmp	qword ptr [r12 + 0x10], 1
0x7315:	jbe	0x76e2


0x72e0:	movzx	eax, byte ptr [rbx + 0x17]
0x72e4:	test	al, al
0x72e6:	jne	0x73a8


0x9149:	mov	rsi, qword ptr [rbp - 0x308]
0x9150:	lea	rdx, [rbp - 0x160]
0x9157:	mov	edi, 1
0x915c:	mov	byte ptr [rbp - 0x358], r9b
0x9163:	mov	byte ptr [rbp - 0x350], r8b
0x916a:	call	0x2dd0


0x7791:	movdqa	xmm0, xmmword ptr [r12]
0x7797:	movaps	xmmword ptr [rbp - 0x160], xmm0
0x779e:	movdqa	xmm0, xmmword ptr [r12 + 0x10]
0x77a5:	movaps	xmmword ptr [rbp - 0x150], xmm0
0x77ac:	movdqa	xmm0, xmmword ptr [r12 + 0x20]
0x77b3:	movaps	xmmword ptr [rbp - 0x140], xmm0
0x77ba:	movdqa	xmm0, xmmword ptr [r12 + 0x30]
0x77c1:	movaps	xmmword ptr [rbp - 0x130], xmm0
0x77c8:	movdqa	xmm0, xmmword ptr [r12 + 0x40]
0x77cf:	movaps	xmmword ptr [rbp - 0x120], xmm0
0x77d6:	movdqa	xmm0, xmmword ptr [r12 + 0x50]
0x77dd:	movaps	xmmword ptr [rbp - 0x110], xmm0
0x77e4:	movdqa	xmm0, xmmword ptr [r12 + 0x60]
0x77eb:	movaps	xmmword ptr [rbp - 0x100], xmm0
0x77f2:	movdqa	xmm0, xmmword ptr [r12 + 0x70]
0x77f9:	movaps	xmmword ptr [rbp - 0xf0], xmm0
0x7800:	movdqa	xmm0, xmmword ptr [r12 + 0x80]
0x780a:	movaps	xmmword ptr [rbp - 0xe0], xmm0
0x7811:	mov	rax, qword ptr [rbp - 0x158]
0x7818:	cmp	qword ptr [rbp - 0xc8], rax
0x781f:	jne	0x5e3f


0x731b:	mov	rdi, qword ptr [rbp - 0x310]
0x7322:	mov	byte ptr [rbp - 0x35c], r9b
0x7329:	mov	byte ptr [rbp - 0x358], r8b
0x7330:	mov	qword ptr [rbp - 0x350], rdx
0x7337:	call	0x2c20


0x7825:	mov	rax, qword ptr [rbp - 0x160]
0x782c:	cmp	qword ptr [rbp - 0xd0], rax
0x7833:	jne	0x5e3f


0x2c20:	jmp	qword ptr [rip + 0x21a152]


0x7839:	cmp	byte ptr [rbx + 0x17], 0
0x783d:	je	0x7220




0x7843:	mov	eax, dword ptr [r12 + 0x18]
0x7848:	and	eax, 0xf000
0x784d:	cmp	eax, 0xa000
0x7852:	setne	r14b
0x7856:	jmp	0x5e3f


0x1141e:	test	eax, eax
0x11420:	mov	ebp, eax
0x11422:	jne	0x11620


0x11428:	test	r13, r13
0x1142b:	je	0x115f7


0x11620:	test	r12, r12
0x11623:	mov	ebp, 0xffffffff
0x11628:	je	0x115f7


0x11431:	cmp	qword ptr [r13 + 8], 0x7a11f
0x11439:	setg	r12b
0x1143d:	cmp	qword ptr [r13 + 0x18], 0x7a11f
0x11445:	setg	r14b
0x11449:	test	r12b, r12b
0x1144c:	jne	0x11457


0x1162a:	mov	rsi, r13
0x1162d:	mov	rdi, r12
0x11630:	call	0x2cc0


0x1144e:	test	r14b, r14b
0x11451:	je	0x115f7


0x11457:	lea	rdx, [rsp + 0x70]
0x1145c:	mov	esi, ebx
0x1145e:	mov	edi, 1
0x11463:	call	0x2e20


0x2cc0:	jmp	qword ptr [rip + 0x21a102]




0x115f5:	mov	ebp, eax
0x115f7:	mov	rcx, qword ptr [rsp + 0x108]
0x115ff:	xor	rcx, qword ptr fs:[0x28]
0x11608:	mov	eax, ebp
0x1160a:	jne	0x11726


0x46c5:	cmp	eax, -1
0x46c8:	je	0x4720


0x4720:	lea	rsi, [rip + 0x11cdd]
0x4727:	mov	edx, 5
0x472c:	xor	edi, edi
0x472e:	call	0x2ad0


0x46ca:	test	eax, eax
0x46cc:	je	0x484d


0x484d:	mov	rbx, qword ptr [rip + 0x2187d4]
0x4854:	xor	ecx, ecx
0x4856:	mov	rdx, rbp
0x4859:	xor	eax, eax
0x485b:	mov	rsi, rbx
0x485e:	mov	rdi, rbx
0x4861:	call	0x3080


0x46d2:	lea	rsi, [rsp + 0x1c]
0x46d7:	xor	edx, edx
0x46d9:	mov	edi, eax
0x46db:	call	0x2f40


0x3080:	jmp	qword ptr [rip + 0x219f22]


0x2f40:	jmp	qword ptr [rip + 0x219fc2]






0x1025e:	cmp	eax, 0
0x10261:	mov	dword ptr [r12 + 4], eax
0x10266:	je	0x10124


0x1026c:	mov	eax, 1
0x10271:	mov	r14d, 0xfffffffe
0x10277:	jg	0x10098


0x1027d:	mov	dword ptr [r12], 4
0x10285:	call	0x2950


0x10098:	test	ebx, ebx
0x1009a:	js	0x100b6


0x100b6:	pop	rbx
0x100b7:	mov	eax, r14d
0x100ba:	pop	rbp
0x100bb:	pop	r12
0x100bd:	pop	r13
0x100bf:	pop	r14
0x100c1:	ret	


0x1009c:	test	al, al
0x1009e:	je	0x100b6


0x100a0:	call	0x2950


0xce0e:	cmp	eax, -1
0xce11:	mov	ebp, eax
0xce13:	je	0xce88


0xce88:	test	r15d, r15d
0xce8b:	je	0xcea0


0xce15:	test	eax, eax
0xce17:	mov	byte ptr [r12], 0x2f
0xce1c:	jne	0xce88


0xcea0:	movsxd	rax, ebp
0xcea3:	jmp	0xce3e


0xce8d:	call	0x2950


0xce3e:	add	rsp, 0x28
0xce42:	pop	rbx
0xce43:	pop	rbp
0xce44:	pop	r12
0xce46:	pop	r13
0xce48:	pop	r14
0xce4a:	pop	r15
0xce4c:	ret	


0x11372:	cmp	eax, 0
0x11375:	mov	ebp, eax
0x11377:	jle	0x116ad


0x116ad:	jne	0x1172b


0x1137d:	call	0x2950


0x116af:	mov	dword ptr [rip + 0x20e073], 1
0x116b9:	jmp	0x115f7


0x1172b:	call	0x2950


0x1012f:	test	eax, eax
0x10131:	mov	r14d, eax
0x10134:	jne	0x101b0


0x10136:	cmp	dword ptr [r12], 5
0x1013b:	ja	0x102ab


0x101b0:	test	rbp, rbp
0x101b3:	sete	al
0x101b6:	jmp	0x10098


0x10141:	mov	eax, dword ptr [r12]
0x10145:	lea	rdx, [rip + 0x8704]
0x1014c:	movsxd	rax, dword ptr [rdx + rax*4]
0x10150:	add	rax, rdx
0x10153:	jmp	rax


0x102ab:	lea	rcx, [rip + 0x860e]
0x102b2:	lea	rsi, [rip + 0x8577]
0x102b9:	lea	rdi, [rip + 0x8567]
0x102c0:	mov	edx, 0x9f
0x102c5:	call	0x2be0


0x10160:	test	eax, eax
0x10162:	mov	r14d, eax
0x10165:	je	0x10136


0x10167:	pop	rbx
0x10168:	mov	eax, r14d
0x1016b:	pop	rbp
0x1016c:	pop	r12
0x1016e:	pop	r13
0x10170:	pop	r14
0x10172:	ret	


0xa4d0:	test	rax, rax
0xa4d3:	mov	r15, rax
0xa4d6:	je	0xa5c0


0xa5c0:	call	0x2950


0xa4dc:	lea	rdx, [rsp + 0x10]
0xa4e1:	lea	rcx, [rip - 0x118]
0xa4e8:	xor	esi, esi
0xa4ea:	mov	r8d, 6
0xa4f0:	mov	rdi, rax
0xa4f3:	mov	dword ptr [rsp + 0x10], r14d
0xa4f8:	mov	qword ptr [rsp + 0x18], r13
0xa4fd:	mov	dword ptr [rsp + 0x20], ebp
0xa501:	mov	dword ptr [rsp + 0x24], r12d
0xa506:	call	0x10710


0xa62e:	test	rax, rax
0xa631:	mov	r13, rax
0xa634:	je	0xa720


0xa720:	call	0x2950


0xa63a:	lea	rdx, [rsp + 0x10]
0xa63f:	lea	rcx, [rip - 0x1f6]
0xa646:	xor	esi, esi
0xa648:	mov	r8d, 6
0xa64e:	mov	rdi, rax
0xa651:	mov	qword ptr [rsp + 0x10], r12
0xa656:	mov	dword ptr [rsp + 0x18], ebp
0xa65a:	call	0x10710


0x11191:	mov	rdx, qword ptr [rbx + 0x18]
0x11195:	cmp	rdx, 0x3ffffffe
0x1119c:	jne	0x1116d


0x111f5:	movzx	eax, byte ptr [rsp + 0xf]
0x111fa:	add	rsp, 0x18
0x111fe:	pop	rbx
0x111ff:	pop	rbp
0x11200:	ret	


0x5a47:	test	eax, eax
0x5a49:	je	0x5a9c


0x5a9c:	add	rsp, 8
0x5aa0:	mov	eax, 1
0x5aa5:	pop	rbx
0x5aa6:	pop	rbp
0x5aa7:	pop	r12
0x5aa9:	pop	r13
0x5aab:	pop	r14
0x5aad:	pop	r15
0x5aaf:	ret	


0x5a4b:	call	0x2950


0x6348:	cmp	eax, -1
0x634b:	je	0x5f30


0x6351:	mov	ecx, dword ptr [rbp - 0x314]
0x6357:	mov	edx, ecx
0x6359:	and	dh, 0xf1
0x635c:	test	eax, eax
0x635e:	cmovne	edx, ecx
0x6361:	mov	dword ptr [rbp - 0x314], edx
0x6367:	movabs	rax, 0xff0000000000ff
0x6371:	test	qword ptr [rbx + 0x18], rax
0x6375:	jne	0x8410


0x43fe:	test	eax, eax
0x4400:	jne	0x4648


0x4648:	mov	rsi, rbp
0x464b:	mov	edi, 4
0x4650:	call	0xf3f0


0x5a98:	test	eax, eax
0x5a9a:	jne	0x5ad0


0x5ad0:	call	0x2950


0xa13e:	test	eax, eax
0xa140:	js	0xa210


0xa210:	xor	eax, eax
0xa212:	cmp	qword ptr [r14 + 8], 0
0xa217:	jne	0xa220


0xa146:	mov	eax, dword ptr [rsp + 0x14]
0xa14a:	test	eax, eax
0xa14c:	je	0xa388


0xa219:	mov	byte ptr [r14 + 0x20], 1
0xa21e:	xor	eax, eax
0xa220:	mov	rbx, qword ptr [rsp + 0x1008]
0xa228:	xor	rbx, qword ptr fs:[0x28]
0xa231:	jne	0xa3c8


0xa220:	mov	rbx, qword ptr [rsp + 0x1008]
0xa228:	xor	rbx, qword ptr fs:[0x28]
0xa231:	jne	0xa3c8


0xa388:	cmp	qword ptr [r14 + 8], 0
0xa38d:	mov	byte ptr [r14 + 0x21], 1
0xa392:	setne	al
0xa395:	jmp	0xa220


0xa152:	mov	rcx, qword ptr [r14 + 0x18]
0xa156:	mov	rdx, rax
0xa159:	not	rdx
0xa15c:	cmp	rcx, rdx
0xa15f:	ja	0xa39a


0xa237:	add	rsp, 0x1018
0xa23e:	pop	rbx
0xa23f:	pop	rbp
0xa240:	pop	r12
0xa242:	pop	r13
0xa244:	pop	r14
0xa246:	pop	r15
0xa248:	ret	


0xa3c8:	call	0x2b30


0xa165:	mov	rdi, qword ptr [r14 + 0x28]
0xa169:	mov	edx, 0x18
0xa16e:	add	rcx, rax
0xa171:	mov	rax, rdx
0xa174:	xor	esi, esi
0xa176:	mov	qword ptr [r14 + 0x18], rcx
0xa17a:	sub	rbx, rdi
0xa17d:	mul	rcx
0xa180:	jo	0xa3b9


0xa39a:	lea	rcx, [rip + 0xdd0f]
0xa3a1:	lea	rsi, [rip + 0xdc60]
0xa3a8:	lea	rdi, [rip + 0xdc81]
0xa3af:	mov	edx, 0x7e
0xa3b4:	call	0x2be0


0xa3b9:	mov	esi, 1
0xa3be:	jmp	0xa186


0xa186:	test	rax, rax
0xa189:	js	0xa3c3


0xa3c3:	call	0x12260


0xa18f:	test	rsi, rsi
0xa192:	jne	0xa3c3


0xa198:	lea	rsi, [rcx + rcx*2]
0xa19c:	shl	rsi, 3
0xa1a0:	call	0x12070


0xcd29:	test	eax, eax
0xcd2b:	sete	al
0xcd2e:	add	rsp, 8
0xcd32:	ret	


0x117d0:	cmp	eax, 0
0x117d3:	mov	ebp, eax
0x117d5:	jle	0x118c0


0x118c0:	jne	0x1199b


0x117db:	call	0x2950


0x118c6:	mov	dword ptr [rip + 0x20de5c], 1
0x118d0:	mov	dword ptr [rip + 0x20de4e], 1
0x118da:	jmp	0x11848


0x1199b:	call	0x2950


0x116a2:	cmp	eax, 0
0x116a5:	mov	ebp, eax
0x116a7:	jg	0x1137d


0x12dad:	test	eax, eax
0x12daf:	jne	0x12d90


0x12d90:	mov	r14, qword ptr [rbx]
0x12d93:	add	rbp, r12
0x12d96:	add	rbx, 8
0x12d9a:	test	r14, r14
0x12d9d:	je	0x12db1


0x14632:	mov	rcx, qword ptr [rbp - 0x3c8]
0x14639:	mov	r8, qword ptr [rbp - 0x3e0]
0x14640:	add	rbx, rcx
0x14643:	mov	edi, dword ptr [rbp - 0x3d0]
0x14649:	cmp	edi, 0x10
0x1464c:	ja	0x1467b


0x145f5:	mov	rcx, qword ptr [rbp - 0x3c8]
0x145fc:	mov	r8, qword ptr [rbp - 0x3e0]
0x14603:	add	rbx, rcx
0x14606:	mov	rsi, qword ptr [r13 + 0x30]
0x1460a:	mov	rdx, qword ptr [r13 + 0x38]
0x1460e:	cmp	rsi, rdx
0x14611:	je	0x14643


0x139e9:	mov	qword ptr [r12 + 0x18], r14
0x139ee:	jmp	0x138f2


0x138f2:	add	rsp, 0x18
0x138f6:	pop	rbx
0x138f7:	pop	rbp
0x138f8:	pop	r12
0x138fa:	pop	r13
0x138fc:	pop	r14
0x138fe:	pop	r15
0x13900:	ret	


0x133d0:	mov	rax, r12
0x133d3:	nop	dword ptr [rax + rax]
0x133d8:	movzx	edx, byte ptr [rax]
0x133db:	shl	rbx, 8
0x133df:	shl	rbp, 8
0x133e3:	add	rbx, 0xff
0x133ea:	add	rax, 1
0x133ee:	add	rbp, rdx
0x133f1:	cmp	r14, rbx
0x133f4:	ja	0x133d8


0x133f6:	cmp	rbx, r14
0x133f9:	jne	0x13379


0x133d8:	movzx	edx, byte ptr [rax]
0x133db:	shl	rbx, 8
0x133df:	shl	rbp, 8
0x133e3:	add	rbx, 0xff
0x133ea:	add	rax, 1
0x133ee:	add	rbp, rdx
0x133f1:	cmp	r14, rbx
0x133f4:	ja	0x133d8


0x13943:	test	bl, 7
0x13946:	jne	0x139b0


0x13948:	cmp	rbp, 0x7ff
0x1394f:	jbe	0x139f3


0x139b0:	mov	rsi, qword ptr [rsp + 8]
0x139b5:	mov	rdi, r13
0x139b8:	mov	r14d, 0x800
0x139be:	call	0x13a70


0x139f3:	mov	rsi, qword ptr [rsp + 8]
0x139f8:	mov	rdi, r13
0x139fb:	call	0x13a70


0x13955:	lea	r15, [rbp - 0x800]
0x1395c:	mov	r14, r15
0x1395f:	and	r14d, 0x7ff
0x13966:	jmp	0x1397c


0x1397c:	mov	rsi, rbx
0x1397f:	mov	rdi, r13
0x13982:	add	rbx, 0x800
0x13989:	call	0x13a70


0x1398e:	test	r15, r15
0x13991:	mov	rbp, r15
0x13994:	jne	0x13970


0x13996:	mov	qword ptr [r12 + 0x18], 0
0x1399f:	add	rsp, 0x18
0x139a3:	pop	rbx
0x139a4:	pop	rbp
0x139a5:	pop	r12
0x139a7:	pop	r13
0x139a9:	pop	r14
0x139ab:	pop	r15
0x139ad:	ret	


0x13970:	cmp	r15, r14
0x13973:	je	0x139b0


0x13975:	sub	r15, 0x800
0x1397c:	mov	rsi, rbx
0x1397f:	mov	rdi, r13
0x13982:	add	rbx, 0x800
0x13989:	call	0x13a70


0x13a00:	jmp	0x139d0


0x139d0:	mov	r14d, 0x800
0x139d6:	mov	rsi, qword ptr [rsp + 8]
0x139db:	mov	rdx, rbp
0x139de:	mov	rdi, rbx
0x139e1:	sub	r14, rbp
0x139e4:	call	0x2d80


0x139c3:	cmp	rbp, 0x800
0x139ca:	ja	0x13925


0x70db:	test	eax, eax
0x70dd:	je	0x78a0


0x78a0:	mov	rsi, qword ptr [rbp - 0x308]
0x78a7:	lea	rdx, [rbp - 0x1f0]
0x78ae:	mov	edi, 1
0x78b3:	call	0x2b00


0x70e3:	mov	rsi, r15
0x70e6:	mov	edi, 4
0x70eb:	call	0xf3f0


0xcfa5:	test	eax, eax
0xcfa7:	mov	ebp, eax
0xcfa9:	mov	r9, qword ptr [rsp + 0x10]
0xcfae:	je	0xd140


0xd140:	mov	rsi, r15
0xd143:	mov	rdi, rbx
0xd146:	call	r9


0xcfb4:	call	0x2950


0xd0e5:	test	eax, eax
0xd0e7:	mov	ebp, eax
0xd0e9:	jne	0xcfb4


0xd0ef:	mov	eax, r12d
0xd0f2:	mov	rsi, r15
0xd0f5:	mov	rdi, rbx
0xd0f8:	and	eax, 0x1ff
0xd0fd:	and	eax, dword ptr [rsp + 0x100]
0xd104:	mov	r9, qword ptr [rsp + 0x10]
0xd109:	mov	dword ptr [rsp + 8], eax
0xd10d:	call	r9


0x421f:	test	eax, eax
0x4221:	jne	0x4229


0x4223:	cmp	byte ptr [rbx + 0x2e], 0
0x4227:	jne	0x4238


0x4229:	add	rsp, 0x10
0x422d:	pop	rbx
0x422e:	pop	rbp
0x422f:	pop	r12
0x4231:	ret	


0x4238:	mov	rdi, r12
0x423b:	mov	dword ptr [rsp + 0xc], eax
0x423f:	call	0x4190


0x4ded:	lea	rdi, [rip + 0x128b2]
0x4df4:	mov	rcx, rbx
0x4df7:	mov	edx, 2
0x4dfc:	mov	esi, 1
0x4e01:	call	0x2e70


0x2e70:	jmp	qword ptr [rip + 0x21a02a]




0xc61b:	test	rax, rax
0xc61e:	mov	qword ptr [rsp], rax
0xc622:	je	0xc6d0


0xc628:	mov	qword ptr [rsp + 0x10], rbx
0xc62d:	shl	rbx, 4
0xc631:	mov	qword ptr [rsp + 0x28], r12
0xc636:	add	rbx, rax
0xc639:	mov	rax, qword ptr [rbp + 0x30]
0xc63d:	mov	r12, rsp
0xc640:	xor	edx, edx
0xc642:	mov	rsi, rbp
0xc645:	mov	rdi, r12
0xc648:	mov	qword ptr [rsp + 8], rbx
0xc64d:	mov	qword ptr [rsp + 0x18], 0
0xc656:	mov	qword ptr [rsp + 0x30], rax
0xc65b:	mov	rax, qword ptr [rbp + 0x38]
0xc65f:	mov	qword ptr [rsp + 0x20], 0
0xc668:	mov	qword ptr [rsp + 0x38], rax
0xc66d:	mov	rax, qword ptr [rbp + 0x40]
0xc671:	mov	qword ptr [rsp + 0x40], rax
0xc676:	mov	rax, qword ptr [rbp + 0x48]
0xc67a:	mov	qword ptr [rsp + 0x48], rax
0xc67f:	call	0xbc40


0xc684:	test	al, al
0xc686:	mov	ebx, eax
0xc688:	jne	0xc740


0xc68e:	mov	rax, qword ptr [rsp + 0x48]
0xc693:	mov	edx, 1
0xc698:	mov	rsi, r12
0xc69b:	mov	rdi, rbp
0xc69e:	mov	qword ptr [rbp + 0x48], rax
0xc6a2:	call	0xbc40


0xc740:	mov	rdi, qword ptr [rbp]
0xc744:	call	0x30d0


0xc6a7:	test	al, al
0xc6a9:	je	0xc789


0xc789:	call	0x2940


0xc6af:	xor	edx, edx
0xc6b1:	mov	rsi, r12
0xc6b4:	mov	rdi, rbp
0xc6b7:	call	0xbc40


0xc6bc:	test	al, al
0xc6be:	je	0xc789


0xc6c4:	mov	rdi, qword ptr [rsp]
0xc6c8:	call	0x30d0


0x121ff:	test	rax, rax
0x12202:	je	0x12209


0x12204:	add	rsp, 8
0x12208:	ret	


0x4f59:	test	rax, rax
0x4f5c:	je	0x4f67


0x4f67:	lea	rax, [rip + 0x21a212]
0x4f6e:	mov	qword ptr [rip + 0x2180bf], 0x400
0x4f79:	mov	qword ptr [rip + 0x21a600], rax
0x4f80:	jmp	0x4ef4


0x4f5e:	mov	qword ptr [rip + 0x21a61b], rax
0x4f65:	jmp	0x4ef4


0x5c07:	mov	ebx, eax
0x5c09:	mov	edi, eax
0x5c0b:	mov	dword ptr [rip + 0x21741f], eax
0x5c11:	call	0x2d70


0x5c16:	mov	eax, ebx
0x5c18:	pop	rbx
0x5c19:	ret	


0xa56c:	test	eax, eax
0xa56e:	mov	ecx, eax
0xa570:	je	0xa530


0xa572:	call	0x2950


0xa6c1:	test	eax, eax
0xa6c3:	mov	r8d, eax
0xa6c6:	je	0xa688


0xa6c8:	call	0x2950


0xa94c:	test	rax, rax
0xa94f:	mov	rbx, rax
0xa952:	je	0xa91e


0xa954:	jmp	0xa919


0xb02a:	test	rax, rax
0xb02d:	je	0xb050


0xb050:	mov	eax, 2
0xb055:	add	rsp, 8
0xb059:	ret	


0xb02f:	cmp	byte ptr [rax], 0
0xb032:	je	0xb050


0xb034:	lea	rdi, [rip + 0xd0a2]
0xb03b:	mov	rsi, rax
0xb03e:	add	rsp, 8
0xb042:	jmp	0xaf90


0xb4b8:	mov	edi, eax
0xb4ba:	call	0x10940


0xb4bf:	mov	rcx, qword ptr [rsp + 0x18]
0xb4c4:	xor	rcx, qword ptr fs:[0x28]
0xb4cd:	jne	0xb4f9


0xb4cf:	add	rsp, 0x58
0xb4d3:	ret	


0xb4f9:	call	0x2b30


0x7ce1:	test	eax, eax
0x7ce3:	mov	dword ptr [rbp - 0x320], eax
0x7ce9:	js	0x83eb


0x83eb:	mov	rsi, qword ptr [rbp - 0x310]
0x83f2:	mov	edi, 4
0x83f7:	call	0xf3f0


0x7cef:	mov	esi, dword ptr [rbp - 0x320]
0x7cf5:	lea	rdx, [rbp - 0x160]
0x7cfc:	mov	edi, 1
0x7d01:	call	0x2e20


0x1010f:	test	eax, eax
0x10111:	js	0x10220


0x10220:	call	0x2950


0x10117:	mov	dword ptr [r12], 1
0x1011f:	mov	dword ptr [r12 + 4], eax
0x10124:	test	ebx, ebx
0x10126:	js	0x10158


0xd8e3:	test	rax, rax
0xd8e6:	je	0xd93d


0xd93d:	mov	qword ptr [rip + 0x211c7c], rbx
0xd944:	mov	qword ptr [rip + 0x20f7bd], rbx
0xd94b:	pop	rbx
0xd94c:	ret	


0xd8e8:	lea	r8, [rax + 1]
0xd8ec:	mov	rdx, r8
0xd8ef:	sub	rdx, rbx
0xd8f2:	cmp	rdx, 6
0xd8f6:	jle	0xd93d


0xd8f8:	lea	rsi, [rax - 6]
0xd8fc:	lea	rdi, [rip + 0xaa05]
0xd903:	mov	ecx, 7
0xd908:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd908:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd90a:	seta	dl
0xd90d:	sbb	dl, 0
0xd910:	test	dl, dl
0xd912:	jne	0xd93d


0xd914:	lea	rdi, [rip + 0xa9f5]
0xd91b:	mov	ecx, 3
0xd920:	mov	rsi, r8
0xd923:	mov	rbx, r8
0xd926:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd926:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd928:	seta	dl
0xd92b:	sbb	dl, 0
0xd92e:	test	dl, dl
0xd930:	jne	0xd93d


0xd932:	lea	rbx, [rax + 4]
0xd936:	mov	qword ptr [rip + 0x20f7a3], rbx
0xd93d:	mov	qword ptr [rip + 0x211c7c], rbx
0xd944:	mov	qword ptr [rip + 0x20f7bd], rbx
0xd94b:	pop	rbx
0xd94c:	ret	


0x1292b:	cmp	rax, rbx
0x1292e:	jb	0x12970


0x12970:	cmp	rbp, r12
0x12973:	mov	ebx, 0xffffffff
0x12978:	je	0x12946


0x12930:	cmp	rbp, r12
0x12933:	je	0x1293d


0x1297a:	call	0x2950


0x1293d:	cmp	rbx, 0x7fffffff
0x12944:	ja	0x12993


0x12935:	mov	rdi, rbp
0x12938:	call	0x30d0


0x12993:	call	0x2950


0xd96a:	call	0x2940


0x1019f:	mov	ebx, eax
0x101a1:	jmp	0x10085


0x10085:	test	ebx, ebx
0x10087:	js	0x100c8


0x100c8:	call	0x2950


0x10089:	and	r14d, 2
0x1008d:	je	0x100d6


0x1008f:	test	rbp, rbp
0x10092:	sete	al
0x10095:	xor	r14d, r14d
0x10098:	test	ebx, ebx
0x1009a:	js	0x100b6


0x10076:	mov	dword ptr [rbp], eax
0x10079:	mov	ebx, eax
0x1007b:	call	0x2950


0xbedb:	lea	rdx, [rip + 0xc29c]
0xbee2:	xor	eax, eax
0xbee4:	mov	rcx, rbp
0xbee7:	mov	esi, 1
0xbeec:	mov	rdi, r12
0xbeef:	call	0x3050


0xbef4:	test	r13, r13
0xbef7:	js	0xbf60


0xbf60:	mov	rax, r13
0xbf63:	mov	rdx, r13
0xbf66:	pxor	xmm0, xmm0
0xbf6a:	shr	rax, 1
0xbf6d:	and	edx, 1
0xbf70:	or	rax, rdx
0xbf73:	test	rbp, rbp
0xbf76:	cvtsi2sd	xmm0, rax
0xbf7b:	addsd	xmm0, xmm0
0xbf7f:	mulsd	xmm0, qword ptr [rip + 0xc291]
0xbf87:	jns	0xbf0f


0xbef9:	pxor	xmm0, xmm0
0xbefd:	test	rbp, rbp
0xbf00:	cvtsi2sd	xmm0, r13
0xbf05:	mulsd	xmm0, qword ptr [rip + 0xc30b]
0xbf0d:	js	0xbf89


0xbf89:	mov	rax, rbp
0xbf8c:	pxor	xmm1, xmm1
0xbf90:	shr	rax, 1
0xbf93:	and	ebp, 1
0xbf96:	or	rax, rbp
0xbf99:	cvtsi2sd	xmm1, rax
0xbf9e:	addsd	xmm1, xmm1
0xbfa2:	jmp	0xbf18


0xbf0f:	pxor	xmm1, xmm1
0xbf13:	cvtsi2sd	xmm1, rbp
0xbf18:	divsd	xmm0, xmm1
0xbf1c:	lea	rdx, [rip + 0xc28d]
0xbf23:	mov	rcx, r13
0xbf26:	mov	rdi, r12
0xbf29:	mov	esi, 1
0xbf2e:	mov	eax, 1
0xbf33:	call	0x3050


0xbf18:	divsd	xmm0, xmm1
0xbf1c:	lea	rdx, [rip + 0xc28d]
0xbf23:	mov	rcx, r13
0xbf26:	mov	rdi, r12
0xbf29:	mov	esi, 1
0xbf2e:	mov	eax, 1
0xbf33:	call	0x3050


0xbf38:	add	rsp, 8
0xbf3c:	mov	rcx, rbx
0xbf3f:	mov	rdi, r12
0xbf42:	pop	rbx
0xbf43:	pop	rbp
0xbf44:	pop	r12
0xbf46:	pop	r13
0xbf48:	lea	rdx, [rip + 0xc247]
0xbf4f:	mov	esi, 1
0xbf54:	xor	eax, eax
0xbf56:	jmp	0x3050


0x119ec:	lea	rsi, [rip + 0x6f9f]
0x119f3:	xor	edi, edi
0x119f5:	mov	edx, 5
0x119fa:	call	0x2ad0


0x11b01:	jmp	0x119ec


0x1473f:	test	rax, rax
0x14742:	je	0x143c5


0x14748:	mov	r15, rax
0x1474b:	mov	byte ptr [r15 + r14], 0
0x14750:	call	0x2950


0x14dac:	test	rax, rax
0x14daf:	je	0x14eab


0x14eab:	call	0x2950


0x14db5:	mov	r15, rax
0x14db8:	jmp	0x14cef


0x15230:	test	rax, rax
0x15233:	je	0x14eab


0x15239:	mov	r15, rax
0x1523c:	cmp	r15, qword ptr [rbp - 0x3e8]
0x15243:	mov	byte ptr [r15 + r14], 0
0x15248:	je	0x15261


0x144ea:	test	rax, rax
0x144ed:	mov	rcx, qword ptr [rbp - 0x3c8]
0x144f4:	mov	r8, qword ptr [rbp - 0x3d0]
0x144fb:	je	0x14eab


0x14501:	mov	r15, rax
0x14504:	lea	rdi, [r15 + rbx]
0x14508:	mov	rdx, rcx
0x1450b:	mov	rsi, r8
0x1450e:	call	0x2d80


0x1525a:	test	rax, rax
0x1525d:	cmovne	r15, rax
0x15261:	mov	rax, qword ptr [rbp - 0x420]
0x15268:	test	rax, rax
0x1526b:	je	0x15275


0x160ce:	mov	rdx, qword ptr [r15 + 8]
0x160d2:	mov	r11, qword ptr [rsp + 0x30]
0x160d7:	mov	rcx, rax
0x160da:	mov	r8, qword ptr [rsp + 0x38]
0x160df:	mov	r10, qword ptr [rsp + 0x40]
0x160e4:	mov	r9, qword ptr [rsp + 0x48]
0x160e9:	test	rcx, rcx
0x160ec:	je	0x16307


0x16307:	mov	rcx, rdx
0x1630a:	jmp	0x162ab


0x160f2:	cmp	qword ptr [rsp + 8], rdx
0x160f7:	mov	rax, qword ptr [r15]
0x160fa:	je	0x162c0


0x162c0:	mov	rsi, qword ptr [rsp + 8]
0x162c5:	shl	rax, 5
0x162c9:	mov	rdi, rcx
0x162cc:	mov	rdx, rax
0x162cf:	mov	qword ptr [rsp + 0x48], r9
0x162d4:	mov	qword ptr [rsp + 0x40], r10
0x162d9:	mov	qword ptr [rsp + 0x38], r8
0x162de:	mov	qword ptr [rsp + 0x30], r11
0x162e3:	call	0x2d80


0x16100:	mov	qword ptr [r15 + 8], rcx
0x16104:	jmp	0x15b1d


0x15b1d:	mov	rdx, rax
0x15b20:	shl	rdx, 5
0x15b24:	add	rdx, rcx
0x15b27:	cmp	rax, rbx
0x15b2a:	ja	0x15b46


0x162e8:	mov	r9, qword ptr [rsp + 0x48]
0x162ed:	mov	rcx, rax
0x162f0:	mov	r10, qword ptr [rsp + 0x40]
0x162f5:	mov	rax, qword ptr [r15]
0x162f8:	mov	r8, qword ptr [rsp + 0x38]
0x162fd:	mov	r11, qword ptr [rsp + 0x30]
0x16302:	jmp	0x16100


0x15a36:	mov	rdx, qword ptr [r15 + 8]
0x15a3a:	mov	r8, qword ptr [rsp + 0x30]
0x15a3f:	mov	rcx, rax
0x15a42:	mov	r10, qword ptr [rsp + 0x38]
0x15a47:	mov	r9, qword ptr [rsp + 0x40]
0x15a4c:	test	rcx, rcx
0x15a4f:	je	0x16307


0x15a55:	cmp	qword ptr [rsp + 8], rdx
0x15a5a:	mov	rax, qword ptr [r15]
0x15a5d:	je	0x1621b


0x1621b:	mov	rsi, qword ptr [rsp + 8]
0x16220:	shl	rax, 5
0x16224:	mov	rdi, rcx
0x16227:	mov	rdx, rax
0x1622a:	mov	qword ptr [rsp + 0x40], r9
0x1622f:	mov	qword ptr [rsp + 0x38], r10
0x16234:	mov	qword ptr [rsp + 0x30], r8
0x16239:	call	0x2d80


0x15a63:	mov	qword ptr [r15 + 8], rcx
0x15a67:	mov	rdx, rax
0x15a6a:	shl	rdx, 5
0x15a6e:	add	rdx, rcx
0x15a71:	cmp	rax, rbx
0x15a74:	ja	0x15a96


0x1623e:	mov	r9, qword ptr [rsp + 0x40]
0x16243:	mov	rcx, rax
0x16246:	mov	r10, qword ptr [rsp + 0x38]
0x1624b:	mov	rax, qword ptr [r15]
0x1624e:	mov	r8, qword ptr [rsp + 0x30]
0x16253:	jmp	0x15a63


0x12086:	test	rax, rax
0x12089:	jne	0x12090


0x1208b:	test	rbx, rbx
0x1208e:	jne	0x120a1


0x12090:	pop	rbx
0x12091:	ret	


0x120a1:	call	0x12260


0xa1a5:	mov	r8d, dword ptr [rsp + 0x14]
0xa1aa:	add	rbx, rax
0xa1ad:	mov	qword ptr [r14 + 0x28], rax
0xa1b1:	test	r8d, r8d
0xa1b4:	je	0xa2f0


0xa2f0:	test	byte ptr [rbx + 0x10], 1
0xa2f4:	jne	0xa340


0xa1ba:	mov	rax, qword ptr [rsp + 0x30]
0xa1bf:	mov	rdx, qword ptr [rsp + 0x20]
0xa1c4:	mov	rcx, r13
0xa1c7:	sub	rcx, rax
0xa1ca:	cmp	rdx, rcx
0xa1cd:	ja	0xa2aa


0xa2f6:	cmp	r15d, 0x48
0xa2fa:	movzx	eax, byte ptr [r14 + 0x21]
0xa2ff:	jbe	0xa360


0xa340:	mov	byte ptr [r14 + 0x21], 1
0xa345:	mov	eax, r15d
0xa348:	mov	qword ptr [r14 + 0x18], rax
0xa34c:	mov	eax, 1
0xa351:	jmp	0xa220


0xa1d3:	xor	ecx, ecx
0xa1d5:	mov	rsi, r12
0xa1d8:	test	r15d, r15d
0xa1db:	je	0xa250


0xa2aa:	lea	rcx, [rip + 0xddff]
0xa2b1:	lea	rsi, [rip + 0xdd50]
0xa2b8:	lea	rdi, [rip + 0xdda9]
0xa2bf:	mov	edx, 0x8d
0xa2c4:	call	0x2be0


0xa360:	mov	ecx, r15d
0xa363:	test	al, al
0xa365:	mov	qword ptr [r14 + 0x18], rcx
0xa369:	jne	0xa34c


0xa301:	test	al, al
0xa303:	jne	0xa345


0xa250:	mov	rdi, qword ptr [r14 + 8]
0xa254:	cmp	rdi, rdx
0xa257:	ja	0xa201


0xa1dd:	mov	r9d, dword ptr [rsi + 0x28]
0xa1e1:	mov	r10, qword ptr [rbx + 8]
0xa1e5:	mov	rdi, qword ptr [rbx]
0xa1e8:	mov	r11d, r9d
0xa1eb:	add	rdi, r10
0xa1ee:	and	r11d, 0xfffffffe
0xa1f2:	cmp	dword ptr [rbx + 0x10], r11d
0xa1f6:	je	0xa2d0


0xa36b:	mov	rdx, qword ptr [rbx + 8]
0xa36f:	add	rdx, qword ptr [rbx]
0xa372:	cmp	r15d, 0x47
0xa376:	mov	qword ptr [r14 + 8], rdx
0xa37a:	jbe	0xa103


0xa34c:	mov	eax, 1
0xa351:	jmp	0xa220


0xa305:	lea	eax, [r15 - 1]
0xa309:	mov	rdx, qword ptr [r14 + 0x28]
0xa30d:	lea	rcx, [rax + rax*2]
0xa311:	mov	qword ptr [r14 + 0x18], rax
0xa315:	mov	rax, qword ptr [rdx + rcx*8 - 0x18]
0xa31a:	add	rax, qword ptr [rdx + rcx*8 - 0x10]
0xa31f:	mov	qword ptr [r14 + 8], rax
0xa323:	jmp	0xa34c


0xa345:	mov	eax, r15d
0xa348:	mov	qword ptr [r14 + 0x18], rax
0xa34c:	mov	eax, 1
0xa351:	jmp	0xa220


0xa259:	mov	r9d, dword ptr [rsi + 0x28]
0xa25d:	mov	esi, r15d
0xa260:	add	r15d, 1
0xa264:	lea	rdi, [rsi + rsi*2]
0xa268:	mov	rsi, qword ptr [r14 + 0x28]
0xa26c:	lea	rbx, [rsi + rdi*8]
0xa270:	mov	qword ptr [rbx], rdx
0xa273:	mov	qword ptr [rbx + 8], rax
0xa277:	mov	dword ptr [rbx + 0x10], r9d
0xa27b:	add	ecx, 1
0xa27e:	cmp	ecx, r8d
0xa281:	jae	0xa2f0


0xa201:	mov	r10, rdi
0xa204:	sub	r10, rdx
0xa207:	cmp	r10, rax
0xa20a:	jae	0xa328


0xa2d0:	cmp	rdi, rdx
0xa2d3:	jne	0xa1fc


0xa1fc:	cmp	rdi, rdx
0xa1ff:	jbe	0xa25d


0xa103:	xor	eax, eax
0xa105:	mov	ecx, 0x200
0xa10a:	mov	rdi, rbp
0xa10d:	rep stosq	qword ptr [rdi], rax


0xa380:	jmp	0xa34c


0xa283:	mov	edx, ecx
0xa285:	mov	rdi, r13
0xa288:	lea	rax, [rdx*8]
0xa290:	sub	rax, rdx
0xa293:	lea	rsi, [r12 + rax*8]
0xa297:	mov	rax, qword ptr [rsi + 0x10]
0xa29b:	mov	rdx, qword ptr [rsi]
0xa29e:	sub	rdi, rax
0xa2a1:	cmp	rdx, rdi
0xa2a4:	jbe	0xa1d8


0xa328:	sub	rax, r10
0xa32b:	mov	qword ptr [rsi], rdi
0xa32e:	sub	ecx, 1
0xa331:	mov	qword ptr [rsi + 0x10], rax
0xa335:	jmp	0xa27b


0xa2d9:	add	ecx, 1
0xa2dc:	add	rax, r10
0xa2df:	mov	dword ptr [rbx + 0x10], r9d
0xa2e3:	cmp	ecx, r8d
0xa2e6:	mov	qword ptr [rbx + 8], rax
0xa2ea:	jb	0xa283


0xa25d:	mov	esi, r15d
0xa260:	add	r15d, 1
0xa264:	lea	rdi, [rsi + rsi*2]
0xa268:	mov	rsi, qword ptr [r14 + 0x28]
0xa26c:	lea	rbx, [rsi + rdi*8]
0xa270:	mov	qword ptr [rbx], rdx
0xa273:	mov	qword ptr [rbx + 8], rax
0xa277:	mov	dword ptr [rbx + 0x10], r9d
0xa27b:	add	ecx, 1
0xa27e:	cmp	ecx, r8d
0xa281:	jae	0xa2f0


0xa1d8:	test	r15d, r15d
0xa1db:	je	0xa250


0xa27b:	add	ecx, 1
0xa27e:	cmp	ecx, r8d
0xa281:	jae	0xa2f0


0x1276e:	test	eax, eax
0x12770:	je	0x1277a


0x12772:	test	dword ptr [rbx], 0x100
0x12778:	jne	0x12788


0x12788:	mov	rdi, rbx
0x1278b:	mov	edx, 1
0x12790:	xor	esi, esi
0x12792:	call	0x127d0


0x7d06:	test	eax, eax
0x7d08:	jne	0x8627


0x7d0e:	mov	rax, qword ptr [rbp - 0x158]
0x7d15:	cmp	qword ptr [rbp - 0x278], rax
0x7d1c:	jne	0x7d32


0x8627:	mov	rsi, qword ptr [rbp - 0x310]
0x862e:	mov	edi, 4
0x8633:	call	0xf3f0


0x7d1e:	mov	rax, qword ptr [rbp - 0x160]
0x7d25:	cmp	qword ptr [rbp - 0x280], rax
0x7d2c:	je	0x8a56


0x7d32:	mov	rsi, qword ptr [rbp - 0x310]
0x7d39:	mov	edi, 4
0x7d3e:	call	0xf3f0


0x8a56:	and	r12d, 0x1ff
0x8a5d:	test	r14b, r14b
0x8a60:	mov	dword ptr [rbp - 0x3a4], r12d
0x8a67:	jne	0x9000


0x8a6d:	cmp	byte ptr [rbx + 0x23], 1
0x8a71:	mov	rdi, qword ptr [rbp - 0x308]
0x8a78:	sbb	esi, esi
0x8a7a:	xor	eax, eax
0x8a7c:	and	esi, 0xfffffe00
0x8a82:	add	esi, 0x201
0x8a88:	call	0xb490


0x9000:	mov	eax, dword ptr [rbp - 0x35c]
0x9006:	mov	dword ptr [rbp - 0x378], eax
0x900c:	mov	eax, dword ptr [rbp - 0x378]
0x9012:	mov	rdi, qword ptr [rbp - 0x308]
0x9019:	mov	esi, 0xc1
0x901e:	not	eax
0x9020:	and	eax, dword ptr [rbp - 0x3a4]
0x9026:	mov	edx, eax
0x9028:	mov	dword ptr [rbp - 0x330], eax
0x902e:	xor	eax, eax
0x9030:	call	0xb490


0x9035:	mov	r14d, eax
0x9038:	mov	dword ptr [rbp - 0x328], eax
0x903e:	call	0x2950


0x8a8d:	mov	dword ptr [rbp - 0x328], eax
0x8a93:	call	0x2950


0x11468:	test	eax, eax
0x1146a:	jne	0x115f7


0x11470:	mov	rdx, qword ptr [rsp + 0xc8]
0x11478:	sub	rdx, qword ptr [r13 + 0x10]
0x1147c:	mov	rax, qword ptr [rsp + 0xb8]
0x11484:	sub	rax, qword ptr [r13]
0x11488:	movdqa	xmm0, xmmword ptr [r13]
0x1148e:	cmp	rdx, 1
0x11492:	sete	dl
0x11495:	movaps	xmmword ptr [rsp + 0x50], xmm0
0x1149a:	and	r14d, edx
0x1149d:	cmp	rax, 1
0x114a1:	movdqa	xmm0, xmmword ptr [r13 + 0x10]
0x114a7:	movaps	xmmword ptr [rsp + 0x60], xmm0
0x114ac:	jne	0x11700


0x114b2:	test	r12b, r12b
0x114b5:	je	0x11700


0x11700:	test	r14b, r14b
0x11703:	je	0x114f5


0x114bb:	cmp	qword ptr [rsp + 0xc0], 0
0x114c4:	jne	0x11700


0x114f5:	xor	ebp, ebp
0x114f7:	jmp	0x115f7


0x11709:	cmp	qword ptr [rsp + 0xd0], 0
0x11712:	jne	0x114f5


0x114ca:	test	r14b, r14b
0x114cd:	mov	qword ptr [rsp + 0x58], 0
0x114d6:	je	0x114e7


0x11718:	mov	qword ptr [rsp + 0x68], 0
0x11721:	jmp	0x114e7


0x114e7:	lea	rdx, [rsp + 0x50]
0x114ec:	xor	esi, esi
0x114ee:	mov	edi, ebx
0x114f0:	call	0x30b0


0x114d8:	cmp	qword ptr [rsp + 0xd0], 0
0x114e1:	je	0x11718


0x1151f:	test	eax, eax
0x11521:	setne	al
0x11524:	test	al, al
0x11526:	jne	0x116f3


0x11579:	test	eax, eax
0x1157b:	setne	al
0x1157e:	test	al, al
0x11580:	jne	0x116f3


0x11586:	mov	rsi, qword ptr [rsp + 8]
0x1158b:	cmp	qword ptr [rsi + 8], 0x3ffffffe
0x11593:	je	0x116c0


0x116c0:	mov	rax, qword ptr [rsp + 0xc0]
0x116c8:	mov	rdx, qword ptr [rsp + 0xb8]
0x116d0:	mov	r13d, 3
0x116d6:	mov	qword ptr [rsi], rdx
0x116d9:	mov	qword ptr [rsi + 8], rax
0x116dd:	jmp	0x11363


0x11599:	cmp	qword ptr [rsi + 0x18], 0x3ffffffe
0x115a1:	mov	r13d, 3
0x115a7:	jne	0x11363


0x11363:	test	ebx, ebx
0x11365:	js	0x11690


0x115ad:	mov	rax, qword ptr [rsp + 0xd0]
0x115b5:	mov	rdx, qword ptr [rsp + 0xc8]
0x115bd:	mov	qword ptr [rsi + 0x18], rax
0x115c1:	mov	qword ptr [rsi + 0x10], rdx
0x115c5:	jmp	0x11363


0x13070:	test	eax, eax
0x13072:	mov	ebx, eax
0x13074:	mov	r8d, dword ptr [rsp + 0xc]
0x13079:	jne	0x13220


0x1307f:	mov	ecx, dword ptr [rsp + 0x28]
0x13083:	mov	eax, ecx
0x13085:	and	eax, 0xf000
0x1308a:	cmp	eax, 0x4000
0x1308f:	jne	0x130e0


0x13220:	call	0x2950


0x13091:	cmp	r13d, -1
0x13095:	je	0x13170


0x130e0:	call	0x2950


0x13170:	cmp	r8d, -1
0x13174:	je	0x13181


0x1309b:	cmp	dword ptr [rsp + 0x2c], r13d
0x130a0:	je	0x13170


0x13181:	xor	edx, edx
0x13183:	mov	eax, ecx
0x13185:	xor	eax, r14d
0x13188:	or	eax, edx
0x1318a:	test	dword ptr [rsp + 0xf0], eax
0x13191:	je	0x131e0


0x13176:	cmp	dword ptr [rsp + 0x30], r8d
0x1317b:	jne	0x130a6


0x130a6:	test	ebp, ebp
0x130a8:	mov	dword ptr [rsp + 0xc], ecx
0x130ac:	mov	edx, r8d
0x130af:	mov	esi, r13d
0x130b2:	jns	0x131c0


0x131e0:	xor	ebx, ebx
0x131e2:	test	ebp, ebp
0x131e4:	js	0x13104


0x13193:	mov	esi, dword ptr [rsp + 0xf0]
0x1319a:	and	ecx, 0xfff
0x131a0:	not	esi
0x131a2:	and	esi, ecx
0x131a4:	or	esi, r14d
0x131a7:	test	ebp, ebp
0x131a9:	jns	0x13210


0x130b8:	cmp	r15d, -1
0x130bc:	mov	rdi, r12
0x130bf:	je	0x13200


0x131c0:	mov	edi, ebp
0x131c2:	call	0x2f80


0x13104:	mov	rcx, qword ptr [rsp + 0xa8]
0x1310c:	xor	rcx, qword ptr fs:[0x28]
0x13115:	mov	eax, ebx
0x13117:	jne	0x13230


0x131ab:	mov	rdi, r12
0x131ae:	call	0x2f10


0x13210:	mov	edi, ebp
0x13212:	call	0x2ef0


0x13200:	call	0x2e80


0x130c5:	call	0x2e40


0x1311d:	add	rsp, 0xb8
0x13124:	pop	rbx
0x13125:	pop	rbp
0x13126:	pop	r12
0x13128:	pop	r13
0x1312a:	pop	r14
0x1312c:	pop	r15
0x1312e:	ret	


0x13230:	call	0x2b30


0x2c30:	jmp	qword ptr [rip + 0x21a14a]


0x2e80:	jmp	qword ptr [rip + 0x21a022]






0x130ca:	mov	ecx, dword ptr [rsp + 0xc]
0x130ce:	mov	ebx, eax
0x130d0:	test	ebx, ebx
0x130d2:	jne	0x13104


0x130d4:	jmp	0x131d1


0x131d1:	test	cl, 0x49
0x131d4:	je	0x13181


0x131d6:	mov	edx, ecx
0x131d8:	and	edx, 0xc00
0x131de:	jmp	0x13183


0x13183:	mov	eax, ecx
0x13185:	xor	eax, r14d
0x13188:	or	eax, edx
0x1318a:	test	dword ptr [rsp + 0xf0], eax
0x13191:	je	0x131e0


0x13217:	test	eax, eax
0x13219:	mov	ebx, eax
0x1321b:	je	0x131f0


0x131f0:	mov	edi, ebp
0x131f2:	call	0x2c30


0x131b3:	mov	ebx, eax
0x131b5:	jmp	0x13104


0x131c7:	test	eax, eax
0x131c9:	mov	ebx, eax
0x131cb:	mov	ecx, dword ptr [rsp + 0xc]
0x131cf:	jne	0x13220


0x13267:	mov	edi, eax
0x13269:	call	0x10940


0x1326e:	mov	rsi, qword ptr [rsp + 0x18]
0x13273:	xor	rsi, qword ptr fs:[0x28]
0x1327c:	jne	0x132a9


0x1327e:	add	rsp, 0x58
0x13282:	ret	


0x132a9:	call	0x2b30


0x14115:	mov	ebx, eax
0x14117:	jmp	0x140b0


0x140b0:	mov	rcx, qword ptr [rsp + 0x18]
0x140b5:	xor	rcx, qword ptr fs:[0x28]
0x140be:	mov	eax, ebx
0x140c0:	jne	0x1421d


0x140c6:	add	rsp, 0x50
0x140ca:	pop	rbx
0x140cb:	pop	rbp
0x140cc:	pop	r12
0x140ce:	ret	


0x1421d:	call	0x2b30


0x140a9:	mov	ebx, eax
0x140ab:	nop	dword ptr [rax + rax]
0x140b0:	mov	rcx, qword ptr [rsp + 0x18]
0x140b5:	xor	rcx, qword ptr fs:[0x28]
0x140be:	mov	eax, ebx
0x140c0:	jne	0x1421d


0x1416c:	mov	ebx, eax
0x1416e:	jmp	0x140b0


0x14055:	test	eax, eax
0x14057:	mov	ebx, eax
0x14059:	js	0x141e8


0x141e8:	call	0x2950


0x1405f:	mov	dword ptr [rip + 0x20b6cb], 1
0x14069:	jmp	0x140b0


0x1417c:	test	eax, eax
0x1417e:	mov	ebx, eax
0x14180:	js	0x140b0


0x14186:	cmp	dword ptr [rip + 0x20b5a7], -1
0x1418d:	jne	0x140b0


0x14193:	xor	eax, eax
0x14195:	mov	esi, 1
0x1419a:	mov	edi, ebx
0x1419c:	call	0x2a00


0x141a1:	test	eax, eax
0x141a3:	js	0x141c1


0x141c1:	call	0x2950


0x141a5:	or	eax, 1
0x141a8:	mov	esi, 2
0x141ad:	mov	edi, ebx
0x141af:	mov	edx, eax
0x141b1:	xor	eax, eax
0x141b3:	call	0x2a00


0x141b8:	cmp	eax, -1
0x141bb:	jne	0x140b0


0x14233:	mov	ebx, eax
0x14235:	jmp	0x140b0


0x317b:	lea	rsi, [rip + 0x14e47]
0x3182:	mov	edi, 6
0x3187:	call	0x2ed0


0x4fa1:	test	eax, eax
0x4fa3:	mov	ebx, eax
0x4fa5:	js	0x4fb0


0x4fb0:	call	0x2950


0x4fa7:	mov	eax, ebx
0x4fa9:	pop	rbx
0x4faa:	ret	


0x5312:	test	rax, rax
0x5315:	js	0x5390


0x5390:	mov	rsi, r13
0x5393:	mov	edi, 4
0x5398:	call	0xf3f0


0x5317:	test	r12b, r12b
0x531a:	jne	0x5330


0x531c:	add	rsp, 8
0x5320:	mov	eax, 1
0x5325:	pop	rbx
0x5326:	pop	rbp
0x5327:	pop	r12
0x5329:	pop	r13
0x532b:	ret	


0x5330:	sub	rax, rbx
0x5333:	mov	rdx, rbx
0x5336:	mov	edi, ebp
0x5338:	mov	rsi, rax
0x533b:	call	0x4f90


0x5340:	test	eax, eax
0x5342:	jns	0x531c


0x5344:	mov	rsi, r13
0x5347:	mov	edi, 4
0x534c:	call	0xf3f0


0x11ff1:	test	eax, eax
0x11ff3:	mov	byte ptr [rip + 0x20d737], 1
0x11ffa:	sete	al
0x11ffd:	mov	byte ptr [rip + 0x20d72d], al
0x12003:	add	rsp, 8
0x12007:	ret	


0x5990:	test	eax, eax
0x5992:	mov	dword ptr [rbx + 0x34], 0xffffffff
0x5999:	sete	al
0x599c:	mov	byte ptr [rbx + 0x1b], al
0x599f:	mov	byte ptr [rbx + 0x1a], al
0x59a2:	pop	rbx
0x59a3:	ret	


0xc6cd:	jmp	0xc6d2


0xc749:	mov	rax, qword ptr [rsp]
0xc74d:	mov	qword ptr [rbp], rax
0xc751:	mov	rax, qword ptr [rsp + 8]
0xc756:	mov	qword ptr [rbp + 8], rax
0xc75a:	mov	rax, qword ptr [rsp + 0x10]
0xc75f:	mov	qword ptr [rbp + 0x10], rax
0xc763:	mov	rax, qword ptr [rsp + 0x18]
0xc768:	mov	qword ptr [rbp + 0x18], rax
0xc76c:	mov	rax, qword ptr [rsp + 0x48]
0xc771:	mov	qword ptr [rbp + 0x48], rax
0xc775:	jmp	0xc6d2


0xc529:	test	rbx, rbx
0xc52c:	mov	rdi, rbx
0xc52f:	jne	0xc520


0xc520:	mov	rbx, qword ptr [rdi + 8]
0xc524:	call	0x30d0


0xc53a:	pop	rbx
0xc53b:	mov	rdi, r12
0xc53e:	pop	rbp
0xc53f:	pop	r12
0xc541:	jmp	0x30d0


0xc4f9:	test	rbx, rbx
0xc4fc:	mov	rdi, rbx
0xc4ff:	jne	0xc4f0


0xc4f0:	mov	rbx, qword ptr [rdi + 8]
0xc4f4:	call	0x30d0


0xf23d:	mov	qword ptr [rip + 0x20de5c], rbx
0xf244:	pop	rbx
0xf245:	mov	dword ptr [rip + 0x20de49], 1
0xf24f:	pop	rbp
0xf250:	pop	r12
0xf252:	ret	


0xf217:	mov	qword ptr [rip + 0x20de8e], 0x100
0xf222:	mov	qword ptr [rip + 0x20de8f], rbx
0xf229:	lea	rbx, [rip + 0x20de80]
0xf230:	cmp	r12, rbx
0xf233:	je	0xf244


0x1209d:	xor	eax, eax
0x1209f:	pop	rbx
0x120a0:	ret	


0xf1fc:	cmp	rbx, rbp
0xf1ff:	jne	0xf1f0


0xf1f0:	mov	rdi, qword ptr [rbx]
0xf1f3:	add	rbx, 0x10
0xf1f7:	call	0x30d0


0x9edd:	mov	rdi, rbx
0x9ee0:	pop	rbx
0x9ee1:	jmp	0x30d0


0xcd4c:	mov	rdi, rbx
0xcd4f:	pop	rbx
0xcd50:	jmp	0x30d0


0x916f:	test	eax, eax
0x9171:	movzx	r8d, byte ptr [rbp - 0x350]
0x9179:	movzx	r9d, byte ptr [rbp - 0x358]
0x9181:	je	0x7811


0x7811:	mov	rax, qword ptr [rbp - 0x158]
0x7818:	cmp	qword ptr [rbp - 0xc8], rax
0x781f:	jne	0x5e3f


0x9187:	jmp	0x5e3f


0x91b2:	test	eax, eax
0x91b4:	movzx	r8d, byte ptr [rbp - 0x350]
0x91bc:	movzx	r9d, byte ptr [rbp - 0x358]
0x91c4:	je	0x777c


0x777c:	mov	eax, dword ptr [r12 + 0x18]
0x7781:	and	eax, 0xf000
0x7786:	cmp	eax, 0xa000
0x778b:	je	0x9149


0x91ca:	jmp	0x5e3f


0x1165d:	test	eax, eax
0x1165f:	setne	al
0x11662:	jmp	0x11524


0x11524:	test	al, al
0x11526:	jne	0x116f3


0x1167d:	test	eax, eax
0x1167f:	setne	al
0x11682:	jmp	0x1157e


0x1157e:	test	al, al
0x11580:	jne	0x116f3


0x5cfc:	test	eax, eax
0x5cfe:	mov	rsi, r12
0x5d01:	setne	al
0x5d04:	test	al, al
0x5d06:	jne	0x6505


0x5d0c:	mov	eax, dword ptr [rbp - 0x268]
0x5d12:	mov	dword ptr [rbp - 0x314], eax
0x5d18:	and	eax, 0xf000
0x5d1d:	cmp	eax, 0x4000
0x5d22:	je	0x67e8


0x6505:	mov	edi, 4
0x650a:	call	0xf3f0


0x67e8:	movzx	r12d, byte ptr [rbx + 0x2a]
0x67ed:	test	r12b, r12b
0x67f0:	jne	0x5d28


0x67f6:	mov	rsi, qword ptr [rbp - 0x310]
0x67fd:	mov	edi, 4
0x6802:	call	0xf3f0


0x42a5:	test	eax, eax
0x42a7:	jne	0x4620


0x4620:	mov	rsi, r12
0x4623:	mov	edi, 4
0x4628:	call	0xf3f0


0x1313a:	test	eax, eax
0x1313c:	mov	ebx, eax
0x1313e:	mov	r8d, dword ptr [rsp + 0xc]
0x13143:	jne	0x13104


0x13145:	mov	ecx, dword ptr [rsp + 0x28]
0x13149:	mov	eax, ecx
0x1314b:	and	eax, 0xf000
0x13150:	cmp	eax, 0x4000
0x13155:	je	0x13091


0x1315b:	call	0x2950


0xd67b:	test	eax, eax
0xd67d:	jne	0xd6d0


0xd67f:	mov	ebx, dword ptr [rsp + 0x18]
0xd683:	mov	edi, 0x20
0xd688:	call	0x12010


0xd6d0:	xor	eax, eax
0xd6d2:	jmp	0xd6aa


0xd6aa:	mov	rcx, qword ptr [rsp + 0x98]
0xd6b2:	xor	rcx, qword ptr fs:[0x28]
0xd6bb:	jne	0xd6d4


0xd6bd:	add	rsp, 0xa0
0xd6c4:	pop	rbx
0xd6c5:	ret	


0xd6d4:	call	0x2b30


0xd86a:	test	eax, eax
0xd86c:	js	0xd8c0


0xd8c0:	add	rsp, 8
0xd8c4:	xor	ebp, ebp
0xd8c6:	pop	rbx
0xd8c7:	mov	rax, rbp
0xd8ca:	pop	rbp
0xd8cb:	pop	r12
0xd8cd:	pop	r13
0xd8cf:	ret	


0xd86e:	mov	edi, eax
0xd870:	mov	ebx, eax
0xd872:	call	0x2fb0


0x2fb0:	jmp	qword ptr [rip + 0x219f8a]




0xdbb1:	cmp	r15d, 0xa
0xdbb5:	mov	qword ptr [rsp + 0x58], rax
0xdbba:	ja	0xed6f


0xdbc0:	lea	rcx, [rip + 0xa7b9]
0xdbc7:	mov	edx, r15d
0xdbca:	movsxd	rax, dword ptr [rcx + rdx*4]
0xdbce:	add	rax, rcx
0xdbd1:	jmp	rax


0xed6f:	call	0x2940


0xf72b:	mov	rbx, rax
0xf72e:	mov	r15d, eax
0xf731:	call	0x2950


0x5465:	test	rax, rax
0x5468:	mov	qword ptr [rsp + 0x30], rax
0x546d:	jns	0x54d0


0x546f:	call	0x2950


0x54d0:	je	0x55ff


0x55ff:	test	r15b, r15b
0x5602:	je	0x57b3


0x54d6:	mov	rax, qword ptr [rsp + 0x40]
0x54db:	mov	rbp, qword ptr [rsp + 0x30]
0x54e0:	mov	ecx, r15d
0x54e3:	mov	r14, qword ptr [rsp + 0x20]
0x54e8:	mov	r10, qword ptr [rsp + 0x48]
0x54ed:	add	qword ptr [rax], rbp
0x54f0:	cmp	qword ptr [rsp + 0x50], 0
0x54f6:	mov	r11, r14
0x54f9:	mov	r15, r10
0x54fc:	setne	byte ptr [rsp + 0x1d]
0x5501:	nop	dword ptr [rax]
0x5508:	cmp	rbp, r15
0x550b:	mov	rbx, r15
0x550e:	cmovbe	rbx, rbp
0x5512:	test	rbx, rbx
0x5515:	setne	r12b
0x5519:	and	r12b, byte ptr [rsp + 0x1d]
0x551e:	je	0x5630


0x5608:	movzx	edx, byte ptr [rsp + 0x6c]
0x560d:	mov	rsi, qword ptr [rsp + 0x10]
0x5612:	mov	rcx, r13
0x5615:	mov	edi, dword ptr [rsp + 0x18]
0x5619:	add	rsp, 0x78
0x561d:	pop	rbx
0x561e:	pop	rbp
0x561f:	pop	r12
0x5621:	pop	r13
0x5623:	pop	r14
0x5625:	pop	r15
0x5627:	jmp	0x52f0


0x5630:	cmp	cl, 1
0x5633:	je	0x5688


0x5524:	mov	rsi, r14
0x5527:	mov	rdx, rbx
0x552a:	cmp	byte ptr [rsi], 0
0x552d:	jne	0x5760


0x5688:	test	rbx, rbx
0x568b:	jne	0x5698


0x5635:	cmp	rbp, r15
0x5638:	ja	0x5688


0x5533:	add	rsi, 1
0x5537:	sub	rdx, 1
0x553b:	je	0x56c8


0x5760:	mov	eax, r12d
0x5763:	mov	edx, ecx
0x5765:	xor	r12d, r12d
0x5768:	jmp	0x5571


0x568d:	mov	r12d, ecx
0x5690:	jmp	0x563a


0x5698:	movabs	rax, 0x7fffffffffffffff
0x56a2:	sub	rax, rbx
0x56a5:	cmp	rax, r13
0x56a8:	jb	0x5720


0x563a:	add	r13, rbx
0x563d:	xor	r9d, r9d
0x5640:	test	cl, cl
0x5642:	mov	r15d, 1
0x5648:	mov	byte ptr [rsp + 0x1e], cl
0x564c:	je	0x55a7


0x56c8:	mov	r9d, ecx
0x56cb:	xor	r9d, 1
0x56cf:	test	r13, r13
0x56d2:	setne	al
0x56d5:	and	r9d, eax
0x56d8:	test	r9b, r9b
0x56db:	je	0x5692


0x5541:	test	dl, 0xf
0x5544:	jne	0x552a


0x5571:	test	r13, r13
0x5574:	setne	r9b
0x5578:	and	r9d, edx
0x557b:	cmp	rbp, r15
0x557e:	ja	0x56d8


0x5720:	mov	rsi, qword ptr [rsp + 0x58]
0x5725:	mov	edi, 4
0x572a:	xor	r15d, r15d
0x572d:	call	0xf3f0


0x56aa:	add	r13, rbx
0x56ad:	add	r14, rbx
0x56b0:	mov	r15, rbx
0x56b3:	sub	rbp, r15
0x56b6:	jne	0x5508


0x55a7:	mov	edi, dword ptr [rsp + 0x18]
0x55ab:	mov	rdx, r13
0x55ae:	mov	rsi, r11
0x55b1:	mov	byte ptr [rsp + 8], r9b
0x55b6:	call	0xb930


0x5652:	movzx	edx, byte ptr [rsp + 0x1f]
0x5657:	mov	rsi, qword ptr [rsp + 0x10]
0x565c:	mov	rcx, r13
0x565f:	mov	edi, dword ptr [rsp + 0x18]
0x5663:	mov	byte ptr [rsp + 0x1e], r9b
0x5668:	call	0x52f0


0x5692:	mov	ecx, r12d
0x5695:	nop	dword ptr [rax]
0x5698:	movabs	rax, 0x7fffffffffffffff
0x56a2:	sub	rax, rbx
0x56a5:	cmp	rax, r13
0x56a8:	jb	0x5720


0x56dd:	xor	r15d, r15d
0x56e0:	jmp	0x559b


0x5546:	mov	rdi, r14
0x5549:	mov	qword ptr [rsp + 8], r11
0x554e:	mov	byte ptr [rsp + 0x1e], cl
0x5552:	call	0x2c90


0x552a:	cmp	byte ptr [rsi], 0
0x552d:	jne	0x5760


0x5584:	test	al, al
0x5586:	je	0x56d8


0x56d8:	test	r9b, r9b
0x56db:	je	0x5692


0x56bc:	mov	r12d, ecx
0x56bf:	jmp	0x55e4


0x5508:	cmp	rbp, r15
0x550b:	mov	rbx, r15
0x550e:	cmovbe	rbx, rbp
0x5512:	test	rbx, rbx
0x5515:	setne	r12b
0x5519:	and	r12b, byte ptr [rsp + 0x1d]
0x551e:	je	0x5630


0x559b:	test	cl, cl
0x559d:	mov	byte ptr [rsp + 0x1e], cl
0x55a1:	jne	0x5652


0x558c:	test	r9b, r9b
0x558f:	je	0x563a


0x55e4:	mov	rdi, qword ptr [rsp + 0x30]
0x55e9:	sub	qword ptr [rsp + 0x28], rdi
0x55ee:	mov	r15d, r12d
0x55f1:	mov	rax, qword ptr [rsp + 0x60]
0x55f6:	mov	byte ptr [rax], r12b
0x55f9:	jne	0x5446


0x5595:	mov	r15d, 1
0x559b:	test	cl, cl
0x559d:	mov	byte ptr [rsp + 0x1e], cl
0x55a1:	jne	0x5652


0x5446:	mov	rax, qword ptr [rsp + 0x38]
0x544b:	mov	rdx, qword ptr [rsp + 0x28]
0x5450:	mov	rsi, qword ptr [rsp + 0x20]
0x5455:	mov	edi, dword ptr [rsp + 0x68]
0x5459:	cmp	rax, rdx
0x545c:	cmovbe	rdx, rax
0x5460:	call	0x2c80


0x5557:	movzx	ecx, byte ptr [rsp + 0x1e]
0x555c:	test	eax, eax
0x555e:	mov	r11, qword ptr [rsp + 8]
0x5563:	sete	r12b
0x5567:	mov	edx, r12d
0x556a:	xor	edx, ecx
0x556c:	test	eax, eax
0x556e:	setne	al
0x5571:	test	r13, r13
0x5574:	setne	r9b
0x5578:	and	r9d, edx
0x557b:	cmp	rbp, r15
0x557e:	ja	0x56d8


0x566d:	test	al, al
0x566f:	movzx	r9d, byte ptr [rsp + 0x1e]
0x5675:	jne	0x55cf


0x567b:	mov	r15d, eax
0x567e:	jmp	0x54b5


0x55cf:	test	r15d, r15d
0x55d2:	mov	r13, rbx
0x55d5:	je	0x56e8


0x56e8:	mov	r11, r14
0x56eb:	mov	ecx, r12d
0x56ee:	add	r14, rbx
0x56f1:	mov	r15, rbx
0x56f4:	jmp	0x56b3


0x55db:	test	rbx, rbx
0x55de:	jne	0x5700


0x56b3:	sub	rbp, r15
0x56b6:	jne	0x5508


0x5700:	xor	r15d, r15d
0x5703:	test	r9b, r9b
0x5706:	mov	ecx, r12d
0x5709:	mov	r11, r14
0x570c:	jne	0x56b3


0x570e:	add	r14, rbx
0x5711:	mov	r15, rbx
0x5714:	xor	r13d, r13d
0x5717:	jmp	0x56b3


0x55bb:	cmp	r13, rax
0x55be:	movzx	r9d, byte ptr [rsp + 8]
0x55c4:	movzx	ecx, byte ptr [rsp + 0x1e]
0x55c9:	jne	0x576d


0x576d:	mov	rsi, qword ptr [rsp + 0x10]
0x5772:	mov	edi, 4
0x5777:	mov	r15d, ecx
0x577a:	call	0xf3f0


0xf976:	test	rax, rax
0xf979:	mov	rbp, rax
0xf97c:	jns	0xf9a0


0xf97e:	call	0x2950


0xf9a0:	add	rsp, 8
0xf9a4:	mov	rax, rbp
0xf9a7:	pop	rbx
0xf9a8:	pop	rbp
0xf9a9:	pop	r12
0xf9ab:	pop	r13
0xf9ad:	ret	


0xb8ee:	cmp	rax, -1
0xb8f2:	jne	0xb8d0


0xb8d0:	test	rax, rax
0xb8d3:	je	0xb908


0xb908:	call	0x2950


0xb8d5:	add	r12, rax
0xb8d8:	add	rbp, rax
0xb8db:	sub	rbx, rax
0xb8de:	je	0xb8f4


0xf9d6:	test	rax, rax
0xf9d9:	mov	rbp, rax
0xf9dc:	jns	0xfa00


0xf9de:	call	0x2950


0xfa00:	add	rsp, 8
0xfa04:	mov	rax, rbp
0xfa07:	pop	rbx
0xfa08:	pop	rbp
0xfa09:	pop	r12
0xfa0b:	pop	r13
0xfa0d:	ret	


0xb96e:	cmp	rax, -1
0xb972:	jne	0xb950


0xb950:	test	rax, rax
0xb953:	je	0xb988


0xb988:	call	0x2950


0xb955:	add	r12, rax
0xb958:	add	rbp, rax
0xb95b:	sub	rbx, rax
0xb95e:	je	0xb974


0x78b8:	test	eax, eax
0x78ba:	jne	0x82c5


0x78c0:	mov	r12d, dword ptr [rbp - 0x1d8]
0x78c7:	mov	byte ptr [rbp - 0x330], 0
0x78ce:	mov	eax, r12d
0x78d1:	and	eax, 0x1c0
0x78d6:	cmp	eax, 0x1c0
0x78db:	je	0x7908


0x82c5:	mov	rsi, qword ptr [rbp - 0x308]
0x82cc:	mov	edi, 4
0x82d1:	call	0xf3f0


0x7908:	mov	rax, qword ptr [rbp - 0x338]
0x790f:	cmp	byte ptr [rax], 0
0x7912:	je	0x870c


0x78dd:	mov	rdi, qword ptr [rbp - 0x308]
0x78e4:	mov	esi, r12d
0x78e7:	or	esi, 0x1c0
0x78ed:	call	0x2f10


0x870c:	mov	rdx, qword ptr [rbp - 0x1f0]
0x8713:	mov	rsi, qword ptr [rbp - 0x1e8]
0x871a:	mov	rdi, qword ptr [rbp - 0x308]
0x8721:	call	0x9fc0


0x7918:	cmp	byte ptr [rbx + 0x2e], 0
0x791c:	je	0x7968


0x791e:	cmp	byte ptr [rbx + 0x18], 0
0x7922:	je	0x87cd


0x87cd:	mov	rsi, qword ptr [rbp - 0x308]
0x87d4:	mov	rdi, qword ptr [rbp - 0x310]
0x87db:	xor	edx, edx
0x87dd:	call	0x4fd0


0x7928:	mov	rsi, qword ptr [rbp - 0x308]
0x792f:	mov	edi, 4
0x7934:	call	0xf3f0


0x78f2:	test	eax, eax
0x78f4:	mov	dword ptr [rbp - 0x38c], r12d
0x78fb:	mov	byte ptr [rbp - 0x330], 1
0x7902:	jne	0x8923


0x8923:	mov	rsi, qword ptr [rbp - 0x308]
0x892a:	mov	edi, 4
0x892f:	call	0xf3f0


0x7056:	test	eax, eax
0x7058:	movzx	r8d, byte ptr [rbp - 0x350]
0x7060:	movzx	r9d, byte ptr [rbp - 0x358]
0x7068:	je	0x8072


0x8072:	lea	rax, [rbp - 0xd0]
0x8079:	mov	rsi, qword ptr [rbp - 0x310]
0x8080:	mov	edi, 1
0x8085:	mov	rdx, rax
0x8088:	mov	qword ptr [rbp - 0x368], rax
0x808f:	call	0x2b00


0x8094:	test	eax, eax
0x8096:	movzx	r8d, byte ptr [rbp - 0x350]
0x809e:	movzx	r9d, byte ptr [rbp - 0x358]
0x80a6:	jne	0x706e


0x80ac:	xor	ecx, ecx
0x80ae:	mov	rax, qword ptr [rbp - 0x158]
0x80b5:	cmp	qword ptr [rbp - 0xc8], rax
0x80bc:	jne	0x80cf


0x80be:	mov	rax, qword ptr [rbp - 0x160]
0x80c5:	cmp	qword ptr [rbp - 0xd0], rax
0x80cc:	sete	cl
0x80cf:	mov	eax, dword ptr [rbp - 0xb8]
0x80d5:	mov	rdx, qword ptr [rbp - 0x368]
0x80dc:	and	eax, 0xf000
0x80e1:	cmp	eax, 0xa000
0x80e6:	jne	0x71d2


0x80cf:	mov	eax, dword ptr [rbp - 0xb8]
0x80d5:	mov	rdx, qword ptr [rbp - 0x368]
0x80dc:	and	eax, 0xf000
0x80e1:	cmp	eax, 0xa000
0x80e6:	jne	0x71d2


0x80ec:	mov	eax, dword ptr [rbp - 0x148]
0x80f2:	and	eax, 0xf000
0x80f7:	cmp	eax, 0xa000
0x80fc:	jne	0x71d2


0x8102:	cmp	byte ptr [rbx + 0x15], 0
0x8106:	je	0x71d2


0x810c:	jmp	0x706e


0x4450:	test	eax, eax
0x4452:	jne	0x42e8


0x4458:	cmp	byte ptr [rip + 0x218bb1], 0
0x445f:	je	0x446b


0x446b:	mov	byte ptr [rip + 0x218b9e], 0
0x4472:	call	0x2950


0x4461:	cmp	byte ptr [rbp], 0x2f
0x4465:	je	0x47d1


0x47d1:	movzx	edx, byte ptr [rbp + 1]
0x47d5:	lea	rax, [rbp + 1]
0x47d9:	cmp	dl, 0x2f
0x47dc:	jne	0x47ec


0x47ec:	test	dl, dl
0x47ee:	je	0x446b


0x47e0:	add	rax, 1
0x47e4:	movzx	edx, byte ptr [rax]
0x47e7:	cmp	dl, 0x2f
0x47ea:	je	0x47e0


0x47f4:	mov	rdx, rax
0x47f7:	jmp	0x47fe


0x47fe:	add	rdx, 1
0x4802:	movzx	ecx, byte ptr [rdx]
0x4805:	test	cl, cl
0x4807:	jne	0x47f9


0x4809:	lea	rbp, [rax - 1]
0x480d:	sub	rdx, rbp
0x4810:	lea	rdi, [rdx + 2]
0x4814:	mov	r12, rdx
0x4817:	call	0x2df0


0x47f9:	cmp	cl, 0x2f
0x47fc:	je	0x4809


0x1194a:	test	eax, eax
0x1194c:	jne	0x118b0


0x11952:	cmp	qword ptr [rsp + 8], 0
0x11958:	jne	0x11809


0x1195e:	jmp	0x11820


0x118f2:	test	eax, eax
0x118f4:	jne	0x118b0


0x118f6:	mov	rdx, qword ptr [rsp + 8]
0x118fb:	cmp	qword ptr [rdx + 8], 0x3ffffffe
0x11903:	je	0x11968


0x11968:	mov	rax, qword ptr [rsp + 0x80]
0x11970:	mov	rcx, qword ptr [rsp + 0x78]
0x11975:	mov	ebx, 3
0x1197a:	mov	qword ptr [rdx], rcx
0x1197d:	mov	qword ptr [rdx + 8], rax
0x11981:	jmp	0x117be


0x11905:	cmp	qword ptr [rdx + 0x18], 0x3ffffffe
0x1190d:	mov	ebx, 3
0x11912:	jne	0x117be


0x11918:	mov	rax, qword ptr [rsp + 0x90]
0x11920:	mov	rcx, qword ptr [rsp + 0x88]
0x11928:	mov	qword ptr [rdx + 0x18], rax
0x1192c:	mov	qword ptr [rdx + 0x10], rcx
0x11930:	jmp	0x117be


0x118a7:	test	eax, eax
0x118a9:	je	0x11820


0x938f:	test	eax, eax
0x9391:	je	0x8a0a


0x9397:	mov	rsi, qword ptr [rbp - 0x308]
0x939e:	jmp	0x6505


0x61fd:	test	eax, eax
0x61ff:	movzx	r8d, byte ptr [rbp - 0x328]
0x6207:	je	0x8252


0x8252:	mov	rdi, qword ptr [rbx + 0x40]
0x8256:	mov	rsi, qword ptr [rbp - 0x308]
0x825d:	mov	rdx, r12
0x8260:	call	0xb500


0x8265:	movzx	r8d, byte ptr [rbp - 0x328]
0x826d:	jmp	0x620d


0x7882:	test	eax, eax
0x7884:	jne	0x6070


0x788a:	mov	rcx, qword ptr [rbp - 0x358]
0x7891:	mov	rdx, rcx
0x7894:	jmp	0x5fea


0x64f5:	test	eax, eax
0x64f7:	mov	rsi, r12
0x64fa:	setne	al
0x64fd:	test	al, al
0x64ff:	je	0x5d0c


0x449d:	test	eax, eax
0x449f:	jne	0x42ca


0x44a5:	lea	rdx, [rsp + 0x140]
0x44ad:	mov	rsi, rbp
0x44b0:	mov	edi, 1
0x44b5:	call	0x2b00


0x44ba:	test	eax, eax
0x44bc:	jne	0x42ca


0x44c2:	mov	eax, dword ptr [rsp + 0xc8]
0x44c9:	mov	edx, eax
0x44cb:	and	edx, 0xf000
0x44d1:	cmp	edx, 0x8000
0x44d7:	jne	0x42ca


0x44dd:	mov	edx, dword ptr [rsp + 0x158]
0x44e4:	mov	ecx, edx
0x44e6:	and	ecx, 0xf000
0x44ec:	cmp	ecx, 0x8000
0x44f2:	jne	0x42ca


0x44f8:	test	eax, 0xffff0e00
0x44fd:	jne	0x42ca


0x4503:	test	edx, 0xffff0e00
0x4509:	jne	0x42ca


0x450f:	mov	rax, qword ptr [rsp + 0x170]
0x4517:	cmp	qword ptr [rsp + 0xe0], rax
0x451f:	jne	0x42ca


0x4525:	and	edx, 0xfff
0x452b:	cmp	r13d, edx
0x452e:	jne	0x42ca


0x4534:	mov	eax, dword ptr [rip + 0x21ac16]
0x453a:	cmp	eax, -1
0x453d:	je	0x48de


0x48de:	call	0x2950


0x4543:	cmp	eax, dword ptr [rsp + 0x15c]
0x454a:	jne	0x42ca


0x4550:	mov	eax, dword ptr [rip + 0x21abee]
0x4556:	cmp	eax, -1
0x4559:	je	0x48a5


0x48a5:	call	0x2950


0x455f:	cmp	eax, dword ptr [rsp + 0x160]
0x4566:	jne	0x42ca


0x456c:	cmp	dword ptr [rip + 0x21abed], 0
0x4573:	je	0x457f


0x457f:	xor	esi, esi
0x4581:	xor	eax, eax
0x4583:	mov	rdi, r12
0x4586:	call	0x2f60


0x4575:	cmp	byte ptr [rbx + 0x25], 0
0x4579:	jne	0x490a


0x490a:	call	0x2950


0x458b:	test	eax, eax
0x458d:	mov	r13d, eax
0x4590:	js	0x42ca


0x4596:	xor	esi, esi
0x4598:	xor	eax, eax
0x459a:	mov	rdi, rbp
0x459d:	call	0x2f60


0x45a2:	test	eax, eax
0x45a4:	mov	r14d, eax
0x45a7:	lea	r15, [rip + 0x218b92]
0x45ae:	js	0x48d1


0x48d1:	mov	edi, r13d
0x48d4:	call	0x2c30


0x45b4:	mov	edx, 0x1000
0x45b9:	mov	rsi, r15
0x45bc:	mov	edi, r13d
0x45bf:	call	0xb8b0


0x45c4:	test	rax, rax
0x45c7:	mov	rcx, rax
0x45ca:	je	0x4313


0x4313:	mov	edi, r13d
0x4316:	call	0x2c30


0x45d0:	lea	rsi, [rip + 0x219b69]
0x45d7:	mov	edx, 0x1000
0x45dc:	mov	edi, r14d
0x45df:	mov	qword ptr [rsp + 8], rcx
0x45e4:	call	0xb8b0


0x45e9:	mov	rcx, qword ptr [rsp + 8]
0x45ee:	cmp	rax, rcx
0x45f1:	jne	0x4609


0x45f3:	lea	rsi, [rip + 0x219b46]
0x45fa:	mov	rdx, rax
0x45fd:	mov	rdi, r15
0x4600:	call	0x2c90


0x4609:	mov	edi, r13d
0x460c:	call	0x2c30


0x4605:	test	eax, eax
0x4607:	je	0x45b4


0x1068b:	mov	ebx, eax
0x1068d:	call	0x2950


0x10692:	test	ebx, ebx
0x10694:	je	0x106b0


0x106b0:	mov	dword ptr [rax], 0x11
0x106b6:	mov	eax, 0xffffffff
0x106bb:	mov	rcx, qword ptr [rsp + 0x98]
0x106c3:	xor	rcx, qword ptr fs:[0x28]
0x106cc:	jne	0x106d7


0x10696:	mov	edx, dword ptr [rax]
0x10698:	cmp	edx, 0x4b
0x1069b:	je	0x106b0


0x106ce:	add	rsp, 0xa0
0x106d5:	pop	rbx
0x106d6:	ret	


0x106d7:	call	0x2b30


0x1069d:	xor	eax, eax
0x1069f:	cmp	edx, 2
0x106a2:	setne	al
0x106a5:	neg	eax
0x106a7:	jmp	0x106bb


0x106bb:	mov	rcx, qword ptr [rsp + 0x98]
0x106c3:	xor	rcx, qword ptr fs:[0x28]
0x106cc:	jne	0x106d7


0x490f:	mov	dword ptr [rax], 0x5f
0x4915:	jmp	0x42ca


0x48aa:	mov	dword ptr [rax], 0
0x48b0:	mov	r13, rax
0x48b3:	call	0x2dc0


0x2dc0:	jmp	qword ptr [rip + 0x21a082]




0x48e3:	mov	dword ptr [rax], 0
0x48e9:	mov	r13, rax
0x48ec:	call	0x2b40


0x2b40:	jmp	qword ptr [rip + 0x21a1c2]




0x4477:	mov	dword ptr [rax], 0x5f
0x447d:	jmp	0x42e8


0xb98d:	mov	dword ptr [rax], 0x1c
0xb993:	add	rsp, 8
0xb997:	mov	rax, r12
0xb99a:	pop	rbx
0xb99b:	pop	rbp
0xb99c:	pop	r12
0xb99e:	pop	r13
0xb9a0:	ret	


0xf9e3:	mov	eax, dword ptr [rax]
0xf9e5:	cmp	eax, 4
0xf9e8:	je	0xf9c8


0xf9c8:	mov	rdx, rbx
0xf9cb:	mov	rsi, r12
0xf9ce:	mov	edi, r13d
0xf9d1:	call	0x2a20


0xf9ea:	cmp	eax, 0x16
0xf9ed:	jne	0xfa00


0xf9ef:	cmp	rbx, 0x7ff00000
0xf9f6:	jbe	0xfa00


0xf9f8:	mov	ebx, 0x7ff00000
0xf9fd:	jmp	0xf9c8


0xb90d:	mov	dword ptr [rax], 0
0xb913:	add	rsp, 8
0xb917:	mov	rax, r12
0xb91a:	pop	rbx
0xb91b:	pop	rbp
0xb91c:	pop	r12
0xb91e:	pop	r13
0xb920:	ret	


0xf983:	mov	eax, dword ptr [rax]
0xf985:	cmp	eax, 4
0xf988:	je	0xf968


0xf968:	mov	rdx, rbx
0xf96b:	mov	rsi, r12
0xf96e:	mov	edi, r13d
0xf971:	call	0x2c80


0xf98a:	cmp	rbx, 0x7ff00000
0xf991:	jbe	0xf9a0


0xf993:	cmp	eax, 0x16
0xf996:	jne	0xf9a0


0xf998:	mov	ebx, 0x7ff00000
0xf99d:	jmp	0xf968


0x5474:	cmp	dword ptr [rax], 4
0x5477:	je	0x5446


0x5479:	mov	rsi, qword ptr [rsp + 0x58]
0x547e:	mov	edi, 4
0x5483:	mov	rbx, rax
0x5486:	xor	r15d, r15d
0x5489:	call	0xf3f0


0xf736:	test	ebx, ebx
0xf738:	js	0xf770


0xf770:	mov	r9, rax
0xf773:	mov	eax, dword ptr [rax]
0xf775:	lea	ecx, [rax - 0x16]
0xf778:	and	ecx, 0xffffffef
0xf77b:	setne	bl
0xf77e:	cmp	eax, 0x5f
0xf781:	setne	al
0xf784:	and	bl, al
0xf786:	jne	0xf73a


0xf73a:	mov	rdx, qword ptr [rsp + 0x138]
0xf742:	xor	rdx, qword ptr fs:[0x28]
0xf74b:	mov	eax, r15d
0xf74e:	jne	0xf945


0xf788:	test	ebp, ebp
0xf78a:	jne	0xf7e0


0xf754:	add	rsp, 0x148
0xf75b:	pop	rbx
0xf75c:	pop	rbp
0xf75d:	pop	r12
0xf75f:	pop	r13
0xf761:	pop	r14
0xf763:	pop	r15
0xf765:	ret	


0xf945:	call	0x2b30


0xf78c:	mov	rdi, r12
0xf78f:	mov	qword ptr [rsp + 8], r9
0xf794:	call	0x2af0


0xf7e0:	and	ebp, 0xfffffffe
0xf7e3:	je	0xf850


0xf850:	lea	rcx, [rsp + 0xa0]
0xf858:	mov	r8d, 0x100
0xf85e:	mov	rdx, r13
0xf861:	mov	esi, r14d
0xf864:	mov	edi, 1
0xf869:	mov	qword ptr [rsp + 8], r9
0xf86e:	call	0x2b80


0xf7e5:	mov	dword ptr [r9], 0x5f
0xf7ec:	mov	r15d, 0xffffffff
0xf7f2:	jmp	0xf73a


0xf873:	test	eax, eax
0xf875:	mov	r9, qword ptr [rsp + 8]
0xf87a:	je	0xf898


0xf898:	mov	dword ptr [r9], 0x11
0xf89f:	mov	r15d, 0xffffffff
0xf8a5:	jmp	0xf73a


0xf87c:	mov	eax, dword ptr [r9]
0xf87f:	cmp	eax, 0x4b
0xf882:	je	0xf898


0xf884:	cmp	eax, 2
0xf887:	je	0xf8f8


0xf8f8:	mov	ebx, 1
0xf8fd:	jmp	0xf78c


0xf889:	mov	r15d, 0xffffffff
0xf88f:	jmp	0xf73a


0x5f58:	test	eax, eax
0x5f5a:	jne	0x6ad0


0x5f60:	mov	rax, qword ptr [rbp - 0x320]
0x5f67:	mov	r14d, r12d
0x5f6a:	test	rax, rax
0x5f6d:	je	0x5f78


0x6ad0:	call	0x2950


0x5f6f:	mov	byte ptr [rax], 1
0x5f72:	nop	word ptr [rax + rax]
0x5f78:	cmp	byte ptr [rbx + 0x31], 0
0x5f7c:	jne	0x5f90


0x6ad5:	mov	r15d, dword ptr [rax]
0x6ad8:	jmp	0x5cab


0x13160:	or	ebx, 0xffffffff
0x13163:	mov	dword ptr [rax], 0x14
0x13169:	jmp	0x13104


0x4fb5:	mov	eax, dword ptr [rax]
0x4fb7:	cmp	eax, 0x26
0x4fba:	je	0x4fc1


0x4fc1:	xor	ebx, ebx
0x4fc3:	mov	eax, ebx
0x4fc5:	pop	rbx
0x4fc6:	ret	


0x4fbc:	cmp	eax, 0x5f
0x4fbf:	jne	0x4fa7


0x141c6:	mov	r12d, dword ptr [rax]
0x141c9:	mov	rbp, rax
0x141cc:	mov	edi, ebx
0x141ce:	call	0x2c30


0x141ed:	cmp	dword ptr [rax], 0x16
0x141f0:	jne	0x1405f


0x141f6:	xor	esi, esi
0x141f8:	xor	eax, eax
0x141fa:	mov	edx, r12d
0x141fd:	mov	edi, ebp
0x141ff:	call	0x2a00


0x14204:	test	eax, eax
0x14206:	mov	ebx, eax
0x14208:	js	0x140b0


0x1420e:	mov	dword ptr [rip + 0x20b51c], 0xffffffff
0x14218:	jmp	0x14193


0x13225:	mov	r12, rax
0x13228:	mov	r13d, dword ptr [rax]
0x1322b:	jmp	0x130f9


0x130f9:	mov	edi, ebp
0x130fb:	call	0x2c30


0x130e5:	mov	r13d, 0x14
0x130eb:	mov	r12, rax
0x130ee:	mov	dword ptr [rax], 0x14
0x130f4:	mov	ebx, 0xffffffff
0x130f9:	mov	edi, ebp
0x130fb:	call	0x2c30


0x8a98:	mov	r12, rax
0x8a9b:	movabs	rax, 0xff000000ff00
0x8aa5:	test	qword ptr [rbx + 0x20], rax
0x8aa9:	jne	0x9335


0x8aaf:	cmp	dword ptr [rbp - 0x328], 0
0x8ab6:	js	0x9342


0x9335:	cmp	dword ptr [rbp - 0x328], 0
0x933c:	jns	0x958e


0x9342:	movzx	r9d, byte ptr [rbx + 0x16]
0x9347:	test	r9b, r9b
0x934a:	jne	0x8f60


0x8abc:	mov	dword ptr [rbp - 0x378], 0
0x8ac6:	lea	rax, [rbp - 0xd0]
0x8acd:	mov	esi, dword ptr [rbp - 0x328]
0x8ad3:	mov	edi, 1
0x8ad8:	mov	rdx, rax
0x8adb:	mov	qword ptr [rbp - 0x368], rax
0x8ae2:	call	0x2e20


0x958e:	movzx	esi, byte ptr [rbx + 0x25]
0x9592:	mov	rdi, qword ptr [rbp - 0x308]
0x9599:	xor	edx, edx
0x959b:	mov	rcx, rbx
0x959e:	call	0x5890


0x9350:	mov	r8d, dword ptr [r12]
0x9354:	cmp	r8d, 2
0x9358:	jne	0x9077


0x8f60:	mov	rdi, qword ptr [rbp - 0x308]
0x8f67:	call	0x2960


0x935e:	cmp	byte ptr [rbx + 0x18], 0
0x9362:	jne	0x9077


0x9077:	mov	rsi, qword ptr [rbp - 0x308]
0x907e:	mov	edi, 4
0x9083:	mov	byte ptr [rbp - 0x330], r9b
0x908a:	mov	dword ptr [rbp - 0x328], r8d
0x9091:	call	0xf3f0


0x9368:	mov	dword ptr [rbp - 0x378], 0
0x9372:	jmp	0x900c


0x900c:	mov	eax, dword ptr [rbp - 0x378]
0x9012:	mov	rdi, qword ptr [rbp - 0x308]
0x9019:	mov	esi, 0xc1
0x901e:	not	eax
0x9020:	and	eax, dword ptr [rbp - 0x3a4]
0x9026:	mov	edx, eax
0x9028:	mov	dword ptr [rbp - 0x330], eax
0x902e:	xor	eax, eax
0x9030:	call	0xb490


0x8f6c:	test	eax, eax
0x8f6e:	jne	0x9ba6


0x8f74:	cmp	byte ptr [rbx + 0x2e], 0
0x8f78:	je	0x8fb3


0x9ba6:	mov	rsi, qword ptr [rbp - 0x308]
0x9bad:	mov	edi, 4
0x9bb2:	call	0xf3f0


0x8fb3:	movzx	r14d, byte ptr [rbx + 0x21]
0x8fb8:	mov	eax, dword ptr [rbp - 0x35c]
0x8fbe:	mov	dword ptr [rbp - 0x378], eax
0x8fc4:	test	r14b, r14b
0x8fc7:	je	0x900c


0x8f7a:	mov	rsi, qword ptr [rbp - 0x308]
0x8f81:	mov	edi, 4
0x8f86:	call	0xf3f0


0x8fc9:	mov	edx, dword ptr [rbp - 0x3a4]
0x8fcf:	mov	rsi, qword ptr [rbp - 0x308]
0x8fd6:	mov	r8, rbx
0x8fd9:	mov	rdi, qword ptr [rbp - 0x310]
0x8fe0:	mov	ecx, 1
0x8fe5:	call	0x57c0


0x8fea:	test	al, al
0x8fec:	mov	r8d, eax
0x8fef:	mov	qword ptr [rbp - 0x330], 0
0x8ffa:	je	0x7d78


0x7d78:	mov	edi, dword ptr [rbp - 0x320]
0x7d7e:	mov	byte ptr [rbp - 0x328], r8b
0x7d85:	call	0x2c30


0x8ae7:	test	eax, eax
0x8ae9:	mov	dword ptr [rbp - 0x348], eax
0x8aef:	jne	0x9696


0x8af5:	cmp	byte ptr [rbp - 0x338], 0
0x8afc:	je	0x91cf


0x9696:	mov	rsi, qword ptr [rbp - 0x308]
0x969d:	mov	edi, 4
0x96a2:	call	0xf3f0


0x91cf:	mov	qword ptr [rbp - 0x330], 0
0x91da:	cmp	byte ptr [rbx + 0x1f], 0
0x91de:	jne	0x95e6


0x8b02:	cmp	dword ptr [rbx + 0x38], 0
0x8b06:	jne	0x9964


0x91e4:	cmp	byte ptr [rbx + 0x1d], 0
0x91e8:	je	0x9244


0x95e6:	mov	rax, qword ptr [rbp - 0x238]
0x95ed:	mov	rsi, qword ptr [rbp - 0x308]
0x95f4:	lea	rdx, [rbp - 0x2a0]
0x95fb:	mov	edi, dword ptr [rbp - 0x328]
0x9601:	mov	qword ptr [rbp - 0x2a0], rax
0x9608:	mov	rax, qword ptr [rbp - 0x230]
0x960f:	mov	qword ptr [rbp - 0x298], rax
0x9616:	mov	rax, qword ptr [rbp - 0x228]
0x961d:	mov	qword ptr [rbp - 0x290], rax
0x9624:	mov	rax, qword ptr [rbp - 0x220]
0x962b:	mov	qword ptr [rbp - 0x288], rax
0x9632:	call	0x112e0


0x8b0c:	call	0x3010


0x9964:	mov	edx, dword ptr [rbp - 0x320]
0x996a:	mov	edi, dword ptr [rbp - 0x328]
0x9970:	xor	eax, eax
0x9972:	mov	esi, 0x40049409
0x9977:	call	0x2c10


0x9244:	cmp	byte ptr [rbx + 0x27], 0
0x9248:	je	0x9257


0x91ea:	mov	eax, dword ptr [rbp - 0xb4]
0x91f0:	cmp	dword ptr [rbp - 0x264], eax
0x91f6:	jne	0x9206


0x3010:	jmp	qword ptr [rip + 0x219f5a]


0x9257:	movabs	rax, 0xff0000000000ff
0x9261:	test	qword ptr [rbx + 0x18], rax
0x9265:	jne	0x953d


0x924a:	test	byte ptr [rbp - 0xb8], 0x80
0x9251:	je	0x9c7e


0x91f8:	mov	eax, dword ptr [rbp - 0xb0]
0x91fe:	cmp	dword ptr [rbp - 0x260], eax
0x9204:	je	0x9244


0x9206:	mov	r9, qword ptr [rbp - 0x368]
0x920d:	mov	edx, dword ptr [rbp - 0x328]
0x9213:	lea	rcx, [rbp - 0x280]
0x921a:	mov	rsi, qword ptr [rbp - 0x308]
0x9221:	movzx	r8d, r14b
0x9225:	mov	rdi, rbx
0x9228:	call	0x59e0




0x926b:	cmp	byte ptr [rbx + 0x2b], 0
0x926f:	jne	0x9d02


0x953d:	mov	r8d, dword ptr [rbp - 0x340]
0x9544:	mov	ecx, dword ptr [rbp - 0x328]
0x954a:	mov	rdx, qword ptr [rbp - 0x308]
0x9551:	mov	esi, dword ptr [rbp - 0x320]
0x9557:	mov	rdi, qword ptr [rbp - 0x310]
0x955e:	call	0xa740


0x9c7e:	call	0x2c00


0x9275:	mov	r12d, r14d
0x9278:	and	r12b, byte ptr [rbx + 0x20]
0x927c:	jne	0x9b77


0x9d02:	mov	edx, dword ptr [rbx + 0x10]
0x9d05:	mov	esi, dword ptr [rbp - 0x328]
0x9d0b:	mov	rdi, qword ptr [rbp - 0x308]
0x9d12:	call	0xa7d0


0x9282:	cmp	dword ptr [rbp - 0x378], 0
0x9289:	mov	r8d, 1
0x928f:	je	0x8eb5


0x9b77:	call	0x5bf0


0x8eb5:	mov	edi, dword ptr [rbp - 0x328]
0x8ebb:	mov	byte ptr [rbp - 0x338], r8b
0x8ec2:	call	0x2c30


0x9295:	mov	byte ptr [rbp - 0x338], r8b
0x929c:	call	0x5bf0


0x92a1:	not	eax
0x92a3:	test	dword ptr [rbp - 0x378], eax
0x92a9:	movzx	r8d, byte ptr [rbp - 0x338]
0x92b1:	je	0x8eb5


0x92b7:	mov	edx, dword ptr [rbp - 0x3a4]
0x92bd:	mov	rsi, qword ptr [rbp - 0x308]
0x92c4:	mov	edi, dword ptr [rbp - 0x328]
0x92ca:	call	0x30e0


0x92cf:	test	eax, eax
0x92d1:	movzx	r8d, byte ptr [rbp - 0x338]
0x92d9:	je	0x8eb5


0x92df:	mov	rsi, qword ptr [rbp - 0x308]
0x92e6:	mov	edi, 4
0x92eb:	call	0xf3f0


0x9b7c:	mov	esi, dword ptr [rbp - 0x328]
0x9b82:	not	eax
0x9b84:	mov	rdi, qword ptr [rbp - 0x308]
0x9b8b:	mov	edx, eax
0x9b8d:	mov	r14d, r12d
0x9b90:	and	edx, 0x1b6
0x9b96:	call	0xa7d0


0x9c83:	test	eax, eax
0x9c85:	je	0x9257


0x9c8b:	mov	rsi, qword ptr [rbp - 0x308]
0x9c92:	mov	edi, dword ptr [rbp - 0x328]
0x9c98:	mov	edx, 0x180
0x9c9d:	call	0x30e0


0x9ca2:	test	eax, eax
0x9ca4:	jne	0x9257


0x9caa:	mov	edx, dword ptr [rbp - 0x378]
0x9cb0:	mov	rsi, qword ptr [rbp - 0x308]
0x9cb7:	mov	edi, dword ptr [rbp - 0x328]
0x9cbd:	not	edx
0x9cbf:	and	edx, dword ptr [rbp - 0x3a4]
0x9cc5:	call	0x30e0


0x9cca:	jmp	0x9257


0x9563:	test	eax, eax
0x9565:	mov	r8d, 1
0x956b:	je	0x8eb5


0x9571:	jmp	0x9327


0x9327:	movzx	r8d, byte ptr [rbx + 0x24]
0x932c:	xor	r8d, 1
0x9330:	jmp	0x8eb5


0x922d:	cmp	eax, -1
0x9230:	je	0x8eb2


0x8eb2:	xor	r8d, r8d
0x8eb5:	mov	edi, dword ptr [rbp - 0x328]
0x8ebb:	mov	byte ptr [rbp - 0x338], r8b
0x8ec2:	call	0x2c30


0x9236:	test	eax, eax
0x9238:	jne	0x9244


0x923a:	and	dword ptr [rbp - 0x340], 0xfffff1ff
0x9244:	cmp	byte ptr [rbx + 0x27], 0
0x9248:	je	0x9257


0x997c:	test	eax, eax
0x997e:	je	0x91cf


0x9984:	cmp	dword ptr [rbx + 0x38], 2
0x9988:	jne	0x8b0c


0x998e:	mov	rdx, qword ptr [rbp - 0x310]
0x9995:	mov	esi, 4
0x999a:	mov	edi, 1
0x999f:	call	0xf2d0


0x9637:	test	eax, eax
0x9639:	je	0x91e4


0x963f:	mov	rsi, qword ptr [rbp - 0x308]
0x9646:	mov	edi, 4
0x964b:	call	0xf3f0


0x9043:	mov	r8d, dword ptr [rax]
0x9046:	mov	r12, rax
0x9049:	mov	eax, r14d
0x904c:	shr	eax, 0x1f
0x904f:	cmp	r8d, 0x11
0x9053:	sete	dl
0x9056:	and	dl, al
0x9058:	mov	r14d, edx
0x905b:	je	0x9462


0x9462:	mov	eax, dword ptr [rbp - 0x328]
0x9468:	shr	eax, 0x1f
0x946b:	cmp	r8d, 0x15
0x946f:	sete	dl
0x9472:	and	dl, al
0x9474:	mov	r9d, edx
0x9477:	je	0x9576


0x9061:	cmp	byte ptr [rbx + 0x18], 0
0x9065:	mov	r8d, 0x11
0x906b:	je	0x93f5


0x9576:	cmp	dword ptr [rbp - 0x328], 0
0x957d:	mov	r14d, 1
0x9583:	jns	0x8ac6


0x947d:	mov	rsi, qword ptr [rbp - 0x308]
0x9484:	mov	r8d, 0x15
0x948a:	cmp	byte ptr [rsi], 0
0x948d:	mov	rdi, rsi
0x9490:	je	0x9077


0x93f5:	mov	rsi, qword ptr [rbp - 0x308]
0x93fc:	lea	rdx, [rbp - 0xd0]
0x9403:	mov	edi, 1
0x9408:	mov	dword ptr [rbp - 0x348], r8d
0x940f:	call	0x2b00


0x9071:	mov	r9d, 1
0x9077:	mov	rsi, qword ptr [rbp - 0x308]
0x907e:	mov	edi, 4
0x9083:	mov	byte ptr [rbp - 0x330], r9b
0x908a:	mov	dword ptr [rbp - 0x328], r8d
0x9091:	call	0xf3f0


0x9589:	jmp	0x9071


0x8ac6:	lea	rax, [rbp - 0xd0]
0x8acd:	mov	esi, dword ptr [rbp - 0x328]
0x8ad3:	mov	edi, 1
0x8ad8:	mov	rdx, rax
0x8adb:	mov	qword ptr [rbp - 0x368], rax
0x8ae2:	call	0x2e20


0x9496:	xor	eax, eax
0x9498:	or	rcx, 0xffffffffffffffff
0x949c:	xor	r8d, r8d
0x949f:	repne scasb	al, byte ptr [rdi]


0x949f:	repne scasb	al, byte ptr [rdi]


0x94a1:	mov	rax, rcx
0x94a4:	not	rax
0x94a7:	cmp	byte ptr [rsi + rax - 2], 0x2f
0x94ac:	setne	r8b
0x94b0:	add	r8d, 0x14
0x94b4:	jmp	0x9077


0x9414:	test	eax, eax
0x9416:	mov	r8d, dword ptr [rbp - 0x348]
0x941d:	jne	0x9462


0x941f:	mov	eax, dword ptr [rbp - 0xb8]
0x9425:	and	eax, 0xf000
0x942a:	cmp	eax, 0xa000
0x942f:	jne	0x9462


0x9431:	movzx	r8d, byte ptr [rbx + 0x30]
0x9436:	test	r8b, r8b
0x9439:	je	0x9c27


0x9c27:	mov	rsi, qword ptr [rbp - 0x308]
0x9c2e:	mov	edi, 4
0x9c33:	mov	byte ptr [rbp - 0x328], r8b
0x9c3a:	call	0xf3f0


0x943f:	mov	edx, dword ptr [rbp - 0x330]
0x9445:	mov	rdi, qword ptr [rbp - 0x308]
0x944c:	mov	esi, 0x41
0x9451:	xor	eax, eax
0x9453:	call	0xb490


0x9458:	mov	r8d, dword ptr [r12]
0x945c:	mov	dword ptr [rbp - 0x328], eax
0x9462:	mov	eax, dword ptr [rbp - 0x328]
0x9468:	shr	eax, 0x1f
0x946b:	cmp	r8d, 0x15
0x946f:	sete	dl
0x9472:	and	dl, al
0x9474:	mov	r9d, edx
0x9477:	je	0x9576


0x14eb0:	mov	qword ptr [rbp - 0x3c8], rax
0x14eb7:	nop	word ptr [rax + rax]
0x14ec0:	mov	rdi, r15
0x14ec3:	call	0x30d0


0x14ec8:	jmp	0x143e3


0x143e3:	mov	rax, qword ptr [rbp - 0x420]
0x143ea:	test	rax, rax
0x143ed:	je	0x143f7


0x143f7:	mov	rax, qword ptr [rbp - 0x408]
0x143fe:	mov	rdi, qword ptr [rbp - 0x2b8]
0x14405:	add	rax, 0x20
0x14409:	cmp	rdi, rax
0x1440c:	je	0x14413


0x143ef:	mov	rdi, rax
0x143f2:	call	0x30d0


0x14413:	mov	rax, qword ptr [rbp - 0x410]
0x1441a:	mov	rdi, qword ptr [rbp - 0x3a8]
0x14421:	add	rax, 0x10
0x14425:	cmp	rdi, rax
0x14428:	je	0x1442f


0x1440e:	call	0x30d0


0x1442f:	mov	rax, qword ptr [rbp - 0x3c8]
0x14436:	xor	r15d, r15d
0x14439:	mov	dword ptr [rax], 0xc
0x1443f:	mov	rdi, qword ptr [rbp - 0x38]
0x14443:	xor	rdi, qword ptr fs:[0x28]
0x1444c:	mov	rax, r15
0x1444f:	jne	0x15357


0x1442a:	call	0x30d0


0x14755:	mov	qword ptr [rbp - 0x3c8], rax
0x1475c:	mov	eax, dword ptr [rax]
0x1475e:	mov	qword ptr [rbp - 0x3f8], rbx
0x14765:	mov	dword ptr [rbp - 0x424], eax
0x1476b:	nop	dword ptr [rax + rax]
0x14770:	mov	rax, qword ptr [rbp - 0x3c8]
0x14777:	mov	rbx, r12
0x1477a:	mov	r10d, 0x7fffffff
0x14780:	sub	rbx, r14
0x14783:	mov	dword ptr [rbp - 0x3bc], 0xffffffff
0x1478d:	cmp	rbx, 0x7fffffff
0x14794:	mov	dword ptr [rax], 0
0x1479a:	mov	eax, dword ptr [rbp - 0x3d0]
0x147a0:	cmovbe	r10, rbx
0x147a4:	cmp	eax, 0x11
0x147a7:	ja	0x15186


0x147ad:	lea	rsi, [rip + 0x46ec]
0x147b4:	movsxd	rax, dword ptr [rsi + rax*4]
0x147b8:	add	rax, rsi
0x147bb:	jmp	rax


0x10080:	mov	eax, dword ptr [rax]
0x10082:	mov	dword ptr [rbp + 4], eax
0x10085:	test	ebx, ebx
0x10087:	js	0x100c8


0x100cd:	cmp	dword ptr [rax], 0xd
0x100d0:	jne	0x102a0


0x102a0:	mov	r14d, 0xffffffff
0x102a6:	jmp	0x100b6


0x12998:	mov	dword ptr [rax], 0x4b
0x1299e:	mov	rdi, r13
0x129a1:	mov	ebx, 0xffffffff
0x129a6:	call	0x14250


0x1297f:	mov	r13d, dword ptr [rax]
0x12982:	mov	r12, rax
0x12985:	mov	rdi, rbp
0x12988:	call	0x30d0


0x1298d:	mov	dword ptr [r12], r13d
0x12991:	jmp	0x12946


0x10225:	mov	eax, dword ptr [rax]
0x10227:	cmp	eax, 0xd
0x1022a:	je	0x10248


0x10248:	mov	dword ptr [r12], 3
0x10250:	mov	dword ptr [r12 + 4], 0xffffffff
0x10259:	call	0x30a0


0x1022c:	cmp	eax, 0x74
0x1022f:	je	0x10248


0x10231:	mov	dword ptr [r12], 4
0x10239:	mov	dword ptr [r12 + 4], eax
0x1023e:	jmp	0x10124


0xa6cd:	mov	ecx, dword ptr [rsp + 0xc]
0xa6d1:	mov	r8d, dword ptr [rax]
0xa6d4:	jmp	0xa613


0xa577:	mov	r9d, dword ptr [rsp]
0xa57b:	mov	ecx, dword ptr [rax]
0xa57d:	jmp	0xa4b1


0xcfb9:	cmp	byte ptr [rsp + 0x18], 0
0xcfbe:	mov	r15, rax
0xcfc1:	mov	ebp, dword ptr [rax]
0xcfc3:	je	0xd260


0xd260:	mov	dword ptr [rsp + 8], 0xffffffff
0xd268:	mov	edx, 2
0xd26d:	jmp	0xd14e


0xcfc9:	test	ebp, ebp
0xcfcb:	je	0xd11c


0xd14e:	mov	r15, qword ptr [rsp]
0xd152:	lea	rcx, [rsp + 0x20]
0xd157:	mov	rdi, r14
0xd15a:	mov	rsi, r15
0xd15d:	call	0x10040


0xcfd1:	cmp	ebp, 2
0xcfd4:	setne	r12b
0xcfd8:	test	r13, r13
0xcfdb:	setne	al
0xcfde:	and	r12b, al
0xcfe1:	je	0xd06b


0xcfe7:	mov	rsi, qword ptr [rsp]
0xcfeb:	lea	rdx, [rsp + 0x20]
0xcff0:	mov	edi, 1
0xcff5:	call	0x2dd0


0xcffa:	test	eax, eax
0xcffc:	je	0xd240


0xd240:	mov	eax, dword ptr [rsp + 0x38]
0xd244:	and	eax, 0xf000
0xd249:	cmp	eax, 0x4000
0xd24e:	jne	0xd06b


0xd002:	cmp	ebp, 0x11
0xd005:	jne	0xd06b


0xd254:	jmp	0xd09d


0xd007:	mov	eax, dword ptr [r15]
0xd00a:	cmp	eax, 0x14
0xd00d:	je	0xd06b


0xd00f:	cmp	eax, 2
0xd012:	je	0xd06b


0xd014:	mov	rdi, rbx
0xd017:	xor	r12d, r12d
0xd01a:	call	0xf6c0


0xd162:	cmp	eax, -1
0xd165:	jl	0xd11c


0xd167:	test	eax, eax
0xd169:	lea	rax, [rip + 0xacf3]
0xd170:	mov	r9d, r12d
0xd173:	cmovne	rax, r15
0xd177:	sub	rsp, 8
0xd17b:	mov	edx, dword ptr [rsp + 0x108]
0xd182:	mov	rsi, rax
0xd185:	push	rdx
0xd186:	mov	r8d, dword ptr [rsp + 0x120]
0xd18e:	mov	ecx, dword ptr [rsp + 0x118]
0xd195:	mov	edx, dword ptr [rsp + 0x18]
0xd199:	mov	edi, dword ptr [rsp + 0x30]
0xd19d:	call	0x13020


0xd1a2:	test	eax, eax
0xd1a4:	pop	rdx
0xd1a5:	pop	rcx
0xd1a6:	je	0xd11c


0xd1ac:	test	ebp, ebp
0xd1ae:	je	0xd278


0xd278:	call	0x2950


0xd1b4:	cmp	ebp, 2
0xd1b7:	je	0xd06b


0xd1bd:	test	r13, r13
0xd1c0:	je	0xd06b


0xd1c6:	call	0x2950


0xd1cb:	cmp	dword ptr [rax], 0x14
0xd1ce:	mov	r12, rax
0xd1d1:	je	0xd06b


0xd1d7:	mov	rdi, rbx
0xd1da:	call	0xf6c0


0xd27d:	mov	r12, rax
0xd280:	jmp	0xd1d7


0x119a0:	cmp	dword ptr [rax], 0x26
0x119a3:	jne	0x118c6


0x119a9:	jmp	0x117e6


0x117e0:	mov	dword ptr [rax], 0x26
0x117e6:	test	ebx, ebx
0x117e8:	mov	dword ptr [rip + 0x20df36], 0xffffffff
0x117f2:	je	0x11895


0x5ad5:	mov	ebx, dword ptr [rax]
0x5ad7:	mov	r14, rax
0x5ada:	cmp	ebx, 1
0x5add:	je	0x5ae8


0x5ae8:	mov	edx, r12d
0x5aeb:	mov	esi, 0xffffffff
0x5af0:	mov	rdi, r13
0x5af3:	call	0x2e40


0x5adf:	cmp	ebx, 0x16
0x5ae2:	jne	0x5a6a


0x5a6a:	mov	rdi, rbp
0x5a6d:	call	0x59b0


0x5af8:	mov	dword ptr [r14], ebx
0x5afb:	jmp	0x5a6a


0x5a50:	mov	r14d, dword ptr [rax]
0x5a53:	mov	r15, rax
0x5a56:	cmp	r14d, 1
0x5a5a:	je	0x5bc8


0x5bc8:	mov	edx, r12d
0x5bcb:	mov	esi, 0xffffffff
0x5bd0:	mov	edi, ebx
0x5bd2:	call	0x2f80


0x5a60:	cmp	r14d, 0x16
0x5a64:	je	0x5bc8


0x5bd7:	mov	dword ptr [r15], r14d
0x5bda:	jmp	0x5a6a


0xa725:	mov	r8d, dword ptr [rax]
0xa728:	jmp	0xa688


0xa5c5:	mov	ecx, dword ptr [rax]
0xa5c7:	jmp	0xa530


0x11730:	cmp	dword ptr [rax], 0x26
0x11733:	jne	0x116af


0x11739:	jmp	0x11388


0x11382:	mov	dword ptr [rax], 0x26
0x11388:	test	r13d, r13d
0x1138b:	mov	dword ptr [rip + 0x20e397], 0xffffffff
0x11395:	mov	dword ptr [rip + 0x20e389], 0xffffffff
0x1139f:	jne	0x11500


0xce92:	cmp	dword ptr [rax], 2
0xce95:	jne	0xcea0


0xce97:	mov	dword ptr [rax], r15d
0xce9a:	nop	word ptr [rax + rax]
0xcea0:	movsxd	rax, ebp
0xcea3:	jmp	0xce3e


0x100a5:	mov	r12d, dword ptr [rax]
0x100a8:	mov	rbp, rax
0x100ab:	mov	edi, ebx
0x100ad:	call	0x2c30


0x1028a:	mov	eax, dword ptr [rax]
0x1028c:	mov	dword ptr [r12 + 4], eax
0x10291:	jmp	0x10124


0x6495:	mov	r9, rax
0x6498:	mov	eax, dword ptr [rax]
0x649a:	cmp	eax, 0x28
0x649d:	je	0x6a70


0x6a70:	cmp	byte ptr [rbx + 0x16], 0
0x6a74:	jne	0x6e00


0x64a3:	cmp	eax, 2
0x64a6:	mov	r8d, 1
0x64ac:	jne	0x6a7a


0x6a7a:	mov	rsi, qword ptr [rbp - 0x308]
0x6a81:	mov	edi, 4
0x6a86:	mov	qword ptr [rbp - 0x310], r9
0x6a8d:	xor	r12d, r12d
0x6a90:	call	0xf3f0


0x6e00:	xor	r8d, r8d
0x6e03:	jmp	0x64b2


0x64b2:	xor	r9d, r9d
0x64b5:	cmp	r15d, 0x11
0x64b9:	je	0x5e1b


0x5e1b:	cmp	dword ptr [rbx + 8], 2
0x5e1f:	je	0x5e3f


0x64bf:	mov	r14d, r8d
0x64c2:	mov	qword ptr [rbp - 0x350], 0
0x64cd:	jmp	0x5fae


0x659f:	mov	r15d, dword ptr [rax]
0x65a2:	test	r15d, r15d
0x65a5:	je	0x642a


0x7652:	cmp	dword ptr [rax], 2
0x7655:	mov	r14, rax
0x7658:	je	0x6611


0x765e:	mov	rdx, qword ptr [rbp - 0x308]
0x7665:	mov	esi, 4
0x766a:	mov	edi, 1
0x766f:	call	0xf2d0


0x65ef:	cmp	dword ptr [rax], 2
0x65f2:	mov	r14, rax
0x65f5:	jne	0x765e


0x8024:	cmp	dword ptr [rax], 2
0x8027:	mov	r15, rax
0x802a:	movzx	r9d, byte ptr [rbp - 0x350]
0x8032:	je	0x8393


0x8038:	mov	rsi, r14
0x803b:	mov	edi, 4
0x8040:	call	0xf3f0


0x143ca:	mov	qword ptr [rbp - 0x3c8], rax
0x143d1:	cmp	r15, qword ptr [rbp - 0x3e8]
0x143d8:	je	0x143e3


0x143da:	test	r15, r15
0x143dd:	jne	0x14ec0


0x14ec0:	mov	rdi, r15
0x14ec3:	call	0x30d0


0x151cd:	xor	r15d, r15d
0x151d0:	mov	dword ptr [rax], 0x16
0x151d6:	jmp	0x1443f


0x14d2d:	mov	qword ptr [rbp - 0x3c8], rax
0x14d34:	jmp	0x143f7


0x4176:	mov	dword ptr [rax], 0x5f
0x417c:	add	rsp, 8
0x4180:	mov	eax, ebp
0x4182:	pop	rbx
0x4183:	pop	rbp
0x4184:	ret	


0x62a5:	cmp	dword ptr [rax], 0x26
0x62a8:	je	0x62f8


0x1198b:	mov	dword ptr [rax], 0x26
0x11991:	jmp	0x118b0


0xd22f:	mov	ebp, dword ptr [rax]
0xd231:	jmp	0xd06b


0x16131:	mov	dword ptr [rax], 0xc
0x16137:	mov	eax, 0xffffffff
0x1613c:	jmp	0x156c2


0x156c2:	add	rsp, 0x58
0x156c6:	pop	rbx
0x156c7:	pop	rbp
0x156c8:	pop	r12
0x156ca:	pop	r13
0x156cc:	pop	r14
0x156ce:	pop	r15
0x156d0:	ret	


0x15e93:	mov	dword ptr [rax], 0x16
0x15e99:	mov	eax, 0xffffffff
0x15e9e:	jmp	0x156c2


0x116ed:	mov	dword ptr [rax], 9
0x116f3:	mov	ebp, 0xffffffff
0x116f8:	jmp	0x115f7


0x587d:	mov	dword ptr [rax], 0x5f
0x5883:	add	rsp, 8
0x5887:	mov	eax, ebx
0x5889:	pop	rbx
0x588a:	pop	rbp
0x588b:	pop	r12
0x588d:	pop	r13
0x588f:	ret	


0x112b9:	mov	dword ptr [rax], 0x16
0x112bf:	mov	eax, 0xffffffff
0x112c4:	add	rsp, 8
0x112c8:	ret	


0x420c:	mov	dword ptr [rax], 0x5f
0x4212:	mov	esi, 0x1ed
0x4217:	mov	rdi, rbp
0x421a:	call	0x29c0


0x57dc:	cmp	byte ptr [rbp + 0x23], 0
0x57e0:	mov	r12, rax
0x57e3:	jne	0x5860


0x57e5:	mov	rsi, r13
0x57e8:	mov	edi, 4
0x57ed:	mov	dword ptr [r12], 0x5f
0x57f5:	call	0xf3f0


0x5860:	movzx	ebx, byte ptr [rbp + 0x26]
0x5864:	test	bl, bl
0x5866:	jne	0x57e5


0x586c:	mov	dword ptr [rax], 0x5f
0x5872:	jmp	0x5827


0x5827:	add	rsp, 8
0x582b:	xor	ebx, 1
0x582e:	mov	eax, ebx
0x5830:	pop	rbx
0x5831:	pop	rbp
0x5832:	pop	r12
0x5834:	pop	r13
0x5836:	ret	


0xfc67:	xor	r13d, r13d
0xfc6a:	mov	rbp, rax
0xfc6d:	mov	qword ptr [rsp + 0x28], 0
0xfc76:	mov	qword ptr [rsp + 0x10], 0
0xfc7f:	mov	qword ptr [rsp + 0x20], 0
0xfc88:	jmp	0xfc94


0xfc94:	mov	dword ptr [rbp], 0
0xfc9b:	mov	rdi, rbx
0xfc9e:	call	0x2de0


0x2de0:	jmp	qword ptr [rip + 0x21a072]




0x122e8:	mov	dword ptr [rax], 0
0x122ee:	mov	r12, rax
0x122f1:	movzx	ebx, byte ptr [rbp]
0x122f5:	call	0x30c0


0x30c0:	jmp	qword ptr [rip + 0x219f02]




0x138a9:	mov	rcx, qword ptr [rsp + 8]
0x138ae:	mov	r13, rax
0x138b1:	jmp	0x138d6


0x138d6:	mov	rdx, rbp
0x138d9:	mov	rdi, rbx
0x138dc:	mov	esi, 1
0x138e1:	call	0x2a40


0x2a40:	jmp	qword ptr [rip + 0x21a242]




0x30fc:	lea	rsi, [rip + 0x145ad]
0x3103:	mov	rbx, rax
0x3106:	mov	edx, 5
0x310b:	xor	edi, edi
0x310d:	mov	dword ptr [rax], 0x5f
0x3113:	call	0x2ad0


0x589f:	cmp	byte ptr [rbp + 0x23], 0
0x58a3:	mov	rbx, rax
0x58a6:	je	0x58ae


0x58ae:	mov	rdx, r12
0x58b1:	mov	dword ptr [rbx], 0x5f
0x58b7:	mov	esi, 4
0x58bc:	xor	edi, edi
0x58be:	call	0xf2d0


0x58a8:	cmp	byte ptr [rbp + 0x26], 0
0x58ac:	je	0x58f8


0x58f8:	mov	dword ptr [rax], 0x5f
0x58fe:	xor	eax, eax
0x5900:	pop	rbx
0x5901:	pop	rbp
0x5902:	pop	r12
0x5904:	ret	


0x95a3:	test	al, al
0x95a5:	mov	r8d, eax
0x95a8:	jne	0x8abc


0x95ae:	cmp	byte ptr [rbx + 0x26], 0
0x95b2:	mov	qword ptr [rbp - 0x330], 0
0x95bd:	jne	0x8eb5


0x95c3:	jmp	0x8abc


0x86f5:	test	al, al
0x86f7:	jne	0x812c


0x86fd:	cmp	byte ptr [rbx + 0x26], 0
0x8701:	jne	0x6bb0


0x8707:	jmp	0x812c


0x7f23:	test	al, al
0x7f25:	mov	r15d, eax
0x7f28:	movzx	r8d, byte ptr [rbp - 0x328]
0x7f30:	jne	0x61c2


0x7f36:	movzx	r14d, byte ptr [rbx + 0x26]
0x7f3b:	test	r14b, r14b
0x7f3e:	jne	0x6bb0


0x7f44:	mov	r15d, r12d
0x7f47:	jmp	0x61c2


0x6fa6:	jmp	0x643e


0x59b9:	mov	edx, dword ptr [rax]
0x59bb:	cmp	edx, 1
0x59be:	sete	al
0x59c1:	cmp	edx, 0x16
0x59c4:	sete	dl
0x59c7:	or	al, dl
0x59c9:	je	0x59d2


0x59d2:	pop	rbx
0x59d3:	ret	


0x59cb:	movzx	eax, byte ptr [rbx + 0x1a]
0x59cf:	xor	eax, 1
0x59d2:	pop	rbx
0x59d3:	ret	


0x5a72:	mov	edx, eax
0x5a74:	xor	eax, eax
0x5a76:	test	dl, dl
0x5a78:	je	0x5b70


0x5b70:	mov	rsi, r13
0x5b73:	mov	edi, 4
0x5b78:	call	0xf3f0


0x5a7e:	add	rsp, 8
0x5a82:	pop	rbx
0x5a83:	pop	rbp
0x5a84:	pop	r12
0x5a86:	pop	r13
0x5a88:	pop	r14
0x5a8a:	pop	r15
0x5a8c:	ret	


0xeda1:	mov	r13, rax
0xeda4:	mov	eax, dword ptr [rax]
0xeda6:	test	r15d, r15d
0xeda9:	mov	rbx, qword ptr [rip + 0x20e2f0]
0xedb0:	mov	dword ptr [rsp + 0x18], eax
0xedb4:	js	0xef21


0xef21:	call	0x2940


0xedba:	cmp	dword ptr [rip + 0x20e2d7], r15d
0xedc1:	jg	0xee25


0xedc3:	cmp	r15d, 0x7fffffff
0xedca:	je	0xef26


0xee25:	mov	eax, dword ptr [rbp + 4]
0xee28:	shl	r15, 4
0xee2c:	sub	rsp, 8
0xee30:	add	rbx, r15
0xee33:	lea	r15, [rbp + 8]
0xee37:	mov	r8d, dword ptr [rbp]
0xee3b:	mov	r11, qword ptr [rbx]
0xee3e:	mov	r12, qword ptr [rbx + 8]
0xee42:	mov	rcx, r14
0xee45:	or	eax, 1
0xee48:	mov	dword ptr [rsp + 0x24], eax
0xee4c:	push	qword ptr [rbp + 0x30]
0xee4f:	mov	r9d, eax
0xee52:	push	qword ptr [rbp + 0x28]
0xee55:	push	r15
0xee57:	mov	rsi, r11
0xee5a:	mov	rdx, qword ptr [rsp + 0x28]
0xee5f:	mov	rdi, r12
0xee62:	mov	qword ptr [rsp + 0x30], r11
0xee67:	call	0xdb40


0xef26:	call	0x12260


0xedd0:	lea	r12d, [r15 + 1]
0xedd4:	lea	rax, [rip + 0x20e2d5]
0xeddb:	movsxd	rsi, r12d
0xedde:	shl	rsi, 4
0xede2:	cmp	rbx, rax
0xede5:	je	0xef00


0xef00:	xor	edi, edi
0xef02:	call	0x12070


0xedeb:	mov	rdi, rbx
0xedee:	call	0x12070


0xedf3:	mov	rbx, rax
0xedf6:	mov	qword ptr [rip + 0x20e2a3], rax
0xedfd:	movsxd	rdi, dword ptr [rip + 0x20e294]
0xee04:	mov	edx, r12d
0xee07:	xor	esi, esi
0xee09:	sub	edx, edi
0xee0b:	shl	rdi, 4
0xee0f:	movsxd	rdx, edx
0xee12:	add	rdi, rbx
0xee15:	shl	rdx, 4
0xee19:	call	0x2bf0


0x2bf0:	jmp	qword ptr [rip + 0x21a16a]




0xef07:	movdqa	xmm0, xmmword ptr [rip + 0x20e1a1]
0xef0f:	mov	rbx, rax
0xef12:	mov	qword ptr [rip + 0x20e187], rax
0xef19:	movups	xmmword ptr [rax], xmm0
0xef1c:	jmp	0xedfd


0xedfd:	movsxd	rdi, dword ptr [rip + 0x20e294]
0xee04:	mov	edx, r12d
0xee07:	xor	esi, esi
0xee09:	sub	edx, edi
0xee0b:	shl	rdi, 4
0xee0f:	movsxd	rdx, edx
0xee12:	add	rdi, rbx
0xee15:	shl	rdx, 4
0xee19:	call	0x2bf0


0xef3c:	mov	r12d, dword ptr [rax]
0xef3f:	mov	rbp, rax
0xef42:	lea	rax, [rip + 0x210797]
0xef49:	test	rbx, rbx
0xef4c:	mov	esi, 0x38
0xef51:	cmove	rbx, rax
0xef55:	mov	rdi, rbx
0xef58:	call	0x12210


0xf072:	mov	r12d, dword ptr [rax]
0xf075:	mov	rbp, rax
0xf078:	lea	rax, [rbx + 8]
0xf07c:	sub	rsp, 8
0xf080:	mov	r9d, dword ptr [rbx + 4]
0xf084:	push	qword ptr [rbx + 0x30]
0xf087:	mov	r8d, dword ptr [rbx]
0xf08a:	push	qword ptr [rbx + 0x28]
0xf08d:	mov	rdx, r15
0xf090:	push	rax
0xf091:	mov	rcx, qword ptr [rsp + 0x28]
0xf096:	mov	rsi, r14
0xf099:	mov	rdi, r13
0xf09c:	call	0xdb40


0xf0ef:	test	r12, r12
0xf0f2:	mov	r13, rax
0xf0f5:	mov	eax, dword ptr [rax]
0xf0f7:	sete	bpl
0xf0fb:	or	ebp, dword ptr [rbx + 4]
0xf0fe:	lea	r10, [rbx + 8]
0xf102:	sub	rsp, 8
0xf106:	mov	r8d, dword ptr [rbx]
0xf109:	mov	rcx, r15
0xf10c:	mov	dword ptr [rsp + 0x14], eax
0xf110:	push	qword ptr [rbx + 0x30]
0xf113:	mov	rdx, r14
0xf116:	push	qword ptr [rbx + 0x28]
0xf119:	push	r10
0xf11b:	xor	esi, esi
0xf11d:	mov	r9d, ebp
0xf120:	xor	edi, edi
0xf122:	mov	qword ptr [rsp + 0x40], r10
0xf127:	call	0xdb40


0x10739:	mov	qword ptr [rsp + 8], rax
0x1073e:	mov	eax, dword ptr [rax]
0x10740:	mov	rdi, r15
0x10743:	mov	dword ptr [rsp + 0x2c], eax
0x10747:	call	0x2af0


0x481c:	test	rax, rax
0x481f:	mov	r13, rax
0x4822:	je	0x446b


0x4828:	mov	rdx, r12
0x482b:	mov	rsi, rbp
0x482e:	mov	rdi, rax
0x4831:	call	0x2ea0


0x2ea0:	jmp	qword ptr [rip + 0x21a012]




0x14f7e:	test	rax, rax
0x14f81:	mov	rcx, rax
0x14f84:	movzx	edx, byte ptr [rbp - 0x3c8]
0x14f8b:	je	0x143c5


0x14f91:	test	r14, r14
0x14f94:	je	0x15130


0x15130:	mov	r15, rcx
0x15133:	jmp	0x1474b


0x14f9a:	test	dl, dl
0x14f9c:	je	0x15130


0x14fa2:	mov	rsi, r15
0x14fa5:	mov	rdx, r14
0x14fa8:	mov	rdi, rax
0x14fab:	call	0x2d80


0x14fb0:	mov	r15, rax
0x14fb3:	jmp	0x1474b


0x1500e:	test	rax, rax
0x15011:	mov	rcx, rax
0x15014:	movzx	edx, byte ptr [rbp - 0x3c8]
0x1501b:	je	0x143c5


0x15021:	test	r14, r14
0x15024:	je	0x15164


0x15164:	mov	r15, rcx
0x15167:	jmp	0x14cef


0x1502a:	test	dl, dl
0x1502c:	je	0x15164


0x15032:	mov	rsi, r15
0x15035:	mov	rdx, r14
0x15038:	mov	rdi, rax
0x1503b:	call	0x2d80


0x15040:	mov	r15, rax
0x15043:	jmp	0x14cef


0x152c4:	test	rax, rax
0x152c7:	mov	rcx, rax
0x152ca:	je	0x143c5


0x152d0:	test	r14, r14
0x152d3:	je	0x15340


0x15340:	mov	r15, rcx
0x15343:	jmp	0x1523c


0x152d5:	test	r13b, r13b
0x152d8:	je	0x15340


0x152da:	mov	rsi, r15
0x152dd:	mov	rdx, r14
0x152e0:	mov	rdi, rax
0x152e3:	call	0x2d80


0x152e8:	mov	r15, rax
0x152eb:	jmp	0x1523c


0x14e24:	test	rax, rax
0x14e27:	mov	r9, rax
0x14e2a:	mov	rcx, qword ptr [rbp - 0x3c8]
0x14e31:	movzx	edx, byte ptr [rbp - 0x3d0]
0x14e38:	mov	r8, qword ptr [rbp - 0x3e0]
0x14e3f:	je	0x143c5


0x14e45:	test	rbx, rbx
0x14e48:	je	0x15050


0x15050:	mov	r15, r9
0x15053:	jmp	0x14504


0x14e4e:	test	dl, dl
0x14e50:	je	0x15050


0x14e56:	mov	rsi, r15
0x14e59:	mov	rdx, rbx
0x14e5c:	mov	rdi, rax
0x14e5f:	mov	qword ptr [rbp - 0x3d0], r8
0x14e66:	mov	qword ptr [rbp - 0x3c8], rcx
0x14e6d:	call	0x2d80


0x14e72:	mov	rcx, qword ptr [rbp - 0x3c8]
0x14e79:	mov	r15, rax
0x14e7c:	mov	r8, qword ptr [rbp - 0x3d0]
0x14e83:	jmp	0x14504


0x14337:	test	rax, rax
0x1433a:	mov	qword ptr [rbp - 0x3d8], rax
0x14341:	je	0x14d28


0x14347:	mov	r8, qword ptr [rbp - 0x3c8]
0x1434e:	mov	qword ptr [rbp - 0x420], rax
0x14355:	xor	r12d, r12d
0x14358:	cmp	qword ptr [rbp - 0x3e8], 0
0x14360:	je	0x1436c


0xb364:	test	rax, rax
0xb367:	mov	rcx, rax
0xb36a:	je	0xb386


0xb386:	add	rsp, 8
0xb38a:	mov	rax, rcx
0xb38d:	pop	rbx
0xb38e:	pop	rbp
0xb38f:	ret	


0xb36c:	mov	rdx, rbx
0xb36f:	mov	rsi, rbp
0xb372:	mov	rdi, rax
0xb375:	call	0x2d80


0xb37a:	test	rbx, rbx
0xb37d:	mov	rcx, rax
0xb380:	je	0xb390


0xb390:	mov	byte ptr [rax], 0x2e
0xb393:	mov	ebx, 1
0xb398:	jmp	0xb382


0xb382:	mov	byte ptr [rcx + rbx], 0
0xb386:	add	rsp, 8
0xb38a:	mov	rax, rcx
0xb38d:	pop	rbx
0xb38e:	pop	rbp
0xb38f:	ret	


0xb2c9:	test	rax, rax
0xb2cc:	je	0xb2d3


0xb2d3:	call	0x12260


0xb2ce:	add	rsp, 8
0xb2d2:	ret	


0x6af8:	lea	r8, [rip + 0x11364]
0x6aff:	mov	rdi, rax
0x6b02:	mov	ecx, 2
0x6b07:	mov	r12, rax
0x6b0a:	mov	rsi, r8
0x6b0d:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6b0d:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6b0f:	seta	al
0x6b12:	sbb	al, 0
0x6b14:	test	al, al
0x6b16:	jne	0x7df8


0x6b1c:	mov	rdi, r12
0x6b1f:	call	0x30d0


0x7df8:	lea	rdx, [rbp - 0x160]
0x7dff:	mov	rsi, r8
0x7e02:	mov	edi, 1
0x7e07:	call	0x2dd0


0x7e0c:	test	eax, eax
0x7e0e:	jne	0x6b1c


0x7e14:	lea	rdx, [rbp - 0xd0]
0x7e1b:	mov	rsi, r12
0x7e1e:	mov	edi, 1
0x7e23:	call	0x2dd0


0x7e28:	test	eax, eax
0x7e2a:	jne	0x6b1c


0x7e30:	mov	rax, qword ptr [rbp - 0xc8]
0x7e37:	cmp	qword ptr [rbp - 0x158], rax
0x7e3e:	je	0x8f47


0x8f47:	mov	rax, qword ptr [rbp - 0xd0]
0x8f4e:	cmp	qword ptr [rbp - 0x160], rax
0x8f55:	jne	0x7e44


0x7e44:	mov	rdi, r12
0x7e47:	call	0x30d0


0x8f5b:	jmp	0x6b1c


0x7e4c:	mov	rdx, qword ptr [rbp - 0x308]
0x7e53:	mov	esi, 3
0x7e58:	xor	edi, edi
0x7e5a:	call	0xf4f0


0xfa40:	mov	rcx, rsp
0xfa43:	mov	r8d, 0x100
0xfa49:	mov	rdx, rax
0xfa4c:	mov	esi, r13d
0xfa4f:	mov	edi, 1
0xfa54:	mov	rbx, rax
0xfa57:	call	0x2b80


0xfa5c:	test	eax, eax
0xfa5e:	jne	0xfb10


0xfa64:	mov	rdi, rbx
0xfa67:	call	0x30d0


0xfb10:	call	0x2950


0xfb15:	mov	esi, dword ptr [rax]
0xfb17:	lea	rdx, [rip + 0x9342]
0xfb1e:	mov	rcx, rbx
0xfb21:	mov	edi, 1
0xfb26:	xor	eax, eax
0xfb28:	call	0x2f30


0x2f30:	jmp	qword ptr [rip + 0x219fca]




0xfa6c:	mov	rdi, r12
0xfa6f:	call	0xb2c0


0xfa74:	lea	rcx, [rsp + 0x90]
0xfa7c:	mov	r8d, 0x100
0xfa82:	mov	rdx, rax
0xfa85:	mov	esi, ebp
0xfa87:	mov	edi, 1
0xfa8c:	mov	rbx, rax
0xfa8f:	call	0x2b80


0xfa94:	test	eax, eax
0xfa96:	jne	0xfae8


0xfa98:	xor	ebp, ebp
0xfa9a:	mov	rax, qword ptr [rsp + 0x98]
0xfaa2:	cmp	qword ptr [rsp + 8], rax
0xfaa7:	jne	0xfab9


0xfae8:	call	0x2950


0xfaa9:	mov	rax, qword ptr [rsp + 0x90]
0xfab1:	cmp	qword ptr [rsp], rax
0xfab5:	sete	bpl
0xfab9:	mov	rdi, rbx
0xfabc:	call	0x30d0


0xfab9:	mov	rdi, rbx
0xfabc:	call	0x30d0


0xfac1:	mov	rdx, qword ptr [rsp + 0x128]
0xfac9:	xor	rdx, qword ptr fs:[0x28]
0xfad2:	mov	eax, ebp
0xfad4:	jne	0xfb32


0xfad6:	add	rsp, 0x138
0xfadd:	pop	rbx
0xfade:	pop	rbp
0xfadf:	pop	r12
0xfae1:	pop	r13
0xfae3:	ret	


0xfb32:	call	0x2b30


0xfaed:	mov	esi, dword ptr [rax]
0xfaef:	lea	rdx, [rip + 0x936a]
0xfaf6:	mov	rcx, rbx
0xfaf9:	mov	edi, 1
0xfafe:	xor	eax, eax
0xfb00:	call	0x2f30


0xa417:	mov	r12, rax
0xa41a:	xor	eax, eax
0xa41c:	test	r12, r12
0xa41f:	je	0xa443


0xa443:	pop	rbx
0xa444:	pop	rbp
0xa445:	pop	r12
0xa447:	ret	


0x16286:	mov	rdx, qword ptr [rsp + 8]
0x1628b:	mov	rcx, rax
0x1628e:	mov	r9, qword ptr [rsp + 0x48]
0x16293:	mov	r10, qword ptr [rsp + 0x40]
0x16298:	mov	r8, qword ptr [rsp + 0x38]
0x1629d:	mov	r11, qword ptr [rsp + 0x30]
0x162a2:	jmp	0x160e9


0x160e9:	test	rcx, rcx
0x160ec:	je	0x16307


0x16149:	mov	rdx, qword ptr [rsp + 8]
0x1614e:	mov	rcx, rax
0x16151:	mov	r9, qword ptr [rsp + 0x40]
0x16156:	mov	r10, qword ptr [rsp + 0x38]
0x1615b:	mov	r8, qword ptr [rsp + 0x30]
0x16160:	jmp	0x15a4c


0x15a4c:	test	rcx, rcx
0x15a4f:	je	0x16307


0x10b3e:	test	rax, rax
0x10b41:	mov	rsi, rax
0x10b44:	mov	qword ptr [rip + 0x20ebcd], rax
0x10b4b:	mov	rdx, qword ptr [rsp + 0x10]
0x10b50:	mov	r9d, dword ptr [rsp + 0x18]
0x10b55:	mov	r10d, dword ptr [rsp + 0x20]
0x10b5a:	mov	r11, qword ptr [rsp + 0x28]
0x10b5f:	je	0x10b88


0x10b88:	lea	rcx, [rsp + 0x50]
0x10b8d:	mov	rax, qword ptr [rbp]
0x10b91:	mov	rdi, rdx
0x10b94:	mov	qword ptr [rsp + 0x30], r11
0x10b99:	mov	dword ptr [rsp + 0x28], r10d
0x10b9e:	mov	rsi, rcx
0x10ba1:	mov	dword ptr [rsp + 0x20], r9d
0x10ba6:	mov	qword ptr [rsp + 0x18], rcx
0x10bab:	mov	qword ptr [rsp + 0x50], rax
0x10bb0:	call	0xbfb0


0x10b61:	mov	dword ptr [rax + 8], 0x77359400
0x10b68:	mov	byte ptr [rax + 0xc], 0
0x10b6c:	jmp	0x10a49


0xa868:	test	rax, rax
0xa86b:	mov	rbp, rax
0xa86e:	je	0xa8ab


0xa8ab:	add	rsp, 8
0xa8af:	mov	rax, rbp
0xa8b2:	pop	rbx
0xa8b3:	pop	rbp
0xa8b4:	pop	r12
0xa8b6:	pop	r13
0xa8b8:	pop	r14
0xa8ba:	pop	r15
0xa8bc:	ret	


0xa870:	mov	rdx, rbx
0xa873:	mov	rsi, rax
0xa876:	mov	rdi, r13
0xa879:	call	0x29f0


0x29f0:	jmp	qword ptr [rip + 0x21a26a]




0x8893:	test	rax, rax
0x8896:	mov	r12, rax
0x8899:	je	0x90e3


0x90e3:	mov	rsi, qword ptr [rbp - 0x310]
0x90ea:	mov	edi, 4
0x90ef:	call	0xf3f0


0x889f:	movzx	ecx, byte ptr [rbx + 0x16]
0x88a3:	mov	rdx, qword ptr [rbp - 0x308]
0x88aa:	mov	r8d, 0xffffffff
0x88b0:	mov	esi, 0xffffff9c
0x88b5:	mov	rdi, rax
0x88b8:	call	0xa5e0


0x88bd:	test	eax, eax
0x88bf:	mov	dword ptr [rbp - 0x320], eax
0x88c5:	jle	0x9108


0x9108:	mov	rdi, r12
0x910b:	call	0x30d0


0x88cb:	cmp	byte ptr [rbx + 0x2d], 1
0x88cf:	jne	0x88da


0x88d1:	test	r14b, r14b
0x88d4:	je	0x94b9


0x88da:	mov	rdi, r12
0x88dd:	call	0x30d0


0x94b9:	mov	eax, dword ptr [rbp - 0x1d8]
0x94bf:	and	eax, 0xf000
0x94c4:	cmp	eax, 0xa000
0x94c9:	jne	0x88da


0x94cf:	or	rcx, 0xffffffffffffffff
0x94d3:	mov	eax, r14d
0x94d6:	mov	rdi, r12
0x94d9:	repne scasb	al, byte ptr [rdi]


0x94d9:	repne scasb	al, byte ptr [rdi]


0x94db:	mov	rsi, qword ptr [rbp - 0x1c0]
0x94e2:	not	rcx
0x94e5:	lea	rax, [rcx - 1]
0x94e9:	cmp	rsi, rax
0x94ec:	jne	0x88da


0x94f2:	mov	rdi, qword ptr [rbp - 0x308]
0x94f9:	call	0xa820


0x94fe:	test	rax, rax
0x9501:	je	0x88da


0x9507:	mov	rdi, rax
0x950a:	mov	rsi, r12
0x950d:	mov	qword ptr [rbp - 0x328], rax
0x9514:	call	0x2cf0


0x9519:	mov	rdx, qword ptr [rbp - 0x328]
0x9520:	test	eax, eax
0x9522:	mov	rdi, rdx
0x9525:	jne	0x9d22


0x952b:	call	0x30d0


0x9d22:	call	0x30d0


0x9d27:	jmp	0x88da


0x9530:	mov	rdi, r12
0x9533:	call	0x30d0


0x9538:	jmp	0x9110


0x9110:	movzx	r8d, byte ptr [rbx + 0x25]
0x9115:	test	r8b, r8b
0x9118:	jne	0x6d30


0x911e:	movzx	eax, byte ptr [rbx + 0x1d]
0x9122:	test	al, al
0x9124:	mov	byte ptr [rbp - 0x320], al
0x912a:	jne	0x93a3


0x9130:	movzx	r8d, byte ptr [rbp - 0x320]
0x9138:	mov	byte ptr [rbp - 0x320], 1
0x913f:	jmp	0x619f


0x93a3:	mov	edx, dword ptr [rbp - 0x260]
0x93a9:	mov	esi, dword ptr [rbp - 0x264]
0x93af:	mov	rdi, qword ptr [rbp - 0x308]
0x93b6:	mov	byte ptr [rbp - 0x328], r8b
0x93bd:	call	0x2e40


0x93c2:	test	eax, eax
0x93c4:	movzx	r8d, byte ptr [rbp - 0x328]
0x93cc:	je	0x619f


0x93d2:	mov	rdi, rbx
0x93d5:	call	0x59b0


0x93da:	test	al, al
0x93dc:	movzx	r8d, byte ptr [rbp - 0x328]
0x93e4:	je	0x9be4


0x9be4:	lea	rsi, [rip + 0xdbe5]
0x9beb:	xor	edi, edi
0x9bed:	mov	edx, 5
0x9bf2:	call	0x2ad0


0x93ea:	mov	byte ptr [rbp - 0x320], al
0x93f0:	jmp	0x619f


0x88e2:	mov	rsi, qword ptr [rbp - 0x308]
0x88e9:	mov	edi, 4
0x88ee:	call	0xf3f0


0xc263:	test	rax, rax
0xc266:	mov	rbx, rax
0xc269:	je	0xc31a


0xc31a:	add	rsp, 8
0xc31e:	mov	rax, rbx
0xc321:	pop	rbx
0xc322:	pop	rbp
0xc323:	pop	r12
0xc325:	pop	r13
0xc327:	pop	r14
0xc329:	pop	r15
0xc32b:	ret	


0xc26f:	test	r15, r15
0xc272:	lea	rdi, [rax + 0x28]
0xc276:	je	0xc330


0xc330:	lea	rax, [rip + 0xbea9]
0xc337:	mov	qword ptr [rbx + 0x28], rax
0xc33b:	call	0xbbc0


0xc27c:	mov	qword ptr [rax + 0x28], r15
0xc280:	call	0xbbc0


0xc285:	test	al, al
0xc287:	je	0xc310


0xc310:	mov	rdi, rbx
0xc313:	xor	ebx, ebx
0xc315:	call	0x30d0


0xc28d:	cmp	byte ptr [r15 + 0x10], 0
0xc292:	je	0xc390


0xc390:	test	rbp, rbp
0xc393:	movss	xmm1, dword ptr [r15 + 8]
0xc399:	jns	0xc351


0xc298:	mov	rdi, rbp
0xc29b:	call	0xb9b0


0xc39b:	mov	rax, rbp
0xc39e:	pxor	xmm0, xmm0
0xc3a2:	shr	rax, 1
0xc3a5:	and	ebp, 1
0xc3a8:	or	rax, rbp
0xc3ab:	cvtsi2ss	xmm0, rax
0xc3b0:	addss	xmm0, xmm0
0xc3b4:	jmp	0xc35a


0xc351:	pxor	xmm0, xmm0
0xc355:	cvtsi2ss	xmm0, rbp
0xc35a:	divss	xmm0, xmm1
0xc35e:	ucomiss	xmm0, dword ptr [rip + 0xbea7]
0xc365:	jae	0xc310


0xc35a:	divss	xmm0, xmm1
0xc35e:	ucomiss	xmm0, dword ptr [rip + 0xbea7]
0xc365:	jae	0xc310


0xc367:	ucomiss	xmm0, dword ptr [rip + 0xbea2]
0xc36e:	jb	0xc3c0


0xc3c0:	cvttss2si	rbp, xmm0
0xc3c5:	jmp	0xc298


0xc370:	subss	xmm0, dword ptr [rip + 0xbe98]
0xc378:	movabs	rax, 0x8000000000000000
0xc382:	cvttss2si	rbp, xmm0
0xc387:	xor	rbp, rax
0xc38a:	jmp	0xc298


0xc2a0:	mov	edx, 8
0xc2a5:	mov	rbp, rax
0xc2a8:	xor	ecx, ecx
0xc2aa:	mov	rax, rdx
0xc2ad:	mul	rbp
0xc2b0:	jo	0xc3ca


0xc3ca:	mov	ecx, 1
0xc3cf:	jmp	0xc2b6


0xc2b6:	test	rax, rax
0xc2b9:	js	0xc310


0xc2bb:	test	rcx, rcx
0xc2be:	jne	0xc310


0xc2c0:	test	rbp, rbp
0xc2c3:	mov	qword ptr [rbx + 0x10], rbp
0xc2c7:	je	0xc310


0xc2c9:	mov	esi, 0x10
0xc2ce:	mov	rdi, rbp
0xc2d1:	call	0x2cd0


0xc2d6:	test	rax, rax
0xc2d9:	mov	qword ptr [rbx], rax
0xc2dc:	je	0xc310


0xc2de:	shl	rbp, 4
0xc2e2:	mov	qword ptr [rbx + 0x18], 0
0xc2ea:	mov	qword ptr [rbx + 0x20], 0
0xc2f2:	add	rbp, rax
0xc2f5:	mov	qword ptr [rbx + 0x30], r12
0xc2f9:	mov	qword ptr [rbx + 0x38], r13
0xc2fd:	mov	qword ptr [rbx + 8], rbp
0xc301:	mov	qword ptr [rbx + 0x40], r14
0xc305:	mov	qword ptr [rbx + 0x48], 0
0xc30d:	jmp	0xc31a


0xc340:	test	al, al
0xc342:	movss	xmm1, dword ptr [rip + 0xbebe]
0xc34a:	je	0xc310


0xc34c:	test	rbp, rbp
0xc34f:	js	0xc39b


0x11000:	test	rax, rax
0x11003:	mov	rdx, rax
0x11006:	mov	qword ptr [rip + 0x20e713], rax
0x1100d:	mov	r9d, dword ptr [rsp + 0x10]
0x11012:	mov	r10d, dword ptr [rsp + 0x18]
0x11017:	mov	r11, qword ptr [rsp + 0x20]
0x1101c:	jne	0x10a39


0x11022:	lea	rcx, [rsp + 0x50]
0x11027:	jmp	0x10be0


0x10be0:	mov	dword ptr [rsp + 0x58], 0x77359400
0x10be8:	mov	byte ptr [rsp + 0x5c], 0
0x10bed:	mov	dword ptr [rsp + 0x18], 0x77359400
0x10bf5:	mov	qword ptr [rsp + 0x10], rcx
0x10bfa:	mov	rcx, qword ptr [rbp + 0x50]
0x10bfe:	mov	eax, 0x66666667
0x10c03:	mov	rsi, qword ptr [rbp + 0x70]
0x10c07:	imul	ecx
0x10c09:	mov	eax, ecx
0x10c0b:	mov	qword ptr [rsp + 0x28], rcx
0x10c10:	sar	eax, 0x1f
0x10c13:	sar	edx, 2
0x10c16:	sub	edx, eax
0x10c18:	lea	eax, [rdx + rdx*4]
0x10c1b:	mov	dword ptr [rsp + 0x20], edx
0x10c1f:	add	eax, eax
0x10c21:	sub	ecx, eax
0x10c23:	mov	eax, 0x66666667
0x10c28:	imul	esi
0x10c2a:	mov	eax, esi
0x10c2c:	sar	eax, 0x1f
0x10c2f:	sar	edx, 2
0x10c32:	mov	edi, edx
0x10c34:	sub	edi, eax
0x10c36:	lea	eax, [rdi + rdi*4]
0x10c39:	add	eax, eax
0x10c3b:	sub	esi, eax
0x10c3d:	mov	eax, 0x66666667
0x10c42:	imul	r15d
0x10c45:	mov	eax, r15d
0x10c48:	or	ecx, esi
0x10c4a:	sar	eax, 0x1f
0x10c4d:	mov	esi, r15d
0x10c50:	sar	edx, 2
0x10c53:	mov	r8d, edx
0x10c56:	sub	r8d, eax
0x10c59:	lea	eax, [r8 + r8*4]
0x10c5d:	add	eax, eax
0x10c5f:	sub	esi, eax
0x10c61:	or	ecx, esi
0x10c63:	jne	0x10fb8


0x10c69:	cmp	dword ptr [rsp + 0x18], 0xa
0x10c6e:	mov	rax, qword ptr [rbp + 0x48]
0x10c72:	mov	ecx, edi
0x10c74:	mov	edx, dword ptr [rsp + 0x20]
0x10c78:	mov	esi, r8d
0x10c7b:	mov	qword ptr [rsp + 0x48], rax
0x10c80:	mov	dword ptr [rsp + 0x30], edx
0x10c84:	jle	0x11098


0x10fb8:	mov	rax, qword ptr [rsp + 0x10]
0x10fbd:	mov	dword ptr [rax + 8], ebx
0x10fc0:	mov	byte ptr [rax + 0xc], 1
0x10fc4:	jmp	0x10ac8


0x11098:	mov	rax, qword ptr [rsp + 0x10]
0x1109d:	mov	dword ptr [rsp + 0x20], 0xa
0x110a5:	mov	dword ptr [rax + 8], 0xa
0x110ac:	mov	rax, r12
0x110af:	jmp	0x10e03


0x10c8a:	mov	eax, 0x66666667
0x10c8f:	imul	edi
0x10c91:	mov	eax, edi
0x10c93:	sar	eax, 0x1f
0x10c96:	sar	edx, 2
0x10c99:	sub	edx, eax
0x10c9b:	lea	eax, [rdx + rdx*4]
0x10c9e:	add	eax, eax
0x10ca0:	sub	edi, eax
0x10ca2:	mov	eax, 0x66666667
0x10ca7:	imul	dword ptr [rsp + 0x20]
0x10cab:	mov	eax, dword ptr [rsp + 0x20]
0x10caf:	sar	eax, 0x1f
0x10cb2:	sar	edx, 2
0x10cb5:	sub	edx, eax
0x10cb7:	lea	eax, [rdx + rdx*4]
0x10cba:	mov	edx, dword ptr [rsp + 0x20]
0x10cbe:	mov	dword ptr [rsp + 0x20], 0xa
0x10cc6:	add	eax, eax
0x10cc8:	sub	edx, eax
0x10cca:	mov	eax, 0x66666667
0x10ccf:	or	edi, edx
0x10cd1:	imul	r8d
0x10cd4:	mov	eax, r8d
0x10cd7:	mov	dword ptr [rsp + 0x3c], edi
0x10cdb:	sar	eax, 0x1f
0x10cde:	mov	edi, 0x66666667
0x10ce3:	sar	edx, 2
0x10ce6:	sub	edx, eax
0x10ce8:	lea	eax, [rdx + rdx*4]
0x10ceb:	mov	edx, 8
0x10cf0:	add	eax, eax
0x10cf2:	sub	r8d, eax
0x10cf5:	mov	eax, dword ptr [rsp + 0x3c]
0x10cf9:	or	eax, r8d
0x10cfc:	jne	0x110b4


0x10e03:	cmp	r14, r12
0x10e06:	jg	0x10adf


0x10d02:	mov	dword ptr [rsp + 0x3c], r9d
0x10d07:	mov	qword ptr [rsp + 0x40], r14
0x10d0c:	mov	r9d, 0xa
0x10d12:	mov	r8d, dword ptr [rsp + 0x30]
0x10d17:	mov	qword ptr [rsp + 0x20], r12
0x10d1c:	mov	r14d, edx
0x10d1f:	mov	qword ptr [rsp + 0x30], rbp
0x10d24:	mov	eax, r8d
0x10d27:	sar	r8d, 0x1f
0x10d2b:	lea	ebp, [r9 + r9*4]
0x10d2f:	imul	edi
0x10d31:	mov	eax, ecx
0x10d33:	sar	ecx, 0x1f
0x10d36:	add	ebp, ebp
0x10d38:	mov	r9d, ebp
0x10d3b:	sar	edx, 2
0x10d3e:	sub	edx, r8d
0x10d41:	mov	r8d, edx
0x10d44:	imul	edi
0x10d46:	mov	eax, esi
0x10d48:	sar	esi, 0x1f
0x10d4b:	sar	edx, 2
0x10d4e:	sub	edx, ecx
0x10d50:	mov	ecx, edx
0x10d52:	imul	edi
0x10d54:	sar	edx, 2
0x10d57:	sub	edx, esi
0x10d59:	cmp	ebp, dword ptr [rsp + 0x18]
0x10d5d:	mov	esi, edx
0x10d5f:	jge	0x11040


0x110b4:	mov	rax, qword ptr [rsp + 0x10]
0x110b9:	mov	dword ptr [rax + 8], 0xa
0x110c0:	mov	rax, r12
0x110c3:	jmp	0x10e03


0x10e0c:	cmp	r15d, r13d
0x10e0f:	jl	0x10e1c


0x10d65:	mov	eax, r8d
0x10d68:	mov	r12d, r8d
0x10d6b:	imul	edi
0x10d6d:	mov	eax, r8d
0x10d70:	sar	eax, 0x1f
0x10d73:	sar	edx, 2
0x10d76:	sub	edx, eax
0x10d78:	lea	eax, [rdx + rdx*4]
0x10d7b:	add	eax, eax
0x10d7d:	sub	r12d, eax
0x10d80:	mov	eax, ecx
0x10d82:	imul	edi
0x10d84:	mov	eax, ecx
0x10d86:	sar	eax, 0x1f
0x10d89:	sar	edx, 2
0x10d8c:	sub	edx, eax
0x10d8e:	lea	eax, [rdx + rdx*4]
0x10d91:	mov	edx, ecx
0x10d93:	add	eax, eax
0x10d95:	sub	edx, eax
0x10d97:	mov	eax, esi
0x10d99:	or	r12d, edx
0x10d9c:	imul	edi
0x10d9e:	mov	eax, esi
0x10da0:	sar	eax, 0x1f
0x10da3:	sar	edx, 2
0x10da6:	sub	edx, eax
0x10da8:	lea	eax, [rdx + rdx*4]
0x10dab:	mov	edx, esi
0x10dad:	add	eax, eax
0x10daf:	sub	edx, eax
0x10db1:	or	r12d, edx
0x10db4:	jne	0x11040


0x11040:	cmp	ebp, 0x77359400
0x11046:	mov	r12, qword ptr [rsp + 0x20]
0x1104b:	mov	rsi, qword ptr [rsp + 0x10]
0x11050:	sete	byte ptr [rsp + 8]
0x11055:	movzx	eax, byte ptr [rsp + 8]
0x1105a:	mov	dword ptr [rsp + 0x20], r9d
0x1105f:	mov	r14, qword ptr [rsp + 0x40]
0x11064:	mov	r9d, dword ptr [rsp + 0x3c]
0x11069:	mov	dword ptr [rsi + 8], ebp
0x1106c:	not	eax
0x1106e:	cdqe	
0x11070:	and	rax, r12
0x11073:	jmp	0x10e03


0x10e1c:	cmp	r14, rax
0x10e1f:	jl	0x10b18


0x10e11:	cmp	byte ptr [rsp + 0x38], 0
0x10e16:	jne	0x10adf


0x10dba:	sub	r14d, 1
0x10dbe:	jne	0x10d24


0x10e25:	jne	0x10e3d


0x10dc4:	mov	r14, qword ptr [rsp + 0x40]
0x10dc9:	mov	rbp, qword ptr [rsp + 0x30]
0x10dce:	mov	rax, qword ptr [rsp + 0x48]
0x10dd3:	mov	r12, qword ptr [rsp + 0x20]
0x10dd8:	mov	r9d, dword ptr [rsp + 0x3c]
0x10ddd:	or	rax, r14
0x10de0:	or	rax, qword ptr [rbp + 0x68]
0x10de4:	test	al, 1
0x10de6:	mov	rax, qword ptr [rsp + 0x10]
0x10deb:	je	0x11078


0x10d24:	mov	eax, r8d
0x10d27:	sar	r8d, 0x1f
0x10d2b:	lea	ebp, [r9 + r9*4]
0x10d2f:	imul	edi
0x10d31:	mov	eax, ecx
0x10d33:	sar	ecx, 0x1f
0x10d36:	add	ebp, ebp
0x10d38:	mov	r9d, ebp
0x10d3b:	sar	edx, 2
0x10d3e:	sub	edx, r8d
0x10d41:	mov	r8d, edx
0x10d44:	imul	edi
0x10d46:	mov	eax, esi
0x10d48:	sar	esi, 0x1f
0x10d4b:	sar	edx, 2
0x10d4e:	sub	edx, ecx
0x10d50:	mov	ecx, edx
0x10d52:	imul	edi
0x10d54:	sar	edx, 2
0x10d57:	sub	edx, esi
0x10d59:	cmp	ebp, dword ptr [rsp + 0x18]
0x10d5d:	mov	esi, edx
0x10d5f:	jge	0x11040


0x10e27:	mov	eax, r9d
0x10e2a:	cdq	
0x10e2b:	idiv	dword ptr [rsp + 0x20]
0x10e2f:	mov	eax, r13d
0x10e32:	sub	eax, edx
0x10e34:	cmp	eax, r15d
0x10e37:	jg	0x10b18


0x10e3d:	mov	rax, qword ptr [rsp + 0x48]
0x10e42:	mov	edx, 0x38e38e39
0x10e47:	lea	rbp, [rsp + 0x60]
0x10e4c:	mov	rsi, r11
0x10e4f:	mov	edi, r10d
0x10e52:	mov	ecx, 0x100
0x10e57:	mov	dword ptr [rsp + 0x18], r9d
0x10e5c:	mov	dword ptr [rsp + 0x38], r10d
0x10e61:	mov	qword ptr [rsp + 0x60], rax
0x10e66:	movsxd	rax, dword ptr [rsp + 0x28]
0x10e6b:	mov	qword ptr [rsp + 0x68], rax
0x10e70:	movzx	eax, byte ptr [rsp + 8]
0x10e75:	mov	qword ptr [rsp + 8], r11
0x10e7a:	or	rax, r14
0x10e7d:	mov	qword ptr [rsp + 0x70], rax
0x10e82:	mov	eax, dword ptr [rsp + 0x20]
0x10e86:	mul	edx
0x10e88:	mov	eax, edx
0x10e8a:	mov	rdx, rbp
0x10e8d:	shr	eax, 1
0x10e8f:	add	eax, r15d
0x10e92:	cdqe	
0x10e94:	mov	qword ptr [rsp + 0x78], rax
0x10e99:	call	0x2930


0x11078:	mov	dword ptr [rax + 8], 0x77359400
0x1107f:	mov	rax, r12
0x11082:	mov	byte ptr [rsp + 8], 1
0x11087:	and	rax, 0xfffffffffffffffe
0x1108b:	mov	dword ptr [rsp + 0x20], 0x77359400
0x11093:	jmp	0x10e03


0x10df1:	mov	dword ptr [rax + 8], 0x3b9aca00
0x10df8:	mov	dword ptr [rsp + 0x20], 0x3b9aca00
0x10e00:	mov	rax, r12
0x10e03:	cmp	r14, r12
0x10e06:	jg	0x10adf


0x10e9e:	test	eax, eax
0x10ea0:	mov	r10d, dword ptr [rsp + 0x38]
0x10ea5:	mov	r11, qword ptr [rsp + 8]
0x10eaa:	mov	r9d, dword ptr [rsp + 0x18]
0x10eaf:	je	0x10ebb


0x10ebb:	lea	rcx, [rsp + 0x80]
0x10ec3:	mov	rdx, r11
0x10ec6:	mov	r8d, 0x100
0x10ecc:	mov	esi, r10d
0x10ecf:	mov	edi, 1
0x10ed4:	mov	dword ptr [rsp + 0x18], r9d
0x10ed9:	mov	qword ptr [rsp + 8], r11
0x10ede:	mov	dword ptr [rsp + 0x38], r10d
0x10ee3:	call	0x2b80


0x10eb1:	mov	ebx, 0xfffffffe
0x10eb6:	jmp	0x10adf


0x10ee8:	mov	rcx, qword ptr [rsp + 0xe0]
0x10ef0:	mov	r8d, eax
0x10ef3:	mov	rax, qword ptr [rsp + 0xd8]
0x10efb:	movsxd	rdx, r15d
0x10efe:	mov	r10d, dword ptr [rsp + 0x38]
0x10f03:	mov	r11, qword ptr [rsp + 8]
0x10f08:	mov	r9d, dword ptr [rsp + 0x18]
0x10f0d:	xor	rcx, rdx
0x10f10:	xor	rax, r14
0x10f13:	or	rax, rcx
0x10f16:	movsxd	rcx, r8d
0x10f19:	or	rax, rcx
0x10f1c:	jne	0x110cd


0x10f22:	mov	ecx, dword ptr [rsp + 0xd8]
0x10f29:	mov	esi, 0xa
0x10f2e:	and	ecx, 1
0x10f31:	imul	ecx, ecx, 0x3b9aca00
0x10f37:	add	ecx, dword ptr [rsp + 0xe0]
0x10f3e:	mov	eax, ecx
0x10f40:	cdq	
0x10f41:	idiv	esi
0x10f43:	test	edx, edx
0x10f45:	jne	0x11115


0x110cd:	mov	qword ptr [rsp + 0x78], rdx
0x110d2:	mov	ecx, 0x100
0x110d7:	mov	rdx, rbp
0x110da:	mov	rsi, r11
0x110dd:	mov	edi, r10d
0x110e0:	mov	dword ptr [rsp + 8], r8d
0x110e5:	mov	dword ptr [rsp + 0x38], r9d
0x110ea:	mov	qword ptr [rsp + 0x70], r14
0x110ef:	call	0x2930


0x10f4b:	cmp	dword ptr [rsp + 0x20], 0xa
0x10f50:	je	0x10f8d


0x11115:	mov	dword ptr [rsp + 0x20], ebx
0x11119:	jmp	0x10f8d


0x10f8d:	mov	esi, dword ptr [rsp + 0x20]
0x10f91:	xor	eax, eax
0x10f93:	cmp	esi, 0x77359400
0x10f99:	mov	ebx, esi
0x10f9b:	sete	al
0x10f9e:	not	eax
0x10fa0:	cdqe	
0x10fa2:	and	r12, rax
0x10fa5:	mov	eax, r9d
0x10fa8:	mov	r9d, r13d
0x10fab:	cdq	
0x10fac:	idiv	esi
0x10fae:	sub	r9d, edx
0x10fb1:	nop	dword ptr [rax]
0x10fb8:	mov	rax, qword ptr [rsp + 0x10]
0x10fbd:	mov	dword ptr [rax + 8], ebx
0x10fc0:	mov	byte ptr [rax + 0xc], 1
0x10fc4:	jmp	0x10ac8


0x10f52:	mov	r8d, 9
0x10f58:	mov	esi, 0xa
0x10f5d:	mov	edi, 0xa
0x10f62:	jmp	0x10f6d


0x10f6d:	mov	eax, ecx
0x10f6f:	cdq	
0x10f70:	idiv	edi
0x10f72:	cdq	
0x10f73:	mov	ecx, eax
0x10f75:	idiv	edi
0x10f77:	test	edx, edx
0x10f79:	jne	0x1110c


0x10f7f:	sub	r8d, 1
0x10f83:	jne	0x10f64


0x1110c:	mov	dword ptr [rsp + 0x20], esi
0x11110:	jmp	0x10f8d


0x10f85:	mov	dword ptr [rsp + 0x20], 0x77359400
0x10f8d:	mov	esi, dword ptr [rsp + 0x20]
0x10f91:	xor	eax, eax
0x10f93:	cmp	esi, 0x77359400
0x10f99:	mov	ebx, esi
0x10f9b:	sete	al
0x10f9e:	not	eax
0x10fa0:	cdqe	
0x10fa2:	and	r12, rax
0x10fa5:	mov	eax, r9d
0x10fa8:	mov	r9d, r13d
0x10fab:	cdq	
0x10fac:	idiv	esi
0x10fae:	sub	r9d, edx
0x10fb1:	nop	dword ptr [rax]
0x10fb8:	mov	rax, qword ptr [rsp + 0x10]
0x10fbd:	mov	dword ptr [rax + 8], ebx
0x10fc0:	mov	byte ptr [rax + 0xc], 1
0x10fc4:	jmp	0x10ac8


0x10f64:	imul	esi, esi, 0xa
0x10f67:	cmp	esi, dword ptr [rsp + 0x20]
0x10f6b:	je	0x10f8d


0x110f4:	mov	r8d, dword ptr [rsp + 8]
0x110f9:	mov	r9d, dword ptr [rsp + 0x38]
0x110fe:	test	r8d, r8d
0x11101:	jne	0x10eb1


0x11107:	jmp	0x10f22


0x5935:	mov	qword ptr [rbx + 0x40], rax
0x5939:	pop	rbx
0x593a:	ret	


0x5965:	mov	qword ptr [rbx + 0x48], rax
0x5969:	pop	rbx
0x596a:	ret	


0xa065:	test	rax, rax
0xa068:	mov	qword ptr [rip + 0x215529], rax
0xa06f:	je	0xa076


0xa076:	call	0x12260


0xa071:	add	rsp, 8
0xa075:	ret	


0x12019:	test	rax, rax
0x1201c:	jne	0x12023


0x1201e:	test	rbx, rbx
0x12021:	jne	0x12025


0x12023:	pop	rbx
0x12024:	ret	


0x12025:	call	0x12260


0x12704:	test	rax, rax
0x12707:	jle	0x12722


0x12722:	mov	rdi, qword ptr [rsp + 8]
0x12727:	call	0x30d0


0x12709:	mov	rdi, qword ptr [rsp + 8]
0x1270e:	lea	rax, [rdi + rax - 1]
0x12713:	cmp	byte ptr [rax], 0xa
0x12716:	je	0x12748


0x12748:	mov	byte ptr [rax], 0
0x1274b:	mov	rdi, qword ptr [rsp + 8]
0x12750:	jmp	0x12718


0x12718:	call	0x2d40


0x2d40:	jmp	qword ptr [rip + 0x21a0c2]




0x1272c:	mov	rdx, qword ptr [rsp + 0x18]
0x12731:	xor	rdx, qword ptr fs:[0x28]
0x1273a:	mov	eax, ebx
0x1273c:	jne	0x12752


0x1273e:	add	rsp, 0x20
0x12742:	pop	rbx
0x12743:	ret	


0x12752:	call	0x2b30


0x12867:	cmp	rax, -3
0x1286b:	mov	rbp, rax
0x1286e:	jbe	0x12890


0x12890:	mov	rdx, qword ptr [rsp + 8]
0x12895:	xor	rdx, qword ptr fs:[0x28]
0x1289e:	mov	rax, rbp
0x128a1:	jne	0x128ae


0x12870:	test	r12, r12
0x12873:	je	0x12890


0x128a3:	add	rsp, 0x18
0x128a7:	pop	rbx
0x128a8:	pop	rbp
0x128a9:	pop	r12
0x128ab:	pop	r13
0x128ad:	ret	


0x128ae:	call	0x2b30


0x12875:	xor	edi, edi
0x12877:	call	0x12f40


0x12a13:	test	eax, eax
0x12a15:	setne	al
0x12a18:	add	rsp, 8
0x12a1c:	movzx	eax, al
0x12a1f:	neg	eax
0x12a21:	ret	


0xd9b0:	mov	rdi, rbx
0xd9b3:	mov	ebp, eax
0xd9b5:	call	0x129c0


0xda1c:	mov	rdi, rbx
0xda1f:	mov	ebp, eax
0xda21:	call	0x129c0


0xda26:	mov	rcx, qword ptr [rsp + 8]
0xda2b:	xor	rcx, qword ptr fs:[0x28]
0xda34:	jne	0xda3f


0xda36:	add	rsp, 0x18
0xda3a:	mov	eax, ebp
0xda3c:	pop	rbx
0xda3d:	pop	rbp
0xda3e:	ret	


0xda3f:	call	0x2b30


0x5b12:	test	eax, eax
0x5b14:	je	0x5a35


0x5b1a:	call	0x2950


0x5b1f:	mov	rbx, rax
0x5b22:	mov	eax, dword ptr [rax]
0x5b24:	cmp	eax, 1
0x5b27:	je	0x5be0


0x5be0:	cmp	byte ptr [rbp + 0x1b], 0
0x5be4:	jne	0x5b36


0x5b2d:	cmp	eax, 0x16
0x5b30:	je	0x5be0


0x5bea:	jmp	0x5bac


0x5b36:	mov	rsi, r13
0x5b39:	mov	edi, 4
0x5b3e:	call	0xf3f0


0x5bac:	movzx	eax, byte ptr [rbp + 0x24]
0x5bb0:	add	rsp, 8
0x5bb4:	pop	rbx
0x5bb5:	pop	rbp
0x5bb6:	pop	r12
0x5bb8:	neg	eax
0x5bba:	pop	r13
0x5bbc:	pop	r14
0x5bbe:	pop	r15
0x5bc0:	ret	


0xa7dc:	test	eax, eax
0xa7de:	mov	ebx, eax
0xa7e0:	je	0xa819


0xa819:	mov	eax, ebx
0xa81b:	pop	rbx
0xa81c:	pop	rbp
0xa81d:	pop	r12
0xa81f:	ret	


0xa7e2:	mov	rdi, rbp
0xa7e5:	call	0xf6c0


0x9b9b:	test	eax, eax
0x9b9d:	sete	r8b
0x9ba1:	jmp	0x8eb5


0x9d17:	test	eax, eax
0x9d19:	sete	r8b
0x9d1d:	jmp	0x8eb5


0x8789:	test	eax, eax
0x878b:	jne	0x5f30


0x8791:	jmp	0x6466


0x1074c:	movsxd	rsi, ebp
0x1074f:	lea	rdx, [rsi + r14]
0x10753:	cmp	rdx, rax
0x10756:	ja	0x1086b


0x1075c:	sub	rax, r14
0x1075f:	mov	rbx, rax
0x10762:	sub	rbx, rsi
0x10765:	lea	rsi, [rip + 0x796f]
0x1076c:	lea	rax, [r15 + rbx]
0x10770:	mov	rdi, rax
0x10773:	mov	qword ptr [rsp + 0x10], rax
0x10778:	call	0x2c50


0x1086b:	mov	rax, qword ptr [rsp + 8]
0x10870:	mov	edx, 0xffffffff
0x10875:	mov	dword ptr [rax], 0x16
0x1087b:	jmp	0x10853


0x2c50:	jmp	qword ptr [rip + 0x21a13a]


0x10853:	add	rsp, 0x38
0x10857:	mov	eax, edx
0x10859:	pop	rbx
0x1085a:	pop	rbp
0x1085b:	pop	r12
0x1085d:	pop	r13
0x1085f:	pop	r14
0x10861:	pop	r15
0x10863:	ret	




0xa65f:	test	eax, eax
0xa661:	je	0xa6e0


0xa6e0:	mov	rcx, rbx
0xa6e3:	mov	edx, ebp
0xa6e5:	mov	rsi, r13
0xa6e8:	mov	edi, ebp
0xa6ea:	call	0x3000


0xa663:	call	0x2950


0x3000:	jmp	qword ptr [rip + 0x219f62]




0xa668:	mov	r8d, dword ptr [rax]
0xa66b:	cmp	r13, r14
0xa66e:	je	0xa688


0xa670:	mov	rdi, r13
0xa673:	mov	dword ptr [rsp + 0xc], r8d
0xa678:	call	0x30d0


0xa67d:	mov	r8d, dword ptr [rsp + 0xc]
0xa682:	nop	word ptr [rax + rax]
0xa688:	mov	rbx, qword ptr [rsp + 0x128]
0xa690:	xor	rbx, qword ptr fs:[0x28]
0xa699:	mov	eax, r8d
0xa69c:	jne	0xa72d


0xa50b:	test	eax, eax
0xa50d:	je	0xa588


0xa588:	mov	rcx, rbx
0xa58b:	mov	edx, ebp
0xa58d:	mov	rsi, r15
0xa590:	mov	edi, ebp
0xa592:	call	0x3000


0xa50f:	call	0x2950


0xa514:	mov	ecx, dword ptr [rax]
0xa516:	cmp	r15, qword ptr [rsp]
0xa51a:	je	0xa530


0xa51c:	mov	rdi, r15
0xa51f:	mov	dword ptr [rsp], ecx
0xa522:	call	0x30d0


0xa527:	mov	ecx, dword ptr [rsp]
0xa52a:	nop	word ptr [rax + rax]
0xa530:	mov	rbx, qword ptr [rsp + 0x138]
0xa538:	xor	rbx, qword ptr fs:[0x28]
0xa541:	mov	eax, ecx
0xa543:	jne	0xa5cc


0x108f1:	add	rsp, 0x18
0x108f5:	ret	


0x108d9:	add	rsp, 0x18
0x108dd:	ret	


0x10911:	add	rsp, 0x18
0x10915:	ret	


0xf799:	mov	rdi, r13
0xf79c:	mov	rbp, rax
0xf79f:	call	0x2af0


0xf7a4:	test	rbp, rbp
0xf7a7:	je	0xf7c3


0xf7c3:	mov	edi, dword ptr [rsp + 4]
0xf7c7:	mov	rcx, r13
0xf7ca:	mov	edx, r14d
0xf7cd:	mov	rsi, r12
0xf7d0:	call	0x3000


0xf7a9:	test	rax, rax
0xf7ac:	mov	r9, qword ptr [rsp + 8]
0xf7b1:	je	0xf7c3


0xf7b3:	cmp	byte ptr [r12 + rbp - 1], 0x2f
0xf7b9:	je	0xf800


0xf800:	mov	esi, dword ptr [rsp + 4]
0xf804:	lea	rcx, [rsp + 0x10]
0xf809:	mov	r8d, 0x100
0xf80f:	mov	rdx, r12
0xf812:	mov	edi, 1
0xf817:	mov	qword ptr [rsp + 8], r9
0xf81c:	call	0x2b80


0xf7bb:	cmp	byte ptr [r13 + rax - 1], 0x2f
0xf7c1:	je	0xf800


0xf821:	test	eax, eax
0xf823:	jne	0xf889


0xf825:	test	bl, bl
0xf827:	mov	r9, qword ptr [rsp + 8]
0xf82c:	je	0xf8aa


0xf8aa:	lea	rcx, [rsp + 0xa0]
0xf8b2:	mov	r8d, 0x100
0xf8b8:	mov	rdx, r13
0xf8bb:	mov	esi, r14d
0xf8be:	mov	edi, 1
0xf8c3:	mov	qword ptr [rsp + 8], r9
0xf8c8:	call	0x2b80


0xf82e:	mov	eax, dword ptr [rsp + 0x28]
0xf832:	and	eax, 0xf000
0xf837:	cmp	eax, 0x4000
0xf83c:	je	0xf7c3


0xf83e:	mov	dword ptr [r9], 2
0xf845:	mov	r15d, 0xffffffff
0xf84b:	jmp	0xf73a


0xf8cd:	test	eax, eax
0xf8cf:	mov	r9, qword ptr [rsp + 8]
0xf8d4:	je	0xf902


0xf902:	mov	eax, dword ptr [rsp + 0xb8]
0xf909:	and	eax, 0xf000
0xf90e:	cmp	eax, 0x4000
0xf913:	je	0xf921


0xf8d6:	cmp	dword ptr [r9], 2
0xf8da:	jne	0xf889


0xf921:	mov	eax, dword ptr [rsp + 0x28]
0xf925:	and	eax, 0xf000
0xf92a:	cmp	eax, 0x4000
0xf92f:	je	0xf7c3


0xf915:	mov	dword ptr [r9], 0x14
0xf91c:	jmp	0xf889


0xf8dc:	mov	eax, dword ptr [rsp + 0x28]
0xf8e0:	and	eax, 0xf000
0xf8e5:	cmp	eax, 0x4000
0xf8ea:	jne	0xf889


0xf935:	mov	dword ptr [r9], 0x15
0xf93c:	or	r15d, 0xffffffff
0xf940:	jmp	0xf73a


0xf8ec:	jmp	0xf7c3


0xa9a8:	mov	rdi, qword ptr [rip + 0x214bf1]
0xa9af:	sub	r14, rbx
0xa9b2:	add	rax, r14
0xa9b5:	mov	qword ptr [rsp + 0x18], rax
0xa9ba:	test	rdi, rdi
0xa9bd:	je	0xaf44


0xaf44:	call	0xa910


0xa9c3:	call	0x2af0


0xaf49:	mov	rdi, qword ptr [rip + 0x214650]
0xaf50:	jmp	0xa9c3


0xa9c8:	mov	rsi, qword ptr [rsp + 0x18]
0xa9cd:	add	rax, 1
0xa9d1:	cmp	rax, 9
0xa9d5:	mov	qword ptr [rsp + 0x50], rax
0xa9da:	lea	rdx, [rsi + 1]
0xa9de:	mov	rsi, rax
0xa9e1:	mov	eax, 9
0xa9e6:	cmovae	rax, rsi
0xa9ea:	add	rax, rdx
0xa9ed:	mov	qword ptr [rsp + 0x38], rdx
0xa9f2:	mov	rdi, rax
0xa9f5:	mov	qword ptr [rsp + 0x40], rax
0xa9fa:	call	0x2df0


0xa9ff:	test	rax, rax
0xaa02:	mov	r15, rax
0xaa05:	je	0xacf0


0xacf0:	mov	rsi, qword ptr [rsp + 0x78]
0xacf5:	xor	rsi, qword ptr fs:[0x28]
0xacfe:	mov	rax, r15
0xad01:	jne	0xaf6d


0xaa0b:	lea	rax, [rsp + 0x74]
0xaa10:	mov	dword ptr [rsp + 0x74], 0xffffffff
0xaa18:	mov	qword ptr [rsp + 0x48], 0
0xaa21:	xor	r13d, r13d
0xaa24:	mov	qword ptr [rsp + 0x68], rax
0xaa29:	mov	rdx, qword ptr [rsp + 0x38]
0xaa2e:	mov	rsi, qword ptr [rsp + 0x10]
0xaa33:	mov	rdi, r15
0xaa36:	call	0x2d80


0xad07:	add	rsp, 0x88
0xad0e:	pop	rbx
0xad0f:	pop	rbp
0xad10:	pop	r12
0xad12:	pop	r13
0xad14:	pop	r14
0xad16:	pop	r15
0xad18:	ret	


0xaf6d:	call	0x2b30


0xaa3b:	cmp	dword ptr [rsp + 0x20], 1
0xaa40:	je	0xad20


0xad20:	mov	rax, qword ptr [rsp + 0x18]
0xad25:	mov	rdx, qword ptr [rsp + 0x50]
0xad2a:	mov	rsi, qword ptr [rip + 0x21486f]
0xad31:	lea	rdi, [r15 + rax]
0xad35:	call	0x2d80


0xaa46:	lea	rbp, [r15 + r14]
0xaa4a:	mov	rdi, rbp
0xaa4d:	call	0xb400


0xad3a:	jmp	0xac6f


0xac6f:	cmp	byte ptr [rsp + 0x63], 0
0xac74:	je	0xaf2e


0xaf2e:	test	r13, r13
0xaf31:	je	0xacf0


0xac7a:	mov	edx, dword ptr [rsp + 0x74]
0xac7e:	lea	rcx, [r15 + r14]
0xac82:	test	edx, edx
0xac84:	jns	0xac99


0xaf37:	mov	rdi, r13
0xaf3a:	call	0x2c60


0xac86:	mov	dword ptr [rsp + 0x74], 0xffffff9c
0xac8e:	mov	rcx, r15
0xac91:	mov	edx, 0xffffff9c
0xac96:	xor	r14d, r14d
0xac99:	xor	r8d, r8d
0xac9c:	cmp	dword ptr [rsp + 0x20], 1
0xaca1:	mov	rsi, qword ptr [rsp + 0x10]
0xaca6:	mov	edi, 0xffffff9c
0xacab:	setne	r8b
0xacaf:	call	0xf6e0


0xac99:	xor	r8d, r8d
0xac9c:	cmp	dword ptr [rsp + 0x20], 1
0xaca1:	mov	rsi, qword ptr [rsp + 0x10]
0xaca6:	mov	edi, 0xffffff9c
0xacab:	setne	r8b
0xacaf:	call	0xf6e0


0x2c60:	jmp	qword ptr [rip + 0x21a132]




0xacb4:	test	eax, eax
0xacb6:	je	0xaf2e


0xacbc:	call	0x2950


0xacc1:	mov	ebp, dword ptr [rax]
0xacc3:	cmp	ebp, 0x11
0xacc6:	je	0xaa29


0xaa29:	mov	rdx, qword ptr [rsp + 0x38]
0xaa2e:	mov	rsi, qword ptr [rsp + 0x10]
0xaa33:	mov	rdi, r15
0xaa36:	call	0x2d80


0xaccc:	test	r13, r13
0xaccf:	mov	rbx, rax
0xacd2:	je	0xacdc


0xacdc:	mov	rdi, r15
0xacdf:	xor	r15d, r15d
0xace2:	call	0x30d0


0xacd4:	mov	rdi, r13
0xacd7:	call	0x2c60


0xace7:	mov	dword ptr [rbx], ebp
0xace9:	nop	dword ptr [rax]
0xacf0:	mov	rsi, qword ptr [rsp + 0x78]
0xacf5:	xor	rsi, qword ptr fs:[0x28]
0xacfe:	mov	rax, r15
0xad01:	jne	0xaf6d


0xafdb:	test	rax, rax
0xafde:	je	0xafe5


0xafe5:	call	0x12260


0xafe0:	add	rsp, 8
0xafe4:	ret	


0x6992:	mov	rdi, qword ptr [rbp - 0x308]
0x6999:	mov	qword ptr [rbp - 0x350], rax
0x69a0:	call	0xb3a0


0x69a5:	mov	rdi, rax
0x69a8:	mov	qword ptr [rbp - 0x358], rax
0x69af:	call	0x2af0


0x69b4:	mov	r15, qword ptr [rip + 0x218be5]
0x69bb:	mov	r12, rax
0x69be:	mov	rdi, r15
0x69c1:	call	0x2af0


0x69c6:	mov	r8, rax
0x69c9:	lea	rax, [r12 + rax]
0x69cd:	cmp	qword ptr [rbp - 0x350], rax
0x69d4:	mov	rsi, qword ptr [rbp - 0x358]
0x69db:	movzx	r9d, byte ptr [rbp - 0x35c]
0x69e3:	je	0x843e


0x843e:	mov	rdx, r12
0x8441:	mov	rdi, r14
0x8444:	mov	byte ptr [rbp - 0x350], r9b
0x844b:	mov	qword ptr [rbp - 0x358], r8
0x8452:	call	0x2c90


0x8457:	test	eax, eax
0x8459:	movzx	r9d, byte ptr [rbp - 0x350]
0x8461:	jne	0x69e9


0x8467:	lea	rdi, [r14 + r12]
0x846b:	mov	rsi, r15
0x846e:	call	0x2cf0


0x8473:	test	eax, eax
0x8475:	movzx	r9d, byte ptr [rbp - 0x350]
0x847d:	mov	r8, qword ptr [rbp - 0x358]
0x8484:	jne	0x69e9


0x848a:	mov	rdi, qword ptr [rbp - 0x308]
0x8491:	or	rcx, 0xffffffffffffffff
0x8495:	repne scasb	al, byte ptr [rdi]


0x8495:	repne scasb	al, byte ptr [rdi]


0x8497:	mov	rax, rcx
0x849a:	not	rax
0x849d:	lea	r14, [rax - 1]
0x84a1:	lea	rdi, [r14 + r8 + 1]
0x84a6:	call	0x12010


0xb409:	cmp	rax, 1
0xb40d:	jbe	0xb41a


0xb41a:	pop	rbx
0xb41b:	ret	


0xb40f:	cmp	byte ptr [rbx + rax - 1], 0x2f
0xb414:	lea	rdx, [rax - 1]
0xb418:	je	0xb428


0xb428:	cmp	rdx, 1
0xb42c:	je	0xb440


0xb440:	mov	eax, 1
0xb445:	pop	rbx
0xb446:	ret	


0xb42e:	cmp	byte ptr [rbx + rdx - 1], 0x2f
0xb433:	lea	rax, [rdx - 1]
0xb437:	je	0xb420


0xb420:	mov	rdx, rax
0xb423:	nop	dword ptr [rax + rax]
0xb428:	cmp	rdx, 1
0xb42c:	je	0xb440


0xb439:	mov	rax, rdx
0xb43c:	pop	rbx
0xb43d:	ret	


0xaa52:	test	r13, r13
0xaa55:	mov	r12, rax
0xaa58:	je	0xae00


0xae00:	mov	rcx, qword ptr [rsp + 0x68]
0xae05:	mov	edi, dword ptr [rsp + 0x64]
0xae09:	mov	r9d, 0x2e
0xae0f:	xor	edx, edx
0xae11:	movzx	ebx, word ptr [rbp]
0xae15:	mov	rsi, r15
0xae18:	mov	word ptr [rbp], r9w
0xae1d:	call	0xd850


0xaa5e:	mov	rdi, r13
0xaa61:	call	0x2c40


0x2c40:	jmp	qword ptr [rip + 0x21a142]




0xae22:	test	rax, rax
0xae25:	mov	r13, rax
0xae28:	lea	rdx, [rbp + r12]
0xae2d:	je	0xaec0


0xaec0:	mov	qword ptr [rsp + 8], rdx
0xaec5:	call	0x2950


0xae33:	mov	word ptr [rbp], bx
0xae37:	mov	dword ptr [rdx], 0x7e317e2e
0xae3d:	mov	byte ptr [rdx + 4], 0
0xae41:	jmp	0xaa66


0xaa66:	mov	rax, qword ptr [rsp + 0x40]
0xaa6b:	mov	qword ptr [rsp + 0x28], 1
0xaa74:	mov	dword ptr [rsp + 0x24], 2
0xaa7c:	mov	qword ptr [rsp + 0x30], rax
0xaa81:	lea	rax, [r12 + 4]
0xaa86:	mov	qword ptr [rsp + 8], rax
0xaa8b:	nop	dword ptr [rax + rax]
0xaa90:	mov	rdi, r13
0xaa93:	call	0x2de0


0xaeca:	cmp	dword ptr [rax], 0xc
0xaecd:	mov	rdx, qword ptr [rsp + 8]
0xaed2:	mov	word ptr [rbp], bx
0xaed6:	mov	dword ptr [rdx], 0x7e317e2e
0xaedc:	mov	byte ptr [rdx + 4], 0
0xaee0:	sete	al
0xaee3:	movzx	eax, al
0xaee6:	add	eax, 2
0xaee9:	mov	dword ptr [rsp + 0x24], eax
0xaeed:	jmp	0xac50


0xac50:	mov	eax, dword ptr [rsp + 0x24]
0xac54:	cmp	eax, 2
0xac57:	je	0xad40


0xad40:	cmp	dword ptr [rsp + 0x20], 2
0xad45:	jne	0xad70


0xac5d:	cmp	eax, 3
0xac60:	je	0xae60


0xad47:	mov	rax, qword ptr [rsp + 0x18]
0xad4c:	mov	rdx, qword ptr [rsp + 0x50]
0xad51:	mov	rsi, qword ptr [rip + 0x214848]
0xad58:	lea	rdi, [r15 + rax]
0xad5c:	call	0x2d80


0xad70:	mov	rdi, r15
0xad73:	call	0xb3a0


0xae60:	mov	rdi, r15
0xae63:	xor	r15d, r15d
0xae66:	call	0x30d0


0xac66:	cmp	eax, 1
0xac69:	je	0xad70


0xae6b:	call	0x2950


0xae70:	mov	dword ptr [rax], 0xc
0xae76:	jmp	0xacf0


0xad78:	mov	rdi, rax
0xad7b:	mov	rbx, rax
0xad7e:	call	0xb400


0xad61:	mov	dword ptr [rsp + 0x20], 1
0xad69:	nop	dword ptr [rax]
0xad70:	mov	rdi, r15
0xad73:	call	0xb3a0


0xad83:	cmp	rax, 0xe
0xad87:	mov	rbp, rax
0xad8a:	jbe	0xac6f


0xad90:	cmp	qword ptr [rsp + 0x48], 0
0xad96:	jne	0xae80


0xad9c:	mov	edi, dword ptr [rsp + 0x74]
0xada0:	mov	dword ptr [rsp + 8], edi
0xada4:	call	0x2950


0xae80:	cmp	rbp, qword ptr [rsp + 0x48]
0xae85:	jbe	0xac6f


0xae8b:	mov	rax, qword ptr [rsp + 0x18]
0xae90:	mov	rsi, qword ptr [rsp + 0x48]
0xae95:	add	rax, r15
0xae98:	lea	rdx, [rsi - 1]
0xae9c:	sub	rax, rbx
0xae9f:	cmp	rax, rsi
0xaea2:	cmovae	rax, rdx
0xaea6:	mov	byte ptr [rbx + rax], 0x7e
0xaeaa:	mov	byte ptr [rbx + rax + 1], 0
0xaeaf:	jmp	0xac6f


0xada9:	mov	edi, dword ptr [rsp + 8]
0xadad:	mov	r12, rax
0xadb0:	test	edi, edi
0xadb2:	js	0xaef2


0xaef2:	movzx	edx, word ptr [rbx]
0xaef5:	mov	esi, 0x2e
0xaefa:	mov	rdi, r15
0xaefd:	mov	word ptr [rbx], si
0xaf00:	mov	dword ptr [rax], 0
0xaf06:	mov	esi, 3
0xaf0b:	mov	dword ptr [rsp + 8], edx
0xaf0f:	call	0x2a60


0xadb8:	mov	dword ptr [rax], 0
0xadbe:	mov	esi, 3
0xadc3:	call	0x2d30


0x2a60:	jmp	qword ptr [rip + 0x21a232]


0x2d30:	jmp	qword ptr [rip + 0x21a0ca]






0xfb79:	mov	rdi, r13
0xfb7c:	mov	r14, rax
0xfb7f:	call	0xb400


0xfb84:	cmp	r14, rax
0xfb87:	je	0xfba0


0xfba0:	mov	rdx, r14
0xfba3:	mov	rsi, r13
0xfba6:	mov	rdi, r12
0xfba9:	call	0x2c90


0xfb89:	add	rsp, 0x18
0xfb8d:	xor	eax, eax
0xfb8f:	pop	rbx
0xfb90:	pop	rbp
0xfb91:	pop	r12
0xfb93:	pop	r13
0xfb95:	pop	r14
0xfb97:	pop	r15
0xfb99:	ret	


0xfbae:	test	eax, eax
0xfbb0:	jne	0xfb89


0xfbb2:	mov	edi, dword ptr [rsp + 0xc]
0xfbb6:	add	rsp, 0x18
0xfbba:	mov	rcx, rbp
0xfbbd:	mov	edx, r15d
0xfbc0:	mov	rsi, rbx
0xfbc3:	pop	rbx
0xfbc4:	pop	rbp
0xfbc5:	pop	r12
0xfbc7:	pop	r13
0xfbc9:	pop	r14
0xfbcb:	pop	r15
0xfbcd:	jmp	0xfa10


0xb7d7:	sub	rbx, r12
0xb7da:	mov	r13, rax
0xb7dd:	mov	rdi, rbp
0xb7e0:	add	rbx, rax
0xb7e3:	call	0x2af0


0xb7e8:	test	r13, r13
0xb7eb:	mov	r14, rax
0xb7ee:	je	0xb820


0xb820:	xor	eax, eax
0xb822:	cmp	byte ptr [rbp], 0x2f
0xb826:	mov	edx, 0
0xb82b:	sete	al
0xb82e:	mov	qword ptr [rsp], rax
0xb832:	mov	eax, 0x2e
0xb837:	cmovne	eax, edx
0xb83a:	mov	byte ptr [rsp + 0xf], al
0xb83e:	lea	rdi, [rbx + r14 + 1]
0xb843:	add	rdi, qword ptr [rsp]
0xb847:	call	0x2df0


0xb7f0:	cmp	byte ptr [r12 + rbx - 1], 0x2f
0xb7f6:	je	0xb8a0


0xb8a0:	mov	qword ptr [rsp], 0
0xb8a8:	mov	byte ptr [rsp + 0xf], 0
0xb8ad:	jmp	0xb83e


0xb7fc:	xor	eax, eax
0xb7fe:	cmp	byte ptr [rbp], 0x2f
0xb802:	mov	edx, 0
0xb807:	setne	al
0xb80a:	mov	qword ptr [rsp], rax
0xb80e:	mov	eax, 0x2f
0xb813:	cmove	eax, edx
0xb816:	mov	byte ptr [rsp + 0xf], al
0xb81a:	jmp	0xb83e


0xb83e:	lea	rdi, [rbx + r14 + 1]
0xb843:	add	rdi, qword ptr [rsp]
0xb847:	call	0x2df0


0xb84c:	test	rax, rax
0xb84f:	mov	r13, rax
0xb852:	je	0xb886


0xb886:	add	rsp, 0x18
0xb88a:	mov	rax, r13
0xb88d:	pop	rbx
0xb88e:	pop	rbp
0xb88f:	pop	r12
0xb891:	pop	r13
0xb893:	pop	r14
0xb895:	pop	r15
0xb897:	ret	


0xb854:	mov	rdi, rax
0xb857:	mov	rdx, rbx
0xb85a:	mov	rsi, r12
0xb85d:	call	0x2f20


0xb862:	movzx	ecx, byte ptr [rsp + 0xf]
0xb867:	mov	rdi, qword ptr [rsp]
0xb86b:	add	rdi, rax
0xb86e:	test	r15, r15
0xb871:	mov	byte ptr [rax], cl
0xb873:	je	0xb878


0xb878:	mov	rdx, r14
0xb87b:	mov	rsi, rbp
0xb87e:	call	0x2f20


0xb875:	mov	qword ptr [r15], rdi
0xb878:	mov	rdx, r14
0xb87b:	mov	rsi, rbp
0xb87e:	call	0x2f20


0xb883:	mov	byte ptr [rax], 0
0xb886:	add	rsp, 0x18
0xb88a:	mov	rax, r13
0xb88d:	pop	rbx
0xb88e:	pop	rbp
0xb88f:	pop	r12
0xb891:	pop	r13
0xb893:	pop	r14
0xb895:	pop	r15
0xb897:	ret	


0xb799:	test	rax, rax
0xb79c:	je	0xb7a3


0xb7a3:	call	0x12260


0xb79e:	add	rsp, 8
0xb7a2:	ret	


0x12249:	mov	rdi, rbx
0x1224c:	lea	rsi, [rax + 1]
0x12250:	pop	rbx
0x12251:	jmp	0x12210


0x12a66:	mov	r14, qword ptr [r15]
0x12a69:	mov	qword ptr [rsp], -1
0x12a71:	test	r14, r14
0x12a74:	je	0x12b2d


0x12b2d:	mov	rax, qword ptr [rsp]
0x12b31:	add	rsp, 0x28
0x12b35:	pop	rbx
0x12b36:	pop	rbp
0x12b37:	pop	r12
0x12b39:	pop	r13
0x12b3b:	pop	r14
0x12b3d:	pop	r15
0x12b3f:	ret	


0x12a7a:	mov	r12, rax
0x12a7d:	mov	byte ptr [rsp + 0x17], 0
0x12a82:	xor	ebx, ebx
0x12a84:	jmp	0x12ad7


0x12ad7:	mov	rsi, qword ptr [rsp + 8]
0x12adc:	mov	rdx, r12
0x12adf:	mov	rdi, r14
0x12ae2:	call	0x2970


0x2970:	jmp	qword ptr [rip + 0x21a2aa]




0x9bf7:	mov	r12, rax
0x9bfa:	call	0x2950


0x9bff:	mov	rcx, qword ptr [rbp - 0x308]
0x9c06:	mov	esi, dword ptr [rax]
0x9c08:	xor	edi, edi
0x9c0a:	xor	eax, eax
0x9c0c:	mov	rdx, r12
0x9c0f:	call	0x2f30


0x3118:	mov	esi, dword ptr [rbx]
0x311a:	mov	rdx, rax
0x311d:	mov	edi, 1
0x3122:	xor	eax, eax
0x3124:	call	0x2f30


0x119ff:	lea	rdx, [rip + 0x729a]
0x11a06:	mov	rcx, rax
0x11a09:	mov	r8d, 0x7e3
0x11a0f:	mov	esi, 1
0x11a14:	mov	rdi, rbp
0x11a17:	xor	eax, eax
0x11a19:	call	0x3050


0x11a1e:	lea	rsi, [rip + 0x6ff3]
0x11a25:	xor	edi, edi
0x11a27:	mov	edx, 5
0x11a2c:	call	0x2ad0


0x11a31:	mov	rsi, rbp
0x11a34:	mov	rdi, rax
0x11a37:	call	0x2cb0


0x11a3c:	cmp	r12, 9
0x11a40:	ja	0x11d80


0x11a46:	lea	rdx, [rip + 0x7227]
0x11a4d:	movsxd	rax, dword ptr [rdx + r12*4]
0x11a51:	add	rax, rdx
0x11a54:	jmp	rax


0x11d80:	mov	r10, qword ptr [rbx + 0x40]
0x11d84:	mov	r9, qword ptr [rbx + 0x38]
0x11d88:	mov	edx, 5
0x11d8d:	mov	rax, qword ptr [rbx + 0x10]
0x11d91:	mov	r8, qword ptr [rbx + 8]
0x11d95:	lea	rsi, [rip + 0x6e54]
0x11d9c:	mov	r13, qword ptr [rbx + 0x30]
0x11da0:	mov	r12, qword ptr [rbx + 0x28]
0x11da4:	mov	r15, qword ptr [rbx + 0x20]
0x11da8:	mov	r14, qword ptr [rbx + 0x18]
0x11dac:	mov	qword ptr [rsp + 0x18], r10
0x11db1:	mov	qword ptr [rsp + 0x10], r9
0x11db6:	mov	qword ptr [rsp], rax
0x11dba:	mov	qword ptr [rsp + 8], r8
0x11dbf:	mov	rbx, qword ptr [rbx]
0x11dc2:	jmp	0x11b52


0x11b52:	xor	edi, edi
0x11b54:	call	0x2ad0


0x11b59:	mov	r10, qword ptr [rsp + 0x18]
0x11b5e:	push	r10
0x11b60:	jmp	0x11aa4


0x11aa4:	mov	r9, qword ptr [rsp + 0x18]
0x11aa9:	mov	rdx, rax
0x11aac:	mov	rcx, rbx
0x11aaf:	mov	esi, 1
0x11ab4:	mov	rdi, rbp
0x11ab7:	xor	eax, eax
0x11ab9:	push	r9
0x11abb:	push	r13
0x11abd:	push	r12
0x11abf:	push	r15
0x11ac1:	push	r14
0x11ac3:	mov	r9, qword ptr [rsp + 0x30]
0x11ac8:	mov	r8, qword ptr [rsp + 0x38]
0x11acd:	call	0x3050


0x11ad2:	add	rsp, 0x30
0x11ad6:	add	rsp, 0x28
0x11ada:	pop	rbx
0x11adb:	pop	rbp
0x11adc:	pop	r12
0x11ade:	pop	r13
0x11ae0:	pop	r14
0x11ae2:	pop	r15
0x11ae4:	ret	


0x11f16:	mov	rax, qword ptr [rsp + 0x78]
0x11f1b:	xor	rax, qword ptr fs:[0x28]
0x11f24:	jne	0x11f30


0x11f26:	add	rsp, 0xb8
0x11f2d:	pop	rbx
0x11f2e:	pop	rbp
0x11f2f:	ret	


0x11f30:	call	0x2b30


0x11e40:	mov	rax, qword ptr [rsp + 0x58]
0x11e45:	xor	rax, qword ptr fs:[0x28]
0x11e4e:	jne	0x11e55


0x11e50:	add	rsp, 0x68
0x11e54:	ret	


0x11e55:	call	0x2b30


0x4733:	mov	rbx, rax
0x4736:	call	0x2950


0x473b:	mov	esi, dword ptr [rax]
0x473d:	mov	rdx, rbx
0x4740:	xor	edi, edi
0x4742:	xor	eax, eax
0x4744:	call	0x2f30


0x7f63:	mov	edi, 1
0x7f68:	mov	rsi, rax
0x7f6b:	xor	eax, eax
0x7f6d:	call	0x2ee0


0x2ee0:	jmp	qword ptr [rip + 0x219ff2]




0x6fc3:	mov	edi, 1
0x6fc8:	mov	rsi, rax
0x6fcb:	xor	eax, eax
0x6fcd:	call	0x2ee0


0x495d:	mov	rdi, qword ptr [rip + 0x2187bc]
0x4964:	mov	rdx, rax
0x4967:	mov	rcx, rbx
0x496a:	mov	esi, 1
0x496f:	xor	eax, eax
0x4971:	call	0x3050


0x4976:	mov	edi, ebp
0x4978:	call	0x3030


0x3030:	jmp	qword ptr [rip + 0x219f4a]




0x498b:	mov	rcx, rbx
0x498e:	mov	r9, rbx
0x4991:	mov	r8, rbx
0x4994:	mov	rdx, rbx
0x4997:	mov	rsi, rax
0x499a:	mov	edi, 1
0x499f:	xor	eax, eax
0x49a1:	call	0x2ee0


0x12b83:	mov	rbx, rax
0x12b86:	mov	rsi, rbp
0x12b89:	mov	edi, 1
0x12b8e:	call	0xf6a0


0x12bce:	mov	rbx, rax
0x12bd1:	jmp	0x12b86


0x12b86:	mov	rsi, rbp
0x12b89:	mov	edi, 1
0x12b8e:	call	0xf6a0


0x11f64:	lea	rdx, [rip + 0x6a83]
0x11f6b:	mov	rsi, rax
0x11f6e:	mov	edi, 1
0x11f73:	xor	eax, eax
0x11f75:	call	0x2ee0


0x12277:	mov	edi, dword ptr [rip + 0x20adcb]
0x1227d:	lea	rdx, [rip + 0x6bdc]
0x12284:	mov	rcx, rax
0x12287:	xor	esi, esi
0x12289:	xor	eax, eax
0x1228b:	call	0x2f30


0x12c11:	mov	rdi, rax
0x12c14:	mov	rsi, rbx
0x12c17:	call	0x2cb0


0x12c1c:	mov	r15, qword ptr [r14]
0x12c1f:	test	r15, r15
0x12c22:	je	0x12cb8


0x12cb8:	mov	rdi, qword ptr [rip + 0x20a461]
0x12cbf:	mov	rax, qword ptr [rdi + 0x28]
0x12cc3:	cmp	rax, qword ptr [rdi + 0x30]
0x12cc7:	jae	0x12ce8


0x12c28:	xor	r13d, r13d
0x12c2b:	xor	ebx, ebx
0x12c2d:	jmp	0x12c68


0x12cc9:	lea	rdx, [rax + 1]
0x12ccd:	mov	qword ptr [rdi + 0x28], rdx
0x12cd1:	mov	byte ptr [rax], 0xa
0x12cd4:	add	rsp, 8
0x12cd8:	pop	rbx
0x12cd9:	pop	rbp
0x12cda:	pop	r12
0x12cdc:	pop	r13
0x12cde:	pop	r14
0x12ce0:	pop	r15
0x12ce2:	ret	


0x12ce8:	add	rsp, 8
0x12cec:	mov	esi, 0xa
0x12cf1:	pop	rbx
0x12cf2:	pop	rbp
0x12cf3:	pop	r12
0x12cf5:	pop	r13
0x12cf7:	pop	r14
0x12cf9:	pop	r15
0x12cfb:	jmp	0x2b90


0x12c68:	test	rbx, rbx
0x12c6b:	je	0x12c30


0x2b90:	jmp	qword ptr [rip + 0x21a19a]


0x12c30:	mov	rdi, r15
0x12c33:	add	rbx, 1
0x12c37:	mov	r13, rbp
0x12c3a:	call	0xf6c0


0x12c6d:	mov	rdx, r12
0x12c70:	mov	rsi, rbp
0x12c73:	mov	rdi, r13
0x12c76:	call	0x2c90




0x12c7b:	test	eax, eax
0x12c7d:	jne	0x12c30


0x12c7f:	mov	rdi, r15
0x12c82:	add	rbx, 1
0x12c86:	add	rbp, r12
0x12c89:	call	0xf6c0


0x12d31:	test	rax, rax
0x12d34:	js	0x12d45


0x12d45:	mov	rdx, rax
0x12d48:	mov	rsi, r12
0x12d4b:	mov	rdi, r14
0x12d4e:	call	0x12b60


0x12d36:	add	rsp, 8
0x12d3a:	pop	rbx
0x12d3b:	pop	rbp
0x12d3c:	pop	r12
0x12d3e:	pop	r13
0x12d40:	pop	r14
0x12d42:	pop	r15
0x12d44:	ret	


0xafb4:	lea	rdx, [rip + 0xd165]
0xafbb:	mov	eax, dword ptr [rdx + rax*4]
0xafbe:	add	rsp, 8
0xafc2:	ret	


0x12dcc:	mov	ebx, dword ptr [rbp]
0x12dcf:	mov	rdi, rbp
0x12dd2:	mov	r12, rax
0x12dd5:	call	0x13f50


0x12e4d:	test	rax, rax
0x12e50:	mov	rbx, rax
0x12e53:	je	0x12e62


0x12e62:	mov	rax, rbx
0x12e65:	pop	rbx
0x12e66:	pop	rbp
0x12e67:	pop	r12
0x12e69:	pop	r13
0x12e6b:	pop	r14
0x12e6d:	ret	


0x12e55:	mov	rdi, rax
0x12e58:	call	0x2d10


0x2d10:	jmp	qword ptr [rip + 0x21a0da]




0xffbb:	test	rax, rax
0xffbe:	je	0xffe8


0xffe8:	xor	ebp, ebp
0xffea:	jmp	0xffdc


0xffc0:	mov	esi, ebp
0xffc2:	mov	rbx, rax
0xffc5:	mov	rdi, rax
0xffc8:	call	0xfc30


0xffdc:	mov	rax, rbp
0xffdf:	pop	rbx
0xffe0:	pop	rbp
0xffe1:	pop	r12
0xffe3:	ret	


0xffcd:	mov	rdi, rbx
0xffd0:	mov	rbp, rax
0xffd3:	call	0x2c60


0x79cc:	test	rax, rax
0x79cf:	mov	qword ptr [rbp - 0x368], rax
0x79d6:	je	0x8838


0x8838:	mov	rsi, qword ptr [rbp - 0x310]
0x883f:	mov	edi, 4
0x8844:	call	0xf3f0


0x79dc:	cmp	dword ptr [rbx + 4], 3
0x79e0:	jne	0x79ec


0x79e2:	mov	dword ptr [rbp - 0x2ec], 2
0x79ec:	mov	rax, qword ptr [rbp - 0x368]
0x79f3:	cmp	byte ptr [rax], 0
0x79f6:	je	0x8f35


0x79ec:	mov	rax, qword ptr [rbp - 0x368]
0x79f3:	cmp	byte ptr [rax], 0
0x79f6:	je	0x8f35


0x8f35:	mov	byte ptr [rbp - 0x315], 0
0x8f3c:	mov	r12d, 1
0x8f42:	jmp	0x7b47


0x79fc:	lea	rax, [rbp - 0x2f0]
0x7a03:	lea	r10, [rbp - 0x280]
0x7a0a:	mov	dword ptr [rbp - 0x380], r13d
0x7a11:	mov	r15, qword ptr [rbp - 0x368]
0x7a18:	mov	r13, qword ptr [rbp - 0x340]
0x7a1f:	mov	r12d, 1
0x7a25:	mov	qword ptr [rbp - 0x348], rax
0x7a2c:	lea	rax, [rbp - 0x2f9]
0x7a33:	mov	byte ptr [rbp - 0x315], 0
0x7a3a:	mov	byte ptr [rbp - 0x370], r14b
0x7a41:	mov	qword ptr [rbp - 0x378], rbx
0x7a48:	mov	qword ptr [rbp - 0x350], rax
0x7a4f:	lea	rax, [rbp - 0x2f8]
0x7a56:	mov	qword ptr [rbp - 0x340], r10
0x7a5d:	mov	qword ptr [rbp - 0x358], rax
0x7a64:	jmp	0x7a94


0x7b47:	mov	rdi, qword ptr [rbp - 0x368]
0x7b4e:	call	0x30d0


0x7a94:	mov	rdi, qword ptr [rbp - 0x310]
0x7a9b:	xor	edx, edx
0x7a9d:	mov	rsi, r15
0x7aa0:	call	0xb790


0x7aa5:	mov	rdi, qword ptr [rbp - 0x308]
0x7aac:	xor	edx, edx
0x7aae:	mov	rsi, r15
0x7ab1:	mov	rbx, rax
0x7ab4:	call	0xb790


0x7ab9:	mov	r14, rax
0x7abc:	mov	rax, qword ptr [rbp - 0x338]
0x7ac3:	mov	r9, qword ptr [rbp - 0x348]
0x7aca:	mov	r8, qword ptr [rbp - 0x328]
0x7ad1:	mov	rcx, qword ptr [rbp - 0x340]
0x7ad8:	mov	rsi, r14
0x7adb:	mov	edx, dword ptr [rbp - 0x320]
0x7ae1:	mov	rdi, rbx
0x7ae4:	movzx	eax, byte ptr [rax]
0x7ae7:	push	0
0x7ae9:	push	qword ptr [rbp - 0x350]
0x7aef:	push	qword ptr [rbp - 0x358]
0x7af5:	push	0
0x7af7:	mov	byte ptr [rbp - 0x2f8], al
0x7afd:	call	0x5c20


0x7b02:	and	r12d, eax
0x7b05:	movzx	eax, byte ptr [rbp - 0x2f9]
0x7b0c:	add	rsp, 0x20
0x7b10:	or	byte ptr [r13], al
0x7b14:	mov	rdi, r14
0x7b17:	call	0x30d0


0x7b1c:	mov	rdi, rbx
0x7b1f:	call	0x30d0


0x7b24:	cmp	byte ptr [rbp - 0x2f9], 0
0x7b2b:	je	0x7a70


0x7a70:	movzx	eax, byte ptr [rbp - 0x2f8]
0x7a77:	mov	rdi, r15
0x7a7a:	or	byte ptr [rbp - 0x315], al
0x7a80:	call	0x2af0


0x7b31:	movzx	r14d, byte ptr [rbp - 0x370]
0x7b39:	mov	rbx, qword ptr [rbp - 0x378]
0x7b40:	mov	r13d, dword ptr [rbp - 0x380]
0x7b47:	mov	rdi, qword ptr [rbp - 0x368]
0x7b4e:	call	0x30d0


0x7a85:	lea	r15, [r15 + rax + 1]
0x7a8a:	cmp	byte ptr [r15], 0
0x7a8e:	je	0x7b31


0x7b53:	movzx	ecx, byte ptr [rbp - 0x315]
0x7b5a:	mov	rax, qword ptr [rbp - 0x338]
0x7b61:	mov	byte ptr [rax], cl
0x7b63:	test	r13b, r13b
0x7b66:	jne	0x8142


0x12f0e:	mov	rcx, qword ptr [rsp + 0x18]
0x12f13:	xor	rcx, qword ptr fs:[0x28]
0x12f1c:	mov	rax, qword ptr [rsp]
0x12f20:	mov	rdx, qword ptr [rsp + 8]
0x12f25:	jne	0x12f2c


0x12f27:	add	rsp, 0x28
0x12f2b:	ret	


0x12f2c:	call	0x2b30


0x318c:	lea	rsi, [rip + 0x133a0]
0x3193:	lea	rdi, [rip + 0x13370]
0x319a:	call	0x2aa0


0x2aa0:	jmp	qword ptr [rip + 0x21a212]




0x12f4b:	mov	rdx, rax
0x12f4e:	mov	eax, 1
0x12f53:	test	rdx, rdx
0x12f56:	je	0x12f75


0x12f75:	add	rsp, 8
0x12f79:	ret	


0x12f58:	lea	rdi, [rip + 0x5f04]
0x12f5f:	mov	ecx, 2
0x12f64:	mov	rsi, rdx
0x12f67:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x12f67:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x12f69:	seta	cl
0x12f6c:	sbb	cl, 0
0x12f6f:	xor	eax, eax
0x12f71:	test	cl, cl
0x12f73:	jne	0x12f80


0x12f80:	lea	rdi, [rip + 0x5ede]
0x12f87:	mov	ecx, 6
0x12f8c:	mov	rsi, rdx
0x12f8f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x12f8f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x12f91:	seta	al
0x12f94:	sbb	al, 0
0x12f96:	test	al, al
0x12f98:	setne	al
0x12f9b:	add	rsp, 8
0x12f9f:	ret	


0x1287c:	test	al, al
0x1287e:	jne	0x12890


0x12880:	movzx	eax, byte ptr [r13]
0x12885:	mov	ebp, 1
0x1288a:	mov	dword ptr [rbx], eax
0x1288c:	nop	dword ptr [rax]
0x12890:	mov	rdx, qword ptr [rsp + 8]
0x12895:	xor	rdx, qword ptr fs:[0x28]
0x1289e:	mov	rax, rbp
0x128a1:	jne	0x128ae


0x12fee:	test	rax, rax
0x12ff1:	je	0x13010


0x13010:	lea	rax, [rip + 0x5e54]
0x13017:	add	rsp, 8
0x1301b:	ret	


0x12ff3:	cmp	byte ptr [rax], 0
0x12ff6:	lea	rdx, [rip + 0x5e6e]
0x12ffd:	cmove	rax, rdx
0x13001:	add	rsp, 8
0x13005:	ret	


0xda60:	movzx	edx, byte ptr [rax]
0xda63:	and	edx, 0xffffffdf
0xda66:	cmp	dl, 0x55
0xda69:	je	0xdae0


0xdae0:	movzx	edx, byte ptr [rax + 1]
0xdae4:	and	edx, 0xffffffdf
0xdae7:	cmp	dl, 0x54
0xdaea:	jne	0xda70


0xda6b:	cmp	dl, 0x47
0xda6e:	je	0xda90


0xdaec:	movzx	edx, byte ptr [rax + 2]
0xdaf0:	and	edx, 0xffffffdf
0xdaf3:	cmp	dl, 0x46
0xdaf6:	jne	0xda70


0xda70:	lea	rax, [rip + 0xa8ac]
0xda77:	lea	rdx, [rip + 0xa8a7]
0xda7e:	cmp	ebx, 9
0xda81:	cmovne	rax, rdx
0xda85:	add	rsp, 8
0xda89:	pop	rbx
0xda8a:	pop	rbp
0xda8b:	ret	


0xda90:	movzx	edx, byte ptr [rax + 1]
0xda94:	and	edx, 0xffffffdf
0xda97:	cmp	dl, 0x42
0xda9a:	jne	0xda70


0xdafc:	cmp	byte ptr [rax + 3], 0x2d
0xdb00:	jne	0xda70


0xda9c:	cmp	byte ptr [rax + 2], 0x31
0xdaa0:	jne	0xda70


0xdb06:	cmp	byte ptr [rax + 4], 0x38
0xdb0a:	jne	0xda70


0xdaa2:	cmp	byte ptr [rax + 3], 0x38
0xdaa6:	jne	0xda70


0xdb10:	cmp	byte ptr [rax + 5], 0
0xdb14:	jne	0xda70


0xdaa8:	cmp	byte ptr [rax + 4], 0x30
0xdaac:	jne	0xda70


0xdb1a:	cmp	byte ptr [rbp], 0x60
0xdb1e:	lea	rax, [rip + 0xa7ef]
0xdb25:	lea	rdx, [rip + 0xa7ec]
0xdb2c:	cmovne	rax, rdx
0xdb30:	add	rsp, 8
0xdb34:	pop	rbx
0xdb35:	pop	rbp
0xdb36:	ret	


0xdaae:	cmp	byte ptr [rax + 5], 0x33
0xdab2:	jne	0xda70


0xdab4:	cmp	byte ptr [rax + 6], 0x30
0xdab8:	jne	0xda70


0xdaba:	cmp	byte ptr [rax + 7], 0
0xdabe:	jne	0xda70


0xdac0:	cmp	byte ptr [rbp], 0x60
0xdac4:	lea	rax, [rip + 0xa851]
0xdacb:	lea	rdx, [rip + 0xa84e]
0xdad2:	cmovne	rax, rdx
0xdad6:	add	rsp, 8
0xdada:	pop	rbx
0xdadb:	pop	rbp
0xdadc:	ret	


0x84ab:	mov	r15, qword ptr [rip + 0x2170ee]
0x84b2:	mov	rsi, qword ptr [rbp - 0x308]
0x84b9:	mov	rdx, r14
0x84bc:	mov	rdi, rax
0x84bf:	mov	r12, rax
0x84c2:	call	0x2f20


0x84c7:	mov	rsi, r15
0x84ca:	mov	rdi, rax
0x84cd:	call	0x2990


0x2990:	jmp	qword ptr [rip + 0x21a29a]




0xd68d:	mov	edx, 0x13d
0xd692:	mov	dword ptr [rax + 4], 0xfff
0xd699:	mov	dword ptr [rax + 0xc], 0xfff
0xd6a0:	mov	word ptr [rax], dx
0xd6a3:	mov	dword ptr [rax + 8], ebx
0xd6a6:	mov	byte ptr [rax + 0x11], 0
0xd6aa:	mov	rcx, qword ptr [rsp + 0x98]
0xd6b2:	xor	rcx, qword ptr fs:[0x28]
0xd6bb:	jne	0xd6d4


0xd320:	xor	esi, esi
0xd322:	xor	r11d, r11d
0xd325:	movzx	r9d, byte ptr [rbx]
0xd329:	cmp	r9b, 0x61
0xd32d:	je	0xd580


0xd580:	mov	r11d, 0xfff
0xd586:	add	rbx, 1
0xd58a:	jmp	0xd325


0xd333:	jle	0xd3a0


0xd325:	movzx	r9d, byte ptr [rbx]
0xd329:	cmp	r9b, 0x61
0xd32d:	je	0xd580


0xd3a0:	cmp	r9b, 0x2d
0xd3a4:	je	0xd3b2


0xd335:	cmp	r9b, 0x6f
0xd339:	je	0xd5b0


0xd3b2:	lea	rdi, [rsi + 1]
0xd3b6:	shl	rsi, 4
0xd3ba:	add	rsi, rax
0xd3bd:	jmp	0xd424


0xd3a6:	cmp	r9b, 0x3d
0xd3aa:	je	0xd3b2


0xd5b0:	or	r11d, 0x207
0xd5b7:	jmp	0xd586


0xd33f:	cmp	r9b, 0x75
0xd343:	je	0xd5a0


0xd424:	movsx	edx, byte ptr [rbx + 1]
0xd428:	lea	rcx, [rbx + 1]
0xd42c:	cmp	dl, 0x67
0xd42f:	je	0xd570


0xd3ac:	cmp	r9b, 0x2b
0xd3b0:	jne	0xd353


0xd586:	add	rbx, 1
0xd58a:	jmp	0xd325


0xd5a0:	or	r11d, 0x9c0
0xd5a7:	jmp	0xd586


0xd349:	cmp	r9b, 0x67
0xd34d:	je	0xd590


0xd570:	lea	r8, [rbx + 2]
0xd574:	mov	r10d, 0x38
0xd57a:	jmp	0xd3dc


0xd435:	jg	0xd3c0


0xd353:	mov	rdi, rax
0xd356:	call	0x30d0


0xd590:	or	r11d, 0x438
0xd597:	jmp	0xd586


0xd3dc:	mov	byte ptr [rsi], r9b
0xd3df:	mov	byte ptr [rsi + 1], 3
0xd3e3:	movzx	r9d, byte ptr [rbx + 2]
0xd3e8:	mov	dword ptr [rsi + 4], r11d
0xd3ec:	mov	rbx, r8
0xd3ef:	mov	dword ptr [rsi + 8], r10d
0xd3f3:	mov	edx, r10d
0xd3f6:	and	edx, r11d
0xd3f9:	test	r11d, r11d
0xd3fc:	cmovne	r10d, edx
0xd400:	mov	edx, r9d
0xd403:	mov	dword ptr [rsi + 0xc], r10d
0xd407:	add	rsi, 0x10
0xd40b:	and	edx, 0xffffffef
0xd40e:	lea	rcx, [rdi + 1]
0xd412:	cmp	dl, 0x2d
0xd415:	je	0xd421


0xd437:	lea	r8d, [rdx - 0x30]
0xd43b:	cmp	r8b, 7
0xd43f:	ja	0xd4b0


0xd3c0:	cmp	dl, 0x6f
0xd3c3:	lea	r8, [rbx + 2]
0xd3c7:	je	0xd560


0xd421:	mov	rdi, rcx
0xd424:	movsx	edx, byte ptr [rbx + 1]
0xd428:	lea	rcx, [rbx + 1]
0xd42c:	cmp	dl, 0x67
0xd42f:	je	0xd570


0xd417:	cmp	r9b, 0x2b
0xd41b:	jne	0xd620


0xd441:	xor	r8d, r8d
0xd444:	nop	dword ptr [rax]
0xd448:	lea	r8d, [rdx + r8*8 - 0x30]
0xd44d:	add	rcx, 1
0xd451:	cmp	r8d, 0xfff
0xd458:	ja	0xd353


0xd4b0:	lea	r8d, [rdx - 0x58]
0xd4b4:	xor	r10d, r10d
0xd4b7:	mov	ebx, 1
0xd4bc:	cmp	r8b, 0x20
0xd4c0:	ja	0xd4f9


0xd560:	mov	r10d, 7
0xd566:	jmp	0xd3dc


0xd3cd:	cmp	dl, 0x75
0xd3d0:	mov	r10d, 0x1c0
0xd3d6:	jne	0xd4b0


0xd620:	cmp	r9b, 0x2c
0xd624:	jne	0xd632


0xd45e:	movsx	edx, byte ptr [rcx]
0xd461:	lea	r10d, [rdx - 0x30]
0xd465:	cmp	r10b, 7
0xd469:	jbe	0xd448


0xd4f9:	mov	byte ptr [rsi], r9b
0xd4fc:	mov	byte ptr [rsi + 1], bl
0xd4ff:	mov	r9d, edx
0xd502:	mov	dword ptr [rsi + 4], r11d
0xd506:	mov	dword ptr [rsi + 8], r10d
0xd50a:	mov	rbx, rcx
0xd50d:	jmp	0xd3f3


0xd626:	add	rbx, 1
0xd62a:	mov	rsi, rdi
0xd62d:	jmp	0xd322


0xd632:	test	r9b, r9b
0xd635:	jne	0xd353


0xd448:	lea	r8d, [rdx + r8*8 - 0x30]
0xd44d:	add	rcx, 1
0xd451:	cmp	r8d, 0xfff
0xd458:	ja	0xd353


0xd46b:	test	r11d, r11d
0xd46e:	jne	0xd353


0xd3f3:	mov	edx, r10d
0xd3f6:	and	edx, r11d
0xd3f9:	test	r11d, r11d
0xd3fc:	cmovne	r10d, edx
0xd400:	mov	edx, r9d
0xd403:	mov	dword ptr [rsi + 0xc], r10d
0xd407:	add	rsi, 0x10
0xd40b:	and	edx, 0xffffffef
0xd40e:	lea	rcx, [rdi + 1]
0xd412:	cmp	dl, 0x2d
0xd415:	je	0xd421


0xd322:	xor	r11d, r11d
0xd325:	movzx	r9d, byte ptr [rbx]
0xd329:	cmp	r9b, 0x61
0xd32d:	je	0xd580


0xd63b:	shl	rdi, 4
0xd63f:	mov	byte ptr [rax + rdi + 1], 0
0xd644:	jmp	0xd35d


0xd474:	test	dl, dl
0xd476:	je	0xd481


0xd35d:	add	rsp, 8
0xd361:	pop	rbx
0xd362:	pop	rbp
0xd363:	ret	


0xd481:	mov	byte ptr [rsi], r9b
0xd484:	mov	byte ptr [rsi + 1], 1
0xd488:	mov	r9d, edx
0xd48b:	mov	dword ptr [rsi + 4], 0xfff
0xd492:	mov	dword ptr [rsi + 8], r8d
0xd496:	mov	rbx, rcx
0xd499:	mov	r11d, 0xfff
0xd49f:	mov	r10d, 0xfff
0xd4a5:	jmp	0xd400


0xd478:	cmp	dl, 0x2c
0xd47b:	jne	0xd353


0xd400:	mov	edx, r9d
0xd403:	mov	dword ptr [rsi + 0xc], r10d
0xd407:	add	rsi, 0x10
0xd40b:	and	edx, 0xffffffef
0xd40e:	lea	rcx, [rdi + 1]
0xd412:	cmp	dl, 0x2d
0xd415:	je	0xd421


0xd35b:	xor	eax, eax
0xd35d:	add	rsp, 8
0xd361:	pop	rbx
0xd362:	pop	rbp
0xd363:	ret	


0xd5ef:	mov	edx, 0x13d
0xd5f4:	mov	dword ptr [rax + 4], 0xfff
0xd5fb:	mov	dword ptr [rax + 8], ebp
0xd5fe:	mov	word ptr [rax], dx
0xd601:	mov	dword ptr [rax + 0xc], ebx
0xd604:	mov	byte ptr [rax + 0x11], 0
0xd608:	add	rsp, 8
0xd60c:	pop	rbx
0xd60d:	pop	rbp
0xd60e:	ret	


0x135ea:	mov	rbx, rax
0x135ed:	mov	qword ptr [rax], 0
0x135f4:	lea	rax, [rip - 0x12b]
0x135fb:	lea	rdi, [rip + 0x588e]
0x13602:	xor	esi, esi
0x13604:	mov	qword ptr [rbx + 0x10], 0
0x1360c:	mov	qword ptr [rbx + 8], rax
0x13610:	mov	qword ptr [rbx + 0x18], 0
0x13618:	xor	eax, eax
0x1361a:	call	0x2f60


0x1361f:	test	eax, eax
0x13621:	lea	r13, [rbx + 0x20]
0x13625:	mov	r15d, eax
0x13628:	js	0x136a8


0x136a8:	lea	r12, [rsp + 0x10]
0x136ad:	xor	esi, esi
0x136af:	mov	r14d, 0x18
0x136b5:	mov	rdi, r12
0x136b8:	call	0x2bd0


0x1362a:	cmp	rbp, 0x800
0x13631:	mov	rdx, rbp
0x13634:	mov	r14d, 0x800
0x1363a:	cmova	rdx, r14
0x1363e:	mov	ecx, 0x1018
0x13643:	mov	rsi, r13
0x13646:	mov	edi, eax
0x13648:	call	0x29b0


0x2bd0:	jmp	qword ptr [rip + 0x21a17a]


0x29b0:	jmp	qword ptr [rip + 0x21a28a]






0xb522:	mov	rdi, r12
0xb525:	mov	rbx, rax
0xb528:	call	0x12240


0x13682:	mov	rbx, rax
0x13685:	mov	qword ptr [rax], 0
0x1368c:	lea	rax, [rip - 0x1c3]
0x13693:	mov	qword ptr [rbx + 0x10], 0
0x1369b:	mov	qword ptr [rbx + 8], rax
0x1369f:	jmp	0x135b7


0x135b7:	mov	rdx, qword ptr [rsp + 0x28]
0x135bc:	xor	rdx, qword ptr fs:[0x28]
0x135c5:	mov	rax, rbx
0x135c8:	jne	0x1377f


0x135ce:	add	rsp, 0x38
0x135d2:	pop	rbx
0x135d3:	pop	rbp
0x135d4:	pop	r12
0x135d6:	pop	r13
0x135d8:	pop	r14
0x135da:	pop	r15
0x135dc:	ret	


0x1377f:	call	0x2b30


0x9fdd:	mov	rdi, r13
0x9fe0:	mov	rbx, rax
0x9fe3:	call	0x12240


0x121c9:	mov	rdx, rbx
0x121cc:	xor	esi, esi
0x121ce:	mov	rdi, rax
0x121d1:	pop	rbx
0x121d2:	jmp	0x2bf0


0x12224:	add	rsp, 8
0x12228:	mov	rdx, rbx
0x1222b:	mov	rsi, rbp
0x1222e:	pop	rbx
0x1222f:	pop	rbp
0x12230:	mov	rdi, rax
0x12233:	jmp	0x2d80


0x132be:	mov	qword ptr [rax], rbx
0x132c1:	mov	qword ptr [rax + 0x10], 0
0x132c9:	mov	qword ptr [rax + 8], 0
0x132d1:	pop	rbx
0x132d2:	ret	


0x132e6:	test	rax, rax
0x132e9:	je	0x13310


0x13310:	xor	eax, eax
0x13312:	pop	rbx
0x13313:	ret	


0x132eb:	mov	rbx, rax
0x132ee:	mov	edi, 0x18
0x132f3:	call	0x12010


0x132f8:	mov	qword ptr [rax], rbx
0x132fb:	mov	qword ptr [rax + 0x10], 0
0x13303:	mov	qword ptr [rax + 8], 0
0x1330b:	pop	rbx
0x1330c:	ret	


0x13465:	mov	rdi, rbx
0x13468:	pop	rbx
0x13469:	jmp	0x30d0


0x13a3d:	mov	rdi, rbx
0x13a40:	call	0x30d0


0x13a45:	test	rbp, rbp
0x13a48:	je	0x13a60


0x13a60:	add	rsp, 8
0x13a64:	xor	eax, eax
0x13a66:	pop	rbx
0x13a67:	pop	rbp
0x13a68:	ret	


0x13a4a:	add	rsp, 8
0x13a4e:	mov	rdi, rbp
0x13a51:	pop	rbx
0x13a52:	pop	rbp
0x13a53:	jmp	0x13f50


0x13485:	mov	r12d, eax
0x13488:	call	0x2950


0x1348d:	mov	r13d, dword ptr [rax]
0x13490:	mov	rdi, rbx
0x13493:	mov	rdx, -1
0x1349a:	mov	esi, 0x18
0x1349f:	mov	rbp, rax
0x134a2:	call	0x2f50


0x134a7:	mov	rdi, rbx
0x134aa:	call	0x30d0


0x134af:	mov	dword ptr [rbp], r13d
0x134b3:	add	rsp, 8
0x134b7:	mov	eax, r12d
0x134ba:	pop	rbx
0x134bb:	pop	rbp
0x134bc:	pop	r12
0x134be:	pop	r13
0x134c0:	ret	


0x12803:	mov	edx, r12d
0x12806:	mov	rsi, rbp
0x12809:	mov	edi, eax
0x1280b:	call	0x2bc0


0x12810:	cmp	rax, -1
0x12814:	je	0x12822


0x12822:	pop	rbx
0x12823:	pop	rbp
0x12824:	pop	r12
0x12826:	ret	


0x12816:	and	dword ptr [rbx], 0xffffffef
0x12819:	mov	qword ptr [rbx + 0x90], rax
0x12820:	xor	eax, eax
0x12822:	pop	rbx
0x12823:	pop	rbp
0x12824:	pop	r12
0x12826:	ret	


0x12797:	mov	rdi, rbx
0x1279a:	pop	rbx
0x1279b:	jmp	0x2e00


0xb1a7:	test	eax, eax
0xb1a9:	mov	rdi, qword ptr [rip + 0x211f40]
0xb1b0:	je	0xb118


0xb118:	call	0x12760


0xb1b6:	call	0x12dc0


0xb46d:	mov	ecx, ebx
0xb46f:	xor	edx, edx
0xb471:	xor	esi, esi
0xb473:	pop	rbx
0xb474:	mov	edi, eax
0xb476:	jmp	0x2c70


0x13f5c:	test	eax, eax
0x13f5e:	mov	rdi, rbx
0x13f61:	js	0x13fb7


0x13fb7:	pop	rbx
0x13fb8:	pop	rbp
0x13fb9:	pop	r12
0x13fbb:	jmp	0x2a80


0x13f63:	call	0x2e50


0x2a80:	jmp	qword ptr [rip + 0x21a222]




0x13f68:	test	eax, eax
0x13f6a:	jne	0x13f98


0x13f6c:	mov	rdi, rbx
0x13f6f:	call	0x12760


0x13f98:	mov	rdi, rbx
0x13f9b:	call	0x2db0


0x13fa0:	xor	esi, esi
0x13fa2:	mov	edx, 1
0x13fa7:	mov	edi, eax
0x13fa9:	call	0x2bc0


0x13fae:	cmp	rax, -1
0x13fb2:	jne	0x13f6c


0x13fb4:	mov	rdi, rbx
0x13fb7:	pop	rbx
0x13fb8:	pop	rbp
0x13fb9:	pop	r12
0x13fbb:	jmp	0x2a80


0x1538c:	test	rax, rax
0x1538f:	mov	rbx, rax
0x15392:	je	0x153a1


0x153a1:	mov	rax, rbx
0x153a4:	pop	rbx
0x153a5:	pop	rbp
0x153a6:	pop	r12
0x153a8:	ret	


0x15394:	mov	rdi, rax
0x15397:	call	0x2db0


0x1539c:	cmp	eax, 2
0x1539f:	jbe	0x153b0


0x153b0:	mov	edi, eax
0x153b2:	call	0x13f40


0x1356e:	test	rax, rax
0x13571:	mov	r13, rax
0x13574:	je	0x13778


0x13778:	xor	ebx, ebx
0x1377a:	jmp	0x135b7


0x1357a:	mov	edi, 0x1038
0x1357f:	call	0x12010


0x13584:	mov	rbx, rax
0x13587:	mov	qword ptr [rax], r13
0x1358a:	lea	rax, [rip - 0xc1]
0x13591:	cmp	rbp, 0x1000
0x13598:	mov	ecx, 0x1000
0x1359d:	lea	rsi, [rbx + 0x18]
0x135a1:	cmovbe	rcx, rbp
0x135a5:	mov	qword ptr [rbx + 8], rax
0x135a9:	mov	qword ptr [rbx + 0x10], r12
0x135ad:	xor	edx, edx
0x135af:	mov	rdi, r13
0x135b2:	call	0x2f00


0x2f00:	jmp	qword ptr [rip + 0x219fe2]




0x13f74:	test	eax, eax
0x13f76:	je	0x13fb4


0x13f78:	call	0x2950


0x13f7d:	mov	r12d, dword ptr [rax]
0x13f80:	mov	rdi, rbx
0x13f83:	mov	rbp, rax
0x13f86:	call	0x2a80


0x13f8b:	test	r12d, r12d
0x13f8e:	jne	0x13fc0


0x13f90:	pop	rbx
0x13f91:	pop	rbp
0x13f92:	pop	r12
0x13f94:	ret	


0x13fc0:	mov	dword ptr [rbp], r12d
0x13fc4:	mov	eax, 0xffffffff
0x13fc9:	jmp	0x13f90


0xb11d:	test	eax, eax
0xb11f:	mov	rdi, qword ptr [rip + 0x211fca]
0xb126:	je	0xb1b6


0xb12c:	call	0x12dc0


0x9fe8:	mov	rdi, qword ptr [rip + 0x2155a9]
0x9fef:	mov	rsi, rbx
0x9ff2:	mov	qword ptr [rbx + 0x10], rax
0x9ff6:	mov	qword ptr [rbx], r12
0x9ff9:	mov	qword ptr [rbx + 8], rbp
0x9ffd:	call	0xca20


0xb52d:	mov	qword ptr [rbx], rax
0xb530:	mov	rax, qword ptr [rbp + 8]
0xb534:	mov	rsi, rbx
0xb537:	mov	rdi, r13
0xb53a:	mov	qword ptr [rbx + 8], rax
0xb53e:	mov	rax, qword ptr [rbp]
0xb542:	mov	qword ptr [rbx + 0x10], rax
0xb546:	call	0xca20


0x1364d:	mov	edi, r15d
0x13650:	mov	rbp, rax
0x13653:	call	0x2c30


0x136bd:	movdqa	xmm0, xmmword ptr [rsp + 0x10]
0x136c3:	movups	xmmword ptr [rbx + 0x20], xmm0
0x136c7:	call	0x2a30


0x2a30:	jmp	qword ptr [rip + 0x21a24a]




0x84d2:	lea	rdx, [rbp - 0xd0]
0x84d9:	mov	rsi, r12
0x84dc:	mov	edi, 1
0x84e1:	call	0x2dd0


0x84e6:	mov	rdi, r12
0x84e9:	mov	r15d, eax
0x84ec:	call	0x30d0


0x84f1:	test	r15d, r15d
0x84f4:	movzx	r9d, byte ptr [rbp - 0x350]
0x84fc:	jne	0x69e9


0x8502:	mov	rax, qword ptr [rbp - 0xc8]
0x8509:	cmp	qword ptr [rbp - 0x278], rax
0x8510:	jne	0x69e9


0x8516:	mov	rax, qword ptr [rbp - 0xd0]
0x851d:	cmp	qword ptr [rbp - 0x280], rax
0x8524:	jne	0x69e9


0x852a:	cmp	byte ptr [rbx + 0x18], 0
0x852e:	je	0x8796


0x8796:	lea	rsi, [rip + 0xf1cb]
0x879d:	mov	edx, 5
0x87a2:	xor	edi, edi
0x87a4:	call	0x2ad0


0x8534:	lea	rsi, [rip + 0xf3f5]
0x853b:	mov	edx, 5
0x8540:	xor	edi, edi
0x8542:	call	0x2ad0


0x8547:	mov	rbx, rax
0x854a:	mov	rdx, qword ptr [rbp - 0x310]
0x8551:	mov	esi, 4
0x8556:	mov	edi, 1
0x855b:	call	0xf2d0


0x87a9:	mov	rbx, rax
0x87ac:	jmp	0x854a


0x854a:	mov	rdx, qword ptr [rbp - 0x310]
0x8551:	mov	esi, 4
0x8556:	mov	edi, 1
0x855b:	call	0xf2d0


0x319f:	lea	rdi, [rip + 0x13364]
0x31a6:	call	0x2a50


0x2a50:	jmp	qword ptr [rip + 0x21a23a]




0x12e5d:	cmp	eax, 2
0x12e60:	jbe	0x12e70


0x12e70:	mov	edi, eax
0x12e72:	mov	edx, 3
0x12e77:	mov	esi, 0x406
0x12e7c:	xor	eax, eax
0x12e7e:	call	0x13fd0


0x12e83:	mov	r12d, eax
0x12e86:	call	0x2950


0x12e8b:	test	r12d, r12d
0x12e8e:	mov	rbp, rax
0x12e91:	jns	0x12eb8


0x12e93:	mov	r14d, dword ptr [rax]
0x12e96:	xor	r13d, r13d
0x12e99:	mov	rdi, rbx
0x12e9c:	mov	rbx, r13
0x12e9f:	call	0x2c60


0x12eb8:	mov	edi, r12d
0x12ebb:	call	0x2fb0


0x12dda:	and	ebx, 0x20
0x12ddd:	test	ebx, ebx
0x12ddf:	jne	0x12df8


0x12de1:	test	eax, eax
0x12de3:	je	0x12def


0x12df8:	test	eax, eax
0x12dfa:	jne	0x12e18


0x12def:	pop	rbx
0x12df0:	pop	rbp
0x12df1:	pop	r12
0x12df3:	ret	


0x12de5:	test	r12, r12
0x12de8:	mov	eax, 0xffffffff
0x12ded:	je	0x12e28


0x12dfc:	call	0x2950


0x12e18:	pop	rbx
0x12e19:	mov	eax, 0xffffffff
0x12e1e:	pop	rbp
0x12e1f:	pop	r12
0x12e21:	ret	


0x12e28:	call	0x2950


0x12e2d:	cmp	dword ptr [rax], 9
0x12e30:	pop	rbx
0x12e31:	pop	rbp
0x12e32:	pop	r12
0x12e34:	setne	al
0x12e37:	movzx	eax, al
0x12e3a:	neg	eax
0x12e3c:	ret	


0x12e01:	mov	dword ptr [rax], 0
0x12e07:	mov	eax, 0xffffffff
0x12e0c:	pop	rbx
0x12e0d:	pop	rbp
0x12e0e:	pop	r12
0x12e10:	ret	


0x11f7a:	lea	rsi, [rip + 0x6a83]
0x11f81:	mov	edx, 5
0x11f86:	xor	edi, edi
0x11f88:	call	0x2ad0


0x11f8d:	lea	rcx, [rip + 0x5324]
0x11f94:	lea	rdx, [rip + 0x456b]
0x11f9b:	mov	rsi, rax
0x11f9e:	mov	edi, 1
0x11fa3:	xor	eax, eax
0x11fa5:	call	0x2ee0


0x11faa:	mov	rbx, qword ptr [rip + 0x20b137]
0x11fb1:	lea	rsi, [rip + 0x6c78]
0x11fb8:	xor	edi, edi
0x11fba:	mov	edx, 5
0x11fbf:	call	0x2ad0


0x11fc4:	mov	rsi, rbx
0x11fc7:	mov	rdi, rax
0x11fca:	pop	rbx
0x11fcb:	jmp	0x2cb0


0x49a6:	mov	rbx, qword ptr [rip + 0x21873b]
0x49ad:	lea	rsi, [rip + 0x11dec]
0x49b4:	mov	edx, 5
0x49b9:	xor	edi, edi
0x49bb:	call	0x2ad0


0x49c0:	mov	rsi, rbx
0x49c3:	mov	rdi, rax
0x49c6:	call	0x2cb0


0x49cb:	mov	rbx, qword ptr [rip + 0x218716]
0x49d2:	lea	rsi, [rip + 0x11f9f]
0x49d9:	mov	edx, 5
0x49de:	xor	edi, edi
0x49e0:	call	0x2ad0


0x49e5:	mov	rsi, rbx
0x49e8:	mov	rdi, rax
0x49eb:	call	0x2cb0


0x49f0:	mov	rbx, qword ptr [rip + 0x2186f1]
0x49f7:	lea	rsi, [rip + 0x11fca]
0x49fe:	mov	edx, 5
0x4a03:	xor	edi, edi
0x4a05:	call	0x2ad0


0x4a0a:	mov	rsi, rbx
0x4a0d:	mov	rdi, rax
0x4a10:	call	0x2cb0


0x4a15:	mov	rbx, qword ptr [rip + 0x2186cc]
0x4a1c:	lea	rsi, [rip + 0x1217d]
0x4a23:	mov	edx, 5
0x4a28:	xor	edi, edi
0x4a2a:	call	0x2ad0


0x4a2f:	mov	rsi, rbx
0x4a32:	mov	rdi, rax
0x4a35:	call	0x2cb0


0x4a3a:	mov	rbx, qword ptr [rip + 0x2186a7]
0x4a41:	lea	rsi, [rip + 0x122f0]
0x4a48:	mov	edx, 5
0x4a4d:	xor	edi, edi
0x4a4f:	call	0x2ad0


0x4a54:	mov	rsi, rbx
0x4a57:	mov	rdi, rax
0x4a5a:	call	0x2cb0


0x4a5f:	mov	rbx, qword ptr [rip + 0x218682]
0x4a66:	lea	rsi, [rip + 0x124c3]
0x4a6d:	mov	edx, 5
0x4a72:	xor	edi, edi
0x4a74:	call	0x2ad0


0x4a79:	mov	rsi, rbx
0x4a7c:	mov	rdi, rax
0x4a7f:	call	0x2cb0


0x4a84:	mov	rbx, qword ptr [rip + 0x21865d]
0x4a8b:	lea	rsi, [rip + 0x125fe]
0x4a92:	mov	edx, 5
0x4a97:	xor	edi, edi
0x4a99:	call	0x2ad0


0x4a9e:	mov	rsi, rbx
0x4aa1:	mov	rdi, rax
0x4aa4:	call	0x2cb0


0x4aa9:	mov	rbx, qword ptr [rip + 0x218638]
0x4ab0:	lea	rsi, [rip + 0x12609]
0x4ab7:	mov	edx, 5
0x4abc:	xor	edi, edi
0x4abe:	call	0x2ad0


0x4ac3:	mov	rsi, rbx
0x4ac6:	mov	rdi, rax
0x4ac9:	call	0x2cb0


0x4ace:	mov	rbx, qword ptr [rip + 0x218613]
0x4ad5:	lea	rsi, [rip + 0x1261c]
0x4adc:	mov	edx, 5
0x4ae1:	xor	edi, edi
0x4ae3:	call	0x2ad0


0x4ae8:	mov	rsi, rbx
0x4aeb:	mov	rdi, rax
0x4aee:	call	0x2cb0


0x4af3:	mov	rbx, qword ptr [rip + 0x2185ee]
0x4afa:	lea	rsi, [rip + 0x126d7]
0x4b01:	mov	edx, 5
0x4b06:	xor	edi, edi
0x4b08:	call	0x2ad0


0x4b0d:	mov	rsi, rbx
0x4b10:	mov	rdi, rax
0x4b13:	lea	rbx, [rip + 0x1196e]
0x4b1a:	call	0x2cb0


0x4b1f:	lea	rax, [rip + 0x1196a]
0x4b26:	lea	rcx, [rip + 0x119a4]
0x4b2d:	mov	qword ptr [rsp + 0x60], 0
0x4b36:	mov	qword ptr [rsp + 0x68], 0
0x4b3f:	mov	rdx, rsp
0x4b42:	mov	qword ptr [rsp], rax
0x4b46:	lea	rax, [rip + 0x11945]
0x4b4d:	mov	qword ptr [rsp + 0x30], rcx
0x4b52:	lea	rcx, [rip + 0x11982]
0x4b59:	mov	qword ptr [rsp + 8], rax
0x4b5e:	lea	rax, [rip + 0x119a5]
0x4b65:	mov	qword ptr [rsp + 0x40], rcx
0x4b6a:	lea	rcx, [rip + 0x11974]
0x4b71:	mov	qword ptr [rsp + 0x10], rax
0x4b76:	lea	rax, [rip + 0x11925]
0x4b7d:	mov	qword ptr [rsp + 0x50], rcx
0x4b82:	mov	qword ptr [rsp + 0x18], rax
0x4b87:	lea	rax, [rip + 0x1192a]
0x4b8e:	mov	qword ptr [rsp + 0x20], rax
0x4b93:	lea	rax, [rip + 0x11928]
0x4b9a:	mov	qword ptr [rsp + 0x28], rax
0x4b9f:	mov	qword ptr [rsp + 0x38], rax
0x4ba4:	mov	qword ptr [rsp + 0x48], rax
0x4ba9:	mov	qword ptr [rsp + 0x58], rax
0x4bae:	nop	
0x4bb0:	add	rdx, 0x10
0x4bb4:	mov	rdi, qword ptr [rdx]
0x4bb7:	test	rdi, rdi
0x4bba:	je	0x4bcf


0x4bcf:	mov	r12, qword ptr [rdx + 8]
0x4bd3:	xor	edi, edi
0x4bd5:	mov	edx, 5
0x4bda:	lea	rsi, [rip + 0x1190e]
0x4be1:	test	r12, r12
0x4be4:	je	0x4cab


0x4bbc:	mov	ecx, 8
0x4bc1:	mov	rsi, rbx
0x4bc4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4cab:	call	0x2ad0


0x4bea:	call	0x2ad0


0x4bc4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4bc6:	seta	al
0x4bc9:	sbb	al, 0
0x4bcb:	test	al, al
0x4bcd:	jne	0x4bb0


0x4bb0:	add	rdx, 0x10
0x4bb4:	mov	rdi, qword ptr [rdx]
0x4bb7:	test	rdi, rdi
0x4bba:	je	0x4bcf


0x4bef:	lea	rcx, [rip + 0x126c2]
0x4bf6:	lea	rdx, [rip + 0x11909]
0x4bfd:	mov	rsi, rax
0x4c00:	mov	edi, 1
0x4c05:	xor	eax, eax
0x4c07:	call	0x2ee0


0x4cb0:	lea	rcx, [rip + 0x12601]
0x4cb7:	lea	rdx, [rip + 0x11848]
0x4cbe:	mov	rsi, rax
0x4cc1:	mov	edi, 1
0x4cc6:	xor	eax, eax
0x4cc8:	call	0x2ee0


0x4ccd:	xor	esi, esi
0x4ccf:	mov	edi, 5
0x4cd4:	call	0x2ed0


0x4cd9:	test	rax, rax
0x4cdc:	je	0x4cf6


0x4cf6:	lea	rsi, [rip + 0x1181b]
0x4cfd:	mov	edx, 5
0x4d02:	xor	edi, edi
0x4d04:	lea	r12, [rip + 0x1177d]
0x4d0b:	lea	rbx, [rip + 0x1179a]
0x4d12:	call	0x2ad0


0x4cde:	lea	rsi, [rip + 0x1182f]
0x4ce5:	mov	edx, 3
0x4cea:	mov	rdi, rax
0x4ced:	call	0x2970


0x4d17:	lea	rcx, [rip + 0x1176a]
0x4d1e:	lea	rdx, [rip + 0x12593]
0x4d25:	mov	rsi, rax
0x4d28:	mov	edi, 1
0x4d2d:	xor	eax, eax
0x4d2f:	call	0x2ee0


0x4d34:	jmp	0x4c7e


0x4c7e:	lea	rsi, [rip + 0x126a3]
0x4c85:	xor	edi, edi
0x4c87:	mov	edx, 5
0x4c8c:	call	0x2ad0


0x4c91:	mov	rcx, rbx
0x4c94:	mov	rsi, rax
0x4c97:	mov	rdx, r12
0x4c9a:	mov	edi, 1
0x4c9f:	xor	eax, eax
0x4ca1:	call	0x2ee0


0x4ca6:	jmp	0x4976


0x4c0c:	xor	esi, esi
0x4c0e:	mov	edi, 5
0x4c13:	call	0x2ed0


0x4c18:	test	rax, rax
0x4c1b:	je	0x4c39


0x4c39:	lea	rsi, [rip + 0x118d8]
0x4c40:	xor	edi, edi
0x4c42:	mov	edx, 5
0x4c47:	call	0x2ad0


0x4c1d:	lea	rsi, [rip + 0x118f0]
0x4c24:	mov	edx, 3
0x4c29:	mov	rdi, rax
0x4c2c:	call	0x2970


0x4c4c:	lea	rcx, [rip + 0x11835]
0x4c53:	lea	rdx, [rip + 0x1265e]
0x4c5a:	mov	rsi, rax
0x4c5d:	mov	edi, 1
0x4c62:	xor	eax, eax
0x4c64:	call	0x2ee0


0x4c69:	cmp	r12, rbx
0x4c6c:	lea	rcx, [rip + 0x11839]
0x4c73:	lea	rbx, [rip + 0x1334f]
0x4c7a:	cmove	rbx, rcx
0x4c7e:	lea	rsi, [rip + 0x126a3]
0x4c85:	xor	edi, edi
0x4c87:	mov	edx, 5
0x4c8c:	call	0x2ad0


0x6fd2:	mov	rdx, qword ptr [rbp - 0x350]
0x6fd9:	mov	rsi, qword ptr [rbp - 0x308]
0x6fe0:	mov	rdi, qword ptr [rbp - 0x310]
0x6fe7:	call	0x4fd0


0x7f72:	mov	rdx, qword ptr [rbp - 0x350]
0x7f79:	mov	rsi, qword ptr [rbp - 0x308]
0x7f80:	mov	rdi, qword ptr [rbp - 0x310]
0x7f87:	call	0x4fd0


0x4c31:	test	eax, eax
0x4c33:	jne	0x4d40


0x4d40:	mov	r13, qword ptr [rip + 0x2183a1]
0x4d47:	lea	rsi, [rip + 0x12592]
0x4d4e:	xor	edi, edi
0x4d50:	mov	edx, 5
0x4d55:	call	0x2ad0


0x4d5a:	mov	rsi, r13
0x4d5d:	mov	rdi, rax
0x4d60:	call	0x2cb0


0x4d65:	jmp	0x4c39


0x4cf2:	test	eax, eax
0x4cf4:	jne	0x4d39


0x4d39:	lea	r12, [rip + 0x11748]
0x4d40:	mov	r13, qword ptr [rip + 0x2183a1]
0x4d47:	lea	rsi, [rip + 0x12592]
0x4d4e:	xor	edi, edi
0x4d50:	mov	edx, 5
0x4d55:	call	0x2ad0


0x12ae7:	test	eax, eax
0x12ae9:	jne	0x12ac7


0x12aeb:	mov	rdi, r14
0x12aee:	call	0x2af0


0x12ac7:	add	rbx, 1
0x12acb:	add	rbp, r13
0x12ace:	mov	r14, qword ptr [r15 + rbx*8]
0x12ad2:	test	r14, r14
0x12ad5:	je	0x12b18


0x12b18:	cmp	byte ptr [rsp + 0x17], 0
0x12b1d:	mov	rax, -2
0x12b24:	cmove	rax, qword ptr [rsp]
0x12b29:	mov	qword ptr [rsp], rax
0x12b2d:	mov	rax, qword ptr [rsp]
0x12b31:	add	rsp, 0x28
0x12b35:	pop	rbx
0x12b36:	pop	rbp
0x12b37:	pop	r12
0x12b39:	pop	r13
0x12b3b:	pop	r14
0x12b3d:	pop	r15
0x12b3f:	ret	


0x12af3:	cmp	rax, r12
0x12af6:	je	0x12b50


0x12b50:	mov	qword ptr [rsp], rbx
0x12b54:	jmp	0x12b2d


0x12af8:	cmp	qword ptr [rsp], -1
0x12afd:	jne	0x12a90


0x12aff:	mov	qword ptr [rsp], rbx
0x12b03:	add	rbx, 1
0x12b07:	add	rbp, r13
0x12b0a:	mov	r14, qword ptr [r15 + rbx*8]
0x12b0e:	test	r14, r14
0x12b11:	jne	0x12ad7


0x12a90:	mov	rax, qword ptr [rsp + 0x18]
0x12a95:	test	rax, rax
0x12a98:	je	0x12b40


0x12b40:	mov	byte ptr [rsp + 0x17], 1
0x12b45:	jmp	0x12ac7


0x12a9e:	mov	rdi, qword ptr [rsp]
0x12aa2:	mov	rdx, r13
0x12aa5:	mov	rsi, rbp
0x12aa8:	imul	rdi, r13
0x12aac:	add	rdi, rax
0x12aaf:	call	0x2c90


0x12ab4:	test	eax, eax
0x12ab6:	movzx	eax, byte ptr [rsp + 0x17]
0x12abb:	mov	ecx, 1
0x12ac0:	cmovne	eax, ecx
0x12ac3:	mov	byte ptr [rsp + 0x17], al
0x12ac7:	add	rbx, 1
0x12acb:	add	rbp, r13
0x12ace:	mov	r14, qword ptr [r15 + rbx*8]
0x12ad2:	test	r14, r14
0x12ad5:	je	0x12b18


0xadc8:	mov	ecx, dword ptr [r12]
0xadcc:	xor	edx, edx
0xadce:	test	ecx, ecx
0xadd0:	sete	dl
0xadd3:	sub	rax, rdx
0xadd6:	test	rax, rax
0xadd9:	mov	qword ptr [rsp + 0x48], rax
0xadde:	jns	0xae80


0xade4:	cmp	rax, -1
0xade8:	jne	0xaf55


0xadee:	mov	qword ptr [rsp + 0x48], -1
0xadf7:	jmp	0xac6f


0xaf55:	mov	qword ptr [rsp + 0x48], 0xe
0xaf5e:	jmp	0xae8b


0xaf14:	mov	edi, dword ptr [r12]
0xaf18:	mov	edx, dword ptr [rsp + 8]
0xaf1c:	xor	ecx, ecx
0xaf1e:	test	edi, edi
0xaf20:	mov	word ptr [rbx], dx
0xaf23:	sete	cl
0xaf26:	sub	rax, rcx
0xaf29:	jmp	0xadd6


0xadd6:	test	rax, rax
0xadd9:	mov	qword ptr [rsp + 0x48], rax
0xadde:	jns	0xae80


0x12ea4:	mov	dword ptr [rbp], r14d
0x12ea8:	mov	rax, rbx
0x12eab:	pop	rbx
0x12eac:	pop	rbp
0x12ead:	pop	r12
0x12eaf:	pop	r13
0x12eb1:	pop	r14
0x12eb3:	ret	


0xffd8:	test	eax, eax
0xffda:	jne	0xfff0


0xfff0:	call	0x2950


0xfff5:	mov	r12d, dword ptr [rax]
0xfff8:	mov	rbx, rax
0xfffb:	mov	rdi, rbp
0xfffe:	call	0x30d0


0x10003:	xor	ebp, ebp
0x10005:	mov	dword ptr [rbx], r12d
0x10008:	jmp	0xffdc


0xaf3f:	jmp	0xacf0


0xf7d5:	mov	r15d, eax
0xf7d8:	jmp	0xf73a


0xa597:	test	eax, eax
0xa599:	mov	ecx, 0xffffffff
0xa59e:	je	0xa5a7


0xa5a7:	xor	edx, edx
0xa5a9:	mov	rsi, r15
0xa5ac:	mov	edi, ebp
0xa5ae:	mov	dword ptr [rsp + 0xc], ecx
0xa5b2:	call	0x29d0


0xa5a0:	call	0x2950


0x29d0:	jmp	qword ptr [rip + 0x21a27a]




0xa5a5:	mov	ecx, dword ptr [rax]
0xa5a7:	xor	edx, edx
0xa5a9:	mov	rsi, r15
0xa5ac:	mov	edi, ebp
0xa5ae:	mov	dword ptr [rsp + 0xc], ecx
0xa5b2:	call	0x29d0


0xa6ef:	test	eax, eax
0xa6f1:	mov	r8d, 0xffffffff
0xa6f7:	je	0xa66b


0xa66b:	cmp	r13, r14
0xa66e:	je	0xa688


0xa6fd:	call	0x2950


0xa702:	mov	r8d, dword ptr [rax]
0xa705:	xor	edx, edx
0xa707:	mov	rsi, r13
0xa70a:	mov	edi, ebp
0xa70c:	mov	dword ptr [rsp + 0xc], r8d
0xa711:	call	0x29d0


0x1077d:	cmp	r14, rax
0x10780:	ja	0x1086b


0x10786:	xor	edi, edi
0x10788:	mov	rsi, r14
0x1078b:	call	0x132e0


0x10790:	test	rax, rax
0x10793:	mov	rbp, rax
0x10796:	je	0x1087d


0x1087d:	mov	edx, 0xffffffff
0x10882:	jmp	0x10853


0x1079c:	mov	rax, qword ptr [rsp]
0x107a0:	lea	r12, [rip + 0x8199]
0x107a7:	mov	r13d, 0x3a2f8
0x107ad:	add	rax, r14
0x107b0:	add	rbx, rax
0x107b3:	nop	dword ptr [rax + rax]
0x107b8:	test	r14, r14
0x107bb:	mov	r15, qword ptr [rsp + 0x10]
0x107c0:	je	0x107e7


0x107e7:	mov	rsi, qword ptr [rsp + 0x18]
0x107ec:	mov	rdi, qword ptr [rsp]
0x107f0:	mov	rax, qword ptr [rsp + 0x20]
0x107f5:	call	rax


0x107d9:	movzx	eax, byte ptr [r12 + rax]
0x107de:	mov	byte ptr [r15 - 1], al
0x107e2:	cmp	r15, rbx
0x107e5:	jne	0x107c8


0x107c8:	mov	esi, 0x3d
0x107cd:	mov	rdi, rbp
0x107d0:	add	r15, 1
0x107d4:	call	0x13330


0x1271d:	test	eax, eax
0x1271f:	setg	bl
0x12722:	mov	rdi, qword ptr [rsp + 8]
0x12727:	call	0x30d0


0xa87e:	test	rax, rax
0xa881:	mov	r12, rax
0xa884:	js	0xa8d8


0xa8d8:	call	0x2950


0xa886:	cmp	rbx, r12
0xa889:	ja	0xa8f0


0xa88b:	mov	rdi, rbp
0xa88e:	call	0x30d0


0xa8f0:	mov	byte ptr [rbp + r12], 0
0xa8f6:	jmp	0xa8ab


0xa893:	cmp	rbx, r14
0xa896:	ja	0xa8c0


0xa898:	add	rbx, rbx
0xa89b:	mov	rdi, rbx
0xa89e:	call	0x2df0


0xa8c0:	cmp	rbx, r15
0xa8c3:	ja	0xa900


0xa8c5:	movabs	rbx, 0x7fffffffffffffff
0xa8cf:	jmp	0xa860


0xa900:	call	0x2950


0xa860:	mov	rdi, rbx
0xa863:	call	0x2df0


0xa8a3:	test	rax, rax
0xa8a6:	mov	rbp, rax
0xa8a9:	jne	0xa870


0xa905:	xor	ebp, ebp
0xa907:	mov	dword ptr [rax], 0xc
0xa90d:	jmp	0xa8ab


0xa8dd:	cmp	dword ptr [rax], 0x22
0xa8e0:	je	0xa886


0xa8e2:	mov	rdi, rbp
0xa8e5:	xor	ebp, ebp
0xa8e7:	call	0x30d0


0xa8ec:	jmp	0xa8ab


0x12290:	call	0x2940


0x4749:	mov	rdi, rbp
0x474c:	call	0x2960


0x4751:	test	eax, eax
0x4753:	je	0x42e6


0x4759:	mov	rsi, rbp
0x475c:	mov	edi, 4
0x4761:	call	0xf3f0


0x3129:	nop	dword ptr [rax]


0x9c14:	movzx	r8d, byte ptr [rbx + 0x24]
0x9c19:	test	r8b, r8b
0x9c1c:	jne	0x6bb0


0x9c22:	jmp	0x619f


0xfb05:	jmp	0xfa98


0xfb2d:	jmp	0xfa64


0x4836:	mov	rdi, r13
0x4839:	mov	word ptr [rax], 0x2f
0x483e:	call	0x30d0


0x4843:	jmp	0x446b


0xef5d:	mov	dword ptr [rbp], r12d
0xef61:	pop	rbx
0xef62:	pop	rbp
0xef63:	pop	r12
0xef65:	ret	


0xee1e:	mov	dword ptr [rip + 0x20e273], r12d
0xee25:	mov	eax, dword ptr [rbp + 4]
0xee28:	shl	r15, 4
0xee2c:	sub	rsp, 8
0xee30:	add	rbx, r15
0xee33:	lea	r15, [rbp + 8]
0xee37:	mov	r8d, dword ptr [rbp]
0xee3b:	mov	r11, qword ptr [rbx]
0xee3e:	mov	r12, qword ptr [rbx + 8]
0xee42:	mov	rcx, r14
0xee45:	or	eax, 1
0xee48:	mov	dword ptr [rsp + 0x24], eax
0xee4c:	push	qword ptr [rbp + 0x30]
0xee4f:	mov	r9d, eax
0xee52:	push	qword ptr [rbp + 0x28]
0xee55:	push	r15
0xee57:	mov	rsi, r11
0xee5a:	mov	rdx, qword ptr [rsp + 0x28]
0xee5f:	mov	rdi, r12
0xee62:	mov	qword ptr [rsp + 0x30], r11
0xee67:	call	0xdb40


0x138e6:	add	rbx, rax
0x138e9:	sub	rbp, rax
0x138ec:	mov	edx, dword ptr [r13]
0x138f0:	jne	0x138b8


0x138b8:	mov	rax, qword ptr [r12]
0x138bc:	mov	rdi, qword ptr [r12 + 0x10]
0x138c1:	mov	eax, dword ptr [rax]
0x138c3:	and	eax, 0x20
0x138c6:	cmovne	eax, edx
0x138c9:	mov	dword ptr [r13], eax
0x138cd:	call	qword ptr [r12 + 8]


0x122fa:	mov	edx, dword ptr [rsp + 8]
0x122fe:	mov	rsi, qword ptr [rax]
0x12301:	mov	rax, rbp
0x12304:	jmp	0x12317


0x12317:	movzx	ecx, bl
0x1231a:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0x1231f:	jne	0x12310


0x12321:	cmp	bl, 0x2d
0x12324:	je	0x12378


0x12310:	add	rax, 1
0x12314:	movzx	ebx, byte ptr [rax]
0x12317:	movzx	ecx, bl
0x1231a:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0x1231f:	jne	0x12310


0x12378:	mov	ebp, 4
0x1237d:	mov	rdi, qword ptr [rsp + 0x18]
0x12382:	xor	rdi, qword ptr fs:[0x28]
0x1238b:	mov	eax, ebp
0x1238d:	jne	0x12620


0x12326:	mov	rsi, r15
0x12329:	mov	rdi, rbp
0x1232c:	call	0x2fe0


0x12393:	add	rsp, 0x28
0x12397:	pop	rbx
0x12398:	pop	rbp
0x12399:	pop	r12
0x1239b:	pop	r13
0x1239d:	pop	r14
0x1239f:	pop	r15
0x123a1:	ret	


0x12620:	call	0x2b30


0x2fe0:	jmp	qword ptr [rip + 0x219f72]




0xaa98:	test	rax, rax
0xaa9b:	je	0xac50


0xaaa1:	lea	rbx, [rax + 0x13]
0xaaa5:	mov	rdi, rbx
0xaaa8:	call	0x2af0


0xaaad:	cmp	rax, qword ptr [rsp + 8]
0xaab2:	jb	0xaa90


0xaa90:	mov	rdi, r13
0xaa93:	call	0x2de0


0xaab4:	lea	rbp, [r12 + 2]
0xaab9:	lea	rdi, [r15 + r14]
0xaabd:	mov	rsi, rbx
0xaac0:	mov	rdx, rbp
0xaac3:	call	0x2c90


0xaac8:	test	eax, eax
0xaaca:	jne	0xaa90


0xaacc:	add	rbx, rbp
0xaacf:	movzx	eax, byte ptr [rbx]
0xaad2:	lea	edx, [rax - 0x31]
0xaad5:	cmp	dl, 8
0xaad8:	ja	0xaa90


0xaada:	cmp	al, 0x39
0xaadc:	movsx	eax, byte ptr [rbx + 1]
0xaae0:	mov	ebp, 1
0xaae5:	sete	r8b
0xaae9:	mov	ecx, eax
0xaaeb:	sub	eax, 0x30
0xaaee:	cmp	eax, 9
0xaaf1:	ja	0xab13


0xab13:	cmp	cl, 0x7e
0xab16:	jne	0xaa90


0xaaf8:	cmp	cl, 0x39
0xaafb:	sete	al
0xaafe:	add	rbp, 1
0xab02:	and	r8d, eax
0xab05:	movsx	eax, byte ptr [rbx + rbp]
0xab09:	mov	ecx, eax
0xab0b:	sub	eax, 0x30
0xab0e:	cmp	eax, 9
0xab11:	jbe	0xaaf8


0xab1c:	cmp	byte ptr [rbx + rbp + 1], 0
0xab21:	jne	0xaa90


0xab27:	mov	rdx, qword ptr [rsp + 0x28]
0xab2c:	cmp	rdx, rbp
0xab2f:	jb	0xab5c


0xab5c:	movzx	esi, r8b
0xab60:	movzx	r9d, r8b
0xab64:	mov	dword ptr [rsp + 0x24], esi
0xab68:	mov	rsi, qword ptr [rsp + 0x18]
0xab6d:	lea	rax, [r9 + rbp]
0xab71:	mov	qword ptr [rsp + 0x28], rax
0xab76:	lea	rcx, [rsi + rax + 4]
0xab7b:	cmp	rcx, qword ptr [rsp + 0x30]
0xab80:	jbe	0xaeb8


0xab31:	mov	byte ptr [rsp + 0x58], r8b
0xab36:	jne	0xaa90


0xaeb8:	mov	r8, r15
0xaebb:	jmp	0xabd7


0xab86:	mov	edx, 2
0xab8b:	xor	esi, esi
0xab8d:	mov	rax, rdx
0xab90:	mul	rcx
0xab93:	jo	0xaf63


0xab3c:	mov	rax, qword ptr [rsp + 0x18]
0xab41:	mov	rsi, rbx
0xab44:	lea	rdi, [r15 + rax + 2]
0xab49:	call	0x2c90


0xabd7:	mov	rax, qword ptr [rsp + 0x18]
0xabdc:	lea	rdx, [rbp + 2]
0xabe0:	mov	qword ptr [rsp + 0x58], r8
0xabe5:	mov	rsi, rbx
0xabe8:	add	rax, r8
0xabeb:	mov	r8d, 0x7e2e
0xabf1:	lea	rcx, [rax + r9 + 2]
0xabf6:	mov	word ptr [rax], r8w
0xabfa:	mov	byte ptr [rax + 2], 0x30
0xabfe:	mov	rdi, rcx
0xac01:	call	0x2d80


0xaf63:	mov	esi, 1
0xaf68:	jmp	0xab99


0xab99:	test	rax, rax
0xab9c:	js	0xae50


0xae50:	mov	qword ptr [rsp + 0x30], rcx
0xae55:	jmp	0xabb4


0xaba2:	test	rsi, rsi
0xaba5:	jne	0xae50


0xabb4:	mov	rsi, qword ptr [rsp + 0x30]
0xabb9:	mov	rdi, r15
0xabbc:	mov	qword ptr [rsp + 0x58], r9
0xabc1:	call	0x2e90


0xabab:	lea	rax, [rcx + rcx]
0xabaf:	mov	qword ptr [rsp + 0x30], rax
0xabb4:	mov	rsi, qword ptr [rsp + 0x30]
0xabb9:	mov	rdi, r15
0xabbc:	mov	qword ptr [rsp + 0x58], r9
0xabc1:	call	0x2e90


0xabc6:	test	rax, rax
0xabc9:	mov	r8, rax
0xabcc:	mov	r9, qword ptr [rsp + 0x58]
0xabd1:	je	0xae60


0xac06:	add	rbp, rax
0xac09:	mov	r8, qword ptr [rsp + 0x58]
0xac0e:	movzx	edx, byte ptr [rbp - 1]
0xac12:	lea	rax, [rbp - 1]
0xac16:	cmp	dl, 0x39
0xac19:	jne	0xac2f


0xac2f:	add	edx, 1
0xac32:	mov	rdi, r13
0xac35:	mov	r15, r8
0xac38:	mov	byte ptr [rax], dl
0xac3a:	call	0x2de0


0xac20:	mov	byte ptr [rax], 0x30
0xac23:	sub	rax, 1
0xac27:	movzx	edx, byte ptr [rax]
0xac2a:	cmp	dl, 0x39
0xac2d:	je	0xac20


0xab4e:	test	eax, eax
0xab50:	movzx	r8d, byte ptr [rsp + 0x58]
0xab56:	jg	0xaa90


0xac3f:	test	rax, rax
0xac42:	jne	0xaaa1


0xfca3:	test	rax, rax
0xfca6:	mov	rcx, rax
0xfca9:	je	0xfd50


0xfd50:	mov	ebx, dword ptr [rbp]
0xfd53:	test	ebx, ebx
0xfd55:	jne	0xff40


0xfcaf:	lea	r15, [rax + 0x13]
0xfcb3:	movzx	eax, byte ptr [rax + 0x13]
0xfcb7:	cmp	al, 0x2e
0xfcb9:	jne	0xfc90


0xfd5b:	cmp	qword ptr [rsp + 8], 0
0xfd61:	je	0xfe10


0xff40:	mov	rdi, qword ptr [rsp + 0x10]
0xff45:	call	0x30d0


0xfcbb:	cmp	byte ptr [rcx + 0x14], 0x2e
0xfcbf:	je	0xfd40


0xfc90:	test	al, al
0xfc92:	jne	0xfcc9


0xfe10:	cmp	qword ptr [rsp + 0x20], r14
0xfe15:	je	0xff03


0xfd67:	test	r12, r12
0xfd6a:	lea	rbx, [r14 + 1]
0xfd6e:	jne	0xfda0


0xfd40:	movzx	eax, byte ptr [rcx + 0x15]
0xfd44:	jmp	0xfc90


0xfcc1:	movzx	eax, byte ptr [rcx + 0x14]
0xfcc5:	test	al, al
0xfcc7:	je	0xfc94


0xfcc9:	mov	rdi, r15
0xfccc:	mov	qword ptr [rsp + 0x30], rcx
0xfcd1:	call	0x2af0


0xff03:	mov	rbx, qword ptr [rsp + 0x20]
0xff08:	mov	rdi, r13
0xff0b:	lea	rsi, [rbx + 1]
0xff0f:	call	0x12070


0xfe1b:	lea	rbx, [r13 + r14]
0xfe20:	jmp	0xfd88


0xfd70:	mov	rdi, rbx
0xfd73:	call	0x12010


0xfda0:	mov	r15, qword ptr [rsp + 0x10]
0xfda5:	mov	rcx, qword ptr [rsp + 8]
0xfdaa:	mov	rsi, r12
0xfdad:	mov	edx, 0x10
0xfdb2:	shl	r12, 4
0xfdb6:	mov	rdi, r15
0xfdb9:	mov	rbp, r15
0xfdbc:	add	r12, r15
0xfdbf:	call	0x29e0


0xfd88:	mov	byte ptr [rbx], 0
0xfd8b:	add	rsp, 0x48
0xfd8f:	mov	rax, r13
0xfd92:	pop	rbx
0xfd93:	pop	rbp
0xfd94:	pop	r12
0xfd96:	pop	r13
0xfd98:	pop	r14
0xfd9a:	pop	r15
0xfd9c:	ret	


0x29e0:	jmp	qword ptr [rip + 0x21a272]




0xfd78:	mov	r13, rax
0xfd7b:	mov	rbx, rax
0xfd7e:	mov	rdi, qword ptr [rsp + 0x10]
0xfd83:	call	0x30d0


0xff14:	mov	r13, rax
0xff17:	add	rbx, rax
0xff1a:	jmp	0xfd88


0xfcd6:	add	rax, 1
0xfcda:	cmp	qword ptr [rsp + 8], 0
0xfce0:	mov	qword ptr [rsp + 0x18], rax
0xfce5:	je	0xfe28


0xfe28:	mov	rsi, qword ptr [rsp + 0x18]
0xfe2d:	mov	rax, qword ptr [rsp + 0x20]
0xfe32:	mov	rdx, rsi
0xfe35:	sub	rax, r14
0xfe38:	add	rdx, r14
0xfe3b:	mov	qword ptr [rsp + 0x30], rdx
0xfe40:	setb	dl
0xfe43:	cmp	rax, rsi
0xfe46:	movzx	edx, dl
0xfe49:	ja	0xfe95


0xfceb:	cmp	r12, qword ptr [rsp + 0x28]
0xfcf0:	lea	rax, [r12 + 1]
0xfcf5:	mov	rcx, qword ptr [rsp + 0x30]
0xfcfa:	mov	qword ptr [rsp + 0x38], rax
0xfcff:	je	0xfeb1


0xfe4b:	test	rdx, rdx
0xfe4e:	jne	0xff39


0xfe95:	mov	rdx, qword ptr [rsp + 0x18]
0xfe9a:	lea	rdi, [r13 + r14]
0xfe9f:	mov	rsi, r15
0xfea2:	call	0x2d80


0xfeb1:	cmp	qword ptr [rsp + 0x10], 0
0xfeb7:	je	0xff65


0xfd05:	shl	r12, 4
0xfd09:	mov	rdi, r15
0xfd0c:	add	r12, qword ptr [rsp + 0x10]
0xfd11:	mov	qword ptr [rsp + 0x30], rcx
0xfd16:	call	0x12240


0xfe54:	test	r13, r13
0xfe57:	mov	rdx, qword ptr [rsp + 0x30]
0xfe5c:	je	0xff1f


0xff39:	call	0x12260


0xff65:	test	r12, r12
0xff68:	mov	eax, 8
0xff6d:	mov	edx, 0x10
0xff72:	cmovne	rax, r12
0xff76:	xor	esi, esi
0xff78:	mov	rdi, rax
0xff7b:	mov	qword ptr [rsp + 0x28], rax
0xff80:	mov	rax, rdx
0xff83:	mul	rdi
0xff86:	jo	0xffa1


0xfebd:	movabs	rax, 0x555555555555554
0xfec7:	cmp	r12, rax
0xfeca:	ja	0xff39


0xff1f:	test	rdx, rdx
0xff22:	mov	eax, 0x80
0xff27:	cmovne	rax, rdx
0xff2b:	test	rax, rax
0xff2e:	mov	qword ptr [rsp + 0x20], rax
0xff33:	jns	0xfe85


0xfe62:	movabs	rax, 0x5555555555555553
0xfe6c:	cmp	rdx, rax
0xfe6f:	ja	0xff39


0xffa1:	mov	esi, 1
0xffa6:	jmp	0xff88


0xff88:	test	rax, rax
0xff8b:	js	0xff39


0xfecc:	mov	rax, r12
0xfecf:	shr	rax, 1
0xfed2:	add	rax, qword ptr [rsp + 0x38]
0xfed7:	mov	qword ptr [rsp + 0x28], rax
0xfedc:	mov	rsi, qword ptr [rsp + 0x28]
0xfee1:	mov	rdi, qword ptr [rsp + 0x10]
0xfee6:	mov	qword ptr [rsp + 0x30], rcx
0xfeeb:	shl	rsi, 4
0xfeef:	call	0x12070


0xfe85:	mov	rsi, qword ptr [rsp + 0x20]
0xfe8a:	mov	rdi, r13
0xfe8d:	call	0x12070


0xfe75:	mov	rax, rdx
0xfe78:	shr	rax, 1
0xfe7b:	lea	rax, [rdx + rax + 1]
0xfe80:	mov	qword ptr [rsp + 0x20], rax
0xfe85:	mov	rsi, qword ptr [rsp + 0x20]
0xfe8a:	mov	rdi, r13
0xfe8d:	call	0x12070


0xff8d:	test	rsi, rsi
0xff90:	jne	0xff39


0xff92:	lea	rax, [r12 + 1]
0xff97:	mov	qword ptr [rsp + 0x38], rax
0xff9c:	jmp	0xfedc


0xfedc:	mov	rsi, qword ptr [rsp + 0x28]
0xfee1:	mov	rdi, qword ptr [rsp + 0x10]
0xfee6:	mov	qword ptr [rsp + 0x30], rcx
0xfeeb:	shl	rsi, 4
0xfeef:	call	0x12070


0xfef4:	mov	rcx, qword ptr [rsp + 0x30]
0xfef9:	mov	qword ptr [rsp + 0x10], rax
0xfefe:	jmp	0xfd05


0xfe92:	mov	r13, rax
0xfe95:	mov	rdx, qword ptr [rsp + 0x18]
0xfe9a:	lea	rdi, [r13 + r14]
0xfe9f:	mov	rsi, r15
0xfea2:	call	0x2d80


0xfd1b:	mov	rcx, qword ptr [rsp + 0x30]
0xfd20:	add	r14, qword ptr [rsp + 0x18]
0xfd25:	mov	qword ptr [r12], rax
0xfd29:	mov	rax, qword ptr [rcx]
0xfd2c:	mov	qword ptr [r12 + 8], rax
0xfd31:	mov	r12, qword ptr [rsp + 0x38]
0xfd36:	jmp	0xfc94


0xfea7:	mov	r14, qword ptr [rsp + 0x30]
0xfeac:	jmp	0xfc94


0xff4a:	mov	rdi, r13
0xff4d:	xor	r13d, r13d
0xff50:	call	0x30d0


0xff55:	mov	dword ptr [rbp], ebx
0xff58:	jmp	0xfd8b


0x8b11:	mov	rcx, qword ptr [rbp - 0x98]
0x8b18:	movsxd	r12, eax
0x8b1b:	movabs	rax, 0x1ffffffffffe0000
0x8b25:	mov	r8d, 0x200
0x8b2b:	mov	edi, dword ptr [rbp - 0x320]
0x8b31:	mov	qword ptr [rbp - 0x330], r8
0x8b38:	lea	rdx, [rcx - 0x20000]
0x8b3f:	cmp	rdx, rax
0x8b42:	mov	eax, 0x20000
0x8b47:	lea	rdx, [rcx - 1]
0x8b4b:	cmovbe	rax, rcx
0x8b4f:	mov	qword ptr [rbp - 0x370], rax
0x8b56:	movabs	rax, 0x1fffffffffffffff
0x8b60:	cmp	rdx, rax
0x8b63:	cmova	rcx, r8
0x8b67:	xor	edx, edx
0x8b69:	xor	esi, esi
0x8b6b:	mov	qword ptr [rbp - 0x398], rcx
0x8b72:	mov	ecx, 2
0x8b77:	call	0xb450


0x8b7c:	mov	r9d, dword ptr [rbp - 0x148]
0x8b83:	mov	r8, qword ptr [rbp - 0x330]
0x8b8a:	and	r9d, 0xf000
0x8b91:	cmp	r9d, 0x8000
0x8b98:	je	0x9a7a


0x9a7a:	mov	rax, qword ptr [rbp - 0x130]
0x9a81:	cqo	
0x9a83:	idiv	r8
0x9a86:	cmp	qword ptr [rbp - 0x120], rax
0x9a8d:	setl	al
0x9a90:	movzx	eax, al
0x9a93:	mov	dword ptr [rbp - 0x348], eax
0x9a99:	jmp	0x8b9e


0x8b9e:	mov	eax, dword ptr [rbp - 0xb8]
0x8ba4:	and	eax, 0xf000
0x8ba9:	cmp	eax, 0x8000
0x8bae:	je	0x9a0f


0x9a0f:	mov	eax, dword ptr [rbx + 0xc]
0x9a12:	cmp	eax, 3
0x9a15:	je	0x9a9e


0x8bb4:	mov	rdi, qword ptr [rbp - 0x128]
0x8bbb:	movabs	rax, 0x7fffffffffffffff
0x8bc5:	mov	rsi, qword ptr [rbp - 0x370]
0x8bcc:	sub	rax, r12
0x8bcf:	mov	dword ptr [rbp - 0x380], r9d
0x8bd6:	mov	r8, rax
0x8bd9:	movabs	rax, 0x1ffffffffffe0000
0x8be3:	lea	rdx, [rdi - 0x20000]
0x8bea:	mov	qword ptr [rbp - 0x330], r8
0x8bf1:	cmp	rdx, rax
0x8bf4:	mov	eax, 0x20000
0x8bf9:	mov	rdx, r8
0x8bfc:	cmova	rdi, rax
0x8c00:	call	0xb060


0x9a9e:	mov	rax, qword ptr [rbp - 0x370]
0x9aa5:	lea	rdi, [r12 + rax]
0x9aa9:	call	0x12010


0x9a1b:	cmp	eax, 2
0x9a1e:	jne	0x8bb4


0x9a24:	test	byte ptr [rbp - 0x348], 1
0x9a2b:	je	0x8bb4


0x9a31:	mov	rax, qword ptr [rbp - 0x370]
0x9a38:	lea	rdi, [r12 + rax]
0x9a3c:	call	0x12010


0x9a41:	lea	rcx, [rax + r12 - 1]
0x9a46:	mov	qword ptr [rbp - 0x330], rax
0x9a4d:	xor	edx, edx
0x9a4f:	mov	rax, rcx
0x9a52:	div	r12
0x9a55:	sub	rcx, rdx
0x9a58:	mov	qword ptr [rbp - 0x3b0], rcx
0x9a5f:	mov	eax, dword ptr [rbx + 0xc]
0x9a62:	mov	dword ptr [rbp - 0x390], eax
0x9a68:	movzx	eax, byte ptr [rbp - 0x338]
0x9a6f:	mov	byte ptr [rbp - 0x3a5], al
0x9a75:	jmp	0x8c9c


0x8c9c:	mov	rax, qword ptr [rbp - 0x130]
0x8ca3:	mov	edi, dword ptr [rbp - 0x320]
0x8ca9:	xor	r12d, r12d
0x8cac:	mov	qword ptr [rbp - 0x380], rax
0x8cb3:	lea	rax, [rbp - 0x2f0]
0x8cba:	mov	rsi, rax
0x8cbd:	mov	qword ptr [rbp - 0x348], rax
0x8cc4:	call	0xa090


0x8cc9:	lea	rax, [rbp - 0x2f9]
0x8cd0:	xor	ecx, ecx
0x8cd2:	mov	qword ptr [rbp - 0x388], rbx
0x8cd9:	mov	qword ptr [rbp - 0x3a0], 0
0x8ce4:	mov	rbx, rcx
0x8ce7:	mov	dword ptr [rbp - 0x360], r13d
0x8cee:	mov	qword ptr [rbp - 0x3b8], rax
0x8cf5:	lea	rax, [rbp - 0x2f8]
0x8cfc:	mov	qword ptr [rbp - 0x3c0], rax
0x8d03:	mov	rdi, qword ptr [rbp - 0x348]
0x8d0a:	call	0xa0c0


0x8d0f:	test	al, al
0x8d11:	je	0x9911


0x9911:	cmp	byte ptr [rbp - 0x2cf], 0
0x9918:	mov	rbx, qword ptr [rbp - 0x388]
0x991f:	mov	r13d, dword ptr [rbp - 0x360]
0x9926:	jne	0x982b


0x8d17:	cmp	qword ptr [rbp - 0x2d8], 0
0x8d1f:	je	0x97ee


0x992c:	cmp	byte ptr [rbp - 0x2d0], 0
0x9933:	je	0x9b50


0x982b:	mov	rcx, qword ptr [rbp - 0x3a0]
0x9832:	cmp	qword ptr [rbp - 0x380], rcx
0x9839:	setg	r12b
0x983d:	jg	0x984c


0x97ee:	mov	rdi, qword ptr [rbp - 0x2c8]
0x97f5:	call	0x30d0


0x8d25:	mov	rdx, rbx
0x8d28:	mov	rcx, r12
0x8d2b:	xor	r13d, r13d
0x8d2e:	xor	eax, eax
0x8d30:	jmp	0x8ded


0x9b50:	mov	rdx, qword ptr [rbp - 0x310]
0x9b57:	mov	esi, 3
0x9b5c:	xor	edi, edi
0x9b5e:	call	0xf4f0


0x9939:	xor	r9d, r9d
0x993c:	cmp	dword ptr [rbx + 0xc], 3
0x9940:	mov	eax, 0
0x9945:	sete	r9b
0x9949:	cmp	byte ptr [rbp - 0x3a5], 0
0x9950:	cmovne	rax, qword ptr [rbp - 0x398]
0x9958:	mov	qword ptr [rbp - 0x398], rax
0x995f:	jmp	0x9721


0x983f:	cmp	byte ptr [rbp - 0x338], 0
0x9846:	je	0x91da


0x984c:	cmp	dword ptr [rbp - 0x390], 1
0x9853:	mov	rsi, qword ptr [rbp - 0x380]
0x985a:	je	0x98ce


0x8ded:	lea	rsi, [rax + rax*2]
0x8df1:	mov	rax, qword ptr [rbp - 0x2c8]
0x8df8:	lea	rax, [rax + rsi*8]
0x8dfc:	mov	rsi, qword ptr [rbp - 0x380]
0x8e03:	mov	r12, qword ptr [rax]
0x8e06:	mov	rbx, qword ptr [rax + 8]
0x8e0a:	lea	rax, [r12 + rbx]
0x8e0e:	cmp	rsi, rax
0x8e11:	jge	0x8e20


0x9721:	lea	rax, [rbp - 0x2f8]
0x9728:	sub	rsp, 8
0x972c:	mov	r8, qword ptr [rbp - 0x398]
0x9733:	mov	rcx, qword ptr [rbp - 0x370]
0x973a:	mov	rdx, qword ptr [rbp - 0x3b0]
0x9741:	mov	esi, dword ptr [rbp - 0x328]
0x9747:	mov	edi, dword ptr [rbp - 0x320]
0x974d:	push	rax
0x974e:	push	qword ptr [rbp - 0x348]
0x9754:	push	-1
0x9756:	push	qword ptr [rbp - 0x308]
0x975c:	push	qword ptr [rbp - 0x310]
0x9762:	call	0x53b0


0x91da:	cmp	byte ptr [rbx + 0x1f], 0
0x91de:	jne	0x95e6


0x98ce:	sub	rsi, qword ptr [rbp - 0x3a0]
0x98d5:	mov	edi, dword ptr [rbp - 0x328]
0x98db:	call	0x4ee0


0x985c:	mov	edi, dword ptr [rbp - 0x328]
0x9862:	call	0x2bb0


0x8e13:	cmp	r12, rsi
0x8e16:	cmovg	r12, rsi
0x8e1a:	sub	rsi, r12
0x8e1d:	mov	rbx, rsi
0x8e20:	mov	rax, r12
0x8e23:	mov	byte ptr [rbp - 0x338], 0
0x8e2a:	sub	rax, rcx
0x8e2d:	mov	rcx, rax
0x8e30:	sub	rcx, rdx
0x8e33:	je	0x8d38


0x8e20:	mov	rax, r12
0x8e23:	mov	byte ptr [rbp - 0x338], 0
0x8e2a:	sub	rax, rcx
0x8e2d:	mov	rcx, rax
0x8e30:	sub	rcx, rdx
0x8e33:	je	0x8d38


0x2bb0:	jmp	qword ptr [rip + 0x21a18a]


0x8d38:	cmp	dword ptr [rbp - 0x390], 3
0x8d3f:	mov	r8d, 0
0x8d45:	cmove	r8, qword ptr [rbp - 0x398]
0x8d4d:	sub	rsp, 8
0x8d51:	mov	rcx, qword ptr [rbp - 0x370]
0x8d58:	mov	rdx, qword ptr [rbp - 0x3b0]
0x8d5f:	mov	esi, dword ptr [rbp - 0x328]
0x8d65:	mov	edi, dword ptr [rbp - 0x320]
0x8d6b:	mov	r9d, 1
0x8d71:	push	qword ptr [rbp - 0x3b8]
0x8d77:	push	qword ptr [rbp - 0x3c0]
0x8d7d:	push	rbx
0x8d7e:	push	qword ptr [rbp - 0x308]
0x8d84:	push	qword ptr [rbp - 0x310]
0x8d8a:	call	0x53b0


0x8e39:	mov	edi, dword ptr [rbp - 0x320]
0x8e3f:	xor	edx, edx
0x8e41:	mov	rsi, r12
0x8e44:	mov	qword ptr [rbp - 0x3a0], rcx
0x8e4b:	call	0x2bc0




0x8e50:	test	rax, rax
0x8e53:	mov	rcx, qword ptr [rbp - 0x3a0]
0x8e5a:	js	0x9ccf


0x9ccf:	mov	rsi, qword ptr [rbp - 0x310]
0x9cd6:	mov	edi, 4
0x9cdb:	mov	rbx, qword ptr [rbp - 0x388]
0x9ce2:	mov	r13d, dword ptr [rbp - 0x360]
0x9ce9:	call	0xf3f0


0x8e60:	mov	eax, dword ptr [rbp - 0x390]
0x8e66:	cmp	eax, 3
0x8e69:	sete	dl
0x8e6c:	sub	eax, 1
0x8e6f:	je	0x95c8


0x95c8:	mov	edi, dword ptr [rbp - 0x328]
0x95ce:	mov	rsi, rcx
0x95d1:	call	0x4ee0


0x8e75:	mov	rsi, qword ptr [rbp - 0x308]
0x8e7c:	mov	edi, dword ptr [rbp - 0x328]
0x8e82:	movzx	edx, dl
0x8e85:	call	0x52f0


0x8e8a:	test	al, al
0x8e8c:	mov	byte ptr [rbp - 0x338], al
0x8e92:	jne	0x8d38


0x8e98:	mov	rbx, qword ptr [rbp - 0x388]
0x8e9f:	mov	r13d, dword ptr [rbp - 0x360]
0x8ea6:	mov	rdi, qword ptr [rbp - 0x2c8]
0x8ead:	call	0x30d0


0x95d6:	test	al, al
0x95d8:	je	0x9af3


0x9af3:	mov	rdx, qword ptr [rbp - 0x308]
0x9afa:	mov	esi, 3
0x9aff:	xor	edi, edi
0x9b01:	mov	rbx, qword ptr [rbp - 0x388]
0x9b08:	mov	r13d, dword ptr [rbp - 0x360]
0x9b0f:	call	0xf4f0


0x95de:	xor	r8d, r8d
0x95e1:	jmp	0x8d4d


0x8d4d:	sub	rsp, 8
0x8d51:	mov	rcx, qword ptr [rbp - 0x370]
0x8d58:	mov	rdx, qword ptr [rbp - 0x3b0]
0x8d5f:	mov	esi, dword ptr [rbp - 0x328]
0x8d65:	mov	edi, dword ptr [rbp - 0x320]
0x8d6b:	mov	r9d, 1
0x8d71:	push	qword ptr [rbp - 0x3b8]
0x8d77:	push	qword ptr [rbp - 0x3c0]
0x8d7d:	push	rbx
0x8d7e:	push	qword ptr [rbp - 0x308]
0x8d84:	push	qword ptr [rbp - 0x310]
0x8d8a:	call	0x53b0


0x98e0:	test	al, al
0x98e2:	jne	0x91da


0x98e8:	jmp	0x979a


0x979a:	mov	rsi, qword ptr [rbp - 0x308]
0x97a1:	mov	edi, 4
0x97a6:	call	0xf3f0


0x8d8f:	add	rsp, 0x30
0x8d93:	test	al, al
0x8d95:	je	0x8e98


0x8d9b:	mov	rax, qword ptr [rbp - 0x2f8]
0x8da2:	lea	rcx, [r12 + rax]
0x8da6:	test	rax, rax
0x8da9:	mov	qword ptr [rbp - 0x3a0], rcx
0x8db0:	je	0x8dbf


0x8dbf:	mov	rcx, qword ptr [rbp - 0x3a0]
0x8dc6:	cmp	qword ptr [rbp - 0x380], rcx
0x8dcd:	je	0x97e7


0x8db2:	movzx	eax, byte ptr [rbp - 0x2f9]
0x8db9:	mov	byte ptr [rbp - 0x338], al
0x8dbf:	mov	rcx, qword ptr [rbp - 0x3a0]
0x8dc6:	cmp	qword ptr [rbp - 0x380], rcx
0x8dcd:	je	0x97e7


0x97e7:	mov	byte ptr [rbp - 0x2cf], 1
0x97ee:	mov	rdi, qword ptr [rbp - 0x2c8]
0x97f5:	call	0x30d0


0x8dd3:	lea	eax, [r13 + 1]
0x8dd7:	cmp	rax, qword ptr [rbp - 0x2d8]
0x8dde:	mov	rcx, r12
0x8de1:	mov	rdx, rbx
0x8de4:	mov	r13, rax
0x8de7:	jae	0x97ee


0x9767:	add	rsp, 0x30
0x976b:	test	al, al
0x976d:	je	0x8eb2


0x9773:	cmp	byte ptr [rbp - 0x2f8], 0
0x977a:	je	0x91da


0x9780:	mov	rsi, qword ptr [rbp - 0x2f0]
0x9787:	mov	edi, dword ptr [rbp - 0x328]
0x978d:	call	0x2bb0


0x97fa:	cmp	byte ptr [rbp - 0x2cf], 0
0x9801:	mov	qword ptr [rbp - 0x2c8], 0
0x980c:	mov	qword ptr [rbp - 0x2d8], 0
0x9817:	je	0x8d03


0x8d03:	mov	rdi, qword ptr [rbp - 0x348]
0x8d0a:	call	0xa0c0


0x981d:	mov	rbx, qword ptr [rbp - 0x388]
0x9824:	mov	r13d, dword ptr [rbp - 0x360]
0x982b:	mov	rcx, qword ptr [rbp - 0x3a0]
0x9832:	cmp	qword ptr [rbp - 0x380], rcx
0x9839:	setg	r12b
0x983d:	jg	0x984c


0x9aae:	lea	rcx, [rax + r12 - 1]
0x9ab3:	xor	edx, edx
0x9ab5:	mov	qword ptr [rbp - 0x330], rax
0x9abc:	mov	rax, rcx
0x9abf:	div	r12
0x9ac2:	sub	rcx, rdx
0x9ac5:	cmp	dword ptr [rbp - 0x348], 0
0x9acc:	mov	qword ptr [rbp - 0x3b0], rcx
0x9ad3:	jne	0x9a5f


0x9ad5:	xor	r9d, r9d
0x9ad8:	cmp	dword ptr [rbx + 0xc], 3
0x9adc:	lea	rax, [rbp - 0x2f0]
0x9ae3:	mov	qword ptr [rbp - 0x348], rax
0x9aea:	sete	r9b
0x9aee:	jmp	0x9721


0x9a5f:	mov	eax, dword ptr [rbx + 0xc]
0x9a62:	mov	dword ptr [rbp - 0x390], eax
0x9a68:	movzx	eax, byte ptr [rbp - 0x338]
0x9a6f:	mov	byte ptr [rbp - 0x3a5], al
0x9a75:	jmp	0x8c9c


0x8c05:	mov	r9d, dword ptr [rbp - 0x380]
0x8c0c:	mov	rcx, rax
0x8c0f:	mov	r8, qword ptr [rbp - 0x330]
0x8c16:	cmp	r9d, 0x8000
0x8c1d:	je	0x98ed


0x98ed:	mov	rax, qword ptr [rbp - 0x130]
0x98f4:	cmp	qword ptr [rbp - 0x370], rax
0x98fb:	jbe	0x8c23


0x8c23:	mov	rax, qword ptr [rbp - 0x370]
0x8c2a:	xor	edx, edx
0x8c2c:	lea	rsi, [rcx + rax - 1]
0x8c31:	mov	rax, rsi
0x8c34:	div	rcx
0x8c37:	sub	rsi, rdx
0x8c3a:	mov	qword ptr [rbp - 0x370], rsi
0x8c41:	je	0x96f1


0x9901:	add	rax, 1
0x9905:	mov	qword ptr [rbp - 0x370], rax
0x990c:	jmp	0x8c23


0x96f1:	mov	qword ptr [rbp - 0x370], rcx
0x96f8:	jmp	0x8c50


0x8c47:	cmp	rsi, r8
0x8c4a:	ja	0x96f1


0x8c50:	mov	rax, qword ptr [rbp - 0x370]
0x8c57:	lea	rdi, [r12 + rax]
0x8c5b:	call	0x12010


0x8c60:	lea	rcx, [rax + r12 - 1]
0x8c65:	xor	edx, edx
0x8c67:	mov	qword ptr [rbp - 0x330], rax
0x8c6e:	mov	rax, rcx
0x8c71:	div	r12
0x8c74:	sub	rcx, rdx
0x8c77:	cmp	dword ptr [rbp - 0x348], 0
0x8c7e:	mov	qword ptr [rbp - 0x3b0], rcx
0x8c85:	je	0x96fd


0x96fd:	xor	r9d, r9d
0x9700:	cmp	dword ptr [rbx + 0xc], 3
0x9704:	lea	rax, [rbp - 0x2f0]
0x970b:	mov	qword ptr [rbp - 0x398], 0
0x9716:	mov	qword ptr [rbp - 0x348], rax
0x971d:	sete	r9b
0x9721:	lea	rax, [rbp - 0x2f8]
0x9728:	sub	rsp, 8
0x972c:	mov	r8, qword ptr [rbp - 0x398]
0x9733:	mov	rcx, qword ptr [rbp - 0x370]
0x973a:	mov	rdx, qword ptr [rbp - 0x3b0]
0x9741:	mov	esi, dword ptr [rbp - 0x328]
0x9747:	mov	edi, dword ptr [rbp - 0x320]
0x974d:	push	rax
0x974e:	push	qword ptr [rbp - 0x348]
0x9754:	push	-1
0x9756:	push	qword ptr [rbp - 0x308]
0x975c:	push	qword ptr [rbp - 0x310]
0x9762:	call	0x53b0


0x8c8b:	mov	byte ptr [rbp - 0x3a5], 0
0x8c92:	mov	dword ptr [rbp - 0x390], 1
0x8c9c:	mov	rax, qword ptr [rbp - 0x130]
0x8ca3:	mov	edi, dword ptr [rbp - 0x320]
0x8ca9:	xor	r12d, r12d
0x8cac:	mov	qword ptr [rbp - 0x380], rax
0x8cb3:	lea	rax, [rbp - 0x2f0]
0x8cba:	mov	rsi, rax
0x8cbd:	mov	qword ptr [rbp - 0x348], rax
0x8cc4:	call	0xa090


0x48f1:	cmp	eax, -1
0x48f4:	jne	0x4543


0x48fa:	cmp	dword ptr [r13], 0
0x48ff:	je	0x4543


0x4905:	jmp	0x42ca


0x48b8:	cmp	eax, -1
0x48bb:	jne	0x455f


0x48c1:	cmp	dword ptr [r13], 0
0x48c6:	je	0x455f


0x48cc:	jmp	0x42ca


0x12ec0:	test	rax, rax
0x12ec3:	mov	r13, rax
0x12ec6:	mov	r14d, dword ptr [rbp]
0x12eca:	jne	0x12e99


0x12ecc:	mov	edi, r12d
0x12ecf:	call	0x2c30


0x12e99:	mov	rdi, rbx
0x12e9c:	mov	rbx, r13
0x12e9f:	call	0x2c60


0xd877:	test	rax, rax
0xd87a:	mov	rbp, rax
0xd87d:	je	0xd898


0xd898:	call	0x2950


0xd87f:	mov	dword ptr [r12], ebx
0xd883:	add	rsp, 8
0xd887:	mov	rax, rbp
0xd88a:	pop	rbx
0xd88b:	pop	rbp
0xd88c:	pop	r12
0xd88e:	pop	r13
0xd890:	ret	


0xd89d:	mov	r13d, dword ptr [rax]
0xd8a0:	mov	r12, rax
0xd8a3:	mov	edi, ebx
0xd8a5:	call	0x2c30


0x13205:	mov	ecx, dword ptr [rsp + 0xc]
0x13209:	mov	ebx, eax
0x1320b:	jmp	0x130d0


0x130d0:	test	ebx, ebx
0x130d2:	jne	0x13104


0xd8aa:	mov	rax, rbp
0xd8ad:	mov	dword ptr [r12], r13d
0xd8b1:	add	rsp, 8
0xd8b5:	pop	rbx
0xd8b6:	pop	rbp
0xd8b7:	pop	r12
0xd8b9:	pop	r13
0xd8bb:	ret	


0x12ed4:	jmp	0x12e99


0x13658:	cmp	rbp, 0x7ff
0x1365f:	jle	0x13784


0x13784:	test	rbp, rbp
0x13787:	mov	r15, r14
0x1378a:	mov	eax, 0x10
0x1378f:	cmovs	rbp, r12
0x13793:	lea	r12, [rsp + 0x10]
0x13798:	sub	r15, rbp
0x1379b:	cmp	r15, 0x10
0x1379f:	mov	rdi, r12
0x137a2:	cmova	r15, rax
0x137a6:	xor	esi, esi
0x137a8:	call	0x2bd0


0x13665:	mov	rdi, r13
0x13668:	call	0x13d00


0x1366d:	jmp	0x135b7


0x137ad:	lea	rax, [r13 + rbp]
0x137b2:	add	rbp, r15
0x137b5:	mov	ecx, r15d
0x137b8:	cmp	rbp, 0x7ff
0x137bf:	mov	rsi, r12
0x137c2:	mov	rdi, rax
0x137c5:	rep movsb	byte ptr [rdi], byte ptr [rsi]


0x137c7:	ja	0x13665


0x137c5:	rep movsb	byte ptr [rdi], byte ptr [rsi]


0x137cd:	mov	r15, r14
0x137d0:	mov	r8d, 4
0x137d6:	sub	r15, rbp
0x137d9:	mov	qword ptr [rsp + 8], r8
0x137de:	cmp	r15, 4
0x137e2:	cmova	r15, r8
0x137e6:	lea	rdx, [rbp + r15]
0x137eb:	add	rbp, r13
0x137ee:	mov	qword ptr [rsp], rdx
0x137f2:	call	0x2a30


0x100b2:	mov	dword ptr [rbp], r12d
0x100b6:	pop	rbx
0x100b7:	mov	eax, r14d
0x100ba:	pop	rbp
0x100bb:	pop	r12
0x100bd:	pop	r13
0x100bf:	pop	r14
0x100c1:	ret	


0x8ec7:	test	eax, eax
0x8ec9:	movzx	r8d, byte ptr [rbp - 0x338]
0x8ed1:	jns	0x7d78


0x8ed7:	mov	rsi, qword ptr [rbp - 0x308]
0x8ede:	mov	edi, 4
0x8ee3:	call	0xf3f0


0x7d8a:	test	eax, eax
0x7d8c:	movzx	r8d, byte ptr [rbp - 0x328]
0x7d94:	js	0x87e7


0x87e7:	mov	rsi, qword ptr [rbp - 0x310]
0x87ee:	mov	edi, 4
0x87f3:	call	0xf3f0


0x7d9a:	mov	rdi, qword ptr [rbp - 0x330]
0x7da1:	mov	byte ptr [rbp - 0x328], r8b
0x7da8:	call	0x30d0


0x7dad:	movzx	r8d, byte ptr [rbp - 0x328]
0x7db5:	mov	byte ptr [rbp - 0x320], 0
0x7dbc:	test	r8b, r8b
0x7dbf:	jne	0x619f


0x7dc5:	jmp	0x6bb0


0x13100:	mov	dword ptr [r12], r13d
0x13104:	mov	rcx, qword ptr [rsp + 0xa8]
0x1310c:	xor	rcx, qword ptr fs:[0x28]
0x13115:	mov	eax, ebx
0x13117:	jne	0x13230


0x141d3:	mov	ebx, 0xffffffff
0x141d8:	mov	dword ptr [rbp], r12d
0x141dc:	jmp	0x140b0


0x4611:	mov	edi, r14d
0x4614:	call	0x2c30


0x4619:	jmp	0x42ca


0x431b:	mov	edi, r14d
0x431e:	call	0x2c30


0x48d9:	jmp	0x42ca


0x131f7:	mov	ebx, eax
0x131f9:	jmp	0x13104


0x4e06:	lea	rax, [rsp + 0xf0]
0x4e0e:	mov	rdx, rsp
0x4e11:	mov	rsi, rbp
0x4e14:	mov	rdi, rbx
0x4e17:	mov	dword ptr [rsp], 0x10
0x4e1e:	mov	dword ptr [rsp + 4], 0x30
0x4e26:	mov	qword ptr [rsp + 8], rax
0x4e2b:	lea	rax, [rsp + 0x20]
0x4e30:	mov	qword ptr [rsp + 0x10], rax
0x4e35:	call	0x128c0


0x4e3a:	mov	rax, qword ptr [rbx + 0x28]
0x4e3e:	cmp	rax, qword ptr [rbx + 0x30]
0x4e42:	jae	0x4e70


0x4e44:	lea	rdx, [rax + 1]
0x4e48:	mov	qword ptr [rbx + 0x28], rdx
0x4e4c:	mov	byte ptr [rax], 0xa
0x4e4f:	mov	rax, qword ptr [rsp + 0x18]
0x4e54:	xor	rax, qword ptr fs:[0x28]
0x4e5d:	jne	0x4e7f


0x4e70:	mov	esi, 0xa
0x4e75:	mov	rdi, rbx
0x4e78:	call	0x2b90


0x4e5f:	add	rsp, 0xd8
0x4e66:	pop	rbx
0x4e67:	pop	rbp
0x4e68:	ret	


0x4e7f:	call	0x2b30


0x4e7d:	jmp	0x4e4f


0x4e4f:	mov	rax, qword ptr [rsp + 0x18]
0x4e54:	xor	rax, qword ptr fs:[0x28]
0x4e5d:	jne	0x4e7f


0x46e0:	test	eax, eax
0x46e2:	js	0x47c0


0x47c0:	mov	edx, 5
0x47c5:	lea	rsi, [rip + 0x11c5e]
0x47cc:	jmp	0x472c


0x46e8:	mov	eax, dword ptr [rsp + 0x1c]
0x46ec:	test	al, 0x7f
0x46ee:	jne	0x46f9


0x472c:	xor	edi, edi
0x472e:	call	0x2ad0


0x46f0:	test	ah, 0xff
0x46f3:	je	0x47a0


0x46f9:	lea	rsi, [rip + 0x11f88]
0x4700:	xor	edi, edi
0x4702:	mov	edx, 5
0x4707:	call	0x2ad0


0x47a0:	cmp	byte ptr [rbx + 0x1f], 0
0x47a4:	je	0x43e0


0x47aa:	cmp	byte ptr [rip + 0x21a990], 0
0x47b1:	jne	0x434e


0x47b7:	jmp	0x433a


0x470c:	xor	esi, esi
0x470e:	mov	rdx, rax
0x4711:	xor	edi, edi
0x4713:	xor	eax, eax
0x4715:	call	0x2f30


0x471a:	jmp	0x4749


0x4866:	mov	rsi, rbx
0x4869:	mov	edi, 4
0x486e:	call	0xf3f0


0x11635:	mov	ebp, eax
0x11637:	jmp	0x115f7


0x733c:	test	rax, rax
0x733f:	mov	r15, rax
0x7342:	mov	rdx, qword ptr [rbp - 0x350]
0x7349:	movzx	r8d, byte ptr [rbp - 0x358]
0x7351:	movzx	r9d, byte ptr [rbp - 0x35c]
0x7359:	je	0x76e2


0x735f:	mov	rsi, qword ptr [rbp - 0x308]
0x7366:	mov	rdi, rax
0x7369:	mov	byte ptr [rbp - 0x358], r9b
0x7370:	mov	byte ptr [rbp - 0x350], r8b
0x7377:	call	0xfbe0


0x85f2:	test	eax, eax
0x85f4:	movzx	r8d, byte ptr [rbp - 0x320]
0x85fc:	je	0x619f


0x8602:	mov	rsi, qword ptr [rbp - 0x308]
0x8609:	mov	edi, 4
0x860e:	call	0xf3f0


0x737c:	mov	rdi, r15
0x737f:	xor	eax, 1
0x7382:	mov	r12d, eax
0x7385:	call	0x30d0


0x738a:	movzx	r8d, byte ptr [rbp - 0x350]
0x7392:	movzx	r9d, byte ptr [rbp - 0x358]
0x739a:	xor	eax, eax
0x739c:	test	r12b, r12b
0x739f:	je	0x7220


0x8693:	test	al, al
0x8695:	mov	rdx, qword ptr [rbp - 0x350]
0x869c:	movzx	r8d, byte ptr [rbp - 0x358]
0x86a4:	movzx	r9d, byte ptr [rbp - 0x35c]
0x86ac:	je	0x8f27


0x8f27:	movzx	r12d, byte ptr [rbx + 0x18]
0x8f2c:	xor	r12d, 1
0x8f30:	jmp	0x739c


0x86b2:	mov	eax, dword ptr [rdx + 0x18]
0x86b5:	and	eax, 0xf000
0x86ba:	cmp	eax, 0xa000
0x86bf:	je	0x72ec


0x739c:	test	r12b, r12b
0x739f:	je	0x7220


0x8293:	xor	eax, 1
0x8296:	movzx	r8d, byte ptr [rbp - 0x350]
0x829e:	movzx	r9d, byte ptr [rbp - 0x358]
0x82a6:	mov	r12d, eax
0x82a9:	xor	eax, eax
0x82ab:	jmp	0x739c


0x7eb1:	test	al, al
0x7eb3:	jne	0x7220


0x7eb9:	mov	edi, dword ptr [rbx]
0x7ebb:	movzx	r8d, byte ptr [rbp - 0x350]
0x7ec3:	movzx	r9d, byte ptr [rbp - 0x358]
0x7ecb:	test	edi, edi
0x7ecd:	jne	0x706e


0x7ed3:	test	r15d, r15d
0x7ed6:	je	0x706e


0x7edc:	movzx	r12d, byte ptr [rbx + 0x18]
0x7ee1:	mov	eax, 1
0x7ee6:	xor	r12d, 1
0x7eea:	jmp	0x739c


0xccf9:	add	rsp, 8
0xccfd:	ret	


0x153b7:	test	eax, eax
0x153b9:	mov	r12d, eax
0x153bc:	js	0x153f8


0x153f8:	call	0x2950


0x153be:	mov	rdi, rbx
0x153c1:	call	0x13f50


0x153c6:	test	eax, eax
0x153c8:	jne	0x153dd


0x153ca:	mov	rsi, rbp
0x153cd:	mov	edi, r12d
0x153d0:	call	0x2eb0


0x153dd:	call	0x2950


0x2eb0:	jmp	qword ptr [rip + 0x21a00a]




0x153e2:	mov	ebp, dword ptr [rax]
0x153e4:	mov	rbx, rax
0x153e7:	mov	edi, r12d
0x153ea:	call	0x2c30


0x153ef:	mov	dword ptr [rbx], ebp
0x153f1:	xor	ebx, ebx
0x153f3:	jmp	0x153a1


0x153fd:	mov	r12d, dword ptr [rax]
0x15400:	mov	rbp, rax
0x15403:	mov	rdi, rbx
0x15406:	call	0x13f50


0x1540b:	xor	ebx, ebx
0x1540d:	mov	dword ptr [rbp], r12d
0x15411:	jmp	0x153a1


0x10956:	mov	r12d, eax
0x10959:	call	0x2950


0x1095e:	mov	r13d, dword ptr [rax]
0x10961:	mov	rbp, rax
0x10964:	mov	edi, ebx
0x10966:	call	0x2c30


0x1096b:	mov	ebx, r12d
0x1096e:	mov	dword ptr [rbp], r13d
0x10972:	add	rsp, 8
0x10976:	mov	eax, ebx
0x10978:	pop	rbx
0x10979:	pop	rbp
0x1097a:	pop	r12
0x1097c:	pop	r13
0x1097e:	ret	


0xb14b:	mov	rbx, qword ptr [rip + 0x214456]
0xb152:	mov	r12, rax
0xb155:	call	0x2950


0xb15a:	mov	rbp, rax
0xb15d:	test	rbx, rbx
0xb160:	je	0xb1d0


0xb1d0:	mov	esi, dword ptr [rax]
0xb1d2:	lea	rdx, [rip + 0xdc87]
0xb1d9:	mov	rcx, r12
0xb1dc:	xor	edi, edi
0xb1de:	xor	eax, eax
0xb1e0:	call	0x2f30


0xb162:	mov	rdi, rbx
0xb165:	call	0xf4c0


0xb1e5:	jmp	0xb183


0xb183:	call	0xb210


0xb1bb:	test	eax, eax
0xb1bd:	jne	0xb138


0xb1c3:	pop	rbx
0xb1c4:	pop	rbp
0xb1c5:	pop	r12
0xb1c7:	jmp	0xb210


0xb138:	lea	rsi, [rip + 0xd001]
0xb13f:	xor	edi, edi
0xb141:	mov	edx, 5
0xb146:	call	0x2ad0


0xb104:	test	eax, eax
0xb106:	jne	0xb138


0xb108:	pop	rbx
0xb109:	pop	rbp
0xb10a:	pop	r12
0xb10c:	jmp	0xb210


0xb222:	test	eax, eax
0xb224:	je	0xb23c


0xb23c:	mov	rdi, qword ptr [rip + 0x211edd]
0xb243:	call	0x12dc0


0xb226:	call	0x2950


0xb22b:	cmp	byte ptr [rip + 0x21437e], 0
0xb232:	mov	rbx, rax
0xb235:	je	0xb253


0xb253:	lea	rsi, [rip + 0xcf00]
0xb25a:	xor	edi, edi
0xb25c:	mov	edx, 5
0xb261:	call	0x2ad0


0xb237:	cmp	dword ptr [rax], 0x20
0xb23a:	jne	0xb253


0xb266:	mov	rdi, qword ptr [rip + 0x21434b]
0xb26d:	mov	rbp, rax
0xb270:	test	rdi, rdi
0xb273:	je	0xb29d


0xb29d:	mov	esi, dword ptr [rbx]
0xb29f:	lea	rdx, [rip + 0xdbba]
0xb2a6:	mov	rcx, rax
0xb2a9:	xor	edi, edi
0xb2ab:	xor	eax, eax
0xb2ad:	call	0x2f30


0xb275:	call	0xf4c0


0xb2b2:	jmp	0xb292


0xb292:	mov	edi, dword ptr [rip + 0x211db0]
0xb298:	call	0x2980


0x2980:	jmp	qword ptr [rip + 0x21a2a2]




0xb248:	test	eax, eax
0xb24a:	jne	0xb292


0xb24c:	add	rsp, 8
0xb250:	pop	rbx
0xb251:	pop	rbp
0xb252:	ret	


0xb188:	mov	edi, dword ptr [rip + 0x211eba]
0xb18e:	call	0x2980


0x153d5:	test	rax, rax
0x153d8:	mov	rbx, rax
0x153db:	jne	0x153a1


0x9792:	test	eax, eax
0x9794:	jns	0x91da


0x9867:	test	eax, eax
0x9869:	jne	0x979a


0x986f:	cmp	dword ptr [rbp - 0x390], 3
0x9876:	jne	0x91da


0x987c:	test	r12b, r12b
0x987f:	je	0x91da


0x9885:	mov	rdx, qword ptr [rbp - 0x380]
0x988c:	mov	rsi, qword ptr [rbp - 0x3a0]
0x9893:	mov	edi, dword ptr [rbp - 0x328]
0x9899:	sub	rdx, rsi
0x989c:	call	0x4f90


0x98a1:	test	eax, eax
0x98a3:	jns	0x91da


0x98a9:	mov	rsi, qword ptr [rbp - 0x308]
0x98b0:	mov	edi, 4
0x98b5:	call	0xf3f0


0xfdc4:	mov	rdi, rbx
0xfdc7:	xor	ebx, ebx
0xfdc9:	call	0x12010


0xfdce:	mov	r13, rax
0xfdd1:	nop	dword ptr [rax]
0xfdd8:	mov	rsi, qword ptr [rbp]
0xfddc:	lea	r14, [r13 + rbx]
0xfde1:	add	rbp, 0x10
0xfde5:	mov	rdi, r14
0xfde8:	call	0x2ab0


0x2ab0:	jmp	qword ptr [rip + 0x21a20a]




0x12331:	mov	rcx, qword ptr [r15]
0x12334:	mov	rbx, rax
0x12337:	cmp	rcx, rbp
0x1233a:	je	0x12368


0x12368:	test	r13, r13
0x1236b:	mov	qword ptr [rsp + 8], rcx
0x12370:	jne	0x123b0


0x1233c:	mov	eax, dword ptr [r12]
0x12340:	test	eax, eax
0x12342:	je	0x123a8


0x123b0:	movzx	r12d, byte ptr [rbp]
0x123b5:	test	r12b, r12b
0x123b8:	je	0x12378


0x123a8:	xor	ebp, ebp
0x123aa:	jmp	0x1234e


0x12344:	cmp	eax, 0x22
0x12347:	mov	ebp, 1
0x1234c:	jne	0x12378


0x123ba:	movsx	esi, r12b
0x123be:	mov	rdi, r13
0x123c1:	xor	ebp, ebp
0x123c3:	call	0x2b70


0x1234e:	test	r13, r13
0x12351:	je	0x1235c


0x2b70:	jmp	qword ptr [rip + 0x21a1aa]


0x1235c:	mov	qword ptr [r14], rbx
0x1235f:	jmp	0x1237d


0x12353:	movzx	r12d, byte ptr [rcx]
0x12357:	test	r12b, r12b
0x1235a:	jne	0x123d7




0x1237d:	mov	rdi, qword ptr [rsp + 0x18]
0x12382:	xor	rdi, qword ptr fs:[0x28]
0x1238b:	mov	eax, ebp
0x1238d:	jne	0x12620


0x123d7:	movsx	esi, r12b
0x123db:	mov	rdi, r13
0x123de:	mov	qword ptr [rsp + 8], rcx
0x123e3:	call	0x2b70


0xa716:	mov	r8d, dword ptr [rsp + 0xc]
0xa71b:	jmp	0xa66b


0xa5b7:	mov	ecx, dword ptr [rsp + 0xc]
0xa5bb:	jmp	0xa516


0xa516:	cmp	r15, qword ptr [rsp]
0xa51a:	je	0xa530


0x31ab:	lea	rdi, [rip + 0x7f2e]
0x31b2:	call	0x16390


0x31b7:	lea	rax, [rsp + 0x40]
0x31bc:	mov	rdi, rax
0x31bf:	mov	qword ptr [rsp + 8], rax
0x31c4:	call	0x5970


0x31c9:	xor	edi, edi
0x31cb:	mov	byte ptr [rsp + 0x54], 1
0x31d0:	mov	dword ptr [rsp + 0x78], 0
0x31d8:	mov	dword ptr [rsp + 0x44], 4
0x31e0:	mov	byte ptr [rsp + 0x55], 1
0x31e5:	mov	byte ptr [rsp + 0x56], 0
0x31ea:	mov	byte ptr [rsp + 0x57], 0
0x31ef:	mov	dword ptr [rsp + 0x48], 4
0x31f7:	mov	byte ptr [rsp + 0x58], 0
0x31fc:	mov	byte ptr [rsp + 0x59], 1
0x3201:	mov	byte ptr [rsp + 0x5c], 0
0x3206:	mov	byte ptr [rsp + 0x5d], 0
0x320b:	mov	byte ptr [rsp + 0x62], 0
0x3210:	mov	byte ptr [rsp + 0x5e], 0
0x3215:	mov	byte ptr [rsp + 0x5f], 0
0x321a:	mov	byte ptr [rsp + 0x60], 0
0x321f:	mov	byte ptr [rsp + 0x69], 0
0x3224:	mov	byte ptr [rsp + 0x63], 1
0x3229:	mov	byte ptr [rsp + 0x64], 0
0x322e:	mov	byte ptr [rsp + 0x68], 0
0x3233:	mov	byte ptr [rsp + 0x6a], 0
0x3238:	mov	dword ptr [rsp + 0x4c], 2
0x3240:	mov	byte ptr [rsp + 0x6c], 0
0x3245:	mov	dword ptr [rsp + 0x40], 0
0x324d:	mov	byte ptr [rsp + 0x6b], 1
0x3252:	mov	dword ptr [rsp + 0x50], 0x180
0x325a:	mov	byte ptr [rsp + 0x6f], 0
0x325f:	mov	byte ptr [rsp + 0x70], 0
0x3264:	mov	byte ptr [rsp + 0x6d], 0
0x3269:	mov	byte ptr [rsp + 0x66], 0
0x326e:	mov	byte ptr [rsp + 0x65], 0
0x3273:	mov	byte ptr [rsp + 0x61], 0
0x3278:	mov	byte ptr [rsp + 0x67], 0
0x327d:	mov	byte ptr [rsp + 0x6e], 0
0x3282:	mov	qword ptr [rsp + 0x80], 0
0x328e:	mov	qword ptr [rsp + 0x88], 0
0x329a:	mov	qword ptr [rip + 0x21beb3], 0
0x32a5:	mov	qword ptr [rip + 0x21be98], 0
0x32b0:	mov	byte ptr [rip + 0x21be8a], 0
0x32b7:	mov	byte ptr [rip + 0x21be82], 0
0x32be:	call	0x2d70


0x32c3:	mov	qword ptr [rsp + 0x28], 0
0x32cc:	mov	byte ptr [rsp + 0x27], 0
0x32d1:	mov	byte ptr [rsp + 0x26], 0
0x32d6:	mov	byte ptr [rsp + 0x25], 0
0x32db:	mov	qword ptr [rsp + 0x10], 0
0x32e4:	mov	qword ptr [rsp + 0x18], 0
0x32ed:	nop	dword ptr [rax]
0x32f0:	lea	rdx, [rip + 0x13264]
0x32f7:	xor	r8d, r8d
0x32fa:	mov	rcx, r12
0x32fd:	mov	rsi, rbp
0x3300:	mov	edi, ebx
0x3302:	call	0x2b50


0x2b50:	jmp	qword ptr [rip + 0x21a1ba]




0x137f7:	mov	rdx, qword ptr [rsp]
0x137fb:	mov	dword ptr [rsp + 0x10], eax
0x137ff:	mov	ecx, r15d
0x13802:	mov	rdi, rbp
0x13805:	mov	rsi, r12
0x13808:	mov	r8, qword ptr [rsp + 8]
0x1380d:	rep movsb	byte ptr [rdi], byte ptr [rsi]


0x1380f:	cmp	rdx, 0x7ff
0x13816:	jg	0x13665


0x1380d:	rep movsb	byte ptr [rdi], byte ptr [rsi]


0x1381c:	sub	r14, rdx
0x1381f:	cmp	r14, 4
0x13823:	cmova	r14, r8
0x13827:	call	0x3020


0x3020:	jmp	qword ptr [rip + 0x219f52]




0x136cc:	mov	dword ptr [rbx + 0x30], eax
0x136cf:	mov	dword ptr [rsp + 0x10], eax
0x136d3:	call	0x3020


0x136d8:	mov	dword ptr [rsp + 0x10], eax
0x136dc:	mov	dword ptr [rbx + 0x34], eax
0x136df:	mov	ebp, 0x800
0x136e4:	mov	eax, 4
0x136e9:	sub	rbp, r14
0x136ec:	cmp	rbp, 4
0x136f0:	cmova	rbp, rax
0x136f4:	call	0x2b40


0x136f9:	test	ebp, ebp
0x136fb:	mov	dword ptr [rsp + 0x10], eax
0x136ff:	lea	rcx, [r13 + r14]
0x13704:	mov	esi, ebp
0x13706:	je	0x1371c


0x1371c:	add	rbp, r14
0x1371f:	cmp	rbp, 0x7ff
0x13726:	ja	0x13665


0x13708:	xor	eax, eax
0x1370a:	mov	edx, eax
0x1370c:	add	eax, 1
0x1370f:	movzx	edi, byte ptr [r12 + rdx]
0x13714:	cmp	eax, esi
0x13716:	mov	byte ptr [rcx + rdx], dil
0x1371a:	jb	0x1370a


0x1372c:	call	0x2dc0


0x1370a:	mov	edx, eax
0x1370c:	add	eax, 1
0x1370f:	movzx	edi, byte ptr [r12 + rdx]
0x13714:	cmp	eax, esi
0x13716:	mov	byte ptr [rcx + rdx], dil
0x1371a:	jb	0x1370a


0x13731:	mov	dword ptr [rsp + 0x10], eax
0x13735:	mov	eax, 0x800
0x1373a:	mov	edx, 4
0x1373f:	sub	rax, rbp
0x13742:	lea	rcx, [r13 + rbp]
0x13747:	cmp	rax, 4
0x1374b:	cmova	rax, rdx
0x1374f:	test	eax, eax
0x13751:	mov	esi, eax
0x13753:	je	0x13665


0x13759:	xor	eax, eax
0x1375b:	mov	edx, eax
0x1375d:	add	eax, 1
0x13760:	movzx	edi, byte ptr [r12 + rdx]
0x13765:	cmp	eax, esi
0x13767:	mov	byte ptr [rcx + rdx], dil
0x1376b:	jb	0x1375b


0x1375b:	mov	edx, eax
0x1375d:	add	eax, 1
0x13760:	movzx	edi, byte ptr [r12 + rdx]
0x13765:	cmp	eax, esi
0x13767:	mov	byte ptr [rcx + rdx], dil
0x1376b:	jb	0x1375b


0x1376d:	jmp	0x13665


0x1382c:	mov	rdx, qword ptr [rsp]
0x13830:	mov	dword ptr [rsp + 0x10], eax
0x13834:	mov	ecx, r14d
0x13837:	mov	rsi, r12
0x1383a:	lea	rax, [r13 + rdx]
0x1383f:	add	r14, rdx
0x13842:	cmp	r14, 0x7ff
0x13849:	mov	rdi, rax
0x1384c:	rep movsb	byte ptr [rdi], byte ptr [rsi]


0x1384e:	ja	0x13665


0x1384c:	rep movsb	byte ptr [rdi], byte ptr [rsi]


0x13854:	jmp	0x136df


0x136df:	mov	ebp, 0x800
0x136e4:	mov	eax, 4
0x136e9:	sub	rbp, r14
0x136ec:	cmp	rbp, 4
0x136f0:	cmova	rbp, rax
0x136f4:	call	0x2b40


0x3307:	cmp	eax, -1
0x330a:	je	0x3594


0x3594:	cmp	byte ptr [rip + 0x21bba5], 0
0x359b:	jne	0x3826


0x3310:	cmp	eax, 0x64
0x3313:	je	0x33f5


0x35a1:	test	r15, r15
0x35a4:	je	0x35e5


0x3826:	cmp	byte ptr [rip + 0x21b914], 0
0x382d:	jne	0x3e09


0x33f5:	mov	byte ptr [rip + 0x21bd44], 1
0x33fc:	jmp	0x32f0


0x3319:	jle	0x3350


0x35e5:	xor	eax, eax
0x35e7:	test	r13b, r13b
0x35ea:	jne	0x3a27


0x35a6:	lea	rdx, [rsp + 0x90]
0x35ae:	mov	rsi, r15
0x35b1:	mov	edi, 1
0x35b6:	call	0x2dd0


0x3833:	test	r15, r15
0x3836:	je	0x35e5


0x3e09:	lea	rsi, [rip + 0x13610]
0x3e10:	mov	edx, 5
0x3e15:	xor	edi, edi
0x3e17:	call	0x2ad0


0x32f0:	lea	rdx, [rip + 0x13264]
0x32f7:	xor	r8d, r8d
0x32fa:	mov	rcx, r12
0x32fd:	mov	rsi, rbp
0x3300:	mov	edi, ebx
0x3302:	call	0x2b50


0x3350:	cmp	eax, 0x53
0x3353:	je	0x34fe


0x331b:	cmp	eax, 0x73
0x331e:	je	0x34cd


0x35f0:	mov	rdi, qword ptr [rsp + 0x10]
0x35f5:	mov	dword ptr [rsp + 0x40], eax
0x35f9:	call	0xa910


0x3a27:	lea	rsi, [rip + 0x12b73]
0x3a2e:	xor	edi, edi
0x3a30:	mov	edx, 5
0x3a35:	call	0x2ad0


0x383c:	lea	rsi, [rip + 0x13c1d]
0x3843:	mov	edx, 5
0x3848:	xor	edi, edi
0x384a:	call	0x2ad0


0x34fe:	mov	rax, qword ptr [rip + 0x219bfb]
0x3505:	mov	r13d, 1
0x350b:	mov	qword ptr [rsp + 0x10], rax
0x3510:	jmp	0x32f0


0x3359:	jle	0x33d0


0x34cd:	xor	esi, esi
0x34cf:	mov	edi, 0x11
0x34d4:	mov	byte ptr [rip + 0x21bc66], 1
0x34db:	call	0x2d00


0x3324:	jg	0x3390


0x33d0:	cmp	eax, 0xffffff7e
0x33d5:	je	0x3bd5


0x335b:	cmp	eax, 0x5a
0x335e:	je	0x3427


0x2d00:	jmp	qword ptr [rip + 0x21a0e2]


0x3326:	cmp	eax, 0x6d
0x3329:	je	0x34bc


0x3390:	cmp	eax, 0x76
0x3393:	je	0x354d


0x3bd5:	xor	edi, edi
0x3bd7:	call	0x4920


0x33db:	jle	0x3461


0x3427:	cmp	dword ptr [rip + 0x21bd32], 0
0x342e:	mov	rax, qword ptr [rip + 0x219ccb]
0x3435:	je	0x3557


0x3364:	jle	0x3414




0x34bc:	mov	rax, qword ptr [rip + 0x219c3d]
0x34c3:	mov	qword ptr [rsp + 0x18], rax
0x34c8:	jmp	0x32f0


0x332f:	jle	0x34a0


0x354d:	mov	byte ptr [rsp + 0x6e], 1
0x3552:	jmp	0x32f0


0x3399:	jle	0x352f


0x3461:	cmp	eax, 0xffffff7d
0x3466:	jne	0x337c


0x33e1:	cmp	eax, 0x43
0x33e4:	je	0x3455


0x3557:	test	rax, rax
0x355a:	je	0x32f0


0x343b:	test	rax, rax
0x343e:	mov	byte ptr [rip + 0x219bdb], 0
0x3445:	je	0x3a4a


0x3414:	cmp	eax, 0x54
0x3417:	jne	0x337c


0x336a:	cmp	eax, 0x62
0x336d:	je	0x34e5


0x34a0:	cmp	eax, 0x67
0x34a3:	jne	0x337c


0x3335:	cmp	eax, 0x6f
0x3338:	je	0x3401


0x352f:	cmp	eax, 0x74
0x3532:	jne	0x337c


0x339f:	cmp	eax, 0x80
0x33a4:	je	0x3515


0x346c:	mov	rdi, qword ptr [rip + 0x219c75]
0x3473:	mov	rcx, qword ptr [rip + 0x219bc6]
0x347a:	lea	r8, [rip + 0x130ca]
0x3481:	lea	rdx, [rip + 0x1307e]
0x3488:	lea	rsi, [rip + 0x12ff9]
0x348f:	xor	r9d, r9d
0x3492:	xor	eax, eax
0x3494:	call	0x11e70


0x337c:	mov	edi, 1
0x3381:	call	0x4920


0x3455:	mov	byte ptr [rip + 0x21bce6], 1
0x345c:	jmp	0x32f0


0x33e6:	cmp	eax, 0x44
0x33e9:	jne	0x337c


0x3560:	mov	edx, 5
0x3565:	lea	rsi, [rip + 0x13e6c]
0x356c:	jmp	0x357a


0x3a4a:	mov	byte ptr [rsp + 0x61], 1
0x3a4f:	jmp	0x32f0


0x344b:	mov	qword ptr [rsp + 0x28], rax
0x3450:	jmp	0x32f0


0x341d:	mov	byte ptr [rsp + 0x26], 1
0x3422:	jmp	0x32f0


0x34e5:	mov	rax, qword ptr [rip + 0x219c14]
0x34ec:	mov	r13d, 1
0x34f2:	test	rax, rax
0x34f5:	cmovne	r14, rax
0x34f9:	jmp	0x32f0


0x3373:	cmp	eax, 0x63
0x3376:	je	0x32f0


0x34a9:	mov	rax, qword ptr [rip + 0x219c50]
0x34b0:	mov	qword ptr [rip + 0x21bc91], rax
0x34b7:	jmp	0x32f0


0x3401:	mov	rax, qword ptr [rip + 0x219cf8]
0x3408:	mov	qword ptr [rip + 0x21bd49], rax
0x340f:	jmp	0x32f0


0x333e:	cmp	eax, 0x70
0x3341:	jne	0x337c


0x3538:	test	r15, r15
0x353b:	jne	0x3c8b


0x3515:	cmp	dword ptr [rip + 0x21bc44], 0
0x351c:	je	0x356e


0x33aa:	cmp	eax, 0x81
0x33af:	jne	0x337c


0x33eb:	mov	byte ptr [rsp + 0x25], 1
0x33f0:	jmp	0x32f0


0x357a:	xor	edi, edi
0x357c:	call	0x2ad0


0x3343:	mov	byte ptr [rsp + 0x5f], 1
0x3348:	jmp	0x32f0


0x3541:	mov	r15, qword ptr [rip + 0x219bb8]
0x3548:	jmp	0x32f0


0x3c8b:	lea	rsi, [rip + 0x136ce]
0x3c92:	mov	edx, 5
0x3c97:	xor	edi, edi
0x3c99:	call	0x2ad0


0x356e:	lea	rsi, [rip + 0x13e13]
0x3575:	mov	edx, 5
0x357a:	xor	edi, edi
0x357c:	call	0x2ad0


0x351e:	mov	byte ptr [rsp + 0x65], 1
0x3523:	mov	byte ptr [rip + 0x219af6], 0
0x352a:	jmp	0x32f0


0x33b1:	mov	rdi, qword ptr [rip + 0x219d48]
0x33b8:	call	0x12240


0x33bd:	mov	byte ptr [rsp + 0x27], 1
0x33c2:	mov	qword ptr [rip + 0x219c5f], rax
0x33c9:	jmp	0x32f0


0x3499:	xor	edi, edi
0x349b:	call	0x3030


0x35fe:	cmp	byte ptr [rsp + 0x65], 0
0x3603:	je	0x38ba


0x38ba:	cmp	qword ptr [rsp + 0x28], 0
0x38c0:	je	0x3620


0x3609:	cmp	byte ptr [rsp + 0x61], 0
0x360e:	jne	0x3d1a


0x3620:	movsxd	rax, dword ptr [rip + 0x219ad1]
0x3627:	sub	ebx, eax
0x3629:	lea	rax, [rbp + rax*8]
0x362e:	mov	qword ptr [rsp + 0x10], rax
0x3633:	movzx	eax, byte ptr [rip + 0x21bb06]
0x363a:	xor	eax, 1
0x363d:	test	r15, r15
0x3640:	sete	dl
0x3643:	and	eax, edx
0x3645:	movzx	edx, al
0x3648:	cmp	edx, ebx
0x364a:	jge	0x3cd3


0x38c6:	call	0x2950


0x3614:	cmp	qword ptr [rsp + 0x28], 0
0x361a:	jne	0x3d1a


0x3d1a:	lea	rsi, [rip + 0x1377f]
0x3d21:	mov	edx, 5
0x3d26:	xor	edi, edi
0x3d28:	call	0x2ad0


0x3650:	cmp	byte ptr [rsp + 0x26], 0
0x3655:	je	0x3908


0x3cd3:	sub	ebx, 1
0x3cd6:	jne	0x3d75


0x3908:	test	al, al
0x390a:	je	0x366d


0x365b:	test	r15, r15
0x365e:	jne	0x3caf


0x3cdc:	mov	rax, qword ptr [rsp + 0x10]
0x3ce1:	mov	edi, 4
0x3ce6:	mov	rsi, qword ptr [rax]
0x3ce9:	call	0xf3f0


0x3d75:	lea	rsi, [rip + 0x12831]
0x3d7c:	mov	edx, 5
0x3d81:	xor	edi, edi
0x3d83:	call	0x2ad0


0x366d:	mov	rax, qword ptr [rsp + 0x18]
0x3672:	test	rax, rax
0x3675:	je	0x36c8


0x3910:	xor	r15d, r15d
0x3913:	cmp	ebx, 1
0x3916:	je	0x366d


0x3664:	cmp	ebx, 2
0x3667:	jg	0x3ddd


0x3caf:	lea	rsi, [rip + 0x13882]
0x3cb6:	mov	edx, 5
0x3cbb:	xor	edi, edi
0x3cbd:	call	0x2ad0


0x36c8:	cmp	byte ptr [rsp + 0x27], 0
0x36cd:	je	0x36dc


0x3677:	mov	rdi, rax
0x367a:	call	0xd2a0


0x391c:	mov	rcx, qword ptr [rsp + 0x10]
0x3921:	movsxd	rax, ebx
0x3924:	mov	r12d, 1
0x392a:	lea	r13, [rcx + rax*8 - 8]
0x392f:	mov	rbp, qword ptr [r13]
0x3933:	mov	rdi, rbp
0x3936:	call	0xb3a0


0x3ddd:	mov	rax, qword ptr [rsp + 0x10]
0x3de2:	mov	edi, 4
0x3de7:	mov	rsi, qword ptr [rax + 0x10]
0x3deb:	call	0xf3f0


0x36dc:	cmp	byte ptr [rip + 0x21ba5f], 0
0x36e3:	je	0x3719


0x36cf:	cmp	byte ptr [rip + 0x21ba6b], 0
0x36d6:	je	0x3a54


0x3719:	mov	rdi, qword ptr [rip + 0x21ba38]
0x3720:	test	rdi, rdi
0x3723:	je	0x39f8


0x36e5:	cmp	byte ptr [rsp + 0x5f], 0
0x36ea:	jne	0x3d9b


0x3a54:	lea	rsi, [rip + 0x13b25]
0x3a5b:	xor	edi, edi
0x3a5d:	mov	edx, 5
0x3a62:	call	0x2ad0


0x39f8:	mov	dword ptr [rip + 0x21b74e], 0xffffffff
0x3a02:	jmp	0x3745


0x3729:	call	0x2d20


0x36f0:	cmp	byte ptr [rip + 0x21ba4a], 0
0x36f7:	mov	edx, 5
0x36fc:	lea	rsi, [rip + 0x13f0d]
0x3703:	jne	0x3d81


0x3d9b:	mov	edx, 5
0x3da0:	lea	rsi, [rip + 0x13821]
0x3da7:	jmp	0x3d81


0x3745:	mov	rdi, qword ptr [rip + 0x21b9fc]
0x374c:	test	rdi, rdi
0x374f:	je	0x39e9


0x2d20:	jmp	qword ptr [rip + 0x21a0d2]


0x3709:	test	dword ptr [rip + 0x219909], 0xffff0e00
0x3713:	jne	0x3a7a


0x3d81:	xor	edi, edi
0x3d83:	call	0x2ad0


0x39e9:	mov	dword ptr [rip + 0x21b751], 0xffffffff
0x39f3:	jmp	0x3771


0x3755:	call	0x2d90




0x3a7a:	lea	rsi, [rip + 0x13bcf]
0x3a81:	xor	edi, edi
0x3a83:	mov	edx, 5
0x3a88:	call	0x2ad0


0x3771:	cmp	byte ptr [rip + 0x21b9c8], 0
0x3778:	jne	0x3a07


0x2d90:	jmp	qword ptr [rip + 0x21a09a]


0x377e:	call	0xa040


0x3a07:	mov	rcx, qword ptr [rsp + 8]
0x3a0c:	mov	rsi, qword ptr [rsp + 0x10]
0x3a11:	lea	rdx, [rip + 0x708]
0x3a18:	mov	edi, ebx
0x3a1a:	call	0x104d0




0x3783:	test	r15, r15
0x3786:	je	0x3860


0x3860:	cmp	byte ptr [rsp + 0x25], 0
0x3865:	mov	rax, qword ptr [rsp + 0x10]
0x386a:	mov	rbp, qword ptr [rax + 8]
0x386e:	mov	rbx, qword ptr [rax]
0x3871:	jne	0x3aa0


0x378c:	mov	rdi, qword ptr [rsp + 8]
0x3791:	xor	ebp, ebp
0x3793:	xor	r13d, r13d
0x3796:	call	0x5910


0x3877:	mov	rdx, qword ptr [rsp + 8]
0x387c:	mov	rsi, rbp
0x387f:	mov	rdi, rbx
0x3882:	call	0x4260


0x3aa0:	mov	rdx, qword ptr [rsp + 8]
0x3aa5:	xor	ecx, ecx
0x3aa7:	mov	rsi, rbp
0x3aaa:	mov	rdi, rbx
0x3aad:	xor	r13d, r13d
0x3ab0:	call	0x3f40


0x3887:	xor	eax, 1
0x388a:	movzx	r13d, al
0x388e:	mov	rcx, qword ptr [rsp + 0x128]
0x3896:	xor	rcx, qword ptr fs:[0x28]
0x389f:	mov	eax, r13d
0x38a2:	jne	0x3e04


0x38a8:	add	rsp, 0x138
0x38af:	pop	rbx
0x38b0:	pop	rbp
0x38b1:	pop	r12
0x38b3:	pop	r13
0x38b5:	pop	r14
0x38b7:	pop	r15
0x38b9:	ret	


0x3e04:	call	0x2b30


0x379b:	mov	qword ptr [rsp + 0x18], r15
0x37a0:	jmp	0x37bc


0x37bc:	mov	rax, qword ptr [rsp + 0x10]
0x37c1:	test	ebp, ebp
0x37c3:	sete	r12b
0x37c7:	and	r12b, byte ptr [rsp + 0x25]
0x37cc:	mov	r14, qword ptr [rax + rbp*8]
0x37d0:	mov	rdi, r14
0x37d3:	call	0xb3a0


0x37d8:	mov	rdi, qword ptr [rsp + 0x18]
0x37dd:	xor	edx, edx
0x37df:	mov	rsi, rax
0x37e2:	call	0xb790


0x37e7:	test	r12b, r12b
0x37ea:	mov	r15, rax
0x37ed:	je	0x3808


0x3808:	mov	rdx, qword ptr [rsp + 8]
0x380d:	mov	rsi, r15
0x3810:	mov	rdi, r14
0x3813:	call	0x4260


0x37ef:	mov	rdx, qword ptr [rsp + 8]
0x37f4:	mov	ecx, 1
0x37f9:	mov	rsi, rax
0x37fc:	mov	rdi, r14
0x37ff:	call	0x3f40


0x3818:	test	al, al
0x381a:	je	0x37a2


0x37a2:	mov	rdi, r15
0x37a5:	mov	r13d, 1
0x37ab:	call	0x30d0


0x381c:	mov	rdi, r15
0x381f:	call	0x30d0


0x3824:	jmp	0x37b0


0x37b0:	add	rbp, 1
0x37b4:	cmp	ebx, ebp
0x37b6:	jle	0x388e


0x388e:	mov	rcx, qword ptr [rsp + 0x128]
0x3896:	xor	rcx, qword ptr fs:[0x28]
0x389f:	mov	eax, r13d
0x38a2:	jne	0x3e04


0x393b:	mov	rdi, rax
0x393e:	mov	rdx, rax
0x3941:	movzx	eax, byte ptr [rsp + 0x26]
0x3946:	or	rcx, 0xffffffffffffffff
0x394a:	repne scasb	al, byte ptr [rdi]


0x394a:	repne scasb	al, byte ptr [rdi]


0x394c:	mov	rax, rcx
0x394f:	not	rax
0x3952:	sub	rax, 1
0x3956:	je	0x3964


0x3964:	lea	rdx, [rsp + 0x90]
0x396c:	mov	rsi, rbp
0x396f:	mov	edi, 1
0x3974:	call	0x2dd0


0x3958:	xor	r12d, r12d
0x395b:	cmp	byte ptr [rdx + rax - 1], 0x2f
0x3960:	sete	r12b
0x3964:	lea	rdx, [rsp + 0x90]
0x396c:	mov	rsi, rbp
0x396f:	mov	edi, 1
0x3974:	call	0x2dd0


0x367f:	test	rax, rax
0x3682:	mov	rbp, rax
0x3685:	je	0x3da9


0x3da9:	mov	rdi, qword ptr [rsp + 0x18]
0x3dae:	call	0xf6c0


0x368b:	xor	r8d, r8d
0x368e:	mov	rcx, rax
0x3691:	xor	edx, edx
0x3693:	xor	esi, esi
0x3695:	xor	edi, edi
0x3697:	call	0xd6e0


0x369c:	lea	r8, [rip + 0x219971]
0x36a3:	xor	edi, edi
0x36a5:	mov	rcx, rbp
0x36a8:	xor	edx, edx
0x36aa:	mov	esi, 1
0x36af:	mov	dword ptr [rip + 0x219967], eax
0x36b5:	call	0xd6e0


0x36ba:	mov	rdi, rbp
0x36bd:	mov	dword ptr [rip + 0x219955], eax
0x36c3:	call	0x30d0


0x38cb:	mov	rdi, qword ptr [rsp + 0x28]
0x38d0:	mov	dword ptr [rax], 0x5f
0x38d6:	mov	rbx, rax
0x38d9:	call	0xf6c0


0x3a8d:	xor	esi, esi
0x3a8f:	mov	rdx, rax
0x3a92:	xor	edi, edi
0x3a94:	xor	eax, eax
0x3a96:	call	0x2f30


0x3a9b:	jmp	0x3719


0x3d88:	xor	esi, esi
0x3d8a:	mov	rdx, rax
0x3d8d:	xor	edi, edi
0x3d8f:	xor	eax, eax
0x3d91:	call	0x2f30


0x3d96:	jmp	0x337c


0x3a67:	xor	esi, esi
0x3a69:	mov	rdx, rax
0x3a6c:	xor	edi, edi
0x3a6e:	xor	eax, eax
0x3a70:	call	0x2f30


0x3a75:	jmp	0x36dc


0x3cc2:	xor	esi, esi
0x3cc4:	mov	rdx, rax
0x3cc7:	mov	edi, 1
0x3ccc:	xor	eax, eax
0x3cce:	call	0x2f30


0x3d2d:	xor	esi, esi
0x3d2f:	mov	rdx, rax
0x3d32:	mov	edi, 1
0x3d37:	xor	eax, eax
0x3d39:	call	0x2f30


0x3d3e:	mov	rsi, r15
0x3d41:	mov	edi, 4
0x3d46:	call	0xf3f0


0x3581:	xor	esi, esi
0x3583:	mov	rdx, rax
0x3586:	xor	edi, edi
0x3588:	xor	eax, eax
0x358a:	call	0x2f30


0x358f:	jmp	0x32f0


0x3c9e:	xor	esi, esi
0x3ca0:	mov	rdx, rax
0x3ca3:	mov	edi, 1
0x3ca8:	xor	eax, eax
0x3caa:	call	0x2f30


0x384f:	xor	esi, esi
0x3851:	mov	rdx, rax
0x3854:	mov	edi, 1
0x3859:	xor	eax, eax
0x385b:	call	0x2f30


0x3a3a:	mov	rsi, r14
0x3a3d:	mov	rdi, rax
0x3a40:	call	0xb010


0x3a45:	jmp	0x35f0


0x3e1c:	xor	esi, esi
0x3e1e:	mov	rdx, rax
0x3e21:	mov	edi, 1
0x3e26:	xor	eax, eax
0x3e28:	call	0x2f30


0x3e2d:	nop	dword ptr [rax]


0x3979:	test	eax, eax
0x397b:	je	0x3ba6


0x3ba6:	mov	eax, dword ptr [rsp + 0xa8]
0x3bad:	and	eax, 0xf000
0x3bb2:	cmp	eax, 0x4000
0x3bb7:	je	0x3bc1


0x3981:	call	0x2950


0x3bc1:	mov	rcx, qword ptr [rsp + 0x10]
0x3bc6:	sub	ebx, 1
0x3bc9:	movsxd	rax, ebx
0x3bcc:	mov	r15, qword ptr [rcx + rax*8]
0x3bd0:	jmp	0x366d


0x3bb9:	xor	r14d, r14d
0x3bbc:	jmp	0x399c


0x399c:	test	r12d, r12d
0x399f:	jne	0x3bdc


0x39a5:	xor	r15d, r15d
0x39a8:	cmp	ebx, 2
0x39ab:	je	0x366d


0x3bdc:	mov	rsi, rbp
0x3bdf:	mov	edi, 4
0x3be4:	call	0xf3f0


0x39b1:	mov	rsi, qword ptr [r13]
0x39b5:	mov	edi, 4
0x39ba:	call	0xf3f0


0x3986:	mov	r14d, dword ptr [rax]
0x3989:	test	r14d, r14d
0x398c:	je	0x3ba6


0x3992:	cmp	r14d, 2
0x3996:	jne	0x3c14


0x3c14:	mov	rsi, rbp
0x3c17:	mov	edi, 4
0x3c1c:	call	0xf3f0


0x35bb:	cmp	byte ptr [rsp + 0x25], 0
0x35c0:	jne	0x35ca


0x35c2:	test	eax, eax
0x35c4:	jne	0x3c4c


0x35ca:	test	eax, eax
0x35cc:	jne	0x35e5


0x3c4c:	mov	rsi, r15
0x3c4f:	mov	edi, 4
0x3c54:	call	0xf3f0


0x35ce:	mov	eax, dword ptr [rsp + 0xa8]
0x35d5:	and	eax, 0xf000
0x35da:	cmp	eax, 0x4000
0x35df:	jne	0x3d3e


0x123e8:	test	rax, rax
0x123eb:	mov	rcx, qword ptr [rsp + 8]
0x123f0:	je	0x124bc


0x124bc:	mov	qword ptr [r14], rbx
0x124bf:	or	ebp, 2
0x124c2:	jmp	0x1237d


0x123f6:	lea	eax, [r12 - 0x45]
0x123fb:	cmp	al, 0x2f
0x123fd:	ja	0x12450


0x123ff:	movabs	rdx, 0x814400308945
0x12409:	bt	rdx, rax
0x1240d:	jae	0x12450


0x12450:	mov	edi, 1
0x12455:	mov	esi, 0x400
0x1245a:	sub	r12d, 0x42
0x1245e:	cmp	r12b, 0x35
0x12462:	ja	0x124bc


0x1240f:	mov	esi, 0x30
0x12414:	mov	rdi, r13
0x12417:	mov	qword ptr [rsp + 8], rcx
0x1241c:	call	0x2b70


0x12464:	lea	rdx, [rip + 0x68bd]
0x1246b:	movzx	r12d, r12b
0x1246f:	movsxd	rax, dword ptr [rdx + r12*4]
0x12473:	add	rax, rdx
0x12476:	jmp	rax


0x12421:	test	rax, rax
0x12424:	mov	rcx, qword ptr [rsp + 8]
0x12429:	je	0x12450


0x1242b:	movzx	eax, byte ptr [rcx + 1]
0x1242f:	cmp	al, 0x44
0x12431:	je	0x1243f


0x1243f:	mov	edi, 2
0x12444:	mov	esi, 0x3e8
0x12449:	jmp	0x1245a


0x12433:	cmp	al, 0x69
0x12435:	je	0x12608


0x1245a:	sub	r12d, 0x42
0x1245e:	cmp	r12b, 0x35
0x12462:	ja	0x124bc


0x12608:	xor	edi, edi
0x1260a:	cmp	byte ptr [rcx + 2], 0x42
0x1260e:	mov	esi, 0x400
0x12613:	sete	dil
0x12617:	lea	edi, [rdi + rdi + 1]
0x1261b:	jmp	0x1245a


0x1243b:	cmp	al, 0x42
0x1243d:	jne	0x12450


0x123c8:	test	rax, rax
0x123cb:	mov	ebx, 1
0x123d0:	mov	rcx, qword ptr [rsp + 8]
0x123d5:	je	0x12378


0xfded:	mov	rdi, qword ptr [rbp - 0x10]
0xfdf1:	sub	rax, r14
0xfdf4:	lea	rbx, [rbx + rax + 1]
0xfdf9:	call	0x30d0


0xfdfe:	cmp	r12, rbp
0xfe01:	jne	0xfdd8


0xfe03:	add	rbx, r13
0xfe06:	jmp	0xfd7e


0xfdd8:	mov	rsi, qword ptr [rbp]
0xfddc:	lea	r14, [r13 + rbx]
0xfde1:	add	rbp, 0x10
0xfde5:	mov	rdi, r14
0xfde8:	call	0x2ab0


0xfd7e:	mov	rdi, qword ptr [rsp + 0x10]
0xfd83:	call	0x30d0


0x375a:	test	rax, rax
0x375d:	je	0x3adc


0x3adc:	mov	rdi, qword ptr [rip + 0x21b665]
0x3ae3:	lea	rcx, [rsp + 0x38]
0x3ae8:	xor	r8d, r8d
0x3aeb:	xor	edx, edx
0x3aed:	xor	esi, esi
0x3aef:	call	0x122a0


0x3763:	mov	eax, dword ptr [rax + 0x10]
0x3766:	mov	dword ptr [rip + 0x21b9d8], eax
0x376c:	call	0x28f0


0x28f0:	jmp	qword ptr [rip + 0x21a2ea]




0x3af4:	test	eax, eax
0x3af6:	jne	0x3b0b


0x3af8:	mov	rax, qword ptr [rsp + 0x38]
0x3afd:	mov	edx, 0xffffffff
0x3b02:	cmp	rax, rdx
0x3b05:	jbe	0x3766


0x3b0b:	mov	rdi, qword ptr [rip + 0x21b636]
0x3b12:	call	0xf6c0


0x3766:	mov	dword ptr [rip + 0x21b9d8], eax
0x376c:	call	0x28f0


0x372e:	test	rax, rax
0x3731:	je	0x3b41


0x3b41:	mov	rdi, qword ptr [rip + 0x21b610]
0x3b48:	lea	rcx, [rsp + 0x38]
0x3b4d:	xor	r8d, r8d
0x3b50:	xor	edx, edx
0x3b52:	xor	esi, esi
0x3b54:	call	0x122a0


0x3737:	mov	eax, dword ptr [rax + 0x10]
0x373a:	mov	dword ptr [rip + 0x21ba10], eax
0x3740:	call	0x2e30


0x2e30:	jmp	qword ptr [rip + 0x21a04a]




0x3b59:	test	eax, eax
0x3b5b:	jne	0x3b70


0x3b5d:	mov	rax, qword ptr [rsp + 0x38]
0x3b62:	mov	edx, 0xffffffff
0x3b67:	cmp	rax, rdx
0x3b6a:	jbe	0x373a


0x3b70:	mov	rdi, qword ptr [rip + 0x21b5e1]
0x3b77:	call	0xf6c0


0x373a:	mov	dword ptr [rip + 0x21ba10], eax
0x3740:	call	0x2e30


0x34e0:	jmp	0x32f0


0x3804:	test	al, al
0x3806:	je	0x37a2


0x3ab5:	test	al, al
0x3ab7:	je	0x3acd


0x3acd:	and	r13d, 1
0x3ad1:	mov	eax, r13d
0x3ad4:	xor	eax, 1
0x3ad7:	jmp	0x388a


0x3ab9:	mov	rdx, qword ptr [rsp + 8]
0x3abe:	mov	rsi, rbp
0x3ac1:	mov	rdi, rbx
0x3ac4:	call	0x4260


0x388a:	movzx	r13d, al
0x388e:	mov	rcx, qword ptr [rsp + 0x128]
0x3896:	xor	rcx, qword ptr fs:[0x28]
0x389f:	mov	eax, r13d
0x38a2:	jne	0x3e04


0x3ac9:	movzx	r13d, al
0x3acd:	and	r13d, 1
0x3ad1:	mov	eax, r13d
0x3ad4:	xor	eax, 1
0x3ad7:	jmp	0x388a


0x3a1f:	mov	r13d, eax
0x3a22:	jmp	0x388e


0xb27a:	mov	esi, dword ptr [rbx]
0xb27c:	lea	rdx, [rip + 0xced0]
0xb283:	mov	rcx, rax
0xb286:	mov	r8, rbp
0xb289:	xor	edi, edi
0xb28b:	xor	eax, eax
0xb28d:	call	0x2f30


0xb16a:	mov	esi, dword ptr [rbp]
0xb16d:	lea	rdx, [rip + 0xcfdf]
0xb174:	mov	rcx, rax
0xb177:	mov	r8, r12
0xb17a:	xor	edi, edi
0xb17c:	xor	eax, eax
0xb17e:	call	0x2f30


0x12d53:	mov	rdx, r15
0x12d56:	mov	rsi, rbp
0x12d59:	mov	rdi, rbx
0x12d5c:	call	0x12be0


0x12d61:	call	r13


0x12b93:	mov	rdx, r12
0x12b96:	mov	rbp, rax
0x12b99:	mov	esi, 8
0x12b9e:	xor	edi, edi
0x12ba0:	call	0xf2d0


0xee6c:	add	rsp, 0x20
0xee70:	mov	r11, qword ptr [rsp + 0x10]
0xee75:	cmp	r11, rax
0xee78:	ja	0xeee1


0xee7a:	lea	rsi, [rax + 1]
0xee7e:	lea	rax, [rip + 0x21075b]
0xee85:	cmp	r12, rax
0xee88:	mov	qword ptr [rbx], rsi
0xee8b:	je	0xee9f


0xeee1:	mov	eax, dword ptr [rsp + 0x18]
0xeee5:	mov	dword ptr [r13], eax
0xeee9:	add	rsp, 0x28
0xeeed:	mov	rax, r12
0xeef0:	pop	rbx
0xeef1:	pop	rbp
0xeef2:	pop	r12
0xeef4:	pop	r13
0xeef6:	pop	r14
0xeef8:	pop	r15
0xeefa:	ret	


0xee9f:	mov	rdi, rsi
0xeea2:	mov	qword ptr [rsp + 0x10], rsi
0xeea7:	call	0x12010


0xee8d:	mov	rdi, r12
0xee90:	mov	qword ptr [rsp + 0x10], rsi
0xee95:	call	0x30d0


0xee9a:	mov	rsi, qword ptr [rsp + 0x10]
0xee9f:	mov	rdi, rsi
0xeea2:	mov	qword ptr [rsp + 0x10], rsi
0xeea7:	call	0x12010


0xeeac:	sub	rsp, 8
0xeeb0:	mov	qword ptr [rbx + 8], rax
0xeeb4:	mov	r8d, dword ptr [rbp]
0xeeb8:	push	qword ptr [rbp + 0x30]
0xeebb:	push	qword ptr [rbp + 0x28]
0xeebe:	mov	rcx, r14
0xeec1:	push	r15
0xeec3:	mov	r9d, dword ptr [rsp + 0x3c]
0xeec8:	mov	rdi, rax
0xeecb:	mov	rdx, qword ptr [rsp + 0x28]
0xeed0:	mov	rsi, qword ptr [rsp + 0x30]
0xeed5:	mov	r12, rax
0xeed8:	call	0xdb40


0xf5f2:	mov	rdi, qword ptr [rsp + 0x38]
0xf5f7:	xor	rdi, qword ptr fs:[0x28]
0xf600:	jne	0xf60c


0xf602:	add	rsp, 0x48
0xf606:	ret	


0xf60c:	call	0x2b30


0xf33f:	mov	rcx, qword ptr [rsp + 0x38]
0xf344:	xor	rcx, qword ptr fs:[0x28]
0xf34d:	jne	0xf359


0xf34f:	add	rsp, 0x48
0xf353:	ret	


0xf359:	call	0x2b30


0x12ba5:	mov	r8, rbp
0x12ba8:	mov	rdx, rbx
0x12bab:	mov	rcx, rax
0x12bae:	pop	rbx
0x12baf:	pop	rbp
0x12bb0:	pop	r12
0x12bb2:	xor	esi, esi
0x12bb4:	xor	edi, edi
0x12bb6:	xor	eax, eax
0x12bb8:	jmp	0x2f30


0x8560:	mov	rdx, qword ptr [rbp - 0x308]
0x8567:	mov	r12, rax
0x856a:	mov	esi, 4
0x856f:	xor	edi, edi
0x8571:	call	0xf2d0


0x8576:	mov	r8, r12
0x8579:	mov	rcx, rax
0x857c:	mov	rdx, rbx
0x857f:	xor	esi, esi
0x8581:	xor	edi, edi
0x8583:	xor	eax, eax
0x8585:	call	0x2f30


0x858a:	xor	r12d, r12d
0x858d:	jmp	0x6466


0x58c3:	lea	rsi, [rip + 0x11ed6]
0x58ca:	mov	edx, 5
0x58cf:	xor	edi, edi
0x58d1:	mov	rbp, rax
0x58d4:	call	0x2ad0


0x58d9:	mov	esi, dword ptr [rbx]
0x58db:	mov	rcx, rbp
0x58de:	mov	rdx, rax
0x58e1:	xor	edi, edi
0x58e3:	xor	eax, eax
0x58e5:	call	0x2f30


0x58ea:	pop	rbx
0x58eb:	xor	eax, eax
0x58ed:	pop	rbp
0x58ee:	pop	r12
0x58f0:	ret	


0x7674:	mov	rdx, qword ptr [rbp - 0x310]
0x767b:	mov	esi, 4
0x7680:	xor	edi, edi
0x7682:	mov	r12, rax
0x7685:	call	0xf2d0


0x768a:	lea	rsi, [rip + 0x1040f]
0x7691:	mov	rbx, rax
0x7694:	mov	edx, 5
0x7699:	xor	edi, edi
0x769b:	call	0x2ad0


0x76a0:	mov	r8, r12
0x76a3:	mov	rcx, rbx
0x76a6:	mov	rdx, rax
0x76a9:	mov	esi, dword ptr [r14]
0x76ac:	jmp	0x6dd6


0x6dd6:	xor	edi, edi
0x6dd8:	xor	eax, eax
0x6dda:	call	0x2f30


0x6ddf:	mov	rsi, qword ptr [rbp - 0x280]
0x6de6:	mov	rdi, qword ptr [rbp - 0x278]
0x6ded:	call	0x9ef0


0x99a4:	mov	rdx, qword ptr [rbp - 0x308]
0x99ab:	mov	esi, 4
0x99b0:	xor	edi, edi
0x99b2:	mov	r12, rax
0x99b5:	call	0xf2d0


0x99ba:	lea	rsi, [rip + 0xe4ed]
0x99c1:	mov	edx, 5
0x99c6:	xor	edi, edi
0x99c8:	mov	qword ptr [rbp - 0x338], rax
0x99cf:	call	0x2ad0


0x99d4:	mov	qword ptr [rbp - 0x330], rax
0x99db:	call	0x2950


0x99e0:	mov	rcx, qword ptr [rbp - 0x338]
0x99e7:	mov	esi, dword ptr [rax]
0x99e9:	mov	r8, r12
0x99ec:	mov	rdx, qword ptr [rbp - 0x330]
0x99f3:	xor	edi, edi
0x99f5:	xor	eax, eax
0x99f7:	call	0x2f30


0x99fc:	xor	r8d, r8d
0x99ff:	mov	qword ptr [rbp - 0x330], 0
0x9a0a:	jmp	0x8eb5


0x7236:	mov	rdx, qword ptr [rbp - 0x310]
0x723d:	mov	esi, 4
0x7242:	xor	edi, edi
0x7244:	mov	r12, rax
0x7247:	call	0xf2d0


0x724c:	lea	rsi, [rip + 0x10b6a]
0x7253:	mov	rbx, rax
0x7256:	mov	edx, 5
0x725b:	xor	edi, edi
0x725d:	call	0x2ad0


0x7262:	mov	r8, r12
0x7265:	mov	rdx, rax
0x7268:	mov	rcx, rbx
0x726b:	xor	esi, esi
0x726d:	xor	edi, edi
0x726f:	xor	eax, eax
0x7271:	call	0x2f30


0x7276:	jmp	0x5f30


0x6c0f:	mov	rdx, qword ptr [rbp - 0x350]
0x6c16:	xor	edi, edi
0x6c18:	mov	esi, 4
0x6c1d:	mov	r12, rax
0x6c20:	call	0xf2d0


0x6c25:	lea	rsi, [rip + 0x11389]
0x6c2c:	mov	rbx, rax
0x6c2f:	xor	edi, edi
0x6c31:	mov	edx, 5
0x6c36:	call	0x2ad0


0x6c3b:	mov	rcx, r12
0x6c3e:	mov	rsi, rax
0x6c41:	mov	rdx, rbx
0x6c44:	mov	edi, 1
0x6c49:	xor	eax, eax
0x6c4b:	call	0x2ee0


0x6c50:	jmp	0x5f30


0x514a:	mov	rdx, r12
0x514d:	mov	esi, 4
0x5152:	xor	edi, edi
0x5154:	mov	r13, rax
0x5157:	call	0xf2d0


0x515c:	lea	rsi, [rip + 0x12585]
0x5163:	mov	rbp, rax
0x5166:	mov	edx, 5
0x516b:	xor	edi, edi
0x516d:	call	0x2ad0


0x5172:	mov	r8, r13
0x5175:	mov	rcx, rbp
0x5178:	mov	rdx, rax
0x517b:	mov	esi, ebx
0x517d:	xor	eax, eax
0x517f:	xor	edi, edi
0x5181:	call	0x2f30


0x5186:	xor	ebx, ebx
0x5188:	add	rsp, 8
0x518c:	mov	eax, ebx
0x518e:	pop	rbx
0x518f:	pop	rbp
0x5190:	pop	r12
0x5192:	pop	r13
0x5194:	ret	


0x6023:	mov	rdx, qword ptr [rbp - 0x310]
0x602a:	xor	edi, edi
0x602c:	mov	esi, 4
0x6031:	mov	r13, rax
0x6034:	call	0xf2d0


0x6039:	lea	rsi, [rip + 0x11960]
0x6040:	mov	rbx, rax
0x6043:	xor	edi, edi
0x6045:	mov	edx, 5
0x604a:	call	0x2ad0


0x604f:	mov	r8, r13
0x6052:	mov	rdx, rax
0x6055:	mov	rcx, rbx
0x6058:	xor	esi, esi
0x605a:	xor	edi, edi
0x605c:	xor	eax, eax
0x605e:	call	0x2f30


0x6063:	jmp	0x6466


0x874b:	mov	rdx, qword ptr [rbp - 0x308]
0x8752:	mov	esi, 4
0x8757:	xor	edi, edi
0x8759:	mov	r12, rax
0x875c:	call	0xf2d0


0x8761:	mov	edx, 5
0x8766:	mov	rbx, rax
0x8769:	lea	rsi, [rip + 0xf120]
0x8770:	jmp	0x725b


0x725b:	xor	edi, edi
0x725d:	call	0x2ad0


0x6b6a:	mov	rdx, qword ptr [rbp - 0x308]
0x6b71:	mov	esi, 4
0x6b76:	xor	edi, edi
0x6b78:	mov	r13, rax
0x6b7b:	call	0xf2d0


0x6b80:	lea	rsi, [rip + 0x10f59]
0x6b87:	mov	r14, rax
0x6b8a:	mov	edx, 5
0x6b8f:	xor	edi, edi
0x6b91:	call	0x2ad0


0x6b96:	mov	r8, r13
0x6b99:	mov	rdx, rax
0x6b9c:	mov	rcx, r14
0x6b9f:	mov	esi, r12d
0x6ba2:	xor	edi, edi
0x6ba4:	xor	eax, eax
0x6ba6:	call	0x2f30


0x6d9e:	mov	rdx, qword ptr [rbp - 0x310]
0x6da5:	mov	esi, 4
0x6daa:	xor	edi, edi
0x6dac:	mov	r12, rax
0x6daf:	call	0xf2d0


0x6db4:	lea	rsi, [rip + 0x11049]
0x6dbb:	mov	rbx, rax
0x6dbe:	mov	edx, 5
0x6dc3:	xor	edi, edi
0x6dc5:	call	0x2ad0


0x6dca:	mov	r8, r12
0x6dcd:	mov	rcx, rbx
0x6dd0:	mov	rdx, rax
0x6dd3:	mov	esi, r15d
0x6dd6:	xor	edi, edi
0x6dd8:	xor	eax, eax
0x6dda:	call	0x2f30


0x7fb1:	mov	rdx, qword ptr [rbp - 0x308]
0x7fb8:	mov	esi, 4
0x7fbd:	xor	edi, edi
0x7fbf:	mov	r12, rax
0x7fc2:	call	0xf2d0


0x7fc7:	mov	edx, 5
0x7fcc:	mov	rbx, rax
0x7fcf:	lea	rsi, [rip + 0xf882]
0x7fd6:	jmp	0x725b


0x75e6:	mov	rdx, qword ptr [rip + 0x217fa3]
0x75ed:	mov	esi, 4
0x75f2:	xor	edi, edi
0x75f4:	mov	r12, rax
0x75f7:	call	0xf2d0


0x75fc:	lea	rsi, [rip + 0x1046d]
0x7603:	mov	rbx, rax
0x7606:	mov	edx, 5
0x760b:	xor	edi, edi
0x760d:	call	0x2ad0


0x7612:	mov	r8, r12
0x7615:	mov	rdx, rax
0x7618:	mov	rcx, rbx
0x761b:	xor	eax, eax
0x761d:	xor	esi, esi
0x761f:	xor	edi, edi
0x7621:	call	0x2f30


0x7626:	mov	rax, qword ptr [rbp - 0x340]
0x762d:	mov	r12d, 1
0x7633:	mov	byte ptr [rax], 1
0x7636:	jmp	0x6466


0x4fec:	xor	edi, edi
0x4fee:	mov	rdx, r12
0x4ff1:	mov	esi, 4
0x4ff6:	mov	rbp, rax
0x4ff9:	call	0xf2d0


0x4ffe:	lea	rsi, [rip + 0x12cf4]
0x5005:	mov	rdx, rax
0x5008:	mov	rcx, rbp
0x500b:	xor	eax, eax
0x500d:	mov	edi, 1
0x5012:	call	0x2ee0


0x5017:	test	rbx, rbx
0x501a:	je	0x5051


0x5051:	mov	rdi, qword ptr [rip + 0x218090]
0x5058:	mov	rax, qword ptr [rdi + 0x28]
0x505c:	cmp	rax, qword ptr [rdi + 0x30]
0x5060:	jae	0x5078


0x501c:	mov	rsi, rbx
0x501f:	mov	edi, 4
0x5024:	call	0xf3f0


0x5062:	lea	rdx, [rax + 1]
0x5066:	mov	qword ptr [rdi + 0x28], rdx
0x506a:	mov	byte ptr [rax], 0xa
0x506d:	pop	rbx
0x506e:	pop	rbp
0x506f:	pop	r12
0x5071:	ret	


0x5078:	pop	rbx
0x5079:	pop	rbp
0x507a:	pop	r12
0x507c:	mov	esi, 0xa
0x5081:	jmp	0x2b90


0x7f8c:	mov	dword ptr [rbp - 0x320], 1
0x7f96:	jmp	0x60d0


0x6fec:	jmp	0x6434


0x87e2:	jmp	0x7968


0x6660:	jmp	0x6080


0xf3cb:	mov	rdx, qword ptr [rsp + 0x38]
0xf3d0:	xor	rdx, qword ptr fs:[0x28]
0xf3d9:	jne	0xf3e5


0xf3db:	add	rsp, 0x48
0xf3df:	ret	


0xf3e5:	call	0x2b30


0xf55f:	mov	rcx, qword ptr [rsp + 0x38]
0xf564:	xor	rcx, qword ptr fs:[0x28]
0xf56d:	jne	0xf579


0xf56f:	add	rsp, 0x48
0xf573:	ret	


0xf579:	call	0x2b30


0x9b14:	lea	rsi, [rip + 0xe3ae]
0x9b1b:	mov	r12, rax
0x9b1e:	mov	edx, 5
0x9b23:	xor	edi, edi
0x9b25:	call	0x2ad0


0x9b2a:	mov	qword ptr [rbp - 0x338], rax
0x9b31:	call	0x2950


0x9b36:	mov	rdx, qword ptr [rbp - 0x338]
0x9b3d:	mov	esi, dword ptr [rax]
0x9b3f:	mov	rcx, r12
0x9b42:	xor	edi, edi
0x9b44:	xor	eax, eax
0x9b46:	call	0x2f30


0x9b4b:	jmp	0x8ea6


0x8ea6:	mov	rdi, qword ptr [rbp - 0x2c8]
0x8ead:	call	0x30d0


0x9b63:	mov	edx, 5
0x9b68:	mov	r12, rax
0x9b6b:	lea	rsi, [rip + 0xdff6]
0x9b72:	jmp	0x97ba


0x97ba:	xor	edi, edi
0x97bc:	call	0x2ad0


0x97c1:	mov	qword ptr [rbp - 0x338], rax
0x97c8:	call	0x2950


0x97cd:	mov	rdx, qword ptr [rbp - 0x338]
0x97d4:	mov	esi, dword ptr [rax]
0x97d6:	mov	rcx, r12
0x97d9:	xor	edi, edi
0x97db:	xor	eax, eax
0x97dd:	call	0x2f30


0x97e2:	jmp	0x8eb2


0x7e5f:	mov	edx, 5
0x7e64:	mov	r12, rax
0x7e67:	lea	rsi, [rip + 0xfd42]
0x7e6e:	jmp	0x67c8


0x67c8:	xor	edi, edi
0x67ca:	call	0x2ad0


0x67cf:	mov	rcx, r12
0x67d2:	mov	rdx, rax
0x67d5:	xor	esi, esi
0x67d7:	xor	edi, edi
0x67d9:	xor	eax, eax
0x67db:	call	0x2f30


0x67e0:	jmp	0x6bb0


0x81a2:	mov	rdx, qword ptr [rbp - 0x310]
0x81a9:	mov	esi, 3
0x81ae:	xor	edi, edi
0x81b0:	mov	r12, rax
0x81b3:	call	0xf4f0


0x81b8:	mov	edx, 5
0x81bd:	mov	rbx, rax
0x81c0:	lea	rsi, [rip + 0xf731]
0x81c7:	jmp	0x725b


0xf48e:	mov	rsi, qword ptr [rsp + 0x38]
0xf493:	xor	rsi, qword ptr fs:[0x28]
0xf49c:	jne	0xf4a3


0xf49e:	add	rsp, 0x48
0xf4a2:	ret	


0xf4a3:	call	0x2b30


0x5029:	lea	rsi, [rip + 0x12cd2]
0x5030:	mov	rbx, rax
0x5033:	mov	edx, 5
0x5038:	xor	edi, edi
0x503a:	call	0x2ad0


0x503f:	mov	rdx, rbx
0x5042:	mov	rsi, rax
0x5045:	mov	edi, 1
0x504a:	xor	eax, eax
0x504c:	call	0x2ee0


0x3c59:	lea	rsi, [rip + 0x12910]
0x3c60:	mov	edx, 5
0x3c65:	xor	edi, edi
0x3c67:	mov	rbp, rax
0x3c6a:	call	0x2ad0


0x3c6f:	mov	rbx, rax
0x3c72:	call	0x2950


0x3c77:	mov	esi, dword ptr [rax]
0x3c79:	mov	rcx, rbp
0x3c7c:	mov	rdx, rbx
0x3c7f:	mov	edi, 1
0x3c84:	xor	eax, eax
0x3c86:	call	0x2f30


0x3c21:	lea	rsi, [rip + 0x12948]
0x3c28:	mov	rbx, rax
0x3c2b:	mov	edx, 5
0x3c30:	xor	edi, edi
0x3c32:	call	0x2ad0


0x3c37:	mov	rcx, rbx
0x3c3a:	mov	rdx, rax
0x3c3d:	mov	esi, r14d
0x3c40:	mov	edi, 1
0x3c45:	xor	eax, eax
0x3c47:	call	0x2f30


0x39bf:	lea	rsi, [rip + 0x12bbe]
0x39c6:	mov	rbx, rax
0x39c9:	mov	edx, 5
0x39ce:	xor	edi, edi
0x39d0:	call	0x2ad0


0x39d5:	mov	rcx, rbx
0x39d8:	mov	rdx, rax
0x39db:	xor	esi, esi
0x39dd:	mov	edi, 1
0x39e2:	xor	eax, eax
0x39e4:	call	0x2f30


0x3be9:	lea	rsi, [rip + 0x12994]
0x3bf0:	mov	rbx, rax
0x3bf3:	mov	edx, 5
0x3bf8:	xor	edi, edi
0x3bfa:	call	0x2ad0


0x3bff:	mov	rcx, rbx
0x3c02:	mov	rdx, rax
0x3c05:	mov	esi, r14d
0x3c08:	mov	edi, 1
0x3c0d:	xor	eax, eax
0x3c0f:	call	0x2f30


0x3d4b:	lea	rsi, [rip + 0x12832]
0x3d52:	mov	rbx, rax
0x3d55:	mov	edx, 5
0x3d5a:	xor	edi, edi
0x3d5c:	call	0x2ad0


0x3d61:	mov	rcx, rbx
0x3d64:	mov	rdx, rax
0x3d67:	xor	esi, esi
0x3d69:	mov	edi, 1
0x3d6e:	xor	eax, eax
0x3d70:	call	0x2f30


0x3df0:	mov	edx, 5
0x3df5:	mov	rbx, rax
0x3df8:	lea	rsi, [rip + 0x127c3]
0x3dff:	jmp	0x3cfd


0x3cfd:	xor	edi, edi
0x3cff:	call	0x2ad0


0x3d04:	mov	rcx, rbx
0x3d07:	mov	rdx, rax
0x3d0a:	xor	esi, esi
0x3d0c:	xor	edi, edi
0x3d0e:	xor	eax, eax
0x3d10:	call	0x2f30


0x3d15:	jmp	0x337c


0x3cee:	lea	rsi, [rip + 0x13813]
0x3cf5:	mov	rbx, rax
0x3cf8:	mov	edx, 5
0x3cfd:	xor	edi, edi
0x3cff:	call	0x2ad0


0x98ba:	mov	edx, 5
0x98bf:	mov	r12, rax
0x98c2:	lea	rsi, [rip + 0xe476]
0x98c9:	jmp	0x97ba


0x8613:	mov	edx, 5
0x8618:	mov	r13, rax
0x861b:	lea	rsi, [rip + 0xf915]
0x8622:	jmp	0x70ff


0x70ff:	xor	edi, edi
0x7101:	call	0x2ad0


0x7106:	mov	r12, rax
0x7109:	call	0x2950


0x710e:	mov	esi, dword ptr [rax]
0x7110:	mov	rcx, r13
0x7113:	mov	rdx, r12
0x7116:	xor	edi, edi
0x7118:	xor	eax, eax
0x711a:	call	0x2f30


0x711f:	jmp	0x6bb0


0x4873:	lea	rsi, [rip + 0x11ba2]
0x487a:	mov	edx, 5
0x487f:	xor	edi, edi
0x4881:	mov	rbp, rax
0x4884:	call	0x2ad0


0x4889:	mov	rbx, rax
0x488c:	call	0x2950


0x4891:	mov	esi, dword ptr [rax]
0x4893:	mov	rcx, rbp
0x4896:	mov	rdx, rbx
0x4899:	mov	edi, 1
0x489e:	xor	eax, eax
0x48a0:	call	0x2f30


0x87f8:	lea	rsi, [rip + 0xf725]
0x87ff:	xor	edi, edi
0x8801:	mov	edx, 5
0x8806:	mov	r12, rax
0x8809:	call	0x2ad0


0x880e:	mov	r13, rax
0x8811:	call	0x2950


0x8816:	mov	esi, dword ptr [rax]
0x8818:	xor	edi, edi
0x881a:	mov	rcx, r12
0x881d:	mov	rdx, r13
0x8820:	xor	eax, eax
0x8822:	call	0x2f30


0x8827:	mov	rdi, qword ptr [rbp - 0x330]
0x882e:	call	0x30d0


0x8833:	jmp	0x6bb0


0x8ee8:	lea	rsi, [rip + 0xf035]
0x8eef:	mov	edx, 5
0x8ef4:	xor	edi, edi
0x8ef6:	mov	r12, rax
0x8ef9:	call	0x2ad0


0x8efe:	mov	qword ptr [rbp - 0x328], rax
0x8f05:	call	0x2950


0x8f0a:	mov	rdx, qword ptr [rbp - 0x328]
0x8f11:	mov	esi, dword ptr [rax]
0x8f13:	mov	rcx, r12
0x8f16:	xor	edi, edi
0x8f18:	xor	eax, eax
0x8f1a:	call	0x2f30


0x8f1f:	xor	r8d, r8d
0x8f22:	jmp	0x7d78


0x97ab:	lea	rsi, [rip + 0xe728]
0x97b2:	mov	r12, rax
0x97b5:	mov	edx, 5
0x97ba:	xor	edi, edi
0x97bc:	call	0x2ad0


0x9cee:	mov	edx, 5
0x9cf3:	mov	r12, rax
0x9cf6:	lea	rsi, [rip + 0xe032]
0x9cfd:	jmp	0x9b23


0x9b23:	xor	edi, edi
0x9b25:	call	0x2ad0


0x4766:	lea	rsi, [rip + 0x11ccf]
0x476d:	mov	edx, 5
0x4772:	xor	edi, edi
0x4774:	mov	rbp, rax
0x4777:	call	0x2ad0


0x477c:	mov	rbx, rax
0x477f:	call	0x2950


0x4784:	mov	esi, dword ptr [rax]
0x4786:	mov	rcx, rbp
0x4789:	mov	rdx, rbx
0x478c:	mov	edi, 1
0x4791:	xor	eax, eax
0x4793:	call	0x2f30


0x8849:	lea	rsi, [rip + 0xf602]
0x8850:	mov	edx, 5
0x8855:	xor	edi, edi
0x8857:	mov	r12, rax
0x885a:	call	0x2ad0


0x885f:	mov	r15, rax
0x8862:	call	0x2950


0x8867:	mov	esi, dword ptr [rax]
0x8869:	mov	rcx, r12
0x886c:	mov	rdx, r15
0x886f:	xor	edi, edi
0x8871:	xor	eax, eax
0x8873:	xor	r12d, r12d
0x8876:	call	0x2f30


0x887b:	jmp	0x7b63


0x5b43:	lea	rsi, [rip + 0x12241]
0x5b4a:	xor	edi, edi
0x5b4c:	mov	edx, 5
0x5b51:	mov	r12, rax
0x5b54:	call	0x2ad0


0x5b59:	mov	esi, dword ptr [rbx]
0x5b5b:	mov	rdx, rax
0x5b5e:	mov	rcx, r12
0x5b61:	xor	edi, edi
0x5b63:	xor	eax, eax
0x5b65:	call	0x2f30


0x5b6a:	jmp	0x5bac


0x88f3:	lea	rsi, [rip + 0xf2f6]
0x88fa:	xor	edi, edi
0x88fc:	mov	edx, 5
0x8901:	mov	r12, rax
0x8904:	call	0x2ad0


0x8909:	mov	esi, dword ptr [rbp - 0x320]
0x890f:	mov	rdx, rax
0x8912:	mov	rcx, r12
0x8915:	xor	edi, edi
0x8917:	xor	eax, eax
0x8919:	call	0x2f30


0x891e:	jmp	0x6bb0


0x90f4:	mov	edx, 5
0x90f9:	mov	r13, rax
0x90fc:	lea	rsi, [rip + 0xee68]
0x9103:	jmp	0x70ff


0x5b7d:	lea	rsi, [rip + 0x11c4c]
0x5b84:	mov	edx, 5
0x5b89:	xor	edi, edi
0x5b8b:	mov	r12, rax
0x5b8e:	call	0x2ad0


0x5b93:	mov	rbx, rax
0x5b96:	call	0x2950


0x5b9b:	mov	esi, dword ptr [rax]
0x5b9d:	mov	rcx, r12
0x5ba0:	mov	rdx, rbx
0x5ba3:	xor	edi, edi
0x5ba5:	xor	eax, eax
0x5ba7:	call	0x2f30


0x57fa:	lea	rsi, [rip + 0x11f77]
0x5801:	mov	edx, 5
0x5806:	xor	edi, edi
0x5808:	mov	rbx, rax
0x580b:	call	0x2ad0


0x5810:	mov	esi, dword ptr [r12]
0x5814:	mov	rcx, rbx
0x5817:	mov	rdx, rax
0x581a:	xor	edi, edi
0x581c:	xor	eax, eax
0x581e:	call	0x2f30


0x5823:	movzx	ebx, byte ptr [rbp + 0x26]
0x5827:	add	rsp, 8
0x582b:	xor	ebx, 1
0x582e:	mov	eax, ebx
0x5830:	pop	rbx
0x5831:	pop	rbp
0x5832:	pop	r12
0x5834:	pop	r13
0x5836:	ret	


0x8045:	lea	rsi, [rip + 0xfd9e]
0x804c:	xor	edi, edi
0x804e:	mov	edx, 5
0x8053:	mov	rbx, rax
0x8056:	call	0x2ad0


0x805b:	mov	esi, dword ptr [r15]
0x805e:	mov	rdx, rax
0x8061:	mov	rcx, rbx
0x8064:	xor	edi, edi
0x8066:	xor	eax, eax
0x8068:	call	0x2f30


0x806d:	jmp	0x6466


0x6a95:	lea	rsi, [rip + 0xf959]
0x6a9c:	mov	edx, 5
0x6aa1:	xor	edi, edi
0x6aa3:	mov	rbx, rax
0x6aa6:	call	0x2ad0


0x6aab:	mov	r9, qword ptr [rbp - 0x310]
0x6ab2:	mov	rdx, rax
0x6ab5:	mov	rcx, rbx
0x6ab8:	xor	edi, edi
0x6aba:	xor	eax, eax
0x6abc:	mov	esi, dword ptr [r9]
0x6abf:	call	0x2f30


0x6ac4:	jmp	0x6466


0x9c3f:	lea	rsi, [rip + 0xdefa]
0x9c46:	mov	r12, rax
0x9c49:	mov	edx, 5
0x9c4e:	xor	edi, edi
0x9c50:	call	0x2ad0


0x9c55:	mov	rcx, r12
0x9c58:	mov	rdx, rax
0x9c5b:	xor	esi, esi
0x9c5d:	xor	edi, edi
0x9c5f:	xor	eax, eax
0x9c61:	call	0x2f30


0x9c66:	mov	qword ptr [rbp - 0x330], 0
0x9c71:	movzx	r8d, byte ptr [rbp - 0x328]
0x9c79:	jmp	0x7d78


0x9096:	lea	rsi, [rip + 0xedf3]
0x909d:	mov	edx, 5
0x90a2:	xor	edi, edi
0x90a4:	mov	r12, rax
0x90a7:	call	0x2ad0


0x90ac:	mov	r8d, dword ptr [rbp - 0x328]
0x90b3:	mov	rdx, rax
0x90b6:	mov	rcx, r12
0x90b9:	xor	edi, edi
0x90bb:	xor	eax, eax
0x90bd:	mov	esi, r8d
0x90c0:	call	0x2f30


0x90c5:	movzx	r9d, byte ptr [rbp - 0x330]
0x90cd:	xor	r8d, r8d
0x90d0:	mov	qword ptr [rbp - 0x330], 0
0x90db:	mov	r14d, r9d
0x90de:	jmp	0x7d78


0x9650:	lea	rsi, [rip + 0xe897]
0x9657:	xor	edi, edi
0x9659:	mov	edx, 5
0x965e:	mov	r12, rax
0x9661:	call	0x2ad0


0x9666:	mov	qword ptr [rbp - 0x338], rax
0x966d:	call	0x2950


0x9672:	mov	rdx, qword ptr [rbp - 0x338]
0x9679:	mov	esi, dword ptr [rax]
0x967b:	xor	edi, edi
0x967d:	xor	eax, eax
0x967f:	mov	rcx, r12
0x9682:	call	0x2f30


0x9687:	cmp	byte ptr [rbx + 0x24], 0
0x968b:	je	0x91e4


0x9691:	jmp	0x8eb2


0x92f0:	lea	rsi, [rip + 0xec0f]
0x92f7:	mov	edx, 5
0x92fc:	xor	edi, edi
0x92fe:	mov	r12, rax
0x9301:	call	0x2ad0


0x9306:	mov	qword ptr [rbp - 0x338], rax
0x930d:	call	0x2950


0x9312:	mov	rdx, qword ptr [rbp - 0x338]
0x9319:	mov	esi, dword ptr [rax]
0x931b:	mov	rcx, r12
0x931e:	xor	edi, edi
0x9320:	xor	eax, eax
0x9322:	call	0x2f30


0x96a7:	lea	rsi, [rip + 0xe7d2]
0x96ae:	mov	edx, 5
0x96b3:	xor	edi, edi
0x96b5:	mov	r12, rax
0x96b8:	call	0x2ad0


0x96bd:	mov	qword ptr [rbp - 0x330], rax
0x96c4:	call	0x2950


0x96c9:	mov	rdx, qword ptr [rbp - 0x330]
0x96d0:	mov	esi, dword ptr [rax]
0x96d2:	mov	rcx, r12
0x96d5:	xor	edi, edi
0x96d7:	xor	eax, eax
0x96d9:	call	0x2f30


0x96de:	xor	r8d, r8d
0x96e1:	mov	qword ptr [rbp - 0x330], 0
0x96ec:	jmp	0x8eb5


0x8f8b:	lea	rsi, [rip + 0xed7e]
0x8f92:	mov	r12, rax
0x8f95:	mov	edx, 5
0x8f9a:	xor	edi, edi
0x8f9c:	call	0x2ad0


0x8fa1:	mov	rdx, r12
0x8fa4:	mov	rsi, rax
0x8fa7:	mov	edi, 1
0x8fac:	xor	eax, eax
0x8fae:	call	0x2ee0


0x9bb7:	lea	rsi, [rip + 0xe22c]
0x9bbe:	mov	edx, 5
0x9bc3:	xor	edi, edi
0x9bc5:	mov	qword ptr [rbp - 0x328], rax
0x9bcc:	call	0x2ad0


0x9bd1:	mov	rcx, qword ptr [rbp - 0x328]
0x9bd8:	mov	rdx, rax
0x9bdb:	mov	esi, dword ptr [r12]
0x9bdf:	jmp	0x7d61


0x7d61:	xor	edi, edi
0x7d63:	xor	eax, eax
0x7d65:	call	0x2f30


0x7d6a:	xor	r8d, r8d
0x7d6d:	mov	qword ptr [rbp - 0x330], 0
0x7d78:	mov	edi, dword ptr [rbp - 0x320]
0x7d7e:	mov	byte ptr [rbp - 0x328], r8b
0x7d85:	call	0x2c30


0x548e:	lea	rsi, [rip + 0x128c0]
0x5495:	mov	edx, 5
0x549a:	xor	edi, edi
0x549c:	mov	rbp, rax
0x549f:	call	0x2ad0


0x54a4:	mov	esi, dword ptr [rbx]
0x54a6:	mov	rdx, rax
0x54a9:	mov	rcx, rbp
0x54ac:	xor	edi, edi
0x54ae:	xor	eax, eax
0x54b0:	call	0x2f30


0x8934:	mov	edx, 5
0x8939:	mov	r13, rax
0x893c:	lea	rsi, [rip + 0xf4de]
0x8943:	jmp	0x70ff


0x7939:	lea	rsi, [rip + 0x104fc]
0x7940:	mov	r12, rax
0x7943:	mov	edx, 5
0x7948:	xor	edi, edi
0x794a:	call	0x2ad0


0x794f:	mov	rdx, r12
0x7952:	mov	rsi, rax
0x7955:	mov	edi, 1
0x795a:	xor	eax, eax
0x795c:	call	0x2ee0


0x82d6:	mov	edx, 5
0x82db:	mov	r13, rax
0x82de:	lea	rsi, [rip + 0xe110]
0x82e5:	jmp	0x70ff


0x577f:	lea	rsi, [rip + 0x125e0]
0x5786:	xor	edi, edi
0x5788:	mov	edx, 5
0x578d:	mov	rbp, rax
0x5790:	call	0x2ad0


0x5795:	mov	rbx, rax
0x5798:	call	0x2950


0x579d:	mov	esi, dword ptr [rax]
0x579f:	mov	rcx, rbp
0x57a2:	mov	rdx, rbx
0x57a5:	xor	edi, edi
0x57a7:	xor	eax, eax
0x57a9:	call	0x2f30


0x57ae:	jmp	0x54b5


0x5732:	lea	rsi, [rip + 0x1263e]
0x5739:	mov	rbx, rax
0x573c:	mov	edx, 5
0x5741:	xor	edi, edi
0x5743:	call	0x2ad0


0x5748:	mov	rcx, rbx
0x574b:	mov	rdx, rax
0x574e:	xor	esi, esi
0x5750:	xor	edi, edi
0x5752:	xor	eax, eax
0x5754:	call	0x2f30


0x5759:	jmp	0x54b5


0x462d:	mov	edx, 5
0x4632:	mov	rbp, rax
0x4635:	lea	rsi, [rip + 0x11db9]
0x463c:	jmp	0x43b5


0x43b5:	xor	edi, edi
0x43b7:	call	0x2ad0


0x43bc:	mov	rbx, rax
0x43bf:	call	0x2950


0x43c4:	mov	esi, dword ptr [rax]
0x43c6:	mov	rcx, rbp
0x43c9:	mov	rdx, rbx
0x43cc:	xor	edi, edi
0x43ce:	xor	eax, eax
0x43d0:	call	0x2f30


0x43d5:	jmp	0x42e6


0x6807:	cmp	byte ptr [rbx + 0x19], 0
0x680b:	mov	r13, rax
0x680e:	mov	edx, 5
0x6813:	jne	0x75b0


0x6819:	lea	rsi, [rip + 0x10fd8]
0x6820:	xor	edi, edi
0x6822:	call	0x2ad0


0x75b0:	lea	rsi, [rip + 0x107f0]
0x75b7:	xor	edi, edi
0x75b9:	call	0x2ad0


0x75be:	mov	rdx, rax
0x75c1:	jmp	0x682a


0x682a:	mov	rcx, r13
0x682d:	xor	esi, esi
0x682f:	xor	edi, edi
0x6831:	xor	eax, eax
0x6833:	call	0x2f30


0x6838:	jmp	0x6466


0x6827:	mov	rdx, rax
0x682a:	mov	rcx, r13
0x682d:	xor	esi, esi
0x682f:	xor	edi, edi
0x6831:	xor	eax, eax
0x6833:	call	0x2f30


0x650f:	lea	rsi, [rip + 0xfedf]
0x6516:	mov	r12, rax
0x6519:	mov	edx, 5
0x651e:	xor	edi, edi
0x6520:	call	0x2ad0


0x6525:	mov	rbx, rax
0x6528:	call	0x2950


0x652d:	mov	esi, dword ptr [rax]
0x652f:	mov	rcx, r12
0x6532:	mov	rdx, rbx
0x6535:	xor	edi, edi
0x6537:	xor	eax, eax
0x6539:	xor	r12d, r12d
0x653c:	call	0x2f30


0x6541:	jmp	0x6466


0x5351:	lea	rsi, [rip + 0x129e7]
0x5358:	mov	rbp, rax
0x535b:	mov	edx, 5
0x5360:	xor	edi, edi
0x5362:	call	0x2ad0


0x5367:	mov	rbx, rax
0x536a:	call	0x2950


0x536f:	mov	esi, dword ptr [rax]
0x5371:	mov	rcx, rbp
0x5374:	mov	rdx, rbx
0x5377:	xor	eax, eax
0x5379:	xor	edi, edi
0x537b:	call	0x2f30


0x5380:	add	rsp, 8
0x5384:	xor	eax, eax
0x5386:	pop	rbx
0x5387:	pop	rbp
0x5388:	pop	r12
0x538a:	pop	r13
0x538c:	ret	


0x539d:	mov	edx, 5
0x53a2:	mov	rbp, rax
0x53a5:	lea	rsi, [rip + 0x12983]
0x53ac:	jmp	0x5360


0x5360:	xor	edi, edi
0x5362:	call	0x2ad0


0x7d43:	lea	rsi, [rip + 0xfdbe]
0x7d4a:	mov	r12, rax
0x7d4d:	mov	edx, 5
0x7d52:	xor	edi, edi
0x7d54:	call	0x2ad0


0x7d59:	mov	rcx, r12
0x7d5c:	mov	rdx, rax
0x7d5f:	xor	esi, esi
0x7d61:	xor	edi, edi
0x7d63:	xor	eax, eax
0x7d65:	call	0x2f30


0x8638:	lea	rsi, [rip + 0xf841]
0x863f:	mov	edx, 5
0x8644:	mov	r12, rax
0x8647:	xor	edi, edi
0x8649:	call	0x2ad0


0x864e:	mov	qword ptr [rbp - 0x328], rax
0x8655:	call	0x2950


0x865a:	mov	rcx, r12
0x865d:	mov	rdx, qword ptr [rbp - 0x328]
0x8664:	mov	esi, dword ptr [rax]
0x8666:	jmp	0x7d61


0x83fc:	mov	edx, 5
0x8401:	mov	r13, rax
0x8404:	lea	rsi, [rip + 0xfa5a]
0x840b:	jmp	0x70ff


0x70f0:	lea	rsi, [rip + 0xf2cd]
0x70f7:	mov	r13, rax
0x70fa:	mov	edx, 5
0x70ff:	xor	edi, edi
0x7101:	call	0x2ad0


0x4655:	lea	rsi, [rip + 0x11e0e]
0x465c:	mov	r12, rax
0x465f:	mov	edx, 5
0x4664:	xor	edi, edi
0x4666:	call	0x2ad0


0x466b:	mov	rbx, rax
0x466e:	call	0x2950


0x4673:	mov	esi, dword ptr [rax]
0x4675:	mov	rdx, rbx
0x4678:	xor	edi, edi
0x467a:	xor	eax, eax
0x467c:	mov	rcx, r12
0x467f:	xor	ebx, ebx
0x4681:	call	0x2f30


0x4686:	cmp	byte ptr [rip + 0x218993], 0
0x468d:	je	0x42e8


0x4693:	jmp	0x442e


0x7491:	mov	edx, 5
0x7496:	mov	r12, rax
0x7499:	lea	rsi, [rip + 0x10b01]
0x74a0:	jmp	0x651e


0x651e:	xor	edi, edi
0x6520:	call	0x2ad0


0x898a:	lea	rsi, [rip + 0xf37f]
0x8991:	mov	r12, rax
0x8994:	mov	edx, 5
0x8999:	xor	edi, edi
0x899b:	call	0x2ad0


0x89a0:	mov	rdx, r12
0x89a3:	mov	rsi, rax
0x89a6:	mov	edi, 1
0x89ab:	xor	eax, eax
0x89ad:	call	0x2ee0


0x89b2:	mov	qword ptr [rbp - 0x350], 0
0x89bd:	movzx	r9d, byte ptr [rbp - 0x358]
0x89c5:	jmp	0x5fae


0x822c:	mov	edx, 5
0x8231:	mov	r13, rax
0x8234:	lea	rsi, [rip + 0xfd12]
0x823b:	jmp	0x70ff


0x62bb:	lea	rsi, [rip + 0x11c2c]
0x62c2:	xor	edi, edi
0x62c4:	mov	edx, 5
0x62c9:	mov	r13, rax
0x62cc:	call	0x2ad0


0x62d1:	mov	r15, rax
0x62d4:	call	0x2950


0x62d9:	mov	esi, dword ptr [rax]
0x62db:	xor	edi, edi
0x62dd:	xor	eax, eax
0x62df:	mov	rcx, r13
0x62e2:	mov	rdx, r15
0x62e5:	call	0x2f30


0x62ea:	cmp	byte ptr [rbx + 0x24], 0
0x62ee:	jne	0x5f30


0x43a6:	lea	rsi, [rip + 0x120a0]
0x43ad:	mov	rbp, rax
0x43b0:	mov	edx, 5
0x43b5:	xor	edi, edi
0x43b7:	call	0x2ad0


0x63db:	lea	rsi, [rip + 0x11b24]
0x63e2:	mov	edx, 5
0x63e7:	xor	edi, edi
0x63e9:	mov	r14, rax
0x63ec:	call	0x2ad0


0x63f1:	mov	r13, rax
0x63f4:	call	0x2950


0x63f9:	mov	esi, dword ptr [rax]
0x63fb:	mov	rcx, r14
0x63fe:	mov	rdx, r13
0x6401:	xor	edi, edi
0x6403:	xor	eax, eax
0x6405:	call	0x2f30


0x46ad:	mov	edx, 5
0x46b2:	mov	r12, rax
0x46b5:	lea	rsi, [rip + 0x11ff4]
0x46bc:	jmp	0x4664


0x4664:	xor	edi, edi
0x4666:	call	0x2ad0


0x51fc:	and	ebp, 0xfff
0x5202:	cmp	byte ptr [r13 + 0x18], 0
0x5207:	mov	r14, rax
0x520a:	mov	rbx, qword ptr [rip + 0x21a3af]
0x5211:	mov	edx, 5
0x5216:	jne	0x5226


0x5218:	test	dword ptr [r13 + 0x14], 0xffff00
0x5220:	je	0x52d0


0x5226:	lea	rsi, [rip + 0x124e3]
0x522d:	xor	edi, edi
0x522f:	call	0x2ad0


0x52d0:	lea	rsi, [rip + 0x12469]
0x52d7:	xor	edi, edi
0x52d9:	call	0x2ad0


0x52de:	mov	rdx, rax
0x52e1:	jmp	0x5237


0x5237:	sub	rsp, 8
0x523b:	add	r12, 1
0x523f:	mov	rdi, qword ptr [rip + 0x217eda]
0x5246:	push	r12
0x5248:	mov	r9, rbp
0x524b:	mov	r8, r14
0x524e:	mov	rcx, rbx
0x5251:	mov	esi, 1
0x5256:	xor	eax, eax
0x5258:	call	0x3050


0x525d:	pop	rax
0x525e:	pop	rdx
0x525f:	jmp	0x52ae


0x52ae:	call	0x126c0


0x52b3:	mov	rcx, qword ptr [rsp + 0x18]
0x52b8:	xor	rcx, qword ptr fs:[0x28]
0x52c1:	jne	0x52e6


0x52c3:	add	rsp, 0x20
0x52c7:	pop	rbx
0x52c8:	pop	rbp
0x52c9:	pop	r12
0x52cb:	pop	r13
0x52cd:	pop	r14
0x52cf:	ret	


0x52e6:	call	0x2b30


0x5234:	mov	rdx, rax
0x5237:	sub	rsp, 8
0x523b:	add	r12, 1
0x523f:	mov	rdi, qword ptr [rip + 0x217eda]
0x5246:	push	r12
0x5248:	mov	r9, rbp
0x524b:	mov	r8, r14
0x524e:	mov	rcx, rbx
0x5251:	mov	esi, 1
0x5256:	xor	eax, eax
0x5258:	call	0x3050


0x6891:	test	al, al
0x6893:	movzx	r8d, byte ptr [rbp - 0x350]
0x689b:	movzx	r9d, byte ptr [rbp - 0x358]
0x68a3:	je	0x6460


0x6e9c:	test	al, al
0x6e9e:	jne	0x82b0


0x82b0:	movzx	r8d, byte ptr [rbp - 0x350]
0x82b8:	movzx	r9d, byte ptr [rbp - 0x358]
0x82c0:	jmp	0x68b0


0x5275:	lea	rsi, [rip + 0x12aa0]
0x527c:	mov	rbx, qword ptr [rip + 0x21a33d]
0x5283:	mov	edx, 5
0x5288:	xor	edi, edi
0x528a:	mov	rbp, rax
0x528d:	call	0x2ad0


0x5292:	mov	rdi, qword ptr [rip + 0x217e87]
0x5299:	mov	rdx, rax
0x529c:	mov	r8, rbp
0x529f:	mov	rcx, rbx
0x52a2:	mov	esi, 1
0x52a7:	xor	eax, eax
0x52a9:	call	0x3050


0x50fd:	lea	rsi, [rip + 0x12c0c]
0x5104:	mov	rbp, rax
0x5107:	mov	edx, 5
0x510c:	xor	edi, edi
0x510e:	call	0x2ad0


0x5113:	mov	rdx, rbp
0x5116:	mov	rsi, rax
0x5119:	mov	edi, 1
0x511e:	xor	eax, eax
0x5120:	call	0x2ee0


0x5125:	add	rsp, 8
0x5129:	mov	eax, ebx
0x512b:	pop	rbx
0x512c:	pop	rbp
0x512d:	pop	r12
0x512f:	pop	r13
0x5131:	ret	


0x3fa3:	lea	rsi, [rip + 0x1241a]
0x3faa:	mov	edx, 5
0x3faf:	xor	edi, edi
0x3fb1:	mov	r12, rax
0x3fb4:	call	0x2ad0


0x3fb9:	mov	rbx, rax
0x3fbc:	call	0x2950


0x3fc1:	mov	esi, dword ptr [rax]
0x3fc3:	mov	rcx, r12
0x3fc6:	mov	rdx, rbx
0x3fc9:	xor	edi, edi
0x3fcb:	xor	eax, eax
0x3fcd:	call	0x2f30


0x3fd2:	mov	esi, 1
0x3fd7:	mov	rdi, rbp
0x3fda:	call	0x102f0


0x7559:	lea	rsi, [rip + 0x102c0]
0x7560:	mov	rbx, rax
0x7563:	xor	edi, edi
0x7565:	mov	edx, 5
0x756a:	call	0x2ad0


0x756f:	mov	rcx, rbx
0x7572:	mov	rdx, rax
0x7575:	xor	esi, esi
0x7577:	xor	edi, edi
0x7579:	xor	eax, eax
0x757b:	call	0x2f30


0x7580:	jmp	0x6466


0x67b9:	lea	rsi, [rip + 0x113c8]
0x67c0:	mov	r12, rax
0x67c3:	mov	edx, 5
0x67c8:	xor	edi, edi
0x67ca:	call	0x2ad0


0x7513:	mov	edx, 5
0x7518:	mov	r12, rax
0x751b:	lea	rsi, [rip + 0x10a66]
0x7522:	jmp	0x67c8


0x6f23:	lea	rsi, [rip + 0x10996]
0x6f2a:	mov	rbx, rax
0x6f2d:	mov	edx, 5
0x6f32:	xor	edi, edi
0x6f34:	call	0x2ad0


0x6f39:	mov	rcx, rbx
0x6f3c:	mov	rdx, rax
0x6f3f:	xor	esi, esi
0x6f41:	xor	edi, edi
0x6f43:	xor	eax, eax
0x6f45:	call	0x2f30


0x6f4a:	jmp	0x6466


0x419e:	lea	rsi, [rip + 0x1223a]
0x41a5:	mov	rbx, rax
0x41a8:	mov	edx, 5
0x41ad:	xor	edi, edi
0x41af:	call	0x2ad0


0x41b4:	mov	rdx, rbx
0x41b7:	mov	rdi, qword ptr [rip + 0x218f2a]
0x41be:	mov	rsi, rax
0x41c1:	pop	rbx
0x41c2:	xor	eax, eax
0x41c4:	jmp	0x4d70


0x4244:	mov	eax, dword ptr [rsp + 0xc]
0x4248:	add	rsp, 0x10
0x424c:	pop	rbx
0x424d:	pop	rbp
0x424e:	pop	r12
0x4250:	ret	


0xeedd:	add	rsp, 0x20
0xeee1:	mov	eax, dword ptr [rsp + 0x18]
0xeee5:	mov	dword ptr [r13], eax
0xeee9:	add	rsp, 0x28
0xeeed:	mov	rax, r12
0xeef0:	pop	rbx
0xeef1:	pop	rbp
0xeef2:	pop	r12
0xeef4:	pop	r13
0xeef6:	pop	r14
0xeef8:	pop	r15
0xeefa:	ret	


0xf12c:	lea	rsi, [rax + 1]
0xf130:	mov	qword ptr [rsp + 0x48], rax
0xf135:	add	rsp, 0x20
0xf139:	mov	rdi, rsi
0xf13c:	mov	qword ptr [rsp + 0x18], rsi
0xf141:	call	0x12010


0xf146:	mov	qword ptr [rsp + 0x10], rax
0xf14b:	sub	rsp, 8
0xf14f:	push	qword ptr [rbx + 0x30]
0xf152:	push	qword ptr [rbx + 0x28]
0xf155:	mov	r10, qword ptr [rsp + 0x38]
0xf15a:	mov	r9d, ebp
0xf15d:	mov	r8d, dword ptr [rbx]
0xf160:	mov	rcx, r15
0xf163:	mov	rdx, r14
0xf166:	mov	rdi, rax
0xf169:	push	r10
0xf16b:	mov	rsi, qword ptr [rsp + 0x38]
0xf170:	call	0xdb40


0xf175:	mov	eax, dword ptr [rsp + 0x2c]
0xf179:	add	rsp, 0x20
0xf17d:	test	r12, r12
0xf180:	mov	dword ptr [r13], eax
0xf184:	je	0xf18f


0xf18f:	mov	rax, qword ptr [rsp + 0x10]
0xf194:	add	rsp, 0x38
0xf198:	pop	rbx
0xf199:	pop	rbp
0xf19a:	pop	r12
0xf19c:	pop	r13
0xf19e:	pop	r14
0xf1a0:	pop	r15
0xf1a2:	ret	


0xf186:	mov	r11, qword ptr [rsp + 0x28]
0xf18b:	mov	qword ptr [r12], r11
0xf18f:	mov	rax, qword ptr [rsp + 0x10]
0xf194:	add	rsp, 0x38
0xf198:	pop	rbx
0xf199:	pop	rbp
0xf19a:	pop	r12
0xf19c:	pop	r13
0xf19e:	pop	r14
0xf1a0:	pop	r15
0xf1a2:	ret	


0xf0a1:	mov	dword ptr [rbp], r12d
0xf0a5:	add	rsp, 0x38
0xf0a9:	pop	rbx
0xf0aa:	pop	rbp
0xf0ab:	pop	r12
0xf0ad:	pop	r13
0xf0af:	pop	r14
0xf0b1:	pop	r15
0xf0b3:	ret	


0x6a03:	test	rax, rax
0x6a06:	mov	r12, rax
0x6a09:	movzx	r9d, byte ptr [rbp - 0x350]
0x6a11:	je	0x8331


0x8331:	mov	byte ptr [rbp - 0x350], r9b
0x8338:	call	0x2950


0x6a17:	mov	rdi, rax
0x6a1a:	mov	byte ptr [rbp - 0x358], r9b
0x6a21:	mov	r14d, 1
0x6a27:	call	0x2af0


0x6a2c:	lea	rdx, [rax + 1]
0x6a30:	add	rax, 0x1f
0x6a34:	mov	rsi, r12
0x6a37:	and	rax, 0xfffffffffffffff0
0x6a3b:	mov	r15d, 0x11
0x6a41:	sub	rsp, rax
0x6a44:	lea	rdi, [rsp + 0xf]
0x6a49:	and	rdi, 0xfffffffffffffff0
0x6a4d:	call	0x2d80


0x6a52:	mov	rdi, r12
0x6a55:	mov	qword ptr [rbp - 0x350], rax
0x6a5c:	call	0x30d0


0x6a61:	movzx	r9d, byte ptr [rbp - 0x358]
0x6a69:	jmp	0x5fae


0x833d:	cmp	dword ptr [rax], 2
0x8340:	mov	r12, rax
0x8343:	movzx	r9d, byte ptr [rbp - 0x350]
0x834b:	je	0x87b1


0x87b1:	mov	qword ptr [rbp - 0x350], 0
0x87bc:	mov	r14d, 1
0x87c2:	mov	r15d, 0x11
0x87c8:	jmp	0x5fae


0x8351:	mov	rsi, qword ptr [rbp - 0x308]
0x8358:	mov	edi, 4
0x835d:	call	0xf3f0


0x8362:	lea	rsi, [rip + 0xfa70]
0x8369:	mov	edx, 5
0x836e:	xor	edi, edi
0x8370:	mov	rbx, rax
0x8373:	call	0x2ad0


0x8378:	mov	esi, dword ptr [r12]
0x837c:	mov	rdx, rax
0x837f:	mov	rcx, rbx
0x8382:	xor	edi, edi
0x8384:	xor	eax, eax
0x8386:	xor	r12d, r12d
0x8389:	call	0x2f30


0x838e:	jmp	0x6466


0x6df2:	jmp	0x5f30


0x7473:	jmp	0x6bc8


0x8726:	mov	rax, qword ptr [rbp - 0x338]
0x872d:	mov	byte ptr [rax], 1
0x8730:	jmp	0x7918


0x5ef1:	test	rax, rax
0x5ef4:	je	0x6460


0x5efa:	movzx	ecx, byte ptr [rbx + 0x2e]
0x5efe:	mov	r8d, dword ptr [rbp - 0x328]
0x5f05:	mov	edx, 1
0x5f0a:	mov	rsi, qword ptr [rbp - 0x308]
0x5f11:	mov	rdi, rax
0x5f14:	call	0x5090


0x5f19:	test	al, al
0x5f1b:	jne	0x6460


0x5f21:	cmp	byte ptr [rbx + 0x25], 0
0x5f25:	jne	0x6d30


0x7142:	mov	qword ptr [rbp - 0x358], rax
0x7149:	cmp	qword ptr [rbp - 0x358], 0
0x7151:	je	0x71a0


0x71a0:	movzx	eax, byte ptr [rbx + 0x18]
0x71a4:	jmp	0x6d6b


0x7153:	mov	eax, dword ptr [rbp - 0x314]
0x7159:	and	eax, 0xf000
0x715e:	cmp	eax, 0x4000
0x7163:	je	0x6cab


0x6cab:	mov	rsi, qword ptr [rbp - 0x358]
0x6cb2:	mov	rdi, qword ptr [rbp - 0x310]
0x6cb9:	call	0xfbe0


0x7169:	movzx	ecx, byte ptr [rbx + 0x2e]
0x716d:	mov	r8d, dword ptr [rbp - 0x328]
0x7174:	mov	edx, 1
0x7179:	mov	rsi, qword ptr [rbp - 0x308]
0x7180:	mov	rdi, qword ptr [rbp - 0x358]
0x7187:	call	0x5090


0x718c:	test	al, al
0x718e:	je	0x6d26


0x6d26:	cmp	byte ptr [rbx + 0x25], 0
0x6d2a:	je	0x6bc8


0x7194:	jmp	0x6460


0x6cbe:	test	al, al
0x6cc0:	je	0x7c00


0x7c00:	mov	rsi, qword ptr [rbp - 0x358]
0x7c07:	mov	rdi, qword ptr [rbp - 0x308]
0x7c0e:	call	0xfbe0


0x6cc6:	mov	rdx, qword ptr [rip + 0x2188bb]
0x6ccd:	mov	esi, 4
0x6cd2:	mov	edi, 1
0x6cd7:	call	0xf2d0


0x6cdc:	mov	rdx, qword ptr [rip + 0x2188ad]
0x6ce3:	mov	esi, 4
0x6ce8:	xor	edi, edi
0x6cea:	mov	r13, rax
0x6ced:	call	0xf2d0


0x6cf2:	lea	rsi, [rip + 0x10cdf]
0x6cf9:	mov	r12, rax
0x6cfc:	mov	edx, 5
0x6d01:	xor	edi, edi
0x6d03:	call	0x2ad0


0x6d08:	mov	r8, r13
0x6d0b:	mov	rdx, rax
0x6d0e:	mov	rcx, r12
0x6d11:	xor	eax, eax
0x6d13:	xor	esi, esi
0x6d15:	xor	edi, edi
0x6d17:	call	0x2f30


0x6d1c:	mov	rax, qword ptr [rbp - 0x340]
0x6d23:	mov	byte ptr [rax], 1
0x6d26:	cmp	byte ptr [rbx + 0x25], 0
0x6d2a:	je	0x6bc8


0x7c13:	test	al, al
0x7c15:	jne	0x82ea


0x7c1b:	mov	eax, dword ptr [rbx + 4]
0x7c1e:	cmp	eax, 4
0x7c21:	je	0x71a0


0x82ea:	mov	rsi, qword ptr [rip + 0x21729f]
0x82f1:	mov	edi, 4
0x82f6:	call	0xf3f0


0x7c27:	cmp	eax, 3
0x7c2a:	jne	0x7c35


0x7c2c:	test	r13b, r13b
0x7c2f:	jne	0x71a0


0x7c35:	mov	rdx, qword ptr [rbp - 0x358]
0x7c3c:	mov	esi, 4
0x7c41:	mov	edi, 1
0x7c46:	call	0xf2d0


0x7c4b:	mov	rdx, qword ptr [rbp - 0x308]
0x7c52:	xor	edi, edi
0x7c54:	mov	esi, 4
0x7c59:	mov	r13, rax
0x7c5c:	call	0xf2d0


0x7c61:	lea	rsi, [rip + 0xfdd8]
0x7c68:	mov	r12, rax
0x7c6b:	xor	edi, edi
0x7c6d:	mov	edx, 5
0x7c72:	call	0x2ad0


0x7c77:	mov	r8, r13
0x7c7a:	mov	rdx, rax
0x7c7d:	mov	rcx, r12
0x7c80:	xor	esi, esi
0x7c82:	xor	edi, edi
0x7c84:	xor	eax, eax
0x7c86:	call	0x2f30


0x7c8b:	jmp	0x6d26


0x82fb:	lea	rsi, [rip + 0xf706]
0x8302:	xor	edi, edi
0x8304:	mov	r12, rax
0x8307:	mov	edx, 5
0x830c:	call	0x2ad0


0x8311:	xor	esi, esi
0x8313:	mov	rdx, rax
0x8316:	xor	edi, edi
0x8318:	xor	eax, eax
0x831a:	mov	rcx, r12
0x831d:	call	0x2f30


0x8322:	cmp	byte ptr [rbx + 0x18], 0
0x8326:	jne	0x6ea4


0x832c:	jmp	0x6460


0x6c96:	mov	qword ptr [rbp - 0x358], rax
0x6c9d:	cmp	qword ptr [rbp - 0x358], 0
0x6ca5:	je	0x71a0


0x7538:	mov	qword ptr [rbp - 0x358], rax
0x753f:	jmp	0x6c9d


0x6c9d:	cmp	qword ptr [rbp - 0x358], 0
0x6ca5:	je	0x71a0


0x759b:	mov	qword ptr [rbp - 0x358], rax
0x75a2:	jmp	0x7149


0x7149:	cmp	qword ptr [rbp - 0x358], 0
0x7151:	je	0x71a0


0x3fdf:	mov	rdi, rbp
0x3fe2:	call	0x10450


0x4064:	mov	r13d, eax
0x4067:	call	0x2950


0x406c:	mov	rdi, rbp
0x406f:	mov	r12d, dword ptr [rax]
0x4072:	call	0x10450


0x1062e:	cmp	r15d, eax
0x10631:	cmovl	r15d, eax
0x10635:	add	r14, 8
0x10639:	cmp	r14, qword ptr [rsp + 8]
0x1063e:	je	0x1055d


0xb54b:	test	rax, rax
0xb54e:	je	0xb582


0xb582:	call	0x12260


0xb550:	cmp	rbx, rax
0xb553:	je	0xb570


0xb570:	add	rsp, 8
0xb574:	pop	rbx
0xb575:	pop	rbp
0xb576:	pop	r12
0xb578:	pop	r13
0xb57a:	ret	


0xb555:	add	rsp, 8
0xb559:	mov	rdi, rbx
0xb55c:	pop	rbx
0xb55d:	pop	rbp
0xb55e:	pop	r12
0xb560:	pop	r13
0xb562:	jmp	0xcd40


0xa002:	test	rax, rax
0xa005:	je	0xa034


0xa034:	call	0x12260


0xa007:	cmp	rbx, rax
0xa00a:	mov	rbp, rax
0xa00d:	je	0xa030


0xa030:	xor	eax, eax
0xa032:	jmp	0xa024


0xa00f:	mov	rdi, qword ptr [rbx + 0x10]
0xa013:	call	0x30d0


0xa024:	add	rsp, 8
0xa028:	pop	rbx
0xa029:	pop	rbp
0xa02a:	pop	r12
0xa02c:	pop	r13
0xa02e:	ret	


0xa018:	mov	rdi, rbx
0xa01b:	call	0x30d0


0xa020:	mov	rax, qword ptr [rbp + 0x10]
0xa024:	add	rsp, 8
0xa028:	pop	rbx
0xa029:	pop	rbp
0xa02a:	pop	r12
0xa02c:	pop	r13
0xa02e:	ret	


0x10a67:	test	rax, rax
0x10a6a:	mov	qword ptr [rsp + 0x10], rax
0x10a6f:	mov	r9d, dword ptr [rsp + 0x18]
0x10a74:	mov	r10d, dword ptr [rsp + 0x20]
0x10a79:	mov	r11, qword ptr [rsp + 0x28]
0x10a7e:	je	0x10b78


0x10b78:	mov	rdx, qword ptr [rip + 0x20eba1]
0x10b7f:	test	rdx, rdx
0x10b82:	je	0x11022


0x10a84:	cmp	qword ptr [rip + 0x20ec8d], rax
0x10a8b:	je	0x11030


0x11030:	mov	qword ptr [rip + 0x20e6dd], 0
0x1103b:	jmp	0x10a91


0x10a91:	mov	rax, qword ptr [rsp + 0x10]
0x10a96:	cmp	byte ptr [rax + 0xc], 0
0x10a9a:	mov	esi, dword ptr [rax + 8]
0x10a9d:	mov	dword ptr [rsp + 0x18], esi
0x10aa1:	je	0x10bfa


0x10bfa:	mov	rcx, qword ptr [rbp + 0x50]
0x10bfe:	mov	eax, 0x66666667
0x10c03:	mov	rsi, qword ptr [rbp + 0x70]
0x10c07:	imul	ecx
0x10c09:	mov	eax, ecx
0x10c0b:	mov	qword ptr [rsp + 0x28], rcx
0x10c10:	sar	eax, 0x1f
0x10c13:	sar	edx, 2
0x10c16:	sub	edx, eax
0x10c18:	lea	eax, [rdx + rdx*4]
0x10c1b:	mov	dword ptr [rsp + 0x20], edx
0x10c1f:	add	eax, eax
0x10c21:	sub	ecx, eax
0x10c23:	mov	eax, 0x66666667
0x10c28:	imul	esi
0x10c2a:	mov	eax, esi
0x10c2c:	sar	eax, 0x1f
0x10c2f:	sar	edx, 2
0x10c32:	mov	edi, edx
0x10c34:	sub	edi, eax
0x10c36:	lea	eax, [rdi + rdi*4]
0x10c39:	add	eax, eax
0x10c3b:	sub	esi, eax
0x10c3d:	mov	eax, 0x66666667
0x10c42:	imul	r15d
0x10c45:	mov	eax, r15d
0x10c48:	or	ecx, esi
0x10c4a:	sar	eax, 0x1f
0x10c4d:	mov	esi, r15d
0x10c50:	sar	edx, 2
0x10c53:	mov	r8d, edx
0x10c56:	sub	r8d, eax
0x10c59:	lea	eax, [r8 + r8*4]
0x10c5d:	add	eax, eax
0x10c5f:	sub	esi, eax
0x10c61:	or	ecx, esi
0x10c63:	jne	0x10fb8


0x10aa7:	xor	eax, eax
0x10aa9:	cmp	esi, 0x77359400
0x10aaf:	sete	al
0x10ab2:	not	eax
0x10ab4:	cdqe	
0x10ab6:	and	r12, rax
0x10ab9:	mov	eax, r9d
0x10abc:	mov	r9d, r13d
0x10abf:	cdq	
0x10ac0:	idiv	esi
0x10ac2:	sub	r9d, edx
0x10ac5:	nop	dword ptr [rax]
0x10ac8:	cmp	r12, r14
0x10acb:	jg	0x10b18


0x4077:	xor	eax, eax
0x4079:	cmp	r13d, 0
0x407d:	jg	0x3fe9


0x4083:	mov	eax, 1
0x4088:	jge	0x3fe9


0x3fe9:	mov	rbx, qword ptr [rsp + 0x18]
0x3fee:	xor	rbx, qword ptr fs:[0x28]
0x3ff7:	jne	0x40ca


0x408e:	mov	rsi, rbx
0x4091:	mov	edi, 4
0x4096:	call	0xf3f0


0x3ffd:	add	rsp, 0x28
0x4001:	pop	rbx
0x4002:	pop	rbp
0x4003:	pop	r12
0x4005:	pop	r13
0x4007:	ret	


0x40ca:	call	0x2b30


0x409b:	lea	rsi, [rip + 0x12322]
0x40a2:	mov	rbx, rax
0x40a5:	mov	edx, 5
0x40aa:	xor	edi, edi
0x40ac:	call	0x2ad0


0x40b1:	mov	rcx, rbx
0x40b4:	mov	rdx, rax
0x40b7:	mov	esi, r12d
0x40ba:	xor	eax, eax
0x40bc:	xor	edi, edi
0x40be:	call	0x2f30


0x40c3:	xor	eax, eax
0x40c5:	jmp	0x3fe9


0x3fe7:	xor	eax, eax
0x3fe9:	mov	rbx, qword ptr [rsp + 0x18]
0x3fee:	xor	rbx, qword ptr fs:[0x28]
0x3ff7:	jne	0x40ca


0x10565:	cmp	dword ptr [rsp + 0x18], r13d
0x1056a:	jle	0x105ab


0x105ab:	mov	rcx, qword ptr [rsp + 0x28]
0x105b0:	xor	rcx, qword ptr fs:[0x28]
0x105b9:	mov	eax, r15d
0x105bc:	jne	0x10657


0x1056c:	mov	ecx, dword ptr [rsp + 0x1c]
0x10570:	mov	rdi, qword ptr [rsp + 0x10]
0x10575:	movsxd	rax, r13d
0x10578:	sub	ecx, r13d
0x1057b:	lea	r14, [rdi + rax*8]
0x1057f:	mov	r13, rcx
0x10582:	add	r13, rax
0x10585:	lea	r13, [rdi + r13*8 + 8]
0x1058a:	nop	word ptr [rax + rax]
0x10590:	mov	rdi, qword ptr [r14]
0x10593:	mov	rdx, r12
0x10596:	mov	rsi, rbx
0x10599:	call	rbp


0x105c2:	add	rsp, 0x38
0x105c6:	pop	rbx
0x105c7:	pop	rbp
0x105c8:	pop	r12
0x105ca:	pop	r13
0x105cc:	pop	r14
0x105ce:	pop	r15
0x105d0:	ret	


0x10657:	call	0x2b30


0x4033:	mov	rdx, qword ptr [rsp + 8]
0x4038:	mov	rsi, rbp
0x403b:	mov	rdi, rbx
0x403e:	mov	rcx, rdx
0x4041:	lea	rdx, [rip + 0x1a8]
0x4048:	call	0xcd60


0x404d:	cmp	rax, -1
0x4051:	je	0x40cf


0x40cf:	mov	rsi, rbx
0x40d2:	mov	edi, 4
0x40d7:	call	0xf3f0


0x4053:	mov	eax, 1
0x4058:	jmp	0x3fe9


0x40dc:	lea	rsi, [rip + 0x122e1]
0x40e3:	mov	edx, 5
0x40e8:	xor	edi, edi
0x40ea:	mov	rbp, rax
0x40ed:	call	0x2ad0


0x40f2:	mov	rbx, rax
0x40f5:	call	0x2950


0x40fa:	mov	esi, dword ptr [rax]
0x40fc:	mov	rcx, rbp
0x40ff:	xor	eax, eax
0x4101:	mov	rdx, rbx
0x4104:	xor	edi, edi
0x4106:	call	0x2f30


0x410b:	xor	eax, eax
0x410d:	jmp	0x3fe9


0x3b7c:	lea	rsi, [rip + 0x12a60]
0x3b83:	mov	rbx, rax
0x3b86:	mov	edx, 5
0x3b8b:	xor	edi, edi
0x3b8d:	call	0x2ad0


0x3b92:	mov	rcx, rbx
0x3b95:	mov	rdx, rax
0x3b98:	xor	esi, esi
0x3b9a:	mov	edi, 1
0x3b9f:	xor	eax, eax
0x3ba1:	call	0x2f30


0x3b17:	lea	rsi, [rip + 0x12ad5]
0x3b1e:	mov	rbx, rax
0x3b21:	mov	edx, 5
0x3b26:	xor	edi, edi
0x3b28:	call	0x2ad0


0x3b2d:	mov	rcx, rbx
0x3b30:	mov	rdx, rax
0x3b33:	xor	esi, esi
0x3b35:	mov	edi, 1
0x3b3a:	xor	eax, eax
0x3b3c:	call	0x2f30


0x38de:	lea	rsi, [rip + 0x13beb]
0x38e5:	mov	edx, 5
0x38ea:	xor	edi, edi
0x38ec:	mov	rbp, rax
0x38ef:	call	0x2ad0


0x38f4:	mov	esi, dword ptr [rbx]
0x38f6:	mov	rdx, rax
0x38f9:	mov	rcx, rbp
0x38fc:	mov	edi, 1
0x3901:	xor	eax, eax
0x3903:	call	0x2f30


0x3db3:	lea	rsi, [rip + 0x12819]
0x3dba:	mov	rbx, rax
0x3dbd:	mov	edx, 5
0x3dc2:	xor	edi, edi
0x3dc4:	call	0x2ad0


0x3dc9:	mov	rcx, rbx
0x3dcc:	mov	rdx, rax
0x3dcf:	xor	esi, esi
0x3dd1:	mov	edi, 1
0x3dd6:	xor	eax, eax
0x3dd8:	call	0x2f30


0x12c8e:	mov	rdi, qword ptr [rip + 0x20a48b]
0x12c95:	lea	rdx, [rip + 0x61c2]
0x12c9c:	mov	rcx, rax
0x12c9f:	mov	esi, 1
0x12ca4:	xor	eax, eax
0x12ca6:	call	0x3050


0x12cab:	mov	r15, qword ptr [r14 + rbx*8]
0x12caf:	test	r15, r15
0x12cb2:	jne	0x12c68


0x12c3f:	mov	rdi, qword ptr [rip + 0x20a4da]
0x12c46:	lea	rdx, [rip + 0x6209]
0x12c4d:	mov	rcx, rax
0x12c50:	mov	esi, 1
0x12c55:	xor	eax, eax
0x12c57:	add	rbp, r12
0x12c5a:	call	0x3050


0x12c5f:	mov	r15, qword ptr [r14 + rbx*8]
0x12c63:	test	r15, r15
0x12c66:	je	0x12cb8


0xa7ea:	lea	rsi, [rip + 0xd630]
0xa7f1:	mov	edx, 5
0xa7f6:	xor	edi, edi
0xa7f8:	mov	r12, rax
0xa7fb:	call	0x2ad0


0xa800:	mov	rbp, rax
0xa803:	call	0x2950


0xa808:	mov	esi, dword ptr [rax]
0xa80a:	mov	rcx, r12
0xa80d:	mov	rdx, rbp
0xa810:	xor	edi, edi
0xa812:	xor	eax, eax
0xa814:	call	0x2f30


0xd1df:	cmp	byte ptr [rsp + 0x1f], 0
0xd1e4:	mov	rbx, rax
0xd1e7:	lea	rsi, [rip + 0xb032]
0xd1ee:	lea	rax, [rip + 0x94bb]
0xd1f5:	mov	edx, 5
0xd1fa:	cmovne	rsi, rax
0xd1fe:	xor	edi, edi
0xd200:	call	0x2ad0


0xd205:	mov	esi, dword ptr [r12]
0xd209:	mov	rdx, rax
0xd20c:	mov	rcx, rbx
0xd20f:	xor	edi, edi
0xd211:	xor	eax, eax
0xd213:	xor	r12d, r12d
0xd216:	call	0x2f30


0xd21b:	jmp	0xd09d


0xd01f:	lea	rsi, [rip + 0x93cf]
0xd026:	mov	edx, 5
0xd02b:	xor	edi, edi
0xd02d:	mov	rbx, rax
0xd030:	call	0x2ad0


0xd035:	mov	esi, dword ptr [r15]
0xd038:	mov	rdx, rax
0xd03b:	mov	rcx, rbx
0xd03e:	xor	edi, edi
0xd040:	xor	eax, eax
0xd042:	call	0x2f30


0xd047:	jmp	0xd09d


0xa763:	lea	rsi, [rip + 0xd79c]
0xa76a:	mov	edx, 5
0xa76f:	xor	edi, edi
0xa771:	mov	r12, rax
0xa774:	call	0x2ad0


0xa779:	mov	rbp, rax
0xa77c:	call	0x2950


0xa781:	mov	esi, dword ptr [rax]
0xa783:	mov	rcx, r12
0xa786:	mov	rdx, rbp
0xa789:	xor	edi, edi
0xa78b:	xor	eax, eax
0xa78d:	call	0x2f30


0xa7a8:	mov	rbp, rax
0xa7ab:	call	0x2950


0xa7b0:	mov	esi, dword ptr [rax]
0xa7b2:	lea	rdx, [rip + 0xe6a7]
0xa7b9:	mov	rcx, rbp
0xa7bc:	xor	eax, eax
0xa7be:	xor	edi, edi
0xa7c0:	call	0x2f30


0xa7c5:	mov	eax, ebx
0xa7c7:	pop	rbx
0xa7c8:	pop	rbp
0xa7c9:	pop	r12
0xa7cb:	ret	


0xd076:	lea	rsi, [rip + 0x9347]
0xd07d:	mov	rbx, rax
0xd080:	mov	edx, 5
0xd085:	xor	edi, edi
0xd087:	call	0x2ad0


0xd08c:	mov	rcx, rbx
0xd08f:	mov	rdx, rax
0xd092:	mov	esi, ebp
0xd094:	xor	edi, edi
0xd096:	xor	eax, eax
0xd098:	call	0x2f30


0x134e0:	mov	rbp, rax
0x134e3:	call	0x2950


0x134e8:	cmp	dword ptr [rax], 0
0x134eb:	mov	rbx, rax
0x134ee:	mov	edx, 5
0x134f3:	je	0x1351d


0x1351d:	lea	rsi, [rip + 0x594d]
0x13524:	xor	edi, edi
0x13526:	call	0x2ad0


0x134f5:	lea	rsi, [rip + 0x5985]
0x134fc:	xor	edi, edi
0x134fe:	call	0x2ad0


0x13503:	mov	edi, dword ptr [rip + 0x209b3f]
0x13509:	mov	esi, dword ptr [rbx]
0x1350b:	mov	rdx, rax
0x1350e:	mov	rcx, rbp
0x13511:	xor	eax, eax
0x13513:	call	0x2f30


0x1352b:	jmp	0x13503


0x9f26:	test	rax, rax
0x9f29:	je	0x9f3f


0x9f3f:	mov	rax, qword ptr [rsp + 0x18]
0x9f44:	xor	rax, qword ptr fs:[0x28]
0x9f4d:	jne	0x9f55


0x9f2b:	mov	rdi, qword ptr [rax + 0x10]
0x9f2f:	mov	rbx, rax
0x9f32:	call	0x30d0


0x9f4f:	add	rsp, 0x20
0x9f53:	pop	rbx
0x9f54:	ret	


0x9f55:	call	0x2b30


0x9f37:	mov	rdi, rbx
0x9f3a:	call	0x30d0


0x10bb5:	test	rax, rax
0x10bb8:	mov	qword ptr [rsp + 0x10], rax
0x10bbd:	mov	rcx, qword ptr [rsp + 0x18]
0x10bc2:	mov	r9d, dword ptr [rsp + 0x20]
0x10bc7:	mov	r10d, dword ptr [rsp + 0x28]
0x10bcc:	mov	r11, qword ptr [rsp + 0x30]
0x10bd1:	jne	0x10a91


0xb5c6:	test	rax, rax
0xb5c9:	setne	al
0xb5cc:	mov	rcx, qword ptr [rsp + 0x18]
0xb5d1:	xor	rcx, qword ptr fs:[0x28]
0xb5da:	jne	0xb5e1


0x9f8c:	test	rax, rax
0x9f8f:	je	0x9fb0


0x9fb0:	xor	eax, eax
0x9fb2:	jmp	0x9f95


0x9f91:	mov	rax, qword ptr [rax + 0x10]
0x9f95:	mov	rdx, qword ptr [rsp + 0x18]
0x9f9a:	xor	rdx, qword ptr fs:[0x28]
0x9fa3:	jne	0x9fb4


0x9f95:	mov	rdx, qword ptr [rsp + 0x18]
0x9f9a:	xor	rdx, qword ptr fs:[0x28]
0x9fa3:	jne	0x9fb4


0x9fa5:	add	rsp, 0x28
0x9fa9:	ret	


0x9fb4:	call	0x2b30


0x1059b:	cmp	r15d, eax
0x1059e:	cmovl	r15d, eax
0x105a2:	add	r14, 8
0x105a6:	cmp	r14, r13
0x105a9:	jne	0x10590


0x10590:	mov	rdi, qword ptr [r14]
0x10593:	mov	rdx, r12
0x10596:	mov	rsi, rbx
0x10599:	call	rbp


0x12d64:	mov	rax, -1
0x12d6b:	jmp	0x12d36


0x138d2:	mov	rcx, qword ptr [r12]
0x138d6:	mov	rdx, rbp
0x138d9:	mov	rdi, rbx
0x138dc:	mov	esi, 1
0x138e1:	call	0x2a40


0x107f7:	test	eax, eax
0x107f9:	mov	edx, eax
0x107fb:	jns	0x10829


0x107fd:	mov	rax, qword ptr [rsp + 8]
0x10802:	mov	ecx, dword ptr [rax]
0x10804:	cmp	ecx, 0x11
0x10807:	jne	0x10864


0x10829:	mov	rcx, qword ptr [rsp + 8]
0x1082e:	mov	eax, dword ptr [rsp + 0x2c]
0x10832:	mov	dword ptr [rcx], eax
0x10834:	mov	ecx, eax
0x10836:	mov	rdi, rbp
0x10839:	mov	dword ptr [rsp + 0x10], edx
0x1083d:	mov	dword ptr [rsp], ecx
0x10840:	call	0x13470


0x10809:	sub	r13d, 1
0x1080d:	jne	0x107b8


0x10864:	mov	edx, 0xffffffff
0x10869:	jmp	0x10836


0x1080f:	mov	rdi, rbp
0x10812:	call	0x13470


0x107b8:	test	r14, r14
0x107bb:	mov	r15, qword ptr [rsp + 0x10]
0x107c0:	je	0x107e7


0x10836:	mov	rdi, rbp
0x10839:	mov	dword ptr [rsp + 0x10], edx
0x1083d:	mov	dword ptr [rsp], ecx
0x10840:	call	0x13470


0x10845:	mov	rax, qword ptr [rsp + 8]
0x1084a:	mov	ecx, dword ptr [rsp]
0x1084d:	mov	edx, dword ptr [rsp + 0x10]
0x10851:	mov	dword ptr [rax], ecx
0x10853:	add	rsp, 0x38
0x10857:	mov	eax, edx
0x10859:	pop	rbx
0x1085a:	pop	rbp
0x1085b:	pop	r12
0x1085d:	pop	r13
0x1085f:	pop	r14
0x10861:	pop	r15
0x10863:	ret	


0x10817:	mov	rax, qword ptr [rsp + 8]
0x1081c:	mov	edx, 0xffffffff
0x10821:	mov	dword ptr [rax], 0x11
0x10827:	jmp	0x10853


0xd110:	mov	esi, dword ptr [rsp + 8]
0xd114:	test	esi, esi
0xd116:	jne	0xd28a


0xd28a:	mov	dword ptr [rsp + 8], r12d
0xd28f:	mov	edx, 3
0xd294:	jmp	0xd14e


0xd149:	mov	edx, 3
0xd14e:	mov	r15, qword ptr [rsp]
0xd152:	lea	rcx, [rsp + 0x20]
0xd157:	mov	rdi, r14
0xd15a:	mov	rsi, r15
0xd15d:	call	0x10040


0x1635d:	add	rbx, 1
0x16361:	cmp	rbp, rbx
0x16364:	jne	0x16350


0x16350:	mov	rdx, r15
0x16353:	mov	rsi, r14
0x16356:	mov	edi, r13d
0x16359:	call	qword ptr [r12 + rbx*8]


0xcdee:	test	eax, eax
0xcdf0:	js	0xce70


0xce70:	call	0x2950


0xcdf2:	mov	byte ptr [rsp + 0x14], r15b
0xcdf7:	mov	edx, 1
0xcdfc:	xor	r15d, r15d
0xcdff:	mov	rdi, qword ptr [rsp + 8]
0xce04:	xor	ecx, ecx
0xce06:	mov	rsi, rbp
0xce09:	call	0x10040


0xce75:	mov	edx, dword ptr [rsp + 0x14]
0xce79:	mov	r15d, dword ptr [rax]
0xce7c:	and	edx, 1
0xce7f:	jmp	0xcdff


0xc4b8:	mov	rbx, qword ptr [rbx + 8]
0xc4bc:	test	rbx, rbx
0xc4bf:	jne	0xc4b0


0xc4c1:	mov	rax, qword ptr [r12 + 8]
0xc4c6:	add	rbp, 0x10
0xc4ca:	cmp	rax, rbp
0xc4cd:	ja	0xc498


0xc4b0:	mov	rdi, qword ptr [rbx]
0xc4b3:	call	qword ptr [r12 + 0x40]


0x10613:	cmp	r15d, eax
0x10616:	cmovl	r15d, eax
0x1061a:	mov	rax, qword ptr [r14 + 8]
0x1061e:	cmp	byte ptr [rax], 0x2f
0x10621:	je	0x10635


0xc412:	mov	rax, qword ptr [rbp + 0x40]
0xc416:	mov	rdx, qword ptr [rbx + 8]
0xc41a:	mov	rcx, qword ptr [rbp + 0x48]
0xc41e:	mov	qword ptr [rbx], 0
0xc425:	test	rdx, rdx
0xc428:	mov	qword ptr [rbx + 8], rcx
0xc42c:	mov	qword ptr [rbp + 0x48], rbx
0xc430:	mov	rbx, rdx
0xc433:	jne	0xc408


0xc189:	test	al, al
0xc18b:	je	0xc1a4


0xc18d:	mov	rbx, qword ptr [rbx + 8]
0xc191:	add	rbp, 1
0xc195:	test	rbx, rbx
0xc198:	jne	0xc180


0xc180:	mov	rdi, qword ptr [rbx]
0xc183:	mov	rsi, r13
0xc186:	call	r12


0xba7e:	cmp	qword ptr [rbx + 0x10], rax
0xba82:	jbe	0xba8d


0xba8d:	call	0x2940


0xba84:	shl	rax, 4
0xba88:	add	rax, qword ptr [rbx]
0xba8b:	pop	rbx
0xba8c:	ret	


0xbcf4:	cmp	qword ptr [rax], 0
0xbcf8:	mov	rbx, rax
0xbcfb:	je	0xbd50


0xbd50:	mov	qword ptr [rax], r15
0xbd53:	add	qword ptr [rbp + 0x18], 1
0xbd58:	jmp	0xbd1d


0xbcfd:	mov	rax, qword ptr [rbp + 0x48]
0xbd01:	test	rax, rax
0xbd04:	je	0xbd60


0xbd1d:	mov	qword ptr [r12], 0
0xbd25:	sub	qword ptr [r13 + 0x18], 1
0xbd2a:	add	r12, 0x10
0xbd2e:	cmp	qword ptr [r13 + 8], r12
0xbd32:	ja	0xbc68


0xbd60:	mov	edi, 0x10
0xbd65:	call	0x2df0


0xbd06:	mov	rdx, qword ptr [rax + 8]
0xbd0a:	mov	qword ptr [rbp + 0x48], rdx
0xbd0e:	mov	rdx, qword ptr [rbx + 8]
0xbd12:	mov	qword ptr [rax], r15
0xbd15:	mov	qword ptr [rax + 8], rdx
0xbd19:	mov	qword ptr [rbx + 8], rax
0xbd1d:	mov	qword ptr [r12], 0
0xbd25:	sub	qword ptr [r13 + 0x18], 1
0xbd2a:	add	r12, 0x10
0xbd2e:	cmp	qword ptr [r13 + 8], r12
0xbd32:	ja	0xbc68


0xbd6a:	test	rax, rax
0xbd6d:	jne	0xbd0e


0xbd6f:	add	rsp, 8
0xbd73:	xor	eax, eax
0xbd75:	pop	rbx
0xbd76:	pop	rbp
0xbd77:	pop	r12
0xbd79:	pop	r13
0xbd7b:	pop	r14
0xbd7d:	pop	r15
0xbd7f:	ret	


0xbd0e:	mov	rdx, qword ptr [rbx + 8]
0xbd12:	mov	qword ptr [rax], r15
0xbd15:	mov	qword ptr [rax + 8], rdx
0xbd19:	mov	qword ptr [rbx + 8], rax
0xbd1d:	mov	qword ptr [r12], 0
0xbd25:	sub	qword ptr [r13 + 0x18], 1
0xbd2a:	add	r12, 0x10
0xbd2e:	cmp	qword ptr [r13 + 8], r12
0xbd32:	ja	0xbc68


0xbcaa:	cmp	qword ptr [rax], 0
0xbcae:	mov	rdx, qword ptr [rbx + 8]
0xbcb2:	jne	0xbc88


0xbcb4:	mov	qword ptr [rax], r15
0xbcb7:	add	qword ptr [rbp + 0x18], 1
0xbcbc:	test	rdx, rdx
0xbcbf:	mov	qword ptr [rbx], 0
0xbcc6:	mov	rax, qword ptr [rbp + 0x48]
0xbcca:	mov	qword ptr [rbx + 8], rax
0xbcce:	mov	qword ptr [rbp + 0x48], rbx
0xbcd2:	mov	rbx, rdx
0xbcd5:	jne	0xbc9c


0xbc88:	mov	rcx, qword ptr [rax + 8]
0xbc8c:	test	rdx, rdx
0xbc8f:	mov	qword ptr [rbx + 8], rcx
0xbc93:	mov	qword ptr [rax + 8], rbx
0xbc97:	mov	rbx, rdx
0xbc9a:	je	0xbcd7


0xbcd7:	mov	r15, qword ptr [r12]
0xbcdb:	test	r14b, r14b
0xbcde:	mov	qword ptr [r12 + 8], 0
0xbce7:	jne	0xbd2a


0xbab9:	mov	qword ptr [r14], rax
0xbabc:	mov	rsi, qword ptr [rax]
0xbabf:	test	rsi, rsi
0xbac2:	je	0xbbb0


0xbbb0:	xor	esi, esi
0xbbb2:	pop	rbx
0xbbb3:	mov	rax, rsi
0xbbb6:	pop	rbp
0xbbb7:	pop	r12
0xbbb9:	pop	r13
0xbbbb:	pop	r14
0xbbbd:	ret	


0xbac8:	cmp	rsi, rbp
0xbacb:	mov	rbx, rax
0xbace:	je	0xbb63


0xbb63:	test	r13b, r13b
0xbb66:	je	0xbb4e


0xbad4:	mov	rdi, rbp
0xbad7:	call	qword ptr [r12 + 0x38]


0xbb4e:	pop	rbx
0xbb4f:	mov	rax, rsi
0xbb52:	pop	rbp
0xbb53:	pop	r12
0xbb55:	pop	r13
0xbb57:	pop	r14
0xbb59:	ret	


0xbb68:	mov	rax, qword ptr [rbx + 8]
0xbb6c:	test	rax, rax
0xbb6f:	je	0xbba0


0xbba0:	mov	qword ptr [rbx], 0
0xbba7:	jmp	0xbb4e


0xbb71:	movdqu	xmm0, xmmword ptr [rax]
0xbb75:	movups	xmmword ptr [rbx], xmm0
0xbb78:	mov	qword ptr [rax], 0
0xbb7f:	mov	rdx, qword ptr [r12 + 0x48]
0xbb84:	mov	qword ptr [rax + 8], rdx
0xbb88:	mov	qword ptr [r12 + 0x48], rax
0xbb8d:	mov	rax, rsi
0xbb90:	pop	rbx
0xbb91:	pop	rbp
0xbb92:	pop	r12
0xbb94:	pop	r13
0xbb96:	pop	r14
0xbb98:	ret	


0xbfbf:	mov	rsi, qword ptr [rax]
0xbfc2:	test	rsi, rsi
0xbfc5:	je	0xbfed


0xbfed:	xor	esi, esi
0xbfef:	pop	rbx
0xbff0:	mov	rax, rsi
0xbff3:	pop	rbp
0xbff4:	pop	r12
0xbff6:	ret	


0xbfc7:	mov	rbx, rax
0xbfca:	jmp	0xbfd3


0xbfd3:	cmp	rsi, rbp
0xbfd6:	je	0xbfef


0xbfef:	pop	rbx
0xbff0:	mov	rax, rsi
0xbff3:	pop	rbp
0xbff4:	pop	r12
0xbff6:	ret	


0xbfd8:	mov	rdi, rbp
0xbfdb:	call	qword ptr [r12 + 0x38]


0xc071:	mov	rdx, rax
0xc074:	mov	rcx, rax
0xc077:	mov	rax, qword ptr [rdx]
0xc07a:	mov	rdx, qword ptr [rdx + 8]
0xc07e:	cmp	rax, rbx
0xc081:	je	0xc099


0xc099:	test	rdx, rdx
0xc09c:	jne	0xc0c8


0xc09e:	mov	rdx, qword ptr [rbp + 8]
0xc0a2:	jmp	0xc0b0


0xc0c8:	mov	rax, qword ptr [rdx]
0xc0cb:	add	rsp, 8
0xc0cf:	pop	rbx
0xc0d0:	pop	rbp
0xc0d1:	ret	


0xc08d:	mov	rax, qword ptr [rdx]
0xc090:	mov	rdx, qword ptr [rdx + 8]
0xc094:	cmp	rax, rbx
0xc097:	jne	0xc088


0xc0b0:	add	rcx, 0x10
0xc0b4:	cmp	rdx, rcx
0xc0b7:	ja	0xc0a8


0xc088:	test	rdx, rdx
0xc08b:	je	0xc09e


0xc0b9:	xor	eax, eax
0xc0bb:	add	rsp, 8
0xc0bf:	pop	rbx
0xc0c0:	pop	rbp
0xc0c1:	ret	


0xc0a8:	mov	rax, qword ptr [rcx]
0xc0ab:	test	rax, rax
0xc0ae:	jne	0xc0bb


0xc0bb:	add	rsp, 8
0xc0bf:	pop	rbx
0xc0c0:	pop	rbp
0xc0c1:	ret	


0xc7c9:	test	rax, rax
0xc7cc:	mov	rdx, rax
0xc7cf:	je	0xc800


0xc800:	mov	rax, qword ptr [rbx + 0x18]
0xc804:	test	rax, rax
0xc807:	js	0xc880


0xc7d1:	xor	eax, eax
0xc7d3:	test	r13, r13
0xc7d6:	je	0xc7dc


0xc880:	mov	rdx, rax
0xc883:	pxor	xmm1, xmm1
0xc887:	and	eax, 1
0xc88a:	shr	rdx, 1
0xc88d:	or	rdx, rax
0xc890:	mov	rax, qword ptr [rbx + 0x10]
0xc894:	cvtsi2ss	xmm1, rdx
0xc899:	mov	rdx, qword ptr [rbx + 0x28]
0xc89d:	test	rax, rax
0xc8a0:	addss	xmm1, xmm1
0xc8a4:	jns	0xc823


0xc809:	pxor	xmm1, xmm1
0xc80d:	mov	rdx, qword ptr [rbx + 0x28]
0xc811:	cvtsi2ss	xmm1, rax
0xc816:	mov	rax, qword ptr [rbx + 0x10]
0xc81a:	test	rax, rax
0xc81d:	js	0xc8aa


0xc7dc:	mov	rcx, qword ptr [rsp + 8]
0xc7e1:	xor	rcx, qword ptr fs:[0x28]
0xc7ea:	jne	0xca0f


0xc7d8:	mov	qword ptr [r13], rdx
0xc7dc:	mov	rcx, qword ptr [rsp + 8]
0xc7e1:	xor	rcx, qword ptr fs:[0x28]
0xc7ea:	jne	0xca0f


0xc8aa:	mov	rcx, rax
0xc8ad:	pxor	xmm0, xmm0
0xc8b1:	shr	rcx, 1
0xc8b4:	and	eax, 1
0xc8b7:	or	rcx, rax
0xc8ba:	cvtsi2ss	xmm0, rcx
0xc8bf:	addss	xmm0, xmm0
0xc8c3:	jmp	0xc82c


0xc823:	pxor	xmm0, xmm0
0xc827:	cvtsi2ss	xmm0, rax
0xc82c:	mulss	xmm0, dword ptr [rdx + 8]
0xc831:	ucomiss	xmm1, xmm0
0xc834:	ja	0xc8d0


0xc7f0:	add	rsp, 0x18
0xc7f4:	pop	rbx
0xc7f5:	pop	rbp
0xc7f6:	pop	r12
0xc7f8:	pop	r13
0xc7fa:	ret	


0xca0f:	call	0x2b30


0xc82c:	mulss	xmm0, dword ptr [rdx + 8]
0xc831:	ucomiss	xmm1, xmm0
0xc834:	ja	0xc8d0


0xc83a:	mov	r12, qword ptr [rsp]
0xc83e:	cmp	qword ptr [r12], 0
0xc843:	je	0xc978


0xc8d0:	lea	rdi, [rbx + 0x28]
0xc8d4:	call	0xbbc0


0xc978:	mov	qword ptr [r12], rbp
0xc97c:	mov	eax, 1
0xc981:	add	qword ptr [rbx + 0x20], 1
0xc986:	add	qword ptr [rbx + 0x18], 1
0xc98b:	jmp	0xc7dc


0xc849:	mov	rax, qword ptr [rbx + 0x48]
0xc84d:	test	rax, rax
0xc850:	je	0xc990


0xc990:	mov	edi, 0x10
0xc995:	call	0x2df0


0xc856:	mov	rdx, qword ptr [rax + 8]
0xc85a:	mov	qword ptr [rbx + 0x48], rdx
0xc85e:	mov	rdx, qword ptr [r12 + 8]
0xc863:	mov	qword ptr [rax], rbp
0xc866:	mov	qword ptr [rax + 8], rdx
0xc86a:	mov	qword ptr [r12 + 8], rax
0xc86f:	mov	eax, 1
0xc874:	add	qword ptr [rbx + 0x20], 1
0xc879:	jmp	0xc7dc


0xc99a:	test	rax, rax
0xc99d:	jne	0xc85e


0xc9a3:	mov	eax, 0xffffffff
0xc9a8:	jmp	0xc7dc


0xc85e:	mov	rdx, qword ptr [r12 + 8]
0xc863:	mov	qword ptr [rax], rbp
0xc866:	mov	qword ptr [rax + 8], rdx
0xc86a:	mov	qword ptr [r12 + 8], rax
0xc86f:	mov	eax, 1
0xc874:	add	qword ptr [rbx + 0x20], 1
0xc879:	jmp	0xc7dc


0xc8d9:	mov	rax, qword ptr [rbx + 0x10]
0xc8dd:	mov	rdx, qword ptr [rbx + 0x28]
0xc8e1:	test	rax, rax
0xc8e4:	movss	xmm2, dword ptr [rdx + 8]
0xc8e9:	js	0xc9b0


0xc9b0:	mov	rcx, rax
0xc9b3:	pxor	xmm0, xmm0
0xc9b7:	shr	rcx, 1
0xc9ba:	and	eax, 1
0xc9bd:	or	rcx, rax
0xc9c0:	cvtsi2ss	xmm0, rcx
0xc9c5:	addss	xmm0, xmm0
0xc9c9:	jmp	0xc8f8


0xc8ef:	pxor	xmm0, xmm0
0xc8f3:	cvtsi2ss	xmm0, rax
0xc8f8:	mov	rax, qword ptr [rbx + 0x18]
0xc8fc:	test	rax, rax
0xc8ff:	js	0xc9d0


0xc8f8:	mov	rax, qword ptr [rbx + 0x18]
0xc8fc:	test	rax, rax
0xc8ff:	js	0xc9d0


0xc9d0:	mov	rcx, rax
0xc9d3:	pxor	xmm1, xmm1
0xc9d7:	shr	rcx, 1
0xc9da:	and	eax, 1
0xc9dd:	or	rcx, rax
0xc9e0:	cvtsi2ss	xmm1, rcx
0xc9e5:	addss	xmm1, xmm1
0xc9e9:	jmp	0xc90e


0xc905:	pxor	xmm1, xmm1
0xc909:	cvtsi2ss	xmm1, rax
0xc90e:	movaps	xmm3, xmm2
0xc911:	mulss	xmm3, xmm0
0xc915:	ucomiss	xmm1, xmm3
0xc918:	jbe	0xc83a


0xc90e:	movaps	xmm3, xmm2
0xc911:	mulss	xmm3, xmm0
0xc915:	ucomiss	xmm1, xmm3
0xc918:	jbe	0xc83a


0xc91e:	cmp	byte ptr [rdx + 0x10], 0
0xc922:	mulss	xmm0, dword ptr [rdx + 0xc]
0xc927:	jne	0xc92d


0xc929:	mulss	xmm0, xmm2
0xc92d:	ucomiss	xmm0, dword ptr [rip + 0xb8d8]
0xc934:	jae	0xc9a3


0xc92d:	ucomiss	xmm0, dword ptr [rip + 0xb8d8]
0xc934:	jae	0xc9a3


0xc936:	ucomiss	xmm0, dword ptr [rip + 0xb8d3]
0xc93d:	jae	0xc9f0


0xc943:	cvttss2si	rsi, xmm0
0xc948:	mov	rdi, rbx
0xc94b:	call	0xc550


0xc9f0:	subss	xmm0, dword ptr [rip + 0xb818]
0xc9f8:	movabs	rax, 0x8000000000000000
0xca02:	cvttss2si	rsi, xmm0
0xca07:	xor	rsi, rax
0xca0a:	jmp	0xc948


0xc948:	mov	rdi, rbx
0xc94b:	call	0xc550


0xc950:	test	al, al
0xc952:	je	0xc9a3


0xc954:	xor	ecx, ecx
0xc956:	mov	rdx, r12
0xc959:	mov	rsi, rbp
0xc95c:	mov	rdi, rbx
0xc95f:	call	0xbaa0


0xca40:	cmp	eax, -1
0xca43:	je	0xca70


0xca70:	xor	ebx, ebx
0xca72:	jmp	0xca4d


0xca45:	test	eax, eax
0xca47:	jne	0xca4d


0xca4d:	mov	rcx, qword ptr [rsp + 8]
0xca52:	xor	rcx, qword ptr fs:[0x28]
0xca5b:	mov	rax, rbx
0xca5e:	jne	0xca74


0xca49:	mov	rbx, qword ptr [rsp]
0xca4d:	mov	rcx, qword ptr [rsp + 8]
0xca52:	xor	rcx, qword ptr fs:[0x28]
0xca5b:	mov	rax, rbx
0xca5e:	jne	0xca74


0xca60:	add	rsp, 0x10
0xca64:	pop	rbx
0xca65:	ret	


0xca74:	call	0x2b30


0xc964:	test	rax, rax
0xc967:	je	0xc83a


0xcaa8:	test	rax, rax
0xcaab:	mov	rbp, rax
0xcaae:	je	0xcabf


0xcabf:	mov	rcx, qword ptr [rsp + 8]
0xcac4:	xor	rcx, qword ptr fs:[0x28]
0xcacd:	mov	rax, rbp
0xcad0:	jne	0xcc7e


0xcab0:	mov	rax, qword ptr [rsp]
0xcab4:	sub	qword ptr [rbx + 0x20], 1
0xcab9:	cmp	qword ptr [rax], 0
0xcabd:	je	0xcae0


0xcad6:	add	rsp, 0x10
0xcada:	pop	rbx
0xcadb:	pop	rbp
0xcadc:	pop	r12
0xcade:	ret	


0xcc7e:	call	0x2b30


0xcae0:	mov	rax, qword ptr [rbx + 0x18]
0xcae4:	sub	rax, 1
0xcae8:	test	rax, rax
0xcaeb:	mov	qword ptr [rbx + 0x18], rax
0xcaef:	js	0xcbf0


0xcbf0:	mov	rdx, rax
0xcbf3:	pxor	xmm0, xmm0
0xcbf7:	shr	rdx, 1
0xcbfa:	and	eax, 1
0xcbfd:	or	rdx, rax
0xcc00:	cvtsi2ss	xmm0, rdx
0xcc05:	addss	xmm0, xmm0
0xcc09:	jmp	0xcafe


0xcaf5:	pxor	xmm0, xmm0
0xcaf9:	cvtsi2ss	xmm0, rax
0xcafe:	mov	rax, qword ptr [rbx + 0x10]
0xcb02:	mov	rdx, qword ptr [rbx + 0x28]
0xcb06:	test	rax, rax
0xcb09:	js	0xcbd0


0xcafe:	mov	rax, qword ptr [rbx + 0x10]
0xcb02:	mov	rdx, qword ptr [rbx + 0x28]
0xcb06:	test	rax, rax
0xcb09:	js	0xcbd0


0xcbd0:	mov	rcx, rax
0xcbd3:	pxor	xmm1, xmm1
0xcbd7:	shr	rcx, 1
0xcbda:	and	eax, 1
0xcbdd:	or	rcx, rax
0xcbe0:	cvtsi2ss	xmm1, rcx
0xcbe5:	addss	xmm1, xmm1
0xcbe9:	jmp	0xcb18


0xcb0f:	pxor	xmm1, xmm1
0xcb13:	cvtsi2ss	xmm1, rax
0xcb18:	mulss	xmm1, dword ptr [rdx]
0xcb1c:	ucomiss	xmm1, xmm0
0xcb1f:	jbe	0xcabf


0xcb18:	mulss	xmm1, dword ptr [rdx]
0xcb1c:	ucomiss	xmm1, xmm0
0xcb1f:	jbe	0xcabf


0xcb21:	lea	rdi, [rbx + 0x28]
0xcb25:	call	0xbbc0


0xcb2a:	mov	rax, qword ptr [rbx + 0x10]
0xcb2e:	mov	rdx, qword ptr [rbx + 0x28]
0xcb32:	test	rax, rax
0xcb35:	js	0xcc60


0xcc60:	mov	rcx, rax
0xcc63:	pxor	xmm0, xmm0
0xcc67:	shr	rcx, 1
0xcc6a:	and	eax, 1
0xcc6d:	or	rcx, rax
0xcc70:	cvtsi2ss	xmm0, rcx
0xcc75:	addss	xmm0, xmm0
0xcc79:	jmp	0xcb44


0xcb3b:	pxor	xmm0, xmm0
0xcb3f:	cvtsi2ss	xmm0, rax
0xcb44:	mov	rax, qword ptr [rbx + 0x18]
0xcb48:	test	rax, rax
0xcb4b:	js	0xcc40


0xcb44:	mov	rax, qword ptr [rbx + 0x18]
0xcb48:	test	rax, rax
0xcb4b:	js	0xcc40


0xcc40:	mov	rcx, rax
0xcc43:	pxor	xmm1, xmm1
0xcc47:	shr	rcx, 1
0xcc4a:	and	eax, 1
0xcc4d:	or	rcx, rax
0xcc50:	cvtsi2ss	xmm1, rcx
0xcc55:	addss	xmm1, xmm1
0xcc59:	jmp	0xcb5a


0xcb51:	pxor	xmm1, xmm1
0xcb55:	cvtsi2ss	xmm1, rax
0xcb5a:	movss	xmm2, dword ptr [rdx]
0xcb5e:	mulss	xmm2, xmm0
0xcb62:	ucomiss	xmm2, xmm1
0xcb65:	jbe	0xcabf


0xcb5a:	movss	xmm2, dword ptr [rdx]
0xcb5e:	mulss	xmm2, xmm0
0xcb62:	ucomiss	xmm2, xmm1
0xcb65:	jbe	0xcabf


0xcb6b:	cmp	byte ptr [rdx + 0x10], 0
0xcb6f:	mulss	xmm0, dword ptr [rdx + 4]
0xcb74:	je	0xcc30


0xcc30:	mulss	xmm0, dword ptr [rdx + 8]
0xcc35:	jmp	0xcb7a


0xcb7a:	ucomiss	xmm0, dword ptr [rip + 0xb68f]
0xcb81:	jae	0xcc10


0xcb87:	cvttss2si	rsi, xmm0
0xcb8c:	mov	rdi, rbx
0xcb8f:	call	0xc550


0xcc10:	subss	xmm0, dword ptr [rip + 0xb5f8]
0xcc18:	movabs	rax, 0x8000000000000000
0xcc22:	cvttss2si	rsi, xmm0
0xcc27:	xor	rsi, rax
0xcc2a:	jmp	0xcb8c


0xcb8c:	mov	rdi, rbx
0xcb8f:	call	0xc550


0xcb94:	test	al, al
0xcb96:	jne	0xcabf


0xcb9c:	mov	rdi, qword ptr [rbx + 0x48]
0xcba0:	test	rdi, rdi
0xcba3:	je	0xcbb9


0xcbb9:	mov	qword ptr [rbx + 0x48], 0
0xcbc1:	jmp	0xcabf


0xcbb1:	test	r12, r12
0xcbb4:	mov	rdi, r12
0xcbb7:	jne	0xcba8


0xcba8:	mov	r12, qword ptr [rdi + 8]
0xcbac:	call	0x30d0


0xbfe0:	test	al, al
0xbfe2:	jne	0xc000


0xbfe4:	mov	rbx, qword ptr [rbx + 8]
0xbfe8:	test	rbx, rbx
0xbfeb:	jne	0xbfd0


0xc000:	mov	rsi, qword ptr [rbx]
0xc003:	pop	rbx
0xc004:	pop	rbp
0xc005:	mov	rax, rsi
0xc008:	pop	r12
0xc00a:	ret	


0xbfd0:	mov	rsi, qword ptr [rbx]
0xbfd3:	cmp	rsi, rbp
0xbfd6:	je	0xbfef


0xbadc:	test	al, al
0xbade:	jne	0xbb60


0xbae4:	mov	rax, qword ptr [rbx + 8]
0xbae8:	test	rax, rax
0xbaeb:	je	0xbbb0


0xbb60:	mov	rsi, qword ptr [rbx]
0xbb63:	test	r13b, r13b
0xbb66:	je	0xbb4e


0xbaf1:	mov	rsi, qword ptr [rax]
0xbaf4:	cmp	rbp, rsi
0xbaf7:	jne	0xbb19


0xbaf9:	jmp	0xbb2c


0xbb19:	mov	rdi, rbp
0xbb1c:	call	qword ptr [r12 + 0x38]


0xbb2c:	test	r13b, r13b
0xbb2f:	je	0xbb4e


0xbb31:	mov	rdx, qword ptr [rax + 8]
0xbb35:	mov	qword ptr [rbx + 8], rdx
0xbb39:	mov	qword ptr [rax], 0
0xbb40:	mov	rdx, qword ptr [r12 + 0x48]
0xbb45:	mov	qword ptr [rax + 8], rdx
0xbb49:	mov	qword ptr [r12 + 0x48], rax
0xbb4e:	pop	rbx
0xbb4f:	mov	rax, rsi
0xbb52:	pop	rbp
0xbb53:	pop	r12
0xbb55:	pop	r13
0xbb57:	pop	r14
0xbb59:	ret	


0xbb21:	test	al, al
0xbb23:	je	0xbb00


0xbb00:	mov	rbx, qword ptr [rbx + 8]
0xbb04:	mov	rax, qword ptr [rbx + 8]
0xbb08:	test	rax, rax
0xbb0b:	je	0xbbb0


0xbb25:	mov	rax, qword ptr [rbx + 8]
0xbb29:	mov	rsi, qword ptr [rax]
0xbb2c:	test	r13b, r13b
0xbb2f:	je	0xbb4e


0xbb11:	mov	rsi, qword ptr [rax]
0xbb14:	cmp	rsi, rbp
0xbb17:	je	0xbb2c






0x11c40:	lea	rsi, [rip + 0x6ea1]
0x11c47:	mov	edx, 5
0x11c4c:	xor	edi, edi
0x11c4e:	mov	r14, qword ptr [rbx + 0x18]
0x11c52:	mov	r13, qword ptr [rbx + 0x10]
0x11c56:	mov	r12, qword ptr [rbx + 8]
0x11c5a:	mov	rbx, qword ptr [rbx]
0x11c5d:	call	0x2ad0


0x11a60:	mov	r9, qword ptr [rbx + 0x38]
0x11a64:	mov	rax, qword ptr [rbx + 0x10]
0x11a68:	lea	rsi, [rip + 0x7119]
0x11a6f:	mov	r8, qword ptr [rbx + 8]
0x11a73:	mov	edx, 5
0x11a78:	xor	edi, edi
0x11a7a:	mov	r13, qword ptr [rbx + 0x30]
0x11a7e:	mov	r12, qword ptr [rbx + 0x28]
0x11a82:	mov	qword ptr [rsp + 0x10], r9
0x11a87:	mov	r15, qword ptr [rbx + 0x20]
0x11a8b:	mov	r14, qword ptr [rbx + 0x18]
0x11a8f:	mov	qword ptr [rsp], rax
0x11a93:	mov	qword ptr [rsp + 8], r8
0x11a98:	mov	rbx, qword ptr [rbx]
0x11a9b:	call	0x2ad0


0x11b68:	mov	rbx, qword ptr [rbx]
0x11b6b:	lea	rsi, [rip + 0x6e24]
0x11b72:	mov	edx, 5
0x11b77:	xor	edi, edi
0x11b79:	call	0x2ad0


0x11ba8:	mov	r12, qword ptr [rbx + 8]
0x11bac:	lea	rsi, [rip + 0x6df3]
0x11bb3:	mov	rbx, qword ptr [rbx]
0x11bb6:	mov	edx, 5
0x11bbb:	xor	edi, edi
0x11bbd:	call	0x2ad0


0x11cc8:	mov	r8, qword ptr [rbx + 8]
0x11ccc:	mov	r12, qword ptr [rbx + 0x28]
0x11cd0:	lea	rsi, [rip + 0x6e59]
0x11cd7:	mov	r15, qword ptr [rbx + 0x20]
0x11cdb:	mov	r14, qword ptr [rbx + 0x18]
0x11cdf:	mov	edx, 5
0x11ce4:	mov	r13, qword ptr [rbx + 0x10]
0x11ce8:	xor	edi, edi
0x11cea:	mov	rbx, qword ptr [rbx]
0x11ced:	mov	qword ptr [rsp], r8
0x11cf1:	call	0x2ad0


0x11bf0:	mov	r13, qword ptr [rbx + 0x10]
0x11bf4:	mov	r12, qword ptr [rbx + 8]
0x11bf8:	lea	rsi, [rip + 0x6dbe]
0x11bff:	mov	rbx, qword ptr [rbx]
0x11c02:	mov	edx, 5
0x11c07:	xor	edi, edi
0x11c09:	call	0x2ad0


0x11d30:	mov	r9, qword ptr [rbx + 0x10]
0x11d34:	mov	r13, qword ptr [rbx + 0x30]
0x11d38:	lea	rsi, [rip + 0x6e19]
0x11d3f:	mov	r12, qword ptr [rbx + 0x28]
0x11d43:	mov	r15, qword ptr [rbx + 0x20]
0x11d47:	mov	edx, 5
0x11d4c:	mov	r14, qword ptr [rbx + 0x18]
0x11d50:	mov	r8, qword ptr [rbx + 8]
0x11d54:	xor	edi, edi
0x11d56:	mov	qword ptr [rsp + 8], r9
0x11d5b:	mov	rbx, qword ptr [rbx]
0x11d5e:	mov	qword ptr [rsp], r8
0x11d62:	call	0x2ad0


0x11b10:	mov	r10, qword ptr [rbx + 0x40]
0x11b14:	mov	r9, qword ptr [rbx + 0x38]
0x11b18:	lea	rsi, [rip + 0x7099]
0x11b1f:	mov	rax, qword ptr [rbx + 0x10]
0x11b23:	mov	r8, qword ptr [rbx + 8]
0x11b27:	mov	edx, 5
0x11b2c:	mov	r13, qword ptr [rbx + 0x30]
0x11b30:	mov	r12, qword ptr [rbx + 0x28]
0x11b34:	mov	r15, qword ptr [rbx + 0x20]
0x11b38:	mov	r14, qword ptr [rbx + 0x18]
0x11b3c:	mov	rbx, qword ptr [rbx]
0x11b3f:	mov	qword ptr [rsp + 0x18], r10
0x11b44:	mov	qword ptr [rsp + 0x10], r9
0x11b49:	mov	qword ptr [rsp], rax
0x11b4d:	mov	qword ptr [rsp + 8], r8
0x11b52:	xor	edi, edi
0x11b54:	call	0x2ad0


0x11ad6:	add	rsp, 0x28
0x11ada:	pop	rbx
0x11adb:	pop	rbp
0x11adc:	pop	r12
0x11ade:	pop	r13
0x11ae0:	pop	r14
0x11ae2:	pop	r15
0x11ae4:	ret	


0x11c98:	mov	r15, qword ptr [rbx + 0x20]
0x11c9c:	lea	rsi, [rip + 0x6e65]
0x11ca3:	mov	edx, 5
0x11ca8:	xor	edi, edi
0x11caa:	mov	r14, qword ptr [rbx + 0x18]
0x11cae:	mov	r13, qword ptr [rbx + 0x10]
0x11cb2:	mov	r12, qword ptr [rbx + 8]
0x11cb6:	mov	rbx, qword ptr [rbx]
0x11cb9:	call	0x2ad0


0x14fd0:	mov	byte ptr [rax], r14b
0x14fd3:	mov	rbx, r14
0x14fd6:	jmp	0x14cf4


0x14ff0:	mov	word ptr [rax], r14w
0x14ff4:	mov	rbx, r14
0x14ff7:	jmp	0x14cf4


0x14ea0:	mov	qword ptr [rax], r14
0x14ea3:	mov	rbx, r14
0x14ea6:	jmp	0x14cf4


0x14fe0:	mov	dword ptr [rax], r14d
0x14fe3:	mov	rbx, r14
0x14fe6:	jmp	0x14cf4


0x14c20:	mov	rax, qword ptr [r13 + 0x50]
0x14c24:	lea	rdi, [r15 + r14]
0x14c28:	shl	rax, 5
0x14c2c:	add	rax, qword ptr [rbp - 0x3a8]
0x14c33:	movsx	r9d, byte ptr [rax + 0x10]
0x14c38:	mov	eax, dword ptr [rbp - 0x3e0]
0x14c3e:	cmp	eax, 1
0x14c41:	jne	0x1491e


0x147c0:	mov	rax, qword ptr [r13 + 0x50]
0x147c4:	lea	rdi, [r15 + r14]
0x147c8:	shl	rax, 5
0x147cc:	add	rax, qword ptr [rbp - 0x3a8]
0x147d3:	mov	r9, qword ptr [rax + 0x10]
0x147d7:	mov	eax, dword ptr [rbp - 0x3e0]
0x147dd:	cmp	eax, 1
0x147e0:	je	0x14ca8


0x14a20:	mov	rax, qword ptr [r13 + 0x50]
0x14a24:	lea	rdi, [r15 + r14]
0x14a28:	shl	rax, 5
0x14a2c:	add	rax, qword ptr [rbp - 0x3a8]
0x14a33:	fld	xword ptr [rax + 0x10]
0x14a36:	mov	eax, dword ptr [rbp - 0x3e0]
0x14a3c:	cmp	eax, 1
0x14a3f:	je	0x15070


0x14b28:	mov	rax, qword ptr [r13 + 0x50]
0x14b2c:	lea	rdi, [r15 + r14]
0x14b30:	shl	rax, 5
0x14b34:	add	rax, qword ptr [rbp - 0x3a8]
0x14b3b:	movzx	r9d, word ptr [rax + 0x10]
0x14b40:	mov	eax, dword ptr [rbp - 0x3e0]
0x14b46:	cmp	eax, 1
0x14b49:	jne	0x1491e


0x14b68:	mov	rax, qword ptr [r13 + 0x50]
0x14b6c:	lea	rdi, [r15 + r14]
0x14b70:	shl	rax, 5
0x14b74:	add	rax, qword ptr [rbp - 0x3a8]
0x14b7b:	movsx	r9d, word ptr [rax + 0x10]
0x14b80:	mov	eax, dword ptr [rbp - 0x3e0]
0x14b86:	cmp	eax, 1
0x14b89:	je	0x14b50


0x14aa8:	mov	rax, qword ptr [r13 + 0x50]
0x14aac:	lea	rdi, [r15 + r14]
0x14ab0:	shl	rax, 5
0x14ab4:	add	rax, qword ptr [rbp - 0x3a8]
0x14abb:	movsd	xmm0, qword ptr [rax + 0x10]
0x14ac0:	mov	eax, dword ptr [rbp - 0x3e0]
0x14ac6:	cmp	eax, 1
0x14ac9:	je	0x15060


0x14bf0:	mov	rax, qword ptr [r13 + 0x50]
0x14bf4:	lea	rdi, [r15 + r14]
0x14bf8:	shl	rax, 5
0x14bfc:	add	rax, qword ptr [rbp - 0x3a8]
0x14c03:	movzx	r9d, byte ptr [rax + 0x10]
0x14c08:	mov	eax, dword ptr [rbp - 0x3e0]
0x14c0e:	cmp	eax, 1
0x14c11:	jne	0x1491e


0x148f8:	mov	rax, qword ptr [r13 + 0x50]
0x148fc:	lea	rdi, [r15 + r14]
0x14900:	shl	rax, 5
0x14904:	add	rax, qword ptr [rbp - 0x3a8]
0x1490b:	mov	r9d, dword ptr [rax + 0x10]
0x1490f:	mov	eax, dword ptr [rbp - 0x3e0]
0x14915:	cmp	eax, 1
0x14918:	je	0x14b50


0x10478:	mov	dword ptr [rbx], 5
0x1047e:	pop	rbx
0x1047f:	ret	


0x10470:	mov	edi, dword ptr [rdi + 4]
0x10473:	call	0x2c30


0x10480:	mov	eax, dword ptr [rdi + 4]
0x10483:	test	eax, eax
0x10485:	js	0x10478


0x103c0:	mov	edi, dword ptr [rdi + 4]
0x103c3:	call	0x2e60


0x10330:	mov	ebp, dword ptr [rdi + 4]
0x10333:	cmp	ebp, 0
0x10336:	je	0x1043c


0x10343:	xor	eax, eax
0x10345:	mov	rcx, qword ptr [rsp + 8]
0x1034a:	xor	rcx, qword ptr fs:[0x28]
0x10353:	jne	0x10418


0x10368:	mov	r12d, dword ptr [rdi + 4]
0x1036c:	call	0x2950


0x15460:	mov	rdx, qword ptr [rdi + 8]
0x15464:	add	rdx, 0xf
0x15468:	and	rdx, 0xfffffffffffffff0
0x1546c:	lea	r11, [rdx + 0x10]
0x15470:	mov	qword ptr [rdi + 8], r11
0x15474:	fld	xword ptr [rdx]
0x15476:	fstp	xword ptr [rax + 0x10]
0x15479:	nop	dword ptr [rax]
0x15480:	add	rcx, 1
0x15484:	add	rax, 0x20
0x15488:	cmp	qword ptr [rsi], rcx
0x1548b:	ja	0x15448


0x15580:	mov	r11d, dword ptr [rdi]
0x15583:	cmp	r11d, 0x2f
0x15587:	ja	0x155cc


0x15524:	mov	r11d, dword ptr [rdi]
0x15527:	cmp	r11d, 0x2f
0x1552b:	ja	0x155bb


0x15552:	mov	r11d, dword ptr [rdi + 4]
0x15556:	cmp	r11d, 0xaf
0x1555d:	ja	0x1560d


0x15496:	mov	r11d, dword ptr [rdi]
0x15499:	cmp	r11d, 0x2f
0x1549d:	ja	0x155da


0x154ba:	mov	r11d, dword ptr [rdi]
0x154bd:	cmp	r11d, 0x2f
0x154c1:	ja	0x155fc


0x154dc:	mov	r11d, dword ptr [rdi]
0x154df:	cmp	r11d, 0x2f
0x154e3:	ja	0x155eb


0x154fe:	mov	r11d, dword ptr [rdi]
0x15501:	cmp	r11d, 0x2f
0x15505:	ja	0x155aa


0x101e0:	mov	dword ptr [r12], 2
0x101e8:	jmp	0x1008f


0x101f0:	mov	eax, dword ptr [r12 + 4]
0x101f5:	test	eax, eax
0x101f7:	je	0x1008f


0x14cf4:	mov	r8, qword ptr [r13 + 8]
0x14cf8:	add	r13, 0x58
0x14cfc:	mov	rcx, qword ptr [r13]
0x14d00:	add	qword ptr [rbp - 0x400], 1
0x14d08:	cmp	rcx, r8
0x14d0b:	jne	0x143a9


0x14c47:	jmp	0x14b50


0x1491e:	cmp	eax, 2
0x14921:	je	0x14b98


0x14ca8:	push	qword ptr [rbp - 0x3f0]
0x14cae:	push	r9
0x14cb0:	jmp	0x14b58


0x147e6:	cmp	eax, 2
0x147e9:	je	0x14c90


0x15070:	sub	rsp, 8
0x15074:	push	qword ptr [rbp - 0x3f0]
0x1507a:	sub	rsp, 0x10
0x1507e:	fstp	xword ptr [rsp]
0x15081:	jmp	0x14bab


0x14a45:	cmp	eax, 2
0x14a48:	jne	0x14f10


0x14b50:	push	qword ptr [rbp - 0x3f0]
0x14b56:	push	r9
0x14b58:	mov	r9d, dword ptr [rbp - 0x3b8]
0x14b5f:	jmp	0x14931


0x14b8b:	cmp	eax, 2
0x14b8e:	jne	0x14927


0x15060:	sub	rsp, 8
0x15064:	push	qword ptr [rbp - 0x3f0]
0x1506a:	jmp	0x14ae5


0x14acf:	cmp	eax, 2
0x14ad2:	jne	0x14ed0


0x14c17:	jmp	0x14b50


0x10487:	lea	rcx, [rip + 0x8402]
0x1048e:	lea	rsi, [rip + 0x839b]
0x10495:	lea	rdi, [rip + 0x837b]
0x1049c:	mov	edx, 0xf7
0x104a1:	call	0x2be0


0x1043c:	mov	edi, esi
0x1043e:	call	0x2980


0x1033c:	lea	r12, [rsp + 4]
0x10341:	jg	0x1038a


0x10359:	add	rsp, 0x10
0x1035d:	pop	rbx
0x1035e:	pop	rbp
0x1035f:	pop	r12
0x10361:	ret	


0x10418:	call	0x2b30


0x15448:	cmp	dword ptr [rax], 0x16
0x1544b:	ja	0x15490


0x15589:	mov	edx, r11d
0x1558c:	add	rdx, qword ptr [rdi + 0x10]
0x15590:	add	r11d, 8
0x15594:	mov	dword ptr [rdi], r11d
0x15597:	mov	rdx, qword ptr [rdx]
0x1559a:	test	rdx, rdx
0x1559d:	cmove	rdx, r10
0x155a1:	mov	qword ptr [rax + 0x10], rdx
0x155a5:	jmp	0x15480


0x155cc:	mov	rdx, qword ptr [rdi + 8]
0x155d0:	lea	r11, [rdx + 8]
0x155d4:	mov	qword ptr [rdi + 8], r11
0x155d8:	jmp	0x15597


0x15531:	mov	edx, r11d
0x15534:	add	rdx, qword ptr [rdi + 0x10]
0x15538:	add	r11d, 8
0x1553c:	mov	dword ptr [rdi], r11d
0x1553f:	mov	rdx, qword ptr [rdx]
0x15542:	test	rdx, rdx
0x15545:	cmove	rdx, r9
0x15549:	mov	qword ptr [rax + 0x10], rdx
0x1554d:	jmp	0x15480


0x155bb:	mov	rdx, qword ptr [rdi + 8]
0x155bf:	lea	r11, [rdx + 8]
0x155c3:	mov	qword ptr [rdi + 8], r11
0x155c7:	jmp	0x1553f


0x15563:	mov	edx, r11d
0x15566:	add	rdx, qword ptr [rdi + 0x10]
0x1556a:	add	r11d, 0x10
0x1556e:	mov	dword ptr [rdi + 4], r11d
0x15572:	movsd	xmm0, qword ptr [rdx]
0x15576:	movsd	qword ptr [rax + 0x10], xmm0
0x1557b:	jmp	0x15480


0x1560d:	mov	rdx, qword ptr [rdi + 8]
0x15611:	lea	r11, [rdx + 8]
0x15615:	mov	qword ptr [rdi + 8], r11
0x15619:	jmp	0x15572


0x154a3:	mov	edx, r11d
0x154a6:	add	rdx, qword ptr [rdi + 0x10]
0x154aa:	add	r11d, 8
0x154ae:	mov	dword ptr [rdi], r11d
0x154b1:	mov	rdx, qword ptr [rdx]
0x154b4:	mov	qword ptr [rax + 0x10], rdx
0x154b8:	jmp	0x15480


0x155da:	mov	rdx, qword ptr [rdi + 8]
0x155de:	lea	r11, [rdx + 8]
0x155e2:	mov	qword ptr [rdi + 8], r11
0x155e6:	jmp	0x154b1


0x154c7:	mov	edx, r11d
0x154ca:	add	rdx, qword ptr [rdi + 0x10]
0x154ce:	add	r11d, 8
0x154d2:	mov	dword ptr [rdi], r11d
0x154d5:	mov	edx, dword ptr [rdx]
0x154d7:	mov	dword ptr [rax + 0x10], edx
0x154da:	jmp	0x15480


0x155fc:	mov	rdx, qword ptr [rdi + 8]
0x15600:	lea	r11, [rdx + 8]
0x15604:	mov	qword ptr [rdi + 8], r11
0x15608:	jmp	0x154d5


0x154e9:	mov	edx, r11d
0x154ec:	add	rdx, qword ptr [rdi + 0x10]
0x154f0:	add	r11d, 8
0x154f4:	mov	dword ptr [rdi], r11d
0x154f7:	mov	edx, dword ptr [rdx]
0x154f9:	mov	byte ptr [rax + 0x10], dl
0x154fc:	jmp	0x15480


0x155eb:	mov	rdx, qword ptr [rdi + 8]
0x155ef:	lea	r11, [rdx + 8]
0x155f3:	mov	qword ptr [rdi + 8], r11
0x155f7:	jmp	0x154f7


0x1550b:	mov	edx, r11d
0x1550e:	add	rdx, qword ptr [rdi + 0x10]
0x15512:	add	r11d, 8
0x15516:	mov	dword ptr [rdi], r11d
0x15519:	mov	edx, dword ptr [rdx]
0x1551b:	mov	word ptr [rax + 0x10], dx
0x1551f:	jmp	0x15480


0x155aa:	mov	rdx, qword ptr [rdi + 8]
0x155ae:	lea	r11, [rdx + 8]
0x155b2:	mov	qword ptr [rdi + 8], r11
0x155b6:	jmp	0x15519


0x101fd:	lea	rcx, [rip + 0x86bc]
0x10204:	lea	rsi, [rip + 0x8625]
0x1020b:	lea	rdi, [rip + 0x85d6]
0x10212:	mov	edx, 0x9b
0x10217:	call	0x2be0


0x14b98:	sub	rsp, 8
0x14b9c:	push	qword ptr [rbp - 0x3f0]
0x14ba2:	push	r9
0x14ba4:	mov	eax, dword ptr [rbp - 0x3b4]
0x14baa:	push	rax
0x14bab:	mov	r9d, dword ptr [rbp - 0x3b8]
0x14bb2:	mov	r8, qword ptr [rbp - 0x3d8]
0x14bb9:	mov	rsi, r10
0x14bbc:	mov	rcx, -1
0x14bc3:	mov	edx, 1
0x14bc8:	xor	eax, eax
0x14bca:	mov	qword ptr [rbp - 0x430], r10
0x14bd1:	call	0x2910


0x14927:	sub	rsp, 8
0x1492b:	push	qword ptr [rbp - 0x3f0]
0x14931:	mov	r8, qword ptr [rbp - 0x3d8]
0x14938:	mov	rcx, -1
0x1493f:	mov	edx, 1
0x14944:	mov	rsi, r10
0x14947:	xor	eax, eax
0x14949:	mov	qword ptr [rbp - 0x430], r10
0x14950:	call	0x2910


0x14b58:	mov	r9d, dword ptr [rbp - 0x3b8]
0x14b5f:	jmp	0x14931


0x14c90:	sub	rsp, 8
0x14c94:	push	qword ptr [rbp - 0x3f0]
0x14c9a:	push	r9
0x14c9c:	jmp	0x14ba4


0x147ef:	sub	rsp, 8
0x147f3:	push	qword ptr [rbp - 0x3f0]
0x147f9:	mov	r8, qword ptr [rbp - 0x3d8]
0x14800:	mov	rsi, r10
0x14803:	mov	rcx, -1
0x1480a:	mov	edx, 1
0x1480f:	xor	eax, eax
0x14811:	mov	qword ptr [rbp - 0x430], r10
0x14818:	call	0x2910


0x14bab:	mov	r9d, dword ptr [rbp - 0x3b8]
0x14bb2:	mov	r8, qword ptr [rbp - 0x3d8]
0x14bb9:	mov	rsi, r10
0x14bbc:	mov	rcx, -1
0x14bc3:	mov	edx, 1
0x14bc8:	xor	eax, eax
0x14bca:	mov	qword ptr [rbp - 0x430], r10
0x14bd1:	call	0x2910


0x14a4e:	mov	eax, dword ptr [rbp - 0x3b4]
0x14a54:	sub	rsp, 8
0x14a58:	push	qword ptr [rbp - 0x3f0]
0x14a5e:	mov	r9d, dword ptr [rbp - 0x3b8]
0x14a65:	mov	r8, qword ptr [rbp - 0x3d8]
0x14a6c:	mov	rsi, r10
0x14a6f:	sub	rsp, 0x18
0x14a73:	mov	rcx, -1
0x14a7a:	mov	edx, 1
0x14a7f:	fstp	xword ptr [rsp + 8]
0x14a83:	push	rax
0x14a84:	xor	eax, eax
0x14a86:	mov	qword ptr [rbp - 0x430], r10
0x14a8d:	call	0x2910


0x14f10:	sub	rsp, 0x10
0x14f14:	mov	r9, qword ptr [rbp - 0x3f0]
0x14f1b:	fstp	xword ptr [rsp]
0x14f1e:	jmp	0x147f9


0x14931:	mov	r8, qword ptr [rbp - 0x3d8]
0x14938:	mov	rcx, -1
0x1493f:	mov	edx, 1
0x14944:	mov	rsi, r10
0x14947:	xor	eax, eax
0x14949:	mov	qword ptr [rbp - 0x430], r10
0x14950:	call	0x2910


0x14ae5:	mov	r9d, dword ptr [rbp - 0x3b8]
0x14aec:	mov	r8, qword ptr [rbp - 0x3d8]
0x14af3:	mov	rsi, r10
0x14af6:	mov	rcx, -1
0x14afd:	mov	edx, 1
0x14b02:	mov	eax, 1
0x14b07:	mov	qword ptr [rbp - 0x430], r10
0x14b0e:	call	0x2910


0x14ad8:	mov	eax, dword ptr [rbp - 0x3b4]
0x14ade:	push	qword ptr [rbp - 0x3f0]
0x14ae4:	push	rax
0x14ae5:	mov	r9d, dword ptr [rbp - 0x3b8]
0x14aec:	mov	r8, qword ptr [rbp - 0x3d8]
0x14af3:	mov	rsi, r10
0x14af6:	mov	rcx, -1
0x14afd:	mov	edx, 1
0x14b02:	mov	eax, 1
0x14b07:	mov	qword ptr [rbp - 0x430], r10
0x14b0e:	call	0x2910


0x14ed0:	mov	r9, qword ptr [rbp - 0x3f0]
0x14ed7:	mov	r8, qword ptr [rbp - 0x3d8]
0x14ede:	mov	rsi, r10
0x14ee1:	mov	rcx, -1
0x14ee8:	mov	edx, 1
0x14eed:	mov	eax, 1
0x14ef2:	mov	qword ptr [rbp - 0x430], r10
0x14ef9:	call	0x2910


0x1038a:	xor	edx, edx
0x1038c:	mov	rsi, r12
0x1038f:	mov	edi, ebp
0x10391:	call	0x2f40


0x15480:	add	rcx, 1
0x15484:	add	rax, 0x20
0x15488:	cmp	qword ptr [rsi], rcx
0x1548b:	ja	0x15448


0x15597:	mov	rdx, qword ptr [rdx]
0x1559a:	test	rdx, rdx
0x1559d:	cmove	rdx, r10
0x155a1:	mov	qword ptr [rax + 0x10], rdx
0x155a5:	jmp	0x15480


0x1553f:	mov	rdx, qword ptr [rdx]
0x15542:	test	rdx, rdx
0x15545:	cmove	rdx, r9
0x15549:	mov	qword ptr [rax + 0x10], rdx
0x1554d:	jmp	0x15480


0x15572:	movsd	xmm0, qword ptr [rdx]
0x15576:	movsd	qword ptr [rax + 0x10], xmm0
0x1557b:	jmp	0x15480


0x154b1:	mov	rdx, qword ptr [rdx]
0x154b4:	mov	qword ptr [rax + 0x10], rdx
0x154b8:	jmp	0x15480


0x154d5:	mov	edx, dword ptr [rdx]
0x154d7:	mov	dword ptr [rax + 0x10], edx
0x154da:	jmp	0x15480


0x154f7:	mov	edx, dword ptr [rdx]
0x154f9:	mov	byte ptr [rax + 0x10], dl
0x154fc:	jmp	0x15480


0x15519:	mov	edx, dword ptr [rdx]
0x1551b:	mov	word ptr [rax + 0x10], dx
0x1551f:	jmp	0x15480


0x2910:	jmp	qword ptr [rip + 0x21a2da]


0x14ba4:	mov	eax, dword ptr [rbp - 0x3b4]
0x14baa:	push	rax
0x14bab:	mov	r9d, dword ptr [rbp - 0x3b8]
0x14bb2:	mov	r8, qword ptr [rbp - 0x3d8]
0x14bb9:	mov	rsi, r10
0x14bbc:	mov	rcx, -1
0x14bc3:	mov	edx, 1
0x14bc8:	xor	eax, eax
0x14bca:	mov	qword ptr [rbp - 0x430], r10
0x14bd1:	call	0x2910


0x147f9:	mov	r8, qword ptr [rbp - 0x3d8]
0x14800:	mov	rsi, r10
0x14803:	mov	rcx, -1
0x1480a:	mov	edx, 1
0x1480f:	xor	eax, eax
0x14811:	mov	qword ptr [rbp - 0x430], r10
0x14818:	call	0x2910




0x10396:	test	eax, eax
0x10398:	js	0x10380


0x10380:	call	0x2950


0x1039a:	mov	eax, dword ptr [rsp + 4]
0x1039e:	mov	dword ptr [rbx + 4], 0xffffffff
0x103a5:	mov	edi, eax
0x103a7:	and	edi, 0x7f
0x103aa:	je	0x103b5


0x103b5:	movzx	eax, ah
0x103b8:	jmp	0x10345


0x103ac:	call	0x2920


0x10345:	mov	rcx, qword ptr [rsp + 8]
0x1034a:	xor	rcx, qword ptr fs:[0x28]
0x10353:	jne	0x10418


0x2920:	jmp	qword ptr [rip + 0x21a2d2]




0x10443:	nop	dword ptr [rax]
0x10446:	nop	word ptr cs:[rax + rax]


0x10385:	cmp	dword ptr [rax], 4
0x10388:	jne	0x103f9


0x103f9:	lea	rcx, [rip + 0x84a0]
0x10400:	lea	rsi, [rip + 0x8429]
0x10407:	lea	rdi, [rip + 0x83ed]
0x1040e:	mov	edx, 0xd8
0x10413:	call	0x2be0


0x10371:	mov	rbp, rax
0x10374:	mov	dword ptr [rbp], r12d
0x10378:	mov	eax, 0xffffffff
0x1037d:	jmp	0x10345


0x103c8:	test	eax, eax
0x103ca:	jne	0x103d7


0x103cc:	mov	dword ptr [rbx], 1
0x103d2:	jmp	0x10345


0x103d7:	call	0x2950


0x103dc:	mov	edi, dword ptr [rbx + 4]
0x103df:	mov	r12d, dword ptr [rax]
0x103e2:	mov	rbp, rax
0x103e5:	call	0x2c30


0x103ea:	mov	dword ptr [rbx], 4
0x103f0:	mov	dword ptr [rbx + 4], r12d
0x103f4:	jmp	0x10374


0x10374:	mov	dword ptr [rbp], r12d
0x10378:	mov	eax, 0xffffffff
0x1037d:	jmp	0x10345


0x11cbe:	push	r15
0x11cc0:	jmp	0x11c66


0x11c66:	push	r14
0x11c68:	mov	rdx, rax
0x11c6b:	mov	r9, r13
0x11c6e:	mov	r8, r12
0x11c71:	mov	rcx, rbx
0x11c74:	mov	rdi, rbp
0x11c77:	mov	esi, 1
0x11c7c:	xor	eax, eax
0x11c7e:	call	0x3050


0x11c83:	pop	rax
0x11c84:	pop	rdx
0x11c85:	add	rsp, 0x28
0x11c89:	pop	rbx
0x11c8a:	pop	rbp
0x11c8b:	pop	r12
0x11c8d:	pop	r13
0x11c8f:	pop	r14
0x11c91:	pop	r15
0x11c93:	ret	


0x11d67:	push	r13
0x11d69:	push	r12
0x11d6b:	push	r15
0x11d6d:	push	r14
0x11d6f:	mov	r9, qword ptr [rsp + 0x28]
0x11d74:	jmp	0x11d03


0x11d03:	mov	r8, qword ptr [rsp + 0x20]
0x11d08:	mov	rcx, rbx
0x11d0b:	mov	rdx, rax
0x11d0e:	mov	rdi, rbp
0x11d11:	mov	esi, 1
0x11d16:	xor	eax, eax
0x11d18:	call	0x3050


0x11d1d:	add	rsp, 0x20
0x11d21:	add	rsp, 0x28
0x11d25:	pop	rbx
0x11d26:	pop	rbp
0x11d27:	pop	r12
0x11d29:	pop	r13
0x11d2b:	pop	r14
0x11d2d:	pop	r15
0x11d2f:	ret	


0x11c0e:	add	rsp, 0x28
0x11c12:	mov	r9, r13
0x11c15:	mov	r8, r12
0x11c18:	mov	rcx, rbx
0x11c1b:	mov	rdi, rbp
0x11c1e:	mov	rdx, rax
0x11c21:	pop	rbx
0x11c22:	pop	rbp
0x11c23:	pop	r12
0x11c25:	pop	r13
0x11c27:	pop	r14
0x11c29:	pop	r15
0x11c2b:	mov	esi, 1
0x11c30:	xor	eax, eax
0x11c32:	jmp	0x3050


0x11cf6:	sub	rsp, 8
0x11cfa:	mov	r9, r13
0x11cfd:	push	r12
0x11cff:	push	r15
0x11d01:	push	r14
0x11d03:	mov	r8, qword ptr [rsp + 0x20]
0x11d08:	mov	rcx, rbx
0x11d0b:	mov	rdx, rax
0x11d0e:	mov	rdi, rbp
0x11d11:	mov	esi, 1
0x11d16:	xor	eax, eax
0x11d18:	call	0x3050


0x11bc2:	add	rsp, 0x28
0x11bc6:	mov	r8, r12
0x11bc9:	mov	rcx, rbx
0x11bcc:	mov	rdi, rbp
0x11bcf:	mov	rdx, rax
0x11bd2:	mov	esi, 1
0x11bd7:	pop	rbx
0x11bd8:	pop	rbp
0x11bd9:	pop	r12
0x11bdb:	pop	r13
0x11bdd:	pop	r14
0x11bdf:	pop	r15
0x11be1:	xor	eax, eax
0x11be3:	jmp	0x3050


0x11b7e:	add	rsp, 0x28
0x11b82:	mov	rcx, rbx
0x11b85:	mov	rdi, rbp
0x11b88:	pop	rbx
0x11b89:	pop	rbp
0x11b8a:	pop	r12
0x11b8c:	pop	r13
0x11b8e:	pop	r14
0x11b90:	pop	r15
0x11b92:	mov	rdx, rax
0x11b95:	mov	esi, 1
0x11b9a:	xor	eax, eax
0x11b9c:	jmp	0x3050


0x11aa0:	sub	rsp, 8
0x11aa4:	mov	r9, qword ptr [rsp + 0x18]
0x11aa9:	mov	rdx, rax
0x11aac:	mov	rcx, rbx
0x11aaf:	mov	esi, 1
0x11ab4:	mov	rdi, rbp
0x11ab7:	xor	eax, eax
0x11ab9:	push	r9
0x11abb:	push	r13
0x11abd:	push	r12
0x11abf:	push	r15
0x11ac1:	push	r14
0x11ac3:	mov	r9, qword ptr [rsp + 0x30]
0x11ac8:	mov	r8, qword ptr [rsp + 0x38]
0x11acd:	call	0x3050


0x11c62:	sub	rsp, 8
0x11c66:	push	r14
0x11c68:	mov	rdx, rax
0x11c6b:	mov	r9, r13
0x11c6e:	mov	r8, r12
0x11c71:	mov	rcx, rbx
0x11c74:	mov	rdi, rbp
0x11c77:	mov	esi, 1
0x11c7c:	xor	eax, eax
0x11c7e:	call	0x3050


0x103b1:	mov	eax, dword ptr [rsp + 4]
0x103b5:	movzx	eax, ah
0x103b8:	jmp	0x10345


0x1481d:	pop	rsi
0x1481e:	pop	rdi
0x1481f:	mov	r10, qword ptr [rbp - 0x430]
0x14826:	mov	ecx, dword ptr [rbp - 0x3bc]
0x1482c:	test	ecx, ecx
0x1482e:	js	0x1496c


0x1496c:	mov	rdi, qword ptr [rbp - 0x3f8]
0x14973:	cmp	byte ptr [rdi + 1], 0
0x14977:	jne	0x14cb8


0x14834:	movsxd	rdx, ecx
0x14837:	cmp	rdx, r10
0x1483a:	jae	0x1484a


0x1497d:	test	eax, eax
0x1497f:	jns	0x1484e


0x14cb8:	mov	byte ptr [rdi + 1], 0
0x14cbc:	jmp	0x14770


0x1483c:	add	rdx, r15
0x1483f:	cmp	byte ptr [rdx + r14], 0
0x14844:	jne	0x15186


0x1484a:	cmp	ecx, eax
0x1484c:	jge	0x14856


0x14985:	mov	rax, qword ptr [rbp - 0x3c8]
0x1498c:	mov	ebx, dword ptr [rax]
0x1498e:	test	ebx, ebx
0x14990:	jne	0x149b0


0x1484e:	mov	dword ptr [rbp - 0x3bc], eax
0x14854:	mov	ecx, eax
0x14856:	lea	eax, [rcx + 1]
0x14859:	cmp	rax, r10
0x1485c:	jb	0x15090


0x14770:	mov	rax, qword ptr [rbp - 0x3c8]
0x14777:	mov	rbx, r12
0x1477a:	mov	r10d, 0x7fffffff
0x14780:	sub	rbx, r14
0x14783:	mov	dword ptr [rbp - 0x3bc], 0xffffffff
0x1478d:	cmp	rbx, 0x7fffffff
0x14794:	mov	dword ptr [rax], 0
0x1479a:	mov	eax, dword ptr [rbp - 0x3d0]
0x147a0:	cmovbe	r10, rbx
0x147a4:	cmp	eax, 0x11
0x147a7:	ja	0x15186


0x14856:	lea	eax, [rcx + 1]
0x14859:	cmp	rax, r10
0x1485c:	jb	0x15090


0x14992:	movzx	eax, byte ptr [r13 + 0x48]
0x14997:	mov	ebx, 0x16
0x1499c:	and	eax, 0xffffffef
0x1499f:	cmp	al, 0x63
0x149a1:	mov	eax, 0x54
0x149a6:	cmove	ebx, eax
0x149a9:	nop	dword ptr [rax]
0x149b0:	cmp	r15, qword ptr [rbp - 0x3e8]
0x149b7:	je	0x149c2


0x149b0:	cmp	r15, qword ptr [rbp - 0x3e8]
0x149b7:	je	0x149c2


0x15090:	mov	rax, qword ptr [rbp - 0x3c8]
0x15097:	mov	edi, dword ptr [rbp - 0x424]
0x1509d:	movsxd	rbx, ecx
0x150a0:	add	rbx, r14
0x150a3:	mov	dword ptr [rax], edi
0x150a5:	jmp	0x14cf4


0x14862:	cmp	rbx, 0x7ffffffe
0x14869:	ja	0x150b0


0x149c2:	mov	rax, qword ptr [rbp - 0x420]
0x149c9:	test	rax, rax
0x149cc:	je	0x149d6


0x149b9:	test	r15, r15
0x149bc:	jne	0x1516c


0x1486f:	lea	rsi, [r12 + r12]
0x14873:	lea	edx, [rcx + 2]
0x14876:	test	r12, r12
0x14879:	mov	rax, -1
0x14880:	cmovns	rax, rsi
0x14884:	add	rdx, r14
0x14887:	jb	0x15348


0x150b0:	cmp	r15, qword ptr [rbp - 0x3e8]
0x150b7:	je	0x150c2


0x149d6:	mov	rax, qword ptr [rbp - 0x408]
0x149dd:	mov	rdi, qword ptr [rbp - 0x2b8]
0x149e4:	add	rax, 0x20
0x149e8:	cmp	rdi, rax
0x149eb:	je	0x149f2


0x149ce:	mov	rdi, rax
0x149d1:	call	0x30d0


0x1516c:	mov	rdi, r15
0x1516f:	call	0x30d0


0x15348:	cmp	r12, -1
0x1534c:	je	0x14770


0x1488d:	cmp	rax, rdx
0x14890:	cmovb	rax, rdx
0x14894:	cmp	r12, rax
0x14897:	jae	0x14770


0x150c2:	mov	rax, qword ptr [rbp - 0x420]
0x150c9:	test	rax, rax
0x150cc:	je	0x150d6


0x150b9:	test	r15, r15
0x150bc:	jne	0x15179


0x149f2:	mov	rax, qword ptr [rbp - 0x410]
0x149f9:	mov	rdi, qword ptr [rbp - 0x3a8]
0x14a00:	add	rax, 0x10
0x14a04:	cmp	rdi, rax
0x14a07:	je	0x14a0e


0x149ed:	call	0x30d0


0x15352:	jmp	0x143d1


0x1489d:	test	r12, r12
0x148a0:	js	0x143d1


0x150d6:	mov	rax, qword ptr [rbp - 0x408]
0x150dd:	mov	rdi, qword ptr [rbp - 0x2b8]
0x150e4:	add	rax, 0x20
0x150e8:	cmp	rdi, rax
0x150eb:	je	0x150f2


0x150ce:	mov	rdi, rax
0x150d1:	call	0x30d0


0x15179:	mov	rdi, r15
0x1517c:	call	0x30d0


0x14a0e:	mov	rax, qword ptr [rbp - 0x3c8]
0x14a15:	xor	r15d, r15d
0x14a18:	mov	dword ptr [rax], ebx
0x14a1a:	jmp	0x1443f


0x14a09:	call	0x30d0


0x143d1:	cmp	r15, qword ptr [rbp - 0x3e8]
0x143d8:	je	0x143e3


0x148a6:	cmp	rsi, rax
0x148a9:	mov	r12, rsi
0x148ac:	jae	0x148bb


0x150f2:	mov	rax, qword ptr [rbp - 0x410]
0x150f9:	mov	rdi, qword ptr [rbp - 0x3a8]
0x15100:	add	rax, 0x10
0x15104:	cmp	rdi, rax
0x15107:	je	0x1510e


0x150ed:	call	0x30d0


0x148ae:	cmp	rax, -1
0x148b2:	je	0x143d1


0x148bb:	cmp	r15, qword ptr [rbp - 0x3e8]
0x148c2:	sete	bl
0x148c5:	test	r15, r15
0x148c8:	je	0x14c50


0x1510e:	mov	rax, qword ptr [rbp - 0x3c8]
0x15115:	xor	r15d, r15d
0x15118:	mov	dword ptr [rax], 0x4b
0x1511e:	jmp	0x1443f


0x15109:	call	0x30d0


0x148b8:	mov	r12, rax
0x148bb:	cmp	r15, qword ptr [rbp - 0x3e8]
0x148c2:	sete	bl
0x148c5:	test	r15, r15
0x148c8:	je	0x14c50


0x14c50:	mov	rdi, r12
0x14c53:	call	0x2df0


0x148ce:	test	bl, bl
0x148d0:	jne	0x14c50


0x148d6:	mov	rsi, r12
0x148d9:	mov	rdi, r15
0x148dc:	call	0x2e90


0x148e1:	test	rax, rax
0x148e4:	je	0x143d1


0x148ea:	mov	r15, rax
0x148ed:	jmp	0x14770


0x14c58:	test	rax, rax
0x14c5b:	mov	rcx, rax
0x14c5e:	je	0x143d1


0x14c64:	test	r14, r14
0x14c67:	je	0x14d20


0x14d20:	mov	r15, rcx
0x14d23:	jmp	0x14770


0x14c6d:	test	bl, bl
0x14c6f:	je	0x14d20


0x14c75:	mov	rsi, r15
0x14c78:	mov	rdx, r14
0x14c7b:	mov	rdi, rax
0x14c7e:	call	0x2d80


0x14c83:	mov	r15, rax
0x14c86:	jmp	0x14770


0x15181:	jmp	0x150c2


0x15174:	jmp	0x149c2


0x14bd6:	add	rsp, 0x20
0x14bda:	mov	r10, qword ptr [rbp - 0x430]
0x14be1:	jmp	0x14826


0x14826:	mov	ecx, dword ptr [rbp - 0x3bc]
0x1482c:	test	ecx, ecx
0x1482e:	js	0x1496c


0x14efe:	mov	r10, qword ptr [rbp - 0x430]
0x14f05:	jmp	0x14826


0x14b13:	pop	r8
0x14b15:	mov	r10, qword ptr [rbp - 0x430]
0x14b1c:	pop	r9
0x14b1e:	jmp	0x14826


0x14955:	pop	rdx
0x14956:	pop	rcx
0x14957:	mov	ecx, dword ptr [rbp - 0x3bc]
0x1495d:	mov	r10, qword ptr [rbp - 0x430]
0x14964:	test	ecx, ecx
0x14966:	jns	0x14834


0x14a92:	add	rsp, 0x30
0x14a96:	mov	r10, qword ptr [rbp - 0x430]
0x14a9d:	jmp	0x14826


0xe6e0:	sub	rsp, 8
0xe6e4:	mov	rcx, rbp
0xe6e7:	mov	rsi, r13
0xe6ea:	push	qword ptr [rsp + 0x68]
0xe6ee:	push	qword ptr [rsp + 0x78]
0xe6f2:	mov	rdi, r14
0xe6f5:	push	0
0xe6f7:	mov	r9d, dword ptr [rsp + 0x98]
0xe6ff:	mov	r8d, dword ptr [rsp + 0x28]
0xe704:	mov	rdx, qword ptr [rsp + 0x30]
0xe709:	and	r9d, 0xfffffffd
0xe70d:	call	0xdb40


0xe712:	add	rsp, 0x20
0xe716:	mov	r15, rax
0xe719:	mov	rbx, qword ptr [rsp + 0xa8]
0xe721:	xor	rbx, qword ptr fs:[0x28]
0xe72a:	mov	rax, r15
0xe72d:	jne	0xed33


0xe733:	add	rsp, 0xb8
0xe73a:	pop	rbx
0xe73b:	pop	rbp
0xe73c:	pop	r12
0xe73e:	pop	r13
0xe740:	pop	r14
0xe742:	pop	r15
0xe744:	ret	


0xed33:	call	0x2b30


0xecdd:	sub	rsp, 8
0xece1:	mov	r8d, 5
0xece7:	mov	rcx, r11
0xecea:	push	qword ptr [rsp + 0x68]
0xecee:	push	qword ptr [rsp + 0x78]
0xecf2:	mov	rdi, r14
0xecf5:	push	qword ptr [rsp + 0x38]
0xecf9:	mov	r9d, dword ptr [rsp + 0x98]
0xed01:	mov	rdx, qword ptr [rsp + 0x30]
0xed06:	mov	rsi, qword ptr [rsp + 0x70]
0xed0b:	call	0xdb40


0xed10:	add	rsp, 0x20
0xed14:	mov	r15, rax
0xed17:	jmp	0xe719


0xe719:	mov	rbx, qword ptr [rsp + 0xa8]
0xe721:	xor	rbx, qword ptr fs:[0x28]
0xe72a:	mov	rax, r15
0xe72d:	jne	0xed33


0x28e0:	push	qword ptr [rip + 0x21a2ea]
0x28e6:	jmp	qword ptr [rip + 0x21a2ec]


0x28ec:	nop	dword ptr [rax]


0x28f6:	push	0
0x28fb:	jmp	0x28e0


0x2906:	push	1
0x290b:	jmp	0x28e0


0x2916:	push	2
0x291b:	jmp	0x28e0


0x2926:	push	3
0x292b:	jmp	0x28e0


0x2936:	push	4
0x293b:	jmp	0x28e0


0x2946:	push	5
0x294b:	jmp	0x28e0


0x2956:	push	6
0x295b:	jmp	0x28e0


0x2966:	push	7
0x296b:	jmp	0x28e0


0x2976:	push	8
0x297b:	jmp	0x28e0


0x2986:	push	9
0x298b:	jmp	0x28e0


0x2996:	push	0xa
0x299b:	jmp	0x28e0


0x29a6:	push	0xb
0x29ab:	jmp	0x28e0


0x29b6:	push	0xc
0x29bb:	jmp	0x28e0


0x29c6:	push	0xd
0x29cb:	jmp	0x28e0


0x29d6:	push	0xe
0x29db:	jmp	0x28e0


0x29e6:	push	0xf
0x29eb:	jmp	0x28e0


0x29f6:	push	0x10
0x29fb:	jmp	0x28e0


0x2a06:	push	0x11
0x2a0b:	jmp	0x28e0


0x2a16:	push	0x12
0x2a1b:	jmp	0x28e0


0x2a26:	push	0x13
0x2a2b:	jmp	0x28e0


0x2a36:	push	0x14
0x2a3b:	jmp	0x28e0


0x2a46:	push	0x15
0x2a4b:	jmp	0x28e0


0x2a56:	push	0x16
0x2a5b:	jmp	0x28e0


0x2a66:	push	0x17
0x2a6b:	jmp	0x28e0


0x2a76:	push	0x18
0x2a7b:	jmp	0x28e0


0x2a86:	push	0x19
0x2a8b:	jmp	0x28e0


0x2a96:	push	0x1a
0x2a9b:	jmp	0x28e0


0x2aa6:	push	0x1b
0x2aab:	jmp	0x28e0


0x2ab6:	push	0x1c
0x2abb:	jmp	0x28e0


0x2ac6:	push	0x1d
0x2acb:	jmp	0x28e0


0x2ad6:	push	0x1e
0x2adb:	jmp	0x28e0


0x2ae6:	push	0x1f
0x2aeb:	jmp	0x28e0


0x2af6:	push	0x20
0x2afb:	jmp	0x28e0


0x2b06:	push	0x21
0x2b0b:	jmp	0x28e0


0x2b16:	push	0x22
0x2b1b:	jmp	0x28e0


0x2b26:	push	0x23
0x2b2b:	jmp	0x28e0


0x2b36:	push	0x24
0x2b3b:	jmp	0x28e0


0x2b46:	push	0x25
0x2b4b:	jmp	0x28e0


0x2b56:	push	0x26
0x2b5b:	jmp	0x28e0


0x2b66:	push	0x27
0x2b6b:	jmp	0x28e0


0x2b76:	push	0x28
0x2b7b:	jmp	0x28e0


0x2b86:	push	0x29
0x2b8b:	jmp	0x28e0


0x2b96:	push	0x2a
0x2b9b:	jmp	0x28e0


0x2ba6:	push	0x2b
0x2bab:	jmp	0x28e0


0x2bb6:	push	0x2c
0x2bbb:	jmp	0x28e0


0x2bc6:	push	0x2d
0x2bcb:	jmp	0x28e0


0x2bd6:	push	0x2e
0x2bdb:	jmp	0x28e0


0x2be6:	push	0x2f
0x2beb:	jmp	0x28e0


0x2bf6:	push	0x30
0x2bfb:	jmp	0x28e0


0x2c06:	push	0x31
0x2c0b:	jmp	0x28e0


0x2c16:	push	0x32
0x2c1b:	jmp	0x28e0


0x2c26:	push	0x33
0x2c2b:	jmp	0x28e0


0x2c36:	push	0x34
0x2c3b:	jmp	0x28e0


0x2c46:	push	0x35
0x2c4b:	jmp	0x28e0


0x2c56:	push	0x36
0x2c5b:	jmp	0x28e0


0x2c66:	push	0x37
0x2c6b:	jmp	0x28e0


0x2c76:	push	0x38
0x2c7b:	jmp	0x28e0


0x2c86:	push	0x39
0x2c8b:	jmp	0x28e0


0x2c96:	push	0x3a
0x2c9b:	jmp	0x28e0


0x2ca6:	push	0x3b
0x2cab:	jmp	0x28e0


0x2cb6:	push	0x3c
0x2cbb:	jmp	0x28e0


0x2cc6:	push	0x3d
0x2ccb:	jmp	0x28e0


0x2cd6:	push	0x3e
0x2cdb:	jmp	0x28e0


0x2ce6:	push	0x3f
0x2ceb:	jmp	0x28e0


0x2cf6:	push	0x40
0x2cfb:	jmp	0x28e0


0x2d06:	push	0x41
0x2d0b:	jmp	0x28e0


0x2d16:	push	0x42
0x2d1b:	jmp	0x28e0


0x2d26:	push	0x43
0x2d2b:	jmp	0x28e0


0x2d36:	push	0x44
0x2d3b:	jmp	0x28e0


0x2d46:	push	0x45
0x2d4b:	jmp	0x28e0


0x2d56:	push	0x46
0x2d5b:	jmp	0x28e0


0x2d66:	push	0x47
0x2d6b:	jmp	0x28e0


0x2d76:	push	0x48
0x2d7b:	jmp	0x28e0


0x2d86:	push	0x49
0x2d8b:	jmp	0x28e0


0x2d96:	push	0x4a
0x2d9b:	jmp	0x28e0


0x2da6:	push	0x4b
0x2dab:	jmp	0x28e0


0x2db6:	push	0x4c
0x2dbb:	jmp	0x28e0


0x2dc6:	push	0x4d
0x2dcb:	jmp	0x28e0


0x2dd6:	push	0x4e
0x2ddb:	jmp	0x28e0


0x2de6:	push	0x4f
0x2deb:	jmp	0x28e0


0x2df6:	push	0x50
0x2dfb:	jmp	0x28e0


0x2e06:	push	0x51
0x2e0b:	jmp	0x28e0


0x2e16:	push	0x52
0x2e1b:	jmp	0x28e0


0x2e26:	push	0x53
0x2e2b:	jmp	0x28e0


0x2e36:	push	0x54
0x2e3b:	jmp	0x28e0


0x2e46:	push	0x55
0x2e4b:	jmp	0x28e0


0x2e56:	push	0x56
0x2e5b:	jmp	0x28e0


0x2e66:	push	0x57
0x2e6b:	jmp	0x28e0


0x2e76:	push	0x58
0x2e7b:	jmp	0x28e0


0x2e86:	push	0x59
0x2e8b:	jmp	0x28e0


0x2e96:	push	0x5a
0x2e9b:	jmp	0x28e0


0x2ea6:	push	0x5b
0x2eab:	jmp	0x28e0


0x2eb6:	push	0x5c
0x2ebb:	jmp	0x28e0


0x2ec6:	push	0x5d
0x2ecb:	jmp	0x28e0


0x2ed6:	push	0x5e
0x2edb:	jmp	0x28e0


0x2ee6:	push	0x5f
0x2eeb:	jmp	0x28e0


0x2ef6:	push	0x60
0x2efb:	jmp	0x28e0


0x2f06:	push	0x61
0x2f0b:	jmp	0x28e0


0x2f16:	push	0x62
0x2f1b:	jmp	0x28e0


0x2f26:	push	0x63
0x2f2b:	jmp	0x28e0


0x2f36:	push	0x64
0x2f3b:	jmp	0x28e0


0x2f46:	push	0x65
0x2f4b:	jmp	0x28e0


0x2f56:	push	0x66
0x2f5b:	jmp	0x28e0


0x2f66:	push	0x67
0x2f6b:	jmp	0x28e0


0x2f76:	push	0x68
0x2f7b:	jmp	0x28e0


0x2f86:	push	0x69
0x2f8b:	jmp	0x28e0


0x2f96:	push	0x6a
0x2f9b:	jmp	0x28e0


0x2fa6:	push	0x6b
0x2fab:	jmp	0x28e0


0x2fb6:	push	0x6c
0x2fbb:	jmp	0x28e0


0x2fc6:	push	0x6d
0x2fcb:	jmp	0x28e0


0x2fd6:	push	0x6e
0x2fdb:	jmp	0x28e0


0x2fe6:	push	0x6f
0x2feb:	jmp	0x28e0


0x2ff6:	push	0x70
0x2ffb:	jmp	0x28e0


0x3006:	push	0x71
0x300b:	jmp	0x28e0


0x3016:	push	0x72
0x301b:	jmp	0x28e0


0x3026:	push	0x73
0x302b:	jmp	0x28e0


0x3036:	push	0x74
0x303b:	jmp	0x28e0


0x3046:	push	0x75
0x304b:	jmp	0x28e0


0x3056:	push	0x76
0x305b:	jmp	0x28e0


0x3060:	jmp	qword ptr [rip + 0x219f32]




0x3066:	push	0x77
0x306b:	jmp	0x28e0


0x3076:	push	0x78
0x307b:	jmp	0x28e0


0x3086:	push	0x79
0x308b:	jmp	0x28e0


0x3090:	jmp	qword ptr [rip + 0x219f1a]




0x3096:	push	0x7a
0x309b:	jmp	0x28e0


0x30a6:	push	0x7b
0x30ab:	jmp	0x28e0


0x30b6:	push	0x7c
0x30bb:	jmp	0x28e0


0x30c6:	push	0x7d
0x30cb:	jmp	0x28e0


0x30d6:	nop	


0x3e5a:	hlt	


0x3e5b:	nop	dword ptr [rax + rax]


0x3e92:	nop	dword ptr [rax]
0x3e96:	nop	word ptr cs:[rax + rax]


0x3ee2:	nop	dword ptr [rax]
0x3ee6:	nop	word ptr cs:[rax + rax]


0x3f2a:	nop	word ptr [rax + rax]


0x3f3a:	nop	word ptr [rax + rax]


0x4112:	nop	dword ptr [rax]
0x4116:	nop	word ptr cs:[rax + rax]


0x4185:	nop	
0x4186:	nop	word ptr cs:[rax + rax]


0x41c9:	nop	dword ptr [rax]


0x41e2:	nop	dword ptr [rax]
0x41e6:	nop	word ptr cs:[rax + rax]


0x4251:	nop	dword ptr [rax + rax]
0x4256:	nop	word ptr cs:[rax + rax]


0x491a:	nop	word ptr [rax + rax]


0x4d6a:	nop	word ptr [rax + rax]


0x4e84:	nop	word ptr cs:[rax + rax]
0x4e8e:	nop	


0x4ed4:	nop	
0x4ed6:	nop	word ptr cs:[rax + rax]


0x4f85:	nop	
0x4f86:	nop	word ptr cs:[rax + rax]


0x4fc7:	nop	word ptr [rax + rax]


0x5086:	nop	word ptr cs:[rax + rax]


0x5195:	nop	
0x5196:	nop	word ptr cs:[rax + rax]


0x52eb:	nop	dword ptr [rax + rax]


0x53ae:	nop	


0x57be:	nop	


0x5905:	nop	
0x5906:	nop	word ptr cs:[rax + rax]


0x593b:	nop	dword ptr [rax + rax]


0x596b:	nop	dword ptr [rax + rax]


0x59a4:	nop	
0x59a6:	nop	word ptr cs:[rax + rax]


0x59d4:	nop	
0x59d6:	nop	word ptr cs:[rax + rax]


0x5bec:	nop	dword ptr [rax]


0x5c1a:	nop	word ptr [rax + rax]


0x9d2c:	nop	dword ptr [rax]


0x9e95:	nop	word ptr cs:[rax + rax]
0x9e9f:	nop	


0x9eac:	nop	dword ptr [rax]


0x9ecc:	nop	dword ptr [rax]


0x9ee6:	nop	word ptr cs:[rax + rax]


0x9f5a:	nop	word ptr [rax + rax]


0x9fb9:	nop	dword ptr [rax]


0xa039:	nop	dword ptr [rax]


0xa07b:	nop	dword ptr [rax + rax]


0xa08c:	nop	dword ptr [rax]


0xa0ba:	nop	word ptr [rax + rax]


0xa3cd:	nop	dword ptr [rax]


0xa3e8:	nop	dword ptr [rax + rax]


0xa448:	nop	dword ptr [rax + rax]


0xa461:	nop	dword ptr [rax + rax]
0xa466:	nop	word ptr cs:[rax + rax]


0xa5d1:	nop	dword ptr [rax + rax]
0xa5d6:	nop	word ptr cs:[rax + rax]


0xa732:	nop	word ptr cs:[rax + rax]
0xa73c:	nop	dword ptr [rax]


0xa7cc:	nop	dword ptr [rax]


0xa90f:	nop	


0xa956:	nop	word ptr cs:[rax + rax]


0xaf72:	nop	word ptr cs:[rax + rax]
0xaf7c:	nop	dword ptr [rax]


0xaf8a:	nop	word ptr [rax + rax]


0xafc3:	nop	dword ptr [rax]
0xafc6:	nop	word ptr cs:[rax + rax]


0xafea:	nop	word ptr [rax + rax]


0xb006:	nop	word ptr cs:[rax + rax]


0xb05a:	nop	word ptr [rax + rax]


0xb0d8:	nop	dword ptr [rax + rax]


0xb1e7:	nop	word ptr [rax + rax]


0xb1f8:	nop	dword ptr [rax + rax]


0xb208:	nop	dword ptr [rax + rax]


0xb2b4:	nop	word ptr cs:[rax + rax]
0xb2be:	nop	


0xb2d8:	nop	dword ptr [rax + rax]


0xb33d:	nop	dword ptr [rax]


0xb39a:	nop	word ptr [rax + rax]


0xb3fc:	nop	dword ptr [rax]


0xb447:	nop	word ptr [rax + rax]


0xb455:	nop	
0xb456:	nop	word ptr cs:[rax + rax]


0xb482:	nop	word ptr cs:[rax + rax]
0xb48c:	nop	dword ptr [rax]


0xb4fe:	nop	


0xb587:	nop	word ptr [rax + rax]


0xb5e6:	nop	word ptr cs:[rax + rax]


0xb773:	nop	dword ptr [rax]
0xb776:	nop	word ptr cs:[rax + rax]


0xb788:	nop	dword ptr [rax + rax]


0xb7a8:	nop	dword ptr [rax + rax]


0xb8af:	nop	


0xb926:	nop	word ptr cs:[rax + rax]


0xb9a6:	nop	word ptr cs:[rax + rax]


0xba43:	nop	dword ptr [rax]
0xba46:	nop	word ptr cs:[rax + rax]


0xba67:	nop	word ptr [rax + rax]


0xba92:	nop	dword ptr [rax]
0xba96:	nop	word ptr cs:[rax + rax]


0xbbbe:	nop	


0xbc37:	nop	word ptr [rax + rax]


0xbd85:	nop	
0xbd86:	nop	word ptr cs:[rax + rax]


0xbd95:	nop	
0xbd96:	nop	word ptr cs:[rax + rax]


0xbda5:	nop	
0xbda6:	nop	word ptr cs:[rax + rax]


0xbdf9:	nop	dword ptr [rax]


0xbe58:	nop	dword ptr [rax + rax]


0xbfa7:	nop	word ptr [rax + rax]


0xc00b:	nop	dword ptr [rax + rax]


0xc051:	nop	dword ptr [rax + rax]
0xc056:	nop	word ptr cs:[rax + rax]


0xc0d2:	nop	dword ptr [rax]
0xc0d6:	nop	word ptr cs:[rax + rax]


0xc145:	nop	
0xc146:	nop	word ptr cs:[rax + rax]


0xc1ba:	nop	word ptr [rax + rax]


0xc1f1:	nop	dword ptr [rax + rax]
0xc1f6:	nop	word ptr cs:[rax + rax]


0xc3d4:	nop	
0xc3d6:	nop	word ptr cs:[rax + rax]


0xc546:	nop	word ptr cs:[rax + rax]


0xc78e:	nop	


0xca14:	nop	
0xca16:	nop	word ptr cs:[rax + rax]


0xca79:	nop	dword ptr [rax]


0xcc83:	nop	word ptr cs:[rax + rax]
0xcc8d:	nop	dword ptr [rax]


0xccb7:	nop	word ptr [rax + rax]


0xcccd:	nop	dword ptr [rax]


0xccfe:	nop	


0xcd33:	nop	dword ptr [rax]
0xcd36:	nop	word ptr cs:[rax + rax]


0xcd55:	nop	word ptr cs:[rax + rax]
0xcd5f:	nop	


0xcec8:	nop	dword ptr [rax + rax]


0xd299:	nop	dword ptr [rax]


0xd4c8:	movzx	r8d, r8b
0xd4cc:	movsxd	r8, dword ptr [rbp + r8*4]
0xd4d1:	add	r8, rbp
0xd4d4:	jmp	r8


0xd4e8:	add	rcx, 1
0xd4ec:	movzx	edx, byte ptr [rcx]
0xd4ef:	lea	r8d, [rdx - 0x58]
0xd4f3:	cmp	r8b, 0x20
0xd4f7:	jbe	0xd4c8


0xd649:	nop	dword ptr [rax]


0xd6d9:	nop	dword ptr [rax]


0xd84d:	nop	dword ptr [rax]


0xd96f:	nop	


0xd9e4:	nop	word ptr cs:[rax + rax]
0xd9ee:	nop	


0xda44:	nop	word ptr cs:[rax + rax]
0xda4e:	nop	


0xdb37:	nop	word ptr [rax + rax]


0xdbd3:	mov	byte ptr [rsp + 0xe], 1
0xdbd8:	mov	byte ptr [rsp + 0x7c], 0
0xdbdd:	xor	r12d, r12d
0xdbe0:	mov	qword ptr [rsp + 0x50], 0
0xdbe9:	mov	byte ptr [rsp + 0xf], 1
0xdbee:	mov	byte ptr [rsp + 0xd], 0
0xdbf3:	lea	rax, [rip + 0xa72b]
0xdbfa:	mov	qword ptr [rsp + 0x18], 1
0xdc03:	xor	r15d, r15d
0xdc06:	mov	dword ptr [rsp + 8], 2
0xdc0e:	mov	qword ptr [rsp + 0x48], rax
0xdc13:	xor	r11d, r11d
0xdc16:	mov	rax, rbp
0xdc19:	mov	r8d, r12d
0xdc1c:	mov	rbp, r11
0xdc1f:	mov	r11, rax
0xdc22:	nop	word ptr [rax + rax]
0xdc28:	cmp	r11, rbp
0xdc2b:	setne	r12b
0xdc2f:	cmp	r11, -1
0xdc33:	jne	0xdc42


0xdc35:	mov	rax, qword ptr [rsp + 0x10]
0xdc3a:	cmp	byte ptr [rax + rbp], 0
0xdc3e:	setne	r12b
0xdc42:	test	r12b, r12b
0xdc45:	je	0xe2a0


0xdc42:	test	r12b, r12b
0xdc45:	je	0xe2a0


0xe2a0:	cmp	dword ptr [rsp + 8], 2
0xe2a5:	movzx	ebx, byte ptr [rsp + 0xf]
0xe2aa:	mov	r12d, r8d
0xe2ad:	mov	rbp, r11
0xe2b0:	sete	dl
0xe2b3:	mov	eax, ebx
0xe2b5:	test	r15, r15
0xe2b8:	sete	cl
0xe2bb:	and	eax, edx
0xe2bd:	and	al, cl
0xe2bf:	jne	0xed26


0xdc4b:	cmp	dword ptr [rsp + 8], 2
0xdc50:	mov	rdi, qword ptr [rsp + 0x10]
0xdc55:	lea	r9, [rdi + rbp]
0xdc59:	setne	al
0xdc5c:	and	al, byte ptr [rsp + 0xd]
0xdc60:	mov	r10d, eax
0xdc63:	je	0xdd10


0xe2c5:	mov	eax, ebx
0xe2c7:	xor	eax, 1
0xe2ca:	and	dl, al
0xe2cc:	je	0xec3c


0xed26:	mov	dword ptr [rsp + 8], 2
0xed2e:	jmp	0xe6c9


0xdd10:	movzx	ebx, byte ptr [r9]
0xdd14:	cmp	bl, 0x7e
0xdd17:	ja	0xe038


0xdc69:	mov	rax, qword ptr [rsp + 0x18]
0xdc6e:	test	rax, rax
0xdc71:	je	0xe0a0


0xec3c:	mov	rbx, qword ptr [rsp + 0x48]
0xec41:	test	rbx, rbx
0xec44:	je	0xec72


0xe2d2:	cmp	byte ptr [rsp + 0x7c], 0
0xe2d7:	je	0xec3a


0xe6c9:	cmp	byte ptr [rsp + 0xd], 0
0xe6ce:	je	0xe6e0


0xdd1d:	lea	rcx, [rip + 0xa688]
0xdd24:	movzx	edx, bl
0xdd27:	movsxd	rax, dword ptr [rcx + rdx*4]
0xdd2b:	add	rax, rcx
0xdd2e:	jmp	rax


0xe038:	cmp	qword ptr [rsp + 0x58], 1
0xe03e:	jne	0xe3e8


0xe0a0:	movzx	ebx, byte ptr [r9]
0xe0a4:	cmp	bl, 0x7e
0xe0a7:	ja	0xe030


0xdc77:	cmp	r11, -1
0xdc7b:	lea	rbx, [rbp + rax]
0xdc80:	jne	0xdcb0


0xec72:	cmp	r13, r15
0xec75:	jbe	0xe719


0xec46:	test	al, al
0xec48:	je	0xec72


0xec3a:	mov	eax, edx
0xec3c:	mov	rbx, qword ptr [rsp + 0x48]
0xec41:	test	rbx, rbx
0xec44:	je	0xec72


0xe2dd:	cmp	byte ptr [rsp + 0xe], 0
0xe2e2:	jne	0xecdd


0xe6d0:	test	al, al
0xe6d2:	mov	eax, 4
0xe6d7:	cmove	eax, dword ptr [rsp + 8]
0xe6dc:	mov	dword ptr [rsp + 8], eax


0xe044:	mov	qword ptr [rsp + 0x38], r11
0xe049:	mov	byte ptr [rsp + 0x30], r8b
0xe04e:	mov	byte ptr [rsp + 0x28], r10b
0xe053:	call	0x30c0


0xe3e8:	lea	rax, [rsp + 0xa0]
0xe3f0:	cmp	r11, -1
0xe3f4:	mov	qword ptr [rsp + 0xa0], 0
0xe400:	mov	qword ptr [rsp + 0x28], rax
0xe405:	jne	0xe434


0xe0a9:	lea	rcx, [rip + 0xa4f8]
0xe0b0:	movzx	edx, bl
0xe0b3:	movsxd	rax, dword ptr [rcx + rdx*4]
0xe0b7:	add	rax, rcx
0xe0ba:	jmp	rax


0xe030:	xor	r10d, r10d
0xe033:	nop	dword ptr [rax + rax]
0xe038:	cmp	qword ptr [rsp + 0x58], 1
0xe03e:	jne	0xe3e8


0xdc82:	cmp	rax, 1
0xdc86:	jbe	0xdcb0


0xdcb0:	cmp	rbx, r11
0xdcb3:	mov	byte ptr [rsp + 0x28], r10b
0xdcb8:	ja	0xe270


0xec7b:	mov	byte ptr [r14 + r15], 0
0xec80:	jmp	0xe719


0xec4a:	movzx	ecx, byte ptr [rbx]
0xec4d:	mov	rax, rbx
0xec50:	test	cl, cl
0xec52:	je	0xec72


0xe2e8:	test	r13, r13
0xe2eb:	sete	al
0xe2ee:	cmp	qword ptr [rsp + 0x50], 0
0xe2f4:	setne	dl
0xe2f7:	and	al, dl
0xe2f9:	je	0xed1c


0xe407:	mov	rdi, qword ptr [rsp + 0x10]
0xe40c:	mov	byte ptr [rsp + 0x40], r8b
0xe411:	mov	byte ptr [rsp + 0x38], r10b
0xe416:	mov	qword ptr [rsp + 0x30], r9
0xe41b:	call	0x2af0


0xe434:	lea	rax, [rsp + 0x9c]
0xe43c:	xor	ecx, ecx
0xe43e:	mov	byte ptr [rsp + 0x7e], bl
0xe442:	mov	byte ptr [rsp + 0x7d], r8b
0xe447:	mov	rbx, rcx
0xe44a:	mov	qword ptr [rsp + 0x88], r9
0xe452:	mov	qword ptr [rsp + 0x38], rax
0xe457:	mov	byte ptr [rsp + 0x7f], r10b
0xe45c:	mov	qword ptr [rsp + 0x80], r15
0xe464:	mov	qword ptr [rsp + 0x40], r14
0xe469:	mov	qword ptr [rsp + 0x70], r13
0xe46e:	mov	qword ptr [rsp + 0x30], r11
0xe473:	mov	rax, qword ptr [rsp + 0x10]
0xe478:	lea	r14, [rbp + rbx]
0xe47d:	mov	rdx, qword ptr [rsp + 0x30]
0xe482:	mov	rcx, qword ptr [rsp + 0x28]
0xe487:	mov	rdi, qword ptr [rsp + 0x38]
0xe48c:	lea	r13, [rax + r14]
0xe490:	sub	rdx, r14
0xe493:	mov	rsi, r13
0xe496:	call	0x12830


0xdc88:	mov	byte ptr [rsp + 0x38], r8b
0xdc8d:	mov	byte ptr [rsp + 0x30], r10b
0xdc92:	mov	qword ptr [rsp + 0x28], r9
0xdc97:	call	0x2af0


0xdcbe:	mov	rdx, qword ptr [rsp + 0x18]
0xdcc3:	mov	rsi, qword ptr [rsp + 0x48]
0xdcc8:	mov	rdi, r9
0xdccb:	mov	qword ptr [rsp + 0x40], r11
0xdcd0:	mov	byte ptr [rsp + 0x38], r8b
0xdcd5:	mov	qword ptr [rsp + 0x30], r9
0xdcda:	call	0x2c90


0xe270:	xor	r10d, r10d
0xe273:	jmp	0xdd10


0xec54:	mov	rdx, r15
0xec57:	sub	rax, r15
0xec5a:	cmp	r13, rdx
0xec5d:	jbe	0xec63


0xed1c:	movzx	eax, byte ptr [rsp + 0x7c]
0xed21:	jmp	0xec3c


0xe2ff:	mov	r13, qword ptr [rsp + 0x50]
0xe304:	lea	rbx, [rip + 0xa01a]
0xe30b:	mov	byte ptr [r14], 0x27
0xe30f:	mov	dword ptr [rsp + 8], 2
0xe317:	mov	r15d, 1
0xe31d:	mov	qword ptr [rsp + 0x18], 1
0xe326:	mov	byte ptr [rsp + 0xf], 0
0xe32b:	mov	qword ptr [rsp + 0x48], rbx
0xe330:	mov	byte ptr [rsp + 0x7c], al
0xe334:	jmp	0xdc13


0xec63:	add	rdx, 1
0xec67:	movzx	ecx, byte ptr [rax + rdx]
0xec6b:	test	cl, cl
0xec6d:	jne	0xec5a


0xec5f:	mov	byte ptr [r14 + rdx], cl
0xec63:	add	rdx, 1
0xec67:	movzx	ecx, byte ptr [rax + rdx]
0xec6b:	test	cl, cl
0xec6d:	jne	0xec5a


0xdc13:	xor	r11d, r11d
0xdc16:	mov	rax, rbp
0xdc19:	mov	r8d, r12d
0xdc1c:	mov	rbp, r11
0xdc1f:	mov	r11, rax
0xdc22:	nop	word ptr [rax + rax]
0xdc28:	cmp	r11, rbp
0xdc2b:	setne	r12b
0xdc2f:	cmp	r11, -1
0xdc33:	jne	0xdc42


0xec6f:	mov	r15, rdx
0xec72:	cmp	r13, r15
0xec75:	jbe	0xe719


0xec5a:	cmp	r13, rdx
0xec5d:	jbe	0xec63


0xdcdf:	test	eax, eax
0xdce1:	mov	r9, qword ptr [rsp + 0x30]
0xdce6:	movzx	r8d, byte ptr [rsp + 0x38]
0xdcec:	mov	r11, qword ptr [rsp + 0x40]
0xdcf1:	jne	0xe270


0xdcf7:	cmp	byte ptr [rsp + 0xf], 0
0xdcfc:	movzx	r10d, byte ptr [rsp + 0x28]
0xdd02:	jne	0xec85


0xec85:	cmp	dword ptr [rsp + 8], 2
0xec8a:	movzx	ebx, byte ptr [rsp + 0xf]
0xec8f:	mov	rbp, r11
0xec92:	sete	al
0xec95:	mov	byte ptr [rsp + 0xd], bl
0xec99:	jmp	0xe6c9


0xe49b:	test	rax, rax
0xe49e:	mov	r15, rax
0xe4a1:	je	0xe4f1


0xe4f1:	mov	edx, r12d
0xe4f4:	mov	rdi, rbx
0xe4f7:	movzx	r8d, byte ptr [rsp + 0x7d]
0xe4fd:	xor	edx, 1
0xe500:	movzx	ebx, byte ptr [rsp + 0x7e]
0xe505:	movzx	r10d, byte ptr [rsp + 0x7f]
0xe50b:	and	dl, byte ptr [rsp + 0xd]
0xe50f:	mov	r15, qword ptr [rsp + 0x80]
0xe517:	mov	r14, qword ptr [rsp + 0x40]
0xe51c:	mov	r13, qword ptr [rsp + 0x70]
0xe521:	mov	r11, qword ptr [rsp + 0x30]
0xe526:	cmp	rdi, 1
0xe52a:	jbe	0xeb2b


0xe4a3:	cmp	rax, -1
0xe4a7:	je	0xeac5


0xeb2b:	mov	eax, edx
0xeb2d:	jmp	0xe087


0xe530:	mov	rcx, rdi
0xe533:	xor	esi, esi
0xe535:	movzx	r9d, byte ptr [rsp + 0xf]
0xe53b:	add	rcx, rbp
0xe53e:	mov	rdi, qword ptr [rsp + 0x10]
0xe543:	jmp	0xe5fe


0xeac5:	mov	rdi, rbx
0xeac8:	movzx	r8d, byte ptr [rsp + 0x7d]
0xeace:	movzx	ebx, byte ptr [rsp + 0x7e]
0xead3:	movzx	r10d, byte ptr [rsp + 0x7f]
0xead9:	mov	r15, qword ptr [rsp + 0x80]
0xeae1:	xor	r12d, r12d
0xeae4:	mov	r14, qword ptr [rsp + 0x40]
0xeae9:	mov	r13, qword ptr [rsp + 0x70]
0xeaee:	mov	r11, qword ptr [rsp + 0x30]
0xeaf3:	movzx	edx, byte ptr [rsp + 0xd]
0xeaf8:	jmp	0xe526


0xe4ad:	cmp	rax, -2
0xe4b1:	je	0xea51


0xe087:	test	al, al
0xe089:	jne	0xea21


0xe5fe:	test	dl, dl
0xe600:	jne	0xe550


0xe526:	cmp	rdi, 1
0xe52a:	jbe	0xeb2b


0xea51:	mov	r11, qword ptr [rsp + 0x30]
0xea56:	mov	rsi, r14
0xea59:	mov	rcx, r13
0xea5c:	mov	rax, rbx
0xea5f:	mov	rdi, rbx
0xea62:	movzx	r8d, byte ptr [rsp + 0x7d]
0xea68:	movzx	ebx, byte ptr [rsp + 0x7e]
0xea6d:	mov	r9, qword ptr [rsp + 0x88]
0xea75:	cmp	rsi, r11
0xea78:	movzx	r10d, byte ptr [rsp + 0x7f]
0xea7e:	mov	r15, qword ptr [rsp + 0x80]
0xea86:	mov	r14, qword ptr [rsp + 0x40]
0xea8b:	mov	r13, qword ptr [rsp + 0x70]
0xea90:	jae	0xeab8


0xe4b7:	cmp	dword ptr [rsp + 8], 2
0xe4bc:	sete	al
0xe4bf:	and	al, byte ptr [rsp + 0xf]
0xe4c3:	jne	0xe660


0xe08f:	cmp	dword ptr [rsp + 8], 2
0xe094:	sete	dl
0xe097:	jmp	0xdd68


0xea21:	movzx	edx, byte ptr [rsp + 0xd]
0xea26:	xor	r12d, r12d
0xea29:	jmp	0xe530


0xe606:	mov	eax, esi
0xe608:	xor	eax, 1
0xe60b:	and	eax, r8d
0xe60e:	test	r10b, r10b
0xe611:	je	0xe621


0xe550:	cmp	dword ptr [rsp + 8], 2
0xe555:	sete	al
0xe558:	test	r9b, r9b
0xe55b:	jne	0xea10


0xea92:	cmp	byte ptr [rcx], 0
0xea95:	jne	0xeaa7


0xeab8:	movzx	edx, byte ptr [rsp + 0xd]
0xeabd:	xor	r12d, r12d
0xeac0:	jmp	0xe526


0xe4c9:	mov	edi, dword ptr [rsp + 0x9c]
0xe4d0:	call	0x3090


0xe660:	cmp	r15, 1
0xe664:	je	0xe4c9


0xdd68:	cmp	byte ptr [rsp + 0xd], 1
0xdd6d:	jne	0xde82


0xe621:	add	rbp, 1
0xe625:	cmp	rbp, rcx
0xe628:	jae	0xddac


0xe613:	cmp	r13, r15
0xe616:	jbe	0xe61d


0xe561:	mov	esi, r8d
0xe564:	xor	esi, 1
0xe567:	and	al, sil
0xe56a:	je	0xe59b


0xea10:	movzx	ebx, byte ptr [rsp + 0xf]
0xea15:	mov	rbp, r11
0xea18:	mov	byte ptr [rsp + 0xd], bl
0xea1c:	jmp	0xe6c9


0xea97:	jmp	0xeab8


0xeaa7:	add	rax, 1
0xeaab:	lea	rdx, [rbp + rax]
0xeab0:	cmp	r11, rdx
0xeab3:	ja	0xeaa0


0xe66a:	mov	rdi, qword ptr [rsp + 0x10]
0xe66f:	lea	rcx, [rdi + r15]
0xe673:	lea	rdx, [rdi + r14 + 1]
0xe678:	lea	r8, [rcx + r14]
0xe67c:	jmp	0xe68d


0xdd73:	test	dl, dl
0xdd75:	jne	0xde82


0xde82:	cmp	byte ptr [rsp + 0xf], 0
0xde87:	jne	0xdd7b


0xe62e:	test	al, al
0xe630:	je	0xea2e


0xddac:	test	al, al
0xddae:	je	0xddd0


0xe61d:	add	r15, 1
0xe621:	add	rbp, 1
0xe625:	cmp	rbp, rcx
0xe628:	jae	0xddac


0xe618:	mov	byte ptr [r14 + r15], 0x5c
0xe61d:	add	r15, 1
0xe621:	add	rbp, 1
0xe625:	cmp	rbp, rcx
0xe628:	jae	0xddac


0xe59b:	cmp	r13, r15
0xe59e:	jbe	0xe5a5


0xe56c:	cmp	r13, r15
0xe56f:	jbe	0xe576


0xeab5:	mov	rdi, rax
0xeab8:	movzx	edx, byte ptr [rsp + 0xd]
0xeabd:	xor	r12d, r12d
0xeac0:	jmp	0xe526


0xeaa0:	cmp	byte ptr [r9 + rax], 0
0xeaa5:	je	0xeab5


0xe68d:	movzx	ecx, byte ptr [rdx]
0xe690:	sub	ecx, 0x5b
0xe693:	cmp	cl, 0x21
0xe696:	ja	0xe680


0xdd7b:	mov	rsi, qword ptr [rsp + 0x20]
0xdd80:	test	rsi, rsi
0xdd83:	je	0xdd99


0xde8d:	jmp	0xdd99


0xea2e:	xor	r10d, r10d
0xea31:	jmp	0xe5ed


0xe636:	cmp	r13, r15
0xe639:	jbe	0xe640


0xddd0:	cmp	r15, r13
0xddd3:	jae	0xddd9


0xddb0:	cmp	r13, r15
0xddb3:	jbe	0xddba


0xe5a5:	lea	rax, [r15 + 1]
0xe5a9:	cmp	r13, rax
0xe5ac:	jbe	0xe5bb


0xe5a0:	mov	byte ptr [r14 + r15], 0x5c
0xe5a5:	lea	rax, [r15 + 1]
0xe5a9:	cmp	r13, rax
0xe5ac:	jbe	0xe5bb


0xe576:	lea	rsi, [r15 + 1]
0xe57a:	cmp	r13, rsi
0xe57d:	jbe	0xe585


0xe571:	mov	byte ptr [r14 + r15], 0x27
0xe576:	lea	rsi, [r15 + 1]
0xe57a:	cmp	r13, rsi
0xe57d:	jbe	0xe585


0xe698:	mov	esi, 1
0xe69d:	shl	rsi, cl
0xe6a0:	mov	rcx, rsi
0xe6a3:	movabs	rsi, 0x20000002b
0xe6ad:	test	rcx, rsi
0xe6b0:	je	0xe680


0xe680:	add	rdx, 1
0xe684:	cmp	r8, rdx
0xe687:	je	0xe4c9


0xdd99:	test	r10b, r10b
0xdd9c:	jne	0xdee3


0xdd85:	mov	edx, ebx
0xdd87:	shr	dl, 5
0xdd8a:	movzx	edx, dl
0xdd8d:	mov	edx, dword ptr [rsi + rdx*4]
0xdd90:	bt	edx, ebx
0xdd93:	jb	0xdee3


0xe5ed:	cmp	r13, r15
0xe5f0:	jbe	0xe5f6


0xe640:	lea	rax, [r15 + 1]
0xe644:	cmp	r13, rax
0xe647:	jbe	0xe64f


0xe63b:	mov	byte ptr [r14 + r15], 0x27
0xe640:	lea	rax, [r15 + 1]
0xe644:	cmp	r13, rax
0xe647:	jbe	0xe64f


0xddd5:	mov	byte ptr [r14 + r15], bl
0xddd9:	movzx	edi, byte ptr [rsp + 0xe]
0xddde:	add	r15, 1
0xdde2:	mov	eax, 0
0xdde7:	test	r12b, r12b
0xddea:	cmove	edi, eax
0xdded:	mov	byte ptr [rsp + 0xe], dil
0xddf2:	jmp	0xdc28


0xddd9:	movzx	edi, byte ptr [rsp + 0xe]
0xddde:	add	r15, 1
0xdde2:	mov	eax, 0
0xdde7:	test	r12b, r12b
0xddea:	cmove	edi, eax
0xdded:	mov	byte ptr [rsp + 0xe], dil
0xddf2:	jmp	0xdc28


0xddba:	lea	rax, [r15 + 1]
0xddbe:	cmp	r13, rax
0xddc1:	jbe	0xddc9


0xddb5:	mov	byte ptr [r14 + r15], 0x27
0xddba:	lea	rax, [r15 + 1]
0xddbe:	cmp	r13, rax
0xddc1:	jbe	0xddc9


0xe5bb:	lea	rax, [r15 + 2]
0xe5bf:	cmp	r13, rax
0xe5c2:	jbe	0xe5d4


0xe5ae:	mov	eax, ebx
0xe5b0:	shr	al, 6
0xe5b3:	add	eax, 0x30
0xe5b6:	mov	byte ptr [r14 + r15 + 1], al
0xe5bb:	lea	rax, [r15 + 2]
0xe5bf:	cmp	r13, rax
0xe5c2:	jbe	0xe5d4


0xe585:	lea	rsi, [r15 + 2]
0xe589:	cmp	r13, rsi
0xe58c:	jbe	0xe594


0xe57f:	mov	byte ptr [r14 + r15 + 1], 0x24
0xe585:	lea	rsi, [r15 + 2]
0xe589:	cmp	r13, rsi
0xe58c:	jbe	0xe594


0xe6b2:	mov	r14, qword ptr [rsp + 0x40]
0xe6b7:	mov	r13, qword ptr [rsp + 0x70]
0xe6bc:	mov	rbp, qword ptr [rsp + 0x30]
0xe6c1:	mov	dword ptr [rsp + 8], 2
0xe6c9:	cmp	byte ptr [rsp + 0xd], 0
0xe6ce:	je	0xe6e0


0xdda2:	xor	eax, 1
0xdda5:	add	rbp, 1
0xdda9:	and	eax, r8d
0xddac:	test	al, al
0xddae:	je	0xddd0


0xdee3:	cmp	dword ptr [rsp + 8], 2
0xdee8:	sete	dl
0xdeeb:	cmp	byte ptr [rsp + 0xf], 0
0xdef0:	mov	eax, edx
0xdef2:	jne	0xe748


0xe5f6:	movzx	ebx, byte ptr [rdi + rbp]
0xe5fa:	add	r15, 1
0xe5fe:	test	dl, dl
0xe600:	jne	0xe550


0xe5f2:	mov	byte ptr [r14 + r15], bl
0xe5f6:	movzx	ebx, byte ptr [rdi + rbp]
0xe5fa:	add	r15, 1
0xe5fe:	test	dl, dl
0xe600:	jne	0xe550


0xe64f:	add	r15, 2
0xe653:	xor	r10d, r10d
0xe656:	xor	r8d, r8d
0xe659:	jmp	0xe5ed


0xe649:	mov	byte ptr [r14 + r15 + 1], 0x27
0xe64f:	add	r15, 2
0xe653:	xor	r10d, r10d
0xe656:	xor	r8d, r8d
0xe659:	jmp	0xe5ed


0xdc28:	cmp	r11, rbp
0xdc2b:	setne	r12b
0xdc2f:	cmp	r11, -1
0xdc33:	jne	0xdc42


0xddc9:	add	r15, 2
0xddcd:	xor	r8d, r8d
0xddd0:	cmp	r15, r13
0xddd3:	jae	0xddd9


0xddc3:	mov	byte ptr [r14 + r15 + 1], 0x27
0xddc9:	add	r15, 2
0xddcd:	xor	r8d, r8d
0xddd0:	cmp	r15, r13
0xddd3:	jae	0xddd9


0xe5d4:	and	ebx, 7
0xe5d7:	add	rbp, 1
0xe5db:	add	r15, 3
0xe5df:	add	ebx, 0x30
0xe5e2:	cmp	rbp, rcx
0xe5e5:	jae	0xddd0


0xe5c4:	mov	eax, ebx
0xe5c6:	shr	al, 3
0xe5c9:	and	eax, 7
0xe5cc:	add	eax, 0x30
0xe5cf:	mov	byte ptr [r14 + r15 + 2], al
0xe5d4:	and	ebx, 7
0xe5d7:	add	rbp, 1
0xe5db:	add	r15, 3
0xe5df:	add	ebx, 0x30
0xe5e2:	cmp	rbp, rcx
0xe5e5:	jae	0xddd0


0xe594:	add	r15, 3
0xe598:	mov	r8d, eax
0xe59b:	cmp	r13, r15
0xe59e:	jbe	0xe5a5


0xe58e:	mov	byte ptr [r14 + r15 + 2], 0x27
0xe594:	add	r15, 3
0xe598:	mov	r8d, eax
0xe59b:	cmp	r13, r15
0xe59e:	jbe	0xe5a5


0xdef8:	mov	eax, r8d
0xdefb:	xor	eax, 1
0xdefe:	and	al, dl
0xdf00:	je	0xdf31


0xe748:	mov	rbp, r11
0xe74b:	jmp	0xe6c9


0xe5eb:	mov	esi, edx
0xe5ed:	cmp	r13, r15
0xe5f0:	jbe	0xe5f6


0xdf31:	cmp	r13, r15
0xdf34:	jbe	0xdf3b


0xdf02:	cmp	r13, r15
0xdf05:	jbe	0xdf0c


0xdf3b:	add	r15, 1
0xdf3f:	add	rbp, 1
0xdf43:	jmp	0xddd0


0xdf36:	mov	byte ptr [r14 + r15], 0x5c
0xdf3b:	add	r15, 1
0xdf3f:	add	rbp, 1
0xdf43:	jmp	0xddd0


0xdf0c:	lea	rdx, [r15 + 1]
0xdf10:	cmp	r13, rdx
0xdf13:	jbe	0xdf1b


0xdf07:	mov	byte ptr [r14 + r15], 0x27
0xdf0c:	lea	rdx, [r15 + 1]
0xdf10:	cmp	r13, rdx
0xdf13:	jbe	0xdf1b


0xdf1b:	lea	rdx, [r15 + 2]
0xdf1f:	cmp	r13, rdx
0xdf22:	jbe	0xdf2a


0xdf15:	mov	byte ptr [r14 + r15 + 1], 0x24
0xdf1b:	lea	rdx, [r15 + 2]
0xdf1f:	cmp	r13, rdx
0xdf22:	jbe	0xdf2a


0xdf2a:	add	r15, 3
0xdf2e:	mov	r8d, eax
0xdf31:	cmp	r13, r15
0xdf34:	jbe	0xdf3b


0xdf24:	mov	byte ptr [r14 + r15 + 2], 0x27
0xdf2a:	add	r15, 3
0xdf2e:	mov	r8d, eax
0xdf31:	cmp	r13, r15
0xdf34:	jbe	0xdf3b


0xe4d5:	mov	rdi, qword ptr [rsp + 0x28]
0xe4da:	test	eax, eax
0xe4dc:	mov	eax, 0
0xe4e1:	cmove	r12d, eax
0xe4e5:	add	rbx, r15
0xe4e8:	call	0x3060


0xe4ed:	test	eax, eax
0xe4ef:	je	0xe473


0xe473:	mov	rax, qword ptr [rsp + 0x10]
0xe478:	lea	r14, [rbp + rbx]
0xe47d:	mov	rdx, qword ptr [rsp + 0x30]
0xe482:	mov	rcx, qword ptr [rsp + 0x28]
0xe487:	mov	rdi, qword ptr [rsp + 0x38]
0xe48c:	lea	r13, [rax + r14]
0xe490:	sub	rdx, r14
0xe493:	mov	rsi, r13
0xe496:	call	0x12830


0xdc9c:	movzx	r8d, byte ptr [rsp + 0x38]
0xdca2:	movzx	r10d, byte ptr [rsp + 0x30]
0xdca8:	mov	r11, rax
0xdcab:	mov	r9, qword ptr [rsp + 0x28]
0xdcb0:	cmp	rbx, r11
0xdcb3:	mov	byte ptr [rsp + 0x28], r10b
0xdcb8:	ja	0xe270


0xe420:	movzx	r8d, byte ptr [rsp + 0x40]
0xe426:	movzx	r10d, byte ptr [rsp + 0x38]
0xe42c:	mov	r11, rax
0xe42f:	mov	r9, qword ptr [rsp + 0x30]
0xe434:	lea	rax, [rsp + 0x9c]
0xe43c:	xor	ecx, ecx
0xe43e:	mov	byte ptr [rsp + 0x7e], bl
0xe442:	mov	byte ptr [rsp + 0x7d], r8b
0xe447:	mov	rbx, rcx
0xe44a:	mov	qword ptr [rsp + 0x88], r9
0xe452:	mov	qword ptr [rsp + 0x38], rax
0xe457:	mov	byte ptr [rsp + 0x7f], r10b
0xe45c:	mov	qword ptr [rsp + 0x80], r15
0xe464:	mov	qword ptr [rsp + 0x40], r14
0xe469:	mov	qword ptr [rsp + 0x70], r13
0xe46e:	mov	qword ptr [rsp + 0x30], r11
0xe473:	mov	rax, qword ptr [rsp + 0x10]
0xe478:	lea	r14, [rbp + rbx]
0xe47d:	mov	rdx, qword ptr [rsp + 0x30]
0xe482:	mov	rcx, qword ptr [rsp + 0x28]
0xe487:	mov	rdi, qword ptr [rsp + 0x38]
0xe48c:	lea	r13, [rax + r14]
0xe490:	sub	rdx, r14
0xe493:	mov	rsi, r13
0xe496:	call	0x12830


0xe058:	mov	rcx, qword ptr [rax]
0xe05b:	movzx	edx, bl
0xe05e:	movzx	r10d, byte ptr [rsp + 0x28]
0xe064:	movzx	r8d, byte ptr [rsp + 0x30]
0xe06a:	mov	r11, qword ptr [rsp + 0x38]
0xe06f:	mov	edi, 1
0xe074:	movzx	eax, word ptr [rcx + rdx*2]
0xe078:	and	ax, 0x4000
0xe07c:	setne	r12b
0xe080:	sete	al
0xe083:	and	al, byte ptr [rsp + 0xd]
0xe087:	test	al, al
0xe089:	jne	0xea21


0xdd30:	xor	r10d, r10d
0xdd33:	cmp	r11, 1
0xdd37:	setne	al
0xdd3a:	cmp	r11, -1
0xdd3e:	jne	0xdd4c


0xdd40:	mov	rax, qword ptr [rsp + 0x10]
0xdd45:	cmp	byte ptr [rax + 1], 0
0xdd49:	setne	al
0xdd4c:	cmp	dword ptr [rsp + 8], 2
0xdd51:	sete	dl
0xdd54:	test	al, al
0xdd56:	je	0xdfa8


0xdd4c:	cmp	dword ptr [rsp + 8], 2
0xdd51:	sete	dl
0xdd54:	test	al, al
0xdd56:	je	0xdfa8


0xdfa8:	test	rbp, rbp
0xdfab:	jne	0xdd5c


0xdd5c:	xor	r12d, r12d
0xdd5f:	xor	eax, eax
0xdd61:	nop	dword ptr [rax]
0xdd68:	cmp	byte ptr [rsp + 0xd], 1
0xdd6d:	jne	0xde82


0xdfb1:	movzx	eax, byte ptr [rsp + 0xf]
0xdfb6:	and	al, dl
0xdfb8:	je	0xdd68


0xdfbe:	mov	rbp, r11
0xdfc1:	mov	dword ptr [rsp + 8], 2
0xdfc9:	jmp	0xe6c9


0xe3c8:	cmp	byte ptr [rsp + 0xf], 0
0xe3cd:	jne	0xebf0


0xde10:	cmp	eax, 5
0xde13:	je	0xe388


0xe3d3:	xor	r12d, r12d
0xe3d6:	xor	eax, eax
0xe3d8:	mov	ebx, 0x3f
0xe3dd:	jmp	0xdd99


0xebf0:	mov	rbp, r11
0xebf3:	movzx	eax, byte ptr [rsp + 0xf]
0xebf8:	jmp	0xe6c9


0xe388:	test	byte ptr [rsp + 0x78], 4
0xe38d:	je	0xe3b0


0xde19:	cmp	eax, 2
0xde1c:	mov	ebx, 0x3f
0xde21:	sete	dl
0xde24:	xor	r12d, r12d
0xde27:	xor	eax, eax
0xde29:	jmp	0xdd68


0xe3b0:	xor	edx, edx
0xe3b2:	xor	r12d, r12d
0xe3b5:	xor	eax, eax
0xe3b7:	mov	ebx, 0x3f
0xe3bc:	jmp	0xdd68


0xe38f:	lea	rcx, [rbp + 2]
0xe393:	cmp	rcx, r11
0xe396:	jae	0xe3b0


0xe398:	mov	rax, qword ptr [rsp + 0x10]
0xe39d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0xe3a2:	je	0xeb32


0xeb32:	movzx	ebx, byte ptr [rax + rcx]
0xeb36:	cmp	bl, 0x3e
0xeb39:	ja	0xe3b0


0xeb3f:	movabs	rax, 0x7000a38200000000
0xeb49:	bt	rax, rbx
0xeb4d:	jae	0xe3b0


0xeb53:	cmp	byte ptr [rsp + 0xf], 0
0xeb58:	jne	0xed42


0xeb5e:	cmp	r13, r15
0xeb61:	jbe	0xeb68


0xed42:	mov	rbp, r11
0xed45:	jmp	0xe6e0


0xeb68:	lea	rax, [r15 + 1]
0xeb6c:	cmp	r13, rax
0xeb6f:	jbe	0xeb77


0xeb63:	mov	byte ptr [r14 + r15], 0x3f
0xeb68:	lea	rax, [r15 + 1]
0xeb6c:	cmp	r13, rax
0xeb6f:	jbe	0xeb77


0xeb77:	lea	rax, [r15 + 2]
0xeb7b:	cmp	r13, rax
0xeb7e:	jbe	0xeb86


0xeb71:	mov	byte ptr [r14 + r15 + 1], 0x22
0xeb77:	lea	rax, [r15 + 2]
0xeb7b:	cmp	r13, rax
0xeb7e:	jbe	0xeb86


0xeb86:	lea	rax, [r15 + 3]
0xeb8a:	cmp	r13, rax
0xeb8d:	jbe	0xeb95


0xeb80:	mov	byte ptr [r14 + r15 + 2], 0x22
0xeb86:	lea	rax, [r15 + 3]
0xeb8a:	cmp	r13, rax
0xeb8d:	jbe	0xeb95


0xeb95:	add	r15, 4
0xeb99:	xor	edx, edx
0xeb9b:	xor	r12d, r12d
0xeb9e:	xor	eax, eax
0xeba0:	mov	rbp, rcx
0xeba3:	jmp	0xdd68


0xeb8f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0xeb95:	add	r15, 4
0xeb99:	xor	edx, edx
0xeb9b:	xor	r12d, r12d
0xeb9e:	xor	eax, eax
0xeba0:	mov	rbp, rcx
0xeba3:	jmp	0xdd68


0xe340:	cmp	byte ptr [rsp + 0xf], 0
0xe345:	jne	0xebf0


0xde3e:	mov	byte ptr [rsp + 0x7c], r12b
0xde43:	xor	edx, edx
0xde45:	xor	eax, eax
0xde47:	mov	ebx, 0x27
0xde4c:	jmp	0xdd68


0xe34b:	test	r13, r13
0xe34e:	je	0xe750


0xe750:	cmp	r13, r15
0xe753:	jbe	0xe75a


0xe354:	xor	edx, edx
0xe356:	cmp	qword ptr [rsp + 0x50], 0
0xe35c:	jne	0xe750


0xe75a:	lea	rax, [r15 + 1]
0xe75e:	cmp	r13, rax
0xe761:	jbe	0xe769


0xe755:	mov	byte ptr [r14 + r15], 0x27
0xe75a:	lea	rax, [r15 + 1]
0xe75e:	cmp	r13, rax
0xe761:	jbe	0xe769


0xe362:	mov	qword ptr [rsp + 0x50], r13
0xe367:	add	r15, 3
0xe36b:	xor	eax, eax
0xe36d:	mov	byte ptr [rsp + 0x7c], r12b
0xe372:	xor	r8d, r8d
0xe375:	mov	r13, rdx
0xe378:	mov	ebx, 0x27
0xe37d:	jmp	0xdd99


0xe769:	lea	rax, [r15 + 2]
0xe76d:	cmp	r13, rax
0xe770:	jbe	0xed62


0xe763:	mov	byte ptr [r14 + r15 + 1], 0x5c
0xe769:	lea	rax, [r15 + 2]
0xe76d:	cmp	r13, rax
0xe770:	jbe	0xed62


0xed62:	mov	rdx, r13
0xed65:	mov	r13, qword ptr [rsp + 0x50]
0xed6a:	jmp	0xe362


0xe776:	mov	rdx, r13
0xe779:	mov	byte ptr [r14 + r15 + 2], 0x27
0xe77f:	mov	r13, qword ptr [rsp + 0x50]
0xe784:	jmp	0xe362


0xde74:	cmp	byte ptr [rsp + 0xd], 0
0xde79:	jne	0xdee0


0xde7b:	mov	ebx, edx
0xde7d:	xor	r12d, r12d
0xde80:	xor	eax, eax
0xde82:	cmp	byte ptr [rsp + 0xf], 0
0xde87:	jne	0xdd7b


0xdee0:	xor	r12d, r12d
0xdee3:	cmp	dword ptr [rsp + 8], 2
0xdee8:	sete	dl
0xdeeb:	cmp	byte ptr [rsp + 0xf], 0
0xdef0:	mov	eax, edx
0xdef2:	jne	0xe748


0xe280:	cmp	byte ptr [rsp + 0xf], 0
0xe285:	jne	0xebf0


0xdeb3:	cmp	byte ptr [rsp + 0xd], 0
0xdeb8:	je	0xe0d0


0xe28b:	add	rbp, 1
0xe28f:	mov	eax, r8d
0xe292:	xor	r12d, r12d
0xe295:	mov	ebx, 0x5c
0xe29a:	jmp	0xddac


0xe0d0:	mov	edx, 0x5c
0xe0d5:	mov	ebx, 0x5c
0xe0da:	jmp	0xde74


0xdebe:	cmp	byte ptr [rsp + 0xf], 0
0xdec3:	je	0xe0d0


0xdec9:	cmp	qword ptr [rsp + 0x18], 0
0xdecf:	jne	0xe28b


0xded5:	mov	ebx, 0x5c
0xdeda:	nop	word ptr [rax + rax]
0xdee0:	xor	r12d, r12d
0xdee3:	cmp	dword ptr [rsp + 8], 2
0xdee8:	sete	dl
0xdeeb:	cmp	byte ptr [rsp + 0xf], 0
0xdef0:	mov	eax, edx
0xdef2:	jne	0xe748


0xdf5b:	xor	edx, edx
0xdf5d:	test	byte ptr [rsp + 0x78], 1
0xdf62:	je	0xde7b


0xe123:	cmp	dword ptr [rsp + 8], 2
0xe128:	sete	dl
0xe12b:	cmp	byte ptr [rsp + 0xf], 0
0xe130:	jne	0xecca


0xdf68:	add	rbp, 1
0xdf6c:	jmp	0xdc28


0xe136:	mov	eax, r8d
0xe139:	mov	rcx, r15
0xe13c:	xor	eax, 1
0xe13f:	and	al, dl
0xe141:	je	0xe170


0xecca:	movzx	ebx, byte ptr [rsp + 0xf]
0xeccf:	mov	rbp, r11
0xecd2:	mov	eax, edx
0xecd4:	mov	byte ptr [rsp + 0xd], bl
0xecd8:	jmp	0xe6c9


0xe170:	cmp	r13, rcx
0xe173:	jbe	0xe17a


0xe143:	cmp	r13, r15
0xe146:	jbe	0xe14d


0xe17a:	cmp	dword ptr [rsp + 8], 2
0xe17f:	lea	r15, [rcx + 1]
0xe183:	je	0xe789


0xe175:	mov	byte ptr [r14 + rcx], 0x5c
0xe17a:	cmp	dword ptr [rsp + 8], 2
0xe17f:	lea	r15, [rcx + 1]
0xe183:	je	0xe789


0xe14d:	lea	rcx, [r15 + 1]
0xe151:	cmp	r13, rcx
0xe154:	jbe	0xe15c


0xe148:	mov	byte ptr [r14 + r15], 0x27
0xe14d:	lea	rcx, [r15 + 1]
0xe151:	cmp	r13, rcx
0xe154:	jbe	0xe15c


0xe789:	mov	eax, r12d
0xe78c:	mov	ebx, 0x30
0xe791:	xor	r12d, r12d
0xe794:	jmp	0xdd99


0xe189:	lea	rax, [rbp + 1]
0xe18d:	cmp	rax, r11
0xe190:	jae	0xe1ab


0xe15c:	lea	rcx, [r15 + 2]
0xe160:	cmp	r13, rcx
0xe163:	ja	0xe799


0xe156:	mov	byte ptr [r14 + r15 + 1], 0x24
0xe15c:	lea	rcx, [r15 + 2]
0xe160:	cmp	r13, rcx
0xe163:	ja	0xe799


0xe192:	mov	rax, qword ptr [rsp + 0x10]
0xe197:	movzx	eax, byte ptr [rax + rbp + 1]
0xe19c:	mov	byte ptr [rsp + 0x28], al
0xe1a0:	sub	eax, 0x30
0xe1a3:	cmp	al, 9
0xe1a5:	jbe	0xe9d9


0xe1ab:	mov	eax, r12d
0xe1ae:	mov	ebx, 0x30
0xe1b3:	xor	r12d, r12d
0xe1b6:	jmp	0xdd68


0xe169:	lea	rcx, [r15 + 3]
0xe16d:	mov	r8d, eax
0xe170:	cmp	r13, rcx
0xe173:	jbe	0xe17a


0xe799:	mov	byte ptr [r14 + r15 + 2], 0x27
0xe79f:	jmp	0xe169


0xe9d9:	cmp	r13, r15
0xe9dc:	jbe	0xe9e3


0xe9e3:	lea	rax, [rcx + 2]
0xe9e7:	cmp	r13, rax
0xe9ea:	jbe	0xe9f2


0xe9de:	mov	byte ptr [r14 + r15], 0x30
0xe9e3:	lea	rax, [rcx + 2]
0xe9e7:	cmp	r13, rax
0xe9ea:	jbe	0xe9f2


0xe9f2:	mov	eax, r12d
0xe9f5:	lea	r15, [rcx + 3]
0xe9f9:	xor	r12d, r12d
0xe9fc:	mov	ebx, 0x30
0xea01:	jmp	0xdd68


0xe9ec:	mov	byte ptr [r14 + rcx + 2], 0x30
0xe9f2:	mov	eax, r12d
0xe9f5:	lea	r15, [rcx + 3]
0xe9f9:	xor	r12d, r12d
0xe9fc:	mov	ebx, 0x30
0xea01:	jmp	0xdd68


0xde62:	cmp	dword ptr [rsp + 8], 2
0xde67:	sete	al
0xde6a:	and	al, byte ptr [rsp + 0xf]
0xde6e:	jne	0xdfbe


0xe220:	mov	edx, 0xd
0xe225:	xor	r10d, r10d
0xe228:	mov	ebx, 0x72
0xe22d:	jmp	0xde62


0xe7a4:	test	ebx, ebx
0xe7a6:	jne	0xdbd3


0xe7ac:	mov	byte ptr [rsp + 0xd], 1
0xe7b1:	test	r13, r13
0xe7b4:	jne	0xed4a


0xe7ba:	lea	rax, [rip + 0x9b64]
0xe7c1:	mov	qword ptr [rsp + 0x50], 0
0xe7ca:	mov	byte ptr [rsp + 0xe], 1
0xe7cf:	mov	byte ptr [rsp + 0x7c], 0
0xe7d4:	xor	r12d, r12d
0xe7d7:	mov	byte ptr [rsp + 0xf], 0
0xe7dc:	mov	qword ptr [rsp + 0x18], 1
0xe7e5:	mov	qword ptr [rsp + 0x48], rax
0xe7ea:	mov	r15d, 1
0xe7f0:	mov	dword ptr [rsp + 8], 2
0xe7f8:	jmp	0xdc13


0xed4a:	mov	byte ptr [rsp + 0xe], 1
0xed4f:	xor	eax, eax
0xed51:	xor	r12d, r12d
0xed54:	mov	qword ptr [rsp + 0x50], 0
0xed5d:	jmp	0xe304


0xe304:	lea	rbx, [rip + 0xa01a]
0xe30b:	mov	byte ptr [r14], 0x27
0xe30f:	mov	dword ptr [rsp + 8], 2
0xe317:	mov	r15d, 1
0xe31d:	mov	qword ptr [rsp + 0x18], 1
0xe326:	mov	byte ptr [rsp + 0xf], 0
0xe32b:	mov	qword ptr [rsp + 0x48], rbx
0xe330:	mov	byte ptr [rsp + 0x7c], al
0xe334:	jmp	0xdc13


0xe808:	test	r13, r13
0xe80b:	je	0xea36


0xebfd:	lea	rax, [rip + 0x971f]
0xec04:	mov	byte ptr [rsp + 0xe], 1
0xec09:	mov	byte ptr [rsp + 0x7c], 0
0xec0e:	xor	r12d, r12d
0xec11:	mov	qword ptr [rsp + 0x50], 0
0xec1a:	mov	byte ptr [rsp + 0xf], 1
0xec1f:	mov	byte ptr [rsp + 0xd], 1
0xec24:	mov	qword ptr [rsp + 0x18], 1
0xec2d:	xor	r15d, r15d
0xec30:	mov	qword ptr [rsp + 0x48], rax
0xec35:	jmp	0xdc13


0xea36:	mov	qword ptr [rsp + 0x50], 0
0xea3f:	mov	byte ptr [rsp + 0xe], 1
0xea44:	xor	r12d, r12d
0xea47:	mov	byte ptr [rsp + 0x7c], 0
0xea4c:	jmp	0xe82b


0xe811:	mov	byte ptr [r14], 0x22
0xe815:	mov	byte ptr [rsp + 0xe], 1
0xe81a:	xor	r12d, r12d
0xe81d:	mov	byte ptr [rsp + 0x7c], 0
0xe822:	mov	qword ptr [rsp + 0x50], 0
0xe82b:	lea	rax, [rip + 0x9af1]
0xe832:	mov	byte ptr [rsp + 0xf], 0
0xe837:	mov	byte ptr [rsp + 0xd], 1
0xe83c:	mov	qword ptr [rsp + 0x18], 1
0xe845:	mov	r15d, 1
0xe84b:	mov	qword ptr [rsp + 0x48], rax
0xe850:	jmp	0xdc13


0xe82b:	lea	rax, [rip + 0x9af1]
0xe832:	mov	byte ptr [rsp + 0xf], 0
0xe837:	mov	byte ptr [rsp + 0xd], 1
0xe83c:	mov	qword ptr [rsp + 0x18], 1
0xe845:	mov	r15d, 1
0xe84b:	mov	qword ptr [rsp + 0x48], rax
0xe850:	jmp	0xdc13


0xe855:	lea	rax, [rip + 0x9ac7]
0xe85c:	mov	byte ptr [rsp + 0xe], 1
0xe861:	mov	byte ptr [rsp + 0x7c], 0
0xe866:	xor	r12d, r12d
0xe869:	mov	qword ptr [rsp + 0x50], 0
0xe872:	mov	byte ptr [rsp + 0xf], 1
0xe877:	mov	byte ptr [rsp + 0xd], 1
0xe87c:	mov	qword ptr [rsp + 0x18], 1
0xe885:	xor	r15d, r15d
0xe888:	mov	qword ptr [rsp + 0x48], rax
0xe88d:	mov	dword ptr [rsp + 8], 5
0xe895:	jmp	0xdc13


0xe89a:	mov	byte ptr [rsp + 0xe], 1
0xe89f:	mov	byte ptr [rsp + 0x7c], 0
0xe8a4:	xor	r12d, r12d
0xe8a7:	mov	qword ptr [rsp + 0x50], 0
0xe8b0:	mov	byte ptr [rsp + 0xf], 0
0xe8b5:	xor	r15d, r15d
0xe8b8:	mov	byte ptr [rsp + 0xd], 1
0xe8bd:	mov	qword ptr [rsp + 0x18], 0
0xe8c6:	mov	qword ptr [rsp + 0x48], 0
0xe8cf:	jmp	0xdc13


0xe8d4:	cmp	dword ptr [rsp + 8], 0xa
0xe8d9:	je	0xe931


0xe931:	xor	r15d, r15d
0xe934:	test	ebx, ebx
0xe936:	je	0xeafd


0xe8db:	lea	rsi, [rip + 0x9a45]
0xe8e2:	xor	edi, edi
0xe8e4:	mov	edx, 5
0xe8e9:	call	0x2ad0


0xeafd:	mov	rdx, qword ptr [rsp + 0x68]
0xeb02:	movzx	eax, byte ptr [rdx]
0xeb05:	test	al, al
0xeb07:	je	0xe93c


0xe93c:	test	ebx, ebx
0xe93e:	mov	rbx, qword ptr [rsp + 0x60]
0xe943:	setne	byte ptr [rsp + 0xf]
0xe948:	xor	r12d, r12d
0xe94b:	mov	rdi, rbx
0xe94e:	call	0x2af0


0xeb19:	add	r15, 1
0xeb1d:	movzx	eax, byte ptr [rdx + r15]
0xeb22:	test	al, al
0xeb24:	jne	0xeb10


0xeb15:	mov	byte ptr [r14 + r15], al
0xeb19:	add	r15, 1
0xeb1d:	movzx	eax, byte ptr [rdx + r15]
0xeb22:	test	al, al
0xeb24:	jne	0xeb10


0xeb26:	jmp	0xe93c


0xeb10:	cmp	r13, r15
0xeb13:	jbe	0xeb19


0xe953:	mov	qword ptr [rsp + 0x48], rbx
0xe958:	mov	qword ptr [rsp + 0x18], rax
0xe95d:	mov	byte ptr [rsp + 0xe], 1
0xe962:	mov	byte ptr [rsp + 0x7c], 0
0xe967:	mov	qword ptr [rsp + 0x50], 0
0xe970:	mov	byte ptr [rsp + 0xd], 1
0xe975:	jmp	0xdc13


0xe8ee:	mov	rcx, rax
0xe8f1:	mov	qword ptr [rsp + 0x68], rax
0xe8f6:	lea	rax, [rip + 0x9a2a]
0xe8fd:	cmp	rcx, rax
0xe900:	je	0xec9e


0xec9e:	mov	esi, dword ptr [rsp + 8]
0xeca2:	mov	rdi, rcx
0xeca5:	call	0xda50


0xe906:	lea	rsi, [rip + 0x9a18]
0xe90d:	xor	edi, edi
0xe90f:	mov	edx, 5
0xe914:	call	0x2ad0


0xe919:	mov	rcx, rax
0xe91c:	mov	qword ptr [rsp + 0x60], rax
0xe921:	lea	rax, [rip + 0x99fd]
0xe928:	cmp	rcx, rax
0xe92b:	je	0xecb4


0xecb4:	mov	esi, dword ptr [rsp + 8]
0xecb8:	mov	rdi, rcx
0xecbb:	call	0xda50


0xecc0:	mov	qword ptr [rsp + 0x60], rax
0xecc5:	jmp	0xe931


0xecaa:	mov	qword ptr [rsp + 0x68], rax
0xecaf:	jmp	0xe906


0xe97a:	mov	byte ptr [rsp + 0xe], 1
0xe97f:	mov	byte ptr [rsp + 0x7c], 0
0xe984:	xor	r12d, r12d
0xe987:	mov	qword ptr [rsp + 0x50], 0
0xe990:	mov	byte ptr [rsp + 0xf], 0
0xe995:	xor	r15d, r15d
0xe998:	mov	byte ptr [rsp + 0xd], 0
0xe99d:	mov	qword ptr [rsp + 0x18], 0
0xe9a6:	mov	qword ptr [rsp + 0x48], 0
0xe9af:	jmp	0xdc13


0xe9b4:	mov	byte ptr [rsp + 0xe], 1
0xe9b9:	mov	byte ptr [rsp + 0x7c], 0
0xe9be:	xor	r12d, r12d
0xe9c1:	mov	qword ptr [rsp + 0x50], 0
0xe9ca:	mov	byte ptr [rsp + 0xf], 1
0xe9cf:	mov	byte ptr [rsp + 0xd], 1
0xe9d4:	jmp	0xdbf3


0xdbf3:	lea	rax, [rip + 0xa72b]
0xdbfa:	mov	qword ptr [rsp + 0x18], 1
0xdc03:	xor	r15d, r15d
0xdc06:	mov	dword ptr [rsp + 8], 2
0xdc0e:	mov	qword ptr [rsp + 0x48], rax
0xdc13:	xor	r11d, r11d
0xdc16:	mov	rax, rbp
0xdc19:	mov	r8d, r12d
0xdc1c:	mov	rbp, r11
0xdc1f:	mov	r11, rax
0xdc22:	nop	word ptr [rax + rax]
0xdc28:	cmp	r11, rbp
0xdc2b:	setne	r12b
0xdc2f:	cmp	r11, -1
0xdc33:	jne	0xdc42


0xeba8:	test	ebx, ebx
0xebaa:	je	0xed38


0xed38:	mov	byte ptr [rsp + 0xd], 0
0xed3d:	jmp	0xe7b1


0xebb0:	lea	rax, [rip + 0x976e]
0xebb7:	mov	byte ptr [rsp + 0xe], 1
0xebbc:	mov	byte ptr [rsp + 0x7c], 0
0xebc1:	xor	r12d, r12d
0xebc4:	mov	qword ptr [rsp + 0x50], 0
0xebcd:	mov	byte ptr [rsp + 0xf], 1
0xebd2:	mov	byte ptr [rsp + 0xd], 0
0xebd7:	mov	qword ptr [rsp + 0x18], 1
0xebe0:	xor	r15d, r15d
0xebe3:	mov	qword ptr [rsp + 0x48], rax
0xebe8:	jmp	0xdc13


0xe7b1:	test	r13, r13
0xe7b4:	jne	0xed4a


0xed74:	nop	
0xed76:	nop	word ptr cs:[rax + rax]


0xef2b:	nop	dword ptr [rax + rax]


0xef66:	nop	word ptr cs:[rax + rax]


0xef81:	nop	dword ptr [rax + rax]
0xef86:	nop	word ptr cs:[rax + rax]


0xefa1:	nop	dword ptr [rax + rax]
0xefa6:	nop	word ptr cs:[rax + rax]


0xefe5:	nop	
0xefe6:	nop	word ptr cs:[rax + rax]


0xf005:	nop	
0xf006:	nop	word ptr cs:[rax + rax]


0xf0b4:	nop	
0xf0b6:	nop	word ptr cs:[rax + rax]


0xf1a3:	nop	dword ptr [rax]
0xf1a6:	nop	word ptr cs:[rax + rax]


0xf1ba:	nop	word ptr [rax + rax]


0xf253:	nop	dword ptr [rax]
0xf256:	nop	word ptr cs:[rax + rax]


0xf273:	nop	dword ptr [rax]
0xf276:	nop	word ptr cs:[rax + rax]


0xf28c:	nop	dword ptr [rax]


0xf2a8:	nop	dword ptr [rax + rax]


0xf2c4:	nop	
0xf2c6:	nop	word ptr cs:[rax + rax]


0xf35e:	nop	


0xf3ea:	nop	word ptr [rax + rax]


0xf3fc:	nop	dword ptr [rax]


0xf40f:	nop	


0xf4a8:	nop	dword ptr [rax + rax]


0xf4d1:	nop	dword ptr [rax + rax]
0xf4d6:	nop	word ptr cs:[rax + rax]


0xf4ea:	nop	word ptr [rax + rax]


0xf57e:	nop	


0xf611:	nop	dword ptr [rax + rax]
0xf616:	nop	word ptr cs:[rax + rax]


0xf62c:	nop	dword ptr [rax]


0xf647:	nop	word ptr [rax + rax]


0xf663:	nop	dword ptr [rax]
0xf666:	nop	word ptr cs:[rax + rax]


0xf67c:	nop	dword ptr [rax]


0xf694:	nop	
0xf696:	nop	word ptr cs:[rax + rax]


0xf6b3:	nop	dword ptr [rax]
0xf6b6:	nop	word ptr cs:[rax + rax]


0xf6d8:	nop	dword ptr [rax + rax]


0xf94a:	nop	word ptr [rax + rax]


0xf9ae:	nop	


0xfa0e:	nop	


0xfb37:	nop	word ptr [rax + rax]


0xfbd2:	nop	dword ptr [rax]
0xfbd6:	nop	word ptr cs:[rax + rax]


0xfbf2:	nop	word ptr cs:[rax + rax]
0xfbfc:	nop	dword ptr [rax]


0xfc1e:	nop	


0xfc2b:	nop	dword ptr [rax + rax]


0xffa8:	nop	dword ptr [rax + rax]


0x1000a:	nop	word ptr [rax + rax]


0x10017:	nop	word ptr [rax + rax]


0x10034:	nop	
0x10036:	nop	word ptr cs:[rax + rax]


0x102e9:	nop	dword ptr [rax]


0x104c5:	nop	
0x104c6:	nop	word ptr cs:[rax + rax]


0x1065c:	nop	dword ptr [rax]


0x106dc:	nop	dword ptr [rax]


0x106ea:	nop	word ptr [rax + rax]


0x10706:	nop	word ptr cs:[rax + rax]


0x10884:	nop	
0x10886:	nop	word ptr cs:[rax + rax]


0x10916:	nop	word ptr cs:[rax + rax]


0x1092b:	nop	dword ptr [rax + rax]


0x1093b:	nop	dword ptr [rax + rax]


0x1097f:	nop	


0x1098c:	nop	dword ptr [rax]


0x1099a:	nop	word ptr [rax + rax]


0x1111e:	nop	


0x11136:	nop	word ptr cs:[rax + rax]


0x11216:	nop	word ptr cs:[rax + rax]


0x112c9:	nop	dword ptr [rax]


0x112da:	nop	word ptr [rax + rax]


0x1173e:	nop	


0x119ae:	nop	


0x11dc7:	nop	word ptr [rax + rax]


0x11e68:	nop	dword ptr [rax + rax]


0x11f45:	nop	
0x11f46:	nop	word ptr cs:[rax + rax]


0x12008:	nop	dword ptr [rax + rax]


0x1202a:	nop	word ptr [rax + rax]


0x12054:	nop	
0x12056:	nop	word ptr cs:[rax + rax]


0x12062:	nop	dword ptr [rax]
0x12066:	nop	word ptr cs:[rax + rax]


0x120a6:	nop	word ptr cs:[rax + rax]


0x120d4:	nop	
0x120d6:	nop	word ptr cs:[rax + rax]


0x12162:	nop	dword ptr [rax]
0x12166:	nop	word ptr cs:[rax + rax]


0x121ba:	nop	word ptr [rax + rax]


0x121d7:	nop	word ptr [rax + rax]


0x1220e:	nop	


0x12238:	nop	dword ptr [rax + rax]


0x12253:	nop	word ptr cs:[rax + rax]
0x1225d:	nop	dword ptr [rax]


0x12295:	nop	word ptr cs:[rax + rax]
0x1229f:	nop	


0x12478:	mov	rax, rbx
0x1247b:	mul	rsi
0x1247e:	jo	0x12671


0x12671:	or	rax, 0xffffffffffffffff
0x12675:	mov	r8d, 1
0x1267b:	jmp	0x12487


0x12484:	xor	r8d, r8d
0x12487:	mul	rsi
0x1248a:	jo	0x12662


0x12487:	mul	rsi
0x1248a:	jo	0x12662


0x12662:	mov	r8d, 1
0x12668:	or	rbx, 0xffffffffffffffff
0x1266c:	jmp	0x12493


0x12490:	mov	rbx, rax
0x12493:	or	ebp, r8d
0x12496:	nop	word ptr cs:[rax + rax]
0x124a0:	movsxd	rdi, edi
0x124a3:	mov	eax, ebp
0x124a5:	add	rcx, rdi
0x124a8:	or	eax, 2
0x124ab:	mov	qword ptr [r15], rcx
0x124ae:	cmp	byte ptr [rcx], 0
0x124b1:	mov	qword ptr [r14], rbx
0x124b4:	cmovne	ebp, eax
0x124b7:	jmp	0x1237d


0x12493:	or	ebp, r8d
0x12496:	nop	word ptr cs:[rax + rax]
0x124a0:	movsxd	rdi, edi
0x124a3:	mov	eax, ebp
0x124a5:	add	rcx, rdi
0x124a8:	or	eax, 2
0x124ab:	mov	qword ptr [r15], rcx
0x124ae:	cmp	byte ptr [rcx], 0
0x124b1:	mov	qword ptr [r14], rbx
0x124b4:	cmovne	ebp, eax
0x124b7:	jmp	0x1237d


0x124c7:	mov	edx, 2
0x124cc:	mov	rax, rdx
0x124cf:	mul	rbx
0x124d2:	jo	0x1256e


0x1256e:	mov	ebp, 1
0x12573:	or	rbx, 0xffffffffffffffff
0x12577:	jmp	0x124a0


0x124d8:	add	rbx, rbx
0x124db:	jmp	0x124a0


0x124a0:	movsxd	rdi, edi
0x124a3:	mov	eax, ebp
0x124a5:	add	rcx, rdi
0x124a8:	or	eax, 2
0x124ab:	mov	qword ptr [r15], rcx
0x124ae:	cmp	byte ptr [rcx], 0
0x124b1:	mov	qword ptr [r14], rbx
0x124b4:	cmovne	ebp, eax
0x124b7:	jmp	0x1237d


0x124dd:	mov	edx, 0x200
0x124e2:	mov	rax, rdx
0x124e5:	mul	rbx
0x124e8:	jo	0x1256e


0x124ee:	shl	rbx, 9
0x124f2:	jmp	0x124a0


0x124f4:	mov	r8d, 7
0x124fa:	xor	r9d, r9d
0x124fd:	nop	dword ptr [rax]
0x12500:	mov	rax, rbx
0x12503:	mul	rsi
0x12506:	mov	rbx, rax
0x12509:	jo	0x1269e


0x1269e:	mov	r9d, 1
0x126a4:	or	rbx, 0xffffffffffffffff
0x126a8:	jmp	0x1250f


0x1250f:	sub	r8d, 1
0x12513:	jne	0x12500


0x12515:	or	ebp, r9d
0x12518:	jmp	0x124a0


0x12500:	mov	rax, rbx
0x12503:	mul	rsi
0x12506:	mov	rbx, rax
0x12509:	jo	0x1269e


0x1251a:	mov	r8d, 8
0x12520:	xor	r9d, r9d
0x12523:	nop	dword ptr [rax + rax]
0x12528:	mov	rax, rbx
0x1252b:	mul	rsi
0x1252e:	mov	rbx, rax
0x12531:	jo	0x12680


0x12680:	mov	r9d, 1
0x12686:	or	rbx, 0xffffffffffffffff
0x1268a:	jmp	0x12537


0x12537:	sub	r8d, 1
0x1253b:	jne	0x12528


0x1253d:	jmp	0x12515


0x12528:	mov	rax, rbx
0x1252b:	mul	rsi
0x1252e:	mov	rbx, rax
0x12531:	jo	0x12680


0x1253f:	mov	r8d, 4
0x12545:	xor	r9d, r9d
0x12548:	mov	rax, rbx
0x1254b:	mul	rsi
0x1254e:	mov	rbx, rax
0x12551:	jo	0x12653


0x12653:	mov	r9d, 1
0x12659:	or	rbx, 0xffffffffffffffff
0x1265d:	jmp	0x12557


0x12557:	sub	r8d, 1
0x1255b:	jne	0x12548


0x1255d:	jmp	0x12515


0x12548:	mov	rax, rbx
0x1254b:	mul	rsi
0x1254e:	mov	rbx, rax
0x12551:	jo	0x12653


0x1255f:	mov	rax, rbx
0x12562:	mul	rsi
0x12565:	mov	rbx, rax
0x12568:	jno	0x124a0


0x1268f:	mov	r9d, 1
0x12695:	or	rbx, 0xffffffffffffffff
0x12699:	jmp	0x12598


0x12598:	sub	r8d, 1
0x1259c:	jne	0x12589


0x1259e:	jmp	0x12515


0x12589:	mov	rax, rbx
0x1258c:	mul	rsi
0x1258f:	mov	rbx, rax
0x12592:	jo	0x1268f


0x125a3:	mov	r8d, 6
0x125a9:	xor	r9d, r9d
0x125ac:	mov	rax, rbx
0x125af:	mul	rsi
0x125b2:	mov	rbx, rax
0x125b5:	jo	0x12644


0x12644:	mov	r9d, 1
0x1264a:	or	rbx, 0xffffffffffffffff
0x1264e:	jmp	0x125bb


0x125bb:	sub	r8d, 1
0x125bf:	jne	0x125ac


0x125c1:	jmp	0x12515


0x125ac:	mov	rax, rbx
0x125af:	mul	rsi
0x125b2:	mov	rbx, rax
0x125b5:	jo	0x12644


0x125c6:	mov	edx, 0x400
0x125cb:	mov	rax, rdx
0x125ce:	mul	rbx
0x125d1:	jo	0x1256e


0x125d3:	shl	rbx, 0xa
0x125d7:	jmp	0x124a0


0x125dc:	mov	rax, rbx
0x125df:	mul	rsi
0x125e2:	jo	0x126ad


0x126ad:	mov	r8d, 1
0x126b3:	or	rax, 0xffffffffffffffff
0x126b7:	jmp	0x125eb


0x125e8:	xor	r8d, r8d
0x125eb:	mul	rsi
0x125ee:	jno	0x12487


0x125eb:	mul	rsi
0x125ee:	jno	0x12487


0x125f4:	mov	r8d, 1
0x125fa:	or	rax, 0xffffffffffffffff
0x125fe:	jmp	0x12487


0x126bc:	nop	dword ptr [rax]


0x12757:	nop	word ptr [rax + rax]


0x127c9:	nop	dword ptr [rax]


0x12827:	nop	word ptr [rax + rax]


0x128b3:	nop	word ptr cs:[rax + rax]
0x128bd:	nop	dword ptr [rax]


0x129b2:	nop	word ptr cs:[rax + rax]
0x129bc:	nop	dword ptr [rax]


0x129c2:	nop	word ptr cs:[rax + rax]
0x129cc:	nop	dword ptr [rax]


0x129d5:	nop	word ptr cs:[rax + rax]
0x129df:	nop	


0x129f5:	nop	
0x129f6:	nop	word ptr cs:[rax + rax]


0x12a22:	nop	word ptr cs:[rax + rax]
0x12a2c:	nop	dword ptr [rax]


0x12a3a:	nop	word ptr [rax + rax]


0x12b56:	nop	word ptr cs:[rax + rax]


0x12bd3:	nop	dword ptr [rax]
0x12bd6:	nop	word ptr cs:[rax + rax]


0x12d6d:	nop	dword ptr [rax]


0x12dbd:	nop	dword ptr [rax]


0x12e3d:	nop	dword ptr [rax]


0x12ed6:	nop	word ptr cs:[rax + rax]


0x12eea:	nop	word ptr [rax + rax]


0x12f31:	nop	word ptr cs:[rax + rax]
0x12f3b:	nop	dword ptr [rax + rax]


0x12fd6:	nop	word ptr cs:[rax + rax]


0x1301c:	nop	dword ptr [rax]


0x13235:	nop	word ptr cs:[rax + rax]
0x1323f:	nop	


0x132ae:	nop	


0x132d3:	nop	dword ptr [rax]
0x132d6:	nop	word ptr cs:[rax + rax]


0x13314:	nop	
0x13316:	nop	word ptr cs:[rax + rax]


0x13324:	nop	
0x13326:	nop	word ptr cs:[rax + rax]


0x1344a:	nop	word ptr [rax + rax]


0x1346e:	nop	


0x134c1:	nop	word ptr cs:[rax + rax]
0x134cb:	nop	dword ptr [rax + rax]


0x1352d:	nop	dword ptr [rax]


0x13859:	nop	dword ptr [rax]


0x13865:	nop	
0x13866:	nop	word ptr cs:[rax + rax]


0x13875:	nop	
0x13876:	nop	word ptr cs:[rax + rax]


0x13a16:	nop	word ptr cs:[rax + rax]


0x13a69:	nop	dword ptr [rax]


0x13cfe:	nop	


0x13f4e:	nop	


0x13fcb:	nop	dword ptr [rax + rax]


0x1424e:	nop	


0x14254:	nop	word ptr cs:[rax + rax]
0x1425e:	nop	


0x1537f:	nop	


0x15413:	nop	word ptr cs:[rax + rax]
0x1541d:	nop	dword ptr [rax]


0x1561e:	nop	


0x15867:	mov	r11d, 0x10
0x1586d:	mov	ebx, 0x73
0x15872:	nop	word ptr [rax + rax]
0x15878:	cmp	r13, -1
0x1587c:	je	0x15f37


0x15f37:	mov	rsi, qword ptr [rsp + 0x20]
0x15f3c:	cmp	rsi, -1
0x15f40:	lea	rax, [rsi + 1]
0x15f44:	mov	qword ptr [r12 + 0x50], rsi
0x15f49:	je	0x15e6b


0x15882:	mov	qword ptr [r12 + 0x50], r13
0x15887:	cmp	r9, r13
0x1588a:	mov	rcx, qword ptr [r15 + 8]
0x1588e:	jbe	0x15eb0


0x15f4f:	mov	r13, qword ptr [rsp + 0x20]
0x15f54:	mov	qword ptr [rsp + 0x20], rax
0x15f59:	jmp	0x15887


0x15eb0:	add	r9, r9
0x15eb3:	lea	rax, [r13 + 1]
0x15eb7:	cmp	r9, r13
0x15eba:	cmovbe	r9, rax
0x15ebe:	movabs	rax, 0x7ffffffffffffff
0x15ec8:	cmp	r9, rax
0x15ecb:	ja	0x162ab


0x15894:	mov	rax, qword ptr [r15]
0x15897:	mov	rdx, rax
0x1589a:	shl	rdx, 5
0x1589e:	add	rdx, rcx
0x158a1:	cmp	rax, r13
0x158a4:	ja	0x158c6


0x15887:	cmp	r9, r13
0x1588a:	mov	rcx, qword ptr [r15 + 8]
0x1588e:	jbe	0x15eb0


0x15ed1:	mov	rsi, r9
0x15ed4:	mov	qword ptr [rsp + 0x48], r9
0x15ed9:	mov	qword ptr [rsp + 0x40], r10
0x15ede:	shl	rsi, 5
0x15ee2:	cmp	qword ptr [rsp + 8], rcx
0x15ee7:	mov	qword ptr [rsp + 0x38], r8
0x15eec:	mov	dword ptr [rsp + 0x30], r11d
0x15ef1:	je	0x15f91


0x158c6:	shl	r13, 5
0x158ca:	lea	rax, [rcx + r13]
0x158ce:	mov	edx, dword ptr [rax]
0x158d0:	test	edx, edx
0x158d2:	jne	0x15ea3


0x15f91:	mov	rdi, rsi
0x15f94:	call	0x2df0


0x15ef7:	mov	rdi, rcx
0x15efa:	call	0x2e90


0x158b0:	add	rax, 1
0x158b4:	mov	dword ptr [rdx], 0
0x158ba:	add	rdx, 0x20
0x158be:	cmp	rax, r13
0x158c1:	jbe	0x158b0


0x158c3:	mov	qword ptr [r15], rax
0x158c6:	shl	r13, 5
0x158ca:	lea	rax, [rcx + r13]
0x158ce:	mov	edx, dword ptr [rax]
0x158d0:	test	edx, edx
0x158d2:	jne	0x15ea3


0x158d8:	mov	dword ptr [rax], r11d
0x158db:	mov	byte ptr [r12 + 0x48], bl
0x158e0:	mov	rax, qword ptr [r14]
0x158e3:	mov	qword ptr [r12 + 8], rbp
0x158e8:	lea	rbx, [rax + 1]
0x158ec:	cmp	r10, rbx
0x158ef:	mov	qword ptr [r14], rbx
0x158f2:	ja	0x15980


0x15ea3:	cmp	edx, r11d
0x15ea6:	je	0x158db


0x158f8:	test	r10, r10
0x158fb:	js	0x162a7


0x15980:	mov	rcx, qword ptr [r14 + 8]
0x15984:	jmp	0x15698


0x158db:	mov	byte ptr [r12 + 0x48], bl
0x158e0:	mov	rax, qword ptr [r14]
0x158e3:	mov	qword ptr [r12 + 8], rbp
0x158e8:	lea	rbx, [rax + 1]
0x158ec:	cmp	r10, rbx
0x158ef:	mov	qword ptr [r14], rbx
0x158f2:	ja	0x15980


0x15eac:	jmp	0x15e6f


0x162a7:	mov	rcx, qword ptr [r15 + 8]
0x162ab:	cmp	qword ptr [rsp + 8], rcx
0x162b0:	jne	0x16114


0x15901:	add	r10, r10
0x15904:	movabs	rax, 0x2e8ba2e8ba2e8ba
0x1590e:	cmp	r10, rax
0x15911:	ja	0x162a7


0x15917:	lea	rax, [r10 + r10*4]
0x1591b:	mov	rdi, qword ptr [r14 + 8]
0x1591f:	cmp	qword ptr [rsp + 0x28], rdi
0x15924:	mov	qword ptr [rsp + 0x40], r9
0x15929:	mov	qword ptr [rsp + 0x38], r10
0x1592e:	lea	rax, [r10 + rax*2]
0x15932:	mov	qword ptr [rsp + 0x30], r8
0x15937:	lea	rsi, [rax*8]
0x1593f:	je	0x15ffd


0x15ffd:	mov	rdi, rsi
0x16000:	call	0x2df0


0x15945:	call	0x2e90


0x1594a:	test	rax, rax
0x1594d:	mov	rcx, rax
0x15950:	mov	r8, qword ptr [rsp + 0x30]
0x15955:	mov	r10, qword ptr [rsp + 0x38]
0x1595a:	mov	r9, qword ptr [rsp + 0x40]
0x1595f:	je	0x162a7


0x15965:	mov	rax, qword ptr [rsp + 0x28]
0x1596a:	cmp	rax, qword ptr [r14 + 8]
0x1596e:	mov	rbx, qword ptr [r14]
0x15971:	je	0x16020


0x16020:	lea	rax, [rbx + rbx*4]
0x16024:	mov	rsi, qword ptr [rsp + 0x28]
0x16029:	mov	rdi, rcx
0x1602c:	mov	qword ptr [rsp + 0x40], r9
0x16031:	mov	qword ptr [rsp + 0x38], r10
0x16036:	lea	rdx, [rbx + rax*2]
0x1603a:	mov	qword ptr [rsp + 0x30], r8
0x1603f:	shl	rdx, 3
0x16043:	call	0x2d80


0x15977:	mov	qword ptr [r14 + 8], rcx
0x1597b:	jmp	0x15698


0x16048:	mov	rbx, qword ptr [r14]
0x1604b:	mov	rcx, rax
0x1604e:	mov	r9, qword ptr [rsp + 0x40]
0x16053:	mov	r10, qword ptr [rsp + 0x38]
0x16058:	mov	r8, qword ptr [rsp + 0x30]
0x1605d:	jmp	0x15977


0x15eff:	test	rax, rax
0x15f02:	mov	rcx, rax
0x15f05:	mov	r11d, dword ptr [rsp + 0x30]
0x15f0a:	mov	r8, qword ptr [rsp + 0x38]
0x15f0f:	mov	r10, qword ptr [rsp + 0x40]
0x15f14:	mov	r9, qword ptr [rsp + 0x48]
0x15f19:	je	0x162a7


0x15f1f:	mov	rax, qword ptr [rsp + 8]
0x15f24:	cmp	rax, qword ptr [r15 + 8]
0x15f28:	je	0x15fb9


0x15fb9:	mov	rdx, qword ptr [r15]
0x15fbc:	mov	rsi, qword ptr [rsp + 8]
0x15fc1:	mov	rdi, rcx
0x15fc4:	mov	qword ptr [rsp + 0x48], r9
0x15fc9:	mov	qword ptr [rsp + 0x40], r10
0x15fce:	mov	qword ptr [rsp + 0x38], r8
0x15fd3:	mov	dword ptr [rsp + 0x30], r11d
0x15fd8:	shl	rdx, 5
0x15fdc:	call	0x2d80


0x15f2e:	mov	qword ptr [r15 + 8], rcx
0x15f32:	jmp	0x15894


0x15fe1:	mov	r9, qword ptr [rsp + 0x48]
0x15fe6:	mov	r10, qword ptr [rsp + 0x40]
0x15feb:	mov	rcx, rax
0x15fee:	mov	r8, qword ptr [rsp + 0x38]
0x15ff3:	mov	r11d, dword ptr [rsp + 0x30]
0x15ff8:	jmp	0x15f2e


0x16005:	test	rax, rax
0x16008:	mov	rcx, rax
0x1600b:	mov	r8, qword ptr [rsp + 0x30]
0x16010:	mov	r10, qword ptr [rsp + 0x38]
0x16015:	mov	r9, qword ptr [rsp + 0x40]
0x1601a:	je	0x16109


0x16109:	mov	rcx, qword ptr [r15 + 8]
0x1610d:	cmp	qword ptr [rsp + 8], rcx
0x16112:	je	0x1612c


0x15f99:	test	rax, rax
0x15f9c:	mov	rcx, rax
0x15f9f:	mov	r11d, dword ptr [rsp + 0x30]
0x15fa4:	mov	r8, qword ptr [rsp + 0x38]
0x15fa9:	mov	r10, qword ptr [rsp + 0x40]
0x15fae:	mov	r9, qword ptr [rsp + 0x48]
0x15fb3:	je	0x1611c


0x15d1c:	cmp	eax, 0xf
0x15d1f:	mov	r11d, 0x16
0x15d25:	jg	0x15878


0x15d2b:	test	al, 4
0x15d2d:	jne	0x15878


0x15878:	cmp	r13, -1
0x1587c:	je	0x15f37


0x15d33:	cmp	eax, 7
0x15d36:	mov	r11d, 0x15
0x15d3c:	jg	0x15878


0x15d42:	test	al, 2
0x15d44:	mov	r11d, 0x12
0x15d4a:	jne	0x15878


0x15d50:	xor	r11d, r11d
0x15d53:	test	al, 1
0x15d55:	sete	r11b
0x15d59:	add	r11d, 0x13
0x15d5d:	jmp	0x15878


0x15d7b:	cmp	eax, 0xf
0x15d7e:	mov	r11d, 9
0x15d84:	jg	0x15878


0x15d8a:	test	al, 4
0x15d8c:	jne	0x15878


0x15d92:	cmp	eax, 7
0x15d95:	mov	r11d, 7
0x15d9b:	jg	0x15878


0x15da1:	test	al, 2
0x15da3:	mov	r11d, 1
0x15da9:	jne	0x15878


0x15daf:	and	eax, 1
0x15db2:	cmp	eax, 1
0x15db5:	sbb	r11d, r11d
0x15db8:	and	r11d, 2
0x15dbc:	add	r11d, 3
0x15dc0:	jmp	0x15878


0x15ddb:	cmp	eax, 0xf
0x15dde:	mov	r11d, 0xc
0x15de4:	jg	0x15878


0x15dea:	xor	r11d, r11d
0x15ded:	test	al, 4
0x15def:	setne	r11b
0x15df3:	add	r11d, 0xb
0x15df7:	jmp	0x15878


0x15dfc:	mov	r11d, 0xe
0x15e02:	mov	ebx, 0x63
0x15e07:	jmp	0x15878


0x15e0c:	cmp	eax, 0xf
0x15e0f:	mov	r11d, 0xa
0x15e15:	jg	0x15878


0x15e1b:	test	al, 4
0x15e1d:	jne	0x15878


0x15e23:	cmp	eax, 7
0x15e26:	mov	r11d, 8
0x15e2c:	jg	0x15878


0x15e32:	test	al, 2
0x15e34:	mov	r11d, 2
0x15e3a:	jne	0x15878


0x15e40:	and	eax, 1
0x15e43:	cmp	eax, 1
0x15e46:	sbb	r11d, r11d
0x15e49:	and	r11d, 2
0x15e4d:	add	r11d, 4
0x15e51:	jmp	0x15878


0x1630c:	nop	dword ptr [rax]


0x16375:	nop	
0x16376:	nop	word ptr cs:[rax + rax]


0x16382:	nop	word ptr cs:[rax + rax]
0x1638c:	nop	dword ptr [rax]


0xd4e0:	mov	ebx, 2
0xd4e5:	nop	dword ptr [rax]
0xd4e8:	add	rcx, 1
0xd4ec:	movzx	edx, byte ptr [rcx]
0xd4ef:	lea	r8d, [rdx - 0x58]
0xd4f3:	cmp	r8b, 0x20
0xd4f7:	jbe	0xd4c8


0xd518:	or	r10d, 0x49
0xd51c:	jmp	0xd4e8


0xd520:	or	r10b, 0x92
0xd524:	jmp	0xd4e8


0xd530:	or	r10d, 0x200
0xd537:	jmp	0xd4e8


0xd540:	or	r10d, 0xc00
0xd547:	jmp	0xd4e8


0xd550:	or	r10d, 0x124
0xd557:	jmp	0xd4e8


0xde00:	xor	r10d, r10d
0xde03:	mov	eax, dword ptr [rsp + 8]
0xde07:	cmp	eax, 2
0xde0a:	je	0xe3c8


0xde30:	xor	r10d, r10d
0xde33:	cmp	dword ptr [rsp + 8], 2
0xde38:	je	0xe340


0xde58:	mov	edx, 9
0xde5d:	mov	ebx, 0x74
0xde62:	cmp	dword ptr [rsp + 8], 2
0xde67:	sete	al
0xde6a:	and	al, byte ptr [rsp + 0xf]
0xde6e:	jne	0xdfbe


0xde98:	mov	edx, 8
0xde9d:	mov	ebx, 0x62
0xdea2:	jmp	0xde74


0xdea8:	cmp	dword ptr [rsp + 8], 2
0xdead:	je	0xe280


0xdf50:	cmp	byte ptr [rsp + 0xd], 0
0xdf55:	jne	0xe123


0xdf78:	cmp	dword ptr [rsp + 8], 2
0xdf7d:	sete	dl
0xdf80:	xor	eax, eax
0xdf82:	jmp	0xdd68


0xdf90:	mov	edx, 7
0xdf95:	mov	ebx, 0x61
0xdf9a:	jmp	0xde74


0xdfa0:	cmp	dword ptr [rsp + 8], 2
0xdfa5:	sete	dl
0xdfa8:	test	rbp, rbp
0xdfab:	jne	0xdd5c


0xdfd0:	cmp	dword ptr [rsp + 8], 2
0xdfd5:	sete	dl
0xdfd8:	xor	r12d, r12d
0xdfdb:	jmp	0xdfb1


0xdfe0:	cmp	dword ptr [rsp + 8], 2
0xdfe5:	mov	ebx, 0x20
0xdfea:	sete	dl
0xdfed:	jmp	0xdfb1


0xdff0:	mov	edx, 0xd
0xdff5:	mov	ebx, 0x72
0xdffa:	jmp	0xde62


0xe000:	mov	edx, 0xc
0xe005:	mov	ebx, 0x66
0xe00a:	jmp	0xde74


0xe010:	mov	edx, 0xb
0xe015:	mov	ebx, 0x76
0xe01a:	jmp	0xde74


0xe020:	mov	edx, 0xa
0xe025:	mov	ebx, 0x6e
0xe02a:	jmp	0xde62


0xe0c0:	xor	r10d, r10d
0xe0c3:	cmp	byte ptr [rsp + 0xd], 0
0xe0c8:	jne	0xdebe


0xe0e0:	mov	edx, 0xc
0xe0e5:	xor	r10d, r10d
0xe0e8:	mov	ebx, 0x66
0xe0ed:	jmp	0xde74


0xe0f8:	mov	edx, 0xa
0xe0fd:	xor	r10d, r10d
0xe100:	mov	ebx, 0x6e
0xe105:	jmp	0xde62


0xe110:	mov	ebx, 0x61
0xe115:	jmp	0xdee0


0xe120:	xor	r10d, r10d
0xe123:	cmp	dword ptr [rsp + 8], 2
0xe128:	sete	dl
0xe12b:	cmp	byte ptr [rsp + 0xf], 0
0xe130:	jne	0xecca


0xe1c0:	cmp	dword ptr [rsp + 8], 2
0xe1c5:	mov	r12d, r10d
0xe1c8:	sete	dl
0xe1cb:	xor	r10d, r10d
0xe1ce:	xor	eax, eax
0xe1d0:	jmp	0xdd68


0xe1d8:	cmp	dword ptr [rsp + 8], 2
0xe1dd:	sete	dl
0xe1e0:	xor	r10d, r10d
0xe1e3:	jmp	0xdfa8


0xe1f0:	cmp	dword ptr [rsp + 8], 2
0xe1f5:	sete	dl
0xe1f8:	xor	r10d, r10d
0xe1fb:	xor	r12d, r12d
0xe1fe:	jmp	0xdfb1


0xe208:	cmp	dword ptr [rsp + 8], 2
0xe20d:	mov	r12d, r10d
0xe210:	mov	ebx, 0x20
0xe215:	sete	dl
0xe218:	xor	r10d, r10d
0xe21b:	jmp	0xdfb1


0xe238:	mov	ebx, 0x76
0xe23d:	jmp	0xdee0


0xe248:	mov	edx, 9
0xe24d:	xor	r10d, r10d
0xe250:	mov	ebx, 0x74
0xe255:	jmp	0xde62


0xe260:	mov	ebx, 0x62
0xe265:	jmp	0xdee0


0xe800:	test	ebx, ebx
0xe802:	jne	0xebfd


0x12580:	mov	r8d, 5
0x12586:	xor	r9d, r9d
0x12589:	mov	rax, rbx
0x1258c:	mul	rsi
0x1258f:	mov	rbx, rax
0x12592:	jo	0x1268f


0x15d68:	xor	r11d, r11d
0x15d6b:	cmp	eax, 7
0x15d6e:	setg	r11b
0x15d72:	add	r11d, 0xd
0x15d76:	jmp	0x15878


0x15dc8:	xor	r11d, r11d
0x15dcb:	cmp	eax, 7
0x15dce:	setg	r11b
0x15dd2:	add	r11d, 0xf
0x15dd6:	jmp	0x15878


0x15e60:	mov	r11d, 0x11
0x15e66:	jmp	0x15878


0x334a:	nop	word ptr [rax + rax]


0x3386:	nop	word ptr cs:[rax + rax]


0x33ce:	nop	


0x3e86:	nop	word ptr cs:[rax + rax]


0x3ed7:	nop	word ptr [rax + rax]


0x3f21:	nop	dword ptr [rax]


0x4008:	nop	dword ptr [rax + rax]


0x41d8:	nop	dword ptr [rax + rax]


0x4232:	nop	word ptr [rax + rax]


0x43da:	nop	word ptr [rax + rax]


0x4482:	nop	word ptr [rax + rax]


0x461e:	nop	


0x4641:	nop	dword ptr [rax]


0x4698:	nop	dword ptr [rax + rax]


0x46be:	nop	


0x471c:	nop	dword ptr [rax]


0x4798:	nop	dword ptr [rax + rax]


0x47bc:	nop	dword ptr [rax]


0x47de:	nop	


0x4e69:	nop	dword ptr [rax]


0x4eb2:	nop	word ptr [rax + rax]


0x4ebe:	nop	


0x4efb:	nop	dword ptr [rax + rax]


0x4f35:	nop	dword ptr [rax]


0x4f42:	nop	word ptr [rax + rax]


0x4fab:	nop	dword ptr [rax + rax]


0x5072:	nop	word ptr [rax + rax]


0x50eb:	nop	dword ptr [rax + rax]


0x5132:	nop	word ptr [rax + rax]


0x5261:	nop	dword ptr [rax]


0x532c:	nop	dword ptr [rax]


0x538d:	nop	dword ptr [rax]


0x54c7:	nop	word ptr [rax + rax]


0x562c:	nop	dword ptr [rax]


0x5683:	nop	dword ptr [rax + rax]


0x56c4:	nop	dword ptr [rax]


0x56e5:	nop	dword ptr [rax]


0x56f6:	nop	word ptr cs:[rax + rax]


0x5719:	nop	dword ptr [rax]


0x575e:	nop	


0x5837:	nop	word ptr [rax + rax]


0x585a:	nop	word ptr [rax + rax]


0x5874:	nop	dword ptr [rax]


0x58f1:	nop	dword ptr [rax]


0x5a8d:	nop	dword ptr [rax]


0x5ac6:	nop	word ptr cs:[rax + rax]


0x5b6c:	nop	dword ptr [rax]


0x5bc1:	nop	dword ptr [rax]


0x5bdf:	nop	


0x5f2b:	nop	dword ptr [rax + rax]


0x5f38:	nop	dword ptr [rax + rax]


0x5f8d:	nop	dword ptr [rax]


0x5f98:	nop	dword ptr [rax + rax]


0x6068:	nop	dword ptr [rax + rax]


0x62f4:	nop	dword ptr [rax]


0x6416:	nop	word ptr cs:[rax + rax]


0x645c:	nop	dword ptr [rax]


0x648b:	nop	dword ptr [rax + rax]


0x64d2:	nop	word ptr [rax + rax]


0x64e7:	nop	word ptr [rax + rax]


0x6546:	nop	word ptr cs:[rax + rax]


0x6626:	nop	word ptr cs:[rax + rax]


0x6665:	nop	dword ptr [rax]


0x6699:	nop	dword ptr [rax]


0x66fa:	nop	word ptr [rax + rax]


0x6715:	nop	dword ptr [rax]


0x6788:	nop	dword ptr [rax + rax]


0x67e5:	nop	dword ptr [rax]


0x683d:	nop	dword ptr [rax]


0x68a9:	nop	dword ptr [rax]


0x6a6e:	nop	


0x6ac9:	nop	dword ptr [rax]


0x6add:	nop	dword ptr [rax]


0x6bab:	nop	dword ptr [rax + rax]


0x6c55:	nop	dword ptr [rax]


0x6d35:	nop	dword ptr [rax]


0x6d82:	nop	word ptr [rax + rax]


0x6df7:	nop	word ptr [rax + rax]


0x6e08:	nop	dword ptr [rax + rax]


0x6e1a:	nop	word ptr [rax + rax]


0x6ec1:	nop	dword ptr [rax]


0x6ee7:	nop	word ptr [rax + rax]


0x6f4f:	nop	


0x6f8b:	nop	dword ptr [rax + rax]


0x6fab:	nop	dword ptr [rax + rax]


0x6ff1:	nop	dword ptr [rax]


0x7076:	nop	word ptr cs:[rax + rax]


0x7124:	nop	dword ptr [rax]


0x7199:	nop	dword ptr [rax]


0x71a9:	nop	dword ptr [rax]


0x727b:	nop	dword ptr [rax + rax]


0x728f:	nop	


0x73a5:	nop	dword ptr [rax]


0x7478:	nop	dword ptr [rax + rax]


0x74a5:	nop	dword ptr [rax]


0x7527:	nop	word ptr [rax + rax]


0x7544:	nop	dword ptr [rax]


0x7585:	nop	dword ptr [rax]


0x75a7:	nop	word ptr [rax + rax]


0x75c6:	nop	word ptr cs:[rax + rax]


0x763b:	nop	dword ptr [rax + rax]


0x76b1:	nop	dword ptr [rax]


0x785b:	nop	dword ptr [rax + rax]


0x7899:	nop	dword ptr [rax]


0x7961:	nop	dword ptr [rax]


0x7a66:	nop	word ptr cs:[rax + rax]


0x7b85:	nop	dword ptr [rax]


0x7bff:	nop	


0x7caa:	nop	word ptr [rax + rax]


0x7dca:	nop	word ptr [rax + rax]


0x7df4:	nop	dword ptr [rax]


0x7eef:	nop	


0x7f4c:	nop	dword ptr [rax]


0x8111:	nop	dword ptr [rax]


0x86df:	nop	


0x8d35:	nop	dword ptr [rax]


0x9dce:	nop	


0x9ebc:	nop	dword ptr [rax]


0x9faa:	nop	word ptr [rax + rax]


0xa02f:	nop	


0xa249:	nop	dword ptr [rax]


0xa2c9:	nop	dword ptr [rax]


0xa2ec:	nop	dword ptr [rax]


0xa325:	nop	dword ptr [rax]


0xa33a:	nop	word ptr [rax + rax]


0xa356:	nop	word ptr cs:[rax + rax]


0xa382:	nop	word ptr [rax + rax]


0xa55b:	nop	dword ptr [rax + rax]


0xa582:	nop	word ptr [rax + rax]


0xa6b2:	nop	word ptr [rax + rax]


0xa6d9:	nop	dword ptr [rax]


0xa799:	nop	dword ptr [rax]


0xa8bd:	nop	dword ptr [rax]


0xa8d1:	nop	dword ptr [rax]


0xa8ee:	nop	


0xa8f8:	nop	dword ptr [rax + rax]


0xa92e:	nop	


0xa93f:	nop	


0xaaf3:	nop	dword ptr [rax + rax]


0xac1b:	nop	dword ptr [rax + rax]


0xac48:	nop	dword ptr [rax + rax]


0xad19:	nop	dword ptr [rax]


0xad3f:	nop	


0xadfc:	nop	dword ptr [rax]


0xae46:	nop	word ptr cs:[rax + rax]


0xae5a:	nop	word ptr [rax + rax]


0xae7b:	nop	dword ptr [rax + rax]


0xaeb4:	nop	dword ptr [rax]


0xaffc:	nop	dword ptr [rax]


0xb047:	nop	word ptr [rax + rax]


0xb082:	nop	word ptr [rax + rax]


0xb0c3:	nop	dword ptr [rax + rax]


0xb111:	nop	dword ptr [rax]


0xb131:	nop	dword ptr [rax]


0xb193:	nop	dword ptr [rax + rax]


0xb1cc:	nop	dword ptr [rax]


0xb30e:	nop	


0xb32d:	nop	dword ptr [rax]


0xb3ab:	nop	dword ptr [rax + rax]


0xb3c7:	nop	word ptr [rax + rax]


0xb41c:	nop	dword ptr [rax]


0xb43e:	nop	


0xb47b:	nop	dword ptr [rax + rax]


0xb4d4:	nop	dword ptr [rax]


0xb567:	nop	word ptr [rax + rax]


0xb57b:	nop	dword ptr [rax + rax]


0xb73b:	nop	dword ptr [rax + rax]


0xb74b:	nop	dword ptr [rax + rax]


0xb763:	nop	dword ptr [rax + rax]


0xb81c:	nop	dword ptr [rax]


0xb898:	nop	dword ptr [rax + rax]


0xb8cd:	nop	dword ptr [rax]


0xb902:	nop	word ptr [rax + rax]


0xb94d:	nop	dword ptr [rax]


0xb982:	nop	word ptr [rax + rax]


0xb9d1:	nop	dword ptr [rax]


0xba0e:	nop	


0xbafb:	nop	dword ptr [rax + rax]


0xbb5a:	nop	word ptr [rax + rax]


0xbb99:	nop	dword ptr [rax]


0xbba9:	nop	dword ptr [rax]


0xbc2e:	nop	


0xbc81:	nop	dword ptr [rax]


0xbd4c:	nop	dword ptr [rax]


0xbd5a:	nop	word ptr [rax + rax]


0xbdbe:	nop	


0xbdd4:	nop	dword ptr [rax]


0xbe27:	nop	word ptr [rax + rax]


0xbe87:	nop	word ptr [rax + rax]


0xbea4:	nop	dword ptr [rax]


0xbf5b:	nop	dword ptr [rax + rax]


0xbfcc:	nop	dword ptr [rax]


0xbff7:	nop	word ptr [rax + rax]


0xc02b:	nop	dword ptr [rax + rax]


0xc083:	nop	dword ptr [rax + rax]


0xc0a4:	nop	dword ptr [rax]


0xc0c2:	nop	word ptr [rax + rax]


0xc10a:	nop	word ptr [rax + rax]


0xc13b:	nop	dword ptr [rax + rax]


0xc17f:	nop	


0xc1c9:	nop	dword ptr [rax]


0xc30f:	nop	


0xc32c:	nop	dword ptr [rax]


0xc38f:	nop	


0xc3b6:	nop	word ptr cs:[rax + rax]


0xc405:	nop	dword ptr [rax]


0xc491:	nop	dword ptr [rax]


0xc4a6:	nop	word ptr cs:[rax + rax]


0xc4d8:	nop	dword ptr [rax + rax]


0xc4e9:	nop	dword ptr [rax]


0xc516:	nop	word ptr cs:[rax + rax]


0xc6cf:	nop	


0xc6f1:	nop	dword ptr [rax]


0xc716:	nop	word ptr cs:[rax + rax]


0xc72a:	nop	word ptr [rax + rax]


0xc737:	nop	word ptr [rax + rax]


0xc7fb:	nop	dword ptr [rax + rax]


0xc87e:	nop	


0xc8c8:	nop	dword ptr [rax + rax]


0xc972:	nop	word ptr [rax + rax]


0xc9ad:	nop	dword ptr [rax]


0xc9ce:	nop	


0xc9ee:	nop	


0xca66:	nop	word ptr cs:[rax + rax]


0xcadf:	nop	


0xcba5:	nop	dword ptr [rax]


0xcbc6:	nop	word ptr cs:[rax + rax]


0xcbee:	nop	


0xcc0e:	nop	


0xcc2f:	nop	


0xcc3a:	nop	word ptr [rax + rax]


0xcc5e:	nop	


0xccde:	nop	


0xcd0e:	nop	


0xce31:	nop	dword ptr [rax]


0xce4d:	nop	dword ptr [rax]


0xce5c:	nop	dword ptr [rax]


0xce84:	nop	dword ptr [rax]


0xd049:	nop	dword ptr [rax]


0xd059:	nop	dword ptr [rax]


0xd0c9:	nop	dword ptr [rax]


0xd127:	nop	word ptr [rax + rax]


0xd13f:	nop	


0xd236:	nop	word ptr cs:[rax + rax]


0xd259:	nop	dword ptr [rax]


0xd272:	nop	word ptr [rax + rax]


0xd2c4:	nop	dword ptr [rax]


0xd364:	nop	dword ptr [rax]


0xd36f:	nop	


0xd398:	nop	dword ptr [rax + rax]


0xd3bf:	nop	


0xd4aa:	nop	word ptr [rax + rax]


0xd4c2:	nop	word ptr [rax + rax]


0xd4d7:	nop	word ptr [rax + rax]


0xd512:	nop	word ptr [rax + rax]


0xd51e:	nop	


0xd526:	nop	word ptr cs:[rax + rax]


0xd539:	nop	dword ptr [rax]


0xd549:	nop	dword ptr [rax]


0xd559:	nop	dword ptr [rax]


0xd56b:	nop	dword ptr [rax + rax]


0xd57f:	nop	


0xd58f:	nop	


0xd599:	nop	dword ptr [rax]


0xd5a9:	nop	dword ptr [rax]


0xd5b9:	nop	dword ptr [rax]


0xd61e:	nop	


0xd6c6:	nop	word ptr cs:[rax + rax]


0xd809:	nop	dword ptr [rax]


0xd827:	nop	word ptr [rax + rax]


0xd83c:	nop	dword ptr [rax]


0xd891:	nop	dword ptr [rax]


0xd8bc:	nop	dword ptr [rax]


0xd9d5:	nop	dword ptr [rax]


0xda8c:	nop	dword ptr [rax]


0xdadd:	nop	dword ptr [rax]


0xdd08:	nop	dword ptr [rax + rax]


0xddf7:	nop	word ptr [rax + rax]


0xde2e:	nop	


0xde51:	nop	dword ptr [rax]


0xde92:	nop	word ptr [rax + rax]


0xdea4:	nop	dword ptr [rax]


0xdf48:	nop	dword ptr [rax + rax]


0xdf71:	nop	dword ptr [rax]


0xdf87:	nop	word ptr [rax + rax]


0xdf9f:	nop	


0xdfce:	nop	


0xdfdd:	nop	dword ptr [rax]


0xdfef:	nop	


0xdfff:	nop	


0xe00f:	nop	


0xe01f:	nop	


0xe02f:	nop	


0xe09c:	nop	dword ptr [rax]


0xe0bc:	nop	dword ptr [rax]


0xe0ce:	nop	


0xe0df:	nop	


0xe0f2:	nop	word ptr [rax + rax]


0xe10a:	nop	word ptr [rax + rax]


0xe11a:	nop	word ptr [rax + rax]


0xe1bb:	nop	dword ptr [rax + rax]


0xe1d5:	nop	dword ptr [rax]


0xe1e8:	nop	dword ptr [rax + rax]


0xe203:	nop	dword ptr [rax + rax]


0xe232:	nop	word ptr [rax + rax]


0xe242:	nop	word ptr [rax + rax]


0xe25a:	nop	word ptr [rax + rax]


0xe26a:	nop	word ptr [rax + rax]


0xe278:	nop	dword ptr [rax + rax]


0xe29f:	nop	


0xe339:	nop	dword ptr [rax]


0xe382:	nop	word ptr [rax + rax]


0xe3a8:	nop	dword ptr [rax + rax]


0xe3c1:	nop	dword ptr [rax]


0xe3e2:	nop	word ptr [rax + rax]


0xe548:	nop	dword ptr [rax + rax]


0xe65b:	nop	dword ptr [rax + rax]


0xe67e:	nop	


0xe745:	nop	dword ptr [rax]


0xe7fd:	nop	dword ptr [rax]


0xea06:	nop	word ptr cs:[rax + rax]


0xea99:	nop	dword ptr [rax]


0xeb0d:	nop	dword ptr [rax]


0xebed:	nop	dword ptr [rax]


0xeefb:	nop	dword ptr [rax + rax]


0xf766:	nop	word ptr cs:[rax + rax]


0xf7dd:	nop	dword ptr [rax]


0xf7f7:	nop	word ptr [rax + rax]


0xf894:	nop	dword ptr [rax]


0xf8f1:	nop	dword ptr [rax]


0xf99f:	nop	


0xf9ff:	nop	


0xfae4:	nop	dword ptr [rax]


0xfb07:	nop	word ptr [rax + rax]


0xfb9a:	nop	word ptr [rax + rax]


0xfc11:	nop	dword ptr [rax]


0xfc8a:	nop	word ptr [rax + rax]


0xfd3b:	nop	dword ptr [rax + rax]


0xfd49:	nop	dword ptr [rax]


0xfd9d:	nop	dword ptr [rax]


0xfe0b:	nop	dword ptr [rax + rax]


0xfe25:	nop	dword ptr [rax]


0xff3e:	nop	


0xffe4:	nop	dword ptr [rax]


0xffec:	nop	dword ptr [rax]


0x10029:	nop	dword ptr [rax]


0x100c2:	nop	word ptr [rax + rax]


0x10155:	nop	dword ptr [rax]


0x10173:	nop	dword ptr [rax + rax]


0x101a6:	nop	word ptr cs:[rax + rax]


0x101bb:	nop	dword ptr [rax + rax]


0x101d7:	nop	word ptr [rax + rax]


0x101ed:	nop	dword ptr [rax]


0x1021c:	nop	dword ptr [rax]


0x10243:	nop	dword ptr [rax + rax]


0x10296:	nop	word ptr cs:[rax + rax]


0x10326:	nop	word ptr cs:[rax + rax]


0x10362:	nop	word ptr [rax + rax]


0x1037f:	nop	


0x103ba:	nop	word ptr [rax + rax]


0x1046b:	nop	dword ptr [rax + rax]


0x10533:	nop	dword ptr [rax + rax]


0x105d1:	nop	dword ptr [rax]


0x10603:	nop	dword ptr [rax + rax]


0x106a9:	nop	dword ptr [rax]


0x107c2:	nop	word ptr [rax + rax]


0x108c5:	nop	dword ptr [rax]


0x108de:	nop	


0x108f6:	nop	word ptr cs:[rax + rax]


0x10b0a:	nop	word ptr [rax + rax]


0x10b14:	nop	dword ptr [rax]


0x10b1f:	nop	


0x10b71:	nop	dword ptr [rax]


0x10bd7:	nop	word ptr [rax + rax]


0x10fc9:	nop	dword ptr [rax]


0x1102c:	nop	dword ptr [rax]


0x1117f:	nop	


0x111b7:	nop	word ptr [rax + rax]


0x11201:	nop	dword ptr [rax]


0x112a7:	nop	word ptr [rax + rax]


0x114fc:	nop	dword ptr [rax]


0x11556:	nop	word ptr cs:[rax + rax]


0x115ca:	nop	word ptr [rax + rax]


0x115e1:	nop	dword ptr [rax]


0x11639:	nop	dword ptr [rax]


0x11648:	nop	dword ptr [rax + rax]


0x11667:	nop	word ptr [rax + rax]


0x11687:	nop	word ptr [rax + rax]


0x116be:	nop	


0x116e2:	nop	word ptr [rax + rax]


0x116fd:	nop	dword ptr [rax]


0x1181e:	nop	


0x1186d:	nop	dword ptr [rax]


0x118af:	nop	


0x118b7:	nop	word ptr [rax + rax]


0x118df:	nop	


0x11935:	nop	dword ptr [rax]


0x11963:	nop	dword ptr [rax + rax]


0x11a56:	nop	word ptr cs:[rax + rax]


0x11ae5:	nop	dword ptr [rax]


0x11b06:	nop	word ptr cs:[rax + rax]


0x11b65:	nop	dword ptr [rax]


0x11ba1:	nop	dword ptr [rax]


0x11be8:	nop	dword ptr [rax + rax]


0x11c37:	nop	word ptr [rax + rax]


0x11c94:	nop	dword ptr [rax]


0x11cc2:	nop	word ptr [rax + rax]


0x11d76:	nop	word ptr cs:[rax + rax]


0x11dd9:	nop	dword ptr [rax]


0x11fe1:	nop	dword ptr [rax]


0x12092:	nop	word ptr [rax + rax]


0x12119:	nop	dword ptr [rax]


0x12144:	nop	dword ptr [rax]


0x1219d:	nop	dword ptr [rax]


0x12306:	nop	word ptr cs:[rax + rax]


0x12361:	nop	dword ptr [rax]


0x12372:	nop	word ptr [rax + rax]


0x123a2:	nop	word ptr [rax + rax]


0x123ac:	nop	dword ptr [rax]


0x1244b:	nop	dword ptr [rax + rax]


0x1257c:	nop	dword ptr [rax]


0x12603:	nop	dword ptr [rax + rax]


0x12744:	nop	dword ptr [rax]


0x12783:	nop	dword ptr [rax + rax]


0x127df:	nop	


0x12969:	nop	dword ptr [rax]


0x12a86:	nop	word ptr cs:[rax + rax]


0x12b13:	nop	dword ptr [rax + rax]


0x12b47:	nop	word ptr [rax + rax]


0x12bbd:	nop	dword ptr [rax]


0x12c2f:	nop	


0x12cb4:	nop	dword ptr [rax]


0x12ce3:	nop	dword ptr [rax + rax]


0x12d8f:	nop	


0x12df4:	nop	dword ptr [rax]


0x12e11:	nop	dword ptr [rax]


0x12e22:	nop	word ptr [rax + rax]


0x12e6e:	nop	


0x12eb4:	nop	dword ptr [rax]


0x12f7a:	nop	word ptr [rax + rax]


0x12fcc:	nop	dword ptr [rax]


0x13006:	nop	word ptr cs:[rax + rax]


0x130d9:	nop	dword ptr [rax]


0x1312f:	nop	


0x1316b:	nop	dword ptr [rax + rax]


0x131ba:	nop	word ptr [rax + rax]


0x131ea:	nop	word ptr [rax + rax]


0x131fe:	nop	


0x1321d:	nop	dword ptr [rax]


0x13283:	nop	dword ptr [rax + rax]


0x1330d:	nop	dword ptr [rax]


0x1336f:	nop	


0x13431:	nop	dword ptr [rax]


0x135dd:	nop	dword ptr [rax]


0x13672:	nop	word ptr [rax + rax]


0x136a4:	nop	dword ptr [rax]


0x13772:	nop	word ptr [rax + rax]


0x138b3:	nop	dword ptr [rax + rax]


0x13901:	nop	dword ptr [rax]


0x13968:	nop	dword ptr [rax + rax]


0x139ae:	nop	


0x13a58:	nop	dword ptr [rax + rax]


0x13f95:	nop	dword ptr [rax]


0x1406b:	nop	dword ptr [rax + rax]


0x14096:	nop	word ptr cs:[rax + rax]


0x140cf:	nop	


0x14119:	nop	dword ptr [rax]


0x1413b:	nop	dword ptr [rax + rax]


0x141e1:	nop	dword ptr [rax]


0x14464:	nop	dword ptr [rax]


0x14493:	nop	dword ptr [rax + rax]


0x147bd:	nop	dword ptr [rax]


0x148f2:	nop	word ptr [rax + rax]


0x14a1f:	nop	


0x14aa2:	nop	word ptr [rax + rax]


0x14b23:	nop	dword ptr [rax + rax]


0x14b4f:	nop	


0x14b64:	nop	dword ptr [rax]


0x14b94:	nop	dword ptr [rax]


0x14be6:	nop	word ptr cs:[rax + rax]


0x14c1c:	nop	dword ptr [rax]


0x14c4c:	nop	dword ptr [rax]


0x14c8b:	nop	dword ptr [rax + rax]


0x14ca1:	nop	dword ptr [rax]


0x14cb5:	nop	dword ptr [rax]


0x14cc1:	nop	dword ptr [rax]


0x14d19:	nop	dword ptr [rax]


0x14d39:	nop	dword ptr [rax]


0x14d62:	nop	word ptr [rax + rax]


0x14dbd:	nop	dword ptr [rax]


0x14dcf:	nop	


0x14e02:	nop	word ptr [rax + rax]


0x14e88:	nop	dword ptr [rax + rax]


0x14e98:	nop	dword ptr [rax + rax]


0x14ecd:	nop	dword ptr [rax]


0x14f0a:	nop	word ptr [rax + rax]


0x14f23:	nop	dword ptr [rax + rax]


0x14f3a:	nop	word ptr [rax + rax]


0x14f69:	nop	dword ptr [rax]


0x14fb8:	nop	dword ptr [rax + rax]


0x14fcc:	nop	dword ptr [rax]


0x14fdb:	nop	dword ptr [rax + rax]


0x14feb:	nop	dword ptr [rax + rax]


0x14ffc:	nop	dword ptr [rax]


0x15048:	nop	dword ptr [rax + rax]


0x15058:	nop	dword ptr [rax + rax]


0x1506f:	nop	


0x15086:	nop	word ptr cs:[rax + rax]


0x150aa:	nop	word ptr [rax + rax]


0x15123:	nop	dword ptr [rax + rax]


0x15138:	nop	dword ptr [rax + rax]


0x1518b:	nop	dword ptr [rax + rax]


0x1533d:	nop	dword ptr [rax]


0x153a9:	nop	dword ptr [rax]


0x153f5:	nop	dword ptr [rax]


0x15458:	nop	dword ptr [rax + rax]


0x1568e:	nop	


0x156d1:	nop	dword ptr [rax]


0x15737:	nop	word ptr [rax + rax]


0x15782:	nop	word ptr [rax + rax]


0x15798:	nop	dword ptr [rax + rax]


0x157a8:	nop	dword ptr [rax + rax]


0x157b8:	nop	dword ptr [rax + rax]


0x157c8:	nop	dword ptr [rax + rax]


0x157f7:	nop	word ptr [rax + rax]


0x1581e:	nop	


0x1583d:	nop	dword ptr [rax]


0x15845:	nop	dword ptr [rax]


0x158a6:	nop	word ptr cs:[rax + rax]


0x15a76:	nop	word ptr cs:[rax + rax]


0x15b2c:	nop	dword ptr [rax]


0x15c0d:	nop	dword ptr [rax]


0x15c59:	nop	dword ptr [rax]


0x15d62:	nop	word ptr [rax + rax]


0x15dc5:	nop	dword ptr [rax]


0x15e56:	nop	word ptr cs:[rax + rax]


0x15eae:	nop	


0x162bb:	nop	dword ptr [rax + rax]


