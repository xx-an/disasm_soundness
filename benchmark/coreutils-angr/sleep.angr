0x4cc0:	sub	rsp, 8
0x4cc4:	add	rsp, 8
0x4cc8:	ret	


0x4cb0:	mov	rdx, qword ptr [rip + 0x202351]
0x4cb7:	xor	esi, esi
0x4cb9:	jmp	0x14e0


0x4ca0:	ret	


0x4c30:	push	r15
0x4c32:	push	r14
0x4c34:	mov	r15, rdx
0x4c37:	push	r13
0x4c39:	push	r12
0x4c3b:	lea	r12, [rip + 0x201f6e]
0x4c42:	push	rbp
0x4c43:	lea	rbp, [rip + 0x201f6e]
0x4c4a:	push	rbx
0x4c4b:	mov	r13d, edi
0x4c4e:	mov	r14, rsi
0x4c51:	sub	rbp, r12
0x4c54:	sub	rsp, 8
0x4c58:	sar	rbp, 3
0x4c5c:	call	0x1270


0x4bd0:	mov	rax, qword ptr [rdi + 8]
0x4bd4:	cmp	qword ptr [rdi + 0x10], rax
0x4bd8:	je	0x4be0


0x4b90:	test	rdi, rdi
0x4b93:	push	rbx
0x4b94:	mov	rbx, rdi
0x4b97:	je	0x4baa


0x4b10:	push	r12
0x4b12:	push	rbp
0x4b13:	push	rbx
0x4b14:	mov	rbx, rdi
0x4b17:	call	0x1440


0x4ad0:	sub	rsp, 8
0x4ad4:	mov	edi, 0xe
0x4ad9:	call	0x1470


0x4a70:	sub	rsp, 8
0x4a74:	xor	esi, esi
0x4a76:	call	0x14a0


0x49b0:	ucomisd	xmm0, qword ptr [rip + 0xf98]
0x49b8:	jbe	0x4a50


0x4930:	push	r12
0x4932:	push	rbp
0x4933:	mov	rbp, rdi
0x4936:	push	rbx
0x4937:	call	0x12f0


0x48c0:	push	rbp
0x48c1:	push	rbx
0x48c2:	mov	rbp, rdi
0x48c5:	mov	rbx, rsi
0x48c8:	sub	rsp, 8
0x48cc:	mov	rax, qword ptr [rip + 0x202965]
0x48d3:	test	rax, rax
0x48d6:	je	0x4910


0x47f0:	push	r12
0x47f2:	push	rbp
0x47f3:	push	rbx
0x47f4:	sub	rsp, 0x20
0x47f8:	mov	rax, qword ptr fs:[0x28]
0x4801:	mov	qword ptr [rsp + 0x18], rax
0x4806:	xor	eax, eax
0x4808:	mov	rax, qword ptr [rdi + 8]
0x480c:	cmp	rax, 0x3b9ac9ff
0x4812:	ja	0x48a0


0x4760:	push	r13
0x4762:	push	r12
0x4764:	mov	r13, rsi
0x4767:	push	rbp
0x4768:	push	rbx
0x4769:	mov	rbx, rdi
0x476c:	mov	r12, rdx
0x476f:	sub	rsp, 0x18
0x4773:	mov	rax, qword ptr fs:[0x28]
0x477c:	mov	qword ptr [rsp + 8], rax
0x4781:	xor	eax, eax
0x4783:	lea	rax, [rsp + 4]
0x4788:	test	rdi, rdi
0x478b:	cmove	rbx, rax
0x478f:	mov	rdi, rbx
0x4792:	call	0x13a0


0x4690:	push	r14
0x4692:	push	r13
0x4694:	mov	r14, rcx
0x4697:	push	r12
0x4699:	push	rbp
0x469a:	mov	rbp, rdi
0x469d:	push	rbx
0x469e:	mov	r13, rdx
0x46a1:	mov	rbx, rsi
0x46a4:	sub	rsp, 0x10
0x46a8:	mov	rax, qword ptr fs:[0x28]
0x46b1:	mov	qword ptr [rsp + 8], rax
0x46b6:	xor	eax, eax
0x46b8:	call	0x12c0


0x4610:	push	rbp
0x4611:	push	rbx
0x4612:	sub	rsp, 0x28
0x4616:	mov	rax, qword ptr fs:[0x28]
0x461f:	mov	qword ptr [rsp + 0x18], rax
0x4624:	xor	eax, eax
0x4626:	mov	rbp, rsp
0x4629:	call	0x49b0


0x45d0:	lea	rsi, [rip + 0x1358]
0x45d7:	sub	rsp, 8
0x45db:	mov	edx, 5
0x45e0:	xor	edi, edi
0x45e2:	call	0x1350


0x45b0:	push	rbx
0x45b1:	mov	rbx, rdi
0x45b4:	call	0x1370


0x4580:	push	rbp
0x4581:	push	rbx
0x4582:	mov	rbp, rdi
0x4585:	mov	rdi, rsi
0x4588:	mov	rbx, rsi
0x458b:	sub	rsp, 8
0x458f:	call	0x4380


0x4550:	mov	rax, rdi
0x4553:	sub	rsp, 8
0x4557:	mul	rsi
0x455a:	seto	dl
0x455d:	test	rax, rax
0x4560:	js	0x4579


0x4530:	push	rbx
0x4531:	mov	rbx, rdi
0x4534:	call	0x4380


0x44e0:	test	rdi, rdi
0x44e3:	mov	rax, qword ptr [rsi]
0x44e6:	je	0x4510


0x4450:	test	rdi, rdi
0x4453:	mov	r9, rdx
0x4456:	mov	rcx, qword ptr [rsi]
0x4459:	je	0x4490


0x4420:	mov	rax, rsi
0x4423:	mul	rdx
0x4426:	mov	rsi, rax
0x4429:	seto	al
0x442c:	test	rsi, rsi
0x442f:	js	0x443b


0x43e0:	test	rsi, rsi
0x43e3:	push	rbx
0x43e4:	mov	rbx, rsi
0x43e7:	jne	0x43ee


0x43d0:	jmp	0x4380


0x43a0:	mov	rax, rdi
0x43a3:	mul	rsi
0x43a6:	mov	rdi, rax
0x43a9:	seto	al
0x43ac:	test	rdi, rdi
0x43af:	js	0x43bb


0x4380:	push	rbx
0x4381:	mov	rbx, rdi
0x4384:	call	0x1450


0x4300:	push	rbx
0x4301:	lea	rsi, [rip + 0x131a]
0x4308:	mov	edx, 5
0x430d:	xor	edi, edi
0x430f:	call	0x1350


0x4220:	push	rbp
0x4221:	push	rbx
0x4222:	mov	r10d, 0x20
0x4228:	xor	r11d, r11d
0x422b:	sub	rsp, 0xb8
0x4232:	mov	rax, qword ptr fs:[0x28]
0x423b:	mov	qword ptr [rsp + 0x78], rax
0x4240:	xor	eax, eax
0x4242:	lea	rax, [rsp + 0xd0]
0x424a:	mov	qword ptr [rsp + 0xa0], r8
0x4252:	lea	rbx, [rsp + 0xd0]
0x425a:	lea	r8, [rsp + 0x20]
0x425f:	mov	qword ptr [rsp + 0xa8], r9
0x4267:	mov	dword ptr [rsp + 8], 0x20
0x426f:	mov	qword ptr [rsp + 0x10], rax
0x4274:	lea	rax, [rsp + 0x80]
0x427c:	xor	r9d, r9d
0x427f:	mov	qword ptr [rsp + 0x18], rax
0x4284:	mov	rbp, rax
0x4287:	nop	word ptr [rax + rax]
0x4290:	cmp	r10d, 0x2f
0x4294:	ja	0x42ec


0x41a0:	sub	rsp, 0x68
0x41a4:	mov	r10, r8
0x41a7:	xor	r9d, r9d
0x41aa:	mov	rax, qword ptr fs:[0x28]
0x41b3:	mov	qword ptr [rsp + 0x58], rax
0x41b8:	xor	eax, eax
0x41ba:	mov	r8, rsp
0x41bd:	nop	dword ptr [rax]
0x41c0:	mov	eax, dword ptr [r10]
0x41c3:	cmp	eax, 0x2f
0x41c6:	ja	0x420a


0x4180:	xor	r9d, r9d
0x4183:	cmp	qword ptr [r8], 0
0x4187:	je	0x419b


0x3d60:	push	r15
0x3d62:	push	r14
0x3d64:	push	r13
0x3d66:	push	r12
0x3d68:	mov	r12, r9
0x3d6b:	push	rbp
0x3d6c:	push	rbx
0x3d6d:	mov	rbp, rdi
0x3d70:	mov	rbx, r8
0x3d73:	sub	rsp, 0x28
0x3d77:	test	rsi, rsi
0x3d7a:	je	0x3e98


0x3d40:	lea	rcx, [rip + 0x2032d9]
0x3d47:	mov	rsi, rdi
0x3d4a:	mov	rdx, -1
0x3d51:	xor	edi, edi
0x3d53:	jmp	0x3400


0x3d20:	lea	rcx, [rip + 0x2032f9]
0x3d27:	mov	rdx, -1
0x3d2e:	jmp	0x3400


0x3d00:	lea	rcx, [rip + 0x203319]
0x3d07:	mov	rdx, rsi
0x3d0a:	mov	rsi, rdi
0x3d0d:	xor	edi, edi
0x3d0f:	jmp	0x3400


0x3cf0:	lea	rcx, [rip + 0x203329]
0x3cf7:	jmp	0x3400


0x3cd0:	mov	r8, rcx
0x3cd3:	mov	rcx, rdx
0x3cd6:	mov	rdx, rsi
0x3cd9:	mov	rsi, rdi
0x3cdc:	xor	edi, edi
0x3cde:	jmp	0x3c00


0x3cb0:	mov	rcx, rdx
0x3cb3:	mov	r8, -1
0x3cba:	mov	rdx, rsi
0x3cbd:	mov	rsi, rdi
0x3cc0:	xor	edi, edi
0x3cc2:	jmp	0x3c00


0x3ca0:	mov	r8, -1
0x3ca7:	jmp	0x3c00


0x3c00:	sub	rsp, 0x48
0x3c04:	mov	r9, rcx
0x3c07:	mov	rcx, qword ptr [rip + 0x203622]
0x3c0e:	movdqa	xmm0, xmmword ptr [rip + 0x2035ea]
0x3c16:	mov	rax, qword ptr fs:[0x28]
0x3c1f:	mov	qword ptr [rsp + 0x38], rax
0x3c24:	xor	eax, eax
0x3c26:	movaps	xmmword ptr [rsp], xmm0
0x3c2a:	test	rsi, rsi
0x3c2d:	mov	qword ptr [rsp + 0x30], rcx
0x3c32:	mov	dword ptr [rsp], 0xa
0x3c39:	movdqa	xmm0, xmmword ptr [rip + 0x2035cf]
0x3c41:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x3c46:	movdqa	xmm0, xmmword ptr [rip + 0x2035d2]
0x3c4e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x3c53:	je	0x3c87


0x3b70:	sub	rsp, 0x48
0x3b74:	mov	rax, rdx
0x3b77:	mov	rdx, qword ptr fs:[0x28]
0x3b80:	mov	qword ptr [rsp + 0x38], rdx
0x3b85:	xor	edx, edx
0x3b87:	cmp	esi, 0xa
0x3b8a:	je	0x3bf4


0x3b60:	mov	edx, 0x3a
0x3b65:	jmp	0x3a90


0x3b40:	mov	edx, 0x3a
0x3b45:	mov	rsi, -1
0x3b4c:	jmp	0x3a90


0x3b30:	movsx	edx, sil
0x3b34:	mov	rsi, -1
0x3b3b:	jmp	0x3a90


0x3a90:	sub	rsp, 0x48
0x3a94:	mov	ecx, edx
0x3a96:	mov	rax, qword ptr fs:[0x28]
0x3a9f:	mov	qword ptr [rsp + 0x38], rax
0x3aa4:	xor	eax, eax
0x3aa6:	mov	rax, qword ptr [rip + 0x203783]
0x3aad:	mov	r8, rsp
0x3ab0:	and	ecx, 0x1f
0x3ab3:	movdqa	xmm0, xmmword ptr [rip + 0x203745]
0x3abb:	mov	qword ptr [rsp + 0x30], rax
0x3ac0:	mov	eax, edx
0x3ac2:	movaps	xmmword ptr [rsp], xmm0
0x3ac6:	shr	al, 5
0x3ac9:	movzx	eax, al
0x3acc:	lea	r9, [r8 + rax*4 + 8]
0x3ad1:	movdqa	xmm0, xmmword ptr [rip + 0x203737]
0x3ad9:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x3ade:	movdqa	xmm0, xmmword ptr [rip + 0x20373a]
0x3ae6:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x3aeb:	mov	edx, dword ptr [r9]
0x3aee:	mov	eax, edx
0x3af0:	shr	eax, cl
0x3af2:	not	eax
0x3af4:	and	eax, 1
0x3af7:	shl	eax, cl
0x3af9:	mov	rcx, r8
0x3afc:	xor	eax, edx
0x3afe:	mov	rdx, rsi
0x3b01:	mov	rsi, rdi
0x3b04:	mov	dword ptr [r9], eax
0x3b07:	xor	edi, edi
0x3b09:	call	0x3400


0x3a80:	mov	rcx, rdx
0x3a83:	mov	rdx, rsi
0x3a86:	mov	esi, edi
0x3a88:	xor	edi, edi
0x3a8a:	jmp	0x39e0


0x3a70:	mov	rdx, rsi
0x3a73:	mov	esi, edi
0x3a75:	xor	edi, edi
0x3a77:	jmp	0x3950


0x39e0:	sub	rsp, 0x48
0x39e4:	mov	rax, rdx
0x39e7:	mov	rdx, rcx
0x39ea:	mov	rcx, qword ptr fs:[0x28]
0x39f3:	mov	qword ptr [rsp + 0x38], rcx
0x39f8:	xor	ecx, ecx
0x39fa:	cmp	esi, 0xa
0x39fd:	je	0x3a60


0x3950:	sub	rsp, 0x48
0x3954:	mov	rax, rdx
0x3957:	mov	rdx, qword ptr fs:[0x28]
0x3960:	mov	qword ptr [rsp + 0x38], rdx
0x3965:	xor	edx, edx
0x3967:	cmp	esi, 0xa
0x396a:	je	0x39d4


0x3930:	lea	rcx, [rip + 0x2038c9]
0x3937:	mov	rdx, rsi
0x393a:	mov	rsi, rdi
0x393d:	xor	edi, edi
0x393f:	jmp	0x3400


0x3910:	lea	rcx, [rip + 0x2038e9]
0x3917:	mov	rsi, rdi
0x391a:	mov	rdx, -1
0x3921:	xor	edi, edi
0x3923:	jmp	0x3400


0x3900:	lea	rcx, [rip + 0x2038f9]
0x3907:	jmp	0x3400


0x38e0:	lea	rcx, [rip + 0x203919]
0x38e7:	mov	rdx, -1
0x38ee:	jmp	0x3400


0x3840:	mov	eax, dword ptr [rip + 0x203812]
0x3846:	push	r12
0x3848:	mov	r12, qword ptr [rip + 0x203811]
0x384f:	push	rbp
0x3850:	push	rbx
0x3851:	cmp	eax, 1
0x3854:	jle	0x3881


0x3830:	mov	rcx, rdx
0x3833:	xor	edx, edx
0x3835:	jmp	0x3740


0x3740:	push	r15
0x3742:	push	r14
0x3744:	lea	rax, [rip + 0x203ab5]
0x374b:	push	r13
0x374d:	push	r12
0x374f:	mov	r12, rdx
0x3752:	push	rbp
0x3753:	push	rbx
0x3754:	mov	rbx, rcx
0x3757:	mov	r14, rdi
0x375a:	mov	r15, rsi
0x375d:	sub	rsp, 0x38
0x3761:	test	rcx, rcx
0x3764:	cmove	rbx, rax
0x3768:	xor	ebp, ebp
0x376a:	call	0x12c0


0x36c0:	push	r15
0x36c2:	push	r14
0x36c4:	lea	rax, [rip + 0x203b35]
0x36cb:	push	r13
0x36cd:	push	r12
0x36cf:	mov	r13, rdi
0x36d2:	push	rbp
0x36d3:	push	rbx
0x36d4:	mov	rbx, r8
0x36d7:	mov	r14, rsi
0x36da:	mov	r15, rdx
0x36dd:	sub	rsp, 0x18
0x36e1:	test	r8, r8
0x36e4:	cmove	rbx, rax
0x36e8:	mov	qword ptr [rsp + 8], rcx
0x36ed:	call	0x12c0


0x3690:	lea	rax, [rip + 0x203b69]
0x3697:	test	rdi, rdi
0x369a:	cmove	rdi, rax
0x369e:	test	rsi, rsi
0x36a1:	mov	dword ptr [rdi], 0xa
0x36a7:	je	0x36b7


0x3670:	lea	rax, [rip + 0x203b89]
0x3677:	test	rdi, rdi
0x367a:	cmove	rdi, rax
0x367e:	mov	eax, dword ptr [rdi + 4]
0x3681:	mov	dword ptr [rdi + 4], esi
0x3684:	ret	


0x3630:	lea	rax, [rip + 0x203bc9]
0x3637:	test	rdi, rdi
0x363a:	mov	ecx, esi
0x363c:	cmove	rdi, rax
0x3640:	mov	eax, esi
0x3642:	and	ecx, 0x1f
0x3645:	shr	al, 5
0x3648:	movzx	eax, al
0x364b:	lea	rdi, [rdi + rax*4 + 8]
0x3650:	mov	esi, dword ptr [rdi]
0x3652:	mov	eax, esi
0x3654:	shr	eax, cl
0x3656:	xor	edx, eax
0x3658:	and	eax, 1
0x365b:	and	edx, 1
0x365e:	shl	edx, cl
0x3660:	xor	edx, esi
0x3662:	mov	dword ptr [rdi], edx
0x3664:	ret	


0x3610:	lea	rax, [rip + 0x203be9]
0x3617:	test	rdi, rdi
0x361a:	cmove	rdi, rax
0x361e:	mov	dword ptr [rdi], esi
0x3620:	ret	


0x35f0:	lea	rax, [rip + 0x203c09]
0x35f7:	test	rdi, rdi
0x35fa:	cmove	rdi, rax
0x35fe:	mov	eax, dword ptr [rdi]
0x3600:	ret	


0x35b0:	push	r12
0x35b2:	push	rbp
0x35b3:	push	rbx
0x35b4:	mov	rbx, rdi
0x35b7:	call	0x12c0


0x3400:	push	r15
0x3402:	push	r14
0x3404:	movsxd	r15, edi
0x3407:	push	r13
0x3409:	push	r12
0x340b:	mov	r14, rdx
0x340e:	push	rbp
0x340f:	push	rbx
0x3410:	mov	rbp, rcx
0x3413:	sub	rsp, 0x28
0x3417:	mov	qword ptr [rsp + 8], rsi
0x341c:	call	0x12c0


0x21c0:	push	r15
0x21c2:	push	r14
0x21c4:	mov	r15d, r8d
0x21c7:	push	r13
0x21c9:	push	r12
0x21cb:	mov	r14, rdi
0x21ce:	push	rbp
0x21cf:	push	rbx
0x21d0:	mov	ebx, r9d
0x21d3:	mov	r13, rsi
0x21d6:	mov	rbp, rcx
0x21d9:	and	ebx, 2
0x21dc:	sub	rsp, 0xb8
0x21e3:	mov	rax, qword ptr [rsp + 0xf0]
0x21eb:	mov	qword ptr [rsp + 0x10], rdx
0x21f0:	mov	dword ptr [rsp + 8], r8d
0x21f5:	mov	dword ptr [rsp + 0x78], r9d
0x21fa:	mov	qword ptr [rsp + 0x20], rax
0x21ff:	mov	rax, qword ptr [rsp + 0xf8]
0x2207:	mov	qword ptr [rsp + 0x68], rax
0x220c:	mov	rax, qword ptr [rsp + 0x100]
0x2214:	mov	qword ptr [rsp + 0x60], rax
0x2219:	mov	rax, qword ptr fs:[0x28]
0x2222:	mov	qword ptr [rsp + 0xa8], rax
0x222a:	xor	eax, eax
0x222c:	call	0x1360


0x20d0:	push	rbp
0x20d1:	push	rbx
0x20d2:	mov	rbp, rdi
0x20d5:	mov	ebx, esi
0x20d7:	sub	rsp, 8
0x20db:	call	0x4ad0


0x2030:	test	rdi, rdi
0x2033:	push	rbx
0x2034:	je	0x20ad


0x1ef0:	push	r14
0x1ef2:	push	r13
0x1ef4:	mov	r14, r8
0x1ef7:	push	r12
0x1ef9:	push	rbp
0x1efa:	mov	r12, rdx
0x1efd:	push	rbx
0x1efe:	mov	r13, rcx
0x1f01:	sub	rsp, 0xd0
0x1f08:	test	al, al
0x1f0a:	mov	rbp, qword ptr [rsp + 0x100]
0x1f12:	je	0x1f4b


0x1db0:	push	r13
0x1db2:	push	r12
0x1db4:	mov	r13, r8
0x1db7:	push	rbp
0x1db8:	push	rbx
0x1db9:	mov	rbp, rdx
0x1dbc:	mov	r12, rcx
0x1dbf:	sub	rsp, 0xe8
0x1dc6:	test	al, al
0x1dc8:	je	0x1e04


0x1d00:	push	rbp
0x1d01:	push	rbx
0x1d02:	sub	rsp, 8
0x1d06:	mov	rdi, qword ptr [rip + 0x20537b]
0x1d0d:	call	0x4930


0x1cf0:	mov	byte ptr [rip + 0x2053d9], dil
0x1cf7:	ret	


0x1ce0:	mov	qword ptr [rip + 0x2053f1], rdi
0x1ce7:	ret	


0x1c20:	push	r13
0x1c22:	push	r12
0x1c24:	push	rbp
0x1c25:	push	rbx
0x1c26:	mov	rbx, rsi
0x1c29:	mov	rbp, rdi
0x1c2c:	sub	rsp, 0x38
0x1c30:	lea	rsi, [rsp + 0x18]
0x1c35:	mov	rax, qword ptr fs:[0x28]
0x1c3e:	mov	qword ptr [rsp + 0x28], rax
0x1c43:	xor	eax, eax
0x1c45:	call	0x1300


0x1900:	push	r13
0x1902:	push	r12
0x1904:	mov	edx, 5
0x1909:	push	rbp
0x190a:	push	rbx
0x190b:	mov	ebp, edi
0x190d:	sub	rsp, 0x88
0x1914:	mov	rbx, qword ptr [rip + 0x2057c5]
0x191b:	mov	rax, qword ptr fs:[0x28]
0x1924:	mov	qword ptr [rsp + 0x78], rax
0x1929:	xor	eax, eax
0x192b:	test	edi, edi
0x192d:	je	0x195d


0x18f0:	push	rbp
0x18f1:	mov	rbp, rsp
0x18f4:	pop	rbp
0x18f5:	jmp	0x1860


0x18b0:	cmp	byte ptr [rip + 0x205811], 0
0x18b7:	jne	0x18e8


0x1860:	lea	rdi, [rip + 0x205819]
0x1867:	lea	rsi, [rip + 0x205812]
0x186e:	push	rbp
0x186f:	sub	rsi, rdi
0x1872:	mov	rbp, rsp
0x1875:	sar	rsi, 3
0x1879:	mov	rax, rsi
0x187c:	shr	rax, 0x3f
0x1880:	add	rsi, rax
0x1883:	sar	rsi, 1
0x1886:	je	0x18a0


0x1820:	lea	rdi, [rip + 0x205859]
0x1827:	push	rbp
0x1828:	lea	rax, [rip + 0x205851]
0x182f:	cmp	rax, rdi
0x1832:	mov	rbp, rsp
0x1835:	je	0x1850


0x17f0:	xor	ebp, ebp
0x17f2:	mov	r9, rdx
0x17f5:	pop	rsi
0x17f6:	mov	rdx, rsp
0x17f9:	and	rsp, 0xfffffffffffffff0
0x17fd:	push	rax
0x17fe:	push	rsp
0x17ff:	lea	r8, [rip + 0x349a]
0x1806:	lea	rcx, [rip + 0x3423]
0x180d:	lea	rdi, [rip - 0x2b4]
0x1814:	call	qword ptr [rip + 0x2057c6]


0x1560:	push	r15
0x1562:	push	r14
0x1564:	push	r13
0x1566:	push	r12
0x1568:	mov	r12, rsi
0x156b:	push	rbp
0x156c:	push	rbx
0x156d:	mov	ebp, edi
0x156f:	sub	rsp, 0x38
0x1573:	mov	rdi, qword ptr [rsi]
0x1576:	mov	rax, qword ptr fs:[0x28]
0x157f:	mov	qword ptr [rsp + 0x28], rax
0x1584:	xor	eax, eax
0x1586:	call	0x2030


0x1270:	sub	rsp, 8
0x1274:	mov	rax, qword ptr [rip + 0x205d6d]
0x127b:	test	rax, rax
0x127e:	je	0x1282


0x14e0:	jmp	qword ptr [rip + 0x205aba]


0x4be0:	mov	rax, qword ptr [rdi + 0x20]
0x4be4:	cmp	qword ptr [rdi + 0x28], rax
0x4be8:	jne	0x4bda


0x4bda:	jmp	0x14d0


0x4baa:	mov	rdi, rbx
0x4bad:	pop	rbx
0x4bae:	jmp	0x1460


0x4b99:	call	0x1480


0x1440:	jmp	qword ptr [rip + 0x205b0a]


0x1470:	jmp	qword ptr [rip + 0x205af2]


0x14a0:	jmp	qword ptr [rip + 0x205ada]


0x4a50:	movabs	rax, 0x8000000000000000
0x4a5a:	xor	edx, edx
0x4a5c:	ret	


0x49be:	movsd	xmm1, qword ptr [rip + 0xf92]
0x49c6:	ucomisd	xmm1, xmm0
0x49ca:	jbe	0x4a38


0x12f0:	jmp	qword ptr [rip + 0x205bb2]


0x4910:	lea	rsi, [rip + 0x1031]
0x4917:	xor	edx, edx
0x4919:	mov	edi, 0x1fbf
0x491e:	call	0x13b0


0x48d8:	mov	rdx, qword ptr [rip + 0x202959]
0x48df:	test	rdx, rdx
0x48e2:	je	0x48f8


0x4818:	mov	rbx, qword ptr [rdi]
0x481b:	mov	rbp, rsi
0x481e:	mov	qword ptr [rsp + 8], rax
0x4823:	mov	r12, rsp
0x4826:	cmp	rbx, 0x1fa400
0x482d:	jg	0x484a


0x48a0:	call	0x12c0


0x13a0:	jmp	qword ptr [rip + 0x205b5a]


0x12c0:	jmp	qword ptr [rip + 0x205bca]


0x1350:	jmp	qword ptr [rip + 0x205b82]


0x1370:	jmp	qword ptr [rip + 0x205b72]


0x4579:	call	0x45d0


0x4562:	movzx	edx, dl
0x4565:	test	rdx, rdx
0x4568:	jne	0x4579


0x4510:	test	rax, rax
0x4513:	mov	edx, 0x80
0x4518:	cmove	rax, rdx
0x451c:	test	rax, rax
0x451f:	jns	0x4502


0x44e8:	movabs	rdx, 0x5555555555555553
0x44f2:	cmp	rax, rdx
0x44f5:	ja	0x4521


0x4490:	test	rcx, rcx
0x4493:	je	0x44b8


0x445b:	xor	edx, edx
0x445d:	movabs	rax, 0x5555555555555554
0x4467:	div	r9
0x446a:	cmp	rax, rcx
0x446d:	jbe	0x44ab


0x443b:	sub	rsp, 8
0x443f:	call	0x45d0


0x4431:	movzx	eax, al
0x4434:	test	rax, rax
0x4437:	jne	0x443b


0x43e9:	test	rdi, rdi
0x43ec:	jne	0x4408


0x43ee:	mov	rsi, rbx
0x43f1:	call	0x1490


0x43bb:	sub	rsp, 8
0x43bf:	call	0x45d0


0x43b1:	movzx	eax, al
0x43b4:	test	rax, rax
0x43b7:	jne	0x43bb


0x1450:	jmp	qword ptr [rip + 0x205b02]


0x4296:	mov	eax, r10d
0x4299:	mov	r11d, 1
0x429f:	add	r10d, 8
0x42a3:	add	rax, rbp
0x42a6:	mov	rax, qword ptr [rax]
0x42a9:	test	rax, rax
0x42ac:	mov	qword ptr [r8 + r9*8], rax
0x42b0:	je	0x42bc


0x42ec:	mov	rax, rbx
0x42ef:	add	rbx, 8
0x42f3:	jmp	0x42a6


0x41c8:	mov	r11d, eax
0x41cb:	add	r11, qword ptr [r10 + 0x10]
0x41cf:	add	eax, 8
0x41d2:	mov	dword ptr [r10], eax
0x41d5:	mov	rax, qword ptr [r11]
0x41d8:	test	rax, rax
0x41db:	mov	qword ptr [r8 + r9*8], rax
0x41df:	je	0x41eb


0x420a:	mov	r11, qword ptr [r10 + 8]
0x420e:	lea	rax, [r11 + 8]
0x4212:	mov	qword ptr [r10 + 8], rax
0x4216:	jmp	0x41d5


0x419b:	jmp	0x3d60


0x3e98:	mov	r8, rcx
0x3e9b:	mov	rcx, rdx
0x3e9e:	lea	rdx, [rip + 0x172f]
0x3ea5:	mov	esi, 1
0x3eaa:	xor	eax, eax
0x3eac:	call	0x1510


0x3d80:	mov	r8, rdx
0x3d83:	lea	rdx, [rip + 0x183e]
0x3d8a:	mov	r9, rcx
0x3d8d:	xor	eax, eax
0x3d8f:	mov	rcx, rsi
0x3d92:	mov	esi, 1
0x3d97:	call	0x1510


0x3c87:	call	0x12b0


0x3c55:	test	rdx, rdx
0x3c58:	je	0x3c87


0x3bf4:	call	0x12b0


0x3b8c:	mov	dword ptr [rsp], esi
0x3b8f:	mov	rcx, rsp
0x3b92:	mov	rdx, -1
0x3b99:	mov	rsi, rax
0x3b9c:	mov	qword ptr [rsp + 4], 0
0x3ba5:	mov	qword ptr [rsp + 0xc], 0x4000000
0x3bae:	mov	qword ptr [rsp + 0x14], 0
0x3bb7:	mov	qword ptr [rsp + 0x1c], 0
0x3bc0:	mov	qword ptr [rsp + 0x24], 0
0x3bc9:	mov	qword ptr [rsp + 0x2c], 0
0x3bd2:	mov	dword ptr [rsp + 0x34], 0
0x3bda:	call	0x3400


0x3a60:	call	0x12b0


0x39ff:	mov	dword ptr [rsp], esi
0x3a02:	mov	rcx, rsp
0x3a05:	mov	rsi, rax
0x3a08:	mov	qword ptr [rsp + 4], 0
0x3a11:	mov	qword ptr [rsp + 0xc], 0
0x3a1a:	mov	qword ptr [rsp + 0x14], 0
0x3a23:	mov	qword ptr [rsp + 0x1c], 0
0x3a2c:	mov	qword ptr [rsp + 0x24], 0
0x3a35:	mov	qword ptr [rsp + 0x2c], 0
0x3a3e:	mov	dword ptr [rsp + 0x34], 0
0x3a46:	call	0x3400


0x39d4:	call	0x12b0


0x396c:	mov	dword ptr [rsp], esi
0x396f:	mov	rcx, rsp
0x3972:	mov	rdx, -1
0x3979:	mov	rsi, rax
0x397c:	mov	qword ptr [rsp + 4], 0
0x3985:	mov	qword ptr [rsp + 0xc], 0
0x398e:	mov	qword ptr [rsp + 0x14], 0
0x3997:	mov	qword ptr [rsp + 0x1c], 0
0x39a0:	mov	qword ptr [rsp + 0x24], 0
0x39a9:	mov	qword ptr [rsp + 0x2c], 0
0x39b2:	mov	dword ptr [rsp + 0x34], 0
0x39ba:	call	0x3400


0x3881:	mov	rdi, qword ptr [r12 + 8]
0x3886:	lea	rbx, [rip + 0x203873]
0x388d:	cmp	rdi, rbx
0x3890:	je	0x38a9


0x3856:	sub	eax, 2
0x3859:	lea	rbx, [r12 + 0x18]
0x385e:	shl	rax, 4
0x3862:	lea	rbp, [r12 + rax + 0x28]
0x3867:	nop	word ptr [rax + rax]
0x3870:	mov	rdi, qword ptr [rbx]
0x3873:	add	rbx, 0x10
0x3877:	call	0x12a0


0x36b7:	sub	rsp, 8
0x36bb:	call	0x12b0


0x36a9:	test	rdx, rdx
0x36ac:	je	0x36b7


0x1360:	jmp	qword ptr [rip + 0x205b7a]


0x20ad:	mov	rcx, qword ptr [rip + 0x20500c]
0x20b4:	lea	rdi, [rip + 0x2fed]
0x20bb:	mov	edx, 0x37
0x20c0:	mov	esi, 1
0x20c5:	call	0x1500


0x2036:	mov	esi, 0x2f
0x203b:	mov	rbx, rdi
0x203e:	call	0x13d0


0x1f4b:	mov	rax, qword ptr fs:[0x28]
0x1f54:	mov	qword ptr [rsp + 0x18], rax
0x1f59:	xor	eax, eax
0x1f5b:	lea	rdx, [rip + 0x36bf]
0x1f62:	lea	rax, [rip + 0x312f]
0x1f69:	test	r9b, r9b
0x1f6c:	lea	rcx, [rip + 0x204c4d]
0x1f73:	cmove	rdx, rax
0x1f77:	xor	r8d, r8d
0x1f7a:	mov	ebx, dword ptr [rip + 0x205120]
0x1f80:	mov	dword ptr [rip + 0x205116], 1
0x1f8a:	call	0x1390


0x1f14:	movaps	xmmword ptr [rsp + 0x50], xmm0
0x1f19:	movaps	xmmword ptr [rsp + 0x60], xmm1
0x1f1e:	movaps	xmmword ptr [rsp + 0x70], xmm2
0x1f23:	movaps	xmmword ptr [rsp + 0x80], xmm3
0x1f2b:	movaps	xmmword ptr [rsp + 0x90], xmm4
0x1f33:	movaps	xmmword ptr [rsp + 0xa0], xmm5
0x1f3b:	movaps	xmmword ptr [rsp + 0xb0], xmm6
0x1f43:	movaps	xmmword ptr [rsp + 0xc0], xmm7
0x1f4b:	mov	rax, qword ptr fs:[0x28]
0x1f54:	mov	qword ptr [rsp + 0x18], rax
0x1f59:	xor	eax, eax
0x1f5b:	lea	rdx, [rip + 0x36bf]
0x1f62:	lea	rax, [rip + 0x312f]
0x1f69:	test	r9b, r9b
0x1f6c:	lea	rcx, [rip + 0x204c4d]
0x1f73:	cmove	rdx, rax
0x1f77:	xor	r8d, r8d
0x1f7a:	mov	ebx, dword ptr [rip + 0x205120]
0x1f80:	mov	dword ptr [rip + 0x205116], 1
0x1f8a:	call	0x1390


0x1e04:	mov	rax, qword ptr fs:[0x28]
0x1e0d:	mov	qword ptr [rsp + 0x28], rax
0x1e12:	xor	eax, eax
0x1e14:	cmp	edi, 2
0x1e17:	mov	ebx, dword ptr [rip + 0x205283]
0x1e1d:	mov	dword ptr [rip + 0x205279], 0
0x1e27:	je	0x1e60


0x1dca:	movaps	xmmword ptr [rsp + 0x60], xmm0
0x1dcf:	movaps	xmmword ptr [rsp + 0x70], xmm1
0x1dd4:	movaps	xmmword ptr [rsp + 0x80], xmm2
0x1ddc:	movaps	xmmword ptr [rsp + 0x90], xmm3
0x1de4:	movaps	xmmword ptr [rsp + 0xa0], xmm4
0x1dec:	movaps	xmmword ptr [rsp + 0xb0], xmm5
0x1df4:	movaps	xmmword ptr [rsp + 0xc0], xmm6
0x1dfc:	movaps	xmmword ptr [rsp + 0xd0], xmm7
0x1e04:	mov	rax, qword ptr fs:[0x28]
0x1e0d:	mov	qword ptr [rsp + 0x28], rax
0x1e12:	xor	eax, eax
0x1e14:	cmp	edi, 2
0x1e17:	mov	ebx, dword ptr [rip + 0x205283]
0x1e1d:	mov	dword ptr [rip + 0x205279], 0
0x1e27:	je	0x1e60


0x1300:	jmp	qword ptr [rip + 0x205baa]


0x195d:	lea	rsi, [rip + 0x34cc]
0x1964:	xor	edi, edi
0x1966:	call	0x1350


0x192f:	lea	rsi, [rip + 0x34d2]
0x1936:	xor	edi, edi
0x1938:	call	0x1350


0x18b9:	cmp	qword ptr [rip + 0x205737], 0
0x18c1:	push	rbp
0x18c2:	mov	rbp, rsp
0x18c5:	je	0x18d3


0x18e8:	ret	


0x18a0:	pop	rbp
0x18a1:	ret	


0x1888:	mov	rax, qword ptr [rip + 0x205761]
0x188f:	test	rax, rax
0x1892:	je	0x18a0


0x1850:	pop	rbp
0x1851:	ret	


0x1837:	mov	rax, qword ptr [rip + 0x20579a]
0x183e:	test	rax, rax
0x1841:	je	0x1850




0x1282:	add	rsp, 8
0x1286:	ret	


0x1280:	call	rax




0x4bea:	cmp	qword ptr [rdi + 0x48], 0
0x4bef:	jne	0x4bda


0x14d0:	jmp	qword ptr [rip + 0x205ac2]


0x1460:	jmp	qword ptr [rip + 0x205afa]


0x1480:	jmp	qword ptr [rip + 0x205aea]








0x4a38:	movabs	rax, 0x7fffffffffffffff
0x4a42:	mov	edx, 0x3b9ac9ff
0x4a47:	ret	


0x49cc:	cvttsd2si	rsi, xmm0
0x49d1:	pxor	xmm1, xmm1
0x49d5:	xor	ecx, ecx
0x49d7:	cvtsi2sd	xmm1, rsi
0x49dc:	subsd	xmm0, xmm1
0x49e0:	pxor	xmm1, xmm1
0x49e4:	mulsd	xmm0, qword ptr [rip + 0xf74]
0x49ec:	cvttsd2si	rdx, xmm0
0x49f1:	cvtsi2sd	xmm1, rdx
0x49f6:	ucomisd	xmm0, xmm1
0x49fa:	seta	cl
0x49fd:	add	rcx, rdx
0x4a00:	movabs	rdx, 0x112e0be826d694b3
0x4a0a:	mov	rax, rcx
0x4a0d:	imul	rdx
0x4a10:	mov	rax, rcx
0x4a13:	sar	rax, 0x3f
0x4a17:	sar	rdx, 0x1a
0x4a1b:	sub	rdx, rax
0x4a1e:	lea	rax, [rdx + rsi]
0x4a22:	imul	rdx, rdx, 0x3b9aca00
0x4a29:	sub	rcx, rdx
0x4a2c:	mov	rdx, rcx
0x4a2f:	js	0x4a60




0x13b0:	jmp	qword ptr [rip + 0x205b52]


0x48f8:	test	rbx, rbx
0x48fb:	pxor	xmm0, xmm0
0x48ff:	je	0x4908


0x48e4:	add	rsp, 8
0x48e8:	mov	rsi, rbx
0x48eb:	mov	rdi, rbp
0x48ee:	pop	rbx
0x48ef:	pop	rbp
0x48f0:	jmp	0x1320


0x482f:	jmp	0x4878


0x484a:	mov	rsi, rbp
0x484d:	mov	rdi, r12
0x4850:	mov	qword ptr [rsp], 0x1fa400
0x4858:	sub	rbx, 0x1fa400
0x485f:	call	0x13c0










0x456a:	call	0x1420


0x4521:	sub	rsp, 8
0x4525:	call	0x45d0


0x4502:	mov	qword ptr [rsi], rax
0x4505:	mov	rsi, rax
0x4508:	jmp	0x43e0


0x44f7:	mov	rdx, rax
0x44fa:	shr	rdx, 1
0x44fd:	lea	rax, [rdx + rax + 1]
0x4502:	mov	qword ptr [rsi], rax
0x4505:	mov	rsi, rax
0x4508:	jmp	0x43e0


0x44b8:	xor	edx, edx
0x44ba:	mov	eax, 0x80
0x44bf:	xor	r8d, r8d
0x44c2:	div	r9
0x44c5:	test	rax, rax
0x44c8:	sete	r8b
0x44cc:	lea	rcx, [r8 + rax]
0x44d0:	jmp	0x4495


0x4495:	mov	rax, rcx
0x4498:	mul	r9
0x449b:	seto	dl
0x449e:	test	rax, rax
0x44a1:	movzx	edx, dl
0x44a4:	js	0x44ab


0x44ab:	sub	rsp, 8
0x44af:	call	0x45d0


0x446f:	mov	rax, rcx
0x4472:	shr	rax, 1
0x4475:	lea	rcx, [rax + rcx + 1]
0x447a:	mov	qword ptr [rsi], rcx
0x447d:	imul	rcx, r9
0x4481:	mov	rsi, rcx
0x4484:	jmp	0x43e0


0x4439:	jmp	0x43e0


0x4408:	call	0x12a0


0x1490:	jmp	qword ptr [rip + 0x205ae2]


0x43b9:	jmp	0x4380




0x42bc:	test	r11b, r11b
0x42bf:	jne	0x42e5


0x42b2:	add	r9, 1
0x42b6:	cmp	r9, 0xa
0x42ba:	jne	0x4290


0x42a6:	mov	rax, qword ptr [rax]
0x42a9:	test	rax, rax
0x42ac:	mov	qword ptr [r8 + r9*8], rax
0x42b0:	je	0x42bc


0x41eb:	call	0x3d60


0x41e1:	add	r9, 1
0x41e5:	cmp	r9, 0xa
0x41e9:	jne	0x41c0


0x41d5:	mov	rax, qword ptr [r11]
0x41d8:	test	rax, rax
0x41db:	mov	qword ptr [r8 + r9*8], rax
0x41df:	je	0x41eb


0x4190:	add	r9, 1
0x4194:	cmp	qword ptr [r8 + r9*8], 0
0x4199:	jne	0x4190


0x1510:	jmp	qword ptr [rip + 0x205aa2]


0x12b0:	jmp	qword ptr [rip + 0x205bd2]


0x3c5a:	mov	qword ptr [rsp + 0x28], rsi
0x3c5f:	mov	qword ptr [rsp + 0x30], rdx
0x3c64:	mov	rcx, rsp
0x3c67:	mov	rdx, r8
0x3c6a:	mov	rsi, r9
0x3c6d:	call	0x3400


0x38a9:	lea	rbx, [rip + 0x2037c0]
0x38b0:	cmp	r12, rbx
0x38b3:	je	0x38c4


0x3892:	call	0x12a0


0x12a0:	jmp	qword ptr [rip + 0x205bda]


0x36ae:	mov	qword ptr [rdi + 0x28], rsi
0x36b2:	mov	qword ptr [rdi + 0x30], rdx
0x36b6:	ret	




0x1500:	jmp	qword ptr [rip + 0x205aaa]


0x13d0:	jmp	qword ptr [rip + 0x205b42]


0x1390:	jmp	qword ptr [rip + 0x205b62]


0x1e60:	lea	rcx, [rip + 0x204d59]
0x1e67:	lea	rdx, [rip + 0x322a]
0x1e6e:	xor	r8d, r8d
0x1e71:	mov	qword ptr [rsp + 8], r9
0x1e76:	call	0x1390


0x1e29:	mov	rax, qword ptr [rsp + 0x28]
0x1e2e:	xor	rax, qword ptr fs:[0x28]
0x1e37:	mov	dword ptr [rip + 0x205263], ebx
0x1e3d:	mov	dword ptr [rip + 0x205249], 0
0x1e47:	jne	0x1eea




0x18d3:	call	0x1820


0x18c7:	mov	rdi, qword ptr [rip + 0x20573a]
0x18ce:	call	0x1550


0x1894:	pop	rbp
0x1895:	jmp	rax


0x1843:	pop	rbp
0x1844:	jmp	rax


0x4bf1:	push	r12
0x4bf3:	push	rbp
0x4bf4:	mov	r12d, edx
0x4bf7:	push	rbx
0x4bf8:	mov	rbp, rsi
0x4bfb:	mov	rbx, rdi
0x4bfe:	call	0x1440








0x4a60:	sub	rax, 1
0x4a64:	add	rdx, 0x3b9aca00
0x4a6b:	ret	


0x4a31:	ret	




0x4908:	add	rsp, 8
0x490c:	pop	rbx
0x490d:	pop	rbp
0x490e:	ret	


0x4901:	pxor	xmm0, xmm0
0x4905:	mov	qword ptr [rbx], rbp
0x4908:	add	rsp, 8
0x490c:	pop	rbx
0x490d:	pop	rbp
0x490e:	ret	


0x1320:	jmp	qword ptr [rip + 0x205b9a]


0x4878:	mov	rsi, rbp
0x487b:	mov	rdi, r12
0x487e:	mov	qword ptr [rsp], rbx
0x4882:	call	0x13c0


0x13c0:	jmp	qword ptr [rip + 0x205b4a]


0x1420:	jmp	qword ptr [rip + 0x205b1a]


0x44a6:	test	rdx, rdx
0x44a9:	je	0x447a




0x42c1:	call	0x3d60


0x42e5:	mov	dword ptr [rsp + 8], r10d
0x42ea:	jmp	0x42c1


0x4290:	cmp	r10d, 0x2f
0x4294:	ja	0x42ec


0x41c0:	mov	eax, dword ptr [r10]
0x41c3:	cmp	eax, 0x2f
0x41c6:	ja	0x420a






0x38c4:	pop	rbx
0x38c5:	mov	dword ptr [rip + 0x203789], 1
0x38cf:	pop	rbp
0x38d0:	pop	r12
0x38d2:	ret	


0x38b5:	mov	rdi, r12
0x38b8:	call	0x12a0










0x1e4d:	add	rsp, 0xe8
0x1e54:	pop	rbx
0x1e55:	pop	rbp
0x1e56:	pop	r12
0x1e58:	pop	r13
0x1e5a:	ret	


0x1eea:	call	0x1380


0x1550:	jmp	qword ptr [rip + 0x205aa2]








0x447a:	mov	qword ptr [rsi], rcx
0x447d:	imul	rcx, r9
0x4481:	mov	rsi, rcx
0x4484:	jmp	0x43e0


0x1380:	jmp	qword ptr [rip + 0x205b6a]




0x18d8:	mov	byte ptr [rip + 0x2057e9], 1
0x18df:	pop	rbp
0x18e0:	ret	


0x462e:	mov	qword ptr [rsp], rax
0x4632:	mov	qword ptr [rsp + 8], rdx
0x4637:	call	0x12c0


0x4c61:	test	rbp, rbp
0x4c64:	je	0x4c86


0x4c86:	add	rsp, 8
0x4c8a:	pop	rbx
0x4c8b:	pop	rbp
0x4c8c:	pop	r12
0x4c8e:	pop	r13
0x4c90:	pop	r14
0x4c92:	pop	r15
0x4c94:	ret	


0x4c66:	xor	ebx, ebx
0x4c68:	nop	dword ptr [rax + rax]
0x4c70:	mov	rdx, r15
0x4c73:	mov	rsi, r14
0x4c76:	mov	edi, r13d
0x4c79:	call	qword ptr [r12 + rbx*8]


0x456f:	test	rax, rax
0x4572:	je	0x4579


0x4574:	add	rsp, 8
0x4578:	ret	


0x4887:	mov	rdx, qword ptr [rsp + 0x18]
0x488c:	xor	rdx, qword ptr fs:[0x28]
0x4895:	jne	0x48b2


0x4897:	add	rsp, 0x20
0x489b:	pop	rbx
0x489c:	pop	rbp
0x489d:	pop	r12
0x489f:	ret	


0x48b2:	call	0x1380


0x4864:	test	eax, eax
0x4866:	je	0x4838


0x4838:	cmp	rbx, 0x1fa400
0x483f:	mov	qword ptr [rsp + 8], 0
0x4848:	jle	0x4878


0x4868:	test	rbp, rbp
0x486b:	je	0x4887


0x486d:	add	qword ptr [rbp], rbx
0x4871:	jmp	0x4887


0x1e7b:	cmp	eax, -1
0x1e7e:	je	0x1e29


0x1e80:	cmp	eax, 0x68
0x1e83:	mov	r9, qword ptr [rsp + 8]
0x1e88:	je	0x1ee0


0x1ee0:	xor	edi, edi
0x1ee2:	call	r9


0x1e8a:	cmp	eax, 0x76
0x1e8d:	jne	0x1e29


0x1e8f:	lea	rax, [rsp + 0x110]
0x1e97:	mov	rdi, qword ptr [rip + 0x2051ea]
0x1e9e:	lea	r8, [rsp + 0x10]
0x1ea3:	mov	rcx, r13
0x1ea6:	mov	rdx, r12
0x1ea9:	mov	rsi, rbp
0x1eac:	mov	qword ptr [rsp + 0x18], rax
0x1eb1:	lea	rax, [rsp + 0x30]
0x1eb6:	mov	dword ptr [rsp + 0x10], 0x30
0x1ebe:	mov	dword ptr [rsp + 0x14], 0x30
0x1ec6:	mov	qword ptr [rsp + 0x20], rax
0x1ecb:	call	0x41a0


0x1f8f:	cmp	eax, -1
0x1f92:	je	0x1ff8


0x1ff8:	mov	rax, qword ptr [rsp + 0x18]
0x1ffd:	xor	rax, qword ptr fs:[0x28]
0x2006:	mov	dword ptr [rip + 0x205094], ebx
0x200c:	jne	0x2026


0x1f94:	cmp	eax, 0x68
0x1f97:	je	0x2020


0x200e:	add	rsp, 0xd0
0x2015:	pop	rbx
0x2016:	pop	rbp
0x2017:	pop	r12
0x2019:	pop	r13
0x201b:	pop	r14
0x201d:	ret	


0x2026:	call	0x1380


0x2020:	xor	edi, edi
0x2022:	call	rbp


0x1f9d:	cmp	eax, 0x76
0x1fa0:	jne	0x1ff0


0x1fa2:	lea	rax, [rsp + 0x108]
0x1faa:	mov	rdi, qword ptr [rip + 0x2050d7]
0x1fb1:	mov	r8, rsp
0x1fb4:	mov	rcx, r14
0x1fb7:	mov	rdx, r13
0x1fba:	mov	rsi, r12
0x1fbd:	mov	qword ptr [rsp + 8], rax
0x1fc2:	lea	rax, [rsp + 0x20]
0x1fc7:	mov	dword ptr [rsp], 0x30
0x1fce:	mov	dword ptr [rsp + 4], 0x30
0x1fd6:	mov	qword ptr [rsp + 0x10], rax
0x1fdb:	call	0x41a0


0x1ff0:	mov	edi, dword ptr [rip + 0x205022]
0x1ff6:	call	rbp


0x2043:	test	rax, rax
0x2046:	je	0x209d


0x209d:	mov	qword ptr [rip + 0x20503c], rbx
0x20a4:	mov	qword ptr [rip + 0x204fed], rbx
0x20ab:	pop	rbx
0x20ac:	ret	


0x2048:	lea	r8, [rax + 1]
0x204c:	mov	rdx, r8
0x204f:	sub	rdx, rbx
0x2052:	cmp	rdx, 6
0x2056:	jle	0x209d


0x2058:	lea	rsi, [rax - 6]
0x205c:	lea	rdi, [rip + 0x307d]
0x2063:	mov	ecx, 7
0x2068:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2068:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x206a:	seta	dl
0x206d:	sbb	dl, 0
0x2070:	test	dl, dl
0x2072:	jne	0x209d


0x2074:	lea	rdi, [rip + 0x306d]
0x207b:	mov	ecx, 3
0x2080:	mov	rsi, r8
0x2083:	mov	rbx, r8
0x2086:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2086:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2088:	seta	dl
0x208b:	sbb	dl, 0
0x208e:	test	dl, dl
0x2090:	jne	0x209d


0x2092:	lea	rbx, [rax + 4]
0x2096:	mov	qword ptr [rip + 0x204fe3], rbx
0x209d:	mov	qword ptr [rip + 0x20503c], rbx
0x20a4:	mov	qword ptr [rip + 0x204fed], rbx
0x20ab:	pop	rbx
0x20ac:	ret	


0x20ca:	call	0x12b0


0x38bd:	mov	qword ptr [rip + 0x20379c], rbx
0x38c4:	pop	rbx
0x38c5:	mov	dword ptr [rip + 0x203789], 1
0x38cf:	pop	rbp
0x38d0:	pop	r12
0x38d2:	ret	


0x3897:	mov	qword ptr [rip + 0x2037ce], 0x100
0x38a2:	mov	qword ptr [rip + 0x2037cf], rbx
0x38a9:	lea	rbx, [rip + 0x2037c0]
0x38b0:	cmp	r12, rbx
0x38b3:	je	0x38c4


0x440d:	xor	eax, eax
0x440f:	pop	rbx
0x4410:	ret	


0x387c:	cmp	rbx, rbp
0x387f:	jne	0x3870


0x3870:	mov	rdi, qword ptr [rbx]
0x3873:	add	rbx, 0x10
0x3877:	call	0x12a0


0x3d9c:	lea	rsi, [rip + 0x1838]
0x3da3:	xor	edi, edi
0x3da5:	mov	edx, 5
0x3daa:	call	0x1350


0x3eb1:	jmp	0x3d9c


0x43f6:	test	rax, rax
0x43f9:	jne	0x4400


0x43fb:	test	rbx, rbx
0x43fe:	jne	0x4411


0x4400:	pop	rbx
0x4401:	ret	


0x4411:	call	0x45d0


0x4923:	mov	qword ptr [rip + 0x20290e], rax
0x492a:	jmp	0x48d8


0x4b9e:	test	eax, eax
0x4ba0:	je	0x4baa


0x4ba2:	test	dword ptr [rbx], 0x100
0x4ba8:	jne	0x4bb8


0x4bb8:	mov	rdi, rbx
0x4bbb:	mov	edx, 1
0x4bc0:	xor	esi, esi
0x4bc2:	call	0x4bd0


0x158b:	lea	rsi, [rip + 0x408f]
0x1592:	mov	edi, 6
0x1597:	call	0x14a0


0x1c4a:	mov	rax, qword ptr [rsp + 0x18]
0x1c4f:	movapd	xmm1, xmm0
0x1c53:	cmp	byte ptr [rax], 0
0x1c56:	jne	0x1c88


0x1c58:	test	rbx, rbx
0x1c5b:	je	0x1c65


0x1c88:	movsd	qword ptr [rsp + 8], xmm0
0x1c8e:	call	0x12c0


0x1c65:	mov	rax, qword ptr [rsp + 0x28]
0x1c6a:	xor	rax, qword ptr fs:[0x28]
0x1c73:	movapd	xmm0, xmm1
0x1c77:	jne	0x1cce


0x1c5d:	mov	rax, qword ptr [rsp + 0x18]
0x1c62:	mov	qword ptr [rbx], rax
0x1c65:	mov	rax, qword ptr [rsp + 0x28]
0x1c6a:	xor	rax, qword ptr fs:[0x28]
0x1c73:	movapd	xmm0, xmm1
0x1c77:	jne	0x1cce


0x1c79:	add	rsp, 0x38
0x1c7d:	pop	rbx
0x1c7e:	pop	rbp
0x1c7f:	pop	r12
0x1c81:	pop	r13
0x1c83:	ret	


0x1cce:	call	0x1380


0x2231:	cmp	r15d, 0xa
0x2235:	mov	qword ptr [rsp + 0x58], rax
0x223a:	ja	0x33ef


0x2240:	lea	rcx, [rip + 0x2f19]
0x2247:	mov	edx, r15d
0x224a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x224e:	add	rax, rcx
0x2251:	jmp	rax


0x33ef:	call	0x12b0


0x4389:	test	rax, rax
0x438c:	jne	0x4393


0x438e:	test	rbx, rbx
0x4391:	jne	0x4395


0x4393:	pop	rbx
0x4394:	ret	


0x4395:	call	0x45d0


0x4539:	mov	rdx, rbx
0x453c:	xor	esi, esi
0x453e:	mov	rdi, rax
0x4541:	pop	rbx
0x4542:	jmp	0x13f0


0x13f0:	jmp	qword ptr [rip + 0x205b32]




0x4594:	add	rsp, 8
0x4598:	mov	rdx, rbx
0x459b:	mov	rsi, rbp
0x459e:	pop	rbx
0x459f:	pop	rbp
0x45a0:	mov	rdi, rax
0x45a3:	jmp	0x1430


0x1430:	jmp	qword ptr [rip + 0x205b12]




0x45b9:	mov	rdi, rbx
0x45bc:	lea	rsi, [rax + 1]
0x45c0:	pop	rbx
0x45c1:	jmp	0x4580


0x3daf:	lea	rdx, [rip + 0x1b4a]
0x3db6:	mov	rcx, rax
0x3db9:	mov	r8d, 0x7e3
0x3dbf:	mov	esi, 1
0x3dc4:	mov	rdi, rbp
0x3dc7:	xor	eax, eax
0x3dc9:	call	0x1510


0x3dce:	lea	rsi, [rip + 0x1893]
0x3dd5:	xor	edi, edi
0x3dd7:	mov	edx, 5
0x3ddc:	call	0x1350


0x3de1:	mov	rsi, rbp
0x3de4:	mov	rdi, rax
0x3de7:	call	0x1410


0x1410:	jmp	qword ptr [rip + 0x205b22]




0x193d:	mov	rdi, qword ptr [rip + 0x20577c]
0x1944:	mov	rdx, rax
0x1947:	mov	rcx, rbx
0x194a:	mov	esi, 1
0x194f:	xor	eax, eax
0x1951:	call	0x1510


0x1956:	mov	edi, ebp
0x1958:	call	0x14f0


0x14f0:	jmp	qword ptr [rip + 0x205ab2]




0x196b:	mov	rcx, rbx
0x196e:	mov	rdx, rbx
0x1971:	mov	rsi, rax
0x1974:	mov	edi, 1
0x1979:	xor	eax, eax
0x197b:	call	0x14b0


0x14b0:	jmp	qword ptr [rip + 0x205ad2]




0x4314:	lea	rdx, [rip + 0x131c]
0x431b:	mov	rsi, rax
0x431e:	mov	edi, 1
0x4323:	xor	eax, eax
0x4325:	call	0x14b0


0x45e7:	mov	edi, dword ptr [rip + 0x202a2b]
0x45ed:	lea	rdx, [rip + 0xaa1]
0x45f4:	mov	rcx, rax
0x45f7:	xor	esi, esi
0x45f9:	xor	eax, eax
0x45fb:	call	0x14c0


0x14c0:	jmp	qword ptr [rip + 0x205aca]




0x1c93:	lea	rsi, [rsp + 0x20]
0x1c98:	mov	rdi, rbp
0x1c9b:	mov	r12, rax
0x1c9e:	mov	r13d, dword ptr [rax]
0x1ca1:	call	0x48c0


0x1ca6:	mov	rax, qword ptr [rsp + 0x20]
0x1cab:	cmp	qword ptr [rsp + 0x18], rax
0x1cb0:	movsd	xmm1, qword ptr [rsp + 8]
0x1cb6:	jae	0x1cc8


0x1cb8:	mov	qword ptr [rsp + 0x18], rax
0x1cbd:	movapd	xmm1, xmm0
0x1cc1:	jmp	0x1c58


0x1cc8:	mov	dword ptr [r12], r13d
0x1ccc:	jmp	0x1c58


0x463c:	mov	rbx, rax
0x463f:	jmp	0x4650


0x4650:	xor	esi, esi
0x4652:	mov	dword ptr [rbx], 0
0x4658:	mov	rdi, rbp
0x465b:	call	0x47f0


0x4660:	test	eax, eax
0x4662:	jne	0x4648


0x4664:	mov	rdx, qword ptr [rsp + 0x18]
0x4669:	xor	rdx, qword ptr fs:[0x28]
0x4672:	jne	0x4687


0x4648:	test	dword ptr [rbx], 0xfffffffb
0x464e:	jne	0x4680


0x4674:	add	rsp, 0x28
0x4678:	pop	rbx
0x4679:	pop	rbp
0x467a:	ret	


0x4687:	call	0x1380


0x4680:	mov	eax, 0xffffffff
0x4685:	jmp	0x4664


0x48a5:	mov	dword ptr [rax], 0x16
0x48ab:	mov	eax, 0xffffffff
0x48b0:	jmp	0x4887


0x3421:	mov	r13, rax
0x3424:	mov	eax, dword ptr [rax]
0x3426:	test	r15d, r15d
0x3429:	mov	rbx, qword ptr [rip + 0x203c30]
0x3430:	mov	dword ptr [rsp + 0x18], eax
0x3434:	js	0x35a1


0x35a1:	call	0x12b0


0x343a:	cmp	dword ptr [rip + 0x203c17], r15d
0x3441:	jg	0x34a5


0x3443:	cmp	r15d, 0x7fffffff
0x344a:	je	0x35a6


0x34a5:	mov	eax, dword ptr [rbp + 4]
0x34a8:	shl	r15, 4
0x34ac:	sub	rsp, 8
0x34b0:	add	rbx, r15
0x34b3:	lea	r15, [rbp + 8]
0x34b7:	mov	r8d, dword ptr [rbp]
0x34bb:	mov	r11, qword ptr [rbx]
0x34be:	mov	r12, qword ptr [rbx + 8]
0x34c2:	mov	rcx, r14
0x34c5:	or	eax, 1
0x34c8:	mov	dword ptr [rsp + 0x24], eax
0x34cc:	push	qword ptr [rbp + 0x30]
0x34cf:	mov	r9d, eax
0x34d2:	push	qword ptr [rbp + 0x28]
0x34d5:	push	r15
0x34d7:	mov	rsi, r11
0x34da:	mov	rdx, qword ptr [rsp + 0x28]
0x34df:	mov	rdi, r12
0x34e2:	mov	qword ptr [rsp + 0x30], r11
0x34e7:	call	0x21c0


0x35a6:	call	0x45d0


0x3450:	lea	r12d, [r15 + 1]
0x3454:	lea	rax, [rip + 0x203c15]
0x345b:	movsxd	rsi, r12d
0x345e:	shl	rsi, 4
0x3462:	cmp	rbx, rax
0x3465:	je	0x3580


0x3580:	xor	edi, edi
0x3582:	call	0x43e0


0x346b:	mov	rdi, rbx
0x346e:	call	0x43e0


0x3473:	mov	rbx, rax
0x3476:	mov	qword ptr [rip + 0x203be3], rax
0x347d:	movsxd	rdi, dword ptr [rip + 0x203bd4]
0x3484:	mov	edx, r12d
0x3487:	xor	esi, esi
0x3489:	sub	edx, edi
0x348b:	shl	rdi, 4
0x348f:	movsxd	rdx, edx
0x3492:	add	rdi, rbx
0x3495:	shl	rdx, 4
0x3499:	call	0x13f0


0x3587:	movdqa	xmm0, xmmword ptr [rip + 0x203ae1]
0x358f:	mov	rbx, rax
0x3592:	mov	qword ptr [rip + 0x203ac7], rax
0x3599:	movups	xmmword ptr [rax], xmm0
0x359c:	jmp	0x347d


0x347d:	movsxd	rdi, dword ptr [rip + 0x203bd4]
0x3484:	mov	edx, r12d
0x3487:	xor	esi, esi
0x3489:	sub	edx, edi
0x348b:	shl	rdi, 4
0x348f:	movsxd	rdx, edx
0x3492:	add	rdi, rbx
0x3495:	shl	rdx, 4
0x3499:	call	0x13f0


0x35bc:	mov	r12d, dword ptr [rax]
0x35bf:	mov	rbp, rax
0x35c2:	lea	rax, [rip + 0x203c37]
0x35c9:	test	rbx, rbx
0x35cc:	mov	esi, 0x38
0x35d1:	cmove	rbx, rax
0x35d5:	mov	rdi, rbx
0x35d8:	call	0x4580


0x36f2:	mov	r12d, dword ptr [rax]
0x36f5:	mov	rbp, rax
0x36f8:	lea	rax, [rbx + 8]
0x36fc:	sub	rsp, 8
0x3700:	mov	r9d, dword ptr [rbx + 4]
0x3704:	push	qword ptr [rbx + 0x30]
0x3707:	mov	r8d, dword ptr [rbx]
0x370a:	push	qword ptr [rbx + 0x28]
0x370d:	mov	rdx, r15
0x3710:	push	rax
0x3711:	mov	rcx, qword ptr [rsp + 0x28]
0x3716:	mov	rsi, r14
0x3719:	mov	rdi, r13
0x371c:	call	0x21c0


0x376f:	test	r12, r12
0x3772:	mov	r13, rax
0x3775:	mov	eax, dword ptr [rax]
0x3777:	sete	bpl
0x377b:	or	ebp, dword ptr [rbx + 4]
0x377e:	lea	r10, [rbx + 8]
0x3782:	sub	rsp, 8
0x3786:	mov	r8d, dword ptr [rbx]
0x3789:	mov	rcx, r15
0x378c:	mov	dword ptr [rsp + 0x14], eax
0x3790:	push	qword ptr [rbx + 0x30]
0x3793:	mov	rdx, r14
0x3796:	push	qword ptr [rbx + 0x28]
0x3799:	push	r10
0x379b:	xor	esi, esi
0x379d:	mov	r9d, ebp
0x37a0:	xor	edi, edi
0x37a2:	mov	qword ptr [rsp + 0x40], r10
0x37a7:	call	0x21c0


0x46bd:	mov	rsi, rsp
0x46c0:	mov	r12, rax
0x46c3:	mov	dword ptr [rax], 0
0x46c9:	mov	rdi, rbp
0x46cc:	call	r14


0x4797:	cmp	rax, -3
0x479b:	mov	rbp, rax
0x479e:	jbe	0x47c0


0x47c0:	mov	rdx, qword ptr [rsp + 8]
0x47c5:	xor	rdx, qword ptr fs:[0x28]
0x47ce:	mov	rax, rbp
0x47d1:	jne	0x47de


0x47a0:	test	r12, r12
0x47a3:	je	0x47c0


0x47d3:	add	rsp, 0x18
0x47d7:	pop	rbx
0x47d8:	pop	rbp
0x47d9:	pop	r12
0x47db:	pop	r13
0x47dd:	ret	


0x47de:	call	0x1380


0x47a5:	xor	edi, edi
0x47a7:	call	0x4a70


0x493c:	mov	ebx, dword ptr [rbp]
0x493f:	mov	rdi, rbp
0x4942:	mov	r12, rax
0x4945:	call	0x4b10


0x159c:	lea	rsi, [rip + 0x37ea]
0x15a3:	lea	rdi, [rip + 0x37ba]
0x15aa:	call	0x1340


0x1340:	jmp	qword ptr [rip + 0x205b8a]




0x4a7b:	mov	rdx, rax
0x4a7e:	mov	eax, 1
0x4a83:	test	rdx, rdx
0x4a86:	je	0x4aa5


0x4aa5:	add	rsp, 8
0x4aa9:	ret	


0x4a88:	lea	rdi, [rip + 0xeb9]
0x4a8f:	mov	ecx, 2
0x4a94:	mov	rsi, rdx
0x4a97:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4a97:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4a99:	seta	cl
0x4a9c:	sbb	cl, 0
0x4a9f:	xor	eax, eax
0x4aa1:	test	cl, cl
0x4aa3:	jne	0x4ab0


0x4ab0:	lea	rdi, [rip + 0xeb1]
0x4ab7:	mov	ecx, 6
0x4abc:	mov	rsi, rdx
0x4abf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4abf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4ac1:	seta	al
0x4ac4:	sbb	al, 0
0x4ac6:	test	al, al
0x4ac8:	setne	al
0x4acb:	add	rsp, 8
0x4acf:	ret	


0x47ac:	test	al, al
0x47ae:	jne	0x47c0


0x47b0:	movzx	eax, byte ptr [r13]
0x47b5:	mov	ebp, 1
0x47ba:	mov	dword ptr [rbx], eax
0x47bc:	nop	dword ptr [rax]
0x47c0:	mov	rdx, qword ptr [rsp + 8]
0x47c5:	xor	rdx, qword ptr fs:[0x28]
0x47ce:	mov	rax, rbp
0x47d1:	jne	0x47de


0x4ade:	test	rax, rax
0x4ae1:	je	0x4b00


0x4b00:	lea	rax, [rip + 0xe67]
0x4b07:	add	rsp, 8
0x4b0b:	ret	


0x4ae3:	cmp	byte ptr [rax], 0
0x4ae6:	lea	rdx, [rip + 0xe81]
0x4aed:	cmove	rax, rdx
0x4af1:	add	rsp, 8
0x4af5:	ret	


0x20e0:	movzx	edx, byte ptr [rax]
0x20e3:	and	edx, 0xffffffdf
0x20e6:	cmp	dl, 0x55
0x20e9:	je	0x2160


0x2160:	movzx	edx, byte ptr [rax + 1]
0x2164:	and	edx, 0xffffffdf
0x2167:	cmp	dl, 0x54
0x216a:	jne	0x20f0


0x20eb:	cmp	dl, 0x47
0x20ee:	je	0x2110


0x216c:	movzx	edx, byte ptr [rax + 2]
0x2170:	and	edx, 0xffffffdf
0x2173:	cmp	dl, 0x46
0x2176:	jne	0x20f0


0x20f0:	lea	rax, [rip + 0x3004]
0x20f7:	lea	rdx, [rip + 0x2fff]
0x20fe:	cmp	ebx, 9
0x2101:	cmovne	rax, rdx
0x2105:	add	rsp, 8
0x2109:	pop	rbx
0x210a:	pop	rbp
0x210b:	ret	


0x2110:	movzx	edx, byte ptr [rax + 1]
0x2114:	and	edx, 0xffffffdf
0x2117:	cmp	dl, 0x42
0x211a:	jne	0x20f0


0x217c:	cmp	byte ptr [rax + 3], 0x2d
0x2180:	jne	0x20f0


0x211c:	cmp	byte ptr [rax + 2], 0x31
0x2120:	jne	0x20f0


0x2186:	cmp	byte ptr [rax + 4], 0x38
0x218a:	jne	0x20f0


0x2122:	cmp	byte ptr [rax + 3], 0x38
0x2126:	jne	0x20f0


0x2190:	cmp	byte ptr [rax + 5], 0
0x2194:	jne	0x20f0


0x2128:	cmp	byte ptr [rax + 4], 0x30
0x212c:	jne	0x20f0


0x219a:	cmp	byte ptr [rbp], 0x60
0x219e:	lea	rax, [rip + 0x2f47]
0x21a5:	lea	rdx, [rip + 0x2f44]
0x21ac:	cmovne	rax, rdx
0x21b0:	add	rsp, 8
0x21b4:	pop	rbx
0x21b5:	pop	rbp
0x21b6:	ret	


0x212e:	cmp	byte ptr [rax + 5], 0x33
0x2132:	jne	0x20f0


0x2134:	cmp	byte ptr [rax + 6], 0x30
0x2138:	jne	0x20f0


0x213a:	cmp	byte ptr [rax + 7], 0
0x213e:	jne	0x20f0


0x2140:	cmp	byte ptr [rbp], 0x60
0x2144:	lea	rax, [rip + 0x2fa9]
0x214b:	lea	rdx, [rip + 0x2fa6]
0x2152:	cmovne	rax, rdx
0x2156:	add	rsp, 8
0x215a:	pop	rbx
0x215b:	pop	rbp
0x215c:	ret	


0x4c03:	mov	edx, r12d
0x4c06:	mov	rsi, rbp
0x4c09:	mov	edi, eax
0x4c0b:	call	0x13e0


0x13e0:	jmp	qword ptr [rip + 0x205b3a]




0x4b1c:	test	eax, eax
0x4b1e:	mov	rdi, rbx
0x4b21:	js	0x4b77


0x4b77:	pop	rbx
0x4b78:	pop	rbp
0x4b79:	pop	r12
0x4b7b:	jmp	0x1330


0x4b23:	call	0x1480


0x1330:	jmp	qword ptr [rip + 0x205b92]




0x4b28:	test	eax, eax
0x4b2a:	jne	0x4b58


0x4b2c:	mov	rdi, rbx
0x4b2f:	call	0x4b90


0x4b58:	mov	rdi, rbx
0x4b5b:	call	0x1440


0x4b60:	xor	esi, esi
0x4b62:	mov	edx, 1
0x4b67:	mov	edi, eax
0x4b69:	call	0x13e0


0x4b6e:	cmp	rax, -1
0x4b72:	jne	0x4b2c


0x4b74:	mov	rdi, rbx
0x4b77:	pop	rbx
0x4b78:	pop	rbp
0x4b79:	pop	r12
0x4b7b:	jmp	0x1330


0x4c10:	cmp	rax, -1
0x4c14:	je	0x4c22


0x4c22:	pop	rbx
0x4c23:	pop	rbp
0x4c24:	pop	r12
0x4c26:	ret	


0x4c16:	and	dword ptr [rbx], 0xffffffef
0x4c19:	mov	qword ptr [rbx + 0x90], rax
0x4c20:	xor	eax, eax
0x4c22:	pop	rbx
0x4c23:	pop	rbp
0x4c24:	pop	r12
0x4c26:	ret	


0x15af:	lea	rdi, [rip + 0x37ae]
0x15b6:	call	0x1310


0x1310:	jmp	qword ptr [rip + 0x205ba2]




0x35dd:	mov	dword ptr [rbp], r12d
0x35e1:	pop	rbx
0x35e2:	pop	rbp
0x35e3:	pop	r12
0x35e5:	ret	


0x349e:	mov	dword ptr [rip + 0x203bb3], r12d
0x34a5:	mov	eax, dword ptr [rbp + 4]
0x34a8:	shl	r15, 4
0x34ac:	sub	rsp, 8
0x34b0:	add	rbx, r15
0x34b3:	lea	r15, [rbp + 8]
0x34b7:	mov	r8d, dword ptr [rbp]
0x34bb:	mov	r11, qword ptr [rbx]
0x34be:	mov	r12, qword ptr [rbx + 8]
0x34c2:	mov	rcx, r14
0x34c5:	or	eax, 1
0x34c8:	mov	dword ptr [rsp + 0x24], eax
0x34cc:	push	qword ptr [rbp + 0x30]
0x34cf:	mov	r9d, eax
0x34d2:	push	qword ptr [rbp + 0x28]
0x34d5:	push	r15
0x34d7:	mov	rsi, r11
0x34da:	mov	rdx, qword ptr [rsp + 0x28]
0x34df:	mov	rdi, r12
0x34e2:	mov	qword ptr [rsp + 0x30], r11
0x34e7:	call	0x21c0


0x4600:	call	0x12b0


0x432a:	lea	rsi, [rip + 0x131c]
0x4331:	mov	edx, 5
0x4336:	xor	edi, edi
0x4338:	call	0x1350


0x433d:	lea	rcx, [rip + 0xc7c]
0x4344:	lea	rdx, [rip + 0xa15]
0x434b:	mov	rsi, rax
0x434e:	mov	edi, 1
0x4353:	xor	eax, eax
0x4355:	call	0x14b0


0x435a:	mov	rbx, qword ptr [rip + 0x202d27]
0x4361:	lea	rsi, [rip + 0x1518]
0x4368:	xor	edi, edi
0x436a:	mov	edx, 5
0x436f:	call	0x1350


0x4374:	mov	rsi, rbx
0x4377:	mov	rdi, rax
0x437a:	pop	rbx
0x437b:	jmp	0x1410


0x1980:	mov	rbx, qword ptr [rip + 0x205701]
0x1987:	lea	rsi, [rip + 0x35ca]
0x198e:	mov	edx, 5
0x1993:	xor	edi, edi
0x1995:	call	0x1350


0x199a:	mov	rsi, rbx
0x199d:	mov	rdi, rax
0x19a0:	call	0x1410


0x19a5:	mov	rbx, qword ptr [rip + 0x2056dc]
0x19ac:	lea	rsi, [rip + 0x35d5]
0x19b3:	mov	edx, 5
0x19b8:	xor	edi, edi
0x19ba:	call	0x1350


0x19bf:	mov	rsi, rbx
0x19c2:	mov	rdi, rax
0x19c5:	lea	rbx, [rip + 0x3373]
0x19cc:	call	0x1410


0x19d1:	lea	rax, [rip + 0x3312]
0x19d8:	lea	rcx, [rip + 0x334c]
0x19df:	mov	qword ptr [rsp + 0x50], rbx
0x19e4:	lea	rbx, [rip + 0x32f9]
0x19eb:	mov	qword ptr [rsp + 0x60], 0
0x19f4:	mov	qword ptr [rsp + 0x68], 0
0x19fd:	mov	qword ptr [rsp], rax
0x1a01:	lea	rax, [rip + 0x32e4]
0x1a08:	mov	qword ptr [rsp + 0x30], rcx
0x1a0d:	lea	rcx, [rip + 0x3321]
0x1a14:	mov	rdx, rsp
0x1a17:	mov	qword ptr [rsp + 8], rax
0x1a1c:	lea	rax, [rip + 0x3341]
0x1a23:	mov	qword ptr [rsp + 0x40], rcx
0x1a28:	mov	qword ptr [rsp + 0x10], rax
0x1a2d:	lea	rax, [rip + 0x32c8]
0x1a34:	mov	qword ptr [rsp + 0x18], rax
0x1a39:	lea	rax, [rip + 0x32d2]
0x1a40:	mov	qword ptr [rsp + 0x20], rax
0x1a45:	lea	rax, [rip + 0x32d0]
0x1a4c:	mov	qword ptr [rsp + 0x28], rax
0x1a51:	mov	qword ptr [rsp + 0x38], rax
0x1a56:	mov	qword ptr [rsp + 0x48], rax
0x1a5b:	mov	qword ptr [rsp + 0x58], rax
0x1a60:	add	rdx, 0x10
0x1a64:	mov	rdi, qword ptr [rdx]
0x1a67:	test	rdi, rdi
0x1a6a:	je	0x1a7f


0x1a7f:	mov	r12, qword ptr [rdx + 8]
0x1a83:	xor	edi, edi
0x1a85:	mov	edx, 5
0x1a8a:	lea	rsi, [rip + 0x32b8]
0x1a91:	test	r12, r12
0x1a94:	je	0x1b5b


0x1a6c:	mov	ecx, 6
0x1a71:	mov	rsi, rbx
0x1a74:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1b5b:	call	0x1350


0x1a9a:	call	0x1350


0x1a74:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1a76:	seta	al
0x1a79:	sbb	al, 0
0x1a7b:	test	al, al
0x1a7d:	jne	0x1a60


0x1a60:	add	rdx, 0x10
0x1a64:	mov	rdi, qword ptr [rdx]
0x1a67:	test	rdi, rdi
0x1a6a:	je	0x1a7f


0x1a9f:	lea	rcx, [rip + 0x351a]
0x1aa6:	lea	rdx, [rip + 0x32b3]
0x1aad:	mov	rsi, rax
0x1ab0:	mov	edi, 1
0x1ab5:	xor	eax, eax
0x1ab7:	call	0x14b0


0x1abc:	xor	esi, esi
0x1abe:	mov	edi, 5
0x1ac3:	call	0x14a0


0x1ac8:	test	rax, rax
0x1acb:	je	0x1ae9


0x1ae9:	lea	rsi, [rip + 0x3282]
0x1af0:	xor	edi, edi
0x1af2:	mov	edx, 5
0x1af7:	call	0x1350


0x1acd:	lea	rsi, [rip + 0x329a]
0x1ad4:	mov	edx, 3
0x1ad9:	mov	rdi, rax
0x1adc:	call	0x12d0


0x12d0:	jmp	qword ptr [rip + 0x205bc2]




0x1afc:	lea	rcx, [rip + 0x31e1]
0x1b03:	lea	rdx, [rip + 0x34b6]
0x1b0a:	mov	rsi, rax
0x1b0d:	mov	edi, 1
0x1b12:	xor	eax, eax
0x1b14:	call	0x14b0


0x1b19:	cmp	r12, rbx
0x1b1c:	lea	rcx, [rip + 0x31e3]
0x1b23:	lea	rbx, [rip + 0x3af7]
0x1b2a:	cmove	rbx, rcx
0x1b2e:	lea	rsi, [rip + 0x34fb]
0x1b35:	xor	edi, edi
0x1b37:	mov	edx, 5
0x1b3c:	call	0x1350


0x1b41:	mov	rcx, rbx
0x1b44:	mov	rsi, rax
0x1b47:	mov	rdx, r12
0x1b4a:	mov	edi, 1
0x1b4f:	xor	eax, eax
0x1b51:	call	0x14b0


0x1b56:	jmp	0x1956


0x1b60:	lea	rcx, [rip + 0x3459]
0x1b67:	lea	rdx, [rip + 0x31f2]
0x1b6e:	mov	rsi, rax
0x1b71:	mov	edi, 1
0x1b76:	xor	eax, eax
0x1b78:	call	0x14b0


0x1b7d:	xor	esi, esi
0x1b7f:	mov	edi, 5
0x1b84:	call	0x14a0


0x1b89:	test	rax, rax
0x1b8c:	je	0x1ba6


0x1ba6:	lea	rsi, [rip + 0x31c5]
0x1bad:	mov	edx, 5
0x1bb2:	xor	edi, edi
0x1bb4:	lea	r12, [rip + 0x3129]
0x1bbb:	lea	rbx, [rip + 0x3144]
0x1bc2:	call	0x1350


0x1b8e:	lea	rsi, [rip + 0x31d9]
0x1b95:	mov	edx, 3
0x1b9a:	mov	rdi, rax
0x1b9d:	call	0x12d0


0x1bc7:	lea	rcx, [rip + 0x3116]
0x1bce:	lea	rdx, [rip + 0x33eb]
0x1bd5:	mov	rsi, rax
0x1bd8:	mov	edi, 1
0x1bdd:	xor	eax, eax
0x1bdf:	call	0x14b0


0x1be4:	jmp	0x1b2e


0x1b2e:	lea	rsi, [rip + 0x34fb]
0x1b35:	xor	edi, edi
0x1b37:	mov	edx, 5
0x1b3c:	call	0x1350


0x3dec:	cmp	r12, 9
0x3df0:	ja	0x4130


0x3df6:	lea	rdx, [rip + 0x1acb]
0x3dfd:	movsxd	rax, dword ptr [rdx + r12*4]
0x3e01:	add	rax, rdx
0x3e04:	jmp	rax


0x4130:	mov	r10, qword ptr [rbx + 0x40]
0x4134:	mov	r9, qword ptr [rbx + 0x38]
0x4138:	mov	edx, 5
0x413d:	mov	rax, qword ptr [rbx + 0x10]
0x4141:	mov	r8, qword ptr [rbx + 8]
0x4145:	lea	rsi, [rip + 0x16f4]
0x414c:	mov	r13, qword ptr [rbx + 0x30]
0x4150:	mov	r12, qword ptr [rbx + 0x28]
0x4154:	mov	r15, qword ptr [rbx + 0x20]
0x4158:	mov	r14, qword ptr [rbx + 0x18]
0x415c:	mov	qword ptr [rsp + 0x18], r10
0x4161:	mov	qword ptr [rsp + 0x10], r9
0x4166:	mov	qword ptr [rsp], rax
0x416a:	mov	qword ptr [rsp + 8], r8
0x416f:	mov	rbx, qword ptr [rbx]
0x4172:	jmp	0x3f02


0x3f02:	xor	edi, edi
0x3f04:	call	0x1350


0x3f09:	mov	r10, qword ptr [rsp + 0x18]
0x3f0e:	push	r10
0x3f10:	jmp	0x3e54


0x3e54:	mov	r9, qword ptr [rsp + 0x18]
0x3e59:	mov	rdx, rax
0x3e5c:	mov	rcx, rbx
0x3e5f:	mov	esi, 1
0x3e64:	mov	rdi, rbp
0x3e67:	xor	eax, eax
0x3e69:	push	r9
0x3e6b:	push	r13
0x3e6d:	push	r12
0x3e6f:	push	r15
0x3e71:	push	r14
0x3e73:	mov	r9, qword ptr [rsp + 0x30]
0x3e78:	mov	r8, qword ptr [rsp + 0x38]
0x3e7d:	call	0x1510


0x3e82:	add	rsp, 0x30
0x3e86:	add	rsp, 0x28
0x3e8a:	pop	rbx
0x3e8b:	pop	rbp
0x3e8c:	pop	r12
0x3e8e:	pop	r13
0x3e90:	pop	r14
0x3e92:	pop	r15
0x3e94:	ret	


0x4bc7:	mov	rdi, rbx
0x4bca:	pop	rbx
0x4bcb:	jmp	0x1460


0x42c6:	mov	rax, qword ptr [rsp + 0x78]
0x42cb:	xor	rax, qword ptr fs:[0x28]
0x42d4:	jne	0x42e0


0x42d6:	add	rsp, 0xb8
0x42dd:	pop	rbx
0x42de:	pop	rbp
0x42df:	ret	


0x42e0:	call	0x1380


0x41f0:	mov	rax, qword ptr [rsp + 0x58]
0x41f5:	xor	rax, qword ptr fs:[0x28]
0x41fe:	jne	0x4205


0x4200:	add	rsp, 0x68
0x4204:	ret	


0x4205:	call	0x1380


0x1fe0:	xor	edi, edi
0x1fe2:	call	0x14f0


0x1ed0:	xor	edi, edi
0x1ed2:	call	0x14f0


0x1ba2:	test	eax, eax
0x1ba4:	jne	0x1be9


0x1be9:	lea	r12, [rip + 0x30f4]
0x1bf0:	mov	r13, qword ptr [rip + 0x205491]
0x1bf7:	lea	rsi, [rip + 0x33ea]
0x1bfe:	xor	edi, edi
0x1c00:	mov	edx, 5
0x1c05:	call	0x1350


0x1c0a:	mov	rsi, r13
0x1c0d:	mov	rdi, rax
0x1c10:	call	0x1410


0x1c15:	jmp	0x1ae9


0x1ae1:	test	eax, eax
0x1ae3:	jne	0x1bf0


0x1bf0:	mov	r13, qword ptr [rip + 0x205491]
0x1bf7:	lea	rsi, [rip + 0x33ea]
0x1bfe:	xor	edi, edi
0x1c00:	mov	edx, 5
0x1c05:	call	0x1350


0x15bb:	lea	rdi, [rip + 0x73e]
0x15c2:	call	0x4cb0


0x15c7:	lea	rax, [rip + 0x37d7]
0x15ce:	push	0
0x15d0:	mov	r8, qword ptr [rip + 0x205a39]
0x15d7:	lea	rcx, [rip + 0x3782]
0x15de:	lea	rdx, [rip + 0x36ff]
0x15e5:	mov	r9d, 1
0x15eb:	push	rax
0x15ec:	lea	rax, [rip + 0x37be]
0x15f3:	mov	rsi, r12
0x15f6:	mov	edi, ebp
0x15f8:	push	rax
0x15f9:	lea	rax, [rip + 0x300]
0x1600:	push	rax
0x1601:	xor	eax, eax
0x1603:	call	0x1ef0


0x1608:	add	rsp, 0x20
0x160c:	cmp	ebp, 1
0x160f:	je	0x17b9


0x17b9:	lea	rsi, [rip + 0x35fe]
0x17c0:	mov	edx, 5
0x17c5:	xor	edi, edi
0x17c7:	call	0x1350


0x1615:	mov	eax, dword ptr [rip + 0x205a75]
0x161b:	cmp	ebp, eax
0x161d:	jle	0x1772


0x1772:	pxor	xmm3, xmm3
0x1776:	movsd	qword ptr [rsp + 8], xmm3
0x177c:	jmp	0x1715


0x1623:	movsxd	rdx, eax
0x1626:	not	eax
0x1628:	mov	r14d, 1
0x162e:	add	eax, ebp
0x1630:	lea	rbx, [r12 + rdx*8]
0x1634:	mov	qword ptr [rsp + 8], 0
0x163d:	add	rax, rdx
0x1640:	lea	rbp, [rsp + 0x20]
0x1645:	lea	r15, [rip + 0x3782]
0x164c:	lea	r13, [r12 + rax*8 + 8]
0x1651:	lea	r12, [rsp + 0x18]
0x1656:	jmp	0x16b3


0x1715:	movsd	xmm0, qword ptr [rsp + 8]
0x171b:	call	0x4610


0x16b3:	lea	rcx, [rip + 0x566]
0x16ba:	mov	rdi, qword ptr [rbx]
0x16bd:	mov	rdx, r12
0x16c0:	mov	rsi, rbp
0x16c3:	call	0x4690


0x1720:	test	eax, eax
0x1722:	jne	0x178d


0x1724:	xor	eax, eax
0x1726:	mov	rcx, qword ptr [rsp + 0x28]
0x172b:	xor	rcx, qword ptr fs:[0x28]
0x1734:	jne	0x1788


0x178d:	lea	rsi, [rip + 0x3653]
0x1794:	mov	edx, 5
0x1799:	xor	edi, edi
0x179b:	call	0x1350


0x1736:	add	rsp, 0x38
0x173a:	pop	rbx
0x173b:	pop	rbp
0x173c:	pop	r12
0x173e:	pop	r13
0x1740:	pop	r14
0x1742:	pop	r15
0x1744:	ret	


0x1788:	call	0x1380


0x17a0:	mov	rbx, rax
0x17a3:	call	0x12c0


0x17a8:	mov	esi, dword ptr [rax]
0x17aa:	mov	rdx, rbx
0x17ad:	mov	edi, 1
0x17b2:	xor	eax, eax
0x17b4:	call	0x14c0


0x17cc:	xor	edi, edi
0x17ce:	mov	rdx, rax
0x17d1:	xor	esi, esi
0x17d3:	xor	eax, eax
0x17d5:	call	0x14c0


0x17da:	mov	edi, 1
0x17df:	call	0x1900


0x4b34:	test	eax, eax
0x4b36:	je	0x4b74


0x4b38:	call	0x12c0


0x4b3d:	mov	r12d, dword ptr [rax]
0x4b40:	mov	rdi, rbx
0x4b43:	mov	rbp, rax
0x4b46:	call	0x1330


0x4b4b:	test	r12d, r12d
0x4b4e:	jne	0x4b80


0x4b50:	pop	rbx
0x4b51:	pop	rbp
0x4b52:	pop	r12
0x4b54:	ret	


0x4b80:	mov	dword ptr [rbp], r12d
0x4b84:	mov	eax, 0xffffffff
0x4b89:	jmp	0x4b50


0x494a:	and	ebx, 0x20
0x494d:	test	ebx, ebx
0x494f:	jne	0x4968


0x4951:	test	eax, eax
0x4953:	je	0x495f


0x4968:	test	eax, eax
0x496a:	jne	0x4988


0x495f:	pop	rbx
0x4960:	pop	rbp
0x4961:	pop	r12
0x4963:	ret	


0x4955:	test	r12, r12
0x4958:	mov	eax, 0xffffffff
0x495d:	je	0x4998


0x496c:	call	0x12c0


0x4988:	pop	rbx
0x4989:	mov	eax, 0xffffffff
0x498e:	pop	rbp
0x498f:	pop	r12
0x4991:	ret	


0x4998:	call	0x12c0


0x499d:	cmp	dword ptr [rax], 9
0x49a0:	pop	rbx
0x49a1:	pop	rbp
0x49a2:	pop	r12
0x49a4:	setne	al
0x49a7:	movzx	eax, al
0x49aa:	neg	eax
0x49ac:	ret	


0x4971:	mov	dword ptr [rax], 0
0x4977:	mov	eax, 0xffffffff
0x497c:	pop	rbx
0x497d:	pop	rbp
0x497e:	pop	r12
0x4980:	ret	


0x1d12:	test	eax, eax
0x1d14:	je	0x1d2c


0x1d2c:	mov	rdi, qword ptr [rip + 0x20538d]
0x1d33:	call	0x4930


0x1d16:	call	0x12c0


0x1d1b:	cmp	byte ptr [rip + 0x2053ae], 0
0x1d22:	mov	rbx, rax
0x1d25:	je	0x1d43


0x1d43:	lea	rsi, [rip + 0x333b]
0x1d4a:	xor	edi, edi
0x1d4c:	mov	edx, 5
0x1d51:	call	0x1350


0x1d27:	cmp	dword ptr [rax], 0x20
0x1d2a:	jne	0x1d43


0x1d56:	mov	rdi, qword ptr [rip + 0x20537b]
0x1d5d:	mov	rbp, rax
0x1d60:	test	rdi, rdi
0x1d63:	je	0x1d8d


0x1d8d:	mov	esi, dword ptr [rbx]
0x1d8f:	lea	rdx, [rip + 0x32ff]
0x1d96:	mov	rcx, rax
0x1d99:	xor	edi, edi
0x1d9b:	xor	eax, eax
0x1d9d:	call	0x14c0


0x1d65:	call	0x3b40


0x1da2:	jmp	0x1d82


0x1d82:	mov	edi, dword ptr [rip + 0x205290]
0x1d88:	call	0x12e0


0x12e0:	jmp	qword ptr [rip + 0x205bba]




0x1d38:	test	eax, eax
0x1d3a:	jne	0x1d82


0x1d3c:	add	rsp, 8
0x1d40:	pop	rbx
0x1d41:	pop	rbp
0x1d42:	ret	


0x1d6a:	mov	esi, dword ptr [rbx]
0x1d6c:	lea	rdx, [rip + 0x331e]
0x1d73:	mov	rcx, rax
0x1d76:	mov	r8, rbp
0x1d79:	xor	edi, edi
0x1d7b:	xor	eax, eax
0x1d7d:	call	0x14c0


0x16c8:	test	al, al
0x16ca:	je	0x1660


0x1660:	call	0x12c0


0x16cc:	pxor	xmm2, xmm2
0x16d0:	movsd	xmm0, qword ptr [rsp + 0x18]
0x16d6:	ucomisd	xmm0, xmm2
0x16da:	jb	0x166a


0x166a:	mov	rdi, qword ptr [rbx]
0x166d:	call	0x3d40


0x16dc:	mov	rax, qword ptr [rsp + 0x20]
0x16e1:	movzx	edx, byte ptr [rax]
0x16e4:	test	dl, dl
0x16e6:	je	0x169e


0x169e:	addsd	xmm0, qword ptr [rsp + 8]
0x16a4:	add	rbx, 8
0x16a8:	cmp	rbx, r13
0x16ab:	movsd	qword ptr [rsp + 8], xmm0
0x16b1:	je	0x1710


0x16e8:	cmp	byte ptr [rax + 1], 0
0x16ec:	jne	0x166a


0x1710:	test	r14b, r14b
0x1713:	je	0x177e


0x16f2:	cmp	dl, 0x68
0x16f5:	je	0x1745


0x177e:	mov	edi, 1
0x1783:	call	0x1900


0x1745:	mulsd	xmm0, qword ptr [rip + 0x3923]
0x174d:	jmp	0x169e


0x16f7:	jg	0x1752


0x16f9:	cmp	dl, 0x64
0x16fc:	jne	0x166a


0x1752:	cmp	dl, 0x6d
0x1755:	jne	0x1764


0x1702:	mulsd	xmm0, qword ptr [rip + 0x396e]
0x170a:	jmp	0x169e


0x1757:	mulsd	xmm0, qword ptr [rip + 0x3909]
0x175f:	jmp	0x169e


0x1764:	cmp	dl, 0x73
0x1767:	jne	0x166a


0x176d:	jmp	0x169e


0x1665:	cmp	dword ptr [rax], 0x22
0x1668:	je	0x16cc


0x1672:	mov	edx, 5
0x1677:	mov	r14, rax
0x167a:	mov	rsi, r15
0x167d:	xor	edi, edi
0x167f:	call	0x1350


0x1684:	mov	rcx, r14
0x1687:	mov	rdx, rax
0x168a:	xor	esi, esi
0x168c:	xor	edi, edi
0x168e:	xor	eax, eax
0x1690:	xor	r14d, r14d
0x1693:	call	0x14c0


0x1698:	movsd	xmm0, qword ptr [rsp + 0x18]
0x169e:	addsd	xmm0, qword ptr [rsp + 8]
0x16a4:	add	rbx, 8
0x16a8:	cmp	rbx, r13
0x16ab:	movsd	qword ptr [rsp + 8], xmm0
0x16b1:	je	0x1710


0x34ec:	add	rsp, 0x20
0x34f0:	mov	r11, qword ptr [rsp + 0x10]
0x34f5:	cmp	r11, rax
0x34f8:	ja	0x3561


0x34fa:	lea	rsi, [rax + 1]
0x34fe:	lea	rax, [rip + 0x203bfb]
0x3505:	cmp	r12, rax
0x3508:	mov	qword ptr [rbx], rsi
0x350b:	je	0x351f


0x3561:	mov	eax, dword ptr [rsp + 0x18]
0x3565:	mov	dword ptr [r13], eax
0x3569:	add	rsp, 0x28
0x356d:	mov	rax, r12
0x3570:	pop	rbx
0x3571:	pop	rbp
0x3572:	pop	r12
0x3574:	pop	r13
0x3576:	pop	r14
0x3578:	pop	r15
0x357a:	ret	


0x351f:	mov	rdi, rsi
0x3522:	mov	qword ptr [rsp + 0x10], rsi
0x3527:	call	0x4380


0x350d:	mov	rdi, r12
0x3510:	mov	qword ptr [rsp + 0x10], rsi
0x3515:	call	0x12a0


0x351a:	mov	rsi, qword ptr [rsp + 0x10]
0x351f:	mov	rdi, rsi
0x3522:	mov	qword ptr [rsp + 0x10], rsi
0x3527:	call	0x4380


0x352c:	sub	rsp, 8
0x3530:	mov	qword ptr [rbx + 8], rax
0x3534:	mov	r8d, dword ptr [rbp]
0x3538:	push	qword ptr [rbp + 0x30]
0x353b:	push	qword ptr [rbp + 0x28]
0x353e:	mov	rcx, r14
0x3541:	push	r15
0x3543:	mov	r9d, dword ptr [rsp + 0x3c]
0x3548:	mov	rdi, rax
0x354b:	mov	rdx, qword ptr [rsp + 0x28]
0x3550:	mov	rsi, qword ptr [rsp + 0x30]
0x3555:	mov	r12, rax
0x3558:	call	0x21c0


0x3c72:	mov	rdi, qword ptr [rsp + 0x38]
0x3c77:	xor	rdi, qword ptr fs:[0x28]
0x3c80:	jne	0x3c8c


0x3c82:	add	rsp, 0x48
0x3c86:	ret	


0x3c8c:	call	0x1380


0x39bf:	mov	rcx, qword ptr [rsp + 0x38]
0x39c4:	xor	rcx, qword ptr fs:[0x28]
0x39cd:	jne	0x39d9


0x39cf:	add	rsp, 0x48
0x39d3:	ret	


0x39d9:	call	0x1380


0x3a4b:	mov	rdx, qword ptr [rsp + 0x38]
0x3a50:	xor	rdx, qword ptr fs:[0x28]
0x3a59:	jne	0x3a65


0x3a5b:	add	rsp, 0x48
0x3a5f:	ret	


0x3a65:	call	0x1380


0x3bdf:	mov	rcx, qword ptr [rsp + 0x38]
0x3be4:	xor	rcx, qword ptr fs:[0x28]
0x3bed:	jne	0x3bf9


0x3bef:	add	rsp, 0x48
0x3bf3:	ret	


0x3bf9:	call	0x1380


0x3b0e:	mov	rsi, qword ptr [rsp + 0x38]
0x3b13:	xor	rsi, qword ptr fs:[0x28]
0x3b1c:	jne	0x3b23


0x3b1e:	add	rsp, 0x48
0x3b22:	ret	


0x3b23:	call	0x1380


0x355d:	add	rsp, 0x20
0x3561:	mov	eax, dword ptr [rsp + 0x18]
0x3565:	mov	dword ptr [r13], eax
0x3569:	add	rsp, 0x28
0x356d:	mov	rax, r12
0x3570:	pop	rbx
0x3571:	pop	rbp
0x3572:	pop	r12
0x3574:	pop	r13
0x3576:	pop	r14
0x3578:	pop	r15
0x357a:	ret	


0x37ac:	lea	rsi, [rax + 1]
0x37b0:	mov	qword ptr [rsp + 0x48], rax
0x37b5:	add	rsp, 0x20
0x37b9:	mov	rdi, rsi
0x37bc:	mov	qword ptr [rsp + 0x18], rsi
0x37c1:	call	0x4380


0x37c6:	mov	qword ptr [rsp + 0x10], rax
0x37cb:	sub	rsp, 8
0x37cf:	push	qword ptr [rbx + 0x30]
0x37d2:	push	qword ptr [rbx + 0x28]
0x37d5:	mov	r10, qword ptr [rsp + 0x38]
0x37da:	mov	r9d, ebp
0x37dd:	mov	r8d, dword ptr [rbx]
0x37e0:	mov	rcx, r15
0x37e3:	mov	rdx, r14
0x37e6:	mov	rdi, rax
0x37e9:	push	r10
0x37eb:	mov	rsi, qword ptr [rsp + 0x38]
0x37f0:	call	0x21c0


0x37f5:	mov	eax, dword ptr [rsp + 0x2c]
0x37f9:	add	rsp, 0x20
0x37fd:	test	r12, r12
0x3800:	mov	dword ptr [r13], eax
0x3804:	je	0x380f


0x380f:	mov	rax, qword ptr [rsp + 0x10]
0x3814:	add	rsp, 0x38
0x3818:	pop	rbx
0x3819:	pop	rbp
0x381a:	pop	r12
0x381c:	pop	r13
0x381e:	pop	r14
0x3820:	pop	r15
0x3822:	ret	


0x3806:	mov	r11, qword ptr [rsp + 0x28]
0x380b:	mov	qword ptr [r12], r11
0x380f:	mov	rax, qword ptr [rsp + 0x10]
0x3814:	add	rsp, 0x38
0x3818:	pop	rbx
0x3819:	pop	rbp
0x381a:	pop	r12
0x381c:	pop	r13
0x381e:	pop	r14
0x3820:	pop	r15
0x3822:	ret	


0x3721:	mov	dword ptr [rbp], r12d
0x3725:	add	rsp, 0x38
0x3729:	pop	rbx
0x372a:	pop	rbp
0x372b:	pop	r12
0x372d:	pop	r13
0x372f:	pop	r14
0x3731:	pop	r15
0x3733:	ret	


0x46cf:	mov	rcx, qword ptr [rsp]
0x46d3:	cmp	rcx, rbp
0x46d6:	je	0x4748


0x4748:	xor	eax, eax
0x474a:	jmp	0x46f6


0x46d8:	test	rbx, rbx
0x46db:	je	0x4728


0x46f6:	test	rbx, rbx
0x46f9:	je	0x46fe


0x4728:	xor	eax, eax
0x472a:	cmp	byte ptr [rcx], 0
0x472d:	jne	0x46fe


0x46dd:	ucomisd	xmm0, qword ptr [rip + 0x125b]
0x46e5:	jp	0x46ee


0x46fe:	mov	rdx, qword ptr [rsp + 8]
0x4703:	xor	rdx, qword ptr fs:[0x28]
0x470c:	movsd	qword ptr [r13], xmm0
0x4712:	jne	0x474c


0x46fb:	mov	qword ptr [rbx], rcx
0x46fe:	mov	rdx, qword ptr [rsp + 8]
0x4703:	xor	rdx, qword ptr fs:[0x28]
0x470c:	movsd	qword ptr [r13], xmm0
0x4712:	jne	0x474c


0x472f:	ucomisd	xmm0, qword ptr [rip + 0x1209]
0x4737:	jp	0x46ee


0x46ee:	cmp	dword ptr [r12], 0x22
0x46f3:	setne	al
0x46f6:	test	rbx, rbx
0x46f9:	je	0x46fe


0x46e7:	mov	eax, 1
0x46ec:	je	0x46fb


0x4714:	add	rsp, 0x10
0x4718:	pop	rbx
0x4719:	pop	rbp
0x471a:	pop	r12
0x471c:	pop	r13
0x471e:	pop	r14
0x4720:	ret	


0x474c:	call	0x1380


0x4739:	jne	0x46ee


0x473b:	mov	eax, 1
0x4740:	jmp	0x46fe


0x2024:	jmp	0x1ff8


0x1ee5:	jmp	0x1e29


0x4c7d:	add	rbx, 1
0x4c81:	cmp	rbp, rbx
0x4c84:	jne	0x4c70


0x4c70:	mov	rdx, r15
0x4c73:	mov	rsi, r14
0x4c76:	mov	edi, r13d
0x4c79:	call	qword ptr [r12 + rbx*8]






0x3fa0:	mov	r13, qword ptr [rbx + 0x10]
0x3fa4:	mov	r12, qword ptr [rbx + 8]
0x3fa8:	lea	rsi, [rip + 0x1657]
0x3faf:	mov	rbx, qword ptr [rbx]
0x3fb2:	mov	edx, 5
0x3fb7:	xor	edi, edi
0x3fb9:	call	0x1350


0x40e0:	mov	r9, qword ptr [rbx + 0x10]
0x40e4:	mov	r13, qword ptr [rbx + 0x30]
0x40e8:	lea	rsi, [rip + 0x16b9]
0x40ef:	mov	r12, qword ptr [rbx + 0x28]
0x40f3:	mov	r15, qword ptr [rbx + 0x20]
0x40f7:	mov	edx, 5
0x40fc:	mov	r14, qword ptr [rbx + 0x18]
0x4100:	mov	r8, qword ptr [rbx + 8]
0x4104:	xor	edi, edi
0x4106:	mov	qword ptr [rsp + 8], r9
0x410b:	mov	rbx, qword ptr [rbx]
0x410e:	mov	qword ptr [rsp], r8
0x4112:	call	0x1350


0x3ec0:	mov	r10, qword ptr [rbx + 0x40]
0x3ec4:	mov	r9, qword ptr [rbx + 0x38]
0x3ec8:	lea	rsi, [rip + 0x1939]
0x3ecf:	mov	rax, qword ptr [rbx + 0x10]
0x3ed3:	mov	r8, qword ptr [rbx + 8]
0x3ed7:	mov	edx, 5
0x3edc:	mov	r13, qword ptr [rbx + 0x30]
0x3ee0:	mov	r12, qword ptr [rbx + 0x28]
0x3ee4:	mov	r15, qword ptr [rbx + 0x20]
0x3ee8:	mov	r14, qword ptr [rbx + 0x18]
0x3eec:	mov	rbx, qword ptr [rbx]
0x3eef:	mov	qword ptr [rsp + 0x18], r10
0x3ef4:	mov	qword ptr [rsp + 0x10], r9
0x3ef9:	mov	qword ptr [rsp], rax
0x3efd:	mov	qword ptr [rsp + 8], r8
0x3f02:	xor	edi, edi
0x3f04:	call	0x1350


0x3e86:	add	rsp, 0x28
0x3e8a:	pop	rbx
0x3e8b:	pop	rbp
0x3e8c:	pop	r12
0x3e8e:	pop	r13
0x3e90:	pop	r14
0x3e92:	pop	r15
0x3e94:	ret	


0x4048:	mov	r15, qword ptr [rbx + 0x20]
0x404c:	lea	rsi, [rip + 0x1705]
0x4053:	mov	edx, 5
0x4058:	xor	edi, edi
0x405a:	mov	r14, qword ptr [rbx + 0x18]
0x405e:	mov	r13, qword ptr [rbx + 0x10]
0x4062:	mov	r12, qword ptr [rbx + 8]
0x4066:	mov	rbx, qword ptr [rbx]
0x4069:	call	0x1350


0x3ff0:	lea	rsi, [rip + 0x1741]
0x3ff7:	mov	edx, 5
0x3ffc:	xor	edi, edi
0x3ffe:	mov	r14, qword ptr [rbx + 0x18]
0x4002:	mov	r13, qword ptr [rbx + 0x10]
0x4006:	mov	r12, qword ptr [rbx + 8]
0x400a:	mov	rbx, qword ptr [rbx]
0x400d:	call	0x1350


0x3e10:	mov	r9, qword ptr [rbx + 0x38]
0x3e14:	mov	rax, qword ptr [rbx + 0x10]
0x3e18:	lea	rsi, [rip + 0x19b9]
0x3e1f:	mov	r8, qword ptr [rbx + 8]
0x3e23:	mov	edx, 5
0x3e28:	xor	edi, edi
0x3e2a:	mov	r13, qword ptr [rbx + 0x30]
0x3e2e:	mov	r12, qword ptr [rbx + 0x28]
0x3e32:	mov	qword ptr [rsp + 0x10], r9
0x3e37:	mov	r15, qword ptr [rbx + 0x20]
0x3e3b:	mov	r14, qword ptr [rbx + 0x18]
0x3e3f:	mov	qword ptr [rsp], rax
0x3e43:	mov	qword ptr [rsp + 8], r8
0x3e48:	mov	rbx, qword ptr [rbx]
0x3e4b:	call	0x1350


0x3f58:	mov	r12, qword ptr [rbx + 8]
0x3f5c:	lea	rsi, [rip + 0x168c]
0x3f63:	mov	rbx, qword ptr [rbx]
0x3f66:	mov	edx, 5
0x3f6b:	xor	edi, edi
0x3f6d:	call	0x1350


0x3f18:	mov	rbx, qword ptr [rbx]
0x3f1b:	lea	rsi, [rip + 0x16bd]
0x3f22:	mov	edx, 5
0x3f27:	xor	edi, edi
0x3f29:	call	0x1350


0x4078:	mov	r8, qword ptr [rbx + 8]
0x407c:	mov	r12, qword ptr [rbx + 0x28]
0x4080:	lea	rsi, [rip + 0x16f9]
0x4087:	mov	r15, qword ptr [rbx + 0x20]
0x408b:	mov	r14, qword ptr [rbx + 0x18]
0x408f:	mov	edx, 5
0x4094:	mov	r13, qword ptr [rbx + 0x10]
0x4098:	xor	edi, edi
0x409a:	mov	rbx, qword ptr [rbx]
0x409d:	mov	qword ptr [rsp], r8
0x40a1:	call	0x1350


0x40a6:	sub	rsp, 8
0x40aa:	mov	r9, r13
0x40ad:	push	r12
0x40af:	push	r15
0x40b1:	push	r14
0x40b3:	mov	r8, qword ptr [rsp + 0x20]
0x40b8:	mov	rcx, rbx
0x40bb:	mov	rdx, rax
0x40be:	mov	rdi, rbp
0x40c1:	mov	esi, 1
0x40c6:	xor	eax, eax
0x40c8:	call	0x1510


0x40cd:	add	rsp, 0x20
0x40d1:	add	rsp, 0x28
0x40d5:	pop	rbx
0x40d6:	pop	rbp
0x40d7:	pop	r12
0x40d9:	pop	r13
0x40db:	pop	r14
0x40dd:	pop	r15
0x40df:	ret	


0x3f2e:	add	rsp, 0x28
0x3f32:	mov	rcx, rbx
0x3f35:	mov	rdi, rbp
0x3f38:	pop	rbx
0x3f39:	pop	rbp
0x3f3a:	pop	r12
0x3f3c:	pop	r13
0x3f3e:	pop	r14
0x3f40:	pop	r15
0x3f42:	mov	rdx, rax
0x3f45:	mov	esi, 1
0x3f4a:	xor	eax, eax
0x3f4c:	jmp	0x1510


0x3f72:	add	rsp, 0x28
0x3f76:	mov	r8, r12
0x3f79:	mov	rcx, rbx
0x3f7c:	mov	rdi, rbp
0x3f7f:	mov	rdx, rax
0x3f82:	mov	esi, 1
0x3f87:	pop	rbx
0x3f88:	pop	rbp
0x3f89:	pop	r12
0x3f8b:	pop	r13
0x3f8d:	pop	r14
0x3f8f:	pop	r15
0x3f91:	xor	eax, eax
0x3f93:	jmp	0x1510


0x3e50:	sub	rsp, 8
0x3e54:	mov	r9, qword ptr [rsp + 0x18]
0x3e59:	mov	rdx, rax
0x3e5c:	mov	rcx, rbx
0x3e5f:	mov	esi, 1
0x3e64:	mov	rdi, rbp
0x3e67:	xor	eax, eax
0x3e69:	push	r9
0x3e6b:	push	r13
0x3e6d:	push	r12
0x3e6f:	push	r15
0x3e71:	push	r14
0x3e73:	mov	r9, qword ptr [rsp + 0x30]
0x3e78:	mov	r8, qword ptr [rsp + 0x38]
0x3e7d:	call	0x1510


0x4012:	sub	rsp, 8
0x4016:	push	r14
0x4018:	mov	rdx, rax
0x401b:	mov	r9, r13
0x401e:	mov	r8, r12
0x4021:	mov	rcx, rbx
0x4024:	mov	rdi, rbp
0x4027:	mov	esi, 1
0x402c:	xor	eax, eax
0x402e:	call	0x1510


0x4033:	pop	rax
0x4034:	pop	rdx
0x4035:	add	rsp, 0x28
0x4039:	pop	rbx
0x403a:	pop	rbp
0x403b:	pop	r12
0x403d:	pop	r13
0x403f:	pop	r14
0x4041:	pop	r15
0x4043:	ret	


0x406e:	push	r15
0x4070:	jmp	0x4016


0x4016:	push	r14
0x4018:	mov	rdx, rax
0x401b:	mov	r9, r13
0x401e:	mov	r8, r12
0x4021:	mov	rcx, rbx
0x4024:	mov	rdi, rbp
0x4027:	mov	esi, 1
0x402c:	xor	eax, eax
0x402e:	call	0x1510


0x4117:	push	r13
0x4119:	push	r12
0x411b:	push	r15
0x411d:	push	r14
0x411f:	mov	r9, qword ptr [rsp + 0x28]
0x4124:	jmp	0x40b3


0x40b3:	mov	r8, qword ptr [rsp + 0x20]
0x40b8:	mov	rcx, rbx
0x40bb:	mov	rdx, rax
0x40be:	mov	rdi, rbp
0x40c1:	mov	esi, 1
0x40c6:	xor	eax, eax
0x40c8:	call	0x1510


0x3fbe:	add	rsp, 0x28
0x3fc2:	mov	r9, r13
0x3fc5:	mov	r8, r12
0x3fc8:	mov	rcx, rbx
0x3fcb:	mov	rdi, rbp
0x3fce:	mov	rdx, rax
0x3fd1:	pop	rbx
0x3fd2:	pop	rbp
0x3fd3:	pop	r12
0x3fd5:	pop	r13
0x3fd7:	pop	r14
0x3fd9:	pop	r15
0x3fdb:	mov	esi, 1
0x3fe0:	xor	eax, eax
0x3fe2:	jmp	0x1510


0x2d60:	sub	rsp, 8
0x2d64:	mov	rcx, rbp
0x2d67:	mov	rsi, r13
0x2d6a:	push	qword ptr [rsp + 0x68]
0x2d6e:	push	qword ptr [rsp + 0x78]
0x2d72:	mov	rdi, r14
0x2d75:	push	0
0x2d77:	mov	r9d, dword ptr [rsp + 0x98]
0x2d7f:	mov	r8d, dword ptr [rsp + 0x28]
0x2d84:	mov	rdx, qword ptr [rsp + 0x30]
0x2d89:	and	r9d, 0xfffffffd
0x2d8d:	call	0x21c0


0x2d92:	add	rsp, 0x20
0x2d96:	mov	r15, rax
0x2d99:	mov	rbx, qword ptr [rsp + 0xa8]
0x2da1:	xor	rbx, qword ptr fs:[0x28]
0x2daa:	mov	rax, r15
0x2dad:	jne	0x33b3


0x2db3:	add	rsp, 0xb8
0x2dba:	pop	rbx
0x2dbb:	pop	rbp
0x2dbc:	pop	r12
0x2dbe:	pop	r13
0x2dc0:	pop	r14
0x2dc2:	pop	r15
0x2dc4:	ret	


0x33b3:	call	0x1380


0x335d:	sub	rsp, 8
0x3361:	mov	r8d, 5
0x3367:	mov	rcx, r11
0x336a:	push	qword ptr [rsp + 0x68]
0x336e:	push	qword ptr [rsp + 0x78]
0x3372:	mov	rdi, r14
0x3375:	push	qword ptr [rsp + 0x38]
0x3379:	mov	r9d, dword ptr [rsp + 0x98]
0x3381:	mov	rdx, qword ptr [rsp + 0x30]
0x3386:	mov	rsi, qword ptr [rsp + 0x70]
0x338b:	call	0x21c0


0x3390:	add	rsp, 0x20
0x3394:	mov	r15, rax
0x3397:	jmp	0x2d99


0x2d99:	mov	rbx, qword ptr [rsp + 0xa8]
0x2da1:	xor	rbx, qword ptr fs:[0x28]
0x2daa:	mov	rax, r15
0x2dad:	jne	0x33b3


0x1290:	push	qword ptr [rip + 0x205bda]
0x1296:	jmp	qword ptr [rip + 0x205bdc]


0x129c:	nop	dword ptr [rax]


0x12a6:	push	0
0x12ab:	jmp	0x1290


0x12b6:	push	1
0x12bb:	jmp	0x1290


0x12c6:	push	2
0x12cb:	jmp	0x1290


0x12d6:	push	3
0x12db:	jmp	0x1290


0x12e6:	push	4
0x12eb:	jmp	0x1290


0x12f6:	push	5
0x12fb:	jmp	0x1290


0x1306:	push	6
0x130b:	jmp	0x1290


0x1316:	push	7
0x131b:	jmp	0x1290


0x1326:	push	8
0x132b:	jmp	0x1290


0x1336:	push	9
0x133b:	jmp	0x1290


0x1346:	push	0xa
0x134b:	jmp	0x1290


0x1356:	push	0xb
0x135b:	jmp	0x1290


0x1366:	push	0xc
0x136b:	jmp	0x1290


0x1376:	push	0xd
0x137b:	jmp	0x1290


0x1386:	push	0xe
0x138b:	jmp	0x1290


0x1396:	push	0xf
0x139b:	jmp	0x1290


0x13a6:	push	0x10
0x13ab:	jmp	0x1290


0x13b6:	push	0x11
0x13bb:	jmp	0x1290


0x13c6:	push	0x12
0x13cb:	jmp	0x1290


0x13d6:	push	0x13
0x13db:	jmp	0x1290


0x13e6:	push	0x14
0x13eb:	jmp	0x1290


0x13f6:	push	0x15
0x13fb:	jmp	0x1290


0x1400:	jmp	qword ptr [rip + 0x205b2a]




0x1406:	push	0x16
0x140b:	jmp	0x1290


0x1416:	push	0x17
0x141b:	jmp	0x1290


0x1426:	push	0x18
0x142b:	jmp	0x1290


0x1436:	push	0x19
0x143b:	jmp	0x1290


0x1446:	push	0x1a
0x144b:	jmp	0x1290


0x1456:	push	0x1b
0x145b:	jmp	0x1290


0x1466:	push	0x1c
0x146b:	jmp	0x1290


0x1476:	push	0x1d
0x147b:	jmp	0x1290


0x1486:	push	0x1e
0x148b:	jmp	0x1290


0x1496:	push	0x1f
0x149b:	jmp	0x1290


0x14a6:	push	0x20
0x14ab:	jmp	0x1290


0x14b6:	push	0x21
0x14bb:	jmp	0x1290


0x14c6:	push	0x22
0x14cb:	jmp	0x1290


0x14d6:	push	0x23
0x14db:	jmp	0x1290


0x14e6:	push	0x24
0x14eb:	jmp	0x1290


0x14f6:	push	0x25
0x14fb:	jmp	0x1290


0x1506:	push	0x26
0x150b:	jmp	0x1290


0x1516:	push	0x27
0x151b:	jmp	0x1290


0x1520:	jmp	qword ptr [rip + 0x205a9a]




0x1526:	push	0x28
0x152b:	jmp	0x1290


0x1530:	jmp	qword ptr [rip + 0x205a92]




0x1536:	push	0x29
0x153b:	jmp	0x1290


0x1540:	jmp	qword ptr [rip + 0x205a8a]




0x1546:	push	0x2a
0x154b:	jmp	0x1290


0x17e4:	nop	word ptr cs:[rax + rax]
0x17ee:	nop	


0x181a:	hlt	


0x181b:	nop	dword ptr [rax + rax]


0x1852:	nop	dword ptr [rax]
0x1856:	nop	word ptr cs:[rax + rax]


0x18a2:	nop	dword ptr [rax]
0x18a6:	nop	word ptr cs:[rax + rax]


0x18ea:	nop	word ptr [rax + rax]


0x18fa:	nop	word ptr [rax + rax]


0x1c1a:	nop	word ptr [rax + rax]


0x1cd3:	nop	word ptr cs:[rax + rax]
0x1cdd:	nop	dword ptr [rax]


0x1ce8:	nop	dword ptr [rax + rax]


0x1cf8:	nop	dword ptr [rax + rax]


0x1da4:	nop	word ptr cs:[rax + rax]
0x1dae:	nop	


0x1eef:	nop	


0x202b:	nop	dword ptr [rax + rax]


0x20cf:	nop	


0x21b7:	nop	word ptr [rax + rax]


0x2253:	mov	byte ptr [rsp + 0xe], 1
0x2258:	mov	byte ptr [rsp + 0x7c], 0
0x225d:	xor	r12d, r12d
0x2260:	mov	qword ptr [rsp + 0x50], 0
0x2269:	mov	byte ptr [rsp + 0xf], 1
0x226e:	mov	byte ptr [rsp + 0xd], 0
0x2273:	lea	rax, [rip + 0x2e83]
0x227a:	mov	qword ptr [rsp + 0x18], 1
0x2283:	xor	r15d, r15d
0x2286:	mov	dword ptr [rsp + 8], 2
0x228e:	mov	qword ptr [rsp + 0x48], rax
0x2293:	xor	r11d, r11d
0x2296:	mov	rax, rbp
0x2299:	mov	r8d, r12d
0x229c:	mov	rbp, r11
0x229f:	mov	r11, rax
0x22a2:	nop	word ptr [rax + rax]
0x22a8:	cmp	r11, rbp
0x22ab:	setne	r12b
0x22af:	cmp	r11, -1
0x22b3:	jne	0x22c2


0x22b5:	mov	rax, qword ptr [rsp + 0x10]
0x22ba:	cmp	byte ptr [rax + rbp], 0
0x22be:	setne	r12b
0x22c2:	test	r12b, r12b
0x22c5:	je	0x2920


0x22c2:	test	r12b, r12b
0x22c5:	je	0x2920


0x2920:	cmp	dword ptr [rsp + 8], 2
0x2925:	movzx	ebx, byte ptr [rsp + 0xf]
0x292a:	mov	r12d, r8d
0x292d:	mov	rbp, r11
0x2930:	sete	dl
0x2933:	mov	eax, ebx
0x2935:	test	r15, r15
0x2938:	sete	cl
0x293b:	and	eax, edx
0x293d:	and	al, cl
0x293f:	jne	0x33a6


0x22cb:	cmp	dword ptr [rsp + 8], 2
0x22d0:	mov	rdi, qword ptr [rsp + 0x10]
0x22d5:	lea	r9, [rdi + rbp]
0x22d9:	setne	al
0x22dc:	and	al, byte ptr [rsp + 0xd]
0x22e0:	mov	r10d, eax
0x22e3:	je	0x2390


0x2945:	mov	eax, ebx
0x2947:	xor	eax, 1
0x294a:	and	dl, al
0x294c:	je	0x32bc


0x33a6:	mov	dword ptr [rsp + 8], 2
0x33ae:	jmp	0x2d49


0x2390:	movzx	ebx, byte ptr [r9]
0x2394:	cmp	bl, 0x7e
0x2397:	ja	0x26b8


0x22e9:	mov	rax, qword ptr [rsp + 0x18]
0x22ee:	test	rax, rax
0x22f1:	je	0x2720


0x32bc:	mov	rbx, qword ptr [rsp + 0x48]
0x32c1:	test	rbx, rbx
0x32c4:	je	0x32f2


0x2952:	cmp	byte ptr [rsp + 0x7c], 0
0x2957:	je	0x32ba


0x2d49:	cmp	byte ptr [rsp + 0xd], 0
0x2d4e:	je	0x2d60


0x239d:	lea	rcx, [rip + 0x2de8]
0x23a4:	movzx	edx, bl
0x23a7:	movsxd	rax, dword ptr [rcx + rdx*4]
0x23ab:	add	rax, rcx
0x23ae:	jmp	rax


0x26b8:	cmp	qword ptr [rsp + 0x58], 1
0x26be:	jne	0x2a68


0x2720:	movzx	ebx, byte ptr [r9]
0x2724:	cmp	bl, 0x7e
0x2727:	ja	0x26b0


0x22f7:	cmp	r11, -1
0x22fb:	lea	rbx, [rbp + rax]
0x2300:	jne	0x2330


0x32f2:	cmp	r13, r15
0x32f5:	jbe	0x2d99


0x32c6:	test	al, al
0x32c8:	je	0x32f2


0x32ba:	mov	eax, edx
0x32bc:	mov	rbx, qword ptr [rsp + 0x48]
0x32c1:	test	rbx, rbx
0x32c4:	je	0x32f2


0x295d:	cmp	byte ptr [rsp + 0xe], 0
0x2962:	jne	0x335d


0x2d50:	test	al, al
0x2d52:	mov	eax, 4
0x2d57:	cmove	eax, dword ptr [rsp + 8]
0x2d5c:	mov	dword ptr [rsp + 8], eax


0x26c4:	mov	qword ptr [rsp + 0x38], r11
0x26c9:	mov	byte ptr [rsp + 0x30], r8b
0x26ce:	mov	byte ptr [rsp + 0x28], r10b
0x26d3:	call	0x1540


0x2a68:	lea	rax, [rsp + 0xa0]
0x2a70:	cmp	r11, -1
0x2a74:	mov	qword ptr [rsp + 0xa0], 0
0x2a80:	mov	qword ptr [rsp + 0x28], rax
0x2a85:	jne	0x2ab4


0x2729:	lea	rcx, [rip + 0x2c58]
0x2730:	movzx	edx, bl
0x2733:	movsxd	rax, dword ptr [rcx + rdx*4]
0x2737:	add	rax, rcx
0x273a:	jmp	rax


0x26b0:	xor	r10d, r10d
0x26b3:	nop	dword ptr [rax + rax]
0x26b8:	cmp	qword ptr [rsp + 0x58], 1
0x26be:	jne	0x2a68


0x2302:	cmp	rax, 1
0x2306:	jbe	0x2330


0x2330:	cmp	rbx, r11
0x2333:	mov	byte ptr [rsp + 0x28], r10b
0x2338:	ja	0x28f0


0x32fb:	mov	byte ptr [r14 + r15], 0
0x3300:	jmp	0x2d99


0x32ca:	movzx	ecx, byte ptr [rbx]
0x32cd:	mov	rax, rbx
0x32d0:	test	cl, cl
0x32d2:	je	0x32f2


0x2968:	test	r13, r13
0x296b:	sete	al
0x296e:	cmp	qword ptr [rsp + 0x50], 0
0x2974:	setne	dl
0x2977:	and	al, dl
0x2979:	je	0x339c


0x2a87:	mov	rdi, qword ptr [rsp + 0x10]
0x2a8c:	mov	byte ptr [rsp + 0x40], r8b
0x2a91:	mov	byte ptr [rsp + 0x38], r10b
0x2a96:	mov	qword ptr [rsp + 0x30], r9
0x2a9b:	call	0x1370


0x2ab4:	lea	rax, [rsp + 0x9c]
0x2abc:	xor	ecx, ecx
0x2abe:	mov	byte ptr [rsp + 0x7e], bl
0x2ac2:	mov	byte ptr [rsp + 0x7d], r8b
0x2ac7:	mov	rbx, rcx
0x2aca:	mov	qword ptr [rsp + 0x88], r9
0x2ad2:	mov	qword ptr [rsp + 0x38], rax
0x2ad7:	mov	byte ptr [rsp + 0x7f], r10b
0x2adc:	mov	qword ptr [rsp + 0x80], r15
0x2ae4:	mov	qword ptr [rsp + 0x40], r14
0x2ae9:	mov	qword ptr [rsp + 0x70], r13
0x2aee:	mov	qword ptr [rsp + 0x30], r11
0x2af3:	mov	rax, qword ptr [rsp + 0x10]
0x2af8:	lea	r14, [rbp + rbx]
0x2afd:	mov	rdx, qword ptr [rsp + 0x30]
0x2b02:	mov	rcx, qword ptr [rsp + 0x28]
0x2b07:	mov	rdi, qword ptr [rsp + 0x38]
0x2b0c:	lea	r13, [rax + r14]
0x2b10:	sub	rdx, r14
0x2b13:	mov	rsi, r13
0x2b16:	call	0x4760


0x2308:	mov	byte ptr [rsp + 0x38], r8b
0x230d:	mov	byte ptr [rsp + 0x30], r10b
0x2312:	mov	qword ptr [rsp + 0x28], r9
0x2317:	call	0x1370


0x233e:	mov	rdx, qword ptr [rsp + 0x18]
0x2343:	mov	rsi, qword ptr [rsp + 0x48]
0x2348:	mov	rdi, r9
0x234b:	mov	qword ptr [rsp + 0x40], r11
0x2350:	mov	byte ptr [rsp + 0x38], r8b
0x2355:	mov	qword ptr [rsp + 0x30], r9
0x235a:	call	0x1400


0x28f0:	xor	r10d, r10d
0x28f3:	jmp	0x2390


0x32d4:	mov	rdx, r15
0x32d7:	sub	rax, r15
0x32da:	cmp	r13, rdx
0x32dd:	jbe	0x32e3


0x339c:	movzx	eax, byte ptr [rsp + 0x7c]
0x33a1:	jmp	0x32bc


0x297f:	mov	r13, qword ptr [rsp + 0x50]
0x2984:	lea	rbx, [rip + 0x2772]
0x298b:	mov	byte ptr [r14], 0x27
0x298f:	mov	dword ptr [rsp + 8], 2
0x2997:	mov	r15d, 1
0x299d:	mov	qword ptr [rsp + 0x18], 1
0x29a6:	mov	byte ptr [rsp + 0xf], 0
0x29ab:	mov	qword ptr [rsp + 0x48], rbx
0x29b0:	mov	byte ptr [rsp + 0x7c], al
0x29b4:	jmp	0x2293


0x32e3:	add	rdx, 1
0x32e7:	movzx	ecx, byte ptr [rax + rdx]
0x32eb:	test	cl, cl
0x32ed:	jne	0x32da


0x32df:	mov	byte ptr [r14 + rdx], cl
0x32e3:	add	rdx, 1
0x32e7:	movzx	ecx, byte ptr [rax + rdx]
0x32eb:	test	cl, cl
0x32ed:	jne	0x32da


0x2293:	xor	r11d, r11d
0x2296:	mov	rax, rbp
0x2299:	mov	r8d, r12d
0x229c:	mov	rbp, r11
0x229f:	mov	r11, rax
0x22a2:	nop	word ptr [rax + rax]
0x22a8:	cmp	r11, rbp
0x22ab:	setne	r12b
0x22af:	cmp	r11, -1
0x22b3:	jne	0x22c2


0x32ef:	mov	r15, rdx
0x32f2:	cmp	r13, r15
0x32f5:	jbe	0x2d99


0x32da:	cmp	r13, rdx
0x32dd:	jbe	0x32e3


0x235f:	test	eax, eax
0x2361:	mov	r9, qword ptr [rsp + 0x30]
0x2366:	movzx	r8d, byte ptr [rsp + 0x38]
0x236c:	mov	r11, qword ptr [rsp + 0x40]
0x2371:	jne	0x28f0


0x2377:	cmp	byte ptr [rsp + 0xf], 0
0x237c:	movzx	r10d, byte ptr [rsp + 0x28]
0x2382:	jne	0x3305


0x3305:	cmp	dword ptr [rsp + 8], 2
0x330a:	movzx	ebx, byte ptr [rsp + 0xf]
0x330f:	mov	rbp, r11
0x3312:	sete	al
0x3315:	mov	byte ptr [rsp + 0xd], bl
0x3319:	jmp	0x2d49


0x2b1b:	test	rax, rax
0x2b1e:	mov	r15, rax
0x2b21:	je	0x2b71


0x2b71:	mov	edx, r12d
0x2b74:	mov	rdi, rbx
0x2b77:	movzx	r8d, byte ptr [rsp + 0x7d]
0x2b7d:	xor	edx, 1
0x2b80:	movzx	ebx, byte ptr [rsp + 0x7e]
0x2b85:	movzx	r10d, byte ptr [rsp + 0x7f]
0x2b8b:	and	dl, byte ptr [rsp + 0xd]
0x2b8f:	mov	r15, qword ptr [rsp + 0x80]
0x2b97:	mov	r14, qword ptr [rsp + 0x40]
0x2b9c:	mov	r13, qword ptr [rsp + 0x70]
0x2ba1:	mov	r11, qword ptr [rsp + 0x30]
0x2ba6:	cmp	rdi, 1
0x2baa:	jbe	0x31ab


0x2b23:	cmp	rax, -1
0x2b27:	je	0x3145


0x31ab:	mov	eax, edx
0x31ad:	jmp	0x2707


0x2bb0:	mov	rcx, rdi
0x2bb3:	xor	esi, esi
0x2bb5:	movzx	r9d, byte ptr [rsp + 0xf]
0x2bbb:	add	rcx, rbp
0x2bbe:	mov	rdi, qword ptr [rsp + 0x10]
0x2bc3:	jmp	0x2c7e


0x3145:	mov	rdi, rbx
0x3148:	movzx	r8d, byte ptr [rsp + 0x7d]
0x314e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x3153:	movzx	r10d, byte ptr [rsp + 0x7f]
0x3159:	mov	r15, qword ptr [rsp + 0x80]
0x3161:	xor	r12d, r12d
0x3164:	mov	r14, qword ptr [rsp + 0x40]
0x3169:	mov	r13, qword ptr [rsp + 0x70]
0x316e:	mov	r11, qword ptr [rsp + 0x30]
0x3173:	movzx	edx, byte ptr [rsp + 0xd]
0x3178:	jmp	0x2ba6


0x2b2d:	cmp	rax, -2
0x2b31:	je	0x30d1


0x2707:	test	al, al
0x2709:	jne	0x30a1


0x2c7e:	test	dl, dl
0x2c80:	jne	0x2bd0


0x2ba6:	cmp	rdi, 1
0x2baa:	jbe	0x31ab


0x30d1:	mov	r11, qword ptr [rsp + 0x30]
0x30d6:	mov	rsi, r14
0x30d9:	mov	rcx, r13
0x30dc:	mov	rax, rbx
0x30df:	mov	rdi, rbx
0x30e2:	movzx	r8d, byte ptr [rsp + 0x7d]
0x30e8:	movzx	ebx, byte ptr [rsp + 0x7e]
0x30ed:	mov	r9, qword ptr [rsp + 0x88]
0x30f5:	cmp	rsi, r11
0x30f8:	movzx	r10d, byte ptr [rsp + 0x7f]
0x30fe:	mov	r15, qword ptr [rsp + 0x80]
0x3106:	mov	r14, qword ptr [rsp + 0x40]
0x310b:	mov	r13, qword ptr [rsp + 0x70]
0x3110:	jae	0x3138


0x2b37:	cmp	dword ptr [rsp + 8], 2
0x2b3c:	sete	al
0x2b3f:	and	al, byte ptr [rsp + 0xf]
0x2b43:	jne	0x2ce0


0x270f:	cmp	dword ptr [rsp + 8], 2
0x2714:	sete	dl
0x2717:	jmp	0x23e8


0x30a1:	movzx	edx, byte ptr [rsp + 0xd]
0x30a6:	xor	r12d, r12d
0x30a9:	jmp	0x2bb0


0x2c86:	mov	eax, esi
0x2c88:	xor	eax, 1
0x2c8b:	and	eax, r8d
0x2c8e:	test	r10b, r10b
0x2c91:	je	0x2ca1


0x2bd0:	cmp	dword ptr [rsp + 8], 2
0x2bd5:	sete	al
0x2bd8:	test	r9b, r9b
0x2bdb:	jne	0x3090


0x3112:	cmp	byte ptr [rcx], 0
0x3115:	jne	0x3127


0x3138:	movzx	edx, byte ptr [rsp + 0xd]
0x313d:	xor	r12d, r12d
0x3140:	jmp	0x2ba6


0x2b49:	mov	edi, dword ptr [rsp + 0x9c]
0x2b50:	call	0x1530


0x2ce0:	cmp	r15, 1
0x2ce4:	je	0x2b49


0x23e8:	cmp	byte ptr [rsp + 0xd], 1
0x23ed:	jne	0x2502


0x2ca1:	add	rbp, 1
0x2ca5:	cmp	rbp, rcx
0x2ca8:	jae	0x242c


0x2c93:	cmp	r13, r15
0x2c96:	jbe	0x2c9d


0x2be1:	mov	esi, r8d
0x2be4:	xor	esi, 1
0x2be7:	and	al, sil
0x2bea:	je	0x2c1b


0x3090:	movzx	ebx, byte ptr [rsp + 0xf]
0x3095:	mov	rbp, r11
0x3098:	mov	byte ptr [rsp + 0xd], bl
0x309c:	jmp	0x2d49


0x3117:	jmp	0x3138


0x3127:	add	rax, 1
0x312b:	lea	rdx, [rbp + rax]
0x3130:	cmp	r11, rdx
0x3133:	ja	0x3120


0x2cea:	mov	rdi, qword ptr [rsp + 0x10]
0x2cef:	lea	rcx, [rdi + r15]
0x2cf3:	lea	rdx, [rdi + r14 + 1]
0x2cf8:	lea	r8, [rcx + r14]
0x2cfc:	jmp	0x2d0d


0x23f3:	test	dl, dl
0x23f5:	jne	0x2502


0x2502:	cmp	byte ptr [rsp + 0xf], 0
0x2507:	jne	0x23fb


0x2cae:	test	al, al
0x2cb0:	je	0x30ae


0x242c:	test	al, al
0x242e:	je	0x2450


0x2c9d:	add	r15, 1
0x2ca1:	add	rbp, 1
0x2ca5:	cmp	rbp, rcx
0x2ca8:	jae	0x242c


0x2c98:	mov	byte ptr [r14 + r15], 0x5c
0x2c9d:	add	r15, 1
0x2ca1:	add	rbp, 1
0x2ca5:	cmp	rbp, rcx
0x2ca8:	jae	0x242c


0x2c1b:	cmp	r13, r15
0x2c1e:	jbe	0x2c25


0x2bec:	cmp	r13, r15
0x2bef:	jbe	0x2bf6


0x3135:	mov	rdi, rax
0x3138:	movzx	edx, byte ptr [rsp + 0xd]
0x313d:	xor	r12d, r12d
0x3140:	jmp	0x2ba6


0x3120:	cmp	byte ptr [r9 + rax], 0
0x3125:	je	0x3135


0x2d0d:	movzx	ecx, byte ptr [rdx]
0x2d10:	sub	ecx, 0x5b
0x2d13:	cmp	cl, 0x21
0x2d16:	ja	0x2d00


0x23fb:	mov	rsi, qword ptr [rsp + 0x20]
0x2400:	test	rsi, rsi
0x2403:	je	0x2419


0x250d:	jmp	0x2419


0x30ae:	xor	r10d, r10d
0x30b1:	jmp	0x2c6d


0x2cb6:	cmp	r13, r15
0x2cb9:	jbe	0x2cc0


0x2450:	cmp	r15, r13
0x2453:	jae	0x2459


0x2430:	cmp	r13, r15
0x2433:	jbe	0x243a


0x2c25:	lea	rax, [r15 + 1]
0x2c29:	cmp	r13, rax
0x2c2c:	jbe	0x2c3b


0x2c20:	mov	byte ptr [r14 + r15], 0x5c
0x2c25:	lea	rax, [r15 + 1]
0x2c29:	cmp	r13, rax
0x2c2c:	jbe	0x2c3b


0x2bf6:	lea	rsi, [r15 + 1]
0x2bfa:	cmp	r13, rsi
0x2bfd:	jbe	0x2c05


0x2bf1:	mov	byte ptr [r14 + r15], 0x27
0x2bf6:	lea	rsi, [r15 + 1]
0x2bfa:	cmp	r13, rsi
0x2bfd:	jbe	0x2c05


0x2d18:	mov	esi, 1
0x2d1d:	shl	rsi, cl
0x2d20:	mov	rcx, rsi
0x2d23:	movabs	rsi, 0x20000002b
0x2d2d:	test	rcx, rsi
0x2d30:	je	0x2d00


0x2d00:	add	rdx, 1
0x2d04:	cmp	r8, rdx
0x2d07:	je	0x2b49


0x2419:	test	r10b, r10b
0x241c:	jne	0x2563


0x2405:	mov	edx, ebx
0x2407:	shr	dl, 5
0x240a:	movzx	edx, dl
0x240d:	mov	edx, dword ptr [rsi + rdx*4]
0x2410:	bt	edx, ebx
0x2413:	jb	0x2563


0x2c6d:	cmp	r13, r15
0x2c70:	jbe	0x2c76


0x2cc0:	lea	rax, [r15 + 1]
0x2cc4:	cmp	r13, rax
0x2cc7:	jbe	0x2ccf


0x2cbb:	mov	byte ptr [r14 + r15], 0x27
0x2cc0:	lea	rax, [r15 + 1]
0x2cc4:	cmp	r13, rax
0x2cc7:	jbe	0x2ccf


0x2455:	mov	byte ptr [r14 + r15], bl
0x2459:	movzx	edi, byte ptr [rsp + 0xe]
0x245e:	add	r15, 1
0x2462:	mov	eax, 0
0x2467:	test	r12b, r12b
0x246a:	cmove	edi, eax
0x246d:	mov	byte ptr [rsp + 0xe], dil
0x2472:	jmp	0x22a8


0x2459:	movzx	edi, byte ptr [rsp + 0xe]
0x245e:	add	r15, 1
0x2462:	mov	eax, 0
0x2467:	test	r12b, r12b
0x246a:	cmove	edi, eax
0x246d:	mov	byte ptr [rsp + 0xe], dil
0x2472:	jmp	0x22a8


0x243a:	lea	rax, [r15 + 1]
0x243e:	cmp	r13, rax
0x2441:	jbe	0x2449


0x2435:	mov	byte ptr [r14 + r15], 0x27
0x243a:	lea	rax, [r15 + 1]
0x243e:	cmp	r13, rax
0x2441:	jbe	0x2449


0x2c3b:	lea	rax, [r15 + 2]
0x2c3f:	cmp	r13, rax
0x2c42:	jbe	0x2c54


0x2c2e:	mov	eax, ebx
0x2c30:	shr	al, 6
0x2c33:	add	eax, 0x30
0x2c36:	mov	byte ptr [r14 + r15 + 1], al
0x2c3b:	lea	rax, [r15 + 2]
0x2c3f:	cmp	r13, rax
0x2c42:	jbe	0x2c54


0x2c05:	lea	rsi, [r15 + 2]
0x2c09:	cmp	r13, rsi
0x2c0c:	jbe	0x2c14


0x2bff:	mov	byte ptr [r14 + r15 + 1], 0x24
0x2c05:	lea	rsi, [r15 + 2]
0x2c09:	cmp	r13, rsi
0x2c0c:	jbe	0x2c14


0x2d32:	mov	r14, qword ptr [rsp + 0x40]
0x2d37:	mov	r13, qword ptr [rsp + 0x70]
0x2d3c:	mov	rbp, qword ptr [rsp + 0x30]
0x2d41:	mov	dword ptr [rsp + 8], 2
0x2d49:	cmp	byte ptr [rsp + 0xd], 0
0x2d4e:	je	0x2d60


0x2422:	xor	eax, 1
0x2425:	add	rbp, 1
0x2429:	and	eax, r8d
0x242c:	test	al, al
0x242e:	je	0x2450


0x2563:	cmp	dword ptr [rsp + 8], 2
0x2568:	sete	dl
0x256b:	cmp	byte ptr [rsp + 0xf], 0
0x2570:	mov	eax, edx
0x2572:	jne	0x2dc8


0x2c76:	movzx	ebx, byte ptr [rdi + rbp]
0x2c7a:	add	r15, 1
0x2c7e:	test	dl, dl
0x2c80:	jne	0x2bd0


0x2c72:	mov	byte ptr [r14 + r15], bl
0x2c76:	movzx	ebx, byte ptr [rdi + rbp]
0x2c7a:	add	r15, 1
0x2c7e:	test	dl, dl
0x2c80:	jne	0x2bd0


0x2ccf:	add	r15, 2
0x2cd3:	xor	r10d, r10d
0x2cd6:	xor	r8d, r8d
0x2cd9:	jmp	0x2c6d


0x2cc9:	mov	byte ptr [r14 + r15 + 1], 0x27
0x2ccf:	add	r15, 2
0x2cd3:	xor	r10d, r10d
0x2cd6:	xor	r8d, r8d
0x2cd9:	jmp	0x2c6d


0x22a8:	cmp	r11, rbp
0x22ab:	setne	r12b
0x22af:	cmp	r11, -1
0x22b3:	jne	0x22c2


0x2449:	add	r15, 2
0x244d:	xor	r8d, r8d
0x2450:	cmp	r15, r13
0x2453:	jae	0x2459


0x2443:	mov	byte ptr [r14 + r15 + 1], 0x27
0x2449:	add	r15, 2
0x244d:	xor	r8d, r8d
0x2450:	cmp	r15, r13
0x2453:	jae	0x2459


0x2c54:	and	ebx, 7
0x2c57:	add	rbp, 1
0x2c5b:	add	r15, 3
0x2c5f:	add	ebx, 0x30
0x2c62:	cmp	rbp, rcx
0x2c65:	jae	0x2450


0x2c44:	mov	eax, ebx
0x2c46:	shr	al, 3
0x2c49:	and	eax, 7
0x2c4c:	add	eax, 0x30
0x2c4f:	mov	byte ptr [r14 + r15 + 2], al
0x2c54:	and	ebx, 7
0x2c57:	add	rbp, 1
0x2c5b:	add	r15, 3
0x2c5f:	add	ebx, 0x30
0x2c62:	cmp	rbp, rcx
0x2c65:	jae	0x2450


0x2c14:	add	r15, 3
0x2c18:	mov	r8d, eax
0x2c1b:	cmp	r13, r15
0x2c1e:	jbe	0x2c25


0x2c0e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2c14:	add	r15, 3
0x2c18:	mov	r8d, eax
0x2c1b:	cmp	r13, r15
0x2c1e:	jbe	0x2c25


0x2578:	mov	eax, r8d
0x257b:	xor	eax, 1
0x257e:	and	al, dl
0x2580:	je	0x25b1


0x2dc8:	mov	rbp, r11
0x2dcb:	jmp	0x2d49


0x2c6b:	mov	esi, edx
0x2c6d:	cmp	r13, r15
0x2c70:	jbe	0x2c76


0x25b1:	cmp	r13, r15
0x25b4:	jbe	0x25bb


0x2582:	cmp	r13, r15
0x2585:	jbe	0x258c


0x25bb:	add	r15, 1
0x25bf:	add	rbp, 1
0x25c3:	jmp	0x2450


0x25b6:	mov	byte ptr [r14 + r15], 0x5c
0x25bb:	add	r15, 1
0x25bf:	add	rbp, 1
0x25c3:	jmp	0x2450


0x258c:	lea	rdx, [r15 + 1]
0x2590:	cmp	r13, rdx
0x2593:	jbe	0x259b


0x2587:	mov	byte ptr [r14 + r15], 0x27
0x258c:	lea	rdx, [r15 + 1]
0x2590:	cmp	r13, rdx
0x2593:	jbe	0x259b


0x259b:	lea	rdx, [r15 + 2]
0x259f:	cmp	r13, rdx
0x25a2:	jbe	0x25aa


0x2595:	mov	byte ptr [r14 + r15 + 1], 0x24
0x259b:	lea	rdx, [r15 + 2]
0x259f:	cmp	r13, rdx
0x25a2:	jbe	0x25aa


0x25aa:	add	r15, 3
0x25ae:	mov	r8d, eax
0x25b1:	cmp	r13, r15
0x25b4:	jbe	0x25bb


0x25a4:	mov	byte ptr [r14 + r15 + 2], 0x27
0x25aa:	add	r15, 3
0x25ae:	mov	r8d, eax
0x25b1:	cmp	r13, r15
0x25b4:	jbe	0x25bb


0x2b55:	mov	rdi, qword ptr [rsp + 0x28]
0x2b5a:	test	eax, eax
0x2b5c:	mov	eax, 0
0x2b61:	cmove	r12d, eax
0x2b65:	add	rbx, r15
0x2b68:	call	0x1520


0x2b6d:	test	eax, eax
0x2b6f:	je	0x2af3


0x2af3:	mov	rax, qword ptr [rsp + 0x10]
0x2af8:	lea	r14, [rbp + rbx]
0x2afd:	mov	rdx, qword ptr [rsp + 0x30]
0x2b02:	mov	rcx, qword ptr [rsp + 0x28]
0x2b07:	mov	rdi, qword ptr [rsp + 0x38]
0x2b0c:	lea	r13, [rax + r14]
0x2b10:	sub	rdx, r14
0x2b13:	mov	rsi, r13
0x2b16:	call	0x4760


0x231c:	movzx	r8d, byte ptr [rsp + 0x38]
0x2322:	movzx	r10d, byte ptr [rsp + 0x30]
0x2328:	mov	r11, rax
0x232b:	mov	r9, qword ptr [rsp + 0x28]
0x2330:	cmp	rbx, r11
0x2333:	mov	byte ptr [rsp + 0x28], r10b
0x2338:	ja	0x28f0


0x2aa0:	movzx	r8d, byte ptr [rsp + 0x40]
0x2aa6:	movzx	r10d, byte ptr [rsp + 0x38]
0x2aac:	mov	r11, rax
0x2aaf:	mov	r9, qword ptr [rsp + 0x30]
0x2ab4:	lea	rax, [rsp + 0x9c]
0x2abc:	xor	ecx, ecx
0x2abe:	mov	byte ptr [rsp + 0x7e], bl
0x2ac2:	mov	byte ptr [rsp + 0x7d], r8b
0x2ac7:	mov	rbx, rcx
0x2aca:	mov	qword ptr [rsp + 0x88], r9
0x2ad2:	mov	qword ptr [rsp + 0x38], rax
0x2ad7:	mov	byte ptr [rsp + 0x7f], r10b
0x2adc:	mov	qword ptr [rsp + 0x80], r15
0x2ae4:	mov	qword ptr [rsp + 0x40], r14
0x2ae9:	mov	qword ptr [rsp + 0x70], r13
0x2aee:	mov	qword ptr [rsp + 0x30], r11
0x2af3:	mov	rax, qword ptr [rsp + 0x10]
0x2af8:	lea	r14, [rbp + rbx]
0x2afd:	mov	rdx, qword ptr [rsp + 0x30]
0x2b02:	mov	rcx, qword ptr [rsp + 0x28]
0x2b07:	mov	rdi, qword ptr [rsp + 0x38]
0x2b0c:	lea	r13, [rax + r14]
0x2b10:	sub	rdx, r14
0x2b13:	mov	rsi, r13
0x2b16:	call	0x4760


0x26d8:	mov	rcx, qword ptr [rax]
0x26db:	movzx	edx, bl
0x26de:	movzx	r10d, byte ptr [rsp + 0x28]
0x26e4:	movzx	r8d, byte ptr [rsp + 0x30]
0x26ea:	mov	r11, qword ptr [rsp + 0x38]
0x26ef:	mov	edi, 1
0x26f4:	movzx	eax, word ptr [rcx + rdx*2]
0x26f8:	and	ax, 0x4000
0x26fc:	setne	r12b
0x2700:	sete	al
0x2703:	and	al, byte ptr [rsp + 0xd]
0x2707:	test	al, al
0x2709:	jne	0x30a1


0x23b0:	xor	r10d, r10d
0x23b3:	cmp	r11, 1
0x23b7:	setne	al
0x23ba:	cmp	r11, -1
0x23be:	jne	0x23cc


0x23c0:	mov	rax, qword ptr [rsp + 0x10]
0x23c5:	cmp	byte ptr [rax + 1], 0
0x23c9:	setne	al
0x23cc:	cmp	dword ptr [rsp + 8], 2
0x23d1:	sete	dl
0x23d4:	test	al, al
0x23d6:	je	0x2628


0x23cc:	cmp	dword ptr [rsp + 8], 2
0x23d1:	sete	dl
0x23d4:	test	al, al
0x23d6:	je	0x2628


0x2628:	test	rbp, rbp
0x262b:	jne	0x23dc


0x23dc:	xor	r12d, r12d
0x23df:	xor	eax, eax
0x23e1:	nop	dword ptr [rax]
0x23e8:	cmp	byte ptr [rsp + 0xd], 1
0x23ed:	jne	0x2502


0x2631:	movzx	eax, byte ptr [rsp + 0xf]
0x2636:	and	al, dl
0x2638:	je	0x23e8


0x263e:	mov	rbp, r11
0x2641:	mov	dword ptr [rsp + 8], 2
0x2649:	jmp	0x2d49


0x2a48:	cmp	byte ptr [rsp + 0xf], 0
0x2a4d:	jne	0x3270


0x2490:	cmp	eax, 5
0x2493:	je	0x2a08


0x2a53:	xor	r12d, r12d
0x2a56:	xor	eax, eax
0x2a58:	mov	ebx, 0x3f
0x2a5d:	jmp	0x2419


0x3270:	mov	rbp, r11
0x3273:	movzx	eax, byte ptr [rsp + 0xf]
0x3278:	jmp	0x2d49


0x2a08:	test	byte ptr [rsp + 0x78], 4
0x2a0d:	je	0x2a30


0x2499:	cmp	eax, 2
0x249c:	mov	ebx, 0x3f
0x24a1:	sete	dl
0x24a4:	xor	r12d, r12d
0x24a7:	xor	eax, eax
0x24a9:	jmp	0x23e8


0x2a30:	xor	edx, edx
0x2a32:	xor	r12d, r12d
0x2a35:	xor	eax, eax
0x2a37:	mov	ebx, 0x3f
0x2a3c:	jmp	0x23e8


0x2a0f:	lea	rcx, [rbp + 2]
0x2a13:	cmp	rcx, r11
0x2a16:	jae	0x2a30


0x2a18:	mov	rax, qword ptr [rsp + 0x10]
0x2a1d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x2a22:	je	0x31b2


0x31b2:	movzx	ebx, byte ptr [rax + rcx]
0x31b6:	cmp	bl, 0x3e
0x31b9:	ja	0x2a30


0x31bf:	movabs	rax, 0x7000a38200000000
0x31c9:	bt	rax, rbx
0x31cd:	jae	0x2a30


0x31d3:	cmp	byte ptr [rsp + 0xf], 0
0x31d8:	jne	0x33c2


0x31de:	cmp	r13, r15
0x31e1:	jbe	0x31e8


0x33c2:	mov	rbp, r11
0x33c5:	jmp	0x2d60


0x31e8:	lea	rax, [r15 + 1]
0x31ec:	cmp	r13, rax
0x31ef:	jbe	0x31f7


0x31e3:	mov	byte ptr [r14 + r15], 0x3f
0x31e8:	lea	rax, [r15 + 1]
0x31ec:	cmp	r13, rax
0x31ef:	jbe	0x31f7


0x31f7:	lea	rax, [r15 + 2]
0x31fb:	cmp	r13, rax
0x31fe:	jbe	0x3206


0x31f1:	mov	byte ptr [r14 + r15 + 1], 0x22
0x31f7:	lea	rax, [r15 + 2]
0x31fb:	cmp	r13, rax
0x31fe:	jbe	0x3206


0x3206:	lea	rax, [r15 + 3]
0x320a:	cmp	r13, rax
0x320d:	jbe	0x3215


0x3200:	mov	byte ptr [r14 + r15 + 2], 0x22
0x3206:	lea	rax, [r15 + 3]
0x320a:	cmp	r13, rax
0x320d:	jbe	0x3215


0x3215:	add	r15, 4
0x3219:	xor	edx, edx
0x321b:	xor	r12d, r12d
0x321e:	xor	eax, eax
0x3220:	mov	rbp, rcx
0x3223:	jmp	0x23e8


0x320f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x3215:	add	r15, 4
0x3219:	xor	edx, edx
0x321b:	xor	r12d, r12d
0x321e:	xor	eax, eax
0x3220:	mov	rbp, rcx
0x3223:	jmp	0x23e8


0x29c0:	cmp	byte ptr [rsp + 0xf], 0
0x29c5:	jne	0x3270


0x24be:	mov	byte ptr [rsp + 0x7c], r12b
0x24c3:	xor	edx, edx
0x24c5:	xor	eax, eax
0x24c7:	mov	ebx, 0x27
0x24cc:	jmp	0x23e8


0x29cb:	test	r13, r13
0x29ce:	je	0x2dd0


0x2dd0:	cmp	r13, r15
0x2dd3:	jbe	0x2dda


0x29d4:	xor	edx, edx
0x29d6:	cmp	qword ptr [rsp + 0x50], 0
0x29dc:	jne	0x2dd0


0x2dda:	lea	rax, [r15 + 1]
0x2dde:	cmp	r13, rax
0x2de1:	jbe	0x2de9


0x2dd5:	mov	byte ptr [r14 + r15], 0x27
0x2dda:	lea	rax, [r15 + 1]
0x2dde:	cmp	r13, rax
0x2de1:	jbe	0x2de9


0x29e2:	mov	qword ptr [rsp + 0x50], r13
0x29e7:	add	r15, 3
0x29eb:	xor	eax, eax
0x29ed:	mov	byte ptr [rsp + 0x7c], r12b
0x29f2:	xor	r8d, r8d
0x29f5:	mov	r13, rdx
0x29f8:	mov	ebx, 0x27
0x29fd:	jmp	0x2419


0x2de9:	lea	rax, [r15 + 2]
0x2ded:	cmp	r13, rax
0x2df0:	jbe	0x33e2


0x2de3:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x2de9:	lea	rax, [r15 + 2]
0x2ded:	cmp	r13, rax
0x2df0:	jbe	0x33e2


0x33e2:	mov	rdx, r13
0x33e5:	mov	r13, qword ptr [rsp + 0x50]
0x33ea:	jmp	0x29e2


0x2df6:	mov	rdx, r13
0x2df9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2dff:	mov	r13, qword ptr [rsp + 0x50]
0x2e04:	jmp	0x29e2


0x24f4:	cmp	byte ptr [rsp + 0xd], 0
0x24f9:	jne	0x2560


0x24fb:	mov	ebx, edx
0x24fd:	xor	r12d, r12d
0x2500:	xor	eax, eax
0x2502:	cmp	byte ptr [rsp + 0xf], 0
0x2507:	jne	0x23fb


0x2560:	xor	r12d, r12d
0x2563:	cmp	dword ptr [rsp + 8], 2
0x2568:	sete	dl
0x256b:	cmp	byte ptr [rsp + 0xf], 0
0x2570:	mov	eax, edx
0x2572:	jne	0x2dc8


0x2900:	cmp	byte ptr [rsp + 0xf], 0
0x2905:	jne	0x3270


0x2533:	cmp	byte ptr [rsp + 0xd], 0
0x2538:	je	0x2750


0x290b:	add	rbp, 1
0x290f:	mov	eax, r8d
0x2912:	xor	r12d, r12d
0x2915:	mov	ebx, 0x5c
0x291a:	jmp	0x242c


0x2750:	mov	edx, 0x5c
0x2755:	mov	ebx, 0x5c
0x275a:	jmp	0x24f4


0x253e:	cmp	byte ptr [rsp + 0xf], 0
0x2543:	je	0x2750


0x2549:	cmp	qword ptr [rsp + 0x18], 0
0x254f:	jne	0x290b


0x2555:	mov	ebx, 0x5c
0x255a:	nop	word ptr [rax + rax]
0x2560:	xor	r12d, r12d
0x2563:	cmp	dword ptr [rsp + 8], 2
0x2568:	sete	dl
0x256b:	cmp	byte ptr [rsp + 0xf], 0
0x2570:	mov	eax, edx
0x2572:	jne	0x2dc8


0x25db:	xor	edx, edx
0x25dd:	test	byte ptr [rsp + 0x78], 1
0x25e2:	je	0x24fb


0x27a3:	cmp	dword ptr [rsp + 8], 2
0x27a8:	sete	dl
0x27ab:	cmp	byte ptr [rsp + 0xf], 0
0x27b0:	jne	0x334a


0x25e8:	add	rbp, 1
0x25ec:	jmp	0x22a8


0x27b6:	mov	eax, r8d
0x27b9:	mov	rcx, r15
0x27bc:	xor	eax, 1
0x27bf:	and	al, dl
0x27c1:	je	0x27f0


0x334a:	movzx	ebx, byte ptr [rsp + 0xf]
0x334f:	mov	rbp, r11
0x3352:	mov	eax, edx
0x3354:	mov	byte ptr [rsp + 0xd], bl
0x3358:	jmp	0x2d49


0x27f0:	cmp	r13, rcx
0x27f3:	jbe	0x27fa


0x27c3:	cmp	r13, r15
0x27c6:	jbe	0x27cd


0x27fa:	cmp	dword ptr [rsp + 8], 2
0x27ff:	lea	r15, [rcx + 1]
0x2803:	je	0x2e09


0x27f5:	mov	byte ptr [r14 + rcx], 0x5c
0x27fa:	cmp	dword ptr [rsp + 8], 2
0x27ff:	lea	r15, [rcx + 1]
0x2803:	je	0x2e09


0x27cd:	lea	rcx, [r15 + 1]
0x27d1:	cmp	r13, rcx
0x27d4:	jbe	0x27dc


0x27c8:	mov	byte ptr [r14 + r15], 0x27
0x27cd:	lea	rcx, [r15 + 1]
0x27d1:	cmp	r13, rcx
0x27d4:	jbe	0x27dc


0x2e09:	mov	eax, r12d
0x2e0c:	mov	ebx, 0x30
0x2e11:	xor	r12d, r12d
0x2e14:	jmp	0x2419


0x2809:	lea	rax, [rbp + 1]
0x280d:	cmp	rax, r11
0x2810:	jae	0x282b


0x27dc:	lea	rcx, [r15 + 2]
0x27e0:	cmp	r13, rcx
0x27e3:	ja	0x2e19


0x27d6:	mov	byte ptr [r14 + r15 + 1], 0x24
0x27dc:	lea	rcx, [r15 + 2]
0x27e0:	cmp	r13, rcx
0x27e3:	ja	0x2e19


0x2812:	mov	rax, qword ptr [rsp + 0x10]
0x2817:	movzx	eax, byte ptr [rax + rbp + 1]
0x281c:	mov	byte ptr [rsp + 0x28], al
0x2820:	sub	eax, 0x30
0x2823:	cmp	al, 9
0x2825:	jbe	0x3059


0x282b:	mov	eax, r12d
0x282e:	mov	ebx, 0x30
0x2833:	xor	r12d, r12d
0x2836:	jmp	0x23e8


0x27e9:	lea	rcx, [r15 + 3]
0x27ed:	mov	r8d, eax
0x27f0:	cmp	r13, rcx
0x27f3:	jbe	0x27fa


0x2e19:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2e1f:	jmp	0x27e9


0x3059:	cmp	r13, r15
0x305c:	jbe	0x3063


0x3063:	lea	rax, [rcx + 2]
0x3067:	cmp	r13, rax
0x306a:	jbe	0x3072


0x305e:	mov	byte ptr [r14 + r15], 0x30
0x3063:	lea	rax, [rcx + 2]
0x3067:	cmp	r13, rax
0x306a:	jbe	0x3072


0x3072:	mov	eax, r12d
0x3075:	lea	r15, [rcx + 3]
0x3079:	xor	r12d, r12d
0x307c:	mov	ebx, 0x30
0x3081:	jmp	0x23e8


0x306c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x3072:	mov	eax, r12d
0x3075:	lea	r15, [rcx + 3]
0x3079:	xor	r12d, r12d
0x307c:	mov	ebx, 0x30
0x3081:	jmp	0x23e8


0x24e2:	cmp	dword ptr [rsp + 8], 2
0x24e7:	sete	al
0x24ea:	and	al, byte ptr [rsp + 0xf]
0x24ee:	jne	0x263e


0x28a0:	mov	edx, 0xd
0x28a5:	xor	r10d, r10d
0x28a8:	mov	ebx, 0x72
0x28ad:	jmp	0x24e2


0x2e24:	test	ebx, ebx
0x2e26:	jne	0x2253


0x2e2c:	mov	byte ptr [rsp + 0xd], 1
0x2e31:	test	r13, r13
0x2e34:	jne	0x33ca


0x2e3a:	lea	rax, [rip + 0x22bc]
0x2e41:	mov	qword ptr [rsp + 0x50], 0
0x2e4a:	mov	byte ptr [rsp + 0xe], 1
0x2e4f:	mov	byte ptr [rsp + 0x7c], 0
0x2e54:	xor	r12d, r12d
0x2e57:	mov	byte ptr [rsp + 0xf], 0
0x2e5c:	mov	qword ptr [rsp + 0x18], 1
0x2e65:	mov	qword ptr [rsp + 0x48], rax
0x2e6a:	mov	r15d, 1
0x2e70:	mov	dword ptr [rsp + 8], 2
0x2e78:	jmp	0x2293


0x33ca:	mov	byte ptr [rsp + 0xe], 1
0x33cf:	xor	eax, eax
0x33d1:	xor	r12d, r12d
0x33d4:	mov	qword ptr [rsp + 0x50], 0
0x33dd:	jmp	0x2984


0x2984:	lea	rbx, [rip + 0x2772]
0x298b:	mov	byte ptr [r14], 0x27
0x298f:	mov	dword ptr [rsp + 8], 2
0x2997:	mov	r15d, 1
0x299d:	mov	qword ptr [rsp + 0x18], 1
0x29a6:	mov	byte ptr [rsp + 0xf], 0
0x29ab:	mov	qword ptr [rsp + 0x48], rbx
0x29b0:	mov	byte ptr [rsp + 0x7c], al
0x29b4:	jmp	0x2293


0x2e88:	test	r13, r13
0x2e8b:	je	0x30b6


0x327d:	lea	rax, [rip + 0x1e77]
0x3284:	mov	byte ptr [rsp + 0xe], 1
0x3289:	mov	byte ptr [rsp + 0x7c], 0
0x328e:	xor	r12d, r12d
0x3291:	mov	qword ptr [rsp + 0x50], 0
0x329a:	mov	byte ptr [rsp + 0xf], 1
0x329f:	mov	byte ptr [rsp + 0xd], 1
0x32a4:	mov	qword ptr [rsp + 0x18], 1
0x32ad:	xor	r15d, r15d
0x32b0:	mov	qword ptr [rsp + 0x48], rax
0x32b5:	jmp	0x2293


0x30b6:	mov	qword ptr [rsp + 0x50], 0
0x30bf:	mov	byte ptr [rsp + 0xe], 1
0x30c4:	xor	r12d, r12d
0x30c7:	mov	byte ptr [rsp + 0x7c], 0
0x30cc:	jmp	0x2eab


0x2e91:	mov	byte ptr [r14], 0x22
0x2e95:	mov	byte ptr [rsp + 0xe], 1
0x2e9a:	xor	r12d, r12d
0x2e9d:	mov	byte ptr [rsp + 0x7c], 0
0x2ea2:	mov	qword ptr [rsp + 0x50], 0
0x2eab:	lea	rax, [rip + 0x2249]
0x2eb2:	mov	byte ptr [rsp + 0xf], 0
0x2eb7:	mov	byte ptr [rsp + 0xd], 1
0x2ebc:	mov	qword ptr [rsp + 0x18], 1
0x2ec5:	mov	r15d, 1
0x2ecb:	mov	qword ptr [rsp + 0x48], rax
0x2ed0:	jmp	0x2293


0x2eab:	lea	rax, [rip + 0x2249]
0x2eb2:	mov	byte ptr [rsp + 0xf], 0
0x2eb7:	mov	byte ptr [rsp + 0xd], 1
0x2ebc:	mov	qword ptr [rsp + 0x18], 1
0x2ec5:	mov	r15d, 1
0x2ecb:	mov	qword ptr [rsp + 0x48], rax
0x2ed0:	jmp	0x2293


0x2ed5:	lea	rax, [rip + 0x221f]
0x2edc:	mov	byte ptr [rsp + 0xe], 1
0x2ee1:	mov	byte ptr [rsp + 0x7c], 0
0x2ee6:	xor	r12d, r12d
0x2ee9:	mov	qword ptr [rsp + 0x50], 0
0x2ef2:	mov	byte ptr [rsp + 0xf], 1
0x2ef7:	mov	byte ptr [rsp + 0xd], 1
0x2efc:	mov	qword ptr [rsp + 0x18], 1
0x2f05:	xor	r15d, r15d
0x2f08:	mov	qword ptr [rsp + 0x48], rax
0x2f0d:	mov	dword ptr [rsp + 8], 5
0x2f15:	jmp	0x2293


0x2f1a:	mov	byte ptr [rsp + 0xe], 1
0x2f1f:	mov	byte ptr [rsp + 0x7c], 0
0x2f24:	xor	r12d, r12d
0x2f27:	mov	qword ptr [rsp + 0x50], 0
0x2f30:	mov	byte ptr [rsp + 0xf], 0
0x2f35:	xor	r15d, r15d
0x2f38:	mov	byte ptr [rsp + 0xd], 1
0x2f3d:	mov	qword ptr [rsp + 0x18], 0
0x2f46:	mov	qword ptr [rsp + 0x48], 0
0x2f4f:	jmp	0x2293


0x2f54:	cmp	dword ptr [rsp + 8], 0xa
0x2f59:	je	0x2fb1


0x2fb1:	xor	r15d, r15d
0x2fb4:	test	ebx, ebx
0x2fb6:	je	0x317d


0x2f5b:	lea	rsi, [rip + 0x219d]
0x2f62:	xor	edi, edi
0x2f64:	mov	edx, 5
0x2f69:	call	0x1350


0x317d:	mov	rdx, qword ptr [rsp + 0x68]
0x3182:	movzx	eax, byte ptr [rdx]
0x3185:	test	al, al
0x3187:	je	0x2fbc


0x2fbc:	test	ebx, ebx
0x2fbe:	mov	rbx, qword ptr [rsp + 0x60]
0x2fc3:	setne	byte ptr [rsp + 0xf]
0x2fc8:	xor	r12d, r12d
0x2fcb:	mov	rdi, rbx
0x2fce:	call	0x1370


0x3199:	add	r15, 1
0x319d:	movzx	eax, byte ptr [rdx + r15]
0x31a2:	test	al, al
0x31a4:	jne	0x3190


0x3195:	mov	byte ptr [r14 + r15], al
0x3199:	add	r15, 1
0x319d:	movzx	eax, byte ptr [rdx + r15]
0x31a2:	test	al, al
0x31a4:	jne	0x3190


0x31a6:	jmp	0x2fbc


0x3190:	cmp	r13, r15
0x3193:	jbe	0x3199


0x2fd3:	mov	qword ptr [rsp + 0x48], rbx
0x2fd8:	mov	qword ptr [rsp + 0x18], rax
0x2fdd:	mov	byte ptr [rsp + 0xe], 1
0x2fe2:	mov	byte ptr [rsp + 0x7c], 0
0x2fe7:	mov	qword ptr [rsp + 0x50], 0
0x2ff0:	mov	byte ptr [rsp + 0xd], 1
0x2ff5:	jmp	0x2293


0x2f6e:	mov	rcx, rax
0x2f71:	mov	qword ptr [rsp + 0x68], rax
0x2f76:	lea	rax, [rip + 0x2182]
0x2f7d:	cmp	rcx, rax
0x2f80:	je	0x331e


0x331e:	mov	esi, dword ptr [rsp + 8]
0x3322:	mov	rdi, rcx
0x3325:	call	0x20d0


0x2f86:	lea	rsi, [rip + 0x2170]
0x2f8d:	xor	edi, edi
0x2f8f:	mov	edx, 5
0x2f94:	call	0x1350


0x2f99:	mov	rcx, rax
0x2f9c:	mov	qword ptr [rsp + 0x60], rax
0x2fa1:	lea	rax, [rip + 0x2155]
0x2fa8:	cmp	rcx, rax
0x2fab:	je	0x3334


0x3334:	mov	esi, dword ptr [rsp + 8]
0x3338:	mov	rdi, rcx
0x333b:	call	0x20d0


0x3340:	mov	qword ptr [rsp + 0x60], rax
0x3345:	jmp	0x2fb1


0x332a:	mov	qword ptr [rsp + 0x68], rax
0x332f:	jmp	0x2f86


0x2ffa:	mov	byte ptr [rsp + 0xe], 1
0x2fff:	mov	byte ptr [rsp + 0x7c], 0
0x3004:	xor	r12d, r12d
0x3007:	mov	qword ptr [rsp + 0x50], 0
0x3010:	mov	byte ptr [rsp + 0xf], 0
0x3015:	xor	r15d, r15d
0x3018:	mov	byte ptr [rsp + 0xd], 0
0x301d:	mov	qword ptr [rsp + 0x18], 0
0x3026:	mov	qword ptr [rsp + 0x48], 0
0x302f:	jmp	0x2293


0x3034:	mov	byte ptr [rsp + 0xe], 1
0x3039:	mov	byte ptr [rsp + 0x7c], 0
0x303e:	xor	r12d, r12d
0x3041:	mov	qword ptr [rsp + 0x50], 0
0x304a:	mov	byte ptr [rsp + 0xf], 1
0x304f:	mov	byte ptr [rsp + 0xd], 1
0x3054:	jmp	0x2273


0x2273:	lea	rax, [rip + 0x2e83]
0x227a:	mov	qword ptr [rsp + 0x18], 1
0x2283:	xor	r15d, r15d
0x2286:	mov	dword ptr [rsp + 8], 2
0x228e:	mov	qword ptr [rsp + 0x48], rax
0x2293:	xor	r11d, r11d
0x2296:	mov	rax, rbp
0x2299:	mov	r8d, r12d
0x229c:	mov	rbp, r11
0x229f:	mov	r11, rax
0x22a2:	nop	word ptr [rax + rax]
0x22a8:	cmp	r11, rbp
0x22ab:	setne	r12b
0x22af:	cmp	r11, -1
0x22b3:	jne	0x22c2


0x3228:	test	ebx, ebx
0x322a:	je	0x33b8


0x33b8:	mov	byte ptr [rsp + 0xd], 0
0x33bd:	jmp	0x2e31


0x3230:	lea	rax, [rip + 0x1ec6]
0x3237:	mov	byte ptr [rsp + 0xe], 1
0x323c:	mov	byte ptr [rsp + 0x7c], 0
0x3241:	xor	r12d, r12d
0x3244:	mov	qword ptr [rsp + 0x50], 0
0x324d:	mov	byte ptr [rsp + 0xf], 1
0x3252:	mov	byte ptr [rsp + 0xd], 0
0x3257:	mov	qword ptr [rsp + 0x18], 1
0x3260:	xor	r15d, r15d
0x3263:	mov	qword ptr [rsp + 0x48], rax
0x3268:	jmp	0x2293


0x2e31:	test	r13, r13
0x2e34:	jne	0x33ca


0x33f4:	nop	
0x33f6:	nop	word ptr cs:[rax + rax]


0x35ab:	nop	dword ptr [rax + rax]


0x35e6:	nop	word ptr cs:[rax + rax]


0x3601:	nop	dword ptr [rax + rax]
0x3606:	nop	word ptr cs:[rax + rax]


0x3621:	nop	dword ptr [rax + rax]
0x3626:	nop	word ptr cs:[rax + rax]


0x3665:	nop	
0x3666:	nop	word ptr cs:[rax + rax]


0x3685:	nop	
0x3686:	nop	word ptr cs:[rax + rax]


0x3734:	nop	
0x3736:	nop	word ptr cs:[rax + rax]


0x3823:	nop	dword ptr [rax]
0x3826:	nop	word ptr cs:[rax + rax]


0x383a:	nop	word ptr [rax + rax]


0x38d3:	nop	dword ptr [rax]
0x38d6:	nop	word ptr cs:[rax + rax]


0x38f3:	nop	dword ptr [rax]
0x38f6:	nop	word ptr cs:[rax + rax]


0x390c:	nop	dword ptr [rax]


0x3928:	nop	dword ptr [rax + rax]


0x3944:	nop	
0x3946:	nop	word ptr cs:[rax + rax]


0x39de:	nop	


0x3a6a:	nop	word ptr [rax + rax]


0x3a7c:	nop	dword ptr [rax]


0x3a8f:	nop	


0x3b28:	nop	dword ptr [rax + rax]


0x3b51:	nop	dword ptr [rax + rax]
0x3b56:	nop	word ptr cs:[rax + rax]


0x3b6a:	nop	word ptr [rax + rax]


0x3bfe:	nop	


0x3c91:	nop	dword ptr [rax + rax]
0x3c96:	nop	word ptr cs:[rax + rax]


0x3cac:	nop	dword ptr [rax]


0x3cc7:	nop	word ptr [rax + rax]


0x3ce3:	nop	dword ptr [rax]
0x3ce6:	nop	word ptr cs:[rax + rax]


0x3cfc:	nop	dword ptr [rax]


0x3d14:	nop	
0x3d16:	nop	word ptr cs:[rax + rax]


0x3d33:	nop	dword ptr [rax]
0x3d36:	nop	word ptr cs:[rax + rax]


0x3d58:	nop	dword ptr [rax + rax]


0x4177:	nop	word ptr [rax + rax]


0x4218:	nop	dword ptr [rax + rax]


0x42f5:	nop	
0x42f6:	nop	word ptr cs:[rax + rax]


0x439a:	nop	word ptr [rax + rax]


0x43c4:	nop	
0x43c6:	nop	word ptr cs:[rax + rax]


0x43d2:	nop	dword ptr [rax]
0x43d6:	nop	word ptr cs:[rax + rax]


0x4416:	nop	word ptr cs:[rax + rax]


0x4444:	nop	
0x4446:	nop	word ptr cs:[rax + rax]


0x44d2:	nop	dword ptr [rax]
0x44d6:	nop	word ptr cs:[rax + rax]


0x452a:	nop	word ptr [rax + rax]


0x4547:	nop	word ptr [rax + rax]


0x457e:	nop	


0x45a8:	nop	dword ptr [rax + rax]


0x45c3:	nop	word ptr cs:[rax + rax]
0x45cd:	nop	dword ptr [rax]


0x4605:	nop	word ptr cs:[rax + rax]
0x460f:	nop	


0x468c:	nop	dword ptr [rax]


0x4751:	nop	word ptr cs:[rax + rax]
0x475b:	nop	dword ptr [rax + rax]


0x47e3:	nop	word ptr cs:[rax + rax]
0x47ed:	nop	dword ptr [rax]


0x48b7:	nop	word ptr [rax + rax]


0x492c:	nop	dword ptr [rax]


0x49ad:	nop	dword ptr [rax]


0x4a6c:	nop	dword ptr [rax]


0x4b0c:	nop	dword ptr [rax]


0x4b8b:	nop	dword ptr [rax + rax]


0x4c27:	nop	word ptr [rax + rax]


0x4c95:	nop	
0x4c96:	nop	word ptr cs:[rax + rax]


0x4ca2:	nop	word ptr cs:[rax + rax]
0x4cac:	nop	dword ptr [rax]


0x2480:	xor	r10d, r10d
0x2483:	mov	eax, dword ptr [rsp + 8]
0x2487:	cmp	eax, 2
0x248a:	je	0x2a48


0x24b0:	xor	r10d, r10d
0x24b3:	cmp	dword ptr [rsp + 8], 2
0x24b8:	je	0x29c0


0x24d8:	mov	edx, 9
0x24dd:	mov	ebx, 0x74
0x24e2:	cmp	dword ptr [rsp + 8], 2
0x24e7:	sete	al
0x24ea:	and	al, byte ptr [rsp + 0xf]
0x24ee:	jne	0x263e


0x2518:	mov	edx, 8
0x251d:	mov	ebx, 0x62
0x2522:	jmp	0x24f4


0x2528:	cmp	dword ptr [rsp + 8], 2
0x252d:	je	0x2900


0x25d0:	cmp	byte ptr [rsp + 0xd], 0
0x25d5:	jne	0x27a3


0x25f8:	cmp	dword ptr [rsp + 8], 2
0x25fd:	sete	dl
0x2600:	xor	eax, eax
0x2602:	jmp	0x23e8


0x2610:	mov	edx, 7
0x2615:	mov	ebx, 0x61
0x261a:	jmp	0x24f4


0x2620:	cmp	dword ptr [rsp + 8], 2
0x2625:	sete	dl
0x2628:	test	rbp, rbp
0x262b:	jne	0x23dc


0x2650:	cmp	dword ptr [rsp + 8], 2
0x2655:	sete	dl
0x2658:	xor	r12d, r12d
0x265b:	jmp	0x2631


0x2660:	cmp	dword ptr [rsp + 8], 2
0x2665:	mov	ebx, 0x20
0x266a:	sete	dl
0x266d:	jmp	0x2631


0x2670:	mov	edx, 0xd
0x2675:	mov	ebx, 0x72
0x267a:	jmp	0x24e2


0x2680:	mov	edx, 0xc
0x2685:	mov	ebx, 0x66
0x268a:	jmp	0x24f4


0x2690:	mov	edx, 0xb
0x2695:	mov	ebx, 0x76
0x269a:	jmp	0x24f4


0x26a0:	mov	edx, 0xa
0x26a5:	mov	ebx, 0x6e
0x26aa:	jmp	0x24e2


0x2740:	xor	r10d, r10d
0x2743:	cmp	byte ptr [rsp + 0xd], 0
0x2748:	jne	0x253e


0x2760:	mov	edx, 0xc
0x2765:	xor	r10d, r10d
0x2768:	mov	ebx, 0x66
0x276d:	jmp	0x24f4


0x2778:	mov	edx, 0xa
0x277d:	xor	r10d, r10d
0x2780:	mov	ebx, 0x6e
0x2785:	jmp	0x24e2


0x2790:	mov	ebx, 0x61
0x2795:	jmp	0x2560


0x27a0:	xor	r10d, r10d
0x27a3:	cmp	dword ptr [rsp + 8], 2
0x27a8:	sete	dl
0x27ab:	cmp	byte ptr [rsp + 0xf], 0
0x27b0:	jne	0x334a


0x2840:	cmp	dword ptr [rsp + 8], 2
0x2845:	mov	r12d, r10d
0x2848:	sete	dl
0x284b:	xor	r10d, r10d
0x284e:	xor	eax, eax
0x2850:	jmp	0x23e8


0x2858:	cmp	dword ptr [rsp + 8], 2
0x285d:	sete	dl
0x2860:	xor	r10d, r10d
0x2863:	jmp	0x2628


0x2870:	cmp	dword ptr [rsp + 8], 2
0x2875:	sete	dl
0x2878:	xor	r10d, r10d
0x287b:	xor	r12d, r12d
0x287e:	jmp	0x2631


0x2888:	cmp	dword ptr [rsp + 8], 2
0x288d:	mov	r12d, r10d
0x2890:	mov	ebx, 0x20
0x2895:	sete	dl
0x2898:	xor	r10d, r10d
0x289b:	jmp	0x2631


0x28b8:	mov	ebx, 0x76
0x28bd:	jmp	0x2560


0x28c8:	mov	edx, 9
0x28cd:	xor	r10d, r10d
0x28d0:	mov	ebx, 0x74
0x28d5:	jmp	0x24e2


0x28e0:	mov	ebx, 0x62
0x28e5:	jmp	0x2560


0x2e80:	test	ebx, ebx
0x2e82:	jne	0x327d


0x1658:	nop	dword ptr [rax + rax]


0x170c:	nop	dword ptr [rax]


0x1846:	nop	word ptr cs:[rax + rax]


0x1897:	nop	word ptr [rax + rax]


0x18e1:	nop	dword ptr [rax]


0x1c84:	nop	dword ptr [rax]


0x1cc3:	nop	dword ptr [rax + rax]


0x1e5b:	nop	dword ptr [rax + rax]


0x1ed7:	nop	word ptr [rax + rax]


0x1fe7:	nop	word ptr [rax + rax]


0x201e:	nop	


0x210c:	nop	dword ptr [rax]


0x215d:	nop	dword ptr [rax]


0x2388:	nop	dword ptr [rax + rax]


0x2477:	nop	word ptr [rax + rax]


0x24ae:	nop	


0x24d1:	nop	dword ptr [rax]


0x2512:	nop	word ptr [rax + rax]


0x2524:	nop	dword ptr [rax]


0x25c8:	nop	dword ptr [rax + rax]


0x25f1:	nop	dword ptr [rax]


0x2607:	nop	word ptr [rax + rax]


0x261f:	nop	


0x264e:	nop	


0x265d:	nop	dword ptr [rax]


0x266f:	nop	


0x267f:	nop	


0x268f:	nop	


0x269f:	nop	


0x26af:	nop	


0x271c:	nop	dword ptr [rax]


0x273c:	nop	dword ptr [rax]


0x274e:	nop	


0x275f:	nop	


0x2772:	nop	word ptr [rax + rax]


0x278a:	nop	word ptr [rax + rax]


0x279a:	nop	word ptr [rax + rax]


0x283b:	nop	dword ptr [rax + rax]


0x2855:	nop	dword ptr [rax]


0x2868:	nop	dword ptr [rax + rax]


0x2883:	nop	dword ptr [rax + rax]


0x28b2:	nop	word ptr [rax + rax]


0x28c2:	nop	word ptr [rax + rax]


0x28da:	nop	word ptr [rax + rax]


0x28ea:	nop	word ptr [rax + rax]


0x28f8:	nop	dword ptr [rax + rax]


0x291f:	nop	


0x29b9:	nop	dword ptr [rax]


0x2a02:	nop	word ptr [rax + rax]


0x2a28:	nop	dword ptr [rax + rax]


0x2a41:	nop	dword ptr [rax]


0x2a62:	nop	word ptr [rax + rax]


0x2bc8:	nop	dword ptr [rax + rax]


0x2cdb:	nop	dword ptr [rax + rax]


0x2cfe:	nop	


0x2dc5:	nop	dword ptr [rax]


0x2e7d:	nop	dword ptr [rax]


0x3086:	nop	word ptr cs:[rax + rax]


0x3119:	nop	dword ptr [rax]


0x318d:	nop	dword ptr [rax]


0x326d:	nop	dword ptr [rax]


0x357b:	nop	dword ptr [rax + rax]


0x3e06:	nop	word ptr cs:[rax + rax]


0x3e95:	nop	dword ptr [rax]


0x3eb6:	nop	word ptr cs:[rax + rax]


0x3f15:	nop	dword ptr [rax]


0x3f51:	nop	dword ptr [rax]


0x3f98:	nop	dword ptr [rax + rax]


0x3fe7:	nop	word ptr [rax + rax]


0x4044:	nop	dword ptr [rax]


0x4072:	nop	word ptr [rax + rax]


0x4126:	nop	word ptr cs:[rax + rax]


0x4189:	nop	dword ptr [rax]


0x4402:	nop	word ptr [rax + rax]


0x4489:	nop	dword ptr [rax]


0x44b4:	nop	dword ptr [rax]


0x450d:	nop	dword ptr [rax]


0x4641:	nop	dword ptr [rax]


0x467b:	nop	dword ptr [rax + rax]


0x4721:	nop	dword ptr [rax]


0x4742:	nop	word ptr [rax + rax]


0x4831:	nop	dword ptr [rax]


0x4873:	nop	dword ptr [rax + rax]


0x48f5:	nop	dword ptr [rax]


0x490f:	nop	


0x4964:	nop	dword ptr [rax]


0x4981:	nop	dword ptr [rax]


0x4992:	nop	word ptr [rax + rax]


0x4a33:	nop	dword ptr [rax + rax]


0x4a48:	nop	dword ptr [rax + rax]


0x4a5d:	nop	dword ptr [rax]


0x4aaa:	nop	word ptr [rax + rax]


0x4af6:	nop	word ptr cs:[rax + rax]


0x4b55:	nop	dword ptr [rax]


0x4bb3:	nop	dword ptr [rax + rax]


0x4bdf:	nop	


