0x14130:	sub	rsp, 8
0x14134:	add	rsp, 8
0x14138:	ret	


0x14120:	mov	rdx, qword ptr [rip + 0x204ee1]
0x14127:	xor	esi, esi
0x14129:	jmp	0x1bf0


0x14110:	ret	


0x140a0:	push	r15
0x140a2:	push	r14
0x140a4:	mov	r15, rdx
0x140a7:	push	r13
0x140a9:	push	r12
0x140ab:	lea	r12, [rip + 0x2049be]
0x140b2:	push	rbp
0x140b3:	lea	rbp, [rip + 0x2049be]
0x140ba:	push	rbx
0x140bb:	mov	r13d, edi
0x140be:	mov	r14, rsi
0x140c1:	sub	rbp, r12
0x140c4:	sub	rsp, 8
0x140c8:	sar	rbp, 3
0x140cc:	call	0x1838


0x14060:	test	rdi, rdi
0x14063:	push	rbx
0x14064:	mov	rbx, rdi
0x14067:	je	0x1407a


0x13de0:	push	r12
0x13de2:	push	rbp
0x13de3:	mov	ebp, edi
0x13de5:	push	rbx
0x13de6:	sub	rsp, 0x50
0x13dea:	mov	rax, qword ptr fs:[0x28]
0x13df3:	mov	qword ptr [rsp + 0x18], rax
0x13df8:	xor	eax, eax
0x13dfa:	lea	rax, [rsp + 0x70]
0x13dff:	test	esi, esi
0x13e01:	mov	qword ptr [rsp + 0x30], rdx
0x13e06:	mov	qword ptr [rsp + 0x38], rcx
0x13e0b:	mov	qword ptr [rsp + 0x40], r8
0x13e10:	mov	qword ptr [rsp + 8], rax
0x13e15:	lea	rax, [rsp + 0x20]
0x13e1a:	mov	qword ptr [rsp + 0x48], r9
0x13e1f:	mov	dword ptr [rsp], 0x10
0x13e26:	mov	qword ptr [rsp + 0x10], rax
0x13e2b:	je	0x14032


0x13d60:	push	r12
0x13d62:	push	rbp
0x13d63:	push	rbx
0x13d64:	mov	rbx, rdi
0x13d67:	call	0x1aa0


0x13d50:	mov	edx, 3
0x13d55:	xor	esi, esi
0x13d57:	xor	eax, eax
0x13d59:	jmp	0x13de0


0x13d10:	sub	rsp, 8
0x13d14:	mov	edi, 0xe
0x13d19:	call	0x1af0


0x13cb0:	sub	rsp, 8
0x13cb4:	xor	esi, esi
0x13cb6:	call	0x1b50


0x13c90:	and	esi, 0x80000
0x13c96:	mov	eax, 0x406
0x13c9b:	mov	edx, 3
0x13ca0:	cmovne	esi, eax
0x13ca3:	xor	eax, eax
0x13ca5:	jmp	0x13de0


0x13c50:	push	r13
0x13c52:	push	r12
0x13c54:	push	rbp
0x13c55:	push	rbx
0x13c56:	mov	ebx, edi
0x13c58:	sub	rsp, 8
0x13c5c:	cmp	edi, 2
0x13c5f:	ja	0x13c82


0x13c00:	push	rbx
0x13c01:	mov	rbx, rdi
0x13c04:	call	0x1980


0x13ba0:	movzx	edx, byte ptr [rdi]
0x13ba3:	mov	rax, rdi
0x13ba6:	cmp	dl, 0x2f
0x13ba9:	jne	0x13bbc


0x13b20:	push	r12
0x13b22:	push	rbp
0x13b23:	mov	rbp, rdi
0x13b26:	push	rbx
0x13b27:	call	0x18e0


0x13ad0:	test	rdx, rdx
0x13ad3:	jne	0x13af8


0x13ab0:	sub	rsp, 8
0x13ab4:	push	0
0x13ab6:	push	qword ptr [rsp + 0x28]
0x13aba:	push	qword ptr [rsp + 0x28]
0x13abe:	push	qword ptr [rsp + 0x28]
0x13ac2:	call	0x136a0


0x13a90:	sub	rsp, 8
0x13a94:	push	1
0x13a96:	push	qword ptr [rsp + 0x20]
0x13a9a:	push	qword ptr [rsp + 0x20]
0x13a9e:	push	0
0x13aa0:	call	0x136a0


0x13a70:	sub	rsp, 8
0x13a74:	push	0
0x13a76:	push	r9
0x13a78:	mov	r9, rdx
0x13a7b:	call	0x13220


0x13a50:	sub	rsp, 8
0x13a54:	mov	r9, rdx
0x13a57:	push	1
0x13a59:	push	r8
0x13a5b:	xor	r8d, r8d
0x13a5e:	call	0x13220


0x139b0:	test	r8d, 0xfffffff8
0x139b7:	jne	0x13a48


0x13960:	push	rbx
0x13961:	mov	rbx, rdi
0x13964:	mov	rdi, qword ptr [rdi]
0x13967:	test	rdi, rdi
0x1396a:	je	0x13971


0x138d0:	push	r13
0x138d2:	push	r12
0x138d4:	push	rbp
0x138d5:	push	rbx
0x138d6:	sub	rsp, 8
0x138da:	cmp	edi, 0x10
0x138dd:	ja	0x13940


0x137c0:	mov	eax, edx
0x137c2:	push	r14
0x137c4:	push	r13
0x137c6:	and	eax, 1
0x137c9:	push	r12
0x137cb:	push	rbp
0x137cc:	cmp	eax, 1
0x137cf:	push	rbx
0x137d0:	mov	rbx, rdi
0x137d3:	sbb	r14, r14
0x137d6:	mov	qword ptr [rdi], 0
0x137dd:	mov	qword ptr [rdi + 8], 0
0x137e5:	and	r14d, 0xfd4fca
0x137ec:	mov	qword ptr [rdi + 0x10], 0
0x137f4:	mov	edi, 0x100
0x137f9:	mov	r12, rsi
0x137fc:	mov	ebp, edx
0x137fe:	add	r14, 0x3b2fc
0x13805:	call	0x1ac0


0x136a0:	push	r15
0x136a2:	push	r14
0x136a4:	push	r13
0x136a6:	push	r12
0x136a8:	mov	r12, rdi
0x136ab:	push	rbp
0x136ac:	push	rbx
0x136ad:	mov	rbp, r8
0x136b0:	mov	rbx, rdx
0x136b3:	mov	rdx, rbp
0x136b6:	sub	rsp, 0x28
0x136ba:	shr	rdx, 0x3f
0x136be:	mov	rax, qword ptr [rsp + 0x70]
0x136c3:	mov	edi, edx
0x136c5:	mov	r8d, dword ptr [rsp + 0x78]
0x136ca:	shr	rax, 0x3f
0x136ce:	or	dil, al
0x136d1:	jne	0x137a0


0x13220:	push	r15
0x13222:	push	r14
0x13224:	mov	rax, r8
0x13227:	push	r13
0x13229:	push	r12
0x1322b:	add	r8, rcx
0x1322e:	push	rbp
0x1322f:	push	rbx
0x13230:	sub	rsp, 0x38
0x13234:	test	rcx, rcx
0x13237:	mov	ebx, dword ptr [rsp + 0x78]
0x1323b:	mov	r12, qword ptr [rsp + 0x70]
0x13240:	mov	dword ptr [rsp + 0x28], ebx
0x13244:	js	0x13580


0x13150:	push	r12
0x13152:	push	rbp
0x13153:	xor	eax, eax
0x13155:	push	rbx
0x13156:	mov	rbp, qword ptr [rdi + 0x20]
0x1315a:	mov	rbx, rdi
0x1315d:	mov	r12, qword ptr [rdi]
0x13160:	lea	rdi, [rbp + 8]
0x13164:	mov	rcx, rbp
0x13167:	mov	qword ptr [rbp], 0
0x1316f:	mov	qword ptr [rbp + 0xf8], 0
0x1317a:	and	rdi, 0xfffffffffffffff8
0x1317e:	sub	rcx, rdi
0x13181:	add	ecx, 0x100
0x13187:	shr	ecx, 3
0x1318a:	rep stosq	qword ptr [rdi], rax


0x13140:	mov	rax, qword ptr [rip + 0x2082b9]
0x13147:	mov	qword ptr [rip + 0x2082b2], rdi
0x1314e:	ret	


0x130d0:	sub	rsp, 8
0x130d4:	mov	rcx, qword ptr [rip + 0x208325]
0x130db:	mov	r8, rdi
0x130de:	mov	rdi, rdx
0x130e1:	mov	rax, rcx
0x130e4:	shr	rax, 0x19
0x130e8:	and	eax, 1
0x130eb:	shl	eax, 4
0x130ee:	mov	edx, eax
0x130f0:	movzx	eax, byte ptr [rdi + 0x38]
0x130f4:	and	eax, 0xffffffef
0x130f7:	or	eax, edx
0x130f9:	mov	rdx, rsi
0x130fc:	mov	rsi, r8
0x130ff:	or	eax, 0xffffff80
0x13102:	mov	byte ptr [rdi + 0x38], al
0x13105:	call	0x11fd0


0x11fd0:	push	r15
0x11fd2:	push	r14
0x11fd4:	push	r13
0x11fd6:	push	r12
0x11fd8:	push	rbp
0x11fd9:	push	rbx
0x11fda:	sub	rsp, 0x128
0x11fe1:	mov	qword ptr [rdi + 0x18], rcx
0x11fe5:	mov	qword ptr [rdi + 0x10], 0
0x11fed:	mov	rax, qword ptr fs:[0x28]
0x11ff6:	mov	qword ptr [rsp + 0x118], rax
0x11ffe:	xor	eax, eax
0x12000:	movzx	eax, byte ptr [rdi + 0x38]
0x12004:	mov	qword ptr [rsp + 8], rdi
0x12009:	mov	qword ptr [rsp + 0x10], rsi
0x1200e:	mov	qword ptr [rsp], rdx
0x12012:	mov	qword ptr [rsp + 0x18], rcx
0x12017:	mov	dword ptr [rsp + 0x4c], 0
0x1201f:	mov	qword ptr [rdi + 0x30], 0
0x12027:	mov	rbx, qword ptr [rdi]
0x1202a:	mov	byte ptr [rsp + 0x20], al
0x1202e:	and	eax, 0xffffff90
0x12031:	cmp	qword ptr [rdi + 8], 0xe7
0x12039:	mov	byte ptr [rdi + 0x38], al
0x1203c:	jbe	0x12e36


0x11e50:	push	r15
0x11e52:	push	r14
0x11e54:	mov	r14, rcx
0x11e57:	push	r13
0x11e59:	push	r12
0x11e5b:	mov	r13, r9
0x11e5e:	push	rbp
0x11e5f:	push	rbx
0x11e60:	mov	rbp, rdx
0x11e63:	mov	r12, rdi
0x11e66:	sub	rsp, 0x58
0x11e6a:	mov	rbx, qword ptr [rsi]
0x11e6d:	mov	rax, qword ptr fs:[0x28]
0x11e76:	mov	qword ptr [rsp + 0x48], rax
0x11e7b:	xor	eax, eax
0x11e7d:	mov	qword ptr [rsp + 0x28], rsi
0x11e82:	mov	qword ptr [rsp + 0x10], r8
0x11e87:	mov	rax, qword ptr [rbx + 0xa8]
0x11e8e:	mov	qword ptr [rsp + 0x20], rax
0x11e93:	call	0x11cc0


0x11cc0:	push	r15
0x11cc2:	push	r14
0x11cc4:	mov	r15, rcx
0x11cc7:	push	r13
0x11cc9:	push	r12
0x11ccb:	mov	r13, rsi
0x11cce:	push	rbp
0x11ccf:	push	rbx
0x11cd0:	mov	rbx, r9
0x11cd3:	mov	rbp, rdx
0x11cd6:	mov	r12, r8
0x11cd9:	sub	rsp, 0x48
0x11cdd:	mov	rax, qword ptr fs:[0x28]
0x11ce6:	mov	qword ptr [rsp + 0x38], rax
0x11ceb:	xor	eax, eax
0x11ced:	mov	rax, qword ptr [rsi]
0x11cf0:	mov	qword ptr [rsp], rdi
0x11cf4:	mov	qword ptr [rsp + 0x10], rax
0x11cf9:	call	0x107e0


0x107e0:	push	r15
0x107e2:	push	r14
0x107e4:	push	r13
0x107e6:	push	r12
0x107e8:	push	rbp
0x107e9:	push	rbx
0x107ea:	sub	rsp, 0x128
0x107f1:	mov	qword ptr [rsp + 0x20], rcx
0x107f6:	movzx	ecx, byte ptr [rdx + 8]
0x107fa:	mov	rax, qword ptr fs:[0x28]
0x10803:	mov	qword ptr [rsp + 0x118], rax
0x1080b:	xor	eax, eax
0x1080d:	mov	rax, qword ptr [rsi]
0x10810:	mov	qword ptr [rsp + 0x18], rdx
0x10815:	mov	qword ptr [rsp + 0x40], r9
0x1081a:	cmp	cl, 0x24
0x1081d:	mov	qword ptr [rsp + 0x10], rax
0x10822:	ja	0x108e0


0x10720:	push	r14
0x10722:	mov	r14, rdi
0x10725:	push	r13
0x10727:	mov	r13, rsi
0x1072a:	push	r12
0x1072c:	mov	r12, -2
0x10733:	push	rbp
0x10734:	mov	rbp, rdx
0x10737:	push	rbx
0x10738:	mov	rbx, -1
0x1073f:	nop	
0x10740:	mov	rdx, rbp
0x10743:	mov	rsi, r14
0x10746:	mov	rdi, r13
0x10749:	call	0x10020


0x10020:	push	r15
0x10022:	push	r14
0x10024:	push	r13
0x10026:	push	r12
0x10028:	push	rbp
0x10029:	push	rbx
0x1002a:	mov	rbp, rdi
0x1002d:	sub	rsp, 0x38
0x10031:	mov	r14, qword ptr [rsi + 0x48]
0x10035:	mov	rax, qword ptr fs:[0x28]
0x1003e:	mov	qword ptr [rsp + 0x28], rax
0x10043:	xor	eax, eax
0x10045:	cmp	qword ptr [rsi + 0x68], r14
0x10049:	jle	0x100e0


0xfdc0:	push	r14
0xfdc2:	push	r13
0xfdc4:	mov	r10, rsi
0xfdc7:	push	r12
0xfdc9:	push	rbp
0xfdca:	movsxd	r11, ecx
0xfdcd:	push	rbx
0xfdce:	mov	rbp, rdx
0xfdd1:	mov	rbx, rdi
0xfdd4:	sub	rsp, 0x20
0xfdd8:	mov	r12, qword ptr [rsi + 0x48]
0xfddc:	mov	rax, qword ptr fs:[0x28]
0xfde5:	mov	qword ptr [rsp + 0x18], rax
0xfdea:	xor	eax, eax
0xfdec:	cmp	dword ptr [rsi + 0x90], 1
0xfdf3:	je	0xfe48


0xf570:	push	r15
0xf572:	push	r14
0xf574:	mov	rax, rdi
0xf577:	push	r13
0xf579:	push	r12
0xf57b:	mov	r13, rsi
0xf57e:	push	rbp
0xf57f:	push	rbx
0xf580:	mov	rbp, rdx
0xf583:	mov	rbx, rcx
0xf586:	lea	rcx, [rdx*8]
0xf58e:	sub	rsp, 0xa8
0xf595:	mov	r12, qword ptr [rax + 0x98]
0xf59c:	mov	rax, qword ptr [rax + 0xb8]
0xf5a3:	mov	qword ptr [rsp + 8], rdi
0xf5a8:	mov	qword ptr [rsp + 0x18], rcx
0xf5ad:	mov	rdi, qword ptr fs:[0x28]
0xf5b6:	mov	qword ptr [rsp + 0x98], rdi
0xf5be:	xor	edi, edi
0xf5c0:	mov	rdx, qword ptr [rax + rdx*8]
0xf5c4:	mov	dword ptr [rsp + 0x5c], 0
0xf5cc:	mov	rcx, qword ptr [rbx + 8]
0xf5d0:	test	rdx, rdx
0xf5d3:	je	0xf828


0xde40:	push	r15
0xde42:	push	r14
0xde44:	push	r13
0xde46:	push	r12
0xde48:	mov	r13, r9
0xde4b:	push	rbp
0xde4c:	push	rbx
0xde4d:	mov	rbp, rcx
0xde50:	mov	ecx, 0x20
0xde55:	mov	r12, r8
0xde58:	sub	rsp, 0x238
0xde5f:	mov	rbx, qword ptr [rdi]
0xde62:	mov	rax, qword ptr [rsp + 0x278]
0xde6a:	mov	qword ptr [rsp + 0x48], rdi
0xde6f:	mov	qword ptr [rsp + 0x78], rsi
0xde74:	mov	rsi, rdi
0xde77:	lea	rdi, [rsp + 0x120]
0xde7f:	mov	qword ptr [rsp + 0x88], rdx
0xde87:	mov	qword ptr [rsp + 0x38], rbx
0xde8c:	mov	qword ptr [rsp + 0xb8], rax
0xde94:	mov	qword ptr [rsp], rdi
0xde98:	mov	rax, qword ptr fs:[0x28]
0xdea1:	mov	qword ptr [rsp + 0x228], rax
0xdea9:	xor	eax, eax
0xdeab:	rep stosq	qword ptr [rdi], rax


0xdb00:	push	r15
0xdb02:	push	r14
0xdb04:	mov	r14, rdi
0xdb07:	push	r13
0xdb09:	push	r12
0xdb0b:	mov	r13, rsi
0xdb0e:	push	rbp
0xdb0f:	push	rbx
0xdb10:	sub	rsp, 0x68
0xdb14:	mov	r15, qword ptr [rsi + 0x18]
0xdb18:	mov	rbx, qword ptr [rsi + 0x10]
0xdb1c:	mov	qword ptr [rsp], rdi
0xdb20:	mov	edi, 8
0xdb25:	mov	qword ptr [rsp + 0x40], 1
0xdb2e:	mov	rax, qword ptr fs:[0x28]
0xdb37:	mov	qword ptr [rsp + 0x58], rax
0xdb3c:	xor	eax, eax
0xdb3e:	mov	qword ptr [rsp + 0x48], 1
0xdb47:	call	0x1ac0


0xd910:	push	r15
0xd912:	push	r14
0xd914:	push	r13
0xd916:	push	r12
0xd918:	mov	r13, rdi
0xd91b:	push	rbp
0xd91c:	push	rbx
0xd91d:	mov	rbx, rsi
0xd920:	sub	rsp, 0x38
0xd924:	mov	r12, qword ptr [rsi + 0x48]
0xd928:	mov	r14, qword ptr [rsi + 0xb8]
0xd92f:	mov	rax, qword ptr fs:[0x28]
0xd938:	mov	qword ptr [rsp + 0x28], rax
0xd93d:	xor	eax, eax
0xd93f:	mov	r15, qword ptr [rsi + 0x98]
0xd946:	lea	rbp, [r12*8]
0xd94e:	add	r14, rbp
0xd951:	cmp	qword ptr [rsi + 0xc0], r12
0xd958:	jge	0xd9a0


0xd020:	push	r15
0xd022:	push	r14
0xd024:	push	r13
0xd026:	push	r12
0xd028:	push	rbp
0xd029:	push	rbx
0xd02a:	sub	rsp, 0xb8
0xd031:	mov	r15, qword ptr [rdi + 0x48]
0xd035:	mov	rax, qword ptr fs:[0x28]
0xd03e:	mov	qword ptr [rsp + 0xa8], rax
0xd046:	xor	eax, eax
0xd048:	cmp	qword ptr [rsi], 0
0xd04c:	mov	rax, qword ptr [rdi + 0x98]
0xd053:	mov	qword ptr [rsp + 0x48], rsi
0xd058:	mov	qword ptr [rsp + 0x40], rdx
0xd05d:	mov	qword ptr [rsp + 0x38], rax
0xd062:	jle	0xd390


0xce80:	push	r15
0xce82:	push	r14
0xce84:	mov	r14, rcx
0xce87:	push	r13
0xce89:	push	r12
0xce8b:	mov	r13, rsi
0xce8e:	push	rbp
0xce8f:	push	rbx
0xce90:	lea	rsi, [rdx + 0x10]
0xce94:	mov	rbp, rdx
0xce97:	mov	r9, r8
0xce9a:	mov	r12, r8
0xce9d:	sub	rsp, 0x20
0xcea1:	mov	rcx, qword ptr [rdx + 8]
0xcea5:	mov	r8, r14
0xcea8:	push	8
0xceaa:	mov	rdx, qword ptr [rdx]
0xcead:	mov	rbx, rdi
0xceb0:	call	0xbe30


0xc590:	push	rbp
0xc591:	mov	rbp, rsp
0xc594:	push	r15
0xc596:	push	r14
0xc598:	push	r13
0xc59a:	push	r12
0xc59c:	mov	r13, rcx
0xc59f:	push	rbx
0xc5a0:	mov	r12, rsi
0xc5a3:	sub	rsp, 0xb8
0xc5aa:	mov	qword ptr [rbp - 0x98], rdx
0xc5b1:	mov	qword ptr [rbp - 0x50], 0
0xc5b9:	mov	rax, qword ptr fs:[0x28]
0xc5c2:	mov	qword ptr [rbp - 0x38], rax
0xc5c6:	xor	eax, eax
0xc5c8:	mov	rax, qword ptr [rdi]
0xc5cb:	test	r8b, r8b
0xc5ce:	mov	qword ptr [rbp - 0x48], 2
0xc5d6:	mov	qword ptr [rbp - 0x40], 0
0xc5de:	mov	qword ptr [rbp - 0x90], rax
0xc5e5:	je	0xcd8d


0xbe30:	push	r15
0xbe32:	push	r14
0xbe34:	mov	r15, rdi
0xbe37:	push	r13
0xbe39:	push	r12
0xbe3b:	push	rbp
0xbe3c:	push	rbx
0xbe3d:	mov	rbp, rcx
0xbe40:	mov	rbx, rdx
0xbe43:	sub	rsp, 0xd8
0xbe4a:	mov	rcx, qword ptr [rdi + 0x98]
0xbe51:	mov	r13, qword ptr [rsi + 8]
0xbe55:	mov	rax, qword ptr fs:[0x28]
0xbe5e:	mov	qword ptr [rsp + 0xc8], rax
0xbe66:	xor	eax, eax
0xbe68:	mov	rax, rdx
0xbe6b:	mov	qword ptr [rsp + 0x60], rsi
0xbe70:	mov	qword ptr [rsp + 0x78], r8
0xbe75:	shl	rax, 4
0xbe79:	add	rax, qword ptr [rcx]
0xbe7c:	mov	qword ptr [rsp + 0x40], r9
0xbe81:	mov	qword ptr [rsp + 0x30], rcx
0xbe86:	mov	dword ptr [rsp + 0x88], 0
0xbe91:	mov	rax, qword ptr [rax]
0xbe94:	mov	qword ptr [rsp + 0x48], rax
0xbe99:	movsxd	rax, dword ptr [rdi + 0xe0]
0xbea0:	add	rax, r9
0xbea3:	cmp	rax, r13
0xbea6:	jge	0xc4c6


0xbbd0:	shl	rdx, 4
0xbbd4:	push	r13
0xbbd6:	push	r12
0xbbd8:	lea	r9, [rdi + rdx]
0xbbdc:	push	rbp
0xbbdd:	push	rbx
0xbbde:	sub	rsp, 8
0xbbe2:	movzx	r11d, byte ptr [r9 + 8]
0xbbe7:	cmp	r11b, 7
0xbbeb:	je	0xbd00


0xb6a0:	push	r15
0xb6a2:	push	r14
0xb6a4:	mov	rax, rdi
0xb6a7:	push	r13
0xb6a9:	push	r12
0xb6ab:	push	rbp
0xb6ac:	push	rbx
0xb6ad:	xor	ebx, ebx
0xb6af:	mov	rbp, rcx
0xb6b2:	sub	rsp, 0x178
0xb6b9:	mov	rax, qword ptr [rax]
0xb6bc:	mov	qword ptr [rsp + 0x30], rdi
0xb6c1:	mov	qword ptr [rsp + 0x20], rsi
0xb6c6:	mov	rdi, qword ptr fs:[0x28]
0xb6cf:	mov	qword ptr [rsp + 0x168], rdi
0xb6d7:	xor	edi, edi
0xb6d9:	cmp	dword ptr [rax + 0xb4], 1
0xb6e0:	mov	qword ptr [rsp + 0x28], rdx
0xb6e5:	mov	qword ptr [rsp + 8], rax
0xb6ea:	jne	0xb703


0xb430:	push	r15
0xb432:	push	r14
0xb434:	mov	r14, rdx
0xb437:	push	r13
0xb439:	push	r12
0xb43b:	mov	r13, rcx
0xb43e:	push	rbp
0xb43f:	push	rbx
0xb440:	mov	rbp, rdi
0xb443:	mov	edi, 0x20
0xb448:	mov	r12d, r8d
0xb44b:	sub	rsp, 0x58
0xb44f:	mov	qword ptr [rsp], rsi
0xb453:	mov	esi, 1
0xb458:	mov	qword ptr [rsp + 8], r9
0xb45d:	mov	rax, qword ptr fs:[0x28]
0xb466:	mov	qword ptr [rsp + 0x48], rax
0xb46b:	xor	eax, eax
0xb46d:	mov	qword ptr [rsp + 0x18], 0
0xb476:	call	0x1a70


0xac20:	push	r14
0xac22:	push	r13
0xac24:	mov	r13, rcx
0xac27:	push	r12
0xac29:	push	rbp
0xac2a:	mov	r12, r9
0xac2d:	push	rbx
0xac2e:	mov	rbp, rdi
0xac31:	mov	rbx, rsi
0xac34:	sub	rsp, 0x10
0xac38:	test	qword ptr [rsp + 0x40], 0x400000
0xac41:	je	0xac68


0xabd0:	push	rbp
0xabd1:	push	rbx
0xabd2:	mov	rbp, rdi
0xabd5:	mov	rdi, rsi
0xabd8:	mov	rbx, rsi
0xabdb:	sub	rsp, 8
0xabdf:	call	0x1980


0xab30:	push	r12
0xab32:	push	rbp
0xab33:	push	rbx
0xab34:	mov	rax, qword ptr [rdi]
0xab37:	sub	rax, 1
0xab3b:	test	rax, rax
0xab3e:	mov	qword ptr [rdi], rax
0xab41:	js	0xaba5


0xaae0:	push	r12
0xaae2:	push	rbp
0xaae3:	mov	rbp, rdi
0xaae6:	push	rbx
0xaae7:	cmp	qword ptr [rdi], 0
0xaaeb:	jle	0xab22


0xaa50:	cmp	byte ptr [rsi + 0x30], 0x10
0xaa54:	je	0xaab8


0x9eb0:	push	r15
0x9eb2:	push	r14
0x9eb4:	mov	r15, rdi
0x9eb7:	push	r13
0x9eb9:	push	r12
0x9ebb:	mov	edi, 0x3800
0x9ec0:	push	rbp
0x9ec1:	push	rbx
0x9ec2:	sub	rsp, 0x108
0x9ec9:	mov	rax, qword ptr fs:[0x28]
0x9ed2:	mov	qword ptr [rsp + 0xf8], rax
0x9eda:	xor	eax, eax
0x9edc:	mov	qword ptr [rsp + 8], rsi
0x9ee1:	call	0x1ac0


0x9c70:	push	r15
0x9c72:	push	r14
0x9c74:	mov	r14, rdx
0x9c77:	push	r13
0x9c79:	push	r12
0x9c7b:	lea	rdx, [rsi + rsi*2]
0x9c7f:	push	rbp
0x9c80:	push	rbx
0x9c81:	pxor	xmm0, xmm0
0x9c85:	sub	rsp, 0x48
0x9c89:	mov	rax, qword ptr fs:[0x28]
0x9c92:	mov	qword ptr [rsp + 0x38], rax
0x9c97:	xor	eax, eax
0x9c99:	mov	rax, qword ptr [rdi + 0x38]
0x9c9d:	mov	qword ptr [rsp + 0x30], 0
0x9ca6:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x9cab:	mov	qword ptr [rsp + 0x10], rcx
0x9cb0:	lea	rbp, [rax + rdx*8]
0x9cb4:	mov	r10, qword ptr [rbp + 8]
0x9cb8:	test	r10, r10
0x9cbb:	jle	0x9ea2


0x94d0:	push	r15
0x94d2:	push	r14
0x94d4:	mov	r15, rsi
0x94d7:	push	r13
0x94d9:	push	r12
0x94db:	mov	r10d, edx
0x94de:	push	rbp
0x94df:	push	rbx
0x94e0:	mov	rbp, rsi
0x94e3:	mov	rbx, rdi
0x94e6:	sub	rsp, 0x48
0x94ea:	mov	rax, qword ptr fs:[0x28]
0x94f3:	mov	qword ptr [rsp + 0x38], rax
0x94f8:	xor	eax, eax
0x94fa:	mov	rax, qword ptr [rdi + 0x28]
0x94fe:	sub	rbp, rax
0x9501:	cmp	rax, rsi
0x9504:	jle	0x9566


0x9400:	push	r12
0x9402:	mov	r12, rdx
0x9405:	push	rbp
0x9406:	push	rbx
0x9407:	mov	edx, dword ptr [rdi + 0xa0]
0x940d:	mov	rbx, rsi
0x9410:	mov	rsi, rcx
0x9413:	mov	rbp, rdi
0x9416:	call	0x9200


0x92f0:	mov	rax, qword ptr [rdi + 8]
0x92f4:	movzx	ecx, byte ptr [rax + rdx]
0x92f8:	movzx	eax, byte ptr [rsi + 8]
0x92fc:	cmp	al, 3
0x92fe:	je	0x93b8


0x9200:	push	rbp
0x9201:	push	rbx
0x9202:	mov	rbp, rdi
0x9205:	sub	rsp, 8
0x9209:	test	rsi, rsi
0x920c:	js	0x9260


0x90b0:	push	r15
0x90b2:	push	r14
0x90b4:	push	r13
0x90b6:	push	r12
0x90b8:	push	rbp
0x90b9:	push	rbx
0x90ba:	sub	rsp, 0x28
0x90be:	cmp	qword ptr [rsi], 0
0x90c2:	mov	r13, qword ptr [rdi + 0x98]
0x90c9:	jle	0x9190


0x8d10:	push	r15
0x8d12:	push	r14
0x8d14:	push	r13
0x8d16:	push	r12
0x8d18:	mov	r12, rdx
0x8d1b:	push	rbp
0x8d1c:	push	rbx
0x8d1d:	mov	rbx, rdi
0x8d20:	mov	rbp, rsi
0x8d23:	xor	esi, esi
0x8d25:	sub	rsp, 0x78
0x8d29:	mov	rdi, qword ptr [rdi + 0xc8]
0x8d30:	mov	rax, qword ptr fs:[0x28]
0x8d39:	mov	qword ptr [rsp + 0x68], rax
0x8d3e:	xor	eax, eax
0x8d40:	mov	qword ptr [rsp + 0x20], rcx
0x8d45:	mov	dword ptr [rsp + 0x2c], r8d
0x8d4a:	mov	rdx, rdi
0x8d4d:	cmp	rsi, rdx
0x8d50:	jge	0x8da7


0x8c30:	push	r15
0x8c32:	push	r14
0x8c34:	push	r13
0x8c36:	push	r12
0x8c38:	push	rbp
0x8c39:	push	rbx
0x8c3a:	sub	rsp, 0x48
0x8c3e:	mov	rax, qword ptr fs:[0x28]
0x8c47:	mov	qword ptr [rsp + 0x38], rax
0x8c4c:	xor	eax, eax
0x8c4e:	test	rcx, rcx
0x8c51:	jle	0x8ce6


0x8a30:	push	r15
0x8a32:	push	r14
0x8a34:	push	r13
0x8a36:	push	r12
0x8a38:	push	rbp
0x8a39:	push	rbx
0x8a3a:	sub	rsp, 8
0x8a3e:	mov	rbp, qword ptr [rdx + 8]
0x8a42:	test	rbp, rbp
0x8a45:	je	0x8c20


0x8770:	push	r15
0x8772:	push	r14
0x8774:	push	r13
0x8776:	push	r12
0x8778:	push	rbp
0x8779:	push	rbx
0x877a:	sub	rsp, 0x28
0x877e:	mov	r10, qword ptr [rdx + 8]
0x8782:	test	r10, r10
0x8785:	je	0x8a0f


0x8610:	test	rsi, rsi
0x8613:	push	r14
0x8615:	push	r13
0x8617:	push	r12
0x8619:	push	rbp
0x861a:	push	rbx
0x861b:	je	0x86c5


0x8580:	push	r12
0x8582:	push	rbp
0x8583:	push	rbx
0x8584:	mov	rax, qword ptr [rsi + 8]
0x8588:	mov	qword ptr [rdi + 8], rax
0x858c:	mov	r12, qword ptr [rsi + 8]
0x8590:	test	r12, r12
0x8593:	jle	0x85d0


0x84e0:	push	rbp
0x84e1:	push	rbx
0x84e2:	mov	rbp, rdi
0x84e5:	mov	rbx, rsi
0x84e8:	sub	rsp, 0x18
0x84ec:	mov	rdx, qword ptr [rsi + 8]
0x84f0:	mov	rax, qword ptr fs:[0x28]
0x84f9:	mov	qword ptr [rsp + 8], rax
0x84fe:	xor	eax, eax
0x8500:	mov	dword ptr [rsp + 4], 0
0x8508:	test	rdx, rdx
0x850b:	je	0x8513


0x82a0:	push	r15
0x82a2:	push	r14
0x82a4:	push	r13
0x82a6:	push	r12
0x82a8:	mov	r13, rdx
0x82ab:	push	rbp
0x82ac:	push	rbx
0x82ad:	sub	rsp, 0x48
0x82b1:	mov	rbx, qword ptr [rsi]
0x82b4:	mov	rbp, qword ptr [rdx + 8]
0x82b8:	mov	rax, qword ptr fs:[0x28]
0x82c1:	mov	qword ptr [rsp + 0x38], rax
0x82c6:	xor	eax, eax
0x82c8:	test	byte ptr [rsi + 0x38], 0x10
0x82cc:	mov	qword ptr [rsp + 0x18], rdi
0x82d1:	je	0x8448


0x81c0:	push	r14
0x81c2:	push	r13
0x81c4:	lea	r13, [rsi + 0x70]
0x81c8:	push	r12
0x81ca:	push	rbp
0x81cb:	lea	r12, [rsi + 0x80]
0x81d2:	push	rbx
0x81d3:	mov	rbx, rdi
0x81d6:	sub	rsp, 0x10
0x81da:	mov	rbp, qword ptr [rdi]
0x81dd:	mov	rax, qword ptr fs:[0x28]
0x81e6:	mov	qword ptr [rsp + 8], rax
0x81eb:	xor	eax, eax
0x81ed:	mov	r14, rsp
0x81f0:	lea	r8, [rbx + 0x28]
0x81f4:	xor	ecx, ecx
0x81f6:	xor	edx, edx
0x81f8:	mov	rsi, r12
0x81fb:	mov	rdi, r13
0x81fe:	call	0x80e0


0x80e0:	push	rbx
0x80e1:	mov	rbx, rdi
0x80e4:	sub	rsp, 0x20
0x80e8:	mov	eax, dword ptr [rsi]
0x80ea:	cmp	eax, 0xf
0x80ed:	je	0x8168


0x7f30:	mov	r9, qword ptr [rsi + 8]
0x7f34:	xor	eax, eax
0x7f36:	test	r9, r9
0x7f39:	je	0x7ff8


0x7dd0:	push	r15
0x7dd2:	push	r14
0x7dd4:	mov	r14, rdi
0x7dd7:	push	r13
0x7dd9:	push	r12
0x7ddb:	mov	r15, rsi
0x7dde:	push	rbp
0x7ddf:	push	rbx
0x7de0:	mov	rbp, rdx
0x7de3:	mov	ebx, ecx
0x7de5:	sub	rsp, 0x38
0x7de9:	mov	r12, qword ptr [rsi + 8]
0x7ded:	mov	rax, qword ptr fs:[0x28]
0x7df6:	mov	qword ptr [rsp + 0x28], rax
0x7dfb:	xor	eax, eax
0x7dfd:	mov	qword ptr [rsp + 0x18], 0
0x7e06:	lea	rdi, [r12*8]
0x7e0e:	mov	qword ptr [rsp + 0x10], r12
0x7e13:	call	0x1ac0


0x7b20:	push	r15
0x7b22:	push	r14
0x7b24:	mov	r15, rsi
0x7b27:	push	r13
0x7b29:	push	r12
0x7b2b:	push	rbp
0x7b2c:	push	rbx
0x7b2d:	lea	rbx, [rdx + rdx*2]
0x7b31:	mov	rbp, rdx
0x7b34:	sub	rsp, 0x68
0x7b38:	mov	r12, qword ptr [rsi + 0x28]
0x7b3c:	shl	rbx, 3
0x7b40:	mov	rax, qword ptr fs:[0x28]
0x7b49:	mov	qword ptr [rsp + 0x58], rax
0x7b4e:	xor	eax, eax
0x7b50:	mov	qword ptr [rsp + 0x10], rdi
0x7b55:	mov	dword ptr [rsp + 0x1c], ecx
0x7b59:	add	r12, rbx
0x7b5c:	mov	rax, qword ptr [r12 + 8]
0x7b61:	mov	qword ptr [rsp + 0x28], 0
0x7b6a:	lea	rdi, [rax + 1]
0x7b6e:	mov	qword ptr [rsp + 0x20], rdi
0x7b73:	shl	rdi, 3
0x7b77:	call	0x1ac0


0x7940:	test	rsi, rsi
0x7943:	je	0x7a38


0x76d0:	push	r15
0x76d2:	push	r14
0x76d4:	push	r13
0x76d6:	push	r12
0x76d8:	push	rbp
0x76d9:	push	rbx
0x76da:	xor	ebx, ebx
0x76dc:	sub	rsp, 0x48
0x76e0:	mov	rax, qword ptr [rdi + 0x98]
0x76e7:	mov	r15, qword ptr [rdi + 0xc8]
0x76ee:	mov	r12, qword ptr [rsp + 0x80]
0x76f6:	mov	qword ptr [rsp + 8], rax
0x76fb:	mov	rbp, r15
0x76fe:	cmp	rbx, rbp
0x7701:	jge	0x775b


0x7670:	movzx	eax, byte ptr [rsi + 0x30]
0x7674:	mov	rdx, qword ptr [rsi + 8]
0x7678:	cmp	al, 0xb
0x767a:	je	0x76c0


0x75e0:	movzx	eax, byte ptr [rsi + 0x30]
0x75e4:	cmp	al, 4
0x75e6:	je	0x7640


0x75a0:	mov	rax, qword ptr [rdi]
0x75a3:	cmp	rax, rdx
0x75a6:	jle	0x75d2


0x74a0:	push	r15
0x74a2:	push	r14
0x74a4:	lea	r14, [rsi + 0x10]
0x74a8:	push	r13
0x74aa:	push	r12
0x74ac:	mov	r15, rcx
0x74af:	push	rbp
0x74b0:	push	rbx
0x74b1:	mov	r12, rdi
0x74b4:	mov	rbp, rsi
0x74b7:	mov	rbx, rdx
0x74ba:	mov	r13d, r8d
0x74bd:	sub	rsp, 8
0x74c1:	mov	rdi, qword ptr [rbp + 8]
0x74c5:	mov	rdx, rbx
0x74c8:	mov	rsi, r14
0x74cb:	call	0x7420


0x7420:	xor	eax, eax
0x7422:	test	rdi, rdi
0x7425:	jle	0x7465


0x73c0:	mov	rdx, qword ptr [rdi + 8]
0x73c4:	xor	eax, eax
0x73c6:	cmp	rdx, qword ptr [rsi + 8]
0x73ca:	je	0x73d0


0x7370:	mov	rcx, qword ptr [rdi + 0x30]
0x7374:	lea	rax, [rsi + 1]
0x7378:	cmp	rax, rcx
0x737b:	jge	0x73b8


0x72b0:	push	r14
0x72b2:	push	r13
0x72b4:	mov	r14, rdi
0x72b7:	push	r12
0x72b9:	push	rbp
0x72ba:	push	rbx
0x72bb:	cmp	qword ptr [rdi + 0xe8], 0
0x72c3:	jle	0x7349


0x7150:	push	r14
0x7152:	push	r13
0x7154:	push	r12
0x7156:	mov	r12, rdi
0x7159:	push	rbp
0x715a:	push	rbx
0x715b:	mov	rdi, qword ptr [rdi]
0x715e:	test	rdi, rdi
0x7161:	je	0x718e


0x7110:	push	rbx
0x7111:	mov	rbx, rdi
0x7114:	mov	rdi, qword ptr [rdi + 0x10]
0x7118:	call	0x1880


0x70b0:	push	rbx
0x70b1:	mov	rbx, rdi
0x70b4:	mov	rdi, qword ptr [rdi + 0x30]
0x70b8:	call	0x1880


0x6e30:	push	r15
0x6e32:	push	r14
0x6e34:	mov	r9, rsi
0x6e37:	push	r13
0x6e39:	push	r12
0x6e3b:	mov	r14, rdi
0x6e3e:	push	rbp
0x6e3f:	push	rbx
0x6e40:	mov	r13, rdx
0x6e43:	mov	ebp, r8d
0x6e46:	sub	rsp, 0x18
0x6e4a:	mov	qword ptr [rsp + 8], rcx
0x6e4f:	mov	r8, qword ptr [r14]
0x6e52:	mov	rax, r9
0x6e55:	mov	rdi, qword ptr [r14 + 0x28]
0x6e59:	shl	rax, 4
0x6e5d:	mov	r12, r13
0x6e60:	add	rax, r8
0x6e63:	cmp	byte ptr [rax + 8], 4
0x6e67:	je	0x7020


0x6d90:	push	r13
0x6d92:	push	r12
0x6d94:	mov	r13, rsi
0x6d97:	push	rbp
0x6d98:	push	rbx
0x6d99:	shl	r13, 4
0x6d9d:	mov	rbp, rsi
0x6da0:	mov	r12d, edx
0x6da3:	mov	rbx, rdi
0x6da6:	sub	rsp, 8
0x6daa:	mov	rax, qword ptr [rdi]
0x6dad:	mov	rsi, qword ptr [rax + r13]
0x6db1:	mov	rdx, qword ptr [rax + r13 + 8]
0x6db6:	call	0x6bc0


0x6bc0:	push	r15
0x6bc2:	push	r14
0x6bc4:	mov	r14, rsi
0x6bc7:	push	r13
0x6bc9:	push	r12
0x6bcb:	push	rbp
0x6bcc:	push	rbx
0x6bcd:	mov	rbx, rdi
0x6bd0:	sub	rsp, 0x18
0x6bd4:	mov	rsi, qword ptr [rdi + 0x10]
0x6bd8:	mov	rbp, qword ptr [rdi + 8]
0x6bdc:	cmp	rsi, rbp
0x6bdf:	jae	0x6c90


0x6ba0:	lea	rdi, [rsi + 0x28]
0x6ba4:	sub	rsp, 8
0x6ba8:	call	0x6b70


0x6b70:	mov	eax, dword ptr [rdi + 8]
0x6b73:	and	eax, 0x400ff
0x6b78:	cmp	eax, 6
0x6b7b:	je	0x6b90


0x6b40:	push	rbx
0x6b41:	mov	rbx, rdi
0x6b44:	mov	rdi, qword ptr [rdi]
0x6b47:	call	0x1880


0x6ab0:	push	r12
0x6ab2:	push	rbp
0x6ab3:	mov	rbp, rsi
0x6ab6:	push	rbx
0x6ab7:	mov	rax, qword ptr [rdi + 0x40]
0x6abb:	mov	rbx, rdi
0x6abe:	mov	r12, qword ptr [rdi + 0xc0]
0x6ac5:	cmp	rax, rsi
0x6ac8:	jg	0x6af0


0x6960:	push	rbp
0x6961:	push	rbx
0x6962:	movabs	rdx, 0xffffffffffffffe
0x696c:	sub	rsp, 8
0x6970:	mov	rax, qword ptr [rdi + 0x40]
0x6974:	cmp	rax, rdx
0x6977:	ja	0x6a88


0x6340:	push	r15
0x6342:	push	r14
0x6344:	mov	r14, rdi
0x6347:	push	r13
0x6349:	push	r12
0x634b:	push	rbp
0x634c:	push	rbx
0x634d:	sub	rsp, 0xa8
0x6354:	mov	rbx, qword ptr [rdi + 0x58]
0x6358:	mov	r15, qword ptr [rdi + 0x30]
0x635c:	mov	rax, qword ptr fs:[0x28]
0x6365:	mov	qword ptr [rsp + 0x98], rax
0x636d:	xor	eax, eax
0x636f:	cmp	qword ptr [rdi + 0x40], rbx
0x6373:	cmovle	rbx, qword ptr [rdi + 0x40]
0x6378:	cmp	byte ptr [rdi + 0x8a], 0
0x637f:	jne	0x638c


0x6170:	push	r15
0x6172:	push	r14
0x6174:	push	r13
0x6176:	push	r12
0x6178:	push	rbp
0x6179:	push	rbx
0x617a:	mov	rbx, rdi
0x617d:	sub	rsp, 0x68
0x6181:	mov	r12, qword ptr [rdi + 0x58]
0x6185:	mov	rbp, qword ptr [rdi + 0x30]
0x6189:	mov	rax, qword ptr fs:[0x28]
0x6192:	mov	qword ptr [rsp + 0x58], rax
0x6197:	xor	eax, eax
0x6199:	cmp	qword ptr [rdi + 0x40], r12
0x619d:	cmovle	r12, qword ptr [rdi + 0x40]
0x61a2:	cmp	r12, rbp
0x61a5:	jle	0x6234


0x6100:	push	r12
0x6102:	mov	r12, qword ptr [rdi + 0x58]
0x6106:	cmp	qword ptr [rdi + 0x40], r12
0x610a:	push	rbp
0x610b:	mov	rbp, rdi
0x610e:	cmovle	r12, qword ptr [rdi + 0x40]
0x6113:	push	rbx
0x6114:	mov	rbx, qword ptr [rdi + 0x30]
0x6118:	cmp	r12, rbx
0x611b:	jle	0x6155


0x6010:	push	r14
0x6012:	push	r13
0x6014:	mov	r14, rdi
0x6017:	push	r12
0x6019:	push	rbp
0x601a:	mov	r12, rdx
0x601d:	push	rbx
0x601e:	mov	rbx, qword ptr [rsi + 0x10]
0x6022:	mov	rbp, rsi
0x6025:	mov	qword ptr [rsi], rdx
0x6028:	mov	qword ptr [rsi + 0x28], 0
0x6030:	lea	r13, [rsi + 0x20]
0x6034:	lea	rdi, [rbx*8]
0x603c:	mov	qword ptr [rsi + 0x20], rbx
0x6040:	call	0x1ac0


0x5ee0:	push	rbp
0x5ee1:	push	rbx
0x5ee2:	mov	rbp, rsi
0x5ee5:	mov	rbx, rdi
0x5ee8:	sub	rsp, 8
0x5eec:	mov	rdx, qword ptr [rdi]
0x5eef:	test	rdx, rdx
0x5ef2:	je	0x5f18


0x5e70:	push	rbp
0x5e71:	push	rbx
0x5e72:	mov	rbp, rsi
0x5e75:	mov	rbx, rdi
0x5e78:	sub	rsp, 8
0x5e7c:	mov	rsi, qword ptr [rdi + 8]
0x5e80:	cmp	qword ptr [rdi], rsi
0x5e83:	mov	rax, qword ptr [rdi + 0x10]
0x5e87:	je	0x5ea8


0x5dd0:	push	rbp
0x5dd1:	push	rbx
0x5dd2:	mov	rbp, rsi
0x5dd5:	mov	rbx, rdi
0x5dd8:	sub	rsp, 8
0x5ddc:	cmp	dword ptr [rdi + 0x90], 1
0x5de3:	jle	0x5e2d


0x5d70:	push	r12
0x5d72:	mov	r12, rsi
0x5d75:	push	rbp
0x5d76:	mov	rbp, rdx
0x5d79:	push	rbx
0x5d7a:	mov	rbx, rdi
0x5d7d:	jmp	0x5d83


0x5d00:	push	r12
0x5d02:	mov	r12, rsi
0x5d05:	push	rbp
0x5d06:	mov	rbp, rdx
0x5d09:	push	rbx
0x5d0a:	mov	rbx, rdi
0x5d0d:	jmp	0x5d13


0x5c90:	mov	rax, qword ptr [rdi + 0xd8]
0x5c97:	lea	rsi, [rsi + rsi*4]
0x5c9b:	lea	rax, [rax + rsi*8]
0x5c9f:	mov	r10, qword ptr [rax + 0x10]
0x5ca3:	cmp	r10, r8
0x5ca6:	jg	0x5cf0


0x5a60:	push	r15
0x5a62:	push	r14
0x5a64:	mov	r9, rdx
0x5a67:	push	r13
0x5a69:	push	r12
0x5a6b:	lea	rdx, [rcx + rcx*2]
0x5a6f:	push	rbp
0x5a70:	push	rbx
0x5a71:	mov	r15d, esi
0x5a74:	sub	rsp, 0x48
0x5a78:	mov	r14, qword ptr [rdi + 0x98]
0x5a7f:	mov	qword ptr [rsp], rdi
0x5a83:	mov	rax, qword ptr [r14 + 0x30]
0x5a87:	lea	r12, [rax + rdx*8]
0x5a8b:	cmp	qword ptr [r12 + 8], 0
0x5a91:	jle	0x5c25


0x5a40:	cmp	byte ptr [rsi + 0x30], 0x11
0x5a44:	je	0x5a50


0x5910:	mov	rax, qword ptr [rsi + 0x48]
0x5914:	cmp	qword ptr [rsi + 0x68], rax
0x5918:	jle	0x5970


0x5880:	push	r13
0x5882:	push	r12
0x5884:	mov	r13, rsi
0x5887:	push	rbp
0x5888:	push	rbx
0x5889:	mov	rbx, rdi
0x588c:	mov	r12, rdx
0x588f:	sub	rsp, 0x18
0x5893:	mov	rax, qword ptr fs:[0x28]
0x589c:	mov	qword ptr [rsp + 8], rax
0x58a1:	xor	eax, eax
0x58a3:	lea	rax, [rsp + 4]
0x58a8:	test	rdi, rdi
0x58ab:	cmove	rbx, rax
0x58af:	mov	rdi, rbx
0x58b2:	call	0x19b0


0x5820:	mov	rax, qword ptr [rdi + 8]
0x5824:	cmp	qword ptr [rdi + 0x10], rax
0x5828:	je	0x5830


0x57e0:	lea	rsi, [rip + 0xf728]
0x57e7:	sub	rsp, 8
0x57eb:	mov	edx, 5
0x57f0:	xor	edi, edi
0x57f2:	call	0x1960


0x57c0:	push	rbx
0x57c1:	mov	rbx, rdi
0x57c4:	call	0x1980


0x5790:	push	rbp
0x5791:	push	rbx
0x5792:	mov	rbp, rdi
0x5795:	mov	rdi, rsi
0x5798:	mov	rbx, rsi
0x579b:	sub	rsp, 8
0x579f:	call	0x5590


0x5760:	mov	rax, rdi
0x5763:	sub	rsp, 8
0x5767:	mul	rsi
0x576a:	seto	dl
0x576d:	test	rax, rax
0x5770:	js	0x5789


0x5740:	push	rbx
0x5741:	mov	rbx, rdi
0x5744:	call	0x5590


0x56f0:	test	rdi, rdi
0x56f3:	mov	rax, qword ptr [rsi]
0x56f6:	je	0x5720


0x5660:	test	rdi, rdi
0x5663:	mov	r9, rdx
0x5666:	mov	rcx, qword ptr [rsi]
0x5669:	je	0x56a0


0x5630:	mov	rax, rsi
0x5633:	mul	rdx
0x5636:	mov	rsi, rax
0x5639:	seto	al
0x563c:	test	rsi, rsi
0x563f:	js	0x564b


0x55f0:	test	rsi, rsi
0x55f3:	push	rbx
0x55f4:	mov	rbx, rsi
0x55f7:	jne	0x55fe


0x55e0:	jmp	0x5590


0x55b0:	mov	rax, rdi
0x55b3:	mul	rsi
0x55b6:	mov	rdi, rax
0x55b9:	seto	al
0x55bc:	test	rdi, rdi
0x55bf:	js	0x55cb


0x5590:	push	rbx
0x5591:	mov	rbx, rdi
0x5594:	call	0x1ac0


0x5510:	push	rbx
0x5511:	lea	rsi, [rip + 0xf6ea]
0x5518:	mov	edx, 5
0x551d:	xor	edi, edi
0x551f:	call	0x1960


0x5430:	push	rbp
0x5431:	push	rbx
0x5432:	mov	r10d, 0x20
0x5438:	xor	r11d, r11d
0x543b:	sub	rsp, 0xb8
0x5442:	mov	rax, qword ptr fs:[0x28]
0x544b:	mov	qword ptr [rsp + 0x78], rax
0x5450:	xor	eax, eax
0x5452:	lea	rax, [rsp + 0xd0]
0x545a:	mov	qword ptr [rsp + 0xa0], r8
0x5462:	lea	rbx, [rsp + 0xd0]
0x546a:	lea	r8, [rsp + 0x20]
0x546f:	mov	qword ptr [rsp + 0xa8], r9
0x5477:	mov	dword ptr [rsp + 8], 0x20
0x547f:	mov	qword ptr [rsp + 0x10], rax
0x5484:	lea	rax, [rsp + 0x80]
0x548c:	xor	r9d, r9d
0x548f:	mov	qword ptr [rsp + 0x18], rax
0x5494:	mov	rbp, rax
0x5497:	nop	word ptr [rax + rax]
0x54a0:	cmp	r10d, 0x2f
0x54a4:	ja	0x54fc


0x53b0:	sub	rsp, 0x68
0x53b4:	mov	r10, r8
0x53b7:	xor	r9d, r9d
0x53ba:	mov	rax, qword ptr fs:[0x28]
0x53c3:	mov	qword ptr [rsp + 0x58], rax
0x53c8:	xor	eax, eax
0x53ca:	mov	r8, rsp
0x53cd:	nop	dword ptr [rax]
0x53d0:	mov	eax, dword ptr [r10]
0x53d3:	cmp	eax, 0x2f
0x53d6:	ja	0x541a


0x5390:	xor	r9d, r9d
0x5393:	cmp	qword ptr [r8], 0
0x5397:	je	0x53ab


0x4f70:	push	r15
0x4f72:	push	r14
0x4f74:	push	r13
0x4f76:	push	r12
0x4f78:	mov	r12, r9
0x4f7b:	push	rbp
0x4f7c:	push	rbx
0x4f7d:	mov	rbp, rdi
0x4f80:	mov	rbx, r8
0x4f83:	sub	rsp, 0x28
0x4f87:	test	rsi, rsi
0x4f8a:	je	0x50a8


0x4f30:	push	r13
0x4f32:	push	r12
0x4f34:	push	rbp
0x4f35:	push	rbx
0x4f36:	mov	ebx, edi
0x4f38:	sub	rsp, 8
0x4f3c:	cmp	edi, 2
0x4f3f:	ja	0x4f62


0x4f10:	push	rbx
0x4f11:	mov	ebx, esi
0x4f13:	call	0x19e0


0x4ef0:	sub	rsp, 8
0x4ef4:	call	0x1b00


0x4e90:	push	r13
0x4e92:	push	r12
0x4e94:	mov	r13d, edi
0x4e97:	push	rbp
0x4e98:	push	rbx
0x4e99:	mov	r12, rsi
0x4e9c:	mov	rbx, rdx
0x4e9f:	sub	rsp, 8
0x4ea3:	nop	dword ptr [rax + rax]
0x4ea8:	mov	rdx, rbx
0x4eab:	mov	rsi, r12
0x4eae:	mov	edi, r13d
0x4eb1:	call	0x1a30


0x4e70:	lea	rcx, [rip + 0x2141a9]
0x4e77:	mov	rsi, rdi
0x4e7a:	mov	rdx, -1
0x4e81:	xor	edi, edi
0x4e83:	jmp	0x4530


0x4e50:	lea	rcx, [rip + 0x2141c9]
0x4e57:	mov	rdx, -1
0x4e5e:	jmp	0x4530


0x4e30:	lea	rcx, [rip + 0x2141e9]
0x4e37:	mov	rdx, rsi
0x4e3a:	mov	rsi, rdi
0x4e3d:	xor	edi, edi
0x4e3f:	jmp	0x4530


0x4e20:	lea	rcx, [rip + 0x2141f9]
0x4e27:	jmp	0x4530


0x4e00:	mov	r8, rcx
0x4e03:	mov	rcx, rdx
0x4e06:	mov	rdx, rsi
0x4e09:	mov	rsi, rdi
0x4e0c:	xor	edi, edi
0x4e0e:	jmp	0x4d30


0x4de0:	mov	rcx, rdx
0x4de3:	mov	r8, -1
0x4dea:	mov	rdx, rsi
0x4ded:	mov	rsi, rdi
0x4df0:	xor	edi, edi
0x4df2:	jmp	0x4d30


0x4dd0:	mov	r8, -1
0x4dd7:	jmp	0x4d30


0x4d30:	sub	rsp, 0x48
0x4d34:	mov	r9, rcx
0x4d37:	mov	rcx, qword ptr [rip + 0x2166b2]
0x4d3e:	movdqa	xmm0, xmmword ptr [rip + 0x21667a]
0x4d46:	mov	rax, qword ptr fs:[0x28]
0x4d4f:	mov	qword ptr [rsp + 0x38], rax
0x4d54:	xor	eax, eax
0x4d56:	movaps	xmmword ptr [rsp], xmm0
0x4d5a:	test	rsi, rsi
0x4d5d:	mov	qword ptr [rsp + 0x30], rcx
0x4d62:	mov	dword ptr [rsp], 0xa
0x4d69:	movdqa	xmm0, xmmword ptr [rip + 0x21665f]
0x4d71:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x4d76:	movdqa	xmm0, xmmword ptr [rip + 0x216662]
0x4d7e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x4d83:	je	0x4db7


0x4ca0:	sub	rsp, 0x48
0x4ca4:	mov	rax, rdx
0x4ca7:	mov	rdx, qword ptr fs:[0x28]
0x4cb0:	mov	qword ptr [rsp + 0x38], rdx
0x4cb5:	xor	edx, edx
0x4cb7:	cmp	esi, 0xa
0x4cba:	je	0x4d24


0x4c90:	mov	edx, 0x3a
0x4c95:	jmp	0x4bc0


0x4c70:	mov	edx, 0x3a
0x4c75:	mov	rsi, -1
0x4c7c:	jmp	0x4bc0


0x4c60:	movsx	edx, sil
0x4c64:	mov	rsi, -1
0x4c6b:	jmp	0x4bc0


0x4bc0:	sub	rsp, 0x48
0x4bc4:	mov	ecx, edx
0x4bc6:	mov	rax, qword ptr fs:[0x28]
0x4bcf:	mov	qword ptr [rsp + 0x38], rax
0x4bd4:	xor	eax, eax
0x4bd6:	mov	rax, qword ptr [rip + 0x216813]
0x4bdd:	mov	r8, rsp
0x4be0:	and	ecx, 0x1f
0x4be3:	movdqa	xmm0, xmmword ptr [rip + 0x2167d5]
0x4beb:	mov	qword ptr [rsp + 0x30], rax
0x4bf0:	mov	eax, edx
0x4bf2:	movaps	xmmword ptr [rsp], xmm0
0x4bf6:	shr	al, 5
0x4bf9:	movzx	eax, al
0x4bfc:	lea	r9, [r8 + rax*4 + 8]
0x4c01:	movdqa	xmm0, xmmword ptr [rip + 0x2167c7]
0x4c09:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x4c0e:	movdqa	xmm0, xmmword ptr [rip + 0x2167ca]
0x4c16:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x4c1b:	mov	edx, dword ptr [r9]
0x4c1e:	mov	eax, edx
0x4c20:	shr	eax, cl
0x4c22:	not	eax
0x4c24:	and	eax, 1
0x4c27:	shl	eax, cl
0x4c29:	mov	rcx, r8
0x4c2c:	xor	eax, edx
0x4c2e:	mov	rdx, rsi
0x4c31:	mov	rsi, rdi
0x4c34:	mov	dword ptr [r9], eax
0x4c37:	xor	edi, edi
0x4c39:	call	0x4530


0x4bb0:	mov	rcx, rdx
0x4bb3:	mov	rdx, rsi
0x4bb6:	mov	esi, edi
0x4bb8:	xor	edi, edi
0x4bba:	jmp	0x4b10


0x4ba0:	mov	rdx, rsi
0x4ba3:	mov	esi, edi
0x4ba5:	xor	edi, edi
0x4ba7:	jmp	0x4a80


0x4b10:	sub	rsp, 0x48
0x4b14:	mov	rax, rdx
0x4b17:	mov	rdx, rcx
0x4b1a:	mov	rcx, qword ptr fs:[0x28]
0x4b23:	mov	qword ptr [rsp + 0x38], rcx
0x4b28:	xor	ecx, ecx
0x4b2a:	cmp	esi, 0xa
0x4b2d:	je	0x4b90


0x4a80:	sub	rsp, 0x48
0x4a84:	mov	rax, rdx
0x4a87:	mov	rdx, qword ptr fs:[0x28]
0x4a90:	mov	qword ptr [rsp + 0x38], rdx
0x4a95:	xor	edx, edx
0x4a97:	cmp	esi, 0xa
0x4a9a:	je	0x4b04


0x4a60:	lea	rcx, [rip + 0x216959]
0x4a67:	mov	rdx, rsi
0x4a6a:	mov	rsi, rdi
0x4a6d:	xor	edi, edi
0x4a6f:	jmp	0x4530


0x4a40:	lea	rcx, [rip + 0x216979]
0x4a47:	mov	rsi, rdi
0x4a4a:	mov	rdx, -1
0x4a51:	xor	edi, edi
0x4a53:	jmp	0x4530


0x4a30:	lea	rcx, [rip + 0x216989]
0x4a37:	jmp	0x4530


0x4a10:	lea	rcx, [rip + 0x2169a9]
0x4a17:	mov	rdx, -1
0x4a1e:	jmp	0x4530


0x4970:	mov	eax, dword ptr [rip + 0x2146e2]
0x4976:	push	r12
0x4978:	mov	r12, qword ptr [rip + 0x2146e1]
0x497f:	push	rbp
0x4980:	push	rbx
0x4981:	cmp	eax, 1
0x4984:	jle	0x49b1


0x4960:	mov	rcx, rdx
0x4963:	xor	edx, edx
0x4965:	jmp	0x4870


0x4870:	push	r15
0x4872:	push	r14
0x4874:	lea	rax, [rip + 0x216b45]
0x487b:	push	r13
0x487d:	push	r12
0x487f:	mov	r12, rdx
0x4882:	push	rbp
0x4883:	push	rbx
0x4884:	mov	rbx, rcx
0x4887:	mov	r14, rdi
0x488a:	mov	r15, rsi
0x488d:	sub	rsp, 0x38
0x4891:	test	rcx, rcx
0x4894:	cmove	rbx, rax
0x4898:	xor	ebp, ebp
0x489a:	call	0x18a0


0x47f0:	push	r15
0x47f2:	push	r14
0x47f4:	lea	rax, [rip + 0x216bc5]
0x47fb:	push	r13
0x47fd:	push	r12
0x47ff:	mov	r13, rdi
0x4802:	push	rbp
0x4803:	push	rbx
0x4804:	mov	rbx, r8
0x4807:	mov	r14, rsi
0x480a:	mov	r15, rdx
0x480d:	sub	rsp, 0x18
0x4811:	test	r8, r8
0x4814:	cmove	rbx, rax
0x4818:	mov	qword ptr [rsp + 8], rcx
0x481d:	call	0x18a0


0x47c0:	lea	rax, [rip + 0x216bf9]
0x47c7:	test	rdi, rdi
0x47ca:	cmove	rdi, rax
0x47ce:	test	rsi, rsi
0x47d1:	mov	dword ptr [rdi], 0xa
0x47d7:	je	0x47e7


0x47a0:	lea	rax, [rip + 0x216c19]
0x47a7:	test	rdi, rdi
0x47aa:	cmove	rdi, rax
0x47ae:	mov	eax, dword ptr [rdi + 4]
0x47b1:	mov	dword ptr [rdi + 4], esi
0x47b4:	ret	


0x4760:	lea	rax, [rip + 0x216c59]
0x4767:	test	rdi, rdi
0x476a:	mov	ecx, esi
0x476c:	cmove	rdi, rax
0x4770:	mov	eax, esi
0x4772:	and	ecx, 0x1f
0x4775:	shr	al, 5
0x4778:	movzx	eax, al
0x477b:	lea	rdi, [rdi + rax*4 + 8]
0x4780:	mov	esi, dword ptr [rdi]
0x4782:	mov	eax, esi
0x4784:	shr	eax, cl
0x4786:	xor	edx, eax
0x4788:	and	eax, 1
0x478b:	and	edx, 1
0x478e:	shl	edx, cl
0x4790:	xor	edx, esi
0x4792:	mov	dword ptr [rdi], edx
0x4794:	ret	


0x4740:	lea	rax, [rip + 0x216c79]
0x4747:	test	rdi, rdi
0x474a:	cmove	rdi, rax
0x474e:	mov	dword ptr [rdi], esi
0x4750:	ret	


0x4720:	lea	rax, [rip + 0x216c99]
0x4727:	test	rdi, rdi
0x472a:	cmove	rdi, rax
0x472e:	mov	eax, dword ptr [rdi]
0x4730:	ret	


0x46e0:	push	r12
0x46e2:	push	rbp
0x46e3:	push	rbx
0x46e4:	mov	rbx, rdi
0x46e7:	call	0x18a0


0x4530:	push	r15
0x4532:	push	r14
0x4534:	movsxd	r15, edi
0x4537:	push	r13
0x4539:	push	r12
0x453b:	mov	r14, rdx
0x453e:	push	rbp
0x453f:	push	rbx
0x4540:	mov	rbp, rcx
0x4543:	sub	rsp, 0x28
0x4547:	mov	qword ptr [rsp + 8], rsi
0x454c:	call	0x18a0


0x32f0:	push	r15
0x32f2:	push	r14
0x32f4:	mov	r15d, r8d
0x32f7:	push	r13
0x32f9:	push	r12
0x32fb:	mov	r14, rdi
0x32fe:	push	rbp
0x32ff:	push	rbx
0x3300:	mov	ebx, r9d
0x3303:	mov	r13, rsi
0x3306:	mov	rbp, rcx
0x3309:	and	ebx, 2
0x330c:	sub	rsp, 0xb8
0x3313:	mov	rax, qword ptr [rsp + 0xf0]
0x331b:	mov	qword ptr [rsp + 0x10], rdx
0x3320:	mov	dword ptr [rsp + 8], r8d
0x3325:	mov	dword ptr [rsp + 0x78], r9d
0x332a:	mov	qword ptr [rsp + 0x20], rax
0x332f:	mov	rax, qword ptr [rsp + 0xf8]
0x3337:	mov	qword ptr [rsp + 0x68], rax
0x333c:	mov	rax, qword ptr [rsp + 0x100]
0x3344:	mov	qword ptr [rsp + 0x60], rax
0x3349:	mov	rax, qword ptr fs:[0x28]
0x3352:	mov	qword ptr [rsp + 0xa8], rax
0x335a:	xor	eax, eax
0x335c:	call	0x1970


0x3200:	push	rbp
0x3201:	push	rbx
0x3202:	mov	rbp, rdi
0x3205:	mov	ebx, esi
0x3207:	sub	rsp, 8
0x320b:	call	0x13d10


0x3160:	test	rdi, rdi
0x3163:	push	rbx
0x3164:	je	0x31dd


0x3060:	push	r15
0x3062:	push	r14
0x3064:	mov	r15, rdx
0x3067:	push	r13
0x3069:	push	r12
0x306b:	mov	r12, rdi
0x306e:	push	rbp
0x306f:	push	rbx
0x3070:	mov	rbp, rsi
0x3073:	sub	rsp, 0x18
0x3077:	call	0x13ba0


0x2fb0:	push	rbp
0x2fb1:	push	rbx
0x2fb2:	sub	rsp, 8
0x2fb6:	mov	rdi, qword ptr [rip + 0x2160cb]
0x2fbd:	call	0x13b20


0x2fa0:	mov	byte ptr [rip + 0x2182f1], dil
0x2fa7:	ret	


0x2f90:	mov	qword ptr [rip + 0x218309], rdi
0x2f97:	ret	


0x2bd0:	push	r13
0x2bd2:	push	r12
0x2bd4:	mov	edx, 5
0x2bd9:	push	rbp
0x2bda:	push	rbx
0x2bdb:	mov	ebp, edi
0x2bdd:	sub	rsp, 0x88
0x2be4:	mov	rbx, qword ptr [rip + 0x2186bd]
0x2beb:	mov	rax, qword ptr fs:[0x28]
0x2bf4:	mov	qword ptr [rsp + 0x78], rax
0x2bf9:	xor	eax, eax
0x2bfb:	test	edi, edi
0x2bfd:	je	0x2c2d


0x2630:	push	r15
0x2632:	push	r14
0x2634:	mov	r14, rdx
0x2637:	push	r13
0x2639:	push	r12
0x263b:	push	rbp
0x263c:	push	rbx
0x263d:	sub	rsp, 0x38
0x2641:	mov	r15, qword ptr [rip + 0x218c48]
0x2648:	mov	rbx, qword ptr [rip + 0x218c19]
0x264f:	mov	dword ptr [rsp + 0x1c], edi
0x2653:	mov	qword ptr [rsp + 0x28], rsi
0x2658:	lea	rax, [r15 + 1]
0x265c:	movzx	ebp, byte ptr [r15]
0x2660:	mov	qword ptr [rsp + 8], rax
0x2665:	mov	rax, qword ptr [rip + 0x218c0c]
0x266c:	mov	qword ptr [rsp + 0x20], rax
0x2671:	lea	r13, [rax - 1]
0x2675:	mov	rax, rdx
0x2678:	xor	edx, edx
0x267a:	div	rbx
0x267d:	test	rdx, rdx
0x2680:	jne	0x2b19


0x2530:	push	r15
0x2532:	push	r14
0x2534:	push	r13
0x2536:	push	r12
0x2538:	push	rbp
0x2539:	push	rbx
0x253a:	sub	rsp, 8
0x253e:	test	rdi, rdi
0x2541:	mov	rbx, qword ptr [rip + 0x218b98]
0x2548:	je	0x25f0


0x2520:	push	rbp
0x2521:	mov	rbp, rsp
0x2524:	pop	rbp
0x2525:	jmp	0x2490


0x24e0:	cmp	byte ptr [rip + 0x216be1], 0
0x24e7:	jne	0x2518


0x2490:	lea	rdi, [rip + 0x216be9]
0x2497:	lea	rsi, [rip + 0x216be2]
0x249e:	push	rbp
0x249f:	sub	rsi, rdi
0x24a2:	mov	rbp, rsp
0x24a5:	sar	rsi, 3
0x24a9:	mov	rax, rsi
0x24ac:	shr	rax, 0x3f
0x24b0:	add	rsi, rax
0x24b3:	sar	rsi, 1
0x24b6:	je	0x24d0


0x2450:	lea	rdi, [rip + 0x216c29]
0x2457:	push	rbp
0x2458:	lea	rax, [rip + 0x216c21]
0x245f:	cmp	rax, rdi
0x2462:	mov	rbp, rsp
0x2465:	je	0x2480


0x2420:	xor	ebp, ebp
0x2422:	mov	r9, rdx
0x2425:	pop	rsi
0x2426:	mov	rdx, rsp
0x2429:	and	rsp, 0xfffffffffffffff0
0x242d:	push	rax
0x242e:	push	rsp
0x242f:	lea	r8, [rip + 0x11cda]
0x2436:	lea	rcx, [rip + 0x11c63]
0x243d:	lea	rdi, [rip - 0x7b4]
0x2444:	call	qword ptr [rip + 0x216b8e]


0x1c90:	push	r15
0x1c92:	push	r14
0x1c94:	push	r13
0x1c96:	push	r12
0x1c98:	lea	r12, [rip + 0x216e01]
0x1c9f:	push	rbp
0x1ca0:	push	rbx
0x1ca1:	mov	ebp, edi
0x1ca3:	mov	rbx, rsi
0x1ca6:	sub	rsp, 0x28
0x1caa:	mov	rdi, qword ptr [rsi]
0x1cad:	call	0x3160


0x1838:	sub	rsp, 8
0x183c:	mov	rax, qword ptr [rip + 0x21779d]
0x1843:	test	rax, rax
0x1846:	je	0x184a


0x1bf0:	jmp	qword ptr [rip + 0x217392]


0x1407a:	mov	rdi, rbx
0x1407d:	pop	rbx
0x1407e:	jmp	0x1ae0


0x14069:	call	0x1b10


0x14032:	mov	rax, qword ptr [rsp + 0x10]
0x14037:	xor	esi, esi
0x14039:	mov	edx, dword ptr [rax + 0x10]
0x1403c:	xor	eax, eax
0x1403e:	call	0x1900


0x13e31:	cmp	esi, 0x406
0x13e37:	jne	0x13e80


0x1aa0:	jmp	qword ptr [rip + 0x21743a]


0x1af0:	jmp	qword ptr [rip + 0x217412]


0x1b50:	jmp	qword ptr [rip + 0x2173e2]


0x13c61:	call	0x13c90


0x13c82:	add	rsp, 8
0x13c86:	mov	eax, ebx
0x13c88:	pop	rbx
0x13c89:	pop	rbp
0x13c8a:	pop	r12
0x13c8c:	pop	r13
0x13c8e:	ret	


0x1980:	jmp	qword ptr [rip + 0x2174ca]


0x13bbc:	test	dl, dl
0x13bbe:	je	0x13bfa


0x18e0:	jmp	qword ptr [rip + 0x21751a]


0x13ad5:	and	byte ptr [rdi + 0x38], 0xf9
0x13ad9:	mov	qword ptr [rsi], 0
0x13ae0:	mov	qword ptr [rsi + 0x10], 0
0x13ae8:	mov	qword ptr [rsi + 8], 0
0x13af0:	ret	


0x13af8:	movzx	eax, byte ptr [rdi + 0x38]
0x13afc:	and	eax, 0xfffffff9
0x13aff:	or	eax, 2
0x13b02:	mov	byte ptr [rdi + 0x38], al
0x13b05:	mov	qword ptr [rsi], rdx
0x13b08:	mov	qword ptr [rsi + 8], rcx
0x13b0c:	mov	qword ptr [rsi + 0x10], r8
0x13b10:	ret	


0x139bd:	push	r13
0x139bf:	push	r12
0x139c1:	mov	r13, rdx
0x139c4:	push	rbp
0x139c5:	push	rbx
0x139c6:	mov	r12, rcx
0x139c9:	mov	ebx, r8d
0x139cc:	mov	rbp, rdi
0x139cf:	sub	rsp, 0x18
0x139d3:	test	r8b, 4
0x139d7:	jne	0x13a28


0x13a48:	mov	eax, 2
0x13a4d:	ret	


0x13971:	mov	rdi, qword ptr [rbx + 0x20]
0x13975:	mov	qword ptr [rbx], 0
0x1397c:	mov	qword ptr [rbx + 8], 0
0x13984:	call	0x1880


0x1396c:	call	0x7150


0x138df:	lea	rax, [rip + 0x1c7a]
0x138e6:	movsxd	rdi, edi
0x138e9:	lea	rsi, [rip + 0x1d10]
0x138f0:	mov	rbp, rdx
0x138f3:	mov	edx, 5
0x138f8:	mov	r12, rcx
0x138fb:	add	rsi, qword ptr [rax + rdi*8]
0x138ff:	xor	edi, edi
0x13901:	call	0x1960


0x13940:	call	0x1890


0x1ac0:	jmp	qword ptr [rip + 0x21742a]


0x136d7:	test	rbx, rbx
0x136da:	js	0x137a0


0x137a0:	mov	rbx, -2
0x137a7:	jmp	0x1373a


0x13580:	mov	r12, -1
0x13587:	jmp	0x13352


0x1324a:	cmp	rcx, rdx
0x1324d:	jg	0x13580


0x1318d:	mov	rcx, rbp
0x13190:	mov	rdi, rbx
0x13193:	mov	rsi, qword ptr [r12 + 0x48]
0x13198:	lea	rdx, [rsi + 0x18]
0x1319c:	add	rsi, 0x10
0x131a0:	call	0xb6a0


0x1318a:	rep stosq	qword ptr [rdi], rax


0x12e36:	mov	rdi, rbx
0x12e39:	mov	esi, 0xe8
0x12e3e:	call	0x1b30


0x12042:	lea	rdi, [rbx + 8]
0x12046:	mov	rax, qword ptr [rsp + 8]
0x1204b:	mov	rcx, rbx
0x1204e:	and	rdi, 0xfffffffffffffff8
0x12052:	sub	rcx, rdi
0x12055:	mov	qword ptr [rax + 0x10], 0xe8
0x1205d:	xor	eax, eax
0x1205f:	add	ecx, 0xe8
0x12065:	mov	qword ptr [rbx], 0
0x1206c:	mov	qword ptr [rbx + 0xe0], 0
0x12077:	shr	ecx, 3
0x1207a:	rep stosq	qword ptr [rdi], rax


0x10828:	mov	rbp, rsi
0x1082b:	lea	rsi, [rip + 0x4b6e]
0x10832:	movzx	edx, cl
0x10835:	mov	r14, rdi
0x10838:	movsxd	rax, dword ptr [rsi + rdx*4]
0x1083c:	add	rax, rsi
0x1083f:	jmp	rax


0x108e0:	mov	qword ptr [rsp + 0x28], 0
0x108e9:	nop	dword ptr [rax]
0x108f0:	mov	rdi, qword ptr [rsp + 0x118]
0x108f8:	xor	rdi, qword ptr fs:[0x28]
0x10901:	mov	rax, qword ptr [rsp + 0x28]
0x10906:	jne	0x11c7e


0x100e0:	mov	byte ptr [rdi + 8], 2
0x100e4:	mov	rdi, qword ptr [rsp + 0x28]
0x100e9:	xor	rdi, qword ptr fs:[0x28]
0x100f2:	jne	0x10718


0x1004f:	movzx	r13d, byte ptr [rdi + 0xa]
0x10054:	mov	r15, rdx
0x10057:	mov	rdx, qword ptr [rsi + 8]
0x1005b:	mov	rbx, rsi
0x1005e:	movzx	r12d, byte ptr [rdx + r14]
0x10063:	and	r13d, 0xffffff9f
0x10067:	mov	byte ptr [rdi + 0xa], r13b
0x1006b:	mov	eax, dword ptr [rsi + 0x90]
0x10071:	mov	byte ptr [rdi], r12b
0x10074:	cmp	eax, 1
0x10077:	jle	0x10110


0xfe48:	movzx	eax, byte ptr [rbp + 8]
0xfe4c:	add	r11, r12
0xfe4f:	mov	qword ptr [r10 + 0x48], r11
0xfe53:	mov	edx, eax
0xfe55:	and	edx, 0xfffffffb
0xfe58:	cmp	dl, 0x1a
0xfe5b:	je	0xfe80


0xfdf5:	mov	rsi, r12
0xfdf8:	mov	rdi, r10
0xfdfb:	call	0x7370


0xf828:	lea	r14, [rbp*8]
0xf830:	add	r14, qword ptr [rsi]
0xf833:	test	rcx, rcx
0xf836:	jne	0xf8f0


0xf5d9:	lea	rdi, [rdx + 8]
0xf5dd:	test	rcx, rcx
0xf5e0:	mov	qword ptr [rsp + 0x10], rdi
0xf5e5:	jne	0xf638


0xdeab:	rep stosq	qword ptr [rdi], rax


0xd95a:	mov	qword ptr [r14], rdx
0xd95d:	mov	rbp, rdx
0xd960:	mov	qword ptr [rsi + 0xc0], r12
0xd967:	cmp	qword ptr [r15 + 0x98], 0
0xd96f:	jne	0xda98


0xd9a0:	mov	rax, qword ptr [r14]
0xd9a3:	test	rax, rax
0xd9a6:	je	0xda88


0xd390:	xor	eax, eax
0xd392:	nop	word ptr [rax + rax]
0xd398:	mov	rbx, qword ptr [rsp + 0xa8]
0xd3a0:	xor	rbx, qword ptr fs:[0x28]
0xd3a9:	jne	0xd8fc


0xd068:	lea	rax, [r15*8]
0xd070:	mov	r14, rdi
0xd073:	mov	qword ptr [rsp], 0
0xd07b:	mov	qword ptr [rsp + 8], r15
0xd080:	mov	qword ptr [rsp + 0x60], rax
0xd085:	lea	rax, [rsp + 0x90]
0xd08d:	mov	qword ptr [rsp + 0x68], rax
0xd092:	lea	rax, [rsp + 0x8c]
0xd09a:	mov	qword ptr [rsp + 0x78], rax
0xd09f:	jmp	0xd0e7


0xcd8d:	mov	qword ptr [rbp - 0x88], 0
0xcd98:	jmp	0xc60d


0xc5eb:	mov	edi, 0x60
0xc5f0:	call	0x1ac0


0xbeac:	mov	rax, qword ptr [rsp + 0x60]
0xbeb1:	mov	rdx, qword ptr [r15 + 0xb8]
0xbeb8:	mov	rcx, qword ptr [r15 + 0x48]
0xbebc:	mov	r12, qword ptr [rax]
0xbebf:	mov	r14, qword ptr [rax + 0x10]
0xbec3:	mov	qword ptr [rsp + 0x68], rdx
0xbec8:	mov	qword ptr [rsp + 0x70], rcx
0xbecd:	mov	edx, dword ptr [r15 + 0xa0]
0xbed4:	test	r12, r12
0xbed7:	mov	qword ptr [r15 + 0xb8], r14
0xbede:	je	0xc2c0


0xc4c6:	lea	r12, [rax + 1]
0xc4ca:	movabs	rax, 0x7fffffffffffffff
0xc4d4:	sub	rax, r13
0xc4d7:	cmp	rax, r12
0xc4da:	jl	0xc54b


0xbd00:	mov	rdx, qword ptr [rcx + 8]
0xbd04:	lea	rsi, [rdx + r8]
0xbd08:	movzx	eax, byte ptr [rsi]
0xbd0b:	cmp	al, 0xc1
0xbd0d:	jbe	0xbcc0


0xbbf1:	cmp	dword ptr [rcx + 0x90], 1
0xbbf8:	je	0xbcc0


0xb6ec:	mov	rax, qword ptr [rsp + 0x30]
0xb6f1:	mov	rax, qword ptr [rax + 0x18]
0xb6f5:	mov	rbx, rax
0xb6f8:	mov	qword ptr [rsp], rax
0xb6fc:	shr	rbx, 0x16
0xb700:	and	ebx, 1
0xb703:	mov	rax, qword ptr [rsp + 0x20]
0xb708:	cmp	qword ptr [rax], 0
0xb70c:	jle	0xbb1d


0xb703:	mov	rax, qword ptr [rsp + 0x20]
0xb708:	cmp	qword ptr [rax], 0
0xb70c:	jle	0xbb1d


0x1a70:	jmp	qword ptr [rip + 0x217452]


0xac68:	mov	rcx, qword ptr [r13]
0xac6c:	cmp	qword ptr [r8], rcx
0xac6f:	mov	rax, qword ptr [rdx]
0xac72:	je	0xad89


0xac43:	lea	rdi, [rip + 0xa34d]
0xac4a:	mov	ecx, 6
0xac4f:	mov	rsi, r9
0xac52:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xaba5:	lea	rcx, [rip + 0xa934]
0xabac:	lea	rsi, [rip + 0xa36d]
0xabb3:	lea	rdi, [rip + 0xa3ce]
0xabba:	mov	edx, 0x555
0xabbf:	call	0x1a00


0xab43:	lea	rbx, [rax + rax*2]
0xab47:	mov	rax, qword ptr [rsi]
0xab4a:	mov	r12, rsi
0xab4d:	shl	rcx, 4
0xab51:	mov	rbp, r9
0xab54:	mov	rdi, r8
0xab57:	shl	rbx, 4
0xab5b:	add	rax, rbx
0xab5e:	mov	rsi, qword ptr [rax]
0xab61:	mov	qword ptr [rdx], rsi
0xab64:	mov	rsi, qword ptr [rax + 0x10]
0xab68:	mov	rdx, rcx
0xab6b:	call	0x1a90


0xab22:	pop	rbx
0xab23:	mov	rdi, qword ptr [rbp + 0x10]
0xab27:	pop	rbp
0xab28:	pop	r12
0xab2a:	jmp	0x1880


0xaaed:	xor	ebx, ebx
0xaaef:	xor	r12d, r12d
0xaaf2:	nop	word ptr [rax + rax]
0xaaf8:	mov	rax, qword ptr [rbp + 0x10]
0xaafc:	add	r12, 1
0xab00:	mov	rdi, qword ptr [rax + rbx + 0x28]
0xab05:	call	0x1880


0xaab8:	mov	rax, qword ptr [rsi + 8]
0xaabc:	mov	rdx, qword ptr [rax + 0x18]
0xaac0:	mov	rax, qword ptr [rax + 0x38]
0xaac4:	mov	qword ptr [rsi + 0x18], rdx
0xaac8:	mov	qword ptr [rsi + 0x38], rax
0xaacc:	xor	eax, eax
0xaace:	ret	


0xaa56:	push	rbp
0xaa57:	push	rbx
0xaa58:	mov	rbx, rsi
0xaa5b:	mov	rbp, rdi
0xaa5e:	sub	rsp, 8
0xaa62:	mov	qword ptr [rbx + 0x18], rsi
0xaa66:	mov	rdx, qword ptr [rbx + 0x30]
0xaa6a:	mov	rsi, qword ptr [rsi + 0x28]
0xaa6e:	call	0x6bc0


0x9ea2:	xor	edi, edi
0x9ea4:	jmp	0x9e61


0x9cc1:	lea	rax, [rsp + 0x20]
0x9cc6:	mov	r12, rdi
0x9cc9:	mov	r13, rsi
0x9ccc:	xor	ebx, ebx
0x9cce:	mov	qword ptr [rsp + 0x18], rax
0x9cd3:	jmp	0x9d2d


0x9566:	test	rbp, rbp
0x9569:	je	0x95ce


0x9506:	cmp	dword ptr [rdi + 0x90], 1
0x950d:	jg	0x9640


0x93b8:	mov	r8, qword ptr [rsi]
0x93bb:	movzx	eax, cl
0x93be:	sar	rax, 6
0x93c2:	mov	r8, qword ptr [r8 + rax*8]
0x93c6:	xor	eax, eax
0x93c8:	bt	r8, rcx
0x93cc:	jb	0x9340


0x9304:	jbe	0x93a0


0x9260:	mov	eax, dword ptr [rbp + 0x70]
0x9263:	add	rsp, 8
0x9267:	pop	rbx
0x9268:	pop	rbp
0x9269:	ret	


0x920e:	cmp	qword ptr [rdi + 0x58], rsi
0x9212:	je	0x92b8


0x9190:	xor	eax, eax
0x9192:	add	rsp, 0x28
0x9196:	pop	rbx
0x9197:	pop	rbp
0x9198:	pop	r12
0x919a:	pop	r13
0x919c:	pop	r14
0x919e:	pop	r15
0x91a0:	ret	


0x90cf:	mov	r14, rdx
0x90d2:	mov	r12, rsi
0x90d5:	mov	r15, rdi
0x90d8:	xor	ebx, ebx
0x90da:	jmp	0x90ee


0x8d52:	lea	rax, [rsi + rdx]
0x8d56:	mov	r8, qword ptr [rbx + 0xd8]
0x8d5d:	mov	rcx, rax
0x8d60:	shr	rcx, 0x3f
0x8d64:	add	rcx, rax
0x8d67:	sar	rcx, 1
0x8d6a:	lea	rax, [rcx + rcx*4]
0x8d6e:	cmp	r12, qword ptr [r8 + rax*8 + 8]
0x8d73:	jle	0x8da2


0x8da7:	cmp	rdi, rsi
0x8daa:	jle	0x8dcd


0x8ce6:	xor	eax, eax
0x8ce8:	mov	rcx, qword ptr [rsp + 0x38]
0x8ced:	xor	rcx, qword ptr fs:[0x28]
0x8cf6:	jne	0x8d07


0x8c57:	lea	rax, [rsp + 0x1c]
0x8c5c:	mov	r14, rdi
0x8c5f:	mov	rbx, rsi
0x8c62:	mov	r12, rdx
0x8c65:	mov	rbp, rcx
0x8c68:	xor	r15d, r15d
0x8c6b:	lea	r13, [rsp + 0x20]
0x8c70:	mov	qword ptr [rsp + 8], rax
0x8c75:	jmp	0x8ccc


0x8c20:	mov	dword ptr [rdi], 0
0x8c26:	xor	ebx, ebx
0x8c28:	jmp	0x8bbf


0x8a4b:	test	rbp, rbp
0x8a4e:	jle	0x8a6c


0x8a0f:	mov	dword ptr [rdi], 0
0x8a15:	xor	r14d, r14d
0x8a18:	jmp	0x881c


0x878b:	mov	r8d, ecx
0x878e:	test	r10, r10
0x8791:	lea	r12, [r8 + r10]
0x8795:	jle	0x87ac


0x86c5:	test	rdx, rdx
0x86c8:	je	0x86d1


0x8621:	test	rdx, rdx
0x8624:	mov	r13, qword ptr [rsi + 8]
0x8628:	je	0x86c0


0x85d0:	pxor	xmm0, xmm0
0x85d4:	mov	qword ptr [rdi + 0x10], 0
0x85dc:	xor	eax, eax
0x85de:	movups	xmmword ptr [rdi], xmm0
0x85e1:	pop	rbx
0x85e2:	pop	rbp
0x85e3:	pop	r12
0x85e5:	ret	


0x8595:	mov	rbx, rdi
0x8598:	mov	qword ptr [rdi], rax
0x859b:	lea	rdi, [rax*8]
0x85a3:	mov	rbp, rsi
0x85a6:	call	0x1ac0


0x8513:	mov	rdx, qword ptr [rbx + 0x10]
0x8517:	test	rdx, rdx
0x851a:	je	0x8522


0x850d:	cmp	byte ptr [rdx + 0x30], 0x11
0x8511:	je	0x8560


0x8448:	lea	rax, [rbx + 0x70]
0x844c:	lea	r14, [rsp + 0x20]
0x8451:	sub	rbx, -0x80
0x8455:	xor	ecx, ecx
0x8457:	xor	edx, edx
0x8459:	mov	rsi, rbx
0x845c:	mov	r15, rax
0x845f:	mov	r8, r14
0x8462:	mov	rdi, rax
0x8465:	mov	byte ptr [rsp + 0x28], 8
0x846a:	mov	qword ptr [rsp + 8], rax
0x846f:	call	0x80e0


0x82d7:	test	rbp, rbp
0x82da:	je	0x8350


0x8168:	mov	edi, 0x3c8
0x816d:	mov	qword ptr [rsp + 0x18], r8
0x8172:	mov	qword ptr [rsp + 0x10], rcx
0x8177:	mov	qword ptr [rsp + 8], rdx
0x817c:	mov	qword ptr [rsp], rsi
0x8180:	call	0x1ac0


0x80ef:	movsxd	r9, eax
0x80f2:	lea	r10d, [rax + 1]
0x80f6:	mov	rdi, qword ptr [rdi]
0x80f9:	mov	rax, r9
0x80fc:	shl	rax, 6
0x8100:	add	rax, 8
0x8104:	shl	r9, 6
0x8108:	mov	dword ptr [rsi], r10d
0x810b:	add	rax, rdi
0x810e:	lea	rsi, [rdi + r9]
0x8112:	mov	qword ptr [rsi + 8], 0
0x811a:	mov	qword ptr [rsi + 0x10], rdx
0x811e:	lea	rdi, [rsi + 0x20]
0x8122:	mov	qword ptr [rsi + 0x18], rcx
0x8126:	movdqu	xmm0, xmmword ptr [r8]
0x812b:	movups	xmmword ptr [rsi + 0x30], xmm0
0x812f:	and	byte ptr [rdi + 0x1a], 0xf3
0x8133:	test	rdx, rdx
0x8136:	mov	qword ptr [rsi + 0x20], 0
0x813e:	mov	qword ptr [rsi + 0x28], 0
0x8146:	mov	qword ptr [rsi + 0x40], -1
0x814e:	je	0x8153


0x7ff8:	ret	


0x7f3f:	mov	r11, qword ptr [rdx + 8]
0x7f43:	test	r11, r11
0x7f46:	je	0x7ff8


0x7a38:	xor	eax, eax
0x7a3a:	ret	


0x7949:	mov	rdx, qword ptr [rsi + 8]
0x794d:	test	rdx, rdx
0x7950:	je	0x7a38


0x7703:	lea	rax, [rbx + rbp]
0x7707:	mov	r13, qword ptr [rdi + 0xd8]
0x770e:	mov	r10, rax
0x7711:	shr	r10, 0x3f
0x7715:	add	r10, rax
0x7718:	sar	r10, 1
0x771b:	lea	rax, [r10 + r10*4]
0x771f:	cmp	r8, qword ptr [r13 + rax*8 + 8]
0x7724:	jle	0x7756


0x775b:	cmp	r15, rbx
0x775e:	jle	0x7900


0x76c0:	mov	qword ptr [rdx + 0x20], rsi
0x76c4:	xor	eax, eax
0x76c6:	ret	


0x767c:	cmp	al, 0x10
0x767e:	je	0x76a8


0x7640:	mov	rax, qword ptr [rdi + 0xe0]
0x7647:	test	rax, rax
0x764a:	je	0x75ec


0x75e8:	cmp	al, 0x11
0x75ea:	je	0x75f0


0x75d2:	ret	


0x75a8:	sub	rax, 1
0x75ac:	cmp	rdx, rax
0x75af:	mov	qword ptr [rdi], rax
0x75b2:	jge	0x75d2


0x7465:	ret	


0x7427:	mov	r8, qword ptr [rsi]
0x742a:	sub	rdi, 1
0x742e:	xor	esi, esi
0x7430:	cmp	rsi, rdi
0x7433:	jae	0x745d


0x73d0:	lea	rax, [rdx - 1]
0x73d4:	lea	rdx, [rax*8]
0x73dc:	jmp	0x73fd


0x73cc:	ret	


0x737d:	mov	rdx, qword ptr [rdi + 0x10]
0x7381:	lea	rdi, [rax*4]
0x7389:	cmp	dword ptr [rdx + rax*4], -1
0x738d:	jne	0x73b8


0x73b8:	mov	eax, 1
0x73bd:	ret	


0x7349:	pop	rbx
0x734a:	mov	qword ptr [r14 + 0xe8], 0
0x7355:	mov	qword ptr [r14 + 0xc8], 0
0x7360:	pop	rbp
0x7361:	pop	r12
0x7363:	pop	r13
0x7365:	pop	r14
0x7367:	ret	


0x72c9:	xor	r13d, r13d
0x72cc:	nop	dword ptr [rax]
0x72d0:	mov	rax, qword ptr [r14 + 0xf8]
0x72d7:	mov	r12, qword ptr [rax + r13*8]
0x72db:	cmp	qword ptr [r12 + 0x20], 0
0x72e1:	jle	0x730d


0x718e:	mov	rdi, qword ptr [r12 + 0x18]
0x7193:	call	0x1880


0x7163:	cmp	qword ptr [r12 + 0x10], 0
0x7169:	je	0x718e


0x1880:	jmp	qword ptr [rip + 0x21754a]


0x7020:	mov	rax, qword ptr [r14 + 0x18]
0x7024:	lea	rbx, [r13 + r13*2]
0x7029:	lea	r15, [r9*8]
0x7031:	mov	edx, ebp
0x7033:	shl	rbx, 3
0x7037:	mov	r9, qword ptr [rax + r9*8]
0x703b:	mov	qword ptr [rdi + rbx + 8], 0
0x7044:	mov	rdi, r14
0x7047:	mov	rsi, r9
0x704a:	mov	qword ptr [rsp], r9
0x704e:	call	0x6d90


0x6e6d:	lea	r12, [r9 + r9*2]
0x6e71:	shl	r12, 3
0x6e75:	lea	rsi, [rdi + r12]
0x6e79:	mov	rcx, qword ptr [rsi + 8]
0x6e7d:	test	rcx, rcx
0x6e80:	je	0x7079


0x6be5:	mov	r12, qword ptr [rdi + 0x18]
0x6be9:	mov	rbp, qword ptr [rdi + 0x28]
0x6bed:	mov	rax, rsi
0x6bf0:	mov	ecx, edx
0x6bf2:	shl	rax, 4
0x6bf6:	add	rax, qword ptr [rbx]
0x6bf9:	and	ecx, 0xfffc00ff
0x6bff:	mov	qword ptr [rax + 8], rdx
0x6c03:	mov	dword ptr [rax + 8], ecx
0x6c06:	xor	ecx, ecx
0x6c08:	cmp	dl, 6
0x6c0b:	mov	qword ptr [rax], r14
0x6c0e:	sete	cl
0x6c11:	cmp	dl, 5
0x6c14:	jne	0x6c22


0x6c90:	lea	r13, [rbp + rbp]
0x6c95:	movabs	rax, 0xaaaaaaaaaaaaaaa
0x6c9f:	cmp	r13, rax
0x6ca2:	ja	0x6d82


0x6b90:	mov	rdi, qword ptr [rdi]
0x6b93:	jmp	0x6b40


0x6b7d:	cmp	eax, 3
0x6b80:	je	0x6b88


0x6aca:	cmp	rax, qword ptr [rdi + 0x58]
0x6ace:	jge	0x6af0


0x6af0:	mov	rax, qword ptr [rbx + 0x30]
0x6af4:	cmp	rax, rbp
0x6af7:	jg	0x6adf


0x697d:	mov	rdx, qword ptr [rdi + 0x58]
0x6981:	add	rax, rax
0x6984:	movsxd	rsi, esi
0x6987:	mov	rbx, rdi
0x698a:	cmp	rax, rdx
0x698d:	cmovg	rax, rdx
0x6991:	cmp	rax, rsi
0x6994:	cmovge	rsi, rax
0x6998:	call	0x5dd0


0x6a88:	mov	ebp, 0xc
0x6a8d:	add	rsp, 8
0x6a91:	mov	eax, ebp
0x6a93:	pop	rbx
0x6a94:	pop	rbp
0x6a95:	ret	


0x6381:	cmp	qword ptr [rdi + 0x78], 0
0x6386:	je	0x6510


0x638c:	mov	r13, qword ptr [r14 + 0x38]
0x6390:	cmp	r15, rbx
0x6393:	jl	0x63d0


0x6234:	mov	rax, qword ptr [rsp + 0x58]
0x6239:	xor	rax, qword ptr fs:[0x28]
0x6242:	mov	qword ptr [rbx + 0x30], rbp
0x6246:	mov	qword ptr [rbx + 0x38], rbp
0x624a:	jne	0x632e


0x61ab:	lea	r14, [rdi + 0x20]
0x61af:	lea	r13, [rsp + 0xc]
0x61b4:	nop	dword ptr [rax]
0x61b8:	mov	rdi, qword ptr [rbx + 0x78]
0x61bc:	mov	rdx, r12
0x61bf:	mov	r15, qword ptr [rbx + 0x20]
0x61c3:	sub	rdx, rbp
0x61c6:	test	rdi, rdi
0x61c9:	jne	0x62b0


0x6155:	mov	qword ptr [rbp + 0x30], rbx
0x6159:	mov	qword ptr [rbp + 0x38], rbx
0x615d:	pop	rbx
0x615e:	pop	rbp
0x615f:	pop	r12
0x6161:	ret	


0x611d:	call	0x1860


0x5f18:	mov	qword ptr [rdi], 1
0x5f1f:	mov	qword ptr [rdi + 8], 1
0x5f27:	mov	edi, 8
0x5f2c:	call	0x1ac0


0x5ef4:	mov	rsi, qword ptr [rdi + 8]
0x5ef8:	mov	rax, qword ptr [rdi + 0x10]
0x5efc:	test	rsi, rsi
0x5eff:	jne	0x5f50


0x5ea8:	add	rsi, 1
0x5eac:	lea	rdx, [rsi + rsi]
0x5eb0:	shl	rsi, 4
0x5eb4:	mov	qword ptr [rdi], rdx
0x5eb7:	mov	rdi, rax
0x5eba:	call	0x1b30


0x5e89:	lea	rdx, [rsi + 1]
0x5e8d:	mov	qword ptr [rbx + 8], rdx
0x5e91:	mov	qword ptr [rax + rsi*8], rbp
0x5e95:	mov	eax, 1
0x5e9a:	add	rsp, 8
0x5e9e:	pop	rbx
0x5e9f:	pop	rbp
0x5ea0:	ret	


0x5e2d:	cmp	byte ptr [rbx + 0x8b], 0
0x5e34:	jne	0x5e48


0x5de5:	movabs	rax, 0x1fffffffffffffff
0x5def:	cmp	rsi, rax
0x5df2:	ja	0x5e60


0x5d83:	mov	rsi, rbx
0x5d86:	mov	rdi, rbp
0x5d89:	call	r12


0x5d13:	mov	rax, qword ptr [rbx + 8]
0x5d17:	test	rax, rax
0x5d1a:	jne	0x5d10


0x5ca8:	mov	rax, qword ptr [rax + 0x18]
0x5cac:	cmp	rax, r8
0x5caf:	jl	0x5cd0


0x5cf0:	mov	eax, 0xffffffff
0x5cf5:	ret	


0x5c25:	add	rsp, 0x48
0x5c29:	mov	eax, r15d
0x5c2c:	pop	rbx
0x5c2d:	sar	eax, 1
0x5c2f:	pop	rbp
0x5c30:	pop	r12
0x5c32:	pop	r13
0x5c34:	pop	r14
0x5c36:	pop	r15
0x5c38:	ret	


0x5a97:	lea	rax, [r8 + r8*4]
0x5a9b:	mov	r11, rcx
0x5a9e:	mov	ecx, r9d
0x5aa1:	mov	r10, r8
0x5aa4:	xor	ebx, ebx
0x5aa6:	mov	dword ptr [rsp + 0x20], esi
0x5aaa:	shl	rax, 3
0x5aae:	mov	r15, r9
0x5ab1:	mov	qword ptr [rsp + 0x10], r11
0x5ab6:	mov	qword ptr [rsp + 0x28], rax
0x5abb:	mov	eax, 1
0x5ac0:	shl	rax, cl
0x5ac3:	mov	qword ptr [rsp + 0x18], rax
0x5ac8:	not	eax
0x5aca:	mov	word ptr [rsp + 0x26], ax
0x5acf:	mov	eax, esi
0x5ad1:	and	eax, 1
0x5ad4:	mov	dword ptr [rsp + 0xc], eax
0x5ad8:	mov	eax, esi
0x5ada:	and	eax, 2
0x5add:	mov	dword ptr [rsp + 8], eax
0x5ae1:	jmp	0x5b05


0x5a50:	cmp	rdi, qword ptr [rsi + 0x28]
0x5a54:	jne	0x5a46


0x5a46:	xor	eax, eax
0x5a48:	ret	


0x5970:	mov	byte ptr [rdi + 8], 2
0x5974:	xor	eax, eax
0x5976:	ret	


0x591a:	mov	r8, qword ptr [rsi + 8]
0x591e:	cmp	dword ptr [rsi + 0x90], 1
0x5925:	movzx	ecx, byte ptr [r8 + rax]
0x592a:	mov	byte ptr [rdi], cl
0x592c:	jle	0x5943


0x19b0:	jmp	qword ptr [rip + 0x2174b2]


0x5830:	mov	rax, qword ptr [rdi + 0x20]
0x5834:	cmp	qword ptr [rdi + 0x28], rax
0x5838:	jne	0x582a


0x582a:	jmp	0x1bc0


0x1960:	jmp	qword ptr [rip + 0x2174da]


0x5789:	call	0x57e0


0x5772:	movzx	edx, dl
0x5775:	test	rdx, rdx
0x5778:	jne	0x5789


0x5720:	test	rax, rax
0x5723:	mov	edx, 0x80
0x5728:	cmove	rax, rdx
0x572c:	test	rax, rax
0x572f:	jns	0x5712


0x56f8:	movabs	rdx, 0x5555555555555553
0x5702:	cmp	rax, rdx
0x5705:	ja	0x5731


0x56a0:	test	rcx, rcx
0x56a3:	je	0x56c8


0x566b:	xor	edx, edx
0x566d:	movabs	rax, 0x5555555555555554
0x5677:	div	r9
0x567a:	cmp	rax, rcx
0x567d:	jbe	0x56bb


0x564b:	sub	rsp, 8
0x564f:	call	0x57e0


0x5641:	movzx	eax, al
0x5644:	test	rax, rax
0x5647:	jne	0x564b


0x55f9:	test	rdi, rdi
0x55fc:	jne	0x5618


0x55fe:	mov	rsi, rbx
0x5601:	call	0x1b30


0x55cb:	sub	rsp, 8
0x55cf:	call	0x57e0


0x55c1:	movzx	eax, al
0x55c4:	test	rax, rax
0x55c7:	jne	0x55cb


0x54a6:	mov	eax, r10d
0x54a9:	mov	r11d, 1
0x54af:	add	r10d, 8
0x54b3:	add	rax, rbp
0x54b6:	mov	rax, qword ptr [rax]
0x54b9:	test	rax, rax
0x54bc:	mov	qword ptr [r8 + r9*8], rax
0x54c0:	je	0x54cc


0x54fc:	mov	rax, rbx
0x54ff:	add	rbx, 8
0x5503:	jmp	0x54b6


0x53d8:	mov	r11d, eax
0x53db:	add	r11, qword ptr [r10 + 0x10]
0x53df:	add	eax, 8
0x53e2:	mov	dword ptr [r10], eax
0x53e5:	mov	rax, qword ptr [r11]
0x53e8:	test	rax, rax
0x53eb:	mov	qword ptr [r8 + r9*8], rax
0x53ef:	je	0x53fb


0x541a:	mov	r11, qword ptr [r10 + 8]
0x541e:	lea	rax, [r11 + 8]
0x5422:	mov	qword ptr [r10 + 8], rax
0x5426:	jmp	0x53e5


0x53ab:	jmp	0x4f70


0x50a8:	mov	r8, rcx
0x50ab:	mov	rcx, rdx
0x50ae:	lea	rdx, [rip + 0xfaff]
0x50b5:	mov	esi, 1
0x50ba:	xor	eax, eax
0x50bc:	call	0x1c20


0x4f90:	mov	r8, rdx
0x4f93:	lea	rdx, [rip + 0xfc0e]
0x4f9a:	mov	r9, rcx
0x4f9d:	xor	eax, eax
0x4f9f:	mov	rcx, rsi
0x4fa2:	mov	esi, 1
0x4fa7:	call	0x1c20


0x4f41:	call	0x13d50


0x4f62:	add	rsp, 8
0x4f66:	mov	eax, ebx
0x4f68:	pop	rbx
0x4f69:	pop	rbp
0x4f6a:	pop	r12
0x4f6c:	pop	r13
0x4f6e:	ret	


0x19e0:	jmp	qword ptr [rip + 0x21749a]


0x1b00:	jmp	qword ptr [rip + 0x21740a]


0x1a30:	jmp	qword ptr [rip + 0x217472]


0x4db7:	call	0x1890


0x4d85:	test	rdx, rdx
0x4d88:	je	0x4db7


0x4d24:	call	0x1890


0x4cbc:	mov	dword ptr [rsp], esi
0x4cbf:	mov	rcx, rsp
0x4cc2:	mov	rdx, -1
0x4cc9:	mov	rsi, rax
0x4ccc:	mov	qword ptr [rsp + 4], 0
0x4cd5:	mov	qword ptr [rsp + 0xc], 0x4000000
0x4cde:	mov	qword ptr [rsp + 0x14], 0
0x4ce7:	mov	qword ptr [rsp + 0x1c], 0
0x4cf0:	mov	qword ptr [rsp + 0x24], 0
0x4cf9:	mov	qword ptr [rsp + 0x2c], 0
0x4d02:	mov	dword ptr [rsp + 0x34], 0
0x4d0a:	call	0x4530


0x4b90:	call	0x1890


0x4b2f:	mov	dword ptr [rsp], esi
0x4b32:	mov	rcx, rsp
0x4b35:	mov	rsi, rax
0x4b38:	mov	qword ptr [rsp + 4], 0
0x4b41:	mov	qword ptr [rsp + 0xc], 0
0x4b4a:	mov	qword ptr [rsp + 0x14], 0
0x4b53:	mov	qword ptr [rsp + 0x1c], 0
0x4b5c:	mov	qword ptr [rsp + 0x24], 0
0x4b65:	mov	qword ptr [rsp + 0x2c], 0
0x4b6e:	mov	dword ptr [rsp + 0x34], 0
0x4b76:	call	0x4530


0x4b04:	call	0x1890


0x4a9c:	mov	dword ptr [rsp], esi
0x4a9f:	mov	rcx, rsp
0x4aa2:	mov	rdx, -1
0x4aa9:	mov	rsi, rax
0x4aac:	mov	qword ptr [rsp + 4], 0
0x4ab5:	mov	qword ptr [rsp + 0xc], 0
0x4abe:	mov	qword ptr [rsp + 0x14], 0
0x4ac7:	mov	qword ptr [rsp + 0x1c], 0
0x4ad0:	mov	qword ptr [rsp + 0x24], 0
0x4ad9:	mov	qword ptr [rsp + 0x2c], 0
0x4ae2:	mov	dword ptr [rsp + 0x34], 0
0x4aea:	call	0x4530


0x49b1:	mov	rdi, qword ptr [r12 + 8]
0x49b6:	lea	rbx, [rip + 0x216903]
0x49bd:	cmp	rdi, rbx
0x49c0:	je	0x49d9


0x4986:	sub	eax, 2
0x4989:	lea	rbx, [r12 + 0x18]
0x498e:	shl	rax, 4
0x4992:	lea	rbp, [r12 + rax + 0x28]
0x4997:	nop	word ptr [rax + rax]
0x49a0:	mov	rdi, qword ptr [rbx]
0x49a3:	add	rbx, 0x10
0x49a7:	call	0x1880


0x18a0:	jmp	qword ptr [rip + 0x21753a]


0x47e7:	sub	rsp, 8
0x47eb:	call	0x1890


0x47d9:	test	rdx, rdx
0x47dc:	je	0x47e7


0x1970:	jmp	qword ptr [rip + 0x2174d2]


0x31dd:	mov	rcx, qword ptr [rip + 0x215edc]
0x31e4:	lea	rdi, [rip + 0x1149d]
0x31eb:	mov	edx, 0x37
0x31f0:	mov	esi, 1
0x31f5:	call	0x1c10


0x3166:	mov	esi, 0x2f
0x316b:	mov	rbx, rdi
0x316e:	call	0x19c0


0x2c2d:	lea	rsi, [rip + 0x11724]
0x2c34:	xor	edi, edi
0x2c36:	call	0x1960


0x2bff:	lea	rsi, [rip + 0x1172a]
0x2c06:	xor	edi, edi
0x2c08:	call	0x1960


0x2686:	lea	r12, [rip + 0x11ab7]
0x268d:	jmp	0x2693


0x2b19:	sub	r14, rdx
0x2b1c:	xor	edx, edx
0x2b1e:	mov	rsi, r14
0x2b21:	call	0x19f0


0x25f0:	mov	rcx, qword ptr [rip + 0x216a91]
0x25f7:	lea	rdi, [rip + 0x216ae2]
0x25fe:	mov	rdx, rbx
0x2601:	mov	esi, 1
0x2606:	call	0x1b20


0x254e:	mov	r15d, 0x2000
0x2554:	sub	rsi, rdi
0x2557:	lea	r13, [rip + 0x216b82]
0x255e:	sub	r15, rbx
0x2561:	mov	r12, rdi
0x2564:	mov	rbp, rsi
0x2567:	cmp	rsi, r15
0x256a:	mov	r14, r13
0x256d:	jb	0x2628


0x24e9:	cmp	qword ptr [rip + 0x216aff], 0
0x24f1:	push	rbp
0x24f2:	mov	rbp, rsp
0x24f5:	je	0x2503


0x2518:	ret	


0x24d0:	pop	rbp
0x24d1:	ret	


0x24b8:	mov	rax, qword ptr [rip + 0x216b29]
0x24bf:	test	rax, rax
0x24c2:	je	0x24d0


0x2480:	pop	rbp
0x2481:	ret	


0x2467:	mov	rax, qword ptr [rip + 0x216b62]
0x246e:	test	rax, rax
0x2471:	je	0x2480




0x184a:	add	rsp, 8
0x184e:	ret	


0x1848:	call	rax




0x1ae0:	jmp	qword ptr [rip + 0x21741a]


0x1b10:	jmp	qword ptr [rip + 0x217402]


0x1900:	jmp	qword ptr [rip + 0x21750a]


0x13e39:	mov	rax, qword ptr [rsp + 0x10]
0x13e3e:	cmp	dword ptr [rip + 0x2075b3], 0
0x13e45:	mov	dword ptr [rsp], 0x18
0x13e4c:	mov	r12d, dword ptr [rax + 0x10]
0x13e50:	mov	edx, r12d
0x13e53:	js	0x13f83


0x13e80:	cmp	esi, 0xb
0x13e83:	je	0x13eb0










0x13bb0:	add	rax, 1
0x13bb4:	movzx	edx, byte ptr [rax]
0x13bb7:	cmp	dl, 0x2f
0x13bba:	je	0x13bb0


0x13bfa:	ret	


0x13bc0:	mov	rcx, rax
0x13bc3:	xor	esi, esi
0x13bc5:	jmp	0x13be5




0x139d9:	mov	rdi, rsi
0x139dc:	mov	qword ptr [rsp + 8], rsi
0x139e1:	call	0x1980


0x13a28:	test	byte ptr [rbp + 0x38], 0x10
0x13a2c:	mov	rcx, qword ptr [rcx]
0x13a2f:	mov	rdx, qword ptr [r12 + 8]
0x13a34:	jne	0x139f6


0x1890:	jmp	qword ptr [rip + 0x217542]




0x136e0:	mov	r15, rbx
0x136e3:	add	r15, rbp
0x136e6:	jo	0x137a0


0x1373a:	add	rsp, 0x28
0x1373e:	mov	rax, rbx
0x13741:	pop	rbx
0x13742:	pop	rbp
0x13743:	pop	r12
0x13745:	pop	r13
0x13747:	pop	r14
0x13749:	pop	r15
0x1374b:	ret	


0x13352:	add	rsp, 0x38
0x13356:	mov	rax, r12
0x13359:	pop	rbx
0x1335a:	pop	rbp
0x1335b:	pop	r12
0x1335d:	pop	r13
0x1335f:	pop	r14
0x13361:	pop	r15
0x13363:	ret	


0x13253:	cmp	r8, rdx
0x13256:	mov	rbx, rcx
0x13259:	mov	r15, rdi
0x1325c:	jg	0x134e0


0x1b30:	jmp	qword ptr [rip + 0x2173f2]


0x1207d:	movabs	rax, 0x555555555555554
0x12087:	mov	dword ptr [rbx + 0x80], 0xf
0x12091:	cmp	qword ptr [rsp], rax
0x12095:	ja	0x126d6


0x1207a:	rep stosq	qword ptr [rdi], rax


0x1090c:	add	rsp, 0x128
0x10913:	pop	rbx
0x10914:	pop	rbp
0x10915:	pop	r12
0x10917:	pop	r13
0x10919:	pop	r14
0x1091b:	pop	r15
0x1091d:	ret	


0x11c7e:	call	0x1990


0x100f8:	add	rsp, 0x38
0x100fc:	pop	rbx
0x100fd:	pop	rbp
0x100fe:	pop	r12
0x10100:	pop	r13
0x10102:	pop	r14
0x10104:	pop	r15
0x10106:	ret	


0x10718:	call	0x1990


0x10110:	cmp	r12b, 0x5c
0x10114:	je	0x10190


0x1007d:	cmp	r14, qword ptr [rsi + 0x30]
0x10081:	je	0x10220


0xfe80:	mov	r12, qword ptr [r10 + 0x68]
0xfe84:	cmp	r11, r12
0xfe87:	jge	0xffa8


0xfe5d:	cmp	al, 0x1c
0xfe5f:	je	0xfe80


0xf83c:	mov	qword ptr [r14], 0
0xf843:	xor	eax, eax
0xf845:	jmp	0xf608


0xf8f0:	mov	qword ptr [rsp + 0x10], 0
0xf8f9:	jmp	0xf698


0xf5e7:	mov	rdx, qword ptr [rsi]
0xf5ea:	mov	qword ptr [rdx + rbp*8], 0
0xf5f2:	mov	rdx, qword ptr [rax + rbp*8]
0xf5f6:	xor	eax, eax
0xf5f8:	test	byte ptr [rdx + 0x68], 0x40
0xf5fc:	jne	0xf6df


0xf638:	lea	rdi, [rsp + 0x60]
0xf63d:	mov	rdx, rbx
0xf640:	mov	rsi, r12
0xf643:	mov	dword ptr [rsp + 0x60], 0
0xf64b:	call	0x8a30


0xdeae:	mov	rdi, qword ptr [rsi + 0x20]
0xdeb2:	mov	qword ptr [rsp + 0x1b8], rbx
0xdeba:	test	rdi, rdi
0xdebd:	mov	qword ptr [rsp + 0x68], rdi
0xdec2:	je	0xdee6


0xd975:	mov	rcx, qword ptr [rsp + 0x28]
0xd97a:	xor	rcx, qword ptr fs:[0x28]
0xd983:	mov	rax, rbp
0xd986:	jne	0xdaf7


0xda98:	test	rbp, rbp
0xda9b:	je	0xdaf0


0xda88:	mov	qword ptr [r14], rdx
0xda8b:	mov	rbp, rdx
0xda8e:	jmp	0xd967


0xd9ac:	test	rdx, rdx
0xd9af:	mov	rax, qword ptr [rax + 0x50]
0xd9b3:	je	0xda40


0xd3af:	add	rsp, 0xb8
0xd3b6:	pop	rbx
0xd3b7:	pop	rbp
0xd3b8:	pop	r12
0xd3ba:	pop	r13
0xd3bc:	pop	r14
0xd3be:	pop	r15
0xd3c0:	ret	


0xd8fc:	call	0x1990


0xd0e7:	mov	rax, qword ptr [rsp + 0x40]
0xd0ec:	mov	rdi, qword ptr [rsp]
0xd0f0:	mov	rax, qword ptr [rax]
0xd0f3:	mov	r13, qword ptr [rax + rdi*8]
0xd0f7:	mov	rdi, qword ptr [rsp + 0x38]
0xd0fc:	mov	rax, qword ptr [rdi]
0xd0ff:	mov	rbx, r13
0xd102:	shl	rbx, 4
0xd106:	add	rax, rbx
0xd109:	cmp	byte ptr [rax + 8], 4
0xd10d:	jne	0xd0d0


0xc60d:	mov	rax, qword ptr [rbp - 0x90]
0xc614:	pxor	xmm0, xmm0
0xc618:	mov	qword ptr [rbp - 0x60], 0
0xc620:	mov	rbx, qword ptr [rax + 0x90]
0xc627:	mov	rax, qword ptr [rbp - 0x98]
0xc62e:	movaps	xmmword ptr [rbp - 0x70], xmm0
0xc632:	shl	rax, 4
0xc636:	cmp	rax, 0xfbf
0xc63c:	mov	qword ptr [rbp - 0xb8], rax
0xc643:	ja	0xcd36


0xc2c0:	lea	rsi, [rbp - 1]
0xc2c4:	mov	qword ptr [r15 + 0x48], rbp
0xc2c8:	mov	rdi, r15
0xc2cb:	call	0x9200


0xbee4:	lea	rsi, [r12 - 1]
0xbee9:	mov	qword ptr [r15 + 0x48], r12
0xbeed:	mov	rdi, r15
0xbef0:	call	0x9200


0xc54b:	mov	eax, 0xc
0xc550:	jmp	0xc3b4


0xc4dc:	lea	r14, [r13 + r12]
0xc4e1:	movabs	rax, 0x1fffffffffffffff
0xc4eb:	cmp	r14, rax
0xc4ee:	ja	0xc54b


0xbcc0:	xor	ebp, ebp
0xbcc2:	add	rsp, 8
0xbcc6:	mov	eax, ebp
0xbcc8:	pop	rbx
0xbcc9:	pop	rbp
0xbcca:	pop	r12
0xbccc:	pop	r13
0xbcce:	ret	


0xbd0f:	mov	rcx, qword ptr [rcx + 0x58]
0xbd13:	lea	rdi, [r8 + 1]
0xbd17:	cmp	rdi, rcx
0xbd1a:	jge	0xbcc0


0xbbfe:	mov	rbx, rsi
0xbc01:	mov	rdi, rcx
0xbc04:	mov	rsi, r8
0xbc07:	mov	r10, rcx
0xbc0a:	call	0x7370


0xbb1d:	mov	rax, qword ptr [rsp + 0x168]
0xbb25:	xor	rax, qword ptr fs:[0x28]
0xbb2e:	jne	0xbbc2


0xb712:	lea	rax, [rsp + 0x58]
0xb717:	mov	qword ptr [rsp], 0
0xb71f:	mov	qword ptr [rsp + 0x40], rax
0xb724:	lea	rax, [rsp + 0x54]
0xb729:	mov	qword ptr [rsp + 0x48], rax
0xb72e:	lea	rax, [rsp + 0x60]
0xb733:	mov	qword ptr [rsp + 0x38], rax
0xb738:	jmp	0xb77e




0xad89:	lea	r14, [rcx + rcx + 1]
0xad8e:	mov	rdi, rax
0xad91:	mov	qword ptr [rsp + 8], r8
0xad96:	mov	qword ptr [rsp], rdx
0xad9a:	lea	rsi, [r14*8]
0xada2:	call	0x1b30


0xac78:	lea	rdx, [rcx + 1]
0xac7c:	mov	rdi, r12
0xac7f:	mov	qword ptr [r13], rdx
0xac83:	lea	r13, [rax + rcx*8]
0xac87:	call	0x1a50


0xac52:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xac54:	seta	al
0xac57:	sbb	al, 0
0xac59:	test	al, al
0xac5b:	jne	0xad56


0x1a00:	jmp	qword ptr [rip + 0x21748a]


0x1a90:	jmp	qword ptr [rip + 0x217442]


0x9e61:	call	0x1880


0x9d2d:	mov	rax, qword ptr [rbp + 0x10]
0x9d31:	mov	rax, qword ptr [rax + rbx*8]
0x9d35:	cmp	r13, rax
0x9d38:	je	0x9d20


0x95ce:	mov	rax, qword ptr [rbx + 0x58]
0x95d2:	sub	qword ptr [rbx + 0x68], rbp
0x95d6:	mov	qword ptr [rbx + 0x28], r15
0x95da:	sub	rax, rbp
0x95dd:	cmp	dword ptr [rbx + 0x90], 1
0x95e4:	mov	qword ptr [rbx + 0x58], rax
0x95e8:	jle	0x9688


0x956b:	mov	rax, qword ptr [rbx + 0x38]
0x956f:	movzx	edx, byte ptr [rbx + 0x8c]
0x9576:	mov	r8, qword ptr [rbx + 0x30]
0x957a:	cmp	rax, rbp
0x957d:	jle	0x96a0


0x9513:	mov	rax, qword ptr [rbx + 0x50]
0x9517:	mov	qword ptr [rbx + 0x30], 0
0x951f:	mov	rbp, r15
0x9522:	mov	qword ptr [rbx + 0x28], 0
0x952a:	mov	qword ptr [rbx + 0x38], 0
0x9532:	mov	byte ptr [rbx + 0x8c], 0
0x9539:	mov	qword ptr [rbx + 0x58], rax
0x953d:	mov	rax, qword ptr [rbx + 0x60]
0x9541:	mov	qword ptr [rbx + 0x68], rax
0x9545:	mov	eax, r10d
0x9548:	and	eax, 1
0x954b:	cmp	eax, 1
0x954e:	sbb	eax, eax
0x9550:	and	eax, 2
0x9553:	add	eax, 4
0x9556:	cmp	byte ptr [rbx + 0x8b], 0
0x955d:	mov	dword ptr [rbx + 0x70], eax
0x9560:	je	0x9630


0x9640:	mov	qword ptr [rdi + 0x20], 0
0x9648:	jmp	0x9513


0x9340:	push	rbx
0x9341:	mov	ebx, dword ptr [rsi + 8]
0x9344:	mov	eax, 1
0x9349:	test	ebx, 0x3ff00
0x934f:	je	0x939c


0x93d2:	ret	


0x93a0:	cmp	al, 1
0x93a2:	jne	0x93b0


0x930a:	cmp	al, 5
0x930c:	je	0x9320


0x92b8:	and	edx, 2
0x92bb:	cmp	edx, 1
0x92be:	sbb	eax, eax
0x92c0:	and	eax, 2
0x92c3:	add	eax, 8
0x92c6:	jmp	0x9252


0x9218:	cmp	dword ptr [rdi + 0x90], 1
0x921f:	jle	0x9270


0x90ee:	mov	rax, qword ptr [r14]
0x90f1:	mov	rbp, qword ptr [rax + rbx*8]
0x90f5:	mov	rax, rbp
0x90f8:	shl	rax, 4
0x90fc:	add	rax, qword ptr [r13]
0x9100:	cmp	byte ptr [rax + 8], 8
0x9104:	jne	0x90e0


0x8da2:	cmp	rsi, rcx
0x8da5:	jl	0x8d80


0x8d75:	jmp	0x8df8


0x8dcd:	xor	eax, eax
0x8dcf:	mov	rbx, qword ptr [rsp + 0x68]
0x8dd4:	xor	rbx, qword ptr fs:[0x28]
0x8ddd:	jne	0x90a9


0x8dac:	mov	rcx, qword ptr [rbx + 0xd8]
0x8db3:	lea	rax, [rsi + rsi*4]
0x8db7:	shl	rax, 3
0x8dbb:	cmp	qword ptr [rcx + rax + 8], r12
0x8dc0:	mov	qword ptr [rsp + 0x30], rax
0x8dc5:	jne	0x8dcd


0x8cf8:	add	rsp, 0x48
0x8cfc:	pop	rbx
0x8cfd:	pop	rbp
0x8cfe:	pop	r12
0x8d00:	pop	r13
0x8d02:	pop	r14
0x8d04:	pop	r15
0x8d06:	ret	


0x8d07:	call	0x1990


0x8ccc:	mov	rsi, qword ptr [rbx + r15*8]
0x8cd0:	mov	rdx, qword ptr [r12 + r15*8]
0x8cd4:	test	rsi, rsi
0x8cd7:	jne	0x8c80


0x8bbf:	add	rsp, 8
0x8bc3:	mov	rax, rbx
0x8bc6:	pop	rbx
0x8bc7:	pop	rbp
0x8bc8:	pop	r12
0x8bca:	pop	r13
0x8bcc:	pop	r14
0x8bce:	pop	r15
0x8bd0:	ret	


0x8a6c:	mov	rax, qword ptr [rsi + 0x88]
0x8a73:	mov	r14, rdx
0x8a76:	mov	r12, rsi
0x8a79:	mov	r13, rdi
0x8a7c:	and	rax, rbp
0x8a7f:	lea	rdx, [rax + rax*2]
0x8a83:	mov	rax, qword ptr [rsi + 0x40]
0x8a87:	lea	rax, [rax + rdx*8]
0x8a8b:	mov	r10, qword ptr [rax]
0x8a8e:	test	r10, r10
0x8a91:	jle	0x8ac6


0x8a50:	mov	rax, qword ptr [rdx + 0x10]
0x8a54:	lea	rcx, [rax + rbp*8]
0x8a58:	nop	dword ptr [rax + rax]
0x8a60:	add	rbp, qword ptr [rax]
0x8a63:	add	rax, 8
0x8a67:	cmp	rcx, rax
0x8a6a:	jne	0x8a60


0x881c:	add	rsp, 0x28
0x8820:	mov	rax, r14
0x8823:	pop	rbx
0x8824:	pop	rbp
0x8825:	pop	r12
0x8827:	pop	r13
0x8829:	pop	r14
0x882b:	pop	r15
0x882d:	ret	


0x87ac:	mov	rax, qword ptr [rsi + 0x88]
0x87b3:	mov	rbp, rdx
0x87b6:	mov	dword ptr [rsp + 4], ecx
0x87ba:	mov	r13, rsi
0x87bd:	mov	qword ptr [rsp + 0x18], rdi
0x87c2:	and	rax, r12
0x87c5:	lea	rdx, [rax + rax*2]
0x87c9:	mov	rax, qword ptr [rsi + 0x40]
0x87cd:	lea	rax, [rax + rdx*8]
0x87d1:	mov	r11, qword ptr [rax]
0x87d4:	test	r11, r11
0x87d7:	jle	0x8830


0x8797:	mov	rax, qword ptr [rdx + 0x10]
0x879b:	lea	r10, [rax + r10*8]
0x879f:	nop	
0x87a0:	add	r12, qword ptr [rax]
0x87a3:	add	rax, 8
0x87a7:	cmp	r10, rax
0x87aa:	jne	0x87a0


0x86d1:	pxor	xmm0, xmm0
0x86d5:	mov	qword ptr [rdi + 0x10], 0
0x86dd:	xor	eax, eax
0x86df:	movaps	xmmword ptr [rdi], xmm0
0x86e2:	pop	rbx
0x86e3:	pop	rbp
0x86e4:	pop	r12
0x86e6:	pop	r13
0x86e8:	pop	r14
0x86ea:	ret	


0x86ca:	cmp	qword ptr [rdx + 8], 0
0x86cf:	jg	0x86f0


0x86c0:	test	r13, r13
0x86c3:	jg	0x86f3


0x862e:	test	r13, r13
0x8631:	jle	0x86c0


0x8522:	mov	rcx, qword ptr [rsp + 8]
0x8527:	xor	rcx, qword ptr fs:[0x28]
0x8530:	mov	eax, dword ptr [rsp + 4]
0x8534:	jne	0x857b


0x851c:	cmp	byte ptr [rdx + 0x30], 0x11
0x8520:	je	0x8540


0x8560:	lea	rdi, [rsp + 4]
0x8565:	mov	rsi, rbp
0x8568:	call	0x82a0


0x8350:	lea	rax, [rbx + 0x70]
0x8354:	lea	r14, [rsp + 0x20]
0x8359:	sub	rbx, -0x80
0x835d:	xor	ecx, ecx
0x835f:	xor	edx, edx
0x8361:	mov	rsi, rbx
0x8364:	mov	r15, rax
0x8367:	mov	r8, r14
0x836a:	mov	rdi, rax
0x836d:	mov	byte ptr [rsp + 0x28], 8
0x8372:	mov	qword ptr [rsp + 8], rax
0x8377:	call	0x80e0


0x82dc:	mov	rax, qword ptr [rdx + 0x28]
0x82e0:	cmp	rax, 0x3f
0x82e4:	jg	0x841d


0x8153:	test	rcx, rcx
0x8156:	je	0x815b


0x8150:	mov	qword ptr [rdx], rax
0x8153:	test	rcx, rcx
0x8156:	je	0x815b


0x7f4c:	push	r13
0x7f4e:	push	r12
0x7f50:	lea	rax, [r9 + r11]
0x7f54:	push	rbp
0x7f55:	push	rbx
0x7f56:	mov	r12, rdx
0x7f59:	mov	rbx, rdi
0x7f5c:	mov	rbp, rsi
0x7f5f:	sub	rsp, 8
0x7f63:	mov	rcx, qword ptr [rdi + 8]
0x7f67:	mov	r13, qword ptr [rdi]
0x7f6a:	mov	rdi, qword ptr [rdi + 0x10]
0x7f6e:	lea	rdx, [rax + rcx]
0x7f72:	cmp	rdx, r13
0x7f75:	jg	0x80a0


0x7956:	push	r12
0x7958:	push	rbp
0x7959:	mov	r12, rsi
0x795c:	push	rbx
0x795d:	mov	rax, qword ptr [rdi + 8]
0x7961:	mov	rbx, rdi
0x7964:	mov	rsi, qword ptr [rdi]
0x7967:	lea	rcx, [rax + rdx*2]
0x796b:	cmp	rsi, rcx
0x796e:	jl	0x7ab8


0x7756:	cmp	rbx, r10
0x7759:	jl	0x7730


0x7726:	jmp	0x78c0


0x7900:	mov	rbx, -1
0x7907:	jmp	0x7782


0x7764:	mov	r11, qword ptr [rdi + 0xd8]
0x776b:	lea	rax, [rbx + rbx*4]
0x776f:	lea	rax, [r11 + rax*8]
0x7773:	cmp	r8, qword ptr [rax + 8]
0x7777:	mov	rax, -1
0x777e:	cmovne	rbx, rax
0x7782:	mov	rax, r15
0x7785:	xor	ebp, ebp
0x7787:	cmp	rbp, rax
0x778a:	jge	0x77e4


0x76a8:	mov	rax, qword ptr [rsi + 0x10]
0x76ac:	mov	rcx, qword ptr [rax + 0x18]
0x76b0:	mov	qword ptr [rdx + 0x20], rcx
0x76b4:	mov	rdx, qword ptr [rsi + 0x20]
0x76b8:	mov	qword ptr [rax + 0x20], rdx
0x76bc:	xor	eax, eax
0x76be:	ret	


0x7680:	test	rdx, rdx
0x7683:	je	0x768d


0x75ec:	xor	eax, eax
0x75ee:	ret	


0x764c:	movsxd	rdx, dword ptr [rsi + 0x28]
0x7650:	mov	rcx, qword ptr [rax + rdx*8]
0x7654:	mov	eax, 1
0x7659:	shl	eax, cl
0x765b:	mov	qword ptr [rsi + 0x28], rcx
0x765f:	cdqe	
0x7661:	or	qword ptr [rdi + 0xa0], rax
0x7668:	xor	eax, eax
0x766a:	ret	


0x75f0:	mov	rax, qword ptr [rsi + 8]
0x75f4:	test	rax, rax
0x75f7:	je	0x75ec


0x75b4:	mov	rax, qword ptr [rsi]
0x75b7:	nop	word ptr [rax + rax]
0x75c0:	mov	rcx, qword ptr [rax + rdx*8 + 8]
0x75c5:	mov	qword ptr [rax + rdx*8], rcx
0x75c9:	add	rdx, 1
0x75cd:	cmp	rdx, qword ptr [rdi]
0x75d0:	jl	0x75c0


0x7435:	lea	rcx, [rsi + rdi]
0x7439:	shr	rcx, 1
0x743c:	cmp	rdx, qword ptr [r8 + rcx*8]
0x7440:	jle	0x7458


0x745d:	xor	eax, eax
0x745f:	cmp	rdx, qword ptr [r8 + rsi*8]
0x7463:	je	0x7490


0x73fd:	test	rax, rax
0x7400:	jns	0x73e0


0x738f:	sub	rcx, rsi
0x7392:	lea	rsi, [rdx + rdi - 4]
0x7397:	mov	edx, 2
0x739c:	jmp	0x73ab


0x730d:	mov	rdi, qword ptr [r12 + 0x28]
0x7312:	call	0x1880


0x72e3:	xor	ebx, ebx
0x72e5:	nop	dword ptr [rax]
0x72e8:	mov	rax, qword ptr [r12 + 0x28]
0x72ed:	mov	rbp, qword ptr [rax + rbx*8]
0x72f1:	add	rbx, 1
0x72f5:	mov	rdi, qword ptr [rbp + 0x20]
0x72f9:	call	0x1880


0x716b:	xor	ebx, ebx
0x716d:	jmp	0x7174




0x7079:	mov	rax, qword ptr [r14 + 0x18]
0x707d:	mov	rcx, qword ptr [rax + r9*8]
0x7081:	mov	qword ptr [rax + r13*8], rcx
0x7085:	xor	eax, eax
0x7087:	jmp	0x6f60


0x6e86:	lea	rbx, [r13 + r13*2]
0x6e8b:	mov	rsi, qword ptr [rsi + 0x10]
0x6e8f:	shl	rbx, 3
0x6e93:	add	rdi, rbx
0x6e96:	cmp	rcx, 1
0x6e9a:	mov	r15, qword ptr [rsi]
0x6e9d:	mov	qword ptr [rdi + 8], 0
0x6ea5:	je	0x6fc0


0x6c16:	xor	ecx, ecx
0x6c18:	cmp	dword ptr [rbx + 0xb4], 1
0x6c1f:	setg	cl
0x6c22:	movzx	edx, byte ptr [rax + 0xa]
0x6c26:	shl	ecx, 4
0x6c29:	pxor	xmm0, xmm0
0x6c2d:	and	edx, 0xffffffef
0x6c30:	or	edx, ecx
0x6c32:	mov	byte ptr [rax + 0xa], dl
0x6c35:	mov	qword ptr [r12 + rsi*8], -1
0x6c3d:	mov	rax, qword ptr [rbx + 0x10]
0x6c41:	lea	rax, [rax + rax*2]
0x6c45:	lea	rax, [rbp + rax*8]
0x6c4a:	movups	xmmword ptr [rax], xmm0
0x6c4d:	mov	qword ptr [rax + 0x10], 0
0x6c55:	mov	rax, qword ptr [rbx + 0x10]
0x6c59:	lea	rdx, [rax + rax*2]
0x6c5d:	mov	rax, qword ptr [rbx + 0x30]
0x6c61:	lea	rax, [rax + rdx*8]
0x6c65:	movups	xmmword ptr [rax], xmm0
0x6c68:	mov	qword ptr [rax + 0x10], 0
0x6c70:	mov	rax, qword ptr [rbx + 0x10]
0x6c74:	lea	rdx, [rax + 1]
0x6c78:	mov	qword ptr [rbx + 0x10], rdx
0x6c7c:	add	rsp, 0x18
0x6c80:	pop	rbx
0x6c81:	pop	rbp
0x6c82:	pop	r12
0x6c84:	pop	r13
0x6c86:	pop	r14
0x6c88:	pop	r15
0x6c8a:	ret	


0x6c22:	movzx	edx, byte ptr [rax + 0xa]
0x6c26:	shl	ecx, 4
0x6c29:	pxor	xmm0, xmm0
0x6c2d:	and	edx, 0xffffffef
0x6c30:	or	edx, ecx
0x6c32:	mov	byte ptr [rax + 0xa], dl
0x6c35:	mov	qword ptr [r12 + rsi*8], -1
0x6c3d:	mov	rax, qword ptr [rbx + 0x10]
0x6c41:	lea	rax, [rax + rax*2]
0x6c45:	lea	rax, [rbp + rax*8]
0x6c4a:	movups	xmmword ptr [rax], xmm0
0x6c4d:	mov	qword ptr [rax + 0x10], 0
0x6c55:	mov	rax, qword ptr [rbx + 0x10]
0x6c59:	lea	rdx, [rax + rax*2]
0x6c5d:	mov	rax, qword ptr [rbx + 0x30]
0x6c61:	lea	rax, [rax + rdx*8]
0x6c65:	movups	xmmword ptr [rax], xmm0
0x6c68:	mov	qword ptr [rax + 0x10], 0
0x6c70:	mov	rax, qword ptr [rbx + 0x10]
0x6c74:	lea	rdx, [rax + 1]
0x6c78:	mov	qword ptr [rbx + 0x10], rdx
0x6c7c:	add	rsp, 0x18
0x6c80:	pop	rbx
0x6c81:	pop	rbp
0x6c82:	pop	r12
0x6c84:	pop	r13
0x6c86:	pop	r14
0x6c88:	pop	r15
0x6c8a:	ret	


0x6ca8:	mov	rdi, qword ptr [rdi]
0x6cab:	mov	rsi, rbp
0x6cae:	mov	qword ptr [rsp + 8], rdx
0x6cb3:	shl	rsi, 5
0x6cb7:	call	0x1b30


0x6d82:	mov	rax, -1
0x6d89:	jmp	0x6c7c


0x6b88:	mov	rdi, qword ptr [rdi]
0x6b8b:	jmp	0x1880


0x6b82:	ret	


0x6ad0:	lea	esi, [rbp + 1]
0x6ad3:	mov	rdi, rbx
0x6ad6:	call	0x6960


0x6af9:	cmp	rax, qword ptr [rbx + 0x58]
0x6afd:	jge	0x6adf


0x6adf:	cmp	r12, rbp
0x6ae2:	jl	0x6b10


0x6510:	cmp	byte ptr [rdi + 0x8c], 0
0x6517:	jne	0x638c


0x63d0:	lea	rax, [r14 + 0x20]
0x63d4:	mov	qword ptr [rsp + 8], rax
0x63d9:	mov	rax, rbx
0x63dc:	sub	rax, r15
0x63df:	mov	qword ptr [rsp + 0x10], rax
0x63e4:	lea	rax, [rsp + 0x44]
0x63e9:	mov	qword ptr [rsp + 0x20], rax
0x63ee:	mov	rdx, qword ptr [r14 + 0x78]
0x63f2:	mov	rax, qword ptr [r14 + 0x20]
0x63f6:	test	rdx, rdx
0x63f9:	mov	qword ptr [rsp + 0x48], rax
0x63fe:	jne	0x6709


0x6395:	mov	qword ptr [r14 + 0x30], r15
0x6399:	mov	qword ptr [r14 + 0x38], r13
0x639d:	xor	eax, eax
0x639f:	mov	rcx, qword ptr [rsp + 0x98]
0x63a7:	xor	rcx, qword ptr fs:[0x28]
0x63b0:	jne	0x693a


0x6250:	add	rsp, 0x68
0x6254:	pop	rbx
0x6255:	pop	rbp
0x6256:	pop	r12
0x6258:	pop	r13
0x625a:	pop	r14
0x625c:	pop	r15
0x625e:	ret	


0x632e:	call	0x1990


0x61cf:	mov	rsi, qword ptr [rbx + 0x28]
0x61d3:	add	rsi, rbp
0x61d6:	add	rsi, qword ptr [rbx]
0x61d9:	mov	rcx, r14
0x61dc:	mov	rdi, r13
0x61df:	call	0x5880


0x62b0:	mov	ecx, dword ptr [rbx + 0x90]
0x62b6:	xor	eax, eax
0x62b8:	lea	rsi, [rsp + 0x10]
0x62bd:	test	ecx, ecx
0x62bf:	jg	0x62e1


0x1860:	jmp	qword ptr [rip + 0x21755a]


0x5f01:	mov	qword ptr [rax], rbp
0x5f04:	add	qword ptr [rdi + 8], 1
0x5f09:	mov	eax, 1
0x5f0e:	add	rsp, 8
0x5f12:	pop	rbx
0x5f13:	pop	rbp
0x5f14:	ret	


0x5f50:	cmp	rdx, rsi
0x5f53:	je	0x5fe0


0x5e36:	mov	qword ptr [rbx + 0x40], rbp
0x5e3a:	add	rsp, 8
0x5e3e:	xor	eax, eax
0x5e40:	pop	rbx
0x5e41:	pop	rbp
0x5e42:	ret	


0x5e48:	mov	rdi, qword ptr [rbx + 8]
0x5e4c:	mov	rsi, rbp
0x5e4f:	call	0x1b30


0x5df4:	mov	rdi, qword ptr [rdi + 0x10]
0x5df8:	lea	rsi, [rsi*4]
0x5e00:	call	0x1b30


0x5e60:	add	rsp, 8
0x5e64:	mov	eax, 0xc
0x5e69:	pop	rbx
0x5e6a:	pop	rbp
0x5e6b:	ret	


0x5d1c:	mov	rax, qword ptr [rbx + 0x10]
0x5d20:	test	rax, rax
0x5d23:	jne	0x5d10


0x5d10:	mov	rbx, rax
0x5d13:	mov	rax, qword ptr [rbx + 8]
0x5d17:	test	rax, rax
0x5d1a:	jne	0x5d10


0x5cd0:	mov	eax, 1
0x5cd5:	ret	


0x5cb1:	xor	esi, esi
0x5cb3:	cmp	r10, r8
0x5cb6:	sete	sil
0x5cba:	or	esi, 2
0x5cbd:	cmp	rax, r8
0x5cc0:	je	0x5ce5


0x5b05:	mov	rax, qword ptr [r12 + 0x10]
0x5b0a:	mov	rbp, qword ptr [rax + rbx*8]
0x5b0e:	mov	rax, rbp
0x5b11:	shl	rax, 4
0x5b15:	add	rax, qword ptr [r14]
0x5b18:	movzx	edx, byte ptr [rax + 8]
0x5b1c:	cmp	dl, 8
0x5b1f:	jne	0x5ae8


0x5a56:	or	byte ptr [rsi + 0x32], 8
0x5a5a:	xor	eax, eax
0x5a5c:	ret	


0x5943:	cmp	cl, 0x5c
0x5946:	je	0x59b0


0x592e:	cmp	rax, qword ptr [rsi + 0x30]
0x5932:	je	0x5943




0x583a:	cmp	qword ptr [rdi + 0x48], 0
0x583f:	jne	0x582a


0x1bc0:	jmp	qword ptr [rip + 0x2173aa]




0x577a:	call	0x1a70


0x5731:	sub	rsp, 8
0x5735:	call	0x57e0


0x5712:	mov	qword ptr [rsi], rax
0x5715:	mov	rsi, rax
0x5718:	jmp	0x55f0


0x5707:	mov	rdx, rax
0x570a:	shr	rdx, 1
0x570d:	lea	rax, [rdx + rax + 1]
0x5712:	mov	qword ptr [rsi], rax
0x5715:	mov	rsi, rax
0x5718:	jmp	0x55f0


0x56c8:	xor	edx, edx
0x56ca:	mov	eax, 0x80
0x56cf:	xor	r8d, r8d
0x56d2:	div	r9
0x56d5:	test	rax, rax
0x56d8:	sete	r8b
0x56dc:	lea	rcx, [r8 + rax]
0x56e0:	jmp	0x56a5


0x56a5:	mov	rax, rcx
0x56a8:	mul	r9
0x56ab:	seto	dl
0x56ae:	test	rax, rax
0x56b1:	movzx	edx, dl
0x56b4:	js	0x56bb


0x56bb:	sub	rsp, 8
0x56bf:	call	0x57e0


0x567f:	mov	rax, rcx
0x5682:	shr	rax, 1
0x5685:	lea	rcx, [rax + rcx + 1]
0x568a:	mov	qword ptr [rsi], rcx
0x568d:	imul	rcx, r9
0x5691:	mov	rsi, rcx
0x5694:	jmp	0x55f0


0x5649:	jmp	0x55f0


0x5618:	call	0x1880


0x55c9:	jmp	0x5590


0x54cc:	test	r11b, r11b
0x54cf:	jne	0x54f5


0x54c2:	add	r9, 1
0x54c6:	cmp	r9, 0xa
0x54ca:	jne	0x54a0


0x54b6:	mov	rax, qword ptr [rax]
0x54b9:	test	rax, rax
0x54bc:	mov	qword ptr [r8 + r9*8], rax
0x54c0:	je	0x54cc


0x53fb:	call	0x4f70


0x53f1:	add	r9, 1
0x53f5:	cmp	r9, 0xa
0x53f9:	jne	0x53d0


0x53e5:	mov	rax, qword ptr [r11]
0x53e8:	test	rax, rax
0x53eb:	mov	qword ptr [r8 + r9*8], rax
0x53ef:	je	0x53fb


0x53a0:	add	r9, 1
0x53a4:	cmp	qword ptr [r8 + r9*8], 0
0x53a9:	jne	0x53a0


0x1c20:	jmp	qword ptr [rip + 0x21737a]








0x4d8a:	mov	qword ptr [rsp + 0x28], rsi
0x4d8f:	mov	qword ptr [rsp + 0x30], rdx
0x4d94:	mov	rcx, rsp
0x4d97:	mov	rdx, r8
0x4d9a:	mov	rsi, r9
0x4d9d:	call	0x4530


0x49d9:	lea	rbx, [rip + 0x214690]
0x49e0:	cmp	r12, rbx
0x49e3:	je	0x49f4


0x49c2:	call	0x1880




0x47de:	mov	qword ptr [rdi + 0x28], rsi
0x47e2:	mov	qword ptr [rdi + 0x30], rdx
0x47e6:	ret	




0x1c10:	jmp	qword ptr [rip + 0x217382]


0x19c0:	jmp	qword ptr [rip + 0x2174aa]


0x2693:	mov	rsi, qword ptr [rip + 0x218bd6]
0x269a:	mov	edi, dword ptr [rsp + 0x1c]
0x269e:	mov	rdx, rbx
0x26a1:	call	0x4e90


0x19f0:	jmp	qword ptr [rip + 0x217492]


0x1b20:	jmp	qword ptr [rip + 0x2173fa]


0x2628:	lea	rdi, [rbx + r13]
0x262c:	jmp	0x25ca


0x2503:	call	0x2450


0x24f7:	mov	rdi, qword ptr [rip + 0x216b0a]
0x24fe:	call	0x1c80


0x24c4:	pop	rbp
0x24c5:	jmp	rax


0x2473:	pop	rbp
0x2474:	jmp	rax








0x13f83:	xor	esi, esi
0x13f85:	xor	eax, eax
0x13f87:	call	0x1900


0x13e59:	xor	eax, eax
0x13e5b:	mov	esi, 0x406
0x13e60:	call	0x1900


0x13eb0:	mov	edi, ebp
0x13eb2:	xor	eax, eax
0x13eb4:	call	0x1900


0x13e85:	jg	0x13ee0


0x13be5:	cmp	dl, 0x2f
0x13be8:	jne	0x13bd0


0x13a36:	sub	rsp, 8
0x13a3a:	push	rbx
0x13a3b:	push	r12
0x13a3d:	push	r13
0x13a3f:	jmp	0x139ff


0x139f6:	sub	rsp, 8
0x139fa:	push	rbx
0x139fb:	push	0
0x139fd:	push	0
0x139ff:	mov	rdi, rbp
0x13a02:	mov	r9, rdx
0x13a05:	mov	r8, rdx
0x13a08:	call	0xde40




0x136ec:	test	rbp, rbp
0x136ef:	mov	r14, rcx
0x136f2:	mov	rcx, r9
0x136f5:	je	0x137b0


0x13262:	test	rax, rax
0x13265:	js	0x13270


0x134e0:	mov	r8, rdx
0x134e3:	jmp	0x13287




0x1209b:	mov	r14, qword ptr [rsp]
0x1209f:	lea	rax, [r14 + 1]
0x120a3:	mov	rdi, rax
0x120a6:	mov	qword ptr [rbx + 8], rax
0x120aa:	mov	qword ptr [rsp + 0x28], rax
0x120af:	shl	rdi, 4
0x120b3:	call	0x1ac0


0x126d6:	mov	dword ptr [rsp + 0x4c], 0xc
0x126de:	jmp	0x1234c


0x1990:	jmp	qword ptr [rip + 0x2174c2]


0x10190:	lea	rsi, [r14 + 1]
0x10194:	cmp	rsi, qword ptr [rbx + 0x58]
0x10198:	jge	0x10240


0x10116:	mov	byte ptr [rbp + 8], 1
0x1011a:	mov	qword ptr [rsp], rdx
0x1011e:	call	0x1c70


0x10220:	cmp	r12b, 0x5c
0x10224:	je	0x10190


0x10087:	mov	rcx, qword ptr [rsi + 0x10]
0x1008b:	mov	ecx, dword ptr [rcx + r14*4]
0x1008f:	cmp	ecx, -1
0x10092:	je	0x10170


0xfe8d:	movzx	r13d, byte ptr [rbp]
0xfe92:	xor	r8d, r8d
0xfe95:	jmp	0xfec2


0xffa8:	mov	eax, 7
0xffad:	jmp	0xfe21


0xfe61:	cmp	al, 0x16
0xfe63:	jne	0xfe6e


0xf608:	mov	rdi, qword ptr [rsp + 0x98]
0xf610:	xor	rdi, qword ptr fs:[0x28]
0xf619:	jne	0xfdbb


0xf698:	lea	rdi, [rsp + 0x5c]
0xf69d:	mov	rdx, rbx
0xf6a0:	mov	rsi, r12
0xf6a3:	call	0x8a30


0xf6df:	mov	rax, qword ptr [rsp + 8]
0xf6e4:	xor	ebx, ebx
0xf6e6:	mov	rsi, qword ptr [rax + 0xc8]
0xf6ed:	mov	rdx, rsi
0xf6f0:	cmp	rbx, rdx
0xf6f3:	jge	0xf753


0xdee6:	mov	rax, qword ptr [rsp + 0x48]
0xdeeb:	mov	qword ptr [rsp + 0x98], 0
0xdef7:	mov	rax, qword ptr [rax + 0x30]
0xdefb:	cmp	rax, qword ptr [rsp + 0x270]
0xdf03:	jae	0xdf24


0xdec4:	movzx	edx, byte ptr [rsi + 0x38]
0xdec8:	test	dl, 8
0xdecb:	je	0xe360


0xd98c:	add	rsp, 0x38
0xd990:	pop	rbx
0xd991:	pop	rbp
0xd992:	pop	r12
0xd994:	pop	r13
0xd996:	pop	r14
0xd998:	pop	r15
0xd99a:	ret	


0xdaf7:	call	0x1990


0xdaf0:	xor	ebp, ebp
0xdaf2:	jmp	0xd975


0xda9d:	lea	r14, [rbp + 0x10]
0xdaa1:	lea	r15, [rbp + 0x18]
0xdaa5:	mov	rcx, r12
0xdaa8:	mov	rdi, rbx
0xdaab:	mov	rdx, r15
0xdaae:	mov	rsi, r14
0xdab1:	call	0x90b0


0xd967:	cmp	qword ptr [r15 + 0x98], 0
0xd96f:	jne	0xda98


0xda40:	movdqu	xmm0, xmmword ptr [rax]
0xda44:	mov	rdi, rbx
0xda47:	mov	edx, dword ptr [rsi + 0xa0]
0xda4d:	lea	rsi, [r12 - 1]
0xda52:	movaps	xmmword ptr [rsp + 0x10], xmm0
0xda57:	mov	rax, qword ptr [rax + 0x10]
0xda5b:	mov	qword ptr [rsp + 0x20], rax
0xda60:	call	0x9200


0xd9b9:	mov	r14, qword ptr [rdx + 0x50]
0xd9bd:	lea	rdi, [rsp + 0x10]
0xd9c2:	mov	rdx, rax
0xd9c5:	mov	qword ptr [rsp], rdi
0xd9c9:	mov	rsi, r14
0xd9cc:	call	0x8610


0xd10f:	mov	ebp, dword ptr [rax + 8]
0xd112:	test	ebp, 0x3ff00
0xd118:	je	0xd160


0xd0d0:	mov	rdi, qword ptr [rsp + 0x48]
0xd0d5:	add	qword ptr [rsp], 1
0xd0da:	mov	rax, qword ptr [rsp]
0xd0de:	cmp	rax, qword ptr [rdi]
0xd0e1:	jge	0xd390


0xc649:	add	rax, 0x10
0xc64d:	mov	byte ptr [rbp - 0xc9], 0
0xc654:	sub	rsp, rax
0xc657:	lea	rax, [rsp + 0xf]
0xc65c:	and	rax, 0xfffffffffffffff0
0xc660:	mov	qword ptr [rbp - 0xc0], rax
0xc667:	mov	rdx, qword ptr [rbp - 0xb8]
0xc66e:	mov	rdi, qword ptr [rbp - 0xc0]
0xc675:	mov	rsi, r13
0xc678:	call	0x1a90


0xcd36:	mov	rdi, qword ptr [rbp - 0xb8]
0xcd3d:	call	0x1ac0


0xc3b4:	mov	rbx, qword ptr [rsp + 0xc8]
0xc3bc:	xor	rbx, qword ptr fs:[0x28]
0xc3c5:	jne	0xc57c


0xc4f0:	mov	rax, qword ptr [rsp + 0x60]
0xc4f5:	lea	rsi, [r14*8]
0xc4fd:	mov	rdi, qword ptr [rax + 0x10]
0xc501:	call	0x1b30


0xbd1c:	cmp	al, 0xdf
0xbd1e:	movzx	edx, byte ptr [rdx + r8 + 1]
0xbd24:	ja	0xbd8e


0xbb34:	add	rsp, 0x178
0xbb3b:	pop	rbx
0xbb3c:	pop	rbp
0xbb3d:	pop	r12
0xbb3f:	pop	r13
0xbb41:	pop	r14
0xbb43:	pop	r15
0xbb45:	ret	


0xbbc2:	call	0x1990


0xb77e:	mov	rax, qword ptr [rsp + 0x28]
0xb783:	mov	rdi, qword ptr [rsp]
0xb787:	mov	rax, qword ptr [rax]
0xb78a:	mov	r12, qword ptr [rax + rdi*8]
0xb78e:	mov	rax, qword ptr [rsp + 8]
0xb793:	mov	rcx, qword ptr [rax]
0xb796:	mov	rax, r12
0xb799:	shl	rax, 4
0xb79d:	mov	qword ptr [rsp + 0x10], rax
0xb7a2:	lea	rsi, [rcx + rax]
0xb7a6:	movzx	eax, byte ptr [rsi + 8]
0xb7aa:	cmp	eax, 1
0xb7ad:	mov	edx, eax
0xb7af:	jne	0xb740


0x1a50:	jmp	qword ptr [rip + 0x217462]


0xac61:	lea	r12, [rip + 0xa329]
0xac68:	mov	rcx, qword ptr [r13]
0xac6c:	cmp	qword ptr [r8], rcx
0xac6f:	mov	rax, qword ptr [rdx]
0xac72:	je	0xad89


0xad56:	lea	rdi, [rip + 0xa240]
0xad5d:	mov	ecx, 6
0xad62:	mov	rsi, r9
0xad65:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]






0x9d20:	add	rbx, 1
0x9d24:	cmp	r10, rbx
0x9d27:	jle	0x9e00


0x9d3a:	mov	rdx, rax
0x9d3d:	shl	rdx, 4
0x9d41:	add	rdx, qword ptr [r12]
0x9d45:	test	byte ptr [rdx + 8], 8
0x9d49:	je	0x9d20


0x9688:	cmp	byte ptr [rbx + 0x8b], 0
0x968f:	jne	0x9a40


0x95ee:	cmp	byte ptr [rbx + 0x88], 0
0x95f5:	mov	rdi, rbx
0x95f8:	je	0x9678


0x96a0:	test	dl, dl
0x96a2:	jne	0x9b4d


0x9583:	test	dl, dl
0x9585:	jne	0x9798


0x9630:	mov	rax, qword ptr [rbx]
0x9633:	mov	qword ptr [rbx + 8], rax
0x9637:	jmp	0x9566


0x939c:	pop	rbx
0x939d:	ret	


0x9351:	mov	rsi, rdx
0x9354:	mov	edx, dword ptr [rdi + 0xa0]
0x935a:	shr	ebx, 8
0x935d:	call	0x9200


0x93a4:	xor	eax, eax
0x93a6:	cmp	byte ptr [rsi], cl
0x93a8:	je	0x9340


0x93b0:	xor	eax, eax
0x93b2:	ret	


0x9320:	cmp	cl, 0xa
0x9323:	je	0x93e8


0x930e:	cmp	al, 7
0x9310:	jne	0x93b0


0x9252:	add	rsp, 8
0x9256:	pop	rbx
0x9257:	pop	rbp
0x9258:	ret	


0x9270:	mov	rax, qword ptr [rdi + 8]
0x9274:	mov	rcx, qword ptr [rdi + 0x80]
0x927b:	movzx	eax, byte ptr [rax + rsi]
0x927f:	mov	rdx, rax
0x9282:	sar	rax, 6
0x9286:	mov	rcx, qword ptr [rcx + rax*8]
0x928a:	mov	eax, 1
0x928f:	bt	rcx, rdx
0x9293:	jb	0x9252


0x9221:	mov	rax, qword ptr [rdi + 0x10]
0x9225:	jmp	0x923a


0x9106:	mov	rax, qword ptr [rax]
0x9109:	cmp	rax, 0x3f
0x910d:	jg	0x90e0


0x90e0:	add	rbx, 1
0x90e4:	cmp	rbx, qword ptr [r12]
0x90e8:	jge	0x9190


0x8d80:	lea	rdx, [rsi + rcx]
0x8d84:	mov	rax, rdx
0x8d87:	shr	rax, 0x3f
0x8d8b:	add	rax, rdx
0x8d8e:	sar	rax, 1
0x8d91:	lea	rdx, [rax + rax*4]
0x8d95:	mov	r9, rax
0x8d98:	cmp	r12, qword ptr [r8 + rdx*8 + 8]
0x8d9d:	jg	0x8e00


0x8df8:	mov	r9, rcx
0x8dfb:	mov	rcx, rdx
0x8dfe:	nop	
0x8e00:	lea	rsi, [r9 + 1]
0x8e04:	mov	rdx, rcx
0x8e07:	jmp	0x8d4d


0x8de3:	add	rsp, 0x78
0x8de7:	pop	rbx
0x8de8:	pop	rbp
0x8de9:	pop	r12
0x8deb:	pop	r13
0x8ded:	pop	r14
0x8def:	pop	r15
0x8df1:	ret	


0x90a9:	call	0x1990


0x8dc7:	cmp	rsi, -1
0x8dcb:	jne	0x8e10


0x8cd9:	mov	qword ptr [rbx + r15*8], rdx
0x8cdd:	add	r15, 1
0x8ce1:	cmp	rbp, r15
0x8ce4:	jne	0x8ccc


0x8c80:	test	rdx, rdx
0x8c83:	je	0x8cc3


0x8ac6:	mov	esi, 1
0x8acb:	mov	edi, 0x70
0x8ad0:	call	0x1a70


0x8a93:	mov	r11, qword ptr [rax + 0x10]
0x8a97:	xor	r9d, r9d
0x8a9a:	nop	word ptr [rax + rax]
0x8aa0:	mov	rbx, qword ptr [r11 + r9*8]
0x8aa4:	cmp	qword ptr [rbx], rbp
0x8aa7:	jne	0x8abd


0x8a60:	add	rbp, qword ptr [rax]
0x8a63:	add	rax, 8
0x8a67:	cmp	rcx, rax
0x8a6a:	jne	0x8a60


0x8830:	mov	esi, 1
0x8835:	mov	edi, 0x70
0x883a:	call	0x1a70


0x87d9:	mov	rbx, qword ptr [rax + 0x10]
0x87dd:	xor	r10d, r10d
0x87e0:	mov	r9d, ecx
0x87e3:	jmp	0x87f1


0x87a0:	add	r12, qword ptr [rax]
0x87a3:	add	rax, 8
0x87a7:	cmp	r10, rax
0x87aa:	jne	0x87a0


0x86f0:	mov	rsi, rdx
0x86f3:	pop	rbx
0x86f4:	pop	rbp
0x86f5:	pop	r12
0x86f7:	pop	r13
0x86f9:	pop	r14
0x86fb:	jmp	0x8580


0x86f3:	pop	rbx
0x86f4:	pop	rbp
0x86f5:	pop	r12
0x86f7:	pop	r13
0x86f9:	pop	r14
0x86fb:	jmp	0x8580


0x8637:	mov	r14, qword ptr [rdx + 8]
0x863b:	test	r14, r14
0x863e:	jle	0x86f3


0x8536:	add	rsp, 0x18
0x853a:	pop	rbx
0x853b:	pop	rbp
0x853c:	ret	


0x857b:	call	0x1990


0x8540:	lea	rdi, [rsp + 4]
0x8545:	mov	rsi, rbp
0x8548:	call	0x82a0


0x82ea:	mov	rdx, qword ptr [rbx + 0xa0]
0x82f1:	bt	rdx, rax
0x82f5:	jae	0x841d


0x841d:	mov	rdi, qword ptr [rsp + 0x38]
0x8422:	xor	rdi, qword ptr fs:[0x28]
0x842b:	mov	rax, rbp
0x842e:	jne	0x84d2


0x815b:	add	rsp, 0x20
0x815f:	pop	rbx
0x8160:	ret	


0x8158:	mov	qword ptr [rcx], rax
0x815b:	add	rsp, 0x20
0x815f:	pop	rbx
0x8160:	ret	


0x7f7b:	lea	rsi, [rcx + r9]
0x7f7f:	mov	r13, qword ptr [rbp + 0x10]
0x7f83:	mov	rdx, qword ptr [r12 + 0x10]
0x7f88:	sub	r9, 1
0x7f8c:	sub	rcx, 1
0x7f90:	add	rsi, r11
0x7f93:	sub	r11, 1
0x7f97:	mov	rax, qword ptr [r13 + r9*8]
0x7f9c:	mov	r8, qword ptr [rdx + r11*8]
0x7fa0:	cmp	rax, r8
0x7fa3:	je	0x7fb6


0x80a0:	add	r13, rax
0x80a3:	lea	rsi, [r13*8]
0x80ab:	call	0x1b30


0x7ab8:	add	rdx, rsi
0x7abb:	mov	rdi, qword ptr [rdi + 0x10]
0x7abf:	lea	rbp, [rdx + rdx]
0x7ac3:	shl	rdx, 4
0x7ac7:	mov	rsi, rdx
0x7aca:	call	0x1b30


0x7974:	test	rax, rax
0x7977:	je	0x7af0


0x7730:	lea	r11, [rbx + r10]
0x7734:	mov	rax, r11
0x7737:	shr	rax, 0x3f
0x773b:	add	rax, r11
0x773e:	sar	rax, 1
0x7741:	lea	r11, [rax + rax*4]
0x7745:	mov	r14, rax
0x7748:	cmp	qword ptr [r13 + r11*8 + 8], r8
0x774d:	jl	0x78d0


0x78c0:	mov	r14, r10
0x78c3:	mov	r10, rbp
0x78c6:	nop	word ptr cs:[rax + rax]
0x78d0:	lea	rbx, [r14 + 1]
0x78d4:	mov	rbp, r10
0x78d7:	jmp	0x76fe


0x7782:	mov	rax, r15
0x7785:	xor	ebp, ebp
0x7787:	cmp	rbp, rax
0x778a:	jge	0x77e4


0x778c:	lea	r11, [rbp + rax]
0x7791:	mov	r10, r11
0x7794:	shr	r10, 0x3f
0x7798:	add	r10, r11
0x779b:	mov	r11, qword ptr [rdi + 0xd8]
0x77a2:	sar	r10, 1
0x77a5:	lea	r13, [r10 + r10*4]
0x77a9:	cmp	r12, qword ptr [r11 + r13*8 + 8]
0x77ae:	jle	0x77df


0x77e4:	cmp	r15, rbp
0x77e7:	jle	0x7910


0x768d:	mov	rax, qword ptr [rsi + 0x10]
0x7691:	test	rax, rax
0x7694:	je	0x769e


0x7685:	mov	rax, qword ptr [rsi + 0x20]
0x7689:	mov	qword ptr [rdx + 0x20], rax
0x768d:	mov	rax, qword ptr [rsi + 0x10]
0x7691:	test	rax, rax
0x7694:	je	0x769e


0x75f9:	cmp	byte ptr [rax + 0x30], 0x11
0x75fd:	jne	0x75ec


0x75c0:	mov	rcx, qword ptr [rax + rdx*8 + 8]
0x75c5:	mov	qword ptr [rax + rdx*8], rcx
0x75c9:	add	rdx, 1
0x75cd:	cmp	rdx, qword ptr [rdi]
0x75d0:	jl	0x75c0


0x7458:	cmp	rsi, rcx
0x745b:	jb	0x7448


0x7442:	jmp	0x7470


0x7490:	lea	rax, [rsi + 1]
0x7494:	ret	


0x7402:	mov	eax, 1
0x7407:	ret	


0x73e0:	mov	rcx, qword ptr [rdi + 0x10]
0x73e4:	mov	r8, qword ptr [rcx + rdx]
0x73e8:	mov	rcx, qword ptr [rsi + 0x10]
0x73ec:	mov	rcx, qword ptr [rcx + rdx]
0x73f0:	sub	rdx, 8
0x73f4:	cmp	r8, rcx
0x73f7:	jne	0x7410


0x73ab:	cmp	rdx, rcx
0x73ae:	mov	eax, edx
0x73b0:	jne	0x73a0


0x7174:	mov	rax, rbx
0x7177:	add	rbx, 1
0x717b:	shl	rax, 4
0x717f:	add	rdi, rax
0x7182:	call	0x6b70


0x6f60:	add	rsp, 0x18
0x6f64:	pop	rbx
0x6f65:	pop	rbp
0x6f66:	pop	r12
0x6f68:	pop	r13
0x6f6a:	pop	r14
0x6f6c:	pop	r15
0x6f6e:	ret	


0x6fc0:	cmp	r9, qword ptr [rsp + 8]
0x6fc5:	jne	0x6fd0


0x6eab:	mov	rdx, qword ptr [r14 + 0x10]
0x6eaf:	lea	rsi, [rdx - 1]
0x6eb3:	mov	rax, rsi
0x6eb6:	shl	rax, 4
0x6eba:	add	rax, r8
0x6ebd:	test	byte ptr [rax + 0xa], 4
0x6ec1:	je	0x6f70


0x6c7c:	add	rsp, 0x18
0x6c80:	pop	rbx
0x6c81:	pop	rbp
0x6c82:	pop	r12
0x6c84:	pop	r13
0x6c86:	pop	r14
0x6c88:	pop	r15
0x6c8a:	ret	


0x6aff:	lea	esi, [rbp + 1]
0x6b02:	mov	rdi, rbx
0x6b05:	call	0x6960


0x6b10:	mov	rax, qword ptr [rbx + 0xb8]
0x6b17:	mov	rdx, rbp
0x6b1a:	xor	esi, esi
0x6b1c:	sub	rdx, r12
0x6b1f:	shl	rdx, 3
0x6b23:	lea	rdi, [rax + r12*8 + 8]
0x6b28:	call	0x1a10


0x6ae4:	xor	eax, eax
0x6ae6:	pop	rbx
0x6ae7:	pop	rbp
0x6ae8:	pop	r12
0x6aea:	ret	


0x651d:	cmp	r15, rbx
0x6520:	jge	0x66b8


0x6404:	mov	rbp, qword ptr [r14 + 0x28]
0x6408:	add	rbp, r13
0x640b:	add	rbp, qword ptr [r14]
0x640e:	mov	qword ptr [rsp + 0x18], rbp
0x6413:	mov	rcx, qword ptr [rsp + 8]
0x6418:	mov	rdx, qword ptr [rsp + 0x10]
0x641d:	mov	rsi, qword ptr [rsp + 0x18]
0x6422:	mov	rdi, qword ptr [rsp + 0x20]
0x6427:	call	0x5880


0x6709:	mov	eax, dword ptr [r14 + 0x90]
0x6710:	test	eax, eax
0x6712:	jle	0x6930


0x63b6:	add	rsp, 0xa8
0x63bd:	pop	rbx
0x63be:	pop	rbp
0x63bf:	pop	r12
0x63c1:	pop	r13
0x63c3:	pop	r14
0x63c5:	pop	r15
0x63c7:	ret	


0x693a:	call	0x1990


0x62c1:	jmp	0x61d9


0x62e1:	mov	rcx, qword ptr [rbx]
0x62e4:	add	rcx, rbp
0x62e7:	add	rcx, rax
0x62ea:	add	rcx, qword ptr [rbx + 0x28]
0x62ee:	movzx	ecx, byte ptr [rcx]
0x62f1:	movzx	ecx, byte ptr [rdi + rcx]
0x62f5:	mov	rdi, qword ptr [rbx + 8]
0x62f9:	add	rdi, rbp
0x62fc:	mov	byte ptr [rdi + rax], cl
0x62ff:	mov	byte ptr [rsi + rax], cl
0x6302:	lea	ecx, [rax + 1]
0x6305:	cmp	ecx, dword ptr [rbx + 0x90]
0x630b:	jl	0x62d0




0x5fe0:	lea	rdx, [rsi + rsi]
0x5fe4:	shl	rsi, 4
0x5fe8:	mov	qword ptr [rdi], rdx
0x5feb:	mov	rdi, rax
0x5fee:	call	0x1b30


0x5f59:	cmp	qword ptr [rax], rbp
0x5f5c:	lea	rdx, [rsi*8]
0x5f64:	jle	0x5fa0


0x5d25:	mov	rsi, rbx
0x5d28:	mov	rdi, rbp
0x5d2b:	call	r12


0x5ce5:	mov	r8, r9
0x5ce8:	jmp	0x5a60


0x5cc2:	xor	eax, eax
0x5cc4:	cmp	r10, r8
0x5cc7:	je	0x5ce0


0x5b21:	mov	ecx, dword ptr [rsp + 0xc]
0x5b25:	test	ecx, ecx
0x5b27:	je	0x5af6


0x5ae8:	cmp	dl, 9
0x5aeb:	je	0x5c40


0x59b0:	and	edx, 1
0x59b3:	je	0x59bf


0x5948:	cmp	cl, 0x5b
0x594b:	je	0x5980


0x5934:	mov	r9, qword ptr [rsi + 0x10]
0x5938:	cmp	dword ptr [r9 + rax*4], -1
0x593d:	je	0x59bf


0x5841:	push	r12
0x5843:	push	rbp
0x5844:	mov	r12d, edx
0x5847:	push	rbx
0x5848:	mov	rbp, rsi
0x584b:	mov	rbx, rdi
0x584e:	call	0x1aa0




0x56b6:	test	rdx, rdx
0x56b9:	je	0x568a


0x54d1:	call	0x4f70


0x54f5:	mov	dword ptr [rsp + 8], r10d
0x54fa:	jmp	0x54d1


0x54a0:	cmp	r10d, 0x2f
0x54a4:	ja	0x54fc


0x53d0:	mov	eax, dword ptr [r10]
0x53d3:	cmp	eax, 0x2f
0x53d6:	ja	0x541a




0x49f4:	pop	rbx
0x49f5:	mov	dword ptr [rip + 0x214659], 1
0x49ff:	pop	rbp
0x4a00:	pop	r12
0x4a02:	ret	


0x49e5:	mov	rdi, r12
0x49e8:	call	0x1880










0x25ca:	add	rbx, rbp
0x25cd:	mov	rdx, rbp
0x25d0:	mov	rsi, r12
0x25d3:	call	0x1a90


0x1c80:	jmp	qword ptr [rip + 0x21736a]


0x13e87:	cmp	esi, 4
0x13e8a:	je	0x13f60


0x13ee0:	cmp	esi, 0x407
0x13ee6:	jg	0x13f30


0x13bea:	add	rcx, 1
0x13bee:	movzx	edx, byte ptr [rcx]
0x13bf1:	mov	esi, 1
0x13bf6:	test	dl, dl
0x13bf8:	jne	0x13be5


0x13bd0:	test	sil, sil
0x13bd3:	je	0x13bda


0x139ff:	mov	rdi, rbp
0x13a02:	mov	r9, rdx
0x13a05:	mov	r8, rdx
0x13a08:	call	0xde40


0x137b0:	mov	r14, rsi
0x137b3:	xor	r13d, r13d
0x137b6:	jmp	0x13708


0x136fb:	xor	r13d, r13d
0x136fe:	test	rbx, rbx
0x13701:	mov	qword ptr [rsp + 8], rsi
0x13706:	jne	0x13750


0x13270:	test	r8, r8
0x13273:	js	0x13558


0x13267:	cmp	rcx, r8
0x1326a:	jg	0x134e0


0x13287:	movzx	eax, byte ptr [r15 + 0x38]
0x1328c:	mov	r13d, eax
0x1328f:	shr	r13b, 5
0x13293:	mov	edi, r13d
0x13296:	and	edi, 3
0x13299:	cmp	r8, rbx
0x1329c:	mov	dword ptr [rsp + 0x2c], edi
0x132a0:	jle	0x132b1


0x1234c:	mov	rdi, rbx
0x1234f:	call	0x7150




0x1019e:	cmp	byte ptr [rbx + 0x8b], 0
0x101a5:	jne	0x10630


0x10240:	mov	byte ptr [rbp + 8], 0x24
0x10244:	mov	eax, 1
0x10249:	jmp	0x100e4


0x1c70:	jmp	qword ptr [rip + 0x217352]


0x1022a:	mov	rax, qword ptr [rbx + 0x10]
0x1022e:	mov	byte ptr [rbp + 8], 1
0x10232:	mov	ecx, dword ptr [rax + r14*4]
0x10236:	jmp	0x100a6


0x10170:	or	r13d, 0x20
0x10174:	mov	byte ptr [rdi + 8], 1
0x10178:	mov	eax, 1
0x1017d:	mov	byte ptr [rdi + 0xa], r13b
0x10181:	jmp	0x100e4


0x10098:	cmp	r12b, 0x5c
0x1009c:	je	0x10190


0xfec2:	cmp	al, 0x1e
0xfec4:	movsxd	r14, r8d
0xfec7:	je	0xff30


0xfe21:	mov	rcx, qword ptr [rsp + 0x18]
0xfe26:	xor	rcx, qword ptr fs:[0x28]
0xfe2f:	jne	0x10018


0xfe65:	test	r9b, r9b
0xfe68:	je	0xffb2


0xfe6e:	movzx	eax, byte ptr [rbp]
0xfe72:	mov	dword ptr [rbx], 0
0xfe78:	mov	byte ptr [rbx + 8], al
0xfe7b:	xor	eax, eax
0xfe7d:	jmp	0xfe21


0xf61f:	add	rsp, 0xa8
0xf626:	pop	rbx
0xf627:	pop	rbp
0xf628:	pop	r12
0xf62a:	pop	r13
0xf62c:	pop	r14
0xf62e:	pop	r15
0xf630:	ret	


0xfdbb:	call	0x1990


0xf6f5:	lea	rax, [rbx + rdx]
0xf6f9:	mov	rcx, rax
0xf6fc:	shr	rcx, 0x3f
0xf700:	add	rcx, rax
0xf703:	mov	rax, qword ptr [rsp + 8]
0xf708:	sar	rcx, 1
0xf70b:	mov	rdi, qword ptr [rax + 0xd8]
0xf712:	lea	rax, [rcx + rcx*4]
0xf716:	cmp	rbp, qword ptr [rdi + rax*8 + 8]
0xf71b:	jle	0xf74e


0xf753:	cmp	rsi, rbx
0xf756:	jle	0xf850


0xdf05:	mov	rcx, qword ptr [rsp + 0x270]
0xdf0d:	lea	rdx, [rcx - 1]
0xdf11:	sub	rdx, rax
0xdf14:	sub	qword ptr [rsp + 0x270], rdx
0xdf1c:	mov	qword ptr [rsp + 0x98], rdx
0xdf24:	mov	rsi, qword ptr [rsp + 0x48]
0xdf29:	cmp	qword ptr [rsi + 0x10], 0
0xdf2e:	je	0xedc0


0xdf24:	mov	rsi, qword ptr [rsp + 0x48]
0xdf29:	cmp	qword ptr [rsi + 0x10], 0
0xdf2e:	je	0xedc0


0xe360:	mov	qword ptr [rsp + 0x68], 0
0xe369:	jmp	0xdee6


0xded1:	cmp	rbp, r8
0xded4:	je	0xe360


0xd160:	mov	rdi, qword ptr [r14 + 0xc8]
0xd167:	mov	rax, qword ptr [r14 + 0x98]
0xd16e:	xor	ecx, ecx
0xd170:	mov	r10, qword ptr [r14 + 8]
0xd174:	mov	r9, qword ptr [rsp + 8]
0xd179:	mov	qword ptr [rsp + 0x70], rdi
0xd17e:	mov	qword ptr [rsp + 0x50], rax
0xd183:	cmp	rcx, rdi
0xd186:	jge	0xd1db


0xd11a:	mov	edx, dword ptr [r14 + 0xa0]
0xd121:	mov	rsi, qword ptr [rsp + 8]
0xd126:	mov	rdi, r14
0xd129:	call	0x9200


0xc3cb:	add	rsp, 0xd8
0xc3d2:	pop	rbx
0xc3d3:	pop	rbp
0xc3d4:	pop	r12
0xc3d6:	pop	r13
0xc3d8:	pop	r14
0xc3da:	pop	r15
0xc3dc:	ret	


0xc57c:	call	0x1990


0xbd26:	add	edx, -0x80
0xbd29:	mov	ebp, 2
0xbd2e:	cmp	dl, 0x3f
0xbd31:	ja	0xbcc0


0xbd8e:	cmp	al, 0xef
0xbd90:	ja	0xbdd8


0xb7b1:	movzx	r13d, byte ptr [rsi]
0xb7b5:	test	ebx, ebx
0xb7b7:	mov	byte ptr [rbp + r13], 1
0xb7bd:	je	0xb7d0


0xb740:	cmp	eax, 3
0xb743:	je	0xba36




0xad65:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xad67:	mov	rcx, qword ptr [r13]
0xad6b:	seta	al
0xad6e:	sbb	al, 0
0xad70:	test	al, al
0xad72:	lea	rax, [rip + 0xa218]
0xad79:	cmove	r12, rax
0xad7d:	cmp	qword ptr [r8], rcx
0xad80:	mov	rax, qword ptr [rdx]
0xad83:	jne	0xac78


0x9e00:	xor	r9d, r9d
0x9e03:	test	r10, r10
0x9e06:	lea	r11, [rsp + 0x30]
0x9e0b:	jle	0x9e5c


0x9d4b:	lea	r9, [rax + rax*2]
0x9d4f:	mov	rcx, qword ptr [r12 + 0x28]
0x9d54:	lea	r11, [rbp + 0x10]
0x9d58:	mov	rdi, r10
0x9d5b:	shl	r9, 3
0x9d5f:	mov	rsi, r11
0x9d62:	add	rcx, r9
0x9d65:	mov	r15, qword ptr [rcx + 0x10]
0x9d69:	mov	qword ptr [rsp + 8], rcx
0x9d6e:	mov	r8, qword ptr [r15]
0x9d71:	mov	rdx, r8
0x9d74:	mov	qword ptr [rsp], r8
0x9d78:	call	0x7420


0x9695:	mov	qword ptr [rbx + 0x30], rax
0x9699:	jmp	0x9603


0x9a40:	cmp	byte ptr [rbx + 0x88], 0
0x9a47:	jne	0x9b40


0x9678:	call	0x6170


0x95fa:	call	0x6340


0x96a8:	movsxd	rdx, dword ptr [rbx + 0x90]
0x96af:	mov	qword ptr [rbx + 0x30], 0
0x96b7:	mov	r11, qword ptr [rbx + 0x28]
0x96bb:	cmp	edx, 1
0x96be:	jle	0x9aa8


0x9b4d:	mov	rdx, qword ptr [rbx + 0x50]
0x9b51:	mov	byte ptr [rbx + 0x8c], 0
0x9b58:	add	rdx, rbp
0x9b5b:	sub	rdx, r15
0x9b5e:	mov	qword ptr [rbx + 0x58], rdx
0x9b62:	mov	rdx, qword ptr [rbx + 0x60]
0x9b66:	add	rdx, rbp
0x9b69:	sub	rdx, r15
0x9b6c:	mov	qword ptr [rbx + 0x68], rdx
0x9b70:	jmp	0x96a8


0x958b:	lea	rsi, [rbp - 1]
0x958f:	mov	edx, r10d
0x9592:	mov	rdi, rbx
0x9595:	mov	qword ptr [rsp], r8
0x9599:	call	0x9200


0x9798:	mov	r14, qword ptr [rbx + 0x18]
0x979c:	mov	rcx, r8
0x979f:	xor	esi, esi
0x97a1:	jmp	0x97b3


0x93aa:	ret	


0x93e8:	mov	rcx, qword ptr [rdi + 0x98]
0x93ef:	xor	eax, eax
0x93f1:	test	byte ptr [rcx + 0xd8], 0x40
0x93f8:	jne	0x9340


0x9329:	test	cl, cl
0x932b:	jne	0x9340


0x9316:	xor	eax, eax
0x9318:	test	cl, cl
0x931a:	js	0x93aa


0x9295:	xor	eax, eax
0x9297:	cmp	dl, 0xa
0x929a:	jne	0x9252


0x923a:	mov	ebx, dword ptr [rax + rsi*4]
0x923d:	cmp	ebx, -1
0x9240:	je	0x9230


0x910f:	mov	rsi, qword ptr [r13 + 0xa0]
0x9116:	bt	rsi, rax
0x911a:	jae	0x90e0


0x8d9f:	mov	rcx, rax
0x8da2:	cmp	rsi, rcx
0x8da5:	jl	0x8d80


0x8e00:	lea	rsi, [r9 + 1]
0x8e04:	mov	rdx, rcx
0x8e07:	jmp	0x8d4d


0x8d4d:	cmp	rsi, rdx
0x8d50:	jge	0x8da7


0x8e10:	lea	rax, [rbp + 0x10]
0x8e14:	mov	r13, qword ptr [rbx + 0x98]
0x8e1b:	mov	qword ptr [rsp], rax
0x8e1f:	lea	rax, [rsp + 0x4c]
0x8e24:	mov	qword ptr [rsp + 0x38], rax
0x8e29:	lea	rax, [rsp + 0x50]
0x8e2e:	mov	qword ptr [rsp + 0x10], rax
0x8e33:	mov	rax, qword ptr [rsp + 0x30]
0x8e38:	lea	r15, [rcx + rax]
0x8e3c:	jmp	0x8f18


0x8cc3:	add	r15, 1
0x8cc7:	cmp	rbp, r15
0x8cca:	je	0x8ce6


0x8c85:	add	rdx, 8
0x8c89:	add	rsi, 8
0x8c8d:	mov	rdi, r13
0x8c90:	call	0x8610


0x8aa9:	lea	rdi, [rbx + 8]
0x8aad:	mov	rsi, r14
0x8ab0:	call	0x73c0


0x8abd:	add	r9, 1
0x8ac1:	cmp	r10, r9
0x8ac4:	jne	0x8aa0


0x87f1:	mov	r14, qword ptr [rbx + r10*8]
0x87f5:	cmp	qword ptr [r14], r12
0x87f8:	jne	0x87e8


0x8644:	mov	r12, rdi
0x8647:	lea	rdi, [r13 + r14]
0x864c:	mov	rbx, rdx
0x864f:	mov	rbp, rsi
0x8652:	mov	qword ptr [r12], rdi
0x8656:	shl	rdi, 3
0x865a:	call	0x1ac0


0x82fb:	lea	rax, [rbx + 0x70]
0x82ff:	lea	r14, [rsp + 0x20]
0x8304:	sub	rbx, -0x80
0x8308:	xor	ecx, ecx
0x830a:	xor	edx, edx
0x830c:	mov	rsi, rbx
0x830f:	mov	r15, rax
0x8312:	mov	r8, r14
0x8315:	mov	rdi, rax
0x8318:	mov	byte ptr [rsp + 0x28], 8
0x831d:	mov	qword ptr [rsp + 8], rax
0x8322:	call	0x80e0


0x8434:	add	rsp, 0x48
0x8438:	pop	rbx
0x8439:	pop	rbp
0x843a:	pop	r12
0x843c:	pop	r13
0x843e:	pop	r14
0x8440:	pop	r15
0x8442:	ret	


0x84d2:	call	0x1990


0x7fb6:	test	rcx, rcx
0x7fb9:	jns	0x7fca


0x7fa5:	jge	0x8000


0x7af0:	mov	qword ptr [rbx + 8], rdx
0x7af4:	mov	rax, qword ptr [r12 + 8]
0x7af9:	mov	rdi, qword ptr [rbx + 0x10]
0x7afd:	mov	rsi, qword ptr [r12 + 0x10]
0x7b02:	lea	rdx, [rax*8]
0x7b0a:	call	0x1a90


0x797d:	lea	rbp, [rax + rdx*2]
0x7981:	sub	rdx, 1
0x7985:	sub	rax, 1
0x7989:	mov	rdi, rdx
0x798c:	not	rdi
0x798f:	test	rdi, rdi
0x7992:	jns	0x79d0


0x78d0:	lea	rbx, [r14 + 1]
0x78d4:	mov	rbp, r10
0x78d7:	jmp	0x76fe


0x7753:	mov	r10, rax
0x7756:	cmp	rbx, r10
0x7759:	jl	0x7730


0x76fe:	cmp	rbx, rbp
0x7701:	jge	0x775b


0x77df:	cmp	rbp, r10
0x77e2:	jl	0x77b8


0x77b0:	jmp	0x78e0


0x7910:	mov	rbp, -1
0x7917:	jmp	0x780c


0x77ed:	mov	r10, qword ptr [rdi + 0xd8]
0x77f4:	lea	rax, [rbp + rbp*4]
0x77f9:	lea	rax, [r10 + rax*8]
0x77fd:	cmp	r12, qword ptr [rax + 8]
0x7801:	mov	rax, -1
0x7808:	cmovne	rbp, rax
0x780c:	cmp	qword ptr [rsi], 0
0x7810:	jle	0x7932


0x769e:	xor	eax, eax
0x76a0:	ret	


0x7696:	mov	rdx, qword ptr [rsi + 0x20]
0x769a:	mov	qword ptr [rax + 0x20], rdx
0x769e:	xor	eax, eax
0x76a0:	ret	


0x75ff:	mov	rcx, qword ptr [rax + 0x28]
0x7603:	mov	rax, qword ptr [rax + 8]
0x7607:	test	rax, rax
0x760a:	mov	qword ptr [rsi + 8], rax
0x760e:	je	0x7613


0x7448:	lea	rax, [rsi + rcx]
0x744c:	shr	rax, 1
0x744f:	cmp	qword ptr [r8 + rax*8], rdx
0x7453:	jl	0x7480


0x7470:	mov	rax, rcx
0x7473:	mov	rcx, rdi
0x7476:	nop	word ptr cs:[rax + rax]
0x7480:	lea	rsi, [rax + 1]
0x7484:	mov	rdi, rcx
0x7487:	jmp	0x7430


0x73f9:	sub	rax, 1
0x73fd:	test	rax, rax
0x7400:	jns	0x73e0


0x7410:	xor	eax, eax
0x7412:	ret	


0x73b2:	ret	


0x73a0:	add	rdx, 1
0x73a4:	cmp	dword ptr [rsi + rdx*4 - 4], -1
0x73a9:	jne	0x73bd


0x6fc7:	cmp	r9, r13
0x6fca:	jne	0x708c


0x6fd0:	mov	eax, dword ptr [rax + 8]
0x6fd3:	mov	rsi, r15
0x6fd6:	mov	rdi, r14
0x6fd9:	shr	eax, 8
0x6fdc:	and	eax, 0x3ff
0x6fe1:	or	ebp, eax
0x6fe3:	mov	edx, ebp
0x6fe5:	call	0x6d90


0x6f70:	mov	edx, ebp
0x6f72:	mov	rsi, r15
0x6f75:	mov	rdi, r14
0x6f78:	call	0x6d90


0x6ec7:	test	rsi, rsi
0x6eca:	jle	0x6f70


0x1a10:	jmp	qword ptr [rip + 0x217482]


0x6526:	lea	rax, [rdi + 0x20]
0x652a:	mov	qword ptr [rsp + 8], rax
0x652f:	lea	rax, [rsp + 0x44]
0x6534:	mov	qword ptr [rsp + 0x30], rax
0x6539:	lea	rax, [rsp + 0x48]
0x653e:	mov	qword ptr [rsp + 0x38], rax
0x6543:	lea	rax, [rsp + 0x50]
0x6548:	mov	qword ptr [rsp + 0x28], rax
0x654d:	nop	dword ptr [rax]
0x6550:	mov	rbp, qword ptr [r14 + 0x28]
0x6554:	mov	r13, r15
0x6557:	add	rbp, r15
0x655a:	add	rbp, qword ptr [r14]
0x655d:	movzx	r12d, byte ptr [rbp]
0x6562:	test	r12b, 0x80
0x6566:	jne	0x657a


0x66b8:	mov	qword ptr [r14 + 0x30], r15
0x66bc:	mov	qword ptr [r14 + 0x38], r15
0x66c0:	xor	eax, eax
0x66c2:	jmp	0x639f


0x6930:	lea	rcx, [rsp + 0x50]
0x6935:	jmp	0x674b


0x6718:	mov	rdi, qword ptr [r14 + 0x28]
0x671c:	lea	r11d, [rax - 1]
0x6720:	lea	rcx, [rsp + 0x50]
0x6725:	xor	eax, eax
0x6727:	add	rdi, r13
0x672a:	add	rdi, qword ptr [r14]
0x672d:	jmp	0x673a


0x61d9:	mov	rcx, r14
0x61dc:	mov	rdi, r13
0x61df:	call	0x5880


0x62d0:	add	rax, 1
0x62d4:	cmp	rdx, rax
0x62d7:	je	0x61d9


0x630d:	jmp	0x61d9


0x5fa0:	mov	rcx, qword ptr [rax + rdx - 8]
0x5fa5:	cmp	rbp, rcx
0x5fa8:	jge	0x5f83


0x5f66:	test	rsi, rsi
0x5f69:	jle	0x5f83


0x5ce0:	mov	esi, 1
0x5ce5:	mov	r8, r9
0x5ce8:	jmp	0x5a60


0x5cc9:	ret	


0x5af6:	add	rbx, 1
0x5afa:	cmp	qword ptr [r12 + 8], rbx
0x5aff:	jle	0x5c20


0x5b29:	cmp	qword ptr [rax], r15
0x5b2c:	jne	0x5af6


0x5c40:	mov	edx, dword ptr [rsp + 8]
0x5c44:	test	edx, edx
0x5c46:	je	0x5af6


0x5af1:	cmp	dl, 4
0x5af4:	je	0x5b48


0x59bf:	mov	byte ptr [rdi + 8], 1
0x59c3:	mov	eax, 1
0x59c8:	ret	


0x59b5:	lea	rdx, [rax + 1]
0x59b9:	cmp	rdx, qword ptr [rsi + 0x58]
0x59bd:	jl	0x5a00


0x5980:	lea	rcx, [rax + 1]
0x5984:	cmp	rcx, qword ptr [rsi + 0x58]
0x5988:	jge	0x59d0


0x594d:	cmp	cl, 0x5d
0x5950:	je	0x59f0


0x568a:	mov	qword ptr [rsi], rcx
0x568d:	imul	rcx, r9
0x5691:	mov	rsi, rcx
0x5694:	jmp	0x55f0


0x13f60:	mov	eax, dword ptr [rsp]
0x13f63:	cmp	eax, 0x2f
0x13f66:	ja	0x14054


0x13e90:	jg	0x13f50


0x13ee8:	cmp	esi, 0x406
0x13eee:	jge	0x13f60


0x13f30:	cmp	esi, 0x409
0x13f36:	je	0x13f60


0x13bda:	add	rcx, 1
0x13bde:	movzx	edx, byte ptr [rcx]
0x13be1:	test	dl, dl
0x13be3:	je	0x13bfa


0x13bd5:	mov	rax, rcx
0x13bd8:	xor	esi, esi
0x13bda:	add	rcx, 1
0x13bde:	movzx	edx, byte ptr [rcx]
0x13be1:	test	dl, dl
0x13be3:	je	0x13bfa


0x13708:	movzx	r8d, r8b
0x1370c:	mov	rdx, r15
0x1370f:	mov	rsi, r14
0x13712:	push	r8
0x13714:	push	qword ptr [rsp + 0x70]
0x13718:	mov	rdi, r12
0x1371b:	mov	r9, qword ptr [rsp + 0x80]
0x13723:	mov	r8, qword ptr [rsp + 0x70]
0x13728:	call	0x13220


0x13750:	mov	rdi, r15
0x13753:	mov	dword ptr [rsp + 0x1c], r8d
0x13758:	mov	qword ptr [rsp + 0x10], r9
0x1375d:	call	0x1ac0


0x13558:	movzx	eax, byte ptr [r15 + 0x38]
0x1355d:	xor	r8d, r8d
0x13560:	mov	r13d, eax
0x13563:	shr	r13b, 5
0x13567:	mov	edi, r13d
0x1356a:	and	edi, 3
0x1356d:	mov	dword ptr [rsp + 0x2c], edi
0x13571:	jmp	0x132b1


0x13279:	test	rax, rax
0x1327c:	jns	0x13287


0x132b1:	test	al, 0x10
0x132b3:	jne	0x13480


0x132a2:	cmp	qword ptr [r15 + 0x20], 0
0x132a7:	je	0x132b1


0x101ab:	movzx	edi, byte ptr [rdx + r14 + 1]
0x101b1:	mov	r12d, edi
0x101b4:	mov	dword ptr [rsp + 8], edi
0x101b8:	cmp	eax, 1
0x101bb:	mov	byte ptr [rbp], r12b
0x101bf:	mov	byte ptr [rbp + 8], 1
0x101c3:	jle	0x10610


0x10630:	cmp	eax, 1
0x10633:	jle	0x10664


0x100e4:	mov	rdi, qword ptr [rsp + 0x28]
0x100e9:	xor	rdi, qword ptr fs:[0x28]
0x100f2:	jne	0x10718




0x100a6:	mov	edi, ecx
0x100a8:	mov	qword ptr [rsp + 8], rdx
0x100ad:	mov	dword ptr [rsp], ecx
0x100b0:	call	0x1ab0


0x100a2:	mov	byte ptr [rdi + 8], 1
0x100a6:	mov	edi, ecx
0x100a8:	mov	qword ptr [rsp + 8], rdx
0x100ad:	mov	dword ptr [rsp], ecx
0x100b0:	call	0x1ab0


0xff30:	cmp	byte ptr [r10 + 0x8b], 0
0xff38:	je	0xfec9


0xfec9:	mov	rdx, qword ptr [r10 + 8]
0xfecd:	lea	rax, [r11 + 1]
0xfed1:	mov	qword ptr [r10 + 0x48], rax
0xfed5:	movzx	r9d, byte ptr [rdx + r11]
0xfeda:	cmp	rax, r12
0xfedd:	jge	0xffa8


0xfe35:	add	rsp, 0x20
0xfe39:	pop	rbx
0xfe3a:	pop	rbp
0xfe3b:	pop	r12
0xfe3d:	pop	r13
0xfe3f:	pop	r14
0xfe41:	ret	


0x10018:	call	0x1990


0xffb2:	mov	rdi, rsp
0xffb5:	mov	rdx, r8
0xffb8:	mov	rsi, r10
0xffbb:	call	0x5910


0xf74e:	cmp	rbx, rcx
0xf751:	jl	0xf728


0xf71d:	jmp	0xf857


0xf850:	xor	eax, eax
0xf852:	jmp	0xf608


0xf75c:	lea	rax, [rbx + rbx*4]
0xf760:	lea	rsi, [rax*8]
0xf768:	mov	rax, qword ptr [rsp + 8]
0xf76d:	mov	qword ptr [rsp + 0x40], rsi
0xf772:	mov	rax, qword ptr [rax + 0xd8]
0xf779:	cmp	rbp, qword ptr [rax + rsi + 8]
0xf77e:	jne	0xf850


0xedc0:	mov	dword ptr [rsp + 0x5c], 1
0xedc8:	jmp	0xe9b9


0xdf34:	mov	rdi, qword ptr [rsp + 0x38]
0xdf39:	mov	rax, qword ptr [rdi + 0x48]
0xdf3d:	test	rax, rax
0xdf40:	je	0xedc0


0xdeda:	and	edx, 1
0xdedd:	cmove	rax, rdi
0xdee1:	mov	qword ptr [rsp + 0x68], rax
0xdee6:	mov	rax, qword ptr [rsp + 0x48]
0xdeeb:	mov	qword ptr [rsp + 0x98], 0
0xdef7:	mov	rax, qword ptr [rax + 0x30]
0xdefb:	cmp	rax, qword ptr [rsp + 0x270]
0xdf03:	jae	0xdf24


0xd188:	lea	rax, [rcx + rdi]
0xd18c:	mov	r11, qword ptr [r14 + 0xd8]
0xd193:	mov	rsi, rax
0xd196:	shr	rsi, 0x3f
0xd19a:	add	rsi, rax
0xd19d:	sar	rsi, 1
0xd1a0:	lea	rax, [rsi + rsi*4]
0xd1a4:	cmp	r9, qword ptr [r11 + rax*8 + 8]
0xd1a9:	jle	0xd1d6


0xd1db:	cmp	qword ptr [rsp + 0x70], rcx
0xd1e0:	jle	0xd206


0xbd33:	jmp	0xbcc2


0xbd92:	cmp	al, 0xe0
0xbd94:	jne	0xbd9f


0xbdd8:	cmp	al, 0xf7
0xbdda:	ja	0xbdf0


0xb7d0:	mov	rax, qword ptr [rsp + 0x30]
0xb7d5:	test	byte ptr [rax + 0x1a], 0x40
0xb7d9:	je	0xb767


0xb7bf:	call	0x1c60


0xba36:	mov	r13, rbp
0xba39:	xor	r12d, r12d
0xba3c:	mov	qword ptr [rsp + 0x18], 0
0xba45:	mov	rax, qword ptr [rsp + 0x10]
0xba4a:	mov	rsi, qword ptr [rsp + 0x18]
0xba4f:	xor	r14d, r14d
0xba52:	mov	rax, qword ptr [rcx + rax]
0xba56:	mov	r15, qword ptr [rax + rsi]
0xba5a:	nop	word ptr [rax + rax]
0xba60:	bt	r15, r14
0xba64:	jae	0xba85


0xb749:	cmp	eax, 6
0xb74c:	je	0xb8d8


0x9e5c:	mov	rdi, qword ptr [rsp + 0x30]
0x9e61:	call	0x1880


0x9603:	mov	qword ptr [rbx + 0x48], 0
0x960b:	xor	eax, eax
0x960d:	mov	rcx, qword ptr [rsp + 0x38]
0x9612:	xor	rcx, qword ptr fs:[0x28]
0x961b:	jne	0x9c6a


0x9a4d:	mov	rcx, qword ptr [rbx + 0x78]
0x9a51:	test	rcx, rcx
0x9a54:	je	0x9603


0x9b40:	mov	rdi, rbx
0x9b43:	call	0x6100


0x9aa8:	mov	rax, qword ptr [rbx]
0x9aab:	mov	rdx, qword ptr [rbx + 0x78]
0x9aaf:	add	rax, rbp
0x9ab2:	test	rdx, rdx
0x9ab5:	movzx	eax, byte ptr [r11 + rax - 1]
0x9abb:	mov	qword ptr [rbx + 0x38], 0
0x9ac3:	je	0x9ac9


0x96c4:	cmp	byte ptr [rbx + 0x89], 0
0x96cb:	jne	0x9988


0x97b3:	lea	rdx, [rsi + rcx]
0x97b7:	mov	rax, rdx
0x97ba:	shr	rax, 0x3f
0x97be:	add	rax, rdx
0x97c1:	sar	rax, 1
0x97c4:	mov	rdx, qword ptr [r14 + rax*8]
0x97c8:	mov	r12, rax
0x97cb:	cmp	rdx, rbp
0x97ce:	jle	0x97a8


0x93fe:	ret	


0x932d:	mov	rcx, qword ptr [rdi + 0x98]
0x9334:	xor	eax, eax
0x9336:	test	byte ptr [rcx + 0xd8], 0x80
0x933d:	jne	0x93aa


0x929c:	xor	eax, eax
0x929e:	cmp	byte ptr [rbp + 0x8d], 0
0x92a5:	setne	al
0x92a8:	add	rsp, 8
0x92ac:	add	eax, eax
0x92ae:	pop	rbx
0x92af:	pop	rbp
0x92b0:	ret	


0x9230:	sub	rsi, 1
0x9234:	cmp	rsi, -1
0x9238:	je	0x9260


0x9242:	cmp	byte ptr [rbp + 0x8e], 0
0x9249:	jne	0x92c8


0x911c:	mov	r8, qword ptr [r15 + 0xe8]
0x9123:	cmp	r8, qword ptr [r15 + 0xf0]
0x912a:	mov	r9, qword ptr [r15 + 0xf8]
0x9131:	je	0x91a8


0x8f18:	mov	r10, qword ptr [r15]
0x8f1b:	mov	r9, qword ptr [rbp + 8]
0x8f1f:	mov	rsi, qword ptr [rsp]
0x8f23:	mov	rdx, r10
0x8f26:	mov	rdi, r9
0x8f29:	call	0x7420


0x8aa0:	mov	rbx, qword ptr [r11 + r9*8]
0x8aa4:	cmp	qword ptr [rbx], rbp
0x8aa7:	jne	0x8abd


0x87fa:	movzx	eax, byte ptr [r14 + 0x68]
0x87ff:	and	eax, 0xf
0x8802:	cmp	eax, r9d
0x8805:	jne	0x87e8


0x87e8:	add	r10, 1
0x87ec:	cmp	r10, r11
0x87ef:	je	0x8830


0x7fbb:	jmp	0x7fd8


0x7fca:	mov	r10, qword ptr [rdi + rcx*8]
0x7fce:	cmp	r10, r8
0x7fd1:	jg	0x7fc0


0x7fa7:	sub	r11, 1
0x7fab:	js	0x8010


0x8000:	sub	r9, 1
0x8004:	js	0x8010


0x7994:	test	rax, rax
0x7997:	js	0x79d0


0x79d0:	test	rdx, rdx
0x79d3:	jns	0x7a68


0x77b8:	lea	r13, [rbp + r10]
0x77bd:	mov	rax, r13
0x77c0:	shr	rax, 0x3f
0x77c4:	add	rax, r13
0x77c7:	sar	rax, 1
0x77ca:	lea	r13, [rax + rax*4]
0x77ce:	mov	r14, rax
0x77d1:	cmp	qword ptr [r11 + r13*8 + 8], r12
0x77d6:	jl	0x78f0


0x78e0:	mov	r14, r10
0x78e3:	mov	r10, rax
0x78e6:	nop	word ptr cs:[rax + rax]
0x78f0:	lea	rbp, [r14 + 1]
0x78f4:	mov	rax, r10
0x78f7:	jmp	0x7787


0x780c:	cmp	qword ptr [rsi], 0
0x7810:	jle	0x7932


0x7932:	xor	eax, eax
0x7934:	jmp	0x78ae


0x7816:	mov	qword ptr [rsp + 0x30], rbp
0x781b:	mov	qword ptr [rsp + 0x20], r9
0x7820:	mov	r13, rdi
0x7823:	mov	qword ptr [rsp + 0x18], r8
0x7828:	mov	qword ptr [rsp + 0x10], rcx
0x782d:	xor	r14d, r14d
0x7830:	mov	qword ptr [rsp + 0x38], rsi
0x7835:	mov	qword ptr [rsp + 0x28], rbx
0x783a:	mov	rbp, rdx
0x783d:	mov	r15, r12
0x7840:	mov	rax, qword ptr [rbp]
0x7844:	mov	rdx, qword ptr [r13 + 0xd8]
0x784b:	mov	rdi, r13
0x784e:	mov	r9, qword ptr [rsp + 0x28]
0x7853:	mov	r8, qword ptr [rsp + 0x18]
0x7858:	mov	rcx, qword ptr [rsp + 0x10]
0x785d:	mov	rsi, qword ptr [rax + r14*8]
0x7861:	lea	rax, [rsi + rsi*4]
0x7865:	lea	rax, [rdx + rax*8]
0x7869:	mov	rdx, qword ptr [rsp + 8]
0x786e:	mov	rax, qword ptr [rax]
0x7871:	shl	rax, 4
0x7875:	add	rax, qword ptr [rdx]
0x7878:	mov	r12, qword ptr [rax]
0x787b:	mov	rdx, r12
0x787e:	call	0x5c90


0x7613:	mov	rax, qword ptr [rdi + 0xe0]
0x761a:	mov	rdx, qword ptr [rsi + 0x28]
0x761e:	cmp	rcx, 0x3f
0x7622:	mov	rdx, qword ptr [rax + rdx*8]
0x7626:	mov	qword ptr [rax + rcx*8], rdx
0x762a:	jg	0x75ec


0x7610:	mov	qword ptr [rax], rsi
0x7613:	mov	rax, qword ptr [rdi + 0xe0]
0x761a:	mov	rdx, qword ptr [rsi + 0x28]
0x761e:	cmp	rcx, 0x3f
0x7622:	mov	rdx, qword ptr [rax + rdx*8]
0x7626:	mov	qword ptr [rax + rcx*8], rdx
0x762a:	jg	0x75ec


0x7480:	lea	rsi, [rax + 1]
0x7484:	mov	rdi, rcx
0x7487:	jmp	0x7430


0x7455:	mov	rcx, rax
0x7458:	cmp	rsi, rcx
0x745b:	jb	0x7448


0x7430:	cmp	rsi, rdi
0x7433:	jae	0x745d


0x73bd:	ret	


0x708c:	mov	rsi, r15
0x708f:	call	0x5ee0


0x6ed0:	shl	rdx, 4
0x6ed4:	sub	r8, rax
0x6ed7:	mov	rcx, qword ptr [r14 + 0x20]
0x6edb:	lea	r8, [r8 + rdx - 0x20]
0x6ee0:	jmp	0x6efa




0x6568:	mov	rdi, qword ptr [rsp + 8]
0x656d:	call	0x1c40


0x657a:	mov	rax, qword ptr [r14 + 0x20]
0x657e:	mov	rdi, qword ptr [rsp + 0x30]
0x6583:	mov	rdx, rbx
0x6586:	mov	rcx, qword ptr [rsp + 8]
0x658b:	sub	rdx, r15
0x658e:	mov	rsi, rbp
0x6591:	mov	qword ptr [rsp + 0x10], rdx
0x6596:	mov	qword ptr [rsp + 0x48], rax
0x659b:	mov	qword ptr [rsp + 0x20], rdi
0x65a0:	call	0x5880


0x639f:	mov	rcx, qword ptr [rsp + 0x98]
0x63a7:	xor	rcx, qword ptr fs:[0x28]
0x63b0:	jne	0x693a


0x674b:	mov	qword ptr [rsp + 0x18], rcx
0x6750:	jmp	0x6413


0x673a:	movzx	esi, byte ptr [rdi + rax]
0x673e:	cmp	r11, rax
0x6741:	movzx	esi, byte ptr [rdx + rsi]
0x6745:	mov	byte ptr [rcx + rax], sil
0x6749:	jne	0x672f


0x62dd:	mov	rdi, qword ptr [rbx + 0x78]
0x62e1:	mov	rcx, qword ptr [rbx]
0x62e4:	add	rcx, rbp
0x62e7:	add	rcx, rax
0x62ea:	add	rcx, qword ptr [rbx + 0x28]
0x62ee:	movzx	ecx, byte ptr [rcx]
0x62f1:	movzx	ecx, byte ptr [rdi + rcx]
0x62f5:	mov	rdi, qword ptr [rbx + 8]
0x62f9:	add	rdi, rbp
0x62fc:	mov	byte ptr [rdi + rax], cl
0x62ff:	mov	byte ptr [rsi + rax], cl
0x6302:	lea	ecx, [rax + 1]
0x6305:	cmp	ecx, dword ptr [rbx + 0x90]
0x630b:	jl	0x62d0


0x5f83:	mov	qword ptr [rax + rdx], rbp
0x5f87:	mov	eax, 1
0x5f8c:	add	qword ptr [rbx + 8], 1
0x5f91:	jmp	0x5f0e


0x5f6b:	add	rdx, rax
0x5f6e:	nop	
0x5f70:	mov	rcx, qword ptr [rdx - 8]
0x5f74:	sub	rdx, 8
0x5f78:	mov	qword ptr [rdx + 8], rcx
0x5f7c:	cmp	rax, rdx
0x5f7f:	jne	0x5f70


0x5c20:	mov	r15d, dword ptr [rsp + 0x20]
0x5c25:	add	rsp, 0x48
0x5c29:	mov	eax, r15d
0x5c2c:	pop	rbx
0x5c2d:	sar	eax, 1
0x5c2f:	pop	rbp
0x5c30:	pop	r12
0x5c32:	pop	r13
0x5c34:	pop	r14
0x5c36:	pop	r15
0x5c38:	ret	


0x5b2e:	add	rsp, 0x48
0x5b32:	mov	eax, 0xffffffff
0x5b37:	pop	rbx
0x5b38:	pop	rbp
0x5b39:	pop	r12
0x5b3b:	pop	r13
0x5b3d:	pop	r14
0x5b3f:	pop	r15
0x5b41:	ret	


0x5c4c:	cmp	qword ptr [rax], r15
0x5c4f:	jne	0x5af6


0x5b48:	cmp	r10, -1
0x5b4c:	je	0x5af6


0x5a00:	mov	qword ptr [rsi + 0x48], rdx
0x5a04:	movzx	eax, byte ptr [r8 + rax + 1]
0x5a0a:	mov	byte ptr [rdi + 8], 1
0x5a0e:	mov	byte ptr [rdi], al
0x5a10:	mov	eax, 1
0x5a15:	ret	


0x598a:	movzx	eax, byte ptr [r8 + rax + 1]
0x5990:	cmp	al, 0x3a
0x5992:	mov	byte ptr [rdi], al
0x5994:	je	0x5a30


0x59d0:	mov	byte ptr [rdi + 8], 1
0x59d4:	mov	byte ptr [rdi], 0x5b
0x59d7:	mov	eax, 1
0x59dc:	ret	


0x59f0:	mov	byte ptr [rdi + 8], 0x15
0x59f4:	mov	eax, 1
0x59f9:	ret	


0x5956:	cmp	cl, 0x5e
0x5959:	je	0x59e0


0x13f6c:	add	rax, qword ptr [rsp + 0x10]
0x13f71:	mov	edx, dword ptr [rax]
0x13f73:	mov	edi, ebp
0x13f75:	xor	eax, eax
0x13f77:	call	0x1900


0x14054:	mov	rax, qword ptr [rsp + 8]
0x14059:	jmp	0x13f71


0x13e96:	cmp	esi, 2
0x13e99:	je	0x13f60


0x13f50:	cmp	esi, 9
0x13f53:	je	0x13eb0


0x13ef0:	cmp	esi, 0x401
0x13ef6:	je	0x13eb0


0x13f38:	jl	0x13eb0


0x1327e:	cmp	rbx, r8
0x13281:	jle	0x13558


0x132b9:	test	r12, r12
0x132bc:	je	0x13480


0x13480:	mov	edi, 0x10
0x13485:	mov	r14d, 1
0x1348b:	mov	r13d, 1
0x13491:	xor	r12d, r12d
0x13494:	jmp	0x132df


0x132a9:	test	al, 8
0x132ab:	je	0x134a0


0x10610:	call	0x1c70


0x101c9:	mov	rax, qword ptr [rbx + 0x10]
0x101cd:	mov	r8d, dword ptr [rax + rsi*4]
0x101d1:	mov	edi, r8d
0x101d4:	mov	dword ptr [rsp], r8d
0x101d8:	call	0x1ab0


0x10664:	cmp	byte ptr [rbx + 0x8c], 0
0x1066b:	mov	rcx, qword ptr [rbx]
0x1066e:	mov	rdi, qword ptr [rbx + 0x28]
0x10672:	je	0x106b8


0x10635:	mov	rcx, qword ptr [rbx + 0x10]
0x10639:	lea	rdi, [rsi*4]
0x10641:	mov	r8d, dword ptr [rcx + rsi*4]
0x10645:	cmp	r8d, -1
0x10649:	je	0x106ff


0x1ab0:	jmp	qword ptr [rip + 0x217432]


0xff3a:	cmp	byte ptr [r10 + 0x8c], 0
0xff42:	je	0xffd8


0xfee3:	cmp	r13b, r9b
0xfee6:	jne	0xfea0


0xf728:	lea	rdx, [rbx + rcx]
0xf72c:	mov	rax, rdx
0xf72f:	shr	rax, 0x3f
0xf733:	add	rax, rdx
0xf736:	sar	rax, 1
0xf739:	lea	rdx, [rax + rax*4]
0xf73d:	mov	r8, rax
0xf740:	cmp	rbp, qword ptr [rdi + rdx*8 + 8]
0xf745:	jg	0xf860


0xf857:	mov	r8, rcx
0xf85a:	mov	rcx, rdx
0xf85d:	nop	dword ptr [rax]
0xf860:	lea	rbx, [r8 + 1]
0xf864:	mov	rdx, rcx
0xf867:	jmp	0xf6f0


0xf784:	cmp	rbx, -1
0xf788:	je	0xf850


0xe9b9:	mov	rsi, qword ptr [rsp + 0x228]
0xe9c1:	xor	rsi, qword ptr fs:[0x28]
0xe9ca:	mov	eax, dword ptr [rsp + 0x5c]
0xe9ce:	jne	0xf56b


0xdf46:	mov	rdx, qword ptr [rdi + 0x50]
0xdf4a:	test	rdx, rdx
0xdf4d:	je	0xedc0


0xd1d6:	cmp	rsi, rcx
0xd1d9:	jg	0xd1b0


0xd1ab:	jmp	0xd378


0xd206:	mov	rax, qword ptr [rsp + 0x50]
0xd20b:	cmp	qword ptr [r14 + 0xe8], 0
0xd213:	mov	rdx, qword ptr [rax]
0xd216:	mov	rax, qword ptr [rdx + rbx]
0xd21a:	mov	qword ptr [rsp + 0x58], rax
0xd21f:	jle	0xd3db


0xd1e2:	mov	rdx, qword ptr [r14 + 0xd8]
0xd1e9:	lea	rax, [rcx + rcx*4]
0xd1ed:	mov	rdi, qword ptr [rsp + 8]
0xd1f2:	lea	rax, [rdx + rax*8]
0xd1f6:	cmp	qword ptr [rax + 8], rdi
0xd1fa:	jne	0xd206


0xbcc2:	add	rsp, 8
0xbcc6:	mov	eax, ebp
0xbcc8:	pop	rbx
0xbcc9:	pop	rbp
0xbcca:	pop	r12
0xbccc:	pop	r13
0xbcce:	ret	


0xbd96:	cmp	dl, 0x9f
0xbd99:	jbe	0xbcc0


0xbd9f:	mov	ebp, 3
0xbda4:	movsxd	rdi, ebp
0xbda7:	add	r8, rdi
0xbdaa:	cmp	rcx, r8
0xbdad:	jl	0xbcc0


0xbddc:	cmp	al, 0xf0
0xbdde:	jne	0xbde9


0xbdf0:	cmp	al, 0xfb
0xbdf2:	ja	0xbe08


0xb767:	mov	rdi, qword ptr [rsp + 0x20]
0xb76c:	add	qword ptr [rsp], 1
0xb771:	mov	rax, qword ptr [rsp]
0xb775:	cmp	rax, qword ptr [rdi]
0xb778:	jge	0xbb1d


0xb7db:	mov	rsi, qword ptr [rsp + 8]
0xb7e0:	cmp	dword ptr [rsi + 0xb4], 1
0xb7e7:	jle	0xb767


0x1c60:	jmp	qword ptr [rip + 0x21735a]


0xba66:	test	ebx, ebx
0xba68:	mov	byte ptr [r13 + r14], 1
0xba6e:	je	0xba85


0xba85:	add	r14, 1
0xba89:	cmp	r14, 0x40
0xba8d:	jne	0xba60


0xb8d8:	mov	rax, qword ptr [rsp + 8]
0xb8dd:	mov	r12, qword ptr [rsi]
0xb8e0:	cmp	dword ptr [rax + 0xb4], 1
0xb8e7:	jle	0xb90d


0xb752:	and	edx, 0xfffffffd
0xb755:	cmp	dl, 5
0xb758:	je	0xbb54


0x9621:	add	rsp, 0x48
0x9625:	pop	rbx
0x9626:	pop	rbp
0x9627:	pop	r12
0x9629:	pop	r13
0x962b:	pop	r14
0x962d:	pop	r15
0x962f:	ret	


0x9c6a:	call	0x1990


0x9a5a:	cmp	qword ptr [rbx + 0x40], rax
0x9a5e:	mov	rdx, qword ptr [rbx + 0x30]
0x9a62:	cmovle	rax, qword ptr [rbx + 0x40]
0x9a67:	cmp	rax, rdx
0x9a6a:	jg	0x9a78


0x9ac9:	mov	rcx, qword ptr [rbx + 0x80]
0x9ad0:	movzx	edx, al
0x9ad3:	sar	rdx, 6
0x9ad7:	mov	rcx, qword ptr [rcx + rdx*8]
0x9adb:	mov	edx, 1
0x9ae0:	bt	rcx, rax
0x9ae4:	jb	0x9b00


0x9ac5:	movzx	eax, byte ptr [rdx + rax]
0x9ac9:	mov	rcx, qword ptr [rbx + 0x80]
0x9ad0:	movzx	edx, al
0x9ad3:	sar	rdx, 6
0x9ad7:	mov	rcx, qword ptr [rcx + rdx*8]
0x9adb:	mov	edx, 1
0x9ae0:	bt	rcx, rax
0x9ae4:	jb	0x9b00


0x96d1:	lea	r14, [r11 + rax]
0x96d5:	cmp	r15, r14
0x96d8:	jle	0x9b1f


0x9988:	mov	rcx, qword ptr [rbx]
0x998b:	mov	rdi, rbp
0x998e:	sub	rdi, rdx
0x9991:	mov	rdx, rdi
0x9994:	lea	r12, [rcx + r11]
0x9998:	add	rdx, r12
0x999b:	lea	rsi, [r12 + rbp - 1]
0x99a0:	cmp	rcx, rdx
0x99a3:	cmovb	rcx, rdx
0x99a7:	cmp	rcx, rsi
0x99aa:	jbe	0x99c5


0x97a8:	jge	0x97e3


0x97d0:	mov	rcx, rax
0x97d3:	jmp	0x97ae


0x924b:	xor	eax, eax
0x924d:	cmp	ebx, 0xa
0x9250:	je	0x929c


0x92c8:	mov	edi, ebx
0x92ca:	call	0x1ab0


0x91a8:	lea	rax, [r8 + r8]
0x91ac:	mov	rsi, r8
0x91af:	mov	rdi, r9
0x91b2:	shl	rsi, 4
0x91b6:	mov	qword ptr [rsp + 8], rcx
0x91bb:	mov	qword ptr [rsp + 0x10], rax
0x91c0:	call	0x1b30


0x9133:	mov	esi, 0x30
0x9138:	mov	edi, 1
0x913d:	mov	qword ptr [rsp + 0x10], r9
0x9142:	mov	qword ptr [rsp + 8], r8
0x9147:	mov	qword ptr [rsp + 0x18], rcx
0x914c:	call	0x1a70


0x8807:	mov	rdi, qword ptr [r14 + 0x50]
0x880b:	test	rdi, rdi
0x880e:	je	0x87e8


0x7fd8:	sub	rsi, 1
0x7fdc:	mov	qword ptr [rdi + rsi*8], r8
0x7fe0:	sub	r9, 1
0x7fe4:	js	0x8010


0x7fd3:	cmp	r10, r8
0x7fd6:	je	0x7fe0


0x7fc0:	sub	rcx, 1
0x7fc4:	cmp	rcx, -1
0x7fc8:	je	0x7fd8


0x8010:	mov	rcx, qword ptr [rbx + 8]
0x8014:	mov	rdx, qword ptr [rbp + 8]
0x8018:	add	rdx, rcx
0x801b:	add	rdx, qword ptr [r12 + 8]
0x8020:	lea	rax, [rcx - 1]
0x8024:	lea	r9, [rdx - 1]
0x8028:	sub	rdx, rsi
0x802b:	add	rcx, rdx
0x802e:	test	rdx, rdx
0x8031:	mov	qword ptr [rbx + 8], rcx
0x8035:	jle	0x807d


0x7fad:	mov	r8, qword ptr [rdx + r11*8]
0x7fb1:	cmp	rax, r8
0x7fb4:	jne	0x7fa5


0x8006:	mov	rax, qword ptr [r13 + r9*8]
0x800b:	jmp	0x7fa0


0x7999:	mov	rcx, qword ptr [rbx + 0x10]
0x799d:	mov	rsi, qword ptr [r12 + 0x10]
0x79a2:	mov	rsi, qword ptr [rsi + rdx*8]
0x79a6:	cmp	qword ptr [rcx + rax*8], rsi
0x79aa:	je	0x7a40


0x79d9:	mov	rcx, qword ptr [rbx + 8]
0x79dd:	mov	rax, qword ptr [r12 + 8]
0x79e2:	lea	r8, [rcx + rax*2 - 1]
0x79e7:	mov	rdx, r8
0x79ea:	sub	rdx, rbp
0x79ed:	add	rdx, 1
0x79f1:	je	0x7a2a


0x7a68:	mov	rax, qword ptr [rbx + 0x10]
0x7a6c:	add	rdx, 1
0x7a70:	mov	rsi, qword ptr [r12 + 0x10]
0x7a75:	sub	rbp, rdx
0x7a78:	shl	rdx, 3
0x7a7c:	lea	rdi, [rax + rbp*8]
0x7a80:	call	0x1a90


0x78f0:	lea	rbp, [r14 + 1]
0x78f4:	mov	rax, r10
0x78f7:	jmp	0x7787


0x77dc:	mov	r10, rax
0x77df:	cmp	rbp, r10
0x77e2:	jl	0x77b8


0x7787:	cmp	rbp, rax
0x778a:	jge	0x77e4


0x78ae:	add	rsp, 0x48
0x78b2:	pop	rbx
0x78b3:	pop	rbp
0x78b4:	pop	r12
0x78b6:	pop	r13
0x78b8:	pop	r14
0x78ba:	pop	r15
0x78bc:	ret	


0x762c:	mov	rax, -2
0x7633:	rol	rax, cl
0x7636:	and	qword ptr [rdi + 0xa0], rax
0x763d:	jmp	0x75ec


0x6efa:	cmp	qword ptr [rcx + rsi*8], r15
0x6efe:	jne	0x6ee8


0x1c40:	jmp	qword ptr [rip + 0x21736a]


0x6413:	mov	rcx, qword ptr [rsp + 8]
0x6418:	mov	rdx, qword ptr [rsp + 0x10]
0x641d:	mov	rsi, qword ptr [rsp + 0x18]
0x6422:	mov	rdi, qword ptr [rsp + 0x20]
0x6427:	call	0x5880


0x672f:	add	rax, 1
0x6733:	cmp	qword ptr [rsp + 0x10], rax
0x6738:	je	0x674b


0x5fc2:	jmp	0x5f83


0x5fb0:	mov	qword ptr [rax + rdx], rcx
0x5fb4:	sub	rdx, 8
0x5fb8:	mov	rcx, qword ptr [rax + rdx - 8]
0x5fbd:	cmp	rcx, rbp
0x5fc0:	jg	0x5fb0


0x5f0e:	add	rsp, 8
0x5f12:	pop	rbx
0x5f13:	pop	rbp
0x5f14:	ret	


0x5f81:	xor	edx, edx
0x5f83:	mov	qword ptr [rax + rdx], rbp
0x5f87:	mov	eax, 1
0x5f8c:	add	qword ptr [rbx + 8], 1
0x5f91:	jmp	0x5f0e


0x5f70:	mov	rcx, qword ptr [rdx - 8]
0x5f74:	sub	rdx, 8
0x5f78:	mov	qword ptr [rdx + 8], rcx
0x5f7c:	cmp	rax, rdx
0x5f7f:	jne	0x5f70


0x5c55:	add	rsp, 0x48
0x5c59:	xor	eax, eax
0x5c5b:	pop	rbx
0x5c5c:	pop	rbp
0x5c5d:	pop	r12
0x5c5f:	pop	r13
0x5c61:	pop	r14
0x5c63:	pop	r15
0x5c65:	ret	


0x5b4e:	mov	rax, qword ptr [rsp]
0x5b52:	mov	r13, qword ptr [rsp + 0x28]
0x5b57:	mov	rdi, rbp
0x5b5a:	mov	qword ptr [rsp + 0x30], r12
0x5b5f:	mov	qword ptr [rsp + 0x38], rbx
0x5b64:	mov	r12, r10
0x5b67:	add	r13, qword ptr [rax + 0xd8]
0x5b6e:	lea	rax, [rbp + rbp*2]
0x5b73:	mov	rbp, r14
0x5b76:	mov	r14, rdi
0x5b79:	shl	rax, 3
0x5b7d:	mov	rbx, rax
0x5b80:	cmp	qword ptr [r13], r14
0x5b84:	jne	0x5bf0


0x5a30:	and	edx, 4
0x5a33:	je	0x59d0


0x599a:	cmp	al, 0x3d
0x599c:	je	0x5a20


0x59e0:	mov	byte ptr [rdi + 8], 0x19
0x59e4:	mov	eax, 1
0x59e9:	ret	


0x595f:	cmp	cl, 0x2d
0x5962:	jne	0x59bf


0x13f71:	mov	edx, dword ptr [rax]
0x13f73:	mov	edi, ebp
0x13f75:	xor	eax, eax
0x13f77:	call	0x1900


0x13e9f:	jg	0x13eb0


0x13f59:	jg	0x13f60


0x13ef8:	cmp	esi, 0x402
0x13efe:	je	0x13f60


0x13f3e:	cmp	esi, 0x40a
0x13f44:	jne	0x13f08


0x132c2:	and	eax, 6
0x132c5:	mov	rcx, qword ptr [r15 + 0x30]
0x132c9:	cmp	al, 4
0x132cb:	je	0x13460


0x132df:	mov	qword ptr [rsp + 0x20], r9
0x132e4:	mov	qword ptr [rsp + 0x18], rdx
0x132e9:	mov	qword ptr [rsp + 0x10], rsi
0x132ee:	mov	qword ptr [rsp + 8], r8
0x132f3:	call	0x1ac0


0x134a0:	mov	rdi, r15
0x134a3:	mov	qword ptr [rsp + 0x20], r9
0x134a8:	mov	qword ptr [rsp + 0x18], rdx
0x134ad:	mov	qword ptr [rsp + 0x10], rsi
0x134b2:	mov	qword ptr [rsp + 8], r8
0x134b7:	call	0x13150


0x106b8:	add	rcx, rsi
0x106bb:	movzx	edi, byte ptr [rcx + rdi]
0x106bf:	mov	r12d, edi
0x106c2:	mov	dword ptr [rsp + 8], edi
0x106c6:	jmp	0x101b8


0x10674:	mov	r8, qword ptr [rbx + 0x18]
0x10678:	add	rcx, rdi
0x1067b:	add	rcx, qword ptr [r8 + rsi*8]
0x1067f:	movzx	edi, byte ptr [rcx]
0x10682:	mov	r12d, edi
0x10685:	mov	dword ptr [rsp + 8], edi
0x10689:	and	edi, 0x80
0x1068f:	jne	0x101ab


0x106ff:	movzx	eax, byte ptr [rdx + r14 + 1]
0x10705:	mov	byte ptr [rbp + 8], 1
0x10709:	mov	r12d, eax
0x1070c:	mov	byte ptr [rbp], al
0x1070f:	mov	dword ptr [rsp + 8], eax
0x10713:	jmp	0x101d1


0x1064f:	lea	r9, [r14 + 2]
0x10653:	cmp	qword ptr [rbx + 0x30], r9
0x10657:	je	0x10664




0xffd8:	lea	rax, [r11 + 1]
0xffdc:	add	r11, qword ptr [r10]
0xffdf:	mov	rdx, qword ptr [r10 + 0x28]
0xffe3:	mov	qword ptr [r10 + 0x48], rax
0xffe7:	movzx	r9d, byte ptr [r11 + rdx]
0xffec:	jmp	0xfeda


0xff48:	cmp	r11, qword ptr [r10 + 0x30]
0xff4c:	je	0xff5d


0xfee8:	mov	rdx, qword ptr [r10 + 8]
0xfeec:	cmp	byte ptr [rdx + rax], 0x5d
0xfef0:	jne	0xfea0


0xfea0:	mov	rax, qword ptr [rbx + 8]
0xfea4:	mov	byte ptr [rax + r8], r9b
0xfea8:	add	r8, 1
0xfeac:	cmp	r8, 0x20
0xfeb0:	je	0xffa8


0xf74b:	mov	rcx, rax
0xf74e:	cmp	rbx, rcx
0xf751:	jl	0xf728


0xf860:	lea	rbx, [r8 + 1]
0xf864:	mov	rdx, rcx
0xf867:	jmp	0xf6f0


0xf6f0:	cmp	rbx, rdx
0xf6f3:	jge	0xf753


0xf78e:	mov	rax, qword ptr [rsp + 8]
0xf793:	mov	qword ptr [rsp + 0x60], 0
0xf79c:	mov	r12, qword ptr [rax + 0x98]
0xf7a3:	mov	rax, qword ptr [rsp + 0x10]
0xf7a8:	cmp	qword ptr [rax + 8], 0
0xf7ad:	jle	0xf850


0xe9d4:	add	rsp, 0x238
0xe9db:	pop	rbx
0xe9dc:	pop	rbp
0xe9dd:	pop	r12
0xe9df:	pop	r13
0xe9e1:	pop	r14
0xe9e3:	pop	r15
0xe9e5:	ret	


0xf56b:	call	0x1990


0xdf53:	mov	rcx, qword ptr [rdi + 0x58]
0xdf57:	test	rcx, rcx
0xdf5a:	je	0xedc0


0xd1b0:	lea	rdx, [rsi + rcx]
0xd1b4:	mov	rax, rdx
0xd1b7:	shr	rax, 0x3f
0xd1bb:	add	rax, rdx
0xd1be:	sar	rax, 1
0xd1c1:	lea	rdx, [rax + rax*4]
0xd1c5:	mov	r8, rax
0xd1c8:	cmp	r9, qword ptr [r11 + rdx*8 + 8]
0xd1cd:	jg	0xd380


0xd378:	mov	r8, rsi
0xd37b:	mov	rsi, rdi
0xd37e:	nop	
0xd380:	lea	rcx, [r8 + 1]
0xd384:	mov	rdi, rsi
0xd387:	jmp	0xd183


0xd3db:	mov	rax, qword ptr [rsp + 0x70]
0xd3e0:	cmp	qword ptr [rsp + 0x70], rax
0xd3e5:	mov	dword ptr [rsp + 0x8c], 0
0xd3f0:	jge	0xd0d0


0xd225:	mov	qword ptr [rsp + 0x30], r13
0xd22a:	mov	qword ptr [rsp + 0x28], 0
0xd233:	mov	r13, r10
0xd236:	mov	rax, qword ptr [r14 + 0xf8]
0xd23d:	mov	rbx, qword ptr [rsp + 0x28]
0xd242:	mov	rdi, qword ptr [rsp + 0x58]
0xd247:	mov	rbx, qword ptr [rax + rbx*8]
0xd24b:	mov	rax, qword ptr [rbx + 8]
0xd24f:	shl	rax, 4
0xd253:	cmp	rdi, qword ptr [rdx + rax]
0xd257:	je	0xd280


0xd1fc:	cmp	rcx, -1
0xd200:	jne	0xd3d6


0xbdb3:	mov	eax, 1
0xbdb8:	jmp	0xbdc7


0xbde0:	cmp	dl, 0x8f
0xbde3:	jbe	0xbcc0


0xbde9:	mov	ebp, 4
0xbdee:	jmp	0xbda4


0xbdf4:	cmp	al, 0xf8
0xbdf6:	jne	0xbe01


0xbe08:	cmp	al, 0xfd
0xbe0a:	ja	0xbcc0


0xb7ed:	mov	rax, qword ptr [rsi]
0xb7f0:	mov	rdi, qword ptr [rsp + 0x10]
0xb7f5:	movzx	edx, byte ptr [rax + rdi]
0xb7f9:	mov	byte ptr [rsp + 0x60], dl
0xb7fd:	lea	rdx, [r12 + 1]
0xb802:	cmp	qword ptr [rsi + 0x10], rdx
0xb806:	jbe	0xbb46




0xba70:	call	0x1c60


0xba8f:	add	r12, 0x40
0xba93:	add	qword ptr [rsp + 0x18], 8
0xba99:	add	r13, 0x40
0xba9d:	cmp	r12, 0x100
0xbaa4:	je	0xb767


0xba60:	bt	r15, r14
0xba64:	jae	0xba85


0xb90d:	xor	r13d, r13d
0xb910:	cmp	qword ptr [r12 + 0x28], 0
0xb916:	jle	0xb767


0xb8e9:	cmp	qword ptr [r12 + 0x48], 0
0xb8ef:	jne	0xb9ef


0xbb54:	movdqa	xmm0, xmmword ptr [rip + 0x9c24]
0xbb5c:	cmp	eax, 2
0xbb5f:	movups	xmmword ptr [rbp], xmm0
0xbb63:	movups	xmmword ptr [rbp + 0x10], xmm0
0xbb67:	movups	xmmword ptr [rbp + 0x20], xmm0
0xbb6b:	movups	xmmword ptr [rbp + 0x30], xmm0
0xbb6f:	movups	xmmword ptr [rbp + 0x40], xmm0
0xbb73:	movups	xmmword ptr [rbp + 0x50], xmm0
0xbb77:	movups	xmmword ptr [rbp + 0x60], xmm0
0xbb7b:	movups	xmmword ptr [rbp + 0x70], xmm0
0xbb7f:	movups	xmmword ptr [rbp + 0x80], xmm0
0xbb86:	movups	xmmword ptr [rbp + 0x90], xmm0
0xbb8d:	movups	xmmword ptr [rbp + 0xa0], xmm0
0xbb94:	movups	xmmword ptr [rbp + 0xb0], xmm0
0xbb9b:	movups	xmmword ptr [rbp + 0xc0], xmm0
0xbba2:	movups	xmmword ptr [rbp + 0xd0], xmm0
0xbba9:	movups	xmmword ptr [rbp + 0xe0], xmm0
0xbbb0:	movups	xmmword ptr [rbp + 0xf0], xmm0
0xbbb7:	jne	0xbb1d


0xb75e:	cmp	eax, 2
0xb761:	je	0xbab4


0x9a6c:	jmp	0x9a98


0x9a78:	mov	rsi, qword ptr [rbx]
0x9a7b:	add	rsi, rdx
0x9a7e:	movzx	esi, byte ptr [rsi + r15]
0x9a83:	movzx	esi, byte ptr [rcx + rsi]
0x9a87:	mov	rcx, qword ptr [rbx + 8]
0x9a8b:	mov	byte ptr [rcx + rdx], sil
0x9a8f:	add	rdx, 1
0x9a93:	cmp	rax, rdx
0x9a96:	jne	0x9a70


0x9b00:	mov	dword ptr [rbx + 0x70], edx
0x9b03:	jmp	0x9878


0x9ae6:	xor	edx, edx
0x9ae8:	cmp	al, 0xa
0x9aea:	jne	0x9b00


0x9b1f:	sub	r14, r15
0x9b22:	mov	r12, r14
0x9b25:	mov	qword ptr [rbx + 0x30], r14
0x9b29:	lea	rsi, [r8 - 1]
0x9b2d:	mov	edx, r10d
0x9b30:	mov	rdi, rbx
0x9b33:	call	0x9200


0x96de:	lea	rax, [rbx + 0x20]
0x96e2:	lea	r13, [rsp + 0x24]
0x96e7:	mov	qword ptr [rsp + 0x10], rax
0x96ec:	nop	dword ptr [rax]
0x96f0:	mov	r12, qword ptr [rbx + 0x50]
0x96f4:	mov	rsi, qword ptr [rbx]
0x96f7:	mov	rdi, r13
0x96fa:	mov	rax, qword ptr [rbx + 0x20]
0x96fe:	mov	rcx, qword ptr [rsp + 0x10]
0x9703:	mov	dword ptr [rsp + 0xc], r10d
0x9708:	mov	qword ptr [rsp], r8
0x970c:	sub	r12, r14
0x970f:	add	rsi, r14
0x9712:	mov	rdx, r12
0x9715:	mov	qword ptr [rsp + 0x18], rax
0x971a:	call	0x5880


0x99c5:	movzx	edx, byte ptr [rsi]
0x99c8:	and	edx, 0xffffffc0
0x99cb:	cmp	dl, 0x80
0x99ce:	je	0x99b8


0x99ac:	jmp	0x96d1


0x97aa:	lea	rsi, [rax + 1]
0x97ae:	cmp	rsi, rcx
0x97b1:	jge	0x97d8


0x97e3:	lea	r13, [r12 - 1]
0x97e8:	mov	edx, r10d
0x97eb:	mov	rdi, rbx
0x97ee:	mov	qword ptr [rsp], r8
0x97f2:	mov	rsi, r13
0x97f5:	call	0x9200


0x97ae:	cmp	rsi, rcx
0x97b1:	jge	0x97d8


0x8810:	mov	rsi, rbp
0x8813:	call	0x73c0


0x7fe6:	sub	r11, 1
0x7fea:	js	0x8010


0x7fe0:	sub	r9, 1
0x7fe4:	js	0x8010


0x807d:	shl	rdx, 3
0x8081:	lea	rsi, [rdi + rsi*8]
0x8085:	call	0x1a90


0x8037:	test	rax, rax
0x803a:	js	0x807d


0x7fa0:	cmp	rax, r8
0x7fa3:	je	0x7fb6


0x7a40:	sub	rdx, 1
0x7a44:	sub	rax, 1
0x7a48:	mov	rdi, rdx
0x7a4b:	not	rdi
0x7a4e:	jmp	0x798f


0x79b0:	jge	0x7a58


0x7a2a:	xor	eax, eax
0x7a2c:	pop	rbx
0x7a2d:	pop	rbp
0x7a2e:	pop	r12
0x7a30:	ret	


0x79f3:	mov	rdi, qword ptr [rbx + 0x10]
0x79f7:	lea	rax, [rcx - 1]
0x79fb:	add	rcx, rdx
0x79fe:	mov	qword ptr [rbx + 8], rcx
0x7a02:	nop	word ptr [rax + rax]
0x7a08:	mov	rsi, qword ptr [rdi + r8*8]
0x7a0c:	mov	rcx, qword ptr [rdi + rax*8]
0x7a10:	lea	r9, [rax + rdx]
0x7a14:	lea	r9, [rdi + r9*8]
0x7a18:	cmp	rsi, rcx
0x7a1b:	jle	0x7a90


0x6f00:	mov	edx, dword ptr [rax + 8]
0x6f03:	shr	edx, 8
0x6f06:	and	edx, 0x3ff
0x6f0c:	cmp	ebp, edx
0x6f0e:	jne	0x6ee8


0x6ee8:	add	rax, r8
0x6eeb:	sub	rsi, 1
0x6eef:	test	byte ptr [rax + 0xa], 4
0x6ef3:	je	0x6f70




0x5b86:	cmp	r15, 0x3f
0x5b8a:	jg	0x5b98


0x5bf0:	add	r13, 0x28
0x5bf4:	cmp	byte ptr [r13 - 8], 0
0x5bf9:	jne	0x5b80


0x5a35:	mov	byte ptr [rdi + 8], 0x1e
0x5a39:	mov	eax, 2
0x5a3e:	ret	


0x5a20:	mov	byte ptr [rdi + 8], 0x1c
0x5a24:	mov	eax, 2
0x5a29:	ret	


0x59a2:	cmp	al, 0x2e
0x59a4:	jne	0x59d0


0x5964:	mov	byte ptr [rdi + 8], 0x16
0x5968:	mov	eax, 1
0x596d:	ret	


0x13ea1:	cmp	esi, 1
0x13ea4:	jne	0x13f08


0x13f5b:	cmp	esi, 8
0x13f5e:	jne	0x13f08


0x13f00:	cmp	esi, 0x400
0x13f06:	je	0x13f60


0x13f46:	jmp	0x13eb0


0x13f08:	mov	eax, dword ptr [rsp]
0x13f0b:	cmp	eax, 0x2f
0x13f0e:	ja	0x1404a


0x13460:	mov	r14, qword ptr [r12]
0x13464:	cmp	r14, rcx
0x13467:	ja	0x132d1


0x132d1:	lea	r14, [rcx + 1]
0x132d5:	mov	r13, r14
0x132d8:	mov	rdi, r14
0x132db:	shl	rdi, 4
0x132df:	mov	qword ptr [rsp + 0x20], r9
0x132e4:	mov	qword ptr [rsp + 0x18], rdx
0x132e9:	mov	qword ptr [rsp + 0x10], rsi
0x132ee:	mov	qword ptr [rsp + 8], r8
0x132f3:	call	0x1ac0


0x101b8:	cmp	eax, 1
0x101bb:	mov	byte ptr [rbp], r12b
0x101bf:	mov	byte ptr [rbp + 8], 1
0x101c3:	jle	0x10610


0x10695:	jmp	0x101b8


0x101d1:	mov	edi, r8d
0x101d4:	mov	dword ptr [rsp], r8d
0x101d8:	call	0x1ab0


0x10659:	cmp	dword ptr [rcx + rdi + 4], -1
0x1065e:	je	0x106ff


0xfeda:	cmp	rax, r12
0xfedd:	jge	0xffa8


0xff5d:	mov	rax, qword ptr [r10 + 0x18]
0xff61:	mov	rax, qword ptr [rax + r11*8]
0xff65:	add	rax, qword ptr [r10]
0xff68:	add	rax, qword ptr [r10 + 0x28]
0xff6c:	movzx	r9d, byte ptr [rax]
0xff70:	test	r9b, 0x80
0xff74:	jne	0xfec9


0xff4e:	mov	rax, qword ptr [r10 + 0x10]
0xff52:	cmp	dword ptr [rax + r11*4], -1
0xff57:	je	0xfec9


0xfef2:	add	rax, 1
0xfef6:	mov	qword ptr [r10 + 0x48], rax
0xfefa:	mov	rax, qword ptr [rbx + 8]
0xfefe:	mov	byte ptr [rax + r14], 0
0xff03:	movzx	eax, byte ptr [rbp + 8]
0xff07:	cmp	al, 0x1c
0xff09:	je	0x1000b


0xfeb6:	movzx	eax, byte ptr [rbp + 8]
0xfeba:	mov	r11, qword ptr [r10 + 0x48]
0xfebe:	mov	r12, qword ptr [r10 + 0x68]
0xfec2:	cmp	al, 0x1e
0xfec4:	movsxd	r14, r8d
0xfec7:	je	0xff30


0xf7b3:	lea	rax, [rsp + 0x60]
0xf7b8:	mov	qword ptr [rsp + 0x20], 0
0xf7c1:	mov	qword ptr [rsp + 0x48], rbx
0xf7c6:	mov	r15, r13
0xf7c9:	mov	qword ptr [rsp + 0x38], rax
0xf7ce:	jmp	0xf7f2


0xdf60:	cmp	qword ptr [rdi + 0x60], 0
0xdf65:	je	0xedc0


0xd1d3:	mov	rsi, rax
0xd1d6:	cmp	rsi, rcx
0xd1d9:	jg	0xd1b0


0xd380:	lea	rcx, [r8 + 1]
0xd384:	mov	rdi, rsi
0xd387:	jmp	0xd183


0xd183:	cmp	rcx, rdi
0xd186:	jge	0xd1db


0xd3f6:	lea	rax, [r13*8]
0xd3fe:	mov	r12, qword ptr [rsp + 0x70]
0xd403:	mov	rbp, qword ptr [rsp + 0x38]
0xd408:	mov	qword ptr [rsp + 0x50], rax
0xd40d:	lea	rax, [r13 + r13*2]
0xd412:	lea	r8, [r12 + r12*4]
0xd416:	shl	rax, 3
0xd41a:	mov	qword ptr [rsp + 0x58], rax
0xd41f:	lea	r15, [r8*8]
0xd427:	jmp	0xd55d


0xd280:	cmp	qword ptr [rbx + 0x20], 0
0xd285:	mov	r11, qword ptr [rbx]
0xd288:	jle	0xd8f2


0xd259:	add	qword ptr [rsp + 0x28], 1
0xd25f:	mov	rax, qword ptr [rsp + 0x28]
0xd264:	cmp	rax, qword ptr [r14 + 0xe8]
0xd26b:	jge	0xd8e1


0xd3d6:	cmp	r13, qword ptr [rax]
0xd3d9:	jne	0xd3c8


0xbdc7:	movzx	ebx, byte ptr [rsi + rax]
0xbdcb:	lea	edx, [rbx - 0x80]
0xbdce:	cmp	dl, 0x3f
0xbdd1:	jbe	0xbdba


0xbda4:	movsxd	rdi, ebp
0xbda7:	add	r8, rdi
0xbdaa:	cmp	rcx, r8
0xbdad:	jl	0xbcc0


0xbdf8:	cmp	dl, 0x87
0xbdfb:	jbe	0xbcc0


0xbe01:	mov	ebp, 5
0xbe06:	jmp	0xbda4


0xbe10:	cmp	al, 0xfc
0xbe12:	jne	0xbe1d


0xbb46:	mov	rax, qword ptr [rsp + 0x38]
0xbb4b:	add	rax, 1
0xbb4f:	jmp	0xb874


0xb80c:	lea	rcx, [rax + rdi + 0x10]
0xb811:	mov	eax, dword ptr [rcx + 8]
0xb814:	and	eax, 0x2000ff
0xb819:	cmp	eax, 0x200001
0xb81e:	jne	0xbb46


0xbaaa:	mov	rax, qword ptr [rsp + 8]
0xbaaf:	mov	rcx, qword ptr [rax]
0xbab2:	jmp	0xba45


0xb91c:	mov	r15, r12
0xb91f:	mov	r14, qword ptr [rsp + 0x40]
0xb924:	mov	r12, rbp
0xb927:	mov	rbp, r13
0xb92a:	mov	r13d, ebx
0xb92d:	jmp	0xb93d


0xb8f5:	test	byte ptr [r12 + 0x20], 1
0xb8fb:	jne	0xb9ef


0xb9ef:	mov	r12, qword ptr [rsp + 0x40]
0xb9f4:	mov	r13, qword ptr [rsp + 0x48]
0xb9f9:	mov	byte ptr [rsp + 0x54], 0
0xb9fe:	nop	
0xba00:	xor	edi, edi
0xba02:	mov	qword ptr [r12], 0
0xba0a:	mov	rcx, r12
0xba0d:	mov	edx, 1
0xba12:	mov	rsi, r13
0xba15:	call	0x5880


0xbbbd:	jmp	0xbb14


0xbab4:	movdqa	xmm0, xmmword ptr [rip + 0x9cc4]
0xbabc:	movups	xmmword ptr [rbp], xmm0
0xbac0:	movups	xmmword ptr [rbp + 0x10], xmm0
0xbac4:	movups	xmmword ptr [rbp + 0x20], xmm0
0xbac8:	movups	xmmword ptr [rbp + 0x30], xmm0
0xbacc:	movups	xmmword ptr [rbp + 0x40], xmm0
0xbad0:	movups	xmmword ptr [rbp + 0x50], xmm0
0xbad4:	movups	xmmword ptr [rbp + 0x60], xmm0
0xbad8:	movups	xmmword ptr [rbp + 0x70], xmm0
0xbadc:	movups	xmmword ptr [rbp + 0x80], xmm0
0xbae3:	movups	xmmword ptr [rbp + 0x90], xmm0
0xbaea:	movups	xmmword ptr [rbp + 0xa0], xmm0
0xbaf1:	movups	xmmword ptr [rbp + 0xb0], xmm0
0xbaf8:	movups	xmmword ptr [rbp + 0xc0], xmm0
0xbaff:	movups	xmmword ptr [rbp + 0xd0], xmm0
0xbb06:	movups	xmmword ptr [rbp + 0xe0], xmm0
0xbb0d:	movups	xmmword ptr [rbp + 0xf0], xmm0
0xbb14:	mov	rax, qword ptr [rsp + 0x30]
0xbb19:	or	byte ptr [rax + 0x38], 1
0xbb1d:	mov	rax, qword ptr [rsp + 0x168]
0xbb25:	xor	rax, qword ptr fs:[0x28]
0xbb2e:	jne	0xbbc2


0x9a98:	mov	qword ptr [rbx + 0x30], rdx
0x9a9c:	mov	qword ptr [rbx + 0x38], rdx
0x9aa0:	jmp	0x9603


0x9a70:	mov	r15, qword ptr [rbx + 0x28]
0x9a74:	mov	rcx, qword ptr [rbx + 0x78]
0x9a78:	mov	rsi, qword ptr [rbx]
0x9a7b:	add	rsi, rdx
0x9a7e:	movzx	esi, byte ptr [rsi + r15]
0x9a83:	movzx	esi, byte ptr [rcx + rsi]
0x9a87:	mov	rcx, qword ptr [rbx + 8]
0x9a8b:	mov	byte ptr [rcx + rdx], sil
0x9a8f:	add	rdx, 1
0x9a93:	cmp	rax, rdx
0x9a96:	jne	0x9a70


0x9878:	movzx	eax, byte ptr [rbx + 0x8b]
0x987f:	jmp	0x994c


0x9aec:	xor	edx, edx
0x9aee:	cmp	byte ptr [rbx + 0x8d], 0
0x9af5:	setne	dl
0x9af8:	add	edx, edx
0x9afa:	nop	word ptr [rax + rax]
0x9b00:	mov	dword ptr [rbx + 0x70], edx
0x9b03:	jmp	0x9878


0x99b8:	sub	rsi, 1
0x99bc:	cmp	rcx, rsi
0x99bf:	ja	0x96d1


0x99d0:	mov	rdx, qword ptr [rbx + 0x58]
0x99d4:	mov	rcx, qword ptr [rbx + 0x78]
0x99d8:	mov	r14, rsi
0x99db:	add	rdx, r12
0x99de:	sub	rdx, rsi
0x99e1:	test	rcx, rcx
0x99e4:	jne	0x9c32


0x97d8:	lea	r12, [rax + 1]
0x97dc:	cmp	rdx, rbp
0x97df:	cmovge	r12, rax
0x97e3:	lea	r13, [r12 - 1]
0x97e8:	mov	edx, r10d
0x97eb:	mov	rdi, rbx
0x97ee:	mov	qword ptr [rsp], r8
0x97f2:	mov	rsi, r13
0x97f5:	call	0x9200


0x7fec:	mov	rax, qword ptr [r13 + r9*8]
0x7ff1:	jmp	0x7fad


0x798f:	test	rdi, rdi
0x7992:	jns	0x79d0


0x79b6:	sub	rdx, 1
0x79ba:	sub	rbp, 1
0x79be:	mov	rdi, rdx
0x79c1:	mov	qword ptr [rcx + rbp*8], rsi
0x79c5:	not	rdi
0x79c8:	test	rdi, rdi
0x79cb:	js	0x7994


0x7a58:	sub	rax, 1
0x7a5c:	jmp	0x798f


0x7a90:	sub	rax, 1
0x7a94:	mov	qword ptr [r9], rcx
0x7a97:	jns	0x7a08


0x7a1d:	sub	r8, 1
0x7a21:	sub	rdx, 1
0x7a25:	mov	qword ptr [r9], rsi
0x7a28:	jne	0x7a08


0x6f10:	call	0x5ee0


0x6ef5:	test	rsi, rsi
0x6ef8:	jle	0x6f70


0x5b8c:	movzx	eax, word ptr [r13 + 0x22]
0x5b91:	test	qword ptr [rsp + 0x18], rax
0x5b96:	je	0x5bf0


0x5b98:	mov	rax, qword ptr [rbp + 0x28]
0x5b9c:	mov	rax, qword ptr [rax + rbx + 0x10]
0x5ba1:	mov	rcx, qword ptr [rax]
0x5ba4:	cmp	qword ptr [rsp + 0x10], rcx
0x5ba9:	je	0x5c70


0x5bfb:	mov	rbx, qword ptr [rsp + 0x38]
0x5c00:	mov	r10, r12
0x5c03:	mov	r12, qword ptr [rsp + 0x30]
0x5c08:	mov	r14, rbp
0x5c0b:	add	rbx, 1
0x5c0f:	cmp	qword ptr [r12 + 8], rbx
0x5c14:	jg	0x5b05


0x5b80:	cmp	qword ptr [r13], r14
0x5b84:	jne	0x5bf0


0x59a6:	mov	byte ptr [rdi + 8], 0x1a
0x59aa:	mov	eax, 2
0x59af:	ret	


0x13f14:	add	rax, qword ptr [rsp + 0x10]
0x13f19:	mov	rdx, qword ptr [rax]
0x13f1c:	mov	edi, ebp
0x13f1e:	xor	eax, eax
0x13f20:	call	0x1900


0x1404a:	mov	rax, qword ptr [rsp + 8]
0x1404f:	jmp	0x13f19


0x1346d:	test	r14, r14
0x13470:	mov	r13, r14
0x13473:	jg	0x132d8


0xff7a:	cmp	dword ptr [r10 + 0x90], 1
0xff82:	mov	eax, 1
0xff87:	je	0xff96


0x1000b:	mov	dword ptr [rbx], 2
0x10011:	xor	eax, eax
0x10013:	jmp	0xfe21


0xff0f:	cmp	al, 0x1e
0xff11:	je	0xfffe


0xf7f2:	mov	rax, qword ptr [rsp + 0x10]
0xf7f7:	mov	rdi, qword ptr [rsp + 0x20]
0xf7fc:	mov	rax, qword ptr [rax + 0x10]
0xf800:	mov	r14, qword ptr [rax + rdi*8]
0xf804:	mov	rax, r14
0xf807:	shl	rax, 4
0xf80b:	add	rax, qword ptr [r12]
0xf80f:	cmp	r14, qword ptr [r15 + 0x10]
0xf813:	movzx	eax, byte ptr [rax + 8]
0xf817:	jne	0xf7d0


0xdf6b:	cmp	qword ptr [rax + 0x10], 0
0xdf70:	jne	0xdfa8


0xd55d:	mov	rax, qword ptr [r14 + 0xd8]
0xd564:	add	rax, r15
0xd567:	cmp	r13, qword ptr [rax]
0xd56a:	jne	0xd548


0xd8f2:	mov	r12, qword ptr [rsp + 8]
0xd8f7:	jmp	0xd5c2


0xd28e:	mov	rcx, qword ptr [rsp + 8]
0xd293:	mov	r8, r13
0xd296:	xor	ebp, ebp
0xd298:	mov	r13, rbx
0xd29b:	mov	rbx, rcx
0xd29e:	jmp	0xd30c


0xd271:	mov	rax, qword ptr [rsp + 0x50]
0xd276:	mov	rdx, qword ptr [rax]
0xd279:	jmp	0xd236


0xd8e1:	mov	r13, qword ptr [rsp + 0x30]
0xd8e6:	mov	rax, qword ptr [r14 + 0xc8]
0xd8ed:	jmp	0xd3e0


0xd3c8:	add	rax, 0x28
0xd3cc:	cmp	byte ptr [rax - 8], 0
0xd3d0:	je	0xd206


0xbdba:	add	rax, 1
0xbdbe:	cmp	rdi, rax
0xbdc1:	jle	0xbcc2


0xbdd3:	jmp	0xbcc0


0xbe14:	cmp	dl, 0x83
0xbe17:	jbe	0xbcc0


0xbe1d:	mov	ebp, 6
0xbe22:	jmp	0xbda4


0xb874:	mov	rsi, qword ptr [rsp + 0x38]
0xb879:	mov	rcx, qword ptr [rsp + 0x40]
0xb87e:	mov	rdi, qword ptr [rsp + 0x48]
0xb883:	sub	rax, rsi
0xb886:	mov	qword ptr [rcx], 0
0xb88d:	mov	r12, rax
0xb890:	mov	rdx, rax
0xb893:	call	0x5880


0xb824:	add	rdi, 0x20
0xb828:	mov	r13, rdi
0xb82b:	mov	rdi, qword ptr [rsp + 0x38]
0xb830:	lea	rax, [rdi + 1]
0xb834:	jmp	0xb85b


0xba45:	mov	rax, qword ptr [rsp + 0x10]
0xba4a:	mov	rsi, qword ptr [rsp + 0x18]
0xba4f:	xor	r14d, r14d
0xba52:	mov	rax, qword ptr [rcx + rax]
0xba56:	mov	r15, qword ptr [rax + rsi]
0xba5a:	nop	word ptr [rax + rax]
0xba60:	bt	r15, r14
0xba64:	jae	0xba85


0xb93d:	mov	qword ptr [r14], 0
0xb944:	mov	rax, qword ptr [r15]
0xb947:	mov	rdx, r14
0xb94a:	mov	rdi, qword ptr [rsp + 0x38]
0xb94f:	lea	rbx, [rbp*4]
0xb957:	mov	esi, dword ptr [rax + rbp*4]
0xb95a:	call	0x1ad0


0xb901:	cmp	qword ptr [r12 + 0x40], 0
0xb907:	jne	0xb9ef


0xbb14:	mov	rax, qword ptr [rsp + 0x30]
0xbb19:	or	byte ptr [rax + 0x38], 1
0xbb1d:	mov	rax, qword ptr [rsp + 0x168]
0xbb25:	xor	rax, qword ptr fs:[0x28]
0xbb2e:	jne	0xbbc2


0x994c:	test	al, al
0x994e:	je	0x95ca


0x99ea:	lea	r13, [rsp + 0x24]
0x99ef:	add	r12, rbp
0x99f2:	lea	rcx, [rsp + 0x28]
0x99f7:	sub	r12, r14
0x99fa:	mov	dword ptr [rsp + 0xc], r10d
0x99ff:	mov	qword ptr [rsp], r8
0x9a03:	mov	rdi, r13
0x9a06:	mov	qword ptr [rsp + 0x28], 0
0x9a0f:	call	0x5880


0x9c32:	cmp	rdx, 6
0x9c36:	mov	edi, 6
0x9c3b:	lea	r11, [rsp + 0x32]
0x9c40:	cmovle	rdi, rdx
0x9c44:	sub	edi, 1
0x9c47:	test	edi, edi
0x9c49:	movsxd	rax, edi
0x9c4c:	js	0x9c62


0x8070:	sub	rax, 1
0x8074:	mov	qword ptr [r10], rcx
0x8077:	cmp	rax, -1
0x807b:	jne	0x8040


0x8055:	sub	r9, 1
0x8059:	sub	rdx, 1
0x805d:	mov	qword ptr [r10], r8
0x8060:	jne	0x8040


0x7a9d:	lea	rsi, [rdi + rbp*8]
0x7aa1:	shl	rdx, 3
0x7aa5:	call	0x1a90


0x7a08:	mov	rsi, qword ptr [rdi + r8*8]
0x7a0c:	mov	rcx, qword ptr [rdi + rax*8]
0x7a10:	lea	r9, [rax + rdx]
0x7a14:	lea	r9, [rdi + r9*8]
0x7a18:	cmp	rsi, rcx
0x7a1b:	jle	0x7a90


0x5c70:	mov	r15d, dword ptr [rsp + 0x20]
0x5c75:	add	rsp, 0x48
0x5c79:	pop	rbx
0x5c7a:	pop	rbp
0x5c7b:	mov	eax, r15d
0x5c7e:	and	eax, 1
0x5c81:	pop	r12
0x5c83:	neg	eax
0x5c85:	pop	r13
0x5c87:	pop	r14
0x5c89:	pop	r15
0x5c8b:	ret	


0x5baf:	mov	esi, dword ptr [rsp + 0x20]
0x5bb3:	mov	rdi, qword ptr [rsp]
0x5bb7:	mov	r8, r12
0x5bba:	mov	rdx, r15
0x5bbd:	call	0x5a60


0x13f19:	mov	rdx, qword ptr [rax]
0x13f1c:	mov	edi, ebp
0x13f1e:	xor	eax, eax
0x13f20:	call	0x1900


0x132d8:	mov	rdi, r14
0x132db:	shl	rdi, 4
0x132df:	mov	qword ptr [rsp + 0x20], r9
0x132e4:	mov	qword ptr [rsp + 0x18], rdx
0x132e9:	mov	qword ptr [rsp + 0x10], rsi
0x132ee:	mov	qword ptr [rsp + 8], r8
0x132f3:	call	0x1ac0


0xff96:	add	rax, r11
0xff99:	mov	qword ptr [r10 + 0x48], rax
0xff9d:	jmp	0xfeda


0xff89:	mov	rsi, r11
0xff8c:	mov	rdi, r10
0xff8f:	call	0x7370


0xfffe:	mov	dword ptr [rbx], 4
0x10004:	xor	eax, eax
0x10006:	jmp	0xfe21


0xff17:	cmp	al, 0x1a
0xff19:	je	0xfff1


0xf819:	cmp	rbp, qword ptr [r15 + 0x18]
0xf81d:	jne	0xf7d0


0xf7d0:	cmp	al, 4
0xf7d2:	je	0xfb58


0xdf72:	cmp	qword ptr [rdx + 0x10], 0
0xdf77:	jne	0xdfa8


0xdfa8:	cmp	qword ptr [rsp + 0x270], 0
0xdfb1:	mov	dword ptr [rsp + 0x58], 1
0xdfb9:	je	0xe340


0xd56c:	mov	rdi, qword ptr [rsp + 8]
0xd571:	cmp	rdi, qword ptr [rax + 8]
0xd575:	jne	0xd548


0xd548:	add	r12, 1
0xd54c:	add	r15, 0x28
0xd550:	cmp	r12, qword ptr [r14 + 0xc8]
0xd557:	jge	0xd0d0


0xd5c2:	cmp	qword ptr [rsp + 8], r11
0xd5c7:	jl	0xd259


0xd30c:	mov	rax, qword ptr [r13 + 0x28]
0xd310:	mov	r9, qword ptr [rax + rbp*8]
0xd314:	mov	r15, qword ptr [r9 + 8]
0xd318:	mov	rdx, r15
0xd31b:	sub	rdx, r11
0xd31e:	test	rdx, rdx
0xd321:	lea	r12, [rdx + rbx]
0xd325:	jle	0xd2d3


0xd236:	mov	rax, qword ptr [r14 + 0xf8]
0xd23d:	mov	rbx, qword ptr [rsp + 0x28]
0xd242:	mov	rdi, qword ptr [rsp + 0x58]
0xd247:	mov	rbx, qword ptr [rax + rbx*8]
0xd24b:	mov	rax, qword ptr [rbx + 8]
0xd24f:	shl	rax, 4
0xd253:	cmp	rdi, qword ptr [rdx + rax]
0xd257:	je	0xd280


0xd3e0:	cmp	qword ptr [rsp + 0x70], rax
0xd3e5:	mov	dword ptr [rsp + 0x8c], 0
0xd3f0:	jge	0xd0d0


0xb85b:	movzx	edx, byte ptr [rcx]
0xb85e:	add	rax, 1
0xb862:	mov	byte ptr [rax - 1], dl
0xb865:	mov	rdx, rax
0xb868:	sub	rdx, rdi
0xb86b:	add	rdx, r12
0xb86e:	cmp	qword ptr [rsi + 0x10], rdx
0xb872:	ja	0xb840


0x1ad0:	jmp	qword ptr [rip + 0x217422]


0x95ca:	add	qword ptr [rbx + 8], rbp
0x95ce:	mov	rax, qword ptr [rbx + 0x58]
0x95d2:	sub	qword ptr [rbx + 0x68], rbp
0x95d6:	mov	qword ptr [rbx + 0x28], r15
0x95da:	sub	rax, rbp
0x95dd:	cmp	dword ptr [rbx + 0x90], 1
0x95e4:	mov	qword ptr [rbx + 0x58], rax
0x95e8:	jle	0x9688


0x9954:	jmp	0x95ce


0x9c62:	mov	rsi, r11
0x9c65:	jmp	0x99ea


0x9c4e:	movzx	edi, byte ptr [rsi + rax]
0x9c52:	movzx	edi, byte ptr [rcx + rdi]
0x9c56:	mov	byte ptr [r11 + rax], dil
0x9c5a:	sub	rax, 1
0x9c5e:	test	eax, eax
0x9c60:	jns	0x9c4e


0x8040:	mov	r8, qword ptr [rdi + r9*8]
0x8044:	mov	rcx, qword ptr [rdi + rax*8]
0x8048:	lea	r10, [rax + rdx]
0x804c:	lea	r10, [rdi + r10*8]
0x8050:	cmp	r8, rcx
0x8053:	jle	0x8070


0x8062:	xor	edx, edx
0x8064:	jmp	0x8081


0xfff1:	mov	dword ptr [rbx], 3
0xfff7:	xor	eax, eax
0xfff9:	jmp	0xfe21


0xff1f:	xor	eax, eax
0xff21:	jmp	0xfe21


0xf81f:	jmp	0xf7d8


0xfb58:	mov	rax, qword ptr [rsp + 8]
0xfb5d:	mov	r13, qword ptr [rsp + 0x40]
0xfb62:	mov	rbx, qword ptr [rsp + 0x48]
0xfb67:	add	r13, qword ptr [rax + 0xd8]
0xfb6e:	lea	rax, [r14 + r14*2]
0xfb72:	shl	rax, 3
0xfb76:	mov	qword ptr [rsp + 0x30], rax
0xfb7b:	lea	rax, [r14*8]
0xfb83:	mov	qword ptr [rsp + 0x28], rax
0xfb88:	mov	rax, r15
0xfb8b:	mov	r15, r13
0xfb8e:	mov	r13, rbx
0xfb91:	mov	rbx, rax
0xfb94:	jmp	0xfcfe


0xf7d8:	mov	rcx, qword ptr [rsp + 0x10]
0xf7dd:	add	qword ptr [rsp + 0x20], 1
0xf7e3:	mov	rax, qword ptr [rsp + 0x20]
0xf7e8:	cmp	rax, qword ptr [rcx + 8]
0xf7ec:	jge	0xfdab


0xdf79:	cmp	qword ptr [rcx + 0x10], 0
0xdf7e:	je	0xdf86


0xe340:	mov	rax, qword ptr [rsp + 0x38]
0xe345:	cmp	qword ptr [rax + 0x98], 0
0xe34d:	setne	al
0xe350:	movzx	eax, al
0xe353:	mov	dword ptr [rsp + 0x58], eax
0xe357:	jmp	0xdfbf


0xdfbf:	mov	r11, qword ptr [rsp + 0x38]
0xdfc4:	mov	rax, qword ptr [rsp + 0x48]
0xdfc9:	mov	rdi, qword ptr [rsp + 0x88]
0xdfd1:	mov	rsi, qword ptr [r11 + 0x10]
0xdfd5:	mov	rbx, qword ptr [rax + 0x28]
0xdfd9:	mov	edx, dword ptr [r11 + 0xb4]
0xdfe0:	mov	rax, qword ptr [rax + 0x18]
0xdfe4:	mov	qword ptr [rsp + 0x178], rdi
0xdfec:	mov	qword ptr [rsp + 0x170], rdi
0xdff4:	mov	qword ptr [rsp + 8], rsi
0xdff9:	lea	rsi, [rsi + 1]
0xdffd:	mov	qword ptr [rsp + 0xb0], rbx
0xe005:	movsxd	rcx, edx
0xe008:	shr	rax, 0x16
0xe00c:	mov	qword ptr [rsp + 0x198], rbx
0xe014:	and	eax, 1
0xe017:	cmp	rsi, rcx
0xe01a:	mov	dword ptr [rsp + 0x1b0], edx
0xe021:	cmovl	rsi, rcx
0xe025:	lea	rcx, [rdi + 1]
0xe029:	mov	byte ptr [rsp + 0x1a8], al
0xe030:	mov	qword ptr [rsp + 0x188], rdi
0xe038:	mov	qword ptr [rsp + 0x180], rdi
0xe040:	cmp	rsi, rcx
0xe043:	mov	rdi, qword ptr [rsp]
0xe047:	cmovg	rsi, rcx
0xe04b:	test	rbx, rbx
0xe04e:	mov	rcx, qword ptr [rsp + 0x78]
0xe053:	setne	bl
0xe056:	or	eax, ebx
0xe058:	mov	byte ptr [rsp + 0x1ab], al
0xe05f:	movzx	eax, byte ptr [r11 + 0xb0]
0xe067:	mov	qword ptr [rsp + 0x120], rcx
0xe06f:	mov	edx, eax
0xe071:	shr	al, 3
0xe074:	shr	dl, 2
0xe077:	and	eax, 1
0xe07a:	and	edx, 1
0xe07d:	mov	byte ptr [rsp + 0x1aa], al
0xe084:	mov	byte ptr [rsp + 0x1a9], dl
0xe08b:	call	0x5dd0


0xd577:	mov	rbx, qword ptr [rax + 0x18]
0xd57b:	mov	rax, qword ptr [rax + 0x10]
0xd57f:	mov	rdx, qword ptr [rbp + 0x30]
0xd583:	mov	rcx, rbx
0xd586:	sub	rcx, rax
0xd589:	mov	qword ptr [rsp + 0x20], rcx
0xd58e:	je	0xd430


0xd5cd:	mov	rax, r12
0xd5d0:	lea	r15, [r11*8]
0xd5d8:	mov	r12, rbx
0xd5db:	mov	rbx, r11
0xd5de:	mov	r11, r13
0xd5e1:	mov	r13, rax
0xd5e4:	nop	dword ptr [rax]
0xd5e8:	mov	rax, rbx
0xd5eb:	sub	rax, qword ptr [r12]
0xd5ef:	test	rax, rax
0xd5f2:	jle	0xd615


0xd2d3:	mov	r8, qword ptr [rsp + 8]
0xd2d8:	mov	rcx, qword ptr [rsp + 0x30]
0xd2dd:	mov	rdx, r9
0xd2e0:	mov	rsi, r13
0xd2e3:	mov	rdi, r14
0xd2e6:	call	0xce80


0xd327:	cmp	qword ptr [r14 + 0x30], r12
0xd32b:	jge	0xd2a0


0xb840:	mov	rcx, qword ptr [rsi]
0xb843:	add	rcx, r13
0xb846:	add	r13, 0x10
0xb84a:	mov	edx, dword ptr [rcx + 8]
0xb84d:	and	edx, 0x2000ff
0xb853:	cmp	edx, 0x200001
0xb859:	jne	0xb874




0x8081:	lea	rsi, [rdi + rsi*8]
0x8085:	call	0x1a90


0xfcfe:	cmp	r14, qword ptr [r15]
0xfd01:	je	0xfba0


0xfdab:	cmp	qword ptr [rsp + 0x60], 0
0xfdb1:	je	0xf850


0xdf86:	test	rbp, rbp
0xdf89:	je	0xdf9c


0xdf80:	cmp	byte ptr [rsi + 0x38], 0
0xdf84:	js	0xdfa8


0xd430:	mov	rcx, qword ptr [rbp + 0x28]
0xd434:	mov	rdi, qword ptr [rsp + 0x58]
0xd439:	mov	rcx, qword ptr [rcx + rdi + 0x10]
0xd43e:	mov	rcx, qword ptr [rcx]
0xd441:	lea	rcx, [rcx + rcx*2]
0xd445:	lea	rcx, [rdx + rcx*8]
0xd449:	mov	qword ptr [rsp + 0x18], rcx
0xd44e:	add	rbx, qword ptr [rsp + 8]
0xd453:	mov	edx, dword ptr [r14 + 0xa0]
0xd45a:	mov	rdi, r14
0xd45d:	sub	rbx, rax
0xd460:	lea	rsi, [rbx - 1]
0xd464:	call	0x9200


0xd594:	mov	rcx, qword ptr [rbp + 0x18]
0xd598:	mov	rdi, qword ptr [rsp + 0x50]
0xd59d:	mov	rcx, qword ptr [rcx + rdi]
0xd5a1:	lea	rcx, [rcx + rcx*2]
0xd5a5:	lea	rcx, [rdx + rcx*8]
0xd5a9:	mov	qword ptr [rsp + 0x18], rcx
0xd5ae:	jmp	0xd44e


0xd615:	mov	rax, qword ptr [r14 + 0xb8]
0xd61c:	mov	rax, qword ptr [rax + r15]
0xd620:	test	rax, rax
0xd623:	je	0xd72f


0xd5f4:	cmp	qword ptr [r14 + 0x30], r13
0xd5f8:	jle	0xd881


0xd331:	cmp	qword ptr [r14 + 0x58], r12
0xd335:	mov	qword ptr [rsp + 0x18], rdx
0xd33a:	mov	qword ptr [rsp + 0x10], r9
0xd33f:	jl	0xd798


0xd2a0:	lea	rsi, [r8 + r11]
0xd2a4:	lea	rdi, [r8 + rbx]
0xd2a8:	mov	qword ptr [rsp + 0x20], r9
0xd2ad:	mov	qword ptr [rsp + 0x18], r11
0xd2b2:	mov	qword ptr [rsp + 0x10], r8
0xd2b7:	call	0x1a40


0xfba0:	mov	rax, qword ptr [r15 + 0x18]
0xfba4:	sub	rax, qword ptr [r15 + 0x10]
0xfba8:	test	rax, rax
0xfbab:	lea	r9, [rbp + rax]
0xfbb0:	je	0xfd10


0xfd07:	mov	rax, r15
0xfd0a:	jmp	0xfcf0


0xfdb7:	xor	eax, eax
0xfdb9:	jmp	0xfd8a


0xdf9c:	xor	r12d, r12d
0xdf9f:	xor	ebp, ebp
0xdfa1:	nop	dword ptr [rax]
0xdfa8:	cmp	qword ptr [rsp + 0x270], 0
0xdfb1:	mov	dword ptr [rsp + 0x58], 1
0xdfb9:	je	0xe340


0xdf8b:	test	r12, r12
0xdf8e:	mov	dword ptr [rsp + 0x5c], 1
0xdf96:	jne	0xe9b9


0xd44e:	add	rbx, qword ptr [rsp + 8]
0xd453:	mov	edx, dword ptr [r14 + 0xa0]
0xd45a:	mov	rdi, r14
0xd45d:	sub	rbx, rax
0xd460:	lea	rsi, [rbx - 1]
0xd464:	call	0x9200


0xd72f:	add	rbx, 1
0xd733:	add	r15, 8
0xd737:	cmp	qword ptr [rsp + 8], rbx
0xd73c:	jge	0xd5e8


0xd629:	mov	rcx, qword ptr [rax + 0x10]
0xd62d:	test	rcx, rcx
0xd630:	jle	0xd72f


0xd881:	cmp	qword ptr [r14 + 0x58], r13
0xd885:	jle	0xd742


0xd5fe:	movzx	ecx, byte ptr [r11 + rbx - 1]
0xd604:	lea	rax, [r13 + 1]
0xd608:	cmp	byte ptr [r11 + r13], cl
0xd60c:	jne	0xd742


0xd798:	mov	rcx, rbx
0xd79b:	mov	rbx, r13
0xd79e:	mov	r13, r8
0xd7a1:	cmp	qword ptr [rbx + 0x20], rbp
0xd7a5:	jg	0xd259


0xd345:	mov	rsi, r12
0xd348:	mov	rdi, r14
0xd34b:	mov	qword ptr [rsp + 0x20], r11
0xd350:	call	0x6ab0


0x1a40:	jmp	qword ptr [rip + 0x21746a]


0xfd10:	mov	rax, qword ptr [r12 + 0x28]
0xfd15:	mov	rdi, qword ptr [rsp + 0x30]
0xfd1a:	mov	rax, qword ptr [rax + rdi + 0x10]
0xfd1f:	mov	r10, qword ptr [rax]
0xfd22:	jmp	0xfbc4


0xfbb6:	mov	rax, qword ptr [r12 + 0x18]
0xfbbb:	mov	rsi, qword ptr [rsp + 0x28]
0xfbc0:	mov	r10, qword ptr [rax + rsi]
0xfbc4:	cmp	r9, qword ptr [rbx + 0x18]
0xfbc8:	jg	0xfd07


0xfcf0:	add	r13, 1
0xfcf4:	cmp	byte ptr [rax + 0x20], 0
0xfcf8:	lea	r15, [rax + 0x28]
0xfcfc:	je	0xfd30


0xfd8a:	mov	rdi, qword ptr [rsp + 0x90]
0xfd92:	mov	dword ptr [rsp + 8], eax
0xfd96:	call	0x1880


0xd742:	mov	r13, r11
0xd745:	jmp	0xd259


0xd5e8:	mov	rax, rbx
0xd5eb:	sub	rax, qword ptr [r12]
0xd5ef:	test	rax, rax
0xd5f2:	jle	0xd615


0xd636:	mov	rdi, qword ptr [rax + 0x18]
0xd63a:	mov	rax, qword ptr [rsp + 0x50]
0xd63f:	xor	edx, edx
0xd641:	mov	r8, qword ptr [rsp + 0x58]
0xd646:	mov	rsi, qword ptr [rax]
0xd649:	jmp	0xd65d


0xd88b:	lea	esi, [r13 + 1]
0xd88f:	mov	rdi, r14
0xd892:	call	0x6960


0xd612:	mov	r13, rax
0xd615:	mov	rax, qword ptr [r14 + 0xb8]
0xd61c:	mov	rax, qword ptr [rax + r15]
0xd620:	test	rax, rax
0xd623:	je	0xd72f


0xd7ab:	test	rbp, rbp
0xd7ae:	mov	r12, rcx
0xd7b1:	je	0xd5c2




0xfbc4:	cmp	r9, qword ptr [rbx + 0x18]
0xfbc8:	jg	0xfd07


0xfbce:	mov	rax, qword ptr [rbx]
0xfbd1:	mov	rax, qword ptr [rax + r9*8]
0xfbd5:	test	rax, rax
0xfbd8:	je	0xfd07


0xfd30:	mov	r15, rbx
0xfd33:	jmp	0xf7d8


0xd65d:	mov	rbp, qword ptr [rdi + rdx*8]
0xd661:	mov	rax, rbp
0xd664:	shl	rax, 4
0xd668:	add	rax, rsi
0xd66b:	cmp	byte ptr [rax + 8], 9
0xd66f:	jne	0xd650


0xd7b7:	mov	r15, r11
0xd7ba:	jmp	0xd5be


0xfbde:	mov	rdi, qword ptr [rax + 0x10]
0xfbe2:	lea	rsi, [rax + 0x18]
0xfbe6:	mov	rdx, r10
0xfbe9:	call	0x7420


0xd671:	cmp	r8, qword ptr [rax]
0xd674:	jne	0xd650


0xd650:	add	rdx, 1
0xd654:	cmp	rcx, rdx
0xd657:	je	0xd72f


0xd5be:	lea	r11, [r15 + 1]
0xd5c2:	cmp	qword ptr [rsp + 8], r11
0xd5c7:	jl	0xd259


0xd676:	cmp	rbp, -1
0xd67a:	je	0xd72f


0xd680:	mov	rsi, qword ptr [r12 + 0x10]
0xd685:	mov	rcx, qword ptr [r12]
0xd689:	test	rsi, rsi
0xd68c:	je	0xd750


0xd750:	mov	rsi, rbx
0xd753:	mov	edi, 0x18
0xd758:	mov	qword ptr [rsp + 0x18], r11
0xd75d:	sub	rsi, rcx
0xd760:	mov	qword ptr [rsp + 0x10], rcx
0xd765:	add	rsi, 1
0xd769:	call	0x1a70


0xd692:	mov	qword ptr [rsp + 0x10], r11
0xd697:	mov	rdx, qword ptr [r12 + 8]
0xd69c:	sub	rsp, 8
0xd6a0:	push	9
0xd6a2:	mov	r9, rbx
0xd6a5:	mov	r8, rbp
0xd6a8:	mov	rdi, r14
0xd6ab:	call	0xbe30


0xd355:	test	eax, eax
0xd357:	jne	0xd398


0xd359:	mov	r8, qword ptr [r14 + 8]
0xd35d:	mov	rdx, qword ptr [rsp + 0x18]
0xd362:	mov	r9, qword ptr [rsp + 0x10]
0xd367:	mov	r11, qword ptr [rsp + 0x20]
0xd36c:	jmp	0xd2a0


0xd398:	mov	rbx, qword ptr [rsp + 0xa8]
0xd3a0:	xor	rbx, qword ptr fs:[0x28]
0xd3a9:	jne	0xd8fc


0x5bc2:	cmp	eax, -1
0x5bc5:	je	0x5b2e


0x5bcb:	test	eax, eax
0x5bcd:	jne	0x5bd7


0x5bcf:	mov	esi, dword ptr [rsp + 8]
0x5bd3:	test	esi, esi
0x5bd5:	jne	0x5c55


0x5bd7:	cmp	r15, 0x3f
0x5bdb:	jg	0x5bf0


0x5bdd:	movzx	eax, word ptr [rsp + 0x26]
0x5be2:	and	word ptr [r13 + 0x22], ax
0x5be7:	nop	word ptr [rax + rax]
0x5bf0:	add	r13, 0x28
0x5bf4:	cmp	byte ptr [r13 - 8], 0
0x5bf9:	jne	0x5b80


0x6f15:	test	al, al
0x6f17:	je	0x6f5b


0x6f5b:	mov	eax, 0xc
0x6f60:	add	rsp, 0x18
0x6f64:	pop	rbx
0x6f65:	pop	rbp
0x6f66:	pop	r12
0x6f68:	pop	r13
0x6f6a:	pop	r14
0x6f6c:	pop	r15
0x6f6e:	ret	


0x6f19:	mov	rax, qword ptr [r14 + 0x28]
0x6f1d:	mov	edx, ebp
0x6f1f:	mov	rdi, r14
0x6f22:	mov	rax, qword ptr [rax + r12 + 0x10]
0x6f27:	mov	r9, qword ptr [rax + 8]
0x6f2b:	mov	rsi, r9
0x6f2e:	mov	qword ptr [rsp], r9
0x6f32:	call	0x6d90


0x7094:	mov	edx, eax
0x7096:	xor	eax, eax
0x7098:	test	dl, dl
0x709a:	jne	0x6f60


0x70a0:	jmp	0x6f5b


0x7883:	mov	ebx, eax
0x7885:	mov	rax, qword ptr [rbp]
0x7889:	mov	r9, qword ptr [rsp + 0x30]
0x788e:	mov	rcx, qword ptr [rsp + 0x20]
0x7893:	mov	r8, r15
0x7896:	mov	rdx, r12
0x7899:	mov	rdi, r13
0x789c:	mov	rsi, qword ptr [rax + r14*8]
0x78a0:	call	0x5c90


0x78a5:	cmp	ebx, eax
0x78a7:	je	0x7920


0x7920:	mov	rax, qword ptr [rsp + 0x38]
0x7925:	add	r14, 1
0x7929:	cmp	r14, qword ptr [rax]
0x792c:	jl	0x7840


0x78a9:	mov	eax, 1
0x78ae:	add	rsp, 0x48
0x78b2:	pop	rbx
0x78b3:	pop	rbp
0x78b4:	pop	r12
0x78b6:	pop	r13
0x78b8:	pop	r14
0x78ba:	pop	r15
0x78bc:	ret	


0x7840:	mov	rax, qword ptr [rbp]
0x7844:	mov	rdx, qword ptr [r13 + 0xd8]
0x784b:	mov	rdi, r13
0x784e:	mov	r9, qword ptr [rsp + 0x28]
0x7853:	mov	r8, qword ptr [rsp + 0x18]
0x7858:	mov	rcx, qword ptr [rsp + 0x10]
0x785d:	mov	rsi, qword ptr [rax + r14*8]
0x7861:	lea	rax, [rsi + rsi*4]
0x7865:	lea	rax, [rdx + rax*8]
0x7869:	mov	rdx, qword ptr [rsp + 8]
0x786e:	mov	rax, qword ptr [rax]
0x7871:	shl	rax, 4
0x7875:	add	rax, qword ptr [rdx]
0x7878:	mov	r12, qword ptr [rax]
0x787b:	mov	rdx, r12
0x787e:	call	0x5c90


0x9b48:	jmp	0x9603


0xffc0:	cmp	byte ptr [rsp + 8], 0x15
0xffc5:	mov	eax, 0xb
0xffca:	je	0xfe6e


0xffd0:	jmp	0xfe21


0x8818:	test	al, al
0x881a:	je	0x87e8


0x8ab5:	test	al, al
0x8ab7:	jne	0x8bbf


0x95ff:	test	eax, eax
0x9601:	jne	0x960d


0x960d:	mov	rcx, qword ptr [rsp + 0x38]
0x9612:	xor	rcx, qword ptr fs:[0x28]
0x961b:	jne	0x9c6a


0x967d:	jmp	0x9603


0x8c95:	test	eax, eax
0x8c97:	mov	dword ptr [rsp + 0x1c], eax
0x8c9b:	jne	0x8ce8


0x8c9d:	mov	rdi, qword ptr [rsp + 8]
0x8ca2:	mov	rdx, r13
0x8ca5:	mov	rsi, r14
0x8ca8:	call	0x8a30


0x8ce8:	mov	rcx, qword ptr [rsp + 0x38]
0x8ced:	xor	rcx, qword ptr fs:[0x28]
0x8cf6:	jne	0x8d07


0xd9d1:	test	eax, eax
0xd9d3:	mov	dword ptr [r13], eax
0xd9d7:	jne	0xdaf0


0xd9dd:	mov	rax, qword ptr [rbx + 0x48]
0xd9e1:	mov	edx, dword ptr [rbx + 0xa0]
0xd9e7:	mov	rdi, rbx
0xd9ea:	lea	rsi, [rax - 1]
0xd9ee:	call	0x9200


0xdab6:	test	eax, eax
0xdab8:	mov	dword ptr [r13], eax
0xdabc:	jne	0xdaf0


0xdabe:	test	byte ptr [rbp + 0x68], 0x40
0xdac2:	je	0xd975


0xdac8:	mov	rdx, r15
0xdacb:	mov	rsi, r14
0xdace:	mov	rdi, rbx
0xdad1:	call	0xd020


0xdad6:	test	eax, eax
0xdad8:	mov	dword ptr [r13], eax
0xdadc:	jne	0xdaf0


0xdade:	mov	rax, qword ptr [rbx + 0xb8]
0xdae5:	mov	rbp, qword ptr [rax + r12*8]
0xdae9:	jmp	0xd975


0x13a0d:	add	rsp, 0x20
0x13a11:	test	eax, eax
0x13a13:	setne	al
0x13a16:	add	rsp, 0x18
0x13a1a:	pop	rbx
0x13a1b:	movzx	eax, al
0x13a1e:	pop	rbp
0x13a1f:	pop	r12
0x13a21:	pop	r13
0x13a23:	ret	


0x2508:	mov	byte ptr [rip + 0x216bb9], 1
0x250f:	pop	rbp
0x2510:	ret	


0xd897:	test	eax, eax
0xd899:	jne	0xd398


0xd89f:	mov	r11, qword ptr [r14 + 8]
0xd8a3:	jmp	0xd5fe


0x6b0a:	test	eax, eax
0x6b0c:	je	0x6adf


0x6b0e:	jmp	0x6ae6


0x6ae6:	pop	rbx
0x6ae7:	pop	rbp
0x6ae8:	pop	r12
0x6aea:	ret	


0x6adb:	test	eax, eax
0x6add:	jne	0x6ae6


0x854d:	test	rax, rax
0x8550:	mov	qword ptr [rbx + 0x10], rax
0x8554:	je	0x8522


0x8556:	mov	qword ptr [rax], rbx
0x8559:	jmp	0x8522


0x856d:	test	rax, rax
0x8570:	mov	qword ptr [rbx + 8], rax
0x8574:	je	0x8513


0x8576:	mov	qword ptr [rax], rbx
0x8579:	jmp	0x8513


0x8cad:	mov	rdi, qword ptr [rsp + 0x30]
0x8cb2:	mov	qword ptr [rbx + r15*8], rax
0x8cb6:	call	0x1880


0xf6a8:	mov	qword ptr [r14], rax
0xf6ab:	mov	eax, dword ptr [rsp + 0x5c]
0xf6af:	test	eax, eax
0xf6b1:	jne	0xf608


0xf6b7:	cmp	qword ptr [rsp + 0x10], 0
0xf6bd:	je	0xf608


0xf6c3:	mov	rax, qword ptr [rsp + 8]
0xf6c8:	mov	rax, qword ptr [rax + 0xb8]
0xf6cf:	mov	rdx, qword ptr [rax + rbp*8]
0xf6d3:	xor	eax, eax
0xf6d5:	test	byte ptr [rdx + 0x68], 0x40
0xf6d9:	je	0xf608


0xf650:	mov	rdx, rax
0xf653:	mov	eax, dword ptr [rsp + 0x60]
0xf657:	test	eax, eax
0xf659:	jne	0xf608


0xf65b:	mov	r15, qword ptr [rdx + 0x38]
0xf65f:	lea	r14, [rdx + 0x38]
0xf663:	test	r15, r15
0xf666:	je	0xf870


0xf870:	mov	rdi, qword ptr [rbx + 8]
0xf874:	mov	qword ptr [rdx + 0x40], 0
0xf87c:	mov	qword ptr [rsp + 0x20], rdx
0xf881:	mov	qword ptr [rdx + 0x38], rdi
0xf885:	shl	rdi, 3
0xf889:	call	0x1ac0


0xf66c:	mov	rsi, qword ptr [rsp + 0x10]
0xf671:	mov	rdx, r14
0xf674:	mov	rdi, rbx
0xf677:	call	0x7f30


0xf67c:	test	eax, eax
0xf67e:	mov	dword ptr [rsp + 0x5c], eax
0xf682:	jne	0xf608


0xf684:	cmp	qword ptr [r13 + 0x28], 0
0xf689:	jne	0xf900


0xf68f:	mov	r14, qword ptr [rsp + 0x18]
0xf694:	add	r14, qword ptr [r13]
0xf698:	lea	rdi, [rsp + 0x5c]
0xf69d:	mov	rdx, rbx
0xf6a0:	mov	rsi, r12
0xf6a3:	call	0x8a30


0xf900:	mov	rax, qword ptr [rsp + 8]
0xf905:	mov	rax, qword ptr [rax + 0xd8]
0xf90c:	mov	qword ptr [rsp + 0x20], rax
0xf911:	jle	0xf9eb


0xf9eb:	mov	dword ptr [rsp + 0x5c], 0
0xf9f3:	jmp	0xf68f


0xf917:	xor	r15d, r15d
0xf91a:	nop	word ptr [rax + rax]
0xf920:	mov	rax, qword ptr [r13 + 0x30]
0xf924:	mov	rdi, qword ptr [rsp + 0x20]
0xf929:	mov	rax, qword ptr [rax + r15*8]
0xf92d:	lea	rax, [rax + rax*4]
0xf931:	lea	rdx, [rdi + rax*8]
0xf935:	cmp	rbp, qword ptr [rdx + 0x10]
0xf939:	jle	0xf9dd


0xf9dd:	add	r15, 1
0xf9e1:	cmp	r15, qword ptr [r13 + 0x28]
0xf9e5:	jl	0xf920


0xf93f:	cmp	rbp, qword ptr [rdx + 8]
0xf943:	jg	0xf9dd


0xf920:	mov	rax, qword ptr [r13 + 0x30]
0xf924:	mov	rdi, qword ptr [rsp + 0x20]
0xf929:	mov	rax, qword ptr [rax + r15*8]
0xf92d:	lea	rax, [rax + rax*4]
0xf931:	lea	rdx, [rdi + rax*8]
0xf935:	cmp	rbp, qword ptr [rdx + 0x10]
0xf939:	jle	0xf9dd


0xf949:	mov	rcx, qword ptr [rdx]
0xf94c:	mov	rax, qword ptr [r12]
0xf950:	mov	rsi, qword ptr [rbx + 8]
0xf954:	shl	rcx, 4
0xf958:	cmp	rbp, qword ptr [rdx + 0x18]
0xf95c:	mov	r8, qword ptr [rax + rcx]
0xf960:	je	0xfa00


0xfa00:	test	rsi, rsi
0xfa03:	jle	0xf9dd


0xf966:	xor	r14d, r14d
0xf969:	test	rsi, rsi
0xf96c:	jle	0xf9dd


0xfa05:	mov	r10, qword ptr [rbx + 0x10]
0xfa09:	mov	r9, -1
0xfa10:	lea	r11, [r10 + rsi*8]
0xfa14:	mov	rcx, r10
0xfa17:	mov	rsi, r9
0xfa1a:	jmp	0xfa36


0xf96e:	mov	qword ptr [rsp + 0x28], rbp
0xf973:	mov	rbp, r8
0xf976:	jmp	0xf98e


0xfa36:	mov	rdi, qword ptr [rcx]
0xfa39:	mov	rdx, rdi
0xfa3c:	shl	rdx, 4
0xfa40:	add	rdx, rax
0xfa43:	movzx	r14d, byte ptr [rdx + 8]
0xfa48:	cmp	r14d, 8
0xfa4c:	jne	0xfa20


0xf98e:	mov	rdx, qword ptr [rbx + 0x10]
0xf992:	mov	rsi, qword ptr [rdx + r14*8]
0xf996:	mov	rdx, rsi
0xf999:	shl	rdx, 4
0xf99d:	add	rax, rdx
0xf9a0:	movzx	edx, byte ptr [rax + 8]
0xf9a4:	sub	edx, 8
0xf9a7:	cmp	edx, 1
0xf9aa:	ja	0xf980


0xfa4e:	cmp	r8, qword ptr [rdx]
0xfa51:	cmove	rsi, rdi
0xfa55:	add	rcx, 8
0xfa59:	cmp	r11, rcx
0xfa5c:	jne	0xfa36


0xfa20:	cmp	r14d, 9
0xfa24:	jne	0xfa2d


0xf9ac:	cmp	rbp, qword ptr [rax]
0xf9af:	jne	0xf980


0xf980:	add	r14, 1
0xf984:	cmp	r14, qword ptr [rbx + 8]
0xf988:	jge	0xf9d8


0xfa5e:	test	rsi, rsi
0xfa61:	mov	r14, r9
0xfa64:	mov	qword ptr [rsp + 0x28], r9
0xfa69:	js	0xfb30


0xfa26:	cmp	r8, qword ptr [rdx]
0xfa29:	cmove	r9, rdi
0xfa2d:	add	rcx, 8
0xfa31:	cmp	r11, rcx
0xfa34:	je	0xfa5e


0xfa2d:	add	rcx, 8
0xfa31:	cmp	r11, rcx
0xfa34:	je	0xfa5e


0xf9b1:	mov	rcx, qword ptr [rsp + 0x10]
0xf9b6:	mov	rdx, rbx
0xf9b9:	mov	rdi, r12
0xf9bc:	call	0x9c70


0xf98a:	mov	rax, qword ptr [r12]
0xf98e:	mov	rdx, qword ptr [rbx + 0x10]
0xf992:	mov	rsi, qword ptr [rdx + r14*8]
0xf996:	mov	rdx, rsi
0xf999:	shl	rdx, 4
0xf99d:	add	rax, rdx
0xf9a0:	movzx	edx, byte ptr [rax + 8]
0xf9a4:	sub	edx, 8
0xf9a7:	cmp	edx, 1
0xf9aa:	ja	0xf980


0xf9d8:	mov	rbp, qword ptr [rsp + 0x28]
0xf9dd:	add	r15, 1
0xf9e1:	cmp	r15, qword ptr [r13 + 0x28]
0xf9e5:	jl	0xf920


0xfb30:	cmp	qword ptr [rsp + 0x28], 0
0xfb36:	jns	0xfa9f


0xfa6f:	mov	rcx, qword ptr [rsp + 0x10]
0xfa74:	mov	rdx, rbx
0xfa77:	mov	rdi, r12
0xfa7a:	call	0x9c70


0xfb3c:	jmp	0xf9dd


0xfa9f:	xor	r14d, r14d
0xfaa2:	mov	qword ptr [rsp + 0x30], rbp
0xfaa7:	mov	rbp, r14
0xfaaa:	mov	r14, qword ptr [rsp + 0x28]
0xfaaf:	jmp	0xfaca


0xfaca:	mov	r10, qword ptr [r10 + rbp*8]
0xface:	mov	rax, qword ptr [r12 + 0x38]
0xfad3:	mov	rdx, r14
0xfad6:	lea	r9, [r10 + r10*2]
0xfada:	shl	r9, 3
0xfade:	add	rax, r9
0xfae1:	mov	rdi, qword ptr [rax + 8]
0xfae5:	lea	rsi, [rax + 0x10]
0xfae9:	call	0x7420


0xe090:	test	eax, eax
0xe092:	mov	dword ptr [rsp + 0x5c], eax
0xe096:	jne	0xe990


0xe09c:	mov	rdi, qword ptr [rsp + 0x38]
0xe0a1:	lea	rax, [rdi + 0xb8]
0xe0a8:	mov	qword ptr [rsp + 0x1a0], rax
0xe0b0:	movzx	eax, byte ptr [rdi + 0xb0]
0xe0b7:	mov	byte ptr [rsp + 8], al
0xe0bb:	shr	al, 4
0xe0be:	and	eax, 1
0xe0c1:	cmp	byte ptr [rsp + 0x1ab], 0
0xe0c9:	mov	byte ptr [rsp + 0x1ae], al
0xe0d0:	jne	0xe0f5


0xe990:	mov	rdi, qword ptr [rsp + 0x1d8]
0xe998:	call	0x1880


0xe0d2:	mov	rsi, qword ptr [rsp + 0x38]
0xe0d7:	mov	rax, qword ptr [rsp + 0x78]
0xe0dc:	cmp	dword ptr [rsi + 0xb4], 1
0xe0e3:	mov	qword ptr [rsp + 0x128], rax
0xe0eb:	mov	rax, qword ptr [rsp + 0x88]
0xe0f3:	jle	0xe0f7


0xe0f5:	xor	eax, eax
0xe0f7:	mov	qword ptr [rsp + 0x150], rax
0xe0ff:	mov	qword ptr [rsp + 0x158], rax
0xe107:	mov	rax, qword ptr [rsp + 0x48]
0xe10c:	mov	qword ptr [rsp + 0x188], r13
0xe114:	mov	qword ptr [rsp + 0x180], r13
0xe11c:	movzx	eax, byte ptr [rax + 0x38]
0xe120:	mov	byte ptr [rsp + 8], al
0xe124:	shr	al, 7
0xe127:	mov	byte ptr [rsp + 0x1ad], al
0xe12e:	mov	rax, qword ptr [rsp + 0x38]
0xe133:	mov	r14, qword ptr [rax + 0x98]
0xe13a:	mov	eax, dword ptr [rsp + 0x280]
0xe141:	mov	qword ptr [rsp + 0x1c8], -1
0xe14d:	lea	r13, [r14 + r14]
0xe151:	mov	dword ptr [rsp + 0x1c0], eax
0xe158:	test	r13, r13
0xe15b:	jle	0xe1af


0xe0f7:	mov	qword ptr [rsp + 0x150], rax
0xe0ff:	mov	qword ptr [rsp + 0x158], rax
0xe107:	mov	rax, qword ptr [rsp + 0x48]
0xe10c:	mov	qword ptr [rsp + 0x188], r13
0xe114:	mov	qword ptr [rsp + 0x180], r13
0xe11c:	movzx	eax, byte ptr [rax + 0x38]
0xe120:	mov	byte ptr [rsp + 8], al
0xe124:	shr	al, 7
0xe127:	mov	byte ptr [rsp + 0x1ad], al
0xe12e:	mov	rax, qword ptr [rsp + 0x38]
0xe133:	mov	r14, qword ptr [rax + 0x98]
0xe13a:	mov	eax, dword ptr [rsp + 0x280]
0xe141:	mov	qword ptr [rsp + 0x1c8], -1
0xe14d:	lea	r13, [r14 + r14]
0xe151:	mov	dword ptr [rsp + 0x1c0], eax
0xe158:	test	r13, r13
0xe15b:	jle	0xe1af


0xe1af:	cmp	qword ptr [rsp + 0x270], 1
0xe1b8:	mov	qword ptr [rsp + 0x1f0], r13
0xe1c0:	mov	dword ptr [rsp + 0x200], 1
0xe1cb:	mov	qword ptr [rsp + 0x210], r13
0xe1d3:	jbe	0xf2f8


0xe15d:	movabs	rax, 0x666666666666666
0xe167:	cmp	r13, rax
0xe16a:	jg	0xeeb0


0xf2f8:	mov	rax, qword ptr [rsp + 0x38]
0xf2fd:	test	byte ptr [rax + 0xb0], 2
0xf304:	jne	0xe1d9


0xe1d9:	mov	rax, qword ptr [rsp + 0x160]
0xe1e1:	movabs	rdx, 0x1ffffffffffffffe
0xe1eb:	cmp	rax, rdx
0xe1ee:	ja	0xeeb0


0xe170:	lea	rdi, [r13 + r14*8]
0xe175:	shl	rdi, 3
0xe179:	call	0x1ac0


0xeeb0:	mov	rdi, qword ptr [rsp + 0x1d8]
0xeeb8:	mov	dword ptr [rsp + 0x5c], 0xc
0xeec0:	jmp	0xe998


0xf30a:	mov	qword ptr [rsp + 0x1d8], 0
0xf316:	jmp	0xe215


0xe1f4:	lea	rdi, [rax*8 + 8]
0xe1fc:	call	0x1ac0


0xe998:	call	0x1880


0xe215:	mov	eax, dword ptr [rsp + 0x280]
0xe21c:	mov	qword ptr [rsp + 0xd8], rbp
0xe224:	and	eax, 1
0xe227:	cmp	eax, 1
0xe22a:	sbb	eax, eax
0xe22c:	and	eax, 2
0xe22f:	add	eax, 4
0xe232:	mov	dword ptr [rsp + 0x190], eax
0xe239:	xor	eax, eax
0xe23b:	cmp	rbp, r12
0xe23e:	setle	al
0xe241:	lea	eax, [rax + rax - 1]
0xe245:	mov	dword ptr [rsp + 0xac], eax
0xe24c:	mov	rax, r12
0xe24f:	cmovle	rax, rbp
0xe253:	mov	qword ptr [rsp + 0x90], rax
0xe25b:	mov	rax, r12
0xe25e:	cmovge	rax, rbp
0xe262:	cmp	qword ptr [rsp + 0x68], 0
0xe268:	mov	qword ptr [rsp + 0x70], rax
0xe26d:	mov	rax, qword ptr [rsp + 0x38]
0xe272:	mov	esi, dword ptr [rax + 0xb4]
0xe278:	mov	eax, 8
0xe27d:	mov	dword ptr [rsp + 0xc8], esi
0xe284:	je	0xe2bf


0xe2bf:	cmp	rbp, qword ptr [rsp + 0x70]
0xe2c4:	setg	cl
0xe2c7:	cmp	rbp, qword ptr [rsp + 0x90]
0xe2cf:	setl	dl
0xe2d2:	or	cl, dl
0xe2d4:	jne	0xeda9


0xe286:	cmp	esi, 1
0xe289:	mov	ecx, 4
0xe28e:	je	0xe2ae


0xe2da:	lea	rcx, [rsp + 0xd8]
0xe2e2:	cmp	rbp, r12
0xe2e5:	mov	edx, 0
0xe2ea:	cmovle	rdx, rcx
0xe2ee:	test	rdx, rdx
0xe2f1:	mov	qword ptr [rsp + 0xc0], rdx
0xe2f9:	setne	byte ptr [rsp + 0xcf]
0xe301:	sub	eax, 4
0xe304:	mov	dword ptr [rsp + 0xa8], eax
0xe30b:	lea	rax, [rsp + 0xd0]
0xe313:	mov	qword ptr [rsp + 0x28], rax
0xe318:	mov	eax, dword ptr [rsp + 0xa8]
0xe31f:	cmp	eax, 4
0xe322:	ja	0xef0d


0xeda9:	mov	rdi, qword ptr [rsp + 0x1d8]
0xedb1:	mov	dword ptr [rsp + 0x5c], 1
0xedb9:	jmp	0xe998


0xe2ae:	xor	edx, edx
0xe2b0:	cmp	rbp, r12
0xe2b3:	movzx	eax, bl
0xe2b6:	setle	dl
0xe2b9:	or	eax, ecx
0xe2bb:	add	edx, edx
0xe2bd:	or	eax, edx
0xe2bf:	cmp	rbp, qword ptr [rsp + 0x70]
0xe2c4:	setg	cl
0xe2c7:	cmp	rbp, qword ptr [rsp + 0x90]
0xe2cf:	setl	dl
0xe2d2:	or	cl, dl
0xe2d4:	jne	0xeda9


0xe290:	mov	rax, qword ptr [rsp + 0x48]
0xe295:	test	byte ptr [rax + 0x1a], 0x40
0xe299:	jne	0xf01e


0xe328:	lea	rcx, [rip + 0x6d31]
0xe32f:	movsxd	rax, dword ptr [rcx + rax*4]
0xe333:	add	rax, rcx
0xe336:	jmp	rax


0xef0d:	mov	rbx, qword ptr [rsp + 0x68]
0xef12:	mov	r13d, dword ptr [rsp + 0xac]
0xef1a:	mov	r14, qword ptr [rsp + 0x90]
0xef22:	mov	r15, qword ptr [rsp + 0x70]
0xef27:	mov	r12, qword ptr [rsp + 0x88]
0xef2f:	jmp	0xef78


0xe29f:	cmp	qword ptr [rsp + 0xb0], 0
0xe2a8:	jne	0xf01e


0xf01e:	xor	ecx, ecx
0xf020:	jmp	0xe2ae


0xef78:	mov	rdx, rbp
0xef7b:	sub	rdx, qword ptr [rsp + 0x148]
0xef83:	cmp	qword ptr [rsp + 0x158], rdx
0xef8b:	ja	0xef38


0xef8d:	mov	edx, dword ptr [rsp + 0x280]
0xef94:	mov	rdi, qword ptr [rsp]
0xef98:	mov	rsi, rbp
0xef9b:	call	0x94d0


0xef38:	cmp	r12, rbp
0xef3b:	mov	rax, rbx
0xef3e:	jle	0xef4f


0xef4f:	cmp	byte ptr [rax], 0
0xef52:	jne	0xe418


0xef40:	mov	rax, qword ptr [rsp + 0x128]
0xef48:	movzx	eax, byte ptr [rax + rdx]
0xef4c:	add	rax, rbx
0xef4f:	cmp	byte ptr [rax], 0
0xef52:	jne	0xe418


0xef58:	movsxd	rax, r13d
0xef5b:	add	rbp, rax
0xef5e:	cmp	rbp, r14
0xef61:	mov	qword ptr [rsp + 0xd8], rbp
0xef69:	jl	0xeda9


0xe418:	mov	edx, dword ptr [rsp + 0x280]
0xe41f:	mov	rdi, qword ptr [rsp]
0xe423:	mov	rsi, rbp
0xe426:	call	0x94d0


0xef6f:	cmp	rbp, r15
0xef72:	jg	0xeda9


0xe42b:	test	eax, eax
0xe42d:	mov	dword ptr [rsp + 0x5c], eax
0xe431:	jne	0xe990


0xe437:	cmp	dword ptr [rsp + 0xc8], 1
0xe43f:	je	0xe45d


0xe45d:	mov	rbx, qword ptr [rsp + 0x1b8]
0xe465:	movzx	eax, byte ptr [rsp + 0x58]
0xe46a:	mov	dword ptr [rsp + 0x200], 0
0xe475:	mov	qword ptr [rsp + 0x1e8], 0
0xe481:	mov	qword ptr [rsp + 0x1e0], 0
0xe48d:	mov	dword ptr [rsp + 0xd0], 0
0xe498:	mov	r14, qword ptr [rbx + 0x48]
0xe49c:	and	eax, 1
0xe49f:	mov	byte ptr [rsp + 0xce], al
0xe4a6:	mov	rax, qword ptr [rsp + 0x168]
0xe4ae:	cmp	byte ptr [r14 + 0x68], 0
0xe4b3:	mov	qword ptr [rsp + 8], rax
0xe4b8:	js	0xee30


0xe441:	cmp	qword ptr [rsp + 0x150], 0
0xe44a:	je	0xe45d


0xee30:	mov	edx, dword ptr [rsp + 0x1c0]
0xee37:	mov	rdi, qword ptr [rsp]
0xee3b:	lea	rsi, [rax - 1]
0xee3f:	call	0x9200


0xe4be:	mov	rax, qword ptr [rsp + 0x1d8]
0xe4c6:	test	rax, rax
0xe4c9:	je	0xe4e2


0xe44c:	mov	rax, qword ptr [rsp + 0x130]
0xe454:	cmp	dword ptr [rax], -1
0xe457:	je	0xed81


0xe4e2:	movzx	eax, byte ptr [rsp + 0xcf]
0xe4ea:	mov	byte ptr [rsp + 0x18], al
0xe4ee:	movzx	eax, byte ptr [r14 + 0x68]
0xe4f3:	test	al, 0x10
0xe4f5:	mov	qword ptr [rsp + 0x20], -1
0xe4fe:	mov	qword ptr [rsp + 0x30], 0
0xe507:	jne	0xf390


0xe4cb:	cmp	qword ptr [rbx + 0x98], 0
0xe4d3:	mov	rdi, qword ptr [rsp + 8]
0xe4d8:	mov	qword ptr [rax + rdi*8], r14
0xe4dc:	jne	0xf3cb


0xed81:	movsxd	rax, dword ptr [rsp + 0xac]
0xed89:	add	rbp, rax
0xed8c:	cmp	rbp, qword ptr [rsp + 0x90]
0xed94:	mov	qword ptr [rsp + 0xd8], rbp
0xed9c:	jl	0xeda9


0xe50d:	mov	rax, qword ptr [rsp + 0xc0]
0xe515:	mov	r8, qword ptr [rsp + 0x168]
0xe51d:	mov	qword ptr [rsp + 0x50], rax
0xe522:	lea	rax, [rsp + 0xe0]
0xe52a:	mov	qword ptr [rsp + 0x60], rax
0xe52f:	lea	rax, [rsp + 0xd4]
0xe537:	mov	qword ptr [rsp + 0x80], rax
0xe53f:	jmp	0xe59c


0xf390:	cmp	byte ptr [r14 + 0x68], 0
0xf395:	js	0xf406


0xf3cb:	lea	rbx, [r14 + 0x10]
0xf3cf:	lea	rbp, [r14 + 0x18]
0xf3d3:	mov	rdi, qword ptr [rsp]
0xf3d7:	xor	ecx, ecx
0xf3d9:	mov	rdx, rbp
0xf3dc:	mov	rsi, rbx
0xf3df:	call	0x90b0


0xed9e:	cmp	rbp, qword ptr [rsp + 0x70]
0xeda3:	jle	0xe318


0xe59c:	cmp	qword ptr [rsp + 0x188], r8
0xe5a4:	jle	0xe694


0xf406:	mov	rsi, qword ptr [r14 + 0x10]
0xf40a:	mov	rcx, qword ptr [rsp + 8]
0xf40f:	lea	rdx, [r14 + 0x18]
0xf413:	mov	rdi, qword ptr [rsp]
0xf417:	call	0x9400


0xf397:	mov	esi, dword ptr [rsp + 0x58]
0xf39b:	mov	rax, qword ptr [rsp + 8]
0xf3a0:	test	esi, esi
0xf3a2:	mov	qword ptr [rsp + 0x20], rax
0xf3a7:	je	0xe6a6


0xe318:	mov	eax, dword ptr [rsp + 0xa8]
0xe31f:	cmp	eax, 4
0xe322:	ja	0xef0d


0xe694:	mov	rax, qword ptr [rsp + 0x50]
0xe699:	test	rax, rax
0xe69c:	je	0xe6a6


0xe5aa:	mov	rax, qword ptr [rsp + 0x160]
0xe5b2:	lea	rbx, [r8 + 1]
0xe5b6:	cmp	rbx, rax
0xe5b9:	jge	0xea60


0xe6a6:	mov	rax, qword ptr [rsp + 0x20]
0xe6ab:	cmp	rax, -1
0xe6af:	je	0xed70


0xf3ad:	mov	qword ptr [rsp + 0x30], 1
0xf3b6:	jmp	0xe50d


0xe69e:	mov	rdi, qword ptr [rsp + 8]
0xe6a3:	add	qword ptr [rax], rdi
0xe6a6:	mov	rax, qword ptr [rsp + 0x20]
0xe6ab:	cmp	rax, -1
0xe6af:	je	0xed70


0xe5bf:	mov	rax, qword ptr [rsp + 0x150]
0xe5c7:	cmp	rbx, rax
0xe5ca:	jge	0xed50


0xea60:	cmp	rax, qword ptr [rsp + 0x178]
0xea68:	jge	0xe5bf


0xed70:	mov	rdi, qword ptr [rsp]
0xed74:	call	0x72b0


0xe6b5:	cmp	rax, -2
0xe6b9:	je	0xeeb0


0xe5d0:	test	byte ptr [r14 + 0x68], 0x20
0xe5d5:	jne	0xeaa0


0xed50:	cmp	rax, qword ptr [rsp + 0x178]
0xed58:	jge	0xe5d0


0xea6e:	mov	rdi, qword ptr [rsp]
0xea72:	lea	esi, [rbx + 1]
0xea75:	call	0x6960


0xe6bf:	mov	rax, qword ptr [rsp + 0x20]
0xe6c4:	mov	qword ptr [rsp + 0x1c8], rax
0xe6cc:	mov	rax, qword ptr [rsp + 0x48]
0xe6d1:	test	byte ptr [rax + 0x38], 0x10
0xe6d5:	jne	0xee90


0xe5db:	lea	rax, [r8 + 1]
0xe5df:	mov	qword ptr [rsp + 0x168], rax
0xe5e7:	mov	rax, qword ptr [rsp + 0x128]
0xe5ef:	movzx	r13d, byte ptr [rax + r8]
0xe5f4:	mov	rax, qword ptr [r14 + 0x58]
0xe5f8:	test	rax, rax
0xe5fb:	je	0xed10


0xeaa0:	cmp	qword ptr [r14 + 0x10], 0
0xeaa5:	mov	r13, qword ptr [rsp + 0x1b8]
0xeaad:	jle	0xeddb


0xed5e:	jmp	0xea6e


0xe6db:	cmp	qword ptr [rsp + 0x270], 1
0xe6e4:	jbe	0xefdc


0xee90:	mov	rax, qword ptr [rsp + 0x38]
0xee95:	cmp	qword ptr [rax + 0x98], 0
0xee9d:	je	0xf0cc


0xed10:	mov	rbp, qword ptr [r14 + 0x60]
0xed14:	test	rbp, rbp
0xed17:	je	0xeec5


0xe601:	mov	r13, qword ptr [rax + r13*8]
0xe605:	cmp	qword ptr [rsp + 0x1d8], 0
0xe60e:	je	0xe624


0xeddb:	mov	dword ptr [rsp + 0xd0], 0
0xede6:	jmp	0xe5db


0xeab3:	lea	rax, [r13 + 0xd8]
0xeaba:	xor	r12d, r12d
0xeabd:	mov	qword ptr [rsp + 0xa0], rbx
0xeac5:	mov	rbx, r12
0xeac8:	mov	r12, r8
0xeacb:	mov	qword ptr [rsp + 0x40], rax
0xead0:	jmp	0xec28


0xefdc:	mov	rax, qword ptr [rsp + 0x38]
0xefe1:	cmp	qword ptr [rax + 0x98], 0
0xefe9:	je	0xf0cc


0xe6ea:	mov	rcx, qword ptr [rsp + 0x20]
0xe6ef:	mov	rbx, qword ptr [rsp + 0x1d8]
0xe6f7:	mov	rdi, qword ptr [rsp]
0xe6fb:	mov	rax, qword ptr [rbx + rcx*8]
0xe6ff:	mov	rsi, qword ptr [rax + 0x10]
0xe703:	lea	rdx, [rax + 0x18]
0xe707:	call	0x9400


0xf0cc:	cmp	qword ptr [rsp + 0x270], 0
0xf0d5:	je	0xe990


0xeea3:	jmp	0xefef


0xeec5:	mov	rdi, qword ptr [rsp + 0x1b8]
0xeecd:	mov	rsi, r14
0xeed0:	call	0x9eb0


0xed1d:	mov	rax, qword ptr [rsp + 0x168]
0xed25:	mov	edx, dword ptr [rsp + 0x1c0]
0xed2c:	mov	rdi, qword ptr [rsp]
0xed30:	lea	rsi, [rax - 1]
0xed34:	call	0x9200


0xe624:	test	r13, r13
0xe627:	jne	0xe548


0xe610:	mov	rsi, qword ptr [rsp]
0xe614:	mov	rdi, qword ptr [rsp + 0x28]
0xe619:	mov	rdx, r13
0xe61c:	call	0xd910


0xec28:	mov	rax, qword ptr [r14 + 0x18]
0xec2c:	mov	rbp, qword ptr [r13]
0xec30:	mov	r15, qword ptr [rax + rbx*8]
0xec34:	mov	rax, r15
0xec37:	shl	rax, 4
0xec3b:	add	rax, rbp
0xec3e:	test	byte ptr [rax + 0xa], 0x10
0xec42:	je	0xec1a


0xefef:	mov	rcx, qword ptr [rsp + 0x20]
0xeff4:	mov	rbx, qword ptr [rsp + 0x1d8]
0xeffc:	mov	rdi, qword ptr [rsp]
0xf000:	mov	rax, qword ptr [rbx + rcx*8]
0xf004:	mov	rsi, qword ptr [rax + 0x10]
0xf008:	lea	rdx, [rax + 0x18]
0xf00c:	call	0x9400


0xf0db:	cmp	qword ptr [rsp + 0x270], 1
0xf0e4:	je	0xf508


0xe62d:	mov	ecx, dword ptr [rsp + 0xd0]
0xe634:	mov	rdi, qword ptr [rsp + 0x1d8]
0xe63c:	test	ecx, ecx
0xe63e:	jne	0xef00


0xe548:	cmp	r14, r13
0xe54b:	mov	r8, qword ptr [rsp + 0x168]
0xe553:	sete	al
0xe556:	and	byte ptr [rsp + 0x18], al
0xe55a:	movzx	eax, byte ptr [r13 + 0x68]
0xe55f:	cmove	rbx, qword ptr [rsp + 8]
0xe565:	test	al, 0x10
0xe567:	mov	qword ptr [rsp + 8], rbx
0xe56c:	je	0xe599


0xec1a:	add	rbx, 1
0xec1e:	cmp	rbx, qword ptr [r14 + 0x10]
0xec22:	jge	0xedd0


0xec44:	mov	ecx, dword ptr [rax + 8]
0xec47:	test	ecx, 0x3ff00
0xec4d:	mov	dword ptr [rsp + 0x10], ecx
0xec51:	je	0xeb10


0xf508:	mov	rsi, qword ptr [rsp + 0xb8]
0xf510:	mov	rax, qword ptr [rsp + 0x1c8]
0xf518:	mov	qword ptr [rsi], 0
0xf51f:	mov	qword ptr [rsi + 8], rax
0xf523:	xor	eax, eax
0xf525:	jmp	0xf1a1


0xf0ea:	mov	rsi, qword ptr [rsp + 0xb8]
0xf0f2:	mov	rcx, qword ptr [rsp + 0x270]
0xf0fa:	mov	rdx, -1
0xf101:	shl	rcx, 4
0xf105:	lea	rax, [rsi + 0x10]
0xf109:	add	rcx, rsi
0xf10c:	mov	qword ptr [rax + 8], rdx
0xf110:	mov	qword ptr [rax], rdx
0xf113:	add	rax, 0x10
0xf117:	cmp	rcx, rax
0xf11a:	jne	0xf10c


0xe644:	test	rdi, rdi
0xe647:	je	0xe694


0xef00:	mov	dword ptr [rsp + 0x5c], 0xc
0xef08:	jmp	0xe998


0xe599:	mov	r14, r13
0xe59c:	cmp	qword ptr [rsp + 0x188], r8
0xe5a4:	jle	0xe694


0xe56e:	test	al, al
0xe570:	js	0xea30


0xedd0:	mov	rbx, qword ptr [rsp + 0xa0]
0xedd8:	mov	r8, r12
0xeddb:	mov	dword ptr [rsp + 0xd0], 0
0xede6:	jmp	0xe5db


0xeb10:	mov	rcx, qword ptr [rsp]
0xeb14:	mov	rsi, qword ptr [rsp + 0x40]
0xeb19:	mov	r8, r12
0xeb1c:	mov	rdx, r15
0xeb1f:	mov	rdi, rbp
0xeb22:	call	0xbbd0


0xec57:	mov	edx, dword ptr [rsp + 0x1c0]
0xec5e:	mov	rdi, qword ptr [rsp]
0xec62:	mov	rsi, r12
0xec65:	call	0x9200


0xf1a1:	movzx	r11d, byte ptr [rsp + 0x1ac]
0xf1aa:	mov	r10, qword ptr [rsp + 0x150]
0xf1b2:	xor	ecx, ecx
0xf1b4:	mov	r9, qword ptr [rsp + 0x138]
0xf1bc:	mov	r8, qword ptr [rsp + 0x158]
0xf1c4:	mov	rdi, qword ptr [rsp + 0xd8]
0xf1cc:	mov	rdx, qword ptr [rsp + 0xb8]
0xf1d4:	jmp	0xf1d9


0xf11c:	mov	rdi, qword ptr [rsp + 0xb8]
0xf124:	mov	rax, qword ptr [rsp + 0x1c8]
0xf12c:	mov	qword ptr [rdi + 8], rax
0xf130:	mov	rax, qword ptr [rsp + 0x48]
0xf135:	mov	qword ptr [rdi], 0
0xf13c:	test	byte ptr [rax + 0x38], 0x10
0xf140:	jne	0xf523


0xf10c:	mov	qword ptr [rax + 8], rdx
0xf110:	mov	qword ptr [rax], rdx
0xf113:	add	rax, 0x10
0xf117:	cmp	rcx, rax
0xf11a:	jne	0xf10c


0xe649:	movzx	eax, byte ptr [rsp + 0xce]
0xe651:	xor	eax, 1
0xe654:	test	byte ptr [rsp + 0x30], al
0xe658:	jne	0xe694


0xea30:	mov	rsi, qword ptr [r13 + 0x10]
0xea34:	mov	rdi, qword ptr [rsp]
0xea38:	lea	rdx, [r13 + 0x18]
0xea3c:	mov	rcx, r8
0xea3f:	mov	qword ptr [rsp + 0x10], r8
0xea44:	call	0x9400


0xe576:	mov	eax, dword ptr [rsp + 0x58]
0xe57a:	mov	qword ptr [rsp + 0x20], r8
0xe57f:	test	eax, eax
0xe581:	je	0xe6a6


0xf1d9:	cmp	rax, -1
0xf1dd:	je	0xf1f9


0xf146:	cmp	qword ptr [rsp + 0x270], 1
0xf14f:	je	0xf523


0xf523:	xor	eax, eax
0xf525:	jmp	0xf1a1


0xe65a:	mov	rsi, qword ptr [rsp + 0x1e0]
0xe662:	mov	rax, qword ptr [rsp + 0x168]
0xe66a:	xor	ecx, ecx
0xe66c:	jmp	0xe683


0xe587:	mov	qword ptr [rsp + 0x30], 1
0xe590:	mov	qword ptr [rsp + 0x50], 0
0xe599:	mov	r14, r13
0xe59c:	cmp	qword ptr [rsp + 0x188], r8
0xe5a4:	jle	0xe694


0xf1f9:	add	rcx, 1
0xf1fd:	add	rdx, 0x10
0xf201:	cmp	rcx, qword ptr [rsp + 0x270]
0xf209:	jne	0xf1d6


0xf1df:	test	r11b, r11b
0xf1e2:	mov	rsi, qword ptr [rdx + 8]
0xf1e6:	jne	0xf52a


0xf155:	mov	rax, qword ptr [rsp + 0x38]
0xf15a:	xor	r8d, r8d
0xf15d:	test	byte ptr [rax + 0xb0], 1
0xf164:	je	0xf175


0xe683:	lea	rdx, [rax + 1]
0xe687:	cmp	rsi, rdx
0xe68a:	jge	0xe670


0xf20b:	cmp	qword ptr [rsp + 0x98], 0
0xf214:	jle	0xf255


0xf1d6:	mov	rax, qword ptr [rdx]
0xf1d9:	cmp	rax, -1
0xf1dd:	je	0xf1f9


0xf1ec:	add	rax, rdi
0xf1ef:	add	rsi, rdi
0xf1f2:	mov	qword ptr [rdx], rax
0xf1f5:	mov	qword ptr [rdx + 8], rsi
0xf1f9:	add	rcx, 1
0xf1fd:	add	rdx, 0x10
0xf201:	cmp	rcx, qword ptr [rsp + 0x270]
0xf209:	jne	0xf1d6


0xf52a:	cmp	r10, rax
0xf52d:	je	0xf54c


0xf175:	mov	rbx, qword ptr [rsp + 0xb8]
0xf17d:	mov	rdx, qword ptr [rsp + 0x270]
0xf185:	mov	rsi, qword ptr [rsp]
0xf189:	mov	rdi, qword ptr [rsp + 0x48]
0xf18e:	mov	rcx, rbx
0xf191:	call	0xc590


0xf166:	xor	r8d, r8d
0xf169:	cmp	qword ptr [rax + 0x98], 0
0xf171:	setg	r8b
0xf175:	mov	rbx, qword ptr [rsp + 0xb8]
0xf17d:	mov	rdx, qword ptr [rsp + 0x270]
0xf185:	mov	rsi, qword ptr [rsp]
0xf189:	mov	rdi, qword ptr [rsp + 0x48]
0xf18e:	mov	rcx, rbx
0xf191:	call	0xc590


0xe68c:	test	cl, cl
0xe68e:	jne	0xf55e


0xe670:	cmp	qword ptr [rdi + rdx*8], 0
0xe675:	mov	rax, rdx
0xe678:	mov	ecx, 1
0xe67d:	jne	0xe9f0


0xf255:	mov	rax, qword ptr [rsp + 0x38]
0xf25a:	mov	rdi, qword ptr [rsp + 0x1d8]
0xf262:	mov	r9, qword ptr [rax + 0xe0]
0xf269:	test	r9, r9
0xf26c:	je	0xe998


0xf216:	mov	rdx, qword ptr [rsp + 0x98]
0xf21e:	mov	rdi, qword ptr [rsp + 0xb8]
0xf226:	mov	rax, rcx
0xf229:	shl	rax, 4
0xf22d:	add	rdx, rcx
0xf230:	lea	rax, [rdi + rax + 8]
0xf235:	shl	rdx, 4
0xf239:	lea	rsi, [rdi + rdx + 8]
0xf23e:	mov	rdx, -1
0xf245:	mov	qword ptr [rax - 8], rdx
0xf249:	mov	qword ptr [rax], rdx
0xf24c:	add	rax, 0x10
0xf250:	cmp	rsi, rax
0xf253:	jne	0xf245


0xf54c:	mov	rax, r8
0xf54f:	jmp	0xf533


0xf52f:	mov	rax, qword ptr [r9 + rax*8]
0xf533:	cmp	r10, rsi
0xf536:	mov	qword ptr [rdx], rax
0xf539:	je	0xf544


0xf55e:	mov	qword ptr [rsp + 0x168], rax
0xf566:	jmp	0xe694


0xe9f0:	mov	rsi, qword ptr [rsp]
0xe9f4:	mov	rdi, qword ptr [rsp + 0x28]
0xe9f9:	mov	qword ptr [rsp + 0x168], rdx
0xea01:	xor	edx, edx
0xea03:	call	0xd910


0xf272:	mov	r10, qword ptr [rsp + 0xb8]
0xf27a:	xor	r8d, r8d
0xf27d:	lea	rdx, [r10 + 0x10]
0xf281:	jmp	0xf2b9


0xf245:	mov	qword ptr [rax - 8], rdx
0xf249:	mov	qword ptr [rax], rdx
0xf24c:	add	rax, 0x10
0xf250:	cmp	rsi, rax
0xf253:	jne	0xf245


0xf533:	cmp	r10, rsi
0xf536:	mov	qword ptr [rdx], rax
0xf539:	je	0xf544


0xf544:	mov	rsi, r8
0xf547:	jmp	0xf1ec


0xf53b:	mov	rsi, qword ptr [r9 + rsi*8]
0xf53f:	jmp	0xf1ec


0xf2b9:	lea	rsi, [r8 + 1]
0xf2bd:	cmp	rsi, rcx
0xf2c0:	jne	0xf283


0xf2c2:	jmp	0xe998


0xf283:	mov	rax, qword ptr [r9 + rsi*8 - 8]
0xf288:	cmp	rax, r8
0xf28b:	je	0xf2b2


0xf2b2:	add	rdx, 0x10
0xf2b6:	mov	r8, rsi
0xf2b9:	lea	rsi, [r8 + 1]
0xf2bd:	cmp	rsi, rcx
0xf2c0:	jne	0xf283


0xf28d:	add	rax, 1
0xf291:	shl	rax, 4
0xf295:	mov	rax, qword ptr [r10 + rax]
0xf299:	mov	qword ptr [rdx], rax
0xf29c:	mov	rax, qword ptr [r9 + rsi*8 - 8]
0xf2a1:	add	rax, 1
0xf2a5:	shl	rax, 4
0xf2a9:	mov	rax, qword ptr [r10 + rax + 8]
0xf2ae:	mov	qword ptr [rdx + 8], rax
0xf2b2:	add	rdx, 0x10
0xf2b6:	mov	r8, rsi
0xf2b9:	lea	rsi, [r8 + 1]
0xf2bd:	cmp	rsi, rcx
0xf2c0:	jne	0xf283


0xeb27:	test	eax, eax
0xeb29:	je	0xec12


0xec12:	mov	r12, qword ptr [rsp + 0x168]
0xec1a:	add	rbx, 1
0xec1e:	cmp	rbx, qword ptr [r14 + 0x10]
0xec22:	jge	0xedd0


0xeb2f:	movsxd	rbp, eax
0xeb32:	add	rbp, qword ptr [rsp + 0x168]
0xeb3a:	cmp	dword ptr [rsp + 0x200], eax
0xeb41:	cmovge	eax, dword ptr [rsp + 0x200]
0xeb49:	mov	rdi, qword ptr [rsp]
0xeb4d:	mov	rsi, rbp
0xeb50:	mov	dword ptr [rsp + 0x200], eax
0xeb57:	call	0x6ab0


0xeb5c:	test	eax, eax
0xeb5e:	mov	dword ptr [rsp + 0xd4], eax
0xeb65:	jne	0xee00


0xeb6b:	mov	rax, qword ptr [r13 + 0x18]
0xeb6f:	lea	r12, [rbp*8]
0xeb77:	mov	rax, qword ptr [rax + r15*8]
0xeb7b:	mov	r15, qword ptr [rsp + 0x1d8]
0xeb83:	lea	rdx, [rax + rax*2]
0xeb87:	mov	rax, qword ptr [r13 + 0x30]
0xeb8b:	add	r15, r12
0xeb8e:	lea	rdx, [rax + rdx*8]
0xeb92:	mov	rax, qword ptr [r15]
0xeb95:	test	rax, rax
0xeb98:	je	0xec98


0xee00:	mov	rbx, qword ptr [rsp + 0xa0]
0xee08:	mov	rdi, qword ptr [rsp + 0x1d8]
0xee10:	test	rdi, rdi
0xee13:	mov	dword ptr [rsp + 0xd0], eax
0xee1a:	je	0xef00


0xec98:	movdqu	xmm0, xmmword ptr [rdx]
0xec9c:	lea	rsi, [rbp - 1]
0xeca0:	mov	rdi, qword ptr [rsp]
0xeca4:	movaps	xmmword ptr [rsp + 0xe0], xmm0
0xecac:	mov	rax, qword ptr [rdx + 0x10]
0xecb0:	mov	edx, dword ptr [rsp + 0x1c0]
0xecb7:	mov	qword ptr [rsp + 0xf0], rax
0xecbf:	call	0x9200


0xeb9e:	mov	rsi, qword ptr [rax + 0x50]
0xeba2:	mov	rdi, qword ptr [rsp + 0x60]
0xeba7:	call	0x8610


0xee20:	xor	r13d, r13d
0xee23:	jmp	0xe610


0xebac:	test	eax, eax
0xebae:	mov	dword ptr [rsp + 0xd4], eax
0xebb5:	jne	0xee00


0xebbb:	mov	edx, dword ptr [rsp + 0x1c0]
0xebc2:	mov	rdi, qword ptr [rsp]
0xebc6:	lea	rsi, [rbp - 1]
0xebca:	call	0x9200


0xea08:	mov	edx, dword ptr [rsp + 0xd0]
0xea0f:	test	edx, edx
0xea11:	jne	0xf34d


0xea17:	test	rax, rax
0xea1a:	jne	0xf360


0xf34d:	test	rax, rax
0xf350:	mov	r13, rax
0xf353:	jne	0xe548


0xea20:	mov	rdi, qword ptr [rsp + 0x1d8]
0xea28:	jmp	0xe65a


0xf360:	mov	r13, rax
0xf363:	jmp	0xe548


0xf359:	jmp	0xe694


0xe621:	mov	r13, rax
0xe624:	test	r13, r13
0xe627:	jne	0xe548


0xea7a:	test	eax, eax
0xea7c:	mov	dword ptr [rsp + 0xd0], eax
0xea83:	jne	0xf368


0xea89:	test	byte ptr [r14 + 0x68], 0x20
0xea8e:	mov	r8, qword ptr [rsp + 0x168]
0xea96:	je	0xe5db


0xf368:	cmp	eax, 0xc
0xf36b:	je	0xeeb0


0xf371:	lea	rcx, [rip + 0x6178]
0xf378:	lea	rsi, [rip + 0x5ba1]
0xf37f:	lea	rdi, [rip + 0x5c4e]
0xf386:	mov	edx, 0x46c
0xf38b:	call	0x1a00


0xed79:	mov	rbp, qword ptr [rsp + 0xd8]
0xed81:	movsxd	rax, dword ptr [rsp + 0xac]
0xed89:	add	rbp, rax
0xed8c:	cmp	rbp, qword ptr [rsp + 0x90]
0xed94:	mov	qword ptr [rsp + 0xd8], rbp
0xed9c:	jl	0xeda9


0xf3e4:	test	eax, eax
0xf3e6:	mov	dword ptr [rsp + 0xd0], eax
0xf3ed:	jne	0xf438


0xf3ef:	movzx	eax, byte ptr [r14 + 0x68]
0xf3f4:	test	al, 0x40
0xf3f6:	jne	0xf4e0


0xf438:	cdqe	
0xf43a:	mov	qword ptr [rsp + 0x20], rax
0xf43f:	jmp	0xe6a6


0xf3fc:	mov	byte ptr [rsp + 0x18], 0
0xf401:	jmp	0xe4f3


0xf4e0:	mov	rdi, qword ptr [rsp]
0xf4e4:	mov	rdx, rbp
0xf4e7:	mov	rsi, rbx
0xf4ea:	call	0xd020


0xe4f3:	test	al, 0x10
0xe4f5:	mov	qword ptr [rsp + 0x20], -1
0xe4fe:	mov	qword ptr [rsp + 0x30], 0
0xe507:	jne	0xf390


0xf4ef:	test	eax, eax
0xf4f1:	mov	dword ptr [rsp + 0xd0], eax
0xf4f8:	jne	0xf438


0xf4fe:	movzx	eax, byte ptr [r14 + 0x68]
0xf503:	jmp	0xf3fc


0xefa0:	test	eax, eax
0xefa2:	jne	0xe988


0xefa8:	mov	rdx, rbp
0xefab:	sub	rdx, qword ptr [rsp + 0x148]
0xefb3:	jmp	0xef38


0xe988:	mov	dword ptr [rsp + 0x5c], eax
0xe98c:	nop	dword ptr [rax]
0xe990:	mov	rdi, qword ptr [rsp + 0x1d8]
0xe998:	call	0x1880


0x699d:	test	eax, eax
0x699f:	mov	ebp, eax
0x69a1:	jne	0x6a5d


0x69a7:	mov	rdi, qword ptr [rbx + 0xb8]
0x69ae:	test	rdi, rdi
0x69b1:	je	0x69d4


0x6a5d:	add	rsp, 8
0x6a61:	mov	eax, ebp
0x6a63:	pop	rbx
0x6a64:	pop	rbp
0x6a65:	ret	


0x69d4:	cmp	byte ptr [rbx + 0x88], 0
0x69db:	mov	eax, dword ptr [rbx + 0x90]
0x69e1:	je	0x6a00


0x69b3:	mov	rax, qword ptr [rbx + 0x40]
0x69b7:	lea	rsi, [rax*8 + 8]
0x69bf:	call	0x1b30


0x6a00:	cmp	eax, 1
0x6a03:	jg	0x6a70


0x69e3:	cmp	eax, 1
0x69e6:	mov	rdi, rbx
0x69e9:	jle	0x6aa0


0x6a05:	mov	rcx, qword ptr [rbx + 0x78]
0x6a09:	test	rcx, rcx
0x6a0c:	je	0x6a5d


0x6a70:	mov	rdi, rbx
0x6a73:	call	0x6170


0x6aa0:	call	0x6100


0x69ef:	add	rsp, 8
0x69f3:	pop	rbx
0x69f4:	pop	rbp
0x69f5:	jmp	0x6340


0x6a0e:	mov	rsi, qword ptr [rbx + 0x58]
0x6a12:	cmp	qword ptr [rbx + 0x40], rsi
0x6a16:	cmovle	rsi, qword ptr [rbx + 0x40]
0x6a1b:	mov	rax, qword ptr [rbx + 0x30]
0x6a1f:	cmp	rsi, rax
0x6a22:	jg	0x6a34


0x6a24:	jmp	0x6a55


0x6a34:	mov	rdx, qword ptr [rbx]
0x6a37:	add	rdx, rax
0x6a3a:	add	rdx, qword ptr [rbx + 0x28]
0x6a3e:	movzx	edx, byte ptr [rdx]
0x6a41:	movzx	ecx, byte ptr [rcx + rdx]
0x6a45:	mov	rdx, qword ptr [rbx + 8]
0x6a49:	mov	byte ptr [rdx + rax], cl
0x6a4c:	add	rax, 1
0x6a50:	cmp	rsi, rax
0x6a53:	jne	0x6a30


0x6a55:	mov	qword ptr [rbx + 0x30], rax
0x6a59:	mov	qword ptr [rbx + 0x38], rax
0x6a5d:	add	rsp, 8
0x6a61:	mov	eax, ebp
0x6a63:	pop	rbx
0x6a64:	pop	rbp
0x6a65:	ret	


0x6a30:	mov	rcx, qword ptr [rbx + 0x78]
0x6a34:	mov	rdx, qword ptr [rbx]
0x6a37:	add	rdx, rax
0x6a3a:	add	rdx, qword ptr [rbx + 0x28]
0x6a3e:	movzx	edx, byte ptr [rdx]
0x6a41:	movzx	ecx, byte ptr [rcx + rdx]
0x6a45:	mov	rdx, qword ptr [rbx + 8]
0x6a49:	mov	byte ptr [rdx + rax], cl
0x6a4c:	add	rax, 1
0x6a50:	cmp	rsi, rax
0x6a53:	jne	0x6a30


0x6aa5:	add	rsp, 8
0x6aa9:	mov	eax, ebp
0x6aab:	pop	rbx
0x6aac:	pop	rbp
0x6aad:	ret	


0x6a78:	add	rsp, 8
0x6a7c:	mov	eax, ebp
0x6a7e:	pop	rbx
0x6a7f:	pop	rbp
0x6a80:	ret	


0xff94:	cdqe	
0xff96:	add	rax, r11
0xff99:	mov	qword ptr [r10 + 0x48], rax
0xff9d:	jmp	0xfeda


0xbc0f:	cmp	r11b, 5
0xbc13:	mov	ebp, eax
0xbc15:	je	0xbcd0


0xbcd0:	cmp	eax, 1
0xbcd3:	jle	0xbcc0


0xbc1b:	cmp	r11b, 6
0xbc1f:	jne	0xbcc0


0xbcd5:	mov	rax, qword ptr [rbx]
0xbcd8:	test	al, 0x40
0xbcda:	je	0xbcf0


0xbc25:	cmp	eax, 1
0xbc28:	jle	0xbcc0


0xbcf0:	mov	rdx, qword ptr [r10 + 8]
0xbcf4:	cmp	byte ptr [rdx + r8], 0xa
0xbcf9:	jne	0xbcdc


0xbcdc:	test	al, 0x80
0xbcde:	je	0xbcc2


0xbc2e:	mov	r13, qword ptr [r9]
0xbc31:	mov	rsi, qword ptr [r13 + 0x40]
0xbc35:	mov	rdx, qword ptr [r13 + 0x28]
0xbc39:	test	rsi, rsi
0xbc3c:	jne	0xbc49


0xbcfb:	jmp	0xbcc0


0xbce0:	mov	rax, qword ptr [r10 + 8]
0xbce4:	cmp	byte ptr [rax + r8], 0
0xbce9:	je	0xbcc0


0xbc3e:	cmp	qword ptr [r13 + 0x48], 0
0xbc43:	je	0xbd38


0xbc49:	mov	rax, qword ptr [r10 + 0x10]
0xbc4d:	test	rdx, rdx
0xbc50:	mov	r12d, dword ptr [rax + r8*4]
0xbc54:	jle	0xbc77


0xbceb:	jmp	0xbcc2


0xbd38:	test	rdx, rdx
0xbd3b:	jne	0xbc49


0xbc77:	mov	rax, qword ptr [r13 + 0x48]
0xbc7b:	test	rax, rax
0xbc7e:	jle	0xbd5c


0xbc56:	mov	rcx, qword ptr [r13]
0xbc5a:	cmp	r12d, dword ptr [rcx]
0xbc5d:	je	0xbcb2


0xbd41:	test	byte ptr [r13 + 0x20], 1
0xbd46:	jne	0xbcc2


0xbd5c:	test	rsi, rsi
0xbd5f:	jle	0xbd41


0xbc84:	xor	ebx, ebx
0xbc86:	jmp	0xbc9e


0xbcb2:	test	byte ptr [r13 + 0x20], 1
0xbcb7:	je	0xbcc2


0xbc5f:	xor	eax, eax
0xbc61:	jmp	0xbc6e


0xbd4c:	jmp	0xbcc0


0xbd61:	mov	rdx, qword ptr [r13 + 8]
0xbd65:	xor	eax, eax
0xbd67:	jmp	0xbd79


0xbc9e:	mov	rax, qword ptr [r13 + 0x18]
0xbca2:	mov	edi, r12d
0xbca5:	mov	rsi, qword ptr [rax + rbx*8]
0xbca9:	call	0x1930


0xbc6e:	add	rax, 1
0xbc72:	cmp	rax, rdx
0xbc75:	jne	0xbc68


0xbd79:	cmp	r12d, dword ptr [rdx + rax*4]
0xbd7d:	jl	0xbd70


0x1930:	jmp	qword ptr [rip + 0x2174f2]


0xbc68:	cmp	r12d, dword ptr [rcx + rax*4]
0xbc6c:	je	0xbcb2


0xbd70:	add	rax, 1
0xbd74:	cmp	rax, rsi
0xbd77:	je	0xbd41


0xbd7f:	mov	rcx, qword ptr [r13 + 0x10]
0xbd83:	cmp	r12d, dword ptr [rcx + rax*4]
0xbd87:	jg	0xbd70




0xbd89:	jmp	0xbcb2


0xfe00:	cmp	eax, 1
0xfe03:	jle	0xfe48


0xfe05:	mov	rdx, qword ptr [r10 + 0x10]
0xfe09:	cdqe	
0xfe0b:	mov	dword ptr [rbx], 1
0xfe11:	add	rax, r12
0xfe14:	mov	edx, dword ptr [rdx + r12*4]
0xfe18:	mov	dword ptr [rbx + 8], edx
0xfe1b:	mov	qword ptr [r10 + 0x48], rax
0xfe1f:	xor	eax, eax
0xfe21:	mov	rcx, qword ptr [rsp + 0x18]
0xfe26:	xor	rcx, qword ptr fs:[0x28]
0xfe2f:	jne	0x10018


0x131a5:	mov	rax, qword ptr [r12 + 0x50]
0x131aa:	cmp	qword ptr [r12 + 0x48], rax
0x131af:	je	0x131c9


0x131c9:	mov	rsi, qword ptr [r12 + 0x58]
0x131ce:	cmp	rsi, rax
0x131d1:	je	0x131eb


0x131b1:	lea	rdx, [rax + 0x18]
0x131b5:	lea	rsi, [rax + 0x10]
0x131b9:	mov	rcx, rbp
0x131bc:	mov	rdi, rbx
0x131bf:	call	0xb6a0


0x131eb:	mov	rsi, qword ptr [r12 + 0x60]
0x131f0:	cmp	rsi, rax
0x131f3:	je	0x13208


0x131d3:	lea	rdx, [rsi + 0x18]
0x131d7:	mov	rcx, rbp
0x131da:	add	rsi, 0x10
0x131de:	mov	rdi, rbx
0x131e1:	call	0xb6a0


0x13208:	or	byte ptr [rbx + 0x38], 8
0x1320c:	xor	eax, eax
0x1320e:	pop	rbx
0x1320f:	pop	rbp
0x13210:	pop	r12
0x13212:	ret	


0x131f5:	lea	rdx, [rsi + 0x18]
0x131f9:	mov	rcx, rbp
0x131fc:	add	rsi, 0x10
0x13200:	mov	rdi, rbx
0x13203:	call	0xb6a0


0x131e6:	mov	rax, qword ptr [r12 + 0x48]
0x131eb:	mov	rsi, qword ptr [r12 + 0x60]
0x131f0:	cmp	rsi, rax
0x131f3:	je	0x13208


0x131c4:	mov	rax, qword ptr [r12 + 0x48]
0x131c9:	mov	rsi, qword ptr [r12 + 0x58]
0x131ce:	cmp	rsi, rax
0x131d1:	je	0x131eb


0x134bc:	movzx	eax, byte ptr [r15 + 0x38]
0x134c1:	mov	r9, qword ptr [rsp + 0x20]
0x134c6:	mov	rdx, qword ptr [rsp + 0x18]
0x134cb:	mov	rsi, qword ptr [rsp + 0x10]
0x134d0:	mov	r8, qword ptr [rsp + 8]
0x134d5:	jmp	0x132b1


0x307c:	mov	rbx, rax
0x307f:	mov	rdi, rax
0x3082:	call	0x13c00


0x7187:	cmp	qword ptr [r12 + 0x10], rbx
0x718c:	ja	0x7170


0x7170:	mov	rdi, qword ptr [r12]
0x7174:	mov	rax, rbx
0x7177:	add	rbx, 1
0x717b:	shl	rax, 4
0x717f:	add	rdi, rax
0x7182:	call	0x6b70


0x6bad:	xor	eax, eax
0x6baf:	add	rsp, 8
0x6bb3:	ret	


0xaa73:	cmp	rax, -1
0xaa77:	mov	rdx, rax
0xaa7a:	mov	qword ptr [rbx + 0x38], rax
0xaa7e:	je	0xaad0


0xaad0:	mov	eax, 0xc
0xaad5:	jmp	0xaaac


0xaa80:	xor	eax, eax
0xaa82:	cmp	byte ptr [rbx + 0x30], 0xc
0xaa86:	jne	0xaaac


0xaaac:	add	rsp, 8
0xaab0:	pop	rbx
0xaab1:	pop	rbp
0xaab2:	ret	


0xaa88:	mov	ecx, dword ptr [rbx + 0x28]
0xaa8b:	shl	rdx, 4
0xaa8f:	add	rdx, qword ptr [rbp]
0xaa93:	and	ecx, 0x3ff
0xaa99:	shl	ecx, 8
0xaa9c:	mov	esi, ecx
0xaa9e:	mov	ecx, dword ptr [rdx + 8]
0xaaa1:	and	ecx, 0xfffc00ff
0xaaa7:	or	ecx, esi
0xaaa9:	mov	dword ptr [rdx + 8], ecx
0xaaac:	add	rsp, 8
0xaab0:	pop	rbx
0xaab1:	pop	rbp
0xaab2:	ret	


0x6dbb:	cmp	rax, -1
0x6dbf:	je	0x6e24


0x6e24:	add	rsp, 8
0x6e28:	pop	rbx
0x6e29:	pop	rbp
0x6e2a:	pop	r12
0x6e2c:	pop	r13
0x6e2e:	ret	


0x6dc1:	mov	edi, r12d
0x6dc4:	mov	r8, qword ptr [rbx]
0x6dc7:	mov	rsi, rax
0x6dca:	and	di, 0x3ff
0x6dcf:	shl	rsi, 4
0x6dd3:	mov	ecx, edi
0x6dd5:	and	ecx, 0x3ff
0x6ddb:	add	rsi, r8
0x6dde:	shl	ecx, 8
0x6de1:	mov	edx, ecx
0x6de3:	mov	ecx, dword ptr [rsi + 8]
0x6de6:	and	ecx, 0xfffc00ff
0x6dec:	or	ecx, edx
0x6dee:	mov	dword ptr [rsi + 8], ecx
0x6df1:	mov	edx, dword ptr [r8 + r13 + 8]
0x6df6:	and	ecx, 0xfffc00ff
0x6dfc:	shr	edx, 8
0x6dff:	or	edx, edi
0x6e01:	and	edx, 0x3ff
0x6e07:	shl	edx, 8
0x6e0a:	or	edx, ecx
0x6e0c:	mov	ecx, edx
0x6e0e:	mov	dword ptr [rsi + 8], edx
0x6e11:	shr	ecx, 0x10
0x6e14:	mov	edx, ecx
0x6e16:	or	edx, 4
0x6e19:	mov	byte ptr [rsi + 0xa], dl
0x6e1c:	mov	rdx, qword ptr [rbx + 0x20]
0x6e20:	mov	qword ptr [rdx + rax*8], rbp
0x6e24:	add	rsp, 8
0x6e28:	pop	rbx
0x6e29:	pop	rbp
0x6e2a:	pop	r12
0x6e2c:	pop	r13
0x6e2e:	ret	


0x6f37:	cmp	rax, -1
0x6f3b:	mov	r13, rax
0x6f3e:	je	0x6f5b


0x6f40:	add	rbx, qword ptr [r14 + 0x28]
0x6f44:	mov	rsi, r13
0x6f47:	mov	rdi, rbx
0x6f4a:	call	0x5ee0


0x6f4f:	test	al, al
0x6f51:	mov	r9, qword ptr [rsp]
0x6f55:	jne	0x6e4f


0x6e4f:	mov	r8, qword ptr [r14]
0x6e52:	mov	rax, r9
0x6e55:	mov	rdi, qword ptr [r14 + 0x28]
0x6e59:	shl	rax, 4
0x6e5d:	mov	r12, r13
0x6e60:	add	rax, r8
0x6e63:	cmp	byte ptr [rax + 8], 4
0x6e67:	je	0x7020


0x6f7d:	cmp	rax, -1
0x6f81:	mov	r13, rax
0x6f84:	je	0x6f5b


0x6f86:	mov	rdi, qword ptr [r14 + 0x28]
0x6f8a:	mov	rsi, r13
0x6f8d:	add	rdi, rbx
0x6f90:	call	0x5ee0


0x6f95:	test	al, al
0x6f97:	je	0x6f5b


0x6f99:	mov	rcx, qword ptr [rsp + 8]
0x6f9e:	mov	r8d, ebp
0x6fa1:	mov	rdx, r13
0x6fa4:	mov	rsi, r15
0x6fa7:	mov	rdi, r14
0x6faa:	call	0x6e30


0x6faf:	test	eax, eax
0x6fb1:	je	0x6f19


0x6fb7:	jmp	0x6f60


0x6fea:	cmp	rax, -1
0x6fee:	mov	r13, rax
0x6ff1:	je	0x6f5b


0x6ff7:	add	rbx, qword ptr [r14 + 0x28]
0x6ffb:	mov	rsi, rax
0x6ffe:	mov	rdi, rbx
0x7001:	call	0x5ee0


0x7006:	test	al, al
0x7008:	je	0x6f5b


0x700e:	mov	r9, r15
0x7011:	jmp	0x6e4f


0x7053:	cmp	rax, -1
0x7057:	mov	r13, rax
0x705a:	mov	r9, qword ptr [rsp]
0x705e:	je	0x6f5b


0x7064:	mov	rax, qword ptr [r14 + 0x18]
0x7068:	mov	qword ptr [rsp], r9
0x706c:	mov	rcx, qword ptr [rax + r15]
0x7070:	mov	qword ptr [rax + r12*8], rcx
0x7074:	jmp	0x6f40


0xfaee:	test	rax, rax
0xfaf1:	jne	0xfab8


0xfaf3:	add	r9, qword ptr [r12 + 0x30]
0xfaf8:	mov	rdi, qword ptr [r9 + 8]
0xfafc:	lea	rsi, [r9 + 0x10]
0xfb00:	call	0x7420


0xfab8:	add	rbp, 1
0xfabc:	cmp	rbp, qword ptr [rbx + 8]
0xfac0:	jge	0xfb48


0xfac6:	mov	r10, qword ptr [rbx + 0x10]
0xfaca:	mov	r10, qword ptr [r10 + rbp*8]
0xface:	mov	rax, qword ptr [r12 + 0x38]
0xfad3:	mov	rdx, r14
0xfad6:	lea	r9, [r10 + r10*2]
0xfada:	shl	r9, 3
0xfade:	add	rax, r9
0xfae1:	mov	rdi, qword ptr [rax + 8]
0xfae5:	lea	rsi, [rax + 0x10]
0xfae9:	call	0x7420


0xfb48:	mov	rbp, qword ptr [rsp + 0x30]
0xfb4d:	jmp	0xf9dd


0xfb05:	test	rax, rax
0xfb08:	jne	0xfab8


0xfb0a:	mov	rcx, qword ptr [rsp + 0x10]
0xfb0f:	mov	rdx, rbx
0xfb12:	mov	rsi, r10
0xfb15:	mov	rdi, r12
0xfb18:	call	0x9c70


0xfbee:	test	rax, rax
0xfbf1:	je	0xfd07


0xfbf7:	sub	rsp, 8
0xfbfb:	lea	rdx, [rbx + 0x30]
0xfbff:	lea	rsi, [rbx + 0x28]
0xfc03:	push	r9
0xfc05:	mov	rdi, qword ptr [rsp + 0x18]
0xfc0a:	mov	rcx, r14
0xfc0d:	mov	r9, r10
0xfc10:	mov	r8, rbp
0xfc13:	call	0x76d0


0xfc18:	test	al, al
0xfc1a:	pop	rdx
0xfc1b:	pop	rcx
0xfc1c:	jne	0xfd07


0xfc22:	cmp	qword ptr [rsp + 0x60], 0
0xfc28:	je	0xfd38


0xfd38:	mov	rax, qword ptr [rbx + 0x30]
0xfd3c:	lea	rsi, [rbx + 0x20]
0xfd40:	movdqa	xmm0, xmmword ptr [rbx]
0xfd44:	mov	qword ptr [rsp + 0x90], rax
0xfd4c:	mov	rax, qword ptr [rsp + 0x38]
0xfd51:	movaps	xmmword ptr [rsp + 0x60], xmm0
0xfd56:	lea	rdi, [rax + 0x20]
0xfd5a:	movdqa	xmm0, xmmword ptr [rbx + 0x10]
0xfd5f:	movaps	xmmword ptr [rsp + 0x70], xmm0
0xfd64:	movdqa	xmm0, xmmword ptr [rbx + 0x20]
0xfd69:	movaps	xmmword ptr [rsp + 0x80], xmm0
0xfd71:	call	0x8580


0xfc2e:	mov	rax, qword ptr [rsp + 0x38]
0xfc33:	mov	rsi, r13
0xfc36:	mov	qword ptr [rsp + 0x70], r14
0xfc3b:	mov	qword ptr [rsp + 0x78], rbp
0xfc40:	lea	rdi, [rax + 0x20]
0xfc44:	call	0x5ee0


0xfc49:	test	al, al
0xfc4b:	je	0xfda4


0xfda4:	mov	eax, 0xc
0xfda9:	jmp	0xfd7e


0xfc51:	mov	rdi, qword ptr [rsp + 0x18]
0xfc56:	mov	rax, qword ptr [rsp + 0x60]
0xfc5b:	mov	rsi, qword ptr [rsp + 0x38]
0xfc60:	mov	r15, qword ptr [rax + rdi]
0xfc64:	mov	rdi, qword ptr [rsp + 8]
0xfc69:	call	0xdb00


0xfd7e:	cmp	qword ptr [rsp + 0x60], 0
0xfd84:	je	0xf608


0xfd76:	test	eax, eax
0xfd78:	je	0xfc2e


0x8f2e:	test	rax, rax
0x8f31:	je	0x8f09


0x8f09:	add	r15, 0x28
0x8f0d:	cmp	byte ptr [r15 - 8], 0
0x8f12:	je	0x8dcd


0x8f33:	mov	r8, qword ptr [r15 + 0x18]
0x8f37:	add	r8, r12
0x8f3a:	mov	r14, r8
0x8f3d:	sub	r14, qword ptr [r15 + 0x10]
0x8f41:	cmp	r12, r14
0x8f44:	jne	0x8e48


0x8f4a:	mov	rcx, qword ptr [r13 + 0x28]
0x8f4e:	lea	rax, [r10 + r10*2]
0x8f52:	mov	rsi, qword ptr [rsp]
0x8f56:	mov	rdi, r9
0x8f59:	lea	rax, [rcx + rax*8]
0x8f5d:	mov	rax, qword ptr [rax + 0x10]
0x8f61:	mov	r14, qword ptr [rax]
0x8f64:	mov	rdx, r14
0x8f67:	call	0x7420


0x8e48:	mov	rax, qword ptr [r13 + 0x18]
0x8e4c:	mov	rcx, qword ptr [rax + r10*8]
0x8e50:	mov	r10, qword ptr [rbx + 0xb8]
0x8e57:	lea	rax, [r14*8]
0x8e5f:	mov	qword ptr [rsp + 0x18], rax
0x8e64:	add	r10, rax
0x8e67:	mov	qword ptr [rsp + 8], rcx
0x8e6c:	mov	r9, qword ptr [r10]
0x8e6f:	test	r9, r9
0x8e72:	je	0x9000


0x9000:	mov	edi, 8
0x9005:	mov	qword ptr [rsp + 0x18], r10
0x900a:	mov	qword ptr [rsp + 0x50], 1
0x9013:	mov	qword ptr [rsp + 0x58], 1
0x901c:	call	0x1ac0


0x8e78:	mov	rdi, qword ptr [r9 + 0x10]
0x8e7c:	lea	rsi, [r9 + 0x18]
0x8e80:	mov	rdx, rcx
0x8e83:	call	0x7420


0x8e88:	test	rax, rax
0x8e8b:	jne	0x8f09


0x8e8d:	mov	rdi, qword ptr [rsp + 0x10]
0x8e92:	lea	rsi, [r9 + 8]
0x8e96:	call	0x8580


0x8e9b:	mov	rsi, qword ptr [rsp + 8]
0x8ea0:	mov	rdi, qword ptr [rsp + 0x10]
0x8ea5:	mov	dword ptr [rsp + 0x4c], eax
0x8ea9:	call	0x5ee0


0x8eae:	mov	edx, dword ptr [rsp + 0x4c]
0x8eb2:	test	edx, edx
0x8eb4:	jne	0x9056


0x8eba:	cmp	al, 1
0x8ebc:	jne	0x9056


0x9056:	mov	rdi, qword ptr [rsp + 0x60]
0x905b:	call	0x1880


0x8ec2:	mov	r10, qword ptr [rsp + 0x18]
0x8ec7:	add	r10, qword ptr [rbx + 0xb8]
0x8ece:	mov	rdx, qword ptr [rsp + 0x10]
0x8ed3:	mov	rdi, qword ptr [rsp + 0x38]
0x8ed8:	mov	rsi, r13
0x8edb:	mov	qword ptr [rsp + 8], r10
0x8ee0:	call	0x8a30


0x8ee5:	mov	r10, qword ptr [rsp + 8]
0x8eea:	mov	rdi, qword ptr [rsp + 0x60]
0x8eef:	mov	qword ptr [r10], rax
0x8ef2:	call	0x1880


0x8f6c:	test	rax, rax
0x8f6f:	jne	0x8f09


0x8f71:	mov	edi, 8
0x8f76:	mov	qword ptr [rsp + 0x50], 1
0x8f7f:	mov	qword ptr [rsp + 0x58], 1
0x8f88:	call	0x1ac0


0x9e28:	test	rax, rax
0x9e2b:	jne	0x9e52


0x9e2d:	lea	rbx, [r14 + 0x10]
0x9e31:	mov	rdi, qword ptr [r14 + 8]
0x9e35:	mov	rsi, rbx
0x9e38:	call	0x7420


0x9e52:	add	r9, 1
0x9e56:	cmp	qword ptr [rbp + 8], r9
0x9e5a:	jg	0x9e10


0x9e10:	mov	rax, qword ptr [rbp + 0x10]
0x9e14:	mov	rdi, qword ptr [rsp + 0x28]
0x9e19:	mov	rsi, r11
0x9e1c:	mov	r10, qword ptr [rax + r9*8]
0x9e20:	mov	rdx, r10
0x9e23:	call	0x7420


0x9e3d:	sub	rax, 1
0x9e41:	mov	rdx, rax
0x9e44:	js	0x9e52


0x9e46:	lea	rdi, [r14 + 8]
0x9e4a:	mov	rsi, rbx
0x9e4d:	call	0x75a0


0x9d7d:	mov	rcx, qword ptr [rsp + 8]
0x9d82:	mov	r8, qword ptr [rsp]
0x9d86:	cmp	qword ptr [rcx + 8], 1
0x9d8b:	jg	0x9cd8


0x9d91:	test	rax, rax
0x9d94:	jne	0x9d20


0x9cd8:	test	rax, rax
0x9cdb:	jne	0x9db8


0x9d96:	mov	rdi, qword ptr [r14 + 8]
0x9d9a:	lea	rsi, [r14 + 0x10]
0x9d9e:	mov	rdx, r8
0x9da1:	call	0x7420


0x9ce1:	mov	rdi, qword ptr [r14 + 8]
0x9ce5:	lea	rsi, [r14 + 0x10]
0x9ce9:	mov	rdx, r8
0x9cec:	call	0x7420


0x9db8:	mov	r15, qword ptr [r15 + 8]
0x9dbc:	test	r15, r15
0x9dbf:	jle	0x9d20


0x9dc5:	mov	rdx, r15
0x9dc8:	mov	rsi, r11
0x9dcb:	mov	rdi, r10
0x9dce:	call	0x7420


0x9dd3:	test	rax, rax
0x9dd6:	jne	0x9d20


0x9ddc:	mov	rdi, qword ptr [r14 + 8]
0x9de0:	lea	rsi, [r14 + 0x10]
0x9de4:	call	0x7420


0x9de9:	test	rax, rax
0x9dec:	je	0x9d20


0x9df2:	jmp	0x9cfa


0x9cfa:	mov	rdx, qword ptr [r12 + 0x38]
0x9cff:	mov	rsi, qword ptr [rsp + 0x10]
0x9d04:	mov	rdi, qword ptr [rsp + 0x18]
0x9d09:	add	rdx, r9
0x9d0c:	call	0x7f30


0x9d11:	test	eax, eax
0x9d13:	jne	0x9e90


0x9d19:	mov	r10, qword ptr [rbp + 8]
0x9d1d:	nop	dword ptr [rax]
0x9d20:	add	rbx, 1
0x9d24:	cmp	r10, rbx
0x9d27:	jle	0x9e00


0x9e90:	mov	rdi, qword ptr [rsp + 0x30]
0x9e95:	mov	dword ptr [rsp], eax
0x9e98:	call	0x1880


0x9cf1:	test	rax, rax
0x9cf4:	je	0x9db8


0x9da6:	test	rax, rax
0x9da9:	jne	0x9cfa


0x9daf:	jmp	0x9d20


0x74d0:	test	rax, rax
0x74d3:	jne	0x7540


0x74d5:	mov	rax, rbx
0x74d8:	shl	rax, 4
0x74dc:	add	rax, qword ptr [r12]
0x74e0:	movzx	edx, byte ptr [rax + 8]
0x74e4:	cmp	edx, r13d
0x74e7:	jne	0x74ee


0x7540:	xor	eax, eax
0x7542:	add	rsp, 8
0x7546:	pop	rbx
0x7547:	pop	rbp
0x7548:	pop	r12
0x754a:	pop	r13
0x754c:	pop	r14
0x754e:	pop	r15
0x7550:	ret	


0x74e9:	cmp	qword ptr [rax], r15
0x74ec:	je	0x7528


0x74ee:	mov	rsi, rbx
0x74f1:	mov	rdi, rbp
0x74f4:	call	0x5ee0


0x7528:	cmp	r13d, 9
0x752c:	jne	0x7540


0x752e:	mov	rsi, rbx
0x7531:	mov	rdi, rbp
0x7534:	call	0x5ee0


0x7539:	test	al, al
0x753b:	je	0x7558


0x7558:	add	rsp, 8
0x755c:	mov	eax, 0xc
0x7561:	pop	rbx
0x7562:	pop	rbp
0x7563:	pop	r12
0x7565:	pop	r13
0x7567:	pop	r14
0x7569:	pop	r15
0x756b:	ret	


0x74f9:	test	al, al
0x74fb:	je	0x7558


0x74fd:	lea	rbx, [rbx + rbx*2]
0x7501:	mov	rdx, qword ptr [r12 + 0x28]
0x7506:	shl	rbx, 3
0x750a:	add	rdx, rbx
0x750d:	mov	rax, qword ptr [rdx + 8]
0x7511:	test	rax, rax
0x7514:	je	0x7540


0x7516:	cmp	rax, 2
0x751a:	mov	rdx, qword ptr [rdx + 0x10]
0x751e:	je	0x7570


0x7570:	mov	rdx, qword ptr [rdx + 8]
0x7574:	mov	r8d, r13d
0x7577:	mov	rcx, r15
0x757a:	mov	rsi, rbp
0x757d:	mov	rdi, r12
0x7580:	call	0x74a0


0x7520:	mov	rbx, qword ptr [rdx]
0x7523:	jmp	0x74c1


0x74c1:	mov	rdi, qword ptr [rbp + 8]
0x74c5:	mov	rdx, rbx
0x74c8:	mov	rsi, r14
0x74cb:	call	0x7420


0x7585:	test	eax, eax
0x7587:	jne	0x7542


0x7589:	mov	rax, qword ptr [r12 + 0x28]
0x758e:	mov	rdx, qword ptr [rax + rbx + 0x10]
0x7593:	jmp	0x7520


0x7542:	add	rsp, 8
0x7546:	pop	rbx
0x7547:	pop	rbp
0x7548:	pop	r12
0x754a:	pop	r13
0x754c:	pop	r14
0x754e:	pop	r15
0x7550:	ret	


0x8327:	mov	rdi, r15
0x832a:	mov	r8, r14
0x832d:	xor	ecx, ecx
0x832f:	xor	edx, edx
0x8331:	mov	rsi, rbx
0x8334:	mov	r12, rax
0x8337:	mov	byte ptr [rsp + 0x28], 9
0x833c:	call	0x80e0


0x8341:	mov	r15, rax
0x8344:	jmp	0x849d


0x849d:	mov	rdi, qword ptr [rsp + 8]
0x84a2:	mov	r8, r14
0x84a5:	mov	rcx, r15
0x84a8:	mov	rdx, rbp
0x84ab:	mov	rsi, rbx
0x84ae:	mov	byte ptr [rsp + 0x28], 0x10
0x84b3:	call	0x80e0


0x84b8:	mov	r11, rax
0x84bb:	jmp	0x839c


0x839c:	mov	rdi, qword ptr [rsp + 8]
0x83a1:	mov	r8, r14
0x83a4:	mov	rcx, r11
0x83a7:	mov	rdx, r12
0x83aa:	mov	rsi, rbx
0x83ad:	mov	byte ptr [rsp + 0x28], 0x10
0x83b2:	mov	qword ptr [rsp + 0x10], r11
0x83b7:	call	0x80e0


0x83bc:	test	rax, rax
0x83bf:	mov	rbp, rax
0x83c2:	je	0x84c0


0x84c0:	mov	rax, qword ptr [rsp + 0x18]
0x84c5:	xor	ebp, ebp
0x84c7:	mov	dword ptr [rax], 0xc
0x84cd:	jmp	0x841d


0x83c8:	mov	r11, qword ptr [rsp + 0x10]
0x83cd:	test	r11, r11
0x83d0:	je	0x84c0


0x83d6:	test	r12, r12
0x83d9:	je	0x84c0


0x83df:	test	r15, r15
0x83e2:	je	0x84c0


0x83e8:	mov	rax, qword ptr [r13 + 0x28]
0x83ec:	mov	qword ptr [r15 + 0x28], rax
0x83f0:	mov	qword ptr [r12 + 0x28], rax
0x83f5:	movzx	eax, byte ptr [r13 + 0x32]
0x83fa:	movzx	edx, byte ptr [r15 + 0x32]
0x83ff:	and	eax, 8
0x8402:	and	edx, 0xfffffff7
0x8405:	mov	ecx, eax
0x8407:	or	edx, ecx
0x8409:	mov	byte ptr [r15 + 0x32], dl
0x840d:	movzx	eax, byte ptr [r12 + 0x32]
0x8413:	and	eax, 0xfffffff7
0x8416:	or	eax, ecx
0x8418:	mov	byte ptr [r12 + 0x32], al
0x841d:	mov	rdi, qword ptr [rsp + 0x38]
0x8422:	xor	rdi, qword ptr fs:[0x28]
0x842b:	mov	rax, rbp
0x842e:	jne	0x84d2


0x837c:	mov	rdi, r15
0x837f:	mov	r8, r14
0x8382:	xor	ecx, ecx
0x8384:	xor	edx, edx
0x8386:	mov	rsi, rbx
0x8389:	mov	r12, rax
0x838c:	mov	byte ptr [rsp + 0x28], 9
0x8391:	call	0x80e0


0x8396:	mov	r11, rax
0x8399:	mov	r15, rax
0x839c:	mov	rdi, qword ptr [rsp + 8]
0x83a1:	mov	r8, r14
0x83a4:	mov	rcx, r11
0x83a7:	mov	rdx, r12
0x83aa:	mov	rsi, rbx
0x83ad:	mov	byte ptr [rsp + 0x28], 0x10
0x83b2:	mov	qword ptr [rsp + 0x10], r11
0x83b7:	call	0x80e0


0x8474:	xor	ecx, ecx
0x8476:	xor	edx, edx
0x8478:	mov	rdi, r15
0x847b:	mov	r8, r14
0x847e:	mov	rsi, rbx
0x8481:	mov	r12, rax
0x8484:	mov	byte ptr [rsp + 0x28], 9
0x8489:	call	0x80e0


0x848e:	test	rbp, rbp
0x8491:	mov	r15, rax
0x8494:	mov	r11, rax
0x8497:	je	0x839c


0x8203:	test	rax, rax
0x8206:	mov	qword ptr [r14], rax
0x8209:	je	0x825c


0x825c:	mov	rcx, qword ptr [rsp + 8]
0x8261:	xor	rcx, qword ptr fs:[0x28]
0x826a:	jne	0x828c


0x820b:	mov	qword ptr [rax], rbp
0x820e:	mov	rbp, qword ptr [r14]
0x8211:	or	byte ptr [rbp + 0x32], 4
0x8215:	mov	rax, qword ptr [rbx + 8]
0x8219:	test	rax, rax
0x821c:	je	0x8230


0x826c:	add	rsp, 0x10
0x8270:	pop	rbx
0x8271:	pop	rbp
0x8272:	pop	r12
0x8274:	pop	r13
0x8276:	pop	r14
0x8278:	ret	


0x828c:	call	0x1990


0x8230:	xor	edx, edx
0x8232:	jmp	0x823b


0x821e:	lea	r14, [rbp + 8]
0x8222:	mov	rbx, rax
0x8225:	jmp	0x81f0


0x823b:	mov	rax, qword ptr [rbx + 0x10]
0x823f:	test	rax, rax
0x8242:	je	0x8249


0x81f0:	lea	r8, [rbx + 0x28]
0x81f4:	xor	ecx, ecx
0x81f6:	xor	edx, edx
0x81f8:	mov	rsi, r12
0x81fb:	mov	rdi, r13
0x81fe:	call	0x80e0


0x8249:	mov	rax, qword ptr [rbx]
0x824c:	mov	rbp, qword ptr [rbp]
0x8250:	mov	rdx, rbx
0x8253:	test	rax, rax
0x8256:	jne	0x8238


0x8244:	cmp	rax, rdx
0x8247:	jne	0x8280


0x8258:	mov	rax, qword ptr [rsp]
0x825c:	mov	rcx, qword ptr [rsp + 8]
0x8261:	xor	rcx, qword ptr fs:[0x28]
0x826a:	jne	0x828c


0x8238:	mov	rbx, rax
0x823b:	mov	rax, qword ptr [rbx + 0x10]
0x823f:	test	rax, rax
0x8242:	je	0x8249


0x8280:	lea	r14, [rbp + 0x10]
0x8284:	mov	rbx, rax
0x8287:	jmp	0x81f0


0xebcf:	mov	rdx, qword ptr [rsp + 0x60]
0xebd4:	mov	rdi, qword ptr [rsp + 0x80]
0xebdc:	mov	ecx, eax
0xebde:	add	r12, qword ptr [rsp + 0x1d8]
0xebe6:	mov	rsi, r13
0xebe9:	call	0x8770


0xebee:	mov	rdi, qword ptr [rsp + 0xf0]
0xebf6:	mov	qword ptr [r12], rax
0xebfa:	call	0x1880


0xecc4:	mov	rdi, qword ptr [rsp + 0x80]
0xeccc:	mov	rdx, qword ptr [rsp + 0x60]
0xecd1:	mov	ecx, eax
0xecd3:	mov	rsi, r13
0xecd6:	call	0x8770


0xecdb:	mov	rdi, qword ptr [rsp + 0x1d8]
0xece3:	mov	qword ptr [r15], rax
0xece6:	cmp	qword ptr [rdi + rbp*8], 0
0xeceb:	jne	0xec12


0xecf1:	mov	eax, dword ptr [rsp + 0xd4]
0xecf8:	test	eax, eax
0xecfa:	je	0xec12


0xed00:	mov	rbx, qword ptr [rsp + 0xa0]
0xed08:	jmp	0xee10


0xee10:	test	rdi, rdi
0xee13:	mov	dword ptr [rsp + 0xd0], eax
0xee1a:	je	0xef00


0xec6a:	mov	ecx, dword ptr [rsp + 0x10]
0xec6e:	shr	ecx, 8
0xec71:	mov	edx, ecx
0xec73:	and	dx, 0x3ff
0xec78:	test	cl, 4
0xec7b:	jne	0xead8


0xec81:	and	ecx, 8
0xec84:	je	0xeae9


0xead8:	test	al, 1
0xeada:	je	0xec1a


0xeae9:	test	dl, 0x20
0xeaec:	je	0xeaf6


0xec8a:	test	al, 1
0xec8c:	je	0xeae9


0xeae0:	and	ecx, 8
0xeae3:	jne	0xec1a


0xeaf6:	and	edx, 0x80
0xeafc:	je	0xeb10


0xeaee:	test	al, 2
0xeaf0:	je	0xec1a


0xec92:	jmp	0xec1a


0xeafe:	test	al, 8
0xeb00:	je	0xec1a


0xed39:	test	al, 1
0xed3b:	je	0xedf0


0xedf0:	mov	r13, qword ptr [rbp + r13*8]
0xedf5:	jmp	0xe605


0xed41:	mov	r13, qword ptr [rbp + r13*8 + 0x800]
0xed49:	jmp	0xe605


0xe605:	cmp	qword ptr [rsp + 0x1d8], 0
0xe60e:	je	0xe624


0xee44:	test	al, 1
0xee46:	je	0xefb5


0xefb5:	test	eax, eax
0xefb7:	je	0xe4be


0xee4c:	mov	r14, qword ptr [rbx + 0x50]
0xee50:	test	r14, r14
0xee53:	jne	0xe4be


0xefbd:	mov	edx, eax
0xefbf:	and	edx, 6
0xefc2:	cmp	edx, 6
0xefc5:	je	0xf42f


0xee59:	mov	eax, dword ptr [rsp + 0xd0]
0xee60:	cmp	eax, 0xc
0xee63:	mov	dword ptr [rsp + 0x5c], eax
0xee67:	je	0xe990


0xf42f:	mov	r14, qword ptr [rbx + 0x60]
0xf433:	jmp	0xee50


0xefcb:	test	al, 2
0xefcd:	je	0xf480


0xee6d:	lea	rcx, [rip + 0x667c]
0xee74:	lea	rsi, [rip + 0x60a5]
0xee7b:	lea	rdi, [rip + 0x6152]
0xee82:	mov	edx, 0x435
0xee87:	call	0x1a00


0xee50:	test	r14, r14
0xee53:	jne	0xe4be


0xf480:	test	al, 4
0xf482:	je	0xe4be


0xefd3:	mov	r14, qword ptr [rbx + 0x58]
0xefd7:	jmp	0xee50


0xf488:	mov	rdx, qword ptr [r14 + 0x50]
0xf48c:	mov	rdi, qword ptr [rsp + 0x28]
0xf491:	mov	ecx, eax
0xf493:	mov	rsi, rbx
0xf496:	call	0x8770


0xf49b:	mov	r14, rax
0xf49e:	jmp	0xee50


0xd9f3:	mov	r8, qword ptr [rbx + 0xb8]
0xd9fa:	mov	rdx, qword ptr [rsp]
0xd9fe:	mov	ecx, eax
0xda00:	mov	rsi, r15
0xda03:	mov	rdi, r13
0xda06:	add	r8, rbp
0xda09:	mov	qword ptr [rsp + 8], r8
0xda0e:	call	0x8770


0xda13:	mov	r8, qword ptr [rsp + 8]
0xda18:	test	r14, r14
0xda1b:	mov	rbp, rax
0xda1e:	mov	qword ptr [r8], rax
0xda21:	je	0xd967


0xda27:	mov	rdi, qword ptr [rsp + 0x20]
0xda2c:	call	0x1880


0xd469:	mov	rsi, qword ptr [rsp + 0x60]
0xd46e:	mov	ecx, eax
0xd470:	mov	rax, qword ptr [r14 + 0xb8]
0xd477:	lea	r10, [rbx*8]
0xd47f:	mov	qword ptr [rsp + 0x10], 0
0xd488:	lea	r11, [rax + r10]
0xd48c:	mov	rax, qword ptr [rax + rsi]
0xd490:	mov	rdx, qword ptr [r11]
0xd493:	test	rax, rax
0xd496:	je	0xd4a1


0xd4a1:	test	rdx, rdx
0xd4a4:	je	0xd7c0


0xd498:	mov	rax, qword ptr [rax + 0x10]
0xd49c:	mov	qword ptr [rsp + 0x10], rax
0xd4a1:	test	rdx, rdx
0xd4a4:	je	0xd7c0


0xd7c0:	mov	rdx, qword ptr [rsp + 0x18]
0xd7c5:	mov	rdi, qword ptr [rsp + 0x78]
0xd7ca:	mov	rsi, rbp
0xd7cd:	mov	qword ptr [rsp + 0x28], r11
0xd7d2:	call	0x8770


0xd4aa:	mov	rsi, qword ptr [rdx + 0x50]
0xd4ae:	mov	rdi, qword ptr [rsp + 0x68]
0xd4b3:	mov	rdx, qword ptr [rsp + 0x18]
0xd4b8:	mov	qword ptr [rsp + 0x30], r10
0xd4bd:	mov	dword ptr [rsp + 0x28], ecx
0xd4c1:	call	0x8610


0xd4c6:	test	eax, eax
0xd4c8:	mov	dword ptr [rsp + 0x8c], eax
0xd4cf:	mov	ecx, dword ptr [rsp + 0x28]
0xd4d3:	mov	r10, qword ptr [rsp + 0x30]
0xd4d8:	jne	0xd868


0xd4de:	add	r10, qword ptr [r14 + 0xb8]
0xd4e5:	mov	rdx, qword ptr [rsp + 0x68]
0xd4ea:	mov	rsi, rbp
0xd4ed:	mov	rdi, qword ptr [rsp + 0x78]
0xd4f2:	mov	qword ptr [rsp + 0x28], r10
0xd4f7:	call	0x8770


0xd868:	mov	rdi, qword ptr [rsp + 0xa0]
0xd870:	call	0x1880


0xd4fc:	mov	r10, qword ptr [rsp + 0x28]
0xd501:	mov	rdi, qword ptr [rsp + 0xa0]
0xd509:	mov	qword ptr [r10], rax
0xd50c:	call	0x1880


0xd7d7:	mov	r11, qword ptr [rsp + 0x28]
0xd7dc:	mov	rdx, qword ptr [r14 + 0xb8]
0xd7e3:	mov	qword ptr [r11], rax
0xd7e6:	cmp	qword ptr [rdx + rbx*8], 0
0xd7eb:	jne	0xd523


0xd7f1:	mov	eax, dword ptr [rsp + 0x8c]
0xd7f8:	test	eax, eax
0xd7fa:	je	0xd523


0xd523:	cmp	qword ptr [rsp + 0x20], 0
0xd529:	jne	0xd548


0xd800:	jmp	0xd398


0xd52b:	mov	rax, qword ptr [rsp + 0x60]
0xd530:	mov	rbx, qword ptr [rsp + 0x10]
0xd535:	mov	rax, qword ptr [rdx + rax]
0xd539:	cmp	qword ptr [rax + 0x10], rbx
0xd53d:	jg	0xd808


0xd808:	mov	rax, qword ptr [rsp + 0x18]
0xd80d:	mov	rcx, qword ptr [rsp + 8]
0xd812:	mov	rdi, r14
0xd815:	lea	r8, [rax + 0x10]
0xd819:	lea	rbx, [rax + 8]
0xd81d:	mov	rdx, r8
0xd820:	mov	rsi, rbx
0xd823:	mov	qword ptr [rsp + 0x10], r8
0xd828:	call	0x90b0


0xd82d:	test	eax, eax
0xd82f:	mov	dword ptr [rsp + 0x8c], eax
0xd836:	jne	0xd398


0xd83c:	mov	r8, qword ptr [rsp + 0x10]
0xd841:	mov	rsi, rbx
0xd844:	mov	rdi, r14
0xd847:	mov	rdx, r8
0xd84a:	call	0xd020


0xd84f:	test	eax, eax
0xd851:	mov	dword ptr [rsp + 0x8c], eax
0xd858:	je	0xd548


0xd85e:	jmp	0xd398


0x97fa:	cmp	rbp, r12
0x97fd:	mov	dword ptr [rbx + 0x70], eax
0x9800:	mov	r8, qword ptr [rsp]
0x9804:	jne	0x9888


0x980a:	cmp	rbp, r8
0x980d:	jge	0x9888


0x9888:	mov	rax, qword ptr [rbx + 0x50]
0x988c:	mov	byte ptr [rbx + 0x8c], 0
0x9893:	add	rax, rbp
0x9896:	sub	rax, r15
0x9899:	mov	qword ptr [rbx + 0x58], rax
0x989d:	mov	rax, qword ptr [rbx + 0x60]
0x98a1:	add	rax, rbp
0x98a4:	sub	rax, r15
0x98a7:	test	r12, r12
0x98aa:	mov	qword ptr [rbx + 0x68], rax
0x98ae:	jle	0x98d3


0x980f:	cmp	qword ptr [r14 + r12*8], rbp
0x9813:	jne	0x9888


0x98d3:	cmp	r12, r8
0x98d6:	jge	0x9b08


0x98b0:	cmp	qword ptr [r14 + r12*8 - 8], rbp
0x98b5:	je	0x98cb


0x9815:	mov	rdi, qword ptr [rbx + 0x10]
0x9819:	sub	r8, rbp
0x981c:	lea	rdx, [r8*4]
0x9824:	lea	rsi, [rdi + rbp*4]
0x9828:	call	0x1b90


0x98dc:	mov	rax, qword ptr [rbx + 0x10]
0x98e0:	jmp	0x98f5


0x9b08:	jne	0x98fc


0x98cb:	test	r13, r13
0x98ce:	mov	r12, r13
0x98d1:	jne	0x98c0


0x98b7:	jmp	0x98d3


0x1b90:	jmp	qword ptr [rip + 0x2173c2]


0x98f5:	cmp	dword ptr [rax + r12*4], -1
0x98fa:	je	0x98e8


0x98fc:	mov	rdx, qword ptr [r14 + r12*8]
0x9900:	sub	rdx, rbp
0x9903:	cmp	rdx, 0
0x9907:	mov	qword ptr [rbx + 0x30], rdx
0x990b:	je	0x9941


0x98c0:	cmp	qword ptr [r14 + r13*8 - 8], rbp
0x98c5:	jne	0x98d3




0x98e8:	add	r12, 1
0x98ec:	cmp	r12, r8
0x98ef:	je	0x9b10


0x9941:	movzx	eax, byte ptr [rbx + 0x8b]
0x9948:	mov	qword ptr [rbx + 0x38], rdx
0x994c:	test	al, al
0x994e:	je	0x95ca


0x990d:	jle	0x992f


0x98c7:	sub	r13, 1
0x98cb:	test	r13, r13
0x98ce:	mov	r12, r13
0x98d1:	jne	0x98c0


0x9b10:	mov	qword ptr [rbx + 0x30], 0
0x9b18:	xor	edx, edx
0x9b1a:	jmp	0x9941


0x992f:	mov	rdi, qword ptr [rbx + 8]
0x9933:	mov	esi, 0xff
0x9938:	call	0x1a10


0x990f:	mov	rax, qword ptr [rbx + 0x10]
0x9913:	lea	rcx, [rax + rdx*4]
0x9917:	nop	word ptr [rax + rax]
0x9920:	mov	dword ptr [rax], 0xffffffff
0x9926:	add	rax, 4
0x992a:	cmp	rcx, rax
0x992d:	jne	0x9920


0x9920:	mov	dword ptr [rax], 0xffffffff
0x9926:	add	rax, 4
0x992a:	cmp	rcx, rax
0x992d:	jne	0x9920


0x9b38:	mov	dword ptr [rbx + 0x70], eax
0x9b3b:	jmp	0x977a


0x977a:	cmp	r12, 0
0x977e:	jne	0x9b9a


0x9784:	movzx	eax, byte ptr [rbx + 0x8b]
0x978b:	mov	qword ptr [rbx + 0x38], r12
0x978f:	jmp	0x994c


0x9b9a:	jle	0x9bb7


0x9bb7:	cmp	byte ptr [rbx + 0x8b], 0
0x9bbe:	jne	0x9c18


0x9b9c:	mov	rax, qword ptr [rbx + 0x10]
0x9ba0:	lea	rdx, [rax + r12*4]
0x9ba4:	nop	dword ptr [rax]
0x9ba8:	mov	dword ptr [rax], 0xffffffff
0x9bae:	add	rax, 4
0x9bb2:	cmp	rdx, rax
0x9bb5:	jne	0x9ba8


0x9bc0:	mov	qword ptr [rbx + 0x38], r12
0x9bc4:	jmp	0x95ca


0x9c18:	mov	rdi, qword ptr [rbx + 8]
0x9c1c:	mov	rdx, r12
0x9c1f:	mov	esi, 0xff
0x9c24:	call	0x1a10


0x9ba8:	mov	dword ptr [rax], 0xffffffff
0x9bae:	add	rax, 4
0x9bb2:	cmp	rdx, rax
0x9bb5:	jne	0x9ba8


0x959e:	mov	r8, qword ptr [rsp]
0x95a2:	mov	dword ptr [rbx + 0x70], eax
0x95a5:	sub	r8, rbp
0x95a8:	cmp	dword ptr [rbx + 0x90], 1
0x95af:	jg	0x9650


0x95b5:	cmp	byte ptr [rbx + 0x8b], 0
0x95bc:	jne	0x9960


0x9650:	mov	rdi, qword ptr [rbx + 0x10]
0x9654:	lea	rdx, [r8*4]
0x965c:	lea	rsi, [rdi + rbp*4]
0x9660:	call	0x1b90


0x95c2:	sub	qword ptr [rbx + 0x38], rbp
0x95c6:	mov	qword ptr [rbx + 0x30], r8
0x95ca:	add	qword ptr [rbx + 8], rbp
0x95ce:	mov	rax, qword ptr [rbx + 0x58]
0x95d2:	sub	qword ptr [rbx + 0x68], rbp
0x95d6:	mov	qword ptr [rbx + 0x28], r15
0x95da:	sub	rax, rbp
0x95dd:	cmp	dword ptr [rbx + 0x90], 1
0x95e4:	mov	qword ptr [rbx + 0x58], rax
0x95e8:	jle	0x9688


0x9960:	mov	rdi, qword ptr [rbx + 8]
0x9964:	mov	rdx, r8
0x9967:	lea	rsi, [rdi + rbp]
0x996b:	call	0x1b90


0xd12e:	mov	edx, ebp
0xd130:	shr	edx, 8
0xd133:	mov	ecx, edx
0xd135:	and	cx, 0x3ff
0xd13a:	test	dl, 4
0xd13d:	jne	0xd0a8


0xd143:	and	edx, 8
0xd146:	je	0xd0b1


0xd0a8:	test	al, 1
0xd0aa:	je	0xd0d0


0xd0b1:	test	cl, 0x20
0xd0b4:	je	0xd0ba


0xd14c:	test	al, 1
0xd14e:	je	0xd0b1


0xd0ac:	and	edx, 8
0xd0af:	jne	0xd0d0


0xd0ba:	and	ecx, 0x80
0xd0c0:	je	0xd160


0xd0b6:	test	al, 2
0xd0b8:	je	0xd0d0


0xd154:	jmp	0xd0d0


0xd0c6:	test	al, 8
0xd0c8:	jne	0xd160


0x9362:	mov	ecx, ebx
0x9364:	mov	edx, eax
0x9366:	and	cx, 0x3ff
0x936b:	test	bl, 4
0x936e:	je	0x93d8


0x93d8:	and	ebx, 8
0x93db:	je	0x937c


0x9370:	xor	eax, eax
0x9372:	test	dl, 1
0x9375:	je	0x939c


0x937c:	test	cl, 0x20
0x937f:	je	0x9388


0x93dd:	test	al, 1
0x93df:	je	0x937c


0x9377:	and	ebx, 8
0x937a:	jne	0x939c


0x9388:	shr	edx, 3
0x938b:	mov	eax, 1
0x9390:	and	edx, 1
0x9393:	and	ecx, 0x80
0x9399:	cmovne	eax, edx
0x939c:	pop	rbx
0x939d:	ret	


0x9381:	xor	eax, eax
0x9383:	test	dl, 2
0x9386:	je	0x939c


0x93e1:	xor	eax, eax
0x93e3:	pop	rbx
0x93e4:	ret	


0xda65:	lea	rdx, [rsp + 0x10]
0xda6a:	mov	ecx, eax
0xda6c:	mov	rsi, r15
0xda6f:	mov	rdi, r13
0xda72:	call	0x8770


0xda77:	mov	rbp, rax
0xda7a:	mov	qword ptr [r14], rax
0xda7d:	jmp	0xd967


0xbef5:	cmp	r12, rbp
0xbef8:	mov	r13d, eax
0xbefb:	je	0xc2d3


0xc2d3:	mov	edi, 8
0xc2d8:	mov	qword ptr [rsp + 0x90], 1
0xc2e4:	mov	qword ptr [rsp + 0x98], 1
0xc2f0:	call	0x1ac0


0xbf01:	mov	rbp, qword ptr [r14 + r12*8]
0xbf05:	test	rbp, rbp
0xbf08:	je	0xbf14


0xbf14:	pxor	xmm0, xmm0
0xbf18:	mov	qword ptr [rsp + 0xa0], 0
0xbf24:	movaps	xmmword ptr [rsp + 0x90], xmm0
0xbf2c:	cmp	r12, qword ptr [rsp + 0x40]
0xbf31:	jge	0xc258


0xbf0a:	test	byte ptr [rbp + 0x68], 0x40
0xbf0e:	jne	0xc430


0xbf37:	mov	ecx, dword ptr [r15 + 0xe0]
0xbf3e:	test	ecx, ecx
0xbf40:	js	0xc258


0xc258:	mov	rdi, qword ptr [rsp + 0xa0]
0xc260:	call	0x1880


0xc430:	lea	rbx, [rsp + 0x90]
0xc438:	lea	rsi, [rbp + 8]
0xc43c:	mov	rdi, rbx
0xc43f:	call	0x8580


0xbf46:	lea	rbx, [rsp + 0x90]
0xbf4e:	lea	rax, [r12*8 + 8]
0xbf56:	mov	qword ptr [rsp], r12
0xbf5a:	mov	qword ptr [rsp + 0x20], 0
0xbf63:	mov	qword ptr [rsp + 8], rbx
0xbf68:	lea	rbx, [rsp + 0xb0]
0xbf70:	mov	qword ptr [rsp + 0x10], rax
0xbf75:	mov	rax, qword ptr [r15 + 0xb8]
0xbf7c:	mov	qword ptr [rsp + 0x18], rbx
0xbf81:	lea	rbx, [rsp + 0x8c]
0xbf89:	mov	qword ptr [rsp + 0x58], rbx
0xbf8e:	mov	rcx, qword ptr [rsp + 0x10]
0xbf93:	mov	qword ptr [rsp + 0x98], 0
0xbf9f:	mov	rsi, qword ptr [rax + rcx]
0xbfa3:	test	rsi, rsi
0xbfa6:	je	0xc368


0xc368:	test	rbp, rbp
0xc36b:	jne	0xbfd2


0xbfac:	mov	rdi, qword ptr [rsp + 8]
0xbfb1:	add	rsi, 8
0xbfb5:	call	0x7940


0xc371:	mov	rax, qword ptr [rsp]
0xc375:	lea	rbx, [rax + 1]
0xc379:	mov	r12, rbx
0xc37c:	jmp	0xc1e4


0xbfd2:	cmp	qword ptr [rbp + 0x28], 0
0xbfd7:	mov	rax, qword ptr [rsp + 0x18]
0xbfdc:	pxor	xmm0, xmm0
0xbfe0:	mov	r12, qword ptr [r15 + 0x98]
0xbfe7:	mov	dword ptr [rsp + 0x8c], 0
0xbff2:	mov	qword ptr [rax + 0x10], 0
0xbffa:	movaps	xmmword ptr [rax], xmm0
0xbffd:	jle	0xc530


0xc1e4:	mov	edx, dword ptr [r15 + 0xa0]
0xc1eb:	mov	rsi, qword ptr [rsp]
0xc1ef:	mov	rdi, r15
0xc1f2:	call	0x9200


0xc530:	xor	edi, edi
0xc532:	jmp	0xc3e8


0xc003:	lea	rax, [r12 + 0xd8]
0xc00b:	xor	ebx, ebx
0xc00d:	mov	qword ptr [rsp + 0x28], rax
0xc012:	jmp	0xc059


0xc3e8:	call	0x1880


0xc059:	mov	rax, qword ptr [rbp + 0x30]
0xc05d:	mov	rdi, qword ptr [r12]
0xc061:	mov	r14, qword ptr [rax + rbx*8]
0xc065:	mov	r13, r14
0xc068:	shl	r13, 4
0xc06c:	lea	rsi, [rdi + r13]
0xc070:	test	byte ptr [rsi + 0xa], 0x10
0xc074:	je	0xc018


0xc018:	mov	rdx, qword ptr [rsp]
0xc01c:	mov	rdi, r15
0xc01f:	call	0x92f0


0xc076:	mov	r8, qword ptr [rsp]
0xc07a:	mov	rsi, qword ptr [rsp + 0x28]
0xc07f:	mov	rcx, r15
0xc082:	mov	rdx, r14
0xc085:	call	0xbbd0


0xc08a:	cmp	eax, 1
0xc08d:	jle	0xc350


0xc350:	test	eax, eax
0xc352:	jne	0xc028


0xc093:	cdqe	
0xc095:	add	rax, qword ptr [rsp]
0xc099:	mov	rdx, qword ptr [r12 + 0x18]
0xc09e:	lea	r13, [r14*8]
0xc0a6:	mov	rdx, qword ptr [rdx + r14*8]
0xc0aa:	mov	rcx, rax
0xc0ad:	mov	qword ptr [rsp + 0x38], rax
0xc0b2:	lea	r14, [rax*8]
0xc0ba:	mov	rax, qword ptr [r15 + 0xb8]
0xc0c1:	mov	rsi, qword ptr [rax + rcx*8]
0xc0c5:	mov	qword ptr [rsp + 0xb8], 0
0xc0d1:	test	rsi, rsi
0xc0d4:	je	0xc0f9


0xc358:	mov	rsi, qword ptr [r12]
0xc35c:	add	rsi, r13
0xc35f:	jmp	0xc018


0xc028:	lea	r13, [r14*8]
0xc030:	mov	rax, qword ptr [r12 + 0x18]
0xc035:	mov	rdi, qword ptr [rsp + 8]
0xc03a:	mov	rsi, qword ptr [rax + r13]
0xc03e:	call	0x5ee0


0xc0f9:	mov	rdi, qword ptr [rsp + 0x18]
0xc0fe:	mov	rsi, rdx
0xc101:	call	0x5ee0


0xc0d6:	mov	rdi, qword ptr [rsp + 0x18]
0xc0db:	add	rsi, 8
0xc0df:	mov	qword ptr [rsp + 0x50], rdx
0xc0e4:	call	0x7940


0xc106:	test	al, al
0xc108:	je	0xc388


0xc388:	mov	rdi, qword ptr [rsp + 0xc0]
0xc390:	call	0x1880


0xc10e:	add	r14, qword ptr [r15 + 0xb8]
0xc115:	mov	rdx, qword ptr [rsp + 0x18]
0xc11a:	mov	rsi, r12
0xc11d:	mov	rdi, qword ptr [rsp + 0x58]
0xc122:	call	0x8a30


0xc127:	mov	rdx, qword ptr [rsp + 0x38]
0xc12c:	mov	qword ptr [r14], rax
0xc12f:	mov	rax, qword ptr [r15 + 0xb8]
0xc136:	cmp	qword ptr [rax + rdx*8], 0
0xc13b:	jne	0xc030


0xc141:	mov	edx, dword ptr [rsp + 0x8c]
0xc148:	test	edx, edx
0xc14a:	je	0xc030


0xc030:	mov	rax, qword ptr [r12 + 0x18]
0xc035:	mov	rdi, qword ptr [rsp + 8]
0xc03a:	mov	rsi, qword ptr [rax + r13]
0xc03e:	call	0x5ee0


0xc150:	mov	rdi, qword ptr [rsp + 0xc0]
0xc158:	call	0x1880


0xc043:	test	al, al
0xc045:	je	0xc388


0xc04b:	add	rbx, 1
0xc04f:	cmp	rbx, qword ptr [rbp + 0x28]
0xc053:	jge	0xc3e0


0xc3e0:	mov	rdi, qword ptr [rsp + 0xc0]
0xc3e8:	call	0x1880


0xc024:	test	al, al
0xc026:	je	0xc04b


0xc0e9:	test	eax, eax
0xc0eb:	mov	dword ptr [rsp + 0x8c], eax
0xc0f2:	mov	rdx, qword ptr [rsp + 0x50]
0xc0f7:	jne	0xc150


0xbfba:	test	eax, eax
0xbfbc:	mov	dword ptr [rsp + 0x88], eax
0xbfc3:	jne	0xc3a0


0xbfc9:	test	rbp, rbp
0xbfcc:	je	0xc178


0xc3a0:	mov	rdi, qword ptr [rsp + 0xa0]
0xc3a8:	call	0x1880


0xc178:	mov	rax, qword ptr [rsp]
0xc17c:	cmp	qword ptr [rsp + 0x98], 0
0xc185:	lea	rbx, [rax + 1]
0xc189:	mov	r12, rbx
0xc18c:	je	0xc1e4


0xc18e:	mov	ecx, dword ptr [rsp + 0x110]
0xc195:	mov	rdx, qword ptr [rsp + 0x48]
0xc19a:	mov	rsi, qword ptr [rsp + 8]
0xc19f:	mov	rdi, qword ptr [rsp + 0x30]
0xc1a4:	call	0x7dd0


0xc444:	test	eax, eax
0xc446:	mov	dword ptr [rsp + 0x88], eax
0xc44d:	jne	0xc3b4


0xc453:	test	byte ptr [rbp + 0x68], 0x40
0xc457:	je	0xbf2c


0xbf2c:	cmp	r12, qword ptr [rsp + 0x40]
0xbf31:	jge	0xc258


0xc45d:	cmp	qword ptr [rsp + 0x98], 0
0xc466:	je	0xc492


0xc492:	mov	rsi, qword ptr [rsp + 0x30]
0xc497:	lea	rdi, [rsp + 0x88]
0xc49f:	mov	ecx, r13d
0xc4a2:	mov	rdx, rbx
0xc4a5:	call	0x8770


0xc468:	mov	r8d, dword ptr [rsp + 0x110]
0xc470:	mov	rcx, qword ptr [rsp + 0x48]
0xc475:	mov	rdx, r12
0xc478:	mov	rsi, rbx
0xc47b:	mov	rdi, r15
0xc47e:	call	0x8d10


0xc483:	test	eax, eax
0xc485:	mov	dword ptr [rsp + 0x88], eax
0xc48c:	jne	0xc3a0


0xc4aa:	test	rax, rax
0xc4ad:	mov	rbp, rax
0xc4b0:	je	0xc537


0xc537:	mov	esi, dword ptr [rsp + 0x88]
0xc53e:	test	esi, esi
0xc540:	je	0xc4b6


0xc4b6:	mov	rax, qword ptr [r15 + 0xb8]
0xc4bd:	mov	qword ptr [rax + r12*8], rbp
0xc4c1:	jmp	0xbf2c


0xc546:	jmp	0xc3a0


0xc1f7:	mov	rdx, qword ptr [rsp + 8]
0xc1fc:	mov	rsi, qword ptr [rsp + 0x30]
0xc201:	lea	rdi, [rsp + 0x88]
0xc209:	mov	ecx, eax
0xc20b:	call	0x8770


0xc210:	test	rax, rax
0xc213:	mov	rbp, rax
0xc216:	je	0xc400


0xc400:	mov	eax, dword ptr [rsp + 0x88]
0xc407:	test	eax, eax
0xc409:	jne	0xc3a0


0xc21c:	mov	rax, qword ptr [r15 + 0xb8]
0xc223:	mov	rdx, qword ptr [rsp + 0x10]
0xc228:	mov	qword ptr [rsp + 0x20], 0
0xc231:	mov	qword ptr [rax + rdx], rbp
0xc235:	cmp	qword ptr [rsp + 0x40], rbx
0xc23a:	jle	0xc258


0xc40b:	mov	rax, qword ptr [r15 + 0xb8]
0xc412:	mov	rdx, qword ptr [rsp + 0x10]
0xc417:	add	qword ptr [rsp + 0x20], 1
0xc41d:	mov	qword ptr [rax + rdx], 0
0xc425:	jmp	0xc235


0xc23c:	movsxd	rdx, dword ptr [r15 + 0xe0]
0xc243:	add	qword ptr [rsp + 0x10], 8
0xc249:	cmp	rdx, qword ptr [rsp + 0x20]
0xc24e:	mov	qword ptr [rsp], rbx
0xc252:	jge	0xbf8e


0xc235:	cmp	qword ptr [rsp + 0x40], rbx
0xc23a:	jle	0xc258


0xbf8e:	mov	rcx, qword ptr [rsp + 0x10]
0xbf93:	mov	qword ptr [rsp + 0x98], 0
0xbf9f:	mov	rsi, qword ptr [rax + rcx]
0xbfa3:	test	rsi, rsi
0xbfa6:	je	0xc368


0xc2d0:	mov	r13d, eax
0xc2d3:	mov	edi, 8
0xc2d8:	mov	qword ptr [rsp + 0x90], 1
0xc2e4:	mov	qword ptr [rsp + 0x98], 1
0xc2f0:	call	0x1ac0


0x941b:	test	rbx, rbx
0x941e:	jle	0x94c8


0x94c8:	pop	rbx
0x94c9:	xor	eax, eax
0x94cb:	pop	rbp
0x94cc:	pop	r12
0x94ce:	ret	


0x9424:	mov	rdx, qword ptr [rbp + 0x98]
0x942b:	mov	r11d, eax
0x942e:	mov	ebp, eax
0x9430:	and	eax, 1
0x9433:	mov	r9, qword ptr [r12]
0x9437:	xor	esi, esi
0x9439:	and	ebp, 8
0x943c:	and	r11d, 2
0x9440:	mov	r10d, eax
0x9443:	mov	r8, qword ptr [rdx]
0x9446:	jmp	0x9459


0x9459:	mov	rax, qword ptr [r9 + rsi*8]
0x945d:	mov	rdx, rax
0x9460:	shl	rdx, 4
0x9464:	add	rdx, r8
0x9467:	mov	ecx, dword ptr [rdx + 8]
0x946a:	shr	ecx, 8
0x946d:	mov	edi, ecx
0x946f:	and	di, 0x3ff
0x9474:	cmp	byte ptr [rdx + 8], 2
0x9478:	jne	0x9450


0x947a:	test	di, di
0x947d:	je	0x94a5


0x9450:	add	rsi, 1
0x9454:	cmp	rsi, rbx
0x9457:	je	0x94c8


0x94a5:	pop	rbx
0x94a6:	pop	rbp
0x94a7:	pop	r12
0x94a9:	ret	


0x947f:	test	cl, 4
0x9482:	je	0x94b0


0x94b0:	and	ecx, 8
0x94b3:	je	0x948e


0x9484:	test	r10d, r10d
0x9487:	je	0x9450


0x948e:	test	dil, 0x20
0x9492:	je	0x9499


0x94b5:	test	r10d, r10d
0x94b8:	jne	0x9450


0x9489:	and	ecx, 8
0x948c:	jne	0x9450


0x9499:	and	edi, 0x80
0x949f:	je	0x94a5


0x9494:	test	r11d, r11d
0x9497:	je	0x9450


0x94ba:	test	dil, 0x20
0x94be:	je	0x9499


0x94a1:	test	ebp, ebp
0x94a3:	je	0x9450


0x94c0:	jmp	0x9494


0xea49:	test	rax, rax
0xea4c:	mov	r8, qword ptr [rsp + 0x10]
0xea51:	je	0xe599


0xea57:	jmp	0xe576


0xf011:	mov	qword ptr [rsp + 0x1d0], rax
0xf019:	jmp	0xe738


0xe738:	mov	r13, qword ptr [rsp + 0x1d0]
0xe740:	movabs	rsi, 0x1ffffffffffffffe
0xe74a:	cmp	qword ptr [rsp + 0x20], rsi
0xe74f:	mov	r15, qword ptr [rsp + 0x1b8]
0xe757:	ja	0xf3bb


0xe75d:	mov	rax, qword ptr [rsp + 0x20]
0xe762:	add	rax, 1
0xe766:	lea	rbx, [rax*8]
0xe76e:	mov	qword ptr [rsp + 8], rax
0xe773:	mov	rdi, rbx
0xe776:	call	0x1ac0


0xf3bb:	mov	rdi, rbx
0xf3be:	mov	dword ptr [rsp + 0x5c], 0xc
0xf3c6:	jmp	0xe998


0xe70c:	mov	r13, rax
0xe70f:	mov	qword ptr [rsp + 0x1d0], rax
0xe717:	mov	rax, qword ptr [rsp + 0x38]
0xe71c:	test	byte ptr [rax + 0xb0], 1
0xe723:	jne	0xe740


0xe725:	mov	rax, qword ptr [rsp + 0x38]
0xe72a:	cmp	qword ptr [rax + 0x98], 0
0xe732:	je	0xf0cc


0xe740:	movabs	rsi, 0x1ffffffffffffffe
0xe74a:	cmp	qword ptr [rsp + 0x20], rsi
0xe74f:	mov	r15, qword ptr [rsp + 0x1b8]
0xe757:	ja	0xf3bb


0xf41c:	test	rax, rax
0xf41f:	mov	qword ptr [rsp + 0x30], rax
0xf424:	je	0xe50d


0xf42a:	jmp	0xf397


0xd6b0:	pop	rdx
0xd6b1:	cmp	eax, 1
0xd6b4:	pop	rcx
0xd6b5:	mov	r11, qword ptr [rsp + 0x10]
0xd6ba:	je	0xd72f


0xd6bc:	test	eax, eax
0xd6be:	jne	0xd398


0xd6c4:	mov	rax, qword ptr [r12 + 0x20]
0xd6c9:	cmp	rax, qword ptr [r12 + 0x18]
0xd6ce:	je	0xd8a8


0xd8a8:	lea	rdx, [rax + rax + 1]
0xd8ad:	mov	rdi, qword ptr [r12 + 0x28]
0xd8b2:	lea	rsi, [rdx*8]
0xd8ba:	mov	qword ptr [rsp + 0x10], rdx
0xd8bf:	call	0x1b30


0xd6d4:	mov	esi, 0x28
0xd6d9:	mov	edi, 1
0xd6de:	call	0x1a70


0xceb5:	test	eax, eax
0xceb7:	pop	rdx
0xceb8:	pop	rcx
0xceb9:	je	0xced0


0xced0:	mov	rax, qword ptr [rbx + 0xc8]
0xced7:	mov	rdx, qword ptr [rbx + 0xd0]
0xcede:	mov	r15, qword ptr [rbp + 8]
0xcee2:	mov	rcx, qword ptr [r13]
0xcee6:	mov	rdi, qword ptr [rbx + 0xd8]
0xceed:	cmp	rax, rdx
0xcef0:	mov	rsi, r15
0xcef3:	jge	0xcf90


0xcebb:	add	rsp, 0x18
0xcebf:	pop	rbx
0xcec0:	pop	rbp
0xcec1:	pop	r12
0xcec3:	pop	r13
0xcec5:	pop	r14
0xcec7:	pop	r15
0xcec9:	ret	


0xcef9:	lea	rdx, [rax + rax*4]
0xcefd:	shl	rdx, 3
0xcf01:	test	rax, rax
0xcf04:	jle	0xcf11


0xcf90:	lea	rsi, [rdx + rdx*4]
0xcf94:	mov	qword ptr [rsp + 8], rcx
0xcf99:	shl	rsi, 4
0xcf9d:	call	0x1b30


0xcf11:	add	rdi, rdx
0xcf14:	xor	edx, edx
0xcf16:	cmp	r15, rcx
0xcf19:	sete	dl
0xcf1c:	add	rax, 1
0xcf20:	mov	qword ptr [rdi], r14
0xcf23:	neg	edx
0xcf25:	mov	qword ptr [rdi + 8], r12
0xcf29:	mov	qword ptr [rdi + 0x10], rcx
0xcf2d:	mov	word ptr [rdi + 0x22], dx
0xcf31:	mov	qword ptr [rdi + 0x18], r15
0xcf35:	mov	qword ptr [rbx + 0xc8], rax
0xcf3c:	mov	byte ptr [rdi + 0x20], 0
0xcf40:	mov	rax, r15
0xcf43:	movsxd	rdx, dword ptr [rbx + 0xe0]
0xcf4a:	sub	rax, rcx
0xcf4d:	cmp	rdx, rax
0xcf50:	jge	0xcf5c


0xcf06:	lea	r8, [rdi + rdx - 0x28]
0xcf0b:	cmp	r12, qword ptr [r8 + 8]
0xcf0f:	je	0xcf80


0xcf52:	sub	r15d, ecx
0xcf55:	mov	dword ptr [rbx + 0xe0], r15d
0xcf5c:	add	rsi, r12
0xcf5f:	sub	rsi, qword ptr [r13]
0xcf63:	add	rsp, 0x18
0xcf67:	mov	rdi, rbx
0xcf6a:	pop	rbx
0xcf6b:	pop	rbp
0xcf6c:	pop	r12
0xcf6e:	pop	r13
0xcf70:	pop	r14
0xcf72:	pop	r15
0xcf74:	jmp	0x6ab0


0xcf5c:	add	rsi, r12
0xcf5f:	sub	rsi, qword ptr [r13]
0xcf63:	add	rsp, 0x18
0xcf67:	mov	rdi, rbx
0xcf6a:	pop	rbx
0xcf6b:	pop	rbp
0xcf6c:	pop	r12
0xcf6e:	pop	r13
0xcf70:	pop	r14
0xcf72:	pop	r15
0xcf74:	jmp	0x6ab0


0xcf80:	mov	byte ptr [r8 + 0x20], 1
0xcf85:	jmp	0xcf11


0xd2eb:	cmp	eax, 1
0xd2ee:	mov	r8, qword ptr [r14 + 8]
0xd2f2:	ja	0xd398


0xd2f8:	add	rbp, 1
0xd2fc:	cmp	rbp, qword ptr [r13 + 0x20]
0xd300:	mov	r11, r15
0xd303:	mov	rbx, r12
0xd306:	jge	0xd5b8


0xd5b8:	mov	rbx, r13
0xd5bb:	mov	r13, r8
0xd5be:	lea	r11, [r15 + 1]
0xd5c2:	cmp	qword ptr [rsp + 8], r11
0xd5c7:	jl	0xd259


0x1074e:	cdqe	
0x10750:	add	qword ptr [r14 + 0x48], rax
0x10754:	movzx	eax, byte ptr [r13 + 8]
0x10759:	movzx	edx, byte ptr [r13]
0x1075e:	cmp	al, 2
0x10760:	je	0x107b0


0x107b0:	mov	rbx, -2
0x107b7:	mov	rax, rbx
0x107ba:	pop	rbx
0x107bb:	pop	rbp
0x107bc:	pop	r12
0x107be:	pop	r13
0x107c0:	pop	r14
0x107c2:	ret	


0x10762:	cmp	al, 0x18
0x10764:	je	0x107b7


0x107b7:	mov	rax, rbx
0x107ba:	pop	rbx
0x107bb:	pop	rbp
0x107bc:	pop	r12
0x107be:	pop	r13
0x107c0:	pop	r14
0x107c2:	ret	


0x10766:	cmp	dl, 0x2c
0x10769:	je	0x107b7


0x1076b:	cmp	al, 1
0x1076d:	je	0x10778


0x10778:	lea	eax, [rdx - 0x30]
0x1077b:	cmp	al, 9
0x1077d:	ja	0x1076f


0x1076f:	mov	rbx, r12
0x10772:	jmp	0x10740


0x1077f:	cmp	rbx, -2
0x10783:	je	0x1076f


0x10740:	mov	rdx, rbp
0x10743:	mov	rsi, r14
0x10746:	mov	rdi, r13
0x10749:	call	0x10020


0x10785:	cmp	rbx, -1
0x10789:	je	0x107c8


0x107c8:	movzx	ebx, dl
0x107cb:	sub	ebx, 0x30
0x107ce:	movsxd	rbx, ebx
0x107d1:	jmp	0x10740


0x1078b:	lea	rax, [rbx + rbx*4]
0x1078f:	lea	rbx, [rdx + rax*2]
0x10793:	mov	eax, 0x8030
0x10798:	cmp	rbx, 0x8030
0x1079f:	cmovg	rbx, rax
0x107a3:	sub	rbx, 0x30
0x107a7:	jmp	0x10740


0x11cfe:	mov	edx, dword ptr [rbx]
0x11d00:	mov	r14, rax
0x11d03:	test	edx, edx
0x11d05:	je	0x11d10


0x11d10:	lea	rax, [rsp + 0x20]
0x11d15:	mov	qword ptr [rsp + 0x18], rax
0x11d1a:	nop	word ptr [rax + rax]
0x11d20:	movzx	eax, byte ptr [rbp + 8]
0x11d24:	mov	edx, eax
0x11d26:	and	edx, 0xfffffff7
0x11d29:	cmp	dl, 2
0x11d2c:	je	0x11dc0


0x11d07:	test	rax, rax
0x11d0a:	je	0x11e0a


0x11dc0:	mov	rcx, qword ptr [rsp + 0x38]
0x11dc5:	xor	rcx, qword ptr fs:[0x28]
0x11dce:	mov	rax, r14
0x11dd1:	jne	0x11e3d


0x11d32:	cmp	al, 9
0x11d34:	jne	0x11d3f


0x11e0a:	xor	r14d, r14d
0x11e0d:	jmp	0x11dc0


0x11dd3:	add	rsp, 0x48
0x11dd7:	pop	rbx
0x11dd8:	pop	rbp
0x11dd9:	pop	r12
0x11ddb:	pop	r13
0x11ddd:	pop	r14
0x11ddf:	pop	r15
0x11de1:	ret	


0x11e3d:	call	0x1990


0x11d36:	test	r12, r12
0x11d39:	jne	0x11dc0


0x11d3f:	mov	rdi, qword ptr [rsp]
0x11d43:	mov	r9, rbx
0x11d46:	mov	r8, r12
0x11d49:	mov	rcx, r15
0x11d4c:	mov	rdx, rbp
0x11d4f:	mov	rsi, r13
0x11d52:	call	0x107e0


0x11d57:	mov	r9, rax
0x11d5a:	mov	eax, dword ptr [rbx]
0x11d5c:	test	eax, eax
0x11d5e:	je	0x11d69


0x11d69:	test	r14, r14
0x11d6c:	je	0x11de8


0x11d60:	test	r9, r9
0x11d63:	je	0x11df4


0x11de8:	test	r14, r14
0x11deb:	cmove	r14, r9
0x11def:	jmp	0x11d20


0x11d6e:	test	r9, r9
0x11d71:	je	0x11de8


0x11df4:	test	r14, r14
0x11df7:	je	0x11e0a


0x11d20:	movzx	eax, byte ptr [rbp + 8]
0x11d24:	mov	edx, eax
0x11d26:	and	edx, 0xfffffff7
0x11d29:	cmp	dl, 2
0x11d2c:	je	0x11dc0


0x11d73:	mov	rax, qword ptr [rsp + 0x10]
0x11d78:	mov	r8, qword ptr [rsp + 0x18]
0x11d7d:	mov	rcx, r9
0x11d80:	mov	rdx, r14
0x11d83:	mov	qword ptr [rsp + 8], r9
0x11d88:	mov	byte ptr [rsp + 0x28], 0x10
0x11d8d:	lea	rsi, [rax + 0x80]
0x11d94:	lea	rdi, [rax + 0x70]
0x11d98:	call	0x80e0


0x11df9:	lea	rsi, [rip - 0xb260]
0x11e00:	xor	edx, edx
0x11e02:	mov	rdi, r14
0x11e05:	call	0x5d00


0x11d9d:	test	rax, rax
0x11da0:	mov	r9, qword ptr [rsp + 8]
0x11da5:	je	0x11e10


0x11e10:	lea	rsi, [rip - 0xb277]
0x11e17:	mov	rdi, r9
0x11e1a:	xor	edx, edx
0x11e1c:	call	0x5d00


0x11da7:	mov	r14, rax
0x11daa:	movzx	eax, byte ptr [rbp + 8]
0x11dae:	mov	edx, eax
0x11db0:	and	edx, 0xfffffff7
0x11db3:	cmp	dl, 2
0x11db6:	jne	0x11d32


0x11e98:	mov	edx, dword ptr [r13]
0x11e9c:	mov	r15, rax
0x11e9f:	test	edx, edx
0x11ea1:	je	0x11eac


0x11eac:	lea	rax, [rsp + 0x30]
0x11eb1:	mov	qword ptr [rsp + 8], rax
0x11eb6:	jmp	0x11f44


0x11ea3:	test	rax, rax
0x11ea6:	je	0x11f92


0x11f44:	cmp	byte ptr [rbp + 8], 0xa
0x11f48:	jne	0x11f98


0x11f92:	xor	r15d, r15d
0x11f95:	nop	dword ptr [rax]
0x11f98:	mov	rcx, qword ptr [rsp + 0x48]
0x11f9d:	xor	rcx, qword ptr fs:[0x28]
0x11fa6:	mov	rax, r15
0x11fa9:	jne	0x11fca


0x11f4a:	mov	rdx, r14
0x11f4d:	mov	rsi, r12
0x11f50:	mov	rdi, rbp
0x11f53:	or	rdx, 0x800000
0x11f5a:	call	0x10020


0x11f98:	mov	rcx, qword ptr [rsp + 0x48]
0x11f9d:	xor	rcx, qword ptr fs:[0x28]
0x11fa6:	mov	rax, r15
0x11fa9:	jne	0x11fca


0x11fab:	add	rsp, 0x58
0x11faf:	pop	rbx
0x11fb0:	pop	rbp
0x11fb1:	pop	r12
0x11fb3:	pop	r13
0x11fb5:	pop	r14
0x11fb7:	pop	r15
0x11fb9:	ret	


0x11fca:	call	0x1990


0x11f5f:	cdqe	
0x11f61:	add	qword ptr [r12 + 0x48], rax
0x11f66:	movzx	eax, byte ptr [rbp + 8]
0x11f6a:	mov	edx, eax
0x11f6c:	and	edx, 0xfffffff7
0x11f6f:	cmp	dl, 2
0x11f72:	jne	0x11ec0


0x11f78:	xor	ecx, ecx
0x11f7a:	jmp	0x11f1f


0x11ec0:	cmp	al, 9
0x11ec2:	jne	0x11ed0


0x11f1f:	mov	r8, qword ptr [rsp + 8]
0x11f24:	lea	rsi, [rbx + 0x80]
0x11f2b:	lea	rdi, [rbx + 0x70]
0x11f2f:	mov	rdx, r15
0x11f32:	mov	byte ptr [rsp + 0x38], 0xa
0x11f37:	call	0x80e0


0x11ec4:	cmp	qword ptr [rsp + 0x10], 0
0x11eca:	jne	0x11f78


0x11ed0:	mov	rax, qword ptr [rbx + 0xa8]
0x11ed7:	mov	r8, qword ptr [rsp + 0x10]
0x11edc:	mov	rcx, r14
0x11edf:	mov	rsi, qword ptr [rsp + 0x28]
0x11ee4:	mov	r9, r13
0x11ee7:	mov	rdx, rbp
0x11eea:	mov	rdi, r12
0x11eed:	mov	qword ptr [rsp + 0x18], rax
0x11ef2:	mov	rax, qword ptr [rsp + 0x20]
0x11ef7:	mov	qword ptr [rbx + 0xa8], rax
0x11efe:	call	0x11cc0


0x11f03:	mov	rcx, rax
0x11f06:	mov	eax, dword ptr [r13]
0x11f0a:	test	eax, eax
0x11f0c:	je	0x11f13


0x11f13:	mov	rax, qword ptr [rsp + 0x18]
0x11f18:	or	qword ptr [rbx + 0xa8], rax
0x11f1f:	mov	r8, qword ptr [rsp + 8]
0x11f24:	lea	rsi, [rbx + 0x80]
0x11f2b:	lea	rdi, [rbx + 0x70]
0x11f2f:	mov	rdx, r15
0x11f32:	mov	byte ptr [rsp + 0x38], 0xa
0x11f37:	call	0x80e0


0x11f0e:	test	rcx, rcx
0x11f11:	je	0x11f7c


0x11f7c:	test	r15, r15
0x11f7f:	je	0x11f92


0x11f81:	lea	rsi, [rip - 0xb3e8]
0x11f88:	xor	edx, edx
0x11f8a:	mov	rdi, r15
0x11f8d:	call	0x5d00


0x11f3c:	test	rax, rax
0x11f3f:	mov	r15, rax
0x11f42:	je	0x11fc0


0x11fc0:	mov	dword ptr [r13], 0xc
0x11fc8:	jmp	0x11f98


0x1372d:	mov	rdi, r13
0x13730:	mov	rbx, rax
0x13733:	call	0x1880


0x13a63:	add	rsp, 0x18
0x13a67:	ret	


0x13a80:	add	rsp, 0x18
0x13a84:	ret	


0x13aa5:	add	rsp, 0x28
0x13aa9:	ret	


0x13ac7:	add	rsp, 0x28
0x13acb:	ret	


0x140d1:	test	rbp, rbp
0x140d4:	je	0x140f6


0x140f6:	add	rsp, 8
0x140fa:	pop	rbx
0x140fb:	pop	rbp
0x140fc:	pop	r12
0x140fe:	pop	r13
0x14100:	pop	r14
0x14102:	pop	r15
0x14104:	ret	


0x140d6:	xor	ebx, ebx
0x140d8:	nop	dword ptr [rax + rax]
0x140e0:	mov	rdx, r15
0x140e3:	mov	rsi, r14
0x140e6:	mov	edi, r13d
0x140e9:	call	qword ptr [r12 + rbx*8]


0x9970:	movzx	eax, byte ptr [rbx + 0x8b]
0x9977:	sub	qword ptr [rbx + 0x30], rbp
0x997b:	sub	qword ptr [rbx + 0x38], rbp
0x997f:	jmp	0x994c


0x9665:	mov	r8, qword ptr [rbx + 0x30]
0x9669:	sub	r8, rbp
0x966c:	jmp	0x95b5


0x982d:	mov	rdi, qword ptr [rbx + 8]
0x9831:	mov	rdx, qword ptr [rbx + 0x30]
0x9835:	lea	rsi, [rdi + rbp]
0x9839:	sub	rdx, rbp
0x983c:	call	0x1b90


0x9841:	mov	rax, qword ptr [rbx + 0x30]
0x9845:	sub	qword ptr [rbx + 0x38], rbp
0x9849:	sub	rax, rbp
0x984c:	test	rax, rax
0x984f:	mov	qword ptr [rbx + 0x30], rax
0x9853:	jle	0x9878


0x9855:	mov	rcx, qword ptr [rbx + 0x18]
0x9859:	xor	eax, eax
0x985b:	lea	rsi, [rcx + rbp*8]
0x985f:	nop	
0x9860:	mov	rdx, qword ptr [rsi + rax*8]
0x9864:	sub	rdx, rbp
0x9867:	mov	qword ptr [rcx + rax*8], rdx
0x986b:	add	rax, 1
0x986f:	cmp	qword ptr [rbx + 0x30], rax
0x9873:	jg	0x9860


0x9860:	mov	rdx, qword ptr [rsi + rax*8]
0x9864:	sub	rdx, rbp
0x9867:	mov	qword ptr [rcx + rax*8], rdx
0x986b:	add	rax, 1
0x986f:	cmp	qword ptr [rbx + 0x30], rax
0x9873:	jg	0x9860


0xbcae:	test	eax, eax
0xbcb0:	je	0xbc90


0xbc90:	add	rbx, 1
0xbc94:	cmp	rbx, qword ptr [r13 + 0x48]
0xbc98:	jge	0xbd58


0xbd58:	mov	rsi, qword ptr [r13 + 0x40]
0xbd5c:	test	rsi, rsi
0xbd5f:	jle	0xbd41


0xd2bc:	test	eax, eax
0xd2be:	mov	r8, qword ptr [rsp + 0x10]
0xd2c3:	mov	r11, qword ptr [rsp + 0x18]
0xd2c8:	mov	r9, qword ptr [rsp + 0x20]
0xd2cd:	jne	0xd798


0xb95f:	cmp	rax, -1
0xb963:	je	0xb98f


0xb98f:	mov	rax, qword ptr [rsp + 0x30]
0xb994:	test	byte ptr [rax + 0x1a], 0x40
0xb998:	je	0xb92f


0xb965:	movzx	edx, byte ptr [rsp + 0x60]
0xb96a:	test	r13d, r13d
0xb96d:	mov	byte ptr [r12 + rdx], 1
0xb972:	mov	qword ptr [rsp + 0x10], rdx
0xb977:	je	0xb98f


0xb92f:	add	rbp, 1
0xb933:	cmp	rbp, qword ptr [r15 + 0x28]
0xb937:	jge	0xb9e4


0xb99a:	mov	rax, qword ptr [rsp + 8]
0xb99f:	cmp	dword ptr [rax + 0xb4], 1
0xb9a6:	jle	0xb92f


0xb979:	call	0x1c60


0xb9e4:	mov	ebx, r13d
0xb9e7:	mov	rbp, r12
0xb9ea:	jmp	0xb767


0xb9a8:	mov	rax, qword ptr [r15]
0xb9ab:	mov	edi, dword ptr [rax + rbx]
0xb9ae:	call	0x1bd0


0x1bd0:	jmp	qword ptr [rip + 0x2173a2]




0x6572:	test	eax, eax
0x6574:	jne	0x6668


0x6668:	call	0x1860


0xb97e:	mov	rdx, qword ptr [rsp + 0x10]
0xb983:	mov	rax, qword ptr [rax]
0xb986:	movsxd	rax, dword ptr [rax + rdx*4]
0xb98a:	mov	byte ptr [r12 + rax], 1
0xb98f:	mov	rax, qword ptr [rsp + 0x30]
0xb994:	test	byte ptr [rax + 0x1a], 0x40
0xb998:	je	0xb92f


0xba75:	mov	rax, qword ptr [rax]
0xba78:	lea	rdx, [r12 + r14]
0xba7c:	movsxd	rax, dword ptr [rax + rdx*4]
0xba80:	mov	byte ptr [rbp + rax], 1
0xba85:	add	r14, 1
0xba89:	cmp	r14, 0x40
0xba8d:	jne	0xba60


0xb7c4:	mov	rax, qword ptr [rax]
0xb7c7:	movsxd	rax, dword ptr [rax + r13*4]
0xb7cb:	mov	byte ptr [rbp + rax], 1
0xb7d0:	mov	rax, qword ptr [rsp + 0x30]
0xb7d5:	test	byte ptr [rax + 0x1a], 0x40
0xb7d9:	je	0xb767


0x101dd:	mov	r8d, dword ptr [rsp]
0x101e1:	test	eax, eax
0x101e3:	setne	al
0x101e6:	cmp	r8d, 0x5f
0x101ea:	sete	dl
0x101ed:	lea	ecx, [r12 - 0x27]
0x101f2:	or	eax, edx
0x101f4:	shl	eax, 6
0x101f7:	or	r13d, eax
0x101fa:	cmp	cl, 0x56
0x101fd:	mov	byte ptr [rbp + 0xa], r13b
0x10201:	ja	0x10605


0x10207:	lea	rdx, [rip + 0x5036]
0x1020e:	movzx	ecx, cl
0x10211:	movsxd	rax, dword ptr [rdx + rcx*4]
0x10215:	add	rax, rdx
0x10218:	jmp	rax


0x10605:	mov	eax, 2
0x1060a:	jmp	0x100e4


0x92cf:	test	eax, eax
0x92d1:	jne	0x92dc


0x92d3:	cmp	ebx, 0x5f
0x92d6:	jne	0x924b


0x92dc:	mov	eax, 1
0x92e1:	jmp	0x9252


0x100b5:	mov	ecx, dword ptr [rsp]
0x100b8:	test	eax, eax
0x100ba:	setne	al
0x100bd:	cmp	ecx, 0x5f
0x100c0:	sete	cl
0x100c3:	or	eax, ecx
0x100c5:	shl	eax, 6
0x100c8:	or	r13d, eax
0x100cb:	mov	byte ptr [rbp + 0xa], r13b
0x100cf:	mov	rdx, qword ptr [rsp + 8]
0x100d4:	jmp	0x1014c


0x1014c:	sub	r12d, 0xa
0x10150:	cmp	r12b, 0x73
0x10154:	ja	0x1028c


0x1015a:	lea	rcx, [rip + 0x4f13]
0x10161:	movzx	r12d, r12b
0x10165:	movsxd	rax, dword ptr [rcx + r12*4]
0x10169:	add	rax, rcx
0x1016c:	jmp	rax


0x1028c:	mov	eax, 1
0x10291:	jmp	0x100e4


0x9c29:	mov	r12, qword ptr [rbx + 0x30]
0x9c2d:	jmp	0x9784


0x993d:	mov	rdx, qword ptr [rbx + 0x30]
0x9941:	movzx	eax, byte ptr [rbx + 0x8b]
0x9948:	mov	qword ptr [rbx + 0x38], rdx
0x994c:	test	al, al
0x994e:	je	0x95ca


0x6b2d:	mov	qword ptr [rbx + 0xc0], rbp
0x6b34:	jmp	0x6ae4


0x10615:	mov	rsi, qword ptr [rax]
0x10618:	movzx	edx, r12b
0x1061c:	movzx	eax, word ptr [rsi + rdx*2]
0x10620:	shr	ax, 3
0x10624:	and	eax, 1
0x10627:	cmp	r12b, 0x5f
0x1062b:	jmp	0x101ea


0x101ea:	sete	dl
0x101ed:	lea	ecx, [r12 - 0x27]
0x101f2:	or	eax, edx
0x101f4:	shl	eax, 6
0x101f7:	or	r13d, eax
0x101fa:	cmp	cl, 0x56
0x101fd:	mov	byte ptr [rbp + 0xa], r13b
0x10201:	ja	0x10605


0x10123:	mov	rsi, qword ptr [rax]
0x10126:	movzx	ecx, r12b
0x1012a:	movzx	eax, word ptr [rsi + rcx*2]
0x1012e:	shr	ax, 3
0x10132:	and	eax, 1
0x10135:	cmp	r12b, 0x5f
0x10139:	sete	cl
0x1013c:	or	eax, ecx
0x1013e:	shl	eax, 6
0x10141:	or	r13d, eax
0x10144:	mov	byte ptr [rbp + 0xa], r13b
0x10148:	mov	rdx, qword ptr [rsp]
0x1014c:	sub	r12d, 0xa
0x10150:	cmp	r12b, 0x73
0x10154:	ja	0x1028c


0xac8c:	lea	rdi, [rip + 0xa310]
0xac93:	mov	qword ptr [r13], rax
0xac97:	mov	ecx, 6
0xac9c:	mov	rsi, r12
0xac9f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xac9f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xaca1:	seta	al
0xaca4:	sbb	al, 0
0xaca6:	test	al, al
0xaca8:	je	0xad18


0xad18:	call	0x1c70


0xacaa:	lea	rdi, [rip + 0xa2f8]
0xacb1:	mov	ecx, 6
0xacb6:	mov	rsi, r12
0xacb9:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xacb9:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xacbb:	seta	al
0xacbe:	sbb	al, 0
0xacc0:	test	al, al
0xacc2:	jne	0xadc8


0xacc8:	call	0x1c70


0xadc8:	lea	rdi, [rip + 0xa1ce]
0xadcf:	mov	ecx, 6
0xadd4:	mov	rsi, r12
0xadd7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xadd7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xadd9:	seta	al
0xaddc:	sbb	al, 0
0xadde:	test	al, al
0xade0:	je	0xae4a


0xae4a:	call	0x1c70


0xade2:	lea	rdi, [rip + 0xa1c6]
0xade9:	mov	ecx, 6
0xadee:	mov	rsi, r12
0xadf1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xadf1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xadf3:	seta	al
0xadf6:	sbb	al, 0
0xadf8:	test	al, al
0xadfa:	jne	0xae92


0xae00:	call	0x1c70


0xae92:	lea	rdi, [rip + 0xa0f8]
0xae99:	mov	ecx, 6
0xae9e:	mov	rsi, r12
0xaea1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xaea1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xaea3:	seta	al
0xaea6:	sbb	al, 0
0xaea8:	test	al, al
0xaeaa:	je	0xaf53


0xaf53:	call	0x1c70


0xaeb0:	lea	rdi, [rip + 0xa117]
0xaeb7:	mov	ecx, 6
0xaebc:	mov	rsi, r12
0xaebf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xaebf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xaec1:	seta	al
0xaec4:	sbb	al, 0
0xaec6:	test	al, al
0xaec8:	jne	0xafd3


0xaece:	call	0x1c70


0xafd3:	lea	rdi, [rip + 0x9fdb]
0xafda:	mov	ecx, 6
0xafdf:	mov	rsi, r12
0xafe2:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xafe2:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xafe4:	seta	al
0xafe7:	sbb	al, 0
0xafe9:	test	al, al
0xafeb:	jne	0xb06c


0xafed:	call	0x1c70


0xb06c:	lea	rdi, [rip + 0x9f24]
0xb073:	mov	ecx, 6
0xb078:	mov	rsi, r12
0xb07b:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb07b:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb07d:	seta	al
0xb080:	sbb	al, 0
0xb082:	test	al, al
0xb084:	jne	0xb0d2


0xb086:	call	0x1c70


0xb0d2:	lea	rdi, [rip + 0x9ee2]
0xb0d9:	mov	ecx, 6
0xb0de:	mov	rsi, r12
0xb0e1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb0e1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb0e3:	seta	al
0xb0e6:	sbb	al, 0
0xb0e8:	test	al, al
0xb0ea:	jne	0xb1de


0xb0f0:	call	0x1c70


0xb1de:	lea	rsi, [rip + 0x9ddc]
0xb1e5:	mov	rdi, r12
0xb1e8:	call	0x1a80


0x1a80:	jmp	qword ptr [rip + 0x21744a]




0xb0f5:	xor	ecx, ecx
0xb0f7:	test	rbp, rbp
0xb0fa:	mov	rdx, qword ptr [rax]
0xb0fd:	mov	esi, 1
0xb102:	jne	0xb1a4


0xb108:	test	byte ptr [rdx + rcx*2], 1
0xb10c:	je	0xb11f


0xb1a4:	xor	eax, eax
0xb1a6:	mov	edi, 1
0xb1ab:	test	byte ptr [rdx + rax*2], 1
0xb1af:	je	0xb1cd


0xb11f:	add	rcx, 1
0xb123:	cmp	rcx, 0x100
0xb12a:	jne	0xb108


0xb10e:	mov	rax, rcx
0xb111:	mov	rdi, rsi
0xb114:	sar	rax, 6
0xb118:	shl	rdi, cl
0xb11b:	or	qword ptr [rbx + rax*8], rdi
0xb11f:	add	rcx, 1
0xb123:	cmp	rcx, 0x100
0xb12a:	jne	0xb108


0xb1cd:	add	rax, 1
0xb1d1:	cmp	rax, 0x100
0xb1d7:	jne	0xb1ab


0xb1b1:	movzx	ecx, byte ptr [rbp + rax]
0xb1b6:	mov	r14, rdi
0xb1b9:	mov	rsi, rcx
0xb1bc:	and	ecx, 0x3f
0xb1bf:	shr	rsi, 3
0xb1c3:	shl	r14, cl
0xb1c6:	and	esi, 0x18
0xb1c9:	or	qword ptr [rbx + rsi], r14
0xb1cd:	add	rax, 1
0xb1d1:	cmp	rax, 0x100
0xb1d7:	jne	0xb1ab


0xb12c:	jmp	0xad04


0xb1d9:	jmp	0xad04


0xb1ab:	test	byte ptr [rdx + rax*2], 1
0xb1af:	je	0xb1cd


0xad04:	xor	eax, eax
0xad06:	add	rsp, 0x10
0xad0a:	pop	rbx
0xad0b:	pop	rbp
0xad0c:	pop	r12
0xad0e:	pop	r13
0xad10:	pop	r14
0xad12:	ret	


0xb08b:	xor	ecx, ecx
0xb08d:	test	rbp, rbp
0xb090:	mov	rax, qword ptr [rax]
0xb093:	mov	edi, 1
0xb098:	jne	0xb3c0


0xb09e:	test	byte ptr [rax + rcx*2 + 1], 1
0xb0a3:	je	0xb0b6


0xb3c0:	xor	edx, edx
0xb3c2:	test	byte ptr [rax + rdx*2 + 1], 1
0xb3c7:	je	0xb3e5


0xb0b6:	add	rcx, 1
0xb0ba:	cmp	rcx, 0x100
0xb0c1:	jne	0xb09e


0xb0a5:	mov	rdx, rcx
0xb0a8:	mov	rsi, rdi
0xb0ab:	sar	rdx, 6
0xb0af:	shl	rsi, cl
0xb0b2:	or	qword ptr [rbx + rdx*8], rsi
0xb0b6:	add	rcx, 1
0xb0ba:	cmp	rcx, 0x100
0xb0c1:	jne	0xb09e


0xb3e5:	add	rdx, 1
0xb3e9:	cmp	rdx, 0x100
0xb3f0:	jne	0xb3c2


0xb3c9:	movzx	ecx, byte ptr [rbp + rdx]
0xb3ce:	mov	r9, rdi
0xb3d1:	mov	rsi, rcx
0xb3d4:	and	ecx, 0x3f
0xb3d7:	shr	rsi, 3
0xb3db:	shl	r9, cl
0xb3de:	and	esi, 0x18
0xb3e1:	or	qword ptr [rbx + rsi], r9
0xb3e5:	add	rdx, 1
0xb3e9:	cmp	rdx, 0x100
0xb3f0:	jne	0xb3c2


0xb0c3:	jmp	0xad04


0xb3f2:	jmp	0xad04


0xb3c2:	test	byte ptr [rax + rdx*2 + 1], 1
0xb3c7:	je	0xb3e5


0xaff2:	xor	ecx, ecx
0xaff4:	test	rbp, rbp
0xaff7:	mov	rdx, qword ptr [rax]
0xaffa:	mov	edi, 1
0xafff:	jne	0xb3f7


0xb3f7:	xor	eax, eax
0xb3f9:	test	byte ptr [rdx + rax*2 + 1], 0x40
0xb3fe:	je	0xb41c


0xb020:	add	rcx, 1
0xb024:	cmp	rcx, 0x100
0xb02b:	jne	0xb008


0xb00f:	mov	rax, rcx
0xb012:	mov	rsi, rdi
0xb015:	sar	rax, 6
0xb019:	shl	rsi, cl
0xb01c:	or	qword ptr [rbx + rax*8], rsi
0xb020:	add	rcx, 1
0xb024:	cmp	rcx, 0x100
0xb02b:	jne	0xb008


0xb41c:	add	rax, 1
0xb420:	cmp	rax, 0x100
0xb426:	jne	0xb3f9


0xb400:	movzx	ecx, byte ptr [rbp + rax]
0xb405:	mov	r14, rdi
0xb408:	mov	rsi, rcx
0xb40b:	and	ecx, 0x3f
0xb40e:	shr	rsi, 3
0xb412:	shl	r14, cl
0xb415:	and	esi, 0x18
0xb418:	or	qword ptr [rbx + rsi], r14
0xb41c:	add	rax, 1
0xb420:	cmp	rax, 0x100
0xb426:	jne	0xb3f9


0xb02d:	jmp	0xad04


0xb008:	test	byte ptr [rdx + rcx*2 + 1], 0x40
0xb00d:	je	0xb020


0xb428:	jmp	0xad04


0xb3f9:	test	byte ptr [rdx + rax*2 + 1], 0x40
0xb3fe:	je	0xb41c


0xaed3:	xor	ecx, ecx
0xaed5:	test	rbp, rbp
0xaed8:	mov	rdx, qword ptr [rax]
0xaedb:	mov	edi, 1
0xaee0:	jne	0xb38a


0xb38a:	xor	eax, eax
0xb38c:	test	byte ptr [rdx + rax*2 + 1], 8
0xb391:	je	0xb3af


0xaf08:	add	rcx, 1
0xaf0c:	cmp	rcx, 0x100
0xaf13:	jne	0xaef0


0xaef7:	mov	rax, rcx
0xaefa:	mov	rsi, rdi
0xaefd:	sar	rax, 6
0xaf01:	shl	rsi, cl
0xaf04:	or	qword ptr [rbx + rax*8], rsi
0xaf08:	add	rcx, 1
0xaf0c:	cmp	rcx, 0x100
0xaf13:	jne	0xaef0


0xb3af:	add	rax, 1
0xb3b3:	cmp	rax, 0x100
0xb3b9:	jne	0xb38c


0xb393:	movzx	ecx, byte ptr [rbp + rax]
0xb398:	mov	r14, rdi
0xb39b:	mov	rsi, rcx
0xb39e:	and	ecx, 0x3f
0xb3a1:	shr	rsi, 3
0xb3a5:	shl	r14, cl
0xb3a8:	and	esi, 0x18
0xb3ab:	or	qword ptr [rbx + rsi], r14
0xb3af:	add	rax, 1
0xb3b3:	cmp	rax, 0x100
0xb3b9:	jne	0xb38c


0xaf15:	jmp	0xad04


0xaef0:	test	byte ptr [rdx + rcx*2 + 1], 8
0xaef5:	je	0xaf08


0xb3bb:	jmp	0xad04


0xb38c:	test	byte ptr [rdx + rax*2 + 1], 8
0xb391:	je	0xb3af


0xaf58:	xor	ecx, ecx
0xaf5a:	test	rbp, rbp
0xaf5d:	mov	rdx, qword ptr [rax]
0xaf60:	mov	edi, 1
0xaf65:	jne	0xb138


0xb138:	xor	eax, eax
0xb13a:	test	byte ptr [rdx + rax*2 + 1], 4
0xb13f:	je	0xb15d


0xaf88:	add	rcx, 1
0xaf8c:	cmp	rcx, 0x100
0xaf93:	jne	0xaf70


0xaf77:	mov	rax, rcx
0xaf7a:	mov	rsi, rdi
0xaf7d:	sar	rax, 6
0xaf81:	shl	rsi, cl
0xaf84:	or	qword ptr [rbx + rax*8], rsi
0xaf88:	add	rcx, 1
0xaf8c:	cmp	rcx, 0x100
0xaf93:	jne	0xaf70


0xb15d:	add	rax, 1
0xb161:	cmp	rax, 0x100
0xb167:	jne	0xb13a


0xb141:	movzx	ecx, byte ptr [rbp + rax]
0xb146:	mov	r9, rdi
0xb149:	mov	rsi, rcx
0xb14c:	and	ecx, 0x3f
0xb14f:	shr	rsi, 3
0xb153:	shl	r9, cl
0xb156:	and	esi, 0x18
0xb159:	or	qword ptr [rbx + rsi], r9
0xb15d:	add	rax, 1
0xb161:	cmp	rax, 0x100
0xb167:	jne	0xb13a


0xaf95:	jmp	0xad04


0xaf70:	test	byte ptr [rdx + rcx*2 + 1], 4
0xaf75:	je	0xaf88


0xb169:	jmp	0xad04


0xb13a:	test	byte ptr [rdx + rax*2 + 1], 4
0xb13f:	je	0xb15d


0xae05:	xor	ecx, ecx
0xae07:	test	rbp, rbp
0xae0a:	mov	rdx, qword ptr [rax]
0xae0d:	mov	edi, 1
0xae12:	jne	0xb16e


0xb16e:	xor	eax, eax
0xb170:	test	byte ptr [rdx + rax*2 + 1], 0x20
0xb175:	je	0xb193


0xae38:	add	rcx, 1
0xae3c:	cmp	rcx, 0x100
0xae43:	jne	0xae20


0xae27:	mov	rax, rcx
0xae2a:	mov	rsi, rdi
0xae2d:	sar	rax, 6
0xae31:	shl	rsi, cl
0xae34:	or	qword ptr [rbx + rax*8], rsi
0xae38:	add	rcx, 1
0xae3c:	cmp	rcx, 0x100
0xae43:	jne	0xae20


0xb193:	add	rax, 1
0xb197:	cmp	rax, 0x100
0xb19d:	jne	0xb170


0xb177:	movzx	ecx, byte ptr [rbp + rax]
0xb17c:	mov	r9, rdi
0xb17f:	mov	rsi, rcx
0xb182:	and	ecx, 0x3f
0xb185:	shr	rsi, 3
0xb189:	shl	r9, cl
0xb18c:	and	esi, 0x18
0xb18f:	or	qword ptr [rbx + rsi], r9
0xb193:	add	rax, 1
0xb197:	cmp	rax, 0x100
0xb19d:	jne	0xb170


0xae45:	jmp	0xad04


0xae20:	test	byte ptr [rdx + rcx*2 + 1], 0x20
0xae25:	je	0xae38


0xb19f:	jmp	0xad04


0xb170:	test	byte ptr [rdx + rax*2 + 1], 0x20
0xb175:	je	0xb193


0xae4f:	xor	ecx, ecx
0xae51:	test	rbp, rbp
0xae54:	mov	rdx, qword ptr [rax]
0xae57:	mov	edi, 1
0xae5c:	jne	0xb032


0xb032:	xor	eax, eax
0xb034:	nop	dword ptr [rax]
0xb038:	test	byte ptr [rdx + rax*2 + 1], 2
0xb03d:	je	0xb05b


0xae80:	add	rcx, 1
0xae84:	cmp	rcx, 0x100
0xae8b:	jne	0xae68


0xae6f:	mov	rax, rcx
0xae72:	mov	rsi, rdi
0xae75:	sar	rax, 6
0xae79:	shl	rsi, cl
0xae7c:	or	qword ptr [rbx + rax*8], rsi
0xae80:	add	rcx, 1
0xae84:	cmp	rcx, 0x100
0xae8b:	jne	0xae68


0xb05b:	add	rax, 1
0xb05f:	cmp	rax, 0x100
0xb065:	jne	0xb038


0xb03f:	movzx	ecx, byte ptr [rbp + rax]
0xb044:	mov	r14, rdi
0xb047:	mov	rsi, rcx
0xb04a:	and	ecx, 0x3f
0xb04d:	shr	rsi, 3
0xb051:	shl	r14, cl
0xb054:	and	esi, 0x18
0xb057:	or	qword ptr [rbx + rsi], r14
0xb05b:	add	rax, 1
0xb05f:	cmp	rax, 0x100
0xb065:	jne	0xb038


0xae8d:	jmp	0xad04


0xae68:	test	byte ptr [rdx + rcx*2 + 1], 2
0xae6d:	je	0xae80


0xb067:	jmp	0xad04


0xb038:	test	byte ptr [rdx + rax*2 + 1], 2
0xb03d:	je	0xb05b


0xaccd:	xor	ecx, ecx
0xaccf:	test	rbp, rbp
0xacd2:	mov	rdx, qword ptr [rax]
0xacd5:	mov	edi, 1
0xacda:	jne	0xaf9a


0xace0:	test	byte ptr [rdx + rcx*2], 2
0xace4:	je	0xacf7


0xaf9a:	xor	eax, eax
0xaf9c:	nop	dword ptr [rax]
0xafa0:	test	byte ptr [rdx + rax*2], 2
0xafa4:	je	0xafc2


0xacf7:	add	rcx, 1
0xacfb:	cmp	rcx, 0x100
0xad02:	jne	0xace0


0xace6:	mov	rax, rcx
0xace9:	mov	rsi, rdi
0xacec:	sar	rax, 6
0xacf0:	shl	rsi, cl
0xacf3:	or	qword ptr [rbx + rax*8], rsi
0xacf7:	add	rcx, 1
0xacfb:	cmp	rcx, 0x100
0xad02:	jne	0xace0


0xafc2:	add	rax, 1
0xafc6:	cmp	rax, 0x100
0xafcc:	jne	0xafa0


0xafa6:	movzx	ecx, byte ptr [rbp + rax]
0xafab:	mov	r11, rdi
0xafae:	mov	rsi, rcx
0xafb1:	and	ecx, 0x3f
0xafb4:	shr	rsi, 3
0xafb8:	shl	r11, cl
0xafbb:	and	esi, 0x18
0xafbe:	or	qword ptr [rbx + rsi], r11
0xafc2:	add	rax, 1
0xafc6:	cmp	rax, 0x100
0xafcc:	jne	0xafa0


0xafce:	jmp	0xad04


0xafa0:	test	byte ptr [rdx + rax*2], 2
0xafa4:	je	0xafc2


0xad1d:	xor	ecx, ecx
0xad1f:	test	rbp, rbp
0xad22:	mov	rdx, qword ptr [rax]
0xad25:	mov	edi, 1
0xad2a:	jne	0xaf1a


0xad30:	test	byte ptr [rdx + rcx*2], 8
0xad34:	je	0xad47


0xaf1a:	xor	eax, eax
0xaf1c:	nop	dword ptr [rax]
0xaf20:	test	byte ptr [rdx + rax*2], 8
0xaf24:	je	0xaf42


0xad47:	add	rcx, 1
0xad4b:	cmp	rcx, 0x100
0xad52:	jne	0xad30


0xad36:	mov	rax, rcx
0xad39:	mov	rsi, rdi
0xad3c:	sar	rax, 6
0xad40:	shl	rsi, cl
0xad43:	or	qword ptr [rbx + rax*8], rsi
0xad47:	add	rcx, 1
0xad4b:	cmp	rcx, 0x100
0xad52:	jne	0xad30


0xaf42:	add	rax, 1
0xaf46:	cmp	rax, 0x100
0xaf4c:	jne	0xaf20


0xaf26:	movzx	ecx, byte ptr [rbp + rax]
0xaf2b:	mov	r10, rdi
0xaf2e:	mov	rsi, rcx
0xaf31:	and	ecx, 0x3f
0xaf34:	shr	rsi, 3
0xaf38:	shl	r10, cl
0xaf3b:	and	esi, 0x18
0xaf3e:	or	qword ptr [rbx + rsi], r10
0xaf42:	add	rax, 1
0xaf46:	cmp	rax, 0x100
0xaf4c:	jne	0xaf20


0xad54:	jmp	0xad04


0xaf4e:	jmp	0xad04


0xaf20:	test	byte ptr [rdx + rax*2], 8
0xaf24:	je	0xaf42


0x260b:	mov	qword ptr [rip + 0x218aca], 0
0x2616:	add	rsp, 8
0x261a:	pop	rbx
0x261b:	pop	rbp
0x261c:	pop	r12
0x261e:	pop	r13
0x2620:	pop	r14
0x2622:	pop	r15
0x2624:	ret	


0x2b26:	test	rax, rax
0x2b29:	jns	0x2686


0x2b2f:	mov	rdx, qword ptr [rsp + 0x28]
0x2b34:	mov	esi, 3
0x2b39:	xor	edi, edi
0x2b3b:	call	0x4ca0


0x3173:	test	rax, rax
0x3176:	je	0x31cd


0x31cd:	mov	qword ptr [rip + 0x2180d4], rbx
0x31d4:	mov	qword ptr [rip + 0x215ec5], rbx
0x31db:	pop	rbx
0x31dc:	ret	


0x3178:	lea	r8, [rax + 1]
0x317c:	mov	rdx, r8
0x317f:	sub	rdx, rbx
0x3182:	cmp	rdx, 6
0x3186:	jle	0x31cd


0x3188:	lea	rsi, [rax - 6]
0x318c:	lea	rdi, [rip + 0x1152d]
0x3193:	mov	ecx, 7
0x3198:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3198:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x319a:	seta	dl
0x319d:	sbb	dl, 0
0x31a0:	test	dl, dl
0x31a2:	jne	0x31cd


0x31a4:	lea	rdi, [rip + 0x1151d]
0x31ab:	mov	ecx, 3
0x31b0:	mov	rsi, r8
0x31b3:	mov	rbx, r8
0x31b6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x31b6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x31b8:	seta	dl
0x31bb:	sbb	dl, 0
0x31be:	test	dl, dl
0x31c0:	jne	0x31cd


0x31c2:	lea	rbx, [rax + 4]
0x31c6:	mov	qword ptr [rip + 0x215eb3], rbx
0x31cd:	mov	qword ptr [rip + 0x2180d4], rbx
0x31d4:	mov	qword ptr [rip + 0x215ec5], rbx
0x31db:	pop	rbx
0x31dc:	ret	


0x31fa:	call	0x1890


0x4fac:	lea	rsi, [rip + 0xfc08]
0x4fb3:	xor	edi, edi
0x4fb5:	mov	edx, 5
0x4fba:	call	0x1960


0x50c1:	jmp	0x4fac


0x666d:	mov	rax, qword ptr [rax]
0x6670:	mov	rdx, qword ptr [r14 + 8]
0x6674:	mov	eax, dword ptr [rax + r12*4]
0x6678:	mov	byte ptr [rdx + r15], al
0x667c:	mov	rdx, qword ptr [r14 + 8]
0x6680:	mov	rax, qword ptr [r14 + 0x10]
0x6684:	movzx	edx, byte ptr [rdx + r15]
0x6689:	mov	dword ptr [rax + r15*4], edx
0x668d:	add	r15, 1
0x6691:	jmp	0x663a


0x663a:	cmp	rbx, r15
0x663d:	jg	0x6550


0x6643:	jmp	0x66b8


0x6550:	mov	rbp, qword ptr [r14 + 0x28]
0x6554:	mov	r13, r15
0x6557:	add	rbp, r15
0x655a:	add	rbp, qword ptr [r14]
0x655d:	movzx	r12d, byte ptr [rbp]
0x6562:	test	r12b, 0x80
0x6566:	jne	0x657a


0x613f:	mov	rsi, qword ptr [rax]
0x6142:	mov	rcx, qword ptr [rbp + 8]
0x6146:	mov	edx, dword ptr [rsi + rdx*4]
0x6149:	mov	byte ptr [rcx + rbx], dl
0x614c:	add	rbx, 1
0x6150:	cmp	r12, rbx
0x6153:	jne	0x6128


0x6168:	movzx	edx, byte ptr [rcx + rdx]
0x616c:	jmp	0x613f


0x6128:	mov	rdx, qword ptr [rbp]
0x612c:	mov	rcx, qword ptr [rbp + 0x78]
0x6130:	add	rdx, rbx
0x6133:	add	rdx, qword ptr [rbp + 0x28]
0x6137:	test	rcx, rcx
0x613a:	movzx	edx, byte ptr [rdx]
0x613d:	jne	0x6168


0x808a:	xor	eax, eax
0x808c:	add	rsp, 8
0x8090:	pop	rbx
0x8091:	pop	rbp
0x8092:	pop	r12
0x8094:	pop	r13
0x8096:	ret	


0x7aaa:	xor	eax, eax
0x7aac:	jmp	0x7a2c


0x7a2c:	pop	rbx
0x7a2d:	pop	rbp
0x7a2e:	pop	r12
0x7a30:	ret	


0x7a85:	jmp	0x79d9


0x7b0f:	jmp	0x7a2a


0x25d8:	mov	qword ptr [rip + 0x218b01], rbx
0x25df:	add	rsp, 8
0x25e3:	pop	rbx
0x25e4:	pop	rbp
0x25e5:	pop	r12
0x25e7:	pop	r13
0x25e9:	pop	r14
0x25eb:	pop	r15
0x25ed:	ret	


0xc67d:	lea	rax, [rbp - 0x70]
0xc681:	mov	rcx, qword ptr [r13]
0xc685:	mov	qword ptr [rbp - 0xa8], rax
0xc68c:	add	rax, 0x10
0xc690:	mov	qword ptr [rbp - 0x78], rcx
0xc694:	mov	qword ptr [rbp - 0xc8], rax
0xc69b:	lea	rax, [rbp - 0x78]
0xc69f:	mov	qword ptr [rbp - 0xb0], rax
0xc6a6:	jmp	0xc789


0xc789:	mov	rax, qword ptr [r13 + 8]
0xc78d:	cmp	rax, rcx
0xc790:	jl	0xcc80


0xcc80:	mov	rdi, qword ptr [rbp - 0x60]
0xcc84:	call	0x1880


0xc796:	mov	rdi, qword ptr [rbp - 0x90]
0xc79d:	mov	r9, rbx
0xc7a0:	mov	r15, rbx
0xc7a3:	shl	r9, 4
0xc7a7:	mov	rdx, qword ptr [rdi]
0xc7aa:	add	rdx, r9
0xc7ad:	movzx	esi, byte ptr [rdx + 8]
0xc7b1:	cmp	esi, 8
0xc7b4:	jne	0xc6b0


0xc7ba:	mov	rdx, qword ptr [rdx]
0xc7bd:	add	rdx, 1
0xc7c1:	cmp	qword ptr [rbp - 0x98], rdx
0xc7c8:	jle	0xc6b9


0xc6b0:	cmp	esi, 9
0xc6b3:	je	0xc8a0


0xc6b9:	cmp	rax, rcx
0xc6bc:	jne	0xc6cc


0xc7ce:	shl	rdx, 4
0xc7d2:	add	rdx, r13
0xc7d5:	mov	qword ptr [rdx + 8], -1
0xc7dd:	mov	qword ptr [rdx], rcx
0xc7e0:	mov	rax, qword ptr [r13 + 8]
0xc7e4:	jmp	0xc6b9


0xc8a0:	mov	rdi, qword ptr [rdx]
0xc8a3:	lea	rsi, [rdi + 1]
0xc8a7:	cmp	qword ptr [rbp - 0x98], rsi
0xc8ae:	jle	0xc6b9


0xc6be:	cmp	qword ptr [r12 + 0xb0], rbx
0xc6c6:	je	0xcaa0


0xc6cc:	mov	r14, qword ptr [r12 + 0x98]
0xc6d4:	mov	rdi, qword ptr [r14]
0xc6d7:	lea	rsi, [rdi + r9]
0xc6db:	movzx	eax, byte ptr [rsi + 8]
0xc6df:	test	al, 8
0xc6e1:	jne	0xc7f0


0xc8b4:	shl	rsi, 4
0xc8b8:	lea	rax, [r13 + rsi]
0xc8bd:	cmp	qword ptr [rax], rcx
0xc8c0:	jl	0xcc40


0xcaa0:	cmp	qword ptr [rbp - 0x88], 0
0xcaa8:	je	0xcddc


0xc6e7:	test	byte ptr [rsi + 0xa], 0x10
0xc6eb:	jne	0xc8f0


0xc7f0:	mov	rax, qword ptr [r12 + 0xb8]
0xc7f8:	mov	rdx, qword ptr [rbp - 0x78]
0xc7fc:	mov	rsi, rbx
0xc7ff:	mov	rdi, qword ptr [rbp - 0xa8]
0xc806:	mov	r9, qword ptr [rax + rdx*8]
0xc80a:	mov	rax, qword ptr [r14 + 0x28]
0xc80e:	lea	rdx, [rbx + rbx*2]
0xc812:	mov	qword ptr [rbp - 0xa0], r9
0xc819:	lea	r15, [rax + rdx*8]
0xc81d:	call	0x5ee0


0xcc40:	mov	rdx, qword ptr [rbp - 0xb8]
0xcc47:	mov	rdi, qword ptr [rbp - 0xc0]
0xcc4e:	mov	rsi, r13
0xcc51:	mov	qword ptr [rax + 8], rcx
0xcc55:	mov	qword ptr [rbp - 0xd8], r9
0xcc5c:	mov	qword ptr [rbp - 0xa0], rcx
0xcc63:	call	0x1a90


0xc8c6:	test	byte ptr [rdx + 0xa], 8
0xc8ca:	je	0xc8de


0xcddc:	mov	rdi, qword ptr [rbp - 0x60]
0xcde0:	call	0x1880


0xcaae:	mov	rcx, qword ptr [rbp - 0x98]
0xcab5:	test	rcx, rcx
0xcab8:	je	0xcada


0xc6f1:	cmp	al, 4
0xc6f3:	je	0xc930


0xc8f0:	mov	r8, qword ptr [rbp - 0x78]
0xc8f4:	lea	rsi, [r14 + 0xd8]
0xc8fb:	mov	rcx, r12
0xc8fe:	mov	rdx, rbx
0xc901:	mov	qword ptr [rbp - 0xa0], r9
0xc908:	call	0xbbd0


0xc8de:	mov	qword ptr [rax + 8], rcx
0xc8e2:	mov	rax, qword ptr [r13 + 8]
0xc8e6:	jmp	0xc6b9


0xc8cc:	mov	rdi, qword ptr [rbp - 0xc0]
0xc8d3:	cmp	qword ptr [rdi + rsi], -1
0xc8d8:	jne	0xcccb


0xcada:	mov	rdi, qword ptr [rbp - 0x60]
0xcade:	call	0x1880


0xcaba:	mov	rax, r13
0xcabd:	xor	edx, edx
0xcabf:	nop	
0xcac0:	cmp	qword ptr [rax], 0
0xcac4:	js	0xcacd


0xc930:	mov	rax, qword ptr [rsi]
0xc933:	add	rax, 1
0xc937:	shl	rax, 4
0xc93b:	add	rax, r13
0xc93e:	mov	rdx, qword ptr [rax + 8]
0xc942:	mov	rdi, qword ptr [rax]
0xc945:	mov	rcx, rdx
0xc948:	sub	rcx, rdi
0xc94b:	cmp	qword ptr [rbp - 0x88], 0
0xc953:	je	0xcb08


0xc6f9:	mov	rcx, qword ptr [rbp - 0x78]
0xc6fd:	mov	rdx, rcx
0xc700:	mov	rdi, r12
0xc703:	mov	qword ptr [rbp - 0xa0], rcx
0xc70a:	call	0x92f0


0xcccb:	mov	rdx, qword ptr [rbp - 0xb8]
0xccd2:	mov	rsi, rdi
0xccd5:	mov	rdi, r13
0xccd8:	mov	qword ptr [rbp - 0xd8], rcx
0xccdf:	mov	qword ptr [rbp - 0xa0], r9
0xcce6:	call	0x1a90


0xcacd:	add	rdx, 1
0xcad1:	add	rax, 0x10
0xcad5:	cmp	rcx, rdx
0xcad8:	jne	0xcac0


0xcac6:	cmp	qword ptr [rax + 8], -1
0xcacb:	je	0xcb20


0xcb08:	test	rcx, rcx
0xcb0b:	je	0xcbc0


0xc959:	cmp	rdi, -1
0xc95d:	je	0xcb76


0xcac0:	cmp	qword ptr [rax], 0
0xcac4:	js	0xcacd


0xcb20:	mov	rdi, qword ptr [rbp - 0x88]
0xcb27:	mov	r9, qword ptr [rbp - 0xa8]
0xcb2e:	mov	r8, r13
0xcb31:	mov	rcx, qword ptr [rbp - 0x98]
0xcb38:	mov	rdx, qword ptr [rbp - 0xb0]
0xcb3f:	lea	rsi, [rdi + 0x10]
0xcb43:	call	0xab30


0xcbc0:	mov	rdi, qword ptr [rbp - 0xa8]
0xcbc7:	mov	rsi, rbx
0xcbca:	mov	qword ptr [rbp - 0xa0], r9
0xcbd1:	call	0x5ee0


0xcb11:	mov	r15, qword ptr [rbp - 0x78]
0xcb15:	jmp	0xc9b5


0xcb76:	mov	rdi, qword ptr [rbp - 0x88]
0xcb7d:	mov	rcx, qword ptr [rbp - 0x98]
0xcb84:	lea	rdx, [rbp - 0x78]
0xcb88:	mov	r9, qword ptr [rbp - 0xa8]
0xcb8f:	mov	r8, r13
0xcb92:	lea	rsi, [rdi + 0x10]
0xcb96:	call	0xab30


0xc963:	cmp	rdx, -1
0xc967:	je	0xcb76


0xc9b5:	mov	rax, qword ptr [r14 + 0x18]
0xc9b9:	lea	rdx, [r15 + rcx]
0xc9bd:	mov	rbx, qword ptr [rax + rbx*8]
0xc9c1:	jmp	0xc72a


0xc96d:	test	rcx, rcx
0xc970:	je	0xcbc0


0xc72a:	cmp	qword ptr [rbp - 0x88], 0
0xc732:	mov	qword ptr [rbp - 0x78], rdx
0xc736:	je	0xc774


0xc976:	mov	r15, qword ptr [rbp - 0x78]
0xc97a:	mov	rdx, qword ptr [r12 + 0x30]
0xc97f:	mov	rax, qword ptr [r12 + 8]
0xc984:	sub	rdx, r15
0xc987:	cmp	rcx, rdx
0xc98a:	jg	0xcb76


0xc774:	mov	qword ptr [rbp - 0x68], 0
0xc77c:	test	rbx, rbx
0xc77f:	js	0xcb5a


0xc738:	cmp	rdx, qword ptr [r12 + 0xa8]
0xc740:	jg	0xcb76


0xc990:	lea	rsi, [rax + r15]
0xc994:	add	rdi, rax
0xc997:	mov	rdx, rcx
0xc99a:	mov	qword ptr [rbp - 0xa0], rcx
0xc9a1:	call	0x1a40


0xcb5a:	cmp	rbx, -2
0xcb5e:	je	0xcd08


0xc785:	mov	rcx, qword ptr [rbp - 0x78]
0xc789:	mov	rax, qword ptr [r13 + 8]
0xc78d:	cmp	rax, rcx
0xc790:	jl	0xcc80


0xc746:	mov	rax, qword ptr [r12 + 0xb8]
0xc74e:	mov	rax, qword ptr [rax + rdx*8]
0xc752:	test	rax, rax
0xc755:	je	0xcb76


0xcd08:	mov	rdi, qword ptr [rbp - 0x60]
0xcd0c:	call	0x1880


0xc75b:	mov	rdi, qword ptr [rax + 0x10]
0xc75f:	lea	rsi, [rax + 0x18]
0xc763:	mov	rdx, rbx
0xc766:	call	0x7420


0xce2c:	mov	rdi, qword ptr [rbp - 0x60]
0xce30:	call	0x1880


0xc76b:	test	rax, rax
0xc76e:	je	0xcb76


0xc9a6:	test	eax, eax
0xc9a8:	mov	rcx, qword ptr [rbp - 0xa0]
0xc9af:	jne	0xcb76


0xc70f:	test	al, al
0xc711:	mov	rcx, qword ptr [rbp - 0xa0]
0xc718:	je	0xcb68


0xcb68:	cmp	qword ptr [rbp - 0x88], 0
0xcb70:	je	0xce2c


0xc71e:	mov	rax, qword ptr [r14 + 0x18]
0xc722:	lea	rdx, [rcx + 1]
0xc726:	mov	rbx, qword ptr [rax + r15*8]
0xc72a:	cmp	qword ptr [rbp - 0x88], 0
0xc732:	mov	qword ptr [rbp - 0x78], rdx
0xc736:	je	0xc774


0xc90d:	movsxd	rcx, eax
0xc910:	test	rcx, rcx
0xc913:	jne	0xcb11


0xc919:	mov	r9, qword ptr [rbp - 0xa0]
0xc920:	mov	rsi, qword ptr [r14]
0xc923:	mov	rcx, qword ptr [rbp - 0x78]
0xc927:	add	rsi, r9
0xc92a:	jmp	0xc6fd


0xc6fd:	mov	rdx, rcx
0xc700:	mov	rdi, r12
0xc703:	mov	qword ptr [rbp - 0xa0], rcx
0xc70a:	call	0x92f0


0xcbd6:	test	al, al
0xcbd8:	je	0xcd08


0xcbde:	mov	rdx, qword ptr [r14 + 0x28]
0xcbe2:	lea	rax, [rbx + rbx*2]
0xcbe6:	mov	rcx, qword ptr [rbp - 0x78]
0xcbea:	lea	rax, [rdx + rax*8]
0xcbee:	mov	qword ptr [rbp - 0xd8], rcx
0xcbf5:	mov	rax, qword ptr [rax + 0x10]
0xcbf9:	mov	rbx, qword ptr [rax]
0xcbfc:	mov	rax, qword ptr [r12 + 0xb8]
0xcc04:	mov	rax, qword ptr [rax + rcx*8]
0xcc08:	mov	rdx, rbx
0xcc0b:	mov	rdi, qword ptr [rax + 0x10]
0xcc0f:	lea	rsi, [rax + 0x18]
0xcc13:	call	0x7420


0xcc18:	test	rax, rax
0xcc1b:	jne	0xc77c


0xcc21:	mov	r9, qword ptr [rbp - 0xa0]
0xcc28:	mov	rsi, qword ptr [r14]
0xcc2b:	mov	rcx, qword ptr [rbp - 0xd8]
0xcc32:	add	rsi, r9
0xcc35:	jmp	0xc6fd


0xc77c:	test	rbx, rbx
0xc77f:	js	0xcb5a


0xc822:	test	al, al
0xc824:	mov	r9, qword ptr [rbp - 0xa0]
0xc82b:	je	0xcd08


0xc831:	mov	r10, qword ptr [r15 + 8]
0xc835:	test	r10, r10
0xc838:	jle	0xcb68


0xc83e:	mov	r15, qword ptr [r15 + 0x10]
0xc842:	mov	r11, qword ptr [r9 + 0x10]
0xc846:	lea	r14, [r9 + 0x18]
0xc84a:	mov	rbx, -1
0xc851:	xor	r9d, r9d
0xc854:	mov	qword ptr [rbp - 0xa0], r12
0xc85b:	nop	dword ptr [rax + rax]
0xc860:	mov	r12, qword ptr [r15 + r9*8]
0xc864:	mov	rsi, r14
0xc867:	mov	rdi, r11
0xc86a:	mov	rdx, r12
0xc86d:	call	0x7420


0xc872:	test	rax, rax
0xc875:	je	0xc884


0xc884:	add	r9, 1
0xc888:	cmp	r10, r9
0xc88b:	jne	0xc860


0xc877:	cmp	rbx, -1
0xc87b:	jne	0xc9d0


0xc88d:	mov	r12, qword ptr [rbp - 0xa0]
0xc894:	jmp	0xc77c


0xc860:	mov	r12, qword ptr [r15 + r9*8]
0xc864:	mov	rsi, r14
0xc867:	mov	rdi, r11
0xc86a:	mov	rdx, r12
0xc86d:	call	0x7420


0xc881:	mov	rbx, r12
0xc884:	add	r9, 1
0xc888:	cmp	r10, r9
0xc88b:	jne	0xc860


0xc9d0:	mov	rsi, qword ptr [rbp - 0xc8]
0xc9d7:	mov	rdi, qword ptr [rbp - 0x68]
0xc9db:	mov	rdx, rbx
0xc9de:	mov	r14, r12
0xc9e1:	mov	r12, qword ptr [rbp - 0xa0]
0xc9e8:	call	0x7420


0xc9ed:	test	rax, rax
0xc9f0:	jne	0xcbb0


0xc9f6:	mov	rcx, qword ptr [rbp - 0x88]
0xc9fd:	test	rcx, rcx
0xca00:	je	0xc77c


0xcbb0:	mov	rbx, r14
0xcbb3:	jmp	0xc77c


0xca06:	mov	r15, qword ptr [rcx]
0xca09:	mov	rdx, qword ptr [rbp - 0x78]
0xca0d:	lea	rax, [r15 + 1]
0xca11:	cmp	rax, qword ptr [rcx + 8]
0xca15:	mov	qword ptr [rcx], rax
0xca18:	je	0xcd9d


0xcd9d:	lea	rsi, [rax + rax*2]
0xcda1:	mov	rax, qword ptr [rbp - 0x88]
0xcda8:	mov	qword ptr [rbp - 0xa0], rdx
0xcdaf:	shl	rsi, 5
0xcdb3:	mov	rdi, qword ptr [rax + 0x10]
0xcdb7:	call	0x1b30


0xca1e:	mov	rax, qword ptr [rcx + 0x10]
0xca22:	lea	r15, [r15 + r15*2]
0xca26:	shl	r15, 4
0xca2a:	add	r15, rax
0xca2d:	mov	qword ptr [r15 + 8], r14
0xca31:	mov	r14, qword ptr [rbp - 0xb8]
0xca38:	mov	qword ptr [r15], rdx
0xca3b:	mov	rdi, r14
0xca3e:	call	0x1ac0


0xcceb:	mov	rax, qword ptr [r13 + 8]
0xccef:	mov	r9, qword ptr [rbp - 0xa0]
0xccf6:	mov	rcx, qword ptr [rbp - 0xd8]
0xccfd:	jmp	0xc6b9


0xcc68:	mov	rax, qword ptr [r13 + 8]
0xcc6c:	mov	rcx, qword ptr [rbp - 0xa0]
0xcc73:	mov	r9, qword ptr [rbp - 0xd8]
0xcc7a:	jmp	0xc6b9


0x2590:	mov	rcx, qword ptr [rip + 0x216af1]
0x2597:	mov	edx, 0x2000
0x259c:	mov	esi, 1
0x25a1:	mov	rdi, r14
0x25a4:	mov	r15d, 0x2000
0x25aa:	call	0x1b20


0x25af:	cmp	rbp, 0x1fff
0x25b6:	mov	qword ptr [rip + 0x218b1f], 0
0x25c1:	ja	0x2578


0x25c3:	lea	rdi, [rip + 0x216b16]
0x25ca:	add	rbx, rbp
0x25cd:	mov	rdx, rbp
0x25d0:	mov	rsi, r12
0x25d3:	call	0x1a90


0x2578:	lea	rdi, [r13 + rbx]
0x257d:	mov	rdx, r15
0x2580:	mov	rsi, r12
0x2583:	sub	rbp, r15
0x2586:	add	r12, r15
0x2589:	xor	ebx, ebx
0x258b:	call	0x1a90


0xab70:	mov	rdi, qword ptr [rbp + 0x10]
0xab74:	call	0x1880


0xcdbc:	test	rax, rax
0xcdbf:	je	0xce05


0xce05:	mov	rdi, qword ptr [rbp - 0x60]
0xce09:	call	0x1880


0xcdc1:	mov	rcx, qword ptr [rbp - 0x88]
0xcdc8:	mov	rdx, qword ptr [rbp - 0xa0]
0xcdcf:	shl	qword ptr [rcx + 8], 1
0xcdd3:	mov	qword ptr [rcx + 0x10], rax
0xcdd7:	jmp	0xca22


0xca22:	lea	r15, [r15 + r15*2]
0xca26:	shl	r15, 4
0xca2a:	add	r15, rax
0xca2d:	mov	qword ptr [r15 + 8], r14
0xca31:	mov	r14, qword ptr [rbp - 0xb8]
0xca38:	mov	qword ptr [r15], rdx
0xca3b:	mov	rdi, r14
0xca3e:	call	0x1ac0


0xcfa2:	test	rax, rax
0xcfa5:	mov	rcx, qword ptr [rsp + 8]
0xcfaa:	je	0xd000


0xd000:	mov	rdi, qword ptr [rbx + 0xd8]
0xd007:	call	0x1880


0xcfac:	mov	rsi, qword ptr [rbx + 0xc8]
0xcfb3:	mov	rdx, qword ptr [rbx + 0xd0]
0xcfba:	mov	qword ptr [rbx + 0xd8], rax
0xcfc1:	mov	qword ptr [rsp + 8], rcx
0xcfc6:	lea	rsi, [rsi + rsi*4]
0xcfca:	lea	rdx, [rdx + rdx*4]
0xcfce:	lea	rdi, [rax + rsi*8]
0xcfd2:	shl	rdx, 3
0xcfd6:	xor	esi, esi
0xcfd8:	call	0x1a10


0xcfdd:	shl	qword ptr [rbx + 0xd0], 1
0xcfe4:	mov	rax, qword ptr [rbx + 0xc8]
0xcfeb:	mov	rdi, qword ptr [rbx + 0xd8]
0xcff2:	mov	rsi, qword ptr [rbp + 8]
0xcff6:	mov	rcx, qword ptr [rsp + 8]
0xcffb:	jmp	0xcef9


0xd8c4:	test	rax, rax
0xd8c7:	je	0xd789


0xd789:	mov	eax, 0xc
0xd78e:	jmp	0xd398


0xd8cd:	mov	rdx, qword ptr [rsp + 0x10]
0xd8d2:	mov	qword ptr [r12 + 0x28], rax
0xd8d7:	mov	qword ptr [r12 + 0x18], rdx
0xd8dc:	jmp	0xd6d4


0x69c4:	test	rax, rax
0x69c7:	je	0x6a88


0x69cd:	mov	qword ptr [rbx + 0xb8], rax
0x69d4:	cmp	byte ptr [rbx + 0x88], 0
0x69db:	mov	eax, dword ptr [rbx + 0x90]
0x69e1:	je	0x6a00


0x91c5:	test	rax, rax
0x91c8:	mov	r9, rax
0x91cb:	mov	rcx, qword ptr [rsp + 8]
0x91d0:	je	0x91a1


0x91a1:	mov	eax, 0xc
0x91a6:	jmp	0x9192


0x91d2:	mov	qword ptr [r15 + 0xf8], rax
0x91d9:	mov	rax, qword ptr [rsp + 0x10]
0x91de:	mov	r8, qword ptr [r15 + 0xe8]
0x91e5:	mov	qword ptr [r15 + 0xf0], rax
0x91ec:	jmp	0x9133


0x9192:	add	rsp, 0x28
0x9196:	pop	rbx
0x9197:	pop	rbp
0x9198:	pop	r12
0x919a:	pop	r13
0x919c:	pop	r14
0x919e:	pop	r15
0x91a0:	ret	


0x5ff3:	test	rax, rax
0x5ff6:	je	0x6005


0x6005:	xor	eax, eax
0x6007:	jmp	0x5f0e


0x5ff8:	mov	qword ptr [rbx + 0x10], rax
0x5ffc:	mov	rsi, qword ptr [rbx + 8]
0x6000:	jmp	0x5f59


0x7acf:	test	rax, rax
0x7ad2:	je	0x7b14


0x7b14:	mov	eax, 0xc
0x7b19:	jmp	0x7a2c


0x7ad4:	mov	qword ptr [rbx + 0x10], rax
0x7ad8:	mov	qword ptr [rbx], rbp
0x7adb:	mov	rax, qword ptr [rbx + 8]
0x7adf:	mov	rdx, qword ptr [r12 + 8]
0x7ae4:	jmp	0x7974


0x80b0:	test	rax, rax
0x80b3:	mov	rdi, rax
0x80b6:	je	0x80d1


0x80d1:	mov	eax, 0xc
0x80d6:	jmp	0x808c


0x80b8:	mov	qword ptr [rbx + 0x10], rax
0x80bc:	mov	qword ptr [rbx], r13
0x80bf:	mov	rcx, qword ptr [rbx + 8]
0x80c3:	mov	r9, qword ptr [rbp + 8]
0x80c7:	mov	r11, qword ptr [r12 + 8]
0x80cc:	jmp	0x7f7b


0x808c:	add	rsp, 8
0x8090:	pop	rbx
0x8091:	pop	rbp
0x8092:	pop	r12
0x8094:	pop	r13
0x8096:	ret	


0xc506:	test	rax, rax
0xc509:	je	0xc54b


0xc50b:	mov	rcx, qword ptr [rsp + 0x60]
0xc510:	lea	rdx, [r12*8]
0xc518:	lea	rdi, [rax + r13*8]
0xc51c:	xor	esi, esi
0xc51e:	mov	qword ptr [rcx + 0x10], rax
0xc522:	mov	qword ptr [rcx + 8], r14
0xc526:	call	0x1a10


0xc52b:	jmp	0xbeac


0x5e05:	test	rax, rax
0x5e08:	je	0x5e60


0x5e0a:	mov	rdi, qword ptr [rbx + 0x18]
0x5e0e:	mov	qword ptr [rbx + 0x10], rax
0x5e12:	test	rdi, rdi
0x5e15:	je	0x5e2d


0x5e17:	lea	rsi, [rbp*8]
0x5e1f:	call	0x1b30


0x5e24:	test	rax, rax
0x5e27:	je	0x5e60


0x5e29:	mov	qword ptr [rbx + 0x18], rax
0x5e2d:	cmp	byte ptr [rbx + 0x8b], 0
0x5e34:	jne	0x5e48


0x5e54:	test	rax, rax
0x5e57:	je	0x5e60


0x5e59:	mov	qword ptr [rbx + 8], rax
0x5e5d:	jmp	0x5e36


0x6cbc:	test	rax, rax
0x6cbf:	je	0x6d82


0x6cc5:	mov	r15, rbp
0x6cc8:	mov	rdi, qword ptr [rbx + 0x18]
0x6ccc:	mov	qword ptr [rbx], rax
0x6ccf:	shl	r15, 4
0x6cd3:	mov	rsi, r15
0x6cd6:	call	0x1b30


0x6cdb:	mov	rdi, qword ptr [rbx + 0x20]
0x6cdf:	mov	rsi, r15
0x6ce2:	lea	r15, [r13 + rbp*4]
0x6ce7:	mov	r12, rax
0x6cea:	shl	r15, 3
0x6cee:	call	0x1b30


0x6cf3:	mov	rdi, qword ptr [rbx + 0x28]
0x6cf7:	mov	rsi, r15
0x6cfa:	mov	qword ptr [rsp], rax
0x6cfe:	call	0x1b30


0x6d03:	mov	rdi, qword ptr [rbx + 0x30]
0x6d07:	mov	rsi, r15
0x6d0a:	mov	rbp, rax
0x6d0d:	call	0x1b30


0x6d12:	test	r12, r12
0x6d15:	mov	rcx, qword ptr [rsp]
0x6d19:	je	0x6d50


0x6d50:	mov	rdi, r12
0x6d53:	mov	qword ptr [rsp + 8], rax
0x6d58:	mov	qword ptr [rsp], rcx
0x6d5c:	call	0x1880


0x6d1b:	test	rcx, rcx
0x6d1e:	je	0x6d50


0x6d20:	test	rbp, rbp
0x6d23:	je	0x6d50


0x6d25:	test	rax, rax
0x6d28:	mov	rdx, qword ptr [rsp + 8]
0x6d2d:	je	0x6d50


0x6d2f:	mov	qword ptr [rbx + 0x18], r12
0x6d33:	mov	qword ptr [rbx + 0x20], rcx
0x6d37:	mov	qword ptr [rbx + 0x28], rbp
0x6d3b:	mov	qword ptr [rbx + 0x30], rax
0x6d3f:	mov	qword ptr [rbx + 8], r13
0x6d43:	mov	rsi, qword ptr [rbx + 0x10]
0x6d47:	jmp	0x6bed


0x6bed:	mov	rax, rsi
0x6bf0:	mov	ecx, edx
0x6bf2:	shl	rax, 4
0x6bf6:	add	rax, qword ptr [rbx]
0x6bf9:	and	ecx, 0xfffc00ff
0x6bff:	mov	qword ptr [rax + 8], rdx
0x6c03:	mov	dword ptr [rax + 8], ecx
0x6c06:	xor	ecx, ecx
0x6c08:	cmp	dl, 6
0x6c0b:	mov	qword ptr [rax], r14
0x6c0e:	sete	cl
0x6c11:	cmp	dl, 5
0x6c14:	jne	0x6c22


0xada7:	test	rax, rax
0xadaa:	je	0xb0c8


0xb0c8:	mov	eax, 0xc
0xb0cd:	jmp	0xad06


0xadb0:	mov	rdx, qword ptr [rsp]
0xadb4:	mov	r8, qword ptr [rsp + 8]
0xadb9:	mov	qword ptr [rdx], rax
0xadbc:	mov	qword ptr [r8], r14
0xadbf:	mov	rcx, qword ptr [r13]
0xadc3:	jmp	0xac78


0xad06:	add	rsp, 0x10
0xad0a:	pop	rbx
0xad0b:	pop	rbp
0xad0c:	pop	r12
0xad0e:	pop	r13
0xad10:	pop	r14
0xad12:	ret	


0x5606:	test	rax, rax
0x5609:	jne	0x5610


0x560b:	test	rbx, rbx
0x560e:	jne	0x5621


0x5610:	pop	rbx
0x5611:	ret	


0x5621:	call	0x57e0


0x5ebf:	test	rax, rax
0x5ec2:	je	0x5ed0


0x5ed0:	xor	eax, eax
0x5ed2:	jmp	0x5e9a


0x5ec4:	mov	qword ptr [rbx + 0x10], rax
0x5ec8:	mov	rsi, qword ptr [rbx + 8]
0x5ecc:	jmp	0x5e89


0x5e9a:	add	rsp, 8
0x5e9e:	pop	rbx
0x5e9f:	pop	rbp
0x5ea0:	ret	


0x12e43:	test	rax, rax
0x12e46:	mov	rbx, rax
0x12e49:	je	0x12fe1


0x12fe1:	mov	eax, 0xc
0x12fe6:	jmp	0x1236c


0x12e4f:	mov	rax, qword ptr [rsp + 8]
0x12e54:	mov	qword ptr [rax + 8], 0xe8
0x12e5c:	mov	qword ptr [rax], rbx
0x12e5f:	jmp	0x12042


0x1236c:	mov	rbx, qword ptr [rsp + 0x118]
0x12374:	xor	rbx, qword ptr fs:[0x28]
0x1237d:	jne	0x130c0


0x12383:	add	rsp, 0x128
0x1238a:	pop	rbx
0x1238b:	pop	rbp
0x1238c:	pop	r12
0x1238e:	pop	r13
0x12390:	pop	r14
0x12392:	pop	r15
0x12394:	ret	


0x130c0:	call	0x1990


0x13f25:	mov	ebx, eax
0x13f27:	jmp	0x13ec0


0x13ec0:	mov	rcx, qword ptr [rsp + 0x18]
0x13ec5:	xor	rcx, qword ptr fs:[0x28]
0x13ece:	mov	eax, ebx
0x13ed0:	jne	0x1402d


0x13ed6:	add	rsp, 0x50
0x13eda:	pop	rbx
0x13edb:	pop	rbp
0x13edc:	pop	r12
0x13ede:	ret	


0x1402d:	call	0x1990


0x13eb9:	mov	ebx, eax
0x13ebb:	nop	dword ptr [rax + rax]
0x13ec0:	mov	rcx, qword ptr [rsp + 0x18]
0x13ec5:	xor	rcx, qword ptr fs:[0x28]
0x13ece:	mov	eax, ebx
0x13ed0:	jne	0x1402d


0x13f7c:	mov	ebx, eax
0x13f7e:	jmp	0x13ec0


0x13e65:	test	eax, eax
0x13e67:	mov	ebx, eax
0x13e69:	js	0x13ff8


0x13ff8:	call	0x18a0


0x13e6f:	mov	dword ptr [rip + 0x20757f], 1
0x13e79:	jmp	0x13ec0


0x13f8c:	test	eax, eax
0x13f8e:	mov	ebx, eax
0x13f90:	js	0x13ec0


0x13f96:	cmp	dword ptr [rip + 0x20745b], -1
0x13f9d:	jne	0x13ec0


0x13fa3:	xor	eax, eax
0x13fa5:	mov	esi, 1
0x13faa:	mov	edi, ebx
0x13fac:	call	0x1900


0x13fb1:	test	eax, eax
0x13fb3:	js	0x13fd1


0x13fd1:	call	0x18a0


0x13fb5:	or	eax, 1
0x13fb8:	mov	esi, 2
0x13fbd:	mov	edi, ebx
0x13fbf:	mov	edx, eax
0x13fc1:	xor	eax, eax
0x13fc3:	call	0x1900


0x13fc8:	cmp	eax, -1
0x13fcb:	jne	0x13ec0


0x14043:	mov	ebx, eax
0x14045:	jmp	0x13ec0


0x1406e:	test	eax, eax
0x14070:	je	0x1407a


0x14072:	test	dword ptr [rbx], 0x100
0x14078:	jne	0x14088


0x14088:	mov	rdi, rbx
0x1408b:	mov	edx, 1
0x14090:	xor	esi, esi
0x14092:	call	0x5820


0x1cb2:	lea	rsi, [rip + 0x12f48]
0x1cb9:	mov	edi, 6
0x1cbe:	call	0x1b50


0x3361:	cmp	r15d, 0xa
0x3365:	mov	qword ptr [rsp + 0x58], rax
0x336a:	ja	0x451f


0x3370:	lea	rcx, [rip + 0x113c9]
0x3377:	mov	edx, r15d
0x337a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x337e:	add	rax, rcx
0x3381:	jmp	rax


0x451f:	call	0x1890


0x13fd6:	mov	r12d, dword ptr [rax]
0x13fd9:	mov	rbp, rax
0x13fdc:	mov	edi, ebx
0x13fde:	call	0x1a20


0x1a20:	jmp	qword ptr [rip + 0x21747a]




0x13ffd:	cmp	dword ptr [rax], 0x16
0x14000:	jne	0x13e6f


0x14006:	xor	esi, esi
0x14008:	xor	eax, eax
0x1400a:	mov	edx, r12d
0x1400d:	mov	edi, ebp
0x1400f:	call	0x1900


0x14014:	test	eax, eax
0x14016:	mov	ebx, eax
0x14018:	js	0x13ec0


0x1401e:	mov	dword ptr [rip + 0x2073d0], 0xffffffff
0x14028:	jmp	0x13fa3


0x4551:	mov	r13, rax
0x4554:	mov	eax, dword ptr [rax]
0x4556:	test	r15d, r15d
0x4559:	mov	rbx, qword ptr [rip + 0x214b00]
0x4560:	mov	dword ptr [rsp + 0x18], eax
0x4564:	js	0x46d1


0x46d1:	call	0x1890


0x456a:	cmp	dword ptr [rip + 0x214ae7], r15d
0x4571:	jg	0x45d5


0x4573:	cmp	r15d, 0x7fffffff
0x457a:	je	0x46d6


0x45d5:	mov	eax, dword ptr [rbp + 4]
0x45d8:	shl	r15, 4
0x45dc:	sub	rsp, 8
0x45e0:	add	rbx, r15
0x45e3:	lea	r15, [rbp + 8]
0x45e7:	mov	r8d, dword ptr [rbp]
0x45eb:	mov	r11, qword ptr [rbx]
0x45ee:	mov	r12, qword ptr [rbx + 8]
0x45f2:	mov	rcx, r14
0x45f5:	or	eax, 1
0x45f8:	mov	dword ptr [rsp + 0x24], eax
0x45fc:	push	qword ptr [rbp + 0x30]
0x45ff:	mov	r9d, eax
0x4602:	push	qword ptr [rbp + 0x28]
0x4605:	push	r15
0x4607:	mov	rsi, r11
0x460a:	mov	rdx, qword ptr [rsp + 0x28]
0x460f:	mov	rdi, r12
0x4612:	mov	qword ptr [rsp + 0x30], r11
0x4617:	call	0x32f0


0x46d6:	call	0x57e0


0x4580:	lea	r12d, [r15 + 1]
0x4584:	lea	rax, [rip + 0x214ae5]
0x458b:	movsxd	rsi, r12d
0x458e:	shl	rsi, 4
0x4592:	cmp	rbx, rax
0x4595:	je	0x46b0


0x46b0:	xor	edi, edi
0x46b2:	call	0x55f0


0x459b:	mov	rdi, rbx
0x459e:	call	0x55f0


0x45a3:	mov	rbx, rax
0x45a6:	mov	qword ptr [rip + 0x214ab3], rax
0x45ad:	movsxd	rdi, dword ptr [rip + 0x214aa4]
0x45b4:	mov	edx, r12d
0x45b7:	xor	esi, esi
0x45b9:	sub	edx, edi
0x45bb:	shl	rdi, 4
0x45bf:	movsxd	rdx, edx
0x45c2:	add	rdi, rbx
0x45c5:	shl	rdx, 4
0x45c9:	call	0x1a10


0x45ce:	mov	dword ptr [rip + 0x214a83], r12d
0x45d5:	mov	eax, dword ptr [rbp + 4]
0x45d8:	shl	r15, 4
0x45dc:	sub	rsp, 8
0x45e0:	add	rbx, r15
0x45e3:	lea	r15, [rbp + 8]
0x45e7:	mov	r8d, dword ptr [rbp]
0x45eb:	mov	r11, qword ptr [rbx]
0x45ee:	mov	r12, qword ptr [rbx + 8]
0x45f2:	mov	rcx, r14
0x45f5:	or	eax, 1
0x45f8:	mov	dword ptr [rsp + 0x24], eax
0x45fc:	push	qword ptr [rbp + 0x30]
0x45ff:	mov	r9d, eax
0x4602:	push	qword ptr [rbp + 0x28]
0x4605:	push	r15
0x4607:	mov	rsi, r11
0x460a:	mov	rdx, qword ptr [rsp + 0x28]
0x460f:	mov	rdi, r12
0x4612:	mov	qword ptr [rsp + 0x30], r11
0x4617:	call	0x32f0


0x46b7:	movdqa	xmm0, xmmword ptr [rip + 0x2149b1]
0x46bf:	mov	rbx, rax
0x46c2:	mov	qword ptr [rip + 0x214997], rax
0x46c9:	movups	xmmword ptr [rax], xmm0
0x46cc:	jmp	0x45ad


0x45ad:	movsxd	rdi, dword ptr [rip + 0x214aa4]
0x45b4:	mov	edx, r12d
0x45b7:	xor	esi, esi
0x45b9:	sub	edx, edi
0x45bb:	shl	rdi, 4
0x45bf:	movsxd	rdx, edx
0x45c2:	add	rdi, rbx
0x45c5:	shl	rdx, 4
0x45c9:	call	0x1a10


0x46ec:	mov	r12d, dword ptr [rax]
0x46ef:	mov	rbp, rax
0x46f2:	lea	rax, [rip + 0x216cc7]
0x46f9:	test	rbx, rbx
0x46fc:	mov	esi, 0x38
0x4701:	cmove	rbx, rax
0x4705:	mov	rdi, rbx
0x4708:	call	0x5790


0x4822:	mov	r12d, dword ptr [rax]
0x4825:	mov	rbp, rax
0x4828:	lea	rax, [rbx + 8]
0x482c:	sub	rsp, 8
0x4830:	mov	r9d, dword ptr [rbx + 4]
0x4834:	push	qword ptr [rbx + 0x30]
0x4837:	mov	r8d, dword ptr [rbx]
0x483a:	push	qword ptr [rbx + 0x28]
0x483d:	mov	rdx, r15
0x4840:	push	rax
0x4841:	mov	rcx, qword ptr [rsp + 0x28]
0x4846:	mov	rsi, r14
0x4849:	mov	rdi, r13
0x484c:	call	0x32f0


0x489f:	test	r12, r12
0x48a2:	mov	r13, rax
0x48a5:	mov	eax, dword ptr [rax]
0x48a7:	sete	bpl
0x48ab:	or	ebp, dword ptr [rbx + 4]
0x48ae:	lea	r10, [rbx + 8]
0x48b2:	sub	rsp, 8
0x48b6:	mov	r8d, dword ptr [rbx]
0x48b9:	mov	rcx, r15
0x48bc:	mov	dword ptr [rsp + 0x14], eax
0x48c0:	push	qword ptr [rbx + 0x30]
0x48c3:	mov	rdx, r14
0x48c6:	push	qword ptr [rbx + 0x28]
0x48c9:	push	r10
0x48cb:	xor	esi, esi
0x48cd:	mov	r9d, ebp
0x48d0:	xor	edi, edi
0x48d2:	mov	qword ptr [rsp + 0x40], r10
0x48d7:	call	0x32f0


0x4eb6:	test	rax, rax
0x4eb9:	mov	rbp, rax
0x4ebc:	jns	0x4ee0


0x4ebe:	call	0x18a0


0x4ee0:	add	rsp, 8
0x4ee4:	mov	rax, rbp
0x4ee7:	pop	rbx
0x4ee8:	pop	rbp
0x4ee9:	pop	r12
0x4eeb:	pop	r13
0x4eed:	ret	


0x4ec3:	mov	eax, dword ptr [rax]
0x4ec5:	cmp	eax, 4
0x4ec8:	je	0x4ea8


0x4ea8:	mov	rdx, rbx
0x4eab:	mov	rsi, r12
0x4eae:	mov	edi, r13d
0x4eb1:	call	0x1a30


0x4eca:	cmp	rbx, 0x7ff00000
0x4ed1:	jbe	0x4ee0


0x4ed3:	cmp	eax, 0x16
0x4ed6:	jne	0x4ee0


0x4ed8:	mov	ebx, 0x7ff00000
0x4edd:	jmp	0x4ea8


0x26a6:	test	rax, rax
0x26a9:	mov	rdx, rax
0x26ac:	mov	rbx, qword ptr [rip + 0x218bb5]
0x26b3:	jne	0x271f


0x26b5:	test	r14, r14
0x26b8:	je	0x2ade


0x271f:	cmp	rax, rbx
0x2722:	je	0x274c


0x2ade:	test	rbx, rbx
0x2ae1:	mov	rdx, r14
0x2ae4:	je	0x274c


0x26be:	mov	edi, dword ptr [rsp + 0x1c]
0x26c2:	mov	rsi, rbx
0x26c5:	mov	edx, 1
0x26ca:	neg	rsi
0x26cd:	call	0x19f0


0x274c:	mov	rsi, qword ptr [rip + 0x218b1d]
0x2753:	mov	edi, dword ptr [rsp + 0x1c]
0x2757:	call	0x4e90


0x2724:	jmp	0x2b7b


0x2aea:	xor	ebx, ebx
0x2aec:	jmp	0x276b


0x2b7b:	mov	rbx, rax
0x2b7e:	jmp	0x2761


0x276b:	mov	r12, qword ptr [rip + 0x218afe]
0x2772:	mov	rax, qword ptr [rip + 0x218b07]
0x2779:	lea	rcx, [r12 + rbx]
0x277d:	mov	rdx, rcx
0x2780:	mov	qword ptr [rsp + 0x10], rcx
0x2785:	sub	rcx, qword ptr [rsp + 0x20]
0x278a:	mov	byte ptr [rsp + 0x20], 1
0x278f:	add	rcx, 1
0x2793:	test	rax, rax
0x2796:	cmovne	rdx, rcx
0x279a:	mov	r15, rdx
0x279d:	nop	dword ptr [rax]
0x27a0:	test	rax, rax
0x27a3:	jne	0x2943


0x2761:	cmp	rbx, -1
0x2765:	je	0x2a8d


0x27a9:	sub	r15, r12
0x27ac:	mov	r8d, 1
0x27b2:	sub	r8, r15
0x27b5:	cmp	r8, 1
0x27b9:	jg	0x2bac


0x2943:	cmp	byte ptr [r15 - 1], bpl
0x2947:	lea	rbx, [r15 - 1]
0x294b:	jne	0x2940


0x2a8d:	mov	rdx, qword ptr [rsp + 0x28]
0x2a92:	mov	esi, 3
0x2a97:	xor	edi, edi
0x2a99:	call	0x4ca0


0x27bf:	je	0x29d7


0x2bac:	lea	rsi, [rip + 0x115b0]
0x2bb3:	mov	edx, 5
0x2bb8:	xor	edi, edi
0x2bba:	call	0x1960


0x294d:	test	r13, r13
0x2950:	je	0x281f


0x2940:	mov	r15, rbx
0x2943:	cmp	byte ptr [r15 - 1], bpl
0x2947:	lea	rbx, [r15 - 1]
0x294b:	jne	0x2940


0x29d7:	lea	rbx, [r12 - 1]
0x29dc:	jmp	0x281f


0x27c5:	lea	rcx, [r15 - 1]
0x27c9:	lea	r9, [rip + 0x218930]
0x27d0:	lea	rdi, [rip + 0x218a49]
0x27d7:	mov	rdx, r15
0x27da:	mov	rsi, r12
0x27dd:	call	0x13a70


0x281f:	cmp	rbx, r12
0x2822:	jae	0x2978


0x2956:	mov	rsi, qword ptr [rsp + 8]
0x295b:	mov	rdx, r13
0x295e:	mov	rdi, r15
0x2961:	call	0x18c0


0x2828:	test	r14, r14
0x282b:	je	0x2af8


0x2978:	cmp	byte ptr [rip + 0x218909], 0
0x297f:	je	0x2a00


0x18c0:	jmp	qword ptr [rip + 0x21752a]


0x2af8:	mov	rsi, qword ptr [rsp + 0x10]
0x2afd:	mov	rdi, r12
0x2b00:	call	0x2530


0x2831:	mov	rbx, qword ptr [rsp + 0x10]
0x2836:	mov	rax, qword ptr [rip + 0x218a2b]
0x283d:	sub	rbx, r12
0x2840:	cmp	rax, rbx
0x2843:	jae	0x289c


0x2a00:	mov	rsi, qword ptr [rsp + 0x10]
0x2a05:	mov	rdi, rbx
0x2a08:	call	0x2530


0x2981:	movzx	ecx, byte ptr [rsp + 0x20]
0x2986:	mov	r15, qword ptr [rip + 0x2188eb]
0x298d:	add	r15, rbx
0x2990:	xor	ecx, 1
0x2993:	cmp	qword ptr [rsp + 0x10], r15
0x2998:	setne	dl
0x299b:	or	cl, dl
0x299d:	mov	byte ptr [rsp + 0x20], cl
0x29a1:	jne	0x2a20




0x2845:	mov	rdx, qword ptr [rip + 0x218a34]
0x284c:	lea	rsi, [rax + rax]
0x2850:	mov	rdi, qword ptr [rip + 0x218a09]
0x2857:	mov	r15d, 1
0x285d:	mov	qword ptr [rip + 0x218a04], rsi
0x2864:	lea	rsi, [rdx + rax*4 + 2]
0x2869:	test	rdx, rdx
0x286c:	cmovne	r15, rdx
0x2870:	cmp	rsi, rdi
0x2873:	mov	qword ptr [rip + 0x2189e6], rsi
0x287a:	jb	0x2b83


0x289c:	cmp	r14, rax
0x289f:	jb	0x29e8


0x29a3:	mov	qword ptr [rsp + 0x10], r15
0x29a8:	mov	rax, qword ptr [rip + 0x2188d1]
0x29af:	mov	r15, rbx
0x29b2:	test	rax, rax
0x29b5:	je	0x27a9


0x2a20:	mov	rsi, qword ptr [rsp + 0x10]
0x2a25:	mov	rdi, r15
0x2a28:	call	0x2530


0x2b83:	call	0x57e0


0x2880:	mov	rdi, r12
0x2883:	sub	rdi, r15
0x2886:	call	0x55f0


0x29e8:	mov	qword ptr [rip + 0x218879], r14
0x29ef:	xor	r14d, r14d
0x29f2:	jmp	0x28a8


0x28a5:	sub	r14, rax
0x28a8:	mov	edi, dword ptr [rsp + 0x1c]
0x28ac:	xor	edx, edx
0x28ae:	mov	rsi, r14
0x28b1:	call	0x19f0


0x29bb:	mov	edx, 1
0x29c0:	sub	rdx, qword ptr [rip + 0x2188b1]
0x29c7:	add	r15, rdx
0x29ca:	jmp	0x27a0


0x28a8:	mov	edi, dword ptr [rsp + 0x1c]
0x28ac:	xor	edx, edx
0x28ae:	mov	rsi, r14
0x28b1:	call	0x19f0


0x27a0:	test	rax, rax
0x27a3:	jne	0x2943


0x288b:	add	rax, r15
0x288e:	mov	qword ptr [rip + 0x2189db], rax
0x2895:	mov	rax, qword ptr [rip + 0x2189cc]
0x289c:	cmp	r14, rax
0x289f:	jb	0x29e8


0x2a2d:	mov	r12, qword ptr [rip + 0x21883c]
0x2a34:	mov	qword ptr [rsp + 0x10], r15
0x2a39:	mov	byte ptr [rsp + 0x20], 0
0x2a3e:	jmp	0x29a8


0x29a8:	mov	rax, qword ptr [rip + 0x2188d1]
0x29af:	mov	r15, rbx
0x29b2:	test	rax, rax
0x29b5:	je	0x27a9


0x2a0d:	mov	r12, qword ptr [rip + 0x21885c]
0x2a14:	mov	qword ptr [rsp + 0x10], rbx
0x2a19:	jmp	0x29a8


0x2b05:	add	rsp, 0x38
0x2b09:	mov	eax, 1
0x2b0e:	pop	rbx
0x2b0f:	pop	rbp
0x2b10:	pop	r12
0x2b12:	pop	r13
0x2b14:	pop	r14
0x2b16:	pop	r15
0x2b18:	ret	


0x27e2:	cmp	rax, -1
0x27e6:	je	0x29d0


0x29d0:	mov	r12, qword ptr [rip + 0x218899]
0x29d7:	lea	rbx, [r12 - 1]
0x29dc:	jmp	0x281f


0x27ec:	cmp	rax, -2
0x27f0:	je	0x2b88


0x2b88:	lea	rsi, [rip + 0x11779]
0x2b8f:	mov	edx, 5
0x2b94:	xor	edi, edi
0x2b96:	call	0x1960


0x27f6:	mov	rax, qword ptr [rip + 0x21890b]
0x27fd:	mov	r12, qword ptr [rip + 0x218a6c]
0x2804:	mov	rdx, qword ptr [rax]
0x2807:	mov	rax, qword ptr [rip + 0x218902]
0x280e:	mov	rax, qword ptr [rax]
0x2811:	lea	rbx, [r12 + rdx]
0x2815:	sub	rax, rdx
0x2818:	mov	qword ptr [rip + 0x218a59], rax
0x281f:	cmp	rbx, r12
0x2822:	jae	0x2978


0x275c:	test	rax, rax
0x275f:	jne	0x2730


0x2730:	cmp	rax, -1
0x2734:	je	0x2a8d


0x273a:	mov	rdx, qword ptr [rip + 0x218b27]
0x2741:	add	r14, rax
0x2744:	mov	rbx, rax
0x2747:	cmp	rdx, rax
0x274a:	jne	0x276b


0x28b6:	test	rax, rax
0x28b9:	js	0x2a48


0x2a48:	mov	rdx, qword ptr [rsp + 0x28]
0x2a4d:	xor	edi, edi
0x2a4f:	mov	esi, 3
0x2a54:	call	0x4ca0


0x28bf:	mov	r12, qword ptr [rip + 0x2189aa]
0x28c6:	mov	r8, qword ptr [rip + 0x21899b]
0x28cd:	mov	rdx, rbx
0x28d0:	lea	r15, [r12 + r8]
0x28d4:	mov	rsi, r12
0x28d7:	mov	qword ptr [rsp + 0x10], r8
0x28dc:	mov	rdi, r15
0x28df:	call	0x1b90


0x28e4:	mov	r8, qword ptr [rsp + 0x10]
0x28e9:	mov	edi, dword ptr [rsp + 0x1c]
0x28ed:	mov	rsi, r12
0x28f0:	add	rbx, r8
0x28f3:	cmp	qword ptr [rip + 0x218985], 0
0x28fb:	mov	rdx, r8
0x28fe:	lea	rax, [r12 + rbx]
0x2902:	mov	qword ptr [rsp + 0x10], rax
0x2907:	cmove	r15, rax
0x290b:	call	0x4e90


0x2910:	cmp	rax, qword ptr [rip + 0x218951]
0x2917:	jne	0x2a8d


0x291d:	mov	rax, qword ptr [rip + 0x21895c]
0x2924:	mov	r12, qword ptr [rip + 0x218945]
0x292b:	test	rax, rax
0x292e:	je	0x27a9


0x2934:	cmp	byte ptr [r15 - 1], bpl
0x2938:	lea	rbx, [r15 - 1]
0x293c:	je	0x294d


0x26d2:	test	rax, rax
0x26d5:	jns	0x2690


0x26d7:	mov	rdx, qword ptr [rsp + 0x28]
0x26dc:	mov	esi, 3
0x26e1:	xor	edi, edi
0x26e3:	call	0x4ca0


0x2690:	sub	r14, rbx
0x2693:	mov	rsi, qword ptr [rip + 0x218bd6]
0x269a:	mov	edi, dword ptr [rsp + 0x1c]
0x269e:	mov	rdx, rbx
0x26a1:	call	0x4e90


0x4ef9:	add	rsp, 8
0x4efd:	mov	edi, eax
0x4eff:	jmp	0x4f30


0x4f18:	mov	esi, ebx
0x4f1a:	mov	edi, eax
0x4f1c:	pop	rbx
0x4f1d:	jmp	0x13c50


0x2b9b:	xor	esi, esi
0x2b9d:	mov	rdx, rax
0x2ba0:	mov	edi, 1
0x2ba5:	xor	eax, eax
0x2ba7:	call	0x1ba0


0x1ba0:	jmp	qword ptr [rip + 0x2173ba]




0x2bbf:	xor	esi, esi
0x2bc1:	mov	rdx, rax
0x2bc4:	mov	edi, 1
0x2bc9:	xor	eax, eax
0x2bcb:	call	0x1ba0


0x4fbf:	lea	rdx, [rip + 0xff1a]
0x4fc6:	mov	rcx, rax
0x4fc9:	mov	r8d, 0x7e3
0x4fcf:	mov	esi, 1
0x4fd4:	mov	rdi, rbp
0x4fd7:	xor	eax, eax
0x4fd9:	call	0x1c20


0x4fde:	lea	rsi, [rip + 0xfc63]
0x4fe5:	xor	edi, edi
0x4fe7:	mov	edx, 5
0x4fec:	call	0x1960


0x4ff1:	mov	rsi, rbp
0x4ff4:	mov	rdi, rax
0x4ff7:	call	0x1a60


0x1a60:	jmp	qword ptr [rip + 0x21745a]




0x2c0d:	mov	rdi, qword ptr [rip + 0x2164ac]
0x2c14:	mov	rdx, rax
0x2c17:	mov	rcx, rbx
0x2c1a:	mov	esi, 1
0x2c1f:	xor	eax, eax
0x2c21:	call	0x1c20


0x2c26:	mov	edi, ebp
0x2c28:	call	0x1c00


0x1c00:	jmp	qword ptr [rip + 0x21738a]




0x2c3b:	mov	rdx, rbx
0x2c3e:	mov	rsi, rax
0x2c41:	mov	edi, 1
0x2c46:	xor	eax, eax
0x2c48:	call	0x1b60


0x1b60:	jmp	qword ptr [rip + 0x2173da]




0x13906:	mov	rdi, rax
0x13909:	mov	r13, rax
0x1390c:	call	0x1980


0x5524:	lea	rdx, [rip + 0xf6ec]
0x552b:	mov	rsi, rax
0x552e:	mov	edi, 1
0x5533:	xor	eax, eax
0x5535:	call	0x1b60


0x57f7:	mov	edi, dword ptr [rip + 0x21381b]
0x57fd:	lea	rdx, [rip + 0xee7c]
0x5804:	mov	rcx, rax
0x5807:	xor	esi, esi
0x5809:	xor	eax, eax
0x580b:	call	0x1ba0


0x58b7:	cmp	rax, -3
0x58bb:	mov	rbp, rax
0x58be:	jbe	0x58e0


0x58e0:	mov	rdx, qword ptr [rsp + 8]
0x58e5:	xor	rdx, qword ptr fs:[0x28]
0x58ee:	mov	rax, rbp
0x58f1:	jne	0x58fe


0x58c0:	test	r12, r12
0x58c3:	je	0x58e0


0x58f3:	add	rsp, 0x18
0x58f7:	pop	rbx
0x58f8:	pop	rbp
0x58f9:	pop	r12
0x58fb:	pop	r13
0x58fd:	ret	


0x58fe:	call	0x1990


0x58c5:	xor	edi, edi
0x58c7:	call	0x13cb0


0x9a14:	cmp	r12, rax
0x9a17:	mov	r8, qword ptr [rsp]
0x9a1b:	mov	r10d, dword ptr [rsp + 0xc]
0x9a20:	ja	0x9a2c


0x9a22:	cmp	rax, -3
0x9a26:	jbe	0x9bf1


0x9a2c:	mov	r11, qword ptr [rbx + 0x28]
0x9a30:	mov	rax, qword ptr [rbx + 0x38]
0x9a34:	jmp	0x96d1


0x9bf1:	mov	edx, dword ptr [rsp + 0x24]
0x9bf5:	sub	rax, r12
0x9bf8:	mov	qword ptr [rbx + 0x20], 0
0x9c00:	mov	r12, rax
0x9c03:	mov	qword ptr [rbx + 0x30], rax
0x9c07:	cmp	edx, -1
0x9c0a:	jne	0x9755


0x9c10:	jmp	0x9a2c


0x9755:	cmp	byte ptr [rbx + 0x8e], 0
0x975c:	jne	0x9bc9


0x9762:	xor	eax, eax
0x9764:	cmp	edx, 0xa
0x9767:	jne	0x9777


0x9bc9:	mov	edi, edx
0x9bcb:	mov	dword ptr [rsp], edx
0x9bce:	call	0x1ab0


0x9769:	xor	eax, eax
0x976b:	cmp	byte ptr [rbx + 0x8d], 0
0x9772:	setne	al
0x9775:	add	eax, eax
0x9777:	mov	dword ptr [rbx + 0x70], eax
0x977a:	cmp	r12, 0
0x977e:	jne	0x9b9a


0x9777:	mov	dword ptr [rbx + 0x70], eax
0x977a:	cmp	r12, 0
0x977e:	jne	0x9b9a


0x9bd3:	test	eax, eax
0x9bd5:	jne	0x9be3


0x9bd7:	mov	edx, dword ptr [rsp]
0x9bda:	cmp	edx, 0x5f
0x9bdd:	jne	0x9762


0x9be3:	mov	eax, 1
0x9be8:	jmp	0x9777


0xb898:	cmp	r12, rax
0xb89b:	jne	0xb767


0xb8a1:	mov	edi, dword ptr [rsp + 0x54]
0xb8a5:	call	0x1bd0


0xba1a:	cmp	rax, -2
0xba1e:	jne	0xba2a


0xba20:	movzx	eax, byte ptr [rsp + 0x54]
0xba25:	mov	byte ptr [rbp + rax], 1
0xba2a:	add	byte ptr [rsp + 0x54], 1
0xba2f:	jne	0xba00


0xba2a:	add	byte ptr [rsp + 0x54], 1
0xba2f:	jne	0xba00


0xba31:	jmp	0xb767


0xba00:	xor	edi, edi
0xba02:	mov	qword ptr [r12], 0
0xba0a:	mov	rcx, r12
0xba0d:	mov	edx, 1
0xba12:	mov	rsi, r13
0xba15:	call	0x5880


0x971f:	lea	rcx, [rax - 1]
0x9723:	mov	edx, dword ptr [rsp + 0x24]
0x9727:	mov	r8, qword ptr [rsp]
0x972b:	mov	r10d, dword ptr [rsp + 0xc]
0x9730:	cmp	rcx, -4
0x9734:	ja	0x9b75


0x973a:	add	r14, rax
0x973d:	cmp	r15, r14
0x9740:	jg	0x96f0


0x9b75:	test	rax, rax
0x9b78:	je	0x9bed


0x9742:	sub	r14, r15
0x9745:	cmp	edx, -1
0x9748:	mov	r12, r14
0x974b:	mov	qword ptr [rbx + 0x30], r14
0x974f:	je	0x9b29


0x96f0:	mov	r12, qword ptr [rbx + 0x50]
0x96f4:	mov	rsi, qword ptr [rbx]
0x96f7:	mov	rdi, r13
0x96fa:	mov	rax, qword ptr [rbx + 0x20]
0x96fe:	mov	rcx, qword ptr [rsp + 0x10]
0x9703:	mov	dword ptr [rsp + 0xc], r10d
0x9708:	mov	qword ptr [rsp], r8
0x970c:	sub	r12, r14
0x970f:	add	rsi, r14
0x9712:	mov	rdx, r12
0x9715:	mov	qword ptr [rsp + 0x18], rax
0x971a:	call	0x5880


0x9bed:	xor	edx, edx
0x9bef:	jmp	0x9b87


0x9b7a:	test	r12, r12
0x9b7d:	je	0x9bed


0x9b29:	lea	rsi, [r8 - 1]
0x9b2d:	mov	edx, r10d
0x9b30:	mov	rdi, rbx
0x9b33:	call	0x9200


0x9b87:	mov	rax, qword ptr [rsp + 0x18]
0x9b8c:	mov	qword ptr [rbx + 0x20], rax
0x9b90:	mov	eax, 1
0x9b95:	jmp	0x973a


0x9b7f:	mov	rax, qword ptr [rbx]
0x9b82:	movzx	edx, byte ptr [rax + r14]
0x9b87:	mov	rax, qword ptr [rsp + 0x18]
0x9b8c:	mov	qword ptr [rbx + 0x20], rax
0x9b90:	mov	eax, 1
0x9b95:	jmp	0x973a


0x642c:	mov	rbp, rax
0x642f:	lea	rax, [rax - 1]
0x6433:	cmp	rax, -4
0x6437:	mov	qword ptr [rsp + 0x20], rax
0x643c:	ja	0x6779


0x6442:	mov	edx, dword ptr [rsp + 0x44]
0x6446:	mov	edi, edx
0x6448:	mov	dword ptr [rsp + 0x10], edx
0x644c:	call	0x1be0


0x6779:	cmp	qword ptr [rsp + 0x20], -3
0x677f:	jne	0x678b


0x1be0:	jmp	qword ptr [rip + 0x21739a]


0x6781:	mov	rax, qword ptr [r14 + 0x58]
0x6785:	cmp	qword ptr [r14 + 0x40], rax
0x6789:	jl	0x6808


0x678b:	mov	rax, qword ptr [r14]
0x678e:	mov	rdx, qword ptr [r14 + 0x78]
0x6792:	add	rax, r13
0x6795:	add	rax, qword ptr [r14 + 0x28]
0x6799:	test	rdx, rdx
0x679c:	movzx	eax, byte ptr [rax]
0x679f:	jne	0x694c




0x6808:	mov	rax, qword ptr [rsp + 0x48]
0x680d:	mov	qword ptr [r14 + 0x20], rax
0x6811:	jmp	0x6395


0x67a5:	mov	rdx, qword ptr [r14 + 8]
0x67a9:	mov	rcx, r15
0x67ac:	mov	byte ptr [rdx + r15], al
0x67b0:	cmp	byte ptr [r14 + 0x8c], 0
0x67b8:	jne	0x693f


0x694c:	movzx	eax, byte ptr [rdx + rax]
0x6950:	jmp	0x67a5


0x67be:	mov	rdx, qword ptr [r14 + 0x10]
0x67c2:	add	r13, 1
0x67c6:	add	r15, 1
0x67ca:	cmp	rbp, -1
0x67ce:	mov	dword ptr [rdx + rcx*4], eax
0x67d1:	jne	0x6390


0x693f:	mov	rdx, qword ptr [r14 + 0x18]
0x6943:	mov	qword ptr [rdx + r15*8], r13
0x6947:	jmp	0x67be


0x67d7:	mov	rax, qword ptr [rsp + 0x48]
0x67dc:	mov	qword ptr [r14 + 0x20], rax
0x67e0:	jmp	0x6390


0x6390:	cmp	r15, rbx
0x6393:	jl	0x63d0


0x65a5:	mov	rbp, rax
0x65a8:	lea	rax, [rax - 1]
0x65ac:	cmp	rax, -4
0x65b0:	ja	0x6698


0x65b6:	mov	edx, dword ptr [rsp + 0x44]
0x65ba:	mov	edi, edx
0x65bc:	mov	dword ptr [rsp + 0x18], edx
0x65c0:	call	0x1be0


0x6698:	cmp	rax, -3
0x669c:	jne	0x66d0


0x669e:	mov	rax, qword ptr [r14 + 0x58]
0x66a2:	cmp	qword ptr [r14 + 0x40], rax
0x66a6:	jge	0x66d0


0x66d0:	mov	rax, qword ptr [r14]
0x66d3:	mov	rdx, qword ptr [r14 + 8]
0x66d7:	add	rax, r15
0x66da:	add	rax, qword ptr [r14 + 0x28]
0x66de:	movzx	eax, byte ptr [rax]
0x66e1:	mov	byte ptr [rdx + r15], al
0x66e5:	mov	rdx, qword ptr [r14 + 0x10]
0x66e9:	add	r15, 1
0x66ed:	cmp	rbp, -1
0x66f1:	mov	dword ptr [rdx + r13*4], eax
0x66f5:	jne	0x663a


0x66a8:	mov	rax, qword ptr [rsp + 0x48]
0x66ad:	mov	qword ptr [r14 + 0x20], rax
0x66b1:	nop	dword ptr [rax]
0x66b8:	mov	qword ptr [r14 + 0x30], r15
0x66bc:	mov	qword ptr [r14 + 0x38], r15
0x66c0:	xor	eax, eax
0x66c2:	jmp	0x639f


0x66fb:	mov	rax, qword ptr [rsp + 0x48]
0x6700:	mov	qword ptr [r14 + 0x20], rax
0x6704:	jmp	0x663a


0x61e4:	lea	rdx, [rax - 1]
0x61e8:	cmp	rdx, -3
0x61ec:	ja	0x6280


0x61f2:	cmp	rax, -2
0x61f6:	mov	edx, dword ptr [rsp + 0xc]
0x61fa:	je	0x6270


0x6280:	mov	rax, qword ptr [rbx]
0x6283:	mov	rcx, qword ptr [rbx + 0x78]
0x6287:	add	rax, rbp
0x628a:	add	rax, qword ptr [rbx + 0x28]
0x628e:	test	rcx, rcx
0x6291:	movzx	edx, byte ptr [rax]
0x6294:	mov	dword ptr [rsp + 0xc], edx
0x6298:	jne	0x6321


0x6270:	mov	rax, qword ptr [rbx + 0x58]
0x6274:	cmp	qword ptr [rbx + 0x40], rax
0x6278:	jl	0x6318


0x61fc:	mov	rcx, qword ptr [rbx + 0x10]
0x6200:	lea	rsi, [rbp + 1]
0x6204:	lea	rdi, [rbp*4]
0x620c:	mov	dword ptr [rcx + rbp*4], edx
0x620f:	add	rbp, rax
0x6212:	cmp	rsi, rbp
0x6215:	jge	0x6260


0x629e:	mov	qword ptr [rbx + 0x20], r15
0x62a2:	mov	eax, 1
0x62a7:	jmp	0x61fc


0x6321:	movzx	edx, byte ptr [rcx + rdx]
0x6325:	mov	dword ptr [rsp + 0xc], edx
0x6329:	jmp	0x629e


0x6318:	mov	qword ptr [rbx + 0x20], r15
0x631c:	jmp	0x6234


0x6217:	lea	rdx, [rcx + rdi + 4]
0x621c:	lea	rax, [rcx + rbp*4]
0x6220:	mov	dword ptr [rdx], 0xffffffff
0x6226:	add	rdx, 4
0x622a:	cmp	rax, rdx
0x622d:	jne	0x6220


0x6260:	mov	rbp, rsi
0x6263:	cmp	rbp, r12
0x6266:	jl	0x61b8


0x622f:	cmp	rbp, r12
0x6232:	jl	0x61b8


0x6220:	mov	dword ptr [rdx], 0xffffffff
0x6226:	add	rdx, 4
0x622a:	cmp	rax, rdx
0x622d:	jne	0x6220


0x61b8:	mov	rdi, qword ptr [rbx + 0x78]
0x61bc:	mov	rdx, r12
0x61bf:	mov	r15, qword ptr [rbx + 0x20]
0x61c3:	sub	rdx, rbp
0x61c6:	test	rdi, rdi
0x61c9:	jne	0x62b0


0x626c:	jmp	0x6234


0x6d61:	mov	rcx, qword ptr [rsp]
0x6d65:	mov	rdi, rcx
0x6d68:	call	0x1880


0x6d6d:	mov	rdi, rbp
0x6d70:	call	0x1880


0x6d75:	mov	rax, qword ptr [rsp + 8]
0x6d7a:	mov	rdi, rax
0x6d7d:	call	0x1880


0xd00c:	mov	eax, 0xc
0xd011:	jmp	0xcebb


0xce0e:	cmp	byte ptr [rbp - 0xc9], 0
0xce15:	je	0xca88


0xca88:	mov	rdi, qword ptr [rbp - 0x88]
0xca8f:	call	0xaae0


0xce1b:	mov	rdi, qword ptr [rbp - 0xc0]
0xce22:	call	0x1880


0xce27:	jmp	0xcd1e


0xcd1e:	cmp	qword ptr [rbp - 0x88], 0
0xcd26:	jne	0xca88


0xcd2c:	mov	eax, 0xc
0xcd31:	jmp	0xcca9


0xcca9:	mov	rbx, qword ptr [rbp - 0x38]
0xccad:	xor	rbx, qword ptr fs:[0x28]
0xccb6:	jne	0xce75


0xccbc:	lea	rsp, [rbp - 0x28]
0xccc0:	pop	rbx
0xccc1:	pop	r12
0xccc3:	pop	r13
0xccc5:	pop	r14
0xccc7:	pop	r15
0xccc9:	pop	rbp
0xccca:	ret	


0xce75:	call	0x1990


0xf196:	test	eax, eax
0xf198:	jne	0xf46d


0xf19e:	mov	rax, qword ptr [rbx]
0xf1a1:	movzx	r11d, byte ptr [rsp + 0x1ac]
0xf1aa:	mov	r10, qword ptr [rsp + 0x150]
0xf1b2:	xor	ecx, ecx
0xf1b4:	mov	r9, qword ptr [rsp + 0x138]
0xf1bc:	mov	r8, qword ptr [rsp + 0x158]
0xf1c4:	mov	rdi, qword ptr [rsp + 0xd8]
0xf1cc:	mov	rdx, qword ptr [rsp + 0xb8]
0xf1d4:	jmp	0xf1d9


0xf46d:	mov	rdi, qword ptr [rsp + 0x1d8]
0xf475:	mov	dword ptr [rsp + 0x5c], eax
0xf479:	jmp	0xe998


0xab79:	mov	rax, qword ptr [r12]
0xab7d:	mov	rdi, qword ptr [rax + rbx + 0x10]
0xab82:	call	0x1880


0xab87:	add	rbx, qword ptr [r12]
0xab8b:	movdqu	xmm0, xmmword ptr [rbx + 0x18]
0xab90:	movaps	xmmword ptr [rbp], xmm0
0xab94:	mov	rax, qword ptr [rbx + 0x28]
0xab98:	mov	qword ptr [rbp + 0x10], rax
0xab9c:	mov	rax, qword ptr [rbx + 8]
0xaba0:	pop	rbx
0xaba1:	pop	rbp
0xaba2:	pop	r12
0xaba4:	ret	


0xcb9b:	mov	rcx, qword ptr [rbp - 0x78]
0xcb9f:	mov	rbx, rax
0xcba2:	jmp	0xc69b


0xc69b:	lea	rax, [rbp - 0x78]
0xc69f:	mov	qword ptr [rbp - 0xb0], rax
0xc6a6:	jmp	0xc789


0xcb48:	mov	r9, rax
0xcb4b:	mov	rbx, rax
0xcb4e:	mov	r15, rax
0xcb51:	shl	r9, 4
0xcb55:	jmp	0xc6cc


0xce35:	cmp	byte ptr [rbp - 0xc9], 0
0xce3c:	mov	eax, 1
0xce41:	je	0xcca9


0xce47:	mov	rdi, qword ptr [rbp - 0xc0]
0xce4e:	mov	dword ptr [rbp - 0x88], eax
0xce54:	call	0x1880


0xce59:	mov	eax, dword ptr [rbp - 0x88]
0xce5f:	jmp	0xcca9


0xcd11:	cmp	byte ptr [rbp - 0xc9], 0
0xcd18:	jne	0xce1b


0xcae3:	cmp	byte ptr [rbp - 0xc9], 0
0xcaea:	jne	0xce64


0xcaf0:	mov	rdi, qword ptr [rbp - 0x88]
0xcaf7:	call	0xaae0


0xce64:	mov	rdi, qword ptr [rbp - 0xc0]
0xce6b:	call	0x1880


0xce70:	jmp	0xcaf0


0xcde5:	cmp	byte ptr [rbp - 0xc9], 0
0xcdec:	je	0xcca7


0xcca7:	xor	eax, eax
0xcca9:	mov	rbx, qword ptr [rbp - 0x38]
0xccad:	xor	rbx, qword ptr fs:[0x28]
0xccb6:	jne	0xce75


0xcdf2:	mov	rdi, qword ptr [rbp - 0xc0]
0xcdf9:	call	0x1880


0xcdfe:	xor	eax, eax
0xce00:	jmp	0xcca9


0xcc89:	cmp	byte ptr [rbp - 0xc9], 0
0xcc90:	jne	0xcd6c


0xcc96:	mov	rdi, qword ptr [rbp - 0x88]
0xcc9d:	test	rdi, rdi
0xcca0:	je	0xcca7


0xcd6c:	mov	rdi, qword ptr [rbp - 0xc0]
0xcd73:	call	0x1880


0xcca2:	call	0xaae0


0xcd78:	mov	rdi, qword ptr [rbp - 0x88]
0xcd7f:	test	rdi, rdi
0xcd82:	jne	0xcca2


0xcd88:	jmp	0xcca7


0x13738:	pop	rax
0x13739:	pop	rdx
0x1373a:	add	rsp, 0x28
0x1373e:	mov	rax, rbx
0x13741:	pop	rbx
0x13742:	pop	rbp
0x13743:	pop	r12
0x13745:	pop	r13
0x13747:	pop	r14
0x13749:	pop	r15
0x1374b:	ret	


0xc3ad:	mov	eax, dword ptr [rsp + 0x88]
0xc3b4:	mov	rbx, qword ptr [rsp + 0xc8]
0xc3bc:	xor	rbx, qword ptr fs:[0x28]
0xc3c5:	jne	0xc57c


0xc3ed:	mov	dword ptr [rsp + 0x88], 0
0xc3f8:	jmp	0xc178


0xc15d:	mov	eax, dword ptr [rsp + 0x8c]
0xc164:	test	eax, eax
0xc166:	mov	dword ptr [rsp + 0x88], eax
0xc16d:	jne	0xc3a0


0xc395:	mov	dword ptr [rsp + 0x88], 0xc
0xc3a0:	mov	rdi, qword ptr [rsp + 0xa0]
0xc3a8:	call	0x1880


0xc265:	mov	rax, qword ptr [r15 + 0xb8]
0xc26c:	mov	rbx, qword ptr [rsp + 0x40]
0xc271:	mov	rax, qword ptr [rax + rbx*8]
0xc275:	test	rax, rax
0xc278:	je	0xc555


0xc555:	mov	rax, qword ptr [rsp + 0x60]
0xc55a:	mov	qword ptr [rax], r12
0xc55d:	mov	rax, qword ptr [rsp + 0x68]
0xc562:	mov	qword ptr [r15 + 0xb8], rax
0xc569:	mov	rax, qword ptr [rsp + 0x70]
0xc56e:	mov	qword ptr [r15 + 0x48], rax
0xc572:	mov	eax, 1
0xc577:	jmp	0xc3b4


0xc27e:	mov	rbx, qword ptr [rsp + 0x60]
0xc283:	mov	rdx, qword ptr [rsp + 0x78]
0xc288:	lea	rsi, [rax + 0x18]
0xc28c:	mov	qword ptr [rbx], r12
0xc28f:	mov	rbx, qword ptr [rsp + 0x68]
0xc294:	mov	qword ptr [r15 + 0xb8], rbx
0xc29b:	mov	rbx, qword ptr [rsp + 0x70]
0xc2a0:	mov	qword ptr [r15 + 0x48], rbx
0xc2a4:	mov	rdi, qword ptr [rax + 0x10]
0xc2a8:	call	0x7420


0xc2ad:	test	rax, rax
0xc2b0:	sete	al
0xc2b3:	movzx	eax, al
0xc2b6:	jmp	0xc3b4


0xd511:	mov	rdx, qword ptr [r14 + 0xb8]
0xd518:	cmp	qword ptr [rdx + rbx*8], 0
0xd51d:	je	0xd7f1


0xd875:	mov	eax, dword ptr [rsp + 0x8c]
0xd87c:	jmp	0xd398


0xda31:	jmp	0xd967


0xebff:	mov	rdi, qword ptr [rsp + 0x1d8]
0xec07:	cmp	qword ptr [rdi + rbp*8], 0
0xec0c:	je	0xecf1


0x9e9d:	mov	eax, dword ptr [rsp]
0x9ea0:	jmp	0x9e68


0x9e68:	mov	rsi, qword ptr [rsp + 0x38]
0x9e6d:	xor	rsi, qword ptr fs:[0x28]
0x9e76:	jne	0x9ea6


0x9e78:	add	rsp, 0x48
0x9e7c:	pop	rbx
0x9e7d:	pop	rbp
0x9e7e:	pop	r12
0x9e80:	pop	r13
0x9e82:	pop	r14
0x9e84:	pop	r15
0x9e86:	ret	


0x9ea6:	call	0x1990


0xfb1d:	test	eax, eax
0xfb1f:	jne	0xf608


0xfb25:	sub	rbp, 1
0xfb29:	jmp	0xfab8


0xfa7f:	test	eax, eax
0xfa81:	jne	0xf608


0xfa87:	test	r14, r14
0xfa8a:	js	0xf9dd


0xfa90:	cmp	qword ptr [rbx + 8], 0
0xfa95:	jle	0xf9dd


0xfa9b:	mov	r10, qword ptr [rbx + 0x10]
0xfa9f:	xor	r14d, r14d
0xfaa2:	mov	qword ptr [rsp + 0x30], rbp
0xfaa7:	mov	rbp, r14
0xfaaa:	mov	r14, qword ptr [rsp + 0x28]
0xfaaf:	jmp	0xfaca


0xf9c1:	test	eax, eax
0xf9c3:	jne	0xf608


0xf9c9:	add	r14, 1
0xf9cd:	cmp	r14, qword ptr [rbx + 8]
0xf9d1:	jl	0xf98a


0x8ef7:	mov	rax, qword ptr [rbx + 0xb8]
0x8efe:	cmp	qword ptr [rax + r14*8], 0
0x8f03:	je	0x9045


0x9045:	mov	eax, dword ptr [rsp + 0x4c]
0x9049:	test	eax, eax
0x904b:	je	0x8f09


0x9051:	jmp	0x8dcf


0x8dcf:	mov	rbx, qword ptr [rsp + 0x68]
0x8dd4:	xor	rbx, qword ptr fs:[0x28]
0x8ddd:	jne	0x90a9


0x9060:	mov	eax, dword ptr [rsp + 0x4c]
0x9064:	test	eax, eax
0x9066:	jne	0x8dcf


0x906c:	mov	eax, 0xc
0x9071:	jmp	0x8dcf


0xe99d:	mov	rax, qword ptr [rsp + 0x38]
0xe9a2:	cmp	qword ptr [rax + 0x98], 0
0xe9aa:	jne	0xf2d0


0xe9b0:	mov	rdi, qword ptr [rsp]
0xe9b4:	call	0x7110


0xf2d0:	mov	rdi, qword ptr [rsp]
0xf2d4:	call	0x72b0


0xf2d9:	mov	rdi, qword ptr [rsp + 0x218]
0xf2e1:	call	0x1880


0xf2e6:	mov	rdi, qword ptr [rsp + 0x1f8]
0xf2ee:	call	0x1880


0xf2f3:	jmp	0xe9b0


0x8cbb:	mov	eax, dword ptr [rsp + 0x1c]
0x8cbf:	test	eax, eax
0x8cc1:	jne	0x8ce8


0xfd9b:	mov	eax, dword ptr [rsp + 8]
0xfd9f:	jmp	0xf608


0x9e66:	xor	eax, eax
0x9e68:	mov	rsi, qword ptr [rsp + 0x38]
0x9e6d:	xor	rsi, qword ptr fs:[0x28]
0x9e76:	jne	0x9ea6


0x49ed:	mov	qword ptr [rip + 0x21466c], rbx
0x49f4:	pop	rbx
0x49f5:	mov	dword ptr [rip + 0x214659], 1
0x49ff:	pop	rbp
0x4a00:	pop	r12
0x4a02:	ret	


0x49c7:	mov	qword ptr [rip + 0x21469e], 0x100
0x49d2:	mov	qword ptr [rip + 0x21469f], rbx
0x49d9:	lea	rbx, [rip + 0x214690]
0x49e0:	cmp	r12, rbx
0x49e3:	je	0x49f4


0x561d:	xor	eax, eax
0x561f:	pop	rbx
0x5620:	ret	


0x72fe:	mov	rdi, rbp
0x7301:	call	0x1880


0x7306:	cmp	qword ptr [r12 + 0x20], rbx
0x730b:	jg	0x72e8


0x72e8:	mov	rax, qword ptr [r12 + 0x28]
0x72ed:	mov	rbp, qword ptr [rax + rbx*8]
0x72f1:	add	rbx, 1
0x72f5:	mov	rdi, qword ptr [rbp + 0x20]
0x72f9:	call	0x1880


0x7317:	mov	rax, qword ptr [r12 + 0x10]
0x731c:	test	rax, rax
0x731f:	je	0x7334


0x7334:	mov	rdi, r12
0x7337:	add	r13, 1
0x733b:	call	0x1880


0x7321:	mov	rdi, qword ptr [rax + 0x10]
0x7325:	call	0x1880


0x732a:	mov	rdi, qword ptr [r12 + 0x10]
0x732f:	call	0x1880


0x7340:	cmp	qword ptr [r14 + 0xe8], r13
0x7347:	jg	0x72d0


0x72d0:	mov	rax, qword ptr [r14 + 0xf8]
0x72d7:	mov	r12, qword ptr [rax + r13*8]
0x72db:	cmp	qword ptr [r12 + 0x20], 0
0x72e1:	jle	0x730d


0x49ac:	cmp	rbx, rbp
0x49af:	jne	0x49a0


0x49a0:	mov	rdi, qword ptr [rbx]
0x49a3:	add	rbx, 0x10
0x49a7:	call	0x1880


0x7198:	cmp	qword ptr [r12 + 0x10], 0
0x719e:	je	0x71f3


0x71f3:	mov	rdi, qword ptr [r12 + 0x28]
0x71f8:	call	0x1880


0x71a0:	xor	ebx, ebx
0x71a2:	xor	ebp, ebp
0x71a4:	nop	dword ptr [rax]
0x71a8:	mov	rax, qword ptr [r12 + 0x30]
0x71ad:	test	rax, rax
0x71b0:	je	0x71bc


0x71bc:	mov	rax, qword ptr [r12 + 0x38]
0x71c1:	test	rax, rax
0x71c4:	je	0x71d0


0x71b2:	mov	rdi, qword ptr [rax + rbx + 0x10]
0x71b7:	call	0x1880


0x71d0:	mov	rax, qword ptr [r12 + 0x28]
0x71d5:	test	rax, rax
0x71d8:	je	0x71e4


0x71c6:	mov	rdi, qword ptr [rax + rbx + 0x10]
0x71cb:	call	0x1880


0x71e4:	add	rbp, 1
0x71e8:	add	rbx, 0x18
0x71ec:	cmp	qword ptr [r12 + 0x10], rbp
0x71f1:	ja	0x71a8


0x71da:	mov	rdi, qword ptr [rax + rbx + 0x10]
0x71df:	call	0x1880


0x71a8:	mov	rax, qword ptr [r12 + 0x30]
0x71ad:	test	rax, rax
0x71b0:	je	0x71bc


0x71fd:	mov	rdi, qword ptr [r12 + 0x30]
0x7202:	call	0x1880


0x7207:	mov	rdi, qword ptr [r12 + 0x38]
0x720c:	call	0x1880


0x7211:	mov	rdi, qword ptr [r12]
0x7215:	call	0x1880


0x721a:	mov	rdi, qword ptr [r12 + 0x40]
0x721f:	test	rdi, rdi
0x7222:	je	0x7277


0x7277:	call	0x1880


0x7224:	xor	r14d, r14d
0x7227:	xor	r13d, r13d
0x722a:	nop	word ptr [rax + rax]
0x7230:	lea	rbp, [rdi + r14]
0x7234:	cmp	qword ptr [rbp], 0
0x7239:	jle	0x7257


0x7257:	mov	rdi, qword ptr [rbp + 0x10]
0x725b:	add	r13, 1
0x725f:	add	r14, 0x18
0x7263:	call	0x1880


0x723b:	xor	ebx, ebx
0x723d:	nop	dword ptr [rax]
0x7240:	mov	rax, qword ptr [rbp + 0x10]
0x7244:	mov	rdi, qword ptr [rax + rbx*8]
0x7248:	add	rbx, 1
0x724c:	call	0x70b0


0x7268:	cmp	qword ptr [r12 + 0x88], r13
0x7270:	mov	rdi, qword ptr [r12 + 0x40]
0x7275:	jae	0x7230


0x7230:	lea	rbp, [rdi + r14]
0x7234:	cmp	qword ptr [rbp], 0
0x7239:	jle	0x7257


0x727c:	mov	rdi, qword ptr [r12 + 0x78]
0x7281:	lea	rax, [rip + 0xe2b8]
0x7288:	cmp	rdi, rax
0x728b:	je	0x7292


0x7292:	mov	rdi, qword ptr [r12 + 0xe0]
0x729a:	call	0x1880


0x728d:	call	0x1880


0x729f:	pop	rbx
0x72a0:	mov	rdi, r12
0x72a3:	pop	rbp
0x72a4:	pop	r12
0x72a6:	pop	r13
0x72a8:	pop	r14
0x72aa:	jmp	0x1880


0xab0a:	mov	rax, qword ptr [rbp + 0x10]
0xab0e:	mov	rdi, qword ptr [rax + rbx + 0x10]
0xab13:	add	rbx, 0x30
0xab17:	call	0x1880


0xab1c:	cmp	r12, qword ptr [rbp]
0xab20:	jl	0xaaf8


0xaaf8:	mov	rax, qword ptr [rbp + 0x10]
0xaafc:	add	r12, 1
0xab00:	mov	rdi, qword ptr [rax + rbx + 0x28]
0xab05:	call	0x1880


0x13989:	mov	rdi, qword ptr [rbx + 0x28]
0x1398d:	mov	qword ptr [rbx + 0x20], 0
0x13995:	call	0x1880


0x1399a:	mov	qword ptr [rbx + 0x28], 0
0x139a2:	pop	rbx
0x139a3:	ret	


0x6b4c:	mov	rdi, qword ptr [rbx + 8]
0x6b50:	call	0x1880


0x6b55:	mov	rdi, qword ptr [rbx + 0x10]
0x6b59:	call	0x1880


0x6b5e:	mov	rdi, qword ptr [rbx + 0x18]
0x6b62:	call	0x1880


0x6b67:	mov	rdi, rbx
0x6b6a:	pop	rbx
0x6b6b:	jmp	0x1880


0x70bd:	mov	rdi, qword ptr [rbx + 0x48]
0x70c1:	call	0x1880


0x70c6:	mov	rax, qword ptr [rbx + 0x50]
0x70ca:	lea	rdx, [rbx + 8]
0x70ce:	cmp	rax, rdx
0x70d1:	je	0x70e5


0x70e5:	mov	rdi, qword ptr [rbx + 0x18]
0x70e9:	call	0x1880


0x70d3:	mov	rdi, qword ptr [rax + 0x10]
0x70d7:	call	0x1880


0x70dc:	mov	rdi, qword ptr [rbx + 0x50]
0x70e0:	call	0x1880


0x70ee:	mov	rdi, qword ptr [rbx + 0x60]
0x70f2:	call	0x1880


0x70f7:	mov	rdi, qword ptr [rbx + 0x58]
0x70fb:	call	0x1880


0x7100:	mov	rdi, rbx
0x7103:	pop	rbx
0x7104:	jmp	0x1880


0x711d:	mov	rdi, qword ptr [rbx + 0x18]
0x7121:	call	0x1880


0x7126:	cmp	byte ptr [rbx + 0x8b], 0
0x712d:	jne	0x7138


0x712f:	pop	rbx
0x7130:	ret	


0x7138:	mov	rdi, qword ptr [rbx + 8]
0x713c:	pop	rbx
0x713d:	jmp	0x1880


0xd6e3:	test	rax, rax
0xd6e6:	je	0xd789


0xd6ec:	mov	rdx, qword ptr [r12 + 0x20]
0xd6f1:	mov	rcx, qword ptr [r12 + 0x28]
0xd6f6:	mov	rsi, r12
0xd6f9:	mov	r8, qword ptr [rsp + 8]
0xd6fe:	mov	rdi, r14
0xd701:	mov	qword ptr [rcx + rdx*8], rax
0xd705:	mov	rcx, qword ptr [rsp + 0x30]
0xd70a:	add	rdx, 1
0xd70e:	mov	qword ptr [rax], rbp
0xd711:	mov	qword ptr [rax + 8], rbx
0xd715:	mov	qword ptr [r12 + 0x20], rdx
0xd71a:	mov	rdx, rax
0xd71d:	call	0xce80


0xd722:	cmp	eax, 1
0xd725:	mov	r11, qword ptr [r14 + 8]
0xd729:	ja	0xd398


0xd76e:	test	rax, rax
0xd771:	mov	rsi, rax
0xd774:	mov	qword ptr [r12 + 0x10], rax
0xd779:	mov	rcx, qword ptr [rsp + 0x10]
0xd77e:	mov	r11, qword ptr [rsp + 0x18]
0xd783:	jne	0xd692


0x9151:	mov	r8, qword ptr [rsp + 8]
0x9156:	mov	r9, qword ptr [rsp + 0x10]
0x915b:	test	rax, rax
0x915e:	mov	qword ptr [r9 + r8*8], rax
0x9162:	je	0x91a1


0x9164:	add	r8, 1
0x9168:	add	rbx, 1
0x916c:	mov	rcx, qword ptr [rsp + 0x18]
0x9171:	mov	qword ptr [r15 + 0xe8], r8
0x9178:	cmp	rbx, qword ptr [r12]
0x917c:	mov	qword ptr [rax + 8], rbp
0x9180:	mov	qword ptr [rax], rcx
0x9183:	jl	0x90ee


0x883f:	test	rax, rax
0x8842:	mov	r14, rax
0x8845:	je	0x8986


0x8986:	mov	rax, qword ptr [rsp + 0x18]
0x898b:	xor	r14d, r14d
0x898e:	mov	dword ptr [rax], 0xc
0x8994:	jmp	0x881c


0x884b:	lea	rax, [rax + 8]
0x884f:	mov	rsi, rbp
0x8852:	mov	rdi, rax
0x8855:	mov	rbx, rax
0x8858:	call	0x8580


0x885d:	test	eax, eax
0x885f:	jne	0x8a1d


0x8865:	movzx	eax, byte ptr [r14 + 0x68]
0x886a:	movzx	edx, byte ptr [rsp + 4]
0x886f:	mov	qword ptr [r14 + 0x50], rbx
0x8873:	and	edx, 0xf
0x8876:	and	eax, 0xfffffff0
0x8879:	or	eax, edx
0x887b:	cmp	qword ptr [rbp + 8], 0
0x8880:	mov	byte ptr [r14 + 0x68], al
0x8884:	jle	0x8968


0x8a1d:	mov	rdi, r14
0x8a20:	call	0x1880


0x8968:	mov	rdx, r12
0x896b:	mov	rsi, r14
0x896e:	mov	rdi, r13
0x8971:	call	0x6010


0x888a:	lea	rcx, [r14 + 0x18]
0x888e:	xor	r15d, r15d
0x8891:	mov	qword ptr [rsp + 0x10], r12
0x8896:	xor	r10d, r10d
0x8899:	mov	r12, r13
0x889c:	mov	r13, r15
0x889f:	mov	qword ptr [rsp + 8], rcx
0x88a4:	mov	r15, rbx
0x88a7:	nop	word ptr [rax + rax]
0x88b0:	mov	rax, qword ptr [rbp + 0x10]
0x88b4:	mov	rax, qword ptr [rax + r13*8]
0x88b8:	shl	rax, 4
0x88bc:	add	rax, qword ptr [r12]
0x88c0:	movzx	esi, byte ptr [rax + 8]
0x88c4:	mov	ebx, dword ptr [rax + 8]
0x88c7:	shr	ebx, 8
0x88ca:	and	bx, 0x3ff
0x88cf:	cmp	esi, 1
0x88d2:	movzx	edi, bx
0x88d5:	jne	0x88db


0x88d7:	test	edi, edi
0x88d9:	je	0x8952


0x88db:	movzx	edx, byte ptr [r14 + 0x68]
0x88e0:	movzx	eax, byte ptr [rax + 0xa]
0x88e4:	mov	r9d, edx
0x88e7:	shr	al, 4
0x88ea:	and	edx, 0xffffffdf
0x88ed:	shr	r9b, 5
0x88f1:	or	eax, r9d
0x88f4:	and	eax, 1
0x88f7:	shl	eax, 5
0x88fa:	or	eax, edx
0x88fc:	cmp	esi, 2
0x88ff:	mov	byte ptr [r14 + 0x68], al
0x8903:	je	0x89d0


0x8952:	add	r13, 1
0x8956:	cmp	r13, qword ptr [rbp + 8]
0x895a:	jl	0x88b0


0x89d0:	or	eax, 0x10
0x89d3:	mov	byte ptr [r14 + 0x68], al
0x89d7:	jmp	0x8915


0x8909:	cmp	esi, 4
0x890c:	jne	0x8915


0x88b0:	mov	rax, qword ptr [rbp + 0x10]
0x88b4:	mov	rax, qword ptr [rax + r13*8]
0x88b8:	shl	rax, 4
0x88bc:	add	rax, qword ptr [r12]
0x88c0:	movzx	esi, byte ptr [rax + 8]
0x88c4:	mov	ebx, dword ptr [rax + 8]
0x88c7:	shr	ebx, 8
0x88ca:	and	bx, 0x3ff
0x88cf:	cmp	esi, 1
0x88d2:	movzx	edi, bx
0x88d5:	jne	0x88db


0x8960:	mov	r13, r12
0x8963:	mov	r12, qword ptr [rsp + 0x10]
0x8968:	mov	rdx, r12
0x896b:	mov	rsi, r14
0x896e:	mov	rdi, r13
0x8971:	call	0x6010


0x8915:	test	edi, edi
0x8917:	je	0x8952


0x890e:	or	eax, 0x40
0x8911:	mov	byte ptr [r14 + 0x68], al
0x8915:	test	edi, edi
0x8917:	je	0x8952


0x8919:	cmp	r15, qword ptr [r14 + 0x50]
0x891d:	je	0x89e0


0x89e0:	mov	edi, 0x18
0x89e5:	call	0x1ac0


0x8923:	test	bl, 1
0x8926:	je	0x89a0


0x89a0:	test	bl, 2
0x89a3:	je	0x89ac


0x8928:	test	byte ptr [rsp + 4], 1
0x892d:	je	0x8938


0x89ac:	test	bl, 0x10
0x89af:	je	0x89b8


0x89a5:	test	byte ptr [rsp + 4], 1
0x89aa:	jne	0x8938


0x8938:	mov	rdx, r13
0x893b:	sub	rdx, r10
0x893e:	js	0x894e


0x892f:	test	bl, 2
0x8932:	je	0x89ac


0x89b8:	and	ebx, 0x40
0x89bb:	je	0x8952


0x89b1:	test	byte ptr [rsp + 4], 2
0x89b6:	je	0x8938


0x894e:	add	r10, 1
0x8952:	add	r13, 1
0x8956:	cmp	r13, qword ptr [rbp + 8]
0x895a:	jl	0x88b0


0x8940:	mov	rsi, qword ptr [rsp + 8]
0x8945:	lea	rdi, [r14 + 0x10]
0x8949:	call	0x75a0


0x89bd:	test	byte ptr [rsp + 4], 4
0x89c2:	jne	0x8952


0x89c4:	jmp	0x8938


0x8a25:	jmp	0x8986


0x8ad5:	test	rax, rax
0x8ad8:	mov	rbx, rax
0x8adb:	je	0x8c08


0x8c08:	mov	dword ptr [r13], 0xc
0x8c10:	xor	ebx, ebx
0x8c12:	jmp	0x8bbf


0x8ae1:	lea	r15, [rax + 8]
0x8ae5:	mov	rsi, r14
0x8ae8:	mov	rdi, r15
0x8aeb:	call	0x8580


0x8af0:	test	eax, eax
0x8af2:	jne	0x8c00


0x8af8:	mov	rax, qword ptr [r14 + 8]
0x8afc:	mov	qword ptr [rbx + 0x50], r15
0x8b00:	test	rax, rax
0x8b03:	jle	0x8bad


0x8c00:	mov	rdi, rbx
0x8c03:	call	0x1880


0x8bad:	mov	rdx, rbp
0x8bb0:	mov	rsi, rbx
0x8bb3:	mov	rdi, r12
0x8bb6:	call	0x6010


0x8b09:	mov	rsi, qword ptr [r14 + 0x10]
0x8b0d:	mov	r8, qword ptr [r12]
0x8b11:	lea	r9, [rsi + rax*8]
0x8b15:	jmp	0x8b64


0x8b64:	mov	rax, qword ptr [rsi]
0x8b67:	shl	rax, 4
0x8b6b:	add	rax, r8
0x8b6e:	movzx	edi, byte ptr [rax + 8]
0x8b72:	cmp	edi, 1
0x8b75:	jne	0x8b20


0x8b77:	test	dword ptr [rax + 8], 0x3ff00
0x8b7e:	je	0x8b5b


0x8b20:	movzx	ecx, byte ptr [rbx + 0x68]
0x8b24:	movzx	edx, byte ptr [rax + 0xa]
0x8b28:	mov	r10d, ecx
0x8b2b:	shr	dl, 4
0x8b2e:	and	ecx, 0xffffffdf
0x8b31:	shr	r10b, 5
0x8b35:	or	edx, r10d
0x8b38:	and	edx, 1
0x8b3b:	shl	edx, 5
0x8b3e:	or	edx, ecx
0x8b40:	cmp	edi, 2
0x8b43:	mov	byte ptr [rbx + 0x68], dl
0x8b46:	je	0x8bd8


0x8b5b:	add	rsi, 8
0x8b5f:	cmp	r9, rsi
0x8b62:	je	0x8bad


0x8b80:	movzx	edx, byte ptr [rbx + 0x68]
0x8b84:	movzx	eax, byte ptr [rax + 0xa]
0x8b88:	mov	ecx, edx
0x8b8a:	shr	al, 4
0x8b8d:	and	edx, 0xffffffdf
0x8b90:	shr	cl, 5
0x8b93:	or	eax, ecx
0x8b95:	and	eax, 1
0x8b98:	shl	eax, 5
0x8b9b:	or	eax, edx
0x8b9d:	mov	byte ptr [rbx + 0x68], al
0x8ba0:	add	rsi, 8
0x8ba4:	or	byte ptr [rbx + 0x68], 0x80
0x8ba8:	cmp	r9, rsi
0x8bab:	jne	0x8b64


0x8bd8:	or	edx, 0x10
0x8bdb:	mov	byte ptr [rbx + 0x68], dl
0x8bde:	jmp	0x8b5b


0x8b4c:	cmp	edi, 4
0x8b4f:	jne	0x8be8


0x8b55:	or	edx, 0x40
0x8b58:	mov	byte ptr [rbx + 0x68], dl
0x8b5b:	add	rsi, 8
0x8b5f:	cmp	r9, rsi
0x8b62:	je	0x8bad


0x8be8:	cmp	edi, 0xc
0x8beb:	je	0x8ba0


0x8ba0:	add	rsi, 8
0x8ba4:	or	byte ptr [rbx + 0x68], 0x80
0x8ba8:	cmp	r9, rsi
0x8bab:	jne	0x8b64


0x8bed:	test	dword ptr [rax + 8], 0x3ff00
0x8bf4:	je	0x8b5b


0x8bfa:	jmp	0x8ba0


0x577f:	test	rax, rax
0x5782:	je	0x5789


0x5784:	add	rsp, 8
0x5788:	ret	


0xb47b:	test	rax, rax
0xb47e:	je	0xb640


0xb640:	mov	rax, qword ptr [rsp + 8]
0xb645:	xor	r14d, r14d
0xb648:	mov	dword ptr [rax], 0xc
0xb64e:	jmp	0xb5f2


0xb484:	mov	esi, 1
0xb489:	mov	edi, 0x50
0xb48e:	mov	rbx, rax
0xb491:	call	0x1a70


0xb5f2:	mov	rdi, qword ptr [rsp + 0x48]
0xb5f7:	xor	rdi, qword ptr fs:[0x28]
0xb600:	mov	rax, r14
0xb603:	jne	0xb695


0xb609:	add	rsp, 0x58
0xb60d:	pop	rbx
0xb60e:	pop	rbp
0xb60f:	pop	r12
0xb611:	pop	r13
0xb613:	pop	r14
0xb615:	pop	r15
0xb617:	ret	


0xb695:	call	0x1990


0xb496:	test	rax, rax
0xb499:	mov	r15, rax
0xb49c:	je	0xb650


0xb650:	mov	rdi, rbx
0xb653:	xor	r14d, r14d
0xb656:	call	0x1880


0xb4a2:	movzx	eax, byte ptr [rax + 0x20]
0xb4a6:	sub	rsp, 8
0xb4aa:	mov	edx, r12d
0xb4ad:	push	0
0xb4af:	and	edx, 1
0xb4b2:	mov	rdi, qword ptr [rsp + 0x10]
0xb4b7:	lea	rcx, [r15 + 0x48]
0xb4bb:	mov	r9, r14
0xb4be:	mov	rsi, rbx
0xb4c1:	lea	r8, [rsp + 0x28]
0xb4c6:	and	eax, 0xfffffffe
0xb4c9:	or	eax, edx
0xb4cb:	lea	rdx, [r15 + 0x18]
0xb4cf:	mov	byte ptr [r15 + 0x20], al
0xb4d3:	call	0xac20


0xb4d8:	test	eax, eax
0xb4da:	pop	rdx
0xb4db:	pop	rcx
0xb4dc:	jne	0xb670


0xb4e2:	movsx	rcx, byte ptr [r13]
0xb4e7:	mov	esi, 1
0xb4ec:	test	cl, cl
0xb4ee:	je	0xb52a


0xb670:	mov	rdi, rbx
0xb673:	mov	dword ptr [rsp], eax
0xb676:	xor	r14d, r14d
0xb679:	call	0x1880


0xb52a:	test	r12b, r12b
0xb52d:	je	0xb542


0xb4f0:	lea	rax, [rcx + 0x3f]
0xb4f4:	test	rcx, rcx
0xb4f7:	mov	rdx, rcx
0xb4fa:	cmovns	rax, rcx
0xb4fe:	sar	rdx, 0x3f
0xb502:	add	r13, 1
0xb506:	shr	rdx, 0x3a
0xb50a:	sar	rax, 6
0xb50e:	add	rcx, rdx
0xb511:	and	ecx, 0x3f
0xb514:	sub	rcx, rdx
0xb517:	mov	rdx, rsi
0xb51a:	shl	rdx, cl
0xb51d:	movsx	rcx, byte ptr [r13]
0xb522:	or	qword ptr [rbx + rax*8], rdx
0xb526:	test	cl, cl
0xb528:	jne	0xb4f0


0xb542:	cmp	dword ptr [rbp + 0xb4], 1
0xb549:	jle	0xb563


0xb52f:	lea	rdx, [rbx + 0x20]
0xb533:	mov	rax, rbx
0xb536:	not	qword ptr [rax]
0xb539:	add	rax, 8
0xb53d:	cmp	rdx, rax
0xb540:	jne	0xb536


0xb563:	lea	r9, [rsp + 0x20]
0xb568:	lea	r12, [rbp + 0x70]
0xb56c:	lea	r13, [rbp + 0x80]
0xb573:	xor	ecx, ecx
0xb575:	xor	edx, edx
0xb577:	mov	byte ptr [rsp + 0x28], 3
0xb57c:	mov	r8, r9
0xb57f:	mov	rsi, r13
0xb582:	mov	rdi, r12
0xb585:	mov	qword ptr [rsp + 0x20], rbx
0xb58a:	mov	qword ptr [rsp], r9
0xb58e:	call	0x80e0


0xb54b:	mov	rcx, qword ptr [rbp + 0x78]
0xb54f:	xor	eax, eax
0xb551:	mov	rdx, qword ptr [rcx + rax]
0xb555:	and	qword ptr [rbx + rax], rdx
0xb559:	add	rax, 8
0xb55d:	cmp	rax, 0x20
0xb561:	jne	0xb551


0xb536:	not	qword ptr [rax]
0xb539:	add	rax, 8
0xb53d:	cmp	rdx, rax
0xb540:	jne	0xb536


0xb551:	mov	rdx, qword ptr [rcx + rax]
0xb555:	and	qword ptr [rbx + rax], rdx
0xb559:	add	rax, 8
0xb55d:	cmp	rax, 0x20
0xb561:	jne	0xb551


0xb593:	test	rax, rax
0xb596:	mov	r14, rax
0xb599:	je	0xb630


0xb630:	mov	rdi, rbx
0xb633:	call	0x1880


0xb59f:	cmp	dword ptr [rbp + 0xb4], 1
0xb5a6:	jle	0xb620


0xb620:	mov	rdi, r15
0xb623:	call	0x6b40


0xb5a8:	or	byte ptr [rbp + 0xb0], 2
0xb5af:	mov	r9, qword ptr [rsp]
0xb5b3:	xor	ecx, ecx
0xb5b5:	xor	edx, edx
0xb5b7:	mov	rsi, r13
0xb5ba:	mov	rdi, r12
0xb5bd:	mov	byte ptr [rsp + 0x28], 6
0xb5c2:	mov	qword ptr [rsp + 0x20], r15
0xb5c7:	mov	r8, r9
0xb5ca:	call	0x80e0


0xb5cf:	test	rax, rax
0xb5d2:	je	0xb630


0xb5d4:	lea	r8, [rsp + 0x30]
0xb5d9:	mov	rdx, r14
0xb5dc:	mov	rcx, rax
0xb5df:	mov	rsi, r13
0xb5e2:	mov	rdi, r12
0xb5e5:	mov	byte ptr [rsp + 0x38], 0xa
0xb5ea:	call	0x80e0


0xb5ef:	mov	r14, rax
0xb5f2:	mov	rdi, qword ptr [rsp + 0x48]
0xb5f7:	xor	rdi, qword ptr fs:[0x28]
0xb600:	mov	rax, r14
0xb603:	jne	0xb695


0xb638:	mov	rdi, r15
0xb63b:	call	0x6b40


0xb67e:	mov	rdi, r15
0xb681:	call	0x6b40


0xb65b:	mov	rax, qword ptr [rsp + 8]
0xb660:	mov	dword ptr [rax], 0xc
0xb666:	jmp	0xb5f2


0x1310a:	test	eax, eax
0x1310c:	je	0x13138


0x13138:	xor	eax, eax
0x1313a:	add	rsp, 8
0x1313e:	ret	


0x1310e:	lea	rdx, [rip + 0x244b]
0x13115:	cdqe	
0x13117:	lea	rsi, [rip + 0x24e2]
0x1311e:	xor	edi, edi
0x13120:	add	rsi, qword ptr [rdx + rax*8]
0x13124:	mov	edx, 5
0x13129:	add	rsp, 8
0x1312d:	jmp	0x1960


0x89ea:	test	rax, rax
0x89ed:	mov	qword ptr [r14 + 0x50], rax
0x89f1:	je	0x897e


0x897e:	mov	rdi, r14
0x8981:	call	0x70b0


0x89f3:	mov	rsi, rbp
0x89f6:	mov	rdi, rax
0x89f9:	call	0x8580


0x89fe:	test	eax, eax
0x8a00:	jne	0x8986


0x8a02:	or	byte ptr [r14 + 0x68], 0x80
0x8a07:	xor	r10d, r10d
0x8a0a:	jmp	0x8923


0xca43:	test	rax, rax
0xca46:	mov	qword ptr [r15 + 0x10], rax
0xca4a:	je	0xca72


0xca72:	mov	rdi, qword ptr [rbp - 0x60]
0xca76:	call	0x1880


0xca4c:	mov	rdx, r14
0xca4f:	mov	rsi, r13
0xca52:	mov	rdi, rax
0xca55:	call	0x1a90


0xca5a:	mov	rsi, qword ptr [rbp - 0xa8]
0xca61:	lea	rdi, [r15 + 0x18]
0xca65:	call	0x8580


0xca6a:	test	eax, eax
0xca6c:	je	0xc77c


0xca7b:	cmp	byte ptr [rbp - 0xc9], 0
0xca82:	jne	0xce1b


0xe77b:	test	rax, rax
0xe77e:	mov	r12, rax
0xe781:	je	0xeeb0


0xe787:	cmp	qword ptr [r15 + 0x98], 0
0xe78f:	je	0xf025


0xf025:	pxor	xmm0, xmm0
0xf029:	mov	qword ptr [rsp + 0xe0], rax
0xf031:	mov	rdi, qword ptr [rsp]
0xf035:	mov	rax, qword ptr [rsp + 0x20]
0xf03a:	lea	rbx, [rsp + 0xe0]
0xf042:	mov	qword ptr [rsp + 0xe8], 0
0xf04e:	mov	qword ptr [rsp + 0xf0], r13
0xf056:	mov	rsi, rbx
0xf059:	mov	qword ptr [rsp + 0x110], 0
0xf065:	movaps	xmmword ptr [rsp + 0x100], xmm0
0xf06d:	mov	qword ptr [rsp + 0xf8], rax
0xf075:	call	0xdb00


0xe795:	mov	rdi, rbx
0xe798:	call	0x1ac0


0xe79d:	test	rax, rax
0xe7a0:	mov	rbp, rax
0xe7a3:	je	0xeea8


0xeea8:	mov	rdi, r12
0xeeab:	call	0x1880


0xe7a9:	mov	r14, qword ptr [rsp + 0x20]
0xe7ae:	lea	rbx, [rsp + 0xe0]
0xe7b6:	mov	qword ptr [rsp + 0x10], r15
0xe7bb:	mov	qword ptr [rsp + 0x18], rax
0xe7c0:	mov	rax, qword ptr [rsp + 8]
0xe7c5:	xor	esi, esi
0xe7c7:	mov	rdi, rbp
0xe7ca:	lea	rdx, [rax*8]
0xe7d2:	call	0x1a10


0xe7d7:	pxor	xmm0, xmm0
0xe7db:	mov	qword ptr [rsp + 0xe0], r12
0xe7e3:	mov	qword ptr [rsp + 0xe8], rbp
0xe7eb:	mov	qword ptr [rsp + 0xf0], r13
0xe7f3:	mov	rsi, rbx
0xe7f6:	mov	qword ptr [rsp + 0xf8], r14
0xe7fe:	mov	rdi, qword ptr [rsp]
0xe802:	movaps	xmmword ptr [rbx + 0x20], xmm0
0xe806:	mov	qword ptr [rbx + 0x30], 0
0xe80e:	call	0xdb00


0xc2f5:	test	rax, rax
0xc2f8:	mov	qword ptr [rsp + 0xa0], rax
0xc300:	je	0xc54b


0xc306:	mov	qword ptr [rax], rbx
0xc309:	mov	ecx, dword ptr [rsp + 0x110]
0xc310:	lea	rbx, [rsp + 0x90]
0xc318:	mov	rdx, qword ptr [rsp + 0x48]
0xc31d:	mov	rdi, qword ptr [rsp + 0x30]
0xc322:	mov	r12, rbp
0xc325:	mov	rsi, rbx
0xc328:	mov	dword ptr [rsp + 0x88], 0
0xc333:	call	0x7dd0


0x8f8d:	test	rax, rax
0x8f90:	mov	qword ptr [rsp + 0x60], rax
0x8f95:	je	0x908d


0x908d:	mov	qword ptr [rsp + 0x58], 0
0x9096:	mov	qword ptr [rsp + 0x50], 0
0x909f:	mov	eax, 0xc
0x90a4:	jmp	0x8fa0


0x8f9b:	mov	qword ptr [rax], r14
0x8f9e:	xor	eax, eax
0x8fa0:	mov	r15, qword ptr [rsp + 0x10]
0x8fa5:	mov	rdx, qword ptr [rsp + 0x20]
0x8faa:	mov	rdi, r13
0x8fad:	mov	ecx, dword ptr [rsp + 0x2c]
0x8fb1:	mov	dword ptr [rsp + 0x4c], eax
0x8fb5:	mov	rsi, r15
0x8fb8:	call	0x7dd0


0x8fa0:	mov	r15, qword ptr [rsp + 0x10]
0x8fa5:	mov	rdx, qword ptr [rsp + 0x20]
0x8faa:	mov	rdi, r13
0x8fad:	mov	ecx, dword ptr [rsp + 0x2c]
0x8fb1:	mov	dword ptr [rsp + 0x4c], eax
0x8fb5:	mov	rsi, r15
0x8fb8:	call	0x7dd0


0x9021:	test	rax, rax
0x9024:	mov	qword ptr [rsp + 0x60], rax
0x9029:	je	0x906c


0x902b:	mov	rdi, qword ptr [rsp + 8]
0x9030:	mov	dword ptr [rsp + 0x4c], 0
0x9038:	mov	r10, qword ptr [rsp + 0x18]
0x903d:	mov	qword ptr [rax], rdi
0x9040:	jmp	0x8ece


0x8ece:	mov	rdx, qword ptr [rsp + 0x10]
0x8ed3:	mov	rdi, qword ptr [rsp + 0x38]
0x8ed8:	mov	rsi, r13
0x8edb:	mov	qword ptr [rsp + 8], r10
0x8ee0:	call	0x8a30


0xe201:	test	rax, rax
0xe204:	mov	rdi, rax
0xe207:	mov	qword ptr [rsp + 0x1d8], rax
0xe20f:	je	0xef00


0xe17e:	mov	rdi, r14
0xe181:	mov	r15, rax
0xe184:	mov	qword ptr [rsp + 0x1f8], rax
0xe18c:	shl	rdi, 4
0xe190:	call	0x1ac0


0xe195:	test	rax, rax
0xe198:	mov	qword ptr [rsp + 0x218], rax
0xe1a0:	je	0xeeb0


0xe1a6:	test	r15, r15
0xe1a9:	je	0xeeb0


0xf88e:	mov	rdx, qword ptr [rsp + 0x20]
0xf893:	test	rax, rax
0xf896:	mov	qword ptr [rdx + 0x48], rax
0xf89a:	je	0xf8e3


0xf8e3:	mov	eax, 0xc
0xf8e8:	jmp	0xf608


0xf89c:	cmp	qword ptr [rbx + 8], 0
0xf8a1:	mov	dword ptr [rsp + 0x60], 0
0xf8a9:	jg	0xf8be


0xf8ab:	jmp	0xf66c


0xf8be:	mov	rax, qword ptr [rbx + 0x10]
0xf8c2:	mov	rdi, r14
0xf8c5:	mov	rax, qword ptr [rax + r15*8]
0xf8c9:	lea	rdx, [rax + rax*2]
0xf8cd:	mov	rax, qword ptr [r12 + 0x38]
0xf8d2:	lea	rsi, [rax + rdx*8]
0xf8d6:	call	0x7940


0xf8db:	test	eax, eax
0xf8dd:	mov	dword ptr [rsp + 0x60], eax
0xf8e1:	je	0xf8b0


0xf8b0:	add	r15, 1
0xf8b4:	cmp	r15, qword ptr [rbx + 8]
0xf8b8:	jge	0xf66c


0x132f8:	test	rax, rax
0x132fb:	mov	rbp, rax
0x132fe:	je	0x13590


0x13590:	mov	r12, -2
0x13597:	jmp	0x13352


0x13304:	sub	rsp, 8
0x13308:	mov	rcx, rbx
0x1330b:	mov	rdi, r15
0x1330e:	mov	eax, dword ptr [rsp + 0x34]
0x13312:	push	rax
0x13313:	push	rbp
0x13314:	push	r14
0x13316:	mov	r9, qword ptr [rsp + 0x40]
0x1331b:	mov	r8, qword ptr [rsp + 0x28]
0x13320:	mov	rdx, qword ptr [rsp + 0x38]
0x13325:	mov	rsi, qword ptr [rsp + 0x30]
0x1332a:	call	0xde40


0x1332f:	add	rsp, 0x20
0x13333:	test	eax, eax
0x13335:	je	0x13368


0x13368:	test	r12, r12
0x1336b:	je	0x13438


0x13337:	cmp	eax, 1
0x1333a:	mov	r12, -1
0x13341:	je	0x1334a


0x13438:	cmp	byte ptr [rsp + 0x28], 0
0x1343d:	mov	r12, qword ptr [rbp]
0x13441:	je	0x1334a


0x13371:	movzx	eax, byte ptr [r15 + 0x38]
0x13376:	lea	rdx, [r13 + 1]
0x1337a:	shr	al, 1
0x1337c:	and	eax, 3
0x1337f:	je	0x134f0


0x1334a:	mov	rdi, rbp
0x1334d:	call	0x1880


0x13343:	mov	r12, -2
0x1334a:	mov	rdi, rbp
0x1334d:	call	0x1880


0x13447:	cmp	r12, rbx
0x1344a:	jne	0x13642


0x134f0:	lea	r14, [rdx*8]
0x134f8:	mov	qword ptr [rsp + 8], rdx
0x134fd:	mov	rdi, r14
0x13500:	call	0x1ac0


0x13385:	cmp	eax, 1
0x13388:	je	0x135a0


0x13450:	mov	r12, qword ptr [rbp + 8]
0x13454:	sub	r12, rbx
0x13457:	jmp	0x1334a


0x13642:	lea	rcx, [rip + 0x1e87]
0x13649:	lea	rsi, [rip + 0x18d0]
0x13650:	lea	rdi, [rip + 0x19ee]
0x13657:	mov	edx, 0x1be
0x1365c:	call	0x1a00


0x135a0:	cmp	qword ptr [r12], rdx
0x135a4:	mov	r9d, 1
0x135aa:	jae	0x133a7


0x1338e:	cmp	eax, 2
0x13391:	jne	0x13680


0x135b0:	lea	rcx, [rdx*8]
0x135b8:	mov	rdi, qword ptr [r12 + 8]
0x135bd:	mov	byte ptr [rsp + 0x18], r9b
0x135c2:	mov	qword ptr [rsp + 0x10], rdx
0x135c7:	mov	rsi, rcx
0x135ca:	mov	qword ptr [rsp + 8], rcx
0x135cf:	call	0x1b30


0x133a7:	test	r13, r13
0x133aa:	jle	0x13618


0x13397:	cmp	r14, qword ptr [r12]
0x1339b:	ja	0x13661


0x13680:	lea	rcx, [rip + 0x1e39]
0x13687:	lea	rsi, [rip + 0x1892]
0x1368e:	lea	rdi, [rip + 0x197b]
0x13695:	mov	edx, 0x1f9
0x1369a:	call	0x1a00


0x13618:	xor	edx, edx
0x1361a:	xor	r13d, r13d
0x1361d:	jmp	0x133eb


0x133b0:	mov	r8, qword ptr [r12 + 8]
0x133b5:	mov	rdi, qword ptr [r12 + 0x10]
0x133ba:	lea	rsi, [r13*8]
0x133c2:	mov	rdx, r13
0x133c5:	xor	eax, eax
0x133c7:	nop	word ptr [rax + rax]
0x133d0:	mov	rcx, qword ptr [rbp + rax*2]
0x133d5:	mov	qword ptr [r8 + rax], rcx
0x133d9:	mov	rcx, qword ptr [rbp + rax*2 + 8]
0x133de:	mov	qword ptr [rdi + rax], rcx
0x133e2:	add	rax, 8
0x133e6:	cmp	rsi, rax
0x133e9:	jne	0x133d0


0x133a1:	mov	r9d, 2
0x133a7:	test	r13, r13
0x133aa:	jle	0x13618


0x13661:	lea	rcx, [rip + 0x1e58]
0x13668:	lea	rsi, [rip + 0x18b1]
0x1366f:	lea	rdi, [rip + 0x19b7]
0x13676:	mov	edx, 0x1fb
0x1367b:	call	0x1a00


0x133eb:	cmp	qword ptr [r12], rdx
0x133ef:	jbe	0x1341d


0x133d0:	mov	rcx, qword ptr [rbp + rax*2]
0x133d5:	mov	qword ptr [r8 + rax], rcx
0x133d9:	mov	rcx, qword ptr [rbp + rax*2 + 8]
0x133de:	mov	qword ptr [rdi + rax], rcx
0x133e2:	add	rax, 8
0x133e6:	cmp	rsi, rax
0x133e9:	jne	0x133d0


0x1341d:	movzx	eax, byte ptr [r15 + 0x38]
0x13422:	lea	r13d, [r9 + r9]
0x13426:	and	eax, 0xfffffff9
0x13429:	or	eax, r13d
0x1342c:	test	al, 6
0x1342e:	mov	byte ptr [r15 + 0x38], al
0x13432:	je	0x13343


0x133f1:	mov	rsi, qword ptr [r12 + 0x10]
0x133f6:	mov	rcx, qword ptr [r12 + 8]
0x133fb:	mov	rax, -1
0x13402:	nop	word ptr [rax + rax]
0x13408:	mov	qword ptr [rsi + rdx*8], rax
0x1340c:	add	r13, 1
0x13410:	mov	qword ptr [rcx + rdx*8], rax
0x13414:	cmp	r13, qword ptr [r12]
0x13418:	mov	rdx, r13
0x1341b:	jb	0x13408


0x13408:	mov	qword ptr [rsi + rdx*8], rax
0x1340c:	add	r13, 1
0x13410:	mov	qword ptr [rcx + rdx*8], rax
0x13414:	cmp	r13, qword ptr [r12]
0x13418:	mov	rdx, r13
0x1341b:	jb	0x13408


0x135d4:	test	rax, rax
0x135d7:	mov	r14, rax
0x135da:	je	0x1362a


0x1362a:	xor	r9d, r9d
0x1362d:	jmp	0x1341d


0x135dc:	mov	rcx, qword ptr [rsp + 8]
0x135e1:	mov	rdi, qword ptr [r12 + 0x10]
0x135e6:	mov	rsi, rcx
0x135e9:	call	0x1b30


0x135ee:	test	rax, rax
0x135f1:	mov	rdx, qword ptr [rsp + 0x10]
0x135f6:	movzx	r9d, byte ptr [rsp + 0x18]
0x135fc:	je	0x13632


0x13632:	mov	rdi, r14
0x13635:	call	0x1880


0x135fe:	mov	qword ptr [r12 + 8], r14
0x13603:	mov	qword ptr [r12 + 0x10], rax
0x13608:	mov	qword ptr [r12], rdx
0x1360c:	jmp	0x133a7


0x1363a:	xor	r9d, r9d
0x1363d:	jmp	0x1341d


0x13505:	test	rax, rax
0x13508:	mov	qword ptr [r12 + 8], rax
0x1350d:	mov	rdx, qword ptr [rsp + 8]
0x13512:	je	0x1362a


0x13518:	mov	rdi, r14
0x1351b:	mov	qword ptr [rsp + 8], rdx
0x13520:	mov	qword ptr [rsp + 0x10], rax
0x13525:	call	0x1ac0


0x1352a:	test	rax, rax
0x1352d:	mov	qword ptr [r12 + 0x10], rax
0x13532:	mov	rdx, qword ptr [rsp + 8]
0x13537:	mov	rcx, qword ptr [rsp + 0x10]
0x1353c:	je	0x13622


0x13622:	mov	rdi, rcx
0x13625:	call	0x1880


0x13542:	mov	qword ptr [r12], rdx
0x13546:	mov	r9d, 1
0x1354c:	jmp	0x133a7


0x13762:	test	rax, rax
0x13765:	mov	r13, rax
0x13768:	je	0x137a0


0x1376a:	mov	rsi, qword ptr [rsp + 8]
0x1376f:	mov	rdx, rbx
0x13772:	mov	rdi, rax
0x13775:	call	0x1a90


0x1377a:	lea	rdi, [r13 + rbx]
0x1377f:	mov	rsi, r14
0x13782:	mov	rdx, rbp
0x13785:	mov	r14, r13
0x13788:	call	0x1a90


0x1378d:	mov	rcx, qword ptr [rsp + 0x10]
0x13792:	mov	r8d, dword ptr [rsp + 0x1c]
0x13797:	jmp	0x13708


0x865f:	test	rax, rax
0x8662:	mov	qword ptr [r12 + 0x10], rax
0x8667:	je	0x8758


0x8758:	mov	eax, 0xc
0x875d:	jmp	0x86e2


0x866d:	mov	r9, qword ptr [rbx + 0x10]
0x8671:	mov	r8, qword ptr [rbp + 0x10]
0x8675:	xor	ebx, ebx
0x8677:	xor	ecx, ecx
0x8679:	xor	esi, esi
0x867b:	jmp	0x869e


0x86e2:	pop	rbx
0x86e3:	pop	rbp
0x86e4:	pop	r12
0x86e6:	pop	r13
0x86e8:	pop	r14
0x86ea:	ret	


0x869e:	mov	rdx, qword ptr [r8 + rsi*8]
0x86a2:	mov	rdi, qword ptr [r9 + rcx*8]
0x86a6:	add	rbx, 1
0x86aa:	cmp	rdx, rdi
0x86ad:	jle	0x8680


0x8680:	sete	dil
0x8684:	mov	qword ptr [rax + rbx*8 - 8], rdx
0x8689:	add	rsi, 1
0x868d:	movzx	edi, dil
0x8691:	add	rcx, rdi
0x8694:	cmp	r13, rsi
0x8697:	jle	0x8700


0x86af:	add	rcx, 1
0x86b3:	mov	qword ptr [rax + rbx*8 - 8], rdi
0x86b8:	jmp	0x8694


0x8700:	cmp	r14, rcx
0x8703:	jg	0x8738


0x8699:	cmp	r14, rcx
0x869c:	jle	0x8718


0x8694:	cmp	r13, rsi
0x8697:	jle	0x8700


0x8705:	mov	qword ptr [r12 + 8], rbx
0x870a:	xor	eax, eax
0x870c:	pop	rbx
0x870d:	pop	rbp
0x870e:	pop	r12
0x8710:	pop	r13
0x8712:	pop	r14
0x8714:	ret	


0x8738:	sub	r14, rcx
0x873b:	lea	rdi, [rax + rbx*8]
0x873f:	lea	rsi, [r9 + rcx*8]
0x8743:	lea	rdx, [r14*8]
0x874b:	add	rbx, r14
0x874e:	call	0x1a90


0x8718:	sub	r13, rsi
0x871b:	lea	rdi, [rax + rbx*8]
0x871f:	lea	rsi, [r8 + rsi*8]
0x8723:	lea	rdx, [r13*8]
0x872b:	add	rbx, r13
0x872e:	call	0x1a90


0x8733:	jmp	0x8705


0x8753:	jmp	0x8705


0xcd42:	test	rax, rax
0xcd45:	mov	qword ptr [rbp - 0xc0], rax
0xcd4c:	mov	byte ptr [rbp - 0xc9], 1
0xcd53:	jne	0xc667


0xcd59:	mov	rdi, qword ptr [rbp - 0x88]
0xcd60:	test	rdi, rdi
0xcd63:	je	0xcd2c


0xc667:	mov	rdx, qword ptr [rbp - 0xb8]
0xc66e:	mov	rdi, qword ptr [rbp - 0xc0]
0xc675:	mov	rsi, r13
0xc678:	call	0x1a90


0xcd65:	call	0xaae0


0x120b8:	test	r14, r14
0x120bb:	mov	qword ptr [rbx], rax
0x120be:	je	0x12da5


0x12da5:	xor	ebp, ebp
0x12da7:	mov	esi, 1
0x12dac:	jmp	0x120dd


0x120c4:	mov	esi, 1
0x120c9:	nop	dword ptr [rax]
0x120d0:	add	rsi, rsi
0x120d3:	cmp	qword ptr [rsp], rsi
0x120d7:	jae	0x120d0


0x120dd:	mov	edi, 0x18
0x120e2:	call	0x1a70


0x120d9:	lea	rbp, [rsi - 1]
0x120dd:	mov	edi, 0x18
0x120e2:	call	0x1a70


0x120d0:	add	rsi, rsi
0x120d3:	cmp	qword ptr [rsp], rsi
0x120d7:	jae	0x120d0


0x120e7:	mov	qword ptr [rbx + 0x88], rbp
0x120ee:	mov	qword ptr [rbx + 0x40], rax
0x120f2:	call	0x1970


0x120f7:	mov	edi, 0xe
0x120fc:	mov	dword ptr [rbx + 0xb4], eax
0x12102:	call	0x1af0


0x5f31:	test	rax, rax
0x5f34:	mov	qword ptr [rbx + 0x10], rax
0x5f38:	je	0x5fc8


0x5fc8:	mov	qword ptr [rbx + 8], 0
0x5fd0:	mov	qword ptr [rbx], 0
0x5fd7:	jmp	0x5f0e


0x5f3e:	mov	qword ptr [rax], rbp
0x5f41:	add	rsp, 8
0x5f45:	mov	eax, 1
0x5f4a:	pop	rbx
0x5f4b:	pop	rbp
0x5f4c:	ret	


0x8185:	test	rax, rax
0x8188:	mov	rdi, rax
0x818b:	je	0x81bc


0x81bc:	xor	eax, eax
0x81be:	jmp	0x815b


0x818d:	mov	rax, qword ptr [rbx]
0x8190:	mov	r10d, 1
0x8196:	mov	qword ptr [rbx], rdi
0x8199:	xor	r9d, r9d
0x819c:	mov	r8, qword ptr [rsp + 0x18]
0x81a1:	mov	rcx, qword ptr [rsp + 0x10]
0x81a6:	mov	rdx, qword ptr [rsp + 8]
0x81ab:	mov	rsi, qword ptr [rsp]
0x81af:	mov	qword ptr [rdi], rax
0x81b2:	mov	eax, 8
0x81b7:	jmp	0x8104


0x8104:	shl	r9, 6
0x8108:	mov	dword ptr [rsi], r10d
0x810b:	add	rax, rdi
0x810e:	lea	rsi, [rdi + r9]
0x8112:	mov	qword ptr [rsi + 8], 0
0x811a:	mov	qword ptr [rsi + 0x10], rdx
0x811e:	lea	rdi, [rsi + 0x20]
0x8122:	mov	qword ptr [rsi + 0x18], rcx
0x8126:	movdqu	xmm0, xmmword ptr [r8]
0x812b:	movups	xmmword ptr [rsi + 0x30], xmm0
0x812f:	and	byte ptr [rdi + 0x1a], 0xf3
0x8133:	test	rdx, rdx
0x8136:	mov	qword ptr [rsi + 0x20], 0
0x813e:	mov	qword ptr [rsi + 0x28], 0
0x8146:	mov	qword ptr [rsi + 0x40], -1
0x814e:	je	0x8153


0x85ab:	test	rax, rax
0x85ae:	mov	qword ptr [rbx + 0x10], rax
0x85b2:	je	0x85f0


0x85f0:	mov	qword ptr [rbx + 8], 0
0x85f8:	mov	qword ptr [rbx], 0
0x85ff:	mov	eax, 0xc
0x8604:	jmp	0x85ca


0x85b4:	mov	rsi, qword ptr [rbp + 0x10]
0x85b8:	lea	rdx, [r12*8]
0x85c0:	mov	rdi, rax
0x85c3:	call	0x1a90


0x85ca:	pop	rbx
0x85cb:	pop	rbp
0x85cc:	pop	r12
0x85ce:	ret	


0x85c8:	xor	eax, eax
0x85ca:	pop	rbx
0x85cb:	pop	rbp
0x85cc:	pop	r12
0x85ce:	ret	


0xc5f5:	lea	rcx, [rbp - 0x50]
0xc5f9:	test	rax, rax
0xc5fc:	mov	qword ptr [rbp - 0x40], rax
0xc600:	mov	qword ptr [rbp - 0x88], rcx
0xc607:	je	0xcd2c


0x5599:	test	rax, rax
0x559c:	jne	0x55a3


0x559e:	test	rbx, rbx
0x55a1:	jne	0x55a5


0x55a3:	pop	rbx
0x55a4:	ret	


0x55a5:	call	0x57e0


0x5749:	mov	rdx, rbx
0x574c:	xor	esi, esi
0x574e:	mov	rdi, rax
0x5751:	pop	rbx
0x5752:	jmp	0x1a10


0x57a4:	add	rsp, 8
0x57a8:	mov	rdx, rbx
0x57ab:	mov	rsi, rbp
0x57ae:	pop	rbx
0x57af:	pop	rbp
0x57b0:	mov	rdi, rax
0x57b3:	jmp	0x1a90


0x6045:	test	rax, rax
0x6048:	mov	qword ptr [rbp + 0x30], rax
0x604c:	je	0x608e


0x608e:	pop	rbx
0x608f:	mov	eax, 0xc
0x6094:	pop	rbp
0x6095:	pop	r12
0x6097:	pop	r13
0x6099:	pop	r14
0x609b:	ret	


0x604e:	test	rbx, rbx
0x6051:	jle	0x60a0


0x60a0:	and	r12, qword ptr [r14 + 0x88]
0x60a7:	mov	rax, qword ptr [r14 + 0x40]
0x60ab:	lea	rdx, [r12 + r12*2]
0x60af:	lea	rbx, [rax + rdx*8]
0x60b3:	mov	rdx, qword ptr [rbx]
0x60b6:	cmp	qword ptr [rbx + 8], rdx
0x60ba:	mov	rax, qword ptr [rbx + 0x10]
0x60be:	lea	rsi, [rdx + 1]
0x60c2:	jle	0x60d6


0x6053:	xor	ebx, ebx
0x6055:	jmp	0x606a


0x60d6:	lea	r12, [rsi + rsi]
0x60da:	mov	rdi, rax
0x60dd:	shl	rsi, 4
0x60e1:	call	0x1b30


0x60c4:	mov	qword ptr [rbx], rsi
0x60c7:	mov	qword ptr [rax + rdx*8], rbp
0x60cb:	xor	eax, eax
0x60cd:	pop	rbx
0x60ce:	pop	rbp
0x60cf:	pop	r12
0x60d1:	pop	r13
0x60d3:	pop	r14
0x60d5:	ret	


0x606a:	mov	rax, qword ptr [rbp + 0x18]
0x606e:	mov	rsi, qword ptr [rax + rbx*8]
0x6072:	mov	rax, rsi
0x6075:	shl	rax, 4
0x6079:	add	rax, qword ptr [r14]
0x607c:	test	byte ptr [rax + 8], 8
0x6080:	jne	0x6060


0x6082:	mov	rdi, r13
0x6085:	call	0x5e70


0x6060:	add	rbx, 1
0x6064:	cmp	qword ptr [rbp + 0x10], rbx
0x6068:	jle	0x60a0


0x608a:	test	al, al
0x608c:	jne	0x6060


0x60e6:	test	rax, rax
0x60e9:	je	0x608e


0x60eb:	mov	rdx, qword ptr [rbx]
0x60ee:	mov	qword ptr [rbx + 0x10], rax
0x60f2:	mov	qword ptr [rbx + 8], r12
0x60f6:	lea	rsi, [rdx + 1]
0x60fa:	jmp	0x60c4


0x8bbb:	test	eax, eax
0x8bbd:	jne	0x8c14


0x8c14:	mov	rdi, rbx
0x8c17:	call	0x70b0


0x8976:	test	eax, eax
0x8978:	je	0x881c


0x7b7c:	test	rax, rax
0x7b7f:	mov	qword ptr [rsp + 0x30], rax
0x7b84:	je	0x7dc0


0x7dc0:	mov	eax, 0xc
0x7dc5:	jmp	0x7cc6


0x7b8a:	mov	rax, qword ptr [r15 + 0x30]
0x7b8e:	mov	rdx, qword ptr [r15]
0x7b91:	mov	r13, rbp
0x7b94:	shl	r13, 4
0x7b98:	mov	qword ptr [rax + rbx + 8], -1
0x7ba1:	lea	rax, [rdx + r13]
0x7ba5:	mov	r8d, dword ptr [rax + 8]
0x7ba9:	test	r8d, 0x3ff00
0x7bb0:	jne	0x7d50


0x7cc6:	mov	rsi, qword ptr [rsp + 0x58]
0x7ccb:	xor	rsi, qword ptr fs:[0x28]
0x7cd4:	jne	0x7dca


0x7bb6:	test	byte ptr [rax + 8], 8
0x7bba:	je	0x7c80


0x7d50:	cmp	qword ptr [r12 + 8], 0
0x7d56:	je	0x7c80


0x7cda:	add	rsp, 0x68
0x7cde:	pop	rbx
0x7cdf:	pop	rbp
0x7ce0:	pop	r12
0x7ce2:	pop	r13
0x7ce4:	pop	r14
0x7ce6:	pop	r15
0x7ce8:	ret	


0x7dca:	call	0x1990


0x7c80:	lea	rdi, [rsp + 0x20]
0x7c85:	mov	rsi, rbp
0x7c88:	call	0x5ee0


0x7bc0:	mov	rsi, qword ptr [r15 + 0x28]
0x7bc4:	lea	rax, [rsi + rbx]
0x7bc8:	cmp	qword ptr [rax + 8], 0
0x7bcd:	jle	0x7c80


0x7d5c:	mov	rcx, qword ptr [r12 + 0x10]
0x7d61:	mov	rcx, qword ptr [rcx]
0x7d64:	shl	rcx, 4
0x7d68:	test	byte ptr [rdx + rcx + 0xa], 4
0x7d6d:	jne	0x7bb6


0x7bd3:	lea	rdx, [rsp + 0x20]
0x7bd8:	mov	byte ptr [rsp + 0x1b], 0
0x7bdd:	xor	r14d, r14d
0x7be0:	lea	r12, [rsp + 0x40]
0x7be5:	mov	qword ptr [rsp + 8], rdx
0x7bea:	jmp	0x7c06


0x7d73:	shr	r8d, 8
0x7d77:	mov	rcx, rbp
0x7d7a:	mov	rdx, rbp
0x7d7d:	and	r8d, 0x3ff
0x7d84:	mov	rsi, rbp
0x7d87:	mov	rdi, r15
0x7d8a:	call	0x6e30


0x7c06:	mov	rax, qword ptr [rax + 0x10]
0x7c0a:	mov	rdx, qword ptr [rax + r14*8]
0x7c0e:	mov	rax, qword ptr [r15 + 0x30]
0x7c12:	lea	r8, [rdx + rdx*2]
0x7c16:	lea	r13, [r8*8]
0x7c1e:	add	rax, r13
0x7c21:	mov	rcx, qword ptr [rax + 8]
0x7c25:	cmp	rcx, -1
0x7c29:	je	0x7cf0


0x7cf0:	lea	rax, [rsi + rbx]
0x7cf4:	add	r14, 1
0x7cf8:	mov	byte ptr [rsp + 0x1b], 1
0x7cfd:	cmp	qword ptr [rax + 8], r14
0x7d01:	jg	0x7c06


0x7c2f:	test	rcx, rcx
0x7c32:	je	0x7da8


0x7d07:	lea	rdi, [rsp + 0x20]
0x7d0c:	mov	rsi, rbp
0x7d0f:	call	0x5ee0


0x7da8:	mov	rsi, r15
0x7dab:	mov	rdi, r12
0x7dae:	call	0x7b20


0x7c38:	movdqu	xmm0, xmmword ptr [rax]
0x7c3c:	movaps	xmmword ptr [rsp + 0x40], xmm0
0x7c41:	mov	rax, qword ptr [rax + 0x10]
0x7c45:	mov	qword ptr [rsp + 0x50], rax
0x7c4a:	mov	rdi, qword ptr [rsp + 8]
0x7c4f:	mov	rsi, r12
0x7c52:	call	0x7940


0x7c57:	test	eax, eax
0x7c59:	jne	0x7cc6


0x7c5b:	mov	rax, qword ptr [r15 + 0x30]
0x7c5f:	cmp	qword ptr [rax + r13 + 8], 0
0x7c65:	jne	0x7bf0


0x7c67:	mov	rdi, qword ptr [rsp + 0x50]
0x7c6c:	call	0x1880


0x7bf0:	mov	rsi, qword ptr [r15 + 0x28]
0x7bf4:	add	r14, 1
0x7bf8:	lea	rax, [rsi + rbx]
0x7bfc:	cmp	qword ptr [rax + 8], r14
0x7c00:	jle	0x7d07


0x7c71:	mov	byte ptr [rsp + 0x1b], 1
0x7c76:	jmp	0x7bf0


0x7db3:	test	eax, eax
0x7db5:	je	0x7c4a


0x7c4a:	mov	rdi, qword ptr [rsp + 8]
0x7c4f:	mov	rsi, r12
0x7c52:	call	0x7940


0x7dbb:	jmp	0x7cc6


0x7d8f:	test	eax, eax
0x7d91:	jne	0x7cc6


0x7d97:	mov	rax, qword ptr [r15]
0x7d9a:	add	rax, r13
0x7d9d:	jmp	0x7bb6


0x7d14:	test	al, al
0x7d16:	je	0x7dc0


0x7d1c:	cmp	byte ptr [rsp + 0x1c], 1
0x7d21:	mov	rax, qword ptr [r15 + 0x30]
0x7d25:	lea	rdx, [rax + rbx]
0x7d29:	je	0x7c99


0x7c99:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x7c9f:	movups	xmmword ptr [rax + rbx], xmm0
0x7ca3:	mov	rdx, qword ptr [rsp + 0x30]
0x7ca8:	mov	qword ptr [rax + rbx + 0x10], rdx
0x7cad:	mov	rbx, qword ptr [rsp + 0x10]
0x7cb2:	mov	rax, qword ptr [rsp + 0x30]
0x7cb7:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x7cbd:	movaps	xmmword ptr [rbx], xmm0
0x7cc0:	mov	qword ptr [rbx + 0x10], rax
0x7cc4:	xor	eax, eax
0x7cc6:	mov	rsi, qword ptr [rsp + 0x58]
0x7ccb:	xor	rsi, qword ptr fs:[0x28]
0x7cd4:	jne	0x7dca


0x7d2f:	cmp	byte ptr [rsp + 0x1b], 0
0x7d34:	je	0x7c99


0x7d3a:	mov	qword ptr [rdx + 8], 0
0x7d42:	jmp	0x7cad


0x7cad:	mov	rbx, qword ptr [rsp + 0x10]
0x7cb2:	mov	rax, qword ptr [rsp + 0x30]
0x7cb7:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x7cbd:	movaps	xmmword ptr [rbx], xmm0
0x7cc0:	mov	qword ptr [rbx + 0x10], rax
0x7cc4:	xor	eax, eax
0x7cc6:	mov	rsi, qword ptr [rsp + 0x58]
0x7ccb:	xor	rsi, qword ptr fs:[0x28]
0x7cd4:	jne	0x7dca


0x7c8d:	test	al, al
0x7c8f:	je	0x7dc0


0x7c95:	mov	rax, qword ptr [r15 + 0x30]
0x7c99:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x7c9f:	movups	xmmword ptr [rax + rbx], xmm0
0x7ca3:	mov	rdx, qword ptr [rsp + 0x30]
0x7ca8:	mov	qword ptr [rax + rbx + 0x10], rdx
0x7cad:	mov	rbx, qword ptr [rsp + 0x10]
0x7cb2:	mov	rax, qword ptr [rsp + 0x30]
0x7cb7:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x7cbd:	movaps	xmmword ptr [rbx], xmm0
0x7cc0:	mov	qword ptr [rbx + 0x10], rax
0x7cc4:	xor	eax, eax
0x7cc6:	mov	rsi, qword ptr [rsp + 0x58]
0x7ccb:	xor	rsi, qword ptr fs:[0x28]
0x7cd4:	jne	0x7dca


0x7e18:	test	rax, rax
0x7e1b:	mov	qword ptr [rsp + 0x20], rax
0x7e20:	je	0x7f1d


0x7f1d:	mov	eax, 0xc
0x7f22:	jmp	0x7efe


0x7e26:	test	r12, r12
0x7e29:	jle	0x7ebb


0x7efe:	mov	rdx, qword ptr [rsp + 0x28]
0x7f03:	xor	rdx, qword ptr fs:[0x28]
0x7f0c:	jne	0x7f24


0x7ebb:	mov	rdi, qword ptr [r15 + 0x10]
0x7ebf:	call	0x1880


0x7e2f:	lea	r12, [rsp + 0x10]
0x7e34:	xor	r13d, r13d
0x7e37:	nop	word ptr [rax + rax]
0x7e40:	mov	rax, qword ptr [r15 + 0x10]
0x7e44:	mov	rdx, qword ptr [rax + r13*8]
0x7e48:	mov	rax, qword ptr [r14 + 0x30]
0x7e4c:	lea	rcx, [rdx + rdx*2]
0x7e50:	lea	rsi, [rax + rcx*8]
0x7e54:	mov	r8, qword ptr [rsi + 8]
0x7e58:	test	r8, r8
0x7e5b:	jle	0x7ee0


0x7f0e:	add	rsp, 0x38
0x7f12:	pop	rbx
0x7f13:	pop	rbp
0x7f14:	pop	r12
0x7f16:	pop	r13
0x7f18:	pop	r14
0x7f1a:	pop	r15
0x7f1c:	ret	


0x7f24:	call	0x1990


0x7ee0:	mov	rdi, r12
0x7ee3:	call	0x7940


0x7e61:	mov	r10, qword ptr [rsi + 0x10]
0x7e65:	mov	r9, qword ptr [r14]
0x7e68:	xor	ecx, ecx
0x7e6a:	jmp	0x7e79


0x7e79:	mov	rdi, qword ptr [r10 + rcx*8]
0x7e7d:	mov	rax, rdi
0x7e80:	shl	rax, 4
0x7e84:	add	rax, r9
0x7e87:	movzx	r11d, byte ptr [rax + 8]
0x7e8c:	cmp	ebx, r11d
0x7e8f:	jne	0x7e70


0x7e91:	cmp	rbp, qword ptr [rax]
0x7e94:	jne	0x7e70


0x7e70:	add	rcx, 1
0x7e74:	cmp	r8, rcx
0x7e77:	je	0x7ee0


0x7e96:	cmp	rdi, -1
0x7e9a:	je	0x7ee0


0x7e9c:	mov	r8d, ebx
0x7e9f:	mov	rcx, rbp
0x7ea2:	mov	rsi, r12
0x7ea5:	mov	rdi, r14
0x7ea8:	call	0x74a0


0x7ead:	test	eax, eax
0x7eaf:	jne	0x7eec


0x7eb1:	add	r13, 1
0x7eb5:	cmp	qword ptr [r15 + 8], r13
0x7eb9:	jg	0x7e40


0x7eec:	mov	rdi, qword ptr [rsp + 0x20]
0x7ef1:	mov	dword ptr [rsp + 0xc], eax
0x7ef5:	call	0x1880


0x7e40:	mov	rax, qword ptr [r15 + 0x10]
0x7e44:	mov	rdx, qword ptr [rax + r13*8]
0x7e48:	mov	rax, qword ptr [r14 + 0x30]
0x7e4c:	lea	rcx, [rdx + rdx*2]
0x7e50:	lea	rsi, [rax + rcx*8]
0x7e54:	mov	r8, qword ptr [rsi + 8]
0x7e58:	test	r8, r8
0x7e5b:	jle	0x7ee0


0x7ee8:	test	eax, eax
0x7eea:	je	0x7eb1


0x7efa:	mov	eax, dword ptr [rsp + 0xc]
0x7efe:	mov	rdx, qword ptr [rsp + 0x28]
0x7f03:	xor	rdx, qword ptr fs:[0x28]
0x7f0c:	jne	0x7f24


0x7ec4:	mov	rax, qword ptr [rsp + 0x20]
0x7ec9:	movdqa	xmm0, xmmword ptr [rsp + 0x10]
0x7ecf:	mov	qword ptr [r15 + 0x10], rax
0x7ed3:	xor	eax, eax
0x7ed5:	movaps	xmmword ptr [r15], xmm0
0x7ed9:	jmp	0x7efe


0x8fbd:	mov	rsi, r15
0x8fc0:	mov	rdi, rbp
0x8fc3:	mov	r14d, eax
0x8fc6:	call	0x7940


0x8fcb:	mov	rdi, qword ptr [rsp + 0x60]
0x8fd0:	mov	r15d, eax
0x8fd3:	call	0x1880


0x8fd8:	mov	eax, dword ptr [rsp + 0x4c]
0x8fdc:	mov	edx, r14d
0x8fdf:	or	edx, r15d
0x8fe2:	or	edx, eax
0x8fe4:	jne	0x9076


0x8fea:	mov	rcx, qword ptr [rbx + 0xd8]
0x8ff1:	jmp	0x8e33


0x9076:	test	eax, eax
0x9078:	jne	0x8dcf


0x8e33:	mov	rax, qword ptr [rsp + 0x30]
0x8e38:	lea	r15, [rcx + rax]
0x8e3c:	jmp	0x8f18


0x907e:	test	r14d, r14d
0x9081:	mov	eax, r14d
0x9084:	cmove	eax, r15d
0x9088:	jmp	0x8dcf


0xc338:	test	eax, eax
0xc33a:	mov	dword ptr [rsp + 0x88], eax
0xc341:	je	0xc45d


0xc347:	jmp	0xc3a0


0xc1a9:	test	eax, eax
0xc1ab:	mov	dword ptr [rsp + 0x88], eax
0xc1b2:	jne	0xc3a0


0xc1b8:	mov	r8d, dword ptr [rsp + 0x110]
0xc1c0:	mov	rcx, qword ptr [rsp + 0x48]
0xc1c5:	mov	rdx, rbx
0xc1c8:	mov	rsi, qword ptr [rsp + 8]
0xc1cd:	mov	rdi, r15
0xc1d0:	call	0x8d10


0xc1d5:	test	eax, eax
0xc1d7:	mov	dword ptr [rsp + 0x88], eax
0xc1de:	jne	0xc3a0


0x9ee6:	test	rax, rax
0x9ee9:	mov	qword ptr [rsp + 0x18], rax
0x9eee:	je	0xa2c0


0xa2c0:	xor	eax, eax
0xa2c2:	mov	rbx, qword ptr [rsp + 0xf8]
0xa2ca:	xor	rbx, qword ptr fs:[0x28]
0xa2d3:	jne	0xaa24


0x9ef4:	mov	rax, qword ptr [rsp + 0x18]
0x9ef9:	pxor	xmm0, xmm0
0x9efd:	lea	rbx, [rax + 0x1800]
0x9f04:	mov	rax, qword ptr [rsp + 8]
0x9f09:	movaps	xmmword ptr [rsp + 0x90], xmm0
0x9f11:	mov	qword ptr [rsp + 0x40], rbx
0x9f16:	movaps	xmmword ptr [rsp + 0xa0], xmm0
0x9f1e:	cmp	qword ptr [rax + 0x10], 0
0x9f23:	mov	qword ptr [rax + 0x58], 0
0x9f2b:	mov	qword ptr [rax + 0x60], 0
0x9f33:	jle	0xa9aa


0xa2d9:	add	rsp, 0x108
0xa2e0:	pop	rbx
0xa2e1:	pop	rbp
0xa2e2:	pop	r12
0xa2e4:	pop	r13
0xa2e6:	pop	r14
0xa2e8:	pop	r15
0xa2ea:	ret	


0xaa24:	call	0x1990


0xa9aa:	mov	rdi, qword ptr [rsp + 0x18]
0xa9af:	call	0x1880


0x9f39:	mov	qword ptr [rsp + 0x30], r15
0x9f3e:	xor	ebp, ebp
0x9f40:	mov	qword ptr [rsp + 0x10], 0
0x9f49:	mov	r15, rbx
0x9f4c:	mov	rbx, qword ptr [rsp + 0x10]
0x9f51:	lea	rax, [rbx*8]
0x9f59:	mov	qword ptr [rsp + 0x20], rax
0x9f5e:	mov	rax, qword ptr [rsp + 8]
0x9f63:	mov	rax, qword ptr [rax + 0x18]
0x9f67:	mov	r13, qword ptr [rax + rbx*8]
0x9f6b:	mov	rax, qword ptr [rsp + 0x30]
0x9f70:	shl	r13, 4
0x9f74:	add	r13, qword ptr [rax]
0x9f77:	movzx	r14d, byte ptr [r13 + 8]
0x9f7c:	mov	eax, dword ptr [r13 + 8]
0x9f80:	shr	eax, 8
0x9f83:	and	ax, 0x3ff
0x9f87:	cmp	r14d, 1
0x9f8b:	je	0xa2f0


0xa2f0:	movzx	ecx, byte ptr [r13]
0xa2f5:	lea	r12, [rsp + 0x90]
0xa2fd:	mov	edi, 1
0xa302:	mov	rdx, rcx
0xa305:	and	ecx, 0x3f
0xa308:	shr	rdx, 3
0xa30c:	shl	rdi, cl
0xa30f:	and	edx, 0x18
0xa312:	or	qword ptr [r12 + rdx], rdi
0xa316:	test	ax, ax
0xa319:	je	0xa3e0


0x9f91:	cmp	r14d, 3
0x9f95:	je	0xa760


0xa3e0:	xor	ebx, ebx
0xa3e2:	test	rbp, rbp
0xa3e5:	jle	0xa54b


0xa31f:	test	al, 0x20
0xa321:	jne	0xa690


0xa760:	mov	rsi, qword ptr [r13]
0xa764:	lea	r12, [rsp + 0x90]
0xa76c:	xor	edx, edx
0xa76e:	mov	rcx, qword ptr [r12 + rdx]
0xa772:	or	rcx, qword ptr [rsi + rdx]
0xa776:	mov	qword ptr [r12 + rdx], rcx
0xa77a:	add	rdx, 8
0xa77e:	cmp	rdx, 0x20
0xa782:	jne	0xa76e


0x9f9b:	cmp	r14d, 5
0x9f9f:	je	0xa620


0xa54b:	cmp	rbp, rbx
0xa54e:	jne	0x9faf


0xa3eb:	mov	qword ptr [rsp + 0x28], r13
0xa3f0:	mov	r13, r15
0xa3f3:	nop	dword ptr [rax + rax]
0xa3f8:	mov	r10, rbx
0xa3fb:	shl	r10, 5
0xa3ff:	cmp	r14d, 1
0xa403:	jne	0xa428


0xa327:	test	al, 0x80
0xa329:	jne	0xa5c4


0xa690:	mov	rdx, qword ptr [rsp + 0x90]
0xa698:	pxor	xmm0, xmm0
0xa69c:	and	dh, 4
0xa69f:	movaps	xmmword ptr [r12], xmm0
0xa6a4:	movaps	xmmword ptr [r12 + 0x10], xmm0
0xa6aa:	je	0x9faf


0xa784:	jmp	0xa316


0xa76e:	mov	rcx, qword ptr [r12 + rdx]
0xa772:	or	rcx, qword ptr [rsi + rdx]
0xa776:	mov	qword ptr [r12 + rdx], rcx
0xa77a:	add	rdx, 8
0xa77e:	cmp	rdx, 0x20
0xa782:	jne	0xa76e


0xa620:	mov	rsi, qword ptr [rsp + 0x30]
0xa625:	cmp	dword ptr [rsi + 0xb4], 1
0xa62c:	jle	0xa735


0x9fa5:	cmp	r14d, 7
0x9fa9:	je	0xa789


0xa554:	mov	rax, rbp
0xa557:	movdqa	xmm0, xmmword ptr [rsp + 0x90]
0xa560:	shl	rax, 5
0xa564:	mov	rbx, qword ptr [rsp + 0x20]
0xa569:	mov	edi, 8
0xa56e:	add	rax, r15
0xa571:	movups	xmmword ptr [rax], xmm0
0xa574:	movdqa	xmm0, xmmword ptr [rsp + 0xa0]
0xa57d:	movups	xmmword ptr [rax + 0x10], xmm0
0xa581:	mov	rax, qword ptr [rsp + 8]
0xa586:	mov	rax, qword ptr [rax + 0x18]
0xa58a:	mov	r13, qword ptr [rax + rbx]
0xa58e:	mov	rbx, qword ptr [rsp + 0x18]
0xa593:	lea	rax, [rbp + rbp*2]
0xa598:	lea	rbx, [rbx + rax*8]
0xa59c:	mov	qword ptr [rbx], 1
0xa5a3:	mov	qword ptr [rbx + 8], 1
0xa5ab:	call	0x1ac0


0x9faf:	mov	rbx, qword ptr [rsp + 8]
0x9fb4:	add	qword ptr [rsp + 0x10], 1
0x9fba:	mov	rax, qword ptr [rsp + 0x10]
0x9fbf:	cmp	rax, qword ptr [rbx + 0x10]
0x9fc3:	jl	0x9f4c


0xa405:	mov	rax, qword ptr [rsp + 0x28]
0xa40a:	movzx	edx, byte ptr [rax]
0xa40d:	mov	rax, rdx
0xa410:	shr	rax, 3
0xa414:	and	eax, 0x18
0xa417:	add	rax, r13
0xa41a:	mov	rax, qword ptr [rax + r10]
0xa41e:	bt	rax, rdx
0xa422:	jae	0xa53b


0xa428:	lea	rdi, [r13 + r10]
0xa42d:	lea	rsi, [rsp + 0xb0]
0xa435:	xor	ecx, ecx
0xa437:	xor	eax, eax
0xa439:	mov	rdx, qword ptr [r12 + rax*8]
0xa43d:	and	rdx, qword ptr [rdi + rax*8]
0xa441:	mov	qword ptr [rsi + rax*8], rdx
0xa445:	add	rax, 1
0xa449:	or	rcx, rdx
0xa44c:	cmp	rax, 4
0xa450:	jne	0xa439


0xa32f:	test	al, 4
0xa331:	je	0xa385


0xa5c4:	pxor	xmm0, xmm0
0xa5c8:	movaps	xmmword ptr [r12], xmm0
0xa5cd:	movaps	xmmword ptr [r12 + 0x10], xmm0
0xa5d3:	jmp	0x9faf


0xa6b0:	mov	qword ptr [rsp + 0x90], 0x400
0xa6bc:	jmp	0xa327


0xa316:	test	ax, ax
0xa319:	je	0xa3e0


0xa735:	pcmpeqd	xmm0, xmm0
0xa739:	lea	r12, [rsp + 0x90]
0xa741:	movaps	xmmword ptr [rsp + 0x90], xmm0
0xa749:	movaps	xmmword ptr [rsp + 0xa0], xmm0
0xa751:	jmp	0xa656


0xa632:	mov	rsi, qword ptr [rsi + 0x78]
0xa636:	lea	r12, [rsp + 0x90]
0xa63e:	xor	edx, edx
0xa640:	mov	rcx, qword ptr [r12 + rdx]
0xa644:	or	rcx, qword ptr [rsi + rdx]
0xa648:	mov	qword ptr [r12 + rdx], rcx
0xa64c:	add	rdx, 8
0xa650:	cmp	rdx, 0x20
0xa654:	jne	0xa640


0xa789:	pcmpeqd	xmm0, xmm0
0xa78d:	lea	r12, [rsp + 0x90]
0xa795:	movaps	xmmword ptr [rsp + 0x90], xmm0
0xa79d:	jmp	0xa656


0x9f4c:	mov	rbx, qword ptr [rsp + 0x10]
0x9f51:	lea	rax, [rbx*8]
0x9f59:	mov	qword ptr [rsp + 0x20], rax
0x9f5e:	mov	rax, qword ptr [rsp + 8]
0x9f63:	mov	rax, qword ptr [rax + 0x18]
0x9f67:	mov	r13, qword ptr [rax + rbx*8]
0x9f6b:	mov	rax, qword ptr [rsp + 0x30]
0x9f70:	shl	r13, 4
0x9f74:	add	r13, qword ptr [rax]
0x9f77:	movzx	r14d, byte ptr [r13 + 8]
0x9f7c:	mov	eax, dword ptr [r13 + 8]
0x9f80:	shr	eax, 8
0x9f83:	and	ax, 0x3ff
0x9f87:	cmp	r14d, 1
0x9f8b:	je	0xa2f0


0x9fc5:	test	rbp, rbp
0x9fc8:	mov	r15, qword ptr [rsp + 0x30]
0x9fcd:	jle	0xaa29


0xa53b:	add	rbx, 1
0xa53f:	cmp	rbx, rbp
0xa542:	jl	0xa3f8


0xa452:	test	rcx, rcx
0xa455:	je	0xa53b


0xa439:	mov	rdx, qword ptr [r12 + rax*8]
0xa43d:	and	rdx, qword ptr [rdi + rax*8]
0xa441:	mov	qword ptr [rsi + rax*8], rdx
0xa445:	add	rax, 1
0xa449:	or	rcx, rdx
0xa44c:	cmp	rax, 4
0xa450:	jne	0xa439


0xa385:	test	al, 8
0xa387:	je	0xa3e0


0xa333:	cmp	r14d, 1
0xa337:	je	0xa715


0xa656:	mov	rbx, qword ptr [rsp + 0x30]
0xa65b:	mov	rdx, qword ptr [rbx + 0xd8]
0xa662:	test	dl, 0x40
0xa665:	jne	0xa673


0xa640:	mov	rcx, qword ptr [r12 + rdx]
0xa644:	or	rcx, qword ptr [rsi + rdx]
0xa648:	mov	qword ptr [r12 + rdx], rcx
0xa64c:	add	rdx, 8
0xa650:	cmp	rdx, 0x20
0xa654:	jne	0xa640


0xaa29:	mov	rdi, qword ptr [rsp + 0x18]
0xaa2e:	call	0x1880


0x9fd3:	lea	rbx, [rbp + 1]
0x9fd7:	mov	qword ptr [rsp + 0x78], 0
0x9fe0:	mov	qword ptr [rsp + 0x70], rbx
0x9fe5:	shl	rbx, 3
0x9fe9:	mov	rdi, rbx
0x9fec:	call	0x1ac0


0xa3f8:	mov	r10, rbx
0xa3fb:	shl	r10, 5
0xa3ff:	cmp	r14d, 1
0xa403:	jne	0xa428


0xa548:	mov	r15, r13
0xa54b:	cmp	rbp, rbx
0xa54e:	jne	0x9faf


0xa45b:	lea	r11, [rsp + 0xd0]
0xa463:	xor	r15d, r15d
0xa466:	xor	r9d, r9d
0xa469:	xor	ecx, ecx
0xa46b:	mov	rsi, qword ptr [r12 + rcx*8]
0xa46f:	mov	rax, qword ptr [rdi + rcx*8]
0xa473:	mov	rdx, rsi
0xa476:	not	rdx
0xa479:	and	rdx, rax
0xa47c:	not	rax
0xa47f:	and	rax, rsi
0xa482:	mov	qword ptr [r11 + rcx*8], rdx
0xa486:	or	r9, rdx
0xa489:	mov	qword ptr [r12 + rcx*8], rax
0xa48d:	add	rcx, 1
0xa491:	or	r15, rax
0xa494:	cmp	rcx, 4
0xa498:	jne	0xa46b


0xa389:	cmp	r14d, 1
0xa38d:	je	0xa6c1


0xa715:	test	byte ptr [r13 + 0xa], 0x40
0xa71a:	je	0xa5c4


0xa33d:	mov	r8, qword ptr [rsp + 0x30]
0xa342:	cmp	dword ptr [r8 + 0xb4], 1
0xa34a:	jle	0xa7a2


0xa667:	and	qword ptr [rsp + 0x90], 0xfffffffffffffbff
0xa673:	and	edx, 0x80
0xa679:	je	0xa316


0xa673:	and	edx, 0x80
0xa679:	je	0xa316


0xa49a:	mov	rdi, qword ptr [rsp + 0x18]
0xa49f:	lea	rax, [rbx + rbx*2]
0xa4a3:	test	r9, r9
0xa4a6:	lea	rdx, [rdi + rax*8]
0xa4aa:	je	0xa514


0xa46b:	mov	rsi, qword ptr [r12 + rcx*8]
0xa46f:	mov	rax, qword ptr [rdi + rcx*8]
0xa473:	mov	rdx, rsi
0xa476:	not	rdx
0xa479:	and	rdx, rax
0xa47c:	not	rax
0xa47f:	and	rax, rsi
0xa482:	mov	qword ptr [r11 + rcx*8], rdx
0xa486:	or	r9, rdx
0xa489:	mov	qword ptr [r12 + rcx*8], rax
0xa48d:	add	rcx, 1
0xa491:	or	r15, rax
0xa494:	cmp	rcx, 4
0xa498:	jne	0xa46b


0xa6c1:	test	byte ptr [r13 + 0xa], 0x40
0xa6c6:	jne	0xa5c4


0xa393:	mov	rdi, qword ptr [rsp + 0x30]
0xa398:	cmp	dword ptr [rdi + 0xb4], 1
0xa39f:	jle	0xa6de


0xa720:	mov	r8, qword ptr [rsp + 0x30]
0xa725:	cmp	dword ptr [r8 + 0xb4], 1
0xa72d:	jg	0xa350


0xa7a2:	mov	rdi, qword ptr [rsp + 0x30]
0xa7a7:	xor	esi, esi
0xa7a9:	xor	edx, edx
0xa7ab:	mov	rcx, qword ptr [r12 + rdx*8]
0xa7af:	and	rcx, qword ptr [rdi + rdx*8 + 0xb8]
0xa7b7:	mov	qword ptr [r12 + rdx*8], rcx
0xa7bb:	add	rdx, 1
0xa7bf:	or	rsi, rcx
0xa7c2:	cmp	rdx, 4
0xa7c6:	jne	0xa7ab


0xa350:	mov	rdi, qword ptr [r8 + 0x78]
0xa354:	xor	esi, esi
0xa356:	xor	ecx, ecx
0xa358:	mov	rdx, qword ptr [rdi + rcx*8]
0xa35c:	not	rdx
0xa35f:	or	rdx, qword ptr [r8 + rcx*8 + 0xb8]
0xa367:	and	rdx, qword ptr [r12 + rcx*8]
0xa36b:	mov	qword ptr [r12 + rcx*8], rdx
0xa36f:	add	rcx, 1
0xa373:	or	rsi, rdx
0xa376:	cmp	rcx, 4
0xa37a:	jne	0xa358


0xa67f:	and	qword ptr [rsp + 0x90], 0xfffffffffffffffe
0xa688:	jmp	0xa316


0xa514:	mov	rax, qword ptr [rsp + 8]
0xa519:	mov	rsi, qword ptr [rsp + 0x20]
0xa51e:	mov	rdi, rdx
0xa521:	mov	rax, qword ptr [rax + 0x18]
0xa525:	mov	rsi, qword ptr [rax + rsi]
0xa529:	call	0x5ee0


0xa4ac:	mov	rax, rbp
0xa4af:	movdqa	xmm0, xmmword ptr [rsp + 0xd0]
0xa4b8:	shl	rax, 5
0xa4bc:	mov	rsi, rdx
0xa4bf:	mov	qword ptr [rsp + 0x38], rdx
0xa4c4:	add	rax, r13
0xa4c7:	movups	xmmword ptr [rax], xmm0
0xa4ca:	movdqa	xmm0, xmmword ptr [rsp + 0xe0]
0xa4d3:	movups	xmmword ptr [rax + 0x10], xmm0
0xa4d7:	lea	rax, [rbp + rbp*2]
0xa4dc:	lea	rdi, [rdi + rax*8]
0xa4e0:	movdqa	xmm0, xmmword ptr [rsp + 0xb0]
0xa4e9:	movups	xmmword ptr [r13 + r10], xmm0
0xa4ef:	movdqa	xmm0, xmmword ptr [rsp + 0xc0]
0xa4f8:	movups	xmmword ptr [r13 + r10 + 0x10], xmm0
0xa4fe:	call	0x8580


0xa6cc:	mov	rdi, qword ptr [rsp + 0x30]
0xa6d1:	cmp	dword ptr [rdi + 0xb4], 1
0xa6d8:	jg	0xa3a5


0xa6de:	mov	rsi, qword ptr [rsp + 0x30]
0xa6e3:	xor	ecx, ecx
0xa6e5:	xor	edx, edx
0xa6e7:	mov	rax, qword ptr [rsi + rdx*8 + 0xb8]
0xa6ef:	not	rax
0xa6f2:	and	rax, qword ptr [r12 + rdx*8]
0xa6f6:	mov	qword ptr [r12 + rdx*8], rax
0xa6fa:	add	rdx, 1
0xa6fe:	or	rcx, rax
0xa701:	cmp	rdx, 4
0xa705:	jne	0xa6e7


0xa3a5:	mov	rsi, qword ptr [rdi + 0x78]
0xa3a9:	xor	ecx, ecx
0xa3ab:	xor	edx, edx
0xa3ad:	mov	rax, qword ptr [rdi + rdx*8 + 0xb8]
0xa3b5:	and	rax, qword ptr [rsi + rdx*8]
0xa3b9:	not	rax
0xa3bc:	and	rax, qword ptr [r12 + rdx*8]
0xa3c0:	mov	qword ptr [r12 + rdx*8], rax
0xa3c4:	add	rdx, 1
0xa3c8:	or	rcx, rax
0xa3cb:	cmp	rdx, 4
0xa3cf:	jne	0xa3ad


0xa733:	jmp	0xa7a2


0xa7c8:	test	rsi, rsi
0xa7cb:	jne	0xa385


0xa7ab:	mov	rcx, qword ptr [r12 + rdx*8]
0xa7af:	and	rcx, qword ptr [rdi + rdx*8 + 0xb8]
0xa7b7:	mov	qword ptr [r12 + rdx*8], rcx
0xa7bb:	add	rdx, 1
0xa7bf:	or	rsi, rcx
0xa7c2:	cmp	rdx, 4
0xa7c6:	jne	0xa7ab


0xa37c:	test	rsi, rsi
0xa37f:	je	0x9faf


0xa358:	mov	rdx, qword ptr [rdi + rcx*8]
0xa35c:	not	rdx
0xa35f:	or	rdx, qword ptr [r8 + rcx*8 + 0xb8]
0xa367:	and	rdx, qword ptr [r12 + rcx*8]
0xa36b:	mov	qword ptr [r12 + rcx*8], rdx
0xa36f:	add	rcx, 1
0xa373:	or	rsi, rdx
0xa376:	cmp	rcx, 4
0xa37a:	jne	0xa358


0xa707:	test	rcx, rcx
0xa70a:	jne	0xa3e0


0xa6e7:	mov	rax, qword ptr [rsi + rdx*8 + 0xb8]
0xa6ef:	not	rax
0xa6f2:	and	rax, qword ptr [r12 + rdx*8]
0xa6f6:	mov	qword ptr [r12 + rdx*8], rax
0xa6fa:	add	rdx, 1
0xa6fe:	or	rcx, rax
0xa701:	cmp	rdx, 4
0xa705:	jne	0xa6e7


0xa3d1:	test	rcx, rcx
0xa3d4:	je	0x9faf


0xa3ad:	mov	rax, qword ptr [rdi + rdx*8 + 0xb8]
0xa3b5:	and	rax, qword ptr [rsi + rdx*8]
0xa3b9:	not	rax
0xa3bc:	and	rax, qword ptr [r12 + rdx*8]
0xa3c0:	mov	qword ptr [r12 + rdx*8], rax
0xa3c4:	add	rdx, 1
0xa3c8:	or	rcx, rax
0xa3cb:	cmp	rdx, 4
0xa3cf:	jne	0xa3ad


0xa7d1:	jmp	0x9faf


0xa710:	jmp	0x9faf


0xa503:	test	eax, eax
0xa505:	jne	0xa5e0


0xa50b:	mov	rdx, qword ptr [rsp + 0x38]
0xa510:	add	rbp, 1
0xa514:	mov	rax, qword ptr [rsp + 8]
0xa519:	mov	rsi, qword ptr [rsp + 0x20]
0xa51e:	mov	rdi, rdx
0xa521:	mov	rax, qword ptr [rax + 0x18]
0xa525:	mov	rsi, qword ptr [rax + rsi]
0xa529:	call	0x5ee0


0xa5e0:	mov	rax, qword ptr [rsp + 0x18]
0xa5e5:	lea	rbx, [rax + 0x10]
0xa5e9:	lea	rax, [rbp + rbp*2]
0xa5ee:	lea	rbp, [rbx + rax*8]
0xa5f2:	nop	word ptr [rax + rax]
0xa5f8:	mov	rdi, qword ptr [rbx]
0xa5fb:	add	rbx, 0x18
0xa5ff:	call	0x1880


0xa52e:	test	al, al
0xa530:	je	0xa5e0


0xa536:	test	r15, r15
0xa539:	je	0xa548


0xa604:	cmp	rbp, rbx
0xa607:	jne	0xa5f8


0xa609:	mov	rdi, qword ptr [rsp + 0x18]
0xa60e:	call	0x1880


0xa5f8:	mov	rdi, qword ptr [rbx]
0xa5fb:	add	rbx, 0x18
0xa5ff:	call	0x1880


0xa613:	jmp	0xa2c0


0xaa33:	test	rbp, rbp
0xaa36:	jne	0xa2c0


0xaa3c:	jmp	0xa9b4


0xa9b4:	mov	esi, 0x100
0xa9b9:	mov	edi, 8
0xa9be:	call	0x1a70


0xa9c3:	mov	rbx, qword ptr [rsp + 8]
0xa9c8:	test	rax, rax
0xa9cb:	mov	qword ptr [rbx + 0x58], rax
0xa9cf:	setne	al
0xa9d2:	jmp	0xa2c2


0xa2c2:	mov	rbx, qword ptr [rsp + 0xf8]
0xa2ca:	xor	rbx, qword ptr fs:[0x28]
0xa2d3:	jne	0xaa24


0xeed5:	test	al, al
0xeed7:	jne	0xe5f4


0xeedd:	mov	rdi, qword ptr [rsp + 0x1d8]
0xeee5:	mov	dword ptr [rsp + 0xd0], 0xc
0xeef0:	test	rdi, rdi
0xeef3:	jne	0xee20


0xe5f4:	mov	rax, qword ptr [r14 + 0x58]
0xe5f8:	test	rax, rax
0xe5fb:	je	0xed10


0x9ff1:	test	rax, rax
0x9ff4:	mov	r12, rax
0x9ff7:	mov	qword ptr [rsp + 0x80], rax
0x9fff:	je	0xa7ff


0xa7ff:	mov	rdi, r12
0xa802:	call	0x1880


0xa005:	movabs	rax, 0xaaaaaaaaaaaa855
0xa00f:	mov	dword ptr [rsp + 0x6c], 0
0xa017:	cmp	rbp, rax
0xa01a:	jg	0xa7ff


0xa020:	lea	rax, [rbp + rbp*2]
0xa025:	shl	rax, 3
0xa029:	mov	rdi, rax
0xa02c:	mov	qword ptr [rsp + 0x58], rax
0xa031:	call	0x1ac0


0xa807:	mov	rax, qword ptr [rsp + 0x18]
0xa80c:	lea	rbx, [rax + 0x10]
0xa810:	lea	rax, [rbp + rbp*2]
0xa815:	lea	rbp, [rbx + rax*8]
0xa819:	nop	dword ptr [rax]
0xa820:	mov	rdi, qword ptr [rbx]
0xa823:	add	rbx, 0x18
0xa827:	call	0x1880


0xa82c:	cmp	rbp, rbx
0xa82f:	jne	0xa820


0xa831:	mov	rdi, qword ptr [rsp + 0x18]
0xa836:	call	0x1880


0xa820:	mov	rdi, qword ptr [rbx]
0xa823:	add	rbx, 0x18
0xa827:	call	0x1880


0xa83b:	jmp	0xa2c0


0xa036:	test	rax, rax
0xa039:	mov	qword ptr [rsp + 0x10], rax
0xa03e:	je	0xa7ff


0xa044:	mov	rax, qword ptr [rsp + 0x10]
0xa049:	sub	rbx, 8
0xa04d:	mov	r12, qword ptr [rsp + 0x40]
0xa052:	pxor	xmm0, xmm0
0xa056:	lea	r14, [rsp + 0x70]
0xa05b:	mov	qword ptr [rsp + 0x20], rbp
0xa060:	mov	byte ptr [rsp + 0x4f], 0
0xa065:	mov	rbp, r15
0xa068:	add	rax, rbx
0xa06b:	mov	qword ptr [rsp + 0x50], r12
0xa070:	add	rbx, rax
0xa073:	mov	qword ptr [rsp + 0x30], rax
0xa078:	mov	rax, qword ptr [rsp + 0x18]
0xa07d:	movaps	xmmword ptr [rsp + 0xd0], xmm0
0xa085:	mov	qword ptr [rsp + 0x38], rbx
0xa08a:	xor	ebx, ebx
0xa08c:	lea	r13, [rax + 8]
0xa090:	lea	rax, [rsp + 0x6c]
0xa095:	movaps	xmmword ptr [rsp + 0xe0], xmm0
0xa09d:	mov	qword ptr [rsp + 0x28], rax
0xa0a2:	mov	qword ptr [rsp + 0x78], 0
0xa0ab:	cmp	qword ptr [r13], 0
0xa0b0:	jle	0xa0f8


0xa0f8:	mov	rdi, qword ptr [rsp + 0x28]
0xa0fd:	xor	ecx, ecx
0xa0ff:	mov	rsi, rbp
0xa102:	mov	rdx, r14
0xa105:	call	0x8770


0xa0b2:	xor	r15d, r15d
0xa0b5:	nop	dword ptr [rax]
0xa0b8:	mov	rax, qword ptr [r13 + 8]
0xa0bc:	mov	rdx, qword ptr [rax + r15*8]
0xa0c0:	mov	rax, qword ptr [rbp + 0x18]
0xa0c4:	mov	rax, qword ptr [rax + rdx*8]
0xa0c8:	cmp	rax, -1
0xa0cc:	je	0xa0ee


0xa0ee:	add	r15, 1
0xa0f2:	cmp	qword ptr [r13], r15
0xa0f6:	jg	0xa0b8


0xa0ce:	lea	rdx, [rax + rax*2]
0xa0d2:	mov	rax, qword ptr [rbp + 0x30]
0xa0d6:	mov	rdi, r14
0xa0d9:	lea	rsi, [rax + rdx*8]
0xa0dd:	call	0x7940


0xa0b8:	mov	rax, qword ptr [r13 + 8]
0xa0bc:	mov	rdx, qword ptr [rax + r15*8]
0xa0c0:	mov	rax, qword ptr [rbp + 0x18]
0xa0c4:	mov	rax, qword ptr [rax + rdx*8]
0xa0c8:	cmp	rax, -1
0xa0cc:	je	0xa0ee


0xa0e2:	test	eax, eax
0xa0e4:	mov	dword ptr [rsp + 0x6c], eax
0xa0e8:	jne	0xa7e8


0xa7e8:	mov	rbp, qword ptr [rsp + 0x20]
0xa7ed:	mov	rdi, qword ptr [rsp + 0x10]
0xa7f2:	call	0x1880


0xa7f7:	mov	r12, qword ptr [rsp + 0x80]
0xa7ff:	mov	rdi, r12
0xa802:	call	0x1880


0xa10a:	mov	rsi, qword ptr [rsp + 0x10]
0xa10f:	test	rax, rax
0xa112:	mov	qword ptr [rsi + rbx*8], rax
0xa116:	je	0xa8c8


0xa8c8:	mov	ecx, dword ptr [rsp + 0x6c]
0xa8cc:	test	ecx, ecx
0xa8ce:	je	0xa11c


0xa11c:	cmp	byte ptr [rax + 0x68], 0
0xa120:	js	0xa840


0xa8d4:	jmp	0xa7e8


0xa840:	mov	rdi, qword ptr [rsp + 0x28]
0xa845:	mov	ecx, 1
0xa84a:	mov	rdx, r14
0xa84d:	mov	rsi, rbp
0xa850:	call	0x8770


0xa126:	mov	rdi, qword ptr [rsp + 0x30]
0xa12b:	mov	rsi, qword ptr [rsp + 0x38]
0xa130:	mov	qword ptr [rdi + rbx*8], rax
0xa134:	mov	rax, qword ptr [rsp + 0x10]
0xa139:	mov	rax, qword ptr [rax + rbx*8]
0xa13d:	mov	qword ptr [rsi + rbx*8], rax
0xa141:	lea	rdx, [rsp + 0xd0]
0xa149:	xor	eax, eax
0xa14b:	mov	rcx, qword ptr [rdx + rax]
0xa14f:	or	rcx, qword ptr [r12 + rax]
0xa153:	mov	qword ptr [rdx + rax], rcx
0xa157:	add	rax, 8
0xa15b:	cmp	rax, 0x20
0xa15f:	jne	0xa14b


0xa161:	add	rbx, 1
0xa165:	add	r13, 0x18
0xa169:	add	r12, 0x20
0xa16d:	cmp	rbx, qword ptr [rsp + 0x20]
0xa172:	jne	0xa0a2


0xa14b:	mov	rcx, qword ptr [rdx + rax]
0xa14f:	or	rcx, qword ptr [r12 + rax]
0xa153:	mov	qword ptr [rdx + rax], rcx
0xa157:	add	rax, 8
0xa15b:	cmp	rax, 0x20
0xa15f:	jne	0xa14b


0xa178:	cmp	byte ptr [rsp + 0x4f], 0
0xa17d:	mov	r15, rbp
0xa180:	mov	rbp, qword ptr [rsp + 0x20]
0xa185:	mov	qword ptr [rsp + 0x20], rdx
0xa18a:	jne	0xa8d9


0xa0a2:	mov	qword ptr [rsp + 0x78], 0
0xa0ab:	cmp	qword ptr [r13], 0
0xa0b0:	jle	0xa0f8


0xa190:	mov	esi, 0x100
0xa195:	mov	edi, 8
0xa19a:	call	0x1a70


0xa8d9:	mov	esi, 0x200
0xa8de:	mov	edi, 8
0xa8e3:	call	0x1a70


0xa8e8:	mov	r11, rax
0xa8eb:	mov	rax, qword ptr [rsp + 8]
0xa8f0:	test	r11, r11
0xa8f3:	mov	qword ptr [rax + 0x60], r11
0xa8f7:	je	0xa7ed


0xa7ed:	mov	rdi, qword ptr [rsp + 0x10]
0xa7f2:	call	0x1880


0xa8fd:	mov	r13, qword ptr [rsp + 0x40]
0xa902:	mov	r10, qword ptr [rsp + 0x10]
0xa907:	mov	r12, r11
0xa90a:	mov	r14, qword ptr [rsp + 0x30]
0xa90f:	mov	rdx, qword ptr [rsp + 0x20]
0xa914:	xor	ebx, ebx
0xa916:	add	r13, 0x20
0xa91a:	mov	rax, qword ptr [rdx + rbx]
0xa91e:	test	rax, rax
0xa921:	je	0xa93f


0xa93f:	add	rbx, 8
0xa943:	add	r12, 0x200
0xa94a:	cmp	rbx, 0x20
0xa94e:	jne	0xa91a


0xa923:	mov	rsi, r12
0xa926:	mov	ecx, 1
0xa92b:	test	al, 1
0xa92d:	jne	0xa9dc


0xa950:	jmp	0xa20e


0xa91a:	mov	rax, qword ptr [rdx + rbx]
0xa91e:	test	rax, rax
0xa921:	je	0xa93f


0xa933:	add	rcx, rcx
0xa936:	add	rsi, 8
0xa93a:	shr	rax, 1
0xa93d:	jne	0xa92b


0xa9dc:	mov	rdi, qword ptr [rsp + 0x18]
0xa9e1:	test	qword ptr [rdi + rbx + 0x1800], rcx
0xa9e9:	jne	0xaa20


0xa20e:	test	byte ptr [rsp + 0xd1], 4
0xa216:	je	0xa252


0xa92b:	test	al, 1
0xa92d:	jne	0xa9dc


0xa9eb:	lea	r9, [r13 + rbx]
0xa9f0:	xor	r8d, r8d
0xa9f3:	mov	r15, qword ptr [r9]
0xa9f6:	add	r8, 1
0xa9fa:	add	r9, 0x20
0xa9fe:	mov	rdi, r8
0xaa01:	and	r15, rcx
0xaa04:	test	r15, r15
0xaa07:	je	0xa9f3


0xaa20:	xor	edi, edi
0xaa22:	jmp	0xaa09


0xa252:	mov	rdi, qword ptr [rsp + 0x10]
0xa257:	call	0x1880


0xa218:	xor	eax, eax
0xa21a:	mov	rdx, qword ptr [rsp + 0x50]
0xa21f:	jmp	0xa22e


0xa9f3:	mov	r15, qword ptr [r9]
0xa9f6:	add	r8, 1
0xa9fa:	add	r9, 0x20
0xa9fe:	mov	rdi, r8
0xaa01:	and	r15, rcx
0xaa04:	test	r15, r15
0xaa07:	je	0xa9f3


0xaa09:	mov	r8, qword ptr [r10 + rdi*8]
0xaa0d:	mov	qword ptr [rsi], r8
0xaa10:	mov	rdi, qword ptr [r14 + rdi*8]
0xaa14:	mov	qword ptr [rsi + 0x800], rdi
0xaa1b:	jmp	0xa933


0xa22e:	test	qword ptr [rdx], 0x400
0xa235:	je	0xa221


0xa221:	add	rax, 1
0xa225:	add	rdx, 0x20
0xa229:	cmp	rax, rbp
0xa22c:	je	0xa252


0xa237:	mov	rbx, qword ptr [rsp + 0x38]
0xa23c:	cmp	byte ptr [rsp + 0x4f], 0
0xa241:	mov	rax, qword ptr [rbx + rax*8]
0xa245:	mov	qword ptr [r11 + 0x50], rax
0xa249:	je	0xa252


0xa24b:	mov	qword ptr [r11 + 0x850], rax
0xa252:	mov	rdi, qword ptr [rsp + 0x10]
0xa257:	call	0x1880


0xa25c:	mov	rdi, qword ptr [rsp + 0x80]
0xa264:	call	0x1880


0xa269:	mov	rax, qword ptr [rsp + 0x18]
0xa26e:	mov	rbx, qword ptr [rsp + 0x58]
0xa273:	lea	rbp, [rax + 0x10]
0xa277:	add	rbx, rbp
0xa27a:	mov	rdi, qword ptr [rbp]
0xa27e:	add	rbp, 0x18
0xa282:	call	0x1880


0xa287:	cmp	rbx, rbp
0xa28a:	jne	0xa27a


0xa28c:	mov	rdi, qword ptr [rsp + 0x18]
0xa291:	call	0x1880


0xa27a:	mov	rdi, qword ptr [rbp]
0xa27e:	add	rbp, 0x18
0xa282:	call	0x1880


0xa296:	mov	eax, 1
0xa29b:	jmp	0xa2c2


0xa19f:	mov	r11, rax
0xa1a2:	mov	rax, qword ptr [rsp + 8]
0xa1a7:	test	r11, r11
0xa1aa:	mov	qword ptr [rax + 0x58], r11
0xa1ae:	je	0xa7ed


0xa1b4:	mov	rbx, qword ptr [rsp + 0x40]
0xa1b9:	mov	r12, qword ptr [rsp + 0x10]
0xa1be:	xor	r9d, r9d
0xa1c1:	mov	r13, qword ptr [rsp + 0x30]
0xa1c6:	mov	rdx, qword ptr [rsp + 0x20]
0xa1cb:	add	rbx, 0x20
0xa1cf:	mov	rax, qword ptr [rdx + r9]
0xa1d3:	test	rax, rax
0xa1d6:	je	0xa204


0xa204:	add	r9, 8
0xa208:	cmp	r9, 0x20
0xa20c:	jne	0xa1cf


0xa1d8:	mov	rsi, r9
0xa1db:	mov	ecx, 1
0xa1e0:	shl	rsi, 6
0xa1e4:	add	rsi, r11
0xa1e7:	nop	word ptr [rax + rax]
0xa1f0:	test	al, 1
0xa1f2:	jne	0xa958


0xa1cf:	mov	rax, qword ptr [rdx + r9]
0xa1d3:	test	rax, rax
0xa1d6:	je	0xa204


0xa1f8:	add	rcx, rcx
0xa1fb:	add	rsi, 8
0xa1ff:	shr	rax, 1
0xa202:	jne	0xa1f0


0xa958:	mov	rdi, qword ptr [rsp + 0x18]
0xa95d:	test	qword ptr [rdi + r9 + 0x1800], rcx
0xa965:	jne	0xa9d7


0xa1f0:	test	al, 1
0xa1f2:	jne	0xa958


0xa967:	lea	rdi, [rbx + r9]
0xa96b:	xor	r8d, r8d
0xa96e:	nop	
0xa970:	mov	r10, qword ptr [rdi]
0xa973:	add	r8, 1
0xa977:	add	rdi, 0x20
0xa97b:	and	r10, rcx
0xa97e:	test	r10, r10
0xa981:	je	0xa970


0xa9d7:	xor	r8d, r8d
0xa9da:	jmp	0xa987


0xa970:	mov	r10, qword ptr [rdi]
0xa973:	add	r8, 1
0xa977:	add	rdi, 0x20
0xa97b:	and	r10, rcx
0xa97e:	test	r10, r10
0xa981:	je	0xa970


0xa983:	shl	r8, 3
0xa987:	test	qword ptr [r15 + r9 + 0xb8], rcx
0xa98f:	je	0xa99e


0xa987:	test	qword ptr [r15 + r9 + 0xb8], rcx
0xa98f:	je	0xa99e


0xa99e:	mov	rdi, qword ptr [r12 + r8]
0xa9a2:	mov	qword ptr [rsi], rdi
0xa9a5:	jmp	0xa1f8


0xa991:	mov	rdi, qword ptr [r13 + r8]
0xa996:	mov	qword ptr [rsi], rdi
0xa999:	jmp	0xa1f8


0xa855:	mov	rdi, qword ptr [rsp + 0x30]
0xa85a:	test	rax, rax
0xa85d:	mov	qword ptr [rdi + rbx*8], rax
0xa861:	je	0xa7d6


0xa7d6:	mov	edx, dword ptr [rsp + 0x6c]
0xa7da:	test	edx, edx
0xa7dc:	je	0xa867


0xa867:	mov	rdi, qword ptr [rsp + 0x10]
0xa86c:	cmp	rax, qword ptr [rdi + rbx*8]
0xa870:	je	0xa88b


0xa88b:	mov	rdi, qword ptr [rsp + 0x28]
0xa890:	mov	rsi, rbp
0xa893:	mov	ecx, 2
0xa898:	mov	rdx, r14
0xa89b:	call	0x8770


0xa872:	movzx	edi, byte ptr [rsp + 0x4f]
0xa877:	cmp	dword ptr [rbp + 0xb4], 2
0xa87e:	mov	eax, 1
0xa883:	cmovge	edi, eax
0xa886:	mov	byte ptr [rsp + 0x4f], dil
0xa88b:	mov	rdi, qword ptr [rsp + 0x28]
0xa890:	mov	rsi, rbp
0xa893:	mov	ecx, 2
0xa898:	mov	rdx, r14
0xa89b:	call	0x8770


0xa8a0:	mov	rsi, qword ptr [rsp + 0x38]
0xa8a5:	test	rax, rax
0xa8a8:	mov	qword ptr [rsi + rbx*8], rax
0xa8ac:	jne	0xa141


0xa8b2:	mov	eax, dword ptr [rsp + 0x6c]
0xa8b6:	test	eax, eax
0xa8b8:	je	0xa141


0xa141:	lea	rdx, [rsp + 0xd0]
0xa149:	xor	eax, eax
0xa14b:	mov	rcx, qword ptr [rdx + rax]
0xa14f:	or	rcx, qword ptr [r12 + rax]
0xa153:	mov	qword ptr [rdx + rax], rcx
0xa157:	add	rax, 8
0xa15b:	cmp	rax, 0x20
0xa15f:	jne	0xa14b


0xa8be:	jmp	0xa7e8


0xa5b0:	test	rax, rax
0xa5b3:	mov	qword ptr [rbx + 0x10], rax
0xa5b7:	je	0xa29d


0xa29d:	test	rbp, rbp
0xa2a0:	mov	qword ptr [rbx + 8], 0
0xa2a8:	mov	qword ptr [rbx], 0
0xa2af:	jne	0xa5e0


0xa5bd:	mov	qword ptr [rax], r13
0xa5c0:	add	rbp, 1
0xa5c4:	pxor	xmm0, xmm0
0xa5c8:	movaps	xmmword ptr [r12], xmm0
0xa5cd:	movaps	xmmword ptr [r12 + 0x10], xmm0
0xa5d3:	jmp	0x9faf


0xa2b5:	mov	rdi, qword ptr [rsp + 0x18]
0xa2ba:	call	0x1880


0xdb4c:	test	rax, rax
0xdb4f:	mov	qword ptr [rsp + 0x50], rax
0xdb54:	je	0xde34


0xde34:	mov	eax, 0xc
0xde39:	jmp	0xde15


0xdb5a:	lea	rcx, [rsp + 0x40]
0xdb5f:	mov	qword ptr [rax], rbx
0xdb62:	mov	rdx, r15
0xdb65:	mov	rsi, r13
0xdb68:	mov	rdi, r14
0xdb6b:	mov	qword ptr [rsp + 0x10], rcx
0xdb70:	call	0xf570


0xde15:	mov	rdx, qword ptr [rsp + 0x58]
0xde1a:	xor	rdx, qword ptr fs:[0x28]
0xde23:	jne	0xde3b


0xde25:	add	rsp, 0x68
0xde29:	pop	rbx
0xde2a:	pop	rbp
0xde2b:	pop	r12
0xde2d:	pop	r13
0xde2f:	pop	r14
0xde31:	pop	r15
0xde33:	ret	


0xde3b:	call	0x1990


0xdb75:	test	eax, eax
0xdb77:	jne	0xde05


0xdb7d:	lea	rax, [r15*8]
0xdb85:	test	r15, r15
0xdb88:	mov	dword ptr [rsp + 0x2c], 0
0xdb90:	mov	qword ptr [rsp + 8], rax
0xdb95:	lea	rax, [r13 + 0x30]
0xdb99:	mov	qword ptr [rsp + 0x38], rax
0xdb9e:	jle	0xdda7


0xde05:	mov	rdi, qword ptr [rsp + 0x50]
0xde0a:	mov	dword ptr [rsp], eax
0xde0d:	call	0x1880


0xdda7:	xor	eax, eax
0xdda9:	jmp	0xde05


0xdba4:	mov	rdi, qword ptr [r13]
0xdba8:	mov	rax, qword ptr [rsp + 8]
0xdbad:	cmp	qword ptr [rdi + rax], 0
0xdbb2:	je	0xddc8


0xddc8:	mov	rax, qword ptr [rsp]
0xddcc:	add	dword ptr [rsp + 0x2c], 1
0xddd1:	mov	ecx, dword ptr [rsp + 0x2c]
0xddd5:	cmp	dword ptr [rax + 0xe0], ecx
0xdddb:	jge	0xdbd4


0xdbb8:	mov	rax, qword ptr [rsp]
0xdbbc:	mov	dword ptr [rsp + 0x2c], 0
0xdbc4:	mov	ecx, dword ptr [rsp + 0x2c]
0xdbc8:	cmp	dword ptr [rax + 0xe0], ecx
0xdbce:	jl	0xdde1


0xdde1:	mov	rdx, qword ptr [rsp + 8]
0xdde6:	xor	esi, esi
0xdde8:	call	0x1a10


0xdbd4:	mov	rbx, qword ptr [rsp]
0xdbd8:	mov	rdi, qword ptr [rsp + 8]
0xdbdd:	sub	r15, 1
0xdbe1:	mov	qword ptr [rsp + 0x48], 0
0xdbea:	mov	rax, qword ptr [rbx + 0xb8]
0xdbf1:	mov	r12, qword ptr [rax + rdi - 8]
0xdbf6:	test	r12, r12
0xdbf9:	je	0xdd80


0xdd80:	mov	rcx, qword ptr [rsp + 0x10]
0xdd85:	mov	rdi, qword ptr [rsp]
0xdd89:	mov	rdx, r15
0xdd8c:	mov	rsi, r13
0xdd8f:	call	0xf570


0xdbff:	cmp	qword ptr [r12 + 0x28], 0
0xdc05:	mov	r14, qword ptr [rbx + 0x98]
0xdc0c:	jle	0xdd80


0xdc12:	xor	ebx, ebx
0xdc14:	jmp	0xdcbb


0xdcbb:	mov	rax, qword ptr [r12 + 0x30]
0xdcc0:	mov	rsi, qword ptr [r14]
0xdcc3:	mov	rbp, qword ptr [rax + rbx*8]
0xdcc7:	mov	r9, rbp
0xdcca:	shl	r9, 4
0xdcce:	add	rsi, r9
0xdcd1:	test	byte ptr [rsi + 0xa], 0x10
0xdcd5:	je	0xdc20


0xdc20:	mov	rdi, qword ptr [rsp]
0xdc24:	mov	rdx, r15
0xdc27:	call	0x92f0


0xdcdb:	mov	rcx, qword ptr [rsp]
0xdcdf:	mov	rax, qword ptr [r13 + 0x18]
0xdce3:	mov	r8, r15
0xdce6:	mov	rdx, rbp
0xdce9:	mov	qword ptr [rsp + 0x18], r9
0xdcee:	mov	r11, qword ptr [rcx + 0x98]
0xdcf5:	mov	qword ptr [rsp + 0x20], rax
0xdcfa:	mov	rdi, qword ptr [r11]
0xdcfd:	lea	rsi, [r11 + 0xd8]
0xdd04:	mov	qword ptr [rsp + 0x30], r11
0xdd09:	call	0xbbd0


0xdd0e:	movsxd	r10, eax
0xdd11:	mov	r9, qword ptr [rsp + 0x18]
0xdd16:	cmp	r10d, 0
0xdd1a:	jle	0xddb0


0xddb0:	jne	0xdc62


0xdd20:	movsxd	rax, r10d
0xdd23:	add	rax, r15
0xdd26:	cmp	qword ptr [rsp + 0x20], rax
0xdd2b:	jl	0xdc62


0xddb6:	mov	rsi, qword ptr [r14]
0xddb9:	add	rsi, r9
0xddbc:	jmp	0xdc20


0xdc62:	cmp	qword ptr [r13 + 0x28], 0
0xdc67:	je	0xdc97


0xdd31:	mov	rdx, qword ptr [r13]
0xdd35:	mov	r11, qword ptr [rsp + 0x30]
0xdd3a:	mov	rax, qword ptr [rdx + rax*8]
0xdd3e:	test	rax, rax
0xdd41:	je	0xddb6


0xdc97:	mov	rdi, qword ptr [rsp + 0x10]
0xdc9c:	mov	rsi, rbp
0xdc9f:	call	0x5ee0


0xdc69:	mov	rax, qword ptr [r14 + 0x18]
0xdc6d:	sub	rsp, 8
0xdc71:	lea	rsi, [r13 + 0x28]
0xdc75:	lea	r8, [r10 + r15]
0xdc79:	mov	r9, rbp
0xdc7c:	mov	rcx, qword ptr [rax + rbp*8]
0xdc80:	push	r15
0xdc82:	mov	rdx, qword ptr [rsp + 0x48]
0xdc87:	mov	rdi, qword ptr [rsp + 0x10]
0xdc8c:	call	0x76d0


0xdd43:	mov	rdx, qword ptr [r11 + 0x18]
0xdd47:	mov	rdi, qword ptr [rax + 0x10]
0xdd4b:	lea	rsi, [rax + 0x18]
0xdd4f:	mov	qword ptr [rsp + 0x18], r9
0xdd54:	mov	rdx, qword ptr [rdx + rbp*8]
0xdd58:	call	0x7420


0xdd5d:	test	rax, rax
0xdd60:	jne	0xdc62


0xdd66:	mov	r9, qword ptr [rsp + 0x18]
0xdd6b:	mov	rsi, qword ptr [r14]
0xdd6e:	add	rsi, r9
0xdd71:	jmp	0xdc20


0xdc91:	test	al, al
0xdc93:	pop	rdx
0xdc94:	pop	rcx
0xdc95:	jne	0xdcac


0xdcac:	add	rbx, 1
0xdcb0:	cmp	rbx, qword ptr [r12 + 0x28]
0xdcb5:	jge	0xdd80


0xdca4:	test	al, al
0xdca6:	je	0xde00


0xde00:	mov	eax, 0xc
0xde05:	mov	rdi, qword ptr [rsp + 0x50]
0xde0a:	mov	dword ptr [rsp], eax
0xde0d:	call	0x1880


0xdc2c:	test	al, al
0xdc2e:	je	0xdcac


0xdc30:	mov	rax, qword ptr [r13]
0xdc34:	mov	rcx, qword ptr [rsp + 8]
0xdc39:	mov	rax, qword ptr [rax + rcx]
0xdc3d:	test	rax, rax
0xdc40:	je	0xdcac


0xdc42:	mov	rdx, qword ptr [r14 + 0x18]
0xdc46:	mov	rdi, qword ptr [rax + 0x10]
0xdc4a:	lea	rsi, [rax + 0x18]
0xdc4e:	mov	rdx, qword ptr [rdx + rbp*8]
0xdc52:	call	0x7420


0xdc57:	test	rax, rax
0xdc5a:	je	0xdcac


0xdc5c:	mov	r10d, 1
0xdc62:	cmp	qword ptr [r13 + 0x28], 0
0xdc67:	je	0xdc97


0xdd94:	test	eax, eax
0xdd96:	jne	0xde05


0xdd98:	sub	qword ptr [rsp + 8], 8
0xdd9e:	test	r15, r15
0xdda1:	jne	0xdba4


0xdded:	mov	rdi, qword ptr [rsp + 0x50]
0xddf2:	call	0x1880


0xddf7:	xor	eax, eax
0xddf9:	jmp	0xde15


0xde12:	mov	eax, dword ptr [rsp]
0xde15:	mov	rdx, qword ptr [rsp + 0x58]
0xde1a:	xor	rdx, qword ptr fs:[0x28]
0xde23:	jne	0xde3b


0xe813:	mov	rdi, qword ptr [rsp + 0x110]
0xe81b:	mov	r15d, eax
0xe81e:	call	0x1880


0xe823:	test	r15d, r15d
0xe826:	jne	0xf444


0xe82c:	cmp	qword ptr [r12], 0
0xe831:	jne	0xf4a3


0xf444:	mov	r14, qword ptr [rsp + 0x18]
0xf449:	mov	eax, r15d
0xf44c:	mov	rdi, r12
0xf44f:	mov	dword ptr [rsp + 8], eax
0xf453:	call	0x1880


0xe837:	cmp	qword ptr [rbp], 0
0xe83c:	jne	0xf4a3


0xf4a3:	mov	r15, qword ptr [rsp + 0x10]
0xf4a8:	mov	rcx, qword ptr [rsp + 8]
0xf4ad:	mov	rdx, rbp
0xf4b0:	mov	rsi, r12
0xf4b3:	mov	qword ptr [rsp + 0x20], r14
0xf4b8:	mov	rdi, r15
0xf4bb:	call	0x8c30


0xe842:	mov	rdx, qword ptr [rsp + 0x1d8]
0xe84a:	nop	word ptr [rax + rax]
0xe850:	sub	r14, 1
0xe854:	cmp	r14, -1
0xe858:	je	0xf31b


0xf31b:	mov	rdi, r12
0xf31e:	call	0x1880


0xe85e:	mov	rax, qword ptr [rdx + r14*8]
0xe862:	test	rax, rax
0xe865:	je	0xe850


0xe850:	sub	r14, 1
0xe854:	cmp	r14, -1
0xe858:	je	0xf31b


0xe867:	test	byte ptr [rax + 0x68], 0x10
0xe86b:	je	0xe850


0xe86d:	mov	rsi, qword ptr [rax + 0x10]
0xe871:	mov	rdi, qword ptr [rsp]
0xe875:	lea	rdx, [rax + 0x18]
0xe879:	mov	rcx, r14
0xe87c:	call	0x9400


0xe881:	mov	r13, rax
0xe884:	lea	rax, [r14 + 1]
0xe888:	mov	qword ptr [rsp + 8], rax
0xe88d:	jmp	0xe7c0


0xe7c0:	mov	rax, qword ptr [rsp + 8]
0xe7c5:	xor	esi, esi
0xe7c7:	mov	rdi, rbp
0xe7ca:	lea	rdx, [rax*8]
0xe7d2:	call	0x1a10


0xf4c0:	mov	rdi, rbp
0xf4c3:	mov	dword ptr [rsp + 8], eax
0xf4c7:	call	0x1880


0xf4cc:	mov	eax, dword ptr [rsp + 8]
0xf4d0:	test	eax, eax
0xf4d2:	je	0xf0a2


0xf0a2:	mov	rdi, qword ptr [rsp + 0x1d8]
0xf0aa:	call	0x1880


0xf4d8:	xor	r14d, r14d
0xf4db:	jmp	0xf44c


0xf44c:	mov	rdi, r12
0xf44f:	mov	dword ptr [rsp + 8], eax
0xf453:	call	0x1880


0xf458:	mov	rdi, r14
0xf45b:	call	0x1880


0xf460:	mov	eax, dword ptr [rsp + 8]
0xf464:	cmp	eax, 1
0xf467:	je	0xed70


0xf0af:	mov	rax, qword ptr [rsp + 0x20]
0xf0b4:	mov	qword ptr [rsp + 0x1d8], r12
0xf0bc:	mov	qword ptr [rsp + 0x1d0], r13
0xf0c4:	mov	qword ptr [rsp + 0x1c8], rax
0xf0cc:	cmp	qword ptr [rsp + 0x270], 0
0xf0d5:	je	0xe990


0xf323:	mov	rdi, rbp
0xf326:	call	0x1880


0xf32b:	jmp	0xed70


0xf07a:	mov	rdi, qword ptr [rsp + 0x110]
0xf082:	mov	dword ptr [rsp + 8], eax
0xf086:	call	0x1880


0xf08b:	mov	eax, dword ptr [rsp + 8]
0xf08f:	test	eax, eax
0xf091:	jne	0xf4d8


0xf097:	cmp	qword ptr [r12], 0
0xf09c:	je	0xed63


0xed63:	mov	rdi, r12
0xed66:	call	0x1880


0xfc6e:	test	eax, eax
0xfc70:	jne	0xfd7e


0xfc76:	mov	rsi, qword ptr [rbx + 8]
0xfc7a:	mov	rdx, qword ptr [rsp + 0x60]
0xfc7f:	test	rsi, rsi
0xfc82:	je	0xfc9d


0xfc9d:	mov	r11, qword ptr [rsp + 0x38]
0xfca2:	mov	rax, qword ptr [rsp + 0x18]
0xfca7:	mov	rdi, qword ptr [rsp + 0x88]
0xfcaf:	lea	r9, [r11 + 0x30]
0xfcb3:	mov	qword ptr [rdx + rax], r15
0xfcb7:	mov	rdx, r13
0xfcba:	mov	rsi, r9
0xfcbd:	call	0x7420


0xfc84:	lea	rcx, [rbp + 1]
0xfc88:	mov	rdi, r12
0xfc8b:	call	0x8c30


0xfc90:	test	eax, eax
0xfc92:	jne	0xfd7e


0xfc98:	mov	rdx, qword ptr [rsp + 0x60]
0xfc9d:	mov	r11, qword ptr [rsp + 0x38]
0xfca2:	mov	rax, qword ptr [rsp + 0x18]
0xfca7:	mov	rdi, qword ptr [rsp + 0x88]
0xfcaf:	lea	r9, [r11 + 0x30]
0xfcb3:	mov	qword ptr [rdx + rax], r15
0xfcb7:	mov	rdx, r13
0xfcba:	mov	rsi, r9
0xfcbd:	call	0x7420


0xfcc2:	sub	rax, 1
0xfcc6:	mov	rdx, rax
0xfcc9:	js	0xfcd7


0xfcd7:	mov	rcx, qword ptr [rsp + 8]
0xfcdc:	lea	rax, [r13 + r13*4]
0xfce1:	mov	rdx, qword ptr [rcx + 0xd8]
0xfce8:	lea	rax, [rdx + rax*8]
0xfcec:	nop	dword ptr [rax]
0xfcf0:	add	r13, 1
0xfcf4:	cmp	byte ptr [rax + 0x20], 0
0xfcf8:	lea	r15, [rax + 0x28]
0xfcfc:	je	0xfd30


0xfccb:	lea	rdi, [r11 + 0x28]
0xfccf:	mov	rsi, r9
0xfcd2:	call	0x75a0


0x1380a:	test	rax, rax
0x1380d:	mov	qword ptr [rbx + 0x20], rax
0x13811:	je	0x138c0


0x138c0:	mov	ebp, 0xc
0x138c5:	pop	rbx
0x138c6:	mov	eax, ebp
0x138c8:	pop	rbp
0x138c9:	pop	r12
0x138cb:	pop	r13
0x138cd:	pop	r14
0x138cf:	ret	


0x13817:	mov	r13, rbp
0x1381a:	shl	r13, 0x15
0x1381e:	and	r13d, 0x400000
0x13825:	or	r13, r14
0x13828:	test	bpl, 4
0x1382c:	jne	0x13890


0x1382e:	and	byte ptr [rbx + 0x38], 0x7f
0x13832:	movzx	edx, byte ptr [rbx + 0x38]
0x13836:	shr	ebp, 3
0x13839:	mov	rdi, r12
0x1383c:	and	ebp, 1
0x1383f:	mov	qword ptr [rbx + 0x28], 0
0x13847:	shl	ebp, 4
0x1384a:	and	edx, 0xffffffef
0x1384d:	or	ebp, edx
0x1384f:	mov	byte ptr [rbx + 0x38], bpl
0x13853:	call	0x1980


0x13890:	and	r13, 0xffffffffffffffbf
0x13894:	or	byte ptr [rbx + 0x38], 0x80
0x13898:	or	r13, 0x100
0x1389f:	jmp	0x13832


0x13832:	movzx	edx, byte ptr [rbx + 0x38]
0x13836:	shr	ebp, 3
0x13839:	mov	rdi, r12
0x1383c:	and	ebp, 1
0x1383f:	mov	qword ptr [rbx + 0x28], 0
0x13847:	shl	ebp, 4
0x1384a:	and	edx, 0xffffffef
0x1384d:	or	ebp, edx
0x1384f:	mov	byte ptr [rbx + 0x38], bpl
0x13853:	call	0x1980


0x13b2c:	mov	ebx, dword ptr [rbp]
0x13b2f:	mov	rdi, rbp
0x13b32:	mov	r12, rax
0x13b35:	call	0x13d60


0x13858:	mov	rcx, r13
0x1385b:	mov	rdx, rax
0x1385e:	mov	rsi, r12
0x13861:	mov	rdi, rbx
0x13864:	call	0x11fd0


0x13869:	cmp	eax, 0x10
0x1386c:	mov	ebp, eax
0x1386e:	je	0x138a8


0x138a8:	mov	ebp, 8
0x138ad:	mov	rdi, qword ptr [rbx + 0x20]
0x138b1:	call	0x1880


0x13870:	test	eax, eax
0x13872:	jne	0x138ad


0x13874:	mov	rdi, rbx
0x13877:	call	0x13150


0x138ad:	mov	rdi, qword ptr [rbx + 0x20]
0x138b1:	call	0x1880


0x1387c:	pop	rbx
0x1387d:	mov	eax, ebp
0x1387f:	pop	rbp
0x13880:	pop	r12
0x13882:	pop	r13
0x13884:	pop	r14
0x13886:	ret	


0x138b6:	mov	qword ptr [rbx + 0x20], 0
0x138be:	jmp	0x1387c


0x13911:	test	r12, r12
0x13914:	lea	rbx, [rax + 1]
0x13918:	je	0x1392d


0x1392d:	add	rsp, 8
0x13931:	mov	rax, rbx
0x13934:	pop	rbx
0x13935:	pop	rbp
0x13936:	pop	r12
0x13938:	pop	r13
0x1393a:	ret	


0x1391a:	cmp	rbx, r12
0x1391d:	mov	rdx, rbx
0x13920:	ja	0x13948


0x13922:	mov	rsi, r13
0x13925:	mov	rdi, rbp
0x13928:	call	0x1a90


0x13948:	lea	rdx, [r12 - 1]
0x1394d:	mov	byte ptr [rbp + r12 - 1], 0
0x13953:	jmp	0x13922


0x139e6:	xor	ecx, ecx
0x139e8:	test	byte ptr [rbp + 0x38], 0x10
0x139ec:	mov	rdx, rax
0x139ef:	mov	rsi, qword ptr [rsp + 8]
0x139f4:	je	0x13a36


0x57c9:	mov	rdi, rbx
0x57cc:	lea	rsi, [rax + 1]
0x57d0:	pop	rbx
0x57d1:	jmp	0x5790


0xabe4:	cmp	rax, 1
0xabe8:	jne	0xac10


0xabea:	movzx	ecx, byte ptr [rbx]
0xabed:	mov	rdx, rcx
0xabf0:	and	ecx, 0x3f
0xabf3:	shr	rdx, 3
0xabf7:	shl	rax, cl
0xabfa:	and	edx, 0x18
0xabfd:	or	qword ptr [rbp + rdx], rax
0xac02:	add	rsp, 8
0xac06:	xor	eax, eax
0xac08:	pop	rbx
0xac09:	pop	rbp
0xac0a:	ret	


0xac10:	add	rsp, 8
0xac14:	mov	eax, 3
0xac19:	pop	rbx
0xac1a:	pop	rbp
0xac1b:	ret	


0x13c09:	cmp	rax, 1
0x13c0d:	jbe	0x13c1a


0x13c1a:	pop	rbx
0x13c1b:	ret	


0x13c0f:	cmp	byte ptr [rbx + rax - 1], 0x2f
0x13c14:	lea	rdx, [rax - 1]
0x13c18:	je	0x13c28


0x13c28:	cmp	rdx, 1
0x13c2c:	je	0x13c40


0x13c40:	mov	eax, 1
0x13c45:	pop	rbx
0x13c46:	ret	


0x13c2e:	cmp	byte ptr [rbx + rdx - 1], 0x2f
0x13c33:	lea	rax, [rdx - 1]
0x13c37:	je	0x13c20


0x13c20:	mov	rdx, rax
0x13c23:	nop	dword ptr [rax + rax]
0x13c28:	cmp	rdx, 1
0x13c2c:	je	0x13c40


0x13c39:	mov	rax, rdx
0x13c3c:	pop	rbx
0x13c3d:	ret	


0x3087:	sub	rbx, r12
0x308a:	mov	r13, rax
0x308d:	mov	rdi, rbp
0x3090:	add	rbx, rax
0x3093:	call	0x1980


0x3098:	test	r13, r13
0x309b:	mov	r14, rax
0x309e:	je	0x30d0


0x30d0:	xor	eax, eax
0x30d2:	cmp	byte ptr [rbp], 0x2f
0x30d6:	mov	edx, 0
0x30db:	sete	al
0x30de:	mov	qword ptr [rsp], rax
0x30e2:	mov	eax, 0x2e
0x30e7:	cmovne	eax, edx
0x30ea:	mov	byte ptr [rsp + 0xf], al
0x30ee:	lea	rdi, [rbx + r14 + 1]
0x30f3:	add	rdi, qword ptr [rsp]
0x30f7:	call	0x1ac0


0x30a0:	cmp	byte ptr [r12 + rbx - 1], 0x2f
0x30a6:	je	0x3150


0x3150:	mov	qword ptr [rsp], 0
0x3158:	mov	byte ptr [rsp + 0xf], 0
0x315d:	jmp	0x30ee


0x30ac:	xor	eax, eax
0x30ae:	cmp	byte ptr [rbp], 0x2f
0x30b2:	mov	edx, 0
0x30b7:	setne	al
0x30ba:	mov	qword ptr [rsp], rax
0x30be:	mov	eax, 0x2f
0x30c3:	cmove	eax, edx
0x30c6:	mov	byte ptr [rsp + 0xf], al
0x30ca:	jmp	0x30ee


0x30ee:	lea	rdi, [rbx + r14 + 1]
0x30f3:	add	rdi, qword ptr [rsp]
0x30f7:	call	0x1ac0


0x30fc:	test	rax, rax
0x30ff:	mov	r13, rax
0x3102:	je	0x3136


0x3136:	add	rsp, 0x18
0x313a:	mov	rax, r13
0x313d:	pop	rbx
0x313e:	pop	rbp
0x313f:	pop	r12
0x3141:	pop	r13
0x3143:	pop	r14
0x3145:	pop	r15
0x3147:	ret	


0x3104:	mov	rdi, rax
0x3107:	mov	rdx, rbx
0x310a:	mov	rsi, r12
0x310d:	call	0x1b80


0x1b80:	jmp	qword ptr [rip + 0x2173ca]




0x1cc3:	lea	rsi, [rip + 0x12556]
0x1cca:	lea	rdi, [rip + 0x12521]
0x1cd1:	call	0x1950


0x1950:	jmp	qword ptr [rip + 0x2174e2]




0x13cbb:	mov	rdx, rax
0x13cbe:	mov	eax, 1
0x13cc3:	test	rdx, rdx
0x13cc6:	je	0x13ce5


0x13ce5:	add	rsp, 8
0x13ce9:	ret	


0x13cc8:	lea	rdi, [rip + 0x1ac1]
0x13ccf:	mov	ecx, 2
0x13cd4:	mov	rsi, rdx
0x13cd7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x13cd7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x13cd9:	seta	cl
0x13cdc:	sbb	cl, 0
0x13cdf:	xor	eax, eax
0x13ce1:	test	cl, cl
0x13ce3:	jne	0x13cf0


0x13cf0:	lea	rdi, [rip + 0x1a9b]
0x13cf7:	mov	ecx, 6
0x13cfc:	mov	rsi, rdx
0x13cff:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x13cff:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x13d01:	seta	al
0x13d04:	sbb	al, 0
0x13d06:	test	al, al
0x13d08:	setne	al
0x13d0b:	add	rsp, 8
0x13d0f:	ret	


0x58cc:	test	al, al
0x58ce:	jne	0x58e0


0x58d0:	movzx	eax, byte ptr [r13]
0x58d5:	mov	ebp, 1
0x58da:	mov	dword ptr [rbx], eax
0x58dc:	nop	dword ptr [rax]
0x58e0:	mov	rdx, qword ptr [rsp + 8]
0x58e5:	xor	rdx, qword ptr fs:[0x28]
0x58ee:	mov	rax, rbp
0x58f1:	jne	0x58fe


0x12107:	movzx	edx, byte ptr [rax]
0x1210a:	and	edx, 0xffffffdf
0x1210d:	cmp	dl, 0x55
0x12110:	jne	0x12160


0x12112:	movzx	edx, byte ptr [rax + 1]
0x12116:	and	edx, 0xffffffdf
0x12119:	cmp	dl, 0x54
0x1211c:	jne	0x12160


0x12160:	movzx	eax, byte ptr [rbx + 0xb0]
0x12167:	mov	edx, eax
0x12169:	and	edx, 0xfffffff7
0x1216c:	cmp	dword ptr [rbx + 0xb4], 1
0x12173:	mov	byte ptr [rbx + 0xb0], dl
0x12179:	jle	0x1218e


0x1211e:	movzx	edx, byte ptr [rax + 2]
0x12122:	and	edx, 0xffffffdf
0x12125:	cmp	dl, 0x46
0x12128:	jne	0x12160


0x1218e:	cmp	qword ptr [rbx], 0
0x12192:	je	0x126d6


0x1217b:	test	al, 4
0x1217d:	je	0x126e3


0x1212a:	xor	edx, edx
0x1212c:	cmp	byte ptr [rax + 3], 0x2d
0x12130:	lea	rdi, [rip + 0x2eaf]
0x12137:	mov	ecx, 2
0x1213c:	sete	dl
0x1213f:	lea	rsi, [rax + rdx + 3]
0x12144:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x12198:	cmp	qword ptr [rbx + 0x40], 0
0x1219d:	je	0x126d6


0x126e3:	mov	esi, 1
0x126e8:	mov	edi, 0x20
0x126ed:	call	0x1a70


0x12183:	lea	rax, [rip + 0x33b6]
0x1218a:	mov	qword ptr [rbx + 0x78], rax
0x1218e:	cmp	qword ptr [rbx], 0
0x12192:	je	0x126d6


0x12144:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x12146:	seta	al
0x12149:	sbb	al, 0
0x1214b:	test	al, al
0x1214d:	jne	0x12160


0x121a3:	mov	rax, qword ptr [rsp + 0x18]
0x121a8:	lea	rbp, [rsp + 0x80]
0x121b0:	mov	ecx, 0x12
0x121b5:	mov	dword ptr [rsp + 0x4c], 0
0x121bd:	lea	r8, [rbp + 8]
0x121c1:	and	eax, 0x400000
0x121c6:	mov	qword ptr [rsp + 0x20], rax
0x121cb:	mov	rax, qword ptr [rsp + 8]
0x121d0:	setne	dl
0x121d3:	mov	rdi, r8
0x121d6:	mov	rsi, qword ptr [rax + 0x28]
0x121da:	xor	eax, eax
0x121dc:	rep stosq	qword ptr [rdi], rax


0x1214f:	or	byte ptr [rbx + 0xb0], 4
0x12156:	nop	word ptr cs:[rax + rax]
0x12160:	movzx	eax, byte ptr [rbx + 0xb0]
0x12167:	mov	edx, eax
0x12169:	and	edx, 0xfffffff7
0x1216c:	cmp	dword ptr [rbx + 0xb4], 1
0x12173:	mov	byte ptr [rbx + 0xb0], dl
0x12179:	jle	0x1218e


0x121dc:	rep stosq	qword ptr [rdi], rax


0x121df:	mov	rax, qword ptr [rsp + 0x10]
0x121e4:	mov	rdi, qword ptr [rsp]
0x121e8:	test	rsi, rsi
0x121eb:	mov	byte ptr [rsp + 0x108], dl
0x121f2:	mov	ecx, dword ptr [rbx + 0xb4]
0x121f8:	setne	r12b
0x121fc:	mov	qword ptr [rsp + 0xf8], rsi
0x12204:	mov	qword ptr [rsp + 0x80], rax
0x1220c:	movzx	eax, byte ptr [rbx + 0xb0]
0x12213:	or	r12d, edx
0x12216:	mov	qword ptr [rsp + 0xd8], rdi
0x1221e:	mov	qword ptr [rsp + 0xd0], rdi
0x12226:	mov	esi, r12d
0x12229:	mov	byte ptr [rsp + 0x10b], r12b
0x12231:	mov	dword ptr [rsp + 0x110], ecx
0x12238:	mov	qword ptr [rsp + 0xe8], rdi
0x12240:	mov	qword ptr [rsp + 0xe0], rdi
0x12248:	mov	edx, eax
0x1224a:	shr	al, 3
0x1224d:	shr	dl, 2
0x12250:	and	eax, 1
0x12253:	and	edx, 1
0x12256:	test	rdi, rdi
0x12259:	mov	byte ptr [rsp + 0x10a], al
0x12260:	mov	byte ptr [rsp + 0x109], dl
0x12267:	jne	0x126a5


0x1226d:	test	sil, sil
0x12270:	je	0x1227f


0x126a5:	mov	rsi, qword ptr [rsp + 0x28]
0x126aa:	mov	rdi, rbp
0x126ad:	call	0x5dd0


0x1227f:	cmp	qword ptr [rsp + 0x20], 0
0x12285:	mov	rax, qword ptr [rsp + 0x10]
0x1228a:	mov	qword ptr [rsp + 0x88], rax
0x12292:	je	0x12395


0x12272:	mov	rax, qword ptr [rsp + 0x88]
0x1227a:	mov	qword ptr [rsp + 0x10], rax
0x1227f:	cmp	qword ptr [rsp + 0x20], 0
0x12285:	mov	rax, qword ptr [rsp + 0x10]
0x1228a:	mov	qword ptr [rsp + 0x88], rax
0x12292:	je	0x12395


0x12395:	cmp	ecx, 1
0x12398:	jg	0x12d4a


0x12298:	cmp	ecx, 1
0x1229b:	jle	0x12e8d


0x1239e:	test	r12b, r12b
0x123a1:	mov	rsi, qword ptr [rsp + 0xc0]
0x123a9:	je	0x129c4


0x12d4a:	mov	rdi, rbp
0x12d4d:	call	0x6170


0x12e8d:	mov	rdi, rbp
0x12e90:	call	0x6100


0x122a1:	mov	rdi, rbp
0x122a4:	call	0x6340


0x129c4:	mov	qword ptr [rsp + 0xb0], rsi
0x129cc:	mov	qword ptr [rsp + 0xb8], rsi
0x129d4:	mov	dword ptr [rsp + 0x4c], 0
0x129dc:	jmp	0x12428


0x123af:	cmp	qword ptr [rsp + 0xd8], rsi
0x123b7:	mov	rax, qword ptr [rsp + 0xb0]
0x123bf:	cmovle	rsi, qword ptr [rsp + 0xd8]
0x123c8:	cmp	rsi, rax
0x123cb:	jg	0x123dd


0x12428:	mov	r12, qword ptr [rsp + 8]
0x1242d:	mov	r14, qword ptr [rsp + 0x18]
0x12432:	lea	r13, [rsp + 0x50]
0x12437:	mov	rsi, rbp
0x1243a:	mov	rdi, r13
0x1243d:	mov	qword ptr [rsp + 0x28], r13
0x12442:	mov	r15, qword ptr [r12]
0x12446:	mov	rdx, r14
0x12449:	mov	qword ptr [r12 + 0x30], 0
0x12452:	or	rdx, 0x800000
0x12459:	mov	qword ptr [r15 + 0xd8], r14
0x12460:	call	0x10020


0x123cd:	jmp	0x12410


0x123dd:	mov	rdx, qword ptr [rsp + 0x80]
0x123e5:	mov	rcx, qword ptr [rsp + 0xf8]
0x123ed:	add	rdx, rax
0x123f0:	add	rdx, qword ptr [rsp + 0xa8]
0x123f8:	movzx	edx, byte ptr [rdx]
0x123fb:	movzx	edx, byte ptr [rcx + rdx]
0x123ff:	mov	rcx, qword ptr [rsp + 0x10]
0x12404:	mov	byte ptr [rcx + rax], dl
0x12407:	add	rax, 1
0x1240b:	cmp	rsi, rax
0x1240e:	jne	0x123d0


0x12410:	mov	qword ptr [rsp + 0xb0], rax
0x12418:	mov	qword ptr [rsp + 0xb8], rax
0x12420:	mov	dword ptr [rsp + 0x4c], 0
0x12428:	mov	r12, qword ptr [rsp + 8]
0x1242d:	mov	r14, qword ptr [rsp + 0x18]
0x12432:	lea	r13, [rsp + 0x50]
0x12437:	mov	rsi, rbp
0x1243a:	mov	rdi, r13
0x1243d:	mov	qword ptr [rsp + 0x28], r13
0x12442:	mov	r15, qword ptr [r12]
0x12446:	mov	rdx, r14
0x12449:	mov	qword ptr [r12 + 0x30], 0
0x12452:	or	rdx, 0x800000
0x12459:	mov	qword ptr [r15 + 0xd8], r14
0x12460:	call	0x10020


0x123d0:	mov	rdx, qword ptr [rsp + 0x88]
0x123d8:	mov	qword ptr [rsp + 0x10], rdx
0x123dd:	mov	rdx, qword ptr [rsp + 0x80]
0x123e5:	mov	rcx, qword ptr [rsp + 0xf8]
0x123ed:	add	rdx, rax
0x123f0:	add	rdx, qword ptr [rsp + 0xa8]
0x123f8:	movzx	edx, byte ptr [rdx]
0x123fb:	movzx	edx, byte ptr [rcx + rdx]
0x123ff:	mov	rcx, qword ptr [rsp + 0x10]
0x12404:	mov	byte ptr [rcx + rax], dl
0x12407:	add	rax, 1
0x1240b:	cmp	rsi, rax
0x1240e:	jne	0x123d0


0x12465:	lea	r9, [rsp + 0x4c]
0x1246a:	xor	r8d, r8d
0x1246d:	mov	rcx, r14
0x12470:	mov	rdx, r13
0x12473:	mov	rsi, r12
0x12476:	mov	rdi, rbp
0x12479:	cdqe	
0x1247b:	add	qword ptr [rsp + 0xc8], rax
0x12483:	call	0x11e50


0x12488:	mov	ecx, dword ptr [rsp + 0x4c]
0x1248c:	test	ecx, ecx
0x1248e:	jne	0x12eb7


0x12494:	lea	r13, [r15 + 0x70]
0x12498:	lea	r12, [rsp + 0x60]
0x1249d:	sub	r15, -0x80
0x124a1:	xor	edx, edx
0x124a3:	xor	ecx, ecx
0x124a5:	mov	rsi, r15
0x124a8:	mov	r8, r12
0x124ab:	mov	rdi, r13
0x124ae:	mov	qword ptr [rsp], rax
0x124b2:	mov	byte ptr [rsp + 0x68], 2
0x124b7:	call	0x80e0


0x12eb7:	test	rax, rax
0x12eba:	je	0x12feb


0x12feb:	mov	rax, qword ptr [rsp + 8]
0x12ff0:	mov	qword ptr [rbx + 0x68], 0
0x12ff8:	mov	r13, qword ptr [rax]
0x12ffb:	jmp	0x122fc


0x12ec0:	lea	r13, [r15 + 0x70]
0x12ec4:	lea	r12, [rsp + 0x60]
0x12ec9:	sub	r15, -0x80
0x12ecd:	xor	ecx, ecx
0x12ecf:	xor	edx, edx
0x12ed1:	mov	rsi, r15
0x12ed4:	mov	r8, r12
0x12ed7:	mov	rdi, r13
0x12eda:	mov	qword ptr [rsp], rax
0x12ede:	mov	byte ptr [rsp + 0x68], 2
0x12ee3:	call	0x80e0


0x122fc:	mov	rdi, qword ptr [r13 + 0x70]
0x12300:	test	rdi, rdi
0x12303:	je	0x12318


0x12318:	mov	rdi, qword ptr [r13 + 0x20]
0x1231c:	mov	qword ptr [r13 + 0x70], 0
0x12324:	mov	dword ptr [r13 + 0x80], 0xf
0x1232f:	mov	qword ptr [r13 + 0x68], 0
0x12337:	call	0x1880


0x12310:	test	r12, r12
0x12313:	mov	rdi, r12
0x12316:	jne	0x12308


0x12308:	mov	r12, qword ptr [rdi]
0x1230b:	call	0x1880


0x1233c:	mov	qword ptr [r13 + 0x20], 0
0x12344:	mov	rdi, rbp
0x12347:	call	0x7110


0x12ee8:	mov	r9, qword ptr [rsp]
0x12eec:	mov	r11, rax
0x12eef:	jmp	0x124cb


0x124cb:	mov	rcx, r11
0x124ce:	mov	rdx, r9
0x124d1:	mov	r8, r12
0x124d4:	mov	rsi, r15
0x124d7:	mov	rdi, r13
0x124da:	mov	qword ptr [rsp], r11
0x124de:	mov	byte ptr [rsp + 0x68], 0x10
0x124e3:	call	0x80e0


0x124e8:	mov	r11, qword ptr [rsp]
0x124ec:	mov	rdx, r11
0x124ef:	mov	r11, rax
0x124f2:	test	rdx, rdx
0x124f5:	mov	rcx, qword ptr [rsp + 8]
0x124fa:	sete	dl
0x124fd:	test	r11, r11
0x12500:	sete	al
0x12503:	or	dl, al
0x12505:	mov	r13, qword ptr [rcx]
0x12508:	jne	0x12ea2


0x1250e:	mov	r15, qword ptr [r13 + 8]
0x12512:	mov	qword ptr [rbx + 0x68], r11
0x12516:	lea	rcx, [r15*8]
0x1251e:	lea	r15, [r15 + r15*2]
0x12522:	mov	rdi, rcx
0x12525:	mov	qword ptr [rsp], rcx
0x12529:	shl	r15, 3
0x1252d:	call	0x1ac0


0x12ea2:	mov	dword ptr [rsp + 0x4c], 0xc
0x12eaa:	mov	qword ptr [rbx + 0x68], 0
0x12eb2:	jmp	0x122fc


0x12532:	mov	rcx, qword ptr [rsp]
0x12536:	mov	qword ptr [r13 + 0x18], rax
0x1253a:	mov	qword ptr [rsp + 0x18], rax
0x1253f:	mov	rdi, rcx
0x12542:	call	0x1ac0


0x12547:	mov	rdi, r15
0x1254a:	mov	qword ptr [r13 + 0x20], rax
0x1254e:	mov	qword ptr [rsp + 0x10], rax
0x12553:	call	0x1ac0


0x12558:	mov	rdi, r15
0x1255b:	mov	qword ptr [r13 + 0x28], rax
0x1255f:	mov	qword ptr [rsp], rax
0x12563:	call	0x1ac0


0x12568:	mov	rdx, qword ptr [rsp + 0x18]
0x1256d:	mov	qword ptr [r13 + 0x30], rax
0x12571:	mov	rsi, qword ptr [rsp]
0x12575:	mov	rcx, qword ptr [rsp + 0x10]
0x1257a:	test	rdx, rdx
0x1257d:	je	0x12d3d


0x12d3d:	mov	dword ptr [rsp + 0x4c], 0xc
0x12d45:	jmp	0x122fc


0x12583:	test	rcx, rcx
0x12586:	je	0x12d3d


0x1258c:	test	rsi, rsi
0x1258f:	je	0x12d3d


0x12595:	test	rax, rax
0x12598:	je	0x12d3d


0x1259e:	mov	rax, qword ptr [rsp + 8]
0x125a3:	mov	r15, qword ptr [rax + 0x30]
0x125a7:	lea	rdi, [r15*8]
0x125af:	call	0x1ac0


0x125b4:	test	rax, rax
0x125b7:	mov	qword ptr [r13 + 0xe0], rax
0x125be:	je	0x1262d


0x1262d:	mov	rdi, qword ptr [r13 + 0x68]
0x12631:	mov	rdx, qword ptr [rsp + 8]
0x12636:	lea	rsi, [rip - 0xa15d]
0x1263d:	call	0x5d00


0x125c0:	test	r15, r15
0x125c3:	je	0x125dd


0x125dd:	mov	rdi, qword ptr [r13 + 0x68]
0x125e1:	lea	rsi, [rip - 0xb008]
0x125e8:	mov	rdx, r13
0x125eb:	call	0x5d70


0x125c5:	xor	edx, edx
0x125c7:	nop	word ptr [rax + rax]
0x125d0:	mov	qword ptr [rax + rdx*8], rdx
0x125d4:	add	rdx, 1
0x125d8:	cmp	rdx, r15
0x125db:	jne	0x125d0


0x125d0:	mov	qword ptr [rax + rdx*8], rdx
0x125d4:	add	rdx, 1
0x125d8:	cmp	rdx, r15
0x125db:	jne	0x125d0


0x124bc:	mov	r9, qword ptr [rsp]
0x124c0:	mov	r11, rax
0x124c3:	mov	rdx, rax
0x124c6:	test	r9, r9
0x124c9:	je	0x124f2


0x124f2:	test	rdx, rdx
0x124f5:	mov	rcx, qword ptr [rsp + 8]
0x124fa:	sete	dl
0x124fd:	test	r11, r11
0x12500:	sete	al
0x12503:	or	dl, al
0x12505:	mov	r13, qword ptr [rcx]
0x12508:	jne	0x12ea2


0x122a9:	test	eax, eax
0x122ab:	jne	0x122f0


0x122ad:	mov	rax, qword ptr [rsp]
0x122b1:	cmp	rax, qword ptr [rsp + 0xb8]
0x122b9:	jle	0x12e70


0x122f0:	mov	dword ptr [rsp + 0x4c], eax
0x122f4:	mov	rax, qword ptr [rsp + 8]
0x122f9:	mov	r13, qword ptr [rax]
0x122fc:	mov	rdi, qword ptr [r13 + 0x70]
0x12300:	test	rdi, rdi
0x12303:	je	0x12318


0x12e70:	mov	dword ptr [rsp + 0x4c], 0
0x12e78:	jmp	0x12428


0x122bf:	movsxd	rax, dword ptr [rbx + 0xb4]
0x122c6:	mov	rsi, qword ptr [rsp + 0xc0]
0x122ce:	add	rax, qword ptr [rsp + 0xb0]
0x122d6:	cmp	rsi, rax
0x122d9:	jg	0x12e70


0x122df:	add	rsi, rsi
0x122e2:	mov	rdi, rbp
0x122e5:	call	0x5dd0


0x12e95:	mov	dword ptr [rsp + 0x4c], 0
0x12e9d:	jmp	0x12428


0x12d52:	mov	dword ptr [rsp + 0x4c], 0
0x12d5a:	jmp	0x12428


0x122ea:	test	eax, eax
0x122ec:	je	0x122a1


0x126b2:	test	eax, eax
0x126b4:	jne	0x122f0


0x126ba:	movzx	esi, byte ptr [rsp + 0x10b]
0x126c2:	mov	ecx, dword ptr [rbx + 0xb4]
0x126c8:	test	sil, sil
0x126cb:	je	0x1227f


0x126d1:	jmp	0x12272


0x126f2:	test	rax, rax
0x126f5:	mov	qword ptr [rbx + 0x78], rax
0x126f9:	je	0x126d6


0x126fb:	xor	r12d, r12d
0x126fe:	xor	ebp, ebp
0x12700:	mov	r13d, 1
0x12706:	xor	r15d, r15d
0x12709:	nop	dword ptr [rax]
0x12710:	lea	r14d, [rbp + r15]
0x12715:	mov	edi, r14d
0x12718:	call	0x1b70


0x1b70:	jmp	qword ptr [rip + 0x2173d2]




0x13d1e:	test	rax, rax
0x13d21:	je	0x13d40


0x13d40:	lea	rax, [rip + 0x1a51]
0x13d47:	add	rsp, 8
0x13d4b:	ret	


0x13d23:	cmp	byte ptr [rax], 0
0x13d26:	lea	rdx, [rip + 0x1a6b]
0x13d2d:	cmove	rax, rdx
0x13d31:	add	rsp, 8
0x13d35:	ret	


0x3210:	movzx	edx, byte ptr [rax]
0x3213:	and	edx, 0xffffffdf
0x3216:	cmp	dl, 0x55
0x3219:	je	0x3290


0x3290:	movzx	edx, byte ptr [rax + 1]
0x3294:	and	edx, 0xffffffdf
0x3297:	cmp	dl, 0x54
0x329a:	jne	0x3220


0x321b:	cmp	dl, 0x47
0x321e:	je	0x3240


0x329c:	movzx	edx, byte ptr [rax + 2]
0x32a0:	and	edx, 0xffffffdf
0x32a3:	cmp	dl, 0x46
0x32a6:	jne	0x3220


0x3220:	lea	rax, [rip + 0x114b4]
0x3227:	lea	rdx, [rip + 0x114af]
0x322e:	cmp	ebx, 9
0x3231:	cmovne	rax, rdx
0x3235:	add	rsp, 8
0x3239:	pop	rbx
0x323a:	pop	rbp
0x323b:	ret	


0x3240:	movzx	edx, byte ptr [rax + 1]
0x3244:	and	edx, 0xffffffdf
0x3247:	cmp	dl, 0x42
0x324a:	jne	0x3220


0x32ac:	cmp	byte ptr [rax + 3], 0x2d
0x32b0:	jne	0x3220


0x324c:	cmp	byte ptr [rax + 2], 0x31
0x3250:	jne	0x3220


0x32b6:	cmp	byte ptr [rax + 4], 0x38
0x32ba:	jne	0x3220


0x3252:	cmp	byte ptr [rax + 3], 0x38
0x3256:	jne	0x3220


0x32c0:	cmp	byte ptr [rax + 5], 0
0x32c4:	jne	0x3220


0x3258:	cmp	byte ptr [rax + 4], 0x30
0x325c:	jne	0x3220


0x32ca:	cmp	byte ptr [rbp], 0x60
0x32ce:	lea	rax, [rip + 0x113f7]
0x32d5:	lea	rdx, [rip + 0x113f4]
0x32dc:	cmovne	rax, rdx
0x32e0:	add	rsp, 8
0x32e4:	pop	rbx
0x32e5:	pop	rbp
0x32e6:	ret	


0x325e:	cmp	byte ptr [rax + 5], 0x33
0x3262:	jne	0x3220


0x3264:	cmp	byte ptr [rax + 6], 0x30
0x3268:	jne	0x3220


0x326a:	cmp	byte ptr [rax + 7], 0
0x326e:	jne	0x3220


0x3270:	cmp	byte ptr [rbp], 0x60
0x3274:	lea	rax, [rip + 0x11459]
0x327b:	lea	rdx, [rip + 0x11456]
0x3282:	cmovne	rax, rdx
0x3286:	add	rsp, 8
0x328a:	pop	rbx
0x328b:	pop	rbp
0x328c:	ret	


0x5853:	mov	edx, r12d
0x5856:	mov	rsi, rbp
0x5859:	mov	edi, eax
0x585b:	call	0x19f0


0x5860:	cmp	rax, -1
0x5864:	je	0x5872


0x5872:	pop	rbx
0x5873:	pop	rbp
0x5874:	pop	r12
0x5876:	ret	


0x5866:	and	dword ptr [rbx], 0xffffffef
0x5869:	mov	qword ptr [rbx + 0x90], rax
0x5870:	xor	eax, eax
0x5872:	pop	rbx
0x5873:	pop	rbp
0x5874:	pop	r12
0x5876:	ret	


0x14097:	mov	rdi, rbx
0x1409a:	pop	rbx
0x1409b:	jmp	0x1ae0


0x13d6c:	test	eax, eax
0x13d6e:	mov	rdi, rbx
0x13d71:	js	0x13dc7


0x13dc7:	pop	rbx
0x13dc8:	pop	rbp
0x13dc9:	pop	r12
0x13dcb:	jmp	0x1940


0x13d73:	call	0x1b10


0x1940:	jmp	qword ptr [rip + 0x2174ea]




0x13d78:	test	eax, eax
0x13d7a:	jne	0x13da8


0x13d7c:	mov	rdi, rbx
0x13d7f:	call	0x14060


0x13da8:	mov	rdi, rbx
0x13dab:	call	0x1aa0


0x13db0:	xor	esi, esi
0x13db2:	mov	edx, 1
0x13db7:	mov	edi, eax
0x13db9:	call	0x19f0


0x13dbe:	cmp	rax, -1
0x13dc2:	jne	0x13d7c


0x13dc4:	mov	rdi, rbx
0x13dc7:	pop	rbx
0x13dc8:	pop	rbp
0x13dc9:	pop	r12
0x13dcb:	jmp	0x1940


0x13d84:	test	eax, eax
0x13d86:	je	0x13dc4


0x13d88:	call	0x18a0


0x13d8d:	mov	r12d, dword ptr [rax]
0x13d90:	mov	rdi, rbx
0x13d93:	mov	rbp, rax
0x13d96:	call	0x1940


0x13d9b:	test	r12d, r12d
0x13d9e:	jne	0x13dd0


0x13da0:	pop	rbx
0x13da1:	pop	rbp
0x13da2:	pop	r12
0x13da4:	ret	


0x13dd0:	mov	dword ptr [rbp], r12d
0x13dd4:	mov	eax, 0xffffffff
0x13dd9:	jmp	0x13da0


0x1271d:	cmp	eax, -1
0x12720:	je	0x12735


0x12735:	test	r14d, 0xffffff80
0x1273c:	jne	0x1274a


0x12722:	mov	rsi, qword ptr [rbx + 0x78]
0x12726:	mov	rdi, r13
0x12729:	mov	ecx, r15d
0x1272c:	shl	rdi, cl
0x1272f:	add	rsi, r12
0x12732:	or	qword ptr [rsi], rdi
0x12735:	test	r14d, 0xffffff80
0x1273c:	jne	0x1274a


0x1273e:	cmp	eax, r14d
0x12741:	je	0x1274a


0x1274a:	add	r15, 1
0x1274e:	cmp	r15, 0x40
0x12752:	jne	0x12710


0x12743:	or	byte ptr [rbx + 0xb0], 8
0x1274a:	add	r15, 1
0x1274e:	cmp	r15, 0x40
0x12752:	jne	0x12710


0x12754:	add	ebp, 0x40
0x12757:	add	r12, 8
0x1275b:	cmp	ebp, 0x100
0x12761:	jne	0x12706


0x12710:	lea	r14d, [rbp + r15]
0x12715:	mov	edi, r14d
0x12718:	call	0x1b70


0x12763:	jmp	0x1218e


0x12706:	xor	r15d, r15d
0x12709:	nop	dword ptr [rax]
0x12710:	lea	r14d, [rbp + r15]
0x12715:	mov	edi, r14d
0x12718:	call	0x1b70


0x1cd6:	lea	rdi, [rip + 0x12515]
0x1cdd:	call	0x1920


0x1920:	jmp	qword ptr [rip + 0x2174fa]




0x3112:	movzx	ecx, byte ptr [rsp + 0xf]
0x3117:	mov	rdi, qword ptr [rsp]
0x311b:	add	rdi, rax
0x311e:	test	r15, r15
0x3121:	mov	byte ptr [rax], cl
0x3123:	je	0x3128


0x3128:	mov	rdx, r14
0x312b:	mov	rsi, rbp
0x312e:	call	0x1b80


0x3125:	mov	qword ptr [r15], rdi
0x3128:	mov	rdx, r14
0x312b:	mov	rsi, rbp
0x312e:	call	0x1b80


0x3133:	mov	byte ptr [rax], 0
0x3136:	add	rsp, 0x18
0x313a:	mov	rax, r13
0x313d:	pop	rbx
0x313e:	pop	rbp
0x313f:	pop	r12
0x3141:	pop	r13
0x3143:	pop	r14
0x3145:	pop	r15
0x3147:	ret	


0x13b3a:	and	ebx, 0x20
0x13b3d:	test	ebx, ebx
0x13b3f:	jne	0x13b58


0x13b41:	test	eax, eax
0x13b43:	je	0x13b4f


0x13b58:	test	eax, eax
0x13b5a:	jne	0x13b78


0x13b4f:	pop	rbx
0x13b50:	pop	rbp
0x13b51:	pop	r12
0x13b53:	ret	


0x13b45:	test	r12, r12
0x13b48:	mov	eax, 0xffffffff
0x13b4d:	je	0x13b88


0x13b5c:	call	0x18a0


0x13b78:	pop	rbx
0x13b79:	mov	eax, 0xffffffff
0x13b7e:	pop	rbp
0x13b7f:	pop	r12
0x13b81:	ret	


0x13b88:	call	0x18a0


0x13b8d:	cmp	dword ptr [rax], 9
0x13b90:	pop	rbx
0x13b91:	pop	rbp
0x13b92:	pop	r12
0x13b94:	setne	al
0x13b97:	movzx	eax, al
0x13b9a:	neg	eax
0x13b9c:	ret	


0x13b61:	mov	dword ptr [rax], 0
0x13b67:	mov	eax, 0xffffffff
0x13b6c:	pop	rbx
0x13b6d:	pop	rbp
0x13b6e:	pop	r12
0x13b70:	ret	


0xb686:	mov	rdi, qword ptr [rsp + 8]
0xb68b:	mov	eax, dword ptr [rsp]
0xb68e:	mov	dword ptr [rdi], eax
0xb690:	jmp	0xb5f2


0xb628:	jmp	0xb5f2


0x8c1c:	jmp	0x8c08


0x7251:	cmp	qword ptr [rbp], rbx
0x7255:	jg	0x7240


0x7240:	mov	rax, qword ptr [rbp + 0x10]
0x7244:	mov	rdi, qword ptr [rax + rbx*8]
0x7248:	add	rbx, 1
0x724c:	call	0x70b0


0xcd6a:	jmp	0xcd2c


0xcafc:	xor	eax, eax
0xcafe:	jmp	0xcca9


0xca94:	mov	eax, 0xc
0xca99:	jmp	0xcca9


0x65c5:	mov	edx, dword ptr [rsp + 0x18]
0x65c9:	mov	r12d, eax
0x65cc:	cmp	edx, eax
0x65ce:	je	0x6648


0x6648:	mov	rsi, qword ptr [r14 + 0x28]
0x664c:	mov	rdi, qword ptr [r14 + 8]
0x6650:	mov	rdx, rbp
0x6653:	add	rsi, r15
0x6656:	add	rsi, qword ptr [r14]
0x6659:	add	rdi, r15
0x665c:	call	0x1a90


0x65d0:	mov	rdx, qword ptr [rsp + 0x38]
0x65d5:	mov	rdi, qword ptr [rsp + 0x28]
0x65da:	mov	esi, eax
0x65dc:	call	0x1ad0


0x65e1:	cmp	rbp, rax
0x65e4:	jne	0x6758


0x65ea:	mov	rdi, qword ptr [r14 + 8]
0x65ee:	mov	rsi, qword ptr [rsp + 0x28]
0x65f3:	mov	rdx, rbp
0x65f6:	add	rdi, r15
0x65f9:	call	0x1a90


0x6758:	mov	r13, r15
0x675b:	jmp	0x63ee


0x63ee:	mov	rdx, qword ptr [r14 + 0x78]
0x63f2:	mov	rax, qword ptr [r14 + 0x20]
0x63f6:	test	rdx, rdx
0x63f9:	mov	qword ptr [rsp + 0x48], rax
0x63fe:	jne	0x6709


0x65fe:	add	r15, 1
0x6602:	mov	rdx, qword ptr [r14 + 0x10]
0x6606:	lea	rax, [r13*4]
0x660e:	lea	rcx, [r15 + rbp - 1]
0x6613:	cmp	r15, rcx
0x6616:	mov	dword ptr [rdx + r13*4], r12d
0x661a:	jge	0x663a


0x661c:	lea	rax, [rdx + rax + 4]
0x6621:	lea	rdx, [rdx + rcx*4]
0x6625:	nop	dword ptr [rax]
0x6628:	mov	dword ptr [rax], 0xffffffff
0x662e:	add	rax, 4
0x6632:	cmp	rdx, rax
0x6635:	jne	0x6628


0x6637:	mov	r15, rcx
0x663a:	cmp	rbx, r15
0x663d:	jg	0x6550


0x6628:	mov	dword ptr [rax], 0xffffffff
0x662e:	add	rax, 4
0x6632:	cmp	rdx, rax
0x6635:	jne	0x6628


0x6661:	jmp	0x65fe


0x6451:	mov	edx, dword ptr [rsp + 0x10]
0x6455:	mov	r12d, eax
0x6458:	mov	qword ptr [rsp + 8], r15
0x645d:	cmp	edx, eax
0x645f:	je	0x6760


0x6760:	mov	rdi, qword ptr [r14 + 8]
0x6764:	mov	rsi, qword ptr [rsp + 0x18]
0x6769:	mov	rdx, rbp
0x676c:	add	rdi, r15
0x676f:	call	0x1a90


0x6465:	lea	rcx, [rsp + 0x50]
0x646a:	lea	rdx, [rsp + 0x48]
0x646f:	mov	esi, eax
0x6471:	mov	rdi, rcx
0x6474:	mov	qword ptr [rsp + 0x10], rcx
0x6479:	call	0x1ad0


0x647e:	cmp	rbp, rax
0x6481:	mov	r11, rax
0x6484:	mov	rcx, qword ptr [rsp + 0x10]
0x6489:	jne	0x6816


0x648f:	mov	rdi, qword ptr [r14 + 8]
0x6493:	mov	rdx, rbp
0x6496:	mov	rsi, rcx
0x6499:	add	rdi, r15
0x649c:	call	0x1a90


0x6816:	cmp	rax, -1
0x681a:	je	0x6760


0x6820:	lea	rax, [rax + r15]
0x6824:	mov	rsi, rax
0x6827:	mov	qword ptr [rsp + 8], rax
0x682c:	mov	rax, qword ptr [r14 + 0x40]
0x6830:	cmp	rsi, rax
0x6833:	ja	0x6808


0x6835:	cmp	qword ptr [r14 + 0x18], 0
0x683a:	je	0x68f8


0x68f8:	lea	rdi, [rax*8]
0x6900:	mov	qword ptr [rsp + 0x18], rcx
0x6905:	mov	qword ptr [rsp + 0x10], r11
0x690a:	call	0x1ac0


0x6840:	cmp	byte ptr [r14 + 0x8c], 0
0x6848:	jne	0x686a


0x684a:	test	r15, r15
0x684d:	je	0x6862


0x686a:	mov	rdi, qword ptr [r14 + 8]
0x686e:	mov	rsi, rcx
0x6871:	mov	rdx, r11
0x6874:	mov	qword ptr [rsp + 0x10], r11
0x6879:	add	rdi, r15
0x687c:	call	0x1a90


0x6862:	mov	byte ptr [r14 + 0x8c], 1
0x686a:	mov	rdi, qword ptr [r14 + 8]
0x686e:	mov	rsi, rcx
0x6871:	mov	rdx, r11
0x6874:	mov	qword ptr [rsp + 0x10], r11
0x6879:	add	rdi, r15
0x687c:	call	0x1a90


0x684f:	mov	rdx, qword ptr [r14 + 0x18]
0x6853:	xor	eax, eax
0x6855:	mov	qword ptr [rdx + rax*8], rax
0x6859:	add	rax, 1
0x685d:	cmp	rax, r15
0x6860:	jne	0x6855


0x6855:	mov	qword ptr [rdx + rax*8], rax
0x6859:	add	rax, 1
0x685d:	cmp	rax, r15
0x6860:	jne	0x6855


0x690f:	test	rax, rax
0x6912:	mov	qword ptr [r14 + 0x18], rax
0x6916:	mov	r11, qword ptr [rsp + 0x10]
0x691b:	mov	rcx, qword ptr [rsp + 0x18]
0x6920:	jne	0x6840


0x6926:	mov	eax, 0xc
0x692b:	jmp	0x639f


0x6881:	mov	rax, qword ptr [r14 + 0x10]
0x6885:	mov	r11, qword ptr [rsp + 0x10]
0x688a:	lea	rcx, [rax + r15*4]
0x688e:	mov	rax, qword ptr [r14 + 0x18]
0x6892:	cmp	r11, 1
0x6896:	mov	dword ptr [rcx], r12d
0x6899:	lea	rsi, [rax + r15*8]
0x689d:	mov	qword ptr [rsi], r13
0x68a0:	jbe	0x68ca


0x68ca:	mov	rbx, qword ptr [r14 + 0x58]
0x68ce:	sub	r11, rbp
0x68d1:	add	rbx, r11
0x68d4:	cmp	r13, qword ptr [r14 + 0x60]
0x68d8:	mov	qword ptr [r14 + 0x58], rbx
0x68dc:	jge	0x68e2


0x68a2:	mov	eax, 1
0x68a7:	mov	rdx, qword ptr [rsp + 0x20]
0x68ac:	cmp	rax, rbp
0x68af:	cmovb	rdx, rax
0x68b3:	add	rdx, r13
0x68b6:	mov	qword ptr [rsi + rax*8], rdx
0x68ba:	mov	dword ptr [rcx + rax*4], 0xffffffff
0x68c1:	add	rax, 1
0x68c5:	cmp	rax, r11
0x68c8:	jne	0x68a7


0x68de:	add	qword ptr [r14 + 0x68], r11
0x68e2:	cmp	qword ptr [r14 + 0x40], rbx
0x68e6:	mov	r15, qword ptr [rsp + 8]
0x68eb:	cmovle	rbx, qword ptr [r14 + 0x40]
0x68f0:	add	r13, rbp
0x68f3:	jmp	0x6390


0x68e2:	cmp	qword ptr [r14 + 0x40], rbx
0x68e6:	mov	r15, qword ptr [rsp + 8]
0x68eb:	cmovle	rbx, qword ptr [r14 + 0x40]
0x68f0:	add	r13, rbp
0x68f3:	jmp	0x6390


0x68a7:	mov	rdx, qword ptr [rsp + 0x20]
0x68ac:	cmp	rax, rbp
0x68af:	cmovb	rdx, rax
0x68b3:	add	rdx, r13
0x68b6:	mov	qword ptr [rsi + rax*8], rdx
0x68ba:	mov	dword ptr [rcx + rax*4], 0xffffffff
0x68c1:	add	rax, 1
0x68c5:	cmp	rax, r11
0x68c8:	jne	0x68a7


0x64a1:	cmp	byte ptr [r14 + 0x8c], 0
0x64a9:	lea	rax, [rbp + r13]
0x64ae:	jne	0x67e5


0x64b4:	add	r15, 1
0x64b8:	mov	rsi, qword ptr [rsp + 8]
0x64bd:	mov	rdx, qword ptr [r14 + 0x10]
0x64c1:	lea	rcx, [r15 + rbp - 1]
0x64c6:	mov	r13, rax
0x64c9:	cmp	r15, rcx
0x64cc:	lea	rax, [rsi*4]
0x64d4:	mov	dword ptr [rdx + rsi*4], r12d
0x64d8:	jge	0x6390


0x67e5:	mov	rdx, qword ptr [r14 + 0x18]
0x67e9:	mov	rcx, r15
0x67ec:	mov	r10, r13
0x67ef:	sub	rcx, r13
0x67f2:	lea	rdx, [rdx + rcx*8]
0x67f6:	mov	qword ptr [rdx + r10*8], r10
0x67fa:	add	r10, 1
0x67fe:	cmp	rax, r10
0x6801:	jne	0x67f6


0x64de:	lea	rax, [rdx + rax + 4]
0x64e3:	lea	rdx, [rdx + rcx*4]
0x64e7:	nop	word ptr [rax + rax]
0x64f0:	mov	dword ptr [rax], 0xffffffff
0x64f6:	add	rax, 4
0x64fa:	cmp	rdx, rax
0x64fd:	jne	0x64f0


0x6803:	jmp	0x64b4


0x67f6:	mov	qword ptr [rdx + r10*8], r10
0x67fa:	add	r10, 1
0x67fe:	cmp	rax, r10
0x6801:	jne	0x67f6


0x64ff:	mov	r15, rcx
0x6502:	jmp	0x6390


0x64f0:	mov	dword ptr [rax], 0xffffffff
0x64f6:	add	rax, 4
0x64fa:	cmp	rdx, rax
0x64fd:	jne	0x64f0


0x6774:	jmp	0x64a1


0x553a:	lea	rsi, [rip + 0xf6ec]
0x5541:	mov	edx, 5
0x5546:	xor	edi, edi
0x5548:	call	0x1960


0x554d:	lea	rcx, [rip + 0xf034]
0x5554:	lea	rdx, [rip + 0xec93]
0x555b:	mov	rsi, rax
0x555e:	mov	edi, 1
0x5563:	xor	eax, eax
0x5565:	call	0x1b60


0x556a:	mov	rbx, qword ptr [rip + 0x213b17]
0x5571:	lea	rsi, [rip + 0xf8e8]
0x5578:	xor	edi, edi
0x557a:	mov	edx, 5
0x557f:	call	0x1960


0x5584:	mov	rsi, rbx
0x5587:	mov	rdi, rax
0x558a:	pop	rbx
0x558b:	jmp	0x1a60


0x2c4d:	mov	rbx, qword ptr [rip + 0x216434]
0x2c54:	lea	rsi, [rip + 0x11725]
0x2c5b:	mov	edx, 5
0x2c60:	xor	edi, edi
0x2c62:	call	0x1960


0x2c67:	mov	rsi, rbx
0x2c6a:	mov	rdi, rax
0x2c6d:	call	0x1a60


0x2c72:	mov	rbx, qword ptr [rip + 0x21640f]
0x2c79:	lea	rsi, [rip + 0x11738]
0x2c80:	mov	edx, 5
0x2c85:	xor	edi, edi
0x2c87:	call	0x1960


0x2c8c:	mov	rsi, rbx
0x2c8f:	mov	rdi, rax
0x2c92:	call	0x1a60


0x2c97:	mov	rbx, qword ptr [rip + 0x2163ea]
0x2c9e:	lea	rsi, [rip + 0x1174b]
0x2ca5:	mov	edx, 5
0x2caa:	xor	edi, edi
0x2cac:	call	0x1960


0x2cb1:	mov	rsi, rbx
0x2cb4:	mov	rdi, rax
0x2cb7:	call	0x1a60


0x2cbc:	mov	rbx, qword ptr [rip + 0x2163c5]
0x2cc3:	lea	rsi, [rip + 0x11776]
0x2cca:	mov	edx, 5
0x2ccf:	xor	edi, edi
0x2cd1:	call	0x1960


0x2cd6:	mov	rsi, rbx
0x2cd9:	mov	rdi, rax
0x2cdc:	call	0x1a60


0x2ce1:	mov	rbx, qword ptr [rip + 0x2163a0]
0x2ce8:	lea	rsi, [rip + 0x11831]
0x2cef:	mov	edx, 5
0x2cf4:	xor	edi, edi
0x2cf6:	call	0x1960


0x2cfb:	mov	rsi, rbx
0x2cfe:	mov	rdi, rax
0x2d01:	call	0x1a60


0x2d06:	mov	rbx, qword ptr [rip + 0x21637b]
0x2d0d:	lea	rsi, [rip + 0x1183c]
0x2d14:	mov	edx, 5
0x2d19:	xor	edi, edi
0x2d1b:	call	0x1960


0x2d20:	mov	rsi, rbx
0x2d23:	mov	rdi, rax
0x2d26:	lea	rbx, [rip + 0x11447]
0x2d2d:	call	0x1a60


0x2d32:	lea	rax, [rip + 0x1143f]
0x2d39:	lea	rcx, [rip + 0x11479]
0x2d40:	mov	qword ptr [rsp + 0x60], 0
0x2d49:	mov	qword ptr [rsp + 0x68], 0
0x2d52:	mov	rdx, rsp
0x2d55:	mov	qword ptr [rsp], rax
0x2d59:	lea	rax, [rip + 0x1141a]
0x2d60:	mov	qword ptr [rsp + 0x30], rcx
0x2d65:	lea	rcx, [rip + 0x11457]
0x2d6c:	mov	qword ptr [rsp + 8], rax
0x2d71:	lea	rax, [rip + 0x1147a]
0x2d78:	mov	qword ptr [rsp + 0x40], rcx
0x2d7d:	lea	rcx, [rip + 0x11449]
0x2d84:	mov	qword ptr [rsp + 0x10], rax
0x2d89:	lea	rax, [rip + 0x113fa]
0x2d90:	mov	qword ptr [rsp + 0x50], rcx
0x2d95:	mov	qword ptr [rsp + 0x18], rax
0x2d9a:	lea	rax, [rip + 0x113ff]
0x2da1:	mov	qword ptr [rsp + 0x20], rax
0x2da6:	lea	rax, [rip + 0x113fd]
0x2dad:	mov	qword ptr [rsp + 0x28], rax
0x2db2:	mov	qword ptr [rsp + 0x38], rax
0x2db7:	mov	qword ptr [rsp + 0x48], rax
0x2dbc:	mov	qword ptr [rsp + 0x58], rax
0x2dc1:	nop	dword ptr [rax]
0x2dc8:	add	rdx, 0x10
0x2dcc:	mov	rdi, qword ptr [rdx]
0x2dcf:	test	rdi, rdi
0x2dd2:	je	0x2de7


0x2de7:	mov	r12, qword ptr [rdx + 8]
0x2deb:	xor	edi, edi
0x2ded:	mov	edx, 5
0x2df2:	lea	rsi, [rip + 0x113de]
0x2df9:	test	r12, r12
0x2dfc:	je	0x2ec3


0x2dd4:	mov	ecx, 4
0x2dd9:	mov	rsi, rbx
0x2ddc:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2ec3:	call	0x1960


0x2e02:	call	0x1960


0x2ddc:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2dde:	seta	al
0x2de1:	sbb	al, 0
0x2de3:	test	al, al
0x2de5:	jne	0x2dc8


0x2dc8:	add	rdx, 0x10
0x2dcc:	mov	rdi, qword ptr [rdx]
0x2dcf:	test	rdi, rdi
0x2dd2:	je	0x2de7


0x2e07:	lea	rcx, [rip + 0x1177a]
0x2e0e:	lea	rdx, [rip + 0x113d9]
0x2e15:	mov	rsi, rax
0x2e18:	mov	edi, 1
0x2e1d:	xor	eax, eax
0x2e1f:	call	0x1b60


0x2e24:	xor	esi, esi
0x2e26:	mov	edi, 5
0x2e2b:	call	0x1b50


0x2e30:	test	rax, rax
0x2e33:	je	0x2e51


0x2e51:	lea	rsi, [rip + 0x113a8]
0x2e58:	xor	edi, edi
0x2e5a:	mov	edx, 5
0x2e5f:	call	0x1960


0x2e35:	lea	rsi, [rip + 0x113c0]
0x2e3c:	mov	edx, 3
0x2e41:	mov	rdi, rax
0x2e44:	call	0x18c0


0x2e64:	lea	rcx, [rip + 0x11309]
0x2e6b:	lea	rdx, [rip + 0x11716]
0x2e72:	mov	rsi, rax
0x2e75:	mov	edi, 1
0x2e7a:	xor	eax, eax
0x2e7c:	call	0x1b60


0x2e81:	cmp	r12, rbx
0x2e84:	lea	rcx, [rip + 0x11309]
0x2e8b:	lea	rbx, [rip + 0x11d6f]
0x2e92:	cmove	rbx, rcx
0x2e96:	lea	rsi, [rip + 0x1175b]
0x2e9d:	xor	edi, edi
0x2e9f:	mov	edx, 5
0x2ea4:	call	0x1960


0x2ea9:	mov	rcx, rbx
0x2eac:	mov	rsi, rax
0x2eaf:	mov	rdx, r12
0x2eb2:	mov	edi, 1
0x2eb7:	xor	eax, eax
0x2eb9:	call	0x1b60


0x2ebe:	jmp	0x2c26


0x2ec8:	lea	rcx, [rip + 0x116b9]
0x2ecf:	lea	rdx, [rip + 0x11318]
0x2ed6:	mov	rsi, rax
0x2ed9:	mov	edi, 1
0x2ede:	xor	eax, eax
0x2ee0:	call	0x1b60


0x2ee5:	xor	esi, esi
0x2ee7:	mov	edi, 5
0x2eec:	call	0x1b50


0x2ef1:	test	rax, rax
0x2ef4:	je	0x2f0e


0x2f0e:	lea	rsi, [rip + 0x112eb]
0x2f15:	mov	edx, 5
0x2f1a:	xor	edi, edi
0x2f1c:	lea	r12, [rip + 0x11251]
0x2f23:	lea	rbx, [rip + 0x1126a]
0x2f2a:	call	0x1960


0x2ef6:	lea	rsi, [rip + 0x112ff]
0x2efd:	mov	edx, 3
0x2f02:	mov	rdi, rax
0x2f05:	call	0x18c0


0x2f2f:	lea	rcx, [rip + 0x1123e]
0x2f36:	lea	rdx, [rip + 0x1164b]
0x2f3d:	mov	rsi, rax
0x2f40:	mov	edi, 1
0x2f45:	xor	eax, eax
0x2f47:	call	0x1b60


0x2f4c:	jmp	0x2e96


0x2e96:	lea	rsi, [rip + 0x1175b]
0x2e9d:	xor	edi, edi
0x2e9f:	mov	edx, 5
0x2ea4:	call	0x1960


0x4ffc:	cmp	r12, 9
0x5000:	ja	0x5340


0x5006:	lea	rdx, [rip + 0xfe97]
0x500d:	movsxd	rax, dword ptr [rdx + r12*4]
0x5011:	add	rax, rdx
0x5014:	jmp	rax


0x5340:	mov	r10, qword ptr [rbx + 0x40]
0x5344:	mov	r9, qword ptr [rbx + 0x38]
0x5348:	mov	edx, 5
0x534d:	mov	rax, qword ptr [rbx + 0x10]
0x5351:	mov	r8, qword ptr [rbx + 8]
0x5355:	lea	rsi, [rip + 0xfac4]
0x535c:	mov	r13, qword ptr [rbx + 0x30]
0x5360:	mov	r12, qword ptr [rbx + 0x28]
0x5364:	mov	r15, qword ptr [rbx + 0x20]
0x5368:	mov	r14, qword ptr [rbx + 0x18]
0x536c:	mov	qword ptr [rsp + 0x18], r10
0x5371:	mov	qword ptr [rsp + 0x10], r9
0x5376:	mov	qword ptr [rsp], rax
0x537a:	mov	qword ptr [rsp + 8], r8
0x537f:	mov	rbx, qword ptr [rbx]
0x5382:	jmp	0x5112


0x5112:	xor	edi, edi
0x5114:	call	0x1960


0x5119:	mov	r10, qword ptr [rsp + 0x18]
0x511e:	push	r10
0x5120:	jmp	0x5064


0x5064:	mov	r9, qword ptr [rsp + 0x18]
0x5069:	mov	rdx, rax
0x506c:	mov	rcx, rbx
0x506f:	mov	esi, 1
0x5074:	mov	rdi, rbp
0x5077:	xor	eax, eax
0x5079:	push	r9
0x507b:	push	r13
0x507d:	push	r12
0x507f:	push	r15
0x5081:	push	r14
0x5083:	mov	r9, qword ptr [rsp + 0x30]
0x5088:	mov	r8, qword ptr [rsp + 0x38]
0x508d:	call	0x1c20


0x5092:	add	rsp, 0x30
0x5096:	add	rsp, 0x28
0x509a:	pop	rbx
0x509b:	pop	rbp
0x509c:	pop	r12
0x509e:	pop	r13
0x50a0:	pop	r14
0x50a2:	pop	r15
0x50a4:	ret	


0x5810:	call	0x1890


0x2f0a:	test	eax, eax
0x2f0c:	jne	0x2f51


0x2f51:	lea	r12, [rip + 0x1121c]
0x2f58:	mov	r13, qword ptr [rip + 0x216129]
0x2f5f:	lea	rsi, [rip + 0x1164a]
0x2f66:	xor	edi, edi
0x2f68:	mov	edx, 5
0x2f6d:	call	0x1960


0x2f72:	mov	rsi, r13
0x2f75:	mov	rdi, rax
0x2f78:	call	0x1a60


0x2f7d:	jmp	0x2e51


0x2e49:	test	eax, eax
0x2e4b:	jne	0x2f58


0x2f58:	mov	r13, qword ptr [rip + 0x216129]
0x2f5f:	lea	rsi, [rip + 0x1164a]
0x2f66:	xor	edi, edi
0x2f68:	mov	edx, 5
0x2f6d:	call	0x1960


0x2966:	test	eax, eax
0x2968:	jne	0x2940


0x296a:	cmp	rbx, r12
0x296d:	jb	0x2828


0x470d:	mov	dword ptr [rbp], r12d
0x4711:	pop	rbx
0x4712:	pop	rbp
0x4713:	pop	r12
0x4715:	ret	


0x13fe3:	mov	ebx, 0xffffffff
0x13fe8:	mov	dword ptr [rbp], r12d
0x13fec:	jmp	0x13ec0


0xb1ed:	test	eax, eax
0xb1ef:	jne	0xb26a


0xb1f1:	call	0x1c70


0xb26a:	lea	rsi, [rip + 0x9d56]
0xb271:	mov	rdi, r12
0xb274:	call	0x1a80


0xb279:	test	eax, eax
0xb27b:	jne	0xb2f4


0xb27d:	call	0x1c70


0xb2f4:	lea	rsi, [rip + 0x9cd2]
0xb2fb:	mov	rdi, r12
0xb2fe:	call	0x1a80


0xb303:	test	eax, eax
0xb305:	jne	0xb380


0xb307:	call	0x1c70


0xb380:	mov	eax, 4
0xb385:	jmp	0xad06


0xb30c:	xor	ecx, ecx
0xb30e:	test	rbp, rbp
0xb311:	mov	rsi, qword ptr [rax]
0xb314:	mov	edx, 1
0xb319:	jne	0xb345


0xb31b:	test	byte ptr [rsi + rcx*2 + 1], 0x10
0xb320:	je	0xb333


0xb345:	xor	eax, eax
0xb347:	mov	edi, 1
0xb34c:	test	byte ptr [rsi + rax*2 + 1], 0x10
0xb351:	je	0xb36f


0xb333:	add	rcx, 1
0xb337:	cmp	rcx, 0x100
0xb33e:	jne	0xb31b


0xb322:	mov	rax, rcx
0xb325:	mov	rdi, rdx
0xb328:	sar	rax, 6
0xb32c:	shl	rdi, cl
0xb32f:	or	qword ptr [rbx + rax*8], rdi
0xb333:	add	rcx, 1
0xb337:	cmp	rcx, 0x100
0xb33e:	jne	0xb31b


0xb36f:	add	rax, 1
0xb373:	cmp	rax, 0x100
0xb379:	jne	0xb34c


0xb353:	movzx	ecx, byte ptr [rbp + rax]
0xb358:	mov	r9, rdi
0xb35b:	mov	rdx, rcx
0xb35e:	and	ecx, 0x3f
0xb361:	shr	rdx, 3
0xb365:	shl	r9, cl
0xb368:	and	edx, 0x18
0xb36b:	or	qword ptr [rbx + rdx], r9
0xb36f:	add	rax, 1
0xb373:	cmp	rax, 0x100
0xb379:	jne	0xb34c


0xb340:	jmp	0xad04


0xb37b:	jmp	0xad04


0xb34c:	test	byte ptr [rsi + rax*2 + 1], 0x10
0xb351:	je	0xb36f


0xb282:	xor	ecx, ecx
0xb284:	test	rbp, rbp
0xb287:	mov	rsi, qword ptr [rax]
0xb28a:	mov	edx, 1
0xb28f:	jne	0xb2ba


0xb291:	test	byte ptr [rsi + rcx*2], 4
0xb295:	je	0xb2a8


0xb2ba:	xor	eax, eax
0xb2bc:	mov	edi, 1
0xb2c1:	test	byte ptr [rsi + rax*2], 4
0xb2c5:	je	0xb2e3


0xb2a8:	add	rcx, 1
0xb2ac:	cmp	rcx, 0x100
0xb2b3:	jne	0xb291


0xb297:	mov	rax, rcx
0xb29a:	mov	rdi, rdx
0xb29d:	sar	rax, 6
0xb2a1:	shl	rdi, cl
0xb2a4:	or	qword ptr [rbx + rax*8], rdi
0xb2a8:	add	rcx, 1
0xb2ac:	cmp	rcx, 0x100
0xb2b3:	jne	0xb291


0xb2e3:	add	rax, 1
0xb2e7:	cmp	rax, 0x100
0xb2ed:	jne	0xb2c1


0xb2c7:	movzx	ecx, byte ptr [rbp + rax]
0xb2cc:	mov	r14, rdi
0xb2cf:	mov	rdx, rcx
0xb2d2:	and	ecx, 0x3f
0xb2d5:	shr	rdx, 3
0xb2d9:	shl	r14, cl
0xb2dc:	and	edx, 0x18
0xb2df:	or	qword ptr [rbx + rdx], r14
0xb2e3:	add	rax, 1
0xb2e7:	cmp	rax, 0x100
0xb2ed:	jne	0xb2c1


0xb2b5:	jmp	0xad04


0xb2ef:	jmp	0xad04


0xb2c1:	test	byte ptr [rsi + rax*2], 4
0xb2c5:	je	0xb2e3


0xb1f6:	xor	ecx, ecx
0xb1f8:	test	rbp, rbp
0xb1fb:	mov	rsi, qword ptr [rax]
0xb1fe:	mov	edx, 1
0xb203:	jne	0xb22f


0xb205:	cmp	word ptr [rsi + rcx*2], 0
0xb20a:	jns	0xb21d


0xb22f:	xor	eax, eax
0xb231:	mov	edi, 1
0xb236:	cmp	word ptr [rsi + rax*2], 0
0xb23b:	jns	0xb259


0xb20c:	mov	rax, rcx
0xb20f:	mov	rdi, rdx
0xb212:	sar	rax, 6
0xb216:	shl	rdi, cl
0xb219:	or	qword ptr [rbx + rax*8], rdi
0xb21d:	add	rcx, 1
0xb221:	cmp	rcx, 0x100
0xb228:	jne	0xb205


0xb21d:	add	rcx, 1
0xb221:	cmp	rcx, 0x100
0xb228:	jne	0xb205


0xb23d:	movzx	ecx, byte ptr [rbp + rax]
0xb242:	mov	r9, rdi
0xb245:	mov	rdx, rcx
0xb248:	and	ecx, 0x3f
0xb24b:	shr	rdx, 3
0xb24f:	shl	r9, cl
0xb252:	and	edx, 0x18
0xb255:	or	qword ptr [rbx + rdx], r9
0xb259:	add	rax, 1
0xb25d:	cmp	rax, 0x100
0xb263:	jne	0xb236


0xb259:	add	rax, 1
0xb25d:	cmp	rax, 0x100
0xb263:	jne	0xb236


0xb22a:	jmp	0xad04


0xb265:	jmp	0xad04


0xb236:	cmp	word ptr [rsi + rax*2], 0
0xb23b:	jns	0xb259


0xb8aa:	mov	rdx, qword ptr [rsp + 0x40]
0xb8af:	mov	rdi, qword ptr [rsp + 0x38]
0xb8b4:	mov	esi, eax
0xb8b6:	call	0x1ad0


0xb8bb:	cmp	rax, -1
0xb8bf:	je	0xb767


0xb8c5:	movzx	eax, byte ptr [rsp + 0x60]
0xb8ca:	mov	byte ptr [rbp + rax], 1
0xb8cf:	jmp	0xb767


0xb9b3:	mov	rdi, qword ptr [rsp + 0x38]
0xb9b8:	mov	rdx, r14
0xb9bb:	mov	esi, eax
0xb9bd:	call	0x1ad0


0xb9c2:	cmp	rax, -1
0xb9c6:	je	0xb92f


0xb9cc:	movzx	eax, byte ptr [rsp + 0x60]
0xb9d1:	add	rbp, 1
0xb9d5:	mov	byte ptr [r12 + rax], 1
0xb9da:	cmp	rbp, qword ptr [r15 + 0x28]
0xb9de:	jl	0xb93d


0x54d6:	mov	rax, qword ptr [rsp + 0x78]
0x54db:	xor	rax, qword ptr fs:[0x28]
0x54e4:	jne	0x54f0


0x54e6:	add	rsp, 0xb8
0x54ed:	pop	rbx
0x54ee:	pop	rbp
0x54ef:	ret	


0x54f0:	call	0x1990


0x5400:	mov	rax, qword ptr [rsp + 0x58]
0x5405:	xor	rax, qword ptr fs:[0x28]
0x540e:	jne	0x5415


0x5410:	add	rsp, 0x68
0x5414:	ret	


0x5415:	call	0x1990


0x2fc2:	test	eax, eax
0x2fc4:	je	0x2fdc


0x2fdc:	mov	rdi, qword ptr [rip + 0x2160dd]
0x2fe3:	call	0x13b20


0x2fc6:	call	0x18a0


0x2fcb:	cmp	byte ptr [rip + 0x2182c6], 0
0x2fd2:	mov	rbx, rax
0x2fd5:	je	0x2ff3


0x2ff3:	lea	rsi, [rip + 0x112d2]
0x2ffa:	xor	edi, edi
0x2ffc:	mov	edx, 5
0x3001:	call	0x1960


0x2fd7:	cmp	dword ptr [rax], 0x20
0x2fda:	jne	0x2ff3


0x3006:	mov	rdi, qword ptr [rip + 0x218293]
0x300d:	mov	rbp, rax
0x3010:	test	rdi, rdi
0x3013:	je	0x303d


0x303d:	mov	esi, dword ptr [rbx]
0x303f:	lea	rdx, [rip + 0x1163a]
0x3046:	mov	rcx, rax
0x3049:	xor	edi, edi
0x304b:	xor	eax, eax
0x304d:	call	0x1ba0


0x3015:	call	0x4c70


0x3052:	jmp	0x3032


0x3032:	mov	edi, dword ptr [rip + 0x215fe0]
0x3038:	call	0x18d0


0x18d0:	jmp	qword ptr [rip + 0x217522]




0x2fe8:	test	eax, eax
0x2fea:	jne	0x3032


0x2fec:	add	rsp, 8
0x2ff0:	pop	rbx
0x2ff1:	pop	rbp
0x2ff2:	ret	


0x1ce2:	lea	rdi, [rip + 0x12c7]
0x1ce9:	call	0x14120


0x1cee:	lea	rax, [rip + 0x12f0b]
0x1cf5:	mov	qword ptr [rip + 0x219580], 1
0x1d00:	mov	byte ptr [rip + 0x219581], 1
0x1d07:	mov	qword ptr [rip + 0x219582], rax
0x1d0e:	lea	rdx, [rip + 0x1253f]
0x1d15:	xor	r8d, r8d
0x1d18:	mov	rcx, r12
0x1d1b:	mov	rsi, rbx
0x1d1e:	mov	edi, ebp
0x1d20:	call	0x19a0


0x19a0:	jmp	qword ptr [rip + 0x2174ba]




0x12354:	mov	rax, qword ptr [rsp + 8]
0x12359:	mov	qword ptr [rax], 0
0x12360:	mov	qword ptr [rax + 8], 0
0x12368:	mov	eax, dword ptr [rsp + 0x4c]
0x1236c:	mov	rbx, qword ptr [rsp + 0x118]
0x12374:	xor	rbx, qword ptr fs:[0x28]
0x1237d:	jne	0x130c0


0x1d25:	cmp	eax, -1
0x1d28:	je	0x1dc8


0x1dc8:	cmp	qword ptr [rip + 0x2194b0], 0
0x1dd0:	mov	r8, qword ptr [rip + 0x2194b9]
0x1dd7:	movzx	edx, byte ptr [r8]
0x1ddb:	jne	0x1f05


0x1d2e:	cmp	eax, 0x62
0x1d31:	je	0x1da8


0x1de1:	test	dl, dl
0x1de3:	je	0x23d5


0x1f05:	test	dl, dl
0x1f07:	mov	eax, 1
0x1f0c:	je	0x1f23


0x1da8:	mov	byte ptr [rip + 0x2194d9], 0
0x1daf:	jmp	0x1d0e


0x1d33:	jle	0x1d58


0x23d5:	lea	rsi, [rip + 0x11e7d]
0x23dc:	mov	edx, 5
0x23e1:	xor	edi, edi
0x23e3:	call	0x1960


0x1de9:	lea	rax, [rip + 0x219330]
0x1df0:	mov	rdi, r8
0x1df3:	mov	qword ptr [rip + 0x219422], 0
0x1dfe:	mov	qword ptr [rip + 0x21941f], 0
0x1e09:	mov	qword ptr [rip + 0x219434], 0
0x1e14:	or	rcx, 0xffffffffffffffff
0x1e18:	mov	qword ptr [rip + 0x219421], rax
0x1e1f:	xor	eax, eax
0x1e21:	lea	rdx, [rip + 0x2193f8]
0x1e28:	repne scasb	al, byte ptr [rdi]


0x1f23:	mov	qword ptr [rip + 0x219356], rax
0x1f2a:	mov	qword ptr [rip + 0x219347], rax
0x1f31:	jmp	0x1e45


0x1f0e:	xor	eax, eax
0x1f10:	or	rcx, 0xffffffffffffffff
0x1f14:	mov	rdi, r8
0x1f17:	repne scasb	al, byte ptr [rdi]


0x1d0e:	lea	rdx, [rip + 0x1253f]
0x1d15:	xor	r8d, r8d
0x1d18:	mov	rcx, r12
0x1d1b:	mov	rsi, rbx
0x1d1e:	mov	edi, ebp
0x1d20:	call	0x19a0


0x1d58:	cmp	eax, 0xffffff7d
0x1d5d:	jne	0x23b1


0x1d35:	cmp	eax, 0x72
0x1d38:	je	0x1db8


0x1e28:	repne scasb	al, byte ptr [rdi]


0x1e2a:	mov	rdi, r8
0x1e2d:	mov	rax, rcx
0x1e30:	not	rax
0x1e33:	lea	rsi, [rax - 1]
0x1e37:	call	0x130d0


0x1e45:	mov	rsi, qword ptr [rip + 0x219434]
0x1e4c:	mov	qword ptr [rip + 0x219411], 0x2000
0x1e57:	mov	edx, 0x32
0x1e5c:	mov	eax, 0x2000
0x1e61:	cmp	rsi, 0xfff
0x1e68:	ja	0x1e79


0x1f17:	repne scasb	al, byte ptr [rdi]


0x1f19:	mov	rax, rcx
0x1f1c:	not	rax
0x1f1f:	sub	rax, 1
0x1f23:	mov	qword ptr [rip + 0x219356], rax
0x1f2a:	mov	qword ptr [rip + 0x219347], rax
0x1f31:	jmp	0x1e45


0x1d63:	sub	rsp, 8
0x1d67:	mov	rdi, qword ptr [rip + 0x21731a]
0x1d6e:	mov	rcx, qword ptr [rip + 0x21729b]
0x1d75:	push	0
0x1d77:	lea	r9, [rip + 0x124ba]
0x1d7e:	lea	r8, [rip + 0x124c3]
0x1d85:	lea	rdx, [rip + 0x12462]
0x1d8c:	lea	rsi, [rip + 0x123e1]
0x1d93:	xor	eax, eax
0x1d95:	call	0x5430


0x23b1:	cmp	eax, 0xffffff7e
0x23b6:	jne	0x23cb


0x1db8:	mov	qword ptr [rip + 0x2194bd], 0
0x1dc3:	jmp	0x1d0e


0x1d3a:	cmp	eax, 0x73
0x1d3d:	jne	0x23cb


0x1e6a:	jmp	0x1e8e


0x1e79:	add	rax, rax
0x1e7c:	mov	rcx, rax
0x1e7f:	shr	rcx, 1
0x1e82:	cmp	rcx, rsi
0x1e85:	jbe	0x1e70


0x23b8:	xor	edi, edi
0x23ba:	call	0x2bd0


0x23cb:	mov	edi, 1
0x23d0:	call	0x2bd0


0x1d43:	mov	rax, qword ptr [rip + 0x21734e]
0x1d4a:	mov	qword ptr [rip + 0x21953f], rax
0x1d51:	jmp	0x1d0e


0x1e8e:	lea	rdx, [rax + rsi + 1]
0x1e93:	lea	rdi, [rdx + rdx]
0x1e97:	cmp	rdx, rax
0x1e9a:	setbe	cl
0x1e9d:	cmp	rdi, rdx
0x1ea0:	mov	qword ptr [rip + 0x2193b9], rdi
0x1ea7:	setbe	al
0x1eaa:	or	cl, al
0x1eac:	jne	0x23c6


0x1e70:	sub	edx, 1
0x1e73:	je	0x23bf


0x1e87:	mov	qword ptr [rip + 0x2193da], rax
0x1e8e:	lea	rdx, [rax + rsi + 1]
0x1e93:	lea	rdi, [rdx + rdx]
0x1e97:	cmp	rdx, rax
0x1e9a:	setbe	cl
0x1e9d:	cmp	rdi, rdx
0x1ea0:	mov	qword ptr [rip + 0x2193b9], rdi
0x1ea7:	setbe	al
0x1eaa:	or	cl, al
0x1eac:	jne	0x23c6


0x1eb2:	call	0x5590


0x23c6:	call	0x57e0


0x23bf:	mov	qword ptr [rip + 0x218ea2], rax
0x23c6:	call	0x57e0


0x1eb7:	mov	r12, qword ptr [rip + 0x2193c2]
0x1ebe:	mov	rcx, rax
0x1ec1:	mov	qword ptr [rip + 0x2193a8], rax
0x1ec8:	test	r12, r12
0x1ecb:	jne	0x22db


0x1ed1:	add	rcx, 1
0x1ed5:	mov	qword ptr [rip + 0x219394], rcx
0x1edc:	movsxd	rax, dword ptr [rip + 0x2171ad]
0x1ee3:	cmp	eax, ebp
0x1ee5:	jge	0x1f36


0x22db:	mov	rsi, qword ptr [rip + 0x218fae]
0x22e2:	lea	rdx, [r12 + 1]
0x22e7:	mov	rdi, rax
0x22ea:	call	0x1a90


0x1ee7:	lea	r15, [rbx + rax*8]
0x1eeb:	mov	r14, qword ptr [r15]
0x1eee:	test	r14, r14
0x1ef1:	je	0x22d1


0x1f36:	lea	rax, [rip + 0x1278d]
0x1f3d:	lea	r15, [rip + 0x216b3c]
0x1f44:	mov	qword ptr [rsp + 0x10], rax
0x1f49:	mov	r14, rax
0x1f4c:	lea	rax, [r15 + 8]
0x1f50:	mov	byte ptr [rsp + 0xf], 1
0x1f55:	mov	qword ptr [rsp], rax
0x1f59:	nop	dword ptr [rax]
0x1f60:	mov	rdi, qword ptr [rsp + 0x10]
0x1f65:	mov	ecx, 2
0x1f6a:	mov	rsi, r14
0x1f6d:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x22d1:	mov	byte ptr [rsp + 0xf], 1
0x22d6:	jmp	0x20cf


0x1ef7:	lea	rax, [rip + 0x127cc]
0x1efe:	mov	qword ptr [rsp + 0x10], rax
0x1f03:	jmp	0x1f4c


0x1f6d:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1f6f:	seta	r12b
0x1f73:	sbb	r12b, 0
0x1f77:	movsx	r12d, r12b
0x1f7b:	test	r12d, r12d
0x1f7e:	jne	0x2146


0x20cf:	xor	esi, esi
0x20d1:	xor	edi, edi
0x20d3:	call	0x2530


0x1f4c:	lea	rax, [r15 + 8]
0x1f50:	mov	byte ptr [rsp + 0xf], 1
0x1f55:	mov	qword ptr [rsp], rax
0x1f59:	nop	dword ptr [rax]
0x1f60:	mov	rdi, qword ptr [rsp + 0x10]
0x1f65:	mov	ecx, 2
0x1f6a:	mov	rsi, r14
0x1f6d:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1f84:	lea	rsi, [rip + 0x122e8]
0x1f8b:	mov	edx, 5
0x1f90:	xor	edi, edi
0x1f92:	mov	byte ptr [rip + 0x2192f0], 1
0x1f99:	xor	ebp, ebp
0x1f9b:	call	0x1960


0x2146:	xor	esi, esi
0x2148:	xor	eax, eax
0x214a:	mov	rdi, r14
0x214d:	call	0x1bb0


0x1bb0:	jmp	qword ptr [rip + 0x2173b2]




0x20d8:	cmp	byte ptr [rip + 0x2191aa], 0
0x20df:	jne	0x22a1


0x20e5:	movzx	eax, byte ptr [rsp + 0xf]
0x20ea:	add	rsp, 0x28
0x20ee:	pop	rbx
0x20ef:	pop	rbp
0x20f0:	pop	r12
0x20f2:	xor	eax, 1
0x20f5:	pop	r13
0x20f7:	movzx	eax, al
0x20fa:	pop	r14
0x20fc:	pop	r15
0x20fe:	ret	


0x22a1:	xor	edi, edi
0x22a3:	call	0x1a20


0x22a8:	test	eax, eax
0x22aa:	jns	0x20e5


0x22b0:	call	0x18a0


0x22b5:	mov	esi, dword ptr [rax]
0x22b7:	lea	rdx, [rip + 0x1240c]
0x22be:	xor	edi, edi
0x22c0:	xor	eax, eax
0x22c2:	call	0x1ba0


0x22c7:	mov	byte ptr [rsp + 0xf], 0
0x22cc:	jmp	0x20e5


0x22ef:	mov	rcx, rax
0x22f2:	add	rcx, r12
0x22f5:	mov	qword ptr [rip + 0x218f74], rcx
0x22fc:	jmp	0x1edc


0x1edc:	movsxd	rax, dword ptr [rip + 0x2171ad]
0x1ee3:	cmp	eax, ebp
0x1ee5:	jge	0x1f36


0x1d9a:	xor	edi, edi
0x1d9c:	call	0x1c00


0x1e3c:	test	rax, rax
0x1e3f:	jne	0x23f9


0x23f9:	lea	rdx, [rip + 0x12280]
0x2400:	mov	rcx, rax
0x2403:	xor	esi, esi
0x2405:	mov	edi, 1
0x240a:	xor	eax, eax
0x240c:	call	0x1ba0


0x2411:	nop	word ptr cs:[rax + rax]
0x241b:	nop	dword ptr [rax + rax]


0x1fa0:	mov	r14, rax
0x1fa3:	xor	esi, esi
0x1fa5:	mov	edx, 2
0x1faa:	mov	edi, ebp
0x1fac:	call	0x19f0


0x1fb1:	test	rax, rax
0x1fb4:	mov	rbx, rax
0x1fb7:	js	0x1fc8


0x1fc8:	cmp	qword ptr [rip + 0x219120], 0
0x1fd0:	je	0x2216


0x1fb9:	mov	edi, ebp
0x1fbb:	call	0x18f0


0x2216:	lea	rdi, [rip + 0x12083]
0x221d:	call	0x1870


0x1fd6:	mov	rbx, qword ptr [rip + 0x21910b]
0x1fdd:	mov	rdi, rbx
0x1fe0:	call	0x1910


0x18f0:	jmp	qword ptr [rip + 0x217512]


0x1870:	jmp	qword ptr [rip + 0x217552]


0x1910:	jmp	qword ptr [rip + 0x217502]








0x23e8:	xor	esi, esi
0x23ea:	mov	rdx, rax
0x23ed:	mov	edi, 1
0x23f2:	xor	eax, eax
0x23f4:	call	0x1ba0


0x1fe5:	xor	edx, edx
0x1fe7:	xor	esi, esi
0x1fe9:	mov	rdi, rbx
0x1fec:	call	0x5820


0x1ff1:	test	eax, eax
0x1ff3:	js	0x20ff


0x20ff:	mov	rsi, qword ptr [rip + 0x218fea]
0x2106:	mov	edi, 4
0x210b:	call	0x4ba0


0x1ff9:	mov	rdi, qword ptr [rip + 0x2190e8]
0x2000:	call	0x1aa0


0x2005:	xor	esi, esi
0x2007:	mov	edi, eax
0x2009:	call	0x19d0


0x19d0:	jmp	qword ptr [rip + 0x2174a2]




0x2222:	test	rax, rax
0x2225:	mov	rbx, rax
0x2228:	lea	rax, [rip + 0x11fec]
0x222f:	lea	rsi, [rip + 0x120a2]
0x2236:	cmove	rbx, rax
0x223a:	xor	edx, edx
0x223c:	mov	rdi, rbx
0x223f:	call	0x3060


0x2244:	mov	rdi, rax
0x2247:	mov	qword ptr [rip + 0x218ea2], rax
0x224e:	call	0x4ef0


0x2253:	test	eax, eax
0x2255:	mov	r13d, eax
0x2258:	js	0x2301


0x2301:	mov	rsi, rbx
0x2304:	mov	edi, 4
0x2309:	call	0x4ba0


0x225e:	lea	rsi, [rip + 0x12042]
0x2265:	mov	edi, eax
0x2267:	call	0x1b40


0x1b40:	jmp	qword ptr [rip + 0x2173ea]




0x1fc0:	test	eax, eax
0x1fc2:	je	0x228d


0x228d:	mov	rdx, rbx
0x2290:	mov	rsi, r14
0x2293:	mov	edi, ebp
0x2295:	call	0x2630


0x229a:	mov	ebx, eax
0x229c:	jmp	0x20ac


0x20ac:	test	r12d, r12d
0x20af:	jne	0x219f


0x20b5:	add	qword ptr [rsp], 8
0x20ba:	and	byte ptr [rsp + 0xf], bl
0x20be:	mov	rax, qword ptr [rsp]
0x20c2:	mov	r14, qword ptr [rax - 8]
0x20c6:	test	r14, r14
0x20c9:	jne	0x1f60


0x219f:	mov	edi, ebp
0x21a1:	call	0x1a20


0x1f60:	mov	rdi, qword ptr [rsp + 0x10]
0x1f65:	mov	ecx, 2
0x1f6a:	mov	rsi, r14
0x1f6d:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x21a6:	test	eax, eax
0x21a8:	je	0x20b5


0x21ae:	mov	rdx, r14
0x21b1:	mov	esi, 3
0x21b6:	xor	edi, edi
0x21b8:	call	0x4ca0


0x2152:	test	eax, eax
0x2154:	mov	ebp, eax
0x2156:	jns	0x1fa3


0x215c:	mov	rsi, r14
0x215f:	mov	edi, 4
0x2164:	call	0x4ba0


0x1fa3:	xor	esi, esi
0x1fa5:	mov	edx, 2
0x1faa:	mov	edi, ebp
0x1fac:	call	0x19f0


0x226c:	test	rax, rax
0x226f:	mov	qword ptr [rip + 0x218e72], rax
0x2276:	mov	rdi, qword ptr [rip + 0x218e73]
0x227d:	je	0x235b


0x235b:	mov	rsi, rdi
0x235e:	mov	edi, 4
0x2363:	call	0x4ba0


0x2283:	call	0x18b0


0x18b0:	jmp	qword ptr [rip + 0x217532]




0x200e:	test	eax, eax
0x2010:	js	0x20ff


0x2016:	mov	rax, qword ptr [rip + 0x2190d3]
0x201d:	mov	r13, qword ptr [rip + 0x2190c4]
0x2024:	xor	ebx, ebx
0x2026:	mov	qword ptr [rsp + 0x18], rax
0x202b:	jmp	0x205d


0x205d:	mov	rdx, qword ptr [rip + 0x219204]
0x2064:	mov	rsi, qword ptr [rip + 0x219205]
0x206b:	mov	edi, ebp
0x206d:	call	0x4e90


0x2072:	test	rax, rax
0x2075:	mov	r15, rax
0x2078:	jne	0x2030


0x207a:	mov	rdi, r13
0x207d:	call	0x1c30


0x2030:	cmp	rax, -1
0x2034:	je	0x21ce


0x1c30:	jmp	qword ptr [rip + 0x217372]


0x21ce:	mov	rdx, r14
0x21d1:	mov	esi, 3
0x21d6:	xor	edi, edi
0x21d8:	call	0x4ca0


0x203a:	mov	rdi, qword ptr [rip + 0x21922f]
0x2041:	mov	rcx, r13
0x2044:	mov	rdx, rax
0x2047:	mov	esi, 1
0x204c:	call	0x1b20




0x2051:	cmp	r15, rax
0x2054:	jne	0x21f1


0x205a:	add	rbx, r15
0x205d:	mov	rdx, qword ptr [rip + 0x219204]
0x2064:	mov	rsi, qword ptr [rip + 0x219205]
0x206b:	mov	edi, ebp
0x206d:	call	0x4e90


0x21f1:	mov	rdx, qword ptr [rsp + 0x18]
0x21f6:	mov	esi, 3
0x21fb:	xor	edi, edi
0x21fd:	call	0x4ca0


0x2082:	test	eax, eax
0x2084:	jne	0x21f1


0x208a:	test	rbx, rbx
0x208d:	js	0x213f


0x213f:	xor	ebx, ebx
0x2141:	jmp	0x20ac


0x2093:	mov	rdi, r13
0x2096:	call	0x1aa0


0x209b:	mov	rsi, qword ptr [rsp + 0x18]
0x20a0:	mov	rdx, rbx
0x20a3:	mov	edi, eax
0x20a5:	call	0x2630


0x20aa:	mov	ebx, eax
0x20ac:	test	r12d, r12d
0x20af:	jne	0x219f


0x2288:	jmp	0x2016


0x2368:	lea	rsi, [rip + 0x11f3b]
0x236f:	xor	edi, edi
0x2371:	mov	edx, 5
0x2376:	mov	rbx, rax
0x2379:	call	0x1960


0x237e:	mov	qword ptr [rsp + 0x18], rax
0x2383:	call	0x18a0


0x2388:	mov	rdx, qword ptr [rsp + 0x18]
0x238d:	mov	esi, dword ptr [rax]
0x238f:	mov	rcx, rbx
0x2392:	xor	edi, edi
0x2394:	xor	eax, eax
0x2396:	call	0x1ba0


0x239b:	mov	edi, r13d
0x239e:	call	0x1a20


0x23a3:	mov	rdi, qword ptr [rip + 0x218d46]
0x23aa:	call	0x18b0


0x23af:	jmp	0x233d


0x233d:	mov	rdi, qword ptr [rip + 0x218dac]
0x2344:	xor	ebx, ebx
0x2346:	call	0x1880


0x234b:	mov	qword ptr [rip + 0x218d9a], 0
0x2356:	jmp	0x20ac


0x2169:	lea	rsi, [rip + 0x12112]
0x2170:	mov	rbp, rax
0x2173:	mov	edx, 5
0x2178:	xor	edi, edi
0x217a:	call	0x1960


0x217f:	mov	rbx, rax
0x2182:	call	0x18a0


0x2187:	mov	esi, dword ptr [rax]
0x2189:	mov	rdx, rbx
0x218c:	mov	rcx, rbp
0x218f:	xor	edi, edi
0x2191:	xor	eax, eax
0x2193:	xor	ebx, ebx
0x2195:	call	0x1ba0


0x219a:	jmp	0x20b5


0x230e:	lea	rsi, [rip + 0x1231b]
0x2315:	mov	edx, 5
0x231a:	xor	edi, edi
0x231c:	mov	rbx, rax
0x231f:	call	0x1960


0x2324:	mov	r13, rax
0x2327:	call	0x18a0


0x232c:	mov	esi, dword ptr [rax]
0x232e:	mov	rcx, rbx
0x2331:	mov	rdx, r13
0x2334:	xor	edi, edi
0x2336:	xor	eax, eax
0x2338:	call	0x1ba0


0x2110:	lea	rsi, [rip + 0x12541]
0x2117:	mov	rbx, rax
0x211a:	mov	edx, 5
0x211f:	xor	edi, edi
0x2121:	call	0x1960


0x2126:	mov	r13, rax
0x2129:	call	0x18a0


0x212e:	mov	esi, dword ptr [rax]
0x2130:	mov	rcx, rbx
0x2133:	mov	rdx, r13
0x2136:	xor	edi, edi
0x2138:	xor	eax, eax
0x213a:	call	0x1ba0


0x301a:	mov	esi, dword ptr [rbx]
0x301c:	lea	rdx, [rip + 0x11659]
0x3023:	mov	rcx, rax
0x3026:	mov	r8, rbp
0x3029:	xor	edi, edi
0x302b:	xor	eax, eax
0x302d:	call	0x1ba0


0x125f0:	mov	rax, qword ptr [rsp + 8]
0x125f5:	mov	rdi, qword ptr [r13 + 0xe0]
0x125fc:	mov	rdx, qword ptr [rax + 0x30]
0x12600:	test	rdx, rdx
0x12603:	je	0x12ef4


0x12ef4:	call	0x1880


0x12609:	mov	rax, qword ptr [rdi]
0x1260c:	test	rax, rax
0x1260f:	je	0x1261e


0x1261e:	add	rax, 1
0x12622:	cmp	rdx, rax
0x12625:	ja	0x12618


0x12611:	jmp	0x1262d


0x12627:	je	0x12ef4


0x12618:	cmp	qword ptr [rdi + rax*8], rax
0x1261c:	jne	0x1262d


0x12ef9:	mov	qword ptr [r13 + 0xe0], 0
0x12f04:	jmp	0x1262d


0x48dc:	lea	rsi, [rax + 1]
0x48e0:	mov	qword ptr [rsp + 0x48], rax
0x48e5:	add	rsp, 0x20
0x48e9:	mov	rdi, rsi
0x48ec:	mov	qword ptr [rsp + 0x18], rsi
0x48f1:	call	0x5590


0x48f6:	mov	qword ptr [rsp + 0x10], rax
0x48fb:	sub	rsp, 8
0x48ff:	push	qword ptr [rbx + 0x30]
0x4902:	push	qword ptr [rbx + 0x28]
0x4905:	mov	r10, qword ptr [rsp + 0x38]
0x490a:	mov	r9d, ebp
0x490d:	mov	r8d, dword ptr [rbx]
0x4910:	mov	rcx, r15
0x4913:	mov	rdx, r14
0x4916:	mov	rdi, rax
0x4919:	push	r10
0x491b:	mov	rsi, qword ptr [rsp + 0x38]
0x4920:	call	0x32f0


0x4925:	mov	eax, dword ptr [rsp + 0x2c]
0x4929:	add	rsp, 0x20
0x492d:	test	r12, r12
0x4930:	mov	dword ptr [r13], eax
0x4934:	je	0x493f


0x493f:	mov	rax, qword ptr [rsp + 0x10]
0x4944:	add	rsp, 0x38
0x4948:	pop	rbx
0x4949:	pop	rbp
0x494a:	pop	r12
0x494c:	pop	r13
0x494e:	pop	r14
0x4950:	pop	r15
0x4952:	ret	


0x4936:	mov	r11, qword ptr [rsp + 0x28]
0x493b:	mov	qword ptr [r12], r11
0x493f:	mov	rax, qword ptr [rsp + 0x10]
0x4944:	add	rsp, 0x38
0x4948:	pop	rbx
0x4949:	pop	rbp
0x494a:	pop	r12
0x494c:	pop	r13
0x494e:	pop	r14
0x4950:	pop	r15
0x4952:	ret	


0x4851:	mov	dword ptr [rbp], r12d
0x4855:	add	rsp, 0x38
0x4859:	pop	rbx
0x485a:	pop	rbp
0x485b:	pop	r12
0x485d:	pop	r13
0x485f:	pop	r14
0x4861:	pop	r15
0x4863:	ret	


0x461c:	add	rsp, 0x20
0x4620:	mov	r11, qword ptr [rsp + 0x10]
0x4625:	cmp	r11, rax
0x4628:	ja	0x4691


0x462a:	lea	rsi, [rax + 1]
0x462e:	lea	rax, [rip + 0x216c8b]
0x4635:	cmp	r12, rax
0x4638:	mov	qword ptr [rbx], rsi
0x463b:	je	0x464f


0x4691:	mov	eax, dword ptr [rsp + 0x18]
0x4695:	mov	dword ptr [r13], eax
0x4699:	add	rsp, 0x28
0x469d:	mov	rax, r12
0x46a0:	pop	rbx
0x46a1:	pop	rbp
0x46a2:	pop	r12
0x46a4:	pop	r13
0x46a6:	pop	r14
0x46a8:	pop	r15
0x46aa:	ret	


0x464f:	mov	rdi, rsi
0x4652:	mov	qword ptr [rsp + 0x10], rsi
0x4657:	call	0x5590


0x463d:	mov	rdi, r12
0x4640:	mov	qword ptr [rsp + 0x10], rsi
0x4645:	call	0x1880


0x464a:	mov	rsi, qword ptr [rsp + 0x10]
0x464f:	mov	rdi, rsi
0x4652:	mov	qword ptr [rsp + 0x10], rsi
0x4657:	call	0x5590


0x465c:	sub	rsp, 8
0x4660:	mov	qword ptr [rbx + 8], rax
0x4664:	mov	r8d, dword ptr [rbp]
0x4668:	push	qword ptr [rbp + 0x30]
0x466b:	push	qword ptr [rbp + 0x28]
0x466e:	mov	rcx, r14
0x4671:	push	r15
0x4673:	mov	r9d, dword ptr [rsp + 0x3c]
0x4678:	mov	rdi, rax
0x467b:	mov	rdx, qword ptr [rsp + 0x28]
0x4680:	mov	rsi, qword ptr [rsp + 0x30]
0x4685:	mov	r12, rax
0x4688:	call	0x32f0


0x4da2:	mov	rdi, qword ptr [rsp + 0x38]
0x4da7:	xor	rdi, qword ptr fs:[0x28]
0x4db0:	jne	0x4dbc


0x4db2:	add	rsp, 0x48
0x4db6:	ret	


0x4dbc:	call	0x1990


0x4aef:	mov	rcx, qword ptr [rsp + 0x38]
0x4af4:	xor	rcx, qword ptr fs:[0x28]
0x4afd:	jne	0x4b09


0x4aff:	add	rsp, 0x48
0x4b03:	ret	


0x4b09:	call	0x1990


0x4b7b:	mov	rdx, qword ptr [rsp + 0x38]
0x4b80:	xor	rdx, qword ptr fs:[0x28]
0x4b89:	jne	0x4b95


0x4b8b:	add	rsp, 0x48
0x4b8f:	ret	


0x4b95:	call	0x1990


0x4d0f:	mov	rcx, qword ptr [rsp + 0x38]
0x4d14:	xor	rcx, qword ptr fs:[0x28]
0x4d1d:	jne	0x4d29


0x4d1f:	add	rsp, 0x48
0x4d23:	ret	


0x4d29:	call	0x1990


0x2202:	mov	edx, 5
0x2207:	mov	rbx, rax
0x220a:	lea	rsi, [rip + 0x120b7]
0x2211:	jmp	0x211f


0x211f:	xor	edi, edi
0x2121:	call	0x1960


0x21dd:	mov	edx, 5
0x21e2:	mov	rbx, rax
0x21e5:	lea	rsi, [rip + 0x11f68]
0x21ec:	jmp	0x211f


0x21bd:	mov	edx, 5
0x21c2:	mov	rbp, rax
0x21c5:	lea	rsi, [rip + 0x11f88]
0x21cc:	jmp	0x2178


0x2178:	xor	edi, edi
0x217a:	call	0x1960


0x26e8:	mov	edx, 5
0x26ed:	mov	rsi, r12
0x26f0:	xor	edi, edi
0x26f2:	mov	rbx, rax
0x26f5:	call	0x1960


0x26fa:	mov	r15, rax
0x26fd:	call	0x18a0


0x2702:	mov	esi, dword ptr [rax]
0x2704:	mov	rcx, rbx
0x2707:	mov	rdx, r15
0x270a:	xor	edi, edi
0x270c:	xor	eax, eax
0x270e:	call	0x1ba0


0x2713:	mov	rbx, qword ptr [rip + 0x218b4e]
0x271a:	jmp	0x2690


0x2a59:	lea	rsi, [rip + 0x116e4]
0x2a60:	xor	edi, edi
0x2a62:	mov	edx, 5
0x2a67:	mov	r12, rax
0x2a6a:	call	0x1960


0x2a6f:	mov	r15, rax
0x2a72:	call	0x18a0


0x2a77:	mov	esi, dword ptr [rax]
0x2a79:	mov	rcx, r12
0x2a7c:	mov	rdx, r15
0x2a7f:	xor	edi, edi
0x2a81:	xor	eax, eax
0x2a83:	call	0x1ba0


0x2a88:	jmp	0x28bf


0x2a9e:	lea	rsi, [rip + 0x116af]
0x2aa5:	mov	edx, 5
0x2aaa:	xor	edi, edi
0x2aac:	mov	rbp, rax
0x2aaf:	call	0x1960


0x2ab4:	mov	rbx, rax
0x2ab7:	call	0x18a0


0x2abc:	mov	esi, dword ptr [rax]
0x2abe:	mov	rcx, rbp
0x2ac1:	mov	rdx, rbx
0x2ac4:	xor	eax, eax
0x2ac6:	xor	edi, edi
0x2ac8:	call	0x1ba0


0x2acd:	add	rsp, 0x38
0x2ad1:	xor	eax, eax
0x2ad3:	pop	rbx
0x2ad4:	pop	rbp
0x2ad5:	pop	r12
0x2ad7:	pop	r13
0x2ad9:	pop	r14
0x2adb:	pop	r15
0x2add:	ret	


0x2b40:	lea	rsi, [rip + 0x115fd]
0x2b47:	mov	edx, 5
0x2b4c:	xor	edi, edi
0x2b4e:	mov	rbx, rax
0x2b51:	call	0x1960


0x2b56:	mov	r12, rax
0x2b59:	call	0x18a0


0x2b5e:	mov	esi, dword ptr [rax]
0x2b60:	mov	rcx, rbx
0x2b63:	mov	rdx, r12
0x2b66:	xor	edi, edi
0x2b68:	xor	eax, eax
0x2b6a:	call	0x1ba0


0x2b6f:	mov	rbx, qword ptr [rip + 0x2186f2]
0x2b76:	jmp	0x2686


0x4c3e:	mov	rsi, qword ptr [rsp + 0x38]
0x4c43:	xor	rsi, qword ptr fs:[0x28]
0x4c4c:	jne	0x4c53


0x4c4e:	add	rsp, 0x48
0x4c52:	ret	


0x4c53:	call	0x1990


0x468d:	add	rsp, 0x20
0x4691:	mov	eax, dword ptr [rsp + 0x18]
0x4695:	mov	dword ptr [r13], eax
0x4699:	add	rsp, 0x28
0x469d:	mov	rax, r12
0x46a0:	pop	rbx
0x46a1:	pop	rbp
0x46a2:	pop	r12
0x46a4:	pop	r13
0x46a6:	pop	r14
0x46a8:	pop	r15
0x46aa:	ret	


0x12642:	test	eax, eax
0x12644:	jne	0x122f0


0x1264a:	mov	rdi, qword ptr [r13 + 0x68]
0x1264e:	lea	rsi, [rip - 0x7c05]
0x12655:	mov	rdx, r13
0x12658:	call	0x5d00


0x1265d:	test	eax, eax
0x1265f:	jne	0x122f0


0x12665:	mov	rdi, qword ptr [r13 + 0x68]
0x12669:	lea	rsi, [rip - 0xb000]
0x12670:	mov	rdx, r13
0x12673:	call	0x5d70


0x12678:	mov	rdx, qword ptr [r13 + 0x68]
0x1267c:	lea	rsi, [rip + 0x2dc5]
0x12683:	nop	dword ptr [rax + rax]
0x12688:	movzx	ecx, byte ptr [rdx + 0x30]
0x1268c:	mov	rdi, qword ptr [rdx + 0x38]
0x12690:	cmp	cl, 0x10
0x12693:	ja	0x12768


0x12699:	movzx	eax, cl
0x1269c:	movsxd	rax, dword ptr [rsi + rax*4]
0x126a0:	add	rax, rsi
0x126a3:	jmp	rax


0x12768:	and	ecx, 8
0x1276b:	jne	0x13082


0x12771:	mov	rax, qword ptr [rdx + 0x20]
0x12775:	mov	rcx, qword ptr [rax + 0x38]
0x12779:	mov	rax, qword ptr [r13 + 0x18]
0x1277d:	mov	qword ptr [rax + rdi*8], rcx
0x12781:	mov	r15, qword ptr [rdx + 8]
0x12785:	xor	edi, edi
0x12787:	test	r15, r15
0x1278a:	je	0x1279b


0x13082:	lea	rcx, [rip + 0x2477]
0x13089:	lea	rsi, [rip + 0x1eb0]
0x13090:	lea	rdi, [rip + 0x1ec9]
0x13097:	mov	edx, 0x5c2
0x1309c:	call	0x1a00


0x1279b:	mov	r15, qword ptr [rdx + 0x10]
0x1279f:	test	r15, r15
0x127a2:	sete	cl
0x127a5:	cmp	r15, rdi
0x127a8:	sete	al
0x127ab:	or	cl, al
0x127ad:	mov	byte ptr [rsp + 0x10], cl
0x127b1:	je	0x1278c


0x1278c:	mov	rdx, r15
0x1278f:	jmp	0x12688


0x127b3:	mov	rax, qword ptr [rdx]
0x127b6:	mov	rdi, rdx
0x127b9:	test	rax, rax
0x127bc:	jne	0x12798


0x12688:	movzx	ecx, byte ptr [rdx + 0x30]
0x1268c:	mov	rdi, qword ptr [rdx + 0x38]
0x12690:	cmp	cl, 0x10
0x12693:	ja	0x12768


0x127be:	xor	r14d, r14d
0x127c1:	xor	r15d, r15d
0x127c4:	nop	dword ptr [rax]
0x127c8:	mov	rdx, qword ptr [r13 + 0x10]
0x127cc:	cmp	rdx, r15
0x127cf:	je	0x127f6


0x12798:	mov	rdx, rax
0x1279b:	mov	r15, qword ptr [rdx + 0x10]
0x1279f:	test	r15, r15
0x127a2:	sete	cl
0x127a5:	cmp	r15, rdi
0x127a8:	sete	al
0x127ab:	or	cl, al
0x127ad:	mov	byte ptr [rsp + 0x10], cl
0x127b1:	je	0x1278c


0x127f6:	test	r14b, r14b
0x127f9:	je	0x12a3e


0x127d1:	lea	r10, [r15 + r15*2]
0x127d5:	mov	rax, qword ptr [r13 + 0x30]
0x127d9:	shl	r10, 3
0x127dd:	cmp	qword ptr [rax + r10 + 8], 0
0x127e3:	je	0x129e8


0x12a3e:	mov	rax, qword ptr [rsp + 8]
0x12a43:	test	byte ptr [rax + 0x38], 0x10
0x12a47:	jne	0x12a5a


0x127ff:	xor	r14d, r14d
0x12802:	xor	r15d, r15d
0x12805:	jmp	0x127d1


0x129e8:	mov	ecx, 1
0x129ed:	mov	rdx, r15
0x129f0:	mov	rsi, r13
0x129f3:	mov	rdi, r12
0x129f6:	mov	qword ptr [rsp], r10
0x129fa:	call	0x7b20


0x127e9:	mov	rdx, qword ptr [r13 + 0x10]
0x127ed:	add	r15, 1
0x127f1:	cmp	rdx, r15
0x127f4:	jne	0x127d1


0x12a49:	cmp	qword ptr [rax + 0x30], 0
0x12a4e:	je	0x12a5a


0x12a5a:	cmp	qword ptr [r13 + 0x98], 0
0x12a62:	je	0x12b5b


0x12a50:	test	byte ptr [r13 + 0xb0], 1
0x12a58:	jne	0x12a68


0x12b5b:	movzx	eax, byte ptr [rbx + 0xb0]
0x12b62:	mov	dword ptr [rsp + 0x4c], 0
0x12b6a:	shr	al, 2
0x12b6d:	cmp	qword ptr [rsp + 0x20], 0
0x12b73:	sete	dl
0x12b76:	and	al, dl
0x12b78:	jne	0x12d5f


0x12a68:	lea	rdi, [rdx + rdx*2]
0x12a6c:	mov	qword ptr [rsp], rdx
0x12a70:	shl	rdi, 3
0x12a74:	call	0x1ac0


0x12b7e:	mov	rax, qword ptr [rbx + 0x68]
0x12b82:	mov	rdi, r12
0x12b85:	mov	rax, qword ptr [rax + 0x18]
0x12b89:	mov	rax, qword ptr [rax + 0x38]
0x12b8d:	lea	rdx, [rax + rax*2]
0x12b91:	mov	qword ptr [rbx + 0x90], rax
0x12b98:	mov	rax, qword ptr [rbx + 0x30]
0x12b9c:	lea	rsi, [rax + rdx*8]
0x12ba0:	call	0x8580


0x12d5f:	mov	rcx, qword ptr [rsp + 8]
0x12d64:	cmp	qword ptr [rcx + 0x28], 0
0x12d69:	jne	0x12b7e


0x12d6f:	mov	r10, qword ptr [rbx + 0x10]
0x12d73:	test	r10, r10
0x12d76:	je	0x1302a


0x1302a:	cmp	qword ptr [rbx + 0x98], 0
0x13032:	movzx	edx, byte ptr [rbx + 0xb0]
0x13039:	mov	dword ptr [rbx + 0xb4], 1
0x13043:	setg	al
0x13046:	and	edx, 0xfffffff9
0x13049:	or	eax, r14d
0x1304c:	and	eax, 1
0x1304f:	add	eax, eax
0x13051:	or	eax, edx
0x13053:	mov	byte ptr [rbx + 0xb0], al
0x13059:	jmp	0x12b7e


0x12d7c:	mov	rsi, qword ptr [rbx]
0x12d7f:	lea	r9, [rip + 0x2706]
0x12d86:	xor	r8d, r8d
0x12d89:	xor	edx, edx
0x12d8b:	mov	rcx, rsi
0x12d8e:	cmp	byte ptr [rcx + 8], 0xc
0x12d92:	ja	0x1305e


0x12d98:	movzx	edi, byte ptr [rcx + 8]
0x12d9c:	movsxd	rdi, dword ptr [r9 + rdi*4]
0x12da0:	add	rdi, r9
0x12da3:	jmp	rdi


0x1305e:	call	0x1890


0x12ba5:	test	eax, eax
0x12ba7:	mov	r15d, eax
0x12baa:	mov	dword ptr [rsp + 0x50], eax
0x12bae:	jne	0x12ccf


0x12bb4:	cmp	qword ptr [rbx + 0x98], 0
0x12bbc:	jle	0x12c90


0x12ccf:	mov	rax, qword ptr [rsp + 8]
0x12cd4:	mov	dword ptr [rsp + 0x4c], r15d
0x12cd9:	mov	r13, qword ptr [rax]
0x12cdc:	mov	rdi, qword ptr [r13 + 0x70]
0x12ce0:	test	rdi, rdi
0x12ce3:	je	0x12cf8


0x12c90:	mov	rdi, qword ptr [rsp + 0x28]
0x12c95:	xor	ecx, ecx
0x12c97:	mov	rdx, r12
0x12c9a:	mov	rsi, rbx
0x12c9d:	call	0x8770


0x12bc2:	mov	r9, qword ptr [rsp + 0x68]
0x12bc7:	test	r9, r9
0x12bca:	jle	0x12c90


0x12cf8:	mov	rdi, qword ptr [r13 + 0x20]
0x12cfc:	mov	qword ptr [r13 + 0x70], 0
0x12d04:	mov	dword ptr [r13 + 0x80], 0xf
0x12d0f:	mov	qword ptr [r13 + 0x68], 0
0x12d17:	call	0x1880


0x12bd0:	xor	r10d, r10d
0x12bd3:	lea	r13, [r12 + 0x10]
0x12bd8:	jmp	0x12bed


0x12bed:	mov	rcx, qword ptr [rsp + 0x70]
0x12bf2:	mov	rsi, qword ptr [rbx]
0x12bf5:	mov	r8, qword ptr [rcx + r10*8]
0x12bf9:	mov	rdi, r8
0x12bfc:	shl	rdi, 4
0x12c00:	add	rdi, rsi
0x12c03:	cmp	byte ptr [rdi + 8], 4
0x12c07:	jne	0x12be0


0x12c09:	xor	edx, edx
0x12c0b:	jmp	0x12c19


0x12be0:	add	r10, 1
0x12be4:	cmp	r9, r10
0x12be7:	jle	0x12c90


0x12c19:	mov	rax, qword ptr [rcx + rdx*8]
0x12c1d:	shl	rax, 4
0x12c21:	add	rax, rsi
0x12c24:	cmp	byte ptr [rax + 8], 9
0x12c28:	jne	0x12c10


0x12c2a:	mov	r11, qword ptr [rdi]
0x12c2d:	cmp	qword ptr [rax], r11
0x12c30:	jne	0x12c10


0x12c10:	add	rdx, 1
0x12c14:	cmp	r9, rdx
0x12c17:	je	0x12be0


0x12c32:	mov	rdx, qword ptr [rbx + 0x28]
0x12c36:	lea	rax, [r8 + r8*2]
0x12c3a:	mov	rsi, r13
0x12c3d:	mov	rdi, r9
0x12c40:	lea	rax, [rdx + rax*8]
0x12c44:	mov	rax, qword ptr [rax + 0x10]
0x12c48:	mov	r11, qword ptr [rax]
0x12c4b:	mov	rdx, r11
0x12c4e:	call	0x7420


0x12c53:	test	rax, rax
0x12c56:	jne	0x12be0


0x12c58:	mov	rax, qword ptr [rbx + 0x30]
0x12c5c:	lea	rdx, [r11 + r11*2]
0x12c60:	mov	rdi, r12
0x12c63:	lea	rsi, [rax + rdx*8]
0x12c67:	call	0x7940


0x12c6c:	test	eax, eax
0x12c6e:	jne	0x12fb0


0x12c74:	mov	r9, qword ptr [rsp + 0x68]
0x12c79:	mov	r10d, 1
0x12c7f:	cmp	r9, r10
0x12c82:	jg	0x12bed


0x12fb0:	mov	r15d, eax
0x12fb3:	jmp	0x12ccf


0x12cf0:	test	r12, r12
0x12cf3:	mov	rdi, r12
0x12cf6:	jne	0x12ce8


0x12ce8:	mov	r12, qword ptr [rdi]
0x12ceb:	call	0x1880


0x12d1c:	mov	qword ptr [r13 + 0x20], 0
0x12d24:	mov	rdi, rbp
0x12d27:	call	0x7110


0x12d2c:	mov	eax, dword ptr [rsp + 0x4c]
0x12d30:	test	eax, eax
0x12d32:	je	0x1236c


0x12d38:	jmp	0x1234c


0x12ca2:	test	rax, rax
0x12ca5:	mov	qword ptr [rbx + 0x48], rax
0x12ca9:	je	0x12e12


0x12e12:	mov	r15d, dword ptr [rsp + 0x50]
0x12e17:	jmp	0x12ccf


0x12caf:	cmp	byte ptr [rax + 0x68], 0
0x12cb3:	js	0x12db1


0x12db1:	mov	r14, qword ptr [rsp + 0x28]
0x12db6:	mov	ecx, 1
0x12dbb:	mov	rdx, r12
0x12dbe:	mov	rsi, rbx
0x12dc1:	mov	rdi, r14
0x12dc4:	call	0x8770


0x12cb9:	mov	qword ptr [rbx + 0x60], rax
0x12cbd:	mov	qword ptr [rbx + 0x58], rax
0x12cc1:	mov	qword ptr [rbx + 0x50], rax
0x12cc5:	mov	rdi, qword ptr [rsp + 0x70]
0x12cca:	call	0x1880


0x12dc9:	mov	ecx, 2
0x12dce:	mov	rdx, r12
0x12dd1:	mov	rsi, rbx
0x12dd4:	mov	rdi, r14
0x12dd7:	mov	qword ptr [rbx + 0x50], rax
0x12ddb:	call	0x8770


0x12de0:	mov	ecx, 6
0x12de5:	mov	qword ptr [rbx + 0x58], rax
0x12de9:	mov	rdx, r12
0x12dec:	mov	rsi, rbx
0x12def:	mov	rdi, r14
0x12df2:	call	0x8770


0x12df7:	cmp	qword ptr [rbx + 0x50], 0
0x12dfc:	mov	qword ptr [rbx + 0x60], rax
0x12e00:	je	0x12e12


0x12e02:	cmp	qword ptr [rbx + 0x58], 0
0x12e07:	je	0x12e12


0x12e09:	test	rax, rax
0x12e0c:	jne	0x12cc5


0x12cc5:	mov	rdi, qword ptr [rsp + 0x70]
0x12cca:	call	0x1880


0x12a79:	test	rax, rax
0x12a7c:	mov	qword ptr [r13 + 0x38], rax
0x12a80:	je	0x12fcc


0x12fcc:	mov	rax, qword ptr [rsp + 8]
0x12fd1:	mov	dword ptr [rsp + 0x4c], 0xc
0x12fd9:	mov	r13, qword ptr [rax]
0x12fdc:	jmp	0x122fc


0x12a86:	mov	rdx, qword ptr [rsp]
0x12a8a:	xor	esi, esi
0x12a8c:	xor	ecx, ecx
0x12a8e:	test	rdx, rdx
0x12a91:	jne	0x12aa4


0x12a93:	jmp	0x12b5b


0x12aa4:	pxor	xmm0, xmm0
0x12aa8:	add	rax, rsi
0x12aab:	add	rcx, 1
0x12aaf:	mov	qword ptr [rax + 0x10], 0
0x12ab7:	add	rsi, 0x18
0x12abb:	movups	xmmword ptr [rax], xmm0
0x12abe:	mov	rax, qword ptr [r13 + 0x10]
0x12ac2:	cmp	rcx, rax
0x12ac5:	jb	0x12aa0


0x12aa0:	mov	rax, qword ptr [r13 + 0x38]
0x12aa4:	pxor	xmm0, xmm0
0x12aa8:	add	rax, rsi
0x12aab:	add	rcx, 1
0x12aaf:	mov	qword ptr [rax + 0x10], 0
0x12ab7:	add	rsi, 0x18
0x12abb:	movups	xmmword ptr [rax], xmm0
0x12abe:	mov	rax, qword ptr [r13 + 0x10]
0x12ac2:	cmp	rcx, rax
0x12ac5:	jb	0x12aa0


0x12ac7:	test	rax, rax
0x12aca:	je	0x12b5b


0x12ad0:	mov	rax, qword ptr [r13 + 0x30]
0x12ad4:	mov	qword ptr [rsp + 0x18], 0
0x12add:	mov	qword ptr [rsp + 0x10], 0
0x12ae6:	mov	rcx, qword ptr [rsp + 0x18]
0x12aeb:	lea	rdx, [rax + rcx]
0x12aef:	cmp	qword ptr [rdx + 8], 0
0x12af4:	mov	rcx, qword ptr [rdx + 0x10]
0x12af8:	jle	0x12b44


0x12b44:	add	qword ptr [rsp + 0x10], 1
0x12b4a:	add	qword ptr [rsp + 0x18], 0x18
0x12b50:	mov	rdx, qword ptr [rsp + 0x10]
0x12b55:	cmp	rdx, qword ptr [r13 + 0x10]
0x12b59:	jb	0x12ae6


0x12afa:	xor	r15d, r15d
0x12afd:	jmp	0x12b18


0x12ae6:	mov	rcx, qword ptr [rsp + 0x18]
0x12aeb:	lea	rdx, [rax + rcx]
0x12aef:	cmp	qword ptr [rdx + 8], 0
0x12af4:	mov	rcx, qword ptr [rdx + 0x10]
0x12af8:	jle	0x12b44


0x12b18:	mov	rax, qword ptr [rcx + r15*8]
0x12b1c:	mov	qword ptr [rsp], rcx
0x12b20:	lea	rsi, [rax + rax*2]
0x12b24:	mov	rax, qword ptr [r13 + 0x38]
0x12b28:	lea	rdi, [rax + rsi*8]
0x12b2c:	mov	rsi, qword ptr [rsp + 0x10]
0x12b31:	call	0x5e70


0x12b36:	test	al, al
0x12b38:	jne	0x12b00


0x12b3a:	mov	eax, 0xc
0x12b3f:	jmp	0x122f0


0x12b00:	mov	rax, qword ptr [r13 + 0x30]
0x12b04:	mov	rdx, qword ptr [rsp + 0x18]
0x12b09:	add	r15, 1
0x12b0d:	mov	rcx, qword ptr [rsp]
0x12b11:	cmp	r15, qword ptr [rax + rdx + 8]
0x12b16:	jge	0x12b44


0x129ff:	test	eax, eax
0x12a01:	jne	0x122f0


0x12a07:	mov	rax, qword ptr [r13 + 0x30]
0x12a0b:	mov	r10, qword ptr [rsp]
0x12a0f:	add	r15, 1
0x12a13:	cmp	qword ptr [rax + r10 + 8], 0
0x12a19:	jne	0x127c8


0x12a1f:	mov	rdi, qword ptr [rsp + 0x70]
0x12a24:	call	0x1880


0x127c8:	mov	rdx, qword ptr [r13 + 0x10]
0x127cc:	cmp	rdx, r15
0x127cf:	je	0x127f6


0x12a29:	cmp	qword ptr [r13 + 0x10], r15
0x12a2d:	je	0x127ff


0x12a33:	movzx	r14d, byte ptr [rsp + 0x10]
0x12a39:	jmp	0x127d1


0x11e21:	lea	rsi, [rip - 0xb288]
0x11e28:	mov	rdi, r14
0x11e2b:	xor	edx, edx
0x11e2d:	xor	r14d, r14d
0x11e30:	call	0x5d00


0x11e35:	mov	dword ptr [rbx], 0xc
0x11e3b:	jmp	0x11dc0


0x4f46:	mov	r12d, eax
0x4f49:	call	0x18a0


0x4f4e:	mov	r13d, dword ptr [rax]
0x4f51:	mov	rbp, rax
0x4f54:	mov	edi, ebx
0x4f56:	call	0x1a20


0x4f5b:	mov	ebx, r12d
0x4f5e:	mov	dword ptr [rbp], r13d
0x4f62:	add	rsp, 8
0x4f66:	mov	eax, ebx
0x4f68:	pop	rbx
0x4f69:	pop	rbp
0x4f6a:	pop	r12
0x4f6c:	pop	r13
0x4f6e:	ret	


0x140ed:	add	rbx, 1
0x140f1:	cmp	rbp, rbx
0x140f4:	jne	0x140e0


0x140e0:	mov	rdx, r15
0x140e3:	mov	rsi, r14
0x140e6:	mov	edi, r13d
0x140e9:	call	qword ptr [r12 + rbx*8]


0x5d2e:	test	eax, eax
0x5d30:	jne	0x5d66


0x5d66:	pop	rbx
0x5d67:	pop	rbp
0x5d68:	pop	r12
0x5d6a:	ret	


0x5d40:	mov	rax, qword ptr [rdx + 0x10]
0x5d44:	cmp	rax, rbx
0x5d47:	mov	rbx, rdx
0x5d4a:	sete	sil
0x5d4e:	test	rax, rax
0x5d51:	sete	cl
0x5d54:	or	sil, cl
0x5d57:	je	0x5d10


0x5d59:	mov	rsi, rbx
0x5d5c:	mov	rdi, rbp
0x5d5f:	call	r12


0x5d62:	test	eax, eax
0x5d64:	je	0x5d38


0x5d38:	mov	rdx, qword ptr [rbx]
0x5d3b:	test	rdx, rdx
0x5d3e:	je	0x5d66


0x5d8c:	test	eax, eax
0x5d8e:	jne	0x5dbc


0x5d90:	mov	rdx, qword ptr [rbx + 8]
0x5d94:	xor	ecx, ecx
0x5d96:	test	rdx, rdx
0x5d99:	jne	0x5d80


0x5dbc:	pop	rbx
0x5dbd:	pop	rbp
0x5dbe:	pop	r12
0x5dc0:	ret	


0x5d9b:	jmp	0x5da3


0x5d80:	mov	rbx, rdx
0x5d83:	mov	rsi, rbx
0x5d86:	mov	rdi, rbp
0x5d89:	call	r12


0x5da3:	mov	rdx, qword ptr [rbx + 0x10]
0x5da7:	cmp	rdx, rcx
0x5daa:	je	0x5db1


0x5db1:	mov	rdx, qword ptr [rbx]
0x5db4:	mov	rcx, rbx
0x5db7:	test	rdx, rdx
0x5dba:	jne	0x5da0


0x5dac:	test	rdx, rdx
0x5daf:	jne	0x5d80


0x5da0:	mov	rbx, rdx
0x5da3:	mov	rdx, qword ptr [rbx + 0x10]
0x5da7:	cmp	rdx, rcx
0x5daa:	je	0x5db1


0x13c66:	mov	r12d, eax
0x13c69:	call	0x18a0


0x13c6e:	mov	r13d, dword ptr [rax]
0x13c71:	mov	rbp, rax
0x13c74:	mov	edi, ebx
0x13c76:	call	0x1a20


0x13c7b:	mov	ebx, r12d
0x13c7e:	mov	dword ptr [rbp], r13d
0x13c82:	add	rsp, 8
0x13c86:	mov	eax, ebx
0x13c88:	pop	rbx
0x13c89:	pop	rbp
0x13c8a:	pop	r12
0x13c8c:	pop	r13
0x13c8e:	ret	






0x5200:	lea	rsi, [rip + 0xfb11]
0x5207:	mov	edx, 5
0x520c:	xor	edi, edi
0x520e:	mov	r14, qword ptr [rbx + 0x18]
0x5212:	mov	r13, qword ptr [rbx + 0x10]
0x5216:	mov	r12, qword ptr [rbx + 8]
0x521a:	mov	rbx, qword ptr [rbx]
0x521d:	call	0x1960


0x5020:	mov	r9, qword ptr [rbx + 0x38]
0x5024:	mov	rax, qword ptr [rbx + 0x10]
0x5028:	lea	rsi, [rip + 0xfd89]
0x502f:	mov	r8, qword ptr [rbx + 8]
0x5033:	mov	edx, 5
0x5038:	xor	edi, edi
0x503a:	mov	r13, qword ptr [rbx + 0x30]
0x503e:	mov	r12, qword ptr [rbx + 0x28]
0x5042:	mov	qword ptr [rsp + 0x10], r9
0x5047:	mov	r15, qword ptr [rbx + 0x20]
0x504b:	mov	r14, qword ptr [rbx + 0x18]
0x504f:	mov	qword ptr [rsp], rax
0x5053:	mov	qword ptr [rsp + 8], r8
0x5058:	mov	rbx, qword ptr [rbx]
0x505b:	call	0x1960


0x5128:	mov	rbx, qword ptr [rbx]
0x512b:	lea	rsi, [rip + 0xfa8d]
0x5132:	mov	edx, 5
0x5137:	xor	edi, edi
0x5139:	call	0x1960


0x5168:	mov	r12, qword ptr [rbx + 8]
0x516c:	lea	rsi, [rip + 0xfa5c]
0x5173:	mov	rbx, qword ptr [rbx]
0x5176:	mov	edx, 5
0x517b:	xor	edi, edi
0x517d:	call	0x1960


0x5288:	mov	r8, qword ptr [rbx + 8]
0x528c:	mov	r12, qword ptr [rbx + 0x28]
0x5290:	lea	rsi, [rip + 0xfac9]
0x5297:	mov	r15, qword ptr [rbx + 0x20]
0x529b:	mov	r14, qword ptr [rbx + 0x18]
0x529f:	mov	edx, 5
0x52a4:	mov	r13, qword ptr [rbx + 0x10]
0x52a8:	xor	edi, edi
0x52aa:	mov	rbx, qword ptr [rbx]
0x52ad:	mov	qword ptr [rsp], r8
0x52b1:	call	0x1960


0x51b0:	mov	r13, qword ptr [rbx + 0x10]
0x51b4:	mov	r12, qword ptr [rbx + 8]
0x51b8:	lea	rsi, [rip + 0xfa27]
0x51bf:	mov	rbx, qword ptr [rbx]
0x51c2:	mov	edx, 5
0x51c7:	xor	edi, edi
0x51c9:	call	0x1960


0x52f0:	mov	r9, qword ptr [rbx + 0x10]
0x52f4:	mov	r13, qword ptr [rbx + 0x30]
0x52f8:	lea	rsi, [rip + 0xfa89]
0x52ff:	mov	r12, qword ptr [rbx + 0x28]
0x5303:	mov	r15, qword ptr [rbx + 0x20]
0x5307:	mov	edx, 5
0x530c:	mov	r14, qword ptr [rbx + 0x18]
0x5310:	mov	r8, qword ptr [rbx + 8]
0x5314:	xor	edi, edi
0x5316:	mov	qword ptr [rsp + 8], r9
0x531b:	mov	rbx, qword ptr [rbx]
0x531e:	mov	qword ptr [rsp], r8
0x5322:	call	0x1960


0x50d0:	mov	r10, qword ptr [rbx + 0x40]
0x50d4:	mov	r9, qword ptr [rbx + 0x38]
0x50d8:	lea	rsi, [rip + 0xfd09]
0x50df:	mov	rax, qword ptr [rbx + 0x10]
0x50e3:	mov	r8, qword ptr [rbx + 8]
0x50e7:	mov	edx, 5
0x50ec:	mov	r13, qword ptr [rbx + 0x30]
0x50f0:	mov	r12, qword ptr [rbx + 0x28]
0x50f4:	mov	r15, qword ptr [rbx + 0x20]
0x50f8:	mov	r14, qword ptr [rbx + 0x18]
0x50fc:	mov	rbx, qword ptr [rbx]
0x50ff:	mov	qword ptr [rsp + 0x18], r10
0x5104:	mov	qword ptr [rsp + 0x10], r9
0x5109:	mov	qword ptr [rsp], rax
0x510d:	mov	qword ptr [rsp + 8], r8
0x5112:	xor	edi, edi
0x5114:	call	0x1960


0x5096:	add	rsp, 0x28
0x509a:	pop	rbx
0x509b:	pop	rbp
0x509c:	pop	r12
0x509e:	pop	r13
0x50a0:	pop	r14
0x50a2:	pop	r15
0x50a4:	ret	


0x5258:	mov	r15, qword ptr [rbx + 0x20]
0x525c:	lea	rsi, [rip + 0xfad5]
0x5263:	mov	edx, 5
0x5268:	xor	edi, edi
0x526a:	mov	r14, qword ptr [rbx + 0x18]
0x526e:	mov	r13, qword ptr [rbx + 0x10]
0x5272:	mov	r12, qword ptr [rbx + 8]
0x5276:	mov	rbx, qword ptr [rbx]
0x5279:	call	0x1960


0xe892:	cmp	qword ptr [rsp + 0x70], rbp
0xe897:	jle	0xe3cf


0xe904:	cmp	qword ptr [rsp + 0x90], rbp
0xe90c:	jg	0xeda9


0xe36e:	cmp	qword ptr [rsp + 0x70], rbp
0xe373:	jle	0xe3cf


0xe3cf:	cmp	qword ptr [rsp + 0x70], rbp
0xe3d4:	jne	0xe418


0xe89d:	mov	rax, qword ptr [rsp + 0x78]
0xe8a2:	mov	rdi, qword ptr [rsp + 0xb0]
0xe8aa:	mov	rsi, qword ptr [rsp + 0x68]
0xe8af:	movzx	eax, byte ptr [rax + rbp]
0xe8b3:	movzx	edx, byte ptr [rdi + rax]
0xe8b7:	lea	rax, [rbp + 1]
0xe8bb:	cmp	byte ptr [rsi + rdx], 0
0xe8bf:	jne	0xe418


0xe912:	xor	ecx, ecx
0xe914:	mov	rax, rbp
0xe917:	mov	rdi, qword ptr [rsp + 0x68]
0xe91c:	mov	rsi, qword ptr [rsp + 0xb0]
0xe924:	mov	r9, qword ptr [rsp + 0x90]
0xe92c:	mov	r10, qword ptr [rsp + 0x78]
0xe931:	mov	r8, qword ptr [rsp + 0x88]
0xe939:	jmp	0xe952


0xe375:	mov	rax, qword ptr [rsp + 0x78]
0xe37a:	mov	rdi, qword ptr [rsp + 0x68]
0xe37f:	movzx	edx, byte ptr [rax + rbp]
0xe383:	lea	rax, [rbp + 1]
0xe387:	cmp	byte ptr [rdi + rdx], 0
0xe38b:	jne	0xe418


0xe3d6:	xor	eax, eax
0xe3d8:	mov	rsi, qword ptr [rsp + 0x70]
0xe3dd:	cmp	qword ptr [rsp + 0x88], rsi
0xe3e5:	jle	0xe3f0


0xe8c5:	mov	rsi, qword ptr [rsp + 0x68]
0xe8ca:	mov	rdi, qword ptr [rsp + 0xb0]
0xe8d2:	mov	rcx, qword ptr [rsp + 0x70]
0xe8d7:	mov	r8, qword ptr [rsp + 0x78]
0xe8dc:	jmp	0xe8f7


0xe952:	xor	edx, edx
0xe954:	cmp	r8, rax
0xe957:	jle	0xe95e


0xe391:	mov	rsi, qword ptr [rsp + 0x68]
0xe396:	mov	rcx, qword ptr [rsp + 0x70]
0xe39b:	mov	rdi, qword ptr [rsp + 0x78]
0xe3a0:	jmp	0xe3ba


0xe3f0:	mov	rsi, qword ptr [rsp + 0xb0]
0xe3f8:	test	rsi, rsi
0xe3fb:	je	0xe401


0xe3e7:	mov	rax, qword ptr [rsp + 0x78]
0xe3ec:	movzx	eax, byte ptr [rax + rsi]
0xe3f0:	mov	rsi, qword ptr [rsp + 0xb0]
0xe3f8:	test	rsi, rsi
0xe3fb:	je	0xe401


0xe8f7:	cmp	rcx, rax
0xe8fa:	mov	rbp, rax
0xe8fd:	jne	0xe8e0


0xe95e:	test	rsi, rsi
0xe961:	je	0xe967


0xe959:	movzx	edx, byte ptr [r10 + rax]
0xe95e:	test	rsi, rsi
0xe961:	je	0xe967


0xe3ba:	cmp	rcx, rax
0xe3bd:	mov	rbp, rax
0xe3c0:	jne	0xe3a8


0xe401:	mov	rdi, qword ptr [rsp + 0x68]
0xe406:	cmp	byte ptr [rdi + rax], 0
0xe40a:	je	0xeda9


0xe3fd:	movzx	eax, byte ptr [rsi + rax]
0xe401:	mov	rdi, qword ptr [rsp + 0x68]
0xe406:	cmp	byte ptr [rdi + rax], 0
0xe40a:	je	0xeda9


0xe8ff:	jmp	0xe3c2


0xe8e0:	movzx	eax, byte ptr [r8 + rax]
0xe8e5:	movzx	edx, byte ptr [rdi + rax]
0xe8e9:	lea	rax, [rbp + 1]
0xe8ed:	cmp	byte ptr [rsi + rdx], 0
0xe8f1:	jne	0xf551


0xe967:	cmp	byte ptr [rdi + rdx], 0
0xe96b:	je	0xe940


0xe963:	movzx	edx, byte ptr [rsi + rdx]
0xe967:	cmp	byte ptr [rdi + rdx], 0
0xe96b:	je	0xe940


0xe3c2:	mov	rax, qword ptr [rsp + 0x70]
0xe3c7:	mov	qword ptr [rsp + 0xd8], rax
0xe3cf:	cmp	qword ptr [rsp + 0x70], rbp
0xe3d4:	jne	0xe418


0xe3a8:	movzx	edx, byte ptr [rdi + rax]
0xe3ac:	lea	rax, [rax + 1]
0xe3b0:	cmp	byte ptr [rsi + rdx], 0
0xe3b4:	jne	0xf551


0xe410:	mov	rbp, qword ptr [rsp + 0x70]
0xe415:	nop	dword ptr [rax]
0xe418:	mov	edx, dword ptr [rsp + 0x280]
0xe41f:	mov	rdi, qword ptr [rsp]
0xe423:	mov	rsi, rbp
0xe426:	call	0x94d0


0xf551:	mov	qword ptr [rsp + 0xd8], rbp
0xf559:	jmp	0xe418


0xe940:	sub	rax, 1
0xe944:	mov	ecx, 1
0xe949:	cmp	rax, r9
0xe94c:	jl	0xf330


0xe96d:	test	cl, cl
0xe96f:	je	0xe418


0xf330:	mov	qword ptr [rsp + 0xd8], rax
0xf338:	mov	rdi, qword ptr [rsp + 0x1d8]
0xf340:	mov	dword ptr [rsp + 0x5c], 1
0xf348:	jmp	0xe998


0xe975:	mov	qword ptr [rsp + 0xd8], rax
0xe97d:	mov	rbp, rax
0xe980:	jmp	0xe418


0x527e:	push	r15
0x5280:	jmp	0x5226


0x5226:	push	r14
0x5228:	mov	rdx, rax
0x522b:	mov	r9, r13
0x522e:	mov	r8, r12
0x5231:	mov	rcx, rbx
0x5234:	mov	rdi, rbp
0x5237:	mov	esi, 1
0x523c:	xor	eax, eax
0x523e:	call	0x1c20


0x5243:	pop	rax
0x5244:	pop	rdx
0x5245:	add	rsp, 0x28
0x5249:	pop	rbx
0x524a:	pop	rbp
0x524b:	pop	r12
0x524d:	pop	r13
0x524f:	pop	r14
0x5251:	pop	r15
0x5253:	ret	


0x5327:	push	r13
0x5329:	push	r12
0x532b:	push	r15
0x532d:	push	r14
0x532f:	mov	r9, qword ptr [rsp + 0x28]
0x5334:	jmp	0x52c3


0x52c3:	mov	r8, qword ptr [rsp + 0x20]
0x52c8:	mov	rcx, rbx
0x52cb:	mov	rdx, rax
0x52ce:	mov	rdi, rbp
0x52d1:	mov	esi, 1
0x52d6:	xor	eax, eax
0x52d8:	call	0x1c20


0x52dd:	add	rsp, 0x20
0x52e1:	add	rsp, 0x28
0x52e5:	pop	rbx
0x52e6:	pop	rbp
0x52e7:	pop	r12
0x52e9:	pop	r13
0x52eb:	pop	r14
0x52ed:	pop	r15
0x52ef:	ret	


0x51ce:	add	rsp, 0x28
0x51d2:	mov	r9, r13
0x51d5:	mov	r8, r12
0x51d8:	mov	rcx, rbx
0x51db:	mov	rdi, rbp
0x51de:	mov	rdx, rax
0x51e1:	pop	rbx
0x51e2:	pop	rbp
0x51e3:	pop	r12
0x51e5:	pop	r13
0x51e7:	pop	r14
0x51e9:	pop	r15
0x51eb:	mov	esi, 1
0x51f0:	xor	eax, eax
0x51f2:	jmp	0x1c20


0x52b6:	sub	rsp, 8
0x52ba:	mov	r9, r13
0x52bd:	push	r12
0x52bf:	push	r15
0x52c1:	push	r14
0x52c3:	mov	r8, qword ptr [rsp + 0x20]
0x52c8:	mov	rcx, rbx
0x52cb:	mov	rdx, rax
0x52ce:	mov	rdi, rbp
0x52d1:	mov	esi, 1
0x52d6:	xor	eax, eax
0x52d8:	call	0x1c20


0x5182:	add	rsp, 0x28
0x5186:	mov	r8, r12
0x5189:	mov	rcx, rbx
0x518c:	mov	rdi, rbp
0x518f:	mov	rdx, rax
0x5192:	mov	esi, 1
0x5197:	pop	rbx
0x5198:	pop	rbp
0x5199:	pop	r12
0x519b:	pop	r13
0x519d:	pop	r14
0x519f:	pop	r15
0x51a1:	xor	eax, eax
0x51a3:	jmp	0x1c20


0x513e:	add	rsp, 0x28
0x5142:	mov	rcx, rbx
0x5145:	mov	rdi, rbp
0x5148:	pop	rbx
0x5149:	pop	rbp
0x514a:	pop	r12
0x514c:	pop	r13
0x514e:	pop	r14
0x5150:	pop	r15
0x5152:	mov	rdx, rax
0x5155:	mov	esi, 1
0x515a:	xor	eax, eax
0x515c:	jmp	0x1c20


0x5060:	sub	rsp, 8
0x5064:	mov	r9, qword ptr [rsp + 0x18]
0x5069:	mov	rdx, rax
0x506c:	mov	rcx, rbx
0x506f:	mov	esi, 1
0x5074:	mov	rdi, rbp
0x5077:	xor	eax, eax
0x5079:	push	r9
0x507b:	push	r13
0x507d:	push	r12
0x507f:	push	r15
0x5081:	push	r14
0x5083:	mov	r9, qword ptr [rsp + 0x30]
0x5088:	mov	r8, qword ptr [rsp + 0x38]
0x508d:	call	0x1c20


0x5222:	sub	rsp, 8
0x5226:	push	r14
0x5228:	mov	rdx, rax
0x522b:	mov	r9, r13
0x522e:	mov	r8, r12
0x5231:	mov	rcx, rbx
0x5234:	mov	rdi, rbp
0x5237:	mov	esi, 1
0x523c:	xor	eax, eax
0x523e:	call	0x1c20


0x3e90:	sub	rsp, 8
0x3e94:	mov	rcx, rbp
0x3e97:	mov	rsi, r13
0x3e9a:	push	qword ptr [rsp + 0x68]
0x3e9e:	push	qword ptr [rsp + 0x78]
0x3ea2:	mov	rdi, r14
0x3ea5:	push	0
0x3ea7:	mov	r9d, dword ptr [rsp + 0x98]
0x3eaf:	mov	r8d, dword ptr [rsp + 0x28]
0x3eb4:	mov	rdx, qword ptr [rsp + 0x30]
0x3eb9:	and	r9d, 0xfffffffd
0x3ebd:	call	0x32f0


0x3ec2:	add	rsp, 0x20
0x3ec6:	mov	r15, rax
0x3ec9:	mov	rbx, qword ptr [rsp + 0xa8]
0x3ed1:	xor	rbx, qword ptr fs:[0x28]
0x3eda:	mov	rax, r15
0x3edd:	jne	0x44e3


0x3ee3:	add	rsp, 0xb8
0x3eea:	pop	rbx
0x3eeb:	pop	rbp
0x3eec:	pop	r12
0x3eee:	pop	r13
0x3ef0:	pop	r14
0x3ef2:	pop	r15
0x3ef4:	ret	


0x44e3:	call	0x1990


0x448d:	sub	rsp, 8
0x4491:	mov	r8d, 5
0x4497:	mov	rcx, r11
0x449a:	push	qword ptr [rsp + 0x68]
0x449e:	push	qword ptr [rsp + 0x78]
0x44a2:	mov	rdi, r14
0x44a5:	push	qword ptr [rsp + 0x38]
0x44a9:	mov	r9d, dword ptr [rsp + 0x98]
0x44b1:	mov	rdx, qword ptr [rsp + 0x30]
0x44b6:	mov	rsi, qword ptr [rsp + 0x70]
0x44bb:	call	0x32f0


0x44c0:	add	rsp, 0x20
0x44c4:	mov	r15, rax
0x44c7:	jmp	0x3ec9


0x3ec9:	mov	rbx, qword ptr [rsp + 0xa8]
0x3ed1:	xor	rbx, qword ptr fs:[0x28]
0x3eda:	mov	rax, r15
0x3edd:	jne	0x44e3


0x114d9:	sub	rsp, 8
0x114dd:	mov	rdi, qword ptr [r14 + 0x78]
0x114e1:	lea	rdx, [r13 + 0x18]
0x114e5:	push	qword ptr [rsp + 0x28]
0x114e9:	mov	r9, qword ptr [rsp + 0xb8]
0x114f1:	lea	rcx, [r13 + 0x48]
0x114f5:	mov	r8, qword ptr [rsp + 0x68]
0x114fa:	mov	rsi, r12
0x114fd:	call	0xac20


0x11502:	mov	rdx, qword ptr [rsp + 0x50]
0x11507:	test	eax, eax
0x11509:	mov	dword ptr [rdx], eax
0x1150b:	pop	r9
0x1150d:	pop	r10
0x1150f:	je	0x11420


0x11420:	movzx	eax, byte ptr [r15 + 8]
0x11425:	cmp	al, 2
0x11427:	je	0x115c1


0x11515:	jmp	0x11458


0x115c1:	mov	rax, qword ptr [rsp + 0x40]
0x115c6:	mov	dword ptr [rax], 7
0x115cc:	jmp	0x11458


0x1142d:	cmp	al, 0x15
0x1142f:	je	0x11842


0x11458:	mov	rdi, r12
0x1145b:	call	0x1880


0x11842:	add	qword ptr [r14 + 0x48], rbx
0x11846:	cmp	byte ptr [rsp + 0x57], 0
0x1184b:	je	0x11861


0x11435:	xor	r9d, r9d
0x11438:	jmp	0x110c2


0x11861:	mov	rax, qword ptr [rsp + 0x10]
0x11866:	mov	edx, dword ptr [rax + 0xb4]
0x1186c:	cmp	edx, 1
0x1186f:	jle	0x11889


0x1184d:	lea	rdx, [r12 + 0x20]
0x11852:	mov	rax, r12
0x11855:	not	qword ptr [rax]
0x11858:	add	rax, 8
0x1185c:	cmp	rdx, rax
0x1185f:	jne	0x11855


0x110c2:	mov	rax, qword ptr [rsp + 0x28]
0x110c7:	mov	r8, qword ptr [rsp + 0x20]
0x110cc:	and	r9d, 1
0x110d0:	mov	rdi, qword ptr [rsp]
0x110d4:	mov	ecx, ebx
0x110d6:	mov	rdx, r15
0x110d9:	mov	rsi, r14
0x110dc:	mov	dword ptr [rsp + 0xa0], 3
0x110e7:	mov	qword ptr [rsp + 0xa8], rax
0x110ef:	call	0xfdc0


0x11889:	cmp	qword ptr [r13 + 0x28], 0
0x1188e:	jne	0x11918


0x11871:	mov	rcx, qword ptr [rax + 0x78]
0x11875:	xor	eax, eax
0x11877:	mov	rsi, qword ptr [rcx + rax]
0x1187b:	and	qword ptr [r12 + rax], rsi
0x1187f:	add	rax, 8
0x11883:	cmp	rax, 0x20
0x11887:	jne	0x11877


0x11855:	not	qword ptr [rax]
0x11858:	add	rax, 8
0x1185c:	cmp	rdx, rax
0x1185f:	jne	0x11855


0x11894:	cmp	qword ptr [r13 + 0x30], 0
0x11899:	jne	0x11918


0x11918:	mov	rax, qword ptr [rsp + 0x10]
0x1191d:	lea	r15, [rsp + 0xb0]
0x11925:	xor	edx, edx
0x11927:	xor	ecx, ecx
0x11929:	mov	r8, r15
0x1192c:	or	byte ptr [rax + 0xb0], 2
0x11933:	lea	rbx, [rax + 0x70]
0x11937:	lea	rbp, [rax + 0x80]
0x1193e:	mov	byte ptr [rsp + 0xb8], 6
0x11946:	mov	qword ptr [rsp + 0xb0], r13
0x1194e:	mov	rdi, rbx
0x11951:	mov	rsi, rbp
0x11954:	call	0x80e0


0x11877:	mov	rsi, qword ptr [rcx + rax]
0x1187b:	and	qword ptr [r12 + rax], rsi
0x1187f:	add	rax, 8
0x11883:	cmp	rax, 0x20
0x11887:	jne	0x11877


0x1189b:	cmp	qword ptr [r13 + 0x38], 0
0x118a0:	jne	0x11918


0x118a2:	cmp	qword ptr [r13 + 0x40], 0
0x118a7:	jne	0x11918


0x118a9:	sub	edx, 1
0x118ac:	jle	0x118bc


0x118bc:	mov	rdi, r13
0x118bf:	call	0x6b40


0x118ae:	cmp	qword ptr [r13 + 0x48], 0
0x118b3:	jne	0x11918


0x118b5:	test	byte ptr [r13 + 0x20], 1
0x118ba:	jne	0x11918


0x118c4:	mov	rax, qword ptr [rsp + 0x10]
0x118c9:	lea	r8, [rsp + 0xb0]
0x118d1:	xor	ecx, ecx
0x118d3:	xor	edx, edx
0x118d5:	mov	byte ptr [rsp + 0xb8], 3
0x118dd:	mov	qword ptr [rsp + 0xb0], r12
0x118e5:	lea	rsi, [rax + 0x80]
0x118ec:	lea	rdi, [rax + 0x70]
0x118f0:	call	0x80e0


0x118f5:	test	rax, rax
0x118f8:	mov	qword ptr [rsp + 0x28], rax
0x118fd:	jne	0x1097c


0x11903:	mov	rax, qword ptr [rsp + 0x40]
0x11908:	mov	dword ptr [rax], 0xc
0x1190e:	jmp	0x11458


0x1097c:	mov	rbx, qword ptr [rsp + 0x18]
0x10981:	mov	rdx, qword ptr [rsp + 0x20]
0x10986:	mov	rsi, r14
0x10989:	lea	r15, [rsp + 0xc0]
0x10991:	mov	rdi, rbx
0x10994:	call	0x10020


0x10999:	cdqe	
0x1099b:	add	qword ptr [r14 + 0x48], rax
0x1099f:	movzx	eax, byte ptr [rbx + 8]
0x109a3:	nop	dword ptr [rax + rax]
0x109a8:	cmp	al, 0x17
0x109aa:	ja	0x108f0


0x109b0:	cmp	al, 0x12
0x109b2:	mov	ecx, 0x8c0800
0x109b7:	sete	bl
0x109ba:	bt	rcx, rax
0x109be:	jae	0x108f0


0x108f0:	mov	rdi, qword ptr [rsp + 0x118]
0x108f8:	xor	rdi, qword ptr fs:[0x28]
0x10901:	mov	rax, qword ptr [rsp + 0x28]
0x10906:	jne	0x11c7e


0x109c4:	mov	rcx, qword ptr [rsp + 0x18]
0x109c9:	cmp	al, 0x17
0x109cb:	mov	rbp, qword ptr [r14 + 0x48]
0x109cf:	movdqa	xmm0, xmmword ptr [rcx]
0x109d3:	je	0x10cf8


0x10cf8:	mov	rdx, qword ptr [rsp + 0x20]
0x10cfd:	mov	rsi, rcx
0x10d00:	mov	rdi, r14
0x10d03:	movaps	xmmword ptr [rsp], xmm0
0x10d07:	call	0x10720


0x109d9:	cmp	al, 0x13
0x109db:	movzx	ebx, bl
0x109de:	je	0x10c90


0x10c90:	mov	qword ptr [rsp], 1
0x10c98:	mov	rdx, qword ptr [rsp + 0x20]
0x10c9d:	mov	rdi, qword ptr [rsp + 0x18]
0x10ca2:	mov	rsi, r14
0x10ca5:	call	0x10020


0x109e4:	mov	rdx, qword ptr [rsp + 0x20]
0x109e9:	mov	rdi, qword ptr [rsp + 0x18]
0x109ee:	mov	rsi, r14
0x109f1:	call	0x10020


0x109f6:	cdqe	
0x109f8:	add	qword ptr [r14 + 0x48], rax
0x109fc:	cmp	qword ptr [rsp + 0x28], 0
0x10a02:	je	0x10d90


0x10d90:	mov	rax, qword ptr [rsp + 0x40]
0x10d95:	mov	ecx, dword ptr [rax]
0x10d97:	test	ecx, ecx
0x10d99:	je	0x10ce7


0x10a08:	mov	qword ptr [rsp], -1
0x10a10:	test	rbx, rbx
0x10a13:	mov	rbp, qword ptr [rsp + 0x28]
0x10a18:	mov	qword ptr [rsp + 0x30], 0
0x10a21:	jg	0x10ba0


0x10ce7:	mov	qword ptr [rsp + 0x28], 0
0x10cf0:	jmp	0x10b3e


0x10d9f:	jmp	0x108e0


0x10a27:	cmp	byte ptr [rbp + 0x30], 0x11
0x10a2b:	je	0x10d70


0x10ba0:	cmp	rbx, 1
0x10ba4:	je	0x113dc


0x10b3e:	test	qword ptr [rsp + 0x20], 0x1000000
0x10b47:	mov	rax, qword ptr [rsp + 0x18]
0x10b4c:	movzx	eax, byte ptr [rax + 8]
0x10b50:	je	0x109a8


0x10d70:	mov	rdx, qword ptr [rbp + 0x28]
0x10d74:	lea	rsi, [rip - 0xb33b]
0x10d7b:	mov	rdi, rbp
0x10d7e:	call	0x5d00


0x10a31:	cmp	qword ptr [rsp], -1
0x10a36:	mov	rdx, rbp
0x10a39:	mov	r8, r15
0x10a3c:	sete	al
0x10a3f:	xor	ecx, ecx
0x10a41:	add	eax, 0xa
0x10a44:	mov	byte ptr [rsp + 0xc8], al
0x10a4b:	mov	rax, qword ptr [rsp + 0x10]
0x10a50:	lea	r12, [rax + 0x70]
0x10a54:	lea	r13, [rax + 0x80]
0x10a5b:	mov	rdi, r12
0x10a5e:	mov	rsi, r13
0x10a61:	call	0x80e0


0x113dc:	mov	r13, qword ptr [rsp + 0x28]
0x113e1:	mov	qword ptr [rsp + 0x30], r13
0x113e6:	jmp	0x10c34


0x10baa:	mov	rax, qword ptr [rsp + 0x10]
0x10baf:	mov	r13, rbp
0x10bb2:	mov	qword ptr [rsp + 0x48], r14
0x10bb7:	lea	r12, [rax + 0x80]
0x10bbe:	lea	rdi, [rax + 0x70]
0x10bc2:	mov	rax, rbp
0x10bc5:	mov	r14, rax
0x10bc8:	mov	ebp, 2
0x10bcd:	mov	rsi, r12
0x10bd0:	mov	qword ptr [rsp + 0x30], rdi
0x10bd5:	mov	r12, r13
0x10bd8:	mov	r13, rbx
0x10bdb:	mov	rbx, rsi
0x10bde:	nop	
0x10be0:	mov	rsi, qword ptr [rsp + 0x10]
0x10be5:	mov	rdi, r12
0x10be8:	call	0x81c0


0x109a8:	cmp	al, 0x17
0x109aa:	ja	0x108f0


0x10b56:	cmp	al, 0xb
0x10b58:	je	0x10b62


0x10c34:	cmp	qword ptr [rsp], rbx
0x10c38:	je	0x10da4


0x10b62:	mov	rax, qword ptr [rsp + 0x28]
0x10b67:	test	rax, rax
0x10b6a:	je	0x10b7d


0x10b5a:	cmp	al, 0x17
0x10b5c:	jne	0x109a8


0x10da4:	mov	rdx, qword ptr [rsp + 0x30]
0x10da9:	nop	dword ptr [rax]
0x10db0:	mov	qword ptr [rsp + 0x28], rdx
0x10db5:	jmp	0x10b3e


0x10c3e:	mov	rsi, qword ptr [rsp + 0x10]
0x10c43:	mov	rdi, r13
0x10c46:	call	0x81c0


0x10b7d:	mov	rax, qword ptr [rsp + 0x40]
0x10b82:	mov	qword ptr [rsp + 0x28], 0
0x10b8b:	mov	dword ptr [rax], 0xd
0x10b91:	jmp	0x108f0


0x10b6c:	lea	rsi, [rip - 0x9fd3]
0x10b73:	xor	edx, edx
0x10b75:	mov	rdi, rax
0x10b78:	call	0x5d00


0x10c4b:	test	rax, rax
0x10c4e:	mov	rbp, rax
0x10c51:	jne	0x10a27


0x10bed:	mov	rdi, qword ptr [rsp + 0x30]
0x10bf2:	mov	r12, rax
0x10bf5:	mov	rdx, r14
0x10bf8:	mov	r8, r15
0x10bfb:	mov	rcx, rax
0x10bfe:	mov	rsi, rbx
0x10c01:	mov	byte ptr [rsp + 0xc8], 0x10
0x10c09:	call	0x80e0


0x10c7e:	mov	qword ptr [rsp + 0x28], 0
0x10c87:	jmp	0x108f0


0x10d83:	jmp	0x10a31


0x10caa:	cdqe	
0x10cac:	add	qword ptr [r14 + 0x48], rax
0x10cb0:	cmp	qword ptr [rsp + 0x28], 0
0x10cb6:	je	0x10d90


0x10cbc:	mov	rax, qword ptr [rsp]
0x10cc0:	or	rax, rbx
0x10cc3:	jne	0x10a10


0x10cc9:	mov	rdi, qword ptr [rsp + 0x28]
0x10cce:	lea	rsi, [rip - 0xa135]
0x10cd5:	xor	edx, edx
0x10cd7:	call	0x5d00


0x10a10:	test	rbx, rbx
0x10a13:	mov	rbp, qword ptr [rsp + 0x28]
0x10a18:	mov	qword ptr [rsp + 0x30], 0
0x10a21:	jg	0x10ba0


0x10cdc:	mov	rax, qword ptr [rsp + 0x40]
0x10ce1:	mov	esi, dword ptr [rax]
0x10ce3:	test	esi, esi
0x10ce5:	jne	0x10c6b


0x10c6b:	mov	rdi, qword ptr [rsp + 0x28]
0x10c70:	lea	rsi, [rip - 0xa0d7]
0x10c77:	xor	edx, edx
0x10c79:	call	0x5d00


0x10d0c:	cmp	rax, -1
0x10d10:	mov	rbx, rax
0x10d13:	movdqa	xmm0, xmmword ptr [rsp]
0x10d18:	je	0x10dc0


0x10dc0:	mov	rax, qword ptr [rsp + 0x18]
0x10dc5:	cmp	byte ptr [rax + 8], 1
0x10dc9:	jne	0x10e80


0x10d1e:	cmp	rax, -2
0x10d22:	je	0x10d3d


0x10dcf:	mov	rax, qword ptr [rsp + 0x18]
0x10dd4:	cmp	byte ptr [rax], 0x2c
0x10dd7:	jne	0x10e80


0x10e80:	mov	rax, qword ptr [rsp + 0x40]
0x10e85:	mov	dword ptr [rax], 0xa
0x10e8b:	cmp	qword ptr [rsp + 0x28], 0
0x10e91:	jne	0x10c6b


0x10d3d:	test	qword ptr [rsp + 0x20], 0x200000
0x10d46:	je	0x11c83


0x10d24:	mov	rax, qword ptr [rsp + 0x18]
0x10d29:	movzx	eax, byte ptr [rax + 8]
0x10d2d:	cmp	al, 0x18
0x10d2f:	je	0x10e50


0x10ddd:	xor	ebx, ebx
0x10ddf:	mov	rdx, qword ptr [rsp + 0x20]
0x10de4:	mov	rsi, qword ptr [rsp + 0x18]
0x10de9:	mov	rdi, r14
0x10dec:	movaps	xmmword ptr [rsp + 0x30], xmm0
0x10df1:	call	0x10720


0x10e97:	jmp	0x108e0


0x11c83:	mov	rax, qword ptr [rsp + 0x18]
0x11c88:	cmp	byte ptr [rax + 8], 2
0x11c8c:	jne	0x10e80


0x10d4c:	mov	rax, qword ptr [rsp + 0x18]
0x10d51:	mov	qword ptr [r14 + 0x48], rbp
0x10d55:	movaps	xmmword ptr [rax], xmm0
0x10d58:	mov	byte ptr [rax + 8], 1
0x10d5c:	mov	rax, qword ptr [rsp + 0x28]
0x10d61:	jmp	0x10b25


0x10e50:	mov	qword ptr [rsp], rbx
0x10e54:	xor	eax, eax
0x10e56:	cmp	qword ptr [rsp], 0x7fff
0x10e5e:	setg	al
0x10e61:	jmp	0x10e37


0x10d35:	cmp	al, 1
0x10d37:	je	0x10e63


0x11c92:	mov	rax, qword ptr [rsp + 0x40]
0x11c97:	mov	dword ptr [rax], 9
0x11c9d:	jmp	0x10e8b


0x10b25:	mov	rdi, qword ptr [rsp + 0x40]
0x10b2a:	mov	edx, dword ptr [rdi]
0x10b2c:	test	edx, edx
0x10b2e:	je	0x10b39


0x10e37:	test	rax, rax
0x10e3a:	je	0x10c98


0x10e63:	mov	rax, qword ptr [rsp + 0x18]
0x10e68:	cmp	byte ptr [rax], 0x2c
0x10e6b:	je	0x10ddf


0x10e8b:	cmp	qword ptr [rsp + 0x28], 0
0x10e91:	jne	0x10c6b


0x10b39:	mov	qword ptr [rsp + 0x28], rax
0x10b3e:	test	qword ptr [rsp + 0x20], 0x1000000
0x10b47:	mov	rax, qword ptr [rsp + 0x18]
0x10b4c:	movzx	eax, byte ptr [rax + 8]
0x10b50:	je	0x109a8


0x10b30:	test	rax, rax
0x10b33:	je	0x10e8b


0x10c98:	mov	rdx, qword ptr [rsp + 0x20]
0x10c9d:	mov	rdi, qword ptr [rsp + 0x18]
0x10ca2:	mov	rsi, r14
0x10ca5:	call	0x10020


0x10e40:	mov	rax, qword ptr [rsp + 0x40]
0x10e45:	mov	dword ptr [rax], 0xf
0x10e4b:	jmp	0x10e8b


0x10ddf:	mov	rdx, qword ptr [rsp + 0x20]
0x10de4:	mov	rsi, qword ptr [rsp + 0x18]
0x10de9:	mov	rdi, r14
0x10dec:	movaps	xmmword ptr [rsp + 0x30], xmm0
0x10df1:	call	0x10720


0x10e71:	test	qword ptr [rsp + 0x20], 0x200000
0x10e7a:	jne	0x10d4c


0x10df6:	cmp	rax, -2
0x10dfa:	mov	qword ptr [rsp], rax
0x10dfe:	movdqa	xmm0, xmmword ptr [rsp + 0x30]
0x10e04:	je	0x10d3d


0x10e0a:	mov	rax, qword ptr [rsp]
0x10e0e:	cmp	rax, -1
0x10e12:	je	0x10e19


0x10e19:	mov	rax, qword ptr [rsp + 0x18]
0x10e1e:	cmp	byte ptr [rax + 8], 0x18
0x10e22:	jne	0x10e80


0x10e14:	cmp	rax, rbx
0x10e17:	jl	0x10e80


0x10e24:	cmp	qword ptr [rsp], -1
0x10e29:	jne	0x10e54


0x10e2b:	xor	eax, eax
0x10e2d:	cmp	rbx, 0x7fff
0x10e34:	setg	al
0x10e37:	test	rax, rax
0x10e3a:	je	0x10c98


0x10e54:	xor	eax, eax
0x10e56:	cmp	qword ptr [rsp], 0x7fff
0x10e5e:	setg	al
0x10e61:	jmp	0x10e37


0x10c0e:	test	r12, r12
0x10c11:	mov	r14, rax
0x10c14:	je	0x10c60


0x10c60:	mov	rax, qword ptr [rsp + 0x40]
0x10c65:	mov	dword ptr [rax], 0xc
0x10c6b:	mov	rdi, qword ptr [rsp + 0x28]
0x10c70:	lea	rsi, [rip - 0xa0d7]
0x10c77:	xor	edx, edx
0x10c79:	call	0x5d00


0x10c16:	test	rax, rax
0x10c19:	je	0x10c60


0x10c1b:	add	rbp, 1
0x10c1f:	cmp	rbp, r13
0x10c22:	jle	0x10be0


0x10be0:	mov	rsi, qword ptr [rsp + 0x10]
0x10be5:	mov	rdi, r12
0x10be8:	call	0x81c0


0x10c24:	mov	r14, qword ptr [rsp + 0x48]
0x10c29:	mov	rbx, r13
0x10c2c:	mov	qword ptr [rsp + 0x30], rax
0x10c31:	mov	r13, r12
0x10c34:	cmp	qword ptr [rsp], rbx
0x10c38:	je	0x10da4


0x10a66:	test	rax, rax
0x10a69:	mov	rdx, rax
0x10a6c:	je	0x10c60


0x10a72:	add	rbx, 2
0x10a76:	cmp	rbx, qword ptr [rsp]
0x10a7a:	jg	0x10afb


0x10a7c:	mov	qword ptr [rsp + 0x48], r14
0x10a81:	mov	r14, rax
0x10a84:	mov	rsi, qword ptr [rsp + 0x10]
0x10a89:	mov	rdi, rbp
0x10a8c:	call	0x81c0


0x10afb:	mov	rax, qword ptr [rsp + 0x30]
0x10b00:	test	rax, rax
0x10b03:	je	0x10db0


0x10db0:	mov	qword ptr [rsp + 0x28], rdx
0x10db5:	jmp	0x10b3e


0x10b09:	mov	rcx, rdx
0x10b0c:	mov	r8, r15
0x10b0f:	mov	rdx, rax
0x10b12:	mov	rsi, r13
0x10b15:	mov	rdi, r12
0x10b18:	mov	byte ptr [rsp + 0xc8], 0x10
0x10b20:	call	0x80e0


0x10a91:	mov	r8, r15
0x10a94:	mov	rbp, rax
0x10a97:	mov	rcx, rax
0x10a9a:	mov	rdx, r14
0x10a9d:	mov	rsi, r13
0x10aa0:	mov	rdi, r12
0x10aa3:	mov	byte ptr [rsp + 0xc8], 0x10
0x10aab:	call	0x80e0


0x10ab0:	test	rbp, rbp
0x10ab3:	je	0x10c60


0x10ab9:	test	rax, rax
0x10abc:	je	0x10c60


0x10ac2:	xor	ecx, ecx
0x10ac4:	mov	r8, r15
0x10ac7:	mov	rdx, rax
0x10aca:	mov	rsi, r13
0x10acd:	mov	rdi, r12
0x10ad0:	mov	byte ptr [rsp + 0xc8], 0xa
0x10ad8:	call	0x80e0


0x10add:	test	rax, rax
0x10ae0:	mov	r14, rax
0x10ae3:	je	0x10c60


0x10ae9:	add	rbx, 1
0x10aed:	cmp	rbx, qword ptr [rsp]
0x10af1:	jle	0x10a84


0x10a84:	mov	rsi, qword ptr [rsp + 0x10]
0x10a89:	mov	rdi, rbp
0x10a8c:	call	0x81c0


0x10af3:	mov	r14, qword ptr [rsp + 0x48]
0x10af8:	mov	rdx, rax
0x10afb:	mov	rax, qword ptr [rsp + 0x30]
0x10b00:	test	rax, rax
0x10b03:	je	0x10db0


0x11959:	mov	rdi, rax
0x1195c:	mov	qword ptr [rsp + 0x28], rax
0x11961:	lea	rdx, [r12 + 0x20]
0x11966:	test	rdi, rdi
0x11969:	mov	rax, r12
0x1196c:	je	0x11903


0x1196e:	cmp	qword ptr [rax], 0
0x11972:	jne	0x11c1d


0x11978:	add	rax, 8
0x1197c:	cmp	rdx, rax
0x1197f:	jne	0x1196e


0x11c1d:	xor	ecx, ecx
0x11c1f:	xor	edx, edx
0x11c21:	mov	r8, r15
0x11c24:	mov	rsi, rbp
0x11c27:	mov	rdi, rbx
0x11c2a:	mov	byte ptr [rsp + 0xb8], 3
0x11c32:	mov	qword ptr [rsp + 0xb0], r12
0x11c3a:	call	0x80e0


0x11981:	mov	rdi, r12
0x11984:	call	0x1880


0x11c3f:	test	rax, rax
0x11c42:	je	0x11903


0x11c48:	mov	rcx, qword ptr [rsp + 0x28]
0x11c4d:	lea	r8, [rsp + 0xc0]
0x11c55:	mov	rdx, rax
0x11c58:	mov	rsi, rbp
0x11c5b:	mov	rdi, rbx
0x11c5e:	mov	byte ptr [rsp + 0xc8], 0xa
0x11c66:	call	0x80e0


0x11c6b:	test	rax, rax
0x11c6e:	mov	qword ptr [rsp + 0x28], rax
0x11c73:	jne	0x1097c


0x11c79:	jmp	0x11903


0x110f4:	test	eax, eax
0x110f6:	jne	0x115db


0x110fc:	mov	rdx, qword ptr [rsp + 0x20]
0x11101:	mov	rsi, r14
0x11104:	mov	rdi, r15
0x11107:	call	0x5910


0x115db:	mov	rdx, qword ptr [rsp + 0x40]
0x115e0:	mov	dword ptr [rdx], eax
0x115e2:	jmp	0x11458


0x1110c:	movsxd	rbx, eax
0x1110f:	mov	eax, dword ptr [rsp + 0xa0]
0x11116:	lea	edx, [rax - 2]
0x11119:	and	edx, 0xfffffffd
0x1111c:	je	0x11135


0x11135:	cmp	eax, 4
0x11138:	ja	0x11ada


0x1111e:	movzx	edx, byte ptr [r15 + 8]
0x11123:	cmp	dl, 2
0x11126:	je	0x115c1


0x1113e:	movsxd	rax, dword ptr [rbp + rax*4]
0x11143:	add	rax, rbp
0x11146:	jmp	rax


0x11ada:	lea	rcx, [rip + 0x3a2f]
0x11ae1:	lea	rsi, [rip + 0x3458]
0x11ae8:	lea	rdi, [rip + 0x34a0]
0x11aef:	mov	edx, 0xced
0x11af4:	call	0x1a00


0x1112c:	cmp	dl, 0x16
0x1112f:	je	0x115e7


0x115e7:	movsxd	rax, ebx
0x115ea:	mov	r11, qword ptr [rsp + 0x20]
0x115ef:	add	qword ptr [r14 + 0x48], rax
0x115f3:	mov	r10, qword ptr [rsp + 0x60]
0x115f8:	mov	rdx, r11
0x115fb:	mov	rdi, r10
0x115fe:	call	0x5910


0x11603:	movzx	edx, byte ptr [rsp + 0xc8]
0x1160b:	cmp	dl, 2
0x1160e:	je	0x115c1


0x11610:	cmp	dl, 0x15
0x11613:	je	0x11827


0x11827:	mov	eax, ebx
0x11829:	neg	eax
0x1182b:	cdqe	
0x1182d:	add	qword ptr [r14 + 0x48], rax
0x11831:	mov	byte ptr [r15 + 8], 1
0x11836:	mov	eax, dword ptr [rsp + 0xa0]
0x1183d:	jmp	0x11135


0x11619:	mov	rdx, qword ptr [rsp + 0x68]
0x1161e:	lea	rdi, [rsp + 0xb0]
0x11626:	mov	r9d, 1
0x1162c:	mov	r8, r11
0x1162f:	mov	ecx, eax
0x11631:	mov	dword ptr [rsp + 0xb0], 3
0x1163c:	mov	qword ptr [rsp + 0xb8], rdx
0x11644:	mov	rdx, r10
0x11647:	call	0xfdc0


0x1164c:	test	eax, eax
0x1164e:	jne	0x115db


0x11650:	mov	rdx, qword ptr [rsp + 0x20]
0x11655:	mov	rsi, r14
0x11658:	mov	rdi, r15
0x1165b:	call	0x5910


0x11660:	movsxd	rbx, eax
0x11663:	mov	rax, qword ptr [rsp + 0x10]
0x11668:	mov	esi, dword ptr [rsp + 0xa0]
0x1166f:	mov	r9d, 0
0x11675:	cmp	dword ptr [rax + 0xb4], 1
0x1167c:	lea	eax, [rsi - 2]
0x1167f:	cmovg	r9, r13
0x11683:	and	eax, 0xfffffffd
0x11686:	je	0x11af9


0x11af9:	mov	rax, qword ptr [rsp + 0x40]
0x11afe:	mov	dword ptr [rax], 0xb
0x11b04:	jmp	0x11458


0x1168c:	mov	r10d, dword ptr [rsp + 0xb0]
0x11694:	lea	eax, [r10 - 2]
0x11698:	and	eax, 0xfffffffd
0x1169b:	je	0x11af9


0x116a1:	cmp	esi, 3
0x116a4:	sete	r11b
0x116a8:	je	0x11b3d


0x11b3d:	mov	rdi, qword ptr [rsp + 0xa8]
0x11b45:	xor	eax, eax
0x11b47:	or	rcx, 0xffffffffffffffff
0x11b4b:	repne scasb	al, byte ptr [rdi]


0x116ae:	cmp	r10d, 3
0x116b2:	je	0x11b09


0x11b4b:	repne scasb	al, byte ptr [rdi]


0x11b4d:	mov	rax, rcx
0x11b50:	not	rax
0x11b53:	sub	rax, 1
0x11b57:	cmp	rax, 1
0x11b5b:	jbe	0x116ae


0x11b09:	mov	rdi, qword ptr [rsp + 0xb8]
0x11b11:	xor	eax, eax
0x11b13:	or	rcx, 0xffffffffffffffff
0x11b17:	repne scasb	al, byte ptr [rdi]


0x116b8:	test	esi, esi
0x116ba:	jne	0x11a29


0x11b61:	jmp	0x11b2d


0x11b17:	repne scasb	al, byte ptr [rdi]


0x11b19:	mov	rax, rcx
0x11b1c:	not	rax
0x11b1f:	sub	rax, 1
0x11b23:	cmp	rax, 1
0x11b27:	jbe	0x116b8


0x116c0:	movzx	edx, byte ptr [rsp + 0xa8]
0x116c8:	test	r10d, r10d
0x116cb:	jne	0x11a0d


0x11a29:	xor	edx, edx
0x11a2b:	cmp	esi, 3
0x11a2e:	jne	0x116c8


0x11b2d:	mov	rax, qword ptr [rsp + 0x40]
0x11b32:	mov	dword ptr [rax], 3
0x11b38:	jmp	0x11458


0x116d1:	movzx	r8d, byte ptr [rsp + 0xb8]
0x116da:	test	esi, esi
0x116dc:	je	0x119c6


0x11a0d:	cmp	r10d, 3
0x11a11:	je	0x11ca2


0x11a34:	mov	rax, qword ptr [rsp + 0xa8]
0x11a3c:	movzx	edx, byte ptr [rax]
0x11a3f:	jmp	0x116c8


0x116c8:	test	r10d, r10d
0x116cb:	jne	0x11a0d


0x119c6:	test	r9, r9
0x119c9:	je	0x11a44


0x116e2:	test	r11b, r11b
0x116e5:	jne	0x119c6


0x11ca2:	mov	rax, qword ptr [rsp + 0xb8]
0x11caa:	movzx	r8d, byte ptr [rax]
0x11cae:	jmp	0x116da


0x11a17:	test	esi, esi
0x11a19:	je	0x119c3


0x11a44:	test	r10d, r10d
0x11a47:	je	0x11727


0x119cb:	mov	edi, edx
0x119cd:	mov	dword ptr [rsp + 0x78], r8d
0x119d2:	mov	qword ptr [rsp + 0x70], r9
0x119d7:	call	0x1b70


0x116eb:	test	r9, r9
0x116ee:	mov	edx, dword ptr [rsp + 0xa8]
0x116f5:	je	0x11714


0x116da:	test	esi, esi
0x116dc:	je	0x119c6


0x119c3:	xor	r8d, r8d
0x119c6:	test	r9, r9
0x119c9:	je	0x11a44


0x11a1b:	test	r11b, r11b
0x11a1e:	jne	0x119c3


0x11727:	test	qword ptr [rsp + 0x20], 0x10000
0x11730:	je	0x1173b


0x11a4d:	cmp	r10d, 3
0x11a51:	jne	0x11a00


0x11714:	cmp	edx, -1
0x11717:	je	0x11b2d


0x116f7:	mov	edi, r8d
0x116fa:	mov	dword ptr [rsp + 0x78], edx
0x116fe:	mov	qword ptr [rsp + 0x70], r9
0x11703:	call	0x1b70


0x11a20:	mov	edx, dword ptr [rsp + 0xa8]
0x11a27:	jmp	0x11a00


0x1173b:	test	r9, r9
0x1173e:	je	0x11766


0x11732:	cmp	r8d, edx
0x11735:	jb	0x11af9


0x11a53:	jmp	0x11727


0x11a00:	mov	r8d, dword ptr [rsp + 0xb8]
0x11a08:	jmp	0x11714


0x1171d:	cmp	r8d, -1
0x11721:	je	0x11b2d


0x11766:	xor	eax, eax
0x11768:	mov	edi, 1
0x1176d:	cmp	edx, eax
0x1176f:	mov	ecx, eax
0x11771:	ja	0x11789


0x11740:	mov	rax, qword ptr [r9 + 0x40]
0x11744:	cmp	rax, qword ptr [rsp + 0x48]
0x11749:	mov	rcx, qword ptr [r9 + 8]
0x1174d:	je	0x11b63


0x11773:	cmp	r8d, eax
0x11776:	jb	0x11789


0x11789:	add	rax, 1
0x1178d:	cmp	rax, 0x100
0x11793:	jne	0x1176d


0x11b63:	mov	rax, qword ptr [rsp + 0x48]
0x11b68:	mov	rdi, rcx
0x11b6b:	mov	dword ptr [rsp + 0x8c], r8d
0x11b73:	mov	dword ptr [rsp + 0x88], edx
0x11b7a:	mov	qword ptr [rsp + 0x70], r9
0x11b7f:	add	rax, rax
0x11b82:	add	rax, 1
0x11b86:	lea	r10, [rax*4]
0x11b8e:	mov	qword ptr [rsp + 0x48], rax
0x11b93:	mov	rsi, r10
0x11b96:	mov	qword ptr [rsp + 0x80], r10
0x11b9e:	call	0x1b30


0x11753:	mov	dword ptr [rcx + rax*4], edx
0x11756:	mov	rcx, qword ptr [r9 + 0x10]
0x1175a:	lea	rsi, [rax + 1]
0x1175e:	mov	qword ptr [r9 + 0x40], rsi
0x11762:	mov	dword ptr [rcx + rax*4], r8d
0x11766:	xor	eax, eax
0x11768:	mov	edi, 1
0x1176d:	cmp	edx, eax
0x1176f:	mov	ecx, eax
0x11771:	ja	0x11789


0x11778:	mov	rsi, rax
0x1177b:	mov	r11, rdi
0x1177e:	sar	rsi, 6
0x11782:	shl	r11, cl
0x11785:	or	qword ptr [r12 + rsi*8], r11
0x11789:	add	rax, 1
0x1178d:	cmp	rax, 0x100
0x11793:	jne	0x1176d


0x11795:	mov	rax, qword ptr [rsp + 0x40]
0x1179a:	mov	dword ptr [rax], 0
0x117a0:	jmp	0x11420


0x1176d:	cmp	edx, eax
0x1176f:	mov	ecx, eax
0x11771:	ja	0x11789


0x11ba3:	mov	r9, qword ptr [rsp + 0x70]
0x11ba8:	mov	r10, qword ptr [rsp + 0x80]
0x11bb0:	mov	qword ptr [rsp + 0x78], rax
0x11bb5:	mov	rdi, qword ptr [r9 + 0x10]
0x11bb9:	mov	rsi, r10
0x11bbc:	call	0x1b30


0x11bc1:	mov	rcx, qword ptr [rsp + 0x78]
0x11bc6:	test	rcx, rcx
0x11bc9:	je	0x11bf5


0x11bf5:	mov	rdi, rcx
0x11bf8:	mov	qword ptr [rsp], rax
0x11bfc:	call	0x1880


0x11bcb:	test	rax, rax
0x11bce:	mov	r9, qword ptr [rsp + 0x70]
0x11bd3:	mov	edx, dword ptr [rsp + 0x88]
0x11bda:	mov	r8d, dword ptr [rsp + 0x8c]
0x11be2:	je	0x11bf5


0x11be4:	mov	qword ptr [r9 + 0x10], rax
0x11be8:	mov	qword ptr [r9 + 8], rcx
0x11bec:	mov	rax, qword ptr [r9 + 0x40]
0x11bf0:	jmp	0x11753


0x11708:	mov	r9, qword ptr [rsp + 0x70]
0x1170d:	mov	edx, dword ptr [rsp + 0x78]
0x11711:	mov	r8d, eax
0x11714:	cmp	edx, -1
0x11717:	je	0x11b2d


0x119dc:	mov	edx, eax
0x119de:	mov	eax, dword ptr [rsp + 0xb0]
0x119e5:	mov	r9, qword ptr [rsp + 0x70]
0x119ea:	mov	r8d, dword ptr [rsp + 0x78]
0x119ef:	cmp	eax, 3
0x119f2:	je	0x116f7


0x119f8:	test	eax, eax
0x119fa:	je	0x116f7


0x11c01:	mov	rax, qword ptr [rsp]
0x11c05:	mov	rdi, rax
0x11c08:	call	0x1880


0x11c0d:	mov	rax, qword ptr [rsp + 0x40]
0x11c12:	mov	dword ptr [rax], 0xc
0x11c18:	jmp	0x11458


0x11989:	jmp	0x1097c


0x11460:	mov	rdi, r13
0x11463:	call	0x6b40


0x11468:	mov	rax, qword ptr [rsp + 0x40]
0x1146d:	mov	r8d, dword ptr [rax]
0x11470:	test	r8d, r8d
0x11473:	jne	0x108e0


0x11479:	mov	qword ptr [rsp + 0x28], 0
0x11482:	jmp	0x1097c


0x1850:	push	qword ptr [rip + 0x21755a]
0x1856:	jmp	qword ptr [rip + 0x21755c]


0x185c:	nop	dword ptr [rax]


0x1866:	push	0
0x186b:	jmp	0x1850


0x1876:	push	1
0x187b:	jmp	0x1850


0x1886:	push	2
0x188b:	jmp	0x1850


0x1896:	push	3
0x189b:	jmp	0x1850


0x18a6:	push	4
0x18ab:	jmp	0x1850


0x18b6:	push	5
0x18bb:	jmp	0x1850


0x18c6:	push	6
0x18cb:	jmp	0x1850


0x18d6:	push	7
0x18db:	jmp	0x1850


0x18e6:	push	8
0x18eb:	jmp	0x1850


0x18f6:	push	9
0x18fb:	jmp	0x1850


0x1906:	push	0xa
0x190b:	jmp	0x1850


0x1916:	push	0xb
0x191b:	jmp	0x1850


0x1926:	push	0xc
0x192b:	jmp	0x1850


0x1936:	push	0xd
0x193b:	jmp	0x1850


0x1946:	push	0xe
0x194b:	jmp	0x1850


0x1956:	push	0xf
0x195b:	jmp	0x1850


0x1966:	push	0x10
0x196b:	jmp	0x1850


0x1976:	push	0x11
0x197b:	jmp	0x1850


0x1986:	push	0x12
0x198b:	jmp	0x1850


0x1996:	push	0x13
0x199b:	jmp	0x1850


0x19a6:	push	0x14
0x19ab:	jmp	0x1850


0x19b6:	push	0x15
0x19bb:	jmp	0x1850


0x19c6:	push	0x16
0x19cb:	jmp	0x1850


0x19d6:	push	0x17
0x19db:	jmp	0x1850


0x19e6:	push	0x18
0x19eb:	jmp	0x1850


0x19f6:	push	0x19
0x19fb:	jmp	0x1850


0x1a06:	push	0x1a
0x1a0b:	jmp	0x1850


0x1a16:	push	0x1b
0x1a1b:	jmp	0x1850


0x1a26:	push	0x1c
0x1a2b:	jmp	0x1850


0x1a36:	push	0x1d
0x1a3b:	jmp	0x1850


0x1a46:	push	0x1e
0x1a4b:	jmp	0x1850


0x1a56:	push	0x1f
0x1a5b:	jmp	0x1850


0x1a66:	push	0x20
0x1a6b:	jmp	0x1850


0x1a76:	push	0x21
0x1a7b:	jmp	0x1850


0x1a86:	push	0x22
0x1a8b:	jmp	0x1850


0x1a96:	push	0x23
0x1a9b:	jmp	0x1850


0x1aa6:	push	0x24
0x1aab:	jmp	0x1850


0x1ab6:	push	0x25
0x1abb:	jmp	0x1850


0x1ac6:	push	0x26
0x1acb:	jmp	0x1850


0x1ad6:	push	0x27
0x1adb:	jmp	0x1850


0x1ae6:	push	0x28
0x1aeb:	jmp	0x1850


0x1af6:	push	0x29
0x1afb:	jmp	0x1850


0x1b06:	push	0x2a
0x1b0b:	jmp	0x1850


0x1b16:	push	0x2b
0x1b1b:	jmp	0x1850


0x1b26:	push	0x2c
0x1b2b:	jmp	0x1850


0x1b36:	push	0x2d
0x1b3b:	jmp	0x1850


0x1b46:	push	0x2e
0x1b4b:	jmp	0x1850


0x1b56:	push	0x2f
0x1b5b:	jmp	0x1850


0x1b66:	push	0x30
0x1b6b:	jmp	0x1850


0x1b76:	push	0x31
0x1b7b:	jmp	0x1850


0x1b86:	push	0x32
0x1b8b:	jmp	0x1850


0x1b96:	push	0x33
0x1b9b:	jmp	0x1850


0x1ba6:	push	0x34
0x1bab:	jmp	0x1850


0x1bb6:	push	0x35
0x1bbb:	jmp	0x1850


0x1bc6:	push	0x36
0x1bcb:	jmp	0x1850


0x1bd6:	push	0x37
0x1bdb:	jmp	0x1850


0x1be6:	push	0x38
0x1beb:	jmp	0x1850


0x1bf6:	push	0x39
0x1bfb:	jmp	0x1850


0x1c06:	push	0x3a
0x1c0b:	jmp	0x1850


0x1c16:	push	0x3b
0x1c1b:	jmp	0x1850


0x1c26:	push	0x3c
0x1c2b:	jmp	0x1850


0x1c36:	push	0x3d
0x1c3b:	jmp	0x1850


0x1c46:	push	0x3e
0x1c4b:	jmp	0x1850


0x1c50:	jmp	qword ptr [rip + 0x217362]




0x1c56:	push	0x3f
0x1c5b:	jmp	0x1850


0x1c66:	push	0x40
0x1c6b:	jmp	0x1850


0x1c76:	push	0x41
0x1c7b:	jmp	0x1850


0x244a:	hlt	


0x244b:	nop	dword ptr [rax + rax]


0x2482:	nop	dword ptr [rax]
0x2486:	nop	word ptr cs:[rax + rax]


0x24d2:	nop	dword ptr [rax]
0x24d6:	nop	word ptr cs:[rax + rax]


0x251a:	nop	word ptr [rax + rax]


0x252a:	nop	word ptr [rax + rax]


0x262e:	nop	


0x2f82:	nop	word ptr cs:[rax + rax]
0x2f8c:	nop	dword ptr [rax]


0x2f98:	nop	dword ptr [rax + rax]


0x2fa8:	nop	dword ptr [rax + rax]


0x3054:	nop	word ptr cs:[rax + rax]
0x305e:	nop	


0x315f:	nop	


0x31ff:	nop	


0x32e7:	nop	word ptr [rax + rax]


0x3383:	mov	byte ptr [rsp + 0xe], 1
0x3388:	mov	byte ptr [rsp + 0x7c], 0
0x338d:	xor	r12d, r12d
0x3390:	mov	qword ptr [rsp + 0x50], 0
0x3399:	mov	byte ptr [rsp + 0xf], 1
0x339e:	mov	byte ptr [rsp + 0xd], 0
0x33a3:	lea	rax, [rip + 0x11333]
0x33aa:	mov	qword ptr [rsp + 0x18], 1
0x33b3:	xor	r15d, r15d
0x33b6:	mov	dword ptr [rsp + 8], 2
0x33be:	mov	qword ptr [rsp + 0x48], rax
0x33c3:	xor	r11d, r11d
0x33c6:	mov	rax, rbp
0x33c9:	mov	r8d, r12d
0x33cc:	mov	rbp, r11
0x33cf:	mov	r11, rax
0x33d2:	nop	word ptr [rax + rax]
0x33d8:	cmp	r11, rbp
0x33db:	setne	r12b
0x33df:	cmp	r11, -1
0x33e3:	jne	0x33f2


0x33e5:	mov	rax, qword ptr [rsp + 0x10]
0x33ea:	cmp	byte ptr [rax + rbp], 0
0x33ee:	setne	r12b
0x33f2:	test	r12b, r12b
0x33f5:	je	0x3a50


0x33f2:	test	r12b, r12b
0x33f5:	je	0x3a50


0x3a50:	cmp	dword ptr [rsp + 8], 2
0x3a55:	movzx	ebx, byte ptr [rsp + 0xf]
0x3a5a:	mov	r12d, r8d
0x3a5d:	mov	rbp, r11
0x3a60:	sete	dl
0x3a63:	mov	eax, ebx
0x3a65:	test	r15, r15
0x3a68:	sete	cl
0x3a6b:	and	eax, edx
0x3a6d:	and	al, cl
0x3a6f:	jne	0x44d6


0x33fb:	cmp	dword ptr [rsp + 8], 2
0x3400:	mov	rdi, qword ptr [rsp + 0x10]
0x3405:	lea	r9, [rdi + rbp]
0x3409:	setne	al
0x340c:	and	al, byte ptr [rsp + 0xd]
0x3410:	mov	r10d, eax
0x3413:	je	0x34c0


0x3a75:	mov	eax, ebx
0x3a77:	xor	eax, 1
0x3a7a:	and	dl, al
0x3a7c:	je	0x43ec


0x44d6:	mov	dword ptr [rsp + 8], 2
0x44de:	jmp	0x3e79


0x34c0:	movzx	ebx, byte ptr [r9]
0x34c4:	cmp	bl, 0x7e
0x34c7:	ja	0x37e8


0x3419:	mov	rax, qword ptr [rsp + 0x18]
0x341e:	test	rax, rax
0x3421:	je	0x3850


0x43ec:	mov	rbx, qword ptr [rsp + 0x48]
0x43f1:	test	rbx, rbx
0x43f4:	je	0x4422


0x3a82:	cmp	byte ptr [rsp + 0x7c], 0
0x3a87:	je	0x43ea


0x3e79:	cmp	byte ptr [rsp + 0xd], 0
0x3e7e:	je	0x3e90


0x34cd:	lea	rcx, [rip + 0x11298]
0x34d4:	movzx	edx, bl
0x34d7:	movsxd	rax, dword ptr [rcx + rdx*4]
0x34db:	add	rax, rcx
0x34de:	jmp	rax


0x37e8:	cmp	qword ptr [rsp + 0x58], 1
0x37ee:	jne	0x3b98


0x3850:	movzx	ebx, byte ptr [r9]
0x3854:	cmp	bl, 0x7e
0x3857:	ja	0x37e0


0x3427:	cmp	r11, -1
0x342b:	lea	rbx, [rbp + rax]
0x3430:	jne	0x3460


0x4422:	cmp	r13, r15
0x4425:	jbe	0x3ec9


0x43f6:	test	al, al
0x43f8:	je	0x4422


0x43ea:	mov	eax, edx
0x43ec:	mov	rbx, qword ptr [rsp + 0x48]
0x43f1:	test	rbx, rbx
0x43f4:	je	0x4422


0x3a8d:	cmp	byte ptr [rsp + 0xe], 0
0x3a92:	jne	0x448d


0x3e80:	test	al, al
0x3e82:	mov	eax, 4
0x3e87:	cmove	eax, dword ptr [rsp + 8]
0x3e8c:	mov	dword ptr [rsp + 8], eax


0x37f4:	mov	qword ptr [rsp + 0x38], r11
0x37f9:	mov	byte ptr [rsp + 0x30], r8b
0x37fe:	mov	byte ptr [rsp + 0x28], r10b
0x3803:	call	0x1c70


0x3b98:	lea	rax, [rsp + 0xa0]
0x3ba0:	cmp	r11, -1
0x3ba4:	mov	qword ptr [rsp + 0xa0], 0
0x3bb0:	mov	qword ptr [rsp + 0x28], rax
0x3bb5:	jne	0x3be4


0x3859:	lea	rcx, [rip + 0x11108]
0x3860:	movzx	edx, bl
0x3863:	movsxd	rax, dword ptr [rcx + rdx*4]
0x3867:	add	rax, rcx
0x386a:	jmp	rax


0x37e0:	xor	r10d, r10d
0x37e3:	nop	dword ptr [rax + rax]
0x37e8:	cmp	qword ptr [rsp + 0x58], 1
0x37ee:	jne	0x3b98


0x3432:	cmp	rax, 1
0x3436:	jbe	0x3460


0x3460:	cmp	rbx, r11
0x3463:	mov	byte ptr [rsp + 0x28], r10b
0x3468:	ja	0x3a20


0x442b:	mov	byte ptr [r14 + r15], 0
0x4430:	jmp	0x3ec9


0x43fa:	movzx	ecx, byte ptr [rbx]
0x43fd:	mov	rax, rbx
0x4400:	test	cl, cl
0x4402:	je	0x4422


0x3a98:	test	r13, r13
0x3a9b:	sete	al
0x3a9e:	cmp	qword ptr [rsp + 0x50], 0
0x3aa4:	setne	dl
0x3aa7:	and	al, dl
0x3aa9:	je	0x44cc


0x3bb7:	mov	rdi, qword ptr [rsp + 0x10]
0x3bbc:	mov	byte ptr [rsp + 0x40], r8b
0x3bc1:	mov	byte ptr [rsp + 0x38], r10b
0x3bc6:	mov	qword ptr [rsp + 0x30], r9
0x3bcb:	call	0x1980


0x3be4:	lea	rax, [rsp + 0x9c]
0x3bec:	xor	ecx, ecx
0x3bee:	mov	byte ptr [rsp + 0x7e], bl
0x3bf2:	mov	byte ptr [rsp + 0x7d], r8b
0x3bf7:	mov	rbx, rcx
0x3bfa:	mov	qword ptr [rsp + 0x88], r9
0x3c02:	mov	qword ptr [rsp + 0x38], rax
0x3c07:	mov	byte ptr [rsp + 0x7f], r10b
0x3c0c:	mov	qword ptr [rsp + 0x80], r15
0x3c14:	mov	qword ptr [rsp + 0x40], r14
0x3c19:	mov	qword ptr [rsp + 0x70], r13
0x3c1e:	mov	qword ptr [rsp + 0x30], r11
0x3c23:	mov	rax, qword ptr [rsp + 0x10]
0x3c28:	lea	r14, [rbp + rbx]
0x3c2d:	mov	rdx, qword ptr [rsp + 0x30]
0x3c32:	mov	rcx, qword ptr [rsp + 0x28]
0x3c37:	mov	rdi, qword ptr [rsp + 0x38]
0x3c3c:	lea	r13, [rax + r14]
0x3c40:	sub	rdx, r14
0x3c43:	mov	rsi, r13
0x3c46:	call	0x5880


0x3438:	mov	byte ptr [rsp + 0x38], r8b
0x343d:	mov	byte ptr [rsp + 0x30], r10b
0x3442:	mov	qword ptr [rsp + 0x28], r9
0x3447:	call	0x1980


0x346e:	mov	rdx, qword ptr [rsp + 0x18]
0x3473:	mov	rsi, qword ptr [rsp + 0x48]
0x3478:	mov	rdi, r9
0x347b:	mov	qword ptr [rsp + 0x40], r11
0x3480:	mov	byte ptr [rsp + 0x38], r8b
0x3485:	mov	qword ptr [rsp + 0x30], r9
0x348a:	call	0x1a40


0x3a20:	xor	r10d, r10d
0x3a23:	jmp	0x34c0


0x4404:	mov	rdx, r15
0x4407:	sub	rax, r15
0x440a:	cmp	r13, rdx
0x440d:	jbe	0x4413


0x44cc:	movzx	eax, byte ptr [rsp + 0x7c]
0x44d1:	jmp	0x43ec


0x3aaf:	mov	r13, qword ptr [rsp + 0x50]
0x3ab4:	lea	rbx, [rip + 0x10c22]
0x3abb:	mov	byte ptr [r14], 0x27
0x3abf:	mov	dword ptr [rsp + 8], 2
0x3ac7:	mov	r15d, 1
0x3acd:	mov	qword ptr [rsp + 0x18], 1
0x3ad6:	mov	byte ptr [rsp + 0xf], 0
0x3adb:	mov	qword ptr [rsp + 0x48], rbx
0x3ae0:	mov	byte ptr [rsp + 0x7c], al
0x3ae4:	jmp	0x33c3


0x4413:	add	rdx, 1
0x4417:	movzx	ecx, byte ptr [rax + rdx]
0x441b:	test	cl, cl
0x441d:	jne	0x440a


0x440f:	mov	byte ptr [r14 + rdx], cl
0x4413:	add	rdx, 1
0x4417:	movzx	ecx, byte ptr [rax + rdx]
0x441b:	test	cl, cl
0x441d:	jne	0x440a


0x33c3:	xor	r11d, r11d
0x33c6:	mov	rax, rbp
0x33c9:	mov	r8d, r12d
0x33cc:	mov	rbp, r11
0x33cf:	mov	r11, rax
0x33d2:	nop	word ptr [rax + rax]
0x33d8:	cmp	r11, rbp
0x33db:	setne	r12b
0x33df:	cmp	r11, -1
0x33e3:	jne	0x33f2


0x441f:	mov	r15, rdx
0x4422:	cmp	r13, r15
0x4425:	jbe	0x3ec9


0x440a:	cmp	r13, rdx
0x440d:	jbe	0x4413


0x348f:	test	eax, eax
0x3491:	mov	r9, qword ptr [rsp + 0x30]
0x3496:	movzx	r8d, byte ptr [rsp + 0x38]
0x349c:	mov	r11, qword ptr [rsp + 0x40]
0x34a1:	jne	0x3a20


0x34a7:	cmp	byte ptr [rsp + 0xf], 0
0x34ac:	movzx	r10d, byte ptr [rsp + 0x28]
0x34b2:	jne	0x4435


0x4435:	cmp	dword ptr [rsp + 8], 2
0x443a:	movzx	ebx, byte ptr [rsp + 0xf]
0x443f:	mov	rbp, r11
0x4442:	sete	al
0x4445:	mov	byte ptr [rsp + 0xd], bl
0x4449:	jmp	0x3e79


0x3c4b:	test	rax, rax
0x3c4e:	mov	r15, rax
0x3c51:	je	0x3ca1


0x3ca1:	mov	edx, r12d
0x3ca4:	mov	rdi, rbx
0x3ca7:	movzx	r8d, byte ptr [rsp + 0x7d]
0x3cad:	xor	edx, 1
0x3cb0:	movzx	ebx, byte ptr [rsp + 0x7e]
0x3cb5:	movzx	r10d, byte ptr [rsp + 0x7f]
0x3cbb:	and	dl, byte ptr [rsp + 0xd]
0x3cbf:	mov	r15, qword ptr [rsp + 0x80]
0x3cc7:	mov	r14, qword ptr [rsp + 0x40]
0x3ccc:	mov	r13, qword ptr [rsp + 0x70]
0x3cd1:	mov	r11, qword ptr [rsp + 0x30]
0x3cd6:	cmp	rdi, 1
0x3cda:	jbe	0x42db


0x3c53:	cmp	rax, -1
0x3c57:	je	0x4275


0x42db:	mov	eax, edx
0x42dd:	jmp	0x3837


0x3ce0:	mov	rcx, rdi
0x3ce3:	xor	esi, esi
0x3ce5:	movzx	r9d, byte ptr [rsp + 0xf]
0x3ceb:	add	rcx, rbp
0x3cee:	mov	rdi, qword ptr [rsp + 0x10]
0x3cf3:	jmp	0x3dae


0x4275:	mov	rdi, rbx
0x4278:	movzx	r8d, byte ptr [rsp + 0x7d]
0x427e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x4283:	movzx	r10d, byte ptr [rsp + 0x7f]
0x4289:	mov	r15, qword ptr [rsp + 0x80]
0x4291:	xor	r12d, r12d
0x4294:	mov	r14, qword ptr [rsp + 0x40]
0x4299:	mov	r13, qword ptr [rsp + 0x70]
0x429e:	mov	r11, qword ptr [rsp + 0x30]
0x42a3:	movzx	edx, byte ptr [rsp + 0xd]
0x42a8:	jmp	0x3cd6


0x3c5d:	cmp	rax, -2
0x3c61:	je	0x4201


0x3837:	test	al, al
0x3839:	jne	0x41d1


0x3dae:	test	dl, dl
0x3db0:	jne	0x3d00


0x3cd6:	cmp	rdi, 1
0x3cda:	jbe	0x42db


0x4201:	mov	r11, qword ptr [rsp + 0x30]
0x4206:	mov	rsi, r14
0x4209:	mov	rcx, r13
0x420c:	mov	rax, rbx
0x420f:	mov	rdi, rbx
0x4212:	movzx	r8d, byte ptr [rsp + 0x7d]
0x4218:	movzx	ebx, byte ptr [rsp + 0x7e]
0x421d:	mov	r9, qword ptr [rsp + 0x88]
0x4225:	cmp	rsi, r11
0x4228:	movzx	r10d, byte ptr [rsp + 0x7f]
0x422e:	mov	r15, qword ptr [rsp + 0x80]
0x4236:	mov	r14, qword ptr [rsp + 0x40]
0x423b:	mov	r13, qword ptr [rsp + 0x70]
0x4240:	jae	0x4268


0x3c67:	cmp	dword ptr [rsp + 8], 2
0x3c6c:	sete	al
0x3c6f:	and	al, byte ptr [rsp + 0xf]
0x3c73:	jne	0x3e10


0x383f:	cmp	dword ptr [rsp + 8], 2
0x3844:	sete	dl
0x3847:	jmp	0x3518


0x41d1:	movzx	edx, byte ptr [rsp + 0xd]
0x41d6:	xor	r12d, r12d
0x41d9:	jmp	0x3ce0


0x3db6:	mov	eax, esi
0x3db8:	xor	eax, 1
0x3dbb:	and	eax, r8d
0x3dbe:	test	r10b, r10b
0x3dc1:	je	0x3dd1


0x3d00:	cmp	dword ptr [rsp + 8], 2
0x3d05:	sete	al
0x3d08:	test	r9b, r9b
0x3d0b:	jne	0x41c0


0x4242:	cmp	byte ptr [rcx], 0
0x4245:	jne	0x4257


0x4268:	movzx	edx, byte ptr [rsp + 0xd]
0x426d:	xor	r12d, r12d
0x4270:	jmp	0x3cd6


0x3c79:	mov	edi, dword ptr [rsp + 0x9c]
0x3c80:	call	0x1c50


0x3e10:	cmp	r15, 1
0x3e14:	je	0x3c79


0x3518:	cmp	byte ptr [rsp + 0xd], 1
0x351d:	jne	0x3632


0x3dd1:	add	rbp, 1
0x3dd5:	cmp	rbp, rcx
0x3dd8:	jae	0x355c


0x3dc3:	cmp	r13, r15
0x3dc6:	jbe	0x3dcd


0x3d11:	mov	esi, r8d
0x3d14:	xor	esi, 1
0x3d17:	and	al, sil
0x3d1a:	je	0x3d4b


0x41c0:	movzx	ebx, byte ptr [rsp + 0xf]
0x41c5:	mov	rbp, r11
0x41c8:	mov	byte ptr [rsp + 0xd], bl
0x41cc:	jmp	0x3e79


0x4247:	jmp	0x4268


0x4257:	add	rax, 1
0x425b:	lea	rdx, [rbp + rax]
0x4260:	cmp	r11, rdx
0x4263:	ja	0x4250


0x3e1a:	mov	rdi, qword ptr [rsp + 0x10]
0x3e1f:	lea	rcx, [rdi + r15]
0x3e23:	lea	rdx, [rdi + r14 + 1]
0x3e28:	lea	r8, [rcx + r14]
0x3e2c:	jmp	0x3e3d


0x3523:	test	dl, dl
0x3525:	jne	0x3632


0x3632:	cmp	byte ptr [rsp + 0xf], 0
0x3637:	jne	0x352b


0x3dde:	test	al, al
0x3de0:	je	0x41de


0x355c:	test	al, al
0x355e:	je	0x3580


0x3dcd:	add	r15, 1
0x3dd1:	add	rbp, 1
0x3dd5:	cmp	rbp, rcx
0x3dd8:	jae	0x355c


0x3dc8:	mov	byte ptr [r14 + r15], 0x5c
0x3dcd:	add	r15, 1
0x3dd1:	add	rbp, 1
0x3dd5:	cmp	rbp, rcx
0x3dd8:	jae	0x355c


0x3d4b:	cmp	r13, r15
0x3d4e:	jbe	0x3d55


0x3d1c:	cmp	r13, r15
0x3d1f:	jbe	0x3d26


0x4265:	mov	rdi, rax
0x4268:	movzx	edx, byte ptr [rsp + 0xd]
0x426d:	xor	r12d, r12d
0x4270:	jmp	0x3cd6


0x4250:	cmp	byte ptr [r9 + rax], 0
0x4255:	je	0x4265


0x3e3d:	movzx	ecx, byte ptr [rdx]
0x3e40:	sub	ecx, 0x5b
0x3e43:	cmp	cl, 0x21
0x3e46:	ja	0x3e30


0x352b:	mov	rsi, qword ptr [rsp + 0x20]
0x3530:	test	rsi, rsi
0x3533:	je	0x3549


0x363d:	jmp	0x3549


0x41de:	xor	r10d, r10d
0x41e1:	jmp	0x3d9d


0x3de6:	cmp	r13, r15
0x3de9:	jbe	0x3df0


0x3580:	cmp	r15, r13
0x3583:	jae	0x3589


0x3560:	cmp	r13, r15
0x3563:	jbe	0x356a


0x3d55:	lea	rax, [r15 + 1]
0x3d59:	cmp	r13, rax
0x3d5c:	jbe	0x3d6b


0x3d50:	mov	byte ptr [r14 + r15], 0x5c
0x3d55:	lea	rax, [r15 + 1]
0x3d59:	cmp	r13, rax
0x3d5c:	jbe	0x3d6b


0x3d26:	lea	rsi, [r15 + 1]
0x3d2a:	cmp	r13, rsi
0x3d2d:	jbe	0x3d35


0x3d21:	mov	byte ptr [r14 + r15], 0x27
0x3d26:	lea	rsi, [r15 + 1]
0x3d2a:	cmp	r13, rsi
0x3d2d:	jbe	0x3d35


0x3e48:	mov	esi, 1
0x3e4d:	shl	rsi, cl
0x3e50:	mov	rcx, rsi
0x3e53:	movabs	rsi, 0x20000002b
0x3e5d:	test	rcx, rsi
0x3e60:	je	0x3e30


0x3e30:	add	rdx, 1
0x3e34:	cmp	r8, rdx
0x3e37:	je	0x3c79


0x3549:	test	r10b, r10b
0x354c:	jne	0x3693


0x3535:	mov	edx, ebx
0x3537:	shr	dl, 5
0x353a:	movzx	edx, dl
0x353d:	mov	edx, dword ptr [rsi + rdx*4]
0x3540:	bt	edx, ebx
0x3543:	jb	0x3693


0x3d9d:	cmp	r13, r15
0x3da0:	jbe	0x3da6


0x3df0:	lea	rax, [r15 + 1]
0x3df4:	cmp	r13, rax
0x3df7:	jbe	0x3dff


0x3deb:	mov	byte ptr [r14 + r15], 0x27
0x3df0:	lea	rax, [r15 + 1]
0x3df4:	cmp	r13, rax
0x3df7:	jbe	0x3dff


0x3585:	mov	byte ptr [r14 + r15], bl
0x3589:	movzx	edi, byte ptr [rsp + 0xe]
0x358e:	add	r15, 1
0x3592:	mov	eax, 0
0x3597:	test	r12b, r12b
0x359a:	cmove	edi, eax
0x359d:	mov	byte ptr [rsp + 0xe], dil
0x35a2:	jmp	0x33d8


0x3589:	movzx	edi, byte ptr [rsp + 0xe]
0x358e:	add	r15, 1
0x3592:	mov	eax, 0
0x3597:	test	r12b, r12b
0x359a:	cmove	edi, eax
0x359d:	mov	byte ptr [rsp + 0xe], dil
0x35a2:	jmp	0x33d8


0x356a:	lea	rax, [r15 + 1]
0x356e:	cmp	r13, rax
0x3571:	jbe	0x3579


0x3565:	mov	byte ptr [r14 + r15], 0x27
0x356a:	lea	rax, [r15 + 1]
0x356e:	cmp	r13, rax
0x3571:	jbe	0x3579


0x3d6b:	lea	rax, [r15 + 2]
0x3d6f:	cmp	r13, rax
0x3d72:	jbe	0x3d84


0x3d5e:	mov	eax, ebx
0x3d60:	shr	al, 6
0x3d63:	add	eax, 0x30
0x3d66:	mov	byte ptr [r14 + r15 + 1], al
0x3d6b:	lea	rax, [r15 + 2]
0x3d6f:	cmp	r13, rax
0x3d72:	jbe	0x3d84


0x3d35:	lea	rsi, [r15 + 2]
0x3d39:	cmp	r13, rsi
0x3d3c:	jbe	0x3d44


0x3d2f:	mov	byte ptr [r14 + r15 + 1], 0x24
0x3d35:	lea	rsi, [r15 + 2]
0x3d39:	cmp	r13, rsi
0x3d3c:	jbe	0x3d44


0x3e62:	mov	r14, qword ptr [rsp + 0x40]
0x3e67:	mov	r13, qword ptr [rsp + 0x70]
0x3e6c:	mov	rbp, qword ptr [rsp + 0x30]
0x3e71:	mov	dword ptr [rsp + 8], 2
0x3e79:	cmp	byte ptr [rsp + 0xd], 0
0x3e7e:	je	0x3e90


0x3552:	xor	eax, 1
0x3555:	add	rbp, 1
0x3559:	and	eax, r8d
0x355c:	test	al, al
0x355e:	je	0x3580


0x3693:	cmp	dword ptr [rsp + 8], 2
0x3698:	sete	dl
0x369b:	cmp	byte ptr [rsp + 0xf], 0
0x36a0:	mov	eax, edx
0x36a2:	jne	0x3ef8


0x3da6:	movzx	ebx, byte ptr [rdi + rbp]
0x3daa:	add	r15, 1
0x3dae:	test	dl, dl
0x3db0:	jne	0x3d00


0x3da2:	mov	byte ptr [r14 + r15], bl
0x3da6:	movzx	ebx, byte ptr [rdi + rbp]
0x3daa:	add	r15, 1
0x3dae:	test	dl, dl
0x3db0:	jne	0x3d00


0x3dff:	add	r15, 2
0x3e03:	xor	r10d, r10d
0x3e06:	xor	r8d, r8d
0x3e09:	jmp	0x3d9d


0x3df9:	mov	byte ptr [r14 + r15 + 1], 0x27
0x3dff:	add	r15, 2
0x3e03:	xor	r10d, r10d
0x3e06:	xor	r8d, r8d
0x3e09:	jmp	0x3d9d


0x33d8:	cmp	r11, rbp
0x33db:	setne	r12b
0x33df:	cmp	r11, -1
0x33e3:	jne	0x33f2


0x3579:	add	r15, 2
0x357d:	xor	r8d, r8d
0x3580:	cmp	r15, r13
0x3583:	jae	0x3589


0x3573:	mov	byte ptr [r14 + r15 + 1], 0x27
0x3579:	add	r15, 2
0x357d:	xor	r8d, r8d
0x3580:	cmp	r15, r13
0x3583:	jae	0x3589


0x3d84:	and	ebx, 7
0x3d87:	add	rbp, 1
0x3d8b:	add	r15, 3
0x3d8f:	add	ebx, 0x30
0x3d92:	cmp	rbp, rcx
0x3d95:	jae	0x3580


0x3d74:	mov	eax, ebx
0x3d76:	shr	al, 3
0x3d79:	and	eax, 7
0x3d7c:	add	eax, 0x30
0x3d7f:	mov	byte ptr [r14 + r15 + 2], al
0x3d84:	and	ebx, 7
0x3d87:	add	rbp, 1
0x3d8b:	add	r15, 3
0x3d8f:	add	ebx, 0x30
0x3d92:	cmp	rbp, rcx
0x3d95:	jae	0x3580


0x3d44:	add	r15, 3
0x3d48:	mov	r8d, eax
0x3d4b:	cmp	r13, r15
0x3d4e:	jbe	0x3d55


0x3d3e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x3d44:	add	r15, 3
0x3d48:	mov	r8d, eax
0x3d4b:	cmp	r13, r15
0x3d4e:	jbe	0x3d55


0x36a8:	mov	eax, r8d
0x36ab:	xor	eax, 1
0x36ae:	and	al, dl
0x36b0:	je	0x36e1


0x3ef8:	mov	rbp, r11
0x3efb:	jmp	0x3e79


0x3d9b:	mov	esi, edx
0x3d9d:	cmp	r13, r15
0x3da0:	jbe	0x3da6


0x36e1:	cmp	r13, r15
0x36e4:	jbe	0x36eb


0x36b2:	cmp	r13, r15
0x36b5:	jbe	0x36bc


0x36eb:	add	r15, 1
0x36ef:	add	rbp, 1
0x36f3:	jmp	0x3580


0x36e6:	mov	byte ptr [r14 + r15], 0x5c
0x36eb:	add	r15, 1
0x36ef:	add	rbp, 1
0x36f3:	jmp	0x3580


0x36bc:	lea	rdx, [r15 + 1]
0x36c0:	cmp	r13, rdx
0x36c3:	jbe	0x36cb


0x36b7:	mov	byte ptr [r14 + r15], 0x27
0x36bc:	lea	rdx, [r15 + 1]
0x36c0:	cmp	r13, rdx
0x36c3:	jbe	0x36cb


0x36cb:	lea	rdx, [r15 + 2]
0x36cf:	cmp	r13, rdx
0x36d2:	jbe	0x36da


0x36c5:	mov	byte ptr [r14 + r15 + 1], 0x24
0x36cb:	lea	rdx, [r15 + 2]
0x36cf:	cmp	r13, rdx
0x36d2:	jbe	0x36da


0x36da:	add	r15, 3
0x36de:	mov	r8d, eax
0x36e1:	cmp	r13, r15
0x36e4:	jbe	0x36eb


0x36d4:	mov	byte ptr [r14 + r15 + 2], 0x27
0x36da:	add	r15, 3
0x36de:	mov	r8d, eax
0x36e1:	cmp	r13, r15
0x36e4:	jbe	0x36eb


0x3c85:	mov	rdi, qword ptr [rsp + 0x28]
0x3c8a:	test	eax, eax
0x3c8c:	mov	eax, 0
0x3c91:	cmove	r12d, eax
0x3c95:	add	rbx, r15
0x3c98:	call	0x1c40


0x3c9d:	test	eax, eax
0x3c9f:	je	0x3c23


0x3c23:	mov	rax, qword ptr [rsp + 0x10]
0x3c28:	lea	r14, [rbp + rbx]
0x3c2d:	mov	rdx, qword ptr [rsp + 0x30]
0x3c32:	mov	rcx, qword ptr [rsp + 0x28]
0x3c37:	mov	rdi, qword ptr [rsp + 0x38]
0x3c3c:	lea	r13, [rax + r14]
0x3c40:	sub	rdx, r14
0x3c43:	mov	rsi, r13
0x3c46:	call	0x5880


0x344c:	movzx	r8d, byte ptr [rsp + 0x38]
0x3452:	movzx	r10d, byte ptr [rsp + 0x30]
0x3458:	mov	r11, rax
0x345b:	mov	r9, qword ptr [rsp + 0x28]
0x3460:	cmp	rbx, r11
0x3463:	mov	byte ptr [rsp + 0x28], r10b
0x3468:	ja	0x3a20


0x3bd0:	movzx	r8d, byte ptr [rsp + 0x40]
0x3bd6:	movzx	r10d, byte ptr [rsp + 0x38]
0x3bdc:	mov	r11, rax
0x3bdf:	mov	r9, qword ptr [rsp + 0x30]
0x3be4:	lea	rax, [rsp + 0x9c]
0x3bec:	xor	ecx, ecx
0x3bee:	mov	byte ptr [rsp + 0x7e], bl
0x3bf2:	mov	byte ptr [rsp + 0x7d], r8b
0x3bf7:	mov	rbx, rcx
0x3bfa:	mov	qword ptr [rsp + 0x88], r9
0x3c02:	mov	qword ptr [rsp + 0x38], rax
0x3c07:	mov	byte ptr [rsp + 0x7f], r10b
0x3c0c:	mov	qword ptr [rsp + 0x80], r15
0x3c14:	mov	qword ptr [rsp + 0x40], r14
0x3c19:	mov	qword ptr [rsp + 0x70], r13
0x3c1e:	mov	qword ptr [rsp + 0x30], r11
0x3c23:	mov	rax, qword ptr [rsp + 0x10]
0x3c28:	lea	r14, [rbp + rbx]
0x3c2d:	mov	rdx, qword ptr [rsp + 0x30]
0x3c32:	mov	rcx, qword ptr [rsp + 0x28]
0x3c37:	mov	rdi, qword ptr [rsp + 0x38]
0x3c3c:	lea	r13, [rax + r14]
0x3c40:	sub	rdx, r14
0x3c43:	mov	rsi, r13
0x3c46:	call	0x5880


0x3808:	mov	rcx, qword ptr [rax]
0x380b:	movzx	edx, bl
0x380e:	movzx	r10d, byte ptr [rsp + 0x28]
0x3814:	movzx	r8d, byte ptr [rsp + 0x30]
0x381a:	mov	r11, qword ptr [rsp + 0x38]
0x381f:	mov	edi, 1
0x3824:	movzx	eax, word ptr [rcx + rdx*2]
0x3828:	and	ax, 0x4000
0x382c:	setne	r12b
0x3830:	sete	al
0x3833:	and	al, byte ptr [rsp + 0xd]
0x3837:	test	al, al
0x3839:	jne	0x41d1


0x34e0:	xor	r10d, r10d
0x34e3:	cmp	r11, 1
0x34e7:	setne	al
0x34ea:	cmp	r11, -1
0x34ee:	jne	0x34fc


0x34f0:	mov	rax, qword ptr [rsp + 0x10]
0x34f5:	cmp	byte ptr [rax + 1], 0
0x34f9:	setne	al
0x34fc:	cmp	dword ptr [rsp + 8], 2
0x3501:	sete	dl
0x3504:	test	al, al
0x3506:	je	0x3758


0x34fc:	cmp	dword ptr [rsp + 8], 2
0x3501:	sete	dl
0x3504:	test	al, al
0x3506:	je	0x3758


0x3758:	test	rbp, rbp
0x375b:	jne	0x350c


0x350c:	xor	r12d, r12d
0x350f:	xor	eax, eax
0x3511:	nop	dword ptr [rax]
0x3518:	cmp	byte ptr [rsp + 0xd], 1
0x351d:	jne	0x3632


0x3761:	movzx	eax, byte ptr [rsp + 0xf]
0x3766:	and	al, dl
0x3768:	je	0x3518


0x376e:	mov	rbp, r11
0x3771:	mov	dword ptr [rsp + 8], 2
0x3779:	jmp	0x3e79


0x3b78:	cmp	byte ptr [rsp + 0xf], 0
0x3b7d:	jne	0x43a0


0x35c0:	cmp	eax, 5
0x35c3:	je	0x3b38


0x3b83:	xor	r12d, r12d
0x3b86:	xor	eax, eax
0x3b88:	mov	ebx, 0x3f
0x3b8d:	jmp	0x3549


0x43a0:	mov	rbp, r11
0x43a3:	movzx	eax, byte ptr [rsp + 0xf]
0x43a8:	jmp	0x3e79


0x3b38:	test	byte ptr [rsp + 0x78], 4
0x3b3d:	je	0x3b60


0x35c9:	cmp	eax, 2
0x35cc:	mov	ebx, 0x3f
0x35d1:	sete	dl
0x35d4:	xor	r12d, r12d
0x35d7:	xor	eax, eax
0x35d9:	jmp	0x3518


0x3b60:	xor	edx, edx
0x3b62:	xor	r12d, r12d
0x3b65:	xor	eax, eax
0x3b67:	mov	ebx, 0x3f
0x3b6c:	jmp	0x3518


0x3b3f:	lea	rcx, [rbp + 2]
0x3b43:	cmp	rcx, r11
0x3b46:	jae	0x3b60


0x3b48:	mov	rax, qword ptr [rsp + 0x10]
0x3b4d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x3b52:	je	0x42e2


0x42e2:	movzx	ebx, byte ptr [rax + rcx]
0x42e6:	cmp	bl, 0x3e
0x42e9:	ja	0x3b60


0x42ef:	movabs	rax, 0x7000a38200000000
0x42f9:	bt	rax, rbx
0x42fd:	jae	0x3b60


0x4303:	cmp	byte ptr [rsp + 0xf], 0
0x4308:	jne	0x44f2


0x430e:	cmp	r13, r15
0x4311:	jbe	0x4318


0x44f2:	mov	rbp, r11
0x44f5:	jmp	0x3e90


0x4318:	lea	rax, [r15 + 1]
0x431c:	cmp	r13, rax
0x431f:	jbe	0x4327


0x4313:	mov	byte ptr [r14 + r15], 0x3f
0x4318:	lea	rax, [r15 + 1]
0x431c:	cmp	r13, rax
0x431f:	jbe	0x4327


0x4327:	lea	rax, [r15 + 2]
0x432b:	cmp	r13, rax
0x432e:	jbe	0x4336


0x4321:	mov	byte ptr [r14 + r15 + 1], 0x22
0x4327:	lea	rax, [r15 + 2]
0x432b:	cmp	r13, rax
0x432e:	jbe	0x4336


0x4336:	lea	rax, [r15 + 3]
0x433a:	cmp	r13, rax
0x433d:	jbe	0x4345


0x4330:	mov	byte ptr [r14 + r15 + 2], 0x22
0x4336:	lea	rax, [r15 + 3]
0x433a:	cmp	r13, rax
0x433d:	jbe	0x4345


0x4345:	add	r15, 4
0x4349:	xor	edx, edx
0x434b:	xor	r12d, r12d
0x434e:	xor	eax, eax
0x4350:	mov	rbp, rcx
0x4353:	jmp	0x3518


0x433f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x4345:	add	r15, 4
0x4349:	xor	edx, edx
0x434b:	xor	r12d, r12d
0x434e:	xor	eax, eax
0x4350:	mov	rbp, rcx
0x4353:	jmp	0x3518


0x3af0:	cmp	byte ptr [rsp + 0xf], 0
0x3af5:	jne	0x43a0


0x35ee:	mov	byte ptr [rsp + 0x7c], r12b
0x35f3:	xor	edx, edx
0x35f5:	xor	eax, eax
0x35f7:	mov	ebx, 0x27
0x35fc:	jmp	0x3518


0x3afb:	test	r13, r13
0x3afe:	je	0x3f00


0x3f00:	cmp	r13, r15
0x3f03:	jbe	0x3f0a


0x3b04:	xor	edx, edx
0x3b06:	cmp	qword ptr [rsp + 0x50], 0
0x3b0c:	jne	0x3f00


0x3f0a:	lea	rax, [r15 + 1]
0x3f0e:	cmp	r13, rax
0x3f11:	jbe	0x3f19


0x3f05:	mov	byte ptr [r14 + r15], 0x27
0x3f0a:	lea	rax, [r15 + 1]
0x3f0e:	cmp	r13, rax
0x3f11:	jbe	0x3f19


0x3b12:	mov	qword ptr [rsp + 0x50], r13
0x3b17:	add	r15, 3
0x3b1b:	xor	eax, eax
0x3b1d:	mov	byte ptr [rsp + 0x7c], r12b
0x3b22:	xor	r8d, r8d
0x3b25:	mov	r13, rdx
0x3b28:	mov	ebx, 0x27
0x3b2d:	jmp	0x3549


0x3f19:	lea	rax, [r15 + 2]
0x3f1d:	cmp	r13, rax
0x3f20:	jbe	0x4512


0x3f13:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x3f19:	lea	rax, [r15 + 2]
0x3f1d:	cmp	r13, rax
0x3f20:	jbe	0x4512


0x4512:	mov	rdx, r13
0x4515:	mov	r13, qword ptr [rsp + 0x50]
0x451a:	jmp	0x3b12


0x3f26:	mov	rdx, r13
0x3f29:	mov	byte ptr [r14 + r15 + 2], 0x27
0x3f2f:	mov	r13, qword ptr [rsp + 0x50]
0x3f34:	jmp	0x3b12


0x3624:	cmp	byte ptr [rsp + 0xd], 0
0x3629:	jne	0x3690


0x362b:	mov	ebx, edx
0x362d:	xor	r12d, r12d
0x3630:	xor	eax, eax
0x3632:	cmp	byte ptr [rsp + 0xf], 0
0x3637:	jne	0x352b


0x3690:	xor	r12d, r12d
0x3693:	cmp	dword ptr [rsp + 8], 2
0x3698:	sete	dl
0x369b:	cmp	byte ptr [rsp + 0xf], 0
0x36a0:	mov	eax, edx
0x36a2:	jne	0x3ef8


0x3a30:	cmp	byte ptr [rsp + 0xf], 0
0x3a35:	jne	0x43a0


0x3663:	cmp	byte ptr [rsp + 0xd], 0
0x3668:	je	0x3880


0x3a3b:	add	rbp, 1
0x3a3f:	mov	eax, r8d
0x3a42:	xor	r12d, r12d
0x3a45:	mov	ebx, 0x5c
0x3a4a:	jmp	0x355c


0x3880:	mov	edx, 0x5c
0x3885:	mov	ebx, 0x5c
0x388a:	jmp	0x3624


0x366e:	cmp	byte ptr [rsp + 0xf], 0
0x3673:	je	0x3880


0x3679:	cmp	qword ptr [rsp + 0x18], 0
0x367f:	jne	0x3a3b


0x3685:	mov	ebx, 0x5c
0x368a:	nop	word ptr [rax + rax]
0x3690:	xor	r12d, r12d
0x3693:	cmp	dword ptr [rsp + 8], 2
0x3698:	sete	dl
0x369b:	cmp	byte ptr [rsp + 0xf], 0
0x36a0:	mov	eax, edx
0x36a2:	jne	0x3ef8


0x370b:	xor	edx, edx
0x370d:	test	byte ptr [rsp + 0x78], 1
0x3712:	je	0x362b


0x38d3:	cmp	dword ptr [rsp + 8], 2
0x38d8:	sete	dl
0x38db:	cmp	byte ptr [rsp + 0xf], 0
0x38e0:	jne	0x447a


0x3718:	add	rbp, 1
0x371c:	jmp	0x33d8


0x38e6:	mov	eax, r8d
0x38e9:	mov	rcx, r15
0x38ec:	xor	eax, 1
0x38ef:	and	al, dl
0x38f1:	je	0x3920


0x447a:	movzx	ebx, byte ptr [rsp + 0xf]
0x447f:	mov	rbp, r11
0x4482:	mov	eax, edx
0x4484:	mov	byte ptr [rsp + 0xd], bl
0x4488:	jmp	0x3e79


0x3920:	cmp	r13, rcx
0x3923:	jbe	0x392a


0x38f3:	cmp	r13, r15
0x38f6:	jbe	0x38fd


0x392a:	cmp	dword ptr [rsp + 8], 2
0x392f:	lea	r15, [rcx + 1]
0x3933:	je	0x3f39


0x3925:	mov	byte ptr [r14 + rcx], 0x5c
0x392a:	cmp	dword ptr [rsp + 8], 2
0x392f:	lea	r15, [rcx + 1]
0x3933:	je	0x3f39


0x38fd:	lea	rcx, [r15 + 1]
0x3901:	cmp	r13, rcx
0x3904:	jbe	0x390c


0x38f8:	mov	byte ptr [r14 + r15], 0x27
0x38fd:	lea	rcx, [r15 + 1]
0x3901:	cmp	r13, rcx
0x3904:	jbe	0x390c


0x3f39:	mov	eax, r12d
0x3f3c:	mov	ebx, 0x30
0x3f41:	xor	r12d, r12d
0x3f44:	jmp	0x3549


0x3939:	lea	rax, [rbp + 1]
0x393d:	cmp	rax, r11
0x3940:	jae	0x395b


0x390c:	lea	rcx, [r15 + 2]
0x3910:	cmp	r13, rcx
0x3913:	ja	0x3f49


0x3906:	mov	byte ptr [r14 + r15 + 1], 0x24
0x390c:	lea	rcx, [r15 + 2]
0x3910:	cmp	r13, rcx
0x3913:	ja	0x3f49


0x3942:	mov	rax, qword ptr [rsp + 0x10]
0x3947:	movzx	eax, byte ptr [rax + rbp + 1]
0x394c:	mov	byte ptr [rsp + 0x28], al
0x3950:	sub	eax, 0x30
0x3953:	cmp	al, 9
0x3955:	jbe	0x4189


0x395b:	mov	eax, r12d
0x395e:	mov	ebx, 0x30
0x3963:	xor	r12d, r12d
0x3966:	jmp	0x3518


0x3919:	lea	rcx, [r15 + 3]
0x391d:	mov	r8d, eax
0x3920:	cmp	r13, rcx
0x3923:	jbe	0x392a


0x3f49:	mov	byte ptr [r14 + r15 + 2], 0x27
0x3f4f:	jmp	0x3919


0x4189:	cmp	r13, r15
0x418c:	jbe	0x4193


0x4193:	lea	rax, [rcx + 2]
0x4197:	cmp	r13, rax
0x419a:	jbe	0x41a2


0x418e:	mov	byte ptr [r14 + r15], 0x30
0x4193:	lea	rax, [rcx + 2]
0x4197:	cmp	r13, rax
0x419a:	jbe	0x41a2


0x41a2:	mov	eax, r12d
0x41a5:	lea	r15, [rcx + 3]
0x41a9:	xor	r12d, r12d
0x41ac:	mov	ebx, 0x30
0x41b1:	jmp	0x3518


0x419c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x41a2:	mov	eax, r12d
0x41a5:	lea	r15, [rcx + 3]
0x41a9:	xor	r12d, r12d
0x41ac:	mov	ebx, 0x30
0x41b1:	jmp	0x3518


0x3612:	cmp	dword ptr [rsp + 8], 2
0x3617:	sete	al
0x361a:	and	al, byte ptr [rsp + 0xf]
0x361e:	jne	0x376e


0x39d0:	mov	edx, 0xd
0x39d5:	xor	r10d, r10d
0x39d8:	mov	ebx, 0x72
0x39dd:	jmp	0x3612


0x3f54:	test	ebx, ebx
0x3f56:	jne	0x3383


0x3f5c:	mov	byte ptr [rsp + 0xd], 1
0x3f61:	test	r13, r13
0x3f64:	jne	0x44fa


0x3f6a:	lea	rax, [rip + 0x1076c]
0x3f71:	mov	qword ptr [rsp + 0x50], 0
0x3f7a:	mov	byte ptr [rsp + 0xe], 1
0x3f7f:	mov	byte ptr [rsp + 0x7c], 0
0x3f84:	xor	r12d, r12d
0x3f87:	mov	byte ptr [rsp + 0xf], 0
0x3f8c:	mov	qword ptr [rsp + 0x18], 1
0x3f95:	mov	qword ptr [rsp + 0x48], rax
0x3f9a:	mov	r15d, 1
0x3fa0:	mov	dword ptr [rsp + 8], 2
0x3fa8:	jmp	0x33c3


0x44fa:	mov	byte ptr [rsp + 0xe], 1
0x44ff:	xor	eax, eax
0x4501:	xor	r12d, r12d
0x4504:	mov	qword ptr [rsp + 0x50], 0
0x450d:	jmp	0x3ab4


0x3ab4:	lea	rbx, [rip + 0x10c22]
0x3abb:	mov	byte ptr [r14], 0x27
0x3abf:	mov	dword ptr [rsp + 8], 2
0x3ac7:	mov	r15d, 1
0x3acd:	mov	qword ptr [rsp + 0x18], 1
0x3ad6:	mov	byte ptr [rsp + 0xf], 0
0x3adb:	mov	qword ptr [rsp + 0x48], rbx
0x3ae0:	mov	byte ptr [rsp + 0x7c], al
0x3ae4:	jmp	0x33c3


0x3fb8:	test	r13, r13
0x3fbb:	je	0x41e6


0x43ad:	lea	rax, [rip + 0x10327]
0x43b4:	mov	byte ptr [rsp + 0xe], 1
0x43b9:	mov	byte ptr [rsp + 0x7c], 0
0x43be:	xor	r12d, r12d
0x43c1:	mov	qword ptr [rsp + 0x50], 0
0x43ca:	mov	byte ptr [rsp + 0xf], 1
0x43cf:	mov	byte ptr [rsp + 0xd], 1
0x43d4:	mov	qword ptr [rsp + 0x18], 1
0x43dd:	xor	r15d, r15d
0x43e0:	mov	qword ptr [rsp + 0x48], rax
0x43e5:	jmp	0x33c3


0x41e6:	mov	qword ptr [rsp + 0x50], 0
0x41ef:	mov	byte ptr [rsp + 0xe], 1
0x41f4:	xor	r12d, r12d
0x41f7:	mov	byte ptr [rsp + 0x7c], 0
0x41fc:	jmp	0x3fdb


0x3fc1:	mov	byte ptr [r14], 0x22
0x3fc5:	mov	byte ptr [rsp + 0xe], 1
0x3fca:	xor	r12d, r12d
0x3fcd:	mov	byte ptr [rsp + 0x7c], 0
0x3fd2:	mov	qword ptr [rsp + 0x50], 0
0x3fdb:	lea	rax, [rip + 0x106f9]
0x3fe2:	mov	byte ptr [rsp + 0xf], 0
0x3fe7:	mov	byte ptr [rsp + 0xd], 1
0x3fec:	mov	qword ptr [rsp + 0x18], 1
0x3ff5:	mov	r15d, 1
0x3ffb:	mov	qword ptr [rsp + 0x48], rax
0x4000:	jmp	0x33c3


0x3fdb:	lea	rax, [rip + 0x106f9]
0x3fe2:	mov	byte ptr [rsp + 0xf], 0
0x3fe7:	mov	byte ptr [rsp + 0xd], 1
0x3fec:	mov	qword ptr [rsp + 0x18], 1
0x3ff5:	mov	r15d, 1
0x3ffb:	mov	qword ptr [rsp + 0x48], rax
0x4000:	jmp	0x33c3


0x4005:	lea	rax, [rip + 0x106cf]
0x400c:	mov	byte ptr [rsp + 0xe], 1
0x4011:	mov	byte ptr [rsp + 0x7c], 0
0x4016:	xor	r12d, r12d
0x4019:	mov	qword ptr [rsp + 0x50], 0
0x4022:	mov	byte ptr [rsp + 0xf], 1
0x4027:	mov	byte ptr [rsp + 0xd], 1
0x402c:	mov	qword ptr [rsp + 0x18], 1
0x4035:	xor	r15d, r15d
0x4038:	mov	qword ptr [rsp + 0x48], rax
0x403d:	mov	dword ptr [rsp + 8], 5
0x4045:	jmp	0x33c3


0x404a:	mov	byte ptr [rsp + 0xe], 1
0x404f:	mov	byte ptr [rsp + 0x7c], 0
0x4054:	xor	r12d, r12d
0x4057:	mov	qword ptr [rsp + 0x50], 0
0x4060:	mov	byte ptr [rsp + 0xf], 0
0x4065:	xor	r15d, r15d
0x4068:	mov	byte ptr [rsp + 0xd], 1
0x406d:	mov	qword ptr [rsp + 0x18], 0
0x4076:	mov	qword ptr [rsp + 0x48], 0
0x407f:	jmp	0x33c3


0x4084:	cmp	dword ptr [rsp + 8], 0xa
0x4089:	je	0x40e1


0x40e1:	xor	r15d, r15d
0x40e4:	test	ebx, ebx
0x40e6:	je	0x42ad


0x408b:	lea	rsi, [rip + 0x1064d]
0x4092:	xor	edi, edi
0x4094:	mov	edx, 5
0x4099:	call	0x1960


0x42ad:	mov	rdx, qword ptr [rsp + 0x68]
0x42b2:	movzx	eax, byte ptr [rdx]
0x42b5:	test	al, al
0x42b7:	je	0x40ec


0x40ec:	test	ebx, ebx
0x40ee:	mov	rbx, qword ptr [rsp + 0x60]
0x40f3:	setne	byte ptr [rsp + 0xf]
0x40f8:	xor	r12d, r12d
0x40fb:	mov	rdi, rbx
0x40fe:	call	0x1980


0x42c9:	add	r15, 1
0x42cd:	movzx	eax, byte ptr [rdx + r15]
0x42d2:	test	al, al
0x42d4:	jne	0x42c0


0x42c5:	mov	byte ptr [r14 + r15], al
0x42c9:	add	r15, 1
0x42cd:	movzx	eax, byte ptr [rdx + r15]
0x42d2:	test	al, al
0x42d4:	jne	0x42c0


0x42d6:	jmp	0x40ec


0x42c0:	cmp	r13, r15
0x42c3:	jbe	0x42c9


0x4103:	mov	qword ptr [rsp + 0x48], rbx
0x4108:	mov	qword ptr [rsp + 0x18], rax
0x410d:	mov	byte ptr [rsp + 0xe], 1
0x4112:	mov	byte ptr [rsp + 0x7c], 0
0x4117:	mov	qword ptr [rsp + 0x50], 0
0x4120:	mov	byte ptr [rsp + 0xd], 1
0x4125:	jmp	0x33c3


0x409e:	mov	rcx, rax
0x40a1:	mov	qword ptr [rsp + 0x68], rax
0x40a6:	lea	rax, [rip + 0x10632]
0x40ad:	cmp	rcx, rax
0x40b0:	je	0x444e


0x444e:	mov	esi, dword ptr [rsp + 8]
0x4452:	mov	rdi, rcx
0x4455:	call	0x3200


0x40b6:	lea	rsi, [rip + 0x10620]
0x40bd:	xor	edi, edi
0x40bf:	mov	edx, 5
0x40c4:	call	0x1960


0x40c9:	mov	rcx, rax
0x40cc:	mov	qword ptr [rsp + 0x60], rax
0x40d1:	lea	rax, [rip + 0x10605]
0x40d8:	cmp	rcx, rax
0x40db:	je	0x4464


0x4464:	mov	esi, dword ptr [rsp + 8]
0x4468:	mov	rdi, rcx
0x446b:	call	0x3200


0x4470:	mov	qword ptr [rsp + 0x60], rax
0x4475:	jmp	0x40e1


0x445a:	mov	qword ptr [rsp + 0x68], rax
0x445f:	jmp	0x40b6


0x412a:	mov	byte ptr [rsp + 0xe], 1
0x412f:	mov	byte ptr [rsp + 0x7c], 0
0x4134:	xor	r12d, r12d
0x4137:	mov	qword ptr [rsp + 0x50], 0
0x4140:	mov	byte ptr [rsp + 0xf], 0
0x4145:	xor	r15d, r15d
0x4148:	mov	byte ptr [rsp + 0xd], 0
0x414d:	mov	qword ptr [rsp + 0x18], 0
0x4156:	mov	qword ptr [rsp + 0x48], 0
0x415f:	jmp	0x33c3


0x4164:	mov	byte ptr [rsp + 0xe], 1
0x4169:	mov	byte ptr [rsp + 0x7c], 0
0x416e:	xor	r12d, r12d
0x4171:	mov	qword ptr [rsp + 0x50], 0
0x417a:	mov	byte ptr [rsp + 0xf], 1
0x417f:	mov	byte ptr [rsp + 0xd], 1
0x4184:	jmp	0x33a3


0x33a3:	lea	rax, [rip + 0x11333]
0x33aa:	mov	qword ptr [rsp + 0x18], 1
0x33b3:	xor	r15d, r15d
0x33b6:	mov	dword ptr [rsp + 8], 2
0x33be:	mov	qword ptr [rsp + 0x48], rax
0x33c3:	xor	r11d, r11d
0x33c6:	mov	rax, rbp
0x33c9:	mov	r8d, r12d
0x33cc:	mov	rbp, r11
0x33cf:	mov	r11, rax
0x33d2:	nop	word ptr [rax + rax]
0x33d8:	cmp	r11, rbp
0x33db:	setne	r12b
0x33df:	cmp	r11, -1
0x33e3:	jne	0x33f2


0x4358:	test	ebx, ebx
0x435a:	je	0x44e8


0x44e8:	mov	byte ptr [rsp + 0xd], 0
0x44ed:	jmp	0x3f61


0x4360:	lea	rax, [rip + 0x10376]
0x4367:	mov	byte ptr [rsp + 0xe], 1
0x436c:	mov	byte ptr [rsp + 0x7c], 0
0x4371:	xor	r12d, r12d
0x4374:	mov	qword ptr [rsp + 0x50], 0
0x437d:	mov	byte ptr [rsp + 0xf], 1
0x4382:	mov	byte ptr [rsp + 0xd], 0
0x4387:	mov	qword ptr [rsp + 0x18], 1
0x4390:	xor	r15d, r15d
0x4393:	mov	qword ptr [rsp + 0x48], rax
0x4398:	jmp	0x33c3


0x3f61:	test	r13, r13
0x3f64:	jne	0x44fa


0x4524:	nop	
0x4526:	nop	word ptr cs:[rax + rax]


0x46db:	nop	dword ptr [rax + rax]


0x4716:	nop	word ptr cs:[rax + rax]


0x4731:	nop	dword ptr [rax + rax]
0x4736:	nop	word ptr cs:[rax + rax]


0x4751:	nop	dword ptr [rax + rax]
0x4756:	nop	word ptr cs:[rax + rax]


0x4795:	nop	
0x4796:	nop	word ptr cs:[rax + rax]


0x47b5:	nop	
0x47b6:	nop	word ptr cs:[rax + rax]


0x4864:	nop	
0x4866:	nop	word ptr cs:[rax + rax]


0x4953:	nop	dword ptr [rax]
0x4956:	nop	word ptr cs:[rax + rax]


0x496a:	nop	word ptr [rax + rax]


0x4a03:	nop	dword ptr [rax]
0x4a06:	nop	word ptr cs:[rax + rax]


0x4a23:	nop	dword ptr [rax]
0x4a26:	nop	word ptr cs:[rax + rax]


0x4a3c:	nop	dword ptr [rax]


0x4a58:	nop	dword ptr [rax + rax]


0x4a74:	nop	
0x4a76:	nop	word ptr cs:[rax + rax]


0x4b0e:	nop	


0x4b9a:	nop	word ptr [rax + rax]


0x4bac:	nop	dword ptr [rax]


0x4bbf:	nop	


0x4c58:	nop	dword ptr [rax + rax]


0x4c81:	nop	dword ptr [rax + rax]
0x4c86:	nop	word ptr cs:[rax + rax]


0x4c9a:	nop	word ptr [rax + rax]


0x4d2e:	nop	


0x4dc1:	nop	dword ptr [rax + rax]
0x4dc6:	nop	word ptr cs:[rax + rax]


0x4ddc:	nop	dword ptr [rax]


0x4df7:	nop	word ptr [rax + rax]


0x4e13:	nop	dword ptr [rax]
0x4e16:	nop	word ptr cs:[rax + rax]


0x4e2c:	nop	dword ptr [rax]


0x4e44:	nop	
0x4e46:	nop	word ptr cs:[rax + rax]


0x4e63:	nop	dword ptr [rax]
0x4e66:	nop	word ptr cs:[rax + rax]


0x4e88:	nop	dword ptr [rax + rax]


0x4eee:	nop	


0x4f04:	nop	
0x4f06:	nop	word ptr cs:[rax + rax]


0x4f22:	nop	word ptr cs:[rax + rax]
0x4f2c:	nop	dword ptr [rax]


0x4f6f:	nop	


0x5387:	nop	word ptr [rax + rax]


0x5428:	nop	dword ptr [rax + rax]


0x5505:	nop	
0x5506:	nop	word ptr cs:[rax + rax]


0x55aa:	nop	word ptr [rax + rax]


0x55d4:	nop	
0x55d6:	nop	word ptr cs:[rax + rax]


0x55e2:	nop	dword ptr [rax]
0x55e6:	nop	word ptr cs:[rax + rax]


0x5626:	nop	word ptr cs:[rax + rax]


0x5654:	nop	
0x5656:	nop	word ptr cs:[rax + rax]


0x56e2:	nop	dword ptr [rax]
0x56e6:	nop	word ptr cs:[rax + rax]


0x573a:	nop	word ptr [rax + rax]


0x5757:	nop	word ptr [rax + rax]


0x578e:	nop	


0x57b8:	nop	dword ptr [rax + rax]


0x57d3:	nop	word ptr cs:[rax + rax]
0x57dd:	nop	dword ptr [rax]


0x5815:	nop	word ptr cs:[rax + rax]
0x581f:	nop	


0x5877:	nop	word ptr [rax + rax]


0x5903:	nop	word ptr cs:[rax + rax]
0x590d:	nop	dword ptr [rax]


0x5a3f:	nop	


0x5a5d:	nop	dword ptr [rax]


0x5c8c:	nop	dword ptr [rax]


0x5cf6:	nop	word ptr cs:[rax + rax]


0x5d6b:	nop	dword ptr [rax + rax]


0x5dc1:	nop	dword ptr [rax + rax]
0x5dc6:	nop	word ptr cs:[rax + rax]


0x5e6c:	nop	dword ptr [rax]


0x5ed4:	nop	
0x5ed6:	nop	word ptr cs:[rax + rax]


0x600c:	nop	dword ptr [rax]


0x60fc:	nop	dword ptr [rax]


0x616e:	nop	


0x6333:	nop	dword ptr [rax]
0x6336:	nop	word ptr cs:[rax + rax]


0x6955:	nop	
0x6956:	nop	word ptr cs:[rax + rax]


0x6aae:	nop	


0x6b36:	nop	word ptr cs:[rax + rax]


0x6b95:	nop	
0x6b96:	nop	word ptr cs:[rax + rax]


0x6bb4:	nop	
0x6bb6:	nop	word ptr cs:[rax + rax]


0x6d8e:	nop	


0x6e2f:	nop	


0x70a5:	nop	
0x70a6:	nop	word ptr cs:[rax + rax]


0x7109:	nop	dword ptr [rax]


0x7142:	nop	dword ptr [rax]
0x7146:	nop	word ptr cs:[rax + rax]


0x72af:	nop	


0x7368:	nop	dword ptr [rax + rax]


0x73bf:	nop	


0x7413:	nop	dword ptr [rax]
0x7416:	nop	word ptr cs:[rax + rax]


0x7495:	nop	
0x7496:	nop	word ptr cs:[rax + rax]


0x7595:	nop	
0x7596:	nop	word ptr cs:[rax + rax]


0x75d4:	nop	
0x75d6:	nop	word ptr cs:[rax + rax]


0x766b:	nop	dword ptr [rax + rax]


0x76c7:	nop	word ptr [rax + rax]


0x7939:	nop	dword ptr [rax]


0x7b1e:	nop	


0x7dcf:	nop	


0x7f29:	nop	dword ptr [rax]


0x80d8:	nop	dword ptr [rax + rax]


0x8291:	nop	dword ptr [rax + rax]
0x8296:	nop	word ptr cs:[rax + rax]


0x84d7:	nop	word ptr [rax + rax]


0x8606:	nop	word ptr cs:[rax + rax]


0x8762:	nop	dword ptr [rax]
0x8766:	nop	word ptr cs:[rax + rax]


0x8a2a:	nop	word ptr [rax + rax]


0x8c2a:	nop	word ptr [rax + rax]


0x8d0c:	nop	dword ptr [rax]


0x90ae:	nop	


0x91f1:	nop	dword ptr [rax + rax]
0x91f6:	nop	word ptr cs:[rax + rax]


0x92e6:	nop	word ptr cs:[rax + rax]


0x94cf:	nop	


0x9c6f:	nop	


0x9eab:	nop	dword ptr [rax + rax]


0xaa41:	nop	dword ptr [rax + rax]
0xaa46:	nop	word ptr cs:[rax + rax]


0xaad7:	nop	word ptr [rax + rax]


0xab2f:	nop	


0xabc4:	nop	
0xabc6:	nop	word ptr cs:[rax + rax]


0xac1c:	nop	dword ptr [rax]


0xb42d:	nop	dword ptr [rax]


0xb69a:	nop	word ptr [rax + rax]


0xbbc7:	nop	word ptr [rax + rax]


0xbe24:	nop	
0xbe26:	nop	word ptr cs:[rax + rax]


0xc581:	nop	dword ptr [rax + rax]
0xc586:	nop	word ptr cs:[rax + rax]


0xce7a:	nop	word ptr [rax + rax]


0xd016:	nop	word ptr cs:[rax + rax]


0xd901:	nop	dword ptr [rax + rax]
0xd906:	nop	word ptr cs:[rax + rax]


0xdafc:	nop	dword ptr [rax]


0x1001d:	nop	dword ptr [rax]


0x10269:	mov	byte ptr [rbp + 8], 0x18
0x1026d:	jmp	0x100e4


0x10362:	mov	byte ptr [rbp + 8], 0xa
0x10366:	mov	eax, 1
0x1036b:	jmp	0x100e4


0x102b9:	mov	byte ptr [rbp + 8], 0x17
0x102bd:	jmp	0x100e4


0x102d1:	test	r14, r14
0x102d4:	jne	0x1069a


0x102da:	mov	byte ptr [rbp + 8], 0xc
0x102de:	mov	dword ptr [rbp], 0x10
0x102e5:	mov	eax, 1
0x102ea:	jmp	0x100e4


0x1069a:	cmp	byte ptr [rdx + r14 - 1], 0xa
0x106a0:	jne	0x1028c


0x106a6:	test	r15d, 0x800
0x106ad:	je	0x1028c


0x106b3:	jmp	0x102da


0x10312:	mov	byte ptr [rbp + 8], 0x13
0x10316:	jmp	0x100e4


0x10342:	mov	byte ptr [rbp + 8], 0x12
0x10346:	jmp	0x100e4


0x10370:	mov	byte ptr [rbp + 8], 0xb
0x10374:	mov	eax, 1
0x10379:	jmp	0x100e4


0x10392:	mov	byte ptr [rbp + 8], 9
0x10396:	jmp	0x100e4


0x103b2:	mov	byte ptr [rbp + 8], 8
0x103b6:	jmp	0x100e4


0x103c6:	add	r14, 1
0x103ca:	cmp	r14, qword ptr [rbx + 0x58]
0x103ce:	jne	0x106cb


0x103d4:	mov	byte ptr [rbp + 8], 0xc
0x103d8:	mov	dword ptr [rbp], 0x20
0x103df:	mov	eax, 1
0x103e4:	jmp	0x100e4


0x106cb:	lea	rdi, [rsp + 0x10]
0x106d0:	mov	rdx, r15
0x106d3:	mov	qword ptr [rbx + 0x48], r14
0x106d7:	mov	rsi, rbx
0x106da:	call	0x10020


0x106df:	movzx	eax, byte ptr [rsp + 0x18]
0x106e4:	sub	qword ptr [rbx + 0x48], 1
0x106e9:	lea	edx, [rax - 9]
0x106ec:	mov	eax, 1
0x106f1:	cmp	dl, 1
0x106f4:	ja	0x100e4


0x106fa:	jmp	0x103d4


0x103e9:	test	r15d, 0x8400
0x103f0:	mov	eax, 2
0x103f5:	jne	0x100e4


0x103fb:	mov	byte ptr [rbp + 8], 0xa
0x103ff:	jmp	0x100e4


0x10404:	and	r15d, 0x1200
0x1040b:	mov	eax, 2
0x10410:	cmp	r15, 0x200
0x10417:	jne	0x100e4


0x1041d:	jmp	0x102b9


0x10422:	test	r15d, 0x80000
0x10429:	mov	eax, 2
0x1042e:	jne	0x100e4


0x10434:	mov	byte ptr [rbp + 8], 0x20
0x10438:	jmp	0x100e4


0x1043d:	test	r15d, 0x80000
0x10444:	mov	eax, 2
0x10449:	jne	0x100e4


0x1044f:	mov	byte ptr [rbp + 8], 0x22
0x10453:	jmp	0x100e4


0x10458:	and	r15d, 0x1200
0x1045f:	mov	eax, 2
0x10464:	cmp	r15, 0x200
0x1046b:	jne	0x100e4


0x10471:	jmp	0x10269


0x10476:	test	r15d, 0x80000
0x1047d:	mov	eax, 2
0x10482:	jne	0x100e4


0x10488:	mov	byte ptr [rbp + 8], 0xc
0x1048c:	mov	dword ptr [rbp], 0x100
0x10493:	jmp	0x100e4


0x10498:	test	r15d, 0x80000
0x1049f:	mov	eax, 2
0x104a4:	jne	0x100e4


0x104aa:	mov	byte ptr [rbp + 8], 0xc
0x104ae:	mov	dword ptr [rbp], 0x40
0x104b5:	jmp	0x100e4


0x104ba:	test	r15d, 0x80000
0x104c1:	mov	eax, 2
0x104c6:	jne	0x100e4


0x104cc:	mov	byte ptr [rbp + 8], 0x21
0x104d0:	jmp	0x100e4


0x104d5:	test	r15d, 0x80000
0x104dc:	mov	eax, 2
0x104e1:	jne	0x100e4


0x104e7:	mov	byte ptr [rbp + 8], 0x23
0x104eb:	jmp	0x100e4


0x104f0:	test	r15d, 0x80000
0x104f7:	mov	eax, 2
0x104fc:	jne	0x100e4


0x10502:	mov	byte ptr [rbp + 8], 0xc
0x10506:	mov	dword ptr [rbp], 0x200
0x1050d:	jmp	0x100e4


0x10512:	and	r15d, 0x402
0x10519:	mov	eax, 2
0x1051e:	cmp	r15, 2
0x10522:	jne	0x100e4


0x10528:	jmp	0x10312


0x1052d:	test	r15d, 0x80000
0x10534:	mov	eax, 2
0x10539:	jne	0x100e4


0x1053f:	mov	byte ptr [rbp + 8], 0xc
0x10543:	mov	dword ptr [rbp], 9
0x1054a:	jmp	0x100e4


0x1054f:	test	r15d, 0x80000
0x10556:	mov	eax, 2
0x1055b:	jne	0x100e4


0x10561:	mov	byte ptr [rbp + 8], 0xc
0x10565:	mov	dword ptr [rbp], 6
0x1056c:	jmp	0x100e4


0x10571:	test	r15d, 0x4000
0x10578:	mov	eax, 2
0x1057d:	jne	0x100e4


0x10583:	mov	edx, dword ptr [rsp + 8]
0x10587:	mov	byte ptr [rbp + 8], 4
0x1058b:	sub	edx, 0x31
0x1058e:	movsxd	rdx, edx
0x10591:	mov	qword ptr [rbp], rdx
0x10595:	jmp	0x100e4


0x1059a:	and	r15d, 0x402
0x105a1:	mov	eax, 2
0x105a6:	cmp	r15, 2
0x105aa:	jne	0x100e4


0x105b0:	jmp	0x10342


0x105b5:	test	r15d, 0x2000
0x105bc:	mov	eax, 2
0x105c1:	jne	0x100e4


0x105c7:	jmp	0x10392


0x105cc:	test	r15d, 0x2000
0x105d3:	mov	eax, 2
0x105d8:	jne	0x100e4


0x105de:	jmp	0x103b2


0x105e3:	test	r15d, 0x80000
0x105ea:	mov	eax, 2
0x105ef:	jne	0x100e4


0x105f5:	mov	byte ptr [rbp + 8], 0xc
0x105f9:	mov	dword ptr [rbp], 0x80
0x10600:	jmp	0x100e4


0x1071d:	nop	dword ptr [rax]


0x107d6:	nop	word ptr cs:[rax + rax]


0x10841:	mov	rbx, qword ptr [rbp + 0x30]
0x10845:	mov	r15, qword ptr [rsp + 0x20]
0x1084a:	mov	rsi, rdi
0x1084d:	mov	r13, qword ptr [rsp + 0x18]
0x10852:	mov	qword ptr [rsp], r8
0x10856:	lea	rax, [rbx + 1]
0x1085a:	mov	rdx, r15
0x1085d:	or	rdx, 0x800000
0x10864:	mov	rdi, r13
0x10867:	mov	qword ptr [rbp + 0x30], rax
0x1086b:	call	0x10020


0x10870:	cdqe	
0x10872:	add	qword ptr [r14 + 0x48], rax
0x10876:	xor	eax, eax
0x10878:	cmp	byte ptr [r13 + 8], 9
0x1087d:	mov	rdx, r13
0x10880:	je	0x11380


0x11380:	cmp	rbx, 8
0x11384:	jbe	0x113eb


0x10886:	mov	r13, qword ptr [rsp + 0x40]
0x1088b:	mov	r8, qword ptr [rsp]
0x1088f:	mov	rcx, r15
0x10892:	mov	rsi, rbp
0x10895:	mov	rdi, r14
0x10898:	add	r8, 1
0x1089c:	mov	r9, r13
0x1089f:	call	0x11e50


0x113eb:	mov	rsi, qword ptr [rsp + 0x10]
0x113f0:	mov	edx, 1
0x113f5:	mov	ecx, ebx
0x113f7:	shl	edx, cl
0x113f9:	movsxd	rdx, edx
0x113fc:	or	qword ptr [rsi + 0xa8], rdx
0x11403:	jmp	0x11386


0x11386:	mov	rdi, qword ptr [rsp + 0x10]
0x1138b:	lea	r8, [rsp + 0xc0]
0x11393:	xor	ecx, ecx
0x11395:	mov	rdx, rax
0x11398:	mov	byte ptr [rsp + 0xc8], 0x11
0x113a0:	lea	rsi, [rdi + 0x80]
0x113a7:	add	rdi, 0x70
0x113ab:	call	0x80e0


0x113b0:	test	rax, rax
0x113b3:	mov	qword ptr [rsp + 0x28], rax
0x113b8:	je	0x11348


0x11348:	mov	rax, qword ptr [rsp + 0x40]
0x1134d:	mov	dword ptr [rax], 0xc
0x11353:	jmp	0x108e0


0x113ba:	mov	qword ptr [rax + 0x28], rbx
0x113be:	jmp	0x1097c


0x108a4:	mov	r11d, dword ptr [r13]
0x108a8:	test	r11d, r11d
0x108ab:	jne	0x108e0


0x108ad:	mov	rdx, qword ptr [rsp + 0x18]
0x108b2:	cmp	byte ptr [rdx + 8], 9
0x108b6:	je	0x11380


0x108bc:	test	rax, rax
0x108bf:	je	0x108d2


0x108d2:	mov	rax, qword ptr [rsp + 0x40]
0x108d7:	mov	dword ptr [rax], 8
0x108dd:	nop	dword ptr [rax]
0x108e0:	mov	qword ptr [rsp + 0x28], 0
0x108e9:	nop	dword ptr [rax]
0x108f0:	mov	rdi, qword ptr [rsp + 0x118]
0x108f8:	xor	rdi, qword ptr fs:[0x28]
0x10901:	mov	rax, qword ptr [rsp + 0x28]
0x10906:	jne	0x11c7e


0x108c1:	lea	rsi, [rip - 0x9d28]
0x108c8:	xor	edx, edx
0x108ca:	mov	rdi, rax
0x108cd:	call	0x5d00


0x1091e:	test	qword ptr [rsp + 0x20], 0x1000000
0x10927:	jne	0x10b7d


0x1092d:	mov	rax, qword ptr [rsp + 0x20]
0x10932:	test	al, 0x20
0x10934:	jne	0x10b7d


0x1093a:	test	al, 0x10
0x1093c:	jne	0x117a5


0x10942:	cmp	cl, 9
0x10945:	je	0x11358


0x117a5:	mov	rbx, qword ptr [rsp + 0x18]
0x117aa:	mov	rdx, rax
0x117ad:	mov	rsi, r14
0x117b0:	mov	qword ptr [rsp], r8
0x117b4:	mov	r15, rax
0x117b7:	mov	rdi, rbx
0x117ba:	call	0x10020


0x11358:	test	qword ptr [rsp + 0x20], 0x20000
0x11361:	jne	0x1094b


0x1094b:	mov	rax, qword ptr [rsp + 0x10]
0x10950:	mov	r8, qword ptr [rsp + 0x18]
0x10955:	xor	ecx, ecx
0x10957:	xor	edx, edx
0x10959:	lea	rsi, [rax + 0x80]
0x10960:	lea	rdi, [rax + 0x70]
0x10964:	mov	byte ptr [r8 + 8], 1
0x10969:	call	0x80e0


0x11367:	mov	rax, qword ptr [rsp + 0x40]
0x1136c:	mov	qword ptr [rsp + 0x28], 0
0x11375:	mov	dword ptr [rax], 0x10
0x1137b:	jmp	0x108f0


0x1096e:	test	rax, rax
0x10971:	mov	qword ptr [rsp + 0x28], rax
0x10976:	je	0x11348


0x117bf:	cdqe	
0x117c1:	add	qword ptr [r14 + 0x48], rax
0x117c5:	mov	r9, qword ptr [rsp + 0x40]
0x117ca:	mov	r8, qword ptr [rsp]
0x117ce:	mov	rcx, r15
0x117d1:	mov	rdx, rbx
0x117d4:	mov	rsi, rbp
0x117d7:	mov	rdi, r14
0x117da:	call	0x107e0


0x117df:	mov	qword ptr [rsp + 0x28], rax
0x117e4:	jmp	0x108f0


0x10f11:	mov	rax, qword ptr [rsp + 0x10]
0x10f16:	lea	rbx, [rax + 0x70]
0x10f1a:	lea	r12, [rax + 0x80]
0x10f21:	lea	eax, [rbp - 0x100]
0x10f27:	test	eax, 0xfffffeff
0x10f2c:	jne	0x1159a


0x10eaf:	mov	rax, qword ptr [rsp + 0x10]
0x10eb4:	movzx	eax, byte ptr [rax + 0xb0]
0x10ebb:	test	al, 0x10
0x10ebd:	jne	0x10f11


0x10f32:	cmp	ebp, 0x100
0x10f38:	mov	r15, qword ptr [rsp + 0x18]
0x10f3d:	je	0x11572


0x1159a:	mov	r8, qword ptr [rsp + 0x18]
0x1159f:	xor	ecx, ecx
0x115a1:	xor	edx, edx
0x115a3:	mov	rsi, r12
0x115a6:	mov	rdi, rbx
0x115a9:	call	0x80e0


0x10ebf:	mov	rdi, qword ptr [rsp + 0x10]
0x10ec4:	or	eax, 0x10
0x10ec7:	test	al, 8
0x10ec9:	mov	byte ptr [rdi + 0xb0], al
0x10ecf:	jne	0x11ad3


0x11572:	mov	dword ptr [r15], 6
0x11579:	mov	r8, r15
0x1157c:	xor	ecx, ecx
0x1157e:	xor	edx, edx
0x11580:	mov	rsi, r12
0x11583:	mov	rdi, rbx
0x11586:	call	0x80e0


0x10f43:	mov	dword ptr [r15], 5
0x10f4a:	mov	r8, r15
0x10f4d:	xor	ecx, ecx
0x10f4f:	xor	edx, edx
0x10f51:	mov	rsi, r12
0x10f54:	mov	rdi, rbx
0x10f57:	call	0x80e0


0x10ed5:	movabs	rdx, 0x3ff000000000000
0x10edf:	test	al, 4
0x10ee1:	mov	qword ptr [rdi + 0xb8], rdx
0x10ee8:	movabs	rdx, 0x7fffffe87fffffe
0x10ef2:	mov	qword ptr [rdi + 0xc0], rdx
0x10ef9:	je	0x11a58


0x11ad3:	xor	ebx, ebx
0x11ad5:	xor	r12d, r12d
0x11ad8:	jmp	0x11a63


0x11a58:	mov	ebx, 0x80
0x11a5d:	mov	r12d, 2
0x11a63:	call	0x1c70


0x10eff:	pxor	xmm0, xmm0
0x10f03:	mov	rax, qword ptr [rsp + 0x18]
0x10f08:	movups	xmmword ptr [rdi + 0xc8], xmm0
0x10f0f:	mov	ebp, dword ptr [rax]
0x10f11:	mov	rax, qword ptr [rsp + 0x10]
0x10f16:	lea	rbx, [rax + 0x70]
0x10f1a:	lea	r12, [rax + 0x80]
0x10f21:	lea	eax, [rbp - 0x100]
0x10f27:	test	eax, 0xfffffeff
0x10f2c:	jne	0x1159a


0x11a63:	call	0x1c70


0x11a68:	movsxd	rdx, ebx
0x11a6b:	movsxd	r9, r12d
0x11a6e:	mov	r8d, 1
0x11a74:	add	rdx, rdx
0x11a77:	add	rdx, qword ptr [rax]
0x11a7a:	mov	rax, qword ptr [rsp + 0x10]
0x11a7f:	lea	rdi, [rax + r9*8]
0x11a83:	xor	eax, eax
0x11a85:	jmp	0x11aa2


0x11aa2:	test	byte ptr [rdx + rax*2], 8
0x11aa6:	mov	ecx, eax
0x11aa8:	je	0x11a90


0x11a90:	lea	esi, [rbx + rax]
0x11a93:	cmp	esi, 0x5f
0x11a96:	je	0x11aaa


0x11aaa:	mov	rsi, r8
0x11aad:	shl	rsi, cl
0x11ab0:	or	qword ptr [rdi + 0xb8], rsi
0x11ab7:	jmp	0x11a98


0x11a98:	add	rax, 1
0x11a9c:	cmp	rax, 0x40
0x11aa0:	je	0x11ab9


0x11ab9:	add	r9, 1
0x11abd:	add	ebx, 0x40
0x11ac0:	sub	rdx, -0x80
0x11ac4:	add	rdi, 8
0x11ac8:	cmp	r9d, 3
0x11acc:	jle	0x11a83


0x11a83:	xor	eax, eax
0x11a85:	jmp	0x11aa2


0x11ace:	jmp	0x10f11


0x10f5c:	mov	dword ptr [r15], 0xa
0x10f63:	mov	rbp, rax
0x10f66:	mov	r8, qword ptr [rsp + 0x18]
0x10f6b:	xor	ecx, ecx
0x10f6d:	xor	edx, edx
0x10f6f:	mov	rsi, r12
0x10f72:	mov	rdi, rbx
0x10f75:	call	0x80e0


0x10f7a:	lea	r8, [rsp + 0xc0]
0x10f82:	mov	rdx, rbp
0x10f85:	mov	rdi, rbx
0x10f88:	mov	rcx, rax
0x10f8b:	mov	rsi, r12
0x10f8e:	mov	r13, rax
0x10f91:	mov	byte ptr [rsp + 0xc8], 0xa
0x10f99:	call	0x80e0


0x10f9e:	test	rbp, rbp
0x10fa1:	mov	rdi, rax
0x10fa4:	mov	qword ptr [rsp + 0x28], rax
0x10fa9:	sete	dl
0x10fac:	test	r13, r13
0x10faf:	sete	al
0x10fb2:	or	dl, al
0x10fb4:	jne	0x11348


0x10fba:	test	rdi, rdi
0x10fbd:	je	0x11348


0x10fc3:	mov	rdx, qword ptr [rsp + 0x20]
0x10fc8:	mov	rdi, qword ptr [rsp + 0x18]
0x10fcd:	mov	rsi, r14
0x10fd0:	call	0x10020


0x10fd5:	cdqe	
0x10fd7:	add	qword ptr [r14 + 0x48], rax
0x10fdb:	jmp	0x108f0


0x1158b:	mov	dword ptr [r15], 9
0x11592:	mov	rbp, rax
0x11595:	jmp	0x10f66


0x10f66:	mov	r8, qword ptr [rsp + 0x18]
0x10f6b:	xor	ecx, ecx
0x10f6d:	xor	edx, edx
0x10f6f:	mov	rsi, r12
0x10f72:	mov	rdi, rbx
0x10f75:	call	0x80e0


0x115ae:	test	rax, rax
0x115b1:	mov	qword ptr [rsp + 0x28], rax
0x115b6:	jne	0x10fc3


0x115bc:	jmp	0x11348


0x10fe0:	mov	esi, 1
0x10fe5:	mov	edi, 0x20
0x10fea:	mov	qword ptr [rsp + 0x98], 0
0x10ff6:	call	0x1a70


0x10ffb:	mov	esi, 1
0x11000:	mov	r12, rax
0x11003:	mov	edi, 0x50
0x11008:	call	0x1a70


0x1100d:	test	r12, r12
0x11010:	mov	r13, rax
0x11013:	sete	dl
0x11016:	test	rax, rax
0x11019:	sete	al
0x1101c:	or	dl, al
0x1101e:	jne	0x117f9


0x11024:	mov	r10, qword ptr [rsp + 0x18]
0x11029:	mov	rdx, qword ptr [rsp + 0x20]
0x1102e:	mov	rsi, r14
0x11031:	mov	rdi, r10
0x11034:	call	0x5910


0x117f9:	mov	rdi, r12
0x117fc:	call	0x1880


0x11801:	mov	rdi, r13
0x11804:	call	0x1880


0x11809:	jmp	0x11348


0x11039:	movsxd	rbx, eax
0x1103c:	movzx	eax, byte ptr [r10 + 8]
0x11041:	cmp	al, 2
0x11043:	je	0x117e9


0x117e9:	mov	rax, qword ptr [rsp + 0x40]
0x117ee:	mov	dword ptr [rax], 2
0x117f4:	jmp	0x11458


0x11049:	cmp	al, 0x19
0x1104b:	mov	byte ptr [rsp + 0x57], 0
0x11050:	je	0x1151a


0x1151a:	or	byte ptr [r13 + 0x20], 1
0x1151f:	test	qword ptr [rsp + 0x20], 0x100
0x11528:	je	0x11532


0x11056:	cmp	al, 0x15
0x11058:	je	0x11564


0x11532:	add	qword ptr [r14 + 0x48], rbx
0x11536:	mov	r11, qword ptr [rsp + 0x18]
0x1153b:	mov	rsi, r14
0x1153e:	mov	rdx, qword ptr [rsp + 0x20]
0x11543:	mov	rdi, r11
0x11546:	call	0x5910


0x1152a:	or	qword ptr [r12], 0x400
0x11532:	add	qword ptr [r14 + 0x48], rbx
0x11536:	mov	r11, qword ptr [rsp + 0x18]
0x1153b:	mov	rsi, r14
0x1153e:	mov	rdx, qword ptr [rsp + 0x20]
0x11543:	mov	rdi, r11
0x11546:	call	0x5910


0x11564:	mov	rax, qword ptr [rsp + 0x18]
0x11569:	mov	byte ptr [rax + 8], 1
0x1156d:	jmp	0x1105e


0x1105e:	lea	rax, [rsp + 0xd0]
0x11066:	mov	r15, qword ptr [rsp + 0x18]
0x1106b:	lea	rbp, [rip + 0x43c2]
0x11072:	mov	qword ptr [rsp + 0x48], 0
0x1107b:	mov	r9d, 1
0x11081:	mov	qword ptr [rsp + 0x30], 0
0x1108a:	mov	qword ptr [rsp + 0x28], rax
0x1108f:	lea	rax, [rsp + 0xa0]
0x11097:	mov	qword ptr [rsp], rax
0x1109b:	lea	rax, [rsp + 0x98]
0x110a3:	mov	qword ptr [rsp + 0x58], rax
0x110a8:	lea	rax, [rsp + 0xc0]
0x110b0:	mov	qword ptr [rsp + 0x60], rax
0x110b5:	lea	rax, [rsp + 0xf0]
0x110bd:	mov	qword ptr [rsp + 0x68], rax
0x110c2:	mov	rax, qword ptr [rsp + 0x28]
0x110c7:	mov	r8, qword ptr [rsp + 0x20]
0x110cc:	and	r9d, 1
0x110d0:	mov	rdi, qword ptr [rsp]
0x110d4:	mov	ecx, ebx
0x110d6:	mov	rdx, r15
0x110d9:	mov	rsi, r14
0x110dc:	mov	dword ptr [rsp + 0xa0], 3
0x110e7:	mov	qword ptr [rsp + 0xa8], rax
0x110ef:	call	0xfdc0


0x1154b:	mov	ebx, eax
0x1154d:	movzx	eax, byte ptr [r11 + 8]
0x11552:	cmp	al, 2
0x11554:	je	0x117e9


0x1155a:	mov	byte ptr [rsp + 0x57], 1
0x1155f:	jmp	0x11056


0x11148:	mov	rbx, qword ptr [rsp + 0x40]
0x1114d:	cmp	cl, 0x23
0x11150:	mov	rsi, qword ptr [rdi + 0x78]
0x11154:	sete	r8b
0x11158:	lea	rcx, [rip + 0x3aa2]
0x1115f:	lea	rdx, [rip + 0x3e49]
0x11166:	movzx	r8d, r8b
0x1116a:	mov	r9, rbx
0x1116d:	mov	rdi, qword ptr [rsp + 0x10]
0x11172:	call	0xb430


0x11177:	mov	edi, dword ptr [rbx]
0x11179:	mov	qword ptr [rsp + 0x28], rax
0x1117e:	test	edi, edi
0x11180:	je	0x1097c


0x11186:	test	rax, rax
0x11189:	jne	0x1097c


0x1118f:	jmp	0x108e0


0x1116d:	mov	rdi, qword ptr [rsp + 0x10]
0x11172:	call	0xb430


0x111bf:	mov	rax, qword ptr [rsp + 0x18]
0x111c4:	mov	rdi, qword ptr [rsp + 0x10]
0x111c9:	mov	rcx, qword ptr [rax]
0x111cc:	mov	eax, 1
0x111d1:	shl	eax, cl
0x111d3:	cdqe	
0x111d5:	test	qword ptr [rdi + 0xa8], rax
0x111dc:	je	0x1180e


0x1180e:	mov	rax, qword ptr [rsp + 0x40]
0x11813:	mov	qword ptr [rsp + 0x28], 0
0x1181c:	mov	dword ptr [rax], 6
0x11822:	jmp	0x108f0


0x111e2:	mov	rbx, qword ptr [rsp + 0x10]
0x111e7:	mov	r8, qword ptr [rsp + 0x18]
0x111ec:	xor	ecx, ecx
0x111ee:	xor	edx, edx
0x111f0:	or	qword ptr [rbx + 0xa0], rax
0x111f7:	lea	rsi, [rbx + 0x80]
0x111fe:	lea	rdi, [rbx + 0x70]
0x11202:	call	0x80e0


0x11207:	test	rax, rax
0x1120a:	mov	qword ptr [rsp + 0x28], rax
0x1120f:	je	0x11348


0x11215:	add	qword ptr [rbx + 0x98], 1
0x1121d:	or	byte ptr [rbx + 0xb0], 2
0x11224:	jmp	0x1097c


0x11229:	mov	rbx, qword ptr [rsp + 0x10]
0x1122e:	mov	r8, qword ptr [rsp + 0x18]
0x11233:	xor	ecx, ecx
0x11235:	xor	edx, edx
0x11237:	lea	rsi, [rbx + 0x80]
0x1123e:	lea	rdi, [rbx + 0x70]
0x11242:	call	0x80e0


0x11247:	test	rax, rax
0x1124a:	mov	qword ptr [rsp + 0x28], rax
0x1124f:	je	0x11348


0x11255:	cmp	dword ptr [rbx + 0xb4], 1
0x1125c:	jle	0x1097c


0x11262:	or	byte ptr [rbx + 0xb0], 2
0x11269:	jmp	0x1097c


0x1126e:	mov	rax, qword ptr [rsp + 0x10]
0x11273:	mov	r8, qword ptr [rsp + 0x18]
0x11278:	xor	ecx, ecx
0x1127a:	xor	edx, edx
0x1127c:	lea	rbx, [rax + 0x70]
0x11280:	lea	rbp, [rax + 0x80]
0x11287:	mov	rdi, rbx
0x1128a:	mov	rsi, rbp
0x1128d:	call	0x80e0


0x11292:	test	rax, rax
0x11295:	mov	qword ptr [rsp + 0x28], rax
0x1129a:	je	0x11348


0x112a0:	mov	rax, qword ptr [rsp + 0x10]
0x112a5:	lea	r12, [rsp + 0xc0]
0x112ad:	mov	r15, qword ptr [rsp + 0x28]
0x112b2:	cmp	dword ptr [rax + 0xb4], 1
0x112b9:	jle	0x1097c


0x112bf:	mov	rax, qword ptr [r14 + 0x48]
0x112c3:	cmp	qword ptr [r14 + 0x68], rax
0x112c7:	jle	0x115d1


0x115d1:	mov	qword ptr [rsp + 0x28], r15
0x115d6:	jmp	0x1097c


0x112cd:	cmp	rax, qword ptr [r14 + 0x30]
0x112d1:	je	0x115d1


0x112d7:	mov	rdx, qword ptr [r14 + 0x10]
0x112db:	cmp	dword ptr [rdx + rax*4], -1
0x112df:	jne	0x115d1


0x112e5:	mov	r13, qword ptr [rsp + 0x18]
0x112ea:	mov	rdx, qword ptr [rsp + 0x20]
0x112ef:	mov	rsi, r14
0x112f2:	mov	rdi, r13
0x112f5:	call	0x10020


0x112fa:	cdqe	
0x112fc:	add	qword ptr [r14 + 0x48], rax
0x11300:	mov	r8, r13
0x11303:	xor	ecx, ecx
0x11305:	xor	edx, edx
0x11307:	mov	rsi, rbp
0x1130a:	mov	rdi, rbx
0x1130d:	call	0x80e0


0x11312:	mov	rdx, r15
0x11315:	mov	r13, rax
0x11318:	mov	r8, r12
0x1131b:	mov	rcx, rax
0x1131e:	mov	rsi, rbp
0x11321:	mov	rdi, rbx
0x11324:	mov	byte ptr [rsp + 0xc8], 0x10
0x1132c:	call	0x80e0


0x11331:	test	r13, r13
0x11334:	mov	r15, rax
0x11337:	sete	dl
0x1133a:	test	rax, rax
0x1133d:	sete	al
0x11340:	or	dl, al
0x11342:	je	0x112bf


0x113c3:	mov	rax, qword ptr [rsp + 0x40]
0x113c8:	mov	qword ptr [rsp + 0x28], 0
0x113d1:	mov	dword ptr [rax], 5
0x113d7:	jmp	0x108f0


0x11405:	mov	rsi, qword ptr [rsp + 0xa8]
0x1140d:	mov	rdi, r12
0x11410:	call	0xabd0


0x11415:	mov	rdx, qword ptr [rsp + 0x40]
0x1141a:	test	eax, eax
0x1141c:	mov	dword ptr [rdx], eax
0x1141e:	jne	0x11458


0x1143d:	mov	rsi, qword ptr [rsp + 0xa8]
0x11445:	mov	rdi, r12
0x11448:	call	0xabd0


0x1144d:	mov	rdx, qword ptr [rsp + 0x40]
0x11452:	test	eax, eax
0x11454:	mov	dword ptr [rdx], eax
0x11456:	je	0x11420


0x11487:	mov	rdx, qword ptr [r13 + 0x28]
0x1148b:	cmp	rdx, qword ptr [rsp + 0x30]
0x11490:	mov	rax, qword ptr [r13]
0x11494:	je	0x1198e


0x1198e:	mov	rdx, qword ptr [rsp + 0x30]
0x11993:	lea	rdi, [rdx + rdx + 1]
0x11998:	lea	rsi, [rdi*4]
0x119a0:	mov	qword ptr [rsp + 0x30], rdi
0x119a5:	mov	rdi, rax
0x119a8:	call	0x1b30


0x1149a:	lea	rcx, [rdx + 1]
0x1149e:	mov	qword ptr [r13 + 0x28], rcx
0x114a2:	mov	ecx, dword ptr [rsp + 0xa8]
0x114a9:	mov	dword ptr [rax + rdx*4], ecx
0x114ac:	jmp	0x11420


0x119ad:	test	rax, rax
0x119b0:	je	0x11903


0x119b6:	mov	qword ptr [r13], rax
0x119ba:	mov	rdx, qword ptr [r13 + 0x28]
0x119be:	jmp	0x1149a


0x114b1:	movzx	edx, byte ptr [rsp + 0xa8]
0x114b9:	mov	esi, 1
0x114be:	mov	rax, rdx
0x114c1:	and	edx, 0x3f
0x114c4:	shr	rax, 3
0x114c8:	mov	ecx, edx
0x114ca:	and	eax, 0x18
0x114cd:	shl	rsi, cl
0x114d0:	or	qword ptr [r12 + rax], rsi
0x114d4:	jmp	0x11420


0x11cb3:	nop	dword ptr [rax]
0x11cb6:	nop	word ptr cs:[rax + rax]


0x11e42:	nop	dword ptr [rax]
0x11e46:	nop	word ptr cs:[rax + rax]


0x11fcf:	nop	


0x12807:	or	byte ptr [r13 + 0xb0], 1
0x1280f:	mov	r15, qword ptr [rdx + 8]
0x12813:	test	r15, r15
0x12816:	je	0x12e29


0x12e29:	mov	rax, qword ptr [rdx + 0x20]
0x12e2d:	mov	rcx, qword ptr [rax + 0x38]
0x12e31:	jmp	0x12824


0x1281c:	mov	rax, qword ptr [r15 + 0x18]
0x12820:	mov	rcx, qword ptr [rax + 0x38]
0x12824:	mov	rax, qword ptr [rdx + 0x10]
0x12828:	test	rax, rax
0x1282b:	je	0x12e1c


0x12824:	mov	rax, qword ptr [rdx + 0x10]
0x12828:	test	rax, rax
0x1282b:	je	0x12e1c


0x12e1c:	mov	rax, qword ptr [rdx + 0x20]
0x12e20:	mov	r9, qword ptr [rax + 0x38]
0x12e24:	jmp	0x12839


0x12831:	mov	rax, qword ptr [rax + 0x18]
0x12835:	mov	r9, qword ptr [rax + 0x38]
0x12839:	test	rcx, rcx
0x1283c:	js	0x130a1


0x12839:	test	rcx, rcx
0x1283c:	js	0x130a1


0x130a1:	lea	rcx, [rip + 0x2458]
0x130a8:	lea	rsi, [rip + 0x1e91]
0x130af:	lea	rdi, [rip + 0x1f45]
0x130b6:	mov	edx, 0x5af
0x130bb:	call	0x1a00


0x12842:	test	r9, r9
0x12845:	js	0x13063


0x13063:	lea	rcx, [rip + 0x2496]
0x1306a:	lea	rsi, [rip + 0x1ecf]
0x13071:	lea	rdi, [rip + 0x1f8d]
0x13078:	mov	edx, 0x5b0
0x1307d:	call	0x1a00


0x1284b:	mov	rax, qword ptr [r13 + 0x28]
0x1284f:	lea	rdi, [rdi + rdi*2]
0x12853:	mov	qword ptr [rsp + 0x38], rsi
0x12858:	mov	qword ptr [rsp + 0x30], r9
0x1285d:	mov	qword ptr [rsp + 0x18], rcx
0x12862:	mov	qword ptr [rsp + 0x10], rdx
0x12867:	lea	r10, [rax + rdi*8]
0x1286b:	mov	edi, 0x10
0x12870:	mov	qword ptr [r10], 2
0x12877:	mov	qword ptr [rsp], r10
0x1287b:	call	0x1ac0


0x12880:	mov	r10, qword ptr [rsp]
0x12884:	test	rax, rax
0x12887:	mov	rdx, qword ptr [rsp + 0x10]
0x1288c:	mov	rcx, qword ptr [rsp + 0x18]
0x12891:	mov	r9, qword ptr [rsp + 0x30]
0x12896:	mov	rsi, qword ptr [rsp + 0x38]
0x1289b:	mov	qword ptr [r10 + 0x10], rax
0x1289f:	je	0x12b3a


0x128a5:	cmp	rcx, r9
0x128a8:	je	0x12e7d


0x12e7d:	mov	qword ptr [r10 + 8], 1
0x12e85:	mov	qword ptr [rax], rcx
0x12e88:	jmp	0x12785


0x128ae:	mov	qword ptr [r10 + 8], 2
0x128b6:	jl	0x12e64


0x12785:	xor	edi, edi
0x12787:	test	r15, r15
0x1278a:	je	0x1279b


0x12e64:	mov	qword ptr [rax], rcx
0x12e67:	mov	qword ptr [rax + 8], r9
0x12e6b:	jmp	0x12785


0x128bc:	mov	qword ptr [rax], r9
0x128bf:	mov	qword ptr [rax + 8], rcx
0x128c3:	jmp	0x12785


0x128c8:	mov	rax, qword ptr [rdx + 0x20]
0x128cc:	lea	rcx, [rdi + rdi*2]
0x128d0:	mov	edi, 8
0x128d5:	mov	qword ptr [rsp + 0x10], rsi
0x128da:	mov	qword ptr [rsp], rdx
0x128de:	mov	r14, qword ptr [rax + 0x38]
0x128e2:	mov	rax, qword ptr [r13 + 0x28]
0x128e6:	lea	r15, [rax + rcx*8]
0x128ea:	mov	qword ptr [r15], 1
0x128f1:	mov	qword ptr [r15 + 8], 1
0x128f9:	call	0x1ac0


0x128fe:	test	rax, rax
0x12901:	mov	qword ptr [r15 + 0x10], rax
0x12905:	mov	rdx, qword ptr [rsp]
0x12909:	mov	rsi, qword ptr [rsp + 0x10]
0x1290e:	je	0x12fb8


0x12fb8:	mov	qword ptr [r15 + 8], 0
0x12fc0:	mov	qword ptr [r15], 0
0x12fc7:	jmp	0x12b3a


0x12914:	mov	qword ptr [rax], r14
0x12917:	mov	r15, qword ptr [rdx + 8]
0x1291b:	jmp	0x12785


0x12920:	cmp	qword ptr [rdx + 0x20], 0
0x12925:	je	0x12781


0x12781:	mov	r15, qword ptr [rdx + 8]
0x12785:	xor	edi, edi
0x12787:	test	r15, r15
0x1278a:	je	0x1279b


0x1292b:	lea	rcx, [rip + 0x2bce]
0x12932:	lea	rsi, [rip + 0x2607]
0x12939:	lea	rdi, [rip + 0x26a8]
0x12940:	mov	edx, 0x59f
0x12945:	call	0x1a00


0x1296a:	mov	rax, qword ptr [r13 + 0x28]
0x1296e:	lea	rcx, [rdi + rdi*2]
0x12972:	mov	edi, 8
0x12977:	mov	qword ptr [rsp + 0x18], rsi
0x1297c:	mov	qword ptr [rsp + 0x10], rdx
0x12981:	lea	rcx, [rax + rcx*8]
0x12985:	mov	qword ptr [rcx], 1
0x1298c:	mov	qword ptr [rcx + 8], 1
0x12994:	mov	qword ptr [rsp], rcx
0x12998:	call	0x1ac0


0x1299d:	mov	rcx, qword ptr [rsp]
0x129a1:	test	rax, rax
0x129a4:	mov	rdx, qword ptr [rsp + 0x10]
0x129a9:	mov	rsi, qword ptr [rsp + 0x18]
0x129ae:	mov	qword ptr [rcx + 0x10], rax
0x129b2:	je	0x13000


0x13000:	mov	qword ptr [rcx + 8], 0
0x13008:	mov	qword ptr [rcx], 0
0x1300f:	mov	eax, 0xc
0x13014:	jmp	0x122f0


0x129b8:	mov	qword ptr [rax], r15
0x129bb:	mov	r15, qword ptr [rdx + 8]
0x129bf:	jmp	0x12785


0x12f09:	mov	r8d, eax
0x12f0c:	add	rdx, 1
0x12f10:	add	rcx, 0x10
0x12f14:	cmp	rdx, r10
0x12f17:	jne	0x12d8e


0x12f1d:	or	r14b, r8b
0x12f20:	je	0x1302a


0x12d8e:	cmp	byte ptr [rcx + 8], 0xc
0x12d92:	ja	0x1305e


0x12f26:	mov	rax, rdx
0x12f29:	shl	rax, 4
0x12f2d:	add	rax, rsi
0x12f30:	jmp	0x12f48


0x12f48:	movzx	edx, byte ptr [rsi + 8]
0x12f4c:	cmp	dl, 1
0x12f4f:	jne	0x12f32


0x12f51:	cmp	byte ptr [rsi], 0
0x12f54:	jns	0x12f3b


0x12f32:	cmp	dl, 5
0x12f35:	jne	0x12f3b


0x12f56:	and	byte ptr [rsi + 0xa], 0xdf
0x12f5a:	jmp	0x12f3b


0x12f3b:	add	rsi, 0x10
0x12f3f:	cmp	rax, rsi
0x12f42:	je	0x13027


0x12f37:	mov	byte ptr [rsi + 8], 7
0x12f3b:	add	rsi, 0x10
0x12f3f:	cmp	rax, rsi
0x12f42:	je	0x13027


0x13027:	mov	r14d, r8d
0x1302a:	cmp	qword ptr [rbx + 0x98], 0
0x13032:	movzx	edx, byte ptr [rbx + 0xb0]
0x13039:	mov	dword ptr [rbx + 0xb4], 1
0x13043:	setg	al
0x13046:	and	edx, 0xfffffff9
0x13049:	or	eax, r14d
0x1304c:	and	eax, 1
0x1304f:	add	eax, eax
0x13051:	or	eax, edx
0x13053:	mov	byte ptr [rbx + 0xb0], al
0x13059:	jmp	0x12b7e


0x12f0c:	add	rdx, 1
0x12f10:	add	rcx, 0x10
0x12f14:	cmp	rdx, r10
0x12f17:	jne	0x12d8e


0x12f69:	mov	edi, dword ptr [rcx]
0x12f6b:	cmp	edi, 0x20
0x12f6e:	je	0x12f0c


0x12f70:	jbe	0x13019


0x13019:	cmp	edi, 0x10
0x1301c:	je	0x12f0c


0x12f76:	cmp	edi, 0x40
0x12f79:	je	0x12f0c


0x13022:	jmp	0x12b7e


0x12f7b:	add	edi, -0x80
0x12f7e:	je	0x12f0c


0x12f80:	jmp	0x12b7e


0x12f96:	cmp	qword ptr [rdi + 0x18], 0
0x12f9b:	je	0x12f0c


0x12fa1:	jmp	0x12b7e


0x130c5:	nop	
0x130c6:	nop	word ptr cs:[rax + rax]


0x1313f:	nop	


0x1314f:	nop	


0x13213:	nop	dword ptr [rax]
0x13216:	nop	word ptr cs:[rax + rax]


0x1369f:	nop	


0x137bb:	nop	dword ptr [rax + rax]


0x13955:	nop	
0x13956:	nop	word ptr cs:[rax + rax]


0x139a4:	nop	
0x139a6:	nop	word ptr cs:[rax + rax]


0x13a4e:	nop	


0x13a68:	nop	dword ptr [rax + rax]


0x13a85:	nop	
0x13a86:	nop	word ptr cs:[rax + rax]


0x13aaa:	nop	word ptr [rax + rax]


0x13acc:	nop	dword ptr [rax]


0x13b11:	nop	word ptr cs:[rax + rax]
0x13b1b:	nop	dword ptr [rax + rax]


0x13b9d:	nop	dword ptr [rax]


0x13bfc:	nop	dword ptr [rax]


0x13c47:	nop	word ptr [rax + rax]


0x13c8f:	nop	


0x13caa:	nop	word ptr [rax + rax]


0x13d4c:	nop	dword ptr [rax]


0x13d5e:	nop	


0x13ddb:	nop	dword ptr [rax + rax]


0x1405e:	nop	


0x14105:	nop	
0x14106:	nop	word ptr cs:[rax + rax]


0x14112:	nop	word ptr cs:[rax + rax]
0x1411c:	nop	dword ptr [rax]


0x35b0:	xor	r10d, r10d
0x35b3:	mov	eax, dword ptr [rsp + 8]
0x35b7:	cmp	eax, 2
0x35ba:	je	0x3b78


0x35e0:	xor	r10d, r10d
0x35e3:	cmp	dword ptr [rsp + 8], 2
0x35e8:	je	0x3af0


0x3608:	mov	edx, 9
0x360d:	mov	ebx, 0x74
0x3612:	cmp	dword ptr [rsp + 8], 2
0x3617:	sete	al
0x361a:	and	al, byte ptr [rsp + 0xf]
0x361e:	jne	0x376e


0x3648:	mov	edx, 8
0x364d:	mov	ebx, 0x62
0x3652:	jmp	0x3624


0x3658:	cmp	dword ptr [rsp + 8], 2
0x365d:	je	0x3a30


0x3700:	cmp	byte ptr [rsp + 0xd], 0
0x3705:	jne	0x38d3


0x3728:	cmp	dword ptr [rsp + 8], 2
0x372d:	sete	dl
0x3730:	xor	eax, eax
0x3732:	jmp	0x3518


0x3740:	mov	edx, 7
0x3745:	mov	ebx, 0x61
0x374a:	jmp	0x3624


0x3750:	cmp	dword ptr [rsp + 8], 2
0x3755:	sete	dl
0x3758:	test	rbp, rbp
0x375b:	jne	0x350c


0x3780:	cmp	dword ptr [rsp + 8], 2
0x3785:	sete	dl
0x3788:	xor	r12d, r12d
0x378b:	jmp	0x3761


0x3790:	cmp	dword ptr [rsp + 8], 2
0x3795:	mov	ebx, 0x20
0x379a:	sete	dl
0x379d:	jmp	0x3761


0x37a0:	mov	edx, 0xd
0x37a5:	mov	ebx, 0x72
0x37aa:	jmp	0x3612


0x37b0:	mov	edx, 0xc
0x37b5:	mov	ebx, 0x66
0x37ba:	jmp	0x3624


0x37c0:	mov	edx, 0xb
0x37c5:	mov	ebx, 0x76
0x37ca:	jmp	0x3624


0x37d0:	mov	edx, 0xa
0x37d5:	mov	ebx, 0x6e
0x37da:	jmp	0x3612


0x3870:	xor	r10d, r10d
0x3873:	cmp	byte ptr [rsp + 0xd], 0
0x3878:	jne	0x366e


0x3890:	mov	edx, 0xc
0x3895:	xor	r10d, r10d
0x3898:	mov	ebx, 0x66
0x389d:	jmp	0x3624


0x38a8:	mov	edx, 0xa
0x38ad:	xor	r10d, r10d
0x38b0:	mov	ebx, 0x6e
0x38b5:	jmp	0x3612


0x38c0:	mov	ebx, 0x61
0x38c5:	jmp	0x3690


0x38d0:	xor	r10d, r10d
0x38d3:	cmp	dword ptr [rsp + 8], 2
0x38d8:	sete	dl
0x38db:	cmp	byte ptr [rsp + 0xf], 0
0x38e0:	jne	0x447a


0x3970:	cmp	dword ptr [rsp + 8], 2
0x3975:	mov	r12d, r10d
0x3978:	sete	dl
0x397b:	xor	r10d, r10d
0x397e:	xor	eax, eax
0x3980:	jmp	0x3518


0x3988:	cmp	dword ptr [rsp + 8], 2
0x398d:	sete	dl
0x3990:	xor	r10d, r10d
0x3993:	jmp	0x3758


0x39a0:	cmp	dword ptr [rsp + 8], 2
0x39a5:	sete	dl
0x39a8:	xor	r10d, r10d
0x39ab:	xor	r12d, r12d
0x39ae:	jmp	0x3761


0x39b8:	cmp	dword ptr [rsp + 8], 2
0x39bd:	mov	r12d, r10d
0x39c0:	mov	ebx, 0x20
0x39c5:	sete	dl
0x39c8:	xor	r10d, r10d
0x39cb:	jmp	0x3761


0x39e8:	mov	ebx, 0x76
0x39ed:	jmp	0x3690


0x39f8:	mov	edx, 9
0x39fd:	xor	r10d, r10d
0x3a00:	mov	ebx, 0x74
0x3a05:	jmp	0x3612


0x3a10:	mov	ebx, 0x62
0x3a15:	jmp	0x3690


0x3fb0:	test	ebx, ebx
0x3fb2:	jne	0x43ad


0x10250:	and	r15d, 0x1200
0x10257:	mov	eax, 1
0x1025c:	cmp	r15, 0x1200
0x10263:	jne	0x100e4


0x10278:	and	r15d, 0x8400
0x1027f:	cmp	r15, 0x8000
0x10286:	je	0x10362


0x102a0:	and	r15d, 0x1200
0x102a7:	mov	eax, 1
0x102ac:	cmp	r15, 0x1200
0x102b3:	jne	0x100e4


0x102c8:	test	r15d, 0x800008
0x102cf:	jne	0x102da


0x102f0:	mov	byte ptr [rbp + 8], 0x14
0x102f4:	mov	eax, 1
0x102f9:	jmp	0x100e4


0x10300:	test	r15d, 0x402
0x10307:	mov	eax, 1
0x1030c:	jne	0x100e4


0x10320:	mov	byte ptr [rbp + 8], 5
0x10324:	mov	eax, 1
0x10329:	jmp	0x100e4


0x10330:	test	r15d, 0x402
0x10337:	mov	eax, 1
0x1033c:	jne	0x100e4


0x10350:	test	r15d, 0x800
0x10357:	mov	eax, 1
0x1035c:	je	0x100e4


0x10380:	test	r15d, 0x2000
0x10387:	mov	eax, 1
0x1038c:	je	0x100e4


0x103a0:	test	r15d, 0x2000
0x103a7:	mov	eax, 1
0x103ac:	je	0x100e4


0x103c0:	test	r15b, 8
0x103c4:	jne	0x103d4


0x10ea0:	mov	rax, qword ptr [rsp + 0x18]
0x10ea5:	mov	ebp, dword ptr [rax]
0x10ea7:	test	ebp, 0x30f
0x10ead:	je	0x10f11


0x11198:	mov	rbx, qword ptr [rsp + 0x40]
0x1119d:	cmp	cl, 0x21
0x111a0:	mov	rsi, qword ptr [rdi + 0x78]
0x111a4:	sete	r8b
0x111a8:	lea	rcx, [rip + 0x304f]
0x111af:	lea	rdx, [rip + 0x3ded]
0x111b6:	movzx	r8d, r8b
0x111ba:	mov	r9, rbx
0x111bd:	jmp	0x1116d


0x12950:	mov	rax, qword ptr [rdx + 0x20]
0x12954:	mov	r15, qword ptr [rax + 0x38]
0x12958:	mov	rax, qword ptr [r13 + 0x18]
0x1295c:	mov	qword ptr [rax + rdi*8], r15
0x12960:	cmp	byte ptr [rdx + 0x30], 4
0x12964:	jne	0x12781


0x12f60:	cmp	byte ptr [rcx], 0
0x12f63:	cmovs	r14d, eax
0x12f67:	jmp	0x12f0c


0x12f88:	mov	rdi, qword ptr [rcx]
0x12f8b:	cmp	qword ptr [rdi + 0x10], 0
0x12f90:	jne	0x12b7e


0x1d53:	nop	dword ptr [rax + rax]


0x1da1:	nop	dword ptr [rax]


0x1db4:	nop	dword ptr [rax]


0x1e6c:	nop	dword ptr [rax]


0x202d:	nop	dword ptr [rax]


0x2476:	nop	word ptr cs:[rax + rax]


0x24c7:	nop	word ptr [rax + rax]


0x2511:	nop	dword ptr [rax]


0x2573:	nop	dword ptr [rax + rax]


0x25ee:	nop	


0x2625:	nop	dword ptr [rax]


0x268f:	nop	


0x2729:	nop	dword ptr [rax]


0x293e:	nop	


0x2973:	nop	dword ptr [rax + rax]


0x29cf:	nop	


0x29e1:	nop	dword ptr [rax]


0x29f7:	nop	word ptr [rax + rax]


0x2a1b:	nop	dword ptr [rax + rax]


0x2a43:	nop	dword ptr [rax + rax]


0x2af1:	nop	dword ptr [rax]


0x30cc:	nop	dword ptr [rax]


0x3148:	nop	dword ptr [rax + rax]


0x323c:	nop	dword ptr [rax]


0x328d:	nop	dword ptr [rax]


0x34b8:	nop	dword ptr [rax + rax]


0x35a7:	nop	word ptr [rax + rax]


0x35de:	nop	


0x3601:	nop	dword ptr [rax]


0x3642:	nop	word ptr [rax + rax]


0x3654:	nop	dword ptr [rax]


0x36f8:	nop	dword ptr [rax + rax]


0x3721:	nop	dword ptr [rax]


0x3737:	nop	word ptr [rax + rax]


0x374f:	nop	


0x377e:	nop	


0x378d:	nop	dword ptr [rax]


0x379f:	nop	


0x37af:	nop	


0x37bf:	nop	


0x37cf:	nop	


0x37df:	nop	


0x384c:	nop	dword ptr [rax]


0x386c:	nop	dword ptr [rax]


0x387e:	nop	


0x388f:	nop	


0x38a2:	nop	word ptr [rax + rax]


0x38ba:	nop	word ptr [rax + rax]


0x38ca:	nop	word ptr [rax + rax]


0x396b:	nop	dword ptr [rax + rax]


0x3985:	nop	dword ptr [rax]


0x3998:	nop	dword ptr [rax + rax]


0x39b3:	nop	dword ptr [rax + rax]


0x39e2:	nop	word ptr [rax + rax]


0x39f2:	nop	word ptr [rax + rax]


0x3a0a:	nop	word ptr [rax + rax]


0x3a1a:	nop	word ptr [rax + rax]


0x3a28:	nop	dword ptr [rax + rax]


0x3a4f:	nop	


0x3ae9:	nop	dword ptr [rax]


0x3b32:	nop	word ptr [rax + rax]


0x3b58:	nop	dword ptr [rax + rax]


0x3b71:	nop	dword ptr [rax]


0x3b92:	nop	word ptr [rax + rax]


0x3cf8:	nop	dword ptr [rax + rax]


0x3e0b:	nop	dword ptr [rax + rax]


0x3e2e:	nop	


0x3ef5:	nop	dword ptr [rax]


0x3fad:	nop	dword ptr [rax]


0x41b6:	nop	word ptr cs:[rax + rax]


0x4249:	nop	dword ptr [rax]


0x42bd:	nop	dword ptr [rax]


0x439d:	nop	dword ptr [rax]


0x46ab:	nop	dword ptr [rax + rax]


0x4edf:	nop	


0x5016:	nop	word ptr cs:[rax + rax]


0x50a5:	nop	dword ptr [rax]


0x50c6:	nop	word ptr cs:[rax + rax]


0x5125:	nop	dword ptr [rax]


0x5161:	nop	dword ptr [rax]


0x51a8:	nop	dword ptr [rax + rax]


0x51f7:	nop	word ptr [rax + rax]


0x5254:	nop	dword ptr [rax]


0x5282:	nop	word ptr [rax + rax]


0x5336:	nop	word ptr cs:[rax + rax]


0x5399:	nop	dword ptr [rax]


0x5612:	nop	word ptr [rax + rax]


0x5699:	nop	dword ptr [rax]


0x56c4:	nop	dword ptr [rax]


0x571d:	nop	dword ptr [rax]


0x582f:	nop	


0x596e:	nop	


0x5977:	nop	word ptr [rax + rax]


0x59c9:	nop	dword ptr [rax]


0x59dd:	nop	dword ptr [rax]


0x59ea:	nop	word ptr [rax + rax]


0x59fa:	nop	word ptr [rax + rax]


0x5a16:	nop	word ptr cs:[rax + rax]


0x5a2a:	nop	word ptr [rax + rax]


0x5a49:	nop	dword ptr [rax]


0x5ae3:	nop	dword ptr [rax + rax]


0x5b42:	nop	word ptr [rax + rax]


0x5c1a:	nop	word ptr [rax + rax]


0x5c39:	nop	dword ptr [rax]


0x5c66:	nop	word ptr cs:[rax + rax]


0x5ccb:	nop	dword ptr [rax + rax]


0x5cd6:	nop	word ptr cs:[rax + rax]


0x5ced:	nop	dword ptr [rax]


0x5d0f:	nop	


0x5d32:	nop	word ptr [rax + rax]


0x5d7f:	nop	


0x5d9d:	nop	dword ptr [rax]


0x5e43:	nop	dword ptr [rax + rax]


0x5e5f:	nop	


0x5ea1:	nop	dword ptr [rax]


0x5ece:	nop	


0x5f15:	nop	dword ptr [rax]


0x5f4d:	nop	dword ptr [rax]


0x5f96:	nop	word ptr cs:[rax + rax]


0x5faa:	nop	word ptr [rax + rax]


0x5fc4:	nop	dword ptr [rax]


0x5fdc:	nop	dword ptr [rax]


0x6057:	nop	word ptr [rax + rax]


0x609c:	nop	dword ptr [rax]


0x6122:	nop	word ptr [rax + rax]


0x6162:	nop	word ptr [rax + rax]


0x625f:	nop	


0x626e:	nop	


0x627e:	nop	


0x62ac:	nop	dword ptr [rax]


0x62c6:	nop	word ptr cs:[rax + rax]


0x6312:	nop	word ptr [rax + rax]


0x63c8:	nop	dword ptr [rax + rax]


0x6507:	nop	word ptr [rax + rax]


0x6645:	nop	dword ptr [rax]


0x6663:	nop	dword ptr [rax + rax]


0x6693:	nop	dword ptr [rax + rax]


0x66c7:	nop	word ptr [rax + rax]


0x6755:	nop	dword ptr [rax]


0x69fa:	nop	word ptr [rax + rax]


0x6a26:	nop	word ptr cs:[rax + rax]


0x6a66:	nop	word ptr cs:[rax + rax]


0x6a81:	nop	dword ptr [rax]


0x6a96:	nop	word ptr cs:[rax + rax]


0x6aeb:	nop	dword ptr [rax + rax]


0x6b84:	nop	dword ptr [rax]


0x6c8b:	nop	dword ptr [rax + rax]


0x6d4c:	nop	dword ptr [rax]


0x6ee2:	nop	word ptr [rax + rax]


0x6f6f:	nop	


0x6fb9:	nop	dword ptr [rax]


0x7016:	nop	word ptr cs:[rax + rax]


0x7131:	nop	dword ptr [rax]


0x716f:	nop	


0x739e:	nop	


0x73b4:	nop	dword ptr [rax]


0x73ce:	nop	


0x73de:	nop	


0x7408:	nop	dword ptr [rax + rax]


0x7444:	nop	dword ptr [rax]


0x7467:	nop	word ptr [rax + rax]


0x7489:	nop	dword ptr [rax]


0x7525:	nop	dword ptr [rax]


0x753d:	nop	dword ptr [rax]


0x7551:	nop	dword ptr [rax]


0x756c:	nop	dword ptr [rax]


0x75ef:	nop	


0x763f:	nop	


0x76a1:	nop	dword ptr [rax]


0x76bf:	nop	


0x772b:	nop	dword ptr [rax + rax]


0x77b5:	nop	dword ptr [rax]


0x78bd:	nop	dword ptr [rax]


0x78dc:	nop	dword ptr [rax]


0x78fc:	nop	dword ptr [rax]


0x790c:	nop	dword ptr [rax]


0x791c:	nop	dword ptr [rax]


0x79cd:	nop	dword ptr [rax]


0x7a31:	nop	dword ptr [rax]


0x7a3b:	nop	dword ptr [rax + rax]


0x7a53:	nop	dword ptr [rax + rax]


0x7a61:	nop	dword ptr [rax]


0x7a8a:	nop	word ptr [rax + rax]


0x7ab1:	nop	dword ptr [rax]


0x7ae9:	nop	dword ptr [rax]


0x7bec:	nop	dword ptr [rax]


0x7c7b:	nop	dword ptr [rax + rax]


0x7ce9:	nop	dword ptr [rax]


0x7d47:	nop	word ptr [rax + rax]


0x7da2:	nop	word ptr [rax + rax]


0x7e6c:	nop	dword ptr [rax]


0x7edb:	nop	dword ptr [rax + rax]


0x7fbd:	nop	dword ptr [rax]


0x7ff3:	nop	dword ptr [rax + rax]


0x7ffa:	nop	word ptr [rax + rax]


0x800d:	nop	dword ptr [rax]


0x803c:	nop	dword ptr [rax]


0x8066:	nop	word ptr cs:[rax + rax]


0x8097:	nop	word ptr [rax + rax]


0x8161:	nop	dword ptr [rax]


0x8227:	nop	word ptr [rax + rax]


0x8234:	nop	dword ptr [rax]


0x8279:	nop	dword ptr [rax]


0x8349:	nop	dword ptr [rax]


0x8443:	nop	dword ptr [rax + rax]


0x853d:	nop	dword ptr [rax]


0x855b:	nop	dword ptr [rax + rax]


0x85cf:	nop	


0x85e6:	nop	word ptr cs:[rax + rax]


0x867d:	nop	dword ptr [rax]


0x86ba:	nop	word ptr [rax + rax]


0x86eb:	nop	dword ptr [rax + rax]


0x8715:	nop	dword ptr [rax]


0x8735:	nop	dword ptr [rax]


0x8755:	nop	dword ptr [rax]


0x87e5:	nop	dword ptr [rax]


0x882e:	nop	


0x8934:	nop	dword ptr [rax]


0x8999:	nop	dword ptr [rax]


0x89c9:	nop	dword ptr [rax]


0x89dc:	nop	dword ptr [rax]


0x8b17:	nop	word ptr [rax + rax]


0x8bd1:	nop	dword ptr [rax]


0x8be3:	nop	dword ptr [rax + rax]


0x8bfc:	nop	dword ptr [rax]


0x8c1e:	nop	


0x8c77:	nop	word ptr [rax + rax]


0x8d7a:	nop	word ptr [rax + rax]


0x8df2:	nop	word ptr [rax + rax]


0x8e0c:	nop	dword ptr [rax]


0x8e41:	nop	dword ptr [rax]


0x8ff6:	nop	word ptr cs:[rax + rax]


0x90dc:	nop	dword ptr [rax]


0x9189:	nop	dword ptr [rax]


0x9227:	nop	word ptr [rax + rax]


0x9259:	nop	dword ptr [rax]


0x926a:	nop	word ptr [rax + rax]


0x92b1:	nop	dword ptr [rax]


0x933f:	nop	


0x939e:	nop	


0x93ac:	nop	dword ptr [rax]


0x93b3:	nop	dword ptr [rax + rax]


0x93d4:	nop	dword ptr [rax]


0x93e5:	nop	dword ptr [rax]


0x9448:	nop	dword ptr [rax + rax]


0x94aa:	nop	word ptr [rax + rax]


0x94c2:	nop	word ptr [rax + rax]


0x963c:	nop	dword ptr [rax]


0x964d:	nop	dword ptr [rax]


0x9671:	nop	dword ptr [rax]


0x9682:	nop	word ptr [rax + rax]


0x969e:	nop	


0x9794:	nop	dword ptr [rax]


0x97a3:	nop	dword ptr [rax + rax]


0x97d5:	nop	dword ptr [rax]


0x9875:	nop	dword ptr [rax]


0x9884:	nop	dword ptr [rax]


0x98b9:	nop	dword ptr [rax]


0x98e2:	nop	word ptr [rax + rax]


0x9959:	nop	dword ptr [rax]


0x9981:	nop	dword ptr [rax]


0x99b1:	nop	dword ptr [rax]


0x9a39:	nop	dword ptr [rax]


0x9a6e:	nop	


0x9aa5:	nop	dword ptr [rax]


0x9b0e:	nop	


0x9c15:	nop	dword ptr [rax]


0x9cd5:	nop	dword ptr [rax]


0x9db4:	nop	dword ptr [rax]


0x9df7:	nop	word ptr [rax + rax]


0x9e0d:	nop	dword ptr [rax]


0x9e87:	nop	word ptr [rax + rax]


0xa2bf:	nop	


0xa2eb:	nop	dword ptr [rax + rax]


0xa3da:	nop	word ptr [rax + rax]


0xa5d8:	nop	dword ptr [rax + rax]


0xa618:	nop	dword ptr [rax + rax]


0xa68d:	nop	dword ptr [rax]


0xa756:	nop	word ptr cs:[rax + rax]


0xa7e2:	nop	word ptr [rax + rax]


0xa8c3:	nop	dword ptr [rax + rax]


0xa955:	nop	dword ptr [rax]


0xaab3:	nop	dword ptr [rax + rax]


0xaacf:	nop	


0xac0b:	nop	dword ptr [rax + rax]


0xad13:	nop	dword ptr [rax + rax]


0xae18:	nop	dword ptr [rax + rax]


0xae62:	nop	word ptr [rax + rax]


0xaee6:	nop	word ptr cs:[rax + rax]


0xaf6b:	nop	dword ptr [rax + rax]


0xb005:	nop	dword ptr [rax]


0xb131:	nop	dword ptr [rax]


0xb618:	nop	dword ptr [rax + rax]


0xb62a:	nop	word ptr [rax + rax]


0xb668:	nop	dword ptr [rax + rax]


0xb73a:	nop	word ptr [rax + rax]


0xb836:	nop	word ptr cs:[rax + rax]


0xb8d4:	nop	dword ptr [rax]


0xbc63:	nop	dword ptr [rax + rax]


0xbc88:	nop	dword ptr [rax + rax]


0xbcb9:	nop	dword ptr [rax]


0xbccf:	nop	


0xbced:	nop	dword ptr [rax]


0xbcfd:	nop	dword ptr [rax]


0xbd35:	nop	dword ptr [rax]


0xbd51:	nop	dword ptr [rax]


0xbd69:	nop	dword ptr [rax]


0xc014:	nop	dword ptr [rax]


0xc173:	nop	dword ptr [rax + rax]


0xc2bb:	nop	dword ptr [rax + rax]


0xc349:	nop	dword ptr [rax]


0xc364:	nop	dword ptr [rax]


0xc381:	nop	dword ptr [rax]


0xc3dd:	nop	dword ptr [rax]


0xc3fd:	nop	dword ptr [rax]


0xc42a:	nop	word ptr [rax + rax]


0xc6ab:	nop	dword ptr [rax + rax]


0xc7e9:	nop	dword ptr [rax]


0xc899:	nop	dword ptr [rax]


0xc8eb:	nop	dword ptr [rax + rax]


0xc92f:	nop	


0xc9c6:	nop	word ptr cs:[rax + rax]


0xca9e:	nop	


0xcb03:	nop	dword ptr [rax + rax]


0xcb1a:	nop	word ptr [rax + rax]


0xcb64:	nop	dword ptr [rax]


0xcba7:	nop	word ptr [rax + rax]


0xcbb8:	nop	dword ptr [rax + rax]


0xcc3a:	nop	word ptr [rax + rax]


0xcc7f:	nop	


0xcd02:	nop	word ptr [rax + rax]


0xceca:	nop	word ptr [rax + rax]


0xcf79:	nop	dword ptr [rax]


0xcf87:	nop	word ptr [rax + rax]


0xd0a1:	nop	dword ptr [rax]


0xd0ce:	nop	


0xd159:	nop	dword ptr [rax]


0xd27b:	nop	dword ptr [rax + rax]


0xd371:	nop	dword ptr [rax]


0xd38c:	nop	dword ptr [rax]


0xd3c1:	nop	dword ptr [rax]


0xd42c:	nop	dword ptr [rax]


0xd543:	nop	dword ptr [rax + rax]


0xd5b3:	nop	dword ptr [rax + rax]


0xd64b:	nop	dword ptr [rax + rax]


0xd74a:	nop	word ptr [rax + rax]


0xd793:	nop	dword ptr [rax + rax]


0xd7bf:	nop	


0xd805:	nop	dword ptr [rax]


0xd863:	nop	dword ptr [rax + rax]


0xd99b:	nop	dword ptr [rax + rax]


0xda36:	nop	word ptr cs:[rax + rax]


0xda82:	nop	word ptr [rax + rax]


0xda93:	nop	dword ptr [rax + rax]


0xdaee:	nop	


0xdc19:	nop	dword ptr [rax]


0xdd76:	nop	word ptr cs:[rax + rax]


0xddab:	nop	dword ptr [rax + rax]


0xddc1:	nop	dword ptr [rax]


0xddfb:	nop	dword ptr [rax + rax]


0xe338:	nop	dword ptr [rax + rax]


0xe35c:	nop	dword ptr [rax]


0xe3a2:	nop	word ptr [rax + rax]


0xe541:	nop	dword ptr [rax]


0xe66e:	nop	


0xe8de:	nop	


0xe93b:	nop	dword ptr [rax + rax]


0xe985:	nop	dword ptr [rax]


0xe9e6:	nop	word ptr cs:[rax + rax]


0xea2d:	nop	dword ptr [rax]


0xea5c:	nop	dword ptr [rax]


0xea9c:	nop	dword ptr [rax]


0xead5:	nop	dword ptr [rax]


0xeb06:	nop	word ptr cs:[rax + rax]


0xec94:	nop	dword ptr [rax]


0xed0d:	nop	dword ptr [rax]


0xed4e:	nop	


0xed6b:	nop	dword ptr [rax + rax]


0xedbe:	nop	


0xedcd:	nop	dword ptr [rax]


0xedeb:	nop	dword ptr [rax + rax]


0xedfa:	nop	word ptr [rax + rax]


0xee28:	nop	dword ptr [rax + rax]


0xee8c:	nop	dword ptr [rax]


0xeef9:	nop	dword ptr [rax]


0xef31:	nop	dword ptr [rax]


0xf2c7:	nop	word ptr [rax + rax]


0xf35e:	nop	


0xf47e:	nop	


0xf602:	nop	word ptr [rax + rax]


0xf631:	nop	dword ptr [rax]


0xf722:	nop	word ptr [rax + rax]


0xf821:	nop	dword ptr [rax]


0xf84a:	nop	word ptr [rax + rax]


0xf86c:	nop	dword ptr [rax]


0xf8ed:	nop	dword ptr [rax]


0xf8fe:	nop	


0xf978:	nop	dword ptr [rax + rax]


0xf9d3:	nop	dword ptr [rax + rax]


0xf9f8:	nop	dword ptr [rax + rax]


0xfa1c:	nop	dword ptr [rax]


0xfab1:	nop	dword ptr [rax]


0xfb2b:	nop	dword ptr [rax + rax]


0xfb41:	nop	dword ptr [rax]


0xfb52:	nop	word ptr [rax + rax]


0xfb99:	nop	dword ptr [rax]


0xfd0c:	nop	dword ptr [rax]


0xfd27:	nop	word ptr [rax + rax]


0xfe42:	nop	word ptr [rax + rax]


0xfe7f:	nop	


0xfe97:	nop	word ptr [rax + rax]


0xff26:	nop	word ptr cs:[rax + rax]


0xffa2:	nop	word ptr [rax + rax]


0xffd5:	nop	dword ptr [rax]


0x100d6:	nop	word ptr cs:[rax + rax]


0x10107:	nop	word ptr [rax + rax]


0x1016e:	nop	


0x10186:	nop	word ptr cs:[rax + rax]


0x1021a:	nop	word ptr [rax + rax]


0x1023b:	nop	dword ptr [rax + rax]


0x1024e:	nop	


0x10272:	nop	word ptr [rax + rax]


0x10296:	nop	word ptr cs:[rax + rax]


0x102c2:	nop	word ptr [rax + rax]


0x102ef:	nop	


0x102fe:	nop	


0x1031b:	nop	dword ptr [rax + rax]


0x1032e:	nop	


0x1034b:	nop	dword ptr [rax + rax]


0x1037e:	nop	


0x1039b:	nop	dword ptr [rax + rax]


0x103bb:	nop	dword ptr [rax + rax]


0x1060f:	nop	


0x10774:	nop	dword ptr [rax]


0x107a9:	nop	dword ptr [rax]


0x107c3:	nop	dword ptr [rax + rax]


0x10b96:	nop	word ptr cs:[rax + rax]


0x10c57:	nop	word ptr [rax + rax]


0x10c8c:	nop	dword ptr [rax]


0x10cf5:	nop	dword ptr [rax]


0x10d66:	nop	word ptr cs:[rax + rax]


0x10d88:	nop	dword ptr [rax + rax]


0x10dba:	nop	word ptr [rax + rax]


0x10e4d:	nop	dword ptr [rax]


0x10e9c:	nop	dword ptr [rax]


0x11194:	nop	dword ptr [rax]


0x11913:	nop	dword ptr [rax + rax]


0x11a87:	nop	word ptr [rax + rax]


0x11dbc:	nop	dword ptr [rax]


0x11de2:	nop	word ptr [rax + rax]


0x11e0f:	nop	


0x11ebb:	nop	dword ptr [rax + rax]


0x11fba:	nop	word ptr [rax + rax]


0x122ee:	nop	


0x12305:	nop	dword ptr [rax]


0x123cf:	nop	


0x12613:	nop	dword ptr [rax + rax]


0x12794:	nop	dword ptr [rax]


0x1294a:	nop	word ptr [rax + rax]


0x129e1:	nop	dword ptr [rax]


0x12a98:	nop	dword ptr [rax + rax]


0x12aff:	nop	


0x12bda:	nop	word ptr [rax + rax]


0x12c0d:	nop	dword ptr [rax]


0x12c88:	nop	dword ptr [rax + rax]


0x12ce5:	nop	dword ptr [rax]


0x12f5c:	nop	dword ptr [rax]


0x12f85:	nop	dword ptr [rax]


0x12fa6:	nop	word ptr cs:[rax + rax]


0x13132:	nop	word ptr [rax + rax]


0x13364:	nop	dword ptr [rax]


0x1345c:	nop	dword ptr [rax]


0x13479:	nop	dword ptr [rax]


0x13499:	nop	dword ptr [rax]


0x134da:	nop	word ptr [rax + rax]


0x134e8:	nop	dword ptr [rax + rax]


0x13551:	nop	dword ptr [rax]


0x13576:	nop	word ptr cs:[rax + rax]


0x1358c:	nop	dword ptr [rax]


0x1359c:	nop	dword ptr [rax]


0x13611:	nop	dword ptr [rax]


0x1374c:	nop	dword ptr [rax]


0x1379c:	nop	dword ptr [rax]


0x137a9:	nop	dword ptr [rax]


0x13887:	nop	word ptr [rax + rax]


0x138a1:	nop	dword ptr [rax]


0x1393b:	nop	dword ptr [rax + rax]


0x13945:	nop	dword ptr [rax]


0x13a24:	nop	dword ptr [rax]


0x13a41:	nop	dword ptr [rax]


0x13af1:	nop	dword ptr [rax]


0x13b54:	nop	dword ptr [rax]


0x13b71:	nop	dword ptr [rax]


0x13b82:	nop	word ptr [rax + rax]


0x13bab:	nop	dword ptr [rax + rax]


0x13bc7:	nop	word ptr [rax + rax]


0x13c1c:	nop	dword ptr [rax]


0x13c3e:	nop	


0x13cea:	nop	word ptr [rax + rax]


0x13d36:	nop	word ptr cs:[rax + rax]


0x13da5:	nop	dword ptr [rax]


0x13e7b:	nop	dword ptr [rax + rax]


0x13ea6:	nop	word ptr cs:[rax + rax]


0x13edf:	nop	


0x13f29:	nop	dword ptr [rax]


0x13f4b:	nop	dword ptr [rax + rax]


0x13ff1:	nop	dword ptr [rax]


0x14083:	nop	dword ptr [rax + rax]


