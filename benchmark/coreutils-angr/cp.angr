0x128c0:	sub	rsp, 8
0x128c4:	add	rsp, 8
0x128c8:	ret	


0x128b0:	mov	rdx, qword ptr [rip + 0x207751]
0x128b7:	xor	esi, esi
0x128b9:	jmp	0x2d50


0x128a0:	ret	


0x12830:	push	r15
0x12832:	push	r14
0x12834:	mov	r15, rdx
0x12837:	push	r13
0x12839:	push	r12
0x1283b:	lea	r12, [rip + 0x206cee]
0x12842:	push	rbp
0x12843:	lea	rbp, [rip + 0x206cee]
0x1284a:	push	rbx
0x1284b:	mov	r13d, edi
0x1284e:	mov	r14, rsi
0x12851:	sub	rbp, r12
0x12854:	sub	rsp, 8
0x12858:	sar	rbp, 3
0x1285c:	call	0x2710


0x12790:	push	r12
0x12792:	push	rbp
0x12793:	mov	rbp, rsi
0x12796:	push	rbx
0x12797:	call	0x2d00


0x12510:	push	r12
0x12512:	push	rbp
0x12513:	mov	ebp, edi
0x12515:	push	rbx
0x12516:	sub	rsp, 0x50
0x1251a:	mov	rax, qword ptr fs:[0x28]
0x12523:	mov	qword ptr [rsp + 0x18], rax
0x12528:	xor	eax, eax
0x1252a:	lea	rax, [rsp + 0x70]
0x1252f:	test	esi, esi
0x12531:	mov	qword ptr [rsp + 0x30], rdx
0x12536:	mov	qword ptr [rsp + 0x38], rcx
0x1253b:	mov	qword ptr [rsp + 0x40], r8
0x12540:	mov	qword ptr [rsp + 8], rax
0x12545:	lea	rax, [rsp + 0x20]
0x1254a:	mov	qword ptr [rsp + 0x48], r9
0x1254f:	mov	dword ptr [rsp], 0x10
0x12556:	mov	qword ptr [rsp + 0x10], rax
0x1255b:	je	0x12762


0x12490:	push	r12
0x12492:	push	rbp
0x12493:	push	rbx
0x12494:	mov	rbx, rdi
0x12497:	call	0x2b80


0x12480:	mov	edx, 3
0x12485:	xor	esi, esi
0x12487:	xor	eax, eax
0x12489:	jmp	0x12510


0x12240:	push	r13
0x12242:	push	r12
0x12244:	lea	r12, [rdi + 0x800]
0x1224b:	push	rbp
0x1224c:	mov	rdx, rdi
0x1224f:	push	rbx
0x12250:	mov	rax, rdi
0x12253:	movabs	rcx, 0x98f5704f6c44c0ab
0x1225d:	movabs	r10, 0xae985bf2cbfc89ed
0x12267:	movabs	rbp, 0x48fe4a0fa5a09315
0x12271:	movabs	rsi, 0x82f053db8355e0ce
0x1227b:	movabs	r8, 0xb29b2e824a595524
0x12285:	movabs	rbx, 0x8c0ea5053d4712a0
0x1228f:	movabs	r11, 0xb9f8b322c73ac862
0x12299:	movabs	r9, 0x647c4677a2884b7c
0x122a3:	nop	dword ptr [rax + rax]
0x122a8:	add	rsi, qword ptr [rax + 0x20]
0x122ac:	add	rcx, qword ptr [rax + 0x38]
0x122b0:	mov	r13, qword ptr [rax]
0x122b3:	add	rbp, qword ptr [rax + 0x28]
0x122b7:	add	r10, qword ptr [rax + 0x30]
0x122bb:	sub	r13, rsi
0x122be:	add	r9, r13
0x122c1:	mov	r13, rcx
0x122c4:	shr	r13, 9
0x122c8:	add	rcx, r9
0x122cb:	xor	rbp, r13
0x122ce:	mov	r13, qword ptr [rax + 8]
0x122d2:	sub	r13, rbp
0x122d5:	add	r11, r13
0x122d8:	mov	r13, r9
0x122db:	shl	r13, 9
0x122df:	add	r9, r11
0x122e2:	xor	r10, r13
0x122e5:	mov	r13, qword ptr [rax + 0x10]
0x122e9:	sub	r13, r10
0x122ec:	add	rbx, r13
0x122ef:	mov	r13, r11
0x122f2:	shr	r13, 0x17
0x122f6:	add	r11, rbx
0x122f9:	xor	rcx, r13
0x122fc:	mov	r13, qword ptr [rax + 0x18]
0x12300:	sub	r13, rcx
0x12303:	add	r8, r13
0x12306:	mov	r13, rbx
0x12309:	shl	r13, 0xf
0x1230d:	add	rbx, r8
0x12310:	xor	r9, r13
0x12313:	mov	r13, r8
0x12316:	sub	rsi, r9
0x12319:	shr	r13, 0xe
0x1231d:	mov	qword ptr [rax], r9
0x12320:	xor	r11, r13
0x12323:	mov	r13, rsi
0x12326:	add	r8, rsi
0x12329:	sub	rbp, r11
0x1232c:	shl	r13, 0x14
0x12330:	mov	qword ptr [rax + 8], r11
0x12334:	xor	rbx, r13
0x12337:	lea	r13, [rsi + rbp]
0x1233b:	mov	rsi, rbp
0x1233e:	sub	r10, rbx
0x12341:	shr	rsi, 0x11
0x12345:	mov	qword ptr [rax + 0x10], rbx
0x12349:	xor	r8, rsi
0x1234c:	mov	rsi, r10
0x1234f:	add	rbp, r10
0x12352:	sub	rcx, r8
0x12355:	shl	rsi, 0xe
0x12359:	mov	qword ptr [rax + 0x18], r8
0x1235d:	xor	rsi, r13
0x12360:	add	r10, rcx
0x12363:	mov	qword ptr [rax + 0x28], rbp
0x12367:	mov	qword ptr [rax + 0x20], rsi
0x1236b:	mov	qword ptr [rax + 0x30], r10
0x1236f:	add	rax, 0x40
0x12373:	mov	qword ptr [rax - 8], rcx
0x12377:	cmp	r12, rax
0x1237a:	jne	0x122a8


0x11fb0:	mov	rax, qword ptr [rdi + 0x810]
0x11fb7:	mov	rdx, qword ptr [rdi + 0x800]
0x11fbe:	lea	r9, [rdi + 0x400]
0x11fc5:	lea	rcx, [rax + 1]
0x11fc9:	mov	rax, rdi
0x11fcc:	mov	qword ptr [rdi + 0x810], rcx
0x11fd3:	add	rcx, qword ptr [rdi + 0x808]
0x11fda:	nop	word ptr [rax + rax]
0x11fe0:	mov	r8, rdx
0x11fe3:	shl	r8, 0x15
0x11fe7:	xor	rdx, r8
0x11fea:	mov	r8, qword ptr [rax]
0x11fed:	not	rdx
0x11ff0:	add	rdx, qword ptr [rax + 0x400]
0x11ff7:	mov	r10, r8
0x11ffa:	and	r10d, 0x7f8
0x12001:	mov	r11, qword ptr [rdi + r10]
0x12005:	mov	r10, rdx
0x12008:	shr	r10, 5
0x1200c:	add	r11, rdx
0x1200f:	xor	rdx, r10
0x12012:	add	rcx, r11
0x12015:	mov	qword ptr [rax], rcx
0x12018:	shr	rcx, 8
0x1201c:	and	ecx, 0x7f8
0x12022:	mov	r11, qword ptr [rdi + rcx]
0x12026:	add	r11, r8
0x12029:	mov	qword ptr [rsi], r11
0x1202c:	add	rdx, qword ptr [rax + 0x408]
0x12033:	mov	rcx, qword ptr [rax + 8]
0x12037:	mov	r10, rdx
0x1203a:	mov	rdx, rcx
0x1203d:	and	edx, 0x7f8
0x12043:	mov	r8, qword ptr [rdi + rdx]
0x12047:	mov	rdx, r10
0x1204a:	shl	rdx, 0xc
0x1204e:	xor	rdx, r10
0x12051:	add	r8, r10
0x12054:	add	r8, r11
0x12057:	mov	qword ptr [rax + 8], r8
0x1205b:	shr	r8, 8
0x1205f:	and	r8d, 0x7f8
0x12066:	add	rcx, qword ptr [rdi + r8]
0x1206a:	mov	qword ptr [rsi + 8], rcx
0x1206e:	mov	r8, qword ptr [rax + 0x10]
0x12072:	mov	r11, rcx
0x12075:	add	rdx, qword ptr [rax + 0x410]
0x1207c:	mov	rcx, r8
0x1207f:	and	ecx, 0x7f8
0x12085:	mov	r10, qword ptr [rdi + rcx]
0x12089:	add	r10, rdx
0x1208c:	mov	rcx, r10
0x1208f:	add	rcx, r11
0x12092:	mov	qword ptr [rax + 0x10], rcx
0x12096:	shr	rcx, 8
0x1209a:	and	ecx, 0x7f8
0x120a0:	mov	r10, qword ptr [rdi + rcx]
0x120a4:	mov	rcx, rdx
0x120a7:	shr	rcx, 0x21
0x120ab:	xor	rdx, rcx
0x120ae:	add	r10, r8
0x120b1:	mov	qword ptr [rsi + 0x10], r10
0x120b5:	mov	rcx, qword ptr [rax + 0x18]
0x120b9:	add	rdx, qword ptr [rax + 0x418]
0x120c0:	mov	r8, rcx
0x120c3:	and	r8d, 0x7f8
0x120ca:	mov	r11, qword ptr [rdi + r8]
0x120ce:	add	r11, rdx
0x120d1:	mov	r8, r11
0x120d4:	add	r8, r10
0x120d7:	add	rax, 0x20
0x120db:	add	rsi, 0x20
0x120df:	mov	qword ptr [rax - 8], r8
0x120e3:	shr	r8, 8
0x120e7:	and	r8d, 0x7f8
0x120ee:	add	rcx, qword ptr [rdi + r8]
0x120f2:	mov	qword ptr [rsi - 8], rcx
0x120f6:	cmp	rax, r9
0x120f9:	jb	0x11fe0


0x11f60:	push	rbp
0x11f61:	push	rbx
0x11f62:	mov	rdx, -1
0x11f69:	mov	rbx, rdi
0x11f6c:	mov	esi, 0x1038
0x11f71:	sub	rsp, 8
0x11f75:	mov	rbp, qword ptr [rdi]
0x11f78:	call	0x2cc0


0x11dc0:	push	r15
0x11dc2:	push	r14
0x11dc4:	push	r13
0x11dc6:	push	r12
0x11dc8:	mov	r12, rdi
0x11dcb:	push	rbp
0x11dcc:	push	rbx
0x11dcd:	mov	rbp, rdx
0x11dd0:	mov	rbx, rsi
0x11dd3:	sub	rsp, 0x18
0x11dd7:	mov	rcx, qword ptr [rdi]
0x11dda:	test	rcx, rcx
0x11ddd:	mov	qword ptr [rsp + 8], rcx
0x11de2:	je	0x11e48


0x11db0:	mov	qword ptr [rdi + 0x10], rsi
0x11db4:	ret	


0x11da0:	mov	qword ptr [rdi + 8], rsi
0x11da4:	ret	


0x11a70:	push	r15
0x11a72:	push	r14
0x11a74:	push	r13
0x11a76:	push	r12
0x11a78:	push	rbp
0x11a79:	push	rbx
0x11a7a:	sub	rsp, 0x38
0x11a7e:	mov	rax, qword ptr fs:[0x28]
0x11a87:	mov	qword ptr [rsp + 0x28], rax
0x11a8c:	xor	eax, eax
0x11a8e:	test	rsi, rsi
0x11a91:	je	0x11bb8


0x11a10:	push	rbp
0x11a11:	push	rbx
0x11a12:	sub	rsp, 8
0x11a16:	test	rdi, rdi
0x11a19:	je	0x11a58


0x119b0:	push	r13
0x119b2:	push	r12
0x119b4:	push	rbp
0x119b5:	push	rbx
0x119b6:	mov	rbx, rdi
0x119b9:	sub	rsp, 8
0x119bd:	mov	rdi, qword ptr [rdi]
0x119c0:	call	0x11f60


0x11990:	push	rbx
0x11991:	mov	rdx, -1
0x11998:	mov	rbx, rdi
0x1199b:	mov	esi, 0x18
0x119a0:	call	0x2cc0


0x11870:	push	r15
0x11872:	push	r14
0x11874:	lea	r15, [rsi + 1]
0x11878:	push	r13
0x1187a:	push	r12
0x1187c:	mov	r13, rdi
0x1187f:	push	rbp
0x11880:	push	rbx
0x11881:	mov	r14, rsi
0x11884:	sub	rsp, 0x28
0x11888:	mov	rbp, qword ptr [rdi + 8]
0x1188c:	mov	rbx, qword ptr [rdi + 0x10]
0x11890:	mov	rax, qword ptr fs:[0x28]
0x11899:	mov	qword ptr [rsp + 0x18], rax
0x1189e:	xor	eax, eax
0x118a0:	mov	rax, qword ptr [rdi]
0x118a3:	lea	r12, [rsp + 0x10]
0x118a8:	mov	qword ptr [rsp + 8], rax
0x118ad:	jmp	0x118e5


0x11860:	mov	rax, qword ptr [rdi]
0x11863:	ret	


0x11820:	push	rbx
0x11821:	call	0x11a70


0x117f0:	push	rbx
0x117f1:	mov	rbx, rdi
0x117f4:	mov	edi, 0x18
0x117f9:	call	0x11020


0x11780:	sub	rsp, 0x58
0x11784:	mov	qword ptr [rsp + 0x38], rcx
0x11789:	xor	ecx, ecx
0x1178b:	mov	rax, qword ptr fs:[0x28]
0x11794:	mov	qword ptr [rsp + 0x18], rax
0x11799:	xor	eax, eax
0x1179b:	test	dl, 0x40
0x1179e:	jne	0x117c8


0x11740:	sub	rsp, 8
0x11744:	mov	edi, 0xe
0x11749:	call	0x2be0


0x11700:	movsx	rcx, byte ptr [rdi]
0x11704:	test	cl, cl
0x11706:	je	0x11730


0x116a0:	sub	rsp, 8
0x116a4:	xor	esi, esi
0x116a6:	call	0x2c50


0x11650:	sub	rsp, 0x28
0x11654:	xor	edi, edi
0x11656:	mov	rsi, rsp
0x11659:	mov	rax, qword ptr fs:[0x28]
0x11662:	mov	qword ptr [rsp + 0x18], rax
0x11667:	xor	eax, eax
0x11669:	call	0x2830


0x11640:	mov	rsi, rdi
0x11643:	xor	edi, edi
0x11645:	jmp	0x2830


0x115a0:	push	r14
0x115a2:	push	r13
0x115a4:	push	r12
0x115a6:	push	rbp
0x115a7:	push	rbx
0x115a8:	call	0x28a0


0x11520:	push	r12
0x11522:	push	rbp
0x11523:	mov	rbp, rdi
0x11526:	push	rbx
0x11527:	call	0x27c0


0x114f0:	sub	rsp, 8
0x114f4:	mov	rax, rsi
0x114f7:	mov	esi, edx
0x114f9:	mov	edx, dword ptr [rdi]
0x114fb:	mov	rdi, rax
0x114fe:	call	0x114d0


0x114d0:	mov	eax, esi
0x114d2:	mov	esi, edx
0x114d4:	cmp	eax, -1
0x114d7:	je	0x114e0


0x114c0:	mov	dword ptr [rcx], edx
0x114c2:	xor	eax, eax
0x114c4:	ret	


0x114b0:	ret	


0x11420:	push	r13
0x11422:	push	r12
0x11424:	mov	r13, rsi
0x11427:	push	rbp
0x11428:	push	rbx
0x11429:	mov	rbx, rdi
0x1142c:	mov	r12, rdx
0x1142f:	sub	rsp, 0x18
0x11433:	mov	rax, qword ptr fs:[0x28]
0x1143c:	mov	qword ptr [rsp + 8], rax
0x11441:	xor	eax, eax
0x11443:	lea	rax, [rsp + 4]
0x11448:	test	rdi, rdi
0x1144b:	cmove	rbx, rax
0x1144f:	mov	rdi, rbx
0x11452:	call	0x2960


0x113c0:	mov	rax, qword ptr [rdi + 8]
0x113c4:	cmp	qword ptr [rdi + 0x10], rax
0x113c8:	je	0x113d0


0x11390:	xor	eax, eax
0x11392:	mov	rcx, qword ptr [rdi + 0x20]
0x11396:	cmp	qword ptr [rdi + 0x28], rcx
0x1139a:	ja	0x113b7


0x11350:	test	rdi, rdi
0x11353:	push	rbx
0x11354:	mov	rbx, rdi
0x11357:	je	0x1136a


0x112b0:	push	rbx
0x112b1:	mov	edx, 0xa
0x112b6:	xor	ebx, ebx
0x112b8:	sub	rsp, 0x20
0x112bc:	mov	rcx, qword ptr [rip + 0x208ded]
0x112c3:	lea	rsi, [rsp + 0x10]
0x112c8:	lea	rdi, [rsp + 8]
0x112cd:	mov	qword ptr [rsp + 8], 0
0x112d6:	mov	rax, qword ptr fs:[0x28]
0x112df:	mov	qword ptr [rsp + 0x18], rax
0x112e4:	xor	eax, eax
0x112e6:	mov	qword ptr [rsp + 0x10], 0
0x112ef:	call	0x2ae0


0x11270:	lea	rsi, [rip + 0x4998]
0x11277:	sub	rsp, 8
0x1127b:	mov	edx, 5
0x11280:	xor	edi, edi
0x11282:	call	0x28e0


0x11250:	push	rbx
0x11251:	mov	rbx, rdi
0x11254:	call	0x2900


0x11220:	push	rbp
0x11221:	push	rbx
0x11222:	mov	rbp, rdi
0x11225:	mov	rdi, rsi
0x11228:	mov	rbx, rsi
0x1122b:	sub	rsp, 8
0x1122f:	call	0x11020


0x111f0:	mov	rax, rdi
0x111f3:	sub	rsp, 8
0x111f7:	mul	rsi
0x111fa:	seto	dl
0x111fd:	test	rax, rax
0x11200:	js	0x11219


0x111d0:	push	rbx
0x111d1:	mov	rbx, rdi
0x111d4:	call	0x11020


0x11180:	test	rdi, rdi
0x11183:	mov	rax, qword ptr [rsi]
0x11186:	je	0x111b0


0x110f0:	test	rdi, rdi
0x110f3:	mov	r9, rdx
0x110f6:	mov	rcx, qword ptr [rsi]
0x110f9:	je	0x11130


0x110c0:	mov	rax, rsi
0x110c3:	mul	rdx
0x110c6:	mov	rsi, rax
0x110c9:	seto	al
0x110cc:	test	rsi, rsi
0x110cf:	js	0x110db


0x11080:	test	rsi, rsi
0x11083:	push	rbx
0x11084:	mov	rbx, rsi
0x11087:	jne	0x1108e


0x11070:	jmp	0x11020


0x11040:	mov	rax, rdi
0x11043:	mul	rsi
0x11046:	mov	rdi, rax
0x11049:	seto	al
0x1104c:	test	rdi, rdi
0x1104f:	js	0x1105b


0x11020:	push	rbx
0x11021:	mov	rbx, rdi
0x11024:	call	0x2bc0


0x10fe0:	cmp	byte ptr [rip + 0x20972a], 0
0x10fe7:	je	0x10ff8


0x10f60:	push	rbx
0x10f61:	lea	rsi, [rip + 0x49b1]
0x10f68:	mov	edx, 5
0x10f6d:	xor	edi, edi
0x10f6f:	call	0x28e0


0x10e80:	push	rbp
0x10e81:	push	rbx
0x10e82:	mov	r10d, 0x20
0x10e88:	xor	r11d, r11d
0x10e8b:	sub	rsp, 0xb8
0x10e92:	mov	rax, qword ptr fs:[0x28]
0x10e9b:	mov	qword ptr [rsp + 0x78], rax
0x10ea0:	xor	eax, eax
0x10ea2:	lea	rax, [rsp + 0xd0]
0x10eaa:	mov	qword ptr [rsp + 0xa0], r8
0x10eb2:	lea	rbx, [rsp + 0xd0]
0x10eba:	lea	r8, [rsp + 0x20]
0x10ebf:	mov	qword ptr [rsp + 0xa8], r9
0x10ec7:	mov	dword ptr [rsp + 8], 0x20
0x10ecf:	mov	qword ptr [rsp + 0x10], rax
0x10ed4:	lea	rax, [rsp + 0x80]
0x10edc:	xor	r9d, r9d
0x10edf:	mov	qword ptr [rsp + 0x18], rax
0x10ee4:	mov	rbp, rax
0x10ee7:	nop	word ptr [rax + rax]
0x10ef0:	cmp	r10d, 0x2f
0x10ef4:	ja	0x10f4c


0x10e00:	sub	rsp, 0x68
0x10e04:	mov	r10, r8
0x10e07:	xor	r9d, r9d
0x10e0a:	mov	rax, qword ptr fs:[0x28]
0x10e13:	mov	qword ptr [rsp + 0x58], rax
0x10e18:	xor	eax, eax
0x10e1a:	mov	r8, rsp
0x10e1d:	nop	dword ptr [rax]
0x10e20:	mov	eax, dword ptr [r10]
0x10e23:	cmp	eax, 0x2f
0x10e26:	ja	0x10e6a


0x10de0:	xor	r9d, r9d
0x10de3:	cmp	qword ptr [r8], 0
0x10de7:	je	0x10dfb


0x109c0:	push	r15
0x109c2:	push	r14
0x109c4:	push	r13
0x109c6:	push	r12
0x109c8:	mov	r12, r9
0x109cb:	push	rbp
0x109cc:	push	rbx
0x109cd:	mov	rbp, rdi
0x109d0:	mov	rbx, r8
0x109d3:	sub	rsp, 0x28
0x109d7:	test	rsi, rsi
0x109da:	je	0x10af8


0x10760:	push	r12
0x10762:	push	rbp
0x10763:	mov	r12, rdi
0x10766:	push	rbx
0x10767:	sub	rsp, 0xd0
0x1076e:	mov	rax, qword ptr fs:[0x28]
0x10777:	mov	qword ptr [rsp + 0xc8], rax
0x1077f:	xor	eax, eax
0x10781:	test	rsi, rsi
0x10784:	je	0x10880


0x10750:	mov	rdx, rsi
0x10753:	mov	rsi, rdi
0x10756:	mov	edi, 0xffffffff
0x1075b:	jmp	0x102f0


0x102f0:	push	r14
0x102f2:	push	r13
0x102f4:	push	r12
0x102f6:	push	rbp
0x102f7:	mov	r12, rsi
0x102fa:	push	rbx
0x102fb:	mov	ebx, edi
0x102fd:	sub	rsp, 0x110
0x10304:	mov	rax, qword ptr fs:[0x28]
0x1030d:	mov	qword ptr [rsp + 0x108], rax
0x10315:	xor	eax, eax
0x10317:	test	rdx, rdx
0x1031a:	je	0x105e0


0x102e0:	mov	ecx, 0x100
0x102e5:	jmp	0x2750


0x10230:	mov	r9, qword ptr [rdi + 8]
0x10234:	lea	rcx, [r9 - 0x3ffffffe]
0x1023b:	cmp	rcx, 1
0x1023f:	jbe	0x1024a


0x10150:	push	rbp
0x10151:	push	rbx
0x10152:	mov	rbp, rdi
0x10155:	sub	rsp, 0x18
0x10159:	mov	rbx, qword ptr [rsi]
0x1015c:	mov	rax, qword ptr [rbx + 8]
0x10160:	mov	rdx, qword ptr [rbx + 0x18]
0x10164:	cmp	rax, 0x3ffffffe
0x1016a:	je	0x101d0


0x10130:	mov	r8d, ecx
0x10133:	mov	rcx, rdx
0x10136:	mov	rdx, rsi
0x10139:	mov	rsi, rdi
0x1013c:	mov	edi, 0xffffff9c
0x10141:	jmp	0xf9b0


0xf9b0:	push	r15
0xf9b2:	push	r14
0xf9b4:	push	r13
0xf9b6:	push	r12
0xf9b8:	push	rbp
0xf9b9:	push	rbx
0xf9ba:	mov	ebx, r8d
0xf9bd:	and	ebx, 1
0xf9c0:	sub	rsp, 0x128
0xf9c7:	mov	r13, qword ptr [rcx + 0x60]
0xf9cb:	mov	r14, qword ptr [rdx + 0x58]
0xf9cf:	mov	rax, qword ptr fs:[0x28]
0xf9d8:	mov	qword ptr [rsp + 0x118], rax
0xf9e0:	xor	eax, eax
0xf9e2:	test	ebx, ebx
0xf9e4:	mov	r12, qword ptr [rcx + 0x58]
0xf9e8:	mov	r15, qword ptr [rdx + 0x60]
0xf9ec:	mov	r9d, r13d
0xf9ef:	je	0xfad8


0xf9a0:	mov	rax, qword ptr [rsi]
0xf9a3:	cmp	qword ptr [rdi], rax
0xf9a6:	sete	al
0xf9a9:	ret	


0xf990:	mov	rax, qword ptr [rdi]
0xf993:	xor	edx, edx
0xf995:	div	rsi
0xf998:	mov	rax, rdx
0xf99b:	ret	


0xf950:	push	r13
0xf952:	push	r12
0xf954:	push	rbp
0xf955:	push	rbx
0xf956:	mov	ebx, edi
0xf958:	sub	rsp, 8
0xf95c:	cmp	edi, 2
0xf95f:	ja	0xf982


0xf940:	mov	r8d, 6
0xf946:	jmp	0xf720


0xf930:	mov	r8d, 6
0xf936:	jmp	0xf8a0


0xf8a0:	sub	rsp, 0x18
0xf8a4:	cmp	ecx, 1
0xf8a7:	mov	dword ptr [rsp + 0xc], edx
0xf8ab:	je	0xf910


0xf720:	push	r15
0xf722:	push	r14
0xf724:	mov	r15, rdi
0xf727:	push	r13
0xf729:	push	r12
0xf72b:	mov	r14, r8
0xf72e:	push	rbp
0xf72f:	push	rbx
0xf730:	mov	ebp, esi
0xf732:	sub	rsp, 0x38
0xf736:	mov	qword ptr [rsp + 0x18], rdx
0xf73b:	mov	qword ptr [rsp], rdi
0xf73f:	mov	qword ptr [rsp + 0x20], rcx
0xf744:	call	0x2770


0xf700:	mov	esi, dword ptr [rsi]
0xf702:	mov	edx, 0x180
0xf707:	xor	eax, eax
0xf709:	and	sil, 0x3c
0xf70d:	or	sil, 0xc2
0xf711:	jmp	0x2cd0


0xf6f0:	mov	esi, 0x1c0
0xf6f5:	jmp	0x27e0


0xf670:	push	rbx
0xf671:	mov	rsi, rdi
0xf674:	mov	edi, 1
0xf679:	sub	rsp, 0xa0
0xf680:	mov	rdx, rsp
0xf683:	mov	rax, qword ptr fs:[0x28]
0xf68c:	mov	qword ptr [rsp + 0x98], rax
0xf694:	xor	eax, eax
0xf696:	call	0x2910


0xf610:	push	r12
0xf612:	push	rbp
0xf613:	mov	ebp, esi
0xf615:	push	rbx
0xf616:	call	0x115a0


0xf290:	push	r15
0xf292:	lea	rax, [rip + 0x20a7a7]
0xf299:	push	r14
0xf29b:	push	r13
0xf29d:	push	r12
0xf29f:	mov	esi, esi
0xf2a1:	push	rbp
0xf2a2:	push	rbx
0xf2a3:	sub	rsp, 0x48
0xf2a7:	mov	rax, qword ptr [rax + rsi*8]
0xf2ab:	test	rdi, rdi
0xf2ae:	mov	qword ptr [rsp + 8], rax
0xf2b3:	je	0xf5bd


0xf280:	mov	rsi, qword ptr [rsi]
0xf283:	mov	rdi, qword ptr [rdi]
0xf286:	jmp	0x2af0


0xf260:	mov	rax, qword ptr [rsi + 8]
0xf264:	cmp	qword ptr [rdi + 8], rax
0xf268:	jb	0xf278


0xf240:	mov	edx, 0xffffff9c
0xf245:	mov	rcx, rsi
0xf248:	mov	rsi, rdi
0xf24b:	mov	edi, edx
0xf24d:	jmp	0xf1a0


0xf1a0:	push	r15
0xf1a2:	push	r14
0xf1a4:	mov	r15d, edx
0xf1a7:	push	r13
0xf1a9:	push	r12
0xf1ab:	push	rbp
0xf1ac:	push	rbx
0xf1ad:	mov	rbp, rcx
0xf1b0:	mov	rbx, rsi
0xf1b3:	sub	rsp, 0x18
0xf1b7:	mov	dword ptr [rsp + 0xc], edi
0xf1bb:	mov	rdi, rsi
0xf1be:	call	0xb590


0xf070:	push	r13
0xf072:	push	r12
0xf074:	mov	r13d, edi
0xf077:	push	rbp
0xf078:	push	rbx
0xf079:	mov	rdi, rsi
0xf07c:	mov	ebp, edx
0xf07e:	mov	r12, rcx
0xf081:	sub	rsp, 0x138
0xf088:	mov	rax, qword ptr fs:[0x28]
0xf091:	mov	qword ptr [rsp + 0x128], rax
0xf099:	xor	eax, eax
0xf09b:	call	0xb4b0


0xf010:	push	r13
0xf012:	push	r12
0xf014:	mov	r13d, edi
0xf017:	push	rbp
0xf018:	push	rbx
0xf019:	mov	r12, rsi
0xf01c:	mov	rbx, rdx
0xf01f:	sub	rsp, 8
0xf023:	nop	dword ptr [rax + rax]
0xf028:	mov	rdx, rbx
0xf02b:	mov	rsi, r12
0xf02e:	mov	edi, r13d
0xf031:	call	0x2840


0xeda0:	push	r15
0xeda2:	push	r14
0xeda4:	mov	r9d, r8d
0xeda7:	push	r13
0xeda9:	push	r12
0xedab:	mov	r14d, edx
0xedae:	push	rbp
0xedaf:	push	rbx
0xedb0:	mov	r12, rsi
0xedb3:	mov	r13, rcx
0xedb6:	mov	ebp, r8d
0xedb9:	mov	r8, rcx
0xedbc:	sub	rsp, 0x148
0xedc3:	mov	ecx, edx
0xedc5:	mov	rdx, rsi
0xedc8:	mov	rax, qword ptr fs:[0x28]
0xedd1:	mov	qword ptr [rsp + 0x138], rax
0xedd9:	xor	eax, eax
0xeddb:	mov	esi, edi
0xeddd:	mov	dword ptr [rsp + 4], edi
0xede1:	mov	edi, 0x13c
0xede6:	call	0x2b30


0xed80:	lea	rcx, [rip + 0x20b2b9]
0xed87:	mov	rsi, rdi
0xed8a:	mov	rdx, -1
0xed91:	xor	edi, edi
0xed93:	jmp	0xe440


0xed60:	lea	rcx, [rip + 0x20b2d9]
0xed67:	mov	rdx, -1
0xed6e:	jmp	0xe440


0xed40:	lea	rcx, [rip + 0x20b2f9]
0xed47:	mov	rdx, rsi
0xed4a:	mov	rsi, rdi
0xed4d:	xor	edi, edi
0xed4f:	jmp	0xe440


0xed30:	lea	rcx, [rip + 0x20b309]
0xed37:	jmp	0xe440


0xed10:	mov	r8, rcx
0xed13:	mov	rcx, rdx
0xed16:	mov	rdx, rsi
0xed19:	mov	rsi, rdi
0xed1c:	xor	edi, edi
0xed1e:	jmp	0xec40


0xecf0:	mov	rcx, rdx
0xecf3:	mov	r8, -1
0xecfa:	mov	rdx, rsi
0xecfd:	mov	rsi, rdi
0xed00:	xor	edi, edi
0xed02:	jmp	0xec40


0xece0:	mov	r8, -1
0xece7:	jmp	0xec40


0xec40:	sub	rsp, 0x48
0xec44:	mov	r9, rcx
0xec47:	mov	rcx, qword ptr [rip + 0x20baa2]
0xec4e:	movdqa	xmm0, xmmword ptr [rip + 0x20ba6a]
0xec56:	mov	rax, qword ptr fs:[0x28]
0xec5f:	mov	qword ptr [rsp + 0x38], rax
0xec64:	xor	eax, eax
0xec66:	movaps	xmmword ptr [rsp], xmm0
0xec6a:	test	rsi, rsi
0xec6d:	mov	qword ptr [rsp + 0x30], rcx
0xec72:	mov	dword ptr [rsp], 0xa
0xec79:	movdqa	xmm0, xmmword ptr [rip + 0x20ba4f]
0xec81:	movaps	xmmword ptr [rsp + 0x10], xmm0
0xec86:	movdqa	xmm0, xmmword ptr [rip + 0x20ba52]
0xec8e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0xec93:	je	0xecc7


0xebb0:	sub	rsp, 0x48
0xebb4:	mov	rax, rdx
0xebb7:	mov	rdx, qword ptr fs:[0x28]
0xebc0:	mov	qword ptr [rsp + 0x38], rdx
0xebc5:	xor	edx, edx
0xebc7:	cmp	esi, 0xa
0xebca:	je	0xec34


0xeba0:	mov	edx, 0x3a
0xeba5:	jmp	0xead0


0xeb80:	mov	edx, 0x3a
0xeb85:	mov	rsi, -1
0xeb8c:	jmp	0xead0


0xeb70:	movsx	edx, sil
0xeb74:	mov	rsi, -1
0xeb7b:	jmp	0xead0


0xead0:	sub	rsp, 0x48
0xead4:	mov	ecx, edx
0xead6:	mov	rax, qword ptr fs:[0x28]
0xeadf:	mov	qword ptr [rsp + 0x38], rax
0xeae4:	xor	eax, eax
0xeae6:	mov	rax, qword ptr [rip + 0x20bc03]
0xeaed:	mov	r8, rsp
0xeaf0:	and	ecx, 0x1f
0xeaf3:	movdqa	xmm0, xmmword ptr [rip + 0x20bbc5]
0xeafb:	mov	qword ptr [rsp + 0x30], rax
0xeb00:	mov	eax, edx
0xeb02:	movaps	xmmword ptr [rsp], xmm0
0xeb06:	shr	al, 5
0xeb09:	movzx	eax, al
0xeb0c:	lea	r9, [r8 + rax*4 + 8]
0xeb11:	movdqa	xmm0, xmmword ptr [rip + 0x20bbb7]
0xeb19:	movaps	xmmword ptr [rsp + 0x10], xmm0
0xeb1e:	movdqa	xmm0, xmmword ptr [rip + 0x20bbba]
0xeb26:	movaps	xmmword ptr [rsp + 0x20], xmm0
0xeb2b:	mov	edx, dword ptr [r9]
0xeb2e:	mov	eax, edx
0xeb30:	shr	eax, cl
0xeb32:	not	eax
0xeb34:	and	eax, 1
0xeb37:	shl	eax, cl
0xeb39:	mov	rcx, r8
0xeb3c:	xor	eax, edx
0xeb3e:	mov	rdx, rsi
0xeb41:	mov	rsi, rdi
0xeb44:	mov	dword ptr [r9], eax
0xeb47:	xor	edi, edi
0xeb49:	call	0xe440


0xeac0:	mov	rcx, rdx
0xeac3:	mov	rdx, rsi
0xeac6:	mov	esi, edi
0xeac8:	xor	edi, edi
0xeaca:	jmp	0xea20


0xeab0:	mov	rdx, rsi
0xeab3:	mov	esi, edi
0xeab5:	xor	edi, edi
0xeab7:	jmp	0xe990


0xea20:	sub	rsp, 0x48
0xea24:	mov	rax, rdx
0xea27:	mov	rdx, rcx
0xea2a:	mov	rcx, qword ptr fs:[0x28]
0xea33:	mov	qword ptr [rsp + 0x38], rcx
0xea38:	xor	ecx, ecx
0xea3a:	cmp	esi, 0xa
0xea3d:	je	0xeaa0


0xe990:	sub	rsp, 0x48
0xe994:	mov	rax, rdx
0xe997:	mov	rdx, qword ptr fs:[0x28]
0xe9a0:	mov	qword ptr [rsp + 0x38], rdx
0xe9a5:	xor	edx, edx
0xe9a7:	cmp	esi, 0xa
0xe9aa:	je	0xea14


0xe970:	lea	rcx, [rip + 0x20bd49]
0xe977:	mov	rdx, rsi
0xe97a:	mov	rsi, rdi
0xe97d:	xor	edi, edi
0xe97f:	jmp	0xe440


0xe950:	lea	rcx, [rip + 0x20bd69]
0xe957:	mov	rsi, rdi
0xe95a:	mov	rdx, -1
0xe961:	xor	edi, edi
0xe963:	jmp	0xe440


0xe940:	lea	rcx, [rip + 0x20bd79]
0xe947:	jmp	0xe440


0xe920:	lea	rcx, [rip + 0x20bd99]
0xe927:	mov	rdx, -1
0xe92e:	jmp	0xe440


0xe880:	mov	eax, dword ptr [rip + 0x20b7f2]
0xe886:	push	r12
0xe888:	mov	r12, qword ptr [rip + 0x20b7f1]
0xe88f:	push	rbp
0xe890:	push	rbx
0xe891:	cmp	eax, 1
0xe894:	jle	0xe8c1


0xe870:	mov	rcx, rdx
0xe873:	xor	edx, edx
0xe875:	jmp	0xe780


0xe780:	push	r15
0xe782:	push	r14
0xe784:	lea	rax, [rip + 0x20bf35]
0xe78b:	push	r13
0xe78d:	push	r12
0xe78f:	mov	r12, rdx
0xe792:	push	rbp
0xe793:	push	rbx
0xe794:	mov	rbx, rcx
0xe797:	mov	r14, rdi
0xe79a:	mov	r15, rsi
0xe79d:	sub	rsp, 0x38
0xe7a1:	test	rcx, rcx
0xe7a4:	cmove	rbx, rax
0xe7a8:	xor	ebp, ebp
0xe7aa:	call	0x2770


0xe700:	push	r15
0xe702:	push	r14
0xe704:	lea	rax, [rip + 0x20bfb5]
0xe70b:	push	r13
0xe70d:	push	r12
0xe70f:	mov	r13, rdi
0xe712:	push	rbp
0xe713:	push	rbx
0xe714:	mov	rbx, r8
0xe717:	mov	r14, rsi
0xe71a:	mov	r15, rdx
0xe71d:	sub	rsp, 0x18
0xe721:	test	r8, r8
0xe724:	cmove	rbx, rax
0xe728:	mov	qword ptr [rsp + 8], rcx
0xe72d:	call	0x2770


0xe6d0:	lea	rax, [rip + 0x20bfe9]
0xe6d7:	test	rdi, rdi
0xe6da:	cmove	rdi, rax
0xe6de:	test	rsi, rsi
0xe6e1:	mov	dword ptr [rdi], 0xa
0xe6e7:	je	0xe6f7


0xe6b0:	lea	rax, [rip + 0x20c009]
0xe6b7:	test	rdi, rdi
0xe6ba:	cmove	rdi, rax
0xe6be:	mov	eax, dword ptr [rdi + 4]
0xe6c1:	mov	dword ptr [rdi + 4], esi
0xe6c4:	ret	


0xe670:	lea	rax, [rip + 0x20c049]
0xe677:	test	rdi, rdi
0xe67a:	mov	ecx, esi
0xe67c:	cmove	rdi, rax
0xe680:	mov	eax, esi
0xe682:	and	ecx, 0x1f
0xe685:	shr	al, 5
0xe688:	movzx	eax, al
0xe68b:	lea	rdi, [rdi + rax*4 + 8]
0xe690:	mov	esi, dword ptr [rdi]
0xe692:	mov	eax, esi
0xe694:	shr	eax, cl
0xe696:	xor	edx, eax
0xe698:	and	eax, 1
0xe69b:	and	edx, 1
0xe69e:	shl	edx, cl
0xe6a0:	xor	edx, esi
0xe6a2:	mov	dword ptr [rdi], edx
0xe6a4:	ret	


0xe650:	lea	rax, [rip + 0x20c069]
0xe657:	test	rdi, rdi
0xe65a:	cmove	rdi, rax
0xe65e:	mov	dword ptr [rdi], esi
0xe660:	ret	


0xe630:	lea	rax, [rip + 0x20c089]
0xe637:	test	rdi, rdi
0xe63a:	cmove	rdi, rax
0xe63e:	mov	eax, dword ptr [rdi]
0xe640:	ret	


0xe5f0:	push	r12
0xe5f2:	push	rbp
0xe5f3:	push	rbx
0xe5f4:	mov	rbx, rdi
0xe5f7:	call	0x2770


0xe440:	push	r15
0xe442:	push	r14
0xe444:	movsxd	r15, edi
0xe447:	push	r13
0xe449:	push	r12
0xe44b:	mov	r14, rdx
0xe44e:	push	rbp
0xe44f:	push	rbx
0xe450:	mov	rbp, rcx
0xe453:	sub	rsp, 0x28
0xe457:	mov	qword ptr [rsp + 8], rsi
0xe45c:	call	0x2770


0xd200:	push	r15
0xd202:	push	r14
0xd204:	mov	r15d, r8d
0xd207:	push	r13
0xd209:	push	r12
0xd20b:	mov	r14, rdi
0xd20e:	push	rbp
0xd20f:	push	rbx
0xd210:	mov	ebx, r9d
0xd213:	mov	r13, rsi
0xd216:	mov	rbp, rcx
0xd219:	and	ebx, 2
0xd21c:	sub	rsp, 0xb8
0xd223:	mov	rax, qword ptr [rsp + 0xf0]
0xd22b:	mov	qword ptr [rsp + 0x10], rdx
0xd230:	mov	dword ptr [rsp + 8], r8d
0xd235:	mov	dword ptr [rsp + 0x78], r9d
0xd23a:	mov	qword ptr [rsp + 0x20], rax
0xd23f:	mov	rax, qword ptr [rsp + 0xf8]
0xd247:	mov	qword ptr [rsp + 0x68], rax
0xd24c:	mov	rax, qword ptr [rsp + 0x100]
0xd254:	mov	qword ptr [rsp + 0x60], rax
0xd259:	mov	rax, qword ptr fs:[0x28]
0xd262:	mov	qword ptr [rsp + 0xa8], rax
0xd26a:	xor	eax, eax
0xd26c:	call	0x28f0


0xd110:	push	rbp
0xd111:	push	rbx
0xd112:	mov	rbp, rdi
0xd115:	mov	ebx, esi
0xd117:	sub	rsp, 8
0xd11b:	call	0x11740


0xd0b0:	push	rbp
0xd0b1:	push	rbx
0xd0b2:	sub	rsp, 0x18
0xd0b6:	lea	rbx, [rsp + 4]
0xd0bb:	mov	dword ptr [rsp + 4], edx
0xd0bf:	mov	edx, esi
0xd0c1:	mov	rsi, rdi
0xd0c4:	mov	rdi, rbx
0xd0c7:	mov	rax, qword ptr fs:[0x28]
0xd0d0:	mov	qword ptr [rsp + 8], rax
0xd0d5:	xor	eax, eax
0xd0d7:	call	0x114f0


0xd030:	push	r12
0xd032:	push	rbp
0xd033:	mov	r12d, ecx
0xd036:	push	rbx
0xd037:	mov	rbp, rdx
0xd03a:	mov	edx, r8d
0xd03d:	sub	rsp, 0x10
0xd041:	lea	rbx, [rsp + 4]
0xd046:	mov	rax, qword ptr fs:[0x28]
0xd04f:	mov	qword ptr [rsp + 8], rax
0xd054:	xor	eax, eax
0xd056:	mov	rcx, rbx
0xd059:	call	0x114c0


0xcf90:	test	rdi, rdi
0xcf93:	push	rbx
0xcf94:	je	0xd00d


0xcf10:	push	r13
0xcf12:	push	r12
0xcf14:	or	edx, 0x90900
0xcf1a:	push	rbp
0xcf1b:	push	rbx
0xcf1c:	xor	eax, eax
0xcf1e:	mov	r12, rcx
0xcf21:	sub	rsp, 8
0xcf25:	call	0x11780


0xcef0:	push	rbx
0xcef1:	mov	rbx, rdi
0xcef4:	mov	rdi, qword ptr [rdi]
0xcef7:	call	0x2e10


0xceb0:	xor	eax, eax
0xceb2:	mov	rdx, qword ptr [rsi + 8]
0xceb6:	cmp	qword ptr [rdi + 8], rdx
0xceba:	je	0xcec0


0xce80:	xor	eax, eax
0xce82:	mov	rdx, qword ptr [rsi + 8]
0xce86:	cmp	qword ptr [rdi + 8], rdx
0xce8a:	je	0xce90


0xce70:	mov	rax, qword ptr [rdi + 8]
0xce74:	xor	edx, edx
0xce76:	div	rsi
0xce79:	mov	rax, rdx
0xce7c:	ret	


0xce40:	push	rbp
0xce41:	push	rbx
0xce42:	mov	rbp, rdi
0xce45:	mov	rbx, rsi
0xce48:	sub	rsp, 8
0xce4c:	mov	rdi, qword ptr [rdi]
0xce4f:	call	0x11700


0xcc30:	push	r12
0xcc32:	push	rbp
0xcc33:	mov	ecx, 1
0xcc38:	push	rbx
0xcc39:	mov	rbx, rdi
0xcc3c:	sub	rsp, 0x10
0xcc40:	mov	rdx, rsp
0xcc43:	mov	rax, qword ptr fs:[0x28]
0xcc4c:	mov	qword ptr [rsp + 8], rax
0xcc51:	xor	eax, eax
0xcc53:	call	0xbc50


0xcbd0:	push	rbx
0xcbd1:	mov	rbx, rsi
0xcbd4:	sub	rsp, 0x10
0xcbd8:	mov	rdx, rsp
0xcbdb:	mov	rax, qword ptr fs:[0x28]
0xcbe4:	mov	qword ptr [rsp + 8], rax
0xcbe9:	xor	eax, eax
0xcbeb:	call	0xc940


0xc940:	push	r13
0xc942:	push	r12
0xc944:	push	rbp
0xc945:	push	rbx
0xc946:	sub	rsp, 0x18
0xc94a:	mov	rax, qword ptr fs:[0x28]
0xc953:	mov	qword ptr [rsp + 8], rax
0xc958:	xor	eax, eax
0xc95a:	test	rsi, rsi
0xc95d:	je	0xcb1d


0xc700:	push	r12
0xc702:	push	rbp
0xc703:	mov	rbp, rdi
0xc706:	push	rbx
0xc707:	sub	rsp, 0x60
0xc70b:	mov	r12, qword ptr [rdi + 0x28]
0xc70f:	mov	rax, qword ptr fs:[0x28]
0xc718:	mov	qword ptr [rsp + 0x58], rax
0xc71d:	xor	eax, eax
0xc71f:	cmp	byte ptr [r12 + 0x10], 0
0xc725:	jne	0xc778


0xc620:	push	r12
0xc622:	push	rbp
0xc623:	mov	r12, rdi
0xc626:	push	rbx
0xc627:	cmp	qword ptr [rdi + 0x40], 0
0xc62c:	mov	rbp, qword ptr [rdi]
0xc62f:	mov	rax, qword ptr [rdi + 8]
0xc633:	je	0xc683


0xc590:	push	r12
0xc592:	push	rbp
0xc593:	mov	rbp, rdi
0xc596:	push	rbx
0xc597:	mov	r12, qword ptr [rdi]
0xc59a:	cmp	r12, qword ptr [rdi + 8]
0xc59e:	jae	0xc60b


0xc3d0:	push	r15
0xc3d2:	push	r14
0xc3d4:	lea	rax, [rip - 0x7db]
0xc3db:	push	r13
0xc3dd:	push	r12
0xc3df:	mov	r12, rdx
0xc3e2:	push	rbp
0xc3e3:	push	rbx
0xc3e4:	mov	r13, rcx
0xc3e7:	mov	rbp, rdi
0xc3ea:	mov	edi, 0x50
0xc3ef:	mov	r15, rsi
0xc3f2:	sub	rsp, 8
0xc3f6:	test	rdx, rdx
0xc3f9:	mov	r14, r8
0xc3fc:	cmove	r12, rax
0xc400:	lea	rax, [rip - 0x7f7]
0xc407:	test	rcx, rcx
0xc40a:	cmove	r13, rax
0xc40e:	call	0x2bc0


0xc3b0:	movabs	rax, 0x3f80000000000000
0xc3ba:	mov	byte ptr [rdi + 0x10], 0
0xc3be:	mov	qword ptr [rdi], rax
0xc3c1:	movabs	rax, 0x3fb4fdf43f4ccccd
0xc3cb:	mov	qword ptr [rdi + 8], rax
0xc3cf:	ret	


0xc370:	movzx	ecx, byte ptr [rdi]
0xc373:	xor	edx, edx
0xc375:	test	cl, cl
0xc377:	je	0xc39d


0xc300:	push	r15
0xc302:	push	r14
0xc304:	push	r13
0xc306:	push	r12
0xc308:	push	rbp
0xc309:	push	rbx
0xc30a:	sub	rsp, 8
0xc30e:	mov	r14, qword ptr [rdi]
0xc311:	cmp	qword ptr [rdi + 8], r14
0xc315:	jbe	0xc366


0xc290:	mov	r9, qword ptr [rdi]
0xc293:	cmp	qword ptr [rdi + 8], r9
0xc297:	jbe	0xc2f2


0xc210:	push	rbp
0xc211:	push	rbx
0xc212:	mov	rbp, rdi
0xc215:	mov	rbx, rsi
0xc218:	sub	rsp, 8
0xc21c:	call	0xbc20


0xc1c0:	cmp	qword ptr [rdi + 0x20], 0
0xc1c5:	je	0xc1f3


0xc160:	push	r12
0xc162:	push	rbp
0xc163:	mov	r12, rdi
0xc166:	push	rbx
0xc167:	mov	rbp, rsi
0xc16a:	call	0xbc20


0xc010:	push	r13
0xc012:	push	r12
0xc014:	mov	r12, rsi
0xc017:	push	rbp
0xc018:	push	rbx
0xc019:	xor	ebx, ebx
0xc01b:	sub	rsp, 8
0xc01f:	mov	rsi, qword ptr [rdi]
0xc022:	mov	rcx, qword ptr [rdi + 0x20]
0xc026:	mov	rbp, qword ptr [rdi + 0x10]
0xc02a:	mov	r13, qword ptr [rdi + 0x18]
0xc02e:	mov	rdi, qword ptr [rdi + 8]
0xc032:	cmp	rsi, rdi
0xc035:	jae	0xc075


0xbfb0:	mov	rcx, qword ptr [rdi]
0xbfb3:	mov	r8, qword ptr [rdi + 8]
0xbfb7:	xor	edx, edx
0xbfb9:	xor	esi, esi
0xbfbb:	cmp	rcx, r8
0xbfbe:	jae	0xbff6


0xbf60:	mov	rsi, qword ptr [rdi]
0xbf63:	mov	rdi, qword ptr [rdi + 8]
0xbf67:	xor	eax, eax
0xbf69:	cmp	rsi, rdi
0xbf6c:	jae	0xbfa7


0xbf50:	mov	rax, qword ptr [rdi + 0x20]
0xbf54:	ret	


0xbf40:	mov	rax, qword ptr [rdi + 0x18]
0xbf44:	ret	


0xbf30:	mov	rax, qword ptr [rdi + 0x10]
0xbf34:	ret	


0xbdf0:	push	r15
0xbdf2:	push	r14
0xbdf4:	push	r13
0xbdf6:	push	r12
0xbdf8:	push	rbp
0xbdf9:	push	rbx
0xbdfa:	sub	rsp, 8
0xbdfe:	mov	r12, qword ptr [rsi]
0xbe01:	cmp	r12, qword ptr [rsi + 8]
0xbe05:	jae	0xbee8


0xbd70:	mov	rdx, qword ptr [rdi]
0xbd73:	lea	rcx, [rip + 0x9526]
0xbd7a:	mov	eax, 1
0xbd7f:	cmp	rdx, rcx
0xbd82:	je	0xbde5


0xbc50:	push	r14
0xbc52:	push	r13
0xbc54:	mov	r14, rdx
0xbc57:	push	r12
0xbc59:	push	rbp
0xbc5a:	mov	r12, rdi
0xbc5d:	push	rbx
0xbc5e:	mov	rbp, rsi
0xbc61:	mov	r13d, ecx
0xbc64:	call	0xbc20


0xbc20:	push	rbx
0xbc21:	mov	rbx, rdi
0xbc24:	mov	rdi, rsi
0xbc27:	mov	rsi, qword ptr [rbx + 0x10]
0xbc2b:	call	qword ptr [rbx + 0x30]


0xbc10:	cmp	rdi, rsi
0xbc13:	sete	al
0xbc16:	ret	


0xbc00:	mov	rax, rdi
0xbc03:	xor	edx, edx
0xbc05:	ror	rax, 3
0xbc09:	div	rsi
0xbc0c:	mov	rax, rdx
0xbc0f:	ret	


0xbb60:	cmp	rdi, 0xa
0xbb64:	mov	eax, 0xa
0xbb69:	movabs	r9, 0xaaaaaaaaaaaaaaab
0xbb73:	cmovb	rdi, rax
0xbb77:	or	rdi, 1
0xbb7b:	cmp	rdi, -1
0xbb7f:	je	0xbbef


0xbae0:	push	r13
0xbae2:	push	r12
0xbae4:	push	rbp
0xbae5:	push	rbx
0xbae6:	sub	rsp, 8
0xbaea:	test	rdx, rdx
0xbaed:	je	0xbb51


0xb9e0:	push	r15
0xb9e2:	push	r14
0xb9e4:	mov	r15, rdx
0xb9e7:	push	r13
0xb9e9:	push	r12
0xb9eb:	mov	r12, rdi
0xb9ee:	push	rbp
0xb9ef:	push	rbx
0xb9f0:	mov	rbp, rsi
0xb9f3:	sub	rsp, 0x18
0xb9f7:	call	0xb590


0xb9c0:	sub	rsp, 8
0xb9c4:	call	0xb9e0


0xb9b0:	mov	edi, dword ptr [rdi + 0x18]
0xb9b3:	jmp	0xb820


0xb820:	mov	edx, edi
0xb822:	mov	eax, 0x2d
0xb827:	and	edx, 0xf000
0xb82d:	cmp	edx, 0x8000
0xb833:	je	0xb890


0xb7c0:	sub	rsp, 0x28
0xb7c4:	mov	rax, qword ptr fs:[0x28]
0xb7cd:	mov	qword ptr [rsp + 0x18], rax
0xb7d2:	xor	eax, eax
0xb7d4:	test	rdi, rdi
0xb7d7:	je	0xb7fc


0xb730:	test	rdi, rdi
0xb733:	je	0xb7b0


0xb6c0:	sub	rsp, 0x58
0xb6c4:	mov	qword ptr [rsp + 0x30], rdx
0xb6c9:	xor	edx, edx
0xb6cb:	mov	rax, qword ptr fs:[0x28]
0xb6d4:	mov	qword ptr [rsp + 0x18], rax
0xb6d9:	xor	eax, eax
0xb6db:	test	sil, 0x40
0xb6df:	jne	0xb708


0xb690:	test	rdi, rdi
0xb693:	je	0xb6b0


0xb680:	jmp	0x2a70


0xb640:	push	rbp
0xb641:	push	rbx
0xb642:	mov	rbp, rdi
0xb645:	sub	rsp, 8
0xb649:	call	0xb590


0xb5f0:	push	rbx
0xb5f1:	mov	rbx, rdi
0xb5f4:	call	0x2900


0xb590:	movzx	edx, byte ptr [rdi]
0xb593:	mov	rax, rdi
0xb596:	cmp	dl, 0x2f
0xb599:	jne	0xb5ac


0xb530:	push	rbp
0xb531:	push	rbx
0xb532:	mov	rbp, rdi
0xb535:	sub	rsp, 8
0xb539:	call	0xb4d0


0xb4d0:	push	rbp
0xb4d1:	push	rbx
0xb4d2:	xor	ebp, ebp
0xb4d4:	mov	rbx, rdi
0xb4d7:	sub	rsp, 8
0xb4db:	cmp	byte ptr [rdi], 0x2f
0xb4de:	sete	bpl
0xb4e2:	call	0xb590


0xb4b0:	sub	rsp, 8
0xb4b4:	call	0xb530


0xb400:	push	rbp
0xb401:	push	rbx
0xb402:	sub	rsp, 8
0xb406:	mov	rdi, qword ptr [rip + 0x20ec9b]
0xb40d:	call	0x11520


0xb3f0:	mov	byte ptr [rip + 0x20f199], dil
0xb3f7:	ret	


0xb3e0:	mov	qword ptr [rip + 0x20f1b1], rdi
0xb3e7:	ret	


0xb2d0:	push	r12
0xb2d2:	push	rbp
0xb2d3:	push	rbx
0xb2d4:	mov	rbx, qword ptr [rip + 0x20edd5]
0xb2db:	mov	rdi, rbx
0xb2de:	call	0x11390


0xb2c0:	mov	qword ptr [rip + 0x20f2c1], rdi
0xb2c7:	ret	


0xb250:	test	rdi, rdi
0xb253:	mov	rcx, rdx
0xb256:	jne	0xb278


0xb200:	test	rsi, rsi
0xb203:	je	0xb20a


0xb1e0:	test	rsi, rsi
0xb1e3:	je	0xb1f0


0xb1c0:	sub	rsp, 8
0xb1c4:	xor	ecx, ecx
0xb1c6:	call	0xab50


0xb180:	sub	rsp, 8
0xb184:	mov	r9, qword ptr [rip + 0x20ee9d]
0xb18b:	lea	rdx, [rip + 0x20e7ee]
0xb192:	lea	rcx, [rip + 0xa047]
0xb199:	mov	r8d, 4
0xb19f:	call	0xaa40


0xb170:	mov	ecx, 1
0xb175:	jmp	0xab50


0xab50:	push	r15
0xab52:	push	r14
0xab54:	push	r13
0xab56:	push	r12
0xab58:	push	rbp
0xab59:	push	rbx
0xab5a:	mov	rbx, rsi
0xab5d:	sub	rsp, 0x88
0xab64:	mov	dword ptr [rsp + 0x64], edi
0xab68:	mov	rdi, rsi
0xab6b:	mov	qword ptr [rsp + 0x10], rsi
0xab70:	mov	dword ptr [rsp + 0x20], edx
0xab74:	mov	byte ptr [rsp + 0x63], cl
0xab78:	mov	rax, qword ptr fs:[0x28]
0xab81:	mov	qword ptr [rsp + 0x78], rax
0xab86:	xor	eax, eax
0xab88:	call	0xb590


0xab00:	test	rdi, rdi
0xab03:	push	rbx
0xab04:	mov	rbx, rdi
0xab07:	je	0xab30


0xaab0:	push	r14
0xaab2:	push	r13
0xaab4:	push	r12
0xaab6:	push	rbp
0xaab7:	push	rbx
0xaab8:	mov	r14, qword ptr [rsi]
0xaabb:	test	r14, r14
0xaabe:	je	0xaaf1


0xaa40:	push	r15
0xaa42:	push	r14
0xaa44:	mov	r14, rdi
0xaa47:	push	r13
0xaa49:	push	r12
0xaa4b:	mov	r12, rsi
0xaa4e:	push	rbp
0xaa4f:	push	rbx
0xaa50:	mov	rbp, rcx
0xaa53:	mov	rbx, rdx
0xaa56:	mov	rcx, r8
0xaa59:	mov	rdx, rbp
0xaa5c:	sub	rsp, 8
0xaa60:	mov	rsi, rbx
0xaa63:	mov	rdi, r12
0xaa66:	mov	r15, r8
0xaa69:	mov	r13, r9
0xaa6c:	call	0xa780


0xa920:	push	r15
0xa922:	push	r14
0xa924:	mov	r14, rdi
0xa927:	push	r13
0xa929:	push	r12
0xa92b:	xor	edi, edi
0xa92d:	push	rbp
0xa92e:	push	rbx
0xa92f:	mov	rbp, rsi
0xa932:	lea	rsi, [rip + 0xa835]
0xa939:	mov	r12, rdx
0xa93c:	mov	edx, 5
0xa941:	sub	rsp, 8
0xa945:	mov	rbx, qword ptr [rip + 0x20f794]
0xa94c:	call	0x28e0


0xa8a0:	cmp	rdx, -1
0xa8a4:	push	r12
0xa8a6:	mov	edx, 5
0xa8ab:	push	rbp
0xa8ac:	mov	r12, rsi
0xa8af:	push	rbx
0xa8b0:	mov	rbp, rdi
0xa8b3:	je	0xa900


0xa780:	push	r15
0xa782:	push	r14
0xa784:	mov	r15, rsi
0xa787:	push	r13
0xa789:	push	r12
0xa78b:	mov	r13, rcx
0xa78e:	push	rbp
0xa78f:	push	rbx
0xa790:	mov	rbp, rdx
0xa793:	sub	rsp, 0x28
0xa797:	mov	qword ptr [rsp + 8], rdi
0xa79c:	mov	qword ptr [rsp + 0x18], rdx
0xa7a1:	call	0x2900


0xa770:	mov	edi, 1
0xa775:	jmp	0x4220


0xa680:	push	r15
0xa682:	push	r14
0xa684:	mov	eax, 0x401
0xa689:	push	r13
0xa68b:	push	r12
0xa68d:	mov	r13, rdi
0xa690:	push	rbp
0xa691:	push	rbx
0xa692:	lea	rbx, [rsi + 1]
0xa696:	movabs	r14, 0x3fffffffffffffff
0xa6a0:	movabs	r15, 0x7ffffffffffffffe
0xa6aa:	sub	rsp, 8
0xa6ae:	cmp	rsi, 0x401
0xa6b5:	cmovae	rbx, rax
0xa6b9:	nop	dword ptr [rax]
0xa6c0:	mov	rdi, rbx
0xa6c3:	call	0x2bc0


0xa630:	push	r12
0xa632:	push	rbp
0xa633:	mov	rbp, rdi
0xa636:	push	rbx
0xa637:	call	0xd0b0


0xa5a0:	push	r12
0xa5a2:	push	rbp
0xa5a3:	mov	r12, rdi
0xa5a6:	push	rbx
0xa5a7:	mov	rbp, rdx
0xa5aa:	call	0xd030


0xa440:	push	r14
0xa442:	push	r13
0xa444:	push	r12
0xa446:	push	rbp
0xa447:	mov	r12, rdi
0xa44a:	push	rbx
0xa44b:	mov	ebp, esi
0xa44d:	mov	rbx, rdx
0xa450:	sub	rsp, 0x130
0xa457:	mov	rax, qword ptr fs:[0x28]
0xa460:	mov	qword ptr [rsp + 0x128], rax
0xa468:	xor	eax, eax
0xa46a:	test	r8d, r8d
0xa46d:	js	0xa518


0xa2d0:	push	r15
0xa2d2:	push	r14
0xa2d4:	mov	r14d, edi
0xa2d7:	push	r13
0xa2d9:	push	r12
0xa2db:	mov	r13, rsi
0xa2de:	push	rbp
0xa2df:	push	rbx
0xa2e0:	mov	rbx, rcx
0xa2e3:	mov	ebp, edx
0xa2e5:	mov	r12d, r8d
0xa2e8:	sub	rsp, 0x148
0xa2ef:	mov	ecx, dword ptr [rsp + 0x180]
0xa2f6:	mov	rax, qword ptr fs:[0x28]
0xa2ff:	mov	qword ptr [rsp + 0x138], rax
0xa307:	xor	eax, eax
0xa309:	test	ecx, ecx
0xa30b:	js	0xa3c0


0xa2b0:	mov	rax, rsi
0xa2b3:	mov	rdx, rdi
0xa2b6:	mov	esi, dword ptr [rsi + 8]
0xa2b9:	mov	rdi, qword ptr [rax]
0xa2bc:	jmp	0x2dd0


0xa250:	push	r12
0xa252:	push	rbp
0xa253:	mov	rbp, rdi
0xa256:	push	rbx
0xa257:	mov	r12, rsi
0xa25a:	call	0xb590


0xa230:	mov	rax, rsi
0xa233:	mov	rcx, rdi
0xa236:	mov	edx, dword ptr [rsi + 0x10]
0xa239:	mov	r8d, dword ptr [rax + 0x14]
0xa23d:	mov	rsi, qword ptr [rsi + 8]
0xa241:	mov	edi, dword ptr [rax]
0xa243:	jmp	0x2c40


0x9f20:	push	r15
0x9f22:	push	r14
0x9f24:	xor	r15d, r15d
0x9f27:	push	r13
0x9f29:	push	r12
0x9f2b:	mov	r14, rdi
0x9f2e:	push	rbp
0x9f2f:	push	rbx
0x9f30:	movabs	r13, 0x7fffffffffffffff
0x9f3a:	sub	rsp, 0x1018
0x9f41:	mov	rbx, qword ptr [rdi + 0x28]
0x9f45:	mov	rdx, qword ptr [rdi + 8]
0x9f49:	mov	rbp, rsp
0x9f4c:	mov	rax, qword ptr fs:[0x28]
0x9f55:	mov	qword ptr [rsp + 0x1008], rax
0x9f5d:	xor	eax, eax
0x9f5f:	lea	r12, [rbp + 0x20]
0x9f63:	xor	eax, eax
0x9f65:	mov	ecx, 0x200
0x9f6a:	mov	rdi, rbp
0x9f6d:	rep stosq	qword ptr [rdi], rax


0x9ef0:	mov	dword ptr [rsi], edi
0x9ef2:	mov	qword ptr [rsi + 0x18], 0
0x9efa:	mov	qword ptr [rsi + 0x28], 0
0x9f02:	mov	qword ptr [rsi + 8], 0
0x9f0a:	mov	byte ptr [rsi + 0x20], 0
0x9f0e:	mov	byte ptr [rsi + 0x21], 0
0x9f12:	mov	dword ptr [rsi + 0x10], 1
0x9f19:	ret	


0x9ee0:	mov	rdi, qword ptr [rip + 0x210691]
0x9ee7:	jmp	0xc620


0x9ea0:	lea	r8, [rip - 0x177]
0x9ea7:	lea	rcx, [rip - 0x19e]
0x9eae:	lea	rdx, [rip - 0x1b5]
0x9eb5:	sub	rsp, 8
0x9eb9:	xor	esi, esi
0x9ebb:	mov	edi, 0x67
0x9ec0:	call	0xc3d0


0x9e20:	push	r13
0x9e22:	push	r12
0x9e24:	mov	r13, rdi
0x9e27:	push	rbp
0x9e28:	push	rbx
0x9e29:	mov	edi, 0x18
0x9e2e:	mov	r12, rsi
0x9e31:	mov	rbp, rdx
0x9e34:	sub	rsp, 8
0x9e38:	call	0x11020


0x9dc0:	sub	rsp, 0x28
0x9dc4:	mov	qword ptr [rsp], rdi
0x9dc8:	mov	rdi, qword ptr [rip + 0x2107a9]
0x9dcf:	mov	qword ptr [rsp + 8], rsi
0x9dd4:	mov	rsi, rsp
0x9dd7:	mov	rax, qword ptr fs:[0x28]
0x9de0:	mov	qword ptr [rsp + 0x18], rax
0x9de5:	xor	eax, eax
0x9de7:	call	0xc160


0x9d50:	push	rbx
0x9d51:	sub	rsp, 0x20
0x9d55:	mov	qword ptr [rsp], rdi
0x9d59:	mov	rdi, qword ptr [rip + 0x210818]
0x9d60:	mov	qword ptr [rsp + 8], rsi
0x9d65:	mov	rsi, rsp
0x9d68:	mov	qword ptr [rsp + 0x10], 0
0x9d71:	mov	rax, qword ptr fs:[0x28]
0x9d7a:	mov	qword ptr [rsp + 0x18], rax
0x9d7f:	xor	eax, eax
0x9d81:	call	0xcc30


0x9d30:	push	rbx
0x9d31:	mov	rbx, rdi
0x9d34:	mov	rdi, qword ptr [rdi + 0x10]
0x9d38:	call	0x2e10


0x9d10:	xor	eax, eax
0x9d12:	mov	rdx, qword ptr [rsi]
0x9d15:	cmp	qword ptr [rdi], rdx
0x9d18:	je	0x9d20


0x9d00:	mov	rax, qword ptr [rdi]
0x9d03:	xor	edx, edx
0x9d05:	div	rsi
0x9d08:	mov	rax, rdx
0x9d0b:	ret	


0x9b90:	sub	rsp, 0x18
0x9b94:	mov	rax, qword ptr fs:[0x28]
0x9b9d:	mov	qword ptr [rsp + 8], rax
0x9ba2:	xor	eax, eax
0x9ba4:	test	rcx, rcx
0x9ba7:	je	0x9cd6


0x5a80:	push	rbp
0x5a81:	mov	rbp, rsp
0x5a84:	push	r15
0x5a86:	push	r14
0x5a88:	push	r13
0x5a8a:	push	r12
0x5a8c:	mov	r14d, edx
0x5a8f:	push	rbx
0x5a90:	mov	rbx, r9
0x5a93:	sub	rsp, 0x398
0x5a9a:	mov	rax, qword ptr [rbp + 0x18]
0x5a9e:	mov	r13d, dword ptr [rbp + 0x10]
0x5aa2:	mov	qword ptr [rbp - 0x348], rcx
0x5aa9:	mov	rcx, qword ptr [rbp + 0x28]
0x5aad:	mov	qword ptr [rbp - 0x310], rdi
0x5ab4:	mov	qword ptr [rbp - 0x308], rsi
0x5abb:	mov	qword ptr [rbp - 0x338], rax
0x5ac2:	mov	rax, qword ptr [rbp + 0x20]
0x5ac6:	mov	qword ptr [rbp - 0x320], rcx
0x5acd:	mov	qword ptr [rbp - 0x330], r8
0x5ad4:	mov	rcx, qword ptr fs:[0x28]
0x5add:	mov	qword ptr [rbp - 0x38], rcx
0x5ae1:	xor	ecx, ecx
0x5ae3:	mov	byte ptr [rax], 0
0x5ae6:	movzx	r12d, byte ptr [r9 + 0x18]
0x5aeb:	mov	qword ptr [rbp - 0x340], rax
0x5af2:	mov	byte ptr [rbp - 0x315], r13b
0x5af9:	mov	r15d, dword ptr [r9 + 0x34]
0x5afd:	test	r12b, r12b
0x5b00:	je	0x5b21


0x5a50:	push	rbx
0x5a51:	mov	ebx, dword ptr [rip + 0x2145b9]
0x5a57:	cmp	ebx, -1
0x5a5a:	je	0x5a60


0x5840:	push	r15
0x5842:	push	r14
0x5844:	push	r13
0x5846:	push	r12
0x5848:	mov	r13, rsi
0x584b:	push	rbp
0x584c:	push	rbx
0x584d:	mov	rbp, rdi
0x5850:	mov	ebx, edx
0x5852:	sub	rsp, 8
0x5856:	test	r8b, r8b
0x5859:	mov	r14d, dword ptr [rcx + 0x1c]
0x585d:	mov	r12d, dword ptr [rcx + 0x20]
0x5861:	jne	0x5895


0x5810:	push	rbx
0x5811:	mov	rbx, rdi
0x5814:	call	0x2770


0x57d0:	pxor	xmm0, xmm0
0x57d4:	push	rbx
0x57d5:	mov	rbx, rdi
0x57d8:	movups	xmmword ptr [rdi], xmm0
0x57db:	movups	xmmword ptr [rdi + 0x10], xmm0
0x57df:	movups	xmmword ptr [rdi + 0x20], xmm0
0x57e3:	movups	xmmword ptr [rdi + 0x30], xmm0
0x57e7:	movups	xmmword ptr [rdi + 0x40], xmm0
0x57eb:	call	0x2a00


0x57a0:	lea	r8, [rip + 0x7749]
0x57a7:	lea	rcx, [rip + 0x76d2]
0x57ae:	xor	esi, esi
0x57b0:	lea	rdx, [rip + 0x76b9]
0x57b7:	push	rbx
0x57b8:	mov	rbx, rdi
0x57bb:	mov	edi, 0x3d
0x57c0:	call	0xc3d0


0x5770:	lea	r8, [rip + 0x7779]
0x5777:	lea	rcx, [rip + 0x7702]
0x577e:	xor	esi, esi
0x5780:	lea	rdx, [rip + 0x76b9]
0x5787:	push	rbx
0x5788:	mov	rbx, rdi
0x578b:	mov	edi, 0x3d
0x5790:	call	0xc3d0


0x56f0:	push	r12
0x56f2:	push	rbp
0x56f3:	mov	rbp, rcx
0x56f6:	push	rbx
0x56f7:	mov	r12, rdi
0x56fa:	call	0x2770


0x5620:	push	r13
0x5622:	push	r12
0x5624:	push	rbp
0x5625:	push	rbx
0x5626:	mov	rbp, r8
0x5629:	sub	rsp, 8
0x562d:	cmp	byte ptr [r8 + 0x25], 0
0x5632:	je	0x56a0


0x5210:	push	r15
0x5212:	push	r14
0x5214:	push	r13
0x5216:	push	r12
0x5218:	push	rbp
0x5219:	push	rbx
0x521a:	sub	rsp, 0x78
0x521e:	mov	rax, qword ptr [rsp + 0xb0]
0x5226:	mov	rbx, qword ptr [rsp + 0xc8]
0x522e:	mov	r10, qword ptr [rsp + 0xd0]
0x5236:	mov	byte ptr [rsp + 0x1f], r9b
0x523b:	mov	qword ptr [rsp + 0x58], rax
0x5240:	mov	rax, qword ptr [rsp + 0xb8]
0x5248:	mov	byte ptr [r10], 0
0x524c:	mov	qword ptr [rsp + 0x40], rbx
0x5251:	mov	qword ptr [rsp + 0x60], r10
0x5256:	mov	qword ptr [rbx], 0
0x525d:	mov	qword ptr [rsp + 0x10], rax
0x5262:	mov	rax, qword ptr [rsp + 0xc0]
0x526a:	test	rax, rax
0x526d:	mov	qword ptr [rsp + 0x28], rax
0x5272:	je	0x5613


0x5150:	push	r13
0x5152:	push	r12
0x5154:	mov	r13, rsi
0x5157:	push	rbp
0x5158:	push	rbx
0x5159:	mov	r12d, edx
0x515c:	mov	rsi, rcx
0x515f:	mov	edx, 1
0x5164:	mov	ebp, edi
0x5166:	sub	rsp, 8
0x516a:	mov	rbx, rcx
0x516d:	call	0x29c0


0x5000:	push	r14
0x5002:	push	r13
0x5004:	mov	r13, rdi
0x5007:	push	r12
0x5009:	push	rbp
0x500a:	mov	rbp, rdx
0x500d:	push	rbx
0x500e:	mov	rbx, rsi
0x5011:	mov	rdi, rbx
0x5014:	sub	rsp, 0x20
0x5018:	mov	esi, dword ptr [rdx]
0x501a:	mov	rax, qword ptr fs:[0x28]
0x5023:	mov	qword ptr [rsp + 0x18], rax
0x5028:	xor	eax, eax
0x502a:	call	0x4cf0


0x4ef0:	push	r13
0x4ef2:	push	r12
0x4ef4:	movzx	r9d, dl
0x4ef8:	push	rbp
0x4ef9:	push	rbx
0x4efa:	mov	edx, 0xffffff9c
0x4eff:	mov	r13, rdi
0x4f02:	mov	r12, rsi
0x4f05:	mov	ebp, ecx
0x4f07:	sub	rsp, 0x10
0x4f0b:	test	r8b, r8b
0x4f0e:	mov	rcx, rsi
0x4f11:	setne	r8b
0x4f15:	push	-1
0x4f17:	mov	rsi, rdi
0x4f1a:	movzx	r8d, r8b
0x4f1e:	mov	edi, edx
0x4f20:	shl	r8d, 0xa
0x4f24:	call	0xa2d0


0x4e30:	push	r12
0x4e32:	push	rbp
0x4e33:	mov	r12, rdi
0x4e36:	push	rbx
0x4e37:	mov	edi, 1
0x4e3c:	mov	rbx, rdx
0x4e3f:	mov	rdx, rsi
0x4e42:	mov	esi, 4
0x4e47:	call	0xe990


0x4df0:	push	rbx
0x4df1:	mov	rcx, rdx
0x4df4:	mov	rdx, rsi
0x4df7:	mov	esi, 3
0x4dfc:	call	0x2aa0


0x4d40:	cmp	qword ptr [rip + 0x215818], 0
0x4d48:	push	r12
0x4d4a:	mov	r12d, edi
0x4d4d:	push	rbp
0x4d4e:	push	rbx
0x4d4f:	mov	rbx, rsi
0x4d52:	je	0x4da8


0x4cf0:	and	esi, 0xf000
0x4cf6:	cmp	esi, 0xa000
0x4cfc:	je	0x4d18


0x47e0:	push	rbp
0x47e1:	mov	rbp, rsp
0x47e4:	push	r15
0x47e6:	push	r14
0x47e8:	push	r13
0x47ea:	push	r12
0x47ec:	movsxd	r12, edi
0x47ef:	push	rbx
0x47f0:	mov	rbx, rsi
0x47f3:	sub	rsp, 0xe8
0x47fa:	mov	qword ptr [rbp - 0xf8], rdx
0x4801:	mov	byte ptr [rbp - 0xe2], 0
0x4808:	mov	rax, qword ptr fs:[0x28]
0x4811:	mov	qword ptr [rbp - 0x38], rax
0x4815:	xor	eax, eax
0x4817:	test	dword ptr [r8 + 0x14], 0xffff00
0x481f:	setne	al
0x4822:	test	rdx, rdx
0x4825:	sete	dl
0x4828:	movzx	edx, dl
0x482b:	cmp	edx, r12d
0x482e:	jge	0x4c93


0x4220:	push	r13
0x4222:	push	r12
0x4224:	mov	edx, 5
0x4229:	push	rbp
0x422a:	push	rbx
0x422b:	mov	ebp, edi
0x422d:	sub	rsp, 0x88
0x4234:	mov	rbx, qword ptr [rip + 0x216365]
0x423b:	mov	rax, qword ptr fs:[0x28]
0x4244:	mov	qword ptr [rsp + 0x78], rax
0x4249:	xor	eax, eax
0x424b:	test	edi, edi
0x424d:	je	0x427d


0x3fc0:	push	rbp
0x3fc1:	mov	rbp, rsp
0x3fc4:	push	r15
0x3fc6:	push	r14
0x3fc8:	push	r13
0x3fca:	push	r12
0x3fcc:	mov	r14, rsi
0x3fcf:	push	rbx
0x3fd0:	mov	r12, rdi
0x3fd3:	mov	rbx, rdx
0x3fd6:	mov	r13, rcx
0x3fd9:	sub	rsp, 0x48
0x3fdd:	mov	rax, qword ptr fs:[0x28]
0x3fe6:	mov	qword ptr [rbp - 0x38], rax
0x3fea:	xor	eax, eax
0x3fec:	call	0x2900


0x3a00:	push	rbp
0x3a01:	mov	rbp, rsp
0x3a04:	push	r15
0x3a06:	push	r14
0x3a08:	push	r13
0x3a0a:	push	r12
0x3a0c:	mov	r13, r9
0x3a0f:	push	rbx
0x3a10:	mov	r15, rsi
0x3a13:	mov	rbx, rdi
0x3a16:	sub	rsp, 0x168
0x3a1d:	mov	qword ptr [rbp - 0x180], rcx
0x3a24:	mov	qword ptr [rbp - 0x178], r8
0x3a2b:	mov	qword ptr [rbp - 0x190], rdx
0x3a32:	mov	rdx, qword ptr fs:[0x28]
0x3a3b:	mov	qword ptr [rbp - 0x38], rdx
0x3a3f:	xor	edx, edx
0x3a41:	call	0x2900


0x3930:	push	r14
0x3932:	push	r13
0x3934:	mov	r14, rdx
0x3937:	push	r12
0x3939:	push	rbp
0x393a:	mov	rdx, rsi
0x393d:	push	rbx
0x393e:	mov	rbp, rdi
0x3941:	mov	rbx, rsi
0x3944:	mov	rsi, rdi
0x3947:	mov	edi, 1
0x394c:	mov	r13d, ecx
0x394f:	call	0x2ba0


0x37e0:	push	r15
0x37e2:	push	r14
0x37e4:	lea	r14, [rip + 0xf0f9]
0x37eb:	push	r13
0x37ed:	push	r12
0x37ef:	mov	r12d, edx
0x37f2:	push	rbp
0x37f3:	push	rbx
0x37f4:	mov	rbp, rsi
0x37f7:	mov	ebx, edx
0x37f9:	lea	r13, [rip + 0xf850]
0x3800:	sub	rsp, 0x18
0x3804:	call	0x11250


0x37d0:	push	rbp
0x37d1:	mov	rbp, rsp
0x37d4:	pop	rbp
0x37d5:	jmp	0x3740


0x3790:	cmp	byte ptr [rip + 0x216951], 0
0x3797:	jne	0x37c8


0x3740:	lea	rdi, [rip + 0x216959]
0x3747:	lea	rsi, [rip + 0x216952]
0x374e:	push	rbp
0x374f:	sub	rsi, rdi
0x3752:	mov	rbp, rsp
0x3755:	sar	rsi, 3
0x3759:	mov	rax, rsi
0x375c:	shr	rax, 0x3f
0x3760:	add	rsi, rax
0x3763:	sar	rsi, 1
0x3766:	je	0x3780


0x3700:	lea	rdi, [rip + 0x216999]
0x3707:	push	rbp
0x3708:	lea	rax, [rip + 0x216991]
0x370f:	cmp	rax, rdi
0x3712:	mov	rbp, rsp
0x3715:	je	0x3730


0x36d0:	xor	ebp, ebp
0x36d2:	mov	r9, rdx
0x36d5:	pop	rsi
0x36d6:	mov	rdx, rsp
0x36d9:	and	rsp, 0xfffffffffffffff0
0x36dd:	push	rax
0x36de:	push	rsp
0x36df:	lea	r8, [rip + 0xf1ba]
0x36e6:	lea	rcx, [rip + 0xf143]
0x36ed:	lea	rdi, [rip - 0x884]
0x36f4:	call	qword ptr [rip + 0x2168de]


0x2e70:	push	r15
0x2e72:	push	r14
0x2e74:	mov	r14d, 1
0x2e7a:	push	r13
0x2e7c:	push	r12
0x2e7e:	mov	r12d, edi
0x2e81:	push	rbp
0x2e82:	push	rbx
0x2e83:	mov	rbp, rsi
0x2e86:	lea	r13, [rip + 0x2166f3]
0x2e8d:	lea	rbx, [rip + 0xfd88]
0x2e94:	sub	rsp, 0x128
0x2e9b:	mov	rdi, qword ptr [rsi]
0x2e9e:	mov	rax, qword ptr fs:[0x28]
0x2ea7:	mov	qword ptr [rsp + 0x118], rax
0x2eaf:	xor	eax, eax
0x2eb1:	lea	r15, [rsp + 0x30]
0x2eb6:	call	0xcf90


0x2e36:	push	rbx
0x2e37:	call	0x2770


0x2e20:	test	edi, edi
0x2e22:	mov	rax, rsi
0x2e25:	mov	esi, edx
0x2e27:	js	0x2e2e


0x2710:	sub	rsp, 8
0x2714:	mov	rax, qword ptr [rip + 0x2178c5]
0x271b:	test	rax, rax
0x271e:	je	0x2722


0x2d50:	jmp	qword ptr [rip + 0x217212]


0x2d00:	jmp	qword ptr [rip + 0x21723a]


0x12762:	mov	rax, qword ptr [rsp + 0x10]
0x12767:	xor	esi, esi
0x12769:	mov	edx, dword ptr [rax + 0x10]
0x1276c:	xor	eax, eax
0x1276e:	call	0x2820


0x12561:	cmp	esi, 0x406
0x12567:	jne	0x125b0


0x2b80:	jmp	qword ptr [rip + 0x2172fa]


0x12380:	add	rsi, qword ptr [rdx + 0x20]
0x12384:	add	rcx, qword ptr [rdx + 0x38]
0x12388:	mov	r12, qword ptr [rdx]
0x1238b:	add	rbp, qword ptr [rdx + 0x28]
0x1238f:	add	r10, qword ptr [rdx + 0x30]
0x12393:	sub	r12, rsi
0x12396:	add	r9, r12
0x12399:	mov	r12, rcx
0x1239c:	shr	r12, 9
0x123a0:	add	rcx, r9
0x123a3:	xor	rbp, r12
0x123a6:	mov	r12, qword ptr [rdx + 8]
0x123aa:	sub	r12, rbp
0x123ad:	add	r11, r12
0x123b0:	mov	r12, r9
0x123b3:	shl	r12, 9
0x123b7:	add	r9, r11
0x123ba:	xor	r10, r12
0x123bd:	mov	r12, qword ptr [rdx + 0x10]
0x123c1:	sub	r12, r10
0x123c4:	add	rbx, r12
0x123c7:	mov	r12, r11
0x123ca:	shr	r12, 0x17
0x123ce:	add	r11, rbx
0x123d1:	xor	rcx, r12
0x123d4:	mov	r12, qword ptr [rdx + 0x18]
0x123d8:	sub	r12, rcx
0x123db:	add	r8, r12
0x123de:	mov	r12, rbx
0x123e1:	shl	r12, 0xf
0x123e5:	add	rbx, r8
0x123e8:	xor	r9, r12
0x123eb:	mov	r12, r8
0x123ee:	sub	rsi, r9
0x123f1:	shr	r12, 0xe
0x123f5:	mov	qword ptr [rdx], r9
0x123f8:	xor	r11, r12
0x123fb:	mov	r12, rsi
0x123fe:	add	r8, rsi
0x12401:	sub	rbp, r11
0x12404:	shl	r12, 0x14
0x12408:	mov	qword ptr [rdx + 8], r11
0x1240c:	xor	rbx, r12
0x1240f:	lea	r12, [rsi + rbp]
0x12413:	mov	rsi, rbp
0x12416:	sub	r10, rbx
0x12419:	shr	rsi, 0x11
0x1241d:	mov	qword ptr [rdx + 0x10], rbx
0x12421:	xor	r8, rsi
0x12424:	mov	rsi, r10
0x12427:	add	rbp, r10
0x1242a:	sub	rcx, r8
0x1242d:	shl	rsi, 0xe
0x12431:	mov	qword ptr [rdx + 0x18], r8
0x12435:	xor	rsi, r12
0x12438:	add	r10, rcx
0x1243b:	mov	qword ptr [rdx + 0x28], rbp
0x1243f:	mov	qword ptr [rdx + 0x20], rsi
0x12443:	mov	qword ptr [rdx + 0x30], r10
0x12447:	add	rdx, 0x40
0x1244b:	mov	qword ptr [rdx - 8], rcx
0x1244f:	cmp	rax, rdx
0x12452:	jne	0x12380


0x122a8:	add	rsi, qword ptr [rax + 0x20]
0x122ac:	add	rcx, qword ptr [rax + 0x38]
0x122b0:	mov	r13, qword ptr [rax]
0x122b3:	add	rbp, qword ptr [rax + 0x28]
0x122b7:	add	r10, qword ptr [rax + 0x30]
0x122bb:	sub	r13, rsi
0x122be:	add	r9, r13
0x122c1:	mov	r13, rcx
0x122c4:	shr	r13, 9
0x122c8:	add	rcx, r9
0x122cb:	xor	rbp, r13
0x122ce:	mov	r13, qword ptr [rax + 8]
0x122d2:	sub	r13, rbp
0x122d5:	add	r11, r13
0x122d8:	mov	r13, r9
0x122db:	shl	r13, 9
0x122df:	add	r9, r11
0x122e2:	xor	r10, r13
0x122e5:	mov	r13, qword ptr [rax + 0x10]
0x122e9:	sub	r13, r10
0x122ec:	add	rbx, r13
0x122ef:	mov	r13, r11
0x122f2:	shr	r13, 0x17
0x122f6:	add	r11, rbx
0x122f9:	xor	rcx, r13
0x122fc:	mov	r13, qword ptr [rax + 0x18]
0x12300:	sub	r13, rcx
0x12303:	add	r8, r13
0x12306:	mov	r13, rbx
0x12309:	shl	r13, 0xf
0x1230d:	add	rbx, r8
0x12310:	xor	r9, r13
0x12313:	mov	r13, r8
0x12316:	sub	rsi, r9
0x12319:	shr	r13, 0xe
0x1231d:	mov	qword ptr [rax], r9
0x12320:	xor	r11, r13
0x12323:	mov	r13, rsi
0x12326:	add	r8, rsi
0x12329:	sub	rbp, r11
0x1232c:	shl	r13, 0x14
0x12330:	mov	qword ptr [rax + 8], r11
0x12334:	xor	rbx, r13
0x12337:	lea	r13, [rsi + rbp]
0x1233b:	mov	rsi, rbp
0x1233e:	sub	r10, rbx
0x12341:	shr	rsi, 0x11
0x12345:	mov	qword ptr [rax + 0x10], rbx
0x12349:	xor	r8, rsi
0x1234c:	mov	rsi, r10
0x1234f:	add	rbp, r10
0x12352:	sub	rcx, r8
0x12355:	shl	rsi, 0xe
0x12359:	mov	qword ptr [rax + 0x18], r8
0x1235d:	xor	rsi, r13
0x12360:	add	r10, rcx
0x12363:	mov	qword ptr [rax + 0x28], rbp
0x12367:	mov	qword ptr [rax + 0x20], rsi
0x1236b:	mov	qword ptr [rax + 0x30], r10
0x1236f:	add	rax, 0x40
0x12373:	mov	qword ptr [rax - 8], rcx
0x12377:	cmp	r12, rax
0x1237a:	jne	0x122a8


0x11fe0:	mov	r8, rdx
0x11fe3:	shl	r8, 0x15
0x11fe7:	xor	rdx, r8
0x11fea:	mov	r8, qword ptr [rax]
0x11fed:	not	rdx
0x11ff0:	add	rdx, qword ptr [rax + 0x400]
0x11ff7:	mov	r10, r8
0x11ffa:	and	r10d, 0x7f8
0x12001:	mov	r11, qword ptr [rdi + r10]
0x12005:	mov	r10, rdx
0x12008:	shr	r10, 5
0x1200c:	add	r11, rdx
0x1200f:	xor	rdx, r10
0x12012:	add	rcx, r11
0x12015:	mov	qword ptr [rax], rcx
0x12018:	shr	rcx, 8
0x1201c:	and	ecx, 0x7f8
0x12022:	mov	r11, qword ptr [rdi + rcx]
0x12026:	add	r11, r8
0x12029:	mov	qword ptr [rsi], r11
0x1202c:	add	rdx, qword ptr [rax + 0x408]
0x12033:	mov	rcx, qword ptr [rax + 8]
0x12037:	mov	r10, rdx
0x1203a:	mov	rdx, rcx
0x1203d:	and	edx, 0x7f8
0x12043:	mov	r8, qword ptr [rdi + rdx]
0x12047:	mov	rdx, r10
0x1204a:	shl	rdx, 0xc
0x1204e:	xor	rdx, r10
0x12051:	add	r8, r10
0x12054:	add	r8, r11
0x12057:	mov	qword ptr [rax + 8], r8
0x1205b:	shr	r8, 8
0x1205f:	and	r8d, 0x7f8
0x12066:	add	rcx, qword ptr [rdi + r8]
0x1206a:	mov	qword ptr [rsi + 8], rcx
0x1206e:	mov	r8, qword ptr [rax + 0x10]
0x12072:	mov	r11, rcx
0x12075:	add	rdx, qword ptr [rax + 0x410]
0x1207c:	mov	rcx, r8
0x1207f:	and	ecx, 0x7f8
0x12085:	mov	r10, qword ptr [rdi + rcx]
0x12089:	add	r10, rdx
0x1208c:	mov	rcx, r10
0x1208f:	add	rcx, r11
0x12092:	mov	qword ptr [rax + 0x10], rcx
0x12096:	shr	rcx, 8
0x1209a:	and	ecx, 0x7f8
0x120a0:	mov	r10, qword ptr [rdi + rcx]
0x120a4:	mov	rcx, rdx
0x120a7:	shr	rcx, 0x21
0x120ab:	xor	rdx, rcx
0x120ae:	add	r10, r8
0x120b1:	mov	qword ptr [rsi + 0x10], r10
0x120b5:	mov	rcx, qword ptr [rax + 0x18]
0x120b9:	add	rdx, qword ptr [rax + 0x418]
0x120c0:	mov	r8, rcx
0x120c3:	and	r8d, 0x7f8
0x120ca:	mov	r11, qword ptr [rdi + r8]
0x120ce:	add	r11, rdx
0x120d1:	mov	r8, r11
0x120d4:	add	r8, r10
0x120d7:	add	rax, 0x20
0x120db:	add	rsi, 0x20
0x120df:	mov	qword ptr [rax - 8], r8
0x120e3:	shr	r8, 8
0x120e7:	and	r8d, 0x7f8
0x120ee:	add	rcx, qword ptr [rdi + r8]
0x120f2:	mov	qword ptr [rsi - 8], rcx
0x120f6:	cmp	rax, r9
0x120f9:	jb	0x11fe0


0x120ff:	lea	r9, [rdi + 0x800]
0x12106:	nop	word ptr cs:[rax + rax]
0x12110:	mov	r8, rdx
0x12113:	shl	r8, 0x15
0x12117:	xor	rdx, r8
0x1211a:	mov	r8, qword ptr [rax]
0x1211d:	not	rdx
0x12120:	add	rdx, qword ptr [rax - 0x400]
0x12127:	mov	r10, r8
0x1212a:	and	r10d, 0x7f8
0x12131:	mov	r11, qword ptr [rdi + r10]
0x12135:	mov	r10, rdx
0x12138:	shr	r10, 5
0x1213c:	add	r11, rdx
0x1213f:	xor	rdx, r10
0x12142:	add	rcx, r11
0x12145:	mov	qword ptr [rax], rcx
0x12148:	shr	rcx, 8
0x1214c:	and	ecx, 0x7f8
0x12152:	mov	r11, qword ptr [rdi + rcx]
0x12156:	add	r11, r8
0x12159:	mov	qword ptr [rsi], r11
0x1215c:	add	rdx, qword ptr [rax - 0x3f8]
0x12163:	mov	rcx, qword ptr [rax + 8]
0x12167:	mov	r10, rdx
0x1216a:	mov	rdx, rcx
0x1216d:	and	edx, 0x7f8
0x12173:	mov	r8, qword ptr [rdi + rdx]
0x12177:	mov	rdx, r10
0x1217a:	shl	rdx, 0xc
0x1217e:	xor	rdx, r10
0x12181:	add	r8, r10
0x12184:	add	r8, r11
0x12187:	mov	qword ptr [rax + 8], r8
0x1218b:	shr	r8, 8
0x1218f:	and	r8d, 0x7f8
0x12196:	add	rcx, qword ptr [rdi + r8]
0x1219a:	mov	qword ptr [rsi + 8], rcx
0x1219e:	mov	r8, qword ptr [rax + 0x10]
0x121a2:	mov	r11, rcx
0x121a5:	add	rdx, qword ptr [rax - 0x3f0]
0x121ac:	mov	rcx, r8
0x121af:	and	ecx, 0x7f8
0x121b5:	mov	r10, qword ptr [rdi + rcx]
0x121b9:	add	r10, rdx
0x121bc:	mov	rcx, r10
0x121bf:	add	rcx, r11
0x121c2:	mov	qword ptr [rax + 0x10], rcx
0x121c6:	shr	rcx, 8
0x121ca:	and	ecx, 0x7f8
0x121d0:	mov	r10, qword ptr [rdi + rcx]
0x121d4:	mov	rcx, rdx
0x121d7:	shr	rcx, 0x21
0x121db:	xor	rdx, rcx
0x121de:	add	r10, r8
0x121e1:	mov	qword ptr [rsi + 0x10], r10
0x121e5:	mov	rcx, qword ptr [rax + 0x18]
0x121e9:	add	rdx, qword ptr [rax - 0x3e8]
0x121f0:	mov	r8, rcx
0x121f3:	and	r8d, 0x7f8
0x121fa:	mov	r11, qword ptr [rdi + r8]
0x121fe:	add	r11, rdx
0x12201:	mov	r8, r11
0x12204:	add	r8, r10
0x12207:	add	rax, 0x20
0x1220b:	add	rsi, 0x20
0x1220f:	mov	qword ptr [rax - 8], r8
0x12213:	shr	r8, 8
0x12217:	and	r8d, 0x7f8
0x1221e:	add	rcx, qword ptr [rdi + r8]
0x12222:	mov	qword ptr [rsi - 8], rcx
0x12226:	cmp	rax, r9
0x12229:	jb	0x12110


0x2cc0:	jmp	qword ptr [rip + 0x21725a]


0x11e48:	mov	r14, qword ptr [rdi + 0x18]
0x11e4c:	lea	rax, [rdi + 0x838]
0x11e53:	lea	r13, [rdi + 0x20]
0x11e57:	mov	qword ptr [rsp + 8], rax
0x11e5c:	cmp	rdx, r14
0x11e5f:	jbe	0x11f42


0x11de4:	call	0x2770


0x11bb8:	mov	edi, 0x1038
0x11bbd:	call	0x11020


0x11a97:	test	rdi, rdi
0x11a9a:	mov	r12, rdi
0x11a9d:	mov	rbp, rsi
0x11aa0:	je	0x11b20


0x11a58:	call	0x2760


0x11a1b:	call	0xed80


0x118e5:	cmp	rbx, r14
0x118e8:	jae	0x118b0


0x117a0:	xor	eax, eax
0x117a2:	call	0x2920


0x117c8:	lea	rax, [rsp + 0x60]
0x117cd:	mov	dword ptr [rsp], 0x18
0x117d4:	mov	ecx, dword ptr [rsp + 0x38]
0x117d8:	mov	qword ptr [rsp + 8], rax
0x117dd:	lea	rax, [rsp + 0x20]
0x117e2:	mov	qword ptr [rsp + 0x10], rax
0x117e7:	jmp	0x117a0


0x2be0:	jmp	qword ptr [rip + 0x2172ca]


0x11730:	xor	edx, edx
0x11732:	mov	rax, rdx
0x11735:	ret	


0x11708:	xor	eax, eax
0x1170a:	nop	word ptr [rax + rax]
0x11710:	rol	rax, 9
0x11714:	add	rdi, 1
0x11718:	add	rax, rcx
0x1171b:	movsx	rcx, byte ptr [rdi]
0x1171f:	test	cl, cl
0x11721:	jne	0x11710


0x2c50:	jmp	qword ptr [rip + 0x217292]


0x2830:	jmp	qword ptr [rip + 0x2174a2]


0x28a0:	jmp	qword ptr [rip + 0x21746a]


0x27c0:	jmp	qword ptr [rip + 0x2174da]


0x114e0:	jmp	0x2c90


0x114d9:	mov	edi, eax
0x114db:	jmp	0x2c70


0x2960:	jmp	qword ptr [rip + 0x21740a]


0x113d0:	mov	rax, qword ptr [rdi + 0x20]
0x113d4:	cmp	qword ptr [rdi + 0x28], rax
0x113d8:	jne	0x113ca


0x113ca:	jmp	0x2ce0


0x1139c:	mov	rax, qword ptr [rdi + 0x10]
0x113a0:	sub	rax, qword ptr [rdi + 8]
0x113a4:	test	dword ptr [rdi], 0x100
0x113aa:	je	0x113b7


0x113b7:	ret	


0x1136a:	mov	rdi, rbx
0x1136d:	pop	rbx
0x1136e:	jmp	0x2bd0


0x11359:	call	0x2c10


0x2ae0:	jmp	qword ptr [rip + 0x21734a]


0x28e0:	jmp	qword ptr [rip + 0x21744a]


0x2900:	jmp	qword ptr [rip + 0x21743a]


0x11219:	call	0x11270


0x11202:	movzx	edx, dl
0x11205:	test	rdx, rdx
0x11208:	jne	0x11219


0x111b0:	test	rax, rax
0x111b3:	mov	edx, 0x80
0x111b8:	cmove	rax, rdx
0x111bc:	test	rax, rax
0x111bf:	jns	0x111a2


0x11188:	movabs	rdx, 0x5555555555555553
0x11192:	cmp	rax, rdx
0x11195:	ja	0x111c1


0x11130:	test	rcx, rcx
0x11133:	je	0x11158


0x110fb:	xor	edx, edx
0x110fd:	movabs	rax, 0x5555555555555554
0x11107:	div	r9
0x1110a:	cmp	rax, rcx
0x1110d:	jbe	0x1114b


0x110db:	sub	rsp, 8
0x110df:	call	0x11270


0x110d1:	movzx	eax, al
0x110d4:	test	rax, rax
0x110d7:	jne	0x110db


0x11089:	test	rdi, rdi
0x1108c:	jne	0x110a8


0x1108e:	mov	rsi, rbx
0x11091:	call	0x2c20


0x1105b:	sub	rsp, 8
0x1105f:	call	0x11270


0x11051:	movzx	eax, al
0x11054:	test	rax, rax
0x11057:	jne	0x1105b


0x2bc0:	jmp	qword ptr [rip + 0x2172da]


0x10ff8:	sub	rsp, 8
0x10ffc:	call	0x2a00


0x10fe9:	movzx	eax, byte ptr [rip + 0x209720]
0x10ff0:	ret	


0x10ef6:	mov	eax, r10d
0x10ef9:	mov	r11d, 1
0x10eff:	add	r10d, 8
0x10f03:	add	rax, rbp
0x10f06:	mov	rax, qword ptr [rax]
0x10f09:	test	rax, rax
0x10f0c:	mov	qword ptr [r8 + r9*8], rax
0x10f10:	je	0x10f1c


0x10f4c:	mov	rax, rbx
0x10f4f:	add	rbx, 8
0x10f53:	jmp	0x10f06


0x10e28:	mov	r11d, eax
0x10e2b:	add	r11, qword ptr [r10 + 0x10]
0x10e2f:	add	eax, 8
0x10e32:	mov	dword ptr [r10], eax
0x10e35:	mov	rax, qword ptr [r11]
0x10e38:	test	rax, rax
0x10e3b:	mov	qword ptr [r8 + r9*8], rax
0x10e3f:	je	0x10e4b


0x10e6a:	mov	r11, qword ptr [r10 + 8]
0x10e6e:	lea	rax, [r11 + 8]
0x10e72:	mov	qword ptr [r10 + 8], rax
0x10e76:	jmp	0x10e35


0x10dfb:	jmp	0x109c0


0x10af8:	mov	r8, rcx
0x10afb:	mov	rcx, rdx
0x10afe:	lea	rdx, [rip + 0x4dc6]
0x10b05:	mov	esi, 1
0x10b0a:	xor	eax, eax
0x10b0c:	call	0x2db0


0x109e0:	mov	r8, rdx
0x109e3:	lea	rdx, [rip + 0x4ed5]
0x109ea:	mov	r9, rcx
0x109ed:	xor	eax, eax
0x109ef:	mov	rcx, rsi
0x109f2:	mov	esi, 1
0x109f7:	call	0x2db0


0x10880:	mov	ecx, dword ptr [rip + 0x209e82]
0x10886:	xor	edx, edx
0x10888:	xor	ebx, ebx
0x1088a:	mov	qword ptr [rsp + 8], 0
0x10893:	test	ecx, ecx
0x10895:	jns	0x107ce


0x1078a:	movdqu	xmm0, xmmword ptr [rsi]
0x1078e:	lea	rdi, [rsp + 0x10]
0x10793:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x10798:	mov	qword ptr [rsp + 8], rdi
0x1079d:	movdqu	xmm0, xmmword ptr [rsi + 0x10]
0x107a2:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x107a7:	call	0x10230


0x105e0:	mov	qword ptr [rsp + 8], 0
0x105e9:	xor	r13d, r13d
0x105ec:	jmp	0x1034d


0x10320:	movdqu	xmm0, xmmword ptr [rdx]
0x10324:	lea	rdi, [rsp + 0x10]
0x10329:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x1032e:	mov	qword ptr [rsp + 8], rdi
0x10333:	movdqu	xmm0, xmmword ptr [rdx + 0x10]
0x10338:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x1033d:	call	0x10230


0x2750:	jmp	qword ptr [rip + 0x217512]


0x1024a:	mov	rdx, qword ptr [rdi + 0x18]
0x1024e:	lea	r8, [rdx - 0x3ffffffe]
0x10255:	cmp	r8, 1
0x10259:	jbe	0x10264


0x10241:	cmp	r9, 0x3b9ac9ff
0x10248:	ja	0x102c0


0x101d0:	cmp	rdx, 0x3ffffffe
0x101d7:	mov	eax, 1
0x101dc:	je	0x10188


0x1016c:	cmp	rax, 0x3fffffff
0x10172:	je	0x10190


0xfad8:	cmp	r12, r14
0xfadb:	jg	0xfb28


0xf9f5:	cmp	r14, r12
0xf9f8:	mov	r10d, edi
0xf9fb:	sete	byte ptr [rsp + 0x38]
0xfa00:	movzx	edi, byte ptr [rsp + 0x38]
0xfa05:	cmp	r15d, r13d
0xfa08:	sete	al
0xfa0b:	and	al, dil
0xfa0e:	mov	byte ptr [rsp + 8], al
0xfa12:	jne	0xfb20


0xf961:	call	0x12480


0xf982:	add	rsp, 8
0xf986:	mov	eax, ebx
0xf988:	pop	rbx
0xf989:	pop	rbp
0xf98a:	pop	r12
0xf98c:	pop	r13
0xf98e:	ret	


0xf910:	lea	rdx, [rsp + 0xc]
0xf915:	lea	rcx, [rip - 0x22c]
0xf91c:	call	0xf720


0xf8ad:	cmp	ecx, 2
0xf8b0:	je	0xf8d8


0x2770:	jmp	qword ptr [rip + 0x217502]


0x2cd0:	jmp	qword ptr [rip + 0x217252]


0x27e0:	jmp	qword ptr [rip + 0x2174ca]


0x2910:	jmp	qword ptr [rip + 0x217432]


0xf5bd:	xor	r13d, r13d
0xf5c0:	jmp	0xf3eb


0xf2b9:	mov	rbx, rdi
0xf2bc:	xor	r14d, r14d
0xf2bf:	xor	r12d, r12d
0xf2c2:	call	0x2770


0x2af0:	jmp	qword ptr [rip + 0x217342]


0xf278:	mov	eax, 0xffffffff
0xf27d:	ret	


0xf26a:	seta	al
0xf26d:	movzx	eax, al
0xf270:	ret	


0x2840:	jmp	qword ptr [rip + 0x21749a]


0x2b30:	jmp	qword ptr [rip + 0x217322]


0xecc7:	call	0x2760


0xec95:	test	rdx, rdx
0xec98:	je	0xecc7


0xec34:	call	0x2760


0xebcc:	mov	dword ptr [rsp], esi
0xebcf:	mov	rcx, rsp
0xebd2:	mov	rdx, -1
0xebd9:	mov	rsi, rax
0xebdc:	mov	qword ptr [rsp + 4], 0
0xebe5:	mov	qword ptr [rsp + 0xc], 0x4000000
0xebee:	mov	qword ptr [rsp + 0x14], 0
0xebf7:	mov	qword ptr [rsp + 0x1c], 0
0xec00:	mov	qword ptr [rsp + 0x24], 0
0xec09:	mov	qword ptr [rsp + 0x2c], 0
0xec12:	mov	dword ptr [rsp + 0x34], 0
0xec1a:	call	0xe440


0xeaa0:	call	0x2760


0xea3f:	mov	dword ptr [rsp], esi
0xea42:	mov	rcx, rsp
0xea45:	mov	rsi, rax
0xea48:	mov	qword ptr [rsp + 4], 0
0xea51:	mov	qword ptr [rsp + 0xc], 0
0xea5a:	mov	qword ptr [rsp + 0x14], 0
0xea63:	mov	qword ptr [rsp + 0x1c], 0
0xea6c:	mov	qword ptr [rsp + 0x24], 0
0xea75:	mov	qword ptr [rsp + 0x2c], 0
0xea7e:	mov	dword ptr [rsp + 0x34], 0
0xea86:	call	0xe440


0xea14:	call	0x2760


0xe9ac:	mov	dword ptr [rsp], esi
0xe9af:	mov	rcx, rsp
0xe9b2:	mov	rdx, -1
0xe9b9:	mov	rsi, rax
0xe9bc:	mov	qword ptr [rsp + 4], 0
0xe9c5:	mov	qword ptr [rsp + 0xc], 0
0xe9ce:	mov	qword ptr [rsp + 0x14], 0
0xe9d7:	mov	qword ptr [rsp + 0x1c], 0
0xe9e0:	mov	qword ptr [rsp + 0x24], 0
0xe9e9:	mov	qword ptr [rsp + 0x2c], 0
0xe9f2:	mov	dword ptr [rsp + 0x34], 0
0xe9fa:	call	0xe440


0xe8c1:	mov	rdi, qword ptr [r12 + 8]
0xe8c6:	lea	rbx, [rip + 0x20bcf3]
0xe8cd:	cmp	rdi, rbx
0xe8d0:	je	0xe8e9


0xe896:	sub	eax, 2
0xe899:	lea	rbx, [r12 + 0x18]
0xe89e:	shl	rax, 4
0xe8a2:	lea	rbp, [r12 + rax + 0x28]
0xe8a7:	nop	word ptr [rax + rax]
0xe8b0:	mov	rdi, qword ptr [rbx]
0xe8b3:	add	rbx, 0x10
0xe8b7:	call	0x2e10


0xe6f7:	sub	rsp, 8
0xe6fb:	call	0x2760


0xe6e9:	test	rdx, rdx
0xe6ec:	je	0xe6f7


0x28f0:	jmp	qword ptr [rip + 0x217442]


0xd00d:	mov	rcx, qword ptr [rip + 0x20d0cc]
0xd014:	lea	rdi, [rip + 0x82c5]
0xd01b:	mov	edx, 0x37
0xd020:	mov	esi, 1
0xd025:	call	0x2da0


0xcf96:	mov	esi, 0x2f
0xcf9b:	mov	rbx, rdi
0xcf9e:	call	0x29a0


0x2e10:	jmp	qword ptr [rip + 0x2171b2]


0xcec0:	mov	rcx, qword ptr [rsi + 0x10]
0xcec4:	cmp	qword ptr [rdi + 0x10], rcx
0xcec8:	jne	0xcebc


0xcebc:	ret	


0xce90:	mov	rcx, qword ptr [rsi + 0x10]
0xce94:	cmp	qword ptr [rdi + 0x10], rcx
0xce98:	jne	0xce8c


0xce8c:	ret	


0xcb1d:	call	0x2760


0xc963:	mov	r12, rsp
0xc966:	xor	ecx, ecx
0xc968:	mov	r13, rdx
0xc96b:	mov	rdx, r12
0xc96e:	mov	rbx, rdi
0xc971:	mov	rbp, rsi
0xc974:	call	0xbc50


0xc727:	test	rsi, rsi
0xc72a:	js	0xc8a8


0xc778:	mov	rdi, rsi
0xc77b:	call	0xbb60


0xc683:	cmp	rbp, rax
0xc686:	jae	0xc6bc


0xc635:	cmp	qword ptr [rdi + 0x20], 0
0xc63a:	je	0xc683


0xc5a0:	cmp	qword ptr [r12], 0
0xc5a5:	je	0xc601


0xc60b:	mov	qword ptr [rbp + 0x18], 0
0xc613:	mov	qword ptr [rbp + 0x20], 0
0xc61b:	pop	rbx
0xc61c:	pop	rbp
0xc61d:	pop	r12
0xc61f:	ret	


0xc39d:	mov	rax, rdx
0xc3a0:	ret	


0xc366:	xor	ebp, ebp
0xc368:	jmp	0xc354


0xc317:	mov	r13, rdx
0xc31a:	mov	r12, rsi
0xc31d:	mov	r15, rdi
0xc320:	xor	ebp, ebp
0xc322:	mov	rdi, qword ptr [r14]
0xc325:	test	rdi, rdi
0xc328:	je	0xc34a


0xc2f2:	xor	eax, eax
0xc2f4:	ret	


0xc299:	xor	r8d, r8d
0xc29c:	mov	rcx, qword ptr [r9]
0xc29f:	test	rcx, rcx
0xc2a2:	je	0xc2dd


0xc1f3:	xor	eax, eax
0xc1f5:	ret	


0xc1c7:	mov	rdx, qword ptr [rdi]
0xc1ca:	mov	rcx, qword ptr [rdi + 8]
0xc1ce:	cmp	rdx, rcx
0xc1d1:	jae	0xc1f8


0xc075:	lea	rdx, [rip + 0x91aa]
0xc07c:	mov	esi, 1
0xc081:	mov	rdi, r12
0xc084:	xor	eax, eax
0xc086:	call	0x2db0


0xbfc0:	cmp	qword ptr [rcx], 0
0xbfc4:	je	0xbfed


0xbff6:	xor	eax, eax
0xbff8:	cmp	qword ptr [rdi + 0x18], rsi
0xbffc:	je	0xc000


0xbfa7:	ret	


0xbe0b:	mov	rbp, rdi
0xbe0e:	mov	r13, rsi
0xbe11:	mov	r14d, edx
0xbe14:	nop	dword ptr [rax]
0xbe18:	mov	r15, qword ptr [r12]
0xbe1c:	test	r15, r15
0xbe1f:	je	0xbeda


0xbee8:	add	rsp, 8
0xbeec:	mov	eax, 1
0xbef1:	pop	rbx
0xbef2:	pop	rbp
0xbef3:	pop	r12
0xbef5:	pop	r13
0xbef7:	pop	r14
0xbef9:	pop	r15
0xbefb:	ret	


0xbde5:	ret	


0xbd84:	movss	xmm0, dword ptr [rdx + 8]
0xbd89:	ucomiss	xmm0, dword ptr [rip + 0x9524]
0xbd90:	jbe	0xbde0


0xbbef:	mov	rax, rdi
0xbbf2:	ret	


0xbb51:	xor	r12d, r12d
0xbb54:	jmp	0xbb24


0xbaef:	mov	r13d, edi
0xbaf2:	mov	rbp, rsi
0xbaf5:	mov	rbx, rdx
0xbaf8:	xor	r12d, r12d
0xbafb:	jmp	0xbb10


0xb890:	mov	byte ptr [rsi], al
0xb892:	mov	eax, edi
0xb894:	and	eax, 0x100
0xb899:	cmp	eax, 1
0xb89c:	sbb	eax, eax
0xb89e:	and	eax, 0xffffffbb
0xb8a1:	add	eax, 0x72
0xb8a4:	mov	byte ptr [rsi + 1], al
0xb8a7:	mov	eax, edi
0xb8a9:	and	eax, 0x80
0xb8ae:	cmp	eax, 1
0xb8b1:	sbb	eax, eax
0xb8b3:	and	eax, 0xffffffb6
0xb8b6:	add	eax, 0x77
0xb8b9:	mov	byte ptr [rsi + 2], al
0xb8bc:	mov	eax, edi
0xb8be:	and	eax, 0x40
0xb8c1:	cmp	eax, 1
0xb8c4:	sbb	eax, eax
0xb8c6:	test	edi, 0x800
0xb8cc:	je	0xb970


0xb835:	cmp	edx, 0x4000
0xb83b:	mov	eax, 0x64
0xb840:	je	0xb890


0xb7fc:	mov	rcx, qword ptr [rsp + 0x18]
0xb801:	xor	rcx, qword ptr fs:[0x28]
0xb80a:	jne	0xb811


0xb7d9:	mov	rax, qword ptr [rdx + 8]
0xb7dd:	mov	qword ptr [rsp], rsi
0xb7e1:	mov	rsi, rsp
0xb7e4:	mov	qword ptr [rsp + 8], rax
0xb7e9:	mov	rax, qword ptr [rdx]
0xb7ec:	mov	qword ptr [rsp + 0x10], rax
0xb7f1:	call	0xc160


0xb7b0:	ret	


0xb735:	push	r13
0xb737:	push	r12
0xb739:	mov	r13, rdi
0xb73c:	push	rbp
0xb73d:	push	rbx
0xb73e:	mov	r12, rsi
0xb741:	mov	edi, 0x18
0xb746:	mov	rbp, rdx
0xb749:	sub	rsp, 8
0xb74d:	call	0x11020


0xb6e1:	xor	eax, eax
0xb6e3:	call	0x2cd0


0xb708:	lea	rax, [rsp + 0x60]
0xb70d:	mov	dword ptr [rsp], 0x10
0xb714:	mov	edx, dword ptr [rsp + 0x30]
0xb718:	mov	qword ptr [rsp + 8], rax
0xb71d:	lea	rax, [rsp + 0x20]
0xb722:	mov	qword ptr [rsp + 0x10], rax
0xb727:	jmp	0xb6e1


0xb6b0:	ret	


0xb695:	push	rbx
0xb696:	mov	ebx, esi
0xb698:	call	0x2b80


0x2a70:	jmp	qword ptr [rip + 0x217382]


0xb5ac:	test	dl, dl
0xb5ae:	je	0xb5ea


0xb258:	test	rsi, rsi
0xb25b:	mov	edi, 0x2000
0xb260:	cmovne	rdi, rsi
0xb264:	cmp	rdi, rcx
0xb267:	cmovbe	rcx, rdi
0xb26b:	mov	r8, rcx
0xb26e:	mov	rax, r8
0xb271:	ret	


0xb278:	test	rsi, rsi
0xb27b:	je	0xb264


0xb20a:	lea	rdi, [rip + 0x9f97]
0xb211:	sub	rsp, 8
0xb215:	call	0x2740


0xb205:	cmp	byte ptr [rsi], 0
0xb208:	jne	0xb232


0xb1f0:	mov	eax, 2
0xb1f5:	ret	


0xb1e5:	cmp	byte ptr [rsi], 0
0xb1e8:	je	0xb1f0


0xab30:	lea	rdi, [rip + 0xa65b]
0xab37:	call	0x2740


0xab09:	cmp	byte ptr [rbx], 0
0xab0c:	jne	0xab20


0xaaf1:	pop	rbx
0xaaf2:	mov	rax, r14
0xaaf5:	pop	rbp
0xaaf6:	pop	r12
0xaaf8:	pop	r13
0xaafa:	pop	r14
0xaafc:	ret	


0xaac0:	mov	r12, rcx
0xaac3:	mov	r13, rdi
0xaac6:	mov	rbp, rdx
0xaac9:	lea	rbx, [rsi + 8]
0xaacd:	jmp	0xaadf


0xa900:	lea	rsi, [rip + 0xa82f]
0xa907:	xor	edi, edi
0xa909:	call	0x28e0


0xa8b5:	lea	rsi, [rip + 0xa895]
0xa8bc:	xor	edi, edi
0xa8be:	call	0x28e0


0xa518:	mov	dword ptr [rsp + 0xc], ecx
0xa51c:	call	0x2dd0


0xa473:	cmp	cl, 1
0xa476:	jne	0xa4e8


0xa3c0:	mov	rcx, rbx
0xa3c3:	mov	dword ptr [rsp], r9d
0xa3c7:	call	0x2c40


0xa311:	cmp	r9b, 1
0xa315:	jne	0xa390


0x2dd0:	jmp	qword ptr [rip + 0x2171d2]


0x2c40:	jmp	qword ptr [rip + 0x21729a]


0x9f6d:	rep stosq	qword ptr [rdi], rax


0x9d20:	mov	rax, qword ptr [rsi + 8]
0x9d24:	cmp	qword ptr [rdi + 8], rax
0x9d28:	sete	al
0x9d2b:	ret	


0x9d1a:	ret	


0x9cd6:	lea	rcx, [rip + 0xb393]
0x9cdd:	lea	rsi, [rip + 0xb363]
0x9ce4:	lea	rdi, [rip + 0xb379]
0x9ceb:	mov	edx, 0xb86
0x9cf0:	call	0x29e0


0x9bad:	cmp	dword ptr [rcx], 3
0x9bb0:	ja	0x9cb7


0x5b21:	test	r15d, r15d
0x5b24:	je	0x5dd8


0x5b02:	test	r15d, r15d
0x5b05:	js	0x5da0


0x5a60:	xor	edi, edi
0x5a62:	call	0x2b50


0x5a5c:	mov	eax, ebx
0x5a5e:	pop	rbx
0x5a5f:	ret	


0x5863:	movabs	rax, 0xff0000000000ff
0x586d:	test	qword ptr [rdi + 0x18], rax
0x5871:	je	0x5910


0x5895:	cmp	ebx, -1
0x5898:	mov	edx, r12d
0x589b:	mov	esi, r14d
0x589e:	je	0x58f0


0x2a00:	jmp	qword ptr [rip + 0x2173ba]


0x56a0:	mov	ebx, ecx
0x56a2:	and	bl, byte ptr [r8 + 0x21]
0x56a6:	jne	0x56d8


0x5634:	mov	r13, rdi
0x5637:	call	0x2770


0x5613:	mov	r15d, 1
0x5619:	jmp	0x5315


0x5278:	test	r8, r8
0x527b:	mov	qword ptr [rsp + 0x50], r8
0x5280:	mov	dword ptr [rsp + 0x6c], r9d
0x5285:	cmove	r8, rcx
0x5289:	mov	qword ptr [rsp + 0x38], rcx
0x528e:	mov	qword ptr [rsp + 0x20], rdx
0x5293:	mov	dword ptr [rsp + 0x18], esi
0x5297:	mov	dword ptr [rsp + 0x68], edi
0x529b:	xor	r13d, r13d
0x529e:	mov	qword ptr [rsp + 0x48], r8
0x52a3:	xor	r15d, r15d
0x52a6:	mov	rax, qword ptr [rsp + 0x38]
0x52ab:	mov	rdx, qword ptr [rsp + 0x28]
0x52b0:	mov	rsi, qword ptr [rsp + 0x20]
0x52b5:	mov	edi, dword ptr [rsp + 0x68]
0x52b9:	cmp	rax, rdx
0x52bc:	cmovbe	rdx, rax
0x52c0:	call	0x2a80


0x29c0:	jmp	qword ptr [rip + 0x2173da]


0x2aa0:	jmp	qword ptr [rip + 0x21736a]


0x4da8:	mov	rdi, qword ptr [rip + 0x215269]
0x4daf:	mov	esi, 1
0x4db4:	call	0x2ad0


0x4d54:	test	rbx, rbx
0x4d57:	jne	0x4d65


0x4d18:	mov	eax, 1
0x4d1d:	ret	


0x4cfe:	push	rbx
0x4cff:	mov	rbx, rdi
0x4d02:	call	0x10fe0


0x4834:	test	cl, cl
0x4836:	mov	r14, r8
0x4839:	je	0x4936


0x4c93:	sub	r12d, 1
0x4c97:	jne	0x4cdf


0x427d:	lea	rsi, [rip + 0xeeec]
0x4284:	xor	edi, edi
0x4286:	call	0x28e0


0x424f:	lea	rsi, [rip + 0xeef2]
0x4256:	xor	edi, edi
0x4258:	call	0x28e0


0x2ba0:	jmp	qword ptr [rip + 0x2172ea]


0x3799:	cmp	qword ptr [rip + 0x21684f], 0
0x37a1:	push	rbp
0x37a2:	mov	rbp, rsp
0x37a5:	je	0x37b3


0x37c8:	ret	


0x3780:	pop	rbp
0x3781:	ret	


0x3768:	mov	rax, qword ptr [rip + 0x216879]
0x376f:	test	rax, rax
0x3772:	je	0x3780


0x3730:	pop	rbp
0x3731:	ret	


0x3717:	mov	rax, qword ptr [rip + 0x2168b2]
0x371e:	test	rax, rax
0x3721:	je	0x3730




0x2e2e:	mov	rdi, rax
0x2e31:	jmp	0x2c90


0x2e29:	jmp	0x2c70


0x2722:	add	rsp, 8
0x2726:	ret	


0x2720:	call	rax






0x2820:	jmp	qword ptr [rip + 0x2174aa]


0x12569:	mov	rax, qword ptr [rsp + 0x10]
0x1256e:	cmp	dword ptr [rip + 0x20819f], 0
0x12575:	mov	dword ptr [rsp], 0x18
0x1257c:	mov	r12d, dword ptr [rax + 0x10]
0x12580:	mov	edx, r12d
0x12583:	js	0x126b3


0x125b0:	cmp	esi, 0xb
0x125b3:	je	0x125e0




0x12458:	pop	rbx
0x12459:	mov	qword ptr [rdi + 0x810], 0
0x12464:	mov	qword ptr [rdi + 0x808], 0
0x1246f:	pop	rbp
0x12470:	mov	qword ptr [rdi + 0x800], 0
0x1247b:	pop	r12
0x1247d:	pop	r13
0x1247f:	ret	


0x12110:	mov	r8, rdx
0x12113:	shl	r8, 0x15
0x12117:	xor	rdx, r8
0x1211a:	mov	r8, qword ptr [rax]
0x1211d:	not	rdx
0x12120:	add	rdx, qword ptr [rax - 0x400]
0x12127:	mov	r10, r8
0x1212a:	and	r10d, 0x7f8
0x12131:	mov	r11, qword ptr [rdi + r10]
0x12135:	mov	r10, rdx
0x12138:	shr	r10, 5
0x1213c:	add	r11, rdx
0x1213f:	xor	rdx, r10
0x12142:	add	rcx, r11
0x12145:	mov	qword ptr [rax], rcx
0x12148:	shr	rcx, 8
0x1214c:	and	ecx, 0x7f8
0x12152:	mov	r11, qword ptr [rdi + rcx]
0x12156:	add	r11, r8
0x12159:	mov	qword ptr [rsi], r11
0x1215c:	add	rdx, qword ptr [rax - 0x3f8]
0x12163:	mov	rcx, qword ptr [rax + 8]
0x12167:	mov	r10, rdx
0x1216a:	mov	rdx, rcx
0x1216d:	and	edx, 0x7f8
0x12173:	mov	r8, qword ptr [rdi + rdx]
0x12177:	mov	rdx, r10
0x1217a:	shl	rdx, 0xc
0x1217e:	xor	rdx, r10
0x12181:	add	r8, r10
0x12184:	add	r8, r11
0x12187:	mov	qword ptr [rax + 8], r8
0x1218b:	shr	r8, 8
0x1218f:	and	r8d, 0x7f8
0x12196:	add	rcx, qword ptr [rdi + r8]
0x1219a:	mov	qword ptr [rsi + 8], rcx
0x1219e:	mov	r8, qword ptr [rax + 0x10]
0x121a2:	mov	r11, rcx
0x121a5:	add	rdx, qword ptr [rax - 0x3f0]
0x121ac:	mov	rcx, r8
0x121af:	and	ecx, 0x7f8
0x121b5:	mov	r10, qword ptr [rdi + rcx]
0x121b9:	add	r10, rdx
0x121bc:	mov	rcx, r10
0x121bf:	add	rcx, r11
0x121c2:	mov	qword ptr [rax + 0x10], rcx
0x121c6:	shr	rcx, 8
0x121ca:	and	ecx, 0x7f8
0x121d0:	mov	r10, qword ptr [rdi + rcx]
0x121d4:	mov	rcx, rdx
0x121d7:	shr	rcx, 0x21
0x121db:	xor	rdx, rcx
0x121de:	add	r10, r8
0x121e1:	mov	qword ptr [rsi + 0x10], r10
0x121e5:	mov	rcx, qword ptr [rax + 0x18]
0x121e9:	add	rdx, qword ptr [rax - 0x3e8]
0x121f0:	mov	r8, rcx
0x121f3:	and	r8d, 0x7f8
0x121fa:	mov	r11, qword ptr [rdi + r8]
0x121fe:	add	r11, rdx
0x12201:	mov	r8, r11
0x12204:	add	r8, r10
0x12207:	add	rax, 0x20
0x1220b:	add	rsi, 0x20
0x1220f:	mov	qword ptr [rax - 8], r8
0x12213:	shr	r8, 8
0x12217:	and	r8d, 0x7f8
0x1221e:	add	rcx, qword ptr [rdi + r8]
0x12222:	mov	qword ptr [rsi - 8], rcx
0x12226:	cmp	rax, r9
0x12229:	jb	0x12110


0x1222f:	mov	qword ptr [rdi + 0x800], rdx
0x12236:	mov	qword ptr [rdi + 0x808], rcx
0x1223d:	ret	




0x11f42:	mov	r15, rax
0x11f45:	sub	r15, r14
0x11f48:	lea	rax, [r15 + 0x800]
0x11f4f:	mov	qword ptr [rsp + 8], rax
0x11f54:	jmp	0x11f16


0x11e65:	mov	esi, 0x800
0x11e6a:	mov	rdi, rbx
0x11e6d:	mov	rdx, r14
0x11e70:	sub	rsi, r14
0x11e73:	add	rsi, qword ptr [rsp + 8]
0x11e78:	add	rbx, r14
0x11e7b:	sub	rbp, r14
0x11e7e:	call	0x2b60


0x11b20:	mov	edi, 0x1038
0x11b25:	call	0x11020


0x11aa2:	lea	rsi, [rip + 0x41b1]
0x11aa9:	call	0x12790


0x2760:	jmp	qword ptr [rip + 0x21750a]


0x118ea:	mov	rax, rbx
0x118ed:	xor	edx, edx
0x118ef:	nop	
0x118f0:	shl	rax, 8
0x118f4:	add	rdx, 1
0x118f8:	add	rax, 0xff
0x118fe:	cmp	r14, rax
0x11901:	ja	0x118f0


0x118b0:	cmp	rbx, r14
0x118b3:	je	0x1193f


0x2920:	jmp	qword ptr [rip + 0x21742a]




0x11723:	xor	edx, edx
0x11725:	div	rsi
0x11728:	mov	rax, rdx
0x1172b:	ret	


0x11710:	rol	rax, 9
0x11714:	add	rdi, 1
0x11718:	add	rax, rcx
0x1171b:	movsx	rcx, byte ptr [rdi]
0x1171f:	test	cl, cl
0x11721:	jne	0x11710










0x2c90:	jmp	qword ptr [rip + 0x217272]


0x2c70:	jmp	qword ptr [rip + 0x217282]




0x113da:	cmp	qword ptr [rdi + 0x48], 0
0x113df:	jne	0x113ca


0x2ce0:	jmp	qword ptr [rip + 0x21724a]


0x113ac:	mov	rdx, qword ptr [rdi + 0x58]
0x113b0:	sub	rdx, qword ptr [rdi + 0x48]
0x113b4:	add	rax, rdx
0x113b7:	ret	


0x2bd0:	jmp	qword ptr [rip + 0x2172d2]


0x2c10:	jmp	qword ptr [rip + 0x2172b2]








0x1120a:	call	0x2ad0


0x111c1:	sub	rsp, 8
0x111c5:	call	0x11270


0x111a2:	mov	qword ptr [rsi], rax
0x111a5:	mov	rsi, rax
0x111a8:	jmp	0x11080


0x11197:	mov	rdx, rax
0x1119a:	shr	rdx, 1
0x1119d:	lea	rax, [rdx + rax + 1]
0x111a2:	mov	qword ptr [rsi], rax
0x111a5:	mov	rsi, rax
0x111a8:	jmp	0x11080


0x11158:	xor	edx, edx
0x1115a:	mov	eax, 0x80
0x1115f:	xor	r8d, r8d
0x11162:	div	r9
0x11165:	test	rax, rax
0x11168:	sete	r8b
0x1116c:	lea	rcx, [r8 + rax]
0x11170:	jmp	0x11135


0x11135:	mov	rax, rcx
0x11138:	mul	r9
0x1113b:	seto	dl
0x1113e:	test	rax, rax
0x11141:	movzx	edx, dl
0x11144:	js	0x1114b


0x1114b:	sub	rsp, 8
0x1114f:	call	0x11270


0x1110f:	mov	rax, rcx
0x11112:	shr	rax, 1
0x11115:	lea	rcx, [rax + rcx + 1]
0x1111a:	mov	qword ptr [rsi], rcx
0x1111d:	imul	rcx, r9
0x11121:	mov	rsi, rcx
0x11124:	jmp	0x11080


0x110d9:	jmp	0x11080


0x110a8:	call	0x2e10


0x2c20:	jmp	qword ptr [rip + 0x2172aa]


0x11059:	jmp	0x11020




0x10f1c:	test	r11b, r11b
0x10f1f:	jne	0x10f45


0x10f12:	add	r9, 1
0x10f16:	cmp	r9, 0xa
0x10f1a:	jne	0x10ef0


0x10f06:	mov	rax, qword ptr [rax]
0x10f09:	test	rax, rax
0x10f0c:	mov	qword ptr [r8 + r9*8], rax
0x10f10:	je	0x10f1c


0x10e4b:	call	0x109c0


0x10e41:	add	r9, 1
0x10e45:	cmp	r9, 0xa
0x10e49:	jne	0x10e20


0x10e35:	mov	rax, qword ptr [r11]
0x10e38:	test	rax, rax
0x10e3b:	mov	qword ptr [r8 + r9*8], rax
0x10e3f:	je	0x10e4b


0x10df0:	add	r9, 1
0x10df4:	cmp	qword ptr [r8 + r9*8], 0
0x10df9:	jne	0x10df0


0x2db0:	jmp	qword ptr [rip + 0x2171e2]


0x1089b:	mov	dword ptr [rip + 0x209e63], 0xffffffff
0x108a5:	lea	rdx, [rsp + 0x30]
0x108aa:	mov	rsi, r12
0x108ad:	mov	edi, 1
0x108b2:	call	0x2910


0x107ce:	mov	ecx, 0x100
0x107d3:	mov	rsi, r12
0x107d6:	mov	edi, 0xffffff9c
0x107db:	call	0x2750


0x1034d:	test	ebx, ebx
0x1034f:	jns	0x1035a




0x10264:	xor	esi, esi
0x10266:	xor	r10d, r10d
0x10269:	cmp	rcx, 1
0x1026d:	ja	0x10289


0x1025b:	cmp	rdx, 0x3b9ac9ff
0x10262:	ja	0x102c0


0x102c0:	sub	rsp, 8
0x102c4:	call	0x2770


0x10188:	add	rsp, 0x18
0x1018c:	pop	rbx
0x1018d:	pop	rbp
0x1018e:	ret	


0x101de:	mov	rax, qword ptr [rdi + 0x50]
0x101e2:	mov	rcx, qword ptr [rdi + 0x48]
0x101e6:	mov	qword ptr [rbx + 8], rax
0x101ea:	xor	eax, eax
0x101ec:	cmp	rdx, 0x3fffffff
0x101f3:	mov	qword ptr [rbx], rcx
0x101f6:	jne	0x10188


0x10190:	cmp	rdx, 0x3fffffff
0x10197:	je	0x10218


0x10174:	cmp	rdx, 0x3ffffffe
0x1017b:	je	0x101ae


0xfadd:	mov	ebx, 1
0xfae2:	jl	0xfaef


0xfb28:	mov	ebx, 0xffffffff
0xfb2d:	jmp	0xfaef


0xfa18:	lea	rax, [r12 - 1]
0xfa1d:	cmp	rax, r14
0xfa20:	jg	0xfb28


0xfb20:	xor	ebx, ebx
0xfb22:	jmp	0xfaef


0xf8d8:	lea	rdx, [rsp + 0xc]
0xf8dd:	lea	rcx, [rip - 0x274]
0xf8e4:	call	0xf720


0xf8b2:	test	ecx, ecx
0xf8b4:	je	0xf8f0










0xf3eb:	add	rsp, 0x48
0xf3ef:	mov	rax, r13
0xf3f2:	pop	rbx
0xf3f3:	pop	rbp
0xf3f4:	pop	r12
0xf3f6:	pop	r13
0xf3f8:	pop	r14
0xf3fa:	pop	r15
0xf3fc:	ret	








0xec9a:	mov	qword ptr [rsp + 0x28], rsi
0xec9f:	mov	qword ptr [rsp + 0x30], rdx
0xeca4:	mov	rcx, rsp
0xeca7:	mov	rdx, r8
0xecaa:	mov	rsi, r9
0xecad:	call	0xe440


0xe8e9:	lea	rbx, [rip + 0x20b7a0]
0xe8f0:	cmp	r12, rbx
0xe8f3:	je	0xe904


0xe8d2:	call	0x2e10


0xe6ee:	mov	qword ptr [rdi + 0x28], rsi
0xe6f2:	mov	qword ptr [rdi + 0x30], rdx
0xe6f6:	ret	




0x2da0:	jmp	qword ptr [rip + 0x2171ea]


0x29a0:	jmp	qword ptr [rip + 0x2173ea]




0xceca:	sub	rsp, 8
0xcece:	mov	rsi, qword ptr [rsi]
0xced1:	mov	rdi, qword ptr [rdi]
0xced4:	call	0x2af0


0xce9a:	sub	rsp, 8
0xce9e:	mov	rsi, qword ptr [rsi]
0xcea1:	mov	rdi, qword ptr [rdi]
0xcea4:	call	0xf240


0xc8a8:	mov	rax, rsi
0xc8ab:	pxor	xmm0, xmm0
0xc8af:	shr	rax, 1
0xc8b2:	and	esi, 1
0xc8b5:	or	rax, rsi
0xc8b8:	cvtsi2ss	xmm0, rax
0xc8bd:	addss	xmm0, xmm0
0xc8c1:	jmp	0xc739


0xc730:	pxor	xmm0, xmm0
0xc734:	cvtsi2ss	xmm0, rsi
0xc739:	divss	xmm0, dword ptr [r12 + 8]
0xc740:	ucomiss	xmm0, dword ptr [rip + 0x8b85]
0xc747:	jae	0xc880


0xc6bc:	mov	rdi, qword ptr [r12 + 0x48]
0xc6c1:	test	rdi, rdi
0xc6c4:	je	0xc6e1


0xc63c:	cmp	rbp, rax
0xc63f:	jae	0xc6bc


0xc601:	add	r12, 0x10
0xc605:	cmp	qword ptr [rbp + 8], r12
0xc609:	ja	0xc5a0


0xc5a7:	mov	rbx, qword ptr [r12 + 8]
0xc5ac:	mov	rax, qword ptr [rbp + 0x40]
0xc5b0:	test	rbx, rbx
0xc5b3:	je	0xc5e5


0xc380:	mov	rax, rdx
0xc383:	add	rdi, 1
0xc387:	shl	rax, 5
0xc38b:	sub	rax, rdx
0xc38e:	xor	edx, edx
0xc390:	add	rax, rcx
0xc393:	movzx	ecx, byte ptr [rdi]
0xc396:	div	rsi
0xc399:	test	cl, cl
0xc39b:	jne	0xc380


0xc354:	add	rsp, 8
0xc358:	mov	rax, rbp
0xc35b:	pop	rbx
0xc35c:	pop	rbp
0xc35d:	pop	r12
0xc35f:	pop	r13
0xc361:	pop	r14
0xc363:	pop	r15
0xc365:	ret	


0xc34a:	add	r14, 0x10
0xc34e:	cmp	qword ptr [r15 + 8], r14
0xc352:	ja	0xc322


0xc32a:	mov	rbx, r14
0xc32d:	jmp	0xc333


0xc2dd:	add	r9, 0x10
0xc2e1:	cmp	qword ptr [rdi + 8], r9
0xc2e5:	ja	0xc29c


0xc2a4:	cmp	rdx, r8
0xc2a7:	jbe	0xc2e7


0xc1d3:	mov	rax, qword ptr [rdx]
0xc1d6:	test	rax, rax
0xc1d9:	jne	0xc1f6


0xc1f8:	sub	rsp, 8
0xc1fc:	call	0x2760


0xc06c:	add	rsi, 0x10
0xc070:	cmp	rsi, rdi
0xc073:	jb	0xc040


0xc046:	mov	rax, qword ptr [rsi + 8]
0xc04a:	mov	edx, 1
0xc04f:	test	rax, rax
0xc052:	je	0xc065


0xbfed:	add	rcx, 0x10
0xbff1:	cmp	rcx, r8
0xbff4:	jb	0xbfc0


0xbfc6:	mov	rax, qword ptr [rcx + 8]
0xbfca:	add	rsi, 1
0xbfce:	add	rdx, 1
0xbfd2:	test	rax, rax
0xbfd5:	je	0xbfed


0xc000:	cmp	qword ptr [rdi + 0x20], rdx
0xc004:	sete	al
0xc007:	ret	


0xbffe:	ret	


0xbf9c:	add	rsi, 0x10
0xbfa0:	cmp	rsi, rdi
0xbfa3:	jb	0xbf70


0xbf76:	mov	rdx, qword ptr [rsi + 8]
0xbf7a:	mov	ecx, 1
0xbf7f:	test	rdx, rdx
0xbf82:	je	0xbf95


0xbeda:	add	r12, 0x10
0xbede:	cmp	qword ptr [r13 + 8], r12
0xbee2:	ja	0xbe18


0xbe25:	mov	rbx, qword ptr [r12 + 8]
0xbe2a:	test	rbx, rbx
0xbe2d:	jne	0xbe4c


0xbde0:	mov	qword ptr [rdi], rcx
0xbde3:	xor	eax, eax
0xbde5:	ret	


0xbd92:	movss	xmm1, dword ptr [rip + 0x951e]
0xbd9a:	ucomiss	xmm1, xmm0
0xbd9d:	jbe	0xbde0


0xbbe0:	test	rax, rax
0xbbe3:	jne	0xbbef


0xbba7:	test	rcx, rcx
0xbbaa:	je	0xbbe5


0xbb24:	add	rsp, 8
0xbb28:	mov	rax, r12
0xbb2b:	pop	rbx
0xbb2c:	pop	rbp
0xbb2d:	pop	r12
0xbb2f:	pop	r13
0xbb31:	ret	


0xbb10:	mov	rdx, rbx
0xbb13:	mov	rsi, rbp
0xbb16:	mov	edi, r13d
0xbb19:	call	0xf010


0xb970:	and	eax, 0xffffffb5
0xb973:	add	eax, 0x78
0xb976:	jmp	0xb8d8


0xb8d2:	and	eax, 0xffffffe0
0xb8d5:	add	eax, 0x73
0xb8d8:	mov	byte ptr [rsi + 3], al
0xb8db:	mov	eax, edi
0xb8dd:	and	eax, 0x20
0xb8e0:	cmp	eax, 1
0xb8e3:	sbb	eax, eax
0xb8e5:	and	eax, 0xffffffbb
0xb8e8:	add	eax, 0x72
0xb8eb:	mov	byte ptr [rsi + 4], al
0xb8ee:	mov	eax, edi
0xb8f0:	and	eax, 0x10
0xb8f3:	cmp	eax, 1
0xb8f6:	sbb	eax, eax
0xb8f8:	and	eax, 0xffffffb6
0xb8fb:	add	eax, 0x77
0xb8fe:	mov	byte ptr [rsi + 5], al
0xb901:	mov	eax, edi
0xb903:	and	eax, 8
0xb906:	cmp	eax, 1
0xb909:	sbb	eax, eax
0xb90b:	test	edi, 0x400
0xb911:	je	0xb998


0xb842:	cmp	edx, 0x6000
0xb848:	mov	eax, 0x62
0xb84d:	je	0xb890


0xb80c:	add	rsp, 0x28
0xb810:	ret	


0xb811:	call	0x2930




0xb5a0:	add	rax, 1
0xb5a4:	movzx	edx, byte ptr [rax]
0xb5a7:	cmp	dl, 0x2f
0xb5aa:	je	0xb5a0


0xb5ea:	ret	


0xb5b0:	mov	rcx, rax
0xb5b3:	xor	esi, esi
0xb5b5:	jmp	0xb5d5


0xb264:	cmp	rdi, rcx
0xb267:	cmovbe	rcx, rdi
0xb26b:	mov	r8, rcx
0xb26e:	mov	rax, r8
0xb271:	ret	


0xb27d:	mov	r8, rsi
0xb280:	mov	rax, rdi
0xb283:	xor	edx, edx
0xb285:	div	r8
0xb288:	test	rdx, rdx
0xb28b:	jne	0xb2b8


0x2740:	jmp	qword ptr [rip + 0x21751a]


0xb232:	jmp	0xb180


0xb1ea:	jmp	0xb180


0xab0e:	lea	rbx, [rip + 0xa67b]
0xab15:	mov	qword ptr [rip + 0x20fa64], rbx
0xab1c:	pop	rbx
0xab1d:	ret	


0xab20:	mov	rdi, rbx
0xab23:	call	0xb590


0xaadf:	mov	rdx, r12
0xaae2:	mov	rsi, rbp
0xaae5:	mov	rdi, r13
0xaae8:	call	0x2a90


0xa478:	cmp	r8d, 0x11
0xa47c:	jne	0xa4e8


0xa4e8:	mov	rbx, qword ptr [rsp + 0x128]
0xa4f0:	xor	rbx, qword ptr fs:[0x28]
0xa4f9:	mov	eax, r8d
0xa4fc:	jne	0xa58d


0xa317:	cmp	ecx, 0x11
0xa31a:	jne	0xa390


0xa390:	mov	rbx, qword ptr [rsp + 0x138]
0xa398:	xor	rbx, qword ptr fs:[0x28]
0xa3a1:	mov	eax, ecx
0xa3a3:	jne	0xa42c






0x9f70:	mov	eax, dword ptr [r14 + 0x10]
0x9f74:	mov	edi, dword ptr [r14]
0x9f77:	mov	esi, 0xc020660b
0x9f7c:	mov	qword ptr [rsp], rdx
0x9f80:	not	rdx
0x9f83:	mov	dword ptr [rsp + 0x18], 0x48
0x9f8b:	mov	qword ptr [rsp + 8], rdx
0x9f90:	mov	rdx, rbp
0x9f93:	mov	dword ptr [rsp + 0x10], eax
0x9f97:	xor	eax, eax
0x9f99:	call	0x2a10


0x29e0:	jmp	qword ptr [rip + 0x2173ca]


0x9bb6:	mov	eax, dword ptr [rcx + 0xc]
0x9bb9:	lea	r10d, [rax - 1]
0x9bbd:	cmp	r10d, 2
0x9bc1:	ja	0x9c98


0x9cb7:	lea	rcx, [rip + 0xb3b2]
0x9cbe:	lea	rsi, [rip + 0xb382]
0x9cc5:	lea	rdi, [rip + 0xafb4]
0x9ccc:	mov	edx, 0xb87
0x9cd1:	call	0x29e0


0x5dd8:	cmp	byte ptr [rbx + 0x31], 0
0x5ddc:	jne	0x5df0


0x5b2a:	cmp	r15d, 0x11
0x5b2e:	mov	r12, qword ptr [rbp - 0x310]
0x5b35:	je	0x6338


0x5da0:	mov	edx, 0xffffff9c
0x5da5:	mov	rcx, rsi
0x5da8:	mov	r8d, 1
0x5dae:	mov	rsi, rdi
0x5db1:	mov	edi, edx
0x5db3:	call	0xeda0


0x5b0b:	mov	rax, qword ptr [rbp - 0x320]
0x5b12:	test	r15d, r15d
0x5b15:	sete	r14b
0x5b19:	test	rax, rax
0x5b1c:	je	0x5b21


0x2b50:	jmp	qword ptr [rip + 0x217312]


0x5910:	cmp	byte ptr [rdi + 0x2b], 0
0x5914:	je	0x5895


0x5877:	mov	esi, dword ptr [r9 + 0x18]
0x587b:	mov	edx, dword ptr [rcx + 0x18]
0x587e:	mov	eax, edx
0x5880:	mov	ecx, esi
0x5882:	not	eax
0x5884:	and	ecx, 0xfff
0x588a:	or	ah, 0xe
0x588d:	test	eax, ecx
0x588f:	jne	0x5960


0x58f0:	mov	rdi, r13
0x58f3:	call	0x2c00


0x58a0:	mov	edi, ebx
0x58a2:	call	0x2cf0




0x56a8:	add	rsp, 8
0x56ac:	mov	ebx, 1
0x56b1:	mov	eax, ebx
0x56b3:	pop	rbx
0x56b4:	pop	rbp
0x56b5:	pop	r12
0x56b7:	pop	r13
0x56b9:	ret	


0x56d8:	call	0x2770


0x5315:	add	rsp, 0x78
0x5319:	mov	eax, r15d
0x531c:	pop	rbx
0x531d:	pop	rbp
0x531e:	pop	r12
0x5320:	pop	r13
0x5322:	pop	r14
0x5324:	pop	r15
0x5326:	ret	


0x2a80:	jmp	qword ptr [rip + 0x21737a]






0x2ad0:	jmp	qword ptr [rip + 0x217352]


0x4d59:	jmp	0x4d98


0x4d65:	cmp	qword ptr [rip + 0x2152ac], rbx
0x4d6c:	mov	rbp, rbx
0x4d6f:	mov	rsi, qword ptr [rip + 0x2157ea]
0x4d76:	cmovbe	rbp, qword ptr [rip + 0x21529a]
0x4d7e:	mov	edi, r12d
0x4d81:	mov	rdx, rbp
0x4d84:	call	0xbae0


0x4936:	cmp	qword ptr [rbp - 0xf8], 0
0x493e:	je	0x4b9e


0x483f:	cmp	qword ptr [rbp - 0xf8], 0
0x4847:	jne	0x4c6f


0x4c99:	mov	rsi, qword ptr [rsi]
0x4c9c:	mov	edi, 4
0x4ca1:	call	0xeab0


0x4cdf:	mov	edx, 5
0x4ce4:	lea	rsi, [rip + 0xdd0a]
0x4ceb:	jmp	0x4cc8




0x37b3:	call	0x3700


0x37a7:	mov	rdi, qword ptr [rip + 0x21685a]
0x37ae:	call	0x2e18


0x3774:	pop	rbp
0x3775:	jmp	rax


0x3723:	pop	rbp
0x3724:	jmp	rax




0x126b3:	xor	esi, esi
0x126b5:	xor	eax, eax
0x126b7:	call	0x2820


0x12589:	xor	eax, eax
0x1258b:	mov	esi, 0x406
0x12590:	call	0x2820


0x125e0:	mov	edi, ebp
0x125e2:	xor	eax, eax
0x125e4:	call	0x2820


0x125b5:	jg	0x12610


0x11f16:	mov	rsi, qword ptr [rsp + 8]
0x11f1b:	mov	rdx, rbp
0x11f1e:	mov	rdi, rbx
0x11f21:	sub	r14, rbp
0x11f24:	call	0x2b60


0x2b60:	jmp	qword ptr [rip + 0x21730a]




0x11903:	mov	rdi, qword ptr [rsp + 8]
0x11908:	mov	rsi, r12
0x1190b:	call	0x11dc0


0x118f0:	shl	rax, 8
0x118f4:	add	rdx, 1
0x118f8:	add	rax, 0xff
0x118fe:	cmp	r14, rax
0x11901:	ja	0x118f0


0x1193f:	mov	qword ptr [r13 + 0x10], 0
0x11947:	mov	qword ptr [r13 + 8], 0
0x1194f:	mov	rcx, qword ptr [rsp + 0x18]
0x11954:	xor	rcx, qword ptr fs:[0x28]
0x1195d:	mov	rax, rbp
0x11960:	jne	0x11985


0x118b9:	mov	rax, rbx
0x118bc:	xor	edx, edx
0x118be:	sub	rax, r14
0x118c1:	div	r15
0x118c4:	sub	rbx, rdx
0x118c7:	mov	rdi, rdx
0x118ca:	mov	rsi, rax
0x118cd:	xor	edx, edx
0x118cf:	mov	rax, rbp
0x118d2:	div	r15
0x118d5:	cmp	rbp, rbx
0x118d8:	jbe	0x11978








0x113e1:	push	r12
0x113e3:	push	rbp
0x113e4:	mov	r12d, edx
0x113e7:	push	rbx
0x113e8:	mov	rbp, rsi
0x113eb:	mov	rbx, rdi
0x113ee:	call	0x2b80








0x11146:	test	rdx, rdx
0x11149:	je	0x1111a




0x10f21:	call	0x109c0


0x10f45:	mov	dword ptr [rsp + 8], r10d
0x10f4a:	jmp	0x10f21


0x10ef0:	cmp	r10d, 0x2f
0x10ef4:	ja	0x10f4c


0x10e20:	mov	eax, dword ptr [r10]
0x10e23:	cmp	eax, 0x2f
0x10e26:	ja	0x10e6a




0x10351:	test	r12, r12
0x10354:	je	0x106f8


0x1035a:	mov	eax, dword ptr [rip + 0x20a3ac]
0x10360:	test	eax, eax
0x10362:	js	0x10398


0x1026f:	xor	esi, esi
0x10271:	cmp	r9, 0x3ffffffe
0x10278:	mov	qword ptr [rdi], 0
0x1027f:	sete	sil
0x10283:	mov	r10d, 1
0x10289:	cmp	r8, 1
0x1028d:	ja	0x102ab


0x10289:	cmp	r8, 1
0x1028d:	ja	0x102ab


0x101f8:	lea	rdi, [rbx + 0x10]
0x101fc:	mov	byte ptr [rsp + 0xf], al
0x10200:	call	0x11640


0x10218:	mov	qword ptr [rsi], 0
0x1021f:	xor	eax, eax
0x10221:	jmp	0x10188


0x10199:	mov	rdi, rbx
0x1019c:	call	0x11640


0x101ae:	mov	rax, qword ptr [rbp + 0x60]
0x101b2:	mov	rdx, qword ptr [rbp + 0x58]
0x101b6:	mov	qword ptr [rbx + 0x18], rax
0x101ba:	mov	qword ptr [rbx + 0x10], rdx
0x101be:	add	rsp, 0x18
0x101c2:	xor	eax, eax
0x101c4:	pop	rbx
0x101c5:	pop	rbp
0x101c6:	ret	


0x1017d:	xor	eax, eax
0x1017f:	cmp	rdx, 0x3fffffff
0x10186:	je	0x101f8


0xfaef:	mov	rsi, qword ptr [rsp + 0x118]
0xfaf7:	xor	rsi, qword ptr fs:[0x28]
0xfb00:	mov	eax, ebx
0xfb02:	jne	0x100d8


0xfae4:	cmp	r9d, r15d
0xfae7:	jg	0xfb28


0xfa26:	lea	rax, [r14 - 1]
0xfa2a:	cmp	rax, r12
0xfa2d:	jg	0xfaef


0xf8f0:	lea	rdx, [rsp + 0xc]
0xf8f5:	lea	rcx, [rip - 0x1fc]
0xf8fc:	call	0xf720


0xf8b6:	lea	rcx, [rip + 0x5fa3]
0xf8bd:	lea	rsi, [rip + 0x5f44]
0xf8c4:	lea	rdi, [rip + 0x5f65]
0xf8cb:	mov	edx, 0x147
0xf8d0:	call	0x29e0


0xe904:	pop	rbx
0xe905:	mov	dword ptr [rip + 0x20b769], 1
0xe90f:	pop	rbp
0xe910:	pop	r12
0xe912:	ret	


0xe8f5:	mov	rdi, r12
0xe8f8:	call	0x2e10






0xc739:	divss	xmm0, dword ptr [r12 + 8]
0xc740:	ucomiss	xmm0, dword ptr [rip + 0x8b85]
0xc747:	jae	0xc880


0xc74d:	ucomiss	xmm0, dword ptr [rip + 0x8b7c]
0xc754:	jb	0xc8d0


0xc880:	xor	ebx, ebx
0xc882:	mov	rcx, qword ptr [rsp + 0x58]
0xc887:	xor	rcx, qword ptr fs:[0x28]
0xc890:	mov	eax, ebx
0xc892:	jne	0xc92a


0xc6b1:	add	rbp, 0x10
0xc6b5:	cmp	qword ptr [r12 + 8], rbp
0xc6ba:	ja	0xc690


0xc6e1:	mov	rdi, qword ptr [r12]
0xc6e5:	call	0x2e10


0xc5e5:	test	rax, rax
0xc5e8:	je	0xc5f0


0xc322:	mov	rdi, qword ptr [r14]
0xc325:	test	rdi, rdi
0xc328:	je	0xc34a


0xc333:	mov	rsi, r13
0xc336:	call	r12


0xc2e7:	mov	rax, r8
0xc2ea:	ret	


0xc29c:	mov	rcx, qword ptr [r9]
0xc29f:	test	rcx, rcx
0xc2a2:	je	0xc2dd


0xc2a9:	mov	qword ptr [rsi + r8*8], rcx
0xc2ad:	mov	rcx, qword ptr [r9 + 8]
0xc2b1:	lea	rax, [r8 + 1]
0xc2b5:	test	rcx, rcx
0xc2b8:	je	0xc2da


0xc1f6:	ret	


0xc040:	cmp	qword ptr [rsi], 0
0xc044:	je	0xc06c


0xc065:	cmp	rbx, rdx
0xc068:	cmovb	rbx, rdx
0xc06c:	add	rsi, 0x10
0xc070:	cmp	rsi, rdi
0xc073:	jb	0xc040


0xbf70:	cmp	qword ptr [rsi], 0
0xbf74:	je	0xbf9c


0xbfa5:	ret	


0xbf95:	cmp	rax, rcx
0xbf98:	cmovb	rax, rcx
0xbf9c:	add	rsi, 0x10
0xbfa0:	cmp	rsi, rdi
0xbfa3:	jb	0xbf70


0xbe18:	mov	r15, qword ptr [r12]
0xbe1c:	test	r15, r15
0xbe1f:	je	0xbeda


0xbe2f:	jmp	0xbe8b


0xbe4c:	mov	r15, qword ptr [rbx]
0xbe4f:	mov	rdi, rbp
0xbe52:	mov	rsi, r15
0xbe55:	call	0xbc20


0xbd9f:	movss	xmm1, dword ptr [rdx + 0xc]
0xbda4:	ucomiss	xmm1, dword ptr [rip + 0x9511]
0xbdab:	jbe	0xbde0


0xbbe5:	add	rdi, 2
0xbbe9:	cmp	rdi, -1
0xbbed:	jne	0xbb88


0xbbac:	mov	r8d, 0x10
0xbbb2:	mov	esi, 9
0xbbb7:	mov	ecx, 3
0xbbbc:	jmp	0xbbc9


0xb8d8:	mov	byte ptr [rsi + 3], al
0xb8db:	mov	eax, edi
0xb8dd:	and	eax, 0x20
0xb8e0:	cmp	eax, 1
0xb8e3:	sbb	eax, eax
0xb8e5:	and	eax, 0xffffffbb
0xb8e8:	add	eax, 0x72
0xb8eb:	mov	byte ptr [rsi + 4], al
0xb8ee:	mov	eax, edi
0xb8f0:	and	eax, 0x10
0xb8f3:	cmp	eax, 1
0xb8f6:	sbb	eax, eax
0xb8f8:	and	eax, 0xffffffb6
0xb8fb:	add	eax, 0x77
0xb8fe:	mov	byte ptr [rsi + 5], al
0xb901:	mov	eax, edi
0xb903:	and	eax, 8
0xb906:	cmp	eax, 1
0xb909:	sbb	eax, eax
0xb90b:	test	edi, 0x400
0xb911:	je	0xb998


0xb998:	and	eax, 0xffffffb5
0xb99b:	add	eax, 0x78
0xb99e:	jmp	0xb91d


0xb917:	and	eax, 0xffffffe0
0xb91a:	add	eax, 0x73
0xb91d:	mov	byte ptr [rsi + 6], al
0xb920:	mov	eax, edi
0xb922:	and	eax, 4
0xb925:	cmp	eax, 1
0xb928:	sbb	eax, eax
0xb92a:	and	eax, 0xffffffbb
0xb92d:	add	eax, 0x72
0xb930:	mov	byte ptr [rsi + 7], al
0xb933:	mov	eax, edi
0xb935:	and	eax, 2
0xb938:	cmp	eax, 1
0xb93b:	sbb	eax, eax
0xb93d:	and	eax, 0xffffffb6
0xb940:	add	eax, 0x77
0xb943:	mov	byte ptr [rsi + 8], al
0xb946:	mov	eax, edi
0xb948:	and	eax, 1
0xb94b:	cmp	eax, 1
0xb94e:	sbb	eax, eax
0xb950:	and	edi, 0x200
0xb956:	je	0xb980


0xb84f:	cmp	edx, 0x2000
0xb855:	mov	eax, 0x63
0xb85a:	je	0xb890


0x2930:	jmp	qword ptr [rip + 0x217422]


0xb5d5:	cmp	dl, 0x2f
0xb5d8:	jne	0xb5c0


0xb28d:	xor	edx, edx
0xb28f:	mov	rax, rdi
0xb292:	div	r8
0xb295:	mov	r8, rsi
0xb298:	imul	r8, rax
0xb29c:	mov	r9, rax
0xb29f:	cmp	r8, rcx
0xb2a2:	ja	0xb264


0xb2b8:	mov	rax, r8
0xb2bb:	mov	r8, rdx
0xb2be:	jmp	0xb283




0x2a90:	jmp	qword ptr [rip + 0x217372]


0xa47e:	lea	r14, [rsp + 0x20]
0xa483:	mov	rdi, rbx
0xa486:	mov	rsi, r14
0xa489:	call	0xa250


0xa502:	add	rsp, 0x130
0xa509:	pop	rbx
0xa50a:	pop	rbp
0xa50b:	pop	r12
0xa50d:	pop	r13
0xa50f:	pop	r14
0xa511:	ret	


0xa58d:	call	0x2930


0xa31c:	lea	rax, [rsp + 0x30]
0xa321:	mov	rdi, rbx
0xa324:	mov	rsi, rax
0xa327:	mov	qword ptr [rsp], rax
0xa32b:	call	0xa250


0xa3a9:	add	rsp, 0x148
0xa3b0:	pop	rbx
0xa3b1:	pop	rbp
0xa3b2:	pop	r12
0xa3b4:	pop	r13
0xa3b6:	pop	r14
0xa3b8:	pop	r15
0xa3ba:	ret	


0xa42c:	call	0x2930


0x2a10:	jmp	qword ptr [rip + 0x2173b2]




0x9bc7:	mov	r10d, dword ptr [rcx + 0x38]
0x9bcb:	cmp	r10d, 2
0x9bcf:	ja	0x9c79


0x9c98:	lea	rcx, [rip + 0xb3d1]
0x9c9f:	lea	rsi, [rip + 0xb3a1]
0x9ca6:	lea	rdi, [rip + 0xaffb]
0x9cad:	mov	edx, 0xb88
0x9cb2:	call	0x29e0


0x5dde:	mov	r12, qword ptr [rbp - 0x308]
0x5de5:	xor	r15d, r15d
0x5de8:	jmp	0x5b3b


0x5df0:	xor	r15d, r15d
0x5df3:	jmp	0x5b88


0x6338:	cmp	dword ptr [rbx + 8], 2
0x633c:	je	0x5b88


0x5b3b:	cmp	dword ptr [rbx + 4], 2
0x5b3f:	lea	r10, [rbp - 0x280]
0x5b46:	mov	rsi, r12
0x5b49:	mov	edi, 1
0x5b4e:	mov	rdx, r10
0x5b51:	je	0x6350


0x5b1e:	mov	byte ptr [rax], r14b
0x5b21:	test	r15d, r15d
0x5b24:	je	0x5dd8




0x591a:	mov	esi, dword ptr [r9 + 0x18]
0x591e:	mov	edx, dword ptr [rdi + 0x10]
0x5921:	jmp	0x587e


0x5960:	and	edx, esi
0x5962:	mov	rdi, r13
0x5965:	mov	esi, ebx
0x5967:	and	edx, 0x1c0
0x596d:	call	0xd0b0


0x2c00:	jmp	qword ptr [rip + 0x2172ba]


0x2cf0:	jmp	qword ptr [rip + 0x217242]






0x4d98:	pop	rbx
0x4d99:	mov	eax, 1
0x4d9e:	pop	rbp
0x4d9f:	pop	r12
0x4da1:	ret	


0x4b9e:	cmp	r12d, 1
0x4ba2:	je	0x4872


0x4944:	cmp	r12d, 1
0x4948:	jne	0x4b89


0x484d:	cmp	r12d, 2
0x4851:	jg	0x4c30


0x4c6f:	lea	rsi, [rip + 0xf84a]
0x4c76:	mov	edx, 5
0x4c7b:	xor	edi, edi
0x4c7d:	call	0x28e0


0x4cc8:	xor	edi, edi
0x4cca:	call	0x28e0


0x2e18:	jmp	qword ptr [rip + 0x2171d2]


0x125b7:	cmp	esi, 4
0x125ba:	je	0x12690


0x12610:	cmp	esi, 0x407
0x12616:	jg	0x12660




0x11962:	add	rsp, 0x28
0x11966:	pop	rbx
0x11967:	pop	rbp
0x11968:	pop	r12
0x1196a:	pop	r13
0x1196c:	pop	r14
0x1196e:	pop	r15
0x11970:	ret	


0x11985:	call	0x2930


0x11978:	mov	qword ptr [r13 + 8], rax
0x1197c:	mov	qword ptr [r13 + 0x10], rsi
0x11980:	mov	rbp, rdx
0x11983:	jmp	0x1194f


0x118de:	lea	rbx, [rdi - 1]
0x118e2:	mov	rbp, rdx
0x118e5:	cmp	rbx, r14
0x118e8:	jae	0x118b0


0x1111a:	mov	qword ptr [rsi], rcx
0x1111d:	imul	rcx, r9
0x11121:	mov	rsi, rcx
0x11124:	jmp	0x11080


0x106f8:	call	0x2770


0x10398:	test	r13d, r13d
0x1039b:	mov	dword ptr [rip + 0x20a367], 0xffffffff
0x103a5:	mov	dword ptr [rip + 0x20a359], 0xffffffff
0x103af:	jne	0x10510


0x10364:	cmp	r13d, 2
0x10368:	je	0x10570


0x1028f:	xor	eax, eax
0x10291:	cmp	rdx, 0x3ffffffe
0x10298:	mov	qword ptr [rdi + 0x10], 0
0x102a0:	sete	al
0x102a3:	mov	r10d, 1
0x102a9:	add	esi, eax
0x102ab:	xor	eax, eax
0x102ad:	cmp	esi, 1
0x102b0:	sete	al
0x102b3:	add	eax, r10d
0x102b6:	ret	


0x102ab:	xor	eax, eax
0x102ad:	cmp	esi, 1
0x102b0:	sete	al
0x102b3:	add	eax, r10d
0x102b6:	ret	


0xfb08:	add	rsp, 0x128
0xfb0f:	pop	rbx
0xfb10:	pop	rbp
0xfb11:	pop	r12
0xfb13:	pop	r13
0xfb15:	pop	r14
0xfb17:	pop	r15
0xfb19:	ret	


0x100d8:	call	0x2930


0xfae9:	setl	bl
0xfaec:	movzx	ebx, bl
0xfaef:	mov	rsi, qword ptr [rsp + 0x118]
0xfaf7:	xor	rsi, qword ptr fs:[0x28]
0xfb00:	mov	eax, ebx
0xfb02:	jne	0x100d8


0xfa33:	mov	rbp, rdx
0xfa36:	mov	rdx, qword ptr [rip + 0x20acc3]
0xfa3d:	mov	r11, rsi
0xfa40:	test	rdx, rdx
0xfa43:	je	0xffe0


0xc8d0:	cvttss2si	rsi, xmm0
0xc8d5:	jmp	0xc778


0xc75a:	subss	xmm0, dword ptr [rip + 0x8b6e]
0xc762:	movabs	rax, 0x8000000000000000
0xc76c:	cvttss2si	rsi, xmm0
0xc771:	xor	rsi, rax
0xc774:	nop	dword ptr [rax]
0xc778:	mov	rdi, rsi
0xc77b:	call	0xbb60


0xc898:	add	rsp, 0x60
0xc89c:	pop	rbx
0xc89d:	pop	rbp
0xc89e:	pop	r12
0xc8a0:	ret	


0xc92a:	call	0x2930


0xc690:	mov	rdi, qword ptr [rbp + 8]
0xc694:	test	rdi, rdi
0xc697:	je	0xc6b1


0xc676:	add	rbp, 0x10
0xc67a:	cmp	rax, rbp
0xc67d:	ja	0xc648


0xc651:	mov	rbx, rbp
0xc654:	jmp	0xc663


0xc5f0:	mov	qword ptr [r12], 0
0xc5f8:	mov	qword ptr [r12 + 8], 0
0xc601:	add	r12, 0x10
0xc605:	cmp	qword ptr [rbp + 8], r12
0xc609:	ja	0xc5a0


0xc5ea:	mov	rdi, qword ptr [r12]
0xc5ee:	call	rax


0xc5c6:	mov	rdx, qword ptr [rbx + 8]
0xc5ca:	mov	rcx, qword ptr [rbp + 0x48]
0xc5ce:	mov	qword ptr [rbx], 0
0xc5d5:	test	rdx, rdx
0xc5d8:	mov	qword ptr [rbx + 8], rcx
0xc5dc:	mov	qword ptr [rbp + 0x48], rbx
0xc5e0:	mov	rbx, rdx
0xc5e3:	jne	0xc5b8


0xc5bd:	mov	rdi, qword ptr [rbx]
0xc5c0:	call	rax


0xc2da:	mov	r8, rax
0xc2dd:	add	r9, 0x10
0xc2e1:	cmp	qword ptr [rdi + 8], r9
0xc2e5:	ja	0xc29c


0xc1e9:	mov	rax, qword ptr [rdx]
0xc1ec:	test	rax, rax
0xc1ef:	je	0xc1e0


0xc058:	mov	rax, qword ptr [rax + 8]
0xc05c:	add	rdx, 1
0xc060:	test	rax, rax
0xc063:	jne	0xc058


0xbfe0:	mov	rax, qword ptr [rax + 8]
0xbfe4:	add	rdx, 1
0xbfe8:	test	rax, rax
0xbfeb:	jne	0xbfe0


0xbf88:	mov	rdx, qword ptr [rdx + 8]
0xbf8c:	add	rcx, 1
0xbf90:	test	rdx, rdx
0xbf93:	jne	0xbf88


0xbe8b:	test	r14b, r14b
0xbe8e:	mov	qword ptr [r12 + 8], 0
0xbe97:	jne	0xbeda


0xbdad:	movss	xmm1, dword ptr [rdx]
0xbdb1:	ucomiss	xmm1, dword ptr [rip + 0x9508]
0xbdb8:	jb	0xbde0


0xbb88:	mov	rax, rdi
0xbb8b:	mov	rcx, rdi
0xbb8e:	mul	r9
0xbb91:	mov	rax, rdx
0xbb94:	shr	rax, 1
0xbb97:	lea	rax, [rax + rax*2]
0xbb9b:	sub	rcx, rax
0xbb9e:	cmp	rdi, 9
0xbba2:	mov	rax, rcx
0xbba5:	jbe	0xbbe0


0xbbc9:	add	rcx, 2
0xbbcd:	xor	edx, edx
0xbbcf:	mov	rax, rdi
0xbbd2:	div	rcx
0xbbd5:	add	rsi, r8
0xbbd8:	cmp	rsi, rdi
0xbbdb:	mov	rax, rdx
0xbbde:	jb	0xbbc0


0xb91d:	mov	byte ptr [rsi + 6], al
0xb920:	mov	eax, edi
0xb922:	and	eax, 4
0xb925:	cmp	eax, 1
0xb928:	sbb	eax, eax
0xb92a:	and	eax, 0xffffffbb
0xb92d:	add	eax, 0x72
0xb930:	mov	byte ptr [rsi + 7], al
0xb933:	mov	eax, edi
0xb935:	and	eax, 2
0xb938:	cmp	eax, 1
0xb93b:	sbb	eax, eax
0xb93d:	and	eax, 0xffffffb6
0xb940:	add	eax, 0x77
0xb943:	mov	byte ptr [rsi + 8], al
0xb946:	mov	eax, edi
0xb948:	and	eax, 1
0xb94b:	cmp	eax, 1
0xb94e:	sbb	eax, eax
0xb950:	and	edi, 0x200
0xb956:	je	0xb980


0xb980:	and	eax, 0xffffffb5
0xb983:	add	eax, 0x78
0xb986:	mov	byte ptr [rsi + 9], al
0xb989:	mov	eax, 0x20
0xb98e:	mov	word ptr [rsi + 0xa], ax
0xb992:	ret	


0xb958:	and	eax, 0xffffffe0
0xb95b:	add	eax, 0x74
0xb95e:	mov	byte ptr [rsi + 9], al
0xb961:	mov	eax, 0x20
0xb966:	mov	word ptr [rsi + 0xa], ax
0xb96a:	ret	


0xb85c:	cmp	edx, 0xa000
0xb862:	mov	eax, 0x6c
0xb867:	je	0xb890




0xb5da:	add	rcx, 1
0xb5de:	movzx	edx, byte ptr [rcx]
0xb5e1:	mov	esi, 1
0xb5e6:	test	dl, dl
0xb5e8:	jne	0xb5d5


0xb5c0:	test	sil, sil
0xb5c3:	je	0xb5ca


0xb2a4:	xor	edx, edx
0xb2a6:	mov	rax, r8
0xb2a9:	div	rsi
0xb2ac:	cmp	rax, r9
0xb2af:	jne	0xb264


0xb283:	xor	edx, edx
0xb285:	div	r8
0xb288:	test	rdx, rdx
0xb28b:	jne	0xb2b8






0x9bd5:	cmp	byte ptr [rcx + 0x17], 0
0x9bd9:	jne	0x9c30


0x9c79:	lea	rcx, [rip + 0xb3f0]
0x9c80:	lea	rsi, [rip + 0xb3c0]
0x9c87:	lea	rdi, [rip + 0xb042]
0x9c8e:	mov	edx, 0xb89
0x9c93:	call	0x29e0


0x5b88:	test	r13b, r13b
0x5b8b:	je	0x5bca


0x6342:	jmp	0x5b3b


0x6350:	call	0x2910


0x5b57:	call	0x2ba0


0x587e:	mov	eax, edx
0x5880:	mov	ecx, esi
0x5882:	not	eax
0x5884:	and	ecx, 0xfff
0x588a:	or	ah, 0xe
0x588d:	test	eax, ecx
0x588f:	jne	0x5960






0x4872:	cmp	byte ptr [rip + 0x2158d8], 0
0x4879:	mov	r12, qword ptr [rbx]
0x487c:	mov	rbx, qword ptr [rbx + 8]
0x4880:	jne	0x4cbc


0x4ba8:	movsxd	rdx, r12d
0x4bab:	movzx	ecx, al
0x4bae:	lea	r13, [rsi + rdx*8 - 8]
0x4bb3:	lea	rdx, [rbp - 0xe2]
0x4bba:	lea	rsi, [rbp - 0xd0]
0x4bc1:	mov	rdi, qword ptr [r13]
0x4bc5:	call	0x3930


0x494e:	lea	eax, [r12 - 1]
0x4953:	mov	r15d, 1
0x4959:	lea	rax, [rbx + rax*8 + 8]
0x495e:	mov	qword ptr [rbp - 0x100], rax
0x4965:	lea	rax, [rbp - 0xe1]
0x496c:	mov	qword ptr [rbp - 0x110], rax
0x4973:	lea	rax, [rbp - 0xd8]
0x497a:	mov	qword ptr [rbp - 0x108], rax
0x4981:	jmp	0x4a44


0x4b89:	mov	rdi, r14
0x4b8c:	call	0x5770


0x4857:	mov	rdi, qword ptr [rbx + r12*8 - 8]
0x485c:	lea	rdx, [rbp - 0xe2]
0x4863:	lea	rsi, [rbp - 0xd0]
0x486a:	movzx	ecx, al
0x486d:	call	0x3930


0x4c30:	mov	rsi, qword ptr [rsi + 0x10]
0x4c34:	mov	edi, 4
0x4c39:	call	0xeab0


0x12690:	mov	eax, dword ptr [rsp]
0x12693:	cmp	eax, 0x2f
0x12696:	ja	0x12784


0x125c0:	jg	0x12680


0x12618:	cmp	esi, 0x406
0x1261e:	jge	0x12690


0x12660:	cmp	esi, 0x409
0x12666:	je	0x12690


0x1194f:	mov	rcx, qword ptr [rsp + 0x18]
0x11954:	xor	rcx, qword ptr fs:[0x28]
0x1195d:	mov	rax, rbp
0x11960:	jne	0x11985


0x103b5:	mov	rsi, qword ptr [rsp + 8]
0x103ba:	test	rsi, rsi
0x103bd:	je	0x10650


0x10510:	cmp	r13d, 3
0x10514:	je	0x1053c


0x10570:	test	ebx, ebx
0x10572:	lea	rdx, [rsp + 0x70]
0x10577:	js	0x10680


0x1036e:	mov	rsi, qword ptr [rsp + 8]
0x10373:	test	ebx, ebx
0x10375:	js	0x106a0


0xffe0:	mov	r8, qword ptr [rip + 0x209fe1]
0xffe7:	lea	rdx, [rip - 0x65e]
0xffee:	lea	rcx, [rip - 0x655]
0xfff5:	mov	qword ptr [rsp + 0x20], rsi
0xfffa:	mov	edi, 0x10
0xffff:	xor	esi, esi
0x10001:	mov	dword ptr [rsp + 0x18], r10d
0x10006:	mov	dword ptr [rsp + 0x10], r13d
0x1000b:	call	0xc3d0


0xfa49:	mov	rsi, qword ptr [rip + 0x20aca8]
0xfa50:	test	rsi, rsi
0xfa53:	je	0xfb30


0xc67f:	mov	rbp, qword ptr [r12]
0xc683:	cmp	rbp, rax
0xc686:	jae	0xc6bc


0xc648:	mov	rdi, qword ptr [rbp]
0xc64c:	test	rdi, rdi
0xc64f:	je	0xc676


0xc663:	call	qword ptr [r12 + 0x40]


0xc5b8:	test	rax, rax
0xc5bb:	je	0xc5c6


0xc2f0:	ret	


0xc2c5:	mov	r8, qword ptr [rcx]
0xc2c8:	add	rax, 1
0xc2cc:	mov	qword ptr [rsi + rax*8 - 8], r8
0xc2d1:	mov	rcx, qword ptr [rcx + 8]
0xc2d5:	test	rcx, rcx
0xc2d8:	jne	0xc2c0


0xc1e0:	add	rdx, 0x10
0xc1e4:	cmp	rdx, rcx
0xc1e7:	jae	0xc1f8


0xc1f1:	ret	


0xbe99:	mov	rsi, r15
0xbe9c:	mov	rdi, rbp
0xbe9f:	call	0xbc20


0xbdba:	addss	xmm1, dword ptr [rip + 0x94f2]
0xbdc2:	movss	xmm2, dword ptr [rdx + 4]
0xbdc7:	ucomiss	xmm2, xmm1
0xbdca:	jbe	0xbde0


0xbbc0:	add	r8, 8
0xbbc4:	test	rdx, rdx
0xbbc7:	je	0xbbe5


0xb869:	cmp	edx, 0x1000
0xb86f:	mov	eax, 0x70
0xb874:	je	0xb890


0xb5ca:	add	rcx, 1
0xb5ce:	movzx	edx, byte ptr [rcx]
0xb5d1:	test	dl, dl
0xb5d3:	je	0xb5ea


0xb5c5:	mov	rax, rcx
0xb5c8:	xor	esi, esi
0xb5ca:	add	rcx, 1
0xb5ce:	movzx	edx, byte ptr [rcx]
0xb5d1:	test	dl, dl
0xb5d3:	je	0xb5ea


0xb2b1:	jmp	0xb26e


0x9bdb:	cmp	eax, 2
0x9bde:	je	0x9be6


0x9c30:	cmp	byte ptr [rcx + 0x2c], 0
0x9c34:	je	0x9bdb


0x5bca:	mov	eax, dword ptr [rbx + 4]
0x5bcd:	mov	dword ptr [rbp - 0x328], 1
0x5bd7:	cmp	eax, 4
0x5bda:	je	0x5bee


0x5b8d:	mov	rdi, qword ptr [rbx + 0x48]
0x5b91:	test	rdi, rdi
0x5b94:	je	0x5bca


0x4886:	cmp	byte ptr [r14 + 0x16], 0
0x488b:	je	0x48f4


0x4cbc:	lea	rsi, [rip + 0xf845]
0x4cc3:	mov	edx, 5
0x4cc8:	xor	edi, edi
0x4cca:	call	0x28e0


0x4a44:	cmp	byte ptr [rip + 0x215705], 0
0x4a4b:	mov	qword ptr [rbp - 0xd8], 0
0x4a56:	mov	r13, qword ptr [rbx]
0x4a59:	jne	0x4b60


0x1269c:	add	rax, qword ptr [rsp + 0x10]
0x126a1:	mov	edx, dword ptr [rax]
0x126a3:	mov	edi, ebp
0x126a5:	xor	eax, eax
0x126a7:	call	0x2820


0x12784:	mov	rax, qword ptr [rsp + 8]
0x12789:	jmp	0x126a1


0x125c6:	cmp	esi, 2
0x125c9:	je	0x12690


0x12680:	cmp	esi, 9
0x12683:	je	0x125e0


0x12620:	cmp	esi, 0x401
0x12626:	je	0x125e0


0x12668:	jl	0x125e0


0x10650:	xor	r13d, r13d
0x10653:	jmp	0x1041a


0x103c3:	mov	rax, qword ptr [rsi]
0x103c6:	mov	rdi, qword ptr [rsi + 8]
0x103ca:	movabs	rcx, 0x20c49ba5e353f7cf
0x103d4:	lea	r13, [rsp + 0x30]
0x103d9:	mov	qword ptr [rsp + 0x30], rax
0x103de:	mov	rax, rdi
0x103e1:	sar	rdi, 0x3f
0x103e5:	imul	rcx
0x103e8:	mov	rax, qword ptr [rsi + 0x10]
0x103ec:	mov	rsi, qword ptr [rsi + 0x18]
0x103f0:	mov	qword ptr [rsp + 0x40], rax
0x103f5:	mov	rax, rsi
0x103f8:	sar	rsi, 0x3f
0x103fc:	sar	rdx, 7
0x10400:	sub	rdx, rdi
0x10403:	mov	qword ptr [rsp + 0x38], rdx
0x10408:	imul	rcx
0x1040b:	mov	rcx, rdx
0x1040e:	sar	rcx, 7
0x10412:	sub	rcx, rsi
0x10415:	mov	qword ptr [rsp + 0x48], rcx
0x1041a:	test	ebx, ebx
0x1041c:	mov	rdx, r13
0x1041f:	js	0x105f8


0x1053c:	cmp	qword ptr [rsp + 8], 0
0x10542:	je	0x10650


0x10516:	test	ebx, ebx
0x10518:	lea	rdx, [rsp + 0x70]
0x1051d:	js	0x10660


0x10680:	mov	rsi, r12
0x10683:	mov	edi, 1
0x10688:	call	0x2ba0


0x1057d:	mov	esi, ebx
0x1057f:	mov	edi, 1
0x10584:	call	0x2bf0


0x106a0:	xor	ecx, ecx
0x106a2:	mov	rdx, rsi
0x106a5:	mov	edi, 0xffffff9c
0x106aa:	mov	rsi, r12
0x106ad:	call	0x2750


0x1037b:	mov	edi, ebx
0x1037d:	call	0x2d30


0xfb30:	mov	edi, 0x10
0xfb35:	mov	qword ptr [rsp + 0x28], r11
0xfb3a:	mov	dword ptr [rsp + 0x20], r10d
0xfb3f:	mov	dword ptr [rsp + 0x18], r9d
0xfb44:	mov	qword ptr [rsp + 0x10], rdx
0xfb49:	call	0x2bc0


0xfa59:	mov	rax, qword ptr [rbp]
0xfa5d:	mov	rdi, rdx
0xfa60:	mov	qword ptr [rsp + 0x28], r11
0xfa65:	mov	dword ptr [rsp + 0x20], r10d
0xfa6a:	mov	dword ptr [rsp + 0x18], r9d
0xfa6f:	mov	qword ptr [rsi], rax
0xfa72:	call	0xcbd0


0xc2c0:	cmp	rdx, rax
0xc2c3:	je	0xc2f0


0xbdcc:	movss	xmm3, dword ptr [rip + 0x94f0]
0xbdd4:	ucomiss	xmm3, xmm2
0xbdd7:	jb	0xbde0


0xb876:	cmp	edx, 0xc000
0xb87c:	mov	eax, 0x73
0xb881:	mov	edx, 0x3f
0xb886:	cmovne	eax, edx
0xb889:	nop	dword ptr [rax]
0xb890:	mov	byte ptr [rsi], al
0xb892:	mov	eax, edi
0xb894:	and	eax, 0x100
0xb899:	cmp	eax, 1
0xb89c:	sbb	eax, eax
0xb89e:	and	eax, 0xffffffbb
0xb8a1:	add	eax, 0x72
0xb8a4:	mov	byte ptr [rsi + 1], al
0xb8a7:	mov	eax, edi
0xb8a9:	and	eax, 0x80
0xb8ae:	cmp	eax, 1
0xb8b1:	sbb	eax, eax
0xb8b3:	and	eax, 0xffffffb6
0xb8b6:	add	eax, 0x77
0xb8b9:	mov	byte ptr [rsi + 2], al
0xb8bc:	mov	eax, edi
0xb8be:	and	eax, 0x40
0xb8c1:	cmp	eax, 1
0xb8c4:	sbb	eax, eax
0xb8c6:	test	edi, 0x800
0xb8cc:	je	0xb970


0xb26e:	mov	rax, r8
0xb271:	ret	


0x9be6:	mov	byte ptr [rsp + 7], 0
0x9beb:	push	r9
0x9bed:	movzx	edx, dl
0x9bf0:	push	r8
0x9bf2:	mov	r9, rcx
0x9bf5:	xor	r8d, r8d
0x9bf8:	xor	ecx, ecx
0x9bfa:	mov	qword ptr [rip + 0x210967], rsi
0x9c01:	mov	qword ptr [rip + 0x210968], rdi
0x9c08:	lea	rax, [rsp + 0x17]
0x9c0d:	push	rax
0x9c0e:	push	1
0x9c10:	call	0x5a80


0x9be0:	cmp	r10d, 2
0x9be4:	je	0x9c55


0x9c36:	lea	rcx, [rip + 0xb433]
0x9c3d:	lea	rsi, [rip + 0xb403]
0x9c44:	lea	rdi, [rip + 0xb0ad]
0x9c4b:	mov	edx, 0xb8a
0x9c50:	call	0x29e0


0x5bee:	test	r14b, r14b
0x5bf1:	jne	0x5e00


0x5bdc:	cmp	eax, 3
0x5bdf:	sete	al
0x5be2:	movzx	eax, al
0x5be5:	and	eax, r13d
0x5be8:	mov	dword ptr [rbp - 0x328], eax
0x5bee:	test	r14b, r14b
0x5bf1:	jne	0x5e00


0x5b96:	mov	eax, dword ptr [rbp - 0x314]
0x5b9c:	lea	r10, [rbp - 0x280]
0x5ba3:	and	eax, 0xf000
0x5ba8:	cmp	eax, 0x4000
0x5bad:	je	0x5bbb


0x48f4:	lea	r8, [rbp - 0xd8]
0x48fb:	xor	r9d, r9d
0x48fe:	mov	rcx, r14
0x4901:	xor	edx, edx
0x4903:	mov	rsi, rbx
0x4906:	mov	rdi, r12
0x4909:	call	0x9b90


0x488d:	mov	r13d, dword ptr [r14]
0x4890:	test	r13d, r13d
0x4893:	je	0x48f4


0x4a5f:	cmp	byte ptr [rip + 0x2156eb], 0
0x4a66:	mov	rdi, r13
0x4a69:	jne	0x4990


0x4b60:	mov	rdi, r13
0x4b63:	call	0xb640


0x126a1:	mov	edx, dword ptr [rax]
0x126a3:	mov	edi, ebp
0x126a5:	xor	eax, eax
0x126a7:	call	0x2820


0x125cf:	jg	0x125e0


0x12689:	jg	0x12690


0x12628:	cmp	esi, 0x402
0x1262e:	je	0x12690


0x1266e:	cmp	esi, 0x40a
0x12674:	jne	0x12638


0x1041a:	test	ebx, ebx
0x1041c:	mov	rdx, r13
0x1041f:	js	0x105f8


0x105f8:	mov	rsi, r12
0x105fb:	mov	edi, 0xffffff9c
0x10600:	call	0x2df0


0x10425:	xor	esi, esi
0x10427:	mov	edi, ebx
0x10429:	call	0x2df0


0x10548:	lea	rsi, [rsp + 8]
0x1054d:	lea	rdi, [rsp + 0x70]
0x10552:	xor	ebp, ebp
0x10554:	call	0x10150


0x10660:	mov	rsi, r12
0x10663:	mov	edi, 1
0x10668:	call	0x2ba0


0x10523:	mov	esi, ebx
0x10525:	mov	edi, 1
0x1052a:	call	0x2bf0


0x2bf0:	jmp	qword ptr [rip + 0x2172c2]


0x2d30:	jmp	qword ptr [rip + 0x217222]


0xbdd9:	ucomiss	xmm0, xmm1
0xbddc:	ja	0xbde5


0x9c55:	lea	rcx, [rip + 0xb414]
0x9c5c:	lea	rsi, [rip + 0xb3e4]
0x9c63:	lea	rdi, [rip + 0xb0b6]
0x9c6a:	mov	edx, 0xb8d
0x9c6f:	call	0x29e0


0x5bf7:	cmp	r15d, 0x11
0x5bfb:	je	0x6560


0x5e00:	xor	r9d, r9d
0x5e03:	mov	qword ptr [rbp - 0x350], 0
0x5e0e:	test	r13b, r13b
0x5e11:	je	0x5ed0


0x5bbb:	mov	rsi, qword ptr [rbp - 0x310]
0x5bc2:	mov	rdx, r10
0x5bc5:	call	0xb730


0x5baf:	mov	r11d, dword ptr [rbx]
0x5bb2:	test	r11d, r11d
0x5bb5:	je	0x64c8


0x4895:	mov	rsi, rbx
0x4898:	mov	rdi, r12
0x489b:	call	0x2af0


0x4a6f:	call	0xb590


0x4990:	call	0x2900


0x125d1:	cmp	esi, 1
0x125d4:	jne	0x12638


0x1268b:	cmp	esi, 8
0x1268e:	jne	0x12638


0x12630:	cmp	esi, 0x400
0x12636:	je	0x12690


0x12676:	jmp	0x125e0


0x12638:	mov	eax, dword ptr [rsp]
0x1263b:	cmp	eax, 0x2f
0x1263e:	ja	0x1277a


0x2df0:	jmp	qword ptr [rip + 0x2171c2]






0x6560:	cmp	dword ptr [rbx + 8], 2
0x6564:	jne	0x5c01


0x5c01:	mov	eax, dword ptr [rbp - 0x314]
0x5c07:	and	eax, 0xf000
0x5c0c:	cmp	eax, 0x8000
0x5c11:	je	0x6500


0x5ed0:	cmp	byte ptr [rbx + 0x2e], 0
0x5ed4:	je	0x5ee0


0x5e17:	cmp	qword ptr [rbx + 0x40], 0
0x5e1c:	je	0x5ed0


0x64c8:	mov	rsi, qword ptr [rbp - 0x310]
0x64cf:	mov	rdx, r10
0x64d2:	mov	qword ptr [rbp - 0x328], r10
0x64d9:	call	0xb7c0


0x12644:	add	rax, qword ptr [rsp + 0x10]
0x12649:	mov	rdx, qword ptr [rax]
0x1264c:	mov	edi, ebp
0x1264e:	xor	eax, eax
0x12650:	call	0x2820


0x1277a:	mov	rax, qword ptr [rsp + 8]
0x1277f:	jmp	0x12649




0x656a:	xor	r8d, r8d
0x656d:	xor	r9d, r9d
0x6570:	jmp	0x5c9f


0x6500:	movzx	r9d, byte ptr [rbx + 0x18]
0x6505:	mov	r8d, 0x100
0x650b:	test	r9b, r9b
0x650e:	jne	0x5c41


0x5c17:	cmp	eax, 0xa000
0x5c1c:	mov	r8d, 0x100
0x5c22:	sete	r9b
0x5c26:	cmp	eax, 0x4000
0x5c2b:	sete	al
0x5c2e:	or	r9d, eax
0x5c31:	movzx	eax, byte ptr [rbx + 0x14]
0x5c35:	xor	eax, 1
0x5c38:	or	r9b, al
0x5c3b:	je	0x6500


0x5ee0:	test	r15d, r15d
0x5ee3:	je	0x6280


0x5ed6:	cmp	byte ptr [rbx + 0x18], 0
0x5eda:	je	0x6490


0x5e22:	movzx	r12d, byte ptr [rbx + 0x18]
0x5e27:	test	r12b, r12b
0x5e2a:	jne	0x5ed0


0x12649:	mov	rdx, qword ptr [rax]
0x1264c:	mov	edi, ebp
0x1264e:	xor	eax, eax
0x12650:	call	0x2820


0x5c9f:	cmp	byte ptr [rbx + 0x2d], 0
0x5ca3:	je	0x66a0


0x6514:	movzx	r9d, byte ptr [rbx + 0x2c]
0x6519:	test	r9b, r9b
0x651c:	jne	0x5c41


0x5c41:	lea	r12, [rbp - 0x1f0]
0x5c48:	mov	rdx, qword ptr [rbp - 0x308]
0x5c4f:	mov	esi, 0xffffff9c
0x5c54:	mov	edi, 1
0x5c59:	mov	byte ptr [rbp - 0x350], r9b
0x5c60:	mov	rcx, r12
0x5c63:	call	0x2980


0x6280:	cmp	byte ptr [rbx + 0x18], 0
0x6284:	je	0x5f1b


0x5ee9:	cmp	byte ptr [rbx + 0x2a], 0
0x5eed:	je	0x5f05


0x6490:	mov	eax, dword ptr [rbp - 0x314]
0x6496:	and	eax, 0xf000
0x649b:	cmp	eax, 0x4000
0x64a0:	je	0x5ee0


0x5e30:	mov	edx, dword ptr [rbx]
0x5e32:	test	edx, edx
0x5e34:	jne	0x6ab8


0x66a0:	cmp	byte ptr [rbx + 0x18], 0
0x66a4:	jne	0x6c80


0x5ca9:	mov	eax, dword ptr [rbp - 0x314]
0x5caf:	and	eax, 0xf000
0x5cb4:	cmp	eax, 0x4000
0x5cb9:	je	0x70e0


0x6522:	movzx	r9d, byte ptr [rbx + 0x17]
0x6527:	test	r9b, r9b
0x652a:	jne	0x5c41


0x2980:	jmp	qword ptr [rip + 0x2173fa]


0x5f1b:	movzx	eax, r14b
0x5f1f:	mov	qword ptr [rbp - 0x358], 0
0x5f2a:	mov	dword ptr [rbp - 0x320], eax
0x5f30:	mov	r12d, dword ptr [rbp - 0x314]
0x5f37:	and	r12d, 0xfff
0x5f3e:	cmp	byte ptr [rbx + 0x2b], 0
0x5f42:	je	0x5f4f


0x628a:	cmp	byte ptr [rbx + 0x2e], 0
0x628e:	jne	0x6e10


0x5f05:	movzx	eax, byte ptr [rbx + 0x18]
0x5f09:	test	al, al
0x5f0b:	jne	0x63b0


0x5eef:	mov	eax, dword ptr [rbp - 0x314]
0x5ef5:	and	eax, 0xf000
0x5efa:	cmp	eax, 0x4000
0x5eff:	je	0x6ad0


0x64a6:	mov	rdx, qword ptr [rbp - 0x350]
0x64ad:	mov	rsi, qword ptr [rbp - 0x308]
0x64b4:	mov	rdi, qword ptr [rbp - 0x310]
0x64bb:	call	0x4e30


0x5e3a:	test	r9b, r9b
0x5e3d:	lea	rdx, [rbp - 0x1f0]
0x5e44:	je	0x76c0


0x6ab8:	cmp	byte ptr [rbx + 0x2e], 0
0x6abc:	jne	0x6490


0x66aa:	mov	eax, dword ptr [rbp - 0x314]
0x66b0:	and	eax, 0xf000
0x66b5:	cmp	eax, 0x4000
0x66ba:	je	0x6710


0x6c80:	mov	eax, dword ptr [rbx + 8]
0x6c83:	cmp	eax, 2
0x6c86:	je	0x6d04


0x70e0:	cmp	byte ptr [rbx + 0x18], 0
0x70e4:	je	0x6710


0x5cbf:	xor	ecx, ecx
0x5cc1:	cmp	byte ptr [rbx + 0x1f], 0
0x5cc5:	je	0x5ce5


0x6530:	mov	r10d, dword ptr [rbx]
0x6533:	mov	r9d, 1
0x6539:	test	r10d, r10d
0x653c:	jne	0x5c41




0x5f4f:	cmp	byte ptr [rbx + 0x1d], 0
0x5f53:	jne	0x6578


0x5f44:	mov	r12d, dword ptr [rbx + 0x10]
0x5f48:	and	r12d, 0xfff
0x5f4f:	cmp	byte ptr [rbx + 0x1d], 0
0x5f53:	jne	0x6578


0x6294:	cmp	byte ptr [rbx + 0x21], 0
0x6298:	jne	0x6df0


0x6e10:	lea	rsi, [rip + 0xe063]
0x6e17:	mov	edx, 5
0x6e1c:	xor	edi, edi
0x6e1e:	call	0x28e0


0x5f11:	cmp	byte ptr [rbx + 0x22], 0
0x5f15:	jne	0x7af0


0x63b0:	cmp	qword ptr [rbp - 0x270], 1
0x63b8:	je	0x73e8


0x6ad0:	test	r13b, r13b
0x6ad3:	mov	rdx, qword ptr [rbp - 0x280]
0x6ada:	mov	rdi, qword ptr [rbp - 0x278]
0x6ae1:	je	0x7390


0x76c0:	lea	rcx, [rbp - 0xd0]
0x76c7:	mov	rsi, qword ptr [rbp - 0x308]
0x76ce:	mov	edi, 1
0x76d3:	mov	rdx, rcx
0x76d6:	mov	qword ptr [rbp - 0x358], rcx
0x76dd:	call	0x2910


0x5e4a:	mov	eax, dword ptr [rdx + 0x18]
0x5e4d:	and	eax, 0xf000
0x5e52:	cmp	eax, 0xa000
0x5e57:	jne	0x5ed0


0x6ac2:	test	r15d, r15d
0x6ac5:	je	0x5f1b


0x6710:	test	r14b, r14b
0x6713:	jne	0x62c0


0x66bc:	mov	eax, dword ptr [rbx + 8]
0x66bf:	cmp	eax, 2
0x66c2:	je	0x62c0


0x6d04:	cmp	qword ptr [rbp - 0x320], 0
0x6d0c:	je	0x62c0


0x6c88:	cmp	eax, 3
0x6c8b:	je	0x6cd8


0x70ea:	jmp	0x6c80


0x5ce5:	lea	r10, [rbp - 0x280]
0x5cec:	mov	rdi, qword ptr [rbp - 0x308]
0x5cf3:	lea	rsi, [rbp - 0x1f0]
0x5cfa:	mov	byte ptr [rbp - 0x358], r9b
0x5d01:	mov	byte ptr [rbp - 0x350], r8b
0x5d08:	mov	rdx, r10
0x5d0b:	call	0x10130


0x5cc7:	cmp	byte ptr [rbx + 0x18], 0
0x5ccb:	mov	ecx, 1
0x5cd0:	je	0x5ce5


0x6542:	movzx	r9d, byte ptr [rbx + 0x15]
0x6547:	xor	r8d, r8d
0x654a:	test	r9b, r9b
0x654d:	setne	r8b
0x6551:	shl	r8d, 8
0x6555:	jmp	0x5c41


0x5f59:	mov	r15d, dword ptr [rbp - 0x314]
0x5f60:	and	r15d, 0xf000
0x5f67:	cmp	r15d, 0x4000
0x5f6e:	je	0x6db0


0x6578:	mov	ecx, dword ptr [rbp - 0x320]
0x657e:	mov	edx, dword ptr [rbp - 0x314]
0x6584:	mov	r8, rbx
0x6587:	mov	rsi, qword ptr [rbp - 0x308]
0x658e:	mov	rdi, qword ptr [rbp - 0x310]
0x6595:	call	0x5620


0x629e:	mov	rax, qword ptr [rbp - 0x320]
0x62a5:	test	rax, rax
0x62a8:	je	0x62ad


0x6df0:	mov	rdi, qword ptr [rbp - 0x308]
0x6df7:	mov	rcx, rbx
0x6dfa:	mov	edx, 1
0x6dff:	xor	esi, esi
0x6e01:	call	0x56f0


0x7af0:	cmp	byte ptr [rbx + 0x17], 0
0x7af4:	je	0x6b98


0x73e8:	mov	rsi, qword ptr [rbp - 0x280]
0x73ef:	mov	rdi, qword ptr [rbp - 0x278]
0x73f6:	call	0x9dc0


0x63be:	cmp	byte ptr [rbx + 0x22], 0
0x63c2:	mov	qword ptr [rbp - 0x358], 0
0x63cd:	je	0x63d9


0x7390:	mov	rsi, rdx
0x7393:	call	0x9dc0


0x6ae7:	mov	rsi, rdi
0x6aea:	mov	rdi, qword ptr [rbp - 0x308]
0x6af1:	call	0x9e20


0x5e59:	mov	rdi, qword ptr [rbx + 0x40]
0x5e5d:	mov	rsi, qword ptr [rbp - 0x308]
0x5e64:	call	0xb7c0


0x6acb:	jmp	0x5ee9


0x6719:	mov	eax, dword ptr [rbp - 0x1d8]
0x671f:	mov	r12d, dword ptr [rbp - 0x314]
0x6726:	mov	edx, eax
0x6728:	and	r12d, 0xf000
0x672f:	and	edx, 0xf000
0x6735:	cmp	edx, 0x4000
0x673b:	je	0x6d50


0x62c0:	mov	r12d, 1
0x62c6:	mov	rsi, qword ptr [rbp - 0x38]
0x62ca:	xor	rsi, qword ptr fs:[0x28]
0x62d3:	mov	eax, r12d
0x62d6:	jne	0x8fa4


0x66c8:	cmp	eax, 3
0x66cb:	jne	0x6710


0x6d12:	mov	rax, qword ptr [rbp - 0x320]
0x6d19:	mov	byte ptr [rax], 1
0x6d1c:	jmp	0x62c0


0x6cd8:	mov	rsi, qword ptr [rbp - 0x308]
0x6cdf:	lea	rdx, [rbp - 0x1d8]
0x6ce6:	mov	rdi, rbx
0x6ce9:	mov	byte ptr [rbp - 0x358], r9b
0x6cf0:	mov	byte ptr [rbp - 0x350], r8b
0x6cf7:	call	0x5000


0x6c8d:	cmp	eax, 4
0x6c90:	jne	0x6710


0x5cd2:	xor	ecx, ecx
0x5cd4:	mov	rax, qword ptr [rbp - 0x280]
0x5cdb:	cmp	qword ptr [rbp - 0x1f0], rax
0x5ce2:	setne	cl
0x5ce5:	lea	r10, [rbp - 0x280]
0x5cec:	mov	rdi, qword ptr [rbp - 0x308]
0x5cf3:	lea	rsi, [rbp - 0x1f0]
0x5cfa:	mov	byte ptr [rbp - 0x358], r9b
0x5d01:	mov	byte ptr [rbp - 0x350], r8b
0x5d08:	mov	rdx, r10
0x5d0b:	call	0x10130


0x6db0:	mov	ecx, dword ptr [rbp - 0x320]
0x6db6:	mov	edx, dword ptr [rbp - 0x314]
0x6dbc:	mov	r8, rbx
0x6dbf:	mov	rsi, qword ptr [rbp - 0x308]
0x6dc6:	mov	rdi, qword ptr [rbp - 0x310]
0x6dcd:	call	0x5620


0x5f74:	mov	ecx, dword ptr [rbp - 0x320]
0x5f7a:	mov	edx, dword ptr [rbp - 0x314]
0x5f80:	mov	r8, rbx
0x5f83:	mov	rsi, qword ptr [rbp - 0x308]
0x5f8a:	mov	rdi, qword ptr [rbp - 0x310]
0x5f91:	call	0x5620


0x62ad:	test	r13b, r13b
0x62b0:	je	0x62c0


0x62aa:	mov	byte ptr [rax], 1
0x62ad:	test	r13b, r13b
0x62b0:	je	0x62c0


0x6b98:	cmp	qword ptr [rbp - 0x270], 1
0x6ba0:	ja	0x6f88


0x7afa:	mov	qword ptr [rbp - 0x358], 0
0x7b05:	jmp	0x6bd3


0x63d9:	cmp	r15d, 0x11
0x63dd:	jne	0x640b


0x63cf:	cmp	byte ptr [rbx + 0x17], 0
0x63d3:	je	0x6b98


0x6d50:	cmp	r12d, 0x4000
0x6d57:	je	0x7270


0x6741:	cmp	r12d, 0x4000
0x6748:	je	0x79e8


0x62dc:	lea	rsp, [rbp - 0x28]
0x62e0:	pop	rbx
0x62e1:	pop	r12
0x62e3:	pop	r13
0x62e5:	pop	r14
0x62e7:	pop	r15
0x62e9:	pop	rbp
0x62ea:	ret	


0x8fa4:	call	0x2930


0x66cd:	mov	rsi, qword ptr [rbp - 0x308]
0x66d4:	lea	rdx, [rbp - 0x1d8]
0x66db:	mov	rdi, rbx
0x66de:	mov	byte ptr [rbp - 0x358], r9b
0x66e5:	mov	byte ptr [rbp - 0x350], r8b
0x66ec:	call	0x5000


0x6c96:	cmp	byte ptr [rbx + 0x2f], 0
0x6c9a:	je	0x6710


0x62b2:	cmp	byte ptr [rbx + 0x31], 0
0x62b6:	je	0x6d28


0x6ba6:	test	r13b, r13b
0x6ba9:	mov	edx, dword ptr [rbx + 4]
0x6bac:	je	0x6bb7


0x6f88:	mov	rdx, qword ptr [rbp - 0x280]
0x6f8f:	mov	rsi, qword ptr [rbp - 0x278]
0x6f96:	mov	rdi, qword ptr [rbp - 0x308]
0x6f9d:	call	0x9e20


0x6bd3:	movzx	eax, r14b
0x6bd7:	mov	dword ptr [rbp - 0x320], eax
0x6bdd:	jmp	0x5f30


0x63df:	mov	rsi, qword ptr [rbp - 0x308]
0x63e6:	mov	rdi, qword ptr [rbp - 0x310]
0x63ed:	call	0x2d10


0x640b:	cmp	r15d, 0x16
0x640f:	je	0x7430


0x7270:	mov	r15d, dword ptr [rbx]
0x7273:	movzx	eax, byte ptr [rbx + 0x18]
0x7277:	test	al, al
0x7279:	jne	0x7c30


0x6d5d:	cmp	byte ptr [rbx + 0x18], 0
0x6d61:	je	0x6d6f


0x79e8:	cmp	byte ptr [rbx + 0x18], 0
0x79ec:	je	0x7dfb


0x674e:	test	r13b, r13b
0x6751:	mov	r15d, dword ptr [rbx]
0x6754:	je	0x7273


0x6ca0:	mov	esi, dword ptr [rbp - 0x1d8]
0x6ca6:	mov	rdi, qword ptr [rbp - 0x308]
0x6cad:	mov	byte ptr [rbp - 0x358], r9b
0x6cb4:	mov	byte ptr [rbp - 0x350], r8b
0x6cbb:	call	0x4cf0


0x6d28:	mov	rdi, qword ptr [rbx + 0x40]
0x6d2c:	mov	rsi, qword ptr [rbp - 0x308]
0x6d33:	lea	rdx, [rbp - 0x280]
0x6d3a:	mov	r12d, r13d
0x6d3d:	call	0xb730


0x6bb7:	cmp	edx, 4
0x6bba:	mov	qword ptr [rbp - 0x358], 0
0x6bc5:	je	0x6f88


0x6bae:	cmp	edx, 3
0x6bb1:	je	0x6f88


0x5f30:	mov	r12d, dword ptr [rbp - 0x314]
0x5f37:	and	r12d, 0xfff
0x5f3e:	cmp	byte ptr [rbx + 0x2b], 0
0x5f42:	je	0x5f4f


0x2d10:	jmp	qword ptr [rip + 0x217232]


0x7430:	mov	rdx, qword ptr [rip + 0x213131]
0x7437:	mov	esi, 4
0x743c:	mov	edi, 1
0x7441:	call	0xe990


0x6415:	cmp	r15d, 0x12
0x6419:	jne	0x6be8


0x727f:	test	r15d, r15d
0x7282:	jne	0x676e


0x7c30:	mov	eax, dword ptr [rbp - 0x268]
0x7c36:	and	eax, 0xf000
0x7c3b:	cmp	eax, 0x4000
0x7c40:	je	0x7fd0


0x6d6f:	mov	rsi, qword ptr [rbp - 0x308]
0x6d76:	mov	edi, 4
0x6d7b:	xor	r12d, r12d
0x6d7e:	call	0xeab0


0x6d63:	mov	r15d, dword ptr [rbx]
0x6d66:	test	r15d, r15d
0x6d69:	jne	0x7a07


0x7dfb:	mov	rdx, qword ptr [rbp - 0x310]
0x7e02:	mov	esi, 4
0x7e07:	mov	edi, 1
0x7e0c:	call	0xe990


0x79f2:	mov	r15d, dword ptr [rbx]
0x79f5:	test	r15d, r15d
0x79f8:	je	0x7dfb


0x7273:	movzx	eax, byte ptr [rbx + 0x18]
0x7277:	test	al, al
0x7279:	jne	0x7c30


0x675a:	cmp	r15d, 3
0x675e:	jne	0x7210


0x6bcb:	test	al, al
0x6bcd:	jne	0x63d9




0x641f:	mov	r12d, dword ptr [rbp - 0x314]
0x6426:	mov	rdi, qword ptr [rbp - 0x308]
0x642d:	and	r12d, 0xf000
0x6434:	cmp	r12d, 0x4000
0x643b:	je	0x74a0


0x6be8:	mov	rdx, qword ptr [rbp - 0x308]
0x6bef:	mov	esi, 4
0x6bf4:	mov	edi, 1
0x6bf9:	call	0xe990


0x7288:	mov	edx, dword ptr [rbp - 0x1d8]
0x728e:	and	edx, 0xf000
0x7294:	cmp	edx, 0x4000
0x729a:	sete	r12b
0x729e:	or	r12b, al
0x72a1:	je	0x7e3b


0x676e:	mov	rdi, qword ptr [rbp - 0x310]
0x6775:	mov	byte ptr [rbp - 0x358], r9b
0x677c:	mov	byte ptr [rbp - 0x350], r8b
0x6783:	call	0xb590


0x7fd0:	mov	eax, dword ptr [rbp - 0x1d8]
0x7fd6:	and	eax, 0xf000
0x7fdb:	cmp	eax, 0x4000
0x7fe0:	je	0x7c46


0x7c46:	test	r15d, r15d
0x7c49:	je	0x72a7


0x7a07:	mov	edx, dword ptr [rbp - 0x268]
0x7a0d:	and	edx, 0xf000
0x7a13:	cmp	edx, 0x4000
0x7a19:	je	0x7fd6


0x79fe:	test	r13b, r13b
0x7a01:	jne	0x675a


0x6764:	cmp	byte ptr [rbx + 0x18], 0
0x6768:	jne	0x7a07


0x7210:	mov	rdi, qword ptr [rbx + 0x40]
0x7214:	mov	rsi, qword ptr [rbp - 0x308]
0x721b:	lea	rdx, [rbp - 0x1f0]
0x7222:	mov	byte ptr [rbp - 0x358], r9b
0x7229:	mov	byte ptr [rbp - 0x350], r8b
0x7230:	call	0xb7c0


0x74a0:	call	0x28d0


0x6441:	call	0x2780


0x7e3b:	cmp	byte ptr [rbx + 0x15], 0
0x7e3f:	jne	0x7e59


0x72a7:	mov	r14d, r8d
0x72aa:	mov	r15d, 0x11
0x72b0:	mov	qword ptr [rbp - 0x350], 0
0x72bb:	jmp	0x5e0e


0x7fe6:	test	r15d, r15d
0x7fe9:	jne	0x7a1f


0x7c4f:	jmp	0x7a1f


0x7fd6:	and	eax, 0xf000
0x7fdb:	cmp	eax, 0x4000
0x7fe0:	je	0x7c46


0x7a1f:	mov	rdi, qword ptr [rbp - 0x310]
0x7a26:	mov	byte ptr [rbp - 0x358], r9b
0x7a2d:	mov	byte ptr [rbp - 0x350], r8b
0x7a34:	call	0xb590


0x28d0:	jmp	qword ptr [rip + 0x217452]


0x2780:	jmp	qword ptr [rip + 0x2174fa]


0x7e41:	cmp	byte ptr [rbx + 0x22], 0
0x7e45:	je	0x8226


0x7e59:	mov	r14, qword ptr [rbp - 0x308]
0x7e60:	mov	byte ptr [rbp - 0x350], r9b
0x7e67:	mov	rdi, r14
0x7e6a:	call	0x2780


0x5e0e:	test	r13b, r13b
0x5e11:	je	0x5ed0


0x7fef:	mov	rdx, qword ptr [rbp - 0x308]
0x7ff6:	mov	esi, 3
0x7ffb:	xor	edi, edi
0x7ffd:	call	0xebb0






0x8226:	cmp	dword ptr [rbx + 4], 2
0x822a:	jne	0x72a7


0x7e4b:	cmp	qword ptr [rbp - 0x1e0], 1
0x7e53:	jbe	0x8226


0x8230:	mov	eax, dword ptr [rbp - 0x268]
0x8236:	and	eax, 0xf000
0x823b:	cmp	eax, 0x8000
0x8240:	jne	0x7e59


0x8246:	jmp	0x72a7


0x5f96:	test	al, al
0x5f98:	mov	dword ptr [rbp - 0x35c], 0
0x5fa2:	je	0x5d90


0x5d90:	xor	r12d, r12d
0x5d93:	jmp	0x62c6


0x5fa8:	movzx	eax, byte ptr [rbx + 0x2c]
0x5fac:	test	al, al
0x5fae:	mov	byte ptr [rbp - 0x320], al
0x5fb4:	jne	0x6940


0x62c6:	mov	rsi, qword ptr [rbp - 0x38]
0x62ca:	xor	rsi, qword ptr fs:[0x28]
0x62d3:	mov	eax, r12d
0x62d6:	jne	0x8fa4


0x5fba:	cmp	byte ptr [rbx + 0x17], 0
0x5fbe:	je	0x7308


0x6940:	mov	rax, qword ptr [rbp - 0x310]
0x6947:	cmp	byte ptr [rax], 0x2f
0x694a:	je	0x6984


0x7308:	cmp	r15d, 0x8000
0x730f:	je	0x7b10


0x5fc4:	cmp	byte ptr [rbx + 0x16], 0
0x5fc8:	mov	edx, 1
0x5fcd:	jne	0x5fd8


0x6984:	movzx	ecx, byte ptr [rbx + 0x16]
0x6988:	mov	rdx, qword ptr [rbp - 0x308]
0x698f:	mov	r8d, 0xffffffff
0x6995:	mov	rdi, qword ptr [rbp - 0x310]
0x699c:	mov	esi, 0xffffff9c
0x69a1:	call	0xa440


0x694c:	mov	rdi, qword ptr [rbp - 0x308]
0x6953:	call	0xb4b0


0x7b10:	mov	eax, dword ptr [rbp - 0x268]
0x7b16:	xor	esi, esi
0x7b18:	cmp	dword ptr [rbx + 4], 2
0x7b1c:	mov	rdi, qword ptr [rbp - 0x310]
0x7b23:	mov	dword ptr [rbp - 0x340], eax
0x7b29:	movzx	eax, byte ptr [rbx + 0x23]
0x7b2d:	sete	sil
0x7b31:	shl	esi, 0x11
0x7b34:	mov	byte ptr [rbp - 0x338], al
0x7b3a:	xor	eax, eax
0x7b3c:	call	0xb6c0


0x7315:	cmp	r15d, 0xa000
0x731c:	setne	r8b
0x7320:	and	r8b, byte ptr [rbx + 0x14]
0x7324:	jne	0x7b10


0x5fcf:	xor	edx, edx
0x5fd1:	cmp	dword ptr [rbx + 8], 3
0x5fd5:	sete	dl
0x5fd8:	mov	r8d, dword ptr [rbp - 0x328]
0x5fdf:	mov	rsi, qword ptr [rbp - 0x308]
0x5fe6:	xor	ecx, ecx
0x5fe8:	mov	rdi, qword ptr [rbp - 0x310]
0x5fef:	call	0x4ef0


0x5fd8:	mov	r8d, dword ptr [rbp - 0x328]
0x5fdf:	mov	rsi, qword ptr [rbp - 0x308]
0x5fe6:	xor	ecx, ecx
0x5fe8:	mov	rdi, qword ptr [rbp - 0x310]
0x5fef:	call	0x4ef0


0x732a:	cmp	r15d, 0x1000
0x7331:	je	0x83f2


0x83f2:	mov	r12d, dword ptr [rbp - 0x35c]
0x83f9:	mov	rsi, qword ptr [rbp - 0x308]
0x8400:	lea	rcx, [rbp - 0x2f8]
0x8407:	xor	edi, edi
0x8409:	mov	byte ptr [rbp - 0x320], r8b
0x8410:	mov	qword ptr [rbp - 0x2f8], 0
0x841b:	not	r12d
0x841e:	and	r12d, dword ptr [rbp - 0x314]
0x8425:	mov	edx, r12d
0x8428:	call	0x2b70


0x7337:	mov	eax, r15d
0x733a:	and	ah, 0xbf
0x733d:	cmp	eax, 0x2000
0x7342:	je	0x802c


0x2b70:	jmp	qword ptr [rip + 0x217302]


0x802c:	mov	edx, dword ptr [rbp - 0x35c]
0x8032:	mov	rax, qword ptr [rbp - 0x258]
0x8039:	lea	rcx, [rbp - 0x2f0]
0x8040:	mov	rsi, qword ptr [rbp - 0x308]
0x8047:	xor	edi, edi
0x8049:	mov	byte ptr [rbp - 0x328], r8b
0x8050:	not	edx
0x8052:	and	edx, dword ptr [rbp - 0x314]
0x8058:	mov	qword ptr [rbp - 0x2f0], rax
0x805f:	call	0x2b70


0x7348:	cmp	r15d, 0xc000
0x734f:	je	0x802c




0x7355:	cmp	r15d, 0xa000
0x735c:	je	0x86e0


0x86e0:	mov	rsi, qword ptr [rbp - 0x250]
0x86e7:	mov	rdi, qword ptr [rbp - 0x310]
0x86ee:	call	0xa680


0x7362:	mov	rsi, qword ptr [rbp - 0x310]
0x7369:	mov	edi, 4
0x736e:	call	0xeab0


0x69a6:	xor	r8d, r8d
0x69a9:	test	eax, eax
0x69ab:	mov	r12d, eax
0x69ae:	jle	0x5fff


0x5fff:	cmp	r15d, 0x4000
0x6006:	setne	r15b
0x600a:	test	r14b, r14b
0x600d:	jne	0x6022


0x69b4:	mov	rdx, qword ptr [rbp - 0x310]
0x69bb:	mov	esi, 4
0x69c0:	mov	edi, 1
0x69c5:	call	0xe990


0x600f:	movzx	eax, byte ptr [rbx + 0x14]
0x6013:	xor	eax, 1
0x6016:	and	al, r15b
0x6019:	mov	r12d, eax
0x601c:	jne	0x7d50


0x6022:	test	r13b, r13b
0x6025:	mov	r12d, 1
0x602b:	je	0x6082


0x7d50:	mov	r15d, eax
0x7d53:	movabs	rax, 0xff000000ff00
0x7d5d:	test	qword ptr [rbx + 0x20], rax
0x7d61:	je	0x6022


0x6082:	cmp	byte ptr [rbx + 0x17], 0
0x6086:	je	0x6091


0x602d:	mov	byte ptr [rbp - 0x330], 0
0x6034:	cmp	qword ptr [rbx + 0x40], 0
0x6039:	je	0x606d


0x7d67:	movzx	esi, byte ptr [rbx + 0x25]
0x7d6b:	mov	rdi, qword ptr [rbp - 0x308]
0x7d72:	xor	edx, edx
0x7d74:	mov	rcx, rbx
0x7d77:	mov	byte ptr [rbp - 0x328], r8b
0x7d7e:	call	0x56f0


0x6091:	test	r8b, r8b
0x6094:	jne	0x62c6


0x6088:	test	r15b, r15b
0x608b:	jne	0x62c6


0x606d:	movzx	eax, byte ptr [rbp - 0x330]
0x6074:	movzx	r12d, byte ptr [rbp - 0x315]
0x607c:	mov	byte ptr [rbp - 0x315], al
0x6082:	cmp	byte ptr [rbx + 0x17], 0
0x6086:	je	0x6091


0x603b:	lea	r12, [rbp - 0xd0]
0x6042:	mov	rsi, qword ptr [rbp - 0x308]
0x6049:	mov	edi, 1
0x604e:	mov	byte ptr [rbp - 0x328], r8b
0x6055:	mov	rdx, r12
0x6058:	call	0x2910


0x609a:	cmp	byte ptr [rbx + 0x1f], 0
0x609e:	je	0x6158


0x6158:	cmp	byte ptr [rbp - 0x320], 0
0x615f:	jne	0x62c6


0x60a4:	mov	rax, qword ptr [rbp - 0x238]
0x60ab:	cmp	byte ptr [rbp - 0x320], 0
0x60b2:	lea	rsi, [rbp - 0xd0]
0x60b9:	mov	rdi, qword ptr [rbp - 0x308]
0x60c0:	mov	qword ptr [rbp - 0xd0], rax
0x60c7:	mov	rax, qword ptr [rbp - 0x230]
0x60ce:	mov	qword ptr [rbp - 0xc8], rax
0x60d5:	mov	rax, qword ptr [rbp - 0x228]
0x60dc:	mov	qword ptr [rbp - 0xc0], rax
0x60e3:	mov	rax, qword ptr [rbp - 0x220]
0x60ea:	mov	qword ptr [rbp - 0xb8], rax
0x60f1:	je	0x80a0


0x6165:	cmp	byte ptr [rbx + 0x1d], 0
0x6169:	je	0x61c7


0x80a0:	call	0x10750


0x60f7:	call	0x10760


0x61c7:	movabs	rax, 0xff0000000000ff
0x61d1:	test	qword ptr [rbx + 0x18], rax
0x61d5:	jne	0x8270


0x616b:	test	r14b, r14b
0x616e:	jne	0x6182


0x61db:	cmp	byte ptr [rbx + 0x2b], 0
0x61df:	jne	0x85d5


0x8270:	mov	r8d, dword ptr [rbp - 0x314]
0x8277:	mov	rdx, qword ptr [rbp - 0x308]
0x827e:	mov	ecx, 0xffffffff
0x8283:	mov	rdi, qword ptr [rbp - 0x310]
0x828a:	mov	esi, ecx
0x828c:	call	0xa5a0


0x6170:	mov	eax, dword ptr [rbp - 0x1d4]
0x6176:	cmp	dword ptr [rbp - 0x264], eax
0x617c:	je	0x882a


0x6182:	mov	rsi, qword ptr [rbp - 0x308]
0x6189:	lea	rcx, [rbp - 0x280]
0x6190:	lea	r9, [rbp - 0x1f0]
0x6197:	movzx	r8d, r14b
0x619b:	mov	edx, 0xffffffff
0x61a0:	mov	rdi, rbx
0x61a3:	call	0x5840


0x61e5:	test	byte ptr [rbx + 0x20], r14b
0x61e9:	jne	0x8889


0x85d5:	mov	edx, dword ptr [rbx + 0x10]
0x85d8:	mov	rdi, qword ptr [rbp - 0x308]
0x85df:	mov	esi, 0xffffffff
0x85e4:	call	0xa630


0x882a:	mov	eax, dword ptr [rbp - 0x1d0]
0x8830:	cmp	dword ptr [rbp - 0x260], eax
0x8836:	jne	0x6182


0x61ef:	mov	eax, dword ptr [rbp - 0x35c]
0x61f5:	test	eax, eax
0x61f7:	jne	0x8841


0x8889:	mov	eax, dword ptr [rbp - 0x314]
0x888f:	mov	edx, 0x1b6
0x8894:	mov	ebx, 0x1ff
0x8899:	and	eax, 0x7000
0x889e:	cmp	eax, 0x4000
0x88a3:	cmovne	ebx, edx
0x88a6:	call	0x5a50


0x883c:	jmp	0x61c7


0x61fd:	cmp	byte ptr [rbp - 0x315], 0
0x6204:	je	0x62c6


0x8841:	call	0x5a50


0x620a:	mov	esi, dword ptr [rbp - 0x38c]
0x6210:	or	esi, dword ptr [rbp - 0x35c]
0x6216:	mov	rdi, qword ptr [rbp - 0x308]
0x621d:	call	0x2c90


0x8846:	not	eax
0x8848:	and	dword ptr [rbp - 0x35c], eax
0x884e:	je	0x61fd


0x8854:	cmp	byte ptr [rbp - 0x315], 1
0x885b:	je	0x620a


0x8861:	test	r14b, r14b
0x8864:	jne	0x91d7


0x886a:	mov	eax, dword ptr [rbp - 0x1d8]
0x8870:	mov	dword ptr [rbp - 0x38c], eax
0x8876:	not	eax
0x8878:	test	dword ptr [rbp - 0x35c], eax
0x887e:	jne	0x620a


0x91d7:	mov	rsi, qword ptr [rbp - 0x308]
0x91de:	lea	rdx, [rbp - 0x1f0]
0x91e5:	mov	edi, 1
0x91ea:	call	0x2910


0x8884:	jmp	0x62c6


0x88ab:	not	eax
0x88ad:	mov	edx, eax
0x88af:	and	edx, ebx
0x88b1:	jmp	0x85d8


0x85d8:	mov	rdi, qword ptr [rbp - 0x308]
0x85df:	mov	esi, 0xffffffff
0x85e4:	call	0xa630


0x6dd2:	test	al, al
0x6dd4:	je	0x5d90


0x6dda:	mov	eax, r12d
0x6ddd:	and	eax, 0x12
0x6de0:	mov	dword ptr [rbp - 0x35c], eax
0x6de6:	jmp	0x65c9


0x65c9:	mov	rax, qword ptr [rbp - 0x330]
0x65d0:	mov	rdx, qword ptr [rbp - 0x278]
0x65d7:	mov	rcx, qword ptr [rbp - 0x280]
0x65de:	test	rax, rax
0x65e1:	jne	0x65fc


0x65e3:	jmp	0x6ee0


0x65fc:	cmp	qword ptr [rax + 8], rdx
0x6600:	jne	0x65f0


0x6ee0:	sub	rsp, 0x30
0x6ee4:	mov	rsi, qword ptr [rbp - 0x330]
0x6eeb:	lea	rax, [rsp + 0xf]
0x6ef0:	and	rax, 0xfffffffffffffff0
0x6ef4:	test	r14b, r14b
0x6ef7:	mov	qword ptr [rbp - 0x328], rax
0x6efe:	mov	qword ptr [rax], rsi
0x6f01:	mov	qword ptr [rax + 8], rdx
0x6f05:	mov	qword ptr [rax + 0x10], rcx
0x6f09:	jne	0x6f21


0x6602:	cmp	qword ptr [rax + 0x10], rcx
0x6606:	jne	0x65f0


0x65f0:	mov	rax, qword ptr [rax]
0x65f3:	test	rax, rax
0x65f6:	je	0x6ee0


0x6f0b:	mov	eax, dword ptr [rbp - 0x1d8]
0x6f11:	and	eax, 0xf000
0x6f16:	cmp	eax, 0x4000
0x6f1b:	je	0x7f78


0x6f21:	mov	esi, dword ptr [rbp - 0x35c]
0x6f27:	mov	r15, qword ptr [rbp - 0x308]
0x6f2e:	not	esi
0x6f30:	mov	rdi, r15
0x6f33:	and	esi, r12d
0x6f36:	call	0x27e0


0x6608:	mov	rsi, qword ptr [rbp - 0x310]
0x660f:	mov	edi, 4
0x6614:	call	0xeab0


0x7f78:	movabs	rax, 0xff000000ff00
0x7f82:	test	qword ptr [rbx + 0x20], rax
0x7f86:	jne	0x8540


0x7f8c:	mov	byte ptr [rbp - 0x330], 0
0x7f93:	mov	dword ptr [rbp - 0x35c], 0
0x7f9d:	jmp	0x77c8


0x8540:	movzx	esi, byte ptr [rbx + 0x25]
0x8544:	mov	rdi, qword ptr [rbp - 0x308]
0x854b:	xor	edx, edx
0x854d:	mov	rcx, rbx
0x8550:	call	0x56f0


0x77c8:	mov	rax, qword ptr [rbp - 0x348]
0x77cf:	test	rax, rax
0x77d2:	setne	r12b
0x77d6:	and	r12b, byte ptr [rbx + 0x1c]
0x77da:	jne	0x7fbb


0x77e0:	movdqu	xmm0, xmmword ptr [rbx]
0x77e4:	mov	esi, 2
0x77e9:	mov	rdi, qword ptr [rbp - 0x310]
0x77f0:	movaps	xmmword ptr [rbp - 0x2f0], xmm0
0x77f7:	movdqu	xmm0, xmmword ptr [rbx + 0x10]
0x77fc:	movaps	xmmword ptr [rbp - 0x2e0], xmm0
0x7803:	movdqu	xmm0, xmmword ptr [rbx + 0x20]
0x7808:	movaps	xmmword ptr [rbp - 0x2d0], xmm0
0x780f:	movdqu	xmm0, xmmword ptr [rbx + 0x30]
0x7814:	movaps	xmmword ptr [rbp - 0x2c0], xmm0
0x781b:	movdqu	xmm0, xmmword ptr [rbx + 0x40]
0x7820:	movaps	xmmword ptr [rbp - 0x2b0], xmm0
0x7827:	call	0xf610


0x7fbb:	mov	rcx, qword ptr [rbp - 0x280]
0x7fc2:	cmp	qword ptr [rax], rcx
0x7fc5:	jne	0x79c3


0x7fcb:	jmp	0x77e0


0x79c3:	test	r13b, r13b
0x79c6:	jne	0x7fa2


0x79cc:	movzx	eax, byte ptr [rbp - 0x330]
0x79d3:	mov	byte ptr [rbp - 0x320], 0
0x79da:	mov	byte ptr [rbp - 0x315], al
0x79e0:	jmp	0x609a


0x7fa2:	mov	byte ptr [rbp - 0x315], r12b
0x7fa9:	xor	r15d, r15d
0x7fac:	xor	r8d, r8d
0x7faf:	mov	byte ptr [rbp - 0x320], 0
0x7fb6:	jmp	0x6034


0x6034:	cmp	qword ptr [rbx + 0x40], 0
0x6039:	je	0x606d


0x659a:	test	al, al
0x659c:	je	0x5d90


0x65a2:	mov	r15d, dword ptr [rbp - 0x314]
0x65a9:	mov	eax, r12d
0x65ac:	and	eax, 0x3f
0x65af:	mov	dword ptr [rbp - 0x35c], eax
0x65b5:	and	r15d, 0xf000
0x65bc:	cmp	r15d, 0x4000
0x65c3:	jne	0x5fa8


0x7235:	test	al, al
0x7237:	movzx	r8d, byte ptr [rbp - 0x350]
0x723f:	movzx	r9d, byte ptr [rbp - 0x358]
0x7247:	jne	0x8595


0x724d:	cmp	r12d, 0x4000
0x7254:	je	0x7270


0x8595:	mov	rdx, qword ptr [rbp - 0x310]
0x859c:	mov	esi, 4
0x85a1:	mov	edi, 1
0x85a6:	call	0xe990


0x7256:	mov	eax, dword ptr [rbp - 0x1d8]
0x725c:	mov	edx, eax
0x725e:	and	edx, 0xf000
0x7264:	cmp	edx, 0x4000
0x726a:	je	0x6d5d


0x5e69:	test	al, al
0x5e6b:	je	0x5ed0


0x5e6d:	mov	rdx, qword ptr [rbp - 0x308]
0x5e74:	mov	esi, 4
0x5e79:	mov	edi, 1
0x5e7e:	call	0xe990


0x64de:	test	al, al
0x64e0:	mov	r12d, eax
0x64e3:	jne	0x73a8


0x64e9:	mov	rdi, qword ptr [rbx + 0x48]
0x64ed:	mov	r10, qword ptr [rbp - 0x328]
0x64f4:	jmp	0x5bbb


0x73a8:	mov	rsi, qword ptr [rbp - 0x310]
0x73af:	mov	edi, 4
0x73b4:	call	0xeab0


0x6d42:	jmp	0x62c6


0x10559:	test	al, al
0x1055b:	je	0x103b5


0x10561:	jmp	0x10607


0x10607:	mov	rcx, qword ptr [rsp + 0x108]
0x1060f:	xor	rcx, qword ptr fs:[0x28]
0x10618:	mov	eax, ebp
0x1061a:	jne	0x10736


0x10620:	add	rsp, 0x110
0x10627:	pop	rbx
0x10628:	pop	rbp
0x10629:	pop	r12
0x1062b:	pop	r13
0x1062d:	pop	r14
0x1062f:	ret	


0x10736:	call	0x2930


0x9c15:	add	rsp, 0x20
0x9c19:	mov	rsi, qword ptr [rsp + 8]
0x9c1e:	xor	rsi, qword ptr fs:[0x28]
0x9c27:	jne	0x9c74


0x9c29:	add	rsp, 0x18
0x9c2d:	ret	


0x9c74:	call	0x2930


0x490e:	mov	r15d, eax
0x4911:	mov	rcx, qword ptr [rbp - 0x38]
0x4915:	xor	rcx, qword ptr fs:[0x28]
0x491e:	mov	eax, r15d
0x4921:	jne	0x4cb7


0x4927:	lea	rsp, [rbp - 0x28]
0x492b:	pop	rbx
0x492c:	pop	r12
0x492e:	pop	r13
0x4930:	pop	r14
0x4932:	pop	r15
0x4934:	pop	rbp
0x4935:	ret	


0x4cb7:	call	0x2930


0x37b8:	mov	byte ptr [rip + 0x216929], 1
0x37bf:	pop	rbp
0x37c0:	ret	


0x4d89:	cmp	rax, rbp
0x4d8c:	je	0x4d60


0x4d60:	sub	rbx, rax
0x4d63:	je	0x4d98


0x4d8e:	pop	rbx
0x4d8f:	xor	eax, eax
0x4d91:	pop	rbp
0x4d92:	pop	r12
0x4d94:	ret	


0x4d07:	test	al, al
0x4d09:	je	0x4d20


0x4d20:	mov	rdi, rbx
0x4d23:	mov	esi, 2
0x4d28:	call	0x2d40


0x4d0b:	mov	eax, 1
0x4d10:	pop	rbx
0x4d11:	ret	


0x2d40:	jmp	qword ptr [rip + 0x21721a]




0xc780:	mov	edx, 8
0xc785:	mov	rbx, rax
0xc788:	xor	ecx, ecx
0xc78a:	mov	rax, rdx
0xc78d:	mul	rbx
0xc790:	jo	0xc92f


0xc92f:	mov	ecx, 1
0xc934:	jmp	0xc796


0xc796:	test	rax, rax
0xc799:	mov	eax, 1
0xc79e:	cmovs	rcx, rax
0xc7a2:	test	rbx, rbx
0xc7a5:	je	0xc880


0xc7ab:	and	ecx, 1
0xc7ae:	jne	0xc880


0xc7b4:	cmp	qword ptr [rbp + 0x10], rbx
0xc7b8:	je	0xc8e0


0xc8e0:	mov	ebx, 1
0xc8e5:	jmp	0xc882


0xc7be:	mov	esi, 0x10
0xc7c3:	mov	rdi, rbx
0xc7c6:	call	0x2ad0


0xc882:	mov	rcx, qword ptr [rsp + 0x58]
0xc887:	xor	rcx, qword ptr fs:[0x28]
0xc890:	mov	eax, ebx
0xc892:	jne	0xc92a


0x10342:	test	eax, eax
0x10344:	mov	r13d, eax
0x10347:	js	0x10703


0x10703:	mov	ebp, 0xffffffff
0x10708:	jmp	0x10607


0x107ac:	test	eax, eax
0x107ae:	mov	ebx, eax
0x107b0:	js	0x108c0


0x108c0:	mov	ebp, 0xffffffff
0x108c5:	jmp	0x10858


0x107b6:	mov	eax, dword ptr [rip + 0x209f4c]
0x107bc:	test	eax, eax
0x107be:	js	0x107f6


0x10858:	mov	rcx, qword ptr [rsp + 0xc8]
0x10860:	xor	rcx, qword ptr fs:[0x28]
0x10869:	mov	eax, ebp
0x1086b:	jne	0x109a6


0x107f6:	test	ebx, ebx
0x107f8:	mov	dword ptr [rip + 0x209f06], 0xffffffff
0x10802:	je	0x108a5


0x107c0:	cmp	ebx, 2
0x107c3:	je	0x108f0


0x10871:	add	rsp, 0xd0
0x10878:	pop	rbx
0x10879:	pop	rbp
0x1087a:	pop	r12
0x1087c:	ret	


0x109a6:	call	0x2930


0x108a5:	lea	rdx, [rsp + 0x30]
0x108aa:	mov	rsi, r12
0x108ad:	mov	edi, 1
0x108b2:	call	0x2910


0x10808:	cmp	ebx, 3
0x1080b:	jne	0x10948


0x108f0:	lea	rdx, [rsp + 0x30]
0x108f5:	mov	rsi, r12
0x108f8:	mov	edi, 1
0x108fd:	call	0x2910


0x107c9:	mov	rdx, qword ptr [rsp + 8]
0x107ce:	mov	ecx, 0x100
0x107d3:	mov	rsi, r12
0x107d6:	mov	edi, 0xffffff9c
0x107db:	call	0x2750


0x10811:	cmp	qword ptr [rsp + 8], 0
0x10817:	je	0x10830


0x10948:	lea	rdx, [rsp + 0x30]
0x1094d:	mov	rsi, r12
0x10950:	mov	edi, 1
0x10955:	call	0x2910


0x10830:	mov	eax, dword ptr [rsp + 0x48]
0x10834:	and	eax, 0xf000
0x10839:	cmp	eax, 0xa000
0x1083e:	je	0x10996


0x10819:	lea	rsi, [rsp + 8]
0x1081e:	lea	rdi, [rsp + 0x30]
0x10823:	xor	ebp, ebp
0x10825:	call	0x10150


0x10996:	call	0x2770


0x10844:	mov	rdx, qword ptr [rsp + 8]
0x10849:	mov	rsi, r12
0x1084c:	mov	edi, 0xffffffff
0x10851:	call	0x102f0


0x10856:	mov	ebp, eax
0x10858:	mov	rcx, qword ptr [rsp + 0xc8]
0x10860:	xor	rcx, qword ptr fs:[0x28]
0x10869:	mov	eax, ebp
0x1086b:	jne	0x109a6


0x1082a:	test	al, al
0x1082c:	jne	0x10858


0x60fc:	test	eax, eax
0x60fe:	je	0x6158


0x6100:	call	0x2770


0x4f29:	test	eax, eax
0x4f2b:	mov	ebx, eax
0x4f2d:	pop	rdx
0x4f2e:	pop	rcx
0x4f2f:	jg	0x4f98


0x4f31:	shr	ebx, 0x1f
0x4f34:	and	bl, bpl
0x4f37:	jne	0x4f50


0x4f98:	mov	rdx, r13
0x4f9b:	mov	esi, 4
0x4fa0:	mov	edi, 1
0x4fa5:	call	0xe990


0x4f39:	add	rsp, 8
0x4f3d:	mov	ebx, 1
0x4f42:	mov	eax, ebx
0x4f44:	pop	rbx
0x4f45:	pop	rbp
0x4f46:	pop	r12
0x4f48:	pop	r13
0x4f4a:	ret	


0x4f50:	mov	rsi, r12
0x4f53:	mov	edi, 4
0x4f58:	call	0xeab0


0x5ff4:	test	al, al
0x5ff6:	je	0x6a10


0x6a10:	cmp	byte ptr [rbx + 0x25], 0
0x6a14:	jne	0x6b90


0x5ffc:	xor	r8d, r8d
0x5fff:	cmp	r15d, 0x4000
0x6006:	setne	r15b
0x600a:	test	r14b, r14b
0x600d:	jne	0x6022


0x6a1a:	cmp	qword ptr [rbp - 0x358], 0
0x6a22:	je	0x72c0


0x6b90:	call	0x2e36


0x72c0:	mov	rsi, qword ptr [rbp - 0x280]
0x72c7:	mov	rdi, qword ptr [rbp - 0x278]
0x72ce:	call	0x9d50


0x6a28:	mov	rax, qword ptr [rbp - 0x350]
0x6a2f:	test	rax, rax
0x6a32:	je	0x5d90


0x6a38:	mov	rsi, qword ptr [rbp - 0x308]
0x6a3f:	mov	rdi, rax
0x6a42:	call	0x2d10


0x6cc0:	test	al, al
0x6cc2:	movzx	r8d, byte ptr [rbp - 0x350]
0x6cca:	movzx	r9d, byte ptr [rbp - 0x358]
0x6cd2:	jne	0x6710


0x502f:	test	al, al
0x5031:	jne	0x50c8


0x5037:	mov	edi, dword ptr [rbp]
0x503a:	lea	r12, [rsp + 0xc]
0x503f:	mov	rsi, r12
0x5042:	call	0xb820


0x50c8:	mov	rsi, rbx
0x50cb:	mov	edi, 4
0x50d0:	call	0xeab0


0x5047:	mov	ebp, dword ptr [rbp]
0x504a:	mov	rsi, rbx
0x504d:	mov	edi, 4
0x5052:	mov	byte ptr [rsp + 0x16], 0
0x5057:	call	0xeab0


0xb2e3:	test	rax, rax
0xb2e6:	jne	0xb388


0xb2ec:	mov	rdi, rbx
0xb2ef:	call	0x11520


0xb388:	xor	esi, esi
0xb38a:	mov	rdi, rbx
0xb38d:	mov	edx, 1
0xb392:	call	0x113c0


0xce54:	xor	rax, qword ptr [rbp + 8]
0xce58:	xor	edx, edx
0xce5a:	add	rsp, 8
0xce5e:	div	rbx
0xce61:	pop	rbx
0xce62:	pop	rbp
0xce63:	mov	rax, rdx
0xce66:	ret	


0xd05e:	test	eax, eax
0xd060:	jne	0xd098


0xd062:	mov	rsi, rbp
0xd065:	mov	rdi, rbx
0xd068:	mov	edx, r12d
0xd06b:	call	0x114f0


0xd098:	mov	ebp, 0xfffffffe
0xd09d:	jmp	0xd07a


0xd07a:	mov	rcx, qword ptr [rsp + 8]
0xd07f:	xor	rcx, qword ptr fs:[0x28]
0xd088:	mov	eax, ebp
0xd08a:	jne	0xd09f


0xd08c:	add	rsp, 0x10
0xd090:	pop	rbx
0xd091:	pop	rbp
0xd092:	pop	r12
0xd094:	ret	


0xd09f:	call	0x2930


0xa5af:	cmp	eax, -2
0xa5b2:	mov	ebx, eax
0xa5b4:	je	0xa600


0xa600:	mov	rdi, r12
0xa603:	call	0xed80


0xa5b6:	cmp	eax, -1
0xa5b9:	jne	0xa5f2


0xa5bb:	mov	rdi, rbp
0xa5be:	call	0xed80


0xa5f2:	mov	eax, ebx
0xa5f4:	pop	rbx
0xa5f5:	pop	rbp
0xa5f6:	pop	r12
0xa5f8:	ret	


0x8291:	test	eax, eax
0x8293:	jne	0x626a


0x8299:	jmp	0x62c6


0x626a:	cmp	byte ptr [rbx + 0x24], 0
0x626e:	jne	0x5d90


0x6274:	jmp	0x62c6


0x7a39:	cmp	byte ptr [rax], 0x2e
0x7a3c:	mov	r14, rax
0x7a3f:	movzx	r8d, byte ptr [rbp - 0x350]
0x7a47:	movzx	r9d, byte ptr [rbp - 0x358]
0x7a4f:	jne	0x67dd


0x7a55:	mov	eax, 1
0x7a5a:	jmp	0x67a2


0x67dd:	cmp	r15d, 3
0x67e1:	je	0x6849


0x67a2:	xor	edx, edx
0x67a4:	cmp	byte ptr [r14 + 1], 0x2e
0x67a9:	sete	dl
0x67ac:	movzx	edx, byte ptr [r14 + rdx + 1]
0x67b2:	test	dl, dl
0x67b4:	je	0x7288


0x6849:	mov	edx, dword ptr [rbx]
0x684b:	mov	rsi, qword ptr [rbp - 0x308]
0x6852:	mov	edi, 0xffffff9c
0x6857:	mov	byte ptr [rbp - 0x350], r9b
0x685e:	call	0xb170


0x67e3:	mov	rdi, r14
0x67e6:	mov	byte ptr [rbp - 0x35c], r9b
0x67ed:	call	0x2900


0x67ba:	cmp	dl, 0x2f
0x67bd:	je	0x7288


0x67c3:	test	al, al
0x67c5:	jne	0x67dd


0x67c7:	mov	eax, dword ptr [rbp - 0x1d8]
0x67cd:	and	eax, 0xf000
0x67d2:	cmp	eax, 0x4000
0x67d7:	je	0x72a7


0x6788:	cmp	byte ptr [rax], 0x2e
0x678b:	mov	r14, rax
0x678e:	movzx	r8d, byte ptr [rbp - 0x350]
0x6796:	movzx	r9d, byte ptr [rbp - 0x358]
0x679e:	jne	0x67c7


0x67a0:	xor	eax, eax
0x67a2:	xor	edx, edx
0x67a4:	cmp	byte ptr [r14 + 1], 0x2e
0x67a9:	sete	dl
0x67ac:	movzx	edx, byte ptr [r14 + rdx + 1]
0x67b2:	test	dl, dl
0x67b4:	je	0x7288


0x4a74:	mov	rdi, rax
0x4a77:	mov	r12, rax
0x4a7a:	call	0x2900


0xab28:	cmp	rax, rbx
0xab2b:	jne	0xab0e


0xab2d:	jmp	0xab15


0xab15:	mov	qword ptr [rip + 0x20fa64], rbx
0xab1c:	pop	rbx
0xab1d:	ret	


0xa25f:	sub	rax, rbp
0xa262:	lea	rdi, [rax + 9]
0xa266:	mov	rbx, rax
0xa269:	cmp	rdi, 0x100
0xa270:	jbe	0xa281


0xa281:	mov	rdx, rbx
0xa284:	mov	rsi, rbp
0xa287:	mov	rdi, r12
0xa28a:	call	0x2ca0


0xa272:	call	0x2bc0


0x2ca0:	jmp	qword ptr [rip + 0x21726a]




0xab8d:	mov	rdi, rax
0xab90:	mov	r14, rax
0xab93:	call	0x2900


0xb4e7:	mov	rcx, rax
0xb4ea:	sub	rcx, rbx
0xb4ed:	cmp	rcx, rbp
0xb4f0:	jbe	0xb520


0xb520:	add	rsp, 8
0xb524:	mov	rdx, rcx
0xb527:	mov	rax, rdx
0xb52a:	pop	rbx
0xb52b:	pop	rbp
0xb52c:	ret	


0xb4f2:	cmp	byte ptr [rax - 1], 0x2f
0xb4f6:	lea	rdx, [rcx - 1]
0xb4fa:	je	0xb50e


0xb50e:	cmp	rbp, rdx
0xb511:	jne	0xb500


0xb4fc:	jmp	0xb520


0xb513:	add	rsp, 8
0xb517:	mov	rax, rdx
0xb51a:	pop	rbx
0xb51b:	pop	rbp
0xb51c:	ret	


0xb500:	cmp	byte ptr [rbx + rdx - 1], 0x2f
0xb505:	lea	rax, [rdx - 1]
0xb509:	jne	0xb513


0xb50b:	mov	rdx, rax
0xb50e:	cmp	rbp, rdx
0xb511:	jne	0xb500


0xb53e:	test	rax, rax
0xb541:	mov	rbx, rax
0xb544:	sete	al
0xb547:	movzx	eax, al
0xb54a:	lea	rdi, [rbx + rax + 1]
0xb54f:	call	0x2bc0


0xb64e:	cmp	byte ptr [rax], 0
0xb651:	mov	rbx, rax
0xb654:	cmove	rbx, rbp
0xb658:	mov	rdi, rbx
0xb65b:	call	0xb5f0


0xb9fc:	mov	rbx, rax
0xb9ff:	mov	rdi, rax
0xba02:	call	0xb5f0


0xf1c3:	mov	rdi, rbp
0xf1c6:	mov	r12, rax
0xf1c9:	call	0xb590


0xf1ce:	mov	rdi, r12
0xf1d1:	mov	r13, rax
0xf1d4:	call	0xb5f0


0x12861:	test	rbp, rbp
0x12864:	je	0x12886


0x12886:	add	rsp, 8
0x1288a:	pop	rbx
0x1288b:	pop	rbp
0x1288c:	pop	r12
0x1288e:	pop	r13
0x12890:	pop	r14
0x12892:	pop	r15
0x12894:	ret	


0x12866:	xor	ebx, ebx
0x12868:	nop	dword ptr [rax + rax]
0x12870:	mov	rdx, r15
0x12873:	mov	rsi, r14
0x12876:	mov	edi, r13d
0x12879:	call	qword ptr [r12 + rbx*8]


0xa28f:	movabs	rcx, 0x5858585858587543
0xa299:	mov	byte ptr [rax + 8], 0
0xa29d:	mov	qword ptr [rax], rcx
0xa2a0:	mov	rax, r12
0xa2a3:	pop	rbx
0xa2a4:	pop	rbp
0xa2a5:	pop	r12
0xa2a7:	ret	


0x4d2d:	test	eax, eax
0x4d2f:	sete	al
0x4d32:	pop	rbx
0x4d33:	ret	


0x6f3b:	test	eax, eax
0x6f3d:	je	0x7700


0x7700:	mov	rsi, qword ptr [rbp - 0x308]
0x7707:	lea	rdx, [rbp - 0x1f0]
0x770e:	mov	edi, 1
0x7713:	call	0x2910


0x6f43:	mov	rsi, r15
0x6f46:	mov	edi, 4
0x6f4b:	call	0xeab0


0x6222:	test	eax, eax
0x6224:	je	0x62c6


0x622a:	mov	rsi, qword ptr [rbp - 0x308]
0x6231:	mov	edi, 4
0x6236:	call	0xeab0


0x80a5:	test	eax, eax
0x80a7:	je	0x6165


0x80ad:	jmp	0x610a


0x610a:	mov	rsi, qword ptr [rbp - 0x308]
0x6111:	mov	edi, 4
0x6116:	call	0xeab0


0x8064:	test	eax, eax
0x8066:	mov	byte ptr [rbp - 0x320], 0
0x806d:	movzx	r8d, byte ptr [rbp - 0x328]
0x8075:	je	0x5fff


0x807b:	mov	rsi, qword ptr [rbp - 0x308]
0x8082:	mov	edi, 4
0x8087:	call	0xeab0


0x842d:	test	eax, eax
0x842f:	movzx	r8d, byte ptr [rbp - 0x320]
0x8437:	je	0x5fff


0x843d:	mov	rdi, qword ptr [rbp - 0x308]
0x8444:	mov	esi, r12d
0x8447:	and	esi, 0xffffefff
0x844d:	call	0x2b40


0x2b40:	jmp	qword ptr [rip + 0x21731a]




0x7e6f:	test	eax, eax
0x7e71:	movzx	r9d, byte ptr [rbp - 0x350]
0x7e79:	je	0x81f3


0x81f3:	movzx	r14d, byte ptr [rbx + 0x2e]
0x81f8:	test	r14b, r14b
0x81fb:	jne	0x87cc


0x7e7f:	call	0x2770


0x8201:	test	r13b, r13b
0x8204:	jne	0x87a8


0x87cc:	mov	rsi, qword ptr [rbp - 0x308]
0x87d3:	mov	edi, 4
0x87d8:	mov	byte ptr [rbp - 0x358], r9b
0x87df:	mov	r15d, 0x11
0x87e5:	call	0xeab0


0x820a:	mov	qword ptr [rbp - 0x350], 0
0x8215:	mov	r14d, 1
0x821b:	mov	r15d, 0x11
0x8221:	jmp	0x5ee9


0x87a8:	cmp	qword ptr [rbx + 0x40], 0
0x87ad:	mov	r14d, r13d
0x87b0:	mov	qword ptr [rbp - 0x350], 0
0x87bb:	mov	r15d, 0x11
0x87c1:	jne	0x5e22


0x87c7:	jmp	0x5ee9


0x6446:	test	eax, eax
0x6448:	je	0x645b


0x645b:	cmp	r12d, 0x4000
0x6462:	setne	dl
0x6465:	and	dl, byte ptr [rbx + 0x2e]
0x6468:	mov	r14d, edx
0x646b:	jne	0x7db0


0x644a:	call	0x2770


0x6471:	mov	dword ptr [rbp - 0x320], 1
0x647b:	mov	r14d, 1
0x6481:	jmp	0x5f30


0x7db0:	lea	rsi, [rip + 0xd0e1]
0x7db7:	mov	edx, 5
0x7dbc:	xor	edi, edi
0x7dbe:	call	0x28e0


0x74a5:	test	eax, eax
0x74a7:	je	0x6471


0x74ad:	call	0x2770


0x6a47:	test	eax, eax
0x6a49:	jne	0x72e0


0x6a4f:	cmp	byte ptr [rbx + 0x2e], 0
0x6a53:	je	0x5d90


0x72e0:	mov	rsi, qword ptr [rbp - 0x308]
0x72e7:	mov	edi, 4
0x72ec:	call	0xeab0


0x6a59:	mov	rdx, qword ptr [rbp - 0x308]
0x6a60:	mov	esi, 4
0x6a65:	mov	edi, 1
0x6a6a:	call	0xe990


0x63f2:	test	eax, eax
0x63f4:	je	0x628a


0x63fa:	call	0x2770


0x5d10:	test	eax, eax
0x5d12:	movzx	r8d, byte ptr [rbp - 0x350]
0x5d1a:	movzx	r9d, byte ptr [rbp - 0x358]
0x5d22:	js	0x6c70


0x6c70:	cmp	byte ptr [rbx + 0x18], 0
0x6c74:	je	0x66bc


0x5d28:	mov	rax, qword ptr [rbp - 0x320]
0x5d2f:	test	rax, rax
0x5d32:	je	0x5d37


0x5d37:	mov	rdx, qword ptr [rbp - 0x280]
0x5d3e:	mov	rsi, qword ptr [rbp - 0x278]
0x5d45:	mov	rdi, qword ptr [rbp - 0x308]
0x5d4c:	call	0x9e20


0x5d34:	mov	byte ptr [rax], 1
0x5d37:	mov	rdx, qword ptr [rbp - 0x280]
0x5d3e:	mov	rsi, qword ptr [rbp - 0x278]
0x5d45:	mov	rdi, qword ptr [rbp - 0x308]
0x5d4c:	call	0x9e20


0x5c68:	test	eax, eax
0x5c6a:	movzx	r9d, byte ptr [rbp - 0x350]
0x5c72:	jne	0x62f0


0x5c78:	xor	r8d, r8d
0x5c7b:	cmp	dword ptr [rbx + 8], 2
0x5c7f:	je	0x5c9f


0x62f0:	call	0x2770


0x5c81:	mov	rax, qword ptr [rbp - 0x1e8]
0x5c88:	cmp	qword ptr [rbp - 0x278], rax
0x5c8f:	je	0x6e58


0x6e58:	mov	rax, qword ptr [rbp - 0x1f0]
0x6e5f:	cmp	qword ptr [rbp - 0x280], rax
0x6e66:	jne	0x5c95


0x5c95:	cmp	dword ptr [rbx + 4], 2
0x5c99:	je	0x7010


0x6e6c:	movzx	eax, byte ptr [rbx + 0x17]
0x6e70:	test	al, al
0x6e72:	jne	0x7208


0x7010:	xor	ecx, ecx
0x7012:	xor	r15d, r15d
0x7015:	mov	eax, dword ptr [rbp - 0x268]
0x701b:	lea	rdx, [rbp - 0x280]
0x7022:	and	eax, 0xf000
0x7027:	cmp	eax, 0xa000
0x702c:	je	0x7cd3


0x6e78:	cmp	dword ptr [rbx + 4], 2
0x6e7c:	mov	ecx, 1
0x6e81:	mov	r15d, 1
0x6e87:	je	0x7015


0x7208:	mov	r14d, eax
0x720b:	jmp	0x5c9f


0x7cd3:	mov	eax, dword ptr [rbp - 0x1d8]
0x7cd9:	lea	rdx, [rbp - 0x280]
0x7ce0:	and	eax, 0xf000
0x7ce5:	cmp	eax, 0xa000
0x7cea:	jne	0x7032


0x7032:	mov	esi, dword ptr [rbx]
0x7034:	test	esi, esi
0x7036:	je	0x7518


0x7015:	mov	eax, dword ptr [rbp - 0x268]
0x701b:	lea	rdx, [rbp - 0x280]
0x7022:	and	eax, 0xf000
0x7027:	cmp	eax, 0xa000
0x702c:	je	0x7cd3


0x6e8d:	lea	r12, [rbp - 0x160]
0x6e94:	mov	rsi, qword ptr [rbp - 0x308]
0x6e9b:	mov	edi, 1
0x6ea0:	mov	byte ptr [rbp - 0x358], r9b
0x6ea7:	mov	byte ptr [rbp - 0x350], r8b
0x6eae:	mov	rdx, r12
0x6eb1:	call	0x2910


0x7cf0:	mov	rsi, qword ptr [rbp - 0x308]
0x7cf7:	mov	rdi, qword ptr [rbp - 0x310]
0x7cfe:	mov	byte ptr [rbp - 0x358], r9b
0x7d05:	mov	byte ptr [rbp - 0x350], r8b
0x7d0c:	call	0xf240


0x7518:	movzx	esi, byte ptr [rbx + 0x18]
0x751c:	test	sil, sil
0x751f:	jne	0x70f0


0x703c:	test	cl, cl
0x703e:	jne	0x80d2


0x7525:	cmp	byte ptr [rbx + 0x15], 0
0x7529:	jne	0x70f0


0x70f0:	mov	eax, dword ptr [r12 + 0x18]
0x70f5:	and	eax, 0xf000
0x70fa:	cmp	eax, 0xa000
0x70ff:	je	0x5c9f


0x7044:	cmp	byte ptr [rbx + 0x18], 0
0x7048:	jne	0x6ece


0x80d2:	mov	rsi, qword ptr [rbp - 0x308]
0x80d9:	mov	rdi, qword ptr [rbp - 0x310]
0x80e0:	mov	byte ptr [rbp - 0x358], r9b
0x80e7:	mov	byte ptr [rbp - 0x350], r8b
0x80ee:	call	0xf240


0x752f:	mov	eax, dword ptr [rdx + 0x18]
0x7532:	and	eax, 0xf000
0x7537:	cmp	eax, 0xa000
0x753c:	jne	0x8525


0x7105:	test	cl, cl
0x7107:	je	0x7115


0x704e:	cmp	dword ptr [rbx + 4], 2
0x7052:	je	0x6ece


0x6ece:	xor	r14d, r14d
0x6ed1:	jmp	0x5c9f


0x7542:	cmp	byte ptr [rbx + 0x2c], 0
0x7546:	je	0x755d


0x8525:	mov	eax, dword ptr [r12 + 0x18]
0x852a:	and	eax, 0xf000
0x852f:	cmp	eax, 0xa000
0x8534:	je	0x714c


0x7115:	mov	eax, dword ptr [rdx + 0x18]
0x7118:	and	eax, 0xf000
0x711d:	cmp	eax, 0xa000
0x7122:	je	0x7150


0x7109:	cmp	qword ptr [r12 + 0x10], 1
0x710f:	ja	0x84cb


0x7058:	mov	eax, dword ptr [rdx + 0x18]
0x705b:	and	eax, 0xf000
0x7060:	cmp	eax, 0xa000
0x7065:	jne	0x6ece


0x755d:	cmp	dword ptr [rbx + 4], 2
0x7561:	jne	0x7080


0x7548:	mov	eax, dword ptr [r12 + 0x18]
0x754d:	and	eax, 0xf000
0x7552:	cmp	eax, 0xa000
0x7557:	je	0x5c9f


0x714c:	movzx	esi, byte ptr [rbx + 0x18]
0x7150:	test	sil, sil
0x7153:	je	0x7542


0x853a:	jmp	0x7124


0x7150:	test	sil, sil
0x7153:	je	0x7542


0x7124:	mov	rax, qword ptr [r12 + 8]
0x7129:	cmp	qword ptr [rdx + 8], rax
0x712d:	jne	0x5c9f


0x84cb:	mov	rsi, qword ptr [rbp - 0x308]
0x84d2:	mov	rdi, qword ptr [rbp - 0x310]
0x84d9:	mov	byte ptr [rbp - 0x35c], r9b
0x84e0:	mov	byte ptr [rbp - 0x358], r8b
0x84e7:	mov	qword ptr [rbp - 0x350], rdx
0x84ee:	call	0xf240


0x706b:	mov	eax, dword ptr [r12 + 0x18]
0x7070:	and	eax, 0xf000
0x7075:	cmp	eax, 0xa000
0x707a:	je	0x6ece


0x7567:	mov	eax, dword ptr [rdx + 0x18]
0x756a:	and	eax, 0xf000
0x756f:	cmp	eax, 0xa000
0x7574:	je	0x8fec


0x7080:	mov	rdx, qword ptr [rbp - 0x308]
0x7087:	mov	esi, 4
0x708c:	mov	edi, 1
0x7091:	call	0xe990


0x7159:	mov	eax, dword ptr [rbp - 0x268]
0x715f:	and	eax, 0xf000
0x7164:	cmp	eax, 0xa000
0x7169:	jne	0x7542


0x7133:	mov	rax, qword ptr [r12]
0x7137:	cmp	qword ptr [rdx], rax
0x713a:	jne	0x5c9f


0x8fec:	mov	rsi, qword ptr [rbp - 0x310]
0x8ff3:	lea	rdx, [rbp - 0xd0]
0x8ffa:	mov	edi, 1
0x8fff:	mov	byte ptr [rbp - 0x358], r9b
0x9006:	mov	byte ptr [rbp - 0x350], r8b
0x900d:	call	0x2ba0


0x757a:	movdqa	xmm0, xmmword ptr [rdx]
0x757e:	movaps	xmmword ptr [rbp - 0xd0], xmm0
0x7585:	movdqa	xmm0, xmmword ptr [rdx + 0x10]
0x758a:	movaps	xmmword ptr [rbp - 0xc0], xmm0
0x7591:	movdqa	xmm0, xmmword ptr [rdx + 0x20]
0x7596:	movaps	xmmword ptr [rbp - 0xb0], xmm0
0x759d:	movdqa	xmm0, xmmword ptr [rdx + 0x30]
0x75a2:	movaps	xmmword ptr [rbp - 0xa0], xmm0
0x75a9:	movdqa	xmm0, xmmword ptr [rdx + 0x40]
0x75ae:	movaps	xmmword ptr [rbp - 0x90], xmm0
0x75b5:	movdqa	xmm0, xmmword ptr [rdx + 0x50]
0x75ba:	movaps	xmmword ptr [rbp - 0x80], xmm0
0x75be:	movdqa	xmm0, xmmword ptr [rdx + 0x60]
0x75c3:	movaps	xmmword ptr [rbp - 0x70], xmm0
0x75c7:	movdqa	xmm0, xmmword ptr [rdx + 0x70]
0x75cc:	movaps	xmmword ptr [rbp - 0x60], xmm0
0x75d0:	movdqa	xmm0, xmmword ptr [rdx + 0x80]
0x75d8:	movaps	xmmword ptr [rbp - 0x50], xmm0
0x75dc:	mov	eax, dword ptr [r12 + 0x18]
0x75e1:	and	eax, 0xf000
0x75e6:	cmp	eax, 0xa000
0x75eb:	je	0x8fa9


0x716f:	cmp	qword ptr [r12 + 0x10], 1
0x7175:	jbe	0x7542


0x7140:	movzx	eax, byte ptr [rbx + 0x17]
0x7144:	test	al, al
0x7146:	jne	0x7208


0x8fa9:	mov	rsi, qword ptr [rbp - 0x308]
0x8fb0:	lea	rdx, [rbp - 0x160]
0x8fb7:	mov	edi, 1
0x8fbc:	mov	byte ptr [rbp - 0x358], r9b
0x8fc3:	mov	byte ptr [rbp - 0x350], r8b
0x8fca:	call	0x2ba0


0x75f1:	movdqa	xmm0, xmmword ptr [r12]
0x75f7:	movaps	xmmword ptr [rbp - 0x160], xmm0
0x75fe:	movdqa	xmm0, xmmword ptr [r12 + 0x10]
0x7605:	movaps	xmmword ptr [rbp - 0x150], xmm0
0x760c:	movdqa	xmm0, xmmword ptr [r12 + 0x20]
0x7613:	movaps	xmmword ptr [rbp - 0x140], xmm0
0x761a:	movdqa	xmm0, xmmword ptr [r12 + 0x30]
0x7621:	movaps	xmmword ptr [rbp - 0x130], xmm0
0x7628:	movdqa	xmm0, xmmword ptr [r12 + 0x40]
0x762f:	movaps	xmmword ptr [rbp - 0x120], xmm0
0x7636:	movdqa	xmm0, xmmword ptr [r12 + 0x50]
0x763d:	movaps	xmmword ptr [rbp - 0x110], xmm0
0x7644:	movdqa	xmm0, xmmword ptr [r12 + 0x60]
0x764b:	movaps	xmmword ptr [rbp - 0x100], xmm0
0x7652:	movdqa	xmm0, xmmword ptr [r12 + 0x70]
0x7659:	movaps	xmmword ptr [rbp - 0xf0], xmm0
0x7660:	movdqa	xmm0, xmmword ptr [r12 + 0x80]
0x766a:	movaps	xmmword ptr [rbp - 0xe0], xmm0
0x7671:	mov	rax, qword ptr [rbp - 0x158]
0x7678:	cmp	qword ptr [rbp - 0xc8], rax
0x767f:	jne	0x5c9f


0x717b:	mov	rdi, qword ptr [rbp - 0x310]
0x7182:	mov	byte ptr [rbp - 0x35c], r9b
0x7189:	mov	byte ptr [rbp - 0x358], r8b
0x7190:	mov	qword ptr [rbp - 0x350], rdx
0x7197:	call	0x2a20


0x7685:	mov	rax, qword ptr [rbp - 0x160]
0x768c:	cmp	qword ptr [rbp - 0xd0], rax
0x7693:	jne	0x5c9f


0x2a20:	jmp	qword ptr [rip + 0x2173aa]


0x7699:	cmp	byte ptr [rbx + 0x17], 0
0x769d:	je	0x7080




0x76a3:	mov	eax, dword ptr [r12 + 0x18]
0x76a8:	and	eax, 0xf000
0x76ad:	cmp	eax, 0xa000
0x76b2:	setne	r14b
0x76b6:	jmp	0x5c9f


0x1042e:	test	eax, eax
0x10430:	mov	ebp, eax
0x10432:	jne	0x10630


0x10438:	test	r13, r13
0x1043b:	je	0x10607


0x10630:	test	r12, r12
0x10633:	mov	ebp, 0xffffffff
0x10638:	je	0x10607


0x10441:	cmp	qword ptr [r13 + 8], 0x7a11f
0x10449:	setg	r12b
0x1044d:	cmp	qword ptr [r13 + 0x18], 0x7a11f
0x10455:	setg	r14b
0x10459:	test	r12b, r12b
0x1045c:	jne	0x10467


0x1063a:	mov	rsi, r13
0x1063d:	mov	rdi, r12
0x10640:	call	0x2ac0


0x1045e:	test	r14b, r14b
0x10461:	je	0x10607


0x10467:	lea	rdx, [rsp + 0x70]
0x1046c:	mov	esi, ebx
0x1046e:	mov	edi, 1
0x10473:	call	0x2bf0


0x2ac0:	jmp	qword ptr [rip + 0x21735a]




0x10605:	mov	ebp, eax
0x10607:	mov	rcx, qword ptr [rsp + 0x108]
0x1060f:	xor	rcx, qword ptr fs:[0x28]
0x10618:	mov	eax, ebp
0x1061a:	jne	0x10736


0x10382:	cmp	eax, 0
0x10385:	mov	ebp, eax
0x10387:	jle	0x106bd


0x106bd:	jne	0x1073b


0x1038d:	call	0x2770


0x106bf:	mov	dword ptr [rip + 0x20a043], 1
0x106c9:	jmp	0x10607


0x1073b:	call	0x2770


0x10478:	test	eax, eax
0x1047a:	jne	0x10607


0x10480:	mov	rdx, qword ptr [rsp + 0xc8]
0x10488:	sub	rdx, qword ptr [r13 + 0x10]
0x1048c:	mov	rax, qword ptr [rsp + 0xb8]
0x10494:	sub	rax, qword ptr [r13]
0x10498:	movdqa	xmm0, xmmword ptr [r13]
0x1049e:	cmp	rdx, 1
0x104a2:	sete	dl
0x104a5:	movaps	xmmword ptr [rsp + 0x50], xmm0
0x104aa:	and	r14d, edx
0x104ad:	cmp	rax, 1
0x104b1:	movdqa	xmm0, xmmword ptr [r13 + 0x10]
0x104b7:	movaps	xmmword ptr [rsp + 0x60], xmm0
0x104bc:	jne	0x10710


0x104c2:	test	r12b, r12b
0x104c5:	je	0x10710


0x10710:	test	r14b, r14b
0x10713:	je	0x10505


0x104cb:	cmp	qword ptr [rsp + 0xc0], 0
0x104d4:	jne	0x10710


0x10505:	xor	ebp, ebp
0x10507:	jmp	0x10607


0x10719:	cmp	qword ptr [rsp + 0xd0], 0
0x10722:	jne	0x10505


0x104da:	test	r14b, r14b
0x104dd:	mov	qword ptr [rsp + 0x58], 0
0x104e6:	je	0x104f7


0x10728:	mov	qword ptr [rsp + 0x68], 0
0x10731:	jmp	0x104f7


0x104f7:	lea	rdx, [rsp + 0x50]
0x104fc:	xor	esi, esi
0x104fe:	mov	edi, ebx
0x10500:	call	0x2df0


0x104e8:	cmp	qword ptr [rsp + 0xd0], 0
0x104f1:	je	0x10728


0x1052f:	test	eax, eax
0x10531:	setne	al
0x10534:	test	al, al
0x10536:	jne	0x10703


0x10589:	test	eax, eax
0x1058b:	setne	al
0x1058e:	test	al, al
0x10590:	jne	0x10703


0x10596:	mov	rsi, qword ptr [rsp + 8]
0x1059b:	cmp	qword ptr [rsi + 8], 0x3ffffffe
0x105a3:	je	0x106d0


0x106d0:	mov	rax, qword ptr [rsp + 0xc0]
0x106d8:	mov	rdx, qword ptr [rsp + 0xb8]
0x106e0:	mov	r13d, 3
0x106e6:	mov	qword ptr [rsi], rdx
0x106e9:	mov	qword ptr [rsi + 8], rax
0x106ed:	jmp	0x10373


0x105a9:	cmp	qword ptr [rsi + 0x18], 0x3ffffffe
0x105b1:	mov	r13d, 3
0x105b7:	jne	0x10373


0x10373:	test	ebx, ebx
0x10375:	js	0x106a0


0x105bd:	mov	rax, qword ptr [rsp + 0xd0]
0x105c5:	mov	rdx, qword ptr [rsp + 0xc8]
0x105cd:	mov	qword ptr [rsi + 0x18], rax
0x105d1:	mov	qword ptr [rsi + 0x10], rdx
0x105d5:	jmp	0x10373


0xa330:	test	rax, rax
0xa333:	mov	r15, rax
0xa336:	je	0xa420


0xa420:	call	0x2770


0xa33c:	lea	rdx, [rsp + 0x10]
0xa341:	lea	rcx, [rip - 0x118]
0xa348:	xor	esi, esi
0xa34a:	mov	r8d, 6
0xa350:	mov	rdi, rax
0xa353:	mov	dword ptr [rsp + 0x10], r14d
0xa358:	mov	qword ptr [rsp + 0x18], r13
0xa35d:	mov	dword ptr [rsp + 0x20], ebp
0xa361:	mov	dword ptr [rsp + 0x24], r12d
0xa366:	call	0xf720


0xa48e:	test	rax, rax
0xa491:	mov	r13, rax
0xa494:	je	0xa580


0xa580:	call	0x2770


0xa49a:	lea	rdx, [rsp + 0x10]
0xa49f:	lea	rcx, [rip - 0x1f6]
0xa4a6:	xor	esi, esi
0xa4a8:	mov	r8d, 6
0xa4ae:	mov	rdi, rax
0xa4b1:	mov	qword ptr [rsp + 0x10], r12
0xa4b6:	mov	dword ptr [rsp + 0x18], ebp
0xa4ba:	call	0xf720


0x101a1:	mov	rdx, qword ptr [rbx + 0x18]
0x101a5:	cmp	rdx, 0x3ffffffe
0x101ac:	jne	0x1017d


0x10205:	movzx	eax, byte ptr [rsp + 0xf]
0x1020a:	add	rsp, 0x18
0x1020e:	pop	rbx
0x1020f:	pop	rbp
0x10210:	ret	


0x58a7:	test	eax, eax
0x58a9:	je	0x58fc


0x58fc:	add	rsp, 8
0x5900:	mov	eax, 1
0x5905:	pop	rbx
0x5906:	pop	rbp
0x5907:	pop	r12
0x5909:	pop	r13
0x590b:	pop	r14
0x590d:	pop	r15
0x590f:	ret	


0x58ab:	call	0x2770


0x61a8:	cmp	eax, -1
0x61ab:	je	0x5d90


0x61b1:	mov	ecx, dword ptr [rbp - 0x314]
0x61b7:	mov	edx, ecx
0x61b9:	and	dh, 0xf1
0x61bc:	test	eax, eax
0x61be:	cmovne	edx, ecx
0x61c1:	mov	dword ptr [rbp - 0x314], edx
0x61c7:	movabs	rax, 0xff0000000000ff
0x61d1:	test	qword ptr [rbx + 0x18], rax
0x61d5:	jne	0x8270


0x58f8:	test	eax, eax
0x58fa:	jne	0x5930


0x5930:	call	0x2770


0x9f9e:	test	eax, eax
0x9fa0:	js	0xa070


0xa070:	xor	eax, eax
0xa072:	cmp	qword ptr [r14 + 8], 0
0xa077:	jne	0xa080


0x9fa6:	mov	eax, dword ptr [rsp + 0x14]
0x9faa:	test	eax, eax
0x9fac:	je	0xa1e8


0xa079:	mov	byte ptr [r14 + 0x20], 1
0xa07e:	xor	eax, eax
0xa080:	mov	rbx, qword ptr [rsp + 0x1008]
0xa088:	xor	rbx, qword ptr fs:[0x28]
0xa091:	jne	0xa228


0xa080:	mov	rbx, qword ptr [rsp + 0x1008]
0xa088:	xor	rbx, qword ptr fs:[0x28]
0xa091:	jne	0xa228


0xa1e8:	cmp	qword ptr [r14 + 8], 0
0xa1ed:	mov	byte ptr [r14 + 0x21], 1
0xa1f2:	setne	al
0xa1f5:	jmp	0xa080


0x9fb2:	mov	rcx, qword ptr [r14 + 0x18]
0x9fb6:	mov	rdx, rax
0x9fb9:	not	rdx
0x9fbc:	cmp	rcx, rdx
0x9fbf:	ja	0xa1fa


0xa097:	add	rsp, 0x1018
0xa09e:	pop	rbx
0xa09f:	pop	rbp
0xa0a0:	pop	r12
0xa0a2:	pop	r13
0xa0a4:	pop	r14
0xa0a6:	pop	r15
0xa0a8:	ret	


0xa228:	call	0x2930


0x9fc5:	mov	rdi, qword ptr [r14 + 0x28]
0x9fc9:	mov	edx, 0x18
0x9fce:	add	rcx, rax
0x9fd1:	mov	rax, rdx
0x9fd4:	xor	esi, esi
0x9fd6:	mov	qword ptr [r14 + 0x18], rcx
0x9fda:	sub	rbx, rdi
0x9fdd:	mul	rcx
0x9fe0:	jo	0xa219


0xa1fa:	lea	rcx, [rip + 0xaf1f]
0xa201:	lea	rsi, [rip + 0xae78]
0xa208:	lea	rdi, [rip + 0xae99]
0xa20f:	mov	edx, 0x7e
0xa214:	call	0x29e0


0xa219:	mov	esi, 1
0xa21e:	jmp	0x9fe6


0x9fe6:	test	rax, rax
0x9fe9:	js	0xa223


0xa223:	call	0x11270


0x9fef:	test	rsi, rsi
0x9ff2:	jne	0xa223


0x9ff8:	lea	rsi, [rcx + rcx*2]
0x9ffc:	shl	rsi, 3
0xa000:	call	0x11080


0xaaed:	test	eax, eax
0xaaef:	jne	0xaad0


0xaad0:	mov	r14, qword ptr [rbx]
0xaad3:	add	rbp, r12
0xaad6:	add	rbx, 8
0xaada:	test	r14, r14
0xaadd:	je	0xaaf1


0x48a0:	test	eax, eax
0x48a2:	jne	0x48f4


0x48a4:	cmp	byte ptr [rbp - 0xe2], 0
0x48ab:	jne	0x48f4


0x48ad:	mov	eax, dword ptr [rbp - 0xb8]
0x48b3:	and	eax, 0xf000
0x48b8:	cmp	eax, 0x8000
0x48bd:	jne	0x48f4


0x48bf:	mov	rsi, rbx
0x48c2:	mov	edi, 0xffffff9c
0x48c7:	mov	edx, r13d
0x48ca:	call	0xb1c0


0xced9:	test	eax, eax
0xcedb:	sete	al
0xcede:	add	rsp, 8
0xcee2:	ret	


0x107e0:	cmp	eax, 0
0x107e3:	mov	ebp, eax
0x107e5:	jle	0x108d0


0x108d0:	jne	0x109ab


0x107eb:	call	0x2770


0x108d6:	mov	dword ptr [rip + 0x209e2c], 1
0x108e0:	mov	dword ptr [rip + 0x209e1e], 1
0x108ea:	jmp	0x10858


0x109ab:	call	0x2770


0x106b2:	cmp	eax, 0
0x106b5:	mov	ebp, eax
0x106b7:	jg	0x1038d


0x11f29:	mov	qword ptr [r12 + 0x18], r14
0x11f2e:	jmp	0x11e32


0x11e32:	add	rsp, 0x18
0x11e36:	pop	rbx
0x11e37:	pop	rbp
0x11e38:	pop	r12
0x11e3a:	pop	r13
0x11e3c:	pop	r14
0x11e3e:	pop	r15
0x11e40:	ret	


0x11910:	mov	rax, r12
0x11913:	nop	dword ptr [rax + rax]
0x11918:	movzx	edx, byte ptr [rax]
0x1191b:	shl	rbx, 8
0x1191f:	shl	rbp, 8
0x11923:	add	rbx, 0xff
0x1192a:	add	rax, 1
0x1192e:	add	rbp, rdx
0x11931:	cmp	r14, rbx
0x11934:	ja	0x11918


0x11936:	cmp	rbx, r14
0x11939:	jne	0x118b9


0x11918:	movzx	edx, byte ptr [rax]
0x1191b:	shl	rbx, 8
0x1191f:	shl	rbp, 8
0x11923:	add	rbx, 0xff
0x1192a:	add	rax, 1
0x1192e:	add	rbp, rdx
0x11931:	cmp	r14, rbx
0x11934:	ja	0x11918


0x11e83:	test	bl, 7
0x11e86:	jne	0x11ef0


0x11e88:	cmp	rbp, 0x7ff
0x11e8f:	jbe	0x11f33


0x11ef0:	mov	rsi, qword ptr [rsp + 8]
0x11ef5:	mov	rdi, r13
0x11ef8:	mov	r14d, 0x800
0x11efe:	call	0x11fb0


0x11f33:	mov	rsi, qword ptr [rsp + 8]
0x11f38:	mov	rdi, r13
0x11f3b:	call	0x11fb0


0x11e95:	lea	r15, [rbp - 0x800]
0x11e9c:	mov	r14, r15
0x11e9f:	and	r14d, 0x7ff
0x11ea6:	jmp	0x11ebc


0x11ebc:	mov	rsi, rbx
0x11ebf:	mov	rdi, r13
0x11ec2:	add	rbx, 0x800
0x11ec9:	call	0x11fb0


0x11ece:	test	r15, r15
0x11ed1:	mov	rbp, r15
0x11ed4:	jne	0x11eb0


0x11ed6:	mov	qword ptr [r12 + 0x18], 0
0x11edf:	add	rsp, 0x18
0x11ee3:	pop	rbx
0x11ee4:	pop	rbp
0x11ee5:	pop	r12
0x11ee7:	pop	r13
0x11ee9:	pop	r14
0x11eeb:	pop	r15
0x11eed:	ret	


0x11eb0:	cmp	r15, r14
0x11eb3:	je	0x11ef0


0x11eb5:	sub	r15, 0x800
0x11ebc:	mov	rsi, rbx
0x11ebf:	mov	rdi, r13
0x11ec2:	add	rbx, 0x800
0x11ec9:	call	0x11fb0


0x11f40:	jmp	0x11f10


0x11f10:	mov	r14d, 0x800
0x11f16:	mov	rsi, qword ptr [rsp + 8]
0x11f1b:	mov	rdx, rbp
0x11f1e:	mov	rdi, rbx
0x11f21:	sub	r14, rbp
0x11f24:	call	0x2b60


0x11f03:	cmp	rbp, 0x800
0x11f0a:	ja	0x11e65


0xc7cb:	test	rax, rax
0xc7ce:	mov	qword ptr [rsp], rax
0xc7d2:	je	0xc880


0xc7d8:	mov	qword ptr [rsp + 0x10], rbx
0xc7dd:	shl	rbx, 4
0xc7e1:	mov	qword ptr [rsp + 0x28], r12
0xc7e6:	add	rbx, rax
0xc7e9:	mov	rax, qword ptr [rbp + 0x30]
0xc7ed:	mov	r12, rsp
0xc7f0:	xor	edx, edx
0xc7f2:	mov	rsi, rbp
0xc7f5:	mov	rdi, r12
0xc7f8:	mov	qword ptr [rsp + 8], rbx
0xc7fd:	mov	qword ptr [rsp + 0x18], 0
0xc806:	mov	qword ptr [rsp + 0x30], rax
0xc80b:	mov	rax, qword ptr [rbp + 0x38]
0xc80f:	mov	qword ptr [rsp + 0x20], 0
0xc818:	mov	qword ptr [rsp + 0x38], rax
0xc81d:	mov	rax, qword ptr [rbp + 0x40]
0xc821:	mov	qword ptr [rsp + 0x40], rax
0xc826:	mov	rax, qword ptr [rbp + 0x48]
0xc82a:	mov	qword ptr [rsp + 0x48], rax
0xc82f:	call	0xbdf0


0xc834:	test	al, al
0xc836:	mov	ebx, eax
0xc838:	jne	0xc8f0


0xc83e:	mov	rax, qword ptr [rsp + 0x48]
0xc843:	mov	edx, 1
0xc848:	mov	rsi, r12
0xc84b:	mov	rdi, rbp
0xc84e:	mov	qword ptr [rbp + 0x48], rax
0xc852:	call	0xbdf0


0xc8f0:	mov	rdi, qword ptr [rbp]
0xc8f4:	call	0x2e10


0xc857:	test	al, al
0xc859:	je	0xc939


0xc939:	call	0x2760


0xc85f:	xor	edx, edx
0xc861:	mov	rsi, r12
0xc864:	mov	rdi, rbp
0xc867:	call	0xbdf0


0xc86c:	test	al, al
0xc86e:	je	0xc939


0xc874:	mov	rdi, qword ptr [rsp]
0xc878:	call	0x2e10


0x1120f:	test	rax, rax
0x11212:	je	0x11219


0x11214:	add	rsp, 8
0x11218:	ret	


0x4db9:	test	rax, rax
0x4dbc:	je	0x4dc7


0x4dc7:	lea	rax, [rip + 0x215392]
0x4dce:	mov	qword ptr [rip + 0x21523f], 0x400
0x4dd9:	mov	qword ptr [rip + 0x215780], rax
0x4de0:	jmp	0x4d54


0x4dbe:	mov	qword ptr [rip + 0x21579b], rax
0x4dc5:	jmp	0x4d54


0x52c5:	test	rax, rax
0x52c8:	mov	qword ptr [rsp + 0x30], rax
0x52cd:	jns	0x5330


0x52cf:	call	0x2770


0x5330:	je	0x545f


0x545f:	test	r15b, r15b
0x5462:	je	0x5613


0x5336:	mov	rax, qword ptr [rsp + 0x40]
0x533b:	mov	rbp, qword ptr [rsp + 0x30]
0x5340:	mov	ecx, r15d
0x5343:	mov	r14, qword ptr [rsp + 0x20]
0x5348:	mov	r10, qword ptr [rsp + 0x48]
0x534d:	add	qword ptr [rax], rbp
0x5350:	cmp	qword ptr [rsp + 0x50], 0
0x5356:	mov	r11, r14
0x5359:	mov	r15, r10
0x535c:	setne	byte ptr [rsp + 0x1d]
0x5361:	nop	dword ptr [rax]
0x5368:	cmp	rbp, r15
0x536b:	mov	rbx, r15
0x536e:	cmovbe	rbx, rbp
0x5372:	test	rbx, rbx
0x5375:	setne	r12b
0x5379:	and	r12b, byte ptr [rsp + 0x1d]
0x537e:	je	0x5490


0x5468:	movzx	edx, byte ptr [rsp + 0x6c]
0x546d:	mov	rsi, qword ptr [rsp + 0x10]
0x5472:	mov	rcx, r13
0x5475:	mov	edi, dword ptr [rsp + 0x18]
0x5479:	add	rsp, 0x78
0x547d:	pop	rbx
0x547e:	pop	rbp
0x547f:	pop	r12
0x5481:	pop	r13
0x5483:	pop	r14
0x5485:	pop	r15
0x5487:	jmp	0x5150


0x5490:	cmp	cl, 1
0x5493:	je	0x54e8


0x5384:	mov	rsi, r14
0x5387:	mov	rdx, rbx
0x538a:	cmp	byte ptr [rsi], 0
0x538d:	jne	0x55c0


0x54e8:	test	rbx, rbx
0x54eb:	jne	0x54f8


0x5495:	cmp	rbp, r15
0x5498:	ja	0x54e8


0x5393:	add	rsi, 1
0x5397:	sub	rdx, 1
0x539b:	je	0x5528


0x55c0:	mov	eax, r12d
0x55c3:	mov	edx, ecx
0x55c5:	xor	r12d, r12d
0x55c8:	jmp	0x53d1


0x54ed:	mov	r12d, ecx
0x54f0:	jmp	0x549a


0x54f8:	movabs	rax, 0x7fffffffffffffff
0x5502:	sub	rax, rbx
0x5505:	cmp	rax, r13
0x5508:	jb	0x5580


0x549a:	add	r13, rbx
0x549d:	xor	r9d, r9d
0x54a0:	test	cl, cl
0x54a2:	mov	r15d, 1
0x54a8:	mov	byte ptr [rsp + 0x1e], cl
0x54ac:	je	0x5407


0x5528:	mov	r9d, ecx
0x552b:	xor	r9d, 1
0x552f:	test	r13, r13
0x5532:	setne	al
0x5535:	and	r9d, eax
0x5538:	test	r9b, r9b
0x553b:	je	0x54f2


0x53a1:	test	dl, 0xf
0x53a4:	jne	0x538a


0x53d1:	test	r13, r13
0x53d4:	setne	r9b
0x53d8:	and	r9d, edx
0x53db:	cmp	rbp, r15
0x53de:	ja	0x5538


0x5580:	mov	rsi, qword ptr [rsp + 0x58]
0x5585:	mov	edi, 4
0x558a:	xor	r15d, r15d
0x558d:	call	0xeab0


0x550a:	add	r13, rbx
0x550d:	add	r14, rbx
0x5510:	mov	r15, rbx
0x5513:	sub	rbp, r15
0x5516:	jne	0x5368


0x5407:	mov	edi, dword ptr [rsp + 0x18]
0x540b:	mov	rdx, r13
0x540e:	mov	rsi, r11
0x5411:	mov	byte ptr [rsp + 8], r9b
0x5416:	call	0xbae0


0x54b2:	movzx	edx, byte ptr [rsp + 0x1f]
0x54b7:	mov	rsi, qword ptr [rsp + 0x10]
0x54bc:	mov	rcx, r13
0x54bf:	mov	edi, dword ptr [rsp + 0x18]
0x54c3:	mov	byte ptr [rsp + 0x1e], r9b
0x54c8:	call	0x5150


0x54f2:	mov	ecx, r12d
0x54f5:	nop	dword ptr [rax]
0x54f8:	movabs	rax, 0x7fffffffffffffff
0x5502:	sub	rax, rbx
0x5505:	cmp	rax, r13
0x5508:	jb	0x5580


0x553d:	xor	r15d, r15d
0x5540:	jmp	0x53fb


0x53a6:	mov	rdi, r14
0x53a9:	mov	qword ptr [rsp + 8], r11
0x53ae:	mov	byte ptr [rsp + 0x1e], cl
0x53b2:	call	0x2a90


0x538a:	cmp	byte ptr [rsi], 0
0x538d:	jne	0x55c0


0x53e4:	test	al, al
0x53e6:	je	0x5538


0x5538:	test	r9b, r9b
0x553b:	je	0x54f2


0x551c:	mov	r12d, ecx
0x551f:	jmp	0x5444


0x5368:	cmp	rbp, r15
0x536b:	mov	rbx, r15
0x536e:	cmovbe	rbx, rbp
0x5372:	test	rbx, rbx
0x5375:	setne	r12b
0x5379:	and	r12b, byte ptr [rsp + 0x1d]
0x537e:	je	0x5490


0x53fb:	test	cl, cl
0x53fd:	mov	byte ptr [rsp + 0x1e], cl
0x5401:	jne	0x54b2


0x53ec:	test	r9b, r9b
0x53ef:	je	0x549a


0x5444:	mov	rdi, qword ptr [rsp + 0x30]
0x5449:	sub	qword ptr [rsp + 0x28], rdi
0x544e:	mov	r15d, r12d
0x5451:	mov	rax, qword ptr [rsp + 0x60]
0x5456:	mov	byte ptr [rax], r12b
0x5459:	jne	0x52a6


0x53f5:	mov	r15d, 1
0x53fb:	test	cl, cl
0x53fd:	mov	byte ptr [rsp + 0x1e], cl
0x5401:	jne	0x54b2


0x52a6:	mov	rax, qword ptr [rsp + 0x38]
0x52ab:	mov	rdx, qword ptr [rsp + 0x28]
0x52b0:	mov	rsi, qword ptr [rsp + 0x20]
0x52b5:	mov	edi, dword ptr [rsp + 0x68]
0x52b9:	cmp	rax, rdx
0x52bc:	cmovbe	rdx, rax
0x52c0:	call	0x2a80


0x53b7:	movzx	ecx, byte ptr [rsp + 0x1e]
0x53bc:	test	eax, eax
0x53be:	mov	r11, qword ptr [rsp + 8]
0x53c3:	sete	r12b
0x53c7:	mov	edx, r12d
0x53ca:	xor	edx, ecx
0x53cc:	test	eax, eax
0x53ce:	setne	al
0x53d1:	test	r13, r13
0x53d4:	setne	r9b
0x53d8:	and	r9d, edx
0x53db:	cmp	rbp, r15
0x53de:	ja	0x5538


0x541b:	cmp	r13, rax
0x541e:	movzx	r9d, byte ptr [rsp + 8]
0x5424:	movzx	ecx, byte ptr [rsp + 0x1e]
0x5429:	jne	0x55cd


0x542f:	test	r15d, r15d
0x5432:	mov	r13, rbx
0x5435:	je	0x5548


0x55cd:	mov	rsi, qword ptr [rsp + 0x10]
0x55d2:	mov	edi, 4
0x55d7:	mov	r15d, ecx
0x55da:	call	0xeab0


0x5548:	mov	r11, r14
0x554b:	mov	ecx, r12d
0x554e:	add	r14, rbx
0x5551:	mov	r15, rbx
0x5554:	jmp	0x5513


0x543b:	test	rbx, rbx
0x543e:	jne	0x5560


0x5513:	sub	rbp, r15
0x5516:	jne	0x5368


0x5560:	xor	r15d, r15d
0x5563:	test	r9b, r9b
0x5566:	mov	ecx, r12d
0x5569:	mov	r11, r14
0x556c:	jne	0x5513


0x556e:	add	r14, rbx
0x5571:	mov	r15, rbx
0x5574:	xor	r13d, r13d
0x5577:	jmp	0x5513


0x5a67:	mov	ebx, eax
0x5a69:	mov	edi, eax
0x5a6b:	mov	dword ptr [rip + 0x21459f], eax
0x5a71:	call	0x2b50


0x5a76:	mov	eax, ebx
0x5a78:	pop	rbx
0x5a79:	ret	


0xa3cc:	test	eax, eax
0xa3ce:	mov	ecx, eax
0xa3d0:	je	0xa390


0xa3d2:	call	0x2770


0xa521:	test	eax, eax
0xa523:	mov	r8d, eax
0xa526:	je	0xa4e8


0xa528:	call	0x2770


0xab3c:	test	rax, rax
0xab3f:	mov	rbx, rax
0xab42:	je	0xab0e


0xab44:	jmp	0xab09


0xb21a:	test	rax, rax
0xb21d:	je	0xb240


0xb240:	mov	eax, 2
0xb245:	add	rsp, 8
0xb249:	ret	


0xb21f:	cmp	byte ptr [rax], 0
0xb222:	je	0xb240


0xb224:	lea	rdi, [rip + 0x9f7c]
0xb22b:	mov	rsi, rax
0xb22e:	add	rsp, 8
0xb232:	jmp	0xb180


0xb6e8:	mov	edi, eax
0xb6ea:	call	0xf950


0xb6ef:	mov	rcx, qword ptr [rsp + 0x18]
0xb6f4:	xor	rcx, qword ptr fs:[0x28]
0xb6fd:	jne	0xb729


0xb6ff:	add	rsp, 0x58
0xb703:	ret	


0xb729:	call	0x2930


0x7b41:	test	eax, eax
0x7b43:	mov	dword ptr [rbp - 0x320], eax
0x7b49:	js	0x824b


0x824b:	mov	rsi, qword ptr [rbp - 0x310]
0x8252:	mov	edi, 4
0x8257:	call	0xeab0


0x7b4f:	mov	esi, dword ptr [rbp - 0x320]
0x7b55:	lea	rdx, [rbp - 0x160]
0x7b5c:	mov	edi, 1
0x7b61:	call	0x2bf0


0x7b66:	test	eax, eax
0x7b68:	jne	0x8487


0x7b6e:	mov	rax, qword ptr [rbp - 0x158]
0x7b75:	cmp	qword ptr [rbp - 0x278], rax
0x7b7c:	jne	0x7b92


0x8487:	mov	rsi, qword ptr [rbp - 0x310]
0x848e:	mov	edi, 4
0x8493:	call	0xeab0


0x7b7e:	mov	rax, qword ptr [rbp - 0x160]
0x7b85:	cmp	qword ptr [rbp - 0x280], rax
0x7b8c:	je	0x88b6


0x7b92:	mov	rsi, qword ptr [rbp - 0x310]
0x7b99:	mov	edi, 4
0x7b9e:	call	0xeab0


0x88b6:	and	r12d, 0x1ff
0x88bd:	test	r14b, r14b
0x88c0:	mov	dword ptr [rbp - 0x3a4], r12d
0x88c7:	jne	0x8e60


0x88cd:	cmp	byte ptr [rbx + 0x23], 1
0x88d1:	mov	rdi, qword ptr [rbp - 0x308]
0x88d8:	sbb	esi, esi
0x88da:	xor	eax, eax
0x88dc:	and	esi, 0xfffffe00
0x88e2:	add	esi, 0x201
0x88e8:	call	0xb6c0


0x8e60:	mov	eax, dword ptr [rbp - 0x35c]
0x8e66:	mov	dword ptr [rbp - 0x378], eax
0x8e6c:	mov	eax, dword ptr [rbp - 0x378]
0x8e72:	mov	rdi, qword ptr [rbp - 0x308]
0x8e79:	mov	esi, 0xc1
0x8e7e:	not	eax
0x8e80:	and	eax, dword ptr [rbp - 0x3a4]
0x8e86:	mov	edx, eax
0x8e88:	mov	dword ptr [rbp - 0x330], eax
0x8e8e:	xor	eax, eax
0x8e90:	call	0xb6c0


0x8e95:	mov	r14d, eax
0x8e98:	mov	dword ptr [rbp - 0x328], eax
0x8e9e:	call	0x2770


0x88ed:	mov	dword ptr [rbp - 0x328], eax
0x88f3:	call	0x2770


0xcfa3:	test	rax, rax
0xcfa6:	je	0xcffd


0xcffd:	mov	qword ptr [rip + 0x20d59c], rbx
0xd004:	mov	qword ptr [rip + 0x20d0bd], rbx
0xd00b:	pop	rbx
0xd00c:	ret	


0xcfa8:	lea	r8, [rax + 1]
0xcfac:	mov	rdx, r8
0xcfaf:	sub	rdx, rbx
0xcfb2:	cmp	rdx, 6
0xcfb6:	jle	0xcffd


0xcfb8:	lea	rsi, [rax - 6]
0xcfbc:	lea	rdi, [rip + 0x8355]
0xcfc3:	mov	ecx, 7
0xcfc8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xcfc8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xcfca:	seta	dl
0xcfcd:	sbb	dl, 0
0xcfd0:	test	dl, dl
0xcfd2:	jne	0xcffd


0xcfd4:	lea	rdi, [rip + 0x8345]
0xcfdb:	mov	ecx, 3
0xcfe0:	mov	rsi, r8
0xcfe3:	mov	rbx, r8
0xcfe6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xcfe6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xcfe8:	seta	dl
0xcfeb:	sbb	dl, 0
0xcfee:	test	dl, dl
0xcff0:	jne	0xcffd


0xcff2:	lea	rbx, [rax + 4]
0xcff6:	mov	qword ptr [rip + 0x20d0a3], rbx
0xcffd:	mov	qword ptr [rip + 0x20d59c], rbx
0xd004:	mov	qword ptr [rip + 0x20d0bd], rbx
0xd00b:	pop	rbx
0xd00c:	ret	


0xd02a:	call	0x2760


0xc08b:	lea	rdx, [rip + 0x91ac]
0xc092:	xor	eax, eax
0xc094:	mov	rcx, rbp
0xc097:	mov	esi, 1
0xc09c:	mov	rdi, r12
0xc09f:	call	0x2db0


0xc0a4:	test	r13, r13
0xc0a7:	js	0xc110


0xc110:	mov	rax, r13
0xc113:	mov	rdx, r13
0xc116:	pxor	xmm0, xmm0
0xc11a:	shr	rax, 1
0xc11d:	and	edx, 1
0xc120:	or	rax, rdx
0xc123:	test	rbp, rbp
0xc126:	cvtsi2sd	xmm0, rax
0xc12b:	addsd	xmm0, xmm0
0xc12f:	mulsd	xmm0, qword ptr [rip + 0x91a1]
0xc137:	jns	0xc0bf


0xc0a9:	pxor	xmm0, xmm0
0xc0ad:	test	rbp, rbp
0xc0b0:	cvtsi2sd	xmm0, r13
0xc0b5:	mulsd	xmm0, qword ptr [rip + 0x921b]
0xc0bd:	js	0xc139


0xc139:	mov	rax, rbp
0xc13c:	pxor	xmm1, xmm1
0xc140:	shr	rax, 1
0xc143:	and	ebp, 1
0xc146:	or	rax, rbp
0xc149:	cvtsi2sd	xmm1, rax
0xc14e:	addsd	xmm1, xmm1
0xc152:	jmp	0xc0c8


0xc0bf:	pxor	xmm1, xmm1
0xc0c3:	cvtsi2sd	xmm1, rbp
0xc0c8:	divsd	xmm0, xmm1
0xc0cc:	lea	rdx, [rip + 0x919d]
0xc0d3:	mov	rcx, r13
0xc0d6:	mov	rdi, r12
0xc0d9:	mov	esi, 1
0xc0de:	mov	eax, 1
0xc0e3:	call	0x2db0


0xc0c8:	divsd	xmm0, xmm1
0xc0cc:	lea	rdx, [rip + 0x919d]
0xc0d3:	mov	rcx, r13
0xc0d6:	mov	rdi, r12
0xc0d9:	mov	esi, 1
0xc0de:	mov	eax, 1
0xc0e3:	call	0x2db0


0xc0e8:	add	rsp, 8
0xc0ec:	mov	rcx, rbx
0xc0ef:	mov	rdi, r12
0xc0f2:	pop	rbx
0xc0f3:	pop	rbp
0xc0f4:	pop	r12
0xc0f6:	pop	r13
0xc0f8:	lea	rdx, [rip + 0x9157]
0xc0ff:	mov	esi, 1
0xc104:	xor	eax, eax
0xc106:	jmp	0x2db0


0x109fc:	lea	rsi, [rip + 0x4ecf]
0x10a03:	xor	edi, edi
0x10a05:	mov	edx, 5
0x10a0a:	call	0x28e0


0x10b11:	jmp	0x109fc


0x11096:	test	rax, rax
0x11099:	jne	0x110a0


0x1109b:	test	rbx, rbx
0x1109e:	jne	0x110b1


0x110a0:	pop	rbx
0x110a1:	ret	


0x110b1:	call	0x11270


0xa005:	mov	r8d, dword ptr [rsp + 0x14]
0xa00a:	add	rbx, rax
0xa00d:	mov	qword ptr [r14 + 0x28], rax
0xa011:	test	r8d, r8d
0xa014:	je	0xa150


0xa150:	test	byte ptr [rbx + 0x10], 1
0xa154:	jne	0xa1a0


0xa01a:	mov	rax, qword ptr [rsp + 0x30]
0xa01f:	mov	rdx, qword ptr [rsp + 0x20]
0xa024:	mov	rcx, r13
0xa027:	sub	rcx, rax
0xa02a:	cmp	rdx, rcx
0xa02d:	ja	0xa10a


0xa156:	cmp	r15d, 0x48
0xa15a:	movzx	eax, byte ptr [r14 + 0x21]
0xa15f:	jbe	0xa1c0


0xa1a0:	mov	byte ptr [r14 + 0x21], 1
0xa1a5:	mov	eax, r15d
0xa1a8:	mov	qword ptr [r14 + 0x18], rax
0xa1ac:	mov	eax, 1
0xa1b1:	jmp	0xa080


0xa033:	xor	ecx, ecx
0xa035:	mov	rsi, r12
0xa038:	test	r15d, r15d
0xa03b:	je	0xa0b0


0xa10a:	lea	rcx, [rip + 0xb00f]
0xa111:	lea	rsi, [rip + 0xaf68]
0xa118:	lea	rdi, [rip + 0xafc1]
0xa11f:	mov	edx, 0x8d
0xa124:	call	0x29e0


0xa1c0:	mov	ecx, r15d
0xa1c3:	test	al, al
0xa1c5:	mov	qword ptr [r14 + 0x18], rcx
0xa1c9:	jne	0xa1ac


0xa161:	test	al, al
0xa163:	jne	0xa1a5


0xa0b0:	mov	rdi, qword ptr [r14 + 8]
0xa0b4:	cmp	rdi, rdx
0xa0b7:	ja	0xa061


0xa03d:	mov	r9d, dword ptr [rsi + 0x28]
0xa041:	mov	r10, qword ptr [rbx + 8]
0xa045:	mov	rdi, qword ptr [rbx]
0xa048:	mov	r11d, r9d
0xa04b:	add	rdi, r10
0xa04e:	and	r11d, 0xfffffffe
0xa052:	cmp	dword ptr [rbx + 0x10], r11d
0xa056:	je	0xa130


0xa1cb:	mov	rdx, qword ptr [rbx + 8]
0xa1cf:	add	rdx, qword ptr [rbx]
0xa1d2:	cmp	r15d, 0x47
0xa1d6:	mov	qword ptr [r14 + 8], rdx
0xa1da:	jbe	0x9f63


0xa1ac:	mov	eax, 1
0xa1b1:	jmp	0xa080


0xa165:	lea	eax, [r15 - 1]
0xa169:	mov	rdx, qword ptr [r14 + 0x28]
0xa16d:	lea	rcx, [rax + rax*2]
0xa171:	mov	qword ptr [r14 + 0x18], rax
0xa175:	mov	rax, qword ptr [rdx + rcx*8 - 0x18]
0xa17a:	add	rax, qword ptr [rdx + rcx*8 - 0x10]
0xa17f:	mov	qword ptr [r14 + 8], rax
0xa183:	jmp	0xa1ac


0xa1a5:	mov	eax, r15d
0xa1a8:	mov	qword ptr [r14 + 0x18], rax
0xa1ac:	mov	eax, 1
0xa1b1:	jmp	0xa080


0xa0b9:	mov	r9d, dword ptr [rsi + 0x28]
0xa0bd:	mov	esi, r15d
0xa0c0:	add	r15d, 1
0xa0c4:	lea	rdi, [rsi + rsi*2]
0xa0c8:	mov	rsi, qword ptr [r14 + 0x28]
0xa0cc:	lea	rbx, [rsi + rdi*8]
0xa0d0:	mov	qword ptr [rbx], rdx
0xa0d3:	mov	qword ptr [rbx + 8], rax
0xa0d7:	mov	dword ptr [rbx + 0x10], r9d
0xa0db:	add	ecx, 1
0xa0de:	cmp	ecx, r8d
0xa0e1:	jae	0xa150


0xa061:	mov	r10, rdi
0xa064:	sub	r10, rdx
0xa067:	cmp	r10, rax
0xa06a:	jae	0xa188


0xa130:	cmp	rdi, rdx
0xa133:	jne	0xa05c


0xa05c:	cmp	rdi, rdx
0xa05f:	jbe	0xa0bd


0x9f63:	xor	eax, eax
0x9f65:	mov	ecx, 0x200
0x9f6a:	mov	rdi, rbp
0x9f6d:	rep stosq	qword ptr [rdi], rax


0xa1e0:	jmp	0xa1ac


0xa0e3:	mov	edx, ecx
0xa0e5:	mov	rdi, r13
0xa0e8:	lea	rax, [rdx*8]
0xa0f0:	sub	rax, rdx
0xa0f3:	lea	rsi, [r12 + rax*8]
0xa0f7:	mov	rax, qword ptr [rsi + 0x10]
0xa0fb:	mov	rdx, qword ptr [rsi]
0xa0fe:	sub	rdi, rax
0xa101:	cmp	rdx, rdi
0xa104:	jbe	0xa038


0xa188:	sub	rax, r10
0xa18b:	mov	qword ptr [rsi], rdi
0xa18e:	sub	ecx, 1
0xa191:	mov	qword ptr [rsi + 0x10], rax
0xa195:	jmp	0xa0db


0xa139:	add	ecx, 1
0xa13c:	add	rax, r10
0xa13f:	mov	dword ptr [rbx + 0x10], r9d
0xa143:	cmp	ecx, r8d
0xa146:	mov	qword ptr [rbx + 8], rax
0xa14a:	jb	0xa0e3


0xa0bd:	mov	esi, r15d
0xa0c0:	add	r15d, 1
0xa0c4:	lea	rdi, [rsi + rsi*2]
0xa0c8:	mov	rsi, qword ptr [r14 + 0x28]
0xa0cc:	lea	rbx, [rsi + rdi*8]
0xa0d0:	mov	qword ptr [rbx], rdx
0xa0d3:	mov	qword ptr [rbx + 8], rax
0xa0d7:	mov	dword ptr [rbx + 0x10], r9d
0xa0db:	add	ecx, 1
0xa0de:	cmp	ecx, r8d
0xa0e1:	jae	0xa150


0xa038:	test	r15d, r15d
0xa03b:	je	0xa0b0


0xa0db:	add	ecx, 1
0xa0de:	cmp	ecx, r8d
0xa0e1:	jae	0xa150


0x1135e:	test	eax, eax
0x11360:	je	0x1136a


0x11362:	test	dword ptr [rbx], 0x100
0x11368:	jne	0x11378


0x11378:	mov	rdi, rbx
0x1137b:	mov	edx, 1
0x11380:	xor	esi, esi
0x11382:	call	0x113c0


0x117a7:	mov	edi, eax
0x117a9:	call	0xf950


0x117ae:	mov	rsi, qword ptr [rsp + 0x18]
0x117b3:	xor	rsi, qword ptr fs:[0x28]
0x117bc:	jne	0x117e9


0x117be:	add	rsp, 0x58
0x117c2:	ret	


0x117e9:	call	0x2930


0x12655:	mov	ebx, eax
0x12657:	jmp	0x125f0


0x125f0:	mov	rcx, qword ptr [rsp + 0x18]
0x125f5:	xor	rcx, qword ptr fs:[0x28]
0x125fe:	mov	eax, ebx
0x12600:	jne	0x1275d


0x12606:	add	rsp, 0x50
0x1260a:	pop	rbx
0x1260b:	pop	rbp
0x1260c:	pop	r12
0x1260e:	ret	


0x1275d:	call	0x2930


0x125e9:	mov	ebx, eax
0x125eb:	nop	dword ptr [rax + rax]
0x125f0:	mov	rcx, qword ptr [rsp + 0x18]
0x125f5:	xor	rcx, qword ptr fs:[0x28]
0x125fe:	mov	eax, ebx
0x12600:	jne	0x1275d


0x126ac:	mov	ebx, eax
0x126ae:	jmp	0x125f0


0x12595:	test	eax, eax
0x12597:	mov	ebx, eax
0x12599:	js	0x12728


0x12728:	call	0x2770


0x1259f:	mov	dword ptr [rip + 0x20816b], 1
0x125a9:	jmp	0x125f0


0x126bc:	test	eax, eax
0x126be:	mov	ebx, eax
0x126c0:	js	0x125f0


0x126c6:	cmp	dword ptr [rip + 0x208047], -1
0x126cd:	jne	0x125f0


0x126d3:	xor	eax, eax
0x126d5:	mov	esi, 1
0x126da:	mov	edi, ebx
0x126dc:	call	0x2820


0x126e1:	test	eax, eax
0x126e3:	js	0x12701


0x12701:	call	0x2770


0x126e5:	or	eax, 1
0x126e8:	mov	esi, 2
0x126ed:	mov	edi, ebx
0x126ef:	mov	edx, eax
0x126f1:	xor	eax, eax
0x126f3:	call	0x2820


0x126f8:	cmp	eax, -1
0x126fb:	jne	0x125f0


0x12773:	mov	ebx, eax
0x12775:	jmp	0x125f0


0x2ebb:	lea	rsi, [rip + 0x12184]
0x2ec2:	mov	edi, 6
0x2ec7:	call	0x2c50


0x8fcf:	test	eax, eax
0x8fd1:	movzx	r8d, byte ptr [rbp - 0x350]
0x8fd9:	movzx	r9d, byte ptr [rbp - 0x358]
0x8fe1:	je	0x7671


0x7671:	mov	rax, qword ptr [rbp - 0x158]
0x7678:	cmp	qword ptr [rbp - 0xc8], rax
0x767f:	jne	0x5c9f


0x8fe7:	jmp	0x5c9f


0x9012:	test	eax, eax
0x9014:	movzx	r8d, byte ptr [rbp - 0x350]
0x901c:	movzx	r9d, byte ptr [rbp - 0x358]
0x9024:	je	0x75dc


0x75dc:	mov	eax, dword ptr [r12 + 0x18]
0x75e1:	and	eax, 0xf000
0x75e6:	cmp	eax, 0xa000
0x75eb:	je	0x8fa9


0x902a:	jmp	0x5c9f


0x1066d:	test	eax, eax
0x1066f:	setne	al
0x10672:	jmp	0x10534


0x10534:	test	al, al
0x10536:	jne	0x10703


0x1068d:	test	eax, eax
0x1068f:	setne	al
0x10692:	jmp	0x1058e


0x1058e:	test	al, al
0x10590:	jne	0x10703


0x5b5c:	test	eax, eax
0x5b5e:	mov	rsi, r12
0x5b61:	setne	al
0x5b64:	test	al, al
0x5b66:	jne	0x6365


0x5b6c:	mov	eax, dword ptr [rbp - 0x268]
0x5b72:	mov	dword ptr [rbp - 0x314], eax
0x5b78:	and	eax, 0xf000
0x5b7d:	cmp	eax, 0x4000
0x5b82:	je	0x6648


0x6365:	mov	edi, 4
0x636a:	call	0xeab0


0x6648:	movzx	r12d, byte ptr [rbx + 0x2a]
0x664d:	test	r12b, r12b
0x6650:	jne	0x5b88


0x6656:	mov	rsi, qword ptr [rbp - 0x310]
0x665d:	mov	edi, 4
0x6662:	call	0xeab0


0x3954:	test	eax, eax
0x3956:	jne	0x3975


0x3958:	mov	edx, dword ptr [rbx + 0x18]
0x395b:	and	edx, 0xf000
0x3961:	cmp	edx, 0x4000
0x3967:	je	0x39ad


0x3975:	call	0x2770


0x39ad:	mov	eax, 1
0x39b2:	jmp	0x396c


0x3969:	and	eax, 1
0x396c:	pop	rbx
0x396d:	pop	rbp
0x396e:	pop	r12
0x3970:	pop	r13
0x3972:	pop	r14
0x3974:	ret	


0x396c:	pop	rbx
0x396d:	pop	rbp
0x396e:	pop	r12
0x3970:	pop	r13
0x3972:	pop	r14
0x3974:	ret	


0x4bca:	test	al, al
0x4bcc:	jne	0x4c10


0x4bce:	cmp	r12d, 2
0x4bd2:	je	0x4872


0x4c10:	sub	r12d, 1
0x4c14:	movsxd	rax, r12d
0x4c17:	mov	rax, qword ptr [rbx + rax*8]
0x4c1b:	test	rax, rax
0x4c1e:	mov	qword ptr [rbp - 0xf8], rax
0x4c25:	jne	0x4944


0x4bd8:	mov	rsi, qword ptr [r13]
0x4bdc:	mov	edi, 4
0x4be1:	call	0xeab0


0x4c2b:	jmp	0x4872


0x4e01:	test	eax, eax
0x4e03:	mov	ebx, eax
0x4e05:	js	0x4e10


0x4e10:	call	0x2770


0x4e07:	mov	eax, ebx
0x4e09:	pop	rbx
0x4e0a:	ret	


0x5172:	test	rax, rax
0x5175:	js	0x51f0


0x51f0:	mov	rsi, r13
0x51f3:	mov	edi, 4
0x51f8:	call	0xeab0


0x5177:	test	r12b, r12b
0x517a:	jne	0x5190


0x517c:	add	rsp, 8
0x5180:	mov	eax, 1
0x5185:	pop	rbx
0x5186:	pop	rbp
0x5187:	pop	r12
0x5189:	pop	r13
0x518b:	ret	


0x5190:	sub	rax, rbx
0x5193:	mov	rdx, rbx
0x5196:	mov	edi, ebp
0x5198:	mov	rsi, rax
0x519b:	call	0x4df0


0x51a0:	test	eax, eax
0x51a2:	jns	0x517c


0x51a4:	mov	rsi, r13
0x51a7:	mov	edi, 4
0x51ac:	call	0xeab0


0x54cd:	test	al, al
0x54cf:	movzx	r9d, byte ptr [rsp + 0x1e]
0x54d5:	jne	0x542f


0x54db:	mov	r15d, eax
0x54de:	jmp	0x5315


0x11001:	test	eax, eax
0x11003:	mov	byte ptr [rip + 0x209707], 1
0x1100a:	sete	al
0x1100d:	mov	byte ptr [rip + 0x2096fd], al
0x11013:	add	rsp, 8
0x11017:	ret	


0x57f0:	test	eax, eax
0x57f2:	mov	dword ptr [rbx + 0x34], 0xffffffff
0x57f9:	sete	al
0x57fc:	mov	byte ptr [rbx + 0x1b], al
0x57ff:	mov	byte ptr [rbx + 0x1a], al
0x5802:	pop	rbx
0x5803:	ret	


0xc87d:	jmp	0xc882


0xc8f9:	mov	rax, qword ptr [rsp]
0xc8fd:	mov	qword ptr [rbp], rax
0xc901:	mov	rax, qword ptr [rsp + 8]
0xc906:	mov	qword ptr [rbp + 8], rax
0xc90a:	mov	rax, qword ptr [rsp + 0x10]
0xc90f:	mov	qword ptr [rbp + 0x10], rax
0xc913:	mov	rax, qword ptr [rsp + 0x18]
0xc918:	mov	qword ptr [rbp + 0x18], rax
0xc91c:	mov	rax, qword ptr [rsp + 0x48]
0xc921:	mov	qword ptr [rbp + 0x48], rax
0xc925:	jmp	0xc882


0xc6d9:	test	rbx, rbx
0xc6dc:	mov	rdi, rbx
0xc6df:	jne	0xc6d0


0xc6d0:	mov	rbx, qword ptr [rdi + 8]
0xc6d4:	call	0x2e10


0xc6ea:	pop	rbx
0xc6eb:	mov	rdi, r12
0xc6ee:	pop	rbp
0xc6ef:	pop	r12
0xc6f1:	jmp	0x2e10


0xc6a9:	test	rbx, rbx
0xc6ac:	mov	rdi, rbx
0xc6af:	jne	0xc6a0


0xc6a0:	mov	rbx, qword ptr [rdi + 8]
0xc6a4:	call	0x2e10


0xe8fd:	mov	qword ptr [rip + 0x20b77c], rbx
0xe904:	pop	rbx
0xe905:	mov	dword ptr [rip + 0x20b769], 1
0xe90f:	pop	rbp
0xe910:	pop	r12
0xe912:	ret	


0xe8d7:	mov	qword ptr [rip + 0x20b7ae], 0x100
0xe8e2:	mov	qword ptr [rip + 0x20b7af], rbx
0xe8e9:	lea	rbx, [rip + 0x20b7a0]
0xe8f0:	cmp	r12, rbx
0xe8f3:	je	0xe904


0x110ad:	xor	eax, eax
0x110af:	pop	rbx
0x110b0:	ret	


0xe8bc:	cmp	rbx, rbp
0xe8bf:	jne	0xe8b0


0xe8b0:	mov	rdi, qword ptr [rbx]
0xe8b3:	add	rbx, 0x10
0xe8b7:	call	0x2e10


0x9d3d:	mov	rdi, rbx
0x9d40:	pop	rbx
0x9d41:	jmp	0x2e10


0xcefc:	mov	rdi, rbx
0xceff:	pop	rbx
0xcf00:	jmp	0x2e10


0xcf2a:	test	eax, eax
0xcf2c:	js	0xcf80


0xcf80:	add	rsp, 8
0xcf84:	xor	ebp, ebp
0xcf86:	pop	rbx
0xcf87:	mov	rax, rbp
0xcf8a:	pop	rbp
0xcf8b:	pop	r12
0xcf8d:	pop	r13
0xcf8f:	ret	


0xcf2e:	mov	edi, eax
0xcf30:	mov	ebx, eax
0xcf32:	call	0x2d20


0x2d20:	jmp	qword ptr [rip + 0x21722a]




0xd271:	cmp	r15d, 0xa
0xd275:	mov	qword ptr [rsp + 0x58], rax
0xd27a:	ja	0xe42f


0xd280:	lea	rcx, [rip + 0x8119]
0xd287:	mov	edx, r15d
0xd28a:	movsxd	rax, dword ptr [rcx + rdx*4]
0xd28e:	add	rax, rcx
0xd291:	jmp	rax


0xe42f:	call	0x2760


0xedeb:	mov	rbx, rax
0xedee:	mov	r15d, eax
0xedf1:	call	0x2770


0xf036:	test	rax, rax
0xf039:	mov	rbp, rax
0xf03c:	jns	0xf060


0xf03e:	call	0x2770


0xf060:	add	rsp, 8
0xf064:	mov	rax, rbp
0xf067:	pop	rbx
0xf068:	pop	rbp
0xf069:	pop	r12
0xf06b:	pop	r13
0xf06d:	ret	


0xbb1e:	cmp	rax, -1
0xbb22:	jne	0xbb00


0xbb00:	test	rax, rax
0xbb03:	je	0xbb38


0xbb38:	call	0x2770


0xbb05:	add	r12, rax
0xbb08:	add	rbp, rax
0xbb0b:	sub	rbx, rax
0xbb0e:	je	0xbb24


0x6eb6:	test	eax, eax
0x6eb8:	movzx	r8d, byte ptr [rbp - 0x350]
0x6ec0:	movzx	r9d, byte ptr [rbp - 0x358]
0x6ec8:	je	0x7ed2


0x7ed2:	lea	rax, [rbp - 0xd0]
0x7ed9:	mov	rsi, qword ptr [rbp - 0x310]
0x7ee0:	mov	edi, 1
0x7ee5:	mov	rdx, rax
0x7ee8:	mov	qword ptr [rbp - 0x368], rax
0x7eef:	call	0x2910


0x7ef4:	test	eax, eax
0x7ef6:	movzx	r8d, byte ptr [rbp - 0x350]
0x7efe:	movzx	r9d, byte ptr [rbp - 0x358]
0x7f06:	jne	0x6ece


0x7f0c:	xor	ecx, ecx
0x7f0e:	mov	rax, qword ptr [rbp - 0x158]
0x7f15:	cmp	qword ptr [rbp - 0xc8], rax
0x7f1c:	jne	0x7f2f


0x7f1e:	mov	rax, qword ptr [rbp - 0x160]
0x7f25:	cmp	qword ptr [rbp - 0xd0], rax
0x7f2c:	sete	cl
0x7f2f:	mov	eax, dword ptr [rbp - 0xb8]
0x7f35:	mov	rdx, qword ptr [rbp - 0x368]
0x7f3c:	and	eax, 0xf000
0x7f41:	cmp	eax, 0xa000
0x7f46:	jne	0x7032


0x7f2f:	mov	eax, dword ptr [rbp - 0xb8]
0x7f35:	mov	rdx, qword ptr [rbp - 0x368]
0x7f3c:	and	eax, 0xf000
0x7f41:	cmp	eax, 0xa000
0x7f46:	jne	0x7032


0x7f4c:	mov	eax, dword ptr [rbp - 0x148]
0x7f52:	and	eax, 0xf000
0x7f57:	cmp	eax, 0xa000
0x7f5c:	jne	0x7032


0x7f62:	cmp	byte ptr [rbx + 0x15], 0
0x7f66:	je	0x7032


0x7f6c:	jmp	0x6ece


0x7718:	test	eax, eax
0x771a:	jne	0x8125


0x7720:	mov	r12d, dword ptr [rbp - 0x1d8]
0x7727:	mov	byte ptr [rbp - 0x330], 0
0x772e:	mov	eax, r12d
0x7731:	and	eax, 0x1c0
0x7736:	cmp	eax, 0x1c0
0x773b:	je	0x7768


0x8125:	mov	rsi, qword ptr [rbp - 0x308]
0x812c:	mov	edi, 4
0x8131:	call	0xeab0


0x7768:	mov	rax, qword ptr [rbp - 0x338]
0x776f:	cmp	byte ptr [rax], 0
0x7772:	je	0x856c


0x773d:	mov	rdi, qword ptr [rbp - 0x308]
0x7744:	mov	esi, r12d
0x7747:	or	esi, 0x1c0
0x774d:	call	0x2c90


0x856c:	mov	rdx, qword ptr [rbp - 0x1f0]
0x8573:	mov	rsi, qword ptr [rbp - 0x1e8]
0x857a:	mov	rdi, qword ptr [rbp - 0x308]
0x8581:	call	0x9e20


0x7778:	cmp	byte ptr [rbx + 0x2e], 0
0x777c:	je	0x77c8


0x777e:	cmp	byte ptr [rbx + 0x18], 0
0x7782:	je	0x862d


0x862d:	mov	rsi, qword ptr [rbp - 0x308]
0x8634:	mov	rdi, qword ptr [rbp - 0x310]
0x863b:	xor	edx, edx
0x863d:	call	0x4e30


0x7788:	mov	rsi, qword ptr [rbp - 0x308]
0x778f:	mov	edi, 4
0x7794:	call	0xeab0


0x7752:	test	eax, eax
0x7754:	mov	dword ptr [rbp - 0x38c], r12d
0x775b:	mov	byte ptr [rbp - 0x330], 1
0x7762:	jne	0x8783


0x8783:	mov	rsi, qword ptr [rbp - 0x308]
0x878a:	mov	edi, 4
0x878f:	call	0xeab0


0x1095a:	test	eax, eax
0x1095c:	jne	0x108c0


0x10962:	cmp	qword ptr [rsp + 8], 0
0x10968:	jne	0x10819


0x1096e:	jmp	0x10830


0x10902:	test	eax, eax
0x10904:	jne	0x108c0


0x10906:	mov	rdx, qword ptr [rsp + 8]
0x1090b:	cmp	qword ptr [rdx + 8], 0x3ffffffe
0x10913:	je	0x10978


0x10978:	mov	rax, qword ptr [rsp + 0x80]
0x10980:	mov	rcx, qword ptr [rsp + 0x78]
0x10985:	mov	ebx, 3
0x1098a:	mov	qword ptr [rdx], rcx
0x1098d:	mov	qword ptr [rdx + 8], rax
0x10991:	jmp	0x107ce


0x10915:	cmp	qword ptr [rdx + 0x18], 0x3ffffffe
0x1091d:	mov	ebx, 3
0x10922:	jne	0x107ce


0x10928:	mov	rax, qword ptr [rsp + 0x90]
0x10930:	mov	rcx, qword ptr [rsp + 0x88]
0x10938:	mov	qword ptr [rdx + 0x18], rax
0x1093c:	mov	qword ptr [rdx + 0x10], rcx
0x10940:	jmp	0x107ce


0x108b7:	test	eax, eax
0x108b9:	je	0x10830


0x91ef:	test	eax, eax
0x91f1:	je	0x886a


0x91f7:	mov	rsi, qword ptr [rbp - 0x308]
0x91fe:	jmp	0x6365


0x605d:	test	eax, eax
0x605f:	movzx	r8d, byte ptr [rbp - 0x328]
0x6067:	je	0x80b2


0x80b2:	mov	rdi, qword ptr [rbx + 0x40]
0x80b6:	mov	rsi, qword ptr [rbp - 0x308]
0x80bd:	mov	rdx, r12
0x80c0:	call	0xb730


0x80c5:	movzx	r8d, byte ptr [rbp - 0x328]
0x80cd:	jmp	0x606d


0x76e2:	test	eax, eax
0x76e4:	jne	0x5ed0


0x76ea:	mov	rcx, qword ptr [rbp - 0x358]
0x76f1:	mov	rdx, rcx
0x76f4:	jmp	0x5e4a


0x6355:	test	eax, eax
0x6357:	mov	rsi, r12
0x635a:	setne	al
0x635d:	test	al, al
0x635f:	je	0x5b6c


0xf69b:	mov	ebx, eax
0xf69d:	call	0x2770


0xf6a2:	test	ebx, ebx
0xf6a4:	je	0xf6c0


0xf6c0:	mov	dword ptr [rax], 0x11
0xf6c6:	mov	eax, 0xffffffff
0xf6cb:	mov	rcx, qword ptr [rsp + 0x98]
0xf6d3:	xor	rcx, qword ptr fs:[0x28]
0xf6dc:	jne	0xf6e7


0xf6a6:	mov	edx, dword ptr [rax]
0xf6a8:	cmp	edx, 0x4b
0xf6ab:	je	0xf6c0


0xf6de:	add	rsp, 0xa0
0xf6e5:	pop	rbx
0xf6e6:	ret	


0xf6e7:	call	0x2930


0xf6ad:	xor	eax, eax
0xf6af:	cmp	edx, 2
0xf6b2:	setne	al
0xf6b5:	neg	eax
0xf6b7:	jmp	0xf6cb


0xf6cb:	mov	rcx, qword ptr [rsp + 0x98]
0xf6d3:	xor	rcx, qword ptr fs:[0x28]
0xf6dc:	jne	0xf6e7


0xbb3d:	mov	dword ptr [rax], 0x1c
0xbb43:	add	rsp, 8
0xbb47:	mov	rax, r12
0xbb4a:	pop	rbx
0xbb4b:	pop	rbp
0xbb4c:	pop	r12
0xbb4e:	pop	r13
0xbb50:	ret	


0xf043:	mov	eax, dword ptr [rax]
0xf045:	cmp	eax, 4
0xf048:	je	0xf028


0xf028:	mov	rdx, rbx
0xf02b:	mov	rsi, r12
0xf02e:	mov	edi, r13d
0xf031:	call	0x2840


0xf04a:	cmp	eax, 0x16
0xf04d:	jne	0xf060


0xf04f:	cmp	rbx, 0x7ff00000
0xf056:	jbe	0xf060


0xf058:	mov	ebx, 0x7ff00000
0xf05d:	jmp	0xf028


0xedf6:	test	ebx, ebx
0xedf8:	js	0xee30


0xee30:	mov	r9, rax
0xee33:	mov	eax, dword ptr [rax]
0xee35:	lea	ecx, [rax - 0x16]
0xee38:	and	ecx, 0xffffffef
0xee3b:	setne	bl
0xee3e:	cmp	eax, 0x5f
0xee41:	setne	al
0xee44:	and	bl, al
0xee46:	jne	0xedfa


0xedfa:	mov	rdx, qword ptr [rsp + 0x138]
0xee02:	xor	rdx, qword ptr fs:[0x28]
0xee0b:	mov	eax, r15d
0xee0e:	jne	0xf005


0xee48:	test	ebp, ebp
0xee4a:	jne	0xeea0


0xee14:	add	rsp, 0x148
0xee1b:	pop	rbx
0xee1c:	pop	rbp
0xee1d:	pop	r12
0xee1f:	pop	r13
0xee21:	pop	r14
0xee23:	pop	r15
0xee25:	ret	


0xf005:	call	0x2930


0xee4c:	mov	rdi, r12
0xee4f:	mov	qword ptr [rsp + 8], r9
0xee54:	call	0x2900


0xeea0:	and	ebp, 0xfffffffe
0xeea3:	je	0xef10


0xef10:	lea	rcx, [rsp + 0xa0]
0xef18:	mov	r8d, 0x100
0xef1e:	mov	rdx, r13
0xef21:	mov	esi, r14d
0xef24:	mov	edi, 1
0xef29:	mov	qword ptr [rsp + 8], r9
0xef2e:	call	0x2980


0xeea5:	mov	dword ptr [r9], 0x5f
0xeeac:	mov	r15d, 0xffffffff
0xeeb2:	jmp	0xedfa


0xef33:	test	eax, eax
0xef35:	mov	r9, qword ptr [rsp + 8]
0xef3a:	je	0xef58


0xef58:	mov	dword ptr [r9], 0x11
0xef5f:	mov	r15d, 0xffffffff
0xef65:	jmp	0xedfa


0xef3c:	mov	eax, dword ptr [r9]
0xef3f:	cmp	eax, 0x4b
0xef42:	je	0xef58


0xef44:	cmp	eax, 2
0xef47:	je	0xefb8


0xefb8:	mov	ebx, 1
0xefbd:	jmp	0xee4c


0xef49:	mov	r15d, 0xffffffff
0xef4f:	jmp	0xedfa


0x5db8:	test	eax, eax
0x5dba:	jne	0x6930


0x5dc0:	mov	rax, qword ptr [rbp - 0x320]
0x5dc7:	mov	r14d, r12d
0x5dca:	test	rax, rax
0x5dcd:	je	0x5dd8


0x6930:	call	0x2770


0x5dcf:	mov	byte ptr [rax], 1
0x5dd2:	nop	word ptr [rax + rax]
0x5dd8:	cmp	byte ptr [rbx + 0x31], 0
0x5ddc:	jne	0x5df0


0x6935:	mov	r15d, dword ptr [rax]
0x6938:	jmp	0x5b0b


0x4e15:	mov	eax, dword ptr [rax]
0x4e17:	cmp	eax, 0x26
0x4e1a:	je	0x4e21


0x4e21:	xor	ebx, ebx
0x4e23:	mov	eax, ebx
0x4e25:	pop	rbx
0x4e26:	ret	


0x4e1c:	cmp	eax, 0x5f
0x4e1f:	jne	0x4e07


0x397a:	mov	r12d, dword ptr [rax]
0x397d:	test	r12d, r12d
0x3980:	jne	0x3997


0x3982:	mov	eax, dword ptr [rbx + 0x18]
0x3985:	and	eax, 0xf000
0x398a:	cmp	eax, 0x4000
0x398f:	sete	al
0x3992:	movzx	eax, al
0x3995:	jmp	0x3969


0x3997:	cmp	r12d, 2
0x399b:	je	0x39b4


0x39b4:	mov	byte ptr [r14], 1
0x39b8:	xor	eax, eax
0x39ba:	jmp	0x396c


0x399d:	test	r13b, r13b
0x39a0:	je	0x39bc


0x39bc:	mov	rsi, rbp
0x39bf:	mov	edi, 4
0x39c4:	call	0xeab0


0x39a2:	mov	dword ptr [rbx + 0x18], 0
0x39a9:	xor	eax, eax
0x39ab:	jmp	0x396c


0x12706:	mov	r12d, dword ptr [rax]
0x12709:	mov	rbp, rax
0x1270c:	mov	edi, ebx
0x1270e:	call	0x2a30


0x2a30:	jmp	qword ptr [rip + 0x2173a2]




0x1272d:	cmp	dword ptr [rax], 0x16
0x12730:	jne	0x1259f


0x12736:	xor	esi, esi
0x12738:	xor	eax, eax
0x1273a:	mov	edx, r12d
0x1273d:	mov	edi, ebp
0x1273f:	call	0x2820


0x12744:	test	eax, eax
0x12746:	mov	ebx, eax
0x12748:	js	0x125f0


0x1274e:	mov	dword ptr [rip + 0x207fbc], 0xffffffff
0x12758:	jmp	0x126d3


0x88f8:	mov	r12, rax
0x88fb:	movabs	rax, 0xff000000ff00
0x8905:	test	qword ptr [rbx + 0x20], rax
0x8909:	jne	0x9195


0x890f:	cmp	dword ptr [rbp - 0x328], 0
0x8916:	js	0x91a2


0x9195:	cmp	dword ptr [rbp - 0x328], 0
0x919c:	jns	0x93ee


0x91a2:	movzx	r9d, byte ptr [rbx + 0x16]
0x91a7:	test	r9b, r9b
0x91aa:	jne	0x8dc0


0x891c:	mov	dword ptr [rbp - 0x378], 0
0x8926:	lea	rax, [rbp - 0xd0]
0x892d:	mov	esi, dword ptr [rbp - 0x328]
0x8933:	mov	edi, 1
0x8938:	mov	rdx, rax
0x893b:	mov	qword ptr [rbp - 0x368], rax
0x8942:	call	0x2bf0


0x93ee:	movzx	esi, byte ptr [rbx + 0x25]
0x93f2:	mov	rdi, qword ptr [rbp - 0x308]
0x93f9:	xor	edx, edx
0x93fb:	mov	rcx, rbx
0x93fe:	call	0x56f0


0x91b0:	mov	r8d, dword ptr [r12]
0x91b4:	cmp	r8d, 2
0x91b8:	jne	0x8ed7


0x8dc0:	mov	rdi, qword ptr [rbp - 0x308]
0x8dc7:	call	0x2780


0x91be:	cmp	byte ptr [rbx + 0x18], 0
0x91c2:	jne	0x8ed7


0x8ed7:	mov	rsi, qword ptr [rbp - 0x308]
0x8ede:	mov	edi, 4
0x8ee3:	mov	byte ptr [rbp - 0x330], r9b
0x8eea:	mov	dword ptr [rbp - 0x328], r8d
0x8ef1:	call	0xeab0


0x91c8:	mov	dword ptr [rbp - 0x378], 0
0x91d2:	jmp	0x8e6c


0x8e6c:	mov	eax, dword ptr [rbp - 0x378]
0x8e72:	mov	rdi, qword ptr [rbp - 0x308]
0x8e79:	mov	esi, 0xc1
0x8e7e:	not	eax
0x8e80:	and	eax, dword ptr [rbp - 0x3a4]
0x8e86:	mov	edx, eax
0x8e88:	mov	dword ptr [rbp - 0x330], eax
0x8e8e:	xor	eax, eax
0x8e90:	call	0xb6c0


0x8dcc:	test	eax, eax
0x8dce:	jne	0x9a06


0x8dd4:	cmp	byte ptr [rbx + 0x2e], 0
0x8dd8:	je	0x8e13


0x9a06:	mov	rsi, qword ptr [rbp - 0x308]
0x9a0d:	mov	edi, 4
0x9a12:	call	0xeab0


0x8e13:	movzx	r14d, byte ptr [rbx + 0x21]
0x8e18:	mov	eax, dword ptr [rbp - 0x35c]
0x8e1e:	mov	dword ptr [rbp - 0x378], eax
0x8e24:	test	r14b, r14b
0x8e27:	je	0x8e6c


0x8dda:	mov	rsi, qword ptr [rbp - 0x308]
0x8de1:	mov	edi, 4
0x8de6:	call	0xeab0


0x8e29:	mov	edx, dword ptr [rbp - 0x3a4]
0x8e2f:	mov	rsi, qword ptr [rbp - 0x308]
0x8e36:	mov	r8, rbx
0x8e39:	mov	rdi, qword ptr [rbp - 0x310]
0x8e40:	mov	ecx, 1
0x8e45:	call	0x5620


0x8e4a:	test	al, al
0x8e4c:	mov	r8d, eax
0x8e4f:	mov	qword ptr [rbp - 0x330], 0
0x8e5a:	je	0x7bd8


0x7bd8:	mov	edi, dword ptr [rbp - 0x320]
0x7bde:	mov	byte ptr [rbp - 0x328], r8b
0x7be5:	call	0x2a30


0x8947:	test	eax, eax
0x8949:	mov	dword ptr [rbp - 0x348], eax
0x894f:	jne	0x94f6


0x8955:	cmp	byte ptr [rbp - 0x338], 0
0x895c:	je	0x902f


0x94f6:	mov	rsi, qword ptr [rbp - 0x308]
0x94fd:	mov	edi, 4
0x9502:	call	0xeab0


0x902f:	mov	qword ptr [rbp - 0x330], 0
0x903a:	cmp	byte ptr [rbx + 0x1f], 0
0x903e:	jne	0x9446


0x8962:	cmp	dword ptr [rbx + 0x38], 0
0x8966:	jne	0x97c4


0x9044:	cmp	byte ptr [rbx + 0x1d], 0
0x9048:	je	0x90a4


0x9446:	mov	rax, qword ptr [rbp - 0x238]
0x944d:	mov	rsi, qword ptr [rbp - 0x308]
0x9454:	lea	rdx, [rbp - 0x2a0]
0x945b:	mov	edi, dword ptr [rbp - 0x328]
0x9461:	mov	qword ptr [rbp - 0x2a0], rax
0x9468:	mov	rax, qword ptr [rbp - 0x230]
0x946f:	mov	qword ptr [rbp - 0x298], rax
0x9476:	mov	rax, qword ptr [rbp - 0x228]
0x947d:	mov	qword ptr [rbp - 0x290], rax
0x9484:	mov	rax, qword ptr [rbp - 0x220]
0x948b:	mov	qword ptr [rbp - 0x288], rax
0x9492:	call	0x102f0


0x896c:	call	0x2d70


0x97c4:	mov	edx, dword ptr [rbp - 0x320]
0x97ca:	mov	edi, dword ptr [rbp - 0x328]
0x97d0:	xor	eax, eax
0x97d2:	mov	esi, 0x40049409
0x97d7:	call	0x2a10


0x90a4:	cmp	byte ptr [rbx + 0x27], 0
0x90a8:	je	0x90b7


0x904a:	mov	eax, dword ptr [rbp - 0xb4]
0x9050:	cmp	dword ptr [rbp - 0x264], eax
0x9056:	jne	0x9066


0x2d70:	jmp	qword ptr [rip + 0x217202]


0x90b7:	movabs	rax, 0xff0000000000ff
0x90c1:	test	qword ptr [rbx + 0x18], rax
0x90c5:	jne	0x939d


0x90aa:	test	byte ptr [rbp - 0xb8], 0x80
0x90b1:	je	0x9ade


0x9058:	mov	eax, dword ptr [rbp - 0xb0]
0x905e:	cmp	dword ptr [rbp - 0x260], eax
0x9064:	je	0x90a4


0x9066:	mov	r9, qword ptr [rbp - 0x368]
0x906d:	mov	edx, dword ptr [rbp - 0x328]
0x9073:	lea	rcx, [rbp - 0x280]
0x907a:	mov	rsi, qword ptr [rbp - 0x308]
0x9081:	movzx	r8d, r14b
0x9085:	mov	rdi, rbx
0x9088:	call	0x5840




0x90cb:	cmp	byte ptr [rbx + 0x2b], 0
0x90cf:	jne	0x9b62


0x939d:	mov	r8d, dword ptr [rbp - 0x340]
0x93a4:	mov	ecx, dword ptr [rbp - 0x328]
0x93aa:	mov	rdx, qword ptr [rbp - 0x308]
0x93b1:	mov	esi, dword ptr [rbp - 0x320]
0x93b7:	mov	rdi, qword ptr [rbp - 0x310]
0x93be:	call	0xa5a0


0x9ade:	call	0x2a00


0x90d5:	mov	r12d, r14d
0x90d8:	and	r12b, byte ptr [rbx + 0x20]
0x90dc:	jne	0x99d7


0x9b62:	mov	edx, dword ptr [rbx + 0x10]
0x9b65:	mov	esi, dword ptr [rbp - 0x328]
0x9b6b:	mov	rdi, qword ptr [rbp - 0x308]
0x9b72:	call	0xa630


0x90e2:	cmp	dword ptr [rbp - 0x378], 0
0x90e9:	mov	r8d, 1
0x90ef:	je	0x8d15


0x99d7:	call	0x5a50


0x8d15:	mov	edi, dword ptr [rbp - 0x328]
0x8d1b:	mov	byte ptr [rbp - 0x338], r8b
0x8d22:	call	0x2a30


0x90f5:	mov	byte ptr [rbp - 0x338], r8b
0x90fc:	call	0x5a50


0x9101:	not	eax
0x9103:	test	dword ptr [rbp - 0x378], eax
0x9109:	movzx	r8d, byte ptr [rbp - 0x338]
0x9111:	je	0x8d15


0x9117:	mov	edx, dword ptr [rbp - 0x3a4]
0x911d:	mov	rsi, qword ptr [rbp - 0x308]
0x9124:	mov	edi, dword ptr [rbp - 0x328]
0x912a:	call	0x2e20


0x912f:	test	eax, eax
0x9131:	movzx	r8d, byte ptr [rbp - 0x338]
0x9139:	je	0x8d15


0x913f:	mov	rsi, qword ptr [rbp - 0x308]
0x9146:	mov	edi, 4
0x914b:	call	0xeab0


0x99dc:	mov	esi, dword ptr [rbp - 0x328]
0x99e2:	not	eax
0x99e4:	mov	rdi, qword ptr [rbp - 0x308]
0x99eb:	mov	edx, eax
0x99ed:	mov	r14d, r12d
0x99f0:	and	edx, 0x1b6
0x99f6:	call	0xa630


0x9ae3:	test	eax, eax
0x9ae5:	je	0x90b7


0x9aeb:	mov	rsi, qword ptr [rbp - 0x308]
0x9af2:	mov	edi, dword ptr [rbp - 0x328]
0x9af8:	mov	edx, 0x180
0x9afd:	call	0x2e20


0x9b02:	test	eax, eax
0x9b04:	jne	0x90b7


0x9b0a:	mov	edx, dword ptr [rbp - 0x378]
0x9b10:	mov	rsi, qword ptr [rbp - 0x308]
0x9b17:	mov	edi, dword ptr [rbp - 0x328]
0x9b1d:	not	edx
0x9b1f:	and	edx, dword ptr [rbp - 0x3a4]
0x9b25:	call	0x2e20


0x9b2a:	jmp	0x90b7


0x93c3:	test	eax, eax
0x93c5:	mov	r8d, 1
0x93cb:	je	0x8d15


0x93d1:	jmp	0x9187


0x9187:	movzx	r8d, byte ptr [rbx + 0x24]
0x918c:	xor	r8d, 1
0x9190:	jmp	0x8d15


0x908d:	cmp	eax, -1
0x9090:	je	0x8d12


0x8d12:	xor	r8d, r8d
0x8d15:	mov	edi, dword ptr [rbp - 0x328]
0x8d1b:	mov	byte ptr [rbp - 0x338], r8b
0x8d22:	call	0x2a30


0x9096:	test	eax, eax
0x9098:	jne	0x90a4


0x909a:	and	dword ptr [rbp - 0x340], 0xfffff1ff
0x90a4:	cmp	byte ptr [rbx + 0x27], 0
0x90a8:	je	0x90b7


0x97dc:	test	eax, eax
0x97de:	je	0x902f


0x97e4:	cmp	dword ptr [rbx + 0x38], 2
0x97e8:	jne	0x896c


0x97ee:	mov	rdx, qword ptr [rbp - 0x310]
0x97f5:	mov	esi, 4
0x97fa:	mov	edi, 1
0x97ff:	call	0xe990


0x9497:	test	eax, eax
0x9499:	je	0x9044


0x949f:	mov	rsi, qword ptr [rbp - 0x308]
0x94a6:	mov	edi, 4
0x94ab:	call	0xeab0


0x8ea3:	mov	r8d, dword ptr [rax]
0x8ea6:	mov	r12, rax
0x8ea9:	mov	eax, r14d
0x8eac:	shr	eax, 0x1f
0x8eaf:	cmp	r8d, 0x11
0x8eb3:	sete	dl
0x8eb6:	and	dl, al
0x8eb8:	mov	r14d, edx
0x8ebb:	je	0x92c2


0x92c2:	mov	eax, dword ptr [rbp - 0x328]
0x92c8:	shr	eax, 0x1f
0x92cb:	cmp	r8d, 0x15
0x92cf:	sete	dl
0x92d2:	and	dl, al
0x92d4:	mov	r9d, edx
0x92d7:	je	0x93d6


0x8ec1:	cmp	byte ptr [rbx + 0x18], 0
0x8ec5:	mov	r8d, 0x11
0x8ecb:	je	0x9255


0x93d6:	cmp	dword ptr [rbp - 0x328], 0
0x93dd:	mov	r14d, 1
0x93e3:	jns	0x8926


0x92dd:	mov	rsi, qword ptr [rbp - 0x308]
0x92e4:	mov	r8d, 0x15
0x92ea:	cmp	byte ptr [rsi], 0
0x92ed:	mov	rdi, rsi
0x92f0:	je	0x8ed7


0x9255:	mov	rsi, qword ptr [rbp - 0x308]
0x925c:	lea	rdx, [rbp - 0xd0]
0x9263:	mov	edi, 1
0x9268:	mov	dword ptr [rbp - 0x348], r8d
0x926f:	call	0x2910


0x8ed1:	mov	r9d, 1
0x8ed7:	mov	rsi, qword ptr [rbp - 0x308]
0x8ede:	mov	edi, 4
0x8ee3:	mov	byte ptr [rbp - 0x330], r9b
0x8eea:	mov	dword ptr [rbp - 0x328], r8d
0x8ef1:	call	0xeab0


0x93e9:	jmp	0x8ed1


0x8926:	lea	rax, [rbp - 0xd0]
0x892d:	mov	esi, dword ptr [rbp - 0x328]
0x8933:	mov	edi, 1
0x8938:	mov	rdx, rax
0x893b:	mov	qword ptr [rbp - 0x368], rax
0x8942:	call	0x2bf0


0x92f6:	xor	eax, eax
0x92f8:	or	rcx, 0xffffffffffffffff
0x92fc:	xor	r8d, r8d
0x92ff:	repne scasb	al, byte ptr [rdi]


0x92ff:	repne scasb	al, byte ptr [rdi]


0x9301:	mov	rax, rcx
0x9304:	not	rax
0x9307:	cmp	byte ptr [rsi + rax - 2], 0x2f
0x930c:	setne	r8b
0x9310:	add	r8d, 0x14
0x9314:	jmp	0x8ed7


0x9274:	test	eax, eax
0x9276:	mov	r8d, dword ptr [rbp - 0x348]
0x927d:	jne	0x92c2


0x927f:	mov	eax, dword ptr [rbp - 0xb8]
0x9285:	and	eax, 0xf000
0x928a:	cmp	eax, 0xa000
0x928f:	jne	0x92c2


0x9291:	movzx	r8d, byte ptr [rbx + 0x30]
0x9296:	test	r8b, r8b
0x9299:	je	0x9a87


0x9a87:	mov	rsi, qword ptr [rbp - 0x308]
0x9a8e:	mov	edi, 4
0x9a93:	mov	byte ptr [rbp - 0x328], r8b
0x9a9a:	call	0xeab0


0x929f:	mov	edx, dword ptr [rbp - 0x330]
0x92a5:	mov	rdi, qword ptr [rbp - 0x308]
0x92ac:	mov	esi, 0x41
0x92b1:	xor	eax, eax
0x92b3:	call	0xb6c0


0x92b8:	mov	r8d, dword ptr [r12]
0x92bc:	mov	dword ptr [rbp - 0x328], eax
0x92c2:	mov	eax, dword ptr [rbp - 0x328]
0x92c8:	shr	eax, 0x1f
0x92cb:	cmp	r8d, 0x15
0x92cf:	sete	dl
0x92d2:	and	dl, al
0x92d4:	mov	r9d, edx
0x92d7:	je	0x93d6


0xa52d:	mov	ecx, dword ptr [rsp + 0xc]
0xa531:	mov	r8d, dword ptr [rax]
0xa534:	jmp	0xa473


0xa3d7:	mov	r9d, dword ptr [rsp]
0xa3db:	mov	ecx, dword ptr [rax]
0xa3dd:	jmp	0xa311


0x52d4:	cmp	dword ptr [rax], 4
0x52d7:	je	0x52a6


0x52d9:	mov	rsi, qword ptr [rsp + 0x58]
0x52de:	mov	edi, 4
0x52e3:	mov	rbx, rax
0x52e6:	xor	r15d, r15d
0x52e9:	call	0xeab0


0x109b0:	cmp	dword ptr [rax], 0x26
0x109b3:	jne	0x108d6


0x109b9:	jmp	0x107f6


0x107f0:	mov	dword ptr [rax], 0x26
0x107f6:	test	ebx, ebx
0x107f8:	mov	dword ptr [rip + 0x209f06], 0xffffffff
0x10802:	je	0x108a5


0x5935:	mov	ebx, dword ptr [rax]
0x5937:	mov	r14, rax
0x593a:	cmp	ebx, 1
0x593d:	je	0x5948


0x5948:	mov	edx, r12d
0x594b:	mov	esi, 0xffffffff
0x5950:	mov	rdi, r13
0x5953:	call	0x2c00


0x593f:	cmp	ebx, 0x16
0x5942:	jne	0x58ca


0x58ca:	mov	rdi, rbp
0x58cd:	call	0x5810


0x5958:	mov	dword ptr [r14], ebx
0x595b:	jmp	0x58ca


0x58b0:	mov	r14d, dword ptr [rax]
0x58b3:	mov	r15, rax
0x58b6:	cmp	r14d, 1
0x58ba:	je	0x5a28


0x5a28:	mov	edx, r12d
0x5a2b:	mov	esi, 0xffffffff
0x5a30:	mov	edi, ebx
0x5a32:	call	0x2cf0


0x58c0:	cmp	r14d, 0x16
0x58c4:	je	0x5a28


0x5a37:	mov	dword ptr [r15], r14d
0x5a3a:	jmp	0x58ca


0xa585:	mov	r8d, dword ptr [rax]
0xa588:	jmp	0xa4e8


0xa425:	mov	ecx, dword ptr [rax]
0xa427:	jmp	0xa390


0x10740:	cmp	dword ptr [rax], 0x26
0x10743:	jne	0x106bf


0x10749:	jmp	0x10398


0x10392:	mov	dword ptr [rax], 0x26
0x10398:	test	r13d, r13d
0x1039b:	mov	dword ptr [rip + 0x20a367], 0xffffffff
0x103a5:	mov	dword ptr [rip + 0x20a359], 0xffffffff
0x103af:	jne	0x10510


0x62f5:	mov	r9, rax
0x62f8:	mov	eax, dword ptr [rax]
0x62fa:	cmp	eax, 0x28
0x62fd:	je	0x68d0


0x68d0:	cmp	byte ptr [rbx + 0x16], 0
0x68d4:	jne	0x6c60


0x6303:	cmp	eax, 2
0x6306:	mov	r8d, 1
0x630c:	jne	0x68da


0x68da:	mov	rsi, qword ptr [rbp - 0x308]
0x68e1:	mov	edi, 4
0x68e6:	mov	qword ptr [rbp - 0x310], r9
0x68ed:	xor	r12d, r12d
0x68f0:	call	0xeab0


0x6c60:	xor	r8d, r8d
0x6c63:	jmp	0x6312


0x6312:	xor	r9d, r9d
0x6315:	cmp	r15d, 0x11
0x6319:	je	0x5c7b


0x5c7b:	cmp	dword ptr [rbx + 8], 2
0x5c7f:	je	0x5c9f


0x631f:	mov	r14d, r8d
0x6322:	mov	qword ptr [rbp - 0x350], 0
0x632d:	jmp	0x5e0e


0x63ff:	mov	r15d, dword ptr [rax]
0x6402:	test	r15d, r15d
0x6405:	je	0x628a


0x74b2:	cmp	dword ptr [rax], 2
0x74b5:	mov	r14, rax
0x74b8:	je	0x6471


0x74be:	mov	rdx, qword ptr [rbp - 0x308]
0x74c5:	mov	esi, 4
0x74ca:	mov	edi, 1
0x74cf:	call	0xe990


0x644f:	cmp	dword ptr [rax], 2
0x6452:	mov	r14, rax
0x6455:	jne	0x74be


0x7e84:	cmp	dword ptr [rax], 2
0x7e87:	mov	r15, rax
0x7e8a:	movzx	r9d, byte ptr [rbp - 0x350]
0x7e92:	je	0x81f3


0x7e98:	mov	rsi, r14
0x7e9b:	mov	edi, 4
0x7ea0:	call	0xeab0


0x6105:	cmp	dword ptr [rax], 0x26
0x6108:	je	0x6158


0x1099b:	mov	dword ptr [rax], 0x26
0x109a1:	jmp	0x108c0


0x106fd:	mov	dword ptr [rax], 9
0x10703:	mov	ebp, 0xffffffff
0x10708:	jmp	0x10607


0x56dd:	mov	dword ptr [rax], 0x5f
0x56e3:	add	rsp, 8
0x56e7:	mov	eax, ebx
0x56e9:	pop	rbx
0x56ea:	pop	rbp
0x56eb:	pop	r12
0x56ed:	pop	r13
0x56ef:	ret	


0x102c9:	mov	dword ptr [rax], 0x16
0x102cf:	mov	eax, 0xffffffff
0x102d4:	add	rsp, 8
0x102d8:	ret	


0x563c:	cmp	byte ptr [rbp + 0x23], 0
0x5640:	mov	r12, rax
0x5643:	jne	0x56c0


0x5645:	mov	rsi, r13
0x5648:	mov	edi, 4
0x564d:	mov	dword ptr [r12], 0x5f
0x5655:	call	0xeab0


0x56c0:	movzx	ebx, byte ptr [rbp + 0x26]
0x56c4:	test	bl, bl
0x56c6:	jne	0x5645


0x56cc:	mov	dword ptr [rax], 0x5f
0x56d2:	jmp	0x5687


0x5687:	add	rsp, 8
0x568b:	xor	ebx, 1
0x568e:	mov	eax, ebx
0x5690:	pop	rbx
0x5691:	pop	rbp
0x5692:	pop	r12
0x5694:	pop	r13
0x5696:	ret	


0xf2c7:	xor	r13d, r13d
0xf2ca:	mov	rbp, rax
0xf2cd:	mov	qword ptr [rsp + 0x28], 0
0xf2d6:	mov	qword ptr [rsp + 0x10], 0
0xf2df:	mov	qword ptr [rsp + 0x20], 0
0xf2e8:	jmp	0xf2f4


0xf2f4:	mov	dword ptr [rbp], 0
0xf2fb:	mov	rdi, rbx
0xf2fe:	call	0x2bb0


0x2bb0:	jmp	qword ptr [rip + 0x2172e2]




0x11de9:	mov	rcx, qword ptr [rsp + 8]
0x11dee:	mov	r13, rax
0x11df1:	jmp	0x11e16


0x11e16:	mov	rdx, rbp
0x11e19:	mov	rdi, rbx
0x11e1c:	mov	esi, 1
0x11e21:	call	0x2860


0x2860:	jmp	qword ptr [rip + 0x21748a]




0x2e3c:	lea	rsi, [rip + 0x11905]
0x2e43:	mov	rbx, rax
0x2e46:	mov	edx, 5
0x2e4b:	xor	edi, edi
0x2e4d:	mov	dword ptr [rax], 0x5f
0x2e53:	call	0x28e0


0x56ff:	cmp	byte ptr [rbp + 0x23], 0
0x5703:	mov	rbx, rax
0x5706:	je	0x570e


0x570e:	mov	rdx, r12
0x5711:	mov	dword ptr [rbx], 0x5f
0x5717:	mov	esi, 4
0x571c:	xor	edi, edi
0x571e:	call	0xe990


0x5708:	cmp	byte ptr [rbp + 0x26], 0
0x570c:	je	0x5758


0x5758:	mov	dword ptr [rax], 0x5f
0x575e:	xor	eax, eax
0x5760:	pop	rbx
0x5761:	pop	rbp
0x5762:	pop	r12
0x5764:	ret	


0x9403:	test	al, al
0x9405:	mov	r8d, eax
0x9408:	jne	0x891c


0x940e:	cmp	byte ptr [rbx + 0x26], 0
0x9412:	mov	qword ptr [rbp - 0x330], 0
0x941d:	jne	0x8d15


0x9423:	jmp	0x891c


0x8555:	test	al, al
0x8557:	jne	0x7f8c


0x855d:	cmp	byte ptr [rbx + 0x26], 0
0x8561:	jne	0x6a10


0x8567:	jmp	0x7f8c


0x7d83:	test	al, al
0x7d85:	mov	r15d, eax
0x7d88:	movzx	r8d, byte ptr [rbp - 0x328]
0x7d90:	jne	0x6022


0x7d96:	movzx	r14d, byte ptr [rbx + 0x26]
0x7d9b:	test	r14b, r14b
0x7d9e:	jne	0x6a10


0x7da4:	mov	r15d, r12d
0x7da7:	jmp	0x6022


0x6e06:	jmp	0x629e


0x5819:	mov	edx, dword ptr [rax]
0x581b:	cmp	edx, 1
0x581e:	sete	al
0x5821:	cmp	edx, 0x16
0x5824:	sete	dl
0x5827:	or	al, dl
0x5829:	je	0x5832


0x5832:	pop	rbx
0x5833:	ret	


0x582b:	movzx	eax, byte ptr [rbx + 0x1a]
0x582f:	xor	eax, 1
0x5832:	pop	rbx
0x5833:	ret	


0x58d2:	mov	edx, eax
0x58d4:	xor	eax, eax
0x58d6:	test	dl, dl
0x58d8:	je	0x59d0


0x59d0:	mov	rsi, r13
0x59d3:	mov	edi, 4
0x59d8:	call	0xeab0


0x58de:	add	rsp, 8
0x58e2:	pop	rbx
0x58e3:	pop	rbp
0x58e4:	pop	r12
0x58e6:	pop	r13
0x58e8:	pop	r14
0x58ea:	pop	r15
0x58ec:	ret	


0xe461:	mov	r13, rax
0xe464:	mov	eax, dword ptr [rax]
0xe466:	test	r15d, r15d
0xe469:	mov	rbx, qword ptr [rip + 0x20bc10]
0xe470:	mov	dword ptr [rsp + 0x18], eax
0xe474:	js	0xe5e1


0xe5e1:	call	0x2760


0xe47a:	cmp	dword ptr [rip + 0x20bbf7], r15d
0xe481:	jg	0xe4e5


0xe483:	cmp	r15d, 0x7fffffff
0xe48a:	je	0xe5e6


0xe4e5:	mov	eax, dword ptr [rbp + 4]
0xe4e8:	shl	r15, 4
0xe4ec:	sub	rsp, 8
0xe4f0:	add	rbx, r15
0xe4f3:	lea	r15, [rbp + 8]
0xe4f7:	mov	r8d, dword ptr [rbp]
0xe4fb:	mov	r11, qword ptr [rbx]
0xe4fe:	mov	r12, qword ptr [rbx + 8]
0xe502:	mov	rcx, r14
0xe505:	or	eax, 1
0xe508:	mov	dword ptr [rsp + 0x24], eax
0xe50c:	push	qword ptr [rbp + 0x30]
0xe50f:	mov	r9d, eax
0xe512:	push	qword ptr [rbp + 0x28]
0xe515:	push	r15
0xe517:	mov	rsi, r11
0xe51a:	mov	rdx, qword ptr [rsp + 0x28]
0xe51f:	mov	rdi, r12
0xe522:	mov	qword ptr [rsp + 0x30], r11
0xe527:	call	0xd200


0xe5e6:	call	0x11270


0xe490:	lea	r12d, [r15 + 1]
0xe494:	lea	rax, [rip + 0x20bbf5]
0xe49b:	movsxd	rsi, r12d
0xe49e:	shl	rsi, 4
0xe4a2:	cmp	rbx, rax
0xe4a5:	je	0xe5c0


0xe5c0:	xor	edi, edi
0xe5c2:	call	0x11080


0xe4ab:	mov	rdi, rbx
0xe4ae:	call	0x11080


0xe4b3:	mov	rbx, rax
0xe4b6:	mov	qword ptr [rip + 0x20bbc3], rax
0xe4bd:	movsxd	rdi, dword ptr [rip + 0x20bbb4]
0xe4c4:	mov	edx, r12d
0xe4c7:	xor	esi, esi
0xe4c9:	sub	edx, edi
0xe4cb:	shl	rdi, 4
0xe4cf:	movsxd	rdx, edx
0xe4d2:	add	rdi, rbx
0xe4d5:	shl	rdx, 4
0xe4d9:	call	0x29f0


0x29f0:	jmp	qword ptr [rip + 0x2173c2]




0xe5c7:	movdqa	xmm0, xmmword ptr [rip + 0x20bac1]
0xe5cf:	mov	rbx, rax
0xe5d2:	mov	qword ptr [rip + 0x20baa7], rax
0xe5d9:	movups	xmmword ptr [rax], xmm0
0xe5dc:	jmp	0xe4bd


0xe4bd:	movsxd	rdi, dword ptr [rip + 0x20bbb4]
0xe4c4:	mov	edx, r12d
0xe4c7:	xor	esi, esi
0xe4c9:	sub	edx, edi
0xe4cb:	shl	rdi, 4
0xe4cf:	movsxd	rdx, edx
0xe4d2:	add	rdi, rbx
0xe4d5:	shl	rdx, 4
0xe4d9:	call	0x29f0


0xe5fc:	mov	r12d, dword ptr [rax]
0xe5ff:	mov	rbp, rax
0xe602:	lea	rax, [rip + 0x20c0b7]
0xe609:	test	rbx, rbx
0xe60c:	mov	esi, 0x38
0xe611:	cmove	rbx, rax
0xe615:	mov	rdi, rbx
0xe618:	call	0x11220


0xe732:	mov	r12d, dword ptr [rax]
0xe735:	mov	rbp, rax
0xe738:	lea	rax, [rbx + 8]
0xe73c:	sub	rsp, 8
0xe740:	mov	r9d, dword ptr [rbx + 4]
0xe744:	push	qword ptr [rbx + 0x30]
0xe747:	mov	r8d, dword ptr [rbx]
0xe74a:	push	qword ptr [rbx + 0x28]
0xe74d:	mov	rdx, r15
0xe750:	push	rax
0xe751:	mov	rcx, qword ptr [rsp + 0x28]
0xe756:	mov	rsi, r14
0xe759:	mov	rdi, r13
0xe75c:	call	0xd200


0xe7af:	test	r12, r12
0xe7b2:	mov	r13, rax
0xe7b5:	mov	eax, dword ptr [rax]
0xe7b7:	sete	bpl
0xe7bb:	or	ebp, dword ptr [rbx + 4]
0xe7be:	lea	r10, [rbx + 8]
0xe7c2:	sub	rsp, 8
0xe7c6:	mov	r8d, dword ptr [rbx]
0xe7c9:	mov	rcx, r15
0xe7cc:	mov	dword ptr [rsp + 0x14], eax
0xe7d0:	push	qword ptr [rbx + 0x30]
0xe7d3:	mov	rdx, r14
0xe7d6:	push	qword ptr [rbx + 0x28]
0xe7d9:	push	r10
0xe7db:	xor	esi, esi
0xe7dd:	mov	r9d, ebp
0xe7e0:	xor	edi, edi
0xe7e2:	mov	qword ptr [rsp + 0x40], r10
0xe7e7:	call	0xd200


0xf749:	mov	qword ptr [rsp + 8], rax
0xf74e:	mov	eax, dword ptr [rax]
0xf750:	mov	rdi, r15
0xf753:	mov	dword ptr [rsp + 0x2c], eax
0xf757:	call	0x2900


0xb554:	test	rax, rax
0xb557:	mov	rcx, rax
0xb55a:	je	0xb576


0xb576:	add	rsp, 8
0xb57a:	mov	rax, rcx
0xb57d:	pop	rbx
0xb57e:	pop	rbp
0xb57f:	ret	


0xb55c:	mov	rdx, rbx
0xb55f:	mov	rsi, rbp
0xb562:	mov	rdi, rax
0xb565:	call	0x2b60


0xb56a:	test	rbx, rbx
0xb56d:	mov	rcx, rax
0xb570:	je	0xb580


0xb580:	mov	byte ptr [rax], 0x2e
0xb583:	mov	ebx, 1
0xb588:	jmp	0xb572


0xb572:	mov	byte ptr [rcx + rbx], 0
0xb576:	add	rsp, 8
0xb57a:	mov	rax, rcx
0xb57d:	pop	rbx
0xb57e:	pop	rbp
0xb57f:	ret	


0xb4b9:	test	rax, rax
0xb4bc:	je	0xb4c3


0xb4c3:	call	0x11270


0xb4be:	add	rsp, 8
0xb4c2:	ret	


0x6958:	lea	r8, [rip + 0xc0da]
0x695f:	mov	rdi, rax
0x6962:	mov	ecx, 2
0x6967:	mov	r12, rax
0x696a:	mov	rsi, r8
0x696d:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x696d:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x696f:	seta	al
0x6972:	sbb	al, 0
0x6974:	test	al, al
0x6976:	jne	0x7c58


0x697c:	mov	rdi, r12
0x697f:	call	0x2e10


0x7c58:	lea	rdx, [rbp - 0x160]
0x7c5f:	mov	rsi, r8
0x7c62:	mov	edi, 1
0x7c67:	call	0x2ba0


0x7c6c:	test	eax, eax
0x7c6e:	jne	0x697c


0x7c74:	lea	rdx, [rbp - 0xd0]
0x7c7b:	mov	rsi, r12
0x7c7e:	mov	edi, 1
0x7c83:	call	0x2ba0


0x7c88:	test	eax, eax
0x7c8a:	jne	0x697c


0x7c90:	mov	rax, qword ptr [rbp - 0xc8]
0x7c97:	cmp	qword ptr [rbp - 0x158], rax
0x7c9e:	je	0x8da7


0x8da7:	mov	rax, qword ptr [rbp - 0xd0]
0x8dae:	cmp	qword ptr [rbp - 0x160], rax
0x8db5:	jne	0x7ca4


0x7ca4:	mov	rdi, r12
0x7ca7:	call	0x2e10


0x8dbb:	jmp	0x697c


0x7cac:	mov	rdx, qword ptr [rbp - 0x308]
0x7cb3:	mov	esi, 3
0x7cb8:	xor	edi, edi
0x7cba:	call	0xebb0


0xf0a0:	mov	rcx, rsp
0xf0a3:	mov	r8d, 0x100
0xf0a9:	mov	rdx, rax
0xf0ac:	mov	esi, r13d
0xf0af:	mov	edi, 1
0xf0b4:	mov	rbx, rax
0xf0b7:	call	0x2980


0xf0bc:	test	eax, eax
0xf0be:	jne	0xf170


0xf0c4:	mov	rdi, rbx
0xf0c7:	call	0x2e10


0xf170:	call	0x2770


0xf175:	mov	esi, dword ptr [rax]
0xf177:	lea	rdx, [rip + 0x600f]
0xf17e:	mov	rcx, rbx
0xf181:	mov	edi, 1
0xf186:	xor	eax, eax
0xf188:	call	0x2cb0


0x2cb0:	jmp	qword ptr [rip + 0x217262]




0xf0cc:	mov	rdi, r12
0xf0cf:	call	0xb4b0


0xf0d4:	lea	rcx, [rsp + 0x90]
0xf0dc:	mov	r8d, 0x100
0xf0e2:	mov	rdx, rax
0xf0e5:	mov	esi, ebp
0xf0e7:	mov	edi, 1
0xf0ec:	mov	rbx, rax
0xf0ef:	call	0x2980


0xf0f4:	test	eax, eax
0xf0f6:	jne	0xf148


0xf0f8:	xor	ebp, ebp
0xf0fa:	mov	rax, qword ptr [rsp + 0x98]
0xf102:	cmp	qword ptr [rsp + 8], rax
0xf107:	jne	0xf119


0xf148:	call	0x2770


0xf109:	mov	rax, qword ptr [rsp + 0x90]
0xf111:	cmp	qword ptr [rsp], rax
0xf115:	sete	bpl
0xf119:	mov	rdi, rbx
0xf11c:	call	0x2e10


0xf119:	mov	rdi, rbx
0xf11c:	call	0x2e10


0xf121:	mov	rdx, qword ptr [rsp + 0x128]
0xf129:	xor	rdx, qword ptr fs:[0x28]
0xf132:	mov	eax, ebp
0xf134:	jne	0xf192


0xf136:	add	rsp, 0x138
0xf13d:	pop	rbx
0xf13e:	pop	rbp
0xf13f:	pop	r12
0xf141:	pop	r13
0xf143:	ret	


0xf192:	call	0x2930


0xf14d:	mov	esi, dword ptr [rax]
0xf14f:	lea	rdx, [rip + 0x6037]
0xf156:	mov	rcx, rbx
0xf159:	mov	edi, 1
0xf15e:	xor	eax, eax
0xf160:	call	0x2cb0


0xa277:	mov	r12, rax
0xa27a:	xor	eax, eax
0xa27c:	test	r12, r12
0xa27f:	je	0xa2a3


0xa2a3:	pop	rbx
0xa2a4:	pop	rbp
0xa2a5:	pop	r12
0xa2a7:	ret	


0xfb4e:	test	rax, rax
0xfb51:	mov	rsi, rax
0xfb54:	mov	qword ptr [rip + 0x20ab9d], rax
0xfb5b:	mov	rdx, qword ptr [rsp + 0x10]
0xfb60:	mov	r9d, dword ptr [rsp + 0x18]
0xfb65:	mov	r10d, dword ptr [rsp + 0x20]
0xfb6a:	mov	r11, qword ptr [rsp + 0x28]
0xfb6f:	je	0xfb98


0xfb98:	lea	rcx, [rsp + 0x50]
0xfb9d:	mov	rax, qword ptr [rbp]
0xfba1:	mov	rdi, rdx
0xfba4:	mov	qword ptr [rsp + 0x30], r11
0xfba9:	mov	dword ptr [rsp + 0x28], r10d
0xfbae:	mov	rsi, rcx
0xfbb1:	mov	dword ptr [rsp + 0x20], r9d
0xfbb6:	mov	qword ptr [rsp + 0x18], rcx
0xfbbb:	mov	qword ptr [rsp + 0x50], rax
0xfbc0:	call	0xc160


0xfb71:	mov	dword ptr [rax + 8], 0x77359400
0xfb78:	mov	byte ptr [rax + 0xc], 0
0xfb7c:	jmp	0xfa59


0xa6c8:	test	rax, rax
0xa6cb:	mov	rbp, rax
0xa6ce:	je	0xa70b


0xa70b:	add	rsp, 8
0xa70f:	mov	rax, rbp
0xa712:	pop	rbx
0xa713:	pop	rbp
0xa714:	pop	r12
0xa716:	pop	r13
0xa718:	pop	r14
0xa71a:	pop	r15
0xa71c:	ret	


0xa6d0:	mov	rdx, rbx
0xa6d3:	mov	rsi, rax
0xa6d6:	mov	rdi, r13
0xa6d9:	call	0x2810


0x2810:	jmp	qword ptr [rip + 0x2174b2]




0x86f3:	test	rax, rax
0x86f6:	mov	r12, rax
0x86f9:	je	0x8f43


0x8f43:	mov	rsi, qword ptr [rbp - 0x310]
0x8f4a:	mov	edi, 4
0x8f4f:	call	0xeab0


0x86ff:	movzx	ecx, byte ptr [rbx + 0x16]
0x8703:	mov	rdx, qword ptr [rbp - 0x308]
0x870a:	mov	r8d, 0xffffffff
0x8710:	mov	esi, 0xffffff9c
0x8715:	mov	rdi, rax
0x8718:	call	0xa440


0x871d:	test	eax, eax
0x871f:	mov	dword ptr [rbp - 0x320], eax
0x8725:	jle	0x8f68


0x8f68:	mov	rdi, r12
0x8f6b:	call	0x2e10


0x872b:	cmp	byte ptr [rbx + 0x2d], 1
0x872f:	jne	0x873a


0x8731:	test	r14b, r14b
0x8734:	je	0x9319


0x873a:	mov	rdi, r12
0x873d:	call	0x2e10


0x9319:	mov	eax, dword ptr [rbp - 0x1d8]
0x931f:	and	eax, 0xf000
0x9324:	cmp	eax, 0xa000
0x9329:	jne	0x873a


0x932f:	or	rcx, 0xffffffffffffffff
0x9333:	mov	eax, r14d
0x9336:	mov	rdi, r12
0x9339:	repne scasb	al, byte ptr [rdi]


0x9339:	repne scasb	al, byte ptr [rdi]


0x933b:	mov	rsi, qword ptr [rbp - 0x1c0]
0x9342:	not	rcx
0x9345:	lea	rax, [rcx - 1]
0x9349:	cmp	rsi, rax
0x934c:	jne	0x873a


0x9352:	mov	rdi, qword ptr [rbp - 0x308]
0x9359:	call	0xa680


0x935e:	test	rax, rax
0x9361:	je	0x873a


0x9367:	mov	rdi, rax
0x936a:	mov	rsi, r12
0x936d:	mov	qword ptr [rbp - 0x328], rax
0x9374:	call	0x2af0


0x9379:	mov	rdx, qword ptr [rbp - 0x328]
0x9380:	test	eax, eax
0x9382:	mov	rdi, rdx
0x9385:	jne	0x9b82


0x938b:	call	0x2e10


0x9b82:	call	0x2e10


0x9b87:	jmp	0x873a


0x9390:	mov	rdi, r12
0x9393:	call	0x2e10


0x9398:	jmp	0x8f70


0x8f70:	movzx	r8d, byte ptr [rbx + 0x25]
0x8f75:	test	r8b, r8b
0x8f78:	jne	0x6b90


0x8f7e:	movzx	eax, byte ptr [rbx + 0x1d]
0x8f82:	test	al, al
0x8f84:	mov	byte ptr [rbp - 0x320], al
0x8f8a:	jne	0x9203


0x8f90:	movzx	r8d, byte ptr [rbp - 0x320]
0x8f98:	mov	byte ptr [rbp - 0x320], 1
0x8f9f:	jmp	0x5fff


0x9203:	mov	edx, dword ptr [rbp - 0x260]
0x9209:	mov	esi, dword ptr [rbp - 0x264]
0x920f:	mov	rdi, qword ptr [rbp - 0x308]
0x9216:	mov	byte ptr [rbp - 0x328], r8b
0x921d:	call	0x2c00


0x9222:	test	eax, eax
0x9224:	movzx	r8d, byte ptr [rbp - 0x328]
0x922c:	je	0x5fff


0x9232:	mov	rdi, rbx
0x9235:	call	0x5810


0x923a:	test	al, al
0x923c:	movzx	r8d, byte ptr [rbp - 0x328]
0x9244:	je	0x9a44


0x9a44:	lea	rsi, [rip + 0x96ad]
0x9a4b:	xor	edi, edi
0x9a4d:	mov	edx, 5
0x9a52:	call	0x28e0


0x924a:	mov	byte ptr [rbp - 0x320], al
0x9250:	jmp	0x5fff


0x8742:	mov	rsi, qword ptr [rbp - 0x308]
0x8749:	mov	edi, 4
0x874e:	call	0xeab0


0xc413:	test	rax, rax
0xc416:	mov	rbx, rax
0xc419:	je	0xc4ca


0xc4ca:	add	rsp, 8
0xc4ce:	mov	rax, rbx
0xc4d1:	pop	rbx
0xc4d2:	pop	rbp
0xc4d3:	pop	r12
0xc4d5:	pop	r13
0xc4d7:	pop	r14
0xc4d9:	pop	r15
0xc4db:	ret	


0xc41f:	test	r15, r15
0xc422:	lea	rdi, [rax + 0x28]
0xc426:	je	0xc4e0


0xc4e0:	lea	rax, [rip + 0x8db9]
0xc4e7:	mov	qword ptr [rbx + 0x28], rax
0xc4eb:	call	0xbd70


0xc42c:	mov	qword ptr [rax + 0x28], r15
0xc430:	call	0xbd70


0xc435:	test	al, al
0xc437:	je	0xc4c0


0xc4c0:	mov	rdi, rbx
0xc4c3:	xor	ebx, ebx
0xc4c5:	call	0x2e10


0xc43d:	cmp	byte ptr [r15 + 0x10], 0
0xc442:	je	0xc540


0xc540:	test	rbp, rbp
0xc543:	movss	xmm1, dword ptr [r15 + 8]
0xc549:	jns	0xc501


0xc448:	mov	rdi, rbp
0xc44b:	call	0xbb60


0xc54b:	mov	rax, rbp
0xc54e:	pxor	xmm0, xmm0
0xc552:	shr	rax, 1
0xc555:	and	ebp, 1
0xc558:	or	rax, rbp
0xc55b:	cvtsi2ss	xmm0, rax
0xc560:	addss	xmm0, xmm0
0xc564:	jmp	0xc50a


0xc501:	pxor	xmm0, xmm0
0xc505:	cvtsi2ss	xmm0, rbp
0xc50a:	divss	xmm0, xmm1
0xc50e:	ucomiss	xmm0, dword ptr [rip + 0x8db7]
0xc515:	jae	0xc4c0


0xc50a:	divss	xmm0, xmm1
0xc50e:	ucomiss	xmm0, dword ptr [rip + 0x8db7]
0xc515:	jae	0xc4c0


0xc517:	ucomiss	xmm0, dword ptr [rip + 0x8db2]
0xc51e:	jb	0xc570


0xc570:	cvttss2si	rbp, xmm0
0xc575:	jmp	0xc448


0xc520:	subss	xmm0, dword ptr [rip + 0x8da8]
0xc528:	movabs	rax, 0x8000000000000000
0xc532:	cvttss2si	rbp, xmm0
0xc537:	xor	rbp, rax
0xc53a:	jmp	0xc448


0xc450:	mov	edx, 8
0xc455:	mov	rbp, rax
0xc458:	xor	ecx, ecx
0xc45a:	mov	rax, rdx
0xc45d:	mul	rbp
0xc460:	jo	0xc57a


0xc57a:	mov	ecx, 1
0xc57f:	jmp	0xc466


0xc466:	test	rax, rax
0xc469:	js	0xc4c0


0xc46b:	test	rcx, rcx
0xc46e:	jne	0xc4c0


0xc470:	test	rbp, rbp
0xc473:	mov	qword ptr [rbx + 0x10], rbp
0xc477:	je	0xc4c0


0xc479:	mov	esi, 0x10
0xc47e:	mov	rdi, rbp
0xc481:	call	0x2ad0


0xc486:	test	rax, rax
0xc489:	mov	qword ptr [rbx], rax
0xc48c:	je	0xc4c0


0xc48e:	shl	rbp, 4
0xc492:	mov	qword ptr [rbx + 0x18], 0
0xc49a:	mov	qword ptr [rbx + 0x20], 0
0xc4a2:	add	rbp, rax
0xc4a5:	mov	qword ptr [rbx + 0x30], r12
0xc4a9:	mov	qword ptr [rbx + 0x38], r13
0xc4ad:	mov	qword ptr [rbx + 8], rbp
0xc4b1:	mov	qword ptr [rbx + 0x40], r14
0xc4b5:	mov	qword ptr [rbx + 0x48], 0
0xc4bd:	jmp	0xc4ca


0xc4f0:	test	al, al
0xc4f2:	movss	xmm1, dword ptr [rip + 0x8dce]
0xc4fa:	je	0xc4c0


0xc4fc:	test	rbp, rbp
0xc4ff:	js	0xc54b


0x10010:	test	rax, rax
0x10013:	mov	rdx, rax
0x10016:	mov	qword ptr [rip + 0x20a6e3], rax
0x1001d:	mov	r9d, dword ptr [rsp + 0x10]
0x10022:	mov	r10d, dword ptr [rsp + 0x18]
0x10027:	mov	r11, qword ptr [rsp + 0x20]
0x1002c:	jne	0xfa49


0x10032:	lea	rcx, [rsp + 0x50]
0x10037:	jmp	0xfbf0


0xfbf0:	mov	dword ptr [rsp + 0x58], 0x77359400
0xfbf8:	mov	byte ptr [rsp + 0x5c], 0
0xfbfd:	mov	dword ptr [rsp + 0x18], 0x77359400
0xfc05:	mov	qword ptr [rsp + 0x10], rcx
0xfc0a:	mov	rcx, qword ptr [rbp + 0x50]
0xfc0e:	mov	eax, 0x66666667
0xfc13:	mov	rsi, qword ptr [rbp + 0x70]
0xfc17:	imul	ecx
0xfc19:	mov	eax, ecx
0xfc1b:	mov	qword ptr [rsp + 0x28], rcx
0xfc20:	sar	eax, 0x1f
0xfc23:	sar	edx, 2
0xfc26:	sub	edx, eax
0xfc28:	lea	eax, [rdx + rdx*4]
0xfc2b:	mov	dword ptr [rsp + 0x20], edx
0xfc2f:	add	eax, eax
0xfc31:	sub	ecx, eax
0xfc33:	mov	eax, 0x66666667
0xfc38:	imul	esi
0xfc3a:	mov	eax, esi
0xfc3c:	sar	eax, 0x1f
0xfc3f:	sar	edx, 2
0xfc42:	mov	edi, edx
0xfc44:	sub	edi, eax
0xfc46:	lea	eax, [rdi + rdi*4]
0xfc49:	add	eax, eax
0xfc4b:	sub	esi, eax
0xfc4d:	mov	eax, 0x66666667
0xfc52:	imul	r15d
0xfc55:	mov	eax, r15d
0xfc58:	or	ecx, esi
0xfc5a:	sar	eax, 0x1f
0xfc5d:	mov	esi, r15d
0xfc60:	sar	edx, 2
0xfc63:	mov	r8d, edx
0xfc66:	sub	r8d, eax
0xfc69:	lea	eax, [r8 + r8*4]
0xfc6d:	add	eax, eax
0xfc6f:	sub	esi, eax
0xfc71:	or	ecx, esi
0xfc73:	jne	0xffc8


0xfc79:	cmp	dword ptr [rsp + 0x18], 0xa
0xfc7e:	mov	rax, qword ptr [rbp + 0x48]
0xfc82:	mov	ecx, edi
0xfc84:	mov	edx, dword ptr [rsp + 0x20]
0xfc88:	mov	esi, r8d
0xfc8b:	mov	qword ptr [rsp + 0x48], rax
0xfc90:	mov	dword ptr [rsp + 0x30], edx
0xfc94:	jle	0x100a8


0xffc8:	mov	rax, qword ptr [rsp + 0x10]
0xffcd:	mov	dword ptr [rax + 8], ebx
0xffd0:	mov	byte ptr [rax + 0xc], 1
0xffd4:	jmp	0xfad8


0x100a8:	mov	rax, qword ptr [rsp + 0x10]
0x100ad:	mov	dword ptr [rsp + 0x20], 0xa
0x100b5:	mov	dword ptr [rax + 8], 0xa
0x100bc:	mov	rax, r12
0x100bf:	jmp	0xfe13


0xfc9a:	mov	eax, 0x66666667
0xfc9f:	imul	edi
0xfca1:	mov	eax, edi
0xfca3:	sar	eax, 0x1f
0xfca6:	sar	edx, 2
0xfca9:	sub	edx, eax
0xfcab:	lea	eax, [rdx + rdx*4]
0xfcae:	add	eax, eax
0xfcb0:	sub	edi, eax
0xfcb2:	mov	eax, 0x66666667
0xfcb7:	imul	dword ptr [rsp + 0x20]
0xfcbb:	mov	eax, dword ptr [rsp + 0x20]
0xfcbf:	sar	eax, 0x1f
0xfcc2:	sar	edx, 2
0xfcc5:	sub	edx, eax
0xfcc7:	lea	eax, [rdx + rdx*4]
0xfcca:	mov	edx, dword ptr [rsp + 0x20]
0xfcce:	mov	dword ptr [rsp + 0x20], 0xa
0xfcd6:	add	eax, eax
0xfcd8:	sub	edx, eax
0xfcda:	mov	eax, 0x66666667
0xfcdf:	or	edi, edx
0xfce1:	imul	r8d
0xfce4:	mov	eax, r8d
0xfce7:	mov	dword ptr [rsp + 0x3c], edi
0xfceb:	sar	eax, 0x1f
0xfcee:	mov	edi, 0x66666667
0xfcf3:	sar	edx, 2
0xfcf6:	sub	edx, eax
0xfcf8:	lea	eax, [rdx + rdx*4]
0xfcfb:	mov	edx, 8
0xfd00:	add	eax, eax
0xfd02:	sub	r8d, eax
0xfd05:	mov	eax, dword ptr [rsp + 0x3c]
0xfd09:	or	eax, r8d
0xfd0c:	jne	0x100c4


0xfe13:	cmp	r14, r12
0xfe16:	jg	0xfaef


0xfd12:	mov	dword ptr [rsp + 0x3c], r9d
0xfd17:	mov	qword ptr [rsp + 0x40], r14
0xfd1c:	mov	r9d, 0xa
0xfd22:	mov	r8d, dword ptr [rsp + 0x30]
0xfd27:	mov	qword ptr [rsp + 0x20], r12
0xfd2c:	mov	r14d, edx
0xfd2f:	mov	qword ptr [rsp + 0x30], rbp
0xfd34:	mov	eax, r8d
0xfd37:	sar	r8d, 0x1f
0xfd3b:	lea	ebp, [r9 + r9*4]
0xfd3f:	imul	edi
0xfd41:	mov	eax, ecx
0xfd43:	sar	ecx, 0x1f
0xfd46:	add	ebp, ebp
0xfd48:	mov	r9d, ebp
0xfd4b:	sar	edx, 2
0xfd4e:	sub	edx, r8d
0xfd51:	mov	r8d, edx
0xfd54:	imul	edi
0xfd56:	mov	eax, esi
0xfd58:	sar	esi, 0x1f
0xfd5b:	sar	edx, 2
0xfd5e:	sub	edx, ecx
0xfd60:	mov	ecx, edx
0xfd62:	imul	edi
0xfd64:	sar	edx, 2
0xfd67:	sub	edx, esi
0xfd69:	cmp	ebp, dword ptr [rsp + 0x18]
0xfd6d:	mov	esi, edx
0xfd6f:	jge	0x10050


0x100c4:	mov	rax, qword ptr [rsp + 0x10]
0x100c9:	mov	dword ptr [rax + 8], 0xa
0x100d0:	mov	rax, r12
0x100d3:	jmp	0xfe13


0xfe1c:	cmp	r15d, r13d
0xfe1f:	jl	0xfe2c


0xfd75:	mov	eax, r8d
0xfd78:	mov	r12d, r8d
0xfd7b:	imul	edi
0xfd7d:	mov	eax, r8d
0xfd80:	sar	eax, 0x1f
0xfd83:	sar	edx, 2
0xfd86:	sub	edx, eax
0xfd88:	lea	eax, [rdx + rdx*4]
0xfd8b:	add	eax, eax
0xfd8d:	sub	r12d, eax
0xfd90:	mov	eax, ecx
0xfd92:	imul	edi
0xfd94:	mov	eax, ecx
0xfd96:	sar	eax, 0x1f
0xfd99:	sar	edx, 2
0xfd9c:	sub	edx, eax
0xfd9e:	lea	eax, [rdx + rdx*4]
0xfda1:	mov	edx, ecx
0xfda3:	add	eax, eax
0xfda5:	sub	edx, eax
0xfda7:	mov	eax, esi
0xfda9:	or	r12d, edx
0xfdac:	imul	edi
0xfdae:	mov	eax, esi
0xfdb0:	sar	eax, 0x1f
0xfdb3:	sar	edx, 2
0xfdb6:	sub	edx, eax
0xfdb8:	lea	eax, [rdx + rdx*4]
0xfdbb:	mov	edx, esi
0xfdbd:	add	eax, eax
0xfdbf:	sub	edx, eax
0xfdc1:	or	r12d, edx
0xfdc4:	jne	0x10050


0x10050:	cmp	ebp, 0x77359400
0x10056:	mov	r12, qword ptr [rsp + 0x20]
0x1005b:	mov	rsi, qword ptr [rsp + 0x10]
0x10060:	sete	byte ptr [rsp + 8]
0x10065:	movzx	eax, byte ptr [rsp + 8]
0x1006a:	mov	dword ptr [rsp + 0x20], r9d
0x1006f:	mov	r14, qword ptr [rsp + 0x40]
0x10074:	mov	r9d, dword ptr [rsp + 0x3c]
0x10079:	mov	dword ptr [rsi + 8], ebp
0x1007c:	not	eax
0x1007e:	cdqe	
0x10080:	and	rax, r12
0x10083:	jmp	0xfe13


0xfe2c:	cmp	r14, rax
0xfe2f:	jl	0xfb28


0xfe21:	cmp	byte ptr [rsp + 0x38], 0
0xfe26:	jne	0xfaef


0xfdca:	sub	r14d, 1
0xfdce:	jne	0xfd34


0xfe35:	jne	0xfe4d


0xfdd4:	mov	r14, qword ptr [rsp + 0x40]
0xfdd9:	mov	rbp, qword ptr [rsp + 0x30]
0xfdde:	mov	rax, qword ptr [rsp + 0x48]
0xfde3:	mov	r12, qword ptr [rsp + 0x20]
0xfde8:	mov	r9d, dword ptr [rsp + 0x3c]
0xfded:	or	rax, r14
0xfdf0:	or	rax, qword ptr [rbp + 0x68]
0xfdf4:	test	al, 1
0xfdf6:	mov	rax, qword ptr [rsp + 0x10]
0xfdfb:	je	0x10088


0xfd34:	mov	eax, r8d
0xfd37:	sar	r8d, 0x1f
0xfd3b:	lea	ebp, [r9 + r9*4]
0xfd3f:	imul	edi
0xfd41:	mov	eax, ecx
0xfd43:	sar	ecx, 0x1f
0xfd46:	add	ebp, ebp
0xfd48:	mov	r9d, ebp
0xfd4b:	sar	edx, 2
0xfd4e:	sub	edx, r8d
0xfd51:	mov	r8d, edx
0xfd54:	imul	edi
0xfd56:	mov	eax, esi
0xfd58:	sar	esi, 0x1f
0xfd5b:	sar	edx, 2
0xfd5e:	sub	edx, ecx
0xfd60:	mov	ecx, edx
0xfd62:	imul	edi
0xfd64:	sar	edx, 2
0xfd67:	sub	edx, esi
0xfd69:	cmp	ebp, dword ptr [rsp + 0x18]
0xfd6d:	mov	esi, edx
0xfd6f:	jge	0x10050


0xfe37:	mov	eax, r9d
0xfe3a:	cdq	
0xfe3b:	idiv	dword ptr [rsp + 0x20]
0xfe3f:	mov	eax, r13d
0xfe42:	sub	eax, edx
0xfe44:	cmp	eax, r15d
0xfe47:	jg	0xfb28


0xfe4d:	mov	rax, qword ptr [rsp + 0x48]
0xfe52:	mov	edx, 0x38e38e39
0xfe57:	lea	rbp, [rsp + 0x60]
0xfe5c:	mov	rsi, r11
0xfe5f:	mov	edi, r10d
0xfe62:	mov	ecx, 0x100
0xfe67:	mov	dword ptr [rsp + 0x18], r9d
0xfe6c:	mov	dword ptr [rsp + 0x38], r10d
0xfe71:	mov	qword ptr [rsp + 0x60], rax
0xfe76:	movsxd	rax, dword ptr [rsp + 0x28]
0xfe7b:	mov	qword ptr [rsp + 0x68], rax
0xfe80:	movzx	eax, byte ptr [rsp + 8]
0xfe85:	mov	qword ptr [rsp + 8], r11
0xfe8a:	or	rax, r14
0xfe8d:	mov	qword ptr [rsp + 0x70], rax
0xfe92:	mov	eax, dword ptr [rsp + 0x20]
0xfe96:	mul	edx
0xfe98:	mov	eax, edx
0xfe9a:	mov	rdx, rbp
0xfe9d:	shr	eax, 1
0xfe9f:	add	eax, r15d
0xfea2:	cdqe	
0xfea4:	mov	qword ptr [rsp + 0x78], rax
0xfea9:	call	0x2750


0x10088:	mov	dword ptr [rax + 8], 0x77359400
0x1008f:	mov	rax, r12
0x10092:	mov	byte ptr [rsp + 8], 1
0x10097:	and	rax, 0xfffffffffffffffe
0x1009b:	mov	dword ptr [rsp + 0x20], 0x77359400
0x100a3:	jmp	0xfe13


0xfe01:	mov	dword ptr [rax + 8], 0x3b9aca00
0xfe08:	mov	dword ptr [rsp + 0x20], 0x3b9aca00
0xfe10:	mov	rax, r12
0xfe13:	cmp	r14, r12
0xfe16:	jg	0xfaef


0xfeae:	test	eax, eax
0xfeb0:	mov	r10d, dword ptr [rsp + 0x38]
0xfeb5:	mov	r11, qword ptr [rsp + 8]
0xfeba:	mov	r9d, dword ptr [rsp + 0x18]
0xfebf:	je	0xfecb


0xfecb:	lea	rcx, [rsp + 0x80]
0xfed3:	mov	rdx, r11
0xfed6:	mov	r8d, 0x100
0xfedc:	mov	esi, r10d
0xfedf:	mov	edi, 1
0xfee4:	mov	dword ptr [rsp + 0x18], r9d
0xfee9:	mov	qword ptr [rsp + 8], r11
0xfeee:	mov	dword ptr [rsp + 0x38], r10d
0xfef3:	call	0x2980


0xfec1:	mov	ebx, 0xfffffffe
0xfec6:	jmp	0xfaef


0xfef8:	mov	rcx, qword ptr [rsp + 0xe0]
0xff00:	mov	r8d, eax
0xff03:	mov	rax, qword ptr [rsp + 0xd8]
0xff0b:	movsxd	rdx, r15d
0xff0e:	mov	r10d, dword ptr [rsp + 0x38]
0xff13:	mov	r11, qword ptr [rsp + 8]
0xff18:	mov	r9d, dword ptr [rsp + 0x18]
0xff1d:	xor	rcx, rdx
0xff20:	xor	rax, r14
0xff23:	or	rax, rcx
0xff26:	movsxd	rcx, r8d
0xff29:	or	rax, rcx
0xff2c:	jne	0x100dd


0xff32:	mov	ecx, dword ptr [rsp + 0xd8]
0xff39:	mov	esi, 0xa
0xff3e:	and	ecx, 1
0xff41:	imul	ecx, ecx, 0x3b9aca00
0xff47:	add	ecx, dword ptr [rsp + 0xe0]
0xff4e:	mov	eax, ecx
0xff50:	cdq	
0xff51:	idiv	esi
0xff53:	test	edx, edx
0xff55:	jne	0x10125


0x100dd:	mov	qword ptr [rsp + 0x78], rdx
0x100e2:	mov	ecx, 0x100
0x100e7:	mov	rdx, rbp
0x100ea:	mov	rsi, r11
0x100ed:	mov	edi, r10d
0x100f0:	mov	dword ptr [rsp + 8], r8d
0x100f5:	mov	dword ptr [rsp + 0x38], r9d
0x100fa:	mov	qword ptr [rsp + 0x70], r14
0x100ff:	call	0x2750


0xff5b:	cmp	dword ptr [rsp + 0x20], 0xa
0xff60:	je	0xff9d


0x10125:	mov	dword ptr [rsp + 0x20], ebx
0x10129:	jmp	0xff9d


0xff9d:	mov	esi, dword ptr [rsp + 0x20]
0xffa1:	xor	eax, eax
0xffa3:	cmp	esi, 0x77359400
0xffa9:	mov	ebx, esi
0xffab:	sete	al
0xffae:	not	eax
0xffb0:	cdqe	
0xffb2:	and	r12, rax
0xffb5:	mov	eax, r9d
0xffb8:	mov	r9d, r13d
0xffbb:	cdq	
0xffbc:	idiv	esi
0xffbe:	sub	r9d, edx
0xffc1:	nop	dword ptr [rax]
0xffc8:	mov	rax, qword ptr [rsp + 0x10]
0xffcd:	mov	dword ptr [rax + 8], ebx
0xffd0:	mov	byte ptr [rax + 0xc], 1
0xffd4:	jmp	0xfad8


0xff62:	mov	r8d, 9
0xff68:	mov	esi, 0xa
0xff6d:	mov	edi, 0xa
0xff72:	jmp	0xff7d


0xff7d:	mov	eax, ecx
0xff7f:	cdq	
0xff80:	idiv	edi
0xff82:	cdq	
0xff83:	mov	ecx, eax
0xff85:	idiv	edi
0xff87:	test	edx, edx
0xff89:	jne	0x1011c


0xff8f:	sub	r8d, 1
0xff93:	jne	0xff74


0x1011c:	mov	dword ptr [rsp + 0x20], esi
0x10120:	jmp	0xff9d


0xff95:	mov	dword ptr [rsp + 0x20], 0x77359400
0xff9d:	mov	esi, dword ptr [rsp + 0x20]
0xffa1:	xor	eax, eax
0xffa3:	cmp	esi, 0x77359400
0xffa9:	mov	ebx, esi
0xffab:	sete	al
0xffae:	not	eax
0xffb0:	cdqe	
0xffb2:	and	r12, rax
0xffb5:	mov	eax, r9d
0xffb8:	mov	r9d, r13d
0xffbb:	cdq	
0xffbc:	idiv	esi
0xffbe:	sub	r9d, edx
0xffc1:	nop	dword ptr [rax]
0xffc8:	mov	rax, qword ptr [rsp + 0x10]
0xffcd:	mov	dword ptr [rax + 8], ebx
0xffd0:	mov	byte ptr [rax + 0xc], 1
0xffd4:	jmp	0xfad8


0xff74:	imul	esi, esi, 0xa
0xff77:	cmp	esi, dword ptr [rsp + 0x20]
0xff7b:	je	0xff9d


0x10104:	mov	r8d, dword ptr [rsp + 8]
0x10109:	mov	r9d, dword ptr [rsp + 0x38]
0x1010e:	test	r8d, r8d
0x10111:	jne	0xfec1


0x10117:	jmp	0xff32


0x5795:	mov	qword ptr [rbx + 0x40], rax
0x5799:	pop	rbx
0x579a:	ret	


0x4b91:	mov	rdi, r14
0x4b94:	call	0x57a0


0x57c5:	mov	qword ptr [rbx + 0x48], rax
0x57c9:	pop	rbx
0x57ca:	ret	


0x4b99:	jmp	0x494e


0x9ec5:	test	rax, rax
0x9ec8:	mov	qword ptr [rip + 0x2106a9], rax
0x9ecf:	je	0x9ed6


0x9ed6:	call	0x11270


0x9ed1:	add	rsp, 8
0x9ed5:	ret	


0x11029:	test	rax, rax
0x1102c:	jne	0x11033


0x1102e:	test	rbx, rbx
0x11031:	jne	0x11035


0x11033:	pop	rbx
0x11034:	ret	


0x11035:	call	0x11270


0xf75c:	movsxd	rsi, ebp
0xf75f:	lea	rdx, [rsi + r14]
0xf763:	cmp	rdx, rax
0xf766:	ja	0xf87b


0xf76c:	sub	rax, r14
0xf76f:	mov	rbx, rax
0xf772:	sub	rbx, rsi
0xf775:	lea	rsi, [rip + 0x5a29]
0xf77c:	lea	rax, [r15 + rbx]
0xf780:	mov	rdi, rax
0xf783:	mov	qword ptr [rsp + 0x10], rax
0xf788:	call	0x2a50


0xf87b:	mov	rax, qword ptr [rsp + 8]
0xf880:	mov	edx, 0xffffffff
0xf885:	mov	dword ptr [rax], 0x16
0xf88b:	jmp	0xf863


0x2a50:	jmp	qword ptr [rip + 0x217392]


0xf863:	add	rsp, 0x38
0xf867:	mov	eax, edx
0xf869:	pop	rbx
0xf86a:	pop	rbp
0xf86b:	pop	r12
0xf86d:	pop	r13
0xf86f:	pop	r14
0xf871:	pop	r15
0xf873:	ret	




0xa4bf:	test	eax, eax
0xa4c1:	je	0xa540


0xa540:	mov	rcx, rbx
0xa543:	mov	edx, ebp
0xa545:	mov	rsi, r13
0xa548:	mov	edi, ebp
0xa54a:	call	0x2d60


0xa4c3:	call	0x2770


0x2d60:	jmp	qword ptr [rip + 0x21720a]




0xa4c8:	mov	r8d, dword ptr [rax]
0xa4cb:	cmp	r13, r14
0xa4ce:	je	0xa4e8


0xa4d0:	mov	rdi, r13
0xa4d3:	mov	dword ptr [rsp + 0xc], r8d
0xa4d8:	call	0x2e10


0xa4dd:	mov	r8d, dword ptr [rsp + 0xc]
0xa4e2:	nop	word ptr [rax + rax]
0xa4e8:	mov	rbx, qword ptr [rsp + 0x128]
0xa4f0:	xor	rbx, qword ptr fs:[0x28]
0xa4f9:	mov	eax, r8d
0xa4fc:	jne	0xa58d


0xa36b:	test	eax, eax
0xa36d:	je	0xa3e8


0xa3e8:	mov	rcx, rbx
0xa3eb:	mov	edx, ebp
0xa3ed:	mov	rsi, r15
0xa3f0:	mov	edi, ebp
0xa3f2:	call	0x2d60


0xa36f:	call	0x2770


0xa374:	mov	ecx, dword ptr [rax]
0xa376:	cmp	r15, qword ptr [rsp]
0xa37a:	je	0xa390


0xa37c:	mov	rdi, r15
0xa37f:	mov	dword ptr [rsp], ecx
0xa382:	call	0x2e10


0xa387:	mov	ecx, dword ptr [rsp]
0xa38a:	nop	word ptr [rax + rax]
0xa390:	mov	rbx, qword ptr [rsp + 0x138]
0xa398:	xor	rbx, qword ptr fs:[0x28]
0xa3a1:	mov	eax, ecx
0xa3a3:	jne	0xa42c


0xf901:	add	rsp, 0x18
0xf905:	ret	


0xf8e9:	add	rsp, 0x18
0xf8ed:	ret	


0xf921:	add	rsp, 0x18
0xf925:	ret	


0xee59:	mov	rdi, r13
0xee5c:	mov	rbp, rax
0xee5f:	call	0x2900


0xee64:	test	rbp, rbp
0xee67:	je	0xee83


0xee83:	mov	edi, dword ptr [rsp + 4]
0xee87:	mov	rcx, r13
0xee8a:	mov	edx, r14d
0xee8d:	mov	rsi, r12
0xee90:	call	0x2d60


0xee69:	test	rax, rax
0xee6c:	mov	r9, qword ptr [rsp + 8]
0xee71:	je	0xee83


0xee73:	cmp	byte ptr [r12 + rbp - 1], 0x2f
0xee79:	je	0xeec0


0xeec0:	mov	esi, dword ptr [rsp + 4]
0xeec4:	lea	rcx, [rsp + 0x10]
0xeec9:	mov	r8d, 0x100
0xeecf:	mov	rdx, r12
0xeed2:	mov	edi, 1
0xeed7:	mov	qword ptr [rsp + 8], r9
0xeedc:	call	0x2980


0xee7b:	cmp	byte ptr [r13 + rax - 1], 0x2f
0xee81:	je	0xeec0


0xeee1:	test	eax, eax
0xeee3:	jne	0xef49


0xeee5:	test	bl, bl
0xeee7:	mov	r9, qword ptr [rsp + 8]
0xeeec:	je	0xef6a


0xef6a:	lea	rcx, [rsp + 0xa0]
0xef72:	mov	r8d, 0x100
0xef78:	mov	rdx, r13
0xef7b:	mov	esi, r14d
0xef7e:	mov	edi, 1
0xef83:	mov	qword ptr [rsp + 8], r9
0xef88:	call	0x2980


0xeeee:	mov	eax, dword ptr [rsp + 0x28]
0xeef2:	and	eax, 0xf000
0xeef7:	cmp	eax, 0x4000
0xeefc:	je	0xee83


0xeefe:	mov	dword ptr [r9], 2
0xef05:	mov	r15d, 0xffffffff
0xef0b:	jmp	0xedfa


0xef8d:	test	eax, eax
0xef8f:	mov	r9, qword ptr [rsp + 8]
0xef94:	je	0xefc2


0xefc2:	mov	eax, dword ptr [rsp + 0xb8]
0xefc9:	and	eax, 0xf000
0xefce:	cmp	eax, 0x4000
0xefd3:	je	0xefe1


0xef96:	cmp	dword ptr [r9], 2
0xef9a:	jne	0xef49


0xefe1:	mov	eax, dword ptr [rsp + 0x28]
0xefe5:	and	eax, 0xf000
0xefea:	cmp	eax, 0x4000
0xefef:	je	0xee83


0xefd5:	mov	dword ptr [r9], 0x14
0xefdc:	jmp	0xef49


0xef9c:	mov	eax, dword ptr [rsp + 0x28]
0xefa0:	and	eax, 0xf000
0xefa5:	cmp	eax, 0x4000
0xefaa:	jne	0xef49


0xeff5:	mov	dword ptr [r9], 0x15
0xeffc:	or	r15d, 0xffffffff
0xf000:	jmp	0xedfa


0xefac:	jmp	0xee83


0xab98:	mov	rdi, qword ptr [rip + 0x20f9e1]
0xab9f:	sub	r14, rbx
0xaba2:	add	rax, r14
0xaba5:	mov	qword ptr [rsp + 0x18], rax
0xabaa:	test	rdi, rdi
0xabad:	je	0xb134


0xb134:	call	0xab00


0xabb3:	call	0x2900


0xb139:	mov	rdi, qword ptr [rip + 0x20f440]
0xb140:	jmp	0xabb3


0xabb8:	mov	rsi, qword ptr [rsp + 0x18]
0xabbd:	add	rax, 1
0xabc1:	cmp	rax, 9
0xabc5:	mov	qword ptr [rsp + 0x50], rax
0xabca:	lea	rdx, [rsi + 1]
0xabce:	mov	rsi, rax
0xabd1:	mov	eax, 9
0xabd6:	cmovae	rax, rsi
0xabda:	add	rax, rdx
0xabdd:	mov	qword ptr [rsp + 0x38], rdx
0xabe2:	mov	rdi, rax
0xabe5:	mov	qword ptr [rsp + 0x40], rax
0xabea:	call	0x2bc0


0xabef:	test	rax, rax
0xabf2:	mov	r15, rax
0xabf5:	je	0xaee0


0xaee0:	mov	rsi, qword ptr [rsp + 0x78]
0xaee5:	xor	rsi, qword ptr fs:[0x28]
0xaeee:	mov	rax, r15
0xaef1:	jne	0xb15d


0xabfb:	lea	rax, [rsp + 0x74]
0xac00:	mov	dword ptr [rsp + 0x74], 0xffffffff
0xac08:	mov	qword ptr [rsp + 0x48], 0
0xac11:	xor	r13d, r13d
0xac14:	mov	qword ptr [rsp + 0x68], rax
0xac19:	mov	rdx, qword ptr [rsp + 0x38]
0xac1e:	mov	rsi, qword ptr [rsp + 0x10]
0xac23:	mov	rdi, r15
0xac26:	call	0x2b60


0xaef7:	add	rsp, 0x88
0xaefe:	pop	rbx
0xaeff:	pop	rbp
0xaf00:	pop	r12
0xaf02:	pop	r13
0xaf04:	pop	r14
0xaf06:	pop	r15
0xaf08:	ret	


0xb15d:	call	0x2930


0xac2b:	cmp	dword ptr [rsp + 0x20], 1
0xac30:	je	0xaf10


0xaf10:	mov	rax, qword ptr [rsp + 0x18]
0xaf15:	mov	rdx, qword ptr [rsp + 0x50]
0xaf1a:	mov	rsi, qword ptr [rip + 0x20f65f]
0xaf21:	lea	rdi, [r15 + rax]
0xaf25:	call	0x2b60


0xac36:	lea	rbp, [r15 + r14]
0xac3a:	mov	rdi, rbp
0xac3d:	call	0xb5f0


0xaf2a:	jmp	0xae5f


0xae5f:	cmp	byte ptr [rsp + 0x63], 0
0xae64:	je	0xb11e


0xb11e:	test	r13, r13
0xb121:	je	0xaee0


0xae6a:	mov	edx, dword ptr [rsp + 0x74]
0xae6e:	lea	rcx, [r15 + r14]
0xae72:	test	edx, edx
0xae74:	jns	0xae89


0xb127:	mov	rdi, r13
0xb12a:	call	0x2a60


0xae76:	mov	dword ptr [rsp + 0x74], 0xffffff9c
0xae7e:	mov	rcx, r15
0xae81:	mov	edx, 0xffffff9c
0xae86:	xor	r14d, r14d
0xae89:	xor	r8d, r8d
0xae8c:	cmp	dword ptr [rsp + 0x20], 1
0xae91:	mov	rsi, qword ptr [rsp + 0x10]
0xae96:	mov	edi, 0xffffff9c
0xae9b:	setne	r8b
0xae9f:	call	0xeda0


0xae89:	xor	r8d, r8d
0xae8c:	cmp	dword ptr [rsp + 0x20], 1
0xae91:	mov	rsi, qword ptr [rsp + 0x10]
0xae96:	mov	edi, 0xffffff9c
0xae9b:	setne	r8b
0xae9f:	call	0xeda0


0x2a60:	jmp	qword ptr [rip + 0x21738a]




0xaea4:	test	eax, eax
0xaea6:	je	0xb11e


0xaeac:	call	0x2770


0xaeb1:	mov	ebp, dword ptr [rax]
0xaeb3:	cmp	ebp, 0x11
0xaeb6:	je	0xac19


0xac19:	mov	rdx, qword ptr [rsp + 0x38]
0xac1e:	mov	rsi, qword ptr [rsp + 0x10]
0xac23:	mov	rdi, r15
0xac26:	call	0x2b60


0xaebc:	test	r13, r13
0xaebf:	mov	rbx, rax
0xaec2:	je	0xaecc


0xaecc:	mov	rdi, r15
0xaecf:	xor	r15d, r15d
0xaed2:	call	0x2e10


0xaec4:	mov	rdi, r13
0xaec7:	call	0x2a60


0xaed7:	mov	dword ptr [rbx], ebp
0xaed9:	nop	dword ptr [rax]
0xaee0:	mov	rsi, qword ptr [rsp + 0x78]
0xaee5:	xor	rsi, qword ptr fs:[0x28]
0xaeee:	mov	rax, r15
0xaef1:	jne	0xb15d


0xb1cb:	test	rax, rax
0xb1ce:	je	0xb1d5


0xb1d5:	call	0x11270


0xb1d0:	add	rsp, 8
0xb1d4:	ret	


0x48cf:	mov	rsi, r14
0x48d2:	lea	r14, [rip + 0x215827]
0x48d9:	lea	rdi, [rip + 0x215820]
0x48e0:	mov	ecx, 0x14
0x48e5:	mov	rbx, rax
0x48e8:	rep movsd	dword ptr [rdi], dword ptr [rsi]


0x48e8:	rep movsd	dword ptr [rdi], dword ptr [rsi]


0x48ea:	mov	dword ptr [rip + 0x21580c], 0
0x48f4:	lea	r8, [rbp - 0xd8]
0x48fb:	xor	r9d, r9d
0x48fe:	mov	rcx, r14
0x4901:	xor	edx, edx
0x4903:	mov	rsi, rbx
0x4906:	mov	rdi, r12
0x4909:	call	0x9b90


0x4a7f:	lea	rdx, [rax + 1]
0x4a83:	add	rax, 0x1f
0x4a87:	mov	rsi, r12
0x4a8a:	and	rax, 0xfffffffffffffff0
0x4a8e:	sub	rsp, rax
0x4a91:	lea	rdi, [rsp + 0xf]
0x4a96:	and	rdi, 0xfffffffffffffff0
0x4a9a:	call	0x2b60


0x4a9f:	mov	rdi, rax
0x4aa2:	mov	r12, rax
0x4aa5:	call	0xb640


0x67f2:	mov	rdi, qword ptr [rbp - 0x308]
0x67f9:	mov	qword ptr [rbp - 0x350], rax
0x6800:	call	0xb590


0x6805:	mov	rdi, rax
0x6808:	mov	qword ptr [rbp - 0x358], rax
0x680f:	call	0x2900


0x6814:	mov	r15, qword ptr [rip + 0x213d65]
0x681b:	mov	r12, rax
0x681e:	mov	rdi, r15
0x6821:	call	0x2900


0x6826:	mov	r8, rax
0x6829:	lea	rax, [r12 + rax]
0x682d:	cmp	qword ptr [rbp - 0x350], rax
0x6834:	mov	rsi, qword ptr [rbp - 0x358]
0x683b:	movzx	r9d, byte ptr [rbp - 0x35c]
0x6843:	je	0x829e


0x829e:	mov	rdx, r12
0x82a1:	mov	rdi, r14
0x82a4:	mov	byte ptr [rbp - 0x350], r9b
0x82ab:	mov	qword ptr [rbp - 0x358], r8
0x82b2:	call	0x2a90


0x82b7:	test	eax, eax
0x82b9:	movzx	r9d, byte ptr [rbp - 0x350]
0x82c1:	jne	0x6849


0x82c7:	lea	rdi, [r14 + r12]
0x82cb:	mov	rsi, r15
0x82ce:	call	0x2af0


0x82d3:	test	eax, eax
0x82d5:	movzx	r9d, byte ptr [rbp - 0x350]
0x82dd:	mov	r8, qword ptr [rbp - 0x358]
0x82e4:	jne	0x6849


0x82ea:	mov	rdi, qword ptr [rbp - 0x308]
0x82f1:	or	rcx, 0xffffffffffffffff
0x82f5:	repne scasb	al, byte ptr [rdi]


0x82f5:	repne scasb	al, byte ptr [rdi]


0x82f7:	mov	rax, rcx
0x82fa:	not	rax
0x82fd:	lea	r14, [rax - 1]
0x8301:	lea	rdi, [r14 + r8 + 1]
0x8306:	call	0x11020


0x4995:	lea	rdx, [rax + 1]
0x4999:	add	rax, 0x1f
0x499d:	mov	rsi, r13
0x49a0:	and	rax, 0xfffffffffffffff0
0x49a4:	sub	rsp, rax
0x49a7:	lea	rdi, [rsp + 0xf]
0x49ac:	and	rdi, 0xfffffffffffffff0
0x49b0:	call	0x2b60


0x49b5:	mov	rdi, rax
0x49b8:	mov	r12, rax
0x49bb:	call	0xb640


0x3a46:	lea	rdx, [rax + 1]
0x3a4a:	add	rax, 0x1f
0x3a4e:	mov	rsi, rbx
0x3a51:	and	rax, 0xfffffffffffffff0
0x3a55:	sub	rsp, rax
0x3a58:	lea	rdi, [rsp + 0xf]
0x3a5d:	and	rdi, 0xfffffffffffffff0
0x3a61:	call	0x2b60


0x3a66:	mov	rdi, rax
0x3a69:	mov	r12, rax
0x3a6c:	call	0xb4d0


0x3a71:	mov	r14, rax
0x3a74:	add	rax, 0x1f
0x3a78:	mov	rsi, r12
0x3a7b:	and	rax, 0xfffffffffffffff0
0x3a7f:	mov	rdx, r14
0x3a82:	sub	rsp, rax
0x3a85:	lea	rbx, [rsp + 0xf]
0x3a8a:	and	rbx, 0xfffffffffffffff0
0x3a8e:	mov	rdi, rbx
0x3a91:	call	0x2b60


0x3a96:	mov	rax, qword ptr [rbp - 0x180]
0x3a9d:	mov	byte ptr [rbx + r14], 0
0x3aa2:	mov	rsi, rbx
0x3aa5:	mov	edi, 1
0x3aaa:	mov	qword ptr [rax], 0
0x3ab1:	lea	rax, [rbp - 0x160]
0x3ab8:	mov	rdx, rax
0x3abb:	mov	qword ptr [rbp - 0x170], rax
0x3ac2:	call	0x2ba0


0x3ac7:	test	eax, eax
0x3ac9:	je	0x3e80


0x3e80:	mov	eax, dword ptr [rbp - 0x148]
0x3e86:	and	eax, 0xf000
0x3e8b:	cmp	eax, 0x4000
0x3e90:	jne	0x3ec3


0x3acf:	lea	rdi, [r12 + r15]
0x3ad3:	cmp	byte ptr [rdi], 0x2f
0x3ad6:	mov	qword ptr [rbp - 0x168], rdi
0x3add:	jne	0x3f28


0x3e92:	mov	rax, qword ptr [rbp - 0x178]
0x3e99:	mov	byte ptr [rax], 0
0x3e9c:	mov	eax, 1
0x3ea1:	mov	rcx, qword ptr [rbp - 0x38]
0x3ea5:	xor	rcx, qword ptr fs:[0x28]
0x3eae:	jne	0x3fbb


0x3ec3:	mov	rsi, rbx
0x3ec6:	mov	edi, 4
0x3ecb:	call	0xeab0


0x3f28:	mov	rdi, qword ptr [rbp - 0x168]
0x3f2f:	jmp	0x3af1


0x3eb4:	lea	rsp, [rbp - 0x28]
0x3eb8:	pop	rbx
0x3eb9:	pop	r12
0x3ebb:	pop	r13
0x3ebd:	pop	r14
0x3ebf:	pop	r15
0x3ec1:	pop	rbp
0x3ec2:	ret	


0x3fbb:	call	0x2930


0x3ae8:	add	rdi, 1
0x3aec:	cmp	byte ptr [rdi], 0x2f
0x3aef:	je	0x3ae8


0x3af1:	lea	rax, [rbp - 0xd0]
0x3af8:	mov	qword ptr [rbp - 0x188], rax
0x3aff:	nop	
0x3b00:	mov	esi, 0x2f
0x3b05:	call	0x2970


0x2970:	jmp	qword ptr [rip + 0x217402]




0x3ff1:	lea	rdx, [rax + 1]
0x3ff5:	add	rax, 0x1f
0x3ff9:	mov	rsi, r12
0x3ffc:	and	rax, 0xfffffffffffffff0
0x4000:	sub	rsp, rax
0x4003:	lea	rdi, [rsp + 0xf]
0x4008:	and	rdi, 0xfffffffffffffff0
0x400c:	call	0x2b60


0x4011:	mov	r12, rax
0x4014:	add	rax, r14
0x4017:	test	rbx, rbx
0x401a:	mov	qword ptr [rbp - 0x68], rax
0x401e:	je	0x41d0


0x41d0:	mov	r14d, 1
0x41d6:	mov	rcx, qword ptr [rbp - 0x38]
0x41da:	xor	rcx, qword ptr fs:[0x28]
0x41e3:	mov	eax, r14d
0x41e6:	jne	0x4215


0x4024:	lea	r15, [rbp - 0x60]
0x4028:	jmp	0x4072


0x41e8:	lea	rsp, [rbp - 0x28]
0x41ec:	pop	rbx
0x41ed:	pop	r12
0x41ef:	pop	r13
0x41f1:	pop	r14
0x41f3:	pop	r15
0x41f5:	pop	rbp
0x41f6:	ret	


0x4215:	call	0x2930


0x4072:	cmp	byte ptr [r13 + 0x1f], 0
0x4077:	mov	rax, qword ptr [rbx + 0x98]
0x407e:	mov	byte ptr [r12 + rax], 0
0x4083:	je	0x4030


0x4030:	cmp	byte ptr [r13 + 0x1d], 0
0x4035:	jne	0x4100


0x4085:	mov	rax, qword ptr [rbx + 0x50]
0x4089:	mov	rdx, qword ptr [rbx + 0x48]
0x408d:	mov	rsi, r15
0x4090:	mov	rdi, r12
0x4093:	mov	qword ptr [rbp - 0x60], rdx
0x4097:	mov	qword ptr [rbp - 0x58], rax
0x409b:	mov	rdx, qword ptr [rbx + 0x58]
0x409f:	mov	rax, qword ptr [rbx + 0x60]
0x40a3:	mov	qword ptr [rbp - 0x50], rdx
0x40a7:	mov	qword ptr [rbp - 0x48], rax
0x40ab:	call	0x10750


0x403b:	movzx	r14d, byte ptr [r13 + 0x1e]
0x4040:	test	r14b, r14b
0x4043:	jne	0x4150


0x4100:	mov	edx, dword ptr [rbx + 0x20]
0x4103:	mov	esi, dword ptr [rbx + 0x1c]
0x4106:	mov	rdi, r12
0x4109:	call	0x2c00


0x4049:	cmp	byte ptr [rbx + 0x90], 0
0x4050:	jne	0x4178


0x4150:	mov	r8d, dword ptr [rbx + 0x18]
0x4154:	mov	rdi, qword ptr [rbp - 0x68]
0x4158:	mov	ecx, 0xffffffff
0x415d:	mov	rdx, r12
0x4160:	mov	esi, ecx
0x4162:	call	0xa5a0


0x4056:	mov	rax, qword ptr [rbx + 0x98]
0x405d:	mov	byte ptr [r12 + rax], 0x2f
0x4062:	mov	rbx, qword ptr [rbx + 0xa0]
0x4069:	test	rbx, rbx
0x406c:	je	0x41d0


0x4178:	mov	esi, dword ptr [rbx + 0x18]
0x417b:	mov	rdi, r12
0x417e:	call	0x2c90


0x4183:	test	eax, eax
0x4185:	je	0x4056


0x418b:	mov	rsi, r12
0x418e:	mov	edi, 4
0x4193:	call	0xeab0


0x4167:	test	eax, eax
0x4169:	je	0x4056


0x416f:	xor	r14d, r14d
0x4172:	jmp	0x41d6


0x41d6:	mov	rcx, qword ptr [rbp - 0x38]
0x41da:	xor	rcx, qword ptr fs:[0x28]
0x41e3:	mov	eax, r14d
0x41e6:	jne	0x4215


0x410e:	test	eax, eax
0x4110:	je	0x403b


0x4116:	mov	rdi, r13
0x4119:	call	0x5810


0x411e:	test	al, al
0x4120:	mov	r14d, eax
0x4123:	je	0x41f7


0x41f7:	mov	rsi, r12
0x41fa:	mov	edi, 4
0x41ff:	call	0xeab0


0x4129:	mov	edx, dword ptr [rbx + 0x20]
0x412c:	mov	esi, 0xffffffff
0x4131:	mov	rdi, r12
0x4134:	call	0x2c00


0x4139:	movzx	r14d, byte ptr [r13 + 0x1e]
0x413e:	test	r14b, r14b
0x4141:	je	0x4049


0x40b0:	test	eax, eax
0x40b2:	je	0x4030


0x40b8:	mov	rsi, r12
0x40bb:	mov	edi, 4
0x40c0:	xor	r14d, r14d
0x40c3:	call	0xeab0


0xa7a6:	mov	r14, qword ptr [r15]
0xa7a9:	mov	qword ptr [rsp], -1
0xa7b1:	test	r14, r14
0xa7b4:	je	0xa86d


0xa86d:	mov	rax, qword ptr [rsp]
0xa871:	add	rsp, 0x28
0xa875:	pop	rbx
0xa876:	pop	rbp
0xa877:	pop	r12
0xa879:	pop	r13
0xa87b:	pop	r14
0xa87d:	pop	r15
0xa87f:	ret	


0xa7ba:	mov	r12, rax
0xa7bd:	mov	byte ptr [rsp + 0x17], 0
0xa7c2:	xor	ebx, ebx
0xa7c4:	jmp	0xa817


0xa817:	mov	rsi, qword ptr [rsp + 8]
0xa81c:	mov	rdx, r12
0xa81f:	mov	rdi, r14
0xa822:	call	0x2790


0x2790:	jmp	qword ptr [rip + 0x2174f2]




0xaa71:	test	rax, rax
0xaa74:	js	0xaa85


0xaa85:	mov	rdx, rax
0xaa88:	mov	rsi, r12
0xaa8b:	mov	rdi, r14
0xaa8e:	call	0xa8a0


0xaa76:	add	rsp, 8
0xaa7a:	pop	rbx
0xaa7b:	pop	rbp
0xaa7c:	pop	r12
0xaa7e:	pop	r13
0xaa80:	pop	r14
0xaa82:	pop	r15
0xaa84:	ret	


0xb1a4:	lea	rdx, [rip + 0xa035]
0xb1ab:	mov	eax, dword ptr [rdx + rax*4]
0xb1ae:	add	rsp, 8
0xb1b2:	ret	


0xb5f9:	cmp	rax, 1
0xb5fd:	jbe	0xb60a


0xb60a:	pop	rbx
0xb60b:	ret	


0xb5ff:	cmp	byte ptr [rbx + rax - 1], 0x2f
0xb604:	lea	rdx, [rax - 1]
0xb608:	je	0xb618


0xb618:	cmp	rdx, 1
0xb61c:	je	0xb630


0xb630:	mov	eax, 1
0xb635:	pop	rbx
0xb636:	ret	


0xb61e:	cmp	byte ptr [rbx + rdx - 1], 0x2f
0xb623:	lea	rax, [rdx - 1]
0xb627:	je	0xb610


0xb610:	mov	rdx, rax
0xb613:	nop	dword ptr [rax + rax]
0xb618:	cmp	rdx, 1
0xb61c:	je	0xb630


0xb629:	mov	rax, rdx
0xb62c:	pop	rbx
0xb62d:	ret	


0xac42:	test	r13, r13
0xac45:	mov	r12, rax
0xac48:	je	0xaff0


0xaff0:	mov	rcx, qword ptr [rsp + 0x68]
0xaff5:	mov	edi, dword ptr [rsp + 0x64]
0xaff9:	mov	r9d, 0x2e
0xafff:	xor	edx, edx
0xb001:	movzx	ebx, word ptr [rbp]
0xb005:	mov	rsi, r15
0xb008:	mov	word ptr [rbp], r9w
0xb00d:	call	0xcf10


0xac4e:	mov	rdi, r13
0xac51:	call	0x2a40


0x2a40:	jmp	qword ptr [rip + 0x21739a]




0xb012:	test	rax, rax
0xb015:	mov	r13, rax
0xb018:	lea	rdx, [rbp + r12]
0xb01d:	je	0xb0b0


0xb0b0:	mov	qword ptr [rsp + 8], rdx
0xb0b5:	call	0x2770


0xb023:	mov	word ptr [rbp], bx
0xb027:	mov	dword ptr [rdx], 0x7e317e2e
0xb02d:	mov	byte ptr [rdx + 4], 0
0xb031:	jmp	0xac56


0xac56:	mov	rax, qword ptr [rsp + 0x40]
0xac5b:	mov	qword ptr [rsp + 0x28], 1
0xac64:	mov	dword ptr [rsp + 0x24], 2
0xac6c:	mov	qword ptr [rsp + 0x30], rax
0xac71:	lea	rax, [r12 + 4]
0xac76:	mov	qword ptr [rsp + 8], rax
0xac7b:	nop	dword ptr [rax + rax]
0xac80:	mov	rdi, r13
0xac83:	call	0x2bb0


0xb0ba:	cmp	dword ptr [rax], 0xc
0xb0bd:	mov	rdx, qword ptr [rsp + 8]
0xb0c2:	mov	word ptr [rbp], bx
0xb0c6:	mov	dword ptr [rdx], 0x7e317e2e
0xb0cc:	mov	byte ptr [rdx + 4], 0
0xb0d0:	sete	al
0xb0d3:	movzx	eax, al
0xb0d6:	add	eax, 2
0xb0d9:	mov	dword ptr [rsp + 0x24], eax
0xb0dd:	jmp	0xae40


0xae40:	mov	eax, dword ptr [rsp + 0x24]
0xae44:	cmp	eax, 2
0xae47:	je	0xaf30


0xaf30:	cmp	dword ptr [rsp + 0x20], 2
0xaf35:	jne	0xaf60


0xae4d:	cmp	eax, 3
0xae50:	je	0xb050


0xaf37:	mov	rax, qword ptr [rsp + 0x18]
0xaf3c:	mov	rdx, qword ptr [rsp + 0x50]
0xaf41:	mov	rsi, qword ptr [rip + 0x20f638]
0xaf48:	lea	rdi, [r15 + rax]
0xaf4c:	call	0x2b60


0xaf60:	mov	rdi, r15
0xaf63:	call	0xb590


0xb050:	mov	rdi, r15
0xb053:	xor	r15d, r15d
0xb056:	call	0x2e10


0xae56:	cmp	eax, 1
0xae59:	je	0xaf60


0xb05b:	call	0x2770


0xb060:	mov	dword ptr [rax], 0xc
0xb066:	jmp	0xaee0


0xaf68:	mov	rdi, rax
0xaf6b:	mov	rbx, rax
0xaf6e:	call	0xb5f0


0xaf51:	mov	dword ptr [rsp + 0x20], 1
0xaf59:	nop	dword ptr [rax]
0xaf60:	mov	rdi, r15
0xaf63:	call	0xb590


0xaf73:	cmp	rax, 0xe
0xaf77:	mov	rbp, rax
0xaf7a:	jbe	0xae5f


0xaf80:	cmp	qword ptr [rsp + 0x48], 0
0xaf86:	jne	0xb070


0xaf8c:	mov	edi, dword ptr [rsp + 0x74]
0xaf90:	mov	dword ptr [rsp + 8], edi
0xaf94:	call	0x2770


0xb070:	cmp	rbp, qword ptr [rsp + 0x48]
0xb075:	jbe	0xae5f


0xb07b:	mov	rax, qword ptr [rsp + 0x18]
0xb080:	mov	rsi, qword ptr [rsp + 0x48]
0xb085:	add	rax, r15
0xb088:	lea	rdx, [rsi - 1]
0xb08c:	sub	rax, rbx
0xb08f:	cmp	rax, rsi
0xb092:	cmovae	rax, rdx
0xb096:	mov	byte ptr [rbx + rax], 0x7e
0xb09a:	mov	byte ptr [rbx + rax + 1], 0
0xb09f:	jmp	0xae5f


0xaf99:	mov	edi, dword ptr [rsp + 8]
0xaf9d:	mov	r12, rax
0xafa0:	test	edi, edi
0xafa2:	js	0xb0e2


0xb0e2:	movzx	edx, word ptr [rbx]
0xb0e5:	mov	esi, 0x2e
0xb0ea:	mov	rdi, r15
0xb0ed:	mov	word ptr [rbx], si
0xb0f0:	mov	dword ptr [rax], 0
0xb0f6:	mov	esi, 3
0xb0fb:	mov	dword ptr [rsp + 8], edx
0xb0ff:	call	0x2880


0xafa8:	mov	dword ptr [rax], 0
0xafae:	mov	esi, 3
0xafb3:	call	0x2b10


0x2880:	jmp	qword ptr [rip + 0x21747a]


0x2b10:	jmp	qword ptr [rip + 0x217332]






0xf1d9:	mov	rdi, r13
0xf1dc:	mov	r14, rax
0xf1df:	call	0xb5f0


0xf1e4:	cmp	r14, rax
0xf1e7:	je	0xf200


0xf200:	mov	rdx, r14
0xf203:	mov	rsi, r13
0xf206:	mov	rdi, r12
0xf209:	call	0x2a90


0xf1e9:	add	rsp, 0x18
0xf1ed:	xor	eax, eax
0xf1ef:	pop	rbx
0xf1f0:	pop	rbp
0xf1f1:	pop	r12
0xf1f3:	pop	r13
0xf1f5:	pop	r14
0xf1f7:	pop	r15
0xf1f9:	ret	


0xf20e:	test	eax, eax
0xf210:	jne	0xf1e9


0xf212:	mov	edi, dword ptr [rsp + 0xc]
0xf216:	add	rsp, 0x18
0xf21a:	mov	rcx, rbp
0xf21d:	mov	edx, r15d
0xf220:	mov	rsi, rbx
0xf223:	pop	rbx
0xf224:	pop	rbp
0xf225:	pop	r12
0xf227:	pop	r13
0xf229:	pop	r14
0xf22b:	pop	r15
0xf22d:	jmp	0xf070


0xba07:	sub	rbx, r12
0xba0a:	mov	r13, rax
0xba0d:	mov	rdi, rbp
0xba10:	add	rbx, rax
0xba13:	call	0x2900


0xb660:	add	rbx, rax
0xb663:	cmp	byte ptr [rbx], 0
0xb666:	mov	byte ptr [rbx], 0
0xb669:	setne	al
0xb66c:	add	rsp, 8
0xb670:	pop	rbx
0xb671:	pop	rbp
0xb672:	ret	


0x49c0:	mov	rdx, qword ptr [rbp - 0x108]
0x49c7:	mov	rdi, qword ptr [rbp - 0xf8]
0x49ce:	mov	rsi, r12
0x49d1:	call	0xb9c0


0x4aaa:	lea	rdi, [rip + 0xdf87]
0x4ab1:	mov	ecx, 3
0x4ab6:	mov	rsi, r12
0x4ab9:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4ab9:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4abb:	seta	al
0x4abe:	sbb	al, 0
0x4ac0:	test	al, al
0x4ac2:	jne	0x4b70


0x4ac8:	mov	rdi, qword ptr [rbp - 0xf8]
0x4acf:	call	0x11250


0x4b70:	mov	rdi, qword ptr [rbp - 0xf8]
0x4b77:	mov	rsi, r12
0x4b7a:	xor	edx, edx
0x4b7c:	call	0xb9c0


0x4b68:	jmp	0x4a5f


0xba18:	test	r13, r13
0xba1b:	mov	r14, rax
0xba1e:	je	0xba50


0xba50:	xor	eax, eax
0xba52:	cmp	byte ptr [rbp], 0x2f
0xba56:	mov	edx, 0
0xba5b:	sete	al
0xba5e:	mov	qword ptr [rsp], rax
0xba62:	mov	eax, 0x2e
0xba67:	cmovne	eax, edx
0xba6a:	mov	byte ptr [rsp + 0xf], al
0xba6e:	lea	rdi, [rbx + r14 + 1]
0xba73:	add	rdi, qword ptr [rsp]
0xba77:	call	0x2bc0


0xba20:	cmp	byte ptr [r12 + rbx - 1], 0x2f
0xba26:	je	0xbad0


0xbad0:	mov	qword ptr [rsp], 0
0xbad8:	mov	byte ptr [rsp + 0xf], 0
0xbadd:	jmp	0xba6e


0xba2c:	xor	eax, eax
0xba2e:	cmp	byte ptr [rbp], 0x2f
0xba32:	mov	edx, 0
0xba37:	setne	al
0xba3a:	mov	qword ptr [rsp], rax
0xba3e:	mov	eax, 0x2f
0xba43:	cmove	eax, edx
0xba46:	mov	byte ptr [rsp + 0xf], al
0xba4a:	jmp	0xba6e


0xba6e:	lea	rdi, [rbx + r14 + 1]
0xba73:	add	rdi, qword ptr [rsp]
0xba77:	call	0x2bc0


0xba7c:	test	rax, rax
0xba7f:	mov	r13, rax
0xba82:	je	0xbab6


0xbab6:	add	rsp, 0x18
0xbaba:	mov	rax, r13
0xbabd:	pop	rbx
0xbabe:	pop	rbp
0xbabf:	pop	r12
0xbac1:	pop	r13
0xbac3:	pop	r14
0xbac5:	pop	r15
0xbac7:	ret	


0xba84:	mov	rdi, rax
0xba87:	mov	rdx, rbx
0xba8a:	mov	rsi, r12
0xba8d:	call	0x2ca0


0xba92:	movzx	ecx, byte ptr [rsp + 0xf]
0xba97:	mov	rdi, qword ptr [rsp]
0xba9b:	add	rdi, rax
0xba9e:	test	r15, r15
0xbaa1:	mov	byte ptr [rax], cl
0xbaa3:	je	0xbaa8


0xbaa8:	mov	rdx, r14
0xbaab:	mov	rsi, rbp
0xbaae:	call	0x2ca0


0xbaa5:	mov	qword ptr [r15], rdi
0xbaa8:	mov	rdx, r14
0xbaab:	mov	rsi, rbp
0xbaae:	call	0x2ca0


0xbab3:	mov	byte ptr [rax], 0
0xbab6:	add	rsp, 0x18
0xbaba:	mov	rax, r13
0xbabd:	pop	rbx
0xbabe:	pop	rbp
0xbabf:	pop	r12
0xbac1:	pop	r13
0xbac3:	pop	r14
0xbac5:	pop	r15
0xbac7:	ret	


0xb9c9:	test	rax, rax
0xb9cc:	je	0xb9d3


0xb9d3:	call	0x11270


0xb9ce:	add	rsp, 8
0xb9d2:	ret	


0x4b81:	mov	r12, rax
0x4b84:	jmp	0x4ad7


0x4ad7:	movzx	edx, byte ptr [rbp - 0xe2]
0x4ade:	mov	r8, qword ptr [rbp - 0x110]
0x4ae5:	xor	r9d, r9d
0x4ae8:	mov	rcx, r14
0x4aeb:	mov	rsi, r12
0x4aee:	mov	rdi, r13
0x4af1:	call	0x9b90


0x4af6:	and	r15d, eax
0x4af9:	cmp	byte ptr [rip + 0x215651], 0
0x4b00:	je	0x4a2b


0x4a2b:	mov	rdi, r12
0x4a2e:	add	rbx, 8
0x4a32:	call	0x2e10


0x4b06:	mov	rsi, qword ptr [rbp - 0xd8]
0x4b0d:	mov	rdx, qword ptr [rbp - 0xe0]
0x4b14:	mov	rcx, r14
0x4b17:	mov	rdi, r12
0x4b1a:	sub	rsi, r12
0x4b1d:	call	0x3fc0


0x4b22:	and	r15d, eax
0x4b25:	movzx	eax, byte ptr [rip + 0x215625]
0x4b2c:	jmp	0x4a23


0x4a23:	test	al, al
0x4a25:	jne	0x4b4b


0x4b4b:	mov	rdi, qword ptr [rbp - 0xe0]
0x4b52:	test	rdi, rdi
0x4b55:	jne	0x4b38


0x4b57:	jmp	0x4a2b


0x4b38:	mov	rax, qword ptr [rdi + 0xa0]
0x4b3f:	mov	qword ptr [rbp - 0xe0], rax
0x4b46:	call	0x2e10


0x4a37:	cmp	qword ptr [rbp - 0x100], rbx
0x4a3e:	je	0x4911


0x4911:	mov	rcx, qword ptr [rbp - 0x38]
0x4915:	xor	rcx, qword ptr fs:[0x28]
0x491e:	mov	eax, r15d
0x4921:	jne	0x4cb7


0x49d6:	cmp	byte ptr [r14 + 0x2e], 0
0x49db:	mov	rsi, qword ptr [rbp - 0xd8]
0x49e2:	mov	r12, rax
0x49e5:	lea	rax, [rip + 0xdfff]
0x49ec:	mov	edx, 0
0x49f1:	lea	rcx, [rbp - 0xe0]
0x49f8:	lea	r8, [rbp - 0xe2]
0x49ff:	mov	r9, r14
0x4a02:	mov	rdi, r12
0x4a05:	cmovne	rdx, rax
0x4a09:	sub	rsi, r12
0x4a0c:	call	0x3a00


0x4a11:	test	al, al
0x4a13:	jne	0x4ad7


0x4a19:	movzx	eax, byte ptr [rip + 0x215731]
0x4a20:	xor	r15d, r15d
0x4a23:	test	al, al
0x4a25:	jne	0x4b4b


0x11259:	mov	rdi, rbx
0x1125c:	lea	rsi, [rax + 1]
0x11260:	pop	rbx
0x11261:	jmp	0x11220


0x9a57:	mov	r12, rax
0x9a5a:	call	0x2770


0x9a5f:	mov	rcx, qword ptr [rbp - 0x308]
0x9a66:	mov	esi, dword ptr [rax]
0x9a68:	xor	edi, edi
0x9a6a:	xor	eax, eax
0x9a6c:	mov	rdx, r12
0x9a6f:	call	0x2cb0


0x2e58:	mov	esi, dword ptr [rbx]
0x2e5a:	mov	rdx, rax
0x2e5d:	mov	edi, 1
0x2e62:	xor	eax, eax
0x2e64:	call	0x2cb0


0x10a0f:	lea	rdx, [rip + 0x51ca]
0x10a16:	mov	rcx, rax
0x10a19:	mov	r8d, 0x7e3
0x10a1f:	mov	esi, 1
0x10a24:	mov	rdi, rbp
0x10a27:	xor	eax, eax
0x10a29:	call	0x2db0


0x10a2e:	lea	rsi, [rip + 0x4f23]
0x10a35:	xor	edi, edi
0x10a37:	mov	edx, 5
0x10a3c:	call	0x28e0


0x10a41:	mov	rsi, rbp
0x10a44:	mov	rdi, rax
0x10a47:	call	0x2ab0


0x2ab0:	jmp	qword ptr [rip + 0x217362]




0x7dc3:	mov	edi, 1
0x7dc8:	mov	rsi, rax
0x7dcb:	xor	eax, eax
0x7dcd:	call	0x2c60


0x2c60:	jmp	qword ptr [rip + 0x21728a]




0x6e23:	mov	edi, 1
0x6e28:	mov	rsi, rax
0x6e2b:	xor	eax, eax
0x6e2d:	call	0x2c60


0x4ccf:	xor	esi, esi
0x4cd1:	mov	rdx, rax
0x4cd4:	xor	edi, edi
0x4cd6:	xor	eax, eax
0x4cd8:	call	0x2cb0


0x4c82:	xor	esi, esi
0x4c84:	mov	rdx, rax
0x4c87:	mov	edi, 1
0x4c8c:	xor	eax, eax
0x4c8e:	call	0x2cb0


0x425d:	mov	rdi, qword ptr [rip + 0x215e7c]
0x4264:	mov	rdx, rax
0x4267:	mov	rcx, rbx
0x426a:	mov	esi, 1
0x426f:	xor	eax, eax
0x4271:	call	0x2db0


0x4276:	mov	edi, ebp
0x4278:	call	0x2d90


0x2d90:	jmp	qword ptr [rip + 0x2171f2]




0x428b:	mov	r8, rbx
0x428e:	mov	rcx, rbx
0x4291:	mov	rdx, rbx
0x4294:	mov	rsi, rax
0x4297:	mov	edi, 1
0x429c:	xor	eax, eax
0x429e:	call	0x2c60


0xa8c3:	mov	rbx, rax
0xa8c6:	mov	rsi, rbp
0xa8c9:	mov	edi, 1
0xa8ce:	call	0xed60


0xa90e:	mov	rbx, rax
0xa911:	jmp	0xa8c6


0xa8c6:	mov	rsi, rbp
0xa8c9:	mov	edi, 1
0xa8ce:	call	0xed60


0xa951:	mov	rdi, rax
0xa954:	mov	rsi, rbx
0xa957:	call	0x2ab0


0x10f74:	lea	rdx, [rip + 0x49b3]
0x10f7b:	mov	rsi, rax
0x10f7e:	mov	edi, 1
0x10f83:	xor	eax, eax
0x10f85:	call	0x2c60


0x11287:	mov	edi, dword ptr [rip + 0x208da3]
0x1128d:	lea	rdx, [rip + 0x3ef9]
0x11294:	mov	rcx, rax
0x11297:	xor	esi, esi
0x11299:	xor	eax, eax
0x1129b:	call	0x2cb0


0x112f4:	test	rax, rax
0x112f7:	jle	0x11312


0x11312:	mov	rdi, qword ptr [rsp + 8]
0x11317:	call	0x2e10


0x112f9:	mov	rdi, qword ptr [rsp + 8]
0x112fe:	lea	rax, [rdi + rax - 1]
0x11303:	cmp	byte ptr [rax], 0xa
0x11306:	je	0x11338


0x11338:	mov	byte ptr [rax], 0
0x1133b:	mov	rdi, qword ptr [rsp + 8]
0x11340:	jmp	0x11308


0x11308:	call	0x2b20


0x2b20:	jmp	qword ptr [rip + 0x21732a]




0x1131c:	mov	rdx, qword ptr [rsp + 0x18]
0x11321:	xor	rdx, qword ptr fs:[0x28]
0x1132a:	mov	eax, ebx
0x1132c:	jne	0x11342


0x1132e:	add	rsp, 0x20
0x11332:	pop	rbx
0x11333:	ret	


0x11342:	call	0x2930


0x11457:	cmp	rax, -3
0x1145b:	mov	rbp, rax
0x1145e:	jbe	0x11480


0x11480:	mov	rdx, qword ptr [rsp + 8]
0x11485:	xor	rdx, qword ptr fs:[0x28]
0x1148e:	mov	rax, rbp
0x11491:	jne	0x1149e


0x11460:	test	r12, r12
0x11463:	je	0x11480


0x11493:	add	rsp, 0x18
0x11497:	pop	rbx
0x11498:	pop	rbp
0x11499:	pop	r12
0x1149b:	pop	r13
0x1149d:	ret	


0x1149e:	call	0x2930


0x11465:	xor	edi, edi
0x11467:	call	0x116a0


0x11503:	test	eax, eax
0x11505:	setne	al
0x11508:	add	rsp, 8
0x1150c:	movzx	eax, al
0x1150f:	neg	eax
0x11511:	ret	


0xd070:	mov	rdi, rbx
0xd073:	mov	ebp, eax
0xd075:	call	0x114b0


0xd0dc:	mov	rdi, rbx
0xd0df:	mov	ebp, eax
0xd0e1:	call	0x114b0


0xd0e6:	mov	rcx, qword ptr [rsp + 8]
0xd0eb:	xor	rcx, qword ptr fs:[0x28]
0xd0f4:	jne	0xd0ff


0xd0f6:	add	rsp, 0x18
0xd0fa:	mov	eax, ebp
0xd0fc:	pop	rbx
0xd0fd:	pop	rbp
0xd0fe:	ret	


0xd0ff:	call	0x2930


0x5972:	test	eax, eax
0x5974:	je	0x5895


0x597a:	call	0x2770


0x597f:	mov	rbx, rax
0x5982:	mov	eax, dword ptr [rax]
0x5984:	cmp	eax, 1
0x5987:	je	0x5a40


0x5a40:	cmp	byte ptr [rbp + 0x1b], 0
0x5a44:	jne	0x5996


0x598d:	cmp	eax, 0x16
0x5990:	je	0x5a40


0x5a4a:	jmp	0x5a0c


0x5996:	mov	rsi, r13
0x5999:	mov	edi, 4
0x599e:	call	0xeab0


0x5a0c:	movzx	eax, byte ptr [rbp + 0x24]
0x5a10:	add	rsp, 8
0x5a14:	pop	rbx
0x5a15:	pop	rbp
0x5a16:	pop	r12
0x5a18:	neg	eax
0x5a1a:	pop	r13
0x5a1c:	pop	r14
0x5a1e:	pop	r15
0x5a20:	ret	


0xa63c:	test	eax, eax
0xa63e:	mov	ebx, eax
0xa640:	je	0xa679


0xa679:	mov	eax, ebx
0xa67b:	pop	rbx
0xa67c:	pop	rbp
0xa67d:	pop	r12
0xa67f:	ret	


0xa642:	mov	rdi, rbp
0xa645:	call	0xed80


0x99fb:	test	eax, eax
0x99fd:	sete	r8b
0x9a01:	jmp	0x8d15


0x9b77:	test	eax, eax
0x9b79:	sete	r8b
0x9b7d:	jmp	0x8d15


0x85e9:	test	eax, eax
0x85eb:	jne	0x5d90


0x85f1:	jmp	0x62c6


0x1152c:	mov	ebx, dword ptr [rbp]
0x1152f:	mov	rdi, rbp
0x11532:	mov	r12, rax
0x11535:	call	0x12490


0x115ad:	test	rax, rax
0x115b0:	mov	rbx, rax
0x115b3:	je	0x115c2


0x115c2:	mov	rax, rbx
0x115c5:	pop	rbx
0x115c6:	pop	rbp
0x115c7:	pop	r12
0x115c9:	pop	r13
0x115cb:	pop	r14
0x115cd:	ret	


0x115b5:	mov	rdi, rax
0x115b8:	call	0x2b00


0x2b00:	jmp	qword ptr [rip + 0x21733a]




0xf61b:	test	rax, rax
0xf61e:	je	0xf648


0xf648:	xor	ebp, ebp
0xf64a:	jmp	0xf63c


0xf620:	mov	esi, ebp
0xf622:	mov	rbx, rax
0xf625:	mov	rdi, rax
0xf628:	call	0xf290


0xf63c:	mov	rax, rbp
0xf63f:	pop	rbx
0xf640:	pop	rbp
0xf641:	pop	r12
0xf643:	ret	


0xf62d:	mov	rdi, rbx
0xf630:	mov	rbp, rax
0xf633:	call	0x2a60


0x782c:	test	rax, rax
0x782f:	mov	qword ptr [rbp - 0x368], rax
0x7836:	je	0x8698


0x8698:	mov	rsi, qword ptr [rbp - 0x310]
0x869f:	mov	edi, 4
0x86a4:	call	0xeab0


0x783c:	cmp	dword ptr [rbx + 4], 3
0x7840:	jne	0x784c


0x7842:	mov	dword ptr [rbp - 0x2ec], 2
0x784c:	mov	rax, qword ptr [rbp - 0x368]
0x7853:	cmp	byte ptr [rax], 0
0x7856:	je	0x8d95


0x784c:	mov	rax, qword ptr [rbp - 0x368]
0x7853:	cmp	byte ptr [rax], 0
0x7856:	je	0x8d95


0x8d95:	mov	byte ptr [rbp - 0x315], 0
0x8d9c:	mov	r12d, 1
0x8da2:	jmp	0x79a7


0x785c:	lea	rax, [rbp - 0x2f0]
0x7863:	lea	r10, [rbp - 0x280]
0x786a:	mov	dword ptr [rbp - 0x380], r13d
0x7871:	mov	r15, qword ptr [rbp - 0x368]
0x7878:	mov	r13, qword ptr [rbp - 0x340]
0x787f:	mov	r12d, 1
0x7885:	mov	qword ptr [rbp - 0x348], rax
0x788c:	lea	rax, [rbp - 0x2f9]
0x7893:	mov	byte ptr [rbp - 0x315], 0
0x789a:	mov	byte ptr [rbp - 0x370], r14b
0x78a1:	mov	qword ptr [rbp - 0x378], rbx
0x78a8:	mov	qword ptr [rbp - 0x350], rax
0x78af:	lea	rax, [rbp - 0x2f8]
0x78b6:	mov	qword ptr [rbp - 0x340], r10
0x78bd:	mov	qword ptr [rbp - 0x358], rax
0x78c4:	jmp	0x78f4


0x79a7:	mov	rdi, qword ptr [rbp - 0x368]
0x79ae:	call	0x2e10


0x78f4:	mov	rdi, qword ptr [rbp - 0x310]
0x78fb:	xor	edx, edx
0x78fd:	mov	rsi, r15
0x7900:	call	0xb9c0


0x7905:	mov	rdi, qword ptr [rbp - 0x308]
0x790c:	xor	edx, edx
0x790e:	mov	rsi, r15
0x7911:	mov	rbx, rax
0x7914:	call	0xb9c0


0x7919:	mov	r14, rax
0x791c:	mov	rax, qword ptr [rbp - 0x338]
0x7923:	mov	r9, qword ptr [rbp - 0x348]
0x792a:	mov	r8, qword ptr [rbp - 0x328]
0x7931:	mov	rcx, qword ptr [rbp - 0x340]
0x7938:	mov	rsi, r14
0x793b:	mov	edx, dword ptr [rbp - 0x320]
0x7941:	mov	rdi, rbx
0x7944:	movzx	eax, byte ptr [rax]
0x7947:	push	0
0x7949:	push	qword ptr [rbp - 0x350]
0x794f:	push	qword ptr [rbp - 0x358]
0x7955:	push	0
0x7957:	mov	byte ptr [rbp - 0x2f8], al
0x795d:	call	0x5a80


0x7962:	and	r12d, eax
0x7965:	movzx	eax, byte ptr [rbp - 0x2f9]
0x796c:	add	rsp, 0x20
0x7970:	or	byte ptr [r13], al
0x7974:	mov	rdi, r14
0x7977:	call	0x2e10


0x797c:	mov	rdi, rbx
0x797f:	call	0x2e10


0x7984:	cmp	byte ptr [rbp - 0x2f9], 0
0x798b:	je	0x78d0


0x78d0:	movzx	eax, byte ptr [rbp - 0x2f8]
0x78d7:	mov	rdi, r15
0x78da:	or	byte ptr [rbp - 0x315], al
0x78e0:	call	0x2900


0x7991:	movzx	r14d, byte ptr [rbp - 0x370]
0x7999:	mov	rbx, qword ptr [rbp - 0x378]
0x79a0:	mov	r13d, dword ptr [rbp - 0x380]
0x79a7:	mov	rdi, qword ptr [rbp - 0x368]
0x79ae:	call	0x2e10


0x78e5:	lea	r15, [r15 + rax + 1]
0x78ea:	cmp	byte ptr [r15], 0
0x78ee:	je	0x7991


0x79b3:	movzx	ecx, byte ptr [rbp - 0x315]
0x79ba:	mov	rax, qword ptr [rbp - 0x338]
0x79c1:	mov	byte ptr [rax], cl
0x79c3:	test	r13b, r13b
0x79c6:	jne	0x7fa2


0x1166e:	mov	rcx, qword ptr [rsp + 0x18]
0x11673:	xor	rcx, qword ptr fs:[0x28]
0x1167c:	mov	rax, qword ptr [rsp]
0x11680:	mov	rdx, qword ptr [rsp + 8]
0x11685:	jne	0x1168c


0x11687:	add	rsp, 0x28
0x1168b:	ret	


0x1168c:	call	0x2930


0x2ecc:	lea	rsi, [rip + 0xfb68]
0x2ed3:	lea	rdi, [rip + 0xfae8]
0x2eda:	call	0x28b0


0x28b0:	jmp	qword ptr [rip + 0x217462]




0x116ab:	mov	rdx, rax
0x116ae:	mov	eax, 1
0x116b3:	test	rdx, rdx
0x116b6:	je	0x116d5


0x116d5:	add	rsp, 8
0x116d9:	ret	


0x116b8:	lea	rdi, [rip + 0x4561]
0x116bf:	mov	ecx, 2
0x116c4:	mov	rsi, rdx
0x116c7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x116c7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x116c9:	seta	cl
0x116cc:	sbb	cl, 0
0x116cf:	xor	eax, eax
0x116d1:	test	cl, cl
0x116d3:	jne	0x116e0


0x116e0:	lea	rdi, [rip + 0x453b]
0x116e7:	mov	ecx, 6
0x116ec:	mov	rsi, rdx
0x116ef:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x116ef:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x116f1:	seta	al
0x116f4:	sbb	al, 0
0x116f6:	test	al, al
0x116f8:	setne	al
0x116fb:	add	rsp, 8
0x116ff:	ret	


0x1146c:	test	al, al
0x1146e:	jne	0x11480


0x11470:	movzx	eax, byte ptr [r13]
0x11475:	mov	ebp, 1
0x1147a:	mov	dword ptr [rbx], eax
0x1147c:	nop	dword ptr [rax]
0x11480:	mov	rdx, qword ptr [rsp + 8]
0x11485:	xor	rdx, qword ptr fs:[0x28]
0x1148e:	mov	rax, rbp
0x11491:	jne	0x1149e


0x1174e:	test	rax, rax
0x11751:	je	0x11770


0x11770:	lea	rax, [rip + 0x44b1]
0x11777:	add	rsp, 8
0x1177b:	ret	


0x11753:	cmp	byte ptr [rax], 0
0x11756:	lea	rdx, [rip + 0x44cb]
0x1175d:	cmove	rax, rdx
0x11761:	add	rsp, 8
0x11765:	ret	


0xd120:	movzx	edx, byte ptr [rax]
0xd123:	and	edx, 0xffffffdf
0xd126:	cmp	dl, 0x55
0xd129:	je	0xd1a0


0xd1a0:	movzx	edx, byte ptr [rax + 1]
0xd1a4:	and	edx, 0xffffffdf
0xd1a7:	cmp	dl, 0x54
0xd1aa:	jne	0xd130


0xd12b:	cmp	dl, 0x47
0xd12e:	je	0xd150


0xd1ac:	movzx	edx, byte ptr [rax + 2]
0xd1b0:	and	edx, 0xffffffdf
0xd1b3:	cmp	dl, 0x46
0xd1b6:	jne	0xd130


0xd130:	lea	rax, [rip + 0x81fc]
0xd137:	lea	rdx, [rip + 0x81f7]
0xd13e:	cmp	ebx, 9
0xd141:	cmovne	rax, rdx
0xd145:	add	rsp, 8
0xd149:	pop	rbx
0xd14a:	pop	rbp
0xd14b:	ret	


0xd150:	movzx	edx, byte ptr [rax + 1]
0xd154:	and	edx, 0xffffffdf
0xd157:	cmp	dl, 0x42
0xd15a:	jne	0xd130


0xd1bc:	cmp	byte ptr [rax + 3], 0x2d
0xd1c0:	jne	0xd130


0xd15c:	cmp	byte ptr [rax + 2], 0x31
0xd160:	jne	0xd130


0xd1c6:	cmp	byte ptr [rax + 4], 0x38
0xd1ca:	jne	0xd130


0xd162:	cmp	byte ptr [rax + 3], 0x38
0xd166:	jne	0xd130


0xd1d0:	cmp	byte ptr [rax + 5], 0
0xd1d4:	jne	0xd130


0xd168:	cmp	byte ptr [rax + 4], 0x30
0xd16c:	jne	0xd130


0xd1da:	cmp	byte ptr [rbp], 0x60
0xd1de:	lea	rax, [rip + 0x813f]
0xd1e5:	lea	rdx, [rip + 0x813c]
0xd1ec:	cmovne	rax, rdx
0xd1f0:	add	rsp, 8
0xd1f4:	pop	rbx
0xd1f5:	pop	rbp
0xd1f6:	ret	


0xd16e:	cmp	byte ptr [rax + 5], 0x33
0xd172:	jne	0xd130


0xd174:	cmp	byte ptr [rax + 6], 0x30
0xd178:	jne	0xd130


0xd17a:	cmp	byte ptr [rax + 7], 0
0xd17e:	jne	0xd130


0xd180:	cmp	byte ptr [rbp], 0x60
0xd184:	lea	rax, [rip + 0x81a1]
0xd18b:	lea	rdx, [rip + 0x819e]
0xd192:	cmovne	rax, rdx
0xd196:	add	rsp, 8
0xd19a:	pop	rbx
0xd19b:	pop	rbp
0xd19c:	ret	


0x830b:	mov	r15, qword ptr [rip + 0x21226e]
0x8312:	mov	rsi, qword ptr [rbp - 0x308]
0x8319:	mov	rdx, r14
0x831c:	mov	rdi, rax
0x831f:	mov	r12, rax
0x8322:	call	0x2ca0


0x8327:	mov	rsi, r15
0x832a:	mov	rdi, rax
0x832d:	call	0x27b0


0x27b0:	jmp	qword ptr [rip + 0x2174e2]




0x11b2a:	mov	rbx, rax
0x11b2d:	mov	qword ptr [rax], 0
0x11b34:	lea	rax, [rip - 0x12b]
0x11b3b:	lea	rdi, [rip + 0x410b]
0x11b42:	xor	esi, esi
0x11b44:	mov	qword ptr [rbx + 0x10], 0
0x11b4c:	mov	qword ptr [rbx + 8], rax
0x11b50:	mov	qword ptr [rbx + 0x18], 0
0x11b58:	xor	eax, eax
0x11b5a:	call	0x2cd0


0x11b5f:	test	eax, eax
0x11b61:	lea	r13, [rbx + 0x20]
0x11b65:	mov	r15d, eax
0x11b68:	js	0x11be8


0x11be8:	lea	r12, [rsp + 0x10]
0x11bed:	xor	esi, esi
0x11bef:	mov	r14d, 0x18
0x11bf5:	mov	rdi, r12
0x11bf8:	call	0x29d0


0x11b6a:	cmp	rbp, 0x800
0x11b71:	mov	rdx, rbp
0x11b74:	mov	r14d, 0x800
0x11b7a:	cmova	rdx, r14
0x11b7e:	mov	ecx, 0x1018
0x11b83:	mov	rsi, r13
0x11b86:	mov	edi, eax
0x11b88:	call	0x27d0


0x29d0:	jmp	qword ptr [rip + 0x2173d2]


0x27d0:	jmp	qword ptr [rip + 0x2174d2]






0xb752:	mov	rdi, r12
0xb755:	mov	rbx, rax
0xb758:	call	0x11250


0x11bc2:	mov	rbx, rax
0x11bc5:	mov	qword ptr [rax], 0
0x11bcc:	lea	rax, [rip - 0x1c3]
0x11bd3:	mov	qword ptr [rbx + 0x10], 0
0x11bdb:	mov	qword ptr [rbx + 8], rax
0x11bdf:	jmp	0x11af7


0x11af7:	mov	rdx, qword ptr [rsp + 0x28]
0x11afc:	xor	rdx, qword ptr fs:[0x28]
0x11b05:	mov	rax, rbx
0x11b08:	jne	0x11cbf


0x11b0e:	add	rsp, 0x38
0x11b12:	pop	rbx
0x11b13:	pop	rbp
0x11b14:	pop	r12
0x11b16:	pop	r13
0x11b18:	pop	r14
0x11b1a:	pop	r15
0x11b1c:	ret	


0x11cbf:	call	0x2930


0x9e3d:	mov	rdi, r13
0x9e40:	mov	rbx, rax
0x9e43:	call	0x11250


0x111d9:	mov	rdx, rbx
0x111dc:	xor	esi, esi
0x111de:	mov	rdi, rax
0x111e1:	pop	rbx
0x111e2:	jmp	0x29f0


0x11234:	add	rsp, 8
0x11238:	mov	rdx, rbx
0x1123b:	mov	rsi, rbp
0x1123e:	pop	rbx
0x1123f:	pop	rbp
0x11240:	mov	rdi, rax
0x11243:	jmp	0x2b60


0x117fe:	mov	qword ptr [rax], rbx
0x11801:	mov	qword ptr [rax + 0x10], 0
0x11809:	mov	qword ptr [rax + 8], 0
0x11811:	pop	rbx
0x11812:	ret	


0x11826:	test	rax, rax
0x11829:	je	0x11850


0x11850:	xor	eax, eax
0x11852:	pop	rbx
0x11853:	ret	


0x1182b:	mov	rbx, rax
0x1182e:	mov	edi, 0x18
0x11833:	call	0x11020


0x11838:	mov	qword ptr [rax], rbx
0x1183b:	mov	qword ptr [rax + 0x10], 0
0x11843:	mov	qword ptr [rax + 8], 0
0x1184b:	pop	rbx
0x1184c:	ret	


0x119a5:	mov	rdi, rbx
0x119a8:	pop	rbx
0x119a9:	jmp	0x2e10


0x11f7d:	mov	rdi, rbx
0x11f80:	call	0x2e10


0x11f85:	test	rbp, rbp
0x11f88:	je	0x11fa0


0x11fa0:	add	rsp, 8
0x11fa4:	xor	eax, eax
0x11fa6:	pop	rbx
0x11fa7:	pop	rbp
0x11fa8:	ret	


0x11f8a:	add	rsp, 8
0x11f8e:	mov	rdi, rbp
0x11f91:	pop	rbx
0x11f92:	pop	rbp
0x11f93:	jmp	0x12490


0x119c5:	mov	r12d, eax
0x119c8:	call	0x2770


0x119cd:	mov	r13d, dword ptr [rax]
0x119d0:	mov	rdi, rbx
0x119d3:	mov	rdx, -1
0x119da:	mov	esi, 0x18
0x119df:	mov	rbp, rax
0x119e2:	call	0x2cc0


0x119e7:	mov	rdi, rbx
0x119ea:	call	0x2e10


0x119ef:	mov	dword ptr [rbp], r13d
0x119f3:	add	rsp, 8
0x119f7:	mov	eax, r12d
0x119fa:	pop	rbx
0x119fb:	pop	rbp
0x119fc:	pop	r12
0x119fe:	pop	r13
0x11a00:	ret	


0x113f3:	mov	edx, r12d
0x113f6:	mov	rsi, rbp
0x113f9:	mov	edi, eax
0x113fb:	call	0x29c0


0x11400:	cmp	rax, -1
0x11404:	je	0x11412


0x11412:	pop	rbx
0x11413:	pop	rbp
0x11414:	pop	r12
0x11416:	ret	


0x11406:	and	dword ptr [rbx], 0xffffffef
0x11409:	mov	qword ptr [rbx + 0x90], rax
0x11410:	xor	eax, eax
0x11412:	pop	rbx
0x11413:	pop	rbp
0x11414:	pop	r12
0x11416:	ret	


0x11387:	mov	rdi, rbx
0x1138a:	pop	rbx
0x1138b:	jmp	0x2bd0


0xb397:	test	eax, eax
0xb399:	mov	rdi, qword ptr [rip + 0x20ed10]
0xb3a0:	je	0xb308


0xb308:	call	0x11350


0xb3a6:	call	0x11520


0xb69d:	mov	ecx, ebx
0xb69f:	xor	edx, edx
0xb6a1:	xor	esi, esi
0xb6a3:	pop	rbx
0xb6a4:	mov	edi, eax
0xb6a6:	jmp	0x2a70


0x1249c:	test	eax, eax
0x1249e:	mov	rdi, rbx
0x124a1:	js	0x124f7


0x124f7:	pop	rbx
0x124f8:	pop	rbp
0x124f9:	pop	r12
0x124fb:	jmp	0x2890


0x124a3:	call	0x2c10


0x2890:	jmp	qword ptr [rip + 0x217472]




0x124a8:	test	eax, eax
0x124aa:	jne	0x124d8


0x124ac:	mov	rdi, rbx
0x124af:	call	0x11350


0x124d8:	mov	rdi, rbx
0x124db:	call	0x2b80


0x124e0:	xor	esi, esi
0x124e2:	mov	edx, 1
0x124e7:	mov	edi, eax
0x124e9:	call	0x29c0


0x124ee:	cmp	rax, -1
0x124f2:	jne	0x124ac


0x124f4:	mov	rdi, rbx
0x124f7:	pop	rbx
0x124f8:	pop	rbp
0x124f9:	pop	r12
0x124fb:	jmp	0x2890


0x1279c:	test	rax, rax
0x1279f:	mov	rbx, rax
0x127a2:	je	0x127b1


0x127b1:	mov	rax, rbx
0x127b4:	pop	rbx
0x127b5:	pop	rbp
0x127b6:	pop	r12
0x127b8:	ret	


0x127a4:	mov	rdi, rax
0x127a7:	call	0x2b80


0x127ac:	cmp	eax, 2
0x127af:	jbe	0x127c0


0x127c0:	mov	edi, eax
0x127c2:	call	0x12480


0x11aae:	test	rax, rax
0x11ab1:	mov	r13, rax
0x11ab4:	je	0x11cb8


0x11cb8:	xor	ebx, ebx
0x11cba:	jmp	0x11af7


0x11aba:	mov	edi, 0x1038
0x11abf:	call	0x11020


0x11ac4:	mov	rbx, rax
0x11ac7:	mov	qword ptr [rax], r13
0x11aca:	lea	rax, [rip - 0xc1]
0x11ad1:	cmp	rbp, 0x1000
0x11ad8:	mov	ecx, 0x1000
0x11add:	lea	rsi, [rbx + 0x18]
0x11ae1:	cmovbe	rcx, rbp
0x11ae5:	mov	qword ptr [rbx + 8], rax
0x11ae9:	mov	qword ptr [rbx + 0x10], r12
0x11aed:	xor	edx, edx
0x11aef:	mov	rdi, r13
0x11af2:	call	0x2c80


0x2c80:	jmp	qword ptr [rip + 0x21727a]




0x124b4:	test	eax, eax
0x124b6:	je	0x124f4


0x124b8:	call	0x2770


0x124bd:	mov	r12d, dword ptr [rax]
0x124c0:	mov	rdi, rbx
0x124c3:	mov	rbp, rax
0x124c6:	call	0x2890


0x124cb:	test	r12d, r12d
0x124ce:	jne	0x12500


0x124d0:	pop	rbx
0x124d1:	pop	rbp
0x124d2:	pop	r12
0x124d4:	ret	


0x12500:	mov	dword ptr [rbp], r12d
0x12504:	mov	eax, 0xffffffff
0x12509:	jmp	0x124d0


0xb30d:	test	eax, eax
0xb30f:	mov	rdi, qword ptr [rip + 0x20ed9a]
0xb316:	je	0xb3a6


0xb31c:	call	0x11520


0x11b8d:	mov	edi, r15d
0x11b90:	mov	rbp, rax
0x11b93:	call	0x2a30


0x11bfd:	movdqa	xmm0, xmmword ptr [rsp + 0x10]
0x11c03:	movups	xmmword ptr [rbx + 0x20], xmm0
0x11c07:	call	0x2850


0x2850:	jmp	qword ptr [rip + 0x217492]




0x8332:	lea	rdx, [rbp - 0xd0]
0x8339:	mov	rsi, r12
0x833c:	mov	edi, 1
0x8341:	call	0x2ba0


0x8346:	mov	rdi, r12
0x8349:	mov	r15d, eax
0x834c:	call	0x2e10


0x8351:	test	r15d, r15d
0x8354:	movzx	r9d, byte ptr [rbp - 0x350]
0x835c:	jne	0x6849


0x8362:	mov	rax, qword ptr [rbp - 0xc8]
0x8369:	cmp	qword ptr [rbp - 0x278], rax
0x8370:	jne	0x6849


0x8376:	mov	rax, qword ptr [rbp - 0xd0]
0x837d:	cmp	qword ptr [rbp - 0x280], rax
0x8384:	jne	0x6849


0x838a:	cmp	byte ptr [rbx + 0x18], 0
0x838e:	je	0x85f6


0x85f6:	lea	rsi, [rip + 0xc3db]
0x85fd:	mov	edx, 5
0x8602:	xor	edi, edi
0x8604:	call	0x28e0


0x8394:	lea	rsi, [rip + 0xc605]
0x839b:	mov	edx, 5
0x83a0:	xor	edi, edi
0x83a2:	call	0x28e0


0x83a7:	mov	rbx, rax
0x83aa:	mov	rdx, qword ptr [rbp - 0x310]
0x83b1:	mov	esi, 4
0x83b6:	mov	edi, 1
0x83bb:	call	0xe990


0x8609:	mov	rbx, rax
0x860c:	jmp	0x83aa


0x83aa:	mov	rdx, qword ptr [rbp - 0x310]
0x83b1:	mov	esi, 4
0x83b6:	mov	edi, 1
0x83bb:	call	0xe990


0x2edf:	lea	rdi, [rip + 0xfadc]
0x2ee6:	call	0x2870


0x2870:	jmp	qword ptr [rip + 0x217482]




0x115bd:	cmp	eax, 2
0x115c0:	jbe	0x115d0


0x115d0:	mov	edi, eax
0x115d2:	mov	edx, 3
0x115d7:	mov	esi, 0x406
0x115dc:	xor	eax, eax
0x115de:	call	0x12510


0x115e3:	mov	r12d, eax
0x115e6:	call	0x2770


0x115eb:	test	r12d, r12d
0x115ee:	mov	rbp, rax
0x115f1:	jns	0x11618


0x115f3:	mov	r14d, dword ptr [rax]
0x115f6:	xor	r13d, r13d
0x115f9:	mov	rdi, rbx
0x115fc:	mov	rbx, r13
0x115ff:	call	0x2a60


0x11618:	mov	edi, r12d
0x1161b:	call	0x2d20


0x1153a:	and	ebx, 0x20
0x1153d:	test	ebx, ebx
0x1153f:	jne	0x11558


0x11541:	test	eax, eax
0x11543:	je	0x1154f


0x11558:	test	eax, eax
0x1155a:	jne	0x11578


0x1154f:	pop	rbx
0x11550:	pop	rbp
0x11551:	pop	r12
0x11553:	ret	


0x11545:	test	r12, r12
0x11548:	mov	eax, 0xffffffff
0x1154d:	je	0x11588


0x1155c:	call	0x2770


0x11578:	pop	rbx
0x11579:	mov	eax, 0xffffffff
0x1157e:	pop	rbp
0x1157f:	pop	r12
0x11581:	ret	


0x11588:	call	0x2770


0x1158d:	cmp	dword ptr [rax], 9
0x11590:	pop	rbx
0x11591:	pop	rbp
0x11592:	pop	r12
0x11594:	setne	al
0x11597:	movzx	eax, al
0x1159a:	neg	eax
0x1159c:	ret	


0x11561:	mov	dword ptr [rax], 0
0x11567:	mov	eax, 0xffffffff
0x1156c:	pop	rbx
0x1156d:	pop	rbp
0x1156e:	pop	r12
0x11570:	ret	


0x1130d:	test	eax, eax
0x1130f:	setg	bl
0x11312:	mov	rdi, qword ptr [rsp + 8]
0x11317:	call	0x2e10


0x10f8a:	lea	rsi, [rip + 0x49b3]
0x10f91:	mov	edx, 5
0x10f96:	xor	edi, edi
0x10f98:	call	0x28e0


0x10f9d:	lea	rcx, [rip + 0x3444]
0x10fa4:	lea	rdx, [rip + 0x1a13]
0x10fab:	mov	rsi, rax
0x10fae:	mov	edi, 1
0x10fb3:	xor	eax, eax
0x10fb5:	call	0x2c60


0x10fba:	mov	rbx, qword ptr [rip + 0x2090e7]
0x10fc1:	lea	rsi, [rip + 0x4ba8]
0x10fc8:	xor	edi, edi
0x10fca:	mov	edx, 5
0x10fcf:	call	0x28e0


0x10fd4:	mov	rsi, rbx
0x10fd7:	mov	rdi, rax
0x10fda:	pop	rbx
0x10fdb:	jmp	0x2ab0


0x42a3:	mov	rbx, qword ptr [rip + 0x215dfe]
0x42aa:	lea	rsi, [rip + 0xef3f]
0x42b1:	mov	edx, 5
0x42b6:	xor	edi, edi
0x42b8:	call	0x28e0


0x42bd:	mov	rsi, rbx
0x42c0:	mov	rdi, rax
0x42c3:	call	0x2ab0


0x6e32:	mov	rdx, qword ptr [rbp - 0x350]
0x6e39:	mov	rsi, qword ptr [rbp - 0x308]
0x6e40:	mov	rdi, qword ptr [rbp - 0x310]
0x6e47:	call	0x4e30


0x7dd2:	mov	rdx, qword ptr [rbp - 0x350]
0x7dd9:	mov	rsi, qword ptr [rbp - 0x308]
0x7de0:	mov	rdi, qword ptr [rbp - 0x310]
0x7de7:	call	0x4e30


0x42c8:	mov	rbx, qword ptr [rip + 0x215dd9]
0x42cf:	lea	rsi, [rip + 0xef5a]
0x42d6:	mov	edx, 5
0x42db:	xor	edi, edi
0x42dd:	call	0x28e0


0x42e2:	mov	rsi, rbx
0x42e5:	mov	rdi, rax
0x42e8:	call	0x2ab0


0x42ed:	mov	rbx, qword ptr [rip + 0x215db4]
0x42f4:	lea	rsi, [rip + 0xef85]
0x42fb:	mov	edx, 5
0x4300:	xor	edi, edi
0x4302:	call	0x28e0


0x4307:	mov	rsi, rbx
0x430a:	mov	rdi, rax
0x430d:	call	0x2ab0


0x4312:	mov	rbx, qword ptr [rip + 0x215d8f]
0x4319:	lea	rsi, [rip + 0xf120]
0x4320:	mov	edx, 5
0x4325:	xor	edi, edi
0x4327:	call	0x28e0


0x432c:	mov	rsi, rbx
0x432f:	mov	rdi, rax
0x4332:	call	0x2ab0


0x4337:	mov	rbx, qword ptr [rip + 0x215d6a]
0x433e:	lea	rsi, [rip + 0xf2ab]
0x4345:	mov	edx, 5
0x434a:	xor	edi, edi
0x434c:	call	0x28e0


0x4351:	mov	rsi, rbx
0x4354:	mov	rdi, rax
0x4357:	call	0x2ab0


0x435c:	mov	rbx, qword ptr [rip + 0x215d45]
0x4363:	lea	rsi, [rip + 0xf316]
0x436a:	mov	edx, 5
0x436f:	xor	edi, edi
0x4371:	call	0x28e0


0x4376:	mov	rsi, rbx
0x4379:	mov	rdi, rax
0x437c:	call	0x2ab0


0x4381:	mov	rbx, qword ptr [rip + 0x215d20]
0x4388:	lea	rsi, [rip + 0xf3c1]
0x438f:	mov	edx, 5
0x4394:	xor	edi, edi
0x4396:	call	0x28e0


0x439b:	mov	rsi, rbx
0x439e:	mov	rdi, rax
0x43a1:	call	0x2ab0


0x43a6:	mov	rbx, qword ptr [rip + 0x215cfb]
0x43ad:	lea	rsi, [rip + 0xf4f4]
0x43b4:	mov	edx, 5
0x43b9:	xor	edi, edi
0x43bb:	call	0x28e0


0x43c0:	mov	rsi, rbx
0x43c3:	mov	rdi, rax
0x43c6:	call	0x2ab0


0x43cb:	mov	rbx, qword ptr [rip + 0x215cd6]
0x43d2:	lea	rsi, [rip + 0xf567]
0x43d9:	mov	edx, 5
0x43de:	xor	edi, edi
0x43e0:	call	0x28e0


0x43e5:	mov	rsi, rbx
0x43e8:	mov	rdi, rax
0x43eb:	call	0x2ab0


0x43f0:	mov	rbx, qword ptr [rip + 0x215cb1]
0x43f7:	lea	rsi, [rip + 0xf662]
0x43fe:	mov	edx, 5
0x4403:	xor	edi, edi
0x4405:	call	0x28e0


0x440a:	mov	rsi, rbx
0x440d:	mov	rdi, rax
0x4410:	call	0x2ab0


0x4415:	mov	rbx, qword ptr [rip + 0x215c8c]
0x441c:	lea	rsi, [rip + 0xf705]
0x4423:	mov	edx, 5
0x4428:	xor	edi, edi
0x442a:	call	0x28e0


0x442f:	mov	rsi, rbx
0x4432:	mov	rdi, rax
0x4435:	call	0x2ab0


0x443a:	mov	rbx, qword ptr [rip + 0x215c67]
0x4441:	lea	rsi, [rip + 0xf7f0]
0x4448:	mov	edx, 5
0x444d:	xor	edi, edi
0x444f:	call	0x28e0


0x4454:	mov	rsi, rbx
0x4457:	mov	rdi, rax
0x445a:	call	0x2ab0


0x445f:	mov	rbx, qword ptr [rip + 0x215c42]
0x4466:	lea	rsi, [rip + 0xf90b]
0x446d:	mov	edx, 5
0x4472:	xor	edi, edi
0x4474:	call	0x28e0


0x4479:	mov	rsi, rbx
0x447c:	mov	rdi, rax
0x447f:	call	0x2ab0


0x4484:	mov	rbx, qword ptr [rip + 0x215c1d]
0x448b:	lea	rsi, [rip + 0xf9fe]
0x4492:	mov	edx, 5
0x4497:	xor	edi, edi
0x4499:	call	0x28e0


0x449e:	mov	rsi, rbx
0x44a1:	mov	rdi, rax
0x44a4:	call	0x2ab0


0x44a9:	mov	rbx, qword ptr [rip + 0x215bf8]
0x44b0:	lea	rsi, [rip + 0xfa09]
0x44b7:	mov	edx, 5
0x44bc:	xor	edi, edi
0x44be:	call	0x28e0


0x44c3:	mov	rsi, rbx
0x44c6:	mov	rdi, rax
0x44c9:	call	0x2ab0


0x44ce:	mov	rbx, qword ptr [rip + 0x215bd3]
0x44d5:	lea	rsi, [rip + 0xfa1c]
0x44dc:	mov	edx, 5
0x44e1:	xor	edi, edi
0x44e3:	call	0x28e0


0x44e8:	mov	rsi, rbx
0x44eb:	mov	rdi, rax
0x44ee:	call	0x2ab0


0x44f3:	mov	rbx, qword ptr [rip + 0x215bae]
0x44fa:	lea	rsi, [rip + 0xfb5f]
0x4501:	mov	edx, 5
0x4506:	xor	edi, edi
0x4508:	call	0x28e0


0x450d:	mov	rsi, rbx
0x4510:	mov	rdi, rax
0x4513:	call	0x2ab0


0x4518:	mov	rbx, qword ptr [rip + 0x215b89]
0x451f:	lea	rsi, [rip + 0xfc5a]
0x4526:	mov	edx, 5
0x452b:	xor	edi, edi
0x452d:	call	0x28e0


0x4532:	mov	rsi, rbx
0x4535:	mov	rdi, rax
0x4538:	call	0x2ab0


0x453d:	mov	rbx, qword ptr [rip + 0x215b64]
0x4544:	lea	rsi, [rip + 0xfd15]
0x454b:	mov	edx, 5
0x4550:	xor	edi, edi
0x4552:	call	0x28e0


0x4557:	mov	rsi, rbx
0x455a:	mov	rdi, rax
0x455d:	call	0x2ab0


0x4562:	mov	rbx, qword ptr [rip + 0x215b3f]
0x4569:	lea	rsi, [rip + 0xfdd0]
0x4570:	mov	edx, 5
0x4575:	xor	edi, edi
0x4577:	call	0x28e0


0x457c:	mov	rsi, rbx
0x457f:	mov	rdi, rax
0x4582:	lea	rbx, [rip + 0xe3bc]
0x4589:	call	0x2ab0


0x458e:	lea	rax, [rip + 0xe3b3]
0x4595:	lea	rcx, [rip + 0xe3ed]
0x459c:	mov	qword ptr [rsp + 0x60], 0
0x45a5:	mov	qword ptr [rsp + 0x68], 0
0x45ae:	mov	rdx, rsp
0x45b1:	mov	qword ptr [rsp], rax
0x45b5:	lea	rax, [rip + 0xe38e]
0x45bc:	mov	qword ptr [rsp + 0x30], rcx
0x45c1:	lea	rcx, [rip + 0xe3cb]
0x45c8:	mov	qword ptr [rsp + 8], rax
0x45cd:	lea	rax, [rip + 0xe3ee]
0x45d4:	mov	qword ptr [rsp + 0x40], rcx
0x45d9:	lea	rcx, [rip + 0xe3bd]
0x45e0:	mov	qword ptr [rsp + 0x10], rax
0x45e5:	lea	rax, [rip + 0xe36e]
0x45ec:	mov	qword ptr [rsp + 0x50], rcx
0x45f1:	mov	qword ptr [rsp + 0x18], rax
0x45f6:	lea	rax, [rip + 0xe373]
0x45fd:	mov	qword ptr [rsp + 0x20], rax
0x4602:	lea	rax, [rip + 0xe371]
0x4609:	mov	qword ptr [rsp + 0x28], rax
0x460e:	mov	qword ptr [rsp + 0x38], rax
0x4613:	mov	qword ptr [rsp + 0x48], rax
0x4618:	mov	qword ptr [rsp + 0x58], rax
0x461d:	nop	dword ptr [rax]
0x4620:	add	rdx, 0x10
0x4624:	mov	rdi, qword ptr [rdx]
0x4627:	test	rdi, rdi
0x462a:	je	0x463f


0x463f:	mov	r12, qword ptr [rdx + 8]
0x4643:	xor	edi, edi
0x4645:	mov	edx, 5
0x464a:	lea	rsi, [rip + 0xe356]
0x4651:	test	r12, r12
0x4654:	je	0x471b


0x462c:	mov	ecx, 3
0x4631:	mov	rsi, rbx
0x4634:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x471b:	call	0x28e0


0x465a:	call	0x28e0


0x4634:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4636:	seta	al
0x4639:	sbb	al, 0
0x463b:	test	al, al
0x463d:	jne	0x4620


0x4620:	add	rdx, 0x10
0x4624:	mov	rdi, qword ptr [rdx]
0x4627:	test	rdi, rdi
0x462a:	je	0x463f


0x465f:	lea	rcx, [rip + 0xfd82]
0x4666:	lea	rdx, [rip + 0xe351]
0x466d:	mov	rsi, rax
0x4670:	mov	edi, 1
0x4675:	xor	eax, eax
0x4677:	call	0x2c60


0x467c:	xor	esi, esi
0x467e:	mov	edi, 5
0x4683:	call	0x2c50


0x4688:	test	rax, rax
0x468b:	je	0x46a9


0x46a9:	lea	rsi, [rip + 0xe320]
0x46b0:	xor	edi, edi
0x46b2:	mov	edx, 5
0x46b7:	call	0x28e0


0x468d:	lea	rsi, [rip + 0xe338]
0x4694:	mov	edx, 3
0x4699:	mov	rdi, rax
0x469c:	call	0x2790


0x46bc:	lea	rcx, [rip + 0xe282]
0x46c3:	lea	rdx, [rip + 0xfd1e]
0x46ca:	mov	rsi, rax
0x46cd:	mov	edi, 1
0x46d2:	xor	eax, eax
0x46d4:	call	0x2c60


0x46d9:	cmp	r12, rbx
0x46dc:	lea	rcx, [rip + 0xe281]
0x46e3:	lea	rbx, [rip + 0x1095c]
0x46ea:	cmove	rbx, rcx
0x46ee:	lea	rsi, [rip + 0xfd63]
0x46f5:	xor	edi, edi
0x46f7:	mov	edx, 5
0x46fc:	call	0x28e0


0x4701:	mov	rcx, rbx
0x4704:	mov	rsi, rax
0x4707:	mov	rdx, r12
0x470a:	mov	edi, 1
0x470f:	xor	eax, eax
0x4711:	call	0x2c60


0x4716:	jmp	0x4276


0x4720:	lea	rcx, [rip + 0xfcc1]
0x4727:	lea	rdx, [rip + 0xe290]
0x472e:	mov	rsi, rax
0x4731:	mov	edi, 1
0x4736:	xor	eax, eax
0x4738:	call	0x2c60


0x473d:	xor	esi, esi
0x473f:	mov	edi, 5
0x4744:	call	0x2c50


0x4749:	test	rax, rax
0x474c:	je	0x4766


0x4766:	lea	rsi, [rip + 0xe263]
0x476d:	mov	edx, 5
0x4772:	xor	edi, edi
0x4774:	lea	r12, [rip + 0xe1ca]
0x477b:	lea	rbx, [rip + 0xe1e2]
0x4782:	call	0x28e0


0x474e:	lea	rsi, [rip + 0xe277]
0x4755:	mov	edx, 3
0x475a:	mov	rdi, rax
0x475d:	call	0x2790


0x4787:	lea	rcx, [rip + 0xe1b7]
0x478e:	lea	rdx, [rip + 0xfc53]
0x4795:	mov	rsi, rax
0x4798:	mov	edi, 1
0x479d:	xor	eax, eax
0x479f:	call	0x2c60


0x47a4:	jmp	0x46ee


0x46ee:	lea	rsi, [rip + 0xfd63]
0x46f5:	xor	edi, edi
0x46f7:	mov	edx, 5
0x46fc:	call	0x28e0


0xa95c:	mov	r15, qword ptr [r14]
0xa95f:	test	r15, r15
0xa962:	je	0xa9f8


0xa9f8:	mov	rdi, qword ptr [rip + 0x20f6e1]
0xa9ff:	mov	rax, qword ptr [rdi + 0x28]
0xaa03:	cmp	rax, qword ptr [rdi + 0x30]
0xaa07:	jae	0xaa28


0xa968:	xor	r13d, r13d
0xa96b:	xor	ebx, ebx
0xa96d:	jmp	0xa9a8


0xaa09:	lea	rdx, [rax + 1]
0xaa0d:	mov	qword ptr [rdi + 0x28], rdx
0xaa11:	mov	byte ptr [rax], 0xa
0xaa14:	add	rsp, 8
0xaa18:	pop	rbx
0xaa19:	pop	rbp
0xaa1a:	pop	r12
0xaa1c:	pop	r13
0xaa1e:	pop	r14
0xaa20:	pop	r15
0xaa22:	ret	


0xaa28:	add	rsp, 8
0xaa2c:	mov	esi, 0xa
0xaa31:	pop	rbx
0xaa32:	pop	rbp
0xaa33:	pop	r12
0xaa35:	pop	r13
0xaa37:	pop	r14
0xaa39:	pop	r15
0xaa3b:	jmp	0x2990


0xa9a8:	test	rbx, rbx
0xa9ab:	je	0xa970


0x2990:	jmp	qword ptr [rip + 0x2173f2]


0xa970:	mov	rdi, r15
0xa973:	add	rbx, 1
0xa977:	mov	r13, rbp
0xa97a:	call	0xed80


0xa9ad:	mov	rdx, r12
0xa9b0:	mov	rsi, rbp
0xa9b3:	mov	rdi, r13
0xa9b6:	call	0x2a90




0xa9bb:	test	eax, eax
0xa9bd:	jne	0xa970


0xa9bf:	mov	rdi, r15
0xa9c2:	add	rbx, 1
0xa9c6:	add	rbp, r12
0xa9c9:	call	0xed80


0x10a4c:	cmp	r12, 9
0x10a50:	ja	0x10d90


0x10a56:	lea	rdx, [rip + 0x515b]
0x10a5d:	movsxd	rax, dword ptr [rdx + r12*4]
0x10a61:	add	rax, rdx
0x10a64:	jmp	rax


0x10d90:	mov	r10, qword ptr [rbx + 0x40]
0x10d94:	mov	r9, qword ptr [rbx + 0x38]
0x10d98:	mov	edx, 5
0x10d9d:	mov	rax, qword ptr [rbx + 0x10]
0x10da1:	mov	r8, qword ptr [rbx + 8]
0x10da5:	lea	rsi, [rip + 0x4d84]
0x10dac:	mov	r13, qword ptr [rbx + 0x30]
0x10db0:	mov	r12, qword ptr [rbx + 0x28]
0x10db4:	mov	r15, qword ptr [rbx + 0x20]
0x10db8:	mov	r14, qword ptr [rbx + 0x18]
0x10dbc:	mov	qword ptr [rsp + 0x18], r10
0x10dc1:	mov	qword ptr [rsp + 0x10], r9
0x10dc6:	mov	qword ptr [rsp], rax
0x10dca:	mov	qword ptr [rsp + 8], r8
0x10dcf:	mov	rbx, qword ptr [rbx]
0x10dd2:	jmp	0x10b62


0x10b62:	xor	edi, edi
0x10b64:	call	0x28e0


0x10b69:	mov	r10, qword ptr [rsp + 0x18]
0x10b6e:	push	r10
0x10b70:	jmp	0x10ab4


0x10ab4:	mov	r9, qword ptr [rsp + 0x18]
0x10ab9:	mov	rdx, rax
0x10abc:	mov	rcx, rbx
0x10abf:	mov	esi, 1
0x10ac4:	mov	rdi, rbp
0x10ac7:	xor	eax, eax
0x10ac9:	push	r9
0x10acb:	push	r13
0x10acd:	push	r12
0x10acf:	push	r15
0x10ad1:	push	r14
0x10ad3:	mov	r9, qword ptr [rsp + 0x30]
0x10ad8:	mov	r8, qword ptr [rsp + 0x38]
0x10add:	call	0x2db0


0x10ae2:	add	rsp, 0x30
0x10ae6:	add	rsp, 0x28
0x10aea:	pop	rbx
0x10aeb:	pop	rbp
0x10aec:	pop	r12
0x10aee:	pop	r13
0x10af0:	pop	r14
0x10af2:	pop	r15
0x10af4:	ret	


0xafb8:	mov	ecx, dword ptr [r12]
0xafbc:	xor	edx, edx
0xafbe:	test	ecx, ecx
0xafc0:	sete	dl
0xafc3:	sub	rax, rdx
0xafc6:	test	rax, rax
0xafc9:	mov	qword ptr [rsp + 0x48], rax
0xafce:	jns	0xb070


0xafd4:	cmp	rax, -1
0xafd8:	jne	0xb145


0xafde:	mov	qword ptr [rsp + 0x48], -1
0xafe7:	jmp	0xae5f


0xb145:	mov	qword ptr [rsp + 0x48], 0xe
0xb14e:	jmp	0xb07b


0xb104:	mov	edi, dword ptr [r12]
0xb108:	mov	edx, dword ptr [rsp + 8]
0xb10c:	xor	ecx, ecx
0xb10e:	test	edi, edi
0xb110:	mov	word ptr [rbx], dx
0xb113:	sete	cl
0xb116:	sub	rax, rcx
0xb119:	jmp	0xafc6


0xafc6:	test	rax, rax
0xafc9:	mov	qword ptr [rsp + 0x48], rax
0xafce:	jns	0xb070


0x4762:	test	eax, eax
0x4764:	jne	0x47a9


0x47a9:	lea	r12, [rip + 0xe195]
0x47b0:	mov	r13, qword ptr [rip + 0x2158f1]
0x47b7:	lea	rsi, [rip + 0xfc52]
0x47be:	xor	edi, edi
0x47c0:	mov	edx, 5
0x47c5:	call	0x28e0


0x47ca:	mov	rsi, r13
0x47cd:	mov	rdi, rax
0x47d0:	call	0x2ab0


0x47d5:	jmp	0x46a9


0x46a1:	test	eax, eax
0x46a3:	jne	0x47b0


0x47b0:	mov	r13, qword ptr [rip + 0x2158f1]
0x47b7:	lea	rsi, [rip + 0xfc52]
0x47be:	xor	edi, edi
0x47c0:	mov	edx, 5
0x47c5:	call	0x28e0


0xa827:	test	eax, eax
0xa829:	jne	0xa807


0xa82b:	mov	rdi, r14
0xa82e:	call	0x2900


0xa807:	add	rbx, 1
0xa80b:	add	rbp, r13
0xa80e:	mov	r14, qword ptr [r15 + rbx*8]
0xa812:	test	r14, r14
0xa815:	je	0xa858


0xa858:	cmp	byte ptr [rsp + 0x17], 0
0xa85d:	mov	rax, -2
0xa864:	cmove	rax, qword ptr [rsp]
0xa869:	mov	qword ptr [rsp], rax
0xa86d:	mov	rax, qword ptr [rsp]
0xa871:	add	rsp, 0x28
0xa875:	pop	rbx
0xa876:	pop	rbp
0xa877:	pop	r12
0xa879:	pop	r13
0xa87b:	pop	r14
0xa87d:	pop	r15
0xa87f:	ret	


0xa833:	cmp	rax, r12
0xa836:	je	0xa890


0xa890:	mov	qword ptr [rsp], rbx
0xa894:	jmp	0xa86d


0xa838:	cmp	qword ptr [rsp], -1
0xa83d:	jne	0xa7d0


0xa83f:	mov	qword ptr [rsp], rbx
0xa843:	add	rbx, 1
0xa847:	add	rbp, r13
0xa84a:	mov	r14, qword ptr [r15 + rbx*8]
0xa84e:	test	r14, r14
0xa851:	jne	0xa817


0xa7d0:	mov	rax, qword ptr [rsp + 0x18]
0xa7d5:	test	rax, rax
0xa7d8:	je	0xa880


0xa880:	mov	byte ptr [rsp + 0x17], 1
0xa885:	jmp	0xa807


0xa7de:	mov	rdi, qword ptr [rsp]
0xa7e2:	mov	rdx, r13
0xa7e5:	mov	rsi, rbp
0xa7e8:	imul	rdi, r13
0xa7ec:	add	rdi, rax
0xa7ef:	call	0x2a90


0xa7f4:	test	eax, eax
0xa7f6:	movzx	eax, byte ptr [rsp + 0x17]
0xa7fb:	mov	ecx, 1
0xa800:	cmovne	eax, ecx
0xa803:	mov	byte ptr [rsp + 0x17], al
0xa807:	add	rbx, 1
0xa80b:	add	rbp, r13
0xa80e:	mov	r14, qword ptr [r15 + rbx*8]
0xa812:	test	r14, r14
0xa815:	je	0xa858


0x3b0a:	test	rax, rax
0x3b0d:	mov	rbx, rax
0x3b10:	je	0x3e9c


0x3e9c:	mov	eax, 1
0x3ea1:	mov	rcx, qword ptr [rbp - 0x38]
0x3ea5:	xor	rcx, qword ptr fs:[0x28]
0x3eae:	jne	0x3fbb


0x3b16:	mov	rdx, qword ptr [rbp - 0x170]
0x3b1d:	mov	byte ptr [rbx], 0
0x3b20:	mov	rsi, r12
0x3b23:	mov	edi, 1
0x3b28:	call	0x2ba0


0x3b2d:	test	eax, eax
0x3b2f:	mov	r14d, eax
0x3b32:	jne	0x3bc0


0x3b38:	test	dword ptr [r13 + 0x1c], 0xffffff00
0x3b40:	jne	0x3bc0


0x3bc0:	mov	rdx, qword ptr [rbp - 0x188]
0x3bc7:	mov	rsi, qword ptr [rbp - 0x168]
0x3bce:	mov	edi, 1
0x3bd3:	call	0x2ba0


0x3b42:	mov	rdi, qword ptr [rbp - 0x168]
0x3b49:	xor	ecx, ecx
0x3b4b:	xor	edx, edx
0x3b4d:	mov	r8, r13
0x3b50:	mov	rsi, r12
0x3b53:	call	0x5620


0x3b58:	test	al, al
0x3b5a:	je	0x3e65


0x3e65:	xor	eax, eax
0x3e67:	jmp	0x3ea1


0x3b60:	mov	eax, dword ptr [rbp - 0x148]
0x3b66:	and	eax, 0xf000
0x3b6b:	cmp	eax, 0x4000
0x3b70:	jne	0x3f77


0x3ea1:	mov	rcx, qword ptr [rbp - 0x38]
0x3ea5:	xor	rcx, qword ptr fs:[0x28]
0x3eae:	jne	0x3fbb


0x3b76:	mov	rax, qword ptr [rbp - 0x178]
0x3b7d:	mov	byte ptr [rax], 0
0x3b80:	movabs	rax, 0xff000000ff00
0x3b8a:	test	qword ptr [r13 + 0x20], rax
0x3b8e:	jne	0x3e40


0x3f77:	mov	rsi, r12
0x3f7a:	jmp	0x3ec6


0x3b94:	cmp	byte ptr [rbx + 1], 0x2f
0x3b98:	lea	rdi, [rbx + 1]
0x3b9c:	mov	byte ptr [rbx], 0x2f
0x3b9f:	jne	0x3b00


0x3e40:	movzx	esi, byte ptr [r13 + 0x25]
0x3e45:	xor	edx, edx
0x3e47:	mov	rcx, r13
0x3e4a:	mov	rdi, r12
0x3e4d:	call	0x56f0


0x3ec6:	mov	edi, 4
0x3ecb:	call	0xeab0


0x3b00:	mov	esi, 0x2f
0x3b05:	call	0x2970


0x3ba8:	add	rdi, 1
0x3bac:	cmp	byte ptr [rdi], 0x2f
0x3baf:	je	0x3ba8


0x3bb1:	jmp	0x3b00


0x3e52:	test	al, al
0x3e54:	jne	0x3b94


0x3e5a:	cmp	byte ptr [r13 + 0x26], 0
0x3e5f:	je	0x3b94


0x3bd8:	test	eax, eax
0x3bda:	je	0x3db0


0x3db0:	mov	eax, dword ptr [rbp - 0xb8]
0x3db6:	and	eax, 0xf000
0x3dbb:	cmp	eax, 0x4000
0x3dc0:	je	0x3bf1


0x3be0:	call	0x2770


0x3bf1:	mov	edi, 0xa8
0x3bf6:	call	0x11020


0x3dc6:	mov	r8d, 0x14
0x3dcc:	mov	rsi, qword ptr [rbp - 0x168]
0x3dd3:	mov	edi, 4
0x3dd8:	mov	dword ptr [rbp - 0x170], r8d
0x3ddf:	call	0xeab0


0x3bfb:	movdqa	xmm0, xmmword ptr [rbp - 0xd0]
0x3c03:	mov	r15, rax
0x3c06:	mov	rcx, qword ptr [rbp - 0x180]
0x3c0d:	movups	xmmword ptr [rax], xmm0
0x3c10:	movdqa	xmm0, xmmword ptr [rbp - 0xc0]
0x3c18:	movups	xmmword ptr [rax + 0x10], xmm0
0x3c1c:	movdqa	xmm0, xmmword ptr [rbp - 0xb0]
0x3c24:	movups	xmmword ptr [rax + 0x20], xmm0
0x3c28:	movdqa	xmm0, xmmword ptr [rbp - 0xa0]
0x3c30:	movups	xmmword ptr [rax + 0x30], xmm0
0x3c34:	movdqa	xmm0, xmmword ptr [rbp - 0x90]
0x3c3c:	movups	xmmword ptr [rax + 0x40], xmm0
0x3c40:	movdqa	xmm0, xmmword ptr [rbp - 0x80]
0x3c45:	movups	xmmword ptr [rax + 0x50], xmm0
0x3c49:	movdqa	xmm0, xmmword ptr [rbp - 0x70]
0x3c4e:	movups	xmmword ptr [rax + 0x60], xmm0
0x3c52:	movdqa	xmm0, xmmword ptr [rbp - 0x60]
0x3c57:	movups	xmmword ptr [rax + 0x70], xmm0
0x3c5b:	movdqa	xmm0, xmmword ptr [rbp - 0x50]
0x3c60:	movups	xmmword ptr [rax + 0x80], xmm0
0x3c67:	mov	rax, rbx
0x3c6a:	mov	byte ptr [r15 + 0x90], 0
0x3c72:	sub	rax, r12
0x3c75:	test	r14d, r14d
0x3c78:	mov	qword ptr [r15 + 0x98], rax
0x3c7f:	mov	rax, qword ptr [rcx]
0x3c82:	mov	qword ptr [rcx], r15
0x3c85:	mov	qword ptr [r15 + 0xa0], rax
0x3c8c:	je	0x3b42


0x3c92:	mov	edx, dword ptr [r15 + 0x18]
0x3c96:	mov	rdi, qword ptr [rbp - 0x168]
0x3c9d:	mov	r8, r13
0x3ca0:	mov	ecx, 1
0x3ca5:	mov	rsi, r12
0x3ca8:	call	0x5620


0x3cad:	test	al, al
0x3caf:	je	0x3e65


0x3cb5:	mov	rax, qword ptr [rbp - 0x178]
0x3cbc:	mov	esi, dword ptr [r15 + 0x18]
0x3cc0:	mov	byte ptr [rax], 1
0x3cc3:	cmp	byte ptr [r13 + 0x1d], 0
0x3cc8:	je	0x3e20


0x3e20:	cmp	byte ptr [r13 + 0x1e], 0
0x3e25:	je	0x3e70


0x3cce:	mov	r14d, esi
0x3cd1:	and	r14d, 0x3f
0x3cd5:	mov	eax, r14d
0x3cd8:	xor	eax, 0xfff
0x3cdd:	cmp	byte ptr [r13 + 0x20], 0
0x3ce2:	mov	edx, 0x1ff
0x3ce7:	mov	rdi, r12
0x3cea:	cmovne	esi, edx
0x3ced:	and	esi, eax
0x3cef:	call	0x27e0


0x3e70:	xor	r14d, r14d
0x3e73:	mov	eax, 0xfff
0x3e78:	jmp	0x3cdd


0x3e27:	mov	r14d, esi
0x3e2a:	and	r14d, 0x12
0x3e2e:	mov	eax, r14d
0x3e31:	xor	eax, 0xfff
0x3e36:	jmp	0x3cdd


0x3cdd:	cmp	byte ptr [r13 + 0x20], 0
0x3ce2:	mov	edx, 0x1ff
0x3ce7:	mov	rdi, r12
0x3cea:	cmovne	esi, edx
0x3ced:	and	esi, eax
0x3cef:	call	0x27e0


0x3cf4:	test	eax, eax
0x3cf6:	jne	0x3f34


0x3cfc:	mov	rax, qword ptr [rbp - 0x190]
0x3d03:	test	rax, rax
0x3d06:	je	0x3d21


0x3f34:	mov	rsi, r12
0x3f37:	mov	edi, 4
0x3f3c:	call	0xeab0


0x3d21:	mov	rdx, qword ptr [rbp - 0x170]
0x3d28:	mov	rsi, r12
0x3d2b:	mov	edi, 1
0x3d30:	call	0x2910


0x3d08:	mov	rdx, qword ptr [rbp - 0x168]
0x3d0f:	mov	rsi, rax
0x3d12:	mov	rcx, r12
0x3d15:	mov	edi, 1
0x3d1a:	xor	eax, eax
0x3d1c:	call	0x2c60


0x3d35:	test	eax, eax
0x3d37:	jne	0x3f7f


0x3d3d:	cmp	byte ptr [r13 + 0x1e], 0
0x3d42:	mov	esi, dword ptr [rbp - 0x148]
0x3d48:	jne	0x3d76


0x3f7f:	mov	rsi, r12
0x3f82:	mov	edi, 4
0x3f87:	call	0xeab0


0x3d4a:	mov	eax, esi
0x3d4c:	not	eax
0x3d4e:	test	eax, r14d
0x3d51:	jne	0x3f00


0x3d76:	mov	eax, esi
0x3d78:	and	eax, 0x1c0
0x3d7d:	cmp	eax, 0x1c0
0x3d82:	je	0x3d9a


0x3d57:	mov	eax, esi
0x3d59:	and	eax, 0x1c0
0x3d5e:	cmp	eax, 0x1c0
0x3d63:	je	0x3d9a


0x3f00:	call	0x5a50


0x3d9a:	mov	rax, qword ptr [rbp - 0x178]
0x3da1:	cmp	byte ptr [rax], 0
0x3da4:	jne	0x3b94


0x3d84:	or	esi, 0x1c0
0x3d8a:	mov	rdi, r12
0x3d8d:	call	0x2c90


0x3d65:	mov	eax, esi
0x3d67:	or	r14d, eax
0x3d6a:	mov	byte ptr [r15 + 0x90], 1
0x3d72:	mov	dword ptr [r15 + 0x18], r14d
0x3d76:	mov	eax, esi
0x3d78:	and	eax, 0x1c0
0x3d7d:	cmp	eax, 0x1c0
0x3d82:	je	0x3d9a


0x3daa:	jmp	0x3b80


0x3b80:	movabs	rax, 0xff000000ff00
0x3b8a:	test	qword ptr [r13 + 0x20], rax
0x3b8e:	jne	0x3e40


0x3d92:	test	eax, eax
0x3d94:	jne	0x3f9d


0x3f9d:	mov	rsi, r12
0x3fa0:	mov	edi, 4
0x3fa5:	call	0xeab0


0x3f05:	mov	esi, dword ptr [rbp - 0x148]
0x3f0b:	not	eax
0x3f0d:	and	r14d, eax
0x3f10:	mov	edx, esi
0x3f12:	mov	eax, esi
0x3f14:	not	edx
0x3f16:	test	edx, r14d
0x3f19:	jne	0x3d67


0x3f1f:	jmp	0x3d57


0x3d67:	or	r14d, eax
0x3d6a:	mov	byte ptr [r15 + 0x90], 1
0x3d72:	mov	dword ptr [r15 + 0x18], r14d
0x3d76:	mov	eax, esi
0x3d78:	and	eax, 0x1c0
0x3d7d:	cmp	eax, 0x1c0
0x3d82:	je	0x3d9a


0x3be5:	mov	r8d, dword ptr [rax]
0x3be8:	test	r8d, r8d
0x3beb:	jne	0x3dcc


0x3dcc:	mov	rsi, qword ptr [rbp - 0x168]
0x3dd3:	mov	edi, 4
0x3dd8:	mov	dword ptr [rbp - 0x170], r8d
0x3ddf:	call	0xeab0


0x11604:	mov	dword ptr [rbp], r14d
0x11608:	mov	rax, rbx
0x1160b:	pop	rbx
0x1160c:	pop	rbp
0x1160d:	pop	r12
0x1160f:	pop	r13
0x11611:	pop	r14
0x11613:	ret	


0xf638:	test	eax, eax
0xf63a:	jne	0xf650


0xf650:	call	0x2770


0xf655:	mov	r12d, dword ptr [rax]
0xf658:	mov	rbx, rax
0xf65b:	mov	rdi, rbp
0xf65e:	call	0x2e10


0xf663:	xor	ebp, ebp
0xf665:	mov	dword ptr [rbx], r12d
0xf668:	jmp	0xf63c


0xb12f:	jmp	0xaee0


0xee95:	mov	r15d, eax
0xee98:	jmp	0xedfa


0xa3f7:	test	eax, eax
0xa3f9:	mov	ecx, 0xffffffff
0xa3fe:	je	0xa407


0xa407:	xor	edx, edx
0xa409:	mov	rsi, r15
0xa40c:	mov	edi, ebp
0xa40e:	mov	dword ptr [rsp + 0xc], ecx
0xa412:	call	0x27f0


0xa400:	call	0x2770


0x27f0:	jmp	qword ptr [rip + 0x2174c2]




0xa405:	mov	ecx, dword ptr [rax]
0xa407:	xor	edx, edx
0xa409:	mov	rsi, r15
0xa40c:	mov	edi, ebp
0xa40e:	mov	dword ptr [rsp + 0xc], ecx
0xa412:	call	0x27f0


0xa54f:	test	eax, eax
0xa551:	mov	r8d, 0xffffffff
0xa557:	je	0xa4cb


0xa4cb:	cmp	r13, r14
0xa4ce:	je	0xa4e8


0xa55d:	call	0x2770


0xa562:	mov	r8d, dword ptr [rax]
0xa565:	xor	edx, edx
0xa567:	mov	rsi, r13
0xa56a:	mov	edi, ebp
0xa56c:	mov	dword ptr [rsp + 0xc], r8d
0xa571:	call	0x27f0


0xf78d:	cmp	r14, rax
0xf790:	ja	0xf87b


0xf796:	xor	edi, edi
0xf798:	mov	rsi, r14
0xf79b:	call	0x11820


0xf7a0:	test	rax, rax
0xf7a3:	mov	rbp, rax
0xf7a6:	je	0xf88d


0xf88d:	mov	edx, 0xffffffff
0xf892:	jmp	0xf863


0xf7ac:	mov	rax, qword ptr [rsp]
0xf7b0:	lea	r12, [rip + 0x60c9]
0xf7b7:	mov	r13d, 0x3a2f8
0xf7bd:	add	rax, r14
0xf7c0:	add	rbx, rax
0xf7c3:	nop	dword ptr [rax + rax]
0xf7c8:	test	r14, r14
0xf7cb:	mov	r15, qword ptr [rsp + 0x10]
0xf7d0:	je	0xf7f7


0xf7f7:	mov	rsi, qword ptr [rsp + 0x18]
0xf7fc:	mov	rdi, qword ptr [rsp]
0xf800:	mov	rax, qword ptr [rsp + 0x20]
0xf805:	call	rax


0xf7e9:	movzx	eax, byte ptr [r12 + rax]
0xf7ee:	mov	byte ptr [r15 - 1], al
0xf7f2:	cmp	r15, rbx
0xf7f5:	jne	0xf7d8


0xf7d8:	mov	esi, 0x3d
0xf7dd:	mov	rdi, rbp
0xf7e0:	add	r15, 1
0xf7e4:	call	0x11870


0xa6de:	test	rax, rax
0xa6e1:	mov	r12, rax
0xa6e4:	js	0xa738


0xa738:	call	0x2770


0xa6e6:	cmp	rbx, r12
0xa6e9:	ja	0xa750


0xa6eb:	mov	rdi, rbp
0xa6ee:	call	0x2e10


0xa750:	mov	byte ptr [rbp + r12], 0
0xa756:	jmp	0xa70b


0xa6f3:	cmp	rbx, r14
0xa6f6:	ja	0xa720


0xa6f8:	add	rbx, rbx
0xa6fb:	mov	rdi, rbx
0xa6fe:	call	0x2bc0


0xa720:	cmp	rbx, r15
0xa723:	ja	0xa760


0xa725:	movabs	rbx, 0x7fffffffffffffff
0xa72f:	jmp	0xa6c0


0xa760:	call	0x2770


0xa6c0:	mov	rdi, rbx
0xa6c3:	call	0x2bc0


0xa703:	test	rax, rax
0xa706:	mov	rbp, rax
0xa709:	jne	0xa6d0


0xa765:	xor	ebp, ebp
0xa767:	mov	dword ptr [rax], 0xc
0xa76d:	jmp	0xa70b


0xa73d:	cmp	dword ptr [rax], 0x22
0xa740:	je	0xa6e6


0xa742:	mov	rdi, rbp
0xa745:	xor	ebp, ebp
0xa747:	call	0x2e10


0xa74c:	jmp	0xa70b


0x112a0:	call	0x2760


0x4cdd:	jmp	0x4c65


0x4c65:	mov	edi, 1
0x4c6a:	call	0x4220


0x2e69:	nop	dword ptr [rax]


0x9a74:	movzx	r8d, byte ptr [rbx + 0x24]
0x9a79:	test	r8b, r8b
0x9a7c:	jne	0x6a10


0x9a82:	jmp	0x5fff


0xf165:	jmp	0xf0f8


0xf18d:	jmp	0xf0c4


0xe61d:	mov	dword ptr [rbp], r12d
0xe621:	pop	rbx
0xe622:	pop	rbp
0xe623:	pop	r12
0xe625:	ret	


0xe4de:	mov	dword ptr [rip + 0x20bb93], r12d
0xe4e5:	mov	eax, dword ptr [rbp + 4]
0xe4e8:	shl	r15, 4
0xe4ec:	sub	rsp, 8
0xe4f0:	add	rbx, r15
0xe4f3:	lea	r15, [rbp + 8]
0xe4f7:	mov	r8d, dword ptr [rbp]
0xe4fb:	mov	r11, qword ptr [rbx]
0xe4fe:	mov	r12, qword ptr [rbx + 8]
0xe502:	mov	rcx, r14
0xe505:	or	eax, 1
0xe508:	mov	dword ptr [rsp + 0x24], eax
0xe50c:	push	qword ptr [rbp + 0x30]
0xe50f:	mov	r9d, eax
0xe512:	push	qword ptr [rbp + 0x28]
0xe515:	push	r15
0xe517:	mov	rsi, r11
0xe51a:	mov	rdx, qword ptr [rsp + 0x28]
0xe51f:	mov	rdi, r12
0xe522:	mov	qword ptr [rsp + 0x30], r11
0xe527:	call	0xd200


0x11e26:	add	rbx, rax
0x11e29:	sub	rbp, rax
0x11e2c:	mov	edx, dword ptr [r13]
0x11e30:	jne	0x11df8


0x11df8:	mov	rax, qword ptr [r12]
0x11dfc:	mov	rdi, qword ptr [r12 + 0x10]
0x11e01:	mov	eax, dword ptr [rax]
0x11e03:	and	eax, 0x20
0x11e06:	cmovne	eax, edx
0x11e09:	mov	dword ptr [r13], eax
0x11e0d:	call	qword ptr [r12 + 8]


0xac88:	test	rax, rax
0xac8b:	je	0xae40


0xac91:	lea	rbx, [rax + 0x13]
0xac95:	mov	rdi, rbx
0xac98:	call	0x2900


0xac9d:	cmp	rax, qword ptr [rsp + 8]
0xaca2:	jb	0xac80


0xac80:	mov	rdi, r13
0xac83:	call	0x2bb0


0xaca4:	lea	rbp, [r12 + 2]
0xaca9:	lea	rdi, [r15 + r14]
0xacad:	mov	rsi, rbx
0xacb0:	mov	rdx, rbp
0xacb3:	call	0x2a90


0xacb8:	test	eax, eax
0xacba:	jne	0xac80


0xacbc:	add	rbx, rbp
0xacbf:	movzx	eax, byte ptr [rbx]
0xacc2:	lea	edx, [rax - 0x31]
0xacc5:	cmp	dl, 8
0xacc8:	ja	0xac80


0xacca:	cmp	al, 0x39
0xaccc:	movsx	eax, byte ptr [rbx + 1]
0xacd0:	mov	ebp, 1
0xacd5:	sete	r8b
0xacd9:	mov	ecx, eax
0xacdb:	sub	eax, 0x30
0xacde:	cmp	eax, 9
0xace1:	ja	0xad03


0xad03:	cmp	cl, 0x7e
0xad06:	jne	0xac80


0xace8:	cmp	cl, 0x39
0xaceb:	sete	al
0xacee:	add	rbp, 1
0xacf2:	and	r8d, eax
0xacf5:	movsx	eax, byte ptr [rbx + rbp]
0xacf9:	mov	ecx, eax
0xacfb:	sub	eax, 0x30
0xacfe:	cmp	eax, 9
0xad01:	jbe	0xace8


0xad0c:	cmp	byte ptr [rbx + rbp + 1], 0
0xad11:	jne	0xac80


0xad17:	mov	rdx, qword ptr [rsp + 0x28]
0xad1c:	cmp	rdx, rbp
0xad1f:	jb	0xad4c


0xad4c:	movzx	esi, r8b
0xad50:	movzx	r9d, r8b
0xad54:	mov	dword ptr [rsp + 0x24], esi
0xad58:	mov	rsi, qword ptr [rsp + 0x18]
0xad5d:	lea	rax, [r9 + rbp]
0xad61:	mov	qword ptr [rsp + 0x28], rax
0xad66:	lea	rcx, [rsi + rax + 4]
0xad6b:	cmp	rcx, qword ptr [rsp + 0x30]
0xad70:	jbe	0xb0a8


0xad21:	mov	byte ptr [rsp + 0x58], r8b
0xad26:	jne	0xac80


0xb0a8:	mov	r8, r15
0xb0ab:	jmp	0xadc7


0xad76:	mov	edx, 2
0xad7b:	xor	esi, esi
0xad7d:	mov	rax, rdx
0xad80:	mul	rcx
0xad83:	jo	0xb153


0xad2c:	mov	rax, qword ptr [rsp + 0x18]
0xad31:	mov	rsi, rbx
0xad34:	lea	rdi, [r15 + rax + 2]
0xad39:	call	0x2a90


0xadc7:	mov	rax, qword ptr [rsp + 0x18]
0xadcc:	lea	rdx, [rbp + 2]
0xadd0:	mov	qword ptr [rsp + 0x58], r8
0xadd5:	mov	rsi, rbx
0xadd8:	add	rax, r8
0xaddb:	mov	r8d, 0x7e2e
0xade1:	lea	rcx, [rax + r9 + 2]
0xade6:	mov	word ptr [rax], r8w
0xadea:	mov	byte ptr [rax + 2], 0x30
0xadee:	mov	rdi, rcx
0xadf1:	call	0x2b60


0xb153:	mov	esi, 1
0xb158:	jmp	0xad89


0xad89:	test	rax, rax
0xad8c:	js	0xb040


0xb040:	mov	qword ptr [rsp + 0x30], rcx
0xb045:	jmp	0xada4


0xad92:	test	rsi, rsi
0xad95:	jne	0xb040


0xada4:	mov	rsi, qword ptr [rsp + 0x30]
0xada9:	mov	rdi, r15
0xadac:	mov	qword ptr [rsp + 0x58], r9
0xadb1:	call	0x2c20


0xad9b:	lea	rax, [rcx + rcx]
0xad9f:	mov	qword ptr [rsp + 0x30], rax
0xada4:	mov	rsi, qword ptr [rsp + 0x30]
0xada9:	mov	rdi, r15
0xadac:	mov	qword ptr [rsp + 0x58], r9
0xadb1:	call	0x2c20


0xadb6:	test	rax, rax
0xadb9:	mov	r8, rax
0xadbc:	mov	r9, qword ptr [rsp + 0x58]
0xadc1:	je	0xb050


0xadf6:	add	rbp, rax
0xadf9:	mov	r8, qword ptr [rsp + 0x58]
0xadfe:	movzx	edx, byte ptr [rbp - 1]
0xae02:	lea	rax, [rbp - 1]
0xae06:	cmp	dl, 0x39
0xae09:	jne	0xae1f


0xae1f:	add	edx, 1
0xae22:	mov	rdi, r13
0xae25:	mov	r15, r8
0xae28:	mov	byte ptr [rax], dl
0xae2a:	call	0x2bb0


0xae10:	mov	byte ptr [rax], 0x30
0xae13:	sub	rax, 1
0xae17:	movzx	edx, byte ptr [rax]
0xae1a:	cmp	dl, 0x39
0xae1d:	je	0xae10


0xad3e:	test	eax, eax
0xad40:	movzx	r8d, byte ptr [rsp + 0x58]
0xad46:	jg	0xac80


0xae2f:	test	rax, rax
0xae32:	jne	0xac91


0xf303:	test	rax, rax
0xf306:	mov	rcx, rax
0xf309:	je	0xf3b0


0xf3b0:	mov	ebx, dword ptr [rbp]
0xf3b3:	test	ebx, ebx
0xf3b5:	jne	0xf5a0


0xf30f:	lea	r15, [rax + 0x13]
0xf313:	movzx	eax, byte ptr [rax + 0x13]
0xf317:	cmp	al, 0x2e
0xf319:	jne	0xf2f0


0xf3bb:	cmp	qword ptr [rsp + 8], 0
0xf3c1:	je	0xf470


0xf5a0:	mov	rdi, qword ptr [rsp + 0x10]
0xf5a5:	call	0x2e10


0xf31b:	cmp	byte ptr [rcx + 0x14], 0x2e
0xf31f:	je	0xf3a0


0xf2f0:	test	al, al
0xf2f2:	jne	0xf329


0xf470:	cmp	qword ptr [rsp + 0x20], r14
0xf475:	je	0xf563


0xf3c7:	test	r12, r12
0xf3ca:	lea	rbx, [r14 + 1]
0xf3ce:	jne	0xf400


0xf3a0:	movzx	eax, byte ptr [rcx + 0x15]
0xf3a4:	jmp	0xf2f0


0xf321:	movzx	eax, byte ptr [rcx + 0x14]
0xf325:	test	al, al
0xf327:	je	0xf2f4


0xf329:	mov	rdi, r15
0xf32c:	mov	qword ptr [rsp + 0x30], rcx
0xf331:	call	0x2900


0xf563:	mov	rbx, qword ptr [rsp + 0x20]
0xf568:	mov	rdi, r13
0xf56b:	lea	rsi, [rbx + 1]
0xf56f:	call	0x11080


0xf47b:	lea	rbx, [r13 + r14]
0xf480:	jmp	0xf3e8


0xf3d0:	mov	rdi, rbx
0xf3d3:	call	0x11020


0xf400:	mov	r15, qword ptr [rsp + 0x10]
0xf405:	mov	rcx, qword ptr [rsp + 8]
0xf40a:	mov	rsi, r12
0xf40d:	mov	edx, 0x10
0xf412:	shl	r12, 4
0xf416:	mov	rdi, r15
0xf419:	mov	rbp, r15
0xf41c:	add	r12, r15
0xf41f:	call	0x2800


0xf3e8:	mov	byte ptr [rbx], 0
0xf3eb:	add	rsp, 0x48
0xf3ef:	mov	rax, r13
0xf3f2:	pop	rbx
0xf3f3:	pop	rbp
0xf3f4:	pop	r12
0xf3f6:	pop	r13
0xf3f8:	pop	r14
0xf3fa:	pop	r15
0xf3fc:	ret	


0x2800:	jmp	qword ptr [rip + 0x2174ba]




0xf3d8:	mov	r13, rax
0xf3db:	mov	rbx, rax
0xf3de:	mov	rdi, qword ptr [rsp + 0x10]
0xf3e3:	call	0x2e10


0xf574:	mov	r13, rax
0xf577:	add	rbx, rax
0xf57a:	jmp	0xf3e8


0xf336:	add	rax, 1
0xf33a:	cmp	qword ptr [rsp + 8], 0
0xf340:	mov	qword ptr [rsp + 0x18], rax
0xf345:	je	0xf488


0xf488:	mov	rsi, qword ptr [rsp + 0x18]
0xf48d:	mov	rax, qword ptr [rsp + 0x20]
0xf492:	mov	rdx, rsi
0xf495:	sub	rax, r14
0xf498:	add	rdx, r14
0xf49b:	mov	qword ptr [rsp + 0x30], rdx
0xf4a0:	setb	dl
0xf4a3:	cmp	rax, rsi
0xf4a6:	movzx	edx, dl
0xf4a9:	ja	0xf4f5


0xf34b:	cmp	r12, qword ptr [rsp + 0x28]
0xf350:	lea	rax, [r12 + 1]
0xf355:	mov	rcx, qword ptr [rsp + 0x30]
0xf35a:	mov	qword ptr [rsp + 0x38], rax
0xf35f:	je	0xf511


0xf4ab:	test	rdx, rdx
0xf4ae:	jne	0xf599


0xf4f5:	mov	rdx, qword ptr [rsp + 0x18]
0xf4fa:	lea	rdi, [r13 + r14]
0xf4ff:	mov	rsi, r15
0xf502:	call	0x2b60


0xf511:	cmp	qword ptr [rsp + 0x10], 0
0xf517:	je	0xf5c5


0xf365:	shl	r12, 4
0xf369:	mov	rdi, r15
0xf36c:	add	r12, qword ptr [rsp + 0x10]
0xf371:	mov	qword ptr [rsp + 0x30], rcx
0xf376:	call	0x11250


0xf4b4:	test	r13, r13
0xf4b7:	mov	rdx, qword ptr [rsp + 0x30]
0xf4bc:	je	0xf57f


0xf599:	call	0x11270


0xf5c5:	test	r12, r12
0xf5c8:	mov	eax, 8
0xf5cd:	mov	edx, 0x10
0xf5d2:	cmovne	rax, r12
0xf5d6:	xor	esi, esi
0xf5d8:	mov	rdi, rax
0xf5db:	mov	qword ptr [rsp + 0x28], rax
0xf5e0:	mov	rax, rdx
0xf5e3:	mul	rdi
0xf5e6:	jo	0xf601


0xf51d:	movabs	rax, 0x555555555555554
0xf527:	cmp	r12, rax
0xf52a:	ja	0xf599


0xf57f:	test	rdx, rdx
0xf582:	mov	eax, 0x80
0xf587:	cmovne	rax, rdx
0xf58b:	test	rax, rax
0xf58e:	mov	qword ptr [rsp + 0x20], rax
0xf593:	jns	0xf4e5


0xf4c2:	movabs	rax, 0x5555555555555553
0xf4cc:	cmp	rdx, rax
0xf4cf:	ja	0xf599


0xf601:	mov	esi, 1
0xf606:	jmp	0xf5e8


0xf5e8:	test	rax, rax
0xf5eb:	js	0xf599


0xf52c:	mov	rax, r12
0xf52f:	shr	rax, 1
0xf532:	add	rax, qword ptr [rsp + 0x38]
0xf537:	mov	qword ptr [rsp + 0x28], rax
0xf53c:	mov	rsi, qword ptr [rsp + 0x28]
0xf541:	mov	rdi, qword ptr [rsp + 0x10]
0xf546:	mov	qword ptr [rsp + 0x30], rcx
0xf54b:	shl	rsi, 4
0xf54f:	call	0x11080


0xf4e5:	mov	rsi, qword ptr [rsp + 0x20]
0xf4ea:	mov	rdi, r13
0xf4ed:	call	0x11080


0xf4d5:	mov	rax, rdx
0xf4d8:	shr	rax, 1
0xf4db:	lea	rax, [rdx + rax + 1]
0xf4e0:	mov	qword ptr [rsp + 0x20], rax
0xf4e5:	mov	rsi, qword ptr [rsp + 0x20]
0xf4ea:	mov	rdi, r13
0xf4ed:	call	0x11080


0xf5ed:	test	rsi, rsi
0xf5f0:	jne	0xf599


0xf5f2:	lea	rax, [r12 + 1]
0xf5f7:	mov	qword ptr [rsp + 0x38], rax
0xf5fc:	jmp	0xf53c


0xf53c:	mov	rsi, qword ptr [rsp + 0x28]
0xf541:	mov	rdi, qword ptr [rsp + 0x10]
0xf546:	mov	qword ptr [rsp + 0x30], rcx
0xf54b:	shl	rsi, 4
0xf54f:	call	0x11080


0xf554:	mov	rcx, qword ptr [rsp + 0x30]
0xf559:	mov	qword ptr [rsp + 0x10], rax
0xf55e:	jmp	0xf365


0xf4f2:	mov	r13, rax
0xf4f5:	mov	rdx, qword ptr [rsp + 0x18]
0xf4fa:	lea	rdi, [r13 + r14]
0xf4ff:	mov	rsi, r15
0xf502:	call	0x2b60


0xf507:	mov	r14, qword ptr [rsp + 0x30]
0xf50c:	jmp	0xf2f4


0xf5aa:	mov	rdi, r13
0xf5ad:	xor	r13d, r13d
0xf5b0:	call	0x2e10


0xf5b5:	mov	dword ptr [rbp], ebx
0xf5b8:	jmp	0xf3eb


0x8971:	mov	rcx, qword ptr [rbp - 0x98]
0x8978:	movsxd	r12, eax
0x897b:	movabs	rax, 0x1ffffffffffe0000
0x8985:	mov	r8d, 0x200
0x898b:	mov	edi, dword ptr [rbp - 0x320]
0x8991:	mov	qword ptr [rbp - 0x330], r8
0x8998:	lea	rdx, [rcx - 0x20000]
0x899f:	cmp	rdx, rax
0x89a2:	mov	eax, 0x20000
0x89a7:	lea	rdx, [rcx - 1]
0x89ab:	cmovbe	rax, rcx
0x89af:	mov	qword ptr [rbp - 0x370], rax
0x89b6:	movabs	rax, 0x1fffffffffffffff
0x89c0:	cmp	rdx, rax
0x89c3:	cmova	rcx, r8
0x89c7:	xor	edx, edx
0x89c9:	xor	esi, esi
0x89cb:	mov	qword ptr [rbp - 0x398], rcx
0x89d2:	mov	ecx, 2
0x89d7:	call	0xb680


0x89dc:	mov	r9d, dword ptr [rbp - 0x148]
0x89e3:	mov	r8, qword ptr [rbp - 0x330]
0x89ea:	and	r9d, 0xf000
0x89f1:	cmp	r9d, 0x8000
0x89f8:	je	0x98da


0x98da:	mov	rax, qword ptr [rbp - 0x130]
0x98e1:	cqo	
0x98e3:	idiv	r8
0x98e6:	cmp	qword ptr [rbp - 0x120], rax
0x98ed:	setl	al
0x98f0:	movzx	eax, al
0x98f3:	mov	dword ptr [rbp - 0x348], eax
0x98f9:	jmp	0x89fe


0x89fe:	mov	eax, dword ptr [rbp - 0xb8]
0x8a04:	and	eax, 0xf000
0x8a09:	cmp	eax, 0x8000
0x8a0e:	je	0x986f


0x986f:	mov	eax, dword ptr [rbx + 0xc]
0x9872:	cmp	eax, 3
0x9875:	je	0x98fe


0x8a14:	mov	rdi, qword ptr [rbp - 0x128]
0x8a1b:	movabs	rax, 0x7fffffffffffffff
0x8a25:	mov	rsi, qword ptr [rbp - 0x370]
0x8a2c:	sub	rax, r12
0x8a2f:	mov	dword ptr [rbp - 0x380], r9d
0x8a36:	mov	r8, rax
0x8a39:	movabs	rax, 0x1ffffffffffe0000
0x8a43:	lea	rdx, [rdi - 0x20000]
0x8a4a:	mov	qword ptr [rbp - 0x330], r8
0x8a51:	cmp	rdx, rax
0x8a54:	mov	eax, 0x20000
0x8a59:	mov	rdx, r8
0x8a5c:	cmova	rdi, rax
0x8a60:	call	0xb250


0x98fe:	mov	rax, qword ptr [rbp - 0x370]
0x9905:	lea	rdi, [r12 + rax]
0x9909:	call	0x11020


0x987b:	cmp	eax, 2
0x987e:	jne	0x8a14


0x9884:	test	byte ptr [rbp - 0x348], 1
0x988b:	je	0x8a14


0x9891:	mov	rax, qword ptr [rbp - 0x370]
0x9898:	lea	rdi, [r12 + rax]
0x989c:	call	0x11020


0x98a1:	lea	rcx, [rax + r12 - 1]
0x98a6:	mov	qword ptr [rbp - 0x330], rax
0x98ad:	xor	edx, edx
0x98af:	mov	rax, rcx
0x98b2:	div	r12
0x98b5:	sub	rcx, rdx
0x98b8:	mov	qword ptr [rbp - 0x3b0], rcx
0x98bf:	mov	eax, dword ptr [rbx + 0xc]
0x98c2:	mov	dword ptr [rbp - 0x390], eax
0x98c8:	movzx	eax, byte ptr [rbp - 0x338]
0x98cf:	mov	byte ptr [rbp - 0x3a5], al
0x98d5:	jmp	0x8afc


0x8afc:	mov	rax, qword ptr [rbp - 0x130]
0x8b03:	mov	edi, dword ptr [rbp - 0x320]
0x8b09:	xor	r12d, r12d
0x8b0c:	mov	qword ptr [rbp - 0x380], rax
0x8b13:	lea	rax, [rbp - 0x2f0]
0x8b1a:	mov	rsi, rax
0x8b1d:	mov	qword ptr [rbp - 0x348], rax
0x8b24:	call	0x9ef0


0x8b29:	lea	rax, [rbp - 0x2f9]
0x8b30:	xor	ecx, ecx
0x8b32:	mov	qword ptr [rbp - 0x388], rbx
0x8b39:	mov	qword ptr [rbp - 0x3a0], 0
0x8b44:	mov	rbx, rcx
0x8b47:	mov	dword ptr [rbp - 0x360], r13d
0x8b4e:	mov	qword ptr [rbp - 0x3b8], rax
0x8b55:	lea	rax, [rbp - 0x2f8]
0x8b5c:	mov	qword ptr [rbp - 0x3c0], rax
0x8b63:	mov	rdi, qword ptr [rbp - 0x348]
0x8b6a:	call	0x9f20


0x8b6f:	test	al, al
0x8b71:	je	0x9771


0x9771:	cmp	byte ptr [rbp - 0x2cf], 0
0x9778:	mov	rbx, qword ptr [rbp - 0x388]
0x977f:	mov	r13d, dword ptr [rbp - 0x360]
0x9786:	jne	0x968b


0x8b77:	cmp	qword ptr [rbp - 0x2d8], 0
0x8b7f:	je	0x964e


0x978c:	cmp	byte ptr [rbp - 0x2d0], 0
0x9793:	je	0x99b0


0x968b:	mov	rcx, qword ptr [rbp - 0x3a0]
0x9692:	cmp	qword ptr [rbp - 0x380], rcx
0x9699:	setg	r12b
0x969d:	jg	0x96ac


0x964e:	mov	rdi, qword ptr [rbp - 0x2c8]
0x9655:	call	0x2e10


0x8b85:	mov	rdx, rbx
0x8b88:	mov	rcx, r12
0x8b8b:	xor	r13d, r13d
0x8b8e:	xor	eax, eax
0x8b90:	jmp	0x8c4d


0x99b0:	mov	rdx, qword ptr [rbp - 0x310]
0x99b7:	mov	esi, 3
0x99bc:	xor	edi, edi
0x99be:	call	0xebb0


0x9799:	xor	r9d, r9d
0x979c:	cmp	dword ptr [rbx + 0xc], 3
0x97a0:	mov	eax, 0
0x97a5:	sete	r9b
0x97a9:	cmp	byte ptr [rbp - 0x3a5], 0
0x97b0:	cmovne	rax, qword ptr [rbp - 0x398]
0x97b8:	mov	qword ptr [rbp - 0x398], rax
0x97bf:	jmp	0x9581


0x969f:	cmp	byte ptr [rbp - 0x338], 0
0x96a6:	je	0x903a


0x96ac:	cmp	dword ptr [rbp - 0x390], 1
0x96b3:	mov	rsi, qword ptr [rbp - 0x380]
0x96ba:	je	0x972e


0x8c4d:	lea	rsi, [rax + rax*2]
0x8c51:	mov	rax, qword ptr [rbp - 0x2c8]
0x8c58:	lea	rax, [rax + rsi*8]
0x8c5c:	mov	rsi, qword ptr [rbp - 0x380]
0x8c63:	mov	r12, qword ptr [rax]
0x8c66:	mov	rbx, qword ptr [rax + 8]
0x8c6a:	lea	rax, [r12 + rbx]
0x8c6e:	cmp	rsi, rax
0x8c71:	jge	0x8c80


0x9581:	lea	rax, [rbp - 0x2f8]
0x9588:	sub	rsp, 8
0x958c:	mov	r8, qword ptr [rbp - 0x398]
0x9593:	mov	rcx, qword ptr [rbp - 0x370]
0x959a:	mov	rdx, qword ptr [rbp - 0x3b0]
0x95a1:	mov	esi, dword ptr [rbp - 0x328]
0x95a7:	mov	edi, dword ptr [rbp - 0x320]
0x95ad:	push	rax
0x95ae:	push	qword ptr [rbp - 0x348]
0x95b4:	push	-1
0x95b6:	push	qword ptr [rbp - 0x308]
0x95bc:	push	qword ptr [rbp - 0x310]
0x95c2:	call	0x5210


0x903a:	cmp	byte ptr [rbx + 0x1f], 0
0x903e:	jne	0x9446


0x972e:	sub	rsi, qword ptr [rbp - 0x3a0]
0x9735:	mov	edi, dword ptr [rbp - 0x328]
0x973b:	call	0x4d40


0x96bc:	mov	edi, dword ptr [rbp - 0x328]
0x96c2:	call	0x29b0


0x8c73:	cmp	r12, rsi
0x8c76:	cmovg	r12, rsi
0x8c7a:	sub	rsi, r12
0x8c7d:	mov	rbx, rsi
0x8c80:	mov	rax, r12
0x8c83:	mov	byte ptr [rbp - 0x338], 0
0x8c8a:	sub	rax, rcx
0x8c8d:	mov	rcx, rax
0x8c90:	sub	rcx, rdx
0x8c93:	je	0x8b98


0x8c80:	mov	rax, r12
0x8c83:	mov	byte ptr [rbp - 0x338], 0
0x8c8a:	sub	rax, rcx
0x8c8d:	mov	rcx, rax
0x8c90:	sub	rcx, rdx
0x8c93:	je	0x8b98


0x29b0:	jmp	qword ptr [rip + 0x2173e2]


0x8b98:	cmp	dword ptr [rbp - 0x390], 3
0x8b9f:	mov	r8d, 0
0x8ba5:	cmove	r8, qword ptr [rbp - 0x398]
0x8bad:	sub	rsp, 8
0x8bb1:	mov	rcx, qword ptr [rbp - 0x370]
0x8bb8:	mov	rdx, qword ptr [rbp - 0x3b0]
0x8bbf:	mov	esi, dword ptr [rbp - 0x328]
0x8bc5:	mov	edi, dword ptr [rbp - 0x320]
0x8bcb:	mov	r9d, 1
0x8bd1:	push	qword ptr [rbp - 0x3b8]
0x8bd7:	push	qword ptr [rbp - 0x3c0]
0x8bdd:	push	rbx
0x8bde:	push	qword ptr [rbp - 0x308]
0x8be4:	push	qword ptr [rbp - 0x310]
0x8bea:	call	0x5210


0x8c99:	mov	edi, dword ptr [rbp - 0x320]
0x8c9f:	xor	edx, edx
0x8ca1:	mov	rsi, r12
0x8ca4:	mov	qword ptr [rbp - 0x3a0], rcx
0x8cab:	call	0x29c0




0x8cb0:	test	rax, rax
0x8cb3:	mov	rcx, qword ptr [rbp - 0x3a0]
0x8cba:	js	0x9b2f


0x9b2f:	mov	rsi, qword ptr [rbp - 0x310]
0x9b36:	mov	edi, 4
0x9b3b:	mov	rbx, qword ptr [rbp - 0x388]
0x9b42:	mov	r13d, dword ptr [rbp - 0x360]
0x9b49:	call	0xeab0


0x8cc0:	mov	eax, dword ptr [rbp - 0x390]
0x8cc6:	cmp	eax, 3
0x8cc9:	sete	dl
0x8ccc:	sub	eax, 1
0x8ccf:	je	0x9428


0x9428:	mov	edi, dword ptr [rbp - 0x328]
0x942e:	mov	rsi, rcx
0x9431:	call	0x4d40


0x8cd5:	mov	rsi, qword ptr [rbp - 0x308]
0x8cdc:	mov	edi, dword ptr [rbp - 0x328]
0x8ce2:	movzx	edx, dl
0x8ce5:	call	0x5150


0x8cea:	test	al, al
0x8cec:	mov	byte ptr [rbp - 0x338], al
0x8cf2:	jne	0x8b98


0x8cf8:	mov	rbx, qword ptr [rbp - 0x388]
0x8cff:	mov	r13d, dword ptr [rbp - 0x360]
0x8d06:	mov	rdi, qword ptr [rbp - 0x2c8]
0x8d0d:	call	0x2e10


0x9436:	test	al, al
0x9438:	je	0x9953


0x9953:	mov	rdx, qword ptr [rbp - 0x308]
0x995a:	mov	esi, 3
0x995f:	xor	edi, edi
0x9961:	mov	rbx, qword ptr [rbp - 0x388]
0x9968:	mov	r13d, dword ptr [rbp - 0x360]
0x996f:	call	0xebb0


0x943e:	xor	r8d, r8d
0x9441:	jmp	0x8bad


0x8bad:	sub	rsp, 8
0x8bb1:	mov	rcx, qword ptr [rbp - 0x370]
0x8bb8:	mov	rdx, qword ptr [rbp - 0x3b0]
0x8bbf:	mov	esi, dword ptr [rbp - 0x328]
0x8bc5:	mov	edi, dword ptr [rbp - 0x320]
0x8bcb:	mov	r9d, 1
0x8bd1:	push	qword ptr [rbp - 0x3b8]
0x8bd7:	push	qword ptr [rbp - 0x3c0]
0x8bdd:	push	rbx
0x8bde:	push	qword ptr [rbp - 0x308]
0x8be4:	push	qword ptr [rbp - 0x310]
0x8bea:	call	0x5210


0x9740:	test	al, al
0x9742:	jne	0x903a


0x9748:	jmp	0x95fa


0x95fa:	mov	rsi, qword ptr [rbp - 0x308]
0x9601:	mov	edi, 4
0x9606:	call	0xeab0


0x8bef:	add	rsp, 0x30
0x8bf3:	test	al, al
0x8bf5:	je	0x8cf8


0x8bfb:	mov	rax, qword ptr [rbp - 0x2f8]
0x8c02:	lea	rcx, [r12 + rax]
0x8c06:	test	rax, rax
0x8c09:	mov	qword ptr [rbp - 0x3a0], rcx
0x8c10:	je	0x8c1f


0x8c1f:	mov	rcx, qword ptr [rbp - 0x3a0]
0x8c26:	cmp	qword ptr [rbp - 0x380], rcx
0x8c2d:	je	0x9647


0x8c12:	movzx	eax, byte ptr [rbp - 0x2f9]
0x8c19:	mov	byte ptr [rbp - 0x338], al
0x8c1f:	mov	rcx, qword ptr [rbp - 0x3a0]
0x8c26:	cmp	qword ptr [rbp - 0x380], rcx
0x8c2d:	je	0x9647


0x9647:	mov	byte ptr [rbp - 0x2cf], 1
0x964e:	mov	rdi, qword ptr [rbp - 0x2c8]
0x9655:	call	0x2e10


0x8c33:	lea	eax, [r13 + 1]
0x8c37:	cmp	rax, qword ptr [rbp - 0x2d8]
0x8c3e:	mov	rcx, r12
0x8c41:	mov	rdx, rbx
0x8c44:	mov	r13, rax
0x8c47:	jae	0x964e


0x95c7:	add	rsp, 0x30
0x95cb:	test	al, al
0x95cd:	je	0x8d12


0x95d3:	cmp	byte ptr [rbp - 0x2f8], 0
0x95da:	je	0x903a


0x95e0:	mov	rsi, qword ptr [rbp - 0x2f0]
0x95e7:	mov	edi, dword ptr [rbp - 0x328]
0x95ed:	call	0x29b0


0x965a:	cmp	byte ptr [rbp - 0x2cf], 0
0x9661:	mov	qword ptr [rbp - 0x2c8], 0
0x966c:	mov	qword ptr [rbp - 0x2d8], 0
0x9677:	je	0x8b63


0x8b63:	mov	rdi, qword ptr [rbp - 0x348]
0x8b6a:	call	0x9f20


0x967d:	mov	rbx, qword ptr [rbp - 0x388]
0x9684:	mov	r13d, dword ptr [rbp - 0x360]
0x968b:	mov	rcx, qword ptr [rbp - 0x3a0]
0x9692:	cmp	qword ptr [rbp - 0x380], rcx
0x9699:	setg	r12b
0x969d:	jg	0x96ac


0x990e:	lea	rcx, [rax + r12 - 1]
0x9913:	xor	edx, edx
0x9915:	mov	qword ptr [rbp - 0x330], rax
0x991c:	mov	rax, rcx
0x991f:	div	r12
0x9922:	sub	rcx, rdx
0x9925:	cmp	dword ptr [rbp - 0x348], 0
0x992c:	mov	qword ptr [rbp - 0x3b0], rcx
0x9933:	jne	0x98bf


0x9935:	xor	r9d, r9d
0x9938:	cmp	dword ptr [rbx + 0xc], 3
0x993c:	lea	rax, [rbp - 0x2f0]
0x9943:	mov	qword ptr [rbp - 0x348], rax
0x994a:	sete	r9b
0x994e:	jmp	0x9581


0x98bf:	mov	eax, dword ptr [rbx + 0xc]
0x98c2:	mov	dword ptr [rbp - 0x390], eax
0x98c8:	movzx	eax, byte ptr [rbp - 0x338]
0x98cf:	mov	byte ptr [rbp - 0x3a5], al
0x98d5:	jmp	0x8afc


0x8a65:	mov	r9d, dword ptr [rbp - 0x380]
0x8a6c:	mov	rcx, rax
0x8a6f:	mov	r8, qword ptr [rbp - 0x330]
0x8a76:	cmp	r9d, 0x8000
0x8a7d:	je	0x974d


0x974d:	mov	rax, qword ptr [rbp - 0x130]
0x9754:	cmp	qword ptr [rbp - 0x370], rax
0x975b:	jbe	0x8a83


0x8a83:	mov	rax, qword ptr [rbp - 0x370]
0x8a8a:	xor	edx, edx
0x8a8c:	lea	rsi, [rcx + rax - 1]
0x8a91:	mov	rax, rsi
0x8a94:	div	rcx
0x8a97:	sub	rsi, rdx
0x8a9a:	mov	qword ptr [rbp - 0x370], rsi
0x8aa1:	je	0x9551


0x9761:	add	rax, 1
0x9765:	mov	qword ptr [rbp - 0x370], rax
0x976c:	jmp	0x8a83


0x9551:	mov	qword ptr [rbp - 0x370], rcx
0x9558:	jmp	0x8ab0


0x8aa7:	cmp	rsi, r8
0x8aaa:	ja	0x9551


0x8ab0:	mov	rax, qword ptr [rbp - 0x370]
0x8ab7:	lea	rdi, [r12 + rax]
0x8abb:	call	0x11020


0x8ac0:	lea	rcx, [rax + r12 - 1]
0x8ac5:	xor	edx, edx
0x8ac7:	mov	qword ptr [rbp - 0x330], rax
0x8ace:	mov	rax, rcx
0x8ad1:	div	r12
0x8ad4:	sub	rcx, rdx
0x8ad7:	cmp	dword ptr [rbp - 0x348], 0
0x8ade:	mov	qword ptr [rbp - 0x3b0], rcx
0x8ae5:	je	0x955d


0x955d:	xor	r9d, r9d
0x9560:	cmp	dword ptr [rbx + 0xc], 3
0x9564:	lea	rax, [rbp - 0x2f0]
0x956b:	mov	qword ptr [rbp - 0x398], 0
0x9576:	mov	qword ptr [rbp - 0x348], rax
0x957d:	sete	r9b
0x9581:	lea	rax, [rbp - 0x2f8]
0x9588:	sub	rsp, 8
0x958c:	mov	r8, qword ptr [rbp - 0x398]
0x9593:	mov	rcx, qword ptr [rbp - 0x370]
0x959a:	mov	rdx, qword ptr [rbp - 0x3b0]
0x95a1:	mov	esi, dword ptr [rbp - 0x328]
0x95a7:	mov	edi, dword ptr [rbp - 0x320]
0x95ad:	push	rax
0x95ae:	push	qword ptr [rbp - 0x348]
0x95b4:	push	-1
0x95b6:	push	qword ptr [rbp - 0x308]
0x95bc:	push	qword ptr [rbp - 0x310]
0x95c2:	call	0x5210


0x8aeb:	mov	byte ptr [rbp - 0x3a5], 0
0x8af2:	mov	dword ptr [rbp - 0x390], 1
0x8afc:	mov	rax, qword ptr [rbp - 0x130]
0x8b03:	mov	edi, dword ptr [rbp - 0x320]
0x8b09:	xor	r12d, r12d
0x8b0c:	mov	qword ptr [rbp - 0x380], rax
0x8b13:	lea	rax, [rbp - 0x2f0]
0x8b1a:	mov	rsi, rax
0x8b1d:	mov	qword ptr [rbp - 0x348], rax
0x8b24:	call	0x9ef0


0x11b98:	cmp	rbp, 0x7ff
0x11b9f:	jle	0x11cc4


0x11cc4:	test	rbp, rbp
0x11cc7:	mov	r15, r14
0x11cca:	mov	eax, 0x10
0x11ccf:	cmovs	rbp, r12
0x11cd3:	lea	r12, [rsp + 0x10]
0x11cd8:	sub	r15, rbp
0x11cdb:	cmp	r15, 0x10
0x11cdf:	mov	rdi, r12
0x11ce2:	cmova	r15, rax
0x11ce6:	xor	esi, esi
0x11ce8:	call	0x29d0


0x11ba5:	mov	rdi, r13
0x11ba8:	call	0x12240


0x11bad:	jmp	0x11af7


0x11ced:	lea	rax, [r13 + rbp]
0x11cf2:	add	rbp, r15
0x11cf5:	mov	ecx, r15d
0x11cf8:	cmp	rbp, 0x7ff
0x11cff:	mov	rsi, r12
0x11d02:	mov	rdi, rax
0x11d05:	rep movsb	byte ptr [rdi], byte ptr [rsi]


0x11d07:	ja	0x11ba5


0x11d05:	rep movsb	byte ptr [rdi], byte ptr [rsi]


0x11d0d:	mov	r15, r14
0x11d10:	mov	r8d, 4
0x11d16:	sub	r15, rbp
0x11d19:	mov	qword ptr [rsp + 8], r8
0x11d1e:	cmp	r15, 4
0x11d22:	cmova	r15, r8
0x11d26:	lea	rdx, [rbp + r15]
0x11d2b:	add	rbp, r13
0x11d2e:	mov	qword ptr [rsp], rdx
0x11d32:	call	0x2850


0x8d27:	test	eax, eax
0x8d29:	movzx	r8d, byte ptr [rbp - 0x338]
0x8d31:	jns	0x7bd8


0x8d37:	mov	rsi, qword ptr [rbp - 0x308]
0x8d3e:	mov	edi, 4
0x8d43:	call	0xeab0


0x7bea:	test	eax, eax
0x7bec:	movzx	r8d, byte ptr [rbp - 0x328]
0x7bf4:	js	0x8647


0x8647:	mov	rsi, qword ptr [rbp - 0x310]
0x864e:	mov	edi, 4
0x8653:	call	0xeab0


0x7bfa:	mov	rdi, qword ptr [rbp - 0x330]
0x7c01:	mov	byte ptr [rbp - 0x328], r8b
0x7c08:	call	0x2e10


0x7c0d:	movzx	r8d, byte ptr [rbp - 0x328]
0x7c15:	mov	byte ptr [rbp - 0x320], 0
0x7c1c:	test	r8b, r8b
0x7c1f:	jne	0x5fff


0x7c25:	jmp	0x6a10


0x12713:	mov	ebx, 0xffffffff
0x12718:	mov	dword ptr [rbp], r12d
0x1271c:	jmp	0x125f0


0x11620:	test	rax, rax
0x11623:	mov	r13, rax
0x11626:	mov	r14d, dword ptr [rbp]
0x1162a:	jne	0x115f9


0x1162c:	mov	edi, r12d
0x1162f:	call	0x2a30


0x115f9:	mov	rdi, rbx
0x115fc:	mov	rbx, r13
0x115ff:	call	0x2a60


0x11634:	jmp	0x115f9


0xcf37:	test	rax, rax
0xcf3a:	mov	rbp, rax
0xcf3d:	je	0xcf58


0xcf58:	call	0x2770


0xcf3f:	mov	dword ptr [r12], ebx
0xcf43:	add	rsp, 8
0xcf47:	mov	rax, rbp
0xcf4a:	pop	rbx
0xcf4b:	pop	rbp
0xcf4c:	pop	r12
0xcf4e:	pop	r13
0xcf50:	ret	


0xcf5d:	mov	r13d, dword ptr [rax]
0xcf60:	mov	r12, rax
0xcf63:	mov	edi, ebx
0xcf65:	call	0x2a30


0xcf6a:	mov	rax, rbp
0xcf6d:	mov	dword ptr [r12], r13d
0xcf71:	add	rsp, 8
0xcf75:	pop	rbx
0xcf76:	pop	rbp
0xcf77:	pop	r12
0xcf79:	pop	r13
0xcf7b:	ret	


0x10645:	mov	ebp, eax
0x10647:	jmp	0x10607


0x719c:	test	rax, rax
0x719f:	mov	r15, rax
0x71a2:	mov	rdx, qword ptr [rbp - 0x350]
0x71a9:	movzx	r8d, byte ptr [rbp - 0x358]
0x71b1:	movzx	r9d, byte ptr [rbp - 0x35c]
0x71b9:	je	0x7542


0x71bf:	mov	rsi, qword ptr [rbp - 0x308]
0x71c6:	mov	rdi, rax
0x71c9:	mov	byte ptr [rbp - 0x358], r9b
0x71d0:	mov	byte ptr [rbp - 0x350], r8b
0x71d7:	call	0xf240


0x8452:	test	eax, eax
0x8454:	movzx	r8d, byte ptr [rbp - 0x320]
0x845c:	je	0x5fff


0x8462:	mov	rsi, qword ptr [rbp - 0x308]
0x8469:	mov	edi, 4
0x846e:	call	0xeab0


0x71dc:	mov	rdi, r15
0x71df:	xor	eax, 1
0x71e2:	mov	r12d, eax
0x71e5:	call	0x2e10


0x71ea:	movzx	r8d, byte ptr [rbp - 0x350]
0x71f2:	movzx	r9d, byte ptr [rbp - 0x358]
0x71fa:	xor	eax, eax
0x71fc:	test	r12b, r12b
0x71ff:	je	0x7080


0x84f3:	test	al, al
0x84f5:	mov	rdx, qword ptr [rbp - 0x350]
0x84fc:	movzx	r8d, byte ptr [rbp - 0x358]
0x8504:	movzx	r9d, byte ptr [rbp - 0x35c]
0x850c:	je	0x8d87


0x8d87:	movzx	r12d, byte ptr [rbx + 0x18]
0x8d8c:	xor	r12d, 1
0x8d90:	jmp	0x71fc


0x8512:	mov	eax, dword ptr [rdx + 0x18]
0x8515:	and	eax, 0xf000
0x851a:	cmp	eax, 0xa000
0x851f:	je	0x714c


0x71fc:	test	r12b, r12b
0x71ff:	je	0x7080


0x80f3:	xor	eax, 1
0x80f6:	movzx	r8d, byte ptr [rbp - 0x350]
0x80fe:	movzx	r9d, byte ptr [rbp - 0x358]
0x8106:	mov	r12d, eax
0x8109:	xor	eax, eax
0x810b:	jmp	0x71fc


0x7d11:	test	al, al
0x7d13:	jne	0x7080


0x7d19:	mov	edi, dword ptr [rbx]
0x7d1b:	movzx	r8d, byte ptr [rbp - 0x350]
0x7d23:	movzx	r9d, byte ptr [rbp - 0x358]
0x7d2b:	test	edi, edi
0x7d2d:	jne	0x6ece


0x7d33:	test	r15d, r15d
0x7d36:	je	0x6ece


0x7d3c:	movzx	r12d, byte ptr [rbx + 0x18]
0x7d41:	mov	eax, 1
0x7d46:	xor	r12d, 1
0x7d4a:	jmp	0x71fc


0xcea9:	add	rsp, 8
0xcead:	ret	


0x10f26:	mov	rax, qword ptr [rsp + 0x78]
0x10f2b:	xor	rax, qword ptr fs:[0x28]
0x10f34:	jne	0x10f40


0x10f36:	add	rsp, 0xb8
0x10f3d:	pop	rbx
0x10f3e:	pop	rbp
0x10f3f:	ret	


0x10f40:	call	0x2930


0x10e50:	mov	rax, qword ptr [rsp + 0x58]
0x10e55:	xor	rax, qword ptr fs:[0x28]
0x10e5e:	jne	0x10e65


0x10e60:	add	rsp, 0x68
0x10e64:	ret	


0x10e65:	call	0x2930


0x127c7:	test	eax, eax
0x127c9:	mov	r12d, eax
0x127cc:	js	0x12808


0x12808:	call	0x2770


0x127ce:	mov	rdi, rbx
0x127d1:	call	0x12490


0x127d6:	test	eax, eax
0x127d8:	jne	0x127ed


0x127da:	mov	rsi, rbp
0x127dd:	mov	edi, r12d
0x127e0:	call	0x2c30


0x127ed:	call	0x2770


0x2c30:	jmp	qword ptr [rip + 0x2172a2]




0x127f2:	mov	ebp, dword ptr [rax]
0x127f4:	mov	rbx, rax
0x127f7:	mov	edi, r12d
0x127fa:	call	0x2a30


0x127ff:	mov	dword ptr [rbx], ebp
0x12801:	xor	ebx, ebx
0x12803:	jmp	0x127b1


0x1280d:	mov	r12d, dword ptr [rax]
0x12810:	mov	rbp, rax
0x12813:	mov	rdi, rbx
0x12816:	call	0x12490


0x1281b:	xor	ebx, ebx
0x1281d:	mov	dword ptr [rbp], r12d
0x12821:	jmp	0x127b1


0xf966:	mov	r12d, eax
0xf969:	call	0x2770


0xf96e:	mov	r13d, dword ptr [rax]
0xf971:	mov	rbp, rax
0xf974:	mov	edi, ebx
0xf976:	call	0x2a30


0xf97b:	mov	ebx, r12d
0xf97e:	mov	dword ptr [rbp], r13d
0xf982:	add	rsp, 8
0xf986:	mov	eax, ebx
0xf988:	pop	rbx
0xf989:	pop	rbp
0xf98a:	pop	r12
0xf98c:	pop	r13
0xf98e:	ret	


0xf37b:	mov	rcx, qword ptr [rsp + 0x30]
0xf380:	add	r14, qword ptr [rsp + 0x18]
0xf385:	mov	qword ptr [r12], rax
0xf389:	mov	rax, qword ptr [rcx]
0xf38c:	mov	qword ptr [r12 + 8], rax
0xf391:	mov	r12, qword ptr [rsp + 0x38]
0xf396:	jmp	0xf2f4


0x9e48:	mov	rdi, qword ptr [rip + 0x210729]
0x9e4f:	mov	rsi, rbx
0x9e52:	mov	qword ptr [rbx + 0x10], rax
0x9e56:	mov	qword ptr [rbx], r12
0x9e59:	mov	qword ptr [rbx + 8], rbp
0x9e5d:	call	0xcbd0


0xb75d:	mov	qword ptr [rbx], rax
0xb760:	mov	rax, qword ptr [rbp + 8]
0xb764:	mov	rsi, rbx
0xb767:	mov	rdi, r13
0xb76a:	mov	qword ptr [rbx + 8], rax
0xb76e:	mov	rax, qword ptr [rbp]
0xb772:	mov	qword ptr [rbx + 0x10], rax
0xb776:	call	0xcbd0


0x4ad4:	mov	r12, rax
0x4ad7:	movzx	edx, byte ptr [rbp - 0xe2]
0x4ade:	mov	r8, qword ptr [rbp - 0x110]
0x4ae5:	xor	r9d, r9d
0x4ae8:	mov	rcx, r14
0x4aeb:	mov	rsi, r12
0x4aee:	mov	rdi, r13
0x4af1:	call	0x9b90


0x3809:	mov	r15, rax
0x380c:	mov	qword ptr [rsp + 8], rax
0x3811:	lea	rax, [rip + 0xf0d7]
0x3818:	test	r12b, r12b
0x381b:	lea	r12, [rip + 0xf3de]
0x3822:	cmovne	rax, r14
0x3826:	mov	qword ptr [rsp], rax
0x382a:	nop	word ptr [rax + rax]
0x3830:	mov	esi, 0x2c
0x3835:	mov	rdi, r15
0x3838:	xor	r14d, r14d
0x383b:	call	0x2970


0x3840:	test	rax, rax
0x3843:	je	0x384c


0x384c:	mov	r9, qword ptr [rip + 0x2167d5]
0x3853:	mov	rdi, qword ptr [rsp]
0x3857:	lea	rcx, [rip + 0xf7f2]
0x385e:	lea	rdx, [rip + 0x215cdb]
0x3865:	mov	r8d, 4
0x386b:	mov	rsi, r15
0x386e:	call	0xaa40


0x3845:	lea	r14, [rax + 1]
0x3849:	mov	byte ptr [rax], 0
0x384c:	mov	r9, qword ptr [rip + 0x2167d5]
0x3853:	mov	rdi, qword ptr [rsp]
0x3857:	lea	rcx, [rip + 0xf7f2]
0x385e:	lea	rdx, [rip + 0x215cdb]
0x3865:	mov	r8d, 4
0x386b:	mov	rsi, r15
0x386e:	call	0xaa40


0x3873:	cmp	dword ptr [r13 + rax*4], 6
0x3879:	ja	0x391d


0x387f:	mov	eax, dword ptr [r13 + rax*4]
0x3884:	movsxd	rax, dword ptr [r12 + rax*4]
0x3888:	add	rax, r12
0x388b:	jmp	rax


0x391d:	call	0x2760


0xb33b:	mov	rbx, qword ptr [rip + 0x20f246]
0xb342:	mov	r12, rax
0xb345:	call	0x2770


0xb34a:	mov	rbp, rax
0xb34d:	test	rbx, rbx
0xb350:	je	0xb3c0


0xb3c0:	mov	esi, dword ptr [rax]
0xb3c2:	lea	rdx, [rip + 0x9dc4]
0xb3c9:	mov	rcx, r12
0xb3cc:	xor	edi, edi
0xb3ce:	xor	eax, eax
0xb3d0:	call	0x2cb0


0xb352:	mov	rdi, rbx
0xb355:	call	0xeb80


0xb3d5:	jmp	0xb373


0xb373:	call	0xb400


0xb3ab:	test	eax, eax
0xb3ad:	jne	0xb328


0xb3b3:	pop	rbx
0xb3b4:	pop	rbp
0xb3b5:	pop	r12
0xb3b7:	jmp	0xb400


0xb328:	lea	rsi, [rip + 0x9ed1]
0xb32f:	xor	edi, edi
0xb331:	mov	edx, 5
0xb336:	call	0x28e0


0xb2f4:	test	eax, eax
0xb2f6:	jne	0xb328


0xb2f8:	pop	rbx
0xb2f9:	pop	rbp
0xb2fa:	pop	r12
0xb2fc:	jmp	0xb400


0xb412:	test	eax, eax
0xb414:	je	0xb42c


0xb42c:	mov	rdi, qword ptr [rip + 0x20ecad]
0xb433:	call	0x11520


0xb416:	call	0x2770


0xb41b:	cmp	byte ptr [rip + 0x20f16e], 0
0xb422:	mov	rbx, rax
0xb425:	je	0xb443


0xb443:	lea	rsi, [rip + 0x9dd0]
0xb44a:	xor	edi, edi
0xb44c:	mov	edx, 5
0xb451:	call	0x28e0


0xb427:	cmp	dword ptr [rax], 0x20
0xb42a:	jne	0xb443


0xb456:	mov	rdi, qword ptr [rip + 0x20f13b]
0xb45d:	mov	rbp, rax
0xb460:	test	rdi, rdi
0xb463:	je	0xb48d


0xb48d:	mov	esi, dword ptr [rbx]
0xb48f:	lea	rdx, [rip + 0x9cf7]
0xb496:	mov	rcx, rax
0xb499:	xor	edi, edi
0xb49b:	xor	eax, eax
0xb49d:	call	0x2cb0


0xb465:	call	0xeb80


0xb4a2:	jmp	0xb482


0xb482:	mov	edi, dword ptr [rip + 0x20eba8]
0xb488:	call	0x27a0


0x27a0:	jmp	qword ptr [rip + 0x2174ea]




0xb438:	test	eax, eax
0xb43a:	jne	0xb482


0xb43c:	add	rsp, 8
0xb440:	pop	rbx
0xb441:	pop	rbp
0xb442:	ret	


0xb378:	mov	edi, dword ptr [rip + 0x20ecb2]
0xb37e:	call	0x27a0


0x127e5:	test	rax, rax
0x127e8:	mov	rbx, rax
0x127eb:	jne	0x127b1


0x95f2:	test	eax, eax
0x95f4:	jns	0x903a


0x96c7:	test	eax, eax
0x96c9:	jne	0x95fa


0x96cf:	cmp	dword ptr [rbp - 0x390], 3
0x96d6:	jne	0x903a


0x96dc:	test	r12b, r12b
0x96df:	je	0x903a


0x96e5:	mov	rdx, qword ptr [rbp - 0x380]
0x96ec:	mov	rsi, qword ptr [rbp - 0x3a0]
0x96f3:	mov	edi, dword ptr [rbp - 0x328]
0x96f9:	sub	rdx, rsi
0x96fc:	call	0x4df0


0x9701:	test	eax, eax
0x9703:	jns	0x903a


0x9709:	mov	rsi, qword ptr [rbp - 0x308]
0x9710:	mov	edi, 4
0x9715:	call	0xeab0


0xf424:	mov	rdi, rbx
0xf427:	xor	ebx, ebx
0xf429:	call	0x11020


0xf42e:	mov	r13, rax
0xf431:	nop	dword ptr [rax]
0xf438:	mov	rsi, qword ptr [rbp]
0xf43c:	lea	r14, [r13 + rbx]
0xf441:	add	rbp, 0x10
0xf445:	mov	rdi, r14
0xf448:	call	0x28c0


0x28c0:	jmp	qword ptr [rip + 0x21745a]




0xa576:	mov	r8d, dword ptr [rsp + 0xc]
0xa57b:	jmp	0xa4cb


0xa417:	mov	ecx, dword ptr [rsp + 0xc]
0xa41b:	jmp	0xa376


0xa376:	cmp	r15, qword ptr [rsp]
0xa37a:	je	0xa390


0x2eeb:	lea	rdi, [rip + 0x83de]
0x2ef2:	call	0x128b0


0x2ef7:	mov	rdi, r15
0x2efa:	mov	byte ptr [rip + 0x217251], 0
0x2f01:	call	0x57d0


0x2f06:	lea	rdi, [rip + 0xfb46]
0x2f0d:	mov	byte ptr [rsp + 0x44], 1
0x2f12:	mov	dword ptr [rsp + 0x34], 1
0x2f1a:	mov	byte ptr [rsp + 0x45], 0
0x2f1f:	mov	byte ptr [rsp + 0x46], 0
0x2f24:	mov	byte ptr [rsp + 0x47], 0
0x2f29:	mov	dword ptr [rsp + 0x38], 4
0x2f31:	mov	byte ptr [rsp + 0x48], 0
0x2f36:	mov	byte ptr [rsp + 0x49], 0
0x2f3b:	mov	byte ptr [rsp + 0x4c], 0
0x2f40:	mov	dword ptr [rsp + 0x68], 0
0x2f48:	mov	byte ptr [rsp + 0x4d], 0
0x2f4d:	mov	byte ptr [rsp + 0x52], 0
0x2f52:	mov	byte ptr [rsp + 0x4e], 0
0x2f57:	mov	byte ptr [rsp + 0x4f], 0
0x2f5c:	mov	byte ptr [rsp + 0x50], 0
0x2f61:	mov	byte ptr [rsp + 0x55], 0
0x2f66:	mov	byte ptr [rsp + 0x56], 0
0x2f6b:	mov	byte ptr [rsp + 0x51], 0
0x2f70:	mov	byte ptr [rsp + 0x57], 0
0x2f75:	mov	byte ptr [rsp + 0x59], 0
0x2f7a:	mov	byte ptr [rsp + 0x58], 0
0x2f7f:	mov	byte ptr [rsp + 0x53], 1
0x2f84:	mov	byte ptr [rsp + 0x54], 0
0x2f89:	mov	byte ptr [rsp + 0x5a], 0
0x2f8e:	mov	dword ptr [rsp + 0x3c], 2
0x2f96:	mov	byte ptr [rsp + 0x5c], 0
0x2f9b:	mov	byte ptr [rsp + 0x5b], 0
0x2fa0:	mov	dword ptr [rsp + 0x40], 0
0x2fa8:	mov	byte ptr [rsp + 0x5f], 0
0x2fad:	mov	byte ptr [rsp + 0x5d], 0
0x2fb2:	mov	byte ptr [rsp + 0x5e], 0
0x2fb7:	call	0x2740


0x2fbc:	test	rax, rax
0x2fbf:	lea	rax, [rsp + 0x80]
0x2fc7:	mov	qword ptr [rsp + 0x70], 0
0x2fd0:	setne	byte ptr [rsp + 0x60]
0x2fd5:	mov	qword ptr [rsp + 0x78], 0
0x2fde:	mov	qword ptr [rsp + 0x20], 0
0x2fe7:	mov	byte ptr [rsp + 0x1e], 0
0x2fec:	mov	qword ptr [rsp], 0
0x2ff4:	mov	byte ptr [rsp + 0x1f], 0
0x2ff9:	mov	qword ptr [rsp + 8], 0
0x3002:	mov	qword ptr [rsp + 0x10], 0
0x300b:	mov	byte ptr [rsp + 0x1d], 0
0x3010:	mov	qword ptr [rsp + 0x28], rax
0x3015:	nop	dword ptr [rax]
0x3018:	lea	rdx, [rip + 0xfa86]
0x301f:	xor	r8d, r8d
0x3022:	mov	rcx, r13
0x3025:	mov	rsi, rbp
0x3028:	mov	edi, r12d
0x302b:	call	0x2950


0x2950:	jmp	qword ptr [rip + 0x217412]




0x11d37:	mov	rdx, qword ptr [rsp]
0x11d3b:	mov	dword ptr [rsp + 0x10], eax
0x11d3f:	mov	ecx, r15d
0x11d42:	mov	rdi, rbp
0x11d45:	mov	rsi, r12
0x11d48:	mov	r8, qword ptr [rsp + 8]
0x11d4d:	rep movsb	byte ptr [rdi], byte ptr [rsi]


0x11d4f:	cmp	rdx, 0x7ff
0x11d56:	jg	0x11ba5


0x11d4d:	rep movsb	byte ptr [rdi], byte ptr [rsi]


0x11d5c:	sub	r14, rdx
0x11d5f:	cmp	r14, 4
0x11d63:	cmova	r14, r8
0x11d67:	call	0x2d80


0x2d80:	jmp	qword ptr [rip + 0x2171fa]




0x11c0c:	mov	dword ptr [rbx + 0x30], eax
0x11c0f:	mov	dword ptr [rsp + 0x10], eax
0x11c13:	call	0x2d80


0x11c18:	mov	dword ptr [rsp + 0x10], eax
0x11c1c:	mov	dword ptr [rbx + 0x34], eax
0x11c1f:	mov	ebp, 0x800
0x11c24:	mov	eax, 4
0x11c29:	sub	rbp, r14
0x11c2c:	cmp	rbp, 4
0x11c30:	cmova	rbp, rax
0x11c34:	call	0x2940


0x2940:	jmp	qword ptr [rip + 0x21741a]




0x11d6c:	mov	rdx, qword ptr [rsp]
0x11d70:	mov	dword ptr [rsp + 0x10], eax
0x11d74:	mov	ecx, r14d
0x11d77:	mov	rsi, r12
0x11d7a:	lea	rax, [r13 + rdx]
0x11d7f:	add	r14, rdx
0x11d82:	cmp	r14, 0x7ff
0x11d89:	mov	rdi, rax
0x11d8c:	rep movsb	byte ptr [rdi], byte ptr [rsi]


0x11d8e:	ja	0x11ba5


0x11d8c:	rep movsb	byte ptr [rdi], byte ptr [rsi]


0x11d94:	jmp	0x11c1f


0x11c1f:	mov	ebp, 0x800
0x11c24:	mov	eax, 4
0x11c29:	sub	rbp, r14
0x11c2c:	cmp	rbp, 4
0x11c30:	cmova	rbp, rax
0x11c34:	call	0x2940


0x3030:	cmp	eax, -1
0x3033:	je	0x33a0


0x33a0:	cmp	byte ptr [rsp + 0x47], 0
0x33a5:	jne	0x34a2


0x3039:	add	eax, 0x83
0x303e:	cmp	eax, 0x10b
0x3043:	ja	0x35ec


0x33ab:	cmp	dword ptr [rsp + 0x38], 2
0x33b0:	je	0x34be


0x34a2:	cmp	byte ptr [rsp + 0x5c], 0
0x34a7:	je	0x33ab


0x3049:	movsxd	rax, dword ptr [rbx + rax*4]
0x304d:	add	rax, rbx
0x3050:	jmp	rax


0x35ec:	mov	edi, 1
0x35f1:	call	0x4220


0x34be:	cmp	byte ptr [rsp + 0x1d], 0
0x34c3:	mov	byte ptr [rsp + 0x5d], 0
0x34c8:	jne	0x35cb


0x33b6:	cmp	byte ptr [rsp + 0x1d], 0
0x33bb:	je	0x34ce


0x34ad:	mov	edx, 5
0x34b2:	lea	rsi, [rip + 0x110f7]
0x34b9:	jmp	0x35d7


0x34ce:	xor	eax, eax
0x34d0:	cmp	dword ptr [rsp + 0x68], 2
0x34d5:	jne	0x33ec


0x35cb:	lea	rsi, [rip + 0x1100e]
0x35d2:	mov	edx, 5
0x35d7:	xor	edi, edi
0x35d9:	call	0x28e0


0x33c1:	cmp	dword ptr [rsp + 0x68], 2
0x33c6:	je	0x357b


0x35d7:	xor	edi, edi
0x35d9:	call	0x28e0


0x34db:	cmp	dword ptr [rsp + 0x3c], 2
0x34e0:	je	0x33ec


0x33ec:	mov	rdi, qword ptr [rsp + 0x10]
0x33f1:	mov	dword ptr [rsp + 0x30], eax
0x33f5:	call	0xab00


0x357b:	cmp	dword ptr [rsp + 0x3c], 2
0x3580:	je	0x33cc


0x33cc:	lea	rsi, [rip + 0xf6ea]
0x33d3:	xor	edi, edi
0x33d5:	mov	edx, 5
0x33da:	call	0x28e0


0x34e6:	mov	edx, 5
0x34eb:	lea	rsi, [rip + 0x1112e]
0x34f2:	jmp	0x35d7


0x3586:	jmp	0x34e6


0x33fa:	cmp	dword ptr [rsp + 0x34], 1
0x33ff:	je	0x34f7


0x34f7:	cmp	byte ptr [rsp + 0x5a], 0
0x34fc:	je	0x3564


0x3405:	cmp	byte ptr [rsp + 0x5a], 0
0x340a:	jne	0x350d


0x3564:	mov	dword ptr [rsp + 0x34], 4
0x356c:	jmp	0x3405


0x34fe:	cmp	byte ptr [rsp + 0x47], 0
0x3503:	jne	0x3564


0x3410:	cmp	byte ptr [rsp + 0x51], 0
0x3415:	movzx	eax, byte ptr [rsp + 0x56]
0x341a:	jne	0x3428


0x350d:	movzx	eax, byte ptr [rsp + 0x1f]
0x3512:	mov	byte ptr [rsp + 0x44], al
0x3516:	jmp	0x3410


0x3505:	mov	dword ptr [rsp + 0x34], 2
0x350d:	movzx	eax, byte ptr [rsp + 0x1f]
0x3512:	mov	byte ptr [rsp + 0x44], al
0x3516:	jmp	0x3410


0x341c:	cmp	qword ptr [rsp + 0x20], 0
0x3422:	je	0x3546


0x3428:	test	al, al
0x342a:	jne	0x351b


0x3546:	cmp	byte ptr [rsp + 0x55], 0
0x354b:	je	0x358b


0x3430:	mov	byte ptr [rsp + 0x55], 0
0x3435:	cmp	qword ptr [rsp + 0x20], 0
0x343b:	jne	0x3643


0x351b:	cmp	byte ptr [rsp + 0x55], 0
0x3520:	je	0x3555


0x358b:	test	al, al
0x358d:	je	0x3441


0x354d:	test	al, al
0x354f:	je	0x3441


0x3441:	cmp	byte ptr [rsp + 0x58], 0
0x3446:	jne	0x361f


0x3643:	call	0x2770


0x3555:	cmp	byte ptr [rip + 0x216bf6], 0
0x355c:	jne	0x3435


0x3522:	lea	rsi, [rip + 0x11127]
0x3529:	mov	edx, 5
0x352e:	xor	edi, edi
0x3530:	call	0x28e0


0x3593:	cmp	byte ptr [rip + 0x216bb8], 0
0x359a:	jne	0x3441


0x344c:	call	0x9ea0


0x361f:	lea	rsi, [rip + 0x110da]
0x3626:	mov	edx, 5
0x362b:	xor	edi, edi
0x362d:	call	0x28e0


0x3562:	jmp	0x35a0


0x3435:	cmp	qword ptr [rsp + 0x20], 0
0x343b:	jne	0x3643


0x35a0:	lea	rsi, [rip + 0x110d9]
0x35a7:	mov	edx, 5
0x35ac:	xor	edi, edi
0x35ae:	call	0x28e0


0x3451:	movsxd	rdx, dword ptr [rip + 0x216c60]
0x3458:	movzx	ecx, byte ptr [rsp + 0x1e]
0x345d:	mov	edi, r12d
0x3460:	mov	r8, r15
0x3463:	sub	edi, edx
0x3465:	lea	rsi, [rbp + rdx*8]
0x346a:	mov	rdx, qword ptr [rsp]
0x346e:	call	0x47e0


0x3473:	xor	eax, 1
0x3476:	mov	rcx, qword ptr [rsp + 0x118]
0x347e:	xor	rcx, qword ptr fs:[0x28]
0x3487:	movzx	eax, al
0x348a:	jne	0x361a


0x3490:	add	rsp, 0x128
0x3497:	pop	rbx
0x3498:	pop	rbp
0x3499:	pop	r12
0x349b:	pop	r13
0x349d:	pop	r14
0x349f:	pop	r15
0x34a1:	ret	


0x361a:	call	0x2930


0x3648:	mov	rdi, qword ptr [rsp + 0x20]
0x364d:	mov	dword ptr [rax], 0x5f
0x3653:	mov	rbx, rax
0x3656:	call	0xed80


0x35b3:	xor	esi, esi
0x35b5:	mov	rdx, rax
0x35b8:	mov	edi, 1
0x35bd:	xor	eax, eax
0x35bf:	call	0x2cb0


0x35c4:	xor	edi, edi
0x35c6:	call	0x4220


0x3632:	xor	esi, esi
0x3634:	mov	rdx, rax
0x3637:	mov	edi, 1
0x363c:	xor	eax, eax
0x363e:	call	0x2cb0


0x3535:	xor	esi, esi
0x3537:	mov	rdx, rax
0x353a:	mov	edi, 1
0x353f:	xor	eax, eax
0x3541:	call	0x2cb0


0x33df:	mov	rsi, qword ptr [rsp + 8]
0x33e4:	mov	rdi, rax
0x33e7:	call	0xb200


0x35de:	xor	esi, esi
0x35e0:	mov	rdx, rax
0x35e3:	xor	edi, edi
0x35e5:	xor	eax, eax
0x35e7:	call	0x2cb0


0xf44d:	mov	rdi, qword ptr [rbp - 0x10]
0xf451:	sub	rax, r14
0xf454:	lea	rbx, [rbx + rax + 1]
0xf459:	call	0x2e10


0xf45e:	cmp	r12, rbp
0xf461:	jne	0xf438


0xf463:	add	rbx, r13
0xf466:	jmp	0xf3de


0xf438:	mov	rsi, qword ptr [rbp]
0xf43c:	lea	r14, [r13 + rbx]
0xf441:	add	rbp, 0x10
0xf445:	mov	rdi, r14
0xf448:	call	0x28c0


0xf3de:	mov	rdi, qword ptr [rsp + 0x10]
0xf3e3:	call	0x2e10


0x11c39:	test	ebp, ebp
0x11c3b:	mov	dword ptr [rsp + 0x10], eax
0x11c3f:	lea	rcx, [r13 + r14]
0x11c44:	mov	esi, ebp
0x11c46:	je	0x11c5c


0x11c5c:	add	rbp, r14
0x11c5f:	cmp	rbp, 0x7ff
0x11c66:	ja	0x11ba5


0x11c48:	xor	eax, eax
0x11c4a:	mov	edx, eax
0x11c4c:	add	eax, 1
0x11c4f:	movzx	edi, byte ptr [r12 + rdx]
0x11c54:	cmp	eax, esi
0x11c56:	mov	byte ptr [rcx + rdx], dil
0x11c5a:	jb	0x11c4a


0x11c6c:	call	0x2b90


0x11c4a:	mov	edx, eax
0x11c4c:	add	eax, 1
0x11c4f:	movzx	edi, byte ptr [r12 + rdx]
0x11c54:	cmp	eax, esi
0x11c56:	mov	byte ptr [rcx + rdx], dil
0x11c5a:	jb	0x11c4a


0x2b90:	jmp	qword ptr [rip + 0x2172f2]




0x11c71:	mov	dword ptr [rsp + 0x10], eax
0x11c75:	mov	eax, 0x800
0x11c7a:	mov	edx, 4
0x11c7f:	sub	rax, rbp
0x11c82:	lea	rcx, [r13 + rbp]
0x11c87:	cmp	rax, 4
0x11c8b:	cmova	rax, rdx
0x11c8f:	test	eax, eax
0x11c91:	mov	esi, eax
0x11c93:	je	0x11ba5


0x11c99:	xor	eax, eax
0x11c9b:	mov	edx, eax
0x11c9d:	add	eax, 1
0x11ca0:	movzx	edi, byte ptr [r12 + rdx]
0x11ca5:	cmp	eax, esi
0x11ca7:	mov	byte ptr [rcx + rdx], dil
0x11cab:	jb	0x11c9b


0x11c9b:	mov	edx, eax
0x11c9d:	add	eax, 1
0x11ca0:	movzx	edi, byte ptr [r12 + rdx]
0x11ca5:	cmp	eax, esi
0x11ca7:	mov	byte ptr [rcx + rdx], dil
0x11cab:	jb	0x11c9b


0x11cad:	jmp	0x11ba5


0xb46a:	mov	esi, dword ptr [rbx]
0xb46c:	lea	rdx, [rip + 0x9da0]
0xb473:	mov	rcx, rax
0xb476:	mov	r8, rbp
0xb479:	xor	edi, edi
0xb47b:	xor	eax, eax
0xb47d:	call	0x2cb0


0xb35a:	mov	esi, dword ptr [rbp]
0xb35d:	lea	rdx, [rip + 0x9eaf]
0xb364:	mov	rcx, rax
0xb367:	mov	r8, r12
0xb36a:	xor	edi, edi
0xb36c:	xor	eax, eax
0xb36e:	call	0x2cb0


0xa8d3:	mov	rdx, r12
0xa8d6:	mov	rbp, rax
0xa8d9:	mov	esi, 8
0xa8de:	xor	edi, edi
0xa8e0:	call	0xe990


0xaa93:	mov	rdx, r15
0xaa96:	mov	rsi, rbp
0xaa99:	mov	rdi, rbx
0xaa9c:	call	0xa920


0xaaa1:	call	r13


0xe52c:	add	rsp, 0x20
0xe530:	mov	r11, qword ptr [rsp + 0x10]
0xe535:	cmp	r11, rax
0xe538:	ja	0xe5a1


0xe53a:	lea	rsi, [rax + 1]
0xe53e:	lea	rax, [rip + 0x20c07b]
0xe545:	cmp	r12, rax
0xe548:	mov	qword ptr [rbx], rsi
0xe54b:	je	0xe55f


0xe5a1:	mov	eax, dword ptr [rsp + 0x18]
0xe5a5:	mov	dword ptr [r13], eax
0xe5a9:	add	rsp, 0x28
0xe5ad:	mov	rax, r12
0xe5b0:	pop	rbx
0xe5b1:	pop	rbp
0xe5b2:	pop	r12
0xe5b4:	pop	r13
0xe5b6:	pop	r14
0xe5b8:	pop	r15
0xe5ba:	ret	


0xe55f:	mov	rdi, rsi
0xe562:	mov	qword ptr [rsp + 0x10], rsi
0xe567:	call	0x11020


0xe54d:	mov	rdi, r12
0xe550:	mov	qword ptr [rsp + 0x10], rsi
0xe555:	call	0x2e10


0xe55a:	mov	rsi, qword ptr [rsp + 0x10]
0xe55f:	mov	rdi, rsi
0xe562:	mov	qword ptr [rsp + 0x10], rsi
0xe567:	call	0x11020


0xe56c:	sub	rsp, 8
0xe570:	mov	qword ptr [rbx + 8], rax
0xe574:	mov	r8d, dword ptr [rbp]
0xe578:	push	qword ptr [rbp + 0x30]
0xe57b:	push	qword ptr [rbp + 0x28]
0xe57e:	mov	rcx, r14
0xe581:	push	r15
0xe583:	mov	r9d, dword ptr [rsp + 0x3c]
0xe588:	mov	rdi, rax
0xe58b:	mov	rdx, qword ptr [rsp + 0x28]
0xe590:	mov	rsi, qword ptr [rsp + 0x30]
0xe595:	mov	r12, rax
0xe598:	call	0xd200


0xecb2:	mov	rdi, qword ptr [rsp + 0x38]
0xecb7:	xor	rdi, qword ptr fs:[0x28]
0xecc0:	jne	0xeccc


0xecc2:	add	rsp, 0x48
0xecc6:	ret	


0xeccc:	call	0x2930


0xe9ff:	mov	rcx, qword ptr [rsp + 0x38]
0xea04:	xor	rcx, qword ptr fs:[0x28]
0xea0d:	jne	0xea19


0xea0f:	add	rsp, 0x48
0xea13:	ret	


0xea19:	call	0x2930


0xa8e5:	mov	r8, rbp
0xa8e8:	mov	rdx, rbx
0xa8eb:	mov	rcx, rax
0xa8ee:	pop	rbx
0xa8ef:	pop	rbp
0xa8f0:	pop	r12
0xa8f2:	xor	esi, esi
0xa8f4:	xor	edi, edi
0xa8f6:	xor	eax, eax
0xa8f8:	jmp	0x2cb0


0x83c0:	mov	rdx, qword ptr [rbp - 0x308]
0x83c7:	mov	r12, rax
0x83ca:	mov	esi, 4
0x83cf:	xor	edi, edi
0x83d1:	call	0xe990


0x83d6:	mov	r8, r12
0x83d9:	mov	rcx, rax
0x83dc:	mov	rdx, rbx
0x83df:	xor	esi, esi
0x83e1:	xor	edi, edi
0x83e3:	xor	eax, eax
0x83e5:	call	0x2cb0


0x83ea:	xor	r12d, r12d
0x83ed:	jmp	0x62c6


0x5723:	lea	rsi, [rip + 0xf10e]
0x572a:	mov	edx, 5
0x572f:	xor	edi, edi
0x5731:	mov	rbp, rax
0x5734:	call	0x28e0


0x5739:	mov	esi, dword ptr [rbx]
0x573b:	mov	rcx, rbp
0x573e:	mov	rdx, rax
0x5741:	xor	edi, edi
0x5743:	xor	eax, eax
0x5745:	call	0x2cb0


0x574a:	pop	rbx
0x574b:	xor	eax, eax
0x574d:	pop	rbp
0x574e:	pop	r12
0x5750:	ret	


0x74d4:	mov	rdx, qword ptr [rbp - 0x310]
0x74db:	mov	esi, 4
0x74e0:	xor	edi, edi
0x74e2:	mov	r12, rax
0x74e5:	call	0xe990


0x74ea:	lea	rsi, [rip + 0xd61f]
0x74f1:	mov	rbx, rax
0x74f4:	mov	edx, 5
0x74f9:	xor	edi, edi
0x74fb:	call	0x28e0


0x7500:	mov	r8, r12
0x7503:	mov	rcx, rbx
0x7506:	mov	rdx, rax
0x7509:	mov	esi, dword ptr [r14]
0x750c:	jmp	0x6c36


0x6c36:	xor	edi, edi
0x6c38:	xor	eax, eax
0x6c3a:	call	0x2cb0


0x6c3f:	mov	rsi, qword ptr [rbp - 0x280]
0x6c46:	mov	rdi, qword ptr [rbp - 0x278]
0x6c4d:	call	0x9d50


0x9804:	mov	rdx, qword ptr [rbp - 0x308]
0x980b:	mov	esi, 4
0x9810:	xor	edi, edi
0x9812:	mov	r12, rax
0x9815:	call	0xe990


0x981a:	lea	rsi, [rip + 0xb70a]
0x9821:	mov	edx, 5
0x9826:	xor	edi, edi
0x9828:	mov	qword ptr [rbp - 0x338], rax
0x982f:	call	0x28e0


0x9834:	mov	qword ptr [rbp - 0x330], rax
0x983b:	call	0x2770


0x9840:	mov	rcx, qword ptr [rbp - 0x338]
0x9847:	mov	esi, dword ptr [rax]
0x9849:	mov	r8, r12
0x984c:	mov	rdx, qword ptr [rbp - 0x330]
0x9853:	xor	edi, edi
0x9855:	xor	eax, eax
0x9857:	call	0x2cb0


0x985c:	xor	r8d, r8d
0x985f:	mov	qword ptr [rbp - 0x330], 0
0x986a:	jmp	0x8d15


0x7096:	mov	rdx, qword ptr [rbp - 0x310]
0x709d:	mov	esi, 4
0x70a2:	xor	edi, edi
0x70a4:	mov	r12, rax
0x70a7:	call	0xe990


0x70ac:	lea	rsi, [rip + 0xdd89]
0x70b3:	mov	rbx, rax
0x70b6:	mov	edx, 5
0x70bb:	xor	edi, edi
0x70bd:	call	0x28e0


0x70c2:	mov	r8, r12
0x70c5:	mov	rdx, rax
0x70c8:	mov	rcx, rbx
0x70cb:	xor	esi, esi
0x70cd:	xor	edi, edi
0x70cf:	xor	eax, eax
0x70d1:	call	0x2cb0


0x70d6:	jmp	0x5d90


0x6a6f:	mov	rdx, qword ptr [rbp - 0x350]
0x6a76:	xor	edi, edi
0x6a78:	mov	esi, 4
0x6a7d:	mov	r12, rax
0x6a80:	call	0xe990


0x6a85:	lea	rsi, [rip + 0xe5a6]
0x6a8c:	mov	rbx, rax
0x6a8f:	xor	edi, edi
0x6a91:	mov	edx, 5
0x6a96:	call	0x28e0


0x6a9b:	mov	rcx, r12
0x6a9e:	mov	rsi, rax
0x6aa1:	mov	rdx, rbx
0x6aa4:	mov	edi, 1
0x6aa9:	xor	eax, eax
0x6aab:	call	0x2c60


0x6ab0:	jmp	0x5d90


0x4faa:	mov	rdx, r12
0x4fad:	mov	esi, 4
0x4fb2:	xor	edi, edi
0x4fb4:	mov	r13, rax
0x4fb7:	call	0xe990


0x4fbc:	lea	rsi, [rip + 0xf7bd]
0x4fc3:	mov	rbp, rax
0x4fc6:	mov	edx, 5
0x4fcb:	xor	edi, edi
0x4fcd:	call	0x28e0


0x4fd2:	mov	r8, r13
0x4fd5:	mov	rcx, rbp
0x4fd8:	mov	rdx, rax
0x4fdb:	mov	esi, ebx
0x4fdd:	xor	eax, eax
0x4fdf:	xor	edi, edi
0x4fe1:	call	0x2cb0


0x4fe6:	xor	ebx, ebx
0x4fe8:	add	rsp, 8
0x4fec:	mov	eax, ebx
0x4fee:	pop	rbx
0x4fef:	pop	rbp
0x4ff0:	pop	r12
0x4ff2:	pop	r13
0x4ff4:	ret	


0x5e83:	mov	rdx, qword ptr [rbp - 0x310]
0x5e8a:	xor	edi, edi
0x5e8c:	mov	esi, 4
0x5e91:	mov	r13, rax
0x5e94:	call	0xe990


0x5e99:	lea	rsi, [rip + 0xeb70]
0x5ea0:	mov	rbx, rax
0x5ea3:	xor	edi, edi
0x5ea5:	mov	edx, 5
0x5eaa:	call	0x28e0


0x5eaf:	mov	r8, r13
0x5eb2:	mov	rdx, rax
0x5eb5:	mov	rcx, rbx
0x5eb8:	xor	esi, esi
0x5eba:	xor	edi, edi
0x5ebc:	xor	eax, eax
0x5ebe:	call	0x2cb0


0x5ec3:	jmp	0x62c6


0x85ab:	mov	rdx, qword ptr [rbp - 0x308]
0x85b2:	mov	esi, 4
0x85b7:	xor	edi, edi
0x85b9:	mov	r12, rax
0x85bc:	call	0xe990


0x85c1:	mov	edx, 5
0x85c6:	mov	rbx, rax
0x85c9:	lea	rsi, [rip + 0xc330]
0x85d0:	jmp	0x70bb


0x70bb:	xor	edi, edi
0x70bd:	call	0x28e0


0x69ca:	mov	rdx, qword ptr [rbp - 0x308]
0x69d1:	mov	esi, 4
0x69d6:	xor	edi, edi
0x69d8:	mov	r13, rax
0x69db:	call	0xe990


0x69e0:	lea	rsi, [rip + 0xe169]
0x69e7:	mov	r14, rax
0x69ea:	mov	edx, 5
0x69ef:	xor	edi, edi
0x69f1:	call	0x28e0


0x69f6:	mov	r8, r13
0x69f9:	mov	rdx, rax
0x69fc:	mov	rcx, r14
0x69ff:	mov	esi, r12d
0x6a02:	xor	edi, edi
0x6a04:	xor	eax, eax
0x6a06:	call	0x2cb0


0x6bfe:	mov	rdx, qword ptr [rbp - 0x310]
0x6c05:	mov	esi, 4
0x6c0a:	xor	edi, edi
0x6c0c:	mov	r12, rax
0x6c0f:	call	0xe990


0x6c14:	lea	rsi, [rip + 0xe268]
0x6c1b:	mov	rbx, rax
0x6c1e:	mov	edx, 5
0x6c23:	xor	edi, edi
0x6c25:	call	0x28e0


0x6c2a:	mov	r8, r12
0x6c2d:	mov	rcx, rbx
0x6c30:	mov	rdx, rax
0x6c33:	mov	esi, r15d
0x6c36:	xor	edi, edi
0x6c38:	xor	eax, eax
0x6c3a:	call	0x2cb0


0x7e11:	mov	rdx, qword ptr [rbp - 0x308]
0x7e18:	mov	esi, 4
0x7e1d:	xor	edi, edi
0x7e1f:	mov	r12, rax
0x7e22:	call	0xe990


0x7e27:	mov	edx, 5
0x7e2c:	mov	rbx, rax
0x7e2f:	lea	rsi, [rip + 0xca92]
0x7e36:	jmp	0x70bb


0x7446:	mov	rdx, qword ptr [rip + 0x213123]
0x744d:	mov	esi, 4
0x7452:	xor	edi, edi
0x7454:	mov	r12, rax
0x7457:	call	0xe990


0x745c:	lea	rsi, [rip + 0xd67d]
0x7463:	mov	rbx, rax
0x7466:	mov	edx, 5
0x746b:	xor	edi, edi
0x746d:	call	0x28e0


0x7472:	mov	r8, r12
0x7475:	mov	rdx, rax
0x7478:	mov	rcx, rbx
0x747b:	xor	eax, eax
0x747d:	xor	esi, esi
0x747f:	xor	edi, edi
0x7481:	call	0x2cb0


0x7486:	mov	rax, qword ptr [rbp - 0x340]
0x748d:	mov	r12d, 1
0x7493:	mov	byte ptr [rax], 1
0x7496:	jmp	0x62c6


0x4e4c:	xor	edi, edi
0x4e4e:	mov	rdx, r12
0x4e51:	mov	esi, 4
0x4e56:	mov	rbp, rax
0x4e59:	call	0xe990


0x4e5e:	lea	rsi, [rip + 0xff04]
0x4e65:	mov	rdx, rax
0x4e68:	mov	rcx, rbp
0x4e6b:	xor	eax, eax
0x4e6d:	mov	edi, 1
0x4e72:	call	0x2c60


0x4e77:	test	rbx, rbx
0x4e7a:	je	0x4eb1


0x4eb1:	mov	rdi, qword ptr [rip + 0x2151f0]
0x4eb8:	mov	rax, qword ptr [rdi + 0x28]
0x4ebc:	cmp	rax, qword ptr [rdi + 0x30]
0x4ec0:	jae	0x4ed8


0x4e7c:	mov	rsi, rbx
0x4e7f:	mov	edi, 4
0x4e84:	call	0xeab0


0x4ec2:	lea	rdx, [rax + 1]
0x4ec6:	mov	qword ptr [rdi + 0x28], rdx
0x4eca:	mov	byte ptr [rax], 0xa
0x4ecd:	pop	rbx
0x4ece:	pop	rbp
0x4ecf:	pop	r12
0x4ed1:	ret	


0x4ed8:	pop	rbx
0x4ed9:	pop	rbp
0x4eda:	pop	r12
0x4edc:	mov	esi, 0xa
0x4ee1:	jmp	0x2990


0x7dec:	mov	dword ptr [rbp - 0x320], 1
0x7df6:	jmp	0x5f30


0x6e4c:	jmp	0x6294


0x8642:	jmp	0x77c8


0x64c0:	jmp	0x5ee0


0xea8b:	mov	rdx, qword ptr [rsp + 0x38]
0xea90:	xor	rdx, qword ptr fs:[0x28]
0xea99:	jne	0xeaa5


0xea9b:	add	rsp, 0x48
0xea9f:	ret	


0xeaa5:	call	0x2930


0xec1f:	mov	rcx, qword ptr [rsp + 0x38]
0xec24:	xor	rcx, qword ptr fs:[0x28]
0xec2d:	jne	0xec39


0xec2f:	add	rsp, 0x48
0xec33:	ret	


0xec39:	call	0x2930


0x9974:	lea	rsi, [rip + 0xb5cb]
0x997b:	mov	r12, rax
0x997e:	mov	edx, 5
0x9983:	xor	edi, edi
0x9985:	call	0x28e0


0x998a:	mov	qword ptr [rbp - 0x338], rax
0x9991:	call	0x2770


0x9996:	mov	rdx, qword ptr [rbp - 0x338]
0x999d:	mov	esi, dword ptr [rax]
0x999f:	mov	rcx, r12
0x99a2:	xor	edi, edi
0x99a4:	xor	eax, eax
0x99a6:	call	0x2cb0


0x99ab:	jmp	0x8d06


0x8d06:	mov	rdi, qword ptr [rbp - 0x2c8]
0x8d0d:	call	0x2e10


0x99c3:	mov	edx, 5
0x99c8:	mov	r12, rax
0x99cb:	lea	rsi, [rip + 0xb206]
0x99d2:	jmp	0x961a


0x961a:	xor	edi, edi
0x961c:	call	0x28e0


0x9621:	mov	qword ptr [rbp - 0x338], rax
0x9628:	call	0x2770


0x962d:	mov	rdx, qword ptr [rbp - 0x338]
0x9634:	mov	esi, dword ptr [rax]
0x9636:	mov	rcx, r12
0x9639:	xor	edi, edi
0x963b:	xor	eax, eax
0x963d:	call	0x2cb0


0x9642:	jmp	0x8d12


0x7cbf:	mov	edx, 5
0x7cc4:	mov	r12, rax
0x7cc7:	lea	rsi, [rip + 0xcf52]
0x7cce:	jmp	0x6628


0x6628:	xor	edi, edi
0x662a:	call	0x28e0


0x662f:	mov	rcx, r12
0x6632:	mov	rdx, rax
0x6635:	xor	esi, esi
0x6637:	xor	edi, edi
0x6639:	xor	eax, eax
0x663b:	call	0x2cb0


0x6640:	jmp	0x6a10


0x8002:	mov	rdx, qword ptr [rbp - 0x310]
0x8009:	mov	esi, 3
0x800e:	xor	edi, edi
0x8010:	mov	r12, rax
0x8013:	call	0xebb0


0x8018:	mov	edx, 5
0x801d:	mov	rbx, rax
0x8020:	lea	rsi, [rip + 0xc941]
0x8027:	jmp	0x70bb


0xeb4e:	mov	rsi, qword ptr [rsp + 0x38]
0xeb53:	xor	rsi, qword ptr fs:[0x28]
0xeb5c:	jne	0xeb63


0xeb5e:	add	rsp, 0x48
0xeb62:	ret	


0xeb63:	call	0x2930


0x4e89:	lea	rsi, [rip + 0xfee2]
0x4e90:	mov	rbx, rax
0x4e93:	mov	edx, 5
0x4e98:	xor	edi, edi
0x4e9a:	call	0x28e0


0x4e9f:	mov	rdx, rbx
0x4ea2:	mov	rsi, rax
0x4ea5:	mov	edi, 1
0x4eaa:	xor	eax, eax
0x4eac:	call	0x2c60


0x971a:	mov	edx, 5
0x971f:	mov	r12, rax
0x9722:	lea	rsi, [rip + 0xb686]
0x9729:	jmp	0x961a


0x8473:	mov	edx, 5
0x8478:	mov	r13, rax
0x847b:	lea	rsi, [rip + 0xcb32]
0x8482:	jmp	0x6f5f


0x6f5f:	xor	edi, edi
0x6f61:	call	0x28e0


0x6f66:	mov	r12, rax
0x6f69:	call	0x2770


0x6f6e:	mov	esi, dword ptr [rax]
0x6f70:	mov	rcx, r13
0x6f73:	mov	rdx, r12
0x6f76:	xor	edi, edi
0x6f78:	xor	eax, eax
0x6f7a:	call	0x2cb0


0x6f7f:	jmp	0x6a10


0x8658:	lea	rsi, [rip + 0xc942]
0x865f:	xor	edi, edi
0x8661:	mov	edx, 5
0x8666:	mov	r12, rax
0x8669:	call	0x28e0


0x866e:	mov	r13, rax
0x8671:	call	0x2770


0x8676:	mov	esi, dword ptr [rax]
0x8678:	xor	edi, edi
0x867a:	mov	rcx, r12
0x867d:	mov	rdx, r13
0x8680:	xor	eax, eax
0x8682:	call	0x2cb0


0x8687:	mov	rdi, qword ptr [rbp - 0x330]
0x868e:	call	0x2e10


0x8693:	jmp	0x6a10


0x8d48:	lea	rsi, [rip + 0xc252]
0x8d4f:	mov	edx, 5
0x8d54:	xor	edi, edi
0x8d56:	mov	r12, rax
0x8d59:	call	0x28e0


0x8d5e:	mov	qword ptr [rbp - 0x328], rax
0x8d65:	call	0x2770


0x8d6a:	mov	rdx, qword ptr [rbp - 0x328]
0x8d71:	mov	esi, dword ptr [rax]
0x8d73:	mov	rcx, r12
0x8d76:	xor	edi, edi
0x8d78:	xor	eax, eax
0x8d7a:	call	0x2cb0


0x8d7f:	xor	r8d, r8d
0x8d82:	jmp	0x7bd8


0x960b:	lea	rsi, [rip + 0xb945]
0x9612:	mov	r12, rax
0x9615:	mov	edx, 5
0x961a:	xor	edi, edi
0x961c:	call	0x28e0


0x9b4e:	mov	edx, 5
0x9b53:	mov	r12, rax
0x9b56:	lea	rsi, [rip + 0xb242]
0x9b5d:	jmp	0x9983


0x9983:	xor	edi, edi
0x9985:	call	0x28e0


0x3de4:	lea	rsi, [rip + 0xf2a5]
0x3deb:	mov	edx, 5
0x3df0:	xor	edi, edi
0x3df2:	mov	rbx, rax
0x3df5:	call	0x28e0


0x3dfa:	mov	r8d, dword ptr [rbp - 0x170]
0x3e01:	mov	rdx, rax
0x3e04:	mov	rcx, rbx
0x3e07:	xor	eax, eax
0x3e09:	xor	edi, edi
0x3e0b:	mov	esi, r8d
0x3e0e:	call	0x2cb0


0x3e13:	xor	eax, eax
0x3e15:	jmp	0x3ea1


0x3faa:	mov	edx, 5
0x3faf:	mov	r12, rax
0x3fb2:	lea	rsi, [rip + 0xe971]
0x3fb9:	jmp	0x3f50


0x3f50:	xor	edi, edi
0x3f52:	call	0x28e0


0x3f57:	mov	rbx, rax
0x3f5a:	call	0x2770


0x3f5f:	mov	esi, dword ptr [rax]
0x3f61:	mov	rcx, r12
0x3f64:	xor	eax, eax
0x3f66:	mov	rdx, rbx
0x3f69:	xor	edi, edi
0x3f6b:	call	0x2cb0


0x3f70:	xor	eax, eax
0x3f72:	jmp	0x3ea1


0x3f8c:	mov	edx, 5
0x3f91:	mov	r12, rax
0x3f94:	lea	rsi, [rip + 0xf0f5]
0x3f9b:	jmp	0x3f50


0x3f41:	lea	rsi, [rip + 0xe9c9]
0x3f48:	mov	r12, rax
0x3f4b:	mov	edx, 5
0x3f50:	xor	edi, edi
0x3f52:	call	0x28e0


0x3ed0:	lea	rsi, [rip + 0xf1d9]
0x3ed7:	mov	rbx, rax
0x3eda:	mov	edx, 5
0x3edf:	xor	edi, edi
0x3ee1:	call	0x28e0


0x3ee6:	mov	rcx, rbx
0x3ee9:	mov	rdx, rax
0x3eec:	xor	esi, esi
0x3eee:	xor	eax, eax
0x3ef0:	xor	edi, edi
0x3ef2:	call	0x2cb0


0x3ef7:	xor	eax, eax
0x3ef9:	jmp	0x3ea1


0x86a9:	lea	rsi, [rip + 0xc821]
0x86b0:	mov	edx, 5
0x86b5:	xor	edi, edi
0x86b7:	mov	r12, rax
0x86ba:	call	0x28e0


0x86bf:	mov	r15, rax
0x86c2:	call	0x2770


0x86c7:	mov	esi, dword ptr [rax]
0x86c9:	mov	rcx, r12
0x86cc:	mov	rdx, r15
0x86cf:	xor	edi, edi
0x86d1:	xor	eax, eax
0x86d3:	xor	r12d, r12d
0x86d6:	call	0x2cb0


0x86db:	jmp	0x79c3


0x59a3:	lea	rsi, [rip + 0xf451]
0x59aa:	xor	edi, edi
0x59ac:	mov	edx, 5
0x59b1:	mov	r12, rax
0x59b4:	call	0x28e0


0x59b9:	mov	esi, dword ptr [rbx]
0x59bb:	mov	rdx, rax
0x59be:	mov	rcx, r12
0x59c1:	xor	edi, edi
0x59c3:	xor	eax, eax
0x59c5:	call	0x2cb0


0x59ca:	jmp	0x5a0c


0x40c8:	lea	rsi, [rip + 0xf009]
0x40cf:	mov	edx, 5
0x40d4:	xor	edi, edi
0x40d6:	mov	r12, rax
0x40d9:	call	0x28e0


0x40de:	mov	rbx, rax
0x40e1:	call	0x2770


0x40e6:	mov	esi, dword ptr [rax]
0x40e8:	mov	rcx, r12
0x40eb:	mov	rdx, rbx
0x40ee:	xor	edi, edi
0x40f0:	xor	eax, eax
0x40f2:	call	0x2cb0


0x40f7:	jmp	0x41d6


0x4204:	mov	edx, 5
0x4209:	mov	r12, rax
0x420c:	lea	rsi, [rip + 0xeee5]
0x4213:	jmp	0x41a7


0x41a7:	xor	edi, edi
0x41a9:	call	0x28e0


0x41ae:	mov	rbx, rax
0x41b1:	call	0x2770


0x41b6:	mov	esi, dword ptr [rax]
0x41b8:	mov	rcx, r12
0x41bb:	mov	rdx, rbx
0x41be:	xor	edi, edi
0x41c0:	xor	eax, eax
0x41c2:	call	0x2cb0


0x41c7:	jmp	0x41d6


0x4198:	lea	rsi, [rip + 0xef81]
0x419f:	mov	r12, rax
0x41a2:	mov	edx, 5
0x41a7:	xor	edi, edi
0x41a9:	call	0x28e0


0x8753:	lea	rsi, [rip + 0xc506]
0x875a:	xor	edi, edi
0x875c:	mov	edx, 5
0x8761:	mov	r12, rax
0x8764:	call	0x28e0


0x8769:	mov	esi, dword ptr [rbp - 0x320]
0x876f:	mov	rdx, rax
0x8772:	mov	rcx, r12
0x8775:	xor	edi, edi
0x8777:	xor	eax, eax
0x8779:	call	0x2cb0


0x877e:	jmp	0x6a10


0x8f54:	mov	edx, 5
0x8f59:	mov	r13, rax
0x8f5c:	lea	rsi, [rip + 0xc085]
0x8f63:	jmp	0x6f5f


0x59dd:	lea	rsi, [rip + 0xd714]
0x59e4:	mov	edx, 5
0x59e9:	xor	edi, edi
0x59eb:	mov	r12, rax
0x59ee:	call	0x28e0


0x59f3:	mov	rbx, rax
0x59f6:	call	0x2770


0x59fb:	mov	esi, dword ptr [rax]
0x59fd:	mov	rcx, r12
0x5a00:	mov	rdx, rbx
0x5a03:	xor	edi, edi
0x5a05:	xor	eax, eax
0x5a07:	call	0x2cb0


0x565a:	lea	rsi, [rip + 0xf1af]
0x5661:	mov	edx, 5
0x5666:	xor	edi, edi
0x5668:	mov	rbx, rax
0x566b:	call	0x28e0


0x5670:	mov	esi, dword ptr [r12]
0x5674:	mov	rcx, rbx
0x5677:	mov	rdx, rax
0x567a:	xor	edi, edi
0x567c:	xor	eax, eax
0x567e:	call	0x2cb0


0x5683:	movzx	ebx, byte ptr [rbp + 0x26]
0x5687:	add	rsp, 8
0x568b:	xor	ebx, 1
0x568e:	mov	eax, ebx
0x5690:	pop	rbx
0x5691:	pop	rbp
0x5692:	pop	r12
0x5694:	pop	r13
0x5696:	ret	


0x7ea5:	lea	rsi, [rip + 0xcfbd]
0x7eac:	xor	edi, edi
0x7eae:	mov	edx, 5
0x7eb3:	mov	rbx, rax
0x7eb6:	call	0x28e0


0x7ebb:	mov	esi, dword ptr [r15]
0x7ebe:	mov	rdx, rax
0x7ec1:	mov	rcx, rbx
0x7ec4:	xor	edi, edi
0x7ec6:	xor	eax, eax
0x7ec8:	call	0x2cb0


0x7ecd:	jmp	0x62c6


0x68f5:	lea	rsi, [rip + 0xe51b]
0x68fc:	mov	edx, 5
0x6901:	xor	edi, edi
0x6903:	mov	rbx, rax
0x6906:	call	0x28e0


0x690b:	mov	r9, qword ptr [rbp - 0x310]
0x6912:	mov	rdx, rax
0x6915:	mov	rcx, rbx
0x6918:	xor	edi, edi
0x691a:	xor	eax, eax
0x691c:	mov	esi, dword ptr [r9]
0x691f:	call	0x2cb0


0x6924:	jmp	0x62c6


0x52ee:	lea	rsi, [rip + 0xfad0]
0x52f5:	mov	edx, 5
0x52fa:	xor	edi, edi
0x52fc:	mov	rbp, rax
0x52ff:	call	0x28e0


0x5304:	mov	esi, dword ptr [rbx]
0x5306:	mov	rdx, rax
0x5309:	mov	rcx, rbp
0x530c:	xor	edi, edi
0x530e:	xor	eax, eax
0x5310:	call	0x2cb0


0x9a9f:	lea	rsi, [rip + 0xb10a]
0x9aa6:	mov	r12, rax
0x9aa9:	mov	edx, 5
0x9aae:	xor	edi, edi
0x9ab0:	call	0x28e0


0x9ab5:	mov	rcx, r12
0x9ab8:	mov	rdx, rax
0x9abb:	xor	esi, esi
0x9abd:	xor	edi, edi
0x9abf:	xor	eax, eax
0x9ac1:	call	0x2cb0


0x9ac6:	mov	qword ptr [rbp - 0x330], 0
0x9ad1:	movzx	r8d, byte ptr [rbp - 0x328]
0x9ad9:	jmp	0x7bd8


0x8ef6:	lea	rsi, [rip + 0xc010]
0x8efd:	mov	edx, 5
0x8f02:	xor	edi, edi
0x8f04:	mov	r12, rax
0x8f07:	call	0x28e0


0x8f0c:	mov	r8d, dword ptr [rbp - 0x328]
0x8f13:	mov	rdx, rax
0x8f16:	mov	rcx, r12
0x8f19:	xor	edi, edi
0x8f1b:	xor	eax, eax
0x8f1d:	mov	esi, r8d
0x8f20:	call	0x2cb0


0x8f25:	movzx	r9d, byte ptr [rbp - 0x330]
0x8f2d:	xor	r8d, r8d
0x8f30:	mov	qword ptr [rbp - 0x330], 0
0x8f3b:	mov	r14d, r9d
0x8f3e:	jmp	0x7bd8


0x94b0:	lea	rsi, [rip + 0xbab4]
0x94b7:	xor	edi, edi
0x94b9:	mov	edx, 5
0x94be:	mov	r12, rax
0x94c1:	call	0x28e0


0x94c6:	mov	qword ptr [rbp - 0x338], rax
0x94cd:	call	0x2770


0x94d2:	mov	rdx, qword ptr [rbp - 0x338]
0x94d9:	mov	esi, dword ptr [rax]
0x94db:	xor	edi, edi
0x94dd:	xor	eax, eax
0x94df:	mov	rcx, r12
0x94e2:	call	0x2cb0


0x94e7:	cmp	byte ptr [rbx + 0x24], 0
0x94eb:	je	0x9044


0x94f1:	jmp	0x8d12


0x9150:	lea	rsi, [rip + 0xbe2c]
0x9157:	mov	edx, 5
0x915c:	xor	edi, edi
0x915e:	mov	r12, rax
0x9161:	call	0x28e0


0x9166:	mov	qword ptr [rbp - 0x338], rax
0x916d:	call	0x2770


0x9172:	mov	rdx, qword ptr [rbp - 0x338]
0x9179:	mov	esi, dword ptr [rax]
0x917b:	mov	rcx, r12
0x917e:	xor	edi, edi
0x9180:	xor	eax, eax
0x9182:	call	0x2cb0


0x9507:	lea	rsi, [rip + 0xb9ef]
0x950e:	mov	edx, 5
0x9513:	xor	edi, edi
0x9515:	mov	r12, rax
0x9518:	call	0x28e0


0x951d:	mov	qword ptr [rbp - 0x330], rax
0x9524:	call	0x2770


0x9529:	mov	rdx, qword ptr [rbp - 0x330]
0x9530:	mov	esi, dword ptr [rax]
0x9532:	mov	rcx, r12
0x9535:	xor	edi, edi
0x9537:	xor	eax, eax
0x9539:	call	0x2cb0


0x953e:	xor	r8d, r8d
0x9541:	mov	qword ptr [rbp - 0x330], 0
0x954c:	jmp	0x8d15


0x8deb:	lea	rsi, [rip + 0xbf8e]
0x8df2:	mov	r12, rax
0x8df5:	mov	edx, 5
0x8dfa:	xor	edi, edi
0x8dfc:	call	0x28e0


0x8e01:	mov	rdx, r12
0x8e04:	mov	rsi, rax
0x8e07:	mov	edi, 1
0x8e0c:	xor	eax, eax
0x8e0e:	call	0x2c60


0x9a17:	lea	rsi, [rip + 0xb44b]
0x9a1e:	mov	edx, 5
0x9a23:	xor	edi, edi
0x9a25:	mov	qword ptr [rbp - 0x328], rax
0x9a2c:	call	0x28e0


0x9a31:	mov	rcx, qword ptr [rbp - 0x328]
0x9a38:	mov	rdx, rax
0x9a3b:	mov	esi, dword ptr [r12]
0x9a3f:	jmp	0x7bc1


0x7bc1:	xor	edi, edi
0x7bc3:	xor	eax, eax
0x7bc5:	call	0x2cb0


0x7bca:	xor	r8d, r8d
0x7bcd:	mov	qword ptr [rbp - 0x330], 0
0x7bd8:	mov	edi, dword ptr [rbp - 0x320]
0x7bde:	mov	byte ptr [rbp - 0x328], r8b
0x7be5:	call	0x2a30


0x39c9:	lea	rsi, [rip + 0xef2d]
0x39d0:	mov	rbx, rax
0x39d3:	mov	edx, 5
0x39d8:	xor	edi, edi
0x39da:	call	0x28e0


0x39df:	mov	rcx, rbx
0x39e2:	mov	rdx, rax
0x39e5:	mov	esi, r12d
0x39e8:	mov	edi, 1
0x39ed:	xor	eax, eax
0x39ef:	call	0x2cb0


0x39f4:	nop	
0x39f6:	nop	word ptr cs:[rax + rax]


0x8794:	mov	edx, 5
0x8799:	mov	r13, rax
0x879c:	lea	rsi, [rip + 0xa187]
0x87a3:	jmp	0x6f5f


0x7799:	lea	rsi, [rip + 0xd71b]
0x77a0:	mov	r12, rax
0x77a3:	mov	edx, 5
0x77a8:	xor	edi, edi
0x77aa:	call	0x28e0


0x77af:	mov	rdx, r12
0x77b2:	mov	rsi, rax
0x77b5:	mov	edi, 1
0x77ba:	xor	eax, eax
0x77bc:	call	0x2c60


0x8136:	mov	edx, 5
0x813b:	mov	r13, rax
0x813e:	lea	rsi, [rip + 0xccd2]
0x8145:	jmp	0x6f5f


0x51b1:	lea	rsi, [rip + 0xfbf7]
0x51b8:	mov	rbp, rax
0x51bb:	mov	edx, 5
0x51c0:	xor	edi, edi
0x51c2:	call	0x28e0


0x51c7:	mov	rbx, rax
0x51ca:	call	0x2770


0x51cf:	mov	esi, dword ptr [rax]
0x51d1:	mov	rcx, rbp
0x51d4:	mov	rdx, rbx
0x51d7:	xor	eax, eax
0x51d9:	xor	edi, edi
0x51db:	call	0x2cb0


0x51e0:	add	rsp, 8
0x51e4:	xor	eax, eax
0x51e6:	pop	rbx
0x51e7:	pop	rbp
0x51e8:	pop	r12
0x51ea:	pop	r13
0x51ec:	ret	


0x51fd:	mov	edx, 5
0x5202:	mov	rbp, rax
0x5205:	lea	rsi, [rip + 0xfb93]
0x520c:	jmp	0x51c0


0x51c0:	xor	edi, edi
0x51c2:	call	0x28e0


0x4be6:	lea	rsi, [rip + 0xde2e]
0x4bed:	mov	rbx, rax
0x4bf0:	mov	edx, 5
0x4bf5:	xor	edi, edi
0x4bf7:	call	0x28e0


0x4bfc:	mov	rcx, rbx
0x4bff:	mov	rdx, rax
0x4c02:	xor	esi, esi
0x4c04:	mov	edi, 1
0x4c09:	xor	eax, eax
0x4c0b:	call	0x2cb0


0x6667:	cmp	byte ptr [rbx + 0x19], 0
0x666b:	mov	r13, rax
0x666e:	mov	edx, 5
0x6673:	jne	0x7410


0x6679:	lea	rsi, [rip + 0xe1e8]
0x6680:	xor	edi, edi
0x6682:	call	0x28e0


0x7410:	lea	rsi, [rip + 0xda0f]
0x7417:	xor	edi, edi
0x7419:	call	0x28e0


0x741e:	mov	rdx, rax
0x7421:	jmp	0x668a


0x668a:	mov	rcx, r13
0x668d:	xor	esi, esi
0x668f:	xor	edi, edi
0x6691:	xor	eax, eax
0x6693:	call	0x2cb0


0x6698:	jmp	0x62c6


0x6687:	mov	rdx, rax
0x668a:	mov	rcx, r13
0x668d:	xor	esi, esi
0x668f:	xor	edi, edi
0x6691:	xor	eax, eax
0x6693:	call	0x2cb0


0x636f:	lea	rsi, [rip + 0xeaa1]
0x6376:	mov	r12, rax
0x6379:	mov	edx, 5
0x637e:	xor	edi, edi
0x6380:	call	0x28e0


0x6385:	mov	rbx, rax
0x6388:	call	0x2770


0x638d:	mov	esi, dword ptr [rax]
0x638f:	mov	rcx, r12
0x6392:	mov	rdx, rbx
0x6395:	xor	edi, edi
0x6397:	xor	eax, eax
0x6399:	xor	r12d, r12d
0x639c:	call	0x2cb0


0x63a1:	jmp	0x62c6


0x7ba3:	lea	rsi, [rip + 0xcfce]
0x7baa:	mov	r12, rax
0x7bad:	mov	edx, 5
0x7bb2:	xor	edi, edi
0x7bb4:	call	0x28e0


0x7bb9:	mov	rcx, r12
0x7bbc:	mov	rdx, rax
0x7bbf:	xor	esi, esi
0x7bc1:	xor	edi, edi
0x7bc3:	xor	eax, eax
0x7bc5:	call	0x2cb0


0x8498:	lea	rsi, [rip + 0xca5e]
0x849f:	mov	edx, 5
0x84a4:	mov	r12, rax
0x84a7:	xor	edi, edi
0x84a9:	call	0x28e0


0x84ae:	mov	qword ptr [rbp - 0x328], rax
0x84b5:	call	0x2770


0x84ba:	mov	rcx, r12
0x84bd:	mov	rdx, qword ptr [rbp - 0x328]
0x84c4:	mov	esi, dword ptr [rax]
0x84c6:	jmp	0x7bc1


0x825c:	mov	edx, 5
0x8261:	mov	r13, rax
0x8264:	lea	rsi, [rip + 0xcc77]
0x826b:	jmp	0x6f5f


0x55df:	lea	rsi, [rip + 0xf7f0]
0x55e6:	xor	edi, edi
0x55e8:	mov	edx, 5
0x55ed:	mov	rbp, rax
0x55f0:	call	0x28e0


0x55f5:	mov	rbx, rax
0x55f8:	call	0x2770


0x55fd:	mov	esi, dword ptr [rax]
0x55ff:	mov	rcx, rbp
0x5602:	mov	rdx, rbx
0x5605:	xor	edi, edi
0x5607:	xor	eax, eax
0x5609:	call	0x2cb0


0x560e:	jmp	0x5315


0x5592:	lea	rsi, [rip + 0xf84e]
0x5599:	mov	rbx, rax
0x559c:	mov	edx, 5
0x55a1:	xor	edi, edi
0x55a3:	call	0x28e0


0x55a8:	mov	rcx, rbx
0x55ab:	mov	rdx, rax
0x55ae:	xor	esi, esi
0x55b0:	xor	edi, edi
0x55b2:	xor	eax, eax
0x55b4:	call	0x2cb0


0x55b9:	jmp	0x5315


0x72f1:	mov	edx, 5
0x72f6:	mov	r12, rax
0x72f9:	lea	rsi, [rip + 0xdd1e]
0x7300:	jmp	0x637e


0x637e:	xor	edi, edi
0x6380:	call	0x28e0


0x87ea:	lea	rsi, [rip + 0xc58f]
0x87f1:	mov	r12, rax
0x87f4:	mov	edx, 5
0x87f9:	xor	edi, edi
0x87fb:	call	0x28e0


0x8800:	mov	rdx, r12
0x8803:	mov	rsi, rax
0x8806:	mov	edi, 1
0x880b:	xor	eax, eax
0x880d:	call	0x2c60


0x8812:	mov	qword ptr [rbp - 0x350], 0
0x881d:	movzx	r9d, byte ptr [rbp - 0x358]
0x8825:	jmp	0x5e0e


0x808c:	mov	edx, 5
0x8091:	mov	r13, rax
0x8094:	lea	rsi, [rip + 0xcf2f]
0x809b:	jmp	0x6f5f


0x611b:	lea	rsi, [rip + 0xee49]
0x6122:	xor	edi, edi
0x6124:	mov	edx, 5
0x6129:	mov	r13, rax
0x612c:	call	0x28e0


0x6131:	mov	r15, rax
0x6134:	call	0x2770


0x6139:	mov	esi, dword ptr [rax]
0x613b:	xor	edi, edi
0x613d:	xor	eax, eax
0x613f:	mov	rcx, r13
0x6142:	mov	rdx, r15
0x6145:	call	0x2cb0


0x614a:	cmp	byte ptr [rbx + 0x24], 0
0x614e:	jne	0x5d90


0x623b:	lea	rsi, [rip + 0xed41]
0x6242:	mov	edx, 5
0x6247:	xor	edi, edi
0x6249:	mov	r14, rax
0x624c:	call	0x28e0


0x6251:	mov	r13, rax
0x6254:	call	0x2770


0x6259:	mov	esi, dword ptr [rax]
0x625b:	mov	rcx, r14
0x625e:	mov	rdx, r13
0x6261:	xor	edi, edi
0x6263:	xor	eax, eax
0x6265:	call	0x2cb0


0x6f50:	lea	rsi, [rip + 0xdf49]
0x6f57:	mov	r13, rax
0x6f5a:	mov	edx, 5
0x6f5f:	xor	edi, edi
0x6f61:	call	0x28e0


0x505c:	and	ebp, 0xfff
0x5062:	cmp	byte ptr [r13 + 0x18], 0
0x5067:	mov	r14, rax
0x506a:	mov	rbx, qword ptr [rip + 0x21552f]
0x5071:	mov	edx, 5
0x5076:	jne	0x5086


0x5078:	test	dword ptr [r13 + 0x14], 0xffff00
0x5080:	je	0x5130


0x5086:	lea	rsi, [rip + 0xf71b]
0x508d:	xor	edi, edi
0x508f:	call	0x28e0


0x5130:	lea	rsi, [rip + 0xf6a1]
0x5137:	xor	edi, edi
0x5139:	call	0x28e0


0x513e:	mov	rdx, rax
0x5141:	jmp	0x5097


0x5097:	sub	rsp, 8
0x509b:	add	r12, 1
0x509f:	mov	rdi, qword ptr [rip + 0x21503a]
0x50a6:	push	r12
0x50a8:	mov	r9, rbp
0x50ab:	mov	r8, r14
0x50ae:	mov	rcx, rbx
0x50b1:	mov	esi, 1
0x50b6:	xor	eax, eax
0x50b8:	call	0x2db0


0x50bd:	pop	rax
0x50be:	pop	rdx
0x50bf:	jmp	0x510e


0x510e:	call	0x112b0


0x5113:	mov	rcx, qword ptr [rsp + 0x18]
0x5118:	xor	rcx, qword ptr fs:[0x28]
0x5121:	jne	0x5146


0x5123:	add	rsp, 0x20
0x5127:	pop	rbx
0x5128:	pop	rbp
0x5129:	pop	r12
0x512b:	pop	r13
0x512d:	pop	r14
0x512f:	ret	


0x5146:	call	0x2930


0x5094:	mov	rdx, rax
0x5097:	sub	rsp, 8
0x509b:	add	r12, 1
0x509f:	mov	rdi, qword ptr [rip + 0x21503a]
0x50a6:	push	r12
0x50a8:	mov	r9, rbp
0x50ab:	mov	r8, r14
0x50ae:	mov	rcx, rbx
0x50b1:	mov	esi, 1
0x50b6:	xor	eax, eax
0x50b8:	call	0x2db0


0x66f1:	test	al, al
0x66f3:	movzx	r8d, byte ptr [rbp - 0x350]
0x66fb:	movzx	r9d, byte ptr [rbp - 0x358]
0x6703:	je	0x62c0


0x6cfc:	test	al, al
0x6cfe:	jne	0x8110


0x8110:	movzx	r8d, byte ptr [rbp - 0x350]
0x8118:	movzx	r9d, byte ptr [rbp - 0x358]
0x8120:	jmp	0x6710


0x50d5:	lea	rsi, [rip + 0xfcb0]
0x50dc:	mov	rbx, qword ptr [rip + 0x2154bd]
0x50e3:	mov	edx, 5
0x50e8:	xor	edi, edi
0x50ea:	mov	rbp, rax
0x50ed:	call	0x28e0


0x50f2:	mov	rdi, qword ptr [rip + 0x214fe7]
0x50f9:	mov	rdx, rax
0x50fc:	mov	r8, rbp
0x50ff:	mov	rcx, rbx
0x5102:	mov	esi, 1
0x5107:	xor	eax, eax
0x5109:	call	0x2db0


0x4f5d:	lea	rsi, [rip + 0xfe1c]
0x4f64:	mov	rbp, rax
0x4f67:	mov	edx, 5
0x4f6c:	xor	edi, edi
0x4f6e:	call	0x28e0


0x4f73:	mov	rdx, rbp
0x4f76:	mov	rsi, rax
0x4f79:	mov	edi, 1
0x4f7e:	xor	eax, eax
0x4f80:	call	0x2c60


0x4f85:	add	rsp, 8
0x4f89:	mov	eax, ebx
0x4f8b:	pop	rbx
0x4f8c:	pop	rbp
0x4f8d:	pop	r12
0x4f8f:	pop	r13
0x4f91:	ret	


0x73b9:	lea	rsi, [rip + 0xd4d0]
0x73c0:	mov	rbx, rax
0x73c3:	xor	edi, edi
0x73c5:	mov	edx, 5
0x73ca:	call	0x28e0


0x73cf:	mov	rcx, rbx
0x73d2:	mov	rdx, rax
0x73d5:	xor	esi, esi
0x73d7:	xor	edi, edi
0x73d9:	xor	eax, eax
0x73db:	call	0x2cb0


0x73e0:	jmp	0x62c6


0x6619:	lea	rsi, [rip + 0xe5d8]
0x6620:	mov	r12, rax
0x6623:	mov	edx, 5
0x6628:	xor	edi, edi
0x662a:	call	0x28e0


0x7373:	mov	edx, 5
0x7378:	mov	r12, rax
0x737b:	lea	rsi, [rip + 0xdc83]
0x7382:	jmp	0x6628


0x6d83:	lea	rsi, [rip + 0xdba6]
0x6d8a:	mov	rbx, rax
0x6d8d:	mov	edx, 5
0x6d92:	xor	edi, edi
0x6d94:	call	0x28e0


0x6d99:	mov	rcx, rbx
0x6d9c:	mov	rdx, rax
0x6d9f:	xor	esi, esi
0x6da1:	xor	edi, edi
0x6da3:	xor	eax, eax
0x6da5:	call	0x2cb0


0x6daa:	jmp	0x62c6


0x4c3e:	lea	rsi, [rip + 0xddc5]
0x4c45:	mov	rbx, rax
0x4c48:	mov	edx, 5
0x4c4d:	xor	edi, edi
0x4c4f:	call	0x28e0


0x4c54:	mov	rcx, rbx
0x4c57:	mov	rdx, rax
0x4c5a:	xor	esi, esi
0x4c5c:	xor	edi, edi
0x4c5e:	xor	eax, eax
0x4c60:	call	0x2cb0


0x4ca6:	mov	edx, 5
0x4cab:	mov	rbx, rax
0x4cae:	lea	rsi, [rip + 0xf7db]
0x4cb5:	jmp	0x4c4d


0x4c4d:	xor	edi, edi
0x4c4f:	call	0x28e0


0xe59d:	add	rsp, 0x20
0xe5a1:	mov	eax, dword ptr [rsp + 0x18]
0xe5a5:	mov	dword ptr [r13], eax
0xe5a9:	add	rsp, 0x28
0xe5ad:	mov	rax, r12
0xe5b0:	pop	rbx
0xe5b1:	pop	rbp
0xe5b2:	pop	r12
0xe5b4:	pop	r13
0xe5b6:	pop	r14
0xe5b8:	pop	r15
0xe5ba:	ret	


0xe7ec:	lea	rsi, [rax + 1]
0xe7f0:	mov	qword ptr [rsp + 0x48], rax
0xe7f5:	add	rsp, 0x20
0xe7f9:	mov	rdi, rsi
0xe7fc:	mov	qword ptr [rsp + 0x18], rsi
0xe801:	call	0x11020


0xe806:	mov	qword ptr [rsp + 0x10], rax
0xe80b:	sub	rsp, 8
0xe80f:	push	qword ptr [rbx + 0x30]
0xe812:	push	qword ptr [rbx + 0x28]
0xe815:	mov	r10, qword ptr [rsp + 0x38]
0xe81a:	mov	r9d, ebp
0xe81d:	mov	r8d, dword ptr [rbx]
0xe820:	mov	rcx, r15
0xe823:	mov	rdx, r14
0xe826:	mov	rdi, rax
0xe829:	push	r10
0xe82b:	mov	rsi, qword ptr [rsp + 0x38]
0xe830:	call	0xd200


0xe835:	mov	eax, dword ptr [rsp + 0x2c]
0xe839:	add	rsp, 0x20
0xe83d:	test	r12, r12
0xe840:	mov	dword ptr [r13], eax
0xe844:	je	0xe84f


0xe84f:	mov	rax, qword ptr [rsp + 0x10]
0xe854:	add	rsp, 0x38
0xe858:	pop	rbx
0xe859:	pop	rbp
0xe85a:	pop	r12
0xe85c:	pop	r13
0xe85e:	pop	r14
0xe860:	pop	r15
0xe862:	ret	


0xe846:	mov	r11, qword ptr [rsp + 0x28]
0xe84b:	mov	qword ptr [r12], r11
0xe84f:	mov	rax, qword ptr [rsp + 0x10]
0xe854:	add	rsp, 0x38
0xe858:	pop	rbx
0xe859:	pop	rbp
0xe85a:	pop	r12
0xe85c:	pop	r13
0xe85e:	pop	r14
0xe860:	pop	r15
0xe862:	ret	


0xe761:	mov	dword ptr [rbp], r12d
0xe765:	add	rsp, 0x38
0xe769:	pop	rbx
0xe76a:	pop	rbp
0xe76b:	pop	r12
0xe76d:	pop	r13
0xe76f:	pop	r14
0xe771:	pop	r15
0xe773:	ret	


0x6863:	test	rax, rax
0x6866:	mov	r12, rax
0x6869:	movzx	r9d, byte ptr [rbp - 0x350]
0x6871:	je	0x8191


0x8191:	mov	byte ptr [rbp - 0x350], r9b
0x8198:	call	0x2770


0x6877:	mov	rdi, rax
0x687a:	mov	byte ptr [rbp - 0x358], r9b
0x6881:	mov	r14d, 1
0x6887:	call	0x2900


0x688c:	lea	rdx, [rax + 1]
0x6890:	add	rax, 0x1f
0x6894:	mov	rsi, r12
0x6897:	and	rax, 0xfffffffffffffff0
0x689b:	mov	r15d, 0x11
0x68a1:	sub	rsp, rax
0x68a4:	lea	rdi, [rsp + 0xf]
0x68a9:	and	rdi, 0xfffffffffffffff0
0x68ad:	call	0x2b60


0x68b2:	mov	rdi, r12
0x68b5:	mov	qword ptr [rbp - 0x350], rax
0x68bc:	call	0x2e10


0x68c1:	movzx	r9d, byte ptr [rbp - 0x358]
0x68c9:	jmp	0x5e0e


0x819d:	cmp	dword ptr [rax], 2
0x81a0:	mov	r12, rax
0x81a3:	movzx	r9d, byte ptr [rbp - 0x350]
0x81ab:	je	0x8611


0x8611:	mov	qword ptr [rbp - 0x350], 0
0x861c:	mov	r14d, 1
0x8622:	mov	r15d, 0x11
0x8628:	jmp	0x5e0e


0x81b1:	mov	rsi, qword ptr [rbp - 0x308]
0x81b8:	mov	edi, 4
0x81bd:	call	0xeab0


0x81c2:	lea	rsi, [rip + 0xcc8f]
0x81c9:	mov	edx, 5
0x81ce:	xor	edi, edi
0x81d0:	mov	rbx, rax
0x81d3:	call	0x28e0


0x81d8:	mov	esi, dword ptr [r12]
0x81dc:	mov	rdx, rax
0x81df:	mov	rcx, rbx
0x81e2:	xor	edi, edi
0x81e4:	xor	eax, eax
0x81e6:	xor	r12d, r12d
0x81e9:	call	0x2cb0


0x81ee:	jmp	0x62c6


0x6c52:	jmp	0x5d90


0x72d3:	jmp	0x6a28


0x8586:	mov	rax, qword ptr [rbp - 0x338]
0x858d:	mov	byte ptr [rax], 1
0x8590:	jmp	0x7778


0x5d51:	test	rax, rax
0x5d54:	je	0x62c0


0x5d5a:	movzx	ecx, byte ptr [rbx + 0x2e]
0x5d5e:	mov	r8d, dword ptr [rbp - 0x328]
0x5d65:	mov	edx, 1
0x5d6a:	mov	rsi, qword ptr [rbp - 0x308]
0x5d71:	mov	rdi, rax
0x5d74:	call	0x4ef0


0x5d79:	test	al, al
0x5d7b:	jne	0x62c0


0x5d81:	cmp	byte ptr [rbx + 0x25], 0
0x5d85:	jne	0x6b90


0x6fa2:	mov	qword ptr [rbp - 0x358], rax
0x6fa9:	cmp	qword ptr [rbp - 0x358], 0
0x6fb1:	je	0x7000


0x7000:	movzx	eax, byte ptr [rbx + 0x18]
0x7004:	jmp	0x6bcb


0x6fb3:	mov	eax, dword ptr [rbp - 0x314]
0x6fb9:	and	eax, 0xf000
0x6fbe:	cmp	eax, 0x4000
0x6fc3:	je	0x6b0b


0x6b0b:	mov	rsi, qword ptr [rbp - 0x358]
0x6b12:	mov	rdi, qword ptr [rbp - 0x310]
0x6b19:	call	0xf240


0x6fc9:	movzx	ecx, byte ptr [rbx + 0x2e]
0x6fcd:	mov	r8d, dword ptr [rbp - 0x328]
0x6fd4:	mov	edx, 1
0x6fd9:	mov	rsi, qword ptr [rbp - 0x308]
0x6fe0:	mov	rdi, qword ptr [rbp - 0x358]
0x6fe7:	call	0x4ef0


0x6fec:	test	al, al
0x6fee:	je	0x6b86


0x6b86:	cmp	byte ptr [rbx + 0x25], 0
0x6b8a:	je	0x6a28


0x6ff4:	jmp	0x62c0


0x6b1e:	test	al, al
0x6b20:	je	0x7a60


0x7a60:	mov	rsi, qword ptr [rbp - 0x358]
0x7a67:	mov	rdi, qword ptr [rbp - 0x308]
0x7a6e:	call	0xf240


0x6b26:	mov	rdx, qword ptr [rip + 0x213a3b]
0x6b2d:	mov	esi, 4
0x6b32:	mov	edi, 1
0x6b37:	call	0xe990


0x6b3c:	mov	rdx, qword ptr [rip + 0x213a2d]
0x6b43:	mov	esi, 4
0x6b48:	xor	edi, edi
0x6b4a:	mov	r13, rax
0x6b4d:	call	0xe990


0x6b52:	lea	rsi, [rip + 0xdeef]
0x6b59:	mov	r12, rax
0x6b5c:	mov	edx, 5
0x6b61:	xor	edi, edi
0x6b63:	call	0x28e0


0x6b68:	mov	r8, r13
0x6b6b:	mov	rdx, rax
0x6b6e:	mov	rcx, r12
0x6b71:	xor	eax, eax
0x6b73:	xor	esi, esi
0x6b75:	xor	edi, edi
0x6b77:	call	0x2cb0


0x6b7c:	mov	rax, qword ptr [rbp - 0x340]
0x6b83:	mov	byte ptr [rax], 1
0x6b86:	cmp	byte ptr [rbx + 0x25], 0
0x6b8a:	je	0x6a28


0x7a73:	test	al, al
0x7a75:	jne	0x814a


0x7a7b:	mov	eax, dword ptr [rbx + 4]
0x7a7e:	cmp	eax, 4
0x7a81:	je	0x7000


0x814a:	mov	rsi, qword ptr [rip + 0x21241f]
0x8151:	mov	edi, 4
0x8156:	call	0xeab0


0x7a87:	cmp	eax, 3
0x7a8a:	jne	0x7a95


0x7a8c:	test	r13b, r13b
0x7a8f:	jne	0x7000


0x7a95:	mov	rdx, qword ptr [rbp - 0x358]
0x7a9c:	mov	esi, 4
0x7aa1:	mov	edi, 1
0x7aa6:	call	0xe990


0x7aab:	mov	rdx, qword ptr [rbp - 0x308]
0x7ab2:	xor	edi, edi
0x7ab4:	mov	esi, 4
0x7ab9:	mov	r13, rax
0x7abc:	call	0xe990


0x7ac1:	lea	rsi, [rip + 0xcfe8]
0x7ac8:	mov	r12, rax
0x7acb:	xor	edi, edi
0x7acd:	mov	edx, 5
0x7ad2:	call	0x28e0


0x7ad7:	mov	r8, r13
0x7ada:	mov	rdx, rax
0x7add:	mov	rcx, r12
0x7ae0:	xor	esi, esi
0x7ae2:	xor	edi, edi
0x7ae4:	xor	eax, eax
0x7ae6:	call	0x2cb0


0x7aeb:	jmp	0x6b86


0x815b:	lea	rsi, [rip + 0xc916]
0x8162:	xor	edi, edi
0x8164:	mov	r12, rax
0x8167:	mov	edx, 5
0x816c:	call	0x28e0


0x8171:	xor	esi, esi
0x8173:	mov	rdx, rax
0x8176:	xor	edi, edi
0x8178:	xor	eax, eax
0x817a:	mov	rcx, r12
0x817d:	call	0x2cb0


0x8182:	cmp	byte ptr [rbx + 0x18], 0
0x8186:	jne	0x6d04


0x818c:	jmp	0x62c0


0x6af6:	mov	qword ptr [rbp - 0x358], rax
0x6afd:	cmp	qword ptr [rbp - 0x358], 0
0x6b05:	je	0x7000


0x7398:	mov	qword ptr [rbp - 0x358], rax
0x739f:	jmp	0x6afd


0x6afd:	cmp	qword ptr [rbp - 0x358], 0
0x6b05:	je	0x7000


0x73fb:	mov	qword ptr [rbp - 0x358], rax
0x7402:	jmp	0x6fa9


0x6fa9:	cmp	qword ptr [rbp - 0x358], 0
0x6fb1:	je	0x7000


0xb77b:	test	rax, rax
0xb77e:	je	0xb7b2


0xb7b2:	call	0x11270


0xb780:	cmp	rbx, rax
0xb783:	je	0xb7a0


0xb7a0:	add	rsp, 8
0xb7a4:	pop	rbx
0xb7a5:	pop	rbp
0xb7a6:	pop	r12
0xb7a8:	pop	r13
0xb7aa:	ret	


0xb785:	add	rsp, 8
0xb789:	mov	rdi, rbx
0xb78c:	pop	rbx
0xb78d:	pop	rbp
0xb78e:	pop	r12
0xb790:	pop	r13
0xb792:	jmp	0xcef0


0x9e62:	test	rax, rax
0x9e65:	je	0x9e94


0x9e94:	call	0x11270


0x9e67:	cmp	rbx, rax
0x9e6a:	mov	rbp, rax
0x9e6d:	je	0x9e90


0x9e90:	xor	eax, eax
0x9e92:	jmp	0x9e84


0x9e6f:	mov	rdi, qword ptr [rbx + 0x10]
0x9e73:	call	0x2e10


0x9e84:	add	rsp, 8
0x9e88:	pop	rbx
0x9e89:	pop	rbp
0x9e8a:	pop	r12
0x9e8c:	pop	r13
0x9e8e:	ret	


0x9e78:	mov	rdi, rbx
0x9e7b:	call	0x2e10


0x9e80:	mov	rax, qword ptr [rbp + 0x10]
0x9e84:	add	rsp, 8
0x9e88:	pop	rbx
0x9e89:	pop	rbp
0x9e8a:	pop	r12
0x9e8c:	pop	r13
0x9e8e:	ret	


0xfa77:	test	rax, rax
0xfa7a:	mov	qword ptr [rsp + 0x10], rax
0xfa7f:	mov	r9d, dword ptr [rsp + 0x18]
0xfa84:	mov	r10d, dword ptr [rsp + 0x20]
0xfa89:	mov	r11, qword ptr [rsp + 0x28]
0xfa8e:	je	0xfb88


0xfb88:	mov	rdx, qword ptr [rip + 0x20ab71]
0xfb8f:	test	rdx, rdx
0xfb92:	je	0x10032


0xfa94:	cmp	qword ptr [rip + 0x20ac5d], rax
0xfa9b:	je	0x10040


0x10040:	mov	qword ptr [rip + 0x20a6ad], 0
0x1004b:	jmp	0xfaa1


0xfaa1:	mov	rax, qword ptr [rsp + 0x10]
0xfaa6:	cmp	byte ptr [rax + 0xc], 0
0xfaaa:	mov	esi, dword ptr [rax + 8]
0xfaad:	mov	dword ptr [rsp + 0x18], esi
0xfab1:	je	0xfc0a


0xfc0a:	mov	rcx, qword ptr [rbp + 0x50]
0xfc0e:	mov	eax, 0x66666667
0xfc13:	mov	rsi, qword ptr [rbp + 0x70]
0xfc17:	imul	ecx
0xfc19:	mov	eax, ecx
0xfc1b:	mov	qword ptr [rsp + 0x28], rcx
0xfc20:	sar	eax, 0x1f
0xfc23:	sar	edx, 2
0xfc26:	sub	edx, eax
0xfc28:	lea	eax, [rdx + rdx*4]
0xfc2b:	mov	dword ptr [rsp + 0x20], edx
0xfc2f:	add	eax, eax
0xfc31:	sub	ecx, eax
0xfc33:	mov	eax, 0x66666667
0xfc38:	imul	esi
0xfc3a:	mov	eax, esi
0xfc3c:	sar	eax, 0x1f
0xfc3f:	sar	edx, 2
0xfc42:	mov	edi, edx
0xfc44:	sub	edi, eax
0xfc46:	lea	eax, [rdi + rdi*4]
0xfc49:	add	eax, eax
0xfc4b:	sub	esi, eax
0xfc4d:	mov	eax, 0x66666667
0xfc52:	imul	r15d
0xfc55:	mov	eax, r15d
0xfc58:	or	ecx, esi
0xfc5a:	sar	eax, 0x1f
0xfc5d:	mov	esi, r15d
0xfc60:	sar	edx, 2
0xfc63:	mov	r8d, edx
0xfc66:	sub	r8d, eax
0xfc69:	lea	eax, [r8 + r8*4]
0xfc6d:	add	eax, eax
0xfc6f:	sub	esi, eax
0xfc71:	or	ecx, esi
0xfc73:	jne	0xffc8


0xfab7:	xor	eax, eax
0xfab9:	cmp	esi, 0x77359400
0xfabf:	sete	al
0xfac2:	not	eax
0xfac4:	cdqe	
0xfac6:	and	r12, rax
0xfac9:	mov	eax, r9d
0xfacc:	mov	r9d, r13d
0xfacf:	cdq	
0xfad0:	idiv	esi
0xfad2:	sub	r9d, edx
0xfad5:	nop	dword ptr [rax]
0xfad8:	cmp	r12, r14
0xfadb:	jg	0xfb28


0x365b:	lea	rsi, [rip + 0x11066]
0x3662:	mov	edx, 5
0x3667:	xor	edi, edi
0x3669:	mov	rbp, rax
0x366c:	call	0x28e0


0x3671:	mov	esi, dword ptr [rbx]
0x3673:	mov	rdx, rax
0x3676:	mov	rcx, rbp
0x3679:	mov	edi, 1
0x367e:	xor	eax, eax
0x3680:	call	0x2cb0


0x3685:	mov	rsi, qword ptr [rip + 0x216a34]
0x368c:	mov	edi, 4
0x3691:	call	0xeab0


0x3696:	lea	rsi, [rip + 0xf260]
0x369d:	mov	edx, 5
0x36a2:	xor	edi, edi
0x36a4:	mov	rbp, rax
0x36a7:	call	0x28e0


0x36ac:	mov	rbx, rax
0x36af:	call	0x2770


0x36b4:	mov	esi, dword ptr [rax]
0x36b6:	mov	rcx, rbp
0x36b9:	mov	rdx, rbx
0x36bc:	mov	edi, 1
0x36c1:	xor	eax, eax
0x36c3:	call	0x2cb0


0x36c8:	nop	dword ptr [rax + rax]


0xa9ce:	mov	rdi, qword ptr [rip + 0x20f70b]
0xa9d5:	lea	rdx, [rip + 0xa7af]
0xa9dc:	mov	rcx, rax
0xa9df:	mov	esi, 1
0xa9e4:	xor	eax, eax
0xa9e6:	call	0x2db0


0xa9eb:	mov	r15, qword ptr [r14 + rbx*8]
0xa9ef:	test	r15, r15
0xa9f2:	jne	0xa9a8


0xa97f:	mov	rdi, qword ptr [rip + 0x20f75a]
0xa986:	lea	rdx, [rip + 0xa7f6]
0xa98d:	mov	rcx, rax
0xa990:	mov	esi, 1
0xa995:	xor	eax, eax
0xa997:	add	rbp, r12
0xa99a:	call	0x2db0


0xa99f:	mov	r15, qword ptr [r14 + rbx*8]
0xa9a3:	test	r15, r15
0xa9a6:	je	0xa9f8


0xa64a:	lea	rsi, [rip + 0x82d9]
0xa651:	mov	edx, 5
0xa656:	xor	edi, edi
0xa658:	mov	r12, rax
0xa65b:	call	0x28e0


0xa660:	mov	rbp, rax
0xa663:	call	0x2770


0xa668:	mov	esi, dword ptr [rax]
0xa66a:	mov	rcx, r12
0xa66d:	mov	rdx, rbp
0xa670:	xor	edi, edi
0xa672:	xor	eax, eax
0xa674:	call	0x2cb0


0xa5c3:	lea	rsi, [rip + 0xa9b9]
0xa5ca:	mov	edx, 5
0xa5cf:	xor	edi, edi
0xa5d1:	mov	r12, rax
0xa5d4:	call	0x28e0


0xa5d9:	mov	rbp, rax
0xa5dc:	call	0x2770


0xa5e1:	mov	esi, dword ptr [rax]
0xa5e3:	mov	rcx, r12
0xa5e6:	mov	rdx, rbp
0xa5e9:	xor	edi, edi
0xa5eb:	xor	eax, eax
0xa5ed:	call	0x2cb0


0xa608:	mov	rbp, rax
0xa60b:	call	0x2770


0xa610:	mov	esi, dword ptr [rax]
0xa612:	lea	rdx, [rip + 0xab74]
0xa619:	mov	rcx, rbp
0xa61c:	xor	eax, eax
0xa61e:	xor	edi, edi
0xa620:	call	0x2cb0


0xa625:	mov	eax, ebx
0xa627:	pop	rbx
0xa628:	pop	rbp
0xa629:	pop	r12
0xa62b:	ret	


0x11a20:	mov	rbp, rax
0x11a23:	call	0x2770


0x11a28:	cmp	dword ptr [rax], 0
0x11a2b:	mov	rbx, rax
0x11a2e:	mov	edx, 5
0x11a33:	je	0x11a5d


0x11a5d:	lea	rsi, [rip + 0x41ca]
0x11a64:	xor	edi, edi
0x11a66:	call	0x28e0


0x11a35:	lea	rsi, [rip + 0x4202]
0x11a3c:	xor	edi, edi
0x11a3e:	call	0x28e0


0x11a43:	mov	edi, dword ptr [rip + 0x2085e7]
0x11a49:	mov	esi, dword ptr [rbx]
0x11a4b:	mov	rdx, rax
0x11a4e:	mov	rcx, rbp
0x11a51:	xor	eax, eax
0x11a53:	call	0x2cb0


0x11a6b:	jmp	0x11a43


0x9d86:	test	rax, rax
0x9d89:	je	0x9d9f


0x9d9f:	mov	rax, qword ptr [rsp + 0x18]
0x9da4:	xor	rax, qword ptr fs:[0x28]
0x9dad:	jne	0x9db5


0x9d8b:	mov	rdi, qword ptr [rax + 0x10]
0x9d8f:	mov	rbx, rax
0x9d92:	call	0x2e10


0x9daf:	add	rsp, 0x20
0x9db3:	pop	rbx
0x9db4:	ret	


0x9db5:	call	0x2930


0x9d97:	mov	rdi, rbx
0x9d9a:	call	0x2e10


0xfbc5:	test	rax, rax
0xfbc8:	mov	qword ptr [rsp + 0x10], rax
0xfbcd:	mov	rcx, qword ptr [rsp + 0x18]
0xfbd2:	mov	r9d, dword ptr [rsp + 0x20]
0xfbd7:	mov	r10d, dword ptr [rsp + 0x28]
0xfbdc:	mov	r11, qword ptr [rsp + 0x30]
0xfbe1:	jne	0xfaa1


0xb7f6:	test	rax, rax
0xb7f9:	setne	al
0xb7fc:	mov	rcx, qword ptr [rsp + 0x18]
0xb801:	xor	rcx, qword ptr fs:[0x28]
0xb80a:	jne	0xb811


0x9dec:	test	rax, rax
0x9def:	je	0x9e10


0x9e10:	xor	eax, eax
0x9e12:	jmp	0x9df5


0x9df1:	mov	rax, qword ptr [rax + 0x10]
0x9df5:	mov	rdx, qword ptr [rsp + 0x18]
0x9dfa:	xor	rdx, qword ptr fs:[0x28]
0x9e03:	jne	0x9e14


0x9df5:	mov	rdx, qword ptr [rsp + 0x18]
0x9dfa:	xor	rdx, qword ptr fs:[0x28]
0x9e03:	jne	0x9e14


0x9e05:	add	rsp, 0x28
0x9e09:	ret	


0x9e14:	call	0x2930


0xaaa4:	mov	rax, -1
0xaaab:	jmp	0xaa76


0x11e12:	mov	rcx, qword ptr [r12]
0x11e16:	mov	rdx, rbp
0x11e19:	mov	rdi, rbx
0x11e1c:	mov	esi, 1
0x11e21:	call	0x2860


0xf807:	test	eax, eax
0xf809:	mov	edx, eax
0xf80b:	jns	0xf839


0xf80d:	mov	rax, qword ptr [rsp + 8]
0xf812:	mov	ecx, dword ptr [rax]
0xf814:	cmp	ecx, 0x11
0xf817:	jne	0xf874


0xf839:	mov	rcx, qword ptr [rsp + 8]
0xf83e:	mov	eax, dword ptr [rsp + 0x2c]
0xf842:	mov	dword ptr [rcx], eax
0xf844:	mov	ecx, eax
0xf846:	mov	rdi, rbp
0xf849:	mov	dword ptr [rsp + 0x10], edx
0xf84d:	mov	dword ptr [rsp], ecx
0xf850:	call	0x119b0


0xf819:	sub	r13d, 1
0xf81d:	jne	0xf7c8


0xf874:	mov	edx, 0xffffffff
0xf879:	jmp	0xf846


0xf81f:	mov	rdi, rbp
0xf822:	call	0x119b0


0xf7c8:	test	r14, r14
0xf7cb:	mov	r15, qword ptr [rsp + 0x10]
0xf7d0:	je	0xf7f7


0xf846:	mov	rdi, rbp
0xf849:	mov	dword ptr [rsp + 0x10], edx
0xf84d:	mov	dword ptr [rsp], ecx
0xf850:	call	0x119b0


0xf855:	mov	rax, qword ptr [rsp + 8]
0xf85a:	mov	ecx, dword ptr [rsp]
0xf85d:	mov	edx, dword ptr [rsp + 0x10]
0xf861:	mov	dword ptr [rax], ecx
0xf863:	add	rsp, 0x38
0xf867:	mov	eax, edx
0xf869:	pop	rbx
0xf86a:	pop	rbp
0xf86b:	pop	r12
0xf86d:	pop	r13
0xf86f:	pop	r14
0xf871:	pop	r15
0xf873:	ret	


0xf827:	mov	rax, qword ptr [rsp + 8]
0xf82c:	mov	edx, 0xffffffff
0xf831:	mov	dword ptr [rax], 0x11
0xf837:	jmp	0xf863


0x1287d:	add	rbx, 1
0x12881:	cmp	rbp, rbx
0x12884:	jne	0x12870


0x12870:	mov	rdx, r15
0x12873:	mov	rsi, r14
0x12876:	mov	edi, r13d
0x12879:	call	qword ptr [r12 + rbx*8]


0xc668:	mov	rbx, qword ptr [rbx + 8]
0xc66c:	test	rbx, rbx
0xc66f:	jne	0xc660


0xc671:	mov	rax, qword ptr [r12 + 8]
0xc676:	add	rbp, 0x10
0xc67a:	cmp	rax, rbp
0xc67d:	ja	0xc648


0xc660:	mov	rdi, qword ptr [rbx]
0xc663:	call	qword ptr [r12 + 0x40]


0xc5c2:	mov	rax, qword ptr [rbp + 0x40]
0xc5c6:	mov	rdx, qword ptr [rbx + 8]
0xc5ca:	mov	rcx, qword ptr [rbp + 0x48]
0xc5ce:	mov	qword ptr [rbx], 0
0xc5d5:	test	rdx, rdx
0xc5d8:	mov	qword ptr [rbx + 8], rcx
0xc5dc:	mov	qword ptr [rbp + 0x48], rbx
0xc5e0:	mov	rbx, rdx
0xc5e3:	jne	0xc5b8


0xc339:	test	al, al
0xc33b:	je	0xc354


0xc33d:	mov	rbx, qword ptr [rbx + 8]
0xc341:	add	rbp, 1
0xc345:	test	rbx, rbx
0xc348:	jne	0xc330


0xc330:	mov	rdi, qword ptr [rbx]
0xc333:	mov	rsi, r13
0xc336:	call	r12


0xbc2e:	cmp	qword ptr [rbx + 0x10], rax
0xbc32:	jbe	0xbc3d


0xbc3d:	call	0x2760


0xbc34:	shl	rax, 4
0xbc38:	add	rax, qword ptr [rbx]
0xbc3b:	pop	rbx
0xbc3c:	ret	


0xbea4:	cmp	qword ptr [rax], 0
0xbea8:	mov	rbx, rax
0xbeab:	je	0xbf00


0xbf00:	mov	qword ptr [rax], r15
0xbf03:	add	qword ptr [rbp + 0x18], 1
0xbf08:	jmp	0xbecd


0xbead:	mov	rax, qword ptr [rbp + 0x48]
0xbeb1:	test	rax, rax
0xbeb4:	je	0xbf10


0xbecd:	mov	qword ptr [r12], 0
0xbed5:	sub	qword ptr [r13 + 0x18], 1
0xbeda:	add	r12, 0x10
0xbede:	cmp	qword ptr [r13 + 8], r12
0xbee2:	ja	0xbe18


0xbf10:	mov	edi, 0x10
0xbf15:	call	0x2bc0


0xbeb6:	mov	rdx, qword ptr [rax + 8]
0xbeba:	mov	qword ptr [rbp + 0x48], rdx
0xbebe:	mov	rdx, qword ptr [rbx + 8]
0xbec2:	mov	qword ptr [rax], r15
0xbec5:	mov	qword ptr [rax + 8], rdx
0xbec9:	mov	qword ptr [rbx + 8], rax
0xbecd:	mov	qword ptr [r12], 0
0xbed5:	sub	qword ptr [r13 + 0x18], 1
0xbeda:	add	r12, 0x10
0xbede:	cmp	qword ptr [r13 + 8], r12
0xbee2:	ja	0xbe18


0xbf1a:	test	rax, rax
0xbf1d:	jne	0xbebe


0xbf1f:	add	rsp, 8
0xbf23:	xor	eax, eax
0xbf25:	pop	rbx
0xbf26:	pop	rbp
0xbf27:	pop	r12
0xbf29:	pop	r13
0xbf2b:	pop	r14
0xbf2d:	pop	r15
0xbf2f:	ret	


0xbebe:	mov	rdx, qword ptr [rbx + 8]
0xbec2:	mov	qword ptr [rax], r15
0xbec5:	mov	qword ptr [rax + 8], rdx
0xbec9:	mov	qword ptr [rbx + 8], rax
0xbecd:	mov	qword ptr [r12], 0
0xbed5:	sub	qword ptr [r13 + 0x18], 1
0xbeda:	add	r12, 0x10
0xbede:	cmp	qword ptr [r13 + 8], r12
0xbee2:	ja	0xbe18


0xbe5a:	cmp	qword ptr [rax], 0
0xbe5e:	mov	rdx, qword ptr [rbx + 8]
0xbe62:	jne	0xbe38


0xbe64:	mov	qword ptr [rax], r15
0xbe67:	add	qword ptr [rbp + 0x18], 1
0xbe6c:	test	rdx, rdx
0xbe6f:	mov	qword ptr [rbx], 0
0xbe76:	mov	rax, qword ptr [rbp + 0x48]
0xbe7a:	mov	qword ptr [rbx + 8], rax
0xbe7e:	mov	qword ptr [rbp + 0x48], rbx
0xbe82:	mov	rbx, rdx
0xbe85:	jne	0xbe4c


0xbe38:	mov	rcx, qword ptr [rax + 8]
0xbe3c:	test	rdx, rdx
0xbe3f:	mov	qword ptr [rbx + 8], rcx
0xbe43:	mov	qword ptr [rax + 8], rbx
0xbe47:	mov	rbx, rdx
0xbe4a:	je	0xbe87


0xbe87:	mov	r15, qword ptr [r12]
0xbe8b:	test	r14b, r14b
0xbe8e:	mov	qword ptr [r12 + 8], 0
0xbe97:	jne	0xbeda


0xbc69:	mov	qword ptr [r14], rax
0xbc6c:	mov	rsi, qword ptr [rax]
0xbc6f:	test	rsi, rsi
0xbc72:	je	0xbd60


0xbd60:	xor	esi, esi
0xbd62:	pop	rbx
0xbd63:	mov	rax, rsi
0xbd66:	pop	rbp
0xbd67:	pop	r12
0xbd69:	pop	r13
0xbd6b:	pop	r14
0xbd6d:	ret	


0xbc78:	cmp	rsi, rbp
0xbc7b:	mov	rbx, rax
0xbc7e:	je	0xbd13


0xbd13:	test	r13b, r13b
0xbd16:	je	0xbcfe


0xbc84:	mov	rdi, rbp
0xbc87:	call	qword ptr [r12 + 0x38]


0xbcfe:	pop	rbx
0xbcff:	mov	rax, rsi
0xbd02:	pop	rbp
0xbd03:	pop	r12
0xbd05:	pop	r13
0xbd07:	pop	r14
0xbd09:	ret	


0xbd18:	mov	rax, qword ptr [rbx + 8]
0xbd1c:	test	rax, rax
0xbd1f:	je	0xbd50


0xbd50:	mov	qword ptr [rbx], 0
0xbd57:	jmp	0xbcfe


0xbd21:	movdqu	xmm0, xmmword ptr [rax]
0xbd25:	movups	xmmword ptr [rbx], xmm0
0xbd28:	mov	qword ptr [rax], 0
0xbd2f:	mov	rdx, qword ptr [r12 + 0x48]
0xbd34:	mov	qword ptr [rax + 8], rdx
0xbd38:	mov	qword ptr [r12 + 0x48], rax
0xbd3d:	mov	rax, rsi
0xbd40:	pop	rbx
0xbd41:	pop	rbp
0xbd42:	pop	r12
0xbd44:	pop	r13
0xbd46:	pop	r14
0xbd48:	ret	


0xc16f:	mov	rsi, qword ptr [rax]
0xc172:	test	rsi, rsi
0xc175:	je	0xc19d


0xc19d:	xor	esi, esi
0xc19f:	pop	rbx
0xc1a0:	mov	rax, rsi
0xc1a3:	pop	rbp
0xc1a4:	pop	r12
0xc1a6:	ret	


0xc177:	mov	rbx, rax
0xc17a:	jmp	0xc183


0xc183:	cmp	rsi, rbp
0xc186:	je	0xc19f


0xc19f:	pop	rbx
0xc1a0:	mov	rax, rsi
0xc1a3:	pop	rbp
0xc1a4:	pop	r12
0xc1a6:	ret	


0xc188:	mov	rdi, rbp
0xc18b:	call	qword ptr [r12 + 0x38]


0xc221:	mov	rdx, rax
0xc224:	mov	rcx, rax
0xc227:	mov	rax, qword ptr [rdx]
0xc22a:	mov	rdx, qword ptr [rdx + 8]
0xc22e:	cmp	rax, rbx
0xc231:	je	0xc249


0xc249:	test	rdx, rdx
0xc24c:	jne	0xc278


0xc24e:	mov	rdx, qword ptr [rbp + 8]
0xc252:	jmp	0xc260


0xc278:	mov	rax, qword ptr [rdx]
0xc27b:	add	rsp, 8
0xc27f:	pop	rbx
0xc280:	pop	rbp
0xc281:	ret	


0xc23d:	mov	rax, qword ptr [rdx]
0xc240:	mov	rdx, qword ptr [rdx + 8]
0xc244:	cmp	rax, rbx
0xc247:	jne	0xc238


0xc260:	add	rcx, 0x10
0xc264:	cmp	rdx, rcx
0xc267:	ja	0xc258


0xc238:	test	rdx, rdx
0xc23b:	je	0xc24e


0xc269:	xor	eax, eax
0xc26b:	add	rsp, 8
0xc26f:	pop	rbx
0xc270:	pop	rbp
0xc271:	ret	


0xc258:	mov	rax, qword ptr [rcx]
0xc25b:	test	rax, rax
0xc25e:	jne	0xc26b


0xc26b:	add	rsp, 8
0xc26f:	pop	rbx
0xc270:	pop	rbp
0xc271:	ret	


0xc979:	test	rax, rax
0xc97c:	mov	rdx, rax
0xc97f:	je	0xc9b0


0xc9b0:	mov	rax, qword ptr [rbx + 0x18]
0xc9b4:	test	rax, rax
0xc9b7:	js	0xca30


0xc981:	xor	eax, eax
0xc983:	test	r13, r13
0xc986:	je	0xc98c


0xca30:	mov	rdx, rax
0xca33:	pxor	xmm1, xmm1
0xca37:	and	eax, 1
0xca3a:	shr	rdx, 1
0xca3d:	or	rdx, rax
0xca40:	mov	rax, qword ptr [rbx + 0x10]
0xca44:	cvtsi2ss	xmm1, rdx
0xca49:	mov	rdx, qword ptr [rbx + 0x28]
0xca4d:	test	rax, rax
0xca50:	addss	xmm1, xmm1
0xca54:	jns	0xc9d3


0xc9b9:	pxor	xmm1, xmm1
0xc9bd:	mov	rdx, qword ptr [rbx + 0x28]
0xc9c1:	cvtsi2ss	xmm1, rax
0xc9c6:	mov	rax, qword ptr [rbx + 0x10]
0xc9ca:	test	rax, rax
0xc9cd:	js	0xca5a


0xc98c:	mov	rcx, qword ptr [rsp + 8]
0xc991:	xor	rcx, qword ptr fs:[0x28]
0xc99a:	jne	0xcbbf


0xc988:	mov	qword ptr [r13], rdx
0xc98c:	mov	rcx, qword ptr [rsp + 8]
0xc991:	xor	rcx, qword ptr fs:[0x28]
0xc99a:	jne	0xcbbf


0xca5a:	mov	rcx, rax
0xca5d:	pxor	xmm0, xmm0
0xca61:	shr	rcx, 1
0xca64:	and	eax, 1
0xca67:	or	rcx, rax
0xca6a:	cvtsi2ss	xmm0, rcx
0xca6f:	addss	xmm0, xmm0
0xca73:	jmp	0xc9dc


0xc9d3:	pxor	xmm0, xmm0
0xc9d7:	cvtsi2ss	xmm0, rax
0xc9dc:	mulss	xmm0, dword ptr [rdx + 8]
0xc9e1:	ucomiss	xmm1, xmm0
0xc9e4:	ja	0xca80


0xc9a0:	add	rsp, 0x18
0xc9a4:	pop	rbx
0xc9a5:	pop	rbp
0xc9a6:	pop	r12
0xc9a8:	pop	r13
0xc9aa:	ret	


0xcbbf:	call	0x2930


0xc9dc:	mulss	xmm0, dword ptr [rdx + 8]
0xc9e1:	ucomiss	xmm1, xmm0
0xc9e4:	ja	0xca80


0xc9ea:	mov	r12, qword ptr [rsp]
0xc9ee:	cmp	qword ptr [r12], 0
0xc9f3:	je	0xcb28


0xca80:	lea	rdi, [rbx + 0x28]
0xca84:	call	0xbd70


0xcb28:	mov	qword ptr [r12], rbp
0xcb2c:	mov	eax, 1
0xcb31:	add	qword ptr [rbx + 0x20], 1
0xcb36:	add	qword ptr [rbx + 0x18], 1
0xcb3b:	jmp	0xc98c


0xc9f9:	mov	rax, qword ptr [rbx + 0x48]
0xc9fd:	test	rax, rax
0xca00:	je	0xcb40


0xcb40:	mov	edi, 0x10
0xcb45:	call	0x2bc0


0xca06:	mov	rdx, qword ptr [rax + 8]
0xca0a:	mov	qword ptr [rbx + 0x48], rdx
0xca0e:	mov	rdx, qword ptr [r12 + 8]
0xca13:	mov	qword ptr [rax], rbp
0xca16:	mov	qword ptr [rax + 8], rdx
0xca1a:	mov	qword ptr [r12 + 8], rax
0xca1f:	mov	eax, 1
0xca24:	add	qword ptr [rbx + 0x20], 1
0xca29:	jmp	0xc98c


0xcb4a:	test	rax, rax
0xcb4d:	jne	0xca0e


0xcb53:	mov	eax, 0xffffffff
0xcb58:	jmp	0xc98c


0xca0e:	mov	rdx, qword ptr [r12 + 8]
0xca13:	mov	qword ptr [rax], rbp
0xca16:	mov	qword ptr [rax + 8], rdx
0xca1a:	mov	qword ptr [r12 + 8], rax
0xca1f:	mov	eax, 1
0xca24:	add	qword ptr [rbx + 0x20], 1
0xca29:	jmp	0xc98c


0xca89:	mov	rax, qword ptr [rbx + 0x10]
0xca8d:	mov	rdx, qword ptr [rbx + 0x28]
0xca91:	test	rax, rax
0xca94:	movss	xmm2, dword ptr [rdx + 8]
0xca99:	js	0xcb60


0xcb60:	mov	rcx, rax
0xcb63:	pxor	xmm0, xmm0
0xcb67:	shr	rcx, 1
0xcb6a:	and	eax, 1
0xcb6d:	or	rcx, rax
0xcb70:	cvtsi2ss	xmm0, rcx
0xcb75:	addss	xmm0, xmm0
0xcb79:	jmp	0xcaa8


0xca9f:	pxor	xmm0, xmm0
0xcaa3:	cvtsi2ss	xmm0, rax
0xcaa8:	mov	rax, qword ptr [rbx + 0x18]
0xcaac:	test	rax, rax
0xcaaf:	js	0xcb80


0xcaa8:	mov	rax, qword ptr [rbx + 0x18]
0xcaac:	test	rax, rax
0xcaaf:	js	0xcb80


0xcb80:	mov	rcx, rax
0xcb83:	pxor	xmm1, xmm1
0xcb87:	shr	rcx, 1
0xcb8a:	and	eax, 1
0xcb8d:	or	rcx, rax
0xcb90:	cvtsi2ss	xmm1, rcx
0xcb95:	addss	xmm1, xmm1
0xcb99:	jmp	0xcabe


0xcab5:	pxor	xmm1, xmm1
0xcab9:	cvtsi2ss	xmm1, rax
0xcabe:	movaps	xmm3, xmm2
0xcac1:	mulss	xmm3, xmm0
0xcac5:	ucomiss	xmm1, xmm3
0xcac8:	jbe	0xc9ea


0xcabe:	movaps	xmm3, xmm2
0xcac1:	mulss	xmm3, xmm0
0xcac5:	ucomiss	xmm1, xmm3
0xcac8:	jbe	0xc9ea


0xcace:	cmp	byte ptr [rdx + 0x10], 0
0xcad2:	mulss	xmm0, dword ptr [rdx + 0xc]
0xcad7:	jne	0xcadd


0xcad9:	mulss	xmm0, xmm2
0xcadd:	ucomiss	xmm0, dword ptr [rip + 0x87e8]
0xcae4:	jae	0xcb53


0xcadd:	ucomiss	xmm0, dword ptr [rip + 0x87e8]
0xcae4:	jae	0xcb53


0xcae6:	ucomiss	xmm0, dword ptr [rip + 0x87e3]
0xcaed:	jae	0xcba0


0xcaf3:	cvttss2si	rsi, xmm0
0xcaf8:	mov	rdi, rbx
0xcafb:	call	0xc700


0xcba0:	subss	xmm0, dword ptr [rip + 0x8728]
0xcba8:	movabs	rax, 0x8000000000000000
0xcbb2:	cvttss2si	rsi, xmm0
0xcbb7:	xor	rsi, rax
0xcbba:	jmp	0xcaf8


0xcaf8:	mov	rdi, rbx
0xcafb:	call	0xc700


0xcb00:	test	al, al
0xcb02:	je	0xcb53


0xcb04:	xor	ecx, ecx
0xcb06:	mov	rdx, r12
0xcb09:	mov	rsi, rbp
0xcb0c:	mov	rdi, rbx
0xcb0f:	call	0xbc50


0xcbf0:	cmp	eax, -1
0xcbf3:	je	0xcc20


0xcc20:	xor	ebx, ebx
0xcc22:	jmp	0xcbfd


0xcbf5:	test	eax, eax
0xcbf7:	jne	0xcbfd


0xcbfd:	mov	rcx, qword ptr [rsp + 8]
0xcc02:	xor	rcx, qword ptr fs:[0x28]
0xcc0b:	mov	rax, rbx
0xcc0e:	jne	0xcc24


0xcbf9:	mov	rbx, qword ptr [rsp]
0xcbfd:	mov	rcx, qword ptr [rsp + 8]
0xcc02:	xor	rcx, qword ptr fs:[0x28]
0xcc0b:	mov	rax, rbx
0xcc0e:	jne	0xcc24


0xcc10:	add	rsp, 0x10
0xcc14:	pop	rbx
0xcc15:	ret	


0xcc24:	call	0x2930


0xcb14:	test	rax, rax
0xcb17:	je	0xc9ea


0xcc58:	test	rax, rax
0xcc5b:	mov	rbp, rax
0xcc5e:	je	0xcc6f


0xcc6f:	mov	rcx, qword ptr [rsp + 8]
0xcc74:	xor	rcx, qword ptr fs:[0x28]
0xcc7d:	mov	rax, rbp
0xcc80:	jne	0xce2e


0xcc60:	mov	rax, qword ptr [rsp]
0xcc64:	sub	qword ptr [rbx + 0x20], 1
0xcc69:	cmp	qword ptr [rax], 0
0xcc6d:	je	0xcc90


0xcc86:	add	rsp, 0x10
0xcc8a:	pop	rbx
0xcc8b:	pop	rbp
0xcc8c:	pop	r12
0xcc8e:	ret	


0xce2e:	call	0x2930


0xcc90:	mov	rax, qword ptr [rbx + 0x18]
0xcc94:	sub	rax, 1
0xcc98:	test	rax, rax
0xcc9b:	mov	qword ptr [rbx + 0x18], rax
0xcc9f:	js	0xcda0


0xcda0:	mov	rdx, rax
0xcda3:	pxor	xmm0, xmm0
0xcda7:	shr	rdx, 1
0xcdaa:	and	eax, 1
0xcdad:	or	rdx, rax
0xcdb0:	cvtsi2ss	xmm0, rdx
0xcdb5:	addss	xmm0, xmm0
0xcdb9:	jmp	0xccae


0xcca5:	pxor	xmm0, xmm0
0xcca9:	cvtsi2ss	xmm0, rax
0xccae:	mov	rax, qword ptr [rbx + 0x10]
0xccb2:	mov	rdx, qword ptr [rbx + 0x28]
0xccb6:	test	rax, rax
0xccb9:	js	0xcd80


0xccae:	mov	rax, qword ptr [rbx + 0x10]
0xccb2:	mov	rdx, qword ptr [rbx + 0x28]
0xccb6:	test	rax, rax
0xccb9:	js	0xcd80


0xcd80:	mov	rcx, rax
0xcd83:	pxor	xmm1, xmm1
0xcd87:	shr	rcx, 1
0xcd8a:	and	eax, 1
0xcd8d:	or	rcx, rax
0xcd90:	cvtsi2ss	xmm1, rcx
0xcd95:	addss	xmm1, xmm1
0xcd99:	jmp	0xccc8


0xccbf:	pxor	xmm1, xmm1
0xccc3:	cvtsi2ss	xmm1, rax
0xccc8:	mulss	xmm1, dword ptr [rdx]
0xcccc:	ucomiss	xmm1, xmm0
0xcccf:	jbe	0xcc6f


0xccc8:	mulss	xmm1, dword ptr [rdx]
0xcccc:	ucomiss	xmm1, xmm0
0xcccf:	jbe	0xcc6f


0xccd1:	lea	rdi, [rbx + 0x28]
0xccd5:	call	0xbd70


0xccda:	mov	rax, qword ptr [rbx + 0x10]
0xccde:	mov	rdx, qword ptr [rbx + 0x28]
0xcce2:	test	rax, rax
0xcce5:	js	0xce10


0xce10:	mov	rcx, rax
0xce13:	pxor	xmm0, xmm0
0xce17:	shr	rcx, 1
0xce1a:	and	eax, 1
0xce1d:	or	rcx, rax
0xce20:	cvtsi2ss	xmm0, rcx
0xce25:	addss	xmm0, xmm0
0xce29:	jmp	0xccf4


0xcceb:	pxor	xmm0, xmm0
0xccef:	cvtsi2ss	xmm0, rax
0xccf4:	mov	rax, qword ptr [rbx + 0x18]
0xccf8:	test	rax, rax
0xccfb:	js	0xcdf0


0xccf4:	mov	rax, qword ptr [rbx + 0x18]
0xccf8:	test	rax, rax
0xccfb:	js	0xcdf0


0xcdf0:	mov	rcx, rax
0xcdf3:	pxor	xmm1, xmm1
0xcdf7:	shr	rcx, 1
0xcdfa:	and	eax, 1
0xcdfd:	or	rcx, rax
0xce00:	cvtsi2ss	xmm1, rcx
0xce05:	addss	xmm1, xmm1
0xce09:	jmp	0xcd0a


0xcd01:	pxor	xmm1, xmm1
0xcd05:	cvtsi2ss	xmm1, rax
0xcd0a:	movss	xmm2, dword ptr [rdx]
0xcd0e:	mulss	xmm2, xmm0
0xcd12:	ucomiss	xmm2, xmm1
0xcd15:	jbe	0xcc6f


0xcd0a:	movss	xmm2, dword ptr [rdx]
0xcd0e:	mulss	xmm2, xmm0
0xcd12:	ucomiss	xmm2, xmm1
0xcd15:	jbe	0xcc6f


0xcd1b:	cmp	byte ptr [rdx + 0x10], 0
0xcd1f:	mulss	xmm0, dword ptr [rdx + 4]
0xcd24:	je	0xcde0


0xcde0:	mulss	xmm0, dword ptr [rdx + 8]
0xcde5:	jmp	0xcd2a


0xcd2a:	ucomiss	xmm0, dword ptr [rip + 0x859f]
0xcd31:	jae	0xcdc0


0xcd37:	cvttss2si	rsi, xmm0
0xcd3c:	mov	rdi, rbx
0xcd3f:	call	0xc700


0xcdc0:	subss	xmm0, dword ptr [rip + 0x8508]
0xcdc8:	movabs	rax, 0x8000000000000000
0xcdd2:	cvttss2si	rsi, xmm0
0xcdd7:	xor	rsi, rax
0xcdda:	jmp	0xcd3c


0xcd3c:	mov	rdi, rbx
0xcd3f:	call	0xc700


0xcd44:	test	al, al
0xcd46:	jne	0xcc6f


0xcd4c:	mov	rdi, qword ptr [rbx + 0x48]
0xcd50:	test	rdi, rdi
0xcd53:	je	0xcd69


0xcd69:	mov	qword ptr [rbx + 0x48], 0
0xcd71:	jmp	0xcc6f


0xcd61:	test	r12, r12
0xcd64:	mov	rdi, r12
0xcd67:	jne	0xcd58


0xcd58:	mov	r12, qword ptr [rdi + 8]
0xcd5c:	call	0x2e10


0xc190:	test	al, al
0xc192:	jne	0xc1b0


0xc194:	mov	rbx, qword ptr [rbx + 8]
0xc198:	test	rbx, rbx
0xc19b:	jne	0xc180


0xc1b0:	mov	rsi, qword ptr [rbx]
0xc1b3:	pop	rbx
0xc1b4:	pop	rbp
0xc1b5:	mov	rax, rsi
0xc1b8:	pop	r12
0xc1ba:	ret	


0xc180:	mov	rsi, qword ptr [rbx]
0xc183:	cmp	rsi, rbp
0xc186:	je	0xc19f


0xbc8c:	test	al, al
0xbc8e:	jne	0xbd10


0xbc94:	mov	rax, qword ptr [rbx + 8]
0xbc98:	test	rax, rax
0xbc9b:	je	0xbd60


0xbd10:	mov	rsi, qword ptr [rbx]
0xbd13:	test	r13b, r13b
0xbd16:	je	0xbcfe


0xbca1:	mov	rsi, qword ptr [rax]
0xbca4:	cmp	rbp, rsi
0xbca7:	jne	0xbcc9


0xbca9:	jmp	0xbcdc


0xbcc9:	mov	rdi, rbp
0xbccc:	call	qword ptr [r12 + 0x38]


0xbcdc:	test	r13b, r13b
0xbcdf:	je	0xbcfe


0xbce1:	mov	rdx, qword ptr [rax + 8]
0xbce5:	mov	qword ptr [rbx + 8], rdx
0xbce9:	mov	qword ptr [rax], 0
0xbcf0:	mov	rdx, qword ptr [r12 + 0x48]
0xbcf5:	mov	qword ptr [rax + 8], rdx
0xbcf9:	mov	qword ptr [r12 + 0x48], rax
0xbcfe:	pop	rbx
0xbcff:	mov	rax, rsi
0xbd02:	pop	rbp
0xbd03:	pop	r12
0xbd05:	pop	r13
0xbd07:	pop	r14
0xbd09:	ret	


0xbcd1:	test	al, al
0xbcd3:	je	0xbcb0


0xbcb0:	mov	rbx, qword ptr [rbx + 8]
0xbcb4:	mov	rax, qword ptr [rbx + 8]
0xbcb8:	test	rax, rax
0xbcbb:	je	0xbd60


0xbcd5:	mov	rax, qword ptr [rbx + 8]
0xbcd9:	mov	rsi, qword ptr [rax]
0xbcdc:	test	r13b, r13b
0xbcdf:	je	0xbcfe


0xbcc1:	mov	rsi, qword ptr [rax]
0xbcc4:	cmp	rsi, rbp
0xbcc7:	je	0xbcdc






0x10c00:	mov	r13, qword ptr [rbx + 0x10]
0x10c04:	mov	r12, qword ptr [rbx + 8]
0x10c08:	lea	rsi, [rip + 0x4cee]
0x10c0f:	mov	rbx, qword ptr [rbx]
0x10c12:	mov	edx, 5
0x10c17:	xor	edi, edi
0x10c19:	call	0x28e0


0x10d40:	mov	r9, qword ptr [rbx + 0x10]
0x10d44:	mov	r13, qword ptr [rbx + 0x30]
0x10d48:	lea	rsi, [rip + 0x4d49]
0x10d4f:	mov	r12, qword ptr [rbx + 0x28]
0x10d53:	mov	r15, qword ptr [rbx + 0x20]
0x10d57:	mov	edx, 5
0x10d5c:	mov	r14, qword ptr [rbx + 0x18]
0x10d60:	mov	r8, qword ptr [rbx + 8]
0x10d64:	xor	edi, edi
0x10d66:	mov	qword ptr [rsp + 8], r9
0x10d6b:	mov	rbx, qword ptr [rbx]
0x10d6e:	mov	qword ptr [rsp], r8
0x10d72:	call	0x28e0


0x10b20:	mov	r10, qword ptr [rbx + 0x40]
0x10b24:	mov	r9, qword ptr [rbx + 0x38]
0x10b28:	lea	rsi, [rip + 0x4fc9]
0x10b2f:	mov	rax, qword ptr [rbx + 0x10]
0x10b33:	mov	r8, qword ptr [rbx + 8]
0x10b37:	mov	edx, 5
0x10b3c:	mov	r13, qword ptr [rbx + 0x30]
0x10b40:	mov	r12, qword ptr [rbx + 0x28]
0x10b44:	mov	r15, qword ptr [rbx + 0x20]
0x10b48:	mov	r14, qword ptr [rbx + 0x18]
0x10b4c:	mov	rbx, qword ptr [rbx]
0x10b4f:	mov	qword ptr [rsp + 0x18], r10
0x10b54:	mov	qword ptr [rsp + 0x10], r9
0x10b59:	mov	qword ptr [rsp], rax
0x10b5d:	mov	qword ptr [rsp + 8], r8
0x10b62:	xor	edi, edi
0x10b64:	call	0x28e0


0x10ae6:	add	rsp, 0x28
0x10aea:	pop	rbx
0x10aeb:	pop	rbp
0x10aec:	pop	r12
0x10aee:	pop	r13
0x10af0:	pop	r14
0x10af2:	pop	r15
0x10af4:	ret	


0x10ca8:	mov	r15, qword ptr [rbx + 0x20]
0x10cac:	lea	rsi, [rip + 0x4d95]
0x10cb3:	mov	edx, 5
0x10cb8:	xor	edi, edi
0x10cba:	mov	r14, qword ptr [rbx + 0x18]
0x10cbe:	mov	r13, qword ptr [rbx + 0x10]
0x10cc2:	mov	r12, qword ptr [rbx + 8]
0x10cc6:	mov	rbx, qword ptr [rbx]
0x10cc9:	call	0x28e0


0x10c50:	lea	rsi, [rip + 0x4dd1]
0x10c57:	mov	edx, 5
0x10c5c:	xor	edi, edi
0x10c5e:	mov	r14, qword ptr [rbx + 0x18]
0x10c62:	mov	r13, qword ptr [rbx + 0x10]
0x10c66:	mov	r12, qword ptr [rbx + 8]
0x10c6a:	mov	rbx, qword ptr [rbx]
0x10c6d:	call	0x28e0


0x10a70:	mov	r9, qword ptr [rbx + 0x38]
0x10a74:	mov	rax, qword ptr [rbx + 0x10]
0x10a78:	lea	rsi, [rip + 0x5049]
0x10a7f:	mov	r8, qword ptr [rbx + 8]
0x10a83:	mov	edx, 5
0x10a88:	xor	edi, edi
0x10a8a:	mov	r13, qword ptr [rbx + 0x30]
0x10a8e:	mov	r12, qword ptr [rbx + 0x28]
0x10a92:	mov	qword ptr [rsp + 0x10], r9
0x10a97:	mov	r15, qword ptr [rbx + 0x20]
0x10a9b:	mov	r14, qword ptr [rbx + 0x18]
0x10a9f:	mov	qword ptr [rsp], rax
0x10aa3:	mov	qword ptr [rsp + 8], r8
0x10aa8:	mov	rbx, qword ptr [rbx]
0x10aab:	call	0x28e0


0x10bb8:	mov	r12, qword ptr [rbx + 8]
0x10bbc:	lea	rsi, [rip + 0x4d23]
0x10bc3:	mov	rbx, qword ptr [rbx]
0x10bc6:	mov	edx, 5
0x10bcb:	xor	edi, edi
0x10bcd:	call	0x28e0


0x10b78:	mov	rbx, qword ptr [rbx]
0x10b7b:	lea	rsi, [rip + 0x4d54]
0x10b82:	mov	edx, 5
0x10b87:	xor	edi, edi
0x10b89:	call	0x28e0


0x10cd8:	mov	r8, qword ptr [rbx + 8]
0x10cdc:	mov	r12, qword ptr [rbx + 0x28]
0x10ce0:	lea	rsi, [rip + 0x4d89]
0x10ce7:	mov	r15, qword ptr [rbx + 0x20]
0x10ceb:	mov	r14, qword ptr [rbx + 0x18]
0x10cef:	mov	edx, 5
0x10cf4:	mov	r13, qword ptr [rbx + 0x10]
0x10cf8:	xor	edi, edi
0x10cfa:	mov	rbx, qword ptr [rbx]
0x10cfd:	mov	qword ptr [rsp], r8
0x10d01:	call	0x28e0


0x10d06:	sub	rsp, 8
0x10d0a:	mov	r9, r13
0x10d0d:	push	r12
0x10d0f:	push	r15
0x10d11:	push	r14
0x10d13:	mov	r8, qword ptr [rsp + 0x20]
0x10d18:	mov	rcx, rbx
0x10d1b:	mov	rdx, rax
0x10d1e:	mov	rdi, rbp
0x10d21:	mov	esi, 1
0x10d26:	xor	eax, eax
0x10d28:	call	0x2db0


0x10d2d:	add	rsp, 0x20
0x10d31:	add	rsp, 0x28
0x10d35:	pop	rbx
0x10d36:	pop	rbp
0x10d37:	pop	r12
0x10d39:	pop	r13
0x10d3b:	pop	r14
0x10d3d:	pop	r15
0x10d3f:	ret	


0x10b8e:	add	rsp, 0x28
0x10b92:	mov	rcx, rbx
0x10b95:	mov	rdi, rbp
0x10b98:	pop	rbx
0x10b99:	pop	rbp
0x10b9a:	pop	r12
0x10b9c:	pop	r13
0x10b9e:	pop	r14
0x10ba0:	pop	r15
0x10ba2:	mov	rdx, rax
0x10ba5:	mov	esi, 1
0x10baa:	xor	eax, eax
0x10bac:	jmp	0x2db0


0x10bd2:	add	rsp, 0x28
0x10bd6:	mov	r8, r12
0x10bd9:	mov	rcx, rbx
0x10bdc:	mov	rdi, rbp
0x10bdf:	mov	rdx, rax
0x10be2:	mov	esi, 1
0x10be7:	pop	rbx
0x10be8:	pop	rbp
0x10be9:	pop	r12
0x10beb:	pop	r13
0x10bed:	pop	r14
0x10bef:	pop	r15
0x10bf1:	xor	eax, eax
0x10bf3:	jmp	0x2db0


0x10ab0:	sub	rsp, 8
0x10ab4:	mov	r9, qword ptr [rsp + 0x18]
0x10ab9:	mov	rdx, rax
0x10abc:	mov	rcx, rbx
0x10abf:	mov	esi, 1
0x10ac4:	mov	rdi, rbp
0x10ac7:	xor	eax, eax
0x10ac9:	push	r9
0x10acb:	push	r13
0x10acd:	push	r12
0x10acf:	push	r15
0x10ad1:	push	r14
0x10ad3:	mov	r9, qword ptr [rsp + 0x30]
0x10ad8:	mov	r8, qword ptr [rsp + 0x38]
0x10add:	call	0x2db0


0x10c72:	sub	rsp, 8
0x10c76:	push	r14
0x10c78:	mov	rdx, rax
0x10c7b:	mov	r9, r13
0x10c7e:	mov	r8, r12
0x10c81:	mov	rcx, rbx
0x10c84:	mov	rdi, rbp
0x10c87:	mov	esi, 1
0x10c8c:	xor	eax, eax
0x10c8e:	call	0x2db0


0x10c93:	pop	rax
0x10c94:	pop	rdx
0x10c95:	add	rsp, 0x28
0x10c99:	pop	rbx
0x10c9a:	pop	rbp
0x10c9b:	pop	r12
0x10c9d:	pop	r13
0x10c9f:	pop	r14
0x10ca1:	pop	r15
0x10ca3:	ret	


0x10cce:	push	r15
0x10cd0:	jmp	0x10c76


0x10c76:	push	r14
0x10c78:	mov	rdx, rax
0x10c7b:	mov	r9, r13
0x10c7e:	mov	r8, r12
0x10c81:	mov	rcx, rbx
0x10c84:	mov	rdi, rbp
0x10c87:	mov	esi, 1
0x10c8c:	xor	eax, eax
0x10c8e:	call	0x2db0


0x10d77:	push	r13
0x10d79:	push	r12
0x10d7b:	push	r15
0x10d7d:	push	r14
0x10d7f:	mov	r9, qword ptr [rsp + 0x28]
0x10d84:	jmp	0x10d13


0x10d13:	mov	r8, qword ptr [rsp + 0x20]
0x10d18:	mov	rcx, rbx
0x10d1b:	mov	rdx, rax
0x10d1e:	mov	rdi, rbp
0x10d21:	mov	esi, 1
0x10d26:	xor	eax, eax
0x10d28:	call	0x2db0


0x10c1e:	add	rsp, 0x28
0x10c22:	mov	r9, r13
0x10c25:	mov	r8, r12
0x10c28:	mov	rcx, rbx
0x10c2b:	mov	rdi, rbp
0x10c2e:	mov	rdx, rax
0x10c31:	pop	rbx
0x10c32:	pop	rbp
0x10c33:	pop	r12
0x10c35:	pop	r13
0x10c37:	pop	r14
0x10c39:	pop	r15
0x10c3b:	mov	esi, 1
0x10c40:	xor	eax, eax
0x10c42:	jmp	0x2db0


0xdda0:	sub	rsp, 8
0xdda4:	mov	rcx, rbp
0xdda7:	mov	rsi, r13
0xddaa:	push	qword ptr [rsp + 0x68]
0xddae:	push	qword ptr [rsp + 0x78]
0xddb2:	mov	rdi, r14
0xddb5:	push	0
0xddb7:	mov	r9d, dword ptr [rsp + 0x98]
0xddbf:	mov	r8d, dword ptr [rsp + 0x28]
0xddc4:	mov	rdx, qword ptr [rsp + 0x30]
0xddc9:	and	r9d, 0xfffffffd
0xddcd:	call	0xd200


0xddd2:	add	rsp, 0x20
0xddd6:	mov	r15, rax
0xddd9:	mov	rbx, qword ptr [rsp + 0xa8]
0xdde1:	xor	rbx, qword ptr fs:[0x28]
0xddea:	mov	rax, r15
0xdded:	jne	0xe3f3


0xddf3:	add	rsp, 0xb8
0xddfa:	pop	rbx
0xddfb:	pop	rbp
0xddfc:	pop	r12
0xddfe:	pop	r13
0xde00:	pop	r14
0xde02:	pop	r15
0xde04:	ret	


0xe3f3:	call	0x2930


0xe39d:	sub	rsp, 8
0xe3a1:	mov	r8d, 5
0xe3a7:	mov	rcx, r11
0xe3aa:	push	qword ptr [rsp + 0x68]
0xe3ae:	push	qword ptr [rsp + 0x78]
0xe3b2:	mov	rdi, r14
0xe3b5:	push	qword ptr [rsp + 0x38]
0xe3b9:	mov	r9d, dword ptr [rsp + 0x98]
0xe3c1:	mov	rdx, qword ptr [rsp + 0x30]
0xe3c6:	mov	rsi, qword ptr [rsp + 0x70]
0xe3cb:	call	0xd200


0xe3d0:	add	rsp, 0x20
0xe3d4:	mov	r15, rax
0xe3d7:	jmp	0xddd9


0xddd9:	mov	rbx, qword ptr [rsp + 0xa8]
0xdde1:	xor	rbx, qword ptr fs:[0x28]
0xddea:	mov	rax, r15
0xdded:	jne	0xe3f3


0x2730:	push	qword ptr [rip + 0x21751a]
0x2736:	jmp	qword ptr [rip + 0x21751c]


0x273c:	nop	dword ptr [rax]


0x2746:	push	0
0x274b:	jmp	0x2730


0x2756:	push	1
0x275b:	jmp	0x2730


0x2766:	push	2
0x276b:	jmp	0x2730


0x2776:	push	3
0x277b:	jmp	0x2730


0x2786:	push	4
0x278b:	jmp	0x2730


0x2796:	push	5
0x279b:	jmp	0x2730


0x27a6:	push	6
0x27ab:	jmp	0x2730


0x27b6:	push	7
0x27bb:	jmp	0x2730


0x27c6:	push	8
0x27cb:	jmp	0x2730


0x27d6:	push	9
0x27db:	jmp	0x2730


0x27e6:	push	0xa
0x27eb:	jmp	0x2730


0x27f6:	push	0xb
0x27fb:	jmp	0x2730


0x2806:	push	0xc
0x280b:	jmp	0x2730


0x2816:	push	0xd
0x281b:	jmp	0x2730


0x2826:	push	0xe
0x282b:	jmp	0x2730


0x2836:	push	0xf
0x283b:	jmp	0x2730


0x2846:	push	0x10
0x284b:	jmp	0x2730


0x2856:	push	0x11
0x285b:	jmp	0x2730


0x2866:	push	0x12
0x286b:	jmp	0x2730


0x2876:	push	0x13
0x287b:	jmp	0x2730


0x2886:	push	0x14
0x288b:	jmp	0x2730


0x2896:	push	0x15
0x289b:	jmp	0x2730


0x28a6:	push	0x16
0x28ab:	jmp	0x2730


0x28b6:	push	0x17
0x28bb:	jmp	0x2730


0x28c6:	push	0x18
0x28cb:	jmp	0x2730


0x28d6:	push	0x19
0x28db:	jmp	0x2730


0x28e6:	push	0x1a
0x28eb:	jmp	0x2730


0x28f6:	push	0x1b
0x28fb:	jmp	0x2730


0x2906:	push	0x1c
0x290b:	jmp	0x2730


0x2916:	push	0x1d
0x291b:	jmp	0x2730


0x2926:	push	0x1e
0x292b:	jmp	0x2730


0x2936:	push	0x1f
0x293b:	jmp	0x2730


0x2946:	push	0x20
0x294b:	jmp	0x2730


0x2956:	push	0x21
0x295b:	jmp	0x2730


0x2966:	push	0x22
0x296b:	jmp	0x2730


0x2976:	push	0x23
0x297b:	jmp	0x2730


0x2986:	push	0x24
0x298b:	jmp	0x2730


0x2996:	push	0x25
0x299b:	jmp	0x2730


0x29a6:	push	0x26
0x29ab:	jmp	0x2730


0x29b6:	push	0x27
0x29bb:	jmp	0x2730


0x29c6:	push	0x28
0x29cb:	jmp	0x2730


0x29d6:	push	0x29
0x29db:	jmp	0x2730


0x29e6:	push	0x2a
0x29eb:	jmp	0x2730


0x29f6:	push	0x2b
0x29fb:	jmp	0x2730


0x2a06:	push	0x2c
0x2a0b:	jmp	0x2730


0x2a16:	push	0x2d
0x2a1b:	jmp	0x2730


0x2a26:	push	0x2e
0x2a2b:	jmp	0x2730


0x2a36:	push	0x2f
0x2a3b:	jmp	0x2730


0x2a46:	push	0x30
0x2a4b:	jmp	0x2730


0x2a56:	push	0x31
0x2a5b:	jmp	0x2730


0x2a66:	push	0x32
0x2a6b:	jmp	0x2730


0x2a76:	push	0x33
0x2a7b:	jmp	0x2730


0x2a86:	push	0x34
0x2a8b:	jmp	0x2730


0x2a96:	push	0x35
0x2a9b:	jmp	0x2730


0x2aa6:	push	0x36
0x2aab:	jmp	0x2730


0x2ab6:	push	0x37
0x2abb:	jmp	0x2730


0x2ac6:	push	0x38
0x2acb:	jmp	0x2730


0x2ad6:	push	0x39
0x2adb:	jmp	0x2730


0x2ae6:	push	0x3a
0x2aeb:	jmp	0x2730


0x2af6:	push	0x3b
0x2afb:	jmp	0x2730


0x2b06:	push	0x3c
0x2b0b:	jmp	0x2730


0x2b16:	push	0x3d
0x2b1b:	jmp	0x2730


0x2b26:	push	0x3e
0x2b2b:	jmp	0x2730


0x2b36:	push	0x3f
0x2b3b:	jmp	0x2730


0x2b46:	push	0x40
0x2b4b:	jmp	0x2730


0x2b56:	push	0x41
0x2b5b:	jmp	0x2730


0x2b66:	push	0x42
0x2b6b:	jmp	0x2730


0x2b76:	push	0x43
0x2b7b:	jmp	0x2730


0x2b86:	push	0x44
0x2b8b:	jmp	0x2730


0x2b96:	push	0x45
0x2b9b:	jmp	0x2730


0x2ba6:	push	0x46
0x2bab:	jmp	0x2730


0x2bb6:	push	0x47
0x2bbb:	jmp	0x2730


0x2bc6:	push	0x48
0x2bcb:	jmp	0x2730


0x2bd6:	push	0x49
0x2bdb:	jmp	0x2730


0x2be6:	push	0x4a
0x2beb:	jmp	0x2730


0x2bf6:	push	0x4b
0x2bfb:	jmp	0x2730


0x2c06:	push	0x4c
0x2c0b:	jmp	0x2730


0x2c16:	push	0x4d
0x2c1b:	jmp	0x2730


0x2c26:	push	0x4e
0x2c2b:	jmp	0x2730


0x2c36:	push	0x4f
0x2c3b:	jmp	0x2730


0x2c46:	push	0x50
0x2c4b:	jmp	0x2730


0x2c56:	push	0x51
0x2c5b:	jmp	0x2730


0x2c66:	push	0x52
0x2c6b:	jmp	0x2730


0x2c76:	push	0x53
0x2c7b:	jmp	0x2730


0x2c86:	push	0x54
0x2c8b:	jmp	0x2730


0x2c96:	push	0x55
0x2c9b:	jmp	0x2730


0x2ca6:	push	0x56
0x2cab:	jmp	0x2730


0x2cb6:	push	0x57
0x2cbb:	jmp	0x2730


0x2cc6:	push	0x58
0x2ccb:	jmp	0x2730


0x2cd6:	push	0x59
0x2cdb:	jmp	0x2730


0x2ce6:	push	0x5a
0x2ceb:	jmp	0x2730


0x2cf6:	push	0x5b
0x2cfb:	jmp	0x2730


0x2d06:	push	0x5c
0x2d0b:	jmp	0x2730


0x2d16:	push	0x5d
0x2d1b:	jmp	0x2730


0x2d26:	push	0x5e
0x2d2b:	jmp	0x2730


0x2d36:	push	0x5f
0x2d3b:	jmp	0x2730


0x2d46:	push	0x60
0x2d4b:	jmp	0x2730


0x2d56:	push	0x61
0x2d5b:	jmp	0x2730


0x2d66:	push	0x62
0x2d6b:	jmp	0x2730


0x2d76:	push	0x63
0x2d7b:	jmp	0x2730


0x2d86:	push	0x64
0x2d8b:	jmp	0x2730


0x2d96:	push	0x65
0x2d9b:	jmp	0x2730


0x2da6:	push	0x66
0x2dab:	jmp	0x2730


0x2db6:	push	0x67
0x2dbb:	jmp	0x2730


0x2dc0:	jmp	qword ptr [rip + 0x2171da]




0x2dc6:	push	0x68
0x2dcb:	jmp	0x2730


0x2dd6:	push	0x69
0x2ddb:	jmp	0x2730


0x2de0:	jmp	qword ptr [rip + 0x2171ca]




0x2de6:	push	0x6a
0x2deb:	jmp	0x2730


0x2df6:	push	0x6b
0x2dfb:	jmp	0x2730


0x2e00:	jmp	qword ptr [rip + 0x2171ba]




0x2e06:	push	0x6c
0x2e0b:	jmp	0x2730


0x2e16:	nop	


0x3052:	mov	rdi, qword ptr [rip + 0x217067]
0x3059:	test	rdi, rdi
0x305c:	jne	0x334d


0x3062:	mov	byte ptr [rsp + 0x4d], r14b
0x3067:	mov	byte ptr [rsp + 0x4e], r14b
0x306c:	mov	byte ptr [rsp + 0x4f], r14b
0x3071:	mov	byte ptr [rsp + 0x54], r14b
0x3076:	jmp	0x3018


0x334d:	mov	edx, 1
0x3352:	mov	rsi, r15
0x3355:	call	0x37e0


0x3018:	lea	rdx, [rip + 0xfa86]
0x301f:	xor	r8d, r8d
0x3022:	mov	rcx, r13
0x3025:	mov	rsi, rbp
0x3028:	mov	edi, r12d
0x302b:	call	0x2950


0x335a:	mov	byte ptr [rsp + 0x54], r14b
0x335f:	jmp	0x3018


0x3078:	mov	dword ptr [rsp + 0x38], 2
0x3080:	jmp	0x3018


0x3082:	mov	byte ptr [rsp + 0x47], r14b
0x3087:	jmp	0x3018


0x3089:	mov	dword ptr [rsp + 0x38], 3
0x3091:	jmp	0x3018


0x3093:	mov	byte ptr [rsp + 0x46], r14b
0x3098:	jmp	0x3018


0x309d:	mov	byte ptr [rsp + 0x52], r14b
0x30a2:	mov	dword ptr [rsp + 0x34], 2
0x30aa:	jmp	0x3018


0x30af:	mov	rax, qword ptr [rip + 0x21700a]
0x30b6:	mov	byte ptr [rsp + 0x1d], 1
0x30bb:	test	rax, rax
0x30be:	cmove	rax, qword ptr [rsp + 8]
0x30c4:	mov	qword ptr [rsp + 8], rax
0x30c9:	jmp	0x3018


0x30ce:	cmp	byte ptr [rip + 0x21707d], 0
0x30d5:	mov	dword ptr [rsp + 0x34], 2
0x30dd:	mov	byte ptr [rsp + 0x52], r14b
0x30e2:	mov	byte ptr [rsp + 0x4d], r14b
0x30e7:	mov	byte ptr [rsp + 0x4e], r14b
0x30ec:	mov	byte ptr [rsp + 0x4f], r14b
0x30f1:	mov	byte ptr [rsp + 0x54], r14b
0x30f6:	je	0x30fd


0x30fd:	mov	byte ptr [rsp + 0x57], r14b
0x3102:	mov	byte ptr [rsp + 0x59], r14b
0x3107:	mov	byte ptr [rsp + 0x5a], r14b
0x310c:	jmp	0x3018


0x30f8:	mov	byte ptr [rsp + 0x55], r14b
0x30fd:	mov	byte ptr [rsp + 0x57], r14b
0x3102:	mov	byte ptr [rsp + 0x59], r14b
0x3107:	mov	byte ptr [rsp + 0x5a], r14b
0x310c:	jmp	0x3018


0x3111:	cmp	byte ptr [rip + 0x21703a], 0
0x3118:	mov	rax, qword ptr [rip + 0x216fa1]
0x311f:	je	0x3364


0x3364:	test	rax, rax
0x3367:	je	0x3018


0x3125:	test	rax, rax
0x3128:	je	0x3571


0x336d:	lea	rsi, [rip + 0x111f4]
0x3374:	xor	edi, edi
0x3376:	mov	edx, 5
0x337b:	call	0x28e0


0x3571:	mov	byte ptr [rsp + 0x51], r14b
0x3576:	jmp	0x3018


0x312e:	mov	qword ptr [rsp + 0x20], rax
0x3133:	jmp	0x3018


0x3380:	xor	esi, esi
0x3382:	mov	rdx, rax
0x3385:	xor	edi, edi
0x3387:	xor	eax, eax
0x3389:	call	0x2cb0


0x338e:	jmp	0x3018


0x3138:	mov	byte ptr [rsp + 0x1e], 1
0x313d:	jmp	0x3018


0x3142:	mov	rax, qword ptr [rip + 0x216f77]
0x3149:	mov	byte ptr [rsp + 0x1d], 1
0x314e:	mov	qword ptr [rsp + 0x10], rax
0x3153:	jmp	0x3018


0x3158:	mov	byte ptr [rsp + 0x5a], r14b
0x315d:	jmp	0x3018


0x3162:	mov	dword ptr [rsp + 0x34], 2
0x316a:	jmp	0x3018


0x316f:	mov	dword ptr [rsp + 0x34], 4
0x3177:	jmp	0x3018


0x317c:	mov	dword ptr [rsp + 0x34], 3
0x3184:	jmp	0x3018


0x3189:	lea	rax, [rip + 0xf908]
0x3190:	mov	rdi, qword ptr [rip + 0x216f11]
0x3197:	mov	rcx, qword ptr [rip + 0x216e82]
0x319e:	push	0
0x31a0:	lea	r9, [rip + 0xf8cf]
0x31a7:	lea	r8, [rip + 0xf8d8]
0x31ae:	push	rax
0x31af:	lea	rdx, [rip + 0xf808]
0x31b6:	lea	rsi, [rip + 0xf788]
0x31bd:	xor	eax, eax
0x31bf:	call	0x10e80


0x31c4:	xor	edi, edi
0x31c6:	call	0x2d90


0x31cb:	mov	byte ptr [rsp + 0x45], r14b
0x31d0:	jmp	0x3018


0x31d5:	mov	byte ptr [rip + 0x216f74], r14b
0x31dc:	jmp	0x3018


0x31e1:	mov	r9, qword ptr [rip + 0x216e40]
0x31e8:	mov	rsi, qword ptr [rip + 0x216ed1]
0x31ef:	lea	rdx, [rip + 0x21676a]
0x31f6:	lea	rcx, [rip + 0xfe83]
0x31fd:	lea	rdi, [rip + 0xf85f]
0x3204:	mov	r8d, 4
0x320a:	call	0xaa40


0x320f:	lea	rdx, [rip + 0xfe6a]
0x3216:	mov	eax, dword ptr [rdx + rax*4]
0x3219:	mov	dword ptr [rsp + 0x3c], eax
0x321d:	jmp	0x3018


0x3222:	mov	rsi, qword ptr [rip + 0x216e97]
0x3229:	test	rsi, rsi
0x322c:	je	0x3393


0x3393:	mov	dword ptr [rsp + 0x68], 2
0x339b:	jmp	0x3018


0x3232:	mov	r9, qword ptr [rip + 0x216def]
0x3239:	lea	rdx, [rip + 0x216700]
0x3240:	lea	rcx, [rip + 0xfe29]
0x3247:	lea	rdi, [rip + 0xf81e]
0x324e:	mov	r8d, 4
0x3254:	call	0xaa40


0x3259:	lea	rdx, [rip + 0xfe10]
0x3260:	mov	eax, dword ptr [rdx + rax*4]
0x3263:	mov	dword ptr [rsp + 0x68], eax
0x3267:	jmp	0x3018


0x326c:	mov	byte ptr [rip + 0x216ede], r14b
0x3273:	jmp	0x3018


0x3278:	mov	rdi, qword ptr [rip + 0x216e41]
0x327f:	xor	edx, edx
0x3281:	mov	rsi, r15
0x3284:	call	0x37e0


0x3289:	jmp	0x3018


0x328e:	mov	byte ptr [rsp + 0x1f], 1
0x3293:	jmp	0x3018


0x3298:	mov	byte ptr [rsp + 0x53], 0
0x329d:	jmp	0x3018


0x32a2:	mov	byte ptr [rsp + 0x4c], r14b
0x32a7:	jmp	0x3018


0x32ac:	mov	byte ptr [rsp + 0x5e], r14b
0x32b1:	jmp	0x3018


0x32b6:	mov	byte ptr [rsp + 0x5d], r14b
0x32bb:	jmp	0x3018


0x32c0:	cmp	qword ptr [rsp], 0
0x32c5:	jne	0x35f6


0x32cb:	mov	rdx, qword ptr [rsp + 0x28]
0x32d0:	mov	rsi, qword ptr [rip + 0x216de9]
0x32d7:	mov	edi, 1
0x32dc:	call	0x2ba0


0x35f6:	lea	rsi, [rip + 0x10f43]
0x35fd:	mov	edx, 5
0x3602:	xor	edi, edi
0x3604:	call	0x28e0


0x3609:	xor	esi, esi
0x360b:	mov	rdx, rax
0x360e:	mov	edi, 1
0x3613:	xor	eax, eax
0x3615:	call	0x2cb0


0x32e1:	test	eax, eax
0x32e3:	jne	0x3685


0x32e9:	mov	rax, qword ptr [rip + 0x216dd0]
0x32f0:	mov	qword ptr [rsp], rax
0x32f4:	mov	eax, dword ptr [rsp + 0x98]
0x32fb:	and	eax, 0xf000
0x3300:	cmp	eax, 0x4000
0x3305:	je	0x3018


0x330b:	mov	rsi, qword ptr [rsp]
0x330f:	mov	edi, 4
0x3314:	call	0xeab0


0x3319:	lea	rsi, [rip + 0xf6fb]
0x3320:	mov	rbx, rax
0x3323:	mov	edx, 5
0x3328:	xor	edi, edi
0x332a:	call	0x28e0


0x332f:	mov	rcx, rbx
0x3332:	mov	rdx, rax
0x3335:	xor	esi, esi
0x3337:	mov	edi, 1
0x333c:	xor	eax, eax
0x333e:	call	0x2cb0


0x3343:	mov	byte ptr [rsp + 0x5c], r14b
0x3348:	jmp	0x3018


0x36fa:	hlt	


0x36fb:	nop	dword ptr [rax + rax]


0x3732:	nop	dword ptr [rax]
0x3736:	nop	word ptr cs:[rax + rax]


0x3782:	nop	dword ptr [rax]
0x3786:	nop	word ptr cs:[rax + rax]


0x37ca:	nop	word ptr [rax + rax]


0x37da:	nop	word ptr [rax + rax]


0x38a8:	mov	rdi, qword ptr [rsp + 8]
0x38ad:	add	rsp, 0x18
0x38b1:	pop	rbx
0x38b2:	pop	rbp
0x38b3:	pop	r12
0x38b5:	pop	r13
0x38b7:	pop	r14
0x38b9:	pop	r15
0x38bb:	jmp	0x2e10


0x3830:	mov	esi, 0x2c
0x3835:	mov	rdi, r15
0x3838:	xor	r14d, r14d
0x383b:	call	0x2970


0x38c0:	mov	byte ptr [rbp + 0x26], bl
0x38c3:	mov	byte ptr [rbp + 0x25], bl
0x38c6:	jmp	0x38a0


0x38a0:	test	r14, r14
0x38a3:	mov	r15, r14
0x38a6:	jne	0x3830


0x3918:	mov	byte ptr [rbp + 0x27], bl
0x391b:	jmp	0x38a0


0x3915:	mov	byte ptr [rbp + 0x25], bl
0x3918:	mov	byte ptr [rbp + 0x27], bl
0x391b:	jmp	0x38a0


0x3922:	nop	dword ptr [rax]
0x3926:	nop	word ptr cs:[rax + rax]


0x421a:	nop	word ptr [rax + rax]


0x47da:	nop	word ptr [rax + rax]


0x4ced:	nop	dword ptr [rax]


0x4d34:	nop	
0x4d36:	nop	word ptr cs:[rax + rax]


0x4de5:	nop	
0x4de6:	nop	word ptr cs:[rax + rax]


0x4e27:	nop	word ptr [rax + rax]


0x4ee6:	nop	word ptr cs:[rax + rax]


0x4ff5:	nop	
0x4ff6:	nop	word ptr cs:[rax + rax]


0x514b:	nop	dword ptr [rax + rax]


0x520e:	nop	


0x561e:	nop	


0x5765:	nop	
0x5766:	nop	word ptr cs:[rax + rax]


0x579b:	nop	dword ptr [rax + rax]


0x57cb:	nop	dword ptr [rax + rax]


0x5804:	nop	
0x5806:	nop	word ptr cs:[rax + rax]


0x5834:	nop	
0x5836:	nop	word ptr cs:[rax + rax]


0x5a4c:	nop	dword ptr [rax]


0x5a7a:	nop	word ptr [rax + rax]


0x9b8c:	nop	dword ptr [rax]


0x9cf5:	nop	word ptr cs:[rax + rax]
0x9cff:	nop	


0x9d0c:	nop	dword ptr [rax]


0x9d2c:	nop	dword ptr [rax]


0x9d46:	nop	word ptr cs:[rax + rax]


0x9dba:	nop	word ptr [rax + rax]


0x9e19:	nop	dword ptr [rax]


0x9e99:	nop	dword ptr [rax]


0x9edb:	nop	dword ptr [rax + rax]


0x9eec:	nop	dword ptr [rax]


0x9f1a:	nop	word ptr [rax + rax]


0xa22d:	nop	dword ptr [rax]


0xa248:	nop	dword ptr [rax + rax]


0xa2a8:	nop	dword ptr [rax + rax]


0xa2c1:	nop	dword ptr [rax + rax]
0xa2c6:	nop	word ptr cs:[rax + rax]


0xa431:	nop	dword ptr [rax + rax]
0xa436:	nop	word ptr cs:[rax + rax]


0xa592:	nop	word ptr cs:[rax + rax]
0xa59c:	nop	dword ptr [rax]


0xa62c:	nop	dword ptr [rax]


0xa76f:	nop	


0xa77a:	nop	word ptr [rax + rax]


0xa896:	nop	word ptr cs:[rax + rax]


0xa913:	nop	dword ptr [rax]
0xa916:	nop	word ptr cs:[rax + rax]


0xaaad:	nop	dword ptr [rax]


0xaafd:	nop	dword ptr [rax]


0xab46:	nop	word ptr cs:[rax + rax]


0xb162:	nop	word ptr cs:[rax + rax]
0xb16c:	nop	dword ptr [rax]


0xb17a:	nop	word ptr [rax + rax]


0xb1b3:	nop	dword ptr [rax]
0xb1b6:	nop	word ptr cs:[rax + rax]


0xb1da:	nop	word ptr [rax + rax]


0xb1f6:	nop	word ptr cs:[rax + rax]


0xb24a:	nop	word ptr [rax + rax]


0xb2c8:	nop	dword ptr [rax + rax]


0xb3d7:	nop	word ptr [rax + rax]


0xb3e8:	nop	dword ptr [rax + rax]


0xb3f8:	nop	dword ptr [rax + rax]


0xb4a4:	nop	word ptr cs:[rax + rax]
0xb4ae:	nop	


0xb4c8:	nop	dword ptr [rax + rax]


0xb52d:	nop	dword ptr [rax]


0xb58a:	nop	word ptr [rax + rax]


0xb5ec:	nop	dword ptr [rax]


0xb637:	nop	word ptr [rax + rax]


0xb673:	nop	word ptr cs:[rax + rax]
0xb67d:	nop	dword ptr [rax]


0xb685:	nop	
0xb686:	nop	word ptr cs:[rax + rax]


0xb6b2:	nop	word ptr cs:[rax + rax]
0xb6bc:	nop	dword ptr [rax]


0xb72e:	nop	


0xb7b7:	nop	word ptr [rax + rax]


0xb816:	nop	word ptr cs:[rax + rax]


0xb9a3:	nop	dword ptr [rax]
0xb9a6:	nop	word ptr cs:[rax + rax]


0xb9b8:	nop	dword ptr [rax + rax]


0xb9d8:	nop	dword ptr [rax + rax]


0xbadf:	nop	


0xbb56:	nop	word ptr cs:[rax + rax]


0xbbf3:	nop	dword ptr [rax]
0xbbf6:	nop	word ptr cs:[rax + rax]


0xbc17:	nop	word ptr [rax + rax]


0xbc42:	nop	dword ptr [rax]
0xbc46:	nop	word ptr cs:[rax + rax]


0xbd6e:	nop	


0xbde7:	nop	word ptr [rax + rax]


0xbf35:	nop	
0xbf36:	nop	word ptr cs:[rax + rax]


0xbf45:	nop	
0xbf46:	nop	word ptr cs:[rax + rax]


0xbf55:	nop	
0xbf56:	nop	word ptr cs:[rax + rax]


0xbfa9:	nop	dword ptr [rax]


0xc008:	nop	dword ptr [rax + rax]


0xc157:	nop	word ptr [rax + rax]


0xc1bb:	nop	dword ptr [rax + rax]


0xc201:	nop	dword ptr [rax + rax]
0xc206:	nop	word ptr cs:[rax + rax]


0xc282:	nop	dword ptr [rax]
0xc286:	nop	word ptr cs:[rax + rax]


0xc2f5:	nop	
0xc2f6:	nop	word ptr cs:[rax + rax]


0xc36a:	nop	word ptr [rax + rax]


0xc3a1:	nop	dword ptr [rax + rax]
0xc3a6:	nop	word ptr cs:[rax + rax]


0xc584:	nop	
0xc586:	nop	word ptr cs:[rax + rax]


0xc6f6:	nop	word ptr cs:[rax + rax]


0xc93e:	nop	


0xcbc4:	nop	
0xcbc6:	nop	word ptr cs:[rax + rax]


0xcc29:	nop	dword ptr [rax]


0xce33:	nop	word ptr cs:[rax + rax]
0xce3d:	nop	dword ptr [rax]


0xce67:	nop	word ptr [rax + rax]


0xce7d:	nop	dword ptr [rax]


0xceae:	nop	


0xcee3:	nop	dword ptr [rax]
0xcee6:	nop	word ptr cs:[rax + rax]


0xcf05:	nop	word ptr cs:[rax + rax]
0xcf0f:	nop	


0xd02f:	nop	


0xd0a4:	nop	word ptr cs:[rax + rax]
0xd0ae:	nop	


0xd104:	nop	word ptr cs:[rax + rax]
0xd10e:	nop	


0xd1f7:	nop	word ptr [rax + rax]


0xd293:	mov	byte ptr [rsp + 0xe], 1
0xd298:	mov	byte ptr [rsp + 0x7c], 0
0xd29d:	xor	r12d, r12d
0xd2a0:	mov	qword ptr [rsp + 0x50], 0
0xd2a9:	mov	byte ptr [rsp + 0xf], 1
0xd2ae:	mov	byte ptr [rsp + 0xd], 0
0xd2b3:	lea	rax, [rip + 0x807b]
0xd2ba:	mov	qword ptr [rsp + 0x18], 1
0xd2c3:	xor	r15d, r15d
0xd2c6:	mov	dword ptr [rsp + 8], 2
0xd2ce:	mov	qword ptr [rsp + 0x48], rax
0xd2d3:	xor	r11d, r11d
0xd2d6:	mov	rax, rbp
0xd2d9:	mov	r8d, r12d
0xd2dc:	mov	rbp, r11
0xd2df:	mov	r11, rax
0xd2e2:	nop	word ptr [rax + rax]
0xd2e8:	cmp	r11, rbp
0xd2eb:	setne	r12b
0xd2ef:	cmp	r11, -1
0xd2f3:	jne	0xd302


0xd2f5:	mov	rax, qword ptr [rsp + 0x10]
0xd2fa:	cmp	byte ptr [rax + rbp], 0
0xd2fe:	setne	r12b
0xd302:	test	r12b, r12b
0xd305:	je	0xd960


0xd302:	test	r12b, r12b
0xd305:	je	0xd960


0xd960:	cmp	dword ptr [rsp + 8], 2
0xd965:	movzx	ebx, byte ptr [rsp + 0xf]
0xd96a:	mov	r12d, r8d
0xd96d:	mov	rbp, r11
0xd970:	sete	dl
0xd973:	mov	eax, ebx
0xd975:	test	r15, r15
0xd978:	sete	cl
0xd97b:	and	eax, edx
0xd97d:	and	al, cl
0xd97f:	jne	0xe3e6


0xd30b:	cmp	dword ptr [rsp + 8], 2
0xd310:	mov	rdi, qword ptr [rsp + 0x10]
0xd315:	lea	r9, [rdi + rbp]
0xd319:	setne	al
0xd31c:	and	al, byte ptr [rsp + 0xd]
0xd320:	mov	r10d, eax
0xd323:	je	0xd3d0


0xd985:	mov	eax, ebx
0xd987:	xor	eax, 1
0xd98a:	and	dl, al
0xd98c:	je	0xe2fc


0xe3e6:	mov	dword ptr [rsp + 8], 2
0xe3ee:	jmp	0xdd89


0xd3d0:	movzx	ebx, byte ptr [r9]
0xd3d4:	cmp	bl, 0x7e
0xd3d7:	ja	0xd6f8


0xd329:	mov	rax, qword ptr [rsp + 0x18]
0xd32e:	test	rax, rax
0xd331:	je	0xd760


0xe2fc:	mov	rbx, qword ptr [rsp + 0x48]
0xe301:	test	rbx, rbx
0xe304:	je	0xe332


0xd992:	cmp	byte ptr [rsp + 0x7c], 0
0xd997:	je	0xe2fa


0xdd89:	cmp	byte ptr [rsp + 0xd], 0
0xdd8e:	je	0xdda0


0xd3dd:	lea	rcx, [rip + 0x7fe8]
0xd3e4:	movzx	edx, bl
0xd3e7:	movsxd	rax, dword ptr [rcx + rdx*4]
0xd3eb:	add	rax, rcx
0xd3ee:	jmp	rax


0xd6f8:	cmp	qword ptr [rsp + 0x58], 1
0xd6fe:	jne	0xdaa8


0xd760:	movzx	ebx, byte ptr [r9]
0xd764:	cmp	bl, 0x7e
0xd767:	ja	0xd6f0


0xd337:	cmp	r11, -1
0xd33b:	lea	rbx, [rbp + rax]
0xd340:	jne	0xd370


0xe332:	cmp	r13, r15
0xe335:	jbe	0xddd9


0xe306:	test	al, al
0xe308:	je	0xe332


0xe2fa:	mov	eax, edx
0xe2fc:	mov	rbx, qword ptr [rsp + 0x48]
0xe301:	test	rbx, rbx
0xe304:	je	0xe332


0xd99d:	cmp	byte ptr [rsp + 0xe], 0
0xd9a2:	jne	0xe39d


0xdd90:	test	al, al
0xdd92:	mov	eax, 4
0xdd97:	cmove	eax, dword ptr [rsp + 8]
0xdd9c:	mov	dword ptr [rsp + 8], eax


0xd704:	mov	qword ptr [rsp + 0x38], r11
0xd709:	mov	byte ptr [rsp + 0x30], r8b
0xd70e:	mov	byte ptr [rsp + 0x28], r10b
0xd713:	call	0x2e00


0xdaa8:	lea	rax, [rsp + 0xa0]
0xdab0:	cmp	r11, -1
0xdab4:	mov	qword ptr [rsp + 0xa0], 0
0xdac0:	mov	qword ptr [rsp + 0x28], rax
0xdac5:	jne	0xdaf4


0xd769:	lea	rcx, [rip + 0x7e58]
0xd770:	movzx	edx, bl
0xd773:	movsxd	rax, dword ptr [rcx + rdx*4]
0xd777:	add	rax, rcx
0xd77a:	jmp	rax


0xd6f0:	xor	r10d, r10d
0xd6f3:	nop	dword ptr [rax + rax]
0xd6f8:	cmp	qword ptr [rsp + 0x58], 1
0xd6fe:	jne	0xdaa8


0xd342:	cmp	rax, 1
0xd346:	jbe	0xd370


0xd370:	cmp	rbx, r11
0xd373:	mov	byte ptr [rsp + 0x28], r10b
0xd378:	ja	0xd930


0xe33b:	mov	byte ptr [r14 + r15], 0
0xe340:	jmp	0xddd9


0xe30a:	movzx	ecx, byte ptr [rbx]
0xe30d:	mov	rax, rbx
0xe310:	test	cl, cl
0xe312:	je	0xe332


0xd9a8:	test	r13, r13
0xd9ab:	sete	al
0xd9ae:	cmp	qword ptr [rsp + 0x50], 0
0xd9b4:	setne	dl
0xd9b7:	and	al, dl
0xd9b9:	je	0xe3dc


0xdac7:	mov	rdi, qword ptr [rsp + 0x10]
0xdacc:	mov	byte ptr [rsp + 0x40], r8b
0xdad1:	mov	byte ptr [rsp + 0x38], r10b
0xdad6:	mov	qword ptr [rsp + 0x30], r9
0xdadb:	call	0x2900


0xdaf4:	lea	rax, [rsp + 0x9c]
0xdafc:	xor	ecx, ecx
0xdafe:	mov	byte ptr [rsp + 0x7e], bl
0xdb02:	mov	byte ptr [rsp + 0x7d], r8b
0xdb07:	mov	rbx, rcx
0xdb0a:	mov	qword ptr [rsp + 0x88], r9
0xdb12:	mov	qword ptr [rsp + 0x38], rax
0xdb17:	mov	byte ptr [rsp + 0x7f], r10b
0xdb1c:	mov	qword ptr [rsp + 0x80], r15
0xdb24:	mov	qword ptr [rsp + 0x40], r14
0xdb29:	mov	qword ptr [rsp + 0x70], r13
0xdb2e:	mov	qword ptr [rsp + 0x30], r11
0xdb33:	mov	rax, qword ptr [rsp + 0x10]
0xdb38:	lea	r14, [rbp + rbx]
0xdb3d:	mov	rdx, qword ptr [rsp + 0x30]
0xdb42:	mov	rcx, qword ptr [rsp + 0x28]
0xdb47:	mov	rdi, qword ptr [rsp + 0x38]
0xdb4c:	lea	r13, [rax + r14]
0xdb50:	sub	rdx, r14
0xdb53:	mov	rsi, r13
0xdb56:	call	0x11420


0xd348:	mov	byte ptr [rsp + 0x38], r8b
0xd34d:	mov	byte ptr [rsp + 0x30], r10b
0xd352:	mov	qword ptr [rsp + 0x28], r9
0xd357:	call	0x2900


0xd37e:	mov	rdx, qword ptr [rsp + 0x18]
0xd383:	mov	rsi, qword ptr [rsp + 0x48]
0xd388:	mov	rdi, r9
0xd38b:	mov	qword ptr [rsp + 0x40], r11
0xd390:	mov	byte ptr [rsp + 0x38], r8b
0xd395:	mov	qword ptr [rsp + 0x30], r9
0xd39a:	call	0x2a90


0xd930:	xor	r10d, r10d
0xd933:	jmp	0xd3d0


0xe314:	mov	rdx, r15
0xe317:	sub	rax, r15
0xe31a:	cmp	r13, rdx
0xe31d:	jbe	0xe323


0xe3dc:	movzx	eax, byte ptr [rsp + 0x7c]
0xe3e1:	jmp	0xe2fc


0xd9bf:	mov	r13, qword ptr [rsp + 0x50]
0xd9c4:	lea	rbx, [rip + 0x796a]
0xd9cb:	mov	byte ptr [r14], 0x27
0xd9cf:	mov	dword ptr [rsp + 8], 2
0xd9d7:	mov	r15d, 1
0xd9dd:	mov	qword ptr [rsp + 0x18], 1
0xd9e6:	mov	byte ptr [rsp + 0xf], 0
0xd9eb:	mov	qword ptr [rsp + 0x48], rbx
0xd9f0:	mov	byte ptr [rsp + 0x7c], al
0xd9f4:	jmp	0xd2d3


0xe323:	add	rdx, 1
0xe327:	movzx	ecx, byte ptr [rax + rdx]
0xe32b:	test	cl, cl
0xe32d:	jne	0xe31a


0xe31f:	mov	byte ptr [r14 + rdx], cl
0xe323:	add	rdx, 1
0xe327:	movzx	ecx, byte ptr [rax + rdx]
0xe32b:	test	cl, cl
0xe32d:	jne	0xe31a


0xd2d3:	xor	r11d, r11d
0xd2d6:	mov	rax, rbp
0xd2d9:	mov	r8d, r12d
0xd2dc:	mov	rbp, r11
0xd2df:	mov	r11, rax
0xd2e2:	nop	word ptr [rax + rax]
0xd2e8:	cmp	r11, rbp
0xd2eb:	setne	r12b
0xd2ef:	cmp	r11, -1
0xd2f3:	jne	0xd302


0xe32f:	mov	r15, rdx
0xe332:	cmp	r13, r15
0xe335:	jbe	0xddd9


0xe31a:	cmp	r13, rdx
0xe31d:	jbe	0xe323


0xd39f:	test	eax, eax
0xd3a1:	mov	r9, qword ptr [rsp + 0x30]
0xd3a6:	movzx	r8d, byte ptr [rsp + 0x38]
0xd3ac:	mov	r11, qword ptr [rsp + 0x40]
0xd3b1:	jne	0xd930


0xd3b7:	cmp	byte ptr [rsp + 0xf], 0
0xd3bc:	movzx	r10d, byte ptr [rsp + 0x28]
0xd3c2:	jne	0xe345


0xe345:	cmp	dword ptr [rsp + 8], 2
0xe34a:	movzx	ebx, byte ptr [rsp + 0xf]
0xe34f:	mov	rbp, r11
0xe352:	sete	al
0xe355:	mov	byte ptr [rsp + 0xd], bl
0xe359:	jmp	0xdd89


0xdb5b:	test	rax, rax
0xdb5e:	mov	r15, rax
0xdb61:	je	0xdbb1


0xdbb1:	mov	edx, r12d
0xdbb4:	mov	rdi, rbx
0xdbb7:	movzx	r8d, byte ptr [rsp + 0x7d]
0xdbbd:	xor	edx, 1
0xdbc0:	movzx	ebx, byte ptr [rsp + 0x7e]
0xdbc5:	movzx	r10d, byte ptr [rsp + 0x7f]
0xdbcb:	and	dl, byte ptr [rsp + 0xd]
0xdbcf:	mov	r15, qword ptr [rsp + 0x80]
0xdbd7:	mov	r14, qword ptr [rsp + 0x40]
0xdbdc:	mov	r13, qword ptr [rsp + 0x70]
0xdbe1:	mov	r11, qword ptr [rsp + 0x30]
0xdbe6:	cmp	rdi, 1
0xdbea:	jbe	0xe1eb


0xdb63:	cmp	rax, -1
0xdb67:	je	0xe185


0xe1eb:	mov	eax, edx
0xe1ed:	jmp	0xd747


0xdbf0:	mov	rcx, rdi
0xdbf3:	xor	esi, esi
0xdbf5:	movzx	r9d, byte ptr [rsp + 0xf]
0xdbfb:	add	rcx, rbp
0xdbfe:	mov	rdi, qword ptr [rsp + 0x10]
0xdc03:	jmp	0xdcbe


0xe185:	mov	rdi, rbx
0xe188:	movzx	r8d, byte ptr [rsp + 0x7d]
0xe18e:	movzx	ebx, byte ptr [rsp + 0x7e]
0xe193:	movzx	r10d, byte ptr [rsp + 0x7f]
0xe199:	mov	r15, qword ptr [rsp + 0x80]
0xe1a1:	xor	r12d, r12d
0xe1a4:	mov	r14, qword ptr [rsp + 0x40]
0xe1a9:	mov	r13, qword ptr [rsp + 0x70]
0xe1ae:	mov	r11, qword ptr [rsp + 0x30]
0xe1b3:	movzx	edx, byte ptr [rsp + 0xd]
0xe1b8:	jmp	0xdbe6


0xdb6d:	cmp	rax, -2
0xdb71:	je	0xe111


0xd747:	test	al, al
0xd749:	jne	0xe0e1


0xdcbe:	test	dl, dl
0xdcc0:	jne	0xdc10


0xdbe6:	cmp	rdi, 1
0xdbea:	jbe	0xe1eb


0xe111:	mov	r11, qword ptr [rsp + 0x30]
0xe116:	mov	rsi, r14
0xe119:	mov	rcx, r13
0xe11c:	mov	rax, rbx
0xe11f:	mov	rdi, rbx
0xe122:	movzx	r8d, byte ptr [rsp + 0x7d]
0xe128:	movzx	ebx, byte ptr [rsp + 0x7e]
0xe12d:	mov	r9, qword ptr [rsp + 0x88]
0xe135:	cmp	rsi, r11
0xe138:	movzx	r10d, byte ptr [rsp + 0x7f]
0xe13e:	mov	r15, qword ptr [rsp + 0x80]
0xe146:	mov	r14, qword ptr [rsp + 0x40]
0xe14b:	mov	r13, qword ptr [rsp + 0x70]
0xe150:	jae	0xe178


0xdb77:	cmp	dword ptr [rsp + 8], 2
0xdb7c:	sete	al
0xdb7f:	and	al, byte ptr [rsp + 0xf]
0xdb83:	jne	0xdd20


0xd74f:	cmp	dword ptr [rsp + 8], 2
0xd754:	sete	dl
0xd757:	jmp	0xd428


0xe0e1:	movzx	edx, byte ptr [rsp + 0xd]
0xe0e6:	xor	r12d, r12d
0xe0e9:	jmp	0xdbf0


0xdcc6:	mov	eax, esi
0xdcc8:	xor	eax, 1
0xdccb:	and	eax, r8d
0xdcce:	test	r10b, r10b
0xdcd1:	je	0xdce1


0xdc10:	cmp	dword ptr [rsp + 8], 2
0xdc15:	sete	al
0xdc18:	test	r9b, r9b
0xdc1b:	jne	0xe0d0


0xe152:	cmp	byte ptr [rcx], 0
0xe155:	jne	0xe167


0xe178:	movzx	edx, byte ptr [rsp + 0xd]
0xe17d:	xor	r12d, r12d
0xe180:	jmp	0xdbe6


0xdb89:	mov	edi, dword ptr [rsp + 0x9c]
0xdb90:	call	0x2de0


0xdd20:	cmp	r15, 1
0xdd24:	je	0xdb89


0xd428:	cmp	byte ptr [rsp + 0xd], 1
0xd42d:	jne	0xd542


0xdce1:	add	rbp, 1
0xdce5:	cmp	rbp, rcx
0xdce8:	jae	0xd46c


0xdcd3:	cmp	r13, r15
0xdcd6:	jbe	0xdcdd


0xdc21:	mov	esi, r8d
0xdc24:	xor	esi, 1
0xdc27:	and	al, sil
0xdc2a:	je	0xdc5b


0xe0d0:	movzx	ebx, byte ptr [rsp + 0xf]
0xe0d5:	mov	rbp, r11
0xe0d8:	mov	byte ptr [rsp + 0xd], bl
0xe0dc:	jmp	0xdd89


0xe157:	jmp	0xe178


0xe167:	add	rax, 1
0xe16b:	lea	rdx, [rbp + rax]
0xe170:	cmp	r11, rdx
0xe173:	ja	0xe160


0xdd2a:	mov	rdi, qword ptr [rsp + 0x10]
0xdd2f:	lea	rcx, [rdi + r15]
0xdd33:	lea	rdx, [rdi + r14 + 1]
0xdd38:	lea	r8, [rcx + r14]
0xdd3c:	jmp	0xdd4d


0xd433:	test	dl, dl
0xd435:	jne	0xd542


0xd542:	cmp	byte ptr [rsp + 0xf], 0
0xd547:	jne	0xd43b


0xdcee:	test	al, al
0xdcf0:	je	0xe0ee


0xd46c:	test	al, al
0xd46e:	je	0xd490


0xdcdd:	add	r15, 1
0xdce1:	add	rbp, 1
0xdce5:	cmp	rbp, rcx
0xdce8:	jae	0xd46c


0xdcd8:	mov	byte ptr [r14 + r15], 0x5c
0xdcdd:	add	r15, 1
0xdce1:	add	rbp, 1
0xdce5:	cmp	rbp, rcx
0xdce8:	jae	0xd46c


0xdc5b:	cmp	r13, r15
0xdc5e:	jbe	0xdc65


0xdc2c:	cmp	r13, r15
0xdc2f:	jbe	0xdc36


0xe175:	mov	rdi, rax
0xe178:	movzx	edx, byte ptr [rsp + 0xd]
0xe17d:	xor	r12d, r12d
0xe180:	jmp	0xdbe6


0xe160:	cmp	byte ptr [r9 + rax], 0
0xe165:	je	0xe175


0xdd4d:	movzx	ecx, byte ptr [rdx]
0xdd50:	sub	ecx, 0x5b
0xdd53:	cmp	cl, 0x21
0xdd56:	ja	0xdd40


0xd43b:	mov	rsi, qword ptr [rsp + 0x20]
0xd440:	test	rsi, rsi
0xd443:	je	0xd459


0xd54d:	jmp	0xd459


0xe0ee:	xor	r10d, r10d
0xe0f1:	jmp	0xdcad


0xdcf6:	cmp	r13, r15
0xdcf9:	jbe	0xdd00


0xd490:	cmp	r15, r13
0xd493:	jae	0xd499


0xd470:	cmp	r13, r15
0xd473:	jbe	0xd47a


0xdc65:	lea	rax, [r15 + 1]
0xdc69:	cmp	r13, rax
0xdc6c:	jbe	0xdc7b


0xdc60:	mov	byte ptr [r14 + r15], 0x5c
0xdc65:	lea	rax, [r15 + 1]
0xdc69:	cmp	r13, rax
0xdc6c:	jbe	0xdc7b


0xdc36:	lea	rsi, [r15 + 1]
0xdc3a:	cmp	r13, rsi
0xdc3d:	jbe	0xdc45


0xdc31:	mov	byte ptr [r14 + r15], 0x27
0xdc36:	lea	rsi, [r15 + 1]
0xdc3a:	cmp	r13, rsi
0xdc3d:	jbe	0xdc45


0xdd58:	mov	esi, 1
0xdd5d:	shl	rsi, cl
0xdd60:	mov	rcx, rsi
0xdd63:	movabs	rsi, 0x20000002b
0xdd6d:	test	rcx, rsi
0xdd70:	je	0xdd40


0xdd40:	add	rdx, 1
0xdd44:	cmp	r8, rdx
0xdd47:	je	0xdb89


0xd459:	test	r10b, r10b
0xd45c:	jne	0xd5a3


0xd445:	mov	edx, ebx
0xd447:	shr	dl, 5
0xd44a:	movzx	edx, dl
0xd44d:	mov	edx, dword ptr [rsi + rdx*4]
0xd450:	bt	edx, ebx
0xd453:	jb	0xd5a3


0xdcad:	cmp	r13, r15
0xdcb0:	jbe	0xdcb6


0xdd00:	lea	rax, [r15 + 1]
0xdd04:	cmp	r13, rax
0xdd07:	jbe	0xdd0f


0xdcfb:	mov	byte ptr [r14 + r15], 0x27
0xdd00:	lea	rax, [r15 + 1]
0xdd04:	cmp	r13, rax
0xdd07:	jbe	0xdd0f


0xd495:	mov	byte ptr [r14 + r15], bl
0xd499:	movzx	edi, byte ptr [rsp + 0xe]
0xd49e:	add	r15, 1
0xd4a2:	mov	eax, 0
0xd4a7:	test	r12b, r12b
0xd4aa:	cmove	edi, eax
0xd4ad:	mov	byte ptr [rsp + 0xe], dil
0xd4b2:	jmp	0xd2e8


0xd499:	movzx	edi, byte ptr [rsp + 0xe]
0xd49e:	add	r15, 1
0xd4a2:	mov	eax, 0
0xd4a7:	test	r12b, r12b
0xd4aa:	cmove	edi, eax
0xd4ad:	mov	byte ptr [rsp + 0xe], dil
0xd4b2:	jmp	0xd2e8


0xd47a:	lea	rax, [r15 + 1]
0xd47e:	cmp	r13, rax
0xd481:	jbe	0xd489


0xd475:	mov	byte ptr [r14 + r15], 0x27
0xd47a:	lea	rax, [r15 + 1]
0xd47e:	cmp	r13, rax
0xd481:	jbe	0xd489


0xdc7b:	lea	rax, [r15 + 2]
0xdc7f:	cmp	r13, rax
0xdc82:	jbe	0xdc94


0xdc6e:	mov	eax, ebx
0xdc70:	shr	al, 6
0xdc73:	add	eax, 0x30
0xdc76:	mov	byte ptr [r14 + r15 + 1], al
0xdc7b:	lea	rax, [r15 + 2]
0xdc7f:	cmp	r13, rax
0xdc82:	jbe	0xdc94


0xdc45:	lea	rsi, [r15 + 2]
0xdc49:	cmp	r13, rsi
0xdc4c:	jbe	0xdc54


0xdc3f:	mov	byte ptr [r14 + r15 + 1], 0x24
0xdc45:	lea	rsi, [r15 + 2]
0xdc49:	cmp	r13, rsi
0xdc4c:	jbe	0xdc54


0xdd72:	mov	r14, qword ptr [rsp + 0x40]
0xdd77:	mov	r13, qword ptr [rsp + 0x70]
0xdd7c:	mov	rbp, qword ptr [rsp + 0x30]
0xdd81:	mov	dword ptr [rsp + 8], 2
0xdd89:	cmp	byte ptr [rsp + 0xd], 0
0xdd8e:	je	0xdda0


0xd462:	xor	eax, 1
0xd465:	add	rbp, 1
0xd469:	and	eax, r8d
0xd46c:	test	al, al
0xd46e:	je	0xd490


0xd5a3:	cmp	dword ptr [rsp + 8], 2
0xd5a8:	sete	dl
0xd5ab:	cmp	byte ptr [rsp + 0xf], 0
0xd5b0:	mov	eax, edx
0xd5b2:	jne	0xde08


0xdcb6:	movzx	ebx, byte ptr [rdi + rbp]
0xdcba:	add	r15, 1
0xdcbe:	test	dl, dl
0xdcc0:	jne	0xdc10


0xdcb2:	mov	byte ptr [r14 + r15], bl
0xdcb6:	movzx	ebx, byte ptr [rdi + rbp]
0xdcba:	add	r15, 1
0xdcbe:	test	dl, dl
0xdcc0:	jne	0xdc10


0xdd0f:	add	r15, 2
0xdd13:	xor	r10d, r10d
0xdd16:	xor	r8d, r8d
0xdd19:	jmp	0xdcad


0xdd09:	mov	byte ptr [r14 + r15 + 1], 0x27
0xdd0f:	add	r15, 2
0xdd13:	xor	r10d, r10d
0xdd16:	xor	r8d, r8d
0xdd19:	jmp	0xdcad


0xd2e8:	cmp	r11, rbp
0xd2eb:	setne	r12b
0xd2ef:	cmp	r11, -1
0xd2f3:	jne	0xd302


0xd489:	add	r15, 2
0xd48d:	xor	r8d, r8d
0xd490:	cmp	r15, r13
0xd493:	jae	0xd499


0xd483:	mov	byte ptr [r14 + r15 + 1], 0x27
0xd489:	add	r15, 2
0xd48d:	xor	r8d, r8d
0xd490:	cmp	r15, r13
0xd493:	jae	0xd499


0xdc94:	and	ebx, 7
0xdc97:	add	rbp, 1
0xdc9b:	add	r15, 3
0xdc9f:	add	ebx, 0x30
0xdca2:	cmp	rbp, rcx
0xdca5:	jae	0xd490


0xdc84:	mov	eax, ebx
0xdc86:	shr	al, 3
0xdc89:	and	eax, 7
0xdc8c:	add	eax, 0x30
0xdc8f:	mov	byte ptr [r14 + r15 + 2], al
0xdc94:	and	ebx, 7
0xdc97:	add	rbp, 1
0xdc9b:	add	r15, 3
0xdc9f:	add	ebx, 0x30
0xdca2:	cmp	rbp, rcx
0xdca5:	jae	0xd490


0xdc54:	add	r15, 3
0xdc58:	mov	r8d, eax
0xdc5b:	cmp	r13, r15
0xdc5e:	jbe	0xdc65


0xdc4e:	mov	byte ptr [r14 + r15 + 2], 0x27
0xdc54:	add	r15, 3
0xdc58:	mov	r8d, eax
0xdc5b:	cmp	r13, r15
0xdc5e:	jbe	0xdc65


0xd5b8:	mov	eax, r8d
0xd5bb:	xor	eax, 1
0xd5be:	and	al, dl
0xd5c0:	je	0xd5f1


0xde08:	mov	rbp, r11
0xde0b:	jmp	0xdd89


0xdcab:	mov	esi, edx
0xdcad:	cmp	r13, r15
0xdcb0:	jbe	0xdcb6


0xd5f1:	cmp	r13, r15
0xd5f4:	jbe	0xd5fb


0xd5c2:	cmp	r13, r15
0xd5c5:	jbe	0xd5cc


0xd5fb:	add	r15, 1
0xd5ff:	add	rbp, 1
0xd603:	jmp	0xd490


0xd5f6:	mov	byte ptr [r14 + r15], 0x5c
0xd5fb:	add	r15, 1
0xd5ff:	add	rbp, 1
0xd603:	jmp	0xd490


0xd5cc:	lea	rdx, [r15 + 1]
0xd5d0:	cmp	r13, rdx
0xd5d3:	jbe	0xd5db


0xd5c7:	mov	byte ptr [r14 + r15], 0x27
0xd5cc:	lea	rdx, [r15 + 1]
0xd5d0:	cmp	r13, rdx
0xd5d3:	jbe	0xd5db


0xd5db:	lea	rdx, [r15 + 2]
0xd5df:	cmp	r13, rdx
0xd5e2:	jbe	0xd5ea


0xd5d5:	mov	byte ptr [r14 + r15 + 1], 0x24
0xd5db:	lea	rdx, [r15 + 2]
0xd5df:	cmp	r13, rdx
0xd5e2:	jbe	0xd5ea


0xd5ea:	add	r15, 3
0xd5ee:	mov	r8d, eax
0xd5f1:	cmp	r13, r15
0xd5f4:	jbe	0xd5fb


0xd5e4:	mov	byte ptr [r14 + r15 + 2], 0x27
0xd5ea:	add	r15, 3
0xd5ee:	mov	r8d, eax
0xd5f1:	cmp	r13, r15
0xd5f4:	jbe	0xd5fb


0xdb95:	mov	rdi, qword ptr [rsp + 0x28]
0xdb9a:	test	eax, eax
0xdb9c:	mov	eax, 0
0xdba1:	cmove	r12d, eax
0xdba5:	add	rbx, r15
0xdba8:	call	0x2dc0


0xdbad:	test	eax, eax
0xdbaf:	je	0xdb33


0xdb33:	mov	rax, qword ptr [rsp + 0x10]
0xdb38:	lea	r14, [rbp + rbx]
0xdb3d:	mov	rdx, qword ptr [rsp + 0x30]
0xdb42:	mov	rcx, qword ptr [rsp + 0x28]
0xdb47:	mov	rdi, qword ptr [rsp + 0x38]
0xdb4c:	lea	r13, [rax + r14]
0xdb50:	sub	rdx, r14
0xdb53:	mov	rsi, r13
0xdb56:	call	0x11420


0xd35c:	movzx	r8d, byte ptr [rsp + 0x38]
0xd362:	movzx	r10d, byte ptr [rsp + 0x30]
0xd368:	mov	r11, rax
0xd36b:	mov	r9, qword ptr [rsp + 0x28]
0xd370:	cmp	rbx, r11
0xd373:	mov	byte ptr [rsp + 0x28], r10b
0xd378:	ja	0xd930


0xdae0:	movzx	r8d, byte ptr [rsp + 0x40]
0xdae6:	movzx	r10d, byte ptr [rsp + 0x38]
0xdaec:	mov	r11, rax
0xdaef:	mov	r9, qword ptr [rsp + 0x30]
0xdaf4:	lea	rax, [rsp + 0x9c]
0xdafc:	xor	ecx, ecx
0xdafe:	mov	byte ptr [rsp + 0x7e], bl
0xdb02:	mov	byte ptr [rsp + 0x7d], r8b
0xdb07:	mov	rbx, rcx
0xdb0a:	mov	qword ptr [rsp + 0x88], r9
0xdb12:	mov	qword ptr [rsp + 0x38], rax
0xdb17:	mov	byte ptr [rsp + 0x7f], r10b
0xdb1c:	mov	qword ptr [rsp + 0x80], r15
0xdb24:	mov	qword ptr [rsp + 0x40], r14
0xdb29:	mov	qword ptr [rsp + 0x70], r13
0xdb2e:	mov	qword ptr [rsp + 0x30], r11
0xdb33:	mov	rax, qword ptr [rsp + 0x10]
0xdb38:	lea	r14, [rbp + rbx]
0xdb3d:	mov	rdx, qword ptr [rsp + 0x30]
0xdb42:	mov	rcx, qword ptr [rsp + 0x28]
0xdb47:	mov	rdi, qword ptr [rsp + 0x38]
0xdb4c:	lea	r13, [rax + r14]
0xdb50:	sub	rdx, r14
0xdb53:	mov	rsi, r13
0xdb56:	call	0x11420


0xd718:	mov	rcx, qword ptr [rax]
0xd71b:	movzx	edx, bl
0xd71e:	movzx	r10d, byte ptr [rsp + 0x28]
0xd724:	movzx	r8d, byte ptr [rsp + 0x30]
0xd72a:	mov	r11, qword ptr [rsp + 0x38]
0xd72f:	mov	edi, 1
0xd734:	movzx	eax, word ptr [rcx + rdx*2]
0xd738:	and	ax, 0x4000
0xd73c:	setne	r12b
0xd740:	sete	al
0xd743:	and	al, byte ptr [rsp + 0xd]
0xd747:	test	al, al
0xd749:	jne	0xe0e1


0xd3f0:	xor	r10d, r10d
0xd3f3:	cmp	r11, 1
0xd3f7:	setne	al
0xd3fa:	cmp	r11, -1
0xd3fe:	jne	0xd40c


0xd400:	mov	rax, qword ptr [rsp + 0x10]
0xd405:	cmp	byte ptr [rax + 1], 0
0xd409:	setne	al
0xd40c:	cmp	dword ptr [rsp + 8], 2
0xd411:	sete	dl
0xd414:	test	al, al
0xd416:	je	0xd668


0xd40c:	cmp	dword ptr [rsp + 8], 2
0xd411:	sete	dl
0xd414:	test	al, al
0xd416:	je	0xd668


0xd668:	test	rbp, rbp
0xd66b:	jne	0xd41c


0xd41c:	xor	r12d, r12d
0xd41f:	xor	eax, eax
0xd421:	nop	dword ptr [rax]
0xd428:	cmp	byte ptr [rsp + 0xd], 1
0xd42d:	jne	0xd542


0xd671:	movzx	eax, byte ptr [rsp + 0xf]
0xd676:	and	al, dl
0xd678:	je	0xd428


0xd67e:	mov	rbp, r11
0xd681:	mov	dword ptr [rsp + 8], 2
0xd689:	jmp	0xdd89


0xda88:	cmp	byte ptr [rsp + 0xf], 0
0xda8d:	jne	0xe2b0


0xd4d0:	cmp	eax, 5
0xd4d3:	je	0xda48


0xda93:	xor	r12d, r12d
0xda96:	xor	eax, eax
0xda98:	mov	ebx, 0x3f
0xda9d:	jmp	0xd459


0xe2b0:	mov	rbp, r11
0xe2b3:	movzx	eax, byte ptr [rsp + 0xf]
0xe2b8:	jmp	0xdd89


0xda48:	test	byte ptr [rsp + 0x78], 4
0xda4d:	je	0xda70


0xd4d9:	cmp	eax, 2
0xd4dc:	mov	ebx, 0x3f
0xd4e1:	sete	dl
0xd4e4:	xor	r12d, r12d
0xd4e7:	xor	eax, eax
0xd4e9:	jmp	0xd428


0xda70:	xor	edx, edx
0xda72:	xor	r12d, r12d
0xda75:	xor	eax, eax
0xda77:	mov	ebx, 0x3f
0xda7c:	jmp	0xd428


0xda4f:	lea	rcx, [rbp + 2]
0xda53:	cmp	rcx, r11
0xda56:	jae	0xda70


0xda58:	mov	rax, qword ptr [rsp + 0x10]
0xda5d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0xda62:	je	0xe1f2


0xe1f2:	movzx	ebx, byte ptr [rax + rcx]
0xe1f6:	cmp	bl, 0x3e
0xe1f9:	ja	0xda70


0xe1ff:	movabs	rax, 0x7000a38200000000
0xe209:	bt	rax, rbx
0xe20d:	jae	0xda70


0xe213:	cmp	byte ptr [rsp + 0xf], 0
0xe218:	jne	0xe402


0xe21e:	cmp	r13, r15
0xe221:	jbe	0xe228


0xe402:	mov	rbp, r11
0xe405:	jmp	0xdda0


0xe228:	lea	rax, [r15 + 1]
0xe22c:	cmp	r13, rax
0xe22f:	jbe	0xe237


0xe223:	mov	byte ptr [r14 + r15], 0x3f
0xe228:	lea	rax, [r15 + 1]
0xe22c:	cmp	r13, rax
0xe22f:	jbe	0xe237


0xe237:	lea	rax, [r15 + 2]
0xe23b:	cmp	r13, rax
0xe23e:	jbe	0xe246


0xe231:	mov	byte ptr [r14 + r15 + 1], 0x22
0xe237:	lea	rax, [r15 + 2]
0xe23b:	cmp	r13, rax
0xe23e:	jbe	0xe246


0xe246:	lea	rax, [r15 + 3]
0xe24a:	cmp	r13, rax
0xe24d:	jbe	0xe255


0xe240:	mov	byte ptr [r14 + r15 + 2], 0x22
0xe246:	lea	rax, [r15 + 3]
0xe24a:	cmp	r13, rax
0xe24d:	jbe	0xe255


0xe255:	add	r15, 4
0xe259:	xor	edx, edx
0xe25b:	xor	r12d, r12d
0xe25e:	xor	eax, eax
0xe260:	mov	rbp, rcx
0xe263:	jmp	0xd428


0xe24f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0xe255:	add	r15, 4
0xe259:	xor	edx, edx
0xe25b:	xor	r12d, r12d
0xe25e:	xor	eax, eax
0xe260:	mov	rbp, rcx
0xe263:	jmp	0xd428


0xda00:	cmp	byte ptr [rsp + 0xf], 0
0xda05:	jne	0xe2b0


0xd4fe:	mov	byte ptr [rsp + 0x7c], r12b
0xd503:	xor	edx, edx
0xd505:	xor	eax, eax
0xd507:	mov	ebx, 0x27
0xd50c:	jmp	0xd428


0xda0b:	test	r13, r13
0xda0e:	je	0xde10


0xde10:	cmp	r13, r15
0xde13:	jbe	0xde1a


0xda14:	xor	edx, edx
0xda16:	cmp	qword ptr [rsp + 0x50], 0
0xda1c:	jne	0xde10


0xde1a:	lea	rax, [r15 + 1]
0xde1e:	cmp	r13, rax
0xde21:	jbe	0xde29


0xde15:	mov	byte ptr [r14 + r15], 0x27
0xde1a:	lea	rax, [r15 + 1]
0xde1e:	cmp	r13, rax
0xde21:	jbe	0xde29


0xda22:	mov	qword ptr [rsp + 0x50], r13
0xda27:	add	r15, 3
0xda2b:	xor	eax, eax
0xda2d:	mov	byte ptr [rsp + 0x7c], r12b
0xda32:	xor	r8d, r8d
0xda35:	mov	r13, rdx
0xda38:	mov	ebx, 0x27
0xda3d:	jmp	0xd459


0xde29:	lea	rax, [r15 + 2]
0xde2d:	cmp	r13, rax
0xde30:	jbe	0xe422


0xde23:	mov	byte ptr [r14 + r15 + 1], 0x5c
0xde29:	lea	rax, [r15 + 2]
0xde2d:	cmp	r13, rax
0xde30:	jbe	0xe422


0xe422:	mov	rdx, r13
0xe425:	mov	r13, qword ptr [rsp + 0x50]
0xe42a:	jmp	0xda22


0xde36:	mov	rdx, r13
0xde39:	mov	byte ptr [r14 + r15 + 2], 0x27
0xde3f:	mov	r13, qword ptr [rsp + 0x50]
0xde44:	jmp	0xda22


0xd534:	cmp	byte ptr [rsp + 0xd], 0
0xd539:	jne	0xd5a0


0xd53b:	mov	ebx, edx
0xd53d:	xor	r12d, r12d
0xd540:	xor	eax, eax
0xd542:	cmp	byte ptr [rsp + 0xf], 0
0xd547:	jne	0xd43b


0xd5a0:	xor	r12d, r12d
0xd5a3:	cmp	dword ptr [rsp + 8], 2
0xd5a8:	sete	dl
0xd5ab:	cmp	byte ptr [rsp + 0xf], 0
0xd5b0:	mov	eax, edx
0xd5b2:	jne	0xde08


0xd940:	cmp	byte ptr [rsp + 0xf], 0
0xd945:	jne	0xe2b0


0xd573:	cmp	byte ptr [rsp + 0xd], 0
0xd578:	je	0xd790


0xd94b:	add	rbp, 1
0xd94f:	mov	eax, r8d
0xd952:	xor	r12d, r12d
0xd955:	mov	ebx, 0x5c
0xd95a:	jmp	0xd46c


0xd790:	mov	edx, 0x5c
0xd795:	mov	ebx, 0x5c
0xd79a:	jmp	0xd534


0xd57e:	cmp	byte ptr [rsp + 0xf], 0
0xd583:	je	0xd790


0xd589:	cmp	qword ptr [rsp + 0x18], 0
0xd58f:	jne	0xd94b


0xd595:	mov	ebx, 0x5c
0xd59a:	nop	word ptr [rax + rax]
0xd5a0:	xor	r12d, r12d
0xd5a3:	cmp	dword ptr [rsp + 8], 2
0xd5a8:	sete	dl
0xd5ab:	cmp	byte ptr [rsp + 0xf], 0
0xd5b0:	mov	eax, edx
0xd5b2:	jne	0xde08


0xd61b:	xor	edx, edx
0xd61d:	test	byte ptr [rsp + 0x78], 1
0xd622:	je	0xd53b


0xd7e3:	cmp	dword ptr [rsp + 8], 2
0xd7e8:	sete	dl
0xd7eb:	cmp	byte ptr [rsp + 0xf], 0
0xd7f0:	jne	0xe38a


0xd628:	add	rbp, 1
0xd62c:	jmp	0xd2e8


0xd7f6:	mov	eax, r8d
0xd7f9:	mov	rcx, r15
0xd7fc:	xor	eax, 1
0xd7ff:	and	al, dl
0xd801:	je	0xd830


0xe38a:	movzx	ebx, byte ptr [rsp + 0xf]
0xe38f:	mov	rbp, r11
0xe392:	mov	eax, edx
0xe394:	mov	byte ptr [rsp + 0xd], bl
0xe398:	jmp	0xdd89


0xd830:	cmp	r13, rcx
0xd833:	jbe	0xd83a


0xd803:	cmp	r13, r15
0xd806:	jbe	0xd80d


0xd83a:	cmp	dword ptr [rsp + 8], 2
0xd83f:	lea	r15, [rcx + 1]
0xd843:	je	0xde49


0xd835:	mov	byte ptr [r14 + rcx], 0x5c
0xd83a:	cmp	dword ptr [rsp + 8], 2
0xd83f:	lea	r15, [rcx + 1]
0xd843:	je	0xde49


0xd80d:	lea	rcx, [r15 + 1]
0xd811:	cmp	r13, rcx
0xd814:	jbe	0xd81c


0xd808:	mov	byte ptr [r14 + r15], 0x27
0xd80d:	lea	rcx, [r15 + 1]
0xd811:	cmp	r13, rcx
0xd814:	jbe	0xd81c


0xde49:	mov	eax, r12d
0xde4c:	mov	ebx, 0x30
0xde51:	xor	r12d, r12d
0xde54:	jmp	0xd459


0xd849:	lea	rax, [rbp + 1]
0xd84d:	cmp	rax, r11
0xd850:	jae	0xd86b


0xd81c:	lea	rcx, [r15 + 2]
0xd820:	cmp	r13, rcx
0xd823:	ja	0xde59


0xd816:	mov	byte ptr [r14 + r15 + 1], 0x24
0xd81c:	lea	rcx, [r15 + 2]
0xd820:	cmp	r13, rcx
0xd823:	ja	0xde59


0xd852:	mov	rax, qword ptr [rsp + 0x10]
0xd857:	movzx	eax, byte ptr [rax + rbp + 1]
0xd85c:	mov	byte ptr [rsp + 0x28], al
0xd860:	sub	eax, 0x30
0xd863:	cmp	al, 9
0xd865:	jbe	0xe099


0xd86b:	mov	eax, r12d
0xd86e:	mov	ebx, 0x30
0xd873:	xor	r12d, r12d
0xd876:	jmp	0xd428


0xd829:	lea	rcx, [r15 + 3]
0xd82d:	mov	r8d, eax
0xd830:	cmp	r13, rcx
0xd833:	jbe	0xd83a


0xde59:	mov	byte ptr [r14 + r15 + 2], 0x27
0xde5f:	jmp	0xd829


0xe099:	cmp	r13, r15
0xe09c:	jbe	0xe0a3


0xe0a3:	lea	rax, [rcx + 2]
0xe0a7:	cmp	r13, rax
0xe0aa:	jbe	0xe0b2


0xe09e:	mov	byte ptr [r14 + r15], 0x30
0xe0a3:	lea	rax, [rcx + 2]
0xe0a7:	cmp	r13, rax
0xe0aa:	jbe	0xe0b2


0xe0b2:	mov	eax, r12d
0xe0b5:	lea	r15, [rcx + 3]
0xe0b9:	xor	r12d, r12d
0xe0bc:	mov	ebx, 0x30
0xe0c1:	jmp	0xd428


0xe0ac:	mov	byte ptr [r14 + rcx + 2], 0x30
0xe0b2:	mov	eax, r12d
0xe0b5:	lea	r15, [rcx + 3]
0xe0b9:	xor	r12d, r12d
0xe0bc:	mov	ebx, 0x30
0xe0c1:	jmp	0xd428


0xd522:	cmp	dword ptr [rsp + 8], 2
0xd527:	sete	al
0xd52a:	and	al, byte ptr [rsp + 0xf]
0xd52e:	jne	0xd67e


0xd8e0:	mov	edx, 0xd
0xd8e5:	xor	r10d, r10d
0xd8e8:	mov	ebx, 0x72
0xd8ed:	jmp	0xd522


0xde64:	test	ebx, ebx
0xde66:	jne	0xd293


0xde6c:	mov	byte ptr [rsp + 0xd], 1
0xde71:	test	r13, r13
0xde74:	jne	0xe40a


0xde7a:	lea	rax, [rip + 0x74b4]
0xde81:	mov	qword ptr [rsp + 0x50], 0
0xde8a:	mov	byte ptr [rsp + 0xe], 1
0xde8f:	mov	byte ptr [rsp + 0x7c], 0
0xde94:	xor	r12d, r12d
0xde97:	mov	byte ptr [rsp + 0xf], 0
0xde9c:	mov	qword ptr [rsp + 0x18], 1
0xdea5:	mov	qword ptr [rsp + 0x48], rax
0xdeaa:	mov	r15d, 1
0xdeb0:	mov	dword ptr [rsp + 8], 2
0xdeb8:	jmp	0xd2d3


0xe40a:	mov	byte ptr [rsp + 0xe], 1
0xe40f:	xor	eax, eax
0xe411:	xor	r12d, r12d
0xe414:	mov	qword ptr [rsp + 0x50], 0
0xe41d:	jmp	0xd9c4


0xd9c4:	lea	rbx, [rip + 0x796a]
0xd9cb:	mov	byte ptr [r14], 0x27
0xd9cf:	mov	dword ptr [rsp + 8], 2
0xd9d7:	mov	r15d, 1
0xd9dd:	mov	qword ptr [rsp + 0x18], 1
0xd9e6:	mov	byte ptr [rsp + 0xf], 0
0xd9eb:	mov	qword ptr [rsp + 0x48], rbx
0xd9f0:	mov	byte ptr [rsp + 0x7c], al
0xd9f4:	jmp	0xd2d3


0xdec8:	test	r13, r13
0xdecb:	je	0xe0f6


0xe2bd:	lea	rax, [rip + 0x706f]
0xe2c4:	mov	byte ptr [rsp + 0xe], 1
0xe2c9:	mov	byte ptr [rsp + 0x7c], 0
0xe2ce:	xor	r12d, r12d
0xe2d1:	mov	qword ptr [rsp + 0x50], 0
0xe2da:	mov	byte ptr [rsp + 0xf], 1
0xe2df:	mov	byte ptr [rsp + 0xd], 1
0xe2e4:	mov	qword ptr [rsp + 0x18], 1
0xe2ed:	xor	r15d, r15d
0xe2f0:	mov	qword ptr [rsp + 0x48], rax
0xe2f5:	jmp	0xd2d3


0xe0f6:	mov	qword ptr [rsp + 0x50], 0
0xe0ff:	mov	byte ptr [rsp + 0xe], 1
0xe104:	xor	r12d, r12d
0xe107:	mov	byte ptr [rsp + 0x7c], 0
0xe10c:	jmp	0xdeeb


0xded1:	mov	byte ptr [r14], 0x22
0xded5:	mov	byte ptr [rsp + 0xe], 1
0xdeda:	xor	r12d, r12d
0xdedd:	mov	byte ptr [rsp + 0x7c], 0
0xdee2:	mov	qword ptr [rsp + 0x50], 0
0xdeeb:	lea	rax, [rip + 0x7441]
0xdef2:	mov	byte ptr [rsp + 0xf], 0
0xdef7:	mov	byte ptr [rsp + 0xd], 1
0xdefc:	mov	qword ptr [rsp + 0x18], 1
0xdf05:	mov	r15d, 1
0xdf0b:	mov	qword ptr [rsp + 0x48], rax
0xdf10:	jmp	0xd2d3


0xdeeb:	lea	rax, [rip + 0x7441]
0xdef2:	mov	byte ptr [rsp + 0xf], 0
0xdef7:	mov	byte ptr [rsp + 0xd], 1
0xdefc:	mov	qword ptr [rsp + 0x18], 1
0xdf05:	mov	r15d, 1
0xdf0b:	mov	qword ptr [rsp + 0x48], rax
0xdf10:	jmp	0xd2d3


0xdf15:	lea	rax, [rip + 0x7417]
0xdf1c:	mov	byte ptr [rsp + 0xe], 1
0xdf21:	mov	byte ptr [rsp + 0x7c], 0
0xdf26:	xor	r12d, r12d
0xdf29:	mov	qword ptr [rsp + 0x50], 0
0xdf32:	mov	byte ptr [rsp + 0xf], 1
0xdf37:	mov	byte ptr [rsp + 0xd], 1
0xdf3c:	mov	qword ptr [rsp + 0x18], 1
0xdf45:	xor	r15d, r15d
0xdf48:	mov	qword ptr [rsp + 0x48], rax
0xdf4d:	mov	dword ptr [rsp + 8], 5
0xdf55:	jmp	0xd2d3


0xdf5a:	mov	byte ptr [rsp + 0xe], 1
0xdf5f:	mov	byte ptr [rsp + 0x7c], 0
0xdf64:	xor	r12d, r12d
0xdf67:	mov	qword ptr [rsp + 0x50], 0
0xdf70:	mov	byte ptr [rsp + 0xf], 0
0xdf75:	xor	r15d, r15d
0xdf78:	mov	byte ptr [rsp + 0xd], 1
0xdf7d:	mov	qword ptr [rsp + 0x18], 0
0xdf86:	mov	qword ptr [rsp + 0x48], 0
0xdf8f:	jmp	0xd2d3


0xdf94:	cmp	dword ptr [rsp + 8], 0xa
0xdf99:	je	0xdff1


0xdff1:	xor	r15d, r15d
0xdff4:	test	ebx, ebx
0xdff6:	je	0xe1bd


0xdf9b:	lea	rsi, [rip + 0x7395]
0xdfa2:	xor	edi, edi
0xdfa4:	mov	edx, 5
0xdfa9:	call	0x28e0


0xe1bd:	mov	rdx, qword ptr [rsp + 0x68]
0xe1c2:	movzx	eax, byte ptr [rdx]
0xe1c5:	test	al, al
0xe1c7:	je	0xdffc


0xdffc:	test	ebx, ebx
0xdffe:	mov	rbx, qword ptr [rsp + 0x60]
0xe003:	setne	byte ptr [rsp + 0xf]
0xe008:	xor	r12d, r12d
0xe00b:	mov	rdi, rbx
0xe00e:	call	0x2900


0xe1d9:	add	r15, 1
0xe1dd:	movzx	eax, byte ptr [rdx + r15]
0xe1e2:	test	al, al
0xe1e4:	jne	0xe1d0


0xe1d5:	mov	byte ptr [r14 + r15], al
0xe1d9:	add	r15, 1
0xe1dd:	movzx	eax, byte ptr [rdx + r15]
0xe1e2:	test	al, al
0xe1e4:	jne	0xe1d0


0xe1e6:	jmp	0xdffc


0xe1d0:	cmp	r13, r15
0xe1d3:	jbe	0xe1d9


0xe013:	mov	qword ptr [rsp + 0x48], rbx
0xe018:	mov	qword ptr [rsp + 0x18], rax
0xe01d:	mov	byte ptr [rsp + 0xe], 1
0xe022:	mov	byte ptr [rsp + 0x7c], 0
0xe027:	mov	qword ptr [rsp + 0x50], 0
0xe030:	mov	byte ptr [rsp + 0xd], 1
0xe035:	jmp	0xd2d3


0xdfae:	mov	rcx, rax
0xdfb1:	mov	qword ptr [rsp + 0x68], rax
0xdfb6:	lea	rax, [rip + 0x737a]
0xdfbd:	cmp	rcx, rax
0xdfc0:	je	0xe35e


0xe35e:	mov	esi, dword ptr [rsp + 8]
0xe362:	mov	rdi, rcx
0xe365:	call	0xd110


0xdfc6:	lea	rsi, [rip + 0x7368]
0xdfcd:	xor	edi, edi
0xdfcf:	mov	edx, 5
0xdfd4:	call	0x28e0


0xdfd9:	mov	rcx, rax
0xdfdc:	mov	qword ptr [rsp + 0x60], rax
0xdfe1:	lea	rax, [rip + 0x734d]
0xdfe8:	cmp	rcx, rax
0xdfeb:	je	0xe374


0xe374:	mov	esi, dword ptr [rsp + 8]
0xe378:	mov	rdi, rcx
0xe37b:	call	0xd110


0xe380:	mov	qword ptr [rsp + 0x60], rax
0xe385:	jmp	0xdff1


0xe36a:	mov	qword ptr [rsp + 0x68], rax
0xe36f:	jmp	0xdfc6


0xe03a:	mov	byte ptr [rsp + 0xe], 1
0xe03f:	mov	byte ptr [rsp + 0x7c], 0
0xe044:	xor	r12d, r12d
0xe047:	mov	qword ptr [rsp + 0x50], 0
0xe050:	mov	byte ptr [rsp + 0xf], 0
0xe055:	xor	r15d, r15d
0xe058:	mov	byte ptr [rsp + 0xd], 0
0xe05d:	mov	qword ptr [rsp + 0x18], 0
0xe066:	mov	qword ptr [rsp + 0x48], 0
0xe06f:	jmp	0xd2d3


0xe074:	mov	byte ptr [rsp + 0xe], 1
0xe079:	mov	byte ptr [rsp + 0x7c], 0
0xe07e:	xor	r12d, r12d
0xe081:	mov	qword ptr [rsp + 0x50], 0
0xe08a:	mov	byte ptr [rsp + 0xf], 1
0xe08f:	mov	byte ptr [rsp + 0xd], 1
0xe094:	jmp	0xd2b3


0xd2b3:	lea	rax, [rip + 0x807b]
0xd2ba:	mov	qword ptr [rsp + 0x18], 1
0xd2c3:	xor	r15d, r15d
0xd2c6:	mov	dword ptr [rsp + 8], 2
0xd2ce:	mov	qword ptr [rsp + 0x48], rax
0xd2d3:	xor	r11d, r11d
0xd2d6:	mov	rax, rbp
0xd2d9:	mov	r8d, r12d
0xd2dc:	mov	rbp, r11
0xd2df:	mov	r11, rax
0xd2e2:	nop	word ptr [rax + rax]
0xd2e8:	cmp	r11, rbp
0xd2eb:	setne	r12b
0xd2ef:	cmp	r11, -1
0xd2f3:	jne	0xd302


0xe268:	test	ebx, ebx
0xe26a:	je	0xe3f8


0xe3f8:	mov	byte ptr [rsp + 0xd], 0
0xe3fd:	jmp	0xde71


0xe270:	lea	rax, [rip + 0x70be]
0xe277:	mov	byte ptr [rsp + 0xe], 1
0xe27c:	mov	byte ptr [rsp + 0x7c], 0
0xe281:	xor	r12d, r12d
0xe284:	mov	qword ptr [rsp + 0x50], 0
0xe28d:	mov	byte ptr [rsp + 0xf], 1
0xe292:	mov	byte ptr [rsp + 0xd], 0
0xe297:	mov	qword ptr [rsp + 0x18], 1
0xe2a0:	xor	r15d, r15d
0xe2a3:	mov	qword ptr [rsp + 0x48], rax
0xe2a8:	jmp	0xd2d3


0xde71:	test	r13, r13
0xde74:	jne	0xe40a


0xe434:	nop	
0xe436:	nop	word ptr cs:[rax + rax]


0xe5eb:	nop	dword ptr [rax + rax]


0xe626:	nop	word ptr cs:[rax + rax]


0xe641:	nop	dword ptr [rax + rax]
0xe646:	nop	word ptr cs:[rax + rax]


0xe661:	nop	dword ptr [rax + rax]
0xe666:	nop	word ptr cs:[rax + rax]


0xe6a5:	nop	
0xe6a6:	nop	word ptr cs:[rax + rax]


0xe6c5:	nop	
0xe6c6:	nop	word ptr cs:[rax + rax]


0xe774:	nop	
0xe776:	nop	word ptr cs:[rax + rax]


0xe863:	nop	dword ptr [rax]
0xe866:	nop	word ptr cs:[rax + rax]


0xe87a:	nop	word ptr [rax + rax]


0xe913:	nop	dword ptr [rax]
0xe916:	nop	word ptr cs:[rax + rax]


0xe933:	nop	dword ptr [rax]
0xe936:	nop	word ptr cs:[rax + rax]


0xe94c:	nop	dword ptr [rax]


0xe968:	nop	dword ptr [rax + rax]


0xe984:	nop	
0xe986:	nop	word ptr cs:[rax + rax]


0xea1e:	nop	


0xeaaa:	nop	word ptr [rax + rax]


0xeabc:	nop	dword ptr [rax]


0xeacf:	nop	


0xeb68:	nop	dword ptr [rax + rax]


0xeb91:	nop	dword ptr [rax + rax]
0xeb96:	nop	word ptr cs:[rax + rax]


0xebaa:	nop	word ptr [rax + rax]


0xec3e:	nop	


0xecd1:	nop	dword ptr [rax + rax]
0xecd6:	nop	word ptr cs:[rax + rax]


0xecec:	nop	dword ptr [rax]


0xed07:	nop	word ptr [rax + rax]


0xed23:	nop	dword ptr [rax]
0xed26:	nop	word ptr cs:[rax + rax]


0xed3c:	nop	dword ptr [rax]


0xed54:	nop	
0xed56:	nop	word ptr cs:[rax + rax]


0xed73:	nop	dword ptr [rax]
0xed76:	nop	word ptr cs:[rax + rax]


0xed98:	nop	dword ptr [rax + rax]


0xf00a:	nop	word ptr [rax + rax]


0xf06e:	nop	


0xf197:	nop	word ptr [rax + rax]


0xf232:	nop	dword ptr [rax]
0xf236:	nop	word ptr cs:[rax + rax]


0xf252:	nop	word ptr cs:[rax + rax]
0xf25c:	nop	dword ptr [rax]


0xf27e:	nop	


0xf28b:	nop	dword ptr [rax + rax]


0xf608:	nop	dword ptr [rax + rax]


0xf66a:	nop	word ptr [rax + rax]


0xf6ec:	nop	dword ptr [rax]


0xf6fa:	nop	word ptr [rax + rax]


0xf716:	nop	word ptr cs:[rax + rax]


0xf894:	nop	
0xf896:	nop	word ptr cs:[rax + rax]


0xf926:	nop	word ptr cs:[rax + rax]


0xf93b:	nop	dword ptr [rax + rax]


0xf94b:	nop	dword ptr [rax + rax]


0xf98f:	nop	


0xf99c:	nop	dword ptr [rax]


0xf9aa:	nop	word ptr [rax + rax]


0x1012e:	nop	


0x10146:	nop	word ptr cs:[rax + rax]


0x10226:	nop	word ptr cs:[rax + rax]


0x102d9:	nop	dword ptr [rax]


0x102ea:	nop	word ptr [rax + rax]


0x1074e:	nop	


0x109be:	nop	


0x10dd7:	nop	word ptr [rax + rax]


0x10e78:	nop	dword ptr [rax + rax]


0x10f55:	nop	
0x10f56:	nop	word ptr cs:[rax + rax]


0x11018:	nop	dword ptr [rax + rax]


0x1103a:	nop	word ptr [rax + rax]


0x11064:	nop	
0x11066:	nop	word ptr cs:[rax + rax]


0x11072:	nop	dword ptr [rax]
0x11076:	nop	word ptr cs:[rax + rax]


0x110b6:	nop	word ptr cs:[rax + rax]


0x110e4:	nop	
0x110e6:	nop	word ptr cs:[rax + rax]


0x11172:	nop	dword ptr [rax]
0x11176:	nop	word ptr cs:[rax + rax]


0x111ca:	nop	word ptr [rax + rax]


0x111e7:	nop	word ptr [rax + rax]


0x1121e:	nop	


0x11248:	nop	dword ptr [rax + rax]


0x11263:	nop	word ptr cs:[rax + rax]
0x1126d:	nop	dword ptr [rax]


0x112a5:	nop	word ptr cs:[rax + rax]
0x112af:	nop	


0x11347:	nop	word ptr [rax + rax]


0x113b9:	nop	dword ptr [rax]


0x11417:	nop	word ptr [rax + rax]


0x114a3:	nop	word ptr cs:[rax + rax]
0x114ad:	nop	dword ptr [rax]


0x114b2:	nop	word ptr cs:[rax + rax]
0x114bc:	nop	dword ptr [rax]


0x114c5:	nop	word ptr cs:[rax + rax]
0x114cf:	nop	


0x114e5:	nop	
0x114e6:	nop	word ptr cs:[rax + rax]


0x11512:	nop	word ptr cs:[rax + rax]
0x1151c:	nop	dword ptr [rax]


0x1159d:	nop	dword ptr [rax]


0x11636:	nop	word ptr cs:[rax + rax]


0x1164a:	nop	word ptr [rax + rax]


0x11691:	nop	word ptr cs:[rax + rax]
0x1169b:	nop	dword ptr [rax + rax]


0x11736:	nop	word ptr cs:[rax + rax]


0x1177c:	nop	dword ptr [rax]


0x117ee:	nop	


0x11813:	nop	dword ptr [rax]
0x11816:	nop	word ptr cs:[rax + rax]


0x11854:	nop	
0x11856:	nop	word ptr cs:[rax + rax]


0x11864:	nop	
0x11866:	nop	word ptr cs:[rax + rax]


0x1198a:	nop	word ptr [rax + rax]


0x119ae:	nop	


0x11a01:	nop	word ptr cs:[rax + rax]
0x11a0b:	nop	dword ptr [rax + rax]


0x11a6d:	nop	dword ptr [rax]


0x11d99:	nop	dword ptr [rax]


0x11da5:	nop	
0x11da6:	nop	word ptr cs:[rax + rax]


0x11db5:	nop	
0x11db6:	nop	word ptr cs:[rax + rax]


0x11f56:	nop	word ptr cs:[rax + rax]


0x11fa9:	nop	dword ptr [rax]


0x1223e:	nop	


0x1248e:	nop	


0x1250b:	nop	dword ptr [rax + rax]


0x1278e:	nop	


0x12823:	nop	word ptr cs:[rax + rax]
0x1282d:	nop	dword ptr [rax]


0x12895:	nop	
0x12896:	nop	word ptr cs:[rax + rax]


0x128a2:	nop	word ptr cs:[rax + rax]
0x128ac:	nop	dword ptr [rax]


0x3890:	mov	byte ptr [rbp + 0x27], bl
0x3893:	mov	byte ptr [rbp + 0x28], bl
0x3896:	nop	word ptr cs:[rax + rax]
0x38a0:	test	r14, r14
0x38a3:	mov	r15, r14
0x38a6:	jne	0x3830


0x38d0:	mov	byte ptr [rbp + 0x22], bl
0x38d3:	jmp	0x38a0


0x38d8:	mov	byte ptr [rbp + 0x1d], bl
0x38db:	jmp	0x38a0


0x38e0:	mov	byte ptr [rbp + 0x1f], bl
0x38e3:	jmp	0x38a0


0x38e8:	mov	eax, ebx
0x38ea:	mov	byte ptr [rbp + 0x1e], bl
0x38ed:	xor	eax, 1
0x38f0:	mov	byte ptr [rbp + 0x20], al
0x38f3:	jmp	0x38a0


0x38f8:	mov	eax, ebx
0x38fa:	mov	byte ptr [rbp + 0x1e], bl
0x38fd:	mov	byte ptr [rbp + 0x1f], bl
0x3900:	xor	eax, 1
0x3903:	cmp	byte ptr [rip + 0x216848], 0
0x390a:	mov	byte ptr [rbp + 0x1d], bl
0x390d:	mov	byte ptr [rbp + 0x22], bl
0x3910:	mov	byte ptr [rbp + 0x20], al
0x3913:	je	0x3918


0xd4c0:	xor	r10d, r10d
0xd4c3:	mov	eax, dword ptr [rsp + 8]
0xd4c7:	cmp	eax, 2
0xd4ca:	je	0xda88


0xd4f0:	xor	r10d, r10d
0xd4f3:	cmp	dword ptr [rsp + 8], 2
0xd4f8:	je	0xda00


0xd518:	mov	edx, 9
0xd51d:	mov	ebx, 0x74
0xd522:	cmp	dword ptr [rsp + 8], 2
0xd527:	sete	al
0xd52a:	and	al, byte ptr [rsp + 0xf]
0xd52e:	jne	0xd67e


0xd558:	mov	edx, 8
0xd55d:	mov	ebx, 0x62
0xd562:	jmp	0xd534


0xd568:	cmp	dword ptr [rsp + 8], 2
0xd56d:	je	0xd940


0xd610:	cmp	byte ptr [rsp + 0xd], 0
0xd615:	jne	0xd7e3


0xd638:	cmp	dword ptr [rsp + 8], 2
0xd63d:	sete	dl
0xd640:	xor	eax, eax
0xd642:	jmp	0xd428


0xd650:	mov	edx, 7
0xd655:	mov	ebx, 0x61
0xd65a:	jmp	0xd534


0xd660:	cmp	dword ptr [rsp + 8], 2
0xd665:	sete	dl
0xd668:	test	rbp, rbp
0xd66b:	jne	0xd41c


0xd690:	cmp	dword ptr [rsp + 8], 2
0xd695:	sete	dl
0xd698:	xor	r12d, r12d
0xd69b:	jmp	0xd671


0xd6a0:	cmp	dword ptr [rsp + 8], 2
0xd6a5:	mov	ebx, 0x20
0xd6aa:	sete	dl
0xd6ad:	jmp	0xd671


0xd6b0:	mov	edx, 0xd
0xd6b5:	mov	ebx, 0x72
0xd6ba:	jmp	0xd522


0xd6c0:	mov	edx, 0xc
0xd6c5:	mov	ebx, 0x66
0xd6ca:	jmp	0xd534


0xd6d0:	mov	edx, 0xb
0xd6d5:	mov	ebx, 0x76
0xd6da:	jmp	0xd534


0xd6e0:	mov	edx, 0xa
0xd6e5:	mov	ebx, 0x6e
0xd6ea:	jmp	0xd522


0xd780:	xor	r10d, r10d
0xd783:	cmp	byte ptr [rsp + 0xd], 0
0xd788:	jne	0xd57e


0xd7a0:	mov	edx, 0xc
0xd7a5:	xor	r10d, r10d
0xd7a8:	mov	ebx, 0x66
0xd7ad:	jmp	0xd534


0xd7b8:	mov	edx, 0xa
0xd7bd:	xor	r10d, r10d
0xd7c0:	mov	ebx, 0x6e
0xd7c5:	jmp	0xd522


0xd7d0:	mov	ebx, 0x61
0xd7d5:	jmp	0xd5a0


0xd7e0:	xor	r10d, r10d
0xd7e3:	cmp	dword ptr [rsp + 8], 2
0xd7e8:	sete	dl
0xd7eb:	cmp	byte ptr [rsp + 0xf], 0
0xd7f0:	jne	0xe38a


0xd880:	cmp	dword ptr [rsp + 8], 2
0xd885:	mov	r12d, r10d
0xd888:	sete	dl
0xd88b:	xor	r10d, r10d
0xd88e:	xor	eax, eax
0xd890:	jmp	0xd428


0xd898:	cmp	dword ptr [rsp + 8], 2
0xd89d:	sete	dl
0xd8a0:	xor	r10d, r10d
0xd8a3:	jmp	0xd668


0xd8b0:	cmp	dword ptr [rsp + 8], 2
0xd8b5:	sete	dl
0xd8b8:	xor	r10d, r10d
0xd8bb:	xor	r12d, r12d
0xd8be:	jmp	0xd671


0xd8c8:	cmp	dword ptr [rsp + 8], 2
0xd8cd:	mov	r12d, r10d
0xd8d0:	mov	ebx, 0x20
0xd8d5:	sete	dl
0xd8d8:	xor	r10d, r10d
0xd8db:	jmp	0xd671


0xd8f8:	mov	ebx, 0x76
0xd8fd:	jmp	0xd5a0


0xd908:	mov	edx, 9
0xd90d:	xor	r10d, r10d
0xd910:	mov	ebx, 0x74
0xd915:	jmp	0xd522


0xd920:	mov	ebx, 0x62
0xd925:	jmp	0xd5a0


0xdec0:	test	ebx, ebx
0xdec2:	jne	0xe2bd


0x3726:	nop	word ptr cs:[rax + rax]


0x3777:	nop	word ptr [rax + rax]


0x37c1:	nop	dword ptr [rax]


0x388d:	nop	dword ptr [rax]


0x38c8:	nop	dword ptr [rax + rax]


0x38d5:	nop	dword ptr [rax]


0x38dd:	nop	dword ptr [rax]


0x38e5:	nop	dword ptr [rax]


0x38f5:	nop	dword ptr [rax]


0x3ae3:	nop	dword ptr [rax + rax]


0x3ba5:	nop	dword ptr [rax]


0x3bb6:	nop	word ptr cs:[rax + rax]


0x3daf:	nop	


0x3e1a:	nop	word ptr [rax + rax]


0x3e3b:	nop	dword ptr [rax + rax]


0x3e69:	nop	dword ptr [rax]


0x3e7d:	nop	dword ptr [rax]


0x3efb:	nop	dword ptr [rax + rax]


0x3f24:	nop	dword ptr [rax]


0x402a:	nop	word ptr [rax + rax]


0x40fc:	nop	dword ptr [rax]


0x4147:	nop	word ptr [rax + rax]


0x4174:	nop	dword ptr [rax]


0x41c9:	nop	dword ptr [rax]


0x4986:	nop	word ptr cs:[rax + rax]


0x4b31:	nop	dword ptr [rax]


0x4b5c:	nop	dword ptr [rax]


0x4b6d:	nop	dword ptr [rax]


0x4d12:	nop	word ptr [rax + rax]


0x4d1e:	nop	


0x4d5b:	nop	dword ptr [rax + rax]


0x4d95:	nop	dword ptr [rax]


0x4da2:	nop	word ptr [rax + rax]


0x4e0b:	nop	dword ptr [rax + rax]


0x4ed2:	nop	word ptr [rax + rax]


0x4f4b:	nop	dword ptr [rax + rax]


0x4f92:	nop	word ptr [rax + rax]


0x50c1:	nop	dword ptr [rax]


0x518c:	nop	dword ptr [rax]


0x51ed:	nop	dword ptr [rax]


0x5327:	nop	word ptr [rax + rax]


0x548c:	nop	dword ptr [rax]


0x54e3:	nop	dword ptr [rax + rax]


0x5524:	nop	dword ptr [rax]


0x5545:	nop	dword ptr [rax]


0x5556:	nop	word ptr cs:[rax + rax]


0x5579:	nop	dword ptr [rax]


0x55be:	nop	


0x5697:	nop	word ptr [rax + rax]


0x56ba:	nop	word ptr [rax + rax]


0x56d4:	nop	dword ptr [rax]


0x5751:	nop	dword ptr [rax]


0x58ed:	nop	dword ptr [rax]


0x5926:	nop	word ptr cs:[rax + rax]


0x59cc:	nop	dword ptr [rax]


0x5a21:	nop	dword ptr [rax]


0x5a3f:	nop	


0x5d8b:	nop	dword ptr [rax + rax]


0x5d98:	nop	dword ptr [rax + rax]


0x5ded:	nop	dword ptr [rax]


0x5df8:	nop	dword ptr [rax + rax]


0x5ec8:	nop	dword ptr [rax + rax]


0x6154:	nop	dword ptr [rax]


0x6276:	nop	word ptr cs:[rax + rax]


0x62bc:	nop	dword ptr [rax]


0x62eb:	nop	dword ptr [rax + rax]


0x6332:	nop	word ptr [rax + rax]


0x6347:	nop	word ptr [rax + rax]


0x63a6:	nop	word ptr cs:[rax + rax]


0x6486:	nop	word ptr cs:[rax + rax]


0x64c5:	nop	dword ptr [rax]


0x64f9:	nop	dword ptr [rax]


0x655a:	nop	word ptr [rax + rax]


0x6575:	nop	dword ptr [rax]


0x65e8:	nop	dword ptr [rax + rax]


0x6645:	nop	dword ptr [rax]


0x669d:	nop	dword ptr [rax]


0x6709:	nop	dword ptr [rax]


0x68ce:	nop	


0x6929:	nop	dword ptr [rax]


0x693d:	nop	dword ptr [rax]


0x6a0b:	nop	dword ptr [rax + rax]


0x6ab5:	nop	dword ptr [rax]


0x6b95:	nop	dword ptr [rax]


0x6be2:	nop	word ptr [rax + rax]


0x6c57:	nop	word ptr [rax + rax]


0x6c68:	nop	dword ptr [rax + rax]


0x6c7a:	nop	word ptr [rax + rax]


0x6d21:	nop	dword ptr [rax]


0x6d47:	nop	word ptr [rax + rax]


0x6daf:	nop	


0x6deb:	nop	dword ptr [rax + rax]


0x6e0b:	nop	dword ptr [rax + rax]


0x6e51:	nop	dword ptr [rax]


0x6ed6:	nop	word ptr cs:[rax + rax]


0x6f84:	nop	dword ptr [rax]


0x6ff9:	nop	dword ptr [rax]


0x7009:	nop	dword ptr [rax]


0x70db:	nop	dword ptr [rax + rax]


0x70ef:	nop	


0x7205:	nop	dword ptr [rax]


0x72d8:	nop	dword ptr [rax + rax]


0x7305:	nop	dword ptr [rax]


0x7387:	nop	word ptr [rax + rax]


0x73a4:	nop	dword ptr [rax]


0x73e5:	nop	dword ptr [rax]


0x7407:	nop	word ptr [rax + rax]


0x7426:	nop	word ptr cs:[rax + rax]


0x749b:	nop	dword ptr [rax + rax]


0x7511:	nop	dword ptr [rax]


0x76bb:	nop	dword ptr [rax + rax]


0x76f9:	nop	dword ptr [rax]


0x77c1:	nop	dword ptr [rax]


0x78c6:	nop	word ptr cs:[rax + rax]


0x79e5:	nop	dword ptr [rax]


0x7a5f:	nop	


0x7b0a:	nop	word ptr [rax + rax]


0x7c2a:	nop	word ptr [rax + rax]


0x7c54:	nop	dword ptr [rax]


0x7d4f:	nop	


0x7dac:	nop	dword ptr [rax]


0x7f71:	nop	dword ptr [rax]


0x853f:	nop	


0x8b95:	nop	dword ptr [rax]


0x9c2e:	nop	


0x9d1c:	nop	dword ptr [rax]


0x9e0a:	nop	word ptr [rax + rax]


0x9e8f:	nop	


0xa0a9:	nop	dword ptr [rax]


0xa129:	nop	dword ptr [rax]


0xa14c:	nop	dword ptr [rax]


0xa185:	nop	dword ptr [rax]


0xa19a:	nop	word ptr [rax + rax]


0xa1b6:	nop	word ptr cs:[rax + rax]


0xa1e2:	nop	word ptr [rax + rax]


0xa3bb:	nop	dword ptr [rax + rax]


0xa3e2:	nop	word ptr [rax + rax]


0xa512:	nop	word ptr [rax + rax]


0xa539:	nop	dword ptr [rax]


0xa5f9:	nop	dword ptr [rax]


0xa71d:	nop	dword ptr [rax]


0xa731:	nop	dword ptr [rax]


0xa74e:	nop	


0xa758:	nop	dword ptr [rax + rax]


0xa7c6:	nop	word ptr cs:[rax + rax]


0xa853:	nop	dword ptr [rax + rax]


0xa887:	nop	word ptr [rax + rax]


0xa8fd:	nop	dword ptr [rax]


0xa96f:	nop	


0xa9f4:	nop	dword ptr [rax]


0xaa23:	nop	dword ptr [rax + rax]


0xaacf:	nop	


0xab1e:	nop	


0xab2f:	nop	


0xace3:	nop	dword ptr [rax + rax]


0xae0b:	nop	dword ptr [rax + rax]


0xae38:	nop	dword ptr [rax + rax]


0xaf09:	nop	dword ptr [rax]


0xaf2f:	nop	


0xafec:	nop	dword ptr [rax]


0xb036:	nop	word ptr cs:[rax + rax]


0xb04a:	nop	word ptr [rax + rax]


0xb06b:	nop	dword ptr [rax + rax]


0xb0a4:	nop	dword ptr [rax]


0xb1ec:	nop	dword ptr [rax]


0xb237:	nop	word ptr [rax + rax]


0xb272:	nop	word ptr [rax + rax]


0xb2b3:	nop	dword ptr [rax + rax]


0xb301:	nop	dword ptr [rax]


0xb321:	nop	dword ptr [rax]


0xb383:	nop	dword ptr [rax + rax]


0xb3bc:	nop	dword ptr [rax]


0xb4fe:	nop	


0xb51d:	nop	dword ptr [rax]


0xb59b:	nop	dword ptr [rax + rax]


0xb5b7:	nop	word ptr [rax + rax]


0xb60c:	nop	dword ptr [rax]


0xb62e:	nop	


0xb6ab:	nop	dword ptr [rax + rax]


0xb704:	nop	dword ptr [rax]


0xb797:	nop	word ptr [rax + rax]


0xb7ab:	nop	dword ptr [rax + rax]


0xb96b:	nop	dword ptr [rax + rax]


0xb97b:	nop	dword ptr [rax + rax]


0xb993:	nop	dword ptr [rax + rax]


0xba4c:	nop	dword ptr [rax]


0xbac8:	nop	dword ptr [rax + rax]


0xbafd:	nop	dword ptr [rax]


0xbb32:	nop	word ptr [rax + rax]


0xbb81:	nop	dword ptr [rax]


0xbbbe:	nop	


0xbcab:	nop	dword ptr [rax + rax]


0xbd0a:	nop	word ptr [rax + rax]


0xbd49:	nop	dword ptr [rax]


0xbd59:	nop	dword ptr [rax]


0xbdde:	nop	


0xbe31:	nop	dword ptr [rax]


0xbefc:	nop	dword ptr [rax]


0xbf0a:	nop	word ptr [rax + rax]


0xbf6e:	nop	


0xbf84:	nop	dword ptr [rax]


0xbfd7:	nop	word ptr [rax + rax]


0xc037:	nop	word ptr [rax + rax]


0xc054:	nop	dword ptr [rax]


0xc10b:	nop	dword ptr [rax + rax]


0xc17c:	nop	dword ptr [rax]


0xc1a7:	nop	word ptr [rax + rax]


0xc1db:	nop	dword ptr [rax + rax]


0xc233:	nop	dword ptr [rax + rax]


0xc254:	nop	dword ptr [rax]


0xc272:	nop	word ptr [rax + rax]


0xc2ba:	nop	word ptr [rax + rax]


0xc2eb:	nop	dword ptr [rax + rax]


0xc32f:	nop	


0xc379:	nop	dword ptr [rax]


0xc4bf:	nop	


0xc4dc:	nop	dword ptr [rax]


0xc53f:	nop	


0xc566:	nop	word ptr cs:[rax + rax]


0xc5b5:	nop	dword ptr [rax]


0xc641:	nop	dword ptr [rax]


0xc656:	nop	word ptr cs:[rax + rax]


0xc688:	nop	dword ptr [rax + rax]


0xc699:	nop	dword ptr [rax]


0xc6c6:	nop	word ptr cs:[rax + rax]


0xc87f:	nop	


0xc8a1:	nop	dword ptr [rax]


0xc8c6:	nop	word ptr cs:[rax + rax]


0xc8da:	nop	word ptr [rax + rax]


0xc8e7:	nop	word ptr [rax + rax]


0xc9ab:	nop	dword ptr [rax + rax]


0xca2e:	nop	


0xca78:	nop	dword ptr [rax + rax]


0xcb22:	nop	word ptr [rax + rax]


0xcb5d:	nop	dword ptr [rax]


0xcb7e:	nop	


0xcb9e:	nop	


0xcc16:	nop	word ptr cs:[rax + rax]


0xcc8f:	nop	


0xcd55:	nop	dword ptr [rax]


0xcd76:	nop	word ptr cs:[rax + rax]


0xcd9e:	nop	


0xcdbe:	nop	


0xcddf:	nop	


0xcdea:	nop	word ptr [rax + rax]


0xce0e:	nop	


0xce8e:	nop	


0xcebe:	nop	


0xcf51:	nop	dword ptr [rax]


0xcf7c:	nop	dword ptr [rax]


0xd095:	nop	dword ptr [rax]


0xd14c:	nop	dword ptr [rax]


0xd19d:	nop	dword ptr [rax]


0xd3c8:	nop	dword ptr [rax + rax]


0xd4b7:	nop	word ptr [rax + rax]


0xd4ee:	nop	


0xd511:	nop	dword ptr [rax]


0xd552:	nop	word ptr [rax + rax]


0xd564:	nop	dword ptr [rax]


0xd608:	nop	dword ptr [rax + rax]


0xd631:	nop	dword ptr [rax]


0xd647:	nop	word ptr [rax + rax]


0xd65f:	nop	


0xd68e:	nop	


0xd69d:	nop	dword ptr [rax]


0xd6af:	nop	


0xd6bf:	nop	


0xd6cf:	nop	


0xd6df:	nop	


0xd6ef:	nop	


0xd75c:	nop	dword ptr [rax]


0xd77c:	nop	dword ptr [rax]


0xd78e:	nop	


0xd79f:	nop	


0xd7b2:	nop	word ptr [rax + rax]


0xd7ca:	nop	word ptr [rax + rax]


0xd7da:	nop	word ptr [rax + rax]


0xd87b:	nop	dword ptr [rax + rax]


0xd895:	nop	dword ptr [rax]


0xd8a8:	nop	dword ptr [rax + rax]


0xd8c3:	nop	dword ptr [rax + rax]


0xd8f2:	nop	word ptr [rax + rax]


0xd902:	nop	word ptr [rax + rax]


0xd91a:	nop	word ptr [rax + rax]


0xd92a:	nop	word ptr [rax + rax]


0xd938:	nop	dword ptr [rax + rax]


0xd95f:	nop	


0xd9f9:	nop	dword ptr [rax]


0xda42:	nop	word ptr [rax + rax]


0xda68:	nop	dword ptr [rax + rax]


0xda81:	nop	dword ptr [rax]


0xdaa2:	nop	word ptr [rax + rax]


0xdc08:	nop	dword ptr [rax + rax]


0xdd1b:	nop	dword ptr [rax + rax]


0xdd3e:	nop	


0xde05:	nop	dword ptr [rax]


0xdebd:	nop	dword ptr [rax]


0xe0c6:	nop	word ptr cs:[rax + rax]


0xe159:	nop	dword ptr [rax]


0xe1cd:	nop	dword ptr [rax]


0xe2ad:	nop	dword ptr [rax]


0xe5bb:	nop	dword ptr [rax + rax]


0xee26:	nop	word ptr cs:[rax + rax]


0xee9d:	nop	dword ptr [rax]


0xeeb7:	nop	word ptr [rax + rax]


0xef54:	nop	dword ptr [rax]


0xefb1:	nop	dword ptr [rax]


0xf05f:	nop	


0xf144:	nop	dword ptr [rax]


0xf167:	nop	word ptr [rax + rax]


0xf1fa:	nop	word ptr [rax + rax]


0xf271:	nop	dword ptr [rax]


0xf2ea:	nop	word ptr [rax + rax]


0xf39b:	nop	dword ptr [rax + rax]


0xf3a9:	nop	dword ptr [rax]


0xf3fd:	nop	dword ptr [rax]


0xf46b:	nop	dword ptr [rax + rax]


0xf485:	nop	dword ptr [rax]


0xf59e:	nop	


0xf644:	nop	dword ptr [rax]


0xf64c:	nop	dword ptr [rax]


0xf6b9:	nop	dword ptr [rax]


0xf7d2:	nop	word ptr [rax + rax]


0xf8d5:	nop	dword ptr [rax]


0xf8ee:	nop	


0xf906:	nop	word ptr cs:[rax + rax]


0xfb1a:	nop	word ptr [rax + rax]


0xfb24:	nop	dword ptr [rax]


0xfb2f:	nop	


0xfb81:	nop	dword ptr [rax]


0xfbe7:	nop	word ptr [rax + rax]


0xffd9:	nop	dword ptr [rax]


0x1003c:	nop	dword ptr [rax]


0x1018f:	nop	


0x101c7:	nop	word ptr [rax + rax]


0x10211:	nop	dword ptr [rax]


0x102b7:	nop	word ptr [rax + rax]


0x1050c:	nop	dword ptr [rax]


0x10566:	nop	word ptr cs:[rax + rax]


0x105da:	nop	word ptr [rax + rax]


0x105f1:	nop	dword ptr [rax]


0x10649:	nop	dword ptr [rax]


0x10658:	nop	dword ptr [rax + rax]


0x10677:	nop	word ptr [rax + rax]


0x10697:	nop	word ptr [rax + rax]


0x106ce:	nop	


0x106f2:	nop	word ptr [rax + rax]


0x1070d:	nop	dword ptr [rax]


0x1082e:	nop	


0x1087d:	nop	dword ptr [rax]


0x108bf:	nop	


0x108c7:	nop	word ptr [rax + rax]


0x108ef:	nop	


0x10945:	nop	dword ptr [rax]


0x10973:	nop	dword ptr [rax + rax]


0x10a66:	nop	word ptr cs:[rax + rax]


0x10af5:	nop	dword ptr [rax]


0x10b16:	nop	word ptr cs:[rax + rax]


0x10b75:	nop	dword ptr [rax]


0x10bb1:	nop	dword ptr [rax]


0x10bf8:	nop	dword ptr [rax + rax]


0x10c47:	nop	word ptr [rax + rax]


0x10ca4:	nop	dword ptr [rax]


0x10cd2:	nop	word ptr [rax + rax]


0x10d86:	nop	word ptr cs:[rax + rax]


0x10de9:	nop	dword ptr [rax]


0x10ff1:	nop	dword ptr [rax]


0x110a2:	nop	word ptr [rax + rax]


0x11129:	nop	dword ptr [rax]


0x11154:	nop	dword ptr [rax]


0x111ad:	nop	dword ptr [rax]


0x11334:	nop	dword ptr [rax]


0x11373:	nop	dword ptr [rax + rax]


0x113cf:	nop	


0x11554:	nop	dword ptr [rax]


0x11571:	nop	dword ptr [rax]


0x11582:	nop	word ptr [rax + rax]


0x115ce:	nop	


0x11614:	nop	dword ptr [rax]


0x116da:	nop	word ptr [rax + rax]


0x1172c:	nop	dword ptr [rax]


0x11766:	nop	word ptr cs:[rax + rax]


0x117c3:	nop	dword ptr [rax + rax]


0x1184d:	nop	dword ptr [rax]


0x118af:	nop	


0x11971:	nop	dword ptr [rax]


0x11b1d:	nop	dword ptr [rax]


0x11bb2:	nop	word ptr [rax + rax]


0x11be4:	nop	dword ptr [rax]


0x11cb2:	nop	word ptr [rax + rax]


0x11df3:	nop	dword ptr [rax + rax]


0x11e41:	nop	dword ptr [rax]


0x11ea8:	nop	dword ptr [rax + rax]


0x11eee:	nop	


0x11f98:	nop	dword ptr [rax + rax]


0x124d5:	nop	dword ptr [rax]


0x125ab:	nop	dword ptr [rax + rax]


0x125d6:	nop	word ptr cs:[rax + rax]


0x1260f:	nop	


0x12659:	nop	dword ptr [rax]


0x1267b:	nop	dword ptr [rax + rax]


0x12721:	nop	dword ptr [rax]


0x127b9:	nop	dword ptr [rax]


0x12805:	nop	dword ptr [rax]


