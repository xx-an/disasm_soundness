0x155c0:	sub	rsp, 8
0x155c4:	add	rsp, 8
0x155c8:	ret	


0x155b0:	mov	rdx, qword ptr [rip + 0x205a51]
0x155b7:	xor	esi, esi
0x155b9:	jmp	0x1d50


0x155a0:	ret	


0x15530:	push	r15
0x15532:	push	r14
0x15534:	mov	r15, rdx
0x15537:	push	r13
0x15539:	push	r12
0x1553b:	lea	r12, [rip + 0x20556e]
0x15542:	push	rbp
0x15543:	lea	rbp, [rip + 0x20556e]
0x1554a:	push	rbx
0x1554b:	mov	r13d, edi
0x1554e:	mov	r14, rsi
0x15551:	sub	rbp, r12
0x15554:	sub	rsp, 8
0x15558:	sar	rbp, 3
0x1555c:	call	0x1990


0x154d0:	mov	rax, qword ptr [rdi + 8]
0x154d4:	cmp	qword ptr [rdi + 0x10], rax
0x154d8:	je	0x154e0


0x15490:	test	rdi, rdi
0x15493:	push	rbx
0x15494:	mov	rbx, rdi
0x15497:	je	0x154aa


0x15410:	push	r12
0x15412:	push	rbp
0x15413:	push	rbx
0x15414:	mov	rbx, rdi
0x15417:	call	0x1bf0


0x153d0:	sub	rsp, 8
0x153d4:	mov	edi, 0xe
0x153d9:	call	0x1c60


0x15370:	sub	rsp, 8
0x15374:	xor	esi, esi
0x15376:	call	0x1ca0


0x152f0:	push	r12
0x152f2:	push	rbp
0x152f3:	mov	rbp, rdi
0x152f6:	push	rbx
0x152f7:	call	0x1a20


0x152a0:	test	rdx, rdx
0x152a3:	jne	0x152c8


0x15280:	sub	rsp, 8
0x15284:	push	0
0x15286:	push	qword ptr [rsp + 0x28]
0x1528a:	push	qword ptr [rsp + 0x28]
0x1528e:	push	qword ptr [rsp + 0x28]
0x15292:	call	0x14e70


0x15260:	sub	rsp, 8
0x15264:	push	1
0x15266:	push	qword ptr [rsp + 0x20]
0x1526a:	push	qword ptr [rsp + 0x20]
0x1526e:	push	0
0x15270:	call	0x14e70


0x15240:	sub	rsp, 8
0x15244:	push	0
0x15246:	push	r9
0x15248:	mov	r9, rdx
0x1524b:	call	0x149f0


0x15220:	sub	rsp, 8
0x15224:	mov	r9, rdx
0x15227:	push	1
0x15229:	push	r8
0x1522b:	xor	r8d, r8d
0x1522e:	call	0x149f0


0x15180:	test	r8d, 0xfffffff8
0x15187:	jne	0x15218


0x15130:	push	rbx
0x15131:	mov	rbx, rdi
0x15134:	mov	rdi, qword ptr [rdi]
0x15137:	test	rdi, rdi
0x1513a:	je	0x15141


0x150a0:	push	r13
0x150a2:	push	r12
0x150a4:	push	rbp
0x150a5:	push	rbx
0x150a6:	sub	rsp, 8
0x150aa:	cmp	edi, 0x10
0x150ad:	ja	0x15110


0x14f90:	mov	eax, edx
0x14f92:	push	r14
0x14f94:	push	r13
0x14f96:	and	eax, 1
0x14f99:	push	r12
0x14f9b:	push	rbp
0x14f9c:	cmp	eax, 1
0x14f9f:	push	rbx
0x14fa0:	mov	rbx, rdi
0x14fa3:	sbb	r14, r14
0x14fa6:	mov	qword ptr [rdi], 0
0x14fad:	mov	qword ptr [rdi + 8], 0
0x14fb5:	and	r14d, 0xfd4fca
0x14fbc:	mov	qword ptr [rdi + 0x10], 0
0x14fc4:	mov	edi, 0x100
0x14fc9:	mov	r12, rsi
0x14fcc:	mov	ebp, edx
0x14fce:	add	r14, 0x3b2fc
0x14fd5:	call	0x1c20


0x14e70:	push	r15
0x14e72:	push	r14
0x14e74:	push	r13
0x14e76:	push	r12
0x14e78:	mov	r12, rdi
0x14e7b:	push	rbp
0x14e7c:	push	rbx
0x14e7d:	mov	rbp, r8
0x14e80:	mov	rbx, rdx
0x14e83:	mov	rdx, rbp
0x14e86:	sub	rsp, 0x28
0x14e8a:	shr	rdx, 0x3f
0x14e8e:	mov	rax, qword ptr [rsp + 0x70]
0x14e93:	mov	edi, edx
0x14e95:	mov	r8d, dword ptr [rsp + 0x78]
0x14e9a:	shr	rax, 0x3f
0x14e9e:	or	dil, al
0x14ea1:	jne	0x14f70


0x149f0:	push	r15
0x149f2:	push	r14
0x149f4:	mov	rax, r8
0x149f7:	push	r13
0x149f9:	push	r12
0x149fb:	add	r8, rcx
0x149fe:	push	rbp
0x149ff:	push	rbx
0x14a00:	sub	rsp, 0x38
0x14a04:	test	rcx, rcx
0x14a07:	mov	ebx, dword ptr [rsp + 0x78]
0x14a0b:	mov	r12, qword ptr [rsp + 0x70]
0x14a10:	mov	dword ptr [rsp + 0x28], ebx
0x14a14:	js	0x14d50


0x14920:	push	r12
0x14922:	push	rbp
0x14923:	xor	eax, eax
0x14925:	push	rbx
0x14926:	mov	rbp, qword ptr [rdi + 0x20]
0x1492a:	mov	rbx, rdi
0x1492d:	mov	r12, qword ptr [rdi]
0x14930:	lea	rdi, [rbp + 8]
0x14934:	mov	rcx, rbp
0x14937:	mov	qword ptr [rbp], 0
0x1493f:	mov	qword ptr [rbp + 0xf8], 0
0x1494a:	and	rdi, 0xfffffffffffffff8
0x1494e:	sub	rcx, rdi
0x14951:	add	ecx, 0x100
0x14957:	shr	ecx, 3
0x1495a:	rep stosq	qword ptr [rdi], rax


0x14910:	mov	rax, qword ptr [rip + 0x206921]
0x14917:	mov	qword ptr [rip + 0x20691a], rdi
0x1491e:	ret	


0x148a0:	sub	rsp, 8
0x148a4:	mov	rcx, qword ptr [rip + 0x20698d]
0x148ab:	mov	r8, rdi
0x148ae:	mov	rdi, rdx
0x148b1:	mov	rax, rcx
0x148b4:	shr	rax, 0x19
0x148b8:	and	eax, 1
0x148bb:	shl	eax, 4
0x148be:	mov	edx, eax
0x148c0:	movzx	eax, byte ptr [rdi + 0x38]
0x148c4:	and	eax, 0xffffffef
0x148c7:	or	eax, edx
0x148c9:	mov	rdx, rsi
0x148cc:	mov	rsi, r8
0x148cf:	or	eax, 0xffffff80
0x148d2:	mov	byte ptr [rdi + 0x38], al
0x148d5:	call	0x137a0


0x137a0:	push	r15
0x137a2:	push	r14
0x137a4:	push	r13
0x137a6:	push	r12
0x137a8:	push	rbp
0x137a9:	push	rbx
0x137aa:	sub	rsp, 0x128
0x137b1:	mov	qword ptr [rdi + 0x18], rcx
0x137b5:	mov	qword ptr [rdi + 0x10], 0
0x137bd:	mov	rax, qword ptr fs:[0x28]
0x137c6:	mov	qword ptr [rsp + 0x118], rax
0x137ce:	xor	eax, eax
0x137d0:	movzx	eax, byte ptr [rdi + 0x38]
0x137d4:	mov	qword ptr [rsp + 8], rdi
0x137d9:	mov	qword ptr [rsp + 0x10], rsi
0x137de:	mov	qword ptr [rsp], rdx
0x137e2:	mov	qword ptr [rsp + 0x18], rcx
0x137e7:	mov	dword ptr [rsp + 0x4c], 0
0x137ef:	mov	qword ptr [rdi + 0x30], 0
0x137f7:	mov	rbx, qword ptr [rdi]
0x137fa:	mov	byte ptr [rsp + 0x20], al
0x137fe:	and	eax, 0xffffff90
0x13801:	cmp	qword ptr [rdi + 8], 0xe7
0x13809:	mov	byte ptr [rdi + 0x38], al
0x1380c:	jbe	0x14606


0x13620:	push	r15
0x13622:	push	r14
0x13624:	mov	r14, rcx
0x13627:	push	r13
0x13629:	push	r12
0x1362b:	mov	r13, r9
0x1362e:	push	rbp
0x1362f:	push	rbx
0x13630:	mov	rbp, rdx
0x13633:	mov	r12, rdi
0x13636:	sub	rsp, 0x58
0x1363a:	mov	rbx, qword ptr [rsi]
0x1363d:	mov	rax, qword ptr fs:[0x28]
0x13646:	mov	qword ptr [rsp + 0x48], rax
0x1364b:	xor	eax, eax
0x1364d:	mov	qword ptr [rsp + 0x28], rsi
0x13652:	mov	qword ptr [rsp + 0x10], r8
0x13657:	mov	rax, qword ptr [rbx + 0xa8]
0x1365e:	mov	qword ptr [rsp + 0x20], rax
0x13663:	call	0x13490


0x13490:	push	r15
0x13492:	push	r14
0x13494:	mov	r15, rcx
0x13497:	push	r13
0x13499:	push	r12
0x1349b:	mov	r13, rsi
0x1349e:	push	rbp
0x1349f:	push	rbx
0x134a0:	mov	rbx, r9
0x134a3:	mov	rbp, rdx
0x134a6:	mov	r12, r8
0x134a9:	sub	rsp, 0x48
0x134ad:	mov	rax, qword ptr fs:[0x28]
0x134b6:	mov	qword ptr [rsp + 0x38], rax
0x134bb:	xor	eax, eax
0x134bd:	mov	rax, qword ptr [rsi]
0x134c0:	mov	qword ptr [rsp], rdi
0x134c4:	mov	qword ptr [rsp + 0x10], rax
0x134c9:	call	0x11fb0


0x11fb0:	push	r15
0x11fb2:	push	r14
0x11fb4:	push	r13
0x11fb6:	push	r12
0x11fb8:	push	rbp
0x11fb9:	push	rbx
0x11fba:	sub	rsp, 0x128
0x11fc1:	mov	qword ptr [rsp + 0x20], rcx
0x11fc6:	movzx	ecx, byte ptr [rdx + 8]
0x11fca:	mov	rax, qword ptr fs:[0x28]
0x11fd3:	mov	qword ptr [rsp + 0x118], rax
0x11fdb:	xor	eax, eax
0x11fdd:	mov	rax, qword ptr [rsi]
0x11fe0:	mov	qword ptr [rsp + 0x18], rdx
0x11fe5:	mov	qword ptr [rsp + 0x40], r9
0x11fea:	cmp	cl, 0x24
0x11fed:	mov	qword ptr [rsp + 0x10], rax
0x11ff2:	ja	0x120b0


0x11ef0:	push	r14
0x11ef2:	mov	r14, rdi
0x11ef5:	push	r13
0x11ef7:	mov	r13, rsi
0x11efa:	push	r12
0x11efc:	mov	r12, -2
0x11f03:	push	rbp
0x11f04:	mov	rbp, rdx
0x11f07:	push	rbx
0x11f08:	mov	rbx, -1
0x11f0f:	nop	
0x11f10:	mov	rdx, rbp
0x11f13:	mov	rsi, r14
0x11f16:	mov	rdi, r13
0x11f19:	call	0x117f0


0x117f0:	push	r15
0x117f2:	push	r14
0x117f4:	push	r13
0x117f6:	push	r12
0x117f8:	push	rbp
0x117f9:	push	rbx
0x117fa:	mov	rbp, rdi
0x117fd:	sub	rsp, 0x38
0x11801:	mov	r14, qword ptr [rsi + 0x48]
0x11805:	mov	rax, qword ptr fs:[0x28]
0x1180e:	mov	qword ptr [rsp + 0x28], rax
0x11813:	xor	eax, eax
0x11815:	cmp	qword ptr [rsi + 0x68], r14
0x11819:	jle	0x118b0


0x11590:	push	r14
0x11592:	push	r13
0x11594:	mov	r10, rsi
0x11597:	push	r12
0x11599:	push	rbp
0x1159a:	movsxd	r11, ecx
0x1159d:	push	rbx
0x1159e:	mov	rbp, rdx
0x115a1:	mov	rbx, rdi
0x115a4:	sub	rsp, 0x20
0x115a8:	mov	r12, qword ptr [rsi + 0x48]
0x115ac:	mov	rax, qword ptr fs:[0x28]
0x115b5:	mov	qword ptr [rsp + 0x18], rax
0x115ba:	xor	eax, eax
0x115bc:	cmp	dword ptr [rsi + 0x90], 1
0x115c3:	je	0x11618


0x10d40:	push	r15
0x10d42:	push	r14
0x10d44:	mov	rax, rdi
0x10d47:	push	r13
0x10d49:	push	r12
0x10d4b:	mov	r13, rsi
0x10d4e:	push	rbp
0x10d4f:	push	rbx
0x10d50:	mov	rbp, rdx
0x10d53:	mov	rbx, rcx
0x10d56:	lea	rcx, [rdx*8]
0x10d5e:	sub	rsp, 0xa8
0x10d65:	mov	r12, qword ptr [rax + 0x98]
0x10d6c:	mov	rax, qword ptr [rax + 0xb8]
0x10d73:	mov	qword ptr [rsp + 8], rdi
0x10d78:	mov	qword ptr [rsp + 0x18], rcx
0x10d7d:	mov	rdi, qword ptr fs:[0x28]
0x10d86:	mov	qword ptr [rsp + 0x98], rdi
0x10d8e:	xor	edi, edi
0x10d90:	mov	rdx, qword ptr [rax + rdx*8]
0x10d94:	mov	dword ptr [rsp + 0x5c], 0
0x10d9c:	mov	rcx, qword ptr [rbx + 8]
0x10da0:	test	rdx, rdx
0x10da3:	je	0x10ff8


0xf610:	push	r15
0xf612:	push	r14
0xf614:	push	r13
0xf616:	push	r12
0xf618:	mov	r13, r9
0xf61b:	push	rbp
0xf61c:	push	rbx
0xf61d:	mov	rbp, rcx
0xf620:	mov	ecx, 0x20
0xf625:	mov	r12, r8
0xf628:	sub	rsp, 0x238
0xf62f:	mov	rbx, qword ptr [rdi]
0xf632:	mov	rax, qword ptr [rsp + 0x278]
0xf63a:	mov	qword ptr [rsp + 0x48], rdi
0xf63f:	mov	qword ptr [rsp + 0x78], rsi
0xf644:	mov	rsi, rdi
0xf647:	lea	rdi, [rsp + 0x120]
0xf64f:	mov	qword ptr [rsp + 0x88], rdx
0xf657:	mov	qword ptr [rsp + 0x38], rbx
0xf65c:	mov	qword ptr [rsp + 0xb8], rax
0xf664:	mov	qword ptr [rsp], rdi
0xf668:	mov	rax, qword ptr fs:[0x28]
0xf671:	mov	qword ptr [rsp + 0x228], rax
0xf679:	xor	eax, eax
0xf67b:	rep stosq	qword ptr [rdi], rax


0xf2d0:	push	r15
0xf2d2:	push	r14
0xf2d4:	mov	r14, rdi
0xf2d7:	push	r13
0xf2d9:	push	r12
0xf2db:	mov	r13, rsi
0xf2de:	push	rbp
0xf2df:	push	rbx
0xf2e0:	sub	rsp, 0x68
0xf2e4:	mov	r15, qword ptr [rsi + 0x18]
0xf2e8:	mov	rbx, qword ptr [rsi + 0x10]
0xf2ec:	mov	qword ptr [rsp], rdi
0xf2f0:	mov	edi, 8
0xf2f5:	mov	qword ptr [rsp + 0x40], 1
0xf2fe:	mov	rax, qword ptr fs:[0x28]
0xf307:	mov	qword ptr [rsp + 0x58], rax
0xf30c:	xor	eax, eax
0xf30e:	mov	qword ptr [rsp + 0x48], 1
0xf317:	call	0x1c20


0xf0e0:	push	r15
0xf0e2:	push	r14
0xf0e4:	push	r13
0xf0e6:	push	r12
0xf0e8:	mov	r13, rdi
0xf0eb:	push	rbp
0xf0ec:	push	rbx
0xf0ed:	mov	rbx, rsi
0xf0f0:	sub	rsp, 0x38
0xf0f4:	mov	r12, qword ptr [rsi + 0x48]
0xf0f8:	mov	r14, qword ptr [rsi + 0xb8]
0xf0ff:	mov	rax, qword ptr fs:[0x28]
0xf108:	mov	qword ptr [rsp + 0x28], rax
0xf10d:	xor	eax, eax
0xf10f:	mov	r15, qword ptr [rsi + 0x98]
0xf116:	lea	rbp, [r12*8]
0xf11e:	add	r14, rbp
0xf121:	cmp	qword ptr [rsi + 0xc0], r12
0xf128:	jge	0xf170


0xe7f0:	push	r15
0xe7f2:	push	r14
0xe7f4:	push	r13
0xe7f6:	push	r12
0xe7f8:	push	rbp
0xe7f9:	push	rbx
0xe7fa:	sub	rsp, 0xb8
0xe801:	mov	r15, qword ptr [rdi + 0x48]
0xe805:	mov	rax, qword ptr fs:[0x28]
0xe80e:	mov	qword ptr [rsp + 0xa8], rax
0xe816:	xor	eax, eax
0xe818:	cmp	qword ptr [rsi], 0
0xe81c:	mov	rax, qword ptr [rdi + 0x98]
0xe823:	mov	qword ptr [rsp + 0x48], rsi
0xe828:	mov	qword ptr [rsp + 0x40], rdx
0xe82d:	mov	qword ptr [rsp + 0x38], rax
0xe832:	jle	0xeb60


0xe650:	push	r15
0xe652:	push	r14
0xe654:	mov	r14, rcx
0xe657:	push	r13
0xe659:	push	r12
0xe65b:	mov	r13, rsi
0xe65e:	push	rbp
0xe65f:	push	rbx
0xe660:	lea	rsi, [rdx + 0x10]
0xe664:	mov	rbp, rdx
0xe667:	mov	r9, r8
0xe66a:	mov	r12, r8
0xe66d:	sub	rsp, 0x20
0xe671:	mov	rcx, qword ptr [rdx + 8]
0xe675:	mov	r8, r14
0xe678:	push	8
0xe67a:	mov	rdx, qword ptr [rdx]
0xe67d:	mov	rbx, rdi
0xe680:	call	0xd600


0xdd60:	push	rbp
0xdd61:	mov	rbp, rsp
0xdd64:	push	r15
0xdd66:	push	r14
0xdd68:	push	r13
0xdd6a:	push	r12
0xdd6c:	mov	r13, rcx
0xdd6f:	push	rbx
0xdd70:	mov	r12, rsi
0xdd73:	sub	rsp, 0xb8
0xdd7a:	mov	qword ptr [rbp - 0x98], rdx
0xdd81:	mov	qword ptr [rbp - 0x50], 0
0xdd89:	mov	rax, qword ptr fs:[0x28]
0xdd92:	mov	qword ptr [rbp - 0x38], rax
0xdd96:	xor	eax, eax
0xdd98:	mov	rax, qword ptr [rdi]
0xdd9b:	test	r8b, r8b
0xdd9e:	mov	qword ptr [rbp - 0x48], 2
0xdda6:	mov	qword ptr [rbp - 0x40], 0
0xddae:	mov	qword ptr [rbp - 0x90], rax
0xddb5:	je	0xe55d


0xd600:	push	r15
0xd602:	push	r14
0xd604:	mov	r15, rdi
0xd607:	push	r13
0xd609:	push	r12
0xd60b:	push	rbp
0xd60c:	push	rbx
0xd60d:	mov	rbp, rcx
0xd610:	mov	rbx, rdx
0xd613:	sub	rsp, 0xd8
0xd61a:	mov	rcx, qword ptr [rdi + 0x98]
0xd621:	mov	r13, qword ptr [rsi + 8]
0xd625:	mov	rax, qword ptr fs:[0x28]
0xd62e:	mov	qword ptr [rsp + 0xc8], rax
0xd636:	xor	eax, eax
0xd638:	mov	rax, rdx
0xd63b:	mov	qword ptr [rsp + 0x60], rsi
0xd640:	mov	qword ptr [rsp + 0x78], r8
0xd645:	shl	rax, 4
0xd649:	add	rax, qword ptr [rcx]
0xd64c:	mov	qword ptr [rsp + 0x40], r9
0xd651:	mov	qword ptr [rsp + 0x30], rcx
0xd656:	mov	dword ptr [rsp + 0x88], 0
0xd661:	mov	rax, qword ptr [rax]
0xd664:	mov	qword ptr [rsp + 0x48], rax
0xd669:	movsxd	rax, dword ptr [rdi + 0xe0]
0xd670:	add	rax, r9
0xd673:	cmp	rax, r13
0xd676:	jge	0xdc96


0xd3a0:	shl	rdx, 4
0xd3a4:	push	r13
0xd3a6:	push	r12
0xd3a8:	lea	r9, [rdi + rdx]
0xd3ac:	push	rbp
0xd3ad:	push	rbx
0xd3ae:	sub	rsp, 8
0xd3b2:	movzx	r11d, byte ptr [r9 + 8]
0xd3b7:	cmp	r11b, 7
0xd3bb:	je	0xd4d0


0xce70:	push	r15
0xce72:	push	r14
0xce74:	mov	rax, rdi
0xce77:	push	r13
0xce79:	push	r12
0xce7b:	push	rbp
0xce7c:	push	rbx
0xce7d:	xor	ebx, ebx
0xce7f:	mov	rbp, rcx
0xce82:	sub	rsp, 0x178
0xce89:	mov	rax, qword ptr [rax]
0xce8c:	mov	qword ptr [rsp + 0x30], rdi
0xce91:	mov	qword ptr [rsp + 0x20], rsi
0xce96:	mov	rdi, qword ptr fs:[0x28]
0xce9f:	mov	qword ptr [rsp + 0x168], rdi
0xcea7:	xor	edi, edi
0xcea9:	cmp	dword ptr [rax + 0xb4], 1
0xceb0:	mov	qword ptr [rsp + 0x28], rdx
0xceb5:	mov	qword ptr [rsp + 8], rax
0xceba:	jne	0xced3


0xcc00:	push	r15
0xcc02:	push	r14
0xcc04:	mov	r14, rdx
0xcc07:	push	r13
0xcc09:	push	r12
0xcc0b:	mov	r13, rcx
0xcc0e:	push	rbp
0xcc0f:	push	rbx
0xcc10:	mov	rbp, rdi
0xcc13:	mov	edi, 0x20
0xcc18:	mov	r12d, r8d
0xcc1b:	sub	rsp, 0x58
0xcc1f:	mov	qword ptr [rsp], rsi
0xcc23:	mov	esi, 1
0xcc28:	mov	qword ptr [rsp + 8], r9
0xcc2d:	mov	rax, qword ptr fs:[0x28]
0xcc36:	mov	qword ptr [rsp + 0x48], rax
0xcc3b:	xor	eax, eax
0xcc3d:	mov	qword ptr [rsp + 0x18], 0
0xcc46:	call	0x1bc0


0xc3f0:	push	r14
0xc3f2:	push	r13
0xc3f4:	mov	r13, rcx
0xc3f7:	push	r12
0xc3f9:	push	rbp
0xc3fa:	mov	r12, r9
0xc3fd:	push	rbx
0xc3fe:	mov	rbp, rdi
0xc401:	mov	rbx, rsi
0xc404:	sub	rsp, 0x10
0xc408:	test	qword ptr [rsp + 0x40], 0x400000
0xc411:	je	0xc438


0xc3a0:	push	rbp
0xc3a1:	push	rbx
0xc3a2:	mov	rbp, rdi
0xc3a5:	mov	rdi, rsi
0xc3a8:	mov	rbx, rsi
0xc3ab:	sub	rsp, 8
0xc3af:	call	0x1ab0


0xc300:	push	r12
0xc302:	push	rbp
0xc303:	push	rbx
0xc304:	mov	rax, qword ptr [rdi]
0xc307:	sub	rax, 1
0xc30b:	test	rax, rax
0xc30e:	mov	qword ptr [rdi], rax
0xc311:	js	0xc375


0xc2b0:	push	r12
0xc2b2:	push	rbp
0xc2b3:	mov	rbp, rdi
0xc2b6:	push	rbx
0xc2b7:	cmp	qword ptr [rdi], 0
0xc2bb:	jle	0xc2f2


0xc220:	cmp	byte ptr [rsi + 0x30], 0x10
0xc224:	je	0xc288


0xb680:	push	r15
0xb682:	push	r14
0xb684:	mov	r15, rdi
0xb687:	push	r13
0xb689:	push	r12
0xb68b:	mov	edi, 0x3800
0xb690:	push	rbp
0xb691:	push	rbx
0xb692:	sub	rsp, 0x108
0xb699:	mov	rax, qword ptr fs:[0x28]
0xb6a2:	mov	qword ptr [rsp + 0xf8], rax
0xb6aa:	xor	eax, eax
0xb6ac:	mov	qword ptr [rsp + 8], rsi
0xb6b1:	call	0x1c20


0xb440:	push	r15
0xb442:	push	r14
0xb444:	mov	r14, rdx
0xb447:	push	r13
0xb449:	push	r12
0xb44b:	lea	rdx, [rsi + rsi*2]
0xb44f:	push	rbp
0xb450:	push	rbx
0xb451:	pxor	xmm0, xmm0
0xb455:	sub	rsp, 0x48
0xb459:	mov	rax, qword ptr fs:[0x28]
0xb462:	mov	qword ptr [rsp + 0x38], rax
0xb467:	xor	eax, eax
0xb469:	mov	rax, qword ptr [rdi + 0x38]
0xb46d:	mov	qword ptr [rsp + 0x30], 0
0xb476:	movaps	xmmword ptr [rsp + 0x20], xmm0
0xb47b:	mov	qword ptr [rsp + 0x10], rcx
0xb480:	lea	rbp, [rax + rdx*8]
0xb484:	mov	r10, qword ptr [rbp + 8]
0xb488:	test	r10, r10
0xb48b:	jle	0xb672


0xaca0:	push	r15
0xaca2:	push	r14
0xaca4:	mov	r15, rsi
0xaca7:	push	r13
0xaca9:	push	r12
0xacab:	mov	r10d, edx
0xacae:	push	rbp
0xacaf:	push	rbx
0xacb0:	mov	rbp, rsi
0xacb3:	mov	rbx, rdi
0xacb6:	sub	rsp, 0x48
0xacba:	mov	rax, qword ptr fs:[0x28]
0xacc3:	mov	qword ptr [rsp + 0x38], rax
0xacc8:	xor	eax, eax
0xacca:	mov	rax, qword ptr [rdi + 0x28]
0xacce:	sub	rbp, rax
0xacd1:	cmp	rax, rsi
0xacd4:	jle	0xad36


0xabd0:	push	r12
0xabd2:	mov	r12, rdx
0xabd5:	push	rbp
0xabd6:	push	rbx
0xabd7:	mov	edx, dword ptr [rdi + 0xa0]
0xabdd:	mov	rbx, rsi
0xabe0:	mov	rsi, rcx
0xabe3:	mov	rbp, rdi
0xabe6:	call	0xa9d0


0xaac0:	mov	rax, qword ptr [rdi + 8]
0xaac4:	movzx	ecx, byte ptr [rax + rdx]
0xaac8:	movzx	eax, byte ptr [rsi + 8]
0xaacc:	cmp	al, 3
0xaace:	je	0xab88


0xa9d0:	push	rbp
0xa9d1:	push	rbx
0xa9d2:	mov	rbp, rdi
0xa9d5:	sub	rsp, 8
0xa9d9:	test	rsi, rsi
0xa9dc:	js	0xaa30


0xa880:	push	r15
0xa882:	push	r14
0xa884:	push	r13
0xa886:	push	r12
0xa888:	push	rbp
0xa889:	push	rbx
0xa88a:	sub	rsp, 0x28
0xa88e:	cmp	qword ptr [rsi], 0
0xa892:	mov	r13, qword ptr [rdi + 0x98]
0xa899:	jle	0xa960


0xa4e0:	push	r15
0xa4e2:	push	r14
0xa4e4:	push	r13
0xa4e6:	push	r12
0xa4e8:	mov	r12, rdx
0xa4eb:	push	rbp
0xa4ec:	push	rbx
0xa4ed:	mov	rbx, rdi
0xa4f0:	mov	rbp, rsi
0xa4f3:	xor	esi, esi
0xa4f5:	sub	rsp, 0x78
0xa4f9:	mov	rdi, qword ptr [rdi + 0xc8]
0xa500:	mov	rax, qword ptr fs:[0x28]
0xa509:	mov	qword ptr [rsp + 0x68], rax
0xa50e:	xor	eax, eax
0xa510:	mov	qword ptr [rsp + 0x20], rcx
0xa515:	mov	dword ptr [rsp + 0x2c], r8d
0xa51a:	mov	rdx, rdi
0xa51d:	cmp	rsi, rdx
0xa520:	jge	0xa577


0xa400:	push	r15
0xa402:	push	r14
0xa404:	push	r13
0xa406:	push	r12
0xa408:	push	rbp
0xa409:	push	rbx
0xa40a:	sub	rsp, 0x48
0xa40e:	mov	rax, qword ptr fs:[0x28]
0xa417:	mov	qword ptr [rsp + 0x38], rax
0xa41c:	xor	eax, eax
0xa41e:	test	rcx, rcx
0xa421:	jle	0xa4b6


0xa200:	push	r15
0xa202:	push	r14
0xa204:	push	r13
0xa206:	push	r12
0xa208:	push	rbp
0xa209:	push	rbx
0xa20a:	sub	rsp, 8
0xa20e:	mov	rbp, qword ptr [rdx + 8]
0xa212:	test	rbp, rbp
0xa215:	je	0xa3f0


0x9f40:	push	r15
0x9f42:	push	r14
0x9f44:	push	r13
0x9f46:	push	r12
0x9f48:	push	rbp
0x9f49:	push	rbx
0x9f4a:	sub	rsp, 0x28
0x9f4e:	mov	r10, qword ptr [rdx + 8]
0x9f52:	test	r10, r10
0x9f55:	je	0xa1df


0x9de0:	test	rsi, rsi
0x9de3:	push	r14
0x9de5:	push	r13
0x9de7:	push	r12
0x9de9:	push	rbp
0x9dea:	push	rbx
0x9deb:	je	0x9e95


0x9d50:	push	r12
0x9d52:	push	rbp
0x9d53:	push	rbx
0x9d54:	mov	rax, qword ptr [rsi + 8]
0x9d58:	mov	qword ptr [rdi + 8], rax
0x9d5c:	mov	r12, qword ptr [rsi + 8]
0x9d60:	test	r12, r12
0x9d63:	jle	0x9da0


0x9cb0:	push	rbp
0x9cb1:	push	rbx
0x9cb2:	mov	rbp, rdi
0x9cb5:	mov	rbx, rsi
0x9cb8:	sub	rsp, 0x18
0x9cbc:	mov	rdx, qword ptr [rsi + 8]
0x9cc0:	mov	rax, qword ptr fs:[0x28]
0x9cc9:	mov	qword ptr [rsp + 8], rax
0x9cce:	xor	eax, eax
0x9cd0:	mov	dword ptr [rsp + 4], 0
0x9cd8:	test	rdx, rdx
0x9cdb:	je	0x9ce3


0x9a70:	push	r15
0x9a72:	push	r14
0x9a74:	push	r13
0x9a76:	push	r12
0x9a78:	mov	r13, rdx
0x9a7b:	push	rbp
0x9a7c:	push	rbx
0x9a7d:	sub	rsp, 0x48
0x9a81:	mov	rbx, qword ptr [rsi]
0x9a84:	mov	rbp, qword ptr [rdx + 8]
0x9a88:	mov	rax, qword ptr fs:[0x28]
0x9a91:	mov	qword ptr [rsp + 0x38], rax
0x9a96:	xor	eax, eax
0x9a98:	test	byte ptr [rsi + 0x38], 0x10
0x9a9c:	mov	qword ptr [rsp + 0x18], rdi
0x9aa1:	je	0x9c18


0x9990:	push	r14
0x9992:	push	r13
0x9994:	lea	r13, [rsi + 0x70]
0x9998:	push	r12
0x999a:	push	rbp
0x999b:	lea	r12, [rsi + 0x80]
0x99a2:	push	rbx
0x99a3:	mov	rbx, rdi
0x99a6:	sub	rsp, 0x10
0x99aa:	mov	rbp, qword ptr [rdi]
0x99ad:	mov	rax, qword ptr fs:[0x28]
0x99b6:	mov	qword ptr [rsp + 8], rax
0x99bb:	xor	eax, eax
0x99bd:	mov	r14, rsp
0x99c0:	lea	r8, [rbx + 0x28]
0x99c4:	xor	ecx, ecx
0x99c6:	xor	edx, edx
0x99c8:	mov	rsi, r12
0x99cb:	mov	rdi, r13
0x99ce:	call	0x98b0


0x98b0:	push	rbx
0x98b1:	mov	rbx, rdi
0x98b4:	sub	rsp, 0x20
0x98b8:	mov	eax, dword ptr [rsi]
0x98ba:	cmp	eax, 0xf
0x98bd:	je	0x9938


0x9700:	mov	r9, qword ptr [rsi + 8]
0x9704:	xor	eax, eax
0x9706:	test	r9, r9
0x9709:	je	0x97c8


0x95a0:	push	r15
0x95a2:	push	r14
0x95a4:	mov	r14, rdi
0x95a7:	push	r13
0x95a9:	push	r12
0x95ab:	mov	r15, rsi
0x95ae:	push	rbp
0x95af:	push	rbx
0x95b0:	mov	rbp, rdx
0x95b3:	mov	ebx, ecx
0x95b5:	sub	rsp, 0x38
0x95b9:	mov	r12, qword ptr [rsi + 8]
0x95bd:	mov	rax, qword ptr fs:[0x28]
0x95c6:	mov	qword ptr [rsp + 0x28], rax
0x95cb:	xor	eax, eax
0x95cd:	mov	qword ptr [rsp + 0x18], 0
0x95d6:	lea	rdi, [r12*8]
0x95de:	mov	qword ptr [rsp + 0x10], r12
0x95e3:	call	0x1c20


0x92f0:	push	r15
0x92f2:	push	r14
0x92f4:	mov	r15, rsi
0x92f7:	push	r13
0x92f9:	push	r12
0x92fb:	push	rbp
0x92fc:	push	rbx
0x92fd:	lea	rbx, [rdx + rdx*2]
0x9301:	mov	rbp, rdx
0x9304:	sub	rsp, 0x68
0x9308:	mov	r12, qword ptr [rsi + 0x28]
0x930c:	shl	rbx, 3
0x9310:	mov	rax, qword ptr fs:[0x28]
0x9319:	mov	qword ptr [rsp + 0x58], rax
0x931e:	xor	eax, eax
0x9320:	mov	qword ptr [rsp + 0x10], rdi
0x9325:	mov	dword ptr [rsp + 0x1c], ecx
0x9329:	add	r12, rbx
0x932c:	mov	rax, qword ptr [r12 + 8]
0x9331:	mov	qword ptr [rsp + 0x28], 0
0x933a:	lea	rdi, [rax + 1]
0x933e:	mov	qword ptr [rsp + 0x20], rdi
0x9343:	shl	rdi, 3
0x9347:	call	0x1c20


0x9110:	test	rsi, rsi
0x9113:	je	0x9208


0x8ea0:	push	r15
0x8ea2:	push	r14
0x8ea4:	push	r13
0x8ea6:	push	r12
0x8ea8:	push	rbp
0x8ea9:	push	rbx
0x8eaa:	xor	ebx, ebx
0x8eac:	sub	rsp, 0x48
0x8eb0:	mov	rax, qword ptr [rdi + 0x98]
0x8eb7:	mov	r15, qword ptr [rdi + 0xc8]
0x8ebe:	mov	r12, qword ptr [rsp + 0x80]
0x8ec6:	mov	qword ptr [rsp + 8], rax
0x8ecb:	mov	rbp, r15
0x8ece:	cmp	rbx, rbp
0x8ed1:	jge	0x8f2b


0x8e40:	movzx	eax, byte ptr [rsi + 0x30]
0x8e44:	mov	rdx, qword ptr [rsi + 8]
0x8e48:	cmp	al, 0xb
0x8e4a:	je	0x8e90


0x8db0:	movzx	eax, byte ptr [rsi + 0x30]
0x8db4:	cmp	al, 4
0x8db6:	je	0x8e10


0x8d70:	mov	rax, qword ptr [rdi]
0x8d73:	cmp	rax, rdx
0x8d76:	jle	0x8da2


0x8c70:	push	r15
0x8c72:	push	r14
0x8c74:	lea	r14, [rsi + 0x10]
0x8c78:	push	r13
0x8c7a:	push	r12
0x8c7c:	mov	r15, rcx
0x8c7f:	push	rbp
0x8c80:	push	rbx
0x8c81:	mov	r12, rdi
0x8c84:	mov	rbp, rsi
0x8c87:	mov	rbx, rdx
0x8c8a:	mov	r13d, r8d
0x8c8d:	sub	rsp, 8
0x8c91:	mov	rdi, qword ptr [rbp + 8]
0x8c95:	mov	rdx, rbx
0x8c98:	mov	rsi, r14
0x8c9b:	call	0x8bf0


0x8bf0:	xor	eax, eax
0x8bf2:	test	rdi, rdi
0x8bf5:	jle	0x8c35


0x8b90:	mov	rdx, qword ptr [rdi + 8]
0x8b94:	xor	eax, eax
0x8b96:	cmp	rdx, qword ptr [rsi + 8]
0x8b9a:	je	0x8ba0


0x8b40:	mov	rcx, qword ptr [rdi + 0x30]
0x8b44:	lea	rax, [rsi + 1]
0x8b48:	cmp	rax, rcx
0x8b4b:	jge	0x8b88


0x8a80:	push	r14
0x8a82:	push	r13
0x8a84:	mov	r14, rdi
0x8a87:	push	r12
0x8a89:	push	rbp
0x8a8a:	push	rbx
0x8a8b:	cmp	qword ptr [rdi + 0xe8], 0
0x8a93:	jle	0x8b19


0x8920:	push	r14
0x8922:	push	r13
0x8924:	push	r12
0x8926:	mov	r12, rdi
0x8929:	push	rbp
0x892a:	push	rbx
0x892b:	mov	rdi, qword ptr [rdi]
0x892e:	test	rdi, rdi
0x8931:	je	0x895e


0x88e0:	push	rbx
0x88e1:	mov	rbx, rdi
0x88e4:	mov	rdi, qword ptr [rdi + 0x10]
0x88e8:	call	0x19d0


0x8880:	push	rbx
0x8881:	mov	rbx, rdi
0x8884:	mov	rdi, qword ptr [rdi + 0x30]
0x8888:	call	0x19d0


0x8600:	push	r15
0x8602:	push	r14
0x8604:	mov	r9, rsi
0x8607:	push	r13
0x8609:	push	r12
0x860b:	mov	r14, rdi
0x860e:	push	rbp
0x860f:	push	rbx
0x8610:	mov	r13, rdx
0x8613:	mov	ebp, r8d
0x8616:	sub	rsp, 0x18
0x861a:	mov	qword ptr [rsp + 8], rcx
0x861f:	mov	r8, qword ptr [r14]
0x8622:	mov	rax, r9
0x8625:	mov	rdi, qword ptr [r14 + 0x28]
0x8629:	shl	rax, 4
0x862d:	mov	r12, r13
0x8630:	add	rax, r8
0x8633:	cmp	byte ptr [rax + 8], 4
0x8637:	je	0x87f0


0x8560:	push	r13
0x8562:	push	r12
0x8564:	mov	r13, rsi
0x8567:	push	rbp
0x8568:	push	rbx
0x8569:	shl	r13, 4
0x856d:	mov	rbp, rsi
0x8570:	mov	r12d, edx
0x8573:	mov	rbx, rdi
0x8576:	sub	rsp, 8
0x857a:	mov	rax, qword ptr [rdi]
0x857d:	mov	rsi, qword ptr [rax + r13]
0x8581:	mov	rdx, qword ptr [rax + r13 + 8]
0x8586:	call	0x8390


0x8390:	push	r15
0x8392:	push	r14
0x8394:	mov	r14, rsi
0x8397:	push	r13
0x8399:	push	r12
0x839b:	push	rbp
0x839c:	push	rbx
0x839d:	mov	rbx, rdi
0x83a0:	sub	rsp, 0x18
0x83a4:	mov	rsi, qword ptr [rdi + 0x10]
0x83a8:	mov	rbp, qword ptr [rdi + 8]
0x83ac:	cmp	rsi, rbp
0x83af:	jae	0x8460


0x8370:	lea	rdi, [rsi + 0x28]
0x8374:	sub	rsp, 8
0x8378:	call	0x8340


0x8340:	mov	eax, dword ptr [rdi + 8]
0x8343:	and	eax, 0x400ff
0x8348:	cmp	eax, 6
0x834b:	je	0x8360


0x8310:	push	rbx
0x8311:	mov	rbx, rdi
0x8314:	mov	rdi, qword ptr [rdi]
0x8317:	call	0x19d0


0x8280:	push	r12
0x8282:	push	rbp
0x8283:	mov	rbp, rsi
0x8286:	push	rbx
0x8287:	mov	rax, qword ptr [rdi + 0x40]
0x828b:	mov	rbx, rdi
0x828e:	mov	r12, qword ptr [rdi + 0xc0]
0x8295:	cmp	rax, rsi
0x8298:	jg	0x82c0


0x8130:	push	rbp
0x8131:	push	rbx
0x8132:	movabs	rdx, 0xffffffffffffffe
0x813c:	sub	rsp, 8
0x8140:	mov	rax, qword ptr [rdi + 0x40]
0x8144:	cmp	rax, rdx
0x8147:	ja	0x8258


0x7b10:	push	r15
0x7b12:	push	r14
0x7b14:	mov	r14, rdi
0x7b17:	push	r13
0x7b19:	push	r12
0x7b1b:	push	rbp
0x7b1c:	push	rbx
0x7b1d:	sub	rsp, 0xa8
0x7b24:	mov	rbx, qword ptr [rdi + 0x58]
0x7b28:	mov	r15, qword ptr [rdi + 0x30]
0x7b2c:	mov	rax, qword ptr fs:[0x28]
0x7b35:	mov	qword ptr [rsp + 0x98], rax
0x7b3d:	xor	eax, eax
0x7b3f:	cmp	qword ptr [rdi + 0x40], rbx
0x7b43:	cmovle	rbx, qword ptr [rdi + 0x40]
0x7b48:	cmp	byte ptr [rdi + 0x8a], 0
0x7b4f:	jne	0x7b5c


0x7940:	push	r15
0x7942:	push	r14
0x7944:	push	r13
0x7946:	push	r12
0x7948:	push	rbp
0x7949:	push	rbx
0x794a:	mov	rbx, rdi
0x794d:	sub	rsp, 0x68
0x7951:	mov	r12, qword ptr [rdi + 0x58]
0x7955:	mov	rbp, qword ptr [rdi + 0x30]
0x7959:	mov	rax, qword ptr fs:[0x28]
0x7962:	mov	qword ptr [rsp + 0x58], rax
0x7967:	xor	eax, eax
0x7969:	cmp	qword ptr [rdi + 0x40], r12
0x796d:	cmovle	r12, qword ptr [rdi + 0x40]
0x7972:	cmp	r12, rbp
0x7975:	jle	0x7a04


0x78d0:	push	r12
0x78d2:	mov	r12, qword ptr [rdi + 0x58]
0x78d6:	cmp	qword ptr [rdi + 0x40], r12
0x78da:	push	rbp
0x78db:	mov	rbp, rdi
0x78de:	cmovle	r12, qword ptr [rdi + 0x40]
0x78e3:	push	rbx
0x78e4:	mov	rbx, qword ptr [rdi + 0x30]
0x78e8:	cmp	r12, rbx
0x78eb:	jle	0x7925


0x77e0:	push	r14
0x77e2:	push	r13
0x77e4:	mov	r14, rdi
0x77e7:	push	r12
0x77e9:	push	rbp
0x77ea:	mov	r12, rdx
0x77ed:	push	rbx
0x77ee:	mov	rbx, qword ptr [rsi + 0x10]
0x77f2:	mov	rbp, rsi
0x77f5:	mov	qword ptr [rsi], rdx
0x77f8:	mov	qword ptr [rsi + 0x28], 0
0x7800:	lea	r13, [rsi + 0x20]
0x7804:	lea	rdi, [rbx*8]
0x780c:	mov	qword ptr [rsi + 0x20], rbx
0x7810:	call	0x1c20


0x76b0:	push	rbp
0x76b1:	push	rbx
0x76b2:	mov	rbp, rsi
0x76b5:	mov	rbx, rdi
0x76b8:	sub	rsp, 8
0x76bc:	mov	rdx, qword ptr [rdi]
0x76bf:	test	rdx, rdx
0x76c2:	je	0x76e8


0x7640:	push	rbp
0x7641:	push	rbx
0x7642:	mov	rbp, rsi
0x7645:	mov	rbx, rdi
0x7648:	sub	rsp, 8
0x764c:	mov	rsi, qword ptr [rdi + 8]
0x7650:	cmp	qword ptr [rdi], rsi
0x7653:	mov	rax, qword ptr [rdi + 0x10]
0x7657:	je	0x7678


0x75a0:	push	rbp
0x75a1:	push	rbx
0x75a2:	mov	rbp, rsi
0x75a5:	mov	rbx, rdi
0x75a8:	sub	rsp, 8
0x75ac:	cmp	dword ptr [rdi + 0x90], 1
0x75b3:	jle	0x75fd


0x7540:	push	r12
0x7542:	mov	r12, rsi
0x7545:	push	rbp
0x7546:	mov	rbp, rdx
0x7549:	push	rbx
0x754a:	mov	rbx, rdi
0x754d:	jmp	0x7553


0x74d0:	push	r12
0x74d2:	mov	r12, rsi
0x74d5:	push	rbp
0x74d6:	mov	rbp, rdx
0x74d9:	push	rbx
0x74da:	mov	rbx, rdi
0x74dd:	jmp	0x74e3


0x7460:	mov	rax, qword ptr [rdi + 0xd8]
0x7467:	lea	rsi, [rsi + rsi*4]
0x746b:	lea	rax, [rax + rsi*8]
0x746f:	mov	r10, qword ptr [rax + 0x10]
0x7473:	cmp	r10, r8
0x7476:	jg	0x74c0


0x7230:	push	r15
0x7232:	push	r14
0x7234:	mov	r9, rdx
0x7237:	push	r13
0x7239:	push	r12
0x723b:	lea	rdx, [rcx + rcx*2]
0x723f:	push	rbp
0x7240:	push	rbx
0x7241:	mov	r15d, esi
0x7244:	sub	rsp, 0x48
0x7248:	mov	r14, qword ptr [rdi + 0x98]
0x724f:	mov	qword ptr [rsp], rdi
0x7253:	mov	rax, qword ptr [r14 + 0x30]
0x7257:	lea	r12, [rax + rdx*8]
0x725b:	cmp	qword ptr [r12 + 8], 0
0x7261:	jle	0x73f5


0x7210:	cmp	byte ptr [rsi + 0x30], 0x11
0x7214:	je	0x7220


0x70e0:	mov	rax, qword ptr [rsi + 0x48]
0x70e4:	cmp	qword ptr [rsi + 0x68], rax
0x70e8:	jle	0x7140


0x7050:	push	r13
0x7052:	push	r12
0x7054:	mov	r13, rsi
0x7057:	push	rbp
0x7058:	push	rbx
0x7059:	mov	rbx, rdi
0x705c:	mov	r12, rdx
0x705f:	sub	rsp, 0x18
0x7063:	mov	rax, qword ptr fs:[0x28]
0x706c:	mov	qword ptr [rsp + 8], rax
0x7071:	xor	eax, eax
0x7073:	lea	rax, [rsp + 4]
0x7078:	test	rdi, rdi
0x707b:	cmove	rbx, rax
0x707f:	mov	rdi, rbx
0x7082:	call	0x1af0


0x7010:	lea	rsi, [rip + 0xfa58]
0x7017:	sub	rsp, 8
0x701b:	mov	edx, 5
0x7020:	xor	edi, edi
0x7022:	call	0x1a90


0x6ff0:	push	rbx
0x6ff1:	mov	rbx, rdi
0x6ff4:	call	0x1ab0


0x6fc0:	push	rbp
0x6fc1:	push	rbx
0x6fc2:	mov	rbp, rdi
0x6fc5:	mov	rdi, rsi
0x6fc8:	mov	rbx, rsi
0x6fcb:	sub	rsp, 8
0x6fcf:	call	0x6dc0


0x6f90:	mov	rax, rdi
0x6f93:	sub	rsp, 8
0x6f97:	mul	rsi
0x6f9a:	seto	dl
0x6f9d:	test	rax, rax
0x6fa0:	js	0x6fb9


0x6f70:	push	rbx
0x6f71:	mov	rbx, rdi
0x6f74:	call	0x6dc0


0x6f20:	test	rdi, rdi
0x6f23:	mov	rax, qword ptr [rsi]
0x6f26:	je	0x6f50


0x6e90:	test	rdi, rdi
0x6e93:	mov	r9, rdx
0x6e96:	mov	rcx, qword ptr [rsi]
0x6e99:	je	0x6ed0


0x6e60:	mov	rax, rsi
0x6e63:	mul	rdx
0x6e66:	mov	rsi, rax
0x6e69:	seto	al
0x6e6c:	test	rsi, rsi
0x6e6f:	js	0x6e7b


0x6e20:	test	rsi, rsi
0x6e23:	push	rbx
0x6e24:	mov	rbx, rsi
0x6e27:	jne	0x6e2e


0x6e10:	jmp	0x6dc0


0x6de0:	mov	rax, rdi
0x6de3:	mul	rsi
0x6de6:	mov	rdi, rax
0x6de9:	seto	al
0x6dec:	test	rdi, rdi
0x6def:	js	0x6dfb


0x6dc0:	push	rbx
0x6dc1:	mov	rbx, rdi
0x6dc4:	call	0x1c20


0x6d40:	push	rbx
0x6d41:	lea	rsi, [rip + 0xfa1a]
0x6d48:	mov	edx, 5
0x6d4d:	xor	edi, edi
0x6d4f:	call	0x1a90


0x6c60:	push	rbp
0x6c61:	push	rbx
0x6c62:	mov	r10d, 0x20
0x6c68:	xor	r11d, r11d
0x6c6b:	sub	rsp, 0xb8
0x6c72:	mov	rax, qword ptr fs:[0x28]
0x6c7b:	mov	qword ptr [rsp + 0x78], rax
0x6c80:	xor	eax, eax
0x6c82:	lea	rax, [rsp + 0xd0]
0x6c8a:	mov	qword ptr [rsp + 0xa0], r8
0x6c92:	lea	rbx, [rsp + 0xd0]
0x6c9a:	lea	r8, [rsp + 0x20]
0x6c9f:	mov	qword ptr [rsp + 0xa8], r9
0x6ca7:	mov	dword ptr [rsp + 8], 0x20
0x6caf:	mov	qword ptr [rsp + 0x10], rax
0x6cb4:	lea	rax, [rsp + 0x80]
0x6cbc:	xor	r9d, r9d
0x6cbf:	mov	qword ptr [rsp + 0x18], rax
0x6cc4:	mov	rbp, rax
0x6cc7:	nop	word ptr [rax + rax]
0x6cd0:	cmp	r10d, 0x2f
0x6cd4:	ja	0x6d2c


0x6be0:	sub	rsp, 0x68
0x6be4:	mov	r10, r8
0x6be7:	xor	r9d, r9d
0x6bea:	mov	rax, qword ptr fs:[0x28]
0x6bf3:	mov	qword ptr [rsp + 0x58], rax
0x6bf8:	xor	eax, eax
0x6bfa:	mov	r8, rsp
0x6bfd:	nop	dword ptr [rax]
0x6c00:	mov	eax, dword ptr [r10]
0x6c03:	cmp	eax, 0x2f
0x6c06:	ja	0x6c4a


0x6bc0:	xor	r9d, r9d
0x6bc3:	cmp	qword ptr [r8], 0
0x6bc7:	je	0x6bdb


0x67a0:	push	r15
0x67a2:	push	r14
0x67a4:	push	r13
0x67a6:	push	r12
0x67a8:	mov	r12, r9
0x67ab:	push	rbp
0x67ac:	push	rbx
0x67ad:	mov	rbp, rdi
0x67b0:	mov	rbx, r8
0x67b3:	sub	rsp, 0x28
0x67b7:	test	rsi, rsi
0x67ba:	je	0x68d8


0x64f0:	movzx	r8d, byte ptr [rdi]
0x64f4:	movzx	edx, byte ptr [rsi]
0x64f7:	cmp	r8b, 0x2d
0x64fb:	je	0x65a0


0x64b0:	push	rbp
0x64b1:	push	rbx
0x64b2:	mov	rdx, rsi
0x64b5:	mov	rbx, rsi
0x64b8:	xor	esi, esi
0x64ba:	mov	rbp, rdi
0x64bd:	sub	rsp, 8
0x64c1:	call	0x1b80


0x6490:	lea	rcx, [rip + 0x214b89]
0x6497:	mov	rsi, rdi
0x649a:	mov	rdx, -1
0x64a1:	xor	edi, edi
0x64a3:	jmp	0x5b50


0x6470:	lea	rcx, [rip + 0x214ba9]
0x6477:	mov	rdx, -1
0x647e:	jmp	0x5b50


0x6450:	lea	rcx, [rip + 0x214bc9]
0x6457:	mov	rdx, rsi
0x645a:	mov	rsi, rdi
0x645d:	xor	edi, edi
0x645f:	jmp	0x5b50


0x6440:	lea	rcx, [rip + 0x214bd9]
0x6447:	jmp	0x5b50


0x6420:	mov	r8, rcx
0x6423:	mov	rcx, rdx
0x6426:	mov	rdx, rsi
0x6429:	mov	rsi, rdi
0x642c:	xor	edi, edi
0x642e:	jmp	0x6350


0x6400:	mov	rcx, rdx
0x6403:	mov	r8, -1
0x640a:	mov	rdx, rsi
0x640d:	mov	rsi, rdi
0x6410:	xor	edi, edi
0x6412:	jmp	0x6350


0x63f0:	mov	r8, -1
0x63f7:	jmp	0x6350


0x6350:	sub	rsp, 0x48
0x6354:	mov	r9, rcx
0x6357:	mov	rcx, qword ptr [rip + 0x214ed2]
0x635e:	movdqa	xmm0, xmmword ptr [rip + 0x214e9a]
0x6366:	mov	rax, qword ptr fs:[0x28]
0x636f:	mov	qword ptr [rsp + 0x38], rax
0x6374:	xor	eax, eax
0x6376:	movaps	xmmword ptr [rsp], xmm0
0x637a:	test	rsi, rsi
0x637d:	mov	qword ptr [rsp + 0x30], rcx
0x6382:	mov	dword ptr [rsp], 0xa
0x6389:	movdqa	xmm0, xmmword ptr [rip + 0x214e7f]
0x6391:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x6396:	movdqa	xmm0, xmmword ptr [rip + 0x214e82]
0x639e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x63a3:	je	0x63d7


0x62c0:	sub	rsp, 0x48
0x62c4:	mov	rax, rdx
0x62c7:	mov	rdx, qword ptr fs:[0x28]
0x62d0:	mov	qword ptr [rsp + 0x38], rdx
0x62d5:	xor	edx, edx
0x62d7:	cmp	esi, 0xa
0x62da:	je	0x6344


0x62b0:	mov	edx, 0x3a
0x62b5:	jmp	0x61e0


0x6290:	mov	edx, 0x3a
0x6295:	mov	rsi, -1
0x629c:	jmp	0x61e0


0x6280:	movsx	edx, sil
0x6284:	mov	rsi, -1
0x628b:	jmp	0x61e0


0x61e0:	sub	rsp, 0x48
0x61e4:	mov	ecx, edx
0x61e6:	mov	rax, qword ptr fs:[0x28]
0x61ef:	mov	qword ptr [rsp + 0x38], rax
0x61f4:	xor	eax, eax
0x61f6:	mov	rax, qword ptr [rip + 0x215033]
0x61fd:	mov	r8, rsp
0x6200:	and	ecx, 0x1f
0x6203:	movdqa	xmm0, xmmword ptr [rip + 0x214ff5]
0x620b:	mov	qword ptr [rsp + 0x30], rax
0x6210:	mov	eax, edx
0x6212:	movaps	xmmword ptr [rsp], xmm0
0x6216:	shr	al, 5
0x6219:	movzx	eax, al
0x621c:	lea	r9, [r8 + rax*4 + 8]
0x6221:	movdqa	xmm0, xmmword ptr [rip + 0x214fe7]
0x6229:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x622e:	movdqa	xmm0, xmmword ptr [rip + 0x214fea]
0x6236:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x623b:	mov	edx, dword ptr [r9]
0x623e:	mov	eax, edx
0x6240:	shr	eax, cl
0x6242:	not	eax
0x6244:	and	eax, 1
0x6247:	shl	eax, cl
0x6249:	mov	rcx, r8
0x624c:	xor	eax, edx
0x624e:	mov	rdx, rsi
0x6251:	mov	rsi, rdi
0x6254:	mov	dword ptr [r9], eax
0x6257:	xor	edi, edi
0x6259:	call	0x5b50


0x61d0:	mov	rcx, rdx
0x61d3:	mov	rdx, rsi
0x61d6:	mov	esi, edi
0x61d8:	xor	edi, edi
0x61da:	jmp	0x6130


0x61c0:	mov	rdx, rsi
0x61c3:	mov	esi, edi
0x61c5:	xor	edi, edi
0x61c7:	jmp	0x60a0


0x6130:	sub	rsp, 0x48
0x6134:	mov	rax, rdx
0x6137:	mov	rdx, rcx
0x613a:	mov	rcx, qword ptr fs:[0x28]
0x6143:	mov	qword ptr [rsp + 0x38], rcx
0x6148:	xor	ecx, ecx
0x614a:	cmp	esi, 0xa
0x614d:	je	0x61b0


0x60a0:	sub	rsp, 0x48
0x60a4:	mov	rax, rdx
0x60a7:	mov	rdx, qword ptr fs:[0x28]
0x60b0:	mov	qword ptr [rsp + 0x38], rdx
0x60b5:	xor	edx, edx
0x60b7:	cmp	esi, 0xa
0x60ba:	je	0x6124


0x6080:	lea	rcx, [rip + 0x215179]
0x6087:	mov	rdx, rsi
0x608a:	mov	rsi, rdi
0x608d:	xor	edi, edi
0x608f:	jmp	0x5b50


0x6060:	lea	rcx, [rip + 0x215199]
0x6067:	mov	rsi, rdi
0x606a:	mov	rdx, -1
0x6071:	xor	edi, edi
0x6073:	jmp	0x5b50


0x6050:	lea	rcx, [rip + 0x2151a9]
0x6057:	jmp	0x5b50


0x6030:	lea	rcx, [rip + 0x2151c9]
0x6037:	mov	rdx, -1
0x603e:	jmp	0x5b50


0x5f90:	mov	eax, dword ptr [rip + 0x2150c2]
0x5f96:	push	r12
0x5f98:	mov	r12, qword ptr [rip + 0x2150c1]
0x5f9f:	push	rbp
0x5fa0:	push	rbx
0x5fa1:	cmp	eax, 1
0x5fa4:	jle	0x5fd1


0x5f80:	mov	rcx, rdx
0x5f83:	xor	edx, edx
0x5f85:	jmp	0x5e90


0x5e90:	push	r15
0x5e92:	push	r14
0x5e94:	lea	rax, [rip + 0x215365]
0x5e9b:	push	r13
0x5e9d:	push	r12
0x5e9f:	mov	r12, rdx
0x5ea2:	push	rbp
0x5ea3:	push	rbx
0x5ea4:	mov	rbx, rcx
0x5ea7:	mov	r14, rdi
0x5eaa:	mov	r15, rsi
0x5ead:	sub	rsp, 0x38
0x5eb1:	test	rcx, rcx
0x5eb4:	cmove	rbx, rax
0x5eb8:	xor	ebp, ebp
0x5eba:	call	0x19f0


0x5e10:	push	r15
0x5e12:	push	r14
0x5e14:	lea	rax, [rip + 0x2153e5]
0x5e1b:	push	r13
0x5e1d:	push	r12
0x5e1f:	mov	r13, rdi
0x5e22:	push	rbp
0x5e23:	push	rbx
0x5e24:	mov	rbx, r8
0x5e27:	mov	r14, rsi
0x5e2a:	mov	r15, rdx
0x5e2d:	sub	rsp, 0x18
0x5e31:	test	r8, r8
0x5e34:	cmove	rbx, rax
0x5e38:	mov	qword ptr [rsp + 8], rcx
0x5e3d:	call	0x19f0


0x5de0:	lea	rax, [rip + 0x215419]
0x5de7:	test	rdi, rdi
0x5dea:	cmove	rdi, rax
0x5dee:	test	rsi, rsi
0x5df1:	mov	dword ptr [rdi], 0xa
0x5df7:	je	0x5e07


0x5dc0:	lea	rax, [rip + 0x215439]
0x5dc7:	test	rdi, rdi
0x5dca:	cmove	rdi, rax
0x5dce:	mov	eax, dword ptr [rdi + 4]
0x5dd1:	mov	dword ptr [rdi + 4], esi
0x5dd4:	ret	


0x5d80:	lea	rax, [rip + 0x215479]
0x5d87:	test	rdi, rdi
0x5d8a:	mov	ecx, esi
0x5d8c:	cmove	rdi, rax
0x5d90:	mov	eax, esi
0x5d92:	and	ecx, 0x1f
0x5d95:	shr	al, 5
0x5d98:	movzx	eax, al
0x5d9b:	lea	rdi, [rdi + rax*4 + 8]
0x5da0:	mov	esi, dword ptr [rdi]
0x5da2:	mov	eax, esi
0x5da4:	shr	eax, cl
0x5da6:	xor	edx, eax
0x5da8:	and	eax, 1
0x5dab:	and	edx, 1
0x5dae:	shl	edx, cl
0x5db0:	xor	edx, esi
0x5db2:	mov	dword ptr [rdi], edx
0x5db4:	ret	


0x5d60:	lea	rax, [rip + 0x215499]
0x5d67:	test	rdi, rdi
0x5d6a:	cmove	rdi, rax
0x5d6e:	mov	dword ptr [rdi], esi
0x5d70:	ret	


0x5d40:	lea	rax, [rip + 0x2154b9]
0x5d47:	test	rdi, rdi
0x5d4a:	cmove	rdi, rax
0x5d4e:	mov	eax, dword ptr [rdi]
0x5d50:	ret	


0x5d00:	push	r12
0x5d02:	push	rbp
0x5d03:	push	rbx
0x5d04:	mov	rbx, rdi
0x5d07:	call	0x19f0


0x5b50:	push	r15
0x5b52:	push	r14
0x5b54:	movsxd	r15, edi
0x5b57:	push	r13
0x5b59:	push	r12
0x5b5b:	mov	r14, rdx
0x5b5e:	push	rbp
0x5b5f:	push	rbx
0x5b60:	mov	rbp, rcx
0x5b63:	sub	rsp, 0x28
0x5b67:	mov	qword ptr [rsp + 8], rsi
0x5b6c:	call	0x19f0


0x4910:	push	r15
0x4912:	push	r14
0x4914:	mov	r15d, r8d
0x4917:	push	r13
0x4919:	push	r12
0x491b:	mov	r14, rdi
0x491e:	push	rbp
0x491f:	push	rbx
0x4920:	mov	ebx, r9d
0x4923:	mov	r13, rsi
0x4926:	mov	rbp, rcx
0x4929:	and	ebx, 2
0x492c:	sub	rsp, 0xb8
0x4933:	mov	rax, qword ptr [rsp + 0xf0]
0x493b:	mov	qword ptr [rsp + 0x10], rdx
0x4940:	mov	dword ptr [rsp + 8], r8d
0x4945:	mov	dword ptr [rsp + 0x78], r9d
0x494a:	mov	qword ptr [rsp + 0x20], rax
0x494f:	mov	rax, qword ptr [rsp + 0xf8]
0x4957:	mov	qword ptr [rsp + 0x68], rax
0x495c:	mov	rax, qword ptr [rsp + 0x100]
0x4964:	mov	qword ptr [rsp + 0x60], rax
0x4969:	mov	rax, qword ptr fs:[0x28]
0x4972:	mov	qword ptr [rsp + 0xa8], rax
0x497a:	xor	eax, eax
0x497c:	call	0x1aa0


0x4820:	push	rbp
0x4821:	push	rbx
0x4822:	mov	rbp, rdi
0x4825:	mov	ebx, esi
0x4827:	sub	rsp, 8
0x482b:	call	0x153d0


0x4780:	test	rdi, rdi
0x4783:	push	rbx
0x4784:	je	0x47fd


0x4550:	push	r14
0x4552:	push	r13
0x4554:	push	r12
0x4556:	push	rbp
0x4557:	push	rbx
0x4558:	mov	rbx, rdi
0x455b:	sub	rsp, 0x50
0x455f:	mov	rax, qword ptr fs:[0x28]
0x4568:	mov	qword ptr [rsp + 0x48], rax
0x456d:	xor	eax, eax
0x456f:	call	0x1aa0


0x42a0:	push	r14
0x42a2:	push	r13
0x42a4:	push	r12
0x42a6:	push	rbp
0x42a7:	mov	r12, rdi
0x42aa:	push	rbx
0x42ab:	mov	ebx, esi
0x42ad:	sub	rsp, 0x50
0x42b1:	mov	rax, qword ptr fs:[0x28]
0x42ba:	mov	qword ptr [rsp + 0x48], rax
0x42bf:	xor	eax, eax
0x42c1:	call	0x1aa0


0x4280:	mov	eax, edi
0x4282:	lea	rdx, [rip + 0x11f17]
0x4289:	mov	ecx, edi
0x428b:	shr	al, 5
0x428e:	and	ecx, 0x1f
0x4291:	and	eax, 7
0x4294:	mov	eax, dword ptr [rdx + rax*4]
0x4297:	shr	eax, cl
0x4299:	and	eax, 1
0x429c:	ret	


0x4220:	push	rbp
0x4221:	push	rbx
0x4222:	mov	rbx, rsi
0x4225:	lea	rax, [rbx + 0x18]
0x4229:	mov	rbp, rdi
0x422c:	sub	rsp, 8
0x4230:	mov	rsi, qword ptr [rsi]
0x4233:	mov	rdx, qword ptr [rbx + 8]
0x4237:	cmp	rsi, rax
0x423a:	je	0x4260


0x41f0:	push	rbx
0x41f1:	mov	ebx, edi
0x41f3:	call	0x1c00


0x40b0:	push	r14
0x40b2:	push	r13
0x40b4:	mov	r14, r8
0x40b7:	push	r12
0x40b9:	push	rbp
0x40ba:	mov	r12, rdx
0x40bd:	push	rbx
0x40be:	mov	r13, rcx
0x40c1:	sub	rsp, 0xd0
0x40c8:	test	al, al
0x40ca:	mov	rbp, qword ptr [rsp + 0x100]
0x40d2:	je	0x410b


0x3f70:	push	r13
0x3f72:	push	r12
0x3f74:	mov	r13, r8
0x3f77:	push	rbp
0x3f78:	push	rbx
0x3f79:	mov	rbp, rdx
0x3f7c:	mov	r12, rcx
0x3f7f:	sub	rsp, 0xe8
0x3f86:	test	al, al
0x3f88:	je	0x3fc4


0x3ec0:	push	rbp
0x3ec1:	push	rbx
0x3ec2:	sub	rsp, 8
0x3ec6:	mov	rdi, qword ptr [rip + 0x2171bb]
0x3ecd:	call	0x152f0


0x3eb0:	mov	byte ptr [rip + 0x217221], dil
0x3eb7:	ret	


0x3ea0:	mov	qword ptr [rip + 0x217239], rdi
0x3ea7:	ret	


0x3de0:	push	r12
0x3de2:	push	rbp
0x3de3:	mov	r12d, edi
0x3de6:	push	rbx
0x3de7:	movzx	edi, dil
0x3deb:	call	0x3d30


0x3d30:	push	r12
0x3d32:	push	rbp
0x3d33:	mov	r12d, edi
0x3d36:	push	rbx
0x3d37:	movzx	edi, dil
0x3d3b:	call	0x3ad0


0x3ad0:	push	r15
0x3ad2:	push	r14
0x3ad4:	mov	r14d, edi
0x3ad7:	push	r13
0x3ad9:	push	r12
0x3adb:	movzx	r13d, dil
0x3adf:	push	rbp
0x3ae0:	push	rbx
0x3ae1:	mov	edi, r13d
0x3ae4:	sub	rsp, 8
0x3ae8:	call	0x39f0


0x39f0:	push	r14
0x39f2:	push	r13
0x39f4:	mov	r14d, edi
0x39f7:	push	r12
0x39f9:	movzx	r12d, dil
0x39fd:	push	rbp
0x39fe:	push	rbx
0x39ff:	mov	edi, r12d
0x3a02:	call	0x38a0


0x38a0:	push	r14
0x38a2:	push	r13
0x38a4:	mov	r14d, edi
0x38a7:	push	r12
0x38a9:	movzx	r12d, dil
0x38ad:	push	rbp
0x38ae:	push	rbx
0x38af:	mov	edi, r12d
0x38b2:	call	0x3810


0x3810:	push	r15
0x3812:	push	r14
0x3814:	mov	r14d, edi
0x3817:	push	r13
0x3819:	push	r12
0x381b:	lea	r12, [rip + 0x1287e]
0x3822:	push	rbp
0x3823:	push	rbx
0x3824:	movzx	ebp, dil
0x3828:	mov	edi, ebp
0x382a:	sub	rsp, 8
0x382e:	call	0x2c60


0x2c60:	push	r15
0x2c62:	push	r14
0x2c64:	push	r13
0x2c66:	push	r12
0x2c68:	push	rbp
0x2c69:	push	rbx
0x2c6a:	mov	ebx, edi
0x2c6c:	lea	rdi, [rip + 0x133f2]
0x2c73:	sub	rsp, 0x108
0x2c7a:	mov	rax, qword ptr fs:[0x28]
0x2c83:	mov	qword ptr [rsp + 0xf8], rax
0x2c8b:	xor	eax, eax
0x2c8d:	call	0x20e0


0x27b0:	push	r15
0x27b2:	push	r14
0x27b4:	push	r13
0x27b6:	push	r12
0x27b8:	push	rbp
0x27b9:	push	rbx
0x27ba:	mov	rbp, rsi
0x27bd:	mov	rbx, rdi
0x27c0:	sub	rsp, 0x1c8
0x27c7:	mov	rax, qword ptr fs:[0x28]
0x27d0:	mov	qword ptr [rsp + 0x1b8], rax
0x27d8:	xor	eax, eax
0x27da:	call	0x22e0


0x2330:	push	r13
0x2332:	push	r12
0x2334:	mov	edx, 5
0x2339:	push	rbp
0x233a:	push	rbx
0x233b:	mov	ebp, edi
0x233d:	sub	rsp, 0x88
0x2344:	mov	rbx, qword ptr [rip + 0x218d9d]
0x234b:	mov	rax, qword ptr fs:[0x28]
0x2354:	mov	qword ptr [rsp + 0x78], rax
0x2359:	xor	eax, eax
0x235b:	test	edi, edi
0x235d:	je	0x238d


0x22e0:	push	r12
0x22e2:	push	rbp
0x22e3:	push	rbx
0x22e4:	mov	eax, dword ptr [rdi]
0x22e6:	test	eax, eax
0x22e8:	je	0x22f8


0x2250:	mov	eax, dword ptr [rdi]
0x2252:	test	eax, eax
0x2254:	je	0x22a0


0x21e0:	mov	eax, dword ptr [rdi]
0x21e2:	test	eax, eax
0x21e4:	je	0x2228


0x21a0:	push	rbx
0x21a1:	cmp	dword ptr [rdi], 1
0x21a4:	mov	rbx, rdi
0x21a7:	je	0x21c0


0x2160:	push	rbp
0x2161:	push	rbx
0x2162:	mov	rbp, rdi
0x2165:	mov	edi, 0x18
0x216a:	sub	rsp, 8
0x216e:	call	0x6dc0


0x2110:	mov	rax, qword ptr [rip + 0x218fb9]
0x2117:	cmp	qword ptr [rax], 0
0x211b:	je	0x211f


0x20e0:	push	rbx
0x20e1:	mov	rbx, qword ptr [rip + 0x218fe8]
0x20e8:	mov	rsi, rdi
0x20eb:	xor	eax, eax
0x20ed:	mov	rdi, qword ptr [rbx]
0x20f0:	test	rdi, rdi
0x20f3:	je	0x210d


0x20d0:	push	rbp
0x20d1:	mov	rbp, rsp
0x20d4:	pop	rbp
0x20d5:	jmp	0x2040


0x2090:	cmp	byte ptr [rip + 0x219031], 0
0x2097:	jne	0x20c8


0x2040:	lea	rdi, [rip + 0x219039]
0x2047:	lea	rsi, [rip + 0x219032]
0x204e:	push	rbp
0x204f:	sub	rsi, rdi
0x2052:	mov	rbp, rsp
0x2055:	sar	rsi, 3
0x2059:	mov	rax, rsi
0x205c:	shr	rax, 0x3f
0x2060:	add	rsi, rax
0x2063:	sar	rsi, 1
0x2066:	je	0x2080


0x2000:	lea	rdi, [rip + 0x219079]
0x2007:	push	rbp
0x2008:	lea	rax, [rip + 0x219071]
0x200f:	cmp	rax, rdi
0x2012:	mov	rbp, rsp
0x2015:	je	0x2030


0x1fd0:	xor	ebp, ebp
0x1fd2:	mov	r9, rdx
0x1fd5:	pop	rsi
0x1fd6:	mov	rdx, rsp
0x1fd9:	and	rsp, 0xfffffffffffffff0
0x1fdd:	push	rax
0x1fde:	push	rsp
0x1fdf:	lea	r8, [rip + 0x135ba]
0x1fe6:	lea	rcx, [rip + 0x13543]
0x1fed:	lea	rdi, [rip - 0x1e4]
0x1ff4:	call	qword ptr [rip + 0x218fbe]


0x1e10:	push	rbp
0x1e11:	push	rbx
0x1e12:	mov	ebp, edi
0x1e14:	mov	rbx, rsi
0x1e17:	sub	rsp, 8
0x1e1b:	mov	rdi, qword ptr [rsi]
0x1e1e:	call	0x4780


0x1de0:	lea	rcx, [rip + 0x14379]
0x1de7:	lea	rsi, [rip + 0x13822]
0x1dee:	lea	rdi, [rip + 0x14188]
0x1df5:	sub	rsp, 8
0x1df9:	mov	edx, 0xb3
0x1dfe:	call	0x1b50


0x1990:	sub	rsp, 8
0x1994:	mov	rax, qword ptr [rip + 0x219625]
0x199b:	test	rax, rax
0x199e:	je	0x19a2


0x1d50:	jmp	qword ptr [rip + 0x219202]


0x154e0:	mov	rax, qword ptr [rdi + 0x20]
0x154e4:	cmp	qword ptr [rdi + 0x28], rax
0x154e8:	jne	0x154da


0x154da:	jmp	0x1d10


0x154aa:	mov	rdi, rbx
0x154ad:	pop	rbx
0x154ae:	jmp	0x1c40


0x15499:	call	0x1c80


0x1bf0:	jmp	qword ptr [rip + 0x2192b2]


0x1c60:	jmp	qword ptr [rip + 0x21927a]


0x1ca0:	jmp	qword ptr [rip + 0x21925a]


0x1a20:	jmp	qword ptr [rip + 0x21939a]


0x152a5:	and	byte ptr [rdi + 0x38], 0xf9
0x152a9:	mov	qword ptr [rsi], 0
0x152b0:	mov	qword ptr [rsi + 0x10], 0
0x152b8:	mov	qword ptr [rsi + 8], 0
0x152c0:	ret	


0x152c8:	movzx	eax, byte ptr [rdi + 0x38]
0x152cc:	and	eax, 0xfffffff9
0x152cf:	or	eax, 2
0x152d2:	mov	byte ptr [rdi + 0x38], al
0x152d5:	mov	qword ptr [rsi], rdx
0x152d8:	mov	qword ptr [rsi + 8], rcx
0x152dc:	mov	qword ptr [rsi + 0x10], r8
0x152e0:	ret	


0x1518d:	push	r13
0x1518f:	push	r12
0x15191:	mov	r13, rdx
0x15194:	push	rbp
0x15195:	push	rbx
0x15196:	mov	r12, rcx
0x15199:	mov	ebx, r8d
0x1519c:	mov	rbp, rdi
0x1519f:	sub	rsp, 0x18
0x151a3:	test	r8b, 4
0x151a7:	jne	0x151f8


0x15218:	mov	eax, 2
0x1521d:	ret	


0x15141:	mov	rdi, qword ptr [rbx + 0x20]
0x15145:	mov	qword ptr [rbx], 0
0x1514c:	mov	qword ptr [rbx + 8], 0
0x15154:	call	0x19d0


0x1513c:	call	0x8920


0x150af:	lea	rax, [rip + 0x200a]
0x150b6:	movsxd	rdi, edi
0x150b9:	lea	rsi, [rip + 0x20a0]
0x150c0:	mov	rbp, rdx
0x150c3:	mov	edx, 5
0x150c8:	mov	r12, rcx
0x150cb:	add	rsi, qword ptr [rax + rdi*8]
0x150cf:	xor	edi, edi
0x150d1:	call	0x1a90


0x15110:	call	0x19e0


0x1c20:	jmp	qword ptr [rip + 0x21929a]


0x14ea7:	test	rbx, rbx
0x14eaa:	js	0x14f70


0x14f70:	mov	rbx, -2
0x14f77:	jmp	0x14f0a


0x14d50:	mov	r12, -1
0x14d57:	jmp	0x14b22


0x14a1a:	cmp	rcx, rdx
0x14a1d:	jg	0x14d50


0x1495d:	mov	rcx, rbp
0x14960:	mov	rdi, rbx
0x14963:	mov	rsi, qword ptr [r12 + 0x48]
0x14968:	lea	rdx, [rsi + 0x18]
0x1496c:	add	rsi, 0x10
0x14970:	call	0xce70


0x1495a:	rep stosq	qword ptr [rdi], rax


0x14606:	mov	rdi, rbx
0x14609:	mov	esi, 0xe8
0x1460e:	call	0x1c90


0x13812:	lea	rdi, [rbx + 8]
0x13816:	mov	rax, qword ptr [rsp + 8]
0x1381b:	mov	rcx, rbx
0x1381e:	and	rdi, 0xfffffffffffffff8
0x13822:	sub	rcx, rdi
0x13825:	mov	qword ptr [rax + 0x10], 0xe8
0x1382d:	xor	eax, eax
0x1382f:	add	ecx, 0xe8
0x13835:	mov	qword ptr [rbx], 0
0x1383c:	mov	qword ptr [rbx + 0xe0], 0
0x13847:	shr	ecx, 3
0x1384a:	rep stosq	qword ptr [rdi], rax


0x11ff8:	mov	rbp, rsi
0x11ffb:	lea	rsi, [rip + 0x4efe]
0x12002:	movzx	edx, cl
0x12005:	mov	r14, rdi
0x12008:	movsxd	rax, dword ptr [rsi + rdx*4]
0x1200c:	add	rax, rsi
0x1200f:	jmp	rax


0x120b0:	mov	qword ptr [rsp + 0x28], 0
0x120b9:	nop	dword ptr [rax]
0x120c0:	mov	rdi, qword ptr [rsp + 0x118]
0x120c8:	xor	rdi, qword ptr fs:[0x28]
0x120d1:	mov	rax, qword ptr [rsp + 0x28]
0x120d6:	jne	0x1344e


0x118b0:	mov	byte ptr [rdi + 8], 2
0x118b4:	mov	rdi, qword ptr [rsp + 0x28]
0x118b9:	xor	rdi, qword ptr fs:[0x28]
0x118c2:	jne	0x11ee8


0x1181f:	movzx	r13d, byte ptr [rdi + 0xa]
0x11824:	mov	r15, rdx
0x11827:	mov	rdx, qword ptr [rsi + 8]
0x1182b:	mov	rbx, rsi
0x1182e:	movzx	r12d, byte ptr [rdx + r14]
0x11833:	and	r13d, 0xffffff9f
0x11837:	mov	byte ptr [rdi + 0xa], r13b
0x1183b:	mov	eax, dword ptr [rsi + 0x90]
0x11841:	mov	byte ptr [rdi], r12b
0x11844:	cmp	eax, 1
0x11847:	jle	0x118e0


0x11618:	movzx	eax, byte ptr [rbp + 8]
0x1161c:	add	r11, r12
0x1161f:	mov	qword ptr [r10 + 0x48], r11
0x11623:	mov	edx, eax
0x11625:	and	edx, 0xfffffffb
0x11628:	cmp	dl, 0x1a
0x1162b:	je	0x11650


0x115c5:	mov	rsi, r12
0x115c8:	mov	rdi, r10
0x115cb:	call	0x8b40


0x10ff8:	lea	r14, [rbp*8]
0x11000:	add	r14, qword ptr [rsi]
0x11003:	test	rcx, rcx
0x11006:	jne	0x110c0


0x10da9:	lea	rdi, [rdx + 8]
0x10dad:	test	rcx, rcx
0x10db0:	mov	qword ptr [rsp + 0x10], rdi
0x10db5:	jne	0x10e08


0xf67b:	rep stosq	qword ptr [rdi], rax


0xf12a:	mov	qword ptr [r14], rdx
0xf12d:	mov	rbp, rdx
0xf130:	mov	qword ptr [rsi + 0xc0], r12
0xf137:	cmp	qword ptr [r15 + 0x98], 0
0xf13f:	jne	0xf268


0xf170:	mov	rax, qword ptr [r14]
0xf173:	test	rax, rax
0xf176:	je	0xf258


0xeb60:	xor	eax, eax
0xeb62:	nop	word ptr [rax + rax]
0xeb68:	mov	rbx, qword ptr [rsp + 0xa8]
0xeb70:	xor	rbx, qword ptr fs:[0x28]
0xeb79:	jne	0xf0cc


0xe838:	lea	rax, [r15*8]
0xe840:	mov	r14, rdi
0xe843:	mov	qword ptr [rsp], 0
0xe84b:	mov	qword ptr [rsp + 8], r15
0xe850:	mov	qword ptr [rsp + 0x60], rax
0xe855:	lea	rax, [rsp + 0x90]
0xe85d:	mov	qword ptr [rsp + 0x68], rax
0xe862:	lea	rax, [rsp + 0x8c]
0xe86a:	mov	qword ptr [rsp + 0x78], rax
0xe86f:	jmp	0xe8b7


0xe55d:	mov	qword ptr [rbp - 0x88], 0
0xe568:	jmp	0xdddd


0xddbb:	mov	edi, 0x60
0xddc0:	call	0x1c20


0xd67c:	mov	rax, qword ptr [rsp + 0x60]
0xd681:	mov	rdx, qword ptr [r15 + 0xb8]
0xd688:	mov	rcx, qword ptr [r15 + 0x48]
0xd68c:	mov	r12, qword ptr [rax]
0xd68f:	mov	r14, qword ptr [rax + 0x10]
0xd693:	mov	qword ptr [rsp + 0x68], rdx
0xd698:	mov	qword ptr [rsp + 0x70], rcx
0xd69d:	mov	edx, dword ptr [r15 + 0xa0]
0xd6a4:	test	r12, r12
0xd6a7:	mov	qword ptr [r15 + 0xb8], r14
0xd6ae:	je	0xda90


0xdc96:	lea	r12, [rax + 1]
0xdc9a:	movabs	rax, 0x7fffffffffffffff
0xdca4:	sub	rax, r13
0xdca7:	cmp	rax, r12
0xdcaa:	jl	0xdd1b


0xd4d0:	mov	rdx, qword ptr [rcx + 8]
0xd4d4:	lea	rsi, [rdx + r8]
0xd4d8:	movzx	eax, byte ptr [rsi]
0xd4db:	cmp	al, 0xc1
0xd4dd:	jbe	0xd490


0xd3c1:	cmp	dword ptr [rcx + 0x90], 1
0xd3c8:	je	0xd490


0xcebc:	mov	rax, qword ptr [rsp + 0x30]
0xcec1:	mov	rax, qword ptr [rax + 0x18]
0xcec5:	mov	rbx, rax
0xcec8:	mov	qword ptr [rsp], rax
0xcecc:	shr	rbx, 0x16
0xced0:	and	ebx, 1
0xced3:	mov	rax, qword ptr [rsp + 0x20]
0xced8:	cmp	qword ptr [rax], 0
0xcedc:	jle	0xd2ed


0xced3:	mov	rax, qword ptr [rsp + 0x20]
0xced8:	cmp	qword ptr [rax], 0
0xcedc:	jle	0xd2ed


0x1bc0:	jmp	qword ptr [rip + 0x2192ca]


0xc438:	mov	rcx, qword ptr [r13]
0xc43c:	cmp	qword ptr [r8], rcx
0xc43f:	mov	rax, qword ptr [rdx]
0xc442:	je	0xc559


0xc413:	lea	rdi, [rip + 0xa6dd]
0xc41a:	mov	ecx, 6
0xc41f:	mov	rsi, r9
0xc422:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1ab0:	jmp	qword ptr [rip + 0x219352]


0xc375:	lea	rcx, [rip + 0xacc4]
0xc37c:	lea	rsi, [rip + 0xa6fd]
0xc383:	lea	rdi, [rip + 0xa75e]
0xc38a:	mov	edx, 0x555
0xc38f:	call	0x1b50


0xc313:	lea	rbx, [rax + rax*2]
0xc317:	mov	rax, qword ptr [rsi]
0xc31a:	mov	r12, rsi
0xc31d:	shl	rcx, 4
0xc321:	mov	rbp, r9
0xc324:	mov	rdi, r8
0xc327:	shl	rbx, 4
0xc32b:	add	rax, rbx
0xc32e:	mov	rsi, qword ptr [rax]
0xc331:	mov	qword ptr [rdx], rsi
0xc334:	mov	rsi, qword ptr [rax + 0x10]
0xc338:	mov	rdx, rcx
0xc33b:	call	0x1be0


0xc2f2:	pop	rbx
0xc2f3:	mov	rdi, qword ptr [rbp + 0x10]
0xc2f7:	pop	rbp
0xc2f8:	pop	r12
0xc2fa:	jmp	0x19d0


0xc2bd:	xor	ebx, ebx
0xc2bf:	xor	r12d, r12d
0xc2c2:	nop	word ptr [rax + rax]
0xc2c8:	mov	rax, qword ptr [rbp + 0x10]
0xc2cc:	add	r12, 1
0xc2d0:	mov	rdi, qword ptr [rax + rbx + 0x28]
0xc2d5:	call	0x19d0


0xc288:	mov	rax, qword ptr [rsi + 8]
0xc28c:	mov	rdx, qword ptr [rax + 0x18]
0xc290:	mov	rax, qword ptr [rax + 0x38]
0xc294:	mov	qword ptr [rsi + 0x18], rdx
0xc298:	mov	qword ptr [rsi + 0x38], rax
0xc29c:	xor	eax, eax
0xc29e:	ret	


0xc226:	push	rbp
0xc227:	push	rbx
0xc228:	mov	rbx, rsi
0xc22b:	mov	rbp, rdi
0xc22e:	sub	rsp, 8
0xc232:	mov	qword ptr [rbx + 0x18], rsi
0xc236:	mov	rdx, qword ptr [rbx + 0x30]
0xc23a:	mov	rsi, qword ptr [rsi + 0x28]
0xc23e:	call	0x8390


0xb672:	xor	edi, edi
0xb674:	jmp	0xb631


0xb491:	lea	rax, [rsp + 0x20]
0xb496:	mov	r12, rdi
0xb499:	mov	r13, rsi
0xb49c:	xor	ebx, ebx
0xb49e:	mov	qword ptr [rsp + 0x18], rax
0xb4a3:	jmp	0xb4fd


0xad36:	test	rbp, rbp
0xad39:	je	0xad9e


0xacd6:	cmp	dword ptr [rdi + 0x90], 1
0xacdd:	jg	0xae10


0xab88:	mov	r8, qword ptr [rsi]
0xab8b:	movzx	eax, cl
0xab8e:	sar	rax, 6
0xab92:	mov	r8, qword ptr [r8 + rax*8]
0xab96:	xor	eax, eax
0xab98:	bt	r8, rcx
0xab9c:	jb	0xab10


0xaad4:	jbe	0xab70


0xaa30:	mov	eax, dword ptr [rbp + 0x70]
0xaa33:	add	rsp, 8
0xaa37:	pop	rbx
0xaa38:	pop	rbp
0xaa39:	ret	


0xa9de:	cmp	qword ptr [rdi + 0x58], rsi
0xa9e2:	je	0xaa88


0xa960:	xor	eax, eax
0xa962:	add	rsp, 0x28
0xa966:	pop	rbx
0xa967:	pop	rbp
0xa968:	pop	r12
0xa96a:	pop	r13
0xa96c:	pop	r14
0xa96e:	pop	r15
0xa970:	ret	


0xa89f:	mov	r14, rdx
0xa8a2:	mov	r12, rsi
0xa8a5:	mov	r15, rdi
0xa8a8:	xor	ebx, ebx
0xa8aa:	jmp	0xa8be


0xa522:	lea	rax, [rsi + rdx]
0xa526:	mov	r8, qword ptr [rbx + 0xd8]
0xa52d:	mov	rcx, rax
0xa530:	shr	rcx, 0x3f
0xa534:	add	rcx, rax
0xa537:	sar	rcx, 1
0xa53a:	lea	rax, [rcx + rcx*4]
0xa53e:	cmp	r12, qword ptr [r8 + rax*8 + 8]
0xa543:	jle	0xa572


0xa577:	cmp	rdi, rsi
0xa57a:	jle	0xa59d


0xa4b6:	xor	eax, eax
0xa4b8:	mov	rcx, qword ptr [rsp + 0x38]
0xa4bd:	xor	rcx, qword ptr fs:[0x28]
0xa4c6:	jne	0xa4d7


0xa427:	lea	rax, [rsp + 0x1c]
0xa42c:	mov	r14, rdi
0xa42f:	mov	rbx, rsi
0xa432:	mov	r12, rdx
0xa435:	mov	rbp, rcx
0xa438:	xor	r15d, r15d
0xa43b:	lea	r13, [rsp + 0x20]
0xa440:	mov	qword ptr [rsp + 8], rax
0xa445:	jmp	0xa49c


0xa3f0:	mov	dword ptr [rdi], 0
0xa3f6:	xor	ebx, ebx
0xa3f8:	jmp	0xa38f


0xa21b:	test	rbp, rbp
0xa21e:	jle	0xa23c


0xa1df:	mov	dword ptr [rdi], 0
0xa1e5:	xor	r14d, r14d
0xa1e8:	jmp	0x9fec


0x9f5b:	mov	r8d, ecx
0x9f5e:	test	r10, r10
0x9f61:	lea	r12, [r8 + r10]
0x9f65:	jle	0x9f7c


0x9e95:	test	rdx, rdx
0x9e98:	je	0x9ea1


0x9df1:	test	rdx, rdx
0x9df4:	mov	r13, qword ptr [rsi + 8]
0x9df8:	je	0x9e90


0x9da0:	pxor	xmm0, xmm0
0x9da4:	mov	qword ptr [rdi + 0x10], 0
0x9dac:	xor	eax, eax
0x9dae:	movups	xmmword ptr [rdi], xmm0
0x9db1:	pop	rbx
0x9db2:	pop	rbp
0x9db3:	pop	r12
0x9db5:	ret	


0x9d65:	mov	rbx, rdi
0x9d68:	mov	qword ptr [rdi], rax
0x9d6b:	lea	rdi, [rax*8]
0x9d73:	mov	rbp, rsi
0x9d76:	call	0x1c20


0x9ce3:	mov	rdx, qword ptr [rbx + 0x10]
0x9ce7:	test	rdx, rdx
0x9cea:	je	0x9cf2


0x9cdd:	cmp	byte ptr [rdx + 0x30], 0x11
0x9ce1:	je	0x9d30


0x9c18:	lea	rax, [rbx + 0x70]
0x9c1c:	lea	r14, [rsp + 0x20]
0x9c21:	sub	rbx, -0x80
0x9c25:	xor	ecx, ecx
0x9c27:	xor	edx, edx
0x9c29:	mov	rsi, rbx
0x9c2c:	mov	r15, rax
0x9c2f:	mov	r8, r14
0x9c32:	mov	rdi, rax
0x9c35:	mov	byte ptr [rsp + 0x28], 8
0x9c3a:	mov	qword ptr [rsp + 8], rax
0x9c3f:	call	0x98b0


0x9aa7:	test	rbp, rbp
0x9aaa:	je	0x9b20


0x9938:	mov	edi, 0x3c8
0x993d:	mov	qword ptr [rsp + 0x18], r8
0x9942:	mov	qword ptr [rsp + 0x10], rcx
0x9947:	mov	qword ptr [rsp + 8], rdx
0x994c:	mov	qword ptr [rsp], rsi
0x9950:	call	0x1c20


0x98bf:	movsxd	r9, eax
0x98c2:	lea	r10d, [rax + 1]
0x98c6:	mov	rdi, qword ptr [rdi]
0x98c9:	mov	rax, r9
0x98cc:	shl	rax, 6
0x98d0:	add	rax, 8
0x98d4:	shl	r9, 6
0x98d8:	mov	dword ptr [rsi], r10d
0x98db:	add	rax, rdi
0x98de:	lea	rsi, [rdi + r9]
0x98e2:	mov	qword ptr [rsi + 8], 0
0x98ea:	mov	qword ptr [rsi + 0x10], rdx
0x98ee:	lea	rdi, [rsi + 0x20]
0x98f2:	mov	qword ptr [rsi + 0x18], rcx
0x98f6:	movdqu	xmm0, xmmword ptr [r8]
0x98fb:	movups	xmmword ptr [rsi + 0x30], xmm0
0x98ff:	and	byte ptr [rdi + 0x1a], 0xf3
0x9903:	test	rdx, rdx
0x9906:	mov	qword ptr [rsi + 0x20], 0
0x990e:	mov	qword ptr [rsi + 0x28], 0
0x9916:	mov	qword ptr [rsi + 0x40], -1
0x991e:	je	0x9923


0x97c8:	ret	


0x970f:	mov	r11, qword ptr [rdx + 8]
0x9713:	test	r11, r11
0x9716:	je	0x97c8


0x9208:	xor	eax, eax
0x920a:	ret	


0x9119:	mov	rdx, qword ptr [rsi + 8]
0x911d:	test	rdx, rdx
0x9120:	je	0x9208


0x8ed3:	lea	rax, [rbx + rbp]
0x8ed7:	mov	r13, qword ptr [rdi + 0xd8]
0x8ede:	mov	r10, rax
0x8ee1:	shr	r10, 0x3f
0x8ee5:	add	r10, rax
0x8ee8:	sar	r10, 1
0x8eeb:	lea	rax, [r10 + r10*4]
0x8eef:	cmp	r8, qword ptr [r13 + rax*8 + 8]
0x8ef4:	jle	0x8f26


0x8f2b:	cmp	r15, rbx
0x8f2e:	jle	0x90d0


0x8e90:	mov	qword ptr [rdx + 0x20], rsi
0x8e94:	xor	eax, eax
0x8e96:	ret	


0x8e4c:	cmp	al, 0x10
0x8e4e:	je	0x8e78


0x8e10:	mov	rax, qword ptr [rdi + 0xe0]
0x8e17:	test	rax, rax
0x8e1a:	je	0x8dbc


0x8db8:	cmp	al, 0x11
0x8dba:	je	0x8dc0


0x8da2:	ret	


0x8d78:	sub	rax, 1
0x8d7c:	cmp	rdx, rax
0x8d7f:	mov	qword ptr [rdi], rax
0x8d82:	jge	0x8da2


0x8c35:	ret	


0x8bf7:	mov	r8, qword ptr [rsi]
0x8bfa:	sub	rdi, 1
0x8bfe:	xor	esi, esi
0x8c00:	cmp	rsi, rdi
0x8c03:	jae	0x8c2d


0x8ba0:	lea	rax, [rdx - 1]
0x8ba4:	lea	rdx, [rax*8]
0x8bac:	jmp	0x8bcd


0x8b9c:	ret	


0x8b4d:	mov	rdx, qword ptr [rdi + 0x10]
0x8b51:	lea	rdi, [rax*4]
0x8b59:	cmp	dword ptr [rdx + rax*4], -1
0x8b5d:	jne	0x8b88


0x8b88:	mov	eax, 1
0x8b8d:	ret	


0x8b19:	pop	rbx
0x8b1a:	mov	qword ptr [r14 + 0xe8], 0
0x8b25:	mov	qword ptr [r14 + 0xc8], 0
0x8b30:	pop	rbp
0x8b31:	pop	r12
0x8b33:	pop	r13
0x8b35:	pop	r14
0x8b37:	ret	


0x8a99:	xor	r13d, r13d
0x8a9c:	nop	dword ptr [rax]
0x8aa0:	mov	rax, qword ptr [r14 + 0xf8]
0x8aa7:	mov	r12, qword ptr [rax + r13*8]
0x8aab:	cmp	qword ptr [r12 + 0x20], 0
0x8ab1:	jle	0x8add


0x895e:	mov	rdi, qword ptr [r12 + 0x18]
0x8963:	call	0x19d0


0x8933:	cmp	qword ptr [r12 + 0x10], 0
0x8939:	je	0x895e


0x19d0:	jmp	qword ptr [rip + 0x2193c2]


0x87f0:	mov	rax, qword ptr [r14 + 0x18]
0x87f4:	lea	rbx, [r13 + r13*2]
0x87f9:	lea	r15, [r9*8]
0x8801:	mov	edx, ebp
0x8803:	shl	rbx, 3
0x8807:	mov	r9, qword ptr [rax + r9*8]
0x880b:	mov	qword ptr [rdi + rbx + 8], 0
0x8814:	mov	rdi, r14
0x8817:	mov	rsi, r9
0x881a:	mov	qword ptr [rsp], r9
0x881e:	call	0x8560


0x863d:	lea	r12, [r9 + r9*2]
0x8641:	shl	r12, 3
0x8645:	lea	rsi, [rdi + r12]
0x8649:	mov	rcx, qword ptr [rsi + 8]
0x864d:	test	rcx, rcx
0x8650:	je	0x8849


0x83b5:	mov	r12, qword ptr [rdi + 0x18]
0x83b9:	mov	rbp, qword ptr [rdi + 0x28]
0x83bd:	mov	rax, rsi
0x83c0:	mov	ecx, edx
0x83c2:	shl	rax, 4
0x83c6:	add	rax, qword ptr [rbx]
0x83c9:	and	ecx, 0xfffc00ff
0x83cf:	mov	qword ptr [rax + 8], rdx
0x83d3:	mov	dword ptr [rax + 8], ecx
0x83d6:	xor	ecx, ecx
0x83d8:	cmp	dl, 6
0x83db:	mov	qword ptr [rax], r14
0x83de:	sete	cl
0x83e1:	cmp	dl, 5
0x83e4:	jne	0x83f2


0x8460:	lea	r13, [rbp + rbp]
0x8465:	movabs	rax, 0xaaaaaaaaaaaaaaa
0x846f:	cmp	r13, rax
0x8472:	ja	0x8552


0x8360:	mov	rdi, qword ptr [rdi]
0x8363:	jmp	0x8310


0x834d:	cmp	eax, 3
0x8350:	je	0x8358


0x829a:	cmp	rax, qword ptr [rdi + 0x58]
0x829e:	jge	0x82c0


0x82c0:	mov	rax, qword ptr [rbx + 0x30]
0x82c4:	cmp	rax, rbp
0x82c7:	jg	0x82af


0x814d:	mov	rdx, qword ptr [rdi + 0x58]
0x8151:	add	rax, rax
0x8154:	movsxd	rsi, esi
0x8157:	mov	rbx, rdi
0x815a:	cmp	rax, rdx
0x815d:	cmovg	rax, rdx
0x8161:	cmp	rax, rsi
0x8164:	cmovge	rsi, rax
0x8168:	call	0x75a0


0x8258:	mov	ebp, 0xc
0x825d:	add	rsp, 8
0x8261:	mov	eax, ebp
0x8263:	pop	rbx
0x8264:	pop	rbp
0x8265:	ret	


0x7b51:	cmp	qword ptr [rdi + 0x78], 0
0x7b56:	je	0x7ce0


0x7b5c:	mov	r13, qword ptr [r14 + 0x38]
0x7b60:	cmp	r15, rbx
0x7b63:	jl	0x7ba0


0x7a04:	mov	rax, qword ptr [rsp + 0x58]
0x7a09:	xor	rax, qword ptr fs:[0x28]
0x7a12:	mov	qword ptr [rbx + 0x30], rbp
0x7a16:	mov	qword ptr [rbx + 0x38], rbp
0x7a1a:	jne	0x7afe


0x797b:	lea	r14, [rdi + 0x20]
0x797f:	lea	r13, [rsp + 0xc]
0x7984:	nop	dword ptr [rax]
0x7988:	mov	rdi, qword ptr [rbx + 0x78]
0x798c:	mov	rdx, r12
0x798f:	mov	r15, qword ptr [rbx + 0x20]
0x7993:	sub	rdx, rbp
0x7996:	test	rdi, rdi
0x7999:	jne	0x7a80


0x7925:	mov	qword ptr [rbp + 0x30], rbx
0x7929:	mov	qword ptr [rbp + 0x38], rbx
0x792d:	pop	rbx
0x792e:	pop	rbp
0x792f:	pop	r12
0x7931:	ret	


0x78ed:	call	0x19c0


0x76e8:	mov	qword ptr [rdi], 1
0x76ef:	mov	qword ptr [rdi + 8], 1
0x76f7:	mov	edi, 8
0x76fc:	call	0x1c20


0x76c4:	mov	rsi, qword ptr [rdi + 8]
0x76c8:	mov	rax, qword ptr [rdi + 0x10]
0x76cc:	test	rsi, rsi
0x76cf:	jne	0x7720


0x7678:	add	rsi, 1
0x767c:	lea	rdx, [rsi + rsi]
0x7680:	shl	rsi, 4
0x7684:	mov	qword ptr [rdi], rdx
0x7687:	mov	rdi, rax
0x768a:	call	0x1c90


0x7659:	lea	rdx, [rsi + 1]
0x765d:	mov	qword ptr [rbx + 8], rdx
0x7661:	mov	qword ptr [rax + rsi*8], rbp
0x7665:	mov	eax, 1
0x766a:	add	rsp, 8
0x766e:	pop	rbx
0x766f:	pop	rbp
0x7670:	ret	


0x75fd:	cmp	byte ptr [rbx + 0x8b], 0
0x7604:	jne	0x7618


0x75b5:	movabs	rax, 0x1fffffffffffffff
0x75bf:	cmp	rsi, rax
0x75c2:	ja	0x7630


0x7553:	mov	rsi, rbx
0x7556:	mov	rdi, rbp
0x7559:	call	r12


0x74e3:	mov	rax, qword ptr [rbx + 8]
0x74e7:	test	rax, rax
0x74ea:	jne	0x74e0


0x7478:	mov	rax, qword ptr [rax + 0x18]
0x747c:	cmp	rax, r8
0x747f:	jl	0x74a0


0x74c0:	mov	eax, 0xffffffff
0x74c5:	ret	


0x73f5:	add	rsp, 0x48
0x73f9:	mov	eax, r15d
0x73fc:	pop	rbx
0x73fd:	sar	eax, 1
0x73ff:	pop	rbp
0x7400:	pop	r12
0x7402:	pop	r13
0x7404:	pop	r14
0x7406:	pop	r15
0x7408:	ret	


0x7267:	lea	rax, [r8 + r8*4]
0x726b:	mov	r11, rcx
0x726e:	mov	ecx, r9d
0x7271:	mov	r10, r8
0x7274:	xor	ebx, ebx
0x7276:	mov	dword ptr [rsp + 0x20], esi
0x727a:	shl	rax, 3
0x727e:	mov	r15, r9
0x7281:	mov	qword ptr [rsp + 0x10], r11
0x7286:	mov	qword ptr [rsp + 0x28], rax
0x728b:	mov	eax, 1
0x7290:	shl	rax, cl
0x7293:	mov	qword ptr [rsp + 0x18], rax
0x7298:	not	eax
0x729a:	mov	word ptr [rsp + 0x26], ax
0x729f:	mov	eax, esi
0x72a1:	and	eax, 1
0x72a4:	mov	dword ptr [rsp + 0xc], eax
0x72a8:	mov	eax, esi
0x72aa:	and	eax, 2
0x72ad:	mov	dword ptr [rsp + 8], eax
0x72b1:	jmp	0x72d5


0x7220:	cmp	rdi, qword ptr [rsi + 0x28]
0x7224:	jne	0x7216


0x7216:	xor	eax, eax
0x7218:	ret	


0x7140:	mov	byte ptr [rdi + 8], 2
0x7144:	xor	eax, eax
0x7146:	ret	


0x70ea:	mov	r8, qword ptr [rsi + 8]
0x70ee:	cmp	dword ptr [rsi + 0x90], 1
0x70f5:	movzx	ecx, byte ptr [r8 + rax]
0x70fa:	mov	byte ptr [rdi], cl
0x70fc:	jle	0x7113


0x1af0:	jmp	qword ptr [rip + 0x219332]


0x1a90:	jmp	qword ptr [rip + 0x219362]


0x6fb9:	call	0x7010


0x6fa2:	movzx	edx, dl
0x6fa5:	test	rdx, rdx
0x6fa8:	jne	0x6fb9


0x6f50:	test	rax, rax
0x6f53:	mov	edx, 0x80
0x6f58:	cmove	rax, rdx
0x6f5c:	test	rax, rax
0x6f5f:	jns	0x6f42


0x6f28:	movabs	rdx, 0x5555555555555553
0x6f32:	cmp	rax, rdx
0x6f35:	ja	0x6f61


0x6ed0:	test	rcx, rcx
0x6ed3:	je	0x6ef8


0x6e9b:	xor	edx, edx
0x6e9d:	movabs	rax, 0x5555555555555554
0x6ea7:	div	r9
0x6eaa:	cmp	rax, rcx
0x6ead:	jbe	0x6eeb


0x6e7b:	sub	rsp, 8
0x6e7f:	call	0x7010


0x6e71:	movzx	eax, al
0x6e74:	test	rax, rax
0x6e77:	jne	0x6e7b


0x6e29:	test	rdi, rdi
0x6e2c:	jne	0x6e48


0x6e2e:	mov	rsi, rbx
0x6e31:	call	0x1c90


0x6dfb:	sub	rsp, 8
0x6dff:	call	0x7010


0x6df1:	movzx	eax, al
0x6df4:	test	rax, rax
0x6df7:	jne	0x6dfb


0x6cd6:	mov	eax, r10d
0x6cd9:	mov	r11d, 1
0x6cdf:	add	r10d, 8
0x6ce3:	add	rax, rbp
0x6ce6:	mov	rax, qword ptr [rax]
0x6ce9:	test	rax, rax
0x6cec:	mov	qword ptr [r8 + r9*8], rax
0x6cf0:	je	0x6cfc


0x6d2c:	mov	rax, rbx
0x6d2f:	add	rbx, 8
0x6d33:	jmp	0x6ce6


0x6c08:	mov	r11d, eax
0x6c0b:	add	r11, qword ptr [r10 + 0x10]
0x6c0f:	add	eax, 8
0x6c12:	mov	dword ptr [r10], eax
0x6c15:	mov	rax, qword ptr [r11]
0x6c18:	test	rax, rax
0x6c1b:	mov	qword ptr [r8 + r9*8], rax
0x6c1f:	je	0x6c2b


0x6c4a:	mov	r11, qword ptr [r10 + 8]
0x6c4e:	lea	rax, [r11 + 8]
0x6c52:	mov	qword ptr [r10 + 8], rax
0x6c56:	jmp	0x6c15


0x6bdb:	jmp	0x67a0


0x68d8:	mov	r8, rcx
0x68db:	mov	rcx, rdx
0x68de:	lea	rdx, [rip + 0xfe2f]
0x68e5:	mov	esi, 1
0x68ea:	xor	eax, eax
0x68ec:	call	0x1d80


0x67c0:	mov	r8, rdx
0x67c3:	lea	rdx, [rip + 0xff3e]
0x67ca:	mov	r9, rcx
0x67cd:	xor	eax, eax
0x67cf:	mov	rcx, rsi
0x67d2:	mov	esi, 1
0x67d7:	call	0x1d80


0x65a0:	add	rdi, 1
0x65a4:	movzx	ecx, byte ptr [rdi]
0x65a7:	cmp	cl, 0x30
0x65aa:	je	0x65a0


0x6501:	cmp	dl, 0x2d
0x6504:	je	0x65e8


0x1b80:	jmp	qword ptr [rip + 0x2192ea]


0x63d7:	call	0x19e0


0x63a5:	test	rdx, rdx
0x63a8:	je	0x63d7


0x6344:	call	0x19e0


0x62dc:	mov	dword ptr [rsp], esi
0x62df:	mov	rcx, rsp
0x62e2:	mov	rdx, -1
0x62e9:	mov	rsi, rax
0x62ec:	mov	qword ptr [rsp + 4], 0
0x62f5:	mov	qword ptr [rsp + 0xc], 0x4000000
0x62fe:	mov	qword ptr [rsp + 0x14], 0
0x6307:	mov	qword ptr [rsp + 0x1c], 0
0x6310:	mov	qword ptr [rsp + 0x24], 0
0x6319:	mov	qword ptr [rsp + 0x2c], 0
0x6322:	mov	dword ptr [rsp + 0x34], 0
0x632a:	call	0x5b50


0x61b0:	call	0x19e0


0x614f:	mov	dword ptr [rsp], esi
0x6152:	mov	rcx, rsp
0x6155:	mov	rsi, rax
0x6158:	mov	qword ptr [rsp + 4], 0
0x6161:	mov	qword ptr [rsp + 0xc], 0
0x616a:	mov	qword ptr [rsp + 0x14], 0
0x6173:	mov	qword ptr [rsp + 0x1c], 0
0x617c:	mov	qword ptr [rsp + 0x24], 0
0x6185:	mov	qword ptr [rsp + 0x2c], 0
0x618e:	mov	dword ptr [rsp + 0x34], 0
0x6196:	call	0x5b50


0x6124:	call	0x19e0


0x60bc:	mov	dword ptr [rsp], esi
0x60bf:	mov	rcx, rsp
0x60c2:	mov	rdx, -1
0x60c9:	mov	rsi, rax
0x60cc:	mov	qword ptr [rsp + 4], 0
0x60d5:	mov	qword ptr [rsp + 0xc], 0
0x60de:	mov	qword ptr [rsp + 0x14], 0
0x60e7:	mov	qword ptr [rsp + 0x1c], 0
0x60f0:	mov	qword ptr [rsp + 0x24], 0
0x60f9:	mov	qword ptr [rsp + 0x2c], 0
0x6102:	mov	dword ptr [rsp + 0x34], 0
0x610a:	call	0x5b50


0x5fd1:	mov	rdi, qword ptr [r12 + 8]
0x5fd6:	lea	rbx, [rip + 0x215123]
0x5fdd:	cmp	rdi, rbx
0x5fe0:	je	0x5ff9


0x5fa6:	sub	eax, 2
0x5fa9:	lea	rbx, [r12 + 0x18]
0x5fae:	shl	rax, 4
0x5fb2:	lea	rbp, [r12 + rax + 0x28]
0x5fb7:	nop	word ptr [rax + rax]
0x5fc0:	mov	rdi, qword ptr [rbx]
0x5fc3:	add	rbx, 0x10
0x5fc7:	call	0x19d0


0x19f0:	jmp	qword ptr [rip + 0x2193b2]


0x5e07:	sub	rsp, 8
0x5e0b:	call	0x19e0


0x5df9:	test	rdx, rdx
0x5dfc:	je	0x5e07


0x1aa0:	jmp	qword ptr [rip + 0x21935a]


0x47fd:	mov	rcx, qword ptr [rip + 0x2168bc]
0x4804:	lea	rdi, [rip + 0x119ed]
0x480b:	mov	edx, 0x37
0x4810:	mov	esi, 1
0x4815:	call	0x1d70


0x4786:	mov	esi, 0x2f
0x478b:	mov	rbx, rdi
0x478e:	call	0x1b20


0x4260:	lea	rcx, [rdi + 0x18]
0x4264:	mov	rdi, rcx
0x4267:	call	0x1be0


0x423c:	mov	qword ptr [rdi], rsi
0x423f:	movzx	eax, byte ptr [rbx + 0x10]
0x4243:	mov	qword ptr [rbp + 8], rdx
0x4247:	test	al, al
0x4249:	mov	byte ptr [rbp + 0x10], al
0x424c:	je	0x4254


0x1c00:	jmp	qword ptr [rip + 0x2192aa]


0x410b:	mov	rax, qword ptr fs:[0x28]
0x4114:	mov	qword ptr [rsp + 0x18], rax
0x4119:	xor	eax, eax
0x411b:	lea	rdx, [rip + 0x1263f]
0x4122:	lea	rax, [rip + 0x11f3c]
0x4129:	test	r9b, r9b
0x412c:	lea	rcx, [rip + 0x21698d]
0x4133:	cmove	rdx, rax
0x4137:	xor	r8d, r8d
0x413a:	mov	ebx, dword ptr [rip + 0x216f60]
0x4140:	mov	dword ptr [rip + 0x216f56], 1
0x414a:	call	0x1ae0


0x40d4:	movaps	xmmword ptr [rsp + 0x50], xmm0
0x40d9:	movaps	xmmword ptr [rsp + 0x60], xmm1
0x40de:	movaps	xmmword ptr [rsp + 0x70], xmm2
0x40e3:	movaps	xmmword ptr [rsp + 0x80], xmm3
0x40eb:	movaps	xmmword ptr [rsp + 0x90], xmm4
0x40f3:	movaps	xmmword ptr [rsp + 0xa0], xmm5
0x40fb:	movaps	xmmword ptr [rsp + 0xb0], xmm6
0x4103:	movaps	xmmword ptr [rsp + 0xc0], xmm7
0x410b:	mov	rax, qword ptr fs:[0x28]
0x4114:	mov	qword ptr [rsp + 0x18], rax
0x4119:	xor	eax, eax
0x411b:	lea	rdx, [rip + 0x1263f]
0x4122:	lea	rax, [rip + 0x11f3c]
0x4129:	test	r9b, r9b
0x412c:	lea	rcx, [rip + 0x21698d]
0x4133:	cmove	rdx, rax
0x4137:	xor	r8d, r8d
0x413a:	mov	ebx, dword ptr [rip + 0x216f60]
0x4140:	mov	dword ptr [rip + 0x216f56], 1
0x414a:	call	0x1ae0


0x3fc4:	mov	rax, qword ptr fs:[0x28]
0x3fcd:	mov	qword ptr [rsp + 0x28], rax
0x3fd2:	xor	eax, eax
0x3fd4:	cmp	edi, 2
0x3fd7:	mov	ebx, dword ptr [rip + 0x2170c3]
0x3fdd:	mov	dword ptr [rip + 0x2170b9], 0
0x3fe7:	je	0x4020


0x3f8a:	movaps	xmmword ptr [rsp + 0x60], xmm0
0x3f8f:	movaps	xmmword ptr [rsp + 0x70], xmm1
0x3f94:	movaps	xmmword ptr [rsp + 0x80], xmm2
0x3f9c:	movaps	xmmword ptr [rsp + 0x90], xmm3
0x3fa4:	movaps	xmmword ptr [rsp + 0xa0], xmm4
0x3fac:	movaps	xmmword ptr [rsp + 0xb0], xmm5
0x3fb4:	movaps	xmmword ptr [rsp + 0xc0], xmm6
0x3fbc:	movaps	xmmword ptr [rsp + 0xd0], xmm7
0x3fc4:	mov	rax, qword ptr fs:[0x28]
0x3fcd:	mov	qword ptr [rsp + 0x28], rax
0x3fd2:	xor	eax, eax
0x3fd4:	cmp	edi, 2
0x3fd7:	mov	ebx, dword ptr [rip + 0x2170c3]
0x3fdd:	mov	dword ptr [rip + 0x2170b9], 0
0x3fe7:	je	0x4020


0x238d:	lea	rsi, [rip + 0x132c4]
0x2394:	xor	edi, edi
0x2396:	call	0x1a90


0x235f:	lea	rsi, [rip + 0x132ca]
0x2366:	xor	edi, edi
0x2368:	call	0x1a90


0x22f8:	lea	rbp, [rdi + 8]
0x22fc:	mov	rbx, rdi
0x22ff:	mov	esi, 0xa
0x2304:	xor	edi, edi
0x2306:	mov	rdx, rbp
0x2309:	call	0x1ac0


0x22ea:	cmp	eax, 1
0x22ed:	jne	0x2328


0x22a0:	mov	eax, 1
0x22a5:	ret	


0x2256:	push	rbp
0x2257:	push	rbx
0x2258:	mov	rbx, rdi
0x225b:	sub	rsp, 8
0x225f:	cmp	eax, 1
0x2262:	jne	0x22db


0x2228:	mov	eax, dword ptr [rdi + 0xc]
0x222b:	test	eax, eax
0x222d:	sete	al
0x2230:	ret	


0x21e6:	cmp	eax, 1
0x21e9:	jne	0x223e


0x21c0:	mov	rdi, qword ptr [rdi + 8]
0x21c4:	call	0x19d0


0x21a9:	lea	rdi, [rdi + 8]
0x21ad:	call	0x1c50


0x211f:	push	rbx
0x2120:	mov	rdx, qword ptr [rax - 8]
0x2124:	mov	esi, 8
0x2129:	xor	edi, edi
0x212b:	call	0x60a0


0x211d:	ret	


0x210d:	pop	rbx
0x210e:	ret	


0x20f5:	call	0x1bd0


0x2099:	cmp	qword ptr [rip + 0x218f3f], 0
0x20a1:	push	rbp
0x20a2:	mov	rbp, rsp
0x20a5:	je	0x20b3


0x20c8:	ret	


0x2080:	pop	rbp
0x2081:	ret	


0x2068:	mov	rax, qword ptr [rip + 0x218f69]
0x206f:	test	rax, rax
0x2072:	je	0x2080


0x2030:	pop	rbp
0x2031:	ret	


0x2017:	mov	rax, qword ptr [rip + 0x218f82]
0x201e:	test	rax, rax
0x2021:	je	0x2030




0x1b50:	jmp	qword ptr [rip + 0x219302]


0x19a2:	add	rsp, 8
0x19a6:	ret	


0x19a0:	call	rax




0x154ea:	cmp	qword ptr [rdi + 0x48], 0
0x154ef:	jne	0x154da


0x1d10:	jmp	qword ptr [rip + 0x219222]


0x1c40:	jmp	qword ptr [rip + 0x21928a]


0x1c80:	jmp	qword ptr [rip + 0x21926a]










0x151a9:	mov	rdi, rsi
0x151ac:	mov	qword ptr [rsp + 8], rsi
0x151b1:	call	0x1ab0


0x151f8:	test	byte ptr [rbp + 0x38], 0x10
0x151fc:	mov	rcx, qword ptr [rcx]
0x151ff:	mov	rdx, qword ptr [r12 + 8]
0x15204:	jne	0x151c6


0x19e0:	jmp	qword ptr [rip + 0x2193ba]




0x14eb0:	mov	r15, rbx
0x14eb3:	add	r15, rbp
0x14eb6:	jo	0x14f70


0x14f0a:	add	rsp, 0x28
0x14f0e:	mov	rax, rbx
0x14f11:	pop	rbx
0x14f12:	pop	rbp
0x14f13:	pop	r12
0x14f15:	pop	r13
0x14f17:	pop	r14
0x14f19:	pop	r15
0x14f1b:	ret	


0x14b22:	add	rsp, 0x38
0x14b26:	mov	rax, r12
0x14b29:	pop	rbx
0x14b2a:	pop	rbp
0x14b2b:	pop	r12
0x14b2d:	pop	r13
0x14b2f:	pop	r14
0x14b31:	pop	r15
0x14b33:	ret	


0x14a23:	cmp	r8, rdx
0x14a26:	mov	rbx, rcx
0x14a29:	mov	r15, rdi
0x14a2c:	jg	0x14cb0


0x1c90:	jmp	qword ptr [rip + 0x219262]


0x1384d:	movabs	rax, 0x555555555555554
0x13857:	mov	dword ptr [rbx + 0x80], 0xf
0x13861:	cmp	qword ptr [rsp], rax
0x13865:	ja	0x13ea6


0x1384a:	rep stosq	qword ptr [rdi], rax


0x120dc:	add	rsp, 0x128
0x120e3:	pop	rbx
0x120e4:	pop	rbp
0x120e5:	pop	r12
0x120e7:	pop	r13
0x120e9:	pop	r14
0x120eb:	pop	r15
0x120ed:	ret	


0x1344e:	call	0x1ad0


0x118c8:	add	rsp, 0x38
0x118cc:	pop	rbx
0x118cd:	pop	rbp
0x118ce:	pop	r12
0x118d0:	pop	r13
0x118d2:	pop	r14
0x118d4:	pop	r15
0x118d6:	ret	


0x11ee8:	call	0x1ad0


0x118e0:	cmp	r12b, 0x5c
0x118e4:	je	0x11960


0x1184d:	cmp	r14, qword ptr [rsi + 0x30]
0x11851:	je	0x119f0


0x11650:	mov	r12, qword ptr [r10 + 0x68]
0x11654:	cmp	r11, r12
0x11657:	jge	0x11778


0x1162d:	cmp	al, 0x1c
0x1162f:	je	0x11650


0x1100c:	mov	qword ptr [r14], 0
0x11013:	xor	eax, eax
0x11015:	jmp	0x10dd8


0x110c0:	mov	qword ptr [rsp + 0x10], 0
0x110c9:	jmp	0x10e68


0x10db7:	mov	rdx, qword ptr [rsi]
0x10dba:	mov	qword ptr [rdx + rbp*8], 0
0x10dc2:	mov	rdx, qword ptr [rax + rbp*8]
0x10dc6:	xor	eax, eax
0x10dc8:	test	byte ptr [rdx + 0x68], 0x40
0x10dcc:	jne	0x10eaf


0x10e08:	lea	rdi, [rsp + 0x60]
0x10e0d:	mov	rdx, rbx
0x10e10:	mov	rsi, r12
0x10e13:	mov	dword ptr [rsp + 0x60], 0
0x10e1b:	call	0xa200


0xf67e:	mov	rdi, qword ptr [rsi + 0x20]
0xf682:	mov	qword ptr [rsp + 0x1b8], rbx
0xf68a:	test	rdi, rdi
0xf68d:	mov	qword ptr [rsp + 0x68], rdi
0xf692:	je	0xf6b6


0xf145:	mov	rcx, qword ptr [rsp + 0x28]
0xf14a:	xor	rcx, qword ptr fs:[0x28]
0xf153:	mov	rax, rbp
0xf156:	jne	0xf2c7


0xf268:	test	rbp, rbp
0xf26b:	je	0xf2c0


0xf258:	mov	qword ptr [r14], rdx
0xf25b:	mov	rbp, rdx
0xf25e:	jmp	0xf137


0xf17c:	test	rdx, rdx
0xf17f:	mov	rax, qword ptr [rax + 0x50]
0xf183:	je	0xf210


0xeb7f:	add	rsp, 0xb8
0xeb86:	pop	rbx
0xeb87:	pop	rbp
0xeb88:	pop	r12
0xeb8a:	pop	r13
0xeb8c:	pop	r14
0xeb8e:	pop	r15
0xeb90:	ret	


0xf0cc:	call	0x1ad0


0xe8b7:	mov	rax, qword ptr [rsp + 0x40]
0xe8bc:	mov	rdi, qword ptr [rsp]
0xe8c0:	mov	rax, qword ptr [rax]
0xe8c3:	mov	r13, qword ptr [rax + rdi*8]
0xe8c7:	mov	rdi, qword ptr [rsp + 0x38]
0xe8cc:	mov	rax, qword ptr [rdi]
0xe8cf:	mov	rbx, r13
0xe8d2:	shl	rbx, 4
0xe8d6:	add	rax, rbx
0xe8d9:	cmp	byte ptr [rax + 8], 4
0xe8dd:	jne	0xe8a0


0xdddd:	mov	rax, qword ptr [rbp - 0x90]
0xdde4:	pxor	xmm0, xmm0
0xdde8:	mov	qword ptr [rbp - 0x60], 0
0xddf0:	mov	rbx, qword ptr [rax + 0x90]
0xddf7:	mov	rax, qword ptr [rbp - 0x98]
0xddfe:	movaps	xmmword ptr [rbp - 0x70], xmm0
0xde02:	shl	rax, 4
0xde06:	cmp	rax, 0xfbf
0xde0c:	mov	qword ptr [rbp - 0xb8], rax
0xde13:	ja	0xe506


0xda90:	lea	rsi, [rbp - 1]
0xda94:	mov	qword ptr [r15 + 0x48], rbp
0xda98:	mov	rdi, r15
0xda9b:	call	0xa9d0


0xd6b4:	lea	rsi, [r12 - 1]
0xd6b9:	mov	qword ptr [r15 + 0x48], r12
0xd6bd:	mov	rdi, r15
0xd6c0:	call	0xa9d0


0xdd1b:	mov	eax, 0xc
0xdd20:	jmp	0xdb84


0xdcac:	lea	r14, [r13 + r12]
0xdcb1:	movabs	rax, 0x1fffffffffffffff
0xdcbb:	cmp	r14, rax
0xdcbe:	ja	0xdd1b


0xd490:	xor	ebp, ebp
0xd492:	add	rsp, 8
0xd496:	mov	eax, ebp
0xd498:	pop	rbx
0xd499:	pop	rbp
0xd49a:	pop	r12
0xd49c:	pop	r13
0xd49e:	ret	


0xd4df:	mov	rcx, qword ptr [rcx + 0x58]
0xd4e3:	lea	rdi, [r8 + 1]
0xd4e7:	cmp	rdi, rcx
0xd4ea:	jge	0xd490


0xd3ce:	mov	rbx, rsi
0xd3d1:	mov	rdi, rcx
0xd3d4:	mov	rsi, r8
0xd3d7:	mov	r10, rcx
0xd3da:	call	0x8b40


0xd2ed:	mov	rax, qword ptr [rsp + 0x168]
0xd2f5:	xor	rax, qword ptr fs:[0x28]
0xd2fe:	jne	0xd392


0xcee2:	lea	rax, [rsp + 0x58]
0xcee7:	mov	qword ptr [rsp], 0
0xceef:	mov	qword ptr [rsp + 0x40], rax
0xcef4:	lea	rax, [rsp + 0x54]
0xcef9:	mov	qword ptr [rsp + 0x48], rax
0xcefe:	lea	rax, [rsp + 0x60]
0xcf03:	mov	qword ptr [rsp + 0x38], rax
0xcf08:	jmp	0xcf4e




0xc559:	lea	r14, [rcx + rcx + 1]
0xc55e:	mov	rdi, rax
0xc561:	mov	qword ptr [rsp + 8], r8
0xc566:	mov	qword ptr [rsp], rdx
0xc56a:	lea	rsi, [r14*8]
0xc572:	call	0x1c90


0xc448:	lea	rdx, [rcx + 1]
0xc44c:	mov	rdi, r12
0xc44f:	mov	qword ptr [r13], rdx
0xc453:	lea	r13, [rax + rcx*8]
0xc457:	call	0x1ba0


0xc422:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc424:	seta	al
0xc427:	sbb	al, 0
0xc429:	test	al, al
0xc42b:	jne	0xc526




0x1be0:	jmp	qword ptr [rip + 0x2192ba]


0xb631:	call	0x19d0


0xb4fd:	mov	rax, qword ptr [rbp + 0x10]
0xb501:	mov	rax, qword ptr [rax + rbx*8]
0xb505:	cmp	r13, rax
0xb508:	je	0xb4f0


0xad9e:	mov	rax, qword ptr [rbx + 0x58]
0xada2:	sub	qword ptr [rbx + 0x68], rbp
0xada6:	mov	qword ptr [rbx + 0x28], r15
0xadaa:	sub	rax, rbp
0xadad:	cmp	dword ptr [rbx + 0x90], 1
0xadb4:	mov	qword ptr [rbx + 0x58], rax
0xadb8:	jle	0xae58


0xad3b:	mov	rax, qword ptr [rbx + 0x38]
0xad3f:	movzx	edx, byte ptr [rbx + 0x8c]
0xad46:	mov	r8, qword ptr [rbx + 0x30]
0xad4a:	cmp	rax, rbp
0xad4d:	jle	0xae70


0xace3:	mov	rax, qword ptr [rbx + 0x50]
0xace7:	mov	qword ptr [rbx + 0x30], 0
0xacef:	mov	rbp, r15
0xacf2:	mov	qword ptr [rbx + 0x28], 0
0xacfa:	mov	qword ptr [rbx + 0x38], 0
0xad02:	mov	byte ptr [rbx + 0x8c], 0
0xad09:	mov	qword ptr [rbx + 0x58], rax
0xad0d:	mov	rax, qword ptr [rbx + 0x60]
0xad11:	mov	qword ptr [rbx + 0x68], rax
0xad15:	mov	eax, r10d
0xad18:	and	eax, 1
0xad1b:	cmp	eax, 1
0xad1e:	sbb	eax, eax
0xad20:	and	eax, 2
0xad23:	add	eax, 4
0xad26:	cmp	byte ptr [rbx + 0x8b], 0
0xad2d:	mov	dword ptr [rbx + 0x70], eax
0xad30:	je	0xae00


0xae10:	mov	qword ptr [rdi + 0x20], 0
0xae18:	jmp	0xace3


0xab10:	push	rbx
0xab11:	mov	ebx, dword ptr [rsi + 8]
0xab14:	mov	eax, 1
0xab19:	test	ebx, 0x3ff00
0xab1f:	je	0xab6c


0xaba2:	ret	


0xab70:	cmp	al, 1
0xab72:	jne	0xab80


0xaada:	cmp	al, 5
0xaadc:	je	0xaaf0


0xaa88:	and	edx, 2
0xaa8b:	cmp	edx, 1
0xaa8e:	sbb	eax, eax
0xaa90:	and	eax, 2
0xaa93:	add	eax, 8
0xaa96:	jmp	0xaa22


0xa9e8:	cmp	dword ptr [rdi + 0x90], 1
0xa9ef:	jle	0xaa40


0xa8be:	mov	rax, qword ptr [r14]
0xa8c1:	mov	rbp, qword ptr [rax + rbx*8]
0xa8c5:	mov	rax, rbp
0xa8c8:	shl	rax, 4
0xa8cc:	add	rax, qword ptr [r13]
0xa8d0:	cmp	byte ptr [rax + 8], 8
0xa8d4:	jne	0xa8b0


0xa572:	cmp	rsi, rcx
0xa575:	jl	0xa550


0xa545:	jmp	0xa5c8


0xa59d:	xor	eax, eax
0xa59f:	mov	rbx, qword ptr [rsp + 0x68]
0xa5a4:	xor	rbx, qword ptr fs:[0x28]
0xa5ad:	jne	0xa879


0xa57c:	mov	rcx, qword ptr [rbx + 0xd8]
0xa583:	lea	rax, [rsi + rsi*4]
0xa587:	shl	rax, 3
0xa58b:	cmp	qword ptr [rcx + rax + 8], r12
0xa590:	mov	qword ptr [rsp + 0x30], rax
0xa595:	jne	0xa59d


0xa4c8:	add	rsp, 0x48
0xa4cc:	pop	rbx
0xa4cd:	pop	rbp
0xa4ce:	pop	r12
0xa4d0:	pop	r13
0xa4d2:	pop	r14
0xa4d4:	pop	r15
0xa4d6:	ret	


0xa4d7:	call	0x1ad0


0xa49c:	mov	rsi, qword ptr [rbx + r15*8]
0xa4a0:	mov	rdx, qword ptr [r12 + r15*8]
0xa4a4:	test	rsi, rsi
0xa4a7:	jne	0xa450


0xa38f:	add	rsp, 8
0xa393:	mov	rax, rbx
0xa396:	pop	rbx
0xa397:	pop	rbp
0xa398:	pop	r12
0xa39a:	pop	r13
0xa39c:	pop	r14
0xa39e:	pop	r15
0xa3a0:	ret	


0xa23c:	mov	rax, qword ptr [rsi + 0x88]
0xa243:	mov	r14, rdx
0xa246:	mov	r12, rsi
0xa249:	mov	r13, rdi
0xa24c:	and	rax, rbp
0xa24f:	lea	rdx, [rax + rax*2]
0xa253:	mov	rax, qword ptr [rsi + 0x40]
0xa257:	lea	rax, [rax + rdx*8]
0xa25b:	mov	r10, qword ptr [rax]
0xa25e:	test	r10, r10
0xa261:	jle	0xa296


0xa220:	mov	rax, qword ptr [rdx + 0x10]
0xa224:	lea	rcx, [rax + rbp*8]
0xa228:	nop	dword ptr [rax + rax]
0xa230:	add	rbp, qword ptr [rax]
0xa233:	add	rax, 8
0xa237:	cmp	rcx, rax
0xa23a:	jne	0xa230


0x9fec:	add	rsp, 0x28
0x9ff0:	mov	rax, r14
0x9ff3:	pop	rbx
0x9ff4:	pop	rbp
0x9ff5:	pop	r12
0x9ff7:	pop	r13
0x9ff9:	pop	r14
0x9ffb:	pop	r15
0x9ffd:	ret	


0x9f7c:	mov	rax, qword ptr [rsi + 0x88]
0x9f83:	mov	rbp, rdx
0x9f86:	mov	dword ptr [rsp + 4], ecx
0x9f8a:	mov	r13, rsi
0x9f8d:	mov	qword ptr [rsp + 0x18], rdi
0x9f92:	and	rax, r12
0x9f95:	lea	rdx, [rax + rax*2]
0x9f99:	mov	rax, qword ptr [rsi + 0x40]
0x9f9d:	lea	rax, [rax + rdx*8]
0x9fa1:	mov	r11, qword ptr [rax]
0x9fa4:	test	r11, r11
0x9fa7:	jle	0xa000


0x9f67:	mov	rax, qword ptr [rdx + 0x10]
0x9f6b:	lea	r10, [rax + r10*8]
0x9f6f:	nop	
0x9f70:	add	r12, qword ptr [rax]
0x9f73:	add	rax, 8
0x9f77:	cmp	r10, rax
0x9f7a:	jne	0x9f70


0x9ea1:	pxor	xmm0, xmm0
0x9ea5:	mov	qword ptr [rdi + 0x10], 0
0x9ead:	xor	eax, eax
0x9eaf:	movaps	xmmword ptr [rdi], xmm0
0x9eb2:	pop	rbx
0x9eb3:	pop	rbp
0x9eb4:	pop	r12
0x9eb6:	pop	r13
0x9eb8:	pop	r14
0x9eba:	ret	


0x9e9a:	cmp	qword ptr [rdx + 8], 0
0x9e9f:	jg	0x9ec0


0x9e90:	test	r13, r13
0x9e93:	jg	0x9ec3


0x9dfe:	test	r13, r13
0x9e01:	jle	0x9e90


0x9cf2:	mov	rcx, qword ptr [rsp + 8]
0x9cf7:	xor	rcx, qword ptr fs:[0x28]
0x9d00:	mov	eax, dword ptr [rsp + 4]
0x9d04:	jne	0x9d4b


0x9cec:	cmp	byte ptr [rdx + 0x30], 0x11
0x9cf0:	je	0x9d10


0x9d30:	lea	rdi, [rsp + 4]
0x9d35:	mov	rsi, rbp
0x9d38:	call	0x9a70


0x9b20:	lea	rax, [rbx + 0x70]
0x9b24:	lea	r14, [rsp + 0x20]
0x9b29:	sub	rbx, -0x80
0x9b2d:	xor	ecx, ecx
0x9b2f:	xor	edx, edx
0x9b31:	mov	rsi, rbx
0x9b34:	mov	r15, rax
0x9b37:	mov	r8, r14
0x9b3a:	mov	rdi, rax
0x9b3d:	mov	byte ptr [rsp + 0x28], 8
0x9b42:	mov	qword ptr [rsp + 8], rax
0x9b47:	call	0x98b0


0x9aac:	mov	rax, qword ptr [rdx + 0x28]
0x9ab0:	cmp	rax, 0x3f
0x9ab4:	jg	0x9bed


0x9923:	test	rcx, rcx
0x9926:	je	0x992b


0x9920:	mov	qword ptr [rdx], rax
0x9923:	test	rcx, rcx
0x9926:	je	0x992b


0x971c:	push	r13
0x971e:	push	r12
0x9720:	lea	rax, [r9 + r11]
0x9724:	push	rbp
0x9725:	push	rbx
0x9726:	mov	r12, rdx
0x9729:	mov	rbx, rdi
0x972c:	mov	rbp, rsi
0x972f:	sub	rsp, 8
0x9733:	mov	rcx, qword ptr [rdi + 8]
0x9737:	mov	r13, qword ptr [rdi]
0x973a:	mov	rdi, qword ptr [rdi + 0x10]
0x973e:	lea	rdx, [rax + rcx]
0x9742:	cmp	rdx, r13
0x9745:	jg	0x9870


0x9126:	push	r12
0x9128:	push	rbp
0x9129:	mov	r12, rsi
0x912c:	push	rbx
0x912d:	mov	rax, qword ptr [rdi + 8]
0x9131:	mov	rbx, rdi
0x9134:	mov	rsi, qword ptr [rdi]
0x9137:	lea	rcx, [rax + rdx*2]
0x913b:	cmp	rsi, rcx
0x913e:	jl	0x9288


0x8f26:	cmp	rbx, r10
0x8f29:	jl	0x8f00


0x8ef6:	jmp	0x9090


0x90d0:	mov	rbx, -1
0x90d7:	jmp	0x8f52


0x8f34:	mov	r11, qword ptr [rdi + 0xd8]
0x8f3b:	lea	rax, [rbx + rbx*4]
0x8f3f:	lea	rax, [r11 + rax*8]
0x8f43:	cmp	r8, qword ptr [rax + 8]
0x8f47:	mov	rax, -1
0x8f4e:	cmovne	rbx, rax
0x8f52:	mov	rax, r15
0x8f55:	xor	ebp, ebp
0x8f57:	cmp	rbp, rax
0x8f5a:	jge	0x8fb4


0x8e78:	mov	rax, qword ptr [rsi + 0x10]
0x8e7c:	mov	rcx, qword ptr [rax + 0x18]
0x8e80:	mov	qword ptr [rdx + 0x20], rcx
0x8e84:	mov	rdx, qword ptr [rsi + 0x20]
0x8e88:	mov	qword ptr [rax + 0x20], rdx
0x8e8c:	xor	eax, eax
0x8e8e:	ret	


0x8e50:	test	rdx, rdx
0x8e53:	je	0x8e5d


0x8dbc:	xor	eax, eax
0x8dbe:	ret	


0x8e1c:	movsxd	rdx, dword ptr [rsi + 0x28]
0x8e20:	mov	rcx, qword ptr [rax + rdx*8]
0x8e24:	mov	eax, 1
0x8e29:	shl	eax, cl
0x8e2b:	mov	qword ptr [rsi + 0x28], rcx
0x8e2f:	cdqe	
0x8e31:	or	qword ptr [rdi + 0xa0], rax
0x8e38:	xor	eax, eax
0x8e3a:	ret	


0x8dc0:	mov	rax, qword ptr [rsi + 8]
0x8dc4:	test	rax, rax
0x8dc7:	je	0x8dbc


0x8d84:	mov	rax, qword ptr [rsi]
0x8d87:	nop	word ptr [rax + rax]
0x8d90:	mov	rcx, qword ptr [rax + rdx*8 + 8]
0x8d95:	mov	qword ptr [rax + rdx*8], rcx
0x8d99:	add	rdx, 1
0x8d9d:	cmp	rdx, qword ptr [rdi]
0x8da0:	jl	0x8d90


0x8c05:	lea	rcx, [rsi + rdi]
0x8c09:	shr	rcx, 1
0x8c0c:	cmp	rdx, qword ptr [r8 + rcx*8]
0x8c10:	jle	0x8c28


0x8c2d:	xor	eax, eax
0x8c2f:	cmp	rdx, qword ptr [r8 + rsi*8]
0x8c33:	je	0x8c60


0x8bcd:	test	rax, rax
0x8bd0:	jns	0x8bb0


0x8b5f:	sub	rcx, rsi
0x8b62:	lea	rsi, [rdx + rdi - 4]
0x8b67:	mov	edx, 2
0x8b6c:	jmp	0x8b7b


0x8add:	mov	rdi, qword ptr [r12 + 0x28]
0x8ae2:	call	0x19d0


0x8ab3:	xor	ebx, ebx
0x8ab5:	nop	dword ptr [rax]
0x8ab8:	mov	rax, qword ptr [r12 + 0x28]
0x8abd:	mov	rbp, qword ptr [rax + rbx*8]
0x8ac1:	add	rbx, 1
0x8ac5:	mov	rdi, qword ptr [rbp + 0x20]
0x8ac9:	call	0x19d0


0x893b:	xor	ebx, ebx
0x893d:	jmp	0x8944




0x8849:	mov	rax, qword ptr [r14 + 0x18]
0x884d:	mov	rcx, qword ptr [rax + r9*8]
0x8851:	mov	qword ptr [rax + r13*8], rcx
0x8855:	xor	eax, eax
0x8857:	jmp	0x8730


0x8656:	lea	rbx, [r13 + r13*2]
0x865b:	mov	rsi, qword ptr [rsi + 0x10]
0x865f:	shl	rbx, 3
0x8663:	add	rdi, rbx
0x8666:	cmp	rcx, 1
0x866a:	mov	r15, qword ptr [rsi]
0x866d:	mov	qword ptr [rdi + 8], 0
0x8675:	je	0x8790


0x83e6:	xor	ecx, ecx
0x83e8:	cmp	dword ptr [rbx + 0xb4], 1
0x83ef:	setg	cl
0x83f2:	movzx	edx, byte ptr [rax + 0xa]
0x83f6:	shl	ecx, 4
0x83f9:	pxor	xmm0, xmm0
0x83fd:	and	edx, 0xffffffef
0x8400:	or	edx, ecx
0x8402:	mov	byte ptr [rax + 0xa], dl
0x8405:	mov	qword ptr [r12 + rsi*8], -1
0x840d:	mov	rax, qword ptr [rbx + 0x10]
0x8411:	lea	rax, [rax + rax*2]
0x8415:	lea	rax, [rbp + rax*8]
0x841a:	movups	xmmword ptr [rax], xmm0
0x841d:	mov	qword ptr [rax + 0x10], 0
0x8425:	mov	rax, qword ptr [rbx + 0x10]
0x8429:	lea	rdx, [rax + rax*2]
0x842d:	mov	rax, qword ptr [rbx + 0x30]
0x8431:	lea	rax, [rax + rdx*8]
0x8435:	movups	xmmword ptr [rax], xmm0
0x8438:	mov	qword ptr [rax + 0x10], 0
0x8440:	mov	rax, qword ptr [rbx + 0x10]
0x8444:	lea	rdx, [rax + 1]
0x8448:	mov	qword ptr [rbx + 0x10], rdx
0x844c:	add	rsp, 0x18
0x8450:	pop	rbx
0x8451:	pop	rbp
0x8452:	pop	r12
0x8454:	pop	r13
0x8456:	pop	r14
0x8458:	pop	r15
0x845a:	ret	


0x83f2:	movzx	edx, byte ptr [rax + 0xa]
0x83f6:	shl	ecx, 4
0x83f9:	pxor	xmm0, xmm0
0x83fd:	and	edx, 0xffffffef
0x8400:	or	edx, ecx
0x8402:	mov	byte ptr [rax + 0xa], dl
0x8405:	mov	qword ptr [r12 + rsi*8], -1
0x840d:	mov	rax, qword ptr [rbx + 0x10]
0x8411:	lea	rax, [rax + rax*2]
0x8415:	lea	rax, [rbp + rax*8]
0x841a:	movups	xmmword ptr [rax], xmm0
0x841d:	mov	qword ptr [rax + 0x10], 0
0x8425:	mov	rax, qword ptr [rbx + 0x10]
0x8429:	lea	rdx, [rax + rax*2]
0x842d:	mov	rax, qword ptr [rbx + 0x30]
0x8431:	lea	rax, [rax + rdx*8]
0x8435:	movups	xmmword ptr [rax], xmm0
0x8438:	mov	qword ptr [rax + 0x10], 0
0x8440:	mov	rax, qword ptr [rbx + 0x10]
0x8444:	lea	rdx, [rax + 1]
0x8448:	mov	qword ptr [rbx + 0x10], rdx
0x844c:	add	rsp, 0x18
0x8450:	pop	rbx
0x8451:	pop	rbp
0x8452:	pop	r12
0x8454:	pop	r13
0x8456:	pop	r14
0x8458:	pop	r15
0x845a:	ret	


0x8478:	mov	rdi, qword ptr [rdi]
0x847b:	mov	rsi, rbp
0x847e:	mov	qword ptr [rsp + 8], rdx
0x8483:	shl	rsi, 5
0x8487:	call	0x1c90


0x8552:	mov	rax, -1
0x8559:	jmp	0x844c


0x8358:	mov	rdi, qword ptr [rdi]
0x835b:	jmp	0x19d0


0x8352:	ret	


0x82a0:	lea	esi, [rbp + 1]
0x82a3:	mov	rdi, rbx
0x82a6:	call	0x8130


0x82c9:	cmp	rax, qword ptr [rbx + 0x58]
0x82cd:	jge	0x82af


0x82af:	cmp	r12, rbp
0x82b2:	jl	0x82e0


0x7ce0:	cmp	byte ptr [rdi + 0x8c], 0
0x7ce7:	jne	0x7b5c


0x7ba0:	lea	rax, [r14 + 0x20]
0x7ba4:	mov	qword ptr [rsp + 8], rax
0x7ba9:	mov	rax, rbx
0x7bac:	sub	rax, r15
0x7baf:	mov	qword ptr [rsp + 0x10], rax
0x7bb4:	lea	rax, [rsp + 0x44]
0x7bb9:	mov	qword ptr [rsp + 0x20], rax
0x7bbe:	mov	rdx, qword ptr [r14 + 0x78]
0x7bc2:	mov	rax, qword ptr [r14 + 0x20]
0x7bc6:	test	rdx, rdx
0x7bc9:	mov	qword ptr [rsp + 0x48], rax
0x7bce:	jne	0x7ed9


0x7b65:	mov	qword ptr [r14 + 0x30], r15
0x7b69:	mov	qword ptr [r14 + 0x38], r13
0x7b6d:	xor	eax, eax
0x7b6f:	mov	rcx, qword ptr [rsp + 0x98]
0x7b77:	xor	rcx, qword ptr fs:[0x28]
0x7b80:	jne	0x810a


0x7a20:	add	rsp, 0x68
0x7a24:	pop	rbx
0x7a25:	pop	rbp
0x7a26:	pop	r12
0x7a28:	pop	r13
0x7a2a:	pop	r14
0x7a2c:	pop	r15
0x7a2e:	ret	


0x7afe:	call	0x1ad0


0x799f:	mov	rsi, qword ptr [rbx + 0x28]
0x79a3:	add	rsi, rbp
0x79a6:	add	rsi, qword ptr [rbx]
0x79a9:	mov	rcx, r14
0x79ac:	mov	rdi, r13
0x79af:	call	0x7050


0x7a80:	mov	ecx, dword ptr [rbx + 0x90]
0x7a86:	xor	eax, eax
0x7a88:	lea	rsi, [rsp + 0x10]
0x7a8d:	test	ecx, ecx
0x7a8f:	jg	0x7ab1


0x19c0:	jmp	qword ptr [rip + 0x2193ca]


0x76d1:	mov	qword ptr [rax], rbp
0x76d4:	add	qword ptr [rdi + 8], 1
0x76d9:	mov	eax, 1
0x76de:	add	rsp, 8
0x76e2:	pop	rbx
0x76e3:	pop	rbp
0x76e4:	ret	


0x7720:	cmp	rdx, rsi
0x7723:	je	0x77b0


0x7606:	mov	qword ptr [rbx + 0x40], rbp
0x760a:	add	rsp, 8
0x760e:	xor	eax, eax
0x7610:	pop	rbx
0x7611:	pop	rbp
0x7612:	ret	


0x7618:	mov	rdi, qword ptr [rbx + 8]
0x761c:	mov	rsi, rbp
0x761f:	call	0x1c90


0x75c4:	mov	rdi, qword ptr [rdi + 0x10]
0x75c8:	lea	rsi, [rsi*4]
0x75d0:	call	0x1c90


0x7630:	add	rsp, 8
0x7634:	mov	eax, 0xc
0x7639:	pop	rbx
0x763a:	pop	rbp
0x763b:	ret	


0x74ec:	mov	rax, qword ptr [rbx + 0x10]
0x74f0:	test	rax, rax
0x74f3:	jne	0x74e0


0x74e0:	mov	rbx, rax
0x74e3:	mov	rax, qword ptr [rbx + 8]
0x74e7:	test	rax, rax
0x74ea:	jne	0x74e0


0x74a0:	mov	eax, 1
0x74a5:	ret	


0x7481:	xor	esi, esi
0x7483:	cmp	r10, r8
0x7486:	sete	sil
0x748a:	or	esi, 2
0x748d:	cmp	rax, r8
0x7490:	je	0x74b5


0x72d5:	mov	rax, qword ptr [r12 + 0x10]
0x72da:	mov	rbp, qword ptr [rax + rbx*8]
0x72de:	mov	rax, rbp
0x72e1:	shl	rax, 4
0x72e5:	add	rax, qword ptr [r14]
0x72e8:	movzx	edx, byte ptr [rax + 8]
0x72ec:	cmp	dl, 8
0x72ef:	jne	0x72b8


0x7226:	or	byte ptr [rsi + 0x32], 8
0x722a:	xor	eax, eax
0x722c:	ret	


0x7113:	cmp	cl, 0x5c
0x7116:	je	0x7180


0x70fe:	cmp	rax, qword ptr [rsi + 0x30]
0x7102:	je	0x7113






0x6faa:	call	0x1bc0


0x6f61:	sub	rsp, 8
0x6f65:	call	0x7010


0x6f42:	mov	qword ptr [rsi], rax
0x6f45:	mov	rsi, rax
0x6f48:	jmp	0x6e20


0x6f37:	mov	rdx, rax
0x6f3a:	shr	rdx, 1
0x6f3d:	lea	rax, [rdx + rax + 1]
0x6f42:	mov	qword ptr [rsi], rax
0x6f45:	mov	rsi, rax
0x6f48:	jmp	0x6e20


0x6ef8:	xor	edx, edx
0x6efa:	mov	eax, 0x80
0x6eff:	xor	r8d, r8d
0x6f02:	div	r9
0x6f05:	test	rax, rax
0x6f08:	sete	r8b
0x6f0c:	lea	rcx, [r8 + rax]
0x6f10:	jmp	0x6ed5


0x6ed5:	mov	rax, rcx
0x6ed8:	mul	r9
0x6edb:	seto	dl
0x6ede:	test	rax, rax
0x6ee1:	movzx	edx, dl
0x6ee4:	js	0x6eeb


0x6eeb:	sub	rsp, 8
0x6eef:	call	0x7010


0x6eaf:	mov	rax, rcx
0x6eb2:	shr	rax, 1
0x6eb5:	lea	rcx, [rax + rcx + 1]
0x6eba:	mov	qword ptr [rsi], rcx
0x6ebd:	imul	rcx, r9
0x6ec1:	mov	rsi, rcx
0x6ec4:	jmp	0x6e20


0x6e79:	jmp	0x6e20


0x6e48:	call	0x19d0


0x6df9:	jmp	0x6dc0


0x6cfc:	test	r11b, r11b
0x6cff:	jne	0x6d25


0x6cf2:	add	r9, 1
0x6cf6:	cmp	r9, 0xa
0x6cfa:	jne	0x6cd0


0x6ce6:	mov	rax, qword ptr [rax]
0x6ce9:	test	rax, rax
0x6cec:	mov	qword ptr [r8 + r9*8], rax
0x6cf0:	je	0x6cfc


0x6c2b:	call	0x67a0


0x6c21:	add	r9, 1
0x6c25:	cmp	r9, 0xa
0x6c29:	jne	0x6c00


0x6c15:	mov	rax, qword ptr [r11]
0x6c18:	test	rax, rax
0x6c1b:	mov	qword ptr [r8 + r9*8], rax
0x6c1f:	je	0x6c2b


0x6bd0:	add	r9, 1
0x6bd4:	cmp	qword ptr [r8 + r9*8], 0
0x6bd9:	jne	0x6bd0


0x1d80:	jmp	qword ptr [rip + 0x2191ea]


0x65ac:	movzx	eax, cl
0x65af:	cmp	dl, 0x2d
0x65b2:	lea	r8d, [rax - 0x30]
0x65b6:	je	0x6620


0x65e8:	add	rsi, 1
0x65ec:	movzx	eax, byte ptr [rsi]
0x65ef:	cmp	al, 0x30
0x65f1:	je	0x65e8




0x63aa:	mov	qword ptr [rsp + 0x28], rsi
0x63af:	mov	qword ptr [rsp + 0x30], rdx
0x63b4:	mov	rcx, rsp
0x63b7:	mov	rdx, r8
0x63ba:	mov	rsi, r9
0x63bd:	call	0x5b50


0x5ff9:	lea	rbx, [rip + 0x215070]
0x6000:	cmp	r12, rbx
0x6003:	je	0x6014


0x5fe2:	call	0x19d0




0x5dfe:	mov	qword ptr [rdi + 0x28], rsi
0x5e02:	mov	qword ptr [rdi + 0x30], rdx
0x5e06:	ret	




0x1d70:	jmp	qword ptr [rip + 0x2191f2]


0x1b20:	jmp	qword ptr [rip + 0x21931a]


0x4254:	add	rsp, 8
0x4258:	pop	rbx
0x4259:	pop	rbp
0x425a:	ret	


0x424e:	mov	eax, dword ptr [rbx + 0x14]
0x4251:	mov	dword ptr [rbp + 0x14], eax
0x4254:	add	rsp, 8
0x4258:	pop	rbx
0x4259:	pop	rbp
0x425a:	ret	




0x1ae0:	jmp	qword ptr [rip + 0x21933a]


0x4020:	lea	rcx, [rip + 0x216a99]
0x4027:	lea	rdx, [rip + 0x12037]
0x402e:	xor	r8d, r8d
0x4031:	mov	qword ptr [rsp + 8], r9
0x4036:	call	0x1ae0


0x3fe9:	mov	rax, qword ptr [rsp + 0x28]
0x3fee:	xor	rax, qword ptr fs:[0x28]
0x3ff7:	mov	dword ptr [rip + 0x2170a3], ebx
0x3ffd:	mov	dword ptr [rip + 0x217089], 0
0x4007:	jne	0x40aa


0x1ac0:	jmp	qword ptr [rip + 0x21934a]


0x22ef:	pop	rbx
0x22f0:	pop	rbp
0x22f1:	pop	r12
0x22f3:	ret	


0x2328:	call	0x19e0


0x2264:	mov	rbp, qword ptr [rdi + 8]
0x2268:	xor	edx, edx
0x226a:	cmp	byte ptr [rbp], 0x2d
0x226e:	sete	dl
0x2271:	add	rdx, rbp
0x2274:	movsx	eax, byte ptr [rdx]
0x2277:	jmp	0x228b


0x22db:	call	0x19e0


0x21eb:	mov	rdx, qword ptr [rdi + 8]
0x21ef:	mov	eax, 1
0x21f4:	movzx	ecx, byte ptr [rdx]
0x21f7:	test	cl, cl
0x21f9:	je	0x2222


0x223e:	sub	rsp, 8
0x2242:	call	0x19e0


0x1c50:	jmp	qword ptr [rip + 0x219282]


0x1bd0:	jmp	qword ptr [rip + 0x2192c2]


0x20b3:	call	0x2000


0x20a7:	mov	rdi, qword ptr [rip + 0x218f5a]
0x20ae:	call	0x1dd0


0x2074:	pop	rbp
0x2075:	jmp	rax


0x2023:	pop	rbp
0x2024:	jmp	rax




0x154f1:	push	r12
0x154f3:	push	rbp
0x154f4:	mov	r12d, edx
0x154f7:	push	rbx
0x154f8:	mov	rbp, rsi
0x154fb:	mov	rbx, rdi
0x154fe:	call	0x1bf0








0x15206:	sub	rsp, 8
0x1520a:	push	rbx
0x1520b:	push	r12
0x1520d:	push	r13
0x1520f:	jmp	0x151cf


0x151c6:	sub	rsp, 8
0x151ca:	push	rbx
0x151cb:	push	0
0x151cd:	push	0
0x151cf:	mov	rdi, rbp
0x151d2:	mov	r9, rdx
0x151d5:	mov	r8, rdx
0x151d8:	call	0xf610




0x14ebc:	test	rbp, rbp
0x14ebf:	mov	r14, rcx
0x14ec2:	mov	rcx, r9
0x14ec5:	je	0x14f80


0x14a32:	test	rax, rax
0x14a35:	js	0x14a40


0x14cb0:	mov	r8, rdx
0x14cb3:	jmp	0x14a57




0x1386b:	mov	r14, qword ptr [rsp]
0x1386f:	lea	rax, [r14 + 1]
0x13873:	mov	rdi, rax
0x13876:	mov	qword ptr [rbx + 8], rax
0x1387a:	mov	qword ptr [rsp + 0x28], rax
0x1387f:	shl	rdi, 4
0x13883:	call	0x1c20


0x13ea6:	mov	dword ptr [rsp + 0x4c], 0xc
0x13eae:	jmp	0x13b1c


0x1ad0:	jmp	qword ptr [rip + 0x219342]


0x11960:	lea	rsi, [r14 + 1]
0x11964:	cmp	rsi, qword ptr [rbx + 0x58]
0x11968:	jge	0x11a10


0x118e6:	mov	byte ptr [rbp + 8], 1
0x118ea:	mov	qword ptr [rsp], rdx
0x118ee:	call	0x1dc0


0x119f0:	cmp	r12b, 0x5c
0x119f4:	je	0x11960


0x11857:	mov	rcx, qword ptr [rsi + 0x10]
0x1185b:	mov	ecx, dword ptr [rcx + r14*4]
0x1185f:	cmp	ecx, -1
0x11862:	je	0x11940


0x1165d:	movzx	r13d, byte ptr [rbp]
0x11662:	xor	r8d, r8d
0x11665:	jmp	0x11692


0x11778:	mov	eax, 7
0x1177d:	jmp	0x115f1


0x11631:	cmp	al, 0x16
0x11633:	jne	0x1163e


0x10dd8:	mov	rdi, qword ptr [rsp + 0x98]
0x10de0:	xor	rdi, qword ptr fs:[0x28]
0x10de9:	jne	0x1158b


0x10e68:	lea	rdi, [rsp + 0x5c]
0x10e6d:	mov	rdx, rbx
0x10e70:	mov	rsi, r12
0x10e73:	call	0xa200


0x10eaf:	mov	rax, qword ptr [rsp + 8]
0x10eb4:	xor	ebx, ebx
0x10eb6:	mov	rsi, qword ptr [rax + 0xc8]
0x10ebd:	mov	rdx, rsi
0x10ec0:	cmp	rbx, rdx
0x10ec3:	jge	0x10f23


0xf6b6:	mov	rax, qword ptr [rsp + 0x48]
0xf6bb:	mov	qword ptr [rsp + 0x98], 0
0xf6c7:	mov	rax, qword ptr [rax + 0x30]
0xf6cb:	cmp	rax, qword ptr [rsp + 0x270]
0xf6d3:	jae	0xf6f4


0xf694:	movzx	edx, byte ptr [rsi + 0x38]
0xf698:	test	dl, 8
0xf69b:	je	0xfb30


0xf15c:	add	rsp, 0x38
0xf160:	pop	rbx
0xf161:	pop	rbp
0xf162:	pop	r12
0xf164:	pop	r13
0xf166:	pop	r14
0xf168:	pop	r15
0xf16a:	ret	


0xf2c7:	call	0x1ad0


0xf2c0:	xor	ebp, ebp
0xf2c2:	jmp	0xf145


0xf26d:	lea	r14, [rbp + 0x10]
0xf271:	lea	r15, [rbp + 0x18]
0xf275:	mov	rcx, r12
0xf278:	mov	rdi, rbx
0xf27b:	mov	rdx, r15
0xf27e:	mov	rsi, r14
0xf281:	call	0xa880


0xf137:	cmp	qword ptr [r15 + 0x98], 0
0xf13f:	jne	0xf268


0xf210:	movdqu	xmm0, xmmword ptr [rax]
0xf214:	mov	rdi, rbx
0xf217:	mov	edx, dword ptr [rsi + 0xa0]
0xf21d:	lea	rsi, [r12 - 1]
0xf222:	movaps	xmmword ptr [rsp + 0x10], xmm0
0xf227:	mov	rax, qword ptr [rax + 0x10]
0xf22b:	mov	qword ptr [rsp + 0x20], rax
0xf230:	call	0xa9d0


0xf189:	mov	r14, qword ptr [rdx + 0x50]
0xf18d:	lea	rdi, [rsp + 0x10]
0xf192:	mov	rdx, rax
0xf195:	mov	qword ptr [rsp], rdi
0xf199:	mov	rsi, r14
0xf19c:	call	0x9de0


0xe8df:	mov	ebp, dword ptr [rax + 8]
0xe8e2:	test	ebp, 0x3ff00
0xe8e8:	je	0xe930


0xe8a0:	mov	rdi, qword ptr [rsp + 0x48]
0xe8a5:	add	qword ptr [rsp], 1
0xe8aa:	mov	rax, qword ptr [rsp]
0xe8ae:	cmp	rax, qword ptr [rdi]
0xe8b1:	jge	0xeb60


0xde19:	add	rax, 0x10
0xde1d:	mov	byte ptr [rbp - 0xc9], 0
0xde24:	sub	rsp, rax
0xde27:	lea	rax, [rsp + 0xf]
0xde2c:	and	rax, 0xfffffffffffffff0
0xde30:	mov	qword ptr [rbp - 0xc0], rax
0xde37:	mov	rdx, qword ptr [rbp - 0xb8]
0xde3e:	mov	rdi, qword ptr [rbp - 0xc0]
0xde45:	mov	rsi, r13
0xde48:	call	0x1be0


0xe506:	mov	rdi, qword ptr [rbp - 0xb8]
0xe50d:	call	0x1c20


0xdb84:	mov	rbx, qword ptr [rsp + 0xc8]
0xdb8c:	xor	rbx, qword ptr fs:[0x28]
0xdb95:	jne	0xdd4c


0xdcc0:	mov	rax, qword ptr [rsp + 0x60]
0xdcc5:	lea	rsi, [r14*8]
0xdccd:	mov	rdi, qword ptr [rax + 0x10]
0xdcd1:	call	0x1c90


0xd4ec:	cmp	al, 0xdf
0xd4ee:	movzx	edx, byte ptr [rdx + r8 + 1]
0xd4f4:	ja	0xd55e


0xd304:	add	rsp, 0x178
0xd30b:	pop	rbx
0xd30c:	pop	rbp
0xd30d:	pop	r12
0xd30f:	pop	r13
0xd311:	pop	r14
0xd313:	pop	r15
0xd315:	ret	


0xd392:	call	0x1ad0


0xcf4e:	mov	rax, qword ptr [rsp + 0x28]
0xcf53:	mov	rdi, qword ptr [rsp]
0xcf57:	mov	rax, qword ptr [rax]
0xcf5a:	mov	r12, qword ptr [rax + rdi*8]
0xcf5e:	mov	rax, qword ptr [rsp + 8]
0xcf63:	mov	rcx, qword ptr [rax]
0xcf66:	mov	rax, r12
0xcf69:	shl	rax, 4
0xcf6d:	mov	qword ptr [rsp + 0x10], rax
0xcf72:	lea	rsi, [rcx + rax]
0xcf76:	movzx	eax, byte ptr [rsi + 8]
0xcf7a:	cmp	eax, 1
0xcf7d:	mov	edx, eax
0xcf7f:	jne	0xcf10


0x1ba0:	jmp	qword ptr [rip + 0x2192da]


0xc431:	lea	r12, [rip + 0xa6b9]
0xc438:	mov	rcx, qword ptr [r13]
0xc43c:	cmp	qword ptr [r8], rcx
0xc43f:	mov	rax, qword ptr [rdx]
0xc442:	je	0xc559


0xc526:	lea	rdi, [rip + 0xa5d0]
0xc52d:	mov	ecx, 6
0xc532:	mov	rsi, r9
0xc535:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]




0xb4f0:	add	rbx, 1
0xb4f4:	cmp	r10, rbx
0xb4f7:	jle	0xb5d0


0xb50a:	mov	rdx, rax
0xb50d:	shl	rdx, 4
0xb511:	add	rdx, qword ptr [r12]
0xb515:	test	byte ptr [rdx + 8], 8
0xb519:	je	0xb4f0


0xae58:	cmp	byte ptr [rbx + 0x8b], 0
0xae5f:	jne	0xb210


0xadbe:	cmp	byte ptr [rbx + 0x88], 0
0xadc5:	mov	rdi, rbx
0xadc8:	je	0xae48


0xae70:	test	dl, dl
0xae72:	jne	0xb31d


0xad53:	test	dl, dl
0xad55:	jne	0xaf68


0xae00:	mov	rax, qword ptr [rbx]
0xae03:	mov	qword ptr [rbx + 8], rax
0xae07:	jmp	0xad36


0xab6c:	pop	rbx
0xab6d:	ret	


0xab21:	mov	rsi, rdx
0xab24:	mov	edx, dword ptr [rdi + 0xa0]
0xab2a:	shr	ebx, 8
0xab2d:	call	0xa9d0


0xab74:	xor	eax, eax
0xab76:	cmp	byte ptr [rsi], cl
0xab78:	je	0xab10


0xab80:	xor	eax, eax
0xab82:	ret	


0xaaf0:	cmp	cl, 0xa
0xaaf3:	je	0xabb8


0xaade:	cmp	al, 7
0xaae0:	jne	0xab80


0xaa22:	add	rsp, 8
0xaa26:	pop	rbx
0xaa27:	pop	rbp
0xaa28:	ret	


0xaa40:	mov	rax, qword ptr [rdi + 8]
0xaa44:	mov	rcx, qword ptr [rdi + 0x80]
0xaa4b:	movzx	eax, byte ptr [rax + rsi]
0xaa4f:	mov	rdx, rax
0xaa52:	sar	rax, 6
0xaa56:	mov	rcx, qword ptr [rcx + rax*8]
0xaa5a:	mov	eax, 1
0xaa5f:	bt	rcx, rdx
0xaa63:	jb	0xaa22


0xa9f1:	mov	rax, qword ptr [rdi + 0x10]
0xa9f5:	jmp	0xaa0a


0xa8d6:	mov	rax, qword ptr [rax]
0xa8d9:	cmp	rax, 0x3f
0xa8dd:	jg	0xa8b0


0xa8b0:	add	rbx, 1
0xa8b4:	cmp	rbx, qword ptr [r12]
0xa8b8:	jge	0xa960


0xa550:	lea	rdx, [rsi + rcx]
0xa554:	mov	rax, rdx
0xa557:	shr	rax, 0x3f
0xa55b:	add	rax, rdx
0xa55e:	sar	rax, 1
0xa561:	lea	rdx, [rax + rax*4]
0xa565:	mov	r9, rax
0xa568:	cmp	r12, qword ptr [r8 + rdx*8 + 8]
0xa56d:	jg	0xa5d0


0xa5c8:	mov	r9, rcx
0xa5cb:	mov	rcx, rdx
0xa5ce:	nop	
0xa5d0:	lea	rsi, [r9 + 1]
0xa5d4:	mov	rdx, rcx
0xa5d7:	jmp	0xa51d


0xa5b3:	add	rsp, 0x78
0xa5b7:	pop	rbx
0xa5b8:	pop	rbp
0xa5b9:	pop	r12
0xa5bb:	pop	r13
0xa5bd:	pop	r14
0xa5bf:	pop	r15
0xa5c1:	ret	


0xa879:	call	0x1ad0


0xa597:	cmp	rsi, -1
0xa59b:	jne	0xa5e0


0xa4a9:	mov	qword ptr [rbx + r15*8], rdx
0xa4ad:	add	r15, 1
0xa4b1:	cmp	rbp, r15
0xa4b4:	jne	0xa49c


0xa450:	test	rdx, rdx
0xa453:	je	0xa493


0xa296:	mov	esi, 1
0xa29b:	mov	edi, 0x70
0xa2a0:	call	0x1bc0


0xa263:	mov	r11, qword ptr [rax + 0x10]
0xa267:	xor	r9d, r9d
0xa26a:	nop	word ptr [rax + rax]
0xa270:	mov	rbx, qword ptr [r11 + r9*8]
0xa274:	cmp	qword ptr [rbx], rbp
0xa277:	jne	0xa28d


0xa230:	add	rbp, qword ptr [rax]
0xa233:	add	rax, 8
0xa237:	cmp	rcx, rax
0xa23a:	jne	0xa230


0xa000:	mov	esi, 1
0xa005:	mov	edi, 0x70
0xa00a:	call	0x1bc0


0x9fa9:	mov	rbx, qword ptr [rax + 0x10]
0x9fad:	xor	r10d, r10d
0x9fb0:	mov	r9d, ecx
0x9fb3:	jmp	0x9fc1


0x9f70:	add	r12, qword ptr [rax]
0x9f73:	add	rax, 8
0x9f77:	cmp	r10, rax
0x9f7a:	jne	0x9f70


0x9ec0:	mov	rsi, rdx
0x9ec3:	pop	rbx
0x9ec4:	pop	rbp
0x9ec5:	pop	r12
0x9ec7:	pop	r13
0x9ec9:	pop	r14
0x9ecb:	jmp	0x9d50


0x9ec3:	pop	rbx
0x9ec4:	pop	rbp
0x9ec5:	pop	r12
0x9ec7:	pop	r13
0x9ec9:	pop	r14
0x9ecb:	jmp	0x9d50


0x9e07:	mov	r14, qword ptr [rdx + 8]
0x9e0b:	test	r14, r14
0x9e0e:	jle	0x9ec3


0x9d06:	add	rsp, 0x18
0x9d0a:	pop	rbx
0x9d0b:	pop	rbp
0x9d0c:	ret	


0x9d4b:	call	0x1ad0


0x9d10:	lea	rdi, [rsp + 4]
0x9d15:	mov	rsi, rbp
0x9d18:	call	0x9a70


0x9aba:	mov	rdx, qword ptr [rbx + 0xa0]
0x9ac1:	bt	rdx, rax
0x9ac5:	jae	0x9bed


0x9bed:	mov	rdi, qword ptr [rsp + 0x38]
0x9bf2:	xor	rdi, qword ptr fs:[0x28]
0x9bfb:	mov	rax, rbp
0x9bfe:	jne	0x9ca2


0x992b:	add	rsp, 0x20
0x992f:	pop	rbx
0x9930:	ret	


0x9928:	mov	qword ptr [rcx], rax
0x992b:	add	rsp, 0x20
0x992f:	pop	rbx
0x9930:	ret	


0x974b:	lea	rsi, [rcx + r9]
0x974f:	mov	r13, qword ptr [rbp + 0x10]
0x9753:	mov	rdx, qword ptr [r12 + 0x10]
0x9758:	sub	r9, 1
0x975c:	sub	rcx, 1
0x9760:	add	rsi, r11
0x9763:	sub	r11, 1
0x9767:	mov	rax, qword ptr [r13 + r9*8]
0x976c:	mov	r8, qword ptr [rdx + r11*8]
0x9770:	cmp	rax, r8
0x9773:	je	0x9786


0x9870:	add	r13, rax
0x9873:	lea	rsi, [r13*8]
0x987b:	call	0x1c90


0x9288:	add	rdx, rsi
0x928b:	mov	rdi, qword ptr [rdi + 0x10]
0x928f:	lea	rbp, [rdx + rdx]
0x9293:	shl	rdx, 4
0x9297:	mov	rsi, rdx
0x929a:	call	0x1c90


0x9144:	test	rax, rax
0x9147:	je	0x92c0


0x8f00:	lea	r11, [rbx + r10]
0x8f04:	mov	rax, r11
0x8f07:	shr	rax, 0x3f
0x8f0b:	add	rax, r11
0x8f0e:	sar	rax, 1
0x8f11:	lea	r11, [rax + rax*4]
0x8f15:	mov	r14, rax
0x8f18:	cmp	qword ptr [r13 + r11*8 + 8], r8
0x8f1d:	jl	0x90a0


0x9090:	mov	r14, r10
0x9093:	mov	r10, rbp
0x9096:	nop	word ptr cs:[rax + rax]
0x90a0:	lea	rbx, [r14 + 1]
0x90a4:	mov	rbp, r10
0x90a7:	jmp	0x8ece


0x8f52:	mov	rax, r15
0x8f55:	xor	ebp, ebp
0x8f57:	cmp	rbp, rax
0x8f5a:	jge	0x8fb4


0x8f5c:	lea	r11, [rbp + rax]
0x8f61:	mov	r10, r11
0x8f64:	shr	r10, 0x3f
0x8f68:	add	r10, r11
0x8f6b:	mov	r11, qword ptr [rdi + 0xd8]
0x8f72:	sar	r10, 1
0x8f75:	lea	r13, [r10 + r10*4]
0x8f79:	cmp	r12, qword ptr [r11 + r13*8 + 8]
0x8f7e:	jle	0x8faf


0x8fb4:	cmp	r15, rbp
0x8fb7:	jle	0x90e0


0x8e5d:	mov	rax, qword ptr [rsi + 0x10]
0x8e61:	test	rax, rax
0x8e64:	je	0x8e6e


0x8e55:	mov	rax, qword ptr [rsi + 0x20]
0x8e59:	mov	qword ptr [rdx + 0x20], rax
0x8e5d:	mov	rax, qword ptr [rsi + 0x10]
0x8e61:	test	rax, rax
0x8e64:	je	0x8e6e


0x8dc9:	cmp	byte ptr [rax + 0x30], 0x11
0x8dcd:	jne	0x8dbc


0x8d90:	mov	rcx, qword ptr [rax + rdx*8 + 8]
0x8d95:	mov	qword ptr [rax + rdx*8], rcx
0x8d99:	add	rdx, 1
0x8d9d:	cmp	rdx, qword ptr [rdi]
0x8da0:	jl	0x8d90


0x8c28:	cmp	rsi, rcx
0x8c2b:	jb	0x8c18


0x8c12:	jmp	0x8c40


0x8c60:	lea	rax, [rsi + 1]
0x8c64:	ret	


0x8bd2:	mov	eax, 1
0x8bd7:	ret	


0x8bb0:	mov	rcx, qword ptr [rdi + 0x10]
0x8bb4:	mov	r8, qword ptr [rcx + rdx]
0x8bb8:	mov	rcx, qword ptr [rsi + 0x10]
0x8bbc:	mov	rcx, qword ptr [rcx + rdx]
0x8bc0:	sub	rdx, 8
0x8bc4:	cmp	r8, rcx
0x8bc7:	jne	0x8be0


0x8b7b:	cmp	rdx, rcx
0x8b7e:	mov	eax, edx
0x8b80:	jne	0x8b70


0x8944:	mov	rax, rbx
0x8947:	add	rbx, 1
0x894b:	shl	rax, 4
0x894f:	add	rdi, rax
0x8952:	call	0x8340


0x8730:	add	rsp, 0x18
0x8734:	pop	rbx
0x8735:	pop	rbp
0x8736:	pop	r12
0x8738:	pop	r13
0x873a:	pop	r14
0x873c:	pop	r15
0x873e:	ret	


0x8790:	cmp	r9, qword ptr [rsp + 8]
0x8795:	jne	0x87a0


0x867b:	mov	rdx, qword ptr [r14 + 0x10]
0x867f:	lea	rsi, [rdx - 1]
0x8683:	mov	rax, rsi
0x8686:	shl	rax, 4
0x868a:	add	rax, r8
0x868d:	test	byte ptr [rax + 0xa], 4
0x8691:	je	0x8740


0x844c:	add	rsp, 0x18
0x8450:	pop	rbx
0x8451:	pop	rbp
0x8452:	pop	r12
0x8454:	pop	r13
0x8456:	pop	r14
0x8458:	pop	r15
0x845a:	ret	


0x82cf:	lea	esi, [rbp + 1]
0x82d2:	mov	rdi, rbx
0x82d5:	call	0x8130


0x82e0:	mov	rax, qword ptr [rbx + 0xb8]
0x82e7:	mov	rdx, rbp
0x82ea:	xor	esi, esi
0x82ec:	sub	rdx, r12
0x82ef:	shl	rdx, 3
0x82f3:	lea	rdi, [rax + r12*8 + 8]
0x82f8:	call	0x1b60


0x82b4:	xor	eax, eax
0x82b6:	pop	rbx
0x82b7:	pop	rbp
0x82b8:	pop	r12
0x82ba:	ret	


0x7ced:	cmp	r15, rbx
0x7cf0:	jge	0x7e88


0x7bd4:	mov	rbp, qword ptr [r14 + 0x28]
0x7bd8:	add	rbp, r13
0x7bdb:	add	rbp, qword ptr [r14]
0x7bde:	mov	qword ptr [rsp + 0x18], rbp
0x7be3:	mov	rcx, qword ptr [rsp + 8]
0x7be8:	mov	rdx, qword ptr [rsp + 0x10]
0x7bed:	mov	rsi, qword ptr [rsp + 0x18]
0x7bf2:	mov	rdi, qword ptr [rsp + 0x20]
0x7bf7:	call	0x7050


0x7ed9:	mov	eax, dword ptr [r14 + 0x90]
0x7ee0:	test	eax, eax
0x7ee2:	jle	0x8100


0x7b86:	add	rsp, 0xa8
0x7b8d:	pop	rbx
0x7b8e:	pop	rbp
0x7b8f:	pop	r12
0x7b91:	pop	r13
0x7b93:	pop	r14
0x7b95:	pop	r15
0x7b97:	ret	


0x810a:	call	0x1ad0


0x7a91:	jmp	0x79a9


0x7ab1:	mov	rcx, qword ptr [rbx]
0x7ab4:	add	rcx, rbp
0x7ab7:	add	rcx, rax
0x7aba:	add	rcx, qword ptr [rbx + 0x28]
0x7abe:	movzx	ecx, byte ptr [rcx]
0x7ac1:	movzx	ecx, byte ptr [rdi + rcx]
0x7ac5:	mov	rdi, qword ptr [rbx + 8]
0x7ac9:	add	rdi, rbp
0x7acc:	mov	byte ptr [rdi + rax], cl
0x7acf:	mov	byte ptr [rsi + rax], cl
0x7ad2:	lea	ecx, [rax + 1]
0x7ad5:	cmp	ecx, dword ptr [rbx + 0x90]
0x7adb:	jl	0x7aa0




0x77b0:	lea	rdx, [rsi + rsi]
0x77b4:	shl	rsi, 4
0x77b8:	mov	qword ptr [rdi], rdx
0x77bb:	mov	rdi, rax
0x77be:	call	0x1c90


0x7729:	cmp	qword ptr [rax], rbp
0x772c:	lea	rdx, [rsi*8]
0x7734:	jle	0x7770


0x74f5:	mov	rsi, rbx
0x74f8:	mov	rdi, rbp
0x74fb:	call	r12


0x74b5:	mov	r8, r9
0x74b8:	jmp	0x7230


0x7492:	xor	eax, eax
0x7494:	cmp	r10, r8
0x7497:	je	0x74b0


0x72f1:	mov	ecx, dword ptr [rsp + 0xc]
0x72f5:	test	ecx, ecx
0x72f7:	je	0x72c6


0x72b8:	cmp	dl, 9
0x72bb:	je	0x7410


0x7180:	and	edx, 1
0x7183:	je	0x718f


0x7118:	cmp	cl, 0x5b
0x711b:	je	0x7150


0x7104:	mov	r9, qword ptr [rsi + 0x10]
0x7108:	cmp	dword ptr [r9 + rax*4], -1
0x710d:	je	0x718f


0x6ee6:	test	rdx, rdx
0x6ee9:	je	0x6eba


0x6d01:	call	0x67a0


0x6d25:	mov	dword ptr [rsp + 8], r10d
0x6d2a:	jmp	0x6d01


0x6cd0:	cmp	r10d, 0x2f
0x6cd4:	ja	0x6d2c


0x6c00:	mov	eax, dword ptr [r10]
0x6c03:	cmp	eax, 0x2f
0x6c06:	ja	0x6c4a




0x6620:	add	rsi, 1
0x6624:	movzx	r9d, byte ptr [rsi]
0x6628:	cmp	r9b, 0x30
0x662c:	je	0x6620


0x65b8:	cmp	r8d, 9
0x65bc:	jbe	0x678e


0x65f3:	lea	edx, [rax - 0x30]
0x65f6:	mov	eax, 1
0x65fb:	cmp	edx, 9
0x65fe:	jbe	0x6703


0x66a8:	add	rdi, 1
0x66ac:	movzx	r8d, byte ptr [rdi]
0x66b0:	jmp	0x6510


0x651a:	cmp	dl, 0x30
0x651d:	je	0x6698


0x6014:	pop	rbx
0x6015:	mov	dword ptr [rip + 0x215039], 1
0x601f:	pop	rbp
0x6020:	pop	r12
0x6022:	ret	


0x6005:	mov	rdi, r12
0x6008:	call	0x19d0








0x400d:	add	rsp, 0xe8
0x4014:	pop	rbx
0x4015:	pop	rbp
0x4016:	pop	r12
0x4018:	pop	r13
0x401a:	ret	


0x40aa:	call	0x1ad0




0x228b:	sub	eax, 0x30
0x228e:	cmp	eax, 9
0x2291:	jbe	0x2280


0x2222:	ret	


0x21fb:	xor	eax, eax
0x21fd:	cmp	cl, 0x2d
0x2200:	sete	al
0x2203:	add	rax, rdx
0x2206:	movzx	edx, byte ptr [rax]
0x2209:	jmp	0x221b






0x1dd0:	jmp	qword ptr [rip + 0x21920a]


0x151cf:	mov	rdi, rbp
0x151d2:	mov	r9, rdx
0x151d5:	mov	r8, rdx
0x151d8:	call	0xf610


0x14f80:	mov	r14, rsi
0x14f83:	xor	r13d, r13d
0x14f86:	jmp	0x14ed8


0x14ecb:	xor	r13d, r13d
0x14ece:	test	rbx, rbx
0x14ed1:	mov	qword ptr [rsp + 8], rsi
0x14ed6:	jne	0x14f20


0x14a40:	test	r8, r8
0x14a43:	js	0x14d28


0x14a37:	cmp	rcx, r8
0x14a3a:	jg	0x14cb0


0x14a57:	movzx	eax, byte ptr [r15 + 0x38]
0x14a5c:	mov	r13d, eax
0x14a5f:	shr	r13b, 5
0x14a63:	mov	edi, r13d
0x14a66:	and	edi, 3
0x14a69:	cmp	r8, rbx
0x14a6c:	mov	dword ptr [rsp + 0x2c], edi
0x14a70:	jle	0x14a81


0x13b1c:	mov	rdi, rbx
0x13b1f:	call	0x8920




0x1196e:	cmp	byte ptr [rbx + 0x8b], 0
0x11975:	jne	0x11e00


0x11a10:	mov	byte ptr [rbp + 8], 0x24
0x11a14:	mov	eax, 1
0x11a19:	jmp	0x118b4


0x1dc0:	jmp	qword ptr [rip + 0x2191ca]


0x119fa:	mov	rax, qword ptr [rbx + 0x10]
0x119fe:	mov	byte ptr [rbp + 8], 1
0x11a02:	mov	ecx, dword ptr [rax + r14*4]
0x11a06:	jmp	0x11876


0x11940:	or	r13d, 0x20
0x11944:	mov	byte ptr [rdi + 8], 1
0x11948:	mov	eax, 1
0x1194d:	mov	byte ptr [rdi + 0xa], r13b
0x11951:	jmp	0x118b4


0x11868:	cmp	r12b, 0x5c
0x1186c:	je	0x11960


0x11692:	cmp	al, 0x1e
0x11694:	movsxd	r14, r8d
0x11697:	je	0x11700


0x115f1:	mov	rcx, qword ptr [rsp + 0x18]
0x115f6:	xor	rcx, qword ptr fs:[0x28]
0x115ff:	jne	0x117e8


0x11635:	test	r9b, r9b
0x11638:	je	0x11782


0x1163e:	movzx	eax, byte ptr [rbp]
0x11642:	mov	dword ptr [rbx], 0
0x11648:	mov	byte ptr [rbx + 8], al
0x1164b:	xor	eax, eax
0x1164d:	jmp	0x115f1


0x10def:	add	rsp, 0xa8
0x10df6:	pop	rbx
0x10df7:	pop	rbp
0x10df8:	pop	r12
0x10dfa:	pop	r13
0x10dfc:	pop	r14
0x10dfe:	pop	r15
0x10e00:	ret	


0x1158b:	call	0x1ad0


0x10ec5:	lea	rax, [rbx + rdx]
0x10ec9:	mov	rcx, rax
0x10ecc:	shr	rcx, 0x3f
0x10ed0:	add	rcx, rax
0x10ed3:	mov	rax, qword ptr [rsp + 8]
0x10ed8:	sar	rcx, 1
0x10edb:	mov	rdi, qword ptr [rax + 0xd8]
0x10ee2:	lea	rax, [rcx + rcx*4]
0x10ee6:	cmp	rbp, qword ptr [rdi + rax*8 + 8]
0x10eeb:	jle	0x10f1e


0x10f23:	cmp	rsi, rbx
0x10f26:	jle	0x11020


0xf6d5:	mov	rcx, qword ptr [rsp + 0x270]
0xf6dd:	lea	rdx, [rcx - 1]
0xf6e1:	sub	rdx, rax
0xf6e4:	sub	qword ptr [rsp + 0x270], rdx
0xf6ec:	mov	qword ptr [rsp + 0x98], rdx
0xf6f4:	mov	rsi, qword ptr [rsp + 0x48]
0xf6f9:	cmp	qword ptr [rsi + 0x10], 0
0xf6fe:	je	0x10590


0xf6f4:	mov	rsi, qword ptr [rsp + 0x48]
0xf6f9:	cmp	qword ptr [rsi + 0x10], 0
0xf6fe:	je	0x10590


0xfb30:	mov	qword ptr [rsp + 0x68], 0
0xfb39:	jmp	0xf6b6


0xf6a1:	cmp	rbp, r8
0xf6a4:	je	0xfb30


0xe930:	mov	rdi, qword ptr [r14 + 0xc8]
0xe937:	mov	rax, qword ptr [r14 + 0x98]
0xe93e:	xor	ecx, ecx
0xe940:	mov	r10, qword ptr [r14 + 8]
0xe944:	mov	r9, qword ptr [rsp + 8]
0xe949:	mov	qword ptr [rsp + 0x70], rdi
0xe94e:	mov	qword ptr [rsp + 0x50], rax
0xe953:	cmp	rcx, rdi
0xe956:	jge	0xe9ab


0xe8ea:	mov	edx, dword ptr [r14 + 0xa0]
0xe8f1:	mov	rsi, qword ptr [rsp + 8]
0xe8f6:	mov	rdi, r14
0xe8f9:	call	0xa9d0


0xdb9b:	add	rsp, 0xd8
0xdba2:	pop	rbx
0xdba3:	pop	rbp
0xdba4:	pop	r12
0xdba6:	pop	r13
0xdba8:	pop	r14
0xdbaa:	pop	r15
0xdbac:	ret	


0xdd4c:	call	0x1ad0


0xd4f6:	add	edx, -0x80
0xd4f9:	mov	ebp, 2
0xd4fe:	cmp	dl, 0x3f
0xd501:	ja	0xd490


0xd55e:	cmp	al, 0xef
0xd560:	ja	0xd5a8


0xcf81:	movzx	r13d, byte ptr [rsi]
0xcf85:	test	ebx, ebx
0xcf87:	mov	byte ptr [rbp + r13], 1
0xcf8d:	je	0xcfa0


0xcf10:	cmp	eax, 3
0xcf13:	je	0xd206




0xc535:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc537:	mov	rcx, qword ptr [r13]
0xc53b:	seta	al
0xc53e:	sbb	al, 0
0xc540:	test	al, al
0xc542:	lea	rax, [rip + 0xa5a8]
0xc549:	cmove	r12, rax
0xc54d:	cmp	qword ptr [r8], rcx
0xc550:	mov	rax, qword ptr [rdx]
0xc553:	jne	0xc448


0xb5d0:	xor	r9d, r9d
0xb5d3:	test	r10, r10
0xb5d6:	lea	r11, [rsp + 0x30]
0xb5db:	jle	0xb62c


0xb51b:	lea	r9, [rax + rax*2]
0xb51f:	mov	rcx, qword ptr [r12 + 0x28]
0xb524:	lea	r11, [rbp + 0x10]
0xb528:	mov	rdi, r10
0xb52b:	shl	r9, 3
0xb52f:	mov	rsi, r11
0xb532:	add	rcx, r9
0xb535:	mov	r15, qword ptr [rcx + 0x10]
0xb539:	mov	qword ptr [rsp + 8], rcx
0xb53e:	mov	r8, qword ptr [r15]
0xb541:	mov	rdx, r8
0xb544:	mov	qword ptr [rsp], r8
0xb548:	call	0x8bf0


0xae65:	mov	qword ptr [rbx + 0x30], rax
0xae69:	jmp	0xadd3


0xb210:	cmp	byte ptr [rbx + 0x88], 0
0xb217:	jne	0xb310


0xae48:	call	0x7940


0xadca:	call	0x7b10


0xae78:	movsxd	rdx, dword ptr [rbx + 0x90]
0xae7f:	mov	qword ptr [rbx + 0x30], 0
0xae87:	mov	r11, qword ptr [rbx + 0x28]
0xae8b:	cmp	edx, 1
0xae8e:	jle	0xb278


0xb31d:	mov	rdx, qword ptr [rbx + 0x50]
0xb321:	mov	byte ptr [rbx + 0x8c], 0
0xb328:	add	rdx, rbp
0xb32b:	sub	rdx, r15
0xb32e:	mov	qword ptr [rbx + 0x58], rdx
0xb332:	mov	rdx, qword ptr [rbx + 0x60]
0xb336:	add	rdx, rbp
0xb339:	sub	rdx, r15
0xb33c:	mov	qword ptr [rbx + 0x68], rdx
0xb340:	jmp	0xae78


0xad5b:	lea	rsi, [rbp - 1]
0xad5f:	mov	edx, r10d
0xad62:	mov	rdi, rbx
0xad65:	mov	qword ptr [rsp], r8
0xad69:	call	0xa9d0


0xaf68:	mov	r14, qword ptr [rbx + 0x18]
0xaf6c:	mov	rcx, r8
0xaf6f:	xor	esi, esi
0xaf71:	jmp	0xaf83


0xab7a:	ret	


0xabb8:	mov	rcx, qword ptr [rdi + 0x98]
0xabbf:	xor	eax, eax
0xabc1:	test	byte ptr [rcx + 0xd8], 0x40
0xabc8:	jne	0xab10


0xaaf9:	test	cl, cl
0xaafb:	jne	0xab10


0xaae6:	xor	eax, eax
0xaae8:	test	cl, cl
0xaaea:	js	0xab7a


0xaa65:	xor	eax, eax
0xaa67:	cmp	dl, 0xa
0xaa6a:	jne	0xaa22


0xaa0a:	mov	ebx, dword ptr [rax + rsi*4]
0xaa0d:	cmp	ebx, -1
0xaa10:	je	0xaa00


0xa8df:	mov	rsi, qword ptr [r13 + 0xa0]
0xa8e6:	bt	rsi, rax
0xa8ea:	jae	0xa8b0


0xa56f:	mov	rcx, rax
0xa572:	cmp	rsi, rcx
0xa575:	jl	0xa550


0xa5d0:	lea	rsi, [r9 + 1]
0xa5d4:	mov	rdx, rcx
0xa5d7:	jmp	0xa51d


0xa51d:	cmp	rsi, rdx
0xa520:	jge	0xa577


0xa5e0:	lea	rax, [rbp + 0x10]
0xa5e4:	mov	r13, qword ptr [rbx + 0x98]
0xa5eb:	mov	qword ptr [rsp], rax
0xa5ef:	lea	rax, [rsp + 0x4c]
0xa5f4:	mov	qword ptr [rsp + 0x38], rax
0xa5f9:	lea	rax, [rsp + 0x50]
0xa5fe:	mov	qword ptr [rsp + 0x10], rax
0xa603:	mov	rax, qword ptr [rsp + 0x30]
0xa608:	lea	r15, [rcx + rax]
0xa60c:	jmp	0xa6e8


0xa493:	add	r15, 1
0xa497:	cmp	rbp, r15
0xa49a:	je	0xa4b6


0xa455:	add	rdx, 8
0xa459:	add	rsi, 8
0xa45d:	mov	rdi, r13
0xa460:	call	0x9de0


0xa279:	lea	rdi, [rbx + 8]
0xa27d:	mov	rsi, r14
0xa280:	call	0x8b90


0xa28d:	add	r9, 1
0xa291:	cmp	r10, r9
0xa294:	jne	0xa270


0x9fc1:	mov	r14, qword ptr [rbx + r10*8]
0x9fc5:	cmp	qword ptr [r14], r12
0x9fc8:	jne	0x9fb8


0x9e14:	mov	r12, rdi
0x9e17:	lea	rdi, [r13 + r14]
0x9e1c:	mov	rbx, rdx
0x9e1f:	mov	rbp, rsi
0x9e22:	mov	qword ptr [r12], rdi
0x9e26:	shl	rdi, 3
0x9e2a:	call	0x1c20


0x9acb:	lea	rax, [rbx + 0x70]
0x9acf:	lea	r14, [rsp + 0x20]
0x9ad4:	sub	rbx, -0x80
0x9ad8:	xor	ecx, ecx
0x9ada:	xor	edx, edx
0x9adc:	mov	rsi, rbx
0x9adf:	mov	r15, rax
0x9ae2:	mov	r8, r14
0x9ae5:	mov	rdi, rax
0x9ae8:	mov	byte ptr [rsp + 0x28], 8
0x9aed:	mov	qword ptr [rsp + 8], rax
0x9af2:	call	0x98b0


0x9c04:	add	rsp, 0x48
0x9c08:	pop	rbx
0x9c09:	pop	rbp
0x9c0a:	pop	r12
0x9c0c:	pop	r13
0x9c0e:	pop	r14
0x9c10:	pop	r15
0x9c12:	ret	


0x9ca2:	call	0x1ad0


0x9786:	test	rcx, rcx
0x9789:	jns	0x979a


0x9775:	jge	0x97d0


0x92c0:	mov	qword ptr [rbx + 8], rdx
0x92c4:	mov	rax, qword ptr [r12 + 8]
0x92c9:	mov	rdi, qword ptr [rbx + 0x10]
0x92cd:	mov	rsi, qword ptr [r12 + 0x10]
0x92d2:	lea	rdx, [rax*8]
0x92da:	call	0x1be0


0x914d:	lea	rbp, [rax + rdx*2]
0x9151:	sub	rdx, 1
0x9155:	sub	rax, 1
0x9159:	mov	rdi, rdx
0x915c:	not	rdi
0x915f:	test	rdi, rdi
0x9162:	jns	0x91a0


0x90a0:	lea	rbx, [r14 + 1]
0x90a4:	mov	rbp, r10
0x90a7:	jmp	0x8ece


0x8f23:	mov	r10, rax
0x8f26:	cmp	rbx, r10
0x8f29:	jl	0x8f00


0x8ece:	cmp	rbx, rbp
0x8ed1:	jge	0x8f2b


0x8faf:	cmp	rbp, r10
0x8fb2:	jl	0x8f88


0x8f80:	jmp	0x90b0


0x90e0:	mov	rbp, -1
0x90e7:	jmp	0x8fdc


0x8fbd:	mov	r10, qword ptr [rdi + 0xd8]
0x8fc4:	lea	rax, [rbp + rbp*4]
0x8fc9:	lea	rax, [r10 + rax*8]
0x8fcd:	cmp	r12, qword ptr [rax + 8]
0x8fd1:	mov	rax, -1
0x8fd8:	cmovne	rbp, rax
0x8fdc:	cmp	qword ptr [rsi], 0
0x8fe0:	jle	0x9102


0x8e6e:	xor	eax, eax
0x8e70:	ret	


0x8e66:	mov	rdx, qword ptr [rsi + 0x20]
0x8e6a:	mov	qword ptr [rax + 0x20], rdx
0x8e6e:	xor	eax, eax
0x8e70:	ret	


0x8dcf:	mov	rcx, qword ptr [rax + 0x28]
0x8dd3:	mov	rax, qword ptr [rax + 8]
0x8dd7:	test	rax, rax
0x8dda:	mov	qword ptr [rsi + 8], rax
0x8dde:	je	0x8de3


0x8c18:	lea	rax, [rsi + rcx]
0x8c1c:	shr	rax, 1
0x8c1f:	cmp	qword ptr [r8 + rax*8], rdx
0x8c23:	jl	0x8c50


0x8c40:	mov	rax, rcx
0x8c43:	mov	rcx, rdi
0x8c46:	nop	word ptr cs:[rax + rax]
0x8c50:	lea	rsi, [rax + 1]
0x8c54:	mov	rdi, rcx
0x8c57:	jmp	0x8c00


0x8bc9:	sub	rax, 1
0x8bcd:	test	rax, rax
0x8bd0:	jns	0x8bb0


0x8be0:	xor	eax, eax
0x8be2:	ret	


0x8b82:	ret	


0x8b70:	add	rdx, 1
0x8b74:	cmp	dword ptr [rsi + rdx*4 - 4], -1
0x8b79:	jne	0x8b8d


0x8797:	cmp	r9, r13
0x879a:	jne	0x885c


0x87a0:	mov	eax, dword ptr [rax + 8]
0x87a3:	mov	rsi, r15
0x87a6:	mov	rdi, r14
0x87a9:	shr	eax, 8
0x87ac:	and	eax, 0x3ff
0x87b1:	or	ebp, eax
0x87b3:	mov	edx, ebp
0x87b5:	call	0x8560


0x8740:	mov	edx, ebp
0x8742:	mov	rsi, r15
0x8745:	mov	rdi, r14
0x8748:	call	0x8560


0x8697:	test	rsi, rsi
0x869a:	jle	0x8740


0x1b60:	jmp	qword ptr [rip + 0x2192fa]


0x7cf6:	lea	rax, [rdi + 0x20]
0x7cfa:	mov	qword ptr [rsp + 8], rax
0x7cff:	lea	rax, [rsp + 0x44]
0x7d04:	mov	qword ptr [rsp + 0x30], rax
0x7d09:	lea	rax, [rsp + 0x48]
0x7d0e:	mov	qword ptr [rsp + 0x38], rax
0x7d13:	lea	rax, [rsp + 0x50]
0x7d18:	mov	qword ptr [rsp + 0x28], rax
0x7d1d:	nop	dword ptr [rax]
0x7d20:	mov	rbp, qword ptr [r14 + 0x28]
0x7d24:	mov	r13, r15
0x7d27:	add	rbp, r15
0x7d2a:	add	rbp, qword ptr [r14]
0x7d2d:	movzx	r12d, byte ptr [rbp]
0x7d32:	test	r12b, 0x80
0x7d36:	jne	0x7d4a


0x7e88:	mov	qword ptr [r14 + 0x30], r15
0x7e8c:	mov	qword ptr [r14 + 0x38], r15
0x7e90:	xor	eax, eax
0x7e92:	jmp	0x7b6f


0x8100:	lea	rcx, [rsp + 0x50]
0x8105:	jmp	0x7f1b


0x7ee8:	mov	rdi, qword ptr [r14 + 0x28]
0x7eec:	lea	r11d, [rax - 1]
0x7ef0:	lea	rcx, [rsp + 0x50]
0x7ef5:	xor	eax, eax
0x7ef7:	add	rdi, r13
0x7efa:	add	rdi, qword ptr [r14]
0x7efd:	jmp	0x7f0a


0x79a9:	mov	rcx, r14
0x79ac:	mov	rdi, r13
0x79af:	call	0x7050


0x7aa0:	add	rax, 1
0x7aa4:	cmp	rdx, rax
0x7aa7:	je	0x79a9


0x7add:	jmp	0x79a9


0x7770:	mov	rcx, qword ptr [rax + rdx - 8]
0x7775:	cmp	rbp, rcx
0x7778:	jge	0x7753


0x7736:	test	rsi, rsi
0x7739:	jle	0x7753


0x74b0:	mov	esi, 1
0x74b5:	mov	r8, r9
0x74b8:	jmp	0x7230


0x7499:	ret	


0x72c6:	add	rbx, 1
0x72ca:	cmp	qword ptr [r12 + 8], rbx
0x72cf:	jle	0x73f0


0x72f9:	cmp	qword ptr [rax], r15
0x72fc:	jne	0x72c6


0x7410:	mov	edx, dword ptr [rsp + 8]
0x7414:	test	edx, edx
0x7416:	je	0x72c6


0x72c1:	cmp	dl, 4
0x72c4:	je	0x7318


0x718f:	mov	byte ptr [rdi + 8], 1
0x7193:	mov	eax, 1
0x7198:	ret	


0x7185:	lea	rdx, [rax + 1]
0x7189:	cmp	rdx, qword ptr [rsi + 0x58]
0x718d:	jl	0x71d0


0x7150:	lea	rcx, [rax + 1]
0x7154:	cmp	rcx, qword ptr [rsi + 0x58]
0x7158:	jge	0x71a0


0x711d:	cmp	cl, 0x5d
0x7120:	je	0x71c0


0x6eba:	mov	qword ptr [rsi], rcx
0x6ebd:	imul	rcx, r9
0x6ec1:	mov	rsi, rcx
0x6ec4:	jmp	0x6e20


0x662e:	cmp	cl, r9b
0x6631:	jne	0x6774


0x678e:	mov	eax, 0xffffffff
0x6793:	ret	


0x6703:	ret	


0x6604:	cmp	r8b, 0x30
0x6608:	je	0x6708


0x6510:	cmp	r8b, 0x30
0x6514:	je	0x66a8


0x6698:	add	rsi, 1
0x669c:	movzx	edx, byte ptr [rsi]
0x669f:	jmp	0x651a


0x6523:	movzx	eax, dl
0x6526:	cmp	dl, r8b
0x6529:	lea	ecx, [rax - 0x30]
0x652c:	jne	0x66c8


0x2280:	add	rdx, 1
0x2284:	movsx	eax, byte ptr [rdx]
0x2287:	test	al, al
0x2289:	je	0x22b0


0x2293:	add	rsp, 8
0x2297:	xor	eax, eax
0x2299:	pop	rbx
0x229a:	pop	rbp
0x229b:	ret	


0x221b:	cmp	dl, 0x30
0x221e:	je	0x2210


0x14ed8:	movzx	r8d, r8b
0x14edc:	mov	rdx, r15
0x14edf:	mov	rsi, r14
0x14ee2:	push	r8
0x14ee4:	push	qword ptr [rsp + 0x70]
0x14ee8:	mov	rdi, r12
0x14eeb:	mov	r9, qword ptr [rsp + 0x80]
0x14ef3:	mov	r8, qword ptr [rsp + 0x70]
0x14ef8:	call	0x149f0


0x14f20:	mov	rdi, r15
0x14f23:	mov	dword ptr [rsp + 0x1c], r8d
0x14f28:	mov	qword ptr [rsp + 0x10], r9
0x14f2d:	call	0x1c20


0x14d28:	movzx	eax, byte ptr [r15 + 0x38]
0x14d2d:	xor	r8d, r8d
0x14d30:	mov	r13d, eax
0x14d33:	shr	r13b, 5
0x14d37:	mov	edi, r13d
0x14d3a:	and	edi, 3
0x14d3d:	mov	dword ptr [rsp + 0x2c], edi
0x14d41:	jmp	0x14a81


0x14a49:	test	rax, rax
0x14a4c:	jns	0x14a57


0x14a81:	test	al, 0x10
0x14a83:	jne	0x14c50


0x14a72:	cmp	qword ptr [r15 + 0x20], 0
0x14a77:	je	0x14a81


0x1197b:	movzx	edi, byte ptr [rdx + r14 + 1]
0x11981:	mov	r12d, edi
0x11984:	mov	dword ptr [rsp + 8], edi
0x11988:	cmp	eax, 1
0x1198b:	mov	byte ptr [rbp], r12b
0x1198f:	mov	byte ptr [rbp + 8], 1
0x11993:	jle	0x11de0


0x11e00:	cmp	eax, 1
0x11e03:	jle	0x11e34


0x118b4:	mov	rdi, qword ptr [rsp + 0x28]
0x118b9:	xor	rdi, qword ptr fs:[0x28]
0x118c2:	jne	0x11ee8




0x11876:	mov	edi, ecx
0x11878:	mov	qword ptr [rsp + 8], rdx
0x1187d:	mov	dword ptr [rsp], ecx
0x11880:	call	0x1c10


0x11872:	mov	byte ptr [rdi + 8], 1
0x11876:	mov	edi, ecx
0x11878:	mov	qword ptr [rsp + 8], rdx
0x1187d:	mov	dword ptr [rsp], ecx
0x11880:	call	0x1c10


0x11700:	cmp	byte ptr [r10 + 0x8b], 0
0x11708:	je	0x11699


0x11699:	mov	rdx, qword ptr [r10 + 8]
0x1169d:	lea	rax, [r11 + 1]
0x116a1:	mov	qword ptr [r10 + 0x48], rax
0x116a5:	movzx	r9d, byte ptr [rdx + r11]
0x116aa:	cmp	rax, r12
0x116ad:	jge	0x11778


0x11605:	add	rsp, 0x20
0x11609:	pop	rbx
0x1160a:	pop	rbp
0x1160b:	pop	r12
0x1160d:	pop	r13
0x1160f:	pop	r14
0x11611:	ret	


0x117e8:	call	0x1ad0


0x11782:	mov	rdi, rsp
0x11785:	mov	rdx, r8
0x11788:	mov	rsi, r10
0x1178b:	call	0x70e0


0x10f1e:	cmp	rbx, rcx
0x10f21:	jl	0x10ef8


0x10eed:	jmp	0x11027


0x11020:	xor	eax, eax
0x11022:	jmp	0x10dd8


0x10f2c:	lea	rax, [rbx + rbx*4]
0x10f30:	lea	rsi, [rax*8]
0x10f38:	mov	rax, qword ptr [rsp + 8]
0x10f3d:	mov	qword ptr [rsp + 0x40], rsi
0x10f42:	mov	rax, qword ptr [rax + 0xd8]
0x10f49:	cmp	rbp, qword ptr [rax + rsi + 8]
0x10f4e:	jne	0x11020


0x10590:	mov	dword ptr [rsp + 0x5c], 1
0x10598:	jmp	0x10189


0xf704:	mov	rdi, qword ptr [rsp + 0x38]
0xf709:	mov	rax, qword ptr [rdi + 0x48]
0xf70d:	test	rax, rax
0xf710:	je	0x10590


0xf6aa:	and	edx, 1
0xf6ad:	cmove	rax, rdi
0xf6b1:	mov	qword ptr [rsp + 0x68], rax
0xf6b6:	mov	rax, qword ptr [rsp + 0x48]
0xf6bb:	mov	qword ptr [rsp + 0x98], 0
0xf6c7:	mov	rax, qword ptr [rax + 0x30]
0xf6cb:	cmp	rax, qword ptr [rsp + 0x270]
0xf6d3:	jae	0xf6f4


0xe958:	lea	rax, [rcx + rdi]
0xe95c:	mov	r11, qword ptr [r14 + 0xd8]
0xe963:	mov	rsi, rax
0xe966:	shr	rsi, 0x3f
0xe96a:	add	rsi, rax
0xe96d:	sar	rsi, 1
0xe970:	lea	rax, [rsi + rsi*4]
0xe974:	cmp	r9, qword ptr [r11 + rax*8 + 8]
0xe979:	jle	0xe9a6


0xe9ab:	cmp	qword ptr [rsp + 0x70], rcx
0xe9b0:	jle	0xe9d6


0xd503:	jmp	0xd492


0xd562:	cmp	al, 0xe0
0xd564:	jne	0xd56f


0xd5a8:	cmp	al, 0xf7
0xd5aa:	ja	0xd5c0


0xcfa0:	mov	rax, qword ptr [rsp + 0x30]
0xcfa5:	test	byte ptr [rax + 0x1a], 0x40
0xcfa9:	je	0xcf37


0xcf8f:	call	0x1db0


0xd206:	mov	r13, rbp
0xd209:	xor	r12d, r12d
0xd20c:	mov	qword ptr [rsp + 0x18], 0
0xd215:	mov	rax, qword ptr [rsp + 0x10]
0xd21a:	mov	rsi, qword ptr [rsp + 0x18]
0xd21f:	xor	r14d, r14d
0xd222:	mov	rax, qword ptr [rcx + rax]
0xd226:	mov	r15, qword ptr [rax + rsi]
0xd22a:	nop	word ptr [rax + rax]
0xd230:	bt	r15, r14
0xd234:	jae	0xd255


0xcf19:	cmp	eax, 6
0xcf1c:	je	0xd0a8


0xb62c:	mov	rdi, qword ptr [rsp + 0x30]
0xb631:	call	0x19d0


0xadd3:	mov	qword ptr [rbx + 0x48], 0
0xaddb:	xor	eax, eax
0xaddd:	mov	rcx, qword ptr [rsp + 0x38]
0xade2:	xor	rcx, qword ptr fs:[0x28]
0xadeb:	jne	0xb43a


0xb21d:	mov	rcx, qword ptr [rbx + 0x78]
0xb221:	test	rcx, rcx
0xb224:	je	0xadd3


0xb310:	mov	rdi, rbx
0xb313:	call	0x78d0


0xb278:	mov	rax, qword ptr [rbx]
0xb27b:	mov	rdx, qword ptr [rbx + 0x78]
0xb27f:	add	rax, rbp
0xb282:	test	rdx, rdx
0xb285:	movzx	eax, byte ptr [r11 + rax - 1]
0xb28b:	mov	qword ptr [rbx + 0x38], 0
0xb293:	je	0xb299


0xae94:	cmp	byte ptr [rbx + 0x89], 0
0xae9b:	jne	0xb158


0xaf83:	lea	rdx, [rsi + rcx]
0xaf87:	mov	rax, rdx
0xaf8a:	shr	rax, 0x3f
0xaf8e:	add	rax, rdx
0xaf91:	sar	rax, 1
0xaf94:	mov	rdx, qword ptr [r14 + rax*8]
0xaf98:	mov	r12, rax
0xaf9b:	cmp	rdx, rbp
0xaf9e:	jle	0xaf78


0xabce:	ret	


0xaafd:	mov	rcx, qword ptr [rdi + 0x98]
0xab04:	xor	eax, eax
0xab06:	test	byte ptr [rcx + 0xd8], 0x80
0xab0d:	jne	0xab7a


0xaa6c:	xor	eax, eax
0xaa6e:	cmp	byte ptr [rbp + 0x8d], 0
0xaa75:	setne	al
0xaa78:	add	rsp, 8
0xaa7c:	add	eax, eax
0xaa7e:	pop	rbx
0xaa7f:	pop	rbp
0xaa80:	ret	


0xaa00:	sub	rsi, 1
0xaa04:	cmp	rsi, -1
0xaa08:	je	0xaa30


0xaa12:	cmp	byte ptr [rbp + 0x8e], 0
0xaa19:	jne	0xaa98


0xa8ec:	mov	r8, qword ptr [r15 + 0xe8]
0xa8f3:	cmp	r8, qword ptr [r15 + 0xf0]
0xa8fa:	mov	r9, qword ptr [r15 + 0xf8]
0xa901:	je	0xa978


0xa6e8:	mov	r10, qword ptr [r15]
0xa6eb:	mov	r9, qword ptr [rbp + 8]
0xa6ef:	mov	rsi, qword ptr [rsp]
0xa6f3:	mov	rdx, r10
0xa6f6:	mov	rdi, r9
0xa6f9:	call	0x8bf0


0xa270:	mov	rbx, qword ptr [r11 + r9*8]
0xa274:	cmp	qword ptr [rbx], rbp
0xa277:	jne	0xa28d


0x9fca:	movzx	eax, byte ptr [r14 + 0x68]
0x9fcf:	and	eax, 0xf
0x9fd2:	cmp	eax, r9d
0x9fd5:	jne	0x9fb8


0x9fb8:	add	r10, 1
0x9fbc:	cmp	r10, r11
0x9fbf:	je	0xa000


0x978b:	jmp	0x97a8


0x979a:	mov	r10, qword ptr [rdi + rcx*8]
0x979e:	cmp	r10, r8
0x97a1:	jg	0x9790


0x9777:	sub	r11, 1
0x977b:	js	0x97e0


0x97d0:	sub	r9, 1
0x97d4:	js	0x97e0


0x9164:	test	rax, rax
0x9167:	js	0x91a0


0x91a0:	test	rdx, rdx
0x91a3:	jns	0x9238


0x8f88:	lea	r13, [rbp + r10]
0x8f8d:	mov	rax, r13
0x8f90:	shr	rax, 0x3f
0x8f94:	add	rax, r13
0x8f97:	sar	rax, 1
0x8f9a:	lea	r13, [rax + rax*4]
0x8f9e:	mov	r14, rax
0x8fa1:	cmp	qword ptr [r11 + r13*8 + 8], r12
0x8fa6:	jl	0x90c0


0x90b0:	mov	r14, r10
0x90b3:	mov	r10, rax
0x90b6:	nop	word ptr cs:[rax + rax]
0x90c0:	lea	rbp, [r14 + 1]
0x90c4:	mov	rax, r10
0x90c7:	jmp	0x8f57


0x8fdc:	cmp	qword ptr [rsi], 0
0x8fe0:	jle	0x9102


0x9102:	xor	eax, eax
0x9104:	jmp	0x907e


0x8fe6:	mov	qword ptr [rsp + 0x30], rbp
0x8feb:	mov	qword ptr [rsp + 0x20], r9
0x8ff0:	mov	r13, rdi
0x8ff3:	mov	qword ptr [rsp + 0x18], r8
0x8ff8:	mov	qword ptr [rsp + 0x10], rcx
0x8ffd:	xor	r14d, r14d
0x9000:	mov	qword ptr [rsp + 0x38], rsi
0x9005:	mov	qword ptr [rsp + 0x28], rbx
0x900a:	mov	rbp, rdx
0x900d:	mov	r15, r12
0x9010:	mov	rax, qword ptr [rbp]
0x9014:	mov	rdx, qword ptr [r13 + 0xd8]
0x901b:	mov	rdi, r13
0x901e:	mov	r9, qword ptr [rsp + 0x28]
0x9023:	mov	r8, qword ptr [rsp + 0x18]
0x9028:	mov	rcx, qword ptr [rsp + 0x10]
0x902d:	mov	rsi, qword ptr [rax + r14*8]
0x9031:	lea	rax, [rsi + rsi*4]
0x9035:	lea	rax, [rdx + rax*8]
0x9039:	mov	rdx, qword ptr [rsp + 8]
0x903e:	mov	rax, qword ptr [rax]
0x9041:	shl	rax, 4
0x9045:	add	rax, qword ptr [rdx]
0x9048:	mov	r12, qword ptr [rax]
0x904b:	mov	rdx, r12
0x904e:	call	0x7460


0x8de3:	mov	rax, qword ptr [rdi + 0xe0]
0x8dea:	mov	rdx, qword ptr [rsi + 0x28]
0x8dee:	cmp	rcx, 0x3f
0x8df2:	mov	rdx, qword ptr [rax + rdx*8]
0x8df6:	mov	qword ptr [rax + rcx*8], rdx
0x8dfa:	jg	0x8dbc


0x8de0:	mov	qword ptr [rax], rsi
0x8de3:	mov	rax, qword ptr [rdi + 0xe0]
0x8dea:	mov	rdx, qword ptr [rsi + 0x28]
0x8dee:	cmp	rcx, 0x3f
0x8df2:	mov	rdx, qword ptr [rax + rdx*8]
0x8df6:	mov	qword ptr [rax + rcx*8], rdx
0x8dfa:	jg	0x8dbc


0x8c50:	lea	rsi, [rax + 1]
0x8c54:	mov	rdi, rcx
0x8c57:	jmp	0x8c00


0x8c25:	mov	rcx, rax
0x8c28:	cmp	rsi, rcx
0x8c2b:	jb	0x8c18


0x8c00:	cmp	rsi, rdi
0x8c03:	jae	0x8c2d


0x8b8d:	ret	


0x885c:	mov	rsi, r15
0x885f:	call	0x76b0


0x86a0:	shl	rdx, 4
0x86a4:	sub	r8, rax
0x86a7:	mov	rcx, qword ptr [r14 + 0x20]
0x86ab:	lea	r8, [r8 + rdx - 0x20]
0x86b0:	jmp	0x86ca




0x7d38:	mov	rdi, qword ptr [rsp + 8]
0x7d3d:	call	0x1d90


0x7d4a:	mov	rax, qword ptr [r14 + 0x20]
0x7d4e:	mov	rdi, qword ptr [rsp + 0x30]
0x7d53:	mov	rdx, rbx
0x7d56:	mov	rcx, qword ptr [rsp + 8]
0x7d5b:	sub	rdx, r15
0x7d5e:	mov	rsi, rbp
0x7d61:	mov	qword ptr [rsp + 0x10], rdx
0x7d66:	mov	qword ptr [rsp + 0x48], rax
0x7d6b:	mov	qword ptr [rsp + 0x20], rdi
0x7d70:	call	0x7050


0x7b6f:	mov	rcx, qword ptr [rsp + 0x98]
0x7b77:	xor	rcx, qword ptr fs:[0x28]
0x7b80:	jne	0x810a


0x7f1b:	mov	qword ptr [rsp + 0x18], rcx
0x7f20:	jmp	0x7be3


0x7f0a:	movzx	esi, byte ptr [rdi + rax]
0x7f0e:	cmp	r11, rax
0x7f11:	movzx	esi, byte ptr [rdx + rsi]
0x7f15:	mov	byte ptr [rcx + rax], sil
0x7f19:	jne	0x7eff


0x7aad:	mov	rdi, qword ptr [rbx + 0x78]
0x7ab1:	mov	rcx, qword ptr [rbx]
0x7ab4:	add	rcx, rbp
0x7ab7:	add	rcx, rax
0x7aba:	add	rcx, qword ptr [rbx + 0x28]
0x7abe:	movzx	ecx, byte ptr [rcx]
0x7ac1:	movzx	ecx, byte ptr [rdi + rcx]
0x7ac5:	mov	rdi, qword ptr [rbx + 8]
0x7ac9:	add	rdi, rbp
0x7acc:	mov	byte ptr [rdi + rax], cl
0x7acf:	mov	byte ptr [rsi + rax], cl
0x7ad2:	lea	ecx, [rax + 1]
0x7ad5:	cmp	ecx, dword ptr [rbx + 0x90]
0x7adb:	jl	0x7aa0


0x7753:	mov	qword ptr [rax + rdx], rbp
0x7757:	mov	eax, 1
0x775c:	add	qword ptr [rbx + 8], 1
0x7761:	jmp	0x76de


0x773b:	add	rdx, rax
0x773e:	nop	
0x7740:	mov	rcx, qword ptr [rdx - 8]
0x7744:	sub	rdx, 8
0x7748:	mov	qword ptr [rdx + 8], rcx
0x774c:	cmp	rax, rdx
0x774f:	jne	0x7740


0x73f0:	mov	r15d, dword ptr [rsp + 0x20]
0x73f5:	add	rsp, 0x48
0x73f9:	mov	eax, r15d
0x73fc:	pop	rbx
0x73fd:	sar	eax, 1
0x73ff:	pop	rbp
0x7400:	pop	r12
0x7402:	pop	r13
0x7404:	pop	r14
0x7406:	pop	r15
0x7408:	ret	


0x72fe:	add	rsp, 0x48
0x7302:	mov	eax, 0xffffffff
0x7307:	pop	rbx
0x7308:	pop	rbp
0x7309:	pop	r12
0x730b:	pop	r13
0x730d:	pop	r14
0x730f:	pop	r15
0x7311:	ret	


0x741c:	cmp	qword ptr [rax], r15
0x741f:	jne	0x72c6


0x7318:	cmp	r10, -1
0x731c:	je	0x72c6


0x71d0:	mov	qword ptr [rsi + 0x48], rdx
0x71d4:	movzx	eax, byte ptr [r8 + rax + 1]
0x71da:	mov	byte ptr [rdi + 8], 1
0x71de:	mov	byte ptr [rdi], al
0x71e0:	mov	eax, 1
0x71e5:	ret	


0x715a:	movzx	eax, byte ptr [r8 + rax + 1]
0x7160:	cmp	al, 0x3a
0x7162:	mov	byte ptr [rdi], al
0x7164:	je	0x7200


0x71a0:	mov	byte ptr [rdi + 8], 1
0x71a4:	mov	byte ptr [rdi], 0x5b
0x71a7:	mov	eax, 1
0x71ac:	ret	


0x71c0:	mov	byte ptr [rdi + 8], 0x15
0x71c4:	mov	eax, 1
0x71c9:	ret	


0x7126:	cmp	cl, 0x5e
0x7129:	je	0x71b0


0x6637:	cmp	r8d, 9
0x663b:	lea	edx, [rax - 0x30]
0x663e:	ja	0x6661


0x6774:	movzx	eax, r9b
0x6778:	lea	edx, [rax - 0x30]
0x677b:	jmp	0x6720


0x66b8:	add	rsi, 1
0x66bc:	movzx	edx, byte ptr [rsi]
0x66bf:	jmp	0x65c8


0x65d1:	sub	edx, 0x30
0x65d4:	xor	r9d, r9d
0x65d7:	cmp	edx, 9
0x65da:	setbe	r9b
0x65de:	mov	eax, r9d
0x65e1:	neg	eax
0x65e3:	ret	


0x6708:	add	rdi, 1
0x670c:	movzx	r8d, byte ptr [rdi]
0x6710:	jmp	0x6604


0x660e:	sub	r8d, 0x30
0x6612:	xor	eax, eax
0x6614:	cmp	r8d, 9
0x6618:	setbe	al
0x661b:	ret	


0x6532:	cmp	ecx, 9
0x6535:	ja	0x6760


0x66c8:	movzx	eax, r8b
0x66cc:	sub	eax, 0x30
0x66cf:	cmp	eax, 9
0x66d2:	ja	0x6561


0x22b0:	lea	rdi, [rbx + 8]
0x22b4:	mov	rsi, rbp
0x22b7:	mov	edx, 0xa
0x22bc:	call	0x1d40


0x2210:	add	rax, 1
0x2214:	movzx	edx, byte ptr [rax]
0x2217:	test	dl, dl
0x2219:	je	0x2238


0x2220:	xor	eax, eax
0x2222:	ret	


0x14a4e:	cmp	rbx, r8
0x14a51:	jle	0x14d28


0x14a89:	test	r12, r12
0x14a8c:	je	0x14c50


0x14c50:	mov	edi, 0x10
0x14c55:	mov	r14d, 1
0x14c5b:	mov	r13d, 1
0x14c61:	xor	r12d, r12d
0x14c64:	jmp	0x14aaf


0x14a79:	test	al, 8
0x14a7b:	je	0x14c70


0x11de0:	call	0x1dc0


0x11999:	mov	rax, qword ptr [rbx + 0x10]
0x1199d:	mov	r8d, dword ptr [rax + rsi*4]
0x119a1:	mov	edi, r8d
0x119a4:	mov	dword ptr [rsp], r8d
0x119a8:	call	0x1c10


0x11e34:	cmp	byte ptr [rbx + 0x8c], 0
0x11e3b:	mov	rcx, qword ptr [rbx]
0x11e3e:	mov	rdi, qword ptr [rbx + 0x28]
0x11e42:	je	0x11e88


0x11e05:	mov	rcx, qword ptr [rbx + 0x10]
0x11e09:	lea	rdi, [rsi*4]
0x11e11:	mov	r8d, dword ptr [rcx + rsi*4]
0x11e15:	cmp	r8d, -1
0x11e19:	je	0x11ecf


0x1c10:	jmp	qword ptr [rip + 0x2192a2]


0x1170a:	cmp	byte ptr [r10 + 0x8c], 0
0x11712:	je	0x117a8


0x116b3:	cmp	r13b, r9b
0x116b6:	jne	0x11670


0x10ef8:	lea	rdx, [rbx + rcx]
0x10efc:	mov	rax, rdx
0x10eff:	shr	rax, 0x3f
0x10f03:	add	rax, rdx
0x10f06:	sar	rax, 1
0x10f09:	lea	rdx, [rax + rax*4]
0x10f0d:	mov	r8, rax
0x10f10:	cmp	rbp, qword ptr [rdi + rdx*8 + 8]
0x10f15:	jg	0x11030


0x11027:	mov	r8, rcx
0x1102a:	mov	rcx, rdx
0x1102d:	nop	dword ptr [rax]
0x11030:	lea	rbx, [r8 + 1]
0x11034:	mov	rdx, rcx
0x11037:	jmp	0x10ec0


0x10f54:	cmp	rbx, -1
0x10f58:	je	0x11020


0x10189:	mov	rsi, qword ptr [rsp + 0x228]
0x10191:	xor	rsi, qword ptr fs:[0x28]
0x1019a:	mov	eax, dword ptr [rsp + 0x5c]
0x1019e:	jne	0x10d3b


0xf716:	mov	rdx, qword ptr [rdi + 0x50]
0xf71a:	test	rdx, rdx
0xf71d:	je	0x10590


0xe9a6:	cmp	rsi, rcx
0xe9a9:	jg	0xe980


0xe97b:	jmp	0xeb48


0xe9d6:	mov	rax, qword ptr [rsp + 0x50]
0xe9db:	cmp	qword ptr [r14 + 0xe8], 0
0xe9e3:	mov	rdx, qword ptr [rax]
0xe9e6:	mov	rax, qword ptr [rdx + rbx]
0xe9ea:	mov	qword ptr [rsp + 0x58], rax
0xe9ef:	jle	0xebab


0xe9b2:	mov	rdx, qword ptr [r14 + 0xd8]
0xe9b9:	lea	rax, [rcx + rcx*4]
0xe9bd:	mov	rdi, qword ptr [rsp + 8]
0xe9c2:	lea	rax, [rdx + rax*8]
0xe9c6:	cmp	qword ptr [rax + 8], rdi
0xe9ca:	jne	0xe9d6


0xd492:	add	rsp, 8
0xd496:	mov	eax, ebp
0xd498:	pop	rbx
0xd499:	pop	rbp
0xd49a:	pop	r12
0xd49c:	pop	r13
0xd49e:	ret	


0xd566:	cmp	dl, 0x9f
0xd569:	jbe	0xd490


0xd56f:	mov	ebp, 3
0xd574:	movsxd	rdi, ebp
0xd577:	add	r8, rdi
0xd57a:	cmp	rcx, r8
0xd57d:	jl	0xd490


0xd5ac:	cmp	al, 0xf0
0xd5ae:	jne	0xd5b9


0xd5c0:	cmp	al, 0xfb
0xd5c2:	ja	0xd5d8


0xcf37:	mov	rdi, qword ptr [rsp + 0x20]
0xcf3c:	add	qword ptr [rsp], 1
0xcf41:	mov	rax, qword ptr [rsp]
0xcf45:	cmp	rax, qword ptr [rdi]
0xcf48:	jge	0xd2ed


0xcfab:	mov	rsi, qword ptr [rsp + 8]
0xcfb0:	cmp	dword ptr [rsi + 0xb4], 1
0xcfb7:	jle	0xcf37


0x1db0:	jmp	qword ptr [rip + 0x2191d2]


0xd236:	test	ebx, ebx
0xd238:	mov	byte ptr [r13 + r14], 1
0xd23e:	je	0xd255


0xd255:	add	r14, 1
0xd259:	cmp	r14, 0x40
0xd25d:	jne	0xd230


0xd0a8:	mov	rax, qword ptr [rsp + 8]
0xd0ad:	mov	r12, qword ptr [rsi]
0xd0b0:	cmp	dword ptr [rax + 0xb4], 1
0xd0b7:	jle	0xd0dd


0xcf22:	and	edx, 0xfffffffd
0xcf25:	cmp	dl, 5
0xcf28:	je	0xd324


0xadf1:	add	rsp, 0x48
0xadf5:	pop	rbx
0xadf6:	pop	rbp
0xadf7:	pop	r12
0xadf9:	pop	r13
0xadfb:	pop	r14
0xadfd:	pop	r15
0xadff:	ret	


0xb43a:	call	0x1ad0


0xb22a:	cmp	qword ptr [rbx + 0x40], rax
0xb22e:	mov	rdx, qword ptr [rbx + 0x30]
0xb232:	cmovle	rax, qword ptr [rbx + 0x40]
0xb237:	cmp	rax, rdx
0xb23a:	jg	0xb248


0xb299:	mov	rcx, qword ptr [rbx + 0x80]
0xb2a0:	movzx	edx, al
0xb2a3:	sar	rdx, 6
0xb2a7:	mov	rcx, qword ptr [rcx + rdx*8]
0xb2ab:	mov	edx, 1
0xb2b0:	bt	rcx, rax
0xb2b4:	jb	0xb2d0


0xb295:	movzx	eax, byte ptr [rdx + rax]
0xb299:	mov	rcx, qword ptr [rbx + 0x80]
0xb2a0:	movzx	edx, al
0xb2a3:	sar	rdx, 6
0xb2a7:	mov	rcx, qword ptr [rcx + rdx*8]
0xb2ab:	mov	edx, 1
0xb2b0:	bt	rcx, rax
0xb2b4:	jb	0xb2d0


0xaea1:	lea	r14, [r11 + rax]
0xaea5:	cmp	r15, r14
0xaea8:	jle	0xb2ef


0xb158:	mov	rcx, qword ptr [rbx]
0xb15b:	mov	rdi, rbp
0xb15e:	sub	rdi, rdx
0xb161:	mov	rdx, rdi
0xb164:	lea	r12, [rcx + r11]
0xb168:	add	rdx, r12
0xb16b:	lea	rsi, [r12 + rbp - 1]
0xb170:	cmp	rcx, rdx
0xb173:	cmovb	rcx, rdx
0xb177:	cmp	rcx, rsi
0xb17a:	jbe	0xb195


0xaf78:	jge	0xafb3


0xafa0:	mov	rcx, rax
0xafa3:	jmp	0xaf7e


0xaa1b:	xor	eax, eax
0xaa1d:	cmp	ebx, 0xa
0xaa20:	je	0xaa6c


0xaa98:	mov	edi, ebx
0xaa9a:	call	0x1c10


0xa978:	lea	rax, [r8 + r8]
0xa97c:	mov	rsi, r8
0xa97f:	mov	rdi, r9
0xa982:	shl	rsi, 4
0xa986:	mov	qword ptr [rsp + 8], rcx
0xa98b:	mov	qword ptr [rsp + 0x10], rax
0xa990:	call	0x1c90


0xa903:	mov	esi, 0x30
0xa908:	mov	edi, 1
0xa90d:	mov	qword ptr [rsp + 0x10], r9
0xa912:	mov	qword ptr [rsp + 8], r8
0xa917:	mov	qword ptr [rsp + 0x18], rcx
0xa91c:	call	0x1bc0


0x9fd7:	mov	rdi, qword ptr [r14 + 0x50]
0x9fdb:	test	rdi, rdi
0x9fde:	je	0x9fb8


0x97a8:	sub	rsi, 1
0x97ac:	mov	qword ptr [rdi + rsi*8], r8
0x97b0:	sub	r9, 1
0x97b4:	js	0x97e0


0x97a3:	cmp	r10, r8
0x97a6:	je	0x97b0


0x9790:	sub	rcx, 1
0x9794:	cmp	rcx, -1
0x9798:	je	0x97a8


0x97e0:	mov	rcx, qword ptr [rbx + 8]
0x97e4:	mov	rdx, qword ptr [rbp + 8]
0x97e8:	add	rdx, rcx
0x97eb:	add	rdx, qword ptr [r12 + 8]
0x97f0:	lea	rax, [rcx - 1]
0x97f4:	lea	r9, [rdx - 1]
0x97f8:	sub	rdx, rsi
0x97fb:	add	rcx, rdx
0x97fe:	test	rdx, rdx
0x9801:	mov	qword ptr [rbx + 8], rcx
0x9805:	jle	0x984d


0x977d:	mov	r8, qword ptr [rdx + r11*8]
0x9781:	cmp	rax, r8
0x9784:	jne	0x9775


0x97d6:	mov	rax, qword ptr [r13 + r9*8]
0x97db:	jmp	0x9770


0x9169:	mov	rcx, qword ptr [rbx + 0x10]
0x916d:	mov	rsi, qword ptr [r12 + 0x10]
0x9172:	mov	rsi, qword ptr [rsi + rdx*8]
0x9176:	cmp	qword ptr [rcx + rax*8], rsi
0x917a:	je	0x9210


0x91a9:	mov	rcx, qword ptr [rbx + 8]
0x91ad:	mov	rax, qword ptr [r12 + 8]
0x91b2:	lea	r8, [rcx + rax*2 - 1]
0x91b7:	mov	rdx, r8
0x91ba:	sub	rdx, rbp
0x91bd:	add	rdx, 1
0x91c1:	je	0x91fa


0x9238:	mov	rax, qword ptr [rbx + 0x10]
0x923c:	add	rdx, 1
0x9240:	mov	rsi, qword ptr [r12 + 0x10]
0x9245:	sub	rbp, rdx
0x9248:	shl	rdx, 3
0x924c:	lea	rdi, [rax + rbp*8]
0x9250:	call	0x1be0


0x90c0:	lea	rbp, [r14 + 1]
0x90c4:	mov	rax, r10
0x90c7:	jmp	0x8f57


0x8fac:	mov	r10, rax
0x8faf:	cmp	rbp, r10
0x8fb2:	jl	0x8f88


0x8f57:	cmp	rbp, rax
0x8f5a:	jge	0x8fb4


0x907e:	add	rsp, 0x48
0x9082:	pop	rbx
0x9083:	pop	rbp
0x9084:	pop	r12
0x9086:	pop	r13
0x9088:	pop	r14
0x908a:	pop	r15
0x908c:	ret	


0x8dfc:	mov	rax, -2
0x8e03:	rol	rax, cl
0x8e06:	and	qword ptr [rdi + 0xa0], rax
0x8e0d:	jmp	0x8dbc


0x86ca:	cmp	qword ptr [rcx + rsi*8], r15
0x86ce:	jne	0x86b8


0x1d90:	jmp	qword ptr [rip + 0x2191e2]


0x7be3:	mov	rcx, qword ptr [rsp + 8]
0x7be8:	mov	rdx, qword ptr [rsp + 0x10]
0x7bed:	mov	rsi, qword ptr [rsp + 0x18]
0x7bf2:	mov	rdi, qword ptr [rsp + 0x20]
0x7bf7:	call	0x7050


0x7eff:	add	rax, 1
0x7f03:	cmp	qword ptr [rsp + 0x10], rax
0x7f08:	je	0x7f1b


0x7792:	jmp	0x7753


0x7780:	mov	qword ptr [rax + rdx], rcx
0x7784:	sub	rdx, 8
0x7788:	mov	rcx, qword ptr [rax + rdx - 8]
0x778d:	cmp	rcx, rbp
0x7790:	jg	0x7780


0x76de:	add	rsp, 8
0x76e2:	pop	rbx
0x76e3:	pop	rbp
0x76e4:	ret	


0x7751:	xor	edx, edx
0x7753:	mov	qword ptr [rax + rdx], rbp
0x7757:	mov	eax, 1
0x775c:	add	qword ptr [rbx + 8], 1
0x7761:	jmp	0x76de


0x7740:	mov	rcx, qword ptr [rdx - 8]
0x7744:	sub	rdx, 8
0x7748:	mov	qword ptr [rdx + 8], rcx
0x774c:	cmp	rax, rdx
0x774f:	jne	0x7740


0x7425:	add	rsp, 0x48
0x7429:	xor	eax, eax
0x742b:	pop	rbx
0x742c:	pop	rbp
0x742d:	pop	r12
0x742f:	pop	r13
0x7431:	pop	r14
0x7433:	pop	r15
0x7435:	ret	


0x731e:	mov	rax, qword ptr [rsp]
0x7322:	mov	r13, qword ptr [rsp + 0x28]
0x7327:	mov	rdi, rbp
0x732a:	mov	qword ptr [rsp + 0x30], r12
0x732f:	mov	qword ptr [rsp + 0x38], rbx
0x7334:	mov	r12, r10
0x7337:	add	r13, qword ptr [rax + 0xd8]
0x733e:	lea	rax, [rbp + rbp*2]
0x7343:	mov	rbp, r14
0x7346:	mov	r14, rdi
0x7349:	shl	rax, 3
0x734d:	mov	rbx, rax
0x7350:	cmp	qword ptr [r13], r14
0x7354:	jne	0x73c0


0x7200:	and	edx, 4
0x7203:	je	0x71a0


0x716a:	cmp	al, 0x3d
0x716c:	je	0x71f0


0x71b0:	mov	byte ptr [rdi + 8], 0x19
0x71b4:	mov	eax, 1
0x71b9:	ret	


0x712f:	cmp	cl, 0x2d
0x7132:	jne	0x718f


0x6640:	add	rdi, 1
0x6644:	add	rsi, 1
0x6648:	movzx	eax, byte ptr [rsi]
0x664b:	movzx	ecx, byte ptr [rdi]
0x664e:	mov	r9d, eax
0x6651:	lea	edx, [rax - 0x30]
0x6654:	cmp	cl, al
0x6656:	jne	0x6718


0x6661:	xor	r10d, r10d
0x6664:	cmp	edx, 9
0x6667:	ja	0x6760


0x6720:	cmp	r8d, 9
0x6724:	ja	0x6661


0x65c8:	cmp	dl, 0x30
0x65cb:	je	0x66b8


0x653b:	add	rdi, 1
0x653f:	add	rsi, 1
0x6543:	movzx	eax, byte ptr [rsi]
0x6546:	movzx	r8d, byte ptr [rdi]
0x654a:	mov	edx, eax
0x654c:	lea	ecx, [rax - 0x30]
0x654f:	cmp	r8b, al
0x6552:	jne	0x66c8


0x6760:	xor	eax, eax
0x6762:	ret	


0x66d8:	xor	r9d, r9d
0x66db:	nop	dword ptr [rax + rax]
0x66e0:	movzx	eax, byte ptr [rdi + r9 + 1]
0x66e6:	add	r9, 1
0x66ea:	sub	eax, 0x30
0x66ed:	cmp	eax, 9
0x66f0:	jbe	0x66e0


0x6561:	xor	r9d, r9d
0x6564:	cmp	ecx, 9
0x6567:	ja	0x6760


0x1d40:	jmp	qword ptr [rip + 0x21920a]


0x2238:	mov	eax, 1
0x223d:	ret	


0x14a92:	and	eax, 6
0x14a95:	mov	rcx, qword ptr [r15 + 0x30]
0x14a99:	cmp	al, 4
0x14a9b:	je	0x14c30


0x14aaf:	mov	qword ptr [rsp + 0x20], r9
0x14ab4:	mov	qword ptr [rsp + 0x18], rdx
0x14ab9:	mov	qword ptr [rsp + 0x10], rsi
0x14abe:	mov	qword ptr [rsp + 8], r8
0x14ac3:	call	0x1c20


0x14c70:	mov	rdi, r15
0x14c73:	mov	qword ptr [rsp + 0x20], r9
0x14c78:	mov	qword ptr [rsp + 0x18], rdx
0x14c7d:	mov	qword ptr [rsp + 0x10], rsi
0x14c82:	mov	qword ptr [rsp + 8], r8
0x14c87:	call	0x14920


0x11e88:	add	rcx, rsi
0x11e8b:	movzx	edi, byte ptr [rcx + rdi]
0x11e8f:	mov	r12d, edi
0x11e92:	mov	dword ptr [rsp + 8], edi
0x11e96:	jmp	0x11988


0x11e44:	mov	r8, qword ptr [rbx + 0x18]
0x11e48:	add	rcx, rdi
0x11e4b:	add	rcx, qword ptr [r8 + rsi*8]
0x11e4f:	movzx	edi, byte ptr [rcx]
0x11e52:	mov	r12d, edi
0x11e55:	mov	dword ptr [rsp + 8], edi
0x11e59:	and	edi, 0x80
0x11e5f:	jne	0x1197b


0x11ecf:	movzx	eax, byte ptr [rdx + r14 + 1]
0x11ed5:	mov	byte ptr [rbp + 8], 1
0x11ed9:	mov	r12d, eax
0x11edc:	mov	byte ptr [rbp], al
0x11edf:	mov	dword ptr [rsp + 8], eax
0x11ee3:	jmp	0x119a1


0x11e1f:	lea	r9, [r14 + 2]
0x11e23:	cmp	qword ptr [rbx + 0x30], r9
0x11e27:	je	0x11e34




0x117a8:	lea	rax, [r11 + 1]
0x117ac:	add	r11, qword ptr [r10]
0x117af:	mov	rdx, qword ptr [r10 + 0x28]
0x117b3:	mov	qword ptr [r10 + 0x48], rax
0x117b7:	movzx	r9d, byte ptr [r11 + rdx]
0x117bc:	jmp	0x116aa


0x11718:	cmp	r11, qword ptr [r10 + 0x30]
0x1171c:	je	0x1172d


0x116b8:	mov	rdx, qword ptr [r10 + 8]
0x116bc:	cmp	byte ptr [rdx + rax], 0x5d
0x116c0:	jne	0x11670


0x11670:	mov	rax, qword ptr [rbx + 8]
0x11674:	mov	byte ptr [rax + r8], r9b
0x11678:	add	r8, 1
0x1167c:	cmp	r8, 0x20
0x11680:	je	0x11778


0x10f1b:	mov	rcx, rax
0x10f1e:	cmp	rbx, rcx
0x10f21:	jl	0x10ef8


0x11030:	lea	rbx, [r8 + 1]
0x11034:	mov	rdx, rcx
0x11037:	jmp	0x10ec0


0x10ec0:	cmp	rbx, rdx
0x10ec3:	jge	0x10f23


0x10f5e:	mov	rax, qword ptr [rsp + 8]
0x10f63:	mov	qword ptr [rsp + 0x60], 0
0x10f6c:	mov	r12, qword ptr [rax + 0x98]
0x10f73:	mov	rax, qword ptr [rsp + 0x10]
0x10f78:	cmp	qword ptr [rax + 8], 0
0x10f7d:	jle	0x11020


0x101a4:	add	rsp, 0x238
0x101ab:	pop	rbx
0x101ac:	pop	rbp
0x101ad:	pop	r12
0x101af:	pop	r13
0x101b1:	pop	r14
0x101b3:	pop	r15
0x101b5:	ret	


0x10d3b:	call	0x1ad0


0xf723:	mov	rcx, qword ptr [rdi + 0x58]
0xf727:	test	rcx, rcx
0xf72a:	je	0x10590


0xe980:	lea	rdx, [rsi + rcx]
0xe984:	mov	rax, rdx
0xe987:	shr	rax, 0x3f
0xe98b:	add	rax, rdx
0xe98e:	sar	rax, 1
0xe991:	lea	rdx, [rax + rax*4]
0xe995:	mov	r8, rax
0xe998:	cmp	r9, qword ptr [r11 + rdx*8 + 8]
0xe99d:	jg	0xeb50


0xeb48:	mov	r8, rsi
0xeb4b:	mov	rsi, rdi
0xeb4e:	nop	
0xeb50:	lea	rcx, [r8 + 1]
0xeb54:	mov	rdi, rsi
0xeb57:	jmp	0xe953


0xebab:	mov	rax, qword ptr [rsp + 0x70]
0xebb0:	cmp	qword ptr [rsp + 0x70], rax
0xebb5:	mov	dword ptr [rsp + 0x8c], 0
0xebc0:	jge	0xe8a0


0xe9f5:	mov	qword ptr [rsp + 0x30], r13
0xe9fa:	mov	qword ptr [rsp + 0x28], 0
0xea03:	mov	r13, r10
0xea06:	mov	rax, qword ptr [r14 + 0xf8]
0xea0d:	mov	rbx, qword ptr [rsp + 0x28]
0xea12:	mov	rdi, qword ptr [rsp + 0x58]
0xea17:	mov	rbx, qword ptr [rax + rbx*8]
0xea1b:	mov	rax, qword ptr [rbx + 8]
0xea1f:	shl	rax, 4
0xea23:	cmp	rdi, qword ptr [rdx + rax]
0xea27:	je	0xea50


0xe9cc:	cmp	rcx, -1
0xe9d0:	jne	0xeba6


0xd583:	mov	eax, 1
0xd588:	jmp	0xd597


0xd5b0:	cmp	dl, 0x8f
0xd5b3:	jbe	0xd490


0xd5b9:	mov	ebp, 4
0xd5be:	jmp	0xd574


0xd5c4:	cmp	al, 0xf8
0xd5c6:	jne	0xd5d1


0xd5d8:	cmp	al, 0xfd
0xd5da:	ja	0xd490


0xcfbd:	mov	rax, qword ptr [rsi]
0xcfc0:	mov	rdi, qword ptr [rsp + 0x10]
0xcfc5:	movzx	edx, byte ptr [rax + rdi]
0xcfc9:	mov	byte ptr [rsp + 0x60], dl
0xcfcd:	lea	rdx, [r12 + 1]
0xcfd2:	cmp	qword ptr [rsi + 0x10], rdx
0xcfd6:	jbe	0xd316




0xd240:	call	0x1db0


0xd25f:	add	r12, 0x40
0xd263:	add	qword ptr [rsp + 0x18], 8
0xd269:	add	r13, 0x40
0xd26d:	cmp	r12, 0x100
0xd274:	je	0xcf37


0xd230:	bt	r15, r14
0xd234:	jae	0xd255


0xd0dd:	xor	r13d, r13d
0xd0e0:	cmp	qword ptr [r12 + 0x28], 0
0xd0e6:	jle	0xcf37


0xd0b9:	cmp	qword ptr [r12 + 0x48], 0
0xd0bf:	jne	0xd1bf


0xd324:	movdqa	xmm0, xmmword ptr [rip + 0x9fb4]
0xd32c:	cmp	eax, 2
0xd32f:	movups	xmmword ptr [rbp], xmm0
0xd333:	movups	xmmword ptr [rbp + 0x10], xmm0
0xd337:	movups	xmmword ptr [rbp + 0x20], xmm0
0xd33b:	movups	xmmword ptr [rbp + 0x30], xmm0
0xd33f:	movups	xmmword ptr [rbp + 0x40], xmm0
0xd343:	movups	xmmword ptr [rbp + 0x50], xmm0
0xd347:	movups	xmmword ptr [rbp + 0x60], xmm0
0xd34b:	movups	xmmword ptr [rbp + 0x70], xmm0
0xd34f:	movups	xmmword ptr [rbp + 0x80], xmm0
0xd356:	movups	xmmword ptr [rbp + 0x90], xmm0
0xd35d:	movups	xmmword ptr [rbp + 0xa0], xmm0
0xd364:	movups	xmmword ptr [rbp + 0xb0], xmm0
0xd36b:	movups	xmmword ptr [rbp + 0xc0], xmm0
0xd372:	movups	xmmword ptr [rbp + 0xd0], xmm0
0xd379:	movups	xmmword ptr [rbp + 0xe0], xmm0
0xd380:	movups	xmmword ptr [rbp + 0xf0], xmm0
0xd387:	jne	0xd2ed


0xcf2e:	cmp	eax, 2
0xcf31:	je	0xd284


0xb23c:	jmp	0xb268


0xb248:	mov	rsi, qword ptr [rbx]
0xb24b:	add	rsi, rdx
0xb24e:	movzx	esi, byte ptr [rsi + r15]
0xb253:	movzx	esi, byte ptr [rcx + rsi]
0xb257:	mov	rcx, qword ptr [rbx + 8]
0xb25b:	mov	byte ptr [rcx + rdx], sil
0xb25f:	add	rdx, 1
0xb263:	cmp	rax, rdx
0xb266:	jne	0xb240


0xb2d0:	mov	dword ptr [rbx + 0x70], edx
0xb2d3:	jmp	0xb048


0xb2b6:	xor	edx, edx
0xb2b8:	cmp	al, 0xa
0xb2ba:	jne	0xb2d0


0xb2ef:	sub	r14, r15
0xb2f2:	mov	r12, r14
0xb2f5:	mov	qword ptr [rbx + 0x30], r14
0xb2f9:	lea	rsi, [r8 - 1]
0xb2fd:	mov	edx, r10d
0xb300:	mov	rdi, rbx
0xb303:	call	0xa9d0


0xaeae:	lea	rax, [rbx + 0x20]
0xaeb2:	lea	r13, [rsp + 0x24]
0xaeb7:	mov	qword ptr [rsp + 0x10], rax
0xaebc:	nop	dword ptr [rax]
0xaec0:	mov	r12, qword ptr [rbx + 0x50]
0xaec4:	mov	rsi, qword ptr [rbx]
0xaec7:	mov	rdi, r13
0xaeca:	mov	rax, qword ptr [rbx + 0x20]
0xaece:	mov	rcx, qword ptr [rsp + 0x10]
0xaed3:	mov	dword ptr [rsp + 0xc], r10d
0xaed8:	mov	qword ptr [rsp], r8
0xaedc:	sub	r12, r14
0xaedf:	add	rsi, r14
0xaee2:	mov	rdx, r12
0xaee5:	mov	qword ptr [rsp + 0x18], rax
0xaeea:	call	0x7050


0xb195:	movzx	edx, byte ptr [rsi]
0xb198:	and	edx, 0xffffffc0
0xb19b:	cmp	dl, 0x80
0xb19e:	je	0xb188


0xb17c:	jmp	0xaea1


0xaf7a:	lea	rsi, [rax + 1]
0xaf7e:	cmp	rsi, rcx
0xaf81:	jge	0xafa8


0xafb3:	lea	r13, [r12 - 1]
0xafb8:	mov	edx, r10d
0xafbb:	mov	rdi, rbx
0xafbe:	mov	qword ptr [rsp], r8
0xafc2:	mov	rsi, r13
0xafc5:	call	0xa9d0


0xaf7e:	cmp	rsi, rcx
0xaf81:	jge	0xafa8


0x9fe0:	mov	rsi, rbp
0x9fe3:	call	0x8b90


0x97b6:	sub	r11, 1
0x97ba:	js	0x97e0


0x97b0:	sub	r9, 1
0x97b4:	js	0x97e0


0x984d:	shl	rdx, 3
0x9851:	lea	rsi, [rdi + rsi*8]
0x9855:	call	0x1be0


0x9807:	test	rax, rax
0x980a:	js	0x984d


0x9770:	cmp	rax, r8
0x9773:	je	0x9786


0x9210:	sub	rdx, 1
0x9214:	sub	rax, 1
0x9218:	mov	rdi, rdx
0x921b:	not	rdi
0x921e:	jmp	0x915f


0x9180:	jge	0x9228


0x91fa:	xor	eax, eax
0x91fc:	pop	rbx
0x91fd:	pop	rbp
0x91fe:	pop	r12
0x9200:	ret	


0x91c3:	mov	rdi, qword ptr [rbx + 0x10]
0x91c7:	lea	rax, [rcx - 1]
0x91cb:	add	rcx, rdx
0x91ce:	mov	qword ptr [rbx + 8], rcx
0x91d2:	nop	word ptr [rax + rax]
0x91d8:	mov	rsi, qword ptr [rdi + r8*8]
0x91dc:	mov	rcx, qword ptr [rdi + rax*8]
0x91e0:	lea	r9, [rax + rdx]
0x91e4:	lea	r9, [rdi + r9*8]
0x91e8:	cmp	rsi, rcx
0x91eb:	jle	0x9260


0x86d0:	mov	edx, dword ptr [rax + 8]
0x86d3:	shr	edx, 8
0x86d6:	and	edx, 0x3ff
0x86dc:	cmp	ebp, edx
0x86de:	jne	0x86b8


0x86b8:	add	rax, r8
0x86bb:	sub	rsi, 1
0x86bf:	test	byte ptr [rax + 0xa], 4
0x86c3:	je	0x8740




0x7356:	cmp	r15, 0x3f
0x735a:	jg	0x7368


0x73c0:	add	r13, 0x28
0x73c4:	cmp	byte ptr [r13 - 8], 0
0x73c9:	jne	0x7350


0x7205:	mov	byte ptr [rdi + 8], 0x1e
0x7209:	mov	eax, 2
0x720e:	ret	


0x71f0:	mov	byte ptr [rdi + 8], 0x1c
0x71f4:	mov	eax, 2
0x71f9:	ret	


0x7172:	cmp	al, 0x2e
0x7174:	jne	0x71a0


0x7134:	mov	byte ptr [rdi + 8], 0x16
0x7138:	mov	eax, 1
0x713d:	ret	


0x665c:	cmp	edx, 9
0x665f:	jbe	0x6640


0x6718:	movzx	r8d, cl
0x671c:	sub	r8d, 0x30
0x6720:	cmp	r8d, 9
0x6724:	ja	0x6661


0x666d:	xor	edx, edx
0x666f:	nop	
0x6670:	movzx	eax, byte ptr [rsi + rdx + 1]
0x6675:	add	rdx, 1
0x6679:	sub	eax, 0x30
0x667c:	cmp	eax, 9
0x667f:	jbe	0x6670


0x672a:	xor	r10d, r10d
0x672d:	nop	dword ptr [rax]
0x6730:	movzx	eax, byte ptr [rdi + r10 + 1]
0x6736:	add	r10, 1
0x673a:	sub	eax, 0x30
0x673d:	cmp	eax, 9
0x6740:	jbe	0x6730


0x6558:	cmp	ecx, 9
0x655b:	jbe	0x653b


0x66e0:	movzx	eax, byte ptr [rdi + r9 + 1]
0x66e6:	add	r9, 1
0x66ea:	sub	eax, 0x30
0x66ed:	cmp	eax, 9
0x66f0:	jbe	0x66e0


0x66f2:	cmp	ecx, 9
0x66f5:	jbe	0x6570




0x14c30:	mov	r14, qword ptr [r12]
0x14c34:	cmp	r14, rcx
0x14c37:	ja	0x14aa1


0x14aa1:	lea	r14, [rcx + 1]
0x14aa5:	mov	r13, r14
0x14aa8:	mov	rdi, r14
0x14aab:	shl	rdi, 4
0x14aaf:	mov	qword ptr [rsp + 0x20], r9
0x14ab4:	mov	qword ptr [rsp + 0x18], rdx
0x14ab9:	mov	qword ptr [rsp + 0x10], rsi
0x14abe:	mov	qword ptr [rsp + 8], r8
0x14ac3:	call	0x1c20


0x11988:	cmp	eax, 1
0x1198b:	mov	byte ptr [rbp], r12b
0x1198f:	mov	byte ptr [rbp + 8], 1
0x11993:	jle	0x11de0


0x11e65:	jmp	0x11988


0x119a1:	mov	edi, r8d
0x119a4:	mov	dword ptr [rsp], r8d
0x119a8:	call	0x1c10


0x11e29:	cmp	dword ptr [rcx + rdi + 4], -1
0x11e2e:	je	0x11ecf


0x116aa:	cmp	rax, r12
0x116ad:	jge	0x11778


0x1172d:	mov	rax, qword ptr [r10 + 0x18]
0x11731:	mov	rax, qword ptr [rax + r11*8]
0x11735:	add	rax, qword ptr [r10]
0x11738:	add	rax, qword ptr [r10 + 0x28]
0x1173c:	movzx	r9d, byte ptr [rax]
0x11740:	test	r9b, 0x80
0x11744:	jne	0x11699


0x1171e:	mov	rax, qword ptr [r10 + 0x10]
0x11722:	cmp	dword ptr [rax + r11*4], -1
0x11727:	je	0x11699


0x116c2:	add	rax, 1
0x116c6:	mov	qword ptr [r10 + 0x48], rax
0x116ca:	mov	rax, qword ptr [rbx + 8]
0x116ce:	mov	byte ptr [rax + r14], 0
0x116d3:	movzx	eax, byte ptr [rbp + 8]
0x116d7:	cmp	al, 0x1c
0x116d9:	je	0x117db


0x11686:	movzx	eax, byte ptr [rbp + 8]
0x1168a:	mov	r11, qword ptr [r10 + 0x48]
0x1168e:	mov	r12, qword ptr [r10 + 0x68]
0x11692:	cmp	al, 0x1e
0x11694:	movsxd	r14, r8d
0x11697:	je	0x11700


0x10f83:	lea	rax, [rsp + 0x60]
0x10f88:	mov	qword ptr [rsp + 0x20], 0
0x10f91:	mov	qword ptr [rsp + 0x48], rbx
0x10f96:	mov	r15, r13
0x10f99:	mov	qword ptr [rsp + 0x38], rax
0x10f9e:	jmp	0x10fc2


0xf730:	cmp	qword ptr [rdi + 0x60], 0
0xf735:	je	0x10590


0xe9a3:	mov	rsi, rax
0xe9a6:	cmp	rsi, rcx
0xe9a9:	jg	0xe980


0xeb50:	lea	rcx, [r8 + 1]
0xeb54:	mov	rdi, rsi
0xeb57:	jmp	0xe953


0xe953:	cmp	rcx, rdi
0xe956:	jge	0xe9ab


0xebc6:	lea	rax, [r13*8]
0xebce:	mov	r12, qword ptr [rsp + 0x70]
0xebd3:	mov	rbp, qword ptr [rsp + 0x38]
0xebd8:	mov	qword ptr [rsp + 0x50], rax
0xebdd:	lea	rax, [r13 + r13*2]
0xebe2:	lea	r8, [r12 + r12*4]
0xebe6:	shl	rax, 3
0xebea:	mov	qword ptr [rsp + 0x58], rax
0xebef:	lea	r15, [r8*8]
0xebf7:	jmp	0xed2d


0xea50:	cmp	qword ptr [rbx + 0x20], 0
0xea55:	mov	r11, qword ptr [rbx]
0xea58:	jle	0xf0c2


0xea29:	add	qword ptr [rsp + 0x28], 1
0xea2f:	mov	rax, qword ptr [rsp + 0x28]
0xea34:	cmp	rax, qword ptr [r14 + 0xe8]
0xea3b:	jge	0xf0b1


0xeba6:	cmp	r13, qword ptr [rax]
0xeba9:	jne	0xeb98


0xd597:	movzx	ebx, byte ptr [rsi + rax]
0xd59b:	lea	edx, [rbx - 0x80]
0xd59e:	cmp	dl, 0x3f
0xd5a1:	jbe	0xd58a


0xd574:	movsxd	rdi, ebp
0xd577:	add	r8, rdi
0xd57a:	cmp	rcx, r8
0xd57d:	jl	0xd490


0xd5c8:	cmp	dl, 0x87
0xd5cb:	jbe	0xd490


0xd5d1:	mov	ebp, 5
0xd5d6:	jmp	0xd574


0xd5e0:	cmp	al, 0xfc
0xd5e2:	jne	0xd5ed


0xd316:	mov	rax, qword ptr [rsp + 0x38]
0xd31b:	add	rax, 1
0xd31f:	jmp	0xd044


0xcfdc:	lea	rcx, [rax + rdi + 0x10]
0xcfe1:	mov	eax, dword ptr [rcx + 8]
0xcfe4:	and	eax, 0x2000ff
0xcfe9:	cmp	eax, 0x200001
0xcfee:	jne	0xd316


0xd27a:	mov	rax, qword ptr [rsp + 8]
0xd27f:	mov	rcx, qword ptr [rax]
0xd282:	jmp	0xd215


0xd0ec:	mov	r15, r12
0xd0ef:	mov	r14, qword ptr [rsp + 0x40]
0xd0f4:	mov	r12, rbp
0xd0f7:	mov	rbp, r13
0xd0fa:	mov	r13d, ebx
0xd0fd:	jmp	0xd10d


0xd0c5:	test	byte ptr [r12 + 0x20], 1
0xd0cb:	jne	0xd1bf


0xd1bf:	mov	r12, qword ptr [rsp + 0x40]
0xd1c4:	mov	r13, qword ptr [rsp + 0x48]
0xd1c9:	mov	byte ptr [rsp + 0x54], 0
0xd1ce:	nop	
0xd1d0:	xor	edi, edi
0xd1d2:	mov	qword ptr [r12], 0
0xd1da:	mov	rcx, r12
0xd1dd:	mov	edx, 1
0xd1e2:	mov	rsi, r13
0xd1e5:	call	0x7050


0xd38d:	jmp	0xd2e4


0xd284:	movdqa	xmm0, xmmword ptr [rip + 0xa054]
0xd28c:	movups	xmmword ptr [rbp], xmm0
0xd290:	movups	xmmword ptr [rbp + 0x10], xmm0
0xd294:	movups	xmmword ptr [rbp + 0x20], xmm0
0xd298:	movups	xmmword ptr [rbp + 0x30], xmm0
0xd29c:	movups	xmmword ptr [rbp + 0x40], xmm0
0xd2a0:	movups	xmmword ptr [rbp + 0x50], xmm0
0xd2a4:	movups	xmmword ptr [rbp + 0x60], xmm0
0xd2a8:	movups	xmmword ptr [rbp + 0x70], xmm0
0xd2ac:	movups	xmmword ptr [rbp + 0x80], xmm0
0xd2b3:	movups	xmmword ptr [rbp + 0x90], xmm0
0xd2ba:	movups	xmmword ptr [rbp + 0xa0], xmm0
0xd2c1:	movups	xmmword ptr [rbp + 0xb0], xmm0
0xd2c8:	movups	xmmword ptr [rbp + 0xc0], xmm0
0xd2cf:	movups	xmmword ptr [rbp + 0xd0], xmm0
0xd2d6:	movups	xmmword ptr [rbp + 0xe0], xmm0
0xd2dd:	movups	xmmword ptr [rbp + 0xf0], xmm0
0xd2e4:	mov	rax, qword ptr [rsp + 0x30]
0xd2e9:	or	byte ptr [rax + 0x38], 1
0xd2ed:	mov	rax, qword ptr [rsp + 0x168]
0xd2f5:	xor	rax, qword ptr fs:[0x28]
0xd2fe:	jne	0xd392


0xb268:	mov	qword ptr [rbx + 0x30], rdx
0xb26c:	mov	qword ptr [rbx + 0x38], rdx
0xb270:	jmp	0xadd3


0xb240:	mov	r15, qword ptr [rbx + 0x28]
0xb244:	mov	rcx, qword ptr [rbx + 0x78]
0xb248:	mov	rsi, qword ptr [rbx]
0xb24b:	add	rsi, rdx
0xb24e:	movzx	esi, byte ptr [rsi + r15]
0xb253:	movzx	esi, byte ptr [rcx + rsi]
0xb257:	mov	rcx, qword ptr [rbx + 8]
0xb25b:	mov	byte ptr [rcx + rdx], sil
0xb25f:	add	rdx, 1
0xb263:	cmp	rax, rdx
0xb266:	jne	0xb240


0xb048:	movzx	eax, byte ptr [rbx + 0x8b]
0xb04f:	jmp	0xb11c


0xb2bc:	xor	edx, edx
0xb2be:	cmp	byte ptr [rbx + 0x8d], 0
0xb2c5:	setne	dl
0xb2c8:	add	edx, edx
0xb2ca:	nop	word ptr [rax + rax]
0xb2d0:	mov	dword ptr [rbx + 0x70], edx
0xb2d3:	jmp	0xb048


0xb188:	sub	rsi, 1
0xb18c:	cmp	rcx, rsi
0xb18f:	ja	0xaea1


0xb1a0:	mov	rdx, qword ptr [rbx + 0x58]
0xb1a4:	mov	rcx, qword ptr [rbx + 0x78]
0xb1a8:	mov	r14, rsi
0xb1ab:	add	rdx, r12
0xb1ae:	sub	rdx, rsi
0xb1b1:	test	rcx, rcx
0xb1b4:	jne	0xb402


0xafa8:	lea	r12, [rax + 1]
0xafac:	cmp	rdx, rbp
0xafaf:	cmovge	r12, rax
0xafb3:	lea	r13, [r12 - 1]
0xafb8:	mov	edx, r10d
0xafbb:	mov	rdi, rbx
0xafbe:	mov	qword ptr [rsp], r8
0xafc2:	mov	rsi, r13
0xafc5:	call	0xa9d0


0x97bc:	mov	rax, qword ptr [r13 + r9*8]
0x97c1:	jmp	0x977d


0x915f:	test	rdi, rdi
0x9162:	jns	0x91a0


0x9186:	sub	rdx, 1
0x918a:	sub	rbp, 1
0x918e:	mov	rdi, rdx
0x9191:	mov	qword ptr [rcx + rbp*8], rsi
0x9195:	not	rdi
0x9198:	test	rdi, rdi
0x919b:	js	0x9164


0x9228:	sub	rax, 1
0x922c:	jmp	0x915f


0x9260:	sub	rax, 1
0x9264:	mov	qword ptr [r9], rcx
0x9267:	jns	0x91d8


0x91ed:	sub	r8, 1
0x91f1:	sub	rdx, 1
0x91f5:	mov	qword ptr [r9], rsi
0x91f8:	jne	0x91d8


0x86e0:	call	0x76b0


0x86c5:	test	rsi, rsi
0x86c8:	jle	0x8740


0x735c:	movzx	eax, word ptr [r13 + 0x22]
0x7361:	test	qword ptr [rsp + 0x18], rax
0x7366:	je	0x73c0


0x7368:	mov	rax, qword ptr [rbp + 0x28]
0x736c:	mov	rax, qword ptr [rax + rbx + 0x10]
0x7371:	mov	rcx, qword ptr [rax]
0x7374:	cmp	qword ptr [rsp + 0x10], rcx
0x7379:	je	0x7440


0x73cb:	mov	rbx, qword ptr [rsp + 0x38]
0x73d0:	mov	r10, r12
0x73d3:	mov	r12, qword ptr [rsp + 0x30]
0x73d8:	mov	r14, rbp
0x73db:	add	rbx, 1
0x73df:	cmp	qword ptr [r12 + 8], rbx
0x73e4:	jg	0x72d5


0x7350:	cmp	qword ptr [r13], r14
0x7354:	jne	0x73c0


0x7176:	mov	byte ptr [rdi + 8], 0x1a
0x717a:	mov	eax, 2
0x717f:	ret	


0x6670:	movzx	eax, byte ptr [rsi + rdx + 1]
0x6675:	add	rdx, 1
0x6679:	sub	eax, 0x30
0x667c:	cmp	eax, 9
0x667f:	jbe	0x6670


0x6681:	cmp	r10, rdx
0x6684:	je	0x677d


0x6730:	movzx	eax, byte ptr [rdi + r10 + 1]
0x6736:	add	r10, 1
0x673a:	sub	eax, 0x30
0x673d:	cmp	eax, 9
0x6740:	jbe	0x6730


0x6742:	cmp	edx, 9
0x6745:	jbe	0x666d


0x655d:	movzx	edx, r8b
0x6561:	xor	r9d, r9d
0x6564:	cmp	ecx, 9
0x6567:	ja	0x6760


0x6570:	xor	ecx, ecx
0x6572:	nop	word ptr [rax + rax]
0x6578:	movzx	eax, byte ptr [rsi + rcx + 1]
0x657d:	add	rcx, 1
0x6581:	sub	eax, 0x30
0x6584:	cmp	eax, 9
0x6587:	jbe	0x6578


0x66fb:	xor	eax, eax
0x66fd:	test	r9, r9
0x6700:	setne	al
0x6703:	ret	


0x6578:	movzx	eax, byte ptr [rsi + rcx + 1]
0x657d:	add	rcx, 1
0x6581:	sub	eax, 0x30
0x6584:	cmp	eax, 9
0x6587:	jbe	0x6578


0x6589:	cmp	r9, rcx
0x658c:	je	0x6763


0x14c3d:	test	r14, r14
0x14c40:	mov	r13, r14
0x14c43:	jg	0x14aa8


0x1174a:	cmp	dword ptr [r10 + 0x90], 1
0x11752:	mov	eax, 1
0x11757:	je	0x11766


0x117db:	mov	dword ptr [rbx], 2
0x117e1:	xor	eax, eax
0x117e3:	jmp	0x115f1


0x116df:	cmp	al, 0x1e
0x116e1:	je	0x117ce


0x10fc2:	mov	rax, qword ptr [rsp + 0x10]
0x10fc7:	mov	rdi, qword ptr [rsp + 0x20]
0x10fcc:	mov	rax, qword ptr [rax + 0x10]
0x10fd0:	mov	r14, qword ptr [rax + rdi*8]
0x10fd4:	mov	rax, r14
0x10fd7:	shl	rax, 4
0x10fdb:	add	rax, qword ptr [r12]
0x10fdf:	cmp	r14, qword ptr [r15 + 0x10]
0x10fe3:	movzx	eax, byte ptr [rax + 8]
0x10fe7:	jne	0x10fa0


0xf73b:	cmp	qword ptr [rax + 0x10], 0
0xf740:	jne	0xf778


0xed2d:	mov	rax, qword ptr [r14 + 0xd8]
0xed34:	add	rax, r15
0xed37:	cmp	r13, qword ptr [rax]
0xed3a:	jne	0xed18


0xf0c2:	mov	r12, qword ptr [rsp + 8]
0xf0c7:	jmp	0xed92


0xea5e:	mov	rcx, qword ptr [rsp + 8]
0xea63:	mov	r8, r13
0xea66:	xor	ebp, ebp
0xea68:	mov	r13, rbx
0xea6b:	mov	rbx, rcx
0xea6e:	jmp	0xeadc


0xea41:	mov	rax, qword ptr [rsp + 0x50]
0xea46:	mov	rdx, qword ptr [rax]
0xea49:	jmp	0xea06


0xf0b1:	mov	r13, qword ptr [rsp + 0x30]
0xf0b6:	mov	rax, qword ptr [r14 + 0xc8]
0xf0bd:	jmp	0xebb0


0xeb98:	add	rax, 0x28
0xeb9c:	cmp	byte ptr [rax - 8], 0
0xeba0:	je	0xe9d6


0xd58a:	add	rax, 1
0xd58e:	cmp	rdi, rax
0xd591:	jle	0xd492


0xd5a3:	jmp	0xd490


0xd5e4:	cmp	dl, 0x83
0xd5e7:	jbe	0xd490


0xd5ed:	mov	ebp, 6
0xd5f2:	jmp	0xd574


0xd044:	mov	rsi, qword ptr [rsp + 0x38]
0xd049:	mov	rcx, qword ptr [rsp + 0x40]
0xd04e:	mov	rdi, qword ptr [rsp + 0x48]
0xd053:	sub	rax, rsi
0xd056:	mov	qword ptr [rcx], 0
0xd05d:	mov	r12, rax
0xd060:	mov	rdx, rax
0xd063:	call	0x7050


0xcff4:	add	rdi, 0x20
0xcff8:	mov	r13, rdi
0xcffb:	mov	rdi, qword ptr [rsp + 0x38]
0xd000:	lea	rax, [rdi + 1]
0xd004:	jmp	0xd02b


0xd215:	mov	rax, qword ptr [rsp + 0x10]
0xd21a:	mov	rsi, qword ptr [rsp + 0x18]
0xd21f:	xor	r14d, r14d
0xd222:	mov	rax, qword ptr [rcx + rax]
0xd226:	mov	r15, qword ptr [rax + rsi]
0xd22a:	nop	word ptr [rax + rax]
0xd230:	bt	r15, r14
0xd234:	jae	0xd255


0xd10d:	mov	qword ptr [r14], 0
0xd114:	mov	rax, qword ptr [r15]
0xd117:	mov	rdx, r14
0xd11a:	mov	rdi, qword ptr [rsp + 0x38]
0xd11f:	lea	rbx, [rbp*4]
0xd127:	mov	esi, dword ptr [rax + rbp*4]
0xd12a:	call	0x1c30


0xd0d1:	cmp	qword ptr [r12 + 0x40], 0
0xd0d7:	jne	0xd1bf


0xd2e4:	mov	rax, qword ptr [rsp + 0x30]
0xd2e9:	or	byte ptr [rax + 0x38], 1
0xd2ed:	mov	rax, qword ptr [rsp + 0x168]
0xd2f5:	xor	rax, qword ptr fs:[0x28]
0xd2fe:	jne	0xd392


0xb11c:	test	al, al
0xb11e:	je	0xad9a


0xb1ba:	lea	r13, [rsp + 0x24]
0xb1bf:	add	r12, rbp
0xb1c2:	lea	rcx, [rsp + 0x28]
0xb1c7:	sub	r12, r14
0xb1ca:	mov	dword ptr [rsp + 0xc], r10d
0xb1cf:	mov	qword ptr [rsp], r8
0xb1d3:	mov	rdi, r13
0xb1d6:	mov	qword ptr [rsp + 0x28], 0
0xb1df:	call	0x7050


0xb402:	cmp	rdx, 6
0xb406:	mov	edi, 6
0xb40b:	lea	r11, [rsp + 0x32]
0xb410:	cmovle	rdi, rdx
0xb414:	sub	edi, 1
0xb417:	test	edi, edi
0xb419:	movsxd	rax, edi
0xb41c:	js	0xb432


0x9840:	sub	rax, 1
0x9844:	mov	qword ptr [r10], rcx
0x9847:	cmp	rax, -1
0x984b:	jne	0x9810


0x9825:	sub	r9, 1
0x9829:	sub	rdx, 1
0x982d:	mov	qword ptr [r10], r8
0x9830:	jne	0x9810


0x926d:	lea	rsi, [rdi + rbp*8]
0x9271:	shl	rdx, 3
0x9275:	call	0x1be0


0x91d8:	mov	rsi, qword ptr [rdi + r8*8]
0x91dc:	mov	rcx, qword ptr [rdi + rax*8]
0x91e0:	lea	r9, [rax + rdx]
0x91e4:	lea	r9, [rdi + r9*8]
0x91e8:	cmp	rsi, rcx
0x91eb:	jle	0x9260


0x7440:	mov	r15d, dword ptr [rsp + 0x20]
0x7445:	add	rsp, 0x48
0x7449:	pop	rbx
0x744a:	pop	rbp
0x744b:	mov	eax, r15d
0x744e:	and	eax, 1
0x7451:	pop	r12
0x7453:	neg	eax
0x7455:	pop	r13
0x7457:	pop	r14
0x7459:	pop	r15
0x745b:	ret	


0x737f:	mov	esi, dword ptr [rsp + 0x20]
0x7383:	mov	rdi, qword ptr [rsp]
0x7387:	mov	r8, r12
0x738a:	mov	rdx, r15
0x738d:	call	0x7230


0x677d:	xor	eax, eax
0x677f:	test	r10, r10
0x6782:	je	0x6703


0x668a:	sbb	eax, eax
0x668c:	and	eax, 2
0x668f:	sub	eax, 1
0x6692:	ret	


0x674b:	xor	eax, eax
0x674d:	test	r10, r10
0x6750:	setne	al
0x6753:	neg	eax
0x6755:	ret	


0x6763:	xor	eax, eax
0x6765:	test	r9, r9
0x6768:	je	0x6703


0x6592:	sbb	eax, eax
0x6594:	or	eax, 1
0x6597:	ret	


0x14aa8:	mov	rdi, r14
0x14aab:	shl	rdi, 4
0x14aaf:	mov	qword ptr [rsp + 0x20], r9
0x14ab4:	mov	qword ptr [rsp + 0x18], rdx
0x14ab9:	mov	qword ptr [rsp + 0x10], rsi
0x14abe:	mov	qword ptr [rsp + 8], r8
0x14ac3:	call	0x1c20


0x11766:	add	rax, r11
0x11769:	mov	qword ptr [r10 + 0x48], rax
0x1176d:	jmp	0x116aa


0x11759:	mov	rsi, r11
0x1175c:	mov	rdi, r10
0x1175f:	call	0x8b40


0x117ce:	mov	dword ptr [rbx], 4
0x117d4:	xor	eax, eax
0x117d6:	jmp	0x115f1


0x116e7:	cmp	al, 0x1a
0x116e9:	je	0x117c1


0x10fe9:	cmp	rbp, qword ptr [r15 + 0x18]
0x10fed:	jne	0x10fa0


0x10fa0:	cmp	al, 4
0x10fa2:	je	0x11328


0xf742:	cmp	qword ptr [rdx + 0x10], 0
0xf747:	jne	0xf778


0xf778:	cmp	qword ptr [rsp + 0x270], 0
0xf781:	mov	dword ptr [rsp + 0x58], 1
0xf789:	je	0xfb10


0xed3c:	mov	rdi, qword ptr [rsp + 8]
0xed41:	cmp	rdi, qword ptr [rax + 8]
0xed45:	jne	0xed18


0xed18:	add	r12, 1
0xed1c:	add	r15, 0x28
0xed20:	cmp	r12, qword ptr [r14 + 0xc8]
0xed27:	jge	0xe8a0


0xed92:	cmp	qword ptr [rsp + 8], r11
0xed97:	jl	0xea29


0xeadc:	mov	rax, qword ptr [r13 + 0x28]
0xeae0:	mov	r9, qword ptr [rax + rbp*8]
0xeae4:	mov	r15, qword ptr [r9 + 8]
0xeae8:	mov	rdx, r15
0xeaeb:	sub	rdx, r11
0xeaee:	test	rdx, rdx
0xeaf1:	lea	r12, [rdx + rbx]
0xeaf5:	jle	0xeaa3


0xea06:	mov	rax, qword ptr [r14 + 0xf8]
0xea0d:	mov	rbx, qword ptr [rsp + 0x28]
0xea12:	mov	rdi, qword ptr [rsp + 0x58]
0xea17:	mov	rbx, qword ptr [rax + rbx*8]
0xea1b:	mov	rax, qword ptr [rbx + 8]
0xea1f:	shl	rax, 4
0xea23:	cmp	rdi, qword ptr [rdx + rax]
0xea27:	je	0xea50


0xebb0:	cmp	qword ptr [rsp + 0x70], rax
0xebb5:	mov	dword ptr [rsp + 0x8c], 0
0xebc0:	jge	0xe8a0


0xd02b:	movzx	edx, byte ptr [rcx]
0xd02e:	add	rax, 1
0xd032:	mov	byte ptr [rax - 1], dl
0xd035:	mov	rdx, rax
0xd038:	sub	rdx, rdi
0xd03b:	add	rdx, r12
0xd03e:	cmp	qword ptr [rsi + 0x10], rdx
0xd042:	ja	0xd010


0x1c30:	jmp	qword ptr [rip + 0x219292]


0xad9a:	add	qword ptr [rbx + 8], rbp
0xad9e:	mov	rax, qword ptr [rbx + 0x58]
0xada2:	sub	qword ptr [rbx + 0x68], rbp
0xada6:	mov	qword ptr [rbx + 0x28], r15
0xadaa:	sub	rax, rbp
0xadad:	cmp	dword ptr [rbx + 0x90], 1
0xadb4:	mov	qword ptr [rbx + 0x58], rax
0xadb8:	jle	0xae58


0xb124:	jmp	0xad9e


0xb432:	mov	rsi, r11
0xb435:	jmp	0xb1ba


0xb41e:	movzx	edi, byte ptr [rsi + rax]
0xb422:	movzx	edi, byte ptr [rcx + rdi]
0xb426:	mov	byte ptr [r11 + rax], dil
0xb42a:	sub	rax, 1
0xb42e:	test	eax, eax
0xb430:	jns	0xb41e


0x9810:	mov	r8, qword ptr [rdi + r9*8]
0x9814:	mov	rcx, qword ptr [rdi + rax*8]
0x9818:	lea	r10, [rax + rdx]
0x981c:	lea	r10, [rdi + r10*8]
0x9820:	cmp	r8, rcx
0x9823:	jle	0x9840


0x9832:	xor	edx, edx
0x9834:	jmp	0x9851


0x6788:	mov	eax, r9d
0x678b:	sub	eax, ecx
0x678d:	ret	


0x676a:	movzx	r9d, r8b
0x676e:	mov	eax, r9d
0x6771:	sub	eax, edx
0x6773:	ret	


0x117c1:	mov	dword ptr [rbx], 3
0x117c7:	xor	eax, eax
0x117c9:	jmp	0x115f1


0x116ef:	xor	eax, eax
0x116f1:	jmp	0x115f1


0x10fef:	jmp	0x10fa8


0x11328:	mov	rax, qword ptr [rsp + 8]
0x1132d:	mov	r13, qword ptr [rsp + 0x40]
0x11332:	mov	rbx, qword ptr [rsp + 0x48]
0x11337:	add	r13, qword ptr [rax + 0xd8]
0x1133e:	lea	rax, [r14 + r14*2]
0x11342:	shl	rax, 3
0x11346:	mov	qword ptr [rsp + 0x30], rax
0x1134b:	lea	rax, [r14*8]
0x11353:	mov	qword ptr [rsp + 0x28], rax
0x11358:	mov	rax, r15
0x1135b:	mov	r15, r13
0x1135e:	mov	r13, rbx
0x11361:	mov	rbx, rax
0x11364:	jmp	0x114ce


0x10fa8:	mov	rcx, qword ptr [rsp + 0x10]
0x10fad:	add	qword ptr [rsp + 0x20], 1
0x10fb3:	mov	rax, qword ptr [rsp + 0x20]
0x10fb8:	cmp	rax, qword ptr [rcx + 8]
0x10fbc:	jge	0x1157b


0xf749:	cmp	qword ptr [rcx + 0x10], 0
0xf74e:	je	0xf756


0xfb10:	mov	rax, qword ptr [rsp + 0x38]
0xfb15:	cmp	qword ptr [rax + 0x98], 0
0xfb1d:	setne	al
0xfb20:	movzx	eax, al
0xfb23:	mov	dword ptr [rsp + 0x58], eax
0xfb27:	jmp	0xf78f


0xf78f:	mov	r11, qword ptr [rsp + 0x38]
0xf794:	mov	rax, qword ptr [rsp + 0x48]
0xf799:	mov	rdi, qword ptr [rsp + 0x88]
0xf7a1:	mov	rsi, qword ptr [r11 + 0x10]
0xf7a5:	mov	rbx, qword ptr [rax + 0x28]
0xf7a9:	mov	edx, dword ptr [r11 + 0xb4]
0xf7b0:	mov	rax, qword ptr [rax + 0x18]
0xf7b4:	mov	qword ptr [rsp + 0x178], rdi
0xf7bc:	mov	qword ptr [rsp + 0x170], rdi
0xf7c4:	mov	qword ptr [rsp + 8], rsi
0xf7c9:	lea	rsi, [rsi + 1]
0xf7cd:	mov	qword ptr [rsp + 0xb0], rbx
0xf7d5:	movsxd	rcx, edx
0xf7d8:	shr	rax, 0x16
0xf7dc:	mov	qword ptr [rsp + 0x198], rbx
0xf7e4:	and	eax, 1
0xf7e7:	cmp	rsi, rcx
0xf7ea:	mov	dword ptr [rsp + 0x1b0], edx
0xf7f1:	cmovl	rsi, rcx
0xf7f5:	lea	rcx, [rdi + 1]
0xf7f9:	mov	byte ptr [rsp + 0x1a8], al
0xf800:	mov	qword ptr [rsp + 0x188], rdi
0xf808:	mov	qword ptr [rsp + 0x180], rdi
0xf810:	cmp	rsi, rcx
0xf813:	mov	rdi, qword ptr [rsp]
0xf817:	cmovg	rsi, rcx
0xf81b:	test	rbx, rbx
0xf81e:	mov	rcx, qword ptr [rsp + 0x78]
0xf823:	setne	bl
0xf826:	or	eax, ebx
0xf828:	mov	byte ptr [rsp + 0x1ab], al
0xf82f:	movzx	eax, byte ptr [r11 + 0xb0]
0xf837:	mov	qword ptr [rsp + 0x120], rcx
0xf83f:	mov	edx, eax
0xf841:	shr	al, 3
0xf844:	shr	dl, 2
0xf847:	and	eax, 1
0xf84a:	and	edx, 1
0xf84d:	mov	byte ptr [rsp + 0x1aa], al
0xf854:	mov	byte ptr [rsp + 0x1a9], dl
0xf85b:	call	0x75a0


0xed47:	mov	rbx, qword ptr [rax + 0x18]
0xed4b:	mov	rax, qword ptr [rax + 0x10]
0xed4f:	mov	rdx, qword ptr [rbp + 0x30]
0xed53:	mov	rcx, rbx
0xed56:	sub	rcx, rax
0xed59:	mov	qword ptr [rsp + 0x20], rcx
0xed5e:	je	0xec00


0xed9d:	mov	rax, r12
0xeda0:	lea	r15, [r11*8]
0xeda8:	mov	r12, rbx
0xedab:	mov	rbx, r11
0xedae:	mov	r11, r13
0xedb1:	mov	r13, rax
0xedb4:	nop	dword ptr [rax]
0xedb8:	mov	rax, rbx
0xedbb:	sub	rax, qword ptr [r12]
0xedbf:	test	rax, rax
0xedc2:	jle	0xede5


0xeaa3:	mov	r8, qword ptr [rsp + 8]
0xeaa8:	mov	rcx, qword ptr [rsp + 0x30]
0xeaad:	mov	rdx, r9
0xeab0:	mov	rsi, r13
0xeab3:	mov	rdi, r14
0xeab6:	call	0xe650


0xeaf7:	cmp	qword ptr [r14 + 0x30], r12
0xeafb:	jge	0xea70


0xd010:	mov	rcx, qword ptr [rsi]
0xd013:	add	rcx, r13
0xd016:	add	r13, 0x10
0xd01a:	mov	edx, dword ptr [rcx + 8]
0xd01d:	and	edx, 0x2000ff
0xd023:	cmp	edx, 0x200001
0xd029:	jne	0xd044




0x9851:	lea	rsi, [rdi + rsi*8]
0x9855:	call	0x1be0


0x114ce:	cmp	r14, qword ptr [r15]
0x114d1:	je	0x11370


0x1157b:	cmp	qword ptr [rsp + 0x60], 0
0x11581:	je	0x11020


0xf756:	test	rbp, rbp
0xf759:	je	0xf76c


0xf750:	cmp	byte ptr [rsi + 0x38], 0
0xf754:	js	0xf778


0xec00:	mov	rcx, qword ptr [rbp + 0x28]
0xec04:	mov	rdi, qword ptr [rsp + 0x58]
0xec09:	mov	rcx, qword ptr [rcx + rdi + 0x10]
0xec0e:	mov	rcx, qword ptr [rcx]
0xec11:	lea	rcx, [rcx + rcx*2]
0xec15:	lea	rcx, [rdx + rcx*8]
0xec19:	mov	qword ptr [rsp + 0x18], rcx
0xec1e:	add	rbx, qword ptr [rsp + 8]
0xec23:	mov	edx, dword ptr [r14 + 0xa0]
0xec2a:	mov	rdi, r14
0xec2d:	sub	rbx, rax
0xec30:	lea	rsi, [rbx - 1]
0xec34:	call	0xa9d0


0xed64:	mov	rcx, qword ptr [rbp + 0x18]
0xed68:	mov	rdi, qword ptr [rsp + 0x50]
0xed6d:	mov	rcx, qword ptr [rcx + rdi]
0xed71:	lea	rcx, [rcx + rcx*2]
0xed75:	lea	rcx, [rdx + rcx*8]
0xed79:	mov	qword ptr [rsp + 0x18], rcx
0xed7e:	jmp	0xec1e


0xede5:	mov	rax, qword ptr [r14 + 0xb8]
0xedec:	mov	rax, qword ptr [rax + r15]
0xedf0:	test	rax, rax
0xedf3:	je	0xeeff


0xedc4:	cmp	qword ptr [r14 + 0x30], r13
0xedc8:	jle	0xf051


0xeb01:	cmp	qword ptr [r14 + 0x58], r12
0xeb05:	mov	qword ptr [rsp + 0x18], rdx
0xeb0a:	mov	qword ptr [rsp + 0x10], r9
0xeb0f:	jl	0xef68


0xea70:	lea	rsi, [r8 + r11]
0xea74:	lea	rdi, [r8 + rbx]
0xea78:	mov	qword ptr [rsp + 0x20], r9
0xea7d:	mov	qword ptr [rsp + 0x18], r11
0xea82:	mov	qword ptr [rsp + 0x10], r8
0xea87:	call	0x1b90


0x11370:	mov	rax, qword ptr [r15 + 0x18]
0x11374:	sub	rax, qword ptr [r15 + 0x10]
0x11378:	test	rax, rax
0x1137b:	lea	r9, [rbp + rax]
0x11380:	je	0x114e0


0x114d7:	mov	rax, r15
0x114da:	jmp	0x114c0


0x11587:	xor	eax, eax
0x11589:	jmp	0x1155a


0xf76c:	xor	r12d, r12d
0xf76f:	xor	ebp, ebp
0xf771:	nop	dword ptr [rax]
0xf778:	cmp	qword ptr [rsp + 0x270], 0
0xf781:	mov	dword ptr [rsp + 0x58], 1
0xf789:	je	0xfb10


0xf75b:	test	r12, r12
0xf75e:	mov	dword ptr [rsp + 0x5c], 1
0xf766:	jne	0x10189


0xec1e:	add	rbx, qword ptr [rsp + 8]
0xec23:	mov	edx, dword ptr [r14 + 0xa0]
0xec2a:	mov	rdi, r14
0xec2d:	sub	rbx, rax
0xec30:	lea	rsi, [rbx - 1]
0xec34:	call	0xa9d0


0xeeff:	add	rbx, 1
0xef03:	add	r15, 8
0xef07:	cmp	qword ptr [rsp + 8], rbx
0xef0c:	jge	0xedb8


0xedf9:	mov	rcx, qword ptr [rax + 0x10]
0xedfd:	test	rcx, rcx
0xee00:	jle	0xeeff


0xf051:	cmp	qword ptr [r14 + 0x58], r13
0xf055:	jle	0xef12


0xedce:	movzx	ecx, byte ptr [r11 + rbx - 1]
0xedd4:	lea	rax, [r13 + 1]
0xedd8:	cmp	byte ptr [r11 + r13], cl
0xeddc:	jne	0xef12


0xef68:	mov	rcx, rbx
0xef6b:	mov	rbx, r13
0xef6e:	mov	r13, r8
0xef71:	cmp	qword ptr [rbx + 0x20], rbp
0xef75:	jg	0xea29


0xeb15:	mov	rsi, r12
0xeb18:	mov	rdi, r14
0xeb1b:	mov	qword ptr [rsp + 0x20], r11
0xeb20:	call	0x8280


0x1b90:	jmp	qword ptr [rip + 0x2192e2]


0x114e0:	mov	rax, qword ptr [r12 + 0x28]
0x114e5:	mov	rdi, qword ptr [rsp + 0x30]
0x114ea:	mov	rax, qword ptr [rax + rdi + 0x10]
0x114ef:	mov	r10, qword ptr [rax]
0x114f2:	jmp	0x11394


0x11386:	mov	rax, qword ptr [r12 + 0x18]
0x1138b:	mov	rsi, qword ptr [rsp + 0x28]
0x11390:	mov	r10, qword ptr [rax + rsi]
0x11394:	cmp	r9, qword ptr [rbx + 0x18]
0x11398:	jg	0x114d7


0x114c0:	add	r13, 1
0x114c4:	cmp	byte ptr [rax + 0x20], 0
0x114c8:	lea	r15, [rax + 0x28]
0x114cc:	je	0x11500


0x1155a:	mov	rdi, qword ptr [rsp + 0x90]
0x11562:	mov	dword ptr [rsp + 8], eax
0x11566:	call	0x19d0


0xef12:	mov	r13, r11
0xef15:	jmp	0xea29


0xedb8:	mov	rax, rbx
0xedbb:	sub	rax, qword ptr [r12]
0xedbf:	test	rax, rax
0xedc2:	jle	0xede5


0xee06:	mov	rdi, qword ptr [rax + 0x18]
0xee0a:	mov	rax, qword ptr [rsp + 0x50]
0xee0f:	xor	edx, edx
0xee11:	mov	r8, qword ptr [rsp + 0x58]
0xee16:	mov	rsi, qword ptr [rax]
0xee19:	jmp	0xee2d


0xf05b:	lea	esi, [r13 + 1]
0xf05f:	mov	rdi, r14
0xf062:	call	0x8130


0xede2:	mov	r13, rax
0xede5:	mov	rax, qword ptr [r14 + 0xb8]
0xedec:	mov	rax, qword ptr [rax + r15]
0xedf0:	test	rax, rax
0xedf3:	je	0xeeff


0xef7b:	test	rbp, rbp
0xef7e:	mov	r12, rcx
0xef81:	je	0xed92




0x11394:	cmp	r9, qword ptr [rbx + 0x18]
0x11398:	jg	0x114d7


0x1139e:	mov	rax, qword ptr [rbx]
0x113a1:	mov	rax, qword ptr [rax + r9*8]
0x113a5:	test	rax, rax
0x113a8:	je	0x114d7


0x11500:	mov	r15, rbx
0x11503:	jmp	0x10fa8


0xee2d:	mov	rbp, qword ptr [rdi + rdx*8]
0xee31:	mov	rax, rbp
0xee34:	shl	rax, 4
0xee38:	add	rax, rsi
0xee3b:	cmp	byte ptr [rax + 8], 9
0xee3f:	jne	0xee20


0xef87:	mov	r15, r11
0xef8a:	jmp	0xed8e


0x113ae:	mov	rdi, qword ptr [rax + 0x10]
0x113b2:	lea	rsi, [rax + 0x18]
0x113b6:	mov	rdx, r10
0x113b9:	call	0x8bf0


0xee41:	cmp	r8, qword ptr [rax]
0xee44:	jne	0xee20


0xee20:	add	rdx, 1
0xee24:	cmp	rcx, rdx
0xee27:	je	0xeeff


0xed8e:	lea	r11, [r15 + 1]
0xed92:	cmp	qword ptr [rsp + 8], r11
0xed97:	jl	0xea29


0xee46:	cmp	rbp, -1
0xee4a:	je	0xeeff


0xee50:	mov	rsi, qword ptr [r12 + 0x10]
0xee55:	mov	rcx, qword ptr [r12]
0xee59:	test	rsi, rsi
0xee5c:	je	0xef20


0xef20:	mov	rsi, rbx
0xef23:	mov	edi, 0x18
0xef28:	mov	qword ptr [rsp + 0x18], r11
0xef2d:	sub	rsi, rcx
0xef30:	mov	qword ptr [rsp + 0x10], rcx
0xef35:	add	rsi, 1
0xef39:	call	0x1bc0


0xee62:	mov	qword ptr [rsp + 0x10], r11
0xee67:	mov	rdx, qword ptr [r12 + 8]
0xee6c:	sub	rsp, 8
0xee70:	push	9
0xee72:	mov	r9, rbx
0xee75:	mov	r8, rbp
0xee78:	mov	rdi, r14
0xee7b:	call	0xd600


0xeb25:	test	eax, eax
0xeb27:	jne	0xeb68


0xeb29:	mov	r8, qword ptr [r14 + 8]
0xeb2d:	mov	rdx, qword ptr [rsp + 0x18]
0xeb32:	mov	r9, qword ptr [rsp + 0x10]
0xeb37:	mov	r11, qword ptr [rsp + 0x20]
0xeb3c:	jmp	0xea70


0xeb68:	mov	rbx, qword ptr [rsp + 0xa8]
0xeb70:	xor	rbx, qword ptr fs:[0x28]
0xeb79:	jne	0xf0cc


0x7392:	cmp	eax, -1
0x7395:	je	0x72fe


0x739b:	test	eax, eax
0x739d:	jne	0x73a7


0x739f:	mov	esi, dword ptr [rsp + 8]
0x73a3:	test	esi, esi
0x73a5:	jne	0x7425


0x73a7:	cmp	r15, 0x3f
0x73ab:	jg	0x73c0


0x73ad:	movzx	eax, word ptr [rsp + 0x26]
0x73b2:	and	word ptr [r13 + 0x22], ax
0x73b7:	nop	word ptr [rax + rax]
0x73c0:	add	r13, 0x28
0x73c4:	cmp	byte ptr [r13 - 8], 0
0x73c9:	jne	0x7350


0x86e5:	test	al, al
0x86e7:	je	0x872b


0x872b:	mov	eax, 0xc
0x8730:	add	rsp, 0x18
0x8734:	pop	rbx
0x8735:	pop	rbp
0x8736:	pop	r12
0x8738:	pop	r13
0x873a:	pop	r14
0x873c:	pop	r15
0x873e:	ret	


0x86e9:	mov	rax, qword ptr [r14 + 0x28]
0x86ed:	mov	edx, ebp
0x86ef:	mov	rdi, r14
0x86f2:	mov	rax, qword ptr [rax + r12 + 0x10]
0x86f7:	mov	r9, qword ptr [rax + 8]
0x86fb:	mov	rsi, r9
0x86fe:	mov	qword ptr [rsp], r9
0x8702:	call	0x8560


0x8864:	mov	edx, eax
0x8866:	xor	eax, eax
0x8868:	test	dl, dl
0x886a:	jne	0x8730


0x8870:	jmp	0x872b


0x9053:	mov	ebx, eax
0x9055:	mov	rax, qword ptr [rbp]
0x9059:	mov	r9, qword ptr [rsp + 0x30]
0x905e:	mov	rcx, qword ptr [rsp + 0x20]
0x9063:	mov	r8, r15
0x9066:	mov	rdx, r12
0x9069:	mov	rdi, r13
0x906c:	mov	rsi, qword ptr [rax + r14*8]
0x9070:	call	0x7460


0x9075:	cmp	ebx, eax
0x9077:	je	0x90f0


0x90f0:	mov	rax, qword ptr [rsp + 0x38]
0x90f5:	add	r14, 1
0x90f9:	cmp	r14, qword ptr [rax]
0x90fc:	jl	0x9010


0x9079:	mov	eax, 1
0x907e:	add	rsp, 0x48
0x9082:	pop	rbx
0x9083:	pop	rbp
0x9084:	pop	r12
0x9086:	pop	r13
0x9088:	pop	r14
0x908a:	pop	r15
0x908c:	ret	


0x9010:	mov	rax, qword ptr [rbp]
0x9014:	mov	rdx, qword ptr [r13 + 0xd8]
0x901b:	mov	rdi, r13
0x901e:	mov	r9, qword ptr [rsp + 0x28]
0x9023:	mov	r8, qword ptr [rsp + 0x18]
0x9028:	mov	rcx, qword ptr [rsp + 0x10]
0x902d:	mov	rsi, qword ptr [rax + r14*8]
0x9031:	lea	rax, [rsi + rsi*4]
0x9035:	lea	rax, [rdx + rax*8]
0x9039:	mov	rdx, qword ptr [rsp + 8]
0x903e:	mov	rax, qword ptr [rax]
0x9041:	shl	rax, 4
0x9045:	add	rax, qword ptr [rdx]
0x9048:	mov	r12, qword ptr [rax]
0x904b:	mov	rdx, r12
0x904e:	call	0x7460


0xb318:	jmp	0xadd3


0x11790:	cmp	byte ptr [rsp + 8], 0x15
0x11795:	mov	eax, 0xb
0x1179a:	je	0x1163e


0x117a0:	jmp	0x115f1


0x9fe8:	test	al, al
0x9fea:	je	0x9fb8


0xa285:	test	al, al
0xa287:	jne	0xa38f


0xadcf:	test	eax, eax
0xadd1:	jne	0xaddd


0xaddd:	mov	rcx, qword ptr [rsp + 0x38]
0xade2:	xor	rcx, qword ptr fs:[0x28]
0xadeb:	jne	0xb43a


0xae4d:	jmp	0xadd3


0xa465:	test	eax, eax
0xa467:	mov	dword ptr [rsp + 0x1c], eax
0xa46b:	jne	0xa4b8


0xa46d:	mov	rdi, qword ptr [rsp + 8]
0xa472:	mov	rdx, r13
0xa475:	mov	rsi, r14
0xa478:	call	0xa200


0xa4b8:	mov	rcx, qword ptr [rsp + 0x38]
0xa4bd:	xor	rcx, qword ptr fs:[0x28]
0xa4c6:	jne	0xa4d7


0xf1a1:	test	eax, eax
0xf1a3:	mov	dword ptr [r13], eax
0xf1a7:	jne	0xf2c0


0xf1ad:	mov	rax, qword ptr [rbx + 0x48]
0xf1b1:	mov	edx, dword ptr [rbx + 0xa0]
0xf1b7:	mov	rdi, rbx
0xf1ba:	lea	rsi, [rax - 1]
0xf1be:	call	0xa9d0


0xf286:	test	eax, eax
0xf288:	mov	dword ptr [r13], eax
0xf28c:	jne	0xf2c0


0xf28e:	test	byte ptr [rbp + 0x68], 0x40
0xf292:	je	0xf145


0xf298:	mov	rdx, r15
0xf29b:	mov	rsi, r14
0xf29e:	mov	rdi, rbx
0xf2a1:	call	0xe7f0


0xf2a6:	test	eax, eax
0xf2a8:	mov	dword ptr [r13], eax
0xf2ac:	jne	0xf2c0


0xf2ae:	mov	rax, qword ptr [rbx + 0xb8]
0xf2b5:	mov	rbp, qword ptr [rax + r12*8]
0xf2b9:	jmp	0xf145


0x151dd:	add	rsp, 0x20
0x151e1:	test	eax, eax
0x151e3:	setne	al
0x151e6:	add	rsp, 0x18
0x151ea:	pop	rbx
0x151eb:	movzx	eax, al
0x151ee:	pop	rbp
0x151ef:	pop	r12
0x151f1:	pop	r13
0x151f3:	ret	


0x20b8:	mov	byte ptr [rip + 0x219009], 1
0x20bf:	pop	rbp
0x20c0:	ret	


0xf067:	test	eax, eax
0xf069:	jne	0xeb68


0xf06f:	mov	r11, qword ptr [r14 + 8]
0xf073:	jmp	0xedce


0x82da:	test	eax, eax
0x82dc:	je	0x82af


0x82de:	jmp	0x82b6


0x82b6:	pop	rbx
0x82b7:	pop	rbp
0x82b8:	pop	r12
0x82ba:	ret	


0x82ab:	test	eax, eax
0x82ad:	jne	0x82b6


0x9d1d:	test	rax, rax
0x9d20:	mov	qword ptr [rbx + 0x10], rax
0x9d24:	je	0x9cf2


0x9d26:	mov	qword ptr [rax], rbx
0x9d29:	jmp	0x9cf2


0x9d3d:	test	rax, rax
0x9d40:	mov	qword ptr [rbx + 8], rax
0x9d44:	je	0x9ce3


0x9d46:	mov	qword ptr [rax], rbx
0x9d49:	jmp	0x9ce3


0xa47d:	mov	rdi, qword ptr [rsp + 0x30]
0xa482:	mov	qword ptr [rbx + r15*8], rax
0xa486:	call	0x19d0


0x10e78:	mov	qword ptr [r14], rax
0x10e7b:	mov	eax, dword ptr [rsp + 0x5c]
0x10e7f:	test	eax, eax
0x10e81:	jne	0x10dd8


0x10e87:	cmp	qword ptr [rsp + 0x10], 0
0x10e8d:	je	0x10dd8


0x10e93:	mov	rax, qword ptr [rsp + 8]
0x10e98:	mov	rax, qword ptr [rax + 0xb8]
0x10e9f:	mov	rdx, qword ptr [rax + rbp*8]
0x10ea3:	xor	eax, eax
0x10ea5:	test	byte ptr [rdx + 0x68], 0x40
0x10ea9:	je	0x10dd8


0x10e20:	mov	rdx, rax
0x10e23:	mov	eax, dword ptr [rsp + 0x60]
0x10e27:	test	eax, eax
0x10e29:	jne	0x10dd8


0x10e2b:	mov	r15, qword ptr [rdx + 0x38]
0x10e2f:	lea	r14, [rdx + 0x38]
0x10e33:	test	r15, r15
0x10e36:	je	0x11040


0x11040:	mov	rdi, qword ptr [rbx + 8]
0x11044:	mov	qword ptr [rdx + 0x40], 0
0x1104c:	mov	qword ptr [rsp + 0x20], rdx
0x11051:	mov	qword ptr [rdx + 0x38], rdi
0x11055:	shl	rdi, 3
0x11059:	call	0x1c20


0x10e3c:	mov	rsi, qword ptr [rsp + 0x10]
0x10e41:	mov	rdx, r14
0x10e44:	mov	rdi, rbx
0x10e47:	call	0x9700


0x10e4c:	test	eax, eax
0x10e4e:	mov	dword ptr [rsp + 0x5c], eax
0x10e52:	jne	0x10dd8


0x10e54:	cmp	qword ptr [r13 + 0x28], 0
0x10e59:	jne	0x110d0


0x10e5f:	mov	r14, qword ptr [rsp + 0x18]
0x10e64:	add	r14, qword ptr [r13]
0x10e68:	lea	rdi, [rsp + 0x5c]
0x10e6d:	mov	rdx, rbx
0x10e70:	mov	rsi, r12
0x10e73:	call	0xa200


0x110d0:	mov	rax, qword ptr [rsp + 8]
0x110d5:	mov	rax, qword ptr [rax + 0xd8]
0x110dc:	mov	qword ptr [rsp + 0x20], rax
0x110e1:	jle	0x111bb


0x111bb:	mov	dword ptr [rsp + 0x5c], 0
0x111c3:	jmp	0x10e5f


0x110e7:	xor	r15d, r15d
0x110ea:	nop	word ptr [rax + rax]
0x110f0:	mov	rax, qword ptr [r13 + 0x30]
0x110f4:	mov	rdi, qword ptr [rsp + 0x20]
0x110f9:	mov	rax, qword ptr [rax + r15*8]
0x110fd:	lea	rax, [rax + rax*4]
0x11101:	lea	rdx, [rdi + rax*8]
0x11105:	cmp	rbp, qword ptr [rdx + 0x10]
0x11109:	jle	0x111ad


0x111ad:	add	r15, 1
0x111b1:	cmp	r15, qword ptr [r13 + 0x28]
0x111b5:	jl	0x110f0


0x1110f:	cmp	rbp, qword ptr [rdx + 8]
0x11113:	jg	0x111ad


0x110f0:	mov	rax, qword ptr [r13 + 0x30]
0x110f4:	mov	rdi, qword ptr [rsp + 0x20]
0x110f9:	mov	rax, qword ptr [rax + r15*8]
0x110fd:	lea	rax, [rax + rax*4]
0x11101:	lea	rdx, [rdi + rax*8]
0x11105:	cmp	rbp, qword ptr [rdx + 0x10]
0x11109:	jle	0x111ad


0x11119:	mov	rcx, qword ptr [rdx]
0x1111c:	mov	rax, qword ptr [r12]
0x11120:	mov	rsi, qword ptr [rbx + 8]
0x11124:	shl	rcx, 4
0x11128:	cmp	rbp, qword ptr [rdx + 0x18]
0x1112c:	mov	r8, qword ptr [rax + rcx]
0x11130:	je	0x111d0


0x111d0:	test	rsi, rsi
0x111d3:	jle	0x111ad


0x11136:	xor	r14d, r14d
0x11139:	test	rsi, rsi
0x1113c:	jle	0x111ad


0x111d5:	mov	r10, qword ptr [rbx + 0x10]
0x111d9:	mov	r9, -1
0x111e0:	lea	r11, [r10 + rsi*8]
0x111e4:	mov	rcx, r10
0x111e7:	mov	rsi, r9
0x111ea:	jmp	0x11206


0x1113e:	mov	qword ptr [rsp + 0x28], rbp
0x11143:	mov	rbp, r8
0x11146:	jmp	0x1115e


0x11206:	mov	rdi, qword ptr [rcx]
0x11209:	mov	rdx, rdi
0x1120c:	shl	rdx, 4
0x11210:	add	rdx, rax
0x11213:	movzx	r14d, byte ptr [rdx + 8]
0x11218:	cmp	r14d, 8
0x1121c:	jne	0x111f0


0x1115e:	mov	rdx, qword ptr [rbx + 0x10]
0x11162:	mov	rsi, qword ptr [rdx + r14*8]
0x11166:	mov	rdx, rsi
0x11169:	shl	rdx, 4
0x1116d:	add	rax, rdx
0x11170:	movzx	edx, byte ptr [rax + 8]
0x11174:	sub	edx, 8
0x11177:	cmp	edx, 1
0x1117a:	ja	0x11150


0x1121e:	cmp	r8, qword ptr [rdx]
0x11221:	cmove	rsi, rdi
0x11225:	add	rcx, 8
0x11229:	cmp	r11, rcx
0x1122c:	jne	0x11206


0x111f0:	cmp	r14d, 9
0x111f4:	jne	0x111fd


0x1117c:	cmp	rbp, qword ptr [rax]
0x1117f:	jne	0x11150


0x11150:	add	r14, 1
0x11154:	cmp	r14, qword ptr [rbx + 8]
0x11158:	jge	0x111a8


0x1122e:	test	rsi, rsi
0x11231:	mov	r14, r9
0x11234:	mov	qword ptr [rsp + 0x28], r9
0x11239:	js	0x11300


0x111f6:	cmp	r8, qword ptr [rdx]
0x111f9:	cmove	r9, rdi
0x111fd:	add	rcx, 8
0x11201:	cmp	r11, rcx
0x11204:	je	0x1122e


0x111fd:	add	rcx, 8
0x11201:	cmp	r11, rcx
0x11204:	je	0x1122e


0x11181:	mov	rcx, qword ptr [rsp + 0x10]
0x11186:	mov	rdx, rbx
0x11189:	mov	rdi, r12
0x1118c:	call	0xb440


0x1115a:	mov	rax, qword ptr [r12]
0x1115e:	mov	rdx, qword ptr [rbx + 0x10]
0x11162:	mov	rsi, qword ptr [rdx + r14*8]
0x11166:	mov	rdx, rsi
0x11169:	shl	rdx, 4
0x1116d:	add	rax, rdx
0x11170:	movzx	edx, byte ptr [rax + 8]
0x11174:	sub	edx, 8
0x11177:	cmp	edx, 1
0x1117a:	ja	0x11150


0x111a8:	mov	rbp, qword ptr [rsp + 0x28]
0x111ad:	add	r15, 1
0x111b1:	cmp	r15, qword ptr [r13 + 0x28]
0x111b5:	jl	0x110f0


0x11300:	cmp	qword ptr [rsp + 0x28], 0
0x11306:	jns	0x1126f


0x1123f:	mov	rcx, qword ptr [rsp + 0x10]
0x11244:	mov	rdx, rbx
0x11247:	mov	rdi, r12
0x1124a:	call	0xb440


0x1130c:	jmp	0x111ad


0x1126f:	xor	r14d, r14d
0x11272:	mov	qword ptr [rsp + 0x30], rbp
0x11277:	mov	rbp, r14
0x1127a:	mov	r14, qword ptr [rsp + 0x28]
0x1127f:	jmp	0x1129a


0x1129a:	mov	r10, qword ptr [r10 + rbp*8]
0x1129e:	mov	rax, qword ptr [r12 + 0x38]
0x112a3:	mov	rdx, r14
0x112a6:	lea	r9, [r10 + r10*2]
0x112aa:	shl	r9, 3
0x112ae:	add	rax, r9
0x112b1:	mov	rdi, qword ptr [rax + 8]
0x112b5:	lea	rsi, [rax + 0x10]
0x112b9:	call	0x8bf0


0xf860:	test	eax, eax
0xf862:	mov	dword ptr [rsp + 0x5c], eax
0xf866:	jne	0x10160


0xf86c:	mov	rdi, qword ptr [rsp + 0x38]
0xf871:	lea	rax, [rdi + 0xb8]
0xf878:	mov	qword ptr [rsp + 0x1a0], rax
0xf880:	movzx	eax, byte ptr [rdi + 0xb0]
0xf887:	mov	byte ptr [rsp + 8], al
0xf88b:	shr	al, 4
0xf88e:	and	eax, 1
0xf891:	cmp	byte ptr [rsp + 0x1ab], 0
0xf899:	mov	byte ptr [rsp + 0x1ae], al
0xf8a0:	jne	0xf8c5


0x10160:	mov	rdi, qword ptr [rsp + 0x1d8]
0x10168:	call	0x19d0


0xf8a2:	mov	rsi, qword ptr [rsp + 0x38]
0xf8a7:	mov	rax, qword ptr [rsp + 0x78]
0xf8ac:	cmp	dword ptr [rsi + 0xb4], 1
0xf8b3:	mov	qword ptr [rsp + 0x128], rax
0xf8bb:	mov	rax, qword ptr [rsp + 0x88]
0xf8c3:	jle	0xf8c7


0xf8c5:	xor	eax, eax
0xf8c7:	mov	qword ptr [rsp + 0x150], rax
0xf8cf:	mov	qword ptr [rsp + 0x158], rax
0xf8d7:	mov	rax, qword ptr [rsp + 0x48]
0xf8dc:	mov	qword ptr [rsp + 0x188], r13
0xf8e4:	mov	qword ptr [rsp + 0x180], r13
0xf8ec:	movzx	eax, byte ptr [rax + 0x38]
0xf8f0:	mov	byte ptr [rsp + 8], al
0xf8f4:	shr	al, 7
0xf8f7:	mov	byte ptr [rsp + 0x1ad], al
0xf8fe:	mov	rax, qword ptr [rsp + 0x38]
0xf903:	mov	r14, qword ptr [rax + 0x98]
0xf90a:	mov	eax, dword ptr [rsp + 0x280]
0xf911:	mov	qword ptr [rsp + 0x1c8], -1
0xf91d:	lea	r13, [r14 + r14]
0xf921:	mov	dword ptr [rsp + 0x1c0], eax
0xf928:	test	r13, r13
0xf92b:	jle	0xf97f


0xf8c7:	mov	qword ptr [rsp + 0x150], rax
0xf8cf:	mov	qword ptr [rsp + 0x158], rax
0xf8d7:	mov	rax, qword ptr [rsp + 0x48]
0xf8dc:	mov	qword ptr [rsp + 0x188], r13
0xf8e4:	mov	qword ptr [rsp + 0x180], r13
0xf8ec:	movzx	eax, byte ptr [rax + 0x38]
0xf8f0:	mov	byte ptr [rsp + 8], al
0xf8f4:	shr	al, 7
0xf8f7:	mov	byte ptr [rsp + 0x1ad], al
0xf8fe:	mov	rax, qword ptr [rsp + 0x38]
0xf903:	mov	r14, qword ptr [rax + 0x98]
0xf90a:	mov	eax, dword ptr [rsp + 0x280]
0xf911:	mov	qword ptr [rsp + 0x1c8], -1
0xf91d:	lea	r13, [r14 + r14]
0xf921:	mov	dword ptr [rsp + 0x1c0], eax
0xf928:	test	r13, r13
0xf92b:	jle	0xf97f


0xf97f:	cmp	qword ptr [rsp + 0x270], 1
0xf988:	mov	qword ptr [rsp + 0x1f0], r13
0xf990:	mov	dword ptr [rsp + 0x200], 1
0xf99b:	mov	qword ptr [rsp + 0x210], r13
0xf9a3:	jbe	0x10ac8


0xf92d:	movabs	rax, 0x666666666666666
0xf937:	cmp	r13, rax
0xf93a:	jg	0x10680


0x10ac8:	mov	rax, qword ptr [rsp + 0x38]
0x10acd:	test	byte ptr [rax + 0xb0], 2
0x10ad4:	jne	0xf9a9


0xf9a9:	mov	rax, qword ptr [rsp + 0x160]
0xf9b1:	movabs	rdx, 0x1ffffffffffffffe
0xf9bb:	cmp	rax, rdx
0xf9be:	ja	0x10680


0xf940:	lea	rdi, [r13 + r14*8]
0xf945:	shl	rdi, 3
0xf949:	call	0x1c20


0x10680:	mov	rdi, qword ptr [rsp + 0x1d8]
0x10688:	mov	dword ptr [rsp + 0x5c], 0xc
0x10690:	jmp	0x10168


0x10ada:	mov	qword ptr [rsp + 0x1d8], 0
0x10ae6:	jmp	0xf9e5


0xf9c4:	lea	rdi, [rax*8 + 8]
0xf9cc:	call	0x1c20


0x10168:	call	0x19d0


0xf9e5:	mov	eax, dword ptr [rsp + 0x280]
0xf9ec:	mov	qword ptr [rsp + 0xd8], rbp
0xf9f4:	and	eax, 1
0xf9f7:	cmp	eax, 1
0xf9fa:	sbb	eax, eax
0xf9fc:	and	eax, 2
0xf9ff:	add	eax, 4
0xfa02:	mov	dword ptr [rsp + 0x190], eax
0xfa09:	xor	eax, eax
0xfa0b:	cmp	rbp, r12
0xfa0e:	setle	al
0xfa11:	lea	eax, [rax + rax - 1]
0xfa15:	mov	dword ptr [rsp + 0xac], eax
0xfa1c:	mov	rax, r12
0xfa1f:	cmovle	rax, rbp
0xfa23:	mov	qword ptr [rsp + 0x90], rax
0xfa2b:	mov	rax, r12
0xfa2e:	cmovge	rax, rbp
0xfa32:	cmp	qword ptr [rsp + 0x68], 0
0xfa38:	mov	qword ptr [rsp + 0x70], rax
0xfa3d:	mov	rax, qword ptr [rsp + 0x38]
0xfa42:	mov	esi, dword ptr [rax + 0xb4]
0xfa48:	mov	eax, 8
0xfa4d:	mov	dword ptr [rsp + 0xc8], esi
0xfa54:	je	0xfa8f


0xfa8f:	cmp	rbp, qword ptr [rsp + 0x70]
0xfa94:	setg	cl
0xfa97:	cmp	rbp, qword ptr [rsp + 0x90]
0xfa9f:	setl	dl
0xfaa2:	or	cl, dl
0xfaa4:	jne	0x10579


0xfa56:	cmp	esi, 1
0xfa59:	mov	ecx, 4
0xfa5e:	je	0xfa7e


0xfaaa:	lea	rcx, [rsp + 0xd8]
0xfab2:	cmp	rbp, r12
0xfab5:	mov	edx, 0
0xfaba:	cmovle	rdx, rcx
0xfabe:	test	rdx, rdx
0xfac1:	mov	qword ptr [rsp + 0xc0], rdx
0xfac9:	setne	byte ptr [rsp + 0xcf]
0xfad1:	sub	eax, 4
0xfad4:	mov	dword ptr [rsp + 0xa8], eax
0xfadb:	lea	rax, [rsp + 0xd0]
0xfae3:	mov	qword ptr [rsp + 0x28], rax
0xfae8:	mov	eax, dword ptr [rsp + 0xa8]
0xfaef:	cmp	eax, 4
0xfaf2:	ja	0x106dd


0x10579:	mov	rdi, qword ptr [rsp + 0x1d8]
0x10581:	mov	dword ptr [rsp + 0x5c], 1
0x10589:	jmp	0x10168


0xfa7e:	xor	edx, edx
0xfa80:	cmp	rbp, r12
0xfa83:	movzx	eax, bl
0xfa86:	setle	dl
0xfa89:	or	eax, ecx
0xfa8b:	add	edx, edx
0xfa8d:	or	eax, edx
0xfa8f:	cmp	rbp, qword ptr [rsp + 0x70]
0xfa94:	setg	cl
0xfa97:	cmp	rbp, qword ptr [rsp + 0x90]
0xfa9f:	setl	dl
0xfaa2:	or	cl, dl
0xfaa4:	jne	0x10579


0xfa60:	mov	rax, qword ptr [rsp + 0x48]
0xfa65:	test	byte ptr [rax + 0x1a], 0x40
0xfa69:	jne	0x107ee


0xfaf8:	lea	rcx, [rip + 0x70c1]
0xfaff:	movsxd	rax, dword ptr [rcx + rax*4]
0xfb03:	add	rax, rcx
0xfb06:	jmp	rax


0x106dd:	mov	rbx, qword ptr [rsp + 0x68]
0x106e2:	mov	r13d, dword ptr [rsp + 0xac]
0x106ea:	mov	r14, qword ptr [rsp + 0x90]
0x106f2:	mov	r15, qword ptr [rsp + 0x70]
0x106f7:	mov	r12, qword ptr [rsp + 0x88]
0x106ff:	jmp	0x10748


0xfa6f:	cmp	qword ptr [rsp + 0xb0], 0
0xfa78:	jne	0x107ee


0x107ee:	xor	ecx, ecx
0x107f0:	jmp	0xfa7e


0x10748:	mov	rdx, rbp
0x1074b:	sub	rdx, qword ptr [rsp + 0x148]
0x10753:	cmp	qword ptr [rsp + 0x158], rdx
0x1075b:	ja	0x10708


0x1075d:	mov	edx, dword ptr [rsp + 0x280]
0x10764:	mov	rdi, qword ptr [rsp]
0x10768:	mov	rsi, rbp
0x1076b:	call	0xaca0


0x10708:	cmp	r12, rbp
0x1070b:	mov	rax, rbx
0x1070e:	jle	0x1071f


0x1071f:	cmp	byte ptr [rax], 0
0x10722:	jne	0xfbe8


0x10710:	mov	rax, qword ptr [rsp + 0x128]
0x10718:	movzx	eax, byte ptr [rax + rdx]
0x1071c:	add	rax, rbx
0x1071f:	cmp	byte ptr [rax], 0
0x10722:	jne	0xfbe8


0x10728:	movsxd	rax, r13d
0x1072b:	add	rbp, rax
0x1072e:	cmp	rbp, r14
0x10731:	mov	qword ptr [rsp + 0xd8], rbp
0x10739:	jl	0x10579


0xfbe8:	mov	edx, dword ptr [rsp + 0x280]
0xfbef:	mov	rdi, qword ptr [rsp]
0xfbf3:	mov	rsi, rbp
0xfbf6:	call	0xaca0


0x1073f:	cmp	rbp, r15
0x10742:	jg	0x10579


0xfbfb:	test	eax, eax
0xfbfd:	mov	dword ptr [rsp + 0x5c], eax
0xfc01:	jne	0x10160


0xfc07:	cmp	dword ptr [rsp + 0xc8], 1
0xfc0f:	je	0xfc2d


0xfc2d:	mov	rbx, qword ptr [rsp + 0x1b8]
0xfc35:	movzx	eax, byte ptr [rsp + 0x58]
0xfc3a:	mov	dword ptr [rsp + 0x200], 0
0xfc45:	mov	qword ptr [rsp + 0x1e8], 0
0xfc51:	mov	qword ptr [rsp + 0x1e0], 0
0xfc5d:	mov	dword ptr [rsp + 0xd0], 0
0xfc68:	mov	r14, qword ptr [rbx + 0x48]
0xfc6c:	and	eax, 1
0xfc6f:	mov	byte ptr [rsp + 0xce], al
0xfc76:	mov	rax, qword ptr [rsp + 0x168]
0xfc7e:	cmp	byte ptr [r14 + 0x68], 0
0xfc83:	mov	qword ptr [rsp + 8], rax
0xfc88:	js	0x10600


0xfc11:	cmp	qword ptr [rsp + 0x150], 0
0xfc1a:	je	0xfc2d


0x10600:	mov	edx, dword ptr [rsp + 0x1c0]
0x10607:	mov	rdi, qword ptr [rsp]
0x1060b:	lea	rsi, [rax - 1]
0x1060f:	call	0xa9d0


0xfc8e:	mov	rax, qword ptr [rsp + 0x1d8]
0xfc96:	test	rax, rax
0xfc99:	je	0xfcb2


0xfc1c:	mov	rax, qword ptr [rsp + 0x130]
0xfc24:	cmp	dword ptr [rax], -1
0xfc27:	je	0x10551


0xfcb2:	movzx	eax, byte ptr [rsp + 0xcf]
0xfcba:	mov	byte ptr [rsp + 0x18], al
0xfcbe:	movzx	eax, byte ptr [r14 + 0x68]
0xfcc3:	test	al, 0x10
0xfcc5:	mov	qword ptr [rsp + 0x20], -1
0xfcce:	mov	qword ptr [rsp + 0x30], 0
0xfcd7:	jne	0x10b60


0xfc9b:	cmp	qword ptr [rbx + 0x98], 0
0xfca3:	mov	rdi, qword ptr [rsp + 8]
0xfca8:	mov	qword ptr [rax + rdi*8], r14
0xfcac:	jne	0x10b9b


0x10551:	movsxd	rax, dword ptr [rsp + 0xac]
0x10559:	add	rbp, rax
0x1055c:	cmp	rbp, qword ptr [rsp + 0x90]
0x10564:	mov	qword ptr [rsp + 0xd8], rbp
0x1056c:	jl	0x10579


0xfcdd:	mov	rax, qword ptr [rsp + 0xc0]
0xfce5:	mov	r8, qword ptr [rsp + 0x168]
0xfced:	mov	qword ptr [rsp + 0x50], rax
0xfcf2:	lea	rax, [rsp + 0xe0]
0xfcfa:	mov	qword ptr [rsp + 0x60], rax
0xfcff:	lea	rax, [rsp + 0xd4]
0xfd07:	mov	qword ptr [rsp + 0x80], rax
0xfd0f:	jmp	0xfd6c


0x10b60:	cmp	byte ptr [r14 + 0x68], 0
0x10b65:	js	0x10bd6


0x10b9b:	lea	rbx, [r14 + 0x10]
0x10b9f:	lea	rbp, [r14 + 0x18]
0x10ba3:	mov	rdi, qword ptr [rsp]
0x10ba7:	xor	ecx, ecx
0x10ba9:	mov	rdx, rbp
0x10bac:	mov	rsi, rbx
0x10baf:	call	0xa880


0x1056e:	cmp	rbp, qword ptr [rsp + 0x70]
0x10573:	jle	0xfae8


0xfd6c:	cmp	qword ptr [rsp + 0x188], r8
0xfd74:	jle	0xfe64


0x10bd6:	mov	rsi, qword ptr [r14 + 0x10]
0x10bda:	mov	rcx, qword ptr [rsp + 8]
0x10bdf:	lea	rdx, [r14 + 0x18]
0x10be3:	mov	rdi, qword ptr [rsp]
0x10be7:	call	0xabd0


0x10b67:	mov	esi, dword ptr [rsp + 0x58]
0x10b6b:	mov	rax, qword ptr [rsp + 8]
0x10b70:	test	esi, esi
0x10b72:	mov	qword ptr [rsp + 0x20], rax
0x10b77:	je	0xfe76


0xfae8:	mov	eax, dword ptr [rsp + 0xa8]
0xfaef:	cmp	eax, 4
0xfaf2:	ja	0x106dd


0xfe64:	mov	rax, qword ptr [rsp + 0x50]
0xfe69:	test	rax, rax
0xfe6c:	je	0xfe76


0xfd7a:	mov	rax, qword ptr [rsp + 0x160]
0xfd82:	lea	rbx, [r8 + 1]
0xfd86:	cmp	rbx, rax
0xfd89:	jge	0x10230


0xfe76:	mov	rax, qword ptr [rsp + 0x20]
0xfe7b:	cmp	rax, -1
0xfe7f:	je	0x10540


0x10b7d:	mov	qword ptr [rsp + 0x30], 1
0x10b86:	jmp	0xfcdd


0xfe6e:	mov	rdi, qword ptr [rsp + 8]
0xfe73:	add	qword ptr [rax], rdi
0xfe76:	mov	rax, qword ptr [rsp + 0x20]
0xfe7b:	cmp	rax, -1
0xfe7f:	je	0x10540


0xfd8f:	mov	rax, qword ptr [rsp + 0x150]
0xfd97:	cmp	rbx, rax
0xfd9a:	jge	0x10520


0x10230:	cmp	rax, qword ptr [rsp + 0x178]
0x10238:	jge	0xfd8f


0x10540:	mov	rdi, qword ptr [rsp]
0x10544:	call	0x8a80


0xfe85:	cmp	rax, -2
0xfe89:	je	0x10680


0xfda0:	test	byte ptr [r14 + 0x68], 0x20
0xfda5:	jne	0x10270


0x10520:	cmp	rax, qword ptr [rsp + 0x178]
0x10528:	jge	0xfda0


0x1023e:	mov	rdi, qword ptr [rsp]
0x10242:	lea	esi, [rbx + 1]
0x10245:	call	0x8130


0xfe8f:	mov	rax, qword ptr [rsp + 0x20]
0xfe94:	mov	qword ptr [rsp + 0x1c8], rax
0xfe9c:	mov	rax, qword ptr [rsp + 0x48]
0xfea1:	test	byte ptr [rax + 0x38], 0x10
0xfea5:	jne	0x10660


0xfdab:	lea	rax, [r8 + 1]
0xfdaf:	mov	qword ptr [rsp + 0x168], rax
0xfdb7:	mov	rax, qword ptr [rsp + 0x128]
0xfdbf:	movzx	r13d, byte ptr [rax + r8]
0xfdc4:	mov	rax, qword ptr [r14 + 0x58]
0xfdc8:	test	rax, rax
0xfdcb:	je	0x104e0


0x10270:	cmp	qword ptr [r14 + 0x10], 0
0x10275:	mov	r13, qword ptr [rsp + 0x1b8]
0x1027d:	jle	0x105ab


0x1052e:	jmp	0x1023e


0xfeab:	cmp	qword ptr [rsp + 0x270], 1
0xfeb4:	jbe	0x107ac


0x10660:	mov	rax, qword ptr [rsp + 0x38]
0x10665:	cmp	qword ptr [rax + 0x98], 0
0x1066d:	je	0x1089c


0x104e0:	mov	rbp, qword ptr [r14 + 0x60]
0x104e4:	test	rbp, rbp
0x104e7:	je	0x10695


0xfdd1:	mov	r13, qword ptr [rax + r13*8]
0xfdd5:	cmp	qword ptr [rsp + 0x1d8], 0
0xfdde:	je	0xfdf4


0x105ab:	mov	dword ptr [rsp + 0xd0], 0
0x105b6:	jmp	0xfdab


0x10283:	lea	rax, [r13 + 0xd8]
0x1028a:	xor	r12d, r12d
0x1028d:	mov	qword ptr [rsp + 0xa0], rbx
0x10295:	mov	rbx, r12
0x10298:	mov	r12, r8
0x1029b:	mov	qword ptr [rsp + 0x40], rax
0x102a0:	jmp	0x103f8


0x107ac:	mov	rax, qword ptr [rsp + 0x38]
0x107b1:	cmp	qword ptr [rax + 0x98], 0
0x107b9:	je	0x1089c


0xfeba:	mov	rcx, qword ptr [rsp + 0x20]
0xfebf:	mov	rbx, qword ptr [rsp + 0x1d8]
0xfec7:	mov	rdi, qword ptr [rsp]
0xfecb:	mov	rax, qword ptr [rbx + rcx*8]
0xfecf:	mov	rsi, qword ptr [rax + 0x10]
0xfed3:	lea	rdx, [rax + 0x18]
0xfed7:	call	0xabd0


0x1089c:	cmp	qword ptr [rsp + 0x270], 0
0x108a5:	je	0x10160


0x10673:	jmp	0x107bf


0x10695:	mov	rdi, qword ptr [rsp + 0x1b8]
0x1069d:	mov	rsi, r14
0x106a0:	call	0xb680


0x104ed:	mov	rax, qword ptr [rsp + 0x168]
0x104f5:	mov	edx, dword ptr [rsp + 0x1c0]
0x104fc:	mov	rdi, qword ptr [rsp]
0x10500:	lea	rsi, [rax - 1]
0x10504:	call	0xa9d0


0xfdf4:	test	r13, r13
0xfdf7:	jne	0xfd18


0xfde0:	mov	rsi, qword ptr [rsp]
0xfde4:	mov	rdi, qword ptr [rsp + 0x28]
0xfde9:	mov	rdx, r13
0xfdec:	call	0xf0e0


0x103f8:	mov	rax, qword ptr [r14 + 0x18]
0x103fc:	mov	rbp, qword ptr [r13]
0x10400:	mov	r15, qword ptr [rax + rbx*8]
0x10404:	mov	rax, r15
0x10407:	shl	rax, 4
0x1040b:	add	rax, rbp
0x1040e:	test	byte ptr [rax + 0xa], 0x10
0x10412:	je	0x103ea


0x107bf:	mov	rcx, qword ptr [rsp + 0x20]
0x107c4:	mov	rbx, qword ptr [rsp + 0x1d8]
0x107cc:	mov	rdi, qword ptr [rsp]
0x107d0:	mov	rax, qword ptr [rbx + rcx*8]
0x107d4:	mov	rsi, qword ptr [rax + 0x10]
0x107d8:	lea	rdx, [rax + 0x18]
0x107dc:	call	0xabd0


0x108ab:	cmp	qword ptr [rsp + 0x270], 1
0x108b4:	je	0x10cd8


0xfdfd:	mov	ecx, dword ptr [rsp + 0xd0]
0xfe04:	mov	rdi, qword ptr [rsp + 0x1d8]
0xfe0c:	test	ecx, ecx
0xfe0e:	jne	0x106d0


0xfd18:	cmp	r14, r13
0xfd1b:	mov	r8, qword ptr [rsp + 0x168]
0xfd23:	sete	al
0xfd26:	and	byte ptr [rsp + 0x18], al
0xfd2a:	movzx	eax, byte ptr [r13 + 0x68]
0xfd2f:	cmove	rbx, qword ptr [rsp + 8]
0xfd35:	test	al, 0x10
0xfd37:	mov	qword ptr [rsp + 8], rbx
0xfd3c:	je	0xfd69


0x103ea:	add	rbx, 1
0x103ee:	cmp	rbx, qword ptr [r14 + 0x10]
0x103f2:	jge	0x105a0


0x10414:	mov	ecx, dword ptr [rax + 8]
0x10417:	test	ecx, 0x3ff00
0x1041d:	mov	dword ptr [rsp + 0x10], ecx
0x10421:	je	0x102e0


0x10cd8:	mov	rsi, qword ptr [rsp + 0xb8]
0x10ce0:	mov	rax, qword ptr [rsp + 0x1c8]
0x10ce8:	mov	qword ptr [rsi], 0
0x10cef:	mov	qword ptr [rsi + 8], rax
0x10cf3:	xor	eax, eax
0x10cf5:	jmp	0x10971


0x108ba:	mov	rsi, qword ptr [rsp + 0xb8]
0x108c2:	mov	rcx, qword ptr [rsp + 0x270]
0x108ca:	mov	rdx, -1
0x108d1:	shl	rcx, 4
0x108d5:	lea	rax, [rsi + 0x10]
0x108d9:	add	rcx, rsi
0x108dc:	mov	qword ptr [rax + 8], rdx
0x108e0:	mov	qword ptr [rax], rdx
0x108e3:	add	rax, 0x10
0x108e7:	cmp	rcx, rax
0x108ea:	jne	0x108dc


0xfe14:	test	rdi, rdi
0xfe17:	je	0xfe64


0x106d0:	mov	dword ptr [rsp + 0x5c], 0xc
0x106d8:	jmp	0x10168


0xfd69:	mov	r14, r13
0xfd6c:	cmp	qword ptr [rsp + 0x188], r8
0xfd74:	jle	0xfe64


0xfd3e:	test	al, al
0xfd40:	js	0x10200


0x105a0:	mov	rbx, qword ptr [rsp + 0xa0]
0x105a8:	mov	r8, r12
0x105ab:	mov	dword ptr [rsp + 0xd0], 0
0x105b6:	jmp	0xfdab


0x102e0:	mov	rcx, qword ptr [rsp]
0x102e4:	mov	rsi, qword ptr [rsp + 0x40]
0x102e9:	mov	r8, r12
0x102ec:	mov	rdx, r15
0x102ef:	mov	rdi, rbp
0x102f2:	call	0xd3a0


0x10427:	mov	edx, dword ptr [rsp + 0x1c0]
0x1042e:	mov	rdi, qword ptr [rsp]
0x10432:	mov	rsi, r12
0x10435:	call	0xa9d0


0x10971:	movzx	r11d, byte ptr [rsp + 0x1ac]
0x1097a:	mov	r10, qword ptr [rsp + 0x150]
0x10982:	xor	ecx, ecx
0x10984:	mov	r9, qword ptr [rsp + 0x138]
0x1098c:	mov	r8, qword ptr [rsp + 0x158]
0x10994:	mov	rdi, qword ptr [rsp + 0xd8]
0x1099c:	mov	rdx, qword ptr [rsp + 0xb8]
0x109a4:	jmp	0x109a9


0x108ec:	mov	rdi, qword ptr [rsp + 0xb8]
0x108f4:	mov	rax, qword ptr [rsp + 0x1c8]
0x108fc:	mov	qword ptr [rdi + 8], rax
0x10900:	mov	rax, qword ptr [rsp + 0x48]
0x10905:	mov	qword ptr [rdi], 0
0x1090c:	test	byte ptr [rax + 0x38], 0x10
0x10910:	jne	0x10cf3


0x108dc:	mov	qword ptr [rax + 8], rdx
0x108e0:	mov	qword ptr [rax], rdx
0x108e3:	add	rax, 0x10
0x108e7:	cmp	rcx, rax
0x108ea:	jne	0x108dc


0xfe19:	movzx	eax, byte ptr [rsp + 0xce]
0xfe21:	xor	eax, 1
0xfe24:	test	byte ptr [rsp + 0x30], al
0xfe28:	jne	0xfe64


0x10200:	mov	rsi, qword ptr [r13 + 0x10]
0x10204:	mov	rdi, qword ptr [rsp]
0x10208:	lea	rdx, [r13 + 0x18]
0x1020c:	mov	rcx, r8
0x1020f:	mov	qword ptr [rsp + 0x10], r8
0x10214:	call	0xabd0


0xfd46:	mov	eax, dword ptr [rsp + 0x58]
0xfd4a:	mov	qword ptr [rsp + 0x20], r8
0xfd4f:	test	eax, eax
0xfd51:	je	0xfe76


0x109a9:	cmp	rax, -1
0x109ad:	je	0x109c9


0x10916:	cmp	qword ptr [rsp + 0x270], 1
0x1091f:	je	0x10cf3


0x10cf3:	xor	eax, eax
0x10cf5:	jmp	0x10971


0xfe2a:	mov	rsi, qword ptr [rsp + 0x1e0]
0xfe32:	mov	rax, qword ptr [rsp + 0x168]
0xfe3a:	xor	ecx, ecx
0xfe3c:	jmp	0xfe53


0xfd57:	mov	qword ptr [rsp + 0x30], 1
0xfd60:	mov	qword ptr [rsp + 0x50], 0
0xfd69:	mov	r14, r13
0xfd6c:	cmp	qword ptr [rsp + 0x188], r8
0xfd74:	jle	0xfe64


0x109c9:	add	rcx, 1
0x109cd:	add	rdx, 0x10
0x109d1:	cmp	rcx, qword ptr [rsp + 0x270]
0x109d9:	jne	0x109a6


0x109af:	test	r11b, r11b
0x109b2:	mov	rsi, qword ptr [rdx + 8]
0x109b6:	jne	0x10cfa


0x10925:	mov	rax, qword ptr [rsp + 0x38]
0x1092a:	xor	r8d, r8d
0x1092d:	test	byte ptr [rax + 0xb0], 1
0x10934:	je	0x10945


0xfe53:	lea	rdx, [rax + 1]
0xfe57:	cmp	rsi, rdx
0xfe5a:	jge	0xfe40


0x109db:	cmp	qword ptr [rsp + 0x98], 0
0x109e4:	jle	0x10a25


0x109a6:	mov	rax, qword ptr [rdx]
0x109a9:	cmp	rax, -1
0x109ad:	je	0x109c9


0x109bc:	add	rax, rdi
0x109bf:	add	rsi, rdi
0x109c2:	mov	qword ptr [rdx], rax
0x109c5:	mov	qword ptr [rdx + 8], rsi
0x109c9:	add	rcx, 1
0x109cd:	add	rdx, 0x10
0x109d1:	cmp	rcx, qword ptr [rsp + 0x270]
0x109d9:	jne	0x109a6


0x10cfa:	cmp	r10, rax
0x10cfd:	je	0x10d1c


0x10945:	mov	rbx, qword ptr [rsp + 0xb8]
0x1094d:	mov	rdx, qword ptr [rsp + 0x270]
0x10955:	mov	rsi, qword ptr [rsp]
0x10959:	mov	rdi, qword ptr [rsp + 0x48]
0x1095e:	mov	rcx, rbx
0x10961:	call	0xdd60


0x10936:	xor	r8d, r8d
0x10939:	cmp	qword ptr [rax + 0x98], 0
0x10941:	setg	r8b
0x10945:	mov	rbx, qword ptr [rsp + 0xb8]
0x1094d:	mov	rdx, qword ptr [rsp + 0x270]
0x10955:	mov	rsi, qword ptr [rsp]
0x10959:	mov	rdi, qword ptr [rsp + 0x48]
0x1095e:	mov	rcx, rbx
0x10961:	call	0xdd60


0xfe5c:	test	cl, cl
0xfe5e:	jne	0x10d2e


0xfe40:	cmp	qword ptr [rdi + rdx*8], 0
0xfe45:	mov	rax, rdx
0xfe48:	mov	ecx, 1
0xfe4d:	jne	0x101c0


0x10a25:	mov	rax, qword ptr [rsp + 0x38]
0x10a2a:	mov	rdi, qword ptr [rsp + 0x1d8]
0x10a32:	mov	r9, qword ptr [rax + 0xe0]
0x10a39:	test	r9, r9
0x10a3c:	je	0x10168


0x109e6:	mov	rdx, qword ptr [rsp + 0x98]
0x109ee:	mov	rdi, qword ptr [rsp + 0xb8]
0x109f6:	mov	rax, rcx
0x109f9:	shl	rax, 4
0x109fd:	add	rdx, rcx
0x10a00:	lea	rax, [rdi + rax + 8]
0x10a05:	shl	rdx, 4
0x10a09:	lea	rsi, [rdi + rdx + 8]
0x10a0e:	mov	rdx, -1
0x10a15:	mov	qword ptr [rax - 8], rdx
0x10a19:	mov	qword ptr [rax], rdx
0x10a1c:	add	rax, 0x10
0x10a20:	cmp	rsi, rax
0x10a23:	jne	0x10a15


0x10d1c:	mov	rax, r8
0x10d1f:	jmp	0x10d03


0x10cff:	mov	rax, qword ptr [r9 + rax*8]
0x10d03:	cmp	r10, rsi
0x10d06:	mov	qword ptr [rdx], rax
0x10d09:	je	0x10d14


0x10d2e:	mov	qword ptr [rsp + 0x168], rax
0x10d36:	jmp	0xfe64


0x101c0:	mov	rsi, qword ptr [rsp]
0x101c4:	mov	rdi, qword ptr [rsp + 0x28]
0x101c9:	mov	qword ptr [rsp + 0x168], rdx
0x101d1:	xor	edx, edx
0x101d3:	call	0xf0e0


0x10a42:	mov	r10, qword ptr [rsp + 0xb8]
0x10a4a:	xor	r8d, r8d
0x10a4d:	lea	rdx, [r10 + 0x10]
0x10a51:	jmp	0x10a89


0x10a15:	mov	qword ptr [rax - 8], rdx
0x10a19:	mov	qword ptr [rax], rdx
0x10a1c:	add	rax, 0x10
0x10a20:	cmp	rsi, rax
0x10a23:	jne	0x10a15


0x10d03:	cmp	r10, rsi
0x10d06:	mov	qword ptr [rdx], rax
0x10d09:	je	0x10d14


0x10d14:	mov	rsi, r8
0x10d17:	jmp	0x109bc


0x10d0b:	mov	rsi, qword ptr [r9 + rsi*8]
0x10d0f:	jmp	0x109bc


0x10a89:	lea	rsi, [r8 + 1]
0x10a8d:	cmp	rsi, rcx
0x10a90:	jne	0x10a53


0x10a92:	jmp	0x10168


0x10a53:	mov	rax, qword ptr [r9 + rsi*8 - 8]
0x10a58:	cmp	rax, r8
0x10a5b:	je	0x10a82


0x10a82:	add	rdx, 0x10
0x10a86:	mov	r8, rsi
0x10a89:	lea	rsi, [r8 + 1]
0x10a8d:	cmp	rsi, rcx
0x10a90:	jne	0x10a53


0x10a5d:	add	rax, 1
0x10a61:	shl	rax, 4
0x10a65:	mov	rax, qword ptr [r10 + rax]
0x10a69:	mov	qword ptr [rdx], rax
0x10a6c:	mov	rax, qword ptr [r9 + rsi*8 - 8]
0x10a71:	add	rax, 1
0x10a75:	shl	rax, 4
0x10a79:	mov	rax, qword ptr [r10 + rax + 8]
0x10a7e:	mov	qword ptr [rdx + 8], rax
0x10a82:	add	rdx, 0x10
0x10a86:	mov	r8, rsi
0x10a89:	lea	rsi, [r8 + 1]
0x10a8d:	cmp	rsi, rcx
0x10a90:	jne	0x10a53


0x102f7:	test	eax, eax
0x102f9:	je	0x103e2


0x103e2:	mov	r12, qword ptr [rsp + 0x168]
0x103ea:	add	rbx, 1
0x103ee:	cmp	rbx, qword ptr [r14 + 0x10]
0x103f2:	jge	0x105a0


0x102ff:	movsxd	rbp, eax
0x10302:	add	rbp, qword ptr [rsp + 0x168]
0x1030a:	cmp	dword ptr [rsp + 0x200], eax
0x10311:	cmovge	eax, dword ptr [rsp + 0x200]
0x10319:	mov	rdi, qword ptr [rsp]
0x1031d:	mov	rsi, rbp
0x10320:	mov	dword ptr [rsp + 0x200], eax
0x10327:	call	0x8280


0x1032c:	test	eax, eax
0x1032e:	mov	dword ptr [rsp + 0xd4], eax
0x10335:	jne	0x105d0


0x1033b:	mov	rax, qword ptr [r13 + 0x18]
0x1033f:	lea	r12, [rbp*8]
0x10347:	mov	rax, qword ptr [rax + r15*8]
0x1034b:	mov	r15, qword ptr [rsp + 0x1d8]
0x10353:	lea	rdx, [rax + rax*2]
0x10357:	mov	rax, qword ptr [r13 + 0x30]
0x1035b:	add	r15, r12
0x1035e:	lea	rdx, [rax + rdx*8]
0x10362:	mov	rax, qword ptr [r15]
0x10365:	test	rax, rax
0x10368:	je	0x10468


0x105d0:	mov	rbx, qword ptr [rsp + 0xa0]
0x105d8:	mov	rdi, qword ptr [rsp + 0x1d8]
0x105e0:	test	rdi, rdi
0x105e3:	mov	dword ptr [rsp + 0xd0], eax
0x105ea:	je	0x106d0


0x10468:	movdqu	xmm0, xmmword ptr [rdx]
0x1046c:	lea	rsi, [rbp - 1]
0x10470:	mov	rdi, qword ptr [rsp]
0x10474:	movaps	xmmword ptr [rsp + 0xe0], xmm0
0x1047c:	mov	rax, qword ptr [rdx + 0x10]
0x10480:	mov	edx, dword ptr [rsp + 0x1c0]
0x10487:	mov	qword ptr [rsp + 0xf0], rax
0x1048f:	call	0xa9d0


0x1036e:	mov	rsi, qword ptr [rax + 0x50]
0x10372:	mov	rdi, qword ptr [rsp + 0x60]
0x10377:	call	0x9de0


0x105f0:	xor	r13d, r13d
0x105f3:	jmp	0xfde0


0x1037c:	test	eax, eax
0x1037e:	mov	dword ptr [rsp + 0xd4], eax
0x10385:	jne	0x105d0


0x1038b:	mov	edx, dword ptr [rsp + 0x1c0]
0x10392:	mov	rdi, qword ptr [rsp]
0x10396:	lea	rsi, [rbp - 1]
0x1039a:	call	0xa9d0


0x101d8:	mov	edx, dword ptr [rsp + 0xd0]
0x101df:	test	edx, edx
0x101e1:	jne	0x10b1d


0x101e7:	test	rax, rax
0x101ea:	jne	0x10b30


0x10b1d:	test	rax, rax
0x10b20:	mov	r13, rax
0x10b23:	jne	0xfd18


0x101f0:	mov	rdi, qword ptr [rsp + 0x1d8]
0x101f8:	jmp	0xfe2a


0x10b30:	mov	r13, rax
0x10b33:	jmp	0xfd18


0x10b29:	jmp	0xfe64


0xfdf1:	mov	r13, rax
0xfdf4:	test	r13, r13
0xfdf7:	jne	0xfd18


0x1024a:	test	eax, eax
0x1024c:	mov	dword ptr [rsp + 0xd0], eax
0x10253:	jne	0x10b38


0x10259:	test	byte ptr [r14 + 0x68], 0x20
0x1025e:	mov	r8, qword ptr [rsp + 0x168]
0x10266:	je	0xfdab


0x10b38:	cmp	eax, 0xc
0x10b3b:	je	0x10680


0x10b41:	lea	rcx, [rip + 0x6508]
0x10b48:	lea	rsi, [rip + 0x5f31]
0x10b4f:	lea	rdi, [rip + 0x5fde]
0x10b56:	mov	edx, 0x46c
0x10b5b:	call	0x1b50


0x10549:	mov	rbp, qword ptr [rsp + 0xd8]
0x10551:	movsxd	rax, dword ptr [rsp + 0xac]
0x10559:	add	rbp, rax
0x1055c:	cmp	rbp, qword ptr [rsp + 0x90]
0x10564:	mov	qword ptr [rsp + 0xd8], rbp
0x1056c:	jl	0x10579


0x10bb4:	test	eax, eax
0x10bb6:	mov	dword ptr [rsp + 0xd0], eax
0x10bbd:	jne	0x10c08


0x10bbf:	movzx	eax, byte ptr [r14 + 0x68]
0x10bc4:	test	al, 0x40
0x10bc6:	jne	0x10cb0


0x10c08:	cdqe	
0x10c0a:	mov	qword ptr [rsp + 0x20], rax
0x10c0f:	jmp	0xfe76


0x10bcc:	mov	byte ptr [rsp + 0x18], 0
0x10bd1:	jmp	0xfcc3


0x10cb0:	mov	rdi, qword ptr [rsp]
0x10cb4:	mov	rdx, rbp
0x10cb7:	mov	rsi, rbx
0x10cba:	call	0xe7f0


0xfcc3:	test	al, 0x10
0xfcc5:	mov	qword ptr [rsp + 0x20], -1
0xfcce:	mov	qword ptr [rsp + 0x30], 0
0xfcd7:	jne	0x10b60


0x10cbf:	test	eax, eax
0x10cc1:	mov	dword ptr [rsp + 0xd0], eax
0x10cc8:	jne	0x10c08


0x10cce:	movzx	eax, byte ptr [r14 + 0x68]
0x10cd3:	jmp	0x10bcc


0x10770:	test	eax, eax
0x10772:	jne	0x10158


0x10778:	mov	rdx, rbp
0x1077b:	sub	rdx, qword ptr [rsp + 0x148]
0x10783:	jmp	0x10708


0x10158:	mov	dword ptr [rsp + 0x5c], eax
0x1015c:	nop	dword ptr [rax]
0x10160:	mov	rdi, qword ptr [rsp + 0x1d8]
0x10168:	call	0x19d0


0x816d:	test	eax, eax
0x816f:	mov	ebp, eax
0x8171:	jne	0x822d


0x8177:	mov	rdi, qword ptr [rbx + 0xb8]
0x817e:	test	rdi, rdi
0x8181:	je	0x81a4


0x822d:	add	rsp, 8
0x8231:	mov	eax, ebp
0x8233:	pop	rbx
0x8234:	pop	rbp
0x8235:	ret	


0x81a4:	cmp	byte ptr [rbx + 0x88], 0
0x81ab:	mov	eax, dword ptr [rbx + 0x90]
0x81b1:	je	0x81d0


0x8183:	mov	rax, qword ptr [rbx + 0x40]
0x8187:	lea	rsi, [rax*8 + 8]
0x818f:	call	0x1c90


0x81d0:	cmp	eax, 1
0x81d3:	jg	0x8240


0x81b3:	cmp	eax, 1
0x81b6:	mov	rdi, rbx
0x81b9:	jle	0x8270


0x81d5:	mov	rcx, qword ptr [rbx + 0x78]
0x81d9:	test	rcx, rcx
0x81dc:	je	0x822d


0x8240:	mov	rdi, rbx
0x8243:	call	0x7940


0x8270:	call	0x78d0


0x81bf:	add	rsp, 8
0x81c3:	pop	rbx
0x81c4:	pop	rbp
0x81c5:	jmp	0x7b10


0x81de:	mov	rsi, qword ptr [rbx + 0x58]
0x81e2:	cmp	qword ptr [rbx + 0x40], rsi
0x81e6:	cmovle	rsi, qword ptr [rbx + 0x40]
0x81eb:	mov	rax, qword ptr [rbx + 0x30]
0x81ef:	cmp	rsi, rax
0x81f2:	jg	0x8204


0x81f4:	jmp	0x8225


0x8204:	mov	rdx, qword ptr [rbx]
0x8207:	add	rdx, rax
0x820a:	add	rdx, qword ptr [rbx + 0x28]
0x820e:	movzx	edx, byte ptr [rdx]
0x8211:	movzx	ecx, byte ptr [rcx + rdx]
0x8215:	mov	rdx, qword ptr [rbx + 8]
0x8219:	mov	byte ptr [rdx + rax], cl
0x821c:	add	rax, 1
0x8220:	cmp	rsi, rax
0x8223:	jne	0x8200


0x8225:	mov	qword ptr [rbx + 0x30], rax
0x8229:	mov	qword ptr [rbx + 0x38], rax
0x822d:	add	rsp, 8
0x8231:	mov	eax, ebp
0x8233:	pop	rbx
0x8234:	pop	rbp
0x8235:	ret	


0x8200:	mov	rcx, qword ptr [rbx + 0x78]
0x8204:	mov	rdx, qword ptr [rbx]
0x8207:	add	rdx, rax
0x820a:	add	rdx, qword ptr [rbx + 0x28]
0x820e:	movzx	edx, byte ptr [rdx]
0x8211:	movzx	ecx, byte ptr [rcx + rdx]
0x8215:	mov	rdx, qword ptr [rbx + 8]
0x8219:	mov	byte ptr [rdx + rax], cl
0x821c:	add	rax, 1
0x8220:	cmp	rsi, rax
0x8223:	jne	0x8200


0x8275:	add	rsp, 8
0x8279:	mov	eax, ebp
0x827b:	pop	rbx
0x827c:	pop	rbp
0x827d:	ret	


0x8248:	add	rsp, 8
0x824c:	mov	eax, ebp
0x824e:	pop	rbx
0x824f:	pop	rbp
0x8250:	ret	


0x11764:	cdqe	
0x11766:	add	rax, r11
0x11769:	mov	qword ptr [r10 + 0x48], rax
0x1176d:	jmp	0x116aa


0xd3df:	cmp	r11b, 5
0xd3e3:	mov	ebp, eax
0xd3e5:	je	0xd4a0


0xd4a0:	cmp	eax, 1
0xd4a3:	jle	0xd490


0xd3eb:	cmp	r11b, 6
0xd3ef:	jne	0xd490


0xd4a5:	mov	rax, qword ptr [rbx]
0xd4a8:	test	al, 0x40
0xd4aa:	je	0xd4c0


0xd3f5:	cmp	eax, 1
0xd3f8:	jle	0xd490


0xd4c0:	mov	rdx, qword ptr [r10 + 8]
0xd4c4:	cmp	byte ptr [rdx + r8], 0xa
0xd4c9:	jne	0xd4ac


0xd4ac:	test	al, 0x80
0xd4ae:	je	0xd492


0xd3fe:	mov	r13, qword ptr [r9]
0xd401:	mov	rsi, qword ptr [r13 + 0x40]
0xd405:	mov	rdx, qword ptr [r13 + 0x28]
0xd409:	test	rsi, rsi
0xd40c:	jne	0xd419


0xd4cb:	jmp	0xd490


0xd4b0:	mov	rax, qword ptr [r10 + 8]
0xd4b4:	cmp	byte ptr [rax + r8], 0
0xd4b9:	je	0xd490


0xd40e:	cmp	qword ptr [r13 + 0x48], 0
0xd413:	je	0xd508


0xd419:	mov	rax, qword ptr [r10 + 0x10]
0xd41d:	test	rdx, rdx
0xd420:	mov	r12d, dword ptr [rax + r8*4]
0xd424:	jle	0xd447


0xd4bb:	jmp	0xd492


0xd508:	test	rdx, rdx
0xd50b:	jne	0xd419


0xd447:	mov	rax, qword ptr [r13 + 0x48]
0xd44b:	test	rax, rax
0xd44e:	jle	0xd52c


0xd426:	mov	rcx, qword ptr [r13]
0xd42a:	cmp	r12d, dword ptr [rcx]
0xd42d:	je	0xd482


0xd511:	test	byte ptr [r13 + 0x20], 1
0xd516:	jne	0xd492


0xd52c:	test	rsi, rsi
0xd52f:	jle	0xd511


0xd454:	xor	ebx, ebx
0xd456:	jmp	0xd46e


0xd482:	test	byte ptr [r13 + 0x20], 1
0xd487:	je	0xd492


0xd42f:	xor	eax, eax
0xd431:	jmp	0xd43e


0xd51c:	jmp	0xd490


0xd531:	mov	rdx, qword ptr [r13 + 8]
0xd535:	xor	eax, eax
0xd537:	jmp	0xd549


0xd46e:	mov	rax, qword ptr [r13 + 0x18]
0xd472:	mov	edi, r12d
0xd475:	mov	rsi, qword ptr [rax + rbx*8]
0xd479:	call	0x1a60


0xd43e:	add	rax, 1
0xd442:	cmp	rax, rdx
0xd445:	jne	0xd438


0xd549:	cmp	r12d, dword ptr [rdx + rax*4]
0xd54d:	jl	0xd540


0x1a60:	jmp	qword ptr [rip + 0x21937a]


0xd438:	cmp	r12d, dword ptr [rcx + rax*4]
0xd43c:	je	0xd482


0xd540:	add	rax, 1
0xd544:	cmp	rax, rsi
0xd547:	je	0xd511


0xd54f:	mov	rcx, qword ptr [r13 + 0x10]
0xd553:	cmp	r12d, dword ptr [rcx + rax*4]
0xd557:	jg	0xd540




0xd559:	jmp	0xd482


0x115d0:	cmp	eax, 1
0x115d3:	jle	0x11618


0x115d5:	mov	rdx, qword ptr [r10 + 0x10]
0x115d9:	cdqe	
0x115db:	mov	dword ptr [rbx], 1
0x115e1:	add	rax, r12
0x115e4:	mov	edx, dword ptr [rdx + r12*4]
0x115e8:	mov	dword ptr [rbx + 8], edx
0x115eb:	mov	qword ptr [r10 + 0x48], rax
0x115ef:	xor	eax, eax
0x115f1:	mov	rcx, qword ptr [rsp + 0x18]
0x115f6:	xor	rcx, qword ptr fs:[0x28]
0x115ff:	jne	0x117e8


0x14975:	mov	rax, qword ptr [r12 + 0x50]
0x1497a:	cmp	qword ptr [r12 + 0x48], rax
0x1497f:	je	0x14999


0x14999:	mov	rsi, qword ptr [r12 + 0x58]
0x1499e:	cmp	rsi, rax
0x149a1:	je	0x149bb


0x14981:	lea	rdx, [rax + 0x18]
0x14985:	lea	rsi, [rax + 0x10]
0x14989:	mov	rcx, rbp
0x1498c:	mov	rdi, rbx
0x1498f:	call	0xce70


0x149bb:	mov	rsi, qword ptr [r12 + 0x60]
0x149c0:	cmp	rsi, rax
0x149c3:	je	0x149d8


0x149a3:	lea	rdx, [rsi + 0x18]
0x149a7:	mov	rcx, rbp
0x149aa:	add	rsi, 0x10
0x149ae:	mov	rdi, rbx
0x149b1:	call	0xce70


0x149d8:	or	byte ptr [rbx + 0x38], 8
0x149dc:	xor	eax, eax
0x149de:	pop	rbx
0x149df:	pop	rbp
0x149e0:	pop	r12
0x149e2:	ret	


0x149c5:	lea	rdx, [rsi + 0x18]
0x149c9:	mov	rcx, rbp
0x149cc:	add	rsi, 0x10
0x149d0:	mov	rdi, rbx
0x149d3:	call	0xce70


0x149b6:	mov	rax, qword ptr [r12 + 0x48]
0x149bb:	mov	rsi, qword ptr [r12 + 0x60]
0x149c0:	cmp	rsi, rax
0x149c3:	je	0x149d8


0x14994:	mov	rax, qword ptr [r12 + 0x48]
0x14999:	mov	rsi, qword ptr [r12 + 0x58]
0x1499e:	cmp	rsi, rax
0x149a1:	je	0x149bb


0x14c8c:	movzx	eax, byte ptr [r15 + 0x38]
0x14c91:	mov	r9, qword ptr [rsp + 0x20]
0x14c96:	mov	rdx, qword ptr [rsp + 0x18]
0x14c9b:	mov	rsi, qword ptr [rsp + 0x10]
0x14ca0:	mov	r8, qword ptr [rsp + 8]
0x14ca5:	jmp	0x14a81


0x27df:	mov	rdi, rbp
0x27e2:	call	0x22e0


0x27e7:	mov	r12, qword ptr [rbp + 8]
0x27eb:	lea	rax, [rsp + 0xb0]
0x27f3:	lea	rbp, [rsp + 0x30]
0x27f8:	mov	qword ptr [rsp + 0x10], 0
0x2801:	mov	qword ptr [rsp + 0x18], 0
0x280a:	mov	qword ptr [rsp + 0x20], 0
0x2813:	mov	qword ptr [rsp + 0x30], 0
0x281c:	mov	rdi, r12
0x281f:	mov	qword ptr [rsp + 0x38], 0
0x2828:	mov	qword ptr [rsp + 0x50], rax
0x282d:	mov	qword ptr [rsp + 0x58], 0
0x2836:	mov	qword ptr [rip + 0x2189f7], 0x2c6
0x2841:	call	0x1ab0


0x2c92:	test	al, al
0x2c94:	jne	0x2d80


0x2c9a:	lea	rdi, [rip + 0x133c6]
0x2ca1:	movzx	r15d, bl
0x2ca5:	call	0x20e0


0x2d80:	call	0x2110


0x2d85:	mov	rax, qword ptr [rip + 0x218344]
0x2d8c:	mov	rdi, qword ptr [rax]
0x2d8f:	lea	rdx, [rax + 8]
0x2d93:	mov	qword ptr [rip + 0x218336], rdx
0x2d9a:	call	0x2160


0x2caa:	test	al, al
0x2cac:	jne	0x2dd0


0x2cb2:	lea	rdi, [rip + 0x133b5]
0x2cb9:	call	0x20e0


0x2dd0:	mov	edi, r15d
0x2dd3:	call	0x2c60


0x2cbe:	test	al, al
0x2cc0:	jne	0x2f20


0x2cc6:	lea	rdi, [rip + 0x133a7]
0x2ccd:	call	0x20e0


0x2f20:	mov	edi, r15d
0x2f23:	call	0x2c60


0x2cd2:	test	al, al
0x2cd4:	mov	r14d, eax
0x2cd7:	jne	0x2fa0


0x2cdd:	lea	rdi, [rip + 0x13396]
0x2ce4:	call	0x20e0


0x2fa0:	mov	edi, r15d
0x2fa3:	call	0x2c60


0x2ce9:	test	al, al
0x2ceb:	jne	0x2e20


0x2cf1:	call	0x2110


0x2e20:	mov	edi, r15d
0x2e23:	call	0x2c60


0x2cf6:	lea	rdi, [rip + 0x13384]
0x2cfd:	call	0x20e0


0x2d02:	test	al, al
0x2d04:	je	0x2f60


0x2f60:	lea	rdi, [rip + 0x137b6]
0x2f67:	call	0x20e0


0x2d0a:	mov	edi, r15d
0x2d0d:	call	0x3de0


0x2f6c:	test	al, al
0x2f6e:	je	0x2d85


0x2f74:	lea	rsi, [rip + 0x13108]
0x2f7b:	mov	edx, 5
0x2f80:	xor	edi, edi
0x2f82:	call	0x1a90


0x8957:	cmp	qword ptr [r12 + 0x10], rbx
0x895c:	ja	0x8940


0x8940:	mov	rdi, qword ptr [r12]
0x8944:	mov	rax, rbx
0x8947:	add	rbx, 1
0x894b:	shl	rax, 4
0x894f:	add	rdi, rax
0x8952:	call	0x8340


0x837d:	xor	eax, eax
0x837f:	add	rsp, 8
0x8383:	ret	


0xc243:	cmp	rax, -1
0xc247:	mov	rdx, rax
0xc24a:	mov	qword ptr [rbx + 0x38], rax
0xc24e:	je	0xc2a0


0xc2a0:	mov	eax, 0xc
0xc2a5:	jmp	0xc27c


0xc250:	xor	eax, eax
0xc252:	cmp	byte ptr [rbx + 0x30], 0xc
0xc256:	jne	0xc27c


0xc27c:	add	rsp, 8
0xc280:	pop	rbx
0xc281:	pop	rbp
0xc282:	ret	


0xc258:	mov	ecx, dword ptr [rbx + 0x28]
0xc25b:	shl	rdx, 4
0xc25f:	add	rdx, qword ptr [rbp]
0xc263:	and	ecx, 0x3ff
0xc269:	shl	ecx, 8
0xc26c:	mov	esi, ecx
0xc26e:	mov	ecx, dword ptr [rdx + 8]
0xc271:	and	ecx, 0xfffc00ff
0xc277:	or	ecx, esi
0xc279:	mov	dword ptr [rdx + 8], ecx
0xc27c:	add	rsp, 8
0xc280:	pop	rbx
0xc281:	pop	rbp
0xc282:	ret	


0x858b:	cmp	rax, -1
0x858f:	je	0x85f4


0x85f4:	add	rsp, 8
0x85f8:	pop	rbx
0x85f9:	pop	rbp
0x85fa:	pop	r12
0x85fc:	pop	r13
0x85fe:	ret	


0x8591:	mov	edi, r12d
0x8594:	mov	r8, qword ptr [rbx]
0x8597:	mov	rsi, rax
0x859a:	and	di, 0x3ff
0x859f:	shl	rsi, 4
0x85a3:	mov	ecx, edi
0x85a5:	and	ecx, 0x3ff
0x85ab:	add	rsi, r8
0x85ae:	shl	ecx, 8
0x85b1:	mov	edx, ecx
0x85b3:	mov	ecx, dword ptr [rsi + 8]
0x85b6:	and	ecx, 0xfffc00ff
0x85bc:	or	ecx, edx
0x85be:	mov	dword ptr [rsi + 8], ecx
0x85c1:	mov	edx, dword ptr [r8 + r13 + 8]
0x85c6:	and	ecx, 0xfffc00ff
0x85cc:	shr	edx, 8
0x85cf:	or	edx, edi
0x85d1:	and	edx, 0x3ff
0x85d7:	shl	edx, 8
0x85da:	or	edx, ecx
0x85dc:	mov	ecx, edx
0x85de:	mov	dword ptr [rsi + 8], edx
0x85e1:	shr	ecx, 0x10
0x85e4:	mov	edx, ecx
0x85e6:	or	edx, 4
0x85e9:	mov	byte ptr [rsi + 0xa], dl
0x85ec:	mov	rdx, qword ptr [rbx + 0x20]
0x85f0:	mov	qword ptr [rdx + rax*8], rbp
0x85f4:	add	rsp, 8
0x85f8:	pop	rbx
0x85f9:	pop	rbp
0x85fa:	pop	r12
0x85fc:	pop	r13
0x85fe:	ret	


0x8707:	cmp	rax, -1
0x870b:	mov	r13, rax
0x870e:	je	0x872b


0x8710:	add	rbx, qword ptr [r14 + 0x28]
0x8714:	mov	rsi, r13
0x8717:	mov	rdi, rbx
0x871a:	call	0x76b0


0x871f:	test	al, al
0x8721:	mov	r9, qword ptr [rsp]
0x8725:	jne	0x861f


0x861f:	mov	r8, qword ptr [r14]
0x8622:	mov	rax, r9
0x8625:	mov	rdi, qword ptr [r14 + 0x28]
0x8629:	shl	rax, 4
0x862d:	mov	r12, r13
0x8630:	add	rax, r8
0x8633:	cmp	byte ptr [rax + 8], 4
0x8637:	je	0x87f0


0x874d:	cmp	rax, -1
0x8751:	mov	r13, rax
0x8754:	je	0x872b


0x8756:	mov	rdi, qword ptr [r14 + 0x28]
0x875a:	mov	rsi, r13
0x875d:	add	rdi, rbx
0x8760:	call	0x76b0


0x8765:	test	al, al
0x8767:	je	0x872b


0x8769:	mov	rcx, qword ptr [rsp + 8]
0x876e:	mov	r8d, ebp
0x8771:	mov	rdx, r13
0x8774:	mov	rsi, r15
0x8777:	mov	rdi, r14
0x877a:	call	0x8600


0x877f:	test	eax, eax
0x8781:	je	0x86e9


0x8787:	jmp	0x8730


0x87ba:	cmp	rax, -1
0x87be:	mov	r13, rax
0x87c1:	je	0x872b


0x87c7:	add	rbx, qword ptr [r14 + 0x28]
0x87cb:	mov	rsi, rax
0x87ce:	mov	rdi, rbx
0x87d1:	call	0x76b0


0x87d6:	test	al, al
0x87d8:	je	0x872b


0x87de:	mov	r9, r15
0x87e1:	jmp	0x861f


0x8823:	cmp	rax, -1
0x8827:	mov	r13, rax
0x882a:	mov	r9, qword ptr [rsp]
0x882e:	je	0x872b


0x8834:	mov	rax, qword ptr [r14 + 0x18]
0x8838:	mov	qword ptr [rsp], r9
0x883c:	mov	rcx, qword ptr [rax + r15]
0x8840:	mov	qword ptr [rax + r12*8], rcx
0x8844:	jmp	0x8710


0x112be:	test	rax, rax
0x112c1:	jne	0x11288


0x112c3:	add	r9, qword ptr [r12 + 0x30]
0x112c8:	mov	rdi, qword ptr [r9 + 8]
0x112cc:	lea	rsi, [r9 + 0x10]
0x112d0:	call	0x8bf0


0x11288:	add	rbp, 1
0x1128c:	cmp	rbp, qword ptr [rbx + 8]
0x11290:	jge	0x11318


0x11296:	mov	r10, qword ptr [rbx + 0x10]
0x1129a:	mov	r10, qword ptr [r10 + rbp*8]
0x1129e:	mov	rax, qword ptr [r12 + 0x38]
0x112a3:	mov	rdx, r14
0x112a6:	lea	r9, [r10 + r10*2]
0x112aa:	shl	r9, 3
0x112ae:	add	rax, r9
0x112b1:	mov	rdi, qword ptr [rax + 8]
0x112b5:	lea	rsi, [rax + 0x10]
0x112b9:	call	0x8bf0


0x11318:	mov	rbp, qword ptr [rsp + 0x30]
0x1131d:	jmp	0x111ad


0x112d5:	test	rax, rax
0x112d8:	jne	0x11288


0x112da:	mov	rcx, qword ptr [rsp + 0x10]
0x112df:	mov	rdx, rbx
0x112e2:	mov	rsi, r10
0x112e5:	mov	rdi, r12
0x112e8:	call	0xb440


0x113be:	test	rax, rax
0x113c1:	je	0x114d7


0x113c7:	sub	rsp, 8
0x113cb:	lea	rdx, [rbx + 0x30]
0x113cf:	lea	rsi, [rbx + 0x28]
0x113d3:	push	r9
0x113d5:	mov	rdi, qword ptr [rsp + 0x18]
0x113da:	mov	rcx, r14
0x113dd:	mov	r9, r10
0x113e0:	mov	r8, rbp
0x113e3:	call	0x8ea0


0x113e8:	test	al, al
0x113ea:	pop	rdx
0x113eb:	pop	rcx
0x113ec:	jne	0x114d7


0x113f2:	cmp	qword ptr [rsp + 0x60], 0
0x113f8:	je	0x11508


0x11508:	mov	rax, qword ptr [rbx + 0x30]
0x1150c:	lea	rsi, [rbx + 0x20]
0x11510:	movdqa	xmm0, xmmword ptr [rbx]
0x11514:	mov	qword ptr [rsp + 0x90], rax
0x1151c:	mov	rax, qword ptr [rsp + 0x38]
0x11521:	movaps	xmmword ptr [rsp + 0x60], xmm0
0x11526:	lea	rdi, [rax + 0x20]
0x1152a:	movdqa	xmm0, xmmword ptr [rbx + 0x10]
0x1152f:	movaps	xmmword ptr [rsp + 0x70], xmm0
0x11534:	movdqa	xmm0, xmmword ptr [rbx + 0x20]
0x11539:	movaps	xmmword ptr [rsp + 0x80], xmm0
0x11541:	call	0x9d50


0x113fe:	mov	rax, qword ptr [rsp + 0x38]
0x11403:	mov	rsi, r13
0x11406:	mov	qword ptr [rsp + 0x70], r14
0x1140b:	mov	qword ptr [rsp + 0x78], rbp
0x11410:	lea	rdi, [rax + 0x20]
0x11414:	call	0x76b0


0x11419:	test	al, al
0x1141b:	je	0x11574


0x11574:	mov	eax, 0xc
0x11579:	jmp	0x1154e


0x11421:	mov	rdi, qword ptr [rsp + 0x18]
0x11426:	mov	rax, qword ptr [rsp + 0x60]
0x1142b:	mov	rsi, qword ptr [rsp + 0x38]
0x11430:	mov	r15, qword ptr [rax + rdi]
0x11434:	mov	rdi, qword ptr [rsp + 8]
0x11439:	call	0xf2d0


0x1154e:	cmp	qword ptr [rsp + 0x60], 0
0x11554:	je	0x10dd8


0x11546:	test	eax, eax
0x11548:	je	0x113fe


0xa6fe:	test	rax, rax
0xa701:	je	0xa6d9


0xa6d9:	add	r15, 0x28
0xa6dd:	cmp	byte ptr [r15 - 8], 0
0xa6e2:	je	0xa59d


0xa703:	mov	r8, qword ptr [r15 + 0x18]
0xa707:	add	r8, r12
0xa70a:	mov	r14, r8
0xa70d:	sub	r14, qword ptr [r15 + 0x10]
0xa711:	cmp	r12, r14
0xa714:	jne	0xa618


0xa71a:	mov	rcx, qword ptr [r13 + 0x28]
0xa71e:	lea	rax, [r10 + r10*2]
0xa722:	mov	rsi, qword ptr [rsp]
0xa726:	mov	rdi, r9
0xa729:	lea	rax, [rcx + rax*8]
0xa72d:	mov	rax, qword ptr [rax + 0x10]
0xa731:	mov	r14, qword ptr [rax]
0xa734:	mov	rdx, r14
0xa737:	call	0x8bf0


0xa618:	mov	rax, qword ptr [r13 + 0x18]
0xa61c:	mov	rcx, qword ptr [rax + r10*8]
0xa620:	mov	r10, qword ptr [rbx + 0xb8]
0xa627:	lea	rax, [r14*8]
0xa62f:	mov	qword ptr [rsp + 0x18], rax
0xa634:	add	r10, rax
0xa637:	mov	qword ptr [rsp + 8], rcx
0xa63c:	mov	r9, qword ptr [r10]
0xa63f:	test	r9, r9
0xa642:	je	0xa7d0


0xa7d0:	mov	edi, 8
0xa7d5:	mov	qword ptr [rsp + 0x18], r10
0xa7da:	mov	qword ptr [rsp + 0x50], 1
0xa7e3:	mov	qword ptr [rsp + 0x58], 1
0xa7ec:	call	0x1c20


0xa648:	mov	rdi, qword ptr [r9 + 0x10]
0xa64c:	lea	rsi, [r9 + 0x18]
0xa650:	mov	rdx, rcx
0xa653:	call	0x8bf0


0xa658:	test	rax, rax
0xa65b:	jne	0xa6d9


0xa65d:	mov	rdi, qword ptr [rsp + 0x10]
0xa662:	lea	rsi, [r9 + 8]
0xa666:	call	0x9d50


0xa66b:	mov	rsi, qword ptr [rsp + 8]
0xa670:	mov	rdi, qword ptr [rsp + 0x10]
0xa675:	mov	dword ptr [rsp + 0x4c], eax
0xa679:	call	0x76b0


0xa67e:	mov	edx, dword ptr [rsp + 0x4c]
0xa682:	test	edx, edx
0xa684:	jne	0xa826


0xa68a:	cmp	al, 1
0xa68c:	jne	0xa826


0xa826:	mov	rdi, qword ptr [rsp + 0x60]
0xa82b:	call	0x19d0


0xa692:	mov	r10, qword ptr [rsp + 0x18]
0xa697:	add	r10, qword ptr [rbx + 0xb8]
0xa69e:	mov	rdx, qword ptr [rsp + 0x10]
0xa6a3:	mov	rdi, qword ptr [rsp + 0x38]
0xa6a8:	mov	rsi, r13
0xa6ab:	mov	qword ptr [rsp + 8], r10
0xa6b0:	call	0xa200


0xa6b5:	mov	r10, qword ptr [rsp + 8]
0xa6ba:	mov	rdi, qword ptr [rsp + 0x60]
0xa6bf:	mov	qword ptr [r10], rax
0xa6c2:	call	0x19d0


0xa73c:	test	rax, rax
0xa73f:	jne	0xa6d9


0xa741:	mov	edi, 8
0xa746:	mov	qword ptr [rsp + 0x50], 1
0xa74f:	mov	qword ptr [rsp + 0x58], 1
0xa758:	call	0x1c20


0xb5f8:	test	rax, rax
0xb5fb:	jne	0xb622


0xb5fd:	lea	rbx, [r14 + 0x10]
0xb601:	mov	rdi, qword ptr [r14 + 8]
0xb605:	mov	rsi, rbx
0xb608:	call	0x8bf0


0xb622:	add	r9, 1
0xb626:	cmp	qword ptr [rbp + 8], r9
0xb62a:	jg	0xb5e0


0xb5e0:	mov	rax, qword ptr [rbp + 0x10]
0xb5e4:	mov	rdi, qword ptr [rsp + 0x28]
0xb5e9:	mov	rsi, r11
0xb5ec:	mov	r10, qword ptr [rax + r9*8]
0xb5f0:	mov	rdx, r10
0xb5f3:	call	0x8bf0


0xb60d:	sub	rax, 1
0xb611:	mov	rdx, rax
0xb614:	js	0xb622


0xb616:	lea	rdi, [r14 + 8]
0xb61a:	mov	rsi, rbx
0xb61d:	call	0x8d70


0xb54d:	mov	rcx, qword ptr [rsp + 8]
0xb552:	mov	r8, qword ptr [rsp]
0xb556:	cmp	qword ptr [rcx + 8], 1
0xb55b:	jg	0xb4a8


0xb561:	test	rax, rax
0xb564:	jne	0xb4f0


0xb4a8:	test	rax, rax
0xb4ab:	jne	0xb588


0xb566:	mov	rdi, qword ptr [r14 + 8]
0xb56a:	lea	rsi, [r14 + 0x10]
0xb56e:	mov	rdx, r8
0xb571:	call	0x8bf0


0xb4b1:	mov	rdi, qword ptr [r14 + 8]
0xb4b5:	lea	rsi, [r14 + 0x10]
0xb4b9:	mov	rdx, r8
0xb4bc:	call	0x8bf0


0xb588:	mov	r15, qword ptr [r15 + 8]
0xb58c:	test	r15, r15
0xb58f:	jle	0xb4f0


0xb595:	mov	rdx, r15
0xb598:	mov	rsi, r11
0xb59b:	mov	rdi, r10
0xb59e:	call	0x8bf0


0xb5a3:	test	rax, rax
0xb5a6:	jne	0xb4f0


0xb5ac:	mov	rdi, qword ptr [r14 + 8]
0xb5b0:	lea	rsi, [r14 + 0x10]
0xb5b4:	call	0x8bf0


0xb5b9:	test	rax, rax
0xb5bc:	je	0xb4f0


0xb5c2:	jmp	0xb4ca


0xb4ca:	mov	rdx, qword ptr [r12 + 0x38]
0xb4cf:	mov	rsi, qword ptr [rsp + 0x10]
0xb4d4:	mov	rdi, qword ptr [rsp + 0x18]
0xb4d9:	add	rdx, r9
0xb4dc:	call	0x9700


0xb4e1:	test	eax, eax
0xb4e3:	jne	0xb660


0xb4e9:	mov	r10, qword ptr [rbp + 8]
0xb4ed:	nop	dword ptr [rax]
0xb4f0:	add	rbx, 1
0xb4f4:	cmp	r10, rbx
0xb4f7:	jle	0xb5d0


0xb660:	mov	rdi, qword ptr [rsp + 0x30]
0xb665:	mov	dword ptr [rsp], eax
0xb668:	call	0x19d0


0xb4c1:	test	rax, rax
0xb4c4:	je	0xb588


0xb576:	test	rax, rax
0xb579:	jne	0xb4ca


0xb57f:	jmp	0xb4f0


0x8ca0:	test	rax, rax
0x8ca3:	jne	0x8d10


0x8ca5:	mov	rax, rbx
0x8ca8:	shl	rax, 4
0x8cac:	add	rax, qword ptr [r12]
0x8cb0:	movzx	edx, byte ptr [rax + 8]
0x8cb4:	cmp	edx, r13d
0x8cb7:	jne	0x8cbe


0x8d10:	xor	eax, eax
0x8d12:	add	rsp, 8
0x8d16:	pop	rbx
0x8d17:	pop	rbp
0x8d18:	pop	r12
0x8d1a:	pop	r13
0x8d1c:	pop	r14
0x8d1e:	pop	r15
0x8d20:	ret	


0x8cb9:	cmp	qword ptr [rax], r15
0x8cbc:	je	0x8cf8


0x8cbe:	mov	rsi, rbx
0x8cc1:	mov	rdi, rbp
0x8cc4:	call	0x76b0


0x8cf8:	cmp	r13d, 9
0x8cfc:	jne	0x8d10


0x8cfe:	mov	rsi, rbx
0x8d01:	mov	rdi, rbp
0x8d04:	call	0x76b0


0x8d09:	test	al, al
0x8d0b:	je	0x8d28


0x8d28:	add	rsp, 8
0x8d2c:	mov	eax, 0xc
0x8d31:	pop	rbx
0x8d32:	pop	rbp
0x8d33:	pop	r12
0x8d35:	pop	r13
0x8d37:	pop	r14
0x8d39:	pop	r15
0x8d3b:	ret	


0x8cc9:	test	al, al
0x8ccb:	je	0x8d28


0x8ccd:	lea	rbx, [rbx + rbx*2]
0x8cd1:	mov	rdx, qword ptr [r12 + 0x28]
0x8cd6:	shl	rbx, 3
0x8cda:	add	rdx, rbx
0x8cdd:	mov	rax, qword ptr [rdx + 8]
0x8ce1:	test	rax, rax
0x8ce4:	je	0x8d10


0x8ce6:	cmp	rax, 2
0x8cea:	mov	rdx, qword ptr [rdx + 0x10]
0x8cee:	je	0x8d40


0x8d40:	mov	rdx, qword ptr [rdx + 8]
0x8d44:	mov	r8d, r13d
0x8d47:	mov	rcx, r15
0x8d4a:	mov	rsi, rbp
0x8d4d:	mov	rdi, r12
0x8d50:	call	0x8c70


0x8cf0:	mov	rbx, qword ptr [rdx]
0x8cf3:	jmp	0x8c91


0x8c91:	mov	rdi, qword ptr [rbp + 8]
0x8c95:	mov	rdx, rbx
0x8c98:	mov	rsi, r14
0x8c9b:	call	0x8bf0


0x8d55:	test	eax, eax
0x8d57:	jne	0x8d12


0x8d59:	mov	rax, qword ptr [r12 + 0x28]
0x8d5e:	mov	rdx, qword ptr [rax + rbx + 0x10]
0x8d63:	jmp	0x8cf0


0x8d12:	add	rsp, 8
0x8d16:	pop	rbx
0x8d17:	pop	rbp
0x8d18:	pop	r12
0x8d1a:	pop	r13
0x8d1c:	pop	r14
0x8d1e:	pop	r15
0x8d20:	ret	


0x9af7:	mov	rdi, r15
0x9afa:	mov	r8, r14
0x9afd:	xor	ecx, ecx
0x9aff:	xor	edx, edx
0x9b01:	mov	rsi, rbx
0x9b04:	mov	r12, rax
0x9b07:	mov	byte ptr [rsp + 0x28], 9
0x9b0c:	call	0x98b0


0x9b11:	mov	r15, rax
0x9b14:	jmp	0x9c6d


0x9c6d:	mov	rdi, qword ptr [rsp + 8]
0x9c72:	mov	r8, r14
0x9c75:	mov	rcx, r15
0x9c78:	mov	rdx, rbp
0x9c7b:	mov	rsi, rbx
0x9c7e:	mov	byte ptr [rsp + 0x28], 0x10
0x9c83:	call	0x98b0


0x9c88:	mov	r11, rax
0x9c8b:	jmp	0x9b6c


0x9b6c:	mov	rdi, qword ptr [rsp + 8]
0x9b71:	mov	r8, r14
0x9b74:	mov	rcx, r11
0x9b77:	mov	rdx, r12
0x9b7a:	mov	rsi, rbx
0x9b7d:	mov	byte ptr [rsp + 0x28], 0x10
0x9b82:	mov	qword ptr [rsp + 0x10], r11
0x9b87:	call	0x98b0


0x9b8c:	test	rax, rax
0x9b8f:	mov	rbp, rax
0x9b92:	je	0x9c90


0x9c90:	mov	rax, qword ptr [rsp + 0x18]
0x9c95:	xor	ebp, ebp
0x9c97:	mov	dword ptr [rax], 0xc
0x9c9d:	jmp	0x9bed


0x9b98:	mov	r11, qword ptr [rsp + 0x10]
0x9b9d:	test	r11, r11
0x9ba0:	je	0x9c90


0x9ba6:	test	r12, r12
0x9ba9:	je	0x9c90


0x9baf:	test	r15, r15
0x9bb2:	je	0x9c90


0x9bb8:	mov	rax, qword ptr [r13 + 0x28]
0x9bbc:	mov	qword ptr [r15 + 0x28], rax
0x9bc0:	mov	qword ptr [r12 + 0x28], rax
0x9bc5:	movzx	eax, byte ptr [r13 + 0x32]
0x9bca:	movzx	edx, byte ptr [r15 + 0x32]
0x9bcf:	and	eax, 8
0x9bd2:	and	edx, 0xfffffff7
0x9bd5:	mov	ecx, eax
0x9bd7:	or	edx, ecx
0x9bd9:	mov	byte ptr [r15 + 0x32], dl
0x9bdd:	movzx	eax, byte ptr [r12 + 0x32]
0x9be3:	and	eax, 0xfffffff7
0x9be6:	or	eax, ecx
0x9be8:	mov	byte ptr [r12 + 0x32], al
0x9bed:	mov	rdi, qword ptr [rsp + 0x38]
0x9bf2:	xor	rdi, qword ptr fs:[0x28]
0x9bfb:	mov	rax, rbp
0x9bfe:	jne	0x9ca2


0x9b4c:	mov	rdi, r15
0x9b4f:	mov	r8, r14
0x9b52:	xor	ecx, ecx
0x9b54:	xor	edx, edx
0x9b56:	mov	rsi, rbx
0x9b59:	mov	r12, rax
0x9b5c:	mov	byte ptr [rsp + 0x28], 9
0x9b61:	call	0x98b0


0x9b66:	mov	r11, rax
0x9b69:	mov	r15, rax
0x9b6c:	mov	rdi, qword ptr [rsp + 8]
0x9b71:	mov	r8, r14
0x9b74:	mov	rcx, r11
0x9b77:	mov	rdx, r12
0x9b7a:	mov	rsi, rbx
0x9b7d:	mov	byte ptr [rsp + 0x28], 0x10
0x9b82:	mov	qword ptr [rsp + 0x10], r11
0x9b87:	call	0x98b0


0x9c44:	xor	ecx, ecx
0x9c46:	xor	edx, edx
0x9c48:	mov	rdi, r15
0x9c4b:	mov	r8, r14
0x9c4e:	mov	rsi, rbx
0x9c51:	mov	r12, rax
0x9c54:	mov	byte ptr [rsp + 0x28], 9
0x9c59:	call	0x98b0


0x9c5e:	test	rbp, rbp
0x9c61:	mov	r15, rax
0x9c64:	mov	r11, rax
0x9c67:	je	0x9b6c


0x99d3:	test	rax, rax
0x99d6:	mov	qword ptr [r14], rax
0x99d9:	je	0x9a2c


0x9a2c:	mov	rcx, qword ptr [rsp + 8]
0x9a31:	xor	rcx, qword ptr fs:[0x28]
0x9a3a:	jne	0x9a5c


0x99db:	mov	qword ptr [rax], rbp
0x99de:	mov	rbp, qword ptr [r14]
0x99e1:	or	byte ptr [rbp + 0x32], 4
0x99e5:	mov	rax, qword ptr [rbx + 8]
0x99e9:	test	rax, rax
0x99ec:	je	0x9a00


0x9a3c:	add	rsp, 0x10
0x9a40:	pop	rbx
0x9a41:	pop	rbp
0x9a42:	pop	r12
0x9a44:	pop	r13
0x9a46:	pop	r14
0x9a48:	ret	


0x9a5c:	call	0x1ad0


0x9a00:	xor	edx, edx
0x9a02:	jmp	0x9a0b


0x99ee:	lea	r14, [rbp + 8]
0x99f2:	mov	rbx, rax
0x99f5:	jmp	0x99c0


0x9a0b:	mov	rax, qword ptr [rbx + 0x10]
0x9a0f:	test	rax, rax
0x9a12:	je	0x9a19


0x99c0:	lea	r8, [rbx + 0x28]
0x99c4:	xor	ecx, ecx
0x99c6:	xor	edx, edx
0x99c8:	mov	rsi, r12
0x99cb:	mov	rdi, r13
0x99ce:	call	0x98b0


0x9a19:	mov	rax, qword ptr [rbx]
0x9a1c:	mov	rbp, qword ptr [rbp]
0x9a20:	mov	rdx, rbx
0x9a23:	test	rax, rax
0x9a26:	jne	0x9a08


0x9a14:	cmp	rax, rdx
0x9a17:	jne	0x9a50


0x9a28:	mov	rax, qword ptr [rsp]
0x9a2c:	mov	rcx, qword ptr [rsp + 8]
0x9a31:	xor	rcx, qword ptr fs:[0x28]
0x9a3a:	jne	0x9a5c


0x9a08:	mov	rbx, rax
0x9a0b:	mov	rax, qword ptr [rbx + 0x10]
0x9a0f:	test	rax, rax
0x9a12:	je	0x9a19


0x9a50:	lea	r14, [rbp + 0x10]
0x9a54:	mov	rbx, rax
0x9a57:	jmp	0x99c0


0x1039f:	mov	rdx, qword ptr [rsp + 0x60]
0x103a4:	mov	rdi, qword ptr [rsp + 0x80]
0x103ac:	mov	ecx, eax
0x103ae:	add	r12, qword ptr [rsp + 0x1d8]
0x103b6:	mov	rsi, r13
0x103b9:	call	0x9f40


0x103be:	mov	rdi, qword ptr [rsp + 0xf0]
0x103c6:	mov	qword ptr [r12], rax
0x103ca:	call	0x19d0


0x10494:	mov	rdi, qword ptr [rsp + 0x80]
0x1049c:	mov	rdx, qword ptr [rsp + 0x60]
0x104a1:	mov	ecx, eax
0x104a3:	mov	rsi, r13
0x104a6:	call	0x9f40


0x104ab:	mov	rdi, qword ptr [rsp + 0x1d8]
0x104b3:	mov	qword ptr [r15], rax
0x104b6:	cmp	qword ptr [rdi + rbp*8], 0
0x104bb:	jne	0x103e2


0x104c1:	mov	eax, dword ptr [rsp + 0xd4]
0x104c8:	test	eax, eax
0x104ca:	je	0x103e2


0x104d0:	mov	rbx, qword ptr [rsp + 0xa0]
0x104d8:	jmp	0x105e0


0x105e0:	test	rdi, rdi
0x105e3:	mov	dword ptr [rsp + 0xd0], eax
0x105ea:	je	0x106d0


0x1043a:	mov	ecx, dword ptr [rsp + 0x10]
0x1043e:	shr	ecx, 8
0x10441:	mov	edx, ecx
0x10443:	and	dx, 0x3ff
0x10448:	test	cl, 4
0x1044b:	jne	0x102a8


0x10451:	and	ecx, 8
0x10454:	je	0x102b9


0x102a8:	test	al, 1
0x102aa:	je	0x103ea


0x102b9:	test	dl, 0x20
0x102bc:	je	0x102c6


0x1045a:	test	al, 1
0x1045c:	je	0x102b9


0x102b0:	and	ecx, 8
0x102b3:	jne	0x103ea


0x102c6:	and	edx, 0x80
0x102cc:	je	0x102e0


0x102be:	test	al, 2
0x102c0:	je	0x103ea


0x10462:	jmp	0x103ea


0x102ce:	test	al, 8
0x102d0:	je	0x103ea


0x10509:	test	al, 1
0x1050b:	je	0x105c0


0x105c0:	mov	r13, qword ptr [rbp + r13*8]
0x105c5:	jmp	0xfdd5


0x10511:	mov	r13, qword ptr [rbp + r13*8 + 0x800]
0x10519:	jmp	0xfdd5


0xfdd5:	cmp	qword ptr [rsp + 0x1d8], 0
0xfdde:	je	0xfdf4


0x10614:	test	al, 1
0x10616:	je	0x10785


0x10785:	test	eax, eax
0x10787:	je	0xfc8e


0x1061c:	mov	r14, qword ptr [rbx + 0x50]
0x10620:	test	r14, r14
0x10623:	jne	0xfc8e


0x1078d:	mov	edx, eax
0x1078f:	and	edx, 6
0x10792:	cmp	edx, 6
0x10795:	je	0x10bff


0x10629:	mov	eax, dword ptr [rsp + 0xd0]
0x10630:	cmp	eax, 0xc
0x10633:	mov	dword ptr [rsp + 0x5c], eax
0x10637:	je	0x10160


0x10bff:	mov	r14, qword ptr [rbx + 0x60]
0x10c03:	jmp	0x10620


0x1079b:	test	al, 2
0x1079d:	je	0x10c50


0x1063d:	lea	rcx, [rip + 0x6a0c]
0x10644:	lea	rsi, [rip + 0x6435]
0x1064b:	lea	rdi, [rip + 0x64e2]
0x10652:	mov	edx, 0x435
0x10657:	call	0x1b50


0x10620:	test	r14, r14
0x10623:	jne	0xfc8e


0x10c50:	test	al, 4
0x10c52:	je	0xfc8e


0x107a3:	mov	r14, qword ptr [rbx + 0x58]
0x107a7:	jmp	0x10620


0x10c58:	mov	rdx, qword ptr [r14 + 0x50]
0x10c5c:	mov	rdi, qword ptr [rsp + 0x28]
0x10c61:	mov	ecx, eax
0x10c63:	mov	rsi, rbx
0x10c66:	call	0x9f40


0x10c6b:	mov	r14, rax
0x10c6e:	jmp	0x10620


0xf1c3:	mov	r8, qword ptr [rbx + 0xb8]
0xf1ca:	mov	rdx, qword ptr [rsp]
0xf1ce:	mov	ecx, eax
0xf1d0:	mov	rsi, r15
0xf1d3:	mov	rdi, r13
0xf1d6:	add	r8, rbp
0xf1d9:	mov	qword ptr [rsp + 8], r8
0xf1de:	call	0x9f40


0xf1e3:	mov	r8, qword ptr [rsp + 8]
0xf1e8:	test	r14, r14
0xf1eb:	mov	rbp, rax
0xf1ee:	mov	qword ptr [r8], rax
0xf1f1:	je	0xf137


0xf1f7:	mov	rdi, qword ptr [rsp + 0x20]
0xf1fc:	call	0x19d0


0xec39:	mov	rsi, qword ptr [rsp + 0x60]
0xec3e:	mov	ecx, eax
0xec40:	mov	rax, qword ptr [r14 + 0xb8]
0xec47:	lea	r10, [rbx*8]
0xec4f:	mov	qword ptr [rsp + 0x10], 0
0xec58:	lea	r11, [rax + r10]
0xec5c:	mov	rax, qword ptr [rax + rsi]
0xec60:	mov	rdx, qword ptr [r11]
0xec63:	test	rax, rax
0xec66:	je	0xec71


0xec71:	test	rdx, rdx
0xec74:	je	0xef90


0xec68:	mov	rax, qword ptr [rax + 0x10]
0xec6c:	mov	qword ptr [rsp + 0x10], rax
0xec71:	test	rdx, rdx
0xec74:	je	0xef90


0xef90:	mov	rdx, qword ptr [rsp + 0x18]
0xef95:	mov	rdi, qword ptr [rsp + 0x78]
0xef9a:	mov	rsi, rbp
0xef9d:	mov	qword ptr [rsp + 0x28], r11
0xefa2:	call	0x9f40


0xec7a:	mov	rsi, qword ptr [rdx + 0x50]
0xec7e:	mov	rdi, qword ptr [rsp + 0x68]
0xec83:	mov	rdx, qword ptr [rsp + 0x18]
0xec88:	mov	qword ptr [rsp + 0x30], r10
0xec8d:	mov	dword ptr [rsp + 0x28], ecx
0xec91:	call	0x9de0


0xec96:	test	eax, eax
0xec98:	mov	dword ptr [rsp + 0x8c], eax
0xec9f:	mov	ecx, dword ptr [rsp + 0x28]
0xeca3:	mov	r10, qword ptr [rsp + 0x30]
0xeca8:	jne	0xf038


0xecae:	add	r10, qword ptr [r14 + 0xb8]
0xecb5:	mov	rdx, qword ptr [rsp + 0x68]
0xecba:	mov	rsi, rbp
0xecbd:	mov	rdi, qword ptr [rsp + 0x78]
0xecc2:	mov	qword ptr [rsp + 0x28], r10
0xecc7:	call	0x9f40


0xf038:	mov	rdi, qword ptr [rsp + 0xa0]
0xf040:	call	0x19d0


0xeccc:	mov	r10, qword ptr [rsp + 0x28]
0xecd1:	mov	rdi, qword ptr [rsp + 0xa0]
0xecd9:	mov	qword ptr [r10], rax
0xecdc:	call	0x19d0


0xefa7:	mov	r11, qword ptr [rsp + 0x28]
0xefac:	mov	rdx, qword ptr [r14 + 0xb8]
0xefb3:	mov	qword ptr [r11], rax
0xefb6:	cmp	qword ptr [rdx + rbx*8], 0
0xefbb:	jne	0xecf3


0xefc1:	mov	eax, dword ptr [rsp + 0x8c]
0xefc8:	test	eax, eax
0xefca:	je	0xecf3


0xecf3:	cmp	qword ptr [rsp + 0x20], 0
0xecf9:	jne	0xed18


0xefd0:	jmp	0xeb68


0xecfb:	mov	rax, qword ptr [rsp + 0x60]
0xed00:	mov	rbx, qword ptr [rsp + 0x10]
0xed05:	mov	rax, qword ptr [rdx + rax]
0xed09:	cmp	qword ptr [rax + 0x10], rbx
0xed0d:	jg	0xefd8


0xefd8:	mov	rax, qword ptr [rsp + 0x18]
0xefdd:	mov	rcx, qword ptr [rsp + 8]
0xefe2:	mov	rdi, r14
0xefe5:	lea	r8, [rax + 0x10]
0xefe9:	lea	rbx, [rax + 8]
0xefed:	mov	rdx, r8
0xeff0:	mov	rsi, rbx
0xeff3:	mov	qword ptr [rsp + 0x10], r8
0xeff8:	call	0xa880


0xeffd:	test	eax, eax
0xefff:	mov	dword ptr [rsp + 0x8c], eax
0xf006:	jne	0xeb68


0xf00c:	mov	r8, qword ptr [rsp + 0x10]
0xf011:	mov	rsi, rbx
0xf014:	mov	rdi, r14
0xf017:	mov	rdx, r8
0xf01a:	call	0xe7f0


0xf01f:	test	eax, eax
0xf021:	mov	dword ptr [rsp + 0x8c], eax
0xf028:	je	0xed18


0xf02e:	jmp	0xeb68


0xafca:	cmp	rbp, r12
0xafcd:	mov	dword ptr [rbx + 0x70], eax
0xafd0:	mov	r8, qword ptr [rsp]
0xafd4:	jne	0xb058


0xafda:	cmp	rbp, r8
0xafdd:	jge	0xb058


0xb058:	mov	rax, qword ptr [rbx + 0x50]
0xb05c:	mov	byte ptr [rbx + 0x8c], 0
0xb063:	add	rax, rbp
0xb066:	sub	rax, r15
0xb069:	mov	qword ptr [rbx + 0x58], rax
0xb06d:	mov	rax, qword ptr [rbx + 0x60]
0xb071:	add	rax, rbp
0xb074:	sub	rax, r15
0xb077:	test	r12, r12
0xb07a:	mov	qword ptr [rbx + 0x68], rax
0xb07e:	jle	0xb0a3


0xafdf:	cmp	qword ptr [r14 + r12*8], rbp
0xafe3:	jne	0xb058


0xb0a3:	cmp	r12, r8
0xb0a6:	jge	0xb2d8


0xb080:	cmp	qword ptr [r14 + r12*8 - 8], rbp
0xb085:	je	0xb09b


0xafe5:	mov	rdi, qword ptr [rbx + 0x10]
0xafe9:	sub	r8, rbp
0xafec:	lea	rdx, [r8*4]
0xaff4:	lea	rsi, [rdi + rbp*4]
0xaff8:	call	0x1cf0


0xb0ac:	mov	rax, qword ptr [rbx + 0x10]
0xb0b0:	jmp	0xb0c5


0xb2d8:	jne	0xb0cc


0xb09b:	test	r13, r13
0xb09e:	mov	r12, r13
0xb0a1:	jne	0xb090


0xb087:	jmp	0xb0a3


0x1cf0:	jmp	qword ptr [rip + 0x219232]


0xb0c5:	cmp	dword ptr [rax + r12*4], -1
0xb0ca:	je	0xb0b8


0xb0cc:	mov	rdx, qword ptr [r14 + r12*8]
0xb0d0:	sub	rdx, rbp
0xb0d3:	cmp	rdx, 0
0xb0d7:	mov	qword ptr [rbx + 0x30], rdx
0xb0db:	je	0xb111


0xb090:	cmp	qword ptr [r14 + r13*8 - 8], rbp
0xb095:	jne	0xb0a3




0xb0b8:	add	r12, 1
0xb0bc:	cmp	r12, r8
0xb0bf:	je	0xb2e0


0xb111:	movzx	eax, byte ptr [rbx + 0x8b]
0xb118:	mov	qword ptr [rbx + 0x38], rdx
0xb11c:	test	al, al
0xb11e:	je	0xad9a


0xb0dd:	jle	0xb0ff


0xb097:	sub	r13, 1
0xb09b:	test	r13, r13
0xb09e:	mov	r12, r13
0xb0a1:	jne	0xb090


0xb2e0:	mov	qword ptr [rbx + 0x30], 0
0xb2e8:	xor	edx, edx
0xb2ea:	jmp	0xb111


0xb0ff:	mov	rdi, qword ptr [rbx + 8]
0xb103:	mov	esi, 0xff
0xb108:	call	0x1b60


0xb0df:	mov	rax, qword ptr [rbx + 0x10]
0xb0e3:	lea	rcx, [rax + rdx*4]
0xb0e7:	nop	word ptr [rax + rax]
0xb0f0:	mov	dword ptr [rax], 0xffffffff
0xb0f6:	add	rax, 4
0xb0fa:	cmp	rcx, rax
0xb0fd:	jne	0xb0f0


0xb0f0:	mov	dword ptr [rax], 0xffffffff
0xb0f6:	add	rax, 4
0xb0fa:	cmp	rcx, rax
0xb0fd:	jne	0xb0f0


0xb308:	mov	dword ptr [rbx + 0x70], eax
0xb30b:	jmp	0xaf4a


0xaf4a:	cmp	r12, 0
0xaf4e:	jne	0xb36a


0xaf54:	movzx	eax, byte ptr [rbx + 0x8b]
0xaf5b:	mov	qword ptr [rbx + 0x38], r12
0xaf5f:	jmp	0xb11c


0xb36a:	jle	0xb387


0xb387:	cmp	byte ptr [rbx + 0x8b], 0
0xb38e:	jne	0xb3e8


0xb36c:	mov	rax, qword ptr [rbx + 0x10]
0xb370:	lea	rdx, [rax + r12*4]
0xb374:	nop	dword ptr [rax]
0xb378:	mov	dword ptr [rax], 0xffffffff
0xb37e:	add	rax, 4
0xb382:	cmp	rdx, rax
0xb385:	jne	0xb378


0xb390:	mov	qword ptr [rbx + 0x38], r12
0xb394:	jmp	0xad9a


0xb3e8:	mov	rdi, qword ptr [rbx + 8]
0xb3ec:	mov	rdx, r12
0xb3ef:	mov	esi, 0xff
0xb3f4:	call	0x1b60


0xb378:	mov	dword ptr [rax], 0xffffffff
0xb37e:	add	rax, 4
0xb382:	cmp	rdx, rax
0xb385:	jne	0xb378


0xad6e:	mov	r8, qword ptr [rsp]
0xad72:	mov	dword ptr [rbx + 0x70], eax
0xad75:	sub	r8, rbp
0xad78:	cmp	dword ptr [rbx + 0x90], 1
0xad7f:	jg	0xae20


0xad85:	cmp	byte ptr [rbx + 0x8b], 0
0xad8c:	jne	0xb130


0xae20:	mov	rdi, qword ptr [rbx + 0x10]
0xae24:	lea	rdx, [r8*4]
0xae2c:	lea	rsi, [rdi + rbp*4]
0xae30:	call	0x1cf0


0xad92:	sub	qword ptr [rbx + 0x38], rbp
0xad96:	mov	qword ptr [rbx + 0x30], r8
0xad9a:	add	qword ptr [rbx + 8], rbp
0xad9e:	mov	rax, qword ptr [rbx + 0x58]
0xada2:	sub	qword ptr [rbx + 0x68], rbp
0xada6:	mov	qword ptr [rbx + 0x28], r15
0xadaa:	sub	rax, rbp
0xadad:	cmp	dword ptr [rbx + 0x90], 1
0xadb4:	mov	qword ptr [rbx + 0x58], rax
0xadb8:	jle	0xae58


0xb130:	mov	rdi, qword ptr [rbx + 8]
0xb134:	mov	rdx, r8
0xb137:	lea	rsi, [rdi + rbp]
0xb13b:	call	0x1cf0


0xe8fe:	mov	edx, ebp
0xe900:	shr	edx, 8
0xe903:	mov	ecx, edx
0xe905:	and	cx, 0x3ff
0xe90a:	test	dl, 4
0xe90d:	jne	0xe878


0xe913:	and	edx, 8
0xe916:	je	0xe881


0xe878:	test	al, 1
0xe87a:	je	0xe8a0


0xe881:	test	cl, 0x20
0xe884:	je	0xe88a


0xe91c:	test	al, 1
0xe91e:	je	0xe881


0xe87c:	and	edx, 8
0xe87f:	jne	0xe8a0


0xe88a:	and	ecx, 0x80
0xe890:	je	0xe930


0xe886:	test	al, 2
0xe888:	je	0xe8a0


0xe924:	jmp	0xe8a0


0xe896:	test	al, 8
0xe898:	jne	0xe930


0xab32:	mov	ecx, ebx
0xab34:	mov	edx, eax
0xab36:	and	cx, 0x3ff
0xab3b:	test	bl, 4
0xab3e:	je	0xaba8


0xaba8:	and	ebx, 8
0xabab:	je	0xab4c


0xab40:	xor	eax, eax
0xab42:	test	dl, 1
0xab45:	je	0xab6c


0xab4c:	test	cl, 0x20
0xab4f:	je	0xab58


0xabad:	test	al, 1
0xabaf:	je	0xab4c


0xab47:	and	ebx, 8
0xab4a:	jne	0xab6c


0xab58:	shr	edx, 3
0xab5b:	mov	eax, 1
0xab60:	and	edx, 1
0xab63:	and	ecx, 0x80
0xab69:	cmovne	eax, edx
0xab6c:	pop	rbx
0xab6d:	ret	


0xab51:	xor	eax, eax
0xab53:	test	dl, 2
0xab56:	je	0xab6c


0xabb1:	xor	eax, eax
0xabb3:	pop	rbx
0xabb4:	ret	


0xf235:	lea	rdx, [rsp + 0x10]
0xf23a:	mov	ecx, eax
0xf23c:	mov	rsi, r15
0xf23f:	mov	rdi, r13
0xf242:	call	0x9f40


0xf247:	mov	rbp, rax
0xf24a:	mov	qword ptr [r14], rax
0xf24d:	jmp	0xf137


0xd6c5:	cmp	r12, rbp
0xd6c8:	mov	r13d, eax
0xd6cb:	je	0xdaa3


0xdaa3:	mov	edi, 8
0xdaa8:	mov	qword ptr [rsp + 0x90], 1
0xdab4:	mov	qword ptr [rsp + 0x98], 1
0xdac0:	call	0x1c20


0xd6d1:	mov	rbp, qword ptr [r14 + r12*8]
0xd6d5:	test	rbp, rbp
0xd6d8:	je	0xd6e4


0xd6e4:	pxor	xmm0, xmm0
0xd6e8:	mov	qword ptr [rsp + 0xa0], 0
0xd6f4:	movaps	xmmword ptr [rsp + 0x90], xmm0
0xd6fc:	cmp	r12, qword ptr [rsp + 0x40]
0xd701:	jge	0xda28


0xd6da:	test	byte ptr [rbp + 0x68], 0x40
0xd6de:	jne	0xdc00


0xd707:	mov	ecx, dword ptr [r15 + 0xe0]
0xd70e:	test	ecx, ecx
0xd710:	js	0xda28


0xda28:	mov	rdi, qword ptr [rsp + 0xa0]
0xda30:	call	0x19d0


0xdc00:	lea	rbx, [rsp + 0x90]
0xdc08:	lea	rsi, [rbp + 8]
0xdc0c:	mov	rdi, rbx
0xdc0f:	call	0x9d50


0xd716:	lea	rbx, [rsp + 0x90]
0xd71e:	lea	rax, [r12*8 + 8]
0xd726:	mov	qword ptr [rsp], r12
0xd72a:	mov	qword ptr [rsp + 0x20], 0
0xd733:	mov	qword ptr [rsp + 8], rbx
0xd738:	lea	rbx, [rsp + 0xb0]
0xd740:	mov	qword ptr [rsp + 0x10], rax
0xd745:	mov	rax, qword ptr [r15 + 0xb8]
0xd74c:	mov	qword ptr [rsp + 0x18], rbx
0xd751:	lea	rbx, [rsp + 0x8c]
0xd759:	mov	qword ptr [rsp + 0x58], rbx
0xd75e:	mov	rcx, qword ptr [rsp + 0x10]
0xd763:	mov	qword ptr [rsp + 0x98], 0
0xd76f:	mov	rsi, qword ptr [rax + rcx]
0xd773:	test	rsi, rsi
0xd776:	je	0xdb38


0xdb38:	test	rbp, rbp
0xdb3b:	jne	0xd7a2


0xd77c:	mov	rdi, qword ptr [rsp + 8]
0xd781:	add	rsi, 8
0xd785:	call	0x9110


0xdb41:	mov	rax, qword ptr [rsp]
0xdb45:	lea	rbx, [rax + 1]
0xdb49:	mov	r12, rbx
0xdb4c:	jmp	0xd9b4


0xd7a2:	cmp	qword ptr [rbp + 0x28], 0
0xd7a7:	mov	rax, qword ptr [rsp + 0x18]
0xd7ac:	pxor	xmm0, xmm0
0xd7b0:	mov	r12, qword ptr [r15 + 0x98]
0xd7b7:	mov	dword ptr [rsp + 0x8c], 0
0xd7c2:	mov	qword ptr [rax + 0x10], 0
0xd7ca:	movaps	xmmword ptr [rax], xmm0
0xd7cd:	jle	0xdd00


0xd9b4:	mov	edx, dword ptr [r15 + 0xa0]
0xd9bb:	mov	rsi, qword ptr [rsp]
0xd9bf:	mov	rdi, r15
0xd9c2:	call	0xa9d0


0xdd00:	xor	edi, edi
0xdd02:	jmp	0xdbb8


0xd7d3:	lea	rax, [r12 + 0xd8]
0xd7db:	xor	ebx, ebx
0xd7dd:	mov	qword ptr [rsp + 0x28], rax
0xd7e2:	jmp	0xd829


0xdbb8:	call	0x19d0


0xd829:	mov	rax, qword ptr [rbp + 0x30]
0xd82d:	mov	rdi, qword ptr [r12]
0xd831:	mov	r14, qword ptr [rax + rbx*8]
0xd835:	mov	r13, r14
0xd838:	shl	r13, 4
0xd83c:	lea	rsi, [rdi + r13]
0xd840:	test	byte ptr [rsi + 0xa], 0x10
0xd844:	je	0xd7e8


0xd7e8:	mov	rdx, qword ptr [rsp]
0xd7ec:	mov	rdi, r15
0xd7ef:	call	0xaac0


0xd846:	mov	r8, qword ptr [rsp]
0xd84a:	mov	rsi, qword ptr [rsp + 0x28]
0xd84f:	mov	rcx, r15
0xd852:	mov	rdx, r14
0xd855:	call	0xd3a0


0xd85a:	cmp	eax, 1
0xd85d:	jle	0xdb20


0xdb20:	test	eax, eax
0xdb22:	jne	0xd7f8


0xd863:	cdqe	
0xd865:	add	rax, qword ptr [rsp]
0xd869:	mov	rdx, qword ptr [r12 + 0x18]
0xd86e:	lea	r13, [r14*8]
0xd876:	mov	rdx, qword ptr [rdx + r14*8]
0xd87a:	mov	rcx, rax
0xd87d:	mov	qword ptr [rsp + 0x38], rax
0xd882:	lea	r14, [rax*8]
0xd88a:	mov	rax, qword ptr [r15 + 0xb8]
0xd891:	mov	rsi, qword ptr [rax + rcx*8]
0xd895:	mov	qword ptr [rsp + 0xb8], 0
0xd8a1:	test	rsi, rsi
0xd8a4:	je	0xd8c9


0xdb28:	mov	rsi, qword ptr [r12]
0xdb2c:	add	rsi, r13
0xdb2f:	jmp	0xd7e8


0xd7f8:	lea	r13, [r14*8]
0xd800:	mov	rax, qword ptr [r12 + 0x18]
0xd805:	mov	rdi, qword ptr [rsp + 8]
0xd80a:	mov	rsi, qword ptr [rax + r13]
0xd80e:	call	0x76b0


0xd8c9:	mov	rdi, qword ptr [rsp + 0x18]
0xd8ce:	mov	rsi, rdx
0xd8d1:	call	0x76b0


0xd8a6:	mov	rdi, qword ptr [rsp + 0x18]
0xd8ab:	add	rsi, 8
0xd8af:	mov	qword ptr [rsp + 0x50], rdx
0xd8b4:	call	0x9110


0xd8d6:	test	al, al
0xd8d8:	je	0xdb58


0xdb58:	mov	rdi, qword ptr [rsp + 0xc0]
0xdb60:	call	0x19d0


0xd8de:	add	r14, qword ptr [r15 + 0xb8]
0xd8e5:	mov	rdx, qword ptr [rsp + 0x18]
0xd8ea:	mov	rsi, r12
0xd8ed:	mov	rdi, qword ptr [rsp + 0x58]
0xd8f2:	call	0xa200


0xd8f7:	mov	rdx, qword ptr [rsp + 0x38]
0xd8fc:	mov	qword ptr [r14], rax
0xd8ff:	mov	rax, qword ptr [r15 + 0xb8]
0xd906:	cmp	qword ptr [rax + rdx*8], 0
0xd90b:	jne	0xd800


0xd911:	mov	edx, dword ptr [rsp + 0x8c]
0xd918:	test	edx, edx
0xd91a:	je	0xd800


0xd800:	mov	rax, qword ptr [r12 + 0x18]
0xd805:	mov	rdi, qword ptr [rsp + 8]
0xd80a:	mov	rsi, qword ptr [rax + r13]
0xd80e:	call	0x76b0


0xd920:	mov	rdi, qword ptr [rsp + 0xc0]
0xd928:	call	0x19d0


0xd813:	test	al, al
0xd815:	je	0xdb58


0xd81b:	add	rbx, 1
0xd81f:	cmp	rbx, qword ptr [rbp + 0x28]
0xd823:	jge	0xdbb0


0xdbb0:	mov	rdi, qword ptr [rsp + 0xc0]
0xdbb8:	call	0x19d0


0xd7f4:	test	al, al
0xd7f6:	je	0xd81b


0xd8b9:	test	eax, eax
0xd8bb:	mov	dword ptr [rsp + 0x8c], eax
0xd8c2:	mov	rdx, qword ptr [rsp + 0x50]
0xd8c7:	jne	0xd920


0xd78a:	test	eax, eax
0xd78c:	mov	dword ptr [rsp + 0x88], eax
0xd793:	jne	0xdb70


0xd799:	test	rbp, rbp
0xd79c:	je	0xd948


0xdb70:	mov	rdi, qword ptr [rsp + 0xa0]
0xdb78:	call	0x19d0


0xd948:	mov	rax, qword ptr [rsp]
0xd94c:	cmp	qword ptr [rsp + 0x98], 0
0xd955:	lea	rbx, [rax + 1]
0xd959:	mov	r12, rbx
0xd95c:	je	0xd9b4


0xd95e:	mov	ecx, dword ptr [rsp + 0x110]
0xd965:	mov	rdx, qword ptr [rsp + 0x48]
0xd96a:	mov	rsi, qword ptr [rsp + 8]
0xd96f:	mov	rdi, qword ptr [rsp + 0x30]
0xd974:	call	0x95a0


0xdc14:	test	eax, eax
0xdc16:	mov	dword ptr [rsp + 0x88], eax
0xdc1d:	jne	0xdb84


0xdc23:	test	byte ptr [rbp + 0x68], 0x40
0xdc27:	je	0xd6fc


0xd6fc:	cmp	r12, qword ptr [rsp + 0x40]
0xd701:	jge	0xda28


0xdc2d:	cmp	qword ptr [rsp + 0x98], 0
0xdc36:	je	0xdc62


0xdc62:	mov	rsi, qword ptr [rsp + 0x30]
0xdc67:	lea	rdi, [rsp + 0x88]
0xdc6f:	mov	ecx, r13d
0xdc72:	mov	rdx, rbx
0xdc75:	call	0x9f40


0xdc38:	mov	r8d, dword ptr [rsp + 0x110]
0xdc40:	mov	rcx, qword ptr [rsp + 0x48]
0xdc45:	mov	rdx, r12
0xdc48:	mov	rsi, rbx
0xdc4b:	mov	rdi, r15
0xdc4e:	call	0xa4e0


0xdc53:	test	eax, eax
0xdc55:	mov	dword ptr [rsp + 0x88], eax
0xdc5c:	jne	0xdb70


0xdc7a:	test	rax, rax
0xdc7d:	mov	rbp, rax
0xdc80:	je	0xdd07


0xdd07:	mov	esi, dword ptr [rsp + 0x88]
0xdd0e:	test	esi, esi
0xdd10:	je	0xdc86


0xdc86:	mov	rax, qword ptr [r15 + 0xb8]
0xdc8d:	mov	qword ptr [rax + r12*8], rbp
0xdc91:	jmp	0xd6fc


0xdd16:	jmp	0xdb70


0xd9c7:	mov	rdx, qword ptr [rsp + 8]
0xd9cc:	mov	rsi, qword ptr [rsp + 0x30]
0xd9d1:	lea	rdi, [rsp + 0x88]
0xd9d9:	mov	ecx, eax
0xd9db:	call	0x9f40


0xd9e0:	test	rax, rax
0xd9e3:	mov	rbp, rax
0xd9e6:	je	0xdbd0


0xdbd0:	mov	eax, dword ptr [rsp + 0x88]
0xdbd7:	test	eax, eax
0xdbd9:	jne	0xdb70


0xd9ec:	mov	rax, qword ptr [r15 + 0xb8]
0xd9f3:	mov	rdx, qword ptr [rsp + 0x10]
0xd9f8:	mov	qword ptr [rsp + 0x20], 0
0xda01:	mov	qword ptr [rax + rdx], rbp
0xda05:	cmp	qword ptr [rsp + 0x40], rbx
0xda0a:	jle	0xda28


0xdbdb:	mov	rax, qword ptr [r15 + 0xb8]
0xdbe2:	mov	rdx, qword ptr [rsp + 0x10]
0xdbe7:	add	qword ptr [rsp + 0x20], 1
0xdbed:	mov	qword ptr [rax + rdx], 0
0xdbf5:	jmp	0xda05


0xda0c:	movsxd	rdx, dword ptr [r15 + 0xe0]
0xda13:	add	qword ptr [rsp + 0x10], 8
0xda19:	cmp	rdx, qword ptr [rsp + 0x20]
0xda1e:	mov	qword ptr [rsp], rbx
0xda22:	jge	0xd75e


0xda05:	cmp	qword ptr [rsp + 0x40], rbx
0xda0a:	jle	0xda28


0xd75e:	mov	rcx, qword ptr [rsp + 0x10]
0xd763:	mov	qword ptr [rsp + 0x98], 0
0xd76f:	mov	rsi, qword ptr [rax + rcx]
0xd773:	test	rsi, rsi
0xd776:	je	0xdb38


0xdaa0:	mov	r13d, eax
0xdaa3:	mov	edi, 8
0xdaa8:	mov	qword ptr [rsp + 0x90], 1
0xdab4:	mov	qword ptr [rsp + 0x98], 1
0xdac0:	call	0x1c20


0xabeb:	test	rbx, rbx
0xabee:	jle	0xac98


0xac98:	pop	rbx
0xac99:	xor	eax, eax
0xac9b:	pop	rbp
0xac9c:	pop	r12
0xac9e:	ret	


0xabf4:	mov	rdx, qword ptr [rbp + 0x98]
0xabfb:	mov	r11d, eax
0xabfe:	mov	ebp, eax
0xac00:	and	eax, 1
0xac03:	mov	r9, qword ptr [r12]
0xac07:	xor	esi, esi
0xac09:	and	ebp, 8
0xac0c:	and	r11d, 2
0xac10:	mov	r10d, eax
0xac13:	mov	r8, qword ptr [rdx]
0xac16:	jmp	0xac29


0xac29:	mov	rax, qword ptr [r9 + rsi*8]
0xac2d:	mov	rdx, rax
0xac30:	shl	rdx, 4
0xac34:	add	rdx, r8
0xac37:	mov	ecx, dword ptr [rdx + 8]
0xac3a:	shr	ecx, 8
0xac3d:	mov	edi, ecx
0xac3f:	and	di, 0x3ff
0xac44:	cmp	byte ptr [rdx + 8], 2
0xac48:	jne	0xac20


0xac4a:	test	di, di
0xac4d:	je	0xac75


0xac20:	add	rsi, 1
0xac24:	cmp	rsi, rbx
0xac27:	je	0xac98


0xac75:	pop	rbx
0xac76:	pop	rbp
0xac77:	pop	r12
0xac79:	ret	


0xac4f:	test	cl, 4
0xac52:	je	0xac80


0xac80:	and	ecx, 8
0xac83:	je	0xac5e


0xac54:	test	r10d, r10d
0xac57:	je	0xac20


0xac5e:	test	dil, 0x20
0xac62:	je	0xac69


0xac85:	test	r10d, r10d
0xac88:	jne	0xac20


0xac59:	and	ecx, 8
0xac5c:	jne	0xac20


0xac69:	and	edi, 0x80
0xac6f:	je	0xac75


0xac64:	test	r11d, r11d
0xac67:	je	0xac20


0xac8a:	test	dil, 0x20
0xac8e:	je	0xac69


0xac71:	test	ebp, ebp
0xac73:	je	0xac20


0xac90:	jmp	0xac64


0x10219:	test	rax, rax
0x1021c:	mov	r8, qword ptr [rsp + 0x10]
0x10221:	je	0xfd69


0x10227:	jmp	0xfd46


0x107e1:	mov	qword ptr [rsp + 0x1d0], rax
0x107e9:	jmp	0xff08


0xff08:	mov	r13, qword ptr [rsp + 0x1d0]
0xff10:	movabs	rsi, 0x1ffffffffffffffe
0xff1a:	cmp	qword ptr [rsp + 0x20], rsi
0xff1f:	mov	r15, qword ptr [rsp + 0x1b8]
0xff27:	ja	0x10b8b


0xff2d:	mov	rax, qword ptr [rsp + 0x20]
0xff32:	add	rax, 1
0xff36:	lea	rbx, [rax*8]
0xff3e:	mov	qword ptr [rsp + 8], rax
0xff43:	mov	rdi, rbx
0xff46:	call	0x1c20


0x10b8b:	mov	rdi, rbx
0x10b8e:	mov	dword ptr [rsp + 0x5c], 0xc
0x10b96:	jmp	0x10168


0xfedc:	mov	r13, rax
0xfedf:	mov	qword ptr [rsp + 0x1d0], rax
0xfee7:	mov	rax, qword ptr [rsp + 0x38]
0xfeec:	test	byte ptr [rax + 0xb0], 1
0xfef3:	jne	0xff10


0xfef5:	mov	rax, qword ptr [rsp + 0x38]
0xfefa:	cmp	qword ptr [rax + 0x98], 0
0xff02:	je	0x1089c


0xff10:	movabs	rsi, 0x1ffffffffffffffe
0xff1a:	cmp	qword ptr [rsp + 0x20], rsi
0xff1f:	mov	r15, qword ptr [rsp + 0x1b8]
0xff27:	ja	0x10b8b


0x10bec:	test	rax, rax
0x10bef:	mov	qword ptr [rsp + 0x30], rax
0x10bf4:	je	0xfcdd


0x10bfa:	jmp	0x10b67


0xee80:	pop	rdx
0xee81:	cmp	eax, 1
0xee84:	pop	rcx
0xee85:	mov	r11, qword ptr [rsp + 0x10]
0xee8a:	je	0xeeff


0xee8c:	test	eax, eax
0xee8e:	jne	0xeb68


0xee94:	mov	rax, qword ptr [r12 + 0x20]
0xee99:	cmp	rax, qword ptr [r12 + 0x18]
0xee9e:	je	0xf078


0xf078:	lea	rdx, [rax + rax + 1]
0xf07d:	mov	rdi, qword ptr [r12 + 0x28]
0xf082:	lea	rsi, [rdx*8]
0xf08a:	mov	qword ptr [rsp + 0x10], rdx
0xf08f:	call	0x1c90


0xeea4:	mov	esi, 0x28
0xeea9:	mov	edi, 1
0xeeae:	call	0x1bc0


0xe685:	test	eax, eax
0xe687:	pop	rdx
0xe688:	pop	rcx
0xe689:	je	0xe6a0


0xe6a0:	mov	rax, qword ptr [rbx + 0xc8]
0xe6a7:	mov	rdx, qword ptr [rbx + 0xd0]
0xe6ae:	mov	r15, qword ptr [rbp + 8]
0xe6b2:	mov	rcx, qword ptr [r13]
0xe6b6:	mov	rdi, qword ptr [rbx + 0xd8]
0xe6bd:	cmp	rax, rdx
0xe6c0:	mov	rsi, r15
0xe6c3:	jge	0xe760


0xe68b:	add	rsp, 0x18
0xe68f:	pop	rbx
0xe690:	pop	rbp
0xe691:	pop	r12
0xe693:	pop	r13
0xe695:	pop	r14
0xe697:	pop	r15
0xe699:	ret	


0xe6c9:	lea	rdx, [rax + rax*4]
0xe6cd:	shl	rdx, 3
0xe6d1:	test	rax, rax
0xe6d4:	jle	0xe6e1


0xe760:	lea	rsi, [rdx + rdx*4]
0xe764:	mov	qword ptr [rsp + 8], rcx
0xe769:	shl	rsi, 4
0xe76d:	call	0x1c90


0xe6e1:	add	rdi, rdx
0xe6e4:	xor	edx, edx
0xe6e6:	cmp	r15, rcx
0xe6e9:	sete	dl
0xe6ec:	add	rax, 1
0xe6f0:	mov	qword ptr [rdi], r14
0xe6f3:	neg	edx
0xe6f5:	mov	qword ptr [rdi + 8], r12
0xe6f9:	mov	qword ptr [rdi + 0x10], rcx
0xe6fd:	mov	word ptr [rdi + 0x22], dx
0xe701:	mov	qword ptr [rdi + 0x18], r15
0xe705:	mov	qword ptr [rbx + 0xc8], rax
0xe70c:	mov	byte ptr [rdi + 0x20], 0
0xe710:	mov	rax, r15
0xe713:	movsxd	rdx, dword ptr [rbx + 0xe0]
0xe71a:	sub	rax, rcx
0xe71d:	cmp	rdx, rax
0xe720:	jge	0xe72c


0xe6d6:	lea	r8, [rdi + rdx - 0x28]
0xe6db:	cmp	r12, qword ptr [r8 + 8]
0xe6df:	je	0xe750


0xe722:	sub	r15d, ecx
0xe725:	mov	dword ptr [rbx + 0xe0], r15d
0xe72c:	add	rsi, r12
0xe72f:	sub	rsi, qword ptr [r13]
0xe733:	add	rsp, 0x18
0xe737:	mov	rdi, rbx
0xe73a:	pop	rbx
0xe73b:	pop	rbp
0xe73c:	pop	r12
0xe73e:	pop	r13
0xe740:	pop	r14
0xe742:	pop	r15
0xe744:	jmp	0x8280


0xe72c:	add	rsi, r12
0xe72f:	sub	rsi, qword ptr [r13]
0xe733:	add	rsp, 0x18
0xe737:	mov	rdi, rbx
0xe73a:	pop	rbx
0xe73b:	pop	rbp
0xe73c:	pop	r12
0xe73e:	pop	r13
0xe740:	pop	r14
0xe742:	pop	r15
0xe744:	jmp	0x8280


0xe750:	mov	byte ptr [r8 + 0x20], 1
0xe755:	jmp	0xe6e1


0xeabb:	cmp	eax, 1
0xeabe:	mov	r8, qword ptr [r14 + 8]
0xeac2:	ja	0xeb68


0xeac8:	add	rbp, 1
0xeacc:	cmp	rbp, qword ptr [r13 + 0x20]
0xead0:	mov	r11, r15
0xead3:	mov	rbx, r12
0xead6:	jge	0xed88


0xed88:	mov	rbx, r13
0xed8b:	mov	r13, r8
0xed8e:	lea	r11, [r15 + 1]
0xed92:	cmp	qword ptr [rsp + 8], r11
0xed97:	jl	0xea29


0x11f1e:	cdqe	
0x11f20:	add	qword ptr [r14 + 0x48], rax
0x11f24:	movzx	eax, byte ptr [r13 + 8]
0x11f29:	movzx	edx, byte ptr [r13]
0x11f2e:	cmp	al, 2
0x11f30:	je	0x11f80


0x11f80:	mov	rbx, -2
0x11f87:	mov	rax, rbx
0x11f8a:	pop	rbx
0x11f8b:	pop	rbp
0x11f8c:	pop	r12
0x11f8e:	pop	r13
0x11f90:	pop	r14
0x11f92:	ret	


0x11f32:	cmp	al, 0x18
0x11f34:	je	0x11f87


0x11f87:	mov	rax, rbx
0x11f8a:	pop	rbx
0x11f8b:	pop	rbp
0x11f8c:	pop	r12
0x11f8e:	pop	r13
0x11f90:	pop	r14
0x11f92:	ret	


0x11f36:	cmp	dl, 0x2c
0x11f39:	je	0x11f87


0x11f3b:	cmp	al, 1
0x11f3d:	je	0x11f48


0x11f48:	lea	eax, [rdx - 0x30]
0x11f4b:	cmp	al, 9
0x11f4d:	ja	0x11f3f


0x11f3f:	mov	rbx, r12
0x11f42:	jmp	0x11f10


0x11f4f:	cmp	rbx, -2
0x11f53:	je	0x11f3f


0x11f10:	mov	rdx, rbp
0x11f13:	mov	rsi, r14
0x11f16:	mov	rdi, r13
0x11f19:	call	0x117f0


0x11f55:	cmp	rbx, -1
0x11f59:	je	0x11f98


0x11f98:	movzx	ebx, dl
0x11f9b:	sub	ebx, 0x30
0x11f9e:	movsxd	rbx, ebx
0x11fa1:	jmp	0x11f10


0x11f5b:	lea	rax, [rbx + rbx*4]
0x11f5f:	lea	rbx, [rdx + rax*2]
0x11f63:	mov	eax, 0x8030
0x11f68:	cmp	rbx, 0x8030
0x11f6f:	cmovg	rbx, rax
0x11f73:	sub	rbx, 0x30
0x11f77:	jmp	0x11f10


0x134ce:	mov	edx, dword ptr [rbx]
0x134d0:	mov	r14, rax
0x134d3:	test	edx, edx
0x134d5:	je	0x134e0


0x134e0:	lea	rax, [rsp + 0x20]
0x134e5:	mov	qword ptr [rsp + 0x18], rax
0x134ea:	nop	word ptr [rax + rax]
0x134f0:	movzx	eax, byte ptr [rbp + 8]
0x134f4:	mov	edx, eax
0x134f6:	and	edx, 0xfffffff7
0x134f9:	cmp	dl, 2
0x134fc:	je	0x13590


0x134d7:	test	rax, rax
0x134da:	je	0x135da


0x13590:	mov	rcx, qword ptr [rsp + 0x38]
0x13595:	xor	rcx, qword ptr fs:[0x28]
0x1359e:	mov	rax, r14
0x135a1:	jne	0x1360d


0x13502:	cmp	al, 9
0x13504:	jne	0x1350f


0x135da:	xor	r14d, r14d
0x135dd:	jmp	0x13590


0x135a3:	add	rsp, 0x48
0x135a7:	pop	rbx
0x135a8:	pop	rbp
0x135a9:	pop	r12
0x135ab:	pop	r13
0x135ad:	pop	r14
0x135af:	pop	r15
0x135b1:	ret	


0x1360d:	call	0x1ad0


0x13506:	test	r12, r12
0x13509:	jne	0x13590


0x1350f:	mov	rdi, qword ptr [rsp]
0x13513:	mov	r9, rbx
0x13516:	mov	r8, r12
0x13519:	mov	rcx, r15
0x1351c:	mov	rdx, rbp
0x1351f:	mov	rsi, r13
0x13522:	call	0x11fb0


0x13527:	mov	r9, rax
0x1352a:	mov	eax, dword ptr [rbx]
0x1352c:	test	eax, eax
0x1352e:	je	0x13539


0x13539:	test	r14, r14
0x1353c:	je	0x135b8


0x13530:	test	r9, r9
0x13533:	je	0x135c4


0x135b8:	test	r14, r14
0x135bb:	cmove	r14, r9
0x135bf:	jmp	0x134f0


0x1353e:	test	r9, r9
0x13541:	je	0x135b8


0x135c4:	test	r14, r14
0x135c7:	je	0x135da


0x134f0:	movzx	eax, byte ptr [rbp + 8]
0x134f4:	mov	edx, eax
0x134f6:	and	edx, 0xfffffff7
0x134f9:	cmp	dl, 2
0x134fc:	je	0x13590


0x13543:	mov	rax, qword ptr [rsp + 0x10]
0x13548:	mov	r8, qword ptr [rsp + 0x18]
0x1354d:	mov	rcx, r9
0x13550:	mov	rdx, r14
0x13553:	mov	qword ptr [rsp + 8], r9
0x13558:	mov	byte ptr [rsp + 0x28], 0x10
0x1355d:	lea	rsi, [rax + 0x80]
0x13564:	lea	rdi, [rax + 0x70]
0x13568:	call	0x98b0


0x135c9:	lea	rsi, [rip - 0xb260]
0x135d0:	xor	edx, edx
0x135d2:	mov	rdi, r14
0x135d5:	call	0x74d0


0x1356d:	test	rax, rax
0x13570:	mov	r9, qword ptr [rsp + 8]
0x13575:	je	0x135e0


0x135e0:	lea	rsi, [rip - 0xb277]
0x135e7:	mov	rdi, r9
0x135ea:	xor	edx, edx
0x135ec:	call	0x74d0


0x13577:	mov	r14, rax
0x1357a:	movzx	eax, byte ptr [rbp + 8]
0x1357e:	mov	edx, eax
0x13580:	and	edx, 0xfffffff7
0x13583:	cmp	dl, 2
0x13586:	jne	0x13502


0x13668:	mov	edx, dword ptr [r13]
0x1366c:	mov	r15, rax
0x1366f:	test	edx, edx
0x13671:	je	0x1367c


0x1367c:	lea	rax, [rsp + 0x30]
0x13681:	mov	qword ptr [rsp + 8], rax
0x13686:	jmp	0x13714


0x13673:	test	rax, rax
0x13676:	je	0x13762


0x13714:	cmp	byte ptr [rbp + 8], 0xa
0x13718:	jne	0x13768


0x13762:	xor	r15d, r15d
0x13765:	nop	dword ptr [rax]
0x13768:	mov	rcx, qword ptr [rsp + 0x48]
0x1376d:	xor	rcx, qword ptr fs:[0x28]
0x13776:	mov	rax, r15
0x13779:	jne	0x1379a


0x1371a:	mov	rdx, r14
0x1371d:	mov	rsi, r12
0x13720:	mov	rdi, rbp
0x13723:	or	rdx, 0x800000
0x1372a:	call	0x117f0


0x13768:	mov	rcx, qword ptr [rsp + 0x48]
0x1376d:	xor	rcx, qword ptr fs:[0x28]
0x13776:	mov	rax, r15
0x13779:	jne	0x1379a


0x1377b:	add	rsp, 0x58
0x1377f:	pop	rbx
0x13780:	pop	rbp
0x13781:	pop	r12
0x13783:	pop	r13
0x13785:	pop	r14
0x13787:	pop	r15
0x13789:	ret	


0x1379a:	call	0x1ad0


0x1372f:	cdqe	
0x13731:	add	qword ptr [r12 + 0x48], rax
0x13736:	movzx	eax, byte ptr [rbp + 8]
0x1373a:	mov	edx, eax
0x1373c:	and	edx, 0xfffffff7
0x1373f:	cmp	dl, 2
0x13742:	jne	0x13690


0x13748:	xor	ecx, ecx
0x1374a:	jmp	0x136ef


0x13690:	cmp	al, 9
0x13692:	jne	0x136a0


0x136ef:	mov	r8, qword ptr [rsp + 8]
0x136f4:	lea	rsi, [rbx + 0x80]
0x136fb:	lea	rdi, [rbx + 0x70]
0x136ff:	mov	rdx, r15
0x13702:	mov	byte ptr [rsp + 0x38], 0xa
0x13707:	call	0x98b0


0x13694:	cmp	qword ptr [rsp + 0x10], 0
0x1369a:	jne	0x13748


0x136a0:	mov	rax, qword ptr [rbx + 0xa8]
0x136a7:	mov	r8, qword ptr [rsp + 0x10]
0x136ac:	mov	rcx, r14
0x136af:	mov	rsi, qword ptr [rsp + 0x28]
0x136b4:	mov	r9, r13
0x136b7:	mov	rdx, rbp
0x136ba:	mov	rdi, r12
0x136bd:	mov	qword ptr [rsp + 0x18], rax
0x136c2:	mov	rax, qword ptr [rsp + 0x20]
0x136c7:	mov	qword ptr [rbx + 0xa8], rax
0x136ce:	call	0x13490


0x136d3:	mov	rcx, rax
0x136d6:	mov	eax, dword ptr [r13]
0x136da:	test	eax, eax
0x136dc:	je	0x136e3


0x136e3:	mov	rax, qword ptr [rsp + 0x18]
0x136e8:	or	qword ptr [rbx + 0xa8], rax
0x136ef:	mov	r8, qword ptr [rsp + 8]
0x136f4:	lea	rsi, [rbx + 0x80]
0x136fb:	lea	rdi, [rbx + 0x70]
0x136ff:	mov	rdx, r15
0x13702:	mov	byte ptr [rsp + 0x38], 0xa
0x13707:	call	0x98b0


0x136de:	test	rcx, rcx
0x136e1:	je	0x1374c


0x1374c:	test	r15, r15
0x1374f:	je	0x13762


0x13751:	lea	rsi, [rip - 0xb3e8]
0x13758:	xor	edx, edx
0x1375a:	mov	rdi, r15
0x1375d:	call	0x74d0


0x1370c:	test	rax, rax
0x1370f:	mov	r15, rax
0x13712:	je	0x13790


0x13790:	mov	dword ptr [r13], 0xc
0x13798:	jmp	0x13768


0x14efd:	mov	rdi, r13
0x14f00:	mov	rbx, rax
0x14f03:	call	0x19d0


0x15233:	add	rsp, 0x18
0x15237:	ret	


0x15250:	add	rsp, 0x18
0x15254:	ret	


0x15275:	add	rsp, 0x28
0x15279:	ret	


0x15297:	add	rsp, 0x28
0x1529b:	ret	


0x15561:	test	rbp, rbp
0x15564:	je	0x15586


0x15586:	add	rsp, 8
0x1558a:	pop	rbx
0x1558b:	pop	rbp
0x1558c:	pop	r12
0x1558e:	pop	r13
0x15590:	pop	r14
0x15592:	pop	r15
0x15594:	ret	


0x15566:	xor	ebx, ebx
0x15568:	nop	dword ptr [rax + rax]
0x15570:	mov	rdx, r15
0x15573:	mov	rsi, r14
0x15576:	mov	edi, r13d
0x15579:	call	qword ptr [r12 + rbx*8]


0xb140:	movzx	eax, byte ptr [rbx + 0x8b]
0xb147:	sub	qword ptr [rbx + 0x30], rbp
0xb14b:	sub	qword ptr [rbx + 0x38], rbp
0xb14f:	jmp	0xb11c


0xae35:	mov	r8, qword ptr [rbx + 0x30]
0xae39:	sub	r8, rbp
0xae3c:	jmp	0xad85


0xaffd:	mov	rdi, qword ptr [rbx + 8]
0xb001:	mov	rdx, qword ptr [rbx + 0x30]
0xb005:	lea	rsi, [rdi + rbp]
0xb009:	sub	rdx, rbp
0xb00c:	call	0x1cf0


0xb011:	mov	rax, qword ptr [rbx + 0x30]
0xb015:	sub	qword ptr [rbx + 0x38], rbp
0xb019:	sub	rax, rbp
0xb01c:	test	rax, rax
0xb01f:	mov	qword ptr [rbx + 0x30], rax
0xb023:	jle	0xb048


0xb025:	mov	rcx, qword ptr [rbx + 0x18]
0xb029:	xor	eax, eax
0xb02b:	lea	rsi, [rcx + rbp*8]
0xb02f:	nop	
0xb030:	mov	rdx, qword ptr [rsi + rax*8]
0xb034:	sub	rdx, rbp
0xb037:	mov	qword ptr [rcx + rax*8], rdx
0xb03b:	add	rax, 1
0xb03f:	cmp	qword ptr [rbx + 0x30], rax
0xb043:	jg	0xb030


0xb030:	mov	rdx, qword ptr [rsi + rax*8]
0xb034:	sub	rdx, rbp
0xb037:	mov	qword ptr [rcx + rax*8], rdx
0xb03b:	add	rax, 1
0xb03f:	cmp	qword ptr [rbx + 0x30], rax
0xb043:	jg	0xb030


0xd47e:	test	eax, eax
0xd480:	je	0xd460


0xd460:	add	rbx, 1
0xd464:	cmp	rbx, qword ptr [r13 + 0x48]
0xd468:	jge	0xd528


0xd528:	mov	rsi, qword ptr [r13 + 0x40]
0xd52c:	test	rsi, rsi
0xd52f:	jle	0xd511


0xea8c:	test	eax, eax
0xea8e:	mov	r8, qword ptr [rsp + 0x10]
0xea93:	mov	r11, qword ptr [rsp + 0x18]
0xea98:	mov	r9, qword ptr [rsp + 0x20]
0xea9d:	jne	0xef68


0xd12f:	cmp	rax, -1
0xd133:	je	0xd15f


0xd15f:	mov	rax, qword ptr [rsp + 0x30]
0xd164:	test	byte ptr [rax + 0x1a], 0x40
0xd168:	je	0xd0ff


0xd135:	movzx	edx, byte ptr [rsp + 0x60]
0xd13a:	test	r13d, r13d
0xd13d:	mov	byte ptr [r12 + rdx], 1
0xd142:	mov	qword ptr [rsp + 0x10], rdx
0xd147:	je	0xd15f


0xd0ff:	add	rbp, 1
0xd103:	cmp	rbp, qword ptr [r15 + 0x28]
0xd107:	jge	0xd1b4


0xd16a:	mov	rax, qword ptr [rsp + 8]
0xd16f:	cmp	dword ptr [rax + 0xb4], 1
0xd176:	jle	0xd0ff


0xd149:	call	0x1db0


0xd1b4:	mov	ebx, r13d
0xd1b7:	mov	rbp, r12
0xd1ba:	jmp	0xcf37


0xd178:	mov	rax, qword ptr [r15]
0xd17b:	mov	edi, dword ptr [rax + rbx]
0xd17e:	call	0x1d20


0x1d20:	jmp	qword ptr [rip + 0x21921a]




0x22c1:	mov	rdi, rbp
0x22c4:	call	0x19d0


0x7d42:	test	eax, eax
0x7d44:	jne	0x7e38


0x7e38:	call	0x19c0


0xd14e:	mov	rdx, qword ptr [rsp + 0x10]
0xd153:	mov	rax, qword ptr [rax]
0xd156:	movsxd	rax, dword ptr [rax + rdx*4]
0xd15a:	mov	byte ptr [r12 + rax], 1
0xd15f:	mov	rax, qword ptr [rsp + 0x30]
0xd164:	test	byte ptr [rax + 0x1a], 0x40
0xd168:	je	0xd0ff


0xd245:	mov	rax, qword ptr [rax]
0xd248:	lea	rdx, [r12 + r14]
0xd24c:	movsxd	rax, dword ptr [rax + rdx*4]
0xd250:	mov	byte ptr [rbp + rax], 1
0xd255:	add	r14, 1
0xd259:	cmp	r14, 0x40
0xd25d:	jne	0xd230


0xcf94:	mov	rax, qword ptr [rax]
0xcf97:	movsxd	rax, dword ptr [rax + r13*4]
0xcf9b:	mov	byte ptr [rbp + rax], 1
0xcfa0:	mov	rax, qword ptr [rsp + 0x30]
0xcfa5:	test	byte ptr [rax + 0x1a], 0x40
0xcfa9:	je	0xcf37


0x119ad:	mov	r8d, dword ptr [rsp]
0x119b1:	test	eax, eax
0x119b3:	setne	al
0x119b6:	cmp	r8d, 0x5f
0x119ba:	sete	dl
0x119bd:	lea	ecx, [r12 - 0x27]
0x119c2:	or	eax, edx
0x119c4:	shl	eax, 6
0x119c7:	or	r13d, eax
0x119ca:	cmp	cl, 0x56
0x119cd:	mov	byte ptr [rbp + 0xa], r13b
0x119d1:	ja	0x11dd5


0x119d7:	lea	rdx, [rip + 0x53c6]
0x119de:	movzx	ecx, cl
0x119e1:	movsxd	rax, dword ptr [rdx + rcx*4]
0x119e5:	add	rax, rdx
0x119e8:	jmp	rax


0x11dd5:	mov	eax, 2
0x11dda:	jmp	0x118b4


0xaa9f:	test	eax, eax
0xaaa1:	jne	0xaaac


0xaaa3:	cmp	ebx, 0x5f
0xaaa6:	jne	0xaa1b


0xaaac:	mov	eax, 1
0xaab1:	jmp	0xaa22


0x11885:	mov	ecx, dword ptr [rsp]
0x11888:	test	eax, eax
0x1188a:	setne	al
0x1188d:	cmp	ecx, 0x5f
0x11890:	sete	cl
0x11893:	or	eax, ecx
0x11895:	shl	eax, 6
0x11898:	or	r13d, eax
0x1189b:	mov	byte ptr [rbp + 0xa], r13b
0x1189f:	mov	rdx, qword ptr [rsp + 8]
0x118a4:	jmp	0x1191c


0x1191c:	sub	r12d, 0xa
0x11920:	cmp	r12b, 0x73
0x11924:	ja	0x11a5c


0x1192a:	lea	rcx, [rip + 0x52a3]
0x11931:	movzx	r12d, r12b
0x11935:	movsxd	rax, dword ptr [rcx + r12*4]
0x11939:	add	rax, rcx
0x1193c:	jmp	rax


0x11a5c:	mov	eax, 1
0x11a61:	jmp	0x118b4


0xb3f9:	mov	r12, qword ptr [rbx + 0x30]
0xb3fd:	jmp	0xaf54


0xb10d:	mov	rdx, qword ptr [rbx + 0x30]
0xb111:	movzx	eax, byte ptr [rbx + 0x8b]
0xb118:	mov	qword ptr [rbx + 0x38], rdx
0xb11c:	test	al, al
0xb11e:	je	0xad9a


0x82fd:	mov	qword ptr [rbx + 0xc0], rbp
0x8304:	jmp	0x82b4


0x11de5:	mov	rsi, qword ptr [rax]
0x11de8:	movzx	edx, r12b
0x11dec:	movzx	eax, word ptr [rsi + rdx*2]
0x11df0:	shr	ax, 3
0x11df4:	and	eax, 1
0x11df7:	cmp	r12b, 0x5f
0x11dfb:	jmp	0x119ba


0x119ba:	sete	dl
0x119bd:	lea	ecx, [r12 - 0x27]
0x119c2:	or	eax, edx
0x119c4:	shl	eax, 6
0x119c7:	or	r13d, eax
0x119ca:	cmp	cl, 0x56
0x119cd:	mov	byte ptr [rbp + 0xa], r13b
0x119d1:	ja	0x11dd5


0x118f3:	mov	rsi, qword ptr [rax]
0x118f6:	movzx	ecx, r12b
0x118fa:	movzx	eax, word ptr [rsi + rcx*2]
0x118fe:	shr	ax, 3
0x11902:	and	eax, 1
0x11905:	cmp	r12b, 0x5f
0x11909:	sete	cl
0x1190c:	or	eax, ecx
0x1190e:	shl	eax, 6
0x11911:	or	r13d, eax
0x11914:	mov	byte ptr [rbp + 0xa], r13b
0x11918:	mov	rdx, qword ptr [rsp]
0x1191c:	sub	r12d, 0xa
0x11920:	cmp	r12b, 0x73
0x11924:	ja	0x11a5c


0xc45c:	lea	rdi, [rip + 0xa6a0]
0xc463:	mov	qword ptr [r13], rax
0xc467:	mov	ecx, 6
0xc46c:	mov	rsi, r12
0xc46f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc46f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc471:	seta	al
0xc474:	sbb	al, 0
0xc476:	test	al, al
0xc478:	je	0xc4e8


0xc4e8:	call	0x1dc0


0xc47a:	lea	rdi, [rip + 0xa688]
0xc481:	mov	ecx, 6
0xc486:	mov	rsi, r12
0xc489:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc489:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc48b:	seta	al
0xc48e:	sbb	al, 0
0xc490:	test	al, al
0xc492:	jne	0xc598


0xc498:	call	0x1dc0


0xc598:	lea	rdi, [rip + 0xa55e]
0xc59f:	mov	ecx, 6
0xc5a4:	mov	rsi, r12
0xc5a7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc5a7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc5a9:	seta	al
0xc5ac:	sbb	al, 0
0xc5ae:	test	al, al
0xc5b0:	je	0xc61a


0xc61a:	call	0x1dc0


0xc5b2:	lea	rdi, [rip + 0xa556]
0xc5b9:	mov	ecx, 6
0xc5be:	mov	rsi, r12
0xc5c1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc5c1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc5c3:	seta	al
0xc5c6:	sbb	al, 0
0xc5c8:	test	al, al
0xc5ca:	jne	0xc662


0xc5d0:	call	0x1dc0


0xc662:	lea	rdi, [rip + 0xa488]
0xc669:	mov	ecx, 6
0xc66e:	mov	rsi, r12
0xc671:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc671:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc673:	seta	al
0xc676:	sbb	al, 0
0xc678:	test	al, al
0xc67a:	je	0xc723


0xc723:	call	0x1dc0


0xc680:	lea	rdi, [rip + 0xa4a7]
0xc687:	mov	ecx, 6
0xc68c:	mov	rsi, r12
0xc68f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc68f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc691:	seta	al
0xc694:	sbb	al, 0
0xc696:	test	al, al
0xc698:	jne	0xc7a3


0xc69e:	call	0x1dc0


0xc7a3:	lea	rdi, [rip + 0xa36b]
0xc7aa:	mov	ecx, 6
0xc7af:	mov	rsi, r12
0xc7b2:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc7b2:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc7b4:	seta	al
0xc7b7:	sbb	al, 0
0xc7b9:	test	al, al
0xc7bb:	jne	0xc83c


0xc7bd:	call	0x1dc0


0xc83c:	lea	rdi, [rip + 0xa2b4]
0xc843:	mov	ecx, 6
0xc848:	mov	rsi, r12
0xc84b:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc84b:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc84d:	seta	al
0xc850:	sbb	al, 0
0xc852:	test	al, al
0xc854:	jne	0xc8a2


0xc856:	call	0x1dc0


0xc8a2:	lea	rdi, [rip + 0xa272]
0xc8a9:	mov	ecx, 6
0xc8ae:	mov	rsi, r12
0xc8b1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc8b1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xc8b3:	seta	al
0xc8b6:	sbb	al, 0
0xc8b8:	test	al, al
0xc8ba:	jne	0xc9ae


0xc8c0:	call	0x1dc0


0xc9ae:	lea	rsi, [rip + 0xa16c]
0xc9b5:	mov	rdi, r12
0xc9b8:	call	0x1bd0


0xc8c5:	xor	ecx, ecx
0xc8c7:	test	rbp, rbp
0xc8ca:	mov	rdx, qword ptr [rax]
0xc8cd:	mov	esi, 1
0xc8d2:	jne	0xc974


0xc8d8:	test	byte ptr [rdx + rcx*2], 1
0xc8dc:	je	0xc8ef


0xc974:	xor	eax, eax
0xc976:	mov	edi, 1
0xc97b:	test	byte ptr [rdx + rax*2], 1
0xc97f:	je	0xc99d


0xc8ef:	add	rcx, 1
0xc8f3:	cmp	rcx, 0x100
0xc8fa:	jne	0xc8d8


0xc8de:	mov	rax, rcx
0xc8e1:	mov	rdi, rsi
0xc8e4:	sar	rax, 6
0xc8e8:	shl	rdi, cl
0xc8eb:	or	qword ptr [rbx + rax*8], rdi
0xc8ef:	add	rcx, 1
0xc8f3:	cmp	rcx, 0x100
0xc8fa:	jne	0xc8d8


0xc99d:	add	rax, 1
0xc9a1:	cmp	rax, 0x100
0xc9a7:	jne	0xc97b


0xc981:	movzx	ecx, byte ptr [rbp + rax]
0xc986:	mov	r14, rdi
0xc989:	mov	rsi, rcx
0xc98c:	and	ecx, 0x3f
0xc98f:	shr	rsi, 3
0xc993:	shl	r14, cl
0xc996:	and	esi, 0x18
0xc999:	or	qword ptr [rbx + rsi], r14
0xc99d:	add	rax, 1
0xc9a1:	cmp	rax, 0x100
0xc9a7:	jne	0xc97b


0xc8fc:	jmp	0xc4d4


0xc9a9:	jmp	0xc4d4


0xc97b:	test	byte ptr [rdx + rax*2], 1
0xc97f:	je	0xc99d


0xc4d4:	xor	eax, eax
0xc4d6:	add	rsp, 0x10
0xc4da:	pop	rbx
0xc4db:	pop	rbp
0xc4dc:	pop	r12
0xc4de:	pop	r13
0xc4e0:	pop	r14
0xc4e2:	ret	


0xc85b:	xor	ecx, ecx
0xc85d:	test	rbp, rbp
0xc860:	mov	rax, qword ptr [rax]
0xc863:	mov	edi, 1
0xc868:	jne	0xcb90


0xc86e:	test	byte ptr [rax + rcx*2 + 1], 1
0xc873:	je	0xc886


0xcb90:	xor	edx, edx
0xcb92:	test	byte ptr [rax + rdx*2 + 1], 1
0xcb97:	je	0xcbb5


0xc886:	add	rcx, 1
0xc88a:	cmp	rcx, 0x100
0xc891:	jne	0xc86e


0xc875:	mov	rdx, rcx
0xc878:	mov	rsi, rdi
0xc87b:	sar	rdx, 6
0xc87f:	shl	rsi, cl
0xc882:	or	qword ptr [rbx + rdx*8], rsi
0xc886:	add	rcx, 1
0xc88a:	cmp	rcx, 0x100
0xc891:	jne	0xc86e


0xcbb5:	add	rdx, 1
0xcbb9:	cmp	rdx, 0x100
0xcbc0:	jne	0xcb92


0xcb99:	movzx	ecx, byte ptr [rbp + rdx]
0xcb9e:	mov	r9, rdi
0xcba1:	mov	rsi, rcx
0xcba4:	and	ecx, 0x3f
0xcba7:	shr	rsi, 3
0xcbab:	shl	r9, cl
0xcbae:	and	esi, 0x18
0xcbb1:	or	qword ptr [rbx + rsi], r9
0xcbb5:	add	rdx, 1
0xcbb9:	cmp	rdx, 0x100
0xcbc0:	jne	0xcb92


0xc893:	jmp	0xc4d4


0xcbc2:	jmp	0xc4d4


0xcb92:	test	byte ptr [rax + rdx*2 + 1], 1
0xcb97:	je	0xcbb5


0xc7c2:	xor	ecx, ecx
0xc7c4:	test	rbp, rbp
0xc7c7:	mov	rdx, qword ptr [rax]
0xc7ca:	mov	edi, 1
0xc7cf:	jne	0xcbc7


0xcbc7:	xor	eax, eax
0xcbc9:	test	byte ptr [rdx + rax*2 + 1], 0x40
0xcbce:	je	0xcbec


0xc7f0:	add	rcx, 1
0xc7f4:	cmp	rcx, 0x100
0xc7fb:	jne	0xc7d8


0xc7df:	mov	rax, rcx
0xc7e2:	mov	rsi, rdi
0xc7e5:	sar	rax, 6
0xc7e9:	shl	rsi, cl
0xc7ec:	or	qword ptr [rbx + rax*8], rsi
0xc7f0:	add	rcx, 1
0xc7f4:	cmp	rcx, 0x100
0xc7fb:	jne	0xc7d8


0xcbec:	add	rax, 1
0xcbf0:	cmp	rax, 0x100
0xcbf6:	jne	0xcbc9


0xcbd0:	movzx	ecx, byte ptr [rbp + rax]
0xcbd5:	mov	r14, rdi
0xcbd8:	mov	rsi, rcx
0xcbdb:	and	ecx, 0x3f
0xcbde:	shr	rsi, 3
0xcbe2:	shl	r14, cl
0xcbe5:	and	esi, 0x18
0xcbe8:	or	qword ptr [rbx + rsi], r14
0xcbec:	add	rax, 1
0xcbf0:	cmp	rax, 0x100
0xcbf6:	jne	0xcbc9


0xc7fd:	jmp	0xc4d4


0xc7d8:	test	byte ptr [rdx + rcx*2 + 1], 0x40
0xc7dd:	je	0xc7f0


0xcbf8:	jmp	0xc4d4


0xcbc9:	test	byte ptr [rdx + rax*2 + 1], 0x40
0xcbce:	je	0xcbec


0xc6a3:	xor	ecx, ecx
0xc6a5:	test	rbp, rbp
0xc6a8:	mov	rdx, qword ptr [rax]
0xc6ab:	mov	edi, 1
0xc6b0:	jne	0xcb5a


0xcb5a:	xor	eax, eax
0xcb5c:	test	byte ptr [rdx + rax*2 + 1], 8
0xcb61:	je	0xcb7f


0xc6d8:	add	rcx, 1
0xc6dc:	cmp	rcx, 0x100
0xc6e3:	jne	0xc6c0


0xc6c7:	mov	rax, rcx
0xc6ca:	mov	rsi, rdi
0xc6cd:	sar	rax, 6
0xc6d1:	shl	rsi, cl
0xc6d4:	or	qword ptr [rbx + rax*8], rsi
0xc6d8:	add	rcx, 1
0xc6dc:	cmp	rcx, 0x100
0xc6e3:	jne	0xc6c0


0xcb7f:	add	rax, 1
0xcb83:	cmp	rax, 0x100
0xcb89:	jne	0xcb5c


0xcb63:	movzx	ecx, byte ptr [rbp + rax]
0xcb68:	mov	r14, rdi
0xcb6b:	mov	rsi, rcx
0xcb6e:	and	ecx, 0x3f
0xcb71:	shr	rsi, 3
0xcb75:	shl	r14, cl
0xcb78:	and	esi, 0x18
0xcb7b:	or	qword ptr [rbx + rsi], r14
0xcb7f:	add	rax, 1
0xcb83:	cmp	rax, 0x100
0xcb89:	jne	0xcb5c


0xc6e5:	jmp	0xc4d4


0xc6c0:	test	byte ptr [rdx + rcx*2 + 1], 8
0xc6c5:	je	0xc6d8


0xcb8b:	jmp	0xc4d4


0xcb5c:	test	byte ptr [rdx + rax*2 + 1], 8
0xcb61:	je	0xcb7f


0xc728:	xor	ecx, ecx
0xc72a:	test	rbp, rbp
0xc72d:	mov	rdx, qword ptr [rax]
0xc730:	mov	edi, 1
0xc735:	jne	0xc908


0xc908:	xor	eax, eax
0xc90a:	test	byte ptr [rdx + rax*2 + 1], 4
0xc90f:	je	0xc92d


0xc758:	add	rcx, 1
0xc75c:	cmp	rcx, 0x100
0xc763:	jne	0xc740


0xc747:	mov	rax, rcx
0xc74a:	mov	rsi, rdi
0xc74d:	sar	rax, 6
0xc751:	shl	rsi, cl
0xc754:	or	qword ptr [rbx + rax*8], rsi
0xc758:	add	rcx, 1
0xc75c:	cmp	rcx, 0x100
0xc763:	jne	0xc740


0xc92d:	add	rax, 1
0xc931:	cmp	rax, 0x100
0xc937:	jne	0xc90a


0xc911:	movzx	ecx, byte ptr [rbp + rax]
0xc916:	mov	r9, rdi
0xc919:	mov	rsi, rcx
0xc91c:	and	ecx, 0x3f
0xc91f:	shr	rsi, 3
0xc923:	shl	r9, cl
0xc926:	and	esi, 0x18
0xc929:	or	qword ptr [rbx + rsi], r9
0xc92d:	add	rax, 1
0xc931:	cmp	rax, 0x100
0xc937:	jne	0xc90a


0xc765:	jmp	0xc4d4


0xc740:	test	byte ptr [rdx + rcx*2 + 1], 4
0xc745:	je	0xc758


0xc939:	jmp	0xc4d4


0xc90a:	test	byte ptr [rdx + rax*2 + 1], 4
0xc90f:	je	0xc92d


0xc5d5:	xor	ecx, ecx
0xc5d7:	test	rbp, rbp
0xc5da:	mov	rdx, qword ptr [rax]
0xc5dd:	mov	edi, 1
0xc5e2:	jne	0xc93e


0xc93e:	xor	eax, eax
0xc940:	test	byte ptr [rdx + rax*2 + 1], 0x20
0xc945:	je	0xc963


0xc608:	add	rcx, 1
0xc60c:	cmp	rcx, 0x100
0xc613:	jne	0xc5f0


0xc5f7:	mov	rax, rcx
0xc5fa:	mov	rsi, rdi
0xc5fd:	sar	rax, 6
0xc601:	shl	rsi, cl
0xc604:	or	qword ptr [rbx + rax*8], rsi
0xc608:	add	rcx, 1
0xc60c:	cmp	rcx, 0x100
0xc613:	jne	0xc5f0


0xc963:	add	rax, 1
0xc967:	cmp	rax, 0x100
0xc96d:	jne	0xc940


0xc947:	movzx	ecx, byte ptr [rbp + rax]
0xc94c:	mov	r9, rdi
0xc94f:	mov	rsi, rcx
0xc952:	and	ecx, 0x3f
0xc955:	shr	rsi, 3
0xc959:	shl	r9, cl
0xc95c:	and	esi, 0x18
0xc95f:	or	qword ptr [rbx + rsi], r9
0xc963:	add	rax, 1
0xc967:	cmp	rax, 0x100
0xc96d:	jne	0xc940


0xc615:	jmp	0xc4d4


0xc5f0:	test	byte ptr [rdx + rcx*2 + 1], 0x20
0xc5f5:	je	0xc608


0xc96f:	jmp	0xc4d4


0xc940:	test	byte ptr [rdx + rax*2 + 1], 0x20
0xc945:	je	0xc963


0xc61f:	xor	ecx, ecx
0xc621:	test	rbp, rbp
0xc624:	mov	rdx, qword ptr [rax]
0xc627:	mov	edi, 1
0xc62c:	jne	0xc802


0xc802:	xor	eax, eax
0xc804:	nop	dword ptr [rax]
0xc808:	test	byte ptr [rdx + rax*2 + 1], 2
0xc80d:	je	0xc82b


0xc650:	add	rcx, 1
0xc654:	cmp	rcx, 0x100
0xc65b:	jne	0xc638


0xc63f:	mov	rax, rcx
0xc642:	mov	rsi, rdi
0xc645:	sar	rax, 6
0xc649:	shl	rsi, cl
0xc64c:	or	qword ptr [rbx + rax*8], rsi
0xc650:	add	rcx, 1
0xc654:	cmp	rcx, 0x100
0xc65b:	jne	0xc638


0xc82b:	add	rax, 1
0xc82f:	cmp	rax, 0x100
0xc835:	jne	0xc808


0xc80f:	movzx	ecx, byte ptr [rbp + rax]
0xc814:	mov	r14, rdi
0xc817:	mov	rsi, rcx
0xc81a:	and	ecx, 0x3f
0xc81d:	shr	rsi, 3
0xc821:	shl	r14, cl
0xc824:	and	esi, 0x18
0xc827:	or	qword ptr [rbx + rsi], r14
0xc82b:	add	rax, 1
0xc82f:	cmp	rax, 0x100
0xc835:	jne	0xc808


0xc65d:	jmp	0xc4d4


0xc638:	test	byte ptr [rdx + rcx*2 + 1], 2
0xc63d:	je	0xc650


0xc837:	jmp	0xc4d4


0xc808:	test	byte ptr [rdx + rax*2 + 1], 2
0xc80d:	je	0xc82b


0xc49d:	xor	ecx, ecx
0xc49f:	test	rbp, rbp
0xc4a2:	mov	rdx, qword ptr [rax]
0xc4a5:	mov	edi, 1
0xc4aa:	jne	0xc76a


0xc4b0:	test	byte ptr [rdx + rcx*2], 2
0xc4b4:	je	0xc4c7


0xc76a:	xor	eax, eax
0xc76c:	nop	dword ptr [rax]
0xc770:	test	byte ptr [rdx + rax*2], 2
0xc774:	je	0xc792


0xc4c7:	add	rcx, 1
0xc4cb:	cmp	rcx, 0x100
0xc4d2:	jne	0xc4b0


0xc4b6:	mov	rax, rcx
0xc4b9:	mov	rsi, rdi
0xc4bc:	sar	rax, 6
0xc4c0:	shl	rsi, cl
0xc4c3:	or	qword ptr [rbx + rax*8], rsi
0xc4c7:	add	rcx, 1
0xc4cb:	cmp	rcx, 0x100
0xc4d2:	jne	0xc4b0


0xc792:	add	rax, 1
0xc796:	cmp	rax, 0x100
0xc79c:	jne	0xc770


0xc776:	movzx	ecx, byte ptr [rbp + rax]
0xc77b:	mov	r11, rdi
0xc77e:	mov	rsi, rcx
0xc781:	and	ecx, 0x3f
0xc784:	shr	rsi, 3
0xc788:	shl	r11, cl
0xc78b:	and	esi, 0x18
0xc78e:	or	qword ptr [rbx + rsi], r11
0xc792:	add	rax, 1
0xc796:	cmp	rax, 0x100
0xc79c:	jne	0xc770


0xc79e:	jmp	0xc4d4


0xc770:	test	byte ptr [rdx + rax*2], 2
0xc774:	je	0xc792


0xc4ed:	xor	ecx, ecx
0xc4ef:	test	rbp, rbp
0xc4f2:	mov	rdx, qword ptr [rax]
0xc4f5:	mov	edi, 1
0xc4fa:	jne	0xc6ea


0xc500:	test	byte ptr [rdx + rcx*2], 8
0xc504:	je	0xc517


0xc6ea:	xor	eax, eax
0xc6ec:	nop	dword ptr [rax]
0xc6f0:	test	byte ptr [rdx + rax*2], 8
0xc6f4:	je	0xc712


0xc517:	add	rcx, 1
0xc51b:	cmp	rcx, 0x100
0xc522:	jne	0xc500


0xc506:	mov	rax, rcx
0xc509:	mov	rsi, rdi
0xc50c:	sar	rax, 6
0xc510:	shl	rsi, cl
0xc513:	or	qword ptr [rbx + rax*8], rsi
0xc517:	add	rcx, 1
0xc51b:	cmp	rcx, 0x100
0xc522:	jne	0xc500


0xc712:	add	rax, 1
0xc716:	cmp	rax, 0x100
0xc71c:	jne	0xc6f0


0xc6f6:	movzx	ecx, byte ptr [rbp + rax]
0xc6fb:	mov	r10, rdi
0xc6fe:	mov	rsi, rcx
0xc701:	and	ecx, 0x3f
0xc704:	shr	rsi, 3
0xc708:	shl	r10, cl
0xc70b:	and	esi, 0x18
0xc70e:	or	qword ptr [rbx + rsi], r10
0xc712:	add	rax, 1
0xc716:	cmp	rax, 0x100
0xc71c:	jne	0xc6f0


0xc524:	jmp	0xc4d4


0xc71e:	jmp	0xc4d4


0xc6f0:	test	byte ptr [rdx + rax*2], 8
0xc6f4:	je	0xc712


0xc9bd:	test	eax, eax
0xc9bf:	jne	0xca3a


0xc9c1:	call	0x1dc0


0xca3a:	lea	rsi, [rip + 0xa0e6]
0xca41:	mov	rdi, r12
0xca44:	call	0x1bd0


0xc9c6:	xor	ecx, ecx
0xc9c8:	test	rbp, rbp
0xc9cb:	mov	rsi, qword ptr [rax]
0xc9ce:	mov	edx, 1
0xc9d3:	jne	0xc9ff


0xc9d5:	cmp	word ptr [rsi + rcx*2], 0
0xc9da:	jns	0xc9ed


0xc9ff:	xor	eax, eax
0xca01:	mov	edi, 1
0xca06:	cmp	word ptr [rsi + rax*2], 0
0xca0b:	jns	0xca29


0xc9dc:	mov	rax, rcx
0xc9df:	mov	rdi, rdx
0xc9e2:	sar	rax, 6
0xc9e6:	shl	rdi, cl
0xc9e9:	or	qword ptr [rbx + rax*8], rdi
0xc9ed:	add	rcx, 1
0xc9f1:	cmp	rcx, 0x100
0xc9f8:	jne	0xc9d5


0xc9ed:	add	rcx, 1
0xc9f1:	cmp	rcx, 0x100
0xc9f8:	jne	0xc9d5


0xca0d:	movzx	ecx, byte ptr [rbp + rax]
0xca12:	mov	r9, rdi
0xca15:	mov	rdx, rcx
0xca18:	and	ecx, 0x3f
0xca1b:	shr	rdx, 3
0xca1f:	shl	r9, cl
0xca22:	and	edx, 0x18
0xca25:	or	qword ptr [rbx + rdx], r9
0xca29:	add	rax, 1
0xca2d:	cmp	rax, 0x100
0xca33:	jne	0xca06


0xca29:	add	rax, 1
0xca2d:	cmp	rax, 0x100
0xca33:	jne	0xca06


0xc9fa:	jmp	0xc4d4


0xca35:	jmp	0xc4d4


0xca06:	cmp	word ptr [rsi + rax*2], 0
0xca0b:	jns	0xca29


0xca49:	test	eax, eax
0xca4b:	jne	0xcac4


0xca4d:	call	0x1dc0


0xcac4:	lea	rsi, [rip + 0xa062]
0xcacb:	mov	rdi, r12
0xcace:	call	0x1bd0


0xca52:	xor	ecx, ecx
0xca54:	test	rbp, rbp
0xca57:	mov	rsi, qword ptr [rax]
0xca5a:	mov	edx, 1
0xca5f:	jne	0xca8a


0xca61:	test	byte ptr [rsi + rcx*2], 4
0xca65:	je	0xca78


0xca8a:	xor	eax, eax
0xca8c:	mov	edi, 1
0xca91:	test	byte ptr [rsi + rax*2], 4
0xca95:	je	0xcab3


0xca78:	add	rcx, 1
0xca7c:	cmp	rcx, 0x100
0xca83:	jne	0xca61


0xca67:	mov	rax, rcx
0xca6a:	mov	rdi, rdx
0xca6d:	sar	rax, 6
0xca71:	shl	rdi, cl
0xca74:	or	qword ptr [rbx + rax*8], rdi
0xca78:	add	rcx, 1
0xca7c:	cmp	rcx, 0x100
0xca83:	jne	0xca61


0xcab3:	add	rax, 1
0xcab7:	cmp	rax, 0x100
0xcabd:	jne	0xca91


0xca97:	movzx	ecx, byte ptr [rbp + rax]
0xca9c:	mov	r14, rdi
0xca9f:	mov	rdx, rcx
0xcaa2:	and	ecx, 0x3f
0xcaa5:	shr	rdx, 3
0xcaa9:	shl	r14, cl
0xcaac:	and	edx, 0x18
0xcaaf:	or	qword ptr [rbx + rdx], r14
0xcab3:	add	rax, 1
0xcab7:	cmp	rax, 0x100
0xcabd:	jne	0xca91


0xca85:	jmp	0xc4d4


0xcabf:	jmp	0xc4d4


0xca91:	test	byte ptr [rsi + rax*2], 4
0xca95:	je	0xcab3


0xcad3:	test	eax, eax
0xcad5:	jne	0xcb50


0xcad7:	call	0x1dc0


0xcb50:	mov	eax, 4
0xcb55:	jmp	0xc4d6


0xc4d6:	add	rsp, 0x10
0xc4da:	pop	rbx
0xc4db:	pop	rbp
0xc4dc:	pop	r12
0xc4de:	pop	r13
0xc4e0:	pop	r14
0xc4e2:	ret	


0xcadc:	xor	ecx, ecx
0xcade:	test	rbp, rbp
0xcae1:	mov	rsi, qword ptr [rax]
0xcae4:	mov	edx, 1
0xcae9:	jne	0xcb15


0xcaeb:	test	byte ptr [rsi + rcx*2 + 1], 0x10
0xcaf0:	je	0xcb03


0xcb15:	xor	eax, eax
0xcb17:	mov	edi, 1
0xcb1c:	test	byte ptr [rsi + rax*2 + 1], 0x10
0xcb21:	je	0xcb3f


0xcb03:	add	rcx, 1
0xcb07:	cmp	rcx, 0x100
0xcb0e:	jne	0xcaeb


0xcaf2:	mov	rax, rcx
0xcaf5:	mov	rdi, rdx
0xcaf8:	sar	rax, 6
0xcafc:	shl	rdi, cl
0xcaff:	or	qword ptr [rbx + rax*8], rdi
0xcb03:	add	rcx, 1
0xcb07:	cmp	rcx, 0x100
0xcb0e:	jne	0xcaeb


0xcb3f:	add	rax, 1
0xcb43:	cmp	rax, 0x100
0xcb49:	jne	0xcb1c


0xcb23:	movzx	ecx, byte ptr [rbp + rax]
0xcb28:	mov	r9, rdi
0xcb2b:	mov	rdx, rcx
0xcb2e:	and	ecx, 0x3f
0xcb31:	shr	rdx, 3
0xcb35:	shl	r9, cl
0xcb38:	and	edx, 0x18
0xcb3b:	or	qword ptr [rbx + rdx], r9
0xcb3f:	add	rax, 1
0xcb43:	cmp	rax, 0x100
0xcb49:	jne	0xcb1c


0xcb10:	jmp	0xc4d4


0xcb4b:	jmp	0xc4d4


0xcb1c:	test	byte ptr [rsi + rax*2 + 1], 0x10
0xcb21:	je	0xcb3f


0x20fa:	test	eax, eax
0x20fc:	sete	al
0x20ff:	movzx	edx, al
0x2102:	lea	rdx, [rbx + rdx*8]
0x2106:	mov	qword ptr [rip + 0x218fc3], rdx
0x210d:	pop	rbx
0x210e:	ret	


0x21b2:	mov	rdi, rbx
0x21b5:	pop	rbx
0x21b6:	jmp	0x19d0


0x230e:	mov	rdi, rbp
0x2311:	mov	r12, rax
0x2314:	call	0x1c50


0x2319:	mov	qword ptr [rbx + 8], r12
0x231d:	mov	dword ptr [rbx], 1
0x2323:	pop	rbx
0x2324:	pop	rbp
0x2325:	pop	r12
0x2327:	ret	


0x403b:	cmp	eax, -1
0x403e:	je	0x3fe9


0x4040:	cmp	eax, 0x68
0x4043:	mov	r9, qword ptr [rsp + 8]
0x4048:	je	0x40a0


0x40a0:	xor	edi, edi
0x40a2:	call	r9


0x404a:	cmp	eax, 0x76
0x404d:	jne	0x3fe9


0x404f:	lea	rax, [rsp + 0x110]
0x4057:	mov	rdi, qword ptr [rip + 0x21702a]
0x405e:	lea	r8, [rsp + 0x10]
0x4063:	mov	rcx, r13
0x4066:	mov	rdx, r12
0x4069:	mov	rsi, rbp
0x406c:	mov	qword ptr [rsp + 0x18], rax
0x4071:	lea	rax, [rsp + 0x30]
0x4076:	mov	dword ptr [rsp + 0x10], 0x30
0x407e:	mov	dword ptr [rsp + 0x14], 0x30
0x4086:	mov	qword ptr [rsp + 0x20], rax
0x408b:	call	0x6be0


0x414f:	cmp	eax, -1
0x4152:	je	0x41b8


0x41b8:	mov	rax, qword ptr [rsp + 0x18]
0x41bd:	xor	rax, qword ptr fs:[0x28]
0x41c6:	mov	dword ptr [rip + 0x216ed4], ebx
0x41cc:	jne	0x41e6


0x4154:	cmp	eax, 0x68
0x4157:	je	0x41e0


0x41ce:	add	rsp, 0xd0
0x41d5:	pop	rbx
0x41d6:	pop	rbp
0x41d7:	pop	r12
0x41d9:	pop	r13
0x41db:	pop	r14
0x41dd:	ret	


0x41e6:	call	0x1ad0


0x41e0:	xor	edi, edi
0x41e2:	call	rbp


0x415d:	cmp	eax, 0x76
0x4160:	jne	0x41b0


0x4162:	lea	rax, [rsp + 0x108]
0x416a:	mov	rdi, qword ptr [rip + 0x216f17]
0x4171:	mov	r8, rsp
0x4174:	mov	rcx, r14
0x4177:	mov	rdx, r13
0x417a:	mov	rsi, r12
0x417d:	mov	qword ptr [rsp + 8], rax
0x4182:	lea	rax, [rsp + 0x20]
0x4187:	mov	dword ptr [rsp], 0x30
0x418e:	mov	dword ptr [rsp + 4], 0x30
0x4196:	mov	qword ptr [rsp + 0x10], rax
0x419b:	call	0x6be0


0x41b0:	mov	edi, dword ptr [rip + 0x216e5a]
0x41b6:	call	rbp


0x4793:	test	rax, rax
0x4796:	je	0x47ed


0x47ed:	mov	qword ptr [rip + 0x2168f4], rbx
0x47f4:	mov	qword ptr [rip + 0x21689d], rbx
0x47fb:	pop	rbx
0x47fc:	ret	


0x4798:	lea	r8, [rax + 1]
0x479c:	mov	rdx, r8
0x479f:	sub	rdx, rbx
0x47a2:	cmp	rdx, 6
0x47a6:	jle	0x47ed


0x47a8:	lea	rsi, [rax - 6]
0x47ac:	lea	rdi, [rip + 0x11a7d]
0x47b3:	mov	ecx, 7
0x47b8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x47b8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x47ba:	seta	dl
0x47bd:	sbb	dl, 0
0x47c0:	test	dl, dl
0x47c2:	jne	0x47ed


0x47c4:	lea	rdi, [rip + 0x11a6d]
0x47cb:	mov	ecx, 3
0x47d0:	mov	rsi, r8
0x47d3:	mov	rbx, r8
0x47d6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x47d6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x47d8:	seta	dl
0x47db:	sbb	dl, 0
0x47de:	test	dl, dl
0x47e0:	jne	0x47ed


0x47e2:	lea	rbx, [rax + 4]
0x47e6:	mov	qword ptr [rip + 0x216893], rbx
0x47ed:	mov	qword ptr [rip + 0x2168f4], rbx
0x47f4:	mov	qword ptr [rip + 0x21689d], rbx
0x47fb:	pop	rbx
0x47fc:	ret	


0x481a:	call	0x19e0


0x67dc:	lea	rsi, [rip + 0xff38]
0x67e3:	xor	edi, edi
0x67e5:	mov	edx, 5
0x67ea:	call	0x1a90


0x68f1:	jmp	0x67dc


0x7e3d:	mov	rax, qword ptr [rax]
0x7e40:	mov	rdx, qword ptr [r14 + 8]
0x7e44:	mov	eax, dword ptr [rax + r12*4]
0x7e48:	mov	byte ptr [rdx + r15], al
0x7e4c:	mov	rdx, qword ptr [r14 + 8]
0x7e50:	mov	rax, qword ptr [r14 + 0x10]
0x7e54:	movzx	edx, byte ptr [rdx + r15]
0x7e59:	mov	dword ptr [rax + r15*4], edx
0x7e5d:	add	r15, 1
0x7e61:	jmp	0x7e0a


0x7e0a:	cmp	rbx, r15
0x7e0d:	jg	0x7d20


0x7e13:	jmp	0x7e88


0x7d20:	mov	rbp, qword ptr [r14 + 0x28]
0x7d24:	mov	r13, r15
0x7d27:	add	rbp, r15
0x7d2a:	add	rbp, qword ptr [r14]
0x7d2d:	movzx	r12d, byte ptr [rbp]
0x7d32:	test	r12b, 0x80
0x7d36:	jne	0x7d4a


0x790f:	mov	rsi, qword ptr [rax]
0x7912:	mov	rcx, qword ptr [rbp + 8]
0x7916:	mov	edx, dword ptr [rsi + rdx*4]
0x7919:	mov	byte ptr [rcx + rbx], dl
0x791c:	add	rbx, 1
0x7920:	cmp	r12, rbx
0x7923:	jne	0x78f8


0x7938:	movzx	edx, byte ptr [rcx + rdx]
0x793c:	jmp	0x790f


0x78f8:	mov	rdx, qword ptr [rbp]
0x78fc:	mov	rcx, qword ptr [rbp + 0x78]
0x7900:	add	rdx, rbx
0x7903:	add	rdx, qword ptr [rbp + 0x28]
0x7907:	test	rcx, rcx
0x790a:	movzx	edx, byte ptr [rdx]
0x790d:	jne	0x7938


0x985a:	xor	eax, eax
0x985c:	add	rsp, 8
0x9860:	pop	rbx
0x9861:	pop	rbp
0x9862:	pop	r12
0x9864:	pop	r13
0x9866:	ret	


0x927a:	xor	eax, eax
0x927c:	jmp	0x91fc


0x91fc:	pop	rbx
0x91fd:	pop	rbp
0x91fe:	pop	r12
0x9200:	ret	


0x9255:	jmp	0x91a9


0x92df:	jmp	0x91fa


0xde4d:	lea	rax, [rbp - 0x70]
0xde51:	mov	rcx, qword ptr [r13]
0xde55:	mov	qword ptr [rbp - 0xa8], rax
0xde5c:	add	rax, 0x10
0xde60:	mov	qword ptr [rbp - 0x78], rcx
0xde64:	mov	qword ptr [rbp - 0xc8], rax
0xde6b:	lea	rax, [rbp - 0x78]
0xde6f:	mov	qword ptr [rbp - 0xb0], rax
0xde76:	jmp	0xdf59


0xdf59:	mov	rax, qword ptr [r13 + 8]
0xdf5d:	cmp	rax, rcx
0xdf60:	jl	0xe450


0xe450:	mov	rdi, qword ptr [rbp - 0x60]
0xe454:	call	0x19d0


0xdf66:	mov	rdi, qword ptr [rbp - 0x90]
0xdf6d:	mov	r9, rbx
0xdf70:	mov	r15, rbx
0xdf73:	shl	r9, 4
0xdf77:	mov	rdx, qword ptr [rdi]
0xdf7a:	add	rdx, r9
0xdf7d:	movzx	esi, byte ptr [rdx + 8]
0xdf81:	cmp	esi, 8
0xdf84:	jne	0xde80


0xdf8a:	mov	rdx, qword ptr [rdx]
0xdf8d:	add	rdx, 1
0xdf91:	cmp	qword ptr [rbp - 0x98], rdx
0xdf98:	jle	0xde89


0xde80:	cmp	esi, 9
0xde83:	je	0xe070


0xde89:	cmp	rax, rcx
0xde8c:	jne	0xde9c


0xdf9e:	shl	rdx, 4
0xdfa2:	add	rdx, r13
0xdfa5:	mov	qword ptr [rdx + 8], -1
0xdfad:	mov	qword ptr [rdx], rcx
0xdfb0:	mov	rax, qword ptr [r13 + 8]
0xdfb4:	jmp	0xde89


0xe070:	mov	rdi, qword ptr [rdx]
0xe073:	lea	rsi, [rdi + 1]
0xe077:	cmp	qword ptr [rbp - 0x98], rsi
0xe07e:	jle	0xde89


0xde8e:	cmp	qword ptr [r12 + 0xb0], rbx
0xde96:	je	0xe270


0xde9c:	mov	r14, qword ptr [r12 + 0x98]
0xdea4:	mov	rdi, qword ptr [r14]
0xdea7:	lea	rsi, [rdi + r9]
0xdeab:	movzx	eax, byte ptr [rsi + 8]
0xdeaf:	test	al, 8
0xdeb1:	jne	0xdfc0


0xe084:	shl	rsi, 4
0xe088:	lea	rax, [r13 + rsi]
0xe08d:	cmp	qword ptr [rax], rcx
0xe090:	jl	0xe410


0xe270:	cmp	qword ptr [rbp - 0x88], 0
0xe278:	je	0xe5ac


0xdeb7:	test	byte ptr [rsi + 0xa], 0x10
0xdebb:	jne	0xe0c0


0xdfc0:	mov	rax, qword ptr [r12 + 0xb8]
0xdfc8:	mov	rdx, qword ptr [rbp - 0x78]
0xdfcc:	mov	rsi, rbx
0xdfcf:	mov	rdi, qword ptr [rbp - 0xa8]
0xdfd6:	mov	r9, qword ptr [rax + rdx*8]
0xdfda:	mov	rax, qword ptr [r14 + 0x28]
0xdfde:	lea	rdx, [rbx + rbx*2]
0xdfe2:	mov	qword ptr [rbp - 0xa0], r9
0xdfe9:	lea	r15, [rax + rdx*8]
0xdfed:	call	0x76b0


0xe410:	mov	rdx, qword ptr [rbp - 0xb8]
0xe417:	mov	rdi, qword ptr [rbp - 0xc0]
0xe41e:	mov	rsi, r13
0xe421:	mov	qword ptr [rax + 8], rcx
0xe425:	mov	qword ptr [rbp - 0xd8], r9
0xe42c:	mov	qword ptr [rbp - 0xa0], rcx
0xe433:	call	0x1be0


0xe096:	test	byte ptr [rdx + 0xa], 8
0xe09a:	je	0xe0ae


0xe5ac:	mov	rdi, qword ptr [rbp - 0x60]
0xe5b0:	call	0x19d0


0xe27e:	mov	rcx, qword ptr [rbp - 0x98]
0xe285:	test	rcx, rcx
0xe288:	je	0xe2aa


0xdec1:	cmp	al, 4
0xdec3:	je	0xe100


0xe0c0:	mov	r8, qword ptr [rbp - 0x78]
0xe0c4:	lea	rsi, [r14 + 0xd8]
0xe0cb:	mov	rcx, r12
0xe0ce:	mov	rdx, rbx
0xe0d1:	mov	qword ptr [rbp - 0xa0], r9
0xe0d8:	call	0xd3a0


0xe0ae:	mov	qword ptr [rax + 8], rcx
0xe0b2:	mov	rax, qword ptr [r13 + 8]
0xe0b6:	jmp	0xde89


0xe09c:	mov	rdi, qword ptr [rbp - 0xc0]
0xe0a3:	cmp	qword ptr [rdi + rsi], -1
0xe0a8:	jne	0xe49b


0xe2aa:	mov	rdi, qword ptr [rbp - 0x60]
0xe2ae:	call	0x19d0


0xe28a:	mov	rax, r13
0xe28d:	xor	edx, edx
0xe28f:	nop	
0xe290:	cmp	qword ptr [rax], 0
0xe294:	js	0xe29d


0xe100:	mov	rax, qword ptr [rsi]
0xe103:	add	rax, 1
0xe107:	shl	rax, 4
0xe10b:	add	rax, r13
0xe10e:	mov	rdx, qword ptr [rax + 8]
0xe112:	mov	rdi, qword ptr [rax]
0xe115:	mov	rcx, rdx
0xe118:	sub	rcx, rdi
0xe11b:	cmp	qword ptr [rbp - 0x88], 0
0xe123:	je	0xe2d8


0xdec9:	mov	rcx, qword ptr [rbp - 0x78]
0xdecd:	mov	rdx, rcx
0xded0:	mov	rdi, r12
0xded3:	mov	qword ptr [rbp - 0xa0], rcx
0xdeda:	call	0xaac0


0xe49b:	mov	rdx, qword ptr [rbp - 0xb8]
0xe4a2:	mov	rsi, rdi
0xe4a5:	mov	rdi, r13
0xe4a8:	mov	qword ptr [rbp - 0xd8], rcx
0xe4af:	mov	qword ptr [rbp - 0xa0], r9
0xe4b6:	call	0x1be0


0xe29d:	add	rdx, 1
0xe2a1:	add	rax, 0x10
0xe2a5:	cmp	rcx, rdx
0xe2a8:	jne	0xe290


0xe296:	cmp	qword ptr [rax + 8], -1
0xe29b:	je	0xe2f0


0xe2d8:	test	rcx, rcx
0xe2db:	je	0xe390


0xe129:	cmp	rdi, -1
0xe12d:	je	0xe346


0xe290:	cmp	qword ptr [rax], 0
0xe294:	js	0xe29d


0xe2f0:	mov	rdi, qword ptr [rbp - 0x88]
0xe2f7:	mov	r9, qword ptr [rbp - 0xa8]
0xe2fe:	mov	r8, r13
0xe301:	mov	rcx, qword ptr [rbp - 0x98]
0xe308:	mov	rdx, qword ptr [rbp - 0xb0]
0xe30f:	lea	rsi, [rdi + 0x10]
0xe313:	call	0xc300


0xe390:	mov	rdi, qword ptr [rbp - 0xa8]
0xe397:	mov	rsi, rbx
0xe39a:	mov	qword ptr [rbp - 0xa0], r9
0xe3a1:	call	0x76b0


0xe2e1:	mov	r15, qword ptr [rbp - 0x78]
0xe2e5:	jmp	0xe185


0xe346:	mov	rdi, qword ptr [rbp - 0x88]
0xe34d:	mov	rcx, qword ptr [rbp - 0x98]
0xe354:	lea	rdx, [rbp - 0x78]
0xe358:	mov	r9, qword ptr [rbp - 0xa8]
0xe35f:	mov	r8, r13
0xe362:	lea	rsi, [rdi + 0x10]
0xe366:	call	0xc300


0xe133:	cmp	rdx, -1
0xe137:	je	0xe346


0xe185:	mov	rax, qword ptr [r14 + 0x18]
0xe189:	lea	rdx, [r15 + rcx]
0xe18d:	mov	rbx, qword ptr [rax + rbx*8]
0xe191:	jmp	0xdefa


0xe13d:	test	rcx, rcx
0xe140:	je	0xe390


0xdefa:	cmp	qword ptr [rbp - 0x88], 0
0xdf02:	mov	qword ptr [rbp - 0x78], rdx
0xdf06:	je	0xdf44


0xe146:	mov	r15, qword ptr [rbp - 0x78]
0xe14a:	mov	rdx, qword ptr [r12 + 0x30]
0xe14f:	mov	rax, qword ptr [r12 + 8]
0xe154:	sub	rdx, r15
0xe157:	cmp	rcx, rdx
0xe15a:	jg	0xe346


0xdf44:	mov	qword ptr [rbp - 0x68], 0
0xdf4c:	test	rbx, rbx
0xdf4f:	js	0xe32a


0xdf08:	cmp	rdx, qword ptr [r12 + 0xa8]
0xdf10:	jg	0xe346


0xe160:	lea	rsi, [rax + r15]
0xe164:	add	rdi, rax
0xe167:	mov	rdx, rcx
0xe16a:	mov	qword ptr [rbp - 0xa0], rcx
0xe171:	call	0x1b90


0xe32a:	cmp	rbx, -2
0xe32e:	je	0xe4d8


0xdf55:	mov	rcx, qword ptr [rbp - 0x78]
0xdf59:	mov	rax, qword ptr [r13 + 8]
0xdf5d:	cmp	rax, rcx
0xdf60:	jl	0xe450


0xdf16:	mov	rax, qword ptr [r12 + 0xb8]
0xdf1e:	mov	rax, qword ptr [rax + rdx*8]
0xdf22:	test	rax, rax
0xdf25:	je	0xe346


0xe4d8:	mov	rdi, qword ptr [rbp - 0x60]
0xe4dc:	call	0x19d0


0xdf2b:	mov	rdi, qword ptr [rax + 0x10]
0xdf2f:	lea	rsi, [rax + 0x18]
0xdf33:	mov	rdx, rbx
0xdf36:	call	0x8bf0


0xe5fc:	mov	rdi, qword ptr [rbp - 0x60]
0xe600:	call	0x19d0


0xdf3b:	test	rax, rax
0xdf3e:	je	0xe346


0xe176:	test	eax, eax
0xe178:	mov	rcx, qword ptr [rbp - 0xa0]
0xe17f:	jne	0xe346


0xdedf:	test	al, al
0xdee1:	mov	rcx, qword ptr [rbp - 0xa0]
0xdee8:	je	0xe338


0xe338:	cmp	qword ptr [rbp - 0x88], 0
0xe340:	je	0xe5fc


0xdeee:	mov	rax, qword ptr [r14 + 0x18]
0xdef2:	lea	rdx, [rcx + 1]
0xdef6:	mov	rbx, qword ptr [rax + r15*8]
0xdefa:	cmp	qword ptr [rbp - 0x88], 0
0xdf02:	mov	qword ptr [rbp - 0x78], rdx
0xdf06:	je	0xdf44


0xe0dd:	movsxd	rcx, eax
0xe0e0:	test	rcx, rcx
0xe0e3:	jne	0xe2e1


0xe0e9:	mov	r9, qword ptr [rbp - 0xa0]
0xe0f0:	mov	rsi, qword ptr [r14]
0xe0f3:	mov	rcx, qword ptr [rbp - 0x78]
0xe0f7:	add	rsi, r9
0xe0fa:	jmp	0xdecd


0xdecd:	mov	rdx, rcx
0xded0:	mov	rdi, r12
0xded3:	mov	qword ptr [rbp - 0xa0], rcx
0xdeda:	call	0xaac0


0xe3a6:	test	al, al
0xe3a8:	je	0xe4d8


0xe3ae:	mov	rdx, qword ptr [r14 + 0x28]
0xe3b2:	lea	rax, [rbx + rbx*2]
0xe3b6:	mov	rcx, qword ptr [rbp - 0x78]
0xe3ba:	lea	rax, [rdx + rax*8]
0xe3be:	mov	qword ptr [rbp - 0xd8], rcx
0xe3c5:	mov	rax, qword ptr [rax + 0x10]
0xe3c9:	mov	rbx, qword ptr [rax]
0xe3cc:	mov	rax, qword ptr [r12 + 0xb8]
0xe3d4:	mov	rax, qword ptr [rax + rcx*8]
0xe3d8:	mov	rdx, rbx
0xe3db:	mov	rdi, qword ptr [rax + 0x10]
0xe3df:	lea	rsi, [rax + 0x18]
0xe3e3:	call	0x8bf0


0xe3e8:	test	rax, rax
0xe3eb:	jne	0xdf4c


0xe3f1:	mov	r9, qword ptr [rbp - 0xa0]
0xe3f8:	mov	rsi, qword ptr [r14]
0xe3fb:	mov	rcx, qword ptr [rbp - 0xd8]
0xe402:	add	rsi, r9
0xe405:	jmp	0xdecd


0xdf4c:	test	rbx, rbx
0xdf4f:	js	0xe32a


0xdff2:	test	al, al
0xdff4:	mov	r9, qword ptr [rbp - 0xa0]
0xdffb:	je	0xe4d8


0xe001:	mov	r10, qword ptr [r15 + 8]
0xe005:	test	r10, r10
0xe008:	jle	0xe338


0xe00e:	mov	r15, qword ptr [r15 + 0x10]
0xe012:	mov	r11, qword ptr [r9 + 0x10]
0xe016:	lea	r14, [r9 + 0x18]
0xe01a:	mov	rbx, -1
0xe021:	xor	r9d, r9d
0xe024:	mov	qword ptr [rbp - 0xa0], r12
0xe02b:	nop	dword ptr [rax + rax]
0xe030:	mov	r12, qword ptr [r15 + r9*8]
0xe034:	mov	rsi, r14
0xe037:	mov	rdi, r11
0xe03a:	mov	rdx, r12
0xe03d:	call	0x8bf0


0xe042:	test	rax, rax
0xe045:	je	0xe054


0xe054:	add	r9, 1
0xe058:	cmp	r10, r9
0xe05b:	jne	0xe030


0xe047:	cmp	rbx, -1
0xe04b:	jne	0xe1a0


0xe05d:	mov	r12, qword ptr [rbp - 0xa0]
0xe064:	jmp	0xdf4c


0xe030:	mov	r12, qword ptr [r15 + r9*8]
0xe034:	mov	rsi, r14
0xe037:	mov	rdi, r11
0xe03a:	mov	rdx, r12
0xe03d:	call	0x8bf0


0xe051:	mov	rbx, r12
0xe054:	add	r9, 1
0xe058:	cmp	r10, r9
0xe05b:	jne	0xe030


0xe1a0:	mov	rsi, qword ptr [rbp - 0xc8]
0xe1a7:	mov	rdi, qword ptr [rbp - 0x68]
0xe1ab:	mov	rdx, rbx
0xe1ae:	mov	r14, r12
0xe1b1:	mov	r12, qword ptr [rbp - 0xa0]
0xe1b8:	call	0x8bf0


0xe1bd:	test	rax, rax
0xe1c0:	jne	0xe380


0xe1c6:	mov	rcx, qword ptr [rbp - 0x88]
0xe1cd:	test	rcx, rcx
0xe1d0:	je	0xdf4c


0xe380:	mov	rbx, r14
0xe383:	jmp	0xdf4c


0xe1d6:	mov	r15, qword ptr [rcx]
0xe1d9:	mov	rdx, qword ptr [rbp - 0x78]
0xe1dd:	lea	rax, [r15 + 1]
0xe1e1:	cmp	rax, qword ptr [rcx + 8]
0xe1e5:	mov	qword ptr [rcx], rax
0xe1e8:	je	0xe56d


0xe56d:	lea	rsi, [rax + rax*2]
0xe571:	mov	rax, qword ptr [rbp - 0x88]
0xe578:	mov	qword ptr [rbp - 0xa0], rdx
0xe57f:	shl	rsi, 5
0xe583:	mov	rdi, qword ptr [rax + 0x10]
0xe587:	call	0x1c90


0xe1ee:	mov	rax, qword ptr [rcx + 0x10]
0xe1f2:	lea	r15, [r15 + r15*2]
0xe1f6:	shl	r15, 4
0xe1fa:	add	r15, rax
0xe1fd:	mov	qword ptr [r15 + 8], r14
0xe201:	mov	r14, qword ptr [rbp - 0xb8]
0xe208:	mov	qword ptr [r15], rdx
0xe20b:	mov	rdi, r14
0xe20e:	call	0x1c20


0xe4bb:	mov	rax, qword ptr [r13 + 8]
0xe4bf:	mov	r9, qword ptr [rbp - 0xa0]
0xe4c6:	mov	rcx, qword ptr [rbp - 0xd8]
0xe4cd:	jmp	0xde89


0xe438:	mov	rax, qword ptr [r13 + 8]
0xe43c:	mov	rcx, qword ptr [rbp - 0xa0]
0xe443:	mov	r9, qword ptr [rbp - 0xd8]
0xe44a:	jmp	0xde89


0x426c:	mov	rdx, qword ptr [rbx + 8]
0x4270:	mov	qword ptr [rbp], rax
0x4274:	jmp	0x423f


0x423f:	movzx	eax, byte ptr [rbx + 0x10]
0x4243:	mov	qword ptr [rbp + 8], rdx
0x4247:	test	al, al
0x4249:	mov	byte ptr [rbp + 0x10], al
0x424c:	je	0x4254


0xc340:	mov	rdi, qword ptr [rbp + 0x10]
0xc344:	call	0x19d0


0xe58c:	test	rax, rax
0xe58f:	je	0xe5d5


0xe5d5:	mov	rdi, qword ptr [rbp - 0x60]
0xe5d9:	call	0x19d0


0xe591:	mov	rcx, qword ptr [rbp - 0x88]
0xe598:	mov	rdx, qword ptr [rbp - 0xa0]
0xe59f:	shl	qword ptr [rcx + 8], 1
0xe5a3:	mov	qword ptr [rcx + 0x10], rax
0xe5a7:	jmp	0xe1f2


0xe1f2:	lea	r15, [r15 + r15*2]
0xe1f6:	shl	r15, 4
0xe1fa:	add	r15, rax
0xe1fd:	mov	qword ptr [r15 + 8], r14
0xe201:	mov	r14, qword ptr [rbp - 0xb8]
0xe208:	mov	qword ptr [r15], rdx
0xe20b:	mov	rdi, r14
0xe20e:	call	0x1c20


0xe772:	test	rax, rax
0xe775:	mov	rcx, qword ptr [rsp + 8]
0xe77a:	je	0xe7d0


0xe7d0:	mov	rdi, qword ptr [rbx + 0xd8]
0xe7d7:	call	0x19d0


0xe77c:	mov	rsi, qword ptr [rbx + 0xc8]
0xe783:	mov	rdx, qword ptr [rbx + 0xd0]
0xe78a:	mov	qword ptr [rbx + 0xd8], rax
0xe791:	mov	qword ptr [rsp + 8], rcx
0xe796:	lea	rsi, [rsi + rsi*4]
0xe79a:	lea	rdx, [rdx + rdx*4]
0xe79e:	lea	rdi, [rax + rsi*8]
0xe7a2:	shl	rdx, 3
0xe7a6:	xor	esi, esi
0xe7a8:	call	0x1b60


0xe7ad:	shl	qword ptr [rbx + 0xd0], 1
0xe7b4:	mov	rax, qword ptr [rbx + 0xc8]
0xe7bb:	mov	rdi, qword ptr [rbx + 0xd8]
0xe7c2:	mov	rsi, qword ptr [rbp + 8]
0xe7c6:	mov	rcx, qword ptr [rsp + 8]
0xe7cb:	jmp	0xe6c9


0xf094:	test	rax, rax
0xf097:	je	0xef59


0xef59:	mov	eax, 0xc
0xef5e:	jmp	0xeb68


0xf09d:	mov	rdx, qword ptr [rsp + 0x10]
0xf0a2:	mov	qword ptr [r12 + 0x28], rax
0xf0a7:	mov	qword ptr [r12 + 0x18], rdx
0xf0ac:	jmp	0xeea4


0x8194:	test	rax, rax
0x8197:	je	0x8258


0x819d:	mov	qword ptr [rbx + 0xb8], rax
0x81a4:	cmp	byte ptr [rbx + 0x88], 0
0x81ab:	mov	eax, dword ptr [rbx + 0x90]
0x81b1:	je	0x81d0


0xa995:	test	rax, rax
0xa998:	mov	r9, rax
0xa99b:	mov	rcx, qword ptr [rsp + 8]
0xa9a0:	je	0xa971


0xa971:	mov	eax, 0xc
0xa976:	jmp	0xa962


0xa9a2:	mov	qword ptr [r15 + 0xf8], rax
0xa9a9:	mov	rax, qword ptr [rsp + 0x10]
0xa9ae:	mov	r8, qword ptr [r15 + 0xe8]
0xa9b5:	mov	qword ptr [r15 + 0xf0], rax
0xa9bc:	jmp	0xa903


0xa962:	add	rsp, 0x28
0xa966:	pop	rbx
0xa967:	pop	rbp
0xa968:	pop	r12
0xa96a:	pop	r13
0xa96c:	pop	r14
0xa96e:	pop	r15
0xa970:	ret	


0x77c3:	test	rax, rax
0x77c6:	je	0x77d5


0x77d5:	xor	eax, eax
0x77d7:	jmp	0x76de


0x77c8:	mov	qword ptr [rbx + 0x10], rax
0x77cc:	mov	rsi, qword ptr [rbx + 8]
0x77d0:	jmp	0x7729


0x929f:	test	rax, rax
0x92a2:	je	0x92e4


0x92e4:	mov	eax, 0xc
0x92e9:	jmp	0x91fc


0x92a4:	mov	qword ptr [rbx + 0x10], rax
0x92a8:	mov	qword ptr [rbx], rbp
0x92ab:	mov	rax, qword ptr [rbx + 8]
0x92af:	mov	rdx, qword ptr [r12 + 8]
0x92b4:	jmp	0x9144


0x9880:	test	rax, rax
0x9883:	mov	rdi, rax
0x9886:	je	0x98a1


0x98a1:	mov	eax, 0xc
0x98a6:	jmp	0x985c


0x9888:	mov	qword ptr [rbx + 0x10], rax
0x988c:	mov	qword ptr [rbx], r13
0x988f:	mov	rcx, qword ptr [rbx + 8]
0x9893:	mov	r9, qword ptr [rbp + 8]
0x9897:	mov	r11, qword ptr [r12 + 8]
0x989c:	jmp	0x974b


0x985c:	add	rsp, 8
0x9860:	pop	rbx
0x9861:	pop	rbp
0x9862:	pop	r12
0x9864:	pop	r13
0x9866:	ret	


0xdcd6:	test	rax, rax
0xdcd9:	je	0xdd1b


0xdcdb:	mov	rcx, qword ptr [rsp + 0x60]
0xdce0:	lea	rdx, [r12*8]
0xdce8:	lea	rdi, [rax + r13*8]
0xdcec:	xor	esi, esi
0xdcee:	mov	qword ptr [rcx + 0x10], rax
0xdcf2:	mov	qword ptr [rcx + 8], r14
0xdcf6:	call	0x1b60


0xdcfb:	jmp	0xd67c


0x75d5:	test	rax, rax
0x75d8:	je	0x7630


0x75da:	mov	rdi, qword ptr [rbx + 0x18]
0x75de:	mov	qword ptr [rbx + 0x10], rax
0x75e2:	test	rdi, rdi
0x75e5:	je	0x75fd


0x75e7:	lea	rsi, [rbp*8]
0x75ef:	call	0x1c90


0x75f4:	test	rax, rax
0x75f7:	je	0x7630


0x75f9:	mov	qword ptr [rbx + 0x18], rax
0x75fd:	cmp	byte ptr [rbx + 0x8b], 0
0x7604:	jne	0x7618


0x7624:	test	rax, rax
0x7627:	je	0x7630


0x7629:	mov	qword ptr [rbx + 8], rax
0x762d:	jmp	0x7606


0x848c:	test	rax, rax
0x848f:	je	0x8552


0x8495:	mov	r15, rbp
0x8498:	mov	rdi, qword ptr [rbx + 0x18]
0x849c:	mov	qword ptr [rbx], rax
0x849f:	shl	r15, 4
0x84a3:	mov	rsi, r15
0x84a6:	call	0x1c90


0x84ab:	mov	rdi, qword ptr [rbx + 0x20]
0x84af:	mov	rsi, r15
0x84b2:	lea	r15, [r13 + rbp*4]
0x84b7:	mov	r12, rax
0x84ba:	shl	r15, 3
0x84be:	call	0x1c90


0x84c3:	mov	rdi, qword ptr [rbx + 0x28]
0x84c7:	mov	rsi, r15
0x84ca:	mov	qword ptr [rsp], rax
0x84ce:	call	0x1c90


0x84d3:	mov	rdi, qword ptr [rbx + 0x30]
0x84d7:	mov	rsi, r15
0x84da:	mov	rbp, rax
0x84dd:	call	0x1c90


0x84e2:	test	r12, r12
0x84e5:	mov	rcx, qword ptr [rsp]
0x84e9:	je	0x8520


0x8520:	mov	rdi, r12
0x8523:	mov	qword ptr [rsp + 8], rax
0x8528:	mov	qword ptr [rsp], rcx
0x852c:	call	0x19d0


0x84eb:	test	rcx, rcx
0x84ee:	je	0x8520


0x84f0:	test	rbp, rbp
0x84f3:	je	0x8520


0x84f5:	test	rax, rax
0x84f8:	mov	rdx, qword ptr [rsp + 8]
0x84fd:	je	0x8520


0x84ff:	mov	qword ptr [rbx + 0x18], r12
0x8503:	mov	qword ptr [rbx + 0x20], rcx
0x8507:	mov	qword ptr [rbx + 0x28], rbp
0x850b:	mov	qword ptr [rbx + 0x30], rax
0x850f:	mov	qword ptr [rbx + 8], r13
0x8513:	mov	rsi, qword ptr [rbx + 0x10]
0x8517:	jmp	0x83bd


0x83bd:	mov	rax, rsi
0x83c0:	mov	ecx, edx
0x83c2:	shl	rax, 4
0x83c6:	add	rax, qword ptr [rbx]
0x83c9:	and	ecx, 0xfffc00ff
0x83cf:	mov	qword ptr [rax + 8], rdx
0x83d3:	mov	dword ptr [rax + 8], ecx
0x83d6:	xor	ecx, ecx
0x83d8:	cmp	dl, 6
0x83db:	mov	qword ptr [rax], r14
0x83de:	sete	cl
0x83e1:	cmp	dl, 5
0x83e4:	jne	0x83f2


0xc577:	test	rax, rax
0xc57a:	je	0xc898


0xc898:	mov	eax, 0xc
0xc89d:	jmp	0xc4d6


0xc580:	mov	rdx, qword ptr [rsp]
0xc584:	mov	r8, qword ptr [rsp + 8]
0xc589:	mov	qword ptr [rdx], rax
0xc58c:	mov	qword ptr [r8], r14
0xc58f:	mov	rcx, qword ptr [r13]
0xc593:	jmp	0xc448


0x6e36:	test	rax, rax
0x6e39:	jne	0x6e40


0x6e3b:	test	rbx, rbx
0x6e3e:	jne	0x6e51


0x6e40:	pop	rbx
0x6e41:	ret	


0x6e51:	call	0x7010


0x768f:	test	rax, rax
0x7692:	je	0x76a0


0x76a0:	xor	eax, eax
0x76a2:	jmp	0x766a


0x7694:	mov	qword ptr [rbx + 0x10], rax
0x7698:	mov	rsi, qword ptr [rbx + 8]
0x769c:	jmp	0x7659


0x766a:	add	rsp, 8
0x766e:	pop	rbx
0x766f:	pop	rbp
0x7670:	ret	


0x14613:	test	rax, rax
0x14616:	mov	rbx, rax
0x14619:	je	0x147b1


0x147b1:	mov	eax, 0xc
0x147b6:	jmp	0x13b3c


0x1461f:	mov	rax, qword ptr [rsp + 8]
0x14624:	mov	qword ptr [rax + 8], 0xe8
0x1462c:	mov	qword ptr [rax], rbx
0x1462f:	jmp	0x13812


0x13b3c:	mov	rbx, qword ptr [rsp + 0x118]
0x13b44:	xor	rbx, qword ptr fs:[0x28]
0x13b4d:	jne	0x14890


0x13b53:	add	rsp, 0x128
0x13b5a:	pop	rbx
0x13b5b:	pop	rbp
0x13b5c:	pop	r12
0x13b5e:	pop	r13
0x13b60:	pop	r14
0x13b62:	pop	r15
0x13b64:	ret	


0x14890:	call	0x1ad0


0x1549e:	test	eax, eax
0x154a0:	je	0x154aa


0x154a2:	test	dword ptr [rbx], 0x100
0x154a8:	jne	0x154b8


0x154b8:	mov	rdi, rbx
0x154bb:	mov	edx, 1
0x154c0:	xor	esi, esi
0x154c2:	call	0x154d0


0x1e23:	lea	rsi, [rip + 0x14937]
0x1e2a:	mov	edi, 6
0x1e2f:	call	0x1ca0


0x41f8:	test	eax, eax
0x41fa:	js	0x4200


0x4200:	mov	edi, ebx
0x4202:	call	0x1a40


0x41fc:	pop	rbx
0x41fd:	ret	


0x1a40:	jmp	qword ptr [rip + 0x21938a]




0x42c6:	cmp	rax, 1
0x42ca:	jbe	0x42d3


0x42d3:	mov	rax, qword ptr [rsp + 0x48]
0x42d8:	xor	rax, qword ptr fs:[0x28]
0x42e1:	jne	0x44e3


0x42cc:	cmp	bl, 0x2f
0x42cf:	mov	ebp, ebx
0x42d1:	ja	0x4300


0x42e7:	add	rsp, 0x50
0x42eb:	mov	esi, ebx
0x42ed:	mov	rdi, r12
0x42f0:	pop	rbx
0x42f1:	pop	rbp
0x42f2:	pop	r12
0x42f4:	pop	r13
0x42f6:	pop	r14
0x42f8:	jmp	0x1b00


0x44e3:	call	0x1ad0


0x4300:	mov	rbx, rsp
0x4303:	mov	qword ptr [rsp + 0x10], r12
0x4308:	mov	byte ptr [rsp], 0
0x430c:	mov	qword ptr [rsp + 4], 0
0x4315:	mov	byte ptr [rsp + 0xc], 0
0x431a:	lea	r12, [rip + 0x11e7f]
0x4321:	lea	r13, [rbx + 4]
0x4325:	jmp	0x438e


0x1b00:	jmp	qword ptr [rip + 0x21932a]


0x438e:	cmp	byte ptr [rsp], 0
0x4392:	je	0x4330




0x4330:	mov	rax, qword ptr [rsp + 0x10]
0x4335:	movzx	ecx, byte ptr [rax]
0x4338:	mov	edx, ecx
0x433a:	shr	dl, 5
0x433d:	and	edx, 7
0x4340:	mov	edx, dword ptr [r12 + rdx*4]
0x4344:	bt	edx, ecx
0x4347:	jae	0x4448


0x4394:	call	0x1aa0


0x434d:	mov	qword ptr [rsp + 0x18], 1
0x4356:	movsx	edx, byte ptr [rax]
0x4359:	mov	byte ptr [rsp + 0x20], 1
0x435e:	mov	byte ptr [rsp + 0xc], 1
0x4363:	test	edx, edx
0x4365:	mov	dword ptr [rsp + 0x24], edx
0x4369:	je	0x44c0


0x4448:	mov	rdi, r13
0x444b:	call	0x1d90


0x44c0:	xor	r14d, r14d
0x44c3:	mov	rsi, qword ptr [rsp + 0x48]
0x44c8:	xor	rsi, qword ptr fs:[0x28]
0x44d1:	mov	rax, r14
0x44d4:	jne	0x44e3


0x436f:	mov	edx, 1
0x4374:	mov	r14, rax
0x4377:	cmp	bpl, byte ptr [r14]
0x437a:	je	0x44c3


0x44d6:	add	rsp, 0x50
0x44da:	pop	rbx
0x44db:	pop	rbp
0x44dc:	pop	r12
0x44de:	pop	r13
0x44e0:	pop	r14
0x44e2:	ret	


0x44c3:	mov	rsi, qword ptr [rsp + 0x48]
0x44c8:	xor	rsi, qword ptr fs:[0x28]
0x44d1:	mov	rax, r14
0x44d4:	jne	0x44e3


0x4380:	lea	rax, [r14 + rdx]
0x4384:	mov	byte ptr [rsp + 0xc], 0
0x4389:	mov	qword ptr [rsp + 0x10], rax
0x438e:	cmp	byte ptr [rsp], 0
0x4392:	je	0x4330


0x4450:	test	eax, eax
0x4452:	je	0x44e8


0x44e8:	lea	rcx, [rip + 0x11cd1]
0x44ef:	lea	rsi, [rip + 0x1111a]
0x44f6:	lea	rdi, [rip + 0x11b3a]
0x44fd:	mov	edx, 0x96
0x4502:	call	0x1b50


0x4458:	mov	byte ptr [rsp], 1
0x445c:	jmp	0x4394


0x4399:	mov	r14, qword ptr [rsp + 0x10]
0x439e:	mov	rsi, rax
0x43a1:	mov	rdi, r14
0x43a4:	call	0x64b0


0x4574:	cmp	rax, 1
0x4578:	ja	0x45b0


0x457a:	mov	rdi, rbx
0x457d:	call	0x1ab0


0x45b0:	mov	rbp, rsp
0x45b3:	mov	qword ptr [rsp + 0x10], rbx
0x45b8:	mov	byte ptr [rsp], 0
0x45bc:	mov	qword ptr [rsp + 4], 0
0x45c5:	mov	byte ptr [rsp + 0xc], 0
0x45ca:	xor	ebx, ebx
0x45cc:	lea	r12, [rip + 0x11bcd]
0x45d3:	lea	r13, [rbp + 4]
0x45d7:	jmp	0x4636


0x4636:	cmp	byte ptr [rsp], 0
0x463a:	je	0x45e0


0x45e0:	mov	rcx, qword ptr [rsp + 0x10]
0x45e5:	movzx	edx, byte ptr [rcx]
0x45e8:	mov	eax, edx
0x45ea:	shr	al, 5
0x45ed:	and	eax, 7
0x45f0:	mov	eax, dword ptr [r12 + rax*4]
0x45f4:	bt	eax, edx
0x45f7:	jae	0x46c0


0x463c:	call	0x1aa0


0x45fd:	mov	qword ptr [rsp + 0x18], 1
0x4606:	movsx	eax, byte ptr [rcx]
0x4609:	mov	byte ptr [rsp + 0x20], 1
0x460e:	mov	byte ptr [rsp + 0xc], 1
0x4613:	mov	dword ptr [rsp + 0x24], eax
0x4617:	mov	eax, dword ptr [rsp + 0x24]
0x461b:	test	eax, eax
0x461d:	je	0x4585


0x46c0:	mov	rdi, r13
0x46c3:	call	0x1d90


0x4585:	mov	rsi, qword ptr [rsp + 0x48]
0x458a:	xor	rsi, qword ptr fs:[0x28]
0x4593:	mov	rax, rbx
0x4596:	jne	0x4739


0x4623:	mov	rax, qword ptr [rsp + 0x18]
0x4628:	add	qword ptr [rsp + 0x10], rax
0x462d:	add	rbx, 1
0x4631:	mov	byte ptr [rsp + 0xc], 0
0x4636:	cmp	byte ptr [rsp], 0
0x463a:	je	0x45e0


0x459c:	add	rsp, 0x50
0x45a0:	pop	rbx
0x45a1:	pop	rbp
0x45a2:	pop	r12
0x45a4:	pop	r13
0x45a6:	pop	r14
0x45a8:	ret	


0x4739:	call	0x1ad0


0x46c8:	test	eax, eax
0x46ca:	je	0x471a


0x471a:	lea	rcx, [rip + 0x11abf]
0x4721:	lea	rsi, [rip + 0x10ee8]
0x4728:	lea	rdi, [rip + 0x11908]
0x472f:	mov	edx, 0x96
0x4734:	call	0x1b50


0x46cc:	mov	byte ptr [rsp], 1
0x46d0:	jmp	0x463c


0x4641:	mov	r14, qword ptr [rsp + 0x10]
0x4646:	mov	rsi, rax
0x4649:	mov	rdi, r14
0x464c:	call	0x64b0


0x4981:	cmp	r15d, 0xa
0x4985:	mov	qword ptr [rsp + 0x58], rax
0x498a:	ja	0x5b3f


0x4990:	lea	rcx, [rip + 0x11909]
0x4997:	mov	edx, r15d
0x499a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x499e:	add	rax, rcx
0x49a1:	jmp	rax


0x5b3f:	call	0x19e0


0x5b71:	mov	r13, rax
0x5b74:	mov	eax, dword ptr [rax]
0x5b76:	test	r15d, r15d
0x5b79:	mov	rbx, qword ptr [rip + 0x2154e0]
0x5b80:	mov	dword ptr [rsp + 0x18], eax
0x5b84:	js	0x5cf1


0x5cf1:	call	0x19e0


0x5b8a:	cmp	dword ptr [rip + 0x2154c7], r15d
0x5b91:	jg	0x5bf5


0x5b93:	cmp	r15d, 0x7fffffff
0x5b9a:	je	0x5cf6


0x5bf5:	mov	eax, dword ptr [rbp + 4]
0x5bf8:	shl	r15, 4
0x5bfc:	sub	rsp, 8
0x5c00:	add	rbx, r15
0x5c03:	lea	r15, [rbp + 8]
0x5c07:	mov	r8d, dword ptr [rbp]
0x5c0b:	mov	r11, qword ptr [rbx]
0x5c0e:	mov	r12, qword ptr [rbx + 8]
0x5c12:	mov	rcx, r14
0x5c15:	or	eax, 1
0x5c18:	mov	dword ptr [rsp + 0x24], eax
0x5c1c:	push	qword ptr [rbp + 0x30]
0x5c1f:	mov	r9d, eax
0x5c22:	push	qword ptr [rbp + 0x28]
0x5c25:	push	r15
0x5c27:	mov	rsi, r11
0x5c2a:	mov	rdx, qword ptr [rsp + 0x28]
0x5c2f:	mov	rdi, r12
0x5c32:	mov	qword ptr [rsp + 0x30], r11
0x5c37:	call	0x4910


0x5cf6:	call	0x7010


0x5ba0:	lea	r12d, [r15 + 1]
0x5ba4:	lea	rax, [rip + 0x2154c5]
0x5bab:	movsxd	rsi, r12d
0x5bae:	shl	rsi, 4
0x5bb2:	cmp	rbx, rax
0x5bb5:	je	0x5cd0


0x5cd0:	xor	edi, edi
0x5cd2:	call	0x6e20


0x5bbb:	mov	rdi, rbx
0x5bbe:	call	0x6e20


0x5bc3:	mov	rbx, rax
0x5bc6:	mov	qword ptr [rip + 0x215493], rax
0x5bcd:	movsxd	rdi, dword ptr [rip + 0x215484]
0x5bd4:	mov	edx, r12d
0x5bd7:	xor	esi, esi
0x5bd9:	sub	edx, edi
0x5bdb:	shl	rdi, 4
0x5bdf:	movsxd	rdx, edx
0x5be2:	add	rdi, rbx
0x5be5:	shl	rdx, 4
0x5be9:	call	0x1b60


0x5bee:	mov	dword ptr [rip + 0x215463], r12d
0x5bf5:	mov	eax, dword ptr [rbp + 4]
0x5bf8:	shl	r15, 4
0x5bfc:	sub	rsp, 8
0x5c00:	add	rbx, r15
0x5c03:	lea	r15, [rbp + 8]
0x5c07:	mov	r8d, dword ptr [rbp]
0x5c0b:	mov	r11, qword ptr [rbx]
0x5c0e:	mov	r12, qword ptr [rbx + 8]
0x5c12:	mov	rcx, r14
0x5c15:	or	eax, 1
0x5c18:	mov	dword ptr [rsp + 0x24], eax
0x5c1c:	push	qword ptr [rbp + 0x30]
0x5c1f:	mov	r9d, eax
0x5c22:	push	qword ptr [rbp + 0x28]
0x5c25:	push	r15
0x5c27:	mov	rsi, r11
0x5c2a:	mov	rdx, qword ptr [rsp + 0x28]
0x5c2f:	mov	rdi, r12
0x5c32:	mov	qword ptr [rsp + 0x30], r11
0x5c37:	call	0x4910


0x5cd7:	movdqa	xmm0, xmmword ptr [rip + 0x215391]
0x5cdf:	mov	rbx, rax
0x5ce2:	mov	qword ptr [rip + 0x215377], rax
0x5ce9:	movups	xmmword ptr [rax], xmm0
0x5cec:	jmp	0x5bcd


0x5bcd:	movsxd	rdi, dword ptr [rip + 0x215484]
0x5bd4:	mov	edx, r12d
0x5bd7:	xor	esi, esi
0x5bd9:	sub	edx, edi
0x5bdb:	shl	rdi, 4
0x5bdf:	movsxd	rdx, edx
0x5be2:	add	rdi, rbx
0x5be5:	shl	rdx, 4
0x5be9:	call	0x1b60


0x5d0c:	mov	r12d, dword ptr [rax]
0x5d0f:	mov	rbp, rax
0x5d12:	lea	rax, [rip + 0x2154e7]
0x5d19:	test	rbx, rbx
0x5d1c:	mov	esi, 0x38
0x5d21:	cmove	rbx, rax
0x5d25:	mov	rdi, rbx
0x5d28:	call	0x6fc0


0x5e42:	mov	r12d, dword ptr [rax]
0x5e45:	mov	rbp, rax
0x5e48:	lea	rax, [rbx + 8]
0x5e4c:	sub	rsp, 8
0x5e50:	mov	r9d, dword ptr [rbx + 4]
0x5e54:	push	qword ptr [rbx + 0x30]
0x5e57:	mov	r8d, dword ptr [rbx]
0x5e5a:	push	qword ptr [rbx + 0x28]
0x5e5d:	mov	rdx, r15
0x5e60:	push	rax
0x5e61:	mov	rcx, qword ptr [rsp + 0x28]
0x5e66:	mov	rsi, r14
0x5e69:	mov	rdi, r13
0x5e6c:	call	0x4910


0x5ebf:	test	r12, r12
0x5ec2:	mov	r13, rax
0x5ec5:	mov	eax, dword ptr [rax]
0x5ec7:	sete	bpl
0x5ecb:	or	ebp, dword ptr [rbx + 4]
0x5ece:	lea	r10, [rbx + 8]
0x5ed2:	sub	rsp, 8
0x5ed6:	mov	r8d, dword ptr [rbx]
0x5ed9:	mov	rcx, r15
0x5edc:	mov	dword ptr [rsp + 0x14], eax
0x5ee0:	push	qword ptr [rbx + 0x30]
0x5ee3:	mov	rdx, r14
0x5ee6:	push	qword ptr [rbx + 0x28]
0x5ee9:	push	r10
0x5eeb:	xor	esi, esi
0x5eed:	mov	r9d, ebp
0x5ef0:	xor	edi, edi
0x5ef2:	mov	qword ptr [rsp + 0x40], r10
0x5ef7:	call	0x4910


0x64c6:	mov	rdx, rax
0x64c9:	sub	rdx, rbp
0x64cc:	add	rdx, 1
0x64d0:	test	rax, rax
0x64d3:	mov	rax, rbx
0x64d6:	cmovne	rax, rdx
0x64da:	add	rsp, 8
0x64de:	pop	rbx
0x64df:	pop	rbp
0x64e0:	ret	


0x4651:	lea	rcx, [rbp + 4]
0x4655:	lea	rdi, [rbp + 0x24]
0x4659:	mov	rdx, rax
0x465c:	mov	rsi, r14
0x465f:	call	0x7050


0x43a9:	lea	rcx, [rbx + 4]
0x43ad:	lea	rdi, [rbx + 0x24]
0x43b1:	mov	rdx, rax
0x43b4:	mov	rsi, r14
0x43b7:	call	0x7050


0x67ef:	lea	rdx, [rip + 0x1024a]
0x67f6:	mov	rcx, rax
0x67f9:	mov	r8d, 0x7e3
0x67ff:	mov	esi, 1
0x6804:	mov	rdi, rbp
0x6807:	xor	eax, eax
0x6809:	call	0x1d80


0x680e:	lea	rsi, [rip + 0xff93]
0x6815:	xor	edi, edi
0x6817:	mov	edx, 5
0x681c:	call	0x1a90


0x6821:	mov	rsi, rbp
0x6824:	mov	rdi, rax
0x6827:	call	0x1bb0


0x1bb0:	jmp	qword ptr [rip + 0x2192d2]




0x2f87:	xor	esi, esi
0x2f89:	mov	rdx, rax
0x2f8c:	mov	edi, 2
0x2f91:	xor	eax, eax
0x2f93:	call	0x1d00


0x1d00:	jmp	qword ptr [rip + 0x21922a]




0x236d:	mov	rdi, qword ptr [rip + 0x218d4c]
0x2374:	mov	rdx, rax
0x2377:	mov	rcx, rbx
0x237a:	mov	esi, 1
0x237f:	xor	eax, eax
0x2381:	call	0x1d80


0x2386:	mov	edi, ebp
0x2388:	call	0x1d60


0x1d60:	jmp	qword ptr [rip + 0x2191fa]




0x239b:	mov	edi, 1
0x23a0:	mov	rsi, rax
0x23a3:	mov	rcx, rbx
0x23a6:	xor	eax, eax
0x23a8:	mov	rdx, rbx
0x23ab:	call	0x1cb0


0x1cb0:	jmp	qword ptr [rip + 0x219252]




0x150d6:	mov	rdi, rax
0x150d9:	mov	r13, rax
0x150dc:	call	0x1ab0


0x6d54:	lea	rdx, [rip + 0xfa1c]
0x6d5b:	mov	rsi, rax
0x6d5e:	mov	edi, 1
0x6d63:	xor	eax, eax
0x6d65:	call	0x1cb0


0x7027:	mov	edi, dword ptr [rip + 0x213fe3]
0x702d:	lea	rdx, [rip + 0xf14f]
0x7034:	mov	rcx, rax
0x7037:	xor	esi, esi
0x7039:	xor	eax, eax
0x703b:	call	0x1d00


0x7087:	cmp	rax, -3
0x708b:	mov	rbp, rax
0x708e:	jbe	0x70b0


0x70b0:	mov	rdx, qword ptr [rsp + 8]
0x70b5:	xor	rdx, qword ptr fs:[0x28]
0x70be:	mov	rax, rbp
0x70c1:	jne	0x70ce


0x7090:	test	r12, r12
0x7093:	je	0x70b0


0x70c3:	add	rsp, 0x18
0x70c7:	pop	rbx
0x70c8:	pop	rbp
0x70c9:	pop	r12
0x70cb:	pop	r13
0x70cd:	ret	


0x70ce:	call	0x1ad0


0x7095:	xor	edi, edi
0x7097:	call	0x15370


0x43bc:	cmp	rax, -1
0x43c0:	mov	qword ptr [rsp + 0x18], rax
0x43c5:	je	0x4468


0x4468:	mov	qword ptr [rsp + 0x18], 1
0x4471:	mov	byte ptr [rsp + 0x20], 0
0x4476:	mov	edx, 1
0x447b:	mov	byte ptr [rsp + 0xc], 1
0x4480:	mov	r14, qword ptr [rsp + 0x10]
0x4485:	jmp	0x4377


0x43cb:	cmp	rax, -2
0x43cf:	je	0x4490


0x4377:	cmp	bpl, byte ptr [r14]
0x437a:	je	0x44c3


0x4490:	mov	r14, qword ptr [rsp + 0x10]
0x4495:	mov	rdi, r14
0x4498:	call	0x1ab0


0x43d5:	test	rax, rax
0x43d8:	jne	0x43fe


0x43da:	mov	r14, qword ptr [rsp + 0x10]
0x43df:	mov	qword ptr [rsp + 0x18], 1
0x43e8:	cmp	byte ptr [r14], 0
0x43ec:	jne	0x4507


0x43fe:	lea	rdi, [rbx + 4]
0x4402:	mov	byte ptr [rsp + 0x20], 1
0x4407:	call	0x1d90


0x43f2:	mov	edx, dword ptr [rsp + 0x24]
0x43f6:	test	edx, edx
0x43f8:	jne	0x4526


0x4507:	lea	rcx, [rip + 0x11cb2]
0x450e:	lea	rsi, [rip + 0x110fb]
0x4515:	lea	rdi, [rip + 0x11b32]
0x451c:	mov	edx, 0xb2
0x4521:	call	0x1b50


0x4526:	lea	rcx, [rip + 0x11c93]
0x452d:	lea	rsi, [rip + 0x110dc]
0x4534:	lea	rdi, [rip + 0x11a42]
0x453b:	mov	edx, 0xb3
0x4540:	call	0x1b50


0x440c:	test	eax, eax
0x440e:	je	0x44b0


0x44b0:	mov	byte ptr [rsp + 0xc], 1
0x44b5:	jmp	0x441d


0x4414:	mov	byte ptr [rsp], 0
0x4418:	mov	byte ptr [rsp + 0xc], 1
0x441d:	mov	eax, dword ptr [rsp + 0x24]
0x4421:	test	eax, eax
0x4423:	je	0x44c0


0x441d:	mov	eax, dword ptr [rsp + 0x24]
0x4421:	test	eax, eax
0x4423:	je	0x44c0


0x4429:	mov	r14, qword ptr [rsp + 0x10]
0x442e:	mov	rdx, qword ptr [rsp + 0x18]
0x4433:	cmp	rdx, 1
0x4437:	jne	0x4380


0x443d:	jmp	0x4377


0x4664:	cmp	rax, -1
0x4668:	mov	qword ptr [rsp + 0x18], rax
0x466d:	je	0x46d8


0x46d8:	mov	qword ptr [rsp + 0x18], 1
0x46e1:	mov	byte ptr [rsp + 0x20], 0
0x46e6:	jmp	0x4623


0x466f:	cmp	rax, -2
0x4673:	je	0x46f0


0x46f0:	mov	rdi, qword ptr [rsp + 0x10]
0x46f5:	call	0x1ab0


0x4675:	test	rax, rax
0x4678:	jne	0x469d


0x467a:	mov	rax, qword ptr [rsp + 0x10]
0x467f:	mov	qword ptr [rsp + 0x18], 1
0x4688:	cmp	byte ptr [rax], 0
0x468b:	jne	0x473e


0x469d:	lea	rdi, [rbp + 4]
0x46a1:	mov	byte ptr [rsp + 0x20], 1
0x46a6:	call	0x1d90


0x4691:	mov	edx, dword ptr [rsp + 0x24]
0x4695:	test	edx, edx
0x4697:	jne	0x475d


0x473e:	lea	rcx, [rip + 0x11a9b]
0x4745:	lea	rsi, [rip + 0x10ec4]
0x474c:	lea	rdi, [rip + 0x118fb]
0x4753:	mov	edx, 0xb2
0x4758:	call	0x1b50


0x475d:	lea	rcx, [rip + 0x11a7c]
0x4764:	lea	rsi, [rip + 0x10ea5]
0x476b:	lea	rdi, [rip + 0x1180b]
0x4772:	mov	edx, 0xb3
0x4777:	call	0x1b50


0x46ab:	test	eax, eax
0x46ad:	je	0x4710


0x4710:	mov	byte ptr [rsp + 0xc], 1
0x4715:	jmp	0x4617


0x46af:	mov	byte ptr [rsp], 0
0x46b3:	mov	byte ptr [rsp + 0xc], 1
0x46b8:	jmp	0x4617


0x4617:	mov	eax, dword ptr [rsp + 0x24]
0x461b:	test	eax, eax
0x461d:	je	0x4585


0xb1e4:	cmp	r12, rax
0xb1e7:	mov	r8, qword ptr [rsp]
0xb1eb:	mov	r10d, dword ptr [rsp + 0xc]
0xb1f0:	ja	0xb1fc


0xb1f2:	cmp	rax, -3
0xb1f6:	jbe	0xb3c1


0xb1fc:	mov	r11, qword ptr [rbx + 0x28]
0xb200:	mov	rax, qword ptr [rbx + 0x38]
0xb204:	jmp	0xaea1


0xb3c1:	mov	edx, dword ptr [rsp + 0x24]
0xb3c5:	sub	rax, r12
0xb3c8:	mov	qword ptr [rbx + 0x20], 0
0xb3d0:	mov	r12, rax
0xb3d3:	mov	qword ptr [rbx + 0x30], rax
0xb3d7:	cmp	edx, -1
0xb3da:	jne	0xaf25


0xb3e0:	jmp	0xb1fc


0xaf25:	cmp	byte ptr [rbx + 0x8e], 0
0xaf2c:	jne	0xb399


0xaf32:	xor	eax, eax
0xaf34:	cmp	edx, 0xa
0xaf37:	jne	0xaf47


0xb399:	mov	edi, edx
0xb39b:	mov	dword ptr [rsp], edx
0xb39e:	call	0x1c10


0xaf39:	xor	eax, eax
0xaf3b:	cmp	byte ptr [rbx + 0x8d], 0
0xaf42:	setne	al
0xaf45:	add	eax, eax
0xaf47:	mov	dword ptr [rbx + 0x70], eax
0xaf4a:	cmp	r12, 0
0xaf4e:	jne	0xb36a


0xaf47:	mov	dword ptr [rbx + 0x70], eax
0xaf4a:	cmp	r12, 0
0xaf4e:	jne	0xb36a


0xb3a3:	test	eax, eax
0xb3a5:	jne	0xb3b3


0xb3a7:	mov	edx, dword ptr [rsp]
0xb3aa:	cmp	edx, 0x5f
0xb3ad:	jne	0xaf32


0xb3b3:	mov	eax, 1
0xb3b8:	jmp	0xaf47


0xd068:	cmp	r12, rax
0xd06b:	jne	0xcf37


0xd071:	mov	edi, dword ptr [rsp + 0x54]
0xd075:	call	0x1d20


0xd1ea:	cmp	rax, -2
0xd1ee:	jne	0xd1fa


0xd1f0:	movzx	eax, byte ptr [rsp + 0x54]
0xd1f5:	mov	byte ptr [rbp + rax], 1
0xd1fa:	add	byte ptr [rsp + 0x54], 1
0xd1ff:	jne	0xd1d0


0xd1fa:	add	byte ptr [rsp + 0x54], 1
0xd1ff:	jne	0xd1d0


0xd201:	jmp	0xcf37


0xd1d0:	xor	edi, edi
0xd1d2:	mov	qword ptr [r12], 0
0xd1da:	mov	rcx, r12
0xd1dd:	mov	edx, 1
0xd1e2:	mov	rsi, r13
0xd1e5:	call	0x7050


0xaeef:	lea	rcx, [rax - 1]
0xaef3:	mov	edx, dword ptr [rsp + 0x24]
0xaef7:	mov	r8, qword ptr [rsp]
0xaefb:	mov	r10d, dword ptr [rsp + 0xc]
0xaf00:	cmp	rcx, -4
0xaf04:	ja	0xb345


0xaf0a:	add	r14, rax
0xaf0d:	cmp	r15, r14
0xaf10:	jg	0xaec0


0xb345:	test	rax, rax
0xb348:	je	0xb3bd


0xaf12:	sub	r14, r15
0xaf15:	cmp	edx, -1
0xaf18:	mov	r12, r14
0xaf1b:	mov	qword ptr [rbx + 0x30], r14
0xaf1f:	je	0xb2f9


0xaec0:	mov	r12, qword ptr [rbx + 0x50]
0xaec4:	mov	rsi, qword ptr [rbx]
0xaec7:	mov	rdi, r13
0xaeca:	mov	rax, qword ptr [rbx + 0x20]
0xaece:	mov	rcx, qword ptr [rsp + 0x10]
0xaed3:	mov	dword ptr [rsp + 0xc], r10d
0xaed8:	mov	qword ptr [rsp], r8
0xaedc:	sub	r12, r14
0xaedf:	add	rsi, r14
0xaee2:	mov	rdx, r12
0xaee5:	mov	qword ptr [rsp + 0x18], rax
0xaeea:	call	0x7050


0xb3bd:	xor	edx, edx
0xb3bf:	jmp	0xb357


0xb34a:	test	r12, r12
0xb34d:	je	0xb3bd


0xb2f9:	lea	rsi, [r8 - 1]
0xb2fd:	mov	edx, r10d
0xb300:	mov	rdi, rbx
0xb303:	call	0xa9d0


0xb357:	mov	rax, qword ptr [rsp + 0x18]
0xb35c:	mov	qword ptr [rbx + 0x20], rax
0xb360:	mov	eax, 1
0xb365:	jmp	0xaf0a


0xb34f:	mov	rax, qword ptr [rbx]
0xb352:	movzx	edx, byte ptr [rax + r14]
0xb357:	mov	rax, qword ptr [rsp + 0x18]
0xb35c:	mov	qword ptr [rbx + 0x20], rax
0xb360:	mov	eax, 1
0xb365:	jmp	0xaf0a


0x7bfc:	mov	rbp, rax
0x7bff:	lea	rax, [rax - 1]
0x7c03:	cmp	rax, -4
0x7c07:	mov	qword ptr [rsp + 0x20], rax
0x7c0c:	ja	0x7f49


0x7c12:	mov	edx, dword ptr [rsp + 0x44]
0x7c16:	mov	edi, edx
0x7c18:	mov	dword ptr [rsp + 0x10], edx
0x7c1c:	call	0x1d30


0x7f49:	cmp	qword ptr [rsp + 0x20], -3
0x7f4f:	jne	0x7f5b


0x1d30:	jmp	qword ptr [rip + 0x219212]


0x7f51:	mov	rax, qword ptr [r14 + 0x58]
0x7f55:	cmp	qword ptr [r14 + 0x40], rax
0x7f59:	jl	0x7fd8


0x7f5b:	mov	rax, qword ptr [r14]
0x7f5e:	mov	rdx, qword ptr [r14 + 0x78]
0x7f62:	add	rax, r13
0x7f65:	add	rax, qword ptr [r14 + 0x28]
0x7f69:	test	rdx, rdx
0x7f6c:	movzx	eax, byte ptr [rax]
0x7f6f:	jne	0x811c




0x7fd8:	mov	rax, qword ptr [rsp + 0x48]
0x7fdd:	mov	qword ptr [r14 + 0x20], rax
0x7fe1:	jmp	0x7b65


0x7f75:	mov	rdx, qword ptr [r14 + 8]
0x7f79:	mov	rcx, r15
0x7f7c:	mov	byte ptr [rdx + r15], al
0x7f80:	cmp	byte ptr [r14 + 0x8c], 0
0x7f88:	jne	0x810f


0x811c:	movzx	eax, byte ptr [rdx + rax]
0x8120:	jmp	0x7f75


0x7f8e:	mov	rdx, qword ptr [r14 + 0x10]
0x7f92:	add	r13, 1
0x7f96:	add	r15, 1
0x7f9a:	cmp	rbp, -1
0x7f9e:	mov	dword ptr [rdx + rcx*4], eax
0x7fa1:	jne	0x7b60


0x810f:	mov	rdx, qword ptr [r14 + 0x18]
0x8113:	mov	qword ptr [rdx + r15*8], r13
0x8117:	jmp	0x7f8e


0x7fa7:	mov	rax, qword ptr [rsp + 0x48]
0x7fac:	mov	qword ptr [r14 + 0x20], rax
0x7fb0:	jmp	0x7b60


0x7b60:	cmp	r15, rbx
0x7b63:	jl	0x7ba0


0x7d75:	mov	rbp, rax
0x7d78:	lea	rax, [rax - 1]
0x7d7c:	cmp	rax, -4
0x7d80:	ja	0x7e68


0x7d86:	mov	edx, dword ptr [rsp + 0x44]
0x7d8a:	mov	edi, edx
0x7d8c:	mov	dword ptr [rsp + 0x18], edx
0x7d90:	call	0x1d30


0x7e68:	cmp	rax, -3
0x7e6c:	jne	0x7ea0


0x7e6e:	mov	rax, qword ptr [r14 + 0x58]
0x7e72:	cmp	qword ptr [r14 + 0x40], rax
0x7e76:	jge	0x7ea0


0x7ea0:	mov	rax, qword ptr [r14]
0x7ea3:	mov	rdx, qword ptr [r14 + 8]
0x7ea7:	add	rax, r15
0x7eaa:	add	rax, qword ptr [r14 + 0x28]
0x7eae:	movzx	eax, byte ptr [rax]
0x7eb1:	mov	byte ptr [rdx + r15], al
0x7eb5:	mov	rdx, qword ptr [r14 + 0x10]
0x7eb9:	add	r15, 1
0x7ebd:	cmp	rbp, -1
0x7ec1:	mov	dword ptr [rdx + r13*4], eax
0x7ec5:	jne	0x7e0a


0x7e78:	mov	rax, qword ptr [rsp + 0x48]
0x7e7d:	mov	qword ptr [r14 + 0x20], rax
0x7e81:	nop	dword ptr [rax]
0x7e88:	mov	qword ptr [r14 + 0x30], r15
0x7e8c:	mov	qword ptr [r14 + 0x38], r15
0x7e90:	xor	eax, eax
0x7e92:	jmp	0x7b6f


0x7ecb:	mov	rax, qword ptr [rsp + 0x48]
0x7ed0:	mov	qword ptr [r14 + 0x20], rax
0x7ed4:	jmp	0x7e0a


0x79b4:	lea	rdx, [rax - 1]
0x79b8:	cmp	rdx, -3
0x79bc:	ja	0x7a50


0x79c2:	cmp	rax, -2
0x79c6:	mov	edx, dword ptr [rsp + 0xc]
0x79ca:	je	0x7a40


0x7a50:	mov	rax, qword ptr [rbx]
0x7a53:	mov	rcx, qword ptr [rbx + 0x78]
0x7a57:	add	rax, rbp
0x7a5a:	add	rax, qword ptr [rbx + 0x28]
0x7a5e:	test	rcx, rcx
0x7a61:	movzx	edx, byte ptr [rax]
0x7a64:	mov	dword ptr [rsp + 0xc], edx
0x7a68:	jne	0x7af1


0x7a40:	mov	rax, qword ptr [rbx + 0x58]
0x7a44:	cmp	qword ptr [rbx + 0x40], rax
0x7a48:	jl	0x7ae8


0x79cc:	mov	rcx, qword ptr [rbx + 0x10]
0x79d0:	lea	rsi, [rbp + 1]
0x79d4:	lea	rdi, [rbp*4]
0x79dc:	mov	dword ptr [rcx + rbp*4], edx
0x79df:	add	rbp, rax
0x79e2:	cmp	rsi, rbp
0x79e5:	jge	0x7a30


0x7a6e:	mov	qword ptr [rbx + 0x20], r15
0x7a72:	mov	eax, 1
0x7a77:	jmp	0x79cc


0x7af1:	movzx	edx, byte ptr [rcx + rdx]
0x7af5:	mov	dword ptr [rsp + 0xc], edx
0x7af9:	jmp	0x7a6e


0x7ae8:	mov	qword ptr [rbx + 0x20], r15
0x7aec:	jmp	0x7a04


0x79e7:	lea	rdx, [rcx + rdi + 4]
0x79ec:	lea	rax, [rcx + rbp*4]
0x79f0:	mov	dword ptr [rdx], 0xffffffff
0x79f6:	add	rdx, 4
0x79fa:	cmp	rax, rdx
0x79fd:	jne	0x79f0


0x7a30:	mov	rbp, rsi
0x7a33:	cmp	rbp, r12
0x7a36:	jl	0x7988


0x79ff:	cmp	rbp, r12
0x7a02:	jl	0x7988


0x79f0:	mov	dword ptr [rdx], 0xffffffff
0x79f6:	add	rdx, 4
0x79fa:	cmp	rax, rdx
0x79fd:	jne	0x79f0


0x7988:	mov	rdi, qword ptr [rbx + 0x78]
0x798c:	mov	rdx, r12
0x798f:	mov	r15, qword ptr [rbx + 0x20]
0x7993:	sub	rdx, rbp
0x7996:	test	rdi, rdi
0x7999:	jne	0x7a80


0x7a3c:	jmp	0x7a04


0x8531:	mov	rcx, qword ptr [rsp]
0x8535:	mov	rdi, rcx
0x8538:	call	0x19d0


0x853d:	mov	rdi, rbp
0x8540:	call	0x19d0


0x8545:	mov	rax, qword ptr [rsp + 8]
0x854a:	mov	rdi, rax
0x854d:	call	0x19d0


0xe7dc:	mov	eax, 0xc
0xe7e1:	jmp	0xe68b


0xe5de:	cmp	byte ptr [rbp - 0xc9], 0
0xe5e5:	je	0xe258


0xe258:	mov	rdi, qword ptr [rbp - 0x88]
0xe25f:	call	0xc2b0


0xe5eb:	mov	rdi, qword ptr [rbp - 0xc0]
0xe5f2:	call	0x19d0


0xe5f7:	jmp	0xe4ee


0xe4ee:	cmp	qword ptr [rbp - 0x88], 0
0xe4f6:	jne	0xe258


0xe4fc:	mov	eax, 0xc
0xe501:	jmp	0xe479


0xe479:	mov	rbx, qword ptr [rbp - 0x38]
0xe47d:	xor	rbx, qword ptr fs:[0x28]
0xe486:	jne	0xe645


0xe48c:	lea	rsp, [rbp - 0x28]
0xe490:	pop	rbx
0xe491:	pop	r12
0xe493:	pop	r13
0xe495:	pop	r14
0xe497:	pop	r15
0xe499:	pop	rbp
0xe49a:	ret	


0xe645:	call	0x1ad0


0x10966:	test	eax, eax
0x10968:	jne	0x10c3d


0x1096e:	mov	rax, qword ptr [rbx]
0x10971:	movzx	r11d, byte ptr [rsp + 0x1ac]
0x1097a:	mov	r10, qword ptr [rsp + 0x150]
0x10982:	xor	ecx, ecx
0x10984:	mov	r9, qword ptr [rsp + 0x138]
0x1098c:	mov	r8, qword ptr [rsp + 0x158]
0x10994:	mov	rdi, qword ptr [rsp + 0xd8]
0x1099c:	mov	rdx, qword ptr [rsp + 0xb8]
0x109a4:	jmp	0x109a9


0x10c3d:	mov	rdi, qword ptr [rsp + 0x1d8]
0x10c45:	mov	dword ptr [rsp + 0x5c], eax
0x10c49:	jmp	0x10168


0xc349:	mov	rax, qword ptr [r12]
0xc34d:	mov	rdi, qword ptr [rax + rbx + 0x10]
0xc352:	call	0x19d0


0xc357:	add	rbx, qword ptr [r12]
0xc35b:	movdqu	xmm0, xmmword ptr [rbx + 0x18]
0xc360:	movaps	xmmword ptr [rbp], xmm0
0xc364:	mov	rax, qword ptr [rbx + 0x28]
0xc368:	mov	qword ptr [rbp + 0x10], rax
0xc36c:	mov	rax, qword ptr [rbx + 8]
0xc370:	pop	rbx
0xc371:	pop	rbp
0xc372:	pop	r12
0xc374:	ret	


0xe36b:	mov	rcx, qword ptr [rbp - 0x78]
0xe36f:	mov	rbx, rax
0xe372:	jmp	0xde6b


0xde6b:	lea	rax, [rbp - 0x78]
0xde6f:	mov	qword ptr [rbp - 0xb0], rax
0xde76:	jmp	0xdf59


0xe318:	mov	r9, rax
0xe31b:	mov	rbx, rax
0xe31e:	mov	r15, rax
0xe321:	shl	r9, 4
0xe325:	jmp	0xde9c


0xe605:	cmp	byte ptr [rbp - 0xc9], 0
0xe60c:	mov	eax, 1
0xe611:	je	0xe479


0xe617:	mov	rdi, qword ptr [rbp - 0xc0]
0xe61e:	mov	dword ptr [rbp - 0x88], eax
0xe624:	call	0x19d0


0xe629:	mov	eax, dword ptr [rbp - 0x88]
0xe62f:	jmp	0xe479


0xe4e1:	cmp	byte ptr [rbp - 0xc9], 0
0xe4e8:	jne	0xe5eb


0xe2b3:	cmp	byte ptr [rbp - 0xc9], 0
0xe2ba:	jne	0xe634


0xe2c0:	mov	rdi, qword ptr [rbp - 0x88]
0xe2c7:	call	0xc2b0


0xe634:	mov	rdi, qword ptr [rbp - 0xc0]
0xe63b:	call	0x19d0


0xe640:	jmp	0xe2c0


0xe5b5:	cmp	byte ptr [rbp - 0xc9], 0
0xe5bc:	je	0xe477


0xe477:	xor	eax, eax
0xe479:	mov	rbx, qword ptr [rbp - 0x38]
0xe47d:	xor	rbx, qword ptr fs:[0x28]
0xe486:	jne	0xe645


0xe5c2:	mov	rdi, qword ptr [rbp - 0xc0]
0xe5c9:	call	0x19d0


0xe5ce:	xor	eax, eax
0xe5d0:	jmp	0xe479


0xe459:	cmp	byte ptr [rbp - 0xc9], 0
0xe460:	jne	0xe53c


0xe466:	mov	rdi, qword ptr [rbp - 0x88]
0xe46d:	test	rdi, rdi
0xe470:	je	0xe477


0xe53c:	mov	rdi, qword ptr [rbp - 0xc0]
0xe543:	call	0x19d0


0xe472:	call	0xc2b0


0xe548:	mov	rdi, qword ptr [rbp - 0x88]
0xe54f:	test	rdi, rdi
0xe552:	jne	0xe472


0xe558:	jmp	0xe477


0x22c9:	mov	dword ptr [rbx], 0
0x22cf:	add	rsp, 8
0x22d3:	mov	eax, 1
0x22d8:	pop	rbx
0x22d9:	pop	rbp
0x22da:	ret	


0x14f08:	pop	rax
0x14f09:	pop	rdx
0x14f0a:	add	rsp, 0x28
0x14f0e:	mov	rax, rbx
0x14f11:	pop	rbx
0x14f12:	pop	rbp
0x14f13:	pop	r12
0x14f15:	pop	r13
0x14f17:	pop	r14
0x14f19:	pop	r15
0x14f1b:	ret	


0xdb7d:	mov	eax, dword ptr [rsp + 0x88]
0xdb84:	mov	rbx, qword ptr [rsp + 0xc8]
0xdb8c:	xor	rbx, qword ptr fs:[0x28]
0xdb95:	jne	0xdd4c


0xdbbd:	mov	dword ptr [rsp + 0x88], 0
0xdbc8:	jmp	0xd948


0xd92d:	mov	eax, dword ptr [rsp + 0x8c]
0xd934:	test	eax, eax
0xd936:	mov	dword ptr [rsp + 0x88], eax
0xd93d:	jne	0xdb70


0xdb65:	mov	dword ptr [rsp + 0x88], 0xc
0xdb70:	mov	rdi, qword ptr [rsp + 0xa0]
0xdb78:	call	0x19d0


0xda35:	mov	rax, qword ptr [r15 + 0xb8]
0xda3c:	mov	rbx, qword ptr [rsp + 0x40]
0xda41:	mov	rax, qword ptr [rax + rbx*8]
0xda45:	test	rax, rax
0xda48:	je	0xdd25


0xdd25:	mov	rax, qword ptr [rsp + 0x60]
0xdd2a:	mov	qword ptr [rax], r12
0xdd2d:	mov	rax, qword ptr [rsp + 0x68]
0xdd32:	mov	qword ptr [r15 + 0xb8], rax
0xdd39:	mov	rax, qword ptr [rsp + 0x70]
0xdd3e:	mov	qword ptr [r15 + 0x48], rax
0xdd42:	mov	eax, 1
0xdd47:	jmp	0xdb84


0xda4e:	mov	rbx, qword ptr [rsp + 0x60]
0xda53:	mov	rdx, qword ptr [rsp + 0x78]
0xda58:	lea	rsi, [rax + 0x18]
0xda5c:	mov	qword ptr [rbx], r12
0xda5f:	mov	rbx, qword ptr [rsp + 0x68]
0xda64:	mov	qword ptr [r15 + 0xb8], rbx
0xda6b:	mov	rbx, qword ptr [rsp + 0x70]
0xda70:	mov	qword ptr [r15 + 0x48], rbx
0xda74:	mov	rdi, qword ptr [rax + 0x10]
0xda78:	call	0x8bf0


0xda7d:	test	rax, rax
0xda80:	sete	al
0xda83:	movzx	eax, al
0xda86:	jmp	0xdb84


0xece1:	mov	rdx, qword ptr [r14 + 0xb8]
0xece8:	cmp	qword ptr [rdx + rbx*8], 0
0xeced:	je	0xefc1


0xf045:	mov	eax, dword ptr [rsp + 0x8c]
0xf04c:	jmp	0xeb68


0xf201:	jmp	0xf137


0x103cf:	mov	rdi, qword ptr [rsp + 0x1d8]
0x103d7:	cmp	qword ptr [rdi + rbp*8], 0
0x103dc:	je	0x104c1


0xb66d:	mov	eax, dword ptr [rsp]
0xb670:	jmp	0xb638


0xb638:	mov	rsi, qword ptr [rsp + 0x38]
0xb63d:	xor	rsi, qword ptr fs:[0x28]
0xb646:	jne	0xb676


0xb648:	add	rsp, 0x48
0xb64c:	pop	rbx
0xb64d:	pop	rbp
0xb64e:	pop	r12
0xb650:	pop	r13
0xb652:	pop	r14
0xb654:	pop	r15
0xb656:	ret	


0xb676:	call	0x1ad0


0x112ed:	test	eax, eax
0x112ef:	jne	0x10dd8


0x112f5:	sub	rbp, 1
0x112f9:	jmp	0x11288


0x1124f:	test	eax, eax
0x11251:	jne	0x10dd8


0x11257:	test	r14, r14
0x1125a:	js	0x111ad


0x11260:	cmp	qword ptr [rbx + 8], 0
0x11265:	jle	0x111ad


0x1126b:	mov	r10, qword ptr [rbx + 0x10]
0x1126f:	xor	r14d, r14d
0x11272:	mov	qword ptr [rsp + 0x30], rbp
0x11277:	mov	rbp, r14
0x1127a:	mov	r14, qword ptr [rsp + 0x28]
0x1127f:	jmp	0x1129a


0x11191:	test	eax, eax
0x11193:	jne	0x10dd8


0x11199:	add	r14, 1
0x1119d:	cmp	r14, qword ptr [rbx + 8]
0x111a1:	jl	0x1115a


0xa6c7:	mov	rax, qword ptr [rbx + 0xb8]
0xa6ce:	cmp	qword ptr [rax + r14*8], 0
0xa6d3:	je	0xa815


0xa815:	mov	eax, dword ptr [rsp + 0x4c]
0xa819:	test	eax, eax
0xa81b:	je	0xa6d9


0xa821:	jmp	0xa59f


0xa59f:	mov	rbx, qword ptr [rsp + 0x68]
0xa5a4:	xor	rbx, qword ptr fs:[0x28]
0xa5ad:	jne	0xa879


0xa830:	mov	eax, dword ptr [rsp + 0x4c]
0xa834:	test	eax, eax
0xa836:	jne	0xa59f


0xa83c:	mov	eax, 0xc
0xa841:	jmp	0xa59f


0x1016d:	mov	rax, qword ptr [rsp + 0x38]
0x10172:	cmp	qword ptr [rax + 0x98], 0
0x1017a:	jne	0x10aa0


0x10180:	mov	rdi, qword ptr [rsp]
0x10184:	call	0x88e0


0x10aa0:	mov	rdi, qword ptr [rsp]
0x10aa4:	call	0x8a80


0x10aa9:	mov	rdi, qword ptr [rsp + 0x218]
0x10ab1:	call	0x19d0


0x10ab6:	mov	rdi, qword ptr [rsp + 0x1f8]
0x10abe:	call	0x19d0


0x10ac3:	jmp	0x10180


0xa48b:	mov	eax, dword ptr [rsp + 0x1c]
0xa48f:	test	eax, eax
0xa491:	jne	0xa4b8


0x1156b:	mov	eax, dword ptr [rsp + 8]
0x1156f:	jmp	0x10dd8


0xb636:	xor	eax, eax
0xb638:	mov	rsi, qword ptr [rsp + 0x38]
0xb63d:	xor	rsi, qword ptr fs:[0x28]
0xb646:	jne	0xb676


0x600d:	mov	qword ptr [rip + 0x21504c], rbx
0x6014:	pop	rbx
0x6015:	mov	dword ptr [rip + 0x215039], 1
0x601f:	pop	rbp
0x6020:	pop	r12
0x6022:	ret	


0x5fe7:	mov	qword ptr [rip + 0x21507e], 0x100
0x5ff2:	mov	qword ptr [rip + 0x21507f], rbx
0x5ff9:	lea	rbx, [rip + 0x215070]
0x6000:	cmp	r12, rbx
0x6003:	je	0x6014


0x6e4d:	xor	eax, eax
0x6e4f:	pop	rbx
0x6e50:	ret	


0x8ace:	mov	rdi, rbp
0x8ad1:	call	0x19d0


0x8ad6:	cmp	qword ptr [r12 + 0x20], rbx
0x8adb:	jg	0x8ab8


0x8ab8:	mov	rax, qword ptr [r12 + 0x28]
0x8abd:	mov	rbp, qword ptr [rax + rbx*8]
0x8ac1:	add	rbx, 1
0x8ac5:	mov	rdi, qword ptr [rbp + 0x20]
0x8ac9:	call	0x19d0


0x8ae7:	mov	rax, qword ptr [r12 + 0x10]
0x8aec:	test	rax, rax
0x8aef:	je	0x8b04


0x8b04:	mov	rdi, r12
0x8b07:	add	r13, 1
0x8b0b:	call	0x19d0


0x8af1:	mov	rdi, qword ptr [rax + 0x10]
0x8af5:	call	0x19d0


0x8afa:	mov	rdi, qword ptr [r12 + 0x10]
0x8aff:	call	0x19d0


0x8b10:	cmp	qword ptr [r14 + 0xe8], r13
0x8b17:	jg	0x8aa0


0x8aa0:	mov	rax, qword ptr [r14 + 0xf8]
0x8aa7:	mov	r12, qword ptr [rax + r13*8]
0x8aab:	cmp	qword ptr [r12 + 0x20], 0
0x8ab1:	jle	0x8add


0x21c9:	mov	rdi, rbx
0x21cc:	pop	rbx
0x21cd:	jmp	0x19d0


0x5fcc:	cmp	rbx, rbp
0x5fcf:	jne	0x5fc0


0x5fc0:	mov	rdi, qword ptr [rbx]
0x5fc3:	add	rbx, 0x10
0x5fc7:	call	0x19d0


0x8968:	cmp	qword ptr [r12 + 0x10], 0
0x896e:	je	0x89c3


0x89c3:	mov	rdi, qword ptr [r12 + 0x28]
0x89c8:	call	0x19d0


0x8970:	xor	ebx, ebx
0x8972:	xor	ebp, ebp
0x8974:	nop	dword ptr [rax]
0x8978:	mov	rax, qword ptr [r12 + 0x30]
0x897d:	test	rax, rax
0x8980:	je	0x898c


0x898c:	mov	rax, qword ptr [r12 + 0x38]
0x8991:	test	rax, rax
0x8994:	je	0x89a0


0x8982:	mov	rdi, qword ptr [rax + rbx + 0x10]
0x8987:	call	0x19d0


0x89a0:	mov	rax, qword ptr [r12 + 0x28]
0x89a5:	test	rax, rax
0x89a8:	je	0x89b4


0x8996:	mov	rdi, qword ptr [rax + rbx + 0x10]
0x899b:	call	0x19d0


0x89b4:	add	rbp, 1
0x89b8:	add	rbx, 0x18
0x89bc:	cmp	qword ptr [r12 + 0x10], rbp
0x89c1:	ja	0x8978


0x89aa:	mov	rdi, qword ptr [rax + rbx + 0x10]
0x89af:	call	0x19d0


0x8978:	mov	rax, qword ptr [r12 + 0x30]
0x897d:	test	rax, rax
0x8980:	je	0x898c


0x89cd:	mov	rdi, qword ptr [r12 + 0x30]
0x89d2:	call	0x19d0


0x89d7:	mov	rdi, qword ptr [r12 + 0x38]
0x89dc:	call	0x19d0


0x89e1:	mov	rdi, qword ptr [r12]
0x89e5:	call	0x19d0


0x89ea:	mov	rdi, qword ptr [r12 + 0x40]
0x89ef:	test	rdi, rdi
0x89f2:	je	0x8a47


0x8a47:	call	0x19d0


0x89f4:	xor	r14d, r14d
0x89f7:	xor	r13d, r13d
0x89fa:	nop	word ptr [rax + rax]
0x8a00:	lea	rbp, [rdi + r14]
0x8a04:	cmp	qword ptr [rbp], 0
0x8a09:	jle	0x8a27


0x8a27:	mov	rdi, qword ptr [rbp + 0x10]
0x8a2b:	add	r13, 1
0x8a2f:	add	r14, 0x18
0x8a33:	call	0x19d0


0x8a0b:	xor	ebx, ebx
0x8a0d:	nop	dword ptr [rax]
0x8a10:	mov	rax, qword ptr [rbp + 0x10]
0x8a14:	mov	rdi, qword ptr [rax + rbx*8]
0x8a18:	add	rbx, 1
0x8a1c:	call	0x8880


0x8a38:	cmp	qword ptr [r12 + 0x88], r13
0x8a40:	mov	rdi, qword ptr [r12 + 0x40]
0x8a45:	jae	0x8a00


0x8a00:	lea	rbp, [rdi + r14]
0x8a04:	cmp	qword ptr [rbp], 0
0x8a09:	jle	0x8a27


0x8a4c:	mov	rdi, qword ptr [r12 + 0x78]
0x8a51:	lea	rax, [rip + 0xe648]
0x8a58:	cmp	rdi, rax
0x8a5b:	je	0x8a62


0x8a62:	mov	rdi, qword ptr [r12 + 0xe0]
0x8a6a:	call	0x19d0


0x8a5d:	call	0x19d0


0x8a6f:	pop	rbx
0x8a70:	mov	rdi, r12
0x8a73:	pop	rbp
0x8a74:	pop	r12
0x8a76:	pop	r13
0x8a78:	pop	r14
0x8a7a:	jmp	0x19d0


0xc2da:	mov	rax, qword ptr [rbp + 0x10]
0xc2de:	mov	rdi, qword ptr [rax + rbx + 0x10]
0xc2e3:	add	rbx, 0x30
0xc2e7:	call	0x19d0


0xc2ec:	cmp	r12, qword ptr [rbp]
0xc2f0:	jl	0xc2c8


0xc2c8:	mov	rax, qword ptr [rbp + 0x10]
0xc2cc:	add	r12, 1
0xc2d0:	mov	rdi, qword ptr [rax + rbx + 0x28]
0xc2d5:	call	0x19d0


0x15159:	mov	rdi, qword ptr [rbx + 0x28]
0x1515d:	mov	qword ptr [rbx + 0x20], 0
0x15165:	call	0x19d0


0x1516a:	mov	qword ptr [rbx + 0x28], 0
0x15172:	pop	rbx
0x15173:	ret	


0x831c:	mov	rdi, qword ptr [rbx + 8]
0x8320:	call	0x19d0


0x8325:	mov	rdi, qword ptr [rbx + 0x10]
0x8329:	call	0x19d0


0x832e:	mov	rdi, qword ptr [rbx + 0x18]
0x8332:	call	0x19d0


0x8337:	mov	rdi, rbx
0x833a:	pop	rbx
0x833b:	jmp	0x19d0


0x888d:	mov	rdi, qword ptr [rbx + 0x48]
0x8891:	call	0x19d0


0x8896:	mov	rax, qword ptr [rbx + 0x50]
0x889a:	lea	rdx, [rbx + 8]
0x889e:	cmp	rax, rdx
0x88a1:	je	0x88b5


0x88b5:	mov	rdi, qword ptr [rbx + 0x18]
0x88b9:	call	0x19d0


0x88a3:	mov	rdi, qword ptr [rax + 0x10]
0x88a7:	call	0x19d0


0x88ac:	mov	rdi, qword ptr [rbx + 0x50]
0x88b0:	call	0x19d0


0x88be:	mov	rdi, qword ptr [rbx + 0x60]
0x88c2:	call	0x19d0


0x88c7:	mov	rdi, qword ptr [rbx + 0x58]
0x88cb:	call	0x19d0


0x88d0:	mov	rdi, rbx
0x88d3:	pop	rbx
0x88d4:	jmp	0x19d0


0x88ed:	mov	rdi, qword ptr [rbx + 0x18]
0x88f1:	call	0x19d0


0x88f6:	cmp	byte ptr [rbx + 0x8b], 0
0x88fd:	jne	0x8908


0x88ff:	pop	rbx
0x8900:	ret	


0x8908:	mov	rdi, qword ptr [rbx + 8]
0x890c:	pop	rbx
0x890d:	jmp	0x19d0


0x46fa:	mov	byte ptr [rsp + 0x20], 0
0x46ff:	mov	qword ptr [rsp + 0x18], rax
0x4704:	jmp	0x4623


0x449d:	mov	byte ptr [rsp + 0x20], 0
0x44a2:	mov	qword ptr [rsp + 0x18], rax
0x44a7:	mov	byte ptr [rsp + 0xc], 1
0x44ac:	jmp	0x442e


0x442e:	mov	rdx, qword ptr [rsp + 0x18]
0x4433:	cmp	rdx, 1
0x4437:	jne	0x4380


0x150e1:	test	r12, r12
0x150e4:	lea	rbx, [rax + 1]
0x150e8:	je	0x150fd


0x150fd:	add	rsp, 8
0x15101:	mov	rax, rbx
0x15104:	pop	rbx
0x15105:	pop	rbp
0x15106:	pop	r12
0x15108:	pop	r13
0x1510a:	ret	


0x150ea:	cmp	rbx, r12
0x150ed:	mov	rdx, rbx
0x150f0:	ja	0x15118


0x150f2:	mov	rsi, r13
0x150f5:	mov	rdi, rbp
0x150f8:	call	0x1be0


0x15118:	lea	rdx, [r12 - 1]
0x1511d:	mov	byte ptr [rbp + r12 - 1], 0
0x15123:	jmp	0x150f2


0x4582:	mov	rbx, rax
0x4585:	mov	rsi, qword ptr [rsp + 0x48]
0x458a:	xor	rsi, qword ptr fs:[0x28]
0x4593:	mov	rax, rbx
0x4596:	jne	0x4739


0x2846:	mov	rdx, rbp
0x2849:	mov	rsi, rax
0x284c:	mov	rdi, r12
0x284f:	call	0x148a0


0x151b6:	xor	ecx, ecx
0x151b8:	test	byte ptr [rbp + 0x38], 0x10
0x151bc:	mov	rdx, rax
0x151bf:	mov	rsi, qword ptr [rsp + 8]
0x151c4:	je	0x15206


0x6ff9:	mov	rdi, rbx
0x6ffc:	lea	rsi, [rax + 1]
0x7000:	pop	rbx
0x7001:	jmp	0x6fc0


0xc3b4:	cmp	rax, 1
0xc3b8:	jne	0xc3e0


0xc3ba:	movzx	ecx, byte ptr [rbx]
0xc3bd:	mov	rdx, rcx
0xc3c0:	and	ecx, 0x3f
0xc3c3:	shr	rdx, 3
0xc3c7:	shl	rax, cl
0xc3ca:	and	edx, 0x18
0xc3cd:	or	qword ptr [rbp + rdx], rax
0xc3d2:	add	rsp, 8
0xc3d6:	xor	eax, eax
0xc3d8:	pop	rbx
0xc3d9:	pop	rbp
0xc3da:	ret	


0xc3e0:	add	rsp, 8
0xc3e4:	mov	eax, 3
0xc3e9:	pop	rbx
0xc3ea:	pop	rbp
0xc3eb:	ret	


0xeeb3:	test	rax, rax
0xeeb6:	je	0xef59


0xeebc:	mov	rdx, qword ptr [r12 + 0x20]
0xeec1:	mov	rcx, qword ptr [r12 + 0x28]
0xeec6:	mov	rsi, r12
0xeec9:	mov	r8, qword ptr [rsp + 8]
0xeece:	mov	rdi, r14
0xeed1:	mov	qword ptr [rcx + rdx*8], rax
0xeed5:	mov	rcx, qword ptr [rsp + 0x30]
0xeeda:	add	rdx, 1
0xeede:	mov	qword ptr [rax], rbp
0xeee1:	mov	qword ptr [rax + 8], rbx
0xeee5:	mov	qword ptr [r12 + 0x20], rdx
0xeeea:	mov	rdx, rax
0xeeed:	call	0xe650


0xeef2:	cmp	eax, 1
0xeef5:	mov	r11, qword ptr [r14 + 8]
0xeef9:	ja	0xeb68


0xef3e:	test	rax, rax
0xef41:	mov	rsi, rax
0xef44:	mov	qword ptr [r12 + 0x10], rax
0xef49:	mov	rcx, qword ptr [rsp + 0x10]
0xef4e:	mov	r11, qword ptr [rsp + 0x18]
0xef53:	jne	0xee62


0xa921:	mov	r8, qword ptr [rsp + 8]
0xa926:	mov	r9, qword ptr [rsp + 0x10]
0xa92b:	test	rax, rax
0xa92e:	mov	qword ptr [r9 + r8*8], rax
0xa932:	je	0xa971


0xa934:	add	r8, 1
0xa938:	add	rbx, 1
0xa93c:	mov	rcx, qword ptr [rsp + 0x18]
0xa941:	mov	qword ptr [r15 + 0xe8], r8
0xa948:	cmp	rbx, qword ptr [r12]
0xa94c:	mov	qword ptr [rax + 8], rbp
0xa950:	mov	qword ptr [rax], rcx
0xa953:	jl	0xa8be


0xa00f:	test	rax, rax
0xa012:	mov	r14, rax
0xa015:	je	0xa156


0xa156:	mov	rax, qword ptr [rsp + 0x18]
0xa15b:	xor	r14d, r14d
0xa15e:	mov	dword ptr [rax], 0xc
0xa164:	jmp	0x9fec


0xa01b:	lea	rax, [rax + 8]
0xa01f:	mov	rsi, rbp
0xa022:	mov	rdi, rax
0xa025:	mov	rbx, rax
0xa028:	call	0x9d50


0xa02d:	test	eax, eax
0xa02f:	jne	0xa1ed


0xa035:	movzx	eax, byte ptr [r14 + 0x68]
0xa03a:	movzx	edx, byte ptr [rsp + 4]
0xa03f:	mov	qword ptr [r14 + 0x50], rbx
0xa043:	and	edx, 0xf
0xa046:	and	eax, 0xfffffff0
0xa049:	or	eax, edx
0xa04b:	cmp	qword ptr [rbp + 8], 0
0xa050:	mov	byte ptr [r14 + 0x68], al
0xa054:	jle	0xa138


0xa1ed:	mov	rdi, r14
0xa1f0:	call	0x19d0


0xa138:	mov	rdx, r12
0xa13b:	mov	rsi, r14
0xa13e:	mov	rdi, r13
0xa141:	call	0x77e0


0xa05a:	lea	rcx, [r14 + 0x18]
0xa05e:	xor	r15d, r15d
0xa061:	mov	qword ptr [rsp + 0x10], r12
0xa066:	xor	r10d, r10d
0xa069:	mov	r12, r13
0xa06c:	mov	r13, r15
0xa06f:	mov	qword ptr [rsp + 8], rcx
0xa074:	mov	r15, rbx
0xa077:	nop	word ptr [rax + rax]
0xa080:	mov	rax, qword ptr [rbp + 0x10]
0xa084:	mov	rax, qword ptr [rax + r13*8]
0xa088:	shl	rax, 4
0xa08c:	add	rax, qword ptr [r12]
0xa090:	movzx	esi, byte ptr [rax + 8]
0xa094:	mov	ebx, dword ptr [rax + 8]
0xa097:	shr	ebx, 8
0xa09a:	and	bx, 0x3ff
0xa09f:	cmp	esi, 1
0xa0a2:	movzx	edi, bx
0xa0a5:	jne	0xa0ab


0xa0a7:	test	edi, edi
0xa0a9:	je	0xa122


0xa0ab:	movzx	edx, byte ptr [r14 + 0x68]
0xa0b0:	movzx	eax, byte ptr [rax + 0xa]
0xa0b4:	mov	r9d, edx
0xa0b7:	shr	al, 4
0xa0ba:	and	edx, 0xffffffdf
0xa0bd:	shr	r9b, 5
0xa0c1:	or	eax, r9d
0xa0c4:	and	eax, 1
0xa0c7:	shl	eax, 5
0xa0ca:	or	eax, edx
0xa0cc:	cmp	esi, 2
0xa0cf:	mov	byte ptr [r14 + 0x68], al
0xa0d3:	je	0xa1a0


0xa122:	add	r13, 1
0xa126:	cmp	r13, qword ptr [rbp + 8]
0xa12a:	jl	0xa080


0xa1a0:	or	eax, 0x10
0xa1a3:	mov	byte ptr [r14 + 0x68], al
0xa1a7:	jmp	0xa0e5


0xa0d9:	cmp	esi, 4
0xa0dc:	jne	0xa0e5


0xa080:	mov	rax, qword ptr [rbp + 0x10]
0xa084:	mov	rax, qword ptr [rax + r13*8]
0xa088:	shl	rax, 4
0xa08c:	add	rax, qword ptr [r12]
0xa090:	movzx	esi, byte ptr [rax + 8]
0xa094:	mov	ebx, dword ptr [rax + 8]
0xa097:	shr	ebx, 8
0xa09a:	and	bx, 0x3ff
0xa09f:	cmp	esi, 1
0xa0a2:	movzx	edi, bx
0xa0a5:	jne	0xa0ab


0xa130:	mov	r13, r12
0xa133:	mov	r12, qword ptr [rsp + 0x10]
0xa138:	mov	rdx, r12
0xa13b:	mov	rsi, r14
0xa13e:	mov	rdi, r13
0xa141:	call	0x77e0


0xa0e5:	test	edi, edi
0xa0e7:	je	0xa122


0xa0de:	or	eax, 0x40
0xa0e1:	mov	byte ptr [r14 + 0x68], al
0xa0e5:	test	edi, edi
0xa0e7:	je	0xa122


0xa0e9:	cmp	r15, qword ptr [r14 + 0x50]
0xa0ed:	je	0xa1b0


0xa1b0:	mov	edi, 0x18
0xa1b5:	call	0x1c20


0xa0f3:	test	bl, 1
0xa0f6:	je	0xa170


0xa170:	test	bl, 2
0xa173:	je	0xa17c


0xa0f8:	test	byte ptr [rsp + 4], 1
0xa0fd:	je	0xa108


0xa17c:	test	bl, 0x10
0xa17f:	je	0xa188


0xa175:	test	byte ptr [rsp + 4], 1
0xa17a:	jne	0xa108


0xa108:	mov	rdx, r13
0xa10b:	sub	rdx, r10
0xa10e:	js	0xa11e


0xa0ff:	test	bl, 2
0xa102:	je	0xa17c


0xa188:	and	ebx, 0x40
0xa18b:	je	0xa122


0xa181:	test	byte ptr [rsp + 4], 2
0xa186:	je	0xa108


0xa11e:	add	r10, 1
0xa122:	add	r13, 1
0xa126:	cmp	r13, qword ptr [rbp + 8]
0xa12a:	jl	0xa080


0xa110:	mov	rsi, qword ptr [rsp + 8]
0xa115:	lea	rdi, [r14 + 0x10]
0xa119:	call	0x8d70


0xa18d:	test	byte ptr [rsp + 4], 4
0xa192:	jne	0xa122


0xa194:	jmp	0xa108


0xa1f5:	jmp	0xa156


0xa2a5:	test	rax, rax
0xa2a8:	mov	rbx, rax
0xa2ab:	je	0xa3d8


0xa3d8:	mov	dword ptr [r13], 0xc
0xa3e0:	xor	ebx, ebx
0xa3e2:	jmp	0xa38f


0xa2b1:	lea	r15, [rax + 8]
0xa2b5:	mov	rsi, r14
0xa2b8:	mov	rdi, r15
0xa2bb:	call	0x9d50


0xa2c0:	test	eax, eax
0xa2c2:	jne	0xa3d0


0xa2c8:	mov	rax, qword ptr [r14 + 8]
0xa2cc:	mov	qword ptr [rbx + 0x50], r15
0xa2d0:	test	rax, rax
0xa2d3:	jle	0xa37d


0xa3d0:	mov	rdi, rbx
0xa3d3:	call	0x19d0


0xa37d:	mov	rdx, rbp
0xa380:	mov	rsi, rbx
0xa383:	mov	rdi, r12
0xa386:	call	0x77e0


0xa2d9:	mov	rsi, qword ptr [r14 + 0x10]
0xa2dd:	mov	r8, qword ptr [r12]
0xa2e1:	lea	r9, [rsi + rax*8]
0xa2e5:	jmp	0xa334


0xa334:	mov	rax, qword ptr [rsi]
0xa337:	shl	rax, 4
0xa33b:	add	rax, r8
0xa33e:	movzx	edi, byte ptr [rax + 8]
0xa342:	cmp	edi, 1
0xa345:	jne	0xa2f0


0xa347:	test	dword ptr [rax + 8], 0x3ff00
0xa34e:	je	0xa32b


0xa2f0:	movzx	ecx, byte ptr [rbx + 0x68]
0xa2f4:	movzx	edx, byte ptr [rax + 0xa]
0xa2f8:	mov	r10d, ecx
0xa2fb:	shr	dl, 4
0xa2fe:	and	ecx, 0xffffffdf
0xa301:	shr	r10b, 5
0xa305:	or	edx, r10d
0xa308:	and	edx, 1
0xa30b:	shl	edx, 5
0xa30e:	or	edx, ecx
0xa310:	cmp	edi, 2
0xa313:	mov	byte ptr [rbx + 0x68], dl
0xa316:	je	0xa3a8


0xa32b:	add	rsi, 8
0xa32f:	cmp	r9, rsi
0xa332:	je	0xa37d


0xa350:	movzx	edx, byte ptr [rbx + 0x68]
0xa354:	movzx	eax, byte ptr [rax + 0xa]
0xa358:	mov	ecx, edx
0xa35a:	shr	al, 4
0xa35d:	and	edx, 0xffffffdf
0xa360:	shr	cl, 5
0xa363:	or	eax, ecx
0xa365:	and	eax, 1
0xa368:	shl	eax, 5
0xa36b:	or	eax, edx
0xa36d:	mov	byte ptr [rbx + 0x68], al
0xa370:	add	rsi, 8
0xa374:	or	byte ptr [rbx + 0x68], 0x80
0xa378:	cmp	r9, rsi
0xa37b:	jne	0xa334


0xa3a8:	or	edx, 0x10
0xa3ab:	mov	byte ptr [rbx + 0x68], dl
0xa3ae:	jmp	0xa32b


0xa31c:	cmp	edi, 4
0xa31f:	jne	0xa3b8


0xa325:	or	edx, 0x40
0xa328:	mov	byte ptr [rbx + 0x68], dl
0xa32b:	add	rsi, 8
0xa32f:	cmp	r9, rsi
0xa332:	je	0xa37d


0xa3b8:	cmp	edi, 0xc
0xa3bb:	je	0xa370


0xa370:	add	rsi, 8
0xa374:	or	byte ptr [rbx + 0x68], 0x80
0xa378:	cmp	r9, rsi
0xa37b:	jne	0xa334


0xa3bd:	test	dword ptr [rax + 8], 0x3ff00
0xa3c4:	je	0xa32b


0xa3ca:	jmp	0xa370


0x6faf:	test	rax, rax
0x6fb2:	je	0x6fb9


0x6fb4:	add	rsp, 8
0x6fb8:	ret	


0xcc4b:	test	rax, rax
0xcc4e:	je	0xce10


0xce10:	mov	rax, qword ptr [rsp + 8]
0xce15:	xor	r14d, r14d
0xce18:	mov	dword ptr [rax], 0xc
0xce1e:	jmp	0xcdc2


0xcc54:	mov	esi, 1
0xcc59:	mov	edi, 0x50
0xcc5e:	mov	rbx, rax
0xcc61:	call	0x1bc0


0xcdc2:	mov	rdi, qword ptr [rsp + 0x48]
0xcdc7:	xor	rdi, qword ptr fs:[0x28]
0xcdd0:	mov	rax, r14
0xcdd3:	jne	0xce65


0xcdd9:	add	rsp, 0x58
0xcddd:	pop	rbx
0xcdde:	pop	rbp
0xcddf:	pop	r12
0xcde1:	pop	r13
0xcde3:	pop	r14
0xcde5:	pop	r15
0xcde7:	ret	


0xce65:	call	0x1ad0


0xcc66:	test	rax, rax
0xcc69:	mov	r15, rax
0xcc6c:	je	0xce20


0xce20:	mov	rdi, rbx
0xce23:	xor	r14d, r14d
0xce26:	call	0x19d0


0xcc72:	movzx	eax, byte ptr [rax + 0x20]
0xcc76:	sub	rsp, 8
0xcc7a:	mov	edx, r12d
0xcc7d:	push	0
0xcc7f:	and	edx, 1
0xcc82:	mov	rdi, qword ptr [rsp + 0x10]
0xcc87:	lea	rcx, [r15 + 0x48]
0xcc8b:	mov	r9, r14
0xcc8e:	mov	rsi, rbx
0xcc91:	lea	r8, [rsp + 0x28]
0xcc96:	and	eax, 0xfffffffe
0xcc99:	or	eax, edx
0xcc9b:	lea	rdx, [r15 + 0x18]
0xcc9f:	mov	byte ptr [r15 + 0x20], al
0xcca3:	call	0xc3f0


0xcca8:	test	eax, eax
0xccaa:	pop	rdx
0xccab:	pop	rcx
0xccac:	jne	0xce40


0xccb2:	movsx	rcx, byte ptr [r13]
0xccb7:	mov	esi, 1
0xccbc:	test	cl, cl
0xccbe:	je	0xccfa


0xce40:	mov	rdi, rbx
0xce43:	mov	dword ptr [rsp], eax
0xce46:	xor	r14d, r14d
0xce49:	call	0x19d0


0xccfa:	test	r12b, r12b
0xccfd:	je	0xcd12


0xccc0:	lea	rax, [rcx + 0x3f]
0xccc4:	test	rcx, rcx
0xccc7:	mov	rdx, rcx
0xccca:	cmovns	rax, rcx
0xccce:	sar	rdx, 0x3f
0xccd2:	add	r13, 1
0xccd6:	shr	rdx, 0x3a
0xccda:	sar	rax, 6
0xccde:	add	rcx, rdx
0xcce1:	and	ecx, 0x3f
0xcce4:	sub	rcx, rdx
0xcce7:	mov	rdx, rsi
0xccea:	shl	rdx, cl
0xcced:	movsx	rcx, byte ptr [r13]
0xccf2:	or	qword ptr [rbx + rax*8], rdx
0xccf6:	test	cl, cl
0xccf8:	jne	0xccc0


0xcd12:	cmp	dword ptr [rbp + 0xb4], 1
0xcd19:	jle	0xcd33


0xccff:	lea	rdx, [rbx + 0x20]
0xcd03:	mov	rax, rbx
0xcd06:	not	qword ptr [rax]
0xcd09:	add	rax, 8
0xcd0d:	cmp	rdx, rax
0xcd10:	jne	0xcd06


0xcd33:	lea	r9, [rsp + 0x20]
0xcd38:	lea	r12, [rbp + 0x70]
0xcd3c:	lea	r13, [rbp + 0x80]
0xcd43:	xor	ecx, ecx
0xcd45:	xor	edx, edx
0xcd47:	mov	byte ptr [rsp + 0x28], 3
0xcd4c:	mov	r8, r9
0xcd4f:	mov	rsi, r13
0xcd52:	mov	rdi, r12
0xcd55:	mov	qword ptr [rsp + 0x20], rbx
0xcd5a:	mov	qword ptr [rsp], r9
0xcd5e:	call	0x98b0


0xcd1b:	mov	rcx, qword ptr [rbp + 0x78]
0xcd1f:	xor	eax, eax
0xcd21:	mov	rdx, qword ptr [rcx + rax]
0xcd25:	and	qword ptr [rbx + rax], rdx
0xcd29:	add	rax, 8
0xcd2d:	cmp	rax, 0x20
0xcd31:	jne	0xcd21


0xcd06:	not	qword ptr [rax]
0xcd09:	add	rax, 8
0xcd0d:	cmp	rdx, rax
0xcd10:	jne	0xcd06


0xcd21:	mov	rdx, qword ptr [rcx + rax]
0xcd25:	and	qword ptr [rbx + rax], rdx
0xcd29:	add	rax, 8
0xcd2d:	cmp	rax, 0x20
0xcd31:	jne	0xcd21


0xcd63:	test	rax, rax
0xcd66:	mov	r14, rax
0xcd69:	je	0xce00


0xce00:	mov	rdi, rbx
0xce03:	call	0x19d0


0xcd6f:	cmp	dword ptr [rbp + 0xb4], 1
0xcd76:	jle	0xcdf0


0xcdf0:	mov	rdi, r15
0xcdf3:	call	0x8310


0xcd78:	or	byte ptr [rbp + 0xb0], 2
0xcd7f:	mov	r9, qword ptr [rsp]
0xcd83:	xor	ecx, ecx
0xcd85:	xor	edx, edx
0xcd87:	mov	rsi, r13
0xcd8a:	mov	rdi, r12
0xcd8d:	mov	byte ptr [rsp + 0x28], 6
0xcd92:	mov	qword ptr [rsp + 0x20], r15
0xcd97:	mov	r8, r9
0xcd9a:	call	0x98b0


0xcd9f:	test	rax, rax
0xcda2:	je	0xce00


0xcda4:	lea	r8, [rsp + 0x30]
0xcda9:	mov	rdx, r14
0xcdac:	mov	rcx, rax
0xcdaf:	mov	rsi, r13
0xcdb2:	mov	rdi, r12
0xcdb5:	mov	byte ptr [rsp + 0x38], 0xa
0xcdba:	call	0x98b0


0xcdbf:	mov	r14, rax
0xcdc2:	mov	rdi, qword ptr [rsp + 0x48]
0xcdc7:	xor	rdi, qword ptr fs:[0x28]
0xcdd0:	mov	rax, r14
0xcdd3:	jne	0xce65


0xce08:	mov	rdi, r15
0xce0b:	call	0x8310


0xce4e:	mov	rdi, r15
0xce51:	call	0x8310


0xce2b:	mov	rax, qword ptr [rsp + 8]
0xce30:	mov	dword ptr [rax], 0xc
0xce36:	jmp	0xcdc2


0x148da:	test	eax, eax
0x148dc:	je	0x14908


0x14908:	xor	eax, eax
0x1490a:	add	rsp, 8
0x1490e:	ret	


0x148de:	lea	rdx, [rip + 0x27db]
0x148e5:	cdqe	
0x148e7:	lea	rsi, [rip + 0x2872]
0x148ee:	xor	edi, edi
0x148f0:	add	rsi, qword ptr [rdx + rax*8]
0x148f4:	mov	edx, 5
0x148f9:	add	rsp, 8
0x148fd:	jmp	0x1a90


0x2854:	test	rax, rax
0x2857:	jne	0x2bba


0x285d:	mov	r12, qword ptr [rbx + 8]
0x2861:	and	byte ptr [rsp + 0x68], 0x7f
0x2866:	mov	rdi, r12
0x2869:	call	0x1ab0


0x2bba:	lea	rdx, [rip + 0x135c2]
0x2bc1:	mov	rcx, rax
0x2bc4:	xor	esi, esi
0x2bc6:	mov	edi, 2
0x2bcb:	xor	eax, eax
0x2bcd:	call	0x1d00


0x286e:	lea	r8, [rsp + 0x10]
0x2873:	xor	ecx, ecx
0x2875:	mov	rdx, rax
0x2878:	mov	rsi, r12
0x287b:	mov	rdi, rbp
0x287e:	call	0x15220


0x2883:	test	rax, rax
0x2886:	mov	r15, rax
0x2889:	js	0x2958


0x2958:	cmp	rax, -1
0x295c:	jne	0x2bf6


0x288f:	mov	r14, qword ptr [rsp + 0x60]
0x2894:	test	r14, r14
0x2897:	je	0x2920


0x2962:	cmp	qword ptr [rsp + 0x60], 0
0x2968:	je	0x2980


0x2bf6:	lea	rsi, [rip + 0x132db]
0x2bfd:	xor	edi, edi
0x2bff:	mov	edx, 5
0x2c04:	call	0x1a90


0x2920:	call	0x1aa0


0x289d:	mov	rax, qword ptr [rsp + 0x20]
0x28a2:	mov	rdx, qword ptr [rbx + 8]
0x28a6:	mov	rax, qword ptr [rax + 8]
0x28aa:	mov	byte ptr [rdx + rax], 0
0x28ae:	mov	rax, qword ptr [rsp + 0x18]
0x28b3:	mov	rdi, qword ptr [rax + 8]
0x28b7:	add	rdi, qword ptr [rbx + 8]
0x28bb:	call	0x2160


0x2980:	mov	edi, 0x18
0x2985:	call	0x6dc0


0x296a:	lea	rdi, [rip + 0x13df0]
0x2971:	call	0x2160


0x2925:	cmp	rax, 1
0x2929:	mov	r12, r15
0x292c:	jne	0x29a8


0x292e:	mov	edi, 0x18
0x2933:	call	0x6dc0


0x29a8:	lea	r13, [rsp + 0x70]
0x29ad:	mov	r12, qword ptr [rbx + 8]
0x29b1:	mov	byte ptr [rsp + 0x70], 0
0x29b6:	mov	qword ptr [rsp + 0x74], 0
0x29bf:	mov	byte ptr [rsp + 0x7c], 0
0x29c4:	lea	rax, [r13 + 4]
0x29c8:	mov	qword ptr [rsp + 0x80], r12
0x29d0:	mov	qword ptr [rsp + 8], rax
0x29d5:	jmp	0x2a68


0x2a68:	cmp	byte ptr [rsp + 0x70], 0
0x2a6d:	je	0x29e0


0x29e0:	mov	rbx, qword ptr [rsp + 0x80]
0x29e8:	lea	rcx, [rip + 0x137b1]
0x29ef:	movzx	edx, byte ptr [rbx]
0x29f2:	mov	eax, edx
0x29f4:	shr	al, 5
0x29f7:	and	eax, 7
0x29fa:	mov	eax, dword ptr [rcx + rax*4]
0x29fd:	bt	eax, edx
0x2a00:	jae	0x2b18


0x2a73:	call	0x1aa0


0x2a06:	mov	qword ptr [rsp + 0x88], 1
0x2a12:	movsx	eax, byte ptr [rbx]
0x2a15:	mov	byte ptr [rsp + 0x90], 1
0x2a1d:	mov	byte ptr [rsp + 0x7c], 1
0x2a22:	mov	dword ptr [rsp + 0x94], eax
0x2a29:	mov	eax, dword ptr [rsp + 0x94]
0x2a30:	test	eax, eax
0x2a32:	je	0x2b70


0x2b18:	mov	rdi, qword ptr [rsp + 8]
0x2b1d:	call	0x1d90


0x2b70:	mov	r12, r14
0x2b73:	jmp	0x292e


0x2a38:	mov	rbx, qword ptr [rsp + 0x80]
0x2a40:	mov	rax, rbx
0x2a43:	sub	rax, r12
0x2a46:	cmp	rax, r15
0x2a49:	jae	0x2b70


0x2a4f:	add	rbx, qword ptr [rsp + 0x88]
0x2a57:	add	r14, 1
0x2a5b:	mov	byte ptr [rsp + 0x7c], 0
0x2a60:	mov	qword ptr [rsp + 0x80], rbx
0x2a68:	cmp	byte ptr [rsp + 0x70], 0
0x2a6d:	je	0x29e0


0x2b22:	test	eax, eax
0x2b24:	je	0x2bd7


0x2bd7:	lea	rcx, [rip + 0x13582]
0x2bde:	lea	rsi, [rip + 0x12a2b]
0x2be5:	lea	rdi, [rip + 0x1344b]
0x2bec:	mov	edx, 0x96
0x2bf1:	call	0x1b50


0x2b2a:	mov	byte ptr [rsp + 0x70], 1
0x2b2f:	jmp	0x2a73


0x2a78:	mov	rbx, qword ptr [rsp + 0x80]
0x2a80:	mov	rsi, rax
0x2a83:	mov	rdi, rbx
0x2a86:	call	0x64b0


0x2a8b:	lea	rcx, [r13 + 4]
0x2a8f:	lea	rdi, [r13 + 0x24]
0x2a93:	mov	rdx, rax
0x2a96:	mov	rsi, rbx
0x2a99:	call	0x7050


0x2a9e:	cmp	rax, -1
0x2aa2:	mov	qword ptr [rsp + 0x88], rax
0x2aaa:	je	0x2b38


0x2b38:	mov	rbx, qword ptr [rsp + 0x80]
0x2b40:	mov	qword ptr [rsp + 0x88], 1
0x2b4c:	mov	byte ptr [rsp + 0x90], 0
0x2b54:	mov	byte ptr [rsp + 0x7c], 1
0x2b59:	mov	rax, rbx
0x2b5c:	sub	rax, r12
0x2b5f:	cmp	rax, r15
0x2b62:	jb	0x2a4f


0x2ab0:	cmp	rax, -2
0x2ab4:	je	0x2b80


0x2b80:	mov	rbx, qword ptr [rsp + 0x80]
0x2b88:	mov	rdi, rbx
0x2b8b:	call	0x1ab0


0x2aba:	test	rax, rax
0x2abd:	jne	0x2aeb


0x2abf:	mov	rbx, qword ptr [rsp + 0x80]
0x2ac7:	mov	qword ptr [rsp + 0x88], 1
0x2ad3:	cmp	byte ptr [rbx], 0
0x2ad6:	jne	0x2c2b


0x2aeb:	lea	rdi, [r13 + 4]
0x2aef:	mov	byte ptr [rsp + 0x90], 1
0x2af7:	call	0x1d90


0x2adc:	mov	edx, dword ptr [rsp + 0x94]
0x2ae3:	test	edx, edx
0x2ae5:	jne	0x2c26


0x2c2b:	lea	rcx, [rip + 0x1352e]
0x2c32:	lea	rsi, [rip + 0x129d7]
0x2c39:	lea	rdi, [rip + 0x1340e]
0x2c40:	mov	edx, 0xb2
0x2c45:	call	0x1b50


0x2c26:	call	0x1de0


0x2afc:	test	eax, eax
0x2afe:	je	0x2bb0


0x2bb0:	mov	byte ptr [rsp + 0x7c], 1
0x2bb5:	jmp	0x2a29


0x2b04:	mov	byte ptr [rsp + 0x70], 0
0x2b09:	mov	byte ptr [rsp + 0x7c], 1
0x2b0e:	jmp	0x2a29


0x2a29:	mov	eax, dword ptr [rsp + 0x94]
0x2a30:	test	eax, eax
0x2a32:	je	0x2b70


0x2b90:	mov	byte ptr [rsp + 0x90], 0
0x2b98:	mov	qword ptr [rsp + 0x88], rax
0x2ba0:	mov	byte ptr [rsp + 0x7c], 1
0x2ba5:	jmp	0x2a40


0x2a40:	mov	rax, rbx
0x2a43:	sub	rax, r12
0x2a46:	cmp	rax, r15
0x2a49:	jae	0x2b70


0x2c09:	cmp	r15, -2
0x2c0d:	mov	rbx, rax
0x2c10:	mov	esi, 0x4b
0x2c15:	je	0x2c4a


0x2c4a:	call	0x19f0


0x2c17:	mov	rdx, rbx
0x2c1a:	mov	edi, 3
0x2c1f:	xor	eax, eax
0x2c21:	call	0x1d00


0x2c4f:	mov	esi, dword ptr [rax]
0x2c51:	jmp	0x2c17


0xa1ba:	test	rax, rax
0xa1bd:	mov	qword ptr [r14 + 0x50], rax
0xa1c1:	je	0xa14e


0xa14e:	mov	rdi, r14
0xa151:	call	0x8880


0xa1c3:	mov	rsi, rbp
0xa1c6:	mov	rdi, rax
0xa1c9:	call	0x9d50


0xa1ce:	test	eax, eax
0xa1d0:	jne	0xa156


0xa1d2:	or	byte ptr [r14 + 0x68], 0x80
0xa1d7:	xor	r10d, r10d
0xa1da:	jmp	0xa0f3


0xe213:	test	rax, rax
0xe216:	mov	qword ptr [r15 + 0x10], rax
0xe21a:	je	0xe242


0xe242:	mov	rdi, qword ptr [rbp - 0x60]
0xe246:	call	0x19d0


0xe21c:	mov	rdx, r14
0xe21f:	mov	rsi, r13
0xe222:	mov	rdi, rax
0xe225:	call	0x1be0


0xe22a:	mov	rsi, qword ptr [rbp - 0xa8]
0xe231:	lea	rdi, [r15 + 0x18]
0xe235:	call	0x9d50


0xe23a:	test	eax, eax
0xe23c:	je	0xdf4c


0xe24b:	cmp	byte ptr [rbp - 0xc9], 0
0xe252:	jne	0xe5eb


0xff4b:	test	rax, rax
0xff4e:	mov	r12, rax
0xff51:	je	0x10680


0xff57:	cmp	qword ptr [r15 + 0x98], 0
0xff5f:	je	0x107f5


0x107f5:	pxor	xmm0, xmm0
0x107f9:	mov	qword ptr [rsp + 0xe0], rax
0x10801:	mov	rdi, qword ptr [rsp]
0x10805:	mov	rax, qword ptr [rsp + 0x20]
0x1080a:	lea	rbx, [rsp + 0xe0]
0x10812:	mov	qword ptr [rsp + 0xe8], 0
0x1081e:	mov	qword ptr [rsp + 0xf0], r13
0x10826:	mov	rsi, rbx
0x10829:	mov	qword ptr [rsp + 0x110], 0
0x10835:	movaps	xmmword ptr [rsp + 0x100], xmm0
0x1083d:	mov	qword ptr [rsp + 0xf8], rax
0x10845:	call	0xf2d0


0xff65:	mov	rdi, rbx
0xff68:	call	0x1c20


0xff6d:	test	rax, rax
0xff70:	mov	rbp, rax
0xff73:	je	0x10678


0x10678:	mov	rdi, r12
0x1067b:	call	0x19d0


0xff79:	mov	r14, qword ptr [rsp + 0x20]
0xff7e:	lea	rbx, [rsp + 0xe0]
0xff86:	mov	qword ptr [rsp + 0x10], r15
0xff8b:	mov	qword ptr [rsp + 0x18], rax
0xff90:	mov	rax, qword ptr [rsp + 8]
0xff95:	xor	esi, esi
0xff97:	mov	rdi, rbp
0xff9a:	lea	rdx, [rax*8]
0xffa2:	call	0x1b60


0xffa7:	pxor	xmm0, xmm0
0xffab:	mov	qword ptr [rsp + 0xe0], r12
0xffb3:	mov	qword ptr [rsp + 0xe8], rbp
0xffbb:	mov	qword ptr [rsp + 0xf0], r13
0xffc3:	mov	rsi, rbx
0xffc6:	mov	qword ptr [rsp + 0xf8], r14
0xffce:	mov	rdi, qword ptr [rsp]
0xffd2:	movaps	xmmword ptr [rbx + 0x20], xmm0
0xffd6:	mov	qword ptr [rbx + 0x30], 0
0xffde:	call	0xf2d0


0xdac5:	test	rax, rax
0xdac8:	mov	qword ptr [rsp + 0xa0], rax
0xdad0:	je	0xdd1b


0xdad6:	mov	qword ptr [rax], rbx
0xdad9:	mov	ecx, dword ptr [rsp + 0x110]
0xdae0:	lea	rbx, [rsp + 0x90]
0xdae8:	mov	rdx, qword ptr [rsp + 0x48]
0xdaed:	mov	rdi, qword ptr [rsp + 0x30]
0xdaf2:	mov	r12, rbp
0xdaf5:	mov	rsi, rbx
0xdaf8:	mov	dword ptr [rsp + 0x88], 0
0xdb03:	call	0x95a0


0xa75d:	test	rax, rax
0xa760:	mov	qword ptr [rsp + 0x60], rax
0xa765:	je	0xa85d


0xa85d:	mov	qword ptr [rsp + 0x58], 0
0xa866:	mov	qword ptr [rsp + 0x50], 0
0xa86f:	mov	eax, 0xc
0xa874:	jmp	0xa770


0xa76b:	mov	qword ptr [rax], r14
0xa76e:	xor	eax, eax
0xa770:	mov	r15, qword ptr [rsp + 0x10]
0xa775:	mov	rdx, qword ptr [rsp + 0x20]
0xa77a:	mov	rdi, r13
0xa77d:	mov	ecx, dword ptr [rsp + 0x2c]
0xa781:	mov	dword ptr [rsp + 0x4c], eax
0xa785:	mov	rsi, r15
0xa788:	call	0x95a0


0xa770:	mov	r15, qword ptr [rsp + 0x10]
0xa775:	mov	rdx, qword ptr [rsp + 0x20]
0xa77a:	mov	rdi, r13
0xa77d:	mov	ecx, dword ptr [rsp + 0x2c]
0xa781:	mov	dword ptr [rsp + 0x4c], eax
0xa785:	mov	rsi, r15
0xa788:	call	0x95a0


0xa7f1:	test	rax, rax
0xa7f4:	mov	qword ptr [rsp + 0x60], rax
0xa7f9:	je	0xa83c


0xa7fb:	mov	rdi, qword ptr [rsp + 8]
0xa800:	mov	dword ptr [rsp + 0x4c], 0
0xa808:	mov	r10, qword ptr [rsp + 0x18]
0xa80d:	mov	qword ptr [rax], rdi
0xa810:	jmp	0xa69e


0xa69e:	mov	rdx, qword ptr [rsp + 0x10]
0xa6a3:	mov	rdi, qword ptr [rsp + 0x38]
0xa6a8:	mov	rsi, r13
0xa6ab:	mov	qword ptr [rsp + 8], r10
0xa6b0:	call	0xa200


0xf9d1:	test	rax, rax
0xf9d4:	mov	rdi, rax
0xf9d7:	mov	qword ptr [rsp + 0x1d8], rax
0xf9df:	je	0x106d0


0xf94e:	mov	rdi, r14
0xf951:	mov	r15, rax
0xf954:	mov	qword ptr [rsp + 0x1f8], rax
0xf95c:	shl	rdi, 4
0xf960:	call	0x1c20


0xf965:	test	rax, rax
0xf968:	mov	qword ptr [rsp + 0x218], rax
0xf970:	je	0x10680


0xf976:	test	r15, r15
0xf979:	je	0x10680


0x1105e:	mov	rdx, qword ptr [rsp + 0x20]
0x11063:	test	rax, rax
0x11066:	mov	qword ptr [rdx + 0x48], rax
0x1106a:	je	0x110b3


0x110b3:	mov	eax, 0xc
0x110b8:	jmp	0x10dd8


0x1106c:	cmp	qword ptr [rbx + 8], 0
0x11071:	mov	dword ptr [rsp + 0x60], 0
0x11079:	jg	0x1108e


0x1107b:	jmp	0x10e3c


0x1108e:	mov	rax, qword ptr [rbx + 0x10]
0x11092:	mov	rdi, r14
0x11095:	mov	rax, qword ptr [rax + r15*8]
0x11099:	lea	rdx, [rax + rax*2]
0x1109d:	mov	rax, qword ptr [r12 + 0x38]
0x110a2:	lea	rsi, [rax + rdx*8]
0x110a6:	call	0x9110


0x110ab:	test	eax, eax
0x110ad:	mov	dword ptr [rsp + 0x60], eax
0x110b1:	je	0x11080


0x11080:	add	r15, 1
0x11084:	cmp	r15, qword ptr [rbx + 8]
0x11088:	jge	0x10e3c


0x14ac8:	test	rax, rax
0x14acb:	mov	rbp, rax
0x14ace:	je	0x14d60


0x14d60:	mov	r12, -2
0x14d67:	jmp	0x14b22


0x14ad4:	sub	rsp, 8
0x14ad8:	mov	rcx, rbx
0x14adb:	mov	rdi, r15
0x14ade:	mov	eax, dword ptr [rsp + 0x34]
0x14ae2:	push	rax
0x14ae3:	push	rbp
0x14ae4:	push	r14
0x14ae6:	mov	r9, qword ptr [rsp + 0x40]
0x14aeb:	mov	r8, qword ptr [rsp + 0x28]
0x14af0:	mov	rdx, qword ptr [rsp + 0x38]
0x14af5:	mov	rsi, qword ptr [rsp + 0x30]
0x14afa:	call	0xf610


0x14aff:	add	rsp, 0x20
0x14b03:	test	eax, eax
0x14b05:	je	0x14b38


0x14b38:	test	r12, r12
0x14b3b:	je	0x14c08


0x14b07:	cmp	eax, 1
0x14b0a:	mov	r12, -1
0x14b11:	je	0x14b1a


0x14c08:	cmp	byte ptr [rsp + 0x28], 0
0x14c0d:	mov	r12, qword ptr [rbp]
0x14c11:	je	0x14b1a


0x14b41:	movzx	eax, byte ptr [r15 + 0x38]
0x14b46:	lea	rdx, [r13 + 1]
0x14b4a:	shr	al, 1
0x14b4c:	and	eax, 3
0x14b4f:	je	0x14cc0


0x14b1a:	mov	rdi, rbp
0x14b1d:	call	0x19d0


0x14b13:	mov	r12, -2
0x14b1a:	mov	rdi, rbp
0x14b1d:	call	0x19d0


0x14c17:	cmp	r12, rbx
0x14c1a:	jne	0x14e12


0x14cc0:	lea	r14, [rdx*8]
0x14cc8:	mov	qword ptr [rsp + 8], rdx
0x14ccd:	mov	rdi, r14
0x14cd0:	call	0x1c20


0x14b55:	cmp	eax, 1
0x14b58:	je	0x14d70


0x14c20:	mov	r12, qword ptr [rbp + 8]
0x14c24:	sub	r12, rbx
0x14c27:	jmp	0x14b1a


0x14e12:	lea	rcx, [rip + 0x2217]
0x14e19:	lea	rsi, [rip + 0x1c60]
0x14e20:	lea	rdi, [rip + 0x1d7e]
0x14e27:	mov	edx, 0x1be
0x14e2c:	call	0x1b50


0x14d70:	cmp	qword ptr [r12], rdx
0x14d74:	mov	r9d, 1
0x14d7a:	jae	0x14b77


0x14b5e:	cmp	eax, 2
0x14b61:	jne	0x14e50


0x14d80:	lea	rcx, [rdx*8]
0x14d88:	mov	rdi, qword ptr [r12 + 8]
0x14d8d:	mov	byte ptr [rsp + 0x18], r9b
0x14d92:	mov	qword ptr [rsp + 0x10], rdx
0x14d97:	mov	rsi, rcx
0x14d9a:	mov	qword ptr [rsp + 8], rcx
0x14d9f:	call	0x1c90


0x14b77:	test	r13, r13
0x14b7a:	jle	0x14de8


0x14b67:	cmp	r14, qword ptr [r12]
0x14b6b:	ja	0x14e31


0x14e50:	lea	rcx, [rip + 0x21c9]
0x14e57:	lea	rsi, [rip + 0x1c22]
0x14e5e:	lea	rdi, [rip + 0x1d0b]
0x14e65:	mov	edx, 0x1f9
0x14e6a:	call	0x1b50


0x14de8:	xor	edx, edx
0x14dea:	xor	r13d, r13d
0x14ded:	jmp	0x14bbb


0x14b80:	mov	r8, qword ptr [r12 + 8]
0x14b85:	mov	rdi, qword ptr [r12 + 0x10]
0x14b8a:	lea	rsi, [r13*8]
0x14b92:	mov	rdx, r13
0x14b95:	xor	eax, eax
0x14b97:	nop	word ptr [rax + rax]
0x14ba0:	mov	rcx, qword ptr [rbp + rax*2]
0x14ba5:	mov	qword ptr [r8 + rax], rcx
0x14ba9:	mov	rcx, qword ptr [rbp + rax*2 + 8]
0x14bae:	mov	qword ptr [rdi + rax], rcx
0x14bb2:	add	rax, 8
0x14bb6:	cmp	rsi, rax
0x14bb9:	jne	0x14ba0


0x14b71:	mov	r9d, 2
0x14b77:	test	r13, r13
0x14b7a:	jle	0x14de8


0x14e31:	lea	rcx, [rip + 0x21e8]
0x14e38:	lea	rsi, [rip + 0x1c41]
0x14e3f:	lea	rdi, [rip + 0x1d47]
0x14e46:	mov	edx, 0x1fb
0x14e4b:	call	0x1b50


0x14bbb:	cmp	qword ptr [r12], rdx
0x14bbf:	jbe	0x14bed


0x14ba0:	mov	rcx, qword ptr [rbp + rax*2]
0x14ba5:	mov	qword ptr [r8 + rax], rcx
0x14ba9:	mov	rcx, qword ptr [rbp + rax*2 + 8]
0x14bae:	mov	qword ptr [rdi + rax], rcx
0x14bb2:	add	rax, 8
0x14bb6:	cmp	rsi, rax
0x14bb9:	jne	0x14ba0


0x14bed:	movzx	eax, byte ptr [r15 + 0x38]
0x14bf2:	lea	r13d, [r9 + r9]
0x14bf6:	and	eax, 0xfffffff9
0x14bf9:	or	eax, r13d
0x14bfc:	test	al, 6
0x14bfe:	mov	byte ptr [r15 + 0x38], al
0x14c02:	je	0x14b13


0x14bc1:	mov	rsi, qword ptr [r12 + 0x10]
0x14bc6:	mov	rcx, qword ptr [r12 + 8]
0x14bcb:	mov	rax, -1
0x14bd2:	nop	word ptr [rax + rax]
0x14bd8:	mov	qword ptr [rsi + rdx*8], rax
0x14bdc:	add	r13, 1
0x14be0:	mov	qword ptr [rcx + rdx*8], rax
0x14be4:	cmp	r13, qword ptr [r12]
0x14be8:	mov	rdx, r13
0x14beb:	jb	0x14bd8


0x14bd8:	mov	qword ptr [rsi + rdx*8], rax
0x14bdc:	add	r13, 1
0x14be0:	mov	qword ptr [rcx + rdx*8], rax
0x14be4:	cmp	r13, qword ptr [r12]
0x14be8:	mov	rdx, r13
0x14beb:	jb	0x14bd8


0x14da4:	test	rax, rax
0x14da7:	mov	r14, rax
0x14daa:	je	0x14dfa


0x14dfa:	xor	r9d, r9d
0x14dfd:	jmp	0x14bed


0x14dac:	mov	rcx, qword ptr [rsp + 8]
0x14db1:	mov	rdi, qword ptr [r12 + 0x10]
0x14db6:	mov	rsi, rcx
0x14db9:	call	0x1c90


0x14dbe:	test	rax, rax
0x14dc1:	mov	rdx, qword ptr [rsp + 0x10]
0x14dc6:	movzx	r9d, byte ptr [rsp + 0x18]
0x14dcc:	je	0x14e02


0x14e02:	mov	rdi, r14
0x14e05:	call	0x19d0


0x14dce:	mov	qword ptr [r12 + 8], r14
0x14dd3:	mov	qword ptr [r12 + 0x10], rax
0x14dd8:	mov	qword ptr [r12], rdx
0x14ddc:	jmp	0x14b77


0x14e0a:	xor	r9d, r9d
0x14e0d:	jmp	0x14bed


0x14cd5:	test	rax, rax
0x14cd8:	mov	qword ptr [r12 + 8], rax
0x14cdd:	mov	rdx, qword ptr [rsp + 8]
0x14ce2:	je	0x14dfa


0x14ce8:	mov	rdi, r14
0x14ceb:	mov	qword ptr [rsp + 8], rdx
0x14cf0:	mov	qword ptr [rsp + 0x10], rax
0x14cf5:	call	0x1c20


0x14cfa:	test	rax, rax
0x14cfd:	mov	qword ptr [r12 + 0x10], rax
0x14d02:	mov	rdx, qword ptr [rsp + 8]
0x14d07:	mov	rcx, qword ptr [rsp + 0x10]
0x14d0c:	je	0x14df2


0x14df2:	mov	rdi, rcx
0x14df5:	call	0x19d0


0x14d12:	mov	qword ptr [r12], rdx
0x14d16:	mov	r9d, 1
0x14d1c:	jmp	0x14b77


0x14f32:	test	rax, rax
0x14f35:	mov	r13, rax
0x14f38:	je	0x14f70


0x14f3a:	mov	rsi, qword ptr [rsp + 8]
0x14f3f:	mov	rdx, rbx
0x14f42:	mov	rdi, rax
0x14f45:	call	0x1be0


0x14f4a:	lea	rdi, [r13 + rbx]
0x14f4f:	mov	rsi, r14
0x14f52:	mov	rdx, rbp
0x14f55:	mov	r14, r13
0x14f58:	call	0x1be0


0x14f5d:	mov	rcx, qword ptr [rsp + 0x10]
0x14f62:	mov	r8d, dword ptr [rsp + 0x1c]
0x14f67:	jmp	0x14ed8


0x9e2f:	test	rax, rax
0x9e32:	mov	qword ptr [r12 + 0x10], rax
0x9e37:	je	0x9f28


0x9f28:	mov	eax, 0xc
0x9f2d:	jmp	0x9eb2


0x9e3d:	mov	r9, qword ptr [rbx + 0x10]
0x9e41:	mov	r8, qword ptr [rbp + 0x10]
0x9e45:	xor	ebx, ebx
0x9e47:	xor	ecx, ecx
0x9e49:	xor	esi, esi
0x9e4b:	jmp	0x9e6e


0x9eb2:	pop	rbx
0x9eb3:	pop	rbp
0x9eb4:	pop	r12
0x9eb6:	pop	r13
0x9eb8:	pop	r14
0x9eba:	ret	


0x9e6e:	mov	rdx, qword ptr [r8 + rsi*8]
0x9e72:	mov	rdi, qword ptr [r9 + rcx*8]
0x9e76:	add	rbx, 1
0x9e7a:	cmp	rdx, rdi
0x9e7d:	jle	0x9e50


0x9e50:	sete	dil
0x9e54:	mov	qword ptr [rax + rbx*8 - 8], rdx
0x9e59:	add	rsi, 1
0x9e5d:	movzx	edi, dil
0x9e61:	add	rcx, rdi
0x9e64:	cmp	r13, rsi
0x9e67:	jle	0x9ed0


0x9e7f:	add	rcx, 1
0x9e83:	mov	qword ptr [rax + rbx*8 - 8], rdi
0x9e88:	jmp	0x9e64


0x9ed0:	cmp	r14, rcx
0x9ed3:	jg	0x9f08


0x9e69:	cmp	r14, rcx
0x9e6c:	jle	0x9ee8


0x9e64:	cmp	r13, rsi
0x9e67:	jle	0x9ed0


0x9ed5:	mov	qword ptr [r12 + 8], rbx
0x9eda:	xor	eax, eax
0x9edc:	pop	rbx
0x9edd:	pop	rbp
0x9ede:	pop	r12
0x9ee0:	pop	r13
0x9ee2:	pop	r14
0x9ee4:	ret	


0x9f08:	sub	r14, rcx
0x9f0b:	lea	rdi, [rax + rbx*8]
0x9f0f:	lea	rsi, [r9 + rcx*8]
0x9f13:	lea	rdx, [r14*8]
0x9f1b:	add	rbx, r14
0x9f1e:	call	0x1be0


0x9ee8:	sub	r13, rsi
0x9eeb:	lea	rdi, [rax + rbx*8]
0x9eef:	lea	rsi, [r8 + rsi*8]
0x9ef3:	lea	rdx, [r13*8]
0x9efb:	add	rbx, r13
0x9efe:	call	0x1be0


0x9f03:	jmp	0x9ed5


0x9f23:	jmp	0x9ed5


0xe512:	test	rax, rax
0xe515:	mov	qword ptr [rbp - 0xc0], rax
0xe51c:	mov	byte ptr [rbp - 0xc9], 1
0xe523:	jne	0xde37


0xe529:	mov	rdi, qword ptr [rbp - 0x88]
0xe530:	test	rdi, rdi
0xe533:	je	0xe4fc


0xde37:	mov	rdx, qword ptr [rbp - 0xb8]
0xde3e:	mov	rdi, qword ptr [rbp - 0xc0]
0xde45:	mov	rsi, r13
0xde48:	call	0x1be0


0xe535:	call	0xc2b0


0x13888:	test	r14, r14
0x1388b:	mov	qword ptr [rbx], rax
0x1388e:	je	0x14575


0x14575:	xor	ebp, ebp
0x14577:	mov	esi, 1
0x1457c:	jmp	0x138ad


0x13894:	mov	esi, 1
0x13899:	nop	dword ptr [rax]
0x138a0:	add	rsi, rsi
0x138a3:	cmp	qword ptr [rsp], rsi
0x138a7:	jae	0x138a0


0x138ad:	mov	edi, 0x18
0x138b2:	call	0x1bc0


0x138a9:	lea	rbp, [rsi - 1]
0x138ad:	mov	edi, 0x18
0x138b2:	call	0x1bc0


0x138a0:	add	rsi, rsi
0x138a3:	cmp	qword ptr [rsp], rsi
0x138a7:	jae	0x138a0


0x138b7:	mov	qword ptr [rbx + 0x88], rbp
0x138be:	mov	qword ptr [rbx + 0x40], rax
0x138c2:	call	0x1aa0


0x138c7:	mov	edi, 0xe
0x138cc:	mov	dword ptr [rbx + 0xb4], eax
0x138d2:	call	0x1c60


0x7701:	test	rax, rax
0x7704:	mov	qword ptr [rbx + 0x10], rax
0x7708:	je	0x7798


0x7798:	mov	qword ptr [rbx + 8], 0
0x77a0:	mov	qword ptr [rbx], 0
0x77a7:	jmp	0x76de


0x770e:	mov	qword ptr [rax], rbp
0x7711:	add	rsp, 8
0x7715:	mov	eax, 1
0x771a:	pop	rbx
0x771b:	pop	rbp
0x771c:	ret	


0x9955:	test	rax, rax
0x9958:	mov	rdi, rax
0x995b:	je	0x998c


0x998c:	xor	eax, eax
0x998e:	jmp	0x992b


0x995d:	mov	rax, qword ptr [rbx]
0x9960:	mov	r10d, 1
0x9966:	mov	qword ptr [rbx], rdi
0x9969:	xor	r9d, r9d
0x996c:	mov	r8, qword ptr [rsp + 0x18]
0x9971:	mov	rcx, qword ptr [rsp + 0x10]
0x9976:	mov	rdx, qword ptr [rsp + 8]
0x997b:	mov	rsi, qword ptr [rsp]
0x997f:	mov	qword ptr [rdi], rax
0x9982:	mov	eax, 8
0x9987:	jmp	0x98d4


0x98d4:	shl	r9, 6
0x98d8:	mov	dword ptr [rsi], r10d
0x98db:	add	rax, rdi
0x98de:	lea	rsi, [rdi + r9]
0x98e2:	mov	qword ptr [rsi + 8], 0
0x98ea:	mov	qword ptr [rsi + 0x10], rdx
0x98ee:	lea	rdi, [rsi + 0x20]
0x98f2:	mov	qword ptr [rsi + 0x18], rcx
0x98f6:	movdqu	xmm0, xmmword ptr [r8]
0x98fb:	movups	xmmword ptr [rsi + 0x30], xmm0
0x98ff:	and	byte ptr [rdi + 0x1a], 0xf3
0x9903:	test	rdx, rdx
0x9906:	mov	qword ptr [rsi + 0x20], 0
0x990e:	mov	qword ptr [rsi + 0x28], 0
0x9916:	mov	qword ptr [rsi + 0x40], -1
0x991e:	je	0x9923


0x9d7b:	test	rax, rax
0x9d7e:	mov	qword ptr [rbx + 0x10], rax
0x9d82:	je	0x9dc0


0x9dc0:	mov	qword ptr [rbx + 8], 0
0x9dc8:	mov	qword ptr [rbx], 0
0x9dcf:	mov	eax, 0xc
0x9dd4:	jmp	0x9d9a


0x9d84:	mov	rsi, qword ptr [rbp + 0x10]
0x9d88:	lea	rdx, [r12*8]
0x9d90:	mov	rdi, rax
0x9d93:	call	0x1be0


0x9d9a:	pop	rbx
0x9d9b:	pop	rbp
0x9d9c:	pop	r12
0x9d9e:	ret	


0x9d98:	xor	eax, eax
0x9d9a:	pop	rbx
0x9d9b:	pop	rbp
0x9d9c:	pop	r12
0x9d9e:	ret	


0xddc5:	lea	rcx, [rbp - 0x50]
0xddc9:	test	rax, rax
0xddcc:	mov	qword ptr [rbp - 0x40], rax
0xddd0:	mov	qword ptr [rbp - 0x88], rcx
0xddd7:	je	0xe4fc


0x6dc9:	test	rax, rax
0x6dcc:	jne	0x6dd3


0x6dce:	test	rbx, rbx
0x6dd1:	jne	0x6dd5


0x6dd3:	pop	rbx
0x6dd4:	ret	


0x6dd5:	call	0x7010


0x2938:	lea	rdi, [rax + 8]
0x293c:	mov	dword ptr [rax], 0
0x2942:	mov	rsi, r12
0x2945:	mov	rbx, rax
0x2948:	call	0x1cc0


0x1cc0:	jmp	qword ptr [rip + 0x21924a]




0x298a:	lea	rdi, [rax + 8]
0x298e:	mov	dword ptr [rax], 0
0x2994:	xor	esi, esi
0x2996:	mov	rbx, rax
0x2999:	call	0x1cc0


0x2173:	mov	rdi, rbp
0x2176:	mov	rbx, rax
0x2179:	mov	dword ptr [rax], 1
0x217f:	call	0x6ff0


0x6f79:	mov	rdx, rbx
0x6f7c:	xor	esi, esi
0x6f7e:	mov	rdi, rax
0x6f81:	pop	rbx
0x6f82:	jmp	0x1b60


0x6fd4:	add	rsp, 8
0x6fd8:	mov	rdx, rbx
0x6fdb:	mov	rsi, rbp
0x6fde:	pop	rbx
0x6fdf:	pop	rbp
0x6fe0:	mov	rdi, rax
0x6fe3:	jmp	0x1be0


0x7815:	test	rax, rax
0x7818:	mov	qword ptr [rbp + 0x30], rax
0x781c:	je	0x785e


0x785e:	pop	rbx
0x785f:	mov	eax, 0xc
0x7864:	pop	rbp
0x7865:	pop	r12
0x7867:	pop	r13
0x7869:	pop	r14
0x786b:	ret	


0x781e:	test	rbx, rbx
0x7821:	jle	0x7870


0x7870:	and	r12, qword ptr [r14 + 0x88]
0x7877:	mov	rax, qword ptr [r14 + 0x40]
0x787b:	lea	rdx, [r12 + r12*2]
0x787f:	lea	rbx, [rax + rdx*8]
0x7883:	mov	rdx, qword ptr [rbx]
0x7886:	cmp	qword ptr [rbx + 8], rdx
0x788a:	mov	rax, qword ptr [rbx + 0x10]
0x788e:	lea	rsi, [rdx + 1]
0x7892:	jle	0x78a6


0x7823:	xor	ebx, ebx
0x7825:	jmp	0x783a


0x78a6:	lea	r12, [rsi + rsi]
0x78aa:	mov	rdi, rax
0x78ad:	shl	rsi, 4
0x78b1:	call	0x1c90


0x7894:	mov	qword ptr [rbx], rsi
0x7897:	mov	qword ptr [rax + rdx*8], rbp
0x789b:	xor	eax, eax
0x789d:	pop	rbx
0x789e:	pop	rbp
0x789f:	pop	r12
0x78a1:	pop	r13
0x78a3:	pop	r14
0x78a5:	ret	


0x783a:	mov	rax, qword ptr [rbp + 0x18]
0x783e:	mov	rsi, qword ptr [rax + rbx*8]
0x7842:	mov	rax, rsi
0x7845:	shl	rax, 4
0x7849:	add	rax, qword ptr [r14]
0x784c:	test	byte ptr [rax + 8], 8
0x7850:	jne	0x7830


0x7852:	mov	rdi, r13
0x7855:	call	0x7640


0x7830:	add	rbx, 1
0x7834:	cmp	qword ptr [rbp + 0x10], rbx
0x7838:	jle	0x7870


0x785a:	test	al, al
0x785c:	jne	0x7830


0x78b6:	test	rax, rax
0x78b9:	je	0x785e


0x78bb:	mov	rdx, qword ptr [rbx]
0x78be:	mov	qword ptr [rbx + 0x10], rax
0x78c2:	mov	qword ptr [rbx + 8], r12
0x78c6:	lea	rsi, [rdx + 1]
0x78ca:	jmp	0x7894


0xa38b:	test	eax, eax
0xa38d:	jne	0xa3e4


0xa3e4:	mov	rdi, rbx
0xa3e7:	call	0x8880


0xa146:	test	eax, eax
0xa148:	je	0x9fec


0x934c:	test	rax, rax
0x934f:	mov	qword ptr [rsp + 0x30], rax
0x9354:	je	0x9590


0x9590:	mov	eax, 0xc
0x9595:	jmp	0x9496


0x935a:	mov	rax, qword ptr [r15 + 0x30]
0x935e:	mov	rdx, qword ptr [r15]
0x9361:	mov	r13, rbp
0x9364:	shl	r13, 4
0x9368:	mov	qword ptr [rax + rbx + 8], -1
0x9371:	lea	rax, [rdx + r13]
0x9375:	mov	r8d, dword ptr [rax + 8]
0x9379:	test	r8d, 0x3ff00
0x9380:	jne	0x9520


0x9496:	mov	rsi, qword ptr [rsp + 0x58]
0x949b:	xor	rsi, qword ptr fs:[0x28]
0x94a4:	jne	0x959a


0x9386:	test	byte ptr [rax + 8], 8
0x938a:	je	0x9450


0x9520:	cmp	qword ptr [r12 + 8], 0
0x9526:	je	0x9450


0x94aa:	add	rsp, 0x68
0x94ae:	pop	rbx
0x94af:	pop	rbp
0x94b0:	pop	r12
0x94b2:	pop	r13
0x94b4:	pop	r14
0x94b6:	pop	r15
0x94b8:	ret	


0x959a:	call	0x1ad0


0x9450:	lea	rdi, [rsp + 0x20]
0x9455:	mov	rsi, rbp
0x9458:	call	0x76b0


0x9390:	mov	rsi, qword ptr [r15 + 0x28]
0x9394:	lea	rax, [rsi + rbx]
0x9398:	cmp	qword ptr [rax + 8], 0
0x939d:	jle	0x9450


0x952c:	mov	rcx, qword ptr [r12 + 0x10]
0x9531:	mov	rcx, qword ptr [rcx]
0x9534:	shl	rcx, 4
0x9538:	test	byte ptr [rdx + rcx + 0xa], 4
0x953d:	jne	0x9386


0x93a3:	lea	rdx, [rsp + 0x20]
0x93a8:	mov	byte ptr [rsp + 0x1b], 0
0x93ad:	xor	r14d, r14d
0x93b0:	lea	r12, [rsp + 0x40]
0x93b5:	mov	qword ptr [rsp + 8], rdx
0x93ba:	jmp	0x93d6


0x9543:	shr	r8d, 8
0x9547:	mov	rcx, rbp
0x954a:	mov	rdx, rbp
0x954d:	and	r8d, 0x3ff
0x9554:	mov	rsi, rbp
0x9557:	mov	rdi, r15
0x955a:	call	0x8600


0x93d6:	mov	rax, qword ptr [rax + 0x10]
0x93da:	mov	rdx, qword ptr [rax + r14*8]
0x93de:	mov	rax, qword ptr [r15 + 0x30]
0x93e2:	lea	r8, [rdx + rdx*2]
0x93e6:	lea	r13, [r8*8]
0x93ee:	add	rax, r13
0x93f1:	mov	rcx, qword ptr [rax + 8]
0x93f5:	cmp	rcx, -1
0x93f9:	je	0x94c0


0x94c0:	lea	rax, [rsi + rbx]
0x94c4:	add	r14, 1
0x94c8:	mov	byte ptr [rsp + 0x1b], 1
0x94cd:	cmp	qword ptr [rax + 8], r14
0x94d1:	jg	0x93d6


0x93ff:	test	rcx, rcx
0x9402:	je	0x9578


0x94d7:	lea	rdi, [rsp + 0x20]
0x94dc:	mov	rsi, rbp
0x94df:	call	0x76b0


0x9578:	mov	rsi, r15
0x957b:	mov	rdi, r12
0x957e:	call	0x92f0


0x9408:	movdqu	xmm0, xmmword ptr [rax]
0x940c:	movaps	xmmword ptr [rsp + 0x40], xmm0
0x9411:	mov	rax, qword ptr [rax + 0x10]
0x9415:	mov	qword ptr [rsp + 0x50], rax
0x941a:	mov	rdi, qword ptr [rsp + 8]
0x941f:	mov	rsi, r12
0x9422:	call	0x9110


0x9427:	test	eax, eax
0x9429:	jne	0x9496


0x942b:	mov	rax, qword ptr [r15 + 0x30]
0x942f:	cmp	qword ptr [rax + r13 + 8], 0
0x9435:	jne	0x93c0


0x9437:	mov	rdi, qword ptr [rsp + 0x50]
0x943c:	call	0x19d0


0x93c0:	mov	rsi, qword ptr [r15 + 0x28]
0x93c4:	add	r14, 1
0x93c8:	lea	rax, [rsi + rbx]
0x93cc:	cmp	qword ptr [rax + 8], r14
0x93d0:	jle	0x94d7


0x9441:	mov	byte ptr [rsp + 0x1b], 1
0x9446:	jmp	0x93c0


0x9583:	test	eax, eax
0x9585:	je	0x941a


0x941a:	mov	rdi, qword ptr [rsp + 8]
0x941f:	mov	rsi, r12
0x9422:	call	0x9110


0x958b:	jmp	0x9496


0x955f:	test	eax, eax
0x9561:	jne	0x9496


0x9567:	mov	rax, qword ptr [r15]
0x956a:	add	rax, r13
0x956d:	jmp	0x9386


0x94e4:	test	al, al
0x94e6:	je	0x9590


0x94ec:	cmp	byte ptr [rsp + 0x1c], 1
0x94f1:	mov	rax, qword ptr [r15 + 0x30]
0x94f5:	lea	rdx, [rax + rbx]
0x94f9:	je	0x9469


0x9469:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x946f:	movups	xmmword ptr [rax + rbx], xmm0
0x9473:	mov	rdx, qword ptr [rsp + 0x30]
0x9478:	mov	qword ptr [rax + rbx + 0x10], rdx
0x947d:	mov	rbx, qword ptr [rsp + 0x10]
0x9482:	mov	rax, qword ptr [rsp + 0x30]
0x9487:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x948d:	movaps	xmmword ptr [rbx], xmm0
0x9490:	mov	qword ptr [rbx + 0x10], rax
0x9494:	xor	eax, eax
0x9496:	mov	rsi, qword ptr [rsp + 0x58]
0x949b:	xor	rsi, qword ptr fs:[0x28]
0x94a4:	jne	0x959a


0x94ff:	cmp	byte ptr [rsp + 0x1b], 0
0x9504:	je	0x9469


0x950a:	mov	qword ptr [rdx + 8], 0
0x9512:	jmp	0x947d


0x947d:	mov	rbx, qword ptr [rsp + 0x10]
0x9482:	mov	rax, qword ptr [rsp + 0x30]
0x9487:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x948d:	movaps	xmmword ptr [rbx], xmm0
0x9490:	mov	qword ptr [rbx + 0x10], rax
0x9494:	xor	eax, eax
0x9496:	mov	rsi, qword ptr [rsp + 0x58]
0x949b:	xor	rsi, qword ptr fs:[0x28]
0x94a4:	jne	0x959a


0x945d:	test	al, al
0x945f:	je	0x9590


0x9465:	mov	rax, qword ptr [r15 + 0x30]
0x9469:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x946f:	movups	xmmword ptr [rax + rbx], xmm0
0x9473:	mov	rdx, qword ptr [rsp + 0x30]
0x9478:	mov	qword ptr [rax + rbx + 0x10], rdx
0x947d:	mov	rbx, qword ptr [rsp + 0x10]
0x9482:	mov	rax, qword ptr [rsp + 0x30]
0x9487:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x948d:	movaps	xmmword ptr [rbx], xmm0
0x9490:	mov	qword ptr [rbx + 0x10], rax
0x9494:	xor	eax, eax
0x9496:	mov	rsi, qword ptr [rsp + 0x58]
0x949b:	xor	rsi, qword ptr fs:[0x28]
0x94a4:	jne	0x959a


0x95e8:	test	rax, rax
0x95eb:	mov	qword ptr [rsp + 0x20], rax
0x95f0:	je	0x96ed


0x96ed:	mov	eax, 0xc
0x96f2:	jmp	0x96ce


0x95f6:	test	r12, r12
0x95f9:	jle	0x968b


0x96ce:	mov	rdx, qword ptr [rsp + 0x28]
0x96d3:	xor	rdx, qword ptr fs:[0x28]
0x96dc:	jne	0x96f4


0x968b:	mov	rdi, qword ptr [r15 + 0x10]
0x968f:	call	0x19d0


0x95ff:	lea	r12, [rsp + 0x10]
0x9604:	xor	r13d, r13d
0x9607:	nop	word ptr [rax + rax]
0x9610:	mov	rax, qword ptr [r15 + 0x10]
0x9614:	mov	rdx, qword ptr [rax + r13*8]
0x9618:	mov	rax, qword ptr [r14 + 0x30]
0x961c:	lea	rcx, [rdx + rdx*2]
0x9620:	lea	rsi, [rax + rcx*8]
0x9624:	mov	r8, qword ptr [rsi + 8]
0x9628:	test	r8, r8
0x962b:	jle	0x96b0


0x96de:	add	rsp, 0x38
0x96e2:	pop	rbx
0x96e3:	pop	rbp
0x96e4:	pop	r12
0x96e6:	pop	r13
0x96e8:	pop	r14
0x96ea:	pop	r15
0x96ec:	ret	


0x96f4:	call	0x1ad0


0x96b0:	mov	rdi, r12
0x96b3:	call	0x9110


0x9631:	mov	r10, qword ptr [rsi + 0x10]
0x9635:	mov	r9, qword ptr [r14]
0x9638:	xor	ecx, ecx
0x963a:	jmp	0x9649


0x9649:	mov	rdi, qword ptr [r10 + rcx*8]
0x964d:	mov	rax, rdi
0x9650:	shl	rax, 4
0x9654:	add	rax, r9
0x9657:	movzx	r11d, byte ptr [rax + 8]
0x965c:	cmp	ebx, r11d
0x965f:	jne	0x9640


0x9661:	cmp	rbp, qword ptr [rax]
0x9664:	jne	0x9640


0x9640:	add	rcx, 1
0x9644:	cmp	r8, rcx
0x9647:	je	0x96b0


0x9666:	cmp	rdi, -1
0x966a:	je	0x96b0


0x966c:	mov	r8d, ebx
0x966f:	mov	rcx, rbp
0x9672:	mov	rsi, r12
0x9675:	mov	rdi, r14
0x9678:	call	0x8c70


0x967d:	test	eax, eax
0x967f:	jne	0x96bc


0x9681:	add	r13, 1
0x9685:	cmp	qword ptr [r15 + 8], r13
0x9689:	jg	0x9610


0x96bc:	mov	rdi, qword ptr [rsp + 0x20]
0x96c1:	mov	dword ptr [rsp + 0xc], eax
0x96c5:	call	0x19d0


0x9610:	mov	rax, qword ptr [r15 + 0x10]
0x9614:	mov	rdx, qword ptr [rax + r13*8]
0x9618:	mov	rax, qword ptr [r14 + 0x30]
0x961c:	lea	rcx, [rdx + rdx*2]
0x9620:	lea	rsi, [rax + rcx*8]
0x9624:	mov	r8, qword ptr [rsi + 8]
0x9628:	test	r8, r8
0x962b:	jle	0x96b0


0x96b8:	test	eax, eax
0x96ba:	je	0x9681


0x96ca:	mov	eax, dword ptr [rsp + 0xc]
0x96ce:	mov	rdx, qword ptr [rsp + 0x28]
0x96d3:	xor	rdx, qword ptr fs:[0x28]
0x96dc:	jne	0x96f4


0x9694:	mov	rax, qword ptr [rsp + 0x20]
0x9699:	movdqa	xmm0, xmmword ptr [rsp + 0x10]
0x969f:	mov	qword ptr [r15 + 0x10], rax
0x96a3:	xor	eax, eax
0x96a5:	movaps	xmmword ptr [r15], xmm0
0x96a9:	jmp	0x96ce


0xa78d:	mov	rsi, r15
0xa790:	mov	rdi, rbp
0xa793:	mov	r14d, eax
0xa796:	call	0x9110


0xa79b:	mov	rdi, qword ptr [rsp + 0x60]
0xa7a0:	mov	r15d, eax
0xa7a3:	call	0x19d0


0xa7a8:	mov	eax, dword ptr [rsp + 0x4c]
0xa7ac:	mov	edx, r14d
0xa7af:	or	edx, r15d
0xa7b2:	or	edx, eax
0xa7b4:	jne	0xa846


0xa7ba:	mov	rcx, qword ptr [rbx + 0xd8]
0xa7c1:	jmp	0xa603


0xa846:	test	eax, eax
0xa848:	jne	0xa59f


0xa603:	mov	rax, qword ptr [rsp + 0x30]
0xa608:	lea	r15, [rcx + rax]
0xa60c:	jmp	0xa6e8


0xa84e:	test	r14d, r14d
0xa851:	mov	eax, r14d
0xa854:	cmove	eax, r15d
0xa858:	jmp	0xa59f


0xdb08:	test	eax, eax
0xdb0a:	mov	dword ptr [rsp + 0x88], eax
0xdb11:	je	0xdc2d


0xdb17:	jmp	0xdb70


0xd979:	test	eax, eax
0xd97b:	mov	dword ptr [rsp + 0x88], eax
0xd982:	jne	0xdb70


0xd988:	mov	r8d, dword ptr [rsp + 0x110]
0xd990:	mov	rcx, qword ptr [rsp + 0x48]
0xd995:	mov	rdx, rbx
0xd998:	mov	rsi, qword ptr [rsp + 8]
0xd99d:	mov	rdi, r15
0xd9a0:	call	0xa4e0


0xd9a5:	test	eax, eax
0xd9a7:	mov	dword ptr [rsp + 0x88], eax
0xd9ae:	jne	0xdb70


0xb6b6:	test	rax, rax
0xb6b9:	mov	qword ptr [rsp + 0x18], rax
0xb6be:	je	0xba90


0xba90:	xor	eax, eax
0xba92:	mov	rbx, qword ptr [rsp + 0xf8]
0xba9a:	xor	rbx, qword ptr fs:[0x28]
0xbaa3:	jne	0xc1f4


0xb6c4:	mov	rax, qword ptr [rsp + 0x18]
0xb6c9:	pxor	xmm0, xmm0
0xb6cd:	lea	rbx, [rax + 0x1800]
0xb6d4:	mov	rax, qword ptr [rsp + 8]
0xb6d9:	movaps	xmmword ptr [rsp + 0x90], xmm0
0xb6e1:	mov	qword ptr [rsp + 0x40], rbx
0xb6e6:	movaps	xmmword ptr [rsp + 0xa0], xmm0
0xb6ee:	cmp	qword ptr [rax + 0x10], 0
0xb6f3:	mov	qword ptr [rax + 0x58], 0
0xb6fb:	mov	qword ptr [rax + 0x60], 0
0xb703:	jle	0xc17a


0xbaa9:	add	rsp, 0x108
0xbab0:	pop	rbx
0xbab1:	pop	rbp
0xbab2:	pop	r12
0xbab4:	pop	r13
0xbab6:	pop	r14
0xbab8:	pop	r15
0xbaba:	ret	


0xc1f4:	call	0x1ad0


0xc17a:	mov	rdi, qword ptr [rsp + 0x18]
0xc17f:	call	0x19d0


0xb709:	mov	qword ptr [rsp + 0x30], r15
0xb70e:	xor	ebp, ebp
0xb710:	mov	qword ptr [rsp + 0x10], 0
0xb719:	mov	r15, rbx
0xb71c:	mov	rbx, qword ptr [rsp + 0x10]
0xb721:	lea	rax, [rbx*8]
0xb729:	mov	qword ptr [rsp + 0x20], rax
0xb72e:	mov	rax, qword ptr [rsp + 8]
0xb733:	mov	rax, qword ptr [rax + 0x18]
0xb737:	mov	r13, qword ptr [rax + rbx*8]
0xb73b:	mov	rax, qword ptr [rsp + 0x30]
0xb740:	shl	r13, 4
0xb744:	add	r13, qword ptr [rax]
0xb747:	movzx	r14d, byte ptr [r13 + 8]
0xb74c:	mov	eax, dword ptr [r13 + 8]
0xb750:	shr	eax, 8
0xb753:	and	ax, 0x3ff
0xb757:	cmp	r14d, 1
0xb75b:	je	0xbac0


0xbac0:	movzx	ecx, byte ptr [r13]
0xbac5:	lea	r12, [rsp + 0x90]
0xbacd:	mov	edi, 1
0xbad2:	mov	rdx, rcx
0xbad5:	and	ecx, 0x3f
0xbad8:	shr	rdx, 3
0xbadc:	shl	rdi, cl
0xbadf:	and	edx, 0x18
0xbae2:	or	qword ptr [r12 + rdx], rdi
0xbae6:	test	ax, ax
0xbae9:	je	0xbbb0


0xb761:	cmp	r14d, 3
0xb765:	je	0xbf30


0xbbb0:	xor	ebx, ebx
0xbbb2:	test	rbp, rbp
0xbbb5:	jle	0xbd1b


0xbaef:	test	al, 0x20
0xbaf1:	jne	0xbe60


0xbf30:	mov	rsi, qword ptr [r13]
0xbf34:	lea	r12, [rsp + 0x90]
0xbf3c:	xor	edx, edx
0xbf3e:	mov	rcx, qword ptr [r12 + rdx]
0xbf42:	or	rcx, qword ptr [rsi + rdx]
0xbf46:	mov	qword ptr [r12 + rdx], rcx
0xbf4a:	add	rdx, 8
0xbf4e:	cmp	rdx, 0x20
0xbf52:	jne	0xbf3e


0xb76b:	cmp	r14d, 5
0xb76f:	je	0xbdf0


0xbd1b:	cmp	rbp, rbx
0xbd1e:	jne	0xb77f


0xbbbb:	mov	qword ptr [rsp + 0x28], r13
0xbbc0:	mov	r13, r15
0xbbc3:	nop	dword ptr [rax + rax]
0xbbc8:	mov	r10, rbx
0xbbcb:	shl	r10, 5
0xbbcf:	cmp	r14d, 1
0xbbd3:	jne	0xbbf8


0xbaf7:	test	al, 0x80
0xbaf9:	jne	0xbd94


0xbe60:	mov	rdx, qword ptr [rsp + 0x90]
0xbe68:	pxor	xmm0, xmm0
0xbe6c:	and	dh, 4
0xbe6f:	movaps	xmmword ptr [r12], xmm0
0xbe74:	movaps	xmmword ptr [r12 + 0x10], xmm0
0xbe7a:	je	0xb77f


0xbf54:	jmp	0xbae6


0xbf3e:	mov	rcx, qword ptr [r12 + rdx]
0xbf42:	or	rcx, qword ptr [rsi + rdx]
0xbf46:	mov	qword ptr [r12 + rdx], rcx
0xbf4a:	add	rdx, 8
0xbf4e:	cmp	rdx, 0x20
0xbf52:	jne	0xbf3e


0xbdf0:	mov	rsi, qword ptr [rsp + 0x30]
0xbdf5:	cmp	dword ptr [rsi + 0xb4], 1
0xbdfc:	jle	0xbf05


0xb775:	cmp	r14d, 7
0xb779:	je	0xbf59


0xbd24:	mov	rax, rbp
0xbd27:	movdqa	xmm0, xmmword ptr [rsp + 0x90]
0xbd30:	shl	rax, 5
0xbd34:	mov	rbx, qword ptr [rsp + 0x20]
0xbd39:	mov	edi, 8
0xbd3e:	add	rax, r15
0xbd41:	movups	xmmword ptr [rax], xmm0
0xbd44:	movdqa	xmm0, xmmword ptr [rsp + 0xa0]
0xbd4d:	movups	xmmword ptr [rax + 0x10], xmm0
0xbd51:	mov	rax, qword ptr [rsp + 8]
0xbd56:	mov	rax, qword ptr [rax + 0x18]
0xbd5a:	mov	r13, qword ptr [rax + rbx]
0xbd5e:	mov	rbx, qword ptr [rsp + 0x18]
0xbd63:	lea	rax, [rbp + rbp*2]
0xbd68:	lea	rbx, [rbx + rax*8]
0xbd6c:	mov	qword ptr [rbx], 1
0xbd73:	mov	qword ptr [rbx + 8], 1
0xbd7b:	call	0x1c20


0xb77f:	mov	rbx, qword ptr [rsp + 8]
0xb784:	add	qword ptr [rsp + 0x10], 1
0xb78a:	mov	rax, qword ptr [rsp + 0x10]
0xb78f:	cmp	rax, qword ptr [rbx + 0x10]
0xb793:	jl	0xb71c


0xbbd5:	mov	rax, qword ptr [rsp + 0x28]
0xbbda:	movzx	edx, byte ptr [rax]
0xbbdd:	mov	rax, rdx
0xbbe0:	shr	rax, 3
0xbbe4:	and	eax, 0x18
0xbbe7:	add	rax, r13
0xbbea:	mov	rax, qword ptr [rax + r10]
0xbbee:	bt	rax, rdx
0xbbf2:	jae	0xbd0b


0xbbf8:	lea	rdi, [r13 + r10]
0xbbfd:	lea	rsi, [rsp + 0xb0]
0xbc05:	xor	ecx, ecx
0xbc07:	xor	eax, eax
0xbc09:	mov	rdx, qword ptr [r12 + rax*8]
0xbc0d:	and	rdx, qword ptr [rdi + rax*8]
0xbc11:	mov	qword ptr [rsi + rax*8], rdx
0xbc15:	add	rax, 1
0xbc19:	or	rcx, rdx
0xbc1c:	cmp	rax, 4
0xbc20:	jne	0xbc09


0xbaff:	test	al, 4
0xbb01:	je	0xbb55


0xbd94:	pxor	xmm0, xmm0
0xbd98:	movaps	xmmword ptr [r12], xmm0
0xbd9d:	movaps	xmmword ptr [r12 + 0x10], xmm0
0xbda3:	jmp	0xb77f


0xbe80:	mov	qword ptr [rsp + 0x90], 0x400
0xbe8c:	jmp	0xbaf7


0xbae6:	test	ax, ax
0xbae9:	je	0xbbb0


0xbf05:	pcmpeqd	xmm0, xmm0
0xbf09:	lea	r12, [rsp + 0x90]
0xbf11:	movaps	xmmword ptr [rsp + 0x90], xmm0
0xbf19:	movaps	xmmword ptr [rsp + 0xa0], xmm0
0xbf21:	jmp	0xbe26


0xbe02:	mov	rsi, qword ptr [rsi + 0x78]
0xbe06:	lea	r12, [rsp + 0x90]
0xbe0e:	xor	edx, edx
0xbe10:	mov	rcx, qword ptr [r12 + rdx]
0xbe14:	or	rcx, qword ptr [rsi + rdx]
0xbe18:	mov	qword ptr [r12 + rdx], rcx
0xbe1c:	add	rdx, 8
0xbe20:	cmp	rdx, 0x20
0xbe24:	jne	0xbe10


0xbf59:	pcmpeqd	xmm0, xmm0
0xbf5d:	lea	r12, [rsp + 0x90]
0xbf65:	movaps	xmmword ptr [rsp + 0x90], xmm0
0xbf6d:	jmp	0xbe26


0xb71c:	mov	rbx, qword ptr [rsp + 0x10]
0xb721:	lea	rax, [rbx*8]
0xb729:	mov	qword ptr [rsp + 0x20], rax
0xb72e:	mov	rax, qword ptr [rsp + 8]
0xb733:	mov	rax, qword ptr [rax + 0x18]
0xb737:	mov	r13, qword ptr [rax + rbx*8]
0xb73b:	mov	rax, qword ptr [rsp + 0x30]
0xb740:	shl	r13, 4
0xb744:	add	r13, qword ptr [rax]
0xb747:	movzx	r14d, byte ptr [r13 + 8]
0xb74c:	mov	eax, dword ptr [r13 + 8]
0xb750:	shr	eax, 8
0xb753:	and	ax, 0x3ff
0xb757:	cmp	r14d, 1
0xb75b:	je	0xbac0


0xb795:	test	rbp, rbp
0xb798:	mov	r15, qword ptr [rsp + 0x30]
0xb79d:	jle	0xc1f9


0xbd0b:	add	rbx, 1
0xbd0f:	cmp	rbx, rbp
0xbd12:	jl	0xbbc8


0xbc22:	test	rcx, rcx
0xbc25:	je	0xbd0b


0xbc09:	mov	rdx, qword ptr [r12 + rax*8]
0xbc0d:	and	rdx, qword ptr [rdi + rax*8]
0xbc11:	mov	qword ptr [rsi + rax*8], rdx
0xbc15:	add	rax, 1
0xbc19:	or	rcx, rdx
0xbc1c:	cmp	rax, 4
0xbc20:	jne	0xbc09


0xbb55:	test	al, 8
0xbb57:	je	0xbbb0


0xbb03:	cmp	r14d, 1
0xbb07:	je	0xbee5


0xbe26:	mov	rbx, qword ptr [rsp + 0x30]
0xbe2b:	mov	rdx, qword ptr [rbx + 0xd8]
0xbe32:	test	dl, 0x40
0xbe35:	jne	0xbe43


0xbe10:	mov	rcx, qword ptr [r12 + rdx]
0xbe14:	or	rcx, qword ptr [rsi + rdx]
0xbe18:	mov	qword ptr [r12 + rdx], rcx
0xbe1c:	add	rdx, 8
0xbe20:	cmp	rdx, 0x20
0xbe24:	jne	0xbe10


0xc1f9:	mov	rdi, qword ptr [rsp + 0x18]
0xc1fe:	call	0x19d0


0xb7a3:	lea	rbx, [rbp + 1]
0xb7a7:	mov	qword ptr [rsp + 0x78], 0
0xb7b0:	mov	qword ptr [rsp + 0x70], rbx
0xb7b5:	shl	rbx, 3
0xb7b9:	mov	rdi, rbx
0xb7bc:	call	0x1c20


0xbbc8:	mov	r10, rbx
0xbbcb:	shl	r10, 5
0xbbcf:	cmp	r14d, 1
0xbbd3:	jne	0xbbf8


0xbd18:	mov	r15, r13
0xbd1b:	cmp	rbp, rbx
0xbd1e:	jne	0xb77f


0xbc2b:	lea	r11, [rsp + 0xd0]
0xbc33:	xor	r15d, r15d
0xbc36:	xor	r9d, r9d
0xbc39:	xor	ecx, ecx
0xbc3b:	mov	rsi, qword ptr [r12 + rcx*8]
0xbc3f:	mov	rax, qword ptr [rdi + rcx*8]
0xbc43:	mov	rdx, rsi
0xbc46:	not	rdx
0xbc49:	and	rdx, rax
0xbc4c:	not	rax
0xbc4f:	and	rax, rsi
0xbc52:	mov	qword ptr [r11 + rcx*8], rdx
0xbc56:	or	r9, rdx
0xbc59:	mov	qword ptr [r12 + rcx*8], rax
0xbc5d:	add	rcx, 1
0xbc61:	or	r15, rax
0xbc64:	cmp	rcx, 4
0xbc68:	jne	0xbc3b


0xbb59:	cmp	r14d, 1
0xbb5d:	je	0xbe91


0xbee5:	test	byte ptr [r13 + 0xa], 0x40
0xbeea:	je	0xbd94


0xbb0d:	mov	r8, qword ptr [rsp + 0x30]
0xbb12:	cmp	dword ptr [r8 + 0xb4], 1
0xbb1a:	jle	0xbf72


0xbe37:	and	qword ptr [rsp + 0x90], 0xfffffffffffffbff
0xbe43:	and	edx, 0x80
0xbe49:	je	0xbae6


0xbe43:	and	edx, 0x80
0xbe49:	je	0xbae6


0xbc6a:	mov	rdi, qword ptr [rsp + 0x18]
0xbc6f:	lea	rax, [rbx + rbx*2]
0xbc73:	test	r9, r9
0xbc76:	lea	rdx, [rdi + rax*8]
0xbc7a:	je	0xbce4


0xbc3b:	mov	rsi, qword ptr [r12 + rcx*8]
0xbc3f:	mov	rax, qword ptr [rdi + rcx*8]
0xbc43:	mov	rdx, rsi
0xbc46:	not	rdx
0xbc49:	and	rdx, rax
0xbc4c:	not	rax
0xbc4f:	and	rax, rsi
0xbc52:	mov	qword ptr [r11 + rcx*8], rdx
0xbc56:	or	r9, rdx
0xbc59:	mov	qword ptr [r12 + rcx*8], rax
0xbc5d:	add	rcx, 1
0xbc61:	or	r15, rax
0xbc64:	cmp	rcx, 4
0xbc68:	jne	0xbc3b


0xbe91:	test	byte ptr [r13 + 0xa], 0x40
0xbe96:	jne	0xbd94


0xbb63:	mov	rdi, qword ptr [rsp + 0x30]
0xbb68:	cmp	dword ptr [rdi + 0xb4], 1
0xbb6f:	jle	0xbeae


0xbef0:	mov	r8, qword ptr [rsp + 0x30]
0xbef5:	cmp	dword ptr [r8 + 0xb4], 1
0xbefd:	jg	0xbb20


0xbf72:	mov	rdi, qword ptr [rsp + 0x30]
0xbf77:	xor	esi, esi
0xbf79:	xor	edx, edx
0xbf7b:	mov	rcx, qword ptr [r12 + rdx*8]
0xbf7f:	and	rcx, qword ptr [rdi + rdx*8 + 0xb8]
0xbf87:	mov	qword ptr [r12 + rdx*8], rcx
0xbf8b:	add	rdx, 1
0xbf8f:	or	rsi, rcx
0xbf92:	cmp	rdx, 4
0xbf96:	jne	0xbf7b


0xbb20:	mov	rdi, qword ptr [r8 + 0x78]
0xbb24:	xor	esi, esi
0xbb26:	xor	ecx, ecx
0xbb28:	mov	rdx, qword ptr [rdi + rcx*8]
0xbb2c:	not	rdx
0xbb2f:	or	rdx, qword ptr [r8 + rcx*8 + 0xb8]
0xbb37:	and	rdx, qword ptr [r12 + rcx*8]
0xbb3b:	mov	qword ptr [r12 + rcx*8], rdx
0xbb3f:	add	rcx, 1
0xbb43:	or	rsi, rdx
0xbb46:	cmp	rcx, 4
0xbb4a:	jne	0xbb28


0xbe4f:	and	qword ptr [rsp + 0x90], 0xfffffffffffffffe
0xbe58:	jmp	0xbae6


0xbce4:	mov	rax, qword ptr [rsp + 8]
0xbce9:	mov	rsi, qword ptr [rsp + 0x20]
0xbcee:	mov	rdi, rdx
0xbcf1:	mov	rax, qword ptr [rax + 0x18]
0xbcf5:	mov	rsi, qword ptr [rax + rsi]
0xbcf9:	call	0x76b0


0xbc7c:	mov	rax, rbp
0xbc7f:	movdqa	xmm0, xmmword ptr [rsp + 0xd0]
0xbc88:	shl	rax, 5
0xbc8c:	mov	rsi, rdx
0xbc8f:	mov	qword ptr [rsp + 0x38], rdx
0xbc94:	add	rax, r13
0xbc97:	movups	xmmword ptr [rax], xmm0
0xbc9a:	movdqa	xmm0, xmmword ptr [rsp + 0xe0]
0xbca3:	movups	xmmword ptr [rax + 0x10], xmm0
0xbca7:	lea	rax, [rbp + rbp*2]
0xbcac:	lea	rdi, [rdi + rax*8]
0xbcb0:	movdqa	xmm0, xmmword ptr [rsp + 0xb0]
0xbcb9:	movups	xmmword ptr [r13 + r10], xmm0
0xbcbf:	movdqa	xmm0, xmmword ptr [rsp + 0xc0]
0xbcc8:	movups	xmmword ptr [r13 + r10 + 0x10], xmm0
0xbcce:	call	0x9d50


0xbe9c:	mov	rdi, qword ptr [rsp + 0x30]
0xbea1:	cmp	dword ptr [rdi + 0xb4], 1
0xbea8:	jg	0xbb75


0xbeae:	mov	rsi, qword ptr [rsp + 0x30]
0xbeb3:	xor	ecx, ecx
0xbeb5:	xor	edx, edx
0xbeb7:	mov	rax, qword ptr [rsi + rdx*8 + 0xb8]
0xbebf:	not	rax
0xbec2:	and	rax, qword ptr [r12 + rdx*8]
0xbec6:	mov	qword ptr [r12 + rdx*8], rax
0xbeca:	add	rdx, 1
0xbece:	or	rcx, rax
0xbed1:	cmp	rdx, 4
0xbed5:	jne	0xbeb7


0xbb75:	mov	rsi, qword ptr [rdi + 0x78]
0xbb79:	xor	ecx, ecx
0xbb7b:	xor	edx, edx
0xbb7d:	mov	rax, qword ptr [rdi + rdx*8 + 0xb8]
0xbb85:	and	rax, qword ptr [rsi + rdx*8]
0xbb89:	not	rax
0xbb8c:	and	rax, qword ptr [r12 + rdx*8]
0xbb90:	mov	qword ptr [r12 + rdx*8], rax
0xbb94:	add	rdx, 1
0xbb98:	or	rcx, rax
0xbb9b:	cmp	rdx, 4
0xbb9f:	jne	0xbb7d


0xbf03:	jmp	0xbf72


0xbf98:	test	rsi, rsi
0xbf9b:	jne	0xbb55


0xbf7b:	mov	rcx, qword ptr [r12 + rdx*8]
0xbf7f:	and	rcx, qword ptr [rdi + rdx*8 + 0xb8]
0xbf87:	mov	qword ptr [r12 + rdx*8], rcx
0xbf8b:	add	rdx, 1
0xbf8f:	or	rsi, rcx
0xbf92:	cmp	rdx, 4
0xbf96:	jne	0xbf7b


0xbb4c:	test	rsi, rsi
0xbb4f:	je	0xb77f


0xbb28:	mov	rdx, qword ptr [rdi + rcx*8]
0xbb2c:	not	rdx
0xbb2f:	or	rdx, qword ptr [r8 + rcx*8 + 0xb8]
0xbb37:	and	rdx, qword ptr [r12 + rcx*8]
0xbb3b:	mov	qword ptr [r12 + rcx*8], rdx
0xbb3f:	add	rcx, 1
0xbb43:	or	rsi, rdx
0xbb46:	cmp	rcx, 4
0xbb4a:	jne	0xbb28


0xbed7:	test	rcx, rcx
0xbeda:	jne	0xbbb0


0xbeb7:	mov	rax, qword ptr [rsi + rdx*8 + 0xb8]
0xbebf:	not	rax
0xbec2:	and	rax, qword ptr [r12 + rdx*8]
0xbec6:	mov	qword ptr [r12 + rdx*8], rax
0xbeca:	add	rdx, 1
0xbece:	or	rcx, rax
0xbed1:	cmp	rdx, 4
0xbed5:	jne	0xbeb7


0xbba1:	test	rcx, rcx
0xbba4:	je	0xb77f


0xbb7d:	mov	rax, qword ptr [rdi + rdx*8 + 0xb8]
0xbb85:	and	rax, qword ptr [rsi + rdx*8]
0xbb89:	not	rax
0xbb8c:	and	rax, qword ptr [r12 + rdx*8]
0xbb90:	mov	qword ptr [r12 + rdx*8], rax
0xbb94:	add	rdx, 1
0xbb98:	or	rcx, rax
0xbb9b:	cmp	rdx, 4
0xbb9f:	jne	0xbb7d


0xbfa1:	jmp	0xb77f


0xbee0:	jmp	0xb77f


0xbcd3:	test	eax, eax
0xbcd5:	jne	0xbdb0


0xbcdb:	mov	rdx, qword ptr [rsp + 0x38]
0xbce0:	add	rbp, 1
0xbce4:	mov	rax, qword ptr [rsp + 8]
0xbce9:	mov	rsi, qword ptr [rsp + 0x20]
0xbcee:	mov	rdi, rdx
0xbcf1:	mov	rax, qword ptr [rax + 0x18]
0xbcf5:	mov	rsi, qword ptr [rax + rsi]
0xbcf9:	call	0x76b0


0xbdb0:	mov	rax, qword ptr [rsp + 0x18]
0xbdb5:	lea	rbx, [rax + 0x10]
0xbdb9:	lea	rax, [rbp + rbp*2]
0xbdbe:	lea	rbp, [rbx + rax*8]
0xbdc2:	nop	word ptr [rax + rax]
0xbdc8:	mov	rdi, qword ptr [rbx]
0xbdcb:	add	rbx, 0x18
0xbdcf:	call	0x19d0


0xbcfe:	test	al, al
0xbd00:	je	0xbdb0


0xbd06:	test	r15, r15
0xbd09:	je	0xbd18


0xbdd4:	cmp	rbp, rbx
0xbdd7:	jne	0xbdc8


0xbdd9:	mov	rdi, qword ptr [rsp + 0x18]
0xbdde:	call	0x19d0


0xbdc8:	mov	rdi, qword ptr [rbx]
0xbdcb:	add	rbx, 0x18
0xbdcf:	call	0x19d0


0xbde3:	jmp	0xba90


0xc203:	test	rbp, rbp
0xc206:	jne	0xba90


0xc20c:	jmp	0xc184


0xc184:	mov	esi, 0x100
0xc189:	mov	edi, 8
0xc18e:	call	0x1bc0


0xc193:	mov	rbx, qword ptr [rsp + 8]
0xc198:	test	rax, rax
0xc19b:	mov	qword ptr [rbx + 0x58], rax
0xc19f:	setne	al
0xc1a2:	jmp	0xba92


0xba92:	mov	rbx, qword ptr [rsp + 0xf8]
0xba9a:	xor	rbx, qword ptr fs:[0x28]
0xbaa3:	jne	0xc1f4


0x106a5:	test	al, al
0x106a7:	jne	0xfdc4


0x106ad:	mov	rdi, qword ptr [rsp + 0x1d8]
0x106b5:	mov	dword ptr [rsp + 0xd0], 0xc
0x106c0:	test	rdi, rdi
0x106c3:	jne	0x105f0


0xfdc4:	mov	rax, qword ptr [r14 + 0x58]
0xfdc8:	test	rax, rax
0xfdcb:	je	0x104e0


0xb7c1:	test	rax, rax
0xb7c4:	mov	r12, rax
0xb7c7:	mov	qword ptr [rsp + 0x80], rax
0xb7cf:	je	0xbfcf


0xbfcf:	mov	rdi, r12
0xbfd2:	call	0x19d0


0xb7d5:	movabs	rax, 0xaaaaaaaaaaaa855
0xb7df:	mov	dword ptr [rsp + 0x6c], 0
0xb7e7:	cmp	rbp, rax
0xb7ea:	jg	0xbfcf


0xb7f0:	lea	rax, [rbp + rbp*2]
0xb7f5:	shl	rax, 3
0xb7f9:	mov	rdi, rax
0xb7fc:	mov	qword ptr [rsp + 0x58], rax
0xb801:	call	0x1c20


0xbfd7:	mov	rax, qword ptr [rsp + 0x18]
0xbfdc:	lea	rbx, [rax + 0x10]
0xbfe0:	lea	rax, [rbp + rbp*2]
0xbfe5:	lea	rbp, [rbx + rax*8]
0xbfe9:	nop	dword ptr [rax]
0xbff0:	mov	rdi, qword ptr [rbx]
0xbff3:	add	rbx, 0x18
0xbff7:	call	0x19d0


0xbffc:	cmp	rbp, rbx
0xbfff:	jne	0xbff0


0xc001:	mov	rdi, qword ptr [rsp + 0x18]
0xc006:	call	0x19d0


0xbff0:	mov	rdi, qword ptr [rbx]
0xbff3:	add	rbx, 0x18
0xbff7:	call	0x19d0


0xc00b:	jmp	0xba90


0xb806:	test	rax, rax
0xb809:	mov	qword ptr [rsp + 0x10], rax
0xb80e:	je	0xbfcf


0xb814:	mov	rax, qword ptr [rsp + 0x10]
0xb819:	sub	rbx, 8
0xb81d:	mov	r12, qword ptr [rsp + 0x40]
0xb822:	pxor	xmm0, xmm0
0xb826:	lea	r14, [rsp + 0x70]
0xb82b:	mov	qword ptr [rsp + 0x20], rbp
0xb830:	mov	byte ptr [rsp + 0x4f], 0
0xb835:	mov	rbp, r15
0xb838:	add	rax, rbx
0xb83b:	mov	qword ptr [rsp + 0x50], r12
0xb840:	add	rbx, rax
0xb843:	mov	qword ptr [rsp + 0x30], rax
0xb848:	mov	rax, qword ptr [rsp + 0x18]
0xb84d:	movaps	xmmword ptr [rsp + 0xd0], xmm0
0xb855:	mov	qword ptr [rsp + 0x38], rbx
0xb85a:	xor	ebx, ebx
0xb85c:	lea	r13, [rax + 8]
0xb860:	lea	rax, [rsp + 0x6c]
0xb865:	movaps	xmmword ptr [rsp + 0xe0], xmm0
0xb86d:	mov	qword ptr [rsp + 0x28], rax
0xb872:	mov	qword ptr [rsp + 0x78], 0
0xb87b:	cmp	qword ptr [r13], 0
0xb880:	jle	0xb8c8


0xb8c8:	mov	rdi, qword ptr [rsp + 0x28]
0xb8cd:	xor	ecx, ecx
0xb8cf:	mov	rsi, rbp
0xb8d2:	mov	rdx, r14
0xb8d5:	call	0x9f40


0xb882:	xor	r15d, r15d
0xb885:	nop	dword ptr [rax]
0xb888:	mov	rax, qword ptr [r13 + 8]
0xb88c:	mov	rdx, qword ptr [rax + r15*8]
0xb890:	mov	rax, qword ptr [rbp + 0x18]
0xb894:	mov	rax, qword ptr [rax + rdx*8]
0xb898:	cmp	rax, -1
0xb89c:	je	0xb8be


0xb8be:	add	r15, 1
0xb8c2:	cmp	qword ptr [r13], r15
0xb8c6:	jg	0xb888


0xb89e:	lea	rdx, [rax + rax*2]
0xb8a2:	mov	rax, qword ptr [rbp + 0x30]
0xb8a6:	mov	rdi, r14
0xb8a9:	lea	rsi, [rax + rdx*8]
0xb8ad:	call	0x9110


0xb888:	mov	rax, qword ptr [r13 + 8]
0xb88c:	mov	rdx, qword ptr [rax + r15*8]
0xb890:	mov	rax, qword ptr [rbp + 0x18]
0xb894:	mov	rax, qword ptr [rax + rdx*8]
0xb898:	cmp	rax, -1
0xb89c:	je	0xb8be


0xb8b2:	test	eax, eax
0xb8b4:	mov	dword ptr [rsp + 0x6c], eax
0xb8b8:	jne	0xbfb8


0xbfb8:	mov	rbp, qword ptr [rsp + 0x20]
0xbfbd:	mov	rdi, qword ptr [rsp + 0x10]
0xbfc2:	call	0x19d0


0xbfc7:	mov	r12, qword ptr [rsp + 0x80]
0xbfcf:	mov	rdi, r12
0xbfd2:	call	0x19d0


0xb8da:	mov	rsi, qword ptr [rsp + 0x10]
0xb8df:	test	rax, rax
0xb8e2:	mov	qword ptr [rsi + rbx*8], rax
0xb8e6:	je	0xc098


0xc098:	mov	ecx, dword ptr [rsp + 0x6c]
0xc09c:	test	ecx, ecx
0xc09e:	je	0xb8ec


0xb8ec:	cmp	byte ptr [rax + 0x68], 0
0xb8f0:	js	0xc010


0xc0a4:	jmp	0xbfb8


0xc010:	mov	rdi, qword ptr [rsp + 0x28]
0xc015:	mov	ecx, 1
0xc01a:	mov	rdx, r14
0xc01d:	mov	rsi, rbp
0xc020:	call	0x9f40


0xb8f6:	mov	rdi, qword ptr [rsp + 0x30]
0xb8fb:	mov	rsi, qword ptr [rsp + 0x38]
0xb900:	mov	qword ptr [rdi + rbx*8], rax
0xb904:	mov	rax, qword ptr [rsp + 0x10]
0xb909:	mov	rax, qword ptr [rax + rbx*8]
0xb90d:	mov	qword ptr [rsi + rbx*8], rax
0xb911:	lea	rdx, [rsp + 0xd0]
0xb919:	xor	eax, eax
0xb91b:	mov	rcx, qword ptr [rdx + rax]
0xb91f:	or	rcx, qword ptr [r12 + rax]
0xb923:	mov	qword ptr [rdx + rax], rcx
0xb927:	add	rax, 8
0xb92b:	cmp	rax, 0x20
0xb92f:	jne	0xb91b


0xb931:	add	rbx, 1
0xb935:	add	r13, 0x18
0xb939:	add	r12, 0x20
0xb93d:	cmp	rbx, qword ptr [rsp + 0x20]
0xb942:	jne	0xb872


0xb91b:	mov	rcx, qword ptr [rdx + rax]
0xb91f:	or	rcx, qword ptr [r12 + rax]
0xb923:	mov	qword ptr [rdx + rax], rcx
0xb927:	add	rax, 8
0xb92b:	cmp	rax, 0x20
0xb92f:	jne	0xb91b


0xb948:	cmp	byte ptr [rsp + 0x4f], 0
0xb94d:	mov	r15, rbp
0xb950:	mov	rbp, qword ptr [rsp + 0x20]
0xb955:	mov	qword ptr [rsp + 0x20], rdx
0xb95a:	jne	0xc0a9


0xb872:	mov	qword ptr [rsp + 0x78], 0
0xb87b:	cmp	qword ptr [r13], 0
0xb880:	jle	0xb8c8


0xb960:	mov	esi, 0x100
0xb965:	mov	edi, 8
0xb96a:	call	0x1bc0


0xc0a9:	mov	esi, 0x200
0xc0ae:	mov	edi, 8
0xc0b3:	call	0x1bc0


0xc0b8:	mov	r11, rax
0xc0bb:	mov	rax, qword ptr [rsp + 8]
0xc0c0:	test	r11, r11
0xc0c3:	mov	qword ptr [rax + 0x60], r11
0xc0c7:	je	0xbfbd


0xbfbd:	mov	rdi, qword ptr [rsp + 0x10]
0xbfc2:	call	0x19d0


0xc0cd:	mov	r13, qword ptr [rsp + 0x40]
0xc0d2:	mov	r10, qword ptr [rsp + 0x10]
0xc0d7:	mov	r12, r11
0xc0da:	mov	r14, qword ptr [rsp + 0x30]
0xc0df:	mov	rdx, qword ptr [rsp + 0x20]
0xc0e4:	xor	ebx, ebx
0xc0e6:	add	r13, 0x20
0xc0ea:	mov	rax, qword ptr [rdx + rbx]
0xc0ee:	test	rax, rax
0xc0f1:	je	0xc10f


0xc10f:	add	rbx, 8
0xc113:	add	r12, 0x200
0xc11a:	cmp	rbx, 0x20
0xc11e:	jne	0xc0ea


0xc0f3:	mov	rsi, r12
0xc0f6:	mov	ecx, 1
0xc0fb:	test	al, 1
0xc0fd:	jne	0xc1ac


0xc120:	jmp	0xb9de


0xc0ea:	mov	rax, qword ptr [rdx + rbx]
0xc0ee:	test	rax, rax
0xc0f1:	je	0xc10f


0xc103:	add	rcx, rcx
0xc106:	add	rsi, 8
0xc10a:	shr	rax, 1
0xc10d:	jne	0xc0fb


0xc1ac:	mov	rdi, qword ptr [rsp + 0x18]
0xc1b1:	test	qword ptr [rdi + rbx + 0x1800], rcx
0xc1b9:	jne	0xc1f0


0xb9de:	test	byte ptr [rsp + 0xd1], 4
0xb9e6:	je	0xba22


0xc0fb:	test	al, 1
0xc0fd:	jne	0xc1ac


0xc1bb:	lea	r9, [r13 + rbx]
0xc1c0:	xor	r8d, r8d
0xc1c3:	mov	r15, qword ptr [r9]
0xc1c6:	add	r8, 1
0xc1ca:	add	r9, 0x20
0xc1ce:	mov	rdi, r8
0xc1d1:	and	r15, rcx
0xc1d4:	test	r15, r15
0xc1d7:	je	0xc1c3


0xc1f0:	xor	edi, edi
0xc1f2:	jmp	0xc1d9


0xba22:	mov	rdi, qword ptr [rsp + 0x10]
0xba27:	call	0x19d0


0xb9e8:	xor	eax, eax
0xb9ea:	mov	rdx, qword ptr [rsp + 0x50]
0xb9ef:	jmp	0xb9fe


0xc1c3:	mov	r15, qword ptr [r9]
0xc1c6:	add	r8, 1
0xc1ca:	add	r9, 0x20
0xc1ce:	mov	rdi, r8
0xc1d1:	and	r15, rcx
0xc1d4:	test	r15, r15
0xc1d7:	je	0xc1c3


0xc1d9:	mov	r8, qword ptr [r10 + rdi*8]
0xc1dd:	mov	qword ptr [rsi], r8
0xc1e0:	mov	rdi, qword ptr [r14 + rdi*8]
0xc1e4:	mov	qword ptr [rsi + 0x800], rdi
0xc1eb:	jmp	0xc103


0xb9fe:	test	qword ptr [rdx], 0x400
0xba05:	je	0xb9f1


0xb9f1:	add	rax, 1
0xb9f5:	add	rdx, 0x20
0xb9f9:	cmp	rax, rbp
0xb9fc:	je	0xba22


0xba07:	mov	rbx, qword ptr [rsp + 0x38]
0xba0c:	cmp	byte ptr [rsp + 0x4f], 0
0xba11:	mov	rax, qword ptr [rbx + rax*8]
0xba15:	mov	qword ptr [r11 + 0x50], rax
0xba19:	je	0xba22


0xba1b:	mov	qword ptr [r11 + 0x850], rax
0xba22:	mov	rdi, qword ptr [rsp + 0x10]
0xba27:	call	0x19d0


0xba2c:	mov	rdi, qword ptr [rsp + 0x80]
0xba34:	call	0x19d0


0xba39:	mov	rax, qword ptr [rsp + 0x18]
0xba3e:	mov	rbx, qword ptr [rsp + 0x58]
0xba43:	lea	rbp, [rax + 0x10]
0xba47:	add	rbx, rbp
0xba4a:	mov	rdi, qword ptr [rbp]
0xba4e:	add	rbp, 0x18
0xba52:	call	0x19d0


0xba57:	cmp	rbx, rbp
0xba5a:	jne	0xba4a


0xba5c:	mov	rdi, qword ptr [rsp + 0x18]
0xba61:	call	0x19d0


0xba4a:	mov	rdi, qword ptr [rbp]
0xba4e:	add	rbp, 0x18
0xba52:	call	0x19d0


0xba66:	mov	eax, 1
0xba6b:	jmp	0xba92


0xb96f:	mov	r11, rax
0xb972:	mov	rax, qword ptr [rsp + 8]
0xb977:	test	r11, r11
0xb97a:	mov	qword ptr [rax + 0x58], r11
0xb97e:	je	0xbfbd


0xb984:	mov	rbx, qword ptr [rsp + 0x40]
0xb989:	mov	r12, qword ptr [rsp + 0x10]
0xb98e:	xor	r9d, r9d
0xb991:	mov	r13, qword ptr [rsp + 0x30]
0xb996:	mov	rdx, qword ptr [rsp + 0x20]
0xb99b:	add	rbx, 0x20
0xb99f:	mov	rax, qword ptr [rdx + r9]
0xb9a3:	test	rax, rax
0xb9a6:	je	0xb9d4


0xb9d4:	add	r9, 8
0xb9d8:	cmp	r9, 0x20
0xb9dc:	jne	0xb99f


0xb9a8:	mov	rsi, r9
0xb9ab:	mov	ecx, 1
0xb9b0:	shl	rsi, 6
0xb9b4:	add	rsi, r11
0xb9b7:	nop	word ptr [rax + rax]
0xb9c0:	test	al, 1
0xb9c2:	jne	0xc128


0xb99f:	mov	rax, qword ptr [rdx + r9]
0xb9a3:	test	rax, rax
0xb9a6:	je	0xb9d4


0xb9c8:	add	rcx, rcx
0xb9cb:	add	rsi, 8
0xb9cf:	shr	rax, 1
0xb9d2:	jne	0xb9c0


0xc128:	mov	rdi, qword ptr [rsp + 0x18]
0xc12d:	test	qword ptr [rdi + r9 + 0x1800], rcx
0xc135:	jne	0xc1a7


0xb9c0:	test	al, 1
0xb9c2:	jne	0xc128


0xc137:	lea	rdi, [rbx + r9]
0xc13b:	xor	r8d, r8d
0xc13e:	nop	
0xc140:	mov	r10, qword ptr [rdi]
0xc143:	add	r8, 1
0xc147:	add	rdi, 0x20
0xc14b:	and	r10, rcx
0xc14e:	test	r10, r10
0xc151:	je	0xc140


0xc1a7:	xor	r8d, r8d
0xc1aa:	jmp	0xc157


0xc140:	mov	r10, qword ptr [rdi]
0xc143:	add	r8, 1
0xc147:	add	rdi, 0x20
0xc14b:	and	r10, rcx
0xc14e:	test	r10, r10
0xc151:	je	0xc140


0xc153:	shl	r8, 3
0xc157:	test	qword ptr [r15 + r9 + 0xb8], rcx
0xc15f:	je	0xc16e


0xc157:	test	qword ptr [r15 + r9 + 0xb8], rcx
0xc15f:	je	0xc16e


0xc16e:	mov	rdi, qword ptr [r12 + r8]
0xc172:	mov	qword ptr [rsi], rdi
0xc175:	jmp	0xb9c8


0xc161:	mov	rdi, qword ptr [r13 + r8]
0xc166:	mov	qword ptr [rsi], rdi
0xc169:	jmp	0xb9c8


0xc025:	mov	rdi, qword ptr [rsp + 0x30]
0xc02a:	test	rax, rax
0xc02d:	mov	qword ptr [rdi + rbx*8], rax
0xc031:	je	0xbfa6


0xbfa6:	mov	edx, dword ptr [rsp + 0x6c]
0xbfaa:	test	edx, edx
0xbfac:	je	0xc037


0xc037:	mov	rdi, qword ptr [rsp + 0x10]
0xc03c:	cmp	rax, qword ptr [rdi + rbx*8]
0xc040:	je	0xc05b


0xc05b:	mov	rdi, qword ptr [rsp + 0x28]
0xc060:	mov	rsi, rbp
0xc063:	mov	ecx, 2
0xc068:	mov	rdx, r14
0xc06b:	call	0x9f40


0xc042:	movzx	edi, byte ptr [rsp + 0x4f]
0xc047:	cmp	dword ptr [rbp + 0xb4], 2
0xc04e:	mov	eax, 1
0xc053:	cmovge	edi, eax
0xc056:	mov	byte ptr [rsp + 0x4f], dil
0xc05b:	mov	rdi, qword ptr [rsp + 0x28]
0xc060:	mov	rsi, rbp
0xc063:	mov	ecx, 2
0xc068:	mov	rdx, r14
0xc06b:	call	0x9f40


0xc070:	mov	rsi, qword ptr [rsp + 0x38]
0xc075:	test	rax, rax
0xc078:	mov	qword ptr [rsi + rbx*8], rax
0xc07c:	jne	0xb911


0xc082:	mov	eax, dword ptr [rsp + 0x6c]
0xc086:	test	eax, eax
0xc088:	je	0xb911


0xb911:	lea	rdx, [rsp + 0xd0]
0xb919:	xor	eax, eax
0xb91b:	mov	rcx, qword ptr [rdx + rax]
0xb91f:	or	rcx, qword ptr [r12 + rax]
0xb923:	mov	qword ptr [rdx + rax], rcx
0xb927:	add	rax, 8
0xb92b:	cmp	rax, 0x20
0xb92f:	jne	0xb91b


0xc08e:	jmp	0xbfb8


0xbd80:	test	rax, rax
0xbd83:	mov	qword ptr [rbx + 0x10], rax
0xbd87:	je	0xba6d


0xba6d:	test	rbp, rbp
0xba70:	mov	qword ptr [rbx + 8], 0
0xba78:	mov	qword ptr [rbx], 0
0xba7f:	jne	0xbdb0


0xbd8d:	mov	qword ptr [rax], r13
0xbd90:	add	rbp, 1
0xbd94:	pxor	xmm0, xmm0
0xbd98:	movaps	xmmword ptr [r12], xmm0
0xbd9d:	movaps	xmmword ptr [r12 + 0x10], xmm0
0xbda3:	jmp	0xb77f


0xba85:	mov	rdi, qword ptr [rsp + 0x18]
0xba8a:	call	0x19d0


0xf31c:	test	rax, rax
0xf31f:	mov	qword ptr [rsp + 0x50], rax
0xf324:	je	0xf604


0xf604:	mov	eax, 0xc
0xf609:	jmp	0xf5e5


0xf32a:	lea	rcx, [rsp + 0x40]
0xf32f:	mov	qword ptr [rax], rbx
0xf332:	mov	rdx, r15
0xf335:	mov	rsi, r13
0xf338:	mov	rdi, r14
0xf33b:	mov	qword ptr [rsp + 0x10], rcx
0xf340:	call	0x10d40


0xf5e5:	mov	rdx, qword ptr [rsp + 0x58]
0xf5ea:	xor	rdx, qword ptr fs:[0x28]
0xf5f3:	jne	0xf60b


0xf5f5:	add	rsp, 0x68
0xf5f9:	pop	rbx
0xf5fa:	pop	rbp
0xf5fb:	pop	r12
0xf5fd:	pop	r13
0xf5ff:	pop	r14
0xf601:	pop	r15
0xf603:	ret	


0xf60b:	call	0x1ad0


0xf345:	test	eax, eax
0xf347:	jne	0xf5d5


0xf34d:	lea	rax, [r15*8]
0xf355:	test	r15, r15
0xf358:	mov	dword ptr [rsp + 0x2c], 0
0xf360:	mov	qword ptr [rsp + 8], rax
0xf365:	lea	rax, [r13 + 0x30]
0xf369:	mov	qword ptr [rsp + 0x38], rax
0xf36e:	jle	0xf577


0xf5d5:	mov	rdi, qword ptr [rsp + 0x50]
0xf5da:	mov	dword ptr [rsp], eax
0xf5dd:	call	0x19d0


0xf577:	xor	eax, eax
0xf579:	jmp	0xf5d5


0xf374:	mov	rdi, qword ptr [r13]
0xf378:	mov	rax, qword ptr [rsp + 8]
0xf37d:	cmp	qword ptr [rdi + rax], 0
0xf382:	je	0xf598


0xf598:	mov	rax, qword ptr [rsp]
0xf59c:	add	dword ptr [rsp + 0x2c], 1
0xf5a1:	mov	ecx, dword ptr [rsp + 0x2c]
0xf5a5:	cmp	dword ptr [rax + 0xe0], ecx
0xf5ab:	jge	0xf3a4


0xf388:	mov	rax, qword ptr [rsp]
0xf38c:	mov	dword ptr [rsp + 0x2c], 0
0xf394:	mov	ecx, dword ptr [rsp + 0x2c]
0xf398:	cmp	dword ptr [rax + 0xe0], ecx
0xf39e:	jl	0xf5b1


0xf5b1:	mov	rdx, qword ptr [rsp + 8]
0xf5b6:	xor	esi, esi
0xf5b8:	call	0x1b60


0xf3a4:	mov	rbx, qword ptr [rsp]
0xf3a8:	mov	rdi, qword ptr [rsp + 8]
0xf3ad:	sub	r15, 1
0xf3b1:	mov	qword ptr [rsp + 0x48], 0
0xf3ba:	mov	rax, qword ptr [rbx + 0xb8]
0xf3c1:	mov	r12, qword ptr [rax + rdi - 8]
0xf3c6:	test	r12, r12
0xf3c9:	je	0xf550


0xf550:	mov	rcx, qword ptr [rsp + 0x10]
0xf555:	mov	rdi, qword ptr [rsp]
0xf559:	mov	rdx, r15
0xf55c:	mov	rsi, r13
0xf55f:	call	0x10d40


0xf3cf:	cmp	qword ptr [r12 + 0x28], 0
0xf3d5:	mov	r14, qword ptr [rbx + 0x98]
0xf3dc:	jle	0xf550


0xf3e2:	xor	ebx, ebx
0xf3e4:	jmp	0xf48b


0xf48b:	mov	rax, qword ptr [r12 + 0x30]
0xf490:	mov	rsi, qword ptr [r14]
0xf493:	mov	rbp, qword ptr [rax + rbx*8]
0xf497:	mov	r9, rbp
0xf49a:	shl	r9, 4
0xf49e:	add	rsi, r9
0xf4a1:	test	byte ptr [rsi + 0xa], 0x10
0xf4a5:	je	0xf3f0


0xf3f0:	mov	rdi, qword ptr [rsp]
0xf3f4:	mov	rdx, r15
0xf3f7:	call	0xaac0


0xf4ab:	mov	rcx, qword ptr [rsp]
0xf4af:	mov	rax, qword ptr [r13 + 0x18]
0xf4b3:	mov	r8, r15
0xf4b6:	mov	rdx, rbp
0xf4b9:	mov	qword ptr [rsp + 0x18], r9
0xf4be:	mov	r11, qword ptr [rcx + 0x98]
0xf4c5:	mov	qword ptr [rsp + 0x20], rax
0xf4ca:	mov	rdi, qword ptr [r11]
0xf4cd:	lea	rsi, [r11 + 0xd8]
0xf4d4:	mov	qword ptr [rsp + 0x30], r11
0xf4d9:	call	0xd3a0


0xf4de:	movsxd	r10, eax
0xf4e1:	mov	r9, qword ptr [rsp + 0x18]
0xf4e6:	cmp	r10d, 0
0xf4ea:	jle	0xf580


0xf580:	jne	0xf432


0xf4f0:	movsxd	rax, r10d
0xf4f3:	add	rax, r15
0xf4f6:	cmp	qword ptr [rsp + 0x20], rax
0xf4fb:	jl	0xf432


0xf586:	mov	rsi, qword ptr [r14]
0xf589:	add	rsi, r9
0xf58c:	jmp	0xf3f0


0xf432:	cmp	qword ptr [r13 + 0x28], 0
0xf437:	je	0xf467


0xf501:	mov	rdx, qword ptr [r13]
0xf505:	mov	r11, qword ptr [rsp + 0x30]
0xf50a:	mov	rax, qword ptr [rdx + rax*8]
0xf50e:	test	rax, rax
0xf511:	je	0xf586


0xf467:	mov	rdi, qword ptr [rsp + 0x10]
0xf46c:	mov	rsi, rbp
0xf46f:	call	0x76b0


0xf439:	mov	rax, qword ptr [r14 + 0x18]
0xf43d:	sub	rsp, 8
0xf441:	lea	rsi, [r13 + 0x28]
0xf445:	lea	r8, [r10 + r15]
0xf449:	mov	r9, rbp
0xf44c:	mov	rcx, qword ptr [rax + rbp*8]
0xf450:	push	r15
0xf452:	mov	rdx, qword ptr [rsp + 0x48]
0xf457:	mov	rdi, qword ptr [rsp + 0x10]
0xf45c:	call	0x8ea0


0xf513:	mov	rdx, qword ptr [r11 + 0x18]
0xf517:	mov	rdi, qword ptr [rax + 0x10]
0xf51b:	lea	rsi, [rax + 0x18]
0xf51f:	mov	qword ptr [rsp + 0x18], r9
0xf524:	mov	rdx, qword ptr [rdx + rbp*8]
0xf528:	call	0x8bf0


0xf52d:	test	rax, rax
0xf530:	jne	0xf432


0xf536:	mov	r9, qword ptr [rsp + 0x18]
0xf53b:	mov	rsi, qword ptr [r14]
0xf53e:	add	rsi, r9
0xf541:	jmp	0xf3f0


0xf461:	test	al, al
0xf463:	pop	rdx
0xf464:	pop	rcx
0xf465:	jne	0xf47c


0xf47c:	add	rbx, 1
0xf480:	cmp	rbx, qword ptr [r12 + 0x28]
0xf485:	jge	0xf550


0xf474:	test	al, al
0xf476:	je	0xf5d0


0xf5d0:	mov	eax, 0xc
0xf5d5:	mov	rdi, qword ptr [rsp + 0x50]
0xf5da:	mov	dword ptr [rsp], eax
0xf5dd:	call	0x19d0


0xf3fc:	test	al, al
0xf3fe:	je	0xf47c


0xf400:	mov	rax, qword ptr [r13]
0xf404:	mov	rcx, qword ptr [rsp + 8]
0xf409:	mov	rax, qword ptr [rax + rcx]
0xf40d:	test	rax, rax
0xf410:	je	0xf47c


0xf412:	mov	rdx, qword ptr [r14 + 0x18]
0xf416:	mov	rdi, qword ptr [rax + 0x10]
0xf41a:	lea	rsi, [rax + 0x18]
0xf41e:	mov	rdx, qword ptr [rdx + rbp*8]
0xf422:	call	0x8bf0


0xf427:	test	rax, rax
0xf42a:	je	0xf47c


0xf42c:	mov	r10d, 1
0xf432:	cmp	qword ptr [r13 + 0x28], 0
0xf437:	je	0xf467


0xf564:	test	eax, eax
0xf566:	jne	0xf5d5


0xf568:	sub	qword ptr [rsp + 8], 8
0xf56e:	test	r15, r15
0xf571:	jne	0xf374


0xf5bd:	mov	rdi, qword ptr [rsp + 0x50]
0xf5c2:	call	0x19d0


0xf5c7:	xor	eax, eax
0xf5c9:	jmp	0xf5e5


0xf5e2:	mov	eax, dword ptr [rsp]
0xf5e5:	mov	rdx, qword ptr [rsp + 0x58]
0xf5ea:	xor	rdx, qword ptr fs:[0x28]
0xf5f3:	jne	0xf60b


0xffe3:	mov	rdi, qword ptr [rsp + 0x110]
0xffeb:	mov	r15d, eax
0xffee:	call	0x19d0


0xfff3:	test	r15d, r15d
0xfff6:	jne	0x10c14


0xfffc:	cmp	qword ptr [r12], 0
0x10001:	jne	0x10c73


0x10c14:	mov	r14, qword ptr [rsp + 0x18]
0x10c19:	mov	eax, r15d
0x10c1c:	mov	rdi, r12
0x10c1f:	mov	dword ptr [rsp + 8], eax
0x10c23:	call	0x19d0


0x10007:	cmp	qword ptr [rbp], 0
0x1000c:	jne	0x10c73


0x10c73:	mov	r15, qword ptr [rsp + 0x10]
0x10c78:	mov	rcx, qword ptr [rsp + 8]
0x10c7d:	mov	rdx, rbp
0x10c80:	mov	rsi, r12
0x10c83:	mov	qword ptr [rsp + 0x20], r14
0x10c88:	mov	rdi, r15
0x10c8b:	call	0xa400


0x10012:	mov	rdx, qword ptr [rsp + 0x1d8]
0x1001a:	nop	word ptr [rax + rax]
0x10020:	sub	r14, 1
0x10024:	cmp	r14, -1
0x10028:	je	0x10aeb


0x10aeb:	mov	rdi, r12
0x10aee:	call	0x19d0


0x1002e:	mov	rax, qword ptr [rdx + r14*8]
0x10032:	test	rax, rax
0x10035:	je	0x10020


0x10020:	sub	r14, 1
0x10024:	cmp	r14, -1
0x10028:	je	0x10aeb


0x10037:	test	byte ptr [rax + 0x68], 0x10
0x1003b:	je	0x10020


0x1003d:	mov	rsi, qword ptr [rax + 0x10]
0x10041:	mov	rdi, qword ptr [rsp]
0x10045:	lea	rdx, [rax + 0x18]
0x10049:	mov	rcx, r14
0x1004c:	call	0xabd0


0x10051:	mov	r13, rax
0x10054:	lea	rax, [r14 + 1]
0x10058:	mov	qword ptr [rsp + 8], rax
0x1005d:	jmp	0xff90


0xff90:	mov	rax, qword ptr [rsp + 8]
0xff95:	xor	esi, esi
0xff97:	mov	rdi, rbp
0xff9a:	lea	rdx, [rax*8]
0xffa2:	call	0x1b60


0x10c90:	mov	rdi, rbp
0x10c93:	mov	dword ptr [rsp + 8], eax
0x10c97:	call	0x19d0


0x10c9c:	mov	eax, dword ptr [rsp + 8]
0x10ca0:	test	eax, eax
0x10ca2:	je	0x10872


0x10872:	mov	rdi, qword ptr [rsp + 0x1d8]
0x1087a:	call	0x19d0


0x10ca8:	xor	r14d, r14d
0x10cab:	jmp	0x10c1c


0x10c1c:	mov	rdi, r12
0x10c1f:	mov	dword ptr [rsp + 8], eax
0x10c23:	call	0x19d0


0x10c28:	mov	rdi, r14
0x10c2b:	call	0x19d0


0x10c30:	mov	eax, dword ptr [rsp + 8]
0x10c34:	cmp	eax, 1
0x10c37:	je	0x10540


0x1087f:	mov	rax, qword ptr [rsp + 0x20]
0x10884:	mov	qword ptr [rsp + 0x1d8], r12
0x1088c:	mov	qword ptr [rsp + 0x1d0], r13
0x10894:	mov	qword ptr [rsp + 0x1c8], rax
0x1089c:	cmp	qword ptr [rsp + 0x270], 0
0x108a5:	je	0x10160


0x10af3:	mov	rdi, rbp
0x10af6:	call	0x19d0


0x10afb:	jmp	0x10540


0x1084a:	mov	rdi, qword ptr [rsp + 0x110]
0x10852:	mov	dword ptr [rsp + 8], eax
0x10856:	call	0x19d0


0x1085b:	mov	eax, dword ptr [rsp + 8]
0x1085f:	test	eax, eax
0x10861:	jne	0x10ca8


0x10867:	cmp	qword ptr [r12], 0
0x1086c:	je	0x10533


0x10533:	mov	rdi, r12
0x10536:	call	0x19d0


0x1143e:	test	eax, eax
0x11440:	jne	0x1154e


0x11446:	mov	rsi, qword ptr [rbx + 8]
0x1144a:	mov	rdx, qword ptr [rsp + 0x60]
0x1144f:	test	rsi, rsi
0x11452:	je	0x1146d


0x1146d:	mov	r11, qword ptr [rsp + 0x38]
0x11472:	mov	rax, qword ptr [rsp + 0x18]
0x11477:	mov	rdi, qword ptr [rsp + 0x88]
0x1147f:	lea	r9, [r11 + 0x30]
0x11483:	mov	qword ptr [rdx + rax], r15
0x11487:	mov	rdx, r13
0x1148a:	mov	rsi, r9
0x1148d:	call	0x8bf0


0x11454:	lea	rcx, [rbp + 1]
0x11458:	mov	rdi, r12
0x1145b:	call	0xa400


0x11460:	test	eax, eax
0x11462:	jne	0x1154e


0x11468:	mov	rdx, qword ptr [rsp + 0x60]
0x1146d:	mov	r11, qword ptr [rsp + 0x38]
0x11472:	mov	rax, qword ptr [rsp + 0x18]
0x11477:	mov	rdi, qword ptr [rsp + 0x88]
0x1147f:	lea	r9, [r11 + 0x30]
0x11483:	mov	qword ptr [rdx + rax], r15
0x11487:	mov	rdx, r13
0x1148a:	mov	rsi, r9
0x1148d:	call	0x8bf0


0x11492:	sub	rax, 1
0x11496:	mov	rdx, rax
0x11499:	js	0x114a7


0x114a7:	mov	rcx, qword ptr [rsp + 8]
0x114ac:	lea	rax, [r13 + r13*4]
0x114b1:	mov	rdx, qword ptr [rcx + 0xd8]
0x114b8:	lea	rax, [rdx + rax*8]
0x114bc:	nop	dword ptr [rax]
0x114c0:	add	r13, 1
0x114c4:	cmp	byte ptr [rax + 0x20], 0
0x114c8:	lea	r15, [rax + 0x28]
0x114cc:	je	0x11500


0x1149b:	lea	rdi, [r11 + 0x28]
0x1149f:	mov	rsi, r9
0x114a2:	call	0x8d70


0x14fda:	test	rax, rax
0x14fdd:	mov	qword ptr [rbx + 0x20], rax
0x14fe1:	je	0x15090


0x15090:	mov	ebp, 0xc
0x15095:	pop	rbx
0x15096:	mov	eax, ebp
0x15098:	pop	rbp
0x15099:	pop	r12
0x1509b:	pop	r13
0x1509d:	pop	r14
0x1509f:	ret	


0x14fe7:	mov	r13, rbp
0x14fea:	shl	r13, 0x15
0x14fee:	and	r13d, 0x400000
0x14ff5:	or	r13, r14
0x14ff8:	test	bpl, 4
0x14ffc:	jne	0x15060


0x14ffe:	and	byte ptr [rbx + 0x38], 0x7f
0x15002:	movzx	edx, byte ptr [rbx + 0x38]
0x15006:	shr	ebp, 3
0x15009:	mov	rdi, r12
0x1500c:	and	ebp, 1
0x1500f:	mov	qword ptr [rbx + 0x28], 0
0x15017:	shl	ebp, 4
0x1501a:	and	edx, 0xffffffef
0x1501d:	or	ebp, edx
0x1501f:	mov	byte ptr [rbx + 0x38], bpl
0x15023:	call	0x1ab0


0x15060:	and	r13, 0xffffffffffffffbf
0x15064:	or	byte ptr [rbx + 0x38], 0x80
0x15068:	or	r13, 0x100
0x1506f:	jmp	0x15002


0x15002:	movzx	edx, byte ptr [rbx + 0x38]
0x15006:	shr	ebp, 3
0x15009:	mov	rdi, r12
0x1500c:	and	ebp, 1
0x1500f:	mov	qword ptr [rbx + 0x28], 0
0x15017:	shl	ebp, 4
0x1501a:	and	edx, 0xffffffef
0x1501d:	or	ebp, edx
0x1501f:	mov	byte ptr [rbx + 0x38], bpl
0x15023:	call	0x1ab0


0x15028:	mov	rcx, r13
0x1502b:	mov	rdx, rax
0x1502e:	mov	rsi, r12
0x15031:	mov	rdi, rbx
0x15034:	call	0x137a0


0x15039:	cmp	eax, 0x10
0x1503c:	mov	ebp, eax
0x1503e:	je	0x15078


0x15078:	mov	ebp, 8
0x1507d:	mov	rdi, qword ptr [rbx + 0x20]
0x15081:	call	0x19d0


0x15040:	test	eax, eax
0x15042:	jne	0x1507d


0x15044:	mov	rdi, rbx
0x15047:	call	0x14920


0x1507d:	mov	rdi, qword ptr [rbx + 0x20]
0x15081:	call	0x19d0


0x1504c:	pop	rbx
0x1504d:	mov	eax, ebp
0x1504f:	pop	rbp
0x15050:	pop	r12
0x15052:	pop	r13
0x15054:	pop	r14
0x15056:	ret	


0x15086:	mov	qword ptr [rbx + 0x20], 0
0x1508e:	jmp	0x1504c


0x152fc:	mov	ebx, dword ptr [rbp]
0x152ff:	mov	rdi, rbp
0x15302:	mov	r12, rax
0x15305:	call	0x15410


0x1e34:	lea	rsi, [rip + 0x142a5]
0x1e3b:	lea	rdi, [rip + 0x141cc]
0x1e42:	call	0x1a80


0x1a80:	jmp	qword ptr [rip + 0x21936a]




0x1537b:	mov	rdx, rax
0x1537e:	mov	eax, 1
0x15383:	test	rdx, rdx
0x15386:	je	0x153a5


0x153a5:	add	rsp, 8
0x153a9:	ret	


0x15388:	lea	rdi, [rip + 0x1f61]
0x1538f:	mov	ecx, 2
0x15394:	mov	rsi, rdx
0x15397:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x15397:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x15399:	seta	cl
0x1539c:	sbb	cl, 0
0x1539f:	xor	eax, eax
0x153a1:	test	cl, cl
0x153a3:	jne	0x153b0


0x153b0:	lea	rdi, [rip + 0x1f3b]
0x153b7:	mov	ecx, 6
0x153bc:	mov	rsi, rdx
0x153bf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x153bf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x153c1:	seta	al
0x153c4:	sbb	al, 0
0x153c6:	test	al, al
0x153c8:	setne	al
0x153cb:	add	rsp, 8
0x153cf:	ret	


0x709c:	test	al, al
0x709e:	jne	0x70b0


0x70a0:	movzx	eax, byte ptr [r13]
0x70a5:	mov	ebp, 1
0x70aa:	mov	dword ptr [rbx], eax
0x70ac:	nop	dword ptr [rax]
0x70b0:	mov	rdx, qword ptr [rsp + 8]
0x70b5:	xor	rdx, qword ptr fs:[0x28]
0x70be:	mov	rax, rbp
0x70c1:	jne	0x70ce


0x138d7:	movzx	edx, byte ptr [rax]
0x138da:	and	edx, 0xffffffdf
0x138dd:	cmp	dl, 0x55
0x138e0:	jne	0x13930


0x138e2:	movzx	edx, byte ptr [rax + 1]
0x138e6:	and	edx, 0xffffffdf
0x138e9:	cmp	dl, 0x54
0x138ec:	jne	0x13930


0x13930:	movzx	eax, byte ptr [rbx + 0xb0]
0x13937:	mov	edx, eax
0x13939:	and	edx, 0xfffffff7
0x1393c:	cmp	dword ptr [rbx + 0xb4], 1
0x13943:	mov	byte ptr [rbx + 0xb0], dl
0x13949:	jle	0x1395e


0x138ee:	movzx	edx, byte ptr [rax + 2]
0x138f2:	and	edx, 0xffffffdf
0x138f5:	cmp	dl, 0x46
0x138f8:	jne	0x13930


0x1395e:	cmp	qword ptr [rbx], 0
0x13962:	je	0x13ea6


0x1394b:	test	al, 4
0x1394d:	je	0x13eb3


0x138fa:	xor	edx, edx
0x138fc:	cmp	byte ptr [rax + 3], 0x2d
0x13900:	lea	rdi, [rip + 0x323f]
0x13907:	mov	ecx, 2
0x1390c:	sete	dl
0x1390f:	lea	rsi, [rax + rdx + 3]
0x13914:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x13968:	cmp	qword ptr [rbx + 0x40], 0
0x1396d:	je	0x13ea6


0x13eb3:	mov	esi, 1
0x13eb8:	mov	edi, 0x20
0x13ebd:	call	0x1bc0


0x13953:	lea	rax, [rip + 0x3746]
0x1395a:	mov	qword ptr [rbx + 0x78], rax
0x1395e:	cmp	qword ptr [rbx], 0
0x13962:	je	0x13ea6


0x13914:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x13916:	seta	al
0x13919:	sbb	al, 0
0x1391b:	test	al, al
0x1391d:	jne	0x13930


0x13973:	mov	rax, qword ptr [rsp + 0x18]
0x13978:	lea	rbp, [rsp + 0x80]
0x13980:	mov	ecx, 0x12
0x13985:	mov	dword ptr [rsp + 0x4c], 0
0x1398d:	lea	r8, [rbp + 8]
0x13991:	and	eax, 0x400000
0x13996:	mov	qword ptr [rsp + 0x20], rax
0x1399b:	mov	rax, qword ptr [rsp + 8]
0x139a0:	setne	dl
0x139a3:	mov	rdi, r8
0x139a6:	mov	rsi, qword ptr [rax + 0x28]
0x139aa:	xor	eax, eax
0x139ac:	rep stosq	qword ptr [rdi], rax


0x1391f:	or	byte ptr [rbx + 0xb0], 4
0x13926:	nop	word ptr cs:[rax + rax]
0x13930:	movzx	eax, byte ptr [rbx + 0xb0]
0x13937:	mov	edx, eax
0x13939:	and	edx, 0xfffffff7
0x1393c:	cmp	dword ptr [rbx + 0xb4], 1
0x13943:	mov	byte ptr [rbx + 0xb0], dl
0x13949:	jle	0x1395e


0x139ac:	rep stosq	qword ptr [rdi], rax


0x139af:	mov	rax, qword ptr [rsp + 0x10]
0x139b4:	mov	rdi, qword ptr [rsp]
0x139b8:	test	rsi, rsi
0x139bb:	mov	byte ptr [rsp + 0x108], dl
0x139c2:	mov	ecx, dword ptr [rbx + 0xb4]
0x139c8:	setne	r12b
0x139cc:	mov	qword ptr [rsp + 0xf8], rsi
0x139d4:	mov	qword ptr [rsp + 0x80], rax
0x139dc:	movzx	eax, byte ptr [rbx + 0xb0]
0x139e3:	or	r12d, edx
0x139e6:	mov	qword ptr [rsp + 0xd8], rdi
0x139ee:	mov	qword ptr [rsp + 0xd0], rdi
0x139f6:	mov	esi, r12d
0x139f9:	mov	byte ptr [rsp + 0x10b], r12b
0x13a01:	mov	dword ptr [rsp + 0x110], ecx
0x13a08:	mov	qword ptr [rsp + 0xe8], rdi
0x13a10:	mov	qword ptr [rsp + 0xe0], rdi
0x13a18:	mov	edx, eax
0x13a1a:	shr	al, 3
0x13a1d:	shr	dl, 2
0x13a20:	and	eax, 1
0x13a23:	and	edx, 1
0x13a26:	test	rdi, rdi
0x13a29:	mov	byte ptr [rsp + 0x10a], al
0x13a30:	mov	byte ptr [rsp + 0x109], dl
0x13a37:	jne	0x13e75


0x13a3d:	test	sil, sil
0x13a40:	je	0x13a4f


0x13e75:	mov	rsi, qword ptr [rsp + 0x28]
0x13e7a:	mov	rdi, rbp
0x13e7d:	call	0x75a0


0x13a4f:	cmp	qword ptr [rsp + 0x20], 0
0x13a55:	mov	rax, qword ptr [rsp + 0x10]
0x13a5a:	mov	qword ptr [rsp + 0x88], rax
0x13a62:	je	0x13b65


0x13a42:	mov	rax, qword ptr [rsp + 0x88]
0x13a4a:	mov	qword ptr [rsp + 0x10], rax
0x13a4f:	cmp	qword ptr [rsp + 0x20], 0
0x13a55:	mov	rax, qword ptr [rsp + 0x10]
0x13a5a:	mov	qword ptr [rsp + 0x88], rax
0x13a62:	je	0x13b65


0x13b65:	cmp	ecx, 1
0x13b68:	jg	0x1451a


0x13a68:	cmp	ecx, 1
0x13a6b:	jle	0x1465d


0x13b6e:	test	r12b, r12b
0x13b71:	mov	rsi, qword ptr [rsp + 0xc0]
0x13b79:	je	0x14194


0x1451a:	mov	rdi, rbp
0x1451d:	call	0x7940


0x1465d:	mov	rdi, rbp
0x14660:	call	0x78d0


0x13a71:	mov	rdi, rbp
0x13a74:	call	0x7b10


0x14194:	mov	qword ptr [rsp + 0xb0], rsi
0x1419c:	mov	qword ptr [rsp + 0xb8], rsi
0x141a4:	mov	dword ptr [rsp + 0x4c], 0
0x141ac:	jmp	0x13bf8


0x13b7f:	cmp	qword ptr [rsp + 0xd8], rsi
0x13b87:	mov	rax, qword ptr [rsp + 0xb0]
0x13b8f:	cmovle	rsi, qword ptr [rsp + 0xd8]
0x13b98:	cmp	rsi, rax
0x13b9b:	jg	0x13bad


0x13bf8:	mov	r12, qword ptr [rsp + 8]
0x13bfd:	mov	r14, qword ptr [rsp + 0x18]
0x13c02:	lea	r13, [rsp + 0x50]
0x13c07:	mov	rsi, rbp
0x13c0a:	mov	rdi, r13
0x13c0d:	mov	qword ptr [rsp + 0x28], r13
0x13c12:	mov	r15, qword ptr [r12]
0x13c16:	mov	rdx, r14
0x13c19:	mov	qword ptr [r12 + 0x30], 0
0x13c22:	or	rdx, 0x800000
0x13c29:	mov	qword ptr [r15 + 0xd8], r14
0x13c30:	call	0x117f0


0x13b9d:	jmp	0x13be0


0x13bad:	mov	rdx, qword ptr [rsp + 0x80]
0x13bb5:	mov	rcx, qword ptr [rsp + 0xf8]
0x13bbd:	add	rdx, rax
0x13bc0:	add	rdx, qword ptr [rsp + 0xa8]
0x13bc8:	movzx	edx, byte ptr [rdx]
0x13bcb:	movzx	edx, byte ptr [rcx + rdx]
0x13bcf:	mov	rcx, qword ptr [rsp + 0x10]
0x13bd4:	mov	byte ptr [rcx + rax], dl
0x13bd7:	add	rax, 1
0x13bdb:	cmp	rsi, rax
0x13bde:	jne	0x13ba0


0x13be0:	mov	qword ptr [rsp + 0xb0], rax
0x13be8:	mov	qword ptr [rsp + 0xb8], rax
0x13bf0:	mov	dword ptr [rsp + 0x4c], 0
0x13bf8:	mov	r12, qword ptr [rsp + 8]
0x13bfd:	mov	r14, qword ptr [rsp + 0x18]
0x13c02:	lea	r13, [rsp + 0x50]
0x13c07:	mov	rsi, rbp
0x13c0a:	mov	rdi, r13
0x13c0d:	mov	qword ptr [rsp + 0x28], r13
0x13c12:	mov	r15, qword ptr [r12]
0x13c16:	mov	rdx, r14
0x13c19:	mov	qword ptr [r12 + 0x30], 0
0x13c22:	or	rdx, 0x800000
0x13c29:	mov	qword ptr [r15 + 0xd8], r14
0x13c30:	call	0x117f0


0x13ba0:	mov	rdx, qword ptr [rsp + 0x88]
0x13ba8:	mov	qword ptr [rsp + 0x10], rdx
0x13bad:	mov	rdx, qword ptr [rsp + 0x80]
0x13bb5:	mov	rcx, qword ptr [rsp + 0xf8]
0x13bbd:	add	rdx, rax
0x13bc0:	add	rdx, qword ptr [rsp + 0xa8]
0x13bc8:	movzx	edx, byte ptr [rdx]
0x13bcb:	movzx	edx, byte ptr [rcx + rdx]
0x13bcf:	mov	rcx, qword ptr [rsp + 0x10]
0x13bd4:	mov	byte ptr [rcx + rax], dl
0x13bd7:	add	rax, 1
0x13bdb:	cmp	rsi, rax
0x13bde:	jne	0x13ba0


0x13c35:	lea	r9, [rsp + 0x4c]
0x13c3a:	xor	r8d, r8d
0x13c3d:	mov	rcx, r14
0x13c40:	mov	rdx, r13
0x13c43:	mov	rsi, r12
0x13c46:	mov	rdi, rbp
0x13c49:	cdqe	
0x13c4b:	add	qword ptr [rsp + 0xc8], rax
0x13c53:	call	0x13620


0x13c58:	mov	ecx, dword ptr [rsp + 0x4c]
0x13c5c:	test	ecx, ecx
0x13c5e:	jne	0x14687


0x13c64:	lea	r13, [r15 + 0x70]
0x13c68:	lea	r12, [rsp + 0x60]
0x13c6d:	sub	r15, -0x80
0x13c71:	xor	edx, edx
0x13c73:	xor	ecx, ecx
0x13c75:	mov	rsi, r15
0x13c78:	mov	r8, r12
0x13c7b:	mov	rdi, r13
0x13c7e:	mov	qword ptr [rsp], rax
0x13c82:	mov	byte ptr [rsp + 0x68], 2
0x13c87:	call	0x98b0


0x14687:	test	rax, rax
0x1468a:	je	0x147bb


0x147bb:	mov	rax, qword ptr [rsp + 8]
0x147c0:	mov	qword ptr [rbx + 0x68], 0
0x147c8:	mov	r13, qword ptr [rax]
0x147cb:	jmp	0x13acc


0x14690:	lea	r13, [r15 + 0x70]
0x14694:	lea	r12, [rsp + 0x60]
0x14699:	sub	r15, -0x80
0x1469d:	xor	ecx, ecx
0x1469f:	xor	edx, edx
0x146a1:	mov	rsi, r15
0x146a4:	mov	r8, r12
0x146a7:	mov	rdi, r13
0x146aa:	mov	qword ptr [rsp], rax
0x146ae:	mov	byte ptr [rsp + 0x68], 2
0x146b3:	call	0x98b0


0x13acc:	mov	rdi, qword ptr [r13 + 0x70]
0x13ad0:	test	rdi, rdi
0x13ad3:	je	0x13ae8


0x13ae8:	mov	rdi, qword ptr [r13 + 0x20]
0x13aec:	mov	qword ptr [r13 + 0x70], 0
0x13af4:	mov	dword ptr [r13 + 0x80], 0xf
0x13aff:	mov	qword ptr [r13 + 0x68], 0
0x13b07:	call	0x19d0


0x13ae0:	test	r12, r12
0x13ae3:	mov	rdi, r12
0x13ae6:	jne	0x13ad8


0x13ad8:	mov	r12, qword ptr [rdi]
0x13adb:	call	0x19d0


0x13b0c:	mov	qword ptr [r13 + 0x20], 0
0x13b14:	mov	rdi, rbp
0x13b17:	call	0x88e0


0x146b8:	mov	r9, qword ptr [rsp]
0x146bc:	mov	r11, rax
0x146bf:	jmp	0x13c9b


0x13c9b:	mov	rcx, r11
0x13c9e:	mov	rdx, r9
0x13ca1:	mov	r8, r12
0x13ca4:	mov	rsi, r15
0x13ca7:	mov	rdi, r13
0x13caa:	mov	qword ptr [rsp], r11
0x13cae:	mov	byte ptr [rsp + 0x68], 0x10
0x13cb3:	call	0x98b0


0x13cb8:	mov	r11, qword ptr [rsp]
0x13cbc:	mov	rdx, r11
0x13cbf:	mov	r11, rax
0x13cc2:	test	rdx, rdx
0x13cc5:	mov	rcx, qword ptr [rsp + 8]
0x13cca:	sete	dl
0x13ccd:	test	r11, r11
0x13cd0:	sete	al
0x13cd3:	or	dl, al
0x13cd5:	mov	r13, qword ptr [rcx]
0x13cd8:	jne	0x14672


0x13cde:	mov	r15, qword ptr [r13 + 8]
0x13ce2:	mov	qword ptr [rbx + 0x68], r11
0x13ce6:	lea	rcx, [r15*8]
0x13cee:	lea	r15, [r15 + r15*2]
0x13cf2:	mov	rdi, rcx
0x13cf5:	mov	qword ptr [rsp], rcx
0x13cf9:	shl	r15, 3
0x13cfd:	call	0x1c20


0x14672:	mov	dword ptr [rsp + 0x4c], 0xc
0x1467a:	mov	qword ptr [rbx + 0x68], 0
0x14682:	jmp	0x13acc


0x13d02:	mov	rcx, qword ptr [rsp]
0x13d06:	mov	qword ptr [r13 + 0x18], rax
0x13d0a:	mov	qword ptr [rsp + 0x18], rax
0x13d0f:	mov	rdi, rcx
0x13d12:	call	0x1c20


0x13d17:	mov	rdi, r15
0x13d1a:	mov	qword ptr [r13 + 0x20], rax
0x13d1e:	mov	qword ptr [rsp + 0x10], rax
0x13d23:	call	0x1c20


0x13d28:	mov	rdi, r15
0x13d2b:	mov	qword ptr [r13 + 0x28], rax
0x13d2f:	mov	qword ptr [rsp], rax
0x13d33:	call	0x1c20


0x13d38:	mov	rdx, qword ptr [rsp + 0x18]
0x13d3d:	mov	qword ptr [r13 + 0x30], rax
0x13d41:	mov	rsi, qword ptr [rsp]
0x13d45:	mov	rcx, qword ptr [rsp + 0x10]
0x13d4a:	test	rdx, rdx
0x13d4d:	je	0x1450d


0x1450d:	mov	dword ptr [rsp + 0x4c], 0xc
0x14515:	jmp	0x13acc


0x13d53:	test	rcx, rcx
0x13d56:	je	0x1450d


0x13d5c:	test	rsi, rsi
0x13d5f:	je	0x1450d


0x13d65:	test	rax, rax
0x13d68:	je	0x1450d


0x13d6e:	mov	rax, qword ptr [rsp + 8]
0x13d73:	mov	r15, qword ptr [rax + 0x30]
0x13d77:	lea	rdi, [r15*8]
0x13d7f:	call	0x1c20


0x13d84:	test	rax, rax
0x13d87:	mov	qword ptr [r13 + 0xe0], rax
0x13d8e:	je	0x13dfd


0x13dfd:	mov	rdi, qword ptr [r13 + 0x68]
0x13e01:	mov	rdx, qword ptr [rsp + 8]
0x13e06:	lea	rsi, [rip - 0xa15d]
0x13e0d:	call	0x74d0


0x13d90:	test	r15, r15
0x13d93:	je	0x13dad


0x13dad:	mov	rdi, qword ptr [r13 + 0x68]
0x13db1:	lea	rsi, [rip - 0xb008]
0x13db8:	mov	rdx, r13
0x13dbb:	call	0x7540


0x13d95:	xor	edx, edx
0x13d97:	nop	word ptr [rax + rax]
0x13da0:	mov	qword ptr [rax + rdx*8], rdx
0x13da4:	add	rdx, 1
0x13da8:	cmp	rdx, r15
0x13dab:	jne	0x13da0


0x13da0:	mov	qword ptr [rax + rdx*8], rdx
0x13da4:	add	rdx, 1
0x13da8:	cmp	rdx, r15
0x13dab:	jne	0x13da0


0x13c8c:	mov	r9, qword ptr [rsp]
0x13c90:	mov	r11, rax
0x13c93:	mov	rdx, rax
0x13c96:	test	r9, r9
0x13c99:	je	0x13cc2


0x13cc2:	test	rdx, rdx
0x13cc5:	mov	rcx, qword ptr [rsp + 8]
0x13cca:	sete	dl
0x13ccd:	test	r11, r11
0x13cd0:	sete	al
0x13cd3:	or	dl, al
0x13cd5:	mov	r13, qword ptr [rcx]
0x13cd8:	jne	0x14672


0x13a79:	test	eax, eax
0x13a7b:	jne	0x13ac0


0x13a7d:	mov	rax, qword ptr [rsp]
0x13a81:	cmp	rax, qword ptr [rsp + 0xb8]
0x13a89:	jle	0x14640


0x13ac0:	mov	dword ptr [rsp + 0x4c], eax
0x13ac4:	mov	rax, qword ptr [rsp + 8]
0x13ac9:	mov	r13, qword ptr [rax]
0x13acc:	mov	rdi, qword ptr [r13 + 0x70]
0x13ad0:	test	rdi, rdi
0x13ad3:	je	0x13ae8


0x14640:	mov	dword ptr [rsp + 0x4c], 0
0x14648:	jmp	0x13bf8


0x13a8f:	movsxd	rax, dword ptr [rbx + 0xb4]
0x13a96:	mov	rsi, qword ptr [rsp + 0xc0]
0x13a9e:	add	rax, qword ptr [rsp + 0xb0]
0x13aa6:	cmp	rsi, rax
0x13aa9:	jg	0x14640


0x13aaf:	add	rsi, rsi
0x13ab2:	mov	rdi, rbp
0x13ab5:	call	0x75a0


0x14665:	mov	dword ptr [rsp + 0x4c], 0
0x1466d:	jmp	0x13bf8


0x14522:	mov	dword ptr [rsp + 0x4c], 0
0x1452a:	jmp	0x13bf8


0x13aba:	test	eax, eax
0x13abc:	je	0x13a71


0x13e82:	test	eax, eax
0x13e84:	jne	0x13ac0


0x13e8a:	movzx	esi, byte ptr [rsp + 0x10b]
0x13e92:	mov	ecx, dword ptr [rbx + 0xb4]
0x13e98:	test	sil, sil
0x13e9b:	je	0x13a4f


0x13ea1:	jmp	0x13a42


0x13ec2:	test	rax, rax
0x13ec5:	mov	qword ptr [rbx + 0x78], rax
0x13ec9:	je	0x13ea6


0x13ecb:	xor	r12d, r12d
0x13ece:	xor	ebp, ebp
0x13ed0:	mov	r13d, 1
0x13ed6:	xor	r15d, r15d
0x13ed9:	nop	dword ptr [rax]
0x13ee0:	lea	r14d, [rbp + r15]
0x13ee5:	mov	edi, r14d
0x13ee8:	call	0x1cd0


0x1cd0:	jmp	qword ptr [rip + 0x219242]




0x153de:	test	rax, rax
0x153e1:	je	0x15400


0x15400:	lea	rax, [rip + 0x1ef1]
0x15407:	add	rsp, 8
0x1540b:	ret	


0x153e3:	cmp	byte ptr [rax], 0
0x153e6:	lea	rdx, [rip + 0x1f0b]
0x153ed:	cmove	rax, rdx
0x153f1:	add	rsp, 8
0x153f5:	ret	


0x4830:	movzx	edx, byte ptr [rax]
0x4833:	and	edx, 0xffffffdf
0x4836:	cmp	dl, 0x55
0x4839:	je	0x48b0


0x48b0:	movzx	edx, byte ptr [rax + 1]
0x48b4:	and	edx, 0xffffffdf
0x48b7:	cmp	dl, 0x54
0x48ba:	jne	0x4840


0x483b:	cmp	dl, 0x47
0x483e:	je	0x4860


0x48bc:	movzx	edx, byte ptr [rax + 2]
0x48c0:	and	edx, 0xffffffdf
0x48c3:	cmp	dl, 0x46
0x48c6:	jne	0x4840


0x4840:	lea	rax, [rip + 0x11a04]
0x4847:	lea	rdx, [rip + 0x11850]
0x484e:	cmp	ebx, 9
0x4851:	cmovne	rax, rdx
0x4855:	add	rsp, 8
0x4859:	pop	rbx
0x485a:	pop	rbp
0x485b:	ret	


0x4860:	movzx	edx, byte ptr [rax + 1]
0x4864:	and	edx, 0xffffffdf
0x4867:	cmp	dl, 0x42
0x486a:	jne	0x4840


0x48cc:	cmp	byte ptr [rax + 3], 0x2d
0x48d0:	jne	0x4840


0x486c:	cmp	byte ptr [rax + 2], 0x31
0x4870:	jne	0x4840


0x48d6:	cmp	byte ptr [rax + 4], 0x38
0x48da:	jne	0x4840


0x4872:	cmp	byte ptr [rax + 3], 0x38
0x4876:	jne	0x4840


0x48e0:	cmp	byte ptr [rax + 5], 0
0x48e4:	jne	0x4840


0x4878:	cmp	byte ptr [rax + 4], 0x30
0x487c:	jne	0x4840


0x48ea:	cmp	byte ptr [rbp], 0x60
0x48ee:	lea	rax, [rip + 0x11947]
0x48f5:	lea	rdx, [rip + 0x11944]
0x48fc:	cmovne	rax, rdx
0x4900:	add	rsp, 8
0x4904:	pop	rbx
0x4905:	pop	rbp
0x4906:	ret	


0x487e:	cmp	byte ptr [rax + 5], 0x33
0x4882:	jne	0x4840


0x4884:	cmp	byte ptr [rax + 6], 0x30
0x4888:	jne	0x4840


0x488a:	cmp	byte ptr [rax + 7], 0
0x488e:	jne	0x4840


0x4890:	cmp	byte ptr [rbp], 0x60
0x4894:	lea	rax, [rip + 0x119a9]
0x489b:	lea	rdx, [rip + 0x119a6]
0x48a2:	cmovne	rax, rdx
0x48a6:	add	rsp, 8
0x48aa:	pop	rbx
0x48ab:	pop	rbp
0x48ac:	ret	


0x15503:	mov	edx, r12d
0x15506:	mov	rsi, rbp
0x15509:	mov	edi, eax
0x1550b:	call	0x1b30


0x1b30:	jmp	qword ptr [rip + 0x219312]




0x1541c:	test	eax, eax
0x1541e:	mov	rdi, rbx
0x15421:	js	0x15477


0x15477:	pop	rbx
0x15478:	pop	rbp
0x15479:	pop	r12
0x1547b:	jmp	0x1a70


0x15423:	call	0x1c80


0x1a70:	jmp	qword ptr [rip + 0x219372]




0x15428:	test	eax, eax
0x1542a:	jne	0x15458


0x1542c:	mov	rdi, rbx
0x1542f:	call	0x15490


0x15458:	mov	rdi, rbx
0x1545b:	call	0x1bf0


0x15460:	xor	esi, esi
0x15462:	mov	edx, 1
0x15467:	mov	edi, eax
0x15469:	call	0x1b30


0x1546e:	cmp	rax, -1
0x15472:	jne	0x1542c


0x15474:	mov	rdi, rbx
0x15477:	pop	rbx
0x15478:	pop	rbp
0x15479:	pop	r12
0x1547b:	jmp	0x1a70


0x15510:	cmp	rax, -1
0x15514:	je	0x15522


0x15522:	pop	rbx
0x15523:	pop	rbp
0x15524:	pop	r12
0x15526:	ret	


0x15516:	and	dword ptr [rbx], 0xffffffef
0x15519:	mov	qword ptr [rbx + 0x90], rax
0x15520:	xor	eax, eax
0x15522:	pop	rbx
0x15523:	pop	rbp
0x15524:	pop	r12
0x15526:	ret	


0x13eed:	cmp	eax, -1
0x13ef0:	je	0x13f05


0x13f05:	test	r14d, 0xffffff80
0x13f0c:	jne	0x13f1a


0x13ef2:	mov	rsi, qword ptr [rbx + 0x78]
0x13ef6:	mov	rdi, r13
0x13ef9:	mov	ecx, r15d
0x13efc:	shl	rdi, cl
0x13eff:	add	rsi, r12
0x13f02:	or	qword ptr [rsi], rdi
0x13f05:	test	r14d, 0xffffff80
0x13f0c:	jne	0x13f1a


0x13f0e:	cmp	eax, r14d
0x13f11:	je	0x13f1a


0x13f1a:	add	r15, 1
0x13f1e:	cmp	r15, 0x40
0x13f22:	jne	0x13ee0


0x13f13:	or	byte ptr [rbx + 0xb0], 8
0x13f1a:	add	r15, 1
0x13f1e:	cmp	r15, 0x40
0x13f22:	jne	0x13ee0


0x13f24:	add	ebp, 0x40
0x13f27:	add	r12, 8
0x13f2b:	cmp	ebp, 0x100
0x13f31:	jne	0x13ed6


0x13ee0:	lea	r14d, [rbp + r15]
0x13ee5:	mov	edi, r14d
0x13ee8:	call	0x1cd0


0x13f33:	jmp	0x1395e


0x13ed6:	xor	r15d, r15d
0x13ed9:	nop	dword ptr [rax]
0x13ee0:	lea	r14d, [rbp + r15]
0x13ee5:	mov	edi, r14d
0x13ee8:	call	0x1cd0


0x1e47:	lea	rdi, [rip + 0x141c0]
0x1e4e:	call	0x1a50


0x1a50:	jmp	qword ptr [rip + 0x219382]




0x2184:	mov	qword ptr [rbx + 8], rax
0x2188:	add	rsp, 8
0x218c:	mov	rax, rbx
0x218f:	pop	rbx
0x2190:	pop	rbp
0x2191:	ret	


0x299e:	jmp	0x28c3


0x28c3:	cmp	qword ptr [rsp + 0x10], 0
0x28c9:	je	0x28df


0x28df:	mov	rdi, rbp
0x28e2:	mov	qword ptr [rsp + 0x50], 0
0x28eb:	call	0x15130


0x28cb:	mov	rdi, qword ptr [rsp + 0x18]
0x28d0:	call	0x19d0


0x28d5:	mov	rdi, qword ptr [rsp + 0x20]
0x28da:	call	0x19d0


0x28f0:	mov	rcx, qword ptr [rsp + 0x1b8]
0x28f8:	xor	rcx, qword ptr fs:[0x28]
0x2901:	mov	rax, rbx
0x2904:	jne	0x2bd2


0x290a:	add	rsp, 0x1c8
0x2911:	pop	rbx
0x2912:	pop	rbp
0x2913:	pop	r12
0x2915:	pop	r13
0x2917:	pop	r14
0x2919:	pop	r15
0x291b:	ret	


0x2bd2:	call	0x1ad0


0x294d:	jmp	0x28c3


0xce56:	mov	rdi, qword ptr [rsp + 8]
0xce5b:	mov	eax, dword ptr [rsp]
0xce5e:	mov	dword ptr [rdi], eax
0xce60:	jmp	0xcdc2


0xcdf8:	jmp	0xcdc2


0xa3ec:	jmp	0xa3d8


0x8a21:	cmp	qword ptr [rbp], rbx
0x8a25:	jg	0x8a10


0x8a10:	mov	rax, qword ptr [rbp + 0x10]
0x8a14:	mov	rdi, qword ptr [rax + rbx*8]
0x8a18:	add	rbx, 1
0x8a1c:	call	0x8880


0xe53a:	jmp	0xe4fc


0xe2cc:	xor	eax, eax
0xe2ce:	jmp	0xe479


0xe264:	mov	eax, 0xc
0xe269:	jmp	0xe479


0x7d95:	mov	edx, dword ptr [rsp + 0x18]
0x7d99:	mov	r12d, eax
0x7d9c:	cmp	edx, eax
0x7d9e:	je	0x7e18


0x7e18:	mov	rsi, qword ptr [r14 + 0x28]
0x7e1c:	mov	rdi, qword ptr [r14 + 8]
0x7e20:	mov	rdx, rbp
0x7e23:	add	rsi, r15
0x7e26:	add	rsi, qword ptr [r14]
0x7e29:	add	rdi, r15
0x7e2c:	call	0x1be0


0x7da0:	mov	rdx, qword ptr [rsp + 0x38]
0x7da5:	mov	rdi, qword ptr [rsp + 0x28]
0x7daa:	mov	esi, eax
0x7dac:	call	0x1c30


0x7db1:	cmp	rbp, rax
0x7db4:	jne	0x7f28


0x7dba:	mov	rdi, qword ptr [r14 + 8]
0x7dbe:	mov	rsi, qword ptr [rsp + 0x28]
0x7dc3:	mov	rdx, rbp
0x7dc6:	add	rdi, r15
0x7dc9:	call	0x1be0


0x7f28:	mov	r13, r15
0x7f2b:	jmp	0x7bbe


0x7bbe:	mov	rdx, qword ptr [r14 + 0x78]
0x7bc2:	mov	rax, qword ptr [r14 + 0x20]
0x7bc6:	test	rdx, rdx
0x7bc9:	mov	qword ptr [rsp + 0x48], rax
0x7bce:	jne	0x7ed9


0x7dce:	add	r15, 1
0x7dd2:	mov	rdx, qword ptr [r14 + 0x10]
0x7dd6:	lea	rax, [r13*4]
0x7dde:	lea	rcx, [r15 + rbp - 1]
0x7de3:	cmp	r15, rcx
0x7de6:	mov	dword ptr [rdx + r13*4], r12d
0x7dea:	jge	0x7e0a


0x7dec:	lea	rax, [rdx + rax + 4]
0x7df1:	lea	rdx, [rdx + rcx*4]
0x7df5:	nop	dword ptr [rax]
0x7df8:	mov	dword ptr [rax], 0xffffffff
0x7dfe:	add	rax, 4
0x7e02:	cmp	rdx, rax
0x7e05:	jne	0x7df8


0x7e07:	mov	r15, rcx
0x7e0a:	cmp	rbx, r15
0x7e0d:	jg	0x7d20


0x7df8:	mov	dword ptr [rax], 0xffffffff
0x7dfe:	add	rax, 4
0x7e02:	cmp	rdx, rax
0x7e05:	jne	0x7df8


0x7e31:	jmp	0x7dce


0x7c21:	mov	edx, dword ptr [rsp + 0x10]
0x7c25:	mov	r12d, eax
0x7c28:	mov	qword ptr [rsp + 8], r15
0x7c2d:	cmp	edx, eax
0x7c2f:	je	0x7f30


0x7f30:	mov	rdi, qword ptr [r14 + 8]
0x7f34:	mov	rsi, qword ptr [rsp + 0x18]
0x7f39:	mov	rdx, rbp
0x7f3c:	add	rdi, r15
0x7f3f:	call	0x1be0


0x7c35:	lea	rcx, [rsp + 0x50]
0x7c3a:	lea	rdx, [rsp + 0x48]
0x7c3f:	mov	esi, eax
0x7c41:	mov	rdi, rcx
0x7c44:	mov	qword ptr [rsp + 0x10], rcx
0x7c49:	call	0x1c30


0x7c4e:	cmp	rbp, rax
0x7c51:	mov	r11, rax
0x7c54:	mov	rcx, qword ptr [rsp + 0x10]
0x7c59:	jne	0x7fe6


0x7c5f:	mov	rdi, qword ptr [r14 + 8]
0x7c63:	mov	rdx, rbp
0x7c66:	mov	rsi, rcx
0x7c69:	add	rdi, r15
0x7c6c:	call	0x1be0


0x7fe6:	cmp	rax, -1
0x7fea:	je	0x7f30


0x7ff0:	lea	rax, [rax + r15]
0x7ff4:	mov	rsi, rax
0x7ff7:	mov	qword ptr [rsp + 8], rax
0x7ffc:	mov	rax, qword ptr [r14 + 0x40]
0x8000:	cmp	rsi, rax
0x8003:	ja	0x7fd8


0x8005:	cmp	qword ptr [r14 + 0x18], 0
0x800a:	je	0x80c8


0x80c8:	lea	rdi, [rax*8]
0x80d0:	mov	qword ptr [rsp + 0x18], rcx
0x80d5:	mov	qword ptr [rsp + 0x10], r11
0x80da:	call	0x1c20


0x8010:	cmp	byte ptr [r14 + 0x8c], 0
0x8018:	jne	0x803a


0x801a:	test	r15, r15
0x801d:	je	0x8032


0x803a:	mov	rdi, qword ptr [r14 + 8]
0x803e:	mov	rsi, rcx
0x8041:	mov	rdx, r11
0x8044:	mov	qword ptr [rsp + 0x10], r11
0x8049:	add	rdi, r15
0x804c:	call	0x1be0


0x8032:	mov	byte ptr [r14 + 0x8c], 1
0x803a:	mov	rdi, qword ptr [r14 + 8]
0x803e:	mov	rsi, rcx
0x8041:	mov	rdx, r11
0x8044:	mov	qword ptr [rsp + 0x10], r11
0x8049:	add	rdi, r15
0x804c:	call	0x1be0


0x801f:	mov	rdx, qword ptr [r14 + 0x18]
0x8023:	xor	eax, eax
0x8025:	mov	qword ptr [rdx + rax*8], rax
0x8029:	add	rax, 1
0x802d:	cmp	rax, r15
0x8030:	jne	0x8025


0x8025:	mov	qword ptr [rdx + rax*8], rax
0x8029:	add	rax, 1
0x802d:	cmp	rax, r15
0x8030:	jne	0x8025


0x80df:	test	rax, rax
0x80e2:	mov	qword ptr [r14 + 0x18], rax
0x80e6:	mov	r11, qword ptr [rsp + 0x10]
0x80eb:	mov	rcx, qword ptr [rsp + 0x18]
0x80f0:	jne	0x8010


0x80f6:	mov	eax, 0xc
0x80fb:	jmp	0x7b6f


0x8051:	mov	rax, qword ptr [r14 + 0x10]
0x8055:	mov	r11, qword ptr [rsp + 0x10]
0x805a:	lea	rcx, [rax + r15*4]
0x805e:	mov	rax, qword ptr [r14 + 0x18]
0x8062:	cmp	r11, 1
0x8066:	mov	dword ptr [rcx], r12d
0x8069:	lea	rsi, [rax + r15*8]
0x806d:	mov	qword ptr [rsi], r13
0x8070:	jbe	0x809a


0x809a:	mov	rbx, qword ptr [r14 + 0x58]
0x809e:	sub	r11, rbp
0x80a1:	add	rbx, r11
0x80a4:	cmp	r13, qword ptr [r14 + 0x60]
0x80a8:	mov	qword ptr [r14 + 0x58], rbx
0x80ac:	jge	0x80b2


0x8072:	mov	eax, 1
0x8077:	mov	rdx, qword ptr [rsp + 0x20]
0x807c:	cmp	rax, rbp
0x807f:	cmovb	rdx, rax
0x8083:	add	rdx, r13
0x8086:	mov	qword ptr [rsi + rax*8], rdx
0x808a:	mov	dword ptr [rcx + rax*4], 0xffffffff
0x8091:	add	rax, 1
0x8095:	cmp	rax, r11
0x8098:	jne	0x8077


0x80ae:	add	qword ptr [r14 + 0x68], r11
0x80b2:	cmp	qword ptr [r14 + 0x40], rbx
0x80b6:	mov	r15, qword ptr [rsp + 8]
0x80bb:	cmovle	rbx, qword ptr [r14 + 0x40]
0x80c0:	add	r13, rbp
0x80c3:	jmp	0x7b60


0x80b2:	cmp	qword ptr [r14 + 0x40], rbx
0x80b6:	mov	r15, qword ptr [rsp + 8]
0x80bb:	cmovle	rbx, qword ptr [r14 + 0x40]
0x80c0:	add	r13, rbp
0x80c3:	jmp	0x7b60


0x8077:	mov	rdx, qword ptr [rsp + 0x20]
0x807c:	cmp	rax, rbp
0x807f:	cmovb	rdx, rax
0x8083:	add	rdx, r13
0x8086:	mov	qword ptr [rsi + rax*8], rdx
0x808a:	mov	dword ptr [rcx + rax*4], 0xffffffff
0x8091:	add	rax, 1
0x8095:	cmp	rax, r11
0x8098:	jne	0x8077


0x7c71:	cmp	byte ptr [r14 + 0x8c], 0
0x7c79:	lea	rax, [rbp + r13]
0x7c7e:	jne	0x7fb5


0x7c84:	add	r15, 1
0x7c88:	mov	rsi, qword ptr [rsp + 8]
0x7c8d:	mov	rdx, qword ptr [r14 + 0x10]
0x7c91:	lea	rcx, [r15 + rbp - 1]
0x7c96:	mov	r13, rax
0x7c99:	cmp	r15, rcx
0x7c9c:	lea	rax, [rsi*4]
0x7ca4:	mov	dword ptr [rdx + rsi*4], r12d
0x7ca8:	jge	0x7b60


0x7fb5:	mov	rdx, qword ptr [r14 + 0x18]
0x7fb9:	mov	rcx, r15
0x7fbc:	mov	r10, r13
0x7fbf:	sub	rcx, r13
0x7fc2:	lea	rdx, [rdx + rcx*8]
0x7fc6:	mov	qword ptr [rdx + r10*8], r10
0x7fca:	add	r10, 1
0x7fce:	cmp	rax, r10
0x7fd1:	jne	0x7fc6


0x7cae:	lea	rax, [rdx + rax + 4]
0x7cb3:	lea	rdx, [rdx + rcx*4]
0x7cb7:	nop	word ptr [rax + rax]
0x7cc0:	mov	dword ptr [rax], 0xffffffff
0x7cc6:	add	rax, 4
0x7cca:	cmp	rdx, rax
0x7ccd:	jne	0x7cc0


0x7fd3:	jmp	0x7c84


0x7fc6:	mov	qword ptr [rdx + r10*8], r10
0x7fca:	add	r10, 1
0x7fce:	cmp	rax, r10
0x7fd1:	jne	0x7fc6


0x7ccf:	mov	r15, rcx
0x7cd2:	jmp	0x7b60


0x7cc0:	mov	dword ptr [rax], 0xffffffff
0x7cc6:	add	rax, 4
0x7cca:	cmp	rdx, rax
0x7ccd:	jne	0x7cc0


0x7f44:	jmp	0x7c71


0x6d6a:	lea	rsi, [rip + 0xfa1c]
0x6d71:	mov	edx, 5
0x6d76:	xor	edi, edi
0x6d78:	call	0x1a90


0x6d7d:	lea	rcx, [rip + 0xf0ac]
0x6d84:	lea	rdx, [rip + 0xf27f]
0x6d8b:	mov	rsi, rax
0x6d8e:	mov	edi, 1
0x6d93:	xor	eax, eax
0x6d95:	call	0x1cb0


0x6d9a:	mov	rbx, qword ptr [rip + 0x2142e7]
0x6da1:	lea	rsi, [rip + 0xfc18]
0x6da8:	xor	edi, edi
0x6daa:	mov	edx, 5
0x6daf:	call	0x1a90


0x6db4:	mov	rsi, rbx
0x6db7:	mov	rdi, rax
0x6dba:	pop	rbx
0x6dbb:	jmp	0x1bb0


0x23b0:	mov	rdi, qword ptr [rip + 0x218cd1]
0x23b7:	mov	rax, qword ptr [rdi + 0x28]
0x23bb:	cmp	rax, qword ptr [rdi + 0x30]
0x23bf:	jae	0x2708


0x23c5:	lea	rdx, [rax + 1]
0x23c9:	mov	qword ptr [rdi + 0x28], rdx
0x23cd:	mov	byte ptr [rax], 0xa
0x23d0:	mov	rbx, qword ptr [rip + 0x218cb1]
0x23d7:	lea	rsi, [rip + 0x132a2]
0x23de:	mov	edx, 5
0x23e3:	xor	edi, edi
0x23e5:	call	0x1a90


0x2708:	mov	esi, 0xa
0x270d:	call	0x1b10


0x1b10:	jmp	qword ptr [rip + 0x219322]




0x23ea:	mov	rsi, rbx
0x23ed:	mov	rdi, rax
0x23f0:	call	0x1bb0


0x7040:	call	0x19e0


0x23f5:	mov	rbx, qword ptr [rip + 0x218c8c]
0x23fc:	lea	rsi, [rip + 0x132ad]
0x2403:	mov	edx, 5
0x2408:	xor	edi, edi
0x240a:	call	0x1a90


0x240f:	mov	rsi, rbx
0x2412:	mov	rdi, rax
0x2415:	call	0x1bb0


0x241a:	mov	rbx, qword ptr [rip + 0x218c67]
0x2421:	lea	rsi, [rip + 0x132c0]
0x2428:	mov	edx, 5
0x242d:	xor	edi, edi
0x242f:	call	0x1a90


0x2434:	mov	rsi, rbx
0x2437:	mov	rdi, rax
0x243a:	call	0x1bb0


0x243f:	mov	rbx, qword ptr [rip + 0x218c42]
0x2446:	lea	rsi, [rip + 0x133b3]
0x244d:	mov	edx, 5
0x2452:	xor	edi, edi
0x2454:	call	0x1a90


0x2459:	mov	rsi, rbx
0x245c:	mov	rdi, rax
0x245f:	call	0x1bb0


0x2464:	mov	rbx, qword ptr [rip + 0x218c1d]
0x246b:	lea	rsi, [rip + 0x134b6]
0x2472:	mov	edx, 5
0x2477:	xor	edi, edi
0x2479:	call	0x1a90


0x247e:	mov	rsi, rbx
0x2481:	mov	rdi, rax
0x2484:	call	0x1bb0


0x2489:	mov	rbx, qword ptr [rip + 0x218bf8]
0x2490:	lea	rsi, [rip + 0x13509]
0x2497:	mov	edx, 5
0x249c:	xor	edi, edi
0x249e:	call	0x1a90


0x24a3:	mov	rsi, rbx
0x24a6:	mov	rdi, rax
0x24a9:	call	0x1bb0


0x24ae:	mov	rbx, qword ptr [rip + 0x218bd3]
0x24b5:	lea	rsi, [rip + 0x135a4]
0x24bc:	mov	edx, 5
0x24c1:	xor	edi, edi
0x24c3:	call	0x1a90


0x24c8:	mov	rsi, rbx
0x24cb:	mov	rdi, rax
0x24ce:	call	0x1bb0


0x24d3:	mov	rbx, qword ptr [rip + 0x218bae]
0x24da:	lea	rsi, [rip + 0x136b7]
0x24e1:	mov	edx, 5
0x24e6:	xor	edi, edi
0x24e8:	call	0x1a90


0x24ed:	mov	rsi, rbx
0x24f0:	mov	rdi, rax
0x24f3:	call	0x1bb0


0x24f8:	mov	rbx, qword ptr [rip + 0x218b89]
0x24ff:	lea	rsi, [rip + 0x13762]
0x2506:	mov	edx, 5
0x250b:	xor	edi, edi
0x250d:	call	0x1a90


0x2512:	mov	rsi, rbx
0x2515:	mov	rdi, rax
0x2518:	call	0x1bb0


0x251d:	mov	rbx, qword ptr [rip + 0x218b64]
0x2524:	lea	rsi, [rip + 0x13865]
0x252b:	mov	edx, 5
0x2530:	xor	edi, edi
0x2532:	call	0x1a90


0x2537:	mov	rsi, rbx
0x253a:	mov	rdi, rax
0x253d:	lea	rbx, [rip + 0x13a4b]
0x2544:	call	0x1bb0


0x2549:	lea	rax, [rip + 0x13a44]
0x2550:	lea	rcx, [rip + 0x13a7e]
0x2557:	mov	qword ptr [rsp + 0x60], 0
0x2560:	mov	qword ptr [rsp + 0x68], 0
0x2569:	mov	rdx, rsp
0x256c:	mov	qword ptr [rsp], rax
0x2570:	lea	rax, [rip + 0x13a1f]
0x2577:	mov	qword ptr [rsp + 0x30], rcx
0x257c:	lea	rcx, [rip + 0x13a5c]
0x2583:	mov	qword ptr [rsp + 8], rax
0x2588:	lea	rax, [rip + 0x13a7f]
0x258f:	mov	qword ptr [rsp + 0x40], rcx
0x2594:	lea	rcx, [rip + 0x13a4e]
0x259b:	mov	qword ptr [rsp + 0x10], rax
0x25a0:	lea	rax, [rip + 0x139ff]
0x25a7:	mov	qword ptr [rsp + 0x50], rcx
0x25ac:	mov	qword ptr [rsp + 0x18], rax
0x25b1:	lea	rax, [rip + 0x13a04]
0x25b8:	mov	qword ptr [rsp + 0x20], rax
0x25bd:	lea	rax, [rip + 0x13a02]
0x25c4:	mov	qword ptr [rsp + 0x28], rax
0x25c9:	mov	qword ptr [rsp + 0x38], rax
0x25ce:	mov	qword ptr [rsp + 0x48], rax
0x25d3:	mov	qword ptr [rsp + 0x58], rax
0x25d8:	nop	dword ptr [rax + rax]
0x25e0:	add	rdx, 0x10
0x25e4:	mov	rdi, qword ptr [rdx]
0x25e7:	test	rdi, rdi
0x25ea:	je	0x25ff


0x25ff:	mov	r12, qword ptr [rdx + 8]
0x2603:	xor	edi, edi
0x2605:	mov	edx, 5
0x260a:	lea	rsi, [rip + 0x139e2]
0x2611:	test	r12, r12
0x2614:	je	0x2717


0x25ec:	mov	ecx, 5
0x25f1:	mov	rsi, rbx
0x25f4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2717:	call	0x1a90


0x261a:	call	0x1a90


0x25f4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x25f6:	seta	al
0x25f9:	sbb	al, 0
0x25fb:	test	al, al
0x25fd:	jne	0x25e0


0x25e0:	add	rdx, 0x10
0x25e4:	mov	rdi, qword ptr [rdx]
0x25e7:	test	rdi, rdi
0x25ea:	je	0x25ff


0x261f:	lea	rcx, [rip + 0x1380a]
0x2626:	lea	rdx, [rip + 0x139dd]
0x262d:	mov	rsi, rax
0x2630:	mov	edi, 1
0x2635:	xor	eax, eax
0x2637:	call	0x1cb0


0x263c:	xor	esi, esi
0x263e:	mov	edi, 5
0x2643:	call	0x1ca0


0x2648:	test	rax, rax
0x264b:	je	0x2665


0x2665:	lea	rsi, [rip + 0x139b0]
0x266c:	xor	edi, edi
0x266e:	mov	edx, 5
0x2673:	call	0x1a90


0x264d:	lea	rsi, [rip + 0x139c4]
0x2654:	mov	edx, 3
0x2659:	mov	rdi, rax
0x265c:	call	0x1a00


0x1a00:	jmp	qword ptr [rip + 0x2193aa]




0x2678:	lea	rcx, [rip + 0x13910]
0x267f:	lea	rdx, [rip + 0x137aa]
0x2686:	mov	rsi, rax
0x2689:	mov	edi, 1
0x268e:	xor	eax, eax
0x2690:	call	0x1cb0


0x2695:	cmp	r12, rbx
0x2698:	lea	rcx, [rip + 0x13911]
0x269f:	lea	rbx, [rip + 0x140bb]
0x26a6:	cmove	rbx, rcx
0x26aa:	lea	rsi, [rip + 0x137ef]
0x26b1:	xor	edi, edi
0x26b3:	mov	edx, 5
0x26b8:	call	0x1a90


0x26bd:	mov	rcx, rbx
0x26c0:	mov	rsi, rax
0x26c3:	mov	rdx, r12
0x26c6:	mov	edi, 1
0x26cb:	xor	eax, eax
0x26cd:	call	0x1cb0


0x26d2:	jmp	0x2386


0x271c:	lea	rcx, [rip + 0x1370d]
0x2723:	lea	rdx, [rip + 0x138e0]
0x272a:	mov	rsi, rax
0x272d:	mov	edi, 1
0x2732:	xor	eax, eax
0x2734:	call	0x1cb0


0x2739:	xor	esi, esi
0x273b:	mov	edi, 5
0x2740:	call	0x1ca0


0x2745:	test	rax, rax
0x2748:	je	0x2766


0x2766:	lea	rsi, [rip + 0x138af]
0x276d:	mov	edx, 5
0x2772:	xor	edi, edi
0x2774:	lea	r12, [rip + 0x13814]
0x277b:	lea	rbx, [rip + 0x1382e]
0x2782:	call	0x1a90


0x274a:	lea	rsi, [rip + 0x138c7]
0x2751:	mov	edx, 3
0x2756:	mov	rdi, rax
0x2759:	call	0x1a00


0x2787:	lea	rcx, [rip + 0x13801]
0x278e:	lea	rdx, [rip + 0x1369b]
0x2795:	mov	rsi, rax
0x2798:	mov	edi, 1
0x279d:	xor	eax, eax
0x279f:	call	0x1cb0


0x27a4:	jmp	0x26aa


0x26aa:	lea	rsi, [rip + 0x137ef]
0x26b1:	xor	edi, edi
0x26b3:	mov	edx, 5
0x26b8:	call	0x1a90


0x682c:	cmp	r12, 9
0x6830:	ja	0x6b70


0x6836:	lea	rdx, [rip + 0x101c7]
0x683d:	movsxd	rax, dword ptr [rdx + r12*4]
0x6841:	add	rax, rdx
0x6844:	jmp	rax


0x6b70:	mov	r10, qword ptr [rbx + 0x40]
0x6b74:	mov	r9, qword ptr [rbx + 0x38]
0x6b78:	mov	edx, 5
0x6b7d:	mov	rax, qword ptr [rbx + 0x10]
0x6b81:	mov	r8, qword ptr [rbx + 8]
0x6b85:	lea	rsi, [rip + 0xfdf4]
0x6b8c:	mov	r13, qword ptr [rbx + 0x30]
0x6b90:	mov	r12, qword ptr [rbx + 0x28]
0x6b94:	mov	r15, qword ptr [rbx + 0x20]
0x6b98:	mov	r14, qword ptr [rbx + 0x18]
0x6b9c:	mov	qword ptr [rsp + 0x18], r10
0x6ba1:	mov	qword ptr [rsp + 0x10], r9
0x6ba6:	mov	qword ptr [rsp], rax
0x6baa:	mov	qword ptr [rsp + 8], r8
0x6baf:	mov	rbx, qword ptr [rbx]
0x6bb2:	jmp	0x6942


0x6942:	xor	edi, edi
0x6944:	call	0x1a90


0x6949:	mov	r10, qword ptr [rsp + 0x18]
0x694e:	push	r10
0x6950:	jmp	0x6894


0x6894:	mov	r9, qword ptr [rsp + 0x18]
0x6899:	mov	rdx, rax
0x689c:	mov	rcx, rbx
0x689f:	mov	esi, 1
0x68a4:	mov	rdi, rbp
0x68a7:	xor	eax, eax
0x68a9:	push	r9
0x68ab:	push	r13
0x68ad:	push	r12
0x68af:	push	r15
0x68b1:	push	r14
0x68b3:	mov	r9, qword ptr [rsp + 0x30]
0x68b8:	mov	r8, qword ptr [rsp + 0x38]
0x68bd:	call	0x1d80


0x68c2:	add	rsp, 0x30
0x68c6:	add	rsp, 0x28
0x68ca:	pop	rbx
0x68cb:	pop	rbp
0x68cc:	pop	r12
0x68ce:	pop	r13
0x68d0:	pop	r14
0x68d2:	pop	r15
0x68d4:	ret	


0x5d2d:	mov	dword ptr [rbp], r12d
0x5d31:	pop	rbx
0x5d32:	pop	rbp
0x5d33:	pop	r12
0x5d35:	ret	


0x4207:	test	eax, eax
0x4209:	sete	al
0x420c:	movzx	eax, al
0x420f:	pop	rbx
0x4210:	ret	


0x154c7:	mov	rdi, rbx
0x154ca:	pop	rbx
0x154cb:	jmp	0x1c40


0xd07a:	mov	rdx, qword ptr [rsp + 0x40]
0xd07f:	mov	rdi, qword ptr [rsp + 0x38]
0xd084:	mov	esi, eax
0xd086:	call	0x1c30


0xd08b:	cmp	rax, -1
0xd08f:	je	0xcf37


0xd095:	movzx	eax, byte ptr [rsp + 0x60]
0xd09a:	mov	byte ptr [rbp + rax], 1
0xd09f:	jmp	0xcf37


0xd183:	mov	rdi, qword ptr [rsp + 0x38]
0xd188:	mov	rdx, r14
0xd18b:	mov	esi, eax
0xd18d:	call	0x1c30


0xd192:	cmp	rax, -1
0xd196:	je	0xd0ff


0xd19c:	movzx	eax, byte ptr [rsp + 0x60]
0xd1a1:	add	rbp, 1
0xd1a5:	mov	byte ptr [r12 + rax], 1
0xd1aa:	cmp	rbp, qword ptr [r15 + 0x28]
0xd1ae:	jl	0xd10d


0x2976:	mov	rbx, rax
0x2979:	jmp	0x28c3


0x28c0:	mov	rbx, rax
0x28c3:	cmp	qword ptr [rsp + 0x10], 0
0x28c9:	je	0x28df


0x2d9f:	mov	r13, rax
0x2da2:	mov	rcx, qword ptr [rsp + 0xf8]
0x2daa:	xor	rcx, qword ptr fs:[0x28]
0x2db3:	mov	rax, r13
0x2db6:	jne	0x3780


0x2dbc:	add	rsp, 0x108
0x2dc3:	pop	rbx
0x2dc4:	pop	rbp
0x2dc5:	pop	r12
0x2dc7:	pop	r13
0x2dc9:	pop	r14
0x2dcb:	pop	r15
0x2dcd:	ret	


0x3780:	call	0x1ad0


0x6d06:	mov	rax, qword ptr [rsp + 0x78]
0x6d0b:	xor	rax, qword ptr fs:[0x28]
0x6d14:	jne	0x6d20


0x6d16:	add	rsp, 0xb8
0x6d1d:	pop	rbx
0x6d1e:	pop	rbp
0x6d1f:	ret	


0x6d20:	call	0x1ad0


0x6c30:	mov	rax, qword ptr [rsp + 0x58]
0x6c35:	xor	rax, qword ptr fs:[0x28]
0x6c3e:	jne	0x6c45


0x6c40:	add	rsp, 0x68
0x6c44:	ret	


0x6c45:	call	0x1ad0


0x41a0:	xor	edi, edi
0x41a2:	call	0x1d60


0x4090:	xor	edi, edi
0x4092:	call	0x1d60


0x2fa8:	mov	edi, r15d
0x2fab:	mov	r12, rax
0x2fae:	call	0x2c60


0x2fb3:	mov	rdi, r12
0x2fb6:	mov	rbx, rax
0x2fb9:	call	0x22e0


0x2fbe:	mov	rdi, rbx
0x2fc1:	call	0x22e0


0x2fc6:	mov	r13, qword ptr [rbx + 8]
0x2fca:	cmp	byte ptr [r13], 0
0x2fcf:	jne	0x3040


0x2fd1:	xor	ebp, ebp
0x2fd3:	mov	edi, 0x18
0x2fd8:	call	0x6dc0


0x3040:	mov	r14, qword ptr [r12 + 8]
0x3045:	call	0x1aa0


0x304a:	cmp	rax, 1
0x304e:	ja	0x3070


0x3050:	mov	rsi, r13
0x3053:	mov	rdi, r14
0x3056:	call	0x1b70


0x3070:	mov	qword ptr [rsp + 0x40], r14
0x3075:	lea	r14, [rsp + 0x70]
0x307a:	mov	byte ptr [rsp + 0x30], 0
0x307f:	xor	ebp, ebp
0x3081:	cmp	byte ptr [rsp + 0x30], 0
0x3086:	mov	qword ptr [rsp + 0x34], 0
0x308f:	lea	rax, [r14 + 0x24]
0x3093:	mov	byte ptr [rsp + 0x3c], 0
0x3098:	mov	qword ptr [rsp], rax
0x309c:	lea	rax, [rsp + 0x30]
0x30a1:	mov	qword ptr [rsp + 0x10], rax
0x30a6:	jne	0x312c


0x1b70:	jmp	qword ptr [rip + 0x2192f2]


0x30ac:	mov	rdi, qword ptr [rsp + 0x40]
0x30b1:	lea	rsi, [rip + 0x130e8]
0x30b8:	movzx	edx, byte ptr [rdi]
0x30bb:	mov	eax, edx
0x30bd:	shr	al, 5
0x30c0:	and	eax, 7
0x30c3:	mov	eax, dword ptr [rsi + rax*4]
0x30c6:	bt	eax, edx
0x30c9:	jae	0x33ea


0x312c:	call	0x1aa0




0x30cf:	mov	qword ptr [rsp + 0x48], 1
0x30d8:	movsx	eax, byte ptr [rdi]
0x30db:	mov	byte ptr [rsp + 0x50], 1
0x30e0:	mov	byte ptr [rsp + 0x3c], 1
0x30e5:	test	eax, eax
0x30e7:	mov	dword ptr [rsp + 0x54], eax
0x30eb:	je	0x2fd1


0x33ea:	mov	rax, qword ptr [rsp + 0x10]
0x33ef:	lea	rdi, [rax + 4]
0x33f3:	call	0x1d90


0x30f1:	add	rbp, 1
0x30f5:	movsx	esi, byte ptr [rdi]
0x30f8:	mov	qword ptr [rsp + 8], rdi
0x30fd:	mov	rdi, r13
0x3100:	call	0x42a0


0x3105:	test	rax, rax
0x3108:	jne	0x2fd3


0x310e:	mov	rdx, qword ptr [rsp + 8]
0x3113:	mov	edi, 1
0x3118:	add	rdi, rdx
0x311b:	cmp	byte ptr [rsp + 0x30], 0
0x3120:	mov	byte ptr [rsp + 0x3c], 0
0x3125:	mov	qword ptr [rsp + 0x40], rdi
0x312a:	je	0x30ac


0x2fd3:	mov	edi, 0x18
0x2fd8:	call	0x6dc0


0x33f8:	test	eax, eax
0x33fa:	je	0x3785


0x3785:	lea	rcx, [rip + 0x129d4]
0x378c:	lea	rsi, [rip + 0x11e7d]
0x3793:	lea	rdi, [rip + 0x1289d]
0x379a:	mov	edx, 0x96
0x379f:	call	0x1b50


0x3400:	mov	byte ptr [rsp + 0x30], 1
0x3405:	jmp	0x312c


0x3131:	mov	r8, qword ptr [rsp + 0x40]
0x3136:	mov	rsi, rax
0x3139:	mov	rdi, r8
0x313c:	mov	qword ptr [rsp + 8], r8
0x3141:	call	0x64b0


0x3146:	mov	rsi, qword ptr [rsp + 0x10]
0x314b:	mov	r8, qword ptr [rsp + 8]
0x3150:	mov	rdx, rax
0x3153:	lea	rcx, [rsi + 4]
0x3157:	lea	rdi, [rsi + 0x24]
0x315b:	mov	rsi, r8
0x315e:	call	0x7050


0x3163:	cmp	rax, -1
0x3167:	mov	qword ptr [rsp + 0x48], rax
0x316c:	je	0x340a


0x340a:	mov	qword ptr [rsp + 0x48], 1
0x3413:	mov	byte ptr [rsp + 0x50], 0
0x3418:	add	rbp, 1
0x341c:	mov	byte ptr [rsp + 0x3c], 1
0x3421:	mov	rdi, qword ptr [rsp + 0x40]
0x3426:	jmp	0x30f5


0x3172:	cmp	rax, -2
0x3176:	je	0x3698


0x30f5:	movsx	esi, byte ptr [rdi]
0x30f8:	mov	qword ptr [rsp + 8], rdi
0x30fd:	mov	rdi, r13
0x3100:	call	0x42a0


0x3698:	mov	rdi, qword ptr [rsp + 0x40]
0x369d:	call	0x1ab0


0x317c:	test	rax, rax
0x317f:	jne	0x31a4


0x3181:	mov	rdi, qword ptr [rsp + 0x40]
0x3186:	mov	qword ptr [rsp + 0x48], 1
0x318f:	cmp	byte ptr [rdi], 0
0x3192:	jne	0x37a9


0x31a4:	mov	rax, qword ptr [rsp + 0x10]
0x31a9:	mov	byte ptr [rsp + 0x50], 1
0x31ae:	lea	rdi, [rax + 4]
0x31b2:	call	0x1d90


0x3198:	mov	esi, dword ptr [rsp + 0x54]
0x319c:	test	esi, esi
0x319e:	jne	0x37a4


0x37a9:	lea	rcx, [rip + 0x129b0]
0x37b0:	lea	rsi, [rip + 0x11e59]
0x37b7:	lea	rdi, [rip + 0x12890]
0x37be:	mov	edx, 0xb2
0x37c3:	call	0x1b50


0x37a4:	call	0x1de0


0x31b7:	test	eax, eax
0x31b9:	je	0x36ff


0x36ff:	mov	byte ptr [rsp + 0x3c], 1
0x3704:	jmp	0x31c9


0x31bf:	mov	byte ptr [rsp + 0x30], 0
0x31c4:	mov	byte ptr [rsp + 0x3c], 1
0x31c9:	mov	ecx, dword ptr [rsp + 0x54]
0x31cd:	test	ecx, ecx
0x31cf:	je	0x2fd1


0x31c9:	mov	ecx, dword ptr [rsp + 0x54]
0x31cd:	test	ecx, ecx
0x31cf:	je	0x2fd1


0x31d5:	add	rbp, 1
0x31d9:	cmp	qword ptr [rsp + 0x48], 1
0x31df:	jne	0x31f0


0x31e1:	mov	rdi, qword ptr [rsp + 0x40]
0x31e6:	jmp	0x30f5


0x31f0:	mov	qword ptr [rsp + 0x80], r13
0x31f8:	mov	byte ptr [rsp + 0x70], 0
0x31fd:	mov	qword ptr [r14 + 4], 0
0x3205:	mov	byte ptr [rsp + 0x7c], 0
0x320a:	jmp	0x3292


0x3292:	cmp	byte ptr [rsp + 0x70], 0
0x3297:	je	0x3210


0x3210:	mov	rcx, qword ptr [rsp + 0x80]
0x3218:	lea	rsi, [rip + 0x12f81]
0x321f:	movzx	edx, byte ptr [rcx]
0x3222:	mov	eax, edx
0x3224:	shr	al, 5
0x3227:	and	eax, 7
0x322a:	mov	eax, dword ptr [rsi + rax*4]
0x322d:	bt	eax, edx
0x3230:	jae	0x3390


0x329d:	call	0x1aa0


0x3236:	mov	qword ptr [rsp + 0x88], 1
0x3242:	movsx	eax, byte ptr [rcx]
0x3245:	mov	byte ptr [rsp + 0x90], 1
0x324d:	mov	byte ptr [rsp + 0x7c], 1
0x3252:	mov	dword ptr [rsp + 0x94], eax
0x3259:	mov	eax, dword ptr [rsp + 0x94]
0x3260:	test	eax, eax
0x3262:	je	0x342b


0x3390:	lea	rdi, [r14 + 4]
0x3394:	call	0x1d90


0x342b:	mov	rdx, qword ptr [rsp + 0x40]
0x3430:	mov	rdi, qword ptr [rsp + 0x48]
0x3435:	jmp	0x3118


0x3268:	cmp	byte ptr [rsp + 0x50], 0
0x326d:	je	0x3359


0x3118:	add	rdi, rdx
0x311b:	cmp	byte ptr [rsp + 0x30], 0
0x3120:	mov	byte ptr [rsp + 0x3c], 0
0x3125:	mov	qword ptr [rsp + 0x40], rdi
0x312a:	je	0x30ac


0x3359:	mov	r15, qword ptr [rsp + 0x88]
0x3361:	cmp	r15, qword ptr [rsp + 0x48]
0x3366:	jne	0x3285


0x3273:	cmp	dword ptr [rsp + 0x54], eax
0x3277:	je	0x2fd3


0x336c:	mov	rsi, qword ptr [rsp + 0x40]
0x3371:	mov	rdi, qword ptr [rsp + 0x80]
0x3379:	mov	rdx, r15
0x337c:	call	0x1b90


0x3285:	add	qword ptr [rsp + 0x80], r15
0x328d:	mov	byte ptr [rsp + 0x7c], 0
0x3292:	cmp	byte ptr [rsp + 0x70], 0
0x3297:	je	0x3210


0x327d:	mov	r15, qword ptr [rsp + 0x88]
0x3285:	add	qword ptr [rsp + 0x80], r15
0x328d:	mov	byte ptr [rsp + 0x7c], 0
0x3292:	cmp	byte ptr [rsp + 0x70], 0
0x3297:	je	0x3210


0x3381:	test	eax, eax
0x3383:	je	0x2fd3


0x3389:	jmp	0x3285


0x3399:	test	eax, eax
0x339b:	je	0x3785


0x33a1:	mov	byte ptr [rsp + 0x70], 1
0x33a6:	jmp	0x329d


0x32a2:	mov	r15, qword ptr [rsp + 0x80]
0x32aa:	mov	rsi, rax
0x32ad:	mov	rdi, r15
0x32b0:	call	0x64b0


0x32b5:	mov	rdi, qword ptr [rsp]
0x32b9:	lea	rcx, [r14 + 4]
0x32bd:	mov	rdx, rax
0x32c0:	mov	rsi, r15
0x32c3:	call	0x7050


0x32c8:	cmp	rax, -1
0x32cc:	mov	qword ptr [rsp + 0x88], rax
0x32d4:	je	0x3340


0x3340:	mov	qword ptr [rsp + 0x88], 1
0x334c:	mov	byte ptr [rsp + 0x90], 0
0x3354:	mov	byte ptr [rsp + 0x7c], 1
0x3359:	mov	r15, qword ptr [rsp + 0x88]
0x3361:	cmp	r15, qword ptr [rsp + 0x48]
0x3366:	jne	0x3285


0x32d6:	cmp	rax, -2
0x32da:	je	0x33b0


0x33b0:	mov	rdi, qword ptr [rsp + 0x80]
0x33b8:	call	0x1ab0


0x32e0:	test	rax, rax
0x32e3:	jne	0x3311


0x32e5:	mov	rax, qword ptr [rsp + 0x80]
0x32ed:	mov	qword ptr [rsp + 0x88], 1
0x32f9:	cmp	byte ptr [rax], 0
0x32fc:	jne	0x37a9


0x3311:	lea	rdi, [r14 + 4]
0x3315:	mov	byte ptr [rsp + 0x90], 1
0x331d:	call	0x1d90


0x3302:	mov	edi, dword ptr [rsp + 0x94]
0x3309:	test	edi, edi
0x330b:	jne	0x37a4


0x3322:	test	eax, eax
0x3324:	je	0x33e0


0x33e0:	mov	byte ptr [rsp + 0x7c], 1
0x33e5:	jmp	0x3259


0x332a:	mov	byte ptr [rsp + 0x70], 0
0x332f:	mov	byte ptr [rsp + 0x7c], 1
0x3334:	jmp	0x3259


0x3259:	mov	eax, dword ptr [rsp + 0x94]
0x3260:	test	eax, eax
0x3262:	je	0x342b


0x33bd:	mov	byte ptr [rsp + 0x90], 0
0x33c5:	mov	qword ptr [rsp + 0x88], rax
0x33cd:	mov	byte ptr [rsp + 0x7c], 1
0x33d2:	jmp	0x3359


0x36a2:	mov	byte ptr [rsp + 0x50], 0
0x36a7:	mov	qword ptr [rsp + 0x48], rax
0x36ac:	mov	byte ptr [rsp + 0x3c], 1
0x36b1:	jmp	0x31d5


0x2fdd:	lea	rdi, [rax + 8]
0x2fe1:	mov	dword ptr [rax], 0
0x2fe7:	mov	rsi, rbp
0x2fea:	mov	r13, rax
0x2fed:	call	0x1cc0


0x2ff2:	mov	rdi, r12
0x2ff5:	call	0x21a0


0x2ffa:	mov	rdi, rbx
0x2ffd:	call	0x21a0


0x3002:	jmp	0x2da2


0x2da2:	mov	rcx, qword ptr [rsp + 0xf8]
0x2daa:	xor	rcx, qword ptr fs:[0x28]
0x2db3:	mov	rax, r13
0x2db6:	jne	0x3780


0x2e28:	mov	edi, r15d
0x2e2b:	mov	rbp, rax
0x2e2e:	call	0x2c60


0x2e33:	mov	edi, r15d
0x2e36:	mov	rbx, rax
0x2e39:	call	0x2c60


0x2e3e:	mov	rdi, rbp
0x2e41:	mov	r12, rax
0x2e44:	call	0x22e0


0x2e49:	mov	rdi, rbx
0x2e4c:	call	0x2250


0x2e51:	test	al, al
0x2e53:	je	0x3010


0x3010:	lea	rdi, [rip + 0x1374a]
0x3017:	call	0x2160


0x2e59:	mov	rdi, r12
0x2e5c:	call	0x2250


0x2e61:	test	al, al
0x2e63:	je	0x3010


0x2e69:	mov	edx, dword ptr [rbx + 0xc]
0x2e6c:	mov	r13, -1
0x2e73:	test	edx, edx
0x2e75:	js	0x2e87


0x2e87:	mov	eax, dword ptr [r12 + 0xc]
0x2e8c:	mov	r15, -1
0x2e93:	test	eax, eax
0x2e95:	js	0x2ea7


0x2e77:	cmp	edx, 1
0x2e7a:	mov	r13, -2
0x2e81:	jle	0x36da


0x2ea7:	mov	rax, qword ptr [rbp + 8]
0x2eab:	mov	rdi, rax
0x2eae:	mov	qword ptr [rsp + 8], rax
0x2eb3:	call	0x1ab0


0x2e97:	cmp	eax, 1
0x2e9a:	mov	r15, -2
0x2ea1:	jle	0x36b6


0x36da:	mov	rcx, qword ptr [rbx + 0x10]
0x36de:	test	edx, edx
0x36e0:	mov	r13, qword ptr [rcx]
0x36e3:	je	0x3769


0x36b6:	mov	rdx, qword ptr [r12 + 0x10]
0x36bb:	test	eax, eax
0x36bd:	mov	r15, qword ptr [rdx]
0x36c0:	je	0x3761


0x3769:	mov	r14d, eax
0x376c:	xor	r13d, r13d
0x376f:	jmp	0x2e87


0x36e9:	cmp	r13, -1
0x36ed:	je	0x3774


0x3761:	xor	r15d, r15d
0x3764:	jmp	0x2ea7


0x36c6:	cmp	r15, -1
0x36ca:	mov	rax, -2
0x36d1:	cmove	r15, rax
0x36d5:	jmp	0x2ea7


0x3774:	mov	r13, -2
0x377b:	jmp	0x2e87


0x36f3:	test	r13, r13
0x36f6:	sete	r14b
0x36fa:	jmp	0x2e87


0x2eb8:	mov	qword ptr [rsp], rax
0x2ebc:	call	0x1aa0


0x2ec1:	cmp	rax, 1
0x2ec5:	mov	rdx, qword ptr [rsp]
0x2ec9:	jbe	0x2ed8


0x2ed8:	cmp	r13, rdx
0x2edb:	ja	0x2ef0


0x2ecb:	mov	rdi, qword ptr [rsp + 8]
0x2ed0:	call	0x4550


0x2edd:	test	r14b, r14b
0x2ee0:	jne	0x2ef0


0x2ef0:	lea	rdi, [rip + 0x1386a]
0x2ef7:	call	0x6ff0


0x2ee2:	lea	rax, [r15 - 1]
0x2ee6:	cmp	rax, -3
0x2eea:	jbe	0x343a


0x343a:	sub	rdx, r13
0x343d:	lea	rax, [rdx + 1]
0x3441:	cmp	rax, r15
0x3444:	cmovbe	r15, rax
0x3448:	call	0x1aa0


0x344d:	cmp	rax, 1
0x3451:	je	0x3664


0x3664:	lea	rdi, [r15 + 1]
0x3668:	call	0x6dc0


0x3457:	mov	rdi, qword ptr [rsp]
0x345b:	mov	r14d, 1
0x3461:	add	rdi, 1
0x3465:	call	0x6dc0


0x346a:	mov	rsi, qword ptr [rsp + 8]
0x346f:	mov	qword ptr [rsp], rax
0x3473:	mov	qword ptr [rsp + 8], rax
0x3478:	lea	rax, [rsp + 0xb0]
0x3480:	mov	byte ptr [rsp + 0xb0], 0
0x3488:	mov	qword ptr [rsp + 0xb4], 0
0x3494:	mov	byte ptr [rsp + 0xbc], 0
0x349c:	mov	qword ptr [rsp + 0x20], rax
0x34a1:	lea	rax, [rsp + 0xb4]
0x34a9:	mov	qword ptr [rsp + 0xc0], rsi
0x34b1:	mov	qword ptr [rsp + 0x28], rax
0x34b6:	jmp	0x357d


0x357d:	cmp	byte ptr [rsp + 0xb0], 0
0x3585:	je	0x34c0


0x34c0:	mov	rcx, qword ptr [rsp + 0xc0]
0x34c8:	lea	rsi, [rip + 0x12cd1]
0x34cf:	movzx	edx, byte ptr [rcx]
0x34d2:	mov	eax, edx
0x34d4:	shr	al, 5
0x34d7:	and	eax, 7
0x34da:	mov	eax, dword ptr [rsi + rax*4]
0x34dd:	bt	eax, edx
0x34e0:	jae	0x3645


0x358b:	call	0x1aa0


0x34e6:	mov	qword ptr [rsp + 0xc8], 1
0x34f2:	movsx	eax, byte ptr [rcx]
0x34f5:	mov	byte ptr [rsp + 0xd0], 1
0x34fd:	mov	byte ptr [rsp + 0xbc], 1
0x3505:	mov	dword ptr [rsp + 0xd4], eax
0x350c:	mov	eax, dword ptr [rsp + 0xd4]
0x3513:	test	eax, eax
0x3515:	je	0x368b


0x3645:	mov	rdi, qword ptr [rsp + 0x28]
0x364a:	call	0x1d90


0x368b:	mov	rax, qword ptr [rsp + 8]
0x3690:	mov	byte ptr [rax], 0
0x3693:	jmp	0x2f00


0x351b:	test	r15, r15
0x351e:	je	0x368b


0x2f00:	mov	r14, qword ptr [rsp]
0x2f04:	mov	rdi, r14
0x2f07:	call	0x2160


0x3524:	cmp	r13, r14
0x3527:	mov	r8, qword ptr [rsp + 0xc8]
0x352f:	mov	rcx, qword ptr [rsp + 0xc0]
0x3537:	ja	0x3566


0x3539:	mov	rdi, qword ptr [rsp + 8]
0x353e:	mov	rdx, r8
0x3541:	mov	rsi, rcx
0x3544:	mov	qword ptr [rsp + 0x18], r8
0x3549:	mov	qword ptr [rsp + 0x10], rcx
0x354e:	sub	r15, 1
0x3552:	call	0x1ce0


0x3566:	add	rcx, r8
0x3569:	mov	byte ptr [rsp + 0xbc], 0
0x3571:	add	r14, 1
0x3575:	mov	qword ptr [rsp + 0xc0], rcx
0x357d:	cmp	byte ptr [rsp + 0xb0], 0
0x3585:	je	0x34c0


0x1ce0:	jmp	qword ptr [rip + 0x21923a]




0x364f:	test	eax, eax
0x3651:	je	0x3785


0x3657:	mov	byte ptr [rsp + 0xb0], 1
0x365f:	jmp	0x358b


0x3590:	mov	r8, qword ptr [rsp + 0xc0]
0x3598:	mov	rsi, rax
0x359b:	mov	rdi, r8
0x359e:	mov	qword ptr [rsp + 0x10], r8
0x35a3:	call	0x64b0


0x35a8:	mov	rsi, qword ptr [rsp + 0x20]
0x35ad:	mov	r8, qword ptr [rsp + 0x10]
0x35b2:	mov	rdx, rax
0x35b5:	lea	rcx, [rsi + 4]
0x35b9:	lea	rdi, [rsi + 0x24]
0x35bd:	mov	rsi, r8
0x35c0:	call	0x7050


0x35c5:	cmp	rax, -1
0x35c9:	mov	qword ptr [rsp + 0xc8], rax
0x35d1:	je	0x3709


0x3709:	mov	qword ptr [rsp + 0xc8], 1
0x3715:	mov	byte ptr [rsp + 0xd0], 0
0x371d:	mov	byte ptr [rsp + 0xbc], 1
0x3725:	jmp	0x351b


0x35d7:	cmp	rax, -2
0x35db:	je	0x372a


0x372a:	mov	rdi, qword ptr [rsp + 0xc0]
0x3732:	call	0x1ab0


0x35e1:	test	rax, rax
0x35e4:	jne	0x3612


0x35e6:	mov	rax, qword ptr [rsp + 0xc0]
0x35ee:	mov	qword ptr [rsp + 0xc8], 1
0x35fa:	cmp	byte ptr [rax], 0
0x35fd:	jne	0x37a9


0x3612:	mov	rax, qword ptr [rsp + 0x20]
0x3617:	mov	byte ptr [rsp + 0xd0], 1
0x361f:	lea	rdi, [rax + 4]
0x3623:	call	0x1d90


0x3603:	mov	edx, dword ptr [rsp + 0xd4]
0x360a:	test	edx, edx
0x360c:	jne	0x37a4


0x3628:	test	eax, eax
0x362a:	je	0x3754


0x3754:	mov	byte ptr [rsp + 0xbc], 1
0x375c:	jmp	0x350c


0x3630:	mov	byte ptr [rsp + 0xb0], 0
0x3638:	mov	byte ptr [rsp + 0xbc], 1
0x3640:	jmp	0x350c


0x350c:	mov	eax, dword ptr [rsp + 0xd4]
0x3513:	test	eax, eax
0x3515:	je	0x368b


0x3737:	mov	byte ptr [rsp + 0xd0], 0
0x373f:	mov	qword ptr [rsp + 0xc8], rax
0x3747:	mov	byte ptr [rsp + 0xbc], 1
0x374f:	jmp	0x351b


0x366d:	mov	rsi, qword ptr [rsp + 8]
0x3672:	mov	rdx, r15
0x3675:	mov	rdi, rax
0x3678:	mov	qword ptr [rsp], rax
0x367c:	lea	rsi, [rsi + r13 - 1]
0x3681:	call	0x1ce0


0x2efc:	mov	qword ptr [rsp], rax
0x2f00:	mov	r14, qword ptr [rsp]
0x2f04:	mov	rdi, r14
0x2f07:	call	0x2160


0x2ed5:	mov	rdx, rax
0x2ed8:	cmp	r13, rdx
0x2edb:	ja	0x2ef0


0x2f0c:	mov	rdi, r14
0x2f0f:	mov	r13, rax
0x2f12:	call	0x19d0


0x2f17:	jmp	0x301f


0x301f:	mov	rdi, rbp
0x3022:	call	0x21a0


0x3027:	mov	rdi, rbx
0x302a:	call	0x21a0


0x302f:	mov	rdi, r12
0x3032:	call	0x21a0


0x3037:	jmp	0x2da2


0x301c:	mov	r13, rax
0x301f:	mov	rdi, rbp
0x3022:	call	0x21a0


0x2f28:	mov	edi, r15d
0x2f2b:	mov	r13, rax
0x2f2e:	call	0x2c60


0x2f33:	test	bl, bl
0x2f35:	mov	rbp, rax
0x2f38:	je	0x2f53


0x2f53:	mov	rdi, rbp
0x2f56:	call	0x21a0


0x2f3a:	mov	rdi, r13
0x2f3d:	mov	rsi, rax
0x2f40:	call	0x27b0


0x2f45:	mov	rbx, rax
0x2f48:	mov	rdi, r13
0x2f4b:	mov	r13, rbx
0x2f4e:	call	0x21a0


0x2f5b:	jmp	0x2da2


0x2dd8:	mov	rbx, rax
0x2ddb:	mov	rdi, rax
0x2dde:	call	0x22e0


0x2de3:	mov	rdi, qword ptr [rbx + 8]
0x2de7:	call	0x4550


0x2dec:	mov	edi, 0x18
0x2df1:	mov	rbp, rax
0x2df4:	call	0x6dc0


0x2df9:	lea	rdi, [rax + 8]
0x2dfd:	mov	dword ptr [rax], 0
0x2e03:	mov	rsi, rbp
0x2e06:	mov	r13, rax
0x2e09:	call	0x1cc0


0x2e0e:	mov	rdi, rbx
0x2e11:	call	0x21a0


0x2e16:	jmp	0x2da2


0x3833:	mov	r13, rax
0x3836:	jmp	0x3848


0x3848:	mov	rdi, r12
0x384b:	call	0x20e0


0x3850:	test	al, al
0x3852:	je	0x3880


0x3880:	add	rsp, 8
0x3884:	mov	rax, r13
0x3887:	pop	rbx
0x3888:	pop	rbp
0x3889:	pop	r12
0x388b:	pop	r13
0x388d:	pop	r14
0x388f:	pop	r15
0x3891:	ret	


0x3854:	mov	edi, ebp
0x3856:	call	0x2c60


0x385b:	test	r14b, r14b
0x385e:	mov	rbx, rax
0x3861:	je	0x3840


0x3840:	mov	rdi, rbx
0x3843:	call	0x21a0


0x3863:	mov	rdi, r13
0x3866:	mov	rsi, rax
0x3869:	call	0x27b0


0x386e:	mov	rdi, r13
0x3871:	mov	r15, rax
0x3874:	mov	r13, r15
0x3877:	call	0x21a0


0x387c:	jmp	0x3840


0x38b7:	mov	r13, rax
0x38ba:	jmp	0x3939


0x3939:	lea	rdi, [rip + 0x12762]
0x3940:	call	0x20e0


0x3945:	test	al, al
0x3947:	je	0x38c0


0x38c0:	lea	rdi, [rip + 0x1296f]
0x38c7:	mov	ebp, 1
0x38cc:	call	0x20e0


0x394d:	xor	ebp, ebp
0x394f:	jmp	0x38d9


0x38d9:	mov	edi, r12d
0x38dc:	call	0x3810


0x38e1:	test	r14b, r14b
0x38e4:	mov	rbx, rax
0x38e7:	je	0x3931


0x3931:	mov	rdi, rbx
0x3934:	call	0x21a0


0x38e9:	mov	rdi, r13
0x38ec:	call	0x2250


0x38f1:	test	al, al
0x38f3:	je	0x399d


0x399d:	lea	rsi, [rip + 0x12702]
0x39a4:	mov	edx, 5
0x39a9:	xor	edi, edi
0x39ab:	call	0x1a90


0x38f9:	mov	rdi, rbx
0x38fc:	call	0x2250


0x3901:	test	al, al
0x3903:	je	0x399d


0x3909:	test	ebp, ebp
0x390b:	je	0x3958


0x3958:	mov	rax, qword ptr [rip + 0x217651]
0x395f:	jmp	0x3924


0x390d:	mov	eax, dword ptr [rbx + 0xc]
0x3910:	test	eax, eax
0x3912:	je	0x39c1


0x3924:	lea	rdi, [r13 + 8]
0x3928:	lea	rdx, [rbx + 8]
0x392c:	mov	rsi, rdi
0x392f:	call	rax


0x39c1:	lea	rsi, [rip + 0x126f3]
0x39c8:	mov	edx, 5
0x39cd:	xor	edi, edi
0x39cf:	call	0x1a90


0x3918:	cmp	ebp, 1
0x391b:	je	0x3988


0x3988:	mov	rax, qword ptr [rip + 0x217609]
0x398f:	jmp	0x3924


0x391d:	mov	rax, qword ptr [rip + 0x2176a4]
0x3924:	lea	rdi, [r13 + 8]
0x3928:	lea	rdx, [rbx + 8]
0x392c:	mov	rsi, rdi
0x392f:	call	rax


0x39d4:	xor	esi, esi
0x39d6:	mov	rdx, rax
0x39d9:	mov	edi, 2
0x39de:	xor	eax, eax
0x39e0:	call	0x1d00


0x39e5:	nop	
0x39e6:	nop	word ptr cs:[rax + rax]


0x39b0:	xor	esi, esi
0x39b2:	mov	rdx, rax
0x39b5:	mov	edi, 2
0x39ba:	xor	eax, eax
0x39bc:	call	0x1d00


0x38d1:	test	al, al
0x38d3:	je	0x3968


0x3968:	lea	rdi, [rip + 0x12735]
0x396f:	call	0x20e0


0x3974:	test	al, al
0x3976:	je	0x3991


0x3991:	pop	rbx
0x3992:	mov	rax, r13
0x3995:	pop	rbp
0x3996:	pop	r12
0x3998:	pop	r13
0x399a:	pop	r14
0x399c:	ret	


0x3978:	mov	ebp, 2
0x397d:	jmp	0x38d9


0x3a07:	mov	r13, rax
0x3a0a:	jmp	0x3a6d


0x3a6d:	lea	rdi, [rip + 0x125f1]
0x3a74:	call	0x20e0


0x3a79:	test	al, al
0x3a7b:	je	0x3a10


0x3a10:	lea	rdi, [rip + 0x1270e]
0x3a17:	call	0x20e0


0x3a7d:	xor	ebp, ebp
0x3a7f:	jmp	0x3a25


0x3a25:	mov	edi, r12d
0x3a28:	call	0x38a0


0x3a2d:	test	r14b, r14b
0x3a30:	mov	rbx, rax
0x3a33:	je	0x3a65


0x3a65:	mov	rdi, rbx
0x3a68:	call	0x21a0


0x3a35:	mov	rdi, r13
0x3a38:	call	0x2250


0x3a3d:	test	al, al
0x3a3f:	je	0x3aa4


0x3aa4:	lea	rsi, [rip + 0x125fb]
0x3aab:	mov	edx, 5
0x3ab0:	xor	edi, edi
0x3ab2:	call	0x1a90


0x3a41:	mov	rdi, rbx
0x3a44:	call	0x2250


0x3a49:	test	al, al
0x3a4b:	je	0x3aa4


0x3a4d:	test	ebp, ebp
0x3a4f:	je	0x3a88


0x3a88:	mov	rax, qword ptr [rip + 0x217541]
0x3a8f:	jmp	0x3a58


0x3a51:	mov	rax, qword ptr [rip + 0x217550]
0x3a58:	lea	rdi, [r13 + 8]
0x3a5c:	lea	rdx, [rbx + 8]
0x3a60:	mov	rsi, rdi
0x3a63:	call	rax


0x3a58:	lea	rdi, [r13 + 8]
0x3a5c:	lea	rdx, [rbx + 8]
0x3a60:	mov	rsi, rdi
0x3a63:	call	rax


0x3ab7:	xor	esi, esi
0x3ab9:	mov	rdx, rax
0x3abc:	mov	edi, 2
0x3ac1:	xor	eax, eax
0x3ac3:	call	0x1d00


0x3ac8:	nop	dword ptr [rax + rax]


0x3a1c:	test	al, al
0x3a1e:	je	0x3a98


0x3a98:	pop	rbx
0x3a99:	mov	rax, r13
0x3a9c:	pop	rbp
0x3a9d:	pop	r12
0x3a9f:	pop	r13
0x3aa1:	pop	r14
0x3aa3:	ret	


0x3a20:	mov	ebp, 1
0x3a25:	mov	edi, r12d
0x3a28:	call	0x38a0


0x3aed:	mov	rbx, rax
0x3af0:	jmp	0x3b54


0x3b54:	lea	rdi, [rip + 0x12571]
0x3b5b:	call	0x20e0


0x3b60:	test	al, al
0x3b62:	je	0x3af8


0x3af8:	lea	rdi, [rip + 0x125cf]
0x3aff:	mov	r12d, 1
0x3b05:	call	0x20e0


0x3b64:	xor	r12d, r12d
0x3b67:	jmp	0x3b12


0x3b12:	mov	edi, r13d
0x3b15:	xor	r15d, r15d
0x3b18:	call	0x39f0


0x3b1d:	test	r14b, r14b
0x3b20:	mov	rbp, rax
0x3b23:	jne	0x3b70


0x3b25:	mov	rdi, rbx
0x3b28:	call	0x21a0


0x3b70:	mov	rdi, rbx
0x3b73:	call	0x22e0


0x3b78:	mov	rdi, rbp
0x3b7b:	call	0x22e0


0x3b80:	mov	rdi, qword ptr [rbx + 8]
0x3b84:	xor	edx, edx
0x3b86:	cmp	byte ptr [rdi], 0x2d
0x3b89:	sete	dl
0x3b8c:	add	rdx, rdi
0x3b8f:	movsx	eax, byte ptr [rdx]
0x3b92:	jmp	0x3ba7


0x3ba7:	sub	eax, 0x30
0x3baa:	cmp	eax, 9
0x3bad:	jbe	0x3b98


0x3b98:	add	rdx, 1
0x3b9c:	movsx	eax, byte ptr [rdx]
0x3b9f:	test	al, al
0x3ba1:	je	0x3c70


0x3baf:	call	0x19f0


0x3c70:	mov	rsi, qword ptr [rbp + 8]
0x3c74:	xor	edx, edx
0x3c76:	cmp	byte ptr [rsi], 0x2d
0x3c79:	sete	dl
0x3c7c:	add	rdx, rsi
0x3c7f:	movsx	eax, byte ptr [rdx]
0x3c82:	jmp	0x3c93


0x3c93:	sub	eax, 0x30
0x3c96:	cmp	eax, 9
0x3c99:	jbe	0x3c88


0x3c88:	add	rdx, 1
0x3c8c:	movsx	eax, byte ptr [rdx]
0x3c8f:	test	al, al
0x3c91:	je	0x3ca0


0x3c9b:	jmp	0x3baf


0x3ca0:	call	0x64f0


0x3ca5:	jmp	0x3bc7


0x3bc7:	cmp	r12d, 5
0x3bcb:	ja	0x3c30


0x3bcd:	lea	rcx, [rip + 0x1256c]
0x3bd4:	movsxd	rdx, dword ptr [rcx + r12*4]
0x3bd8:	add	rdx, rcx
0x3bdb:	jmp	rdx


0x3c30:	movsxd	rsi, eax
0x3c33:	shr	rsi, 0x3f
0x3c37:	mov	r15, rsi
0x3c3a:	jmp	0x3b25


0x3bb4:	mov	dword ptr [rax], 0
0x3bba:	mov	rsi, qword ptr [rbp + 8]
0x3bbe:	mov	rdi, qword ptr [rbx + 8]
0x3bc2:	call	0x1c70


0x1c70:	jmp	qword ptr [rip + 0x219272]




0x3b2d:	mov	rdi, rbp
0x3b30:	call	0x21a0


0x3b35:	mov	edi, 0x18
0x3b3a:	call	0x6dc0


0x3b3f:	lea	rdi, [rax + 8]
0x3b43:	mov	dword ptr [rax], 0
0x3b49:	mov	rsi, r15
0x3b4c:	mov	rbx, rax
0x3b4f:	call	0x1cc0


0x3b0a:	test	al, al
0x3b0c:	je	0x3c50


0x3c50:	lea	rdi, [rip + 0x1247e]
0x3c57:	call	0x20e0


0x3c5c:	test	al, al
0x3c5e:	je	0x3cb0


0x3cb0:	lea	rdi, [rip + 0x1241a]
0x3cb7:	call	0x20e0


0x3c60:	mov	r12d, 2
0x3c66:	jmp	0x3b12


0x3cbc:	test	al, al
0x3cbe:	jne	0x3c60


0x3cc0:	lea	rdi, [rip + 0x1240d]
0x3cc7:	mov	r12d, 3
0x3ccd:	call	0x20e0


0x3cd2:	test	al, al
0x3cd4:	jne	0x3b12


0x3cda:	lea	rdi, [rip + 0x123f6]
0x3ce1:	mov	r12d, 4
0x3ce7:	call	0x20e0


0x3cec:	test	al, al
0x3cee:	jne	0x3b12


0x3cf4:	lea	rdi, [rip + 0x123df]
0x3cfb:	call	0x20e0


0x3d00:	test	al, al
0x3d02:	je	0x3d0f


0x3d0f:	add	rsp, 8
0x3d13:	mov	rax, rbx
0x3d16:	pop	rbx
0x3d17:	pop	rbp
0x3d18:	pop	r12
0x3d1a:	pop	r13
0x3d1c:	pop	r14
0x3d1e:	pop	r15
0x3d20:	ret	


0x3d04:	mov	r12d, 5
0x3d0a:	jmp	0x3b12


0x3d40:	mov	rbx, rax
0x3d43:	lea	rdi, [rip + 0x12392]
0x3d4a:	call	0x20e0


0x3d4f:	test	al, al
0x3d51:	je	0x3dc6


0x3dc6:	mov	rax, rbx
0x3dc9:	pop	rbx
0x3dca:	pop	rbp
0x3dcb:	pop	r12
0x3dcd:	ret	


0x3d53:	xor	edi, edi
0x3d55:	test	r12b, r12b
0x3d58:	je	0x3d68


0x3d68:	call	0x3ad0


0x3d5a:	mov	rdi, rbx
0x3d5d:	call	0x21e0


0x3d62:	xor	eax, 1
0x3d65:	movzx	edi, al
0x3d68:	call	0x3ad0


0x3d6d:	mov	rdi, rbx
0x3d70:	mov	rbp, rax
0x3d73:	call	0x21e0


0x3d78:	test	al, al
0x3d7a:	jne	0x3d88


0x3d7c:	mov	rdi, rbp
0x3d7f:	call	0x21e0


0x3d88:	mov	rdi, rbx
0x3d8b:	call	0x21a0


0x3d90:	mov	rdi, rbp
0x3d93:	call	0x21a0


0x3d98:	mov	edi, 0x18
0x3d9d:	call	0x6dc0


0x3da2:	lea	rdi, [rax + 8]
0x3da6:	xor	esi, esi
0x3da8:	mov	dword ptr [rax], 0
0x3dae:	mov	rbx, rax
0x3db1:	call	0x1cc0


0x3db6:	lea	rdi, [rip + 0x1231f]
0x3dbd:	call	0x20e0


0x3dc2:	test	al, al
0x3dc4:	jne	0x3d53


0x3d84:	test	al, al
0x3d86:	je	0x3dd0


0x3dd0:	mov	rdi, rbp
0x3dd3:	call	0x21a0


0x3dd8:	jmp	0x3d43


0x3d43:	lea	rdi, [rip + 0x12392]
0x3d4a:	call	0x20e0


0x3df0:	mov	rbx, rax
0x3df3:	nop	dword ptr [rax + rax]
0x3df8:	lea	rdi, [rip + 0x122df]
0x3dff:	call	0x20e0


0x3e04:	test	al, al
0x3e06:	je	0x3e7b


0x3e7b:	mov	rax, rbx
0x3e7e:	pop	rbx
0x3e7f:	pop	rbp
0x3e80:	pop	r12
0x3e82:	ret	


0x3e08:	xor	edi, edi
0x3e0a:	test	r12b, r12b
0x3e0d:	je	0x3e1a


0x3e1a:	call	0x3d30


0x3e0f:	mov	rdi, rbx
0x3e12:	call	0x21e0


0x3e17:	movzx	edi, al
0x3e1a:	call	0x3d30


0x3e1f:	mov	rdi, rbx
0x3e22:	mov	rbp, rax
0x3e25:	call	0x21e0


0x3e2a:	test	al, al
0x3e2c:	je	0x3e88


0x3e88:	mov	rdi, rbp
0x3e8b:	call	0x21a0


0x3e2e:	mov	rdi, rbx
0x3e31:	mov	rbx, rbp
0x3e34:	call	0x21a0


0x3e39:	mov	rdi, rbp
0x3e3c:	call	0x21e0


0x3e41:	test	al, al
0x3e43:	je	0x3df8


0x3df8:	lea	rdi, [rip + 0x122df]
0x3dff:	call	0x20e0


0x3e45:	mov	rdi, rbp
0x3e48:	call	0x21a0


0x3e4d:	mov	edi, 0x18
0x3e52:	call	0x6dc0


0x3e57:	lea	rdi, [rax + 8]
0x3e5b:	xor	esi, esi
0x3e5d:	mov	dword ptr [rax], 0
0x3e63:	mov	rbx, rax
0x3e66:	call	0x1cc0


0x3e6b:	lea	rdi, [rip + 0x1226c]
0x3e72:	call	0x20e0


0x3e77:	test	al, al
0x3e79:	jne	0x3e08


0x3e90:	jmp	0x3df8


0x2d12:	mov	r13, rax
0x2d15:	mov	rax, qword ptr [rip + 0x2183b4]
0x2d1c:	cmp	qword ptr [rax], 0
0x2d20:	je	0x37c8


0x37c8:	mov	rdx, qword ptr [rax - 8]
0x37cc:	mov	esi, 8
0x37d1:	xor	edi, edi
0x37d3:	call	0x60a0


0x2d26:	lea	rdi, [rip + 0x139f0]
0x2d2d:	call	0x20e0


0x2d32:	test	al, al
0x2d34:	jne	0x2da2


0x2d36:	mov	rax, qword ptr [rip + 0x218393]
0x2d3d:	mov	esi, 8
0x2d42:	xor	edi, edi
0x2d44:	mov	rdx, qword ptr [rax]
0x2d47:	call	0x60a0


0x3686:	mov	qword ptr [rsp + 8], rax
0x368b:	mov	rax, qword ptr [rsp + 8]
0x3690:	mov	byte ptr [rax], 0
0x3693:	jmp	0x2f00


0x3557:	mov	r8, qword ptr [rsp + 0x18]
0x355c:	mov	rcx, qword ptr [rsp + 0x10]
0x3561:	mov	qword ptr [rsp + 8], rax
0x3566:	add	rcx, r8
0x3569:	mov	byte ptr [rsp + 0xbc], 0
0x3571:	add	r14, 1
0x3575:	mov	qword ptr [rsp + 0xc0], rcx
0x357d:	cmp	byte ptr [rsp + 0xb0], 0
0x3585:	je	0x34c0


0x305b:	cmp	byte ptr [r14 + rax], 0
0x3060:	je	0x2fd1


0x3066:	lea	rbp, [rax + 1]
0x306a:	jmp	0x2fd3


0x275e:	test	eax, eax
0x2760:	jne	0x26d7


0x26d7:	lea	r12, [rip + 0x138b1]
0x26de:	mov	r13, qword ptr [rip + 0x2189a3]
0x26e5:	lea	rsi, [rip + 0x1376c]
0x26ec:	xor	edi, edi
0x26ee:	mov	edx, 5
0x26f3:	call	0x1a90


0x26f8:	mov	rsi, r13
0x26fb:	mov	rdi, rax
0x26fe:	call	0x1bb0


0x2703:	jmp	0x2665


0x2661:	test	eax, eax
0x2663:	jne	0x26de


0x26de:	mov	r13, qword ptr [rip + 0x2189a3]
0x26e5:	lea	rsi, [rip + 0x1376c]
0x26ec:	xor	edi, edi
0x26ee:	mov	edx, 5
0x26f3:	call	0x1a90


0x2712:	jmp	0x23d0


0x23d0:	mov	rbx, qword ptr [rip + 0x218cb1]
0x23d7:	lea	rsi, [rip + 0x132a2]
0x23de:	mov	edx, 5
0x23e3:	xor	edi, edi
0x23e5:	call	0x1a90


0x1e53:	lea	rdi, [rip + 0x2066]
0x1e5a:	mov	dword ptr [rip + 0x2191ac], 3
0x1e64:	call	0x155b0


0x1e69:	lea	rax, [rip + 0x1428d]
0x1e70:	push	0
0x1e72:	lea	r9, [rip + 0x4b7]
0x1e79:	lea	r8, [rip + 0x14278]
0x1e80:	lea	rcx, [rip + 0x14183]
0x1e87:	lea	rdx, [rip + 0x14101]
0x1e8e:	push	rax
0x1e8f:	lea	rax, [rip + 0x14273]
0x1e96:	mov	rsi, rbx
0x1e99:	mov	edi, ebp
0x1e9b:	push	rax
0x1e9c:	lea	rax, [rip + 0x14275]
0x1ea3:	push	rax
0x1ea4:	xor	eax, eax
0x1ea6:	call	0x3f70


0x1eab:	add	rsp, 0x20
0x1eaf:	cmp	ebp, 1
0x1eb2:	jbe	0x1fa0


0x1fa0:	lea	rsi, [rip + 0x14180]
0x1fa7:	mov	edx, 5
0x1fac:	xor	edi, edi
0x1fae:	call	0x1a90


0x1eb8:	mov	rdi, qword ptr [rbx + 8]
0x1ebc:	lea	rsi, [rip + 0x14261]
0x1ec3:	call	0x1bd0


0x1ec8:	test	eax, eax
0x1eca:	jne	0x1ed9


0x1ecc:	cmp	ebp, 2
0x1ecf:	je	0x1fa0


0x1ed9:	add	rbx, 8
0x1edd:	mov	edi, 1
0x1ee2:	mov	qword ptr [rip + 0x2191e7], rbx
0x1ee9:	call	0x3de0


0x1ed5:	add	rbx, 8
0x1ed9:	add	rbx, 8
0x1edd:	mov	edi, 1
0x1ee2:	mov	qword ptr [rip + 0x2191e7], rbx
0x1ee9:	call	0x3de0


0x1eee:	mov	rbx, rax
0x1ef1:	mov	rax, qword ptr [rip + 0x2191d8]
0x1ef8:	mov	rdx, qword ptr [rax]
0x1efb:	test	rdx, rdx
0x1efe:	jne	0x1f6a


0x1f00:	mov	eax, dword ptr [rbx]
0x1f02:	test	eax, eax
0x1f04:	je	0x1f26


0x1f6a:	mov	esi, 8
0x1f6f:	xor	edi, edi
0x1f71:	call	0x60a0


0x1f26:	mov	rdi, qword ptr [rip + 0x21915b]
0x1f2d:	lea	rdx, [rbx + 8]
0x1f31:	mov	esi, 0xa
0x1f36:	call	0x1b40


0x1f06:	sub	eax, 1
0x1f09:	jne	0x1f65


0x1b40:	jmp	qword ptr [rip + 0x21930a]


0x1f0b:	mov	rdi, qword ptr [rbx + 8]
0x1f0f:	call	0x1a30


0x1f65:	call	0x19e0




0x1a30:	jmp	qword ptr [rip + 0x219392]




0x1fb3:	xor	edi, edi
0x1fb5:	mov	rdx, rax
0x1fb8:	xor	esi, esi
0x1fba:	xor	eax, eax
0x1fbc:	call	0x1d00


0x1fc1:	mov	edi, 2
0x1fc6:	call	0x2330


0x15434:	test	eax, eax
0x15436:	je	0x15474


0x15438:	call	0x19f0


0x1543d:	mov	r12d, dword ptr [rax]
0x15440:	mov	rdi, rbx
0x15443:	mov	rbp, rax
0x15446:	call	0x1a70


0x1544b:	test	r12d, r12d
0x1544e:	jne	0x15480


0x15450:	pop	rbx
0x15451:	pop	rbp
0x15452:	pop	r12
0x15454:	ret	


0x15480:	mov	dword ptr [rbp], r12d
0x15484:	mov	eax, 0xffffffff
0x15489:	jmp	0x15450


0x1530a:	and	ebx, 0x20
0x1530d:	test	ebx, ebx
0x1530f:	jne	0x15328


0x15311:	test	eax, eax
0x15313:	je	0x1531f


0x15328:	test	eax, eax
0x1532a:	jne	0x15348


0x1531f:	pop	rbx
0x15320:	pop	rbp
0x15321:	pop	r12
0x15323:	ret	


0x15315:	test	r12, r12
0x15318:	mov	eax, 0xffffffff
0x1531d:	je	0x15358


0x1532c:	call	0x19f0


0x15348:	pop	rbx
0x15349:	mov	eax, 0xffffffff
0x1534e:	pop	rbp
0x1534f:	pop	r12
0x15351:	ret	


0x15358:	call	0x19f0


0x1535d:	cmp	dword ptr [rax], 9
0x15360:	pop	rbx
0x15361:	pop	rbp
0x15362:	pop	r12
0x15364:	setne	al
0x15367:	movzx	eax, al
0x1536a:	neg	eax
0x1536c:	ret	


0x15331:	mov	dword ptr [rax], 0
0x15337:	mov	eax, 0xffffffff
0x1533c:	pop	rbx
0x1533d:	pop	rbp
0x1533e:	pop	r12
0x15340:	ret	


0x13b24:	mov	rax, qword ptr [rsp + 8]
0x13b29:	mov	qword ptr [rax], 0
0x13b30:	mov	qword ptr [rax + 8], 0
0x13b38:	mov	eax, dword ptr [rsp + 0x4c]
0x13b3c:	mov	rbx, qword ptr [rsp + 0x118]
0x13b44:	xor	rbx, qword ptr fs:[0x28]
0x13b4d:	jne	0x14890


0x3ed2:	test	eax, eax
0x3ed4:	je	0x3eec


0x3eec:	mov	rdi, qword ptr [rip + 0x2171cd]
0x3ef3:	call	0x152f0


0x3ed6:	call	0x19f0


0x3edb:	cmp	byte ptr [rip + 0x2171f6], 0
0x3ee2:	mov	rbx, rax
0x3ee5:	je	0x3f03


0x3f03:	lea	rsi, [rip + 0x12269]
0x3f0a:	xor	edi, edi
0x3f0c:	mov	edx, 5
0x3f11:	call	0x1a90


0x3ee7:	cmp	dword ptr [rax], 0x20
0x3eea:	jne	0x3f03


0x3f16:	mov	rdi, qword ptr [rip + 0x2171c3]
0x3f1d:	mov	rbp, rax
0x3f20:	test	rdi, rdi
0x3f23:	je	0x3f4d


0x3f4d:	mov	esi, dword ptr [rbx]
0x3f4f:	lea	rdx, [rip + 0x1222d]
0x3f56:	mov	rcx, rax
0x3f59:	xor	edi, edi
0x3f5b:	xor	eax, eax
0x3f5d:	call	0x1d00


0x3f25:	call	0x6290


0x3f62:	jmp	0x3f42


0x3f42:	mov	edi, dword ptr [rip + 0x2170c8]
0x3f48:	call	0x1a10


0x1a10:	jmp	qword ptr [rip + 0x2193a2]




0x3ef8:	test	eax, eax
0x3efa:	jne	0x3f42


0x3efc:	add	rsp, 8
0x3f00:	pop	rbx
0x3f01:	pop	rbp
0x3f02:	ret	


0x1f14:	mov	rdi, rbx
0x1f17:	call	0x21e0


0x1f1c:	add	rsp, 8
0x1f20:	movzx	eax, al
0x1f23:	pop	rbx
0x1f24:	pop	rbp
0x1f25:	ret	


0x1f3b:	mov	rdi, qword ptr [rip + 0x219146]
0x1f42:	mov	rax, qword ptr [rdi + 0x28]
0x1f46:	cmp	rax, qword ptr [rdi + 0x30]
0x1f4a:	jae	0x1f59


0x1f4c:	lea	rdx, [rax + 1]
0x1f50:	mov	qword ptr [rdi + 0x28], rdx
0x1f54:	mov	byte ptr [rax], 0xa
0x1f57:	jmp	0x1f14


0x1f59:	mov	esi, 0xa
0x1f5e:	call	0x1b10


0x1f63:	jmp	0x1f14


0x3f2a:	mov	esi, dword ptr [rbx]
0x3f2c:	lea	rdx, [rip + 0x1224c]
0x3f33:	mov	rcx, rax
0x3f36:	mov	r8, rbp
0x3f39:	xor	edi, edi
0x3f3b:	xor	eax, eax
0x3f3d:	call	0x1d00


0x13dc0:	mov	rax, qword ptr [rsp + 8]
0x13dc5:	mov	rdi, qword ptr [r13 + 0xe0]
0x13dcc:	mov	rdx, qword ptr [rax + 0x30]
0x13dd0:	test	rdx, rdx
0x13dd3:	je	0x146c4


0x146c4:	call	0x19d0


0x13dd9:	mov	rax, qword ptr [rdi]
0x13ddc:	test	rax, rax
0x13ddf:	je	0x13dee


0x13dee:	add	rax, 1
0x13df2:	cmp	rdx, rax
0x13df5:	ja	0x13de8


0x13de1:	jmp	0x13dfd


0x13df7:	je	0x146c4


0x13de8:	cmp	qword ptr [rdi + rax*8], rax
0x13dec:	jne	0x13dfd


0x146c9:	mov	qword ptr [r13 + 0xe0], 0
0x146d4:	jmp	0x13dfd


0x5efc:	lea	rsi, [rax + 1]
0x5f00:	mov	qword ptr [rsp + 0x48], rax
0x5f05:	add	rsp, 0x20
0x5f09:	mov	rdi, rsi
0x5f0c:	mov	qword ptr [rsp + 0x18], rsi
0x5f11:	call	0x6dc0


0x5f16:	mov	qword ptr [rsp + 0x10], rax
0x5f1b:	sub	rsp, 8
0x5f1f:	push	qword ptr [rbx + 0x30]
0x5f22:	push	qword ptr [rbx + 0x28]
0x5f25:	mov	r10, qword ptr [rsp + 0x38]
0x5f2a:	mov	r9d, ebp
0x5f2d:	mov	r8d, dword ptr [rbx]
0x5f30:	mov	rcx, r15
0x5f33:	mov	rdx, r14
0x5f36:	mov	rdi, rax
0x5f39:	push	r10
0x5f3b:	mov	rsi, qword ptr [rsp + 0x38]
0x5f40:	call	0x4910


0x5f45:	mov	eax, dword ptr [rsp + 0x2c]
0x5f49:	add	rsp, 0x20
0x5f4d:	test	r12, r12
0x5f50:	mov	dword ptr [r13], eax
0x5f54:	je	0x5f5f


0x5f5f:	mov	rax, qword ptr [rsp + 0x10]
0x5f64:	add	rsp, 0x38
0x5f68:	pop	rbx
0x5f69:	pop	rbp
0x5f6a:	pop	r12
0x5f6c:	pop	r13
0x5f6e:	pop	r14
0x5f70:	pop	r15
0x5f72:	ret	


0x5f56:	mov	r11, qword ptr [rsp + 0x28]
0x5f5b:	mov	qword ptr [r12], r11
0x5f5f:	mov	rax, qword ptr [rsp + 0x10]
0x5f64:	add	rsp, 0x38
0x5f68:	pop	rbx
0x5f69:	pop	rbp
0x5f6a:	pop	r12
0x5f6c:	pop	r13
0x5f6e:	pop	r14
0x5f70:	pop	r15
0x5f72:	ret	


0x5e71:	mov	dword ptr [rbp], r12d
0x5e75:	add	rsp, 0x38
0x5e79:	pop	rbx
0x5e7a:	pop	rbp
0x5e7b:	pop	r12
0x5e7d:	pop	r13
0x5e7f:	pop	r14
0x5e81:	pop	r15
0x5e83:	ret	


0x5c3c:	add	rsp, 0x20
0x5c40:	mov	r11, qword ptr [rsp + 0x10]
0x5c45:	cmp	r11, rax
0x5c48:	ja	0x5cb1


0x5c4a:	lea	rsi, [rax + 1]
0x5c4e:	lea	rax, [rip + 0x2154ab]
0x5c55:	cmp	r12, rax
0x5c58:	mov	qword ptr [rbx], rsi
0x5c5b:	je	0x5c6f


0x5cb1:	mov	eax, dword ptr [rsp + 0x18]
0x5cb5:	mov	dword ptr [r13], eax
0x5cb9:	add	rsp, 0x28
0x5cbd:	mov	rax, r12
0x5cc0:	pop	rbx
0x5cc1:	pop	rbp
0x5cc2:	pop	r12
0x5cc4:	pop	r13
0x5cc6:	pop	r14
0x5cc8:	pop	r15
0x5cca:	ret	


0x5c6f:	mov	rdi, rsi
0x5c72:	mov	qword ptr [rsp + 0x10], rsi
0x5c77:	call	0x6dc0


0x5c5d:	mov	rdi, r12
0x5c60:	mov	qword ptr [rsp + 0x10], rsi
0x5c65:	call	0x19d0


0x5c6a:	mov	rsi, qword ptr [rsp + 0x10]
0x5c6f:	mov	rdi, rsi
0x5c72:	mov	qword ptr [rsp + 0x10], rsi
0x5c77:	call	0x6dc0


0x5c7c:	sub	rsp, 8
0x5c80:	mov	qword ptr [rbx + 8], rax
0x5c84:	mov	r8d, dword ptr [rbp]
0x5c88:	push	qword ptr [rbp + 0x30]
0x5c8b:	push	qword ptr [rbp + 0x28]
0x5c8e:	mov	rcx, r14
0x5c91:	push	r15
0x5c93:	mov	r9d, dword ptr [rsp + 0x3c]
0x5c98:	mov	rdi, rax
0x5c9b:	mov	rdx, qword ptr [rsp + 0x28]
0x5ca0:	mov	rsi, qword ptr [rsp + 0x30]
0x5ca5:	mov	r12, rax
0x5ca8:	call	0x4910


0x63c2:	mov	rdi, qword ptr [rsp + 0x38]
0x63c7:	xor	rdi, qword ptr fs:[0x28]
0x63d0:	jne	0x63dc


0x63d2:	add	rsp, 0x48
0x63d6:	ret	


0x63dc:	call	0x1ad0


0x610f:	mov	rcx, qword ptr [rsp + 0x38]
0x6114:	xor	rcx, qword ptr fs:[0x28]
0x611d:	jne	0x6129


0x611f:	add	rsp, 0x48
0x6123:	ret	


0x6129:	call	0x1ad0


0x1f76:	lea	rsi, [rip + 0x13fdb]
0x1f7d:	mov	rbx, rax
0x1f80:	mov	edx, 5
0x1f85:	xor	edi, edi
0x1f87:	call	0x1a90


0x1f8c:	mov	rcx, rbx
0x1f8f:	mov	rdx, rax
0x1f92:	xor	esi, esi
0x1f94:	mov	edi, 2
0x1f99:	xor	eax, eax
0x1f9b:	call	0x1d00


0x2d4c:	lea	rsi, [rip + 0x131d5]
0x2d53:	mov	rbx, rax
0x2d56:	mov	edx, 5
0x2d5b:	xor	edi, edi
0x2d5d:	call	0x1a90


0x2d62:	mov	rcx, rbx
0x2d65:	mov	rdx, rax
0x2d68:	xor	esi, esi
0x2d6a:	mov	edi, 2
0x2d6f:	xor	eax, eax
0x2d71:	call	0x1d00


0x37d8:	lea	rsi, [rip + 0x12721]
0x37df:	mov	rbx, rax
0x37e2:	mov	edx, 5
0x37e7:	xor	edi, edi
0x37e9:	call	0x1a90


0x37ee:	mov	rcx, rbx
0x37f1:	mov	rdx, rax
0x37f4:	xor	esi, esi
0x37f6:	mov	edi, 2
0x37fb:	xor	eax, eax
0x37fd:	call	0x1d00


0x3802:	nop	dword ptr [rax]
0x3806:	nop	word ptr cs:[rax + rax]


0x2130:	lea	rsi, [rip + 0x134b1]
0x2137:	mov	rbx, rax
0x213a:	mov	edx, 5
0x213f:	xor	edi, edi
0x2141:	call	0x1a90


0x2146:	mov	rcx, rbx
0x2149:	mov	rdx, rax
0x214c:	xor	esi, esi
0x214e:	mov	edi, 2
0x2153:	xor	eax, eax
0x2155:	call	0x1d00


0x215a:	nop	word ptr [rax + rax]


0x619b:	mov	rdx, qword ptr [rsp + 0x38]
0x61a0:	xor	rdx, qword ptr fs:[0x28]
0x61a9:	jne	0x61b5


0x61ab:	add	rsp, 0x48
0x61af:	ret	


0x61b5:	call	0x1ad0


0x632f:	mov	rcx, qword ptr [rsp + 0x38]
0x6334:	xor	rcx, qword ptr fs:[0x28]
0x633d:	jne	0x6349


0x633f:	add	rsp, 0x48
0x6343:	ret	


0x6349:	call	0x1ad0


0x625e:	mov	rsi, qword ptr [rsp + 0x38]
0x6263:	xor	rsi, qword ptr fs:[0x28]
0x626c:	jne	0x6273


0x626e:	add	rsp, 0x48
0x6272:	ret	


0x6273:	call	0x1ad0


0x5cad:	add	rsp, 0x20
0x5cb1:	mov	eax, dword ptr [rsp + 0x18]
0x5cb5:	mov	dword ptr [r13], eax
0x5cb9:	add	rsp, 0x28
0x5cbd:	mov	rax, r12
0x5cc0:	pop	rbx
0x5cc1:	pop	rbp
0x5cc2:	pop	r12
0x5cc4:	pop	r13
0x5cc6:	pop	r14
0x5cc8:	pop	r15
0x5cca:	ret	


0x13e12:	test	eax, eax
0x13e14:	jne	0x13ac0


0x13e1a:	mov	rdi, qword ptr [r13 + 0x68]
0x13e1e:	lea	rsi, [rip - 0x7c05]
0x13e25:	mov	rdx, r13
0x13e28:	call	0x74d0


0x13e2d:	test	eax, eax
0x13e2f:	jne	0x13ac0


0x13e35:	mov	rdi, qword ptr [r13 + 0x68]
0x13e39:	lea	rsi, [rip - 0xb000]
0x13e40:	mov	rdx, r13
0x13e43:	call	0x7540


0x13e48:	mov	rdx, qword ptr [r13 + 0x68]
0x13e4c:	lea	rsi, [rip + 0x3155]
0x13e53:	nop	dword ptr [rax + rax]
0x13e58:	movzx	ecx, byte ptr [rdx + 0x30]
0x13e5c:	mov	rdi, qword ptr [rdx + 0x38]
0x13e60:	cmp	cl, 0x10
0x13e63:	ja	0x13f38


0x13e69:	movzx	eax, cl
0x13e6c:	movsxd	rax, dword ptr [rsi + rax*4]
0x13e70:	add	rax, rsi
0x13e73:	jmp	rax


0x13f38:	and	ecx, 8
0x13f3b:	jne	0x14852


0x13f41:	mov	rax, qword ptr [rdx + 0x20]
0x13f45:	mov	rcx, qword ptr [rax + 0x38]
0x13f49:	mov	rax, qword ptr [r13 + 0x18]
0x13f4d:	mov	qword ptr [rax + rdi*8], rcx
0x13f51:	mov	r15, qword ptr [rdx + 8]
0x13f55:	xor	edi, edi
0x13f57:	test	r15, r15
0x13f5a:	je	0x13f6b


0x14852:	lea	rcx, [rip + 0x2807]
0x14859:	lea	rsi, [rip + 0x2240]
0x14860:	lea	rdi, [rip + 0x2259]
0x14867:	mov	edx, 0x5c2
0x1486c:	call	0x1b50


0x13f6b:	mov	r15, qword ptr [rdx + 0x10]
0x13f6f:	test	r15, r15
0x13f72:	sete	cl
0x13f75:	cmp	r15, rdi
0x13f78:	sete	al
0x13f7b:	or	cl, al
0x13f7d:	mov	byte ptr [rsp + 0x10], cl
0x13f81:	je	0x13f5c


0x13f5c:	mov	rdx, r15
0x13f5f:	jmp	0x13e58


0x13f83:	mov	rax, qword ptr [rdx]
0x13f86:	mov	rdi, rdx
0x13f89:	test	rax, rax
0x13f8c:	jne	0x13f68


0x13e58:	movzx	ecx, byte ptr [rdx + 0x30]
0x13e5c:	mov	rdi, qword ptr [rdx + 0x38]
0x13e60:	cmp	cl, 0x10
0x13e63:	ja	0x13f38


0x13f8e:	xor	r14d, r14d
0x13f91:	xor	r15d, r15d
0x13f94:	nop	dword ptr [rax]
0x13f98:	mov	rdx, qword ptr [r13 + 0x10]
0x13f9c:	cmp	rdx, r15
0x13f9f:	je	0x13fc6


0x13f68:	mov	rdx, rax
0x13f6b:	mov	r15, qword ptr [rdx + 0x10]
0x13f6f:	test	r15, r15
0x13f72:	sete	cl
0x13f75:	cmp	r15, rdi
0x13f78:	sete	al
0x13f7b:	or	cl, al
0x13f7d:	mov	byte ptr [rsp + 0x10], cl
0x13f81:	je	0x13f5c


0x13fc6:	test	r14b, r14b
0x13fc9:	je	0x1420e


0x13fa1:	lea	r10, [r15 + r15*2]
0x13fa5:	mov	rax, qword ptr [r13 + 0x30]
0x13fa9:	shl	r10, 3
0x13fad:	cmp	qword ptr [rax + r10 + 8], 0
0x13fb3:	je	0x141b8


0x1420e:	mov	rax, qword ptr [rsp + 8]
0x14213:	test	byte ptr [rax + 0x38], 0x10
0x14217:	jne	0x1422a


0x13fcf:	xor	r14d, r14d
0x13fd2:	xor	r15d, r15d
0x13fd5:	jmp	0x13fa1


0x141b8:	mov	ecx, 1
0x141bd:	mov	rdx, r15
0x141c0:	mov	rsi, r13
0x141c3:	mov	rdi, r12
0x141c6:	mov	qword ptr [rsp], r10
0x141ca:	call	0x92f0


0x13fb9:	mov	rdx, qword ptr [r13 + 0x10]
0x13fbd:	add	r15, 1
0x13fc1:	cmp	rdx, r15
0x13fc4:	jne	0x13fa1


0x14219:	cmp	qword ptr [rax + 0x30], 0
0x1421e:	je	0x1422a


0x1422a:	cmp	qword ptr [r13 + 0x98], 0
0x14232:	je	0x1432b


0x14220:	test	byte ptr [r13 + 0xb0], 1
0x14228:	jne	0x14238


0x1432b:	movzx	eax, byte ptr [rbx + 0xb0]
0x14332:	mov	dword ptr [rsp + 0x4c], 0
0x1433a:	shr	al, 2
0x1433d:	cmp	qword ptr [rsp + 0x20], 0
0x14343:	sete	dl
0x14346:	and	al, dl
0x14348:	jne	0x1452f


0x14238:	lea	rdi, [rdx + rdx*2]
0x1423c:	mov	qword ptr [rsp], rdx
0x14240:	shl	rdi, 3
0x14244:	call	0x1c20


0x1434e:	mov	rax, qword ptr [rbx + 0x68]
0x14352:	mov	rdi, r12
0x14355:	mov	rax, qword ptr [rax + 0x18]
0x14359:	mov	rax, qword ptr [rax + 0x38]
0x1435d:	lea	rdx, [rax + rax*2]
0x14361:	mov	qword ptr [rbx + 0x90], rax
0x14368:	mov	rax, qword ptr [rbx + 0x30]
0x1436c:	lea	rsi, [rax + rdx*8]
0x14370:	call	0x9d50


0x1452f:	mov	rcx, qword ptr [rsp + 8]
0x14534:	cmp	qword ptr [rcx + 0x28], 0
0x14539:	jne	0x1434e


0x1453f:	mov	r10, qword ptr [rbx + 0x10]
0x14543:	test	r10, r10
0x14546:	je	0x147fa


0x147fa:	cmp	qword ptr [rbx + 0x98], 0
0x14802:	movzx	edx, byte ptr [rbx + 0xb0]
0x14809:	mov	dword ptr [rbx + 0xb4], 1
0x14813:	setg	al
0x14816:	and	edx, 0xfffffff9
0x14819:	or	eax, r14d
0x1481c:	and	eax, 1
0x1481f:	add	eax, eax
0x14821:	or	eax, edx
0x14823:	mov	byte ptr [rbx + 0xb0], al
0x14829:	jmp	0x1434e


0x1454c:	mov	rsi, qword ptr [rbx]
0x1454f:	lea	r9, [rip + 0x2a96]
0x14556:	xor	r8d, r8d
0x14559:	xor	edx, edx
0x1455b:	mov	rcx, rsi
0x1455e:	cmp	byte ptr [rcx + 8], 0xc
0x14562:	ja	0x1482e


0x14568:	movzx	edi, byte ptr [rcx + 8]
0x1456c:	movsxd	rdi, dword ptr [r9 + rdi*4]
0x14570:	add	rdi, r9
0x14573:	jmp	rdi


0x1482e:	call	0x19e0


0x14375:	test	eax, eax
0x14377:	mov	r15d, eax
0x1437a:	mov	dword ptr [rsp + 0x50], eax
0x1437e:	jne	0x1449f


0x14384:	cmp	qword ptr [rbx + 0x98], 0
0x1438c:	jle	0x14460


0x1449f:	mov	rax, qword ptr [rsp + 8]
0x144a4:	mov	dword ptr [rsp + 0x4c], r15d
0x144a9:	mov	r13, qword ptr [rax]
0x144ac:	mov	rdi, qword ptr [r13 + 0x70]
0x144b0:	test	rdi, rdi
0x144b3:	je	0x144c8


0x14460:	mov	rdi, qword ptr [rsp + 0x28]
0x14465:	xor	ecx, ecx
0x14467:	mov	rdx, r12
0x1446a:	mov	rsi, rbx
0x1446d:	call	0x9f40


0x14392:	mov	r9, qword ptr [rsp + 0x68]
0x14397:	test	r9, r9
0x1439a:	jle	0x14460


0x144c8:	mov	rdi, qword ptr [r13 + 0x20]
0x144cc:	mov	qword ptr [r13 + 0x70], 0
0x144d4:	mov	dword ptr [r13 + 0x80], 0xf
0x144df:	mov	qword ptr [r13 + 0x68], 0
0x144e7:	call	0x19d0


0x143a0:	xor	r10d, r10d
0x143a3:	lea	r13, [r12 + 0x10]
0x143a8:	jmp	0x143bd


0x143bd:	mov	rcx, qword ptr [rsp + 0x70]
0x143c2:	mov	rsi, qword ptr [rbx]
0x143c5:	mov	r8, qword ptr [rcx + r10*8]
0x143c9:	mov	rdi, r8
0x143cc:	shl	rdi, 4
0x143d0:	add	rdi, rsi
0x143d3:	cmp	byte ptr [rdi + 8], 4
0x143d7:	jne	0x143b0


0x143d9:	xor	edx, edx
0x143db:	jmp	0x143e9


0x143b0:	add	r10, 1
0x143b4:	cmp	r9, r10
0x143b7:	jle	0x14460


0x143e9:	mov	rax, qword ptr [rcx + rdx*8]
0x143ed:	shl	rax, 4
0x143f1:	add	rax, rsi
0x143f4:	cmp	byte ptr [rax + 8], 9
0x143f8:	jne	0x143e0


0x143fa:	mov	r11, qword ptr [rdi]
0x143fd:	cmp	qword ptr [rax], r11
0x14400:	jne	0x143e0


0x143e0:	add	rdx, 1
0x143e4:	cmp	r9, rdx
0x143e7:	je	0x143b0


0x14402:	mov	rdx, qword ptr [rbx + 0x28]
0x14406:	lea	rax, [r8 + r8*2]
0x1440a:	mov	rsi, r13
0x1440d:	mov	rdi, r9
0x14410:	lea	rax, [rdx + rax*8]
0x14414:	mov	rax, qword ptr [rax + 0x10]
0x14418:	mov	r11, qword ptr [rax]
0x1441b:	mov	rdx, r11
0x1441e:	call	0x8bf0


0x14423:	test	rax, rax
0x14426:	jne	0x143b0


0x14428:	mov	rax, qword ptr [rbx + 0x30]
0x1442c:	lea	rdx, [r11 + r11*2]
0x14430:	mov	rdi, r12
0x14433:	lea	rsi, [rax + rdx*8]
0x14437:	call	0x9110


0x1443c:	test	eax, eax
0x1443e:	jne	0x14780


0x14444:	mov	r9, qword ptr [rsp + 0x68]
0x14449:	mov	r10d, 1
0x1444f:	cmp	r9, r10
0x14452:	jg	0x143bd


0x14780:	mov	r15d, eax
0x14783:	jmp	0x1449f


0x144c0:	test	r12, r12
0x144c3:	mov	rdi, r12
0x144c6:	jne	0x144b8


0x144b8:	mov	r12, qword ptr [rdi]
0x144bb:	call	0x19d0


0x144ec:	mov	qword ptr [r13 + 0x20], 0
0x144f4:	mov	rdi, rbp
0x144f7:	call	0x88e0


0x144fc:	mov	eax, dword ptr [rsp + 0x4c]
0x14500:	test	eax, eax
0x14502:	je	0x13b3c


0x14508:	jmp	0x13b1c


0x14472:	test	rax, rax
0x14475:	mov	qword ptr [rbx + 0x48], rax
0x14479:	je	0x145e2


0x145e2:	mov	r15d, dword ptr [rsp + 0x50]
0x145e7:	jmp	0x1449f


0x1447f:	cmp	byte ptr [rax + 0x68], 0
0x14483:	js	0x14581


0x14581:	mov	r14, qword ptr [rsp + 0x28]
0x14586:	mov	ecx, 1
0x1458b:	mov	rdx, r12
0x1458e:	mov	rsi, rbx
0x14591:	mov	rdi, r14
0x14594:	call	0x9f40


0x14489:	mov	qword ptr [rbx + 0x60], rax
0x1448d:	mov	qword ptr [rbx + 0x58], rax
0x14491:	mov	qword ptr [rbx + 0x50], rax
0x14495:	mov	rdi, qword ptr [rsp + 0x70]
0x1449a:	call	0x19d0


0x14599:	mov	ecx, 2
0x1459e:	mov	rdx, r12
0x145a1:	mov	rsi, rbx
0x145a4:	mov	rdi, r14
0x145a7:	mov	qword ptr [rbx + 0x50], rax
0x145ab:	call	0x9f40


0x145b0:	mov	ecx, 6
0x145b5:	mov	qword ptr [rbx + 0x58], rax
0x145b9:	mov	rdx, r12
0x145bc:	mov	rsi, rbx
0x145bf:	mov	rdi, r14
0x145c2:	call	0x9f40


0x145c7:	cmp	qword ptr [rbx + 0x50], 0
0x145cc:	mov	qword ptr [rbx + 0x60], rax
0x145d0:	je	0x145e2


0x145d2:	cmp	qword ptr [rbx + 0x58], 0
0x145d7:	je	0x145e2


0x145d9:	test	rax, rax
0x145dc:	jne	0x14495


0x14495:	mov	rdi, qword ptr [rsp + 0x70]
0x1449a:	call	0x19d0


0x14249:	test	rax, rax
0x1424c:	mov	qword ptr [r13 + 0x38], rax
0x14250:	je	0x1479c


0x1479c:	mov	rax, qword ptr [rsp + 8]
0x147a1:	mov	dword ptr [rsp + 0x4c], 0xc
0x147a9:	mov	r13, qword ptr [rax]
0x147ac:	jmp	0x13acc


0x14256:	mov	rdx, qword ptr [rsp]
0x1425a:	xor	esi, esi
0x1425c:	xor	ecx, ecx
0x1425e:	test	rdx, rdx
0x14261:	jne	0x14274


0x14263:	jmp	0x1432b


0x14274:	pxor	xmm0, xmm0
0x14278:	add	rax, rsi
0x1427b:	add	rcx, 1
0x1427f:	mov	qword ptr [rax + 0x10], 0
0x14287:	add	rsi, 0x18
0x1428b:	movups	xmmword ptr [rax], xmm0
0x1428e:	mov	rax, qword ptr [r13 + 0x10]
0x14292:	cmp	rcx, rax
0x14295:	jb	0x14270


0x14270:	mov	rax, qword ptr [r13 + 0x38]
0x14274:	pxor	xmm0, xmm0
0x14278:	add	rax, rsi
0x1427b:	add	rcx, 1
0x1427f:	mov	qword ptr [rax + 0x10], 0
0x14287:	add	rsi, 0x18
0x1428b:	movups	xmmword ptr [rax], xmm0
0x1428e:	mov	rax, qword ptr [r13 + 0x10]
0x14292:	cmp	rcx, rax
0x14295:	jb	0x14270


0x14297:	test	rax, rax
0x1429a:	je	0x1432b


0x142a0:	mov	rax, qword ptr [r13 + 0x30]
0x142a4:	mov	qword ptr [rsp + 0x18], 0
0x142ad:	mov	qword ptr [rsp + 0x10], 0
0x142b6:	mov	rcx, qword ptr [rsp + 0x18]
0x142bb:	lea	rdx, [rax + rcx]
0x142bf:	cmp	qword ptr [rdx + 8], 0
0x142c4:	mov	rcx, qword ptr [rdx + 0x10]
0x142c8:	jle	0x14314


0x14314:	add	qword ptr [rsp + 0x10], 1
0x1431a:	add	qword ptr [rsp + 0x18], 0x18
0x14320:	mov	rdx, qword ptr [rsp + 0x10]
0x14325:	cmp	rdx, qword ptr [r13 + 0x10]
0x14329:	jb	0x142b6


0x142ca:	xor	r15d, r15d
0x142cd:	jmp	0x142e8


0x142b6:	mov	rcx, qword ptr [rsp + 0x18]
0x142bb:	lea	rdx, [rax + rcx]
0x142bf:	cmp	qword ptr [rdx + 8], 0
0x142c4:	mov	rcx, qword ptr [rdx + 0x10]
0x142c8:	jle	0x14314


0x142e8:	mov	rax, qword ptr [rcx + r15*8]
0x142ec:	mov	qword ptr [rsp], rcx
0x142f0:	lea	rsi, [rax + rax*2]
0x142f4:	mov	rax, qword ptr [r13 + 0x38]
0x142f8:	lea	rdi, [rax + rsi*8]
0x142fc:	mov	rsi, qword ptr [rsp + 0x10]
0x14301:	call	0x7640


0x14306:	test	al, al
0x14308:	jne	0x142d0


0x1430a:	mov	eax, 0xc
0x1430f:	jmp	0x13ac0


0x142d0:	mov	rax, qword ptr [r13 + 0x30]
0x142d4:	mov	rdx, qword ptr [rsp + 0x18]
0x142d9:	add	r15, 1
0x142dd:	mov	rcx, qword ptr [rsp]
0x142e1:	cmp	r15, qword ptr [rax + rdx + 8]
0x142e6:	jge	0x14314


0x141cf:	test	eax, eax
0x141d1:	jne	0x13ac0


0x141d7:	mov	rax, qword ptr [r13 + 0x30]
0x141db:	mov	r10, qword ptr [rsp]
0x141df:	add	r15, 1
0x141e3:	cmp	qword ptr [rax + r10 + 8], 0
0x141e9:	jne	0x13f98


0x141ef:	mov	rdi, qword ptr [rsp + 0x70]
0x141f4:	call	0x19d0


0x13f98:	mov	rdx, qword ptr [r13 + 0x10]
0x13f9c:	cmp	rdx, r15
0x13f9f:	je	0x13fc6


0x141f9:	cmp	qword ptr [r13 + 0x10], r15
0x141fd:	je	0x13fcf


0x14203:	movzx	r14d, byte ptr [rsp + 0x10]
0x14209:	jmp	0x13fa1


0x135f1:	lea	rsi, [rip - 0xb288]
0x135f8:	mov	rdi, r14
0x135fb:	xor	edx, edx
0x135fd:	xor	r14d, r14d
0x13600:	call	0x74d0


0x13605:	mov	dword ptr [rbx], 0xc
0x1360b:	jmp	0x13590


0x41e4:	jmp	0x41b8


0x40a5:	jmp	0x3fe9


0x1557d:	add	rbx, 1
0x15581:	cmp	rbp, rbx
0x15584:	jne	0x15570


0x15570:	mov	rdx, r15
0x15573:	mov	rsi, r14
0x15576:	mov	edi, r13d
0x15579:	call	qword ptr [r12 + rbx*8]


0x74fe:	test	eax, eax
0x7500:	jne	0x7536


0x7536:	pop	rbx
0x7537:	pop	rbp
0x7538:	pop	r12
0x753a:	ret	


0x7510:	mov	rax, qword ptr [rdx + 0x10]
0x7514:	cmp	rax, rbx
0x7517:	mov	rbx, rdx
0x751a:	sete	sil
0x751e:	test	rax, rax
0x7521:	sete	cl
0x7524:	or	sil, cl
0x7527:	je	0x74e0


0x7529:	mov	rsi, rbx
0x752c:	mov	rdi, rbp
0x752f:	call	r12


0x7532:	test	eax, eax
0x7534:	je	0x7508


0x7508:	mov	rdx, qword ptr [rbx]
0x750b:	test	rdx, rdx
0x750e:	je	0x7536


0x755c:	test	eax, eax
0x755e:	jne	0x758c


0x7560:	mov	rdx, qword ptr [rbx + 8]
0x7564:	xor	ecx, ecx
0x7566:	test	rdx, rdx
0x7569:	jne	0x7550


0x758c:	pop	rbx
0x758d:	pop	rbp
0x758e:	pop	r12
0x7590:	ret	


0x756b:	jmp	0x7573


0x7550:	mov	rbx, rdx
0x7553:	mov	rsi, rbx
0x7556:	mov	rdi, rbp
0x7559:	call	r12


0x7573:	mov	rdx, qword ptr [rbx + 0x10]
0x7577:	cmp	rdx, rcx
0x757a:	je	0x7581


0x7581:	mov	rdx, qword ptr [rbx]
0x7584:	mov	rcx, rbx
0x7587:	test	rdx, rdx
0x758a:	jne	0x7570


0x757c:	test	rdx, rdx
0x757f:	jne	0x7550


0x7570:	mov	rbx, rdx
0x7573:	mov	rdx, qword ptr [rbx + 0x10]
0x7577:	cmp	rdx, rcx
0x757a:	je	0x7581






0x10062:	cmp	qword ptr [rsp + 0x70], rbp
0x10067:	jle	0xfb9f


0x100d4:	cmp	qword ptr [rsp + 0x90], rbp
0x100dc:	jg	0x10579


0xfb3e:	cmp	qword ptr [rsp + 0x70], rbp
0xfb43:	jle	0xfb9f


0x69e0:	mov	r13, qword ptr [rbx + 0x10]
0x69e4:	mov	r12, qword ptr [rbx + 8]
0x69e8:	lea	rsi, [rip + 0xfd57]
0x69ef:	mov	rbx, qword ptr [rbx]
0x69f2:	mov	edx, 5
0x69f7:	xor	edi, edi
0x69f9:	call	0x1a90


0x6b20:	mov	r9, qword ptr [rbx + 0x10]
0x6b24:	mov	r13, qword ptr [rbx + 0x30]
0x6b28:	lea	rsi, [rip + 0xfdb9]
0x6b2f:	mov	r12, qword ptr [rbx + 0x28]
0x6b33:	mov	r15, qword ptr [rbx + 0x20]
0x6b37:	mov	edx, 5
0x6b3c:	mov	r14, qword ptr [rbx + 0x18]
0x6b40:	mov	r8, qword ptr [rbx + 8]
0x6b44:	xor	edi, edi
0x6b46:	mov	qword ptr [rsp + 8], r9
0x6b4b:	mov	rbx, qword ptr [rbx]
0x6b4e:	mov	qword ptr [rsp], r8
0x6b52:	call	0x1a90


0x6900:	mov	r10, qword ptr [rbx + 0x40]
0x6904:	mov	r9, qword ptr [rbx + 0x38]
0x6908:	lea	rsi, [rip + 0x10039]
0x690f:	mov	rax, qword ptr [rbx + 0x10]
0x6913:	mov	r8, qword ptr [rbx + 8]
0x6917:	mov	edx, 5
0x691c:	mov	r13, qword ptr [rbx + 0x30]
0x6920:	mov	r12, qword ptr [rbx + 0x28]
0x6924:	mov	r15, qword ptr [rbx + 0x20]
0x6928:	mov	r14, qword ptr [rbx + 0x18]
0x692c:	mov	rbx, qword ptr [rbx]
0x692f:	mov	qword ptr [rsp + 0x18], r10
0x6934:	mov	qword ptr [rsp + 0x10], r9
0x6939:	mov	qword ptr [rsp], rax
0x693d:	mov	qword ptr [rsp + 8], r8
0x6942:	xor	edi, edi
0x6944:	call	0x1a90


0x6998:	mov	r12, qword ptr [rbx + 8]
0x699c:	lea	rsi, [rip + 0xfd8c]
0x69a3:	mov	rbx, qword ptr [rbx]
0x69a6:	mov	edx, 5
0x69ab:	xor	edi, edi
0x69ad:	call	0x1a90


0x68c6:	add	rsp, 0x28
0x68ca:	pop	rbx
0x68cb:	pop	rbp
0x68cc:	pop	r12
0x68ce:	pop	r13
0x68d0:	pop	r14
0x68d2:	pop	r15
0x68d4:	ret	


0x6a88:	mov	r15, qword ptr [rbx + 0x20]
0x6a8c:	lea	rsi, [rip + 0xfe05]
0x6a93:	mov	edx, 5
0x6a98:	xor	edi, edi
0x6a9a:	mov	r14, qword ptr [rbx + 0x18]
0x6a9e:	mov	r13, qword ptr [rbx + 0x10]
0x6aa2:	mov	r12, qword ptr [rbx + 8]
0x6aa6:	mov	rbx, qword ptr [rbx]
0x6aa9:	call	0x1a90


0x6ab8:	mov	r8, qword ptr [rbx + 8]
0x6abc:	mov	r12, qword ptr [rbx + 0x28]
0x6ac0:	lea	rsi, [rip + 0xfdf9]
0x6ac7:	mov	r15, qword ptr [rbx + 0x20]
0x6acb:	mov	r14, qword ptr [rbx + 0x18]
0x6acf:	mov	edx, 5
0x6ad4:	mov	r13, qword ptr [rbx + 0x10]
0x6ad8:	xor	edi, edi
0x6ada:	mov	rbx, qword ptr [rbx]
0x6add:	mov	qword ptr [rsp], r8
0x6ae1:	call	0x1a90


0x6a30:	lea	rsi, [rip + 0xfe41]
0x6a37:	mov	edx, 5
0x6a3c:	xor	edi, edi
0x6a3e:	mov	r14, qword ptr [rbx + 0x18]
0x6a42:	mov	r13, qword ptr [rbx + 0x10]
0x6a46:	mov	r12, qword ptr [rbx + 8]
0x6a4a:	mov	rbx, qword ptr [rbx]
0x6a4d:	call	0x1a90


0x6850:	mov	r9, qword ptr [rbx + 0x38]
0x6854:	mov	rax, qword ptr [rbx + 0x10]
0x6858:	lea	rsi, [rip + 0x100b9]
0x685f:	mov	r8, qword ptr [rbx + 8]
0x6863:	mov	edx, 5
0x6868:	xor	edi, edi
0x686a:	mov	r13, qword ptr [rbx + 0x30]
0x686e:	mov	r12, qword ptr [rbx + 0x28]
0x6872:	mov	qword ptr [rsp + 0x10], r9
0x6877:	mov	r15, qword ptr [rbx + 0x20]
0x687b:	mov	r14, qword ptr [rbx + 0x18]
0x687f:	mov	qword ptr [rsp], rax
0x6883:	mov	qword ptr [rsp + 8], r8
0x6888:	mov	rbx, qword ptr [rbx]
0x688b:	call	0x1a90


0x6958:	mov	rbx, qword ptr [rbx]
0x695b:	lea	rsi, [rip + 0xfdbd]
0x6962:	mov	edx, 5
0x6967:	xor	edi, edi
0x6969:	call	0x1a90


0xfb9f:	cmp	qword ptr [rsp + 0x70], rbp
0xfba4:	jne	0xfbe8


0x1006d:	mov	rax, qword ptr [rsp + 0x78]
0x10072:	mov	rdi, qword ptr [rsp + 0xb0]
0x1007a:	mov	rsi, qword ptr [rsp + 0x68]
0x1007f:	movzx	eax, byte ptr [rax + rbp]
0x10083:	movzx	edx, byte ptr [rdi + rax]
0x10087:	lea	rax, [rbp + 1]
0x1008b:	cmp	byte ptr [rsi + rdx], 0
0x1008f:	jne	0xfbe8


0x100e2:	xor	ecx, ecx
0x100e4:	mov	rax, rbp
0x100e7:	mov	rdi, qword ptr [rsp + 0x68]
0x100ec:	mov	rsi, qword ptr [rsp + 0xb0]
0x100f4:	mov	r9, qword ptr [rsp + 0x90]
0x100fc:	mov	r10, qword ptr [rsp + 0x78]
0x10101:	mov	r8, qword ptr [rsp + 0x88]
0x10109:	jmp	0x10122


0xfb45:	mov	rax, qword ptr [rsp + 0x78]
0xfb4a:	mov	rdi, qword ptr [rsp + 0x68]
0xfb4f:	movzx	edx, byte ptr [rax + rbp]
0xfb53:	lea	rax, [rbp + 1]
0xfb57:	cmp	byte ptr [rdi + rdx], 0
0xfb5b:	jne	0xfbe8


0xfba6:	xor	eax, eax
0xfba8:	mov	rsi, qword ptr [rsp + 0x70]
0xfbad:	cmp	qword ptr [rsp + 0x88], rsi
0xfbb5:	jle	0xfbc0


0x10095:	mov	rsi, qword ptr [rsp + 0x68]
0x1009a:	mov	rdi, qword ptr [rsp + 0xb0]
0x100a2:	mov	rcx, qword ptr [rsp + 0x70]
0x100a7:	mov	r8, qword ptr [rsp + 0x78]
0x100ac:	jmp	0x100c7


0x10122:	xor	edx, edx
0x10124:	cmp	r8, rax
0x10127:	jle	0x1012e


0xfb61:	mov	rsi, qword ptr [rsp + 0x68]
0xfb66:	mov	rcx, qword ptr [rsp + 0x70]
0xfb6b:	mov	rdi, qword ptr [rsp + 0x78]
0xfb70:	jmp	0xfb8a


0xfbc0:	mov	rsi, qword ptr [rsp + 0xb0]
0xfbc8:	test	rsi, rsi
0xfbcb:	je	0xfbd1


0xfbb7:	mov	rax, qword ptr [rsp + 0x78]
0xfbbc:	movzx	eax, byte ptr [rax + rsi]
0xfbc0:	mov	rsi, qword ptr [rsp + 0xb0]
0xfbc8:	test	rsi, rsi
0xfbcb:	je	0xfbd1


0x100c7:	cmp	rcx, rax
0x100ca:	mov	rbp, rax
0x100cd:	jne	0x100b0


0x1012e:	test	rsi, rsi
0x10131:	je	0x10137


0x10129:	movzx	edx, byte ptr [r10 + rax]
0x1012e:	test	rsi, rsi
0x10131:	je	0x10137


0xfb8a:	cmp	rcx, rax
0xfb8d:	mov	rbp, rax
0xfb90:	jne	0xfb78


0xfbd1:	mov	rdi, qword ptr [rsp + 0x68]
0xfbd6:	cmp	byte ptr [rdi + rax], 0
0xfbda:	je	0x10579


0xfbcd:	movzx	eax, byte ptr [rsi + rax]
0xfbd1:	mov	rdi, qword ptr [rsp + 0x68]
0xfbd6:	cmp	byte ptr [rdi + rax], 0
0xfbda:	je	0x10579


0x100cf:	jmp	0xfb92


0x100b0:	movzx	eax, byte ptr [r8 + rax]
0x100b5:	movzx	edx, byte ptr [rdi + rax]
0x100b9:	lea	rax, [rbp + 1]
0x100bd:	cmp	byte ptr [rsi + rdx], 0
0x100c1:	jne	0x10d21


0x10137:	cmp	byte ptr [rdi + rdx], 0
0x1013b:	je	0x10110


0x10133:	movzx	edx, byte ptr [rsi + rdx]
0x10137:	cmp	byte ptr [rdi + rdx], 0
0x1013b:	je	0x10110


0xfb92:	mov	rax, qword ptr [rsp + 0x70]
0xfb97:	mov	qword ptr [rsp + 0xd8], rax
0xfb9f:	cmp	qword ptr [rsp + 0x70], rbp
0xfba4:	jne	0xfbe8


0xfb78:	movzx	edx, byte ptr [rdi + rax]
0xfb7c:	lea	rax, [rax + 1]
0xfb80:	cmp	byte ptr [rsi + rdx], 0
0xfb84:	jne	0x10d21


0xfbe0:	mov	rbp, qword ptr [rsp + 0x70]
0xfbe5:	nop	dword ptr [rax]
0xfbe8:	mov	edx, dword ptr [rsp + 0x280]
0xfbef:	mov	rdi, qword ptr [rsp]
0xfbf3:	mov	rsi, rbp
0xfbf6:	call	0xaca0


0x10d21:	mov	qword ptr [rsp + 0xd8], rbp
0x10d29:	jmp	0xfbe8


0x10110:	sub	rax, 1
0x10114:	mov	ecx, 1
0x10119:	cmp	rax, r9
0x1011c:	jl	0x10b00


0x1013d:	test	cl, cl
0x1013f:	je	0xfbe8


0x10b00:	mov	qword ptr [rsp + 0xd8], rax
0x10b08:	mov	rdi, qword ptr [rsp + 0x1d8]
0x10b10:	mov	dword ptr [rsp + 0x5c], 1
0x10b18:	jmp	0x10168


0x10145:	mov	qword ptr [rsp + 0xd8], rax
0x1014d:	mov	rbp, rax
0x10150:	jmp	0xfbe8


0x696e:	add	rsp, 0x28
0x6972:	mov	rcx, rbx
0x6975:	mov	rdi, rbp
0x6978:	pop	rbx
0x6979:	pop	rbp
0x697a:	pop	r12
0x697c:	pop	r13
0x697e:	pop	r14
0x6980:	pop	r15
0x6982:	mov	rdx, rax
0x6985:	mov	esi, 1
0x698a:	xor	eax, eax
0x698c:	jmp	0x1d80


0x6890:	sub	rsp, 8
0x6894:	mov	r9, qword ptr [rsp + 0x18]
0x6899:	mov	rdx, rax
0x689c:	mov	rcx, rbx
0x689f:	mov	esi, 1
0x68a4:	mov	rdi, rbp
0x68a7:	xor	eax, eax
0x68a9:	push	r9
0x68ab:	push	r13
0x68ad:	push	r12
0x68af:	push	r15
0x68b1:	push	r14
0x68b3:	mov	r9, qword ptr [rsp + 0x30]
0x68b8:	mov	r8, qword ptr [rsp + 0x38]
0x68bd:	call	0x1d80


0x6a52:	sub	rsp, 8
0x6a56:	push	r14
0x6a58:	mov	rdx, rax
0x6a5b:	mov	r9, r13
0x6a5e:	mov	r8, r12
0x6a61:	mov	rcx, rbx
0x6a64:	mov	rdi, rbp
0x6a67:	mov	esi, 1
0x6a6c:	xor	eax, eax
0x6a6e:	call	0x1d80


0x6a73:	pop	rax
0x6a74:	pop	rdx
0x6a75:	add	rsp, 0x28
0x6a79:	pop	rbx
0x6a7a:	pop	rbp
0x6a7b:	pop	r12
0x6a7d:	pop	r13
0x6a7f:	pop	r14
0x6a81:	pop	r15
0x6a83:	ret	


0x6ae6:	sub	rsp, 8
0x6aea:	mov	r9, r13
0x6aed:	push	r12
0x6aef:	push	r15
0x6af1:	push	r14
0x6af3:	mov	r8, qword ptr [rsp + 0x20]
0x6af8:	mov	rcx, rbx
0x6afb:	mov	rdx, rax
0x6afe:	mov	rdi, rbp
0x6b01:	mov	esi, 1
0x6b06:	xor	eax, eax
0x6b08:	call	0x1d80


0x6b0d:	add	rsp, 0x20
0x6b11:	add	rsp, 0x28
0x6b15:	pop	rbx
0x6b16:	pop	rbp
0x6b17:	pop	r12
0x6b19:	pop	r13
0x6b1b:	pop	r14
0x6b1d:	pop	r15
0x6b1f:	ret	


0x6aae:	push	r15
0x6ab0:	jmp	0x6a56


0x6a56:	push	r14
0x6a58:	mov	rdx, rax
0x6a5b:	mov	r9, r13
0x6a5e:	mov	r8, r12
0x6a61:	mov	rcx, rbx
0x6a64:	mov	rdi, rbp
0x6a67:	mov	esi, 1
0x6a6c:	xor	eax, eax
0x6a6e:	call	0x1d80


0x69b2:	add	rsp, 0x28
0x69b6:	mov	r8, r12
0x69b9:	mov	rcx, rbx
0x69bc:	mov	rdi, rbp
0x69bf:	mov	rdx, rax
0x69c2:	mov	esi, 1
0x69c7:	pop	rbx
0x69c8:	pop	rbp
0x69c9:	pop	r12
0x69cb:	pop	r13
0x69cd:	pop	r14
0x69cf:	pop	r15
0x69d1:	xor	eax, eax
0x69d3:	jmp	0x1d80


0x6b57:	push	r13
0x6b59:	push	r12
0x6b5b:	push	r15
0x6b5d:	push	r14
0x6b5f:	mov	r9, qword ptr [rsp + 0x28]
0x6b64:	jmp	0x6af3


0x6af3:	mov	r8, qword ptr [rsp + 0x20]
0x6af8:	mov	rcx, rbx
0x6afb:	mov	rdx, rax
0x6afe:	mov	rdi, rbp
0x6b01:	mov	esi, 1
0x6b06:	xor	eax, eax
0x6b08:	call	0x1d80


0x69fe:	add	rsp, 0x28
0x6a02:	mov	r9, r13
0x6a05:	mov	r8, r12
0x6a08:	mov	rcx, rbx
0x6a0b:	mov	rdi, rbp
0x6a0e:	mov	rdx, rax
0x6a11:	pop	rbx
0x6a12:	pop	rbp
0x6a13:	pop	r12
0x6a15:	pop	r13
0x6a17:	pop	r14
0x6a19:	pop	r15
0x6a1b:	mov	esi, 1
0x6a20:	xor	eax, eax
0x6a22:	jmp	0x1d80


0x54b0:	sub	rsp, 8
0x54b4:	mov	rcx, rbp
0x54b7:	mov	rsi, r13
0x54ba:	push	qword ptr [rsp + 0x68]
0x54be:	push	qword ptr [rsp + 0x78]
0x54c2:	mov	rdi, r14
0x54c5:	push	0
0x54c7:	mov	r9d, dword ptr [rsp + 0x98]
0x54cf:	mov	r8d, dword ptr [rsp + 0x28]
0x54d4:	mov	rdx, qword ptr [rsp + 0x30]
0x54d9:	and	r9d, 0xfffffffd
0x54dd:	call	0x4910


0x54e2:	add	rsp, 0x20
0x54e6:	mov	r15, rax
0x54e9:	mov	rbx, qword ptr [rsp + 0xa8]
0x54f1:	xor	rbx, qword ptr fs:[0x28]
0x54fa:	mov	rax, r15
0x54fd:	jne	0x5b03


0x5503:	add	rsp, 0xb8
0x550a:	pop	rbx
0x550b:	pop	rbp
0x550c:	pop	r12
0x550e:	pop	r13
0x5510:	pop	r14
0x5512:	pop	r15
0x5514:	ret	


0x5b03:	call	0x1ad0


0x5aad:	sub	rsp, 8
0x5ab1:	mov	r8d, 5
0x5ab7:	mov	rcx, r11
0x5aba:	push	qword ptr [rsp + 0x68]
0x5abe:	push	qword ptr [rsp + 0x78]
0x5ac2:	mov	rdi, r14
0x5ac5:	push	qword ptr [rsp + 0x38]
0x5ac9:	mov	r9d, dword ptr [rsp + 0x98]
0x5ad1:	mov	rdx, qword ptr [rsp + 0x30]
0x5ad6:	mov	rsi, qword ptr [rsp + 0x70]
0x5adb:	call	0x4910


0x5ae0:	add	rsp, 0x20
0x5ae4:	mov	r15, rax
0x5ae7:	jmp	0x54e9


0x54e9:	mov	rbx, qword ptr [rsp + 0xa8]
0x54f1:	xor	rbx, qword ptr fs:[0x28]
0x54fa:	mov	rax, r15
0x54fd:	jne	0x5b03


0x12ca9:	sub	rsp, 8
0x12cad:	mov	rdi, qword ptr [r14 + 0x78]
0x12cb1:	lea	rdx, [r13 + 0x18]
0x12cb5:	push	qword ptr [rsp + 0x28]
0x12cb9:	mov	r9, qword ptr [rsp + 0xb8]
0x12cc1:	lea	rcx, [r13 + 0x48]
0x12cc5:	mov	r8, qword ptr [rsp + 0x68]
0x12cca:	mov	rsi, r12
0x12ccd:	call	0xc3f0


0x12cd2:	mov	rdx, qword ptr [rsp + 0x50]
0x12cd7:	test	eax, eax
0x12cd9:	mov	dword ptr [rdx], eax
0x12cdb:	pop	r9
0x12cdd:	pop	r10
0x12cdf:	je	0x12bf0


0x12bf0:	movzx	eax, byte ptr [r15 + 8]
0x12bf5:	cmp	al, 2
0x12bf7:	je	0x12d91


0x12ce5:	jmp	0x12c28


0x12d91:	mov	rax, qword ptr [rsp + 0x40]
0x12d96:	mov	dword ptr [rax], 7
0x12d9c:	jmp	0x12c28


0x12bfd:	cmp	al, 0x15
0x12bff:	je	0x13012


0x12c28:	mov	rdi, r12
0x12c2b:	call	0x19d0


0x13012:	add	qword ptr [r14 + 0x48], rbx
0x13016:	cmp	byte ptr [rsp + 0x57], 0
0x1301b:	je	0x13031


0x12c05:	xor	r9d, r9d
0x12c08:	jmp	0x12892


0x13031:	mov	rax, qword ptr [rsp + 0x10]
0x13036:	mov	edx, dword ptr [rax + 0xb4]
0x1303c:	cmp	edx, 1
0x1303f:	jle	0x13059


0x1301d:	lea	rdx, [r12 + 0x20]
0x13022:	mov	rax, r12
0x13025:	not	qword ptr [rax]
0x13028:	add	rax, 8
0x1302c:	cmp	rdx, rax
0x1302f:	jne	0x13025


0x12892:	mov	rax, qword ptr [rsp + 0x28]
0x12897:	mov	r8, qword ptr [rsp + 0x20]
0x1289c:	and	r9d, 1
0x128a0:	mov	rdi, qword ptr [rsp]
0x128a4:	mov	ecx, ebx
0x128a6:	mov	rdx, r15
0x128a9:	mov	rsi, r14
0x128ac:	mov	dword ptr [rsp + 0xa0], 3
0x128b7:	mov	qword ptr [rsp + 0xa8], rax
0x128bf:	call	0x11590


0x13059:	cmp	qword ptr [r13 + 0x28], 0
0x1305e:	jne	0x130e8


0x13041:	mov	rcx, qword ptr [rax + 0x78]
0x13045:	xor	eax, eax
0x13047:	mov	rsi, qword ptr [rcx + rax]
0x1304b:	and	qword ptr [r12 + rax], rsi
0x1304f:	add	rax, 8
0x13053:	cmp	rax, 0x20
0x13057:	jne	0x13047


0x13025:	not	qword ptr [rax]
0x13028:	add	rax, 8
0x1302c:	cmp	rdx, rax
0x1302f:	jne	0x13025


0x13064:	cmp	qword ptr [r13 + 0x30], 0
0x13069:	jne	0x130e8


0x130e8:	mov	rax, qword ptr [rsp + 0x10]
0x130ed:	lea	r15, [rsp + 0xb0]
0x130f5:	xor	edx, edx
0x130f7:	xor	ecx, ecx
0x130f9:	mov	r8, r15
0x130fc:	or	byte ptr [rax + 0xb0], 2
0x13103:	lea	rbx, [rax + 0x70]
0x13107:	lea	rbp, [rax + 0x80]
0x1310e:	mov	byte ptr [rsp + 0xb8], 6
0x13116:	mov	qword ptr [rsp + 0xb0], r13
0x1311e:	mov	rdi, rbx
0x13121:	mov	rsi, rbp
0x13124:	call	0x98b0


0x13047:	mov	rsi, qword ptr [rcx + rax]
0x1304b:	and	qword ptr [r12 + rax], rsi
0x1304f:	add	rax, 8
0x13053:	cmp	rax, 0x20
0x13057:	jne	0x13047


0x1306b:	cmp	qword ptr [r13 + 0x38], 0
0x13070:	jne	0x130e8


0x13072:	cmp	qword ptr [r13 + 0x40], 0
0x13077:	jne	0x130e8


0x13079:	sub	edx, 1
0x1307c:	jle	0x1308c


0x1308c:	mov	rdi, r13
0x1308f:	call	0x8310


0x1307e:	cmp	qword ptr [r13 + 0x48], 0
0x13083:	jne	0x130e8


0x13085:	test	byte ptr [r13 + 0x20], 1
0x1308a:	jne	0x130e8


0x13094:	mov	rax, qword ptr [rsp + 0x10]
0x13099:	lea	r8, [rsp + 0xb0]
0x130a1:	xor	ecx, ecx
0x130a3:	xor	edx, edx
0x130a5:	mov	byte ptr [rsp + 0xb8], 3
0x130ad:	mov	qword ptr [rsp + 0xb0], r12
0x130b5:	lea	rsi, [rax + 0x80]
0x130bc:	lea	rdi, [rax + 0x70]
0x130c0:	call	0x98b0


0x130c5:	test	rax, rax
0x130c8:	mov	qword ptr [rsp + 0x28], rax
0x130cd:	jne	0x1214c


0x130d3:	mov	rax, qword ptr [rsp + 0x40]
0x130d8:	mov	dword ptr [rax], 0xc
0x130de:	jmp	0x12c28


0x1214c:	mov	rbx, qword ptr [rsp + 0x18]
0x12151:	mov	rdx, qword ptr [rsp + 0x20]
0x12156:	mov	rsi, r14
0x12159:	lea	r15, [rsp + 0xc0]
0x12161:	mov	rdi, rbx
0x12164:	call	0x117f0


0x12169:	cdqe	
0x1216b:	add	qword ptr [r14 + 0x48], rax
0x1216f:	movzx	eax, byte ptr [rbx + 8]
0x12173:	nop	dword ptr [rax + rax]
0x12178:	cmp	al, 0x17
0x1217a:	ja	0x120c0


0x12180:	cmp	al, 0x12
0x12182:	mov	ecx, 0x8c0800
0x12187:	sete	bl
0x1218a:	bt	rcx, rax
0x1218e:	jae	0x120c0


0x120c0:	mov	rdi, qword ptr [rsp + 0x118]
0x120c8:	xor	rdi, qword ptr fs:[0x28]
0x120d1:	mov	rax, qword ptr [rsp + 0x28]
0x120d6:	jne	0x1344e


0x12194:	mov	rcx, qword ptr [rsp + 0x18]
0x12199:	cmp	al, 0x17
0x1219b:	mov	rbp, qword ptr [r14 + 0x48]
0x1219f:	movdqa	xmm0, xmmword ptr [rcx]
0x121a3:	je	0x124c8


0x124c8:	mov	rdx, qword ptr [rsp + 0x20]
0x124cd:	mov	rsi, rcx
0x124d0:	mov	rdi, r14
0x124d3:	movaps	xmmword ptr [rsp], xmm0
0x124d7:	call	0x11ef0


0x121a9:	cmp	al, 0x13
0x121ab:	movzx	ebx, bl
0x121ae:	je	0x12460


0x12460:	mov	qword ptr [rsp], 1
0x12468:	mov	rdx, qword ptr [rsp + 0x20]
0x1246d:	mov	rdi, qword ptr [rsp + 0x18]
0x12472:	mov	rsi, r14
0x12475:	call	0x117f0


0x121b4:	mov	rdx, qword ptr [rsp + 0x20]
0x121b9:	mov	rdi, qword ptr [rsp + 0x18]
0x121be:	mov	rsi, r14
0x121c1:	call	0x117f0


0x121c6:	cdqe	
0x121c8:	add	qword ptr [r14 + 0x48], rax
0x121cc:	cmp	qword ptr [rsp + 0x28], 0
0x121d2:	je	0x12560


0x12560:	mov	rax, qword ptr [rsp + 0x40]
0x12565:	mov	ecx, dword ptr [rax]
0x12567:	test	ecx, ecx
0x12569:	je	0x124b7


0x121d8:	mov	qword ptr [rsp], -1
0x121e0:	test	rbx, rbx
0x121e3:	mov	rbp, qword ptr [rsp + 0x28]
0x121e8:	mov	qword ptr [rsp + 0x30], 0
0x121f1:	jg	0x12370


0x124b7:	mov	qword ptr [rsp + 0x28], 0
0x124c0:	jmp	0x1230e


0x1256f:	jmp	0x120b0


0x121f7:	cmp	byte ptr [rbp + 0x30], 0x11
0x121fb:	je	0x12540


0x12370:	cmp	rbx, 1
0x12374:	je	0x12bac


0x1230e:	test	qword ptr [rsp + 0x20], 0x1000000
0x12317:	mov	rax, qword ptr [rsp + 0x18]
0x1231c:	movzx	eax, byte ptr [rax + 8]
0x12320:	je	0x12178


0x12540:	mov	rdx, qword ptr [rbp + 0x28]
0x12544:	lea	rsi, [rip - 0xb33b]
0x1254b:	mov	rdi, rbp
0x1254e:	call	0x74d0


0x12201:	cmp	qword ptr [rsp], -1
0x12206:	mov	rdx, rbp
0x12209:	mov	r8, r15
0x1220c:	sete	al
0x1220f:	xor	ecx, ecx
0x12211:	add	eax, 0xa
0x12214:	mov	byte ptr [rsp + 0xc8], al
0x1221b:	mov	rax, qword ptr [rsp + 0x10]
0x12220:	lea	r12, [rax + 0x70]
0x12224:	lea	r13, [rax + 0x80]
0x1222b:	mov	rdi, r12
0x1222e:	mov	rsi, r13
0x12231:	call	0x98b0


0x12bac:	mov	r13, qword ptr [rsp + 0x28]
0x12bb1:	mov	qword ptr [rsp + 0x30], r13
0x12bb6:	jmp	0x12404


0x1237a:	mov	rax, qword ptr [rsp + 0x10]
0x1237f:	mov	r13, rbp
0x12382:	mov	qword ptr [rsp + 0x48], r14
0x12387:	lea	r12, [rax + 0x80]
0x1238e:	lea	rdi, [rax + 0x70]
0x12392:	mov	rax, rbp
0x12395:	mov	r14, rax
0x12398:	mov	ebp, 2
0x1239d:	mov	rsi, r12
0x123a0:	mov	qword ptr [rsp + 0x30], rdi
0x123a5:	mov	r12, r13
0x123a8:	mov	r13, rbx
0x123ab:	mov	rbx, rsi
0x123ae:	nop	
0x123b0:	mov	rsi, qword ptr [rsp + 0x10]
0x123b5:	mov	rdi, r12
0x123b8:	call	0x9990


0x12178:	cmp	al, 0x17
0x1217a:	ja	0x120c0


0x12326:	cmp	al, 0xb
0x12328:	je	0x12332


0x12404:	cmp	qword ptr [rsp], rbx
0x12408:	je	0x12574


0x12332:	mov	rax, qword ptr [rsp + 0x28]
0x12337:	test	rax, rax
0x1233a:	je	0x1234d


0x1232a:	cmp	al, 0x17
0x1232c:	jne	0x12178


0x12574:	mov	rdx, qword ptr [rsp + 0x30]
0x12579:	nop	dword ptr [rax]
0x12580:	mov	qword ptr [rsp + 0x28], rdx
0x12585:	jmp	0x1230e


0x1240e:	mov	rsi, qword ptr [rsp + 0x10]
0x12413:	mov	rdi, r13
0x12416:	call	0x9990


0x1234d:	mov	rax, qword ptr [rsp + 0x40]
0x12352:	mov	qword ptr [rsp + 0x28], 0
0x1235b:	mov	dword ptr [rax], 0xd
0x12361:	jmp	0x120c0


0x1233c:	lea	rsi, [rip - 0x9fd3]
0x12343:	xor	edx, edx
0x12345:	mov	rdi, rax
0x12348:	call	0x74d0


0x1241b:	test	rax, rax
0x1241e:	mov	rbp, rax
0x12421:	jne	0x121f7


0x123bd:	mov	rdi, qword ptr [rsp + 0x30]
0x123c2:	mov	r12, rax
0x123c5:	mov	rdx, r14
0x123c8:	mov	r8, r15
0x123cb:	mov	rcx, rax
0x123ce:	mov	rsi, rbx
0x123d1:	mov	byte ptr [rsp + 0xc8], 0x10
0x123d9:	call	0x98b0


0x1244e:	mov	qword ptr [rsp + 0x28], 0
0x12457:	jmp	0x120c0


0x12553:	jmp	0x12201


0x1247a:	cdqe	
0x1247c:	add	qword ptr [r14 + 0x48], rax
0x12480:	cmp	qword ptr [rsp + 0x28], 0
0x12486:	je	0x12560


0x1248c:	mov	rax, qword ptr [rsp]
0x12490:	or	rax, rbx
0x12493:	jne	0x121e0


0x12499:	mov	rdi, qword ptr [rsp + 0x28]
0x1249e:	lea	rsi, [rip - 0xa135]
0x124a5:	xor	edx, edx
0x124a7:	call	0x74d0


0x121e0:	test	rbx, rbx
0x121e3:	mov	rbp, qword ptr [rsp + 0x28]
0x121e8:	mov	qword ptr [rsp + 0x30], 0
0x121f1:	jg	0x12370


0x124ac:	mov	rax, qword ptr [rsp + 0x40]
0x124b1:	mov	esi, dword ptr [rax]
0x124b3:	test	esi, esi
0x124b5:	jne	0x1243b


0x1243b:	mov	rdi, qword ptr [rsp + 0x28]
0x12440:	lea	rsi, [rip - 0xa0d7]
0x12447:	xor	edx, edx
0x12449:	call	0x74d0


0x124dc:	cmp	rax, -1
0x124e0:	mov	rbx, rax
0x124e3:	movdqa	xmm0, xmmword ptr [rsp]
0x124e8:	je	0x12590


0x12590:	mov	rax, qword ptr [rsp + 0x18]
0x12595:	cmp	byte ptr [rax + 8], 1
0x12599:	jne	0x12650


0x124ee:	cmp	rax, -2
0x124f2:	je	0x1250d


0x1259f:	mov	rax, qword ptr [rsp + 0x18]
0x125a4:	cmp	byte ptr [rax], 0x2c
0x125a7:	jne	0x12650


0x12650:	mov	rax, qword ptr [rsp + 0x40]
0x12655:	mov	dword ptr [rax], 0xa
0x1265b:	cmp	qword ptr [rsp + 0x28], 0
0x12661:	jne	0x1243b


0x1250d:	test	qword ptr [rsp + 0x20], 0x200000
0x12516:	je	0x13453


0x124f4:	mov	rax, qword ptr [rsp + 0x18]
0x124f9:	movzx	eax, byte ptr [rax + 8]
0x124fd:	cmp	al, 0x18
0x124ff:	je	0x12620


0x125ad:	xor	ebx, ebx
0x125af:	mov	rdx, qword ptr [rsp + 0x20]
0x125b4:	mov	rsi, qword ptr [rsp + 0x18]
0x125b9:	mov	rdi, r14
0x125bc:	movaps	xmmword ptr [rsp + 0x30], xmm0
0x125c1:	call	0x11ef0


0x12667:	jmp	0x120b0


0x13453:	mov	rax, qword ptr [rsp + 0x18]
0x13458:	cmp	byte ptr [rax + 8], 2
0x1345c:	jne	0x12650


0x1251c:	mov	rax, qword ptr [rsp + 0x18]
0x12521:	mov	qword ptr [r14 + 0x48], rbp
0x12525:	movaps	xmmword ptr [rax], xmm0
0x12528:	mov	byte ptr [rax + 8], 1
0x1252c:	mov	rax, qword ptr [rsp + 0x28]
0x12531:	jmp	0x122f5


0x12620:	mov	qword ptr [rsp], rbx
0x12624:	xor	eax, eax
0x12626:	cmp	qword ptr [rsp], 0x7fff
0x1262e:	setg	al
0x12631:	jmp	0x12607


0x12505:	cmp	al, 1
0x12507:	je	0x12633


0x13462:	mov	rax, qword ptr [rsp + 0x40]
0x13467:	mov	dword ptr [rax], 9
0x1346d:	jmp	0x1265b


0x122f5:	mov	rdi, qword ptr [rsp + 0x40]
0x122fa:	mov	edx, dword ptr [rdi]
0x122fc:	test	edx, edx
0x122fe:	je	0x12309


0x12607:	test	rax, rax
0x1260a:	je	0x12468


0x12633:	mov	rax, qword ptr [rsp + 0x18]
0x12638:	cmp	byte ptr [rax], 0x2c
0x1263b:	je	0x125af


0x1265b:	cmp	qword ptr [rsp + 0x28], 0
0x12661:	jne	0x1243b


0x12309:	mov	qword ptr [rsp + 0x28], rax
0x1230e:	test	qword ptr [rsp + 0x20], 0x1000000
0x12317:	mov	rax, qword ptr [rsp + 0x18]
0x1231c:	movzx	eax, byte ptr [rax + 8]
0x12320:	je	0x12178


0x12300:	test	rax, rax
0x12303:	je	0x1265b


0x12468:	mov	rdx, qword ptr [rsp + 0x20]
0x1246d:	mov	rdi, qword ptr [rsp + 0x18]
0x12472:	mov	rsi, r14
0x12475:	call	0x117f0


0x12610:	mov	rax, qword ptr [rsp + 0x40]
0x12615:	mov	dword ptr [rax], 0xf
0x1261b:	jmp	0x1265b


0x125af:	mov	rdx, qword ptr [rsp + 0x20]
0x125b4:	mov	rsi, qword ptr [rsp + 0x18]
0x125b9:	mov	rdi, r14
0x125bc:	movaps	xmmword ptr [rsp + 0x30], xmm0
0x125c1:	call	0x11ef0


0x12641:	test	qword ptr [rsp + 0x20], 0x200000
0x1264a:	jne	0x1251c


0x125c6:	cmp	rax, -2
0x125ca:	mov	qword ptr [rsp], rax
0x125ce:	movdqa	xmm0, xmmword ptr [rsp + 0x30]
0x125d4:	je	0x1250d


0x125da:	mov	rax, qword ptr [rsp]
0x125de:	cmp	rax, -1
0x125e2:	je	0x125e9


0x125e9:	mov	rax, qword ptr [rsp + 0x18]
0x125ee:	cmp	byte ptr [rax + 8], 0x18
0x125f2:	jne	0x12650


0x125e4:	cmp	rax, rbx
0x125e7:	jl	0x12650


0x125f4:	cmp	qword ptr [rsp], -1
0x125f9:	jne	0x12624


0x125fb:	xor	eax, eax
0x125fd:	cmp	rbx, 0x7fff
0x12604:	setg	al
0x12607:	test	rax, rax
0x1260a:	je	0x12468


0x12624:	xor	eax, eax
0x12626:	cmp	qword ptr [rsp], 0x7fff
0x1262e:	setg	al
0x12631:	jmp	0x12607


0x123de:	test	r12, r12
0x123e1:	mov	r14, rax
0x123e4:	je	0x12430


0x12430:	mov	rax, qword ptr [rsp + 0x40]
0x12435:	mov	dword ptr [rax], 0xc
0x1243b:	mov	rdi, qword ptr [rsp + 0x28]
0x12440:	lea	rsi, [rip - 0xa0d7]
0x12447:	xor	edx, edx
0x12449:	call	0x74d0


0x123e6:	test	rax, rax
0x123e9:	je	0x12430


0x123eb:	add	rbp, 1
0x123ef:	cmp	rbp, r13
0x123f2:	jle	0x123b0


0x123b0:	mov	rsi, qword ptr [rsp + 0x10]
0x123b5:	mov	rdi, r12
0x123b8:	call	0x9990


0x123f4:	mov	r14, qword ptr [rsp + 0x48]
0x123f9:	mov	rbx, r13
0x123fc:	mov	qword ptr [rsp + 0x30], rax
0x12401:	mov	r13, r12
0x12404:	cmp	qword ptr [rsp], rbx
0x12408:	je	0x12574


0x12236:	test	rax, rax
0x12239:	mov	rdx, rax
0x1223c:	je	0x12430


0x12242:	add	rbx, 2
0x12246:	cmp	rbx, qword ptr [rsp]
0x1224a:	jg	0x122cb


0x1224c:	mov	qword ptr [rsp + 0x48], r14
0x12251:	mov	r14, rax
0x12254:	mov	rsi, qword ptr [rsp + 0x10]
0x12259:	mov	rdi, rbp
0x1225c:	call	0x9990


0x122cb:	mov	rax, qword ptr [rsp + 0x30]
0x122d0:	test	rax, rax
0x122d3:	je	0x12580


0x12580:	mov	qword ptr [rsp + 0x28], rdx
0x12585:	jmp	0x1230e


0x122d9:	mov	rcx, rdx
0x122dc:	mov	r8, r15
0x122df:	mov	rdx, rax
0x122e2:	mov	rsi, r13
0x122e5:	mov	rdi, r12
0x122e8:	mov	byte ptr [rsp + 0xc8], 0x10
0x122f0:	call	0x98b0


0x12261:	mov	r8, r15
0x12264:	mov	rbp, rax
0x12267:	mov	rcx, rax
0x1226a:	mov	rdx, r14
0x1226d:	mov	rsi, r13
0x12270:	mov	rdi, r12
0x12273:	mov	byte ptr [rsp + 0xc8], 0x10
0x1227b:	call	0x98b0


0x12280:	test	rbp, rbp
0x12283:	je	0x12430


0x12289:	test	rax, rax
0x1228c:	je	0x12430


0x12292:	xor	ecx, ecx
0x12294:	mov	r8, r15
0x12297:	mov	rdx, rax
0x1229a:	mov	rsi, r13
0x1229d:	mov	rdi, r12
0x122a0:	mov	byte ptr [rsp + 0xc8], 0xa
0x122a8:	call	0x98b0


0x122ad:	test	rax, rax
0x122b0:	mov	r14, rax
0x122b3:	je	0x12430


0x122b9:	add	rbx, 1
0x122bd:	cmp	rbx, qword ptr [rsp]
0x122c1:	jle	0x12254


0x12254:	mov	rsi, qword ptr [rsp + 0x10]
0x12259:	mov	rdi, rbp
0x1225c:	call	0x9990


0x122c3:	mov	r14, qword ptr [rsp + 0x48]
0x122c8:	mov	rdx, rax
0x122cb:	mov	rax, qword ptr [rsp + 0x30]
0x122d0:	test	rax, rax
0x122d3:	je	0x12580


0x13129:	mov	rdi, rax
0x1312c:	mov	qword ptr [rsp + 0x28], rax
0x13131:	lea	rdx, [r12 + 0x20]
0x13136:	test	rdi, rdi
0x13139:	mov	rax, r12
0x1313c:	je	0x130d3


0x1313e:	cmp	qword ptr [rax], 0
0x13142:	jne	0x133ed


0x13148:	add	rax, 8
0x1314c:	cmp	rdx, rax
0x1314f:	jne	0x1313e


0x133ed:	xor	ecx, ecx
0x133ef:	xor	edx, edx
0x133f1:	mov	r8, r15
0x133f4:	mov	rsi, rbp
0x133f7:	mov	rdi, rbx
0x133fa:	mov	byte ptr [rsp + 0xb8], 3
0x13402:	mov	qword ptr [rsp + 0xb0], r12
0x1340a:	call	0x98b0


0x13151:	mov	rdi, r12
0x13154:	call	0x19d0


0x1340f:	test	rax, rax
0x13412:	je	0x130d3


0x13418:	mov	rcx, qword ptr [rsp + 0x28]
0x1341d:	lea	r8, [rsp + 0xc0]
0x13425:	mov	rdx, rax
0x13428:	mov	rsi, rbp
0x1342b:	mov	rdi, rbx
0x1342e:	mov	byte ptr [rsp + 0xc8], 0xa
0x13436:	call	0x98b0


0x1343b:	test	rax, rax
0x1343e:	mov	qword ptr [rsp + 0x28], rax
0x13443:	jne	0x1214c


0x13449:	jmp	0x130d3


0x128c4:	test	eax, eax
0x128c6:	jne	0x12dab


0x128cc:	mov	rdx, qword ptr [rsp + 0x20]
0x128d1:	mov	rsi, r14
0x128d4:	mov	rdi, r15
0x128d7:	call	0x70e0


0x12dab:	mov	rdx, qword ptr [rsp + 0x40]
0x12db0:	mov	dword ptr [rdx], eax
0x12db2:	jmp	0x12c28


0x128dc:	movsxd	rbx, eax
0x128df:	mov	eax, dword ptr [rsp + 0xa0]
0x128e6:	lea	edx, [rax - 2]
0x128e9:	and	edx, 0xfffffffd
0x128ec:	je	0x12905


0x12905:	cmp	eax, 4
0x12908:	ja	0x132aa


0x128ee:	movzx	edx, byte ptr [r15 + 8]
0x128f3:	cmp	dl, 2
0x128f6:	je	0x12d91


0x1290e:	movsxd	rax, dword ptr [rbp + rax*4]
0x12913:	add	rax, rbp
0x12916:	jmp	rax


0x132aa:	lea	rcx, [rip + 0x3dbf]
0x132b1:	lea	rsi, [rip + 0x37e8]
0x132b8:	lea	rdi, [rip + 0x2cce]
0x132bf:	mov	edx, 0xced
0x132c4:	call	0x1b50


0x128fc:	cmp	dl, 0x16
0x128ff:	je	0x12db7


0x12db7:	movsxd	rax, ebx
0x12dba:	mov	r11, qword ptr [rsp + 0x20]
0x12dbf:	add	qword ptr [r14 + 0x48], rax
0x12dc3:	mov	r10, qword ptr [rsp + 0x60]
0x12dc8:	mov	rdx, r11
0x12dcb:	mov	rdi, r10
0x12dce:	call	0x70e0


0x12dd3:	movzx	edx, byte ptr [rsp + 0xc8]
0x12ddb:	cmp	dl, 2
0x12dde:	je	0x12d91


0x12de0:	cmp	dl, 0x15
0x12de3:	je	0x12ff7


0x12ff7:	mov	eax, ebx
0x12ff9:	neg	eax
0x12ffb:	cdqe	
0x12ffd:	add	qword ptr [r14 + 0x48], rax
0x13001:	mov	byte ptr [r15 + 8], 1
0x13006:	mov	eax, dword ptr [rsp + 0xa0]
0x1300d:	jmp	0x12905


0x12de9:	mov	rdx, qword ptr [rsp + 0x68]
0x12dee:	lea	rdi, [rsp + 0xb0]
0x12df6:	mov	r9d, 1
0x12dfc:	mov	r8, r11
0x12dff:	mov	ecx, eax
0x12e01:	mov	dword ptr [rsp + 0xb0], 3
0x12e0c:	mov	qword ptr [rsp + 0xb8], rdx
0x12e14:	mov	rdx, r10
0x12e17:	call	0x11590


0x12e1c:	test	eax, eax
0x12e1e:	jne	0x12dab


0x12e20:	mov	rdx, qword ptr [rsp + 0x20]
0x12e25:	mov	rsi, r14
0x12e28:	mov	rdi, r15
0x12e2b:	call	0x70e0


0x12e30:	movsxd	rbx, eax
0x12e33:	mov	rax, qword ptr [rsp + 0x10]
0x12e38:	mov	esi, dword ptr [rsp + 0xa0]
0x12e3f:	mov	r9d, 0
0x12e45:	cmp	dword ptr [rax + 0xb4], 1
0x12e4c:	lea	eax, [rsi - 2]
0x12e4f:	cmovg	r9, r13
0x12e53:	and	eax, 0xfffffffd
0x12e56:	je	0x132c9


0x132c9:	mov	rax, qword ptr [rsp + 0x40]
0x132ce:	mov	dword ptr [rax], 0xb
0x132d4:	jmp	0x12c28


0x12e5c:	mov	r10d, dword ptr [rsp + 0xb0]
0x12e64:	lea	eax, [r10 - 2]
0x12e68:	and	eax, 0xfffffffd
0x12e6b:	je	0x132c9


0x12e71:	cmp	esi, 3
0x12e74:	sete	r11b
0x12e78:	je	0x1330d


0x1330d:	mov	rdi, qword ptr [rsp + 0xa8]
0x13315:	xor	eax, eax
0x13317:	or	rcx, 0xffffffffffffffff
0x1331b:	repne scasb	al, byte ptr [rdi]


0x12e7e:	cmp	r10d, 3
0x12e82:	je	0x132d9


0x1331b:	repne scasb	al, byte ptr [rdi]


0x1331d:	mov	rax, rcx
0x13320:	not	rax
0x13323:	sub	rax, 1
0x13327:	cmp	rax, 1
0x1332b:	jbe	0x12e7e


0x132d9:	mov	rdi, qword ptr [rsp + 0xb8]
0x132e1:	xor	eax, eax
0x132e3:	or	rcx, 0xffffffffffffffff
0x132e7:	repne scasb	al, byte ptr [rdi]


0x12e88:	test	esi, esi
0x12e8a:	jne	0x131f9


0x13331:	jmp	0x132fd


0x132e7:	repne scasb	al, byte ptr [rdi]


0x132e9:	mov	rax, rcx
0x132ec:	not	rax
0x132ef:	sub	rax, 1
0x132f3:	cmp	rax, 1
0x132f7:	jbe	0x12e88


0x12e90:	movzx	edx, byte ptr [rsp + 0xa8]
0x12e98:	test	r10d, r10d
0x12e9b:	jne	0x131dd


0x131f9:	xor	edx, edx
0x131fb:	cmp	esi, 3
0x131fe:	jne	0x12e98


0x132fd:	mov	rax, qword ptr [rsp + 0x40]
0x13302:	mov	dword ptr [rax], 3
0x13308:	jmp	0x12c28


0x12ea1:	movzx	r8d, byte ptr [rsp + 0xb8]
0x12eaa:	test	esi, esi
0x12eac:	je	0x13196


0x131dd:	cmp	r10d, 3
0x131e1:	je	0x13472


0x13204:	mov	rax, qword ptr [rsp + 0xa8]
0x1320c:	movzx	edx, byte ptr [rax]
0x1320f:	jmp	0x12e98


0x12e98:	test	r10d, r10d
0x12e9b:	jne	0x131dd


0x13196:	test	r9, r9
0x13199:	je	0x13214


0x12eb2:	test	r11b, r11b
0x12eb5:	jne	0x13196


0x13472:	mov	rax, qword ptr [rsp + 0xb8]
0x1347a:	movzx	r8d, byte ptr [rax]
0x1347e:	jmp	0x12eaa


0x131e7:	test	esi, esi
0x131e9:	je	0x13193


0x13214:	test	r10d, r10d
0x13217:	je	0x12ef7


0x1319b:	mov	edi, edx
0x1319d:	mov	dword ptr [rsp + 0x78], r8d
0x131a2:	mov	qword ptr [rsp + 0x70], r9
0x131a7:	call	0x1cd0


0x12ebb:	test	r9, r9
0x12ebe:	mov	edx, dword ptr [rsp + 0xa8]
0x12ec5:	je	0x12ee4


0x12eaa:	test	esi, esi
0x12eac:	je	0x13196


0x13193:	xor	r8d, r8d
0x13196:	test	r9, r9
0x13199:	je	0x13214


0x131eb:	test	r11b, r11b
0x131ee:	jne	0x13193


0x12ef7:	test	qword ptr [rsp + 0x20], 0x10000
0x12f00:	je	0x12f0b


0x1321d:	cmp	r10d, 3
0x13221:	jne	0x131d0


0x12ee4:	cmp	edx, -1
0x12ee7:	je	0x132fd


0x12ec7:	mov	edi, r8d
0x12eca:	mov	dword ptr [rsp + 0x78], edx
0x12ece:	mov	qword ptr [rsp + 0x70], r9
0x12ed3:	call	0x1cd0


0x131f0:	mov	edx, dword ptr [rsp + 0xa8]
0x131f7:	jmp	0x131d0


0x12f0b:	test	r9, r9
0x12f0e:	je	0x12f36


0x12f02:	cmp	r8d, edx
0x12f05:	jb	0x132c9


0x13223:	jmp	0x12ef7


0x131d0:	mov	r8d, dword ptr [rsp + 0xb8]
0x131d8:	jmp	0x12ee4


0x12eed:	cmp	r8d, -1
0x12ef1:	je	0x132fd


0x12f36:	xor	eax, eax
0x12f38:	mov	edi, 1
0x12f3d:	cmp	edx, eax
0x12f3f:	mov	ecx, eax
0x12f41:	ja	0x12f59


0x12f10:	mov	rax, qword ptr [r9 + 0x40]
0x12f14:	cmp	rax, qword ptr [rsp + 0x48]
0x12f19:	mov	rcx, qword ptr [r9 + 8]
0x12f1d:	je	0x13333


0x12f43:	cmp	r8d, eax
0x12f46:	jb	0x12f59


0x12f59:	add	rax, 1
0x12f5d:	cmp	rax, 0x100
0x12f63:	jne	0x12f3d


0x13333:	mov	rax, qword ptr [rsp + 0x48]
0x13338:	mov	rdi, rcx
0x1333b:	mov	dword ptr [rsp + 0x8c], r8d
0x13343:	mov	dword ptr [rsp + 0x88], edx
0x1334a:	mov	qword ptr [rsp + 0x70], r9
0x1334f:	add	rax, rax
0x13352:	add	rax, 1
0x13356:	lea	r10, [rax*4]
0x1335e:	mov	qword ptr [rsp + 0x48], rax
0x13363:	mov	rsi, r10
0x13366:	mov	qword ptr [rsp + 0x80], r10
0x1336e:	call	0x1c90


0x12f23:	mov	dword ptr [rcx + rax*4], edx
0x12f26:	mov	rcx, qword ptr [r9 + 0x10]
0x12f2a:	lea	rsi, [rax + 1]
0x12f2e:	mov	qword ptr [r9 + 0x40], rsi
0x12f32:	mov	dword ptr [rcx + rax*4], r8d
0x12f36:	xor	eax, eax
0x12f38:	mov	edi, 1
0x12f3d:	cmp	edx, eax
0x12f3f:	mov	ecx, eax
0x12f41:	ja	0x12f59


0x12f48:	mov	rsi, rax
0x12f4b:	mov	r11, rdi
0x12f4e:	sar	rsi, 6
0x12f52:	shl	r11, cl
0x12f55:	or	qword ptr [r12 + rsi*8], r11
0x12f59:	add	rax, 1
0x12f5d:	cmp	rax, 0x100
0x12f63:	jne	0x12f3d


0x12f65:	mov	rax, qword ptr [rsp + 0x40]
0x12f6a:	mov	dword ptr [rax], 0
0x12f70:	jmp	0x12bf0


0x12f3d:	cmp	edx, eax
0x12f3f:	mov	ecx, eax
0x12f41:	ja	0x12f59


0x13373:	mov	r9, qword ptr [rsp + 0x70]
0x13378:	mov	r10, qword ptr [rsp + 0x80]
0x13380:	mov	qword ptr [rsp + 0x78], rax
0x13385:	mov	rdi, qword ptr [r9 + 0x10]
0x13389:	mov	rsi, r10
0x1338c:	call	0x1c90


0x13391:	mov	rcx, qword ptr [rsp + 0x78]
0x13396:	test	rcx, rcx
0x13399:	je	0x133c5


0x133c5:	mov	rdi, rcx
0x133c8:	mov	qword ptr [rsp], rax
0x133cc:	call	0x19d0


0x1339b:	test	rax, rax
0x1339e:	mov	r9, qword ptr [rsp + 0x70]
0x133a3:	mov	edx, dword ptr [rsp + 0x88]
0x133aa:	mov	r8d, dword ptr [rsp + 0x8c]
0x133b2:	je	0x133c5


0x133b4:	mov	qword ptr [r9 + 0x10], rax
0x133b8:	mov	qword ptr [r9 + 8], rcx
0x133bc:	mov	rax, qword ptr [r9 + 0x40]
0x133c0:	jmp	0x12f23


0x12ed8:	mov	r9, qword ptr [rsp + 0x70]
0x12edd:	mov	edx, dword ptr [rsp + 0x78]
0x12ee1:	mov	r8d, eax
0x12ee4:	cmp	edx, -1
0x12ee7:	je	0x132fd


0x131ac:	mov	edx, eax
0x131ae:	mov	eax, dword ptr [rsp + 0xb0]
0x131b5:	mov	r9, qword ptr [rsp + 0x70]
0x131ba:	mov	r8d, dword ptr [rsp + 0x78]
0x131bf:	cmp	eax, 3
0x131c2:	je	0x12ec7


0x131c8:	test	eax, eax
0x131ca:	je	0x12ec7


0x133d1:	mov	rax, qword ptr [rsp]
0x133d5:	mov	rdi, rax
0x133d8:	call	0x19d0


0x133dd:	mov	rax, qword ptr [rsp + 0x40]
0x133e2:	mov	dword ptr [rax], 0xc
0x133e8:	jmp	0x12c28


0x13159:	jmp	0x1214c


0x12c30:	mov	rdi, r13
0x12c33:	call	0x8310


0x12c38:	mov	rax, qword ptr [rsp + 0x40]
0x12c3d:	mov	r8d, dword ptr [rax]
0x12c40:	test	r8d, r8d
0x12c43:	jne	0x120b0


0x12c49:	mov	qword ptr [rsp + 0x28], 0
0x12c52:	jmp	0x1214c


0x19b0:	push	qword ptr [rip + 0x2193ca]
0x19b6:	jmp	qword ptr [rip + 0x2193cc]


0x19bc:	nop	dword ptr [rax]


0x19c6:	push	0
0x19cb:	jmp	0x19b0


0x19d6:	push	1
0x19db:	jmp	0x19b0


0x19e6:	push	2
0x19eb:	jmp	0x19b0


0x19f6:	push	3
0x19fb:	jmp	0x19b0


0x1a06:	push	4
0x1a0b:	jmp	0x19b0


0x1a16:	push	5
0x1a1b:	jmp	0x19b0


0x1a26:	push	6
0x1a2b:	jmp	0x19b0


0x1a36:	push	7
0x1a3b:	jmp	0x19b0


0x1a46:	push	8
0x1a4b:	jmp	0x19b0


0x1a56:	push	9
0x1a5b:	jmp	0x19b0


0x1a66:	push	0xa
0x1a6b:	jmp	0x19b0


0x1a76:	push	0xb
0x1a7b:	jmp	0x19b0


0x1a86:	push	0xc
0x1a8b:	jmp	0x19b0


0x1a96:	push	0xd
0x1a9b:	jmp	0x19b0


0x1aa6:	push	0xe
0x1aab:	jmp	0x19b0


0x1ab6:	push	0xf
0x1abb:	jmp	0x19b0


0x1ac6:	push	0x10
0x1acb:	jmp	0x19b0


0x1ad6:	push	0x11
0x1adb:	jmp	0x19b0


0x1ae6:	push	0x12
0x1aeb:	jmp	0x19b0


0x1af6:	push	0x13
0x1afb:	jmp	0x19b0


0x1b06:	push	0x14
0x1b0b:	jmp	0x19b0


0x1b16:	push	0x15
0x1b1b:	jmp	0x19b0


0x1b26:	push	0x16
0x1b2b:	jmp	0x19b0


0x1b36:	push	0x17
0x1b3b:	jmp	0x19b0


0x1b46:	push	0x18
0x1b4b:	jmp	0x19b0


0x1b56:	push	0x19
0x1b5b:	jmp	0x19b0


0x1b66:	push	0x1a
0x1b6b:	jmp	0x19b0


0x1b76:	push	0x1b
0x1b7b:	jmp	0x19b0


0x1b86:	push	0x1c
0x1b8b:	jmp	0x19b0


0x1b96:	push	0x1d
0x1b9b:	jmp	0x19b0


0x1ba6:	push	0x1e
0x1bab:	jmp	0x19b0


0x1bb6:	push	0x1f
0x1bbb:	jmp	0x19b0


0x1bc6:	push	0x20
0x1bcb:	jmp	0x19b0


0x1bd6:	push	0x21
0x1bdb:	jmp	0x19b0


0x1be6:	push	0x22
0x1beb:	jmp	0x19b0


0x1bf6:	push	0x23
0x1bfb:	jmp	0x19b0


0x1c06:	push	0x24
0x1c0b:	jmp	0x19b0


0x1c16:	push	0x25
0x1c1b:	jmp	0x19b0


0x1c26:	push	0x26
0x1c2b:	jmp	0x19b0


0x1c36:	push	0x27
0x1c3b:	jmp	0x19b0


0x1c46:	push	0x28
0x1c4b:	jmp	0x19b0


0x1c56:	push	0x29
0x1c5b:	jmp	0x19b0


0x1c66:	push	0x2a
0x1c6b:	jmp	0x19b0


0x1c76:	push	0x2b
0x1c7b:	jmp	0x19b0


0x1c86:	push	0x2c
0x1c8b:	jmp	0x19b0


0x1c96:	push	0x2d
0x1c9b:	jmp	0x19b0


0x1ca6:	push	0x2e
0x1cab:	jmp	0x19b0


0x1cb6:	push	0x2f
0x1cbb:	jmp	0x19b0


0x1cc6:	push	0x30
0x1ccb:	jmp	0x19b0


0x1cd6:	push	0x31
0x1cdb:	jmp	0x19b0


0x1ce6:	push	0x32
0x1ceb:	jmp	0x19b0


0x1cf6:	push	0x33
0x1cfb:	jmp	0x19b0


0x1d06:	push	0x34
0x1d0b:	jmp	0x19b0


0x1d16:	push	0x35
0x1d1b:	jmp	0x19b0


0x1d26:	push	0x36
0x1d2b:	jmp	0x19b0


0x1d36:	push	0x37
0x1d3b:	jmp	0x19b0


0x1d46:	push	0x38
0x1d4b:	jmp	0x19b0


0x1d56:	push	0x39
0x1d5b:	jmp	0x19b0


0x1d66:	push	0x3a
0x1d6b:	jmp	0x19b0


0x1d76:	push	0x3b
0x1d7b:	jmp	0x19b0


0x1d86:	push	0x3c
0x1d8b:	jmp	0x19b0


0x1d96:	push	0x3d
0x1d9b:	jmp	0x19b0


0x1da0:	jmp	qword ptr [rip + 0x2191da]




0x1da6:	push	0x3e
0x1dab:	jmp	0x19b0


0x1db6:	push	0x3f
0x1dbb:	jmp	0x19b0


0x1dc6:	push	0x40
0x1dcb:	jmp	0x19b0


0x1e03:	nop	word ptr cs:[rax + rax]
0x1e0d:	nop	dword ptr [rax]


0x1fcb:	nop	dword ptr [rax + rax]


0x1ffa:	hlt	


0x1ffb:	nop	dword ptr [rax + rax]


0x2032:	nop	dword ptr [rax]
0x2036:	nop	word ptr cs:[rax + rax]


0x2082:	nop	dword ptr [rax]
0x2086:	nop	word ptr cs:[rax + rax]


0x20ca:	nop	word ptr [rax + rax]


0x20da:	nop	word ptr [rax + rax]


0x210f:	nop	


0x2192:	nop	dword ptr [rax]
0x2196:	nop	word ptr cs:[rax + rax]


0x21d2:	nop	dword ptr [rax]
0x21d6:	nop	word ptr cs:[rax + rax]


0x2247:	nop	word ptr [rax + rax]


0x232d:	nop	dword ptr [rax]


0x27a9:	nop	dword ptr [rax]


0x2c53:	nop	dword ptr [rax]
0x2c56:	nop	word ptr cs:[rax + rax]


0x3892:	nop	dword ptr [rax]
0x3896:	nop	word ptr cs:[rax + rax]


0x3d21:	nop	dword ptr [rax + rax]
0x3d26:	nop	word ptr cs:[rax + rax]


0x3ddd:	nop	dword ptr [rax]


0x3e95:	nop	word ptr cs:[rax + rax]
0x3e9f:	nop	


0x3ea8:	nop	dword ptr [rax + rax]


0x3eb8:	nop	dword ptr [rax + rax]


0x3f64:	nop	word ptr cs:[rax + rax]
0x3f6e:	nop	


0x40af:	nop	


0x41eb:	nop	dword ptr [rax + rax]


0x4211:	nop	dword ptr [rax + rax]
0x4216:	nop	word ptr cs:[rax + rax]


0x4276:	nop	word ptr cs:[rax + rax]


0x429d:	nop	dword ptr [rax]


0x4545:	nop	word ptr cs:[rax + rax]
0x454f:	nop	


0x477c:	nop	dword ptr [rax]


0x481f:	nop	


0x4907:	nop	word ptr [rax + rax]


0x49a3:	mov	byte ptr [rsp + 0xe], 1
0x49a8:	mov	byte ptr [rsp + 0x7c], 0
0x49ad:	xor	r12d, r12d
0x49b0:	mov	qword ptr [rsp + 0x50], 0
0x49b9:	mov	byte ptr [rsp + 0xf], 1
0x49be:	mov	byte ptr [rsp + 0xd], 0
0x49c3:	lea	rax, [rip + 0x116d4]
0x49ca:	mov	qword ptr [rsp + 0x18], 1
0x49d3:	xor	r15d, r15d
0x49d6:	mov	dword ptr [rsp + 8], 2
0x49de:	mov	qword ptr [rsp + 0x48], rax
0x49e3:	xor	r11d, r11d
0x49e6:	mov	rax, rbp
0x49e9:	mov	r8d, r12d
0x49ec:	mov	rbp, r11
0x49ef:	mov	r11, rax
0x49f2:	nop	word ptr [rax + rax]
0x49f8:	cmp	r11, rbp
0x49fb:	setne	r12b
0x49ff:	cmp	r11, -1
0x4a03:	jne	0x4a12


0x4a05:	mov	rax, qword ptr [rsp + 0x10]
0x4a0a:	cmp	byte ptr [rax + rbp], 0
0x4a0e:	setne	r12b
0x4a12:	test	r12b, r12b
0x4a15:	je	0x5070


0x4a12:	test	r12b, r12b
0x4a15:	je	0x5070


0x5070:	cmp	dword ptr [rsp + 8], 2
0x5075:	movzx	ebx, byte ptr [rsp + 0xf]
0x507a:	mov	r12d, r8d
0x507d:	mov	rbp, r11
0x5080:	sete	dl
0x5083:	mov	eax, ebx
0x5085:	test	r15, r15
0x5088:	sete	cl
0x508b:	and	eax, edx
0x508d:	and	al, cl
0x508f:	jne	0x5af6


0x4a1b:	cmp	dword ptr [rsp + 8], 2
0x4a20:	mov	rdi, qword ptr [rsp + 0x10]
0x4a25:	lea	r9, [rdi + rbp]
0x4a29:	setne	al
0x4a2c:	and	al, byte ptr [rsp + 0xd]
0x4a30:	mov	r10d, eax
0x4a33:	je	0x4ae0


0x5095:	mov	eax, ebx
0x5097:	xor	eax, 1
0x509a:	and	dl, al
0x509c:	je	0x5a0c


0x5af6:	mov	dword ptr [rsp + 8], 2
0x5afe:	jmp	0x5499


0x4ae0:	movzx	ebx, byte ptr [r9]
0x4ae4:	cmp	bl, 0x7e
0x4ae7:	ja	0x4e08


0x4a39:	mov	rax, qword ptr [rsp + 0x18]
0x4a3e:	test	rax, rax
0x4a41:	je	0x4e70


0x5a0c:	mov	rbx, qword ptr [rsp + 0x48]
0x5a11:	test	rbx, rbx
0x5a14:	je	0x5a42


0x50a2:	cmp	byte ptr [rsp + 0x7c], 0
0x50a7:	je	0x5a0a


0x5499:	cmp	byte ptr [rsp + 0xd], 0
0x549e:	je	0x54b0


0x4aed:	lea	rcx, [rip + 0x117d8]
0x4af4:	movzx	edx, bl
0x4af7:	movsxd	rax, dword ptr [rcx + rdx*4]
0x4afb:	add	rax, rcx
0x4afe:	jmp	rax


0x4e08:	cmp	qword ptr [rsp + 0x58], 1
0x4e0e:	jne	0x51b8


0x4e70:	movzx	ebx, byte ptr [r9]
0x4e74:	cmp	bl, 0x7e
0x4e77:	ja	0x4e00


0x4a47:	cmp	r11, -1
0x4a4b:	lea	rbx, [rbp + rax]
0x4a50:	jne	0x4a80


0x5a42:	cmp	r13, r15
0x5a45:	jbe	0x54e9


0x5a16:	test	al, al
0x5a18:	je	0x5a42


0x5a0a:	mov	eax, edx
0x5a0c:	mov	rbx, qword ptr [rsp + 0x48]
0x5a11:	test	rbx, rbx
0x5a14:	je	0x5a42


0x50ad:	cmp	byte ptr [rsp + 0xe], 0
0x50b2:	jne	0x5aad


0x54a0:	test	al, al
0x54a2:	mov	eax, 4
0x54a7:	cmove	eax, dword ptr [rsp + 8]
0x54ac:	mov	dword ptr [rsp + 8], eax


0x4e14:	mov	qword ptr [rsp + 0x38], r11
0x4e19:	mov	byte ptr [rsp + 0x30], r8b
0x4e1e:	mov	byte ptr [rsp + 0x28], r10b
0x4e23:	call	0x1dc0


0x51b8:	lea	rax, [rsp + 0xa0]
0x51c0:	cmp	r11, -1
0x51c4:	mov	qword ptr [rsp + 0xa0], 0
0x51d0:	mov	qword ptr [rsp + 0x28], rax
0x51d5:	jne	0x5204


0x4e79:	lea	rcx, [rip + 0x11648]
0x4e80:	movzx	edx, bl
0x4e83:	movsxd	rax, dword ptr [rcx + rdx*4]
0x4e87:	add	rax, rcx
0x4e8a:	jmp	rax


0x4e00:	xor	r10d, r10d
0x4e03:	nop	dword ptr [rax + rax]
0x4e08:	cmp	qword ptr [rsp + 0x58], 1
0x4e0e:	jne	0x51b8


0x4a52:	cmp	rax, 1
0x4a56:	jbe	0x4a80


0x4a80:	cmp	rbx, r11
0x4a83:	mov	byte ptr [rsp + 0x28], r10b
0x4a88:	ja	0x5040


0x5a4b:	mov	byte ptr [r14 + r15], 0
0x5a50:	jmp	0x54e9


0x5a1a:	movzx	ecx, byte ptr [rbx]
0x5a1d:	mov	rax, rbx
0x5a20:	test	cl, cl
0x5a22:	je	0x5a42


0x50b8:	test	r13, r13
0x50bb:	sete	al
0x50be:	cmp	qword ptr [rsp + 0x50], 0
0x50c4:	setne	dl
0x50c7:	and	al, dl
0x50c9:	je	0x5aec


0x51d7:	mov	rdi, qword ptr [rsp + 0x10]
0x51dc:	mov	byte ptr [rsp + 0x40], r8b
0x51e1:	mov	byte ptr [rsp + 0x38], r10b
0x51e6:	mov	qword ptr [rsp + 0x30], r9
0x51eb:	call	0x1ab0


0x5204:	lea	rax, [rsp + 0x9c]
0x520c:	xor	ecx, ecx
0x520e:	mov	byte ptr [rsp + 0x7e], bl
0x5212:	mov	byte ptr [rsp + 0x7d], r8b
0x5217:	mov	rbx, rcx
0x521a:	mov	qword ptr [rsp + 0x88], r9
0x5222:	mov	qword ptr [rsp + 0x38], rax
0x5227:	mov	byte ptr [rsp + 0x7f], r10b
0x522c:	mov	qword ptr [rsp + 0x80], r15
0x5234:	mov	qword ptr [rsp + 0x40], r14
0x5239:	mov	qword ptr [rsp + 0x70], r13
0x523e:	mov	qword ptr [rsp + 0x30], r11
0x5243:	mov	rax, qword ptr [rsp + 0x10]
0x5248:	lea	r14, [rbp + rbx]
0x524d:	mov	rdx, qword ptr [rsp + 0x30]
0x5252:	mov	rcx, qword ptr [rsp + 0x28]
0x5257:	mov	rdi, qword ptr [rsp + 0x38]
0x525c:	lea	r13, [rax + r14]
0x5260:	sub	rdx, r14
0x5263:	mov	rsi, r13
0x5266:	call	0x7050


0x4a58:	mov	byte ptr [rsp + 0x38], r8b
0x4a5d:	mov	byte ptr [rsp + 0x30], r10b
0x4a62:	mov	qword ptr [rsp + 0x28], r9
0x4a67:	call	0x1ab0


0x4a8e:	mov	rdx, qword ptr [rsp + 0x18]
0x4a93:	mov	rsi, qword ptr [rsp + 0x48]
0x4a98:	mov	rdi, r9
0x4a9b:	mov	qword ptr [rsp + 0x40], r11
0x4aa0:	mov	byte ptr [rsp + 0x38], r8b
0x4aa5:	mov	qword ptr [rsp + 0x30], r9
0x4aaa:	call	0x1b90


0x5040:	xor	r10d, r10d
0x5043:	jmp	0x4ae0


0x5a24:	mov	rdx, r15
0x5a27:	sub	rax, r15
0x5a2a:	cmp	r13, rdx
0x5a2d:	jbe	0x5a33


0x5aec:	movzx	eax, byte ptr [rsp + 0x7c]
0x5af1:	jmp	0x5a0c


0x50cf:	mov	r13, qword ptr [rsp + 0x50]
0x50d4:	lea	rbx, [rip + 0x10fc3]
0x50db:	mov	byte ptr [r14], 0x27
0x50df:	mov	dword ptr [rsp + 8], 2
0x50e7:	mov	r15d, 1
0x50ed:	mov	qword ptr [rsp + 0x18], 1
0x50f6:	mov	byte ptr [rsp + 0xf], 0
0x50fb:	mov	qword ptr [rsp + 0x48], rbx
0x5100:	mov	byte ptr [rsp + 0x7c], al
0x5104:	jmp	0x49e3


0x5a33:	add	rdx, 1
0x5a37:	movzx	ecx, byte ptr [rax + rdx]
0x5a3b:	test	cl, cl
0x5a3d:	jne	0x5a2a


0x5a2f:	mov	byte ptr [r14 + rdx], cl
0x5a33:	add	rdx, 1
0x5a37:	movzx	ecx, byte ptr [rax + rdx]
0x5a3b:	test	cl, cl
0x5a3d:	jne	0x5a2a


0x49e3:	xor	r11d, r11d
0x49e6:	mov	rax, rbp
0x49e9:	mov	r8d, r12d
0x49ec:	mov	rbp, r11
0x49ef:	mov	r11, rax
0x49f2:	nop	word ptr [rax + rax]
0x49f8:	cmp	r11, rbp
0x49fb:	setne	r12b
0x49ff:	cmp	r11, -1
0x4a03:	jne	0x4a12


0x5a3f:	mov	r15, rdx
0x5a42:	cmp	r13, r15
0x5a45:	jbe	0x54e9


0x5a2a:	cmp	r13, rdx
0x5a2d:	jbe	0x5a33


0x4aaf:	test	eax, eax
0x4ab1:	mov	r9, qword ptr [rsp + 0x30]
0x4ab6:	movzx	r8d, byte ptr [rsp + 0x38]
0x4abc:	mov	r11, qword ptr [rsp + 0x40]
0x4ac1:	jne	0x5040


0x4ac7:	cmp	byte ptr [rsp + 0xf], 0
0x4acc:	movzx	r10d, byte ptr [rsp + 0x28]
0x4ad2:	jne	0x5a55


0x5a55:	cmp	dword ptr [rsp + 8], 2
0x5a5a:	movzx	ebx, byte ptr [rsp + 0xf]
0x5a5f:	mov	rbp, r11
0x5a62:	sete	al
0x5a65:	mov	byte ptr [rsp + 0xd], bl
0x5a69:	jmp	0x5499


0x526b:	test	rax, rax
0x526e:	mov	r15, rax
0x5271:	je	0x52c1


0x52c1:	mov	edx, r12d
0x52c4:	mov	rdi, rbx
0x52c7:	movzx	r8d, byte ptr [rsp + 0x7d]
0x52cd:	xor	edx, 1
0x52d0:	movzx	ebx, byte ptr [rsp + 0x7e]
0x52d5:	movzx	r10d, byte ptr [rsp + 0x7f]
0x52db:	and	dl, byte ptr [rsp + 0xd]
0x52df:	mov	r15, qword ptr [rsp + 0x80]
0x52e7:	mov	r14, qword ptr [rsp + 0x40]
0x52ec:	mov	r13, qword ptr [rsp + 0x70]
0x52f1:	mov	r11, qword ptr [rsp + 0x30]
0x52f6:	cmp	rdi, 1
0x52fa:	jbe	0x58fb


0x5273:	cmp	rax, -1
0x5277:	je	0x5895


0x58fb:	mov	eax, edx
0x58fd:	jmp	0x4e57


0x5300:	mov	rcx, rdi
0x5303:	xor	esi, esi
0x5305:	movzx	r9d, byte ptr [rsp + 0xf]
0x530b:	add	rcx, rbp
0x530e:	mov	rdi, qword ptr [rsp + 0x10]
0x5313:	jmp	0x53ce


0x5895:	mov	rdi, rbx
0x5898:	movzx	r8d, byte ptr [rsp + 0x7d]
0x589e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x58a3:	movzx	r10d, byte ptr [rsp + 0x7f]
0x58a9:	mov	r15, qword ptr [rsp + 0x80]
0x58b1:	xor	r12d, r12d
0x58b4:	mov	r14, qword ptr [rsp + 0x40]
0x58b9:	mov	r13, qword ptr [rsp + 0x70]
0x58be:	mov	r11, qword ptr [rsp + 0x30]
0x58c3:	movzx	edx, byte ptr [rsp + 0xd]
0x58c8:	jmp	0x52f6


0x527d:	cmp	rax, -2
0x5281:	je	0x5821


0x4e57:	test	al, al
0x4e59:	jne	0x57f1


0x53ce:	test	dl, dl
0x53d0:	jne	0x5320


0x52f6:	cmp	rdi, 1
0x52fa:	jbe	0x58fb


0x5821:	mov	r11, qword ptr [rsp + 0x30]
0x5826:	mov	rsi, r14
0x5829:	mov	rcx, r13
0x582c:	mov	rax, rbx
0x582f:	mov	rdi, rbx
0x5832:	movzx	r8d, byte ptr [rsp + 0x7d]
0x5838:	movzx	ebx, byte ptr [rsp + 0x7e]
0x583d:	mov	r9, qword ptr [rsp + 0x88]
0x5845:	cmp	rsi, r11
0x5848:	movzx	r10d, byte ptr [rsp + 0x7f]
0x584e:	mov	r15, qword ptr [rsp + 0x80]
0x5856:	mov	r14, qword ptr [rsp + 0x40]
0x585b:	mov	r13, qword ptr [rsp + 0x70]
0x5860:	jae	0x5888


0x5287:	cmp	dword ptr [rsp + 8], 2
0x528c:	sete	al
0x528f:	and	al, byte ptr [rsp + 0xf]
0x5293:	jne	0x5430


0x4e5f:	cmp	dword ptr [rsp + 8], 2
0x4e64:	sete	dl
0x4e67:	jmp	0x4b38


0x57f1:	movzx	edx, byte ptr [rsp + 0xd]
0x57f6:	xor	r12d, r12d
0x57f9:	jmp	0x5300


0x53d6:	mov	eax, esi
0x53d8:	xor	eax, 1
0x53db:	and	eax, r8d
0x53de:	test	r10b, r10b
0x53e1:	je	0x53f1


0x5320:	cmp	dword ptr [rsp + 8], 2
0x5325:	sete	al
0x5328:	test	r9b, r9b
0x532b:	jne	0x57e0


0x5862:	cmp	byte ptr [rcx], 0
0x5865:	jne	0x5877


0x5888:	movzx	edx, byte ptr [rsp + 0xd]
0x588d:	xor	r12d, r12d
0x5890:	jmp	0x52f6


0x5299:	mov	edi, dword ptr [rsp + 0x9c]
0x52a0:	call	0x1da0


0x5430:	cmp	r15, 1
0x5434:	je	0x5299


0x4b38:	cmp	byte ptr [rsp + 0xd], 1
0x4b3d:	jne	0x4c52


0x53f1:	add	rbp, 1
0x53f5:	cmp	rbp, rcx
0x53f8:	jae	0x4b7c


0x53e3:	cmp	r13, r15
0x53e6:	jbe	0x53ed


0x5331:	mov	esi, r8d
0x5334:	xor	esi, 1
0x5337:	and	al, sil
0x533a:	je	0x536b


0x57e0:	movzx	ebx, byte ptr [rsp + 0xf]
0x57e5:	mov	rbp, r11
0x57e8:	mov	byte ptr [rsp + 0xd], bl
0x57ec:	jmp	0x5499


0x5867:	jmp	0x5888


0x5877:	add	rax, 1
0x587b:	lea	rdx, [rbp + rax]
0x5880:	cmp	r11, rdx
0x5883:	ja	0x5870


0x543a:	mov	rdi, qword ptr [rsp + 0x10]
0x543f:	lea	rcx, [rdi + r15]
0x5443:	lea	rdx, [rdi + r14 + 1]
0x5448:	lea	r8, [rcx + r14]
0x544c:	jmp	0x545d


0x4b43:	test	dl, dl
0x4b45:	jne	0x4c52


0x4c52:	cmp	byte ptr [rsp + 0xf], 0
0x4c57:	jne	0x4b4b


0x53fe:	test	al, al
0x5400:	je	0x57fe


0x4b7c:	test	al, al
0x4b7e:	je	0x4ba0


0x53ed:	add	r15, 1
0x53f1:	add	rbp, 1
0x53f5:	cmp	rbp, rcx
0x53f8:	jae	0x4b7c


0x53e8:	mov	byte ptr [r14 + r15], 0x5c
0x53ed:	add	r15, 1
0x53f1:	add	rbp, 1
0x53f5:	cmp	rbp, rcx
0x53f8:	jae	0x4b7c


0x536b:	cmp	r13, r15
0x536e:	jbe	0x5375


0x533c:	cmp	r13, r15
0x533f:	jbe	0x5346


0x5885:	mov	rdi, rax
0x5888:	movzx	edx, byte ptr [rsp + 0xd]
0x588d:	xor	r12d, r12d
0x5890:	jmp	0x52f6


0x5870:	cmp	byte ptr [r9 + rax], 0
0x5875:	je	0x5885


0x545d:	movzx	ecx, byte ptr [rdx]
0x5460:	sub	ecx, 0x5b
0x5463:	cmp	cl, 0x21
0x5466:	ja	0x5450


0x4b4b:	mov	rsi, qword ptr [rsp + 0x20]
0x4b50:	test	rsi, rsi
0x4b53:	je	0x4b69


0x4c5d:	jmp	0x4b69


0x57fe:	xor	r10d, r10d
0x5801:	jmp	0x53bd


0x5406:	cmp	r13, r15
0x5409:	jbe	0x5410


0x4ba0:	cmp	r15, r13
0x4ba3:	jae	0x4ba9


0x4b80:	cmp	r13, r15
0x4b83:	jbe	0x4b8a


0x5375:	lea	rax, [r15 + 1]
0x5379:	cmp	r13, rax
0x537c:	jbe	0x538b


0x5370:	mov	byte ptr [r14 + r15], 0x5c
0x5375:	lea	rax, [r15 + 1]
0x5379:	cmp	r13, rax
0x537c:	jbe	0x538b


0x5346:	lea	rsi, [r15 + 1]
0x534a:	cmp	r13, rsi
0x534d:	jbe	0x5355


0x5341:	mov	byte ptr [r14 + r15], 0x27
0x5346:	lea	rsi, [r15 + 1]
0x534a:	cmp	r13, rsi
0x534d:	jbe	0x5355


0x5468:	mov	esi, 1
0x546d:	shl	rsi, cl
0x5470:	mov	rcx, rsi
0x5473:	movabs	rsi, 0x20000002b
0x547d:	test	rcx, rsi
0x5480:	je	0x5450


0x5450:	add	rdx, 1
0x5454:	cmp	r8, rdx
0x5457:	je	0x5299


0x4b69:	test	r10b, r10b
0x4b6c:	jne	0x4cb3


0x4b55:	mov	edx, ebx
0x4b57:	shr	dl, 5
0x4b5a:	movzx	edx, dl
0x4b5d:	mov	edx, dword ptr [rsi + rdx*4]
0x4b60:	bt	edx, ebx
0x4b63:	jb	0x4cb3


0x53bd:	cmp	r13, r15
0x53c0:	jbe	0x53c6


0x5410:	lea	rax, [r15 + 1]
0x5414:	cmp	r13, rax
0x5417:	jbe	0x541f


0x540b:	mov	byte ptr [r14 + r15], 0x27
0x5410:	lea	rax, [r15 + 1]
0x5414:	cmp	r13, rax
0x5417:	jbe	0x541f


0x4ba5:	mov	byte ptr [r14 + r15], bl
0x4ba9:	movzx	edi, byte ptr [rsp + 0xe]
0x4bae:	add	r15, 1
0x4bb2:	mov	eax, 0
0x4bb7:	test	r12b, r12b
0x4bba:	cmove	edi, eax
0x4bbd:	mov	byte ptr [rsp + 0xe], dil
0x4bc2:	jmp	0x49f8


0x4ba9:	movzx	edi, byte ptr [rsp + 0xe]
0x4bae:	add	r15, 1
0x4bb2:	mov	eax, 0
0x4bb7:	test	r12b, r12b
0x4bba:	cmove	edi, eax
0x4bbd:	mov	byte ptr [rsp + 0xe], dil
0x4bc2:	jmp	0x49f8


0x4b8a:	lea	rax, [r15 + 1]
0x4b8e:	cmp	r13, rax
0x4b91:	jbe	0x4b99


0x4b85:	mov	byte ptr [r14 + r15], 0x27
0x4b8a:	lea	rax, [r15 + 1]
0x4b8e:	cmp	r13, rax
0x4b91:	jbe	0x4b99


0x538b:	lea	rax, [r15 + 2]
0x538f:	cmp	r13, rax
0x5392:	jbe	0x53a4


0x537e:	mov	eax, ebx
0x5380:	shr	al, 6
0x5383:	add	eax, 0x30
0x5386:	mov	byte ptr [r14 + r15 + 1], al
0x538b:	lea	rax, [r15 + 2]
0x538f:	cmp	r13, rax
0x5392:	jbe	0x53a4


0x5355:	lea	rsi, [r15 + 2]
0x5359:	cmp	r13, rsi
0x535c:	jbe	0x5364


0x534f:	mov	byte ptr [r14 + r15 + 1], 0x24
0x5355:	lea	rsi, [r15 + 2]
0x5359:	cmp	r13, rsi
0x535c:	jbe	0x5364


0x5482:	mov	r14, qword ptr [rsp + 0x40]
0x5487:	mov	r13, qword ptr [rsp + 0x70]
0x548c:	mov	rbp, qword ptr [rsp + 0x30]
0x5491:	mov	dword ptr [rsp + 8], 2
0x5499:	cmp	byte ptr [rsp + 0xd], 0
0x549e:	je	0x54b0


0x4b72:	xor	eax, 1
0x4b75:	add	rbp, 1
0x4b79:	and	eax, r8d
0x4b7c:	test	al, al
0x4b7e:	je	0x4ba0


0x4cb3:	cmp	dword ptr [rsp + 8], 2
0x4cb8:	sete	dl
0x4cbb:	cmp	byte ptr [rsp + 0xf], 0
0x4cc0:	mov	eax, edx
0x4cc2:	jne	0x5518


0x53c6:	movzx	ebx, byte ptr [rdi + rbp]
0x53ca:	add	r15, 1
0x53ce:	test	dl, dl
0x53d0:	jne	0x5320


0x53c2:	mov	byte ptr [r14 + r15], bl
0x53c6:	movzx	ebx, byte ptr [rdi + rbp]
0x53ca:	add	r15, 1
0x53ce:	test	dl, dl
0x53d0:	jne	0x5320


0x541f:	add	r15, 2
0x5423:	xor	r10d, r10d
0x5426:	xor	r8d, r8d
0x5429:	jmp	0x53bd


0x5419:	mov	byte ptr [r14 + r15 + 1], 0x27
0x541f:	add	r15, 2
0x5423:	xor	r10d, r10d
0x5426:	xor	r8d, r8d
0x5429:	jmp	0x53bd


0x49f8:	cmp	r11, rbp
0x49fb:	setne	r12b
0x49ff:	cmp	r11, -1
0x4a03:	jne	0x4a12


0x4b99:	add	r15, 2
0x4b9d:	xor	r8d, r8d
0x4ba0:	cmp	r15, r13
0x4ba3:	jae	0x4ba9


0x4b93:	mov	byte ptr [r14 + r15 + 1], 0x27
0x4b99:	add	r15, 2
0x4b9d:	xor	r8d, r8d
0x4ba0:	cmp	r15, r13
0x4ba3:	jae	0x4ba9


0x53a4:	and	ebx, 7
0x53a7:	add	rbp, 1
0x53ab:	add	r15, 3
0x53af:	add	ebx, 0x30
0x53b2:	cmp	rbp, rcx
0x53b5:	jae	0x4ba0


0x5394:	mov	eax, ebx
0x5396:	shr	al, 3
0x5399:	and	eax, 7
0x539c:	add	eax, 0x30
0x539f:	mov	byte ptr [r14 + r15 + 2], al
0x53a4:	and	ebx, 7
0x53a7:	add	rbp, 1
0x53ab:	add	r15, 3
0x53af:	add	ebx, 0x30
0x53b2:	cmp	rbp, rcx
0x53b5:	jae	0x4ba0


0x5364:	add	r15, 3
0x5368:	mov	r8d, eax
0x536b:	cmp	r13, r15
0x536e:	jbe	0x5375


0x535e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x5364:	add	r15, 3
0x5368:	mov	r8d, eax
0x536b:	cmp	r13, r15
0x536e:	jbe	0x5375


0x4cc8:	mov	eax, r8d
0x4ccb:	xor	eax, 1
0x4cce:	and	al, dl
0x4cd0:	je	0x4d01


0x5518:	mov	rbp, r11
0x551b:	jmp	0x5499


0x53bb:	mov	esi, edx
0x53bd:	cmp	r13, r15
0x53c0:	jbe	0x53c6


0x4d01:	cmp	r13, r15
0x4d04:	jbe	0x4d0b


0x4cd2:	cmp	r13, r15
0x4cd5:	jbe	0x4cdc


0x4d0b:	add	r15, 1
0x4d0f:	add	rbp, 1
0x4d13:	jmp	0x4ba0


0x4d06:	mov	byte ptr [r14 + r15], 0x5c
0x4d0b:	add	r15, 1
0x4d0f:	add	rbp, 1
0x4d13:	jmp	0x4ba0


0x4cdc:	lea	rdx, [r15 + 1]
0x4ce0:	cmp	r13, rdx
0x4ce3:	jbe	0x4ceb


0x4cd7:	mov	byte ptr [r14 + r15], 0x27
0x4cdc:	lea	rdx, [r15 + 1]
0x4ce0:	cmp	r13, rdx
0x4ce3:	jbe	0x4ceb


0x4ceb:	lea	rdx, [r15 + 2]
0x4cef:	cmp	r13, rdx
0x4cf2:	jbe	0x4cfa


0x4ce5:	mov	byte ptr [r14 + r15 + 1], 0x24
0x4ceb:	lea	rdx, [r15 + 2]
0x4cef:	cmp	r13, rdx
0x4cf2:	jbe	0x4cfa


0x4cfa:	add	r15, 3
0x4cfe:	mov	r8d, eax
0x4d01:	cmp	r13, r15
0x4d04:	jbe	0x4d0b


0x4cf4:	mov	byte ptr [r14 + r15 + 2], 0x27
0x4cfa:	add	r15, 3
0x4cfe:	mov	r8d, eax
0x4d01:	cmp	r13, r15
0x4d04:	jbe	0x4d0b


0x52a5:	mov	rdi, qword ptr [rsp + 0x28]
0x52aa:	test	eax, eax
0x52ac:	mov	eax, 0
0x52b1:	cmove	r12d, eax
0x52b5:	add	rbx, r15
0x52b8:	call	0x1d90


0x52bd:	test	eax, eax
0x52bf:	je	0x5243


0x5243:	mov	rax, qword ptr [rsp + 0x10]
0x5248:	lea	r14, [rbp + rbx]
0x524d:	mov	rdx, qword ptr [rsp + 0x30]
0x5252:	mov	rcx, qword ptr [rsp + 0x28]
0x5257:	mov	rdi, qword ptr [rsp + 0x38]
0x525c:	lea	r13, [rax + r14]
0x5260:	sub	rdx, r14
0x5263:	mov	rsi, r13
0x5266:	call	0x7050


0x4a6c:	movzx	r8d, byte ptr [rsp + 0x38]
0x4a72:	movzx	r10d, byte ptr [rsp + 0x30]
0x4a78:	mov	r11, rax
0x4a7b:	mov	r9, qword ptr [rsp + 0x28]
0x4a80:	cmp	rbx, r11
0x4a83:	mov	byte ptr [rsp + 0x28], r10b
0x4a88:	ja	0x5040


0x51f0:	movzx	r8d, byte ptr [rsp + 0x40]
0x51f6:	movzx	r10d, byte ptr [rsp + 0x38]
0x51fc:	mov	r11, rax
0x51ff:	mov	r9, qword ptr [rsp + 0x30]
0x5204:	lea	rax, [rsp + 0x9c]
0x520c:	xor	ecx, ecx
0x520e:	mov	byte ptr [rsp + 0x7e], bl
0x5212:	mov	byte ptr [rsp + 0x7d], r8b
0x5217:	mov	rbx, rcx
0x521a:	mov	qword ptr [rsp + 0x88], r9
0x5222:	mov	qword ptr [rsp + 0x38], rax
0x5227:	mov	byte ptr [rsp + 0x7f], r10b
0x522c:	mov	qword ptr [rsp + 0x80], r15
0x5234:	mov	qword ptr [rsp + 0x40], r14
0x5239:	mov	qword ptr [rsp + 0x70], r13
0x523e:	mov	qword ptr [rsp + 0x30], r11
0x5243:	mov	rax, qword ptr [rsp + 0x10]
0x5248:	lea	r14, [rbp + rbx]
0x524d:	mov	rdx, qword ptr [rsp + 0x30]
0x5252:	mov	rcx, qword ptr [rsp + 0x28]
0x5257:	mov	rdi, qword ptr [rsp + 0x38]
0x525c:	lea	r13, [rax + r14]
0x5260:	sub	rdx, r14
0x5263:	mov	rsi, r13
0x5266:	call	0x7050


0x4e28:	mov	rcx, qword ptr [rax]
0x4e2b:	movzx	edx, bl
0x4e2e:	movzx	r10d, byte ptr [rsp + 0x28]
0x4e34:	movzx	r8d, byte ptr [rsp + 0x30]
0x4e3a:	mov	r11, qword ptr [rsp + 0x38]
0x4e3f:	mov	edi, 1
0x4e44:	movzx	eax, word ptr [rcx + rdx*2]
0x4e48:	and	ax, 0x4000
0x4e4c:	setne	r12b
0x4e50:	sete	al
0x4e53:	and	al, byte ptr [rsp + 0xd]
0x4e57:	test	al, al
0x4e59:	jne	0x57f1


0x4b00:	xor	r10d, r10d
0x4b03:	cmp	r11, 1
0x4b07:	setne	al
0x4b0a:	cmp	r11, -1
0x4b0e:	jne	0x4b1c


0x4b10:	mov	rax, qword ptr [rsp + 0x10]
0x4b15:	cmp	byte ptr [rax + 1], 0
0x4b19:	setne	al
0x4b1c:	cmp	dword ptr [rsp + 8], 2
0x4b21:	sete	dl
0x4b24:	test	al, al
0x4b26:	je	0x4d78


0x4b1c:	cmp	dword ptr [rsp + 8], 2
0x4b21:	sete	dl
0x4b24:	test	al, al
0x4b26:	je	0x4d78


0x4d78:	test	rbp, rbp
0x4d7b:	jne	0x4b2c


0x4b2c:	xor	r12d, r12d
0x4b2f:	xor	eax, eax
0x4b31:	nop	dword ptr [rax]
0x4b38:	cmp	byte ptr [rsp + 0xd], 1
0x4b3d:	jne	0x4c52


0x4d81:	movzx	eax, byte ptr [rsp + 0xf]
0x4d86:	and	al, dl
0x4d88:	je	0x4b38


0x4d8e:	mov	rbp, r11
0x4d91:	mov	dword ptr [rsp + 8], 2
0x4d99:	jmp	0x5499


0x5198:	cmp	byte ptr [rsp + 0xf], 0
0x519d:	jne	0x59c0


0x4be0:	cmp	eax, 5
0x4be3:	je	0x5158


0x51a3:	xor	r12d, r12d
0x51a6:	xor	eax, eax
0x51a8:	mov	ebx, 0x3f
0x51ad:	jmp	0x4b69


0x59c0:	mov	rbp, r11
0x59c3:	movzx	eax, byte ptr [rsp + 0xf]
0x59c8:	jmp	0x5499


0x5158:	test	byte ptr [rsp + 0x78], 4
0x515d:	je	0x5180


0x4be9:	cmp	eax, 2
0x4bec:	mov	ebx, 0x3f
0x4bf1:	sete	dl
0x4bf4:	xor	r12d, r12d
0x4bf7:	xor	eax, eax
0x4bf9:	jmp	0x4b38


0x5180:	xor	edx, edx
0x5182:	xor	r12d, r12d
0x5185:	xor	eax, eax
0x5187:	mov	ebx, 0x3f
0x518c:	jmp	0x4b38


0x515f:	lea	rcx, [rbp + 2]
0x5163:	cmp	rcx, r11
0x5166:	jae	0x5180


0x5168:	mov	rax, qword ptr [rsp + 0x10]
0x516d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x5172:	je	0x5902


0x5902:	movzx	ebx, byte ptr [rax + rcx]
0x5906:	cmp	bl, 0x3e
0x5909:	ja	0x5180


0x590f:	movabs	rax, 0x7000a38200000000
0x5919:	bt	rax, rbx
0x591d:	jae	0x5180


0x5923:	cmp	byte ptr [rsp + 0xf], 0
0x5928:	jne	0x5b12


0x592e:	cmp	r13, r15
0x5931:	jbe	0x5938


0x5b12:	mov	rbp, r11
0x5b15:	jmp	0x54b0


0x5938:	lea	rax, [r15 + 1]
0x593c:	cmp	r13, rax
0x593f:	jbe	0x5947


0x5933:	mov	byte ptr [r14 + r15], 0x3f
0x5938:	lea	rax, [r15 + 1]
0x593c:	cmp	r13, rax
0x593f:	jbe	0x5947


0x5947:	lea	rax, [r15 + 2]
0x594b:	cmp	r13, rax
0x594e:	jbe	0x5956


0x5941:	mov	byte ptr [r14 + r15 + 1], 0x22
0x5947:	lea	rax, [r15 + 2]
0x594b:	cmp	r13, rax
0x594e:	jbe	0x5956


0x5956:	lea	rax, [r15 + 3]
0x595a:	cmp	r13, rax
0x595d:	jbe	0x5965


0x5950:	mov	byte ptr [r14 + r15 + 2], 0x22
0x5956:	lea	rax, [r15 + 3]
0x595a:	cmp	r13, rax
0x595d:	jbe	0x5965


0x5965:	add	r15, 4
0x5969:	xor	edx, edx
0x596b:	xor	r12d, r12d
0x596e:	xor	eax, eax
0x5970:	mov	rbp, rcx
0x5973:	jmp	0x4b38


0x595f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x5965:	add	r15, 4
0x5969:	xor	edx, edx
0x596b:	xor	r12d, r12d
0x596e:	xor	eax, eax
0x5970:	mov	rbp, rcx
0x5973:	jmp	0x4b38


0x5110:	cmp	byte ptr [rsp + 0xf], 0
0x5115:	jne	0x59c0


0x4c0e:	mov	byte ptr [rsp + 0x7c], r12b
0x4c13:	xor	edx, edx
0x4c15:	xor	eax, eax
0x4c17:	mov	ebx, 0x27
0x4c1c:	jmp	0x4b38


0x511b:	test	r13, r13
0x511e:	je	0x5520


0x5520:	cmp	r13, r15
0x5523:	jbe	0x552a


0x5124:	xor	edx, edx
0x5126:	cmp	qword ptr [rsp + 0x50], 0
0x512c:	jne	0x5520


0x552a:	lea	rax, [r15 + 1]
0x552e:	cmp	r13, rax
0x5531:	jbe	0x5539


0x5525:	mov	byte ptr [r14 + r15], 0x27
0x552a:	lea	rax, [r15 + 1]
0x552e:	cmp	r13, rax
0x5531:	jbe	0x5539


0x5132:	mov	qword ptr [rsp + 0x50], r13
0x5137:	add	r15, 3
0x513b:	xor	eax, eax
0x513d:	mov	byte ptr [rsp + 0x7c], r12b
0x5142:	xor	r8d, r8d
0x5145:	mov	r13, rdx
0x5148:	mov	ebx, 0x27
0x514d:	jmp	0x4b69


0x5539:	lea	rax, [r15 + 2]
0x553d:	cmp	r13, rax
0x5540:	jbe	0x5b32


0x5533:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x5539:	lea	rax, [r15 + 2]
0x553d:	cmp	r13, rax
0x5540:	jbe	0x5b32


0x5b32:	mov	rdx, r13
0x5b35:	mov	r13, qword ptr [rsp + 0x50]
0x5b3a:	jmp	0x5132


0x5546:	mov	rdx, r13
0x5549:	mov	byte ptr [r14 + r15 + 2], 0x27
0x554f:	mov	r13, qword ptr [rsp + 0x50]
0x5554:	jmp	0x5132


0x4c44:	cmp	byte ptr [rsp + 0xd], 0
0x4c49:	jne	0x4cb0


0x4c4b:	mov	ebx, edx
0x4c4d:	xor	r12d, r12d
0x4c50:	xor	eax, eax
0x4c52:	cmp	byte ptr [rsp + 0xf], 0
0x4c57:	jne	0x4b4b


0x4cb0:	xor	r12d, r12d
0x4cb3:	cmp	dword ptr [rsp + 8], 2
0x4cb8:	sete	dl
0x4cbb:	cmp	byte ptr [rsp + 0xf], 0
0x4cc0:	mov	eax, edx
0x4cc2:	jne	0x5518


0x5050:	cmp	byte ptr [rsp + 0xf], 0
0x5055:	jne	0x59c0


0x4c83:	cmp	byte ptr [rsp + 0xd], 0
0x4c88:	je	0x4ea0


0x505b:	add	rbp, 1
0x505f:	mov	eax, r8d
0x5062:	xor	r12d, r12d
0x5065:	mov	ebx, 0x5c
0x506a:	jmp	0x4b7c


0x4ea0:	mov	edx, 0x5c
0x4ea5:	mov	ebx, 0x5c
0x4eaa:	jmp	0x4c44


0x4c8e:	cmp	byte ptr [rsp + 0xf], 0
0x4c93:	je	0x4ea0


0x4c99:	cmp	qword ptr [rsp + 0x18], 0
0x4c9f:	jne	0x505b


0x4ca5:	mov	ebx, 0x5c
0x4caa:	nop	word ptr [rax + rax]
0x4cb0:	xor	r12d, r12d
0x4cb3:	cmp	dword ptr [rsp + 8], 2
0x4cb8:	sete	dl
0x4cbb:	cmp	byte ptr [rsp + 0xf], 0
0x4cc0:	mov	eax, edx
0x4cc2:	jne	0x5518


0x4d2b:	xor	edx, edx
0x4d2d:	test	byte ptr [rsp + 0x78], 1
0x4d32:	je	0x4c4b


0x4ef3:	cmp	dword ptr [rsp + 8], 2
0x4ef8:	sete	dl
0x4efb:	cmp	byte ptr [rsp + 0xf], 0
0x4f00:	jne	0x5a9a


0x4d38:	add	rbp, 1
0x4d3c:	jmp	0x49f8


0x4f06:	mov	eax, r8d
0x4f09:	mov	rcx, r15
0x4f0c:	xor	eax, 1
0x4f0f:	and	al, dl
0x4f11:	je	0x4f40


0x5a9a:	movzx	ebx, byte ptr [rsp + 0xf]
0x5a9f:	mov	rbp, r11
0x5aa2:	mov	eax, edx
0x5aa4:	mov	byte ptr [rsp + 0xd], bl
0x5aa8:	jmp	0x5499


0x4f40:	cmp	r13, rcx
0x4f43:	jbe	0x4f4a


0x4f13:	cmp	r13, r15
0x4f16:	jbe	0x4f1d


0x4f4a:	cmp	dword ptr [rsp + 8], 2
0x4f4f:	lea	r15, [rcx + 1]
0x4f53:	je	0x5559


0x4f45:	mov	byte ptr [r14 + rcx], 0x5c
0x4f4a:	cmp	dword ptr [rsp + 8], 2
0x4f4f:	lea	r15, [rcx + 1]
0x4f53:	je	0x5559


0x4f1d:	lea	rcx, [r15 + 1]
0x4f21:	cmp	r13, rcx
0x4f24:	jbe	0x4f2c


0x4f18:	mov	byte ptr [r14 + r15], 0x27
0x4f1d:	lea	rcx, [r15 + 1]
0x4f21:	cmp	r13, rcx
0x4f24:	jbe	0x4f2c


0x5559:	mov	eax, r12d
0x555c:	mov	ebx, 0x30
0x5561:	xor	r12d, r12d
0x5564:	jmp	0x4b69


0x4f59:	lea	rax, [rbp + 1]
0x4f5d:	cmp	rax, r11
0x4f60:	jae	0x4f7b


0x4f2c:	lea	rcx, [r15 + 2]
0x4f30:	cmp	r13, rcx
0x4f33:	ja	0x5569


0x4f26:	mov	byte ptr [r14 + r15 + 1], 0x24
0x4f2c:	lea	rcx, [r15 + 2]
0x4f30:	cmp	r13, rcx
0x4f33:	ja	0x5569


0x4f62:	mov	rax, qword ptr [rsp + 0x10]
0x4f67:	movzx	eax, byte ptr [rax + rbp + 1]
0x4f6c:	mov	byte ptr [rsp + 0x28], al
0x4f70:	sub	eax, 0x30
0x4f73:	cmp	al, 9
0x4f75:	jbe	0x57a9


0x4f7b:	mov	eax, r12d
0x4f7e:	mov	ebx, 0x30
0x4f83:	xor	r12d, r12d
0x4f86:	jmp	0x4b38


0x4f39:	lea	rcx, [r15 + 3]
0x4f3d:	mov	r8d, eax
0x4f40:	cmp	r13, rcx
0x4f43:	jbe	0x4f4a


0x5569:	mov	byte ptr [r14 + r15 + 2], 0x27
0x556f:	jmp	0x4f39


0x57a9:	cmp	r13, r15
0x57ac:	jbe	0x57b3


0x57b3:	lea	rax, [rcx + 2]
0x57b7:	cmp	r13, rax
0x57ba:	jbe	0x57c2


0x57ae:	mov	byte ptr [r14 + r15], 0x30
0x57b3:	lea	rax, [rcx + 2]
0x57b7:	cmp	r13, rax
0x57ba:	jbe	0x57c2


0x57c2:	mov	eax, r12d
0x57c5:	lea	r15, [rcx + 3]
0x57c9:	xor	r12d, r12d
0x57cc:	mov	ebx, 0x30
0x57d1:	jmp	0x4b38


0x57bc:	mov	byte ptr [r14 + rcx + 2], 0x30
0x57c2:	mov	eax, r12d
0x57c5:	lea	r15, [rcx + 3]
0x57c9:	xor	r12d, r12d
0x57cc:	mov	ebx, 0x30
0x57d1:	jmp	0x4b38


0x4c32:	cmp	dword ptr [rsp + 8], 2
0x4c37:	sete	al
0x4c3a:	and	al, byte ptr [rsp + 0xf]
0x4c3e:	jne	0x4d8e


0x4ff0:	mov	edx, 0xd
0x4ff5:	xor	r10d, r10d
0x4ff8:	mov	ebx, 0x72
0x4ffd:	jmp	0x4c32


0x5574:	test	ebx, ebx
0x5576:	jne	0x49a3


0x557c:	mov	byte ptr [rsp + 0xd], 1
0x5581:	test	r13, r13
0x5584:	jne	0x5b1a


0x558a:	lea	rax, [rip + 0x10b0d]
0x5591:	mov	qword ptr [rsp + 0x50], 0
0x559a:	mov	byte ptr [rsp + 0xe], 1
0x559f:	mov	byte ptr [rsp + 0x7c], 0
0x55a4:	xor	r12d, r12d
0x55a7:	mov	byte ptr [rsp + 0xf], 0
0x55ac:	mov	qword ptr [rsp + 0x18], 1
0x55b5:	mov	qword ptr [rsp + 0x48], rax
0x55ba:	mov	r15d, 1
0x55c0:	mov	dword ptr [rsp + 8], 2
0x55c8:	jmp	0x49e3


0x5b1a:	mov	byte ptr [rsp + 0xe], 1
0x5b1f:	xor	eax, eax
0x5b21:	xor	r12d, r12d
0x5b24:	mov	qword ptr [rsp + 0x50], 0
0x5b2d:	jmp	0x50d4


0x50d4:	lea	rbx, [rip + 0x10fc3]
0x50db:	mov	byte ptr [r14], 0x27
0x50df:	mov	dword ptr [rsp + 8], 2
0x50e7:	mov	r15d, 1
0x50ed:	mov	qword ptr [rsp + 0x18], 1
0x50f6:	mov	byte ptr [rsp + 0xf], 0
0x50fb:	mov	qword ptr [rsp + 0x48], rbx
0x5100:	mov	byte ptr [rsp + 0x7c], al
0x5104:	jmp	0x49e3


0x55d8:	test	r13, r13
0x55db:	je	0x5806


0x59cd:	lea	rax, [rip + 0x10877]
0x59d4:	mov	byte ptr [rsp + 0xe], 1
0x59d9:	mov	byte ptr [rsp + 0x7c], 0
0x59de:	xor	r12d, r12d
0x59e1:	mov	qword ptr [rsp + 0x50], 0
0x59ea:	mov	byte ptr [rsp + 0xf], 1
0x59ef:	mov	byte ptr [rsp + 0xd], 1
0x59f4:	mov	qword ptr [rsp + 0x18], 1
0x59fd:	xor	r15d, r15d
0x5a00:	mov	qword ptr [rsp + 0x48], rax
0x5a05:	jmp	0x49e3


0x5806:	mov	qword ptr [rsp + 0x50], 0
0x580f:	mov	byte ptr [rsp + 0xe], 1
0x5814:	xor	r12d, r12d
0x5817:	mov	byte ptr [rsp + 0x7c], 0
0x581c:	jmp	0x55fb


0x55e1:	mov	byte ptr [r14], 0x22
0x55e5:	mov	byte ptr [rsp + 0xe], 1
0x55ea:	xor	r12d, r12d
0x55ed:	mov	byte ptr [rsp + 0x7c], 0
0x55f2:	mov	qword ptr [rsp + 0x50], 0
0x55fb:	lea	rax, [rip + 0x10c49]
0x5602:	mov	byte ptr [rsp + 0xf], 0
0x5607:	mov	byte ptr [rsp + 0xd], 1
0x560c:	mov	qword ptr [rsp + 0x18], 1
0x5615:	mov	r15d, 1
0x561b:	mov	qword ptr [rsp + 0x48], rax
0x5620:	jmp	0x49e3


0x55fb:	lea	rax, [rip + 0x10c49]
0x5602:	mov	byte ptr [rsp + 0xf], 0
0x5607:	mov	byte ptr [rsp + 0xd], 1
0x560c:	mov	qword ptr [rsp + 0x18], 1
0x5615:	mov	r15d, 1
0x561b:	mov	qword ptr [rsp + 0x48], rax
0x5620:	jmp	0x49e3


0x5625:	lea	rax, [rip + 0x10c1f]
0x562c:	mov	byte ptr [rsp + 0xe], 1
0x5631:	mov	byte ptr [rsp + 0x7c], 0
0x5636:	xor	r12d, r12d
0x5639:	mov	qword ptr [rsp + 0x50], 0
0x5642:	mov	byte ptr [rsp + 0xf], 1
0x5647:	mov	byte ptr [rsp + 0xd], 1
0x564c:	mov	qword ptr [rsp + 0x18], 1
0x5655:	xor	r15d, r15d
0x5658:	mov	qword ptr [rsp + 0x48], rax
0x565d:	mov	dword ptr [rsp + 8], 5
0x5665:	jmp	0x49e3


0x566a:	mov	byte ptr [rsp + 0xe], 1
0x566f:	mov	byte ptr [rsp + 0x7c], 0
0x5674:	xor	r12d, r12d
0x5677:	mov	qword ptr [rsp + 0x50], 0
0x5680:	mov	byte ptr [rsp + 0xf], 0
0x5685:	xor	r15d, r15d
0x5688:	mov	byte ptr [rsp + 0xd], 1
0x568d:	mov	qword ptr [rsp + 0x18], 0
0x5696:	mov	qword ptr [rsp + 0x48], 0
0x569f:	jmp	0x49e3


0x56a4:	cmp	dword ptr [rsp + 8], 0xa
0x56a9:	je	0x5701


0x5701:	xor	r15d, r15d
0x5704:	test	ebx, ebx
0x5706:	je	0x58cd


0x56ab:	lea	rsi, [rip + 0x10b9b]
0x56b2:	xor	edi, edi
0x56b4:	mov	edx, 5
0x56b9:	call	0x1a90


0x58cd:	mov	rdx, qword ptr [rsp + 0x68]
0x58d2:	movzx	eax, byte ptr [rdx]
0x58d5:	test	al, al
0x58d7:	je	0x570c


0x570c:	test	ebx, ebx
0x570e:	mov	rbx, qword ptr [rsp + 0x60]
0x5713:	setne	byte ptr [rsp + 0xf]
0x5718:	xor	r12d, r12d
0x571b:	mov	rdi, rbx
0x571e:	call	0x1ab0


0x58e9:	add	r15, 1
0x58ed:	movzx	eax, byte ptr [rdx + r15]
0x58f2:	test	al, al
0x58f4:	jne	0x58e0


0x58e5:	mov	byte ptr [r14 + r15], al
0x58e9:	add	r15, 1
0x58ed:	movzx	eax, byte ptr [rdx + r15]
0x58f2:	test	al, al
0x58f4:	jne	0x58e0


0x58f6:	jmp	0x570c


0x58e0:	cmp	r13, r15
0x58e3:	jbe	0x58e9


0x5723:	mov	qword ptr [rsp + 0x48], rbx
0x5728:	mov	qword ptr [rsp + 0x18], rax
0x572d:	mov	byte ptr [rsp + 0xe], 1
0x5732:	mov	byte ptr [rsp + 0x7c], 0
0x5737:	mov	qword ptr [rsp + 0x50], 0
0x5740:	mov	byte ptr [rsp + 0xd], 1
0x5745:	jmp	0x49e3


0x56be:	mov	rcx, rax
0x56c1:	mov	qword ptr [rsp + 0x68], rax
0x56c6:	lea	rax, [rip + 0x10b80]
0x56cd:	cmp	rcx, rax
0x56d0:	je	0x5a6e


0x5a6e:	mov	esi, dword ptr [rsp + 8]
0x5a72:	mov	rdi, rcx
0x5a75:	call	0x4820


0x56d6:	lea	rsi, [rip + 0x109c1]
0x56dd:	xor	edi, edi
0x56df:	mov	edx, 5
0x56e4:	call	0x1a90


0x56e9:	mov	rcx, rax
0x56ec:	mov	qword ptr [rsp + 0x60], rax
0x56f1:	lea	rax, [rip + 0x109a6]
0x56f8:	cmp	rcx, rax
0x56fb:	je	0x5a84


0x5a84:	mov	esi, dword ptr [rsp + 8]
0x5a88:	mov	rdi, rcx
0x5a8b:	call	0x4820


0x5a90:	mov	qword ptr [rsp + 0x60], rax
0x5a95:	jmp	0x5701


0x5a7a:	mov	qword ptr [rsp + 0x68], rax
0x5a7f:	jmp	0x56d6


0x574a:	mov	byte ptr [rsp + 0xe], 1
0x574f:	mov	byte ptr [rsp + 0x7c], 0
0x5754:	xor	r12d, r12d
0x5757:	mov	qword ptr [rsp + 0x50], 0
0x5760:	mov	byte ptr [rsp + 0xf], 0
0x5765:	xor	r15d, r15d
0x5768:	mov	byte ptr [rsp + 0xd], 0
0x576d:	mov	qword ptr [rsp + 0x18], 0
0x5776:	mov	qword ptr [rsp + 0x48], 0
0x577f:	jmp	0x49e3


0x5784:	mov	byte ptr [rsp + 0xe], 1
0x5789:	mov	byte ptr [rsp + 0x7c], 0
0x578e:	xor	r12d, r12d
0x5791:	mov	qword ptr [rsp + 0x50], 0
0x579a:	mov	byte ptr [rsp + 0xf], 1
0x579f:	mov	byte ptr [rsp + 0xd], 1
0x57a4:	jmp	0x49c3


0x49c3:	lea	rax, [rip + 0x116d4]
0x49ca:	mov	qword ptr [rsp + 0x18], 1
0x49d3:	xor	r15d, r15d
0x49d6:	mov	dword ptr [rsp + 8], 2
0x49de:	mov	qword ptr [rsp + 0x48], rax
0x49e3:	xor	r11d, r11d
0x49e6:	mov	rax, rbp
0x49e9:	mov	r8d, r12d
0x49ec:	mov	rbp, r11
0x49ef:	mov	r11, rax
0x49f2:	nop	word ptr [rax + rax]
0x49f8:	cmp	r11, rbp
0x49fb:	setne	r12b
0x49ff:	cmp	r11, -1
0x4a03:	jne	0x4a12


0x5978:	test	ebx, ebx
0x597a:	je	0x5b08


0x5b08:	mov	byte ptr [rsp + 0xd], 0
0x5b0d:	jmp	0x5581


0x5980:	lea	rax, [rip + 0x10717]
0x5987:	mov	byte ptr [rsp + 0xe], 1
0x598c:	mov	byte ptr [rsp + 0x7c], 0
0x5991:	xor	r12d, r12d
0x5994:	mov	qword ptr [rsp + 0x50], 0
0x599d:	mov	byte ptr [rsp + 0xf], 1
0x59a2:	mov	byte ptr [rsp + 0xd], 0
0x59a7:	mov	qword ptr [rsp + 0x18], 1
0x59b0:	xor	r15d, r15d
0x59b3:	mov	qword ptr [rsp + 0x48], rax
0x59b8:	jmp	0x49e3


0x5581:	test	r13, r13
0x5584:	jne	0x5b1a


0x5b44:	nop	
0x5b46:	nop	word ptr cs:[rax + rax]


0x5cfb:	nop	dword ptr [rax + rax]


0x5d36:	nop	word ptr cs:[rax + rax]


0x5d51:	nop	dword ptr [rax + rax]
0x5d56:	nop	word ptr cs:[rax + rax]


0x5d71:	nop	dword ptr [rax + rax]
0x5d76:	nop	word ptr cs:[rax + rax]


0x5db5:	nop	
0x5db6:	nop	word ptr cs:[rax + rax]


0x5dd5:	nop	
0x5dd6:	nop	word ptr cs:[rax + rax]


0x5e84:	nop	
0x5e86:	nop	word ptr cs:[rax + rax]


0x5f73:	nop	dword ptr [rax]
0x5f76:	nop	word ptr cs:[rax + rax]


0x5f8a:	nop	word ptr [rax + rax]


0x6023:	nop	dword ptr [rax]
0x6026:	nop	word ptr cs:[rax + rax]


0x6043:	nop	dword ptr [rax]
0x6046:	nop	word ptr cs:[rax + rax]


0x605c:	nop	dword ptr [rax]


0x6078:	nop	dword ptr [rax + rax]


0x6094:	nop	
0x6096:	nop	word ptr cs:[rax + rax]


0x612e:	nop	


0x61ba:	nop	word ptr [rax + rax]


0x61cc:	nop	dword ptr [rax]


0x61df:	nop	


0x6278:	nop	dword ptr [rax + rax]


0x62a1:	nop	dword ptr [rax + rax]
0x62a6:	nop	word ptr cs:[rax + rax]


0x62ba:	nop	word ptr [rax + rax]


0x634e:	nop	


0x63e1:	nop	dword ptr [rax + rax]
0x63e6:	nop	word ptr cs:[rax + rax]


0x63fc:	nop	dword ptr [rax]


0x6417:	nop	word ptr [rax + rax]


0x6433:	nop	dword ptr [rax]
0x6436:	nop	word ptr cs:[rax + rax]


0x644c:	nop	dword ptr [rax]


0x6464:	nop	
0x6466:	nop	word ptr cs:[rax + rax]


0x6483:	nop	dword ptr [rax]
0x6486:	nop	word ptr cs:[rax + rax]


0x64a8:	nop	dword ptr [rax + rax]


0x64e1:	nop	word ptr cs:[rax + rax]
0x64eb:	nop	dword ptr [rax + rax]


0x6794:	nop	word ptr cs:[rax + rax]
0x679e:	nop	


0x6bb7:	nop	word ptr [rax + rax]


0x6c58:	nop	dword ptr [rax + rax]


0x6d35:	nop	
0x6d36:	nop	word ptr cs:[rax + rax]


0x6dda:	nop	word ptr [rax + rax]


0x6e04:	nop	
0x6e06:	nop	word ptr cs:[rax + rax]


0x6e12:	nop	dword ptr [rax]
0x6e16:	nop	word ptr cs:[rax + rax]


0x6e56:	nop	word ptr cs:[rax + rax]


0x6e84:	nop	
0x6e86:	nop	word ptr cs:[rax + rax]


0x6f12:	nop	dword ptr [rax]
0x6f16:	nop	word ptr cs:[rax + rax]


0x6f6a:	nop	word ptr [rax + rax]


0x6f87:	nop	word ptr [rax + rax]


0x6fbe:	nop	


0x6fe8:	nop	dword ptr [rax + rax]


0x7003:	nop	word ptr cs:[rax + rax]
0x700d:	nop	dword ptr [rax]


0x7045:	nop	word ptr cs:[rax + rax]
0x704f:	nop	


0x70d3:	nop	word ptr cs:[rax + rax]
0x70dd:	nop	dword ptr [rax]


0x720f:	nop	


0x722d:	nop	dword ptr [rax]


0x745c:	nop	dword ptr [rax]


0x74c6:	nop	word ptr cs:[rax + rax]


0x753b:	nop	dword ptr [rax + rax]


0x7591:	nop	dword ptr [rax + rax]
0x7596:	nop	word ptr cs:[rax + rax]


0x763c:	nop	dword ptr [rax]


0x76a4:	nop	
0x76a6:	nop	word ptr cs:[rax + rax]


0x77dc:	nop	dword ptr [rax]


0x78cc:	nop	dword ptr [rax]


0x793e:	nop	


0x7b03:	nop	dword ptr [rax]
0x7b06:	nop	word ptr cs:[rax + rax]


0x8125:	nop	
0x8126:	nop	word ptr cs:[rax + rax]


0x827e:	nop	


0x8306:	nop	word ptr cs:[rax + rax]


0x8365:	nop	
0x8366:	nop	word ptr cs:[rax + rax]


0x8384:	nop	
0x8386:	nop	word ptr cs:[rax + rax]


0x855e:	nop	


0x85ff:	nop	


0x8875:	nop	
0x8876:	nop	word ptr cs:[rax + rax]


0x88d9:	nop	dword ptr [rax]


0x8912:	nop	dword ptr [rax]
0x8916:	nop	word ptr cs:[rax + rax]


0x8a7f:	nop	


0x8b38:	nop	dword ptr [rax + rax]


0x8b8f:	nop	


0x8be3:	nop	dword ptr [rax]
0x8be6:	nop	word ptr cs:[rax + rax]


0x8c65:	nop	
0x8c66:	nop	word ptr cs:[rax + rax]


0x8d65:	nop	
0x8d66:	nop	word ptr cs:[rax + rax]


0x8da4:	nop	
0x8da6:	nop	word ptr cs:[rax + rax]


0x8e3b:	nop	dword ptr [rax + rax]


0x8e97:	nop	word ptr [rax + rax]


0x9109:	nop	dword ptr [rax]


0x92ee:	nop	


0x959f:	nop	


0x96f9:	nop	dword ptr [rax]


0x98a8:	nop	dword ptr [rax + rax]


0x9a61:	nop	dword ptr [rax + rax]
0x9a66:	nop	word ptr cs:[rax + rax]


0x9ca7:	nop	word ptr [rax + rax]


0x9dd6:	nop	word ptr cs:[rax + rax]


0x9f32:	nop	dword ptr [rax]
0x9f36:	nop	word ptr cs:[rax + rax]


0xa1fa:	nop	word ptr [rax + rax]


0xa3fa:	nop	word ptr [rax + rax]


0xa4dc:	nop	dword ptr [rax]


0xa87e:	nop	


0xa9c1:	nop	dword ptr [rax + rax]
0xa9c6:	nop	word ptr cs:[rax + rax]


0xaab6:	nop	word ptr cs:[rax + rax]


0xac9f:	nop	


0xb43f:	nop	


0xb67b:	nop	dword ptr [rax + rax]


0xc211:	nop	dword ptr [rax + rax]
0xc216:	nop	word ptr cs:[rax + rax]


0xc2a7:	nop	word ptr [rax + rax]


0xc2ff:	nop	


0xc394:	nop	
0xc396:	nop	word ptr cs:[rax + rax]


0xc3ec:	nop	dword ptr [rax]


0xcbfd:	nop	dword ptr [rax]


0xce6a:	nop	word ptr [rax + rax]


0xd397:	nop	word ptr [rax + rax]


0xd5f4:	nop	
0xd5f6:	nop	word ptr cs:[rax + rax]


0xdd51:	nop	dword ptr [rax + rax]
0xdd56:	nop	word ptr cs:[rax + rax]


0xe64a:	nop	word ptr [rax + rax]


0xe7e6:	nop	word ptr cs:[rax + rax]


0xf0d1:	nop	dword ptr [rax + rax]
0xf0d6:	nop	word ptr cs:[rax + rax]


0xf2cc:	nop	dword ptr [rax]


0x117ed:	nop	dword ptr [rax]


0x11a39:	mov	byte ptr [rbp + 8], 0x18
0x11a3d:	jmp	0x118b4


0x11b32:	mov	byte ptr [rbp + 8], 0xa
0x11b36:	mov	eax, 1
0x11b3b:	jmp	0x118b4


0x11a89:	mov	byte ptr [rbp + 8], 0x17
0x11a8d:	jmp	0x118b4


0x11aa1:	test	r14, r14
0x11aa4:	jne	0x11e6a


0x11aaa:	mov	byte ptr [rbp + 8], 0xc
0x11aae:	mov	dword ptr [rbp], 0x10
0x11ab5:	mov	eax, 1
0x11aba:	jmp	0x118b4


0x11e6a:	cmp	byte ptr [rdx + r14 - 1], 0xa
0x11e70:	jne	0x11a5c


0x11e76:	test	r15d, 0x800
0x11e7d:	je	0x11a5c


0x11e83:	jmp	0x11aaa


0x11ae2:	mov	byte ptr [rbp + 8], 0x13
0x11ae6:	jmp	0x118b4


0x11b12:	mov	byte ptr [rbp + 8], 0x12
0x11b16:	jmp	0x118b4


0x11b40:	mov	byte ptr [rbp + 8], 0xb
0x11b44:	mov	eax, 1
0x11b49:	jmp	0x118b4


0x11b62:	mov	byte ptr [rbp + 8], 9
0x11b66:	jmp	0x118b4


0x11b82:	mov	byte ptr [rbp + 8], 8
0x11b86:	jmp	0x118b4


0x11b96:	add	r14, 1
0x11b9a:	cmp	r14, qword ptr [rbx + 0x58]
0x11b9e:	jne	0x11e9b


0x11ba4:	mov	byte ptr [rbp + 8], 0xc
0x11ba8:	mov	dword ptr [rbp], 0x20
0x11baf:	mov	eax, 1
0x11bb4:	jmp	0x118b4


0x11e9b:	lea	rdi, [rsp + 0x10]
0x11ea0:	mov	rdx, r15
0x11ea3:	mov	qword ptr [rbx + 0x48], r14
0x11ea7:	mov	rsi, rbx
0x11eaa:	call	0x117f0


0x11eaf:	movzx	eax, byte ptr [rsp + 0x18]
0x11eb4:	sub	qword ptr [rbx + 0x48], 1
0x11eb9:	lea	edx, [rax - 9]
0x11ebc:	mov	eax, 1
0x11ec1:	cmp	dl, 1
0x11ec4:	ja	0x118b4


0x11eca:	jmp	0x11ba4


0x11bb9:	test	r15d, 0x8400
0x11bc0:	mov	eax, 2
0x11bc5:	jne	0x118b4


0x11bcb:	mov	byte ptr [rbp + 8], 0xa
0x11bcf:	jmp	0x118b4


0x11bd4:	and	r15d, 0x1200
0x11bdb:	mov	eax, 2
0x11be0:	cmp	r15, 0x200
0x11be7:	jne	0x118b4


0x11bed:	jmp	0x11a89


0x11bf2:	test	r15d, 0x80000
0x11bf9:	mov	eax, 2
0x11bfe:	jne	0x118b4


0x11c04:	mov	byte ptr [rbp + 8], 0x20
0x11c08:	jmp	0x118b4


0x11c0d:	test	r15d, 0x80000
0x11c14:	mov	eax, 2
0x11c19:	jne	0x118b4


0x11c1f:	mov	byte ptr [rbp + 8], 0x22
0x11c23:	jmp	0x118b4


0x11c28:	and	r15d, 0x1200
0x11c2f:	mov	eax, 2
0x11c34:	cmp	r15, 0x200
0x11c3b:	jne	0x118b4


0x11c41:	jmp	0x11a39


0x11c46:	test	r15d, 0x80000
0x11c4d:	mov	eax, 2
0x11c52:	jne	0x118b4


0x11c58:	mov	byte ptr [rbp + 8], 0xc
0x11c5c:	mov	dword ptr [rbp], 0x100
0x11c63:	jmp	0x118b4


0x11c68:	test	r15d, 0x80000
0x11c6f:	mov	eax, 2
0x11c74:	jne	0x118b4


0x11c7a:	mov	byte ptr [rbp + 8], 0xc
0x11c7e:	mov	dword ptr [rbp], 0x40
0x11c85:	jmp	0x118b4


0x11c8a:	test	r15d, 0x80000
0x11c91:	mov	eax, 2
0x11c96:	jne	0x118b4


0x11c9c:	mov	byte ptr [rbp + 8], 0x21
0x11ca0:	jmp	0x118b4


0x11ca5:	test	r15d, 0x80000
0x11cac:	mov	eax, 2
0x11cb1:	jne	0x118b4


0x11cb7:	mov	byte ptr [rbp + 8], 0x23
0x11cbb:	jmp	0x118b4


0x11cc0:	test	r15d, 0x80000
0x11cc7:	mov	eax, 2
0x11ccc:	jne	0x118b4


0x11cd2:	mov	byte ptr [rbp + 8], 0xc
0x11cd6:	mov	dword ptr [rbp], 0x200
0x11cdd:	jmp	0x118b4


0x11ce2:	and	r15d, 0x402
0x11ce9:	mov	eax, 2
0x11cee:	cmp	r15, 2
0x11cf2:	jne	0x118b4


0x11cf8:	jmp	0x11ae2


0x11cfd:	test	r15d, 0x80000
0x11d04:	mov	eax, 2
0x11d09:	jne	0x118b4


0x11d0f:	mov	byte ptr [rbp + 8], 0xc
0x11d13:	mov	dword ptr [rbp], 9
0x11d1a:	jmp	0x118b4


0x11d1f:	test	r15d, 0x80000
0x11d26:	mov	eax, 2
0x11d2b:	jne	0x118b4


0x11d31:	mov	byte ptr [rbp + 8], 0xc
0x11d35:	mov	dword ptr [rbp], 6
0x11d3c:	jmp	0x118b4


0x11d41:	test	r15d, 0x4000
0x11d48:	mov	eax, 2
0x11d4d:	jne	0x118b4


0x11d53:	mov	edx, dword ptr [rsp + 8]
0x11d57:	mov	byte ptr [rbp + 8], 4
0x11d5b:	sub	edx, 0x31
0x11d5e:	movsxd	rdx, edx
0x11d61:	mov	qword ptr [rbp], rdx
0x11d65:	jmp	0x118b4


0x11d6a:	and	r15d, 0x402
0x11d71:	mov	eax, 2
0x11d76:	cmp	r15, 2
0x11d7a:	jne	0x118b4


0x11d80:	jmp	0x11b12


0x11d85:	test	r15d, 0x2000
0x11d8c:	mov	eax, 2
0x11d91:	jne	0x118b4


0x11d97:	jmp	0x11b62


0x11d9c:	test	r15d, 0x2000
0x11da3:	mov	eax, 2
0x11da8:	jne	0x118b4


0x11dae:	jmp	0x11b82


0x11db3:	test	r15d, 0x80000
0x11dba:	mov	eax, 2
0x11dbf:	jne	0x118b4


0x11dc5:	mov	byte ptr [rbp + 8], 0xc
0x11dc9:	mov	dword ptr [rbp], 0x80
0x11dd0:	jmp	0x118b4


0x11eed:	nop	dword ptr [rax]


0x11fa6:	nop	word ptr cs:[rax + rax]


0x12011:	mov	rbx, qword ptr [rbp + 0x30]
0x12015:	mov	r15, qword ptr [rsp + 0x20]
0x1201a:	mov	rsi, rdi
0x1201d:	mov	r13, qword ptr [rsp + 0x18]
0x12022:	mov	qword ptr [rsp], r8
0x12026:	lea	rax, [rbx + 1]
0x1202a:	mov	rdx, r15
0x1202d:	or	rdx, 0x800000
0x12034:	mov	rdi, r13
0x12037:	mov	qword ptr [rbp + 0x30], rax
0x1203b:	call	0x117f0


0x12040:	cdqe	
0x12042:	add	qword ptr [r14 + 0x48], rax
0x12046:	xor	eax, eax
0x12048:	cmp	byte ptr [r13 + 8], 9
0x1204d:	mov	rdx, r13
0x12050:	je	0x12b50


0x12b50:	cmp	rbx, 8
0x12b54:	jbe	0x12bbb


0x12056:	mov	r13, qword ptr [rsp + 0x40]
0x1205b:	mov	r8, qword ptr [rsp]
0x1205f:	mov	rcx, r15
0x12062:	mov	rsi, rbp
0x12065:	mov	rdi, r14
0x12068:	add	r8, 1
0x1206c:	mov	r9, r13
0x1206f:	call	0x13620


0x12bbb:	mov	rsi, qword ptr [rsp + 0x10]
0x12bc0:	mov	edx, 1
0x12bc5:	mov	ecx, ebx
0x12bc7:	shl	edx, cl
0x12bc9:	movsxd	rdx, edx
0x12bcc:	or	qword ptr [rsi + 0xa8], rdx
0x12bd3:	jmp	0x12b56


0x12b56:	mov	rdi, qword ptr [rsp + 0x10]
0x12b5b:	lea	r8, [rsp + 0xc0]
0x12b63:	xor	ecx, ecx
0x12b65:	mov	rdx, rax
0x12b68:	mov	byte ptr [rsp + 0xc8], 0x11
0x12b70:	lea	rsi, [rdi + 0x80]
0x12b77:	add	rdi, 0x70
0x12b7b:	call	0x98b0


0x12b80:	test	rax, rax
0x12b83:	mov	qword ptr [rsp + 0x28], rax
0x12b88:	je	0x12b18


0x12b18:	mov	rax, qword ptr [rsp + 0x40]
0x12b1d:	mov	dword ptr [rax], 0xc
0x12b23:	jmp	0x120b0


0x12b8a:	mov	qword ptr [rax + 0x28], rbx
0x12b8e:	jmp	0x1214c


0x12074:	mov	r11d, dword ptr [r13]
0x12078:	test	r11d, r11d
0x1207b:	jne	0x120b0


0x1207d:	mov	rdx, qword ptr [rsp + 0x18]
0x12082:	cmp	byte ptr [rdx + 8], 9
0x12086:	je	0x12b50


0x1208c:	test	rax, rax
0x1208f:	je	0x120a2


0x120a2:	mov	rax, qword ptr [rsp + 0x40]
0x120a7:	mov	dword ptr [rax], 8
0x120ad:	nop	dword ptr [rax]
0x120b0:	mov	qword ptr [rsp + 0x28], 0
0x120b9:	nop	dword ptr [rax]
0x120c0:	mov	rdi, qword ptr [rsp + 0x118]
0x120c8:	xor	rdi, qword ptr fs:[0x28]
0x120d1:	mov	rax, qword ptr [rsp + 0x28]
0x120d6:	jne	0x1344e


0x12091:	lea	rsi, [rip - 0x9d28]
0x12098:	xor	edx, edx
0x1209a:	mov	rdi, rax
0x1209d:	call	0x74d0


0x120ee:	test	qword ptr [rsp + 0x20], 0x1000000
0x120f7:	jne	0x1234d


0x120fd:	mov	rax, qword ptr [rsp + 0x20]
0x12102:	test	al, 0x20
0x12104:	jne	0x1234d


0x1210a:	test	al, 0x10
0x1210c:	jne	0x12f75


0x12112:	cmp	cl, 9
0x12115:	je	0x12b28


0x12f75:	mov	rbx, qword ptr [rsp + 0x18]
0x12f7a:	mov	rdx, rax
0x12f7d:	mov	rsi, r14
0x12f80:	mov	qword ptr [rsp], r8
0x12f84:	mov	r15, rax
0x12f87:	mov	rdi, rbx
0x12f8a:	call	0x117f0


0x12b28:	test	qword ptr [rsp + 0x20], 0x20000
0x12b31:	jne	0x1211b


0x1211b:	mov	rax, qword ptr [rsp + 0x10]
0x12120:	mov	r8, qword ptr [rsp + 0x18]
0x12125:	xor	ecx, ecx
0x12127:	xor	edx, edx
0x12129:	lea	rsi, [rax + 0x80]
0x12130:	lea	rdi, [rax + 0x70]
0x12134:	mov	byte ptr [r8 + 8], 1
0x12139:	call	0x98b0


0x12b37:	mov	rax, qword ptr [rsp + 0x40]
0x12b3c:	mov	qword ptr [rsp + 0x28], 0
0x12b45:	mov	dword ptr [rax], 0x10
0x12b4b:	jmp	0x120c0


0x1213e:	test	rax, rax
0x12141:	mov	qword ptr [rsp + 0x28], rax
0x12146:	je	0x12b18


0x12f8f:	cdqe	
0x12f91:	add	qword ptr [r14 + 0x48], rax
0x12f95:	mov	r9, qword ptr [rsp + 0x40]
0x12f9a:	mov	r8, qword ptr [rsp]
0x12f9e:	mov	rcx, r15
0x12fa1:	mov	rdx, rbx
0x12fa4:	mov	rsi, rbp
0x12fa7:	mov	rdi, r14
0x12faa:	call	0x11fb0


0x12faf:	mov	qword ptr [rsp + 0x28], rax
0x12fb4:	jmp	0x120c0


0x126e1:	mov	rax, qword ptr [rsp + 0x10]
0x126e6:	lea	rbx, [rax + 0x70]
0x126ea:	lea	r12, [rax + 0x80]
0x126f1:	lea	eax, [rbp - 0x100]
0x126f7:	test	eax, 0xfffffeff
0x126fc:	jne	0x12d6a


0x1267f:	mov	rax, qword ptr [rsp + 0x10]
0x12684:	movzx	eax, byte ptr [rax + 0xb0]
0x1268b:	test	al, 0x10
0x1268d:	jne	0x126e1


0x12702:	cmp	ebp, 0x100
0x12708:	mov	r15, qword ptr [rsp + 0x18]
0x1270d:	je	0x12d42


0x12d6a:	mov	r8, qword ptr [rsp + 0x18]
0x12d6f:	xor	ecx, ecx
0x12d71:	xor	edx, edx
0x12d73:	mov	rsi, r12
0x12d76:	mov	rdi, rbx
0x12d79:	call	0x98b0


0x1268f:	mov	rdi, qword ptr [rsp + 0x10]
0x12694:	or	eax, 0x10
0x12697:	test	al, 8
0x12699:	mov	byte ptr [rdi + 0xb0], al
0x1269f:	jne	0x132a3


0x12d42:	mov	dword ptr [r15], 6
0x12d49:	mov	r8, r15
0x12d4c:	xor	ecx, ecx
0x12d4e:	xor	edx, edx
0x12d50:	mov	rsi, r12
0x12d53:	mov	rdi, rbx
0x12d56:	call	0x98b0


0x12713:	mov	dword ptr [r15], 5
0x1271a:	mov	r8, r15
0x1271d:	xor	ecx, ecx
0x1271f:	xor	edx, edx
0x12721:	mov	rsi, r12
0x12724:	mov	rdi, rbx
0x12727:	call	0x98b0


0x126a5:	movabs	rdx, 0x3ff000000000000
0x126af:	test	al, 4
0x126b1:	mov	qword ptr [rdi + 0xb8], rdx
0x126b8:	movabs	rdx, 0x7fffffe87fffffe
0x126c2:	mov	qword ptr [rdi + 0xc0], rdx
0x126c9:	je	0x13228


0x132a3:	xor	ebx, ebx
0x132a5:	xor	r12d, r12d
0x132a8:	jmp	0x13233


0x13228:	mov	ebx, 0x80
0x1322d:	mov	r12d, 2
0x13233:	call	0x1dc0


0x126cf:	pxor	xmm0, xmm0
0x126d3:	mov	rax, qword ptr [rsp + 0x18]
0x126d8:	movups	xmmword ptr [rdi + 0xc8], xmm0
0x126df:	mov	ebp, dword ptr [rax]
0x126e1:	mov	rax, qword ptr [rsp + 0x10]
0x126e6:	lea	rbx, [rax + 0x70]
0x126ea:	lea	r12, [rax + 0x80]
0x126f1:	lea	eax, [rbp - 0x100]
0x126f7:	test	eax, 0xfffffeff
0x126fc:	jne	0x12d6a


0x13233:	call	0x1dc0


0x13238:	movsxd	rdx, ebx
0x1323b:	movsxd	r9, r12d
0x1323e:	mov	r8d, 1
0x13244:	add	rdx, rdx
0x13247:	add	rdx, qword ptr [rax]
0x1324a:	mov	rax, qword ptr [rsp + 0x10]
0x1324f:	lea	rdi, [rax + r9*8]
0x13253:	xor	eax, eax
0x13255:	jmp	0x13272


0x13272:	test	byte ptr [rdx + rax*2], 8
0x13276:	mov	ecx, eax
0x13278:	je	0x13260


0x13260:	lea	esi, [rbx + rax]
0x13263:	cmp	esi, 0x5f
0x13266:	je	0x1327a


0x1327a:	mov	rsi, r8
0x1327d:	shl	rsi, cl
0x13280:	or	qword ptr [rdi + 0xb8], rsi
0x13287:	jmp	0x13268


0x13268:	add	rax, 1
0x1326c:	cmp	rax, 0x40
0x13270:	je	0x13289


0x13289:	add	r9, 1
0x1328d:	add	ebx, 0x40
0x13290:	sub	rdx, -0x80
0x13294:	add	rdi, 8
0x13298:	cmp	r9d, 3
0x1329c:	jle	0x13253


0x13253:	xor	eax, eax
0x13255:	jmp	0x13272


0x1329e:	jmp	0x126e1


0x1272c:	mov	dword ptr [r15], 0xa
0x12733:	mov	rbp, rax
0x12736:	mov	r8, qword ptr [rsp + 0x18]
0x1273b:	xor	ecx, ecx
0x1273d:	xor	edx, edx
0x1273f:	mov	rsi, r12
0x12742:	mov	rdi, rbx
0x12745:	call	0x98b0


0x1274a:	lea	r8, [rsp + 0xc0]
0x12752:	mov	rdx, rbp
0x12755:	mov	rdi, rbx
0x12758:	mov	rcx, rax
0x1275b:	mov	rsi, r12
0x1275e:	mov	r13, rax
0x12761:	mov	byte ptr [rsp + 0xc8], 0xa
0x12769:	call	0x98b0


0x1276e:	test	rbp, rbp
0x12771:	mov	rdi, rax
0x12774:	mov	qword ptr [rsp + 0x28], rax
0x12779:	sete	dl
0x1277c:	test	r13, r13
0x1277f:	sete	al
0x12782:	or	dl, al
0x12784:	jne	0x12b18


0x1278a:	test	rdi, rdi
0x1278d:	je	0x12b18


0x12793:	mov	rdx, qword ptr [rsp + 0x20]
0x12798:	mov	rdi, qword ptr [rsp + 0x18]
0x1279d:	mov	rsi, r14
0x127a0:	call	0x117f0


0x127a5:	cdqe	
0x127a7:	add	qword ptr [r14 + 0x48], rax
0x127ab:	jmp	0x120c0


0x12d5b:	mov	dword ptr [r15], 9
0x12d62:	mov	rbp, rax
0x12d65:	jmp	0x12736


0x12736:	mov	r8, qword ptr [rsp + 0x18]
0x1273b:	xor	ecx, ecx
0x1273d:	xor	edx, edx
0x1273f:	mov	rsi, r12
0x12742:	mov	rdi, rbx
0x12745:	call	0x98b0


0x12d7e:	test	rax, rax
0x12d81:	mov	qword ptr [rsp + 0x28], rax
0x12d86:	jne	0x12793


0x12d8c:	jmp	0x12b18


0x127b0:	mov	esi, 1
0x127b5:	mov	edi, 0x20
0x127ba:	mov	qword ptr [rsp + 0x98], 0
0x127c6:	call	0x1bc0


0x127cb:	mov	esi, 1
0x127d0:	mov	r12, rax
0x127d3:	mov	edi, 0x50
0x127d8:	call	0x1bc0


0x127dd:	test	r12, r12
0x127e0:	mov	r13, rax
0x127e3:	sete	dl
0x127e6:	test	rax, rax
0x127e9:	sete	al
0x127ec:	or	dl, al
0x127ee:	jne	0x12fc9


0x127f4:	mov	r10, qword ptr [rsp + 0x18]
0x127f9:	mov	rdx, qword ptr [rsp + 0x20]
0x127fe:	mov	rsi, r14
0x12801:	mov	rdi, r10
0x12804:	call	0x70e0


0x12fc9:	mov	rdi, r12
0x12fcc:	call	0x19d0


0x12fd1:	mov	rdi, r13
0x12fd4:	call	0x19d0


0x12fd9:	jmp	0x12b18


0x12809:	movsxd	rbx, eax
0x1280c:	movzx	eax, byte ptr [r10 + 8]
0x12811:	cmp	al, 2
0x12813:	je	0x12fb9


0x12fb9:	mov	rax, qword ptr [rsp + 0x40]
0x12fbe:	mov	dword ptr [rax], 2
0x12fc4:	jmp	0x12c28


0x12819:	cmp	al, 0x19
0x1281b:	mov	byte ptr [rsp + 0x57], 0
0x12820:	je	0x12cea


0x12cea:	or	byte ptr [r13 + 0x20], 1
0x12cef:	test	qword ptr [rsp + 0x20], 0x100
0x12cf8:	je	0x12d02


0x12826:	cmp	al, 0x15
0x12828:	je	0x12d34


0x12d02:	add	qword ptr [r14 + 0x48], rbx
0x12d06:	mov	r11, qword ptr [rsp + 0x18]
0x12d0b:	mov	rsi, r14
0x12d0e:	mov	rdx, qword ptr [rsp + 0x20]
0x12d13:	mov	rdi, r11
0x12d16:	call	0x70e0


0x12cfa:	or	qword ptr [r12], 0x400
0x12d02:	add	qword ptr [r14 + 0x48], rbx
0x12d06:	mov	r11, qword ptr [rsp + 0x18]
0x12d0b:	mov	rsi, r14
0x12d0e:	mov	rdx, qword ptr [rsp + 0x20]
0x12d13:	mov	rdi, r11
0x12d16:	call	0x70e0


0x12d34:	mov	rax, qword ptr [rsp + 0x18]
0x12d39:	mov	byte ptr [rax + 8], 1
0x12d3d:	jmp	0x1282e


0x1282e:	lea	rax, [rsp + 0xd0]
0x12836:	mov	r15, qword ptr [rsp + 0x18]
0x1283b:	lea	rbp, [rip + 0x4752]
0x12842:	mov	qword ptr [rsp + 0x48], 0
0x1284b:	mov	r9d, 1
0x12851:	mov	qword ptr [rsp + 0x30], 0
0x1285a:	mov	qword ptr [rsp + 0x28], rax
0x1285f:	lea	rax, [rsp + 0xa0]
0x12867:	mov	qword ptr [rsp], rax
0x1286b:	lea	rax, [rsp + 0x98]
0x12873:	mov	qword ptr [rsp + 0x58], rax
0x12878:	lea	rax, [rsp + 0xc0]
0x12880:	mov	qword ptr [rsp + 0x60], rax
0x12885:	lea	rax, [rsp + 0xf0]
0x1288d:	mov	qword ptr [rsp + 0x68], rax
0x12892:	mov	rax, qword ptr [rsp + 0x28]
0x12897:	mov	r8, qword ptr [rsp + 0x20]
0x1289c:	and	r9d, 1
0x128a0:	mov	rdi, qword ptr [rsp]
0x128a4:	mov	ecx, ebx
0x128a6:	mov	rdx, r15
0x128a9:	mov	rsi, r14
0x128ac:	mov	dword ptr [rsp + 0xa0], 3
0x128b7:	mov	qword ptr [rsp + 0xa8], rax
0x128bf:	call	0x11590


0x12d1b:	mov	ebx, eax
0x12d1d:	movzx	eax, byte ptr [r11 + 8]
0x12d22:	cmp	al, 2
0x12d24:	je	0x12fb9


0x12d2a:	mov	byte ptr [rsp + 0x57], 1
0x12d2f:	jmp	0x12826


0x12918:	mov	rbx, qword ptr [rsp + 0x40]
0x1291d:	cmp	cl, 0x23
0x12920:	mov	rsi, qword ptr [rdi + 0x78]
0x12924:	sete	r8b
0x12928:	lea	rcx, [rip + 0x3e32]
0x1292f:	lea	rdx, [rip + 0x41d9]
0x12936:	movzx	r8d, r8b
0x1293a:	mov	r9, rbx
0x1293d:	mov	rdi, qword ptr [rsp + 0x10]
0x12942:	call	0xcc00


0x12947:	mov	edi, dword ptr [rbx]
0x12949:	mov	qword ptr [rsp + 0x28], rax
0x1294e:	test	edi, edi
0x12950:	je	0x1214c


0x12956:	test	rax, rax
0x12959:	jne	0x1214c


0x1295f:	jmp	0x120b0


0x1293d:	mov	rdi, qword ptr [rsp + 0x10]
0x12942:	call	0xcc00


0x1298f:	mov	rax, qword ptr [rsp + 0x18]
0x12994:	mov	rdi, qword ptr [rsp + 0x10]
0x12999:	mov	rcx, qword ptr [rax]
0x1299c:	mov	eax, 1
0x129a1:	shl	eax, cl
0x129a3:	cdqe	
0x129a5:	test	qword ptr [rdi + 0xa8], rax
0x129ac:	je	0x12fde


0x12fde:	mov	rax, qword ptr [rsp + 0x40]
0x12fe3:	mov	qword ptr [rsp + 0x28], 0
0x12fec:	mov	dword ptr [rax], 6
0x12ff2:	jmp	0x120c0


0x129b2:	mov	rbx, qword ptr [rsp + 0x10]
0x129b7:	mov	r8, qword ptr [rsp + 0x18]
0x129bc:	xor	ecx, ecx
0x129be:	xor	edx, edx
0x129c0:	or	qword ptr [rbx + 0xa0], rax
0x129c7:	lea	rsi, [rbx + 0x80]
0x129ce:	lea	rdi, [rbx + 0x70]
0x129d2:	call	0x98b0


0x129d7:	test	rax, rax
0x129da:	mov	qword ptr [rsp + 0x28], rax
0x129df:	je	0x12b18


0x129e5:	add	qword ptr [rbx + 0x98], 1
0x129ed:	or	byte ptr [rbx + 0xb0], 2
0x129f4:	jmp	0x1214c


0x129f9:	mov	rbx, qword ptr [rsp + 0x10]
0x129fe:	mov	r8, qword ptr [rsp + 0x18]
0x12a03:	xor	ecx, ecx
0x12a05:	xor	edx, edx
0x12a07:	lea	rsi, [rbx + 0x80]
0x12a0e:	lea	rdi, [rbx + 0x70]
0x12a12:	call	0x98b0


0x12a17:	test	rax, rax
0x12a1a:	mov	qword ptr [rsp + 0x28], rax
0x12a1f:	je	0x12b18


0x12a25:	cmp	dword ptr [rbx + 0xb4], 1
0x12a2c:	jle	0x1214c


0x12a32:	or	byte ptr [rbx + 0xb0], 2
0x12a39:	jmp	0x1214c


0x12a3e:	mov	rax, qword ptr [rsp + 0x10]
0x12a43:	mov	r8, qword ptr [rsp + 0x18]
0x12a48:	xor	ecx, ecx
0x12a4a:	xor	edx, edx
0x12a4c:	lea	rbx, [rax + 0x70]
0x12a50:	lea	rbp, [rax + 0x80]
0x12a57:	mov	rdi, rbx
0x12a5a:	mov	rsi, rbp
0x12a5d:	call	0x98b0


0x12a62:	test	rax, rax
0x12a65:	mov	qword ptr [rsp + 0x28], rax
0x12a6a:	je	0x12b18


0x12a70:	mov	rax, qword ptr [rsp + 0x10]
0x12a75:	lea	r12, [rsp + 0xc0]
0x12a7d:	mov	r15, qword ptr [rsp + 0x28]
0x12a82:	cmp	dword ptr [rax + 0xb4], 1
0x12a89:	jle	0x1214c


0x12a8f:	mov	rax, qword ptr [r14 + 0x48]
0x12a93:	cmp	qword ptr [r14 + 0x68], rax
0x12a97:	jle	0x12da1


0x12da1:	mov	qword ptr [rsp + 0x28], r15
0x12da6:	jmp	0x1214c


0x12a9d:	cmp	rax, qword ptr [r14 + 0x30]
0x12aa1:	je	0x12da1


0x12aa7:	mov	rdx, qword ptr [r14 + 0x10]
0x12aab:	cmp	dword ptr [rdx + rax*4], -1
0x12aaf:	jne	0x12da1


0x12ab5:	mov	r13, qword ptr [rsp + 0x18]
0x12aba:	mov	rdx, qword ptr [rsp + 0x20]
0x12abf:	mov	rsi, r14
0x12ac2:	mov	rdi, r13
0x12ac5:	call	0x117f0


0x12aca:	cdqe	
0x12acc:	add	qword ptr [r14 + 0x48], rax
0x12ad0:	mov	r8, r13
0x12ad3:	xor	ecx, ecx
0x12ad5:	xor	edx, edx
0x12ad7:	mov	rsi, rbp
0x12ada:	mov	rdi, rbx
0x12add:	call	0x98b0


0x12ae2:	mov	rdx, r15
0x12ae5:	mov	r13, rax
0x12ae8:	mov	r8, r12
0x12aeb:	mov	rcx, rax
0x12aee:	mov	rsi, rbp
0x12af1:	mov	rdi, rbx
0x12af4:	mov	byte ptr [rsp + 0xc8], 0x10
0x12afc:	call	0x98b0


0x12b01:	test	r13, r13
0x12b04:	mov	r15, rax
0x12b07:	sete	dl
0x12b0a:	test	rax, rax
0x12b0d:	sete	al
0x12b10:	or	dl, al
0x12b12:	je	0x12a8f


0x12b93:	mov	rax, qword ptr [rsp + 0x40]
0x12b98:	mov	qword ptr [rsp + 0x28], 0
0x12ba1:	mov	dword ptr [rax], 5
0x12ba7:	jmp	0x120c0


0x12bd5:	mov	rsi, qword ptr [rsp + 0xa8]
0x12bdd:	mov	rdi, r12
0x12be0:	call	0xc3a0


0x12be5:	mov	rdx, qword ptr [rsp + 0x40]
0x12bea:	test	eax, eax
0x12bec:	mov	dword ptr [rdx], eax
0x12bee:	jne	0x12c28


0x12c0d:	mov	rsi, qword ptr [rsp + 0xa8]
0x12c15:	mov	rdi, r12
0x12c18:	call	0xc3a0


0x12c1d:	mov	rdx, qword ptr [rsp + 0x40]
0x12c22:	test	eax, eax
0x12c24:	mov	dword ptr [rdx], eax
0x12c26:	je	0x12bf0


0x12c57:	mov	rdx, qword ptr [r13 + 0x28]
0x12c5b:	cmp	rdx, qword ptr [rsp + 0x30]
0x12c60:	mov	rax, qword ptr [r13]
0x12c64:	je	0x1315e


0x1315e:	mov	rdx, qword ptr [rsp + 0x30]
0x13163:	lea	rdi, [rdx + rdx + 1]
0x13168:	lea	rsi, [rdi*4]
0x13170:	mov	qword ptr [rsp + 0x30], rdi
0x13175:	mov	rdi, rax
0x13178:	call	0x1c90


0x12c6a:	lea	rcx, [rdx + 1]
0x12c6e:	mov	qword ptr [r13 + 0x28], rcx
0x12c72:	mov	ecx, dword ptr [rsp + 0xa8]
0x12c79:	mov	dword ptr [rax + rdx*4], ecx
0x12c7c:	jmp	0x12bf0


0x1317d:	test	rax, rax
0x13180:	je	0x130d3


0x13186:	mov	qword ptr [r13], rax
0x1318a:	mov	rdx, qword ptr [r13 + 0x28]
0x1318e:	jmp	0x12c6a


0x12c81:	movzx	edx, byte ptr [rsp + 0xa8]
0x12c89:	mov	esi, 1
0x12c8e:	mov	rax, rdx
0x12c91:	and	edx, 0x3f
0x12c94:	shr	rax, 3
0x12c98:	mov	ecx, edx
0x12c9a:	and	eax, 0x18
0x12c9d:	shl	rsi, cl
0x12ca0:	or	qword ptr [r12 + rax], rsi
0x12ca4:	jmp	0x12bf0


0x13483:	nop	dword ptr [rax]
0x13486:	nop	word ptr cs:[rax + rax]


0x13612:	nop	dword ptr [rax]
0x13616:	nop	word ptr cs:[rax + rax]


0x1379f:	nop	


0x13fd7:	or	byte ptr [r13 + 0xb0], 1
0x13fdf:	mov	r15, qword ptr [rdx + 8]
0x13fe3:	test	r15, r15
0x13fe6:	je	0x145f9


0x145f9:	mov	rax, qword ptr [rdx + 0x20]
0x145fd:	mov	rcx, qword ptr [rax + 0x38]
0x14601:	jmp	0x13ff4


0x13fec:	mov	rax, qword ptr [r15 + 0x18]
0x13ff0:	mov	rcx, qword ptr [rax + 0x38]
0x13ff4:	mov	rax, qword ptr [rdx + 0x10]
0x13ff8:	test	rax, rax
0x13ffb:	je	0x145ec


0x13ff4:	mov	rax, qword ptr [rdx + 0x10]
0x13ff8:	test	rax, rax
0x13ffb:	je	0x145ec


0x145ec:	mov	rax, qword ptr [rdx + 0x20]
0x145f0:	mov	r9, qword ptr [rax + 0x38]
0x145f4:	jmp	0x14009


0x14001:	mov	rax, qword ptr [rax + 0x18]
0x14005:	mov	r9, qword ptr [rax + 0x38]
0x14009:	test	rcx, rcx
0x1400c:	js	0x14871


0x14009:	test	rcx, rcx
0x1400c:	js	0x14871


0x14871:	lea	rcx, [rip + 0x27e8]
0x14878:	lea	rsi, [rip + 0x2221]
0x1487f:	lea	rdi, [rip + 0x22d5]
0x14886:	mov	edx, 0x5af
0x1488b:	call	0x1b50


0x14012:	test	r9, r9
0x14015:	js	0x14833


0x14833:	lea	rcx, [rip + 0x2826]
0x1483a:	lea	rsi, [rip + 0x225f]
0x14841:	lea	rdi, [rip + 0x231d]
0x14848:	mov	edx, 0x5b0
0x1484d:	call	0x1b50


0x1401b:	mov	rax, qword ptr [r13 + 0x28]
0x1401f:	lea	rdi, [rdi + rdi*2]
0x14023:	mov	qword ptr [rsp + 0x38], rsi
0x14028:	mov	qword ptr [rsp + 0x30], r9
0x1402d:	mov	qword ptr [rsp + 0x18], rcx
0x14032:	mov	qword ptr [rsp + 0x10], rdx
0x14037:	lea	r10, [rax + rdi*8]
0x1403b:	mov	edi, 0x10
0x14040:	mov	qword ptr [r10], 2
0x14047:	mov	qword ptr [rsp], r10
0x1404b:	call	0x1c20


0x14050:	mov	r10, qword ptr [rsp]
0x14054:	test	rax, rax
0x14057:	mov	rdx, qword ptr [rsp + 0x10]
0x1405c:	mov	rcx, qword ptr [rsp + 0x18]
0x14061:	mov	r9, qword ptr [rsp + 0x30]
0x14066:	mov	rsi, qword ptr [rsp + 0x38]
0x1406b:	mov	qword ptr [r10 + 0x10], rax
0x1406f:	je	0x1430a


0x14075:	cmp	rcx, r9
0x14078:	je	0x1464d


0x1464d:	mov	qword ptr [r10 + 8], 1
0x14655:	mov	qword ptr [rax], rcx
0x14658:	jmp	0x13f55


0x1407e:	mov	qword ptr [r10 + 8], 2
0x14086:	jl	0x14634


0x13f55:	xor	edi, edi
0x13f57:	test	r15, r15
0x13f5a:	je	0x13f6b


0x14634:	mov	qword ptr [rax], rcx
0x14637:	mov	qword ptr [rax + 8], r9
0x1463b:	jmp	0x13f55


0x1408c:	mov	qword ptr [rax], r9
0x1408f:	mov	qword ptr [rax + 8], rcx
0x14093:	jmp	0x13f55


0x14098:	mov	rax, qword ptr [rdx + 0x20]
0x1409c:	lea	rcx, [rdi + rdi*2]
0x140a0:	mov	edi, 8
0x140a5:	mov	qword ptr [rsp + 0x10], rsi
0x140aa:	mov	qword ptr [rsp], rdx
0x140ae:	mov	r14, qword ptr [rax + 0x38]
0x140b2:	mov	rax, qword ptr [r13 + 0x28]
0x140b6:	lea	r15, [rax + rcx*8]
0x140ba:	mov	qword ptr [r15], 1
0x140c1:	mov	qword ptr [r15 + 8], 1
0x140c9:	call	0x1c20


0x140ce:	test	rax, rax
0x140d1:	mov	qword ptr [r15 + 0x10], rax
0x140d5:	mov	rdx, qword ptr [rsp]
0x140d9:	mov	rsi, qword ptr [rsp + 0x10]
0x140de:	je	0x14788


0x14788:	mov	qword ptr [r15 + 8], 0
0x14790:	mov	qword ptr [r15], 0
0x14797:	jmp	0x1430a


0x140e4:	mov	qword ptr [rax], r14
0x140e7:	mov	r15, qword ptr [rdx + 8]
0x140eb:	jmp	0x13f55


0x140f0:	cmp	qword ptr [rdx + 0x20], 0
0x140f5:	je	0x13f51


0x13f51:	mov	r15, qword ptr [rdx + 8]
0x13f55:	xor	edi, edi
0x13f57:	test	r15, r15
0x13f5a:	je	0x13f6b


0x140fb:	lea	rcx, [rip + 0x2f5e]
0x14102:	lea	rsi, [rip + 0x2997]
0x14109:	lea	rdi, [rip + 0x2a38]
0x14110:	mov	edx, 0x59f
0x14115:	call	0x1b50


0x1413a:	mov	rax, qword ptr [r13 + 0x28]
0x1413e:	lea	rcx, [rdi + rdi*2]
0x14142:	mov	edi, 8
0x14147:	mov	qword ptr [rsp + 0x18], rsi
0x1414c:	mov	qword ptr [rsp + 0x10], rdx
0x14151:	lea	rcx, [rax + rcx*8]
0x14155:	mov	qword ptr [rcx], 1
0x1415c:	mov	qword ptr [rcx + 8], 1
0x14164:	mov	qword ptr [rsp], rcx
0x14168:	call	0x1c20


0x1416d:	mov	rcx, qword ptr [rsp]
0x14171:	test	rax, rax
0x14174:	mov	rdx, qword ptr [rsp + 0x10]
0x14179:	mov	rsi, qword ptr [rsp + 0x18]
0x1417e:	mov	qword ptr [rcx + 0x10], rax
0x14182:	je	0x147d0


0x147d0:	mov	qword ptr [rcx + 8], 0
0x147d8:	mov	qword ptr [rcx], 0
0x147df:	mov	eax, 0xc
0x147e4:	jmp	0x13ac0


0x14188:	mov	qword ptr [rax], r15
0x1418b:	mov	r15, qword ptr [rdx + 8]
0x1418f:	jmp	0x13f55


0x146d9:	mov	r8d, eax
0x146dc:	add	rdx, 1
0x146e0:	add	rcx, 0x10
0x146e4:	cmp	rdx, r10
0x146e7:	jne	0x1455e


0x146ed:	or	r14b, r8b
0x146f0:	je	0x147fa


0x1455e:	cmp	byte ptr [rcx + 8], 0xc
0x14562:	ja	0x1482e


0x146f6:	mov	rax, rdx
0x146f9:	shl	rax, 4
0x146fd:	add	rax, rsi
0x14700:	jmp	0x14718


0x14718:	movzx	edx, byte ptr [rsi + 8]
0x1471c:	cmp	dl, 1
0x1471f:	jne	0x14702


0x14721:	cmp	byte ptr [rsi], 0
0x14724:	jns	0x1470b


0x14702:	cmp	dl, 5
0x14705:	jne	0x1470b


0x14726:	and	byte ptr [rsi + 0xa], 0xdf
0x1472a:	jmp	0x1470b


0x1470b:	add	rsi, 0x10
0x1470f:	cmp	rax, rsi
0x14712:	je	0x147f7


0x14707:	mov	byte ptr [rsi + 8], 7
0x1470b:	add	rsi, 0x10
0x1470f:	cmp	rax, rsi
0x14712:	je	0x147f7


0x147f7:	mov	r14d, r8d
0x147fa:	cmp	qword ptr [rbx + 0x98], 0
0x14802:	movzx	edx, byte ptr [rbx + 0xb0]
0x14809:	mov	dword ptr [rbx + 0xb4], 1
0x14813:	setg	al
0x14816:	and	edx, 0xfffffff9
0x14819:	or	eax, r14d
0x1481c:	and	eax, 1
0x1481f:	add	eax, eax
0x14821:	or	eax, edx
0x14823:	mov	byte ptr [rbx + 0xb0], al
0x14829:	jmp	0x1434e


0x146dc:	add	rdx, 1
0x146e0:	add	rcx, 0x10
0x146e4:	cmp	rdx, r10
0x146e7:	jne	0x1455e


0x14739:	mov	edi, dword ptr [rcx]
0x1473b:	cmp	edi, 0x20
0x1473e:	je	0x146dc


0x14740:	jbe	0x147e9


0x147e9:	cmp	edi, 0x10
0x147ec:	je	0x146dc


0x14746:	cmp	edi, 0x40
0x14749:	je	0x146dc


0x147f2:	jmp	0x1434e


0x1474b:	add	edi, -0x80
0x1474e:	je	0x146dc


0x14750:	jmp	0x1434e


0x14766:	cmp	qword ptr [rdi + 0x18], 0
0x1476b:	je	0x146dc


0x14771:	jmp	0x1434e


0x14895:	nop	
0x14896:	nop	word ptr cs:[rax + rax]


0x1490f:	nop	


0x1491f:	nop	


0x149e3:	nop	dword ptr [rax]
0x149e6:	nop	word ptr cs:[rax + rax]


0x14e6f:	nop	


0x14f8b:	nop	dword ptr [rax + rax]


0x15125:	nop	
0x15126:	nop	word ptr cs:[rax + rax]


0x15174:	nop	
0x15176:	nop	word ptr cs:[rax + rax]


0x1521e:	nop	


0x15238:	nop	dword ptr [rax + rax]


0x15255:	nop	
0x15256:	nop	word ptr cs:[rax + rax]


0x1527a:	nop	word ptr [rax + rax]


0x1529c:	nop	dword ptr [rax]


0x152e1:	nop	word ptr cs:[rax + rax]
0x152eb:	nop	dword ptr [rax + rax]


0x1536d:	nop	dword ptr [rax]


0x1540c:	nop	dword ptr [rax]


0x1548b:	nop	dword ptr [rax + rax]


0x15527:	nop	word ptr [rax + rax]


0x15595:	nop	
0x15596:	nop	word ptr cs:[rax + rax]


0x155a2:	nop	word ptr cs:[rax + rax]
0x155ac:	nop	dword ptr [rax]


0x3be0:	movsxd	rsi, eax
0x3be3:	not	rsi
0x3be6:	shr	rsi, 0x3f
0x3bea:	mov	r15, rsi
0x3bed:	jmp	0x3b25


0x3bf8:	xor	r15d, r15d
0x3bfb:	test	eax, eax
0x3bfd:	setne	r15b
0x3c01:	jmp	0x3b25


0x3c10:	xor	r15d, r15d
0x3c13:	test	eax, eax
0x3c15:	sete	r15b
0x3c19:	jmp	0x3b25


0x3c20:	xor	r15d, r15d
0x3c23:	test	eax, eax
0x3c25:	setle	r15b
0x3c29:	jmp	0x3b25


0x3c40:	xor	r15d, r15d
0x3c43:	test	eax, eax
0x3c45:	setg	r15b
0x3c49:	jmp	0x3b25


0x4bd0:	xor	r10d, r10d
0x4bd3:	mov	eax, dword ptr [rsp + 8]
0x4bd7:	cmp	eax, 2
0x4bda:	je	0x5198


0x4c00:	xor	r10d, r10d
0x4c03:	cmp	dword ptr [rsp + 8], 2
0x4c08:	je	0x5110


0x4c28:	mov	edx, 9
0x4c2d:	mov	ebx, 0x74
0x4c32:	cmp	dword ptr [rsp + 8], 2
0x4c37:	sete	al
0x4c3a:	and	al, byte ptr [rsp + 0xf]
0x4c3e:	jne	0x4d8e


0x4c68:	mov	edx, 8
0x4c6d:	mov	ebx, 0x62
0x4c72:	jmp	0x4c44


0x4c78:	cmp	dword ptr [rsp + 8], 2
0x4c7d:	je	0x5050


0x4d20:	cmp	byte ptr [rsp + 0xd], 0
0x4d25:	jne	0x4ef3


0x4d48:	cmp	dword ptr [rsp + 8], 2
0x4d4d:	sete	dl
0x4d50:	xor	eax, eax
0x4d52:	jmp	0x4b38


0x4d60:	mov	edx, 7
0x4d65:	mov	ebx, 0x61
0x4d6a:	jmp	0x4c44


0x4d70:	cmp	dword ptr [rsp + 8], 2
0x4d75:	sete	dl
0x4d78:	test	rbp, rbp
0x4d7b:	jne	0x4b2c


0x4da0:	cmp	dword ptr [rsp + 8], 2
0x4da5:	sete	dl
0x4da8:	xor	r12d, r12d
0x4dab:	jmp	0x4d81


0x4db0:	cmp	dword ptr [rsp + 8], 2
0x4db5:	mov	ebx, 0x20
0x4dba:	sete	dl
0x4dbd:	jmp	0x4d81


0x4dc0:	mov	edx, 0xd
0x4dc5:	mov	ebx, 0x72
0x4dca:	jmp	0x4c32


0x4dd0:	mov	edx, 0xc
0x4dd5:	mov	ebx, 0x66
0x4dda:	jmp	0x4c44


0x4de0:	mov	edx, 0xb
0x4de5:	mov	ebx, 0x76
0x4dea:	jmp	0x4c44


0x4df0:	mov	edx, 0xa
0x4df5:	mov	ebx, 0x6e
0x4dfa:	jmp	0x4c32


0x4e90:	xor	r10d, r10d
0x4e93:	cmp	byte ptr [rsp + 0xd], 0
0x4e98:	jne	0x4c8e


0x4eb0:	mov	edx, 0xc
0x4eb5:	xor	r10d, r10d
0x4eb8:	mov	ebx, 0x66
0x4ebd:	jmp	0x4c44


0x4ec8:	mov	edx, 0xa
0x4ecd:	xor	r10d, r10d
0x4ed0:	mov	ebx, 0x6e
0x4ed5:	jmp	0x4c32


0x4ee0:	mov	ebx, 0x61
0x4ee5:	jmp	0x4cb0


0x4ef0:	xor	r10d, r10d
0x4ef3:	cmp	dword ptr [rsp + 8], 2
0x4ef8:	sete	dl
0x4efb:	cmp	byte ptr [rsp + 0xf], 0
0x4f00:	jne	0x5a9a


0x4f90:	cmp	dword ptr [rsp + 8], 2
0x4f95:	mov	r12d, r10d
0x4f98:	sete	dl
0x4f9b:	xor	r10d, r10d
0x4f9e:	xor	eax, eax
0x4fa0:	jmp	0x4b38


0x4fa8:	cmp	dword ptr [rsp + 8], 2
0x4fad:	sete	dl
0x4fb0:	xor	r10d, r10d
0x4fb3:	jmp	0x4d78


0x4fc0:	cmp	dword ptr [rsp + 8], 2
0x4fc5:	sete	dl
0x4fc8:	xor	r10d, r10d
0x4fcb:	xor	r12d, r12d
0x4fce:	jmp	0x4d81


0x4fd8:	cmp	dword ptr [rsp + 8], 2
0x4fdd:	mov	r12d, r10d
0x4fe0:	mov	ebx, 0x20
0x4fe5:	sete	dl
0x4fe8:	xor	r10d, r10d
0x4feb:	jmp	0x4d81


0x5008:	mov	ebx, 0x76
0x500d:	jmp	0x4cb0


0x5018:	mov	edx, 9
0x501d:	xor	r10d, r10d
0x5020:	mov	ebx, 0x74
0x5025:	jmp	0x4c32


0x5030:	mov	ebx, 0x62
0x5035:	jmp	0x4cb0


0x55d0:	test	ebx, ebx
0x55d2:	jne	0x59cd


0x11a20:	and	r15d, 0x1200
0x11a27:	mov	eax, 1
0x11a2c:	cmp	r15, 0x1200
0x11a33:	jne	0x118b4


0x11a48:	and	r15d, 0x8400
0x11a4f:	cmp	r15, 0x8000
0x11a56:	je	0x11b32


0x11a70:	and	r15d, 0x1200
0x11a77:	mov	eax, 1
0x11a7c:	cmp	r15, 0x1200
0x11a83:	jne	0x118b4


0x11a98:	test	r15d, 0x800008
0x11a9f:	jne	0x11aaa


0x11ac0:	mov	byte ptr [rbp + 8], 0x14
0x11ac4:	mov	eax, 1
0x11ac9:	jmp	0x118b4


0x11ad0:	test	r15d, 0x402
0x11ad7:	mov	eax, 1
0x11adc:	jne	0x118b4


0x11af0:	mov	byte ptr [rbp + 8], 5
0x11af4:	mov	eax, 1
0x11af9:	jmp	0x118b4


0x11b00:	test	r15d, 0x402
0x11b07:	mov	eax, 1
0x11b0c:	jne	0x118b4


0x11b20:	test	r15d, 0x800
0x11b27:	mov	eax, 1
0x11b2c:	je	0x118b4


0x11b50:	test	r15d, 0x2000
0x11b57:	mov	eax, 1
0x11b5c:	je	0x118b4


0x11b70:	test	r15d, 0x2000
0x11b77:	mov	eax, 1
0x11b7c:	je	0x118b4


0x11b90:	test	r15b, 8
0x11b94:	jne	0x11ba4


0x12670:	mov	rax, qword ptr [rsp + 0x18]
0x12675:	mov	ebp, dword ptr [rax]
0x12677:	test	ebp, 0x30f
0x1267d:	je	0x126e1


0x12968:	mov	rbx, qword ptr [rsp + 0x40]
0x1296d:	cmp	cl, 0x21
0x12970:	mov	rsi, qword ptr [rdi + 0x78]
0x12974:	sete	r8b
0x12978:	lea	rcx, [rip + 0x369b]
0x1297f:	lea	rdx, [rip + 0x417d]
0x12986:	movzx	r8d, r8b
0x1298a:	mov	r9, rbx
0x1298d:	jmp	0x1293d


0x14120:	mov	rax, qword ptr [rdx + 0x20]
0x14124:	mov	r15, qword ptr [rax + 0x38]
0x14128:	mov	rax, qword ptr [r13 + 0x18]
0x1412c:	mov	qword ptr [rax + rdi*8], r15
0x14130:	cmp	byte ptr [rdx + 0x30], 4
0x14134:	jne	0x13f51


0x14730:	cmp	byte ptr [rcx], 0
0x14733:	cmovs	r14d, eax
0x14737:	jmp	0x146dc


0x14758:	mov	rdi, qword ptr [rcx]
0x1475b:	cmp	qword ptr [rdi + 0x10], 0
0x14760:	jne	0x1434e


0x2026:	nop	word ptr cs:[rax + rax]


0x2077:	nop	word ptr [rax + rax]


0x20c1:	nop	dword ptr [rax]


0x21bb:	nop	dword ptr [rax + rax]


0x220b:	nop	dword ptr [rax + rax]


0x2224:	nop	dword ptr [rax]


0x2231:	nop	dword ptr [rax]


0x2279:	nop	dword ptr [rax]


0x229c:	nop	dword ptr [rax]


0x22a6:	nop	word ptr cs:[rax + rax]


0x22f4:	nop	dword ptr [rax]


0x291c:	nop	dword ptr [rax]


0x2952:	nop	word ptr [rax + rax]


0x297e:	nop	


0x29a3:	nop	dword ptr [rax + rax]


0x29da:	nop	word ptr [rax + rax]


0x2b13:	nop	dword ptr [rax + rax]


0x2b34:	nop	dword ptr [rax]


0x2b68:	nop	dword ptr [rax + rax]


0x2b78:	nop	dword ptr [rax + rax]


0x2baa:	nop	word ptr [rax + rax]


0x2d76:	nop	word ptr cs:[rax + rax]


0x2dce:	nop	


0x2e18:	nop	dword ptr [rax + rax]


0x2f1c:	nop	dword ptr [rax]


0x2f98:	nop	dword ptr [rax + rax]


0x3007:	nop	word ptr [rax + rax]


0x303c:	nop	dword ptr [rax]


0x306f:	nop	


0x31eb:	nop	dword ptr [rax + rax]


0x320f:	nop	


0x3339:	nop	dword ptr [rax]


0x338e:	nop	


0x33ab:	nop	dword ptr [rax + rax]


0x33d7:	nop	word ptr [rax + rax]


0x34bb:	nop	dword ptr [rax + rax]


0x3838:	nop	dword ptr [rax + rax]


0x387e:	nop	


0x38bc:	nop	dword ptr [rax]


0x3951:	nop	dword ptr [rax]


0x3961:	nop	dword ptr [rax]


0x3982:	nop	word ptr [rax + rax]


0x3a0c:	nop	dword ptr [rax]


0x3a81:	nop	dword ptr [rax]


0x3a91:	nop	dword ptr [rax]


0x3af2:	nop	word ptr [rax + rax]


0x3b69:	nop	dword ptr [rax]


0x3b94:	nop	dword ptr [rax]


0x3bdd:	nop	dword ptr [rax]


0x3bf2:	nop	word ptr [rax + rax]


0x3c06:	nop	word ptr cs:[rax + rax]


0x3c1e:	nop	


0x3c2e:	nop	


0x3c3f:	nop	


0x3c4e:	nop	


0x3c6b:	nop	dword ptr [rax + rax]


0x3c84:	nop	dword ptr [rax]


0x3caa:	nop	word ptr [rax + rax]


0x3dce:	nop	


0x3e83:	nop	dword ptr [rax + rax]


0x401b:	nop	dword ptr [rax + rax]


0x4097:	nop	word ptr [rax + rax]


0x41a7:	nop	word ptr [rax + rax]


0x41de:	nop	


0x41fe:	nop	


0x425b:	nop	dword ptr [rax + rax]


0x42fd:	nop	dword ptr [rax]


0x4327:	nop	word ptr [rax + rax]


0x4442:	nop	word ptr [rax + rax]


0x4461:	nop	dword ptr [rax]


0x448a:	nop	word ptr [rax + rax]


0x44ae:	nop	


0x44ba:	nop	word ptr [rax + rax]


0x45a9:	nop	dword ptr [rax]


0x45d9:	nop	dword ptr [rax]


0x46bd:	nop	dword ptr [rax]


0x46d5:	nop	dword ptr [rax]


0x46eb:	nop	dword ptr [rax + rax]


0x4709:	nop	dword ptr [rax]


0x485c:	nop	dword ptr [rax]


0x48ad:	nop	dword ptr [rax]


0x4ad8:	nop	dword ptr [rax + rax]


0x4bc7:	nop	word ptr [rax + rax]


0x4bfe:	nop	


0x4c21:	nop	dword ptr [rax]


0x4c62:	nop	word ptr [rax + rax]


0x4c74:	nop	dword ptr [rax]


0x4d18:	nop	dword ptr [rax + rax]


0x4d41:	nop	dword ptr [rax]


0x4d57:	nop	word ptr [rax + rax]


0x4d6f:	nop	


0x4d9e:	nop	


0x4dad:	nop	dword ptr [rax]


0x4dbf:	nop	


0x4dcf:	nop	


0x4ddf:	nop	


0x4def:	nop	


0x4dff:	nop	


0x4e6c:	nop	dword ptr [rax]


0x4e8c:	nop	dword ptr [rax]


0x4e9e:	nop	


0x4eaf:	nop	


0x4ec2:	nop	word ptr [rax + rax]


0x4eda:	nop	word ptr [rax + rax]


0x4eea:	nop	word ptr [rax + rax]


0x4f8b:	nop	dword ptr [rax + rax]


0x4fa5:	nop	dword ptr [rax]


0x4fb8:	nop	dword ptr [rax + rax]


0x4fd3:	nop	dword ptr [rax + rax]


0x5002:	nop	word ptr [rax + rax]


0x5012:	nop	word ptr [rax + rax]


0x502a:	nop	word ptr [rax + rax]


0x503a:	nop	word ptr [rax + rax]


0x5048:	nop	dword ptr [rax + rax]


0x506f:	nop	


0x5109:	nop	dword ptr [rax]


0x5152:	nop	word ptr [rax + rax]


0x5178:	nop	dword ptr [rax + rax]


0x5191:	nop	dword ptr [rax]


0x51b2:	nop	word ptr [rax + rax]


0x5318:	nop	dword ptr [rax + rax]


0x542b:	nop	dword ptr [rax + rax]


0x544e:	nop	


0x5515:	nop	dword ptr [rax]


0x55cd:	nop	dword ptr [rax]


0x57d6:	nop	word ptr cs:[rax + rax]


0x5869:	nop	dword ptr [rax]


0x58dd:	nop	dword ptr [rax]


0x59bd:	nop	dword ptr [rax]


0x5ccb:	nop	dword ptr [rax + rax]


0x650a:	nop	word ptr [rax + rax]


0x656d:	nop	dword ptr [rax]


0x6598:	nop	dword ptr [rax + rax]


0x65c2:	nop	word ptr [rax + rax]


0x65e4:	nop	dword ptr [rax]


0x661c:	nop	dword ptr [rax]


0x6693:	nop	dword ptr [rax + rax]


0x66a4:	nop	dword ptr [rax]


0x66b5:	nop	dword ptr [rax]


0x66c4:	nop	dword ptr [rax]


0x6705:	nop	dword ptr [rax]


0x6715:	nop	dword ptr [rax]


0x6756:	nop	word ptr cs:[rax + rax]


0x6846:	nop	word ptr cs:[rax + rax]


0x68d5:	nop	dword ptr [rax]


0x68f6:	nop	word ptr cs:[rax + rax]


0x6955:	nop	dword ptr [rax]


0x6991:	nop	dword ptr [rax]


0x69d8:	nop	dword ptr [rax + rax]


0x6a27:	nop	word ptr [rax + rax]


0x6a84:	nop	dword ptr [rax]


0x6ab2:	nop	word ptr [rax + rax]


0x6b66:	nop	word ptr cs:[rax + rax]


0x6bc9:	nop	dword ptr [rax]


0x6e42:	nop	word ptr [rax + rax]


0x6ec9:	nop	dword ptr [rax]


0x6ef4:	nop	dword ptr [rax]


0x6f4d:	nop	dword ptr [rax]


0x713e:	nop	


0x7147:	nop	word ptr [rax + rax]


0x7199:	nop	dword ptr [rax]


0x71ad:	nop	dword ptr [rax]


0x71ba:	nop	word ptr [rax + rax]


0x71ca:	nop	word ptr [rax + rax]


0x71e6:	nop	word ptr cs:[rax + rax]


0x71fa:	nop	word ptr [rax + rax]


0x7219:	nop	dword ptr [rax]


0x72b3:	nop	dword ptr [rax + rax]


0x7312:	nop	word ptr [rax + rax]


0x73ea:	nop	word ptr [rax + rax]


0x7409:	nop	dword ptr [rax]


0x7436:	nop	word ptr cs:[rax + rax]


0x749b:	nop	dword ptr [rax + rax]


0x74a6:	nop	word ptr cs:[rax + rax]


0x74bd:	nop	dword ptr [rax]


0x74df:	nop	


0x7502:	nop	word ptr [rax + rax]


0x754f:	nop	


0x756d:	nop	dword ptr [rax]


0x7613:	nop	dword ptr [rax + rax]


0x762f:	nop	


0x7671:	nop	dword ptr [rax]


0x769e:	nop	


0x76e5:	nop	dword ptr [rax]


0x771d:	nop	dword ptr [rax]


0x7766:	nop	word ptr cs:[rax + rax]


0x777a:	nop	word ptr [rax + rax]


0x7794:	nop	dword ptr [rax]


0x77ac:	nop	dword ptr [rax]


0x7827:	nop	word ptr [rax + rax]


0x786c:	nop	dword ptr [rax]


0x78f2:	nop	word ptr [rax + rax]


0x7932:	nop	word ptr [rax + rax]


0x7a2f:	nop	


0x7a3e:	nop	


0x7a4e:	nop	


0x7a7c:	nop	dword ptr [rax]


0x7a96:	nop	word ptr cs:[rax + rax]


0x7ae2:	nop	word ptr [rax + rax]


0x7b98:	nop	dword ptr [rax + rax]


0x7cd7:	nop	word ptr [rax + rax]


0x7e15:	nop	dword ptr [rax]


0x7e33:	nop	dword ptr [rax + rax]


0x7e63:	nop	dword ptr [rax + rax]


0x7e97:	nop	word ptr [rax + rax]


0x7f25:	nop	dword ptr [rax]


0x81ca:	nop	word ptr [rax + rax]


0x81f6:	nop	word ptr cs:[rax + rax]


0x8236:	nop	word ptr cs:[rax + rax]


0x8251:	nop	dword ptr [rax]


0x8266:	nop	word ptr cs:[rax + rax]


0x82bb:	nop	dword ptr [rax + rax]


0x8354:	nop	dword ptr [rax]


0x845b:	nop	dword ptr [rax + rax]


0x851c:	nop	dword ptr [rax]


0x86b2:	nop	word ptr [rax + rax]


0x873f:	nop	


0x8789:	nop	dword ptr [rax]


0x87e6:	nop	word ptr cs:[rax + rax]


0x8901:	nop	dword ptr [rax]


0x893f:	nop	


0x8b6e:	nop	


0x8b84:	nop	dword ptr [rax]


0x8b9e:	nop	


0x8bae:	nop	


0x8bd8:	nop	dword ptr [rax + rax]


0x8c14:	nop	dword ptr [rax]


0x8c37:	nop	word ptr [rax + rax]


0x8c59:	nop	dword ptr [rax]


0x8cf5:	nop	dword ptr [rax]


0x8d0d:	nop	dword ptr [rax]


0x8d21:	nop	dword ptr [rax]


0x8d3c:	nop	dword ptr [rax]


0x8dbf:	nop	


0x8e0f:	nop	


0x8e71:	nop	dword ptr [rax]


0x8e8f:	nop	


0x8efb:	nop	dword ptr [rax + rax]


0x8f85:	nop	dword ptr [rax]


0x908d:	nop	dword ptr [rax]


0x90ac:	nop	dword ptr [rax]


0x90cc:	nop	dword ptr [rax]


0x90dc:	nop	dword ptr [rax]


0x90ec:	nop	dword ptr [rax]


0x919d:	nop	dword ptr [rax]


0x9201:	nop	dword ptr [rax]


0x920b:	nop	dword ptr [rax + rax]


0x9223:	nop	dword ptr [rax + rax]


0x9231:	nop	dword ptr [rax]


0x925a:	nop	word ptr [rax + rax]


0x9281:	nop	dword ptr [rax]


0x92b9:	nop	dword ptr [rax]


0x93bc:	nop	dword ptr [rax]


0x944b:	nop	dword ptr [rax + rax]


0x94b9:	nop	dword ptr [rax]


0x9517:	nop	word ptr [rax + rax]


0x9572:	nop	word ptr [rax + rax]


0x963c:	nop	dword ptr [rax]


0x96ab:	nop	dword ptr [rax + rax]


0x978d:	nop	dword ptr [rax]


0x97c3:	nop	dword ptr [rax + rax]


0x97ca:	nop	word ptr [rax + rax]


0x97dd:	nop	dword ptr [rax]


0x980c:	nop	dword ptr [rax]


0x9836:	nop	word ptr cs:[rax + rax]


0x9867:	nop	word ptr [rax + rax]


0x9931:	nop	dword ptr [rax]


0x99f7:	nop	word ptr [rax + rax]


0x9a04:	nop	dword ptr [rax]


0x9a49:	nop	dword ptr [rax]


0x9b19:	nop	dword ptr [rax]


0x9c13:	nop	dword ptr [rax + rax]


0x9d0d:	nop	dword ptr [rax]


0x9d2b:	nop	dword ptr [rax + rax]


0x9d9f:	nop	


0x9db6:	nop	word ptr cs:[rax + rax]


0x9e4d:	nop	dword ptr [rax]


0x9e8a:	nop	word ptr [rax + rax]


0x9ebb:	nop	dword ptr [rax + rax]


0x9ee5:	nop	dword ptr [rax]


0x9f05:	nop	dword ptr [rax]


0x9f25:	nop	dword ptr [rax]


0x9fb5:	nop	dword ptr [rax]


0x9ffe:	nop	


0xa104:	nop	dword ptr [rax]


0xa169:	nop	dword ptr [rax]


0xa199:	nop	dword ptr [rax]


0xa1ac:	nop	dword ptr [rax]


0xa2e7:	nop	word ptr [rax + rax]


0xa3a1:	nop	dword ptr [rax]


0xa3b3:	nop	dword ptr [rax + rax]


0xa3cc:	nop	dword ptr [rax]


0xa3ee:	nop	


0xa447:	nop	word ptr [rax + rax]


0xa54a:	nop	word ptr [rax + rax]


0xa5c2:	nop	word ptr [rax + rax]


0xa5dc:	nop	dword ptr [rax]


0xa611:	nop	dword ptr [rax]


0xa7c6:	nop	word ptr cs:[rax + rax]


0xa8ac:	nop	dword ptr [rax]


0xa959:	nop	dword ptr [rax]


0xa9f7:	nop	word ptr [rax + rax]


0xaa29:	nop	dword ptr [rax]


0xaa3a:	nop	word ptr [rax + rax]


0xaa81:	nop	dword ptr [rax]


0xab0f:	nop	


0xab6e:	nop	


0xab7c:	nop	dword ptr [rax]


0xab83:	nop	dword ptr [rax + rax]


0xaba4:	nop	dword ptr [rax]


0xabb5:	nop	dword ptr [rax]


0xac18:	nop	dword ptr [rax + rax]


0xac7a:	nop	word ptr [rax + rax]


0xac92:	nop	word ptr [rax + rax]


0xae0c:	nop	dword ptr [rax]


0xae1d:	nop	dword ptr [rax]


0xae41:	nop	dword ptr [rax]


0xae52:	nop	word ptr [rax + rax]


0xae6e:	nop	


0xaf64:	nop	dword ptr [rax]


0xaf73:	nop	dword ptr [rax + rax]


0xafa5:	nop	dword ptr [rax]


0xb045:	nop	dword ptr [rax]


0xb054:	nop	dword ptr [rax]


0xb089:	nop	dword ptr [rax]


0xb0b2:	nop	word ptr [rax + rax]


0xb129:	nop	dword ptr [rax]


0xb151:	nop	dword ptr [rax]


0xb181:	nop	dword ptr [rax]


0xb209:	nop	dword ptr [rax]


0xb23e:	nop	


0xb275:	nop	dword ptr [rax]


0xb2de:	nop	


0xb3e5:	nop	dword ptr [rax]


0xb4a5:	nop	dword ptr [rax]


0xb584:	nop	dword ptr [rax]


0xb5c7:	nop	word ptr [rax + rax]


0xb5dd:	nop	dword ptr [rax]


0xb657:	nop	word ptr [rax + rax]


0xba8f:	nop	


0xbabb:	nop	dword ptr [rax + rax]


0xbbaa:	nop	word ptr [rax + rax]


0xbda8:	nop	dword ptr [rax + rax]


0xbde8:	nop	dword ptr [rax + rax]


0xbe5d:	nop	dword ptr [rax]


0xbf26:	nop	word ptr cs:[rax + rax]


0xbfb2:	nop	word ptr [rax + rax]


0xc093:	nop	dword ptr [rax + rax]


0xc125:	nop	dword ptr [rax]


0xc283:	nop	dword ptr [rax + rax]


0xc29f:	nop	


0xc3db:	nop	dword ptr [rax + rax]


0xc4e3:	nop	dword ptr [rax + rax]


0xc5e8:	nop	dword ptr [rax + rax]


0xc632:	nop	word ptr [rax + rax]


0xc6b6:	nop	word ptr cs:[rax + rax]


0xc73b:	nop	dword ptr [rax + rax]


0xc7d5:	nop	dword ptr [rax]


0xc901:	nop	dword ptr [rax]


0xcde8:	nop	dword ptr [rax + rax]


0xcdfa:	nop	word ptr [rax + rax]


0xce38:	nop	dword ptr [rax + rax]


0xcf0a:	nop	word ptr [rax + rax]


0xd006:	nop	word ptr cs:[rax + rax]


0xd0a4:	nop	dword ptr [rax]


0xd433:	nop	dword ptr [rax + rax]


0xd458:	nop	dword ptr [rax + rax]


0xd489:	nop	dword ptr [rax]


0xd49f:	nop	


0xd4bd:	nop	dword ptr [rax]


0xd4cd:	nop	dword ptr [rax]


0xd505:	nop	dword ptr [rax]


0xd521:	nop	dword ptr [rax]


0xd539:	nop	dword ptr [rax]


0xd7e4:	nop	dword ptr [rax]


0xd943:	nop	dword ptr [rax + rax]


0xda8b:	nop	dword ptr [rax + rax]


0xdb19:	nop	dword ptr [rax]


0xdb34:	nop	dword ptr [rax]


0xdb51:	nop	dword ptr [rax]


0xdbad:	nop	dword ptr [rax]


0xdbcd:	nop	dword ptr [rax]


0xdbfa:	nop	word ptr [rax + rax]


0xde7b:	nop	dword ptr [rax + rax]


0xdfb9:	nop	dword ptr [rax]


0xe069:	nop	dword ptr [rax]


0xe0bb:	nop	dword ptr [rax + rax]


0xe0ff:	nop	


0xe196:	nop	word ptr cs:[rax + rax]


0xe26e:	nop	


0xe2d3:	nop	dword ptr [rax + rax]


0xe2ea:	nop	word ptr [rax + rax]


0xe334:	nop	dword ptr [rax]


0xe377:	nop	word ptr [rax + rax]


0xe388:	nop	dword ptr [rax + rax]


0xe40a:	nop	word ptr [rax + rax]


0xe44f:	nop	


0xe4d2:	nop	word ptr [rax + rax]


0xe69a:	nop	word ptr [rax + rax]


0xe749:	nop	dword ptr [rax]


0xe757:	nop	word ptr [rax + rax]


0xe871:	nop	dword ptr [rax]


0xe89e:	nop	


0xe929:	nop	dword ptr [rax]


0xea4b:	nop	dword ptr [rax + rax]


0xeb41:	nop	dword ptr [rax]


0xeb5c:	nop	dword ptr [rax]


0xeb91:	nop	dword ptr [rax]


0xebfc:	nop	dword ptr [rax]


0xed13:	nop	dword ptr [rax + rax]


0xed83:	nop	dword ptr [rax + rax]


0xee1b:	nop	dword ptr [rax + rax]


0xef1a:	nop	word ptr [rax + rax]


0xef63:	nop	dword ptr [rax + rax]


0xef8f:	nop	


0xefd5:	nop	dword ptr [rax]


0xf033:	nop	dword ptr [rax + rax]


0xf16b:	nop	dword ptr [rax + rax]


0xf206:	nop	word ptr cs:[rax + rax]


0xf252:	nop	word ptr [rax + rax]


0xf263:	nop	dword ptr [rax + rax]


0xf2be:	nop	


0xf3e9:	nop	dword ptr [rax]


0xf546:	nop	word ptr cs:[rax + rax]


0xf57b:	nop	dword ptr [rax + rax]


0xf591:	nop	dword ptr [rax]


0xf5cb:	nop	dword ptr [rax + rax]


0xfb08:	nop	dword ptr [rax + rax]


0xfb2c:	nop	dword ptr [rax]


0xfb72:	nop	word ptr [rax + rax]


0xfd11:	nop	dword ptr [rax]


0xfe3e:	nop	


0x100ae:	nop	


0x1010b:	nop	dword ptr [rax + rax]


0x10155:	nop	dword ptr [rax]


0x101b6:	nop	word ptr cs:[rax + rax]


0x101fd:	nop	dword ptr [rax]


0x1022c:	nop	dword ptr [rax]


0x1026c:	nop	dword ptr [rax]


0x102a5:	nop	dword ptr [rax]


0x102d6:	nop	word ptr cs:[rax + rax]


0x10464:	nop	dword ptr [rax]


0x104dd:	nop	dword ptr [rax]


0x1051e:	nop	


0x1053b:	nop	dword ptr [rax + rax]


0x1058e:	nop	


0x1059d:	nop	dword ptr [rax]


0x105bb:	nop	dword ptr [rax + rax]


0x105ca:	nop	word ptr [rax + rax]


0x105f8:	nop	dword ptr [rax + rax]


0x1065c:	nop	dword ptr [rax]


0x106c9:	nop	dword ptr [rax]


0x10701:	nop	dword ptr [rax]


0x10a97:	nop	word ptr [rax + rax]


0x10b2e:	nop	


0x10c4e:	nop	


0x10dd2:	nop	word ptr [rax + rax]


0x10e01:	nop	dword ptr [rax]


0x10ef2:	nop	word ptr [rax + rax]


0x10ff1:	nop	dword ptr [rax]


0x1101a:	nop	word ptr [rax + rax]


0x1103c:	nop	dword ptr [rax]


0x110bd:	nop	dword ptr [rax]


0x110ce:	nop	


0x11148:	nop	dword ptr [rax + rax]


0x111a3:	nop	dword ptr [rax + rax]


0x111c8:	nop	dword ptr [rax + rax]


0x111ec:	nop	dword ptr [rax]


0x11281:	nop	dword ptr [rax]


0x112fb:	nop	dword ptr [rax + rax]


0x11311:	nop	dword ptr [rax]


0x11322:	nop	word ptr [rax + rax]


0x11369:	nop	dword ptr [rax]


0x114dc:	nop	dword ptr [rax]


0x114f7:	nop	word ptr [rax + rax]


0x11612:	nop	word ptr [rax + rax]


0x1164f:	nop	


0x11667:	nop	word ptr [rax + rax]


0x116f6:	nop	word ptr cs:[rax + rax]


0x11772:	nop	word ptr [rax + rax]


0x117a5:	nop	dword ptr [rax]


0x118a6:	nop	word ptr cs:[rax + rax]


0x118d7:	nop	word ptr [rax + rax]


0x1193e:	nop	


0x11956:	nop	word ptr cs:[rax + rax]


0x119ea:	nop	word ptr [rax + rax]


0x11a0b:	nop	dword ptr [rax + rax]


0x11a1e:	nop	


0x11a42:	nop	word ptr [rax + rax]


0x11a66:	nop	word ptr cs:[rax + rax]


0x11a92:	nop	word ptr [rax + rax]


0x11abf:	nop	


0x11ace:	nop	


0x11aeb:	nop	dword ptr [rax + rax]


0x11afe:	nop	


0x11b1b:	nop	dword ptr [rax + rax]


0x11b4e:	nop	


0x11b6b:	nop	dword ptr [rax + rax]


0x11b8b:	nop	dword ptr [rax + rax]


0x11ddf:	nop	


0x11f44:	nop	dword ptr [rax]


0x11f79:	nop	dword ptr [rax]


0x11f93:	nop	dword ptr [rax + rax]


0x12366:	nop	word ptr cs:[rax + rax]


0x12427:	nop	word ptr [rax + rax]


0x1245c:	nop	dword ptr [rax]


0x124c5:	nop	dword ptr [rax]


0x12536:	nop	word ptr cs:[rax + rax]


0x12558:	nop	dword ptr [rax + rax]


0x1258a:	nop	word ptr [rax + rax]


0x1261d:	nop	dword ptr [rax]


0x1266c:	nop	dword ptr [rax]


0x12964:	nop	dword ptr [rax]


0x130e3:	nop	dword ptr [rax + rax]


0x13257:	nop	word ptr [rax + rax]


0x1358c:	nop	dword ptr [rax]


0x135b2:	nop	word ptr [rax + rax]


0x135df:	nop	


0x1368b:	nop	dword ptr [rax + rax]


0x1378a:	nop	word ptr [rax + rax]


0x13abe:	nop	


0x13ad5:	nop	dword ptr [rax]


0x13b9f:	nop	


0x13de3:	nop	dword ptr [rax + rax]


0x13f64:	nop	dword ptr [rax]


0x1411a:	nop	word ptr [rax + rax]


0x141b1:	nop	dword ptr [rax]


0x14268:	nop	dword ptr [rax + rax]


0x142cf:	nop	


0x143aa:	nop	word ptr [rax + rax]


0x143dd:	nop	dword ptr [rax]


0x14458:	nop	dword ptr [rax + rax]


0x144b5:	nop	dword ptr [rax]


0x1472c:	nop	dword ptr [rax]


0x14755:	nop	dword ptr [rax]


0x14776:	nop	word ptr cs:[rax + rax]


0x14902:	nop	word ptr [rax + rax]


0x14b34:	nop	dword ptr [rax]


0x14c2c:	nop	dword ptr [rax]


0x14c49:	nop	dword ptr [rax]


0x14c69:	nop	dword ptr [rax]


0x14caa:	nop	word ptr [rax + rax]


0x14cb8:	nop	dword ptr [rax + rax]


0x14d21:	nop	dword ptr [rax]


0x14d46:	nop	word ptr cs:[rax + rax]


0x14d5c:	nop	dword ptr [rax]


0x14d6c:	nop	dword ptr [rax]


0x14de1:	nop	dword ptr [rax]


0x14f1c:	nop	dword ptr [rax]


0x14f6c:	nop	dword ptr [rax]


0x14f79:	nop	dword ptr [rax]


0x15057:	nop	word ptr [rax + rax]


0x15071:	nop	dword ptr [rax]


0x1510b:	nop	dword ptr [rax + rax]


0x15115:	nop	dword ptr [rax]


0x151f4:	nop	dword ptr [rax]


0x15211:	nop	dword ptr [rax]


0x152c1:	nop	dword ptr [rax]


0x15324:	nop	dword ptr [rax]


0x15341:	nop	dword ptr [rax]


0x15352:	nop	word ptr [rax + rax]


0x153aa:	nop	word ptr [rax + rax]


0x153f6:	nop	word ptr cs:[rax + rax]


0x15455:	nop	dword ptr [rax]


0x154b3:	nop	dword ptr [rax + rax]


0x154df:	nop	


