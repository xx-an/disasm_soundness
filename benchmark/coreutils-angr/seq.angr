0x7f70:	sub	rsp, 8
0x7f74:	add	rsp, 8
0x7f78:	ret	


0x7f60:	mov	rdx, qword ptr [rip + 0x2030a1]
0x7f67:	xor	esi, esi
0x7f69:	jmp	0x1860


0x7f50:	ret	


0x7ee0:	push	r15
0x7ee2:	push	r14
0x7ee4:	mov	r15, rdx
0x7ee7:	push	r13
0x7ee9:	push	r12
0x7eeb:	lea	r12, [rip + 0x202bfe]
0x7ef2:	push	rbp
0x7ef3:	lea	rbp, [rip + 0x202bfe]
0x7efa:	push	rbx
0x7efb:	mov	r13d, edi
0x7efe:	mov	r14, rsi
0x7f01:	sub	rbp, r12
0x7f04:	sub	rsp, 8
0x7f08:	sar	rbp, 3
0x7f0c:	call	0x1550


0x71f0:	push	r15
0x71f2:	push	r14
0x71f4:	lea	rcx, [rsi + 0x20]
0x71f8:	push	r13
0x71fa:	push	r12
0x71fc:	lea	rax, [rdx + 0x10]
0x7200:	push	rbp
0x7201:	push	rbx
0x7202:	mov	r14, rsi
0x7205:	mov	r15, rdx
0x7208:	xor	ebx, ebx
0x720a:	mov	r9d, 7
0x7210:	sub	rsp, 0x58
0x7214:	mov	r10d, 7
0x721a:	mov	qword ptr [rsi], 0
0x7221:	mov	qword ptr [rsi + 8], rcx
0x7225:	mov	qword ptr [rsp + 0x28], rcx
0x722a:	mov	r8, -1
0x7231:	mov	qword ptr [rdx], 0
0x7238:	mov	qword ptr [rsp + 8], rax
0x723d:	mov	qword ptr [rdx + 8], rax
0x7241:	mov	qword ptr [rsp + 0x18], 0
0x724a:	mov	qword ptr [rsp + 0x10], 0
0x7253:	mov	qword ptr [rsp + 0x20], 0
0x725c:	jmp	0x726b


0x6ff0:	cmp	qword ptr [rsi], 0
0x6ff4:	mov	rax, qword ptr [rsi + 8]
0x6ff8:	je	0x705d


0x5ed0:	push	rbp
0x5ed1:	mov	rbp, rsp
0x5ed4:	push	r15
0x5ed6:	push	r14
0x5ed8:	push	r13
0x5eda:	push	r12
0x5edc:	lea	r14, [rbp - 0x3b0]
0x5ee3:	push	rbx
0x5ee4:	mov	rbx, rdx
0x5ee7:	mov	r12, rcx
0x5eea:	mov	rdx, r14
0x5eed:	sub	rsp, 0x408
0x5ef4:	mov	qword ptr [rbp - 0x418], rsi
0x5efb:	lea	rsi, [rbp - 0x2c0]
0x5f02:	mov	qword ptr [rbp - 0x3e8], rdi
0x5f09:	mov	rdi, rbx
0x5f0c:	mov	qword ptr [rbp - 0x410], r14
0x5f13:	mov	rax, qword ptr fs:[0x28]
0x5f1c:	mov	qword ptr [rbp - 0x38], rax
0x5f20:	xor	eax, eax
0x5f22:	mov	qword ptr [rbp - 0x408], rsi
0x5f29:	call	0x71f0


0x5e70:	mov	rax, qword ptr [rdi + 8]
0x5e74:	cmp	qword ptr [rdi + 0x10], rax
0x5e78:	je	0x5e80


0x5e30:	test	rdi, rdi
0x5e33:	push	rbx
0x5e34:	mov	rbx, rdi
0x5e37:	je	0x5e4a


0x5db0:	push	r12
0x5db2:	push	rbp
0x5db3:	push	rbx
0x5db4:	mov	rbx, rdi
0x5db7:	call	0x1770


0x5d70:	sub	rsp, 8
0x5d74:	mov	edi, 0xe
0x5d79:	call	0x17b0


0x5d10:	sub	rsp, 8
0x5d14:	xor	esi, esi
0x5d16:	call	0x17f0


0x5c90:	push	r12
0x5c92:	push	rbp
0x5c93:	mov	rbp, rdi
0x5c96:	push	rbx
0x5c97:	call	0x15f0


0x5bd0:	push	r12
0x5bd2:	push	rbp
0x5bd3:	mov	rbp, rdi
0x5bd6:	push	rbx
0x5bd7:	mov	rbx, rsi
0x5bda:	sub	rsp, 0x10
0x5bde:	mov	rax, qword ptr [rip + 0x205673]
0x5be5:	test	rax, rax
0x5be8:	je	0x5c60


0x5b50:	push	rbx
0x5b51:	mov	rax, rsi
0x5b54:	mov	rbx, rdi
0x5b57:	xor	edi, edi
0x5b59:	sub	rsp, 0x10
0x5b5d:	mov	rcx, qword ptr fs:[0x28]
0x5b66:	mov	qword ptr [rsp + 8], rcx
0x5b6b:	xor	ecx, ecx
0x5b6d:	mov	rsi, rsp
0x5b70:	mov	rcx, rdx
0x5b73:	mov	rdx, rax
0x5b76:	call	0x5ed0


0x5ac0:	push	r13
0x5ac2:	push	r12
0x5ac4:	mov	r13, rsi
0x5ac7:	push	rbp
0x5ac8:	push	rbx
0x5ac9:	mov	rbx, rdi
0x5acc:	mov	r12, rdx
0x5acf:	sub	rsp, 0x18
0x5ad3:	mov	rax, qword ptr fs:[0x28]
0x5adc:	mov	qword ptr [rsp + 8], rax
0x5ae1:	xor	eax, eax
0x5ae3:	lea	rax, [rsp + 4]
0x5ae8:	test	rdi, rdi
0x5aeb:	cmove	rbx, rax
0x5aef:	mov	rdi, rbx
0x5af2:	call	0x1690


0x5a00:	sub	rsp, 0xd8
0x5a07:	test	al, al
0x5a09:	mov	qword ptr [rsp + 0x30], rdx
0x5a0e:	mov	qword ptr [rsp + 0x38], rcx
0x5a13:	mov	qword ptr [rsp + 0x40], r8
0x5a18:	mov	qword ptr [rsp + 0x48], r9
0x5a1d:	je	0x5a56


0x5940:	push	r14
0x5942:	push	r13
0x5944:	mov	r14, rcx
0x5947:	push	r12
0x5949:	push	rbp
0x594a:	mov	rbp, rdi
0x594d:	push	rbx
0x594e:	mov	r13, rdx
0x5951:	mov	rbx, rsi
0x5954:	sub	rsp, 0x10
0x5958:	mov	rax, qword ptr fs:[0x28]
0x5961:	mov	qword ptr [rsp + 8], rax
0x5966:	xor	eax, eax
0x5968:	call	0x15b0


0x5900:	lea	rsi, [rip + 0x37a8]
0x5907:	sub	rsp, 8
0x590b:	mov	edx, 5
0x5910:	xor	edi, edi
0x5912:	call	0x1640


0x58e0:	push	rbx
0x58e1:	mov	rbx, rdi
0x58e4:	call	0x1660


0x58b0:	push	rbp
0x58b1:	push	rbx
0x58b2:	mov	rbp, rdi
0x58b5:	mov	rdi, rsi
0x58b8:	mov	rbx, rsi
0x58bb:	sub	rsp, 8
0x58bf:	call	0x56b0


0x5880:	mov	rax, rdi
0x5883:	sub	rsp, 8
0x5887:	mul	rsi
0x588a:	seto	dl
0x588d:	test	rax, rax
0x5890:	js	0x58a9


0x5860:	push	rbx
0x5861:	mov	rbx, rdi
0x5864:	call	0x56b0


0x5810:	test	rdi, rdi
0x5813:	mov	rax, qword ptr [rsi]
0x5816:	je	0x5840


0x5780:	test	rdi, rdi
0x5783:	mov	r9, rdx
0x5786:	mov	rcx, qword ptr [rsi]
0x5789:	je	0x57c0


0x5750:	mov	rax, rsi
0x5753:	mul	rdx
0x5756:	mov	rsi, rax
0x5759:	seto	al
0x575c:	test	rsi, rsi
0x575f:	js	0x576b


0x5710:	test	rsi, rsi
0x5713:	push	rbx
0x5714:	mov	rbx, rsi
0x5717:	jne	0x571e


0x5700:	jmp	0x56b0


0x56d0:	mov	rax, rdi
0x56d3:	mul	rsi
0x56d6:	mov	rdi, rax
0x56d9:	seto	al
0x56dc:	test	rdi, rdi
0x56df:	js	0x56eb


0x56b0:	push	rbx
0x56b1:	mov	rbx, rdi
0x56b4:	call	0x1790


0x5630:	push	rbx
0x5631:	lea	rsi, [rip + 0x376a]
0x5638:	mov	edx, 5
0x563d:	xor	edi, edi
0x563f:	call	0x1640


0x5550:	push	rbp
0x5551:	push	rbx
0x5552:	mov	r10d, 0x20
0x5558:	xor	r11d, r11d
0x555b:	sub	rsp, 0xb8
0x5562:	mov	rax, qword ptr fs:[0x28]
0x556b:	mov	qword ptr [rsp + 0x78], rax
0x5570:	xor	eax, eax
0x5572:	lea	rax, [rsp + 0xd0]
0x557a:	mov	qword ptr [rsp + 0xa0], r8
0x5582:	lea	rbx, [rsp + 0xd0]
0x558a:	lea	r8, [rsp + 0x20]
0x558f:	mov	qword ptr [rsp + 0xa8], r9
0x5597:	mov	dword ptr [rsp + 8], 0x20
0x559f:	mov	qword ptr [rsp + 0x10], rax
0x55a4:	lea	rax, [rsp + 0x80]
0x55ac:	xor	r9d, r9d
0x55af:	mov	qword ptr [rsp + 0x18], rax
0x55b4:	mov	rbp, rax
0x55b7:	nop	word ptr [rax + rax]
0x55c0:	cmp	r10d, 0x2f
0x55c4:	ja	0x561c


0x54d0:	sub	rsp, 0x68
0x54d4:	mov	r10, r8
0x54d7:	xor	r9d, r9d
0x54da:	mov	rax, qword ptr fs:[0x28]
0x54e3:	mov	qword ptr [rsp + 0x58], rax
0x54e8:	xor	eax, eax
0x54ea:	mov	r8, rsp
0x54ed:	nop	dword ptr [rax]
0x54f0:	mov	eax, dword ptr [r10]
0x54f3:	cmp	eax, 0x2f
0x54f6:	ja	0x553a


0x54b0:	xor	r9d, r9d
0x54b3:	cmp	qword ptr [r8], 0
0x54b7:	je	0x54cb


0x5090:	push	r15
0x5092:	push	r14
0x5094:	push	r13
0x5096:	push	r12
0x5098:	mov	r12, r9
0x509b:	push	rbp
0x509c:	push	rbx
0x509d:	mov	rbp, rdi
0x50a0:	mov	rbx, r8
0x50a3:	sub	rsp, 0x28
0x50a7:	test	rsi, rsi
0x50aa:	je	0x51c8


0x5070:	lea	rcx, [rip + 0x205fa9]
0x5077:	mov	rsi, rdi
0x507a:	mov	rdx, -1
0x5081:	xor	edi, edi
0x5083:	jmp	0x4730


0x5050:	lea	rcx, [rip + 0x205fc9]
0x5057:	mov	rdx, -1
0x505e:	jmp	0x4730


0x5030:	lea	rcx, [rip + 0x205fe9]
0x5037:	mov	rdx, rsi
0x503a:	mov	rsi, rdi
0x503d:	xor	edi, edi
0x503f:	jmp	0x4730


0x5020:	lea	rcx, [rip + 0x205ff9]
0x5027:	jmp	0x4730


0x5000:	mov	r8, rcx
0x5003:	mov	rcx, rdx
0x5006:	mov	rdx, rsi
0x5009:	mov	rsi, rdi
0x500c:	xor	edi, edi
0x500e:	jmp	0x4f30


0x4fe0:	mov	rcx, rdx
0x4fe3:	mov	r8, -1
0x4fea:	mov	rdx, rsi
0x4fed:	mov	rsi, rdi
0x4ff0:	xor	edi, edi
0x4ff2:	jmp	0x4f30


0x4fd0:	mov	r8, -1
0x4fd7:	jmp	0x4f30


0x4f30:	sub	rsp, 0x48
0x4f34:	mov	r9, rcx
0x4f37:	mov	rcx, qword ptr [rip + 0x206312]
0x4f3e:	movdqa	xmm0, xmmword ptr [rip + 0x2062da]
0x4f46:	mov	rax, qword ptr fs:[0x28]
0x4f4f:	mov	qword ptr [rsp + 0x38], rax
0x4f54:	xor	eax, eax
0x4f56:	movaps	xmmword ptr [rsp], xmm0
0x4f5a:	test	rsi, rsi
0x4f5d:	mov	qword ptr [rsp + 0x30], rcx
0x4f62:	mov	dword ptr [rsp], 0xa
0x4f69:	movdqa	xmm0, xmmword ptr [rip + 0x2062bf]
0x4f71:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x4f76:	movdqa	xmm0, xmmword ptr [rip + 0x2062c2]
0x4f7e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x4f83:	je	0x4fb7


0x4ea0:	sub	rsp, 0x48
0x4ea4:	mov	rax, rdx
0x4ea7:	mov	rdx, qword ptr fs:[0x28]
0x4eb0:	mov	qword ptr [rsp + 0x38], rdx
0x4eb5:	xor	edx, edx
0x4eb7:	cmp	esi, 0xa
0x4eba:	je	0x4f24


0x4e90:	mov	edx, 0x3a
0x4e95:	jmp	0x4dc0


0x4e70:	mov	edx, 0x3a
0x4e75:	mov	rsi, -1
0x4e7c:	jmp	0x4dc0


0x4e60:	movsx	edx, sil
0x4e64:	mov	rsi, -1
0x4e6b:	jmp	0x4dc0


0x4dc0:	sub	rsp, 0x48
0x4dc4:	mov	ecx, edx
0x4dc6:	mov	rax, qword ptr fs:[0x28]
0x4dcf:	mov	qword ptr [rsp + 0x38], rax
0x4dd4:	xor	eax, eax
0x4dd6:	mov	rax, qword ptr [rip + 0x206473]
0x4ddd:	mov	r8, rsp
0x4de0:	and	ecx, 0x1f
0x4de3:	movdqa	xmm0, xmmword ptr [rip + 0x206435]
0x4deb:	mov	qword ptr [rsp + 0x30], rax
0x4df0:	mov	eax, edx
0x4df2:	movaps	xmmword ptr [rsp], xmm0
0x4df6:	shr	al, 5
0x4df9:	movzx	eax, al
0x4dfc:	lea	r9, [r8 + rax*4 + 8]
0x4e01:	movdqa	xmm0, xmmword ptr [rip + 0x206427]
0x4e09:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x4e0e:	movdqa	xmm0, xmmword ptr [rip + 0x20642a]
0x4e16:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x4e1b:	mov	edx, dword ptr [r9]
0x4e1e:	mov	eax, edx
0x4e20:	shr	eax, cl
0x4e22:	not	eax
0x4e24:	and	eax, 1
0x4e27:	shl	eax, cl
0x4e29:	mov	rcx, r8
0x4e2c:	xor	eax, edx
0x4e2e:	mov	rdx, rsi
0x4e31:	mov	rsi, rdi
0x4e34:	mov	dword ptr [r9], eax
0x4e37:	xor	edi, edi
0x4e39:	call	0x4730


0x4db0:	mov	rcx, rdx
0x4db3:	mov	rdx, rsi
0x4db6:	mov	esi, edi
0x4db8:	xor	edi, edi
0x4dba:	jmp	0x4d10


0x4da0:	mov	rdx, rsi
0x4da3:	mov	esi, edi
0x4da5:	xor	edi, edi
0x4da7:	jmp	0x4c80


0x4d10:	sub	rsp, 0x48
0x4d14:	mov	rax, rdx
0x4d17:	mov	rdx, rcx
0x4d1a:	mov	rcx, qword ptr fs:[0x28]
0x4d23:	mov	qword ptr [rsp + 0x38], rcx
0x4d28:	xor	ecx, ecx
0x4d2a:	cmp	esi, 0xa
0x4d2d:	je	0x4d90


0x4c80:	sub	rsp, 0x48
0x4c84:	mov	rax, rdx
0x4c87:	mov	rdx, qword ptr fs:[0x28]
0x4c90:	mov	qword ptr [rsp + 0x38], rdx
0x4c95:	xor	edx, edx
0x4c97:	cmp	esi, 0xa
0x4c9a:	je	0x4d04


0x4c60:	lea	rcx, [rip + 0x2065b9]
0x4c67:	mov	rdx, rsi
0x4c6a:	mov	rsi, rdi
0x4c6d:	xor	edi, edi
0x4c6f:	jmp	0x4730


0x4c40:	lea	rcx, [rip + 0x2065d9]
0x4c47:	mov	rsi, rdi
0x4c4a:	mov	rdx, -1
0x4c51:	xor	edi, edi
0x4c53:	jmp	0x4730


0x4c30:	lea	rcx, [rip + 0x2065e9]
0x4c37:	jmp	0x4730


0x4c10:	lea	rcx, [rip + 0x206609]
0x4c17:	mov	rdx, -1
0x4c1e:	jmp	0x4730


0x4b70:	mov	eax, dword ptr [rip + 0x2064e2]
0x4b76:	push	r12
0x4b78:	mov	r12, qword ptr [rip + 0x2064e1]
0x4b7f:	push	rbp
0x4b80:	push	rbx
0x4b81:	cmp	eax, 1
0x4b84:	jle	0x4bb1


0x4b60:	mov	rcx, rdx
0x4b63:	xor	edx, edx
0x4b65:	jmp	0x4a70


0x4a70:	push	r15
0x4a72:	push	r14
0x4a74:	lea	rax, [rip + 0x2067a5]
0x4a7b:	push	r13
0x4a7d:	push	r12
0x4a7f:	mov	r12, rdx
0x4a82:	push	rbp
0x4a83:	push	rbx
0x4a84:	mov	rbx, rcx
0x4a87:	mov	r14, rdi
0x4a8a:	mov	r15, rsi
0x4a8d:	sub	rsp, 0x38
0x4a91:	test	rcx, rcx
0x4a94:	cmove	rbx, rax
0x4a98:	xor	ebp, ebp
0x4a9a:	call	0x15b0


0x49f0:	push	r15
0x49f2:	push	r14
0x49f4:	lea	rax, [rip + 0x206825]
0x49fb:	push	r13
0x49fd:	push	r12
0x49ff:	mov	r13, rdi
0x4a02:	push	rbp
0x4a03:	push	rbx
0x4a04:	mov	rbx, r8
0x4a07:	mov	r14, rsi
0x4a0a:	mov	r15, rdx
0x4a0d:	sub	rsp, 0x18
0x4a11:	test	r8, r8
0x4a14:	cmove	rbx, rax
0x4a18:	mov	qword ptr [rsp + 8], rcx
0x4a1d:	call	0x15b0


0x49c0:	lea	rax, [rip + 0x206859]
0x49c7:	test	rdi, rdi
0x49ca:	cmove	rdi, rax
0x49ce:	test	rsi, rsi
0x49d1:	mov	dword ptr [rdi], 0xa
0x49d7:	je	0x49e7


0x49a0:	lea	rax, [rip + 0x206879]
0x49a7:	test	rdi, rdi
0x49aa:	cmove	rdi, rax
0x49ae:	mov	eax, dword ptr [rdi + 4]
0x49b1:	mov	dword ptr [rdi + 4], esi
0x49b4:	ret	


0x4960:	lea	rax, [rip + 0x2068b9]
0x4967:	test	rdi, rdi
0x496a:	mov	ecx, esi
0x496c:	cmove	rdi, rax
0x4970:	mov	eax, esi
0x4972:	and	ecx, 0x1f
0x4975:	shr	al, 5
0x4978:	movzx	eax, al
0x497b:	lea	rdi, [rdi + rax*4 + 8]
0x4980:	mov	esi, dword ptr [rdi]
0x4982:	mov	eax, esi
0x4984:	shr	eax, cl
0x4986:	xor	edx, eax
0x4988:	and	eax, 1
0x498b:	and	edx, 1
0x498e:	shl	edx, cl
0x4990:	xor	edx, esi
0x4992:	mov	dword ptr [rdi], edx
0x4994:	ret	


0x4940:	lea	rax, [rip + 0x2068d9]
0x4947:	test	rdi, rdi
0x494a:	cmove	rdi, rax
0x494e:	mov	dword ptr [rdi], esi
0x4950:	ret	


0x4920:	lea	rax, [rip + 0x2068f9]
0x4927:	test	rdi, rdi
0x492a:	cmove	rdi, rax
0x492e:	mov	eax, dword ptr [rdi]
0x4930:	ret	


0x48e0:	push	r12
0x48e2:	push	rbp
0x48e3:	push	rbx
0x48e4:	mov	rbx, rdi
0x48e7:	call	0x15b0


0x4730:	push	r15
0x4732:	push	r14
0x4734:	movsxd	r15, edi
0x4737:	push	r13
0x4739:	push	r12
0x473b:	mov	r14, rdx
0x473e:	push	rbp
0x473f:	push	rbx
0x4740:	mov	rbp, rcx
0x4743:	sub	rsp, 0x28
0x4747:	mov	qword ptr [rsp + 8], rsi
0x474c:	call	0x15b0


0x34f0:	push	r15
0x34f2:	push	r14
0x34f4:	mov	r15d, r8d
0x34f7:	push	r13
0x34f9:	push	r12
0x34fb:	mov	r14, rdi
0x34fe:	push	rbp
0x34ff:	push	rbx
0x3500:	mov	ebx, r9d
0x3503:	mov	r13, rsi
0x3506:	mov	rbp, rcx
0x3509:	and	ebx, 2
0x350c:	sub	rsp, 0xb8
0x3513:	mov	rax, qword ptr [rsp + 0xf0]
0x351b:	mov	qword ptr [rsp + 0x10], rdx
0x3520:	mov	dword ptr [rsp + 8], r8d
0x3525:	mov	dword ptr [rsp + 0x78], r9d
0x352a:	mov	qword ptr [rsp + 0x20], rax
0x352f:	mov	rax, qword ptr [rsp + 0xf8]
0x3537:	mov	qword ptr [rsp + 0x68], rax
0x353c:	mov	rax, qword ptr [rsp + 0x100]
0x3544:	mov	qword ptr [rsp + 0x60], rax
0x3549:	mov	rax, qword ptr fs:[0x28]
0x3552:	mov	qword ptr [rsp + 0xa8], rax
0x355a:	xor	eax, eax
0x355c:	call	0x1650


0x3400:	push	rbp
0x3401:	push	rbx
0x3402:	mov	rbp, rdi
0x3405:	mov	ebx, esi
0x3407:	sub	rsp, 8
0x340b:	call	0x5d70


0x3360:	test	rdi, rdi
0x3363:	push	rbx
0x3364:	je	0x33dd


0x32b0:	push	rbp
0x32b1:	push	rbx
0x32b2:	sub	rsp, 8
0x32b6:	mov	rdi, qword ptr [rip + 0x207dcb]
0x32bd:	call	0x5c90


0x32a0:	mov	byte ptr [rip + 0x207e59], dil
0x32a7:	ret	


0x3290:	mov	qword ptr [rip + 0x207e71], rdi
0x3297:	ret	


0x31e0:	push	r13
0x31e2:	push	r12
0x31e4:	push	rbp
0x31e5:	push	rbx
0x31e6:	mov	rbx, rsi
0x31e9:	mov	rbp, rdi
0x31ec:	sub	rsp, 0x38
0x31f0:	lea	rsi, [rsp + 0x18]
0x31f5:	mov	rax, qword ptr fs:[0x28]
0x31fe:	mov	qword ptr [rsp + 0x28], rax
0x3203:	xor	eax, eax
0x3205:	call	0x1830


0x2e80:	push	r15
0x2e82:	push	r14
0x2e84:	push	r13
0x2e86:	push	r12
0x2e88:	push	rbp
0x2e89:	push	rbx
0x2e8a:	mov	rbx, rsi
0x2e8d:	mov	rbp, rdi
0x2e90:	xor	esi, esi
0x2e92:	mov	rdi, rbx
0x2e95:	sub	rsp, 0x48
0x2e99:	lea	rcx, [rip + 0x340]
0x2ea0:	lea	rdx, [rsp + 0x10]
0x2ea5:	mov	rax, qword ptr fs:[0x28]
0x2eae:	mov	qword ptr [rsp + 0x38], rax
0x2eb3:	xor	eax, eax
0x2eb5:	call	0x5940


0x2aa0:	push	r13
0x2aa2:	push	r12
0x2aa4:	mov	edx, 5
0x2aa9:	push	rbp
0x2aaa:	push	rbx
0x2aab:	mov	ebp, edi
0x2aad:	sub	rsp, 0x88
0x2ab4:	mov	rbx, qword ptr [rip + 0x208655]
0x2abb:	mov	rax, qword ptr fs:[0x28]
0x2ac4:	mov	qword ptr [rsp + 0x78], rax
0x2ac9:	xor	eax, eax
0x2acb:	test	edi, edi
0x2acd:	je	0x2afd


0x26d0:	push	r15
0x26d2:	push	r14
0x26d4:	mov	r9, rdi
0x26d7:	push	r13
0x26d9:	push	r12
0x26db:	lea	rdi, [rip + 0x58b9]
0x26e2:	push	rbp
0x26e3:	push	rbx
0x26e4:	mov	ecx, 4
0x26e9:	mov	r8, rsi
0x26ec:	mov	r13, r9
0x26ef:	sub	rsp, 0x48
0x26f3:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2690:	mov	rdi, qword ptr [rip + 0x2089f1]
0x2697:	push	rbx
0x2698:	call	0x1600


0x2650:	push	rbp
0x2651:	push	rbx
0x2652:	mov	rbx, rdi
0x2655:	sub	rsp, 8
0x2659:	call	0x1660


0x2640:	push	rbp
0x2641:	mov	rbp, rsp
0x2644:	pop	rbp
0x2645:	jmp	0x25b0


0x2600:	cmp	byte ptr [rip + 0x208ac1], 0
0x2607:	jne	0x2638


0x25b0:	lea	rdi, [rip + 0x208ac9]
0x25b7:	lea	rsi, [rip + 0x208ac2]
0x25be:	push	rbp
0x25bf:	sub	rsi, rdi
0x25c2:	mov	rbp, rsp
0x25c5:	sar	rsi, 3
0x25c9:	mov	rax, rsi
0x25cc:	shr	rax, 0x3f
0x25d0:	add	rsi, rax
0x25d3:	sar	rsi, 1
0x25d6:	je	0x25f0


0x2570:	lea	rdi, [rip + 0x208b09]
0x2577:	push	rbp
0x2578:	lea	rax, [rip + 0x208b01]
0x257f:	cmp	rax, rdi
0x2582:	mov	rbp, rsp
0x2585:	je	0x25a0


0x2540:	xor	ebp, ebp
0x2542:	mov	r9, rdx
0x2545:	pop	rsi
0x2546:	mov	rdx, rsp
0x2549:	and	rsp, 0xfffffffffffffff0
0x254d:	push	rax
0x254e:	push	rsp
0x254f:	lea	r8, [rip + 0x59fa]
0x2556:	lea	rcx, [rip + 0x5983]
0x255d:	lea	rdi, [rip - 0xc74]
0x2564:	call	qword ptr [rip + 0x208a6e]


0x18f0:	push	r15
0x18f2:	push	r14
0x18f4:	push	r13
0x18f6:	push	r12
0x18f8:	mov	r13d, edi
0x18fb:	push	rbp
0x18fc:	push	rbx
0x18fd:	mov	r12, rsi
0x1900:	lea	rbp, [rip + 0x2091f9]
0x1907:	sub	rsp, 0xd8
0x190e:	mov	rdi, qword ptr [rsi]
0x1911:	mov	rax, qword ptr fs:[0x28]
0x191a:	mov	qword ptr [rsp + 0xc8], rax
0x1922:	xor	eax, eax
0x1924:	call	0x3360


0x1550:	sub	rsp, 8
0x1554:	mov	rax, qword ptr [rip + 0x209a85]
0x155b:	test	rax, rax
0x155e:	je	0x1562


0x1860:	jmp	qword ptr [rip + 0x20972a]


0x726b:	movzx	eax, byte ptr [rdi]
0x726e:	test	al, al
0x7270:	jne	0x7260


0x705d:	xor	eax, eax
0x705f:	ret	


0x6ffa:	lea	r8, [rip + 0x212f]
0x7001:	lea	r10, [rip + 0x2188]
0x7008:	lea	r9, [rip + 0x2119]
0x700f:	xor	ecx, ecx
0x7011:	nop	dword ptr [rax]
0x7018:	cmp	dword ptr [rax], 0x16
0x701b:	ja	0x7060


0x5e80:	mov	rax, qword ptr [rdi + 0x20]
0x5e84:	cmp	qword ptr [rdi + 0x28], rax
0x5e88:	jne	0x5e7a


0x5e7a:	jmp	0x1850


0x5e4a:	mov	rdi, rbx
0x5e4d:	pop	rbx
0x5e4e:	jmp	0x17a0


0x5e39:	call	0x17c0


0x1770:	jmp	qword ptr [rip + 0x2097a2]


0x17b0:	jmp	qword ptr [rip + 0x209782]


0x17f0:	jmp	qword ptr [rip + 0x209762]


0x15f0:	jmp	qword ptr [rip + 0x209862]


0x5c60:	lea	rsi, [rip + 0x24b9]
0x5c67:	xor	edx, edx
0x5c69:	mov	edi, 0x1fbf
0x5c6e:	call	0x16b0


0x5bea:	mov	rdi, qword ptr [rip + 0x205667]
0x5bf1:	test	rdi, rdi
0x5bf4:	je	0x5c40


0x1690:	jmp	qword ptr [rip + 0x209812]


0x5a56:	mov	rax, qword ptr fs:[0x28]
0x5a5f:	mov	qword ptr [rsp + 0x18], rax
0x5a64:	xor	eax, eax
0x5a66:	lea	rax, [rsp + 0xe0]
0x5a6e:	mov	rdx, rsp
0x5a71:	mov	qword ptr [rsp + 8], rax
0x5a76:	lea	rax, [rsp + 0x20]
0x5a7b:	mov	dword ptr [rsp], 0x10
0x5a82:	mov	dword ptr [rsp + 4], 0x30
0x5a8a:	mov	qword ptr [rsp + 0x10], rax
0x5a8f:	call	0x5b50


0x5a1f:	movaps	xmmword ptr [rsp + 0x50], xmm0
0x5a24:	movaps	xmmword ptr [rsp + 0x60], xmm1
0x5a29:	movaps	xmmword ptr [rsp + 0x70], xmm2
0x5a2e:	movaps	xmmword ptr [rsp + 0x80], xmm3
0x5a36:	movaps	xmmword ptr [rsp + 0x90], xmm4
0x5a3e:	movaps	xmmword ptr [rsp + 0xa0], xmm5
0x5a46:	movaps	xmmword ptr [rsp + 0xb0], xmm6
0x5a4e:	movaps	xmmword ptr [rsp + 0xc0], xmm7
0x5a56:	mov	rax, qword ptr fs:[0x28]
0x5a5f:	mov	qword ptr [rsp + 0x18], rax
0x5a64:	xor	eax, eax
0x5a66:	lea	rax, [rsp + 0xe0]
0x5a6e:	mov	rdx, rsp
0x5a71:	mov	qword ptr [rsp + 8], rax
0x5a76:	lea	rax, [rsp + 0x20]
0x5a7b:	mov	dword ptr [rsp], 0x10
0x5a82:	mov	dword ptr [rsp + 4], 0x30
0x5a8a:	mov	qword ptr [rsp + 0x10], rax
0x5a8f:	call	0x5b50


0x15b0:	jmp	qword ptr [rip + 0x209882]


0x1640:	jmp	qword ptr [rip + 0x20983a]


0x1660:	jmp	qword ptr [rip + 0x20982a]


0x58a9:	call	0x5900


0x5892:	movzx	edx, dl
0x5895:	test	rdx, rdx
0x5898:	jne	0x58a9


0x5840:	test	rax, rax
0x5843:	mov	edx, 0x80
0x5848:	cmove	rax, rdx
0x584c:	test	rax, rax
0x584f:	jns	0x5832


0x5818:	movabs	rdx, 0x5555555555555553
0x5822:	cmp	rax, rdx
0x5825:	ja	0x5851


0x57c0:	test	rcx, rcx
0x57c3:	je	0x57e8


0x578b:	xor	edx, edx
0x578d:	movabs	rax, 0x5555555555555554
0x5797:	div	r9
0x579a:	cmp	rax, rcx
0x579d:	jbe	0x57db


0x576b:	sub	rsp, 8
0x576f:	call	0x5900


0x5761:	movzx	eax, al
0x5764:	test	rax, rax
0x5767:	jne	0x576b


0x5719:	test	rdi, rdi
0x571c:	jne	0x5738


0x571e:	mov	rsi, rbx
0x5721:	call	0x17e0


0x56eb:	sub	rsp, 8
0x56ef:	call	0x5900


0x56e1:	movzx	eax, al
0x56e4:	test	rax, rax
0x56e7:	jne	0x56eb


0x1790:	jmp	qword ptr [rip + 0x209792]


0x55c6:	mov	eax, r10d
0x55c9:	mov	r11d, 1
0x55cf:	add	r10d, 8
0x55d3:	add	rax, rbp
0x55d6:	mov	rax, qword ptr [rax]
0x55d9:	test	rax, rax
0x55dc:	mov	qword ptr [r8 + r9*8], rax
0x55e0:	je	0x55ec


0x561c:	mov	rax, rbx
0x561f:	add	rbx, 8
0x5623:	jmp	0x55d6


0x54f8:	mov	r11d, eax
0x54fb:	add	r11, qword ptr [r10 + 0x10]
0x54ff:	add	eax, 8
0x5502:	mov	dword ptr [r10], eax
0x5505:	mov	rax, qword ptr [r11]
0x5508:	test	rax, rax
0x550b:	mov	qword ptr [r8 + r9*8], rax
0x550f:	je	0x551b


0x553a:	mov	r11, qword ptr [r10 + 8]
0x553e:	lea	rax, [r11 + 8]
0x5542:	mov	qword ptr [r10 + 8], rax
0x5546:	jmp	0x5505


0x54cb:	jmp	0x5090


0x51c8:	mov	r8, rcx
0x51cb:	mov	rcx, rdx
0x51ce:	lea	rdx, [rip + 0x3b7f]
0x51d5:	mov	esi, 1
0x51da:	xor	eax, eax
0x51dc:	call	0x1890


0x50b0:	mov	r8, rdx
0x50b3:	lea	rdx, [rip + 0x3c8e]
0x50ba:	mov	r9, rcx
0x50bd:	xor	eax, eax
0x50bf:	mov	rcx, rsi
0x50c2:	mov	esi, 1
0x50c7:	call	0x1890


0x4fb7:	call	0x15a0


0x4f85:	test	rdx, rdx
0x4f88:	je	0x4fb7


0x4f24:	call	0x15a0


0x4ebc:	mov	dword ptr [rsp], esi
0x4ebf:	mov	rcx, rsp
0x4ec2:	mov	rdx, -1
0x4ec9:	mov	rsi, rax
0x4ecc:	mov	qword ptr [rsp + 4], 0
0x4ed5:	mov	qword ptr [rsp + 0xc], 0x4000000
0x4ede:	mov	qword ptr [rsp + 0x14], 0
0x4ee7:	mov	qword ptr [rsp + 0x1c], 0
0x4ef0:	mov	qword ptr [rsp + 0x24], 0
0x4ef9:	mov	qword ptr [rsp + 0x2c], 0
0x4f02:	mov	dword ptr [rsp + 0x34], 0
0x4f0a:	call	0x4730


0x4d90:	call	0x15a0


0x4d2f:	mov	dword ptr [rsp], esi
0x4d32:	mov	rcx, rsp
0x4d35:	mov	rsi, rax
0x4d38:	mov	qword ptr [rsp + 4], 0
0x4d41:	mov	qword ptr [rsp + 0xc], 0
0x4d4a:	mov	qword ptr [rsp + 0x14], 0
0x4d53:	mov	qword ptr [rsp + 0x1c], 0
0x4d5c:	mov	qword ptr [rsp + 0x24], 0
0x4d65:	mov	qword ptr [rsp + 0x2c], 0
0x4d6e:	mov	dword ptr [rsp + 0x34], 0
0x4d76:	call	0x4730


0x4d04:	call	0x15a0


0x4c9c:	mov	dword ptr [rsp], esi
0x4c9f:	mov	rcx, rsp
0x4ca2:	mov	rdx, -1
0x4ca9:	mov	rsi, rax
0x4cac:	mov	qword ptr [rsp + 4], 0
0x4cb5:	mov	qword ptr [rsp + 0xc], 0
0x4cbe:	mov	qword ptr [rsp + 0x14], 0
0x4cc7:	mov	qword ptr [rsp + 0x1c], 0
0x4cd0:	mov	qword ptr [rsp + 0x24], 0
0x4cd9:	mov	qword ptr [rsp + 0x2c], 0
0x4ce2:	mov	dword ptr [rsp + 0x34], 0
0x4cea:	call	0x4730


0x4bb1:	mov	rdi, qword ptr [r12 + 8]
0x4bb6:	lea	rbx, [rip + 0x206563]
0x4bbd:	cmp	rdi, rbx
0x4bc0:	je	0x4bd9


0x4b86:	sub	eax, 2
0x4b89:	lea	rbx, [r12 + 0x18]
0x4b8e:	shl	rax, 4
0x4b92:	lea	rbp, [r12 + rax + 0x28]
0x4b97:	nop	word ptr [rax + rax]
0x4ba0:	mov	rdi, qword ptr [rbx]
0x4ba3:	add	rbx, 0x10
0x4ba7:	call	0x1590


0x49e7:	sub	rsp, 8
0x49eb:	call	0x15a0


0x49d9:	test	rdx, rdx
0x49dc:	je	0x49e7


0x1650:	jmp	qword ptr [rip + 0x209832]


0x33dd:	mov	rcx, qword ptr [rip + 0x207cdc]
0x33e4:	lea	rdi, [rip + 0x5435]
0x33eb:	mov	edx, 0x37
0x33f0:	mov	esi, 1
0x33f5:	call	0x1880


0x3366:	mov	esi, 0x2f
0x336b:	mov	rbx, rdi
0x336e:	call	0x16c0


0x1830:	jmp	qword ptr [rip + 0x209742]


0x2afd:	lea	rsi, [rip + 0x5674]
0x2b04:	xor	edi, edi
0x2b06:	call	0x1640


0x2acf:	lea	rsi, [rip + 0x567a]
0x2ad6:	xor	edi, edi
0x2ad8:	call	0x1640


0x26f3:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x26f5:	seta	al
0x26f8:	sbb	al, 0
0x26fa:	cmp	byte ptr [r9], 0x30
0x26fe:	movsx	eax, al
0x2701:	mov	dword ptr [rsp + 8], eax
0x2705:	je	0x2713


0x1600:	jmp	qword ptr [rip + 0x20985a]


0x2609:	cmp	qword ptr [rip + 0x2089df], 0
0x2611:	push	rbp
0x2612:	mov	rbp, rsp
0x2615:	je	0x2623


0x2638:	ret	


0x25f0:	pop	rbp
0x25f1:	ret	


0x25d8:	mov	rax, qword ptr [rip + 0x208a09]
0x25df:	test	rax, rax
0x25e2:	je	0x25f0


0x25a0:	pop	rbp
0x25a1:	ret	


0x2587:	mov	rax, qword ptr [rip + 0x208a42]
0x258e:	test	rax, rax
0x2591:	je	0x25a0




0x1562:	add	rsp, 8
0x1566:	ret	


0x1560:	call	rax




0x7272:	lea	rax, [rbx + rbx*4]
0x7276:	lea	rax, [rbx + rax*2]
0x727a:	mov	qword ptr [rcx + rax*8], rdi
0x727e:	mov	rax, qword ptr [rsp + 0x10]
0x7283:	mov	qword ptr [r14 + 0x10], rax
0x7287:	mov	rax, qword ptr [rsp + 0x18]
0x728c:	mov	qword ptr [r14 + 0x18], rax
0x7290:	xor	eax, eax
0x7292:	add	rsp, 0x58
0x7296:	pop	rbx
0x7297:	pop	rbp
0x7298:	pop	r12
0x729a:	pop	r13
0x729c:	pop	r14
0x729e:	pop	r15
0x72a0:	ret	


0x7260:	cmp	al, 0x25
0x7262:	lea	rbp, [rdi + 1]
0x7266:	je	0x72a8


0x701d:	mov	edx, dword ptr [rax]
0x701f:	movsxd	rdx, dword ptr [r8 + rdx*4]
0x7023:	add	rdx, r8
0x7026:	jmp	rdx


0x7060:	mov	eax, 0xffffffff
0x7065:	ret	


0x5e8a:	cmp	qword ptr [rdi + 0x48], 0
0x5e8f:	jne	0x5e7a


0x1850:	jmp	qword ptr [rip + 0x209732]


0x17a0:	jmp	qword ptr [rip + 0x20978a]


0x17c0:	jmp	qword ptr [rip + 0x20977a]










0x16b0:	jmp	qword ptr [rip + 0x209802]


0x5c40:	test	rbx, rbx
0x5c43:	jne	0x5c50


0x5bf6:	call	0x1780










0x589a:	call	0x1730


0x5851:	sub	rsp, 8
0x5855:	call	0x5900


0x5832:	mov	qword ptr [rsi], rax
0x5835:	mov	rsi, rax
0x5838:	jmp	0x5710


0x5827:	mov	rdx, rax
0x582a:	shr	rdx, 1
0x582d:	lea	rax, [rdx + rax + 1]
0x5832:	mov	qword ptr [rsi], rax
0x5835:	mov	rsi, rax
0x5838:	jmp	0x5710


0x57e8:	xor	edx, edx
0x57ea:	mov	eax, 0x80
0x57ef:	xor	r8d, r8d
0x57f2:	div	r9
0x57f5:	test	rax, rax
0x57f8:	sete	r8b
0x57fc:	lea	rcx, [r8 + rax]
0x5800:	jmp	0x57c5


0x57c5:	mov	rax, rcx
0x57c8:	mul	r9
0x57cb:	seto	dl
0x57ce:	test	rax, rax
0x57d1:	movzx	edx, dl
0x57d4:	js	0x57db


0x57db:	sub	rsp, 8
0x57df:	call	0x5900


0x579f:	mov	rax, rcx
0x57a2:	shr	rax, 1
0x57a5:	lea	rcx, [rax + rcx + 1]
0x57aa:	mov	qword ptr [rsi], rcx
0x57ad:	imul	rcx, r9
0x57b1:	mov	rsi, rcx
0x57b4:	jmp	0x5710


0x5769:	jmp	0x5710


0x5738:	call	0x1590


0x17e0:	jmp	qword ptr [rip + 0x20976a]


0x56e9:	jmp	0x56b0




0x55ec:	test	r11b, r11b
0x55ef:	jne	0x5615


0x55e2:	add	r9, 1
0x55e6:	cmp	r9, 0xa
0x55ea:	jne	0x55c0


0x55d6:	mov	rax, qword ptr [rax]
0x55d9:	test	rax, rax
0x55dc:	mov	qword ptr [r8 + r9*8], rax
0x55e0:	je	0x55ec


0x551b:	call	0x5090


0x5511:	add	r9, 1
0x5515:	cmp	r9, 0xa
0x5519:	jne	0x54f0


0x5505:	mov	rax, qword ptr [r11]
0x5508:	test	rax, rax
0x550b:	mov	qword ptr [r8 + r9*8], rax
0x550f:	je	0x551b


0x54c0:	add	r9, 1
0x54c4:	cmp	qword ptr [r8 + r9*8], 0
0x54c9:	jne	0x54c0


0x1890:	jmp	qword ptr [rip + 0x209712]


0x15a0:	jmp	qword ptr [rip + 0x20988a]


0x4f8a:	mov	qword ptr [rsp + 0x28], rsi
0x4f8f:	mov	qword ptr [rsp + 0x30], rdx
0x4f94:	mov	rcx, rsp
0x4f97:	mov	rdx, r8
0x4f9a:	mov	rsi, r9
0x4f9d:	call	0x4730


0x4bd9:	lea	rbx, [rip + 0x206490]
0x4be0:	cmp	r12, rbx
0x4be3:	je	0x4bf4


0x4bc2:	call	0x1590


0x1590:	jmp	qword ptr [rip + 0x209892]


0x49de:	mov	qword ptr [rdi + 0x28], rsi
0x49e2:	mov	qword ptr [rdi + 0x30], rdx
0x49e6:	ret	




0x1880:	jmp	qword ptr [rip + 0x20971a]


0x16c0:	jmp	qword ptr [rip + 0x2097fa]




0x2713:	movzx	eax, byte ptr [r13 + 1]
0x2718:	lea	rdx, [r13 + 1]
0x271c:	cmp	al, 0x30
0x271e:	je	0x2710


0x2707:	jmp	0x2731




0x2623:	call	0x2570


0x2617:	mov	rdi, qword ptr [rip + 0x2089ea]
0x261e:	call	0x18e0


0x25e4:	pop	rbp
0x25e5:	jmp	rax


0x2593:	pop	rbp
0x2594:	jmp	rax


0x72a8:	lea	rax, [rbx + rbx*4]
0x72ac:	mov	r13, r8
0x72af:	lea	rax, [rbx + rax*2]
0x72b3:	lea	r12, [rcx + rax*8]
0x72b7:	mov	qword ptr [r12], rdi
0x72bb:	mov	dword ptr [r12 + 0x10], 0
0x72c4:	mov	qword ptr [r12 + 0x18], 0
0x72cd:	mov	qword ptr [r12 + 0x20], 0
0x72d6:	mov	qword ptr [r12 + 0x28], r8
0x72db:	mov	qword ptr [r12 + 0x30], 0
0x72e4:	mov	qword ptr [r12 + 0x38], 0
0x72ed:	mov	qword ptr [r12 + 0x40], r8
0x72f2:	mov	qword ptr [r12 + 0x50], r8
0x72f7:	movzx	ebx, byte ptr [rdi + 1]
0x72fb:	lea	eax, [rbx - 0x30]
0x72fe:	cmp	al, 9
0x7300:	ja	0x733e


0x7268:	mov	rdi, rbp
0x726b:	movzx	eax, byte ptr [rdi]
0x726e:	test	al, al
0x7270:	jne	0x7260


0x5e91:	push	r12
0x5e93:	push	rbp
0x5e94:	mov	r12d, edx
0x5e97:	push	rbx
0x5e98:	mov	rbp, rsi
0x5e9b:	mov	rbx, rdi
0x5e9e:	call	0x1770










0x5c45:	add	rsp, 0x10
0x5c49:	fldz	
0x5c4b:	pop	rbx
0x5c4c:	pop	rbp
0x5c4d:	pop	r12
0x5c4f:	ret	


0x5c50:	mov	qword ptr [rbx], rbp
0x5c53:	add	rsp, 0x10
0x5c57:	fldz	
0x5c59:	pop	rbx
0x5c5a:	pop	rbp
0x5c5b:	pop	r12
0x5c5d:	ret	


0x1780:	jmp	qword ptr [rip + 0x20979a]


0x1730:	jmp	qword ptr [rip + 0x2097c2]


0x57d6:	test	rdx, rdx
0x57d9:	je	0x57aa




0x55f1:	call	0x5090


0x5615:	mov	dword ptr [rsp + 8], r10d
0x561a:	jmp	0x55f1


0x55c0:	cmp	r10d, 0x2f
0x55c4:	ja	0x561c


0x54f0:	mov	eax, dword ptr [r10]
0x54f3:	cmp	eax, 0x2f
0x54f6:	ja	0x553a






0x4bf4:	pop	rbx
0x4bf5:	mov	dword ptr [rip + 0x206459], 1
0x4bff:	pop	rbp
0x4c00:	pop	r12
0x4c02:	ret	


0x4be5:	mov	rdi, r12
0x4be8:	call	0x1590








0x2710:	mov	r13, rdx
0x2713:	movzx	eax, byte ptr [r13 + 1]
0x2718:	lea	rdx, [r13 + 1]
0x271c:	cmp	al, 0x30
0x271e:	je	0x2710


0x2720:	test	al, al
0x2722:	jne	0x2902


0x2731:	cmp	byte ptr [r8], 0x30
0x2735:	mov	rbp, r8
0x2738:	je	0x2743


0x18e0:	jmp	qword ptr [rip + 0x20970a]


0x7302:	jmp	0x773a


0x733e:	lea	rax, [rbp + 1]
0x7342:	cmp	bl, 0x27
0x7345:	mov	rdx, rax
0x7348:	jne	0x7310






0x57aa:	mov	qword ptr [rsi], rcx
0x57ad:	imul	rcx, r9
0x57b1:	mov	rsi, rcx
0x57b4:	jmp	0x5710


0x2728:	cmp	r9, rdx
0x272b:	je	0x2902


0x2902:	mov	r13, rdx
0x2905:	jmp	0x2731


0x2743:	movzx	eax, byte ptr [rbp + 1]
0x2747:	lea	rdx, [rbp + 1]
0x274b:	cmp	al, 0x30
0x274d:	je	0x2740


0x273a:	jmp	0x2760


0x773a:	mov	rax, rbp
0x773d:	nop	dword ptr [rax]
0x7740:	add	rax, 1
0x7744:	movzx	edx, byte ptr [rax]
0x7747:	lea	ecx, [rdx - 0x30]
0x774a:	cmp	cl, 9
0x774d:	jbe	0x7740


0x734a:	or	dword ptr [r12 + 0x10], 1
0x7350:	jmp	0x7338


0x7310:	cmp	bl, 0x2d
0x7313:	je	0x7358


0x2740:	mov	rbp, rdx
0x2743:	movzx	eax, byte ptr [rbp + 1]
0x2747:	lea	rdx, [rbp + 1]
0x274b:	cmp	al, 0x30
0x274d:	je	0x2740


0x274f:	cmp	r8, rdx
0x2752:	je	0x28fa


0x2760:	mov	rdi, r13
0x2763:	mov	ebx, 0x1f
0x2768:	call	0x1660


0x7740:	add	rax, 1
0x7744:	movzx	edx, byte ptr [rax]
0x7747:	lea	ecx, [rdx - 0x30]
0x774a:	cmp	cl, 9
0x774d:	jbe	0x7740


0x774f:	cmp	dl, 0x24
0x7752:	mov	r13, r8
0x7755:	jne	0x733e


0x7338:	movzx	ebx, byte ptr [rax]
0x733b:	mov	rbp, rax
0x733e:	lea	rax, [rbp + 1]
0x7342:	cmp	bl, 0x27
0x7345:	mov	rdx, rax
0x7348:	jne	0x7310


0x7358:	or	dword ptr [r12 + 0x10], 2
0x735e:	jmp	0x7338


0x7315:	cmp	bl, 0x2b
0x7318:	je	0x7360


0x28fa:	mov	rbp, rdx
0x28fd:	jmp	0x2760


0x2758:	test	al, al
0x275a:	jne	0x28fa


0x775b:	xor	edx, edx
0x775d:	movsx	eax, bl
0x7760:	movabs	rdi, 0x1999999999999999
0x776a:	mov	rsi, r8
0x776d:	sub	eax, 0x30
0x7770:	cmp	rdx, rdi
0x7773:	cdqe	
0x7775:	ja	0x777e


0x7360:	or	dword ptr [r12 + 0x10], 4
0x7366:	jmp	0x7338


0x731a:	cmp	bl, 0x20
0x731d:	je	0x7370


0x7777:	lea	rsi, [rdx + rdx*4]
0x777b:	add	rsi, rsi
0x777e:	mov	rcx, rbp
0x7781:	add	rax, rsi
0x7784:	movzx	ebx, byte ptr [rbp + 1]
0x7788:	setb	sil
0x778c:	add	rbp, 1
0x7790:	mov	rdx, rax
0x7793:	movzx	esi, sil
0x7797:	test	rsi, rsi
0x779a:	lea	edi, [rbx - 0x30]
0x779d:	jne	0x7b2e


0x777e:	mov	rcx, rbp
0x7781:	add	rax, rsi
0x7784:	movzx	ebx, byte ptr [rbp + 1]
0x7788:	setb	sil
0x778c:	add	rbp, 1
0x7790:	mov	rdx, rax
0x7793:	movzx	esi, sil
0x7797:	test	rsi, rsi
0x779a:	lea	edi, [rbx - 0x30]
0x779d:	jne	0x7b2e


0x7370:	or	dword ptr [r12 + 0x10], 8
0x7376:	jmp	0x7338


0x731f:	cmp	bl, 0x23
0x7322:	je	0x7380


0x77a3:	cmp	dil, 9
0x77a7:	jbe	0x775d


0x7b2e:	cmp	dil, 9
0x7b32:	ja	0x7a3b


0x7380:	or	dword ptr [r12 + 0x10], 0x10
0x7386:	jmp	0x7338


0x7324:	cmp	bl, 0x30
0x7327:	je	0x7390


0x775d:	movsx	eax, bl
0x7760:	movabs	rdi, 0x1999999999999999
0x776a:	mov	rsi, r8
0x776d:	sub	eax, 0x30
0x7770:	cmp	rdx, rdi
0x7773:	cdqe	
0x7775:	ja	0x777e


0x77a9:	mov	r13, rax
0x77ac:	sub	r13, 1
0x77b0:	cmp	r13, -3
0x77b4:	ja	0x7a3b


0x7b38:	movsx	eax, bl
0x7b3b:	mov	rsi, r8
0x7b3e:	mov	rcx, rbp
0x7b41:	sub	eax, 0x30
0x7b44:	cdqe	
0x7b46:	jmp	0x7781


0x7a3b:	mov	rcx, qword ptr [r15 + 8]
0x7a3f:	cmp	qword ptr [rsp + 8], rcx
0x7a44:	je	0x7a4e


0x7390:	or	dword ptr [r12 + 0x10], 0x20
0x7396:	jmp	0x7338


0x7329:	cmp	bl, 0x49
0x732c:	jne	0x73a0


0x77ba:	lea	rbp, [rcx + 2]
0x77be:	movzx	ebx, byte ptr [rcx + 2]
0x77c2:	jmp	0x733e


0x7781:	add	rax, rsi
0x7784:	movzx	ebx, byte ptr [rbp + 1]
0x7788:	setb	sil
0x778c:	add	rbp, 1
0x7790:	mov	rdx, rax
0x7793:	movzx	esi, sil
0x7797:	test	rsi, rsi
0x779a:	lea	edi, [rbx - 0x30]
0x779d:	jne	0x7b2e


0x7a4e:	mov	rdi, qword ptr [r14 + 8]
0x7a52:	cmp	qword ptr [rsp + 0x28], rdi
0x7a57:	je	0x7a5e


0x7a46:	mov	rdi, rcx
0x7a49:	call	0x1590


0x732e:	or	dword ptr [r12 + 0x10], 0x40
0x7334:	nop	dword ptr [rax]
0x7338:	movzx	ebx, byte ptr [rax]
0x733b:	mov	rbp, rax
0x733e:	lea	rax, [rbp + 1]
0x7342:	cmp	bl, 0x27
0x7345:	mov	rdx, rax
0x7348:	jne	0x7310


0x73a0:	cmp	bl, 0x2a
0x73a3:	je	0x7559


0x7a5e:	call	0x15b0


0x7a59:	call	0x1590


0x7559:	mov	rsi, qword ptr [rsp + 0x10]
0x755e:	mov	ecx, 1
0x7563:	mov	qword ptr [r12 + 0x18], rbp
0x7568:	mov	qword ptr [r12 + 0x20], rax
0x756d:	test	rsi, rsi
0x7570:	cmovne	rcx, rsi
0x7574:	mov	qword ptr [rsp + 0x10], rcx
0x7579:	movzx	ecx, byte ptr [rbp + 1]
0x757d:	lea	esi, [rcx - 0x30]
0x7580:	cmp	sil, 9
0x7584:	jbe	0x7865


0x73a9:	lea	ecx, [rbx - 0x30]
0x73ac:	cmp	cl, 9
0x73af:	jbe	0x77c7


0x7865:	mov	rsi, rax
0x7868:	add	rsi, 1
0x786c:	movzx	edi, byte ptr [rsi]
0x786f:	lea	r11d, [rdi - 0x30]
0x7873:	cmp	r11b, 9
0x7877:	jbe	0x7868


0x758a:	mov	rsi, qword ptr [rsp + 0x20]
0x758f:	cmp	rsi, -1
0x7593:	lea	rdx, [rsi + 1]
0x7597:	mov	qword ptr [r12 + 0x28], rsi
0x759c:	je	0x7a3b


0x77c7:	mov	qword ptr [r12 + 0x18], rbp
0x77cc:	movzx	edi, byte ptr [rbp]
0x77d0:	mov	rsi, rbp
0x77d3:	lea	ecx, [rdi - 0x30]
0x77d6:	cmp	cl, 9
0x77d9:	jbe	0x77e7


0x73b5:	cmp	bl, 0x2e
0x73b8:	je	0x768f


0x7868:	add	rsi, 1
0x786c:	movzx	edi, byte ptr [rsi]
0x786f:	lea	r11d, [rdi - 0x30]
0x7873:	cmp	r11b, 9
0x7877:	jbe	0x7868


0x7879:	cmp	dil, 0x24
0x787d:	jne	0x758a


0x75a2:	mov	rbx, qword ptr [rsp + 0x20]
0x75a7:	mov	rbp, rax
0x75aa:	mov	qword ptr [rsp + 0x20], rdx
0x75af:	cmp	r9, rbx
0x75b2:	mov	rcx, qword ptr [r15 + 8]
0x75b6:	ja	0x7c32


0x77e7:	movzx	edi, byte ptr [rax]
0x77ea:	lea	edx, [rdi - 0x30]
0x77ed:	cmp	dl, 9
0x77f0:	jbe	0x77e0


0x77db:	jmp	0x7810


0x768f:	cmp	byte ptr [rbp + 1], 0x2a
0x7693:	mov	qword ptr [r12 + 0x30], rbp
0x7698:	jne	0x781e


0x73be:	xor	eax, eax
0x73c0:	mov	esi, 1
0x73c5:	jmp	0x73f7


0x7883:	xor	esi, esi
0x7885:	movsx	eax, cl
0x7888:	movabs	rdi, 0x1999999999999999
0x7892:	mov	rcx, r8
0x7895:	sub	eax, 0x30
0x7898:	cmp	rsi, rdi
0x789b:	cdqe	
0x789d:	ja	0x78a6


0x75bc:	add	r9, r9
0x75bf:	lea	rax, [rbx + 1]
0x75c3:	cmp	r9, rbx
0x75c6:	cmovbe	r9, rax
0x75ca:	movabs	rax, 0x7ffffffffffffff
0x75d4:	cmp	r9, rax
0x75d7:	ja	0x7e7b


0x7c32:	mov	rax, qword ptr [r15]
0x7c35:	jmp	0x7637


0x77e0:	mov	rbp, rax
0x77e3:	add	rax, 1
0x77e7:	movzx	edi, byte ptr [rax]
0x77ea:	lea	edx, [rdi - 0x30]
0x77ed:	cmp	dl, 9
0x77f0:	jbe	0x77e0


0x77f2:	mov	rcx, rax
0x77f5:	lea	rdx, [rbp + 2]
0x77f9:	mov	rbp, rax
0x77fc:	sub	rcx, rsi
0x77ff:	mov	rsi, qword ptr [rsp + 0x10]
0x7804:	cmp	rsi, rcx
0x7807:	cmovae	rcx, rsi
0x780b:	mov	qword ptr [rsp + 0x10], rcx
0x7810:	mov	qword ptr [r12 + 0x20], rbp
0x7815:	movzx	ebx, byte ptr [rbp]
0x7819:	jmp	0x73b5


0x7810:	mov	qword ptr [r12 + 0x20], rbp
0x7815:	movzx	ebx, byte ptr [rbp]
0x7819:	jmp	0x73b5


0x769e:	mov	rsi, qword ptr [rsp + 0x18]
0x76a3:	lea	r11, [rbp + 2]
0x76a7:	mov	eax, 2
0x76ac:	mov	qword ptr [r12 + 0x38], r11
0x76b1:	cmp	rsi, 2
0x76b5:	cmovae	rax, rsi
0x76b9:	mov	qword ptr [rsp + 0x18], rax
0x76be:	movsx	eax, byte ptr [rbp + 2]
0x76c2:	lea	edx, [rax - 0x30]
0x76c5:	cmp	dl, 9
0x76c8:	jbe	0x7d5c


0x781e:	movzx	eax, byte ptr [rbp + 1]
0x7822:	sub	eax, 0x30
0x7825:	cmp	al, 9
0x7827:	ja	0x783e


0x73f7:	add	rbp, 1
0x73fb:	cmp	bl, 0x68
0x73fe:	jne	0x73d0


0x789f:	lea	rcx, [rsi + rsi*4]
0x78a3:	add	rcx, rcx
0x78a6:	mov	rbp, rdx
0x78a9:	xor	r11d, r11d
0x78ac:	add	rax, rcx
0x78af:	movzx	ecx, byte ptr [rdx + 1]
0x78b3:	setb	r11b
0x78b7:	add	rdx, 1
0x78bb:	mov	rsi, rax
0x78be:	test	r11, r11
0x78c1:	lea	edi, [rcx - 0x30]
0x78c4:	jne	0x7dce


0x78a6:	mov	rbp, rdx
0x78a9:	xor	r11d, r11d
0x78ac:	add	rax, rcx
0x78af:	movzx	ecx, byte ptr [rdx + 1]
0x78b3:	setb	r11b
0x78b7:	add	rdx, 1
0x78bb:	mov	rsi, rax
0x78be:	test	r11, r11
0x78c1:	lea	edi, [rcx - 0x30]
0x78c4:	jne	0x7dce


0x75dd:	mov	rsi, r9
0x75e0:	mov	qword ptr [rsp + 0x40], r9
0x75e5:	mov	qword ptr [rsp + 0x38], r10
0x75ea:	shl	rsi, 5
0x75ee:	cmp	qword ptr [rsp + 8], rcx
0x75f3:	mov	qword ptr [rsp + 0x30], r8
0x75f8:	je	0x7d11


0x7e7b:	cmp	qword ptr [rsp + 8], rcx
0x7e80:	jne	0x7ce4


0x7637:	mov	rdx, rax
0x763a:	shl	rdx, 5
0x763e:	add	rdx, rcx
0x7641:	cmp	rax, rbx
0x7644:	ja	0x7666


0x7d5c:	mov	rdx, r11
0x7d5f:	add	rdx, 1
0x7d63:	movzx	ecx, byte ptr [rdx]
0x7d66:	lea	esi, [rcx - 0x30]
0x7d69:	cmp	sil, 9
0x7d6d:	jbe	0x7d5f


0x76ce:	mov	rbx, qword ptr [r12 + 0x40]
0x76d3:	cmp	rbx, -1
0x76d7:	je	0x7d35


0x783e:	mov	rsi, qword ptr [rsp + 0x18]
0x7843:	mov	rax, rdx
0x7846:	mov	qword ptr [r12 + 0x38], rdx
0x784b:	sub	rax, rbp
0x784e:	movzx	ebx, byte ptr [rdx]
0x7851:	mov	rbp, rdx
0x7854:	cmp	rsi, rax
0x7857:	cmovae	rax, rsi
0x785b:	mov	qword ptr [rsp + 0x18], rax
0x7860:	jmp	0x73be


0x7400:	mov	ecx, eax
0x7402:	mov	edx, esi
0x7404:	and	ecx, 1
0x7407:	shl	edx, cl
0x7409:	or	eax, edx
0x740b:	jmp	0x73f3


0x73d0:	cmp	bl, 0x4c
0x73d3:	je	0x7410


0x78ca:	cmp	dil, 9
0x78ce:	jbe	0x7885


0x7dce:	cmp	dil, 9
0x7dd2:	ja	0x7a3b


0x7d11:	mov	rdi, rsi
0x7d14:	call	0x1790


0x75fe:	mov	rdi, rcx
0x7601:	call	0x17e0


0x7e86:	jmp	0x7cec


0x7ce4:	mov	rdi, rcx
0x7ce7:	call	0x1590


0x7666:	shl	rbx, 5
0x766a:	lea	rax, [rcx + rbx]
0x766e:	mov	edx, dword ptr [rax]
0x7670:	test	edx, edx
0x7672:	jne	0x7b4b


0x7d5f:	add	rdx, 1
0x7d63:	movzx	ecx, byte ptr [rdx]
0x7d66:	lea	esi, [rcx - 0x30]
0x7d69:	cmp	sil, 9
0x7d6d:	jbe	0x7d5f


0x7d6f:	cmp	cl, 0x24
0x7d72:	jne	0x76ce


0x7d35:	mov	rsi, qword ptr [rsp + 0x20]
0x7d3a:	cmp	rsi, -1
0x7d3e:	lea	rax, [rsi + 1]
0x7d42:	mov	qword ptr [r12 + 0x40], rsi
0x7d47:	je	0x7a3b


0x76dd:	cmp	r9, rbx
0x76e0:	mov	rcx, qword ptr [r15 + 8]
0x76e4:	jbe	0x7c4f


0x7830:	add	rdx, 1
0x7834:	movzx	eax, byte ptr [rdx]
0x7837:	sub	eax, 0x30
0x783a:	cmp	al, 9
0x783c:	jbe	0x7830


0x73f3:	movzx	ebx, byte ptr [rbp]
0x73f7:	add	rbp, 1
0x73fb:	cmp	bl, 0x68
0x73fe:	jne	0x73d0


0x7410:	or	eax, 4
0x7413:	jmp	0x73f3


0x73d5:	cmp	bl, 0x6c
0x73d8:	je	0x73f0


0x7885:	movsx	eax, cl
0x7888:	movabs	rdi, 0x1999999999999999
0x7892:	mov	rcx, r8
0x7895:	sub	eax, 0x30
0x7898:	cmp	rsi, rdi
0x789b:	cdqe	
0x789d:	ja	0x78a6


0x78d0:	lea	rbx, [rax - 1]
0x78d4:	cmp	rbx, -3
0x78d8:	ja	0x7a3b


0x7dd8:	movsx	eax, cl
0x7ddb:	mov	rbp, rdx
0x7dde:	mov	rcx, r8
0x7de1:	sub	eax, 0x30
0x7de4:	cdqe	
0x7de6:	jmp	0x78a9


0x7cec:	mov	rdi, qword ptr [r14 + 8]
0x7cf0:	cmp	qword ptr [rsp + 0x28], rdi
0x7cf5:	je	0x7cfc


0x7650:	add	rax, 1
0x7654:	mov	dword ptr [rdx], 0
0x765a:	add	rdx, 0x20
0x765e:	cmp	rax, rbx
0x7661:	jbe	0x7650


0x7663:	mov	qword ptr [r15], rax
0x7666:	shl	rbx, 5
0x766a:	lea	rax, [rcx + rbx]
0x766e:	mov	edx, dword ptr [rax]
0x7670:	test	edx, edx
0x7672:	jne	0x7b4b


0x7678:	mov	dword ptr [rax], 5
0x767e:	movzx	ebx, byte ptr [rbp]
0x7682:	lea	rdx, [rbp + 1]
0x7686:	cmp	bl, 0x2e
0x7689:	jne	0x73be


0x7b4b:	cmp	edx, 5
0x7b4e:	jne	0x7a3f


0x7d78:	xor	ecx, ecx
0x7d7a:	movabs	rsi, 0x1999999999999999
0x7d84:	sub	eax, 0x30
0x7d87:	mov	rdx, r8
0x7d8a:	cmp	rcx, rsi
0x7d8d:	cdqe	
0x7d8f:	ja	0x7d98


0x7d4d:	mov	rbx, qword ptr [rsp + 0x20]
0x7d52:	mov	qword ptr [rsp + 0x20], rax
0x7d57:	jmp	0x76dd


0x7c4f:	add	r9, r9
0x7c52:	lea	rax, [rbx + 1]
0x7c56:	cmp	r9, rbx
0x7c59:	cmovbe	r9, rax
0x7c5d:	movabs	rax, 0x7ffffffffffffff
0x7c67:	cmp	r9, rax
0x7c6a:	ja	0x7e7b


0x76ea:	mov	rax, qword ptr [r15]
0x76ed:	mov	rdx, rax
0x76f0:	shl	rdx, 5
0x76f4:	add	rdx, rcx
0x76f7:	cmp	rax, rbx
0x76fa:	ja	0x7716


0x73f0:	add	eax, 8
0x73f3:	movzx	ebx, byte ptr [rbp]
0x73f7:	add	rbp, 1
0x73fb:	cmp	bl, 0x68
0x73fe:	jne	0x73d0


0x73da:	cmp	bl, 0x6a
0x73dd:	je	0x73f0


0x78de:	mov	qword ptr [r12 + 0x28], rbx
0x78e3:	add	rbp, 2
0x78e7:	jmp	0x75af


0x78a9:	xor	r11d, r11d
0x78ac:	add	rax, rcx
0x78af:	movzx	ecx, byte ptr [rdx + 1]
0x78b3:	setb	r11b
0x78b7:	add	rdx, 1
0x78bb:	mov	rsi, rax
0x78be:	test	r11, r11
0x78c1:	lea	edi, [rcx - 0x30]
0x78c4:	jne	0x7dce


0x7cfc:	call	0x15b0


0x7cf7:	call	0x1590


0x7b54:	movzx	ebx, byte ptr [rbp]
0x7b58:	lea	rdx, [rbp + 1]
0x7b5c:	jmp	0x73b5


0x7a3f:	cmp	qword ptr [rsp + 8], rcx
0x7a44:	je	0x7a4e


0x7d91:	lea	rdx, [rcx + rcx*4]
0x7d95:	add	rdx, rdx
0x7d98:	mov	rsi, r11
0x7d9b:	xor	ebx, ebx
0x7d9d:	add	rdx, rax
0x7da0:	movsx	eax, byte ptr [r11 + 1]
0x7da5:	setb	bl
0x7da8:	add	r11, 1
0x7dac:	mov	rcx, rdx
0x7daf:	test	rbx, rbx
0x7db2:	lea	edi, [rax - 0x30]
0x7db5:	je	0x7e28


0x7d98:	mov	rsi, r11
0x7d9b:	xor	ebx, ebx
0x7d9d:	add	rdx, rax
0x7da0:	movsx	eax, byte ptr [r11 + 1]
0x7da5:	setb	bl
0x7da8:	add	r11, 1
0x7dac:	mov	rcx, rdx
0x7daf:	test	rbx, rbx
0x7db2:	lea	edi, [rax - 0x30]
0x7db5:	je	0x7e28


0x7c70:	mov	rsi, r9
0x7c73:	mov	qword ptr [rsp + 0x48], r9
0x7c78:	mov	qword ptr [rsp + 0x40], r10
0x7c7d:	shl	rsi, 5
0x7c81:	cmp	qword ptr [rsp + 8], rcx
0x7c86:	mov	qword ptr [rsp + 0x38], r8
0x7c8b:	mov	qword ptr [rsp + 0x30], r11
0x7c90:	je	0x7e4e


0x7716:	shl	rbx, 5
0x771a:	lea	rax, [rcx + rbx]
0x771e:	mov	edx, dword ptr [rax]
0x7720:	test	edx, edx
0x7722:	jne	0x7c3a


0x73df:	mov	edx, ebx
0x73e1:	and	edx, 0xffffffdf
0x73e4:	cmp	dl, 0x5a
0x73e7:	je	0x73f0


0x75af:	cmp	r9, rbx
0x75b2:	mov	rcx, qword ptr [r15 + 8]
0x75b6:	ja	0x7c32


0x7e28:	cmp	dil, 9
0x7e2c:	jbe	0x7d7a


0x7db7:	cmp	dil, 9
0x7dbb:	ja	0x7a3b


0x7e4e:	mov	rdi, rsi
0x7e51:	call	0x1790


0x7c96:	mov	rdi, rcx
0x7c99:	call	0x17e0


0x7700:	add	rax, 1
0x7704:	mov	dword ptr [rdx], 0
0x770a:	add	rdx, 0x20
0x770e:	cmp	rax, rbx
0x7711:	jbe	0x7700


0x7713:	mov	qword ptr [r15], rax
0x7716:	shl	rbx, 5
0x771a:	lea	rax, [rcx + rbx]
0x771e:	mov	edx, dword ptr [rax]
0x7720:	test	edx, edx
0x7722:	jne	0x7c3a


0x7728:	mov	dword ptr [rax], 5
0x772e:	mov	rbp, r11
0x7731:	movzx	ebx, byte ptr [r11]
0x7735:	jmp	0x73be


0x7c3a:	cmp	edx, 5
0x7c3d:	jne	0x7a3f


0x73e9:	cmp	bl, 0x74
0x73ec:	jne	0x7418


0x7d7a:	movabs	rsi, 0x1999999999999999
0x7d84:	sub	eax, 0x30
0x7d87:	mov	rdx, r8
0x7d8a:	cmp	rcx, rsi
0x7d8d:	cdqe	
0x7d8f:	ja	0x7d98


0x7e32:	lea	rbx, [rdx - 1]
0x7e36:	cmp	rbx, -3
0x7e3a:	ja	0x7a3b


0x7dc1:	sub	eax, 0x30
0x7dc4:	mov	rdx, r8
0x7dc7:	mov	rsi, r11
0x7dca:	cdqe	
0x7dcc:	jmp	0x7d9b


0x7c43:	movzx	ebx, byte ptr [r11]
0x7c47:	mov	rbp, r11
0x7c4a:	jmp	0x73be


0x7418:	lea	edx, [rbx - 0x25]
0x741b:	cmp	dl, 0x53
0x741e:	ja	0x7a3b


0x7e40:	mov	qword ptr [r12 + 0x40], rbx
0x7e45:	lea	r11, [rsi + 2]
0x7e49:	jmp	0x76dd


0x7d9b:	xor	ebx, ebx
0x7d9d:	add	rdx, rax
0x7da0:	movsx	eax, byte ptr [r11 + 1]
0x7da5:	setb	bl
0x7da8:	add	r11, 1
0x7dac:	mov	rcx, rdx
0x7daf:	test	rbx, rbx
0x7db2:	lea	edi, [rax - 0x30]
0x7db5:	je	0x7e28


0x7424:	lea	rcx, [rip + 0x1d81]
0x742b:	movzx	edx, dl
0x742e:	movsxd	rdx, dword ptr [rcx + rdx*4]
0x7432:	add	rdx, rcx
0x7435:	jmp	rdx


0x2628:	mov	byte ptr [rip + 0x208a99], 1
0x262f:	pop	rbp
0x2630:	ret	


0x5f2e:	test	eax, eax
0x5f30:	js	0x6d98


0x6d98:	xor	r15d, r15d
0x6d9b:	jmp	0x60af


0x5f36:	mov	rsi, r14
0x5f39:	mov	rdi, r12
0x5f3c:	call	0x6ff0


0x60af:	mov	rdi, qword ptr [rbp - 0x38]
0x60b3:	xor	rdi, qword ptr fs:[0x28]
0x60bc:	mov	rax, r15
0x60bf:	jne	0x6fc7


0x60c5:	lea	rsp, [rbp - 0x28]
0x60c9:	pop	rbx
0x60ca:	pop	r12
0x60cc:	pop	r13
0x60ce:	pop	r14
0x60d0:	pop	r15
0x60d2:	pop	rbp
0x60d3:	ret	


0x6fc7:	call	0x1670


0x1670:	jmp	qword ptr [rip + 0x209822]




0x5f41:	test	eax, eax
0x5f43:	js	0x6e00


0x6e00:	mov	rax, qword ptr [rbp - 0x408]
0x6e07:	mov	rdi, qword ptr [rbp - 0x2b8]
0x6e0e:	add	rax, 0x20
0x6e12:	cmp	rdi, rax
0x6e15:	je	0x6e1c


0x5f49:	mov	rax, qword ptr [rbp - 0x2b0]
0x5f50:	mov	rdx, -1
0x5f57:	add	rax, 7
0x5f5b:	cmp	rax, 6
0x5f5f:	cmovbe	rax, rdx
0x5f63:	add	rax, qword ptr [rbp - 0x2a8]
0x5f6a:	jb	0x6998


0x6e1c:	mov	rax, qword ptr [rbp - 0x410]
0x6e23:	mov	rdi, qword ptr [rbp - 0x3a8]
0x6e2a:	add	rax, 0x10
0x6e2e:	cmp	rdi, rax
0x6e31:	je	0x6e38


0x6e17:	call	0x1590


0x6998:	call	0x15b0


0x5f70:	mov	rdi, rax
0x5f73:	xor	r8d, r8d
0x5f76:	add	rdi, 6
0x5f7a:	setb	r8b
0x5f7e:	jb	0x6998


0x6e38:	call	0x15b0


0x6e33:	call	0x1590


0x5f84:	cmp	rdi, 0xf9f
0x5f8b:	jbe	0x60d8


0x60d8:	add	rax, 0x24
0x60dc:	mov	qword ptr [rbp - 0x420], 0
0x60e7:	and	rax, 0xfffffffffffffff0
0x60eb:	sub	rsp, rax
0x60ee:	lea	rax, [rsp + 0xf]
0x60f3:	and	rax, 0xfffffffffffffff0
0x60f7:	mov	qword ptr [rbp - 0x3d8], rax
0x60fe:	jmp	0x5fc5


0x5f91:	cmp	rdi, -1
0x5f95:	mov	qword ptr [rbp - 0x3c8], r8
0x5f9c:	je	0x6998


0x5fc5:	xor	r12d, r12d
0x5fc8:	cmp	qword ptr [rbp - 0x3e8], 0
0x5fd0:	je	0x5fdc


0x5fa2:	call	0x1790


0x5fdc:	mov	r13, qword ptr [rbp - 0x2b8]
0x5fe3:	lea	rax, [rbp - 0x3bc]
0x5fea:	mov	r15, qword ptr [rbp - 0x3e8]
0x5ff1:	mov	qword ptr [rbp - 0x400], 0
0x5ffc:	mov	qword ptr [rbp - 0x3f0], rax
0x6003:	mov	rax, rbx
0x6006:	mov	rbx, r8
0x6009:	mov	rcx, qword ptr [r13]
0x600d:	mov	r8, rax
0x6010:	cmp	rcx, r8
0x6013:	je	0x6981


0x5fd2:	mov	rax, qword ptr [rbp - 0x418]
0x5fd9:	mov	r12, qword ptr [rax]
0x5fdc:	mov	r13, qword ptr [rbp - 0x2b8]
0x5fe3:	lea	rax, [rbp - 0x3bc]
0x5fea:	mov	r15, qword ptr [rbp - 0x3e8]
0x5ff1:	mov	qword ptr [rbp - 0x400], 0
0x5ffc:	mov	qword ptr [rbp - 0x3f0], rax
0x6003:	mov	rax, rbx
0x6006:	mov	rbx, r8
0x6009:	mov	rcx, qword ptr [r13]
0x600d:	mov	r8, rax
0x6010:	cmp	rcx, r8
0x6013:	je	0x6981


0x6981:	mov	r14, rbx
0x6984:	jmp	0x6183


0x6019:	sub	rcx, r8
0x601c:	mov	rax, rbx
0x601f:	add	rax, rcx
0x6022:	mov	r14, rax
0x6025:	jae	0x6108


0x6183:	mov	rax, qword ptr [rbp - 0x400]
0x618a:	cmp	qword ptr [rbp - 0x2c0], rax
0x6191:	je	0x6e4b


0x602b:	cmp	r12, -1
0x602f:	je	0x6b00


0x6108:	cmp	r12, rax
0x610b:	jae	0x6174


0x6e4b:	mov	rbx, r14
0x6e4e:	xor	eax, eax
0x6e50:	add	rbx, 1
0x6e54:	jb	0x6f60


0x6197:	movzx	edx, byte ptr [r13 + 0x48]
0x619c:	mov	rax, qword ptr [r13 + 0x50]
0x61a0:	cmp	dl, 0x25
0x61a3:	je	0x6938


0x6b00:	mov	r14, r12
0x6b03:	jmp	0x6174


0x6035:	call	0x15b0


0x610d:	test	r12, r12
0x6110:	jne	0x6a40


0x6174:	lea	rdi, [r15 + rbx]
0x6178:	mov	rdx, rcx
0x617b:	mov	rsi, r8
0x617e:	call	0x1760


0x6f60:	cmp	r12, -1
0x6f64:	mov	eax, 1
0x6f69:	je	0x6eac


0x6e5a:	cmp	r12, rbx
0x6e5d:	jae	0x6eac


0x6938:	cmp	rax, -1
0x693c:	jne	0x6df6


0x61a9:	cmp	rax, -1
0x61ad:	je	0x6df6


0x6116:	cmp	rax, 0xc
0x611a:	ja	0x6a52


0x6a40:	js	0x6035


0x1760:	jmp	qword ptr [rip + 0x2097aa]


0x6eac:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6eb3:	mov	byte ptr [r15 + r14], 0
0x6eb8:	je	0x6ed1


0x6f6f:	test	r12, r12
0x6f72:	je	0x6035


0x6e5f:	test	r12, r12
0x6e62:	jne	0x6f99


0x6942:	mov	rax, r14
0x6945:	add	rax, 1
0x6949:	mov	rbx, rax
0x694c:	jae	0x69d8


0x6df6:	call	0x15a0


0x61b3:	mov	r8, qword ptr [rbp - 0x3a8]
0x61ba:	shl	rax, 5
0x61be:	add	rax, r8
0x61c1:	cmp	dl, 0x6e
0x61c4:	mov	edi, dword ptr [rax]
0x61c6:	mov	dword ptr [rbp - 0x3d0], edi
0x61cc:	je	0x69b0


0x6120:	mov	r12d, 0xc
0x6126:	cmp	r15, qword ptr [rbp - 0x3e8]
0x612d:	sete	dl
0x6130:	test	r15, r15
0x6133:	je	0x6a78


0x6a52:	cmp	rax, -1
0x6a56:	je	0x6035


0x6a46:	add	r12, r12
0x6a49:	cmp	r12, rax
0x6a4c:	jae	0x6126




0x6ed1:	mov	rax, qword ptr [rbp - 0x420]
0x6ed8:	test	rax, rax
0x6edb:	je	0x6ee5


0x6eba:	cmp	r12, rbx
0x6ebd:	jbe	0x6ed1


0x6f78:	js	0x6035


0x6e68:	cmp	rbx, 0xc
0x6e6c:	ja	0x6f7e


0x6f99:	js	0x6035


0x6952:	cmp	r12, -1
0x6956:	jne	0x6035


0x69d8:	cmp	r12, rax
0x69db:	jae	0x695f


0x69b0:	mov	edx, edi
0x69b2:	sub	edx, 0x12
0x69b5:	cmp	edx, 4
0x69b8:	ja	0x6df6


0x61d2:	mov	eax, dword ptr [r13 + 0x10]
0x61d6:	mov	rdi, qword ptr [rbp - 0x3d8]
0x61dd:	test	al, 1
0x61df:	mov	byte ptr [rdi], 0x25
0x61e2:	lea	rbx, [rdi + 1]
0x61e6:	je	0x61f7


0x6a78:	mov	rdi, r12
0x6a7b:	mov	qword ptr [rbp - 0x3e0], r8
0x6a82:	mov	byte ptr [rbp - 0x3d0], dl
0x6a88:	mov	qword ptr [rbp - 0x3c8], rcx
0x6a8f:	call	0x1790


0x6139:	test	dl, dl
0x613b:	jne	0x6a78


0x6a5c:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6a63:	mov	r12, rax
0x6a66:	sete	dl
0x6a69:	test	r15, r15
0x6a6c:	jne	0x6139


0x6126:	cmp	r15, qword ptr [rbp - 0x3e8]
0x612d:	sete	dl
0x6130:	test	r15, r15
0x6133:	je	0x6a78


0x6ee5:	mov	rax, qword ptr [rbp - 0x408]
0x6eec:	mov	rdi, qword ptr [rbp - 0x2b8]
0x6ef3:	add	rax, 0x20
0x6ef7:	cmp	rdi, rax
0x6efa:	je	0x6f01


0x6edd:	mov	rdi, rax
0x6ee0:	call	0x1590


0x6ebf:	mov	rdi, r15
0x6ec2:	mov	rsi, rbx
0x6ec5:	call	0x17e0


0x6f7e:	test	rax, rax
0x6f81:	jne	0x6035


0x6e72:	mov	r12d, 0xc
0x6e78:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6e7f:	sete	r13b
0x6e83:	test	r15, r15
0x6e86:	je	0x6f2c


0x6f9f:	add	r12, r12
0x6fa2:	cmp	r12, rbx
0x6fa5:	jae	0x6e78


0x695c:	mov	rbx, r12
0x695f:	mov	byte ptr [r15 + r14], 0x25
0x6964:	mov	r8, qword ptr [r13 + 8]
0x6968:	add	r13, 0x58
0x696c:	mov	rcx, qword ptr [r13]
0x6970:	add	qword ptr [rbp - 0x400], 1
0x6978:	cmp	rcx, r8
0x697b:	jne	0x6019


0x69dd:	test	r12, r12
0x69e0:	jne	0x6db0


0x695f:	mov	byte ptr [r15 + r14], 0x25
0x6964:	mov	r8, qword ptr [r13 + 8]
0x6968:	add	r13, 0x58
0x696c:	mov	rcx, qword ptr [r13]
0x6970:	add	qword ptr [rbp - 0x400], 1
0x6978:	cmp	rcx, r8
0x697b:	jne	0x6019


0x69be:	lea	rdi, [rip + 0x274f]
0x69c5:	mov	rax, qword ptr [rax + 0x10]
0x69c9:	movsxd	rdx, dword ptr [rdi + rdx*4]
0x69cd:	add	rdx, rdi
0x69d0:	jmp	rdx


0x61f7:	test	al, 2
0x61f9:	je	0x6202


0x61e8:	mov	rdi, qword ptr [rbp - 0x3d8]
0x61ef:	lea	rbx, [rdi + 2]
0x61f3:	mov	byte ptr [rdi + 1], 0x27
0x61f7:	test	al, 2
0x61f9:	je	0x6202


0x6141:	mov	rsi, r12
0x6144:	mov	rdi, r15
0x6147:	mov	qword ptr [rbp - 0x3d0], r8
0x614e:	mov	qword ptr [rbp - 0x3c8], rcx
0x6155:	call	0x17e0


0x6f01:	mov	rax, qword ptr [rbp - 0x410]
0x6f08:	mov	rdi, qword ptr [rbp - 0x3a8]
0x6f0f:	add	rax, 0x10
0x6f13:	cmp	rdi, rax
0x6f16:	je	0x6f1d


0x6efc:	call	0x1590


0x6f87:	cmp	rbx, -1
0x6f8b:	je	0x6035


0x6f2c:	mov	rdi, r12
0x6f2f:	call	0x1790


0x6e8c:	test	r13b, r13b
0x6e8f:	jne	0x6f2c


0x6fab:	jmp	0x6f7e


0x6e78:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6e7f:	sete	r13b
0x6e83:	test	r15, r15
0x6e86:	je	0x6f2c


0x69e6:	cmp	rax, 0xc
0x69ea:	ja	0x6dc2


0x6db0:	js	0x6035


0x6202:	test	al, 4
0x6204:	je	0x620d


0x61fb:	mov	byte ptr [rbx], 0x2d
0x61fe:	add	rbx, 1
0x6202:	test	al, 4
0x6204:	je	0x620d


0x6f1d:	mov	rax, qword ptr [rbp - 0x418]
0x6f24:	mov	qword ptr [rax], r14
0x6f27:	jmp	0x60af


0x6f18:	call	0x1590


0x6f91:	mov	r12, rbx
0x6f94:	jmp	0x6e78


0x6e95:	mov	rsi, r12
0x6e98:	mov	rdi, r15
0x6e9b:	call	0x17e0


0x69f0:	mov	r12d, 0xc
0x69f6:	cmp	r15, qword ptr [rbp - 0x3e8]
0x69fd:	sete	dl
0x6a00:	test	r15, r15
0x6a03:	je	0x6c70


0x6dc2:	cmp	rax, -1
0x6dc6:	je	0x6035


0x6db6:	add	r12, r12
0x6db9:	cmp	r12, rax
0x6dbc:	jae	0x69f6


0x620d:	test	al, 8
0x620f:	je	0x6218


0x6206:	mov	byte ptr [rbx], 0x2b
0x6209:	add	rbx, 1
0x620d:	test	al, 8
0x620f:	je	0x6218


0x6c70:	mov	rdi, r12
0x6c73:	mov	byte ptr [rbp - 0x3c8], dl
0x6c79:	call	0x1790


0x6a09:	test	dl, dl
0x6a0b:	jne	0x6c70


0x6dcc:	mov	r12, rax
0x6dcf:	jmp	0x69f6


0x69f6:	cmp	r15, qword ptr [rbp - 0x3e8]
0x69fd:	sete	dl
0x6a00:	test	r15, r15
0x6a03:	je	0x6c70


0x6218:	test	al, 0x10
0x621a:	je	0x6223


0x6211:	mov	byte ptr [rbx], 0x20
0x6214:	add	rbx, 1
0x6218:	test	al, 0x10
0x621a:	je	0x6223


0x6a11:	mov	rsi, r12
0x6a14:	mov	rdi, r15
0x6a17:	call	0x17e0


0x6223:	test	al, 0x40
0x6225:	je	0x622e


0x621c:	mov	byte ptr [rbx], 0x23
0x621f:	add	rbx, 1
0x6223:	test	al, 0x40
0x6225:	je	0x622e


0x622e:	test	al, 0x20
0x6230:	je	0x6239


0x6227:	mov	byte ptr [rbx], 0x49
0x622a:	add	rbx, 1
0x622e:	test	al, 0x20
0x6230:	je	0x6239


0x6239:	mov	rsi, qword ptr [r13 + 0x18]
0x623d:	mov	rdx, qword ptr [r13 + 0x20]
0x6241:	cmp	rsi, rdx
0x6244:	je	0x6276


0x6232:	mov	byte ptr [rbx], 0x30
0x6235:	add	rbx, 1
0x6239:	mov	rsi, qword ptr [r13 + 0x18]
0x623d:	mov	rdx, qword ptr [r13 + 0x20]
0x6241:	cmp	rsi, rdx
0x6244:	je	0x6276


0x6276:	mov	rsi, qword ptr [r13 + 0x30]
0x627a:	mov	rdx, qword ptr [r13 + 0x38]
0x627e:	cmp	rsi, rdx
0x6281:	je	0x62b3


0x6246:	mov	rcx, rdx
0x6249:	mov	rdi, rbx
0x624c:	mov	qword ptr [rbp - 0x3e0], r8
0x6253:	sub	rcx, rsi
0x6256:	mov	rdx, rcx
0x6259:	mov	qword ptr [rbp - 0x3c8], rcx
0x6260:	call	0x1760


0x62b3:	mov	edi, dword ptr [rbp - 0x3d0]
0x62b9:	cmp	edi, 0x10
0x62bc:	ja	0x62eb


0x6283:	mov	rcx, rdx
0x6286:	mov	rdi, rbx
0x6289:	mov	qword ptr [rbp - 0x3e0], r8
0x6290:	sub	rcx, rsi
0x6293:	mov	rdx, rcx
0x6296:	mov	qword ptr [rbp - 0x3c8], rcx
0x629d:	call	0x1760


0x62be:	mov	eax, 1
0x62c3:	mov	ecx, edi
0x62c5:	shl	rax, cl
0x62c8:	test	eax, 0x14180
0x62cd:	jne	0x62e4


0x62eb:	movzx	eax, byte ptr [r13 + 0x48]
0x62f0:	mov	byte ptr [rbx + 1], 0
0x62f4:	mov	byte ptr [rbx], al
0x62f6:	mov	rax, qword ptr [r13 + 0x28]
0x62fa:	cmp	rax, -1
0x62fe:	je	0x6a30


0x62cf:	test	ah, 0x10
0x62d2:	jne	0x6c30


0x62e4:	mov	byte ptr [rbx], 0x6c
0x62e7:	add	rbx, 1
0x62eb:	movzx	eax, byte ptr [r13 + 0x48]
0x62f0:	mov	byte ptr [rbx + 1], 0
0x62f4:	mov	byte ptr [rbx], al
0x62f6:	mov	rax, qword ptr [r13 + 0x28]
0x62fa:	cmp	rax, -1
0x62fe:	je	0x6a30


0x6a30:	mov	dword ptr [rbp - 0x3e0], 0
0x6a3a:	jmp	0x6327


0x6304:	shl	rax, 5
0x6308:	add	rax, r8
0x630b:	cmp	dword ptr [rax], 5
0x630e:	jne	0x6df6


0x62d8:	test	ah, 6
0x62db:	je	0x62eb


0x6c30:	mov	byte ptr [rbx], 0x4c
0x6c33:	add	rbx, 1
0x6c37:	jmp	0x62eb


0x6327:	mov	rax, qword ptr [r13 + 0x40]
0x632b:	cmp	rax, -1
0x632f:	je	0x635c


0x6314:	mov	eax, dword ptr [rax + 0x10]
0x6317:	mov	dword ptr [rbp - 0x3e0], 1
0x6321:	mov	dword ptr [rbp - 0x3b8], eax
0x6327:	mov	rax, qword ptr [r13 + 0x40]
0x632b:	cmp	rax, -1
0x632f:	je	0x635c


0x62dd:	mov	byte ptr [rbx], 0x6c
0x62e0:	add	rbx, 1
0x62e4:	mov	byte ptr [rbx], 0x6c
0x62e7:	add	rbx, 1
0x62eb:	movzx	eax, byte ptr [r13 + 0x48]
0x62f0:	mov	byte ptr [rbx + 1], 0
0x62f4:	mov	byte ptr [rbx], al
0x62f6:	mov	rax, qword ptr [r13 + 0x28]
0x62fa:	cmp	rax, -1
0x62fe:	je	0x6a30


0x635c:	mov	rax, r14
0x635f:	xor	edx, edx
0x6361:	add	rax, 2
0x6365:	jb	0x6fcc


0x6331:	shl	rax, 5
0x6335:	add	r8, rax
0x6338:	cmp	dword ptr [r8], 5
0x633c:	jne	0x6df6


0x6fcc:	cmp	r12, -1
0x6fd0:	mov	edx, 1
0x6fd5:	je	0x63bb


0x636b:	cmp	r12, rax
0x636e:	jae	0x63bb


0x6342:	mov	eax, dword ptr [rbp - 0x3e0]
0x6348:	mov	edx, dword ptr [r8 + 0x10]
0x634c:	mov	dword ptr [rbp + rax*4 - 0x3b8], edx
0x6353:	lea	eax, [rax + 1]
0x6356:	mov	dword ptr [rbp - 0x3e0], eax
0x635c:	mov	rax, r14
0x635f:	xor	edx, edx
0x6361:	add	rax, 2
0x6365:	jb	0x6fcc


0x63bb:	mov	byte ptr [r15 + r14], 0
0x63c0:	call	0x15b0


0x6fdb:	test	r12, r12
0x6fde:	je	0x6035


0x6370:	test	r12, r12
0x6373:	jne	0x6b98


0x6fe4:	jns	0x6bb0


0x6379:	cmp	rax, 0xc
0x637d:	ja	0x6bb0


0x6b98:	js	0x6035


0x6fea:	jmp	0x6035


0x6bb0:	test	rdx, rdx
0x6bb3:	jne	0x6035


0x6383:	mov	r12d, 0xc
0x6389:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6390:	sete	dl
0x6393:	test	r15, r15
0x6396:	je	0x6be0


0x6b9e:	add	r12, r12
0x6ba1:	cmp	r12, rax
0x6ba4:	jae	0x6389


0x6bb9:	cmp	rax, -1
0x6bbd:	je	0x6035


0x6be0:	mov	rdi, r12
0x6be3:	mov	byte ptr [rbp - 0x3c8], dl
0x6be9:	call	0x1790


0x639c:	test	dl, dl
0x639e:	jne	0x6be0


0x6389:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6390:	sete	dl
0x6393:	test	r15, r15
0x6396:	je	0x6be0


0x6bc3:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6bca:	mov	r12, rax
0x6bcd:	sete	dl
0x6bd0:	test	r15, r15
0x6bd3:	jne	0x639c


0x63a4:	mov	rsi, r12
0x63a7:	mov	rdi, r15
0x63aa:	call	0x17e0


0x5b7b:	test	rax, rax
0x5b7e:	je	0x5bc2


0x5bc2:	mov	eax, 0xffffffff
0x5bc7:	jmp	0x5b92


0x5b80:	mov	rdx, qword ptr [rsp]
0x5b84:	cmp	rdx, 0x7fffffff
0x5b8b:	ja	0x5ba8


0x5b92:	mov	rbx, qword ptr [rsp + 8]
0x5b97:	xor	rbx, qword ptr fs:[0x28]
0x5ba0:	jne	0x5bc9


0x5b8d:	mov	qword ptr [rbx], rax
0x5b90:	mov	eax, edx
0x5b92:	mov	rbx, qword ptr [rsp + 8]
0x5b97:	xor	rbx, qword ptr fs:[0x28]
0x5ba0:	jne	0x5bc9


0x5ba8:	mov	rdi, rax
0x5bab:	call	0x1590


0x5ba2:	add	rsp, 0x10
0x5ba6:	pop	rbx
0x5ba7:	ret	


0x5bc9:	call	0x1670


0x5a94:	mov	rcx, qword ptr [rsp + 0x18]
0x5a99:	xor	rcx, qword ptr fs:[0x28]
0x5aa2:	jne	0x5aac


0x5aa4:	add	rsp, 0xd8
0x5aab:	ret	


0x5aac:	call	0x1670


0x7f11:	test	rbp, rbp
0x7f14:	je	0x7f36


0x7f36:	add	rsp, 8
0x7f3a:	pop	rbx
0x7f3b:	pop	rbp
0x7f3c:	pop	r12
0x7f3e:	pop	r13
0x7f40:	pop	r14
0x7f42:	pop	r15
0x7f44:	ret	


0x7f16:	xor	ebx, ebx
0x7f18:	nop	dword ptr [rax + rax]
0x7f20:	mov	rdx, r15
0x7f23:	mov	rsi, r14
0x7f26:	mov	edi, r13d
0x7f29:	call	qword ptr [r12 + rbx*8]


0x62a2:	mov	rcx, qword ptr [rbp - 0x3c8]
0x62a9:	mov	r8, qword ptr [rbp - 0x3e0]
0x62b0:	add	rbx, rcx
0x62b3:	mov	edi, dword ptr [rbp - 0x3d0]
0x62b9:	cmp	edi, 0x10
0x62bc:	ja	0x62eb


0x6265:	mov	rcx, qword ptr [rbp - 0x3c8]
0x626c:	mov	r8, qword ptr [rbp - 0x3e0]
0x6273:	add	rbx, rcx
0x6276:	mov	rsi, qword ptr [r13 + 0x30]
0x627a:	mov	rdx, qword ptr [r13 + 0x38]
0x627e:	cmp	rsi, rdx
0x6281:	je	0x62b3


0x589f:	test	rax, rax
0x58a2:	je	0x58a9


0x58a4:	add	rsp, 8
0x58a8:	ret	


0x5bfb:	test	rax, rax
0x5bfe:	mov	r12, rax
0x5c01:	je	0x5c40


0x5c03:	mov	rsi, rbx
0x5c06:	mov	rdi, rbp
0x5c09:	call	0x1830


0x3373:	test	rax, rax
0x3376:	je	0x33cd


0x33cd:	mov	qword ptr [rip + 0x207d3c], rbx
0x33d4:	mov	qword ptr [rip + 0x207cc5], rbx
0x33db:	pop	rbx
0x33dc:	ret	


0x3378:	lea	r8, [rax + 1]
0x337c:	mov	rdx, r8
0x337f:	sub	rdx, rbx
0x3382:	cmp	rdx, 6
0x3386:	jle	0x33cd


0x3388:	lea	rsi, [rax - 6]
0x338c:	lea	rdi, [rip + 0x54c5]
0x3393:	mov	ecx, 7
0x3398:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3398:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x339a:	seta	dl
0x339d:	sbb	dl, 0
0x33a0:	test	dl, dl
0x33a2:	jne	0x33cd


0x33a4:	lea	rdi, [rip + 0x54b5]
0x33ab:	mov	ecx, 3
0x33b0:	mov	rsi, r8
0x33b3:	mov	rbx, r8
0x33b6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x33b6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x33b8:	seta	dl
0x33bb:	sbb	dl, 0
0x33be:	test	dl, dl
0x33c0:	jne	0x33cd


0x33c2:	lea	rbx, [rax + 4]
0x33c6:	mov	qword ptr [rip + 0x207cb3], rbx
0x33cd:	mov	qword ptr [rip + 0x207d3c], rbx
0x33d4:	mov	qword ptr [rip + 0x207cc5], rbx
0x33db:	pop	rbx
0x33dc:	ret	


0x33fa:	call	0x15a0


0x5bb0:	call	0x15b0


0x4bed:	mov	qword ptr [rip + 0x20646c], rbx
0x4bf4:	pop	rbx
0x4bf5:	mov	dword ptr [rip + 0x206459], 1
0x4bff:	pop	rbp
0x4c00:	pop	r12
0x4c02:	ret	


0x4bc7:	mov	qword ptr [rip + 0x20649e], 0x100
0x4bd2:	mov	qword ptr [rip + 0x20649f], rbx
0x4bd9:	lea	rbx, [rip + 0x206490]
0x4be0:	cmp	r12, rbx
0x4be3:	je	0x4bf4


0x573d:	xor	eax, eax
0x573f:	pop	rbx
0x5740:	ret	


0x4bac:	cmp	rbx, rbp
0x4baf:	jne	0x4ba0


0x4ba0:	mov	rdi, qword ptr [rbx]
0x4ba3:	add	rbx, 0x10
0x4ba7:	call	0x1590


0x50cc:	lea	rsi, [rip + 0x3c88]
0x50d3:	xor	edi, edi
0x50d5:	mov	edx, 5
0x50da:	call	0x1640


0x51e1:	jmp	0x50cc


0x63af:	test	rax, rax
0x63b2:	je	0x6035


0x63b8:	mov	r15, rax
0x63bb:	mov	byte ptr [r15 + r14], 0
0x63c0:	call	0x15b0


0x6a1c:	test	rax, rax
0x6a1f:	je	0x6b1b


0x6b1b:	call	0x15b0


0x6a25:	mov	r15, rax
0x6a28:	jmp	0x695f


0x6ea0:	test	rax, rax
0x6ea3:	je	0x6b1b


0x6ea9:	mov	r15, rax
0x6eac:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6eb3:	mov	byte ptr [r15 + r14], 0
0x6eb8:	je	0x6ed1


0x615a:	test	rax, rax
0x615d:	mov	rcx, qword ptr [rbp - 0x3c8]
0x6164:	mov	r8, qword ptr [rbp - 0x3d0]
0x616b:	je	0x6b1b


0x6171:	mov	r15, rax
0x6174:	lea	rdi, [r15 + rbx]
0x6178:	mov	rdx, rcx
0x617b:	mov	rsi, r8
0x617e:	call	0x1760


0x6eca:	test	rax, rax
0x6ecd:	cmovne	r15, rax
0x6ed1:	mov	rax, qword ptr [rbp - 0x420]
0x6ed8:	test	rax, rax
0x6edb:	je	0x6ee5


0x7c9e:	mov	rdx, qword ptr [r15 + 8]
0x7ca2:	mov	r11, qword ptr [rsp + 0x30]
0x7ca7:	mov	rcx, rax
0x7caa:	mov	r8, qword ptr [rsp + 0x38]
0x7caf:	mov	r10, qword ptr [rsp + 0x40]
0x7cb4:	mov	r9, qword ptr [rsp + 0x48]
0x7cb9:	test	rcx, rcx
0x7cbc:	je	0x7ed7


0x7ed7:	mov	rcx, rdx
0x7eda:	jmp	0x7e7b


0x7cc2:	cmp	qword ptr [rsp + 8], rdx
0x7cc7:	mov	rax, qword ptr [r15]
0x7cca:	je	0x7e90


0x7e90:	mov	rsi, qword ptr [rsp + 8]
0x7e95:	shl	rax, 5
0x7e99:	mov	rdi, rcx
0x7e9c:	mov	rdx, rax
0x7e9f:	mov	qword ptr [rsp + 0x48], r9
0x7ea4:	mov	qword ptr [rsp + 0x40], r10
0x7ea9:	mov	qword ptr [rsp + 0x38], r8
0x7eae:	mov	qword ptr [rsp + 0x30], r11
0x7eb3:	call	0x1760


0x7cd0:	mov	qword ptr [r15 + 8], rcx
0x7cd4:	jmp	0x76ed


0x76ed:	mov	rdx, rax
0x76f0:	shl	rdx, 5
0x76f4:	add	rdx, rcx
0x76f7:	cmp	rax, rbx
0x76fa:	ja	0x7716


0x7eb8:	mov	r9, qword ptr [rsp + 0x48]
0x7ebd:	mov	rcx, rax
0x7ec0:	mov	r10, qword ptr [rsp + 0x40]
0x7ec5:	mov	rax, qword ptr [r15]
0x7ec8:	mov	r8, qword ptr [rsp + 0x38]
0x7ecd:	mov	r11, qword ptr [rsp + 0x30]
0x7ed2:	jmp	0x7cd0


0x7606:	mov	rdx, qword ptr [r15 + 8]
0x760a:	mov	r8, qword ptr [rsp + 0x30]
0x760f:	mov	rcx, rax
0x7612:	mov	r10, qword ptr [rsp + 0x38]
0x7617:	mov	r9, qword ptr [rsp + 0x40]
0x761c:	test	rcx, rcx
0x761f:	je	0x7ed7


0x7625:	cmp	qword ptr [rsp + 8], rdx
0x762a:	mov	rax, qword ptr [r15]
0x762d:	je	0x7deb


0x7deb:	mov	rsi, qword ptr [rsp + 8]
0x7df0:	shl	rax, 5
0x7df4:	mov	rdi, rcx
0x7df7:	mov	rdx, rax
0x7dfa:	mov	qword ptr [rsp + 0x40], r9
0x7dff:	mov	qword ptr [rsp + 0x38], r10
0x7e04:	mov	qword ptr [rsp + 0x30], r8
0x7e09:	call	0x1760


0x7633:	mov	qword ptr [r15 + 8], rcx
0x7637:	mov	rdx, rax
0x763a:	shl	rdx, 5
0x763e:	add	rdx, rcx
0x7641:	cmp	rax, rbx
0x7644:	ja	0x7666


0x7e0e:	mov	r9, qword ptr [rsp + 0x40]
0x7e13:	mov	rcx, rax
0x7e16:	mov	r10, qword ptr [rsp + 0x38]
0x7e1b:	mov	rax, qword ptr [r15]
0x7e1e:	mov	r8, qword ptr [rsp + 0x30]
0x7e23:	jmp	0x7633


0x5726:	test	rax, rax
0x5729:	jne	0x5730


0x572b:	test	rbx, rbx
0x572e:	jne	0x5741


0x5730:	pop	rbx
0x5731:	ret	


0x5741:	call	0x5900


0x5c73:	mov	qword ptr [rip + 0x2055de], rax
0x5c7a:	jmp	0x5bea


0x5e3e:	test	eax, eax
0x5e40:	je	0x5e4a


0x5e42:	test	dword ptr [rbx], 0x100
0x5e48:	jne	0x5e58


0x5e58:	mov	rdi, rbx
0x5e5b:	mov	edx, 1
0x5e60:	xor	esi, esi
0x5e62:	call	0x5e70


0x1929:	lea	rsi, [rip + 0x7471]
0x1930:	mov	edi, 6
0x1935:	call	0x17f0


0x269d:	lea	rsi, [rip + 0x58eb]
0x26a4:	mov	edx, 5
0x26a9:	xor	edi, edi
0x26ab:	call	0x1640


0x5c0e:	fstp	xword ptr [rsp]
0x5c11:	call	0x15b0


0x320a:	mov	rax, qword ptr [rsp + 0x18]
0x320f:	fld	st(0)
0x3211:	cmp	byte ptr [rax], 0
0x3214:	jne	0x3240


0x3216:	fstp	st(1)
0x3218:	test	rbx, rbx
0x321b:	je	0x3225


0x3240:	fstp	st(0)
0x3242:	fstp	xword ptr [rsp]
0x3245:	call	0x15b0


0x3225:	mov	rax, qword ptr [rsp + 0x28]
0x322a:	xor	rax, qword ptr fs:[0x28]
0x3233:	jne	0x3280


0x321d:	mov	rax, qword ptr [rsp + 0x18]
0x3222:	mov	qword ptr [rbx], rax
0x3225:	mov	rax, qword ptr [rsp + 0x28]
0x322a:	xor	rax, qword ptr fs:[0x28]
0x3233:	jne	0x3280


0x3235:	add	rsp, 0x38
0x3239:	pop	rbx
0x323a:	pop	rbp
0x323b:	pop	r12
0x323d:	pop	r13
0x323f:	ret	


0x3280:	fstp	st(0)
0x3282:	call	0x1670


0x3561:	cmp	r15d, 0xa
0x3565:	mov	qword ptr [rsp + 0x58], rax
0x356a:	ja	0x471f


0x3570:	lea	rcx, [rip + 0x5369]
0x3577:	mov	edx, r15d
0x357a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x357e:	add	rax, rcx
0x3581:	jmp	rax


0x471f:	call	0x15a0


0x6bee:	test	rax, rax
0x6bf1:	mov	rcx, rax
0x6bf4:	movzx	edx, byte ptr [rbp - 0x3c8]
0x6bfb:	je	0x6035


0x6c01:	test	r14, r14
0x6c04:	je	0x6da0


0x6da0:	mov	r15, rcx
0x6da3:	jmp	0x63bb


0x6c0a:	test	dl, dl
0x6c0c:	je	0x6da0


0x6c12:	mov	rsi, r15
0x6c15:	mov	rdx, r14
0x6c18:	mov	rdi, rax
0x6c1b:	call	0x1760


0x6c20:	mov	r15, rax
0x6c23:	jmp	0x63bb


0x6c7e:	test	rax, rax
0x6c81:	mov	rcx, rax
0x6c84:	movzx	edx, byte ptr [rbp - 0x3c8]
0x6c8b:	je	0x6035


0x6c91:	test	r14, r14
0x6c94:	je	0x6dd4


0x6dd4:	mov	r15, rcx
0x6dd7:	jmp	0x695f


0x6c9a:	test	dl, dl
0x6c9c:	je	0x6dd4


0x6ca2:	mov	rsi, r15
0x6ca5:	mov	rdx, r14
0x6ca8:	mov	rdi, rax
0x6cab:	call	0x1760


0x6cb0:	mov	r15, rax
0x6cb3:	jmp	0x695f


0x6f34:	test	rax, rax
0x6f37:	mov	rcx, rax
0x6f3a:	je	0x6035


0x6f40:	test	r14, r14
0x6f43:	je	0x6fb0


0x6fb0:	mov	r15, rcx
0x6fb3:	jmp	0x6eac


0x6f45:	test	r13b, r13b
0x6f48:	je	0x6fb0


0x6f4a:	mov	rsi, r15
0x6f4d:	mov	rdx, r14
0x6f50:	mov	rdi, rax
0x6f53:	call	0x1760


0x6f58:	mov	r15, rax
0x6f5b:	jmp	0x6eac


0x6a94:	test	rax, rax
0x6a97:	mov	r9, rax
0x6a9a:	mov	rcx, qword ptr [rbp - 0x3c8]
0x6aa1:	movzx	edx, byte ptr [rbp - 0x3d0]
0x6aa8:	mov	r8, qword ptr [rbp - 0x3e0]
0x6aaf:	je	0x6035


0x6ab5:	test	rbx, rbx
0x6ab8:	je	0x6cc0


0x6cc0:	mov	r15, r9
0x6cc3:	jmp	0x6174


0x6abe:	test	dl, dl
0x6ac0:	je	0x6cc0


0x6ac6:	mov	rsi, r15
0x6ac9:	mov	rdx, rbx
0x6acc:	mov	rdi, rax
0x6acf:	mov	qword ptr [rbp - 0x3d0], r8
0x6ad6:	mov	qword ptr [rbp - 0x3c8], rcx
0x6add:	call	0x1760


0x6ae2:	mov	rcx, qword ptr [rbp - 0x3c8]
0x6ae9:	mov	r15, rax
0x6aec:	mov	r8, qword ptr [rbp - 0x3d0]
0x6af3:	jmp	0x6174


0x5fa7:	test	rax, rax
0x5faa:	mov	qword ptr [rbp - 0x3d8], rax
0x5fb1:	je	0x6998


0x5fb7:	mov	r8, qword ptr [rbp - 0x3c8]
0x5fbe:	mov	qword ptr [rbp - 0x420], rax
0x5fc5:	xor	r12d, r12d
0x5fc8:	cmp	qword ptr [rbp - 0x3e8], 0
0x5fd0:	je	0x5fdc


0x7e56:	mov	rdx, qword ptr [rsp + 8]
0x7e5b:	mov	rcx, rax
0x7e5e:	mov	r9, qword ptr [rsp + 0x48]
0x7e63:	mov	r10, qword ptr [rsp + 0x40]
0x7e68:	mov	r8, qword ptr [rsp + 0x38]
0x7e6d:	mov	r11, qword ptr [rsp + 0x30]
0x7e72:	jmp	0x7cb9


0x7cb9:	test	rcx, rcx
0x7cbc:	je	0x7ed7


0x7d19:	mov	rdx, qword ptr [rsp + 8]
0x7d1e:	mov	rcx, rax
0x7d21:	mov	r9, qword ptr [rsp + 0x40]
0x7d26:	mov	r10, qword ptr [rsp + 0x38]
0x7d2b:	mov	r8, qword ptr [rsp + 0x30]
0x7d30:	jmp	0x761c


0x761c:	test	rcx, rcx
0x761f:	je	0x7ed7


0x56b9:	test	rax, rax
0x56bc:	jne	0x56c3


0x56be:	test	rbx, rbx
0x56c1:	jne	0x56c5


0x56c3:	pop	rbx
0x56c4:	ret	


0x56c5:	call	0x5900


0x5869:	mov	rdx, rbx
0x586c:	xor	esi, esi
0x586e:	mov	rdi, rax
0x5871:	pop	rbx
0x5872:	jmp	0x16e0


0x16e0:	jmp	qword ptr [rip + 0x2097ea]




0x58c4:	add	rsp, 8
0x58c8:	mov	rdx, rbx
0x58cb:	mov	rsi, rbp
0x58ce:	pop	rbx
0x58cf:	pop	rbp
0x58d0:	mov	rdi, rax
0x58d3:	jmp	0x1760


0x276d:	mov	edx, dword ptr [rsp + 8]
0x2771:	lea	r14, [rax + 1]
0x2775:	mov	r15, rax
0x2778:	mov	qword ptr [rsp], rax
0x277c:	cmp	r14, 0x1f
0x2780:	cmovae	rbx, r14
0x2784:	test	edx, edx
0x2786:	je	0x2a2e


0x2a2e:	lea	rax, [rbx + 1]
0x2a32:	xor	r12d, r12d
0x2a35:	mov	rdi, rax
0x2a38:	mov	qword ptr [rsp + 0x18], rax
0x2a3d:	call	0x56b0


0x278c:	xor	eax, eax
0x278e:	or	rcx, 0xffffffffffffffff
0x2792:	mov	rdi, rbp
0x2795:	repne scasb	al, byte ptr [rdi]


0x2795:	repne scasb	al, byte ptr [rdi]


0x2797:	mov	rsi, rcx
0x279a:	not	rsi
0x279d:	lea	r12, [rsi - 1]
0x27a1:	mov	qword ptr [rsp + 0x20], rsi
0x27a6:	cmp	rbx, r12
0x27a9:	cmovb	rbx, r12
0x27ad:	lea	rdi, [rbx + 1]
0x27b1:	mov	qword ptr [rsp + 0x18], rdi
0x27b6:	call	0x56b0


0x27bb:	mov	rsi, rbx
0x27be:	sub	rsi, qword ptr [rsp]
0x27c2:	mov	rdx, r14
0x27c5:	mov	qword ptr [rsp + 0x10], rax
0x27ca:	mov	rdi, rsi
0x27cd:	mov	rsi, r13
0x27d0:	add	rdi, rax
0x27d3:	call	0x1760


0x27d8:	mov	rdi, qword ptr [rsp + 0x18]
0x27dd:	mov	r13, rax
0x27e0:	mov	r14, rax
0x27e3:	call	0x56b0


0x27e8:	mov	rcx, qword ptr [rsp + 0x20]
0x27ed:	mov	rdi, rbx
0x27f0:	mov	rsi, rbp
0x27f3:	sub	rdi, r12
0x27f6:	mov	qword ptr [rsp + 0x38], rax
0x27fb:	add	rdi, rax
0x27fe:	mov	rdx, rcx
0x2801:	call	0x1760


0x2806:	cmp	qword ptr [rsp], r12
0x280a:	mov	qword ptr [rsp + 0x30], rax
0x280f:	jae	0x2a76


0x2815:	mov	rdi, qword ptr [rsp + 0x18]
0x281a:	mov	eax, 0x2000
0x281f:	add	rdi, rdi
0x2822:	cmp	rdi, 0x2000
0x2829:	cmovae	rax, rdi
0x282d:	mov	rdi, rax
0x2830:	mov	r13, rax
0x2833:	mov	qword ptr [rsp + 0x28], rax
0x2838:	call	0x56b0


0x2a76:	jbe	0x2a7c


0x2a7c:	mov	rsi, rax
0x2a7f:	mov	rdi, r13
0x2a82:	call	0x1740


0x2a78:	xor	ebx, ebx
0x2a7a:	jmp	0x2a09


0x1740:	jmp	qword ptr [rip + 0x2097ba]


0x2a09:	mov	rdi, qword ptr [rsp + 0x10]
0x2a0e:	call	0x1590




0x2a13:	mov	rdi, qword ptr [rsp + 0x38]
0x2a18:	call	0x1590


0x2a1d:	add	rsp, 0x48
0x2a21:	mov	eax, ebx
0x2a23:	pop	rbx
0x2a24:	pop	rbp
0x2a25:	pop	r12
0x2a27:	pop	r13
0x2a29:	pop	r14
0x2a2b:	pop	r15
0x2a2d:	ret	


0x283d:	mov	rdx, qword ptr [rsp]
0x2841:	mov	rbp, rax
0x2844:	mov	rsi, r14
0x2847:	mov	rdi, rbp
0x284a:	lea	r13, [rbp + r13]
0x284f:	call	0x1810


0x1810:	jmp	qword ptr [rip + 0x209752]




0x2a42:	mov	rdi, rbx
0x2a45:	sub	rdi, qword ptr [rsp]
0x2a49:	mov	rdx, r14
0x2a4c:	mov	rsi, r13
0x2a4f:	mov	qword ptr [rsp + 0x10], rax
0x2a54:	add	rdi, rax
0x2a57:	call	0x1760


0x2a5c:	mov	qword ptr [rsp + 0x38], 0
0x2a65:	mov	r14, rax
0x2a68:	mov	qword ptr [rsp + 0x30], 0
0x2a71:	jmp	0x2815


0x265e:	movsx	edx, byte ptr [rbx]
0x2661:	sub	edx, 0x30
0x2664:	cmp	edx, 9
0x2667:	ja	0x2688


0x2669:	lea	rsi, [rip + 0x5914]
0x2670:	mov	rbp, rax
0x2673:	mov	rdi, rbx
0x2676:	call	0x16f0


0x2688:	xor	eax, eax
0x268a:	jmp	0x2681


0x16f0:	jmp	qword ptr [rip + 0x2097e2]


0x2681:	add	rsp, 8
0x2685:	pop	rbx
0x2686:	pop	rbp
0x2687:	ret	




0x58e9:	mov	rdi, rbx
0x58ec:	lea	rsi, [rax + 1]
0x58f0:	pop	rbx
0x58f1:	jmp	0x58b0


0x26b0:	mov	rbx, rax
0x26b3:	call	0x15b0


0x50df:	lea	rdx, [rip + 0x3f9a]
0x50e6:	mov	rcx, rax
0x50e9:	mov	r8d, 0x7e3
0x50ef:	mov	esi, 1
0x50f4:	mov	rdi, rbp
0x50f7:	xor	eax, eax
0x50f9:	call	0x1890


0x50fe:	lea	rsi, [rip + 0x3ce3]
0x5105:	xor	edi, edi
0x5107:	mov	edx, 5
0x510c:	call	0x1640


0x5111:	mov	rsi, rbp
0x5114:	mov	rdi, rax
0x5117:	call	0x1720


0x1720:	jmp	qword ptr [rip + 0x2097ca]




0x2add:	mov	rdi, qword ptr [rip + 0x2085dc]
0x2ae4:	mov	rdx, rax
0x2ae7:	mov	rcx, rbx
0x2aea:	mov	esi, 1
0x2aef:	xor	eax, eax
0x2af1:	call	0x1890


0x2af6:	mov	edi, ebp
0x2af8:	call	0x1870


0x1870:	jmp	qword ptr [rip + 0x209722]




0x2b0b:	mov	rcx, rbx
0x2b0e:	mov	r8, rbx
0x2b11:	mov	rdx, rbx
0x2b14:	mov	rsi, rax
0x2b17:	mov	edi, 1
0x2b1c:	xor	eax, eax
0x2b1e:	call	0x1800


0x1800:	jmp	qword ptr [rip + 0x20975a]




0x5644:	lea	rdx, [rip + 0x376c]
0x564b:	mov	rsi, rax
0x564e:	mov	edi, 1
0x5653:	xor	eax, eax
0x5655:	call	0x1800


0x5917:	mov	edi, dword ptr [rip + 0x2056fb]
0x591d:	lea	rdx, [rip + 0x2ef8]
0x5924:	mov	rcx, rax
0x5927:	xor	esi, esi
0x5929:	xor	eax, eax
0x592b:	call	0x1840


0x1840:	jmp	qword ptr [rip + 0x20973a]




0x26b8:	mov	esi, dword ptr [rax]
0x26ba:	mov	rdx, rbx
0x26bd:	mov	edi, 1
0x26c2:	xor	eax, eax
0x26c4:	call	0x1840


0x324a:	lea	rsi, [rsp + 0x20]
0x324f:	mov	rdi, rbp
0x3252:	mov	r12, rax
0x3255:	mov	r13d, dword ptr [rax]
0x3258:	call	0x5bd0


0x325d:	mov	rax, qword ptr [rsp + 0x20]
0x3262:	cmp	qword ptr [rsp + 0x18], rax
0x3267:	fld	xword ptr [rsp]
0x326a:	jae	0x3278


0x326c:	fstp	st(0)
0x326e:	mov	qword ptr [rsp + 0x18], rax
0x3273:	jmp	0x3218


0x3278:	fstp	st(1)
0x327a:	mov	dword ptr [r12], r13d
0x327e:	jmp	0x3218


0x3218:	test	rbx, rbx
0x321b:	je	0x3225


0x5c16:	mov	rdi, r12
0x5c19:	mov	rbx, rax
0x5c1c:	mov	ebp, dword ptr [rax]
0x5c1e:	call	0x1780


0x5c23:	test	rax, rax
0x5c26:	fld	xword ptr [rsp]
0x5c29:	je	0x5c7f


0x5c7f:	fstp	st(0)
0x5c81:	call	0x15a0


0x5c2b:	mov	dword ptr [rbx], ebp
0x5c2d:	add	rsp, 0x10
0x5c31:	pop	rbx
0x5c32:	pop	rbp
0x5c33:	pop	r12
0x5c35:	ret	


0x6b20:	mov	qword ptr [rbp - 0x3c8], rax
0x6b27:	nop	word ptr [rax + rax]
0x6b30:	mov	rdi, r15
0x6b33:	call	0x1590


0x6b38:	jmp	0x6053


0x6053:	mov	rax, qword ptr [rbp - 0x420]
0x605a:	test	rax, rax
0x605d:	je	0x6067


0x6067:	mov	rax, qword ptr [rbp - 0x408]
0x606e:	mov	rdi, qword ptr [rbp - 0x2b8]
0x6075:	add	rax, 0x20
0x6079:	cmp	rdi, rax
0x607c:	je	0x6083


0x605f:	mov	rdi, rax
0x6062:	call	0x1590


0x6083:	mov	rax, qword ptr [rbp - 0x410]
0x608a:	mov	rdi, qword ptr [rbp - 0x3a8]
0x6091:	add	rax, 0x10
0x6095:	cmp	rdi, rax
0x6098:	je	0x609f


0x607e:	call	0x1590


0x609f:	mov	rax, qword ptr [rbp - 0x3c8]
0x60a6:	xor	r15d, r15d
0x60a9:	mov	dword ptr [rax], 0xc
0x60af:	mov	rdi, qword ptr [rbp - 0x38]
0x60b3:	xor	rdi, qword ptr fs:[0x28]
0x60bc:	mov	rax, r15
0x60bf:	jne	0x6fc7


0x609a:	call	0x1590


0x63c5:	mov	qword ptr [rbp - 0x3c8], rax
0x63cc:	mov	eax, dword ptr [rax]
0x63ce:	mov	qword ptr [rbp - 0x3f8], rbx
0x63d5:	mov	dword ptr [rbp - 0x424], eax
0x63db:	nop	dword ptr [rax + rax]
0x63e0:	mov	rax, qword ptr [rbp - 0x3c8]
0x63e7:	mov	rbx, r12
0x63ea:	mov	r10d, 0x7fffffff
0x63f0:	sub	rbx, r14
0x63f3:	mov	dword ptr [rbp - 0x3bc], 0xffffffff
0x63fd:	cmp	rbx, 0x7fffffff
0x6404:	mov	dword ptr [rax], 0
0x640a:	mov	eax, dword ptr [rbp - 0x3d0]
0x6410:	cmovbe	r10, rbx
0x6414:	cmp	eax, 0x11
0x6417:	ja	0x6df6


0x641d:	lea	rsi, [rip + 0x2ca8]
0x6424:	movsxd	rax, dword ptr [rsi + rax*4]
0x6428:	add	rax, rsi
0x642b:	jmp	rax


0x5bb5:	mov	dword ptr [rax], 0x4b
0x5bbb:	mov	eax, 0xffffffff
0x5bc0:	jmp	0x5b92


0x603a:	mov	qword ptr [rbp - 0x3c8], rax
0x6041:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6048:	je	0x6053


0x604a:	test	r15, r15
0x604d:	jne	0x6b30


0x6b30:	mov	rdi, r15
0x6b33:	call	0x1590


0x6e3d:	xor	r15d, r15d
0x6e40:	mov	dword ptr [rax], 0x16
0x6e46:	jmp	0x60af


0x699d:	mov	qword ptr [rbp - 0x3c8], rax
0x69a4:	jmp	0x6067


0x7d01:	mov	dword ptr [rax], 0xc
0x7d07:	mov	eax, 0xffffffff
0x7d0c:	jmp	0x7292


0x7292:	add	rsp, 0x58
0x7296:	pop	rbx
0x7297:	pop	rbp
0x7298:	pop	r12
0x729a:	pop	r13
0x729c:	pop	r14
0x729e:	pop	r15
0x72a0:	ret	


0x7a63:	mov	dword ptr [rax], 0x16
0x7a69:	mov	eax, 0xffffffff
0x7a6e:	jmp	0x7292


0x4751:	mov	r13, rax
0x4754:	mov	eax, dword ptr [rax]
0x4756:	test	r15d, r15d
0x4759:	mov	rbx, qword ptr [rip + 0x206900]
0x4760:	mov	dword ptr [rsp + 0x18], eax
0x4764:	js	0x48d1


0x48d1:	call	0x15a0


0x476a:	cmp	dword ptr [rip + 0x2068e7], r15d
0x4771:	jg	0x47d5


0x4773:	cmp	r15d, 0x7fffffff
0x477a:	je	0x48d6


0x47d5:	mov	eax, dword ptr [rbp + 4]
0x47d8:	shl	r15, 4
0x47dc:	sub	rsp, 8
0x47e0:	add	rbx, r15
0x47e3:	lea	r15, [rbp + 8]
0x47e7:	mov	r8d, dword ptr [rbp]
0x47eb:	mov	r11, qword ptr [rbx]
0x47ee:	mov	r12, qword ptr [rbx + 8]
0x47f2:	mov	rcx, r14
0x47f5:	or	eax, 1
0x47f8:	mov	dword ptr [rsp + 0x24], eax
0x47fc:	push	qword ptr [rbp + 0x30]
0x47ff:	mov	r9d, eax
0x4802:	push	qword ptr [rbp + 0x28]
0x4805:	push	r15
0x4807:	mov	rsi, r11
0x480a:	mov	rdx, qword ptr [rsp + 0x28]
0x480f:	mov	rdi, r12
0x4812:	mov	qword ptr [rsp + 0x30], r11
0x4817:	call	0x34f0


0x48d6:	call	0x5900


0x4780:	lea	r12d, [r15 + 1]
0x4784:	lea	rax, [rip + 0x2068e5]
0x478b:	movsxd	rsi, r12d
0x478e:	shl	rsi, 4
0x4792:	cmp	rbx, rax
0x4795:	je	0x48b0


0x48b0:	xor	edi, edi
0x48b2:	call	0x5710


0x479b:	mov	rdi, rbx
0x479e:	call	0x5710


0x47a3:	mov	rbx, rax
0x47a6:	mov	qword ptr [rip + 0x2068b3], rax
0x47ad:	movsxd	rdi, dword ptr [rip + 0x2068a4]
0x47b4:	mov	edx, r12d
0x47b7:	xor	esi, esi
0x47b9:	sub	edx, edi
0x47bb:	shl	rdi, 4
0x47bf:	movsxd	rdx, edx
0x47c2:	add	rdi, rbx
0x47c5:	shl	rdx, 4
0x47c9:	call	0x16e0


0x48b7:	movdqa	xmm0, xmmword ptr [rip + 0x2067b1]
0x48bf:	mov	rbx, rax
0x48c2:	mov	qword ptr [rip + 0x206797], rax
0x48c9:	movups	xmmword ptr [rax], xmm0
0x48cc:	jmp	0x47ad


0x47ad:	movsxd	rdi, dword ptr [rip + 0x2068a4]
0x47b4:	mov	edx, r12d
0x47b7:	xor	esi, esi
0x47b9:	sub	edx, edi
0x47bb:	shl	rdi, 4
0x47bf:	movsxd	rdx, edx
0x47c2:	add	rdi, rbx
0x47c5:	shl	rdx, 4
0x47c9:	call	0x16e0


0x48ec:	mov	r12d, dword ptr [rax]
0x48ef:	mov	rbp, rax
0x48f2:	lea	rax, [rip + 0x206927]
0x48f9:	test	rbx, rbx
0x48fc:	mov	esi, 0x38
0x4901:	cmove	rbx, rax
0x4905:	mov	rdi, rbx
0x4908:	call	0x58b0


0x4a22:	mov	r12d, dword ptr [rax]
0x4a25:	mov	rbp, rax
0x4a28:	lea	rax, [rbx + 8]
0x4a2c:	sub	rsp, 8
0x4a30:	mov	r9d, dword ptr [rbx + 4]
0x4a34:	push	qword ptr [rbx + 0x30]
0x4a37:	mov	r8d, dword ptr [rbx]
0x4a3a:	push	qword ptr [rbx + 0x28]
0x4a3d:	mov	rdx, r15
0x4a40:	push	rax
0x4a41:	mov	rcx, qword ptr [rsp + 0x28]
0x4a46:	mov	rsi, r14
0x4a49:	mov	rdi, r13
0x4a4c:	call	0x34f0


0x4a9f:	test	r12, r12
0x4aa2:	mov	r13, rax
0x4aa5:	mov	eax, dword ptr [rax]
0x4aa7:	sete	bpl
0x4aab:	or	ebp, dword ptr [rbx + 4]
0x4aae:	lea	r10, [rbx + 8]
0x4ab2:	sub	rsp, 8
0x4ab6:	mov	r8d, dword ptr [rbx]
0x4ab9:	mov	rcx, r15
0x4abc:	mov	dword ptr [rsp + 0x14], eax
0x4ac0:	push	qword ptr [rbx + 0x30]
0x4ac3:	mov	rdx, r14
0x4ac6:	push	qword ptr [rbx + 0x28]
0x4ac9:	push	r10
0x4acb:	xor	esi, esi
0x4acd:	mov	r9d, ebp
0x4ad0:	xor	edi, edi
0x4ad2:	mov	qword ptr [rsp + 0x40], r10
0x4ad7:	call	0x34f0


0x596d:	mov	rsi, rsp
0x5970:	mov	r12, rax
0x5973:	mov	dword ptr [rax], 0
0x5979:	mov	rdi, rbp
0x597c:	call	r14


0x5af7:	cmp	rax, -3
0x5afb:	mov	rbp, rax
0x5afe:	jbe	0x5b20


0x5b20:	mov	rdx, qword ptr [rsp + 8]
0x5b25:	xor	rdx, qword ptr fs:[0x28]
0x5b2e:	mov	rax, rbp
0x5b31:	jne	0x5b3e


0x5b00:	test	r12, r12
0x5b03:	je	0x5b20


0x5b33:	add	rsp, 0x18
0x5b37:	pop	rbx
0x5b38:	pop	rbp
0x5b39:	pop	r12
0x5b3b:	pop	r13
0x5b3d:	ret	


0x5b3e:	call	0x1670


0x5b05:	xor	edi, edi
0x5b07:	call	0x5d10


0x5c9c:	mov	ebx, dword ptr [rbp]
0x5c9f:	mov	rdi, rbp
0x5ca2:	mov	r12, rax
0x5ca5:	call	0x5db0


0x193a:	lea	rsi, [rip + 0x6734]
0x1941:	lea	rdi, [rip + 0x66d5]
0x1948:	test	rax, rax
0x194b:	setne	byte ptr [rip + 0x2097a7]
0x1952:	xor	ebx, ebx
0x1954:	call	0x1630


0x1630:	jmp	qword ptr [rip + 0x209842]




0x5d1b:	mov	rdx, rax
0x5d1e:	mov	eax, 1
0x5d23:	test	rdx, rdx
0x5d26:	je	0x5d45


0x5d45:	add	rsp, 8
0x5d49:	ret	


0x5d28:	lea	rdi, [rip + 0x23f1]
0x5d2f:	mov	ecx, 2
0x5d34:	mov	rsi, rdx
0x5d37:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5d37:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5d39:	seta	cl
0x5d3c:	sbb	cl, 0
0x5d3f:	xor	eax, eax
0x5d41:	test	cl, cl
0x5d43:	jne	0x5d50


0x5d50:	lea	rdi, [rip + 0x3369]
0x5d57:	mov	ecx, 6
0x5d5c:	mov	rsi, rdx
0x5d5f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5d5f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5d61:	seta	al
0x5d64:	sbb	al, 0
0x5d66:	test	al, al
0x5d68:	setne	al
0x5d6b:	add	rsp, 8
0x5d6f:	ret	


0x5b0c:	test	al, al
0x5b0e:	jne	0x5b20


0x5b10:	movzx	eax, byte ptr [r13]
0x5b15:	mov	ebp, 1
0x5b1a:	mov	dword ptr [rbx], eax
0x5b1c:	nop	dword ptr [rax]
0x5b20:	mov	rdx, qword ptr [rsp + 8]
0x5b25:	xor	rdx, qword ptr fs:[0x28]
0x5b2e:	mov	rax, rbp
0x5b31:	jne	0x5b3e


0x5d7e:	test	rax, rax
0x5d81:	je	0x5da0


0x5da0:	lea	rax, [rip + 0x331f]
0x5da7:	add	rsp, 8
0x5dab:	ret	


0x5d83:	cmp	byte ptr [rax], 0
0x5d86:	lea	rdx, [rip + 0x3339]
0x5d8d:	cmove	rax, rdx
0x5d91:	add	rsp, 8
0x5d95:	ret	


0x3410:	movzx	edx, byte ptr [rax]
0x3413:	and	edx, 0xffffffdf
0x3416:	cmp	dl, 0x55
0x3419:	je	0x3490


0x3490:	movzx	edx, byte ptr [rax + 1]
0x3494:	and	edx, 0xffffffdf
0x3497:	cmp	dl, 0x54
0x349a:	jne	0x3420


0x341b:	cmp	dl, 0x47
0x341e:	je	0x3440


0x349c:	movzx	edx, byte ptr [rax + 2]
0x34a0:	and	edx, 0xffffffdf
0x34a3:	cmp	dl, 0x46
0x34a6:	jne	0x3420


0x3420:	lea	rax, [rip + 0x544c]
0x3427:	lea	rdx, [rip + 0x4cb9]
0x342e:	cmp	ebx, 9
0x3431:	cmovne	rax, rdx
0x3435:	add	rsp, 8
0x3439:	pop	rbx
0x343a:	pop	rbp
0x343b:	ret	


0x3440:	movzx	edx, byte ptr [rax + 1]
0x3444:	and	edx, 0xffffffdf
0x3447:	cmp	dl, 0x42
0x344a:	jne	0x3420


0x34ac:	cmp	byte ptr [rax + 3], 0x2d
0x34b0:	jne	0x3420


0x344c:	cmp	byte ptr [rax + 2], 0x31
0x3450:	jne	0x3420


0x34b6:	cmp	byte ptr [rax + 4], 0x38
0x34ba:	jne	0x3420


0x3452:	cmp	byte ptr [rax + 3], 0x38
0x3456:	jne	0x3420


0x34c0:	cmp	byte ptr [rax + 5], 0
0x34c4:	jne	0x3420


0x3458:	cmp	byte ptr [rax + 4], 0x30
0x345c:	jne	0x3420


0x34ca:	cmp	byte ptr [rbp], 0x60
0x34ce:	lea	rax, [rip + 0x538f]
0x34d5:	lea	rdx, [rip + 0x538c]
0x34dc:	cmovne	rax, rdx
0x34e0:	add	rsp, 8
0x34e4:	pop	rbx
0x34e5:	pop	rbp
0x34e6:	ret	


0x345e:	cmp	byte ptr [rax + 5], 0x33
0x3462:	jne	0x3420


0x3464:	cmp	byte ptr [rax + 6], 0x30
0x3468:	jne	0x3420


0x346a:	cmp	byte ptr [rax + 7], 0
0x346e:	jne	0x3420


0x3470:	cmp	byte ptr [rbp], 0x60
0x3474:	lea	rax, [rip + 0x53f1]
0x347b:	lea	rdx, [rip + 0x53ee]
0x3482:	cmovne	rax, rdx
0x3486:	add	rsp, 8
0x348a:	pop	rbx
0x348b:	pop	rbp
0x348c:	ret	


0x5ea3:	mov	edx, r12d
0x5ea6:	mov	rsi, rbp
0x5ea9:	mov	edi, eax
0x5eab:	call	0x16d0


0x16d0:	jmp	qword ptr [rip + 0x2097f2]




0x5dbc:	test	eax, eax
0x5dbe:	mov	rdi, rbx
0x5dc1:	js	0x5e17


0x5e17:	pop	rbx
0x5e18:	pop	rbp
0x5e19:	pop	r12
0x5e1b:	jmp	0x1620


0x5dc3:	call	0x17c0


0x1620:	jmp	qword ptr [rip + 0x20984a]




0x5dc8:	test	eax, eax
0x5dca:	jne	0x5df8


0x5dcc:	mov	rdi, rbx
0x5dcf:	call	0x5e30


0x5df8:	mov	rdi, rbx
0x5dfb:	call	0x1770


0x5e00:	xor	esi, esi
0x5e02:	mov	edx, 1
0x5e07:	mov	edi, eax
0x5e09:	call	0x16d0


0x5e0e:	cmp	rax, -1
0x5e12:	jne	0x5dcc


0x5e14:	mov	rdi, rbx
0x5e17:	pop	rbx
0x5e18:	pop	rbp
0x5e19:	pop	r12
0x5e1b:	jmp	0x1620


0x5eb0:	cmp	rax, -1
0x5eb4:	je	0x5ec2


0x5ec2:	pop	rbx
0x5ec3:	pop	rbp
0x5ec4:	pop	r12
0x5ec6:	ret	


0x5eb6:	and	dword ptr [rbx], 0xffffffef
0x5eb9:	mov	qword ptr [rbx + 0x90], rax
0x5ec0:	xor	eax, eax
0x5ec2:	pop	rbx
0x5ec3:	pop	rbp
0x5ec4:	pop	r12
0x5ec6:	ret	


0x1959:	lea	rdi, [rip + 0x66bd]
0x1960:	call	0x1610


0x1610:	jmp	qword ptr [rip + 0x209852]




0x490d:	mov	dword ptr [rbp], r12d
0x4911:	pop	rbx
0x4912:	pop	rbp
0x4913:	pop	r12
0x4915:	ret	


0x47ce:	mov	dword ptr [rip + 0x206883], r12d
0x47d5:	mov	eax, dword ptr [rbp + 4]
0x47d8:	shl	r15, 4
0x47dc:	sub	rsp, 8
0x47e0:	add	rbx, r15
0x47e3:	lea	r15, [rbp + 8]
0x47e7:	mov	r8d, dword ptr [rbp]
0x47eb:	mov	r11, qword ptr [rbx]
0x47ee:	mov	r12, qword ptr [rbx + 8]
0x47f2:	mov	rcx, r14
0x47f5:	or	eax, 1
0x47f8:	mov	dword ptr [rsp + 0x24], eax
0x47fc:	push	qword ptr [rbp + 0x30]
0x47ff:	mov	r9d, eax
0x4802:	push	qword ptr [rbp + 0x28]
0x4805:	push	r15
0x4807:	mov	rsi, r11
0x480a:	mov	rdx, qword ptr [rsp + 0x28]
0x480f:	mov	rdi, r12
0x4812:	mov	qword ptr [rsp + 0x30], r11
0x4817:	call	0x34f0


0x26c9:	nop	dword ptr [rax]


0x5930:	call	0x15a0


0x565a:	lea	rsi, [rip + 0x376c]
0x5661:	mov	edx, 5
0x5666:	xor	edi, edi
0x5668:	call	0x1640


0x566d:	lea	rcx, [rip + 0x3014]
0x5674:	lea	rdx, [rip + 0x299e]
0x567b:	mov	rsi, rax
0x567e:	mov	edi, 1
0x5683:	xor	eax, eax
0x5685:	call	0x1800


0x568a:	mov	rbx, qword ptr [rip + 0x2059f7]
0x5691:	lea	rsi, [rip + 0x3968]
0x5698:	xor	edi, edi
0x569a:	mov	edx, 5
0x569f:	call	0x1640


0x56a4:	mov	rsi, rbx
0x56a7:	mov	rdi, rax
0x56aa:	pop	rbx
0x56ab:	jmp	0x1720


0x2b23:	mov	rbx, qword ptr [rip + 0x20855e]
0x2b2a:	lea	rsi, [rip + 0x56af]
0x2b31:	mov	edx, 5
0x2b36:	xor	edi, edi
0x2b38:	call	0x1640


0x2b3d:	mov	rsi, rbx
0x2b40:	mov	rdi, rax
0x2b43:	call	0x1720


0x2b48:	mov	rbx, qword ptr [rip + 0x208539]
0x2b4f:	lea	rsi, [rip + 0x56ca]
0x2b56:	mov	edx, 5
0x2b5b:	xor	edi, edi
0x2b5d:	call	0x1640


0x2b62:	mov	rsi, rbx
0x2b65:	mov	rdi, rax
0x2b68:	call	0x1720


0x2b6d:	mov	rbx, qword ptr [rip + 0x208514]
0x2b74:	lea	rsi, [rip + 0x56f5]
0x2b7b:	mov	edx, 5
0x2b80:	xor	edi, edi
0x2b82:	call	0x1640


0x2b87:	mov	rsi, rbx
0x2b8a:	mov	rdi, rax
0x2b8d:	call	0x1720


0x2b92:	mov	rbx, qword ptr [rip + 0x2084ef]
0x2b99:	lea	rsi, [rip + 0x57a8]
0x2ba0:	mov	edx, 5
0x2ba5:	xor	edi, edi
0x2ba7:	call	0x1640


0x2bac:	mov	rsi, rbx
0x2baf:	mov	rdi, rax
0x2bb2:	call	0x1720


0x2bb7:	mov	rbx, qword ptr [rip + 0x2084ca]
0x2bbe:	lea	rsi, [rip + 0x57b3]
0x2bc5:	mov	edx, 5
0x2bca:	xor	edi, edi
0x2bcc:	call	0x1640


0x2bd1:	mov	rsi, rbx
0x2bd4:	mov	rdi, rax
0x2bd7:	call	0x1720


0x2bdc:	mov	rbx, qword ptr [rip + 0x2084a5]
0x2be3:	lea	rsi, [rip + 0x57c6]
0x2bea:	mov	edx, 5
0x2bef:	xor	edi, edi
0x2bf1:	call	0x1640


0x2bf6:	mov	rsi, rbx
0x2bf9:	mov	rdi, rax
0x2bfc:	call	0x1720


0x2c01:	mov	rbx, qword ptr [rip + 0x208480]
0x2c08:	lea	rsi, [rip + 0x59a9]
0x2c0f:	mov	edx, 5
0x2c14:	xor	edi, edi
0x2c16:	call	0x1640


0x2c1b:	mov	rsi, rbx
0x2c1e:	mov	rdi, rax
0x2c21:	lea	rbx, [rip + 0x5377]
0x2c28:	call	0x1720


0x2c2d:	lea	rax, [rip + 0x536f]
0x2c34:	lea	rcx, [rip + 0x53a9]
0x2c3b:	mov	qword ptr [rsp + 0x60], 0
0x2c44:	mov	qword ptr [rsp + 0x68], 0
0x2c4d:	mov	rdx, rsp
0x2c50:	mov	qword ptr [rsp], rax
0x2c54:	lea	rax, [rip + 0x534a]
0x2c5b:	mov	qword ptr [rsp + 0x30], rcx
0x2c60:	lea	rcx, [rip + 0x5387]
0x2c67:	mov	qword ptr [rsp + 8], rax
0x2c6c:	lea	rax, [rip + 0x53aa]
0x2c73:	mov	qword ptr [rsp + 0x40], rcx
0x2c78:	lea	rcx, [rip + 0x5379]
0x2c7f:	mov	qword ptr [rsp + 0x10], rax
0x2c84:	lea	rax, [rip + 0x532a]
0x2c8b:	mov	qword ptr [rsp + 0x50], rcx
0x2c90:	mov	qword ptr [rsp + 0x18], rax
0x2c95:	lea	rax, [rip + 0x532f]
0x2c9c:	mov	qword ptr [rsp + 0x20], rax
0x2ca1:	lea	rax, [rip + 0x532d]
0x2ca8:	mov	qword ptr [rsp + 0x28], rax
0x2cad:	mov	qword ptr [rsp + 0x38], rax
0x2cb2:	mov	qword ptr [rsp + 0x48], rax
0x2cb7:	mov	qword ptr [rsp + 0x58], rax
0x2cbc:	nop	dword ptr [rax]
0x2cc0:	add	rdx, 0x10
0x2cc4:	mov	rdi, qword ptr [rdx]
0x2cc7:	test	rdi, rdi
0x2cca:	je	0x2cdf


0x2cdf:	mov	r12, qword ptr [rdx + 8]
0x2ce3:	xor	edi, edi
0x2ce5:	mov	edx, 5
0x2cea:	lea	rsi, [rip + 0x5311]
0x2cf1:	test	r12, r12
0x2cf4:	je	0x2dbb


0x2ccc:	mov	ecx, 4
0x2cd1:	mov	rsi, rbx
0x2cd4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2dbb:	call	0x1640


0x2cfa:	call	0x1640


0x2cd4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2cd6:	seta	al
0x2cd9:	sbb	al, 0
0x2cdb:	test	al, al
0x2cdd:	jne	0x2cc0


0x2cc0:	add	rdx, 0x10
0x2cc4:	mov	rdi, qword ptr [rdx]
0x2cc7:	test	rdi, rdi
0x2cca:	je	0x2cdf


0x2cff:	lea	rcx, [rip + 0x5982]
0x2d06:	lea	rdx, [rip + 0x530c]
0x2d0d:	mov	rsi, rax
0x2d10:	mov	edi, 1
0x2d15:	xor	eax, eax
0x2d17:	call	0x1800


0x2d1c:	xor	esi, esi
0x2d1e:	mov	edi, 5
0x2d23:	call	0x17f0


0x2d28:	test	rax, rax
0x2d2b:	je	0x2d49


0x2d49:	lea	rsi, [rip + 0x52db]
0x2d50:	xor	edi, edi
0x2d52:	mov	edx, 5
0x2d57:	call	0x1640


0x2d2d:	lea	rsi, [rip + 0x52f3]
0x2d34:	mov	edx, 3
0x2d39:	mov	rdi, rax
0x2d3c:	call	0x15c0


0x15c0:	jmp	qword ptr [rip + 0x20987a]




0x2d5c:	lea	rcx, [rip + 0x523c]
0x2d63:	lea	rdx, [rip + 0x591e]
0x2d6a:	mov	rsi, rax
0x2d6d:	mov	edi, 1
0x2d72:	xor	eax, eax
0x2d74:	call	0x1800


0x2d79:	cmp	r12, rbx
0x2d7c:	lea	rcx, [rip + 0x523c]
0x2d83:	lea	rbx, [rip + 0x6017]
0x2d8a:	cmove	rbx, rcx
0x2d8e:	lea	rsi, [rip + 0x5963]
0x2d95:	xor	edi, edi
0x2d97:	mov	edx, 5
0x2d9c:	call	0x1640


0x2da1:	mov	rcx, rbx
0x2da4:	mov	rsi, rax
0x2da7:	mov	rdx, r12
0x2daa:	mov	edi, 1
0x2daf:	xor	eax, eax
0x2db1:	call	0x1800


0x2db6:	jmp	0x2af6


0x2dc0:	lea	rcx, [rip + 0x58c1]
0x2dc7:	lea	rdx, [rip + 0x524b]
0x2dce:	mov	rsi, rax
0x2dd1:	mov	edi, 1
0x2dd6:	xor	eax, eax
0x2dd8:	call	0x1800


0x2ddd:	xor	esi, esi
0x2ddf:	mov	edi, 5
0x2de4:	call	0x17f0


0x2de9:	test	rax, rax
0x2dec:	je	0x2e06


0x2e06:	lea	rsi, [rip + 0x521e]
0x2e0d:	mov	edx, 5
0x2e12:	xor	edi, edi
0x2e14:	lea	r12, [rip + 0x5184]
0x2e1b:	lea	rbx, [rip + 0x519d]
0x2e22:	call	0x1640


0x2dee:	lea	rsi, [rip + 0x5232]
0x2df5:	mov	edx, 3
0x2dfa:	mov	rdi, rax
0x2dfd:	call	0x15c0


0x2e27:	lea	rcx, [rip + 0x5171]
0x2e2e:	lea	rdx, [rip + 0x5853]
0x2e35:	mov	rsi, rax
0x2e38:	mov	edi, 1
0x2e3d:	xor	eax, eax
0x2e3f:	call	0x1800


0x2e44:	jmp	0x2d8e


0x2d8e:	lea	rsi, [rip + 0x5963]
0x2d95:	xor	edi, edi
0x2d97:	mov	edx, 5
0x2d9c:	call	0x1640


0x511c:	cmp	r12, 9
0x5120:	ja	0x5460


0x5126:	lea	rdx, [rip + 0x3f1b]
0x512d:	movsxd	rax, dword ptr [rdx + r12*4]
0x5131:	add	rax, rdx
0x5134:	jmp	rax


0x5460:	mov	r10, qword ptr [rbx + 0x40]
0x5464:	mov	r9, qword ptr [rbx + 0x38]
0x5468:	mov	edx, 5
0x546d:	mov	rax, qword ptr [rbx + 0x10]
0x5471:	mov	r8, qword ptr [rbx + 8]
0x5475:	lea	rsi, [rip + 0x3b44]
0x547c:	mov	r13, qword ptr [rbx + 0x30]
0x5480:	mov	r12, qword ptr [rbx + 0x28]
0x5484:	mov	r15, qword ptr [rbx + 0x20]
0x5488:	mov	r14, qword ptr [rbx + 0x18]
0x548c:	mov	qword ptr [rsp + 0x18], r10
0x5491:	mov	qword ptr [rsp + 0x10], r9
0x5496:	mov	qword ptr [rsp], rax
0x549a:	mov	qword ptr [rsp + 8], r8
0x549f:	mov	rbx, qword ptr [rbx]
0x54a2:	jmp	0x5232


0x5232:	xor	edi, edi
0x5234:	call	0x1640


0x5239:	mov	r10, qword ptr [rsp + 0x18]
0x523e:	push	r10
0x5240:	jmp	0x5184


0x5184:	mov	r9, qword ptr [rsp + 0x18]
0x5189:	mov	rdx, rax
0x518c:	mov	rcx, rbx
0x518f:	mov	esi, 1
0x5194:	mov	rdi, rbp
0x5197:	xor	eax, eax
0x5199:	push	r9
0x519b:	push	r13
0x519d:	push	r12
0x519f:	push	r15
0x51a1:	push	r14
0x51a3:	mov	r9, qword ptr [rsp + 0x30]
0x51a8:	mov	r8, qword ptr [rsp + 0x38]
0x51ad:	call	0x1890


0x51b2:	add	rsp, 0x30
0x51b6:	add	rsp, 0x28
0x51ba:	pop	rbx
0x51bb:	pop	rbp
0x51bc:	pop	r12
0x51be:	pop	r13
0x51c0:	pop	r14
0x51c2:	pop	r15
0x51c4:	ret	


0x267b:	cmp	rax, rbp
0x267e:	sete	al
0x2681:	add	rsp, 8
0x2685:	pop	rbx
0x2686:	pop	rbp
0x2687:	ret	


0x2854:	mov	rdx, rax
0x2857:	mov	eax, dword ptr [rsp + 8]
0x285b:	test	eax, eax
0x285d:	sete	byte ptr [rsp]
0x2861:	nop	dword ptr [rax]
0x2868:	cmp	r15, r12
0x286b:	jb	0x2877


0x2877:	mov	rax, qword ptr [rip + 0x208872]
0x287e:	lea	rcx, [rdx + 1]
0x2882:	movzx	eax, byte ptr [rax]
0x2885:	mov	byte ptr [rdx], al
0x2887:	lea	rax, [r14 + r15 - 1]
0x288c:	jmp	0x289d


0x286d:	cmp	byte ptr [rsp], 0
0x2871:	je	0x29b8


0x289d:	movzx	edx, byte ptr [rax]
0x28a0:	cmp	dl, 0x38
0x28a3:	jg	0x2890


0x29b8:	cmp	r15, r12
0x29bb:	ja	0x29dc


0x28a5:	add	edx, 1
0x28a8:	cmp	rbx, r15
0x28ab:	mov	byte ptr [rax], dl
0x28ad:	je	0x2922


0x2890:	sub	rax, 1
0x2894:	mov	byte ptr [rax + 1], 0x30
0x2898:	cmp	rax, r14
0x289b:	jb	0x2910


0x29bd:	mov	rsi, qword ptr [rsp + 0x30]
0x29c2:	mov	rdi, r14
0x29c5:	mov	qword ptr [rsp + 8], rdx
0x29ca:	call	0x1740


0x29dc:	mov	byte ptr [rdx], 0xa
0x29df:	lea	rsi, [rdx + 1]
0x29e3:	mov	rcx, qword ptr [rip + 0x20869e]
0x29ea:	mov	edx, 1
0x29ef:	mov	rdi, rbp
0x29f2:	sub	rsi, rbp
0x29f5:	call	0x17d0


0x2922:	lea	r11, [rbx + rbx]
0x2926:	mov	rdi, qword ptr [rsp + 0x10]
0x292b:	mov	qword ptr [rsp + 0x20], rcx
0x2930:	lea	r10, [r11 + 1]
0x2934:	mov	qword ptr [rsp + 0x18], r11
0x2939:	mov	rsi, r10
0x293c:	mov	qword ptr [rsp + 8], r10
0x2941:	call	0x5710


0x28af:	mov	rdx, r15
0x28b2:	mov	rsi, r14
0x28b5:	mov	rdi, rcx
0x28b8:	call	0x1810


0x2910:	add	r15, 1
0x2914:	mov	byte ptr [r14 - 1], 0x31
0x2919:	sub	r14, 1
0x291d:	cmp	rbx, r15
0x2920:	jne	0x28af


0x17d0:	jmp	qword ptr [rip + 0x209772]




0x28bd:	mov	rdx, rax
0x28c0:	mov	rax, r15
0x28c3:	not	rax
0x28c6:	add	rax, r13
0x28c9:	cmp	rdx, rax
0x28cc:	jbe	0x2868


0x2868:	cmp	r15, r12
0x286b:	jb	0x2877


0x28ce:	mov	rcx, qword ptr [rip + 0x2087b3]
0x28d5:	mov	rsi, rdx
0x28d8:	mov	rdi, rbp
0x28db:	sub	rsi, rbp
0x28de:	mov	edx, 1
0x28e3:	call	0x17d0


0x2946:	lea	rdx, [rbx + 1]
0x294a:	lea	rdi, [rax + rbx]
0x294e:	mov	rsi, rax
0x2951:	mov	qword ptr [rsp + 0x10], rax
0x2956:	call	0x1820


0x1820:	jmp	qword ptr [rip + 0x20974a]




0x29cf:	test	eax, eax
0x29d1:	mov	rdx, qword ptr [rsp + 8]
0x29d6:	js	0x2877


0x2a87:	test	eax, eax
0x2a89:	jle	0x2815


0x2a8f:	xor	ebx, ebx
0x2a91:	jmp	0x2a09


0x5e67:	mov	rdi, rbx
0x5e6a:	pop	rbx
0x5e6b:	jmp	0x17a0


0x55f6:	mov	rax, qword ptr [rsp + 0x78]
0x55fb:	xor	rax, qword ptr fs:[0x28]
0x5604:	jne	0x5610


0x5606:	add	rsp, 0xb8
0x560d:	pop	rbx
0x560e:	pop	rbp
0x560f:	ret	


0x5610:	call	0x1670


0x5520:	mov	rax, qword ptr [rsp + 0x58]
0x5525:	xor	rax, qword ptr fs:[0x28]
0x552e:	jne	0x5535


0x5530:	add	rsp, 0x68
0x5534:	ret	


0x5535:	call	0x1670


0x295b:	mov	r10, qword ptr [rsp + 8]
0x2960:	mov	r11, qword ptr [rsp + 0x18]
0x2965:	mov	r14, rax
0x2968:	mov	rcx, qword ptr [rsp + 0x20]
0x296d:	add	r10, r10
0x2970:	cmp	r10, qword ptr [rsp + 0x28]
0x2975:	mov	rbx, r11
0x2978:	jbe	0x28af


0x297e:	sub	rcx, rbp
0x2981:	mov	rsi, r10
0x2984:	mov	rdi, rbp
0x2987:	mov	qword ptr [rsp + 8], rcx
0x298c:	mov	qword ptr [rsp + 0x18], r10
0x2991:	call	0x5710


0x2996:	mov	r10, qword ptr [rsp + 0x18]
0x299b:	mov	rcx, qword ptr [rsp + 8]
0x29a0:	mov	rbp, rax
0x29a3:	lea	r13, [rax + r10]
0x29a7:	add	rcx, rax
0x29aa:	mov	qword ptr [rsp + 0x28], r10
0x29af:	jmp	0x28af


0x28e8:	cmp	rax, 1
0x28ec:	jne	0x2a96


0x28f2:	mov	rdx, rbp
0x28f5:	jmp	0x2868


0x2a96:	call	0x2690


0x2a9b:	nop	dword ptr [rax + rax]


0x29fa:	sub	rax, 1
0x29fe:	jne	0x2a96


0x2a04:	mov	ebx, 1
0x2a09:	mov	rdi, qword ptr [rsp + 0x10]
0x2a0e:	call	0x1590


0x2e02:	test	eax, eax
0x2e04:	jne	0x2e49


0x2e49:	lea	r12, [rip + 0x514f]
0x2e50:	mov	r13, qword ptr [rip + 0x208231]
0x2e57:	lea	rsi, [rip + 0x5852]
0x2e5e:	xor	edi, edi
0x2e60:	mov	edx, 5
0x2e65:	call	0x1640


0x2e6a:	mov	rsi, r13
0x2e6d:	mov	rdi, rax
0x2e70:	call	0x1720


0x2e75:	jmp	0x2d49


0x2d41:	test	eax, eax
0x2d43:	jne	0x2e50


0x2e50:	mov	r13, qword ptr [rip + 0x208231]
0x2e57:	lea	rsi, [rip + 0x5852]
0x2e5e:	xor	edi, edi
0x2e60:	mov	edx, 5
0x2e65:	call	0x1640


0x1965:	lea	rdi, [rip + 0x1944]
0x196c:	call	0x7f60


0x1971:	lea	rax, [rip + 0x7428]
0x1978:	mov	byte ptr [rip + 0x209779], 0
0x197f:	mov	qword ptr [rip + 0x20976a], rax
0x1986:	mov	r15d, dword ptr [rip + 0x209703]
0x198d:	cmp	r15d, r13d
0x1990:	jge	0x1a03


0x1992:	movsxd	rax, r15d
0x1995:	mov	rax, qword ptr [r12 + rax*8]
0x1999:	cmp	byte ptr [rax], 0x2d
0x199c:	jne	0x19ae


0x1a03:	mov	eax, r13d
0x1a06:	sub	eax, r15d
0x1a09:	mov	dword ptr [rsp], eax
0x1a0c:	je	0x242e


0x199e:	movsx	eax, byte ptr [rax + 1]
0x19a2:	cmp	al, 0x2e
0x19a4:	je	0x1a03


0x19ae:	lea	rdx, [rip + 0x66d8]
0x19b5:	xor	r8d, r8d
0x19b8:	mov	rcx, rbp
0x19bb:	mov	rsi, r12
0x19be:	mov	edi, r13d
0x19c1:	call	0x1680


0x242e:	lea	rsi, [rip + 0x5c6e]
0x2435:	xor	edi, edi
0x2437:	mov	edx, 5
0x243c:	call	0x1640


0x1a12:	cmp	dword ptr [rsp], 3
0x1a16:	ja	0x233f


0x19a6:	sub	eax, 0x30
0x19a9:	cmp	eax, 9
0x19ac:	jbe	0x1a03


0x1680:	jmp	qword ptr [rip + 0x20981a]


0x1a1c:	test	rbx, rbx
0x1a1f:	je	0x1ad3


0x233f:	movsxd	rdx, r15d
0x2342:	mov	rdi, qword ptr [r12 + rdx*8 + 0x18]
0x2347:	call	0x5070




0x1ad3:	xor	r14d, r14d
0x1ad6:	xor	ebp, ebp
0x1ad8:	movsxd	rax, r15d
0x1adb:	lea	rcx, [rax*8]
0x1ae3:	mov	rax, qword ptr [r12 + rax*8]
0x1ae7:	mov	qword ptr [rsp + 0x10], rcx
0x1aec:	mov	rdi, rax
0x1aef:	mov	qword ptr [rsp + 0x20], rax
0x1af4:	call	0x2650


0x1a25:	xor	ebp, ebp
0x1a27:	xor	eax, eax
0x1a29:	jmp	0x1a44


0x1a44:	movzx	edx, byte ptr [rbx + rax]
0x1a48:	cmp	dl, 0x25
0x1a4b:	jne	0x1a30


0x1a4d:	lea	r14, [rax + 1]
0x1a51:	lea	rdi, [rbx + r14]
0x1a55:	cmp	byte ptr [rdi], 0x25
0x1a58:	jne	0x1e30


0x1a30:	test	dl, dl
0x1a32:	je	0x2296


0x1a5e:	mov	edx, 2
0x1a63:	jmp	0x1a3d


0x1e30:	lea	rsi, [rip + 0x62ab]
0x1e37:	call	0x16f0


0x2296:	mov	rdi, rbx
0x2299:	call	0x5070


0x1a38:	mov	edx, 1
0x1a3d:	add	rax, rdx
0x1a40:	add	rbp, 1
0x1a44:	movzx	edx, byte ptr [rbx + rax]
0x1a48:	cmp	dl, 0x25
0x1a4b:	jne	0x1a30


0x1a3d:	add	rax, rdx
0x1a40:	add	rbp, 1
0x1a44:	movzx	edx, byte ptr [rbx + rax]
0x1a48:	cmp	dl, 0x25
0x1a4b:	jne	0x1a30


0x1e3c:	add	r14, rax
0x1e3f:	lea	rsi, [rip + 0x613e]
0x1e46:	lea	rdi, [rbx + r14]
0x1e4a:	call	0x16f0


0x1e4f:	lea	r15, [r14 + rax]
0x1e53:	cmp	byte ptr [rbx + r15], 0x2e
0x1e58:	jne	0x1e71


0x1e5a:	add	r15, 1
0x1e5e:	lea	rsi, [rip + 0x611f]
0x1e65:	lea	rdi, [rbx + r15]
0x1e69:	call	0x16f0


0x1e71:	xor	edi, edi
0x1e73:	cmp	byte ptr [rbx + r15], 0x4c
0x1e78:	sete	dil
0x1e7c:	lea	r14, [r15 + rdi]
0x1e80:	lea	rax, [rbx + r14]
0x1e84:	mov	qword ptr [rsp + 0x20], rax
0x1e89:	movsx	eax, byte ptr [rax]
0x1e8c:	test	al, al
0x1e8e:	je	0x2506


0x2506:	mov	rdi, rbx
0x2509:	call	0x5070


0x1e94:	lea	rdi, [rip + 0x6263]
0x1e9b:	mov	esi, eax
0x1e9d:	mov	dword ptr [rsp + 0x10], eax
0x1ea1:	call	0x16a0


0x16a0:	jmp	qword ptr [rip + 0x20980a]




0x1e6e:	add	r15, rax
0x1e71:	xor	edi, edi
0x1e73:	cmp	byte ptr [rbx + r15], 0x4c
0x1e78:	sete	dil
0x1e7c:	lea	r14, [r15 + rdi]
0x1e80:	lea	rax, [rbx + r14]
0x1e84:	mov	qword ptr [rsp + 0x20], rax
0x1e89:	movsx	eax, byte ptr [rax]
0x1e8c:	test	al, al
0x1e8e:	je	0x2506


0x1af9:	test	al, al
0x1afb:	je	0x1b26


0x1b26:	movsxd	rdx, r15d
0x1b29:	lea	eax, [r15 + 1]
0x1b2d:	lea	rdi, [rsp + 0xa0]
0x1b35:	mov	rsi, qword ptr [r12 + rdx*8]
0x1b39:	mov	dword ptr [rip + 0x209551], eax
0x1b3f:	mov	qword ptr [rsp], rdi
0x1b43:	call	0x2e80


0x1afd:	cmp	dword ptr [rsp], 1
0x1b01:	je	0x203b


0x203b:	cmp	byte ptr [rip + 0x2090b6], 1
0x2042:	je	0x1b26


0x1b07:	mov	rcx, qword ptr [rsp + 0x10]
0x1b0c:	mov	rsi, qword ptr [r12 + rcx + 8]
0x1b11:	mov	rdi, rsi
0x1b14:	mov	qword ptr [rsp + 0x30], rsi
0x1b19:	call	0x2650


0x2048:	test	rbx, rbx
0x204b:	jne	0x1b26


0x2051:	mov	rdi, qword ptr [rip + 0x209098]
0x2058:	or	rcx, 0xffffffffffffffff
0x205c:	xor	eax, eax
0x205e:	repne scasb	al, byte ptr [rdi]


0x205e:	repne scasb	al, byte ptr [rdi]


0x2060:	cmp	rcx, -3
0x2064:	jne	0x1b26


0x206a:	mov	ecx, dword ptr [rsp]
0x206d:	lea	rax, [rip + 0x67a2]
0x2074:	cmp	ecx, 1
0x2077:	cmovne	rax, qword ptr [rsp + 0x20]
0x207d:	mov	rdi, rax
0x2080:	lea	eax, [rcx + r15 - 1]
0x2085:	mov	rsi, qword ptr [r12 + rax*8]
0x2089:	call	0x26d0


0x208e:	test	al, al
0x2090:	jne	0x1e05


0x2096:	mov	r15d, dword ptr [rip + 0x208ff3]
0x209d:	jmp	0x1b26


0x1e05:	xor	eax, eax
0x1e07:	mov	rcx, qword ptr [rsp + 0xc8]
0x1e0f:	xor	rcx, qword ptr fs:[0x28]
0x1e18:	jne	0x237d


0x1e1e:	add	rsp, 0xd8
0x1e25:	pop	rbx
0x1e26:	pop	rbp
0x1e27:	pop	r12
0x1e29:	pop	r13
0x1e2b:	pop	r14
0x1e2d:	pop	r15
0x1e2f:	ret	


0x237d:	call	0x1670


0x1b1e:	test	al, al
0x1b20:	jne	0x2005


0x2005:	cmp	dword ptr [rsp], 3
0x2009:	jne	0x203b


0x200b:	mov	rsi, qword ptr [rsp + 0x30]
0x2010:	lea	rdi, [rip + 0x67ff]
0x2017:	call	0x1740


0x201c:	test	eax, eax
0x201e:	jne	0x1b26


0x2024:	mov	rcx, qword ptr [rsp + 0x10]
0x2029:	mov	rdi, qword ptr [r12 + rcx + 0x10]
0x202e:	call	0x2650


0x2033:	test	al, al
0x2035:	je	0x1b26


0x2441:	xor	esi, esi
0x2443:	mov	rdx, rax
0x2446:	xor	edi, edi
0x2448:	xor	eax, eax
0x244a:	call	0x1840


0x244f:	jmp	0x2373


0x2373:	mov	edi, 1
0x2378:	call	0x2aa0


0x5dd4:	test	eax, eax
0x5dd6:	je	0x5e14


0x5dd8:	call	0x15b0


0x5ddd:	mov	r12d, dword ptr [rax]
0x5de0:	mov	rdi, rbx
0x5de3:	mov	rbp, rax
0x5de6:	call	0x1620


0x5deb:	test	r12d, r12d
0x5dee:	jne	0x5e20


0x5df0:	pop	rbx
0x5df1:	pop	rbp
0x5df2:	pop	r12
0x5df4:	ret	


0x5e20:	mov	dword ptr [rbp], r12d
0x5e24:	mov	eax, 0xffffffff
0x5e29:	jmp	0x5df0


0x5caa:	and	ebx, 0x20
0x5cad:	test	ebx, ebx
0x5caf:	jne	0x5cc8


0x5cb1:	test	eax, eax
0x5cb3:	je	0x5cbf


0x5cc8:	test	eax, eax
0x5cca:	jne	0x5ce8


0x5cbf:	pop	rbx
0x5cc0:	pop	rbp
0x5cc1:	pop	r12
0x5cc3:	ret	


0x5cb5:	test	r12, r12
0x5cb8:	mov	eax, 0xffffffff
0x5cbd:	je	0x5cf8


0x5ccc:	call	0x15b0


0x5ce8:	pop	rbx
0x5ce9:	mov	eax, 0xffffffff
0x5cee:	pop	rbp
0x5cef:	pop	r12
0x5cf1:	ret	


0x5cf8:	call	0x15b0


0x5cfd:	cmp	dword ptr [rax], 9
0x5d00:	pop	rbx
0x5d01:	pop	rbp
0x5d02:	pop	r12
0x5d04:	setne	al
0x5d07:	movzx	eax, al
0x5d0a:	neg	eax
0x5d0c:	ret	


0x5cd1:	mov	dword ptr [rax], 0
0x5cd7:	mov	eax, 0xffffffff
0x5cdc:	pop	rbx
0x5cdd:	pop	rbp
0x5cde:	pop	r12
0x5ce0:	ret	


0x32c2:	test	eax, eax
0x32c4:	je	0x32dc


0x32dc:	mov	rdi, qword ptr [rip + 0x207ddd]
0x32e3:	call	0x5c90


0x32c6:	call	0x15b0


0x32cb:	cmp	byte ptr [rip + 0x207e2e], 0
0x32d2:	mov	rbx, rax
0x32d5:	je	0x32f3


0x32f3:	lea	rsi, [rip + 0x4c95]
0x32fa:	xor	edi, edi
0x32fc:	mov	edx, 5
0x3301:	call	0x1640


0x32d7:	cmp	dword ptr [rax], 0x20
0x32da:	jne	0x32f3


0x3306:	mov	rdi, qword ptr [rip + 0x207dfb]
0x330d:	mov	rbp, rax
0x3310:	test	rdi, rdi
0x3313:	je	0x333d


0x333d:	mov	esi, dword ptr [rbx]
0x333f:	lea	rdx, [rip + 0x54d6]
0x3346:	mov	rcx, rax
0x3349:	xor	edi, edi
0x334b:	xor	eax, eax
0x334d:	call	0x1840


0x3315:	call	0x4e70


0x3352:	jmp	0x3332


0x3332:	mov	edi, dword ptr [rip + 0x207ce0]
0x3338:	call	0x15d0


0x15d0:	jmp	qword ptr [rip + 0x209872]




0x32e8:	test	eax, eax
0x32ea:	jne	0x3332


0x32ec:	add	rsp, 8
0x32f0:	pop	rbx
0x32f1:	pop	rbp
0x32f2:	ret	


0x1ea6:	lea	rdi, [r14 + 1]
0x1eaa:	xor	r14d, r14d
0x1ead:	test	rax, rax
0x1eb0:	jne	0x1ed0


0x1eb2:	jmp	0x24cf


0x1ed0:	movzx	eax, byte ptr [rbx + rdi]
0x1ed4:	cmp	al, 0x25
0x1ed6:	jne	0x1ec0


0x24cf:	mov	rdi, rbx
0x24d2:	call	0x5070


0x1ed8:	cmp	byte ptr [rbx + rdi + 1], 0x25
0x1edd:	jne	0x249d


0x1ec0:	test	al, al
0x1ec2:	je	0x1eea


0x1ee3:	mov	eax, 2
0x1ee8:	jmp	0x1ec9


0x249d:	mov	rdi, rbx
0x24a0:	call	0x5070


0x1eea:	add	rdi, 2
0x1eee:	call	0x56b0


0x1ec4:	mov	eax, 1
0x1ec9:	add	rdi, rax
0x1ecc:	add	r14, 1
0x1ed0:	movzx	eax, byte ptr [rbx + rdi]
0x1ed4:	cmp	al, 0x25
0x1ed6:	jne	0x1ec0


0x1ec9:	add	rdi, rax
0x1ecc:	add	r14, 1
0x1ed0:	movzx	eax, byte ptr [rbx + rdi]
0x1ed4:	cmp	al, 0x25
0x1ed6:	jne	0x1ec0


0x1ef3:	mov	rdx, r15
0x1ef6:	mov	rsi, rbx
0x1ef9:	mov	rdi, rax
0x1efc:	call	0x1760


0x1f01:	mov	rsi, qword ptr [rsp + 0x20]
0x1f06:	lea	rdi, [rax + r15 + 1]
0x1f0b:	mov	byte ptr [rax + r15], 0x4c
0x1f10:	mov	qword ptr [rsp + 0x10], rax
0x1f15:	call	0x15e0


0x15e0:	jmp	qword ptr [rip + 0x20986a]




0x19c6:	cmp	eax, -1
0x19c9:	je	0x1ff9


0x1ff9:	mov	r15d, dword ptr [rip + 0x209090]
0x2000:	jmp	0x1a03


0x19cf:	cmp	eax, 0x66
0x19d2:	je	0x1ab0


0x1ab0:	mov	rbx, qword ptr [rip + 0x2095e1]
0x1ab7:	jmp	0x1986


0x19d8:	jle	0x1a68


0x1986:	mov	r15d, dword ptr [rip + 0x209703]
0x198d:	cmp	r15d, r13d
0x1990:	jge	0x1a03


0x1a68:	cmp	eax, 0xffffff7d
0x1a6d:	jne	0x22c8


0x19de:	cmp	eax, 0x73
0x19e1:	je	0x1ac0


0x1a73:	mov	rdi, qword ptr [rip + 0x20960e]
0x1a7a:	mov	rcx, qword ptr [rip + 0x20958f]
0x1a81:	lea	r8, [rip + 0x660c]
0x1a88:	lea	rdx, [rip + 0x658a]
0x1a8f:	lea	rsi, [rip + 0x6509]
0x1a96:	xor	r9d, r9d
0x1a99:	xor	eax, eax
0x1a9b:	call	0x5550


0x22c8:	cmp	eax, 0xffffff7e
0x22cd:	jne	0x2373


0x1ac0:	mov	rax, qword ptr [rip + 0x2095d1]
0x1ac7:	mov	qword ptr [rip + 0x209622], rax
0x1ace:	jmp	0x1986


0x19e7:	cmp	eax, 0x77
0x19ea:	jne	0x2373


0x22d3:	xor	edi, edi
0x22d5:	call	0x2aa0


0x19f0:	mov	r15d, dword ptr [rip + 0x209699]
0x19f7:	mov	byte ptr [rip + 0x2096fa], 1
0x19fe:	cmp	r15d, r13d
0x1a01:	jl	0x1992


0x1aa0:	xor	edi, edi
0x1aa2:	call	0x1870


0x1f1a:	cmp	byte ptr [rip + 0x2091d7], 0
0x1f21:	jne	0x2472


0x1f27:	mov	r8, qword ptr [rsp + 0x10]
0x1f2c:	mov	r15d, dword ptr [rip + 0x20915d]
0x1f33:	mov	rbx, r8
0x1f36:	jmp	0x1ad8


0x2472:	lea	rsi, [rip + 0x632f]
0x2479:	mov	edx, 5
0x247e:	xor	edi, edi
0x2480:	call	0x1640


0x1ad8:	movsxd	rax, r15d
0x1adb:	lea	rcx, [rax*8]
0x1ae3:	mov	rax, qword ptr [r12 + rax*8]
0x1ae7:	mov	qword ptr [rsp + 0x10], rcx
0x1aec:	mov	rdi, rax
0x1aef:	mov	qword ptr [rsp + 0x20], rax
0x1af4:	call	0x2650


0x2485:	xor	edi, edi
0x2487:	mov	rdx, rax
0x248a:	xor	esi, esi
0x248c:	xor	eax, eax
0x248e:	call	0x1840


0x2493:	mov	edi, 1
0x2498:	call	0x2aa0


0x331a:	mov	esi, dword ptr [rbx]
0x331c:	lea	rdx, [rip + 0x54f5]
0x3323:	mov	rcx, rax
0x3326:	mov	r8, rbp
0x3329:	xor	edi, edi
0x332b:	xor	eax, eax
0x332d:	call	0x1840


0x1b48:	fld	xword ptr [rsp + 0xa0]
0x1b4f:	movsxd	rdx, dword ptr [rip + 0x20953a]
0x1b56:	mov	r10, qword ptr [rsp + 0xb0]
0x1b5e:	mov	eax, dword ptr [rsp + 0xb8]
0x1b65:	cmp	edx, r13d
0x1b68:	fstp	xword ptr [rsp + 0x40]
0x1b6c:	jl	0x1f50


0x1f50:	mov	rsi, qword ptr [r12 + rdx*8]
0x1f54:	mov	rdi, qword ptr [rsp]
0x1f58:	lea	ecx, [rdx + 1]
0x1f5b:	mov	dword ptr [rsp + 0x20], eax
0x1f5f:	mov	qword ptr [rsp + 0x10], r10
0x1f64:	mov	dword ptr [rip + 0x209126], ecx
0x1f6a:	call	0x2e80


0x1b72:	test	eax, eax
0x1b74:	je	0x21cd


0x21cd:	fld	xword ptr [rsp + 0x40]
0x21d1:	mov	r12, r10
0x21d4:	mov	r10d, 1
0x21da:	pxor	xmm3, xmm3
0x21de:	movss	dword ptr [rsp + 0x64], xmm3
0x21e4:	fstp	xword ptr [rsp + 0x30]
0x21e8:	fld1	
0x21ea:	fld	st(0)
0x21ec:	fstp	xword ptr [rsp + 0x50]
0x21f0:	fstp	xword ptr [rsp + 0x40]
0x21f4:	fldz	
0x21f6:	fld	xword ptr [rsp + 0x30]
0x21fa:	fucomip	st(1)
0x21fc:	jb	0x2276


0x1b7a:	mov	ecx, eax
0x1b7c:	mov	r12, r10
0x1b7f:	xor	r9d, r9d
0x1b82:	xor	eax, eax
0x1b84:	mov	r10d, 1
0x1b8a:	fld	xword ptr [rsp + 0x40]
0x1b8e:	pxor	xmm0, xmm0
0x1b92:	movss	dword ptr [rsp + 0x64], xmm0
0x1b98:	fstp	xword ptr [rsp + 0x30]
0x1b9c:	fld1	
0x1b9e:	fld	st(0)
0x1ba0:	fstp	xword ptr [rsp + 0x50]
0x1ba4:	fstp	xword ptr [rsp + 0x40]
0x1ba8:	jmp	0x1bb0


0x2276:	fstp	st(0)
0x2278:	jmp	0x227c


0x21fe:	cmp	byte ptr [rip + 0x208ef3], 0
0x2205:	jne	0x227a


0x1bb0:	test	rbx, rbx
0x1bb3:	je	0x211c


0x227c:	xor	r9d, r9d
0x227f:	xor	eax, eax
0x2281:	xor	ecx, ecx
0x2283:	jmp	0x1bb0


0x2207:	test	rbx, rbx
0x220a:	jne	0x1bbb


0x227a:	fstp	st(0)
0x227c:	xor	r9d, r9d
0x227f:	xor	eax, eax
0x2281:	xor	ecx, ecx
0x2283:	jmp	0x1bb0


0x211c:	cmp	eax, r9d
0x211f:	cmovge	r9d, eax
0x2123:	cmp	ecx, 0x7fffffff
0x2129:	je	0x21c1


0x1bb9:	jmp	0x1bbd


0x2210:	mov	rdi, qword ptr [rip + 0x208ed9]
0x2217:	or	rcx, 0xffffffffffffffff
0x221b:	xor	eax, eax
0x221d:	xor	r9d, r9d
0x2220:	repne scasb	al, byte ptr [rdi]


0x1bbb:	fstp	st(0)
0x1bbd:	fld	xword ptr [rsp + 0x50]
0x1bc1:	fldz	
0x1bc3:	fucomip	st(1)
0x1bc5:	fstp	st(0)
0x1bc7:	ja	0x1f3b


0x21c1:	lea	rbx, [rip + 0x5ea9]
0x21c8:	jmp	0x1bbd


0x212f:	cmp	r9d, 0x7fffffff
0x2136:	je	0x21c1


0x1bbd:	fld	xword ptr [rsp + 0x50]
0x1bc1:	fldz	
0x1bc3:	fucomip	st(1)
0x1bc5:	fstp	st(0)
0x1bc7:	ja	0x1f3b


0x2220:	repne scasb	al, byte ptr [rdi]


0x2222:	cmp	rcx, -3
0x2226:	je	0x2382


0x1bcd:	fld	xword ptr [rsp + 0x30]
0x1bd1:	fld	xword ptr [rsp + 0x40]
0x1bd5:	fucomip	st(1)
0x1bd7:	fstp	st(0)
0x1bd9:	seta	r13b
0x1bdd:	test	r13b, r13b
0x1be0:	jne	0x1e05


0x1f3b:	fld	xword ptr [rsp + 0x40]
0x1f3f:	fld	xword ptr [rsp + 0x30]
0x1f43:	fucomip	st(1)
0x1f45:	fstp	st(0)
0x1f47:	seta	r13b
0x1f4b:	jmp	0x1bdd


0x213c:	cmp	byte ptr [rip + 0x208fb5], 0
0x2143:	je	0x222e


0x2382:	fstp	xword ptr [rsp + 0x10]
0x2386:	mov	qword ptr [rsp], r10
0x238a:	lea	rdi, [rsp + 0x70]
0x238f:	lea	rsi, [rip + 0x5d71]
0x2396:	push	qword ptr [rsp + 0x48]
0x239a:	push	qword ptr [rsp + 0x48]
0x239e:	call	0x5a00


0x222c:	fstp	st(0)
0x222e:	lea	rcx, [rip + 0x5ee3]
0x2235:	lea	rdi, [rip + 0x208e94]
0x223c:	mov	r8d, r9d
0x223f:	mov	edx, 0x1c
0x2244:	mov	esi, 1
0x2249:	xor	eax, eax
0x224b:	call	0x18d0


0x1be6:	fld	xword ptr [rsp + 0x40]
0x1bea:	lea	rax, [rsp + 0x80]
0x1bf2:	mov	qword ptr [rsp + 0x68], rax
0x1bf7:	fstp	xword ptr [rsp + 0x20]
0x1bfb:	fld1	
0x1bfd:	fstp	xword ptr [rsp + 0x10]
0x1c01:	jmp	0x1d53


0x1bdd:	test	r13b, r13b
0x1be0:	jne	0x1e05


0x222e:	lea	rcx, [rip + 0x5ee3]
0x2235:	lea	rdi, [rip + 0x208e94]
0x223c:	mov	r8d, r9d
0x223f:	mov	edx, 0x1c
0x2244:	mov	esi, 1
0x2249:	xor	eax, eax
0x224b:	call	0x18d0


0x2149:	mov	edx, r9d
0x214c:	sub	edx, eax
0x214e:	movsxd	rdx, edx
0x2151:	add	r10, rdx
0x2154:	mov	edx, r9d
0x2157:	sub	edx, ecx
0x2159:	movsxd	rdx, edx
0x215c:	add	r12, rdx
0x215f:	test	ecx, ecx
0x2161:	je	0x225c


0x18d0:	jmp	qword ptr [rip + 0x2096f2]


0x1d53:	push	qword ptr [rsp + 0x28]
0x1d57:	push	qword ptr [rsp + 0x28]
0x1d5b:	xor	eax, eax
0x1d5d:	mov	rsi, rbx
0x1d60:	mov	edi, 1
0x1d65:	call	0x1800


0x225c:	test	r9d, r9d
0x225f:	je	0x2178


0x2167:	test	r9d, r9d
0x216a:	je	0x2288




0x2178:	cmp	r10, r12
0x217b:	lea	rbx, [rip + 0x5eef]
0x2182:	cmovb	r10, r12
0x2186:	cmp	r10, 0x7fffffff
0x218d:	ja	0x1bbd


0x2265:	add	r12, 1
0x2269:	test	eax, eax
0x226b:	je	0x2174


0x2288:	sub	r12, 1
0x228c:	jmp	0x2178


0x2170:	test	eax, eax
0x2172:	jne	0x2178


0x2193:	lea	rcx, [rip + 0x5f73]
0x219a:	lea	rdi, [rip + 0x208f2f]
0x21a1:	mov	r8d, r10d
0x21a4:	mov	edx, 0x1c
0x21a9:	mov	esi, 1
0x21ae:	xor	eax, eax
0x21b0:	call	0x18d0


0x2174:	add	r10, 1
0x2178:	cmp	r10, r12
0x217b:	lea	rbx, [rip + 0x5eef]
0x2182:	cmovb	r10, r12
0x2186:	cmp	r10, 0x7fffffff
0x218d:	ja	0x1bbd


0x2271:	jmp	0x2178


0x1d6a:	test	eax, eax
0x1d6c:	pop	r8
0x1d6e:	pop	r9
0x1d70:	js	0x2291


0x2291:	call	0x2690


0x1d76:	test	r13b, r13b
0x1d79:	jne	0x1de9


0x1d7b:	fld	xword ptr [rsp + 0x10]
0x1d7f:	fld	xword ptr [rsp + 0x50]
0x1d83:	fmul	st(1), st(0)
0x1d85:	fld	xword ptr [rsp + 0x40]
0x1d89:	faddp	st(2)
0x1d8b:	fxch	st(1)
0x1d8d:	fstp	xword ptr [rsp]
0x1d90:	fldz	
0x1d92:	fucomip	st(1)
0x1d94:	fstp	st(0)
0x1d96:	jbe	0x1c10


0x1de9:	mov	rsi, qword ptr [rip + 0x209298]
0x1df0:	lea	rdi, [rip + 0x6a1a]
0x1df7:	call	0x1720


0x1c10:	fld	xword ptr [rsp + 0x30]
0x1c14:	fld	xword ptr [rsp]
0x1c17:	fucomip	st(1)
0x1c19:	fstp	st(0)
0x1c1b:	seta	r13b
0x1c1f:	test	r13b, r13b
0x1c22:	je	0x1d24


0x1d9c:	fld	xword ptr [rsp]
0x1d9f:	fld	xword ptr [rsp + 0x30]
0x1da3:	fucomip	st(1)
0x1da5:	fstp	st(0)
0x1da7:	seta	r13b
0x1dab:	jmp	0x1c1f


0x1d24:	mov	rsi, qword ptr [rip + 0x20935d]
0x1d2b:	mov	rdi, qword ptr [rip + 0x2093be]
0x1d32:	call	0x1720


0x1c28:	cmp	byte ptr [rip + 0x2094ca], 0
0x1c2f:	jne	0x1dc6


0x1c1f:	test	r13b, r13b
0x1c22:	je	0x1d24


0x1c35:	push	qword ptr [rsp + 8]
0x1c39:	push	qword ptr [rsp + 8]
0x1c3d:	mov	rsi, rbx
0x1c40:	mov	rdi, qword ptr [rsp + 0x78]
0x1c45:	xor	eax, eax
0x1c47:	call	0x5a00


0x1dc6:	lea	rsi, [rip + 0x6353]
0x1dcd:	mov	edi, 1
0x1dd2:	call	0x17f0


0x1dd7:	jmp	0x1c35


0x1d37:	cmp	eax, -1
0x1d3a:	je	0x2291


0x1d40:	fld	xword ptr [rsp + 0x10]
0x1d44:	fld1	
0x1d46:	faddp	st(1)
0x1d48:	fstp	xword ptr [rsp + 0x10]
0x1d4c:	fld	xword ptr [rsp]
0x1d4f:	fstp	xword ptr [rsp + 0x20]
0x1d53:	push	qword ptr [rsp + 0x28]
0x1d57:	push	qword ptr [rsp + 0x28]
0x1d5b:	xor	eax, eax
0x1d5d:	mov	rsi, rbx
0x1d60:	mov	edi, 1
0x1d65:	call	0x1800


0x1dfc:	add	eax, 1
0x1dff:	je	0x2291


0x1c4c:	cmp	byte ptr [rip + 0x2094a6], 0
0x1c53:	movsxd	r12, eax
0x1c56:	pop	rsi
0x1c57:	pop	rdi
0x1c58:	jne	0x1db0


0x1c5e:	test	r12d, r12d
0x1c61:	js	0x233a


0x1db0:	lea	rsi, [rip + 0x6fea]
0x1db7:	mov	edi, 1
0x1dbc:	call	0x17f0


0x233a:	call	0x5900


0x1c67:	mov	rax, qword ptr [rsp + 0x80]
0x1c6f:	sub	r12, r14
0x1c72:	lea	rcx, [rip + 0x1567]
0x1c79:	lea	rdx, [rsp + 0x90]
0x1c81:	xor	esi, esi
0x1c83:	mov	byte ptr [rax + r12], 0
0x1c88:	mov	rdi, qword ptr [rsp + 0x80]
0x1c90:	add	rdi, rbp
0x1c93:	call	0x5940


0x1dc1:	jmp	0x1c5e


0x23a3:	pop	rbx
0x23a4:	pop	r13
0x23a6:	test	eax, eax
0x23a8:	mov	r10, qword ptr [rsp]
0x23ac:	fld	xword ptr [rsp + 0x10]
0x23b0:	js	0x2338


0x2338:	fstp	st(0)
0x233a:	call	0x5900


0x23b2:	mov	qword ptr [rsp], r10
0x23b6:	fld	xword ptr [rsp + 0x30]
0x23ba:	fmul	st(1)
0x23bc:	fucomip	st(1)
0x23be:	fstp	st(0)
0x23c0:	jp	0x23c8


0x23c8:	lea	rdi, [rip + 0x5bcc]
0x23cf:	call	0x58e0


0x23c2:	je	0x230b


0x230b:	lea	rdi, [rsp + 0x78]
0x2310:	lea	rsi, [rip + 0x5df0]
0x2317:	push	qword ptr [rsp + 0x38]
0x231b:	push	qword ptr [rsp + 0x38]
0x231f:	xor	eax, eax
0x2321:	call	0x5a00


0x2326:	pop	r10
0x2328:	test	eax, eax
0x232a:	pop	r11
0x232c:	mov	r10, qword ptr [rsp]
0x2330:	jns	0x23dd


0x2336:	jmp	0x233a


0x23dd:	mov	rdi, qword ptr [rsp + 0x70]
0x23e2:	cmp	byte ptr [rdi], 0x2d
0x23e5:	je	0x240b


0x240b:	mov	qword ptr [rsp], r10
0x240f:	call	0x1590


0x23e7:	mov	rsi, qword ptr [rsp + 0x78]
0x23ec:	cmp	byte ptr [rsi], 0x2d
0x23ef:	je	0x240b


0x23f1:	mov	qword ptr [rsp], r10
0x23f5:	call	0x26d0


0x23fa:	test	al, al
0x23fc:	jne	0x1e05


0x2402:	mov	rdi, qword ptr [rsp + 0x70]
0x2407:	mov	r10, qword ptr [rsp]
0x240b:	mov	qword ptr [rsp], r10
0x240f:	call	0x1590


0x2414:	mov	rdi, qword ptr [rsp + 0x78]
0x2419:	call	0x1590


0x241e:	xor	eax, eax
0x2420:	xor	ecx, ecx
0x2422:	xor	r9d, r9d
0x2425:	mov	r10, qword ptr [rsp]
0x2429:	jmp	0x213c


0x23d4:	mov	r10, qword ptr [rsp]
0x23d8:	mov	qword ptr [rsp + 0x78], rax
0x23dd:	mov	rdi, qword ptr [rsp + 0x70]
0x23e2:	cmp	byte ptr [rdi], 0x2d
0x23e5:	je	0x240b


0x21b5:	lea	rbx, [rip + 0x208f14]
0x21bc:	jmp	0x1bbd


0x2250:	lea	rbx, [rip + 0x208e79]
0x2257:	jmp	0x1bbd


0x1f6f:	fld	xword ptr [rsp + 0xa0]
0x1f76:	mov	ecx, dword ptr [rip + 0x209114]
0x1f7c:	mov	r9d, dword ptr [rsp + 0xb8]
0x1f84:	mov	r10, qword ptr [rsp + 0x10]
0x1f89:	mov	eax, dword ptr [rsp + 0x20]
0x1f8d:	cmp	ecx, r13d
0x1f90:	fld	st(0)
0x1f92:	fstp	xword ptr [rsp + 0x50]
0x1f96:	jl	0x20a2


0x20a2:	fstp	st(0)
0x20a4:	fldz	
0x20a6:	pxor	xmm2, xmm2
0x20aa:	movsxd	rsi, ecx
0x20ad:	fld	xword ptr [rsp + 0x50]
0x20b1:	lea	rdi, [rsi*8]
0x20b9:	movss	dword ptr [rsp + 0x64], xmm2
0x20bf:	fucomip	st(1)
0x20c1:	fstp	st(0)
0x20c3:	jp	0x20cb


0x1f9c:	mov	ecx, r9d
0x1f9f:	xor	r9d, r9d
0x1fa2:	mov	r12, qword ptr [rsp + 0xb0]
0x1faa:	fstp	xword ptr [rsp + 0x30]
0x1fae:	pxor	xmm1, xmm1
0x1fb2:	fld1	
0x1fb4:	movss	dword ptr [rsp + 0x64], xmm1
0x1fba:	fstp	xword ptr [rsp + 0x50]
0x1fbe:	mov	edi, 0
0x1fc3:	fldz	
0x1fc5:	fld	xword ptr [rsp + 0x40]
0x1fc9:	fmul	st(1)
0x1fcb:	fucomip	st(1)
0x1fcd:	setnp	sil
0x1fd1:	cmovne	esi, edi
0x1fd4:	test	sil, sil
0x1fd7:	je	0x1baa


0x20cb:	mov	rsi, qword ptr [r12 + rsi*8]
0x20cf:	mov	rdi, qword ptr [rsp]
0x20d3:	add	ecx, 1
0x20d6:	mov	dword ptr [rsp + 0x68], eax
0x20da:	mov	qword ptr [rsp + 0x20], r10
0x20df:	mov	dword ptr [rsp + 0x10], r9d
0x20e4:	mov	dword ptr [rip + 0x208fa6], ecx
0x20ea:	call	0x2e80


0x20c5:	je	0x2454


0x1baa:	fstp	st(0)
0x1bac:	jmp	0x1bb0


0x1fdd:	test	eax, eax
0x1fdf:	jne	0x1bae


0x2454:	mov	rdi, qword ptr [r12 + rdi - 8]
0x2459:	call	0x5070


0x1fe5:	mov	eax, ecx
0x1fe7:	or	eax, r9d
0x1fea:	je	0x22da


0x1bae:	fstp	st(0)
0x1bb0:	test	rbx, rbx
0x1bb3:	je	0x211c


0x22da:	fld1	
0x22dc:	fld	xword ptr [rsp + 0x50]
0x22e0:	fucomip	st(1)
0x22e2:	fstp	st(0)
0x22e4:	setnp	dl
0x22e7:	cmove	edi, edx
0x22ea:	test	dil, dil
0x22ed:	je	0x22ff


0x1ff0:	fstp	st(0)
0x1ff2:	xor	eax, eax
0x1ff4:	jmp	0x1bb0


0x22ff:	fstp	st(0)
0x2301:	xor	r9d, r9d
0x2304:	xor	ecx, ecx
0x2306:	jmp	0x1bb0


0x22ef:	fld	xword ptr [rsp + 0x40]
0x22f3:	fucomip	st(1)
0x22f5:	fstp	st(0)
0x22f7:	jae	0x21f4


0x22fd:	jmp	0x2301


0x21f4:	fldz	
0x21f6:	fld	xword ptr [rsp + 0x30]
0x21fa:	fucomip	st(1)
0x21fc:	jb	0x2276


0x2301:	xor	r9d, r9d
0x2304:	xor	ecx, ecx
0x2306:	jmp	0x1bb0


0x20ef:	fld	xword ptr [rsp + 0xa0]
0x20f6:	mov	r12, qword ptr [rsp + 0xb0]
0x20fe:	mov	ecx, dword ptr [rsp + 0xb8]
0x2105:	mov	eax, dword ptr [rsp + 0x68]
0x2109:	mov	r10, qword ptr [rsp + 0x20]
0x210e:	mov	r9d, dword ptr [rsp + 0x10]
0x2113:	fstp	xword ptr [rsp + 0x30]
0x2117:	jmp	0x1fbe


0x1fbe:	mov	edi, 0
0x1fc3:	fldz	
0x1fc5:	fld	xword ptr [rsp + 0x40]
0x1fc9:	fmul	st(1)
0x1fcb:	fucomip	st(1)
0x1fcd:	setnp	sil
0x1fd1:	cmovne	esi, edi
0x1fd4:	test	sil, sil
0x1fd7:	je	0x1baa


0x245e:	mov	edx, 5
0x2463:	mov	rbx, rax
0x2466:	lea	rsi, [rip + 0x6383]
0x246d:	jmp	0x235b


0x235b:	xor	edi, edi
0x235d:	call	0x1640


0x2362:	mov	rcx, rbx
0x2365:	mov	rdx, rax
0x2368:	xor	esi, esi
0x236a:	xor	edi, edi
0x236c:	xor	eax, eax
0x236e:	call	0x1840


0x24a5:	lea	rsi, [rip + 0x62d4]
0x24ac:	mov	rbx, rax
0x24af:	mov	edx, 5
0x24b4:	xor	edi, edi
0x24b6:	call	0x1640


0x24bb:	mov	rcx, rbx
0x24be:	mov	rdx, rax
0x24c1:	xor	esi, esi
0x24c3:	mov	edi, 1
0x24c8:	xor	eax, eax
0x24ca:	call	0x1840


0x24d7:	lea	rsi, [rip + 0x627a]
0x24de:	mov	edx, 5
0x24e3:	xor	edi, edi
0x24e5:	mov	rbx, rax
0x24e8:	call	0x1640


0x24ed:	mov	r8d, dword ptr [rsp + 0x10]
0x24f2:	mov	rdx, rax
0x24f5:	mov	rcx, rbx
0x24f8:	xor	esi, esi
0x24fa:	mov	edi, 1
0x24ff:	xor	eax, eax
0x2501:	call	0x1840


0x250e:	lea	rsi, [rip + 0x5bd4]
0x2515:	mov	rbx, rax
0x2518:	mov	edx, 5
0x251d:	xor	edi, edi
0x251f:	call	0x1640


0x2524:	mov	rcx, rbx
0x2527:	mov	rdx, rax
0x252a:	xor	esi, esi
0x252c:	mov	edi, 1
0x2531:	xor	eax, eax
0x2533:	call	0x1840


0x2538:	nop	dword ptr [rax + rax]


0x229e:	lea	rsi, [rip + 0x5e1f]
0x22a5:	mov	rbx, rax
0x22a8:	mov	edx, 5
0x22ad:	xor	edi, edi
0x22af:	call	0x1640


0x22b4:	mov	rcx, rbx
0x22b7:	mov	rdx, rax
0x22ba:	xor	esi, esi
0x22bc:	mov	edi, 1
0x22c1:	xor	eax, eax
0x22c3:	call	0x1840


0x234c:	lea	rsi, [rip + 0x5d60]
0x2353:	mov	rbx, rax
0x2356:	mov	edx, 5
0x235b:	xor	edi, edi
0x235d:	call	0x1640


0x481c:	add	rsp, 0x20
0x4820:	mov	r11, qword ptr [rsp + 0x10]
0x4825:	cmp	r11, rax
0x4828:	ja	0x4891


0x482a:	lea	rsi, [rax + 1]
0x482e:	lea	rax, [rip + 0x2068eb]
0x4835:	cmp	r12, rax
0x4838:	mov	qword ptr [rbx], rsi
0x483b:	je	0x484f


0x4891:	mov	eax, dword ptr [rsp + 0x18]
0x4895:	mov	dword ptr [r13], eax
0x4899:	add	rsp, 0x28
0x489d:	mov	rax, r12
0x48a0:	pop	rbx
0x48a1:	pop	rbp
0x48a2:	pop	r12
0x48a4:	pop	r13
0x48a6:	pop	r14
0x48a8:	pop	r15
0x48aa:	ret	


0x484f:	mov	rdi, rsi
0x4852:	mov	qword ptr [rsp + 0x10], rsi
0x4857:	call	0x56b0


0x483d:	mov	rdi, r12
0x4840:	mov	qword ptr [rsp + 0x10], rsi
0x4845:	call	0x1590


0x484a:	mov	rsi, qword ptr [rsp + 0x10]
0x484f:	mov	rdi, rsi
0x4852:	mov	qword ptr [rsp + 0x10], rsi
0x4857:	call	0x56b0


0x485c:	sub	rsp, 8
0x4860:	mov	qword ptr [rbx + 8], rax
0x4864:	mov	r8d, dword ptr [rbp]
0x4868:	push	qword ptr [rbp + 0x30]
0x486b:	push	qword ptr [rbp + 0x28]
0x486e:	mov	rcx, r14
0x4871:	push	r15
0x4873:	mov	r9d, dword ptr [rsp + 0x3c]
0x4878:	mov	rdi, rax
0x487b:	mov	rdx, qword ptr [rsp + 0x28]
0x4880:	mov	rsi, qword ptr [rsp + 0x30]
0x4885:	mov	r12, rax
0x4888:	call	0x34f0


0x4fa2:	mov	rdi, qword ptr [rsp + 0x38]
0x4fa7:	xor	rdi, qword ptr fs:[0x28]
0x4fb0:	jne	0x4fbc


0x4fb2:	add	rsp, 0x48
0x4fb6:	ret	


0x4fbc:	call	0x1670


0x4cef:	mov	rcx, qword ptr [rsp + 0x38]
0x4cf4:	xor	rcx, qword ptr fs:[0x28]
0x4cfd:	jne	0x4d09


0x4cff:	add	rsp, 0x48
0x4d03:	ret	


0x4d09:	call	0x1670


0x4d7b:	mov	rdx, qword ptr [rsp + 0x38]
0x4d80:	xor	rdx, qword ptr fs:[0x28]
0x4d89:	jne	0x4d95


0x4d8b:	add	rsp, 0x48
0x4d8f:	ret	


0x4d95:	call	0x1670


0x4f0f:	mov	rcx, qword ptr [rsp + 0x38]
0x4f14:	xor	rcx, qword ptr fs:[0x28]
0x4f1d:	jne	0x4f29


0x4f1f:	add	rsp, 0x48
0x4f23:	ret	


0x4f29:	call	0x1670


0x4e3e:	mov	rsi, qword ptr [rsp + 0x38]
0x4e43:	xor	rsi, qword ptr fs:[0x28]
0x4e4c:	jne	0x4e53


0x4e4e:	add	rsp, 0x48
0x4e52:	ret	


0x4e53:	call	0x1670


0x488d:	add	rsp, 0x20
0x4891:	mov	eax, dword ptr [rsp + 0x18]
0x4895:	mov	dword ptr [r13], eax
0x4899:	add	rsp, 0x28
0x489d:	mov	rax, r12
0x48a0:	pop	rbx
0x48a1:	pop	rbp
0x48a2:	pop	r12
0x48a4:	pop	r13
0x48a6:	pop	r14
0x48a8:	pop	r15
0x48aa:	ret	


0x4adc:	lea	rsi, [rax + 1]
0x4ae0:	mov	qword ptr [rsp + 0x48], rax
0x4ae5:	add	rsp, 0x20
0x4ae9:	mov	rdi, rsi
0x4aec:	mov	qword ptr [rsp + 0x18], rsi
0x4af1:	call	0x56b0


0x4af6:	mov	qword ptr [rsp + 0x10], rax
0x4afb:	sub	rsp, 8
0x4aff:	push	qword ptr [rbx + 0x30]
0x4b02:	push	qword ptr [rbx + 0x28]
0x4b05:	mov	r10, qword ptr [rsp + 0x38]
0x4b0a:	mov	r9d, ebp
0x4b0d:	mov	r8d, dword ptr [rbx]
0x4b10:	mov	rcx, r15
0x4b13:	mov	rdx, r14
0x4b16:	mov	rdi, rax
0x4b19:	push	r10
0x4b1b:	mov	rsi, qword ptr [rsp + 0x38]
0x4b20:	call	0x34f0


0x4b25:	mov	eax, dword ptr [rsp + 0x2c]
0x4b29:	add	rsp, 0x20
0x4b2d:	test	r12, r12
0x4b30:	mov	dword ptr [r13], eax
0x4b34:	je	0x4b3f


0x4b3f:	mov	rax, qword ptr [rsp + 0x10]
0x4b44:	add	rsp, 0x38
0x4b48:	pop	rbx
0x4b49:	pop	rbp
0x4b4a:	pop	r12
0x4b4c:	pop	r13
0x4b4e:	pop	r14
0x4b50:	pop	r15
0x4b52:	ret	


0x4b36:	mov	r11, qword ptr [rsp + 0x28]
0x4b3b:	mov	qword ptr [r12], r11
0x4b3f:	mov	rax, qword ptr [rsp + 0x10]
0x4b44:	add	rsp, 0x38
0x4b48:	pop	rbx
0x4b49:	pop	rbp
0x4b4a:	pop	r12
0x4b4c:	pop	r13
0x4b4e:	pop	r14
0x4b50:	pop	r15
0x4b52:	ret	


0x4a51:	mov	dword ptr [rbp], r12d
0x4a55:	add	rsp, 0x38
0x4a59:	pop	rbx
0x4a5a:	pop	rbp
0x4a5b:	pop	r12
0x4a5d:	pop	r13
0x4a5f:	pop	r14
0x4a61:	pop	r15
0x4a63:	ret	


0x597f:	mov	rcx, qword ptr [rsp]
0x5983:	cmp	rcx, rbp
0x5986:	je	0x59f0


0x59f0:	xor	eax, eax
0x59f2:	jmp	0x59a6


0x5988:	test	rbx, rbx
0x598b:	je	0x59d0


0x59a6:	test	rbx, rbx
0x59a9:	je	0x59ae


0x59d0:	xor	eax, eax
0x59d2:	cmp	byte ptr [rcx], 0
0x59d5:	jne	0x59ae


0x598d:	fldz	
0x598f:	fxch	st(1)
0x5991:	fucomi	st(1)
0x5993:	fstp	st(1)
0x5995:	jp	0x599e


0x59ae:	mov	rdx, qword ptr [rsp + 8]
0x59b3:	xor	rdx, qword ptr fs:[0x28]
0x59bc:	fstp	xword ptr [r13]
0x59c0:	jne	0x59f4


0x59ab:	mov	qword ptr [rbx], rcx
0x59ae:	mov	rdx, qword ptr [rsp + 8]
0x59b3:	xor	rdx, qword ptr fs:[0x28]
0x59bc:	fstp	xword ptr [r13]
0x59c0:	jne	0x59f4


0x59d7:	fldz	
0x59d9:	fxch	st(1)
0x59db:	fucomi	st(1)
0x59dd:	fstp	st(1)
0x59df:	jp	0x599e


0x599e:	cmp	dword ptr [r12], 0x22
0x59a3:	setne	al
0x59a6:	test	rbx, rbx
0x59a9:	je	0x59ae


0x5997:	mov	eax, 1
0x599c:	je	0x59ab


0x59c2:	add	rsp, 0x10
0x59c6:	pop	rbx
0x59c7:	pop	rbp
0x59c8:	pop	r12
0x59ca:	pop	r13
0x59cc:	pop	r14
0x59ce:	ret	


0x59f4:	call	0x1670


0x59e1:	jne	0x599e


0x59e3:	mov	eax, 1
0x59e8:	jmp	0x59ae


0x1c98:	test	al, al
0x1c9a:	je	0x1ddc


0x1ddc:	mov	rdi, qword ptr [rsp + 0x80]
0x1de4:	call	0x1590


0x1ca0:	fld	xword ptr [rsp + 0x30]
0x1ca4:	fld	xword ptr [rsp + 0x90]
0x1cab:	fucomip	st(1)
0x1cad:	fstp	st(0)
0x1caf:	jp	0x1ddc


0x1cb5:	jne	0x1ddc


0x1cbb:	mov	qword ptr [rsp + 0x88], 0
0x1cc7:	lea	rdi, [rsp + 0x88]
0x1ccf:	push	qword ptr [rsp + 0x28]
0x1cd3:	push	qword ptr [rsp + 0x28]
0x1cd7:	xor	eax, eax
0x1cd9:	mov	rsi, rbx
0x1cdc:	call	0x5a00


0x1ce1:	test	eax, eax
0x1ce3:	pop	rdx
0x1ce4:	pop	rcx
0x1ce5:	js	0x233a


0x1ceb:	mov	r12, qword ptr [rsp + 0x88]
0x1cf3:	mov	rsi, qword ptr [rsp + 0x80]
0x1cfb:	mov	rdi, r12
0x1cfe:	call	0x1740


0x1d03:	mov	rdi, r12
0x1d06:	mov	r15d, eax
0x1d09:	call	0x1590


0x1d0e:	mov	rdi, qword ptr [rsp + 0x80]
0x1d16:	call	0x1590


0x1d1b:	test	r15d, r15d
0x1d1e:	je	0x1de9


0x2eba:	test	al, al
0x2ebc:	je	0x319a


0x319a:	mov	rdi, rbx
0x319d:	call	0x5070


0x2ec2:	fld	xword ptr [rsp + 0x10]
0x2ec6:	fld	st(0)
0x2ec8:	fstp	xword ptr [rsp]
0x2ecb:	fucomip	st(0)
0x2ecd:	jp	0x3148


0x3148:	mov	rsi, rbx
0x314b:	mov	edi, 1
0x3150:	call	0x5050


0x2ed3:	call	0x18c0


0x18c0:	jmp	qword ptr [rip + 0x2096fa]




0x2ed8:	mov	rcx, qword ptr [rax]
0x2edb:	jmp	0x2ee4


0x2ee4:	movzx	edx, byte ptr [rbx]
0x2ee7:	test	byte ptr [rcx + rdx*2 + 1], 0x20
0x2eec:	jne	0x2ee0


0x2eee:	cmp	dl, 0x2b
0x2ef1:	je	0x2ee0


0x2ee0:	add	rbx, 1
0x2ee4:	movzx	edx, byte ptr [rbx]
0x2ee7:	test	byte ptr [rcx + rdx*2 + 1], 0x20
0x2eec:	jne	0x2ee0


0x2ef3:	mov	esi, 0x2e
0x2ef8:	mov	rdi, rbx
0x2efb:	mov	qword ptr [rsp + 0x20], 0
0x2f04:	mov	dword ptr [rsp + 0x28], 0x7fffffff
0x2f0c:	call	0x16a0


0x2f11:	test	rax, rax
0x2f14:	mov	r12, rax
0x2f17:	je	0x308a


0x308a:	mov	esi, 0x70
0x308f:	mov	rdi, rbx
0x3092:	call	0x16a0


0x2f1d:	lea	rsi, [rip + 0x5147]
0x2f24:	mov	rdi, rbx
0x2f27:	call	0x1700


0x1700:	jmp	qword ptr [rip + 0x2097da]




0x3097:	test	rax, rax
0x309a:	jne	0x2f1d


0x30a0:	mov	dword ptr [rsp + 0x28], 0
0x30a8:	jmp	0x2f1d


0x3155:	lea	rsi, [rip + 0x4eea]
0x315c:	xor	edi, edi
0x315e:	mov	rbp, rax
0x3161:	call	0x5050


0x3166:	lea	rsi, [rip + 0x4ee6]
0x316d:	mov	rbx, rax
0x3170:	mov	edx, 5
0x3175:	xor	edi, edi
0x3177:	call	0x1640


0x317c:	xor	edi, edi
0x317e:	mov	rdx, rax
0x3181:	mov	r8, rbp
0x3184:	mov	rcx, rbx
0x3187:	xor	esi, esi
0x3189:	xor	eax, eax
0x318b:	call	0x1840


0x3190:	mov	edi, 1
0x3195:	call	0x2aa0


0x31a2:	lea	rsi, [rip + 0x5587]
0x31a9:	mov	rbx, rax
0x31ac:	mov	edx, 5
0x31b1:	xor	edi, edi
0x31b3:	call	0x1640


0x31b8:	xor	edi, edi
0x31ba:	mov	rdx, rax
0x31bd:	mov	rcx, rbx
0x31c0:	xor	esi, esi
0x31c2:	xor	eax, eax
0x31c4:	call	0x1840


0x31c9:	mov	edi, 1
0x31ce:	call	0x2aa0


0x2f2c:	cmp	byte ptr [rbx + rax], 0
0x2f30:	jne	0x3050


0x2f36:	fldz	
0x2f38:	fld	xword ptr [rsp]
0x2f3b:	fmul	st(1)
0x2f3d:	fucomip	st(1)
0x2f3f:	fstp	st(0)
0x2f41:	jp	0x3050


0x3050:	movdqa	xmm0, xmmword ptr [rsp + 0x10]
0x3056:	mov	rax, rbp
0x3059:	mov	rsi, qword ptr [rsp + 0x38]
0x305e:	xor	rsi, qword ptr fs:[0x28]
0x3067:	movaps	xmmword ptr [rbp], xmm0
0x306b:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x3071:	movaps	xmmword ptr [rbp + 0x10], xmm0
0x3075:	jne	0x31d3


0x2f47:	jne	0x3050


0x307b:	add	rsp, 0x48
0x307f:	pop	rbx
0x3080:	pop	rbp
0x3081:	pop	r12
0x3083:	pop	r13
0x3085:	pop	r14
0x3087:	pop	r15
0x3089:	ret	


0x31d3:	call	0x1670


0x2f4d:	or	r15, 0xffffffffffffffff
0x2f51:	xor	eax, eax
0x2f53:	mov	rdi, rbx
0x2f56:	mov	rcx, r15
0x2f59:	repne scasb	al, byte ptr [rdi]


0x2f59:	repne scasb	al, byte ptr [rdi]


0x2f5b:	test	r12, r12
0x2f5e:	mov	rax, rcx
0x2f61:	not	rax
0x2f64:	lea	r13, [rax + r15]
0x2f68:	mov	qword ptr [rsp + 0x20], r13
0x2f6d:	je	0x30bf


0x30bf:	xor	r14d, r14d
0x30c2:	jmp	0x2fb7


0x2f73:	lea	rdi, [r12 + 1]
0x2f78:	lea	rsi, [rip + 0x50ef]
0x2f7f:	call	0x1700


0x2fb7:	mov	esi, 0x65
0x2fbc:	mov	rdi, rbx
0x2fbf:	call	0x16a0


0x2fc4:	test	rax, rax
0x2fc7:	mov	r13, rax
0x2fca:	je	0x30c7


0x30c7:	mov	esi, 0x45
0x30cc:	mov	rdi, rbx
0x30cf:	call	0x16a0


0x2fd0:	lea	rdi, [r13 + 1]
0x2fd4:	mov	edx, 0xa
0x2fd9:	xor	esi, esi
0x2fdb:	call	0x1750


0x1750:	jmp	qword ptr [rip + 0x2097b2]




0x30d4:	test	rax, rax
0x30d7:	mov	r13, rax
0x30da:	je	0x3050


0x30e0:	jmp	0x2fd0


0x2f84:	cmp	rax, 0x7fffffff
0x2f8a:	mov	r14, rax
0x2f8d:	jbe	0x30ad


0x30ad:	test	rax, rax
0x30b0:	mov	dword ptr [rsp + 0x28], eax
0x30b4:	je	0x2faf


0x2f93:	cmp	rbx, r12
0x2f96:	je	0x313d


0x2faf:	add	r13, r15
0x2fb2:	mov	qword ptr [rsp + 0x20], r13
0x2fb7:	mov	esi, 0x65
0x2fbc:	mov	rdi, rbx
0x2fbf:	call	0x16a0


0x30ba:	jmp	0x2f93


0x313d:	mov	r15d, 1
0x3143:	jmp	0x2faf


0x2f9c:	movsx	eax, byte ptr [r12 - 1]
0x2fa2:	xor	r15d, r15d
0x2fa5:	sub	eax, 0x30
0x2fa8:	cmp	eax, 9
0x2fab:	seta	r15b
0x2faf:	add	r13, r15
0x2fb2:	mov	qword ptr [rsp + 0x20], r13
0x2fb7:	mov	esi, 0x65
0x2fbc:	mov	rdi, rbx
0x2fbf:	call	0x16a0


0x2fe0:	mov	r8, r13
0x2fe3:	mov	rdx, rax
0x2fe6:	mov	ecx, dword ptr [rsp + 0x28]
0x2fea:	sub	r8, rbx
0x2fed:	test	rax, rax
0x2ff0:	js	0x30e5


0x30e5:	sub	ecx, eax
0x30e7:	mov	rdi, rbx
0x30ea:	xor	eax, eax
0x30ec:	mov	dword ptr [rsp + 0x28], ecx
0x30f0:	or	rcx, 0xffffffffffffffff
0x30f4:	repne scasb	al, byte ptr [rdi]


0x2ff6:	movsxd	rax, ecx
0x2ff9:	mov	esi, ecx
0x2ffb:	mov	rdi, rbx
0x2ffe:	cmp	rax, rdx
0x3001:	cmovg	rax, rdx
0x3005:	or	rcx, 0xffffffffffffffff
0x3009:	sub	esi, eax
0x300b:	xor	eax, eax
0x300d:	mov	dword ptr [rsp + 0x28], esi
0x3011:	repne scasb	al, byte ptr [rdi]


0x30f4:	repne scasb	al, byte ptr [rdi]


0x30f6:	mov	rax, qword ptr [rsp + 0x20]
0x30fb:	add	rax, r8
0x30fe:	test	r12, r12
0x3101:	lea	rax, [rcx + rax + 2]
0x3106:	je	0x3132


0x3011:	repne scasb	al, byte ptr [rdi]


0x3013:	mov	rax, qword ptr [rsp + 0x20]
0x3018:	add	rax, r8
0x301b:	test	r12, r12
0x301e:	setne	dil
0x3022:	test	r14, r14
0x3025:	lea	rax, [rcx + rax + 2]
0x302a:	setne	cl
0x302d:	test	dil, cl
0x3030:	mov	qword ptr [rsp + 0x20], rax
0x3035:	je	0x303f


0x3132:	add	rax, 1
0x3136:	mov	qword ptr [rsp + 0x20], rax
0x313b:	jmp	0x311c


0x3108:	add	r12, 1
0x310c:	lea	rcx, [rax + 1]
0x3110:	cmp	r13, r12
0x3113:	cmove	rax, rcx
0x3117:	mov	qword ptr [rsp + 0x20], rax
0x311c:	neg	rdx
0x311f:	jmp	0x3049


0x303f:	cmp	rdx, r14
0x3042:	cmovbe	r14, rdx
0x3046:	sub	rdx, r14
0x3049:	add	qword ptr [rsp + 0x20], rdx
0x304e:	nop	
0x3050:	movdqa	xmm0, xmmword ptr [rsp + 0x10]
0x3056:	mov	rax, rbp
0x3059:	mov	rsi, qword ptr [rsp + 0x38]
0x305e:	xor	rsi, qword ptr fs:[0x28]
0x3067:	movaps	xmmword ptr [rbp], xmm0
0x306b:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x3071:	movaps	xmmword ptr [rbp + 0x10], xmm0
0x3075:	jne	0x31d3


0x3037:	test	esi, esi
0x3039:	je	0x3124


0x311c:	neg	rdx
0x311f:	jmp	0x3049


0x3049:	add	qword ptr [rsp + 0x20], rdx
0x304e:	nop	
0x3050:	movdqa	xmm0, xmmword ptr [rsp + 0x10]
0x3056:	mov	rax, rbp
0x3059:	mov	rsi, qword ptr [rsp + 0x38]
0x305e:	xor	rsi, qword ptr fs:[0x28]
0x3067:	movaps	xmmword ptr [rbp], xmm0
0x306b:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x3071:	movaps	xmmword ptr [rbp + 0x10], xmm0
0x3075:	jne	0x31d3


0x3124:	sub	rax, 1
0x3128:	mov	qword ptr [rsp + 0x20], rax
0x312d:	jmp	0x303f


0x7f2d:	add	rbx, 1
0x7f31:	cmp	rbp, rbx
0x7f34:	jne	0x7f20


0x7f20:	mov	rdx, r15
0x7f23:	mov	rsi, r14
0x7f26:	mov	edi, r13d
0x7f29:	call	qword ptr [r12 + rbx*8]






0x7122:	mov	r11d, dword ptr [rdi + 4]
0x7126:	cmp	r11d, 0xaf
0x712d:	ja	0x71dd


0x7066:	mov	r11d, dword ptr [rdi]
0x7069:	cmp	r11d, 0x2f
0x706d:	ja	0x71aa


0x708a:	mov	r11d, dword ptr [rdi]
0x708d:	cmp	r11d, 0x2f
0x7091:	ja	0x71cc


0x70ac:	mov	r11d, dword ptr [rdi]
0x70af:	cmp	r11d, 0x2f
0x70b3:	ja	0x71bb


0x70ce:	mov	r11d, dword ptr [rdi]
0x70d1:	cmp	r11d, 0x2f
0x70d5:	ja	0x717a


0x7030:	mov	rdx, qword ptr [rdi + 8]
0x7034:	add	rdx, 0xf
0x7038:	and	rdx, 0xfffffffffffffff0
0x703c:	lea	r11, [rdx + 0x10]
0x7040:	mov	qword ptr [rdi + 8], r11
0x7044:	fld	xword ptr [rdx]
0x7046:	fstp	xword ptr [rax + 0x10]
0x7049:	nop	dword ptr [rax]
0x7050:	add	rcx, 1
0x7054:	add	rax, 0x20
0x7058:	cmp	qword ptr [rsi], rcx
0x705b:	ja	0x7018


0x7150:	mov	r11d, dword ptr [rdi]
0x7153:	cmp	r11d, 0x2f
0x7157:	ja	0x719c


0x70f4:	mov	r11d, dword ptr [rdi]
0x70f7:	cmp	r11d, 0x2f
0x70fb:	ja	0x718b


0x6c40:	mov	byte ptr [rax], r14b
0x6c43:	mov	rbx, r14
0x6c46:	jmp	0x6964


0x6b10:	mov	qword ptr [rax], r14
0x6b13:	mov	rbx, r14
0x6b16:	jmp	0x6964


0x6c50:	mov	dword ptr [rax], r14d
0x6c53:	mov	rbx, r14
0x6c56:	jmp	0x6964


0x6c60:	mov	word ptr [rax], r14w
0x6c64:	mov	rbx, r14
0x6c67:	jmp	0x6964


0x6860:	mov	rax, qword ptr [r13 + 0x50]
0x6864:	lea	rdi, [r15 + r14]
0x6868:	shl	rax, 5
0x686c:	add	rax, qword ptr [rbp - 0x3a8]
0x6873:	movzx	r9d, byte ptr [rax + 0x10]
0x6878:	mov	eax, dword ptr [rbp - 0x3e0]
0x687e:	cmp	eax, 1
0x6881:	jne	0x658e


0x6568:	mov	rax, qword ptr [r13 + 0x50]
0x656c:	lea	rdi, [r15 + r14]
0x6570:	shl	rax, 5
0x6574:	add	rax, qword ptr [rbp - 0x3a8]
0x657b:	mov	r9d, dword ptr [rax + 0x10]
0x657f:	mov	eax, dword ptr [rbp - 0x3e0]
0x6585:	cmp	eax, 1
0x6588:	je	0x67c0


0x6890:	mov	rax, qword ptr [r13 + 0x50]
0x6894:	lea	rdi, [r15 + r14]
0x6898:	shl	rax, 5
0x689c:	add	rax, qword ptr [rbp - 0x3a8]
0x68a3:	movsx	r9d, byte ptr [rax + 0x10]
0x68a8:	mov	eax, dword ptr [rbp - 0x3e0]
0x68ae:	cmp	eax, 1
0x68b1:	jne	0x658e


0x6430:	mov	rax, qword ptr [r13 + 0x50]
0x6434:	lea	rdi, [r15 + r14]
0x6438:	shl	rax, 5
0x643c:	add	rax, qword ptr [rbp - 0x3a8]
0x6443:	mov	r9, qword ptr [rax + 0x10]
0x6447:	mov	eax, dword ptr [rbp - 0x3e0]
0x644d:	cmp	eax, 1
0x6450:	je	0x6918


0x6718:	mov	rax, qword ptr [r13 + 0x50]
0x671c:	lea	rdi, [r15 + r14]
0x6720:	shl	rax, 5
0x6724:	add	rax, qword ptr [rbp - 0x3a8]
0x672b:	movsd	xmm0, qword ptr [rax + 0x10]
0x6730:	mov	eax, dword ptr [rbp - 0x3e0]
0x6736:	cmp	eax, 1
0x6739:	je	0x6cd0


0x6690:	mov	rax, qword ptr [r13 + 0x50]
0x6694:	lea	rdi, [r15 + r14]
0x6698:	shl	rax, 5
0x669c:	add	rax, qword ptr [rbp - 0x3a8]
0x66a3:	fld	xword ptr [rax + 0x10]
0x66a6:	mov	eax, dword ptr [rbp - 0x3e0]
0x66ac:	cmp	eax, 1
0x66af:	je	0x6ce0


0x67d8:	mov	rax, qword ptr [r13 + 0x50]
0x67dc:	lea	rdi, [r15 + r14]
0x67e0:	shl	rax, 5
0x67e4:	add	rax, qword ptr [rbp - 0x3a8]
0x67eb:	movsx	r9d, word ptr [rax + 0x10]
0x67f0:	mov	eax, dword ptr [rbp - 0x3e0]
0x67f6:	cmp	eax, 1
0x67f9:	je	0x67c0


0x6798:	mov	rax, qword ptr [r13 + 0x50]
0x679c:	lea	rdi, [r15 + r14]
0x67a0:	shl	rax, 5
0x67a4:	add	rax, qword ptr [rbp - 0x3a8]
0x67ab:	movzx	r9d, word ptr [rax + 0x10]
0x67b0:	mov	eax, dword ptr [rbp - 0x3e0]
0x67b6:	cmp	eax, 1
0x67b9:	jne	0x658e


0x5320:	lea	rsi, [rip + 0x3b91]
0x5327:	mov	edx, 5
0x532c:	xor	edi, edi
0x532e:	mov	r14, qword ptr [rbx + 0x18]
0x5332:	mov	r13, qword ptr [rbx + 0x10]
0x5336:	mov	r12, qword ptr [rbx + 8]
0x533a:	mov	rbx, qword ptr [rbx]
0x533d:	call	0x1640


0x5140:	mov	r9, qword ptr [rbx + 0x38]
0x5144:	mov	rax, qword ptr [rbx + 0x10]
0x5148:	lea	rsi, [rip + 0x3e09]
0x514f:	mov	r8, qword ptr [rbx + 8]
0x5153:	mov	edx, 5
0x5158:	xor	edi, edi
0x515a:	mov	r13, qword ptr [rbx + 0x30]
0x515e:	mov	r12, qword ptr [rbx + 0x28]
0x5162:	mov	qword ptr [rsp + 0x10], r9
0x5167:	mov	r15, qword ptr [rbx + 0x20]
0x516b:	mov	r14, qword ptr [rbx + 0x18]
0x516f:	mov	qword ptr [rsp], rax
0x5173:	mov	qword ptr [rsp + 8], r8
0x5178:	mov	rbx, qword ptr [rbx]
0x517b:	call	0x1640


0x5248:	mov	rbx, qword ptr [rbx]
0x524b:	lea	rsi, [rip + 0x3b0d]
0x5252:	mov	edx, 5
0x5257:	xor	edi, edi
0x5259:	call	0x1640


0x5288:	mov	r12, qword ptr [rbx + 8]
0x528c:	lea	rsi, [rip + 0x3adc]
0x5293:	mov	rbx, qword ptr [rbx]
0x5296:	mov	edx, 5
0x529b:	xor	edi, edi
0x529d:	call	0x1640


0x53a8:	mov	r8, qword ptr [rbx + 8]
0x53ac:	mov	r12, qword ptr [rbx + 0x28]
0x53b0:	lea	rsi, [rip + 0x3b49]
0x53b7:	mov	r15, qword ptr [rbx + 0x20]
0x53bb:	mov	r14, qword ptr [rbx + 0x18]
0x53bf:	mov	edx, 5
0x53c4:	mov	r13, qword ptr [rbx + 0x10]
0x53c8:	xor	edi, edi
0x53ca:	mov	rbx, qword ptr [rbx]
0x53cd:	mov	qword ptr [rsp], r8
0x53d1:	call	0x1640


0x52d0:	mov	r13, qword ptr [rbx + 0x10]
0x52d4:	mov	r12, qword ptr [rbx + 8]
0x52d8:	lea	rsi, [rip + 0x3aa7]
0x52df:	mov	rbx, qword ptr [rbx]
0x52e2:	mov	edx, 5
0x52e7:	xor	edi, edi
0x52e9:	call	0x1640


0x5410:	mov	r9, qword ptr [rbx + 0x10]
0x5414:	mov	r13, qword ptr [rbx + 0x30]
0x5418:	lea	rsi, [rip + 0x3b09]
0x541f:	mov	r12, qword ptr [rbx + 0x28]
0x5423:	mov	r15, qword ptr [rbx + 0x20]
0x5427:	mov	edx, 5
0x542c:	mov	r14, qword ptr [rbx + 0x18]
0x5430:	mov	r8, qword ptr [rbx + 8]
0x5434:	xor	edi, edi
0x5436:	mov	qword ptr [rsp + 8], r9
0x543b:	mov	rbx, qword ptr [rbx]
0x543e:	mov	qword ptr [rsp], r8
0x5442:	call	0x1640


0x51f0:	mov	r10, qword ptr [rbx + 0x40]
0x51f4:	mov	r9, qword ptr [rbx + 0x38]
0x51f8:	lea	rsi, [rip + 0x3d89]
0x51ff:	mov	rax, qword ptr [rbx + 0x10]
0x5203:	mov	r8, qword ptr [rbx + 8]
0x5207:	mov	edx, 5
0x520c:	mov	r13, qword ptr [rbx + 0x30]
0x5210:	mov	r12, qword ptr [rbx + 0x28]
0x5214:	mov	r15, qword ptr [rbx + 0x20]
0x5218:	mov	r14, qword ptr [rbx + 0x18]
0x521c:	mov	rbx, qword ptr [rbx]
0x521f:	mov	qword ptr [rsp + 0x18], r10
0x5224:	mov	qword ptr [rsp + 0x10], r9
0x5229:	mov	qword ptr [rsp], rax
0x522d:	mov	qword ptr [rsp + 8], r8
0x5232:	xor	edi, edi
0x5234:	call	0x1640


0x51b6:	add	rsp, 0x28
0x51ba:	pop	rbx
0x51bb:	pop	rbp
0x51bc:	pop	r12
0x51be:	pop	r13
0x51c0:	pop	r14
0x51c2:	pop	r15
0x51c4:	ret	


0x5378:	mov	r15, qword ptr [rbx + 0x20]
0x537c:	lea	rsi, [rip + 0x3b55]
0x5383:	mov	edx, 5
0x5388:	xor	edi, edi
0x538a:	mov	r14, qword ptr [rbx + 0x18]
0x538e:	mov	r13, qword ptr [rbx + 0x10]
0x5392:	mov	r12, qword ptr [rbx + 8]
0x5396:	mov	rbx, qword ptr [rbx]
0x5399:	call	0x1640


0x7133:	mov	edx, r11d
0x7136:	add	rdx, qword ptr [rdi + 0x10]
0x713a:	add	r11d, 0x10
0x713e:	mov	dword ptr [rdi + 4], r11d
0x7142:	movsd	xmm0, qword ptr [rdx]
0x7146:	movsd	qword ptr [rax + 0x10], xmm0
0x714b:	jmp	0x7050


0x71dd:	mov	rdx, qword ptr [rdi + 8]
0x71e1:	lea	r11, [rdx + 8]
0x71e5:	mov	qword ptr [rdi + 8], r11
0x71e9:	jmp	0x7142


0x7073:	mov	edx, r11d
0x7076:	add	rdx, qword ptr [rdi + 0x10]
0x707a:	add	r11d, 8
0x707e:	mov	dword ptr [rdi], r11d
0x7081:	mov	rdx, qword ptr [rdx]
0x7084:	mov	qword ptr [rax + 0x10], rdx
0x7088:	jmp	0x7050


0x71aa:	mov	rdx, qword ptr [rdi + 8]
0x71ae:	lea	r11, [rdx + 8]
0x71b2:	mov	qword ptr [rdi + 8], r11
0x71b6:	jmp	0x7081


0x7097:	mov	edx, r11d
0x709a:	add	rdx, qword ptr [rdi + 0x10]
0x709e:	add	r11d, 8
0x70a2:	mov	dword ptr [rdi], r11d
0x70a5:	mov	edx, dword ptr [rdx]
0x70a7:	mov	dword ptr [rax + 0x10], edx
0x70aa:	jmp	0x7050


0x71cc:	mov	rdx, qword ptr [rdi + 8]
0x71d0:	lea	r11, [rdx + 8]
0x71d4:	mov	qword ptr [rdi + 8], r11
0x71d8:	jmp	0x70a5


0x70b9:	mov	edx, r11d
0x70bc:	add	rdx, qword ptr [rdi + 0x10]
0x70c0:	add	r11d, 8
0x70c4:	mov	dword ptr [rdi], r11d
0x70c7:	mov	edx, dword ptr [rdx]
0x70c9:	mov	byte ptr [rax + 0x10], dl
0x70cc:	jmp	0x7050


0x71bb:	mov	rdx, qword ptr [rdi + 8]
0x71bf:	lea	r11, [rdx + 8]
0x71c3:	mov	qword ptr [rdi + 8], r11
0x71c7:	jmp	0x70c7


0x70db:	mov	edx, r11d
0x70de:	add	rdx, qword ptr [rdi + 0x10]
0x70e2:	add	r11d, 8
0x70e6:	mov	dword ptr [rdi], r11d
0x70e9:	mov	edx, dword ptr [rdx]
0x70eb:	mov	word ptr [rax + 0x10], dx
0x70ef:	jmp	0x7050


0x717a:	mov	rdx, qword ptr [rdi + 8]
0x717e:	lea	r11, [rdx + 8]
0x7182:	mov	qword ptr [rdi + 8], r11
0x7186:	jmp	0x70e9


0x7018:	cmp	dword ptr [rax], 0x16
0x701b:	ja	0x7060


0x7159:	mov	edx, r11d
0x715c:	add	rdx, qword ptr [rdi + 0x10]
0x7160:	add	r11d, 8
0x7164:	mov	dword ptr [rdi], r11d
0x7167:	mov	rdx, qword ptr [rdx]
0x716a:	test	rdx, rdx
0x716d:	cmove	rdx, r10
0x7171:	mov	qword ptr [rax + 0x10], rdx
0x7175:	jmp	0x7050


0x719c:	mov	rdx, qword ptr [rdi + 8]
0x71a0:	lea	r11, [rdx + 8]
0x71a4:	mov	qword ptr [rdi + 8], r11
0x71a8:	jmp	0x7167


0x7101:	mov	edx, r11d
0x7104:	add	rdx, qword ptr [rdi + 0x10]
0x7108:	add	r11d, 8
0x710c:	mov	dword ptr [rdi], r11d
0x710f:	mov	rdx, qword ptr [rdx]
0x7112:	test	rdx, rdx
0x7115:	cmove	rdx, r9
0x7119:	mov	qword ptr [rax + 0x10], rdx
0x711d:	jmp	0x7050


0x718b:	mov	rdx, qword ptr [rdi + 8]
0x718f:	lea	r11, [rdx + 8]
0x7193:	mov	qword ptr [rdi + 8], r11
0x7197:	jmp	0x710f


0x6964:	mov	r8, qword ptr [r13 + 8]
0x6968:	add	r13, 0x58
0x696c:	mov	rcx, qword ptr [r13]
0x6970:	add	qword ptr [rbp - 0x400], 1
0x6978:	cmp	rcx, r8
0x697b:	jne	0x6019


0x6887:	jmp	0x67c0


0x658e:	cmp	eax, 2
0x6591:	je	0x6808


0x67c0:	push	qword ptr [rbp - 0x3f0]
0x67c6:	push	r9
0x67c8:	mov	r9d, dword ptr [rbp - 0x3b8]
0x67cf:	jmp	0x65a1


0x68b7:	jmp	0x67c0


0x6918:	push	qword ptr [rbp - 0x3f0]
0x691e:	push	r9
0x6920:	jmp	0x67c8


0x6456:	cmp	eax, 2
0x6459:	je	0x6900


0x6cd0:	sub	rsp, 8
0x6cd4:	push	qword ptr [rbp - 0x3f0]
0x6cda:	jmp	0x6755


0x673f:	cmp	eax, 2
0x6742:	jne	0x6b40


0x6ce0:	sub	rsp, 8
0x6ce4:	push	qword ptr [rbp - 0x3f0]
0x6cea:	sub	rsp, 0x10
0x6cee:	fstp	xword ptr [rsp]
0x6cf1:	jmp	0x681b


0x66b5:	cmp	eax, 2
0x66b8:	jne	0x6b80


0x67fb:	cmp	eax, 2
0x67fe:	jne	0x6597


0x7050:	add	rcx, 1
0x7054:	add	rax, 0x20
0x7058:	cmp	qword ptr [rsi], rcx
0x705b:	ja	0x7018


0x7142:	movsd	xmm0, qword ptr [rdx]
0x7146:	movsd	qword ptr [rax + 0x10], xmm0
0x714b:	jmp	0x7050


0x7081:	mov	rdx, qword ptr [rdx]
0x7084:	mov	qword ptr [rax + 0x10], rdx
0x7088:	jmp	0x7050


0x70a5:	mov	edx, dword ptr [rdx]
0x70a7:	mov	dword ptr [rax + 0x10], edx
0x70aa:	jmp	0x7050


0x70c7:	mov	edx, dword ptr [rdx]
0x70c9:	mov	byte ptr [rax + 0x10], dl
0x70cc:	jmp	0x7050


0x70e9:	mov	edx, dword ptr [rdx]
0x70eb:	mov	word ptr [rax + 0x10], dx
0x70ef:	jmp	0x7050


0x7167:	mov	rdx, qword ptr [rdx]
0x716a:	test	rdx, rdx
0x716d:	cmove	rdx, r10
0x7171:	mov	qword ptr [rax + 0x10], rdx
0x7175:	jmp	0x7050


0x710f:	mov	rdx, qword ptr [rdx]
0x7112:	test	rdx, rdx
0x7115:	cmove	rdx, r9
0x7119:	mov	qword ptr [rax + 0x10], rdx
0x711d:	jmp	0x7050


0x6808:	sub	rsp, 8
0x680c:	push	qword ptr [rbp - 0x3f0]
0x6812:	push	r9
0x6814:	mov	eax, dword ptr [rbp - 0x3b4]
0x681a:	push	rax
0x681b:	mov	r9d, dword ptr [rbp - 0x3b8]
0x6822:	mov	r8, qword ptr [rbp - 0x3d8]
0x6829:	mov	rsi, r10
0x682c:	mov	rcx, -1
0x6833:	mov	edx, 1
0x6838:	xor	eax, eax
0x683a:	mov	qword ptr [rbp - 0x430], r10
0x6841:	call	0x1580


0x6597:	sub	rsp, 8
0x659b:	push	qword ptr [rbp - 0x3f0]
0x65a1:	mov	r8, qword ptr [rbp - 0x3d8]
0x65a8:	mov	rcx, -1
0x65af:	mov	edx, 1
0x65b4:	mov	rsi, r10
0x65b7:	xor	eax, eax
0x65b9:	mov	qword ptr [rbp - 0x430], r10
0x65c0:	call	0x1580


0x65a1:	mov	r8, qword ptr [rbp - 0x3d8]
0x65a8:	mov	rcx, -1
0x65af:	mov	edx, 1
0x65b4:	mov	rsi, r10
0x65b7:	xor	eax, eax
0x65b9:	mov	qword ptr [rbp - 0x430], r10
0x65c0:	call	0x1580


0x67c8:	mov	r9d, dword ptr [rbp - 0x3b8]
0x67cf:	jmp	0x65a1


0x6900:	sub	rsp, 8
0x6904:	push	qword ptr [rbp - 0x3f0]
0x690a:	push	r9
0x690c:	jmp	0x6814


0x645f:	sub	rsp, 8
0x6463:	push	qword ptr [rbp - 0x3f0]
0x6469:	mov	r8, qword ptr [rbp - 0x3d8]
0x6470:	mov	rsi, r10
0x6473:	mov	rcx, -1
0x647a:	mov	edx, 1
0x647f:	xor	eax, eax
0x6481:	mov	qword ptr [rbp - 0x430], r10
0x6488:	call	0x1580


0x6755:	mov	r9d, dword ptr [rbp - 0x3b8]
0x675c:	mov	r8, qword ptr [rbp - 0x3d8]
0x6763:	mov	rsi, r10
0x6766:	mov	rcx, -1
0x676d:	mov	edx, 1
0x6772:	mov	eax, 1
0x6777:	mov	qword ptr [rbp - 0x430], r10
0x677e:	call	0x1580


0x6748:	mov	eax, dword ptr [rbp - 0x3b4]
0x674e:	push	qword ptr [rbp - 0x3f0]
0x6754:	push	rax
0x6755:	mov	r9d, dword ptr [rbp - 0x3b8]
0x675c:	mov	r8, qword ptr [rbp - 0x3d8]
0x6763:	mov	rsi, r10
0x6766:	mov	rcx, -1
0x676d:	mov	edx, 1
0x6772:	mov	eax, 1
0x6777:	mov	qword ptr [rbp - 0x430], r10
0x677e:	call	0x1580


0x6b40:	mov	r9, qword ptr [rbp - 0x3f0]
0x6b47:	mov	r8, qword ptr [rbp - 0x3d8]
0x6b4e:	mov	rsi, r10
0x6b51:	mov	rcx, -1
0x6b58:	mov	edx, 1
0x6b5d:	mov	eax, 1
0x6b62:	mov	qword ptr [rbp - 0x430], r10
0x6b69:	call	0x1580


0x681b:	mov	r9d, dword ptr [rbp - 0x3b8]
0x6822:	mov	r8, qword ptr [rbp - 0x3d8]
0x6829:	mov	rsi, r10
0x682c:	mov	rcx, -1
0x6833:	mov	edx, 1
0x6838:	xor	eax, eax
0x683a:	mov	qword ptr [rbp - 0x430], r10
0x6841:	call	0x1580


0x66be:	mov	eax, dword ptr [rbp - 0x3b4]
0x66c4:	sub	rsp, 8
0x66c8:	push	qword ptr [rbp - 0x3f0]
0x66ce:	mov	r9d, dword ptr [rbp - 0x3b8]
0x66d5:	mov	r8, qword ptr [rbp - 0x3d8]
0x66dc:	mov	rsi, r10
0x66df:	sub	rsp, 0x18
0x66e3:	mov	rcx, -1
0x66ea:	mov	edx, 1
0x66ef:	fstp	xword ptr [rsp + 8]
0x66f3:	push	rax
0x66f4:	xor	eax, eax
0x66f6:	mov	qword ptr [rbp - 0x430], r10
0x66fd:	call	0x1580


0x6b80:	sub	rsp, 0x10
0x6b84:	mov	r9, qword ptr [rbp - 0x3f0]
0x6b8b:	fstp	xword ptr [rsp]
0x6b8e:	jmp	0x6469


0x1580:	jmp	qword ptr [rip + 0x20989a]


0x6814:	mov	eax, dword ptr [rbp - 0x3b4]
0x681a:	push	rax
0x681b:	mov	r9d, dword ptr [rbp - 0x3b8]
0x6822:	mov	r8, qword ptr [rbp - 0x3d8]
0x6829:	mov	rsi, r10
0x682c:	mov	rcx, -1
0x6833:	mov	edx, 1
0x6838:	xor	eax, eax
0x683a:	mov	qword ptr [rbp - 0x430], r10
0x6841:	call	0x1580


0x6469:	mov	r8, qword ptr [rbp - 0x3d8]
0x6470:	mov	rsi, r10
0x6473:	mov	rcx, -1
0x647a:	mov	edx, 1
0x647f:	xor	eax, eax
0x6481:	mov	qword ptr [rbp - 0x430], r10
0x6488:	call	0x1580




0x539e:	push	r15
0x53a0:	jmp	0x5346


0x5346:	push	r14
0x5348:	mov	rdx, rax
0x534b:	mov	r9, r13
0x534e:	mov	r8, r12
0x5351:	mov	rcx, rbx
0x5354:	mov	rdi, rbp
0x5357:	mov	esi, 1
0x535c:	xor	eax, eax
0x535e:	call	0x1890


0x5363:	pop	rax
0x5364:	pop	rdx
0x5365:	add	rsp, 0x28
0x5369:	pop	rbx
0x536a:	pop	rbp
0x536b:	pop	r12
0x536d:	pop	r13
0x536f:	pop	r14
0x5371:	pop	r15
0x5373:	ret	


0x5447:	push	r13
0x5449:	push	r12
0x544b:	push	r15
0x544d:	push	r14
0x544f:	mov	r9, qword ptr [rsp + 0x28]
0x5454:	jmp	0x53e3


0x53e3:	mov	r8, qword ptr [rsp + 0x20]
0x53e8:	mov	rcx, rbx
0x53eb:	mov	rdx, rax
0x53ee:	mov	rdi, rbp
0x53f1:	mov	esi, 1
0x53f6:	xor	eax, eax
0x53f8:	call	0x1890


0x53fd:	add	rsp, 0x20
0x5401:	add	rsp, 0x28
0x5405:	pop	rbx
0x5406:	pop	rbp
0x5407:	pop	r12
0x5409:	pop	r13
0x540b:	pop	r14
0x540d:	pop	r15
0x540f:	ret	


0x52ee:	add	rsp, 0x28
0x52f2:	mov	r9, r13
0x52f5:	mov	r8, r12
0x52f8:	mov	rcx, rbx
0x52fb:	mov	rdi, rbp
0x52fe:	mov	rdx, rax
0x5301:	pop	rbx
0x5302:	pop	rbp
0x5303:	pop	r12
0x5305:	pop	r13
0x5307:	pop	r14
0x5309:	pop	r15
0x530b:	mov	esi, 1
0x5310:	xor	eax, eax
0x5312:	jmp	0x1890


0x53d6:	sub	rsp, 8
0x53da:	mov	r9, r13
0x53dd:	push	r12
0x53df:	push	r15
0x53e1:	push	r14
0x53e3:	mov	r8, qword ptr [rsp + 0x20]
0x53e8:	mov	rcx, rbx
0x53eb:	mov	rdx, rax
0x53ee:	mov	rdi, rbp
0x53f1:	mov	esi, 1
0x53f6:	xor	eax, eax
0x53f8:	call	0x1890


0x52a2:	add	rsp, 0x28
0x52a6:	mov	r8, r12
0x52a9:	mov	rcx, rbx
0x52ac:	mov	rdi, rbp
0x52af:	mov	rdx, rax
0x52b2:	mov	esi, 1
0x52b7:	pop	rbx
0x52b8:	pop	rbp
0x52b9:	pop	r12
0x52bb:	pop	r13
0x52bd:	pop	r14
0x52bf:	pop	r15
0x52c1:	xor	eax, eax
0x52c3:	jmp	0x1890


0x525e:	add	rsp, 0x28
0x5262:	mov	rcx, rbx
0x5265:	mov	rdi, rbp
0x5268:	pop	rbx
0x5269:	pop	rbp
0x526a:	pop	r12
0x526c:	pop	r13
0x526e:	pop	r14
0x5270:	pop	r15
0x5272:	mov	rdx, rax
0x5275:	mov	esi, 1
0x527a:	xor	eax, eax
0x527c:	jmp	0x1890


0x5180:	sub	rsp, 8
0x5184:	mov	r9, qword ptr [rsp + 0x18]
0x5189:	mov	rdx, rax
0x518c:	mov	rcx, rbx
0x518f:	mov	esi, 1
0x5194:	mov	rdi, rbp
0x5197:	xor	eax, eax
0x5199:	push	r9
0x519b:	push	r13
0x519d:	push	r12
0x519f:	push	r15
0x51a1:	push	r14
0x51a3:	mov	r9, qword ptr [rsp + 0x30]
0x51a8:	mov	r8, qword ptr [rsp + 0x38]
0x51ad:	call	0x1890


0x5342:	sub	rsp, 8
0x5346:	push	r14
0x5348:	mov	rdx, rax
0x534b:	mov	r9, r13
0x534e:	mov	r8, r12
0x5351:	mov	rcx, rbx
0x5354:	mov	rdi, rbp
0x5357:	mov	esi, 1
0x535c:	xor	eax, eax
0x535e:	call	0x1890


0x648d:	pop	rsi
0x648e:	pop	rdi
0x648f:	mov	r10, qword ptr [rbp - 0x430]
0x6496:	mov	ecx, dword ptr [rbp - 0x3bc]
0x649c:	test	ecx, ecx
0x649e:	js	0x65dc


0x65dc:	mov	rdi, qword ptr [rbp - 0x3f8]
0x65e3:	cmp	byte ptr [rdi + 1], 0
0x65e7:	jne	0x6928


0x64a4:	movsxd	rdx, ecx
0x64a7:	cmp	rdx, r10
0x64aa:	jae	0x64ba


0x65ed:	test	eax, eax
0x65ef:	jns	0x64be


0x6928:	mov	byte ptr [rdi + 1], 0
0x692c:	jmp	0x63e0


0x64ac:	add	rdx, r15
0x64af:	cmp	byte ptr [rdx + r14], 0
0x64b4:	jne	0x6df6


0x64ba:	cmp	ecx, eax
0x64bc:	jge	0x64c6


0x65f5:	mov	rax, qword ptr [rbp - 0x3c8]
0x65fc:	mov	ebx, dword ptr [rax]
0x65fe:	test	ebx, ebx
0x6600:	jne	0x6620


0x64be:	mov	dword ptr [rbp - 0x3bc], eax
0x64c4:	mov	ecx, eax
0x64c6:	lea	eax, [rcx + 1]
0x64c9:	cmp	rax, r10
0x64cc:	jb	0x6d00


0x63e0:	mov	rax, qword ptr [rbp - 0x3c8]
0x63e7:	mov	rbx, r12
0x63ea:	mov	r10d, 0x7fffffff
0x63f0:	sub	rbx, r14
0x63f3:	mov	dword ptr [rbp - 0x3bc], 0xffffffff
0x63fd:	cmp	rbx, 0x7fffffff
0x6404:	mov	dword ptr [rax], 0
0x640a:	mov	eax, dword ptr [rbp - 0x3d0]
0x6410:	cmovbe	r10, rbx
0x6414:	cmp	eax, 0x11
0x6417:	ja	0x6df6


0x64c6:	lea	eax, [rcx + 1]
0x64c9:	cmp	rax, r10
0x64cc:	jb	0x6d00


0x6602:	movzx	eax, byte ptr [r13 + 0x48]
0x6607:	mov	ebx, 0x16
0x660c:	and	eax, 0xffffffef
0x660f:	cmp	al, 0x63
0x6611:	mov	eax, 0x54
0x6616:	cmove	ebx, eax
0x6619:	nop	dword ptr [rax]
0x6620:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6627:	je	0x6632


0x6620:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6627:	je	0x6632


0x6d00:	mov	rax, qword ptr [rbp - 0x3c8]
0x6d07:	mov	edi, dword ptr [rbp - 0x424]
0x6d0d:	movsxd	rbx, ecx
0x6d10:	add	rbx, r14
0x6d13:	mov	dword ptr [rax], edi
0x6d15:	jmp	0x6964


0x64d2:	cmp	rbx, 0x7ffffffe
0x64d9:	ja	0x6d20


0x6632:	mov	rax, qword ptr [rbp - 0x420]
0x6639:	test	rax, rax
0x663c:	je	0x6646


0x6629:	test	r15, r15
0x662c:	jne	0x6ddc


0x64df:	lea	rsi, [r12 + r12]
0x64e3:	lea	edx, [rcx + 2]
0x64e6:	test	r12, r12
0x64e9:	mov	rax, -1
0x64f0:	cmovns	rax, rsi
0x64f4:	add	rdx, r14
0x64f7:	jb	0x6fb8


0x6d20:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6d27:	je	0x6d32


0x6646:	mov	rax, qword ptr [rbp - 0x408]
0x664d:	mov	rdi, qword ptr [rbp - 0x2b8]
0x6654:	add	rax, 0x20
0x6658:	cmp	rdi, rax
0x665b:	je	0x6662


0x663e:	mov	rdi, rax
0x6641:	call	0x1590


0x6ddc:	mov	rdi, r15
0x6ddf:	call	0x1590


0x6fb8:	cmp	r12, -1
0x6fbc:	je	0x63e0


0x64fd:	cmp	rax, rdx
0x6500:	cmovb	rax, rdx
0x6504:	cmp	r12, rax
0x6507:	jae	0x63e0


0x6d32:	mov	rax, qword ptr [rbp - 0x420]
0x6d39:	test	rax, rax
0x6d3c:	je	0x6d46


0x6d29:	test	r15, r15
0x6d2c:	jne	0x6de9


0x6662:	mov	rax, qword ptr [rbp - 0x410]
0x6669:	mov	rdi, qword ptr [rbp - 0x3a8]
0x6670:	add	rax, 0x10
0x6674:	cmp	rdi, rax
0x6677:	je	0x667e


0x665d:	call	0x1590


0x6fc2:	jmp	0x6041


0x650d:	test	r12, r12
0x6510:	js	0x6041


0x6d46:	mov	rax, qword ptr [rbp - 0x408]
0x6d4d:	mov	rdi, qword ptr [rbp - 0x2b8]
0x6d54:	add	rax, 0x20
0x6d58:	cmp	rdi, rax
0x6d5b:	je	0x6d62


0x6d3e:	mov	rdi, rax
0x6d41:	call	0x1590


0x6de9:	mov	rdi, r15
0x6dec:	call	0x1590


0x667e:	mov	rax, qword ptr [rbp - 0x3c8]
0x6685:	xor	r15d, r15d
0x6688:	mov	dword ptr [rax], ebx
0x668a:	jmp	0x60af


0x6679:	call	0x1590


0x6041:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6048:	je	0x6053


0x6516:	cmp	rsi, rax
0x6519:	mov	r12, rsi
0x651c:	jae	0x652b


0x6d62:	mov	rax, qword ptr [rbp - 0x410]
0x6d69:	mov	rdi, qword ptr [rbp - 0x3a8]
0x6d70:	add	rax, 0x10
0x6d74:	cmp	rdi, rax
0x6d77:	je	0x6d7e


0x6d5d:	call	0x1590


0x651e:	cmp	rax, -1
0x6522:	je	0x6041


0x652b:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6532:	sete	bl
0x6535:	test	r15, r15
0x6538:	je	0x68c0


0x6d7e:	mov	rax, qword ptr [rbp - 0x3c8]
0x6d85:	xor	r15d, r15d
0x6d88:	mov	dword ptr [rax], 0x4b
0x6d8e:	jmp	0x60af


0x6d79:	call	0x1590


0x6528:	mov	r12, rax
0x652b:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6532:	sete	bl
0x6535:	test	r15, r15
0x6538:	je	0x68c0


0x68c0:	mov	rdi, r12
0x68c3:	call	0x1790


0x653e:	test	bl, bl
0x6540:	jne	0x68c0


0x6546:	mov	rsi, r12
0x6549:	mov	rdi, r15
0x654c:	call	0x17e0


0x6551:	test	rax, rax
0x6554:	je	0x6041


0x655a:	mov	r15, rax
0x655d:	jmp	0x63e0


0x68c8:	test	rax, rax
0x68cb:	mov	rcx, rax
0x68ce:	je	0x6041


0x68d4:	test	r14, r14
0x68d7:	je	0x6990


0x6990:	mov	r15, rcx
0x6993:	jmp	0x63e0


0x68dd:	test	bl, bl
0x68df:	je	0x6990


0x68e5:	mov	rsi, r15
0x68e8:	mov	rdx, r14
0x68eb:	mov	rdi, rax
0x68ee:	call	0x1760


0x68f3:	mov	r15, rax
0x68f6:	jmp	0x63e0


0x6df1:	jmp	0x6d32


0x6de4:	jmp	0x6632


0x6846:	add	rsp, 0x20
0x684a:	mov	r10, qword ptr [rbp - 0x430]
0x6851:	jmp	0x6496


0x6496:	mov	ecx, dword ptr [rbp - 0x3bc]
0x649c:	test	ecx, ecx
0x649e:	js	0x65dc


0x6702:	add	rsp, 0x30
0x6706:	mov	r10, qword ptr [rbp - 0x430]
0x670d:	jmp	0x6496


0x6b6e:	mov	r10, qword ptr [rbp - 0x430]
0x6b75:	jmp	0x6496


0x6783:	pop	r8
0x6785:	mov	r10, qword ptr [rbp - 0x430]
0x678c:	pop	r9
0x678e:	jmp	0x6496


0x65c5:	pop	rdx
0x65c6:	pop	rcx
0x65c7:	mov	ecx, dword ptr [rbp - 0x3bc]
0x65cd:	mov	r10, qword ptr [rbp - 0x430]
0x65d4:	test	ecx, ecx
0x65d6:	jns	0x64a4


0x4090:	sub	rsp, 8
0x4094:	mov	rcx, rbp
0x4097:	mov	rsi, r13
0x409a:	push	qword ptr [rsp + 0x68]
0x409e:	push	qword ptr [rsp + 0x78]
0x40a2:	mov	rdi, r14
0x40a5:	push	0
0x40a7:	mov	r9d, dword ptr [rsp + 0x98]
0x40af:	mov	r8d, dword ptr [rsp + 0x28]
0x40b4:	mov	rdx, qword ptr [rsp + 0x30]
0x40b9:	and	r9d, 0xfffffffd
0x40bd:	call	0x34f0


0x40c2:	add	rsp, 0x20
0x40c6:	mov	r15, rax
0x40c9:	mov	rbx, qword ptr [rsp + 0xa8]
0x40d1:	xor	rbx, qword ptr fs:[0x28]
0x40da:	mov	rax, r15
0x40dd:	jne	0x46e3


0x40e3:	add	rsp, 0xb8
0x40ea:	pop	rbx
0x40eb:	pop	rbp
0x40ec:	pop	r12
0x40ee:	pop	r13
0x40f0:	pop	r14
0x40f2:	pop	r15
0x40f4:	ret	


0x46e3:	call	0x1670


0x468d:	sub	rsp, 8
0x4691:	mov	r8d, 5
0x4697:	mov	rcx, r11
0x469a:	push	qword ptr [rsp + 0x68]
0x469e:	push	qword ptr [rsp + 0x78]
0x46a2:	mov	rdi, r14
0x46a5:	push	qword ptr [rsp + 0x38]
0x46a9:	mov	r9d, dword ptr [rsp + 0x98]
0x46b1:	mov	rdx, qword ptr [rsp + 0x30]
0x46b6:	mov	rsi, qword ptr [rsp + 0x70]
0x46bb:	call	0x34f0


0x46c0:	add	rsp, 0x20
0x46c4:	mov	r15, rax
0x46c7:	jmp	0x40c9


0x40c9:	mov	rbx, qword ptr [rsp + 0xa8]
0x40d1:	xor	rbx, qword ptr fs:[0x28]
0x40da:	mov	rax, r15
0x40dd:	jne	0x46e3


0x1570:	push	qword ptr [rip + 0x20989a]
0x1576:	jmp	qword ptr [rip + 0x20989c]


0x157c:	nop	dword ptr [rax]


0x1586:	push	0
0x158b:	jmp	0x1570


0x1596:	push	1
0x159b:	jmp	0x1570


0x15a6:	push	2
0x15ab:	jmp	0x1570


0x15b6:	push	3
0x15bb:	jmp	0x1570


0x15c6:	push	4
0x15cb:	jmp	0x1570


0x15d6:	push	5
0x15db:	jmp	0x1570


0x15e6:	push	6
0x15eb:	jmp	0x1570


0x15f6:	push	7
0x15fb:	jmp	0x1570


0x1606:	push	8
0x160b:	jmp	0x1570


0x1616:	push	9
0x161b:	jmp	0x1570


0x1626:	push	0xa
0x162b:	jmp	0x1570


0x1636:	push	0xb
0x163b:	jmp	0x1570


0x1646:	push	0xc
0x164b:	jmp	0x1570


0x1656:	push	0xd
0x165b:	jmp	0x1570


0x1666:	push	0xe
0x166b:	jmp	0x1570


0x1676:	push	0xf
0x167b:	jmp	0x1570


0x1686:	push	0x10
0x168b:	jmp	0x1570


0x1696:	push	0x11
0x169b:	jmp	0x1570


0x16a6:	push	0x12
0x16ab:	jmp	0x1570


0x16b6:	push	0x13
0x16bb:	jmp	0x1570


0x16c6:	push	0x14
0x16cb:	jmp	0x1570


0x16d6:	push	0x15
0x16db:	jmp	0x1570


0x16e6:	push	0x16
0x16eb:	jmp	0x1570


0x16f6:	push	0x17
0x16fb:	jmp	0x1570


0x1706:	push	0x18
0x170b:	jmp	0x1570


0x1710:	jmp	qword ptr [rip + 0x2097d2]




0x1716:	push	0x19
0x171b:	jmp	0x1570


0x1726:	push	0x1a
0x172b:	jmp	0x1570


0x1736:	push	0x1b
0x173b:	jmp	0x1570


0x1746:	push	0x1c
0x174b:	jmp	0x1570


0x1756:	push	0x1d
0x175b:	jmp	0x1570


0x1766:	push	0x1e
0x176b:	jmp	0x1570


0x1776:	push	0x1f
0x177b:	jmp	0x1570


0x1786:	push	0x20
0x178b:	jmp	0x1570


0x1796:	push	0x21
0x179b:	jmp	0x1570


0x17a6:	push	0x22
0x17ab:	jmp	0x1570


0x17b6:	push	0x23
0x17bb:	jmp	0x1570


0x17c6:	push	0x24
0x17cb:	jmp	0x1570


0x17d6:	push	0x25
0x17db:	jmp	0x1570


0x17e6:	push	0x26
0x17eb:	jmp	0x1570


0x17f6:	push	0x27
0x17fb:	jmp	0x1570


0x1806:	push	0x28
0x180b:	jmp	0x1570


0x1816:	push	0x29
0x181b:	jmp	0x1570


0x1826:	push	0x2a
0x182b:	jmp	0x1570


0x1836:	push	0x2b
0x183b:	jmp	0x1570


0x1846:	push	0x2c
0x184b:	jmp	0x1570


0x1856:	push	0x2d
0x185b:	jmp	0x1570


0x1866:	push	0x2e
0x186b:	jmp	0x1570


0x1876:	push	0x2f
0x187b:	jmp	0x1570


0x1886:	push	0x30
0x188b:	jmp	0x1570


0x1896:	push	0x31
0x189b:	jmp	0x1570


0x18a0:	jmp	qword ptr [rip + 0x20970a]




0x18a6:	push	0x32
0x18ab:	jmp	0x1570


0x18b0:	jmp	qword ptr [rip + 0x209702]




0x18b6:	push	0x33
0x18bb:	jmp	0x1570


0x18c6:	push	0x34
0x18cb:	jmp	0x1570


0x18d6:	push	0x35
0x18db:	jmp	0x1570


0x256a:	hlt	


0x256b:	nop	dword ptr [rax + rax]


0x25a2:	nop	dword ptr [rax]
0x25a6:	nop	word ptr cs:[rax + rax]


0x25f2:	nop	dword ptr [rax]
0x25f6:	nop	word ptr cs:[rax + rax]


0x263a:	nop	word ptr [rax + rax]


0x264a:	nop	word ptr [rax + rax]


0x268c:	nop	dword ptr [rax]


0x2e7a:	nop	word ptr [rax + rax]


0x31d8:	nop	dword ptr [rax + rax]


0x3287:	nop	word ptr [rax + rax]


0x3298:	nop	dword ptr [rax + rax]


0x32a8:	nop	dword ptr [rax + rax]


0x3354:	nop	word ptr cs:[rax + rax]
0x335e:	nop	


0x33ff:	nop	


0x34e7:	nop	word ptr [rax + rax]


0x3583:	mov	byte ptr [rsp + 0xe], 1
0x3588:	mov	byte ptr [rsp + 0x7c], 0
0x358d:	xor	r12d, r12d
0x3590:	mov	qword ptr [rsp + 0x50], 0
0x3599:	mov	byte ptr [rsp + 0xf], 1
0x359e:	mov	byte ptr [rsp + 0xd], 0
0x35a3:	lea	rax, [rip + 0x4b3d]
0x35aa:	mov	qword ptr [rsp + 0x18], 1
0x35b3:	xor	r15d, r15d
0x35b6:	mov	dword ptr [rsp + 8], 2
0x35be:	mov	qword ptr [rsp + 0x48], rax
0x35c3:	xor	r11d, r11d
0x35c6:	mov	rax, rbp
0x35c9:	mov	r8d, r12d
0x35cc:	mov	rbp, r11
0x35cf:	mov	r11, rax
0x35d2:	nop	word ptr [rax + rax]
0x35d8:	cmp	r11, rbp
0x35db:	setne	r12b
0x35df:	cmp	r11, -1
0x35e3:	jne	0x35f2


0x35e5:	mov	rax, qword ptr [rsp + 0x10]
0x35ea:	cmp	byte ptr [rax + rbp], 0
0x35ee:	setne	r12b
0x35f2:	test	r12b, r12b
0x35f5:	je	0x3c50


0x35f2:	test	r12b, r12b
0x35f5:	je	0x3c50


0x3c50:	cmp	dword ptr [rsp + 8], 2
0x3c55:	movzx	ebx, byte ptr [rsp + 0xf]
0x3c5a:	mov	r12d, r8d
0x3c5d:	mov	rbp, r11
0x3c60:	sete	dl
0x3c63:	mov	eax, ebx
0x3c65:	test	r15, r15
0x3c68:	sete	cl
0x3c6b:	and	eax, edx
0x3c6d:	and	al, cl
0x3c6f:	jne	0x46d6


0x35fb:	cmp	dword ptr [rsp + 8], 2
0x3600:	mov	rdi, qword ptr [rsp + 0x10]
0x3605:	lea	r9, [rdi + rbp]
0x3609:	setne	al
0x360c:	and	al, byte ptr [rsp + 0xd]
0x3610:	mov	r10d, eax
0x3613:	je	0x36c0


0x3c75:	mov	eax, ebx
0x3c77:	xor	eax, 1
0x3c7a:	and	dl, al
0x3c7c:	je	0x45ec


0x46d6:	mov	dword ptr [rsp + 8], 2
0x46de:	jmp	0x4079


0x36c0:	movzx	ebx, byte ptr [r9]
0x36c4:	cmp	bl, 0x7e
0x36c7:	ja	0x39e8


0x3619:	mov	rax, qword ptr [rsp + 0x18]
0x361e:	test	rax, rax
0x3621:	je	0x3a50


0x45ec:	mov	rbx, qword ptr [rsp + 0x48]
0x45f1:	test	rbx, rbx
0x45f4:	je	0x4622


0x3c82:	cmp	byte ptr [rsp + 0x7c], 0
0x3c87:	je	0x45ea


0x4079:	cmp	byte ptr [rsp + 0xd], 0
0x407e:	je	0x4090


0x36cd:	lea	rcx, [rip + 0x5238]
0x36d4:	movzx	edx, bl
0x36d7:	movsxd	rax, dword ptr [rcx + rdx*4]
0x36db:	add	rax, rcx
0x36de:	jmp	rax


0x39e8:	cmp	qword ptr [rsp + 0x58], 1
0x39ee:	jne	0x3d98


0x3a50:	movzx	ebx, byte ptr [r9]
0x3a54:	cmp	bl, 0x7e
0x3a57:	ja	0x39e0


0x3627:	cmp	r11, -1
0x362b:	lea	rbx, [rbp + rax]
0x3630:	jne	0x3660


0x4622:	cmp	r13, r15
0x4625:	jbe	0x40c9


0x45f6:	test	al, al
0x45f8:	je	0x4622


0x45ea:	mov	eax, edx
0x45ec:	mov	rbx, qword ptr [rsp + 0x48]
0x45f1:	test	rbx, rbx
0x45f4:	je	0x4622


0x3c8d:	cmp	byte ptr [rsp + 0xe], 0
0x3c92:	jne	0x468d


0x4080:	test	al, al
0x4082:	mov	eax, 4
0x4087:	cmove	eax, dword ptr [rsp + 8]
0x408c:	mov	dword ptr [rsp + 8], eax


0x39f4:	mov	qword ptr [rsp + 0x38], r11
0x39f9:	mov	byte ptr [rsp + 0x30], r8b
0x39fe:	mov	byte ptr [rsp + 0x28], r10b
0x3a03:	call	0x18c0


0x3d98:	lea	rax, [rsp + 0xa0]
0x3da0:	cmp	r11, -1
0x3da4:	mov	qword ptr [rsp + 0xa0], 0
0x3db0:	mov	qword ptr [rsp + 0x28], rax
0x3db5:	jne	0x3de4


0x3a59:	lea	rcx, [rip + 0x50a8]
0x3a60:	movzx	edx, bl
0x3a63:	movsxd	rax, dword ptr [rcx + rdx*4]
0x3a67:	add	rax, rcx
0x3a6a:	jmp	rax


0x39e0:	xor	r10d, r10d
0x39e3:	nop	dword ptr [rax + rax]
0x39e8:	cmp	qword ptr [rsp + 0x58], 1
0x39ee:	jne	0x3d98


0x3632:	cmp	rax, 1
0x3636:	jbe	0x3660


0x3660:	cmp	rbx, r11
0x3663:	mov	byte ptr [rsp + 0x28], r10b
0x3668:	ja	0x3c20


0x462b:	mov	byte ptr [r14 + r15], 0
0x4630:	jmp	0x40c9


0x45fa:	movzx	ecx, byte ptr [rbx]
0x45fd:	mov	rax, rbx
0x4600:	test	cl, cl
0x4602:	je	0x4622


0x3c98:	test	r13, r13
0x3c9b:	sete	al
0x3c9e:	cmp	qword ptr [rsp + 0x50], 0
0x3ca4:	setne	dl
0x3ca7:	and	al, dl
0x3ca9:	je	0x46cc


0x3db7:	mov	rdi, qword ptr [rsp + 0x10]
0x3dbc:	mov	byte ptr [rsp + 0x40], r8b
0x3dc1:	mov	byte ptr [rsp + 0x38], r10b
0x3dc6:	mov	qword ptr [rsp + 0x30], r9
0x3dcb:	call	0x1660


0x3de4:	lea	rax, [rsp + 0x9c]
0x3dec:	xor	ecx, ecx
0x3dee:	mov	byte ptr [rsp + 0x7e], bl
0x3df2:	mov	byte ptr [rsp + 0x7d], r8b
0x3df7:	mov	rbx, rcx
0x3dfa:	mov	qword ptr [rsp + 0x88], r9
0x3e02:	mov	qword ptr [rsp + 0x38], rax
0x3e07:	mov	byte ptr [rsp + 0x7f], r10b
0x3e0c:	mov	qword ptr [rsp + 0x80], r15
0x3e14:	mov	qword ptr [rsp + 0x40], r14
0x3e19:	mov	qword ptr [rsp + 0x70], r13
0x3e1e:	mov	qword ptr [rsp + 0x30], r11
0x3e23:	mov	rax, qword ptr [rsp + 0x10]
0x3e28:	lea	r14, [rbp + rbx]
0x3e2d:	mov	rdx, qword ptr [rsp + 0x30]
0x3e32:	mov	rcx, qword ptr [rsp + 0x28]
0x3e37:	mov	rdi, qword ptr [rsp + 0x38]
0x3e3c:	lea	r13, [rax + r14]
0x3e40:	sub	rdx, r14
0x3e43:	mov	rsi, r13
0x3e46:	call	0x5ac0


0x3638:	mov	byte ptr [rsp + 0x38], r8b
0x363d:	mov	byte ptr [rsp + 0x30], r10b
0x3642:	mov	qword ptr [rsp + 0x28], r9
0x3647:	call	0x1660


0x366e:	mov	rdx, qword ptr [rsp + 0x18]
0x3673:	mov	rsi, qword ptr [rsp + 0x48]
0x3678:	mov	rdi, r9
0x367b:	mov	qword ptr [rsp + 0x40], r11
0x3680:	mov	byte ptr [rsp + 0x38], r8b
0x3685:	mov	qword ptr [rsp + 0x30], r9
0x368a:	call	0x1710


0x3c20:	xor	r10d, r10d
0x3c23:	jmp	0x36c0


0x4604:	mov	rdx, r15
0x4607:	sub	rax, r15
0x460a:	cmp	r13, rdx
0x460d:	jbe	0x4613


0x46cc:	movzx	eax, byte ptr [rsp + 0x7c]
0x46d1:	jmp	0x45ec


0x3caf:	mov	r13, qword ptr [rsp + 0x50]
0x3cb4:	lea	rbx, [rip + 0x442c]
0x3cbb:	mov	byte ptr [r14], 0x27
0x3cbf:	mov	dword ptr [rsp + 8], 2
0x3cc7:	mov	r15d, 1
0x3ccd:	mov	qword ptr [rsp + 0x18], 1
0x3cd6:	mov	byte ptr [rsp + 0xf], 0
0x3cdb:	mov	qword ptr [rsp + 0x48], rbx
0x3ce0:	mov	byte ptr [rsp + 0x7c], al
0x3ce4:	jmp	0x35c3


0x4613:	add	rdx, 1
0x4617:	movzx	ecx, byte ptr [rax + rdx]
0x461b:	test	cl, cl
0x461d:	jne	0x460a


0x460f:	mov	byte ptr [r14 + rdx], cl
0x4613:	add	rdx, 1
0x4617:	movzx	ecx, byte ptr [rax + rdx]
0x461b:	test	cl, cl
0x461d:	jne	0x460a


0x35c3:	xor	r11d, r11d
0x35c6:	mov	rax, rbp
0x35c9:	mov	r8d, r12d
0x35cc:	mov	rbp, r11
0x35cf:	mov	r11, rax
0x35d2:	nop	word ptr [rax + rax]
0x35d8:	cmp	r11, rbp
0x35db:	setne	r12b
0x35df:	cmp	r11, -1
0x35e3:	jne	0x35f2


0x461f:	mov	r15, rdx
0x4622:	cmp	r13, r15
0x4625:	jbe	0x40c9


0x460a:	cmp	r13, rdx
0x460d:	jbe	0x4613


0x368f:	test	eax, eax
0x3691:	mov	r9, qword ptr [rsp + 0x30]
0x3696:	movzx	r8d, byte ptr [rsp + 0x38]
0x369c:	mov	r11, qword ptr [rsp + 0x40]
0x36a1:	jne	0x3c20


0x36a7:	cmp	byte ptr [rsp + 0xf], 0
0x36ac:	movzx	r10d, byte ptr [rsp + 0x28]
0x36b2:	jne	0x4635


0x4635:	cmp	dword ptr [rsp + 8], 2
0x463a:	movzx	ebx, byte ptr [rsp + 0xf]
0x463f:	mov	rbp, r11
0x4642:	sete	al
0x4645:	mov	byte ptr [rsp + 0xd], bl
0x4649:	jmp	0x4079


0x3e4b:	test	rax, rax
0x3e4e:	mov	r15, rax
0x3e51:	je	0x3ea1


0x3ea1:	mov	edx, r12d
0x3ea4:	mov	rdi, rbx
0x3ea7:	movzx	r8d, byte ptr [rsp + 0x7d]
0x3ead:	xor	edx, 1
0x3eb0:	movzx	ebx, byte ptr [rsp + 0x7e]
0x3eb5:	movzx	r10d, byte ptr [rsp + 0x7f]
0x3ebb:	and	dl, byte ptr [rsp + 0xd]
0x3ebf:	mov	r15, qword ptr [rsp + 0x80]
0x3ec7:	mov	r14, qword ptr [rsp + 0x40]
0x3ecc:	mov	r13, qword ptr [rsp + 0x70]
0x3ed1:	mov	r11, qword ptr [rsp + 0x30]
0x3ed6:	cmp	rdi, 1
0x3eda:	jbe	0x44db


0x3e53:	cmp	rax, -1
0x3e57:	je	0x4475


0x44db:	mov	eax, edx
0x44dd:	jmp	0x3a37


0x3ee0:	mov	rcx, rdi
0x3ee3:	xor	esi, esi
0x3ee5:	movzx	r9d, byte ptr [rsp + 0xf]
0x3eeb:	add	rcx, rbp
0x3eee:	mov	rdi, qword ptr [rsp + 0x10]
0x3ef3:	jmp	0x3fae


0x4475:	mov	rdi, rbx
0x4478:	movzx	r8d, byte ptr [rsp + 0x7d]
0x447e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x4483:	movzx	r10d, byte ptr [rsp + 0x7f]
0x4489:	mov	r15, qword ptr [rsp + 0x80]
0x4491:	xor	r12d, r12d
0x4494:	mov	r14, qword ptr [rsp + 0x40]
0x4499:	mov	r13, qword ptr [rsp + 0x70]
0x449e:	mov	r11, qword ptr [rsp + 0x30]
0x44a3:	movzx	edx, byte ptr [rsp + 0xd]
0x44a8:	jmp	0x3ed6


0x3e5d:	cmp	rax, -2
0x3e61:	je	0x4401


0x3a37:	test	al, al
0x3a39:	jne	0x43d1


0x3fae:	test	dl, dl
0x3fb0:	jne	0x3f00


0x3ed6:	cmp	rdi, 1
0x3eda:	jbe	0x44db


0x4401:	mov	r11, qword ptr [rsp + 0x30]
0x4406:	mov	rsi, r14
0x4409:	mov	rcx, r13
0x440c:	mov	rax, rbx
0x440f:	mov	rdi, rbx
0x4412:	movzx	r8d, byte ptr [rsp + 0x7d]
0x4418:	movzx	ebx, byte ptr [rsp + 0x7e]
0x441d:	mov	r9, qword ptr [rsp + 0x88]
0x4425:	cmp	rsi, r11
0x4428:	movzx	r10d, byte ptr [rsp + 0x7f]
0x442e:	mov	r15, qword ptr [rsp + 0x80]
0x4436:	mov	r14, qword ptr [rsp + 0x40]
0x443b:	mov	r13, qword ptr [rsp + 0x70]
0x4440:	jae	0x4468


0x3e67:	cmp	dword ptr [rsp + 8], 2
0x3e6c:	sete	al
0x3e6f:	and	al, byte ptr [rsp + 0xf]
0x3e73:	jne	0x4010


0x3a3f:	cmp	dword ptr [rsp + 8], 2
0x3a44:	sete	dl
0x3a47:	jmp	0x3718


0x43d1:	movzx	edx, byte ptr [rsp + 0xd]
0x43d6:	xor	r12d, r12d
0x43d9:	jmp	0x3ee0


0x3fb6:	mov	eax, esi
0x3fb8:	xor	eax, 1
0x3fbb:	and	eax, r8d
0x3fbe:	test	r10b, r10b
0x3fc1:	je	0x3fd1


0x3f00:	cmp	dword ptr [rsp + 8], 2
0x3f05:	sete	al
0x3f08:	test	r9b, r9b
0x3f0b:	jne	0x43c0


0x4442:	cmp	byte ptr [rcx], 0
0x4445:	jne	0x4457


0x4468:	movzx	edx, byte ptr [rsp + 0xd]
0x446d:	xor	r12d, r12d
0x4470:	jmp	0x3ed6


0x3e79:	mov	edi, dword ptr [rsp + 0x9c]
0x3e80:	call	0x18b0


0x4010:	cmp	r15, 1
0x4014:	je	0x3e79


0x3718:	cmp	byte ptr [rsp + 0xd], 1
0x371d:	jne	0x3832


0x3fd1:	add	rbp, 1
0x3fd5:	cmp	rbp, rcx
0x3fd8:	jae	0x375c


0x3fc3:	cmp	r13, r15
0x3fc6:	jbe	0x3fcd


0x3f11:	mov	esi, r8d
0x3f14:	xor	esi, 1
0x3f17:	and	al, sil
0x3f1a:	je	0x3f4b


0x43c0:	movzx	ebx, byte ptr [rsp + 0xf]
0x43c5:	mov	rbp, r11
0x43c8:	mov	byte ptr [rsp + 0xd], bl
0x43cc:	jmp	0x4079


0x4447:	jmp	0x4468


0x4457:	add	rax, 1
0x445b:	lea	rdx, [rbp + rax]
0x4460:	cmp	r11, rdx
0x4463:	ja	0x4450


0x401a:	mov	rdi, qword ptr [rsp + 0x10]
0x401f:	lea	rcx, [rdi + r15]
0x4023:	lea	rdx, [rdi + r14 + 1]
0x4028:	lea	r8, [rcx + r14]
0x402c:	jmp	0x403d


0x3723:	test	dl, dl
0x3725:	jne	0x3832


0x3832:	cmp	byte ptr [rsp + 0xf], 0
0x3837:	jne	0x372b


0x3fde:	test	al, al
0x3fe0:	je	0x43de


0x375c:	test	al, al
0x375e:	je	0x3780


0x3fcd:	add	r15, 1
0x3fd1:	add	rbp, 1
0x3fd5:	cmp	rbp, rcx
0x3fd8:	jae	0x375c


0x3fc8:	mov	byte ptr [r14 + r15], 0x5c
0x3fcd:	add	r15, 1
0x3fd1:	add	rbp, 1
0x3fd5:	cmp	rbp, rcx
0x3fd8:	jae	0x375c


0x3f4b:	cmp	r13, r15
0x3f4e:	jbe	0x3f55


0x3f1c:	cmp	r13, r15
0x3f1f:	jbe	0x3f26


0x4465:	mov	rdi, rax
0x4468:	movzx	edx, byte ptr [rsp + 0xd]
0x446d:	xor	r12d, r12d
0x4470:	jmp	0x3ed6


0x4450:	cmp	byte ptr [r9 + rax], 0
0x4455:	je	0x4465


0x403d:	movzx	ecx, byte ptr [rdx]
0x4040:	sub	ecx, 0x5b
0x4043:	cmp	cl, 0x21
0x4046:	ja	0x4030


0x372b:	mov	rsi, qword ptr [rsp + 0x20]
0x3730:	test	rsi, rsi
0x3733:	je	0x3749


0x383d:	jmp	0x3749


0x43de:	xor	r10d, r10d
0x43e1:	jmp	0x3f9d


0x3fe6:	cmp	r13, r15
0x3fe9:	jbe	0x3ff0


0x3780:	cmp	r15, r13
0x3783:	jae	0x3789


0x3760:	cmp	r13, r15
0x3763:	jbe	0x376a


0x3f55:	lea	rax, [r15 + 1]
0x3f59:	cmp	r13, rax
0x3f5c:	jbe	0x3f6b


0x3f50:	mov	byte ptr [r14 + r15], 0x5c
0x3f55:	lea	rax, [r15 + 1]
0x3f59:	cmp	r13, rax
0x3f5c:	jbe	0x3f6b


0x3f26:	lea	rsi, [r15 + 1]
0x3f2a:	cmp	r13, rsi
0x3f2d:	jbe	0x3f35


0x3f21:	mov	byte ptr [r14 + r15], 0x27
0x3f26:	lea	rsi, [r15 + 1]
0x3f2a:	cmp	r13, rsi
0x3f2d:	jbe	0x3f35


0x4048:	mov	esi, 1
0x404d:	shl	rsi, cl
0x4050:	mov	rcx, rsi
0x4053:	movabs	rsi, 0x20000002b
0x405d:	test	rcx, rsi
0x4060:	je	0x4030


0x4030:	add	rdx, 1
0x4034:	cmp	r8, rdx
0x4037:	je	0x3e79


0x3749:	test	r10b, r10b
0x374c:	jne	0x3893


0x3735:	mov	edx, ebx
0x3737:	shr	dl, 5
0x373a:	movzx	edx, dl
0x373d:	mov	edx, dword ptr [rsi + rdx*4]
0x3740:	bt	edx, ebx
0x3743:	jb	0x3893


0x3f9d:	cmp	r13, r15
0x3fa0:	jbe	0x3fa6


0x3ff0:	lea	rax, [r15 + 1]
0x3ff4:	cmp	r13, rax
0x3ff7:	jbe	0x3fff


0x3feb:	mov	byte ptr [r14 + r15], 0x27
0x3ff0:	lea	rax, [r15 + 1]
0x3ff4:	cmp	r13, rax
0x3ff7:	jbe	0x3fff


0x3785:	mov	byte ptr [r14 + r15], bl
0x3789:	movzx	edi, byte ptr [rsp + 0xe]
0x378e:	add	r15, 1
0x3792:	mov	eax, 0
0x3797:	test	r12b, r12b
0x379a:	cmove	edi, eax
0x379d:	mov	byte ptr [rsp + 0xe], dil
0x37a2:	jmp	0x35d8


0x3789:	movzx	edi, byte ptr [rsp + 0xe]
0x378e:	add	r15, 1
0x3792:	mov	eax, 0
0x3797:	test	r12b, r12b
0x379a:	cmove	edi, eax
0x379d:	mov	byte ptr [rsp + 0xe], dil
0x37a2:	jmp	0x35d8


0x376a:	lea	rax, [r15 + 1]
0x376e:	cmp	r13, rax
0x3771:	jbe	0x3779


0x3765:	mov	byte ptr [r14 + r15], 0x27
0x376a:	lea	rax, [r15 + 1]
0x376e:	cmp	r13, rax
0x3771:	jbe	0x3779


0x3f6b:	lea	rax, [r15 + 2]
0x3f6f:	cmp	r13, rax
0x3f72:	jbe	0x3f84


0x3f5e:	mov	eax, ebx
0x3f60:	shr	al, 6
0x3f63:	add	eax, 0x30
0x3f66:	mov	byte ptr [r14 + r15 + 1], al
0x3f6b:	lea	rax, [r15 + 2]
0x3f6f:	cmp	r13, rax
0x3f72:	jbe	0x3f84


0x3f35:	lea	rsi, [r15 + 2]
0x3f39:	cmp	r13, rsi
0x3f3c:	jbe	0x3f44


0x3f2f:	mov	byte ptr [r14 + r15 + 1], 0x24
0x3f35:	lea	rsi, [r15 + 2]
0x3f39:	cmp	r13, rsi
0x3f3c:	jbe	0x3f44


0x4062:	mov	r14, qword ptr [rsp + 0x40]
0x4067:	mov	r13, qword ptr [rsp + 0x70]
0x406c:	mov	rbp, qword ptr [rsp + 0x30]
0x4071:	mov	dword ptr [rsp + 8], 2
0x4079:	cmp	byte ptr [rsp + 0xd], 0
0x407e:	je	0x4090


0x3752:	xor	eax, 1
0x3755:	add	rbp, 1
0x3759:	and	eax, r8d
0x375c:	test	al, al
0x375e:	je	0x3780


0x3893:	cmp	dword ptr [rsp + 8], 2
0x3898:	sete	dl
0x389b:	cmp	byte ptr [rsp + 0xf], 0
0x38a0:	mov	eax, edx
0x38a2:	jne	0x40f8


0x3fa6:	movzx	ebx, byte ptr [rdi + rbp]
0x3faa:	add	r15, 1
0x3fae:	test	dl, dl
0x3fb0:	jne	0x3f00


0x3fa2:	mov	byte ptr [r14 + r15], bl
0x3fa6:	movzx	ebx, byte ptr [rdi + rbp]
0x3faa:	add	r15, 1
0x3fae:	test	dl, dl
0x3fb0:	jne	0x3f00


0x3fff:	add	r15, 2
0x4003:	xor	r10d, r10d
0x4006:	xor	r8d, r8d
0x4009:	jmp	0x3f9d


0x3ff9:	mov	byte ptr [r14 + r15 + 1], 0x27
0x3fff:	add	r15, 2
0x4003:	xor	r10d, r10d
0x4006:	xor	r8d, r8d
0x4009:	jmp	0x3f9d


0x35d8:	cmp	r11, rbp
0x35db:	setne	r12b
0x35df:	cmp	r11, -1
0x35e3:	jne	0x35f2


0x3779:	add	r15, 2
0x377d:	xor	r8d, r8d
0x3780:	cmp	r15, r13
0x3783:	jae	0x3789


0x3773:	mov	byte ptr [r14 + r15 + 1], 0x27
0x3779:	add	r15, 2
0x377d:	xor	r8d, r8d
0x3780:	cmp	r15, r13
0x3783:	jae	0x3789


0x3f84:	and	ebx, 7
0x3f87:	add	rbp, 1
0x3f8b:	add	r15, 3
0x3f8f:	add	ebx, 0x30
0x3f92:	cmp	rbp, rcx
0x3f95:	jae	0x3780


0x3f74:	mov	eax, ebx
0x3f76:	shr	al, 3
0x3f79:	and	eax, 7
0x3f7c:	add	eax, 0x30
0x3f7f:	mov	byte ptr [r14 + r15 + 2], al
0x3f84:	and	ebx, 7
0x3f87:	add	rbp, 1
0x3f8b:	add	r15, 3
0x3f8f:	add	ebx, 0x30
0x3f92:	cmp	rbp, rcx
0x3f95:	jae	0x3780


0x3f44:	add	r15, 3
0x3f48:	mov	r8d, eax
0x3f4b:	cmp	r13, r15
0x3f4e:	jbe	0x3f55


0x3f3e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x3f44:	add	r15, 3
0x3f48:	mov	r8d, eax
0x3f4b:	cmp	r13, r15
0x3f4e:	jbe	0x3f55


0x38a8:	mov	eax, r8d
0x38ab:	xor	eax, 1
0x38ae:	and	al, dl
0x38b0:	je	0x38e1


0x40f8:	mov	rbp, r11
0x40fb:	jmp	0x4079


0x3f9b:	mov	esi, edx
0x3f9d:	cmp	r13, r15
0x3fa0:	jbe	0x3fa6


0x38e1:	cmp	r13, r15
0x38e4:	jbe	0x38eb


0x38b2:	cmp	r13, r15
0x38b5:	jbe	0x38bc


0x38eb:	add	r15, 1
0x38ef:	add	rbp, 1
0x38f3:	jmp	0x3780


0x38e6:	mov	byte ptr [r14 + r15], 0x5c
0x38eb:	add	r15, 1
0x38ef:	add	rbp, 1
0x38f3:	jmp	0x3780


0x38bc:	lea	rdx, [r15 + 1]
0x38c0:	cmp	r13, rdx
0x38c3:	jbe	0x38cb


0x38b7:	mov	byte ptr [r14 + r15], 0x27
0x38bc:	lea	rdx, [r15 + 1]
0x38c0:	cmp	r13, rdx
0x38c3:	jbe	0x38cb


0x38cb:	lea	rdx, [r15 + 2]
0x38cf:	cmp	r13, rdx
0x38d2:	jbe	0x38da


0x38c5:	mov	byte ptr [r14 + r15 + 1], 0x24
0x38cb:	lea	rdx, [r15 + 2]
0x38cf:	cmp	r13, rdx
0x38d2:	jbe	0x38da


0x38da:	add	r15, 3
0x38de:	mov	r8d, eax
0x38e1:	cmp	r13, r15
0x38e4:	jbe	0x38eb


0x38d4:	mov	byte ptr [r14 + r15 + 2], 0x27
0x38da:	add	r15, 3
0x38de:	mov	r8d, eax
0x38e1:	cmp	r13, r15
0x38e4:	jbe	0x38eb


0x3e85:	mov	rdi, qword ptr [rsp + 0x28]
0x3e8a:	test	eax, eax
0x3e8c:	mov	eax, 0
0x3e91:	cmove	r12d, eax
0x3e95:	add	rbx, r15
0x3e98:	call	0x18a0


0x3e9d:	test	eax, eax
0x3e9f:	je	0x3e23


0x3e23:	mov	rax, qword ptr [rsp + 0x10]
0x3e28:	lea	r14, [rbp + rbx]
0x3e2d:	mov	rdx, qword ptr [rsp + 0x30]
0x3e32:	mov	rcx, qword ptr [rsp + 0x28]
0x3e37:	mov	rdi, qword ptr [rsp + 0x38]
0x3e3c:	lea	r13, [rax + r14]
0x3e40:	sub	rdx, r14
0x3e43:	mov	rsi, r13
0x3e46:	call	0x5ac0


0x364c:	movzx	r8d, byte ptr [rsp + 0x38]
0x3652:	movzx	r10d, byte ptr [rsp + 0x30]
0x3658:	mov	r11, rax
0x365b:	mov	r9, qword ptr [rsp + 0x28]
0x3660:	cmp	rbx, r11
0x3663:	mov	byte ptr [rsp + 0x28], r10b
0x3668:	ja	0x3c20


0x3dd0:	movzx	r8d, byte ptr [rsp + 0x40]
0x3dd6:	movzx	r10d, byte ptr [rsp + 0x38]
0x3ddc:	mov	r11, rax
0x3ddf:	mov	r9, qword ptr [rsp + 0x30]
0x3de4:	lea	rax, [rsp + 0x9c]
0x3dec:	xor	ecx, ecx
0x3dee:	mov	byte ptr [rsp + 0x7e], bl
0x3df2:	mov	byte ptr [rsp + 0x7d], r8b
0x3df7:	mov	rbx, rcx
0x3dfa:	mov	qword ptr [rsp + 0x88], r9
0x3e02:	mov	qword ptr [rsp + 0x38], rax
0x3e07:	mov	byte ptr [rsp + 0x7f], r10b
0x3e0c:	mov	qword ptr [rsp + 0x80], r15
0x3e14:	mov	qword ptr [rsp + 0x40], r14
0x3e19:	mov	qword ptr [rsp + 0x70], r13
0x3e1e:	mov	qword ptr [rsp + 0x30], r11
0x3e23:	mov	rax, qword ptr [rsp + 0x10]
0x3e28:	lea	r14, [rbp + rbx]
0x3e2d:	mov	rdx, qword ptr [rsp + 0x30]
0x3e32:	mov	rcx, qword ptr [rsp + 0x28]
0x3e37:	mov	rdi, qword ptr [rsp + 0x38]
0x3e3c:	lea	r13, [rax + r14]
0x3e40:	sub	rdx, r14
0x3e43:	mov	rsi, r13
0x3e46:	call	0x5ac0


0x3a08:	mov	rcx, qword ptr [rax]
0x3a0b:	movzx	edx, bl
0x3a0e:	movzx	r10d, byte ptr [rsp + 0x28]
0x3a14:	movzx	r8d, byte ptr [rsp + 0x30]
0x3a1a:	mov	r11, qword ptr [rsp + 0x38]
0x3a1f:	mov	edi, 1
0x3a24:	movzx	eax, word ptr [rcx + rdx*2]
0x3a28:	and	ax, 0x4000
0x3a2c:	setne	r12b
0x3a30:	sete	al
0x3a33:	and	al, byte ptr [rsp + 0xd]
0x3a37:	test	al, al
0x3a39:	jne	0x43d1


0x36e0:	xor	r10d, r10d
0x36e3:	cmp	r11, 1
0x36e7:	setne	al
0x36ea:	cmp	r11, -1
0x36ee:	jne	0x36fc


0x36f0:	mov	rax, qword ptr [rsp + 0x10]
0x36f5:	cmp	byte ptr [rax + 1], 0
0x36f9:	setne	al
0x36fc:	cmp	dword ptr [rsp + 8], 2
0x3701:	sete	dl
0x3704:	test	al, al
0x3706:	je	0x3958


0x36fc:	cmp	dword ptr [rsp + 8], 2
0x3701:	sete	dl
0x3704:	test	al, al
0x3706:	je	0x3958


0x3958:	test	rbp, rbp
0x395b:	jne	0x370c


0x370c:	xor	r12d, r12d
0x370f:	xor	eax, eax
0x3711:	nop	dword ptr [rax]
0x3718:	cmp	byte ptr [rsp + 0xd], 1
0x371d:	jne	0x3832


0x3961:	movzx	eax, byte ptr [rsp + 0xf]
0x3966:	and	al, dl
0x3968:	je	0x3718


0x396e:	mov	rbp, r11
0x3971:	mov	dword ptr [rsp + 8], 2
0x3979:	jmp	0x4079


0x3d78:	cmp	byte ptr [rsp + 0xf], 0
0x3d7d:	jne	0x45a0


0x37c0:	cmp	eax, 5
0x37c3:	je	0x3d38


0x3d83:	xor	r12d, r12d
0x3d86:	xor	eax, eax
0x3d88:	mov	ebx, 0x3f
0x3d8d:	jmp	0x3749


0x45a0:	mov	rbp, r11
0x45a3:	movzx	eax, byte ptr [rsp + 0xf]
0x45a8:	jmp	0x4079


0x3d38:	test	byte ptr [rsp + 0x78], 4
0x3d3d:	je	0x3d60


0x37c9:	cmp	eax, 2
0x37cc:	mov	ebx, 0x3f
0x37d1:	sete	dl
0x37d4:	xor	r12d, r12d
0x37d7:	xor	eax, eax
0x37d9:	jmp	0x3718


0x3d60:	xor	edx, edx
0x3d62:	xor	r12d, r12d
0x3d65:	xor	eax, eax
0x3d67:	mov	ebx, 0x3f
0x3d6c:	jmp	0x3718


0x3d3f:	lea	rcx, [rbp + 2]
0x3d43:	cmp	rcx, r11
0x3d46:	jae	0x3d60


0x3d48:	mov	rax, qword ptr [rsp + 0x10]
0x3d4d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x3d52:	je	0x44e2


0x44e2:	movzx	ebx, byte ptr [rax + rcx]
0x44e6:	cmp	bl, 0x3e
0x44e9:	ja	0x3d60


0x44ef:	movabs	rax, 0x7000a38200000000
0x44f9:	bt	rax, rbx
0x44fd:	jae	0x3d60


0x4503:	cmp	byte ptr [rsp + 0xf], 0
0x4508:	jne	0x46f2


0x450e:	cmp	r13, r15
0x4511:	jbe	0x4518


0x46f2:	mov	rbp, r11
0x46f5:	jmp	0x4090


0x4518:	lea	rax, [r15 + 1]
0x451c:	cmp	r13, rax
0x451f:	jbe	0x4527


0x4513:	mov	byte ptr [r14 + r15], 0x3f
0x4518:	lea	rax, [r15 + 1]
0x451c:	cmp	r13, rax
0x451f:	jbe	0x4527


0x4527:	lea	rax, [r15 + 2]
0x452b:	cmp	r13, rax
0x452e:	jbe	0x4536


0x4521:	mov	byte ptr [r14 + r15 + 1], 0x22
0x4527:	lea	rax, [r15 + 2]
0x452b:	cmp	r13, rax
0x452e:	jbe	0x4536


0x4536:	lea	rax, [r15 + 3]
0x453a:	cmp	r13, rax
0x453d:	jbe	0x4545


0x4530:	mov	byte ptr [r14 + r15 + 2], 0x22
0x4536:	lea	rax, [r15 + 3]
0x453a:	cmp	r13, rax
0x453d:	jbe	0x4545


0x4545:	add	r15, 4
0x4549:	xor	edx, edx
0x454b:	xor	r12d, r12d
0x454e:	xor	eax, eax
0x4550:	mov	rbp, rcx
0x4553:	jmp	0x3718


0x453f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x4545:	add	r15, 4
0x4549:	xor	edx, edx
0x454b:	xor	r12d, r12d
0x454e:	xor	eax, eax
0x4550:	mov	rbp, rcx
0x4553:	jmp	0x3718


0x3cf0:	cmp	byte ptr [rsp + 0xf], 0
0x3cf5:	jne	0x45a0


0x37ee:	mov	byte ptr [rsp + 0x7c], r12b
0x37f3:	xor	edx, edx
0x37f5:	xor	eax, eax
0x37f7:	mov	ebx, 0x27
0x37fc:	jmp	0x3718


0x3cfb:	test	r13, r13
0x3cfe:	je	0x4100


0x4100:	cmp	r13, r15
0x4103:	jbe	0x410a


0x3d04:	xor	edx, edx
0x3d06:	cmp	qword ptr [rsp + 0x50], 0
0x3d0c:	jne	0x4100


0x410a:	lea	rax, [r15 + 1]
0x410e:	cmp	r13, rax
0x4111:	jbe	0x4119


0x4105:	mov	byte ptr [r14 + r15], 0x27
0x410a:	lea	rax, [r15 + 1]
0x410e:	cmp	r13, rax
0x4111:	jbe	0x4119


0x3d12:	mov	qword ptr [rsp + 0x50], r13
0x3d17:	add	r15, 3
0x3d1b:	xor	eax, eax
0x3d1d:	mov	byte ptr [rsp + 0x7c], r12b
0x3d22:	xor	r8d, r8d
0x3d25:	mov	r13, rdx
0x3d28:	mov	ebx, 0x27
0x3d2d:	jmp	0x3749


0x4119:	lea	rax, [r15 + 2]
0x411d:	cmp	r13, rax
0x4120:	jbe	0x4712


0x4113:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x4119:	lea	rax, [r15 + 2]
0x411d:	cmp	r13, rax
0x4120:	jbe	0x4712


0x4712:	mov	rdx, r13
0x4715:	mov	r13, qword ptr [rsp + 0x50]
0x471a:	jmp	0x3d12


0x4126:	mov	rdx, r13
0x4129:	mov	byte ptr [r14 + r15 + 2], 0x27
0x412f:	mov	r13, qword ptr [rsp + 0x50]
0x4134:	jmp	0x3d12


0x3824:	cmp	byte ptr [rsp + 0xd], 0
0x3829:	jne	0x3890


0x382b:	mov	ebx, edx
0x382d:	xor	r12d, r12d
0x3830:	xor	eax, eax
0x3832:	cmp	byte ptr [rsp + 0xf], 0
0x3837:	jne	0x372b


0x3890:	xor	r12d, r12d
0x3893:	cmp	dword ptr [rsp + 8], 2
0x3898:	sete	dl
0x389b:	cmp	byte ptr [rsp + 0xf], 0
0x38a0:	mov	eax, edx
0x38a2:	jne	0x40f8


0x3c30:	cmp	byte ptr [rsp + 0xf], 0
0x3c35:	jne	0x45a0


0x3863:	cmp	byte ptr [rsp + 0xd], 0
0x3868:	je	0x3a80


0x3c3b:	add	rbp, 1
0x3c3f:	mov	eax, r8d
0x3c42:	xor	r12d, r12d
0x3c45:	mov	ebx, 0x5c
0x3c4a:	jmp	0x375c


0x3a80:	mov	edx, 0x5c
0x3a85:	mov	ebx, 0x5c
0x3a8a:	jmp	0x3824


0x386e:	cmp	byte ptr [rsp + 0xf], 0
0x3873:	je	0x3a80


0x3879:	cmp	qword ptr [rsp + 0x18], 0
0x387f:	jne	0x3c3b


0x3885:	mov	ebx, 0x5c
0x388a:	nop	word ptr [rax + rax]
0x3890:	xor	r12d, r12d
0x3893:	cmp	dword ptr [rsp + 8], 2
0x3898:	sete	dl
0x389b:	cmp	byte ptr [rsp + 0xf], 0
0x38a0:	mov	eax, edx
0x38a2:	jne	0x40f8


0x390b:	xor	edx, edx
0x390d:	test	byte ptr [rsp + 0x78], 1
0x3912:	je	0x382b


0x3ad3:	cmp	dword ptr [rsp + 8], 2
0x3ad8:	sete	dl
0x3adb:	cmp	byte ptr [rsp + 0xf], 0
0x3ae0:	jne	0x467a


0x3918:	add	rbp, 1
0x391c:	jmp	0x35d8


0x3ae6:	mov	eax, r8d
0x3ae9:	mov	rcx, r15
0x3aec:	xor	eax, 1
0x3aef:	and	al, dl
0x3af1:	je	0x3b20


0x467a:	movzx	ebx, byte ptr [rsp + 0xf]
0x467f:	mov	rbp, r11
0x4682:	mov	eax, edx
0x4684:	mov	byte ptr [rsp + 0xd], bl
0x4688:	jmp	0x4079


0x3b20:	cmp	r13, rcx
0x3b23:	jbe	0x3b2a


0x3af3:	cmp	r13, r15
0x3af6:	jbe	0x3afd


0x3b2a:	cmp	dword ptr [rsp + 8], 2
0x3b2f:	lea	r15, [rcx + 1]
0x3b33:	je	0x4139


0x3b25:	mov	byte ptr [r14 + rcx], 0x5c
0x3b2a:	cmp	dword ptr [rsp + 8], 2
0x3b2f:	lea	r15, [rcx + 1]
0x3b33:	je	0x4139


0x3afd:	lea	rcx, [r15 + 1]
0x3b01:	cmp	r13, rcx
0x3b04:	jbe	0x3b0c


0x3af8:	mov	byte ptr [r14 + r15], 0x27
0x3afd:	lea	rcx, [r15 + 1]
0x3b01:	cmp	r13, rcx
0x3b04:	jbe	0x3b0c


0x4139:	mov	eax, r12d
0x413c:	mov	ebx, 0x30
0x4141:	xor	r12d, r12d
0x4144:	jmp	0x3749


0x3b39:	lea	rax, [rbp + 1]
0x3b3d:	cmp	rax, r11
0x3b40:	jae	0x3b5b


0x3b0c:	lea	rcx, [r15 + 2]
0x3b10:	cmp	r13, rcx
0x3b13:	ja	0x4149


0x3b06:	mov	byte ptr [r14 + r15 + 1], 0x24
0x3b0c:	lea	rcx, [r15 + 2]
0x3b10:	cmp	r13, rcx
0x3b13:	ja	0x4149


0x3b42:	mov	rax, qword ptr [rsp + 0x10]
0x3b47:	movzx	eax, byte ptr [rax + rbp + 1]
0x3b4c:	mov	byte ptr [rsp + 0x28], al
0x3b50:	sub	eax, 0x30
0x3b53:	cmp	al, 9
0x3b55:	jbe	0x4389


0x3b5b:	mov	eax, r12d
0x3b5e:	mov	ebx, 0x30
0x3b63:	xor	r12d, r12d
0x3b66:	jmp	0x3718


0x3b19:	lea	rcx, [r15 + 3]
0x3b1d:	mov	r8d, eax
0x3b20:	cmp	r13, rcx
0x3b23:	jbe	0x3b2a


0x4149:	mov	byte ptr [r14 + r15 + 2], 0x27
0x414f:	jmp	0x3b19


0x4389:	cmp	r13, r15
0x438c:	jbe	0x4393


0x4393:	lea	rax, [rcx + 2]
0x4397:	cmp	r13, rax
0x439a:	jbe	0x43a2


0x438e:	mov	byte ptr [r14 + r15], 0x30
0x4393:	lea	rax, [rcx + 2]
0x4397:	cmp	r13, rax
0x439a:	jbe	0x43a2


0x43a2:	mov	eax, r12d
0x43a5:	lea	r15, [rcx + 3]
0x43a9:	xor	r12d, r12d
0x43ac:	mov	ebx, 0x30
0x43b1:	jmp	0x3718


0x439c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x43a2:	mov	eax, r12d
0x43a5:	lea	r15, [rcx + 3]
0x43a9:	xor	r12d, r12d
0x43ac:	mov	ebx, 0x30
0x43b1:	jmp	0x3718


0x3812:	cmp	dword ptr [rsp + 8], 2
0x3817:	sete	al
0x381a:	and	al, byte ptr [rsp + 0xf]
0x381e:	jne	0x396e


0x3bd0:	mov	edx, 0xd
0x3bd5:	xor	r10d, r10d
0x3bd8:	mov	ebx, 0x72
0x3bdd:	jmp	0x3812


0x4154:	test	ebx, ebx
0x4156:	jne	0x3583


0x415c:	mov	byte ptr [rsp + 0xd], 1
0x4161:	test	r13, r13
0x4164:	jne	0x46fa


0x416a:	lea	rax, [rip + 0x3f76]
0x4171:	mov	qword ptr [rsp + 0x50], 0
0x417a:	mov	byte ptr [rsp + 0xe], 1
0x417f:	mov	byte ptr [rsp + 0x7c], 0
0x4184:	xor	r12d, r12d
0x4187:	mov	byte ptr [rsp + 0xf], 0
0x418c:	mov	qword ptr [rsp + 0x18], 1
0x4195:	mov	qword ptr [rsp + 0x48], rax
0x419a:	mov	r15d, 1
0x41a0:	mov	dword ptr [rsp + 8], 2
0x41a8:	jmp	0x35c3


0x46fa:	mov	byte ptr [rsp + 0xe], 1
0x46ff:	xor	eax, eax
0x4701:	xor	r12d, r12d
0x4704:	mov	qword ptr [rsp + 0x50], 0
0x470d:	jmp	0x3cb4


0x3cb4:	lea	rbx, [rip + 0x442c]
0x3cbb:	mov	byte ptr [r14], 0x27
0x3cbf:	mov	dword ptr [rsp + 8], 2
0x3cc7:	mov	r15d, 1
0x3ccd:	mov	qword ptr [rsp + 0x18], 1
0x3cd6:	mov	byte ptr [rsp + 0xf], 0
0x3cdb:	mov	qword ptr [rsp + 0x48], rbx
0x3ce0:	mov	byte ptr [rsp + 0x7c], al
0x3ce4:	jmp	0x35c3


0x41b8:	test	r13, r13
0x41bb:	je	0x43e6


0x45ad:	lea	rax, [rip + 0x42bf]
0x45b4:	mov	byte ptr [rsp + 0xe], 1
0x45b9:	mov	byte ptr [rsp + 0x7c], 0
0x45be:	xor	r12d, r12d
0x45c1:	mov	qword ptr [rsp + 0x50], 0
0x45ca:	mov	byte ptr [rsp + 0xf], 1
0x45cf:	mov	byte ptr [rsp + 0xd], 1
0x45d4:	mov	qword ptr [rsp + 0x18], 1
0x45dd:	xor	r15d, r15d
0x45e0:	mov	qword ptr [rsp + 0x48], rax
0x45e5:	jmp	0x35c3


0x43e6:	mov	qword ptr [rsp + 0x50], 0
0x43ef:	mov	byte ptr [rsp + 0xe], 1
0x43f4:	xor	r12d, r12d
0x43f7:	mov	byte ptr [rsp + 0x7c], 0
0x43fc:	jmp	0x41db


0x41c1:	mov	byte ptr [r14], 0x22
0x41c5:	mov	byte ptr [rsp + 0xe], 1
0x41ca:	xor	r12d, r12d
0x41cd:	mov	byte ptr [rsp + 0x7c], 0
0x41d2:	mov	qword ptr [rsp + 0x50], 0
0x41db:	lea	rax, [rip + 0x4691]
0x41e2:	mov	byte ptr [rsp + 0xf], 0
0x41e7:	mov	byte ptr [rsp + 0xd], 1
0x41ec:	mov	qword ptr [rsp + 0x18], 1
0x41f5:	mov	r15d, 1
0x41fb:	mov	qword ptr [rsp + 0x48], rax
0x4200:	jmp	0x35c3


0x41db:	lea	rax, [rip + 0x4691]
0x41e2:	mov	byte ptr [rsp + 0xf], 0
0x41e7:	mov	byte ptr [rsp + 0xd], 1
0x41ec:	mov	qword ptr [rsp + 0x18], 1
0x41f5:	mov	r15d, 1
0x41fb:	mov	qword ptr [rsp + 0x48], rax
0x4200:	jmp	0x35c3


0x4205:	lea	rax, [rip + 0x4667]
0x420c:	mov	byte ptr [rsp + 0xe], 1
0x4211:	mov	byte ptr [rsp + 0x7c], 0
0x4216:	xor	r12d, r12d
0x4219:	mov	qword ptr [rsp + 0x50], 0
0x4222:	mov	byte ptr [rsp + 0xf], 1
0x4227:	mov	byte ptr [rsp + 0xd], 1
0x422c:	mov	qword ptr [rsp + 0x18], 1
0x4235:	xor	r15d, r15d
0x4238:	mov	qword ptr [rsp + 0x48], rax
0x423d:	mov	dword ptr [rsp + 8], 5
0x4245:	jmp	0x35c3


0x424a:	mov	byte ptr [rsp + 0xe], 1
0x424f:	mov	byte ptr [rsp + 0x7c], 0
0x4254:	xor	r12d, r12d
0x4257:	mov	qword ptr [rsp + 0x50], 0
0x4260:	mov	byte ptr [rsp + 0xf], 0
0x4265:	xor	r15d, r15d
0x4268:	mov	byte ptr [rsp + 0xd], 1
0x426d:	mov	qword ptr [rsp + 0x18], 0
0x4276:	mov	qword ptr [rsp + 0x48], 0
0x427f:	jmp	0x35c3


0x4284:	cmp	dword ptr [rsp + 8], 0xa
0x4289:	je	0x42e1


0x42e1:	xor	r15d, r15d
0x42e4:	test	ebx, ebx
0x42e6:	je	0x44ad


0x428b:	lea	rsi, [rip + 0x45e3]
0x4292:	xor	edi, edi
0x4294:	mov	edx, 5
0x4299:	call	0x1640


0x44ad:	mov	rdx, qword ptr [rsp + 0x68]
0x44b2:	movzx	eax, byte ptr [rdx]
0x44b5:	test	al, al
0x44b7:	je	0x42ec


0x42ec:	test	ebx, ebx
0x42ee:	mov	rbx, qword ptr [rsp + 0x60]
0x42f3:	setne	byte ptr [rsp + 0xf]
0x42f8:	xor	r12d, r12d
0x42fb:	mov	rdi, rbx
0x42fe:	call	0x1660


0x44c9:	add	r15, 1
0x44cd:	movzx	eax, byte ptr [rdx + r15]
0x44d2:	test	al, al
0x44d4:	jne	0x44c0


0x44c5:	mov	byte ptr [r14 + r15], al
0x44c9:	add	r15, 1
0x44cd:	movzx	eax, byte ptr [rdx + r15]
0x44d2:	test	al, al
0x44d4:	jne	0x44c0


0x44d6:	jmp	0x42ec


0x44c0:	cmp	r13, r15
0x44c3:	jbe	0x44c9


0x4303:	mov	qword ptr [rsp + 0x48], rbx
0x4308:	mov	qword ptr [rsp + 0x18], rax
0x430d:	mov	byte ptr [rsp + 0xe], 1
0x4312:	mov	byte ptr [rsp + 0x7c], 0
0x4317:	mov	qword ptr [rsp + 0x50], 0
0x4320:	mov	byte ptr [rsp + 0xd], 1
0x4325:	jmp	0x35c3


0x429e:	mov	rcx, rax
0x42a1:	mov	qword ptr [rsp + 0x68], rax
0x42a6:	lea	rax, [rip + 0x45c8]
0x42ad:	cmp	rcx, rax
0x42b0:	je	0x464e


0x464e:	mov	esi, dword ptr [rsp + 8]
0x4652:	mov	rdi, rcx
0x4655:	call	0x3400


0x42b6:	lea	rsi, [rip + 0x3e2a]
0x42bd:	xor	edi, edi
0x42bf:	mov	edx, 5
0x42c4:	call	0x1640


0x42c9:	mov	rcx, rax
0x42cc:	mov	qword ptr [rsp + 0x60], rax
0x42d1:	lea	rax, [rip + 0x3e0f]
0x42d8:	cmp	rcx, rax
0x42db:	je	0x4664


0x4664:	mov	esi, dword ptr [rsp + 8]
0x4668:	mov	rdi, rcx
0x466b:	call	0x3400


0x4670:	mov	qword ptr [rsp + 0x60], rax
0x4675:	jmp	0x42e1


0x465a:	mov	qword ptr [rsp + 0x68], rax
0x465f:	jmp	0x42b6


0x432a:	mov	byte ptr [rsp + 0xe], 1
0x432f:	mov	byte ptr [rsp + 0x7c], 0
0x4334:	xor	r12d, r12d
0x4337:	mov	qword ptr [rsp + 0x50], 0
0x4340:	mov	byte ptr [rsp + 0xf], 0
0x4345:	xor	r15d, r15d
0x4348:	mov	byte ptr [rsp + 0xd], 0
0x434d:	mov	qword ptr [rsp + 0x18], 0
0x4356:	mov	qword ptr [rsp + 0x48], 0
0x435f:	jmp	0x35c3


0x4364:	mov	byte ptr [rsp + 0xe], 1
0x4369:	mov	byte ptr [rsp + 0x7c], 0
0x436e:	xor	r12d, r12d
0x4371:	mov	qword ptr [rsp + 0x50], 0
0x437a:	mov	byte ptr [rsp + 0xf], 1
0x437f:	mov	byte ptr [rsp + 0xd], 1
0x4384:	jmp	0x35a3


0x35a3:	lea	rax, [rip + 0x4b3d]
0x35aa:	mov	qword ptr [rsp + 0x18], 1
0x35b3:	xor	r15d, r15d
0x35b6:	mov	dword ptr [rsp + 8], 2
0x35be:	mov	qword ptr [rsp + 0x48], rax
0x35c3:	xor	r11d, r11d
0x35c6:	mov	rax, rbp
0x35c9:	mov	r8d, r12d
0x35cc:	mov	rbp, r11
0x35cf:	mov	r11, rax
0x35d2:	nop	word ptr [rax + rax]
0x35d8:	cmp	r11, rbp
0x35db:	setne	r12b
0x35df:	cmp	r11, -1
0x35e3:	jne	0x35f2


0x4558:	test	ebx, ebx
0x455a:	je	0x46e8


0x46e8:	mov	byte ptr [rsp + 0xd], 0
0x46ed:	jmp	0x4161


0x4560:	lea	rax, [rip + 0x3b80]
0x4567:	mov	byte ptr [rsp + 0xe], 1
0x456c:	mov	byte ptr [rsp + 0x7c], 0
0x4571:	xor	r12d, r12d
0x4574:	mov	qword ptr [rsp + 0x50], 0
0x457d:	mov	byte ptr [rsp + 0xf], 1
0x4582:	mov	byte ptr [rsp + 0xd], 0
0x4587:	mov	qword ptr [rsp + 0x18], 1
0x4590:	xor	r15d, r15d
0x4593:	mov	qword ptr [rsp + 0x48], rax
0x4598:	jmp	0x35c3


0x4161:	test	r13, r13
0x4164:	jne	0x46fa


0x4724:	nop	
0x4726:	nop	word ptr cs:[rax + rax]


0x48db:	nop	dword ptr [rax + rax]


0x4916:	nop	word ptr cs:[rax + rax]


0x4931:	nop	dword ptr [rax + rax]
0x4936:	nop	word ptr cs:[rax + rax]


0x4951:	nop	dword ptr [rax + rax]
0x4956:	nop	word ptr cs:[rax + rax]


0x4995:	nop	
0x4996:	nop	word ptr cs:[rax + rax]


0x49b5:	nop	
0x49b6:	nop	word ptr cs:[rax + rax]


0x4a64:	nop	
0x4a66:	nop	word ptr cs:[rax + rax]


0x4b53:	nop	dword ptr [rax]
0x4b56:	nop	word ptr cs:[rax + rax]


0x4b6a:	nop	word ptr [rax + rax]


0x4c03:	nop	dword ptr [rax]
0x4c06:	nop	word ptr cs:[rax + rax]


0x4c23:	nop	dword ptr [rax]
0x4c26:	nop	word ptr cs:[rax + rax]


0x4c3c:	nop	dword ptr [rax]


0x4c58:	nop	dword ptr [rax + rax]


0x4c74:	nop	
0x4c76:	nop	word ptr cs:[rax + rax]


0x4d0e:	nop	


0x4d9a:	nop	word ptr [rax + rax]


0x4dac:	nop	dword ptr [rax]


0x4dbf:	nop	


0x4e58:	nop	dword ptr [rax + rax]


0x4e81:	nop	dword ptr [rax + rax]
0x4e86:	nop	word ptr cs:[rax + rax]


0x4e9a:	nop	word ptr [rax + rax]


0x4f2e:	nop	


0x4fc1:	nop	dword ptr [rax + rax]
0x4fc6:	nop	word ptr cs:[rax + rax]


0x4fdc:	nop	dword ptr [rax]


0x4ff7:	nop	word ptr [rax + rax]


0x5013:	nop	dword ptr [rax]
0x5016:	nop	word ptr cs:[rax + rax]


0x502c:	nop	dword ptr [rax]


0x5044:	nop	
0x5046:	nop	word ptr cs:[rax + rax]


0x5063:	nop	dword ptr [rax]
0x5066:	nop	word ptr cs:[rax + rax]


0x5088:	nop	dword ptr [rax + rax]


0x54a7:	nop	word ptr [rax + rax]


0x5548:	nop	dword ptr [rax + rax]


0x5625:	nop	
0x5626:	nop	word ptr cs:[rax + rax]


0x56ca:	nop	word ptr [rax + rax]


0x56f4:	nop	
0x56f6:	nop	word ptr cs:[rax + rax]


0x5702:	nop	dword ptr [rax]
0x5706:	nop	word ptr cs:[rax + rax]


0x5746:	nop	word ptr cs:[rax + rax]


0x5774:	nop	
0x5776:	nop	word ptr cs:[rax + rax]


0x5802:	nop	dword ptr [rax]
0x5806:	nop	word ptr cs:[rax + rax]


0x585a:	nop	word ptr [rax + rax]


0x5877:	nop	word ptr [rax + rax]


0x58ae:	nop	


0x58d8:	nop	dword ptr [rax + rax]


0x58f3:	nop	word ptr cs:[rax + rax]
0x58fd:	nop	dword ptr [rax]


0x5935:	nop	word ptr cs:[rax + rax]
0x593f:	nop	


0x59f9:	nop	dword ptr [rax]


0x5ab1:	nop	word ptr cs:[rax + rax]
0x5abb:	nop	dword ptr [rax + rax]


0x5b43:	nop	word ptr cs:[rax + rax]
0x5b4d:	nop	dword ptr [rax]


0x5bce:	nop	


0x5c86:	nop	word ptr cs:[rax + rax]


0x5d0d:	nop	dword ptr [rax]


0x5dac:	nop	dword ptr [rax]


0x5e2b:	nop	dword ptr [rax + rax]


0x5ec7:	nop	word ptr [rax + rax]


0x6fef:	nop	


0x71ee:	nop	


0x7437:	mov	r11d, 0x10
0x743d:	mov	ebx, 0x73
0x7442:	nop	word ptr [rax + rax]
0x7448:	cmp	r13, -1
0x744c:	je	0x7b07


0x7b07:	mov	rsi, qword ptr [rsp + 0x20]
0x7b0c:	cmp	rsi, -1
0x7b10:	lea	rax, [rsi + 1]
0x7b14:	mov	qword ptr [r12 + 0x50], rsi
0x7b19:	je	0x7a3b


0x7452:	mov	qword ptr [r12 + 0x50], r13
0x7457:	cmp	r9, r13
0x745a:	mov	rcx, qword ptr [r15 + 8]
0x745e:	jbe	0x7a80


0x7b1f:	mov	r13, qword ptr [rsp + 0x20]
0x7b24:	mov	qword ptr [rsp + 0x20], rax
0x7b29:	jmp	0x7457


0x7a80:	add	r9, r9
0x7a83:	lea	rax, [r13 + 1]
0x7a87:	cmp	r9, r13
0x7a8a:	cmovbe	r9, rax
0x7a8e:	movabs	rax, 0x7ffffffffffffff
0x7a98:	cmp	r9, rax
0x7a9b:	ja	0x7e7b


0x7464:	mov	rax, qword ptr [r15]
0x7467:	mov	rdx, rax
0x746a:	shl	rdx, 5
0x746e:	add	rdx, rcx
0x7471:	cmp	rax, r13
0x7474:	ja	0x7496


0x7457:	cmp	r9, r13
0x745a:	mov	rcx, qword ptr [r15 + 8]
0x745e:	jbe	0x7a80


0x7aa1:	mov	rsi, r9
0x7aa4:	mov	qword ptr [rsp + 0x48], r9
0x7aa9:	mov	qword ptr [rsp + 0x40], r10
0x7aae:	shl	rsi, 5
0x7ab2:	cmp	qword ptr [rsp + 8], rcx
0x7ab7:	mov	qword ptr [rsp + 0x38], r8
0x7abc:	mov	dword ptr [rsp + 0x30], r11d
0x7ac1:	je	0x7b61


0x7496:	shl	r13, 5
0x749a:	lea	rax, [rcx + r13]
0x749e:	mov	edx, dword ptr [rax]
0x74a0:	test	edx, edx
0x74a2:	jne	0x7a73


0x7b61:	mov	rdi, rsi
0x7b64:	call	0x1790


0x7ac7:	mov	rdi, rcx
0x7aca:	call	0x17e0


0x7480:	add	rax, 1
0x7484:	mov	dword ptr [rdx], 0
0x748a:	add	rdx, 0x20
0x748e:	cmp	rax, r13
0x7491:	jbe	0x7480


0x7493:	mov	qword ptr [r15], rax
0x7496:	shl	r13, 5
0x749a:	lea	rax, [rcx + r13]
0x749e:	mov	edx, dword ptr [rax]
0x74a0:	test	edx, edx
0x74a2:	jne	0x7a73


0x74a8:	mov	dword ptr [rax], r11d
0x74ab:	mov	byte ptr [r12 + 0x48], bl
0x74b0:	mov	rax, qword ptr [r14]
0x74b3:	mov	qword ptr [r12 + 8], rbp
0x74b8:	lea	rbx, [rax + 1]
0x74bc:	cmp	r10, rbx
0x74bf:	mov	qword ptr [r14], rbx
0x74c2:	ja	0x7550


0x7a73:	cmp	edx, r11d
0x7a76:	je	0x74ab


0x74c8:	test	r10, r10
0x74cb:	js	0x7e77


0x7550:	mov	rcx, qword ptr [r14 + 8]
0x7554:	jmp	0x7268


0x74ab:	mov	byte ptr [r12 + 0x48], bl
0x74b0:	mov	rax, qword ptr [r14]
0x74b3:	mov	qword ptr [r12 + 8], rbp
0x74b8:	lea	rbx, [rax + 1]
0x74bc:	cmp	r10, rbx
0x74bf:	mov	qword ptr [r14], rbx
0x74c2:	ja	0x7550


0x7a7c:	jmp	0x7a3f


0x7e77:	mov	rcx, qword ptr [r15 + 8]
0x7e7b:	cmp	qword ptr [rsp + 8], rcx
0x7e80:	jne	0x7ce4


0x74d1:	add	r10, r10
0x74d4:	movabs	rax, 0x2e8ba2e8ba2e8ba
0x74de:	cmp	r10, rax
0x74e1:	ja	0x7e77


0x74e7:	lea	rax, [r10 + r10*4]
0x74eb:	mov	rdi, qword ptr [r14 + 8]
0x74ef:	cmp	qword ptr [rsp + 0x28], rdi
0x74f4:	mov	qword ptr [rsp + 0x40], r9
0x74f9:	mov	qword ptr [rsp + 0x38], r10
0x74fe:	lea	rax, [r10 + rax*2]
0x7502:	mov	qword ptr [rsp + 0x30], r8
0x7507:	lea	rsi, [rax*8]
0x750f:	je	0x7bcd


0x7bcd:	mov	rdi, rsi
0x7bd0:	call	0x1790


0x7515:	call	0x17e0


0x751a:	test	rax, rax
0x751d:	mov	rcx, rax
0x7520:	mov	r8, qword ptr [rsp + 0x30]
0x7525:	mov	r10, qword ptr [rsp + 0x38]
0x752a:	mov	r9, qword ptr [rsp + 0x40]
0x752f:	je	0x7e77


0x7535:	mov	rax, qword ptr [rsp + 0x28]
0x753a:	cmp	rax, qword ptr [r14 + 8]
0x753e:	mov	rbx, qword ptr [r14]
0x7541:	je	0x7bf0


0x7bf0:	lea	rax, [rbx + rbx*4]
0x7bf4:	mov	rsi, qword ptr [rsp + 0x28]
0x7bf9:	mov	rdi, rcx
0x7bfc:	mov	qword ptr [rsp + 0x40], r9
0x7c01:	mov	qword ptr [rsp + 0x38], r10
0x7c06:	lea	rdx, [rbx + rax*2]
0x7c0a:	mov	qword ptr [rsp + 0x30], r8
0x7c0f:	shl	rdx, 3
0x7c13:	call	0x1760


0x7547:	mov	qword ptr [r14 + 8], rcx
0x754b:	jmp	0x7268


0x7c18:	mov	rbx, qword ptr [r14]
0x7c1b:	mov	rcx, rax
0x7c1e:	mov	r9, qword ptr [rsp + 0x40]
0x7c23:	mov	r10, qword ptr [rsp + 0x38]
0x7c28:	mov	r8, qword ptr [rsp + 0x30]
0x7c2d:	jmp	0x7547


0x7acf:	test	rax, rax
0x7ad2:	mov	rcx, rax
0x7ad5:	mov	r11d, dword ptr [rsp + 0x30]
0x7ada:	mov	r8, qword ptr [rsp + 0x38]
0x7adf:	mov	r10, qword ptr [rsp + 0x40]
0x7ae4:	mov	r9, qword ptr [rsp + 0x48]
0x7ae9:	je	0x7e77


0x7aef:	mov	rax, qword ptr [rsp + 8]
0x7af4:	cmp	rax, qword ptr [r15 + 8]
0x7af8:	je	0x7b89


0x7b89:	mov	rdx, qword ptr [r15]
0x7b8c:	mov	rsi, qword ptr [rsp + 8]
0x7b91:	mov	rdi, rcx
0x7b94:	mov	qword ptr [rsp + 0x48], r9
0x7b99:	mov	qword ptr [rsp + 0x40], r10
0x7b9e:	mov	qword ptr [rsp + 0x38], r8
0x7ba3:	mov	dword ptr [rsp + 0x30], r11d
0x7ba8:	shl	rdx, 5
0x7bac:	call	0x1760


0x7afe:	mov	qword ptr [r15 + 8], rcx
0x7b02:	jmp	0x7464


0x7bb1:	mov	r9, qword ptr [rsp + 0x48]
0x7bb6:	mov	r10, qword ptr [rsp + 0x40]
0x7bbb:	mov	rcx, rax
0x7bbe:	mov	r8, qword ptr [rsp + 0x38]
0x7bc3:	mov	r11d, dword ptr [rsp + 0x30]
0x7bc8:	jmp	0x7afe


0x7bd5:	test	rax, rax
0x7bd8:	mov	rcx, rax
0x7bdb:	mov	r8, qword ptr [rsp + 0x30]
0x7be0:	mov	r10, qword ptr [rsp + 0x38]
0x7be5:	mov	r9, qword ptr [rsp + 0x40]
0x7bea:	je	0x7cd9


0x7cd9:	mov	rcx, qword ptr [r15 + 8]
0x7cdd:	cmp	qword ptr [rsp + 8], rcx
0x7ce2:	je	0x7cfc


0x7b69:	test	rax, rax
0x7b6c:	mov	rcx, rax
0x7b6f:	mov	r11d, dword ptr [rsp + 0x30]
0x7b74:	mov	r8, qword ptr [rsp + 0x38]
0x7b79:	mov	r10, qword ptr [rsp + 0x40]
0x7b7e:	mov	r9, qword ptr [rsp + 0x48]
0x7b83:	je	0x7cec


0x78ec:	cmp	eax, 0xf
0x78ef:	mov	r11d, 0x16
0x78f5:	jg	0x7448


0x78fb:	test	al, 4
0x78fd:	jne	0x7448


0x7448:	cmp	r13, -1
0x744c:	je	0x7b07


0x7903:	cmp	eax, 7
0x7906:	mov	r11d, 0x15
0x790c:	jg	0x7448


0x7912:	test	al, 2
0x7914:	mov	r11d, 0x12
0x791a:	jne	0x7448


0x7920:	xor	r11d, r11d
0x7923:	test	al, 1
0x7925:	sete	r11b
0x7929:	add	r11d, 0x13
0x792d:	jmp	0x7448


0x794b:	cmp	eax, 0xf
0x794e:	mov	r11d, 9
0x7954:	jg	0x7448


0x795a:	test	al, 4
0x795c:	jne	0x7448


0x7962:	cmp	eax, 7
0x7965:	mov	r11d, 7
0x796b:	jg	0x7448


0x7971:	test	al, 2
0x7973:	mov	r11d, 1
0x7979:	jne	0x7448


0x797f:	and	eax, 1
0x7982:	cmp	eax, 1
0x7985:	sbb	r11d, r11d
0x7988:	and	r11d, 2
0x798c:	add	r11d, 3
0x7990:	jmp	0x7448


0x79ab:	cmp	eax, 0xf
0x79ae:	mov	r11d, 0xc
0x79b4:	jg	0x7448


0x79ba:	xor	r11d, r11d
0x79bd:	test	al, 4
0x79bf:	setne	r11b
0x79c3:	add	r11d, 0xb
0x79c7:	jmp	0x7448


0x79cc:	mov	r11d, 0xe
0x79d2:	mov	ebx, 0x63
0x79d7:	jmp	0x7448


0x79dc:	cmp	eax, 0xf
0x79df:	mov	r11d, 0xa
0x79e5:	jg	0x7448


0x79eb:	test	al, 4
0x79ed:	jne	0x7448


0x79f3:	cmp	eax, 7
0x79f6:	mov	r11d, 8
0x79fc:	jg	0x7448


0x7a02:	test	al, 2
0x7a04:	mov	r11d, 2
0x7a0a:	jne	0x7448


0x7a10:	and	eax, 1
0x7a13:	cmp	eax, 1
0x7a16:	sbb	r11d, r11d
0x7a19:	and	r11d, 2
0x7a1d:	add	r11d, 4
0x7a21:	jmp	0x7448


0x7edc:	nop	dword ptr [rax]


0x7f45:	nop	
0x7f46:	nop	word ptr cs:[rax + rax]


0x7f52:	nop	word ptr cs:[rax + rax]
0x7f5c:	nop	dword ptr [rax]


0x37b0:	xor	r10d, r10d
0x37b3:	mov	eax, dword ptr [rsp + 8]
0x37b7:	cmp	eax, 2
0x37ba:	je	0x3d78


0x37e0:	xor	r10d, r10d
0x37e3:	cmp	dword ptr [rsp + 8], 2
0x37e8:	je	0x3cf0


0x3808:	mov	edx, 9
0x380d:	mov	ebx, 0x74
0x3812:	cmp	dword ptr [rsp + 8], 2
0x3817:	sete	al
0x381a:	and	al, byte ptr [rsp + 0xf]
0x381e:	jne	0x396e


0x3848:	mov	edx, 8
0x384d:	mov	ebx, 0x62
0x3852:	jmp	0x3824


0x3858:	cmp	dword ptr [rsp + 8], 2
0x385d:	je	0x3c30


0x3900:	cmp	byte ptr [rsp + 0xd], 0
0x3905:	jne	0x3ad3


0x3928:	cmp	dword ptr [rsp + 8], 2
0x392d:	sete	dl
0x3930:	xor	eax, eax
0x3932:	jmp	0x3718


0x3940:	mov	edx, 7
0x3945:	mov	ebx, 0x61
0x394a:	jmp	0x3824


0x3950:	cmp	dword ptr [rsp + 8], 2
0x3955:	sete	dl
0x3958:	test	rbp, rbp
0x395b:	jne	0x370c


0x3980:	cmp	dword ptr [rsp + 8], 2
0x3985:	sete	dl
0x3988:	xor	r12d, r12d
0x398b:	jmp	0x3961


0x3990:	cmp	dword ptr [rsp + 8], 2
0x3995:	mov	ebx, 0x20
0x399a:	sete	dl
0x399d:	jmp	0x3961


0x39a0:	mov	edx, 0xd
0x39a5:	mov	ebx, 0x72
0x39aa:	jmp	0x3812


0x39b0:	mov	edx, 0xc
0x39b5:	mov	ebx, 0x66
0x39ba:	jmp	0x3824


0x39c0:	mov	edx, 0xb
0x39c5:	mov	ebx, 0x76
0x39ca:	jmp	0x3824


0x39d0:	mov	edx, 0xa
0x39d5:	mov	ebx, 0x6e
0x39da:	jmp	0x3812


0x3a70:	xor	r10d, r10d
0x3a73:	cmp	byte ptr [rsp + 0xd], 0
0x3a78:	jne	0x386e


0x3a90:	mov	edx, 0xc
0x3a95:	xor	r10d, r10d
0x3a98:	mov	ebx, 0x66
0x3a9d:	jmp	0x3824


0x3aa8:	mov	edx, 0xa
0x3aad:	xor	r10d, r10d
0x3ab0:	mov	ebx, 0x6e
0x3ab5:	jmp	0x3812


0x3ac0:	mov	ebx, 0x61
0x3ac5:	jmp	0x3890


0x3ad0:	xor	r10d, r10d
0x3ad3:	cmp	dword ptr [rsp + 8], 2
0x3ad8:	sete	dl
0x3adb:	cmp	byte ptr [rsp + 0xf], 0
0x3ae0:	jne	0x467a


0x3b70:	cmp	dword ptr [rsp + 8], 2
0x3b75:	mov	r12d, r10d
0x3b78:	sete	dl
0x3b7b:	xor	r10d, r10d
0x3b7e:	xor	eax, eax
0x3b80:	jmp	0x3718


0x3b88:	cmp	dword ptr [rsp + 8], 2
0x3b8d:	sete	dl
0x3b90:	xor	r10d, r10d
0x3b93:	jmp	0x3958


0x3ba0:	cmp	dword ptr [rsp + 8], 2
0x3ba5:	sete	dl
0x3ba8:	xor	r10d, r10d
0x3bab:	xor	r12d, r12d
0x3bae:	jmp	0x3961


0x3bb8:	cmp	dword ptr [rsp + 8], 2
0x3bbd:	mov	r12d, r10d
0x3bc0:	mov	ebx, 0x20
0x3bc5:	sete	dl
0x3bc8:	xor	r10d, r10d
0x3bcb:	jmp	0x3961


0x3be8:	mov	ebx, 0x76
0x3bed:	jmp	0x3890


0x3bf8:	mov	edx, 9
0x3bfd:	xor	r10d, r10d
0x3c00:	mov	ebx, 0x74
0x3c05:	jmp	0x3812


0x3c10:	mov	ebx, 0x62
0x3c15:	jmp	0x3890


0x41b0:	test	ebx, ebx
0x41b2:	jne	0x45ad


0x7938:	xor	r11d, r11d
0x793b:	cmp	eax, 7
0x793e:	setg	r11b
0x7942:	add	r11d, 0xd
0x7946:	jmp	0x7448


0x7998:	xor	r11d, r11d
0x799b:	cmp	eax, 7
0x799e:	setg	r11b
0x79a2:	add	r11d, 0xf
0x79a6:	jmp	0x7448


0x7a30:	mov	r11d, 0x11
0x7a36:	jmp	0x7448


0x1a2b:	nop	dword ptr [rax + rax]


0x1a65:	nop	dword ptr [rax]


0x1aa7:	nop	word ptr [rax + rax]


0x1abc:	nop	dword ptr [rax]


0x1c06:	nop	word ptr cs:[rax + rax]


0x1eb7:	nop	word ptr [rax + rax]


0x2596:	nop	word ptr cs:[rax + rax]


0x25e7:	nop	word ptr [rax + rax]


0x2631:	nop	dword ptr [rax]


0x2709:	nop	dword ptr [rax]


0x273c:	nop	dword ptr [rax]


0x288e:	nop	


0x290a:	nop	word ptr [rax + rax]


0x29b4:	nop	dword ptr [rax]


0x2edd:	nop	dword ptr [rax]


0x3275:	nop	dword ptr [rax]


0x343c:	nop	dword ptr [rax]


0x348d:	nop	dword ptr [rax]


0x36b8:	nop	dword ptr [rax + rax]


0x37a7:	nop	word ptr [rax + rax]


0x37de:	nop	


0x3801:	nop	dword ptr [rax]


0x3842:	nop	word ptr [rax + rax]


0x3854:	nop	dword ptr [rax]


0x38f8:	nop	dword ptr [rax + rax]


0x3921:	nop	dword ptr [rax]


0x3937:	nop	word ptr [rax + rax]


0x394f:	nop	


0x397e:	nop	


0x398d:	nop	dword ptr [rax]


0x399f:	nop	


0x39af:	nop	


0x39bf:	nop	


0x39cf:	nop	


0x39df:	nop	


0x3a4c:	nop	dword ptr [rax]


0x3a6c:	nop	dword ptr [rax]


0x3a7e:	nop	


0x3a8f:	nop	


0x3aa2:	nop	word ptr [rax + rax]


0x3aba:	nop	word ptr [rax + rax]


0x3aca:	nop	word ptr [rax + rax]


0x3b6b:	nop	dword ptr [rax + rax]


0x3b85:	nop	dword ptr [rax]


0x3b98:	nop	dword ptr [rax + rax]


0x3bb3:	nop	dword ptr [rax + rax]


0x3be2:	nop	word ptr [rax + rax]


0x3bf2:	nop	word ptr [rax + rax]


0x3c0a:	nop	word ptr [rax + rax]


0x3c1a:	nop	word ptr [rax + rax]


0x3c28:	nop	dword ptr [rax + rax]


0x3c4f:	nop	


0x3ce9:	nop	dword ptr [rax]


0x3d32:	nop	word ptr [rax + rax]


0x3d58:	nop	dword ptr [rax + rax]


0x3d71:	nop	dword ptr [rax]


0x3d92:	nop	word ptr [rax + rax]


0x3ef8:	nop	dword ptr [rax + rax]


0x400b:	nop	dword ptr [rax + rax]


0x402e:	nop	


0x40f5:	nop	dword ptr [rax]


0x41ad:	nop	dword ptr [rax]


0x43b6:	nop	word ptr cs:[rax + rax]


0x4449:	nop	dword ptr [rax]


0x44bd:	nop	dword ptr [rax]


0x459d:	nop	dword ptr [rax]


0x48ab:	nop	dword ptr [rax + rax]


0x5136:	nop	word ptr cs:[rax + rax]


0x51c5:	nop	dword ptr [rax]


0x51e6:	nop	word ptr cs:[rax + rax]


0x5245:	nop	dword ptr [rax]


0x5281:	nop	dword ptr [rax]


0x52c8:	nop	dword ptr [rax + rax]


0x5317:	nop	word ptr [rax + rax]


0x5374:	nop	dword ptr [rax]


0x53a2:	nop	word ptr [rax + rax]


0x5456:	nop	word ptr cs:[rax + rax]


0x54b9:	nop	dword ptr [rax]


0x5732:	nop	word ptr [rax + rax]


0x57b9:	nop	dword ptr [rax]


0x57e4:	nop	dword ptr [rax]


0x583d:	nop	dword ptr [rax]


0x59cf:	nop	


0x59ea:	nop	word ptr [rax + rax]


0x5c36:	nop	word ptr cs:[rax + rax]


0x5c5e:	nop	


0x5cc4:	nop	dword ptr [rax]


0x5ce1:	nop	dword ptr [rax]


0x5cf2:	nop	word ptr [rax + rax]


0x5d4a:	nop	word ptr [rax + rax]


0x5d96:	nop	word ptr cs:[rax + rax]


0x5df5:	nop	dword ptr [rax]


0x5e53:	nop	dword ptr [rax + rax]


0x5e7f:	nop	


0x60d4:	nop	dword ptr [rax]


0x6103:	nop	dword ptr [rax + rax]


0x642d:	nop	dword ptr [rax]


0x6562:	nop	word ptr [rax + rax]


0x668f:	nop	


0x6712:	nop	word ptr [rax + rax]


0x6793:	nop	dword ptr [rax + rax]


0x67bf:	nop	


0x67d4:	nop	dword ptr [rax]


0x6804:	nop	dword ptr [rax]


0x6856:	nop	word ptr cs:[rax + rax]


0x688c:	nop	dword ptr [rax]


0x68bc:	nop	dword ptr [rax]


0x68fb:	nop	dword ptr [rax + rax]


0x6911:	nop	dword ptr [rax]


0x6925:	nop	dword ptr [rax]


0x6931:	nop	dword ptr [rax]


0x6989:	nop	dword ptr [rax]


0x69a9:	nop	dword ptr [rax]


0x69d2:	nop	word ptr [rax + rax]


0x6a2d:	nop	dword ptr [rax]


0x6a3f:	nop	


0x6a72:	nop	word ptr [rax + rax]


0x6af8:	nop	dword ptr [rax + rax]


0x6b08:	nop	dword ptr [rax + rax]


0x6b3d:	nop	dword ptr [rax]


0x6b7a:	nop	word ptr [rax + rax]


0x6b93:	nop	dword ptr [rax + rax]


0x6baa:	nop	word ptr [rax + rax]


0x6bd9:	nop	dword ptr [rax]


0x6c28:	nop	dword ptr [rax + rax]


0x6c3c:	nop	dword ptr [rax]


0x6c4b:	nop	dword ptr [rax + rax]


0x6c5b:	nop	dword ptr [rax + rax]


0x6c6c:	nop	dword ptr [rax]


0x6cb8:	nop	dword ptr [rax + rax]


0x6cc8:	nop	dword ptr [rax + rax]


0x6cdf:	nop	


0x6cf6:	nop	word ptr cs:[rax + rax]


0x6d1a:	nop	word ptr [rax + rax]


0x6d93:	nop	dword ptr [rax + rax]


0x6da8:	nop	dword ptr [rax + rax]


0x6dfb:	nop	dword ptr [rax + rax]


0x6fad:	nop	dword ptr [rax]


0x7028:	nop	dword ptr [rax + rax]


0x725e:	nop	


0x72a1:	nop	dword ptr [rax]


0x7307:	nop	word ptr [rax + rax]


0x7352:	nop	word ptr [rax + rax]


0x7368:	nop	dword ptr [rax + rax]


0x7378:	nop	dword ptr [rax + rax]


0x7388:	nop	dword ptr [rax + rax]


0x7398:	nop	dword ptr [rax + rax]


0x73c7:	nop	word ptr [rax + rax]


0x73ee:	nop	


0x740d:	nop	dword ptr [rax]


0x7415:	nop	dword ptr [rax]


0x7476:	nop	word ptr cs:[rax + rax]


0x7646:	nop	word ptr cs:[rax + rax]


0x76fc:	nop	dword ptr [rax]


0x77dd:	nop	dword ptr [rax]


0x7829:	nop	dword ptr [rax]


0x7932:	nop	word ptr [rax + rax]


0x7995:	nop	dword ptr [rax]


0x7a26:	nop	word ptr cs:[rax + rax]


0x7a7e:	nop	


0x7e8b:	nop	dword ptr [rax + rax]


