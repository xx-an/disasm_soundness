0xbe40:	sub	rsp, 8
0xbe44:	add	rsp, 8
0xbe48:	ret	


0xbe30:	mov	rdx, qword ptr [rip + 0x2051d1]
0xbe37:	xor	esi, esi
0xbe39:	jmp	0x1f20


0xbe20:	ret	


0xbdb0:	push	r15
0xbdb2:	push	r14
0xbdb4:	mov	r15, rdx
0xbdb7:	push	r13
0xbdb9:	push	r12
0xbdbb:	lea	r12, [rip + 0x204a0e]
0xbdc2:	push	rbp
0xbdc3:	lea	rbp, [rip + 0x204a0e]
0xbdca:	push	rbx
0xbdcb:	mov	r13d, edi
0xbdce:	mov	r14, rsi
0xbdd1:	sub	rbp, r12
0xbdd4:	sub	rsp, 8
0xbdd8:	sar	rbp, 3
0xbddc:	call	0x1b30


0xbd70:	sub	rsp, 8
0xbd74:	mov	edi, 0xe
0xbd79:	call	0x1e30


0xbcf0:	push	r12
0xbcf2:	push	rbp
0xbcf3:	mov	rbp, rdi
0xbcf6:	push	rbx
0xbcf7:	call	0x1bf0


0xbba0:	push	r12
0xbba2:	push	rbp
0xbba3:	push	rbx
0xbba4:	mov	rbx, rsi
0xbba7:	sub	rsp, 0x50
0xbbab:	mov	rax, qword ptr fs:[0x28]
0xbbb4:	mov	qword ptr [rsp + 0x48], rax
0xbbb9:	xor	eax, eax
0xbbbb:	test	rdi, rdi
0xbbbe:	je	0xbcc0


0xbaf0:	push	r13
0xbaf2:	push	r12
0xbaf4:	push	rbp
0xbaf5:	push	rbx
0xbaf6:	mov	rbp, rsi
0xbaf9:	sub	rsp, 8
0xbafd:	test	rdi, rdi
0xbb00:	je	0xbb70


0xbae0:	cmp	rdi, 1
0xbae4:	je	0xbaeb


0xba00:	push	r12
0xba02:	push	rbp
0xba03:	mov	rbp, rdi
0xba06:	push	rbx
0xba07:	lea	rdi, [rip + 0x60c]
0xba0e:	sub	rsp, 0x10
0xba12:	call	0x1b80


0xb8c0:	push	r15
0xb8c2:	push	r14
0xb8c4:	mov	eax, 1
0xb8c9:	push	r13
0xb8cb:	push	r12
0xb8cd:	push	rbp
0xb8ce:	push	rbx
0xb8cf:	sub	rsp, 8
0xb8d3:	mov	rbp, qword ptr [rsi + 0x30]
0xb8d7:	test	rbp, rbp
0xb8da:	je	0xb970


0xb830:	test	rdi, rdi
0xb833:	push	r12
0xb835:	push	rbp
0xb836:	push	rbx
0xb837:	je	0xb898


0xb7d0:	push	r13
0xb7d2:	push	r12
0xb7d4:	push	rbp
0xb7d5:	push	rbx
0xb7d6:	mov	rbp, rdi
0xb7d9:	sub	rsp, 8
0xb7dd:	call	0x1bb0


0xb7a0:	test	rdi, rdi
0xb7a3:	je	0xb7c8


0xb770:	test	rdi, rdi
0xb773:	je	0xb790


0xb6e0:	push	r13
0xb6e2:	push	r12
0xb6e4:	mov	r13, rsi
0xb6e7:	push	rbp
0xb6e8:	push	rbx
0xb6e9:	mov	rbx, rdi
0xb6ec:	mov	r12, rdx
0xb6ef:	sub	rsp, 0x18
0xb6f3:	mov	rax, qword ptr fs:[0x28]
0xb6fc:	mov	qword ptr [rsp + 8], rax
0xb701:	xor	eax, eax
0xb703:	lea	rax, [rsp + 4]
0xb708:	test	rdi, rdi
0xb70b:	cmove	rbx, rax
0xb70f:	mov	rdi, rbx
0xb712:	call	0x1cd0


0xb680:	mov	rax, qword ptr [rdi + 8]
0xb684:	cmp	qword ptr [rdi + 0x10], rax
0xb688:	je	0xb690


0xb640:	test	rdi, rdi
0xb643:	push	rbx
0xb644:	mov	rbx, rdi
0xb647:	je	0xb65a


0xb3c0:	push	r12
0xb3c2:	push	rbp
0xb3c3:	mov	ebp, edi
0xb3c5:	push	rbx
0xb3c6:	sub	rsp, 0x50
0xb3ca:	mov	rax, qword ptr fs:[0x28]
0xb3d3:	mov	qword ptr [rsp + 0x18], rax
0xb3d8:	xor	eax, eax
0xb3da:	lea	rax, [rsp + 0x70]
0xb3df:	test	esi, esi
0xb3e1:	mov	qword ptr [rsp + 0x30], rdx
0xb3e6:	mov	qword ptr [rsp + 0x38], rcx
0xb3eb:	mov	qword ptr [rsp + 0x40], r8
0xb3f0:	mov	qword ptr [rsp + 8], rax
0xb3f5:	lea	rax, [rsp + 0x20]
0xb3fa:	mov	qword ptr [rsp + 0x48], r9
0xb3ff:	mov	dword ptr [rsp], 0x10
0xb406:	mov	qword ptr [rsp + 0x10], rax
0xb40b:	je	0xb612


0xb340:	push	r12
0xb342:	push	rbp
0xb343:	push	rbx
0xb344:	mov	rbx, rdi
0xb347:	call	0x1df0


0xaf20:	push	r15
0xaf22:	push	r14
0xaf24:	push	r13
0xaf26:	push	r12
0xaf28:	push	rbp
0xaf29:	push	rbx
0xaf2a:	sub	rsp, 0x28
0xaf2e:	mov	rax, qword ptr fs:[0x28]
0xaf37:	mov	qword ptr [rsp + 0x18], rax
0xaf3c:	xor	eax, eax
0xaf3e:	cmp	edx, 0x24
0xaf41:	ja	0xb2a5


0xae70:	push	r13
0xae72:	push	r12
0xae74:	mov	r10d, esi
0xae77:	push	rbp
0xae78:	push	rbx
0xae79:	mov	r12, r8
0xae7c:	sub	rsp, 0x18
0xae80:	mov	rax, qword ptr fs:[0x28]
0xae89:	mov	qword ptr [rsp + 8], rax
0xae8e:	xor	eax, eax
0xae90:	cmp	edi, 3
0xae93:	mov	ebp, dword ptr [rip + 0x2061c7]
0xae99:	ja	0xaef4


0xa7b0:	push	r15
0xa7b2:	push	r14
0xa7b4:	push	r13
0xa7b6:	push	r12
0xa7b8:	push	rbp
0xa7b9:	push	rbx
0xa7ba:	sub	rsp, 0x28
0xa7be:	mov	rax, qword ptr fs:[0x28]
0xa7c7:	mov	qword ptr [rsp + 0x18], rax
0xa7cc:	xor	eax, eax
0xa7ce:	cmp	edx, 0x24
0xa7d1:	ja	0xae3f


0xa0f0:	push	r15
0xa0f2:	push	r14
0xa0f4:	push	r13
0xa0f6:	push	r12
0xa0f8:	push	rbp
0xa0f9:	push	rbx
0xa0fa:	sub	rsp, 0x28
0xa0fe:	mov	rax, qword ptr fs:[0x28]
0xa107:	mov	qword ptr [rsp + 0x18], rax
0xa10c:	xor	eax, eax
0xa10e:	cmp	edx, 0x24
0xa111:	ja	0xa77f


0xa0c0:	sub	rsp, 0x10
0xa0c4:	push	r9
0xa0c6:	mov	r9, r8
0xa0c9:	mov	r8, rcx
0xa0cc:	mov	rcx, rdx
0xa0cf:	mov	rdx, rsi
0xa0d2:	mov	esi, 0xa
0xa0d7:	call	0x9fa0


0x9fa0:	push	r15
0x9fa2:	push	r14
0x9fa4:	mov	r15, rcx
0x9fa7:	push	r13
0x9fa9:	push	r12
0x9fab:	mov	r14, rdx
0x9fae:	push	rbp
0x9faf:	push	rbx
0x9fb0:	mov	edx, esi
0x9fb2:	xor	esi, esi
0x9fb4:	mov	r12, rdi
0x9fb7:	mov	r13, r9
0x9fba:	sub	rsp, 0x18
0x9fbe:	mov	rcx, rsp
0x9fc1:	mov	ebx, dword ptr [rsp + 0x50]
0x9fc5:	mov	rax, qword ptr fs:[0x28]
0x9fce:	mov	qword ptr [rsp + 8], rax
0x9fd3:	xor	eax, eax
0x9fd5:	call	0xa0f0


0x9f60:	lea	rsi, [rip + 0x4388]
0x9f67:	sub	rsp, 8
0x9f6b:	mov	edx, 5
0x9f70:	xor	edi, edi
0x9f72:	call	0x1c80


0x9f40:	push	rbx
0x9f41:	mov	rbx, rdi
0x9f44:	call	0x1ca0


0x9f10:	push	rbp
0x9f11:	push	rbx
0x9f12:	mov	rbp, rdi
0x9f15:	mov	rdi, rsi
0x9f18:	mov	rbx, rsi
0x9f1b:	sub	rsp, 8
0x9f1f:	call	0x9d10


0x9ee0:	mov	rax, rdi
0x9ee3:	sub	rsp, 8
0x9ee7:	mul	rsi
0x9eea:	seto	dl
0x9eed:	test	rax, rax
0x9ef0:	js	0x9f09


0x9ec0:	push	rbx
0x9ec1:	mov	rbx, rdi
0x9ec4:	call	0x9d10


0x9e70:	test	rdi, rdi
0x9e73:	mov	rax, qword ptr [rsi]
0x9e76:	je	0x9ea0


0x9de0:	test	rdi, rdi
0x9de3:	mov	r9, rdx
0x9de6:	mov	rcx, qword ptr [rsi]
0x9de9:	je	0x9e20


0x9db0:	mov	rax, rsi
0x9db3:	mul	rdx
0x9db6:	mov	rsi, rax
0x9db9:	seto	al
0x9dbc:	test	rsi, rsi
0x9dbf:	js	0x9dcb


0x9d70:	test	rsi, rsi
0x9d73:	push	rbx
0x9d74:	mov	rbx, rsi
0x9d77:	jne	0x9d7e


0x9d60:	jmp	0x9d10


0x9d30:	mov	rax, rdi
0x9d33:	mul	rsi
0x9d36:	mov	rdi, rax
0x9d39:	seto	al
0x9d3c:	test	rdi, rdi
0x9d3f:	js	0x9d4b


0x9d10:	push	rbx
0x9d11:	mov	rbx, rdi
0x9d14:	call	0x1e10


0x9c90:	push	rbx
0x9c91:	lea	rsi, [rip + 0x434a]
0x9c98:	mov	edx, 5
0x9c9d:	xor	edi, edi
0x9c9f:	call	0x1c80


0x9bb0:	push	rbp
0x9bb1:	push	rbx
0x9bb2:	mov	r10d, 0x20
0x9bb8:	xor	r11d, r11d
0x9bbb:	sub	rsp, 0xb8
0x9bc2:	mov	rax, qword ptr fs:[0x28]
0x9bcb:	mov	qword ptr [rsp + 0x78], rax
0x9bd0:	xor	eax, eax
0x9bd2:	lea	rax, [rsp + 0xd0]
0x9bda:	mov	qword ptr [rsp + 0xa0], r8
0x9be2:	lea	rbx, [rsp + 0xd0]
0x9bea:	lea	r8, [rsp + 0x20]
0x9bef:	mov	qword ptr [rsp + 0xa8], r9
0x9bf7:	mov	dword ptr [rsp + 8], 0x20
0x9bff:	mov	qword ptr [rsp + 0x10], rax
0x9c04:	lea	rax, [rsp + 0x80]
0x9c0c:	xor	r9d, r9d
0x9c0f:	mov	qword ptr [rsp + 0x18], rax
0x9c14:	mov	rbp, rax
0x9c17:	nop	word ptr [rax + rax]
0x9c20:	cmp	r10d, 0x2f
0x9c24:	ja	0x9c7c


0x9b30:	sub	rsp, 0x68
0x9b34:	mov	r10, r8
0x9b37:	xor	r9d, r9d
0x9b3a:	mov	rax, qword ptr fs:[0x28]
0x9b43:	mov	qword ptr [rsp + 0x58], rax
0x9b48:	xor	eax, eax
0x9b4a:	mov	r8, rsp
0x9b4d:	nop	dword ptr [rax]
0x9b50:	mov	eax, dword ptr [r10]
0x9b53:	cmp	eax, 0x2f
0x9b56:	ja	0x9b9a


0x9b10:	xor	r9d, r9d
0x9b13:	cmp	qword ptr [r8], 0
0x9b17:	je	0x9b2b


0x96f0:	push	r15
0x96f2:	push	r14
0x96f4:	push	r13
0x96f6:	push	r12
0x96f8:	mov	r12, r9
0x96fb:	push	rbp
0x96fc:	push	rbx
0x96fd:	mov	rbp, rdi
0x9700:	mov	rbx, r8
0x9703:	sub	rsp, 0x28
0x9707:	test	rsi, rsi
0x970a:	je	0x9828


0x96e0:	mov	edx, 3
0x96e5:	xor	esi, esi
0x96e7:	xor	eax, eax
0x96e9:	jmp	0xb3c0


0x96c0:	lea	rcx, [rip + 0x2079b9]
0x96c7:	mov	rsi, rdi
0x96ca:	mov	rdx, -1
0x96d1:	xor	edi, edi
0x96d3:	jmp	0x8d80


0x96a0:	lea	rcx, [rip + 0x2079d9]
0x96a7:	mov	rdx, -1
0x96ae:	jmp	0x8d80


0x9680:	lea	rcx, [rip + 0x2079f9]
0x9687:	mov	rdx, rsi
0x968a:	mov	rsi, rdi
0x968d:	xor	edi, edi
0x968f:	jmp	0x8d80


0x9670:	lea	rcx, [rip + 0x207a09]
0x9677:	jmp	0x8d80


0x9650:	mov	r8, rcx
0x9653:	mov	rcx, rdx
0x9656:	mov	rdx, rsi
0x9659:	mov	rsi, rdi
0x965c:	xor	edi, edi
0x965e:	jmp	0x9580


0x9630:	mov	rcx, rdx
0x9633:	mov	r8, -1
0x963a:	mov	rdx, rsi
0x963d:	mov	rsi, rdi
0x9640:	xor	edi, edi
0x9642:	jmp	0x9580


0x9620:	mov	r8, -1
0x9627:	jmp	0x9580


0x9580:	sub	rsp, 0x48
0x9584:	mov	r9, rcx
0x9587:	mov	rcx, qword ptr [rip + 0x207e02]
0x958e:	movdqa	xmm0, xmmword ptr [rip + 0x207dca]
0x9596:	mov	rax, qword ptr fs:[0x28]
0x959f:	mov	qword ptr [rsp + 0x38], rax
0x95a4:	xor	eax, eax
0x95a6:	movaps	xmmword ptr [rsp], xmm0
0x95aa:	test	rsi, rsi
0x95ad:	mov	qword ptr [rsp + 0x30], rcx
0x95b2:	mov	dword ptr [rsp], 0xa
0x95b9:	movdqa	xmm0, xmmword ptr [rip + 0x207daf]
0x95c1:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x95c6:	movdqa	xmm0, xmmword ptr [rip + 0x207db2]
0x95ce:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x95d3:	je	0x9607


0x94f0:	sub	rsp, 0x48
0x94f4:	mov	rax, rdx
0x94f7:	mov	rdx, qword ptr fs:[0x28]
0x9500:	mov	qword ptr [rsp + 0x38], rdx
0x9505:	xor	edx, edx
0x9507:	cmp	esi, 0xa
0x950a:	je	0x9574


0x94e0:	mov	edx, 0x3a
0x94e5:	jmp	0x9410


0x94c0:	mov	edx, 0x3a
0x94c5:	mov	rsi, -1
0x94cc:	jmp	0x9410


0x94b0:	movsx	edx, sil
0x94b4:	mov	rsi, -1
0x94bb:	jmp	0x9410


0x9410:	sub	rsp, 0x48
0x9414:	mov	ecx, edx
0x9416:	mov	rax, qword ptr fs:[0x28]
0x941f:	mov	qword ptr [rsp + 0x38], rax
0x9424:	xor	eax, eax
0x9426:	mov	rax, qword ptr [rip + 0x207f63]
0x942d:	mov	r8, rsp
0x9430:	and	ecx, 0x1f
0x9433:	movdqa	xmm0, xmmword ptr [rip + 0x207f25]
0x943b:	mov	qword ptr [rsp + 0x30], rax
0x9440:	mov	eax, edx
0x9442:	movaps	xmmword ptr [rsp], xmm0
0x9446:	shr	al, 5
0x9449:	movzx	eax, al
0x944c:	lea	r9, [r8 + rax*4 + 8]
0x9451:	movdqa	xmm0, xmmword ptr [rip + 0x207f17]
0x9459:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x945e:	movdqa	xmm0, xmmword ptr [rip + 0x207f1a]
0x9466:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x946b:	mov	edx, dword ptr [r9]
0x946e:	mov	eax, edx
0x9470:	shr	eax, cl
0x9472:	not	eax
0x9474:	and	eax, 1
0x9477:	shl	eax, cl
0x9479:	mov	rcx, r8
0x947c:	xor	eax, edx
0x947e:	mov	rdx, rsi
0x9481:	mov	rsi, rdi
0x9484:	mov	dword ptr [r9], eax
0x9487:	xor	edi, edi
0x9489:	call	0x8d80


0x9400:	mov	rcx, rdx
0x9403:	mov	rdx, rsi
0x9406:	mov	esi, edi
0x9408:	xor	edi, edi
0x940a:	jmp	0x9360


0x93f0:	mov	rdx, rsi
0x93f3:	mov	esi, edi
0x93f5:	xor	edi, edi
0x93f7:	jmp	0x92d0


0x9360:	sub	rsp, 0x48
0x9364:	mov	rax, rdx
0x9367:	mov	rdx, rcx
0x936a:	mov	rcx, qword ptr fs:[0x28]
0x9373:	mov	qword ptr [rsp + 0x38], rcx
0x9378:	xor	ecx, ecx
0x937a:	cmp	esi, 0xa
0x937d:	je	0x93e0


0x92d0:	sub	rsp, 0x48
0x92d4:	mov	rax, rdx
0x92d7:	mov	rdx, qword ptr fs:[0x28]
0x92e0:	mov	qword ptr [rsp + 0x38], rdx
0x92e5:	xor	edx, edx
0x92e7:	cmp	esi, 0xa
0x92ea:	je	0x9354


0x92b0:	lea	rcx, [rip + 0x2080a9]
0x92b7:	mov	rdx, rsi
0x92ba:	mov	rsi, rdi
0x92bd:	xor	edi, edi
0x92bf:	jmp	0x8d80


0x9290:	lea	rcx, [rip + 0x2080c9]
0x9297:	mov	rsi, rdi
0x929a:	mov	rdx, -1
0x92a1:	xor	edi, edi
0x92a3:	jmp	0x8d80


0x9280:	lea	rcx, [rip + 0x2080d9]
0x9287:	jmp	0x8d80


0x9260:	lea	rcx, [rip + 0x2080f9]
0x9267:	mov	rdx, -1
0x926e:	jmp	0x8d80


0x91c0:	mov	eax, dword ptr [rip + 0x207ef2]
0x91c6:	push	r12
0x91c8:	mov	r12, qword ptr [rip + 0x207ef1]
0x91cf:	push	rbp
0x91d0:	push	rbx
0x91d1:	cmp	eax, 1
0x91d4:	jle	0x9201


0x91b0:	mov	rcx, rdx
0x91b3:	xor	edx, edx
0x91b5:	jmp	0x90c0


0x90c0:	push	r15
0x90c2:	push	r14
0x90c4:	lea	rax, [rip + 0x208295]
0x90cb:	push	r13
0x90cd:	push	r12
0x90cf:	mov	r12, rdx
0x90d2:	push	rbp
0x90d3:	push	rbx
0x90d4:	mov	rbx, rcx
0x90d7:	mov	r14, rdi
0x90da:	mov	r15, rsi
0x90dd:	sub	rsp, 0x38
0x90e1:	test	rcx, rcx
0x90e4:	cmove	rbx, rax
0x90e8:	xor	ebp, ebp
0x90ea:	call	0x1bb0


0x9040:	push	r15
0x9042:	push	r14
0x9044:	lea	rax, [rip + 0x208315]
0x904b:	push	r13
0x904d:	push	r12
0x904f:	mov	r13, rdi
0x9052:	push	rbp
0x9053:	push	rbx
0x9054:	mov	rbx, r8
0x9057:	mov	r14, rsi
0x905a:	mov	r15, rdx
0x905d:	sub	rsp, 0x18
0x9061:	test	r8, r8
0x9064:	cmove	rbx, rax
0x9068:	mov	qword ptr [rsp + 8], rcx
0x906d:	call	0x1bb0


0x9010:	lea	rax, [rip + 0x208349]
0x9017:	test	rdi, rdi
0x901a:	cmove	rdi, rax
0x901e:	test	rsi, rsi
0x9021:	mov	dword ptr [rdi], 0xa
0x9027:	je	0x9037


0x8ff0:	lea	rax, [rip + 0x208369]
0x8ff7:	test	rdi, rdi
0x8ffa:	cmove	rdi, rax
0x8ffe:	mov	eax, dword ptr [rdi + 4]
0x9001:	mov	dword ptr [rdi + 4], esi
0x9004:	ret	


0x8fb0:	lea	rax, [rip + 0x2083a9]
0x8fb7:	test	rdi, rdi
0x8fba:	mov	ecx, esi
0x8fbc:	cmove	rdi, rax
0x8fc0:	mov	eax, esi
0x8fc2:	and	ecx, 0x1f
0x8fc5:	shr	al, 5
0x8fc8:	movzx	eax, al
0x8fcb:	lea	rdi, [rdi + rax*4 + 8]
0x8fd0:	mov	esi, dword ptr [rdi]
0x8fd2:	mov	eax, esi
0x8fd4:	shr	eax, cl
0x8fd6:	xor	edx, eax
0x8fd8:	and	eax, 1
0x8fdb:	and	edx, 1
0x8fde:	shl	edx, cl
0x8fe0:	xor	edx, esi
0x8fe2:	mov	dword ptr [rdi], edx
0x8fe4:	ret	


0x8f90:	lea	rax, [rip + 0x2083c9]
0x8f97:	test	rdi, rdi
0x8f9a:	cmove	rdi, rax
0x8f9e:	mov	dword ptr [rdi], esi
0x8fa0:	ret	


0x8f70:	lea	rax, [rip + 0x2083e9]
0x8f77:	test	rdi, rdi
0x8f7a:	cmove	rdi, rax
0x8f7e:	mov	eax, dword ptr [rdi]
0x8f80:	ret	


0x8f30:	push	r12
0x8f32:	push	rbp
0x8f33:	push	rbx
0x8f34:	mov	rbx, rdi
0x8f37:	call	0x1bb0


0x8d80:	push	r15
0x8d82:	push	r14
0x8d84:	movsxd	r15, edi
0x8d87:	push	r13
0x8d89:	push	r12
0x8d8b:	mov	r14, rdx
0x8d8e:	push	rbp
0x8d8f:	push	rbx
0x8d90:	mov	rbp, rcx
0x8d93:	sub	rsp, 0x28
0x8d97:	mov	qword ptr [rsp + 8], rsi
0x8d9c:	call	0x1bb0


0x7b40:	push	r15
0x7b42:	push	r14
0x7b44:	mov	r15d, r8d
0x7b47:	push	r13
0x7b49:	push	r12
0x7b4b:	mov	r14, rdi
0x7b4e:	push	rbp
0x7b4f:	push	rbx
0x7b50:	mov	ebx, r9d
0x7b53:	mov	r13, rsi
0x7b56:	mov	rbp, rcx
0x7b59:	and	ebx, 2
0x7b5c:	sub	rsp, 0xb8
0x7b63:	mov	rax, qword ptr [rsp + 0xf0]
0x7b6b:	mov	qword ptr [rsp + 0x10], rdx
0x7b70:	mov	dword ptr [rsp + 8], r8d
0x7b75:	mov	dword ptr [rsp + 0x78], r9d
0x7b7a:	mov	qword ptr [rsp + 0x20], rax
0x7b7f:	mov	rax, qword ptr [rsp + 0xf8]
0x7b87:	mov	qword ptr [rsp + 0x68], rax
0x7b8c:	mov	rax, qword ptr [rsp + 0x100]
0x7b94:	mov	qword ptr [rsp + 0x60], rax
0x7b99:	mov	rax, qword ptr fs:[0x28]
0x7ba2:	mov	qword ptr [rsp + 0xa8], rax
0x7baa:	xor	eax, eax
0x7bac:	call	0x1c90


0x7a50:	push	rbp
0x7a51:	push	rbx
0x7a52:	mov	rbp, rdi
0x7a55:	mov	ebx, esi
0x7a57:	sub	rsp, 8
0x7a5b:	call	0xbd70


0x79b0:	test	rdi, rdi
0x79b3:	push	rbx
0x79b4:	je	0x7a2d


0x7960:	sub	rsp, 0x18
0x7964:	mov	rax, qword ptr fs:[0x28]
0x796d:	mov	qword ptr [rsp + 8], rax
0x7972:	xor	eax, eax
0x7974:	mov	byte ptr [rsp + 7], 0
0x7979:	push	r9
0x797b:	xor	r9d, r9d
0x797e:	push	r8
0x7980:	xor	r8d, r8d
0x7983:	lea	rax, [rsp + 0x17]
0x7988:	push	rax
0x7989:	push	-1
0x798b:	call	0x5ea0


0x5ea0:	push	r15
0x5ea2:	push	r14
0x5ea4:	mov	r11, rdx
0x5ea7:	push	r13
0x5ea9:	push	r12
0x5eab:	mov	r13, rcx
0x5eae:	push	rbp
0x5eaf:	push	rbx
0x5eb0:	mov	rbp, rdi
0x5eb3:	sub	rsp, 0x4c8
0x5eba:	mov	rdi, qword ptr [rcx + 0x30]
0x5ebe:	mov	r15d, dword ptr [rcx + 8]
0x5ec2:	mov	rax, qword ptr [rsp + 0x508]
0x5eca:	mov	qword ptr [rsp + 8], rsi
0x5ecf:	mov	dword ptr [rsp + 0x2c], r9d
0x5ed4:	movsxd	r10, dword ptr [rsp + 0x500]
0x5edc:	mov	byte ptr [rsp + 0x2b], r8b
0x5ee1:	mov	qword ptr [rsp + 0x18], rax
0x5ee6:	mov	rax, qword ptr [rsp + 0x510]
0x5eee:	mov	qword ptr [rsp + 0x10], rax
0x5ef3:	mov	rax, qword ptr fs:[0x28]
0x5efc:	mov	qword ptr [rsp + 0x4b8], rax
0x5f04:	xor	eax, eax
0x5f06:	lea	rax, [rip + 0x5fd8]
0x5f0d:	test	rdi, rdi
0x5f10:	cmovne	rax, rdi
0x5f14:	cmp	r15d, 0xc
0x5f18:	mov	qword ptr [rsp + 0x20], rax
0x5f1d:	jle	0x6010


0x5e50:	test	rdx, rdx
0x5e53:	push	r12
0x5e55:	push	rbp
0x5e56:	mov	rbp, rdi
0x5e59:	push	rbx
0x5e5a:	je	0x5e89


0x5e00:	test	rdx, rdx
0x5e03:	push	r12
0x5e05:	push	rbp
0x5e06:	mov	rbp, rdi
0x5e09:	push	rbx
0x5e0a:	je	0x5e39


0x5dd0:	push	rbp
0x5dd1:	push	rbx
0x5dd2:	mov	ebp, esi
0x5dd4:	mov	rbx, rdi
0x5dd7:	sub	rsp, 8
0x5ddb:	call	0x1ca0


0x5c10:	push	r15
0x5c12:	push	r14
0x5c14:	push	r13
0x5c16:	push	r12
0x5c18:	lea	r13, [rdi + rsi]
0x5c1c:	push	rbp
0x5c1d:	push	rbx
0x5c1e:	mov	rbx, rdi
0x5c21:	sub	rsp, 0x38
0x5c25:	mov	rax, qword ptr fs:[0x28]
0x5c2e:	mov	qword ptr [rsp + 0x28], rax
0x5c33:	xor	eax, eax
0x5c35:	mov	dword ptr [rsp + 0xc], edx
0x5c39:	call	0x1c90


0x5b70:	test	rdi, rdi
0x5b73:	lea	rcx, [rsi + 0x14]
0x5b77:	mov	byte ptr [rsi + 0x14], 0
0x5b7b:	movabs	r9, 0x6666666666666667
0x5b85:	movabs	rsi, 0xcccccccccccccccd
0x5b8f:	mov	r8d, 0x30
0x5b95:	js	0x5bd3


0x5b10:	sub	rsp, 8
0x5b14:	xor	esi, esi
0x5b16:	call	0x1ea0


0x5ac0:	sub	rsp, 0x28
0x5ac4:	xor	edi, edi
0x5ac6:	mov	rsi, rsp
0x5ac9:	mov	rax, qword ptr fs:[0x28]
0x5ad2:	mov	qword ptr [rsp + 0x18], rax
0x5ad7:	xor	eax, eax
0x5ad9:	call	0x1c20


0x5ab0:	mov	rsi, rdi
0x5ab3:	xor	edi, edi
0x5ab5:	jmp	0x1c20


0x5a10:	push	r12
0x5a12:	push	rbp
0x5a13:	mov	rbp, rsi
0x5a16:	push	rbx
0x5a17:	call	0x1f00


0x59e0:	test	rdi, rdi
0x59e3:	je	0x5a00


0x59d0:	jmp	0x1d70


0x5920:	push	rbp
0x5921:	push	rbx
0x5922:	sub	rsp, 8
0x5926:	mov	rdi, qword ptr [rip + 0x20b7bb]
0x592d:	call	0xbcf0


0x5910:	mov	byte ptr [rip + 0x20b919], dil
0x5917:	ret	


0x5900:	mov	qword ptr [rip + 0x20b931], rdi
0x5907:	ret	


0x5810:	push	r12
0x5812:	push	rbp
0x5813:	mov	r12d, esi
0x5816:	push	rbx
0x5817:	mov	rbp, rcx
0x581a:	mov	rbx, rdi
0x581d:	sub	rsp, 0x10
0x5821:	movsx	esi, byte ptr [rdi]
0x5824:	mov	rax, qword ptr fs:[0x28]
0x582d:	mov	qword ptr [rsp + 8], rax
0x5832:	xor	eax, eax
0x5834:	mov	eax, esi
0x5836:	sub	esi, 0x30
0x5839:	cmp	esi, 9
0x583c:	jbe	0x5848


0x52a0:	push	r13
0x52a2:	push	r12
0x52a4:	mov	edx, 5
0x52a9:	push	rbp
0x52aa:	push	rbx
0x52ab:	mov	ebp, edi
0x52ad:	sub	rsp, 0x88
0x52b4:	mov	rbx, qword ptr [rip + 0x20bf85]
0x52bb:	mov	rax, qword ptr fs:[0x28]
0x52c4:	mov	qword ptr [rsp + 0x78], rax
0x52c9:	xor	eax, eax
0x52cb:	test	edi, edi
0x52cd:	je	0x52fd


0x42e0:	push	r15
0x42e2:	push	r14
0x42e4:	push	r13
0x42e6:	push	r12
0x42e8:	mov	r12d, edi
0x42eb:	push	rbp
0x42ec:	push	rbx
0x42ed:	mov	rbp, rsi
0x42f0:	sub	rsp, 0x18
0x42f4:	mov	edx, dword ptr [rip + 0x20cd4e]
0x42fa:	lea	eax, [rdx - 0xa]
0x42fd:	test	eax, eax
0x42ff:	mov	dword ptr [rip + 0x20ceeb], eax
0x4305:	jle	0x4573


0x41e0:	push	rbp
0x41e1:	push	rbx
0x41e2:	mov	rbp, rdi
0x41e5:	lea	rdi, [rip + 0xa35d]
0x41ec:	mov	rbx, rsi
0x41ef:	mov	ecx, 2
0x41f4:	sub	rsp, 8
0x41f8:	mov	rsi, rbp
0x41fb:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3d50:	push	r14
0x3d52:	push	r13
0x3d54:	push	r12
0x3d56:	push	rbp
0x3d57:	push	rbx
0x3d58:	mov	rbx, rdi
0x3d5b:	mov	rdi, qword ptr [rdi]
0x3d5e:	mov	rax, qword ptr [rdi + 8]
0x3d62:	cmp	rax, qword ptr [rdi + 0x10]
0x3d66:	jae	0x4120


0x3c80:	push	rbp
0x3c81:	push	rbx
0x3c82:	mov	rbp, rdi
0x3c85:	sub	rsp, 8
0x3c89:	mov	rbx, qword ptr [rdi]
0x3c8c:	jmp	0x3caa


0x3a30:	push	r13
0x3a32:	push	r12
0x3a34:	mov	r13, rdi
0x3a37:	push	rbp
0x3a38:	push	rbx
0x3a39:	mov	r12d, esi
0x3a3c:	sub	rsp, 8
0x3a40:	mov	rbx, qword ptr [rdi]
0x3a43:	mov	rax, qword ptr [rbx + 8]
0x3a47:	cmp	rax, qword ptr [rbx + 0x10]
0x3a4b:	jae	0x3c10


0x3930:	push	rbx
0x3931:	mov	rbx, rdi
0x3934:	mov	rdi, qword ptr [rdi]
0x3937:	test	byte ptr [rdi], 0x20
0x393a:	jne	0x3a00


0x38c0:	push	rbx
0x38c1:	mov	eax, dword ptr [rip + 0x20d8c5]
0x38c7:	mov	rbx, rdi
0x38ca:	mov	edi, dword ptr [rdi + 0x34]
0x38cd:	cmp	edi, eax
0x38cf:	mov	dword ptr [rip + 0x20d8af], edi
0x38d5:	jg	0x3910


0x37b0:	push	r12
0x37b2:	mov	r9d, dword ptr [rip + 0x20d9f7]
0x37b9:	lea	rcx, [rip + 0x8711]
0x37c0:	push	rbp
0x37c1:	mov	r8d, dword ptr [rip + 0x20d848]
0x37c8:	mov	rbp, rdi
0x37cb:	mov	rdi, qword ptr [rip + 0x20d9ce]
0x37d2:	push	rbx
0x37d3:	mov	rdx, -1
0x37da:	xor	eax, eax
0x37dc:	mov	esi, 1
0x37e1:	call	0x1fa0


0x3720:	cmp	byte ptr [rip + 0x20dad8], 0
0x3727:	jne	0x3790


0x3590:	push	r13
0x3592:	push	r12
0x3594:	mov	r13, rdi
0x3597:	push	rbp
0x3598:	push	rbx
0x3599:	sub	rsp, 8
0x359d:	movsxd	r12, dword ptr [rdi + 0x28]
0x35a1:	mov	rbp, qword ptr [rip + 0x20dc78]
0x35a8:	mov	byte ptr [rip + 0x20dbd1], 1
0x35af:	lea	eax, [r12 + 1]
0x35b4:	mov	dword ptr [rdi + 0x28], eax
0x35b7:	mov	rax, qword ptr [rip + 0x20dc4a]
0x35be:	movsxd	rbx, dword ptr [rax + r12*4]
0x35c2:	movsxd	rax, dword ptr [rax + r12*4 + 4]
0x35c7:	add	rbx, rbp
0x35ca:	add	rbp, rax
0x35cd:	cmp	byte ptr [rip + 0x20dc24], 0
0x35d4:	jne	0x36c8


0x34e0:	push	rbp
0x34e1:	push	rbx
0x34e2:	mov	ebx, edi
0x34e4:	sub	rsp, 8
0x34e8:	cmp	byte ptr [rip + 0x20dcf5], 0
0x34ef:	je	0x3520


0x32d0:	push	r12
0x32d2:	push	rbp
0x32d3:	mov	ebp, edi
0x32d5:	push	rbx
0x32d6:	sub	rsp, 0x10
0x32da:	mov	rbx, qword ptr [rip + 0x20de67]
0x32e1:	mov	ecx, dword ptr [rip + 0x20dd55]
0x32e7:	mov	rax, qword ptr fs:[0x28]
0x32f0:	mov	qword ptr [rsp + 8], rax
0x32f5:	xor	eax, eax
0x32f7:	cmp	byte ptr [rip + 0x20dd42], dil
0x32fe:	je	0x3365


0x31a0:	push	rbp
0x31a1:	push	rbx
0x31a2:	sub	rsp, 0x128
0x31a9:	mov	edi, dword ptr [rip + 0x20e02d]
0x31af:	mov	dword ptr [rip + 0x20e01f], 0
0x31b9:	mov	rax, qword ptr fs:[0x28]
0x31c2:	mov	qword ptr [rsp + 0x118], rax
0x31ca:	xor	eax, eax
0x31cc:	call	0x2f50


0x3090:	mov	edx, dword ptr [rip + 0x20e0f2]
0x3096:	mov	eax, dword ptr [rip + 0x20e144]
0x309c:	test	edx, edx
0x309e:	jle	0x3190


0x2fc0:	push	r12
0x2fc2:	mov	r12d, dword ptr [rip + 0x20e217]
0x2fc9:	push	rbp
0x2fca:	mov	ebp, dword ptr [rip + 0x20e208]
0x2fd0:	push	rbx
0x2fd1:	add	r12d, ebp
0x2fd4:	mov	eax, r12d
0x2fd7:	sub	eax, ebp
0x2fd9:	cmp	eax, 1
0x2fdc:	jle	0x3024


0x2f50:	push	rbp
0x2f51:	push	rbx
0x2f52:	mov	ebp, edi
0x2f54:	sub	rsp, 8
0x2f58:	cmp	byte ptr [rip + 0x20e285], 0
0x2f5f:	mov	ebx, dword ptr [rip + 0x20e273]
0x2f65:	jne	0x2fa0


0x2d30:	push	r15
0x2d32:	push	r14
0x2d34:	mov	ecx, 2
0x2d39:	push	r13
0x2d3b:	push	r12
0x2d3d:	mov	r12d, esi
0x2d40:	push	rbp
0x2d41:	push	rbx
0x2d42:	mov	rbx, rdi
0x2d45:	lea	rdi, [rip + 0xb7fd]
0x2d4c:	mov	rsi, rbx
0x2d4f:	sub	rsp, 0x108
0x2d56:	mov	rax, qword ptr fs:[0x28]
0x2d5f:	mov	qword ptr [rsp + 0xf8], rax
0x2d67:	xor	eax, eax
0x2d69:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2ce0:	push	rbx
0x2ce1:	lea	rsi, [rip + 0x918d]
0x2ce8:	mov	rbx, rdi
0x2ceb:	mov	edx, 5
0x2cf0:	xor	edi, edi
0x2cf2:	call	0x1c80


0x2cb0:	push	rbx
0x2cb1:	mov	rbx, rdi
0x2cb4:	call	0x1ca0


0x2b80:	push	r14
0x2b82:	push	r13
0x2b84:	lea	r8, [rip + 0x935a]
0x2b8b:	push	r12
0x2b8d:	push	rbp
0x2b8e:	mov	r14d, edi
0x2b91:	push	rbx
0x2b92:	mov	rbx, rdx
0x2b95:	mov	r13d, esi
0x2b98:	mov	edx, 0xa
0x2b9d:	mov	rdi, rbx
0x2ba0:	sub	rsp, 0x20
0x2ba4:	lea	rcx, [rsp + 8]
0x2ba9:	mov	r12, rsp
0x2bac:	mov	qword ptr [rsp + 0x10], -1
0x2bb5:	mov	rsi, r12
0x2bb8:	mov	rax, qword ptr fs:[0x28]
0x2bc1:	mov	qword ptr [rsp + 0x18], rax
0x2bc6:	xor	eax, eax
0x2bc8:	call	0xaf20


0x2b50:	lea	rsi, [rip + 0x930d]
0x2b57:	mov	edx, 5
0x2b5c:	xor	edi, edi
0x2b5e:	sub	rsp, 8
0x2b62:	call	0x1c80


0x2b00:	mov	ecx, dword ptr [rip + 0x20e712]
0x2b06:	push	rbx
0x2b07:	mov	ebx, edi
0x2b09:	cmp	rcx, qword ptr [rip + 0x20e700]
0x2b10:	mov	rax, qword ptr [rip + 0x20e709]
0x2b17:	mov	rdx, rcx
0x2b1a:	jb	0x2b3b


0x2a80:	mov	edx, dword ptr [rip + 0x20e5aa]
0x2a86:	mov	rdi, qword ptr [rip + 0x20e79b]
0x2a8d:	test	edx, edx
0x2a8f:	je	0x2ad1


0x2a20:	mov	eax, dword ptr [rip + 0x20e60a]
0x2a26:	mov	rcx, qword ptr [rip + 0x20e7fb]
0x2a2d:	test	eax, eax
0x2a2f:	je	0x2a76


0x2a10:	push	rbp
0x2a11:	mov	rbp, rsp
0x2a14:	pop	rbp
0x2a15:	jmp	0x2980


0x29d0:	cmp	byte ptr [rip + 0x20e751], 0
0x29d7:	jne	0x2a08


0x2980:	lea	rdi, [rip + 0x20e759]
0x2987:	lea	rsi, [rip + 0x20e752]
0x298e:	push	rbp
0x298f:	sub	rsi, rdi
0x2992:	mov	rbp, rsp
0x2995:	sar	rsi, 3
0x2999:	mov	rax, rsi
0x299c:	shr	rax, 0x3f
0x29a0:	add	rsi, rax
0x29a3:	sar	rsi, 1
0x29a6:	je	0x29c0


0x2940:	lea	rdi, [rip + 0x20e799]
0x2947:	push	rbp
0x2948:	lea	rax, [rip + 0x20e791]
0x294f:	cmp	rax, rdi
0x2952:	mov	rbp, rsp
0x2955:	je	0x2970


0x2910:	xor	ebp, ebp
0x2912:	mov	r9, rdx
0x2915:	pop	rsi
0x2916:	mov	rdx, rsp
0x2919:	and	rsp, 0xfffffffffffffff0
0x291d:	push	rax
0x291e:	push	rsp
0x291f:	lea	r8, [rip + 0x94fa]
0x2926:	lea	rcx, [rip + 0x9483]
0x292d:	lea	rdi, [rip - 0x974]
0x2934:	call	qword ptr [rip + 0x20e696]


0x1fc0:	push	r15
0x1fc2:	push	r14
0x1fc4:	push	r13
0x1fc6:	push	r12
0x1fc8:	mov	r12d, edi
0x1fcb:	push	rbp
0x1fcc:	push	rbx
0x1fcd:	mov	r13, rsi
0x1fd0:	sub	rsp, 0x58
0x1fd4:	mov	rdi, qword ptr [rsi]
0x1fd7:	mov	rax, qword ptr fs:[0x28]
0x1fe0:	mov	qword ptr [rsp + 0x48], rax
0x1fe5:	xor	eax, eax
0x1fe7:	mov	qword ptr [rsp + 0x40], 0
0x1ff0:	call	0x79b0


0x1b30:	sub	rsp, 8
0x1b34:	mov	rax, qword ptr [rip + 0x20f49d]
0x1b3b:	test	rax, rax
0x1b3e:	je	0x1b42


0x1f20:	jmp	qword ptr [rip + 0x20f05a]


0x1e30:	jmp	qword ptr [rip + 0x20f0d2]


0x1bf0:	jmp	qword ptr [rip + 0x20f1f2]


0xbcc0:	mov	rdi, rsi
0xbcc3:	call	0x1ec0


0xbbc4:	mov	rbp, rdi
0xbbc7:	call	0xba00


0xbb70:	add	rsp, 8
0xbb74:	mov	rdi, rbp
0xbb77:	mov	rsi, rdx
0xbb7a:	pop	rbx
0xbb7b:	pop	rbp
0xbb7c:	pop	r12
0xbb7e:	pop	r13
0xbb80:	jmp	0x1d10


0xbb02:	mov	r13, rdx
0xbb05:	mov	rbx, rdi
0xbb08:	call	0xba00


0xbaeb:	ret	


0xbae6:	jmp	0xb7a0


0x1b80:	jmp	qword ptr [rip + 0x20f22a]


0xb970:	add	rsp, 8
0xb974:	pop	rbx
0xb975:	pop	rbp
0xb976:	pop	r12
0xb978:	pop	r13
0xb97a:	pop	r14
0xb97c:	pop	r15
0xb97e:	ret	


0xb8e0:	cmp	rsi, rbp
0xb8e3:	mov	r12, rdi
0xb8e6:	mov	r13, rsi
0xb8e9:	ja	0xb8f4


0xb898:	mov	edi, 0x80
0xb89d:	call	0x1e10


0xb839:	mov	r12, rdi
0xb83c:	call	0x1ca0


0x1bb0:	jmp	qword ptr [rip + 0x20f212]


0xb7c8:	ret	


0xb7a5:	push	rbx
0xb7a6:	nop	word ptr cs:[rax + rax]
0xb7b0:	mov	rbx, qword ptr [rdi]
0xb7b3:	call	0x1b90


0xb790:	lea	rdi, [rip + 0x883]
0xb797:	jmp	0x1f10


0xb775:	mov	rsi, rdi
0xb778:	lea	rdi, [rip + 0x89b]
0xb77f:	mov	edx, 1
0xb784:	jmp	0x1c30


0x1cd0:	jmp	qword ptr [rip + 0x20f182]


0xb690:	mov	rax, qword ptr [rdi + 0x20]
0xb694:	cmp	qword ptr [rdi + 0x28], rax
0xb698:	jne	0xb68a


0xb68a:	jmp	0x1ef0


0xb65a:	mov	rdi, rbx
0xb65d:	pop	rbx
0xb65e:	jmp	0x1e20


0xb649:	call	0x1e70


0xb612:	mov	rax, qword ptr [rsp + 0x10]
0xb617:	xor	esi, esi
0xb619:	mov	edx, dword ptr [rax + 0x10]
0xb61c:	xor	eax, eax
0xb61e:	call	0x1c10


0xb411:	cmp	esi, 0x406
0xb417:	jne	0xb460


0x1df0:	jmp	qword ptr [rip + 0x20f0f2]


0xaf47:	lea	rax, [rsp + 0x10]
0xaf4c:	mov	r15, rsi
0xaf4f:	test	rsi, rsi
0xaf52:	mov	rbp, rdi
0xaf55:	mov	dword ptr [rsp + 8], edx
0xaf59:	mov	r14, rcx
0xaf5c:	mov	r13, r8
0xaf5f:	cmove	r15, rax
0xaf63:	call	0x1bb0


0xb2a5:	lea	rcx, [rip + 0x33a4]
0xb2ac:	lea	rsi, [rip + 0x304d]
0xb2b3:	lea	rdi, [rip + 0x3066]
0xb2ba:	mov	edx, 0x54
0xb2bf:	call	0x1d30


0xae9b:	cmp	edi, 2
0xae9e:	jae	0xaeeb


0xaef4:	cmp	edi, 4
0xaef7:	lea	rsi, [rip + 0x3612]
0xaefe:	je	0xaeac


0xa7d7:	lea	rax, [rsp + 0x10]
0xa7dc:	test	rsi, rsi
0xa7df:	mov	rbx, rsi
0xa7e2:	mov	r12, rdi
0xa7e5:	mov	ebp, edx
0xa7e7:	mov	r14, rcx
0xa7ea:	cmove	rbx, rax
0xa7ee:	mov	r15, r8
0xa7f1:	call	0x1bb0


0xae3f:	lea	rcx, [rip + 0x36c2]
0xae46:	lea	rsi, [rip + 0x34b3]
0xae4d:	lea	rdi, [rip + 0x34cc]
0xae54:	mov	edx, 0x54
0xae59:	call	0x1d30


0xa117:	lea	rax, [rsp + 0x10]
0xa11c:	test	rsi, rsi
0xa11f:	mov	rbx, rsi
0xa122:	mov	r12, rdi
0xa125:	mov	ebp, edx
0xa127:	mov	r14, rcx
0xa12a:	cmove	rbx, rax
0xa12e:	mov	r15, r8
0xa131:	call	0x1bb0


0xa77f:	lea	rcx, [rip + 0x3c9a]
0xa786:	lea	rsi, [rip + 0x3b73]
0xa78d:	lea	rdi, [rip + 0x3b8c]
0xa794:	mov	edx, 0x54
0xa799:	call	0x1d30


0x1c80:	jmp	qword ptr [rip + 0x20f1aa]


0x1ca0:	jmp	qword ptr [rip + 0x20f19a]


0x9f09:	call	0x9f60


0x9ef2:	movzx	edx, dl
0x9ef5:	test	rdx, rdx
0x9ef8:	jne	0x9f09


0x9ea0:	test	rax, rax
0x9ea3:	mov	edx, 0x80
0x9ea8:	cmove	rax, rdx
0x9eac:	test	rax, rax
0x9eaf:	jns	0x9e92


0x9e78:	movabs	rdx, 0x5555555555555553
0x9e82:	cmp	rax, rdx
0x9e85:	ja	0x9eb1


0x9e20:	test	rcx, rcx
0x9e23:	je	0x9e48


0x9deb:	xor	edx, edx
0x9ded:	movabs	rax, 0x5555555555555554
0x9df7:	div	r9
0x9dfa:	cmp	rax, rcx
0x9dfd:	jbe	0x9e3b


0x9dcb:	sub	rsp, 8
0x9dcf:	call	0x9f60


0x9dc1:	movzx	eax, al
0x9dc4:	test	rax, rax
0x9dc7:	jne	0x9dcb


0x9d79:	test	rdi, rdi
0x9d7c:	jne	0x9d98


0x9d7e:	mov	rsi, rbx
0x9d81:	call	0x1e80


0x9d4b:	sub	rsp, 8
0x9d4f:	call	0x9f60


0x9d41:	movzx	eax, al
0x9d44:	test	rax, rax
0x9d47:	jne	0x9d4b


0x1e10:	jmp	qword ptr [rip + 0x20f0e2]


0x9c26:	mov	eax, r10d
0x9c29:	mov	r11d, 1
0x9c2f:	add	r10d, 8
0x9c33:	add	rax, rbp
0x9c36:	mov	rax, qword ptr [rax]
0x9c39:	test	rax, rax
0x9c3c:	mov	qword ptr [r8 + r9*8], rax
0x9c40:	je	0x9c4c


0x9c7c:	mov	rax, rbx
0x9c7f:	add	rbx, 8
0x9c83:	jmp	0x9c36


0x9b58:	mov	r11d, eax
0x9b5b:	add	r11, qword ptr [r10 + 0x10]
0x9b5f:	add	eax, 8
0x9b62:	mov	dword ptr [r10], eax
0x9b65:	mov	rax, qword ptr [r11]
0x9b68:	test	rax, rax
0x9b6b:	mov	qword ptr [r8 + r9*8], rax
0x9b6f:	je	0x9b7b


0x9b9a:	mov	r11, qword ptr [r10 + 8]
0x9b9e:	lea	rax, [r11 + 8]
0x9ba2:	mov	qword ptr [r10 + 8], rax
0x9ba6:	jmp	0x9b65


0x9b2b:	jmp	0x96f0


0x9828:	mov	r8, rcx
0x982b:	mov	rcx, rdx
0x982e:	lea	rdx, [rip + 0x475f]
0x9835:	mov	esi, 1
0x983a:	xor	eax, eax
0x983c:	call	0x1f50


0x9710:	mov	r8, rdx
0x9713:	lea	rdx, [rip + 0x486e]
0x971a:	mov	r9, rcx
0x971d:	xor	eax, eax
0x971f:	mov	rcx, rsi
0x9722:	mov	esi, 1
0x9727:	call	0x1f50


0x9607:	call	0x1ba0


0x95d5:	test	rdx, rdx
0x95d8:	je	0x9607


0x9574:	call	0x1ba0


0x950c:	mov	dword ptr [rsp], esi
0x950f:	mov	rcx, rsp
0x9512:	mov	rdx, -1
0x9519:	mov	rsi, rax
0x951c:	mov	qword ptr [rsp + 4], 0
0x9525:	mov	qword ptr [rsp + 0xc], 0x4000000
0x952e:	mov	qword ptr [rsp + 0x14], 0
0x9537:	mov	qword ptr [rsp + 0x1c], 0
0x9540:	mov	qword ptr [rsp + 0x24], 0
0x9549:	mov	qword ptr [rsp + 0x2c], 0
0x9552:	mov	dword ptr [rsp + 0x34], 0
0x955a:	call	0x8d80


0x93e0:	call	0x1ba0


0x937f:	mov	dword ptr [rsp], esi
0x9382:	mov	rcx, rsp
0x9385:	mov	rsi, rax
0x9388:	mov	qword ptr [rsp + 4], 0
0x9391:	mov	qword ptr [rsp + 0xc], 0
0x939a:	mov	qword ptr [rsp + 0x14], 0
0x93a3:	mov	qword ptr [rsp + 0x1c], 0
0x93ac:	mov	qword ptr [rsp + 0x24], 0
0x93b5:	mov	qword ptr [rsp + 0x2c], 0
0x93be:	mov	dword ptr [rsp + 0x34], 0
0x93c6:	call	0x8d80


0x9354:	call	0x1ba0


0x92ec:	mov	dword ptr [rsp], esi
0x92ef:	mov	rcx, rsp
0x92f2:	mov	rdx, -1
0x92f9:	mov	rsi, rax
0x92fc:	mov	qword ptr [rsp + 4], 0
0x9305:	mov	qword ptr [rsp + 0xc], 0
0x930e:	mov	qword ptr [rsp + 0x14], 0
0x9317:	mov	qword ptr [rsp + 0x1c], 0
0x9320:	mov	qword ptr [rsp + 0x24], 0
0x9329:	mov	qword ptr [rsp + 0x2c], 0
0x9332:	mov	dword ptr [rsp + 0x34], 0
0x933a:	call	0x8d80


0x9201:	mov	rdi, qword ptr [r12 + 8]
0x9206:	lea	rbx, [rip + 0x208053]
0x920d:	cmp	rdi, rbx
0x9210:	je	0x9229


0x91d6:	sub	eax, 2
0x91d9:	lea	rbx, [r12 + 0x18]
0x91de:	shl	rax, 4
0x91e2:	lea	rbp, [r12 + rax + 0x28]
0x91e7:	nop	word ptr [rax + rax]
0x91f0:	mov	rdi, qword ptr [rbx]
0x91f3:	add	rbx, 0x10
0x91f7:	call	0x1b90


0x9037:	sub	rsp, 8
0x903b:	call	0x1ba0


0x9029:	test	rdx, rdx
0x902c:	je	0x9037


0x1c90:	jmp	qword ptr [rip + 0x20f1a2]


0x7a2d:	mov	rcx, qword ptr [rip + 0x2096ec]
0x7a34:	lea	rdi, [rip + 0x6025]
0x7a3b:	mov	edx, 0x37
0x7a40:	mov	esi, 1
0x7a45:	call	0x1f40


0x79b6:	mov	esi, 0x2f
0x79bb:	mov	rbx, rdi
0x79be:	call	0x1d00


0x6010:	test	r15d, r15d
0x6013:	mov	eax, 0xc
0x6018:	cmove	r15d, eax
0x601c:	jmp	0x5f27


0x5f23:	sub	r15d, 0xc
0x5f27:	movzx	eax, byte ptr [r11]
0x5f2b:	xor	r14d, r14d
0x5f2e:	test	al, al
0x5f30:	je	0x5fec


0x5e89:	mov	rax, rbp
0x5e8c:	pop	rbx
0x5e8d:	pop	rbp
0x5e8e:	pop	r12
0x5e90:	ret	


0x5e5c:	mov	r12, rsi
0x5e5f:	lea	rbx, [rdx - 1]
0x5e63:	call	0x1b60


0x5e39:	mov	rax, rbp
0x5e3c:	pop	rbx
0x5e3d:	pop	rbp
0x5e3e:	pop	r12
0x5e40:	ret	


0x5e0c:	mov	r12, rsi
0x5e0f:	lea	rbx, [rdx - 1]
0x5e13:	call	0x1f80


0x5bd3:	mov	rax, rdi
0x5bd6:	lea	rsi, [rcx - 1]
0x5bda:	imul	r9
0x5bdd:	mov	rax, rdi
0x5be0:	sar	rax, 0x3f
0x5be4:	sar	rdx, 2
0x5be8:	sub	rdx, rax
0x5beb:	lea	rax, [rdx + rdx*4]
0x5bef:	lea	eax, [r8 + rax*2]
0x5bf3:	sub	eax, edi
0x5bf5:	test	rdx, rdx
0x5bf8:	mov	rdi, rdx
0x5bfb:	mov	byte ptr [rcx - 1], al
0x5bfe:	jne	0x5bd0


0x1ea0:	jmp	qword ptr [rip + 0x20f09a]


0x1c20:	jmp	qword ptr [rip + 0x20f1da]


0x1f00:	jmp	qword ptr [rip + 0x20f06a]


0x5a00:	ret	


0x59e5:	push	rbx
0x59e6:	mov	ebx, esi
0x59e8:	call	0x1df0


0x1d70:	jmp	qword ptr [rip + 0x20f132]


0x5848:	test	al, al
0x584a:	jne	0x5870


0x583e:	mov	byte ptr [rdx], al
0x5840:	movzx	eax, byte ptr [rdi + 1]
0x5844:	add	rbx, 1
0x5848:	test	al, al
0x584a:	jne	0x5870


0x52fd:	lea	rsi, [rip + 0x6e7c]
0x5304:	xor	edi, edi
0x5306:	call	0x1c80


0x52cf:	lea	rsi, [rip + 0x6e82]
0x52d6:	xor	edi, edi
0x52d8:	call	0x1c80


0x4573:	mov	byte ptr [rip + 0x20cad3], 0
0x457a:	mov	byte ptr [rip + 0x20cc79], 1
0x4581:	mov	dword ptr [rip + 0x20cc69], edx
0x4587:	jmp	0x4318


0x430b:	cmp	byte ptr [rip + 0x20cd3b], 0
0x4312:	je	0x4581


0x41fb:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x41fd:	seta	al
0x4200:	sbb	al, 0
0x4202:	test	al, al
0x4204:	jne	0x4260


0x3d6c:	lea	rdx, [rax + 1]
0x3d70:	mov	qword ptr [rdi + 8], rdx
0x3d74:	movzx	ebp, byte ptr [rax]
0x3d77:	cmp	ebp, 0xc
0x3d7a:	mov	r13d, dword ptr [rip + 0x20d453]
0x3d81:	je	0x3fa0


0x4120:	call	0x1b70


0x3caa:	mov	rax, qword ptr [rbx + 8]
0x3cae:	cmp	rax, qword ptr [rbx + 0x10]
0x3cb2:	jb	0x3c90


0x3a51:	lea	rdx, [rax + 1]
0x3a55:	mov	qword ptr [rbx + 8], rdx
0x3a59:	movzx	eax, byte ptr [rax]
0x3a5c:	cmp	eax, 0xc
0x3a5f:	je	0x3af0


0x3c10:	mov	rdi, rbx
0x3c13:	call	0x1b70


0x3940:	call	0x1df0


0x3a00:	mov	rdx, qword ptr [rbx + 8]
0x3a04:	mov	esi, 3
0x3a09:	xor	edi, edi
0x3a0b:	call	0x94f0


0x38d7:	cmp	byte ptr [rip + 0x20d8b2], 0
0x38de:	jne	0x3900


0x3910:	sub	edi, eax
0x3912:	call	0x2f50


0x1fa0:	jmp	qword ptr [rip + 0x20f01a]


0x3729:	mov	edx, dword ptr [rip + 0x20d901]
0x372f:	mov	rdi, qword ptr [rip + 0x20daf2]
0x3736:	test	edx, edx
0x3738:	je	0x377a


0x3790:	mov	dword ptr [rdi], 2
0x3796:	sub	dword ptr [rip + 0x20da23], 1
0x379d:	mov	dword ptr [rsi], 0
0x37a3:	ret	


0x35da:	cmp	dword ptr [r13 + 0x10], 1
0x35df:	je	0x3670


0x36c8:	call	0x31a0


0x3520:	mov	rdi, qword ptr [rip + 0x20dbc1]
0x3527:	mov	rax, qword ptr [rdi + 0x28]
0x352b:	cmp	rax, qword ptr [rdi + 0x30]
0x352f:	jae	0x3580


0x34f1:	cmp	dil, 0x20
0x34f5:	mov	eax, dword ptr [rip + 0x20dce5]
0x34fb:	je	0x3570


0x3365:	mov	esi, dword ptr [rip + 0x20de69]
0x336b:	mov	eax, esi
0x336d:	cdq	
0x336e:	idiv	ecx
0x3370:	sub	ecx, edx
0x3372:	cmp	byte ptr [rip + 0x20de6c], 0
0x3379:	mov	edx, ecx
0x337b:	jne	0x33b8


0x3300:	cmp	dil, 9
0x3304:	je	0x3360


0x3190:	test	eax, eax
0x3192:	jg	0x3196


0x30a4:	push	r14
0x30a6:	push	r13
0x30a8:	xor	r13d, r13d
0x30ab:	push	r12
0x30ad:	mov	r12, qword ptr [rip + 0x20df9c]
0x30b4:	push	rbp
0x30b5:	mov	ebp, dword ptr [rip + 0x20e0d1]
0x30bb:	push	rbx
0x30bc:	nop	dword ptr [rax]
0x30c0:	lea	r14d, [rbp + r12]
0x30c5:	mov	rbx, r12
0x30c8:	mov	edx, r14d
0x30cb:	sub	edx, ebx
0x30cd:	test	edx, edx
0x30cf:	jle	0x3121


0x3024:	add	ebp, 1
0x3027:	cmp	r12d, ebp
0x302a:	jl	0x3050


0x2f67:	add	ebx, 1
0x2f6a:	cmp	ebx, ebp
0x2f6c:	jg	0x2f91


0x2fa0:	sub	ebp, ebx
0x2fa2:	mov	dword ptr [rip + 0x20e238], ebp
0x2fa8:	add	rsp, 8
0x2fac:	pop	rbx
0x2fad:	pop	rbp
0x2fae:	ret	


0x2d69:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2d6b:	seta	al
0x2d6e:	sbb	al, 0
0x2d70:	test	al, al
0x2d72:	je	0x2e98


0x2b3b:	add	edx, 1
0x2b3e:	mov	byte ptr [rax + rcx], bl
0x2b41:	mov	dword ptr [rip + 0x20e6d1], edx
0x2b47:	pop	rbx
0x2b48:	ret	


0x2b1c:	lea	rsi, [rip + 0x20e6ed]
0x2b23:	mov	rdi, rax
0x2b26:	call	0x9e70


0x2ad1:	cmp	byte ptr [rip + 0x20e574], 0
0x2ad8:	je	0x2ae9


0x2a91:	sub	edx, 1
0x2a94:	mov	ecx, dword ptr [rip + 0x20e726]
0x2a9a:	lea	rax, [rdi + 0x10]
0x2a9e:	shl	rdx, 6
0x2aa2:	xor	esi, esi
0x2aa4:	lea	rdx, [rdi + rdx + 0x50]
0x2aa9:	nop	dword ptr [rax]
0x2ab0:	cmp	dword ptr [rax], 2
0x2ab3:	jne	0x2ac3


0x2a76:	ret	


0x2a31:	movzx	esi, byte ptr [rip + 0x20e614]
0x2a38:	sub	eax, 1
0x2a3b:	lea	rdx, [rcx + 0x10]
0x2a3f:	shl	rax, 6
0x2a43:	lea	rcx, [rcx + rax + 0x50]
0x2a48:	xor	eax, eax
0x2a4a:	nop	word ptr [rax + rax]
0x2a50:	cmp	dword ptr [rdx], 1
0x2a53:	jbe	0x2a6a


0x29d9:	cmp	qword ptr [rip + 0x20e607], 0
0x29e1:	push	rbp
0x29e2:	mov	rbp, rsp
0x29e5:	je	0x29f3


0x2a08:	ret	


0x29c0:	pop	rbp
0x29c1:	ret	


0x29a8:	mov	rax, qword ptr [rip + 0x20e631]
0x29af:	test	rax, rax
0x29b2:	je	0x29c0


0x2970:	pop	rbp
0x2971:	ret	


0x2957:	mov	rax, qword ptr [rip + 0x20e66a]
0x295e:	test	rax, rax
0x2961:	je	0x2970




0x1b42:	add	rsp, 8
0x1b46:	ret	


0x1b40:	call	rax








0x1ec0:	jmp	qword ptr [rip + 0x20f08a]


0x1d10:	jmp	qword ptr [rip + 0x20f162]




0xb8eb:	lea	rdx, [rsi + 0x38]
0xb8ef:	cmp	rbp, rdx
0xb8f2:	jb	0xb970


0xb8f4:	cmp	byte ptr [rbp], 0
0xb8f8:	lea	rbx, [r12 + 9]
0xb8fd:	je	0xb960




0x1b90:	jmp	qword ptr [rip + 0x20f222]


0x1f10:	jmp	qword ptr [rip + 0x20f062]


0x1c30:	jmp	qword ptr [rip + 0x20f1d2]




0xb69a:	cmp	qword ptr [rdi + 0x48], 0
0xb69f:	jne	0xb68a


0x1ef0:	jmp	qword ptr [rip + 0x20f072]


0x1e20:	jmp	qword ptr [rip + 0x20f0da]


0x1e70:	jmp	qword ptr [rip + 0x20f0b2]


0x1c10:	jmp	qword ptr [rip + 0x20f1e2]


0xb419:	mov	rax, qword ptr [rsp + 0x10]
0xb41e:	cmp	dword ptr [rip + 0x205f73], 0
0xb425:	mov	dword ptr [rsp], 0x18
0xb42c:	mov	r12d, dword ptr [rax + 0x10]
0xb430:	mov	edx, r12d
0xb433:	js	0xb563


0xb460:	cmp	esi, 0xb
0xb463:	je	0xb490




0x1d30:	jmp	qword ptr [rip + 0x20f152]


0xaea0:	sub	edi, 1
0xaea3:	lea	rsi, [rip + 0x3681]
0xaeaa:	jne	0xaee6


0xaeeb:	lea	rsi, [rip + 0x365e]
0xaef2:	jmp	0xaeac


0xaeac:	test	r10d, r10d
0xaeaf:	movsxd	rax, r10d
0xaeb2:	js	0xaf02


0xaf00:	jmp	0xaee6






0x9efa:	call	0x1da0


0x9eb1:	sub	rsp, 8
0x9eb5:	call	0x9f60


0x9e92:	mov	qword ptr [rsi], rax
0x9e95:	mov	rsi, rax
0x9e98:	jmp	0x9d70


0x9e87:	mov	rdx, rax
0x9e8a:	shr	rdx, 1
0x9e8d:	lea	rax, [rdx + rax + 1]
0x9e92:	mov	qword ptr [rsi], rax
0x9e95:	mov	rsi, rax
0x9e98:	jmp	0x9d70


0x9e48:	xor	edx, edx
0x9e4a:	mov	eax, 0x80
0x9e4f:	xor	r8d, r8d
0x9e52:	div	r9
0x9e55:	test	rax, rax
0x9e58:	sete	r8b
0x9e5c:	lea	rcx, [r8 + rax]
0x9e60:	jmp	0x9e25


0x9e25:	mov	rax, rcx
0x9e28:	mul	r9
0x9e2b:	seto	dl
0x9e2e:	test	rax, rax
0x9e31:	movzx	edx, dl
0x9e34:	js	0x9e3b


0x9e3b:	sub	rsp, 8
0x9e3f:	call	0x9f60


0x9dff:	mov	rax, rcx
0x9e02:	shr	rax, 1
0x9e05:	lea	rcx, [rax + rcx + 1]
0x9e0a:	mov	qword ptr [rsi], rcx
0x9e0d:	imul	rcx, r9
0x9e11:	mov	rsi, rcx
0x9e14:	jmp	0x9d70


0x9dc9:	jmp	0x9d70


0x9d98:	call	0x1b90


0x1e80:	jmp	qword ptr [rip + 0x20f0aa]


0x9d49:	jmp	0x9d10




0x9c4c:	test	r11b, r11b
0x9c4f:	jne	0x9c75


0x9c42:	add	r9, 1
0x9c46:	cmp	r9, 0xa
0x9c4a:	jne	0x9c20


0x9c36:	mov	rax, qword ptr [rax]
0x9c39:	test	rax, rax
0x9c3c:	mov	qword ptr [r8 + r9*8], rax
0x9c40:	je	0x9c4c


0x9b7b:	call	0x96f0


0x9b71:	add	r9, 1
0x9b75:	cmp	r9, 0xa
0x9b79:	jne	0x9b50


0x9b65:	mov	rax, qword ptr [r11]
0x9b68:	test	rax, rax
0x9b6b:	mov	qword ptr [r8 + r9*8], rax
0x9b6f:	je	0x9b7b


0x9b20:	add	r9, 1
0x9b24:	cmp	qword ptr [r8 + r9*8], 0
0x9b29:	jne	0x9b20


0x1f50:	jmp	qword ptr [rip + 0x20f042]


0x1ba0:	jmp	qword ptr [rip + 0x20f21a]


0x95da:	mov	qword ptr [rsp + 0x28], rsi
0x95df:	mov	qword ptr [rsp + 0x30], rdx
0x95e4:	mov	rcx, rsp
0x95e7:	mov	rdx, r8
0x95ea:	mov	rsi, r9
0x95ed:	call	0x8d80


0x9229:	lea	rbx, [rip + 0x207ea0]
0x9230:	cmp	r12, rbx
0x9233:	je	0x9244


0x9212:	call	0x1b90


0x902e:	mov	qword ptr [rdi + 0x28], rsi
0x9032:	mov	qword ptr [rdi + 0x30], rdx
0x9036:	ret	




0x1f40:	jmp	qword ptr [rip + 0x20f04a]


0x1d00:	jmp	qword ptr [rip + 0x20f16a]


0x5f27:	movzx	eax, byte ptr [r11]
0x5f2b:	xor	r14d, r14d
0x5f2e:	test	al, al
0x5f30:	je	0x5fec


0x5fec:	test	rbp, rbp
0x5fef:	je	0x5f6f


0x5f36:	mov	dword ptr [rsp + 0x68], r15d
0x5f3b:	mov	rbx, r11
0x5f3e:	cmp	al, 0x25
0x5f40:	je	0x6028


0x1b60:	jmp	qword ptr [rip + 0x20f23a]


0x1f80:	jmp	qword ptr [rip + 0x20f02a]


0x5c00:	sub	rcx, 2
0x5c04:	mov	byte ptr [rsi - 1], 0x2d
0x5c08:	mov	rax, rcx
0x5c0b:	ret	


0x5bd0:	mov	rcx, rsi
0x5bd3:	mov	rax, rdi
0x5bd6:	lea	rsi, [rcx - 1]
0x5bda:	imul	r9
0x5bdd:	mov	rax, rdi
0x5be0:	sar	rax, 0x3f
0x5be4:	sar	rdx, 2
0x5be8:	sub	rdx, rax
0x5beb:	lea	rax, [rdx + rdx*4]
0x5bef:	lea	eax, [r8 + rax*2]
0x5bf3:	sub	eax, edi
0x5bf5:	test	rdx, rdx
0x5bf8:	mov	rdi, rdx
0x5bfb:	mov	byte ptr [rcx - 1], al
0x5bfe:	jne	0x5bd0


0x5bc6:	mov	rax, rcx
0x5bc9:	ret	


0x5ba0:	mov	rax, rdi
0x5ba3:	sub	rcx, 1
0x5ba7:	mul	rsi
0x5baa:	shr	rdx, 3
0x5bae:	lea	rax, [rdx + rdx*4]
0x5bb2:	add	rax, rax
0x5bb5:	sub	rdi, rax
0x5bb8:	add	edi, 0x30
0x5bbb:	test	rdx, rdx
0x5bbe:	mov	byte ptr [rcx], dil
0x5bc1:	mov	rdi, rdx
0x5bc4:	jne	0x5ba0










0x584c:	mov	rax, qword ptr [rsp + 8]
0x5851:	xor	rax, qword ptr fs:[0x28]
0x585a:	jne	0x58fa


0x5870:	lea	r8, [rip + 0x666e]
0x5877:	xor	esi, esi
0x5879:	mov	rcx, rsp
0x587c:	mov	edx, 0xa
0x5881:	mov	rdi, rbx
0x5884:	call	0xa7b0


0x4318:	cmp	byte ptr [rip + 0x20ce79], 0
0x431f:	je	0x4336


0x4581:	mov	dword ptr [rip + 0x20cc69], edx
0x4587:	jmp	0x4318


0x4206:	lea	rsi, [rip + 0x7cc8]
0x420d:	xor	edi, edi
0x420f:	mov	edx, 5
0x4214:	call	0x1c80


0x4260:	lea	rsi, [rip + 0x7e46]
0x4267:	mov	rdi, rbp
0x426a:	mov	qword ptr [rbx + 8], rbp
0x426e:	call	0x5a10


0x3fa0:	cmp	byte ptr [rbx + 0x39], 0
0x3fa4:	mov	rdi, qword ptr [rbx]
0x3fa7:	mov	rax, qword ptr [rdi + 8]
0x3fab:	mov	rdx, qword ptr [rdi + 0x10]
0x3faf:	je	0x3ffb


0x3d87:	cmp	ebp, 0xa
0x3d8a:	mov	byte ptr [rbx + 0x39], 0
0x3d8e:	je	0x3dae


0x1b70:	jmp	qword ptr [rip + 0x20f232]


0x3c90:	lea	rdx, [rax + 1]
0x3c94:	mov	qword ptr [rbx + 8], rdx
0x3c98:	movzx	eax, byte ptr [rax]
0x3c9b:	cmp	eax, 0xa
0x3c9e:	je	0x3cc1


0x3cb4:	mov	rdi, rbx
0x3cb7:	call	0x1b70


0x3af0:	cmp	byte ptr [r13 + 0x39], 0
0x3af5:	je	0x3bd0


0x3a65:	mov	byte ptr [r13 + 0x39], 0
0x3a6a:	xor	ebp, ebp
0x3a6c:	cmp	byte ptr [rip + 0x20d6cd], 0
0x3a73:	jne	0x3ae8


0x38e0:	cmp	byte ptr [rbx + 0x38], 0
0x38e4:	jne	0x38f0


0x3900:	call	0x3090




0x377a:	mov	dword ptr [rsi], 0
0x3780:	sub	dword ptr [rip + 0x20da39], 1
0x3787:	ret	


0x373a:	sub	edx, 1
0x373d:	movzx	ecx, byte ptr [rip + 0x20d908]
0x3744:	lea	rax, [rdi + 0x10]
0x3748:	shl	rdx, 6
0x374c:	lea	rdx, [rdi + rdx + 0x50]
0x3751:	jmp	0x3767


0x3670:	mov	edx, dword ptr [rip + 0x20d9ba]
0x3676:	mov	rcx, qword ptr [rip + 0x20dbab]
0x367d:	test	edx, edx
0x367f:	jle	0x36a7


0x35e5:	mov	eax, dword ptr [rip + 0x20dba1]
0x35eb:	mov	edi, dword ptr [rip + 0x20db93]
0x35f1:	cmp	eax, edi
0x35f3:	jl	0x36e8


0x3531:	lea	rdx, [rax + 1]
0x3535:	mov	qword ptr [rdi + 0x28], rdx
0x3539:	mov	byte ptr [rax], bl
0x353b:	add	rsp, 8
0x353f:	pop	rbx
0x3540:	pop	rbp
0x3541:	ret	


0x3580:	add	rsp, 8
0x3584:	movzx	esi, bl
0x3587:	pop	rbx
0x3588:	pop	rbp
0x3589:	jmp	0x1cf0


0x3570:	add	eax, 1
0x3573:	mov	dword ptr [rip + 0x20dc67], eax
0x3579:	add	rsp, 8
0x357d:	pop	rbx
0x357e:	pop	rbp
0x357f:	ret	


0x34fd:	test	eax, eax
0x34ff:	movzx	ebp, dil
0x3503:	jg	0x3558


0x337d:	test	edx, edx
0x337f:	mov	byte ptr [rbx], bpl
0x3382:	mov	eax, 1
0x3387:	js	0x33e3


0x33b8:	test	ecx, ecx
0x33ba:	je	0x34d0


0x3360:	mov	ecx, 8
0x3365:	mov	esi, dword ptr [rip + 0x20de69]
0x336b:	mov	eax, esi
0x336d:	cdq	
0x336e:	idiv	ecx
0x3370:	sub	ecx, edx
0x3372:	cmp	byte ptr [rip + 0x20de6c], 0
0x3379:	mov	edx, ecx
0x337b:	jne	0x33b8


0x3306:	movzx	r12d, dil
0x330a:	call	0x1f90


0x3194:	ret	


0x3196:	jmp	0x2fc0


0x3121:	test	ebp, ebp
0x3123:	mov	edx, r13d
0x3126:	cmovns	edx, ebp
0x3129:	sub	ebp, 1
0x312c:	movsxd	rcx, edx
0x312f:	sub	ebp, edx
0x3131:	add	r12, rcx
0x3134:	test	eax, eax
0x3136:	jle	0x313d


0x30d1:	movzx	esi, byte ptr [rbx]
0x30d4:	add	rbx, 1
0x30d8:	cmp	sil, 0x20
0x30dc:	je	0x3160


0x3050:	pop	rbx
0x3051:	mov	dword ptr [rip + 0x20e180], r12d
0x3058:	mov	dword ptr [rip + 0x20e17e], 0
0x3062:	pop	rbp
0x3063:	pop	r12
0x3065:	ret	


0x302c:	mov	rdi, qword ptr [rip + 0x20e0b5]
0x3033:	mov	rax, qword ptr [rdi + 0x28]
0x3037:	cmp	rax, qword ptr [rdi + 0x30]
0x303b:	jae	0x3080


0x2ff5:	mov	rdi, qword ptr [rip + 0x20e0ec]
0x2ffc:	movzx	esi, byte ptr [rip + 0x20e035]
0x3003:	mov	rax, qword ptr [rdi + 0x28]
0x3007:	cmp	rax, qword ptr [rdi + 0x30]
0x300b:	jae	0x3070


0x2f6e:	mov	rdi, qword ptr [rip + 0x20e173]
0x2f75:	mov	rax, qword ptr [rdi + 0x28]
0x2f79:	cmp	rax, qword ptr [rdi + 0x30]
0x2f7d:	jae	0x2fb0


0x2f91:	mov	dword ptr [rip + 0x20e241], ebp
0x2f97:	add	rsp, 8
0x2f9b:	pop	rbx
0x2f9c:	pop	rbp
0x2f9d:	ret	


0x2e98:	cmp	qword ptr [rip + 0x20e290], 0
0x2ea0:	mov	r12d, 0xffffffff
0x2ea6:	jne	0x2d8f


0x2d78:	test	r12d, r12d
0x2d7b:	jns	0x2ec0


0x2ae9:	ret	


0x2ada:	xor	eax, eax
0x2adc:	cmp	dword ptr [rdi + 0x10], 3
0x2ae0:	setne	al
0x2ae3:	mov	dword ptr [rip + 0x20e6d7], eax
0x2ae9:	ret	


0x2ab5:	mov	dword ptr [rax], 0
0x2abb:	add	ecx, 1
0x2abe:	mov	esi, 1
0x2ac3:	add	rax, 0x40
0x2ac7:	cmp	rax, rdx
0x2aca:	jne	0x2ab0


0x2ac3:	add	rax, 0x40
0x2ac7:	cmp	rax, rdx
0x2aca:	jne	0x2ab0


0x2a6a:	add	eax, 1
0x2a6d:	add	rdx, 0x40
0x2a71:	cmp	rdx, rcx
0x2a74:	jne	0x2a50


0x2a55:	test	sil, sil
0x2a58:	je	0x2a6d


0x29f3:	call	0x2940


0x29e7:	mov	rdi, qword ptr [rip + 0x20e61a]
0x29ee:	call	0x1fb0


0x29b4:	pop	rbp
0x29b5:	jmp	rax


0x2963:	pop	rbp
0x2964:	jmp	rax






0xb960:	lea	rbx, [rip + 0x57e]
0xb967:	mov	qword ptr [r13 + 0x30], rbx
0xb96b:	mov	eax, 1
0xb970:	add	rsp, 8
0xb974:	pop	rbx
0xb975:	pop	rbp
0xb976:	pop	r12
0xb978:	pop	r13
0xb97a:	pop	r14
0xb97c:	pop	r15
0xb97e:	ret	








0xb6a1:	push	r12
0xb6a3:	push	rbp
0xb6a4:	mov	r12d, edx
0xb6a7:	push	rbx
0xb6a8:	mov	rbp, rsi
0xb6ab:	mov	rbx, rdi
0xb6ae:	call	0x1df0










0xb563:	xor	esi, esi
0xb565:	xor	eax, eax
0xb567:	call	0x1c10


0xb439:	xor	eax, eax
0xb43b:	mov	esi, 0x406
0xb440:	call	0x1c10


0xb490:	mov	edi, ebp
0xb492:	xor	eax, eax
0xb494:	call	0x1c10


0xb465:	jg	0xb4c0




0xaee6:	call	0x1ba0


0xaf02:	lea	rbx, [rip + 0x363f]
0xaf09:	mov	byte ptr [rsp + 6], dl
0xaf0d:	mov	byte ptr [rsp + 7], 0
0xaf12:	lea	r13, [rsp + 6]
0xaf17:	sub	rbx, rax
0xaf1a:	jmp	0xaec3


0xaeb4:	shl	rax, 5
0xaeb8:	lea	rbx, [rip + 0x3689]
0xaebf:	mov	r13, qword ptr [rcx + rax]
0xaec3:	mov	edx, 5
0xaec8:	xor	edi, edi
0xaeca:	call	0x1c80


0x1da0:	jmp	qword ptr [rip + 0x20f11a]


0x9e36:	test	rdx, rdx
0x9e39:	je	0x9e0a




0x9c51:	call	0x96f0


0x9c75:	mov	dword ptr [rsp + 8], r10d
0x9c7a:	jmp	0x9c51


0x9c20:	cmp	r10d, 0x2f
0x9c24:	ja	0x9c7c


0x9b50:	mov	eax, dword ptr [r10]
0x9b53:	cmp	eax, 0x2f
0x9b56:	ja	0x9b9a






0x9244:	pop	rbx
0x9245:	mov	dword ptr [rip + 0x207e69], 1
0x924f:	pop	rbp
0x9250:	pop	r12
0x9252:	ret	


0x9235:	mov	rdi, r12
0x9238:	call	0x1b90






0x5f6f:	mov	rbx, qword ptr [rsp + 0x4b8]
0x5f77:	xor	rbx, qword ptr fs:[0x28]
0x5f80:	mov	rax, r14
0x5f83:	jne	0x7935


0x5ff5:	cmp	qword ptr [rsp + 8], 0
0x5ffb:	je	0x5f6f


0x6028:	movzx	eax, byte ptr [rsp + 0x2b]
0x602d:	xor	r8d, r8d
0x6030:	xor	r15d, r15d
0x6033:	mov	edx, 1
0x6038:	mov	byte ptr [rsp + 0x30], al
0x603c:	add	rbx, 1
0x6040:	movsx	eax, byte ptr [rbx]
0x6043:	lea	ecx, [rax - 0x23]
0x6046:	mov	esi, eax
0x6048:	mov	r9d, eax
0x604b:	cmp	cl, 0x3c
0x604e:	ja	0x607c


0x5f46:	test	r10d, r10d
0x5f49:	mov	r12d, 0
0x5f4f:	mov	eax, 1
0x5f54:	cmovns	r12, r10
0x5f58:	test	r12, r12
0x5f5b:	cmove	r12, rax
0x5f5f:	mov	rax, qword ptr [rsp + 8]
0x5f64:	sub	rax, r14
0x5f67:	cmp	rax, r12
0x5f6a:	ja	0x5fa0






0x5860:	add	rsp, 0x10
0x5864:	pop	rbx
0x5865:	pop	rbp
0x5866:	pop	r12
0x5868:	ret	


0x58fa:	call	0x1cb0


0x4336:	test	r12d, r12d
0x4339:	jne	0x4557


0x4321:	mov	edx, dword ptr [rip + 0x20cec9]
0x4327:	mov	eax, edx
0x4329:	shr	eax, 0x1f
0x432c:	add	eax, edx
0x432e:	sar	eax, 1
0x4330:	mov	dword ptr [rip + 0x20ceba], eax
0x4336:	test	r12d, r12d
0x4339:	jne	0x4557


0x3ffb:	cmp	rax, rdx
0x3ffe:	jae	0x41a0


0x3fb1:	cmp	rdx, rax
0x3fb4:	jbe	0x41b0


0x3dae:	cmp	byte ptr [rip + 0x20d438], 0
0x3db5:	jne	0x3e78


0x3d90:	cmp	ebp, 0xc
0x3d93:	je	0x3ff0




0x3cc1:	add	rsp, 8
0x3cc5:	pop	rbx
0x3cc6:	pop	rbp
0x3cc7:	ret	


0x3ca0:	cmp	eax, 0xc
0x3ca3:	je	0x3cd0


0x3bd0:	movzx	ebp, byte ptr [rip + 0x20d569]
0x3bd7:	test	bpl, bpl
0x3bda:	mov	eax, ebp
0x3bdc:	je	0x3c20


0x3afb:	mov	rax, qword ptr [rbx + 8]
0x3aff:	cmp	rax, qword ptr [rbx + 0x10]
0x3b03:	jae	0x3c63


0x3a75:	cmp	eax, 0xa
0x3a78:	je	0x3aa6


0x3ae8:	mov	byte ptr [r13 + 0x39], 1
0x3aed:	jmp	0x3a75


0x38e6:	pop	rbx
0x38e7:	ret	


0x38f0:	lea	rdi, [rbx + 0x20]
0x38f4:	pop	rbx
0x38f5:	jmp	0x37b0


0x3767:	test	cl, cl
0x3769:	jne	0x3758


0x36a7:	mov	edx, dword ptr [rcx + 0x30]
0x36aa:	test	edx, edx
0x36ac:	jg	0x35e5


0x3681:	sub	edx, 1
0x3684:	lea	rax, [rcx + 0x10]
0x3688:	shl	rdx, 6
0x368c:	lea	rdx, [rcx + rdx + 0x50]
0x3691:	nop	dword ptr [rax]
0x3698:	mov	dword ptr [rax], 2
0x369e:	add	rax, 0x40
0x36a2:	cmp	rax, rdx
0x36a5:	jne	0x3698


0x36e8:	sub	edi, eax
0x36ea:	call	0x2f50


0x35f9:	cmp	byte ptr [rip + 0x20db90], 0
0x3600:	jne	0x36d8


0x1cf0:	jmp	qword ptr [rip + 0x20f172]


0x3505:	call	0x1f90


0x3558:	call	0x2fc0


0x33e3:	test	esi, esi
0x33e5:	je	0x3420


0x34d0:	xor	eax, eax
0x34d2:	jmp	0x3390


0x33c0:	lea	eax, [rcx - 1]
0x33c3:	lea	rax, [rbx + rax + 1]
0x33c8:	nop	dword ptr [rax + rax]
0x33d0:	add	rbx, 1
0x33d4:	mov	byte ptr [rbx - 1], 0x20
0x33d8:	cmp	rax, rbx
0x33db:	jne	0x33d0


0x1f90:	jmp	qword ptr [rip + 0x20f022]


0x313d:	mov	eax, dword ptr [rip + 0x20e045]
0x3143:	sub	eax, 1
0x3146:	test	eax, eax
0x3148:	mov	dword ptr [rip + 0x20e03a], eax
0x314e:	jle	0x3180


0x3138:	call	0x2fc0


0x3160:	add	eax, 1
0x3163:	mov	dword ptr [rip + 0x20e077], eax
0x3169:	jmp	0x30c8


0x30e2:	test	eax, eax
0x30e4:	jle	0x30ef


0x303d:	lea	rdx, [rax + 1]
0x3041:	add	ebp, 1
0x3044:	cmp	r12d, ebp
0x3047:	mov	qword ptr [rdi + 0x28], rdx
0x304b:	mov	byte ptr [rax], 0x20
0x304e:	jge	0x302c


0x3080:	mov	esi, 0x20
0x3085:	call	0x1cf0


0x300d:	lea	rdx, [rax + 1]
0x3011:	mov	ebp, ebx
0x3013:	mov	qword ptr [rdi + 0x28], rdx
0x3017:	mov	byte ptr [rax], sil
0x301a:	mov	eax, r12d
0x301d:	sub	eax, ebp
0x301f:	cmp	eax, 1
0x3022:	jg	0x2fe0


0x3070:	call	0x1cf0


0x2f7f:	lea	rdx, [rax + 1]
0x2f83:	add	ebx, 1
0x2f86:	cmp	ebx, ebp
0x2f88:	mov	qword ptr [rdi + 0x28], rdx
0x2f8c:	mov	byte ptr [rax], 0x20
0x2f8f:	jle	0x2f6e


0x2fb0:	mov	esi, 0x20
0x2fb5:	call	0x1cf0


0x2eac:	lea	rdi, [rip + 0x20e27d]
0x2eb3:	call	0x5ab0


0x2d8f:	movdqa	xmm0, xmmword ptr [rip + 0x20e399]
0x2d97:	movaps	xmmword ptr [rsp], xmm0
0x2d9b:	mov	r15, qword ptr [rsp + 8]
0x2da0:	lea	r14, [rsp + 0x10]
0x2da5:	mov	rsi, rsp
0x2da8:	mov	rdi, qword ptr [rip + 0x20e3b9]
0x2daf:	mov	rdx, r14
0x2db2:	call	0xbaf0


0x2d81:	cmp	qword ptr [rip + 0x20e3a7], 0
0x2d89:	je	0x2eac


0x2ec0:	lea	rdx, [rsp + 0x50]
0x2ec5:	mov	esi, r12d
0x2ec8:	mov	edi, 1
0x2ecd:	call	0x1e50


0x2acc:	test	sil, sil
0x2acf:	jne	0x2aeb


0x2ab0:	cmp	dword ptr [rax], 2
0x2ab3:	jne	0x2ac3


0x2a50:	cmp	dword ptr [rdx], 1
0x2a53:	jbe	0x2a6a


0x2a6d:	add	rdx, 0x40
0x2a71:	cmp	rdx, rcx
0x2a74:	jne	0x2a50


0x2a5a:	mov	r8d, dword ptr [rdx + 0x1c]
0x2a5e:	test	r8d, r8d
0x2a61:	jle	0x2a6d


0x1fb0:	jmp	qword ptr [rip + 0x20f032]


0x1db0:	jmp	qword ptr [rip + 0x20f112]


0xb467:	cmp	esi, 4
0xb46a:	je	0xb540


0xb4c0:	cmp	esi, 0x407
0xb4c6:	jg	0xb510


0xaec3:	mov	edx, 5
0xaec8:	xor	edi, edi
0xaeca:	call	0x1c80




0x9e0a:	mov	qword ptr [rsi], rcx
0x9e0d:	imul	rcx, r9
0x9e11:	mov	rsi, rcx
0x9e14:	jmp	0x9d70


0x5f89:	add	rsp, 0x4c8
0x5f90:	pop	rbx
0x5f91:	pop	rbp
0x5f92:	pop	r12
0x5f94:	pop	r13
0x5f96:	pop	r14
0x5f98:	pop	r15
0x5f9a:	ret	


0x7935:	call	0x1cb0


0x6001:	mov	byte ptr [rbp], 0
0x6005:	jmp	0x5f6f


0x6050:	mov	rdi, rdx
0x6053:	movabs	r11, 0x1000000000002500
0x605d:	shl	rdi, cl
0x6060:	test	rdi, r11
0x6063:	jne	0x60d0


0x607c:	lea	edx, [rax - 0x30]
0x607f:	cmp	edx, 9
0x6082:	jbe	0x61e0


0x5f6c:	xor	r14d, r14d
0x5f6f:	mov	rbx, qword ptr [rsp + 0x4b8]
0x5f77:	xor	rbx, qword ptr fs:[0x28]
0x5f80:	mov	rax, r14
0x5f83:	jne	0x7935


0x5fa0:	test	rbp, rbp
0x5fa3:	je	0x5fcc


0x1cb0:	jmp	qword ptr [rip + 0x20f192]


0x433f:	mov	ecx, dword ptr [rip + 0x20cceb]
0x4345:	mov	byte ptr [rip + 0x20ceb3], 0
0x434c:	cmp	byte ptr [rip + 0x20ccf9], 0
0x4353:	je	0x435c


0x4557:	cmp	byte ptr [rip + 0x20cca1], 0
0x455e:	je	0x5282


0x4004:	lea	rdx, [rax + 1]
0x4008:	mov	qword ptr [rdi + 8], rdx
0x400c:	movzx	edi, byte ptr [rax]
0x400f:	cmp	edi, 0xa
0x4012:	jne	0x4080


0x41a0:	call	0x1b70


0x41b0:	call	0x1b70


0x3fba:	lea	rdx, [rax + 1]
0x3fbe:	mov	qword ptr [rdi + 8], rdx
0x3fc2:	movzx	ebp, byte ptr [rax]
0x3fc5:	cmp	ebp, 0xa
0x3fc8:	jne	0x3d87


0x3dbb:	lea	rax, [rip - 0x12c2]
0x3dc2:	cmp	qword ptr [rbx + 0x20], rax
0x3dc6:	je	0x3ee1


0x3e78:	mov	eax, dword ptr [rip + 0x20d36a]
0x3e7e:	cmp	dword ptr [rip + 0x20d350], eax
0x3e84:	jle	0x3dbb


0x3ff0:	mov	rdi, qword ptr [rbx]
0x3ff3:	mov	rax, qword ptr [rdi + 8]
0x3ff7:	mov	rdx, qword ptr [rdi + 0x10]
0x3ffb:	cmp	rax, rdx
0x3ffe:	jae	0x41a0


0x3d99:	cmp	ebp, -1
0x3d9c:	je	0x3ea0


0x3cd0:	mov	rax, qword ptr [rbx + 8]
0x3cd4:	cmp	rax, qword ptr [rbx + 0x10]
0x3cd8:	jae	0x3d3b


0x3ca5:	cmp	eax, -1
0x3ca8:	je	0x3d10


0x3c20:	mov	ebp, 1
0x3c25:	jmp	0x3b9c


0x3bde:	mov	byte ptr [r13 + 0x39], 1
0x3be3:	jmp	0x3b57


0x3b09:	lea	rdx, [rax + 1]
0x3b0d:	mov	qword ptr [rbx + 8], rdx
0x3b11:	movzx	eax, byte ptr [rax]
0x3b14:	cmp	eax, 0xa
0x3b17:	je	0x3c3a


0x3c63:	mov	rdi, rbx
0x3c66:	call	0x1b70


0x3aa6:	cmp	byte ptr [rip + 0x20d56b], 0
0x3aad:	je	0x3aca


0x3a7a:	cmp	eax, 0xc
0x3a7d:	je	0x3b50


0x376b:	mov	dword ptr [rax], 2
0x3771:	add	rax, 0x40
0x3775:	cmp	rax, rdx
0x3778:	jne	0x3767


0x3758:	mov	dword ptr [rax], 1
0x375e:	add	rax, 0x40
0x3762:	cmp	rax, rdx
0x3765:	je	0x377a


0x36b2:	cmp	byte ptr [rip + 0x20d994], 0
0x36b9:	jne	0x3659


0x3698:	mov	dword ptr [rax], 2
0x369e:	add	rax, 0x40
0x36a2:	cmp	rax, rdx
0x36a5:	jne	0x3698


0x3606:	cmp	rbx, rbp
0x3609:	je	0x3622


0x36d8:	call	0x3090




0x3420:	mov	dword ptr [rip + 0x20ddaa], 0
0x342a:	xor	eax, eax
0x342c:	jmp	0x3398


0x33e7:	mov	ecx, edx
0x33e9:	neg	ecx
0x33eb:	cmp	ecx, esi
0x33ed:	jl	0x3390


0x33ac:	add	rsp, 0x10
0x33b0:	pop	rbx
0x33b1:	pop	rbp
0x33b2:	pop	r12
0x33b4:	ret	


0x34d7:	call	0x1cb0


0x3390:	add	edx, esi
0x3392:	mov	dword ptr [rip + 0x20de3c], edx
0x3398:	mov	rdi, qword ptr [rsp + 8]
0x339d:	xor	rdi, qword ptr fs:[0x28]
0x33a6:	jne	0x34d7


0x33dd:	test	edx, edx
0x33df:	mov	eax, edx
0x33e1:	jns	0x3390


0x33d0:	add	rbx, 1
0x33d4:	mov	byte ptr [rbx - 1], 0x20
0x33d8:	cmp	rax, rbx
0x33db:	jne	0x33d0




0x3180:	pop	rbx
0x3181:	pop	rbp
0x3182:	pop	r12
0x3184:	pop	r13
0x3186:	pop	r14
0x3188:	ret	


0x3150:	mov	eax, dword ptr [rip + 0x20e08a]
0x3156:	jmp	0x30c0


0x30c8:	mov	edx, r14d
0x30cb:	sub	edx, ebx
0x30cd:	test	edx, edx
0x30cf:	jle	0x3121


0x30ef:	mov	rdi, qword ptr [rip + 0x20dff2]
0x30f6:	mov	rax, qword ptr [rdi + 0x28]
0x30fa:	cmp	rax, qword ptr [rdi + 0x30]
0x30fe:	jae	0x3170


0x30e6:	call	0x2fc0


0x2fe0:	mov	ecx, dword ptr [rip + 0x20e04e]
0x2fe6:	mov	eax, ebp
0x2fe8:	cdq	
0x2fe9:	idiv	ecx
0x2feb:	sub	ecx, edx
0x2fed:	lea	ebx, [rcx + rbp]
0x2ff0:	cmp	r12d, ebx
0x2ff3:	jl	0x3024


0x1e50:	jmp	qword ptr [rip + 0x20f0c2]


0x2aeb:	mov	dword ptr [rip + 0x20e6cf], ecx
0x2af1:	jmp	0x2ad1


0x2a63:	mov	edi, dword ptr [rdx + 0x20]
0x2a66:	test	edi, edi
0x2a68:	jle	0x2a6d




0xb540:	mov	eax, dword ptr [rsp]
0xb543:	cmp	eax, 0x2f
0xb546:	ja	0xb634


0xb470:	jg	0xb530


0xb4c8:	cmp	esi, 0x406
0xb4ce:	jge	0xb540


0xb510:	cmp	esi, 0x409
0xb516:	je	0xb540


0x6065:	test	cl, cl
0x6067:	je	0x60e0


0x60d0:	mov	r15d, eax
0x60d3:	jmp	0x603c


0x61e0:	xor	r10d, r10d
0x61e3:	movsx	eax, byte ptr [rbx + 1]
0x61e7:	cmp	r10d, 0xccccccc
0x61ee:	lea	rcx, [rbx + 1]
0x61f2:	mov	esi, eax
0x61f4:	lea	edx, [rax - 0x30]
0x61f7:	jg	0x6226


0x6088:	cmp	sil, 0x45
0x608c:	je	0x60b8


0x5fcc:	add	r14, r12
0x5fcf:	mov	r12, rbx
0x5fd2:	movzx	eax, byte ptr [r12 + 1]
0x5fd8:	lea	rbx, [r12 + 1]
0x5fdd:	mov	r10, -1
0x5fe4:	test	al, al
0x5fe6:	jne	0x5f3e


0x5fa5:	cmp	r10d, 1
0x5fa9:	jle	0x5fc2




0x435c:	cmp	ecx, 1
0x435f:	movzx	edx, byte ptr [rip + 0x20ce86]
0x4366:	jle	0x478a


0x4355:	mov	byte ptr [rip + 0x20ce98], 1
0x435c:	cmp	ecx, 1
0x435f:	movzx	edx, byte ptr [rip + 0x20ce86]
0x4366:	jle	0x478a


0x5282:	mov	ecx, dword ptr [rip + 0x20bda8]
0x5288:	jmp	0x434c


0x4564:	mov	dword ptr [rip + 0x20cac5], r12d
0x456b:	mov	ecx, r12d
0x456e:	jmp	0x434c


0x4014:	cmp	byte ptr [rip + 0x20d1dd], 0
0x401b:	mov	byte ptr [rip + 0x20d1da], 1
0x4022:	je	0x4031


0x4080:	mov	rsi, qword ptr [rbx]
0x4083:	call	0x1e40


0x3fce:	mov	rdi, qword ptr [rbx]
0x3fd1:	mov	rax, qword ptr [rdi + 8]
0x3fd5:	cmp	rax, qword ptr [rdi + 0x10]
0x3fd9:	jae	0x41c8


0x3ee1:	cmp	byte ptr [rbx + 0x38], 0
0x3ee5:	jne	0x4108


0x3dcc:	cmp	byte ptr [rip + 0x20d425], 0
0x3dd3:	mov	byte ptr [rip + 0x20d3a6], 1
0x3dda:	je	0x3de9


0x3e8a:	pop	rbx
0x3e8b:	mov	dword ptr [rip + 0x20d342], r13d
0x3e92:	xor	eax, eax
0x3e94:	pop	rbp
0x3e95:	pop	r12
0x3e97:	pop	r13
0x3e99:	pop	r14
0x3e9b:	ret	


0x3ea0:	cmp	dword ptr [rbx + 0x10], 3
0x3ea4:	jne	0x4060


0x3da2:	movsx	edi, bpl
0x3da6:	call	0x32d0


0x3cda:	lea	rdx, [rax + 1]
0x3cde:	mov	qword ptr [rbx + 8], rdx
0x3ce2:	movzx	edi, byte ptr [rax]
0x3ce5:	cmp	edi, 0xa
0x3ce8:	jne	0x3d28


0x3d3b:	mov	rdi, rbx
0x3d3e:	call	0x1b70


0x3d10:	cmp	dword ptr [rbp + 0x10], 3
0x3d14:	je	0x3cc1


0x3b9c:	mov	rax, qword ptr [rbx + 8]
0x3ba0:	cmp	rax, qword ptr [rbx + 0x10]
0x3ba4:	jae	0x3c54


0x3b57:	test	al, al
0x3b59:	je	0x3b9c


0x3c3a:	mov	rax, qword ptr [rbx + 8]
0x3c3e:	cmp	rax, qword ptr [rbx + 0x10]
0x3c42:	jae	0x3c70


0x3b1d:	cmp	eax, 0xc
0x3b20:	mov	byte ptr [r13 + 0x39], 0
0x3b25:	sete	bpl
0x3b29:	jmp	0x3a6c


0x3aca:	add	rsp, 8
0x3ace:	pop	rbx
0x3acf:	pop	rbp
0x3ad0:	pop	r12
0x3ad2:	pop	r13
0x3ad4:	ret	


0x3aaf:	cmp	byte ptr [rip + 0x20d749], 1
0x3ab6:	jne	0x3abe


0x3b50:	movzx	eax, byte ptr [rip + 0x20d5e9]
0x3b57:	test	al, al
0x3b59:	je	0x3b9c


0x3a83:	cmp	eax, -1
0x3a86:	je	0x3b30


0x36bb:	mov	byte ptr [rip + 0x20dabe], 0
0x36c2:	jmp	0x3659


0x3659:	add	rsp, 8
0x365d:	mov	eax, 1
0x3662:	pop	rbx
0x3663:	pop	rbp
0x3664:	pop	r12
0x3666:	pop	r13
0x3668:	ret	


0x3622:	mov	eax, dword ptr [rip + 0x20dbb8]
0x3628:	test	eax, eax
0x362a:	jne	0x3659


0x3398:	mov	rdi, qword ptr [rsp + 8]
0x339d:	xor	rdi, qword ptr fs:[0x28]
0x33a6:	jne	0x34d7


0x33ef:	mov	dword ptr [rip + 0x20dddb], 0
0x33f9:	jmp	0x3398


0x30c0:	lea	r14d, [rbp + r12]
0x30c5:	mov	rbx, r12
0x30c8:	mov	edx, r14d
0x30cb:	sub	edx, ebx
0x30cd:	test	edx, edx
0x30cf:	jle	0x3121


0x3100:	lea	rdx, [rax + 1]
0x3104:	mov	qword ptr [rdi + 0x28], rdx
0x3108:	mov	byte ptr [rax], sil
0x310b:	mov	edx, r14d
0x310e:	add	dword ptr [rip + 0x20e0c3], 1
0x3115:	mov	eax, dword ptr [rip + 0x20e0c5]
0x311b:	sub	edx, ebx
0x311d:	test	edx, edx
0x311f:	jg	0x30d1


0x3170:	call	0x1cf0




0xb54c:	add	rax, qword ptr [rsp + 0x10]
0xb551:	mov	edx, dword ptr [rax]
0xb553:	mov	edi, ebp
0xb555:	xor	eax, eax
0xb557:	call	0x1c10


0xb634:	mov	rax, qword ptr [rsp + 8]
0xb639:	jmp	0xb551


0xb476:	cmp	esi, 2
0xb479:	je	0xb540


0xb530:	cmp	esi, 9
0xb533:	je	0xb490


0xb4d0:	cmp	esi, 0x401
0xb4d6:	je	0xb490


0xb518:	jl	0xb490


0x60e0:	mov	r8d, 1
0x60e6:	jmp	0x603c


0x6069:	movabs	rcx, 0x800000000000000
0x6073:	test	rdi, rcx
0x6076:	jne	0x61d0


0x603c:	add	rbx, 1
0x6040:	movsx	eax, byte ptr [rbx]
0x6043:	lea	ecx, [rax - 0x23]
0x6046:	mov	esi, eax
0x6048:	mov	r9d, eax
0x604b:	cmp	cl, 0x3c
0x604e:	ja	0x607c


0x61f9:	movsx	edi, byte ptr [rbx]
0x61fc:	je	0x6220


0x6226:	cmp	edx, 9
0x6229:	ja	0x6240


0x60b8:	movsx	r9d, byte ptr [rbx + 1]
0x60bd:	mov	r11d, eax
0x60c0:	add	rbx, 1
0x60c4:	mov	esi, r9d
0x60c7:	jmp	0x6097


0x608e:	xor	r11d, r11d
0x6091:	cmp	sil, 0x4f
0x6095:	je	0x60b8


0x5f3e:	cmp	al, 0x25
0x5f40:	je	0x6028


0x5fc2:	movzx	eax, byte ptr [rbx]
0x5fc5:	add	rbp, 1
0x5fc9:	mov	byte ptr [rbp - 1], al
0x5fcc:	add	r14, r12
0x5fcf:	mov	r12, rbx
0x5fd2:	movzx	eax, byte ptr [r12 + 1]
0x5fd8:	lea	rbx, [r12 + 1]
0x5fdd:	mov	r10, -1
0x5fe4:	test	al, al
0x5fe6:	jne	0x5f3e


0x5fab:	lea	r15, [r10 - 1]
0x5faf:	mov	rdi, rbp
0x5fb2:	mov	esi, 0x20
0x5fb7:	mov	rdx, r15
0x5fba:	add	rbp, r15
0x5fbd:	call	0x1d50


0x478a:	mov	byte ptr [rip + 0x20c8bb], 0
0x4791:	mov	eax, dword ptr [rip + 0x20c9f5]
0x4797:	jmp	0x43b3


0x436c:	cmp	byte ptr [rip + 0x20ce1d], 0
0x4373:	jne	0x458c


0x434c:	cmp	byte ptr [rip + 0x20ccf9], 0
0x4353:	je	0x435c


0x4031:	cmp	byte ptr [rip + 0x20d1c2], 0
0x4038:	je	0x4041


0x4024:	cmp	byte ptr [rip + 0x20d021], 0
0x402b:	je	0x4160


0x1e40:	jmp	qword ptr [rip + 0x20f0ca]


0x3fdf:	lea	rdx, [rax + 1]
0x3fe3:	mov	qword ptr [rdi + 8], rdx
0x3fe7:	movzx	ebp, byte ptr [rax]
0x3fea:	jmp	0x3d87


0x41c8:	call	0x1b70


0x3eeb:	cmp	ebp, 0xa
0x3eee:	mov	byte ptr [rip + 0x20d308], 0
0x3ef5:	je	0x3eaa


0x4108:	lea	rdi, [rbx + 0x20]
0x410c:	call	0x37b0


0x3de9:	cmp	byte ptr [rip + 0x20d40f], 0
0x3df0:	je	0x3ec0


0x3ddc:	cmp	byte ptr [rip + 0x20d269], 0
0x3de3:	je	0x4130


0x3eaa:	mov	eax, 1
0x3eaf:	pop	rbx
0x3eb0:	pop	rbp
0x3eb1:	pop	r12
0x3eb3:	pop	r13
0x3eb5:	pop	r14
0x3eb7:	ret	


0x4060:	mov	rdi, rbx
0x4063:	call	0x3930


0x3cea:	cmp	byte ptr [rip + 0x20d509], 0
0x3cf1:	je	0x3cfa


0x3d28:	mov	rsi, rbx
0x3d2b:	call	0x1e40


0x3d16:	add	rsp, 8
0x3d1a:	mov	rdi, rbp
0x3d1d:	pop	rbx
0x3d1e:	pop	rbp
0x3d1f:	jmp	0x3930


0x3baa:	lea	rdx, [rax + 1]
0x3bae:	mov	qword ptr [rbx + 8], rdx
0x3bb2:	movzx	edi, byte ptr [rax]
0x3bb5:	cmp	edi, 0xa
0x3bb8:	jne	0x3bf0


0x3c54:	mov	rdi, rbx
0x3c57:	call	0x1b70


0x3b5b:	cmp	byte ptr [rip + 0x20d69d], 0
0x3b62:	jne	0x3c30


0x3c44:	lea	rdx, [rax + 1]
0x3c48:	mov	qword ptr [rbx + 8], rdx
0x3c4c:	movzx	eax, byte ptr [rax]
0x3c4f:	jmp	0x3b1d


0x3c70:	mov	rdi, rbx
0x3c73:	call	0x1b70


0x3a6c:	cmp	byte ptr [rip + 0x20d6cd], 0
0x3a73:	jne	0x3ae8


0x3ab8:	cmp	r12d, 1
0x3abc:	jne	0x3aca


0x3abe:	test	bpl, bpl
0x3ac1:	jne	0x3aca


0x3b30:	cmp	dword ptr [r13 + 0x10], 3
0x3b35:	je	0x3aa6


0x3a8c:	mov	rax, qword ptr [rbx + 8]
0x3a90:	cmp	rax, qword ptr [rbx + 0x10]
0x3a94:	jae	0x3ad8


0x362c:	mov	rdx, qword ptr [rip + 0x20dbcd]
0x3633:	mov	eax, dword ptr [r13 + 0x34]
0x3637:	mov	ecx, dword ptr [rip + 0x20db4f]
0x363d:	mov	esi, dword ptr [rdx + r12*4]
0x3641:	add	esi, eax
0x3643:	sub	eax, ecx
0x3645:	cmp	eax, dword ptr [rip + 0x20db91]
0x364b:	mov	edx, esi
0x364d:	mov	dword ptr [rip + 0x20db85], esi
0x3653:	je	0x3700


0xb551:	mov	edx, dword ptr [rax]
0xb553:	mov	edi, ebp
0xb555:	xor	eax, eax
0xb557:	call	0x1c10


0xb47f:	jg	0xb490


0xb539:	jg	0xb540


0xb4d8:	cmp	esi, 0x402
0xb4de:	je	0xb540


0xb51e:	cmp	esi, 0x40a
0xb524:	jne	0xb4e8


0x61d0:	mov	byte ptr [rsp + 0x30], 1
0x61d5:	jmp	0x603c


0x6220:	cmp	dil, 0x37
0x6224:	jle	0x61fe


0x61fe:	lea	r9d, [r10 + r10*4]
0x6202:	mov	rbx, rcx
0x6205:	lea	r10d, [rdi + r9*2 - 0x30]
0x620a:	cmp	edx, 9
0x620d:	jbe	0x61e3


0x622b:	movsx	eax, byte ptr [rbx + 2]
0x622f:	mov	r10d, 0x7fffffff
0x6235:	add	rbx, 2
0x6239:	mov	esi, eax
0x623b:	lea	edx, [rax - 0x30]
0x623e:	jmp	0x620a


0x6240:	mov	r9d, eax
0x6243:	mov	rbx, rcx
0x6246:	mov	r10d, 0x7fffffff
0x624c:	jmp	0x6088


0x6097:	cmp	sil, 0x7a
0x609b:	ja	0x60f0


0x1d50:	jmp	qword ptr [rip + 0x20f142]


0x43b3:	test	dl, dl
0x43b5:	je	0x43be


0x4379:	test	dl, dl
0x437b:	jne	0x479c


0x458c:	test	dl, dl
0x458e:	mov	eax, dword ptr [rip + 0x20cbf8]
0x4594:	jne	0x43a5


0x4041:	lea	rsi, [rbx + 0x30]
0x4045:	lea	rdi, [rbx + 0x10]
0x4049:	call	0x3720


0x403a:	mov	byte ptr [rip + 0x20d1b8], 1
0x4041:	lea	rsi, [rbx + 0x30]
0x4045:	lea	rdi, [rbx + 0x10]
0x4049:	call	0x3720


0x4160:	mov	byte ptr [rip + 0x20d019], 1
0x4167:	call	0x31a0




0x3ef7:	test	r12d, r12d
0x3efa:	mov	rbp, qword ptr [rip + 0x20d247]
0x3f01:	je	0x3f20


0x3ec0:	mov	edi, dword ptr [rip + 0x20d2be]
0x3ec6:	mov	eax, dword ptr [rip + 0x20d2c0]
0x3ecc:	cmp	eax, edi
0x3ece:	jl	0x40a0


0x3df6:	cmp	byte ptr [rip + 0x20d401], 0
0x3dfd:	je	0x3ec0


0x4130:	call	0x31a0


0x3cfa:	add	rsp, 8
0x3cfe:	lea	rsi, [rbp + 0x30]
0x3d02:	lea	rdi, [rbp + 0x10]
0x3d06:	pop	rbx
0x3d07:	pop	rbp
0x3d08:	jmp	0x3720


0x3cf3:	mov	byte ptr [rip + 0x20d4ff], 1
0x3cfa:	add	rsp, 8
0x3cfe:	lea	rsi, [rbp + 0x30]
0x3d02:	lea	rdi, [rbp + 0x10]
0x3d06:	pop	rbx
0x3d07:	pop	rbp
0x3d08:	jmp	0x3720


0x3bba:	lea	rsi, [r13 + 0x30]
0x3bbe:	lea	rdi, [r13 + 0x10]
0x3bc2:	call	0x3720


0x3bf0:	mov	rsi, rbx
0x3bf3:	call	0x1e40


0x3b68:	mov	edx, dword ptr [rip + 0x20d4c2]
0x3b6e:	mov	rcx, qword ptr [rip + 0x20d6b3]
0x3b75:	test	edx, edx
0x3b77:	je	0x3b9c


0x3c30:	mov	byte ptr [r13 + 0x39], 0
0x3c35:	jmp	0x3b9c


0x3ac3:	add	dword ptr [rip + 0x20d552], 1
0x3aca:	add	rsp, 8
0x3ace:	pop	rbx
0x3acf:	pop	rbp
0x3ad0:	pop	r12
0x3ad2:	pop	r13
0x3ad4:	ret	


0x3b3b:	mov	rdi, r13
0x3b3e:	call	0x3930


0x3a96:	lea	rdx, [rax + 1]
0x3a9a:	mov	qword ptr [rbx + 8], rdx
0x3a9e:	movzx	eax, byte ptr [rax]
0x3aa1:	cmp	eax, 0xa
0x3aa4:	jne	0x3a7a


0x3ad8:	mov	rdi, rbx
0x3adb:	call	0x1b70


0x3700:	sub	edx, ecx
0x3702:	mov	eax, 1
0x3707:	mov	dword ptr [rip + 0x20dacb], edx
0x370d:	add	rsp, 8
0x3711:	pop	rbx
0x3712:	pop	rbp
0x3713:	pop	r12
0x3715:	pop	r13
0x3717:	ret	


0xb481:	cmp	esi, 1
0xb484:	jne	0xb4e8


0xb53b:	cmp	esi, 8
0xb53e:	jne	0xb4e8


0xb4e0:	cmp	esi, 0x400
0xb4e6:	je	0xb540


0xb526:	jmp	0xb490


0xb4e8:	mov	eax, dword ptr [rsp]
0xb4eb:	cmp	eax, 0x2f
0xb4ee:	ja	0xb62a


0x61e3:	movsx	eax, byte ptr [rbx + 1]
0x61e7:	cmp	r10d, 0xccccccc
0x61ee:	lea	rcx, [rbx + 1]
0x61f2:	mov	esi, eax
0x61f4:	lea	edx, [rax - 0x30]
0x61f7:	jg	0x6226


0x620f:	mov	r9d, eax
0x6212:	jmp	0x6088


0x620a:	cmp	edx, 9
0x620d:	jbe	0x61e3


0x609d:	lea	rdx, [rip + 0x77cc]
0x60a4:	movzx	eax, sil
0x60a8:	movsxd	rax, dword ptr [rdx + rax*4]
0x60ac:	add	rax, rdx
0x60af:	jmp	rax


0x60f0:	lea	rax, [rbx - 1]
0x60f4:	mov	r8d, 1
0x60fa:	mov	r9, rax
0x60fd:	lea	rax, [rax - 1]
0x6101:	add	r8d, 1
0x6105:	cmp	byte ptr [rax + 1], 0x25
0x6109:	jne	0x60fa




0x43be:	movzx	esi, byte ptr [rip + 0x20cde7]
0x43c5:	test	sil, sil
0x43c8:	je	0x45d0


0x43b7:	mov	byte ptr [rip + 0x20ce2f], 0
0x43be:	movzx	esi, byte ptr [rip + 0x20cde7]
0x43c5:	test	sil, sil
0x43c8:	je	0x45d0


0x4381:	lea	rax, [rip + 0x7b42]
0x4388:	mov	qword ptr [rip + 0x20ccc1], rax
0x438f:	mov	dword ptr [rip + 0x20cdf3], 1
0x4399:	mov	byte ptr [rip + 0x20cdf0], 1
0x43a0:	mov	eax, 1
0x43a5:	mov	byte ptr [rip + 0x20ce41], 1
0x43ac:	mov	byte ptr [rip + 0x20ce31], 1
0x43b3:	test	dl, dl
0x43b5:	je	0x43be


0x479c:	lea	rax, [rip + 0x7741]
0x47a3:	mov	qword ptr [rip + 0x20c8a6], rax
0x47aa:	jmp	0x438f


0x459a:	cmp	eax, 1
0x459d:	jne	0x43a5


0x43a5:	mov	byte ptr [rip + 0x20ce41], 1
0x43ac:	mov	byte ptr [rip + 0x20ce31], 1
0x43b3:	test	dl, dl
0x43b5:	je	0x43be


0x3f20:	mov	rdi, qword ptr [rbx]
0x3f23:	mov	rax, qword ptr [rdi + 8]
0x3f27:	cmp	rax, qword ptr [rdi + 0x10]
0x3f2b:	jae	0x4190


0x3f03:	lea	eax, [r12 - 1]
0x3f08:	lea	r12, [rbp + rax + 1]
0x3f0d:	nop	dword ptr [rax]
0x3f10:	add	rbp, 1
0x3f14:	movsx	edi, byte ptr [rbp - 1]
0x3f18:	call	qword ptr [rbx + 0x20]


0x40a0:	sub	edi, eax
0x40a2:	call	0x2f50


0x3ed4:	cmp	byte ptr [rip + 0x20d2b5], 0
0x3edb:	jne	0x40c0


0x3e03:	mov	eax, dword ptr [rip + 0x20d37f]
0x3e09:	mov	r13, qword ptr [rip + 0x20d418]
0x3e10:	mov	dword ptr [rip + 0x20d36e], 0
0x3e1a:	test	eax, eax
0x3e1c:	jle	0x3e48


0x3b79:	sub	edx, 1
0x3b7c:	lea	rax, [rcx + 0x39]
0x3b80:	shl	rdx, 6
0x3b84:	lea	rdx, [rcx + rdx + 0x79]
0x3b89:	nop	dword ptr [rax]
0x3b90:	mov	byte ptr [rax], 0
0x3b93:	add	rax, 0x40
0x3b97:	cmp	rax, rdx
0x3b9a:	jne	0x3b90


0xb4f4:	add	rax, qword ptr [rsp + 0x10]
0xb4f9:	mov	rdx, qword ptr [rax]
0xb4fc:	mov	edi, ebp
0xb4fe:	xor	eax, eax
0xb500:	call	0x1c10


0xb62a:	mov	rax, qword ptr [rsp + 8]
0xb62f:	jmp	0xb4f9


0x610b:	mov	rdx, qword ptr [rsp + 8]
0x6110:	mov	eax, 0
0x6115:	movsxd	r8, r8d
0x6118:	mov	rcx, r8
0x611b:	mov	r12, rbx
0x611e:	sub	rdx, r14
0x6121:	test	r10d, r10d
0x6124:	cmovns	eax, r10d
0x6128:	cdqe	
0x612a:	cmp	rax, r8
0x612d:	cmovae	rcx, rax
0x6131:	cmp	rcx, rdx
0x6134:	jae	0x5f6c


0x60fa:	mov	r9, rax
0x60fd:	lea	rax, [rax - 1]
0x6101:	add	r8d, 1
0x6105:	cmp	byte ptr [rax + 1], 0x25
0x6109:	jne	0x60fa


0x45d0:	xor	edi, edi
0x45d2:	jmp	0x4409


0x43ce:	cmp	byte ptr [rip + 0x20cc4b], 9
0x43d5:	mov	edx, dword ptr [rip + 0x20cc39]
0x43db:	mov	dword ptr [rip + 0x20cc3b], edx
0x43e1:	mov	edx, dword ptr [rip + 0x20cc29]
0x43e7:	je	0x515b


0x438f:	mov	dword ptr [rip + 0x20cdf3], 1
0x4399:	mov	byte ptr [rip + 0x20cdf0], 1
0x43a0:	mov	eax, 1
0x43a5:	mov	byte ptr [rip + 0x20ce41], 1
0x43ac:	mov	byte ptr [rip + 0x20ce31], 1
0x43b3:	test	dl, dl
0x43b5:	je	0x43be


0x45a3:	mov	rsi, qword ptr [rip + 0x20caa6]
0x45aa:	cmp	byte ptr [rsi], 9
0x45ad:	jne	0x43a5


0x3f31:	lea	rdx, [rax + 1]
0x3f35:	mov	qword ptr [rdi + 8], rdx
0x3f39:	movzx	eax, byte ptr [rax]
0x3f3c:	cmp	eax, 0xa
0x3f3f:	je	0x3eaa


0x4190:	call	0x1b70


0x40c0:	call	0x3090


0x3e48:	cmp	byte ptr [rip + 0x20d39e], 0
0x3e4f:	mov	edi, dword ptr [rbx + 0x34]
0x3e52:	mov	dword ptr [rip + 0x20d32c], edi
0x3e58:	je	0x4178


0x3e1e:	lea	r14d, [rax - 1]
0x3e22:	add	r14, 1
0x3e26:	shl	r14, 6
0x3e2a:	add	r14, r13
0x3e2d:	nop	dword ptr [rax]
0x3e30:	mov	rdi, r13
0x3e33:	add	r13, 0x40
0x3e37:	call	0x38c0


0x3b90:	mov	byte ptr [rax], 0
0x3b93:	add	rax, 0x40
0x3b97:	cmp	rax, rdx
0x3b9a:	jne	0x3b90


0xb4f9:	mov	rdx, qword ptr [rax]
0xb4fc:	mov	edi, ebp
0xb4fe:	xor	eax, eax
0xb500:	call	0x1c10


0x613a:	test	rbp, rbp
0x613d:	je	0x61c5


0x4409:	lea	edx, [rcx - 1]
0x440c:	imul	edx, eax
0x440f:	jo	0x528d


0x515b:	mov	edi, edx
0x515d:	sar	edi, 0x1f
0x5160:	shr	edi, 0x1d
0x5163:	lea	r8d, [rdx + rdi]
0x5167:	and	r8d, 7
0x516b:	sub	edi, r8d
0x516e:	lea	edx, [rdx + rdi + 8]
0x5172:	mov	dword ptr [rip + 0x20c030], edx
0x5178:	jmp	0x43f6


0x43ed:	add	edx, 1
0x43f0:	mov	dword ptr [rip + 0x20cdb2], edx
0x43f6:	cmp	byte ptr [rip + 0x20ce02], 0
0x43fd:	je	0x45d0


0x45b3:	lea	rsi, [rip + 0x7910]
0x45ba:	mov	qword ptr [rip + 0x20ca8f], rsi
0x45c1:	jmp	0x43a5


0x3f45:	cmp	eax, 0xc
0x3f48:	je	0x40d0


0x4178:	mov	dword ptr [rip + 0x20d05e], 0
0x4182:	jmp	0x3e6a


0x3e5e:	mov	eax, dword ptr [rip + 0x20d384]
0x3e64:	mov	dword ptr [rip + 0x20d376], eax
0x3e6a:	mov	byte ptr [rip + 0x20d38d], 0
0x3e71:	jmp	0x3ec6


0x61c5:	add	r14, rcx
0x61c8:	jmp	0x5fd2


0x6143:	cmp	rax, r8
0x6146:	jbe	0x6195


0x528d:	mov	edx, 0x7fffffff
0x5292:	jmp	0x4415


0x4415:	mov	eax, dword ptr [rip + 0x20cc29]
0x441b:	sub	eax, edi
0x441d:	sub	eax, edx
0x441f:	jo	0x524f


0x43f6:	cmp	byte ptr [rip + 0x20ce02], 0
0x43fd:	je	0x45d0


0x4403:	mov	edi, dword ptr [rip + 0x20cd9f]
0x4409:	lea	edx, [rcx - 1]
0x440c:	imul	edx, eax
0x440f:	jo	0x528d


0x40d0:	mov	rdi, qword ptr [rbx]
0x40d3:	mov	rax, qword ptr [rdi + 8]
0x40d7:	cmp	rax, qword ptr [rdi + 0x10]
0x40db:	jae	0x41bc


0x3f4e:	cmp	eax, -1
0x3f51:	je	0x3ea0


0x3e6a:	mov	byte ptr [rip + 0x20d38d], 0
0x3e71:	jmp	0x3ec6


0x3ec6:	mov	eax, dword ptr [rip + 0x20d2c0]
0x3ecc:	cmp	eax, edi
0x3ece:	jl	0x40a0


0x5fd2:	movzx	eax, byte ptr [r12 + 1]
0x5fd8:	lea	rbx, [r12 + 1]
0x5fdd:	mov	r10, -1
0x5fe4:	test	al, al
0x5fe6:	jne	0x5f3e


0x6195:	cmp	byte ptr [rsp + 0x30], 0
0x619a:	mov	qword ptr [rsp + 0x38], rcx
0x619f:	mov	rdx, r8
0x61a2:	mov	qword ptr [rsp + 0x30], r8
0x61a7:	mov	rsi, r9
0x61aa:	mov	rdi, rbp
0x61ad:	je	0x7380


0x6148:	movsxd	rdx, r10d
0x614b:	mov	qword ptr [rsp + 0x48], r8
0x6150:	mov	qword ptr [rsp + 0x40], rcx
0x6155:	sub	rdx, r8
0x6158:	cmp	r15d, 0x30
0x615c:	mov	qword ptr [rsp + 0x38], r9
0x6161:	lea	rbx, [rbp + rdx]
0x6166:	je	0x73d6


0x524f:	mov	dword ptr [rip + 0x20bf8f], 0
0x5259:	lea	rsi, [rip + 0x6c86]
0x5260:	mov	edx, 5
0x5265:	xor	edi, edi
0x5267:	call	0x1c80


0x4425:	cdq	
0x4426:	idiv	ecx
0x4428:	test	eax, eax
0x442a:	mov	dword ptr [rip + 0x20cdb8], eax
0x4430:	jle	0x5259


0x40e1:	lea	rdx, [rax + 1]
0x40e5:	mov	qword ptr [rdi + 8], rdx
0x40e9:	movzx	edi, byte ptr [rax]
0x40ec:	cmp	edi, 0xa
0x40ef:	je	0x4031


0x41bc:	call	0x1b70


0x3f57:	movsx	edi, al
0x3f5a:	mov	ebp, dword ptr [rip + 0x20d274]
0x3f60:	call	0x32d0


0x7380:	call	0x1dd0


0x61b3:	call	0x5e50


0x73d6:	mov	rdi, rbp
0x73d9:	mov	esi, 0x30
0x73de:	mov	rbp, rbx
0x73e1:	call	0x1d50


0x616c:	cmp	r15d, 0x2b
0x6170:	je	0x73d6


0x5259:	lea	rsi, [rip + 0x6c86]
0x5260:	mov	edx, 5
0x5265:	xor	edi, edi
0x5267:	call	0x1c80


0x4436:	test	sil, sil
0x4439:	je	0x446c


0x40f5:	mov	rsi, qword ptr [rbx]
0x40f8:	call	0x1e40


0x1dd0:	jmp	qword ptr [rip + 0x20f102]


0x6176:	mov	rdi, rbp
0x6179:	mov	esi, 0x20
0x617e:	mov	rbp, rbx
0x6181:	call	0x1d50


0x446c:	mov	rdi, qword ptr [rip + 0x20ccd5]
0x4473:	call	0x1b90


0x443b:	mov	rdi, qword ptr [rip + 0x20cd5e]
0x4442:	call	0x1b90




0x61b8:	mov	r8, qword ptr [rsp + 0x30]
0x61bd:	mov	rcx, qword ptr [rsp + 0x38]
0x61c2:	add	rbp, r8
0x61c5:	add	r14, rcx
0x61c8:	jmp	0x5fd2


0x3e3c:	add	dword ptr [rip + 0x20d345], 1
0x3e43:	cmp	r14, r13
0x3e46:	jne	0x3e30


0x3e30:	mov	rdi, r13
0x3e33:	add	r13, 0x40
0x3e37:	call	0x38c0


0x3bc7:	jmp	0x3aa6


0x404e:	pop	rbx
0x404f:	mov	eax, 1
0x4054:	pop	rbp
0x4055:	pop	r12
0x4057:	pop	r13
0x4059:	pop	r14
0x405b:	ret	


0x361d:	cmp	rbp, rbx
0x3620:	jne	0x3610


0x3610:	add	rbx, 1
0x3614:	movsx	edi, byte ptr [rbx - 1]
0x3618:	call	0x34e0


0x3f65:	cmp	byte ptr [rip + 0x20d281], 0
0x3f6c:	jne	0x4140


0x3f72:	test	eax, eax
0x3f74:	mov	rbp, qword ptr [rip + 0x20d1cd]
0x3f7b:	je	0x3f20


0x4140:	mov	ecx, dword ptr [rip + 0x20d0a2]
0x4146:	cmp	dword ptr [rip + 0x20d088], ecx
0x414c:	jle	0x3f72


0x3f7d:	sub	eax, 1
0x3f80:	lea	r12, [rbp + rax + 1]
0x3f85:	nop	dword ptr [rax]
0x3f88:	add	rbp, 1
0x3f8c:	movsx	edi, byte ptr [rbp - 1]
0x3f90:	call	qword ptr [rbx + 0x20]


0x4152:	mov	dword ptr [rip + 0x20d07c], ebp
0x4158:	xor	eax, eax
0x415a:	jmp	0x3eaf


0x3eaf:	pop	rbx
0x3eb0:	pop	rbp
0x3eb1:	pop	r12
0x3eb3:	pop	r13
0x3eb5:	pop	r14
0x3eb7:	ret	


0x3dab:	mov	r12d, eax
0x3dae:	cmp	byte ptr [rip + 0x20d438], 0
0x3db5:	jne	0x3e78


0x30eb:	movzx	esi, byte ptr [rbx - 1]
0x30ef:	mov	rdi, qword ptr [rip + 0x20dff2]
0x30f6:	mov	rax, qword ptr [rdi + 0x28]
0x30fa:	cmp	rax, qword ptr [rdi + 0x30]
0x30fe:	jae	0x3170


0x355d:	call	0x1f90


0x29f8:	mov	byte ptr [rip + 0x20e729], 1
0x29ff:	pop	rbp
0x2a00:	ret	


0x40c5:	jmp	0x3ee1


0x36dd:	jmp	0x3606


0x3905:	jmp	0x38e0


0x40a7:	mov	dword ptr [rip + 0x20d0d3], 0
0x40b1:	jmp	0x3ed4


0x36ef:	mov	dword ptr [rip + 0x20da8b], 0
0x36f9:	jmp	0x35f9


0x3917:	mov	dword ptr [rip + 0x20d863], 0
0x3921:	jmp	0x38d7


0x31d1:	call	0x2fc0


0x31d6:	mov	rbx, qword ptr [rip + 0x20dfdb]
0x31dd:	mov	edx, 5
0x31e2:	test	rbx, rbx
0x31e5:	je	0x32a7


0x32a7:	lea	rsi, [rip + 0x8be9]
0x32ae:	xor	edi, edi
0x32b0:	call	0x1c80


0x31eb:	lea	rsi, [rip + 0x8cba]
0x31f2:	mov	rbp, rsp
0x31f5:	xor	edi, edi
0x31f7:	call	0x1c80


0x7990:	add	rsp, 0x20
0x7994:	mov	rdx, qword ptr [rsp + 8]
0x7999:	xor	rdx, qword ptr fs:[0x28]
0x79a2:	jne	0x79a9


0x79a4:	add	rsp, 0x18
0x79a8:	ret	


0x79a9:	call	0x1cb0


0xbde1:	test	rbp, rbp
0xbde4:	je	0xbe06


0xbe06:	add	rsp, 8
0xbe0a:	pop	rbx
0xbe0b:	pop	rbp
0xbe0c:	pop	r12
0xbe0e:	pop	r13
0xbe10:	pop	r14
0xbe12:	pop	r15
0xbe14:	ret	


0xbde6:	xor	ebx, ebx
0xbde8:	nop	dword ptr [rax + rax]
0xbdf0:	mov	rdx, r15
0xbdf3:	mov	rsi, r14
0xbdf6:	mov	edi, r13d
0xbdf9:	call	qword ptr [r12 + rbx*8]


0x7385:	mov	rcx, qword ptr [rsp + 0x38]
0x738a:	mov	r8, qword ptr [rsp + 0x30]
0x738f:	jmp	0x61c2


0x61c2:	add	rbp, r8
0x61c5:	add	r14, rcx
0x61c8:	jmp	0x5fd2


0x6186:	mov	r8, qword ptr [rsp + 0x48]
0x618b:	mov	rcx, qword ptr [rsp + 0x40]
0x6190:	mov	r9, qword ptr [rsp + 0x38]
0x6195:	cmp	byte ptr [rsp + 0x30], 0
0x619a:	mov	qword ptr [rsp + 0x38], rcx
0x619f:	mov	rdx, r8
0x61a2:	mov	qword ptr [rsp + 0x30], r8
0x61a7:	mov	rsi, r9
0x61aa:	mov	rdi, rbp
0x61ad:	je	0x7380


0x73e6:	mov	r9, qword ptr [rsp + 0x38]
0x73eb:	mov	rcx, qword ptr [rsp + 0x40]
0x73f0:	mov	r8, qword ptr [rsp + 0x48]
0x73f5:	jmp	0x6195


0x40fd:	jmp	0x4031


0x3bf8:	lea	rsi, [r13 + 0x30]
0x3bfc:	lea	rdi, [r13 + 0x10]
0x3c00:	call	0x3720


0x3c05:	jmp	0x3aa6


0x3d30:	cmp	byte ptr [rip + 0x20d4c3], 0
0x3d37:	jne	0x3cf3


0x3d39:	jmp	0x3cfa


0x4088:	cmp	byte ptr [rip + 0x20d169], 0
0x408f:	mov	byte ptr [rip + 0x20d166], 1
0x4096:	je	0x4031


0x4098:	jmp	0x4024


0x2ed2:	test	eax, eax
0x2ed4:	jne	0x2d81


0x2eda:	mov	r15, qword ptr [rsp + 0xb0]
0x2ee2:	mov	rax, qword ptr [rsp + 0xa8]
0x2eea:	mov	qword ptr [rsp + 8], r15
0x2eef:	mov	qword ptr [rsp], rax
0x2ef3:	jmp	0x2da0


0x2da0:	lea	r14, [rsp + 0x10]
0x2da5:	mov	rsi, rsp
0x2da8:	mov	rdi, qword ptr [rip + 0x20e3b9]
0x2daf:	mov	rdx, r14
0x2db2:	call	0xbaf0


0x2eb8:	jmp	0x2d8f


0x3175:	jmp	0x310b


0x310b:	mov	edx, r14d
0x310e:	add	dword ptr [rip + 0x20e0c3], 1
0x3115:	mov	eax, dword ptr [rip + 0x20e0c5]
0x311b:	sub	edx, ebx
0x311d:	test	edx, edx
0x311f:	jg	0x30d1


0x2fba:	jmp	0x2f67


0x3075:	mov	ebp, ebx
0x3077:	jmp	0x301a


0x301a:	mov	eax, r12d
0x301d:	sub	eax, ebp
0x301f:	cmp	eax, 1
0x3022:	jg	0x2fe0


0x308a:	jmp	0x3024


0xb90b:	test	eax, eax
0xb90d:	je	0xb967


0xb967:	mov	qword ptr [r13 + 0x30], rbx
0xb96b:	mov	eax, 1
0xb970:	add	rsp, 8
0xb974:	pop	rbx
0xb975:	pop	rbp
0xb976:	pop	r12
0xb978:	pop	r13
0xb97a:	pop	r14
0xb97c:	pop	r15
0xb97e:	ret	


0xb90f:	cmp	byte ptr [rbx], 0
0xb912:	jne	0xb926


0xb914:	lea	r14, [r12 + 9]
0xb919:	cmp	r14, rbx
0xb91c:	jne	0xb980


0xb926:	mov	rdi, rbx
0xb929:	call	0x1ca0


0xb91e:	cmp	byte ptr [r12 + 8], 0
0xb924:	je	0xb980


0xb980:	mov	rdi, rbp
0xb983:	call	0x1ca0


0x3562:	mov	rax, qword ptr [rax]
0x3565:	test	byte ptr [rax + rbp*2 + 1], 0x40
0x356a:	jne	0x3548


0x356c:	jmp	0x3514


0x3548:	add	dword ptr [rip + 0x20dc89], 1
0x354f:	jmp	0x3520


0x3514:	cmp	bl, 8
0x3517:	jne	0x3520


0x3519:	sub	dword ptr [rip + 0x20dcb8], 1
0x3520:	mov	rdi, qword ptr [rip + 0x20dbc1]
0x3527:	mov	rax, qword ptr [rdi + 0x28]
0x352b:	cmp	rax, qword ptr [rdi + 0x30]
0x352f:	jae	0x3580


0x350a:	mov	rax, qword ptr [rax]
0x350d:	test	byte ptr [rax + rbp*2 + 1], 0x40
0x3512:	jne	0x3548


0x330f:	mov	rax, qword ptr [rax]
0x3312:	test	byte ptr [rax + r12*2 + 1], 0x40
0x3318:	jne	0x3400


0x331e:	cmp	byte ptr [rip + 0x20de75], 0
0x3325:	jne	0x3438


0x3400:	mov	byte ptr [rbx], bpl
0x3403:	mov	esi, dword ptr [rip + 0x20ddcb]
0x3409:	mov	eax, 1
0x340e:	mov	edx, 1
0x3413:	jmp	0x3390


0x332b:	cmp	byte ptr [rip + 0x20de67], 0
0x3332:	je	0x3490


0x3438:	lea	rdi, [rsp + 4]
0x343d:	lea	rcx, [rip + 0x8a88]
0x3444:	mov	edx, 4
0x3449:	mov	esi, 1
0x344e:	mov	byte ptr [rbx], 0x5c
0x3451:	movzx	r8d, bpl
0x3455:	xor	eax, eax
0x3457:	call	0x1fa0


0x3490:	cmp	bpl, 8
0x3494:	mov	esi, dword ptr [rip + 0x20dd3a]
0x349a:	je	0x34b0


0x3338:	test	bpl, bpl
0x333b:	js	0x3438


0x34b0:	test	esi, esi
0x34b2:	mov	byte ptr [rbx], 8
0x34b5:	je	0x3420


0x349c:	mov	byte ptr [rbx], bpl
0x349f:	mov	eax, 1
0x34a4:	xor	edx, edx
0x34a6:	jmp	0x3390


0x3341:	xor	ebp, 0x40
0x3344:	mov	byte ptr [rbx], 0x5e
0x3347:	mov	esi, dword ptr [rip + 0x20de87]
0x334d:	mov	byte ptr [rbx + 1], bpl
0x3351:	mov	eax, 2
0x3356:	mov	edx, 2
0x335b:	jmp	0x3390


0x34bb:	mov	ecx, 1
0x34c0:	mov	eax, 1
0x34c5:	mov	edx, 0xffffffff
0x34ca:	jmp	0x33eb


0x33eb:	cmp	ecx, esi
0x33ed:	jl	0x3390


0x9eff:	test	rax, rax
0x9f02:	je	0x9f09


0x9f04:	add	rsp, 8
0x9f08:	ret	


0x41c1:	mov	edi, eax
0x41c3:	jmp	0x40ec


0x40ec:	cmp	edi, 0xa
0x40ef:	je	0x4031


0x4195:	jmp	0x3f3c


0x3f3c:	cmp	eax, 0xa
0x3f3f:	je	0x3eaa


0x3ae0:	jmp	0x3a75


0x3c78:	jmp	0x3b1d


0x3c5c:	mov	edi, eax
0x3c5e:	jmp	0x3bb5


0x3bb5:	cmp	edi, 0xa
0x3bb8:	jne	0x3bf0


0x41cd:	mov	ebp, eax
0x41cf:	jmp	0x3d87


0x3d43:	mov	edi, eax
0x3d45:	jmp	0x3ce5


0x3ce5:	cmp	edi, 0xa
0x3ce8:	jne	0x3d28


0x3c6b:	jmp	0x3b14


0x3b14:	cmp	eax, 0xa
0x3b17:	je	0x3c3a


0x41b5:	mov	ebp, eax
0x41b7:	jmp	0x3fc5


0x3fc5:	cmp	ebp, 0xa
0x3fc8:	jne	0x3d87


0x41a5:	mov	edi, eax
0x41a7:	jmp	0x400f


0x400f:	cmp	edi, 0xa
0x4012:	jne	0x4080


0x3cbc:	cmp	eax, 0xa
0x3cbf:	jne	0x3ca0


0x3c18:	jmp	0x3a5c


0x3a5c:	cmp	eax, 0xc
0x3a5f:	je	0x3af0


0x4125:	mov	ebp, eax
0x4127:	jmp	0x3d77


0x3d77:	cmp	ebp, 0xc
0x3d7a:	mov	r13d, dword ptr [rip + 0x20d453]
0x3d81:	je	0x3fa0


0x5e20:	movzx	ecx, byte ptr [r12 + rbx]
0x5e25:	mov	rdx, qword ptr [rax]
0x5e28:	mov	edx, dword ptr [rdx + rcx*4]
0x5e2b:	mov	byte ptr [rbp + rbx], dl
0x5e2f:	sub	rbx, 1
0x5e33:	cmp	rbx, -1
0x5e37:	jne	0x5e20


0x5e70:	movzx	ecx, byte ptr [r12 + rbx]
0x5e75:	mov	rdx, qword ptr [rax]
0x5e78:	mov	edx, dword ptr [rdx + rcx*4]
0x5e7b:	mov	byte ptr [rbp + rbx], dl
0x5e7f:	sub	rbx, 1
0x5e83:	cmp	rbx, -1
0x5e87:	jne	0x5e70


0x79c3:	test	rax, rax
0x79c6:	je	0x7a1d


0x7a1d:	mov	qword ptr [rip + 0x20981c], rbx
0x7a24:	mov	qword ptr [rip + 0x2096dd], rbx
0x7a2b:	pop	rbx
0x7a2c:	ret	


0x79c8:	lea	r8, [rax + 1]
0x79cc:	mov	rdx, r8
0x79cf:	sub	rdx, rbx
0x79d2:	cmp	rdx, 6
0x79d6:	jle	0x7a1d


0x79d8:	lea	rsi, [rax - 6]
0x79dc:	lea	rdi, [rip + 0x60b5]
0x79e3:	mov	ecx, 7
0x79e8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x79e8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x79ea:	seta	dl
0x79ed:	sbb	dl, 0
0x79f0:	test	dl, dl
0x79f2:	jne	0x7a1d


0x79f4:	lea	rdi, [rip + 0x60a5]
0x79fb:	mov	ecx, 3
0x7a00:	mov	rsi, r8
0x7a03:	mov	rbx, r8
0x7a06:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x7a06:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x7a08:	seta	dl
0x7a0b:	sbb	dl, 0
0x7a0e:	test	dl, dl
0x7a10:	jne	0x7a1d


0x7a12:	lea	rbx, [rax + 4]
0x7a16:	mov	qword ptr [rip + 0x2096c3], rbx
0x7a1d:	mov	qword ptr [rip + 0x20981c], rbx
0x7a24:	mov	qword ptr [rip + 0x2096dd], rbx
0x7a2b:	pop	rbx
0x7a2c:	ret	


0x7a4a:	call	0x1ba0


0x972c:	lea	rsi, [rip + 0x4868]
0x9733:	xor	edi, edi
0x9735:	mov	edx, 5
0x973a:	call	0x1c80


0x9841:	jmp	0x972c


0x9d86:	test	rax, rax
0x9d89:	jne	0x9d90


0x9d8b:	test	rbx, rbx
0x9d8e:	jne	0x9da1


0x9d90:	pop	rbx
0x9d91:	ret	


0x9da1:	call	0x9f60


0xb505:	mov	ebx, eax
0xb507:	jmp	0xb4a0


0xb4a0:	mov	rcx, qword ptr [rsp + 0x18]
0xb4a5:	xor	rcx, qword ptr fs:[0x28]
0xb4ae:	mov	eax, ebx
0xb4b0:	jne	0xb60d


0xb4b6:	add	rsp, 0x50
0xb4ba:	pop	rbx
0xb4bb:	pop	rbp
0xb4bc:	pop	r12
0xb4be:	ret	


0xb60d:	call	0x1cb0


0xb499:	mov	ebx, eax
0xb49b:	nop	dword ptr [rax + rax]
0xb4a0:	mov	rcx, qword ptr [rsp + 0x18]
0xb4a5:	xor	rcx, qword ptr fs:[0x28]
0xb4ae:	mov	eax, ebx
0xb4b0:	jne	0xb60d


0xb55c:	mov	ebx, eax
0xb55e:	jmp	0xb4a0


0xb445:	test	eax, eax
0xb447:	mov	ebx, eax
0xb449:	js	0xb5d8


0xb5d8:	call	0x1bb0


0xb44f:	mov	dword ptr [rip + 0x205f3f], 1
0xb459:	jmp	0xb4a0


0xb56c:	test	eax, eax
0xb56e:	mov	ebx, eax
0xb570:	js	0xb4a0


0xb576:	cmp	dword ptr [rip + 0x205e1b], -1
0xb57d:	jne	0xb4a0


0xb583:	xor	eax, eax
0xb585:	mov	esi, 1
0xb58a:	mov	edi, ebx
0xb58c:	call	0x1c10


0xb591:	test	eax, eax
0xb593:	js	0xb5b1


0xb5b1:	call	0x1bb0


0xb595:	or	eax, 1
0xb598:	mov	esi, 2
0xb59d:	mov	edi, ebx
0xb59f:	mov	edx, eax
0xb5a1:	xor	eax, eax
0xb5a3:	call	0x1c10


0xb5a8:	cmp	eax, -1
0xb5ab:	jne	0xb4a0


0xb623:	mov	ebx, eax
0xb625:	jmp	0xb4a0


0xb64e:	test	eax, eax
0xb650:	je	0xb65a


0xb652:	test	dword ptr [rbx], 0x100
0xb658:	jne	0xb668


0xb668:	mov	rdi, rbx
0xb66b:	mov	edx, 1
0xb670:	xor	esi, esi
0xb672:	call	0xb680


0x4447:	cmp	dword ptr [rip + 0x20cbc2], 0xb
0x444e:	mov	edi, 0xb
0x4453:	cmovae	edi, dword ptr [rip + 0x20cbb6]
0x445a:	mov	edi, edi
0x445c:	add	rdi, 1
0x4460:	call	0x9d10


0x4478:	cmp	dword ptr [rip + 0x20cbbd], 8
0x447f:	mov	edi, 8
0x4484:	cmovge	edi, dword ptr [rip + 0x20cbb1]
0x448b:	movsxd	rdi, edi
0x448e:	call	0x9d10


0x923d:	mov	qword ptr [rip + 0x207e7c], rbx
0x9244:	pop	rbx
0x9245:	mov	dword ptr [rip + 0x207e69], 1
0x924f:	pop	rbp
0x9250:	pop	r12
0x9252:	ret	


0x9217:	mov	qword ptr [rip + 0x207eae], 0x100
0x9222:	mov	qword ptr [rip + 0x207eaf], rbx
0x9229:	lea	rbx, [rip + 0x207ea0]
0x9230:	cmp	r12, rbx
0x9233:	je	0x9244


0x9d9d:	xor	eax, eax
0x9d9f:	pop	rbx
0x9da0:	ret	


0x91fc:	cmp	rbx, rbp
0x91ff:	jne	0x91f0


0x91f0:	mov	rdi, qword ptr [rbx]
0x91f3:	add	rbx, 0x10
0x91f7:	call	0x1b90


0xb7b8:	test	rbx, rbx
0xb7bb:	mov	rdi, rbx
0xb7be:	jne	0xb7b0


0xb7c0:	pop	rbx
0xb7c1:	ret	


0xb7b0:	mov	rbx, qword ptr [rdi]
0xb7b3:	call	0x1b90


0xbcc8:	jmp	0xbc1e


0xbc1e:	mov	rcx, qword ptr [rsp + 0x48]
0xbc23:	xor	rcx, qword ptr fs:[0x28]
0xbc2c:	jne	0xbcdc


0xbc32:	add	rsp, 0x50
0xbc36:	pop	rbx
0xbc37:	pop	rbp
0xbc38:	pop	r12
0xbc3a:	ret	


0xbcdc:	call	0x1cb0


0x1ff5:	lea	rsi, [rip + 0x9ee9]
0x1ffc:	mov	edi, 6
0x2001:	call	0x1ea0


0x345c:	movzx	eax, byte ptr [rsp + 4]
0x3461:	mov	esi, dword ptr [rip + 0x20dd6d]
0x3467:	mov	edx, 4
0x346c:	mov	byte ptr [rbx + 1], al
0x346f:	movzx	eax, byte ptr [rsp + 5]
0x3474:	mov	byte ptr [rbx + 2], al
0x3477:	movzx	eax, byte ptr [rsp + 6]
0x347c:	mov	byte ptr [rbx + 3], al
0x347f:	mov	eax, 4
0x3484:	jmp	0x3390


0x37e6:	mov	edx, dword ptr [rip + 0x20d824]
0x37ec:	add	dword ptr [rip + 0x20d9bd], 1
0x37f3:	sub	eax, edx
0x37f5:	movsxd	rbx, eax
0x37f8:	add	rbx, qword ptr [rip + 0x20d9a1]
0x37ff:	test	edx, edx
0x3801:	jle	0x3820


0x3820:	cmp	dword ptr [rip + 0x20d809], 1
0x3827:	movsx	edi, byte ptr [rip + 0x20d7f2]
0x382e:	jg	0x3880


0x3803:	lea	eax, [rdx - 1]
0x3806:	lea	r12, [rbx + rax + 1]
0x380b:	nop	dword ptr [rax + rax]
0x3810:	add	rbx, 1
0x3814:	movsx	edi, byte ptr [rbx - 1]
0x3818:	call	qword ptr [rbp]


0x3830:	call	qword ptr [rbp]


0x3880:	cmp	dil, 9
0x3884:	je	0x388b


0x388b:	mov	eax, dword ptr [rip + 0x20d917]
0x3891:	sub	eax, dword ptr [rip + 0x20d779]
0x3897:	test	eax, eax
0x3899:	lea	ebx, [rax - 1]
0x389c:	jle	0x3857


0x3886:	call	qword ptr [rbp]


0x3857:	cmp	byte ptr [rip + 0x20d98f], 0
0x385e:	je	0x3875


0x3875:	pop	rbx
0x3876:	pop	rbp
0x3877:	pop	r12
0x3879:	ret	


0x3860:	cmp	byte ptr [rip + 0x20d998], 0
0x3867:	jne	0x3875


0x3869:	mov	eax, dword ptr [rip + 0x20d939]
0x386f:	add	dword ptr [rip + 0x20d95f], eax
0x3875:	pop	rbx
0x3876:	pop	rbp
0x3877:	pop	r12
0x3879:	ret	


0x4111:	jmp	0x3eeb


0x5a1c:	test	rax, rax
0x5a1f:	mov	rbx, rax
0x5a22:	je	0x5a31


0x5a31:	mov	rax, rbx
0x5a34:	pop	rbx
0x5a35:	pop	rbp
0x5a36:	pop	r12
0x5a38:	ret	


0x5a24:	mov	rdi, rax
0x5a27:	call	0x1df0


0x4273:	mov	rdi, rax
0x4276:	mov	qword ptr [rbx], rax
0x4279:	test	rdi, rdi
0x427c:	jne	0x4233


0x427e:	movzx	ebx, byte ptr [rip + 0x20cf0c]
0x4285:	mov	byte ptr [rip + 0x20cf44], 1
0x428c:	test	bl, bl
0x428e:	je	0x42a0


0x4233:	mov	esi, 2
0x4238:	call	0x59e0


0x42a0:	mov	rdx, rbp
0x42a3:	mov	esi, 3
0x42a8:	call	0x94f0


0x4290:	xor	ebx, ebx
0x4292:	add	rsp, 8
0x4296:	mov	eax, ebx
0x4298:	pop	rbx
0x4299:	pop	rbp
0x429a:	ret	


0x423d:	mov	dword ptr [rbx + 0x10], 0
0x4244:	mov	byte ptr [rbx + 0x39], 0
0x4248:	mov	ebx, 1
0x424d:	add	dword ptr [rip + 0x20cf40], 1
0x4254:	add	rsp, 8
0x4258:	mov	eax, ebx
0x425a:	pop	rbx
0x425b:	pop	rbp
0x425c:	ret	


0x5ade:	mov	rcx, qword ptr [rsp + 0x18]
0x5ae3:	xor	rcx, qword ptr fs:[0x28]
0x5aec:	mov	rax, qword ptr [rsp]
0x5af0:	mov	rdx, qword ptr [rsp + 8]
0x5af5:	jne	0x5afc


0x5af7:	add	rsp, 0x28
0x5afb:	ret	


0x5afc:	call	0x1cb0


0x2006:	lea	rsi, [rip + 0x9fb3]
0x200d:	lea	rdi, [rip + 0x9f65]
0x2014:	call	0x1c70


0x1c70:	jmp	qword ptr [rip + 0x20f1b2]




0x5b1b:	mov	rdx, rax
0x5b1e:	mov	eax, 1
0x5b23:	test	rdx, rdx
0x5b26:	je	0x5b45


0x5b45:	add	rsp, 8
0x5b49:	ret	


0x5b28:	lea	rdi, [rip + 0x7d1e]
0x5b2f:	mov	ecx, 2
0x5b34:	mov	rsi, rdx
0x5b37:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5b37:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5b39:	seta	cl
0x5b3c:	sbb	cl, 0
0x5b3f:	xor	eax, eax
0x5b41:	test	cl, cl
0x5b43:	jne	0x5b50


0x5b50:	lea	rdi, [rip + 0x7cf8]
0x5b57:	mov	ecx, 6
0x5b5c:	mov	rsi, rdx
0x5b5f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5b5f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5b61:	seta	al
0x5b64:	sbb	al, 0
0x5b66:	test	al, al
0x5b68:	setne	al
0x5b6b:	add	rsp, 8
0x5b6f:	ret	


0x5c3e:	cmp	rax, 1
0x5c42:	jbe	0x5d78


0x5d78:	xor	ebp, ebp
0x5d7a:	cmp	rbx, r13
0x5d7d:	jae	0x5d3d


0x5c48:	xor	ebp, ebp
0x5c4a:	cmp	rbx, r13
0x5c4d:	jae	0x5d3d


0x5d7f:	call	0x1f90


0x5d3d:	mov	rsi, qword ptr [rsp + 0x28]
0x5d42:	xor	rsi, qword ptr fs:[0x28]
0x5d4b:	mov	eax, ebp
0x5d4d:	jne	0x5dca


0x5c53:	lea	r12, [rsp + 0x20]
0x5c58:	lea	r14, [rsp + 0x1c]
0x5c5d:	jmp	0x5c7b


0x5d4f:	add	rsp, 0x38
0x5d53:	pop	rbx
0x5d54:	pop	rbp
0x5d55:	pop	r12
0x5d57:	pop	r13
0x5d59:	pop	r14
0x5d5b:	pop	r15
0x5d5d:	ret	


0x5dca:	call	0x1cb0


0x5c7b:	movzx	eax, byte ptr [rbx]
0x5c7e:	cmp	al, 0x3f
0x5c80:	jle	0x5c60


0x5c60:	cmp	al, 0x25
0x5c62:	jge	0x5c6b


0x5c82:	cmp	al, 0x41
0x5c84:	jl	0x5c91


0x5c64:	sub	eax, 0x20
0x5c67:	cmp	al, 3
0x5c69:	ja	0x5c91


0x5c6b:	add	rbx, 1
0x5c6f:	add	ebp, 1
0x5c72:	cmp	rbx, r13
0x5c75:	jae	0x5d3d


0x5c91:	mov	qword ptr [r12], 0
0x5c99:	jmp	0x5cc0


0x5c86:	cmp	al, 0x5f
0x5c88:	jle	0x5c6b


0x5cc0:	mov	rdx, r13
0x5cc3:	mov	rcx, r12
0x5cc6:	mov	rsi, rbx
0x5cc9:	sub	rdx, rbx
0x5ccc:	mov	rdi, r14
0x5ccf:	call	0xb6e0


0x5c8a:	sub	eax, 0x61
0x5c8d:	cmp	al, 0x1d
0x5c8f:	jbe	0x5c6b


0x5d84:	mov	edx, dword ptr [rsp + 0xc]
0x5d88:	mov	rcx, qword ptr [rax]
0x5d8b:	xor	ebp, ebp
0x5d8d:	and	edx, 2
0x5d90:	add	rbx, 1
0x5d94:	movzx	eax, byte ptr [rbx - 1]
0x5d98:	movzx	eax, word ptr [rcx + rax*2]
0x5d9c:	test	ah, 0x40
0x5d9f:	jne	0x5da9


0x5da1:	test	edx, edx
0x5da3:	jne	0x5d38


0x5da9:	cmp	ebp, 0x7fffffff
0x5daf:	je	0x5d3d


0x5da5:	test	al, 2
0x5da7:	jne	0x5db4


0x5d38:	mov	ebp, 0xffffffff
0x5d3d:	mov	rsi, qword ptr [rsp + 0x28]
0x5d42:	xor	rsi, qword ptr fs:[0x28]
0x5d4b:	mov	eax, ebp
0x5d4d:	jne	0x5dca


0x5db1:	add	ebp, 1
0x5db4:	cmp	r13, rbx
0x5db7:	jne	0x5d90


0x5db4:	cmp	r13, rbx
0x5db7:	jne	0x5d90


0x5db9:	jmp	0x5d3d


0x5d90:	add	rbx, 1
0x5d94:	movzx	eax, byte ptr [rbx - 1]
0x5d98:	movzx	eax, word ptr [rcx + rax*2]
0x5d9c:	test	ah, 0x40
0x5d9f:	jne	0x5da9


0x7bb1:	cmp	r15d, 0xa
0x7bb5:	mov	qword ptr [rsp + 0x58], rax
0x7bba:	ja	0x8d6f


0x7bc0:	lea	rcx, [rip + 0x5f59]
0x7bc7:	mov	edx, r15d
0x7bca:	movsxd	rax, dword ptr [rcx + rdx*4]
0x7bce:	add	rax, rcx
0x7bd1:	jmp	rax


0x8d6f:	call	0x1ba0


0xb8a2:	test	rax, rax
0xb8a5:	mov	rbx, rax
0xb8a8:	je	0xb88b


0xb88b:	mov	rax, rbx
0xb88e:	pop	rbx
0xb88f:	pop	rbp
0xb890:	pop	r12
0xb892:	ret	


0xb8aa:	xor	edx, edx
0xb8ac:	mov	qword ptr [rbx], 0
0xb8b3:	mov	rax, rbx
0xb8b6:	mov	word ptr [rbx + 8], dx
0xb8ba:	pop	rbx
0xb8bb:	pop	rbp
0xb8bc:	pop	r12
0xb8be:	ret	


0x9d19:	test	rax, rax
0x9d1c:	jne	0x9d23


0x9d1e:	test	rbx, rbx
0x9d21:	jne	0x9d25


0x9d23:	pop	rbx
0x9d24:	ret	


0x9d25:	call	0x9f60


0x4493:	mov	rdi, qword ptr [rip + 0x20cd8e]
0x449a:	mov	qword ptr [rip + 0x20cca7], rax
0x44a1:	mov	dword ptr [rip + 0x20cce9], 0
0x44ab:	call	0x1b90


0x44b0:	movsxd	rdi, dword ptr [rip + 0x20cb79]
0x44b7:	mov	edx, 0x40
0x44bc:	xor	ecx, ecx
0x44be:	mov	rax, rdx
0x44c1:	mul	rdi
0x44c4:	jo	0x5245


0x5245:	mov	ecx, 1
0x524a:	jmp	0x44ca


0x44ca:	test	rax, rax
0x44cd:	js	0x527d


0x527d:	call	0x9f60


0x44d3:	test	rcx, rcx
0x44d6:	jne	0x527d


0x44dc:	shl	rdi, 6
0x44e0:	call	0x9d10


0x44e5:	cmp	byte ptr [rip + 0x20cd13], 0
0x44ec:	mov	rbx, rax
0x44ef:	mov	qword ptr [rip + 0x20cd32], rax
0x44f6:	je	0x45d7


0x45d7:	test	r12d, r12d
0x45da:	jle	0x5104


0x44fc:	test	r12d, r12d
0x44ff:	je	0x4538


0x5104:	lea	rsi, [rip + 0x6dca]
0x510b:	mov	edx, 5
0x5110:	xor	edi, edi
0x5112:	call	0x1c80


0x45e0:	mov	rdi, qword ptr [rbp]
0x45e4:	mov	rsi, rax
0x45e7:	call	0x41e0


0x4538:	mov	r11d, dword ptr [rip + 0x20caf1]
0x453f:	test	r11d, r11d
0x4542:	jne	0x4fc4


0x4501:	lea	eax, [r12 - 1]
0x4506:	lea	r12, [rbp + rax*8 + 8]
0x450b:	nop	dword ptr [rax + rax]
0x4510:	mov	rdi, qword ptr [rbp]
0x4514:	mov	rsi, rbx
0x4517:	call	0x41e0


0x4548:	add	rsp, 0x18
0x454c:	pop	rbx
0x454d:	pop	rbp
0x454e:	pop	r12
0x4550:	pop	r13
0x4552:	pop	r14
0x4554:	pop	r15
0x4556:	ret	


0x4fc4:	lea	rdi, [rip + 0x6f1a]
0x4fcb:	mov	esi, 0xffffffff
0x4fd0:	call	0x2d30


0x451c:	test	al, al
0x451e:	jne	0x452b


0x4520:	sub	dword ptr [rip + 0x20cb09], 1
0x4527:	sub	rbx, 0x40
0x452b:	add	rbp, 8
0x452f:	add	rbx, 0x40
0x4533:	cmp	rbp, r12
0x4536:	jne	0x4510


0x452b:	add	rbp, 8
0x452f:	add	rbx, 0x40
0x4533:	cmp	rbp, r12
0x4536:	jne	0x4510


0x4510:	mov	rdi, qword ptr [rbp]
0x4514:	mov	rsi, rbx
0x4517:	call	0x41e0


0x45ec:	test	al, al
0x45ee:	je	0x4548


0x45f4:	mov	rdi, qword ptr [rbx]
0x45f7:	call	0x1df0


0x4465:	mov	qword ptr [rip + 0x20cd34], rax
0x446c:	mov	rdi, qword ptr [rip + 0x20ccd5]
0x4473:	call	0x1b90


0x9ec9:	mov	rdx, rbx
0x9ecc:	xor	esi, esi
0x9ece:	mov	rdi, rax
0x9ed1:	pop	rbx
0x9ed2:	jmp	0x1d50


0x9f24:	add	rsp, 8
0x9f28:	mov	rdx, rbx
0x9f2b:	mov	rsi, rbp
0x9f2e:	pop	rbx
0x9f2f:	pop	rbp
0x9f30:	mov	rdi, rax
0x9f33:	jmp	0x1dd0


0xb988:	lea	rdx, [rax + 1]
0xb98c:	mov	r15, rax
0xb98f:	mov	rax, rbx
0xb992:	sub	rax, r14
0xb995:	mov	rcx, rax
0xb998:	not	rcx
0xb99b:	cmp	rcx, rdx
0xb99e:	jb	0xb9d0


0xb9d0:	call	0x1bb0


0xb9a0:	add	rax, rdx
0xb9a3:	cmp	rax, 0x76
0xb9a7:	jbe	0xb9e0


0xb9e0:	mov	rsi, rbp
0xb9e3:	mov	rdi, rbx
0xb9e6:	call	0x1dd0


0xb9a9:	mov	rdi, rbp
0xb9ac:	call	0xb830


0xb9b1:	mov	rbx, rax
0xb9b4:	mov	qword ptr [r12], rax
0xb9b8:	xor	eax, eax
0xb9ba:	test	rbx, rbx
0xb9bd:	je	0xb970


0xb9bf:	mov	byte ptr [rbx + 8], 0
0xb9c3:	add	rbx, 9
0xb9c7:	jmp	0xb967


0xb9eb:	mov	byte ptr [rbx + r15 + 1], 0
0xb9f1:	jmp	0xb967


0xb92e:	lea	rbx, [rbx + rax + 1]
0xb933:	cmp	byte ptr [rbx], 0
0xb936:	jne	0xb900


0xb938:	mov	rax, qword ptr [r12]
0xb93c:	test	rax, rax
0xb93f:	je	0xb900


0xb900:	mov	rsi, rbp
0xb903:	mov	rdi, rbx
0xb906:	call	0x1db0


0xb941:	lea	rbx, [rax + 9]
0xb945:	mov	rsi, rbp
0xb948:	mov	r12, rax
0xb94b:	mov	rdi, rbx
0xb94e:	call	0x1db0


0xb953:	test	eax, eax
0xb955:	jne	0xb90f


0xb957:	jmp	0xb967


0xb841:	lea	rbp, [rax + 1]
0xb845:	mov	edi, 0x76
0xb84a:	cmp	rbp, 0x76
0xb84e:	cmovae	rdi, rbp
0xb852:	add	rdi, 0x11
0xb856:	and	rdi, 0xfffffffffffffff8
0xb85a:	call	0x1e10


0xb85f:	test	rax, rax
0xb862:	mov	rbx, rax
0xb865:	je	0xb88b


0xb867:	mov	qword ptr [rax], 0
0xb86e:	lea	rdi, [rbx + 9]
0xb872:	mov	eax, 1
0xb877:	mov	word ptr [rbx + 8], ax
0xb87b:	mov	rdx, rbp
0xb87e:	mov	rsi, r12
0xb881:	call	0x1dd0


0xb886:	mov	byte ptr [rbx + rbp + 9], 0
0xb88b:	mov	rax, rbx
0xb88e:	pop	rbx
0xb88f:	pop	rbp
0xb890:	pop	r12
0xb892:	ret	


0x2cb9:	cmp	rax, 0x7fffffff
0x2cbf:	ja	0x2cd0


0x2cc1:	mov	qword ptr [rip + 0x20e388], rbx
0x2cc8:	mov	dword ptr [rip + 0x20e4be], eax
0x2cce:	pop	rbx
0x2ccf:	ret	


0x2cd0:	call	0x2b50


0x5de0:	add	rsp, 8
0x5de4:	mov	edx, ebp
0x5de6:	mov	rdi, rbx
0x5de9:	pop	rbx
0x5dea:	pop	rbp
0x5deb:	mov	rsi, rax
0x5dee:	jmp	0x5c10


0x9f49:	mov	rdi, rbx
0x9f4c:	lea	rsi, [rax + 1]
0x9f50:	pop	rbx
0x9f51:	jmp	0x9f10


0x5117:	mov	qword ptr [rbx + 8], rax
0x511b:	mov	rax, qword ptr [rip + 0x20bfce]
0x5122:	lea	rdi, [rip + 0x6dbc]
0x5129:	mov	dword ptr [rbx + 0x10], 0
0x5130:	mov	byte ptr [rbx + 0x39], 0
0x5134:	mov	esi, 0xffffffff
0x5139:	mov	byte ptr [rip + 0x20c0b6], 1
0x5140:	add	dword ptr [rip + 0x20c04d], 1
0x5147:	mov	qword ptr [rbx], rax
0x514a:	call	0x2d30


0x973f:	lea	rdx, [rip + 0x4b7a]
0x9746:	mov	rcx, rax
0x9749:	mov	r8d, 0x7e3
0x974f:	mov	esi, 1
0x9754:	mov	rdi, rbp
0x9757:	xor	eax, eax
0x9759:	call	0x1f50


0x975e:	lea	rsi, [rip + 0x48c3]
0x9765:	xor	edi, edi
0x9767:	mov	edx, 5
0x976c:	call	0x1c80


0x9771:	mov	rsi, rbp
0x9774:	mov	rdi, rax
0x9777:	call	0x1d90


0x1d90:	jmp	qword ptr [rip + 0x20f122]




0x31fc:	mov	r8, rbx
0x31ff:	mov	rcx, rax
0x3202:	mov	edx, 0x114
0x3207:	mov	esi, 1
0x320c:	mov	rdi, rbp
0x320f:	xor	eax, eax
0x3211:	call	0x1fa0


0x3216:	mov	ebx, dword ptr [rip + 0x20df34]
0x321c:	xor	esi, esi
0x321e:	mov	rdi, rbp
0x3221:	call	0x5dd0


0x32b5:	xor	esi, esi
0x32b7:	mov	rdx, rax
0x32ba:	mov	edi, 1
0x32bf:	xor	eax, eax
0x32c1:	call	0x1ee0


0x1ee0:	jmp	qword ptr [rip + 0x20f07a]




0x526c:	xor	esi, esi
0x526e:	mov	rdx, rax
0x5271:	mov	edi, 1
0x5276:	xor	eax, eax
0x5278:	call	0x1ee0


0xaecf:	mov	r9, r12
0xaed2:	mov	rdx, rax
0xaed5:	mov	r8, r13
0xaed8:	mov	rcx, rbx
0xaedb:	xor	esi, esi
0xaedd:	mov	edi, ebp
0xaedf:	xor	eax, eax
0xaee1:	call	0x1ee0


0x4219:	mov	rdi, qword ptr [rip + 0x20ced0]
0x4220:	mov	qword ptr [rbx + 8], rax
0x4224:	mov	byte ptr [rip + 0x20cfcb], 1
0x422b:	test	rdi, rdi
0x422e:	mov	qword ptr [rbx], rdi
0x4231:	je	0x427e


0x52dd:	mov	rdi, qword ptr [rip + 0x20be3c]
0x52e4:	mov	rdx, rax
0x52e7:	mov	rcx, rbx
0x52ea:	mov	esi, 1
0x52ef:	xor	eax, eax
0x52f1:	call	0x1f50


0x52f6:	mov	edi, ebp
0x52f8:	call	0x1f30


0x1f30:	jmp	qword ptr [rip + 0x20f052]




0x530b:	mov	rdx, rbx
0x530e:	mov	rsi, rax
0x5311:	mov	edi, 1
0x5316:	xor	eax, eax
0x5318:	call	0x1eb0


0x1eb0:	jmp	qword ptr [rip + 0x20f092]




0x2b67:	xor	esi, esi
0x2b69:	mov	rdx, rax
0x2b6c:	mov	edi, 1
0x2b71:	xor	eax, eax
0x2b73:	call	0x1ee0


0x2cf7:	lea	rcx, [rip + 0x91e7]
0x2cfe:	mov	rdi, rbx
0x2d01:	mov	r8, rax
0x2d04:	xor	r9d, r9d
0x2d07:	mov	edx, 0x7fffffff
0x2d0c:	mov	esi, 1
0x2d11:	call	0xa0c0


0x9ca4:	lea	rdx, [rip + 0x434c]
0x9cab:	mov	rsi, rax
0x9cae:	mov	edi, 1
0x9cb3:	xor	eax, eax
0x9cb5:	call	0x1eb0


0x9f77:	mov	edi, dword ptr [rip + 0x2070e3]
0x9f7d:	lea	rdx, [rip + 0x38c6]
0x9f84:	mov	rcx, rax
0x9f87:	xor	esi, esi
0x9f89:	xor	eax, eax
0x9f8b:	call	0x1ee0


0x45fc:	mov	rdi, qword ptr [rbp]
0x4600:	mov	esi, eax
0x4602:	call	0x2d30


0x5a2c:	cmp	eax, 2
0x5a2f:	jbe	0x5a40


0x5a40:	mov	edi, eax
0x5a42:	call	0x96e0


0xb6b3:	mov	edx, r12d
0xb6b6:	mov	rsi, rbp
0xb6b9:	mov	edi, eax
0xb6bb:	call	0x1d20


0x1d20:	jmp	qword ptr [rip + 0x20f15a]




0x3945:	test	eax, eax
0x3947:	jne	0x39c0


0x3949:	cmp	byte ptr [rip + 0x20d8af], 0
0x3950:	jne	0x39a0


0x39c0:	mov	rdi, qword ptr [rbx]
0x39c3:	call	0xb340


0x3952:	mov	edx, dword ptr [rip + 0x20d6d8]
0x3958:	mov	rcx, qword ptr [rip + 0x20d8c9]
0x395f:	test	edx, edx
0x3961:	je	0x39ae


0x39a0:	mov	dword ptr [rbx + 0x10], 3
0x39a7:	mov	dword ptr [rbx + 0x30], 0
0x39ae:	sub	dword ptr [rip + 0x20d80b], 1
0x39b5:	pop	rbx
0x39b6:	ret	


0x39ae:	sub	dword ptr [rip + 0x20d80b], 1
0x39b5:	pop	rbx
0x39b6:	ret	


0x3963:	sub	edx, 1
0x3966:	lea	rax, [rcx + 0x10]
0x396a:	shl	rdx, 6
0x396e:	lea	rdx, [rcx + rdx + 0x50]
0x3973:	nop	dword ptr [rax + rax]
0x3978:	mov	ecx, dword ptr [rax + 0x1c]
0x397b:	mov	dword ptr [rax], 3
0x3981:	test	ecx, ecx
0x3983:	jne	0x398c


0x3985:	mov	dword ptr [rax + 0x20], 0
0x398c:	add	rax, 0x40
0x3990:	cmp	rax, rdx
0x3993:	jne	0x3978


0x398c:	add	rax, 0x40
0x3990:	cmp	rax, rdx
0x3993:	jne	0x3978


0x3995:	sub	dword ptr [rip + 0x20d824], 1
0x399c:	pop	rbx
0x399d:	ret	


0x3978:	mov	ecx, dword ptr [rax + 0x1c]
0x397b:	mov	dword ptr [rax], 3
0x3981:	test	ecx, ecx
0x3983:	jne	0x398c


0x3b43:	jmp	0x3aa6


0x4068:	pop	rbx
0x4069:	mov	eax, 1
0x406e:	pop	rbp
0x406f:	pop	r12
0x4071:	pop	r13
0x4073:	pop	r14
0x4075:	ret	


0x59ed:	mov	ecx, ebx
0x59ef:	xor	edx, edx
0x59f1:	xor	esi, esi
0x59f3:	pop	rbx
0x59f4:	mov	edi, eax
0x59f6:	jmp	0x1d70


0xb34c:	test	eax, eax
0xb34e:	mov	rdi, rbx
0xb351:	js	0xb3a7


0xb3a7:	pop	rbx
0xb3a8:	pop	rbp
0xb3a9:	pop	r12
0xb3ab:	jmp	0x1c60


0xb353:	call	0x1e70


0x1c60:	jmp	qword ptr [rip + 0x20f1ba]




0xb358:	test	eax, eax
0xb35a:	jne	0xb388


0xb35c:	mov	rdi, rbx
0xb35f:	call	0xb640


0xb388:	mov	rdi, rbx
0xb38b:	call	0x1df0


0xb390:	xor	esi, esi
0xb392:	mov	edx, 1
0xb397:	mov	edi, eax
0xb399:	call	0x1d20


0xb717:	cmp	rax, -3
0xb71b:	mov	rbp, rax
0xb71e:	jbe	0xb740


0xb740:	mov	rdx, qword ptr [rsp + 8]
0xb745:	xor	rdx, qword ptr fs:[0x28]
0xb74e:	mov	rax, rbp
0xb751:	jne	0xb75e


0xb720:	test	r12, r12
0xb723:	je	0xb740


0xb753:	add	rsp, 0x18
0xb757:	pop	rbx
0xb758:	pop	rbp
0xb759:	pop	r12
0xb75b:	pop	r13
0xb75d:	ret	


0xb75e:	call	0x1cb0


0xb725:	xor	edi, edi
0xb727:	call	0x5b10


0xb72c:	test	al, al
0xb72e:	jne	0xb740


0xb730:	movzx	eax, byte ptr [r13]
0xb735:	mov	ebp, 1
0xb73a:	mov	dword ptr [rbx], eax
0xb73c:	nop	dword ptr [rax]
0xb740:	mov	rdx, qword ptr [rsp + 8]
0xb745:	xor	rdx, qword ptr fs:[0x28]
0xb74e:	mov	rax, rbp
0xb751:	jne	0xb75e


0x5cd4:	cmp	rax, -1
0x5cd8:	mov	r15, rax
0x5cdb:	je	0x5d28


0x5d28:	test	byte ptr [rsp + 0xc], 1
0x5d2d:	je	0x5c6b


0x5cdd:	cmp	rax, -2
0x5ce1:	je	0x5d60


0x5d60:	test	byte ptr [rsp + 0xc], 1
0x5d65:	jne	0x5d38


0x5ce3:	mov	edi, dword ptr [rsp + 0x1c]
0x5ce7:	test	rax, rax
0x5cea:	mov	eax, 1
0x5cef:	cmove	r15, rax
0x5cf3:	call	0x1e00


0x5d67:	add	ebp, 1
0x5d6a:	mov	rbx, r13
0x5d6d:	jmp	0x5c72


0x1e00:	jmp	qword ptr [rip + 0x20f0ea]


0x5c72:	cmp	rbx, r13
0x5c75:	jae	0x5d3d




0xb9d5:	mov	dword ptr [rax], 0xc
0xb9db:	xor	eax, eax
0xb9dd:	jmp	0xb970


0xb5b6:	mov	r12d, dword ptr [rax]
0xb5b9:	mov	rbp, rax
0xb5bc:	mov	edi, ebx
0xb5be:	call	0x1d60


0x1d60:	jmp	qword ptr [rip + 0x20f13a]




0xb5dd:	cmp	dword ptr [rax], 0x16
0xb5e0:	jne	0xb44f


0xb5e6:	xor	esi, esi
0xb5e8:	xor	eax, eax
0xb5ea:	mov	edx, r12d
0xb5ed:	mov	edi, ebp
0xb5ef:	call	0x1c10


0xb5f4:	test	eax, eax
0xb5f6:	mov	ebx, eax
0xb5f8:	js	0xb4a0


0xb5fe:	mov	dword ptr [rip + 0x205d90], 0xffffffff
0xb608:	jmp	0xb583


0xa136:	xor	ecx, ecx
0xa138:	mov	edx, ebp
0xa13a:	mov	dword ptr [rax], 0
0xa140:	mov	rsi, rbx
0xa143:	mov	rdi, r12
0xa146:	mov	r13, rax
0xa149:	call	0x1c50


0x1c50:	jmp	qword ptr [rip + 0x20f1c2]




0xa7f6:	mov	edx, ebp
0xa7f8:	mov	dword ptr [rax], 0
0xa7fe:	mov	rsi, rbx
0xa801:	mov	rdi, r12
0xa804:	mov	r13, rax
0xa807:	call	0x1dc0


0x1dc0:	jmp	qword ptr [rip + 0x20f10a]




0xaf68:	mov	dword ptr [rax], 0
0xaf6e:	mov	r12, rax
0xaf71:	movzx	ebx, byte ptr [rbp]
0xaf75:	call	0x1f90


0xaf7a:	mov	edx, dword ptr [rsp + 8]
0xaf7e:	mov	rsi, qword ptr [rax]
0xaf81:	mov	rax, rbp
0xaf84:	jmp	0xaf97


0xaf97:	movzx	ecx, bl
0xaf9a:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0xaf9f:	jne	0xaf90


0xafa1:	cmp	bl, 0x2d
0xafa4:	je	0xaff8


0xaf90:	add	rax, 1
0xaf94:	movzx	ebx, byte ptr [rax]
0xaf97:	movzx	ecx, bl
0xaf9a:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0xaf9f:	jne	0xaf90


0xaff8:	mov	ebp, 4
0xaffd:	mov	rdi, qword ptr [rsp + 0x18]
0xb002:	xor	rdi, qword ptr fs:[0x28]
0xb00b:	mov	eax, ebp
0xb00d:	jne	0xb2a0


0xafa6:	xor	ecx, ecx
0xafa8:	mov	rsi, r15
0xafab:	mov	rdi, rbp
0xafae:	call	0x1d40


0xb013:	add	rsp, 0x28
0xb017:	pop	rbx
0xb018:	pop	rbp
0xb019:	pop	r12
0xb01b:	pop	r13
0xb01d:	pop	r14
0xb01f:	pop	r15
0xb021:	ret	


0xb2a0:	call	0x1cb0


0x1d40:	jmp	qword ptr [rip + 0x20f14a]




0x2bcd:	test	eax, 0xfffffffd
0x2bd2:	jne	0x2c88


0x2bd8:	mov	rdi, qword ptr [rsp]
0x2bdc:	cmp	rdi, rbx
0x2bdf:	je	0x2c58


0x2c88:	lea	rcx, [rip + 0x20db51]
0x2c8f:	movsx	edx, r13b
0x2c93:	mov	r8, rbx
0x2c96:	mov	esi, r14d
0x2c99:	mov	edi, eax
0x2c9b:	call	0xae70


0x2c58:	xor	eax, eax
0x2c5a:	mov	rsi, qword ptr [rsp + 0x18]
0x2c5f:	xor	rsi, qword ptr fs:[0x28]
0x2c68:	jne	0x2ca0


0x2be1:	cmp	qword ptr [rsp + 8], 0
0x2be7:	je	0x2c58


0x2c6a:	add	rsp, 0x20
0x2c6e:	pop	rbx
0x2c6f:	pop	rbp
0x2c70:	pop	r12
0x2c72:	pop	r13
0x2c74:	pop	r14
0x2c76:	ret	


0x2ca0:	call	0x1cb0


0x2be9:	movzx	eax, byte ptr [rdi]
0x2bec:	cmp	al, 0x3a
0x2bee:	je	0x2c18


0x2c18:	lea	rbp, [rdi + 1]
0x2c1c:	lea	rcx, [rsp + 0x10]
0x2c21:	lea	r8, [rip + 0x92bd]
0x2c28:	mov	edx, 0xa
0x2c2d:	mov	rsi, r12
0x2c30:	mov	rdi, rbp
0x2c33:	call	0xaf20


0x2bf0:	test	al, al
0x2bf2:	jne	0x2c58


0x2bf4:	mov	rax, qword ptr [rsp + 8]
0x2bf9:	mov	qword ptr [rip + 0x20e5c8], rax
0x2c00:	mov	rax, qword ptr [rsp + 0x10]
0x2c05:	mov	qword ptr [rip + 0x20e41c], rax
0x2c0c:	mov	eax, 1
0x2c11:	jmp	0x2c5a


0x2c5a:	mov	rsi, qword ptr [rsp + 0x18]
0x2c5f:	xor	rsi, qword ptr fs:[0x28]
0x2c68:	jne	0x2ca0


0x2c38:	test	eax, eax
0x2c3a:	jne	0x2c88


0x2c3c:	mov	rax, qword ptr [rsp]
0x2c40:	cmp	rax, rbp
0x2c43:	je	0x2c58


0x2c45:	mov	rdx, qword ptr [rsp + 8]
0x2c4a:	cmp	qword ptr [rsp + 0x10], rdx
0x2c4f:	jae	0x2c80


0x2c80:	movzx	eax, byte ptr [rax]
0x2c83:	jmp	0x2bf0


0x8da1:	mov	r13, rax
0x8da4:	mov	eax, dword ptr [rax]
0x8da6:	test	r15d, r15d
0x8da9:	mov	rbx, qword ptr [rip + 0x208310]
0x8db0:	mov	dword ptr [rsp + 0x18], eax
0x8db4:	js	0x8f21


0x8f21:	call	0x1ba0


0x8dba:	cmp	dword ptr [rip + 0x2082f7], r15d
0x8dc1:	jg	0x8e25


0x8dc3:	cmp	r15d, 0x7fffffff
0x8dca:	je	0x8f26


0x8e25:	mov	eax, dword ptr [rbp + 4]
0x8e28:	shl	r15, 4
0x8e2c:	sub	rsp, 8
0x8e30:	add	rbx, r15
0x8e33:	lea	r15, [rbp + 8]
0x8e37:	mov	r8d, dword ptr [rbp]
0x8e3b:	mov	r11, qword ptr [rbx]
0x8e3e:	mov	r12, qword ptr [rbx + 8]
0x8e42:	mov	rcx, r14
0x8e45:	or	eax, 1
0x8e48:	mov	dword ptr [rsp + 0x24], eax
0x8e4c:	push	qword ptr [rbp + 0x30]
0x8e4f:	mov	r9d, eax
0x8e52:	push	qword ptr [rbp + 0x28]
0x8e55:	push	r15
0x8e57:	mov	rsi, r11
0x8e5a:	mov	rdx, qword ptr [rsp + 0x28]
0x8e5f:	mov	rdi, r12
0x8e62:	mov	qword ptr [rsp + 0x30], r11
0x8e67:	call	0x7b40


0x8f26:	call	0x9f60


0x8dd0:	lea	r12d, [r15 + 1]
0x8dd4:	lea	rax, [rip + 0x2082f5]
0x8ddb:	movsxd	rsi, r12d
0x8dde:	shl	rsi, 4
0x8de2:	cmp	rbx, rax
0x8de5:	je	0x8f00


0x8f00:	xor	edi, edi
0x8f02:	call	0x9d70


0x8deb:	mov	rdi, rbx
0x8dee:	call	0x9d70


0x8df3:	mov	rbx, rax
0x8df6:	mov	qword ptr [rip + 0x2082c3], rax
0x8dfd:	movsxd	rdi, dword ptr [rip + 0x2082b4]
0x8e04:	mov	edx, r12d
0x8e07:	xor	esi, esi
0x8e09:	sub	edx, edi
0x8e0b:	shl	rdi, 4
0x8e0f:	movsxd	rdx, edx
0x8e12:	add	rdi, rbx
0x8e15:	shl	rdx, 4
0x8e19:	call	0x1d50


0x8e1e:	mov	dword ptr [rip + 0x208293], r12d
0x8e25:	mov	eax, dword ptr [rbp + 4]
0x8e28:	shl	r15, 4
0x8e2c:	sub	rsp, 8
0x8e30:	add	rbx, r15
0x8e33:	lea	r15, [rbp + 8]
0x8e37:	mov	r8d, dword ptr [rbp]
0x8e3b:	mov	r11, qword ptr [rbx]
0x8e3e:	mov	r12, qword ptr [rbx + 8]
0x8e42:	mov	rcx, r14
0x8e45:	or	eax, 1
0x8e48:	mov	dword ptr [rsp + 0x24], eax
0x8e4c:	push	qword ptr [rbp + 0x30]
0x8e4f:	mov	r9d, eax
0x8e52:	push	qword ptr [rbp + 0x28]
0x8e55:	push	r15
0x8e57:	mov	rsi, r11
0x8e5a:	mov	rdx, qword ptr [rsp + 0x28]
0x8e5f:	mov	rdi, r12
0x8e62:	mov	qword ptr [rsp + 0x30], r11
0x8e67:	call	0x7b40


0x8f07:	movdqa	xmm0, xmmword ptr [rip + 0x2081c1]
0x8f0f:	mov	rbx, rax
0x8f12:	mov	qword ptr [rip + 0x2081a7], rax
0x8f19:	movups	xmmword ptr [rax], xmm0
0x8f1c:	jmp	0x8dfd


0x8dfd:	movsxd	rdi, dword ptr [rip + 0x2082b4]
0x8e04:	mov	edx, r12d
0x8e07:	xor	esi, esi
0x8e09:	sub	edx, edi
0x8e0b:	shl	rdi, 4
0x8e0f:	movsxd	rdx, edx
0x8e12:	add	rdi, rbx
0x8e15:	shl	rdx, 4
0x8e19:	call	0x1d50


0x8f3c:	mov	r12d, dword ptr [rax]
0x8f3f:	mov	rbp, rax
0x8f42:	lea	rax, [rip + 0x208417]
0x8f49:	test	rbx, rbx
0x8f4c:	mov	esi, 0x38
0x8f51:	cmove	rbx, rax
0x8f55:	mov	rdi, rbx
0x8f58:	call	0x9f10


0x9072:	mov	r12d, dword ptr [rax]
0x9075:	mov	rbp, rax
0x9078:	lea	rax, [rbx + 8]
0x907c:	sub	rsp, 8
0x9080:	mov	r9d, dword ptr [rbx + 4]
0x9084:	push	qword ptr [rbx + 0x30]
0x9087:	mov	r8d, dword ptr [rbx]
0x908a:	push	qword ptr [rbx + 0x28]
0x908d:	mov	rdx, r15
0x9090:	push	rax
0x9091:	mov	rcx, qword ptr [rsp + 0x28]
0x9096:	mov	rsi, r14
0x9099:	mov	rdi, r13
0x909c:	call	0x7b40


0x90ef:	test	r12, r12
0x90f2:	mov	r13, rax
0x90f5:	mov	eax, dword ptr [rax]
0x90f7:	sete	bpl
0x90fb:	or	ebp, dword ptr [rbx + 4]
0x90fe:	lea	r10, [rbx + 8]
0x9102:	sub	rsp, 8
0x9106:	mov	r8d, dword ptr [rbx]
0x9109:	mov	rcx, r15
0x910c:	mov	dword ptr [rsp + 0x14], eax
0x9110:	push	qword ptr [rbx + 0x30]
0x9113:	mov	rdx, r14
0x9116:	push	qword ptr [rbx + 0x28]
0x9119:	push	r10
0x911b:	xor	esi, esi
0x911d:	mov	r9d, ebp
0x9120:	xor	edi, edi
0x9122:	mov	qword ptr [rsp + 0x40], r10
0x9127:	call	0x7b40


0xb7e2:	cmp	byte ptr [rbp + 8], 0
0xb7e6:	mov	rbx, rax
0xb7e9:	mov	r12d, dword ptr [rax]
0xb7ec:	lea	rdi, [rbp + 9]
0xb7f0:	jne	0xb7f4


0xb7f2:	xor	edi, edi
0xb7f4:	call	0xb770


0xb7f4:	call	0xb770


0xb7f9:	test	eax, eax
0xb7fb:	je	0xb820


0xb820:	call	0x1de0


0xb7fd:	mov	r12d, dword ptr [rbx]
0xb800:	xor	r13d, r13d
0xb803:	mov	rdi, rbp
0xb806:	call	0xb7a0


0x1de0:	jmp	qword ptr [rip + 0x20f0fa]




0xb80b:	mov	dword ptr [rbx], r12d
0xb80e:	add	rsp, 8
0xb812:	mov	eax, r13d
0xb815:	pop	rbx
0xb816:	pop	rbp
0xb817:	pop	r12
0xb819:	pop	r13
0xb81b:	ret	


0xba17:	test	rax, rax
0xba1a:	mov	rbx, rax
0xba1d:	je	0xbab8


0xbab8:	cmp	byte ptr [rbp + 8], 0
0xbabc:	mov	r12d, 1
0xbac2:	jne	0xba29


0xba23:	cmp	byte ptr [rbp + 8], 0
0xba27:	jne	0xba90


0xbac8:	add	rsp, 0x10
0xbacc:	mov	rax, r12
0xbacf:	pop	rbx
0xbad0:	pop	rbp
0xbad1:	pop	r12
0xbad3:	ret	


0xba29:	mov	rdi, rbx
0xba2c:	call	0xb830


0xba90:	lea	rdi, [rbp + 9]
0xba94:	mov	rsi, rax
0xba97:	mov	r12d, 1
0xba9d:	call	0x1db0


0xbaa2:	test	eax, eax
0xbaa4:	jne	0xba29


0xbaa6:	add	rsp, 0x10
0xbaaa:	mov	rax, r12
0xbaad:	pop	rbx
0xbaae:	pop	rbp
0xbaaf:	pop	r12
0xbab1:	ret	


0xba31:	test	rax, rax
0xba34:	mov	r12, rax
0xba37:	je	0xba7d


0xba7d:	add	rsp, 0x10
0xba81:	mov	rax, r12
0xba84:	pop	rbx
0xba85:	pop	rbp
0xba86:	pop	r12
0xba88:	ret	


0xba39:	xor	edi, edi
0xba3b:	cmp	byte ptr [rbp + 8], 0
0xba3f:	je	0xba45


0xba45:	call	0xb770


0xba41:	lea	rdi, [rbp + 9]
0xba45:	call	0xb770


0xba4a:	test	eax, eax
0xba4c:	je	0xbad8


0xbad8:	call	0x1de0


0xba52:	call	0x1bb0


0xba57:	cmp	r12, 1
0xba5b:	mov	ebx, dword ptr [rax]
0xba5d:	je	0xba78


0xba78:	mov	dword ptr [rax], ebx
0xba7a:	xor	r12d, r12d
0xba7d:	add	rsp, 0x10
0xba81:	mov	rax, r12
0xba84:	pop	rbx
0xba85:	pop	rbp
0xba86:	pop	r12
0xba88:	ret	


0xba5f:	mov	rdi, r12
0xba62:	mov	qword ptr [rsp + 8], rax
0xba67:	call	0xb7a0


0xba6c:	mov	rax, qword ptr [rsp + 8]
0xba71:	nop	dword ptr [rax]
0xba78:	mov	dword ptr [rax], ebx
0xba7a:	xor	r12d, r12d
0xba7d:	add	rsp, 0x10
0xba81:	mov	rax, r12
0xba84:	pop	rbx
0xba85:	pop	rbp
0xba86:	pop	r12
0xba88:	ret	


0xbb0d:	test	rax, rax
0xbb10:	mov	r12, rax
0xbb13:	je	0xbb5e


0xbb5e:	add	rsp, 8
0xbb62:	xor	eax, eax
0xbb64:	pop	rbx
0xbb65:	pop	rbp
0xbb66:	pop	r12
0xbb68:	pop	r13
0xbb6a:	ret	


0xbb15:	mov	rsi, r13
0xbb18:	mov	rdi, rbp
0xbb1b:	call	0x1bd0


0x1bd0:	jmp	qword ptr [rip + 0x20f202]




0x2db7:	test	rax, rax
0x2dba:	je	0x2f00


0x2f00:	mov	edi, 0x21
0x2f05:	call	0x9d10


0x2dc0:	mov	r8, qword ptr [rip + 0x20e3a1]
0x2dc7:	mov	rdx, qword ptr [rip + 0x20e3a2]
0x2dce:	mov	r9d, r15d
0x2dd1:	mov	rcx, r14
0x2dd4:	mov	rsi, -1
0x2ddb:	xor	edi, edi
0x2ddd:	call	0x7960


0x2de2:	lea	r13, [rax + 1]
0x2de6:	mov	rdi, r13
0x2de9:	call	0x9d10


0x2dee:	mov	r8, qword ptr [rip + 0x20e373]
0x2df5:	mov	rdx, qword ptr [rip + 0x20e374]
0x2dfc:	mov	r9d, r15d
0x2dff:	mov	rcx, r14
0x2e02:	mov	rsi, r13
0x2e05:	mov	rdi, rax
0x2e08:	mov	rbp, rax
0x2e0b:	call	0x7960


0x2e10:	mov	rdi, qword ptr [rip + 0x20e349]
0x2e17:	call	0x1b90


0x2e1c:	mov	rax, qword ptr [rip + 0x20e355]
0x2e23:	mov	qword ptr [rip + 0x20e336], rbp
0x2e2a:	test	rax, rax
0x2e2d:	jne	0x2e3d


0x2e2f:	lea	rax, [rip + 0x90af]
0x2e36:	test	r12d, r12d
0x2e39:	cmovns	rax, rbx
0x2e3d:	xor	esi, esi
0x2e3f:	mov	ebx, dword ptr [rip + 0x20e1ff]
0x2e45:	mov	rdi, rbp
0x2e48:	mov	qword ptr [rip + 0x20e309], rax
0x2e4f:	call	0x5dd0


0x2e3d:	xor	esi, esi
0x2e3f:	mov	ebx, dword ptr [rip + 0x20e1ff]
0x2e45:	mov	rdi, rbp
0x2e48:	mov	qword ptr [rip + 0x20e309], rax
0x2e4f:	call	0x5dd0


0x2f0a:	mov	rdi, qword ptr [rsp]
0x2f0e:	lea	rsi, [rsp + 0xe0]
0x2f16:	mov	rbp, rax
0x2f19:	call	0x5b70


0x2f1e:	lea	rcx, [rip + 0x8f6a]
0x2f25:	mov	r8, rax
0x2f28:	mov	r9d, r15d
0x2f2b:	mov	edx, 0x21
0x2f30:	mov	esi, 1
0x2f35:	mov	rdi, rbp
0x2f38:	xor	eax, eax
0x2f3a:	call	0x1fa0


0x2f3f:	jmp	0x2e10


0xbbcc:	test	rax, rax
0xbbcf:	mov	r12, rax
0xbbd2:	je	0xbcd0


0xbcd0:	mov	rax, -1
0xbcd7:	jmp	0xbc1e


0xbbd8:	mov	rdi, rbx
0xbbdb:	call	0x1e60


0x1e60:	jmp	qword ptr [rip + 0x20f0ba]




0xbcfc:	mov	ebx, dword ptr [rbp]
0xbcff:	mov	rdi, rbp
0xbd02:	mov	r12, rax
0xbd05:	call	0xb340


0xbd7e:	test	rax, rax
0xbd81:	je	0xbda0


0xbda0:	lea	rax, [rip + 0x28b4]
0xbda7:	add	rsp, 8
0xbdab:	ret	


0xbd83:	cmp	byte ptr [rax], 0
0xbd86:	lea	rdx, [rip + 0x28ce]
0xbd8d:	cmove	rax, rdx
0xbd91:	add	rsp, 8
0xbd95:	ret	


0x7a60:	movzx	edx, byte ptr [rax]
0x7a63:	and	edx, 0xffffffdf
0x7a66:	cmp	dl, 0x55
0x7a69:	je	0x7ae0


0x7ae0:	movzx	edx, byte ptr [rax + 1]
0x7ae4:	and	edx, 0xffffffdf
0x7ae7:	cmp	dl, 0x54
0x7aea:	jne	0x7a70


0x7a6b:	cmp	dl, 0x47
0x7a6e:	je	0x7a90


0x7aec:	movzx	edx, byte ptr [rax + 2]
0x7af0:	and	edx, 0xffffffdf
0x7af3:	cmp	dl, 0x46
0x7af6:	jne	0x7a70


0x7a70:	lea	rax, [rip + 0x603c]
0x7a77:	lea	rdx, [rip + 0x6aab]
0x7a7e:	cmp	ebx, 9
0x7a81:	cmovne	rax, rdx
0x7a85:	add	rsp, 8
0x7a89:	pop	rbx
0x7a8a:	pop	rbp
0x7a8b:	ret	


0x7a90:	movzx	edx, byte ptr [rax + 1]
0x7a94:	and	edx, 0xffffffdf
0x7a97:	cmp	dl, 0x42
0x7a9a:	jne	0x7a70


0x7afc:	cmp	byte ptr [rax + 3], 0x2d
0x7b00:	jne	0x7a70


0x7a9c:	cmp	byte ptr [rax + 2], 0x31
0x7aa0:	jne	0x7a70


0x7b06:	cmp	byte ptr [rax + 4], 0x38
0x7b0a:	jne	0x7a70


0x7aa2:	cmp	byte ptr [rax + 3], 0x38
0x7aa6:	jne	0x7a70


0x7b10:	cmp	byte ptr [rax + 5], 0
0x7b14:	jne	0x7a70


0x7aa8:	cmp	byte ptr [rax + 4], 0x30
0x7aac:	jne	0x7a70


0x7b1a:	cmp	byte ptr [rbp], 0x60
0x7b1e:	lea	rax, [rip + 0x5f7f]
0x7b25:	lea	rdx, [rip + 0x5f7c]
0x7b2c:	cmovne	rax, rdx
0x7b30:	add	rsp, 8
0x7b34:	pop	rbx
0x7b35:	pop	rbp
0x7b36:	ret	


0x7aae:	cmp	byte ptr [rax + 5], 0x33
0x7ab2:	jne	0x7a70


0x7ab4:	cmp	byte ptr [rax + 6], 0x30
0x7ab8:	jne	0x7a70


0x7aba:	cmp	byte ptr [rax + 7], 0
0x7abe:	jne	0x7a70


0x7ac0:	cmp	byte ptr [rbp], 0x60
0x7ac4:	lea	rax, [rip + 0x5fe1]
0x7acb:	lea	rdx, [rip + 0x5fde]
0x7ad2:	cmovne	rax, rdx
0x7ad6:	add	rsp, 8
0x7ada:	pop	rbx
0x7adb:	pop	rbp
0x7adc:	ret	


0xbbe0:	cmp	rax, -1
0xbbe4:	mov	qword ptr [rsp + 8], rax
0xbbe9:	je	0xbc40


0xbc40:	lea	rsi, [rsp + 0x10]
0xbc45:	lea	rdi, [rsp + 8]
0xbc4a:	call	0x1bd0


0xbbeb:	mov	rsi, rbx
0xbbee:	mov	rdi, rbp
0xbbf1:	call	0xb8c0


0xbbf6:	test	al, al
0xbbf8:	jne	0xbc03


0xbbfa:	mov	qword ptr [rsp + 8], -1
0xbc03:	cmp	r12, 1
0xbc07:	je	0xbc19


0xbc03:	cmp	r12, 1
0xbc07:	je	0xbc19


0xbc19:	mov	rax, qword ptr [rsp + 8]
0xbc1e:	mov	rcx, qword ptr [rsp + 0x48]
0xbc23:	xor	rcx, qword ptr fs:[0x28]
0xbc2c:	jne	0xbcdc


0xbc09:	mov	rdi, r12
0xbc0c:	call	0xb7d0


0xbc11:	test	al, al
0xbc13:	je	0xbcd0


0xbc4f:	test	rax, rax
0xbc52:	je	0xbc03


0xbc54:	mov	eax, dword ptr [rbx]
0xbc56:	mov	edx, dword ptr [rbx + 4]
0xbc59:	xor	eax, dword ptr [rsp + 0x10]
0xbc5d:	xor	edx, dword ptr [rsp + 0x14]
0xbc61:	mov	ecx, dword ptr [rsp + 0x30]
0xbc65:	or	eax, edx
0xbc67:	mov	edx, dword ptr [rbx + 8]
0xbc6a:	xor	edx, dword ptr [rsp + 0x18]
0xbc6e:	or	eax, edx
0xbc70:	mov	edx, dword ptr [rbx + 0xc]
0xbc73:	xor	edx, dword ptr [rsp + 0x1c]
0xbc77:	or	eax, edx
0xbc79:	mov	edx, dword ptr [rbx + 0x10]
0xbc7c:	xor	edx, dword ptr [rsp + 0x20]
0xbc80:	or	eax, edx
0xbc82:	mov	edx, dword ptr [rbx + 0x14]
0xbc85:	xor	edx, dword ptr [rsp + 0x24]
0xbc89:	or	eax, edx
0xbc8b:	mov	edx, dword ptr [rbx + 0x20]
0xbc8e:	test	edx, edx
0xbc90:	sete	dil
0xbc94:	test	ecx, ecx
0xbc96:	sete	sil
0xbc9a:	cmp	dil, sil
0xbc9d:	je	0xbcab


0xbcab:	test	eax, eax
0xbcad:	je	0xbbeb


0xbc9f:	test	edx, edx
0xbca1:	js	0xbcab


0xbcb3:	jmp	0xbc03


0xbca3:	test	ecx, ecx
0xbca5:	jns	0xbc03


0xbb20:	test	rax, rax
0xbb23:	je	0xbb50


0xbb50:	cmp	r12, 1
0xbb54:	je	0xbb5e


0xbb25:	mov	rsi, r13
0xbb28:	mov	rdi, rbx
0xbb2b:	call	0xb8c0


0xbb56:	mov	rdi, r12
0xbb59:	call	0xb7d0


0xbb30:	test	al, al
0xbb32:	je	0xbb50


0xbb34:	cmp	r12, 1
0xbb38:	jne	0xbb85


0xbb3a:	add	rsp, 8
0xbb3e:	mov	rax, r13
0xbb41:	pop	rbx
0xbb42:	pop	rbp
0xbb43:	pop	r12
0xbb45:	pop	r13
0xbb47:	ret	


0xbb85:	mov	rdi, r12
0xbb88:	call	0xb7d0


0xbb8d:	test	al, al
0xbb8f:	jne	0xbb3a


0xbb91:	jmp	0xbb5e


0xbadd:	jmp	0xba7d


0xb825:	mov	r13d, 1
0xb82b:	jmp	0xb803


0xb803:	mov	rdi, rbp
0xb806:	call	0xb7a0


0x8f5d:	mov	dword ptr [rbp], r12d
0x8f61:	pop	rbx
0x8f62:	pop	rbp
0x8f63:	pop	r12
0x8f65:	ret	


0xafb3:	mov	rcx, qword ptr [r15]
0xafb6:	mov	rbx, rax
0xafb9:	cmp	rcx, rbp
0xafbc:	je	0xafe8


0xafe8:	test	r13, r13
0xafeb:	mov	qword ptr [rsp + 8], rcx
0xaff0:	jne	0xb030


0xafbe:	mov	eax, dword ptr [r12]
0xafc2:	test	eax, eax
0xafc4:	je	0xb028


0xb030:	movzx	r12d, byte ptr [rbp]
0xb035:	test	r12b, r12b
0xb038:	je	0xaff8


0xb028:	xor	ebp, ebp
0xb02a:	jmp	0xafd0


0xafc6:	cmp	eax, 0x22
0xafc9:	mov	ebp, 1
0xafce:	jne	0xaff8


0xb03a:	movsx	esi, r12b
0xb03e:	mov	rdi, r13
0xb041:	xor	ebp, ebp
0xb043:	call	0x1ce0


0xafd0:	test	r13, r13
0xafd3:	je	0xafde


0x1ce0:	jmp	qword ptr [rip + 0x20f17a]


0xafde:	mov	qword ptr [r14], rbx
0xafe1:	jmp	0xaffd


0xafd5:	movzx	r12d, byte ptr [rcx]
0xafd9:	test	r12b, r12b
0xafdc:	jne	0xb057




0xaffd:	mov	rdi, qword ptr [rsp + 0x18]
0xb002:	xor	rdi, qword ptr fs:[0x28]
0xb00b:	mov	eax, ebp
0xb00d:	jne	0xb2a0


0xb057:	movsx	esi, r12b
0xb05b:	mov	rdi, r13
0xb05e:	mov	qword ptr [rsp + 8], rcx
0xb063:	call	0x1ce0


0xa80c:	mov	rcx, qword ptr [rbx]
0xa80f:	mov	rbp, rax
0xa812:	cmp	rcx, r12
0xa815:	je	0xa878


0xa878:	test	r15, r15
0xa87b:	je	0xad10


0xa817:	mov	eax, dword ptr [r13]
0xa81b:	test	eax, eax
0xa81d:	jne	0xa860


0xad10:	mov	r12d, 4
0xad16:	jmp	0xa837


0xa881:	movzx	r13d, byte ptr [rcx]
0xa885:	mov	qword ptr [rsp + 8], rcx
0xa88a:	mov	r12d, 4
0xa890:	test	r13b, r13b
0xa893:	je	0xa837


0xa81f:	xor	r12d, r12d
0xa822:	test	r15, r15
0xa825:	je	0xa834


0xa860:	cmp	eax, 0x22
0xa863:	mov	r12d, 4
0xa869:	jne	0xa837


0xa837:	mov	rdi, qword ptr [rsp + 0x18]
0xa83c:	xor	rdi, qword ptr fs:[0x28]
0xa845:	mov	eax, r12d
0xa848:	jne	0xae5e


0xa895:	movsx	esi, r13b
0xa899:	mov	rdi, r15
0xa89c:	call	0x1ce0


0xa834:	mov	qword ptr [r14], rbp
0xa837:	mov	rdi, qword ptr [rsp + 0x18]
0xa83c:	xor	rdi, qword ptr fs:[0x28]
0xa845:	mov	eax, r12d
0xa848:	jne	0xae5e


0xa827:	movzx	r13d, byte ptr [rcx]
0xa82b:	test	r13b, r13b
0xa82e:	jne	0xa8b3


0xa86b:	mov	r12d, 1
0xa871:	jmp	0xa822


0xa84e:	add	rsp, 0x28
0xa852:	pop	rbx
0xa853:	pop	rbp
0xa854:	pop	r12
0xa856:	pop	r13
0xa858:	pop	r14
0xa85a:	pop	r15
0xa85c:	ret	


0xae5e:	call	0x1cb0


0xa8b3:	movsx	esi, r13b
0xa8b7:	mov	rdi, r15
0xa8ba:	mov	qword ptr [rsp + 8], rcx
0xa8bf:	call	0x1ce0


0xa822:	test	r15, r15
0xa825:	je	0xa834


0xa14e:	mov	rcx, qword ptr [rbx]
0xa151:	mov	rbp, rax
0xa154:	cmp	rcx, r12
0xa157:	je	0xa1b8


0xa1b8:	test	r15, r15
0xa1bb:	je	0xa650


0xa159:	mov	eax, dword ptr [r13]
0xa15d:	test	eax, eax
0xa15f:	jne	0xa1a0


0xa650:	mov	r12d, 4
0xa656:	jmp	0xa179


0xa1c1:	movzx	r13d, byte ptr [rcx]
0xa1c5:	mov	qword ptr [rsp + 8], rcx
0xa1ca:	mov	r12d, 4
0xa1d0:	test	r13b, r13b
0xa1d3:	je	0xa179


0xa161:	xor	r12d, r12d
0xa164:	test	r15, r15
0xa167:	je	0xa176


0xa1a0:	cmp	eax, 0x22
0xa1a3:	mov	r12d, 4
0xa1a9:	jne	0xa179


0xa179:	mov	rdi, qword ptr [rsp + 0x18]
0xa17e:	xor	rdi, qword ptr fs:[0x28]
0xa187:	mov	eax, r12d
0xa18a:	jne	0xa79e


0xa1d5:	movsx	esi, r13b
0xa1d9:	mov	rdi, r15
0xa1dc:	call	0x1ce0


0xa176:	mov	qword ptr [r14], rbp
0xa179:	mov	rdi, qword ptr [rsp + 0x18]
0xa17e:	xor	rdi, qword ptr fs:[0x28]
0xa187:	mov	eax, r12d
0xa18a:	jne	0xa79e


0xa169:	movzx	r13d, byte ptr [rcx]
0xa16d:	test	r13b, r13b
0xa170:	jne	0xa1f3


0xa1ab:	mov	r12d, 1
0xa1b1:	jmp	0xa164


0xa190:	add	rsp, 0x28
0xa194:	pop	rbx
0xa195:	pop	rbp
0xa196:	pop	r12
0xa198:	pop	r13
0xa19a:	pop	r14
0xa19c:	pop	r15
0xa19e:	ret	


0xa79e:	call	0x1cb0


0xa1f3:	movsx	esi, r13b
0xa1f7:	mov	rdi, r15
0xa1fa:	mov	qword ptr [rsp + 8], rcx
0xa1ff:	call	0x1ce0


0xa164:	test	r15, r15
0xa167:	je	0xa176


0xb5c3:	mov	ebx, 0xffffffff
0xb5c8:	mov	dword ptr [rbp], r12d
0xb5cc:	jmp	0xb4a0


0x5cf8:	test	eax, eax
0x5cfa:	jns	0x5ca0


0x5cfc:	test	byte ptr [rsp + 0xc], 2
0x5d01:	jne	0x5d38


0x5ca0:	mov	ecx, 0x7fffffff
0x5ca5:	sub	ecx, ebp
0x5ca7:	cmp	ecx, eax
0x5ca9:	jl	0x5dc0


0x5d03:	mov	edi, dword ptr [rsp + 0x1c]
0x5d07:	call	0x1c00


0x5dc0:	mov	ebp, 0x7fffffff
0x5dc5:	jmp	0x5d3d


0x5caf:	add	ebp, eax
0x5cb1:	mov	rdi, r12
0x5cb4:	add	rbx, r15
0x5cb7:	call	0x1f60


0x1c00:	jmp	qword ptr [rip + 0x20f1ea]


0x1f60:	jmp	qword ptr [rip + 0x20f03a]






0xb39e:	cmp	rax, -1
0xb3a2:	jne	0xb35c


0xb3a4:	mov	rdi, rbx
0xb3a7:	pop	rbx
0xb3a8:	pop	rbp
0xb3a9:	pop	r12
0xb3ab:	jmp	0x1c60


0xb6c0:	cmp	rax, -1
0xb6c4:	je	0xb6d2


0xb6d2:	pop	rbx
0xb6d3:	pop	rbp
0xb6d4:	pop	r12
0xb6d6:	ret	


0xb6c6:	and	dword ptr [rbx], 0xffffffef
0xb6c9:	mov	qword ptr [rbx + 0x90], rax
0xb6d0:	xor	eax, eax
0xb6d2:	pop	rbx
0xb6d3:	pop	rbp
0xb6d4:	pop	r12
0xb6d6:	ret	


0x5a47:	test	eax, eax
0x5a49:	mov	r12d, eax
0x5a4c:	js	0x5a88


0x5a88:	call	0x1bb0


0x5a4e:	mov	rdi, rbx
0x5a51:	call	0xb340


0x5a8d:	mov	r12d, dword ptr [rax]
0x5a90:	mov	rbp, rax
0x5a93:	mov	rdi, rbx
0x5a96:	call	0xb340


0x9cba:	lea	rsi, [rip + 0x434c]
0x9cc1:	mov	edx, 5
0x9cc6:	xor	edi, edi
0x9cc8:	call	0x1c80


0x9ccd:	lea	rcx, [rip + 0x3474]
0x9cd4:	lea	rdx, [rip + 0x229a]
0x9cdb:	mov	rsi, rax
0x9cde:	mov	edi, 1
0x9ce3:	xor	eax, eax
0x9ce5:	call	0x1eb0


0x9cea:	mov	rbx, qword ptr [rip + 0x2073f7]
0x9cf1:	lea	rsi, [rip + 0x4548]
0x9cf8:	xor	edi, edi
0x9cfa:	mov	edx, 5
0x9cff:	call	0x1c80


0x9d04:	mov	rsi, rbx
0x9d07:	mov	rdi, rax
0x9d0a:	pop	rbx
0x9d0b:	jmp	0x1d90


0x531d:	mov	rbx, qword ptr [rip + 0x20bdc4]
0x5324:	lea	rsi, [rip + 0x6e7d]
0x532b:	mov	edx, 5
0x5330:	xor	edi, edi
0x5332:	call	0x1c80


0x5337:	mov	rsi, rbx
0x533a:	mov	rdi, rax
0x533d:	call	0x1d90


0x9f90:	call	0x1ba0


0x2b78:	nop	dword ptr [rax + rax]


0x32c6:	call	0x1cb0


0x2e54:	mov	rdi, qword ptr [rip + 0x20e2fd]
0x2e5b:	sub	ebx, eax
0x2e5d:	xor	esi, esi
0x2e5f:	call	0x5dd0


0x2e64:	sub	ebx, eax
0x2e66:	mov	rax, qword ptr [rsp + 0xf8]
0x2e6e:	xor	rax, qword ptr fs:[0x28]
0x2e77:	mov	dword ptr [rip + 0x20e2d3], ebx
0x2e7d:	jne	0x2f44


0x2e83:	add	rsp, 0x108
0x2e8a:	pop	rbx
0x2e8b:	pop	rbp
0x2e8c:	pop	r12
0x2e8e:	pop	r13
0x2e90:	pop	r14
0x2e92:	pop	r15
0x2e94:	ret	


0x2f44:	call	0x1cb0


0x3226:	mov	r8, qword ptr [rip + 0x20df33]
0x322d:	mov	edx, dword ptr [rip + 0x20dfa9]
0x3233:	lea	rcx, [rip + 0x8cab]
0x323a:	sub	ebx, eax
0x323c:	mov	eax, 0
0x3241:	lea	rsi, [rip + 0x8c6d]
0x3248:	cmovs	ebx, eax
0x324b:	lea	rax, [rip + 0x8c78]
0x3252:	sub	rsp, 8
0x3256:	mov	r9d, ebx
0x3259:	push	rbp
0x325a:	mov	edi, 1
0x325f:	sar	r9d, 1
0x3262:	push	rax
0x3263:	sub	ebx, r9d
0x3266:	push	rbx
0x3267:	push	qword ptr [rip + 0x20deeb]
0x326d:	push	rax
0x326e:	xor	eax, eax
0x3270:	call	0x1eb0


0x3275:	add	rsp, 0x30
0x3279:	mov	byte ptr [rip + 0x20df78], 0
0x3280:	mov	dword ptr [rip + 0x20df4e], 0
0x328a:	mov	rax, qword ptr [rsp + 0x118]
0x3292:	xor	rax, qword ptr fs:[0x28]
0x329b:	jne	0x32c6


0x329d:	add	rsp, 0x128
0x32a4:	pop	rbx
0x32a5:	pop	rbp
0x32a6:	ret	


0x5342:	mov	rbx, qword ptr [rip + 0x20bd9f]
0x5349:	lea	rsi, [rip + 0x6e88]
0x5350:	mov	edx, 5
0x5355:	xor	edi, edi
0x5357:	call	0x1c80


0x535c:	mov	rsi, rbx
0x535f:	mov	rdi, rax
0x5362:	call	0x1d90


0x5367:	mov	rbx, qword ptr [rip + 0x20bd7a]
0x536e:	lea	rsi, [rip + 0x6e9b]
0x5375:	mov	edx, 5
0x537a:	xor	edi, edi
0x537c:	call	0x1c80


0x5381:	mov	rsi, rbx
0x5384:	mov	rdi, rax
0x5387:	call	0x1d90


0x538c:	mov	rbx, qword ptr [rip + 0x20bd55]
0x5393:	lea	rsi, [rip + 0x6ec6]
0x539a:	mov	edx, 5
0x539f:	xor	edi, edi
0x53a1:	call	0x1c80


0x53a6:	mov	rsi, rbx
0x53a9:	mov	rdi, rax
0x53ac:	call	0x1d90


0x53b1:	mov	rbx, qword ptr [rip + 0x20bd30]
0x53b8:	lea	rsi, [rip + 0x6ff1]
0x53bf:	mov	edx, 5
0x53c4:	xor	edi, edi
0x53c6:	call	0x1c80


0x53cb:	mov	rsi, rbx
0x53ce:	mov	rdi, rax
0x53d1:	call	0x1d90


0x53d6:	mov	rbx, qword ptr [rip + 0x20bd0b]
0x53dd:	lea	rsi, [rip + 0x70dc]
0x53e4:	mov	edx, 5
0x53e9:	xor	edi, edi
0x53eb:	call	0x1c80


0x53f0:	mov	rsi, rbx
0x53f3:	mov	rdi, rax
0x53f6:	call	0x1d90


0x53fb:	mov	rbx, qword ptr [rip + 0x20bce6]
0x5402:	lea	rsi, [rip + 0x7247]
0x5409:	mov	edx, 5
0x540e:	xor	edi, edi
0x5410:	call	0x1c80


0x5415:	mov	rsi, rbx
0x5418:	mov	rdi, rax
0x541b:	call	0x1d90


0x5420:	mov	rbx, qword ptr [rip + 0x20bcc1]
0x5427:	lea	rsi, [rip + 0x73d2]
0x542e:	mov	edx, 5
0x5433:	xor	edi, edi
0x5435:	call	0x1c80


0x543a:	mov	rsi, rbx
0x543d:	mov	rdi, rax
0x5440:	call	0x1d90


0x5445:	mov	rbx, qword ptr [rip + 0x20bc9c]
0x544c:	lea	rsi, [rip + 0x748d]
0x5453:	mov	edx, 5
0x5458:	xor	edi, edi
0x545a:	call	0x1c80


0x545f:	mov	rsi, rbx
0x5462:	mov	rdi, rax
0x5465:	call	0x1d90


0x546a:	mov	rbx, qword ptr [rip + 0x20bc77]
0x5471:	lea	rsi, [rip + 0x74f8]
0x5478:	mov	edx, 5
0x547d:	xor	edi, edi
0x547f:	call	0x1c80


0x5484:	mov	rsi, rbx
0x5487:	mov	rdi, rax
0x548a:	call	0x1d90


0x548f:	mov	rbx, qword ptr [rip + 0x20bc52]
0x5496:	lea	rsi, [rip + 0x7633]
0x549d:	mov	edx, 5
0x54a2:	xor	edi, edi
0x54a4:	call	0x1c80


0x54a9:	mov	rsi, rbx
0x54ac:	mov	rdi, rax
0x54af:	call	0x1d90


0x54b4:	mov	rbx, qword ptr [rip + 0x20bc2d]
0x54bb:	lea	rsi, [rip + 0x770e]
0x54c2:	mov	edx, 5
0x54c7:	xor	edi, edi
0x54c9:	call	0x1c80


0x54ce:	mov	rsi, rbx
0x54d1:	mov	rdi, rax
0x54d4:	call	0x1d90


0x54d9:	mov	rbx, qword ptr [rip + 0x20bc08]
0x54e0:	lea	rsi, [rip + 0x7831]
0x54e7:	mov	edx, 5
0x54ec:	xor	edi, edi
0x54ee:	call	0x1c80


0x54f3:	mov	rsi, rbx
0x54f6:	mov	rdi, rax
0x54f9:	call	0x1d90


0x54fe:	mov	rbx, qword ptr [rip + 0x20bbe3]
0x5505:	lea	rsi, [rip + 0x78fc]
0x550c:	mov	edx, 5
0x5511:	xor	edi, edi
0x5513:	call	0x1c80


0x5518:	mov	rsi, rbx
0x551b:	mov	rdi, rax
0x551e:	call	0x1d90


0x5523:	mov	rbx, qword ptr [rip + 0x20bbbe]
0x552a:	lea	rsi, [rip + 0x793f]
0x5531:	mov	edx, 5
0x5536:	xor	edi, edi
0x5538:	call	0x1c80


0x553d:	mov	rsi, rbx
0x5540:	mov	rdi, rax
0x5543:	call	0x1d90


0x5548:	mov	rbx, qword ptr [rip + 0x20bb99]
0x554f:	lea	rsi, [rip + 0x7ab2]
0x5556:	mov	edx, 5
0x555b:	xor	edi, edi
0x555d:	call	0x1c80


0x5562:	mov	rsi, rbx
0x5565:	mov	rdi, rax
0x5568:	call	0x1d90


0x556d:	mov	rbx, qword ptr [rip + 0x20bb74]
0x5574:	lea	rsi, [rip + 0x7b65]
0x557b:	mov	edx, 5
0x5580:	xor	edi, edi
0x5582:	call	0x1c80


0x5587:	mov	rsi, rbx
0x558a:	mov	rdi, rax
0x558d:	call	0x1d90


0x5592:	mov	rbx, qword ptr [rip + 0x20bb4f]
0x5599:	lea	rsi, [rip + 0x7b70]
0x55a0:	mov	edx, 5
0x55a5:	xor	edi, edi
0x55a7:	call	0x1c80


0x55ac:	mov	rsi, rbx
0x55af:	mov	rdi, rax
0x55b2:	lea	rbx, [rip + 0x6943]
0x55b9:	call	0x1d90


0x55be:	lea	rax, [rip + 0x693a]
0x55c5:	lea	rcx, [rip + 0x6974]
0x55cc:	mov	qword ptr [rsp + 0x60], 0
0x55d5:	mov	qword ptr [rsp + 0x68], 0
0x55de:	mov	rdx, rsp
0x55e1:	mov	qword ptr [rsp], rax
0x55e5:	lea	rax, [rip + 0x6915]
0x55ec:	mov	qword ptr [rsp + 0x30], rcx
0x55f1:	lea	rcx, [rip + 0x6952]
0x55f8:	mov	qword ptr [rsp + 8], rax
0x55fd:	lea	rax, [rip + 0x6975]
0x5604:	mov	qword ptr [rsp + 0x40], rcx
0x5609:	lea	rcx, [rip + 0x6944]
0x5610:	mov	qword ptr [rsp + 0x10], rax
0x5615:	lea	rax, [rip + 0x68f5]
0x561c:	mov	qword ptr [rsp + 0x50], rcx
0x5621:	mov	qword ptr [rsp + 0x18], rax
0x5626:	lea	rax, [rip + 0x68fa]
0x562d:	mov	qword ptr [rsp + 0x20], rax
0x5632:	lea	rax, [rip + 0x68f8]
0x5639:	mov	qword ptr [rsp + 0x28], rax
0x563e:	mov	qword ptr [rsp + 0x38], rax
0x5643:	mov	qword ptr [rsp + 0x48], rax
0x5648:	mov	qword ptr [rsp + 0x58], rax
0x564d:	nop	dword ptr [rax]
0x5650:	add	rdx, 0x10
0x5654:	mov	rdi, qword ptr [rdx]
0x5657:	test	rdi, rdi
0x565a:	je	0x566f


0x566f:	mov	r12, qword ptr [rdx + 8]
0x5673:	xor	edi, edi
0x5675:	mov	edx, 5
0x567a:	lea	rsi, [rip + 0x68dd]
0x5681:	test	r12, r12
0x5684:	je	0x574b


0x565c:	mov	ecx, 3
0x5661:	mov	rsi, rbx
0x5664:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x574b:	call	0x1c80


0x568a:	call	0x1c80


0x5664:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5666:	seta	al
0x5669:	sbb	al, 0
0x566b:	test	al, al
0x566d:	jne	0x5650


0x5650:	add	rdx, 0x10
0x5654:	mov	rdi, qword ptr [rdx]
0x5657:	test	rdi, rdi
0x565a:	je	0x566f


0x568f:	lea	rcx, [rip + 0x7ab2]
0x5696:	lea	rdx, [rip + 0x68d8]
0x569d:	mov	rsi, rax
0x56a0:	mov	edi, 1
0x56a5:	xor	eax, eax
0x56a7:	call	0x1eb0


0x56ac:	xor	esi, esi
0x56ae:	mov	edi, 5
0x56b3:	call	0x1ea0


0x56b8:	test	rax, rax
0x56bb:	je	0x56d9


0x56d9:	lea	rsi, [rip + 0x68a7]
0x56e0:	xor	edi, edi
0x56e2:	mov	edx, 5
0x56e7:	call	0x1c80


0x56bd:	lea	rsi, [rip + 0x68bf]
0x56c4:	mov	edx, 3
0x56c9:	mov	rdi, rax
0x56cc:	call	0x1bc0


0x1bc0:	jmp	qword ptr [rip + 0x20f20a]




0x56ec:	lea	rcx, [rip + 0x6809]
0x56f3:	lea	rdx, [rip + 0x7a4e]
0x56fa:	mov	rsi, rax
0x56fd:	mov	edi, 1
0x5702:	xor	eax, eax
0x5704:	call	0x1eb0


0x5709:	cmp	r12, rbx
0x570c:	lea	rcx, [rip + 0x6808]
0x5713:	lea	rbx, [rip + 0x67cb]
0x571a:	cmove	rbx, rcx
0x571e:	lea	rsi, [rip + 0x7a93]
0x5725:	xor	edi, edi
0x5727:	mov	edx, 5
0x572c:	call	0x1c80


0x5731:	mov	rcx, rbx
0x5734:	mov	rsi, rax
0x5737:	mov	rdx, r12
0x573a:	mov	edi, 1
0x573f:	xor	eax, eax
0x5741:	call	0x1eb0


0x5746:	jmp	0x52f6


0x5750:	lea	rcx, [rip + 0x79f1]
0x5757:	lea	rdx, [rip + 0x6817]
0x575e:	mov	rsi, rax
0x5761:	mov	edi, 1
0x5766:	xor	eax, eax
0x5768:	call	0x1eb0


0x576d:	xor	esi, esi
0x576f:	mov	edi, 5
0x5774:	call	0x1ea0


0x5779:	test	rax, rax
0x577c:	je	0x5796


0x5796:	lea	rsi, [rip + 0x67ea]
0x579d:	mov	edx, 5
0x57a2:	xor	edi, edi
0x57a4:	lea	r12, [rip + 0x6751]
0x57ab:	lea	rbx, [rip + 0x6769]
0x57b2:	call	0x1c80


0x577e:	lea	rsi, [rip + 0x67fe]
0x5785:	mov	edx, 3
0x578a:	mov	rdi, rax
0x578d:	call	0x1bc0


0x57b7:	lea	rcx, [rip + 0x673e]
0x57be:	lea	rdx, [rip + 0x7983]
0x57c5:	mov	rsi, rax
0x57c8:	mov	edi, 1
0x57cd:	xor	eax, eax
0x57cf:	call	0x1eb0


0x57d4:	jmp	0x571e


0x571e:	lea	rsi, [rip + 0x7a93]
0x5725:	xor	edi, edi
0x5727:	mov	edx, 5
0x572c:	call	0x1c80


0x977c:	cmp	r12, 9
0x9780:	ja	0x9ac0


0x9786:	lea	rdx, [rip + 0x4af7]
0x978d:	movsxd	rax, dword ptr [rdx + r12*4]
0x9791:	add	rax, rdx
0x9794:	jmp	rax


0x9ac0:	mov	r10, qword ptr [rbx + 0x40]
0x9ac4:	mov	r9, qword ptr [rbx + 0x38]
0x9ac8:	mov	edx, 5
0x9acd:	mov	rax, qword ptr [rbx + 0x10]
0x9ad1:	mov	r8, qword ptr [rbx + 8]
0x9ad5:	lea	rsi, [rip + 0x4724]
0x9adc:	mov	r13, qword ptr [rbx + 0x30]
0x9ae0:	mov	r12, qword ptr [rbx + 0x28]
0x9ae4:	mov	r15, qword ptr [rbx + 0x20]
0x9ae8:	mov	r14, qword ptr [rbx + 0x18]
0x9aec:	mov	qword ptr [rsp + 0x18], r10
0x9af1:	mov	qword ptr [rsp + 0x10], r9
0x9af6:	mov	qword ptr [rsp], rax
0x9afa:	mov	qword ptr [rsp + 8], r8
0x9aff:	mov	rbx, qword ptr [rbx]
0x9b02:	jmp	0x9892


0x9892:	xor	edi, edi
0x9894:	call	0x1c80


0x9899:	mov	r10, qword ptr [rsp + 0x18]
0x989e:	push	r10
0x98a0:	jmp	0x97e4


0x97e4:	mov	r9, qword ptr [rsp + 0x18]
0x97e9:	mov	rdx, rax
0x97ec:	mov	rcx, rbx
0x97ef:	mov	esi, 1
0x97f4:	mov	rdi, rbp
0x97f7:	xor	eax, eax
0x97f9:	push	r9
0x97fb:	push	r13
0x97fd:	push	r12
0x97ff:	push	r15
0x9801:	push	r14
0x9803:	mov	r9, qword ptr [rsp + 0x30]
0x9808:	mov	r8, qword ptr [rsp + 0x38]
0x980d:	call	0x1f50


0x9812:	add	rsp, 0x30
0x9816:	add	rsp, 0x28
0x981a:	pop	rbx
0x981b:	pop	rbp
0x981c:	pop	r12
0x981e:	pop	r13
0x9820:	pop	r14
0x9822:	pop	r15
0x9824:	ret	


0x4607:	mov	dword ptr [rbx + 0x2c], 0
0x460e:	mov	esi, dword ptr [rip + 0x20ca1c]
0x4614:	mov	rdx, qword ptr [rbx + 8]
0x4618:	lea	rax, [rbx + 0x40]
0x461c:	mov	rcx, qword ptr [rbx]
0x461f:	cmp	esi, 1
0x4622:	je	0x465a


0x465a:	cmp	byte ptr [rip + 0x20c9eb], 0
0x4661:	mov	eax, dword ptr [rip + 0x20cb2d]
0x4667:	mov	dword ptr [rip + 0x20cb53], eax
0x466d:	jne	0x4fda


0x4624:	sub	esi, 2
0x4627:	add	rsi, 2
0x462b:	shl	rsi, 6
0x462f:	add	rbx, rsi
0x4632:	nop	word ptr [rax + rax]
0x4638:	mov	qword ptr [rax + 8], rdx
0x463c:	mov	qword ptr [rax], rcx
0x463f:	add	rax, 0x40
0x4643:	mov	dword ptr [rax - 0x30], 0
0x464a:	mov	byte ptr [rax - 7], 0
0x464e:	mov	dword ptr [rax - 0x14], 0
0x4655:	cmp	rax, rbx
0x4658:	jne	0x4638


0x4673:	mov	r13, qword ptr [rip + 0x20cb4e]
0x467a:	cmp	r13, 1
0x467e:	ja	0x4e7e


0x4fda:	mov	ebx, dword ptr [rip + 0x20c210]
0x4fe0:	imul	ebx, dword ptr [rip + 0x20c049]
0x4fe7:	jo	0x5236


0x4638:	mov	qword ptr [rax + 8], rdx
0x463c:	mov	qword ptr [rax], rcx
0x463f:	add	rax, 0x40
0x4643:	mov	dword ptr [rax - 0x30], 0
0x464a:	mov	byte ptr [rax - 7], 0
0x464e:	mov	dword ptr [rax - 0x14], 0
0x4655:	cmp	rax, rbx
0x4658:	jne	0x4638


0x4684:	mov	qword ptr [rip + 0x20cb29], 1
0x468f:	movzx	ebx, byte ptr [rip + 0x20cb57]
0x4696:	xor	r8d, r8d
0x4699:	mov	esi, dword ptr [rip + 0x20cb3d]
0x469f:	test	bl, bl
0x46a1:	je	0x46c6


0x4e7e:	mov	r12d, 1
0x4e84:	nop	dword ptr [rax]
0x4e88:	cmp	dword ptr [rip + 0x20c361], 1
0x4e8f:	mov	rbx, qword ptr [rip + 0x20c392]
0x4e96:	mov	r14d, 1
0x4e9c:	mov	eax, dword ptr [rip + 0x20c18e]
0x4ea2:	jle	0x4efb


0x5236:	call	0x2b50


0x4fed:	mov	r12d, ebx
0x4ff0:	add	r12d, 1
0x4ff4:	jo	0x5236


0x46c6:	mov	eax, dword ptr [rip + 0x20cac0]
0x46cc:	mov	r10d, dword ptr [rip + 0x20c95d]
0x46d3:	movzx	r11d, byte ptr [rip + 0x20c971]
0x46db:	mov	r9, qword ptr [rip + 0x20cb46]
0x46e2:	add	esi, eax
0x46e4:	cmp	r10d, 1
0x46e8:	mov	dword ptr [rsp + 8], eax
0x46ec:	mov	rax, r9
0x46ef:	mov	ecx, r11d
0x46f2:	jle	0x51fd


0x46a3:	mov	r8d, dword ptr [rip + 0x20cb3e]
0x46aa:	add	r8d, esi
0x46ad:	cmp	byte ptr [rip + 0x20cb4b], 0
0x46b4:	je	0x46c6


0x4efb:	test	eax, eax
0x4efd:	mov	byte ptr [rip + 0x20c23c], 1
0x4f04:	jle	0x4f7c


0x4ffa:	mov	ebp, dword ptr [rip + 0x20c1e8]
0x5000:	add	ebp, 1
0x5003:	jo	0x5236


0x51fd:	mov	edx, 1
0x5202:	movzx	edi, byte ptr [rip + 0x20bfa3]
0x5209:	jmp	0x47d2


0x46f8:	movzx	eax, byte ptr [rip + 0x20cb00]
0x46ff:	movzx	edi, byte ptr [rip + 0x20caa6]
0x4706:	mov	edx, 1
0x470b:	mov	r15d, dword ptr [rip + 0x20cad6]
0x4712:	lea	r14, [rip - 0x1239]
0x4719:	lea	r13, [rip - 0x9d0]
0x4720:	lea	r12, [rip - 0x1c27]
0x4727:	lea	rbp, [rip - 0x119e]
0x472e:	xor	eax, 1
0x4731:	mov	byte ptr [rsp + 0xf], al
0x4735:	mov	rax, r9
0x4738:	jmp	0x477b


0x46b6:	cmp	byte ptr [rip + 0x20caef], 0
0x46bd:	je	0x46c6


0x4f7c:	call	0x2a80


0x4f06:	mov	ebp, 1
0x4f0b:	jmp	0x4f1b


0x4eee:	add	r14d, 1
0x4ef2:	cmp	r14d, dword ptr [rip + 0x20c2f7]
0x4ef9:	jl	0x4ea8


0x4eac:	mov	ebp, 1
0x4eb1:	jmp	0x4ec3


0x5009:	imul	ebp, ebx
0x500c:	jo	0x5236


0x47d2:	test	r11b, r11b
0x47d5:	je	0x4dfa


0x477b:	test	r11b, r11b
0x477e:	jne	0x4740


0x46bf:	add	r8d, dword ptr [rip + 0x20cae2]
0x46c6:	mov	eax, dword ptr [rip + 0x20cac0]
0x46cc:	mov	r10d, dword ptr [rip + 0x20c95d]
0x46d3:	movzx	r11d, byte ptr [rip + 0x20c971]
0x46db:	mov	r9, qword ptr [rip + 0x20cb46]
0x46e2:	add	esi, eax
0x46e4:	cmp	r10d, 1
0x46e8:	mov	dword ptr [rsp + 8], eax
0x46ec:	mov	rax, r9
0x46ef:	mov	ecx, r11d
0x46f2:	jle	0x51fd


0x4f1b:	mov	r9d, dword ptr [rbx + 0x10]
0x4f1f:	test	r9d, r9d
0x4f22:	jne	0x4f10


0x4ea8:	test	eax, eax
0x4eaa:	jle	0x4eee


0x4ec3:	mov	r10d, dword ptr [rbx + 0x10]
0x4ec7:	test	r10d, r10d
0x4eca:	jne	0x4eb8


0x5012:	mov	rdi, qword ptr [rip + 0x20c1ef]
0x5019:	call	0x1b90


0x4dfa:	lea	rbx, [rip - 0x1921]
0x4e01:	mov	qword ptr [rax + 0x20], rbx
0x4e05:	lea	rbx, [rip - 0x10bc]
0x4e0c:	mov	qword ptr [rax + 0x18], rbx
0x4e10:	jmp	0x47fe


0x47db:	cmp	byte ptr [rip + 0x20ca12], 0
0x47e2:	je	0x4dfa


0x4780:	mov	qword ptr [rax + 0x20], r14
0x4784:	mov	qword ptr [rax + 0x18], r13
0x4788:	jmp	0x4748


0x4740:	mov	qword ptr [rax + 0x20], r12
0x4744:	mov	qword ptr [rax + 0x18], rbp
0x4748:	xor	ecx, ecx
0x474a:	test	dil, dil
0x474d:	je	0x4759


0x4f24:	mov	esi, ebp
0x4f26:	mov	rdi, rbx
0x4f29:	add	ebp, 1
0x4f2c:	call	0x3a30


0x4f10:	add	ebp, 1
0x4f13:	add	rbx, 0x40
0x4f17:	cmp	ebp, eax
0x4f19:	jg	0x4f3f


0x4ecc:	mov	esi, ebp
0x4ece:	mov	rdi, rbx
0x4ed1:	add	ebp, 1
0x4ed4:	call	0x3a30


0x4eb8:	add	ebp, 1
0x4ebb:	add	rbx, 0x40
0x4ebf:	cmp	ebp, eax
0x4ec1:	jg	0x4ee7


0x47fe:	test	dil, dil
0x4801:	je	0x4815


0x47e8:	lea	rbx, [rip - 0x1cef]
0x47ef:	mov	qword ptr [rax + 0x20], rbx
0x47f3:	lea	rbx, [rip - 0x126a]
0x47fa:	mov	qword ptr [rax + 0x18], rbx
0x47fe:	test	dil, dil
0x4801:	je	0x4815


0x4748:	xor	ecx, ecx
0x474a:	test	dil, dil
0x474d:	je	0x4759


0x4759:	test	bl, bl
0x475b:	mov	byte ptr [rax + 0x38], cl
0x475e:	mov	dword ptr [rax + 0x34], esi
0x4761:	je	0x47b0


0x474f:	cmp	edx, 1
0x4752:	sete	cl
0x4755:	or	cl, byte ptr [rsp + 0xf]
0x4759:	test	bl, bl
0x475b:	mov	byte ptr [rax + 0x38], cl
0x475e:	mov	dword ptr [rax + 0x34], esi
0x4761:	je	0x47b0


0x4f3f:	cmp	byte ptr [rip + 0x20c106], 0
0x4f46:	je	0x4f7c


0x4ee7:	mov	rbx, qword ptr [rip + 0x20c33a]
0x4eee:	add	r14d, 1
0x4ef2:	cmp	r14d, dword ptr [rip + 0x20c2f7]
0x4ef9:	jl	0x4ea8


0x4815:	mov	byte ptr [rax + 0x38], dil
0x4819:	mov	dword ptr [rax + 0x34], esi
0x481c:	test	cl, cl
0x481e:	mov	eax, dword ptr [rip + 0x20c7f8]
0x4824:	mov	rbp, r9
0x4827:	mov	dword ptr [rip + 0x20c983], eax
0x482d:	jne	0x4b1c


0x4803:	movzx	edi, byte ptr [rip + 0x20c9f5]
0x480a:	xor	edi, 1
0x480d:	cmp	edx, 1
0x4810:	sete	dl
0x4813:	or	edi, edx
0x4815:	mov	byte ptr [rax + 0x38], dil
0x4819:	mov	dword ptr [rax + 0x34], esi
0x481c:	test	cl, cl
0x481e:	mov	eax, dword ptr [rip + 0x20c7f8]
0x4824:	mov	rbp, r9
0x4827:	mov	dword ptr [rip + 0x20c983], eax
0x482d:	jne	0x4b1c


0x47b0:	add	edx, 1
0x47b3:	xor	r8d, r8d
0x47b6:	xor	esi, esi
0x47b8:	add	rax, 0x40
0x47bc:	cmp	edx, r10d
0x47bf:	jne	0x477b


0x4763:	mov	ecx, dword ptr [rsp + 8]
0x4767:	add	edx, 1
0x476a:	add	rax, 0x40
0x476e:	cmp	edx, r10d
0x4771:	lea	esi, [rcx + r8]
0x4775:	lea	r8d, [rsi + r15]
0x4779:	je	0x47c1


0x4f48:	test	eax, eax
0x4f4a:	mov	rcx, qword ptr [rip + 0x20c2d7]
0x4f51:	jle	0x4f7c


0x4833:	test	r10d, r10d
0x4836:	je	0x487b


0x4b1c:	movzx	r11d, byte ptr [rip + 0x20c6d0]
0x4b24:	mov	esi, r10d
0x4b27:	mov	dword ptr [rip + 0x20c6e7], 0
0x4b31:	cmp	r11b, 1
0x4b35:	sbb	esi, 0
0x4b38:	test	esi, esi
0x4b3a:	mov	dword ptr [rsp + 8], esi
0x4b3e:	jle	0x4fb8


0x47c1:	lea	eax, [rdx - 2]
0x47c4:	mov	ecx, r11d
0x47c7:	add	rax, 1
0x47cb:	shl	rax, 6
0x47cf:	add	rax, r9
0x47d2:	test	r11b, r11b
0x47d5:	je	0x4dfa


0x4f53:	sub	eax, 1
0x4f56:	lea	rdx, [rcx + 0x10]
0x4f5a:	shl	rax, 6
0x4f5e:	lea	rax, [rcx + rax + 0x50]
0x4f63:	nop	dword ptr [rax + rax]
0x4f68:	cmp	dword ptr [rdx], 3
0x4f6b:	je	0x4f73


0x487b:	call	0x2a20


0x4838:	lea	edx, [r10 - 1]
0x483c:	mov	ecx, dword ptr [rip + 0x20c9ae]
0x4842:	lea	rax, [r9 + 0x30]
0x4846:	shl	rdx, 6
0x484a:	lea	rdx, [r9 + rdx + 0x70]
0x484f:	jmp	0x4863


0x4fb8:	xor	eax, eax
0x4fba:	xor	ecx, ecx
0x4fbc:	xor	r12d, r12d
0x4fbf:	jmp	0x4d24


0x4b44:	lea	edx, [rsi - 1]
0x4b47:	lea	rax, [r9 + 0x2c]
0x4b4b:	shl	rdx, 6
0x4b4f:	lea	rdx, [r9 + rdx + 0x6c]
0x4b54:	nop	dword ptr [rax]
0x4b58:	mov	dword ptr [rax], 0
0x4b5e:	add	rax, 0x40
0x4b62:	cmp	rdx, rax
0x4b65:	jne	0x4b58


0x4f73:	add	rdx, 0x40
0x4f77:	cmp	rdx, rax
0x4f7a:	jne	0x4f68


0x4f6d:	mov	dword ptr [rdx], 2
0x4f73:	add	rdx, 0x40
0x4f77:	cmp	rdx, rax
0x4f7a:	jne	0x4f68


0x4863:	mov	r8d, dword ptr [rax - 0x20]
0x4867:	test	r8d, r8d
0x486a:	je	0x4858


0x4d24:	mov	rdx, qword ptr [rip + 0x20c4dd]
0x4d2b:	test	r11b, r11b
0x4d2e:	lea	r13d, [r10 - 1]
0x4d32:	mov	dword ptr [rdx + rcx], eax
0x4d35:	je	0x4dda


0x4b67:	mov	eax, dword ptr [rip + 0x20c653]
0x4b6d:	test	eax, eax
0x4b6f:	je	0x4fba


0x4b58:	mov	dword ptr [rax], 0
0x4b5e:	add	rax, 0x40
0x4b62:	cmp	rdx, rax
0x4b65:	jne	0x4b58


0x4f68:	cmp	dword ptr [rdx], 3
0x4f6b:	je	0x4f73


0x4858:	mov	dword ptr [rax], ecx
0x485a:	add	rax, 0x40
0x485e:	cmp	rdx, rax
0x4861:	je	0x487b


0x486c:	mov	dword ptr [rax], 0
0x4872:	add	rax, 0x40
0x4876:	cmp	rdx, rax
0x4879:	jne	0x4863


0x4dda:	test	r13d, r13d
0x4ddd:	jne	0x4d83


0x4d3b:	test	r10d, r10d
0x4d3e:	jle	0x4d7e


0x4fba:	xor	ecx, ecx
0x4fbc:	xor	r12d, r12d
0x4fbf:	jmp	0x4d24


0x4b75:	xor	r13d, r13d
0x4b78:	mov	r14d, 1
0x4b7e:	xor	r12d, r12d
0x4b81:	xor	r15d, r15d
0x4b84:	nop	dword ptr [rax]
0x4b88:	mov	ebx, dword ptr [rip + 0x20c662]
0x4b8e:	mov	dword ptr [rbp + 0x28], r12d
0x4b92:	test	ebx, ebx
0x4b94:	jne	0x4ba5


0x4ddf:	mov	r11d, dword ptr [rbp + 0x10]
0x4de3:	test	r11d, r11d
0x4de6:	jne	0x4e72


0x4d83:	lea	edx, [r10 - 2]
0x4d87:	lea	rax, [r9 + 0x2c]
0x4d8b:	mov	rcx, rdx
0x4d8e:	shl	rdx, 6
0x4d92:	lea	rsi, [r9 + rdx + 0x6c]
0x4d97:	nop	word ptr [rax + rax]
0x4da0:	mov	edx, dword ptr [rax]
0x4da2:	add	rax, 0x40
0x4da6:	mov	dword ptr [rax - 0x3c], edx
0x4da9:	cmp	rsi, rax
0x4dac:	jne	0x4da0


0x4d7e:	test	r13d, r13d
0x4d81:	je	0x4dc0


0x4d40:	mov	eax, r12d
0x4d43:	lea	ebx, [r10 + 1]
0x4d47:	xor	edi, edi
0x4d49:	cdq	
0x4d4a:	mov	rsi, r9
0x4d4d:	mov	ecx, 1
0x4d52:	idiv	r10d
0x4d55:	lea	r12d, [rax + 1]
0x4d59:	nop	dword ptr [rax]
0x4d60:	cmp	ecx, edx
0x4d62:	mov	r8d, r12d
0x4d65:	mov	dword ptr [rsi + 0x28], edi
0x4d68:	cmovg	r8d, eax
0x4d6c:	add	ecx, 1
0x4d6f:	add	rsi, 0x40
0x4d73:	mov	dword ptr [rsi - 0x14], r8d
0x4d77:	add	edi, r8d
0x4d7a:	cmp	ebx, ecx
0x4d7c:	jne	0x4d60


0x4b96:	jmp	0x4c15


0x4ba5:	mov	esi, dword ptr [rip + 0x20c615]
0x4bab:	test	esi, esi
0x4bad:	je	0x4d00


0x4dec:	mov	eax, dword ptr [rip + 0x20c3fe]
0x4df2:	mov	dword ptr [rbp + 0x30], eax
0x4df5:	jmp	0x487b


0x4e72:	mov	dword ptr [rbp + 0x30], 0
0x4e79:	jmp	0x487b


0x4dae:	mov	ebp, ecx
0x4db0:	add	rbp, 1
0x4db4:	shl	rbp, 6
0x4db8:	add	rbp, r9
0x4dbb:	test	r11b, r11b
0x4dbe:	je	0x4ddf


0x4da0:	mov	edx, dword ptr [rax]
0x4da2:	add	rax, 0x40
0x4da6:	mov	dword ptr [rax - 0x3c], edx
0x4da9:	cmp	rsi, rax
0x4dac:	jne	0x4da0


0x4dc0:	mov	eax, dword ptr [rbp + 0x2c]
0x4dc3:	mov	dword ptr [rbp + 0x30], eax
0x4dc6:	jmp	0x487b


0x4d60:	cmp	ecx, edx
0x4d62:	mov	r8d, r12d
0x4d65:	mov	dword ptr [rsi + 0x28], edi
0x4d68:	cmovg	r8d, eax
0x4d6c:	add	ecx, 1
0x4d6f:	add	rsi, 0x40
0x4d73:	mov	dword ptr [rsi - 0x14], r8d
0x4d77:	add	edi, r8d
0x4d7a:	cmp	ebx, ecx
0x4d7c:	jne	0x4d60


0x4c15:	add	r14d, 1
0x4c19:	add	rbp, 0x40
0x4c1d:	cmp	dword ptr [rsp + 8], r14d
0x4c22:	lea	rcx, [r15*4]
0x4c2a:	mov	eax, r13d
0x4c2d:	jl	0x4c3d


0x4d00:	mov	r9, qword ptr [rip + 0x20c521]
0x4d07:	movzx	r11d, byte ptr [rip + 0x20c4e5]
0x4d0f:	lea	rcx, [r15*4]
0x4d17:	mov	r10d, dword ptr [rip + 0x20c312]
0x4d1e:	mov	eax, r13d
0x4d21:	mov	rbp, r9
0x4d24:	mov	rdx, qword ptr [rip + 0x20c4dd]
0x4d2b:	test	r11b, r11b
0x4d2e:	lea	r13d, [r10 - 1]
0x4d32:	mov	dword ptr [rdx + rcx], eax
0x4d35:	je	0x4dda


0x4bb3:	mov	ecx, dword ptr [rbp + 0x10]
0x4bb6:	test	ecx, ecx
0x4bb8:	jne	0x4ba0


0x4c3d:	mov	rbp, qword ptr [rip + 0x20c5e4]
0x4c44:	mov	r10d, dword ptr [rip + 0x20c3e5]
0x4c4b:	movzx	r11d, byte ptr [rip + 0x20c5a1]
0x4c53:	mov	r9, rbp
0x4c56:	jmp	0x4d24


0x4c2f:	mov	ebx, dword ptr [rip + 0x20c58b]
0x4c35:	test	ebx, ebx
0x4c37:	jne	0x4b88


0x4bba:	mov	rdi, rbp
0x4bbd:	mov	dword ptr [rip + 0x20c60d], 0
0x4bc7:	call	0x3d50


0x4ba0:	sub	ebx, 1
0x4ba3:	je	0x4c15


0x4b88:	mov	ebx, dword ptr [rip + 0x20c662]
0x4b8e:	mov	dword ptr [rbp + 0x28], r12d
0x4b92:	test	ebx, ebx
0x4b94:	jne	0x4ba5


0x4bcc:	test	al, al
0x4bce:	je	0x4cf0


0x4cf0:	mov	rdi, rbp
0x4cf3:	call	0x3c80


0x4bd4:	mov	edx, dword ptr [rbp + 0x10]
0x4bd7:	mov	eax, dword ptr [rip + 0x20c63b]
0x4bdd:	test	edx, edx
0x4bdf:	je	0x4be6


0x4be6:	mov	rcx, qword ptr [rip + 0x20c61b]
0x4bed:	add	dword ptr [rbp + 0x2c], 1
0x4bf1:	add	r12d, 1
0x4bf5:	mov	esi, dword ptr [rip + 0x20c5d9]
0x4bfb:	sub	ebx, 1
0x4bfe:	mov	dword ptr [rcx + r15*4], r13d
0x4c02:	mov	r13d, eax
0x4c05:	mov	rcx, qword ptr [rip + 0x20c5f4]
0x4c0c:	mov	dword ptr [rcx + r15*4], esi
0x4c10:	mov	r15d, r12d
0x4c13:	jne	0x4ba5


0x4be1:	cmp	r13d, eax
0x4be4:	je	0x4ba0


0x4cf8:	jmp	0x4bd4


0x4880:	test	eax, eax
0x4882:	je	0x4548


0x4888:	cmp	byte ptr [rip + 0x20c7be], 0
0x488f:	je	0x4898


0x4898:	cmp	byte ptr [rip + 0x20c8f9], 0
0x489f:	mov	byte ptr [rip + 0x20c8da], 0
0x48a6:	mov	r13d, dword ptr [rip + 0x20c943]
0x48ad:	je	0x48b2


0x4891:	mov	byte ptr [rip + 0x20c960], 1
0x4898:	cmp	byte ptr [rip + 0x20c8f9], 0
0x489f:	mov	byte ptr [rip + 0x20c8da], 0
0x48a6:	mov	r13d, dword ptr [rip + 0x20c943]
0x48ad:	je	0x48b2


0x48b2:	xor	r12d, r12d
0x48b5:	cmp	r13d, 0
0x48b9:	jle	0x51e2


0x48af:	add	r13d, r13d
0x48b2:	xor	r12d, r12d
0x48b5:	cmp	r13d, 0
0x48b9:	jle	0x51e2


0x51e2:	jne	0x4a9f


0x51e8:	test	r10d, r10d
0x51eb:	jg	0x4a5c


0x4a9f:	cmp	byte ptr [rip + 0x20c754], 0
0x4aa6:	je	0x4ad8


0x51f1:	mov	byte ptr [rip + 0x20bf88], 0
0x51f8:	jmp	0x4a9f


0x4a5c:	lea	edx, [r10 - 1]
0x4a60:	lea	rax, [r9 + 0x10]
0x4a64:	shl	rdx, 6
0x4a68:	lea	rdx, [r9 + rdx + 0x50]
0x4a6d:	nop	dword ptr [rax]
0x4a70:	mov	ecx, dword ptr [rax]
0x4a72:	test	ecx, ecx
0x4a74:	jne	0x4a7a


0x4ad8:	mov	rax, qword ptr [rip + 0x20c6d9]
0x4adf:	add	rax, 1
0x4ae3:	cmp	rax, qword ptr [rip + 0x20c53e]
0x4aea:	mov	qword ptr [rip + 0x20c6c7], rax
0x4af1:	ja	0x4548


0x4aa8:	cmp	byte ptr [rip + 0x20c74a], 0
0x4aaf:	je	0x4ad8


0x4a76:	mov	byte ptr [rax + 0x29], 1
0x4a7a:	add	rax, 0x40
0x4a7e:	cmp	rdx, rax
0x4a81:	jne	0x4a70


0x4a7a:	add	rax, 0x40
0x4a7e:	cmp	rdx, rax
0x4a81:	jne	0x4a70


0x4af7:	call	0x2a80


0x4ab1:	mov	rdi, qword ptr [rip + 0x20c630]
0x4ab8:	mov	rax, qword ptr [rdi + 0x28]
0x4abc:	cmp	rax, qword ptr [rdi + 0x30]
0x4ac0:	jae	0x520e


0x4a83:	xor	r13d, r13d
0x4a86:	test	r12b, r12b
0x4a89:	mov	byte ptr [rip + 0x20c6f0], r12b
0x4a90:	je	0x4a9f


0x4a70:	mov	ecx, dword ptr [rax]
0x4a72:	test	ecx, ecx
0x4a74:	jne	0x4a7a


0x4ac6:	lea	rdx, [rax + 1]
0x4aca:	mov	qword ptr [rdi + 0x28], rdx
0x4ace:	mov	byte ptr [rax], 0xc
0x4ad1:	mov	byte ptr [rip + 0x20c721], 0
0x4ad8:	mov	rax, qword ptr [rip + 0x20c6d9]
0x4adf:	add	rax, 1
0x4ae3:	cmp	rax, qword ptr [rip + 0x20c53e]
0x4aea:	mov	qword ptr [rip + 0x20c6c7], rax
0x4af1:	ja	0x4548


0x520e:	mov	esi, 0xc
0x5213:	call	0x1cf0


0x4a92:	cmp	byte ptr [rip + 0x20c5b4], 0
0x4a99:	jne	0x4e24


0x4e24:	cmp	byte ptr [rip + 0x20c3cc], 0
0x4e2b:	jne	0x51c1


0x4e31:	add	r13d, 5
0x4e35:	jne	0x4e55


0x51c1:	mov	rdi, qword ptr [rip + 0x20bf20]
0x51c8:	mov	rax, qword ptr [rdi + 0x28]
0x51cc:	cmp	rax, qword ptr [rdi + 0x30]
0x51d0:	jae	0x521d


0x4e37:	jmp	0x4ad8


0x4e55:	mov	rdi, qword ptr [rip + 0x20c28c]
0x4e5c:	mov	rax, qword ptr [rdi + 0x28]
0x4e60:	cmp	rax, qword ptr [rdi + 0x30]
0x4e64:	jb	0x4e40


0x51d2:	lea	rdx, [rax + 1]
0x51d6:	mov	qword ptr [rdi + 0x28], rdx
0x51da:	mov	byte ptr [rax], 0xc
0x51dd:	jmp	0x4ad8


0x521d:	mov	esi, 0xc
0x5222:	call	0x1cf0


0x4e40:	lea	rdx, [rax + 1]
0x4e44:	mov	qword ptr [rdi + 0x28], rdx
0x4e48:	mov	byte ptr [rax], 0xa
0x4e4b:	sub	r13d, 1
0x4e4f:	je	0x4ad8


0x4e66:	mov	esi, 0xa
0x4e6b:	call	0x1cf0


0x4e70:	jmp	0x4e4b


0x4e4b:	sub	r13d, 1
0x4e4f:	je	0x4ad8


0x5227:	jmp	0x4ad8


0x5218:	jmp	0x4ad1


0x4ad1:	mov	byte ptr [rip + 0x20c721], 0
0x4ad8:	mov	rax, qword ptr [rip + 0x20c6d9]
0x4adf:	add	rax, 1
0x4ae3:	cmp	rax, qword ptr [rip + 0x20c53e]
0x4aea:	mov	qword ptr [rip + 0x20c6c7], rax
0x4af1:	ja	0x4548


0x48c5:	test	eax, eax
0x48c7:	je	0x4a86


0x4a86:	test	r12b, r12b
0x4a89:	mov	byte ptr [rip + 0x20c6f0], r12b
0x4a90:	je	0x4a9f


0x48cd:	mov	edi, dword ptr [rip + 0x20c75d]
0x48d3:	mov	dword ptr [rip + 0x20c8fb], 0
0x48dd:	mov	dword ptr [rip + 0x20c8f9], 0
0x48e7:	mov	dword ptr [rip + 0x20c897], 0
0x48f1:	mov	byte ptr [rip + 0x20c888], 0
0x48f8:	mov	byte ptr [rip + 0x20c8ff], 0
0x48ff:	test	edi, edi
0x4901:	mov	byte ptr [rip + 0x20c8f5], 1
0x4908:	mov	rbx, qword ptr [rip + 0x20c919]
0x490f:	jle	0x49fc


0x49fc:	call	0x2a20


0x4915:	mov	ebp, 1
0x491a:	jmp	0x4973


0x4973:	mov	esi, dword ptr [rbx + 0x30]
0x4976:	mov	dword ptr [rip + 0x20c854], 0
0x4980:	test	esi, esi
0x4982:	jle	0x4c80


0x4c80:	cmp	dword ptr [rbx + 0x10], 1
0x4c84:	je	0x4988


0x4988:	mov	eax, dword ptr [rbx + 0x34]
0x498b:	mov	byte ptr [rip + 0x20c86a], 0
0x4992:	mov	rdi, rbx
0x4995:	mov	dword ptr [rip + 0x20c7e9], eax
0x499b:	call	qword ptr [rbx + 0x18]


0x4c8a:	cmp	byte ptr [rip + 0x20c56e], 0
0x4c91:	je	0x4950


0x4950:	cmp	byte ptr [rip + 0x20c839], 0
0x4957:	je	0x4960


0x4c97:	cmp	byte ptr [rip + 0x20c55f], 0
0x4c9e:	jne	0x4c70


0x4960:	add	ebp, 1
0x4963:	add	rbx, 0x40
0x4967:	cmp	ebp, dword ptr [rip + 0x20c6c3]
0x496d:	jg	0x4cb0


0x4959:	add	dword ptr [rip + 0x20c828], 1
0x4960:	add	ebp, 1
0x4963:	add	rbx, 0x40
0x4967:	cmp	ebp, dword ptr [rip + 0x20c6c3]
0x496d:	jg	0x4cb0


0x4ca0:	mov	rdi, rbx
0x4ca3:	call	0x38c0


0x4c70:	mov	byte ptr [rip + 0x20c587], 1
0x4c77:	jmp	0x4950


0x4cb0:	cmp	byte ptr [rip + 0x20c4c9], 0
0x4cb7:	jne	0x49d8


0x4cbd:	jmp	0x49fc


0x49d8:	mov	rdi, qword ptr [rip + 0x20c709]
0x49df:	mov	rax, qword ptr [rdi + 0x28]
0x49e3:	cmp	rax, qword ptr [rdi + 0x30]
0x49e7:	jae	0x4dcb


0x49ed:	lea	rdx, [rax + 1]
0x49f1:	mov	qword ptr [rdi + 0x28], rdx
0x49f5:	mov	byte ptr [rax], 0xa
0x49f8:	sub	r13d, 1
0x49fc:	call	0x2a20


0x4dcb:	mov	esi, 0xa
0x4dd0:	call	0x1cf0


0x4dd5:	jmp	0x49f8


0x49f8:	sub	r13d, 1
0x49fc:	call	0x2a20


0x4ca8:	jmp	0x4950


0x4a01:	test	eax, eax
0x4a03:	je	0x4cc8


0x4cc8:	cmp	byte ptr [rip + 0x20c37e], 0
0x4ccf:	jne	0x4a09


0x4a09:	cmp	byte ptr [rip + 0x20c788], 0
0x4a10:	je	0x4a3b


0x4cd5:	jmp	0x4a44


0x4a3b:	test	r13d, r13d
0x4a3e:	jg	0x48c0


0x4a12:	test	r12b, r12b
0x4a15:	je	0x4a3b


0x4a44:	test	r13d, r13d
0x4a47:	jne	0x4a86


0x48c0:	call	0x2a20


0x4a17:	mov	rdi, qword ptr [rip + 0x20c6ca]
0x4a1e:	mov	rax, qword ptr [rdi + 0x28]
0x4a22:	cmp	rax, qword ptr [rdi + 0x30]
0x4a26:	jae	0x4e15


0x4a49:	mov	r10d, dword ptr [rip + 0x20c5e0]
0x4a50:	mov	r9, qword ptr [rip + 0x20c7d1]
0x4a57:	test	r10d, r10d
0x4a5a:	jle	0x4a86


0x4a2c:	lea	rdx, [rax + 1]
0x4a30:	mov	qword ptr [rdi + 0x28], rdx
0x4a34:	mov	byte ptr [rax], 0xa
0x4a37:	sub	r13d, 1
0x4a3b:	test	r13d, r13d
0x4a3e:	jg	0x48c0


0x4e15:	mov	esi, 0xa
0x4e1a:	call	0x1cf0


0x4e1f:	jmp	0x4a37


0x4a37:	sub	r13d, 1
0x4a3b:	test	r13d, r13d
0x4a3e:	jg	0x48c0


0x4ed9:	mov	eax, dword ptr [rip + 0x20c151]
0x4edf:	add	rbx, 0x40
0x4ee3:	cmp	ebp, eax
0x4ee5:	jle	0x4ec3


0x4f31:	mov	eax, dword ptr [rip + 0x20c0f9]
0x4f37:	add	rbx, 0x40
0x4f3b:	cmp	ebp, eax
0x4f3d:	jle	0x4f1b


0x501e:	mov	edx, 4
0x5023:	movsxd	rcx, r12d
0x5026:	xor	esi, esi
0x5028:	mov	rax, rdx
0x502b:	mul	rcx
0x502e:	jo	0x522c


0x522c:	mov	esi, 1
0x5231:	jmp	0x5034


0x5034:	test	rax, rax
0x5037:	js	0x527d


0x503d:	test	rsi, rsi
0x5040:	jne	0x527d


0x5046:	lea	rdi, [rcx*4]
0x504e:	movsxd	rbx, ebx
0x5051:	call	0x9d10


0x5056:	mov	rdi, qword ptr [rip + 0x20c1a3]
0x505d:	mov	qword ptr [rip + 0x20c1a4], rax
0x5064:	call	0x1b90


0x5069:	mov	edx, 4
0x506e:	xor	ecx, ecx
0x5070:	mov	rax, rdx
0x5073:	mul	rbx
0x5076:	jo	0x523b


0x523b:	mov	ecx, 1
0x5240:	jmp	0x507c


0x507c:	test	rax, rax
0x507f:	js	0x527d


0x5085:	test	rcx, rcx
0x5088:	jne	0x527d


0x508e:	lea	rdi, [rbx*4]
0x5096:	movsxd	rbp, ebp
0x5099:	call	0x9d10


0x509e:	mov	rdi, qword ptr [rip + 0x20c17b]
0x50a5:	mov	qword ptr [rip + 0x20c154], rax
0x50ac:	call	0x1b90


0x50b1:	movzx	eax, byte ptr [rip + 0x20c0d8]
0x50b8:	lea	rdi, [rax + 1]
0x50bc:	mov	rax, rdi
0x50bf:	mul	rbp
0x50c2:	mov	rdi, rax
0x50c5:	seto	al
0x50c8:	test	rdi, rdi
0x50cb:	movzx	eax, al
0x50ce:	js	0x527d


0x50d4:	test	rax, rax
0x50d7:	jne	0x527d


0x50dd:	call	0x9d10


0x50e2:	mov	qword ptr [rip + 0x20c137], rax
0x50e9:	movzx	eax, byte ptr [rip + 0x20c0a0]
0x50f0:	add	rax, 1
0x50f4:	imul	rbp, rax
0x50f8:	mov	qword ptr [rip + 0x20c111], rbp
0x50ff:	jmp	0x4673


0x4afc:	movzx	ecx, byte ptr [rip + 0x20c549]
0x4b03:	mov	r9, qword ptr [rip + 0x20c71e]
0x4b0a:	mov	r10d, dword ptr [rip + 0x20c51f]
0x4b11:	mov	rbp, r9
0x4b14:	test	cl, cl
0x4b16:	je	0x4833


0x4f81:	mov	r8d, dword ptr [rip + 0x20c238]
0x4f88:	mov	byte ptr [rip + 0x20c1b1], 0
0x4f8f:	test	r8d, r8d
0x4f92:	jle	0x517d


0x517d:	lea	rsi, [rip + 0x6fa4]
0x5184:	xor	edi, edi
0x5186:	mov	edx, 5
0x518b:	call	0x1c80


0x4f98:	add	r12, 1
0x4f9c:	cmp	r13, r12
0x4f9f:	jne	0x4e88


0x4fa5:	mov	rax, qword ptr [rip + 0x20c21c]
0x4fac:	mov	qword ptr [rip + 0x20c205], rax
0x4fb3:	jmp	0x468f


0x4e88:	cmp	dword ptr [rip + 0x20c361], 1
0x4e8f:	mov	rbx, qword ptr [rip + 0x20c392]
0x4e96:	mov	r14d, 1
0x4e9c:	mov	eax, dword ptr [rip + 0x20c18e]
0x4ea2:	jle	0x4efb


0x468f:	movzx	ebx, byte ptr [rip + 0x20cb57]
0x4696:	xor	r8d, r8d
0x4699:	mov	esi, dword ptr [rip + 0x20cb3d]
0x469f:	test	bl, bl
0x46a1:	je	0x46c6


0x5190:	xor	edi, edi
0x5192:	mov	rdx, rax
0x5195:	xor	esi, esi
0x5197:	xor	eax, eax
0x5199:	mov	r8, r12
0x519c:	mov	rcx, r13
0x519f:	call	0x1ee0


0x51a4:	mov	edi, dword ptr [rip + 0x20c016]
0x51aa:	test	edi, edi
0x51ac:	jg	0x4fa5


0x51b2:	add	rsp, 0x18
0x51b6:	pop	rbx
0x51b7:	pop	rbp
0x51b8:	pop	r12
0x51ba:	pop	r13
0x51bc:	pop	r14
0x51be:	pop	r15
0x51c0:	ret	


0x514f:	mov	dword ptr [rbx + 0x2c], 0
0x5156:	jmp	0x460e


0x460e:	mov	esi, dword ptr [rip + 0x20ca1c]
0x4614:	mov	rdx, qword ptr [rbx + 8]
0x4618:	lea	rax, [rbx + 0x40]
0x461c:	mov	rcx, qword ptr [rbx]
0x461f:	cmp	esi, 1
0x4622:	je	0x465a


0x4fd5:	jmp	0x465a


0x2019:	lea	rdi, [rip + 0x9f59]
0x2020:	call	0x1c40


0x1c40:	jmp	qword ptr [rip + 0x20f1ca]




0xb677:	mov	rdi, rbx
0xb67a:	pop	rbx
0xb67b:	jmp	0x1e20


0x5889:	test	eax, eax
0x588b:	jne	0x58a3


0x588d:	mov	rax, qword ptr [rsp]
0x5891:	lea	rdx, [rax - 1]
0x5895:	cmp	rdx, 0x7ffffffe
0x589c:	ja	0x58a3


0x58a3:	mov	rdi, rbx
0x58a6:	movsx	r12d, r12b
0x58aa:	call	0x96c0


0x589e:	mov	dword ptr [rbp], eax
0x58a1:	jmp	0x584c


0x9c56:	mov	rax, qword ptr [rsp + 0x78]
0x9c5b:	xor	rax, qword ptr fs:[0x28]
0x9c64:	jne	0x9c70


0x9c66:	add	rsp, 0xb8
0x9c6d:	pop	rbx
0x9c6e:	pop	rbp
0x9c6f:	ret	


0x9c70:	call	0x1cb0


0x9b80:	mov	rax, qword ptr [rsp + 0x58]
0x9b85:	xor	rax, qword ptr fs:[0x28]
0x9b8e:	jne	0x9b95


0x9b90:	add	rsp, 0x68
0x9b94:	ret	


0x9b95:	call	0x1cb0


0x4135:	jmp	0x3de9


0x416c:	jmp	0x4041


0x36cd:	jmp	0x35da


0x9fda:	test	eax, eax
0x9fdc:	jne	0xa070


0x9fe2:	mov	rbp, qword ptr [rsp]
0x9fe6:	cmp	rbp, r14
0x9fe9:	jl	0x9ff0


0xa070:	mov	ebp, eax
0xa072:	call	0x1bb0


0x9ff0:	call	0x1bb0


0x9feb:	cmp	rbp, r15
0x9fee:	jle	0xa046


0xa046:	mov	rdx, qword ptr [rsp + 8]
0xa04b:	xor	rdx, qword ptr fs:[0x28]
0xa054:	mov	rax, rbp
0xa057:	jne	0xa0ac


0xa059:	add	rsp, 0x18
0xa05d:	pop	rbx
0xa05e:	pop	rbp
0xa05f:	pop	r12
0xa061:	pop	r13
0xa063:	pop	r14
0xa065:	pop	r15
0xa067:	ret	


0xa0ac:	call	0x1cb0


0x9ff5:	cmp	rbp, 0x3fffffff
0x9ffc:	mov	r14, rax
0x9fff:	jle	0xa090


0xa090:	cmp	rbp, -0x40000001
0xa097:	mov	eax, 0x22
0xa09c:	mov	edx, 0x4b
0xa0a1:	cmovle	eax, edx
0xa0a4:	mov	dword ptr [r14], eax
0xa0a7:	jmp	0xa00c


0xa005:	mov	dword ptr [r14], 0x4b
0xa00c:	mov	rdi, r12
0xa00f:	call	0x96c0


0xa00c:	mov	rdi, r12
0xa00f:	call	0x96c0


0xa077:	cmp	ebp, 1
0xa07a:	mov	r14, rax
0xa07d:	je	0xa005


0xa07f:	cmp	ebp, 3
0xa082:	jne	0xa00c


0xa084:	mov	dword ptr [rax], 0
0xa08a:	jmp	0xa00c


0xa0dc:	add	rsp, 0x18
0xa0e0:	ret	


0x2d16:	mov	byte ptr [rip + 0x20e4de], 1
0x2d1d:	mov	dword ptr [rip + 0x20e30d], eax
0x2d23:	pop	rbx
0x2d24:	ret	


0x2025:	lea	rdi, [rip + 0x38f4]
0x202c:	call	0xbe30


0x2031:	cmp	r12d, 1
0x2035:	mov	qword ptr [rsp + 0x20], 0
0x203e:	jle	0x2056


0x2056:	lea	rax, [rsp + 0x40]
0x205b:	lea	r14, [rsp + 0x3c]
0x2060:	lea	rbp, [rip + 0xb379]
0x2067:	xor	ebx, ebx
0x2069:	xor	r15d, r15d
0x206c:	mov	byte ptr [rsp + 0x2f], 0
0x2071:	mov	byte ptr [rsp + 0x2e], 0
0x2076:	mov	byte ptr [rsp + 0x2d], 0
0x207b:	mov	dword ptr [rsp + 0x28], 0
0x2083:	mov	qword ptr [rsp + 0x18], rax
0x2088:	nop	dword ptr [rax + rax]
0x2090:	lea	rdx, [rip + 0xb769]
0x2097:	lea	rcx, [rip + 0x20e742]
0x209e:	mov	r8, r14
0x20a1:	mov	rsi, r13
0x20a4:	mov	edi, r12d
0x20a7:	mov	dword ptr [rsp + 0x3c], 0xffffffff
0x20af:	call	0x1cc0


0x2040:	lea	edi, [r12 - 1]
0x2045:	movsxd	rdi, edi
0x2048:	shl	rdi, 3
0x204c:	call	0x9d10


0x1cc0:	jmp	qword ptr [rip + 0x20f18a]




0x2051:	mov	qword ptr [rsp + 0x20], rax
0x2056:	lea	rax, [rsp + 0x40]
0x205b:	lea	r14, [rsp + 0x3c]
0x2060:	lea	rbp, [rip + 0xb379]
0x2067:	xor	ebx, ebx
0x2069:	xor	r15d, r15d
0x206c:	mov	byte ptr [rsp + 0x2f], 0
0x2071:	mov	byte ptr [rsp + 0x2e], 0
0x2076:	mov	byte ptr [rsp + 0x2d], 0
0x207b:	mov	dword ptr [rsp + 0x28], 0
0x2083:	mov	qword ptr [rsp + 0x18], rax
0x2088:	nop	dword ptr [rax + rax]
0x2090:	lea	rdx, [rip + 0xb769]
0x2097:	lea	rcx, [rip + 0x20e742]
0x209e:	mov	r8, r14
0x20a1:	mov	rsi, r13
0x20a4:	mov	edi, r12d
0x20a7:	mov	dword ptr [rsp + 0x3c], 0xffffffff
0x20af:	call	0x1cc0


0x5792:	test	eax, eax
0x5794:	jne	0x57d9


0x57d9:	lea	r12, [rip + 0x671c]
0x57e0:	mov	r13, qword ptr [rip + 0x20b901]
0x57e7:	lea	rsi, [rip + 0x7982]
0x57ee:	xor	edi, edi
0x57f0:	mov	edx, 5
0x57f5:	call	0x1c80


0x57fa:	mov	rsi, r13
0x57fd:	mov	rdi, rax
0x5800:	call	0x1d90


0x5805:	jmp	0x56d9


0x56d1:	test	eax, eax
0x56d3:	jne	0x57e0


0x57e0:	mov	r13, qword ptr [rip + 0x20b901]
0x57e7:	lea	rsi, [rip + 0x7982]
0x57ee:	xor	edi, edi
0x57f0:	mov	edx, 5
0x57f5:	call	0x1c80


0x5cbc:	test	eax, eax
0x5cbe:	jne	0x5c72


0x5d0c:	test	eax, eax
0x5d0e:	jne	0x5cb1


0x5d10:	cmp	ebp, 0x7fffffff
0x5d16:	je	0x5dc0


0x5cb1:	mov	rdi, r12
0x5cb4:	add	rbx, r15
0x5cb7:	call	0x1f60


0x5d1c:	add	ebp, 1
0x5d1f:	jmp	0x5cb1


0xa204:	test	rax, rax
0xa207:	mov	rcx, qword ptr [rsp + 8]
0xa20c:	je	0xa268


0xa268:	mov	qword ptr [r14], rbp
0xa26b:	or	r12d, 2
0xa26f:	jmp	0xa179


0xa20e:	lea	eax, [r13 - 0x45]
0xa212:	cmp	al, 0x2f
0xa214:	ja	0xa278


0xa216:	movabs	rdx, 0x814400308945
0xa220:	bt	rdx, rax
0xa224:	jae	0xa278


0xa278:	mov	edi, 1
0xa27d:	mov	eax, 0x400
0xa282:	sub	r13d, 0x42
0xa286:	cmp	r13b, 0x35
0xa28a:	ja	0xa268


0xa226:	mov	esi, 0x30
0xa22b:	mov	rdi, r15
0xa22e:	mov	qword ptr [rsp + 8], rcx
0xa233:	call	0x1ce0


0xa28c:	lea	rsi, [rip + 0x40b5]
0xa293:	movzx	r13d, r13b
0xa297:	movsxd	rdx, dword ptr [rsi + r13*4]
0xa29b:	add	rdx, rsi
0xa29e:	jmp	rdx


0xa238:	test	rax, rax
0xa23b:	mov	rcx, qword ptr [rsp + 8]
0xa240:	je	0xa278


0xa242:	movzx	eax, byte ptr [rcx + 1]
0xa246:	cmp	al, 0x44
0xa248:	je	0xa256


0xa256:	mov	edi, 2
0xa25b:	mov	eax, 0x3e8
0xa260:	jmp	0xa282


0xa24a:	cmp	al, 0x69
0xa24c:	je	0xa738


0xa282:	sub	r13d, 0x42
0xa286:	cmp	r13b, 0x35
0xa28a:	ja	0xa268


0xa738:	xor	edi, edi
0xa73a:	cmp	byte ptr [rcx + 2], 0x42
0xa73e:	mov	eax, 0x400
0xa743:	sete	dil
0xa747:	lea	edi, [rdi + rdi + 1]
0xa74b:	jmp	0xa282


0xa252:	cmp	al, 0x42
0xa254:	jne	0xa278


0xa1e1:	test	rax, rax
0xa1e4:	mov	rcx, qword ptr [rsp + 8]
0xa1e9:	je	0xa179


0xa1eb:	mov	ebp, 1
0xa1f0:	xor	r12d, r12d
0xa1f3:	movsx	esi, r13b
0xa1f7:	mov	rdi, r15
0xa1fa:	mov	qword ptr [rsp + 8], rcx
0xa1ff:	call	0x1ce0


0xa8c4:	test	rax, rax
0xa8c7:	mov	rcx, qword ptr [rsp + 8]
0xa8cc:	je	0xa928


0xa928:	mov	qword ptr [r14], rbp
0xa92b:	or	r12d, 2
0xa92f:	jmp	0xa837


0xa8ce:	lea	eax, [r13 - 0x45]
0xa8d2:	cmp	al, 0x2f
0xa8d4:	ja	0xa938


0xa8d6:	movabs	rdx, 0x814400308945
0xa8e0:	bt	rdx, rax
0xa8e4:	jae	0xa938


0xa938:	mov	edi, 1
0xa93d:	mov	eax, 0x400
0xa942:	sub	r13d, 0x42
0xa946:	cmp	r13b, 0x35
0xa94a:	ja	0xa928


0xa8e6:	mov	esi, 0x30
0xa8eb:	mov	rdi, r15
0xa8ee:	mov	qword ptr [rsp + 8], rcx
0xa8f3:	call	0x1ce0


0xa94c:	lea	rsi, [rip + 0x3add]
0xa953:	movzx	r13d, r13b
0xa957:	movsxd	rdx, dword ptr [rsi + r13*4]
0xa95b:	add	rdx, rsi
0xa95e:	jmp	rdx


0xa8f8:	test	rax, rax
0xa8fb:	mov	rcx, qword ptr [rsp + 8]
0xa900:	je	0xa938


0xa902:	movzx	eax, byte ptr [rcx + 1]
0xa906:	cmp	al, 0x44
0xa908:	je	0xa916


0xa916:	mov	edi, 2
0xa91b:	mov	eax, 0x3e8
0xa920:	jmp	0xa942


0xa90a:	cmp	al, 0x69
0xa90c:	je	0xadf8


0xa942:	sub	r13d, 0x42
0xa946:	cmp	r13b, 0x35
0xa94a:	ja	0xa928


0xadf8:	xor	edi, edi
0xadfa:	cmp	byte ptr [rcx + 2], 0x42
0xadfe:	mov	eax, 0x400
0xae03:	sete	dil
0xae07:	lea	edi, [rdi + rdi + 1]
0xae0b:	jmp	0xa942


0xa912:	cmp	al, 0x42
0xa914:	jne	0xa938


0xa8a1:	test	rax, rax
0xa8a4:	mov	rcx, qword ptr [rsp + 8]
0xa8a9:	je	0xa837


0xa8ab:	mov	ebp, 1
0xa8b0:	xor	r12d, r12d
0xa8b3:	movsx	esi, r13b
0xa8b7:	mov	rdi, r15
0xa8ba:	mov	qword ptr [rsp + 8], rcx
0xa8bf:	call	0x1ce0


0xb068:	test	rax, rax
0xb06b:	mov	rcx, qword ptr [rsp + 8]
0xb070:	je	0xb13c


0xb13c:	mov	qword ptr [r14], rbx
0xb13f:	or	ebp, 2
0xb142:	jmp	0xaffd


0xb076:	lea	eax, [r12 - 0x45]
0xb07b:	cmp	al, 0x2f
0xb07d:	ja	0xb0d0


0xb07f:	movabs	rdx, 0x814400308945
0xb089:	bt	rdx, rax
0xb08d:	jae	0xb0d0


0xb0d0:	mov	edi, 1
0xb0d5:	mov	esi, 0x400
0xb0da:	sub	r12d, 0x42
0xb0de:	cmp	r12b, 0x35
0xb0e2:	ja	0xb13c


0xb08f:	mov	esi, 0x30
0xb094:	mov	rdi, r13
0xb097:	mov	qword ptr [rsp + 8], rcx
0xb09c:	call	0x1ce0


0xb0e4:	lea	rdx, [rip + 0x348d]
0xb0eb:	movzx	r12d, r12b
0xb0ef:	movsxd	rax, dword ptr [rdx + r12*4]
0xb0f3:	add	rax, rdx
0xb0f6:	jmp	rax


0xb0a1:	test	rax, rax
0xb0a4:	mov	rcx, qword ptr [rsp + 8]
0xb0a9:	je	0xb0d0


0xb0ab:	movzx	eax, byte ptr [rcx + 1]
0xb0af:	cmp	al, 0x44
0xb0b1:	je	0xb0bf


0xb0bf:	mov	edi, 2
0xb0c4:	mov	esi, 0x3e8
0xb0c9:	jmp	0xb0da


0xb0b3:	cmp	al, 0x69
0xb0b5:	je	0xb288


0xb0da:	sub	r12d, 0x42
0xb0de:	cmp	r12b, 0x35
0xb0e2:	ja	0xb13c


0xb288:	xor	edi, edi
0xb28a:	cmp	byte ptr [rcx + 2], 0x42
0xb28e:	mov	esi, 0x400
0xb293:	sete	dil
0xb297:	lea	edi, [rdi + rdi + 1]
0xb29b:	jmp	0xb0da


0xb0bb:	cmp	al, 0x42
0xb0bd:	jne	0xb0d0


0xb048:	test	rax, rax
0xb04b:	mov	ebx, 1
0xb050:	mov	rcx, qword ptr [rsp + 8]
0xb055:	je	0xaff8


0xb364:	test	eax, eax
0xb366:	je	0xb3a4


0xb368:	call	0x1bb0


0xb36d:	mov	r12d, dword ptr [rax]
0xb370:	mov	rdi, rbx
0xb373:	mov	rbp, rax
0xb376:	call	0x1c60


0xb37b:	test	r12d, r12d
0xb37e:	jne	0xb3b0


0xb380:	pop	rbx
0xb381:	pop	rbp
0xb382:	pop	r12
0xb384:	ret	


0xb3b0:	mov	dword ptr [rbp], r12d
0xb3b4:	mov	eax, 0xffffffff
0xb3b9:	jmp	0xb380


0x5a9b:	xor	ebx, ebx
0x5a9d:	mov	dword ptr [rbp], r12d
0x5aa1:	jmp	0x5a31


0x5a56:	test	eax, eax
0x5a58:	jne	0x5a6d


0x5a5a:	mov	rsi, rbp
0x5a5d:	mov	edi, r12d
0x5a60:	call	0x1e90


0x5a6d:	call	0x1bb0


0x1e90:	jmp	qword ptr [rip + 0x20f0a2]




0x5a72:	mov	ebp, dword ptr [rax]
0x5a74:	mov	rbx, rax
0x5a77:	mov	edi, r12d
0x5a7a:	call	0x1d60


0x5a7f:	mov	dword ptr [rbx], ebp
0x5a81:	xor	ebx, ebx
0x5a83:	jmp	0x5a31


0xbd0a:	and	ebx, 0x20
0xbd0d:	test	ebx, ebx
0xbd0f:	jne	0xbd28


0xbd11:	test	eax, eax
0xbd13:	je	0xbd1f


0xbd28:	test	eax, eax
0xbd2a:	jne	0xbd48


0xbd1f:	pop	rbx
0xbd20:	pop	rbp
0xbd21:	pop	r12
0xbd23:	ret	


0xbd15:	test	r12, r12
0xbd18:	mov	eax, 0xffffffff
0xbd1d:	je	0xbd58


0xbd2c:	call	0x1bb0


0xbd48:	pop	rbx
0xbd49:	mov	eax, 0xffffffff
0xbd4e:	pop	rbp
0xbd4f:	pop	r12
0xbd51:	ret	


0xbd58:	call	0x1bb0


0xbd5d:	cmp	dword ptr [rax], 9
0xbd60:	pop	rbx
0xbd61:	pop	rbp
0xbd62:	pop	r12
0xbd64:	setne	al
0xbd67:	movzx	eax, al
0xbd6a:	neg	eax
0xbd6c:	ret	


0xbd31:	mov	dword ptr [rax], 0
0xbd37:	mov	eax, 0xffffffff
0xbd3c:	pop	rbx
0xbd3d:	pop	rbp
0xbd3e:	pop	r12
0xbd40:	ret	


0x39c8:	test	eax, eax
0x39ca:	je	0x3949


0x39d0:	mov	rdx, qword ptr [rbx + 8]
0x39d4:	mov	esi, 3
0x39d9:	xor	edi, edi
0x39db:	call	0x94f0


0x2cd5:	nop	
0x2cd6:	nop	word ptr cs:[rax + rax]


0x5932:	test	eax, eax
0x5934:	je	0x594c


0x594c:	mov	rdi, qword ptr [rip + 0x20b7cd]
0x5953:	call	0xbcf0


0x5936:	call	0x1bb0


0x593b:	cmp	byte ptr [rip + 0x20b8ee], 0
0x5942:	mov	rbx, rax
0x5945:	je	0x5963


0x5963:	lea	rsi, [rip + 0x7ed0]
0x596a:	xor	edi, edi
0x596c:	mov	edx, 5
0x5971:	call	0x1c80


0x5947:	cmp	dword ptr [rax], 0x20
0x594a:	jne	0x5963


0x5976:	mov	rdi, qword ptr [rip + 0x20b8bb]
0x597d:	mov	rbp, rax
0x5980:	test	rdi, rdi
0x5983:	je	0x59ad


0x59ad:	mov	esi, dword ptr [rbx]
0x59af:	lea	rdx, [rip + 0x7e94]
0x59b6:	mov	rcx, rax
0x59b9:	xor	edi, edi
0x59bb:	xor	eax, eax
0x59bd:	call	0x1ee0


0x5985:	call	0x94c0


0x59c2:	jmp	0x59a2


0x59a2:	mov	edi, dword ptr [rip + 0x20b6b8]
0x59a8:	call	0x1be0


0x1be0:	jmp	qword ptr [rip + 0x20f1fa]




0x5958:	test	eax, eax
0x595a:	jne	0x59a2


0x595c:	add	rsp, 8
0x5960:	pop	rbx
0x5961:	pop	rbp
0x5962:	ret	


0x5a65:	test	rax, rax
0x5a68:	mov	rbx, rax
0x5a6b:	jne	0x5a31


0x20b4:	cmp	eax, -1
0x20b7:	mov	edx, eax
0x20b9:	je	0x2124


0x2124:	test	r15, r15
0x2127:	je	0x2139


0x20bb:	lea	eax, [rax - 0x30]
0x20be:	cmp	eax, 9
0x20c1:	jbe	0x20e0


0x2139:	cmp	qword ptr [rip + 0x20f02f], 0
0x2141:	je	0x2788


0x2129:	mov	rdi, r15
0x212c:	call	0x2ce0


0x20e0:	lea	rcx, [rbx + 1]
0x20e4:	cmp	rcx, qword ptr [rsp + 0x40]
0x20e9:	jae	0x2100


0x20c3:	add	edx, 0x83
0x20c9:	cmp	edx, 0x104
0x20cf:	ja	0x2851


0x2788:	lea	rdi, [rip + 0x987b]
0x278f:	call	0x1b80


0x2147:	lea	rdi, [rip + 0x9ecc]
0x214e:	call	0x1b80


0x20eb:	mov	byte ptr [r15 + rbx], dl
0x20ef:	mov	byte ptr [r15 + rcx], 0
0x20f4:	mov	rbx, rcx
0x20f7:	jmp	0x2090


0x2100:	mov	rsi, qword ptr [rsp + 0x18]
0x2105:	mov	rdi, r15
0x2108:	mov	dword ptr [rsp + 0x14], edx
0x210c:	mov	qword ptr [rsp + 8], rcx
0x2111:	call	0x9e70


0x20d5:	movsxd	rax, dword ptr [rbp + rdx*4]
0x20da:	add	rax, rbp
0x20dd:	jmp	rax


0x2851:	mov	edi, 1
0x2856:	call	0x52a0


0x2090:	lea	rdx, [rip + 0xb769]
0x2097:	lea	rcx, [rip + 0x20e742]
0x209e:	mov	r8, r14
0x20a1:	mov	rsi, r13
0x20a4:	mov	edi, r12d
0x20a7:	mov	dword ptr [rsp + 0x3c], 0xffffffff
0x20af:	call	0x1cc0


0x2153:	mov	rdi, rax
0x2156:	call	0xb830


0x215b:	cmp	qword ptr [rip + 0x20f065], 0
0x2163:	mov	qword ptr [rip + 0x20effe], rax
0x216a:	jne	0x2177


0x216c:	mov	qword ptr [rip + 0x20f051], 1
0x2177:	movzx	edi, byte ptr [rip + 0x20f081]
0x217e:	test	dil, dil
0x2181:	je	0x219d


0x2177:	movzx	edi, byte ptr [rip + 0x20f081]
0x217e:	test	dil, dil
0x2181:	je	0x219d


0x219d:	cmp	byte ptr [rsp + 0x2d], 0
0x21a2:	je	0x21d6


0x2183:	cmp	byte ptr [rip + 0x20f071], 0
0x218a:	jne	0x28de


0x21d6:	mov	eax, dword ptr [rip + 0x20ef1c]
0x21dc:	cmp	r12d, eax
0x21df:	jle	0x221f


0x21a4:	cmp	byte ptr [rsp + 0x2e], 0
0x21a9:	je	0x2727


0x2190:	cmp	byte ptr [rip + 0x20f05e], 0
0x2197:	jne	0x285b


0x28de:	lea	rsi, [rip + 0xaa63]
0x28e5:	mov	edx, 5
0x28ea:	xor	edi, edi
0x28ec:	call	0x1c80


0x221f:	cmp	dword ptr [rsp + 0x28], 0
0x2224:	je	0x2719


0x21e1:	mov	ecx, dword ptr [rsp + 0x28]
0x21e5:	movsxd	rdx, eax
0x21e8:	mov	esi, r12d
0x21eb:	mov	r9, qword ptr [rsp + 0x20]
0x21f0:	sub	esi, eax
0x21f2:	lea	rdx, [r13 + rdx*8]
0x21f7:	mov	eax, ecx
0x21f9:	add	esi, eax
0x21fb:	nop	dword ptr [rax + rax]
0x2200:	mov	r8, qword ptr [rdx]
0x2203:	add	ecx, 1
0x2206:	add	rdx, 8
0x220a:	cmp	ecx, esi
0x220c:	mov	qword ptr [r9 + rax*8], r8
0x2210:	mov	eax, ecx
0x2212:	jne	0x2200


0x2727:	cmp	byte ptr [rip + 0x20ea62], 1
0x272e:	je	0x21d6


0x21af:	test	dil, dil
0x21b2:	jne	0x21c1


0x285b:	lea	rsi, [rip + 0xab26]
0x2862:	mov	edx, 5
0x2867:	xor	edi, edi
0x2869:	call	0x1c80


0x2719:	xor	esi, esi
0x271b:	xor	edi, edi
0x271d:	call	0x42e0


0x222a:	test	dil, dil
0x222d:	jne	0x282b


0x2214:	mov	dword ptr [rsp + 0x28], ecx
0x2218:	mov	dword ptr [rip + 0x20eed9], r12d
0x221f:	cmp	dword ptr [rsp + 0x28], 0
0x2224:	je	0x2719


0x2200:	mov	r8, qword ptr [rdx]
0x2203:	add	ecx, 1
0x2206:	add	rdx, 8
0x220a:	cmp	ecx, esi
0x220c:	mov	qword ptr [r9 + rax*8], r8
0x2210:	mov	eax, ecx
0x2212:	jne	0x2200


0x2734:	cmp	byte ptr [rsp + 0x2f], 0
0x2739:	je	0x21d6


0x21b4:	cmp	byte ptr [rip + 0x20f040], 0
0x21bb:	je	0x283e


0x21c1:	cmp	byte ptr [rsp + 0x2f], 0
0x21c6:	mov	byte ptr [rip + 0x20f020], 1
0x21cd:	je	0x21d6


0x2233:	mov	eax, dword ptr [rsp + 0x28]
0x2237:	mov	rbx, qword ptr [rsp + 0x20]
0x223c:	sub	eax, 1
0x223f:	lea	rbp, [rbx + rax*8 + 8]
0x2244:	nop	dword ptr [rax]
0x2248:	mov	rsi, rbx
0x224b:	mov	edi, 1
0x2250:	add	rbx, 8
0x2254:	call	0x42e0


0x282b:	mov	rsi, qword ptr [rsp + 0x20]
0x2830:	mov	edi, dword ptr [rsp + 0x28]
0x2834:	call	0x42e0


0x273f:	test	dil, dil
0x2742:	jne	0x2751


0x283e:	mov	byte ptr [rip + 0x20e9a7], 1
0x2845:	jmp	0x21d6


0x21cf:	mov	byte ptr [rip + 0x20efba], 1
0x21d6:	mov	eax, dword ptr [rip + 0x20ef1c]
0x21dc:	cmp	r12d, eax
0x21df:	jle	0x221f


0x2744:	cmp	byte ptr [rip + 0x20eab0], 0
0x274b:	je	0x21d6


0x2751:	cmp	byte ptr [rip + 0x20ea95], 0
0x2758:	jne	0x21cf


0x275e:	cmp	dword ptr [rip + 0x20ea27], 0
0x2765:	mov	byte ptr [rip + 0x20ea80], 1
0x276c:	jg	0x21cf


0x2772:	jmp	0x21d6


0x2839:	jmp	0x225e


0x225e:	mov	rdi, qword ptr [rip + 0x20ef3b]
0x2265:	call	0x1b90


0x226a:	mov	rdi, qword ptr [rip + 0x20eed7]
0x2271:	call	0x1b90


0x2276:	mov	rdi, qword ptr [rip + 0x20efab]
0x227d:	call	0x1b90


0x2282:	mov	rdi, qword ptr [rip + 0x20ef7f]
0x2289:	call	0x1b90


0x228e:	mov	rdi, qword ptr [rip + 0x20ef6b]
0x2295:	call	0x1b90


0x229a:	mov	rdi, qword ptr [rip + 0x20ef7f]
0x22a1:	call	0x1b90


0x22a6:	cmp	byte ptr [rip + 0x20ef49], 0
0x22ad:	jne	0x27ea


0x22b3:	mov	rbx, qword ptr [rsp + 0x48]
0x22b8:	xor	rbx, qword ptr fs:[0x28]
0x22c1:	movzx	eax, byte ptr [rip + 0x20ef08]
0x22c8:	jne	0x28d9


0x27ea:	mov	rdi, qword ptr [rip + 0x20e8ff]
0x27f1:	call	0xb340


0x22ce:	add	rsp, 0x58
0x22d2:	pop	rbx
0x22d3:	pop	rbp
0x22d4:	pop	r12
0x22d6:	pop	r13
0x22d8:	pop	r14
0x22da:	pop	r15
0x22dc:	ret	


0x28d9:	call	0x1cb0


0x27f6:	add	eax, 1
0x27f9:	jne	0x22b3


0x27ff:	lea	rsi, [rip + 0x96cf]
0x2806:	mov	edx, 5
0x280b:	xor	edi, edi
0x280d:	call	0x1c80


0x2259:	cmp	rbp, rbx
0x225c:	jne	0x2248


0x2248:	mov	rsi, rbx
0x224b:	mov	edi, 1
0x2250:	add	rbx, 8
0x2254:	call	0x42e0


0x2722:	jmp	0x225e


0x2812:	mov	rbx, rax
0x2815:	call	0x1bb0


0x281a:	mov	esi, dword ptr [rax]
0x281c:	mov	rdx, rbx
0x281f:	mov	edi, 1
0x2824:	xor	eax, eax
0x2826:	call	0x1ee0


0x286e:	xor	esi, esi
0x2870:	mov	rdx, rax
0x2873:	mov	edi, 1
0x2878:	xor	eax, eax
0x287a:	call	0x1ee0


0x287f:	lea	rsi, [rip + 0xa9aa]
0x2886:	mov	edx, 5
0x288b:	xor	edi, edi
0x288d:	call	0x1c80


0x2892:	xor	esi, esi
0x2894:	mov	rdx, rax
0x2897:	mov	edi, 1
0x289c:	xor	eax, eax
0x289e:	call	0x1ee0


0x28a3:	mov	rdi, qword ptr [rip + 0x20e856]
0x28aa:	call	0x96c0


0x28f1:	xor	esi, esi
0x28f3:	mov	rdx, rax
0x28f6:	mov	edi, 1
0x28fb:	xor	eax, eax
0x28fd:	call	0x1ee0


0x2902:	nop	word ptr cs:[rax + rax]
0x290c:	nop	dword ptr [rax]


0x2794:	test	rax, rax
0x2797:	je	0x27e1


0x27e1:	lea	rdx, [rip + 0x97c9]
0x27e8:	jmp	0x27ae


0x2799:	mov	edi, 2
0x279e:	call	0x5b10


0x27ae:	mov	qword ptr [rip + 0x20e9bb], rdx
0x27b5:	jmp	0x2147


0x27a3:	test	al, al
0x27a5:	lea	rdx, [rip + 0x97f6]
0x27ac:	jne	0x27e1


0x2131:	mov	rdi, r15
0x2134:	call	0x1b90


0x2116:	mov	edx, dword ptr [rsp + 0x14]
0x211a:	mov	r15, rax
0x211d:	mov	rcx, qword ptr [rsp + 8]
0x2122:	jmp	0x20eb


0x2b2b:	mov	ecx, dword ptr [rip + 0x20e6e7]
0x2b31:	mov	qword ptr [rip + 0x20e6e8], rax
0x2b38:	mov	rdx, rcx
0x2b3b:	add	edx, 1
0x2b3e:	mov	byte ptr [rax + rcx], bl
0x2b41:	mov	dword ptr [rip + 0x20e6d1], edx
0x2b47:	pop	rbx
0x2b48:	ret	


0x598a:	mov	esi, dword ptr [rbx]
0x598c:	lea	rdx, [rip + 0x7eb3]
0x5993:	mov	rcx, rax
0x5996:	mov	r8, rbp
0x5999:	xor	edi, edi
0x599b:	xor	eax, eax
0x599d:	call	0x1ee0


0x28af:	lea	rsi, [rip + 0x9722]
0x28b6:	mov	rbx, rax
0x28b9:	mov	edx, 5
0x28be:	xor	edi, edi
0x28c0:	call	0x1c80


0x28c5:	mov	rcx, rbx
0x28c8:	mov	rdx, rax
0x28cb:	xor	esi, esi
0x28cd:	mov	edi, 1
0x28d2:	xor	eax, eax
0x28d4:	call	0x1ee0


0xa014:	mov	esi, dword ptr [r14]
0xa017:	mov	r8, rax
0xa01a:	mov	eax, 0
0xa01f:	lea	rdx, [rip + 0x3820]
0xa026:	mov	rcx, r13
0xa029:	cmp	esi, 0x16
0xa02c:	cmove	esi, eax
0xa02f:	test	ebx, ebx
0xa031:	mov	eax, 1
0xa036:	cmove	ebx, eax
0xa039:	xor	eax, eax
0xa03b:	mov	edi, ebx
0xa03d:	call	0x1ee0


0xa042:	mov	rbp, qword ptr [rsp]
0xa046:	mov	rdx, qword ptr [rsp + 8]
0xa04b:	xor	rdx, qword ptr fs:[0x28]
0xa054:	mov	rax, rbp
0xa057:	jne	0xa0ac


0x58af:	lea	rsi, [rip + 0x793a]
0x58b6:	xor	edi, edi
0x58b8:	mov	edx, 5
0x58bd:	mov	rbp, rax
0x58c0:	call	0x1c80


0x58c5:	cmp	qword ptr [rsp], 0x7fffffff
0x58cd:	mov	rbx, rax
0x58d0:	mov	esi, 0x4b
0x58d5:	jg	0x58de


0x58d7:	call	0x1bb0


0x58de:	xor	edi, edi
0x58e0:	mov	r8, rbp
0x58e3:	mov	ecx, r12d
0x58e6:	mov	rdx, rbx
0x58e9:	xor	eax, eax
0x58eb:	call	0x1ee0


0x58f0:	mov	edi, 1
0x58f5:	call	0x52a0


0x58dc:	mov	esi, dword ptr [rax]
0x58de:	xor	edi, edi
0x58e0:	mov	r8, rbp
0x58e3:	mov	ecx, r12d
0x58e6:	mov	rdx, rbx
0x58e9:	xor	eax, eax
0x58eb:	call	0x1ee0


0x912c:	lea	rsi, [rax + 1]
0x9130:	mov	qword ptr [rsp + 0x48], rax
0x9135:	add	rsp, 0x20
0x9139:	mov	rdi, rsi
0x913c:	mov	qword ptr [rsp + 0x18], rsi
0x9141:	call	0x9d10


0x9146:	mov	qword ptr [rsp + 0x10], rax
0x914b:	sub	rsp, 8
0x914f:	push	qword ptr [rbx + 0x30]
0x9152:	push	qword ptr [rbx + 0x28]
0x9155:	mov	r10, qword ptr [rsp + 0x38]
0x915a:	mov	r9d, ebp
0x915d:	mov	r8d, dword ptr [rbx]
0x9160:	mov	rcx, r15
0x9163:	mov	rdx, r14
0x9166:	mov	rdi, rax
0x9169:	push	r10
0x916b:	mov	rsi, qword ptr [rsp + 0x38]
0x9170:	call	0x7b40


0x9175:	mov	eax, dword ptr [rsp + 0x2c]
0x9179:	add	rsp, 0x20
0x917d:	test	r12, r12
0x9180:	mov	dword ptr [r13], eax
0x9184:	je	0x918f


0x918f:	mov	rax, qword ptr [rsp + 0x10]
0x9194:	add	rsp, 0x38
0x9198:	pop	rbx
0x9199:	pop	rbp
0x919a:	pop	r12
0x919c:	pop	r13
0x919e:	pop	r14
0x91a0:	pop	r15
0x91a2:	ret	


0x9186:	mov	r11, qword ptr [rsp + 0x28]
0x918b:	mov	qword ptr [r12], r11
0x918f:	mov	rax, qword ptr [rsp + 0x10]
0x9194:	add	rsp, 0x38
0x9198:	pop	rbx
0x9199:	pop	rbp
0x919a:	pop	r12
0x919c:	pop	r13
0x919e:	pop	r14
0x91a0:	pop	r15
0x91a2:	ret	


0x90a1:	mov	dword ptr [rbp], r12d
0x90a5:	add	rsp, 0x38
0x90a9:	pop	rbx
0x90aa:	pop	rbp
0x90ab:	pop	r12
0x90ad:	pop	r13
0x90af:	pop	r14
0x90b1:	pop	r15
0x90b3:	ret	


0x8e6c:	add	rsp, 0x20
0x8e70:	mov	r11, qword ptr [rsp + 0x10]
0x8e75:	cmp	r11, rax
0x8e78:	ja	0x8ee1


0x8e7a:	lea	rsi, [rax + 1]
0x8e7e:	lea	rax, [rip + 0x2083db]
0x8e85:	cmp	r12, rax
0x8e88:	mov	qword ptr [rbx], rsi
0x8e8b:	je	0x8e9f


0x8ee1:	mov	eax, dword ptr [rsp + 0x18]
0x8ee5:	mov	dword ptr [r13], eax
0x8ee9:	add	rsp, 0x28
0x8eed:	mov	rax, r12
0x8ef0:	pop	rbx
0x8ef1:	pop	rbp
0x8ef2:	pop	r12
0x8ef4:	pop	r13
0x8ef6:	pop	r14
0x8ef8:	pop	r15
0x8efa:	ret	


0x8e9f:	mov	rdi, rsi
0x8ea2:	mov	qword ptr [rsp + 0x10], rsi
0x8ea7:	call	0x9d10


0x8e8d:	mov	rdi, r12
0x8e90:	mov	qword ptr [rsp + 0x10], rsi
0x8e95:	call	0x1b90


0x8e9a:	mov	rsi, qword ptr [rsp + 0x10]
0x8e9f:	mov	rdi, rsi
0x8ea2:	mov	qword ptr [rsp + 0x10], rsi
0x8ea7:	call	0x9d10


0x8eac:	sub	rsp, 8
0x8eb0:	mov	qword ptr [rbx + 8], rax
0x8eb4:	mov	r8d, dword ptr [rbp]
0x8eb8:	push	qword ptr [rbp + 0x30]
0x8ebb:	push	qword ptr [rbp + 0x28]
0x8ebe:	mov	rcx, r14
0x8ec1:	push	r15
0x8ec3:	mov	r9d, dword ptr [rsp + 0x3c]
0x8ec8:	mov	rdi, rax
0x8ecb:	mov	rdx, qword ptr [rsp + 0x28]
0x8ed0:	mov	rsi, qword ptr [rsp + 0x30]
0x8ed5:	mov	r12, rax
0x8ed8:	call	0x7b40


0x95f2:	mov	rdi, qword ptr [rsp + 0x38]
0x95f7:	xor	rdi, qword ptr fs:[0x28]
0x9600:	jne	0x960c


0x9602:	add	rsp, 0x48
0x9606:	ret	


0x960c:	call	0x1cb0


0x933f:	mov	rcx, qword ptr [rsp + 0x38]
0x9344:	xor	rcx, qword ptr fs:[0x28]
0x934d:	jne	0x9359


0x934f:	add	rsp, 0x48
0x9353:	ret	


0x9359:	call	0x1cb0


0x93cb:	mov	rdx, qword ptr [rsp + 0x38]
0x93d0:	xor	rdx, qword ptr fs:[0x28]
0x93d9:	jne	0x93e5


0x93db:	add	rsp, 0x48
0x93df:	ret	


0x93e5:	call	0x1cb0


0x955f:	mov	rcx, qword ptr [rsp + 0x38]
0x9564:	xor	rcx, qword ptr fs:[0x28]
0x956d:	jne	0x9579


0x956f:	add	rsp, 0x48
0x9573:	ret	


0x9579:	call	0x1cb0


0x39e0:	mov	rbx, rax
0x39e3:	call	0x1bb0


0x39e8:	mov	esi, dword ptr [rax]
0x39ea:	lea	rdx, [rip + 0x9e59]
0x39f1:	mov	rcx, rbx
0x39f4:	mov	edi, 1
0x39f9:	xor	eax, eax
0x39fb:	call	0x1ee0


0x42ad:	mov	rbp, rax
0x42b0:	call	0x1bb0


0x42b5:	mov	esi, dword ptr [rax]
0x42b7:	lea	rdx, [rip + 0x958c]
0x42be:	mov	rcx, rbp
0x42c1:	xor	eax, eax
0x42c3:	xor	edi, edi
0x42c5:	call	0x1ee0


0x42ca:	add	rsp, 8
0x42ce:	mov	eax, ebx
0x42d0:	pop	rbx
0x42d1:	pop	rbp
0x42d2:	ret	


0x3a10:	mov	rbx, rax
0x3a13:	call	0x1bb0


0x3a18:	mov	esi, dword ptr [rax]
0x3a1a:	lea	rdx, [rip + 0x9e29]
0x3a21:	mov	rcx, rbx
0x3a24:	mov	edi, 1
0x3a29:	xor	eax, eax
0x3a2b:	call	0x1ee0


0x948e:	mov	rsi, qword ptr [rsp + 0x38]
0x9493:	xor	rsi, qword ptr fs:[0x28]
0x949c:	jne	0x94a3


0x949e:	add	rsp, 0x48
0x94a2:	ret	


0x94a3:	call	0x1cb0


0x8edd:	add	rsp, 0x20
0x8ee1:	mov	eax, dword ptr [rsp + 0x18]
0x8ee5:	mov	dword ptr [r13], eax
0x8ee9:	add	rsp, 0x28
0x8eed:	mov	rax, r12
0x8ef0:	pop	rbx
0x8ef1:	pop	rbp
0x8ef2:	pop	r12
0x8ef4:	pop	r13
0x8ef6:	pop	r14
0x8ef8:	pop	r15
0x8efa:	ret	


0x499e:	test	al, al
0x49a0:	je	0x4c60


0x4c60:	mov	rdi, rbx
0x4c63:	call	0x3c80


0x49a6:	mov	eax, dword ptr [rbx + 0x30]
0x49a9:	movzx	r9d, byte ptr [rip + 0x20c7cf]
0x49b1:	sub	eax, 1
0x49b4:	or	r12d, r9d
0x49b7:	test	eax, eax
0x49b9:	mov	dword ptr [rbx + 0x30], eax
0x49bc:	jg	0x4920


0x49c2:	call	0x2a20


0x4920:	cmp	byte ptr [rip + 0x20c8d8], 0
0x4927:	je	0x4950


0x4929:	mov	eax, dword ptr [rbx + 0x10]
0x492c:	test	eax, eax
0x492e:	je	0x4950


0x4930:	cmp	byte ptr [rip + 0x20c8c6], 0
0x4937:	jne	0x4c70


0x493d:	cmp	eax, 3
0x4940:	je	0x4ca0


0x4946:	cmp	eax, 2
0x4949:	je	0x4ce0


0x4ce0:	cmp	byte ptr [rip + 0x20c515], 0
0x4ce7:	je	0x4950


0x4ced:	jmp	0x4ca0


0x49c7:	test	eax, eax
0x49c9:	jne	0x4920


0x49cf:	test	r9b, r9b
0x49d2:	je	0x4cc8


0x4c68:	jmp	0x49a6


0x38ab:	cmp	ebx, -1
0x38ae:	jne	0x38a0


0x38b0:	jmp	0x3857


0x38a0:	sub	ebx, 1
0x38a3:	mov	edi, 0x20
0x38a8:	call	qword ptr [rbp]


0x3889:	jmp	0x3857


0x3833:	cmp	byte ptr [rip + 0x20d7e6], 9
0x383a:	jne	0x3857


0x383c:	mov	esi, dword ptr [rip + 0x20d996]
0x3842:	mov	ecx, dword ptr [rip + 0x20d7ec]
0x3848:	mov	eax, esi
0x384a:	cdq	
0x384b:	idiv	ecx
0x384d:	sub	ecx, edx
0x384f:	add	ecx, esi
0x3851:	mov	dword ptr [rip + 0x20d981], ecx
0x3857:	cmp	byte ptr [rip + 0x20d98f], 0
0x385e:	je	0x3875


0x381b:	cmp	rbx, r12
0x381e:	jne	0x3810


0x3810:	add	rbx, 1
0x3814:	movsx	edi, byte ptr [rbx - 1]
0x3818:	call	qword ptr [rbp]


0xbdfd:	add	rbx, 1
0xbe01:	cmp	rbp, rbx
0xbe04:	jne	0xbdf0


0xbdf0:	mov	rdx, r15
0xbdf3:	mov	rsi, r14
0xbdf6:	mov	edi, r13d
0xbdf9:	call	qword ptr [r12 + rbx*8]


0x3f93:	cmp	rbp, r12
0x3f96:	jne	0x3f88


0x3f98:	jmp	0x3f20


0x3f88:	add	rbp, 1
0x3f8c:	movsx	edi, byte ptr [rbp - 1]
0x3f90:	call	qword ptr [rbx + 0x20]


0x3f1b:	cmp	r12, rbp
0x3f1e:	jne	0x3f10


0x3f10:	add	rbp, 1
0x3f14:	movsx	edi, byte ptr [rbp - 1]
0x3f18:	call	qword ptr [rbx + 0x20]






0x9980:	lea	rsi, [rip + 0x4771]
0x9987:	mov	edx, 5
0x998c:	xor	edi, edi
0x998e:	mov	r14, qword ptr [rbx + 0x18]
0x9992:	mov	r13, qword ptr [rbx + 0x10]
0x9996:	mov	r12, qword ptr [rbx + 8]
0x999a:	mov	rbx, qword ptr [rbx]
0x999d:	call	0x1c80


0x97a0:	mov	r9, qword ptr [rbx + 0x38]
0x97a4:	mov	rax, qword ptr [rbx + 0x10]
0x97a8:	lea	rsi, [rip + 0x49e9]
0x97af:	mov	r8, qword ptr [rbx + 8]
0x97b3:	mov	edx, 5
0x97b8:	xor	edi, edi
0x97ba:	mov	r13, qword ptr [rbx + 0x30]
0x97be:	mov	r12, qword ptr [rbx + 0x28]
0x97c2:	mov	qword ptr [rsp + 0x10], r9
0x97c7:	mov	r15, qword ptr [rbx + 0x20]
0x97cb:	mov	r14, qword ptr [rbx + 0x18]
0x97cf:	mov	qword ptr [rsp], rax
0x97d3:	mov	qword ptr [rsp + 8], r8
0x97d8:	mov	rbx, qword ptr [rbx]
0x97db:	call	0x1c80


0x98a8:	mov	rbx, qword ptr [rbx]
0x98ab:	lea	rsi, [rip + 0x46ed]
0x98b2:	mov	edx, 5
0x98b7:	xor	edi, edi
0x98b9:	call	0x1c80


0x98e8:	mov	r12, qword ptr [rbx + 8]
0x98ec:	lea	rsi, [rip + 0x46bc]
0x98f3:	mov	rbx, qword ptr [rbx]
0x98f6:	mov	edx, 5
0x98fb:	xor	edi, edi
0x98fd:	call	0x1c80


0x9a08:	mov	r8, qword ptr [rbx + 8]
0x9a0c:	mov	r12, qword ptr [rbx + 0x28]
0x9a10:	lea	rsi, [rip + 0x4729]
0x9a17:	mov	r15, qword ptr [rbx + 0x20]
0x9a1b:	mov	r14, qword ptr [rbx + 0x18]
0x9a1f:	mov	edx, 5
0x9a24:	mov	r13, qword ptr [rbx + 0x10]
0x9a28:	xor	edi, edi
0x9a2a:	mov	rbx, qword ptr [rbx]
0x9a2d:	mov	qword ptr [rsp], r8
0x9a31:	call	0x1c80


0x9930:	mov	r13, qword ptr [rbx + 0x10]
0x9934:	mov	r12, qword ptr [rbx + 8]
0x9938:	lea	rsi, [rip + 0x4687]
0x993f:	mov	rbx, qword ptr [rbx]
0x9942:	mov	edx, 5
0x9947:	xor	edi, edi
0x9949:	call	0x1c80


0x9a70:	mov	r9, qword ptr [rbx + 0x10]
0x9a74:	mov	r13, qword ptr [rbx + 0x30]
0x9a78:	lea	rsi, [rip + 0x46e9]
0x9a7f:	mov	r12, qword ptr [rbx + 0x28]
0x9a83:	mov	r15, qword ptr [rbx + 0x20]
0x9a87:	mov	edx, 5
0x9a8c:	mov	r14, qword ptr [rbx + 0x18]
0x9a90:	mov	r8, qword ptr [rbx + 8]
0x9a94:	xor	edi, edi
0x9a96:	mov	qword ptr [rsp + 8], r9
0x9a9b:	mov	rbx, qword ptr [rbx]
0x9a9e:	mov	qword ptr [rsp], r8
0x9aa2:	call	0x1c80


0x9850:	mov	r10, qword ptr [rbx + 0x40]
0x9854:	mov	r9, qword ptr [rbx + 0x38]
0x9858:	lea	rsi, [rip + 0x4969]
0x985f:	mov	rax, qword ptr [rbx + 0x10]
0x9863:	mov	r8, qword ptr [rbx + 8]
0x9867:	mov	edx, 5
0x986c:	mov	r13, qword ptr [rbx + 0x30]
0x9870:	mov	r12, qword ptr [rbx + 0x28]
0x9874:	mov	r15, qword ptr [rbx + 0x20]
0x9878:	mov	r14, qword ptr [rbx + 0x18]
0x987c:	mov	rbx, qword ptr [rbx]
0x987f:	mov	qword ptr [rsp + 0x18], r10
0x9884:	mov	qword ptr [rsp + 0x10], r9
0x9889:	mov	qword ptr [rsp], rax
0x988d:	mov	qword ptr [rsp + 8], r8
0x9892:	xor	edi, edi
0x9894:	call	0x1c80


0x9816:	add	rsp, 0x28
0x981a:	pop	rbx
0x981b:	pop	rbp
0x981c:	pop	r12
0x981e:	pop	r13
0x9820:	pop	r14
0x9822:	pop	r15
0x9824:	ret	


0x99d8:	mov	r15, qword ptr [rbx + 0x20]
0x99dc:	lea	rsi, [rip + 0x4735]
0x99e3:	mov	edx, 5
0x99e8:	xor	edi, edi
0x99ea:	mov	r14, qword ptr [rbx + 0x18]
0x99ee:	mov	r13, qword ptr [rbx + 0x10]
0x99f2:	mov	r12, qword ptr [rbx + 8]
0x99f6:	mov	rbx, qword ptr [rbx]
0x99f9:	call	0x1c80


0x99fe:	push	r15
0x9a00:	jmp	0x99a6


0x99a6:	push	r14
0x99a8:	mov	rdx, rax
0x99ab:	mov	r9, r13
0x99ae:	mov	r8, r12
0x99b1:	mov	rcx, rbx
0x99b4:	mov	rdi, rbp
0x99b7:	mov	esi, 1
0x99bc:	xor	eax, eax
0x99be:	call	0x1f50


0x99c3:	pop	rax
0x99c4:	pop	rdx
0x99c5:	add	rsp, 0x28
0x99c9:	pop	rbx
0x99ca:	pop	rbp
0x99cb:	pop	r12
0x99cd:	pop	r13
0x99cf:	pop	r14
0x99d1:	pop	r15
0x99d3:	ret	


0x9aa7:	push	r13
0x9aa9:	push	r12
0x9aab:	push	r15
0x9aad:	push	r14
0x9aaf:	mov	r9, qword ptr [rsp + 0x28]
0x9ab4:	jmp	0x9a43


0x9a43:	mov	r8, qword ptr [rsp + 0x20]
0x9a48:	mov	rcx, rbx
0x9a4b:	mov	rdx, rax
0x9a4e:	mov	rdi, rbp
0x9a51:	mov	esi, 1
0x9a56:	xor	eax, eax
0x9a58:	call	0x1f50


0x9a5d:	add	rsp, 0x20
0x9a61:	add	rsp, 0x28
0x9a65:	pop	rbx
0x9a66:	pop	rbp
0x9a67:	pop	r12
0x9a69:	pop	r13
0x9a6b:	pop	r14
0x9a6d:	pop	r15
0x9a6f:	ret	


0x994e:	add	rsp, 0x28
0x9952:	mov	r9, r13
0x9955:	mov	r8, r12
0x9958:	mov	rcx, rbx
0x995b:	mov	rdi, rbp
0x995e:	mov	rdx, rax
0x9961:	pop	rbx
0x9962:	pop	rbp
0x9963:	pop	r12
0x9965:	pop	r13
0x9967:	pop	r14
0x9969:	pop	r15
0x996b:	mov	esi, 1
0x9970:	xor	eax, eax
0x9972:	jmp	0x1f50


0x9a36:	sub	rsp, 8
0x9a3a:	mov	r9, r13
0x9a3d:	push	r12
0x9a3f:	push	r15
0x9a41:	push	r14
0x9a43:	mov	r8, qword ptr [rsp + 0x20]
0x9a48:	mov	rcx, rbx
0x9a4b:	mov	rdx, rax
0x9a4e:	mov	rdi, rbp
0x9a51:	mov	esi, 1
0x9a56:	xor	eax, eax
0x9a58:	call	0x1f50


0x9902:	add	rsp, 0x28
0x9906:	mov	r8, r12
0x9909:	mov	rcx, rbx
0x990c:	mov	rdi, rbp
0x990f:	mov	rdx, rax
0x9912:	mov	esi, 1
0x9917:	pop	rbx
0x9918:	pop	rbp
0x9919:	pop	r12
0x991b:	pop	r13
0x991d:	pop	r14
0x991f:	pop	r15
0x9921:	xor	eax, eax
0x9923:	jmp	0x1f50


0x98be:	add	rsp, 0x28
0x98c2:	mov	rcx, rbx
0x98c5:	mov	rdi, rbp
0x98c8:	pop	rbx
0x98c9:	pop	rbp
0x98ca:	pop	r12
0x98cc:	pop	r13
0x98ce:	pop	r14
0x98d0:	pop	r15
0x98d2:	mov	rdx, rax
0x98d5:	mov	esi, 1
0x98da:	xor	eax, eax
0x98dc:	jmp	0x1f50


0x97e0:	sub	rsp, 8
0x97e4:	mov	r9, qword ptr [rsp + 0x18]
0x97e9:	mov	rdx, rax
0x97ec:	mov	rcx, rbx
0x97ef:	mov	esi, 1
0x97f4:	mov	rdi, rbp
0x97f7:	xor	eax, eax
0x97f9:	push	r9
0x97fb:	push	r13
0x97fd:	push	r12
0x97ff:	push	r15
0x9801:	push	r14
0x9803:	mov	r9, qword ptr [rsp + 0x30]
0x9808:	mov	r8, qword ptr [rsp + 0x38]
0x980d:	call	0x1f50


0x99a2:	sub	rsp, 8
0x99a6:	push	r14
0x99a8:	mov	rdx, rax
0x99ab:	mov	r9, r13
0x99ae:	mov	r8, r12
0x99b1:	mov	rcx, rbx
0x99b4:	mov	rdi, rbp
0x99b7:	mov	esi, 1
0x99bc:	xor	eax, eax
0x99be:	call	0x1f50


0x26db:	sub	rsp, 8
0x26df:	mov	rdi, qword ptr [rip + 0x20ea02]
0x26e6:	mov	rcx, qword ptr [rip + 0x20e96b]
0x26ed:	push	0
0x26ef:	lea	r9, [rip + 0x98f8]
0x26f6:	lea	r8, [rip + 0x9900]
0x26fd:	lea	rdx, [rip + 0x9871]
0x2704:	lea	rsi, [rip + 0x97f1]
0x270b:	xor	eax, eax
0x270d:	call	0x9bb0


0x2712:	xor	edi, edi
0x2714:	call	0x1f30


0x86e0:	sub	rsp, 8
0x86e4:	mov	rcx, rbp
0x86e7:	mov	rsi, r13
0x86ea:	push	qword ptr [rsp + 0x68]
0x86ee:	push	qword ptr [rsp + 0x78]
0x86f2:	mov	rdi, r14
0x86f5:	push	0
0x86f7:	mov	r9d, dword ptr [rsp + 0x98]
0x86ff:	mov	r8d, dword ptr [rsp + 0x28]
0x8704:	mov	rdx, qword ptr [rsp + 0x30]
0x8709:	and	r9d, 0xfffffffd
0x870d:	call	0x7b40


0x8712:	add	rsp, 0x20
0x8716:	mov	r15, rax
0x8719:	mov	rbx, qword ptr [rsp + 0xa8]
0x8721:	xor	rbx, qword ptr fs:[0x28]
0x872a:	mov	rax, r15
0x872d:	jne	0x8d33


0x8733:	add	rsp, 0xb8
0x873a:	pop	rbx
0x873b:	pop	rbp
0x873c:	pop	r12
0x873e:	pop	r13
0x8740:	pop	r14
0x8742:	pop	r15
0x8744:	ret	


0x8d33:	call	0x1cb0


0x8cdd:	sub	rsp, 8
0x8ce1:	mov	r8d, 5
0x8ce7:	mov	rcx, r11
0x8cea:	push	qword ptr [rsp + 0x68]
0x8cee:	push	qword ptr [rsp + 0x78]
0x8cf2:	mov	rdi, r14
0x8cf5:	push	qword ptr [rsp + 0x38]
0x8cf9:	mov	r9d, dword ptr [rsp + 0x98]
0x8d01:	mov	rdx, qword ptr [rsp + 0x30]
0x8d06:	mov	rsi, qword ptr [rsp + 0x70]
0x8d0b:	call	0x7b40


0x8d10:	add	rsp, 0x20
0x8d14:	mov	r15, rax
0x8d17:	jmp	0x8719


0x8719:	mov	rbx, qword ptr [rsp + 0xa8]
0x8721:	xor	rbx, qword ptr fs:[0x28]
0x872a:	mov	rax, r15
0x872d:	jne	0x8d33


0x1b50:	push	qword ptr [rip + 0x20f23a]
0x1b56:	jmp	qword ptr [rip + 0x20f23c]


0x1b5c:	nop	dword ptr [rax]


0x1b66:	push	0
0x1b6b:	jmp	0x1b50


0x1b76:	push	1
0x1b7b:	jmp	0x1b50


0x1b86:	push	2
0x1b8b:	jmp	0x1b50


0x1b96:	push	3
0x1b9b:	jmp	0x1b50


0x1ba6:	push	4
0x1bab:	jmp	0x1b50


0x1bb6:	push	5
0x1bbb:	jmp	0x1b50


0x1bc6:	push	6
0x1bcb:	jmp	0x1b50


0x1bd6:	push	7
0x1bdb:	jmp	0x1b50


0x1be6:	push	8
0x1beb:	jmp	0x1b50


0x1bf6:	push	9
0x1bfb:	jmp	0x1b50


0x1c06:	push	0xa
0x1c0b:	jmp	0x1b50


0x1c16:	push	0xb
0x1c1b:	jmp	0x1b50


0x1c26:	push	0xc
0x1c2b:	jmp	0x1b50


0x1c36:	push	0xd
0x1c3b:	jmp	0x1b50


0x1c46:	push	0xe
0x1c4b:	jmp	0x1b50


0x1c56:	push	0xf
0x1c5b:	jmp	0x1b50


0x1c66:	push	0x10
0x1c6b:	jmp	0x1b50


0x1c76:	push	0x11
0x1c7b:	jmp	0x1b50


0x1c86:	push	0x12
0x1c8b:	jmp	0x1b50


0x1c96:	push	0x13
0x1c9b:	jmp	0x1b50


0x1ca6:	push	0x14
0x1cab:	jmp	0x1b50


0x1cb6:	push	0x15
0x1cbb:	jmp	0x1b50


0x1cc6:	push	0x16
0x1ccb:	jmp	0x1b50


0x1cd6:	push	0x17
0x1cdb:	jmp	0x1b50


0x1ce6:	push	0x18
0x1ceb:	jmp	0x1b50


0x1cf6:	push	0x19
0x1cfb:	jmp	0x1b50


0x1d06:	push	0x1a
0x1d0b:	jmp	0x1b50


0x1d16:	push	0x1b
0x1d1b:	jmp	0x1b50


0x1d26:	push	0x1c
0x1d2b:	jmp	0x1b50


0x1d36:	push	0x1d
0x1d3b:	jmp	0x1b50


0x1d46:	push	0x1e
0x1d4b:	jmp	0x1b50


0x1d56:	push	0x1f
0x1d5b:	jmp	0x1b50


0x1d66:	push	0x20
0x1d6b:	jmp	0x1b50


0x1d76:	push	0x21
0x1d7b:	jmp	0x1b50


0x1d80:	jmp	qword ptr [rip + 0x20f12a]




0x1d86:	push	0x22
0x1d8b:	jmp	0x1b50


0x1d96:	push	0x23
0x1d9b:	jmp	0x1b50


0x1da6:	push	0x24
0x1dab:	jmp	0x1b50


0x1db6:	push	0x25
0x1dbb:	jmp	0x1b50


0x1dc6:	push	0x26
0x1dcb:	jmp	0x1b50


0x1dd6:	push	0x27
0x1ddb:	jmp	0x1b50


0x1de6:	push	0x28
0x1deb:	jmp	0x1b50


0x1df6:	push	0x29
0x1dfb:	jmp	0x1b50


0x1e06:	push	0x2a
0x1e0b:	jmp	0x1b50


0x1e16:	push	0x2b
0x1e1b:	jmp	0x1b50


0x1e26:	push	0x2c
0x1e2b:	jmp	0x1b50


0x1e36:	push	0x2d
0x1e3b:	jmp	0x1b50


0x1e46:	push	0x2e
0x1e4b:	jmp	0x1b50


0x1e56:	push	0x2f
0x1e5b:	jmp	0x1b50


0x1e66:	push	0x30
0x1e6b:	jmp	0x1b50


0x1e76:	push	0x31
0x1e7b:	jmp	0x1b50


0x1e86:	push	0x32
0x1e8b:	jmp	0x1b50


0x1e96:	push	0x33
0x1e9b:	jmp	0x1b50


0x1ea6:	push	0x34
0x1eab:	jmp	0x1b50


0x1eb6:	push	0x35
0x1ebb:	jmp	0x1b50


0x1ec6:	push	0x36
0x1ecb:	jmp	0x1b50


0x1ed0:	jmp	qword ptr [rip + 0x20f082]




0x1ed6:	push	0x37
0x1edb:	jmp	0x1b50


0x1ee6:	push	0x38
0x1eeb:	jmp	0x1b50


0x1ef6:	push	0x39
0x1efb:	jmp	0x1b50


0x1f06:	push	0x3a
0x1f0b:	jmp	0x1b50


0x1f16:	push	0x3b
0x1f1b:	jmp	0x1b50


0x1f26:	push	0x3c
0x1f2b:	jmp	0x1b50


0x1f36:	push	0x3d
0x1f3b:	jmp	0x1b50


0x1f46:	push	0x3e
0x1f4b:	jmp	0x1b50


0x1f56:	push	0x3f
0x1f5b:	jmp	0x1b50


0x1f66:	push	0x40
0x1f6b:	jmp	0x1b50


0x1f70:	jmp	qword ptr [rip + 0x20f032]




0x1f76:	push	0x41
0x1f7b:	jmp	0x1b50


0x1f86:	push	0x42
0x1f8b:	jmp	0x1b50


0x1f96:	push	0x43
0x1f9b:	jmp	0x1b50


0x1fa6:	push	0x44
0x1fab:	jmp	0x1b50


0x22dd:	mov	rdx, qword ptr [rip + 0x20ee1c]
0x22e4:	test	rdx, rdx
0x22e7:	je	0x287f


0x22ed:	mov	edi, dword ptr [rsp + 0x3c]
0x22f1:	xor	esi, esi
0x22f3:	call	0x2b80


0x22f8:	test	al, al
0x22fa:	je	0x28a3


0x2300:	xor	ebx, ebx
0x2302:	jmp	0x2090


0x2307:	mov	rdi, qword ptr [rip + 0x20edf2]
0x230e:	xor	ebx, ebx
0x2310:	call	0x2ce0


0x2315:	mov	rdi, r15
0x2318:	xor	r15d, r15d
0x231b:	call	0x1b90


0x2320:	mov	qword ptr [rsp + 0x40], 0
0x2329:	jmp	0x2090


0x232e:	lea	rsi, [rip + 0xafb3]
0x2335:	xor	edi, edi
0x2337:	mov	edx, 5
0x233c:	call	0x1c80


0x2341:	mov	rdi, qword ptr [rip + 0x20edb8]
0x2348:	lea	rcx, [rip + 0x9b96]
0x234f:	xor	r9d, r9d
0x2352:	mov	esi, 1
0x2357:	mov	r8, rax
0x235a:	mov	edx, 0x7fffffff
0x235f:	call	0xa0c0


0x2364:	movzx	esi, byte ptr [rip + 0x20ee82]
0x236b:	test	sil, sil
0x236e:	mov	byte ptr [rsp + 0x2d], sil
0x2373:	mov	byte ptr [rsp + 0x2e], sil
0x2378:	jne	0x2300


0x237a:	mov	dword ptr [rip + 0x20ecc4], eax
0x2380:	mov	byte ptr [rsp + 0x2e], 1
0x2385:	xor	ebx, ebx
0x2387:	mov	byte ptr [rsp + 0x2d], 1
0x238c:	jmp	0x2090


0x2391:	mov	byte ptr [rip + 0x20ee02], 1
0x2398:	xor	ebx, ebx
0x239a:	jmp	0x2090


0x239f:	mov	byte ptr [rip + 0x20eca7], 0
0x23a6:	mov	byte ptr [rip + 0x20ee4d], 1
0x23ad:	xor	ebx, ebx
0x23af:	jmp	0x2090


0x23b4:	movzx	eax, byte ptr [rip + 0x20edd5]
0x23bb:	test	al, al
0x23bd:	mov	byte ptr [rsp + 0x2d], al
0x23c1:	mov	byte ptr [rsp + 0x2f], al
0x23c5:	jne	0x2300


0x23cb:	mov	rdi, qword ptr [rip + 0x20ed2e]
0x23d2:	test	rdi, rdi
0x23d5:	je	0x2777


0x2777:	mov	byte ptr [rsp + 0x2f], 1
0x277c:	mov	byte ptr [rsp + 0x2d], 1
0x2781:	xor	ebx, ebx
0x2783:	jmp	0x2090


0x23db:	call	0x2cb0


0x23e0:	xor	ebx, ebx
0x23e2:	mov	byte ptr [rsp + 0x2f], 1
0x23e7:	mov	byte ptr [rsp + 0x2d], 1
0x23ec:	jmp	0x2090


0x23f1:	mov	byte ptr [rip + 0x20ed99], 1
0x23f8:	xor	ebx, ebx
0x23fa:	jmp	0x2090


0x23ff:	lea	rsi, [rip + 0xaec2]
0x2406:	mov	edx, 5
0x240b:	xor	edi, edi
0x240d:	xor	ebx, ebx
0x240f:	call	0x1c80


0x2414:	mov	rdi, qword ptr [rip + 0x20ece5]
0x241b:	lea	rcx, [rip + 0x9ac3]
0x2422:	mov	r8, rax
0x2425:	xor	r9d, r9d
0x2428:	mov	edx, 0x7fffffff
0x242d:	xor	esi, esi
0x242f:	call	0xa0c0


0x2434:	mov	dword ptr [rip + 0x20eda2], eax
0x243a:	jmp	0x2090


0x243f:	mov	rdi, qword ptr [rip + 0x20ecba]
0x2446:	mov	byte ptr [rip + 0x20ed5f], 1
0x244d:	test	rdi, rdi
0x2450:	je	0x2300


0x2456:	lea	rcx, [rip + 0x20ebb3]
0x245d:	lea	rdx, [rip + 0x20ebbc]
0x2464:	mov	esi, 0x6e
0x2469:	xor	ebx, ebx
0x246b:	call	0x5810


0x2470:	jmp	0x2090


0x2475:	mov	byte ptr [rip + 0x20ed83], 1
0x247c:	mov	byte ptr [rip + 0x20ebc9], 0
0x2483:	xor	ebx, ebx
0x2485:	jmp	0x2090


0x248a:	lea	rsi, [rip + 0xadd7]
0x2491:	mov	edx, 5
0x2496:	xor	edi, edi
0x2498:	xor	ebx, ebx
0x249a:	call	0x1c80


0x249f:	mov	rdi, qword ptr [rip + 0x20ec5a]
0x24a6:	lea	rcx, [rip + 0x9a38]
0x24ad:	mov	r8, rax
0x24b0:	xor	r9d, r9d
0x24b3:	mov	edx, 0x7fffffff
0x24b8:	mov	esi, 1
0x24bd:	call	0xa0c0


0x24c2:	mov	dword ptr [rip + 0x20eb80], eax
0x24c8:	jmp	0x2090


0x24cd:	mov	rdi, qword ptr [rip + 0x20ec2c]
0x24d4:	test	rdi, rdi
0x24d7:	je	0x24f1


0x24f1:	mov	byte ptr [rip + 0x20ecec], 1
0x24f8:	xor	ebx, ebx
0x24fa:	jmp	0x2090


0x24d9:	lea	rcx, [rip + 0x20eb54]
0x24e0:	lea	rdx, [rip + 0x20eb51]
0x24e7:	mov	esi, 0x69
0x24ec:	call	0x5810


0x24ff:	mov	rax, qword ptr [rip + 0x20ebfa]
0x2506:	xor	ebx, ebx
0x2508:	mov	qword ptr [rip + 0x20ec69], rax
0x250f:	jmp	0x2090


0x2514:	mov	rdi, qword ptr [rip + 0x20ebe5]
0x251b:	test	rdi, rdi
0x251e:	je	0x2538


0x2538:	mov	byte ptr [rip + 0x20eca6], 1
0x253f:	xor	ebx, ebx
0x2541:	jmp	0x2090


0x2520:	lea	rcx, [rip + 0x20eb15]
0x2527:	lea	rdx, [rip + 0x20eb12]
0x252e:	mov	esi, 0x65
0x2533:	call	0x5810


0x2546:	mov	byte ptr [rip + 0x20ec4b], 1
0x254d:	xor	ebx, ebx
0x254f:	jmp	0x2090


0x2554:	mov	byte ptr [rip + 0x20ec3e], 1
0x255b:	xor	ebx, ebx
0x255d:	jmp	0x2090


0x2562:	mov	byte ptr [rip + 0x20ec8b], 1
0x2569:	xor	ebx, ebx
0x256b:	jmp	0x2090


0x2570:	mov	byte ptr [rip + 0x20ec7e], 1
0x2577:	mov	byte ptr [rip + 0x20eace], 0
0x257e:	xor	ebx, ebx
0x2580:	jmp	0x2090


0x2585:	lea	rsi, [rip + 0xad8c]
0x258c:	mov	edx, 5
0x2591:	xor	edi, edi
0x2593:	mov	byte ptr [rip + 0x20ec53], 1
0x259a:	xor	ebx, ebx
0x259c:	call	0x1c80


0x25a1:	mov	rdi, qword ptr [rip + 0x20eb58]
0x25a8:	lea	rcx, [rip + 0x9936]
0x25af:	mov	r8, rax
0x25b2:	xor	r9d, r9d
0x25b5:	mov	edx, 0x7fffffff
0x25ba:	mov	esi, 1
0x25bf:	call	0xa0c0


0x25c4:	mov	byte ptr [rsp + 0x2e], 0
0x25c9:	mov	dword ptr [rip + 0x20ea75], eax
0x25cf:	jmp	0x2090


0x25d4:	mov	byte ptr [rip + 0x20ea72], 0
0x25db:	mov	byte ptr [rip + 0x20ec18], 0
0x25e2:	xor	ebx, ebx
0x25e4:	jmp	0x2090


0x25e9:	mov	rdi, qword ptr [rip + 0x20eb10]
0x25f0:	lea	rax, [rip + 0x98ee]
0x25f7:	mov	dword ptr [rip + 0x20eb8b], 0
0x2601:	mov	byte ptr [rip + 0x20eb88], 1
0x2608:	mov	byte ptr [rsp + 0x2f], 0
0x260d:	mov	qword ptr [rip + 0x20ea3c], rax
0x2614:	test	rdi, rdi
0x2617:	je	0x2300


0x261d:	call	0x2cb0


0x2622:	xor	ebx, ebx
0x2624:	jmp	0x2090


0x2629:	lea	rsi, [rip + 0xac68]
0x2630:	mov	edx, 5
0x2635:	xor	edi, edi
0x2637:	mov	byte ptr [rip + 0x20e9da], 0
0x263e:	xor	ebx, ebx
0x2640:	call	0x1c80


0x2645:	mov	rdi, qword ptr [rip + 0x20eab4]
0x264c:	lea	rcx, [rip + 0x9892]
0x2653:	mov	r8, rax
0x2656:	xor	r9d, r9d
0x2659:	mov	edx, 0x7fffffff
0x265e:	mov	rsi, -0x80000000
0x2665:	call	0xa0c0


0x266a:	mov	dword ptr [rip + 0x20e9a4], eax
0x2670:	jmp	0x2090


0x2675:	mov	byte ptr [rip + 0x20eb70], 1
0x267c:	xor	ebx, ebx
0x267e:	jmp	0x2090


0x2683:	mov	byte ptr [rip + 0x20eb6d], 1
0x268a:	xor	ebx, ebx
0x268c:	jmp	0x2090


0x2691:	mov	rax, qword ptr [rip + 0x20ea68]
0x2698:	xor	ebx, ebx
0x269a:	mov	qword ptr [rip + 0x20eacf], rax
0x26a1:	jmp	0x2090


0x26a6:	cmp	qword ptr [rip + 0x20eb1a], 0
0x26ae:	mov	rax, qword ptr [rip + 0x20ea4b]
0x26b5:	jne	0x26c0


0x26b7:	cmp	byte ptr [rax], 0x2b
0x26ba:	je	0x27ba


0x26c0:	mov	edx, dword ptr [rsp + 0x28]
0x26c4:	mov	rsi, qword ptr [rsp + 0x20]
0x26c9:	xor	ebx, ebx
0x26cb:	mov	qword ptr [rsi + rdx*8], rax
0x26cf:	lea	eax, [rdx + 1]
0x26d2:	mov	dword ptr [rsp + 0x28], eax
0x26d6:	jmp	0x2090


0x27ba:	lea	rdx, [rax + 1]
0x27be:	mov	esi, 0x2b
0x27c3:	mov	edi, 0xfffffffe
0x27c8:	call	0x2b80


0x27cd:	test	al, al
0x27cf:	jne	0x2300


0x27d5:	mov	rax, qword ptr [rip + 0x20e924]
0x27dc:	jmp	0x26c0


0x284a:	xor	edi, edi
0x284c:	call	0x52a0


0x293a:	hlt	


0x293b:	nop	dword ptr [rax + rax]


0x2972:	nop	dword ptr [rax]
0x2976:	nop	word ptr cs:[rax + rax]


0x29c2:	nop	dword ptr [rax]
0x29c6:	nop	word ptr cs:[rax + rax]


0x2a0a:	nop	word ptr [rax + rax]


0x2a1a:	nop	word ptr [rax + rax]


0x2a78:	nop	dword ptr [rax + rax]


0x2af3:	nop	dword ptr [rax]
0x2af6:	nop	word ptr cs:[rax + rax]


0x2b49:	nop	dword ptr [rax]


0x2ca5:	nop	
0x2ca6:	nop	word ptr cs:[rax + rax]


0x2d25:	nop	
0x2d26:	nop	word ptr cs:[rax + rax]


0x2f49:	nop	dword ptr [rax]


0x2fbc:	nop	dword ptr [rax]


0x308c:	nop	dword ptr [rax]


0x319b:	nop	dword ptr [rax + rax]


0x32cb:	nop	dword ptr [rax + rax]


0x34dc:	nop	dword ptr [rax]


0x358e:	nop	


0x3718:	nop	dword ptr [rax + rax]


0x37a4:	nop	
0x37a6:	nop	word ptr cs:[rax + rax]


0x38b2:	nop	dword ptr [rax]
0x38b6:	nop	word ptr cs:[rax + rax]


0x3923:	nop	dword ptr [rax]
0x3926:	nop	word ptr cs:[rax + rax]


0x3c7d:	nop	dword ptr [rax]


0x3d47:	nop	word ptr [rax + rax]


0x41d4:	nop	
0x41d6:	nop	word ptr cs:[rax + rax]


0x42d3:	nop	dword ptr [rax]
0x42d6:	nop	word ptr cs:[rax + rax]


0x5297:	nop	word ptr [rax + rax]


0x580a:	nop	word ptr [rax + rax]


0x58ff:	nop	


0x5908:	nop	dword ptr [rax + rax]


0x5918:	nop	dword ptr [rax + rax]


0x59c4:	nop	word ptr cs:[rax + rax]
0x59ce:	nop	


0x59d5:	nop	
0x59d6:	nop	word ptr cs:[rax + rax]


0x5a02:	nop	word ptr cs:[rax + rax]
0x5a0c:	nop	dword ptr [rax]


0x5aa3:	nop	word ptr cs:[rax + rax]
0x5aad:	nop	dword ptr [rax]


0x5aba:	nop	word ptr [rax + rax]


0x5b01:	nop	word ptr cs:[rax + rax]
0x5b0b:	nop	dword ptr [rax + rax]


0x5c0c:	nop	dword ptr [rax]


0x5dcf:	nop	


0x5df3:	nop	word ptr cs:[rax + rax]
0x5dfd:	nop	dword ptr [rax]


0x5e41:	nop	dword ptr [rax + rax]
0x5e46:	nop	word ptr cs:[rax + rax]


0x5e91:	nop	dword ptr [rax + rax]
0x5e96:	nop	word ptr cs:[rax + rax]


0x60eb:	mov	rbx, r9
0x60ee:	nop	
0x60f0:	lea	rax, [rbx - 1]
0x60f4:	mov	r8d, 1
0x60fa:	mov	r9, rax
0x60fd:	lea	rax, [rax - 1]
0x6101:	add	r8d, 1
0x6105:	cmp	byte ptr [rax + 1], 0x25
0x6109:	jne	0x60fa


0x6262:	xor	r8d, r8d
0x6265:	mov	eax, 0x2520
0x626a:	test	r11d, r11d
0x626d:	mov	word ptr [rsp + 0xab], ax
0x6275:	jne	0x794b


0x627b:	lea	rdx, [rsp + 0xab]
0x6283:	mov	r12, rbx
0x6286:	lea	rax, [rdx + 2]
0x628a:	lea	r9, [rsp + 0xb0]
0x6292:	mov	byte ptr [rax], sil
0x6295:	mov	byte ptr [rax + 1], 0
0x6299:	mov	rcx, r13
0x629c:	mov	esi, 0x400
0x62a1:	mov	dword ptr [rsp + 0x38], r10d
0x62a6:	mov	rdi, r9
0x62a9:	mov	byte ptr [rsp + 0x50], r8b
0x62ae:	mov	dword ptr [rsp + 0x48], r11d
0x62b3:	mov	qword ptr [rsp + 0x40], r9
0x62b8:	call	0x1ed0


0x794b:	xor	edi, edi
0x794d:	jmp	0x643c


0x643c:	lea	rdx, [rsp + 0xab]
0x6444:	mov	byte ptr [rsp + 0xad], r11b
0x644c:	mov	r12, rbx
0x644f:	mov	r11d, edi
0x6452:	lea	rax, [rdx + 3]
0x6456:	jmp	0x628a


0x628a:	lea	r9, [rsp + 0xb0]
0x6292:	mov	byte ptr [rax], sil
0x6295:	mov	byte ptr [rax + 1], 0
0x6299:	mov	rcx, r13
0x629c:	mov	esi, 0x400
0x62a1:	mov	dword ptr [rsp + 0x38], r10d
0x62a6:	mov	rdi, r9
0x62a9:	mov	byte ptr [rsp + 0x50], r8b
0x62ae:	mov	dword ptr [rsp + 0x48], r11d
0x62b3:	mov	qword ptr [rsp + 0x40], r9
0x62b8:	call	0x1ed0


0x62bd:	test	rax, rax
0x62c0:	je	0x5fd2


0x62c6:	movsxd	r10, dword ptr [rsp + 0x38]
0x62cb:	lea	rcx, [rax - 1]
0x62cf:	mov	rdx, qword ptr [rsp + 8]
0x62d4:	mov	eax, 0
0x62d9:	test	r10d, r10d
0x62dc:	cmovns	rax, r10
0x62e0:	cmp	rcx, rax
0x62e3:	mov	rbx, rax
0x62e6:	cmovae	rbx, rcx
0x62ea:	sub	rdx, r14
0x62ed:	cmp	rdx, rbx
0x62f0:	jbe	0x5f6c


0x62f6:	test	rbp, rbp
0x62f9:	je	0x639e


0x639e:	add	r14, rbx
0x63a1:	jmp	0x5fd2


0x62ff:	mov	r11d, dword ptr [rsp + 0x48]
0x6304:	mov	r9, qword ptr [rsp + 0x40]
0x6309:	movzx	r8d, byte ptr [rsp + 0x50]
0x630f:	test	r11d, r11d
0x6312:	jne	0x636e


0x6314:	cmp	rcx, rax
0x6317:	jae	0x636e


0x636e:	test	r8b, r8b
0x6371:	lea	rsi, [r9 + 1]
0x6375:	mov	rdx, rcx
0x6378:	jne	0x7398


0x6319:	movsxd	rdx, r10d
0x631c:	mov	qword ptr [rsp + 0x50], r9
0x6321:	mov	qword ptr [rsp + 0x48], rcx
0x6326:	sub	rdx, rcx
0x6329:	cmp	r15d, 0x30
0x632d:	mov	byte ptr [rsp + 0x40], r8b
0x6332:	lea	rax, [rbp + rdx]
0x6337:	mov	qword ptr [rsp + 0x38], rax
0x633c:	je	0x73af


0x637e:	cmp	byte ptr [rsp + 0x30], 0
0x6383:	mov	rdi, rbp
0x6386:	mov	qword ptr [rsp + 0x30], rcx
0x638b:	je	0x6c01


0x7398:	mov	rdi, rbp
0x739b:	mov	qword ptr [rsp + 0x30], rcx
0x73a0:	call	0x5e00


0x73af:	mov	rdi, rbp
0x73b2:	mov	esi, 0x30
0x73b7:	call	0x1d50


0x6342:	cmp	r15d, 0x2b
0x6346:	je	0x73af


0x6c01:	call	0x1dd0


0x6391:	call	0x5e50


0x634c:	mov	rdi, rbp
0x634f:	mov	esi, 0x20
0x6354:	call	0x1d50


0x6396:	mov	rcx, qword ptr [rsp + 0x30]
0x639b:	add	rbp, rcx
0x639e:	add	r14, rbx
0x63a1:	jmp	0x5fd2


0x6c06:	mov	rcx, qword ptr [rsp + 0x30]
0x6c0b:	jmp	0x639b


0x639b:	add	rbp, rcx
0x639e:	add	r14, rbx
0x63a1:	jmp	0x5fd2


0x6359:	movzx	r8d, byte ptr [rsp + 0x40]
0x635f:	mov	rbp, qword ptr [rsp + 0x38]
0x6364:	mov	r9, qword ptr [rsp + 0x50]
0x6369:	mov	rcx, qword ptr [rsp + 0x48]
0x636e:	test	r8b, r8b
0x6371:	lea	rsi, [r9 + 1]
0x6375:	mov	rdx, rcx
0x6378:	jne	0x7398


0x73bc:	mov	rbp, qword ptr [rsp + 0x38]
0x73c1:	movzx	r8d, byte ptr [rsp + 0x40]
0x73c7:	mov	rcx, qword ptr [rsp + 0x48]
0x73cc:	mov	r9, qword ptr [rsp + 0x50]
0x73d1:	jmp	0x636e


0x73a5:	mov	rcx, qword ptr [rsp + 0x30]
0x73aa:	jmp	0x639b


0x63a6:	test	r11d, r11d
0x63a9:	jne	0x60f0


0x63af:	movzx	eax, byte ptr [rsp + 0x30]
0x63b4:	test	r8b, r8b
0x63b7:	lea	rdx, [rsp + 0xab]
0x63bf:	mov	r12, rbx
0x63c2:	cmovne	eax, r8d
0x63c6:	xor	r8d, r8d
0x63c9:	xor	r11d, r11d
0x63cc:	mov	byte ptr [rsp + 0x30], al
0x63d0:	mov	eax, 0x2520
0x63d5:	mov	word ptr [rsp + 0xab], ax
0x63dd:	lea	rax, [rdx + 2]
0x63e1:	jmp	0x628a


0x63e6:	cmp	r11d, 0x45
0x63ea:	je	0x60f0


0x63f0:	mov	ecx, dword ptr [r13]
0x63f4:	mov	edi, 2
0x63f9:	nop	dword ptr [rax]
0x6400:	mov	eax, ecx
0x6402:	xor	esi, esi
0x6404:	mov	byte ptr [rsp + 0x40], 0
0x6409:	shr	eax, 0x1f
0x640c:	mov	dword ptr [rsp + 0x38], eax
0x6410:	mov	eax, ecx
0x6412:	not	eax
0x6414:	shr	eax, 0x1f
0x6417:	cmp	r11d, 0x4f
0x641b:	jne	0x72a0


0x6421:	test	al, al
0x6423:	je	0x72a0


0x72a0:	mov	eax, ecx
0x72a2:	neg	eax
0x72a4:	cmp	byte ptr [rsp + 0x38], 0
0x72a9:	cmovne	ecx, eax
0x72ac:	jmp	0x69d0


0x6429:	mov	esi, r9d
0x642c:	mov	edx, 0x2520
0x6431:	xor	r8d, r8d
0x6434:	mov	word ptr [rsp + 0xab], dx
0x643c:	lea	rdx, [rsp + 0xab]
0x6444:	mov	byte ptr [rsp + 0xad], r11b
0x644c:	mov	r12, rbx
0x644f:	mov	r11d, edi
0x6452:	lea	rax, [rdx + 3]
0x6456:	jmp	0x628a


0x69d0:	lea	r9, [rsp + 0xb0]
0x69d8:	mov	r12d, 0xcccccccd
0x69de:	lea	r11, [r9 + 0x17]
0x69e2:	nop	word ptr [rax + rax]
0x69e8:	test	sil, 1
0x69ec:	lea	r8, [r11 - 1]
0x69f0:	je	0x6a01


0x6a01:	mov	eax, ecx
0x6a03:	sar	esi, 1
0x6a05:	mul	r12d
0x6a08:	shr	edx, 3
0x6a0b:	lea	eax, [rdx + rdx*4]
0x6a0e:	add	eax, eax
0x6a10:	sub	ecx, eax
0x6a12:	mov	eax, esi
0x6a14:	add	ecx, 0x30
0x6a17:	or	eax, edx
0x6a19:	mov	byte ptr [r11 - 1], cl
0x6a1d:	mov	ecx, edx
0x6a1f:	mov	r11, r8
0x6a22:	jne	0x69e8


0x69f2:	lea	rax, [r11 - 2]
0x69f6:	mov	byte ptr [r11 - 1], 0x3a
0x69fb:	mov	r11, r8
0x69fe:	mov	r8, rax
0x6a01:	mov	eax, ecx
0x6a03:	sar	esi, 1
0x6a05:	mul	r12d
0x6a08:	shr	edx, 3
0x6a0b:	lea	eax, [rdx + rdx*4]
0x6a0e:	add	eax, eax
0x6a10:	sub	ecx, eax
0x6a12:	mov	eax, esi
0x6a14:	add	ecx, 0x30
0x6a17:	or	eax, edx
0x6a19:	mov	byte ptr [r11 - 1], cl
0x6a1d:	mov	ecx, edx
0x6a1f:	mov	r11, r8
0x6a22:	jne	0x69e8


0x6a24:	cmp	r10d, edi
0x6a27:	cmovge	edi, r10d
0x6a2b:	cmp	byte ptr [rsp + 0x38], 0
0x6a30:	mov	dword ptr [rsp + 0x48], edi
0x6a34:	jne	0x72b8


0x69e8:	test	sil, 1
0x69ec:	lea	r8, [r11 - 1]
0x69f0:	je	0x6a01


0x6a3a:	cmp	byte ptr [rsp + 0x40], 0
0x6a3f:	je	0x6cd9


0x72b8:	cmp	r15d, 0x2d
0x72bc:	mov	byte ptr [rsp + 0x38], 0x2d
0x72c1:	jne	0x6a54


0x6cd9:	mov	rdx, qword ptr [rsp + 8]
0x6cde:	lea	rcx, [r9 + 0x17]
0x6ce2:	sub	rcx, r8
0x6ce5:	sub	rdx, r14
0x6ce8:	cmp	r15d, 0x2d
0x6cec:	je	0x6cff


0x6a45:	cmp	r15d, 0x2d
0x6a49:	je	0x7573


0x72c7:	test	r10d, r10d
0x72ca:	mov	r11d, 0
0x72d0:	mov	rax, qword ptr [rsp + 8]
0x72d5:	cmovns	r11d, r10d
0x72d9:	mov	r12d, 1
0x72df:	movsxd	r11, r11d
0x72e2:	test	r11, r11
0x72e5:	cmovne	r12, r11
0x72e9:	sub	rax, r14
0x72ec:	cmp	rax, r12
0x72ef:	jbe	0x5f6c


0x6a54:	mov	eax, dword ptr [rsp + 0x48]
0x6a58:	lea	rcx, [r9 + 0x17]
0x6a5c:	mov	rdx, qword ptr [rsp + 8]
0x6a61:	sub	rcx, r8
0x6a64:	lea	r12d, [rax - 1]
0x6a68:	sub	rdx, r14
0x6a6b:	sub	r12d, ecx
0x6a6e:	test	r12d, r12d
0x6a71:	jle	0x74bc


0x6cff:	test	r10d, r10d
0x6d02:	mov	r11d, 0
0x6d08:	mov	r12, rbx
0x6d0b:	cmovns	r11d, r10d
0x6d0f:	movsxd	r11, r11d
0x6d12:	jmp	0x6b75


0x6cee:	mov	r12d, dword ptr [rsp + 0x48]
0x6cf3:	sub	r12d, ecx
0x6cf6:	test	r12d, r12d
0x6cf9:	jg	0x7689


0x7573:	mov	r15d, 0x2b
0x7579:	jmp	0x72c7


0x6a4f:	mov	byte ptr [rsp + 0x38], 0x2b
0x6a54:	mov	eax, dword ptr [rsp + 0x48]
0x6a58:	lea	rcx, [r9 + 0x17]
0x6a5c:	mov	rdx, qword ptr [rsp + 8]
0x6a61:	sub	rcx, r8
0x6a64:	lea	r12d, [rax - 1]
0x6a68:	sub	rdx, r14
0x6a6b:	sub	r12d, ecx
0x6a6e:	test	r12d, r12d
0x6a71:	jle	0x74bc


0x72f5:	test	rbp, rbp
0x72f8:	je	0x735c


0x74bc:	test	r10d, r10d
0x74bf:	mov	r11d, 0
0x74c5:	mov	r12d, 1
0x74cb:	cmovns	r11d, r10d
0x74cf:	movsxd	r11, r11d
0x74d2:	test	r11, r11
0x74d5:	cmovne	r12, r11
0x74d9:	cmp	r12, rdx
0x74dc:	jae	0x5f6c


0x6a77:	cmp	r15d, 0x5f
0x6a7b:	je	0x7436


0x6b75:	cmp	rcx, r11
0x6b78:	mov	rbx, r11
0x6b7b:	cmovae	rbx, rcx
0x6b7f:	cmp	rbx, rdx
0x6b82:	jae	0x5f6c


0x7689:	cmp	r15d, 0x5f
0x768d:	je	0x7431


0x735c:	mov	rdx, qword ptr [rsp + 8]
0x7361:	lea	rcx, [r9 + 0x17]
0x7365:	add	r14, r12
0x7368:	mov	r15d, 0x2d
0x736e:	mov	r12, rbx
0x7371:	sub	rcx, r8
0x7374:	sub	rdx, r14
0x7377:	jmp	0x6b75


0x72fa:	mov	eax, dword ptr [rsp + 0x48]
0x72fe:	test	eax, eax
0x7300:	jne	0x7354


0x74e2:	test	rbp, rbp
0x74e5:	je	0x7560


0x7436:	movsxd	r15, r12d
0x7439:	cmp	r15, rdx
0x743c:	jae	0x5f6c


0x6a81:	movsxd	rax, dword ptr [rsp + 0x48]
0x6a86:	cmp	rax, rdx
0x6a89:	mov	rdi, rax
0x6a8c:	jae	0x5f6c


0x6b88:	test	rbp, rbp
0x6b8b:	je	0x639e


0x7431:	mov	byte ptr [rsp + 0x38], 0
0x7436:	movsxd	r15, r12d
0x7439:	cmp	r15, rdx
0x743c:	jae	0x5f6c


0x7693:	movsxd	rax, dword ptr [rsp + 0x48]
0x7698:	cmp	rax, rdx
0x769b:	jae	0x5f6c


0x7302:	cmp	r11, 1
0x7306:	jbe	0x7354


0x7354:	mov	byte ptr [rbp], r15b
0x7358:	add	rbp, 1
0x735c:	mov	rdx, qword ptr [rsp + 8]
0x7361:	lea	rcx, [r9 + 0x17]
0x7365:	add	r14, r12
0x7368:	mov	r15d, 0x2d
0x736e:	mov	r12, rbx
0x7371:	sub	rcx, r8
0x7374:	sub	rdx, r14
0x7377:	jmp	0x6b75


0x7560:	mov	rdx, qword ptr [rsp + 8]
0x7565:	add	r14, r12
0x7568:	mov	r12, rbx
0x756b:	sub	rdx, r14
0x756e:	jmp	0x6b75


0x74e7:	mov	edi, dword ptr [rsp + 0x48]
0x74eb:	test	edi, edi
0x74ed:	jne	0x7554


0x7442:	test	rbp, rbp
0x7445:	je	0x7478


0x6a92:	test	r10d, r10d
0x6a95:	mov	eax, 0
0x6a9a:	mov	esi, 1
0x6a9f:	cmovns	eax, r10d
0x6aa3:	cdqe	
0x6aa5:	test	rax, rax
0x6aa8:	cmovne	rsi, rax
0x6aac:	cmp	rsi, rdx
0x6aaf:	jae	0x5f6c


0x6b91:	mov	esi, dword ptr [rsp + 0x48]
0x6b95:	test	esi, esi
0x6b97:	jne	0x6be8


0x76a1:	movsxd	r9, r12d
0x76a4:	mov	r12, rbx
0x76a7:	jmp	0x6b2e


0x7308:	movsxd	rax, r10d
0x730b:	mov	rdi, rbp
0x730e:	mov	esi, 0x20
0x7313:	lea	rcx, [rax - 1]
0x7317:	mov	qword ptr [rsp + 0x60], r9
0x731c:	mov	qword ptr [rsp + 0x58], r8
0x7321:	mov	qword ptr [rsp + 0x50], r11
0x7326:	mov	dword ptr [rsp + 0x40], r10d
0x732b:	mov	rdx, rcx
0x732e:	mov	qword ptr [rsp + 0x38], rcx
0x7333:	call	0x1d50


0x74ef:	cmp	r11, 1
0x74f3:	jbe	0x7554


0x7554:	movzx	eax, byte ptr [rsp + 0x38]
0x7559:	add	rbp, 1
0x755d:	mov	byte ptr [rbp - 1], al
0x7560:	mov	rdx, qword ptr [rsp + 8]
0x7565:	add	r14, r12
0x7568:	mov	r12, rbx
0x756b:	sub	rdx, r14
0x756e:	jmp	0x6b75


0x7478:	mov	rdx, qword ptr [rsp + 8]
0x747d:	mov	eax, r10d
0x7480:	add	r14, r15
0x7483:	sub	eax, r12d
0x7486:	cmp	r10d, r12d
0x7489:	mov	r10d, 0
0x748f:	cmovg	r10d, eax
0x7493:	sub	rdx, r14
0x7496:	cmp	byte ptr [rsp + 0x38], 0
0x749b:	jne	0x75c2


0x7447:	mov	rdi, rbp
0x744a:	mov	rdx, r15
0x744d:	mov	esi, 0x20
0x7452:	mov	dword ptr [rsp + 0x58], r10d
0x7457:	mov	qword ptr [rsp + 0x50], r9
0x745c:	add	rbp, r15
0x745f:	mov	qword ptr [rsp + 0x40], r8
0x7464:	call	0x1d50


0x6ab5:	add	r14, rsi
0x6ab8:	test	rbp, rbp
0x6abb:	movsxd	r9, r12d
0x6abe:	mov	r12, rbx
0x6ac1:	je	0x6b64


0x6b99:	cmp	rcx, r11
0x6b9c:	jae	0x6be8


0x6be8:	cmp	byte ptr [rsp + 0x30], 0
0x6bed:	mov	rdx, rcx
0x6bf0:	mov	qword ptr [rsp + 0x30], rcx
0x6bf5:	mov	rsi, r8
0x6bf8:	mov	rdi, rbp
0x6bfb:	jne	0x6391


0x6b2e:	test	rbp, rbp
0x6b31:	je	0x6b64


0x74f5:	movsxd	rdx, r10d
0x74f8:	mov	dword ptr [rsp + 0x6c], r10d
0x74fd:	mov	qword ptr [rsp + 0x60], r8
0x7502:	sub	rdx, 1
0x7506:	cmp	r15d, 0x30
0x750a:	mov	qword ptr [rsp + 0x58], rcx
0x750f:	lea	rax, [rbp + rdx]
0x7514:	mov	qword ptr [rsp + 0x50], r11
0x7519:	mov	qword ptr [rsp + 0x40], rax
0x751e:	je	0x78ef


0x74a1:	add	r9, 0x17
0x74a5:	movsxd	r11, r10d
0x74a8:	mov	r12, rbx
0x74ab:	mov	rcx, r9
0x74ae:	mov	r15d, 0x5f
0x74b4:	sub	rcx, r8
0x74b7:	jmp	0x6b75


0x75c2:	movsxd	r15, r10d
0x75c5:	mov	r12d, 1
0x75cb:	test	r15, r15
0x75ce:	cmovne	r12, r15
0x75d2:	cmp	r12, rdx
0x75d5:	jae	0x5f6c


0x6b64:	mov	rdx, qword ptr [rsp + 8]
0x6b69:	add	r14, r9
0x6b6c:	xor	r11d, r11d
0x6b6f:	xor	r10d, r10d
0x6b72:	sub	rdx, r14
0x6b75:	cmp	rcx, r11
0x6b78:	mov	rbx, r11
0x6b7b:	cmovae	rbx, rcx
0x6b7f:	cmp	rbx, rdx
0x6b82:	jae	0x5f6c


0x6ac7:	test	edi, edi
0x6ac9:	jne	0x6b1f


0x6b9e:	movsxd	rdx, r10d
0x6ba1:	mov	qword ptr [rsp + 0x48], r8
0x6ba6:	mov	qword ptr [rsp + 0x40], rcx
0x6bab:	sub	rdx, rcx
0x6bae:	cmp	r15d, 0x30
0x6bb2:	lea	rax, [rbp + rdx]
0x6bb7:	mov	qword ptr [rsp + 0x38], rax
0x6bbc:	je	0x73fa


0x6b33:	mov	rdx, r9
0x6b36:	mov	rdi, rbp
0x6b39:	mov	esi, 0x30
0x6b3e:	mov	qword ptr [rsp + 0x50], r8
0x6b43:	mov	qword ptr [rsp + 0x40], rcx
0x6b48:	mov	qword ptr [rsp + 0x38], r9
0x6b4d:	call	0x1d50


0x78ef:	mov	rdi, rbp
0x78f2:	mov	esi, 0x30
0x78f7:	call	0x1d50


0x7524:	cmp	r15d, 0x2b
0x7528:	je	0x78ef


0x75db:	test	rbp, rbp
0x75de:	je	0x763b


0x6acb:	cmp	rax, 1
0x6acf:	jbe	0x6b1f


0x6b1f:	movzx	eax, byte ptr [rsp + 0x38]
0x6b24:	add	rbp, 1
0x6b28:	mov	r12, rbx
0x6b2b:	mov	byte ptr [rbp - 1], al
0x6b2e:	test	rbp, rbp
0x6b31:	je	0x6b64


0x73fa:	mov	rdi, rbp
0x73fd:	mov	esi, 0x30
0x7402:	call	0x1d50


0x6bc2:	cmp	r15d, 0x2b
0x6bc6:	je	0x73fa


0x752e:	mov	rdi, rbp
0x7531:	mov	esi, 0x20
0x7536:	call	0x1d50


0x763b:	mov	rdx, qword ptr [rsp + 8]
0x7640:	add	r9, 0x17
0x7644:	add	r14, r12
0x7647:	mov	rcx, r9
0x764a:	mov	r11, r15
0x764d:	mov	r12, rbx
0x7650:	sub	rcx, r8
0x7653:	mov	r15d, 0x5f
0x7659:	sub	rdx, r14
0x765c:	jmp	0x6b75


0x75e0:	mov	r11d, dword ptr [rsp + 0x48]
0x75e5:	test	r11d, r11d
0x75e8:	jne	0x762f


0x6ad1:	movsxd	rdx, r10d
0x6ad4:	mov	qword ptr [rsp + 0x58], r8
0x6ad9:	mov	qword ptr [rsp + 0x50], r9
0x6ade:	sub	rdx, 1
0x6ae2:	cmp	r15d, 0x30
0x6ae6:	mov	qword ptr [rsp + 0x40], rcx
0x6aeb:	lea	r12, [rbp + rdx]
0x6af0:	je	0x78c1


0x6bcc:	mov	rdi, rbp
0x6bcf:	mov	esi, 0x20
0x6bd4:	call	0x1d50


0x75ea:	cmp	r15, 1
0x75ee:	jbe	0x762f


0x762f:	movzx	eax, byte ptr [rsp + 0x38]
0x7634:	add	rbp, 1
0x7638:	mov	byte ptr [rbp - 1], al
0x763b:	mov	rdx, qword ptr [rsp + 8]
0x7640:	add	r9, 0x17
0x7644:	add	r14, r12
0x7647:	mov	rcx, r9
0x764a:	mov	r11, r15
0x764d:	mov	r12, rbx
0x7650:	sub	rcx, r8
0x7653:	mov	r15d, 0x5f
0x7659:	sub	rdx, r14
0x765c:	jmp	0x6b75


0x78c1:	mov	rdi, rbp
0x78c4:	mov	esi, 0x30
0x78c9:	mov	rbp, r12
0x78cc:	call	0x1d50


0x6af6:	cmp	r15d, 0x2b
0x6afa:	je	0x78c1


0x75f0:	lea	rcx, [r15 - 1]
0x75f4:	mov	rdi, rbp
0x75f7:	mov	esi, 0x20
0x75fc:	mov	dword ptr [rsp + 0x60], r10d
0x7601:	mov	qword ptr [rsp + 0x58], r9
0x7606:	mov	rdx, rcx
0x7609:	mov	qword ptr [rsp + 0x50], r8
0x760e:	mov	qword ptr [rsp + 0x40], rcx
0x7613:	call	0x1d50


0x6b00:	mov	rdi, rbp
0x6b03:	mov	esi, 0x20
0x6b08:	mov	rbp, r12
0x6b0b:	call	0x1d50


0x6b10:	mov	r8, qword ptr [rsp + 0x58]
0x6b15:	mov	r9, qword ptr [rsp + 0x50]
0x6b1a:	mov	rcx, qword ptr [rsp + 0x40]
0x6b1f:	movzx	eax, byte ptr [rsp + 0x38]
0x6b24:	add	rbp, 1
0x6b28:	mov	r12, rbx
0x6b2b:	mov	byte ptr [rbp - 1], al
0x6b2e:	test	rbp, rbp
0x6b31:	je	0x6b64


0x7618:	mov	rcx, qword ptr [rsp + 0x40]
0x761d:	mov	r10d, dword ptr [rsp + 0x60]
0x7622:	mov	r9, qword ptr [rsp + 0x58]
0x7627:	mov	r8, qword ptr [rsp + 0x50]
0x762c:	add	rbp, rcx
0x762f:	movzx	eax, byte ptr [rsp + 0x38]
0x7634:	add	rbp, 1
0x7638:	mov	byte ptr [rbp - 1], al
0x763b:	mov	rdx, qword ptr [rsp + 8]
0x7640:	add	r9, 0x17
0x7644:	add	r14, r12
0x7647:	mov	rcx, r9
0x764a:	mov	r11, r15
0x764d:	mov	r12, rbx
0x7650:	sub	rcx, r8
0x7653:	mov	r15d, 0x5f
0x7659:	sub	rdx, r14
0x765c:	jmp	0x6b75


0x78d1:	mov	rcx, qword ptr [rsp + 0x40]
0x78d6:	mov	r9, qword ptr [rsp + 0x50]
0x78db:	mov	r8, qword ptr [rsp + 0x58]
0x78e0:	jmp	0x6b1f


0x6bd9:	mov	rbp, qword ptr [rsp + 0x38]
0x6bde:	mov	r8, qword ptr [rsp + 0x48]
0x6be3:	mov	rcx, qword ptr [rsp + 0x40]
0x6be8:	cmp	byte ptr [rsp + 0x30], 0
0x6bed:	mov	rdx, rcx
0x6bf0:	mov	qword ptr [rsp + 0x30], rcx
0x6bf5:	mov	rsi, r8
0x6bf8:	mov	rdi, rbp
0x6bfb:	jne	0x6391


0x753b:	mov	rbp, qword ptr [rsp + 0x40]
0x7540:	mov	r10d, dword ptr [rsp + 0x6c]
0x7545:	mov	r8, qword ptr [rsp + 0x60]
0x754a:	mov	rcx, qword ptr [rsp + 0x58]
0x754f:	mov	r11, qword ptr [rsp + 0x50]
0x7554:	movzx	eax, byte ptr [rsp + 0x38]
0x7559:	add	rbp, 1
0x755d:	mov	byte ptr [rbp - 1], al
0x7560:	mov	rdx, qword ptr [rsp + 8]
0x7565:	add	r14, r12
0x7568:	mov	r12, rbx
0x756b:	sub	rdx, r14
0x756e:	jmp	0x6b75


0x7407:	mov	rbp, qword ptr [rsp + 0x38]
0x740c:	mov	rcx, qword ptr [rsp + 0x40]
0x7411:	mov	r8, qword ptr [rsp + 0x48]
0x7416:	jmp	0x6be8


0x78fc:	mov	rbp, qword ptr [rsp + 0x40]
0x7901:	mov	r11, qword ptr [rsp + 0x50]
0x7906:	mov	rcx, qword ptr [rsp + 0x58]
0x790b:	mov	r8, qword ptr [rsp + 0x60]
0x7910:	mov	r10d, dword ptr [rsp + 0x6c]
0x7915:	jmp	0x7554


0x6b52:	mov	r9, qword ptr [rsp + 0x38]
0x6b57:	mov	r8, qword ptr [rsp + 0x50]
0x6b5c:	mov	rcx, qword ptr [rsp + 0x40]
0x6b61:	add	rbp, r9
0x6b64:	mov	rdx, qword ptr [rsp + 8]
0x6b69:	add	r14, r9
0x6b6c:	xor	r11d, r11d
0x6b6f:	xor	r10d, r10d
0x6b72:	sub	rdx, r14
0x6b75:	cmp	rcx, r11
0x6b78:	mov	rbx, r11
0x6b7b:	cmovae	rbx, rcx
0x6b7f:	cmp	rbx, rdx
0x6b82:	jae	0x5f6c


0x7469:	mov	r10d, dword ptr [rsp + 0x58]
0x746e:	mov	r9, qword ptr [rsp + 0x50]
0x7473:	mov	r8, qword ptr [rsp + 0x40]
0x7478:	mov	rdx, qword ptr [rsp + 8]
0x747d:	mov	eax, r10d
0x7480:	add	r14, r15
0x7483:	sub	eax, r12d
0x7486:	cmp	r10d, r12d
0x7489:	mov	r10d, 0
0x748f:	cmovg	r10d, eax
0x7493:	sub	rdx, r14
0x7496:	cmp	byte ptr [rsp + 0x38], 0
0x749b:	jne	0x75c2


0x7338:	mov	rcx, qword ptr [rsp + 0x38]
0x733d:	mov	r9, qword ptr [rsp + 0x60]
0x7342:	mov	r8, qword ptr [rsp + 0x58]
0x7347:	mov	r11, qword ptr [rsp + 0x50]
0x734c:	mov	r10d, dword ptr [rsp + 0x40]
0x7351:	add	rbp, rcx
0x7354:	mov	byte ptr [rbp], r15b
0x7358:	add	rbp, 1
0x735c:	mov	rdx, qword ptr [rsp + 8]
0x7361:	lea	rcx, [r9 + 0x17]
0x7365:	add	r14, r12
0x7368:	mov	r15d, 0x2d
0x736e:	mov	r12, rbx
0x7371:	sub	rcx, r8
0x7374:	sub	rdx, r14
0x7377:	jmp	0x6b75


0x645b:	test	r10d, r10d
0x645e:	mov	ecx, 0
0x6463:	mov	eax, 1
0x6468:	cmovns	ecx, r10d
0x646c:	movsxd	rcx, ecx
0x646f:	test	rcx, rcx
0x6472:	cmove	rcx, rax
0x6476:	mov	rax, qword ptr [rsp + 8]
0x647b:	sub	rax, r14
0x647e:	cmp	rax, rcx
0x6481:	jbe	0x5f6c


0x6487:	test	rbp, rbp
0x648a:	je	0x64d8


0x64d8:	add	r14, rcx
0x64db:	mov	r12, rbx
0x64de:	jmp	0x5fd2


0x648c:	cmp	r10d, 1
0x6490:	jle	0x64cc


0x64cc:	mov	byte ptr [rbp], 9
0x64d0:	add	rbp, 1
0x64d4:	nop	dword ptr [rax]
0x64d8:	add	r14, rcx
0x64db:	mov	r12, rbx
0x64de:	jmp	0x5fd2


0x6492:	movsxd	rdx, r10d
0x6495:	mov	qword ptr [rsp + 0x30], rcx
0x649a:	sub	rdx, 1
0x649e:	cmp	r15d, 0x30
0x64a2:	lea	r12, [rbp + rdx]
0x64a7:	je	0x77c4


0x77c4:	mov	rdi, rbp
0x77c7:	mov	esi, 0x30
0x77cc:	mov	rbp, r12
0x77cf:	call	0x1d50


0x64ad:	cmp	r15d, 0x2b
0x64b1:	je	0x77c4


0x64b7:	mov	rdi, rbp
0x64ba:	mov	esi, 0x20
0x64bf:	mov	rbp, r12
0x64c2:	call	0x1d50


0x64c7:	mov	rcx, qword ptr [rsp + 0x30]
0x64cc:	mov	byte ptr [rbp], 9
0x64d0:	add	rbp, 1
0x64d4:	nop	dword ptr [rax]
0x64d8:	add	r14, rcx
0x64db:	mov	r12, rbx
0x64de:	jmp	0x5fd2


0x77d4:	mov	rcx, qword ptr [rsp + 0x30]
0x77d9:	jmp	0x64cc


0x64e3:	mov	eax, 1
0x64e8:	test	r8b, r8b
0x64eb:	jne	0x741b


0x64f1:	mov	r8d, eax
0x64f4:	mov	esi, 0x70
0x64f9:	jmp	0x6265


0x741b:	mov	esi, 0x70
0x7420:	mov	byte ptr [rsp + 0x30], 0
0x7425:	jmp	0x6265


0x6265:	mov	eax, 0x2520
0x626a:	test	r11d, r11d
0x626d:	mov	word ptr [rsp + 0xab], ax
0x6275:	jne	0x794b


0x64fe:	lea	rax, [rip + 0x5ab5]
0x6505:	mov	dword ptr [rsp + 0x38], 0xffffffff
0x650d:	mov	qword ptr [rsp + 0x40], rax
0x6512:	movzx	r8d, byte ptr [rsp + 0x30]
0x6518:	mov	eax, dword ptr [rsp + 0x518]
0x651f:	mov	rsi, -1
0x6526:	mov	dword ptr [rsp + 0x48], r10d
0x652b:	xor	edi, edi
0x652d:	mov	r9d, r15d
0x6530:	mov	rcx, r13
0x6533:	mov	dword ptr [rsp + 0x30], r8d
0x6538:	push	rax
0x6539:	push	qword ptr [rsp + 0x18]
0x653d:	push	qword ptr [rsp + 0x28]
0x6541:	mov	eax, dword ptr [rsp + 0x50]
0x6545:	push	rax
0x6546:	mov	rdx, qword ptr [rsp + 0x60]
0x654b:	call	0x5ea0


0x6550:	add	rsp, 0x20
0x6554:	movsxd	r10, dword ptr [rsp + 0x48]
0x6559:	mov	r11, rax
0x655c:	mov	rsi, qword ptr [rsp + 8]
0x6561:	mov	eax, 0
0x6566:	test	r10d, r10d
0x6569:	cmovns	rax, r10
0x656d:	cmp	r11, rax
0x6570:	mov	r12, rax
0x6573:	cmovae	r12, r11
0x6577:	sub	rsi, r14
0x657a:	cmp	rsi, r12
0x657d:	mov	qword ptr [rsp + 0x48], rsi
0x6582:	jbe	0x5f6c


0x6588:	test	rbp, rbp
0x658b:	je	0x5fcc


0x6591:	cmp	r11, rax
0x6594:	jae	0x65d6


0x6596:	movsxd	rdx, r10d
0x6599:	mov	qword ptr [rsp + 0x58], r11
0x659e:	sub	rdx, r11
0x65a1:	cmp	r15d, 0x30
0x65a5:	lea	rax, [rbp + rdx]
0x65aa:	mov	qword ptr [rsp + 0x50], rax
0x65af:	je	0x76ac


0x65d6:	mov	eax, dword ptr [rsp + 0x518]
0x65dd:	mov	qword ptr [rsp + 0x50], r11
0x65e2:	mov	rdi, rbp
0x65e5:	mov	r9d, r15d
0x65e8:	mov	rcx, r13
0x65eb:	push	rax
0x65ec:	push	qword ptr [rsp + 0x18]
0x65f0:	push	qword ptr [rsp + 0x28]
0x65f4:	mov	eax, dword ptr [rsp + 0x50]
0x65f8:	push	rax
0x65f9:	mov	r8d, dword ptr [rsp + 0x50]
0x65fe:	mov	rdx, qword ptr [rsp + 0x60]
0x6603:	mov	rsi, qword ptr [rsp + 0x68]
0x6608:	call	0x5ea0


0x76ac:	mov	rdi, rbp
0x76af:	mov	esi, 0x30
0x76b4:	call	0x1d50


0x65b5:	cmp	r15d, 0x2b
0x65b9:	je	0x76ac


0x65bf:	mov	rdi, rbp
0x65c2:	mov	esi, 0x20
0x65c7:	call	0x1d50


0x65cc:	mov	rbp, qword ptr [rsp + 0x50]
0x65d1:	mov	r11, qword ptr [rsp + 0x58]
0x65d6:	mov	eax, dword ptr [rsp + 0x518]
0x65dd:	mov	qword ptr [rsp + 0x50], r11
0x65e2:	mov	rdi, rbp
0x65e5:	mov	r9d, r15d
0x65e8:	mov	rcx, r13
0x65eb:	push	rax
0x65ec:	push	qword ptr [rsp + 0x18]
0x65f0:	push	qword ptr [rsp + 0x28]
0x65f4:	mov	eax, dword ptr [rsp + 0x50]
0x65f8:	push	rax
0x65f9:	mov	r8d, dword ptr [rsp + 0x50]
0x65fe:	mov	rdx, qword ptr [rsp + 0x60]
0x6603:	mov	rsi, qword ptr [rsp + 0x68]
0x6608:	call	0x5ea0


0x76b9:	mov	rbp, qword ptr [rsp + 0x50]
0x76be:	mov	r11, qword ptr [rsp + 0x58]
0x76c3:	jmp	0x65d6


0x660d:	mov	r11, qword ptr [rsp + 0x70]
0x6612:	add	rsp, 0x20
0x6616:	add	rbp, r11
0x6619:	jmp	0x5fcc


0x661e:	mov	rdx, qword ptr [rsp + 8]
0x6623:	mov	eax, 0
0x6628:	mov	ecx, 1
0x662d:	sub	rdx, r14
0x6630:	test	r10d, r10d
0x6633:	cmovns	eax, r10d
0x6637:	cdqe	
0x6639:	test	rax, rax
0x663c:	cmovne	rcx, rax
0x6640:	test	r11d, r11d
0x6643:	jne	0x7678


0x6649:	cmp	rcx, rdx
0x664c:	jae	0x5f6c


0x7678:	mov	r12, rbx
0x767b:	mov	r9, rbx
0x767e:	mov	r8d, 1
0x7684:	jmp	0x6131


0x6652:	test	rbp, rbp
0x6655:	je	0x64d8


0x6131:	cmp	rcx, rdx
0x6134:	jae	0x5f6c


0x665b:	cmp	r10d, 1
0x665f:	jle	0x669e


0x669e:	mov	byte ptr [rbp], sil
0x66a2:	add	rbp, 1
0x66a6:	jmp	0x64d8


0x6661:	movsxd	rdx, r10d
0x6664:	mov	qword ptr [rsp + 0x30], rcx
0x6669:	sub	rdx, 1
0x666d:	cmp	r15d, 0x30
0x6671:	lea	r12, [rbp + rdx]
0x6676:	je	0x78e5


0x78e5:	mov	esi, 0x30
0x78ea:	jmp	0x668b


0x667c:	cmp	r15d, 0x2b
0x6680:	mov	esi, 0x20
0x6685:	je	0x78e5


0x668b:	mov	rdi, rbp
0x668e:	mov	rbp, r12
0x6691:	call	0x1d50


0x6696:	movzx	esi, byte ptr [rbx]
0x6699:	mov	rcx, qword ptr [rsp + 0x30]
0x669e:	mov	byte ptr [rbp], sil
0x66a2:	add	rbp, 1
0x66a6:	jmp	0x64d8


0x66ab:	lea	rax, [rip + 0x71a3]
0x66b2:	mov	dword ptr [rsp + 0x38], 0xffffffff
0x66ba:	mov	qword ptr [rsp + 0x40], rax
0x66bf:	jmp	0x6512


0x6512:	movzx	r8d, byte ptr [rsp + 0x30]
0x6518:	mov	eax, dword ptr [rsp + 0x518]
0x651f:	mov	rsi, -1
0x6526:	mov	dword ptr [rsp + 0x48], r10d
0x652b:	xor	edi, edi
0x652d:	mov	r9d, r15d
0x6530:	mov	rcx, r13
0x6533:	mov	dword ptr [rsp + 0x30], r8d
0x6538:	push	rax
0x6539:	push	qword ptr [rsp + 0x18]
0x653d:	push	qword ptr [rsp + 0x28]
0x6541:	mov	eax, dword ptr [rsp + 0x50]
0x6545:	push	rax
0x6546:	mov	rdx, qword ptr [rsp + 0x60]
0x654b:	call	0x5ea0


0x66c4:	cmp	r11d, 0x45
0x66c8:	je	0x60f0


0x66ce:	mov	esi, dword ptr [r13 + 0x1c]
0x66d2:	sub	esi, dword ptr [r13 + 0x18]
0x66d6:	mov	edx, 0x92492493
0x66db:	add	esi, 7
0x66de:	mov	eax, esi
0x66e0:	imul	edx
0x66e2:	lea	ecx, [rdx + rsi]
0x66e5:	sar	esi, 0x1f
0x66e8:	mov	edi, 2
0x66ed:	sar	ecx, 2
0x66f0:	sub	ecx, esi
0x66f2:	jmp	0x6400


0x6400:	mov	eax, ecx
0x6402:	xor	esi, esi
0x6404:	mov	byte ptr [rsp + 0x40], 0
0x6409:	shr	eax, 0x1f
0x640c:	mov	dword ptr [rsp + 0x38], eax
0x6410:	mov	eax, ecx
0x6412:	not	eax
0x6414:	shr	eax, 0x1f
0x6417:	cmp	r11d, 0x4f
0x641b:	jne	0x72a0


0x66f7:	cmp	r11d, 0x45
0x66fb:	je	0x742a


0x742a:	xor	edi, edi
0x742c:	jmp	0x642c


0x6701:	cmp	r11d, 0x4f
0x6705:	je	0x60f0


0x642c:	mov	edx, 0x2520
0x6431:	xor	r8d, r8d
0x6434:	mov	word ptr [rsp + 0xab], dx
0x643c:	lea	rdx, [rsp + 0xab]
0x6444:	mov	byte ptr [rsp + 0xad], r11b
0x644c:	mov	r12, rbx
0x644f:	mov	r11d, edi
0x6452:	lea	rax, [rdx + 3]
0x6456:	jmp	0x628a


0x670b:	mov	eax, dword ptr [r13 + 0x14]
0x670f:	cmp	eax, 0xfffff894
0x6714:	lea	ecx, [rax + 0x76c]
0x671a:	setl	byte ptr [rsp + 0x38]
0x671f:	cmp	eax, 0xfffff894
0x6724:	setge	al
0x6727:	test	r15d, r15d
0x672a:	jne	0x75a9


0x6730:	mov	r15d, dword ptr [rsp + 0x2c]
0x6735:	cmp	r15d, 0x2b
0x6739:	je	0x75b3


0x75a9:	cmp	r15d, 0x2b
0x75ad:	jne	0x673f


0x75b3:	mov	edi, 4
0x75b8:	mov	edx, 0x270f
0x75bd:	jmp	0x700d


0x673f:	mov	byte ptr [rsp + 0x40], 0
0x6744:	mov	edi, 4
0x6749:	xor	esi, esi
0x674b:	jmp	0x6417


0x700d:	cmp	edx, ecx
0x700f:	mov	byte ptr [rsp + 0x40], 1
0x7014:	mov	r15d, 0x2b
0x701a:	jb	0x6749


0x6417:	cmp	r11d, 0x4f
0x641b:	jne	0x72a0


0x6749:	xor	esi, esi
0x674b:	jmp	0x6417


0x7020:	cmp	r10d, edi
0x7023:	mov	r15d, 0x2b
0x7029:	setg	byte ptr [rsp + 0x40]
0x702e:	xor	esi, esi
0x7030:	jmp	0x6417


0x6750:	movzx	esi, byte ptr [rsp + 0x30]
0x6755:	mov	rdi, qword ptr [rsp + 0x20]
0x675a:	test	r8b, r8b
0x675d:	mov	eax, 0
0x6762:	mov	dword ptr [rsp + 0x38], r10d
0x6767:	mov	byte ptr [rsp + 0x40], r8b
0x676c:	cmovne	esi, eax
0x676f:	mov	byte ptr [rsp + 0x30], sil
0x6774:	call	0x1ca0


0x6779:	movsxd	r10, dword ptr [rsp + 0x38]
0x677e:	mov	r12, rax
0x6781:	mov	rdx, qword ptr [rsp + 8]
0x6786:	mov	eax, 0
0x678b:	test	r10d, r10d
0x678e:	cmovns	rax, r10
0x6792:	cmp	r12, rax
0x6795:	mov	rcx, rax
0x6798:	cmovae	rcx, r12
0x679c:	sub	rdx, r14
0x679f:	cmp	rdx, rcx
0x67a2:	jbe	0x5f6c


0x67a8:	test	rbp, rbp
0x67ab:	je	0x64d8


0x67b1:	cmp	r12, rax
0x67b4:	movzx	r8d, byte ptr [rsp + 0x40]
0x67ba:	jae	0x6807


0x67bc:	movsxd	rdx, r10d
0x67bf:	mov	qword ptr [rsp + 0x48], rcx
0x67c4:	mov	byte ptr [rsp + 0x40], r8b
0x67c9:	sub	rdx, r12
0x67cc:	cmp	r15d, 0x30
0x67d0:	lea	rax, [rbp + rdx]
0x67d5:	mov	qword ptr [rsp + 0x38], rax
0x67da:	je	0x789f


0x6807:	test	r8b, r8b
0x680a:	jne	0x7807


0x789f:	mov	rdi, rbp
0x78a2:	mov	esi, 0x30
0x78a7:	call	0x1d50


0x67e0:	cmp	r15d, 0x2b
0x67e4:	je	0x789f


0x6810:	cmp	byte ptr [rsp + 0x30], 0
0x6815:	mov	rdx, r12
0x6818:	mov	qword ptr [rsp + 0x30], rcx
0x681d:	mov	rsi, qword ptr [rsp + 0x20]
0x6822:	mov	rdi, rbp
0x6825:	je	0x77f8


0x7807:	mov	rsi, qword ptr [rsp + 0x20]
0x780c:	mov	rdx, r12
0x780f:	mov	rdi, rbp
0x7812:	mov	qword ptr [rsp + 0x30], rcx
0x7817:	call	0x5e00


0x67ea:	mov	rdi, rbp
0x67ed:	mov	esi, 0x20
0x67f2:	call	0x1d50


0x77f8:	call	0x1dd0


0x682b:	call	0x5e50


0x6830:	mov	rcx, qword ptr [rsp + 0x30]
0x6835:	add	rbp, r12
0x6838:	jmp	0x64d8


0x77fd:	mov	rcx, qword ptr [rsp + 0x30]
0x7802:	jmp	0x6835


0x6835:	add	rbp, r12
0x6838:	jmp	0x64d8


0x781c:	mov	rcx, qword ptr [rsp + 0x30]
0x7821:	jmp	0x6835


0x67f7:	movzx	r8d, byte ptr [rsp + 0x40]
0x67fd:	mov	rbp, qword ptr [rsp + 0x38]
0x6802:	mov	rcx, qword ptr [rsp + 0x48]
0x6807:	test	r8b, r8b
0x680a:	jne	0x7807


0x78ac:	mov	rbp, qword ptr [rsp + 0x38]
0x78b1:	movzx	r8d, byte ptr [rsp + 0x40]
0x78b7:	mov	rcx, qword ptr [rsp + 0x48]
0x78bc:	jmp	0x6807


0x683d:	cmp	r11d, 0x45
0x6841:	je	0x742a


0x6847:	mov	esi, dword ptr [r13 + 0x14]
0x684b:	mov	edx, 0x51eb851f
0x6850:	mov	eax, esi
0x6852:	imul	edx
0x6854:	mov	eax, esi
0x6856:	sar	eax, 0x1f
0x6859:	mov	ecx, edx
0x685b:	sar	ecx, 5
0x685e:	sub	ecx, eax
0x6860:	mov	eax, esi
0x6862:	imul	ecx, ecx, 0x64
0x6865:	sub	eax, ecx
0x6867:	mov	ecx, eax
0x6869:	jns	0x6879


0x686b:	neg	eax
0x686d:	add	ecx, 0x64
0x6870:	cmp	esi, 0xfffff893
0x6876:	cmovle	ecx, eax
0x6879:	test	r15d, r15d
0x687c:	je	0x6eaa


0x6879:	test	r15d, r15d
0x687c:	je	0x6eaa


0x6eaa:	mov	r15d, dword ptr [rsp + 0x2c]
0x6eaf:	mov	eax, 1
0x6eb4:	cmp	r15d, 0x2b
0x6eb8:	je	0x791a


0x6882:	mov	eax, 1
0x6887:	mov	byte ptr [rsp + 0x38], 0
0x688c:	cmp	r15d, 0x2b
0x6890:	je	0x7003


0x791a:	mov	byte ptr [rsp + 0x38], 0
0x791f:	mov	edi, 2
0x7924:	jmp	0x7020


0x6ebe:	mov	byte ptr [rsp + 0x40], 0
0x6ec3:	mov	byte ptr [rsp + 0x38], 0
0x6ec8:	mov	edi, 2
0x6ecd:	xor	esi, esi
0x6ecf:	jmp	0x6417


0x7003:	mov	edi, 2
0x7008:	mov	edx, 0x63
0x700d:	cmp	edx, ecx
0x700f:	mov	byte ptr [rsp + 0x40], 1
0x7014:	mov	r15d, 0x2b
0x701a:	jb	0x6749


0x6896:	mov	byte ptr [rsp + 0x40], 0
0x689b:	mov	edi, 2
0x68a0:	xor	esi, esi
0x68a2:	jmp	0x6417


0x68a7:	movzx	eax, byte ptr [rsp + 0x30]
0x68ac:	test	r8b, r8b
0x68af:	cmovne	eax, r8d
0x68b3:	cmp	r11d, 0x45
0x68b7:	je	0x7826


0x7826:	mov	byte ptr [rsp + 0x30], al
0x782a:	jmp	0x60f0


0x68bd:	mov	esi, r9d
0x68c0:	mov	byte ptr [rsp + 0x30], al
0x68c4:	xor	r8d, r8d
0x68c7:	jmp	0x6265


0x68cc:	xor	r8d, r8d
0x68cf:	mov	ecx, dword ptr [r13 + 0x20]
0x68d3:	test	ecx, ecx
0x68d5:	js	0x757e


0x757e:	mov	r12, rbx
0x7581:	jmp	0x5fd2


0x68db:	mov	rcx, qword ptr [r13 + 0x28]
0x68df:	mov	byte ptr [rsp + 0x38], 1
0x68e4:	test	ecx, ecx
0x68e6:	js	0x68fc


0x68fc:	mov	eax, ecx
0x68fe:	mov	edx, 0x91a2b3c5
0x6903:	mov	esi, 0x88888889
0x6908:	imul	edx
0x690a:	mov	eax, ecx
0x690c:	sar	eax, 0x1f
0x690f:	mov	dword ptr [rsp + 0x40], eax
0x6913:	lea	r12d, [rdx + rcx]
0x6917:	sar	r12d, 0xb
0x691b:	sub	r12d, eax
0x691e:	mov	eax, ecx
0x6920:	imul	esi
0x6922:	lea	edi, [rdx + rcx]
0x6925:	sar	edi, 5
0x6928:	sub	edi, dword ptr [rsp + 0x40]
0x692c:	mov	eax, edi
0x692e:	imul	esi
0x6930:	mov	eax, edi
0x6932:	sar	eax, 0x1f
0x6935:	lea	esi, [rdx + rdi]
0x6938:	sar	esi, 5
0x693b:	sub	esi, eax
0x693d:	mov	eax, edi
0x693f:	imul	esi, esi, 0x3c
0x6942:	imul	edi, edi, 0x3c
0x6945:	sub	eax, esi
0x6947:	sub	ecx, edi
0x6949:	cmp	r8, 1
0x694d:	mov	esi, eax
0x694f:	je	0x77a2


0x68e8:	mov	byte ptr [rsp + 0x38], 0
0x68ed:	jne	0x68fc


0x77a2:	movzx	eax, byte ptr [rsp + 0x38]
0x77a7:	mov	byte ptr [rsp + 0x40], 1
0x77ac:	mov	edi, 6
0x77b1:	imul	ecx, r12d, 0x64
0x77b5:	xor	eax, 1
0x77b8:	add	ecx, esi
0x77ba:	mov	esi, 4
0x77bf:	jmp	0x6417


0x6955:	jb	0x7880


0x68ef:	mov	rax, qword ptr [rsp + 0x20]
0x68f4:	cmp	byte ptr [rax], 0x2d
0x68f7:	sete	byte ptr [rsp + 0x38]
0x68fc:	mov	eax, ecx
0x68fe:	mov	edx, 0x91a2b3c5
0x6903:	mov	esi, 0x88888889
0x6908:	imul	edx
0x690a:	mov	eax, ecx
0x690c:	sar	eax, 0x1f
0x690f:	mov	dword ptr [rsp + 0x40], eax
0x6913:	lea	r12d, [rdx + rcx]
0x6917:	sar	r12d, 0xb
0x691b:	sub	r12d, eax
0x691e:	mov	eax, ecx
0x6920:	imul	esi
0x6922:	lea	edi, [rdx + rcx]
0x6925:	sar	edi, 5
0x6928:	sub	edi, dword ptr [rsp + 0x40]
0x692c:	mov	eax, edi
0x692e:	imul	esi
0x6930:	mov	eax, edi
0x6932:	sar	eax, 0x1f
0x6935:	lea	esi, [rdx + rdi]
0x6938:	sar	esi, 5
0x693b:	sub	esi, eax
0x693d:	mov	eax, edi
0x693f:	imul	esi, esi, 0x3c
0x6942:	imul	edi, edi, 0x3c
0x6945:	sub	eax, esi
0x6947:	sub	ecx, edi
0x6949:	cmp	r8, 1
0x694d:	mov	esi, eax
0x694f:	je	0x77a2


0x7880:	imul	ecx, r12d, 0x64
0x7884:	xor	esi, esi
0x7886:	mov	byte ptr [rsp + 0x40], 1
0x788b:	mov	edi, 5
0x7890:	add	ecx, eax
0x7892:	movzx	eax, byte ptr [rsp + 0x38]
0x7897:	xor	eax, 1
0x789a:	jmp	0x6417


0x695b:	cmp	r8, 2
0x695f:	je	0x7755


0x7755:	imul	esi, esi, 0x64
0x7758:	mov	byte ptr [rsp + 0x40], 1
0x775d:	mov	edi, 9
0x7762:	imul	eax, r12d, 0x2710
0x7769:	add	eax, esi
0x776b:	mov	esi, 0x14
0x7770:	add	ecx, eax
0x7772:	movzx	eax, byte ptr [rsp + 0x38]
0x7777:	xor	eax, 1
0x777a:	jmp	0x6417


0x6965:	cmp	r8, 3
0x6969:	jne	0x782f


0x696f:	test	ecx, ecx
0x6971:	jne	0x7755


0x782f:	movzx	ecx, byte ptr [rbx]
0x7832:	mov	r9, rbx
0x7835:	jmp	0x7099


0x6977:	test	eax, eax
0x6979:	jne	0x77a2


0x7099:	mov	rdx, qword ptr [rsp + 8]
0x709e:	mov	eax, 0
0x70a3:	sub	rdx, r14
0x70a6:	test	r10d, r10d
0x70a9:	cmovns	eax, r10d
0x70ad:	cmp	cl, 0x25
0x70b0:	cdqe	
0x70b2:	jne	0x60eb


0x697f:	movzx	eax, byte ptr [rsp + 0x38]
0x6984:	mov	ecx, r12d
0x6987:	mov	byte ptr [rsp + 0x40], 1
0x698c:	mov	edi, 3
0x6991:	xor	eax, 1
0x6994:	jmp	0x6417


0x70b8:	test	rax, rax
0x70bb:	mov	ecx, 1
0x70c0:	mov	r12, r9
0x70c3:	cmovne	rcx, rax
0x70c7:	mov	r8d, 1
0x70cd:	jmp	0x6131


0x69b3:	lea	edx, [rax + rax*4]
0x69b6:	mov	byte ptr [rsp + 0x40], 0
0x69bb:	mov	byte ptr [rsp + 0x38], 0
0x69c0:	xor	esi, esi
0x69c2:	lea	ecx, [rax + rdx*2]
0x69c5:	sar	ecx, 5
0x69c8:	add	ecx, 1
0x69cb:	nop	dword ptr [rax + rax]
0x69d0:	lea	r9, [rsp + 0xb0]
0x69d8:	mov	r12d, 0xcccccccd
0x69de:	lea	r11, [r9 + 0x17]
0x69e2:	nop	word ptr [rax + rax]
0x69e8:	test	sil, 1
0x69ec:	lea	r8, [r11 - 1]
0x69f0:	je	0x6a01


0x6c10:	movdqu	xmm0, xmmword ptr [r13]
0x6c16:	lea	rsi, [rsp + 0x70]
0x6c1b:	mov	rax, qword ptr [r13 + 0x30]
0x6c1f:	mov	rdi, qword ptr [rsp + 0x10]
0x6c24:	movaps	xmmword ptr [rsp + 0x70], xmm0
0x6c29:	mov	dword ptr [rsp + 0x38], r10d
0x6c2e:	movdqu	xmm0, xmmword ptr [r13 + 0x10]
0x6c34:	mov	qword ptr [rsp + 0xa0], rax
0x6c3c:	movaps	xmmword ptr [rsp + 0x80], xmm0
0x6c44:	movdqu	xmm0, xmmword ptr [r13 + 0x20]
0x6c4a:	movaps	xmmword ptr [rsp + 0x90], xmm0
0x6c52:	call	0xbba0


0x6c57:	lea	r9, [rsp + 0xb0]
0x6c5f:	mov	rsi, rax
0x6c62:	mov	rcx, rax
0x6c65:	movabs	r11, 0x6666666666666667
0x6c6f:	mov	edi, 0x30
0x6c74:	mov	r10d, dword ptr [rsp + 0x38]
0x6c79:	lea	r8, [r9 + 0x17]
0x6c7d:	nop	dword ptr [rax]
0x6c80:	mov	rax, rcx
0x6c83:	imul	r11
0x6c86:	mov	rax, rcx
0x6c89:	sar	rax, 0x3f
0x6c8d:	sar	rdx, 2
0x6c91:	sub	rdx, rax
0x6c94:	mov	rax, rdx
0x6c97:	lea	rdx, [rdx + rdx*4]
0x6c9b:	add	rdx, rdx
0x6c9e:	sub	rcx, rdx
0x6ca1:	mov	rdx, rcx
0x6ca4:	mov	rcx, rax
0x6ca7:	mov	eax, edi
0x6ca9:	sub	eax, edx
0x6cab:	add	edx, 0x30
0x6cae:	test	rsi, rsi
0x6cb1:	cmovs	edx, eax
0x6cb4:	sub	r8, 1
0x6cb8:	test	rcx, rcx
0x6cbb:	mov	byte ptr [r8], dl
0x6cbe:	jne	0x6c80


0x6cc0:	test	r10d, r10d
0x6cc3:	mov	edi, 1
0x6cc8:	cmovg	edi, r10d
0x6ccc:	test	rsi, rsi
0x6ccf:	mov	dword ptr [rsp + 0x48], edi
0x6cd3:	js	0x72b8


0x6c80:	mov	rax, rcx
0x6c83:	imul	r11
0x6c86:	mov	rax, rcx
0x6c89:	sar	rax, 0x3f
0x6c8d:	sar	rdx, 2
0x6c91:	sub	rdx, rax
0x6c94:	mov	rax, rdx
0x6c97:	lea	rdx, [rdx + rdx*4]
0x6c9b:	add	rdx, rdx
0x6c9e:	sub	rcx, rdx
0x6ca1:	mov	rdx, rcx
0x6ca4:	mov	rcx, rax
0x6ca7:	mov	eax, edi
0x6ca9:	sub	eax, edx
0x6cab:	add	edx, 0x30
0x6cae:	test	rsi, rsi
0x6cb1:	cmovs	edx, eax
0x6cb4:	sub	r8, 1
0x6cb8:	test	rcx, rcx
0x6cbb:	mov	byte ptr [r8], dl
0x6cbe:	jne	0x6c80


0x6d17:	movzx	eax, byte ptr [rbx + 1]
0x6d1b:	lea	rdx, [rbx + 1]
0x6d1f:	cmp	al, 0x3a
0x6d21:	je	0x783a


0x783a:	lea	rcx, [rbx + 2]
0x783e:	mov	r8d, 1
0x7844:	mov	rdx, rcx
0x7847:	add	rcx, 1
0x784b:	movzx	eax, byte ptr [rcx - 1]
0x784f:	add	r8, 1
0x7853:	cmp	al, 0x3a
0x7855:	jne	0x6d2d


0x6d27:	mov	r8d, 1
0x6d2d:	cmp	al, 0x7a
0x6d2f:	jne	0x60f0


0x785b:	jmp	0x7844


0x6d2d:	cmp	al, 0x7a
0x6d2f:	jne	0x60f0


0x6d35:	mov	rbx, rdx
0x6d38:	jmp	0x68cf


0x7844:	mov	rdx, rcx
0x7847:	add	rcx, 1
0x784b:	movzx	eax, byte ptr [rcx - 1]
0x784f:	add	r8, 1
0x7853:	cmp	al, 0x3a
0x7855:	jne	0x6d2d


0x68cf:	mov	ecx, dword ptr [r13 + 0x20]
0x68d3:	test	ecx, ecx
0x68d5:	js	0x757e


0x6d3d:	cmp	r11d, 0x45
0x6d41:	je	0x60f0


0x6d47:	mov	edi, dword ptr [r13 + 0x14]
0x6d4b:	mov	r8d, dword ptr [r13 + 0x1c]
0x6d4f:	mov	edx, 0x92492493
0x6d54:	mov	eax, edi
0x6d56:	mov	ecx, r8d
0x6d59:	sar	eax, 0x1f
0x6d5c:	and	eax, 0x190
0x6d61:	lea	r12d, [rdi + rax - 0x64]
0x6d66:	mov	eax, dword ptr [r13 + 0x18]
0x6d6a:	sub	ecx, eax
0x6d6c:	mov	dword ptr [rsp + 0x38], eax
0x6d70:	add	ecx, 0x17e
0x6d76:	mov	eax, ecx
0x6d78:	imul	edx
0x6d7a:	lea	eax, [rdx + rcx]
0x6d7d:	mov	edx, ecx
0x6d7f:	sar	edx, 0x1f
0x6d82:	sar	eax, 2
0x6d85:	sub	eax, edx
0x6d87:	lea	edx, [rax*8]
0x6d8e:	sub	edx, eax
0x6d90:	mov	eax, edx
0x6d92:	mov	edx, r8d
0x6d95:	sub	edx, ecx
0x6d97:	lea	eax, [rdx + rax + 3]
0x6d9b:	test	eax, eax
0x6d9d:	mov	dword ptr [rsp + 0x40], eax
0x6da1:	js	0x76c8


0x76c8:	sub	r12d, 1
0x76cc:	mov	edx, 0x16d
0x76d1:	test	r12b, 3
0x76d5:	jne	0x7713


0x6da7:	test	r12b, 3
0x6dab:	mov	eax, 0x16d
0x6db0:	jne	0x6df7


0x76d7:	mov	eax, r12d
0x76da:	mov	edx, 0x51eb851f
0x76df:	imul	edx
0x76e1:	mov	eax, edx
0x76e3:	mov	edx, r12d
0x76e6:	sar	edx, 0x1f
0x76e9:	sar	eax, 5
0x76ec:	sub	eax, edx
0x76ee:	mov	edx, 0x16e
0x76f3:	imul	eax, eax, 0x64
0x76f6:	cmp	r12d, eax
0x76f9:	jne	0x7713


0x7713:	add	r8d, edx
0x7716:	mov	edx, 0x92492493
0x771b:	mov	ecx, r8d
0x771e:	sub	ecx, dword ptr [rsp + 0x38]
0x7722:	add	ecx, 0x17e
0x7728:	mov	eax, ecx
0x772a:	sub	r8d, ecx
0x772d:	imul	edx
0x772f:	lea	eax, [rdx + rcx]
0x7732:	mov	edx, ecx
0x7734:	sar	edx, 0x1f
0x7737:	sar	eax, 2
0x773a:	sub	eax, edx
0x773c:	lea	edx, [rax*8]
0x7743:	sub	edx, eax
0x7745:	lea	ecx, [r8 + rdx + 3]
0x774a:	mov	r8d, 0xffffffff
0x7750:	jmp	0x6e3f


0x6db2:	mov	ecx, 0x51eb851f
0x6db7:	mov	eax, r12d
0x6dba:	imul	ecx
0x6dbc:	mov	eax, r12d
0x6dbf:	sar	eax, 0x1f
0x6dc2:	mov	dword ptr [rsp + 0x48], eax
0x6dc6:	mov	ecx, edx
0x6dc8:	sar	edx, 5
0x6dcb:	sub	edx, eax
0x6dcd:	mov	eax, 0x16e
0x6dd2:	imul	edx, edx, 0x64
0x6dd5:	cmp	r12d, edx
0x6dd8:	jne	0x6df7


0x6df7:	sub	r8d, eax
0x6dfa:	mov	edx, 0x92492493
0x6dff:	mov	ecx, r8d
0x6e02:	sub	ecx, dword ptr [rsp + 0x38]
0x6e06:	add	ecx, 0x17e
0x6e0c:	mov	eax, ecx
0x6e0e:	sub	r8d, ecx
0x6e11:	imul	edx
0x6e13:	lea	eax, [rdx + rcx]
0x6e16:	mov	edx, ecx
0x6e18:	sar	edx, 0x1f
0x6e1b:	sar	eax, 2
0x6e1e:	sub	eax, edx
0x6e20:	lea	edx, [rax*8]
0x6e27:	sub	edx, eax
0x6e29:	lea	ecx, [r8 + rdx + 3]
0x6e2e:	mov	r8d, 1
0x6e34:	test	ecx, ecx
0x6e36:	jns	0x6e3f


0x76fb:	mov	eax, r12d
0x76fe:	mov	ecx, 0x190
0x7703:	cdq	
0x7704:	idiv	ecx
0x7706:	cmp	edx, 1
0x7709:	sbb	edx, edx
0x770b:	not	edx
0x770d:	add	edx, 0x16e
0x7713:	add	r8d, edx
0x7716:	mov	edx, 0x92492493
0x771b:	mov	ecx, r8d
0x771e:	sub	ecx, dword ptr [rsp + 0x38]
0x7722:	add	ecx, 0x17e
0x7728:	mov	eax, ecx
0x772a:	sub	r8d, ecx
0x772d:	imul	edx
0x772f:	lea	eax, [rdx + rcx]
0x7732:	mov	edx, ecx
0x7734:	sar	edx, 0x1f
0x7737:	sar	eax, 2
0x773a:	sub	eax, edx
0x773c:	lea	edx, [rax*8]
0x7743:	sub	edx, eax
0x7745:	lea	ecx, [r8 + rdx + 3]
0x774a:	mov	r8d, 0xffffffff
0x7750:	jmp	0x6e3f


0x6e3f:	cmp	sil, 0x47
0x6e43:	je	0x7586


0x6dda:	sar	ecx, 7
0x6ddd:	mov	eax, ecx
0x6ddf:	sub	eax, dword ptr [rsp + 0x48]
0x6de3:	imul	eax, eax, 0x190
0x6de9:	cmp	r12d, eax
0x6dec:	sete	al
0x6def:	movzx	eax, al
0x6df2:	add	eax, 0x16d
0x6df7:	sub	r8d, eax
0x6dfa:	mov	edx, 0x92492493
0x6dff:	mov	ecx, r8d
0x6e02:	sub	ecx, dword ptr [rsp + 0x38]
0x6e06:	add	ecx, 0x17e
0x6e0c:	mov	eax, ecx
0x6e0e:	sub	r8d, ecx
0x6e11:	imul	edx
0x6e13:	lea	eax, [rdx + rcx]
0x6e16:	mov	edx, ecx
0x6e18:	sar	edx, 0x1f
0x6e1b:	sar	eax, 2
0x6e1e:	sub	eax, edx
0x6e20:	lea	edx, [rax*8]
0x6e27:	sub	edx, eax
0x6e29:	lea	ecx, [r8 + rdx + 3]
0x6e2e:	mov	r8d, 1
0x6e34:	test	ecx, ecx
0x6e36:	jns	0x6e3f


0x6e38:	mov	ecx, dword ptr [rsp + 0x40]
0x6e3c:	xor	r8d, r8d
0x6e3f:	cmp	sil, 0x47
0x6e43:	je	0x7586


0x7586:	mov	eax, 0xfffff894
0x758b:	lea	ecx, [rdi + r8 + 0x76c]
0x7593:	sub	eax, r8d
0x7596:	cmp	edi, eax
0x7598:	setl	byte ptr [rsp + 0x38]
0x759d:	setge	al
0x75a0:	test	r15d, r15d
0x75a3:	je	0x6730


0x6e49:	cmp	sil, 0x67
0x6e4d:	jne	0x777f


0x6e53:	mov	ecx, 0x51eb851f
0x6e58:	mov	eax, edi
0x6e5a:	mov	esi, edi
0x6e5c:	imul	ecx
0x6e5e:	mov	eax, edx
0x6e60:	mov	edx, edi
0x6e62:	sar	edx, 0x1f
0x6e65:	sar	eax, 5
0x6e68:	sub	eax, edx
0x6e6a:	imul	eax, eax, 0x64
0x6e6d:	sub	esi, eax
0x6e6f:	add	esi, r8d
0x6e72:	mov	eax, esi
0x6e74:	imul	ecx
0x6e76:	mov	eax, esi
0x6e78:	sar	eax, 0x1f
0x6e7b:	mov	ecx, edx
0x6e7d:	sar	ecx, 5
0x6e80:	sub	ecx, eax
0x6e82:	imul	ecx, ecx, 0x64
0x6e85:	sub	esi, ecx
0x6e87:	mov	ecx, esi
0x6e89:	jns	0x6879


0x777f:	mov	eax, ecx
0x7781:	mov	edx, 0x92492493
0x7786:	mov	edi, 2
0x778b:	imul	edx
0x778d:	lea	eax, [rdx + rcx]
0x7790:	sar	ecx, 0x1f
0x7793:	sar	eax, 2
0x7796:	sub	eax, ecx
0x7798:	mov	ecx, eax
0x779a:	add	ecx, 1
0x779d:	jmp	0x6400


0x6e8f:	mov	eax, 0xfffff894
0x6e94:	sub	eax, r8d
0x6e97:	cmp	edi, eax
0x6e99:	jge	0x793a


0x6e9f:	neg	ecx
0x6ea1:	test	r15d, r15d
0x6ea4:	jne	0x6882


0x793a:	add	ecx, 0x64
0x793d:	test	r15d, r15d
0x7940:	je	0x6eaa


0x7946:	jmp	0x6882


0x6ed4:	cmp	r11d, 0x45
0x6ed8:	je	0x60f0


0x6ede:	mov	ecx, dword ptr [r13 + 0xc]
0x6ee2:	mov	edi, 2
0x6ee7:	jmp	0x6400


0x6eec:	mov	eax, dword ptr [r13 + 0x18]
0x6ef0:	mov	edx, 0x92492493
0x6ef5:	mov	edi, 1
0x6efa:	lea	ecx, [rax + 6]
0x6efd:	mov	eax, ecx
0x6eff:	imul	edx
0x6f01:	lea	eax, [rdx + rcx]
0x6f04:	mov	edx, ecx
0x6f06:	sar	edx, 0x1f
0x6f09:	sar	eax, 2
0x6f0c:	sub	eax, edx
0x6f0e:	lea	edx, [rax*8]
0x6f15:	sub	edx, eax
0x6f17:	sub	ecx, edx
0x6f19:	add	ecx, 1
0x6f1c:	jmp	0x6400


0x6f21:	cmp	r11d, 0x45
0x6f25:	je	0x60f0


0x6f2b:	mov	ecx, dword ptr [r13 + 0x18]
0x6f2f:	mov	edi, 1
0x6f34:	jmp	0x6400


0x6f39:	cmp	r11d, 0x45
0x6f3d:	je	0x60f0


0x6f43:	mov	eax, dword ptr [r13 + 0x18]
0x6f47:	mov	ecx, 0x92492493
0x6f4c:	lea	esi, [rax + 6]
0x6f4f:	mov	eax, esi
0x6f51:	imul	ecx
0x6f53:	lea	eax, [rdx + rsi]
0x6f56:	mov	edx, esi
0x6f58:	sar	edx, 0x1f
0x6f5b:	sar	eax, 2
0x6f5e:	sub	eax, edx
0x6f60:	lea	edx, [rax*8]
0x6f67:	sub	edx, eax
0x6f69:	mov	eax, edx
0x6f6b:	mov	edx, dword ptr [r13 + 0x1c]
0x6f6f:	sub	eax, esi
0x6f71:	lea	esi, [rax + rdx + 7]
0x6f75:	mov	eax, esi
0x6f77:	imul	ecx
0x6f79:	jmp	0x66e2


0x66e2:	lea	ecx, [rdx + rsi]
0x66e5:	sar	esi, 0x1f
0x66e8:	mov	edi, 2
0x66ed:	sar	ecx, 2
0x66f0:	sub	ecx, esi
0x66f2:	jmp	0x6400


0x6f7e:	cmp	r11d, 0x45
0x6f82:	je	0x60f0


0x6f88:	test	r8b, r8b
0x6f8b:	je	0x6265


0x6f91:	mov	byte ptr [rsp + 0x30], r8b
0x6f96:	jmp	0x6262


0x6f9b:	cmp	r11d, 0x45
0x6f9f:	je	0x742a


0x6fa5:	mov	esi, dword ptr [r13 + 0x14]
0x6fa9:	mov	edx, 0x51eb851f
0x6fae:	mov	eax, esi
0x6fb0:	imul	edx
0x6fb2:	mov	eax, edx
0x6fb4:	mov	edx, esi
0x6fb6:	sar	edx, 0x1f
0x6fb9:	sar	eax, 5
0x6fbc:	sub	eax, edx
0x6fbe:	mov	edx, esi
0x6fc0:	lea	ecx, [rax + 0x13]
0x6fc3:	imul	eax, eax, 0x64
0x6fc6:	sub	edx, eax
0x6fc8:	mov	eax, edx
0x6fca:	shr	eax, 0x1f
0x6fcd:	test	ecx, ecx
0x6fcf:	setg	dl
0x6fd2:	and	eax, edx
0x6fd4:	cmp	esi, 0xfffff894
0x6fda:	setl	byte ptr [rsp + 0x38]
0x6fdf:	sub	ecx, eax
0x6fe1:	cmp	esi, 0xfffff894
0x6fe7:	setge	al
0x6fea:	test	r15d, r15d
0x6fed:	jne	0x688c


0x6ff3:	cmp	dword ptr [rsp + 0x2c], 0x2b
0x6ff8:	mov	r15d, dword ptr [rsp + 0x2c]
0x6ffd:	jne	0x6896


0x688c:	cmp	r15d, 0x2b
0x6890:	je	0x7003


0x7035:	test	r11d, r11d
0x7038:	jne	0x60f0


0x703e:	lea	rax, [rip + 0x6822]
0x7045:	mov	dword ptr [rsp + 0x38], 0xffffffff
0x704d:	mov	qword ptr [rsp + 0x40], rax
0x7052:	jmp	0x6512


0x7057:	test	r11d, r11d
0x705a:	jne	0x60f0


0x7060:	test	r15d, r15d
0x7063:	jne	0x785d


0x7069:	test	r10d, r10d
0x706c:	jns	0x785d


0x785d:	mov	esi, r10d
0x7860:	mov	eax, 0
0x7865:	sub	esi, 6
0x7868:	cmovns	eax, esi
0x786b:	mov	dword ptr [rsp + 0x38], eax
0x786f:	lea	rax, [rip + 0x5fe8]
0x7876:	mov	qword ptr [rsp + 0x40], rax
0x787b:	jmp	0x6512


0x7072:	lea	rax, [rip + 0x67e5]
0x7079:	mov	dword ptr [rsp + 0x38], 4
0x7081:	mov	r15d, 0x2b
0x7087:	mov	qword ptr [rsp + 0x40], rax
0x708c:	jmp	0x6512


0x7091:	movzx	ecx, byte ptr [rbx - 1]
0x7095:	lea	r9, [rbx - 1]
0x7099:	mov	rdx, qword ptr [rsp + 8]
0x709e:	mov	eax, 0
0x70a3:	sub	rdx, r14
0x70a6:	test	r10d, r10d
0x70a9:	cmovns	eax, r10d
0x70ad:	cmp	cl, 0x25
0x70b0:	cdqe	
0x70b2:	jne	0x60eb


0x70d2:	cmp	r11d, 0x45
0x70d6:	je	0x60f0


0x70dc:	mov	ecx, dword ptr [r13 + 8]
0x70e0:	mov	edi, 2
0x70e5:	jmp	0x6400


0x70ea:	cmp	r11d, 0x45
0x70ee:	je	0x60f0


0x70f4:	mov	ecx, dword ptr [r13 + 4]
0x70f8:	mov	edi, 2
0x70fd:	jmp	0x6400


0x7102:	cmp	r11d, 0x45
0x7106:	je	0x60f0


0x710c:	cmp	r10d, -1
0x7110:	je	0x7661


0x7661:	mov	ecx, dword ptr [rsp + 0x518]
0x7668:	mov	edi, 9
0x766d:	mov	r10d, 9
0x7673:	jmp	0x6400


0x7116:	cmp	r10d, 8
0x711a:	jg	0x7929


0x7120:	mov	ecx, dword ptr [rsp + 0x518]
0x7127:	mov	esi, r10d
0x712a:	mov	edi, 0x66666667
0x712f:	nop	
0x7130:	mov	eax, ecx
0x7132:	add	esi, 1
0x7135:	sar	ecx, 0x1f
0x7138:	imul	edi
0x713a:	sar	edx, 2
0x713d:	sub	edx, ecx
0x713f:	cmp	esi, 9
0x7142:	mov	ecx, edx
0x7144:	jne	0x7130


0x7929:	mov	ecx, dword ptr [rsp + 0x518]
0x7930:	jmp	0x7146


0x7146:	mov	edi, r10d
0x7149:	jmp	0x6400


0x7130:	mov	eax, ecx
0x7132:	add	esi, 1
0x7135:	sar	ecx, 0x1f
0x7138:	imul	edi
0x713a:	sar	edx, 2
0x713d:	sub	edx, ecx
0x713f:	cmp	esi, 9
0x7142:	mov	ecx, edx
0x7144:	jne	0x7130


0x714e:	cmp	r11d, 0x45
0x7152:	je	0x60f0


0x7158:	mov	ecx, dword ptr [rsp + 0x68]
0x715c:	mov	edi, 2
0x7161:	jmp	0x6400


0x7166:	cmp	r11d, 0x45
0x716a:	je	0x60f0


0x7170:	mov	ecx, dword ptr [rsp + 0x68]
0x7174:	test	r15d, r15d
0x7177:	mov	edi, 2
0x717c:	jne	0x6400


0x7182:	mov	r15d, 0x5f
0x7188:	jmp	0x6400


0x718d:	cmp	r11d, 0x45
0x7191:	je	0x60f0


0x7197:	mov	eax, dword ptr [r13 + 0x10]
0x719b:	mov	byte ptr [rsp + 0x40], 0
0x71a0:	mov	edi, 2
0x71a5:	cmp	eax, -1
0x71a8:	lea	ecx, [rax + 1]
0x71ab:	setl	byte ptr [rsp + 0x38]
0x71b0:	cmp	eax, -1
0x71b3:	setge	al
0x71b6:	xor	esi, esi
0x71b8:	jmp	0x6417


0x71bd:	test	r10d, r10d
0x71c0:	mov	ecx, 0
0x71c5:	mov	eax, 1
0x71ca:	cmovns	ecx, r10d
0x71ce:	movsxd	rcx, ecx
0x71d1:	test	rcx, rcx
0x71d4:	cmove	rcx, rax
0x71d8:	mov	rax, qword ptr [rsp + 8]
0x71dd:	sub	rax, r14
0x71e0:	cmp	rax, rcx
0x71e3:	jbe	0x5f6c


0x71e9:	test	rbp, rbp
0x71ec:	je	0x64d8


0x71f2:	cmp	r10d, 1
0x71f6:	jle	0x7232


0x7232:	mov	byte ptr [rbp], 0xa
0x7236:	add	rbp, 1
0x723a:	jmp	0x64d8


0x71f8:	movsxd	rdx, r10d
0x71fb:	mov	qword ptr [rsp + 0x30], rcx
0x7200:	sub	rdx, 1
0x7204:	cmp	r15d, 0x30
0x7208:	lea	r12, [rbp + rdx]
0x720d:	je	0x77de


0x77de:	mov	rdi, rbp
0x77e1:	mov	esi, 0x30
0x77e6:	mov	rbp, r12
0x77e9:	call	0x1d50


0x7213:	cmp	r15d, 0x2b
0x7217:	je	0x77de


0x721d:	mov	rdi, rbp
0x7220:	mov	esi, 0x20
0x7225:	mov	rbp, r12
0x7228:	call	0x1d50


0x722d:	mov	rcx, qword ptr [rsp + 0x30]
0x7232:	mov	byte ptr [rbp], 0xa
0x7236:	add	rbp, 1
0x723a:	jmp	0x64d8


0x77ee:	mov	rcx, qword ptr [rsp + 0x30]
0x77f3:	jmp	0x7232


0x723f:	xor	eax, eax
0x7241:	jmp	0x64e8


0x64e8:	test	r8b, r8b
0x64eb:	jne	0x741b


0x7246:	cmp	r11d, 0x45
0x724a:	je	0x60f0


0x7250:	mov	eax, dword ptr [r13 + 0x1c]
0x7254:	mov	byte ptr [rsp + 0x40], 0
0x7259:	mov	edi, 3
0x725e:	cmp	eax, -1
0x7261:	lea	ecx, [rax + 1]
0x7264:	setl	byte ptr [rsp + 0x38]
0x7269:	cmp	eax, -1
0x726c:	setge	al
0x726f:	xor	esi, esi
0x7271:	jmp	0x6417


0x7276:	cmp	r11d, 0x45
0x727a:	je	0x60f0


0x7280:	mov	ecx, dword ptr [r13 + 8]
0x7284:	jmp	0x7174


0x7174:	test	r15d, r15d
0x7177:	mov	edi, 2
0x717c:	jne	0x6400


0x7289:	cmp	r11d, 0x45
0x728d:	je	0x60f0


0x7293:	mov	ecx, dword ptr [r13 + 0xc]
0x7297:	jmp	0x7174


0x7952:	nop	dword ptr [rax]
0x7956:	nop	word ptr cs:[rax + rax]


0x79ae:	nop	


0x7a4f:	nop	


0x7b37:	nop	word ptr [rax + rax]


0x7bd3:	mov	byte ptr [rsp + 0xe], 1
0x7bd8:	mov	byte ptr [rsp + 0x7c], 0
0x7bdd:	xor	r12d, r12d
0x7be0:	mov	qword ptr [rsp + 0x50], 0
0x7be9:	mov	byte ptr [rsp + 0xf], 1
0x7bee:	mov	byte ptr [rsp + 0xd], 0
0x7bf3:	lea	rax, [rip + 0x692f]
0x7bfa:	mov	qword ptr [rsp + 0x18], 1
0x7c03:	xor	r15d, r15d
0x7c06:	mov	dword ptr [rsp + 8], 2
0x7c0e:	mov	qword ptr [rsp + 0x48], rax
0x7c13:	xor	r11d, r11d
0x7c16:	mov	rax, rbp
0x7c19:	mov	r8d, r12d
0x7c1c:	mov	rbp, r11
0x7c1f:	mov	r11, rax
0x7c22:	nop	word ptr [rax + rax]
0x7c28:	cmp	r11, rbp
0x7c2b:	setne	r12b
0x7c2f:	cmp	r11, -1
0x7c33:	jne	0x7c42


0x7c35:	mov	rax, qword ptr [rsp + 0x10]
0x7c3a:	cmp	byte ptr [rax + rbp], 0
0x7c3e:	setne	r12b
0x7c42:	test	r12b, r12b
0x7c45:	je	0x82a0


0x7c42:	test	r12b, r12b
0x7c45:	je	0x82a0


0x82a0:	cmp	dword ptr [rsp + 8], 2
0x82a5:	movzx	ebx, byte ptr [rsp + 0xf]
0x82aa:	mov	r12d, r8d
0x82ad:	mov	rbp, r11
0x82b0:	sete	dl
0x82b3:	mov	eax, ebx
0x82b5:	test	r15, r15
0x82b8:	sete	cl
0x82bb:	and	eax, edx
0x82bd:	and	al, cl
0x82bf:	jne	0x8d26


0x7c4b:	cmp	dword ptr [rsp + 8], 2
0x7c50:	mov	rdi, qword ptr [rsp + 0x10]
0x7c55:	lea	r9, [rdi + rbp]
0x7c59:	setne	al
0x7c5c:	and	al, byte ptr [rsp + 0xd]
0x7c60:	mov	r10d, eax
0x7c63:	je	0x7d10


0x82c5:	mov	eax, ebx
0x82c7:	xor	eax, 1
0x82ca:	and	dl, al
0x82cc:	je	0x8c3c


0x8d26:	mov	dword ptr [rsp + 8], 2
0x8d2e:	jmp	0x86c9


0x7d10:	movzx	ebx, byte ptr [r9]
0x7d14:	cmp	bl, 0x7e
0x7d17:	ja	0x8038


0x7c69:	mov	rax, qword ptr [rsp + 0x18]
0x7c6e:	test	rax, rax
0x7c71:	je	0x80a0


0x8c3c:	mov	rbx, qword ptr [rsp + 0x48]
0x8c41:	test	rbx, rbx
0x8c44:	je	0x8c72


0x82d2:	cmp	byte ptr [rsp + 0x7c], 0
0x82d7:	je	0x8c3a


0x86c9:	cmp	byte ptr [rsp + 0xd], 0
0x86ce:	je	0x86e0


0x7d1d:	lea	rcx, [rip + 0x5e28]
0x7d24:	movzx	edx, bl
0x7d27:	movsxd	rax, dword ptr [rcx + rdx*4]
0x7d2b:	add	rax, rcx
0x7d2e:	jmp	rax


0x8038:	cmp	qword ptr [rsp + 0x58], 1
0x803e:	jne	0x83e8


0x80a0:	movzx	ebx, byte ptr [r9]
0x80a4:	cmp	bl, 0x7e
0x80a7:	ja	0x8030


0x7c77:	cmp	r11, -1
0x7c7b:	lea	rbx, [rbp + rax]
0x7c80:	jne	0x7cb0


0x8c72:	cmp	r13, r15
0x8c75:	jbe	0x8719


0x8c46:	test	al, al
0x8c48:	je	0x8c72


0x8c3a:	mov	eax, edx
0x8c3c:	mov	rbx, qword ptr [rsp + 0x48]
0x8c41:	test	rbx, rbx
0x8c44:	je	0x8c72


0x82dd:	cmp	byte ptr [rsp + 0xe], 0
0x82e2:	jne	0x8cdd


0x86d0:	test	al, al
0x86d2:	mov	eax, 4
0x86d7:	cmove	eax, dword ptr [rsp + 8]
0x86dc:	mov	dword ptr [rsp + 8], eax


0x8044:	mov	qword ptr [rsp + 0x38], r11
0x8049:	mov	byte ptr [rsp + 0x30], r8b
0x804e:	mov	byte ptr [rsp + 0x28], r10b
0x8053:	call	0x1f90


0x83e8:	lea	rax, [rsp + 0xa0]
0x83f0:	cmp	r11, -1
0x83f4:	mov	qword ptr [rsp + 0xa0], 0
0x8400:	mov	qword ptr [rsp + 0x28], rax
0x8405:	jne	0x8434


0x80a9:	lea	rcx, [rip + 0x5c98]
0x80b0:	movzx	edx, bl
0x80b3:	movsxd	rax, dword ptr [rcx + rdx*4]
0x80b7:	add	rax, rcx
0x80ba:	jmp	rax


0x8030:	xor	r10d, r10d
0x8033:	nop	dword ptr [rax + rax]
0x8038:	cmp	qword ptr [rsp + 0x58], 1
0x803e:	jne	0x83e8


0x7c82:	cmp	rax, 1
0x7c86:	jbe	0x7cb0


0x7cb0:	cmp	rbx, r11
0x7cb3:	mov	byte ptr [rsp + 0x28], r10b
0x7cb8:	ja	0x8270


0x8c7b:	mov	byte ptr [r14 + r15], 0
0x8c80:	jmp	0x8719


0x8c4a:	movzx	ecx, byte ptr [rbx]
0x8c4d:	mov	rax, rbx
0x8c50:	test	cl, cl
0x8c52:	je	0x8c72


0x82e8:	test	r13, r13
0x82eb:	sete	al
0x82ee:	cmp	qword ptr [rsp + 0x50], 0
0x82f4:	setne	dl
0x82f7:	and	al, dl
0x82f9:	je	0x8d1c


0x8407:	mov	rdi, qword ptr [rsp + 0x10]
0x840c:	mov	byte ptr [rsp + 0x40], r8b
0x8411:	mov	byte ptr [rsp + 0x38], r10b
0x8416:	mov	qword ptr [rsp + 0x30], r9
0x841b:	call	0x1ca0


0x8434:	lea	rax, [rsp + 0x9c]
0x843c:	xor	ecx, ecx
0x843e:	mov	byte ptr [rsp + 0x7e], bl
0x8442:	mov	byte ptr [rsp + 0x7d], r8b
0x8447:	mov	rbx, rcx
0x844a:	mov	qword ptr [rsp + 0x88], r9
0x8452:	mov	qword ptr [rsp + 0x38], rax
0x8457:	mov	byte ptr [rsp + 0x7f], r10b
0x845c:	mov	qword ptr [rsp + 0x80], r15
0x8464:	mov	qword ptr [rsp + 0x40], r14
0x8469:	mov	qword ptr [rsp + 0x70], r13
0x846e:	mov	qword ptr [rsp + 0x30], r11
0x8473:	mov	rax, qword ptr [rsp + 0x10]
0x8478:	lea	r14, [rbp + rbx]
0x847d:	mov	rdx, qword ptr [rsp + 0x30]
0x8482:	mov	rcx, qword ptr [rsp + 0x28]
0x8487:	mov	rdi, qword ptr [rsp + 0x38]
0x848c:	lea	r13, [rax + r14]
0x8490:	sub	rdx, r14
0x8493:	mov	rsi, r13
0x8496:	call	0xb6e0


0x7c88:	mov	byte ptr [rsp + 0x38], r8b
0x7c8d:	mov	byte ptr [rsp + 0x30], r10b
0x7c92:	mov	qword ptr [rsp + 0x28], r9
0x7c97:	call	0x1ca0


0x7cbe:	mov	rdx, qword ptr [rsp + 0x18]
0x7cc3:	mov	rsi, qword ptr [rsp + 0x48]
0x7cc8:	mov	rdi, r9
0x7ccb:	mov	qword ptr [rsp + 0x40], r11
0x7cd0:	mov	byte ptr [rsp + 0x38], r8b
0x7cd5:	mov	qword ptr [rsp + 0x30], r9
0x7cda:	call	0x1d80


0x8270:	xor	r10d, r10d
0x8273:	jmp	0x7d10


0x8c54:	mov	rdx, r15
0x8c57:	sub	rax, r15
0x8c5a:	cmp	r13, rdx
0x8c5d:	jbe	0x8c63


0x8d1c:	movzx	eax, byte ptr [rsp + 0x7c]
0x8d21:	jmp	0x8c3c


0x82ff:	mov	r13, qword ptr [rsp + 0x50]
0x8304:	lea	rbx, [rip + 0x621e]
0x830b:	mov	byte ptr [r14], 0x27
0x830f:	mov	dword ptr [rsp + 8], 2
0x8317:	mov	r15d, 1
0x831d:	mov	qword ptr [rsp + 0x18], 1
0x8326:	mov	byte ptr [rsp + 0xf], 0
0x832b:	mov	qword ptr [rsp + 0x48], rbx
0x8330:	mov	byte ptr [rsp + 0x7c], al
0x8334:	jmp	0x7c13


0x8c63:	add	rdx, 1
0x8c67:	movzx	ecx, byte ptr [rax + rdx]
0x8c6b:	test	cl, cl
0x8c6d:	jne	0x8c5a


0x8c5f:	mov	byte ptr [r14 + rdx], cl
0x8c63:	add	rdx, 1
0x8c67:	movzx	ecx, byte ptr [rax + rdx]
0x8c6b:	test	cl, cl
0x8c6d:	jne	0x8c5a


0x7c13:	xor	r11d, r11d
0x7c16:	mov	rax, rbp
0x7c19:	mov	r8d, r12d
0x7c1c:	mov	rbp, r11
0x7c1f:	mov	r11, rax
0x7c22:	nop	word ptr [rax + rax]
0x7c28:	cmp	r11, rbp
0x7c2b:	setne	r12b
0x7c2f:	cmp	r11, -1
0x7c33:	jne	0x7c42


0x8c6f:	mov	r15, rdx
0x8c72:	cmp	r13, r15
0x8c75:	jbe	0x8719


0x8c5a:	cmp	r13, rdx
0x8c5d:	jbe	0x8c63


0x7cdf:	test	eax, eax
0x7ce1:	mov	r9, qword ptr [rsp + 0x30]
0x7ce6:	movzx	r8d, byte ptr [rsp + 0x38]
0x7cec:	mov	r11, qword ptr [rsp + 0x40]
0x7cf1:	jne	0x8270


0x7cf7:	cmp	byte ptr [rsp + 0xf], 0
0x7cfc:	movzx	r10d, byte ptr [rsp + 0x28]
0x7d02:	jne	0x8c85


0x8c85:	cmp	dword ptr [rsp + 8], 2
0x8c8a:	movzx	ebx, byte ptr [rsp + 0xf]
0x8c8f:	mov	rbp, r11
0x8c92:	sete	al
0x8c95:	mov	byte ptr [rsp + 0xd], bl
0x8c99:	jmp	0x86c9


0x849b:	test	rax, rax
0x849e:	mov	r15, rax
0x84a1:	je	0x84f1


0x84f1:	mov	edx, r12d
0x84f4:	mov	rdi, rbx
0x84f7:	movzx	r8d, byte ptr [rsp + 0x7d]
0x84fd:	xor	edx, 1
0x8500:	movzx	ebx, byte ptr [rsp + 0x7e]
0x8505:	movzx	r10d, byte ptr [rsp + 0x7f]
0x850b:	and	dl, byte ptr [rsp + 0xd]
0x850f:	mov	r15, qword ptr [rsp + 0x80]
0x8517:	mov	r14, qword ptr [rsp + 0x40]
0x851c:	mov	r13, qword ptr [rsp + 0x70]
0x8521:	mov	r11, qword ptr [rsp + 0x30]
0x8526:	cmp	rdi, 1
0x852a:	jbe	0x8b2b


0x84a3:	cmp	rax, -1
0x84a7:	je	0x8ac5


0x8b2b:	mov	eax, edx
0x8b2d:	jmp	0x8087


0x8530:	mov	rcx, rdi
0x8533:	xor	esi, esi
0x8535:	movzx	r9d, byte ptr [rsp + 0xf]
0x853b:	add	rcx, rbp
0x853e:	mov	rdi, qword ptr [rsp + 0x10]
0x8543:	jmp	0x85fe


0x8ac5:	mov	rdi, rbx
0x8ac8:	movzx	r8d, byte ptr [rsp + 0x7d]
0x8ace:	movzx	ebx, byte ptr [rsp + 0x7e]
0x8ad3:	movzx	r10d, byte ptr [rsp + 0x7f]
0x8ad9:	mov	r15, qword ptr [rsp + 0x80]
0x8ae1:	xor	r12d, r12d
0x8ae4:	mov	r14, qword ptr [rsp + 0x40]
0x8ae9:	mov	r13, qword ptr [rsp + 0x70]
0x8aee:	mov	r11, qword ptr [rsp + 0x30]
0x8af3:	movzx	edx, byte ptr [rsp + 0xd]
0x8af8:	jmp	0x8526


0x84ad:	cmp	rax, -2
0x84b1:	je	0x8a51


0x8087:	test	al, al
0x8089:	jne	0x8a21


0x85fe:	test	dl, dl
0x8600:	jne	0x8550


0x8526:	cmp	rdi, 1
0x852a:	jbe	0x8b2b


0x8a51:	mov	r11, qword ptr [rsp + 0x30]
0x8a56:	mov	rsi, r14
0x8a59:	mov	rcx, r13
0x8a5c:	mov	rax, rbx
0x8a5f:	mov	rdi, rbx
0x8a62:	movzx	r8d, byte ptr [rsp + 0x7d]
0x8a68:	movzx	ebx, byte ptr [rsp + 0x7e]
0x8a6d:	mov	r9, qword ptr [rsp + 0x88]
0x8a75:	cmp	rsi, r11
0x8a78:	movzx	r10d, byte ptr [rsp + 0x7f]
0x8a7e:	mov	r15, qword ptr [rsp + 0x80]
0x8a86:	mov	r14, qword ptr [rsp + 0x40]
0x8a8b:	mov	r13, qword ptr [rsp + 0x70]
0x8a90:	jae	0x8ab8


0x84b7:	cmp	dword ptr [rsp + 8], 2
0x84bc:	sete	al
0x84bf:	and	al, byte ptr [rsp + 0xf]
0x84c3:	jne	0x8660


0x808f:	cmp	dword ptr [rsp + 8], 2
0x8094:	sete	dl
0x8097:	jmp	0x7d68


0x8a21:	movzx	edx, byte ptr [rsp + 0xd]
0x8a26:	xor	r12d, r12d
0x8a29:	jmp	0x8530


0x8606:	mov	eax, esi
0x8608:	xor	eax, 1
0x860b:	and	eax, r8d
0x860e:	test	r10b, r10b
0x8611:	je	0x8621


0x8550:	cmp	dword ptr [rsp + 8], 2
0x8555:	sete	al
0x8558:	test	r9b, r9b
0x855b:	jne	0x8a10


0x8a92:	cmp	byte ptr [rcx], 0
0x8a95:	jne	0x8aa7


0x8ab8:	movzx	edx, byte ptr [rsp + 0xd]
0x8abd:	xor	r12d, r12d
0x8ac0:	jmp	0x8526


0x84c9:	mov	edi, dword ptr [rsp + 0x9c]
0x84d0:	call	0x1f70


0x8660:	cmp	r15, 1
0x8664:	je	0x84c9


0x7d68:	cmp	byte ptr [rsp + 0xd], 1
0x7d6d:	jne	0x7e82


0x8621:	add	rbp, 1
0x8625:	cmp	rbp, rcx
0x8628:	jae	0x7dac


0x8613:	cmp	r13, r15
0x8616:	jbe	0x861d


0x8561:	mov	esi, r8d
0x8564:	xor	esi, 1
0x8567:	and	al, sil
0x856a:	je	0x859b


0x8a10:	movzx	ebx, byte ptr [rsp + 0xf]
0x8a15:	mov	rbp, r11
0x8a18:	mov	byte ptr [rsp + 0xd], bl
0x8a1c:	jmp	0x86c9


0x8a97:	jmp	0x8ab8


0x8aa7:	add	rax, 1
0x8aab:	lea	rdx, [rbp + rax]
0x8ab0:	cmp	r11, rdx
0x8ab3:	ja	0x8aa0


0x866a:	mov	rdi, qword ptr [rsp + 0x10]
0x866f:	lea	rcx, [rdi + r15]
0x8673:	lea	rdx, [rdi + r14 + 1]
0x8678:	lea	r8, [rcx + r14]
0x867c:	jmp	0x868d


0x7d73:	test	dl, dl
0x7d75:	jne	0x7e82


0x7e82:	cmp	byte ptr [rsp + 0xf], 0
0x7e87:	jne	0x7d7b


0x862e:	test	al, al
0x8630:	je	0x8a2e


0x7dac:	test	al, al
0x7dae:	je	0x7dd0


0x861d:	add	r15, 1
0x8621:	add	rbp, 1
0x8625:	cmp	rbp, rcx
0x8628:	jae	0x7dac


0x8618:	mov	byte ptr [r14 + r15], 0x5c
0x861d:	add	r15, 1
0x8621:	add	rbp, 1
0x8625:	cmp	rbp, rcx
0x8628:	jae	0x7dac


0x859b:	cmp	r13, r15
0x859e:	jbe	0x85a5


0x856c:	cmp	r13, r15
0x856f:	jbe	0x8576


0x8ab5:	mov	rdi, rax
0x8ab8:	movzx	edx, byte ptr [rsp + 0xd]
0x8abd:	xor	r12d, r12d
0x8ac0:	jmp	0x8526


0x8aa0:	cmp	byte ptr [r9 + rax], 0
0x8aa5:	je	0x8ab5


0x868d:	movzx	ecx, byte ptr [rdx]
0x8690:	sub	ecx, 0x5b
0x8693:	cmp	cl, 0x21
0x8696:	ja	0x8680


0x7d7b:	mov	rsi, qword ptr [rsp + 0x20]
0x7d80:	test	rsi, rsi
0x7d83:	je	0x7d99


0x7e8d:	jmp	0x7d99


0x8a2e:	xor	r10d, r10d
0x8a31:	jmp	0x85ed


0x8636:	cmp	r13, r15
0x8639:	jbe	0x8640


0x7dd0:	cmp	r15, r13
0x7dd3:	jae	0x7dd9


0x7db0:	cmp	r13, r15
0x7db3:	jbe	0x7dba


0x85a5:	lea	rax, [r15 + 1]
0x85a9:	cmp	r13, rax
0x85ac:	jbe	0x85bb


0x85a0:	mov	byte ptr [r14 + r15], 0x5c
0x85a5:	lea	rax, [r15 + 1]
0x85a9:	cmp	r13, rax
0x85ac:	jbe	0x85bb


0x8576:	lea	rsi, [r15 + 1]
0x857a:	cmp	r13, rsi
0x857d:	jbe	0x8585


0x8571:	mov	byte ptr [r14 + r15], 0x27
0x8576:	lea	rsi, [r15 + 1]
0x857a:	cmp	r13, rsi
0x857d:	jbe	0x8585


0x8698:	mov	esi, 1
0x869d:	shl	rsi, cl
0x86a0:	mov	rcx, rsi
0x86a3:	movabs	rsi, 0x20000002b
0x86ad:	test	rcx, rsi
0x86b0:	je	0x8680


0x8680:	add	rdx, 1
0x8684:	cmp	r8, rdx
0x8687:	je	0x84c9


0x7d99:	test	r10b, r10b
0x7d9c:	jne	0x7ee3


0x7d85:	mov	edx, ebx
0x7d87:	shr	dl, 5
0x7d8a:	movzx	edx, dl
0x7d8d:	mov	edx, dword ptr [rsi + rdx*4]
0x7d90:	bt	edx, ebx
0x7d93:	jb	0x7ee3


0x85ed:	cmp	r13, r15
0x85f0:	jbe	0x85f6


0x8640:	lea	rax, [r15 + 1]
0x8644:	cmp	r13, rax
0x8647:	jbe	0x864f


0x863b:	mov	byte ptr [r14 + r15], 0x27
0x8640:	lea	rax, [r15 + 1]
0x8644:	cmp	r13, rax
0x8647:	jbe	0x864f


0x7dd5:	mov	byte ptr [r14 + r15], bl
0x7dd9:	movzx	edi, byte ptr [rsp + 0xe]
0x7dde:	add	r15, 1
0x7de2:	mov	eax, 0
0x7de7:	test	r12b, r12b
0x7dea:	cmove	edi, eax
0x7ded:	mov	byte ptr [rsp + 0xe], dil
0x7df2:	jmp	0x7c28


0x7dd9:	movzx	edi, byte ptr [rsp + 0xe]
0x7dde:	add	r15, 1
0x7de2:	mov	eax, 0
0x7de7:	test	r12b, r12b
0x7dea:	cmove	edi, eax
0x7ded:	mov	byte ptr [rsp + 0xe], dil
0x7df2:	jmp	0x7c28


0x7dba:	lea	rax, [r15 + 1]
0x7dbe:	cmp	r13, rax
0x7dc1:	jbe	0x7dc9


0x7db5:	mov	byte ptr [r14 + r15], 0x27
0x7dba:	lea	rax, [r15 + 1]
0x7dbe:	cmp	r13, rax
0x7dc1:	jbe	0x7dc9


0x85bb:	lea	rax, [r15 + 2]
0x85bf:	cmp	r13, rax
0x85c2:	jbe	0x85d4


0x85ae:	mov	eax, ebx
0x85b0:	shr	al, 6
0x85b3:	add	eax, 0x30
0x85b6:	mov	byte ptr [r14 + r15 + 1], al
0x85bb:	lea	rax, [r15 + 2]
0x85bf:	cmp	r13, rax
0x85c2:	jbe	0x85d4


0x8585:	lea	rsi, [r15 + 2]
0x8589:	cmp	r13, rsi
0x858c:	jbe	0x8594


0x857f:	mov	byte ptr [r14 + r15 + 1], 0x24
0x8585:	lea	rsi, [r15 + 2]
0x8589:	cmp	r13, rsi
0x858c:	jbe	0x8594


0x86b2:	mov	r14, qword ptr [rsp + 0x40]
0x86b7:	mov	r13, qword ptr [rsp + 0x70]
0x86bc:	mov	rbp, qword ptr [rsp + 0x30]
0x86c1:	mov	dword ptr [rsp + 8], 2
0x86c9:	cmp	byte ptr [rsp + 0xd], 0
0x86ce:	je	0x86e0


0x7da2:	xor	eax, 1
0x7da5:	add	rbp, 1
0x7da9:	and	eax, r8d
0x7dac:	test	al, al
0x7dae:	je	0x7dd0


0x7ee3:	cmp	dword ptr [rsp + 8], 2
0x7ee8:	sete	dl
0x7eeb:	cmp	byte ptr [rsp + 0xf], 0
0x7ef0:	mov	eax, edx
0x7ef2:	jne	0x8748


0x85f6:	movzx	ebx, byte ptr [rdi + rbp]
0x85fa:	add	r15, 1
0x85fe:	test	dl, dl
0x8600:	jne	0x8550


0x85f2:	mov	byte ptr [r14 + r15], bl
0x85f6:	movzx	ebx, byte ptr [rdi + rbp]
0x85fa:	add	r15, 1
0x85fe:	test	dl, dl
0x8600:	jne	0x8550


0x864f:	add	r15, 2
0x8653:	xor	r10d, r10d
0x8656:	xor	r8d, r8d
0x8659:	jmp	0x85ed


0x8649:	mov	byte ptr [r14 + r15 + 1], 0x27
0x864f:	add	r15, 2
0x8653:	xor	r10d, r10d
0x8656:	xor	r8d, r8d
0x8659:	jmp	0x85ed


0x7c28:	cmp	r11, rbp
0x7c2b:	setne	r12b
0x7c2f:	cmp	r11, -1
0x7c33:	jne	0x7c42


0x7dc9:	add	r15, 2
0x7dcd:	xor	r8d, r8d
0x7dd0:	cmp	r15, r13
0x7dd3:	jae	0x7dd9


0x7dc3:	mov	byte ptr [r14 + r15 + 1], 0x27
0x7dc9:	add	r15, 2
0x7dcd:	xor	r8d, r8d
0x7dd0:	cmp	r15, r13
0x7dd3:	jae	0x7dd9


0x85d4:	and	ebx, 7
0x85d7:	add	rbp, 1
0x85db:	add	r15, 3
0x85df:	add	ebx, 0x30
0x85e2:	cmp	rbp, rcx
0x85e5:	jae	0x7dd0


0x85c4:	mov	eax, ebx
0x85c6:	shr	al, 3
0x85c9:	and	eax, 7
0x85cc:	add	eax, 0x30
0x85cf:	mov	byte ptr [r14 + r15 + 2], al
0x85d4:	and	ebx, 7
0x85d7:	add	rbp, 1
0x85db:	add	r15, 3
0x85df:	add	ebx, 0x30
0x85e2:	cmp	rbp, rcx
0x85e5:	jae	0x7dd0


0x8594:	add	r15, 3
0x8598:	mov	r8d, eax
0x859b:	cmp	r13, r15
0x859e:	jbe	0x85a5


0x858e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x8594:	add	r15, 3
0x8598:	mov	r8d, eax
0x859b:	cmp	r13, r15
0x859e:	jbe	0x85a5


0x7ef8:	mov	eax, r8d
0x7efb:	xor	eax, 1
0x7efe:	and	al, dl
0x7f00:	je	0x7f31


0x8748:	mov	rbp, r11
0x874b:	jmp	0x86c9


0x85eb:	mov	esi, edx
0x85ed:	cmp	r13, r15
0x85f0:	jbe	0x85f6


0x7f31:	cmp	r13, r15
0x7f34:	jbe	0x7f3b


0x7f02:	cmp	r13, r15
0x7f05:	jbe	0x7f0c


0x7f3b:	add	r15, 1
0x7f3f:	add	rbp, 1
0x7f43:	jmp	0x7dd0


0x7f36:	mov	byte ptr [r14 + r15], 0x5c
0x7f3b:	add	r15, 1
0x7f3f:	add	rbp, 1
0x7f43:	jmp	0x7dd0


0x7f0c:	lea	rdx, [r15 + 1]
0x7f10:	cmp	r13, rdx
0x7f13:	jbe	0x7f1b


0x7f07:	mov	byte ptr [r14 + r15], 0x27
0x7f0c:	lea	rdx, [r15 + 1]
0x7f10:	cmp	r13, rdx
0x7f13:	jbe	0x7f1b


0x7f1b:	lea	rdx, [r15 + 2]
0x7f1f:	cmp	r13, rdx
0x7f22:	jbe	0x7f2a


0x7f15:	mov	byte ptr [r14 + r15 + 1], 0x24
0x7f1b:	lea	rdx, [r15 + 2]
0x7f1f:	cmp	r13, rdx
0x7f22:	jbe	0x7f2a


0x7f2a:	add	r15, 3
0x7f2e:	mov	r8d, eax
0x7f31:	cmp	r13, r15
0x7f34:	jbe	0x7f3b


0x7f24:	mov	byte ptr [r14 + r15 + 2], 0x27
0x7f2a:	add	r15, 3
0x7f2e:	mov	r8d, eax
0x7f31:	cmp	r13, r15
0x7f34:	jbe	0x7f3b


0x84d5:	mov	rdi, qword ptr [rsp + 0x28]
0x84da:	test	eax, eax
0x84dc:	mov	eax, 0
0x84e1:	cmove	r12d, eax
0x84e5:	add	rbx, r15
0x84e8:	call	0x1f60


0x84ed:	test	eax, eax
0x84ef:	je	0x8473


0x8473:	mov	rax, qword ptr [rsp + 0x10]
0x8478:	lea	r14, [rbp + rbx]
0x847d:	mov	rdx, qword ptr [rsp + 0x30]
0x8482:	mov	rcx, qword ptr [rsp + 0x28]
0x8487:	mov	rdi, qword ptr [rsp + 0x38]
0x848c:	lea	r13, [rax + r14]
0x8490:	sub	rdx, r14
0x8493:	mov	rsi, r13
0x8496:	call	0xb6e0


0x7c9c:	movzx	r8d, byte ptr [rsp + 0x38]
0x7ca2:	movzx	r10d, byte ptr [rsp + 0x30]
0x7ca8:	mov	r11, rax
0x7cab:	mov	r9, qword ptr [rsp + 0x28]
0x7cb0:	cmp	rbx, r11
0x7cb3:	mov	byte ptr [rsp + 0x28], r10b
0x7cb8:	ja	0x8270


0x8420:	movzx	r8d, byte ptr [rsp + 0x40]
0x8426:	movzx	r10d, byte ptr [rsp + 0x38]
0x842c:	mov	r11, rax
0x842f:	mov	r9, qword ptr [rsp + 0x30]
0x8434:	lea	rax, [rsp + 0x9c]
0x843c:	xor	ecx, ecx
0x843e:	mov	byte ptr [rsp + 0x7e], bl
0x8442:	mov	byte ptr [rsp + 0x7d], r8b
0x8447:	mov	rbx, rcx
0x844a:	mov	qword ptr [rsp + 0x88], r9
0x8452:	mov	qword ptr [rsp + 0x38], rax
0x8457:	mov	byte ptr [rsp + 0x7f], r10b
0x845c:	mov	qword ptr [rsp + 0x80], r15
0x8464:	mov	qword ptr [rsp + 0x40], r14
0x8469:	mov	qword ptr [rsp + 0x70], r13
0x846e:	mov	qword ptr [rsp + 0x30], r11
0x8473:	mov	rax, qword ptr [rsp + 0x10]
0x8478:	lea	r14, [rbp + rbx]
0x847d:	mov	rdx, qword ptr [rsp + 0x30]
0x8482:	mov	rcx, qword ptr [rsp + 0x28]
0x8487:	mov	rdi, qword ptr [rsp + 0x38]
0x848c:	lea	r13, [rax + r14]
0x8490:	sub	rdx, r14
0x8493:	mov	rsi, r13
0x8496:	call	0xb6e0


0x8058:	mov	rcx, qword ptr [rax]
0x805b:	movzx	edx, bl
0x805e:	movzx	r10d, byte ptr [rsp + 0x28]
0x8064:	movzx	r8d, byte ptr [rsp + 0x30]
0x806a:	mov	r11, qword ptr [rsp + 0x38]
0x806f:	mov	edi, 1
0x8074:	movzx	eax, word ptr [rcx + rdx*2]
0x8078:	and	ax, 0x4000
0x807c:	setne	r12b
0x8080:	sete	al
0x8083:	and	al, byte ptr [rsp + 0xd]
0x8087:	test	al, al
0x8089:	jne	0x8a21


0x7d30:	xor	r10d, r10d
0x7d33:	cmp	r11, 1
0x7d37:	setne	al
0x7d3a:	cmp	r11, -1
0x7d3e:	jne	0x7d4c


0x7d40:	mov	rax, qword ptr [rsp + 0x10]
0x7d45:	cmp	byte ptr [rax + 1], 0
0x7d49:	setne	al
0x7d4c:	cmp	dword ptr [rsp + 8], 2
0x7d51:	sete	dl
0x7d54:	test	al, al
0x7d56:	je	0x7fa8


0x7d4c:	cmp	dword ptr [rsp + 8], 2
0x7d51:	sete	dl
0x7d54:	test	al, al
0x7d56:	je	0x7fa8


0x7fa8:	test	rbp, rbp
0x7fab:	jne	0x7d5c


0x7d5c:	xor	r12d, r12d
0x7d5f:	xor	eax, eax
0x7d61:	nop	dword ptr [rax]
0x7d68:	cmp	byte ptr [rsp + 0xd], 1
0x7d6d:	jne	0x7e82


0x7fb1:	movzx	eax, byte ptr [rsp + 0xf]
0x7fb6:	and	al, dl
0x7fb8:	je	0x7d68


0x7fbe:	mov	rbp, r11
0x7fc1:	mov	dword ptr [rsp + 8], 2
0x7fc9:	jmp	0x86c9


0x83c8:	cmp	byte ptr [rsp + 0xf], 0
0x83cd:	jne	0x8bf0


0x7e10:	cmp	eax, 5
0x7e13:	je	0x8388


0x83d3:	xor	r12d, r12d
0x83d6:	xor	eax, eax
0x83d8:	mov	ebx, 0x3f
0x83dd:	jmp	0x7d99


0x8bf0:	mov	rbp, r11
0x8bf3:	movzx	eax, byte ptr [rsp + 0xf]
0x8bf8:	jmp	0x86c9


0x8388:	test	byte ptr [rsp + 0x78], 4
0x838d:	je	0x83b0


0x7e19:	cmp	eax, 2
0x7e1c:	mov	ebx, 0x3f
0x7e21:	sete	dl
0x7e24:	xor	r12d, r12d
0x7e27:	xor	eax, eax
0x7e29:	jmp	0x7d68


0x83b0:	xor	edx, edx
0x83b2:	xor	r12d, r12d
0x83b5:	xor	eax, eax
0x83b7:	mov	ebx, 0x3f
0x83bc:	jmp	0x7d68


0x838f:	lea	rcx, [rbp + 2]
0x8393:	cmp	rcx, r11
0x8396:	jae	0x83b0


0x8398:	mov	rax, qword ptr [rsp + 0x10]
0x839d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x83a2:	je	0x8b32


0x8b32:	movzx	ebx, byte ptr [rax + rcx]
0x8b36:	cmp	bl, 0x3e
0x8b39:	ja	0x83b0


0x8b3f:	movabs	rax, 0x7000a38200000000
0x8b49:	bt	rax, rbx
0x8b4d:	jae	0x83b0


0x8b53:	cmp	byte ptr [rsp + 0xf], 0
0x8b58:	jne	0x8d42


0x8b5e:	cmp	r13, r15
0x8b61:	jbe	0x8b68


0x8d42:	mov	rbp, r11
0x8d45:	jmp	0x86e0


0x8b68:	lea	rax, [r15 + 1]
0x8b6c:	cmp	r13, rax
0x8b6f:	jbe	0x8b77


0x8b63:	mov	byte ptr [r14 + r15], 0x3f
0x8b68:	lea	rax, [r15 + 1]
0x8b6c:	cmp	r13, rax
0x8b6f:	jbe	0x8b77


0x8b77:	lea	rax, [r15 + 2]
0x8b7b:	cmp	r13, rax
0x8b7e:	jbe	0x8b86


0x8b71:	mov	byte ptr [r14 + r15 + 1], 0x22
0x8b77:	lea	rax, [r15 + 2]
0x8b7b:	cmp	r13, rax
0x8b7e:	jbe	0x8b86


0x8b86:	lea	rax, [r15 + 3]
0x8b8a:	cmp	r13, rax
0x8b8d:	jbe	0x8b95


0x8b80:	mov	byte ptr [r14 + r15 + 2], 0x22
0x8b86:	lea	rax, [r15 + 3]
0x8b8a:	cmp	r13, rax
0x8b8d:	jbe	0x8b95


0x8b95:	add	r15, 4
0x8b99:	xor	edx, edx
0x8b9b:	xor	r12d, r12d
0x8b9e:	xor	eax, eax
0x8ba0:	mov	rbp, rcx
0x8ba3:	jmp	0x7d68


0x8b8f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x8b95:	add	r15, 4
0x8b99:	xor	edx, edx
0x8b9b:	xor	r12d, r12d
0x8b9e:	xor	eax, eax
0x8ba0:	mov	rbp, rcx
0x8ba3:	jmp	0x7d68


0x8340:	cmp	byte ptr [rsp + 0xf], 0
0x8345:	jne	0x8bf0


0x7e3e:	mov	byte ptr [rsp + 0x7c], r12b
0x7e43:	xor	edx, edx
0x7e45:	xor	eax, eax
0x7e47:	mov	ebx, 0x27
0x7e4c:	jmp	0x7d68


0x834b:	test	r13, r13
0x834e:	je	0x8750


0x8750:	cmp	r13, r15
0x8753:	jbe	0x875a


0x8354:	xor	edx, edx
0x8356:	cmp	qword ptr [rsp + 0x50], 0
0x835c:	jne	0x8750


0x875a:	lea	rax, [r15 + 1]
0x875e:	cmp	r13, rax
0x8761:	jbe	0x8769


0x8755:	mov	byte ptr [r14 + r15], 0x27
0x875a:	lea	rax, [r15 + 1]
0x875e:	cmp	r13, rax
0x8761:	jbe	0x8769


0x8362:	mov	qword ptr [rsp + 0x50], r13
0x8367:	add	r15, 3
0x836b:	xor	eax, eax
0x836d:	mov	byte ptr [rsp + 0x7c], r12b
0x8372:	xor	r8d, r8d
0x8375:	mov	r13, rdx
0x8378:	mov	ebx, 0x27
0x837d:	jmp	0x7d99


0x8769:	lea	rax, [r15 + 2]
0x876d:	cmp	r13, rax
0x8770:	jbe	0x8d62


0x8763:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x8769:	lea	rax, [r15 + 2]
0x876d:	cmp	r13, rax
0x8770:	jbe	0x8d62


0x8d62:	mov	rdx, r13
0x8d65:	mov	r13, qword ptr [rsp + 0x50]
0x8d6a:	jmp	0x8362


0x8776:	mov	rdx, r13
0x8779:	mov	byte ptr [r14 + r15 + 2], 0x27
0x877f:	mov	r13, qword ptr [rsp + 0x50]
0x8784:	jmp	0x8362


0x7e74:	cmp	byte ptr [rsp + 0xd], 0
0x7e79:	jne	0x7ee0


0x7e7b:	mov	ebx, edx
0x7e7d:	xor	r12d, r12d
0x7e80:	xor	eax, eax
0x7e82:	cmp	byte ptr [rsp + 0xf], 0
0x7e87:	jne	0x7d7b


0x7ee0:	xor	r12d, r12d
0x7ee3:	cmp	dword ptr [rsp + 8], 2
0x7ee8:	sete	dl
0x7eeb:	cmp	byte ptr [rsp + 0xf], 0
0x7ef0:	mov	eax, edx
0x7ef2:	jne	0x8748


0x8280:	cmp	byte ptr [rsp + 0xf], 0
0x8285:	jne	0x8bf0


0x7eb3:	cmp	byte ptr [rsp + 0xd], 0
0x7eb8:	je	0x80d0


0x828b:	add	rbp, 1
0x828f:	mov	eax, r8d
0x8292:	xor	r12d, r12d
0x8295:	mov	ebx, 0x5c
0x829a:	jmp	0x7dac


0x80d0:	mov	edx, 0x5c
0x80d5:	mov	ebx, 0x5c
0x80da:	jmp	0x7e74


0x7ebe:	cmp	byte ptr [rsp + 0xf], 0
0x7ec3:	je	0x80d0


0x7ec9:	cmp	qword ptr [rsp + 0x18], 0
0x7ecf:	jne	0x828b


0x7ed5:	mov	ebx, 0x5c
0x7eda:	nop	word ptr [rax + rax]
0x7ee0:	xor	r12d, r12d
0x7ee3:	cmp	dword ptr [rsp + 8], 2
0x7ee8:	sete	dl
0x7eeb:	cmp	byte ptr [rsp + 0xf], 0
0x7ef0:	mov	eax, edx
0x7ef2:	jne	0x8748


0x7f5b:	xor	edx, edx
0x7f5d:	test	byte ptr [rsp + 0x78], 1
0x7f62:	je	0x7e7b


0x8123:	cmp	dword ptr [rsp + 8], 2
0x8128:	sete	dl
0x812b:	cmp	byte ptr [rsp + 0xf], 0
0x8130:	jne	0x8cca


0x7f68:	add	rbp, 1
0x7f6c:	jmp	0x7c28


0x8136:	mov	eax, r8d
0x8139:	mov	rcx, r15
0x813c:	xor	eax, 1
0x813f:	and	al, dl
0x8141:	je	0x8170


0x8cca:	movzx	ebx, byte ptr [rsp + 0xf]
0x8ccf:	mov	rbp, r11
0x8cd2:	mov	eax, edx
0x8cd4:	mov	byte ptr [rsp + 0xd], bl
0x8cd8:	jmp	0x86c9


0x8170:	cmp	r13, rcx
0x8173:	jbe	0x817a


0x8143:	cmp	r13, r15
0x8146:	jbe	0x814d


0x817a:	cmp	dword ptr [rsp + 8], 2
0x817f:	lea	r15, [rcx + 1]
0x8183:	je	0x8789


0x8175:	mov	byte ptr [r14 + rcx], 0x5c
0x817a:	cmp	dword ptr [rsp + 8], 2
0x817f:	lea	r15, [rcx + 1]
0x8183:	je	0x8789


0x814d:	lea	rcx, [r15 + 1]
0x8151:	cmp	r13, rcx
0x8154:	jbe	0x815c


0x8148:	mov	byte ptr [r14 + r15], 0x27
0x814d:	lea	rcx, [r15 + 1]
0x8151:	cmp	r13, rcx
0x8154:	jbe	0x815c


0x8789:	mov	eax, r12d
0x878c:	mov	ebx, 0x30
0x8791:	xor	r12d, r12d
0x8794:	jmp	0x7d99


0x8189:	lea	rax, [rbp + 1]
0x818d:	cmp	rax, r11
0x8190:	jae	0x81ab


0x815c:	lea	rcx, [r15 + 2]
0x8160:	cmp	r13, rcx
0x8163:	ja	0x8799


0x8156:	mov	byte ptr [r14 + r15 + 1], 0x24
0x815c:	lea	rcx, [r15 + 2]
0x8160:	cmp	r13, rcx
0x8163:	ja	0x8799


0x8192:	mov	rax, qword ptr [rsp + 0x10]
0x8197:	movzx	eax, byte ptr [rax + rbp + 1]
0x819c:	mov	byte ptr [rsp + 0x28], al
0x81a0:	sub	eax, 0x30
0x81a3:	cmp	al, 9
0x81a5:	jbe	0x89d9


0x81ab:	mov	eax, r12d
0x81ae:	mov	ebx, 0x30
0x81b3:	xor	r12d, r12d
0x81b6:	jmp	0x7d68


0x8169:	lea	rcx, [r15 + 3]
0x816d:	mov	r8d, eax
0x8170:	cmp	r13, rcx
0x8173:	jbe	0x817a


0x8799:	mov	byte ptr [r14 + r15 + 2], 0x27
0x879f:	jmp	0x8169


0x89d9:	cmp	r13, r15
0x89dc:	jbe	0x89e3


0x89e3:	lea	rax, [rcx + 2]
0x89e7:	cmp	r13, rax
0x89ea:	jbe	0x89f2


0x89de:	mov	byte ptr [r14 + r15], 0x30
0x89e3:	lea	rax, [rcx + 2]
0x89e7:	cmp	r13, rax
0x89ea:	jbe	0x89f2


0x89f2:	mov	eax, r12d
0x89f5:	lea	r15, [rcx + 3]
0x89f9:	xor	r12d, r12d
0x89fc:	mov	ebx, 0x30
0x8a01:	jmp	0x7d68


0x89ec:	mov	byte ptr [r14 + rcx + 2], 0x30
0x89f2:	mov	eax, r12d
0x89f5:	lea	r15, [rcx + 3]
0x89f9:	xor	r12d, r12d
0x89fc:	mov	ebx, 0x30
0x8a01:	jmp	0x7d68


0x7e62:	cmp	dword ptr [rsp + 8], 2
0x7e67:	sete	al
0x7e6a:	and	al, byte ptr [rsp + 0xf]
0x7e6e:	jne	0x7fbe


0x8220:	mov	edx, 0xd
0x8225:	xor	r10d, r10d
0x8228:	mov	ebx, 0x72
0x822d:	jmp	0x7e62


0x87a4:	test	ebx, ebx
0x87a6:	jne	0x7bd3


0x87ac:	mov	byte ptr [rsp + 0xd], 1
0x87b1:	test	r13, r13
0x87b4:	jne	0x8d4a


0x87ba:	lea	rax, [rip + 0x5d68]
0x87c1:	mov	qword ptr [rsp + 0x50], 0
0x87ca:	mov	byte ptr [rsp + 0xe], 1
0x87cf:	mov	byte ptr [rsp + 0x7c], 0
0x87d4:	xor	r12d, r12d
0x87d7:	mov	byte ptr [rsp + 0xf], 0
0x87dc:	mov	qword ptr [rsp + 0x18], 1
0x87e5:	mov	qword ptr [rsp + 0x48], rax
0x87ea:	mov	r15d, 1
0x87f0:	mov	dword ptr [rsp + 8], 2
0x87f8:	jmp	0x7c13


0x8d4a:	mov	byte ptr [rsp + 0xe], 1
0x8d4f:	xor	eax, eax
0x8d51:	xor	r12d, r12d
0x8d54:	mov	qword ptr [rsp + 0x50], 0
0x8d5d:	jmp	0x8304


0x8304:	lea	rbx, [rip + 0x621e]
0x830b:	mov	byte ptr [r14], 0x27
0x830f:	mov	dword ptr [rsp + 8], 2
0x8317:	mov	r15d, 1
0x831d:	mov	qword ptr [rsp + 0x18], 1
0x8326:	mov	byte ptr [rsp + 0xf], 0
0x832b:	mov	qword ptr [rsp + 0x48], rbx
0x8330:	mov	byte ptr [rsp + 0x7c], al
0x8334:	jmp	0x7c13


0x8808:	test	r13, r13
0x880b:	je	0x8a36


0x8bfd:	lea	rax, [rip + 0x4eaf]
0x8c04:	mov	byte ptr [rsp + 0xe], 1
0x8c09:	mov	byte ptr [rsp + 0x7c], 0
0x8c0e:	xor	r12d, r12d
0x8c11:	mov	qword ptr [rsp + 0x50], 0
0x8c1a:	mov	byte ptr [rsp + 0xf], 1
0x8c1f:	mov	byte ptr [rsp + 0xd], 1
0x8c24:	mov	qword ptr [rsp + 0x18], 1
0x8c2d:	xor	r15d, r15d
0x8c30:	mov	qword ptr [rsp + 0x48], rax
0x8c35:	jmp	0x7c13


0x8a36:	mov	qword ptr [rsp + 0x50], 0
0x8a3f:	mov	byte ptr [rsp + 0xe], 1
0x8a44:	xor	r12d, r12d
0x8a47:	mov	byte ptr [rsp + 0x7c], 0
0x8a4c:	jmp	0x882b


0x8811:	mov	byte ptr [r14], 0x22
0x8815:	mov	byte ptr [rsp + 0xe], 1
0x881a:	xor	r12d, r12d
0x881d:	mov	byte ptr [rsp + 0x7c], 0
0x8822:	mov	qword ptr [rsp + 0x50], 0
0x882b:	lea	rax, [rip + 0x5281]
0x8832:	mov	byte ptr [rsp + 0xf], 0
0x8837:	mov	byte ptr [rsp + 0xd], 1
0x883c:	mov	qword ptr [rsp + 0x18], 1
0x8845:	mov	r15d, 1
0x884b:	mov	qword ptr [rsp + 0x48], rax
0x8850:	jmp	0x7c13


0x882b:	lea	rax, [rip + 0x5281]
0x8832:	mov	byte ptr [rsp + 0xf], 0
0x8837:	mov	byte ptr [rsp + 0xd], 1
0x883c:	mov	qword ptr [rsp + 0x18], 1
0x8845:	mov	r15d, 1
0x884b:	mov	qword ptr [rsp + 0x48], rax
0x8850:	jmp	0x7c13


0x8855:	lea	rax, [rip + 0x5257]
0x885c:	mov	byte ptr [rsp + 0xe], 1
0x8861:	mov	byte ptr [rsp + 0x7c], 0
0x8866:	xor	r12d, r12d
0x8869:	mov	qword ptr [rsp + 0x50], 0
0x8872:	mov	byte ptr [rsp + 0xf], 1
0x8877:	mov	byte ptr [rsp + 0xd], 1
0x887c:	mov	qword ptr [rsp + 0x18], 1
0x8885:	xor	r15d, r15d
0x8888:	mov	qword ptr [rsp + 0x48], rax
0x888d:	mov	dword ptr [rsp + 8], 5
0x8895:	jmp	0x7c13


0x889a:	mov	byte ptr [rsp + 0xe], 1
0x889f:	mov	byte ptr [rsp + 0x7c], 0
0x88a4:	xor	r12d, r12d
0x88a7:	mov	qword ptr [rsp + 0x50], 0
0x88b0:	mov	byte ptr [rsp + 0xf], 0
0x88b5:	xor	r15d, r15d
0x88b8:	mov	byte ptr [rsp + 0xd], 1
0x88bd:	mov	qword ptr [rsp + 0x18], 0
0x88c6:	mov	qword ptr [rsp + 0x48], 0
0x88cf:	jmp	0x7c13


0x88d4:	cmp	dword ptr [rsp + 8], 0xa
0x88d9:	je	0x8931


0x8931:	xor	r15d, r15d
0x8934:	test	ebx, ebx
0x8936:	je	0x8afd


0x88db:	lea	rsi, [rip + 0x51d3]
0x88e2:	xor	edi, edi
0x88e4:	mov	edx, 5
0x88e9:	call	0x1c80


0x8afd:	mov	rdx, qword ptr [rsp + 0x68]
0x8b02:	movzx	eax, byte ptr [rdx]
0x8b05:	test	al, al
0x8b07:	je	0x893c


0x893c:	test	ebx, ebx
0x893e:	mov	rbx, qword ptr [rsp + 0x60]
0x8943:	setne	byte ptr [rsp + 0xf]
0x8948:	xor	r12d, r12d
0x894b:	mov	rdi, rbx
0x894e:	call	0x1ca0


0x8b19:	add	r15, 1
0x8b1d:	movzx	eax, byte ptr [rdx + r15]
0x8b22:	test	al, al
0x8b24:	jne	0x8b10


0x8b15:	mov	byte ptr [r14 + r15], al
0x8b19:	add	r15, 1
0x8b1d:	movzx	eax, byte ptr [rdx + r15]
0x8b22:	test	al, al
0x8b24:	jne	0x8b10


0x8b26:	jmp	0x893c


0x8b10:	cmp	r13, r15
0x8b13:	jbe	0x8b19


0x8953:	mov	qword ptr [rsp + 0x48], rbx
0x8958:	mov	qword ptr [rsp + 0x18], rax
0x895d:	mov	byte ptr [rsp + 0xe], 1
0x8962:	mov	byte ptr [rsp + 0x7c], 0
0x8967:	mov	qword ptr [rsp + 0x50], 0
0x8970:	mov	byte ptr [rsp + 0xd], 1
0x8975:	jmp	0x7c13


0x88ee:	mov	rcx, rax
0x88f1:	mov	qword ptr [rsp + 0x68], rax
0x88f6:	lea	rax, [rip + 0x51b8]
0x88fd:	cmp	rcx, rax
0x8900:	je	0x8c9e


0x8c9e:	mov	esi, dword ptr [rsp + 8]
0x8ca2:	mov	rdi, rcx
0x8ca5:	call	0x7a50


0x8906:	lea	rsi, [rip + 0x5c1c]
0x890d:	xor	edi, edi
0x890f:	mov	edx, 5
0x8914:	call	0x1c80


0x8919:	mov	rcx, rax
0x891c:	mov	qword ptr [rsp + 0x60], rax
0x8921:	lea	rax, [rip + 0x5c01]
0x8928:	cmp	rcx, rax
0x892b:	je	0x8cb4


0x8cb4:	mov	esi, dword ptr [rsp + 8]
0x8cb8:	mov	rdi, rcx
0x8cbb:	call	0x7a50


0x8cc0:	mov	qword ptr [rsp + 0x60], rax
0x8cc5:	jmp	0x8931


0x8caa:	mov	qword ptr [rsp + 0x68], rax
0x8caf:	jmp	0x8906


0x897a:	mov	byte ptr [rsp + 0xe], 1
0x897f:	mov	byte ptr [rsp + 0x7c], 0
0x8984:	xor	r12d, r12d
0x8987:	mov	qword ptr [rsp + 0x50], 0
0x8990:	mov	byte ptr [rsp + 0xf], 0
0x8995:	xor	r15d, r15d
0x8998:	mov	byte ptr [rsp + 0xd], 0
0x899d:	mov	qword ptr [rsp + 0x18], 0
0x89a6:	mov	qword ptr [rsp + 0x48], 0
0x89af:	jmp	0x7c13


0x89b4:	mov	byte ptr [rsp + 0xe], 1
0x89b9:	mov	byte ptr [rsp + 0x7c], 0
0x89be:	xor	r12d, r12d
0x89c1:	mov	qword ptr [rsp + 0x50], 0
0x89ca:	mov	byte ptr [rsp + 0xf], 1
0x89cf:	mov	byte ptr [rsp + 0xd], 1
0x89d4:	jmp	0x7bf3


0x7bf3:	lea	rax, [rip + 0x692f]
0x7bfa:	mov	qword ptr [rsp + 0x18], 1
0x7c03:	xor	r15d, r15d
0x7c06:	mov	dword ptr [rsp + 8], 2
0x7c0e:	mov	qword ptr [rsp + 0x48], rax
0x7c13:	xor	r11d, r11d
0x7c16:	mov	rax, rbp
0x7c19:	mov	r8d, r12d
0x7c1c:	mov	rbp, r11
0x7c1f:	mov	r11, rax
0x7c22:	nop	word ptr [rax + rax]
0x7c28:	cmp	r11, rbp
0x7c2b:	setne	r12b
0x7c2f:	cmp	r11, -1
0x7c33:	jne	0x7c42


0x8ba8:	test	ebx, ebx
0x8baa:	je	0x8d38


0x8d38:	mov	byte ptr [rsp + 0xd], 0
0x8d3d:	jmp	0x87b1


0x8bb0:	lea	rax, [rip + 0x5972]
0x8bb7:	mov	byte ptr [rsp + 0xe], 1
0x8bbc:	mov	byte ptr [rsp + 0x7c], 0
0x8bc1:	xor	r12d, r12d
0x8bc4:	mov	qword ptr [rsp + 0x50], 0
0x8bcd:	mov	byte ptr [rsp + 0xf], 1
0x8bd2:	mov	byte ptr [rsp + 0xd], 0
0x8bd7:	mov	qword ptr [rsp + 0x18], 1
0x8be0:	xor	r15d, r15d
0x8be3:	mov	qword ptr [rsp + 0x48], rax
0x8be8:	jmp	0x7c13


0x87b1:	test	r13, r13
0x87b4:	jne	0x8d4a


0x8d74:	nop	
0x8d76:	nop	word ptr cs:[rax + rax]


0x8f2b:	nop	dword ptr [rax + rax]


0x8f66:	nop	word ptr cs:[rax + rax]


0x8f81:	nop	dword ptr [rax + rax]
0x8f86:	nop	word ptr cs:[rax + rax]


0x8fa1:	nop	dword ptr [rax + rax]
0x8fa6:	nop	word ptr cs:[rax + rax]


0x8fe5:	nop	
0x8fe6:	nop	word ptr cs:[rax + rax]


0x9005:	nop	
0x9006:	nop	word ptr cs:[rax + rax]


0x90b4:	nop	
0x90b6:	nop	word ptr cs:[rax + rax]


0x91a3:	nop	dword ptr [rax]
0x91a6:	nop	word ptr cs:[rax + rax]


0x91ba:	nop	word ptr [rax + rax]


0x9253:	nop	dword ptr [rax]
0x9256:	nop	word ptr cs:[rax + rax]


0x9273:	nop	dword ptr [rax]
0x9276:	nop	word ptr cs:[rax + rax]


0x928c:	nop	dword ptr [rax]


0x92a8:	nop	dword ptr [rax + rax]


0x92c4:	nop	
0x92c6:	nop	word ptr cs:[rax + rax]


0x935e:	nop	


0x93ea:	nop	word ptr [rax + rax]


0x93fc:	nop	dword ptr [rax]


0x940f:	nop	


0x94a8:	nop	dword ptr [rax + rax]


0x94d1:	nop	dword ptr [rax + rax]
0x94d6:	nop	word ptr cs:[rax + rax]


0x94ea:	nop	word ptr [rax + rax]


0x957e:	nop	


0x9611:	nop	dword ptr [rax + rax]
0x9616:	nop	word ptr cs:[rax + rax]


0x962c:	nop	dword ptr [rax]


0x9647:	nop	word ptr [rax + rax]


0x9663:	nop	dword ptr [rax]
0x9666:	nop	word ptr cs:[rax + rax]


0x967c:	nop	dword ptr [rax]


0x9694:	nop	
0x9696:	nop	word ptr cs:[rax + rax]


0x96b3:	nop	dword ptr [rax]
0x96b6:	nop	word ptr cs:[rax + rax]


0x96d8:	nop	dword ptr [rax + rax]


0x96ee:	nop	


0x9b07:	nop	word ptr [rax + rax]


0x9ba8:	nop	dword ptr [rax + rax]


0x9c85:	nop	
0x9c86:	nop	word ptr cs:[rax + rax]


0x9d2a:	nop	word ptr [rax + rax]


0x9d54:	nop	
0x9d56:	nop	word ptr cs:[rax + rax]


0x9d62:	nop	dword ptr [rax]
0x9d66:	nop	word ptr cs:[rax + rax]


0x9da6:	nop	word ptr cs:[rax + rax]


0x9dd4:	nop	
0x9dd6:	nop	word ptr cs:[rax + rax]


0x9e62:	nop	dword ptr [rax]
0x9e66:	nop	word ptr cs:[rax + rax]


0x9eba:	nop	word ptr [rax + rax]


0x9ed7:	nop	word ptr [rax + rax]


0x9f0e:	nop	


0x9f38:	nop	dword ptr [rax + rax]


0x9f53:	nop	word ptr cs:[rax + rax]
0x9f5d:	nop	dword ptr [rax]


0x9f95:	nop	word ptr cs:[rax + rax]
0x9f9f:	nop	


0xa0b1:	nop	dword ptr [rax + rax]
0xa0b6:	nop	word ptr cs:[rax + rax]


0xa0e1:	nop	word ptr cs:[rax + rax]
0xa0eb:	nop	dword ptr [rax + rax]


0xa2a0:	movabs	r8, 0x8000000000000000
0xa2aa:	movsxd	rsi, eax
0xa2ad:	mov	rax, r8
0xa2b0:	cqo	
0xa2b2:	idiv	rsi
0xa2b5:	cmp	rbp, rax
0xa2b8:	mov	r9, rax
0xa2bb:	jl	0xa765


0xa765:	mov	eax, 1
0xa76a:	mov	rbp, r8
0xa76d:	jmp	0xa2f8


0xa2c1:	movabs	r10, 0x7fffffffffffffff
0xa2cb:	mov	rax, r10
0xa2ce:	cqo	
0xa2d0:	idiv	rsi
0xa2d3:	cmp	rbp, rax
0xa2d6:	jg	0xa772


0xa2f8:	or	r12d, eax
0xa2fb:	nop	dword ptr [rax + rax]
0xa300:	movsxd	rax, edi
0xa303:	add	rcx, rax
0xa306:	mov	eax, r12d
0xa309:	or	eax, 2
0xa30c:	mov	qword ptr [rbx], rcx
0xa30f:	cmp	byte ptr [rcx], 0
0xa312:	cmovne	r12d, eax
0xa316:	jmp	0xa176


0xa2dc:	imul	rbp, rsi
0xa2e0:	cmp	r9, rbp
0xa2e3:	jg	0xa765


0xa772:	mov	eax, 1
0xa777:	mov	rbp, r10
0xa77a:	jmp	0xa2f8


0xa2e9:	cmp	rax, rbp
0xa2ec:	jl	0xa772


0xa2f2:	imul	rbp, rsi
0xa2f6:	xor	eax, eax
0xa2f8:	or	r12d, eax
0xa2fb:	nop	dword ptr [rax + rax]
0xa300:	movsxd	rax, edi
0xa303:	add	rcx, rax
0xa306:	mov	eax, r12d
0xa309:	or	eax, 2
0xa30c:	mov	qword ptr [rbx], rcx
0xa30f:	cmp	byte ptr [rcx], 0
0xa312:	cmovne	r12d, eax
0xa316:	jmp	0xa176


0xa660:	mov	r12d, 1
0xa666:	movabs	rbp, 0x8000000000000000
0xa670:	jmp	0xa300


0xa333:	movabs	rax, 0x3fffffffffffffff
0xa33d:	cmp	rbp, rax
0xa340:	jg	0xa720


0xa300:	movsxd	rax, edi
0xa303:	add	rcx, rax
0xa306:	mov	eax, r12d
0xa309:	or	eax, 2
0xa30c:	mov	qword ptr [rbx], rcx
0xa30f:	cmp	byte ptr [rcx], 0
0xa312:	cmovne	r12d, eax
0xa316:	jmp	0xa176


0xa346:	add	rbp, rbp
0xa349:	jmp	0xa300


0xa720:	mov	r12d, 1
0xa726:	movabs	rbp, 0x7fffffffffffffff
0xa730:	jmp	0xa300


0xa363:	movabs	rax, 0x3fffffffffffff
0xa36d:	cmp	rbp, rax
0xa370:	jg	0xa720


0xa376:	shl	rbp, 9
0xa37a:	jmp	0xa300


0xa3cf:	cmp	r10, rbp
0xa3d2:	jle	0xa3b0


0xa3b0:	mov	rax, r9
0xa3b3:	cqo	
0xa3b5:	idiv	rsi
0xa3b8:	cmp	rax, rbp
0xa3bb:	jl	0xa6a8


0xa3d4:	mov	r11d, 1
0xa3da:	movabs	rbp, 0x8000000000000000
0xa3e4:	jmp	0xa3c5


0xa6a8:	mov	r11d, 1
0xa6ae:	movabs	rbp, 0x7fffffffffffffff
0xa6b8:	jmp	0xa3c5


0xa3c1:	imul	rbp, rsi
0xa3c5:	sub	r8d, 1
0xa3c9:	je	0xa4f0


0xa3c5:	sub	r8d, 1
0xa3c9:	je	0xa4f0


0xa4f0:	or	r12d, r11d
0xa4f3:	jmp	0xa300


0xa43f:	cmp	r10, rbp
0xa442:	jle	0xa420


0xa420:	mov	rax, r9
0xa423:	cqo	
0xa425:	idiv	rsi
0xa428:	cmp	rax, rbp
0xa42b:	jl	0xa678


0xa444:	mov	r11d, 1
0xa44a:	movabs	rbp, 0x8000000000000000
0xa454:	jmp	0xa435


0xa678:	mov	r11d, 1
0xa67e:	movabs	rbp, 0x7fffffffffffffff
0xa688:	jmp	0xa435


0xa431:	imul	rbp, rsi
0xa435:	sub	r8d, 1
0xa439:	je	0xa4f0


0xa435:	sub	r8d, 1
0xa439:	je	0xa4f0


0xa47e:	sub	r8, 1
0xa482:	mov	rax, r8
0xa485:	cqo	
0xa487:	idiv	rsi
0xa48a:	cmp	rbp, rax
0xa48d:	jg	0xa720


0xa493:	imul	rbp, rsi
0xa497:	jmp	0xa300


0xa4d1:	mov	rax, r9
0xa4d4:	cqo	
0xa4d6:	idiv	rsi
0xa4d9:	cmp	rax, rbp
0xa4dc:	jl	0xa750


0xa6c0:	mov	r11d, 1
0xa6c6:	movabs	rbp, 0x8000000000000000
0xa6d0:	jmp	0xa4e6


0xa750:	mov	r11d, 1
0xa756:	movabs	rbp, 0x7fffffffffffffff
0xa760:	jmp	0xa4e6


0xa4e2:	imul	rbp, rsi
0xa4e6:	sub	r8d, 1
0xa4ea:	jne	0xa4c8


0xa4e6:	sub	r8d, 1
0xa4ea:	jne	0xa4c8


0xa4c8:	cmp	r10, rbp
0xa4cb:	jg	0xa6c0


0xa54b:	cmp	r10, rbp
0xa54e:	jle	0xa530


0xa530:	mov	rax, r9
0xa533:	cqo	
0xa535:	idiv	rsi
0xa538:	cmp	rax, rbp
0xa53b:	jl	0xa6d8


0xa550:	mov	r11d, 1
0xa556:	movabs	rbp, 0x8000000000000000
0xa560:	jmp	0xa545


0xa6d8:	mov	r11d, 1
0xa6de:	movabs	rbp, 0x7fffffffffffffff
0xa6e8:	jmp	0xa545


0xa541:	imul	rbp, rsi
0xa545:	sub	r8d, 1
0xa549:	je	0xa4f0


0xa545:	sub	r8d, 1
0xa549:	je	0xa4f0


0xa5b7:	cmp	r10, rbp
0xa5ba:	jle	0xa598


0xa598:	mov	rax, r9
0xa59b:	cqo	
0xa59d:	idiv	rsi
0xa5a0:	cmp	rax, rbp
0xa5a3:	jl	0xa6f0


0xa5bc:	mov	r11d, 1
0xa5c2:	movabs	rbp, 0x8000000000000000
0xa5cc:	jmp	0xa5ad


0xa6f0:	mov	r11d, 1
0xa6f6:	movabs	rbp, 0x7fffffffffffffff
0xa700:	jmp	0xa5ad


0xa5a9:	imul	rbp, rsi
0xa5ad:	sub	r8d, 1
0xa5b1:	je	0xa4f0


0xa5ad:	sub	r8d, 1
0xa5b1:	je	0xa4f0


0xa5e3:	movabs	rax, 0x1fffffffffffff
0xa5ed:	cmp	rbp, rax
0xa5f0:	jg	0xa720


0xa5f6:	shl	rbp, 0xa
0xa5fa:	jmp	0xa300


0xa62d:	mov	rax, r9
0xa630:	cqo	
0xa632:	idiv	rsi
0xa635:	cmp	rax, rbp
0xa638:	jl	0xa708


0xa690:	mov	r11d, 1
0xa696:	movabs	rbp, 0x8000000000000000
0xa6a0:	jmp	0xa642


0xa708:	mov	r11d, 1
0xa70e:	movabs	rbp, 0x7fffffffffffffff
0xa718:	jmp	0xa642


0xa63e:	imul	rbp, rsi
0xa642:	sub	r8d, 1
0xa646:	jne	0xa628


0xa642:	sub	r8d, 1
0xa646:	jne	0xa628


0xa648:	jmp	0xa4f0


0xa628:	cmp	r10, rbp
0xa62b:	jg	0xa690


0xa7a3:	nop	word ptr cs:[rax + rax]
0xa7ad:	nop	dword ptr [rax]


0xa960:	movabs	r8, 0x8000000000000000
0xa96a:	movsxd	rsi, eax
0xa96d:	mov	rax, r8
0xa970:	cqo	
0xa972:	idiv	rsi
0xa975:	cmp	rbp, rax
0xa978:	mov	r9, rax
0xa97b:	jl	0xae25


0xae25:	mov	eax, 1
0xae2a:	mov	rbp, r8
0xae2d:	jmp	0xa9b8


0xa981:	movabs	r10, 0x7fffffffffffffff
0xa98b:	mov	rax, r10
0xa98e:	cqo	
0xa990:	idiv	rsi
0xa993:	cmp	rbp, rax
0xa996:	jg	0xae32


0xa9b8:	or	r12d, eax
0xa9bb:	nop	dword ptr [rax + rax]
0xa9c0:	movsxd	rax, edi
0xa9c3:	add	rcx, rax
0xa9c6:	mov	eax, r12d
0xa9c9:	or	eax, 2
0xa9cc:	mov	qword ptr [rbx], rcx
0xa9cf:	cmp	byte ptr [rcx], 0
0xa9d2:	cmovne	r12d, eax
0xa9d6:	jmp	0xa834


0xa99c:	imul	rbp, rsi
0xa9a0:	cmp	r9, rbp
0xa9a3:	jg	0xae25


0xae32:	mov	eax, 1
0xae37:	mov	rbp, r10
0xae3a:	jmp	0xa9b8


0xa9a9:	cmp	rax, rbp
0xa9ac:	jl	0xae32


0xa9b2:	imul	rbp, rsi
0xa9b6:	xor	eax, eax
0xa9b8:	or	r12d, eax
0xa9bb:	nop	dword ptr [rax + rax]
0xa9c0:	movsxd	rax, edi
0xa9c3:	add	rcx, rax
0xa9c6:	mov	eax, r12d
0xa9c9:	or	eax, 2
0xa9cc:	mov	qword ptr [rbx], rcx
0xa9cf:	cmp	byte ptr [rcx], 0
0xa9d2:	cmovne	r12d, eax
0xa9d6:	jmp	0xa834


0xad20:	mov	r12d, 1
0xad26:	movabs	rbp, 0x8000000000000000
0xad30:	jmp	0xa9c0


0xa9f3:	movabs	rax, 0x3fffffffffffffff
0xa9fd:	cmp	rbp, rax
0xaa00:	jg	0xade0


0xa9c0:	movsxd	rax, edi
0xa9c3:	add	rcx, rax
0xa9c6:	mov	eax, r12d
0xa9c9:	or	eax, 2
0xa9cc:	mov	qword ptr [rbx], rcx
0xa9cf:	cmp	byte ptr [rcx], 0
0xa9d2:	cmovne	r12d, eax
0xa9d6:	jmp	0xa834


0xaa06:	add	rbp, rbp
0xaa09:	jmp	0xa9c0


0xade0:	mov	r12d, 1
0xade6:	movabs	rbp, 0x7fffffffffffffff
0xadf0:	jmp	0xa9c0


0xaa23:	movabs	rax, 0x3fffffffffffff
0xaa2d:	cmp	rbp, rax
0xaa30:	jg	0xade0


0xaa36:	shl	rbp, 9
0xaa3a:	jmp	0xa9c0


0xaa8f:	cmp	r10, rbp
0xaa92:	jle	0xaa70


0xaa70:	mov	rax, r9
0xaa73:	cqo	
0xaa75:	idiv	rsi
0xaa78:	cmp	rax, rbp
0xaa7b:	jl	0xad68


0xaa94:	mov	r11d, 1
0xaa9a:	movabs	rbp, 0x8000000000000000
0xaaa4:	jmp	0xaa85


0xad68:	mov	r11d, 1
0xad6e:	movabs	rbp, 0x7fffffffffffffff
0xad78:	jmp	0xaa85


0xaa81:	imul	rbp, rsi
0xaa85:	sub	r8d, 1
0xaa89:	je	0xabb0


0xaa85:	sub	r8d, 1
0xaa89:	je	0xabb0


0xabb0:	or	r12d, r11d
0xabb3:	jmp	0xa9c0


0xaaff:	cmp	r10, rbp
0xab02:	jle	0xaae0


0xaae0:	mov	rax, r9
0xaae3:	cqo	
0xaae5:	idiv	rsi
0xaae8:	cmp	rax, rbp
0xaaeb:	jl	0xad38


0xab04:	mov	r11d, 1
0xab0a:	movabs	rbp, 0x8000000000000000
0xab14:	jmp	0xaaf5


0xad38:	mov	r11d, 1
0xad3e:	movabs	rbp, 0x7fffffffffffffff
0xad48:	jmp	0xaaf5


0xaaf1:	imul	rbp, rsi
0xaaf5:	sub	r8d, 1
0xaaf9:	je	0xabb0


0xaaf5:	sub	r8d, 1
0xaaf9:	je	0xabb0


0xab3e:	sub	r8, 1
0xab42:	mov	rax, r8
0xab45:	cqo	
0xab47:	idiv	rsi
0xab4a:	cmp	rbp, rax
0xab4d:	jg	0xade0


0xab53:	imul	rbp, rsi
0xab57:	jmp	0xa9c0


0xab91:	mov	rax, r9
0xab94:	cqo	
0xab96:	idiv	rsi
0xab99:	cmp	rax, rbp
0xab9c:	jl	0xae10


0xad80:	mov	r11d, 1
0xad86:	movabs	rbp, 0x8000000000000000
0xad90:	jmp	0xaba6


0xae10:	mov	r11d, 1
0xae16:	movabs	rbp, 0x7fffffffffffffff
0xae20:	jmp	0xaba6


0xaba2:	imul	rbp, rsi
0xaba6:	sub	r8d, 1
0xabaa:	jne	0xab88


0xaba6:	sub	r8d, 1
0xabaa:	jne	0xab88


0xab88:	cmp	r10, rbp
0xab8b:	jg	0xad80


0xac0b:	cmp	r10, rbp
0xac0e:	jle	0xabf0


0xabf0:	mov	rax, r9
0xabf3:	cqo	
0xabf5:	idiv	rsi
0xabf8:	cmp	rax, rbp
0xabfb:	jl	0xad98


0xac10:	mov	r11d, 1
0xac16:	movabs	rbp, 0x8000000000000000
0xac20:	jmp	0xac05


0xad98:	mov	r11d, 1
0xad9e:	movabs	rbp, 0x7fffffffffffffff
0xada8:	jmp	0xac05


0xac01:	imul	rbp, rsi
0xac05:	sub	r8d, 1
0xac09:	je	0xabb0


0xac05:	sub	r8d, 1
0xac09:	je	0xabb0


0xac77:	cmp	r10, rbp
0xac7a:	jle	0xac58


0xac58:	mov	rax, r9
0xac5b:	cqo	
0xac5d:	idiv	rsi
0xac60:	cmp	rax, rbp
0xac63:	jl	0xadb0


0xac7c:	mov	r11d, 1
0xac82:	movabs	rbp, 0x8000000000000000
0xac8c:	jmp	0xac6d


0xadb0:	mov	r11d, 1
0xadb6:	movabs	rbp, 0x7fffffffffffffff
0xadc0:	jmp	0xac6d


0xac69:	imul	rbp, rsi
0xac6d:	sub	r8d, 1
0xac71:	je	0xabb0


0xac6d:	sub	r8d, 1
0xac71:	je	0xabb0


0xaca3:	movabs	rax, 0x1fffffffffffff
0xacad:	cmp	rbp, rax
0xacb0:	jg	0xade0


0xacb6:	shl	rbp, 0xa
0xacba:	jmp	0xa9c0


0xaced:	mov	rax, r9
0xacf0:	cqo	
0xacf2:	idiv	rsi
0xacf5:	cmp	rax, rbp
0xacf8:	jl	0xadc8


0xad50:	mov	r11d, 1
0xad56:	movabs	rbp, 0x8000000000000000
0xad60:	jmp	0xad02


0xadc8:	mov	r11d, 1
0xadce:	movabs	rbp, 0x7fffffffffffffff
0xadd8:	jmp	0xad02


0xacfe:	imul	rbp, rsi
0xad02:	sub	r8d, 1
0xad06:	jne	0xace8


0xad02:	sub	r8d, 1
0xad06:	jne	0xace8


0xad08:	jmp	0xabb0


0xace8:	cmp	r10, rbp
0xaceb:	jg	0xad50


0xae63:	nop	word ptr cs:[rax + rax]
0xae6d:	nop	dword ptr [rax]


0xaf1c:	nop	dword ptr [rax]


0xb0f8:	mov	rax, rbx
0xb0fb:	mul	rsi
0xb0fe:	jo	0xb2f1


0xb2f1:	or	rax, 0xffffffffffffffff
0xb2f5:	mov	r8d, 1
0xb2fb:	jmp	0xb107


0xb104:	xor	r8d, r8d
0xb107:	mul	rsi
0xb10a:	jo	0xb2e2


0xb107:	mul	rsi
0xb10a:	jo	0xb2e2


0xb2e2:	mov	r8d, 1
0xb2e8:	or	rbx, 0xffffffffffffffff
0xb2ec:	jmp	0xb113


0xb110:	mov	rbx, rax
0xb113:	or	ebp, r8d
0xb116:	nop	word ptr cs:[rax + rax]
0xb120:	movsxd	rdi, edi
0xb123:	mov	eax, ebp
0xb125:	add	rcx, rdi
0xb128:	or	eax, 2
0xb12b:	mov	qword ptr [r15], rcx
0xb12e:	cmp	byte ptr [rcx], 0
0xb131:	mov	qword ptr [r14], rbx
0xb134:	cmovne	ebp, eax
0xb137:	jmp	0xaffd


0xb113:	or	ebp, r8d
0xb116:	nop	word ptr cs:[rax + rax]
0xb120:	movsxd	rdi, edi
0xb123:	mov	eax, ebp
0xb125:	add	rcx, rdi
0xb128:	or	eax, 2
0xb12b:	mov	qword ptr [r15], rcx
0xb12e:	cmp	byte ptr [rcx], 0
0xb131:	mov	qword ptr [r14], rbx
0xb134:	cmovne	ebp, eax
0xb137:	jmp	0xaffd


0xb147:	mov	edx, 2
0xb14c:	mov	rax, rdx
0xb14f:	mul	rbx
0xb152:	jo	0xb1ee


0xb1ee:	mov	ebp, 1
0xb1f3:	or	rbx, 0xffffffffffffffff
0xb1f7:	jmp	0xb120


0xb158:	add	rbx, rbx
0xb15b:	jmp	0xb120


0xb120:	movsxd	rdi, edi
0xb123:	mov	eax, ebp
0xb125:	add	rcx, rdi
0xb128:	or	eax, 2
0xb12b:	mov	qword ptr [r15], rcx
0xb12e:	cmp	byte ptr [rcx], 0
0xb131:	mov	qword ptr [r14], rbx
0xb134:	cmovne	ebp, eax
0xb137:	jmp	0xaffd


0xb15d:	mov	edx, 0x200
0xb162:	mov	rax, rdx
0xb165:	mul	rbx
0xb168:	jo	0xb1ee


0xb16e:	shl	rbx, 9
0xb172:	jmp	0xb120


0xb174:	mov	r8d, 7
0xb17a:	xor	r9d, r9d
0xb17d:	nop	dword ptr [rax]
0xb180:	mov	rax, rbx
0xb183:	mul	rsi
0xb186:	mov	rbx, rax
0xb189:	jo	0xb31e


0xb31e:	mov	r9d, 1
0xb324:	or	rbx, 0xffffffffffffffff
0xb328:	jmp	0xb18f


0xb18f:	sub	r8d, 1
0xb193:	jne	0xb180


0xb195:	or	ebp, r9d
0xb198:	jmp	0xb120


0xb180:	mov	rax, rbx
0xb183:	mul	rsi
0xb186:	mov	rbx, rax
0xb189:	jo	0xb31e


0xb19a:	mov	r8d, 8
0xb1a0:	xor	r9d, r9d
0xb1a3:	nop	dword ptr [rax + rax]
0xb1a8:	mov	rax, rbx
0xb1ab:	mul	rsi
0xb1ae:	mov	rbx, rax
0xb1b1:	jo	0xb300


0xb300:	mov	r9d, 1
0xb306:	or	rbx, 0xffffffffffffffff
0xb30a:	jmp	0xb1b7


0xb1b7:	sub	r8d, 1
0xb1bb:	jne	0xb1a8


0xb1bd:	jmp	0xb195


0xb1a8:	mov	rax, rbx
0xb1ab:	mul	rsi
0xb1ae:	mov	rbx, rax
0xb1b1:	jo	0xb300


0xb1bf:	mov	r8d, 4
0xb1c5:	xor	r9d, r9d
0xb1c8:	mov	rax, rbx
0xb1cb:	mul	rsi
0xb1ce:	mov	rbx, rax
0xb1d1:	jo	0xb2d3


0xb2d3:	mov	r9d, 1
0xb2d9:	or	rbx, 0xffffffffffffffff
0xb2dd:	jmp	0xb1d7


0xb1d7:	sub	r8d, 1
0xb1db:	jne	0xb1c8


0xb1dd:	jmp	0xb195


0xb1c8:	mov	rax, rbx
0xb1cb:	mul	rsi
0xb1ce:	mov	rbx, rax
0xb1d1:	jo	0xb2d3


0xb1df:	mov	rax, rbx
0xb1e2:	mul	rsi
0xb1e5:	mov	rbx, rax
0xb1e8:	jno	0xb120


0xb30f:	mov	r9d, 1
0xb315:	or	rbx, 0xffffffffffffffff
0xb319:	jmp	0xb218


0xb218:	sub	r8d, 1
0xb21c:	jne	0xb209


0xb21e:	jmp	0xb195


0xb209:	mov	rax, rbx
0xb20c:	mul	rsi
0xb20f:	mov	rbx, rax
0xb212:	jo	0xb30f


0xb223:	mov	r8d, 6
0xb229:	xor	r9d, r9d
0xb22c:	mov	rax, rbx
0xb22f:	mul	rsi
0xb232:	mov	rbx, rax
0xb235:	jo	0xb2c4


0xb2c4:	mov	r9d, 1
0xb2ca:	or	rbx, 0xffffffffffffffff
0xb2ce:	jmp	0xb23b


0xb23b:	sub	r8d, 1
0xb23f:	jne	0xb22c


0xb241:	jmp	0xb195


0xb22c:	mov	rax, rbx
0xb22f:	mul	rsi
0xb232:	mov	rbx, rax
0xb235:	jo	0xb2c4


0xb246:	mov	edx, 0x400
0xb24b:	mov	rax, rdx
0xb24e:	mul	rbx
0xb251:	jo	0xb1ee


0xb253:	shl	rbx, 0xa
0xb257:	jmp	0xb120


0xb25c:	mov	rax, rbx
0xb25f:	mul	rsi
0xb262:	jo	0xb32d


0xb32d:	mov	r8d, 1
0xb333:	or	rax, 0xffffffffffffffff
0xb337:	jmp	0xb26b


0xb268:	xor	r8d, r8d
0xb26b:	mul	rsi
0xb26e:	jno	0xb107


0xb26b:	mul	rsi
0xb26e:	jno	0xb107


0xb274:	mov	r8d, 1
0xb27a:	or	rax, 0xffffffffffffffff
0xb27e:	jmp	0xb107


0xb33c:	nop	dword ptr [rax]


0xb3bb:	nop	dword ptr [rax + rax]


0xb63e:	nop	


0xb6d7:	nop	word ptr [rax + rax]


0xb763:	nop	word ptr cs:[rax + rax]
0xb76d:	nop	dword ptr [rax]


0xb79c:	nop	dword ptr [rax]


0xb7ca:	nop	word ptr [rax + rax]


0xb82d:	nop	dword ptr [rax]


0xb8bf:	nop	


0xb9f6:	nop	word ptr cs:[rax + rax]


0xbadf:	nop	


0xbaec:	nop	dword ptr [rax]


0xbb93:	nop	dword ptr [rax]
0xbb96:	nop	word ptr cs:[rax + rax]


0xbce1:	nop	word ptr cs:[rax + rax]
0xbceb:	nop	dword ptr [rax + rax]


0xbd6d:	nop	dword ptr [rax]


0xbdac:	nop	dword ptr [rax]


0xbe15:	nop	
0xbe16:	nop	word ptr cs:[rax + rax]


0xbe22:	nop	word ptr cs:[rax + rax]
0xbe2c:	nop	dword ptr [rax]


0x6258:	cmp	r11d, 0x4f
0x625c:	je	0x60f0


0x69a0:	cmp	r11d, 0x4f
0x69a4:	mov	eax, dword ptr [r13 + 0x10]
0x69a8:	mov	edi, 1
0x69ad:	je	0x642c


0x7e00:	xor	r10d, r10d
0x7e03:	mov	eax, dword ptr [rsp + 8]
0x7e07:	cmp	eax, 2
0x7e0a:	je	0x83c8


0x7e30:	xor	r10d, r10d
0x7e33:	cmp	dword ptr [rsp + 8], 2
0x7e38:	je	0x8340


0x7e58:	mov	edx, 9
0x7e5d:	mov	ebx, 0x74
0x7e62:	cmp	dword ptr [rsp + 8], 2
0x7e67:	sete	al
0x7e6a:	and	al, byte ptr [rsp + 0xf]
0x7e6e:	jne	0x7fbe


0x7e98:	mov	edx, 8
0x7e9d:	mov	ebx, 0x62
0x7ea2:	jmp	0x7e74


0x7ea8:	cmp	dword ptr [rsp + 8], 2
0x7ead:	je	0x8280


0x7f50:	cmp	byte ptr [rsp + 0xd], 0
0x7f55:	jne	0x8123


0x7f78:	cmp	dword ptr [rsp + 8], 2
0x7f7d:	sete	dl
0x7f80:	xor	eax, eax
0x7f82:	jmp	0x7d68


0x7f90:	mov	edx, 7
0x7f95:	mov	ebx, 0x61
0x7f9a:	jmp	0x7e74


0x7fa0:	cmp	dword ptr [rsp + 8], 2
0x7fa5:	sete	dl
0x7fa8:	test	rbp, rbp
0x7fab:	jne	0x7d5c


0x7fd0:	cmp	dword ptr [rsp + 8], 2
0x7fd5:	sete	dl
0x7fd8:	xor	r12d, r12d
0x7fdb:	jmp	0x7fb1


0x7fe0:	cmp	dword ptr [rsp + 8], 2
0x7fe5:	mov	ebx, 0x20
0x7fea:	sete	dl
0x7fed:	jmp	0x7fb1


0x7ff0:	mov	edx, 0xd
0x7ff5:	mov	ebx, 0x72
0x7ffa:	jmp	0x7e62


0x8000:	mov	edx, 0xc
0x8005:	mov	ebx, 0x66
0x800a:	jmp	0x7e74


0x8010:	mov	edx, 0xb
0x8015:	mov	ebx, 0x76
0x801a:	jmp	0x7e74


0x8020:	mov	edx, 0xa
0x8025:	mov	ebx, 0x6e
0x802a:	jmp	0x7e62


0x80c0:	xor	r10d, r10d
0x80c3:	cmp	byte ptr [rsp + 0xd], 0
0x80c8:	jne	0x7ebe


0x80e0:	mov	edx, 0xc
0x80e5:	xor	r10d, r10d
0x80e8:	mov	ebx, 0x66
0x80ed:	jmp	0x7e74


0x80f8:	mov	edx, 0xa
0x80fd:	xor	r10d, r10d
0x8100:	mov	ebx, 0x6e
0x8105:	jmp	0x7e62


0x8110:	mov	ebx, 0x61
0x8115:	jmp	0x7ee0


0x8120:	xor	r10d, r10d
0x8123:	cmp	dword ptr [rsp + 8], 2
0x8128:	sete	dl
0x812b:	cmp	byte ptr [rsp + 0xf], 0
0x8130:	jne	0x8cca


0x81c0:	cmp	dword ptr [rsp + 8], 2
0x81c5:	mov	r12d, r10d
0x81c8:	sete	dl
0x81cb:	xor	r10d, r10d
0x81ce:	xor	eax, eax
0x81d0:	jmp	0x7d68


0x81d8:	cmp	dword ptr [rsp + 8], 2
0x81dd:	sete	dl
0x81e0:	xor	r10d, r10d
0x81e3:	jmp	0x7fa8


0x81f0:	cmp	dword ptr [rsp + 8], 2
0x81f5:	sete	dl
0x81f8:	xor	r10d, r10d
0x81fb:	xor	r12d, r12d
0x81fe:	jmp	0x7fb1


0x8208:	cmp	dword ptr [rsp + 8], 2
0x820d:	mov	r12d, r10d
0x8210:	mov	ebx, 0x20
0x8215:	sete	dl
0x8218:	xor	r10d, r10d
0x821b:	jmp	0x7fb1


0x8238:	mov	ebx, 0x76
0x823d:	jmp	0x7ee0


0x8248:	mov	edx, 9
0x824d:	xor	r10d, r10d
0x8250:	mov	ebx, 0x74
0x8255:	jmp	0x7e62


0x8260:	mov	ebx, 0x62
0x8265:	jmp	0x7ee0


0x8800:	test	ebx, ebx
0x8802:	jne	0x8bfd


0xa320:	movabs	rax, 0xc000000000000000
0xa32a:	cmp	rbp, rax
0xa32d:	jl	0xa660


0xa350:	movabs	rax, 0xffc0000000000000
0xa35a:	cmp	rbp, rax
0xa35d:	jl	0xa660


0xa380:	movsxd	rsi, eax
0xa383:	movabs	rax, 0x8000000000000000
0xa38d:	mov	r8d, 7
0xa393:	cqo	
0xa395:	xor	r11d, r11d
0xa398:	movabs	r9, 0x7fffffffffffffff
0xa3a2:	idiv	rsi
0xa3a5:	mov	r10, rax
0xa3a8:	jmp	0xa3cf


0xa3f0:	movsxd	rsi, eax
0xa3f3:	movabs	rax, 0x8000000000000000
0xa3fd:	mov	r8d, 8
0xa403:	cqo	
0xa405:	xor	r11d, r11d
0xa408:	movabs	r9, 0x7fffffffffffffff
0xa412:	idiv	rsi
0xa415:	mov	r10, rax
0xa418:	jmp	0xa43f


0xa460:	movabs	r8, 0x8000000000000000
0xa46a:	movsxd	rsi, eax
0xa46d:	mov	rax, r8
0xa470:	cqo	
0xa472:	idiv	rsi
0xa475:	cmp	rbp, rax
0xa478:	jl	0xa660


0xa4a0:	movsxd	rsi, eax
0xa4a3:	movabs	rax, 0x8000000000000000
0xa4ad:	mov	r8d, 3
0xa4b3:	cqo	
0xa4b5:	xor	r11d, r11d
0xa4b8:	movabs	r9, 0x7fffffffffffffff
0xa4c2:	idiv	rsi
0xa4c5:	mov	r10, rax
0xa4c8:	cmp	r10, rbp
0xa4cb:	jg	0xa6c0


0xa500:	movsxd	rsi, eax
0xa503:	movabs	rax, 0x8000000000000000
0xa50d:	mov	r8d, 6
0xa513:	cqo	
0xa515:	xor	r11d, r11d
0xa518:	movabs	r9, 0x7fffffffffffffff
0xa522:	idiv	rsi
0xa525:	mov	r10, rax
0xa528:	jmp	0xa54b


0xa568:	movsxd	rsi, eax
0xa56b:	movabs	rax, 0x8000000000000000
0xa575:	mov	r8d, 5
0xa57b:	cqo	
0xa57d:	xor	r11d, r11d
0xa580:	movabs	r9, 0x7fffffffffffffff
0xa58a:	idiv	rsi
0xa58d:	mov	r10, rax
0xa590:	jmp	0xa5b7


0xa5d0:	movabs	rax, 0xffe0000000000000
0xa5da:	cmp	rbp, rax
0xa5dd:	jl	0xa660


0xa600:	movsxd	rsi, eax
0xa603:	movabs	rax, 0x8000000000000000
0xa60d:	mov	r8d, 4
0xa613:	cqo	
0xa615:	xor	r11d, r11d
0xa618:	movabs	r9, 0x7fffffffffffffff
0xa622:	idiv	rsi
0xa625:	mov	r10, rax
0xa628:	cmp	r10, rbp
0xa62b:	jg	0xa690


0xa9e0:	movabs	rax, 0xc000000000000000
0xa9ea:	cmp	rbp, rax
0xa9ed:	jl	0xad20


0xaa10:	movabs	rax, 0xffc0000000000000
0xaa1a:	cmp	rbp, rax
0xaa1d:	jl	0xad20


0xaa40:	movsxd	rsi, eax
0xaa43:	movabs	rax, 0x8000000000000000
0xaa4d:	mov	r8d, 7
0xaa53:	cqo	
0xaa55:	xor	r11d, r11d
0xaa58:	movabs	r9, 0x7fffffffffffffff
0xaa62:	idiv	rsi
0xaa65:	mov	r10, rax
0xaa68:	jmp	0xaa8f


0xaab0:	movsxd	rsi, eax
0xaab3:	movabs	rax, 0x8000000000000000
0xaabd:	mov	r8d, 8
0xaac3:	cqo	
0xaac5:	xor	r11d, r11d
0xaac8:	movabs	r9, 0x7fffffffffffffff
0xaad2:	idiv	rsi
0xaad5:	mov	r10, rax
0xaad8:	jmp	0xaaff


0xab20:	movabs	r8, 0x8000000000000000
0xab2a:	movsxd	rsi, eax
0xab2d:	mov	rax, r8
0xab30:	cqo	
0xab32:	idiv	rsi
0xab35:	cmp	rbp, rax
0xab38:	jl	0xad20


0xab60:	movsxd	rsi, eax
0xab63:	movabs	rax, 0x8000000000000000
0xab6d:	mov	r8d, 3
0xab73:	cqo	
0xab75:	xor	r11d, r11d
0xab78:	movabs	r9, 0x7fffffffffffffff
0xab82:	idiv	rsi
0xab85:	mov	r10, rax
0xab88:	cmp	r10, rbp
0xab8b:	jg	0xad80


0xabc0:	movsxd	rsi, eax
0xabc3:	movabs	rax, 0x8000000000000000
0xabcd:	mov	r8d, 6
0xabd3:	cqo	
0xabd5:	xor	r11d, r11d
0xabd8:	movabs	r9, 0x7fffffffffffffff
0xabe2:	idiv	rsi
0xabe5:	mov	r10, rax
0xabe8:	jmp	0xac0b


0xac28:	movsxd	rsi, eax
0xac2b:	movabs	rax, 0x8000000000000000
0xac35:	mov	r8d, 5
0xac3b:	cqo	
0xac3d:	xor	r11d, r11d
0xac40:	movabs	r9, 0x7fffffffffffffff
0xac4a:	idiv	rsi
0xac4d:	mov	r10, rax
0xac50:	jmp	0xac77


0xac90:	movabs	rax, 0xffe0000000000000
0xac9a:	cmp	rbp, rax
0xac9d:	jl	0xad20


0xacc0:	movsxd	rsi, eax
0xacc3:	movabs	rax, 0x8000000000000000
0xaccd:	mov	r8d, 4
0xacd3:	cqo	
0xacd5:	xor	r11d, r11d
0xacd8:	movabs	r9, 0x7fffffffffffffff
0xace2:	idiv	rsi
0xace5:	mov	r10, rax
0xace8:	cmp	r10, rbp
0xaceb:	jg	0xad50


0xb200:	mov	r8d, 5
0xb206:	xor	r9d, r9d
0xb209:	mov	rax, rbx
0xb20c:	mul	rsi
0xb20f:	mov	rbx, rax
0xb212:	jo	0xb30f


0x20df:	nop	


0x20f9:	nop	dword ptr [rax]


0x2966:	nop	word ptr cs:[rax + rax]


0x29b7:	nop	word ptr [rax + rax]


0x2a01:	nop	dword ptr [rax]


0x2c13:	nop	dword ptr [rax + rax]


0x2c51:	nop	dword ptr [rax]


0x2c77:	nop	word ptr [rax + rax]


0x2e95:	nop	dword ptr [rax]


0x2ebd:	nop	dword ptr [rax]


0x2ef8:	nop	dword ptr [rax + rax]


0x2f9e:	nop	


0x2faf:	nop	


0x2fde:	nop	


0x3066:	nop	word ptr cs:[rax + rax]


0x3079:	nop	dword ptr [rax]


0x315b:	nop	dword ptr [rax + rax]


0x316e:	nop	


0x3177:	nop	word ptr [rax + rax]


0x3189:	nop	dword ptr [rax]


0x335d:	nop	dword ptr [rax]


0x3389:	nop	dword ptr [rax]


0x33b5:	nop	dword ptr [rax]


0x33fb:	nop	dword ptr [rax + rax]


0x3418:	nop	dword ptr [rax + rax]


0x3431:	nop	dword ptr [rax]


0x3489:	nop	dword ptr [rax]


0x34ab:	nop	dword ptr [rax + rax]


0x34cf:	nop	


0x3542:	nop	word ptr [rax + rax]


0x3551:	nop	dword ptr [rax]


0x356e:	nop	


0x360b:	nop	dword ptr [rax + rax]


0x3669:	nop	dword ptr [rax]


0x36c4:	nop	dword ptr [rax]


0x36d2:	nop	word ptr [rax + rax]


0x36e2:	nop	word ptr [rax + rax]


0x36fe:	nop	


0x3753:	nop	dword ptr [rax + rax]


0x3788:	nop	dword ptr [rax + rax]


0x387a:	nop	word ptr [rax + rax]


0x389e:	nop	


0x38e8:	nop	dword ptr [rax + rax]


0x38fa:	nop	word ptr [rax + rax]


0x3907:	nop	word ptr [rax + rax]


0x399e:	nop	


0x39b7:	nop	word ptr [rax + rax]


0x3ad5:	nop	dword ptr [rax]


0x3ae2:	nop	word ptr [rax + rax]


0x3aef:	nop	


0x3b2e:	nop	


0x3b48:	nop	dword ptr [rax + rax]


0x3bcc:	nop	dword ptr [rax]


0x3be8:	nop	dword ptr [rax + rax]


0x3c0a:	nop	word ptr [rax + rax]


0x3c1d:	nop	dword ptr [rax]


0x3c2a:	nop	word ptr [rax + rax]


0x3c8e:	nop	


0x3cc8:	nop	dword ptr [rax + rax]


0x3d0d:	nop	dword ptr [rax]


0x3d24:	nop	dword ptr [rax]


0x3e73:	nop	dword ptr [rax + rax]


0x3e9c:	nop	dword ptr [rax]


0x3eb8:	nop	dword ptr [rax + rax]


0x3f9a:	nop	word ptr [rax + rax]


0x3fef:	nop	


0x405c:	nop	dword ptr [rax]


0x4076:	nop	word ptr cs:[rax + rax]


0x409a:	nop	word ptr [rax + rax]


0x40b6:	nop	word ptr cs:[rax + rax]


0x40ca:	nop	word ptr [rax + rax]


0x4102:	nop	word ptr [rax + rax]


0x4116:	nop	word ptr cs:[rax + rax]


0x412c:	nop	dword ptr [rax]


0x413a:	nop	word ptr [rax + rax]


0x415f:	nop	


0x4171:	nop	dword ptr [rax]


0x4187:	nop	word ptr [rax + rax]


0x419a:	nop	word ptr [rax + rax]


0x41ac:	nop	dword ptr [rax]


0x425d:	nop	dword ptr [rax]


0x429b:	nop	dword ptr [rax + rax]


0x45c6:	nop	word ptr cs:[rax + rax]


0x473a:	nop	word ptr [rax + rax]


0x47af:	nop	


0x4851:	nop	dword ptr [rax]


0x48bf:	nop	


0x491c:	nop	dword ptr [rax]


0x494f:	nop	


0x4b98:	nop	dword ptr [rax + rax]


0x4c5b:	nop	dword ptr [rax + rax]


0x4c6d:	nop	dword ptr [rax]


0x4c7c:	nop	dword ptr [rax]


0x4cad:	nop	dword ptr [rax]


0x4cc2:	nop	word ptr [rax + rax]


0x4cda:	nop	word ptr [rax + rax]


0x4cef:	nop	


0x4cfd:	nop	dword ptr [rax]


0x4e3c:	nop	dword ptr [rax]


0x4ea4:	nop	dword ptr [rax]


0x4eb3:	nop	dword ptr [rax + rax]


0x4f0d:	nop	dword ptr [rax]


0x5869:	nop	dword ptr [rax]


0x59fb:	nop	dword ptr [rax + rax]


0x5a39:	nop	dword ptr [rax]


0x5a85:	nop	dword ptr [rax]


0x5b4a:	nop	word ptr [rax + rax]


0x5b97:	nop	word ptr [rax + rax]


0x5bca:	nop	word ptr [rax + rax]


0x5c5f:	nop	


0x5c9b:	nop	dword ptr [rax + rax]


0x5d21:	nop	dword ptr [rax]


0x5d33:	nop	dword ptr [rax + rax]


0x5d5e:	nop	


0x5d72:	nop	word ptr [rax + rax]


0x5dbb:	nop	dword ptr [rax + rax]


0x5e18:	nop	dword ptr [rax + rax]


0x5e68:	nop	dword ptr [rax + rax]


0x5f9b:	nop	dword ptr [rax + rax]


0x600a:	nop	word ptr [rax + rax]


0x6021:	nop	dword ptr [rax]


0x60b1:	nop	dword ptr [rax]


0x60c9:	nop	dword ptr [rax]


0x60d8:	nop	dword ptr [rax + rax]


0x61cd:	nop	dword ptr [rax]


0x61da:	nop	word ptr [rax + rax]


0x6217:	nop	word ptr [rax + rax]


0x6251:	nop	dword ptr [rax]


0x6999:	nop	dword ptr [rax]


0x729c:	nop	dword ptr [rax]


0x72b1:	nop	dword ptr [rax]


0x737c:	nop	dword ptr [rax]


0x7394:	nop	dword ptr [rax]


0x7a8c:	nop	dword ptr [rax]


0x7add:	nop	dword ptr [rax]


0x7d08:	nop	dword ptr [rax + rax]


0x7df7:	nop	word ptr [rax + rax]


0x7e2e:	nop	


0x7e51:	nop	dword ptr [rax]


0x7e92:	nop	word ptr [rax + rax]


0x7ea4:	nop	dword ptr [rax]


0x7f48:	nop	dword ptr [rax + rax]


0x7f71:	nop	dword ptr [rax]


0x7f87:	nop	word ptr [rax + rax]


0x7f9f:	nop	


0x7fce:	nop	


0x7fdd:	nop	dword ptr [rax]


0x7fef:	nop	


0x7fff:	nop	


0x800f:	nop	


0x801f:	nop	


0x802f:	nop	


0x809c:	nop	dword ptr [rax]


0x80bc:	nop	dword ptr [rax]


0x80ce:	nop	


0x80df:	nop	


0x80f2:	nop	word ptr [rax + rax]


0x810a:	nop	word ptr [rax + rax]


0x811a:	nop	word ptr [rax + rax]


0x81bb:	nop	dword ptr [rax + rax]


0x81d5:	nop	dword ptr [rax]


0x81e8:	nop	dword ptr [rax + rax]


0x8203:	nop	dword ptr [rax + rax]


0x8232:	nop	word ptr [rax + rax]


0x8242:	nop	word ptr [rax + rax]


0x825a:	nop	word ptr [rax + rax]


0x826a:	nop	word ptr [rax + rax]


0x8278:	nop	dword ptr [rax + rax]


0x829f:	nop	


0x8339:	nop	dword ptr [rax]


0x8382:	nop	word ptr [rax + rax]


0x83a8:	nop	dword ptr [rax + rax]


0x83c1:	nop	dword ptr [rax]


0x83e2:	nop	word ptr [rax + rax]


0x8548:	nop	dword ptr [rax + rax]


0x865b:	nop	dword ptr [rax + rax]


0x867e:	nop	


0x8745:	nop	dword ptr [rax]


0x87fd:	nop	dword ptr [rax]


0x8a06:	nop	word ptr cs:[rax + rax]


0x8a99:	nop	dword ptr [rax]


0x8b0d:	nop	dword ptr [rax]


0x8bed:	nop	dword ptr [rax]


0x8efb:	nop	dword ptr [rax + rax]


0x9796:	nop	word ptr cs:[rax + rax]


0x9825:	nop	dword ptr [rax]


0x9846:	nop	word ptr cs:[rax + rax]


0x98a5:	nop	dword ptr [rax]


0x98e1:	nop	dword ptr [rax]


0x9928:	nop	dword ptr [rax + rax]


0x9977:	nop	word ptr [rax + rax]


0x99d4:	nop	dword ptr [rax]


0x9a02:	nop	word ptr [rax + rax]


0x9ab6:	nop	word ptr cs:[rax + rax]


0x9b19:	nop	dword ptr [rax]


0x9d92:	nop	word ptr [rax + rax]


0x9e19:	nop	dword ptr [rax]


0x9e44:	nop	dword ptr [rax]


0x9e9d:	nop	dword ptr [rax]


0xa068:	nop	dword ptr [rax + rax]


0xa08c:	nop	dword ptr [rax]


0xa19f:	nop	


0xa1b3:	nop	dword ptr [rax + rax]


0xa262:	nop	word ptr [rax + rax]


0xa274:	nop	dword ptr [rax]


0xa31b:	nop	dword ptr [rax + rax]


0xa34b:	nop	dword ptr [rax + rax]


0xa37c:	nop	dword ptr [rax]


0xa3aa:	nop	word ptr [rax + rax]


0xa3e6:	nop	word ptr cs:[rax + rax]


0xa41a:	nop	word ptr [rax + rax]


0xa456:	nop	word ptr cs:[rax + rax]


0xa49c:	nop	dword ptr [rax]


0xa4ec:	nop	dword ptr [rax]


0xa4f8:	nop	dword ptr [rax + rax]


0xa52a:	nop	word ptr [rax + rax]


0xa562:	nop	word ptr [rax + rax]


0xa592:	nop	word ptr [rax + rax]


0xa5ce:	nop	


0xa5ff:	nop	


0xa64d:	nop	dword ptr [rax]


0xa65b:	nop	dword ptr [rax + rax]


0xa675:	nop	dword ptr [rax]


0xa68d:	nop	dword ptr [rax]


0xa6a2:	nop	word ptr [rax + rax]


0xa6bd:	nop	dword ptr [rax]


0xa6d5:	nop	dword ptr [rax]


0xa6ed:	nop	dword ptr [rax]


0xa705:	nop	dword ptr [rax]


0xa71d:	nop	dword ptr [rax]


0xa735:	nop	dword ptr [rax]


0xa85d:	nop	dword ptr [rax]


0xa873:	nop	dword ptr [rax + rax]


0xa922:	nop	word ptr [rax + rax]


0xa934:	nop	dword ptr [rax]


0xa9db:	nop	dword ptr [rax + rax]


0xaa0b:	nop	dword ptr [rax + rax]


0xaa3c:	nop	dword ptr [rax]


0xaa6a:	nop	word ptr [rax + rax]


0xaaa6:	nop	word ptr cs:[rax + rax]


0xaada:	nop	word ptr [rax + rax]


0xab16:	nop	word ptr cs:[rax + rax]


0xab5c:	nop	dword ptr [rax]


0xabac:	nop	dword ptr [rax]


0xabb8:	nop	dword ptr [rax + rax]


0xabea:	nop	word ptr [rax + rax]


0xac22:	nop	word ptr [rax + rax]


0xac52:	nop	word ptr [rax + rax]


0xac8e:	nop	


0xacbf:	nop	


0xad0d:	nop	dword ptr [rax]


0xad1b:	nop	dword ptr [rax + rax]


0xad35:	nop	dword ptr [rax]


0xad4d:	nop	dword ptr [rax]


0xad62:	nop	word ptr [rax + rax]


0xad7d:	nop	dword ptr [rax]


0xad95:	nop	dword ptr [rax]


0xadad:	nop	dword ptr [rax]


0xadc5:	nop	dword ptr [rax]


0xaddd:	nop	dword ptr [rax]


0xadf5:	nop	dword ptr [rax]


0xaf86:	nop	word ptr cs:[rax + rax]


0xafe3:	nop	dword ptr [rax + rax]


0xaff2:	nop	word ptr [rax + rax]


0xb022:	nop	word ptr [rax + rax]


0xb02c:	nop	dword ptr [rax]


0xb0cb:	nop	dword ptr [rax + rax]


0xb1fc:	nop	dword ptr [rax]


0xb283:	nop	dword ptr [rax + rax]


0xb385:	nop	dword ptr [rax]


0xb45b:	nop	dword ptr [rax + rax]


0xb486:	nop	word ptr cs:[rax + rax]


0xb4bf:	nop	


0xb509:	nop	dword ptr [rax]


0xb52b:	nop	dword ptr [rax + rax]


0xb5d1:	nop	dword ptr [rax]


0xb663:	nop	dword ptr [rax + rax]


0xb68f:	nop	


0xb789:	nop	dword ptr [rax]


0xb7c2:	nop	word ptr [rax + rax]


0xb81c:	nop	dword ptr [rax]


0xb893:	nop	dword ptr [rax + rax]


0xb8ff:	nop	


0xb959:	nop	dword ptr [rax]


0xb97f:	nop	


0xb9c9:	nop	dword ptr [rax]


0xb9df:	nop	


0xba89:	nop	dword ptr [rax]


0xbab2:	nop	word ptr [rax + rax]


0xbad4:	nop	dword ptr [rax]


0xbb48:	nop	dword ptr [rax + rax]


0xbb6b:	nop	dword ptr [rax + rax]


0xbc3b:	nop	dword ptr [rax + rax]


0xbcb8:	nop	dword ptr [rax + rax]


0xbccd:	nop	dword ptr [rax]


0xbd24:	nop	dword ptr [rax]


0xbd41:	nop	dword ptr [rax]


0xbd52:	nop	word ptr [rax + rax]


0xbd96:	nop	word ptr cs:[rax + rax]


