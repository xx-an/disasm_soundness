0x4a80:	sub	rsp, 8
0x4a84:	add	rsp, 8
0x4a88:	ret	


0x4a70:	mov	rdx, qword ptr [rip + 0x202591]
0x4a77:	xor	esi, esi
0x4a79:	jmp	0x14b0


0x4a60:	ret	


0x49f0:	push	r15
0x49f2:	push	r14
0x49f4:	mov	r15, rdx
0x49f7:	push	r13
0x49f9:	push	r12
0x49fb:	lea	r12, [rip + 0x20218e]
0x4a02:	push	rbp
0x4a03:	lea	rbp, [rip + 0x20218e]
0x4a0a:	push	rbx
0x4a0b:	mov	r13d, edi
0x4a0e:	mov	r14, rsi
0x4a11:	sub	rbp, r12
0x4a14:	sub	rsp, 8
0x4a18:	sar	rbp, 3
0x4a1c:	call	0x1240


0x4990:	mov	rax, qword ptr [rdi + 8]
0x4994:	cmp	qword ptr [rdi + 0x10], rax
0x4998:	je	0x49a0


0x4950:	test	rdi, rdi
0x4953:	push	rbx
0x4954:	mov	rbx, rdi
0x4957:	je	0x496a


0x48d0:	push	r12
0x48d2:	push	rbp
0x48d3:	push	rbx
0x48d4:	mov	rbx, rdi
0x48d7:	call	0x1410


0x4890:	sub	rsp, 8
0x4894:	mov	edi, 0xe
0x4899:	call	0x1440


0x4830:	sub	rsp, 8
0x4834:	xor	esi, esi
0x4836:	call	0x1470


0x47b0:	push	r12
0x47b2:	push	rbp
0x47b3:	mov	rbp, rdi
0x47b6:	push	rbx
0x47b7:	call	0x12c0


0x4720:	push	r13
0x4722:	push	r12
0x4724:	mov	r13, rsi
0x4727:	push	rbp
0x4728:	push	rbx
0x4729:	mov	rbx, rdi
0x472c:	mov	r12, rdx
0x472f:	sub	rsp, 0x18
0x4733:	mov	rax, qword ptr fs:[0x28]
0x473c:	mov	qword ptr [rsp + 8], rax
0x4741:	xor	eax, eax
0x4743:	lea	rax, [rsp + 4]
0x4748:	test	rdi, rdi
0x474b:	cmove	rbx, rax
0x474f:	mov	rdi, rbx
0x4752:	call	0x1370


0x4700:	lea	rax, [rip + 0x202b11]
0x4707:	test	rdx, rdx
0x470a:	cmove	rdx, rax
0x470e:	mov	rcx, rdx
0x4711:	mov	rdx, rsi
0x4714:	mov	rsi, rdi
0x4717:	xor	edi, edi
0x4719:	jmp	0x4720


0x46c0:	lea	rsi, [rip + 0x1148]
0x46c7:	sub	rsp, 8
0x46cb:	mov	edx, 5
0x46d0:	xor	edi, edi
0x46d2:	call	0x1310


0x46a0:	push	rbx
0x46a1:	mov	rbx, rdi
0x46a4:	call	0x1330


0x4670:	push	rbp
0x4671:	push	rbx
0x4672:	mov	rbp, rdi
0x4675:	mov	rdi, rsi
0x4678:	mov	rbx, rsi
0x467b:	sub	rsp, 8
0x467f:	call	0x4470


0x4640:	mov	rax, rdi
0x4643:	sub	rsp, 8
0x4647:	mul	rsi
0x464a:	seto	dl
0x464d:	test	rax, rax
0x4650:	js	0x4669


0x4620:	push	rbx
0x4621:	mov	rbx, rdi
0x4624:	call	0x4470


0x45d0:	test	rdi, rdi
0x45d3:	mov	rax, qword ptr [rsi]
0x45d6:	je	0x4600


0x4540:	test	rdi, rdi
0x4543:	mov	r9, rdx
0x4546:	mov	rcx, qword ptr [rsi]
0x4549:	je	0x4580


0x4510:	mov	rax, rsi
0x4513:	mul	rdx
0x4516:	mov	rsi, rax
0x4519:	seto	al
0x451c:	test	rsi, rsi
0x451f:	js	0x452b


0x44d0:	test	rsi, rsi
0x44d3:	push	rbx
0x44d4:	mov	rbx, rsi
0x44d7:	jne	0x44de


0x44c0:	jmp	0x4470


0x4490:	mov	rax, rdi
0x4493:	mul	rsi
0x4496:	mov	rdi, rax
0x4499:	seto	al
0x449c:	test	rdi, rdi
0x449f:	js	0x44ab


0x4470:	push	rbx
0x4471:	mov	rbx, rdi
0x4474:	call	0x1420


0x43f0:	push	rbx
0x43f1:	lea	rsi, [rip + 0x110a]
0x43f8:	mov	edx, 5
0x43fd:	xor	edi, edi
0x43ff:	call	0x1310


0x4310:	push	rbp
0x4311:	push	rbx
0x4312:	mov	r10d, 0x20
0x4318:	xor	r11d, r11d
0x431b:	sub	rsp, 0xb8
0x4322:	mov	rax, qword ptr fs:[0x28]
0x432b:	mov	qword ptr [rsp + 0x78], rax
0x4330:	xor	eax, eax
0x4332:	lea	rax, [rsp + 0xd0]
0x433a:	mov	qword ptr [rsp + 0xa0], r8
0x4342:	lea	rbx, [rsp + 0xd0]
0x434a:	lea	r8, [rsp + 0x20]
0x434f:	mov	qword ptr [rsp + 0xa8], r9
0x4357:	mov	dword ptr [rsp + 8], 0x20
0x435f:	mov	qword ptr [rsp + 0x10], rax
0x4364:	lea	rax, [rsp + 0x80]
0x436c:	xor	r9d, r9d
0x436f:	mov	qword ptr [rsp + 0x18], rax
0x4374:	mov	rbp, rax
0x4377:	nop	word ptr [rax + rax]
0x4380:	cmp	r10d, 0x2f
0x4384:	ja	0x43dc


0x4290:	sub	rsp, 0x68
0x4294:	mov	r10, r8
0x4297:	xor	r9d, r9d
0x429a:	mov	rax, qword ptr fs:[0x28]
0x42a3:	mov	qword ptr [rsp + 0x58], rax
0x42a8:	xor	eax, eax
0x42aa:	mov	r8, rsp
0x42ad:	nop	dword ptr [rax]
0x42b0:	mov	eax, dword ptr [r10]
0x42b3:	cmp	eax, 0x2f
0x42b6:	ja	0x42fa


0x4270:	xor	r9d, r9d
0x4273:	cmp	qword ptr [r8], 0
0x4277:	je	0x428b


0x3e50:	push	r15
0x3e52:	push	r14
0x3e54:	push	r13
0x3e56:	push	r12
0x3e58:	mov	r12, r9
0x3e5b:	push	rbp
0x3e5c:	push	rbx
0x3e5d:	mov	rbp, rdi
0x3e60:	mov	rbx, r8
0x3e63:	sub	rsp, 0x28
0x3e67:	test	rsi, rsi
0x3e6a:	je	0x3f88


0x3e30:	lea	rcx, [rip + 0x2031e9]
0x3e37:	mov	rsi, rdi
0x3e3a:	mov	rdx, -1
0x3e41:	xor	edi, edi
0x3e43:	jmp	0x34f0


0x3e10:	lea	rcx, [rip + 0x203209]
0x3e17:	mov	rdx, -1
0x3e1e:	jmp	0x34f0


0x3df0:	lea	rcx, [rip + 0x203229]
0x3df7:	mov	rdx, rsi
0x3dfa:	mov	rsi, rdi
0x3dfd:	xor	edi, edi
0x3dff:	jmp	0x34f0


0x3de0:	lea	rcx, [rip + 0x203239]
0x3de7:	jmp	0x34f0


0x3dc0:	mov	r8, rcx
0x3dc3:	mov	rcx, rdx
0x3dc6:	mov	rdx, rsi
0x3dc9:	mov	rsi, rdi
0x3dcc:	xor	edi, edi
0x3dce:	jmp	0x3cf0


0x3da0:	mov	rcx, rdx
0x3da3:	mov	r8, -1
0x3daa:	mov	rdx, rsi
0x3dad:	mov	rsi, rdi
0x3db0:	xor	edi, edi
0x3db2:	jmp	0x3cf0


0x3d90:	mov	r8, -1
0x3d97:	jmp	0x3cf0


0x3cf0:	sub	rsp, 0x48
0x3cf4:	mov	r9, rcx
0x3cf7:	mov	rcx, qword ptr [rip + 0x203512]
0x3cfe:	movdqa	xmm0, xmmword ptr [rip + 0x2034da]
0x3d06:	mov	rax, qword ptr fs:[0x28]
0x3d0f:	mov	qword ptr [rsp + 0x38], rax
0x3d14:	xor	eax, eax
0x3d16:	movaps	xmmword ptr [rsp], xmm0
0x3d1a:	test	rsi, rsi
0x3d1d:	mov	qword ptr [rsp + 0x30], rcx
0x3d22:	mov	dword ptr [rsp], 0xa
0x3d29:	movdqa	xmm0, xmmword ptr [rip + 0x2034bf]
0x3d31:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x3d36:	movdqa	xmm0, xmmword ptr [rip + 0x2034c2]
0x3d3e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x3d43:	je	0x3d77


0x3c60:	sub	rsp, 0x48
0x3c64:	mov	rax, rdx
0x3c67:	mov	rdx, qword ptr fs:[0x28]
0x3c70:	mov	qword ptr [rsp + 0x38], rdx
0x3c75:	xor	edx, edx
0x3c77:	cmp	esi, 0xa
0x3c7a:	je	0x3ce4


0x3c50:	mov	edx, 0x3a
0x3c55:	jmp	0x3b80


0x3c30:	mov	edx, 0x3a
0x3c35:	mov	rsi, -1
0x3c3c:	jmp	0x3b80


0x3c20:	movsx	edx, sil
0x3c24:	mov	rsi, -1
0x3c2b:	jmp	0x3b80


0x3b80:	sub	rsp, 0x48
0x3b84:	mov	ecx, edx
0x3b86:	mov	rax, qword ptr fs:[0x28]
0x3b8f:	mov	qword ptr [rsp + 0x38], rax
0x3b94:	xor	eax, eax
0x3b96:	mov	rax, qword ptr [rip + 0x203673]
0x3b9d:	mov	r8, rsp
0x3ba0:	and	ecx, 0x1f
0x3ba3:	movdqa	xmm0, xmmword ptr [rip + 0x203635]
0x3bab:	mov	qword ptr [rsp + 0x30], rax
0x3bb0:	mov	eax, edx
0x3bb2:	movaps	xmmword ptr [rsp], xmm0
0x3bb6:	shr	al, 5
0x3bb9:	movzx	eax, al
0x3bbc:	lea	r9, [r8 + rax*4 + 8]
0x3bc1:	movdqa	xmm0, xmmword ptr [rip + 0x203627]
0x3bc9:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x3bce:	movdqa	xmm0, xmmword ptr [rip + 0x20362a]
0x3bd6:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x3bdb:	mov	edx, dword ptr [r9]
0x3bde:	mov	eax, edx
0x3be0:	shr	eax, cl
0x3be2:	not	eax
0x3be4:	and	eax, 1
0x3be7:	shl	eax, cl
0x3be9:	mov	rcx, r8
0x3bec:	xor	eax, edx
0x3bee:	mov	rdx, rsi
0x3bf1:	mov	rsi, rdi
0x3bf4:	mov	dword ptr [r9], eax
0x3bf7:	xor	edi, edi
0x3bf9:	call	0x34f0


0x3b70:	mov	rcx, rdx
0x3b73:	mov	rdx, rsi
0x3b76:	mov	esi, edi
0x3b78:	xor	edi, edi
0x3b7a:	jmp	0x3ad0


0x3b60:	mov	rdx, rsi
0x3b63:	mov	esi, edi
0x3b65:	xor	edi, edi
0x3b67:	jmp	0x3a40


0x3ad0:	sub	rsp, 0x48
0x3ad4:	mov	rax, rdx
0x3ad7:	mov	rdx, rcx
0x3ada:	mov	rcx, qword ptr fs:[0x28]
0x3ae3:	mov	qword ptr [rsp + 0x38], rcx
0x3ae8:	xor	ecx, ecx
0x3aea:	cmp	esi, 0xa
0x3aed:	je	0x3b50


0x3a40:	sub	rsp, 0x48
0x3a44:	mov	rax, rdx
0x3a47:	mov	rdx, qword ptr fs:[0x28]
0x3a50:	mov	qword ptr [rsp + 0x38], rdx
0x3a55:	xor	edx, edx
0x3a57:	cmp	esi, 0xa
0x3a5a:	je	0x3ac4


0x3a20:	lea	rcx, [rip + 0x2037b9]
0x3a27:	mov	rdx, rsi
0x3a2a:	mov	rsi, rdi
0x3a2d:	xor	edi, edi
0x3a2f:	jmp	0x34f0


0x3a00:	lea	rcx, [rip + 0x2037d9]
0x3a07:	mov	rsi, rdi
0x3a0a:	mov	rdx, -1
0x3a11:	xor	edi, edi
0x3a13:	jmp	0x34f0


0x39f0:	lea	rcx, [rip + 0x2037e9]
0x39f7:	jmp	0x34f0


0x39d0:	lea	rcx, [rip + 0x203809]
0x39d7:	mov	rdx, -1
0x39de:	jmp	0x34f0


0x3930:	mov	eax, dword ptr [rip + 0x203722]
0x3936:	push	r12
0x3938:	mov	r12, qword ptr [rip + 0x203721]
0x393f:	push	rbp
0x3940:	push	rbx
0x3941:	cmp	eax, 1
0x3944:	jle	0x3971


0x3920:	mov	rcx, rdx
0x3923:	xor	edx, edx
0x3925:	jmp	0x3830


0x3830:	push	r15
0x3832:	push	r14
0x3834:	lea	rax, [rip + 0x2039a5]
0x383b:	push	r13
0x383d:	push	r12
0x383f:	mov	r12, rdx
0x3842:	push	rbp
0x3843:	push	rbx
0x3844:	mov	rbx, rcx
0x3847:	mov	r14, rdi
0x384a:	mov	r15, rsi
0x384d:	sub	rsp, 0x38
0x3851:	test	rcx, rcx
0x3854:	cmove	rbx, rax
0x3858:	xor	ebp, ebp
0x385a:	call	0x1290


0x37b0:	push	r15
0x37b2:	push	r14
0x37b4:	lea	rax, [rip + 0x203a25]
0x37bb:	push	r13
0x37bd:	push	r12
0x37bf:	mov	r13, rdi
0x37c2:	push	rbp
0x37c3:	push	rbx
0x37c4:	mov	rbx, r8
0x37c7:	mov	r14, rsi
0x37ca:	mov	r15, rdx
0x37cd:	sub	rsp, 0x18
0x37d1:	test	r8, r8
0x37d4:	cmove	rbx, rax
0x37d8:	mov	qword ptr [rsp + 8], rcx
0x37dd:	call	0x1290


0x3780:	lea	rax, [rip + 0x203a59]
0x3787:	test	rdi, rdi
0x378a:	cmove	rdi, rax
0x378e:	test	rsi, rsi
0x3791:	mov	dword ptr [rdi], 0xa
0x3797:	je	0x37a7


0x3760:	lea	rax, [rip + 0x203a79]
0x3767:	test	rdi, rdi
0x376a:	cmove	rdi, rax
0x376e:	mov	eax, dword ptr [rdi + 4]
0x3771:	mov	dword ptr [rdi + 4], esi
0x3774:	ret	


0x3720:	lea	rax, [rip + 0x203ab9]
0x3727:	test	rdi, rdi
0x372a:	mov	ecx, esi
0x372c:	cmove	rdi, rax
0x3730:	mov	eax, esi
0x3732:	and	ecx, 0x1f
0x3735:	shr	al, 5
0x3738:	movzx	eax, al
0x373b:	lea	rdi, [rdi + rax*4 + 8]
0x3740:	mov	esi, dword ptr [rdi]
0x3742:	mov	eax, esi
0x3744:	shr	eax, cl
0x3746:	xor	edx, eax
0x3748:	and	eax, 1
0x374b:	and	edx, 1
0x374e:	shl	edx, cl
0x3750:	xor	edx, esi
0x3752:	mov	dword ptr [rdi], edx
0x3754:	ret	


0x3700:	lea	rax, [rip + 0x203ad9]
0x3707:	test	rdi, rdi
0x370a:	cmove	rdi, rax
0x370e:	mov	dword ptr [rdi], esi
0x3710:	ret	


0x36e0:	lea	rax, [rip + 0x203af9]
0x36e7:	test	rdi, rdi
0x36ea:	cmove	rdi, rax
0x36ee:	mov	eax, dword ptr [rdi]
0x36f0:	ret	


0x36a0:	push	r12
0x36a2:	push	rbp
0x36a3:	push	rbx
0x36a4:	mov	rbx, rdi
0x36a7:	call	0x1290


0x34f0:	push	r15
0x34f2:	push	r14
0x34f4:	movsxd	r15, edi
0x34f7:	push	r13
0x34f9:	push	r12
0x34fb:	mov	r14, rdx
0x34fe:	push	rbp
0x34ff:	push	rbx
0x3500:	mov	rbp, rcx
0x3503:	sub	rsp, 0x28
0x3507:	mov	qword ptr [rsp + 8], rsi
0x350c:	call	0x1290


0x22b0:	push	r15
0x22b2:	push	r14
0x22b4:	mov	r15d, r8d
0x22b7:	push	r13
0x22b9:	push	r12
0x22bb:	mov	r14, rdi
0x22be:	push	rbp
0x22bf:	push	rbx
0x22c0:	mov	ebx, r9d
0x22c3:	mov	r13, rsi
0x22c6:	mov	rbp, rcx
0x22c9:	and	ebx, 2
0x22cc:	sub	rsp, 0xb8
0x22d3:	mov	rax, qword ptr [rsp + 0xf0]
0x22db:	mov	qword ptr [rsp + 0x10], rdx
0x22e0:	mov	dword ptr [rsp + 8], r8d
0x22e5:	mov	dword ptr [rsp + 0x78], r9d
0x22ea:	mov	qword ptr [rsp + 0x20], rax
0x22ef:	mov	rax, qword ptr [rsp + 0xf8]
0x22f7:	mov	qword ptr [rsp + 0x68], rax
0x22fc:	mov	rax, qword ptr [rsp + 0x100]
0x2304:	mov	qword ptr [rsp + 0x60], rax
0x2309:	mov	rax, qword ptr fs:[0x28]
0x2312:	mov	qword ptr [rsp + 0xa8], rax
0x231a:	xor	eax, eax
0x231c:	call	0x1320


0x21c0:	push	rbp
0x21c1:	push	rbx
0x21c2:	mov	rbp, rdi
0x21c5:	mov	ebx, esi
0x21c7:	sub	rsp, 8
0x21cb:	call	0x4890


0x2120:	test	rdi, rdi
0x2123:	push	rbx
0x2124:	je	0x219d


0x2070:	push	rbp
0x2071:	push	rbx
0x2072:	sub	rsp, 8
0x2076:	mov	rdi, qword ptr [rip + 0x20500b]
0x207d:	call	0x47b0


0x2060:	mov	byte ptr [rip + 0x205049], dil
0x2067:	ret	


0x2050:	mov	qword ptr [rip + 0x205061], rdi
0x2057:	ret	


0x1d00:	push	r13
0x1d02:	push	r12
0x1d04:	mov	edx, 5
0x1d09:	push	rbp
0x1d0a:	push	rbx
0x1d0b:	mov	ebp, edi
0x1d0d:	sub	rsp, 0x88
0x1d14:	mov	rbx, qword ptr [rip + 0x2053a5]
0x1d1b:	mov	rax, qword ptr fs:[0x28]
0x1d24:	mov	qword ptr [rsp + 0x78], rax
0x1d29:	xor	eax, eax
0x1d2b:	test	edi, edi
0x1d2d:	je	0x1d5d


0x1cf0:	push	rbp
0x1cf1:	mov	rbp, rsp
0x1cf4:	pop	rbp
0x1cf5:	jmp	0x1c60


0x1cb0:	cmp	byte ptr [rip + 0x2053f1], 0
0x1cb7:	jne	0x1ce8


0x1c60:	lea	rdi, [rip + 0x205419]
0x1c67:	lea	rsi, [rip + 0x205412]
0x1c6e:	push	rbp
0x1c6f:	sub	rsi, rdi
0x1c72:	mov	rbp, rsp
0x1c75:	sar	rsi, 3
0x1c79:	mov	rax, rsi
0x1c7c:	shr	rax, 0x3f
0x1c80:	add	rsi, rax
0x1c83:	sar	rsi, 1
0x1c86:	je	0x1ca0


0x1c20:	lea	rdi, [rip + 0x205459]
0x1c27:	push	rbp
0x1c28:	lea	rax, [rip + 0x205451]
0x1c2f:	cmp	rax, rdi
0x1c32:	mov	rbp, rsp
0x1c35:	je	0x1c50


0x1bf0:	xor	ebp, ebp
0x1bf2:	mov	r9, rdx
0x1bf5:	pop	rsi
0x1bf6:	mov	rdx, rsp
0x1bf9:	and	rsp, 0xfffffffffffffff0
0x1bfd:	push	rax
0x1bfe:	push	rsp
0x1bff:	lea	r8, [rip + 0x2e5a]
0x1c06:	lea	rcx, [rip + 0x2de3]
0x1c0d:	lea	rdi, [rip - 0x6e4]
0x1c14:	call	qword ptr [rip + 0x2053c6]


0x1530:	push	r15
0x1532:	push	r14
0x1534:	push	r13
0x1536:	push	r12
0x1538:	mov	r12d, edi
0x153b:	push	rbp
0x153c:	push	rbx
0x153d:	mov	rbx, rsi
0x1540:	xor	r13d, r13d
0x1543:	sub	rsp, 0xd8
0x154a:	mov	rdi, qword ptr [rsi]
0x154d:	mov	rax, qword ptr fs:[0x28]
0x1556:	mov	qword ptr [rsp + 0xc8], rax
0x155e:	xor	eax, eax
0x1560:	call	0x2120


0x1240:	sub	rsp, 8
0x1244:	mov	rax, qword ptr [rip + 0x205d9d]
0x124b:	test	rax, rax
0x124e:	je	0x1252


0x14b0:	jmp	qword ptr [rip + 0x205aea]


0x49a0:	mov	rax, qword ptr [rdi + 0x20]
0x49a4:	cmp	qword ptr [rdi + 0x28], rax
0x49a8:	jne	0x499a


0x499a:	jmp	0x14a0


0x496a:	mov	rdi, rbx
0x496d:	pop	rbx
0x496e:	jmp	0x1430


0x4959:	call	0x1450


0x1410:	jmp	qword ptr [rip + 0x205b3a]


0x1440:	jmp	qword ptr [rip + 0x205b22]


0x1470:	jmp	qword ptr [rip + 0x205b0a]


0x12c0:	jmp	qword ptr [rip + 0x205be2]


0x1370:	jmp	qword ptr [rip + 0x205b8a]


0x1310:	jmp	qword ptr [rip + 0x205bba]


0x1330:	jmp	qword ptr [rip + 0x205baa]


0x4669:	call	0x46c0


0x4652:	movzx	edx, dl
0x4655:	test	rdx, rdx
0x4658:	jne	0x4669


0x4600:	test	rax, rax
0x4603:	mov	edx, 0x80
0x4608:	cmove	rax, rdx
0x460c:	test	rax, rax
0x460f:	jns	0x45f2


0x45d8:	movabs	rdx, 0x5555555555555553
0x45e2:	cmp	rax, rdx
0x45e5:	ja	0x4611


0x4580:	test	rcx, rcx
0x4583:	je	0x45a8


0x454b:	xor	edx, edx
0x454d:	movabs	rax, 0x5555555555555554
0x4557:	div	r9
0x455a:	cmp	rax, rcx
0x455d:	jbe	0x459b


0x452b:	sub	rsp, 8
0x452f:	call	0x46c0


0x4521:	movzx	eax, al
0x4524:	test	rax, rax
0x4527:	jne	0x452b


0x44d9:	test	rdi, rdi
0x44dc:	jne	0x44f8


0x44de:	mov	rsi, rbx
0x44e1:	call	0x1460


0x44ab:	sub	rsp, 8
0x44af:	call	0x46c0


0x44a1:	movzx	eax, al
0x44a4:	test	rax, rax
0x44a7:	jne	0x44ab


0x1420:	jmp	qword ptr [rip + 0x205b32]


0x4386:	mov	eax, r10d
0x4389:	mov	r11d, 1
0x438f:	add	r10d, 8
0x4393:	add	rax, rbp
0x4396:	mov	rax, qword ptr [rax]
0x4399:	test	rax, rax
0x439c:	mov	qword ptr [r8 + r9*8], rax
0x43a0:	je	0x43ac


0x43dc:	mov	rax, rbx
0x43df:	add	rbx, 8
0x43e3:	jmp	0x4396


0x42b8:	mov	r11d, eax
0x42bb:	add	r11, qword ptr [r10 + 0x10]
0x42bf:	add	eax, 8
0x42c2:	mov	dword ptr [r10], eax
0x42c5:	mov	rax, qword ptr [r11]
0x42c8:	test	rax, rax
0x42cb:	mov	qword ptr [r8 + r9*8], rax
0x42cf:	je	0x42db


0x42fa:	mov	r11, qword ptr [r10 + 8]
0x42fe:	lea	rax, [r11 + 8]
0x4302:	mov	qword ptr [r10 + 8], rax
0x4306:	jmp	0x42c5


0x428b:	jmp	0x3e50


0x3f88:	mov	r8, rcx
0x3f8b:	mov	rcx, rdx
0x3f8e:	lea	rdx, [rip + 0x151f]
0x3f95:	mov	esi, 1
0x3f9a:	xor	eax, eax
0x3f9c:	call	0x14e0


0x3e70:	mov	r8, rdx
0x3e73:	lea	rdx, [rip + 0x162e]
0x3e7a:	mov	r9, rcx
0x3e7d:	xor	eax, eax
0x3e7f:	mov	rcx, rsi
0x3e82:	mov	esi, 1
0x3e87:	call	0x14e0


0x3d77:	call	0x1280


0x3d45:	test	rdx, rdx
0x3d48:	je	0x3d77


0x3ce4:	call	0x1280


0x3c7c:	mov	dword ptr [rsp], esi
0x3c7f:	mov	rcx, rsp
0x3c82:	mov	rdx, -1
0x3c89:	mov	rsi, rax
0x3c8c:	mov	qword ptr [rsp + 4], 0
0x3c95:	mov	qword ptr [rsp + 0xc], 0x4000000
0x3c9e:	mov	qword ptr [rsp + 0x14], 0
0x3ca7:	mov	qword ptr [rsp + 0x1c], 0
0x3cb0:	mov	qword ptr [rsp + 0x24], 0
0x3cb9:	mov	qword ptr [rsp + 0x2c], 0
0x3cc2:	mov	dword ptr [rsp + 0x34], 0
0x3cca:	call	0x34f0


0x3b50:	call	0x1280


0x3aef:	mov	dword ptr [rsp], esi
0x3af2:	mov	rcx, rsp
0x3af5:	mov	rsi, rax
0x3af8:	mov	qword ptr [rsp + 4], 0
0x3b01:	mov	qword ptr [rsp + 0xc], 0
0x3b0a:	mov	qword ptr [rsp + 0x14], 0
0x3b13:	mov	qword ptr [rsp + 0x1c], 0
0x3b1c:	mov	qword ptr [rsp + 0x24], 0
0x3b25:	mov	qword ptr [rsp + 0x2c], 0
0x3b2e:	mov	dword ptr [rsp + 0x34], 0
0x3b36:	call	0x34f0


0x3ac4:	call	0x1280


0x3a5c:	mov	dword ptr [rsp], esi
0x3a5f:	mov	rcx, rsp
0x3a62:	mov	rdx, -1
0x3a69:	mov	rsi, rax
0x3a6c:	mov	qword ptr [rsp + 4], 0
0x3a75:	mov	qword ptr [rsp + 0xc], 0
0x3a7e:	mov	qword ptr [rsp + 0x14], 0
0x3a87:	mov	qword ptr [rsp + 0x1c], 0
0x3a90:	mov	qword ptr [rsp + 0x24], 0
0x3a99:	mov	qword ptr [rsp + 0x2c], 0
0x3aa2:	mov	dword ptr [rsp + 0x34], 0
0x3aaa:	call	0x34f0


0x3971:	mov	rdi, qword ptr [r12 + 8]
0x3976:	lea	rbx, [rip + 0x203763]
0x397d:	cmp	rdi, rbx
0x3980:	je	0x3999


0x3946:	sub	eax, 2
0x3949:	lea	rbx, [r12 + 0x18]
0x394e:	shl	rax, 4
0x3952:	lea	rbp, [r12 + rax + 0x28]
0x3957:	nop	word ptr [rax + rax]
0x3960:	mov	rdi, qword ptr [rbx]
0x3963:	add	rbx, 0x10
0x3967:	call	0x1270


0x1290:	jmp	qword ptr [rip + 0x205bfa]


0x37a7:	sub	rsp, 8
0x37ab:	call	0x1280


0x3799:	test	rdx, rdx
0x379c:	je	0x37a7


0x1320:	jmp	qword ptr [rip + 0x205bb2]


0x219d:	mov	rcx, qword ptr [rip + 0x204efc]
0x21a4:	lea	rdi, [rip + 0x2dd5]
0x21ab:	mov	edx, 0x37
0x21b0:	mov	esi, 1
0x21b5:	call	0x14d0


0x2126:	mov	esi, 0x2f
0x212b:	mov	rbx, rdi
0x212e:	call	0x1390


0x1d5d:	lea	rsi, [rip + 0x2e94]
0x1d64:	xor	edi, edi
0x1d66:	call	0x1310


0x1d2f:	lea	rsi, [rip + 0x2e9a]
0x1d36:	xor	edi, edi
0x1d38:	call	0x1310


0x1cb9:	cmp	qword ptr [rip + 0x205337], 0
0x1cc1:	push	rbp
0x1cc2:	mov	rbp, rsp
0x1cc5:	je	0x1cd3


0x1ce8:	ret	


0x1ca0:	pop	rbp
0x1ca1:	ret	


0x1c88:	mov	rax, qword ptr [rip + 0x205361]
0x1c8f:	test	rax, rax
0x1c92:	je	0x1ca0


0x1c50:	pop	rbp
0x1c51:	ret	


0x1c37:	mov	rax, qword ptr [rip + 0x20539a]
0x1c3e:	test	rax, rax
0x1c41:	je	0x1c50




0x1252:	add	rsp, 8
0x1256:	ret	


0x1250:	call	rax




0x49aa:	cmp	qword ptr [rdi + 0x48], 0
0x49af:	jne	0x499a


0x14a0:	jmp	qword ptr [rip + 0x205af2]


0x1430:	jmp	qword ptr [rip + 0x205b2a]


0x1450:	jmp	qword ptr [rip + 0x205b1a]
















0x465a:	call	0x13f0


0x4611:	sub	rsp, 8
0x4615:	call	0x46c0


0x45f2:	mov	qword ptr [rsi], rax
0x45f5:	mov	rsi, rax
0x45f8:	jmp	0x44d0


0x45e7:	mov	rdx, rax
0x45ea:	shr	rdx, 1
0x45ed:	lea	rax, [rdx + rax + 1]
0x45f2:	mov	qword ptr [rsi], rax
0x45f5:	mov	rsi, rax
0x45f8:	jmp	0x44d0


0x45a8:	xor	edx, edx
0x45aa:	mov	eax, 0x80
0x45af:	xor	r8d, r8d
0x45b2:	div	r9
0x45b5:	test	rax, rax
0x45b8:	sete	r8b
0x45bc:	lea	rcx, [r8 + rax]
0x45c0:	jmp	0x4585


0x4585:	mov	rax, rcx
0x4588:	mul	r9
0x458b:	seto	dl
0x458e:	test	rax, rax
0x4591:	movzx	edx, dl
0x4594:	js	0x459b


0x459b:	sub	rsp, 8
0x459f:	call	0x46c0


0x455f:	mov	rax, rcx
0x4562:	shr	rax, 1
0x4565:	lea	rcx, [rax + rcx + 1]
0x456a:	mov	qword ptr [rsi], rcx
0x456d:	imul	rcx, r9
0x4571:	mov	rsi, rcx
0x4574:	jmp	0x44d0


0x4529:	jmp	0x44d0


0x44f8:	call	0x1270


0x1460:	jmp	qword ptr [rip + 0x205b12]


0x44a9:	jmp	0x4470




0x43ac:	test	r11b, r11b
0x43af:	jne	0x43d5


0x43a2:	add	r9, 1
0x43a6:	cmp	r9, 0xa
0x43aa:	jne	0x4380


0x4396:	mov	rax, qword ptr [rax]
0x4399:	test	rax, rax
0x439c:	mov	qword ptr [r8 + r9*8], rax
0x43a0:	je	0x43ac


0x42db:	call	0x3e50


0x42d1:	add	r9, 1
0x42d5:	cmp	r9, 0xa
0x42d9:	jne	0x42b0


0x42c5:	mov	rax, qword ptr [r11]
0x42c8:	test	rax, rax
0x42cb:	mov	qword ptr [r8 + r9*8], rax
0x42cf:	je	0x42db


0x4280:	add	r9, 1
0x4284:	cmp	qword ptr [r8 + r9*8], 0
0x4289:	jne	0x4280


0x14e0:	jmp	qword ptr [rip + 0x205ad2]


0x1280:	jmp	qword ptr [rip + 0x205c02]


0x3d4a:	mov	qword ptr [rsp + 0x28], rsi
0x3d4f:	mov	qword ptr [rsp + 0x30], rdx
0x3d54:	mov	rcx, rsp
0x3d57:	mov	rdx, r8
0x3d5a:	mov	rsi, r9
0x3d5d:	call	0x34f0


0x3999:	lea	rbx, [rip + 0x2036d0]
0x39a0:	cmp	r12, rbx
0x39a3:	je	0x39b4


0x3982:	call	0x1270


0x1270:	jmp	qword ptr [rip + 0x205c0a]




0x379e:	mov	qword ptr [rdi + 0x28], rsi
0x37a2:	mov	qword ptr [rdi + 0x30], rdx
0x37a6:	ret	




0x14d0:	jmp	qword ptr [rip + 0x205ada]


0x1390:	jmp	qword ptr [rip + 0x205b7a]


0x1cd3:	call	0x1c20


0x1cc7:	mov	rdi, qword ptr [rip + 0x20533a]
0x1cce:	call	0x1520


0x1c94:	pop	rbp
0x1c95:	jmp	rax


0x1c43:	pop	rbp
0x1c44:	jmp	rax


0x49b1:	push	r12
0x49b3:	push	rbp
0x49b4:	mov	r12d, edx
0x49b7:	push	rbx
0x49b8:	mov	rbp, rsi
0x49bb:	mov	rbx, rdi
0x49be:	call	0x1410








0x13f0:	jmp	qword ptr [rip + 0x205b4a]


0x4596:	test	rdx, rdx
0x4599:	je	0x456a




0x43b1:	call	0x3e50


0x43d5:	mov	dword ptr [rsp + 8], r10d
0x43da:	jmp	0x43b1


0x4380:	cmp	r10d, 0x2f
0x4384:	ja	0x43dc


0x42b0:	mov	eax, dword ptr [r10]
0x42b3:	cmp	eax, 0x2f
0x42b6:	ja	0x42fa






0x39b4:	pop	rbx
0x39b5:	mov	dword ptr [rip + 0x203699], 1
0x39bf:	pop	rbp
0x39c0:	pop	r12
0x39c2:	ret	


0x39a5:	mov	rdi, r12
0x39a8:	call	0x1270








0x1520:	jmp	qword ptr [rip + 0x205ad2]




0x456a:	mov	qword ptr [rsi], rcx
0x456d:	imul	rcx, r9
0x4571:	mov	rsi, rcx
0x4574:	jmp	0x44d0


0x1cd8:	mov	byte ptr [rip + 0x2053c9], 1
0x1cdf:	pop	rbp
0x1ce0:	ret	


0x4a21:	test	rbp, rbp
0x4a24:	je	0x4a46


0x4a46:	add	rsp, 8
0x4a4a:	pop	rbx
0x4a4b:	pop	rbp
0x4a4c:	pop	r12
0x4a4e:	pop	r13
0x4a50:	pop	r14
0x4a52:	pop	r15
0x4a54:	ret	


0x4a26:	xor	ebx, ebx
0x4a28:	nop	dword ptr [rax + rax]
0x4a30:	mov	rdx, r15
0x4a33:	mov	rsi, r14
0x4a36:	mov	edi, r13d
0x4a39:	call	qword ptr [r12 + rbx*8]


0x465f:	test	rax, rax
0x4662:	je	0x4669


0x4664:	add	rsp, 8
0x4668:	ret	


0x2133:	test	rax, rax
0x2136:	je	0x218d


0x218d:	mov	qword ptr [rip + 0x204f2c], rbx
0x2194:	mov	qword ptr [rip + 0x204efd], rbx
0x219b:	pop	rbx
0x219c:	ret	


0x2138:	lea	r8, [rax + 1]
0x213c:	mov	rdx, r8
0x213f:	sub	rdx, rbx
0x2142:	cmp	rdx, 6
0x2146:	jle	0x218d


0x2148:	lea	rsi, [rax - 6]
0x214c:	lea	rdi, [rip + 0x2e65]
0x2153:	mov	ecx, 7
0x2158:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2158:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x215a:	seta	dl
0x215d:	sbb	dl, 0
0x2160:	test	dl, dl
0x2162:	jne	0x218d


0x2164:	lea	rdi, [rip + 0x2e55]
0x216b:	mov	ecx, 3
0x2170:	mov	rsi, r8
0x2173:	mov	rbx, r8
0x2176:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2176:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2178:	seta	dl
0x217b:	sbb	dl, 0
0x217e:	test	dl, dl
0x2180:	jne	0x218d


0x2182:	lea	rbx, [rax + 4]
0x2186:	mov	qword ptr [rip + 0x204ef3], rbx
0x218d:	mov	qword ptr [rip + 0x204f2c], rbx
0x2194:	mov	qword ptr [rip + 0x204efd], rbx
0x219b:	pop	rbx
0x219c:	ret	


0x21ba:	call	0x1280


0x39ad:	mov	qword ptr [rip + 0x2036ac], rbx
0x39b4:	pop	rbx
0x39b5:	mov	dword ptr [rip + 0x203699], 1
0x39bf:	pop	rbp
0x39c0:	pop	r12
0x39c2:	ret	


0x3987:	mov	qword ptr [rip + 0x2036de], 0x100
0x3992:	mov	qword ptr [rip + 0x2036df], rbx
0x3999:	lea	rbx, [rip + 0x2036d0]
0x39a0:	cmp	r12, rbx
0x39a3:	je	0x39b4


0x44fd:	xor	eax, eax
0x44ff:	pop	rbx
0x4500:	ret	


0x396c:	cmp	rbx, rbp
0x396f:	jne	0x3960


0x3960:	mov	rdi, qword ptr [rbx]
0x3963:	add	rbx, 0x10
0x3967:	call	0x1270


0x3e8c:	lea	rsi, [rip + 0x1628]
0x3e93:	xor	edi, edi
0x3e95:	mov	edx, 5
0x3e9a:	call	0x1310


0x3fa1:	jmp	0x3e8c


0x44e6:	test	rax, rax
0x44e9:	jne	0x44f0


0x44eb:	test	rbx, rbx
0x44ee:	jne	0x4501


0x44f0:	pop	rbx
0x44f1:	ret	


0x4501:	call	0x46c0


0x495e:	test	eax, eax
0x4960:	je	0x496a


0x4962:	test	dword ptr [rbx], 0x100
0x4968:	jne	0x4978


0x4978:	mov	rdi, rbx
0x497b:	mov	edx, 1
0x4980:	xor	esi, esi
0x4982:	call	0x4990


0x1565:	lea	rsi, [rip + 0x3f95]
0x156c:	mov	edi, 6
0x1571:	call	0x1470


0x2321:	cmp	r15d, 0xa
0x2325:	mov	qword ptr [rsp + 0x58], rax
0x232a:	ja	0x34df


0x2330:	lea	rcx, [rip + 0x2d09]
0x2337:	mov	edx, r15d
0x233a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x233e:	add	rax, rcx
0x2341:	jmp	rax


0x34df:	call	0x1280


0x3511:	mov	r13, rax
0x3514:	mov	eax, dword ptr [rax]
0x3516:	test	r15d, r15d
0x3519:	mov	rbx, qword ptr [rip + 0x203b40]
0x3520:	mov	dword ptr [rsp + 0x18], eax
0x3524:	js	0x3691


0x3691:	call	0x1280


0x352a:	cmp	dword ptr [rip + 0x203b27], r15d
0x3531:	jg	0x3595


0x3533:	cmp	r15d, 0x7fffffff
0x353a:	je	0x3696


0x3595:	mov	eax, dword ptr [rbp + 4]
0x3598:	shl	r15, 4
0x359c:	sub	rsp, 8
0x35a0:	add	rbx, r15
0x35a3:	lea	r15, [rbp + 8]
0x35a7:	mov	r8d, dword ptr [rbp]
0x35ab:	mov	r11, qword ptr [rbx]
0x35ae:	mov	r12, qword ptr [rbx + 8]
0x35b2:	mov	rcx, r14
0x35b5:	or	eax, 1
0x35b8:	mov	dword ptr [rsp + 0x24], eax
0x35bc:	push	qword ptr [rbp + 0x30]
0x35bf:	mov	r9d, eax
0x35c2:	push	qword ptr [rbp + 0x28]
0x35c5:	push	r15
0x35c7:	mov	rsi, r11
0x35ca:	mov	rdx, qword ptr [rsp + 0x28]
0x35cf:	mov	rdi, r12
0x35d2:	mov	qword ptr [rsp + 0x30], r11
0x35d7:	call	0x22b0


0x3696:	call	0x46c0


0x3540:	lea	r12d, [r15 + 1]
0x3544:	lea	rax, [rip + 0x203b25]
0x354b:	movsxd	rsi, r12d
0x354e:	shl	rsi, 4
0x3552:	cmp	rbx, rax
0x3555:	je	0x3670


0x3670:	xor	edi, edi
0x3672:	call	0x44d0


0x355b:	mov	rdi, rbx
0x355e:	call	0x44d0


0x3563:	mov	rbx, rax
0x3566:	mov	qword ptr [rip + 0x203af3], rax
0x356d:	movsxd	rdi, dword ptr [rip + 0x203ae4]
0x3574:	mov	edx, r12d
0x3577:	xor	esi, esi
0x3579:	sub	edx, edi
0x357b:	shl	rdi, 4
0x357f:	movsxd	rdx, edx
0x3582:	add	rdi, rbx
0x3585:	shl	rdx, 4
0x3589:	call	0x13b0


0x13b0:	jmp	qword ptr [rip + 0x205b6a]




0x3677:	movdqa	xmm0, xmmword ptr [rip + 0x2039f1]
0x367f:	mov	rbx, rax
0x3682:	mov	qword ptr [rip + 0x2039d7], rax
0x3689:	movups	xmmword ptr [rax], xmm0
0x368c:	jmp	0x356d


0x356d:	movsxd	rdi, dword ptr [rip + 0x203ae4]
0x3574:	mov	edx, r12d
0x3577:	xor	esi, esi
0x3579:	sub	edx, edi
0x357b:	shl	rdi, 4
0x357f:	movsxd	rdx, edx
0x3582:	add	rdi, rbx
0x3585:	shl	rdx, 4
0x3589:	call	0x13b0


0x36ac:	mov	r12d, dword ptr [rax]
0x36af:	mov	rbp, rax
0x36b2:	lea	rax, [rip + 0x203b27]
0x36b9:	test	rbx, rbx
0x36bc:	mov	esi, 0x38
0x36c1:	cmove	rbx, rax
0x36c5:	mov	rdi, rbx
0x36c8:	call	0x4670


0x37e2:	mov	r12d, dword ptr [rax]
0x37e5:	mov	rbp, rax
0x37e8:	lea	rax, [rbx + 8]
0x37ec:	sub	rsp, 8
0x37f0:	mov	r9d, dword ptr [rbx + 4]
0x37f4:	push	qword ptr [rbx + 0x30]
0x37f7:	mov	r8d, dword ptr [rbx]
0x37fa:	push	qword ptr [rbx + 0x28]
0x37fd:	mov	rdx, r15
0x3800:	push	rax
0x3801:	mov	rcx, qword ptr [rsp + 0x28]
0x3806:	mov	rsi, r14
0x3809:	mov	rdi, r13
0x380c:	call	0x22b0


0x385f:	test	r12, r12
0x3862:	mov	r13, rax
0x3865:	mov	eax, dword ptr [rax]
0x3867:	sete	bpl
0x386b:	or	ebp, dword ptr [rbx + 4]
0x386e:	lea	r10, [rbx + 8]
0x3872:	sub	rsp, 8
0x3876:	mov	r8d, dword ptr [rbx]
0x3879:	mov	rcx, r15
0x387c:	mov	dword ptr [rsp + 0x14], eax
0x3880:	push	qword ptr [rbx + 0x30]
0x3883:	mov	rdx, r14
0x3886:	push	qword ptr [rbx + 0x28]
0x3889:	push	r10
0x388b:	xor	esi, esi
0x388d:	mov	r9d, ebp
0x3890:	xor	edi, edi
0x3892:	mov	qword ptr [rsp + 0x40], r10
0x3897:	call	0x22b0


0x4479:	test	rax, rax
0x447c:	jne	0x4483


0x447e:	test	rbx, rbx
0x4481:	jne	0x4485


0x4483:	pop	rbx
0x4484:	ret	


0x4485:	call	0x46c0


0x4629:	mov	rdx, rbx
0x462c:	xor	esi, esi
0x462e:	mov	rdi, rax
0x4631:	pop	rbx
0x4632:	jmp	0x13b0


0x4684:	add	rsp, 8
0x4688:	mov	rdx, rbx
0x468b:	mov	rsi, rbp
0x468e:	pop	rbx
0x468f:	pop	rbp
0x4690:	mov	rdi, rax
0x4693:	jmp	0x1400


0x1400:	jmp	qword ptr [rip + 0x205b42]




0x46a9:	mov	rdi, rbx
0x46ac:	lea	rsi, [rax + 1]
0x46b0:	pop	rbx
0x46b1:	jmp	0x4670


0x3e9f:	lea	rdx, [rip + 0x193a]
0x3ea6:	mov	rcx, rax
0x3ea9:	mov	r8d, 0x7e3
0x3eaf:	mov	esi, 1
0x3eb4:	mov	rdi, rbp
0x3eb7:	xor	eax, eax
0x3eb9:	call	0x14e0


0x3ebe:	lea	rsi, [rip + 0x1683]
0x3ec5:	xor	edi, edi
0x3ec7:	mov	edx, 5
0x3ecc:	call	0x1310


0x3ed1:	mov	rsi, rbp
0x3ed4:	mov	rdi, rax
0x3ed7:	call	0x13e0


0x13e0:	jmp	qword ptr [rip + 0x205b52]




0x1d3d:	mov	rdi, qword ptr [rip + 0x20535c]
0x1d44:	mov	rdx, rax
0x1d47:	mov	rcx, rbx
0x1d4a:	mov	esi, 1
0x1d4f:	xor	eax, eax
0x1d51:	call	0x14e0


0x1d56:	mov	edi, ebp
0x1d58:	call	0x14c0


0x14c0:	jmp	qword ptr [rip + 0x205ae2]




0x1d6b:	mov	rdx, rbx
0x1d6e:	mov	rsi, rax
0x1d71:	mov	edi, 1
0x1d76:	xor	eax, eax
0x1d78:	call	0x1480


0x1480:	jmp	qword ptr [rip + 0x205b02]




0x4404:	lea	rdx, [rip + 0x110c]
0x440b:	mov	rsi, rax
0x440e:	mov	edi, 1
0x4413:	xor	eax, eax
0x4415:	call	0x1480


0x46d7:	mov	edi, dword ptr [rip + 0x20293b]
0x46dd:	lea	rdx, [rip + 0x894]
0x46e4:	mov	rcx, rax
0x46e7:	xor	esi, esi
0x46e9:	xor	eax, eax
0x46eb:	call	0x1490


0x1490:	jmp	qword ptr [rip + 0x205afa]




0x4757:	cmp	rax, -3
0x475b:	mov	rbp, rax
0x475e:	jbe	0x4780


0x4780:	mov	rdx, qword ptr [rsp + 8]
0x4785:	xor	rdx, qword ptr fs:[0x28]
0x478e:	mov	rax, rbp
0x4791:	jne	0x479e


0x4760:	test	r12, r12
0x4763:	je	0x4780


0x4793:	add	rsp, 0x18
0x4797:	pop	rbx
0x4798:	pop	rbp
0x4799:	pop	r12
0x479b:	pop	r13
0x479d:	ret	


0x479e:	call	0x1350


0x4765:	xor	edi, edi
0x4767:	call	0x4830


0x1350:	jmp	qword ptr [rip + 0x205b9a]




0x47bc:	mov	ebx, dword ptr [rbp]
0x47bf:	mov	rdi, rbp
0x47c2:	mov	r12, rax
0x47c5:	call	0x48d0


0x1576:	lea	rsi, [rip + 0x35d4]
0x157d:	lea	rdi, [rip + 0x35a2]
0x1584:	call	0x1300


0x1300:	jmp	qword ptr [rip + 0x205bc2]




0x483b:	mov	rdx, rax
0x483e:	mov	eax, 1
0x4843:	test	rdx, rdx
0x4846:	je	0x4865


0x4865:	add	rsp, 8
0x4869:	ret	


0x4848:	lea	rdi, [rip + 0xfd1]
0x484f:	mov	ecx, 2
0x4854:	mov	rsi, rdx
0x4857:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4857:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4859:	seta	cl
0x485c:	sbb	cl, 0
0x485f:	xor	eax, eax
0x4861:	test	cl, cl
0x4863:	jne	0x4870


0x4870:	lea	rdi, [rip + 0xfab]
0x4877:	mov	ecx, 6
0x487c:	mov	rsi, rdx
0x487f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x487f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4881:	seta	al
0x4884:	sbb	al, 0
0x4886:	test	al, al
0x4888:	setne	al
0x488b:	add	rsp, 8
0x488f:	ret	


0x476c:	test	al, al
0x476e:	jne	0x4780


0x4770:	movzx	eax, byte ptr [r13]
0x4775:	mov	ebp, 1
0x477a:	mov	dword ptr [rbx], eax
0x477c:	nop	dword ptr [rax]
0x4780:	mov	rdx, qword ptr [rsp + 8]
0x4785:	xor	rdx, qword ptr fs:[0x28]
0x478e:	mov	rax, rbp
0x4791:	jne	0x479e


0x489e:	test	rax, rax
0x48a1:	je	0x48c0


0x48c0:	lea	rax, [rip + 0xf61]
0x48c7:	add	rsp, 8
0x48cb:	ret	


0x48a3:	cmp	byte ptr [rax], 0
0x48a6:	lea	rdx, [rip + 0xf7b]
0x48ad:	cmove	rax, rdx
0x48b1:	add	rsp, 8
0x48b5:	ret	


0x21d0:	movzx	edx, byte ptr [rax]
0x21d3:	and	edx, 0xffffffdf
0x21d6:	cmp	dl, 0x55
0x21d9:	je	0x2250


0x2250:	movzx	edx, byte ptr [rax + 1]
0x2254:	and	edx, 0xffffffdf
0x2257:	cmp	dl, 0x54
0x225a:	jne	0x21e0


0x21db:	cmp	dl, 0x47
0x21de:	je	0x2200


0x225c:	movzx	edx, byte ptr [rax + 2]
0x2260:	and	edx, 0xffffffdf
0x2263:	cmp	dl, 0x46
0x2266:	jne	0x21e0


0x21e0:	lea	rax, [rip + 0x2dec]
0x21e7:	lea	rdx, [rip + 0x2de7]
0x21ee:	cmp	ebx, 9
0x21f1:	cmovne	rax, rdx
0x21f5:	add	rsp, 8
0x21f9:	pop	rbx
0x21fa:	pop	rbp
0x21fb:	ret	


0x2200:	movzx	edx, byte ptr [rax + 1]
0x2204:	and	edx, 0xffffffdf
0x2207:	cmp	dl, 0x42
0x220a:	jne	0x21e0


0x226c:	cmp	byte ptr [rax + 3], 0x2d
0x2270:	jne	0x21e0


0x220c:	cmp	byte ptr [rax + 2], 0x31
0x2210:	jne	0x21e0


0x2276:	cmp	byte ptr [rax + 4], 0x38
0x227a:	jne	0x21e0


0x2212:	cmp	byte ptr [rax + 3], 0x38
0x2216:	jne	0x21e0


0x2280:	cmp	byte ptr [rax + 5], 0
0x2284:	jne	0x21e0


0x2218:	cmp	byte ptr [rax + 4], 0x30
0x221c:	jne	0x21e0


0x228a:	cmp	byte ptr [rbp], 0x60
0x228e:	lea	rax, [rip + 0x2d2f]
0x2295:	lea	rdx, [rip + 0x2d2c]
0x229c:	cmovne	rax, rdx
0x22a0:	add	rsp, 8
0x22a4:	pop	rbx
0x22a5:	pop	rbp
0x22a6:	ret	


0x221e:	cmp	byte ptr [rax + 5], 0x33
0x2222:	jne	0x21e0


0x2224:	cmp	byte ptr [rax + 6], 0x30
0x2228:	jne	0x21e0


0x222a:	cmp	byte ptr [rax + 7], 0
0x222e:	jne	0x21e0


0x2230:	cmp	byte ptr [rbp], 0x60
0x2234:	lea	rax, [rip + 0x2d91]
0x223b:	lea	rdx, [rip + 0x2d8e]
0x2242:	cmovne	rax, rdx
0x2246:	add	rsp, 8
0x224a:	pop	rbx
0x224b:	pop	rbp
0x224c:	ret	


0x49c3:	mov	edx, r12d
0x49c6:	mov	rsi, rbp
0x49c9:	mov	edi, eax
0x49cb:	call	0x13a0


0x13a0:	jmp	qword ptr [rip + 0x205b72]




0x48dc:	test	eax, eax
0x48de:	mov	rdi, rbx
0x48e1:	js	0x4937


0x4937:	pop	rbx
0x4938:	pop	rbp
0x4939:	pop	r12
0x493b:	jmp	0x12f0


0x48e3:	call	0x1450


0x12f0:	jmp	qword ptr [rip + 0x205bca]




0x48e8:	test	eax, eax
0x48ea:	jne	0x4918


0x48ec:	mov	rdi, rbx
0x48ef:	call	0x4950


0x4918:	mov	rdi, rbx
0x491b:	call	0x1410


0x4920:	xor	esi, esi
0x4922:	mov	edx, 1
0x4927:	mov	edi, eax
0x4929:	call	0x13a0


0x492e:	cmp	rax, -1
0x4932:	jne	0x48ec


0x4934:	mov	rdi, rbx
0x4937:	pop	rbx
0x4938:	pop	rbp
0x4939:	pop	r12
0x493b:	jmp	0x12f0


0x49d0:	cmp	rax, -1
0x49d4:	je	0x49e2


0x49e2:	pop	rbx
0x49e3:	pop	rbp
0x49e4:	pop	r12
0x49e6:	ret	


0x49d6:	and	dword ptr [rbx], 0xffffffef
0x49d9:	mov	qword ptr [rbx + 0x90], rax
0x49e0:	xor	eax, eax
0x49e2:	pop	rbx
0x49e3:	pop	rbp
0x49e4:	pop	r12
0x49e6:	ret	


0x1589:	lea	rdi, [rip + 0x3596]
0x1590:	call	0x12d0


0x12d0:	jmp	qword ptr [rip + 0x205bda]




0x46f0:	call	0x1280


0x441a:	lea	rsi, [rip + 0x110c]
0x4421:	mov	edx, 5
0x4426:	xor	edi, edi
0x4428:	call	0x1310


0x442d:	lea	rcx, [rip + 0x934]
0x4434:	lea	rdx, [rip + 0x6e7]
0x443b:	mov	rsi, rax
0x443e:	mov	edi, 1
0x4443:	xor	eax, eax
0x4445:	call	0x1480


0x444a:	mov	rbx, qword ptr [rip + 0x202c37]
0x4451:	lea	rsi, [rip + 0x1308]
0x4458:	xor	edi, edi
0x445a:	mov	edx, 5
0x445f:	call	0x1310


0x4464:	mov	rsi, rbx
0x4467:	mov	rdi, rax
0x446a:	pop	rbx
0x446b:	jmp	0x13e0


0x1d7d:	mov	rbx, qword ptr [rip + 0x205304]
0x1d84:	lea	rsi, [rip + 0x2e8d]
0x1d8b:	mov	edx, 5
0x1d90:	xor	edi, edi
0x1d92:	call	0x1310


0x1d97:	mov	rsi, rbx
0x1d9a:	mov	rdi, rax
0x1d9d:	call	0x13e0


0x1da2:	mov	rbx, qword ptr [rip + 0x2052df]
0x1da9:	lea	rsi, [rip + 0x2f50]
0x1db0:	mov	edx, 5
0x1db5:	xor	edi, edi
0x1db7:	call	0x1310


0x1dbc:	mov	rsi, rbx
0x1dbf:	mov	rdi, rax
0x1dc2:	call	0x13e0


0x1dc7:	mov	rbx, qword ptr [rip + 0x2052ba]
0x1dce:	lea	rsi, [rip + 0x2f5b]
0x1dd5:	mov	edx, 5
0x1dda:	xor	edi, edi
0x1ddc:	call	0x1310


0x1de1:	mov	rsi, rbx
0x1de4:	mov	rdi, rax
0x1de7:	lea	rbx, [rip + 0x2cb6]
0x1dee:	call	0x13e0


0x1df3:	lea	rax, [rip + 0x2cb2]
0x1dfa:	lea	rcx, [rip + 0x2cec]
0x1e01:	mov	qword ptr [rsp + 0x60], 0
0x1e0a:	mov	qword ptr [rsp + 0x68], 0
0x1e13:	mov	rdx, rsp
0x1e16:	mov	qword ptr [rsp], rax
0x1e1a:	lea	rax, [rip + 0x2c8d]
0x1e21:	mov	qword ptr [rsp + 0x30], rcx
0x1e26:	lea	rcx, [rip + 0x2cca]
0x1e2d:	mov	qword ptr [rsp + 8], rax
0x1e32:	lea	rax, [rip + 0x2ced]
0x1e39:	mov	qword ptr [rsp + 0x40], rcx
0x1e3e:	lea	rcx, [rip + 0x2cbc]
0x1e45:	mov	qword ptr [rsp + 0x10], rax
0x1e4a:	lea	rax, [rip + 0x2c6d]
0x1e51:	mov	qword ptr [rsp + 0x50], rcx
0x1e56:	mov	qword ptr [rsp + 0x18], rax
0x1e5b:	lea	rax, [rip + 0x2c72]
0x1e62:	mov	qword ptr [rsp + 0x20], rax
0x1e67:	lea	rax, [rip + 0x2c70]
0x1e6e:	mov	qword ptr [rsp + 0x28], rax
0x1e73:	mov	qword ptr [rsp + 0x38], rax
0x1e78:	mov	qword ptr [rsp + 0x48], rax
0x1e7d:	mov	qword ptr [rsp + 0x58], rax
0x1e82:	nop	word ptr [rax + rax]
0x1e88:	add	rdx, 0x10
0x1e8c:	mov	rdi, qword ptr [rdx]
0x1e8f:	test	rdi, rdi
0x1e92:	je	0x1ea7


0x1ea7:	mov	r12, qword ptr [rdx + 8]
0x1eab:	xor	edi, edi
0x1ead:	mov	edx, 5
0x1eb2:	lea	rsi, [rip + 0x2c52]
0x1eb9:	test	r12, r12
0x1ebc:	je	0x1f83


0x1e94:	mov	ecx, 8
0x1e99:	mov	rsi, rbx
0x1e9c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1f83:	call	0x1310


0x1ec2:	call	0x1310


0x1e9c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1e9e:	seta	al
0x1ea1:	sbb	al, 0
0x1ea3:	test	al, al
0x1ea5:	jne	0x1e88


0x1e88:	add	rdx, 0x10
0x1e8c:	mov	rdi, qword ptr [rdx]
0x1e8f:	test	rdi, rdi
0x1e92:	je	0x1ea7


0x1ec7:	lea	rcx, [rip + 0x2e9a]
0x1ece:	lea	rdx, [rip + 0x2c4d]
0x1ed5:	mov	rsi, rax
0x1ed8:	mov	edi, 1
0x1edd:	xor	eax, eax
0x1edf:	call	0x1480


0x1ee4:	xor	esi, esi
0x1ee6:	mov	edi, 5
0x1eeb:	call	0x1470


0x1ef0:	test	rax, rax
0x1ef3:	je	0x1f11


0x1f11:	lea	rsi, [rip + 0x2c1c]
0x1f18:	xor	edi, edi
0x1f1a:	mov	edx, 5
0x1f1f:	call	0x1310


0x1ef5:	lea	rsi, [rip + 0x2c34]
0x1efc:	mov	edx, 3
0x1f01:	mov	rdi, rax
0x1f04:	call	0x12a0


0x12a0:	jmp	qword ptr [rip + 0x205bf2]




0x1f24:	lea	rcx, [rip + 0x2b79]
0x1f2b:	lea	rdx, [rip + 0x2e36]
0x1f32:	mov	rsi, rax
0x1f35:	mov	edi, 1
0x1f3a:	xor	eax, eax
0x1f3c:	call	0x1480


0x1f41:	cmp	r12, rbx
0x1f44:	lea	rcx, [rip + 0x2b7d]
0x1f4b:	lea	rbx, [rip + 0x35af]
0x1f52:	cmove	rbx, rcx
0x1f56:	lea	rsi, [rip + 0x2e7b]
0x1f5d:	xor	edi, edi
0x1f5f:	mov	edx, 5
0x1f64:	call	0x1310


0x1f69:	mov	rcx, rbx
0x1f6c:	mov	rsi, rax
0x1f6f:	mov	rdx, r12
0x1f72:	mov	edi, 1
0x1f77:	xor	eax, eax
0x1f79:	call	0x1480


0x1f7e:	jmp	0x1d56


0x1f88:	lea	rcx, [rip + 0x2dd9]
0x1f8f:	lea	rdx, [rip + 0x2b8c]
0x1f96:	mov	rsi, rax
0x1f99:	mov	edi, 1
0x1f9e:	xor	eax, eax
0x1fa0:	call	0x1480


0x1fa5:	xor	esi, esi
0x1fa7:	mov	edi, 5
0x1fac:	call	0x1470


0x1fb1:	test	rax, rax
0x1fb4:	je	0x1fce


0x1fce:	lea	rsi, [rip + 0x2b5f]
0x1fd5:	mov	edx, 5
0x1fda:	xor	edi, edi
0x1fdc:	lea	r12, [rip + 0x2ac1]
0x1fe3:	lea	rbx, [rip + 0x2ade]
0x1fea:	call	0x1310


0x1fb6:	lea	rsi, [rip + 0x2b73]
0x1fbd:	mov	edx, 3
0x1fc2:	mov	rdi, rax
0x1fc5:	call	0x12a0


0x1fef:	lea	rcx, [rip + 0x2aae]
0x1ff6:	lea	rdx, [rip + 0x2d6b]
0x1ffd:	mov	rsi, rax
0x2000:	mov	edi, 1
0x2005:	xor	eax, eax
0x2007:	call	0x1480


0x200c:	jmp	0x1f56


0x1f56:	lea	rsi, [rip + 0x2e7b]
0x1f5d:	xor	edi, edi
0x1f5f:	mov	edx, 5
0x1f64:	call	0x1310


0x3edc:	cmp	r12, 9
0x3ee0:	ja	0x4220


0x3ee6:	lea	rdx, [rip + 0x18bb]
0x3eed:	movsxd	rax, dword ptr [rdx + r12*4]
0x3ef1:	add	rax, rdx
0x3ef4:	jmp	rax


0x4220:	mov	r10, qword ptr [rbx + 0x40]
0x4224:	mov	r9, qword ptr [rbx + 0x38]
0x4228:	mov	edx, 5
0x422d:	mov	rax, qword ptr [rbx + 0x10]
0x4231:	mov	r8, qword ptr [rbx + 8]
0x4235:	lea	rsi, [rip + 0x14e4]
0x423c:	mov	r13, qword ptr [rbx + 0x30]
0x4240:	mov	r12, qword ptr [rbx + 0x28]
0x4244:	mov	r15, qword ptr [rbx + 0x20]
0x4248:	mov	r14, qword ptr [rbx + 0x18]
0x424c:	mov	qword ptr [rsp + 0x18], r10
0x4251:	mov	qword ptr [rsp + 0x10], r9
0x4256:	mov	qword ptr [rsp], rax
0x425a:	mov	qword ptr [rsp + 8], r8
0x425f:	mov	rbx, qword ptr [rbx]
0x4262:	jmp	0x3ff2


0x3ff2:	xor	edi, edi
0x3ff4:	call	0x1310


0x3ff9:	mov	r10, qword ptr [rsp + 0x18]
0x3ffe:	push	r10
0x4000:	jmp	0x3f44


0x3f44:	mov	r9, qword ptr [rsp + 0x18]
0x3f49:	mov	rdx, rax
0x3f4c:	mov	rcx, rbx
0x3f4f:	mov	esi, 1
0x3f54:	mov	rdi, rbp
0x3f57:	xor	eax, eax
0x3f59:	push	r9
0x3f5b:	push	r13
0x3f5d:	push	r12
0x3f5f:	push	r15
0x3f61:	push	r14
0x3f63:	mov	r9, qword ptr [rsp + 0x30]
0x3f68:	mov	r8, qword ptr [rsp + 0x38]
0x3f6d:	call	0x14e0


0x3f72:	add	rsp, 0x30
0x3f76:	add	rsp, 0x28
0x3f7a:	pop	rbx
0x3f7b:	pop	rbp
0x3f7c:	pop	r12
0x3f7e:	pop	r13
0x3f80:	pop	r14
0x3f82:	pop	r15
0x3f84:	ret	


0x36cd:	mov	dword ptr [rbp], r12d
0x36d1:	pop	rbx
0x36d2:	pop	rbp
0x36d3:	pop	r12
0x36d5:	ret	


0x358e:	mov	dword ptr [rip + 0x203ac3], r12d
0x3595:	mov	eax, dword ptr [rbp + 4]
0x3598:	shl	r15, 4
0x359c:	sub	rsp, 8
0x35a0:	add	rbx, r15
0x35a3:	lea	r15, [rbp + 8]
0x35a7:	mov	r8d, dword ptr [rbp]
0x35ab:	mov	r11, qword ptr [rbx]
0x35ae:	mov	r12, qword ptr [rbx + 8]
0x35b2:	mov	rcx, r14
0x35b5:	or	eax, 1
0x35b8:	mov	dword ptr [rsp + 0x24], eax
0x35bc:	push	qword ptr [rbp + 0x30]
0x35bf:	mov	r9d, eax
0x35c2:	push	qword ptr [rbp + 0x28]
0x35c5:	push	r15
0x35c7:	mov	rsi, r11
0x35ca:	mov	rdx, qword ptr [rsp + 0x28]
0x35cf:	mov	rdi, r12
0x35d2:	mov	qword ptr [rsp + 0x30], r11
0x35d7:	call	0x22b0


0x4987:	mov	rdi, rbx
0x498a:	pop	rbx
0x498b:	jmp	0x1430


0x43b6:	mov	rax, qword ptr [rsp + 0x78]
0x43bb:	xor	rax, qword ptr fs:[0x28]
0x43c4:	jne	0x43d0


0x43c6:	add	rsp, 0xb8
0x43cd:	pop	rbx
0x43ce:	pop	rbp
0x43cf:	ret	


0x43d0:	call	0x1350


0x42e0:	mov	rax, qword ptr [rsp + 0x58]
0x42e5:	xor	rax, qword ptr fs:[0x28]
0x42ee:	jne	0x42f5


0x42f0:	add	rsp, 0x68
0x42f4:	ret	


0x42f5:	call	0x1350


0x1fca:	test	eax, eax
0x1fcc:	jne	0x2011


0x2011:	lea	r12, [rip + 0x2a8c]
0x2018:	mov	r13, qword ptr [rip + 0x205069]
0x201f:	lea	rsi, [rip + 0x2d6a]
0x2026:	xor	edi, edi
0x2028:	mov	edx, 5
0x202d:	call	0x1310


0x2032:	mov	rsi, r13
0x2035:	mov	rdi, rax
0x2038:	call	0x13e0


0x203d:	jmp	0x1f11


0x1f09:	test	eax, eax
0x1f0b:	jne	0x2018


0x2018:	mov	r13, qword ptr [rip + 0x205069]
0x201f:	lea	rsi, [rip + 0x2d6a]
0x2026:	xor	edi, edi
0x2028:	mov	edx, 5
0x202d:	call	0x1310


0x1595:	lea	rdi, [rip + 0xad4]
0x159c:	call	0x4a70


0x15a1:	mov	byte ptr [rsp], 0
0x15a5:	lea	rcx, [rip + 0x2055f4]
0x15ac:	lea	rdx, [rip + 0x35df]
0x15b3:	xor	r8d, r8d
0x15b6:	mov	rsi, rbx
0x15b9:	mov	edi, r12d
0x15bc:	call	0x1360


0x1360:	jmp	qword ptr [rip + 0x205b92]




0x48f4:	test	eax, eax
0x48f6:	je	0x4934


0x48f8:	call	0x1290


0x48fd:	mov	r12d, dword ptr [rax]
0x4900:	mov	rdi, rbx
0x4903:	mov	rbp, rax
0x4906:	call	0x12f0


0x490b:	test	r12d, r12d
0x490e:	jne	0x4940


0x4910:	pop	rbx
0x4911:	pop	rbp
0x4912:	pop	r12
0x4914:	ret	


0x4940:	mov	dword ptr [rbp], r12d
0x4944:	mov	eax, 0xffffffff
0x4949:	jmp	0x4910


0x47ca:	and	ebx, 0x20
0x47cd:	test	ebx, ebx
0x47cf:	jne	0x47e8


0x47d1:	test	eax, eax
0x47d3:	je	0x47df


0x47e8:	test	eax, eax
0x47ea:	jne	0x4808


0x47df:	pop	rbx
0x47e0:	pop	rbp
0x47e1:	pop	r12
0x47e3:	ret	


0x47d5:	test	r12, r12
0x47d8:	mov	eax, 0xffffffff
0x47dd:	je	0x4818


0x47ec:	call	0x1290


0x4808:	pop	rbx
0x4809:	mov	eax, 0xffffffff
0x480e:	pop	rbp
0x480f:	pop	r12
0x4811:	ret	


0x4818:	call	0x1290


0x481d:	cmp	dword ptr [rax], 9
0x4820:	pop	rbx
0x4821:	pop	rbp
0x4822:	pop	r12
0x4824:	setne	al
0x4827:	movzx	eax, al
0x482a:	neg	eax
0x482c:	ret	


0x47f1:	mov	dword ptr [rax], 0
0x47f7:	mov	eax, 0xffffffff
0x47fc:	pop	rbx
0x47fd:	pop	rbp
0x47fe:	pop	r12
0x4800:	ret	


0x2082:	test	eax, eax
0x2084:	je	0x209c


0x209c:	mov	rdi, qword ptr [rip + 0x204ffd]
0x20a3:	call	0x47b0


0x2086:	call	0x1290


0x208b:	cmp	byte ptr [rip + 0x20501e], 0
0x2092:	mov	rbx, rax
0x2095:	je	0x20b3


0x20b3:	lea	rsi, [rip + 0x2eae]
0x20ba:	xor	edi, edi
0x20bc:	mov	edx, 5
0x20c1:	call	0x1310


0x2097:	cmp	dword ptr [rax], 0x20
0x209a:	jne	0x20b3


0x20c6:	mov	rdi, qword ptr [rip + 0x204feb]
0x20cd:	mov	rbp, rax
0x20d0:	test	rdi, rdi
0x20d3:	je	0x20fd


0x20fd:	mov	esi, dword ptr [rbx]
0x20ff:	lea	rdx, [rip + 0x2e72]
0x2106:	mov	rcx, rax
0x2109:	xor	edi, edi
0x210b:	xor	eax, eax
0x210d:	call	0x1490


0x20d5:	call	0x3c30


0x2112:	jmp	0x20f2


0x20f2:	mov	edi, dword ptr [rip + 0x204f20]
0x20f8:	call	0x12b0


0x12b0:	jmp	qword ptr [rip + 0x205bea]




0x20a8:	test	eax, eax
0x20aa:	jne	0x20f2


0x20ac:	add	rsp, 8
0x20b0:	pop	rbx
0x20b1:	pop	rbp
0x20b2:	ret	


0x15c1:	cmp	eax, -1
0x15c4:	je	0x1659


0x1659:	mov	eax, dword ptr [rip + 0x205a31]
0x165f:	cmp	eax, r12d
0x1662:	je	0x1bbb


0x15ca:	cmp	eax, 0x50
0x15cd:	je	0x1640


0x1bbb:	lea	rsi, [rip + 0x2fd4]
0x1bc2:	mov	edx, 5
0x1bc7:	xor	edi, edi
0x1bc9:	call	0x1310


0x1668:	mov	ecx, 1
0x166d:	jge	0x1957


0x1640:	mov	r13d, 1
0x1646:	jmp	0x15a5


0x15cf:	jle	0x15f0


0x1673:	mov	dword ptr [rsp + 0x14], r12d
0x1678:	mov	qword ptr [rsp + 0x18], rbx
0x167d:	mov	r12d, ecx
0x1680:	jmp	0x170c


0x1957:	mov	eax, ecx
0x1959:	xor	eax, 1
0x195c:	mov	rbx, qword ptr [rsp + 0xc8]
0x1964:	xor	rbx, qword ptr fs:[0x28]
0x196d:	movzx	eax, al
0x1970:	jne	0x1be6


0x15a5:	lea	rcx, [rip + 0x2055f4]
0x15ac:	lea	rdx, [rip + 0x35df]
0x15b3:	xor	r8d, r8d
0x15b6:	mov	rsi, rbx
0x15b9:	mov	edi, r12d
0x15bc:	call	0x1360


0x15f0:	cmp	eax, 0xffffff7d
0x15f5:	jne	0x1bad


0x15d1:	cmp	eax, 0x70
0x15d4:	je	0x1650


0x170c:	mov	rcx, qword ptr [rsp + 0x18]
0x1711:	cdqe	
0x1713:	mov	r14, qword ptr [rcx + rax*8]
0x1717:	mov	rdi, r14
0x171a:	call	0x1330


0x1976:	add	rsp, 0xd8
0x197d:	pop	rbx
0x197e:	pop	rbp
0x197f:	pop	r12
0x1981:	pop	r13
0x1983:	pop	r14
0x1985:	pop	r15
0x1987:	ret	


0x1be6:	call	0x1350


0x15fb:	lea	rax, [rip + 0x3583]
0x1602:	mov	rdi, qword ptr [rip + 0x205a7f]
0x1609:	mov	rcx, qword ptr [rip + 0x205a00]
0x1610:	push	0
0x1612:	lea	r9, [rip + 0x3550]
0x1619:	lea	r8, [rip + 0x3559]
0x1620:	push	rax
0x1621:	lea	rdx, [rip + 0x34fa]
0x1628:	lea	rsi, [rip + 0x3475]
0x162f:	xor	eax, eax
0x1631:	call	0x4310


0x1bad:	cmp	eax, 0xffffff7e
0x1bb2:	jne	0x1bdc


0x1650:	mov	byte ptr [rsp], 1
0x1654:	jmp	0x15a5


0x15d6:	add	eax, -0x80
0x15d9:	jne	0x1bdc


0x1bb4:	xor	edi, edi
0x1bb6:	call	0x1d00


0x1bdc:	mov	edi, 1
0x1be1:	call	0x1d00


0x15df:	mov	r13d, 1
0x15e5:	mov	byte ptr [rsp], 1
0x15e9:	jmp	0x15a5


0x1636:	xor	edi, edi
0x1638:	call	0x14c0


0x171f:	test	r13b, r13b
0x1722:	mov	rbp, rax
0x1725:	je	0x1685


0x1685:	cmp	byte ptr [rsp], 0
0x1689:	jne	0x187a


0x172b:	mov	rdi, r14
0x172e:	jmp	0x1747


0x168f:	lea	rdx, [rsp + 0x30]
0x1694:	mov	rsi, r14
0x1697:	mov	edi, 1
0x169c:	call	0x1340


0x187a:	test	rax, rax
0x187d:	jne	0x1769


0x1747:	mov	esi, 0x2d
0x174c:	call	0x1380


0x1340:	jmp	qword ptr [rip + 0x205ba2]


0x1883:	lea	rsi, [rip + 0x331c]
0x188a:	mov	edx, 5
0x188f:	xor	edi, edi
0x1891:	call	0x1310


0x1769:	lea	rsi, [rip + 0x36d0]
0x1770:	mov	rdi, r14
0x1773:	call	0x13c0


0x1380:	jmp	qword ptr [rip + 0x205b82]




0x13c0:	jmp	qword ptr [rip + 0x205b62]






0x1896:	xor	esi, esi
0x1898:	mov	rdx, rax
0x189b:	xor	edi, edi
0x189d:	xor	eax, eax
0x189f:	call	0x1490


0x18a4:	xor	r8d, r8d
0x18a7:	jmp	0x16f0


0x16f0:	mov	eax, dword ptr [rip + 0x20599a]
0x16f6:	and	r12d, r8d
0x16f9:	add	eax, 1
0x16fc:	cmp	eax, dword ptr [rsp + 0x14]
0x1700:	mov	dword ptr [rip + 0x20598a], eax
0x1706:	jge	0x1954


0x1954:	mov	ecx, r12d
0x1957:	mov	eax, ecx
0x1959:	xor	eax, 1
0x195c:	mov	rbx, qword ptr [rsp + 0xc8]
0x1964:	xor	rbx, qword ptr fs:[0x28]
0x196d:	movzx	eax, al
0x1970:	jne	0x1be6


0x1bce:	xor	esi, esi
0x1bd0:	mov	rdx, rax
0x1bd3:	xor	edi, edi
0x1bd5:	xor	eax, eax
0x1bd7:	call	0x1490


0x1778:	lea	r15, [r14 + rax]
0x177c:	cmp	byte ptr [r15], 0
0x1780:	jne	0x1988


0x1786:	cmp	rbp, 0xff
0x178d:	ja	0x1ac4


0x1988:	lea	rdx, [rsp + 0x30]
0x198d:	mov	rsi, rbp
0x1990:	mov	rdi, r15
0x1993:	sub	rsi, rax
0x1996:	mov	qword ptr [rsp + 0x30], 0
0x199f:	call	0x4700


0x1793:	mov	rdx, qword ptr [rsp]
0x1797:	shl	rdx, 0x3f
0x179b:	sar	rdx, 0x3f
0x179f:	and	edx, 0xe
0x17a2:	mov	ecx, 0xe
0x17a7:	mov	byte ptr [rsp + 0x20], r13b
0x17ac:	mov	byte ptr [rsp + 0x28], r12b
0x17b1:	mov	rbp, r14
0x17b4:	mov	r12, rdx
0x17b7:	mov	r13, rcx
0x17ba:	jmp	0x17c4


0x1ac4:	mov	r15d, 0x100
0x1aca:	mov	rsi, r14
0x1acd:	mov	edi, 4
0x1ad2:	call	0x3b60


0x17c4:	movzx	r15d, byte ptr [rbp]
0x17c9:	cmp	r15b, 0x2f
0x17cd:	je	0x17c0


0x17c0:	add	rbp, 1
0x17c4:	movzx	r15d, byte ptr [rbp]
0x17c9:	cmp	r15b, 0x2f
0x17cd:	je	0x17c0


0x17cf:	test	r15b, r15b
0x17d2:	je	0x193d


0x193d:	movzx	r13d, byte ptr [rsp + 0x20]
0x1943:	movzx	r12d, byte ptr [rsp + 0x28]
0x1949:	mov	r8d, 1
0x194f:	jmp	0x16f0


0x17d8:	test	r12, r12
0x17db:	jne	0x1875


0x17e1:	lea	rax, [rip + 0x3367]
0x17e8:	cmp	r14, rbp
0x17eb:	cmovne	rax, r14
0x17ef:	mov	qword ptr [rsp + 8], rax
0x17f4:	call	0x1290


0x1875:	mov	r13, r12
0x1878:	jmp	0x1825


0x1825:	movzx	r15d, byte ptr [rbp + 1]
0x182a:	cmp	r15b, 0x2f
0x182e:	je	0x1869


0x1869:	lea	r10, [rbp + 1]
0x186d:	mov	r8d, 1
0x1873:	jmp	0x1858


0x1830:	test	r15b, r15b
0x1833:	je	0x1869


0x1858:	cmp	r13, r8
0x185b:	jb	0x1b45


0x1835:	lea	rax, [rbp + 2]
0x1839:	movzx	r15d, byte ptr [rax]
0x183d:	mov	r8, rax
0x1840:	mov	r10, rax
0x1843:	sub	r8, rbp
0x1846:	add	rax, 1
0x184a:	cmp	r15b, 0x2f
0x184e:	je	0x1858


0x1b45:	mov	byte ptr [r10], 0
0x1b49:	mov	rdi, rbp
0x1b4c:	mov	qword ptr [rsp + 8], r10
0x1b51:	movzx	r12d, byte ptr [rsp + 0x28]
0x1b57:	mov	qword ptr [rsp + 0x28], r13
0x1b5c:	movzx	r13d, byte ptr [rsp + 0x20]
0x1b62:	mov	qword ptr [rsp + 0x20], r8
0x1b67:	call	0x3e30


0x1861:	mov	rbp, r10
0x1864:	jmp	0x17c4


0x1850:	test	r15b, r15b
0x1853:	jne	0x1839


0x1839:	movzx	r15d, byte ptr [rax]
0x183d:	mov	r8, rax
0x1840:	mov	r10, rax
0x1843:	sub	r8, rbp
0x1846:	add	rax, 1
0x184a:	cmp	r15b, 0x2f
0x184e:	je	0x1858


0x17f9:	mov	rdi, qword ptr [rsp + 8]
0x17fe:	mov	dword ptr [rax], 0
0x1804:	mov	esi, 3
0x1809:	mov	byte ptr [rbp], 0
0x180d:	mov	rbx, rax
0x1810:	call	0x12e0


0x12e0:	jmp	qword ptr [rip + 0x205bd2]




0x1751:	test	rax, rax
0x1754:	jne	0x1730


0x1756:	test	rbp, rbp
0x1759:	je	0x1883


0x1730:	cmp	r14, rax
0x1733:	je	0x18ac


0x175f:	cmp	byte ptr [rsp], 0
0x1763:	je	0x168f


0x18ac:	mov	rsi, r14
0x18af:	mov	edi, 4
0x18b4:	call	0x3b60


0x1739:	cmp	byte ptr [rax - 1], 0x2f
0x173d:	je	0x18ac


0x1743:	lea	rdi, [rax + 1]
0x1747:	mov	esi, 0x2d
0x174c:	call	0x1380


0x16a1:	test	eax, eax
0x16a3:	je	0x1949


0x1949:	mov	r8d, 1
0x194f:	jmp	0x16f0


0x16a9:	call	0x1290


0x16ae:	cmp	dword ptr [rax], 2
0x16b1:	mov	rbx, rax
0x16b4:	setne	r8b
0x16b8:	test	rbp, rbp
0x16bb:	sete	al
0x16be:	or	r8b, al
0x16c1:	je	0x1a1c


0x1a1c:	cmp	rbp, 0xff
0x1a23:	mov	byte ptr [rsp + 8], r8b
0x1a28:	jbe	0x1a64


0x16c7:	mov	rdx, r14
0x16ca:	mov	esi, 3
0x16cf:	xor	edi, edi
0x16d1:	call	0x3c60


0x1a64:	mov	rsi, r14
0x1a67:	mov	rax, rsi
0x1a6a:	jmp	0x1a74


0x1a2a:	cmp	byte ptr [r14], 0x2f
0x1a2e:	lea	rax, [rip + 0x311a]
0x1a35:	lea	r15, [rip + 0x3582]
0x1a3c:	mov	dword ptr [rbx], 0
0x1a42:	mov	esi, 4
0x1a47:	cmovne	r15, rax
0x1a4b:	mov	rdi, r15
0x1a4e:	call	0x12e0


0x1a74:	movzx	edx, byte ptr [rax]
0x1a77:	cmp	dl, 0x2f
0x1a7a:	je	0x1a70


0x1a70:	add	rax, 1
0x1a74:	movzx	edx, byte ptr [rax]
0x1a77:	cmp	dl, 0x2f
0x1a7a:	je	0x1a70


0x1a7c:	test	dl, dl
0x1a7e:	je	0x1949


0x1a84:	movzx	edx, byte ptr [rax + 1]
0x1a88:	lea	rcx, [rax + 1]
0x1a8c:	cmp	dl, 0x2f
0x1a8f:	je	0x1abf


0x1abf:	mov	rax, rcx
0x1ac2:	jmp	0x1a74


0x1a91:	test	dl, dl
0x1a93:	je	0x1abf


0x1a95:	lea	rdx, [rax + 2]
0x1a99:	movzx	ecx, byte ptr [rdx]
0x1a9c:	mov	rdi, rdx
0x1a9f:	mov	rsi, rdx
0x1aa2:	sub	rdi, rax
0x1aa5:	add	rdx, 1
0x1aa9:	cmp	cl, 0x2f
0x1aac:	je	0x1ab2


0x1ab2:	cmp	rdi, 0xe
0x1ab6:	jbe	0x1a67


0x1aae:	test	cl, cl
0x1ab0:	jne	0x1a99


0x1a67:	mov	rax, rsi
0x1a6a:	jmp	0x1a74


0x1ab8:	xor	edx, edx
0x1aba:	jmp	0x17a2


0x1a99:	movzx	ecx, byte ptr [rdx]
0x1a9c:	mov	rdi, rdx
0x1a9f:	mov	rsi, rdx
0x1aa2:	sub	rdi, rax
0x1aa5:	add	rdx, 1
0x1aa9:	cmp	cl, 0x2f
0x1aac:	je	0x1ab2


0x17a2:	mov	ecx, 0xe
0x17a7:	mov	byte ptr [rsp + 0x20], r13b
0x17ac:	mov	byte ptr [rsp + 0x28], r12b
0x17b1:	mov	rbp, r14
0x17b4:	mov	r12, rdx
0x17b7:	mov	r13, rcx
0x17ba:	jmp	0x17c4


0x1a53:	test	rax, rax
0x1a56:	js	0x1b0d


0x1b0d:	cmp	dword ptr [rbx], 0
0x1b10:	je	0x1a5c


0x1a5c:	cmp	rbp, rax
0x1a5f:	mov	r15, rax
0x1a62:	jae	0x1aca


0x1b16:	lea	rsi, [rip + 0x339b]
0x1b1d:	mov	edx, 5
0x1b22:	xor	edi, edi
0x1b24:	call	0x1310


0x1aca:	mov	rsi, r14
0x1acd:	mov	edi, 4
0x1ad2:	call	0x3b60


0x1b29:	mov	esi, dword ptr [rbx]
0x1b2b:	mov	rdx, rax
0x1b2e:	mov	rcx, r15
0x1b31:	xor	edi, edi
0x1b33:	xor	eax, eax
0x1b35:	call	0x1490


0x1b3a:	movzx	r8d, byte ptr [rsp + 8]
0x1b40:	jmp	0x16f0


0x1815:	test	rax, rax
0x1818:	mov	byte ptr [rbp], r15b
0x181c:	js	0x18e8


0x18e8:	mov	eax, dword ptr [rbx]
0x18ea:	test	eax, eax
0x18ec:	je	0x1a13


0x1822:	mov	r13, rax
0x1825:	movzx	r15d, byte ptr [rbp + 1]
0x182a:	cmp	r15b, 0x2f
0x182e:	je	0x1869


0x1a13:	or	r13, 0xffffffffffffffff
0x1a17:	jmp	0x1825


0x18f2:	cmp	eax, 2
0x18f5:	je	0x1a0b


0x1a0b:	mov	r12, r13
0x1a0e:	jmp	0x1825


0x18fb:	mov	rdx, qword ptr [rsp + 8]
0x1900:	mov	esi, 3
0x1905:	xor	edi, edi
0x1907:	mov	byte ptr [rbp], 0
0x190b:	movzx	r13d, byte ptr [rsp + 0x20]
0x1911:	movzx	r12d, byte ptr [rsp + 0x28]
0x1917:	call	0x3c60


0x19a4:	xor	edi, edi
0x19a6:	mov	rbx, rax
0x19a9:	mov	rdx, r14
0x19ac:	mov	esi, 4
0x19b1:	call	0x3a40


0x19b6:	cmp	rbx, 0x10
0x19ba:	mov	rbp, rax
0x19bd:	jbe	0x19c4


0x19c4:	mov	rcx, rbx
0x19c7:	mov	rdx, r15
0x19ca:	mov	esi, 8
0x19cf:	mov	edi, 1
0x19d4:	call	0x3ad0


0x19bf:	mov	ebx, 1
0x19c4:	mov	rcx, rbx
0x19c7:	mov	rdx, r15
0x19ca:	mov	esi, 8
0x19cf:	mov	edi, 1
0x19d4:	call	0x3ad0


0x19d9:	lea	rsi, [rip + 0x34a8]
0x19e0:	mov	r14, rax
0x19e3:	mov	edx, 5
0x19e8:	xor	edi, edi
0x19ea:	call	0x1310


0x19ef:	mov	r8, rbp
0x19f2:	mov	rdx, rax
0x19f5:	mov	rcx, r14
0x19f8:	xor	esi, esi
0x19fa:	xor	edi, edi
0x19fc:	xor	eax, eax
0x19fe:	call	0x1490


0x1a03:	xor	r8d, r8d
0x1a06:	jmp	0x16f0


0x191c:	mov	esi, dword ptr [rbx]
0x191e:	lea	rdx, [rip + 0x3653]
0x1925:	mov	rcx, rax
0x1928:	xor	edi, edi
0x192a:	xor	eax, eax
0x192c:	call	0x1490


0x1931:	mov	byte ptr [rbp], r15b
0x1935:	xor	r8d, r8d
0x1938:	jmp	0x16f0


0x16d6:	mov	esi, dword ptr [rbx]
0x16d8:	lea	rdx, [rip + 0x3899]
0x16df:	mov	rcx, rax
0x16e2:	xor	edi, edi
0x16e4:	xor	eax, eax
0x16e6:	call	0x1490


0x16eb:	xor	r8d, r8d
0x16ee:	nop	
0x16f0:	mov	eax, dword ptr [rip + 0x20599a]
0x16f6:	and	r12d, r8d
0x16f9:	add	eax, 1
0x16fc:	cmp	eax, dword ptr [rsp + 0x14]
0x1700:	mov	dword ptr [rip + 0x20598a], eax
0x1706:	jge	0x1954


0x1b6c:	lea	rsi, [rip + 0x33b5]
0x1b73:	mov	edx, 5
0x1b78:	xor	edi, edi
0x1b7a:	mov	rbp, rax
0x1b7d:	call	0x1310


0x1b82:	mov	r8, qword ptr [rsp + 0x20]
0x1b87:	mov	rcx, qword ptr [rsp + 0x28]
0x1b8c:	mov	rdx, rax
0x1b8f:	mov	r9, rbp
0x1b92:	xor	esi, esi
0x1b94:	xor	edi, edi
0x1b96:	xor	eax, eax
0x1b98:	call	0x1490


0x1b9d:	mov	r10, qword ptr [rsp + 8]
0x1ba2:	xor	r8d, r8d
0x1ba5:	mov	byte ptr [r10], r15b
0x1ba8:	jmp	0x16f0


0x1ad7:	lea	rsi, [rip + 0x3412]
0x1ade:	mov	edx, 5
0x1ae3:	xor	edi, edi
0x1ae5:	mov	r14, rax
0x1ae8:	call	0x1310


0x1aed:	lea	rcx, [r15 - 1]
0x1af1:	mov	r8, rbp
0x1af4:	mov	rdx, rax
0x1af7:	mov	r9, r14
0x1afa:	xor	esi, esi
0x1afc:	xor	edi, edi
0x1afe:	xor	eax, eax
0x1b00:	call	0x1490


0x1b05:	xor	r8d, r8d
0x1b08:	jmp	0x16f0


0x18b9:	lea	rsi, [rip + 0x3550]
0x18c0:	mov	rbp, rax
0x18c3:	mov	edx, 5
0x18c8:	xor	edi, edi
0x18ca:	call	0x1310


0x18cf:	mov	rcx, rbp
0x18d2:	mov	rdx, rax
0x18d5:	xor	esi, esi
0x18d7:	xor	edi, edi
0x18d9:	xor	eax, eax
0x18db:	call	0x1490


0x18e0:	xor	r8d, r8d
0x18e3:	jmp	0x16f0


0x20da:	mov	esi, dword ptr [rbx]
0x20dc:	lea	rdx, [rip + 0x2e91]
0x20e3:	mov	rcx, rax
0x20e6:	mov	r8, rbp
0x20e9:	xor	edi, edi
0x20eb:	xor	eax, eax
0x20ed:	call	0x1490


0x35dc:	add	rsp, 0x20
0x35e0:	mov	r11, qword ptr [rsp + 0x10]
0x35e5:	cmp	r11, rax
0x35e8:	ja	0x3651


0x35ea:	lea	rsi, [rax + 1]
0x35ee:	lea	rax, [rip + 0x203aeb]
0x35f5:	cmp	r12, rax
0x35f8:	mov	qword ptr [rbx], rsi
0x35fb:	je	0x360f


0x3651:	mov	eax, dword ptr [rsp + 0x18]
0x3655:	mov	dword ptr [r13], eax
0x3659:	add	rsp, 0x28
0x365d:	mov	rax, r12
0x3660:	pop	rbx
0x3661:	pop	rbp
0x3662:	pop	r12
0x3664:	pop	r13
0x3666:	pop	r14
0x3668:	pop	r15
0x366a:	ret	


0x360f:	mov	rdi, rsi
0x3612:	mov	qword ptr [rsp + 0x10], rsi
0x3617:	call	0x4470


0x35fd:	mov	rdi, r12
0x3600:	mov	qword ptr [rsp + 0x10], rsi
0x3605:	call	0x1270


0x360a:	mov	rsi, qword ptr [rsp + 0x10]
0x360f:	mov	rdi, rsi
0x3612:	mov	qword ptr [rsp + 0x10], rsi
0x3617:	call	0x4470


0x361c:	sub	rsp, 8
0x3620:	mov	qword ptr [rbx + 8], rax
0x3624:	mov	r8d, dword ptr [rbp]
0x3628:	push	qword ptr [rbp + 0x30]
0x362b:	push	qword ptr [rbp + 0x28]
0x362e:	mov	rcx, r14
0x3631:	push	r15
0x3633:	mov	r9d, dword ptr [rsp + 0x3c]
0x3638:	mov	rdi, rax
0x363b:	mov	rdx, qword ptr [rsp + 0x28]
0x3640:	mov	rsi, qword ptr [rsp + 0x30]
0x3645:	mov	r12, rax
0x3648:	call	0x22b0


0x3d62:	mov	rdi, qword ptr [rsp + 0x38]
0x3d67:	xor	rdi, qword ptr fs:[0x28]
0x3d70:	jne	0x3d7c


0x3d72:	add	rsp, 0x48
0x3d76:	ret	


0x3d7c:	call	0x1350


0x3aaf:	mov	rcx, qword ptr [rsp + 0x38]
0x3ab4:	xor	rcx, qword ptr fs:[0x28]
0x3abd:	jne	0x3ac9


0x3abf:	add	rsp, 0x48
0x3ac3:	ret	


0x3ac9:	call	0x1350


0x3b3b:	mov	rdx, qword ptr [rsp + 0x38]
0x3b40:	xor	rdx, qword ptr fs:[0x28]
0x3b49:	jne	0x3b55


0x3b4b:	add	rsp, 0x48
0x3b4f:	ret	


0x3b55:	call	0x1350


0x3ccf:	mov	rcx, qword ptr [rsp + 0x38]
0x3cd4:	xor	rcx, qword ptr fs:[0x28]
0x3cdd:	jne	0x3ce9


0x3cdf:	add	rsp, 0x48
0x3ce3:	ret	


0x3ce9:	call	0x1350


0x3bfe:	mov	rsi, qword ptr [rsp + 0x38]
0x3c03:	xor	rsi, qword ptr fs:[0x28]
0x3c0c:	jne	0x3c13


0x3c0e:	add	rsp, 0x48
0x3c12:	ret	


0x3c13:	call	0x1350


0x364d:	add	rsp, 0x20
0x3651:	mov	eax, dword ptr [rsp + 0x18]
0x3655:	mov	dword ptr [r13], eax
0x3659:	add	rsp, 0x28
0x365d:	mov	rax, r12
0x3660:	pop	rbx
0x3661:	pop	rbp
0x3662:	pop	r12
0x3664:	pop	r13
0x3666:	pop	r14
0x3668:	pop	r15
0x366a:	ret	


0x389c:	lea	rsi, [rax + 1]
0x38a0:	mov	qword ptr [rsp + 0x48], rax
0x38a5:	add	rsp, 0x20
0x38a9:	mov	rdi, rsi
0x38ac:	mov	qword ptr [rsp + 0x18], rsi
0x38b1:	call	0x4470


0x38b6:	mov	qword ptr [rsp + 0x10], rax
0x38bb:	sub	rsp, 8
0x38bf:	push	qword ptr [rbx + 0x30]
0x38c2:	push	qword ptr [rbx + 0x28]
0x38c5:	mov	r10, qword ptr [rsp + 0x38]
0x38ca:	mov	r9d, ebp
0x38cd:	mov	r8d, dword ptr [rbx]
0x38d0:	mov	rcx, r15
0x38d3:	mov	rdx, r14
0x38d6:	mov	rdi, rax
0x38d9:	push	r10
0x38db:	mov	rsi, qword ptr [rsp + 0x38]
0x38e0:	call	0x22b0


0x38e5:	mov	eax, dword ptr [rsp + 0x2c]
0x38e9:	add	rsp, 0x20
0x38ed:	test	r12, r12
0x38f0:	mov	dword ptr [r13], eax
0x38f4:	je	0x38ff


0x38ff:	mov	rax, qword ptr [rsp + 0x10]
0x3904:	add	rsp, 0x38
0x3908:	pop	rbx
0x3909:	pop	rbp
0x390a:	pop	r12
0x390c:	pop	r13
0x390e:	pop	r14
0x3910:	pop	r15
0x3912:	ret	


0x38f6:	mov	r11, qword ptr [rsp + 0x28]
0x38fb:	mov	qword ptr [r12], r11
0x38ff:	mov	rax, qword ptr [rsp + 0x10]
0x3904:	add	rsp, 0x38
0x3908:	pop	rbx
0x3909:	pop	rbp
0x390a:	pop	r12
0x390c:	pop	r13
0x390e:	pop	r14
0x3910:	pop	r15
0x3912:	ret	


0x3811:	mov	dword ptr [rbp], r12d
0x3815:	add	rsp, 0x38
0x3819:	pop	rbx
0x381a:	pop	rbp
0x381b:	pop	r12
0x381d:	pop	r13
0x381f:	pop	r14
0x3821:	pop	r15
0x3823:	ret	


0x4a3d:	add	rbx, 1
0x4a41:	cmp	rbp, rbx
0x4a44:	jne	0x4a30


0x4a30:	mov	rdx, r15
0x4a33:	mov	rsi, r14
0x4a36:	mov	edi, r13d
0x4a39:	call	qword ptr [r12 + rbx*8]






0x40e0:	lea	rsi, [rip + 0x1531]
0x40e7:	mov	edx, 5
0x40ec:	xor	edi, edi
0x40ee:	mov	r14, qword ptr [rbx + 0x18]
0x40f2:	mov	r13, qword ptr [rbx + 0x10]
0x40f6:	mov	r12, qword ptr [rbx + 8]
0x40fa:	mov	rbx, qword ptr [rbx]
0x40fd:	call	0x1310


0x3f00:	mov	r9, qword ptr [rbx + 0x38]
0x3f04:	mov	rax, qword ptr [rbx + 0x10]
0x3f08:	lea	rsi, [rip + 0x17a9]
0x3f0f:	mov	r8, qword ptr [rbx + 8]
0x3f13:	mov	edx, 5
0x3f18:	xor	edi, edi
0x3f1a:	mov	r13, qword ptr [rbx + 0x30]
0x3f1e:	mov	r12, qword ptr [rbx + 0x28]
0x3f22:	mov	qword ptr [rsp + 0x10], r9
0x3f27:	mov	r15, qword ptr [rbx + 0x20]
0x3f2b:	mov	r14, qword ptr [rbx + 0x18]
0x3f2f:	mov	qword ptr [rsp], rax
0x3f33:	mov	qword ptr [rsp + 8], r8
0x3f38:	mov	rbx, qword ptr [rbx]
0x3f3b:	call	0x1310


0x4008:	mov	rbx, qword ptr [rbx]
0x400b:	lea	rsi, [rip + 0x14ad]
0x4012:	mov	edx, 5
0x4017:	xor	edi, edi
0x4019:	call	0x1310


0x4048:	mov	r12, qword ptr [rbx + 8]
0x404c:	lea	rsi, [rip + 0x147c]
0x4053:	mov	rbx, qword ptr [rbx]
0x4056:	mov	edx, 5
0x405b:	xor	edi, edi
0x405d:	call	0x1310


0x4168:	mov	r8, qword ptr [rbx + 8]
0x416c:	mov	r12, qword ptr [rbx + 0x28]
0x4170:	lea	rsi, [rip + 0x14e9]
0x4177:	mov	r15, qword ptr [rbx + 0x20]
0x417b:	mov	r14, qword ptr [rbx + 0x18]
0x417f:	mov	edx, 5
0x4184:	mov	r13, qword ptr [rbx + 0x10]
0x4188:	xor	edi, edi
0x418a:	mov	rbx, qword ptr [rbx]
0x418d:	mov	qword ptr [rsp], r8
0x4191:	call	0x1310


0x4090:	mov	r13, qword ptr [rbx + 0x10]
0x4094:	mov	r12, qword ptr [rbx + 8]
0x4098:	lea	rsi, [rip + 0x1447]
0x409f:	mov	rbx, qword ptr [rbx]
0x40a2:	mov	edx, 5
0x40a7:	xor	edi, edi
0x40a9:	call	0x1310


0x41d0:	mov	r9, qword ptr [rbx + 0x10]
0x41d4:	mov	r13, qword ptr [rbx + 0x30]
0x41d8:	lea	rsi, [rip + 0x14a9]
0x41df:	mov	r12, qword ptr [rbx + 0x28]
0x41e3:	mov	r15, qword ptr [rbx + 0x20]
0x41e7:	mov	edx, 5
0x41ec:	mov	r14, qword ptr [rbx + 0x18]
0x41f0:	mov	r8, qword ptr [rbx + 8]
0x41f4:	xor	edi, edi
0x41f6:	mov	qword ptr [rsp + 8], r9
0x41fb:	mov	rbx, qword ptr [rbx]
0x41fe:	mov	qword ptr [rsp], r8
0x4202:	call	0x1310


0x3fb0:	mov	r10, qword ptr [rbx + 0x40]
0x3fb4:	mov	r9, qword ptr [rbx + 0x38]
0x3fb8:	lea	rsi, [rip + 0x1729]
0x3fbf:	mov	rax, qword ptr [rbx + 0x10]
0x3fc3:	mov	r8, qword ptr [rbx + 8]
0x3fc7:	mov	edx, 5
0x3fcc:	mov	r13, qword ptr [rbx + 0x30]
0x3fd0:	mov	r12, qword ptr [rbx + 0x28]
0x3fd4:	mov	r15, qword ptr [rbx + 0x20]
0x3fd8:	mov	r14, qword ptr [rbx + 0x18]
0x3fdc:	mov	rbx, qword ptr [rbx]
0x3fdf:	mov	qword ptr [rsp + 0x18], r10
0x3fe4:	mov	qword ptr [rsp + 0x10], r9
0x3fe9:	mov	qword ptr [rsp], rax
0x3fed:	mov	qword ptr [rsp + 8], r8
0x3ff2:	xor	edi, edi
0x3ff4:	call	0x1310


0x3f76:	add	rsp, 0x28
0x3f7a:	pop	rbx
0x3f7b:	pop	rbp
0x3f7c:	pop	r12
0x3f7e:	pop	r13
0x3f80:	pop	r14
0x3f82:	pop	r15
0x3f84:	ret	


0x4138:	mov	r15, qword ptr [rbx + 0x20]
0x413c:	lea	rsi, [rip + 0x14f5]
0x4143:	mov	edx, 5
0x4148:	xor	edi, edi
0x414a:	mov	r14, qword ptr [rbx + 0x18]
0x414e:	mov	r13, qword ptr [rbx + 0x10]
0x4152:	mov	r12, qword ptr [rbx + 8]
0x4156:	mov	rbx, qword ptr [rbx]
0x4159:	call	0x1310


0x415e:	push	r15
0x4160:	jmp	0x4106


0x4106:	push	r14
0x4108:	mov	rdx, rax
0x410b:	mov	r9, r13
0x410e:	mov	r8, r12
0x4111:	mov	rcx, rbx
0x4114:	mov	rdi, rbp
0x4117:	mov	esi, 1
0x411c:	xor	eax, eax
0x411e:	call	0x14e0


0x4123:	pop	rax
0x4124:	pop	rdx
0x4125:	add	rsp, 0x28
0x4129:	pop	rbx
0x412a:	pop	rbp
0x412b:	pop	r12
0x412d:	pop	r13
0x412f:	pop	r14
0x4131:	pop	r15
0x4133:	ret	


0x4207:	push	r13
0x4209:	push	r12
0x420b:	push	r15
0x420d:	push	r14
0x420f:	mov	r9, qword ptr [rsp + 0x28]
0x4214:	jmp	0x41a3


0x41a3:	mov	r8, qword ptr [rsp + 0x20]
0x41a8:	mov	rcx, rbx
0x41ab:	mov	rdx, rax
0x41ae:	mov	rdi, rbp
0x41b1:	mov	esi, 1
0x41b6:	xor	eax, eax
0x41b8:	call	0x14e0


0x41bd:	add	rsp, 0x20
0x41c1:	add	rsp, 0x28
0x41c5:	pop	rbx
0x41c6:	pop	rbp
0x41c7:	pop	r12
0x41c9:	pop	r13
0x41cb:	pop	r14
0x41cd:	pop	r15
0x41cf:	ret	


0x40ae:	add	rsp, 0x28
0x40b2:	mov	r9, r13
0x40b5:	mov	r8, r12
0x40b8:	mov	rcx, rbx
0x40bb:	mov	rdi, rbp
0x40be:	mov	rdx, rax
0x40c1:	pop	rbx
0x40c2:	pop	rbp
0x40c3:	pop	r12
0x40c5:	pop	r13
0x40c7:	pop	r14
0x40c9:	pop	r15
0x40cb:	mov	esi, 1
0x40d0:	xor	eax, eax
0x40d2:	jmp	0x14e0


0x4196:	sub	rsp, 8
0x419a:	mov	r9, r13
0x419d:	push	r12
0x419f:	push	r15
0x41a1:	push	r14
0x41a3:	mov	r8, qword ptr [rsp + 0x20]
0x41a8:	mov	rcx, rbx
0x41ab:	mov	rdx, rax
0x41ae:	mov	rdi, rbp
0x41b1:	mov	esi, 1
0x41b6:	xor	eax, eax
0x41b8:	call	0x14e0


0x4062:	add	rsp, 0x28
0x4066:	mov	r8, r12
0x4069:	mov	rcx, rbx
0x406c:	mov	rdi, rbp
0x406f:	mov	rdx, rax
0x4072:	mov	esi, 1
0x4077:	pop	rbx
0x4078:	pop	rbp
0x4079:	pop	r12
0x407b:	pop	r13
0x407d:	pop	r14
0x407f:	pop	r15
0x4081:	xor	eax, eax
0x4083:	jmp	0x14e0


0x401e:	add	rsp, 0x28
0x4022:	mov	rcx, rbx
0x4025:	mov	rdi, rbp
0x4028:	pop	rbx
0x4029:	pop	rbp
0x402a:	pop	r12
0x402c:	pop	r13
0x402e:	pop	r14
0x4030:	pop	r15
0x4032:	mov	rdx, rax
0x4035:	mov	esi, 1
0x403a:	xor	eax, eax
0x403c:	jmp	0x14e0


0x3f40:	sub	rsp, 8
0x3f44:	mov	r9, qword ptr [rsp + 0x18]
0x3f49:	mov	rdx, rax
0x3f4c:	mov	rcx, rbx
0x3f4f:	mov	esi, 1
0x3f54:	mov	rdi, rbp
0x3f57:	xor	eax, eax
0x3f59:	push	r9
0x3f5b:	push	r13
0x3f5d:	push	r12
0x3f5f:	push	r15
0x3f61:	push	r14
0x3f63:	mov	r9, qword ptr [rsp + 0x30]
0x3f68:	mov	r8, qword ptr [rsp + 0x38]
0x3f6d:	call	0x14e0


0x4102:	sub	rsp, 8
0x4106:	push	r14
0x4108:	mov	rdx, rax
0x410b:	mov	r9, r13
0x410e:	mov	r8, r12
0x4111:	mov	rcx, rbx
0x4114:	mov	rdi, rbp
0x4117:	mov	esi, 1
0x411c:	xor	eax, eax
0x411e:	call	0x14e0


0x2e50:	sub	rsp, 8
0x2e54:	mov	rcx, rbp
0x2e57:	mov	rsi, r13
0x2e5a:	push	qword ptr [rsp + 0x68]
0x2e5e:	push	qword ptr [rsp + 0x78]
0x2e62:	mov	rdi, r14
0x2e65:	push	0
0x2e67:	mov	r9d, dword ptr [rsp + 0x98]
0x2e6f:	mov	r8d, dword ptr [rsp + 0x28]
0x2e74:	mov	rdx, qword ptr [rsp + 0x30]
0x2e79:	and	r9d, 0xfffffffd
0x2e7d:	call	0x22b0


0x2e82:	add	rsp, 0x20
0x2e86:	mov	r15, rax
0x2e89:	mov	rbx, qword ptr [rsp + 0xa8]
0x2e91:	xor	rbx, qword ptr fs:[0x28]
0x2e9a:	mov	rax, r15
0x2e9d:	jne	0x34a3


0x2ea3:	add	rsp, 0xb8
0x2eaa:	pop	rbx
0x2eab:	pop	rbp
0x2eac:	pop	r12
0x2eae:	pop	r13
0x2eb0:	pop	r14
0x2eb2:	pop	r15
0x2eb4:	ret	


0x34a3:	call	0x1350


0x344d:	sub	rsp, 8
0x3451:	mov	r8d, 5
0x3457:	mov	rcx, r11
0x345a:	push	qword ptr [rsp + 0x68]
0x345e:	push	qword ptr [rsp + 0x78]
0x3462:	mov	rdi, r14
0x3465:	push	qword ptr [rsp + 0x38]
0x3469:	mov	r9d, dword ptr [rsp + 0x98]
0x3471:	mov	rdx, qword ptr [rsp + 0x30]
0x3476:	mov	rsi, qword ptr [rsp + 0x70]
0x347b:	call	0x22b0


0x3480:	add	rsp, 0x20
0x3484:	mov	r15, rax
0x3487:	jmp	0x2e89


0x2e89:	mov	rbx, qword ptr [rsp + 0xa8]
0x2e91:	xor	rbx, qword ptr fs:[0x28]
0x2e9a:	mov	rax, r15
0x2e9d:	jne	0x34a3


0x1260:	push	qword ptr [rip + 0x205c0a]
0x1266:	jmp	qword ptr [rip + 0x205c0c]


0x126c:	nop	dword ptr [rax]


0x1276:	push	0
0x127b:	jmp	0x1260


0x1286:	push	1
0x128b:	jmp	0x1260


0x1296:	push	2
0x129b:	jmp	0x1260


0x12a6:	push	3
0x12ab:	jmp	0x1260


0x12b6:	push	4
0x12bb:	jmp	0x1260


0x12c6:	push	5
0x12cb:	jmp	0x1260


0x12d6:	push	6
0x12db:	jmp	0x1260


0x12e6:	push	7
0x12eb:	jmp	0x1260


0x12f6:	push	8
0x12fb:	jmp	0x1260


0x1306:	push	9
0x130b:	jmp	0x1260


0x1316:	push	0xa
0x131b:	jmp	0x1260


0x1326:	push	0xb
0x132b:	jmp	0x1260


0x1336:	push	0xc
0x133b:	jmp	0x1260


0x1346:	push	0xd
0x134b:	jmp	0x1260


0x1356:	push	0xe
0x135b:	jmp	0x1260


0x1366:	push	0xf
0x136b:	jmp	0x1260


0x1376:	push	0x10
0x137b:	jmp	0x1260


0x1386:	push	0x11
0x138b:	jmp	0x1260


0x1396:	push	0x12
0x139b:	jmp	0x1260


0x13a6:	push	0x13
0x13ab:	jmp	0x1260


0x13b6:	push	0x14
0x13bb:	jmp	0x1260


0x13c6:	push	0x15
0x13cb:	jmp	0x1260


0x13d0:	jmp	qword ptr [rip + 0x205b5a]




0x13d6:	push	0x16
0x13db:	jmp	0x1260


0x13e6:	push	0x17
0x13eb:	jmp	0x1260


0x13f6:	push	0x18
0x13fb:	jmp	0x1260


0x1406:	push	0x19
0x140b:	jmp	0x1260


0x1416:	push	0x1a
0x141b:	jmp	0x1260


0x1426:	push	0x1b
0x142b:	jmp	0x1260


0x1436:	push	0x1c
0x143b:	jmp	0x1260


0x1446:	push	0x1d
0x144b:	jmp	0x1260


0x1456:	push	0x1e
0x145b:	jmp	0x1260


0x1466:	push	0x1f
0x146b:	jmp	0x1260


0x1476:	push	0x20
0x147b:	jmp	0x1260


0x1486:	push	0x21
0x148b:	jmp	0x1260


0x1496:	push	0x22
0x149b:	jmp	0x1260


0x14a6:	push	0x23
0x14ab:	jmp	0x1260


0x14b6:	push	0x24
0x14bb:	jmp	0x1260


0x14c6:	push	0x25
0x14cb:	jmp	0x1260


0x14d6:	push	0x26
0x14db:	jmp	0x1260


0x14e6:	push	0x27
0x14eb:	jmp	0x1260


0x14f0:	jmp	qword ptr [rip + 0x205aca]




0x14f6:	push	0x28
0x14fb:	jmp	0x1260


0x1500:	jmp	qword ptr [rip + 0x205ac2]




0x1506:	push	0x29
0x150b:	jmp	0x1260


0x1510:	jmp	qword ptr [rip + 0x205aba]




0x1516:	push	0x2a
0x151b:	jmp	0x1260


0x1beb:	nop	dword ptr [rax + rax]


0x1c1a:	hlt	


0x1c1b:	nop	dword ptr [rax + rax]


0x1c52:	nop	dword ptr [rax]
0x1c56:	nop	word ptr cs:[rax + rax]


0x1ca2:	nop	dword ptr [rax]
0x1ca6:	nop	word ptr cs:[rax + rax]


0x1cea:	nop	word ptr [rax + rax]


0x1cfa:	nop	word ptr [rax + rax]


0x2042:	nop	word ptr cs:[rax + rax]
0x204c:	nop	dword ptr [rax]


0x2058:	nop	dword ptr [rax + rax]


0x2068:	nop	dword ptr [rax + rax]


0x2114:	nop	word ptr cs:[rax + rax]
0x211e:	nop	


0x21bf:	nop	


0x22a7:	nop	word ptr [rax + rax]


0x2343:	mov	byte ptr [rsp + 0xe], 1
0x2348:	mov	byte ptr [rsp + 0x7c], 0
0x234d:	xor	r12d, r12d
0x2350:	mov	qword ptr [rsp + 0x50], 0
0x2359:	mov	byte ptr [rsp + 0xf], 1
0x235e:	mov	byte ptr [rsp + 0xd], 0
0x2363:	lea	rax, [rip + 0x2c6b]
0x236a:	mov	qword ptr [rsp + 0x18], 1
0x2373:	xor	r15d, r15d
0x2376:	mov	dword ptr [rsp + 8], 2
0x237e:	mov	qword ptr [rsp + 0x48], rax
0x2383:	xor	r11d, r11d
0x2386:	mov	rax, rbp
0x2389:	mov	r8d, r12d
0x238c:	mov	rbp, r11
0x238f:	mov	r11, rax
0x2392:	nop	word ptr [rax + rax]
0x2398:	cmp	r11, rbp
0x239b:	setne	r12b
0x239f:	cmp	r11, -1
0x23a3:	jne	0x23b2


0x23a5:	mov	rax, qword ptr [rsp + 0x10]
0x23aa:	cmp	byte ptr [rax + rbp], 0
0x23ae:	setne	r12b
0x23b2:	test	r12b, r12b
0x23b5:	je	0x2a10


0x23b2:	test	r12b, r12b
0x23b5:	je	0x2a10


0x2a10:	cmp	dword ptr [rsp + 8], 2
0x2a15:	movzx	ebx, byte ptr [rsp + 0xf]
0x2a1a:	mov	r12d, r8d
0x2a1d:	mov	rbp, r11
0x2a20:	sete	dl
0x2a23:	mov	eax, ebx
0x2a25:	test	r15, r15
0x2a28:	sete	cl
0x2a2b:	and	eax, edx
0x2a2d:	and	al, cl
0x2a2f:	jne	0x3496


0x23bb:	cmp	dword ptr [rsp + 8], 2
0x23c0:	mov	rdi, qword ptr [rsp + 0x10]
0x23c5:	lea	r9, [rdi + rbp]
0x23c9:	setne	al
0x23cc:	and	al, byte ptr [rsp + 0xd]
0x23d0:	mov	r10d, eax
0x23d3:	je	0x2480


0x2a35:	mov	eax, ebx
0x2a37:	xor	eax, 1
0x2a3a:	and	dl, al
0x2a3c:	je	0x33ac


0x3496:	mov	dword ptr [rsp + 8], 2
0x349e:	jmp	0x2e39


0x2480:	movzx	ebx, byte ptr [r9]
0x2484:	cmp	bl, 0x7e
0x2487:	ja	0x27a8


0x23d9:	mov	rax, qword ptr [rsp + 0x18]
0x23de:	test	rax, rax
0x23e1:	je	0x2810


0x33ac:	mov	rbx, qword ptr [rsp + 0x48]
0x33b1:	test	rbx, rbx
0x33b4:	je	0x33e2


0x2a42:	cmp	byte ptr [rsp + 0x7c], 0
0x2a47:	je	0x33aa


0x2e39:	cmp	byte ptr [rsp + 0xd], 0
0x2e3e:	je	0x2e50


0x248d:	lea	rcx, [rip + 0x2bd8]
0x2494:	movzx	edx, bl
0x2497:	movsxd	rax, dword ptr [rcx + rdx*4]
0x249b:	add	rax, rcx
0x249e:	jmp	rax


0x27a8:	cmp	qword ptr [rsp + 0x58], 1
0x27ae:	jne	0x2b58


0x2810:	movzx	ebx, byte ptr [r9]
0x2814:	cmp	bl, 0x7e
0x2817:	ja	0x27a0


0x23e7:	cmp	r11, -1
0x23eb:	lea	rbx, [rbp + rax]
0x23f0:	jne	0x2420


0x33e2:	cmp	r13, r15
0x33e5:	jbe	0x2e89


0x33b6:	test	al, al
0x33b8:	je	0x33e2


0x33aa:	mov	eax, edx
0x33ac:	mov	rbx, qword ptr [rsp + 0x48]
0x33b1:	test	rbx, rbx
0x33b4:	je	0x33e2


0x2a4d:	cmp	byte ptr [rsp + 0xe], 0
0x2a52:	jne	0x344d


0x2e40:	test	al, al
0x2e42:	mov	eax, 4
0x2e47:	cmove	eax, dword ptr [rsp + 8]
0x2e4c:	mov	dword ptr [rsp + 8], eax


0x27b4:	mov	qword ptr [rsp + 0x38], r11
0x27b9:	mov	byte ptr [rsp + 0x30], r8b
0x27be:	mov	byte ptr [rsp + 0x28], r10b
0x27c3:	call	0x1510


0x2b58:	lea	rax, [rsp + 0xa0]
0x2b60:	cmp	r11, -1
0x2b64:	mov	qword ptr [rsp + 0xa0], 0
0x2b70:	mov	qword ptr [rsp + 0x28], rax
0x2b75:	jne	0x2ba4


0x2819:	lea	rcx, [rip + 0x2a48]
0x2820:	movzx	edx, bl
0x2823:	movsxd	rax, dword ptr [rcx + rdx*4]
0x2827:	add	rax, rcx
0x282a:	jmp	rax


0x27a0:	xor	r10d, r10d
0x27a3:	nop	dword ptr [rax + rax]
0x27a8:	cmp	qword ptr [rsp + 0x58], 1
0x27ae:	jne	0x2b58


0x23f2:	cmp	rax, 1
0x23f6:	jbe	0x2420


0x2420:	cmp	rbx, r11
0x2423:	mov	byte ptr [rsp + 0x28], r10b
0x2428:	ja	0x29e0


0x33eb:	mov	byte ptr [r14 + r15], 0
0x33f0:	jmp	0x2e89


0x33ba:	movzx	ecx, byte ptr [rbx]
0x33bd:	mov	rax, rbx
0x33c0:	test	cl, cl
0x33c2:	je	0x33e2


0x2a58:	test	r13, r13
0x2a5b:	sete	al
0x2a5e:	cmp	qword ptr [rsp + 0x50], 0
0x2a64:	setne	dl
0x2a67:	and	al, dl
0x2a69:	je	0x348c


0x2b77:	mov	rdi, qword ptr [rsp + 0x10]
0x2b7c:	mov	byte ptr [rsp + 0x40], r8b
0x2b81:	mov	byte ptr [rsp + 0x38], r10b
0x2b86:	mov	qword ptr [rsp + 0x30], r9
0x2b8b:	call	0x1330


0x2ba4:	lea	rax, [rsp + 0x9c]
0x2bac:	xor	ecx, ecx
0x2bae:	mov	byte ptr [rsp + 0x7e], bl
0x2bb2:	mov	byte ptr [rsp + 0x7d], r8b
0x2bb7:	mov	rbx, rcx
0x2bba:	mov	qword ptr [rsp + 0x88], r9
0x2bc2:	mov	qword ptr [rsp + 0x38], rax
0x2bc7:	mov	byte ptr [rsp + 0x7f], r10b
0x2bcc:	mov	qword ptr [rsp + 0x80], r15
0x2bd4:	mov	qword ptr [rsp + 0x40], r14
0x2bd9:	mov	qword ptr [rsp + 0x70], r13
0x2bde:	mov	qword ptr [rsp + 0x30], r11
0x2be3:	mov	rax, qword ptr [rsp + 0x10]
0x2be8:	lea	r14, [rbp + rbx]
0x2bed:	mov	rdx, qword ptr [rsp + 0x30]
0x2bf2:	mov	rcx, qword ptr [rsp + 0x28]
0x2bf7:	mov	rdi, qword ptr [rsp + 0x38]
0x2bfc:	lea	r13, [rax + r14]
0x2c00:	sub	rdx, r14
0x2c03:	mov	rsi, r13
0x2c06:	call	0x4720


0x23f8:	mov	byte ptr [rsp + 0x38], r8b
0x23fd:	mov	byte ptr [rsp + 0x30], r10b
0x2402:	mov	qword ptr [rsp + 0x28], r9
0x2407:	call	0x1330


0x242e:	mov	rdx, qword ptr [rsp + 0x18]
0x2433:	mov	rsi, qword ptr [rsp + 0x48]
0x2438:	mov	rdi, r9
0x243b:	mov	qword ptr [rsp + 0x40], r11
0x2440:	mov	byte ptr [rsp + 0x38], r8b
0x2445:	mov	qword ptr [rsp + 0x30], r9
0x244a:	call	0x13d0


0x29e0:	xor	r10d, r10d
0x29e3:	jmp	0x2480


0x33c4:	mov	rdx, r15
0x33c7:	sub	rax, r15
0x33ca:	cmp	r13, rdx
0x33cd:	jbe	0x33d3


0x348c:	movzx	eax, byte ptr [rsp + 0x7c]
0x3491:	jmp	0x33ac


0x2a6f:	mov	r13, qword ptr [rsp + 0x50]
0x2a74:	lea	rbx, [rip + 0x255a]
0x2a7b:	mov	byte ptr [r14], 0x27
0x2a7f:	mov	dword ptr [rsp + 8], 2
0x2a87:	mov	r15d, 1
0x2a8d:	mov	qword ptr [rsp + 0x18], 1
0x2a96:	mov	byte ptr [rsp + 0xf], 0
0x2a9b:	mov	qword ptr [rsp + 0x48], rbx
0x2aa0:	mov	byte ptr [rsp + 0x7c], al
0x2aa4:	jmp	0x2383


0x33d3:	add	rdx, 1
0x33d7:	movzx	ecx, byte ptr [rax + rdx]
0x33db:	test	cl, cl
0x33dd:	jne	0x33ca


0x33cf:	mov	byte ptr [r14 + rdx], cl
0x33d3:	add	rdx, 1
0x33d7:	movzx	ecx, byte ptr [rax + rdx]
0x33db:	test	cl, cl
0x33dd:	jne	0x33ca


0x2383:	xor	r11d, r11d
0x2386:	mov	rax, rbp
0x2389:	mov	r8d, r12d
0x238c:	mov	rbp, r11
0x238f:	mov	r11, rax
0x2392:	nop	word ptr [rax + rax]
0x2398:	cmp	r11, rbp
0x239b:	setne	r12b
0x239f:	cmp	r11, -1
0x23a3:	jne	0x23b2


0x33df:	mov	r15, rdx
0x33e2:	cmp	r13, r15
0x33e5:	jbe	0x2e89


0x33ca:	cmp	r13, rdx
0x33cd:	jbe	0x33d3


0x244f:	test	eax, eax
0x2451:	mov	r9, qword ptr [rsp + 0x30]
0x2456:	movzx	r8d, byte ptr [rsp + 0x38]
0x245c:	mov	r11, qword ptr [rsp + 0x40]
0x2461:	jne	0x29e0


0x2467:	cmp	byte ptr [rsp + 0xf], 0
0x246c:	movzx	r10d, byte ptr [rsp + 0x28]
0x2472:	jne	0x33f5


0x33f5:	cmp	dword ptr [rsp + 8], 2
0x33fa:	movzx	ebx, byte ptr [rsp + 0xf]
0x33ff:	mov	rbp, r11
0x3402:	sete	al
0x3405:	mov	byte ptr [rsp + 0xd], bl
0x3409:	jmp	0x2e39


0x2c0b:	test	rax, rax
0x2c0e:	mov	r15, rax
0x2c11:	je	0x2c61


0x2c61:	mov	edx, r12d
0x2c64:	mov	rdi, rbx
0x2c67:	movzx	r8d, byte ptr [rsp + 0x7d]
0x2c6d:	xor	edx, 1
0x2c70:	movzx	ebx, byte ptr [rsp + 0x7e]
0x2c75:	movzx	r10d, byte ptr [rsp + 0x7f]
0x2c7b:	and	dl, byte ptr [rsp + 0xd]
0x2c7f:	mov	r15, qword ptr [rsp + 0x80]
0x2c87:	mov	r14, qword ptr [rsp + 0x40]
0x2c8c:	mov	r13, qword ptr [rsp + 0x70]
0x2c91:	mov	r11, qword ptr [rsp + 0x30]
0x2c96:	cmp	rdi, 1
0x2c9a:	jbe	0x329b


0x2c13:	cmp	rax, -1
0x2c17:	je	0x3235


0x329b:	mov	eax, edx
0x329d:	jmp	0x27f7


0x2ca0:	mov	rcx, rdi
0x2ca3:	xor	esi, esi
0x2ca5:	movzx	r9d, byte ptr [rsp + 0xf]
0x2cab:	add	rcx, rbp
0x2cae:	mov	rdi, qword ptr [rsp + 0x10]
0x2cb3:	jmp	0x2d6e


0x3235:	mov	rdi, rbx
0x3238:	movzx	r8d, byte ptr [rsp + 0x7d]
0x323e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x3243:	movzx	r10d, byte ptr [rsp + 0x7f]
0x3249:	mov	r15, qword ptr [rsp + 0x80]
0x3251:	xor	r12d, r12d
0x3254:	mov	r14, qword ptr [rsp + 0x40]
0x3259:	mov	r13, qword ptr [rsp + 0x70]
0x325e:	mov	r11, qword ptr [rsp + 0x30]
0x3263:	movzx	edx, byte ptr [rsp + 0xd]
0x3268:	jmp	0x2c96


0x2c1d:	cmp	rax, -2
0x2c21:	je	0x31c1


0x27f7:	test	al, al
0x27f9:	jne	0x3191


0x2d6e:	test	dl, dl
0x2d70:	jne	0x2cc0


0x2c96:	cmp	rdi, 1
0x2c9a:	jbe	0x329b


0x31c1:	mov	r11, qword ptr [rsp + 0x30]
0x31c6:	mov	rsi, r14
0x31c9:	mov	rcx, r13
0x31cc:	mov	rax, rbx
0x31cf:	mov	rdi, rbx
0x31d2:	movzx	r8d, byte ptr [rsp + 0x7d]
0x31d8:	movzx	ebx, byte ptr [rsp + 0x7e]
0x31dd:	mov	r9, qword ptr [rsp + 0x88]
0x31e5:	cmp	rsi, r11
0x31e8:	movzx	r10d, byte ptr [rsp + 0x7f]
0x31ee:	mov	r15, qword ptr [rsp + 0x80]
0x31f6:	mov	r14, qword ptr [rsp + 0x40]
0x31fb:	mov	r13, qword ptr [rsp + 0x70]
0x3200:	jae	0x3228


0x2c27:	cmp	dword ptr [rsp + 8], 2
0x2c2c:	sete	al
0x2c2f:	and	al, byte ptr [rsp + 0xf]
0x2c33:	jne	0x2dd0


0x27ff:	cmp	dword ptr [rsp + 8], 2
0x2804:	sete	dl
0x2807:	jmp	0x24d8


0x3191:	movzx	edx, byte ptr [rsp + 0xd]
0x3196:	xor	r12d, r12d
0x3199:	jmp	0x2ca0


0x2d76:	mov	eax, esi
0x2d78:	xor	eax, 1
0x2d7b:	and	eax, r8d
0x2d7e:	test	r10b, r10b
0x2d81:	je	0x2d91


0x2cc0:	cmp	dword ptr [rsp + 8], 2
0x2cc5:	sete	al
0x2cc8:	test	r9b, r9b
0x2ccb:	jne	0x3180


0x3202:	cmp	byte ptr [rcx], 0
0x3205:	jne	0x3217


0x3228:	movzx	edx, byte ptr [rsp + 0xd]
0x322d:	xor	r12d, r12d
0x3230:	jmp	0x2c96


0x2c39:	mov	edi, dword ptr [rsp + 0x9c]
0x2c40:	call	0x1500


0x2dd0:	cmp	r15, 1
0x2dd4:	je	0x2c39


0x24d8:	cmp	byte ptr [rsp + 0xd], 1
0x24dd:	jne	0x25f2


0x2d91:	add	rbp, 1
0x2d95:	cmp	rbp, rcx
0x2d98:	jae	0x251c


0x2d83:	cmp	r13, r15
0x2d86:	jbe	0x2d8d


0x2cd1:	mov	esi, r8d
0x2cd4:	xor	esi, 1
0x2cd7:	and	al, sil
0x2cda:	je	0x2d0b


0x3180:	movzx	ebx, byte ptr [rsp + 0xf]
0x3185:	mov	rbp, r11
0x3188:	mov	byte ptr [rsp + 0xd], bl
0x318c:	jmp	0x2e39


0x3207:	jmp	0x3228


0x3217:	add	rax, 1
0x321b:	lea	rdx, [rbp + rax]
0x3220:	cmp	r11, rdx
0x3223:	ja	0x3210


0x2dda:	mov	rdi, qword ptr [rsp + 0x10]
0x2ddf:	lea	rcx, [rdi + r15]
0x2de3:	lea	rdx, [rdi + r14 + 1]
0x2de8:	lea	r8, [rcx + r14]
0x2dec:	jmp	0x2dfd


0x24e3:	test	dl, dl
0x24e5:	jne	0x25f2


0x25f2:	cmp	byte ptr [rsp + 0xf], 0
0x25f7:	jne	0x24eb


0x2d9e:	test	al, al
0x2da0:	je	0x319e


0x251c:	test	al, al
0x251e:	je	0x2540


0x2d8d:	add	r15, 1
0x2d91:	add	rbp, 1
0x2d95:	cmp	rbp, rcx
0x2d98:	jae	0x251c


0x2d88:	mov	byte ptr [r14 + r15], 0x5c
0x2d8d:	add	r15, 1
0x2d91:	add	rbp, 1
0x2d95:	cmp	rbp, rcx
0x2d98:	jae	0x251c


0x2d0b:	cmp	r13, r15
0x2d0e:	jbe	0x2d15


0x2cdc:	cmp	r13, r15
0x2cdf:	jbe	0x2ce6


0x3225:	mov	rdi, rax
0x3228:	movzx	edx, byte ptr [rsp + 0xd]
0x322d:	xor	r12d, r12d
0x3230:	jmp	0x2c96


0x3210:	cmp	byte ptr [r9 + rax], 0
0x3215:	je	0x3225


0x2dfd:	movzx	ecx, byte ptr [rdx]
0x2e00:	sub	ecx, 0x5b
0x2e03:	cmp	cl, 0x21
0x2e06:	ja	0x2df0


0x24eb:	mov	rsi, qword ptr [rsp + 0x20]
0x24f0:	test	rsi, rsi
0x24f3:	je	0x2509


0x25fd:	jmp	0x2509


0x319e:	xor	r10d, r10d
0x31a1:	jmp	0x2d5d


0x2da6:	cmp	r13, r15
0x2da9:	jbe	0x2db0


0x2540:	cmp	r15, r13
0x2543:	jae	0x2549


0x2520:	cmp	r13, r15
0x2523:	jbe	0x252a


0x2d15:	lea	rax, [r15 + 1]
0x2d19:	cmp	r13, rax
0x2d1c:	jbe	0x2d2b


0x2d10:	mov	byte ptr [r14 + r15], 0x5c
0x2d15:	lea	rax, [r15 + 1]
0x2d19:	cmp	r13, rax
0x2d1c:	jbe	0x2d2b


0x2ce6:	lea	rsi, [r15 + 1]
0x2cea:	cmp	r13, rsi
0x2ced:	jbe	0x2cf5


0x2ce1:	mov	byte ptr [r14 + r15], 0x27
0x2ce6:	lea	rsi, [r15 + 1]
0x2cea:	cmp	r13, rsi
0x2ced:	jbe	0x2cf5


0x2e08:	mov	esi, 1
0x2e0d:	shl	rsi, cl
0x2e10:	mov	rcx, rsi
0x2e13:	movabs	rsi, 0x20000002b
0x2e1d:	test	rcx, rsi
0x2e20:	je	0x2df0


0x2df0:	add	rdx, 1
0x2df4:	cmp	r8, rdx
0x2df7:	je	0x2c39


0x2509:	test	r10b, r10b
0x250c:	jne	0x2653


0x24f5:	mov	edx, ebx
0x24f7:	shr	dl, 5
0x24fa:	movzx	edx, dl
0x24fd:	mov	edx, dword ptr [rsi + rdx*4]
0x2500:	bt	edx, ebx
0x2503:	jb	0x2653


0x2d5d:	cmp	r13, r15
0x2d60:	jbe	0x2d66


0x2db0:	lea	rax, [r15 + 1]
0x2db4:	cmp	r13, rax
0x2db7:	jbe	0x2dbf


0x2dab:	mov	byte ptr [r14 + r15], 0x27
0x2db0:	lea	rax, [r15 + 1]
0x2db4:	cmp	r13, rax
0x2db7:	jbe	0x2dbf


0x2545:	mov	byte ptr [r14 + r15], bl
0x2549:	movzx	edi, byte ptr [rsp + 0xe]
0x254e:	add	r15, 1
0x2552:	mov	eax, 0
0x2557:	test	r12b, r12b
0x255a:	cmove	edi, eax
0x255d:	mov	byte ptr [rsp + 0xe], dil
0x2562:	jmp	0x2398


0x2549:	movzx	edi, byte ptr [rsp + 0xe]
0x254e:	add	r15, 1
0x2552:	mov	eax, 0
0x2557:	test	r12b, r12b
0x255a:	cmove	edi, eax
0x255d:	mov	byte ptr [rsp + 0xe], dil
0x2562:	jmp	0x2398


0x252a:	lea	rax, [r15 + 1]
0x252e:	cmp	r13, rax
0x2531:	jbe	0x2539


0x2525:	mov	byte ptr [r14 + r15], 0x27
0x252a:	lea	rax, [r15 + 1]
0x252e:	cmp	r13, rax
0x2531:	jbe	0x2539


0x2d2b:	lea	rax, [r15 + 2]
0x2d2f:	cmp	r13, rax
0x2d32:	jbe	0x2d44


0x2d1e:	mov	eax, ebx
0x2d20:	shr	al, 6
0x2d23:	add	eax, 0x30
0x2d26:	mov	byte ptr [r14 + r15 + 1], al
0x2d2b:	lea	rax, [r15 + 2]
0x2d2f:	cmp	r13, rax
0x2d32:	jbe	0x2d44


0x2cf5:	lea	rsi, [r15 + 2]
0x2cf9:	cmp	r13, rsi
0x2cfc:	jbe	0x2d04


0x2cef:	mov	byte ptr [r14 + r15 + 1], 0x24
0x2cf5:	lea	rsi, [r15 + 2]
0x2cf9:	cmp	r13, rsi
0x2cfc:	jbe	0x2d04


0x2e22:	mov	r14, qword ptr [rsp + 0x40]
0x2e27:	mov	r13, qword ptr [rsp + 0x70]
0x2e2c:	mov	rbp, qword ptr [rsp + 0x30]
0x2e31:	mov	dword ptr [rsp + 8], 2
0x2e39:	cmp	byte ptr [rsp + 0xd], 0
0x2e3e:	je	0x2e50


0x2512:	xor	eax, 1
0x2515:	add	rbp, 1
0x2519:	and	eax, r8d
0x251c:	test	al, al
0x251e:	je	0x2540


0x2653:	cmp	dword ptr [rsp + 8], 2
0x2658:	sete	dl
0x265b:	cmp	byte ptr [rsp + 0xf], 0
0x2660:	mov	eax, edx
0x2662:	jne	0x2eb8


0x2d66:	movzx	ebx, byte ptr [rdi + rbp]
0x2d6a:	add	r15, 1
0x2d6e:	test	dl, dl
0x2d70:	jne	0x2cc0


0x2d62:	mov	byte ptr [r14 + r15], bl
0x2d66:	movzx	ebx, byte ptr [rdi + rbp]
0x2d6a:	add	r15, 1
0x2d6e:	test	dl, dl
0x2d70:	jne	0x2cc0


0x2dbf:	add	r15, 2
0x2dc3:	xor	r10d, r10d
0x2dc6:	xor	r8d, r8d
0x2dc9:	jmp	0x2d5d


0x2db9:	mov	byte ptr [r14 + r15 + 1], 0x27
0x2dbf:	add	r15, 2
0x2dc3:	xor	r10d, r10d
0x2dc6:	xor	r8d, r8d
0x2dc9:	jmp	0x2d5d


0x2398:	cmp	r11, rbp
0x239b:	setne	r12b
0x239f:	cmp	r11, -1
0x23a3:	jne	0x23b2


0x2539:	add	r15, 2
0x253d:	xor	r8d, r8d
0x2540:	cmp	r15, r13
0x2543:	jae	0x2549


0x2533:	mov	byte ptr [r14 + r15 + 1], 0x27
0x2539:	add	r15, 2
0x253d:	xor	r8d, r8d
0x2540:	cmp	r15, r13
0x2543:	jae	0x2549


0x2d44:	and	ebx, 7
0x2d47:	add	rbp, 1
0x2d4b:	add	r15, 3
0x2d4f:	add	ebx, 0x30
0x2d52:	cmp	rbp, rcx
0x2d55:	jae	0x2540


0x2d34:	mov	eax, ebx
0x2d36:	shr	al, 3
0x2d39:	and	eax, 7
0x2d3c:	add	eax, 0x30
0x2d3f:	mov	byte ptr [r14 + r15 + 2], al
0x2d44:	and	ebx, 7
0x2d47:	add	rbp, 1
0x2d4b:	add	r15, 3
0x2d4f:	add	ebx, 0x30
0x2d52:	cmp	rbp, rcx
0x2d55:	jae	0x2540


0x2d04:	add	r15, 3
0x2d08:	mov	r8d, eax
0x2d0b:	cmp	r13, r15
0x2d0e:	jbe	0x2d15


0x2cfe:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2d04:	add	r15, 3
0x2d08:	mov	r8d, eax
0x2d0b:	cmp	r13, r15
0x2d0e:	jbe	0x2d15


0x2668:	mov	eax, r8d
0x266b:	xor	eax, 1
0x266e:	and	al, dl
0x2670:	je	0x26a1


0x2eb8:	mov	rbp, r11
0x2ebb:	jmp	0x2e39


0x2d5b:	mov	esi, edx
0x2d5d:	cmp	r13, r15
0x2d60:	jbe	0x2d66


0x26a1:	cmp	r13, r15
0x26a4:	jbe	0x26ab


0x2672:	cmp	r13, r15
0x2675:	jbe	0x267c


0x26ab:	add	r15, 1
0x26af:	add	rbp, 1
0x26b3:	jmp	0x2540


0x26a6:	mov	byte ptr [r14 + r15], 0x5c
0x26ab:	add	r15, 1
0x26af:	add	rbp, 1
0x26b3:	jmp	0x2540


0x267c:	lea	rdx, [r15 + 1]
0x2680:	cmp	r13, rdx
0x2683:	jbe	0x268b


0x2677:	mov	byte ptr [r14 + r15], 0x27
0x267c:	lea	rdx, [r15 + 1]
0x2680:	cmp	r13, rdx
0x2683:	jbe	0x268b


0x268b:	lea	rdx, [r15 + 2]
0x268f:	cmp	r13, rdx
0x2692:	jbe	0x269a


0x2685:	mov	byte ptr [r14 + r15 + 1], 0x24
0x268b:	lea	rdx, [r15 + 2]
0x268f:	cmp	r13, rdx
0x2692:	jbe	0x269a


0x269a:	add	r15, 3
0x269e:	mov	r8d, eax
0x26a1:	cmp	r13, r15
0x26a4:	jbe	0x26ab


0x2694:	mov	byte ptr [r14 + r15 + 2], 0x27
0x269a:	add	r15, 3
0x269e:	mov	r8d, eax
0x26a1:	cmp	r13, r15
0x26a4:	jbe	0x26ab


0x2c45:	mov	rdi, qword ptr [rsp + 0x28]
0x2c4a:	test	eax, eax
0x2c4c:	mov	eax, 0
0x2c51:	cmove	r12d, eax
0x2c55:	add	rbx, r15
0x2c58:	call	0x14f0


0x2c5d:	test	eax, eax
0x2c5f:	je	0x2be3


0x2be3:	mov	rax, qword ptr [rsp + 0x10]
0x2be8:	lea	r14, [rbp + rbx]
0x2bed:	mov	rdx, qword ptr [rsp + 0x30]
0x2bf2:	mov	rcx, qword ptr [rsp + 0x28]
0x2bf7:	mov	rdi, qword ptr [rsp + 0x38]
0x2bfc:	lea	r13, [rax + r14]
0x2c00:	sub	rdx, r14
0x2c03:	mov	rsi, r13
0x2c06:	call	0x4720


0x240c:	movzx	r8d, byte ptr [rsp + 0x38]
0x2412:	movzx	r10d, byte ptr [rsp + 0x30]
0x2418:	mov	r11, rax
0x241b:	mov	r9, qword ptr [rsp + 0x28]
0x2420:	cmp	rbx, r11
0x2423:	mov	byte ptr [rsp + 0x28], r10b
0x2428:	ja	0x29e0


0x2b90:	movzx	r8d, byte ptr [rsp + 0x40]
0x2b96:	movzx	r10d, byte ptr [rsp + 0x38]
0x2b9c:	mov	r11, rax
0x2b9f:	mov	r9, qword ptr [rsp + 0x30]
0x2ba4:	lea	rax, [rsp + 0x9c]
0x2bac:	xor	ecx, ecx
0x2bae:	mov	byte ptr [rsp + 0x7e], bl
0x2bb2:	mov	byte ptr [rsp + 0x7d], r8b
0x2bb7:	mov	rbx, rcx
0x2bba:	mov	qword ptr [rsp + 0x88], r9
0x2bc2:	mov	qword ptr [rsp + 0x38], rax
0x2bc7:	mov	byte ptr [rsp + 0x7f], r10b
0x2bcc:	mov	qword ptr [rsp + 0x80], r15
0x2bd4:	mov	qword ptr [rsp + 0x40], r14
0x2bd9:	mov	qword ptr [rsp + 0x70], r13
0x2bde:	mov	qword ptr [rsp + 0x30], r11
0x2be3:	mov	rax, qword ptr [rsp + 0x10]
0x2be8:	lea	r14, [rbp + rbx]
0x2bed:	mov	rdx, qword ptr [rsp + 0x30]
0x2bf2:	mov	rcx, qword ptr [rsp + 0x28]
0x2bf7:	mov	rdi, qword ptr [rsp + 0x38]
0x2bfc:	lea	r13, [rax + r14]
0x2c00:	sub	rdx, r14
0x2c03:	mov	rsi, r13
0x2c06:	call	0x4720


0x27c8:	mov	rcx, qword ptr [rax]
0x27cb:	movzx	edx, bl
0x27ce:	movzx	r10d, byte ptr [rsp + 0x28]
0x27d4:	movzx	r8d, byte ptr [rsp + 0x30]
0x27da:	mov	r11, qword ptr [rsp + 0x38]
0x27df:	mov	edi, 1
0x27e4:	movzx	eax, word ptr [rcx + rdx*2]
0x27e8:	and	ax, 0x4000
0x27ec:	setne	r12b
0x27f0:	sete	al
0x27f3:	and	al, byte ptr [rsp + 0xd]
0x27f7:	test	al, al
0x27f9:	jne	0x3191


0x24a0:	xor	r10d, r10d
0x24a3:	cmp	r11, 1
0x24a7:	setne	al
0x24aa:	cmp	r11, -1
0x24ae:	jne	0x24bc


0x24b0:	mov	rax, qword ptr [rsp + 0x10]
0x24b5:	cmp	byte ptr [rax + 1], 0
0x24b9:	setne	al
0x24bc:	cmp	dword ptr [rsp + 8], 2
0x24c1:	sete	dl
0x24c4:	test	al, al
0x24c6:	je	0x2718


0x24bc:	cmp	dword ptr [rsp + 8], 2
0x24c1:	sete	dl
0x24c4:	test	al, al
0x24c6:	je	0x2718


0x2718:	test	rbp, rbp
0x271b:	jne	0x24cc


0x24cc:	xor	r12d, r12d
0x24cf:	xor	eax, eax
0x24d1:	nop	dword ptr [rax]
0x24d8:	cmp	byte ptr [rsp + 0xd], 1
0x24dd:	jne	0x25f2


0x2721:	movzx	eax, byte ptr [rsp + 0xf]
0x2726:	and	al, dl
0x2728:	je	0x24d8


0x272e:	mov	rbp, r11
0x2731:	mov	dword ptr [rsp + 8], 2
0x2739:	jmp	0x2e39


0x2b38:	cmp	byte ptr [rsp + 0xf], 0
0x2b3d:	jne	0x3360


0x2580:	cmp	eax, 5
0x2583:	je	0x2af8


0x2b43:	xor	r12d, r12d
0x2b46:	xor	eax, eax
0x2b48:	mov	ebx, 0x3f
0x2b4d:	jmp	0x2509


0x3360:	mov	rbp, r11
0x3363:	movzx	eax, byte ptr [rsp + 0xf]
0x3368:	jmp	0x2e39


0x2af8:	test	byte ptr [rsp + 0x78], 4
0x2afd:	je	0x2b20


0x2589:	cmp	eax, 2
0x258c:	mov	ebx, 0x3f
0x2591:	sete	dl
0x2594:	xor	r12d, r12d
0x2597:	xor	eax, eax
0x2599:	jmp	0x24d8


0x2b20:	xor	edx, edx
0x2b22:	xor	r12d, r12d
0x2b25:	xor	eax, eax
0x2b27:	mov	ebx, 0x3f
0x2b2c:	jmp	0x24d8


0x2aff:	lea	rcx, [rbp + 2]
0x2b03:	cmp	rcx, r11
0x2b06:	jae	0x2b20


0x2b08:	mov	rax, qword ptr [rsp + 0x10]
0x2b0d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x2b12:	je	0x32a2


0x32a2:	movzx	ebx, byte ptr [rax + rcx]
0x32a6:	cmp	bl, 0x3e
0x32a9:	ja	0x2b20


0x32af:	movabs	rax, 0x7000a38200000000
0x32b9:	bt	rax, rbx
0x32bd:	jae	0x2b20


0x32c3:	cmp	byte ptr [rsp + 0xf], 0
0x32c8:	jne	0x34b2


0x32ce:	cmp	r13, r15
0x32d1:	jbe	0x32d8


0x34b2:	mov	rbp, r11
0x34b5:	jmp	0x2e50


0x32d8:	lea	rax, [r15 + 1]
0x32dc:	cmp	r13, rax
0x32df:	jbe	0x32e7


0x32d3:	mov	byte ptr [r14 + r15], 0x3f
0x32d8:	lea	rax, [r15 + 1]
0x32dc:	cmp	r13, rax
0x32df:	jbe	0x32e7


0x32e7:	lea	rax, [r15 + 2]
0x32eb:	cmp	r13, rax
0x32ee:	jbe	0x32f6


0x32e1:	mov	byte ptr [r14 + r15 + 1], 0x22
0x32e7:	lea	rax, [r15 + 2]
0x32eb:	cmp	r13, rax
0x32ee:	jbe	0x32f6


0x32f6:	lea	rax, [r15 + 3]
0x32fa:	cmp	r13, rax
0x32fd:	jbe	0x3305


0x32f0:	mov	byte ptr [r14 + r15 + 2], 0x22
0x32f6:	lea	rax, [r15 + 3]
0x32fa:	cmp	r13, rax
0x32fd:	jbe	0x3305


0x3305:	add	r15, 4
0x3309:	xor	edx, edx
0x330b:	xor	r12d, r12d
0x330e:	xor	eax, eax
0x3310:	mov	rbp, rcx
0x3313:	jmp	0x24d8


0x32ff:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x3305:	add	r15, 4
0x3309:	xor	edx, edx
0x330b:	xor	r12d, r12d
0x330e:	xor	eax, eax
0x3310:	mov	rbp, rcx
0x3313:	jmp	0x24d8


0x2ab0:	cmp	byte ptr [rsp + 0xf], 0
0x2ab5:	jne	0x3360


0x25ae:	mov	byte ptr [rsp + 0x7c], r12b
0x25b3:	xor	edx, edx
0x25b5:	xor	eax, eax
0x25b7:	mov	ebx, 0x27
0x25bc:	jmp	0x24d8


0x2abb:	test	r13, r13
0x2abe:	je	0x2ec0


0x2ec0:	cmp	r13, r15
0x2ec3:	jbe	0x2eca


0x2ac4:	xor	edx, edx
0x2ac6:	cmp	qword ptr [rsp + 0x50], 0
0x2acc:	jne	0x2ec0


0x2eca:	lea	rax, [r15 + 1]
0x2ece:	cmp	r13, rax
0x2ed1:	jbe	0x2ed9


0x2ec5:	mov	byte ptr [r14 + r15], 0x27
0x2eca:	lea	rax, [r15 + 1]
0x2ece:	cmp	r13, rax
0x2ed1:	jbe	0x2ed9


0x2ad2:	mov	qword ptr [rsp + 0x50], r13
0x2ad7:	add	r15, 3
0x2adb:	xor	eax, eax
0x2add:	mov	byte ptr [rsp + 0x7c], r12b
0x2ae2:	xor	r8d, r8d
0x2ae5:	mov	r13, rdx
0x2ae8:	mov	ebx, 0x27
0x2aed:	jmp	0x2509


0x2ed9:	lea	rax, [r15 + 2]
0x2edd:	cmp	r13, rax
0x2ee0:	jbe	0x34d2


0x2ed3:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x2ed9:	lea	rax, [r15 + 2]
0x2edd:	cmp	r13, rax
0x2ee0:	jbe	0x34d2


0x34d2:	mov	rdx, r13
0x34d5:	mov	r13, qword ptr [rsp + 0x50]
0x34da:	jmp	0x2ad2


0x2ee6:	mov	rdx, r13
0x2ee9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2eef:	mov	r13, qword ptr [rsp + 0x50]
0x2ef4:	jmp	0x2ad2


0x25e4:	cmp	byte ptr [rsp + 0xd], 0
0x25e9:	jne	0x2650


0x25eb:	mov	ebx, edx
0x25ed:	xor	r12d, r12d
0x25f0:	xor	eax, eax
0x25f2:	cmp	byte ptr [rsp + 0xf], 0
0x25f7:	jne	0x24eb


0x2650:	xor	r12d, r12d
0x2653:	cmp	dword ptr [rsp + 8], 2
0x2658:	sete	dl
0x265b:	cmp	byte ptr [rsp + 0xf], 0
0x2660:	mov	eax, edx
0x2662:	jne	0x2eb8


0x29f0:	cmp	byte ptr [rsp + 0xf], 0
0x29f5:	jne	0x3360


0x2623:	cmp	byte ptr [rsp + 0xd], 0
0x2628:	je	0x2840


0x29fb:	add	rbp, 1
0x29ff:	mov	eax, r8d
0x2a02:	xor	r12d, r12d
0x2a05:	mov	ebx, 0x5c
0x2a0a:	jmp	0x251c


0x2840:	mov	edx, 0x5c
0x2845:	mov	ebx, 0x5c
0x284a:	jmp	0x25e4


0x262e:	cmp	byte ptr [rsp + 0xf], 0
0x2633:	je	0x2840


0x2639:	cmp	qword ptr [rsp + 0x18], 0
0x263f:	jne	0x29fb


0x2645:	mov	ebx, 0x5c
0x264a:	nop	word ptr [rax + rax]
0x2650:	xor	r12d, r12d
0x2653:	cmp	dword ptr [rsp + 8], 2
0x2658:	sete	dl
0x265b:	cmp	byte ptr [rsp + 0xf], 0
0x2660:	mov	eax, edx
0x2662:	jne	0x2eb8


0x26cb:	xor	edx, edx
0x26cd:	test	byte ptr [rsp + 0x78], 1
0x26d2:	je	0x25eb


0x2893:	cmp	dword ptr [rsp + 8], 2
0x2898:	sete	dl
0x289b:	cmp	byte ptr [rsp + 0xf], 0
0x28a0:	jne	0x343a


0x26d8:	add	rbp, 1
0x26dc:	jmp	0x2398


0x28a6:	mov	eax, r8d
0x28a9:	mov	rcx, r15
0x28ac:	xor	eax, 1
0x28af:	and	al, dl
0x28b1:	je	0x28e0


0x343a:	movzx	ebx, byte ptr [rsp + 0xf]
0x343f:	mov	rbp, r11
0x3442:	mov	eax, edx
0x3444:	mov	byte ptr [rsp + 0xd], bl
0x3448:	jmp	0x2e39


0x28e0:	cmp	r13, rcx
0x28e3:	jbe	0x28ea


0x28b3:	cmp	r13, r15
0x28b6:	jbe	0x28bd


0x28ea:	cmp	dword ptr [rsp + 8], 2
0x28ef:	lea	r15, [rcx + 1]
0x28f3:	je	0x2ef9


0x28e5:	mov	byte ptr [r14 + rcx], 0x5c
0x28ea:	cmp	dword ptr [rsp + 8], 2
0x28ef:	lea	r15, [rcx + 1]
0x28f3:	je	0x2ef9


0x28bd:	lea	rcx, [r15 + 1]
0x28c1:	cmp	r13, rcx
0x28c4:	jbe	0x28cc


0x28b8:	mov	byte ptr [r14 + r15], 0x27
0x28bd:	lea	rcx, [r15 + 1]
0x28c1:	cmp	r13, rcx
0x28c4:	jbe	0x28cc


0x2ef9:	mov	eax, r12d
0x2efc:	mov	ebx, 0x30
0x2f01:	xor	r12d, r12d
0x2f04:	jmp	0x2509


0x28f9:	lea	rax, [rbp + 1]
0x28fd:	cmp	rax, r11
0x2900:	jae	0x291b


0x28cc:	lea	rcx, [r15 + 2]
0x28d0:	cmp	r13, rcx
0x28d3:	ja	0x2f09


0x28c6:	mov	byte ptr [r14 + r15 + 1], 0x24
0x28cc:	lea	rcx, [r15 + 2]
0x28d0:	cmp	r13, rcx
0x28d3:	ja	0x2f09


0x2902:	mov	rax, qword ptr [rsp + 0x10]
0x2907:	movzx	eax, byte ptr [rax + rbp + 1]
0x290c:	mov	byte ptr [rsp + 0x28], al
0x2910:	sub	eax, 0x30
0x2913:	cmp	al, 9
0x2915:	jbe	0x3149


0x291b:	mov	eax, r12d
0x291e:	mov	ebx, 0x30
0x2923:	xor	r12d, r12d
0x2926:	jmp	0x24d8


0x28d9:	lea	rcx, [r15 + 3]
0x28dd:	mov	r8d, eax
0x28e0:	cmp	r13, rcx
0x28e3:	jbe	0x28ea


0x2f09:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2f0f:	jmp	0x28d9


0x3149:	cmp	r13, r15
0x314c:	jbe	0x3153


0x3153:	lea	rax, [rcx + 2]
0x3157:	cmp	r13, rax
0x315a:	jbe	0x3162


0x314e:	mov	byte ptr [r14 + r15], 0x30
0x3153:	lea	rax, [rcx + 2]
0x3157:	cmp	r13, rax
0x315a:	jbe	0x3162


0x3162:	mov	eax, r12d
0x3165:	lea	r15, [rcx + 3]
0x3169:	xor	r12d, r12d
0x316c:	mov	ebx, 0x30
0x3171:	jmp	0x24d8


0x315c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x3162:	mov	eax, r12d
0x3165:	lea	r15, [rcx + 3]
0x3169:	xor	r12d, r12d
0x316c:	mov	ebx, 0x30
0x3171:	jmp	0x24d8


0x25d2:	cmp	dword ptr [rsp + 8], 2
0x25d7:	sete	al
0x25da:	and	al, byte ptr [rsp + 0xf]
0x25de:	jne	0x272e


0x2990:	mov	edx, 0xd
0x2995:	xor	r10d, r10d
0x2998:	mov	ebx, 0x72
0x299d:	jmp	0x25d2


0x2f14:	test	ebx, ebx
0x2f16:	jne	0x2343


0x2f1c:	mov	byte ptr [rsp + 0xd], 1
0x2f21:	test	r13, r13
0x2f24:	jne	0x34ba


0x2f2a:	lea	rax, [rip + 0x20a4]
0x2f31:	mov	qword ptr [rsp + 0x50], 0
0x2f3a:	mov	byte ptr [rsp + 0xe], 1
0x2f3f:	mov	byte ptr [rsp + 0x7c], 0
0x2f44:	xor	r12d, r12d
0x2f47:	mov	byte ptr [rsp + 0xf], 0
0x2f4c:	mov	qword ptr [rsp + 0x18], 1
0x2f55:	mov	qword ptr [rsp + 0x48], rax
0x2f5a:	mov	r15d, 1
0x2f60:	mov	dword ptr [rsp + 8], 2
0x2f68:	jmp	0x2383


0x34ba:	mov	byte ptr [rsp + 0xe], 1
0x34bf:	xor	eax, eax
0x34c1:	xor	r12d, r12d
0x34c4:	mov	qword ptr [rsp + 0x50], 0
0x34cd:	jmp	0x2a74


0x2a74:	lea	rbx, [rip + 0x255a]
0x2a7b:	mov	byte ptr [r14], 0x27
0x2a7f:	mov	dword ptr [rsp + 8], 2
0x2a87:	mov	r15d, 1
0x2a8d:	mov	qword ptr [rsp + 0x18], 1
0x2a96:	mov	byte ptr [rsp + 0xf], 0
0x2a9b:	mov	qword ptr [rsp + 0x48], rbx
0x2aa0:	mov	byte ptr [rsp + 0x7c], al
0x2aa4:	jmp	0x2383


0x2f78:	test	r13, r13
0x2f7b:	je	0x31a6


0x336d:	lea	rax, [rip + 0x1c5f]
0x3374:	mov	byte ptr [rsp + 0xe], 1
0x3379:	mov	byte ptr [rsp + 0x7c], 0
0x337e:	xor	r12d, r12d
0x3381:	mov	qword ptr [rsp + 0x50], 0
0x338a:	mov	byte ptr [rsp + 0xf], 1
0x338f:	mov	byte ptr [rsp + 0xd], 1
0x3394:	mov	qword ptr [rsp + 0x18], 1
0x339d:	xor	r15d, r15d
0x33a0:	mov	qword ptr [rsp + 0x48], rax
0x33a5:	jmp	0x2383


0x31a6:	mov	qword ptr [rsp + 0x50], 0
0x31af:	mov	byte ptr [rsp + 0xe], 1
0x31b4:	xor	r12d, r12d
0x31b7:	mov	byte ptr [rsp + 0x7c], 0
0x31bc:	jmp	0x2f9b


0x2f81:	mov	byte ptr [r14], 0x22
0x2f85:	mov	byte ptr [rsp + 0xe], 1
0x2f8a:	xor	r12d, r12d
0x2f8d:	mov	byte ptr [rsp + 0x7c], 0
0x2f92:	mov	qword ptr [rsp + 0x50], 0
0x2f9b:	lea	rax, [rip + 0x2031]
0x2fa2:	mov	byte ptr [rsp + 0xf], 0
0x2fa7:	mov	byte ptr [rsp + 0xd], 1
0x2fac:	mov	qword ptr [rsp + 0x18], 1
0x2fb5:	mov	r15d, 1
0x2fbb:	mov	qword ptr [rsp + 0x48], rax
0x2fc0:	jmp	0x2383


0x2f9b:	lea	rax, [rip + 0x2031]
0x2fa2:	mov	byte ptr [rsp + 0xf], 0
0x2fa7:	mov	byte ptr [rsp + 0xd], 1
0x2fac:	mov	qword ptr [rsp + 0x18], 1
0x2fb5:	mov	r15d, 1
0x2fbb:	mov	qword ptr [rsp + 0x48], rax
0x2fc0:	jmp	0x2383


0x2fc5:	lea	rax, [rip + 0x2007]
0x2fcc:	mov	byte ptr [rsp + 0xe], 1
0x2fd1:	mov	byte ptr [rsp + 0x7c], 0
0x2fd6:	xor	r12d, r12d
0x2fd9:	mov	qword ptr [rsp + 0x50], 0
0x2fe2:	mov	byte ptr [rsp + 0xf], 1
0x2fe7:	mov	byte ptr [rsp + 0xd], 1
0x2fec:	mov	qword ptr [rsp + 0x18], 1
0x2ff5:	xor	r15d, r15d
0x2ff8:	mov	qword ptr [rsp + 0x48], rax
0x2ffd:	mov	dword ptr [rsp + 8], 5
0x3005:	jmp	0x2383


0x300a:	mov	byte ptr [rsp + 0xe], 1
0x300f:	mov	byte ptr [rsp + 0x7c], 0
0x3014:	xor	r12d, r12d
0x3017:	mov	qword ptr [rsp + 0x50], 0
0x3020:	mov	byte ptr [rsp + 0xf], 0
0x3025:	xor	r15d, r15d
0x3028:	mov	byte ptr [rsp + 0xd], 1
0x302d:	mov	qword ptr [rsp + 0x18], 0
0x3036:	mov	qword ptr [rsp + 0x48], 0
0x303f:	jmp	0x2383


0x3044:	cmp	dword ptr [rsp + 8], 0xa
0x3049:	je	0x30a1


0x30a1:	xor	r15d, r15d
0x30a4:	test	ebx, ebx
0x30a6:	je	0x326d


0x304b:	lea	rsi, [rip + 0x1f85]
0x3052:	xor	edi, edi
0x3054:	mov	edx, 5
0x3059:	call	0x1310


0x326d:	mov	rdx, qword ptr [rsp + 0x68]
0x3272:	movzx	eax, byte ptr [rdx]
0x3275:	test	al, al
0x3277:	je	0x30ac


0x30ac:	test	ebx, ebx
0x30ae:	mov	rbx, qword ptr [rsp + 0x60]
0x30b3:	setne	byte ptr [rsp + 0xf]
0x30b8:	xor	r12d, r12d
0x30bb:	mov	rdi, rbx
0x30be:	call	0x1330


0x3289:	add	r15, 1
0x328d:	movzx	eax, byte ptr [rdx + r15]
0x3292:	test	al, al
0x3294:	jne	0x3280


0x3285:	mov	byte ptr [r14 + r15], al
0x3289:	add	r15, 1
0x328d:	movzx	eax, byte ptr [rdx + r15]
0x3292:	test	al, al
0x3294:	jne	0x3280


0x3296:	jmp	0x30ac


0x3280:	cmp	r13, r15
0x3283:	jbe	0x3289


0x30c3:	mov	qword ptr [rsp + 0x48], rbx
0x30c8:	mov	qword ptr [rsp + 0x18], rax
0x30cd:	mov	byte ptr [rsp + 0xe], 1
0x30d2:	mov	byte ptr [rsp + 0x7c], 0
0x30d7:	mov	qword ptr [rsp + 0x50], 0
0x30e0:	mov	byte ptr [rsp + 0xd], 1
0x30e5:	jmp	0x2383


0x305e:	mov	rcx, rax
0x3061:	mov	qword ptr [rsp + 0x68], rax
0x3066:	lea	rax, [rip + 0x1f6a]
0x306d:	cmp	rcx, rax
0x3070:	je	0x340e


0x340e:	mov	esi, dword ptr [rsp + 8]
0x3412:	mov	rdi, rcx
0x3415:	call	0x21c0


0x3076:	lea	rsi, [rip + 0x1f58]
0x307d:	xor	edi, edi
0x307f:	mov	edx, 5
0x3084:	call	0x1310


0x3089:	mov	rcx, rax
0x308c:	mov	qword ptr [rsp + 0x60], rax
0x3091:	lea	rax, [rip + 0x1f3d]
0x3098:	cmp	rcx, rax
0x309b:	je	0x3424


0x3424:	mov	esi, dword ptr [rsp + 8]
0x3428:	mov	rdi, rcx
0x342b:	call	0x21c0


0x3430:	mov	qword ptr [rsp + 0x60], rax
0x3435:	jmp	0x30a1


0x341a:	mov	qword ptr [rsp + 0x68], rax
0x341f:	jmp	0x3076


0x30ea:	mov	byte ptr [rsp + 0xe], 1
0x30ef:	mov	byte ptr [rsp + 0x7c], 0
0x30f4:	xor	r12d, r12d
0x30f7:	mov	qword ptr [rsp + 0x50], 0
0x3100:	mov	byte ptr [rsp + 0xf], 0
0x3105:	xor	r15d, r15d
0x3108:	mov	byte ptr [rsp + 0xd], 0
0x310d:	mov	qword ptr [rsp + 0x18], 0
0x3116:	mov	qword ptr [rsp + 0x48], 0
0x311f:	jmp	0x2383


0x3124:	mov	byte ptr [rsp + 0xe], 1
0x3129:	mov	byte ptr [rsp + 0x7c], 0
0x312e:	xor	r12d, r12d
0x3131:	mov	qword ptr [rsp + 0x50], 0
0x313a:	mov	byte ptr [rsp + 0xf], 1
0x313f:	mov	byte ptr [rsp + 0xd], 1
0x3144:	jmp	0x2363


0x2363:	lea	rax, [rip + 0x2c6b]
0x236a:	mov	qword ptr [rsp + 0x18], 1
0x2373:	xor	r15d, r15d
0x2376:	mov	dword ptr [rsp + 8], 2
0x237e:	mov	qword ptr [rsp + 0x48], rax
0x2383:	xor	r11d, r11d
0x2386:	mov	rax, rbp
0x2389:	mov	r8d, r12d
0x238c:	mov	rbp, r11
0x238f:	mov	r11, rax
0x2392:	nop	word ptr [rax + rax]
0x2398:	cmp	r11, rbp
0x239b:	setne	r12b
0x239f:	cmp	r11, -1
0x23a3:	jne	0x23b2


0x3318:	test	ebx, ebx
0x331a:	je	0x34a8


0x34a8:	mov	byte ptr [rsp + 0xd], 0
0x34ad:	jmp	0x2f21


0x3320:	lea	rax, [rip + 0x1cae]
0x3327:	mov	byte ptr [rsp + 0xe], 1
0x332c:	mov	byte ptr [rsp + 0x7c], 0
0x3331:	xor	r12d, r12d
0x3334:	mov	qword ptr [rsp + 0x50], 0
0x333d:	mov	byte ptr [rsp + 0xf], 1
0x3342:	mov	byte ptr [rsp + 0xd], 0
0x3347:	mov	qword ptr [rsp + 0x18], 1
0x3350:	xor	r15d, r15d
0x3353:	mov	qword ptr [rsp + 0x48], rax
0x3358:	jmp	0x2383


0x2f21:	test	r13, r13
0x2f24:	jne	0x34ba


0x34e4:	nop	
0x34e6:	nop	word ptr cs:[rax + rax]


0x369b:	nop	dword ptr [rax + rax]


0x36d6:	nop	word ptr cs:[rax + rax]


0x36f1:	nop	dword ptr [rax + rax]
0x36f6:	nop	word ptr cs:[rax + rax]


0x3711:	nop	dword ptr [rax + rax]
0x3716:	nop	word ptr cs:[rax + rax]


0x3755:	nop	
0x3756:	nop	word ptr cs:[rax + rax]


0x3775:	nop	
0x3776:	nop	word ptr cs:[rax + rax]


0x3824:	nop	
0x3826:	nop	word ptr cs:[rax + rax]


0x3913:	nop	dword ptr [rax]
0x3916:	nop	word ptr cs:[rax + rax]


0x392a:	nop	word ptr [rax + rax]


0x39c3:	nop	dword ptr [rax]
0x39c6:	nop	word ptr cs:[rax + rax]


0x39e3:	nop	dword ptr [rax]
0x39e6:	nop	word ptr cs:[rax + rax]


0x39fc:	nop	dword ptr [rax]


0x3a18:	nop	dword ptr [rax + rax]


0x3a34:	nop	
0x3a36:	nop	word ptr cs:[rax + rax]


0x3ace:	nop	


0x3b5a:	nop	word ptr [rax + rax]


0x3b6c:	nop	dword ptr [rax]


0x3b7f:	nop	


0x3c18:	nop	dword ptr [rax + rax]


0x3c41:	nop	dword ptr [rax + rax]
0x3c46:	nop	word ptr cs:[rax + rax]


0x3c5a:	nop	word ptr [rax + rax]


0x3cee:	nop	


0x3d81:	nop	dword ptr [rax + rax]
0x3d86:	nop	word ptr cs:[rax + rax]


0x3d9c:	nop	dword ptr [rax]


0x3db7:	nop	word ptr [rax + rax]


0x3dd3:	nop	dword ptr [rax]
0x3dd6:	nop	word ptr cs:[rax + rax]


0x3dec:	nop	dword ptr [rax]


0x3e04:	nop	
0x3e06:	nop	word ptr cs:[rax + rax]


0x3e23:	nop	dword ptr [rax]
0x3e26:	nop	word ptr cs:[rax + rax]


0x3e48:	nop	dword ptr [rax + rax]


0x4267:	nop	word ptr [rax + rax]


0x4308:	nop	dword ptr [rax + rax]


0x43e5:	nop	
0x43e6:	nop	word ptr cs:[rax + rax]


0x448a:	nop	word ptr [rax + rax]


0x44b4:	nop	
0x44b6:	nop	word ptr cs:[rax + rax]


0x44c2:	nop	dword ptr [rax]
0x44c6:	nop	word ptr cs:[rax + rax]


0x4506:	nop	word ptr cs:[rax + rax]


0x4534:	nop	
0x4536:	nop	word ptr cs:[rax + rax]


0x45c2:	nop	dword ptr [rax]
0x45c6:	nop	word ptr cs:[rax + rax]


0x461a:	nop	word ptr [rax + rax]


0x4637:	nop	word ptr [rax + rax]


0x466e:	nop	


0x4698:	nop	dword ptr [rax + rax]


0x46b3:	nop	word ptr cs:[rax + rax]
0x46bd:	nop	dword ptr [rax]


0x46f5:	nop	word ptr cs:[rax + rax]
0x46ff:	nop	


0x471e:	nop	


0x47a3:	nop	word ptr cs:[rax + rax]
0x47ad:	nop	dword ptr [rax]


0x482d:	nop	dword ptr [rax]


0x48cc:	nop	dword ptr [rax]


0x494b:	nop	dword ptr [rax + rax]


0x49e7:	nop	word ptr [rax + rax]


0x4a55:	nop	
0x4a56:	nop	word ptr cs:[rax + rax]


0x4a62:	nop	word ptr cs:[rax + rax]
0x4a6c:	nop	dword ptr [rax]


0x2570:	xor	r10d, r10d
0x2573:	mov	eax, dword ptr [rsp + 8]
0x2577:	cmp	eax, 2
0x257a:	je	0x2b38


0x25a0:	xor	r10d, r10d
0x25a3:	cmp	dword ptr [rsp + 8], 2
0x25a8:	je	0x2ab0


0x25c8:	mov	edx, 9
0x25cd:	mov	ebx, 0x74
0x25d2:	cmp	dword ptr [rsp + 8], 2
0x25d7:	sete	al
0x25da:	and	al, byte ptr [rsp + 0xf]
0x25de:	jne	0x272e


0x2608:	mov	edx, 8
0x260d:	mov	ebx, 0x62
0x2612:	jmp	0x25e4


0x2618:	cmp	dword ptr [rsp + 8], 2
0x261d:	je	0x29f0


0x26c0:	cmp	byte ptr [rsp + 0xd], 0
0x26c5:	jne	0x2893


0x26e8:	cmp	dword ptr [rsp + 8], 2
0x26ed:	sete	dl
0x26f0:	xor	eax, eax
0x26f2:	jmp	0x24d8


0x2700:	mov	edx, 7
0x2705:	mov	ebx, 0x61
0x270a:	jmp	0x25e4


0x2710:	cmp	dword ptr [rsp + 8], 2
0x2715:	sete	dl
0x2718:	test	rbp, rbp
0x271b:	jne	0x24cc


0x2740:	cmp	dword ptr [rsp + 8], 2
0x2745:	sete	dl
0x2748:	xor	r12d, r12d
0x274b:	jmp	0x2721


0x2750:	cmp	dword ptr [rsp + 8], 2
0x2755:	mov	ebx, 0x20
0x275a:	sete	dl
0x275d:	jmp	0x2721


0x2760:	mov	edx, 0xd
0x2765:	mov	ebx, 0x72
0x276a:	jmp	0x25d2


0x2770:	mov	edx, 0xc
0x2775:	mov	ebx, 0x66
0x277a:	jmp	0x25e4


0x2780:	mov	edx, 0xb
0x2785:	mov	ebx, 0x76
0x278a:	jmp	0x25e4


0x2790:	mov	edx, 0xa
0x2795:	mov	ebx, 0x6e
0x279a:	jmp	0x25d2


0x2830:	xor	r10d, r10d
0x2833:	cmp	byte ptr [rsp + 0xd], 0
0x2838:	jne	0x262e


0x2850:	mov	edx, 0xc
0x2855:	xor	r10d, r10d
0x2858:	mov	ebx, 0x66
0x285d:	jmp	0x25e4


0x2868:	mov	edx, 0xa
0x286d:	xor	r10d, r10d
0x2870:	mov	ebx, 0x6e
0x2875:	jmp	0x25d2


0x2880:	mov	ebx, 0x61
0x2885:	jmp	0x2650


0x2890:	xor	r10d, r10d
0x2893:	cmp	dword ptr [rsp + 8], 2
0x2898:	sete	dl
0x289b:	cmp	byte ptr [rsp + 0xf], 0
0x28a0:	jne	0x343a


0x2930:	cmp	dword ptr [rsp + 8], 2
0x2935:	mov	r12d, r10d
0x2938:	sete	dl
0x293b:	xor	r10d, r10d
0x293e:	xor	eax, eax
0x2940:	jmp	0x24d8


0x2948:	cmp	dword ptr [rsp + 8], 2
0x294d:	sete	dl
0x2950:	xor	r10d, r10d
0x2953:	jmp	0x2718


0x2960:	cmp	dword ptr [rsp + 8], 2
0x2965:	sete	dl
0x2968:	xor	r10d, r10d
0x296b:	xor	r12d, r12d
0x296e:	jmp	0x2721


0x2978:	cmp	dword ptr [rsp + 8], 2
0x297d:	mov	r12d, r10d
0x2980:	mov	ebx, 0x20
0x2985:	sete	dl
0x2988:	xor	r10d, r10d
0x298b:	jmp	0x2721


0x29a8:	mov	ebx, 0x76
0x29ad:	jmp	0x2650


0x29b8:	mov	edx, 9
0x29bd:	xor	r10d, r10d
0x29c0:	mov	ebx, 0x74
0x29c5:	jmp	0x25d2


0x29d0:	mov	ebx, 0x62
0x29d5:	jmp	0x2650


0x2f70:	test	ebx, ebx
0x2f72:	jne	0x336d


0x15eb:	nop	dword ptr [rax + rax]


0x163d:	nop	dword ptr [rax]


0x164b:	nop	dword ptr [rax + rax]


0x17bc:	nop	dword ptr [rax]


0x1855:	nop	dword ptr [rax]


0x1a6c:	nop	dword ptr [rax]


0x1c46:	nop	word ptr cs:[rax + rax]


0x1c97:	nop	word ptr [rax + rax]


0x1ce1:	nop	dword ptr [rax]


0x21fc:	nop	dword ptr [rax]


0x224d:	nop	dword ptr [rax]


0x2478:	nop	dword ptr [rax + rax]


0x2567:	nop	word ptr [rax + rax]


0x259e:	nop	


0x25c1:	nop	dword ptr [rax]


0x2602:	nop	word ptr [rax + rax]


0x2614:	nop	dword ptr [rax]


0x26b8:	nop	dword ptr [rax + rax]


0x26e1:	nop	dword ptr [rax]


0x26f7:	nop	word ptr [rax + rax]


0x270f:	nop	


0x273e:	nop	


0x274d:	nop	dword ptr [rax]


0x275f:	nop	


0x276f:	nop	


0x277f:	nop	


0x278f:	nop	


0x279f:	nop	


0x280c:	nop	dword ptr [rax]


0x282c:	nop	dword ptr [rax]


0x283e:	nop	


0x284f:	nop	


0x2862:	nop	word ptr [rax + rax]


0x287a:	nop	word ptr [rax + rax]


0x288a:	nop	word ptr [rax + rax]


0x292b:	nop	dword ptr [rax + rax]


0x2945:	nop	dword ptr [rax]


0x2958:	nop	dword ptr [rax + rax]


0x2973:	nop	dword ptr [rax + rax]


0x29a2:	nop	word ptr [rax + rax]


0x29b2:	nop	word ptr [rax + rax]


0x29ca:	nop	word ptr [rax + rax]


0x29da:	nop	word ptr [rax + rax]


0x29e8:	nop	dword ptr [rax + rax]


0x2a0f:	nop	


0x2aa9:	nop	dword ptr [rax]


0x2af2:	nop	word ptr [rax + rax]


0x2b18:	nop	dword ptr [rax + rax]


0x2b31:	nop	dword ptr [rax]


0x2b52:	nop	word ptr [rax + rax]


0x2cb8:	nop	dword ptr [rax + rax]


0x2dcb:	nop	dword ptr [rax + rax]


0x2dee:	nop	


0x2eb5:	nop	dword ptr [rax]


0x2f6d:	nop	dword ptr [rax]


0x3176:	nop	word ptr cs:[rax + rax]


0x3209:	nop	dword ptr [rax]


0x327d:	nop	dword ptr [rax]


0x335d:	nop	dword ptr [rax]


0x366b:	nop	dword ptr [rax + rax]


0x3ef6:	nop	word ptr cs:[rax + rax]


0x3f85:	nop	dword ptr [rax]


0x3fa6:	nop	word ptr cs:[rax + rax]


0x4005:	nop	dword ptr [rax]


0x4041:	nop	dword ptr [rax]


0x4088:	nop	dword ptr [rax + rax]


0x40d7:	nop	word ptr [rax + rax]


0x4134:	nop	dword ptr [rax]


0x4162:	nop	word ptr [rax + rax]


0x4216:	nop	word ptr cs:[rax + rax]


0x4279:	nop	dword ptr [rax]


0x44f2:	nop	word ptr [rax + rax]


0x4579:	nop	dword ptr [rax]


0x45a4:	nop	dword ptr [rax]


0x45fd:	nop	dword ptr [rax]


0x47e4:	nop	dword ptr [rax]


0x4801:	nop	dword ptr [rax]


0x4812:	nop	word ptr [rax + rax]


0x486a:	nop	word ptr [rax + rax]


0x48b6:	nop	word ptr cs:[rax + rax]


0x4915:	nop	dword ptr [rax]


0x4973:	nop	dword ptr [rax + rax]


0x499f:	nop	


