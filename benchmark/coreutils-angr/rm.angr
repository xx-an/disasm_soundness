0xa900:	sub	rsp, 8
0xa904:	add	rsp, 8
0xa908:	ret	


0xa8f0:	mov	rdx, qword ptr [rip + 0x204711]
0xa8f7:	xor	esi, esi
0xa8f9:	jmp	0x1d30


0xa8e0:	ret	


0xa870:	push	r15
0xa872:	push	r14
0xa874:	mov	r15, rdx
0xa877:	push	r13
0xa879:	push	r12
0xa87b:	lea	r12, [rip + 0x20410e]
0xa882:	push	rbp
0xa883:	lea	rbp, [rip + 0x20410e]
0xa88a:	push	rbx
0xa88b:	mov	r13d, edi
0xa88e:	mov	r14, rsi
0xa891:	sub	rbp, r12
0xa894:	sub	rsp, 8
0xa898:	sar	rbp, 3
0xa89c:	call	0x1960


0xa860:	mov	edx, 3
0xa865:	xor	esi, esi
0xa867:	xor	eax, eax
0xa869:	jmp	0xa5e0


0xa5e0:	push	r12
0xa5e2:	push	rbp
0xa5e3:	mov	ebp, edi
0xa5e5:	push	rbx
0xa5e6:	sub	rsp, 0x50
0xa5ea:	mov	rax, qword ptr fs:[0x28]
0xa5f3:	mov	qword ptr [rsp + 0x18], rax
0xa5f8:	xor	eax, eax
0xa5fa:	lea	rax, [rsp + 0x70]
0xa5ff:	test	esi, esi
0xa601:	mov	qword ptr [rsp + 0x30], rdx
0xa606:	mov	qword ptr [rsp + 0x38], rcx
0xa60b:	mov	qword ptr [rsp + 0x40], r8
0xa610:	mov	qword ptr [rsp + 8], rax
0xa615:	lea	rax, [rsp + 0x20]
0xa61a:	mov	qword ptr [rsp + 0x48], r9
0xa61f:	mov	dword ptr [rsp], 0x10
0xa626:	mov	qword ptr [rsp + 0x10], rax
0xa62b:	je	0xa832


0xa560:	push	r12
0xa562:	push	rbp
0xa563:	push	rbx
0xa564:	mov	rbx, rdi
0xa567:	call	0x1bf0


0xa520:	push	r13
0xa522:	push	r12
0xa524:	push	rbp
0xa525:	push	rbx
0xa526:	mov	ebx, edi
0xa528:	sub	rsp, 8
0xa52c:	cmp	edi, 2
0xa52f:	ja	0xa552


0xa4a0:	push	r13
0xa4a2:	push	r12
0xa4a4:	or	edx, 0x90900
0xa4aa:	push	rbp
0xa4ab:	push	rbx
0xa4ac:	xor	eax, eax
0xa4ae:	mov	r12, rcx
0xa4b1:	sub	rsp, 8
0xa4b5:	call	0xa430


0xa430:	sub	rsp, 0x58
0xa434:	mov	qword ptr [rsp + 0x38], rcx
0xa439:	xor	ecx, ecx
0xa43b:	mov	rax, qword ptr fs:[0x28]
0xa444:	mov	qword ptr [rsp + 0x18], rax
0xa449:	xor	eax, eax
0xa44b:	test	dl, 0x40
0xa44e:	jne	0xa478


0xa3f0:	sub	rsp, 8
0xa3f4:	mov	edi, 0xe
0xa3f9:	call	0x1c40


0xa3b0:	cmp	byte ptr [rdi + 0x1c], 0
0xa3b4:	jne	0xa3e5


0xa370:	movzx	edx, byte ptr [rdi + 0x1c]
0xa374:	mov	ecx, dword ptr [rdi + 0x14]
0xa377:	xor	edx, 1
0xa37a:	movzx	edx, dl
0xa37d:	add	ecx, edx
0xa37f:	and	ecx, 3
0xa382:	mov	eax, ecx
0xa384:	lea	r8, [rdi + rax*4]
0xa388:	mov	eax, dword ptr [r8]
0xa38b:	mov	dword ptr [r8], esi
0xa38e:	mov	esi, dword ptr [rdi + 0x18]
0xa391:	mov	dword ptr [rdi + 0x14], ecx
0xa394:	cmp	esi, ecx
0xa396:	jne	0xa3a0


0xa360:	movzx	eax, byte ptr [rdi + 0x1c]
0xa364:	ret	


0xa340:	mov	byte ptr [rdi + 0x1c], 1
0xa344:	mov	qword ptr [rdi + 0x14], 0
0xa34c:	mov	dword ptr [rdi], esi
0xa34e:	mov	dword ptr [rdi + 4], esi
0xa351:	mov	dword ptr [rdi + 8], esi
0xa354:	mov	dword ptr [rdi + 0xc], esi
0xa357:	mov	dword ptr [rdi + 0x10], esi
0xa35a:	ret	


0xa130:	push	r12
0xa132:	push	rbp
0xa133:	mov	ecx, 1
0xa138:	push	rbx
0xa139:	mov	rbx, rdi
0xa13c:	sub	rsp, 0x10
0xa140:	mov	rdx, rsp
0xa143:	mov	rax, qword ptr fs:[0x28]
0xa14c:	mov	qword ptr [rsp + 8], rax
0xa151:	xor	eax, eax
0xa153:	call	0x9150


0xa0d0:	push	rbx
0xa0d1:	mov	rbx, rsi
0xa0d4:	sub	rsp, 0x10
0xa0d8:	mov	rdx, rsp
0xa0db:	mov	rax, qword ptr fs:[0x28]
0xa0e4:	mov	qword ptr [rsp + 8], rax
0xa0e9:	xor	eax, eax
0xa0eb:	call	0x9e40


0x9e40:	push	r13
0x9e42:	push	r12
0x9e44:	push	rbp
0x9e45:	push	rbx
0x9e46:	sub	rsp, 0x18
0x9e4a:	mov	rax, qword ptr fs:[0x28]
0x9e53:	mov	qword ptr [rsp + 8], rax
0x9e58:	xor	eax, eax
0x9e5a:	test	rsi, rsi
0x9e5d:	je	0xa01d


0x9c00:	push	r12
0x9c02:	push	rbp
0x9c03:	mov	rbp, rdi
0x9c06:	push	rbx
0x9c07:	sub	rsp, 0x60
0x9c0b:	mov	r12, qword ptr [rdi + 0x28]
0x9c0f:	mov	rax, qword ptr fs:[0x28]
0x9c18:	mov	qword ptr [rsp + 0x58], rax
0x9c1d:	xor	eax, eax
0x9c1f:	cmp	byte ptr [r12 + 0x10], 0
0x9c25:	jne	0x9c78


0x9b20:	push	r12
0x9b22:	push	rbp
0x9b23:	mov	r12, rdi
0x9b26:	push	rbx
0x9b27:	cmp	qword ptr [rdi + 0x40], 0
0x9b2c:	mov	rbp, qword ptr [rdi]
0x9b2f:	mov	rax, qword ptr [rdi + 8]
0x9b33:	je	0x9b83


0x9a90:	push	r12
0x9a92:	push	rbp
0x9a93:	mov	rbp, rdi
0x9a96:	push	rbx
0x9a97:	mov	r12, qword ptr [rdi]
0x9a9a:	cmp	r12, qword ptr [rdi + 8]
0x9a9e:	jae	0x9b0b


0x98d0:	push	r15
0x98d2:	push	r14
0x98d4:	lea	rax, [rip - 0x7db]
0x98db:	push	r13
0x98dd:	push	r12
0x98df:	mov	r12, rdx
0x98e2:	push	rbp
0x98e3:	push	rbx
0x98e4:	mov	r13, rcx
0x98e7:	mov	rbp, rdi
0x98ea:	mov	edi, 0x50
0x98ef:	mov	r15, rsi
0x98f2:	sub	rsp, 8
0x98f6:	test	rdx, rdx
0x98f9:	mov	r14, r8
0x98fc:	cmove	r12, rax
0x9900:	lea	rax, [rip - 0x7f7]
0x9907:	test	rcx, rcx
0x990a:	cmove	r13, rax
0x990e:	call	0x1c20


0x98b0:	movabs	rax, 0x3f80000000000000
0x98ba:	mov	byte ptr [rdi + 0x10], 0
0x98be:	mov	qword ptr [rdi], rax
0x98c1:	movabs	rax, 0x3fb4fdf43f4ccccd
0x98cb:	mov	qword ptr [rdi + 8], rax
0x98cf:	ret	


0x9870:	movzx	ecx, byte ptr [rdi]
0x9873:	xor	edx, edx
0x9875:	test	cl, cl
0x9877:	je	0x989d


0x9800:	push	r15
0x9802:	push	r14
0x9804:	push	r13
0x9806:	push	r12
0x9808:	push	rbp
0x9809:	push	rbx
0x980a:	sub	rsp, 8
0x980e:	mov	r14, qword ptr [rdi]
0x9811:	cmp	qword ptr [rdi + 8], r14
0x9815:	jbe	0x9866


0x9790:	mov	r9, qword ptr [rdi]
0x9793:	cmp	qword ptr [rdi + 8], r9
0x9797:	jbe	0x97f2


0x9710:	push	rbp
0x9711:	push	rbx
0x9712:	mov	rbp, rdi
0x9715:	mov	rbx, rsi
0x9718:	sub	rsp, 8
0x971c:	call	0x9120


0x96c0:	cmp	qword ptr [rdi + 0x20], 0
0x96c5:	je	0x96f3


0x9660:	push	r12
0x9662:	push	rbp
0x9663:	mov	r12, rdi
0x9666:	push	rbx
0x9667:	mov	rbp, rsi
0x966a:	call	0x9120


0x9510:	push	r13
0x9512:	push	r12
0x9514:	mov	r12, rsi
0x9517:	push	rbp
0x9518:	push	rbx
0x9519:	xor	ebx, ebx
0x951b:	sub	rsp, 8
0x951f:	mov	rsi, qword ptr [rdi]
0x9522:	mov	rcx, qword ptr [rdi + 0x20]
0x9526:	mov	rbp, qword ptr [rdi + 0x10]
0x952a:	mov	r13, qword ptr [rdi + 0x18]
0x952e:	mov	rdi, qword ptr [rdi + 8]
0x9532:	cmp	rsi, rdi
0x9535:	jae	0x9575


0x94b0:	mov	rcx, qword ptr [rdi]
0x94b3:	mov	r8, qword ptr [rdi + 8]
0x94b7:	xor	edx, edx
0x94b9:	xor	esi, esi
0x94bb:	cmp	rcx, r8
0x94be:	jae	0x94f6


0x9460:	mov	rsi, qword ptr [rdi]
0x9463:	mov	rdi, qword ptr [rdi + 8]
0x9467:	xor	eax, eax
0x9469:	cmp	rsi, rdi
0x946c:	jae	0x94a7


0x9450:	mov	rax, qword ptr [rdi + 0x20]
0x9454:	ret	


0x9440:	mov	rax, qword ptr [rdi + 0x18]
0x9444:	ret	


0x9430:	mov	rax, qword ptr [rdi + 0x10]
0x9434:	ret	


0x92f0:	push	r15
0x92f2:	push	r14
0x92f4:	push	r13
0x92f6:	push	r12
0x92f8:	push	rbp
0x92f9:	push	rbx
0x92fa:	sub	rsp, 8
0x92fe:	mov	r12, qword ptr [rsi]
0x9301:	cmp	r12, qword ptr [rsi + 8]
0x9305:	jae	0x93e8


0x9270:	mov	rdx, qword ptr [rdi]
0x9273:	lea	rcx, [rip + 0x3066]
0x927a:	mov	eax, 1
0x927f:	cmp	rdx, rcx
0x9282:	je	0x92e5


0x9150:	push	r14
0x9152:	push	r13
0x9154:	mov	r14, rdx
0x9157:	push	r12
0x9159:	push	rbp
0x915a:	mov	r12, rdi
0x915d:	push	rbx
0x915e:	mov	rbp, rsi
0x9161:	mov	r13d, ecx
0x9164:	call	0x9120


0x9120:	push	rbx
0x9121:	mov	rbx, rdi
0x9124:	mov	rdi, rsi
0x9127:	mov	rsi, qword ptr [rbx + 0x10]
0x912b:	call	qword ptr [rbx + 0x30]


0x9110:	cmp	rdi, rsi
0x9113:	sete	al
0x9116:	ret	


0x9100:	mov	rax, rdi
0x9103:	xor	edx, edx
0x9105:	ror	rax, 3
0x9109:	div	rsi
0x910c:	mov	rax, rdx
0x910f:	ret	


0x9060:	cmp	rdi, 0xa
0x9064:	mov	eax, 0xa
0x9069:	movabs	r9, 0xaaaaaaaaaaaaaaab
0x9073:	cmovb	rdi, rax
0x9077:	or	rdi, 1
0x907b:	cmp	rdi, -1
0x907f:	je	0x90ef


0x9000:	sub	rsp, 8
0x9004:	xor	esi, esi
0x9006:	call	0x1c90


0x8f90:	sub	rsp, 0x58
0x8f94:	mov	qword ptr [rsp + 0x30], rdx
0x8f99:	xor	edx, edx
0x8f9b:	mov	rax, qword ptr fs:[0x28]
0x8fa4:	mov	qword ptr [rsp + 0x18], rax
0x8fa9:	xor	eax, eax
0x8fab:	test	sil, 0x40
0x8faf:	jne	0x8fd8


0x8f00:	cmp	dword ptr [rdi + 0x18], 0x95f616
0x8f07:	jne	0x8f67


0x8ef0:	mov	qword ptr [rdi + 0x10], 0
0x8ef8:	mov	dword ptr [rdi + 0x18], 0x95f616
0x8eff:	ret	


0x8e70:	push	r12
0x8e72:	push	rbp
0x8e73:	mov	rbp, rdi
0x8e76:	push	rbx
0x8e77:	call	0x19d0


0x8de0:	push	r13
0x8de2:	push	r12
0x8de4:	mov	r13, rsi
0x8de7:	push	rbp
0x8de8:	push	rbx
0x8de9:	mov	rbx, rdi
0x8dec:	mov	r12, rdx
0x8def:	sub	rsp, 0x18
0x8df3:	mov	rax, qword ptr fs:[0x28]
0x8dfc:	mov	qword ptr [rsp + 8], rax
0x8e01:	xor	eax, eax
0x8e03:	lea	rax, [rsp + 4]
0x8e08:	test	rdi, rdi
0x8e0b:	cmove	rbx, rax
0x8e0f:	mov	rdi, rbx
0x8e12:	call	0x1ad0


0x8c90:	push	r14
0x8c92:	push	r13
0x8c94:	push	r12
0x8c96:	push	rbp
0x8c97:	mov	r12d, esi
0x8c9a:	push	rbx
0x8c9b:	mov	rbx, rdi
0x8c9e:	call	0x19a0


0x8c60:	cmp	edx, 4
0x8c63:	ja	0x8c70


0x84e0:	push	r14
0x84e2:	push	r13
0x84e4:	push	r12
0x84e6:	push	rbp
0x84e7:	push	rbx
0x84e8:	mov	rbp, qword ptr [rdi]
0x84eb:	test	rbp, rbp
0x84ee:	je	0x85fe


0x8350:	push	r12
0x8352:	push	rbp
0x8353:	mov	rbp, rdi
0x8356:	push	rbx
0x8357:	mov	rdi, qword ptr [rdi]
0x835a:	test	rdi, rdi
0x835d:	je	0x83a3


0x7fa0:	push	r15
0x7fa2:	push	r14
0x7fa4:	push	r13
0x7fa6:	push	r12
0x7fa8:	push	rbp
0x7fa9:	push	rbx
0x7faa:	sub	rsp, 0x28
0x7fae:	test	esi, 0xfffff000
0x7fb4:	jne	0x8338


0x75c0:	push	r15
0x75c2:	push	r14
0x75c4:	mov	r15, rdi
0x75c7:	push	r13
0x75c9:	push	r12
0x75cb:	push	rbp
0x75cc:	push	rbx
0x75cd:	sub	rsp, 0x78
0x75d1:	mov	rbp, qword ptr [rdi]
0x75d4:	mov	rax, qword ptr fs:[0x28]
0x75dd:	mov	qword ptr [rsp + 0x68], rax
0x75e2:	xor	eax, eax
0x75e4:	mov	dword ptr [rsp + 0x58], esi
0x75e8:	mov	rax, qword ptr [rbp + 0x18]
0x75ec:	test	rax, rax
0x75ef:	mov	qword ptr [rsp + 0x50], rax
0x75f4:	je	0x7a30


0x7500:	sub	rsp, 0x28
0x7504:	mov	rcx, rsi
0x7507:	mov	rax, qword ptr fs:[0x28]
0x7510:	mov	qword ptr [rsp + 0x18], rax
0x7515:	xor	eax, eax
0x7517:	and	edi, 0x102
0x751d:	jne	0x7560


0x7450:	and	edi, 0x102
0x7456:	push	r12
0x7458:	mov	r12, rsi
0x745b:	push	rbp
0x745c:	push	rbx
0x745d:	mov	rbx, rdx
0x7460:	je	0x74d0


0x71d0:	push	r15
0x71d2:	push	r14
0x71d4:	mov	r14, rsi
0x71d7:	push	r13
0x71d9:	push	r12
0x71db:	mov	r13, rdi
0x71de:	push	rbp
0x71df:	push	rbx
0x71e0:	mov	r12d, edx
0x71e3:	mov	rbp, rcx
0x71e6:	sub	rsp, 0xb8
0x71ed:	mov	ebx, dword ptr [rdi + 0x48]
0x71f0:	mov	rax, qword ptr fs:[0x28]
0x71f9:	mov	qword ptr [rsp + 0xa8], rax
0x7201:	xor	eax, eax
0x7203:	mov	r9d, ebx
0x7206:	and	r9d, 4
0x720a:	test	rcx, rcx
0x720d:	je	0x72c0


0x7190:	mov	rax, rdx
0x7193:	mov	edx, esi
0x7195:	shl	edx, 0xd
0x7198:	and	edx, 0x20000
0x719e:	or	edx, 0x90900
0x71a4:	and	esi, 0x200
0x71aa:	jne	0x71c0


0x7120:	and	edi, 0x102
0x7126:	push	rbx
0x7127:	mov	rbx, rsi
0x712a:	je	0x7160


0x70b0:	push	rbx
0x70b1:	mov	rcx, qword ptr [rsi]
0x70b4:	mov	rbx, rdi
0x70b7:	mov	rdi, qword ptr [rdi]
0x70ba:	lea	rax, [rcx + rdx + 0x100]
0x70c2:	cmp	rcx, rax
0x70c5:	ja	0x70e8


0x7050:	push	rbp
0x7051:	push	rbx
0x7052:	mov	rbx, rdi
0x7055:	sub	rsp, 8
0x7059:	mov	edx, dword ptr [rdi + 0x48]
0x705c:	mov	ebp, edx
0x705e:	and	ebp, 4
0x7061:	jne	0x70a8


0x6fe0:	push	rbp
0x6fe1:	push	rbx
0x6fe2:	mov	ebp, esi
0x6fe4:	mov	rbx, rdi
0x6fe7:	sub	rsp, 8
0x6feb:	mov	esi, dword ptr [rdi + 0x2c]
0x6fee:	cmp	esi, ebp
0x6ff0:	jne	0x6ff7


0x6f70:	sub	rsp, 8
0x6f74:	call	0x6e40


0x6e40:	push	r13
0x6e42:	push	r12
0x6e44:	push	rbp
0x6e45:	push	rbx
0x6e46:	sub	rsp, 0x98
0x6e4d:	mov	rbx, qword ptr [rdi + 0x50]
0x6e51:	mov	rax, qword ptr fs:[0x28]
0x6e5a:	mov	qword ptr [rsp + 0x88], rax
0x6e62:	xor	eax, eax
0x6e64:	test	byte ptr [rbx + 0x49], 2
0x6e68:	je	0x6ed2


0x6e00:	push	rbx
0x6e01:	mov	rbx, rdi
0x6e04:	jmp	0x6e1c


0x6db0:	test	rdi, rdi
0x6db3:	je	0x6df0


0x6d20:	push	r13
0x6d22:	push	r12
0x6d24:	mov	r12, rdi
0x6d27:	push	rbp
0x6d28:	lea	rdi, [rdx + 0x110]
0x6d2f:	push	rbx
0x6d30:	mov	r13, rsi
0x6d33:	mov	rbp, rdx
0x6d36:	sub	rsp, 8
0x6d3a:	and	rdi, 0xfffffffffffffff8
0x6d3e:	call	0x1c20


0x6c10:	push	r13
0x6c12:	push	r12
0x6c14:	mov	r12, rdx
0x6c17:	push	rbp
0x6c18:	push	rbx
0x6c19:	mov	rbp, rdi
0x6c1c:	mov	rbx, rsi
0x6c1f:	sub	rsp, 8
0x6c23:	cmp	qword ptr [rbp + 0x38], rdx
0x6c27:	mov	r13, qword ptr [rdi + 0x40]
0x6c2b:	mov	rdi, qword ptr [rdi + 0x10]
0x6c2f:	jae	0x6c65


0x6a40:	push	r12
0x6a42:	push	rbp
0x6a43:	mov	rbp, rsi
0x6a46:	push	rbx
0x6a47:	cmp	qword ptr [rbp + 0x58], 0
0x6a4c:	lea	rbx, [rsi + 0x78]
0x6a50:	mov	r12, rdi
0x6a53:	mov	eax, dword ptr [rdi + 0x48]
0x6a56:	mov	rsi, qword ptr [rsi + 0x30]
0x6a5a:	jne	0x6ac0


0x6a10:	mov	rdx, qword ptr [rdi]
0x6a13:	mov	rax, qword ptr [rsi]
0x6a16:	mov	rax, qword ptr [rax + 0x80]
0x6a1d:	cmp	qword ptr [rdx + 0x80], rax
0x6a24:	jb	0x6a30


0x6a00:	mov	rax, qword ptr [rsi]
0x6a03:	cmp	qword ptr [rdi], rax
0x6a06:	sete	al
0x6a09:	ret	


0x69f0:	mov	rax, qword ptr [rdi]
0x69f3:	xor	edx, edx
0x69f5:	div	rsi
0x69f8:	mov	rax, rdx
0x69fb:	ret	


0x69e0:	mov	rax, qword ptr [rdi + 8]
0x69e4:	xor	edx, edx
0x69e6:	div	rsi
0x69e9:	mov	rax, rdx
0x69ec:	ret	


0x69c0:	xor	eax, eax
0x69c2:	mov	rdx, qword ptr [rsi + 8]
0x69c6:	cmp	qword ptr [rdi + 8], rdx
0x69ca:	je	0x69d0


0x6960:	mov	rax, qword ptr [rdi + 8]
0x6964:	cmp	qword ptr [rdi + 0x10], rax
0x6968:	je	0x6970


0x6930:	xor	eax, eax
0x6932:	mov	rcx, qword ptr [rdi + 0x20]
0x6936:	cmp	qword ptr [rdi + 0x28], rcx
0x693a:	ja	0x6957


0x68f0:	test	rdi, rdi
0x68f3:	push	rbx
0x68f4:	mov	rbx, rdi
0x68f7:	je	0x690a


0x6850:	push	rbx
0x6851:	mov	edx, 0xa
0x6856:	xor	ebx, ebx
0x6858:	sub	rsp, 0x20
0x685c:	mov	rcx, qword ptr [rip + 0x20884d]
0x6863:	lea	rsi, [rsp + 0x10]
0x6868:	lea	rdi, [rsp + 8]
0x686d:	mov	qword ptr [rsp + 8], 0
0x6876:	mov	rax, qword ptr fs:[0x28]
0x687f:	mov	qword ptr [rsp + 0x18], rax
0x6884:	xor	eax, eax
0x6886:	mov	qword ptr [rsp + 0x10], 0
0x688f:	call	0x1ba0


0x6820:	mov	edx, dword ptr [rdi + 0x48]
0x6823:	mov	eax, 1
0x6828:	and	edx, 0x11
0x682b:	cmp	edx, 0x10
0x682e:	je	0x6837


0x67d0:	sub	rsp, 8
0x67d4:	or	esi, 0x200
0x67da:	call	0x7fa0


0x6790:	lea	rsi, [rip + 0x59f8]
0x6797:	sub	rsp, 8
0x679b:	mov	edx, 5
0x67a0:	xor	edi, edi
0x67a2:	call	0x1a60


0x6770:	push	rbx
0x6771:	mov	rbx, rdi
0x6774:	call	0x1a80


0x6740:	push	rbp
0x6741:	push	rbx
0x6742:	mov	rbp, rdi
0x6745:	mov	rdi, rsi
0x6748:	mov	rbx, rsi
0x674b:	sub	rsp, 8
0x674f:	call	0x6540


0x6710:	mov	rax, rdi
0x6713:	sub	rsp, 8
0x6717:	mul	rsi
0x671a:	seto	dl
0x671d:	test	rax, rax
0x6720:	js	0x6739


0x66f0:	push	rbx
0x66f1:	mov	rbx, rdi
0x66f4:	call	0x6540


0x66a0:	test	rdi, rdi
0x66a3:	mov	rax, qword ptr [rsi]
0x66a6:	je	0x66d0


0x6610:	test	rdi, rdi
0x6613:	mov	r9, rdx
0x6616:	mov	rcx, qword ptr [rsi]
0x6619:	je	0x6650


0x65e0:	mov	rax, rsi
0x65e3:	mul	rdx
0x65e6:	mov	rsi, rax
0x65e9:	seto	al
0x65ec:	test	rsi, rsi
0x65ef:	js	0x65fb


0x65a0:	test	rsi, rsi
0x65a3:	push	rbx
0x65a4:	mov	rbx, rsi
0x65a7:	jne	0x65ae


0x6590:	jmp	0x6540


0x6560:	mov	rax, rdi
0x6563:	mul	rsi
0x6566:	mov	rdi, rax
0x6569:	seto	al
0x656c:	test	rdi, rdi
0x656f:	js	0x657b


0x6540:	push	rbx
0x6541:	mov	rbx, rdi
0x6544:	call	0x1c20


0x6500:	cmp	byte ptr [rip + 0x208d52], 0
0x6507:	je	0x6518


0x6480:	push	rbx
0x6481:	lea	rsi, [rip + 0x5a1a]
0x6488:	mov	edx, 5
0x648d:	xor	edi, edi
0x648f:	call	0x1a60


0x63a0:	push	rbp
0x63a1:	push	rbx
0x63a2:	mov	r10d, 0x20
0x63a8:	xor	r11d, r11d
0x63ab:	sub	rsp, 0xb8
0x63b2:	mov	rax, qword ptr fs:[0x28]
0x63bb:	mov	qword ptr [rsp + 0x78], rax
0x63c0:	xor	eax, eax
0x63c2:	lea	rax, [rsp + 0xd0]
0x63ca:	mov	qword ptr [rsp + 0xa0], r8
0x63d2:	lea	rbx, [rsp + 0xd0]
0x63da:	lea	r8, [rsp + 0x20]
0x63df:	mov	qword ptr [rsp + 0xa8], r9
0x63e7:	mov	dword ptr [rsp + 8], 0x20
0x63ef:	mov	qword ptr [rsp + 0x10], rax
0x63f4:	lea	rax, [rsp + 0x80]
0x63fc:	xor	r9d, r9d
0x63ff:	mov	qword ptr [rsp + 0x18], rax
0x6404:	mov	rbp, rax
0x6407:	nop	word ptr [rax + rax]
0x6410:	cmp	r10d, 0x2f
0x6414:	ja	0x646c


0x6320:	sub	rsp, 0x68
0x6324:	mov	r10, r8
0x6327:	xor	r9d, r9d
0x632a:	mov	rax, qword ptr fs:[0x28]
0x6333:	mov	qword ptr [rsp + 0x58], rax
0x6338:	xor	eax, eax
0x633a:	mov	r8, rsp
0x633d:	nop	dword ptr [rax]
0x6340:	mov	eax, dword ptr [r10]
0x6343:	cmp	eax, 0x2f
0x6346:	ja	0x638a


0x6300:	xor	r9d, r9d
0x6303:	cmp	qword ptr [r8], 0
0x6307:	je	0x631b


0x5ee0:	push	r15
0x5ee2:	push	r14
0x5ee4:	push	r13
0x5ee6:	push	r12
0x5ee8:	mov	r12, r9
0x5eeb:	push	rbp
0x5eec:	push	rbx
0x5eed:	mov	rbp, rdi
0x5ef0:	mov	rbx, r8
0x5ef3:	sub	rsp, 0x28
0x5ef7:	test	rsi, rsi
0x5efa:	je	0x6018


0x5e60:	push	rbx
0x5e61:	lea	rsi, [rip + 0x5b0e]
0x5e68:	mov	rbx, rdi
0x5e6b:	mov	edi, 1
0x5e70:	sub	rsp, 0xa0
0x5e77:	mov	rdx, rsp
0x5e7a:	mov	rax, qword ptr fs:[0x28]
0x5e83:	mov	qword ptr [rsp + 0x98], rax
0x5e8b:	xor	eax, eax
0x5e8d:	call	0x1a90


0x5e40:	lea	rcx, [rip + 0x2091f9]
0x5e47:	mov	rsi, rdi
0x5e4a:	mov	rdx, -1
0x5e51:	xor	edi, edi
0x5e53:	jmp	0x5500


0x5e20:	lea	rcx, [rip + 0x209219]
0x5e27:	mov	rdx, -1
0x5e2e:	jmp	0x5500


0x5e00:	lea	rcx, [rip + 0x209239]
0x5e07:	mov	rdx, rsi
0x5e0a:	mov	rsi, rdi
0x5e0d:	xor	edi, edi
0x5e0f:	jmp	0x5500


0x5df0:	lea	rcx, [rip + 0x209249]
0x5df7:	jmp	0x5500


0x5dd0:	mov	r8, rcx
0x5dd3:	mov	rcx, rdx
0x5dd6:	mov	rdx, rsi
0x5dd9:	mov	rsi, rdi
0x5ddc:	xor	edi, edi
0x5dde:	jmp	0x5d00


0x5db0:	mov	rcx, rdx
0x5db3:	mov	r8, -1
0x5dba:	mov	rdx, rsi
0x5dbd:	mov	rsi, rdi
0x5dc0:	xor	edi, edi
0x5dc2:	jmp	0x5d00


0x5da0:	mov	r8, -1
0x5da7:	jmp	0x5d00


0x5d00:	sub	rsp, 0x48
0x5d04:	mov	r9, rcx
0x5d07:	mov	rcx, qword ptr [rip + 0x209542]
0x5d0e:	movdqa	xmm0, xmmword ptr [rip + 0x20950a]
0x5d16:	mov	rax, qword ptr fs:[0x28]
0x5d1f:	mov	qword ptr [rsp + 0x38], rax
0x5d24:	xor	eax, eax
0x5d26:	movaps	xmmword ptr [rsp], xmm0
0x5d2a:	test	rsi, rsi
0x5d2d:	mov	qword ptr [rsp + 0x30], rcx
0x5d32:	mov	dword ptr [rsp], 0xa
0x5d39:	movdqa	xmm0, xmmword ptr [rip + 0x2094ef]
0x5d41:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x5d46:	movdqa	xmm0, xmmword ptr [rip + 0x2094f2]
0x5d4e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x5d53:	je	0x5d87


0x5c70:	sub	rsp, 0x48
0x5c74:	mov	rax, rdx
0x5c77:	mov	rdx, qword ptr fs:[0x28]
0x5c80:	mov	qword ptr [rsp + 0x38], rdx
0x5c85:	xor	edx, edx
0x5c87:	cmp	esi, 0xa
0x5c8a:	je	0x5cf4


0x5c60:	mov	edx, 0x3a
0x5c65:	jmp	0x5b90


0x5c40:	mov	edx, 0x3a
0x5c45:	mov	rsi, -1
0x5c4c:	jmp	0x5b90


0x5c30:	movsx	edx, sil
0x5c34:	mov	rsi, -1
0x5c3b:	jmp	0x5b90


0x5b90:	sub	rsp, 0x48
0x5b94:	mov	ecx, edx
0x5b96:	mov	rax, qword ptr fs:[0x28]
0x5b9f:	mov	qword ptr [rsp + 0x38], rax
0x5ba4:	xor	eax, eax
0x5ba6:	mov	rax, qword ptr [rip + 0x2096a3]
0x5bad:	mov	r8, rsp
0x5bb0:	and	ecx, 0x1f
0x5bb3:	movdqa	xmm0, xmmword ptr [rip + 0x209665]
0x5bbb:	mov	qword ptr [rsp + 0x30], rax
0x5bc0:	mov	eax, edx
0x5bc2:	movaps	xmmword ptr [rsp], xmm0
0x5bc6:	shr	al, 5
0x5bc9:	movzx	eax, al
0x5bcc:	lea	r9, [r8 + rax*4 + 8]
0x5bd1:	movdqa	xmm0, xmmword ptr [rip + 0x209657]
0x5bd9:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x5bde:	movdqa	xmm0, xmmword ptr [rip + 0x20965a]
0x5be6:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x5beb:	mov	edx, dword ptr [r9]
0x5bee:	mov	eax, edx
0x5bf0:	shr	eax, cl
0x5bf2:	not	eax
0x5bf4:	and	eax, 1
0x5bf7:	shl	eax, cl
0x5bf9:	mov	rcx, r8
0x5bfc:	xor	eax, edx
0x5bfe:	mov	rdx, rsi
0x5c01:	mov	rsi, rdi
0x5c04:	mov	dword ptr [r9], eax
0x5c07:	xor	edi, edi
0x5c09:	call	0x5500


0x5b80:	mov	rcx, rdx
0x5b83:	mov	rdx, rsi
0x5b86:	mov	esi, edi
0x5b88:	xor	edi, edi
0x5b8a:	jmp	0x5ae0


0x5b70:	mov	rdx, rsi
0x5b73:	mov	esi, edi
0x5b75:	xor	edi, edi
0x5b77:	jmp	0x5a50


0x5ae0:	sub	rsp, 0x48
0x5ae4:	mov	rax, rdx
0x5ae7:	mov	rdx, rcx
0x5aea:	mov	rcx, qword ptr fs:[0x28]
0x5af3:	mov	qword ptr [rsp + 0x38], rcx
0x5af8:	xor	ecx, ecx
0x5afa:	cmp	esi, 0xa
0x5afd:	je	0x5b60


0x5a50:	sub	rsp, 0x48
0x5a54:	mov	rax, rdx
0x5a57:	mov	rdx, qword ptr fs:[0x28]
0x5a60:	mov	qword ptr [rsp + 0x38], rdx
0x5a65:	xor	edx, edx
0x5a67:	cmp	esi, 0xa
0x5a6a:	je	0x5ad4


0x5a30:	lea	rcx, [rip + 0x2097e9]
0x5a37:	mov	rdx, rsi
0x5a3a:	mov	rsi, rdi
0x5a3d:	xor	edi, edi
0x5a3f:	jmp	0x5500


0x5a10:	lea	rcx, [rip + 0x209809]
0x5a17:	mov	rsi, rdi
0x5a1a:	mov	rdx, -1
0x5a21:	xor	edi, edi
0x5a23:	jmp	0x5500


0x5a00:	lea	rcx, [rip + 0x209819]
0x5a07:	jmp	0x5500


0x59e0:	lea	rcx, [rip + 0x209839]
0x59e7:	mov	rdx, -1
0x59ee:	jmp	0x5500


0x5940:	mov	eax, dword ptr [rip + 0x209732]
0x5946:	push	r12
0x5948:	mov	r12, qword ptr [rip + 0x209731]
0x594f:	push	rbp
0x5950:	push	rbx
0x5951:	cmp	eax, 1
0x5954:	jle	0x5981


0x5930:	mov	rcx, rdx
0x5933:	xor	edx, edx
0x5935:	jmp	0x5840


0x5840:	push	r15
0x5842:	push	r14
0x5844:	lea	rax, [rip + 0x2099d5]
0x584b:	push	r13
0x584d:	push	r12
0x584f:	mov	r12, rdx
0x5852:	push	rbp
0x5853:	push	rbx
0x5854:	mov	rbx, rcx
0x5857:	mov	r14, rdi
0x585a:	mov	r15, rsi
0x585d:	sub	rsp, 0x38
0x5861:	test	rcx, rcx
0x5864:	cmove	rbx, rax
0x5868:	xor	ebp, ebp
0x586a:	call	0x19a0


0x57c0:	push	r15
0x57c2:	push	r14
0x57c4:	lea	rax, [rip + 0x209a55]
0x57cb:	push	r13
0x57cd:	push	r12
0x57cf:	mov	r13, rdi
0x57d2:	push	rbp
0x57d3:	push	rbx
0x57d4:	mov	rbx, r8
0x57d7:	mov	r14, rsi
0x57da:	mov	r15, rdx
0x57dd:	sub	rsp, 0x18
0x57e1:	test	r8, r8
0x57e4:	cmove	rbx, rax
0x57e8:	mov	qword ptr [rsp + 8], rcx
0x57ed:	call	0x19a0


0x5790:	lea	rax, [rip + 0x209a89]
0x5797:	test	rdi, rdi
0x579a:	cmove	rdi, rax
0x579e:	test	rsi, rsi
0x57a1:	mov	dword ptr [rdi], 0xa
0x57a7:	je	0x57b7


0x5770:	lea	rax, [rip + 0x209aa9]
0x5777:	test	rdi, rdi
0x577a:	cmove	rdi, rax
0x577e:	mov	eax, dword ptr [rdi + 4]
0x5781:	mov	dword ptr [rdi + 4], esi
0x5784:	ret	


0x5730:	lea	rax, [rip + 0x209ae9]
0x5737:	test	rdi, rdi
0x573a:	mov	ecx, esi
0x573c:	cmove	rdi, rax
0x5740:	mov	eax, esi
0x5742:	and	ecx, 0x1f
0x5745:	shr	al, 5
0x5748:	movzx	eax, al
0x574b:	lea	rdi, [rdi + rax*4 + 8]
0x5750:	mov	esi, dword ptr [rdi]
0x5752:	mov	eax, esi
0x5754:	shr	eax, cl
0x5756:	xor	edx, eax
0x5758:	and	eax, 1
0x575b:	and	edx, 1
0x575e:	shl	edx, cl
0x5760:	xor	edx, esi
0x5762:	mov	dword ptr [rdi], edx
0x5764:	ret	


0x5710:	lea	rax, [rip + 0x209b09]
0x5717:	test	rdi, rdi
0x571a:	cmove	rdi, rax
0x571e:	mov	dword ptr [rdi], esi
0x5720:	ret	


0x56f0:	lea	rax, [rip + 0x209b29]
0x56f7:	test	rdi, rdi
0x56fa:	cmove	rdi, rax
0x56fe:	mov	eax, dword ptr [rdi]
0x5700:	ret	


0x56b0:	push	r12
0x56b2:	push	rbp
0x56b3:	push	rbx
0x56b4:	mov	rbx, rdi
0x56b7:	call	0x19a0


0x5500:	push	r15
0x5502:	push	r14
0x5504:	movsxd	r15, edi
0x5507:	push	r13
0x5509:	push	r12
0x550b:	mov	r14, rdx
0x550e:	push	rbp
0x550f:	push	rbx
0x5510:	mov	rbp, rcx
0x5513:	sub	rsp, 0x28
0x5517:	mov	qword ptr [rsp + 8], rsi
0x551c:	call	0x19a0


0x42c0:	push	r15
0x42c2:	push	r14
0x42c4:	mov	r15d, r8d
0x42c7:	push	r13
0x42c9:	push	r12
0x42cb:	mov	r14, rdi
0x42ce:	push	rbp
0x42cf:	push	rbx
0x42d0:	mov	ebx, r9d
0x42d3:	mov	r13, rsi
0x42d6:	mov	rbp, rcx
0x42d9:	and	ebx, 2
0x42dc:	sub	rsp, 0xb8
0x42e3:	mov	rax, qword ptr [rsp + 0xf0]
0x42eb:	mov	qword ptr [rsp + 0x10], rdx
0x42f0:	mov	dword ptr [rsp + 8], r8d
0x42f5:	mov	dword ptr [rsp + 0x78], r9d
0x42fa:	mov	qword ptr [rsp + 0x20], rax
0x42ff:	mov	rax, qword ptr [rsp + 0xf8]
0x4307:	mov	qword ptr [rsp + 0x68], rax
0x430c:	mov	rax, qword ptr [rsp + 0x100]
0x4314:	mov	qword ptr [rsp + 0x60], rax
0x4319:	mov	rax, qword ptr fs:[0x28]
0x4322:	mov	qword ptr [rsp + 0xa8], rax
0x432a:	xor	eax, eax
0x432c:	call	0x1a70


0x41d0:	push	rbp
0x41d1:	push	rbx
0x41d2:	mov	rbp, rdi
0x41d5:	mov	ebx, esi
0x41d7:	sub	rsp, 8
0x41db:	call	0xa3f0


0x4130:	test	rdi, rdi
0x4133:	push	rbx
0x4134:	je	0x41ad


0x4030:	push	r15
0x4032:	push	r14
0x4034:	mov	r15, rdx
0x4037:	push	r13
0x4039:	push	r12
0x403b:	mov	r12, rdi
0x403e:	push	rbp
0x403f:	push	rbx
0x4040:	mov	rbp, rsi
0x4043:	sub	rsp, 0x18
0x4047:	call	0x3e70


0x4010:	sub	rsp, 8
0x4014:	call	0x4030


0x3f20:	mov	eax, dword ptr [rdi + 0x18]
0x3f23:	mov	edx, 5
0x3f28:	and	eax, 0xf000
0x3f2d:	cmp	eax, 0x8000
0x3f32:	je	0x3f80


0x3ed0:	push	rbx
0x3ed1:	mov	rbx, rdi
0x3ed4:	call	0x1a80


0x3e70:	movzx	edx, byte ptr [rdi]
0x3e73:	mov	rax, rdi
0x3e76:	cmp	dl, 0x2f
0x3e79:	jne	0x3e8c


0x3dc0:	push	rbp
0x3dc1:	push	rbx
0x3dc2:	sub	rsp, 8
0x3dc6:	mov	rdi, qword ptr [rip + 0x20b2db]
0x3dcd:	call	0x8e70


0x3db0:	mov	byte ptr [rip + 0x20b351], dil
0x3db7:	ret	


0x3da0:	mov	qword ptr [rip + 0x20b369], rdi
0x3da7:	ret	


0x3c90:	push	r12
0x3c92:	push	rbp
0x3c93:	push	rbx
0x3c94:	mov	rbx, qword ptr [rip + 0x20b415]
0x3c9b:	mov	rdi, rbx
0x3c9e:	call	0x6930


0x3c80:	mov	qword ptr [rip + 0x20b479], rdi
0x3c87:	ret	


0x3c30:	push	r14
0x3c32:	push	r13
0x3c34:	push	r12
0x3c36:	push	rbp
0x3c37:	push	rbx
0x3c38:	mov	r14, qword ptr [rsi]
0x3c3b:	test	r14, r14
0x3c3e:	je	0x3c71


0x3bc0:	push	r15
0x3bc2:	push	r14
0x3bc4:	mov	r14, rdi
0x3bc7:	push	r13
0x3bc9:	push	r12
0x3bcb:	mov	r12, rsi
0x3bce:	push	rbp
0x3bcf:	push	rbx
0x3bd0:	mov	rbp, rcx
0x3bd3:	mov	rbx, rdx
0x3bd6:	mov	rcx, r8
0x3bd9:	mov	rdx, rbp
0x3bdc:	sub	rsp, 8
0x3be0:	mov	rsi, rbx
0x3be3:	mov	rdi, r12
0x3be6:	mov	r15, r8
0x3be9:	mov	r13, r9
0x3bec:	call	0x3900


0x3aa0:	push	r15
0x3aa2:	push	r14
0x3aa4:	mov	r14, rdi
0x3aa7:	push	r13
0x3aa9:	push	r12
0x3aab:	xor	edi, edi
0x3aad:	push	rbp
0x3aae:	push	rbx
0x3aaf:	mov	rbp, rsi
0x3ab2:	lea	rsi, [rip + 0x7db7]
0x3ab9:	mov	r12, rdx
0x3abc:	mov	edx, 5
0x3ac1:	sub	rsp, 8
0x3ac5:	mov	rbx, qword ptr [rip + 0x20b614]
0x3acc:	call	0x1a60


0x3a20:	cmp	rdx, -1
0x3a24:	push	r12
0x3a26:	mov	edx, 5
0x3a2b:	push	rbp
0x3a2c:	mov	r12, rsi
0x3a2f:	push	rbx
0x3a30:	mov	rbp, rdi
0x3a33:	je	0x3a80


0x3900:	push	r15
0x3902:	push	r14
0x3904:	mov	r15, rsi
0x3907:	push	r13
0x3909:	push	r12
0x390b:	mov	r13, rcx
0x390e:	push	rbp
0x390f:	push	rbx
0x3910:	mov	rbp, rdx
0x3913:	sub	rsp, 0x28
0x3917:	mov	qword ptr [rsp + 8], rdi
0x391c:	mov	qword ptr [rsp + 0x18], rdx
0x3921:	call	0x1a80


0x38f0:	mov	edi, 1
0x38f5:	jmp	0x24a0


0x3090:	push	r15
0x3092:	push	r14
0x3094:	push	r13
0x3096:	push	r12
0x3098:	push	rbp
0x3099:	push	rbx
0x309a:	sub	rsp, 0xd8
0x30a1:	mov	rax, qword ptr fs:[0x28]
0x30aa:	mov	qword ptr [rsp + 0xc8], rax
0x30b2:	xor	eax, eax
0x30b4:	cmp	qword ptr [rdi], 0
0x30b8:	je	0x3828


0x2bc0:	push	r15
0x2bc2:	push	r14
0x2bc4:	push	r13
0x2bc6:	push	r12
0x2bc8:	mov	r13, rcx
0x2bcb:	push	rbp
0x2bcc:	push	rbx
0x2bcd:	mov	rbx, rsi
0x2bd0:	sub	rsp, 0xc8
0x2bd7:	mov	edi, dword ptr [rdi + 0x2c]
0x2bda:	mov	r15, qword ptr [rsi + 0x30]
0x2bde:	mov	rax, qword ptr fs:[0x28]
0x2be7:	mov	qword ptr [rsp + 0xb8], rax
0x2bef:	xor	eax, eax
0x2bf1:	mov	rax, qword ptr [rsi + 0x38]
0x2bf5:	test	r9, r9
0x2bf8:	mov	dword ptr [rsp + 0x14], r8d
0x2bfd:	mov	dword ptr [rsp + 0x10], edi
0x2c01:	mov	qword ptr [rsp + 8], rax
0x2c06:	je	0x2df0


0x2b40:	push	rbx
0x2b41:	mov	rax, qword ptr [rdx + 0x30]
0x2b45:	mov	rbx, rdx
0x2b48:	cmp	rax, -1
0x2b4c:	je	0x2b60


0x28f0:	push	r13
0x28f2:	push	r12
0x28f4:	mov	r13, rdx
0x28f7:	push	rbp
0x28f8:	push	rbx
0x28f9:	xor	edx, edx
0x28fb:	mov	r12, rdi
0x28fe:	mov	rbx, rsi
0x2901:	mov	ebp, ecx
0x2903:	sub	rsp, 0xa8
0x290a:	mov	rsi, qword ptr [rsi + 0x30]
0x290e:	mov	edi, dword ptr [rdi + 0x2c]
0x2911:	mov	rax, qword ptr fs:[0x28]
0x291a:	mov	qword ptr [rsp + 0x98], rax
0x2922:	xor	eax, eax
0x2924:	test	cl, cl
0x2926:	setne	dl
0x2929:	shl	edx, 9
0x292c:	call	0x19e0


0x24a0:	push	r13
0x24a2:	push	r12
0x24a4:	mov	edx, 5
0x24a9:	push	rbp
0x24aa:	push	rbx
0x24ab:	mov	ebp, edi
0x24ad:	sub	rsp, 0x88
0x24b4:	mov	rbx, qword ptr [rip + 0x20cc5d]
0x24bb:	mov	rax, qword ptr fs:[0x28]
0x24c4:	mov	qword ptr [rsp + 0x78], rax
0x24c9:	xor	eax, eax
0x24cb:	test	edi, edi
0x24cd:	je	0x24fd


0x2490:	push	rbp
0x2491:	mov	rbp, rsp
0x2494:	pop	rbp
0x2495:	jmp	0x2400


0x2450:	cmp	byte ptr [rip + 0x20cc91], 0
0x2457:	jne	0x2488


0x2400:	lea	rdi, [rip + 0x20cc99]
0x2407:	lea	rsi, [rip + 0x20cc92]
0x240e:	push	rbp
0x240f:	sub	rsi, rdi
0x2412:	mov	rbp, rsp
0x2415:	sar	rsi, 3
0x2419:	mov	rax, rsi
0x241c:	shr	rax, 0x3f
0x2420:	add	rsi, rax
0x2423:	sar	rsi, 1
0x2426:	je	0x2440


0x23c0:	lea	rdi, [rip + 0x20ccd9]
0x23c7:	push	rbp
0x23c8:	lea	rax, [rip + 0x20ccd1]
0x23cf:	cmp	rax, rdi
0x23d2:	mov	rbp, rsp
0x23d5:	je	0x23f0


0x2390:	xor	ebp, ebp
0x2392:	mov	r9, rdx
0x2395:	pop	rsi
0x2396:	mov	rdx, rsp
0x2399:	and	rsp, 0xfffffffffffffff0
0x239d:	push	rax
0x239e:	push	rsp
0x239f:	lea	r8, [rip + 0x853a]
0x23a6:	lea	rcx, [rip + 0x84c3]
0x23ad:	lea	rdi, [rip - 0x604]
0x23b4:	call	qword ptr [rip + 0x20cc1e]


0x1db0:	push	r14
0x1db2:	push	r13
0x1db4:	lea	r13, [rip + 0x8c35]
0x1dbb:	push	r12
0x1dbd:	push	rbp
0x1dbe:	mov	ebp, edi
0x1dc0:	push	rbx
0x1dc1:	mov	rbx, rsi
0x1dc4:	mov	r14d, 1
0x1dca:	sub	rsp, 0xc0
0x1dd1:	mov	rdi, qword ptr [rsi]
0x1dd4:	mov	rax, qword ptr fs:[0x28]
0x1ddd:	mov	qword ptr [rsp + 0xb8], rax
0x1de5:	xor	eax, eax
0x1de7:	call	0x4130


0x1960:	sub	rsp, 8
0x1964:	mov	rax, qword ptr [rip + 0x20d675]
0x196b:	test	rax, rax
0x196e:	je	0x1972


0x1d30:	jmp	qword ptr [rip + 0x20d25a]


0xa832:	mov	rax, qword ptr [rsp + 0x10]
0xa837:	xor	esi, esi
0xa839:	mov	edx, dword ptr [rax + 0x10]
0xa83c:	xor	eax, eax
0xa83e:	call	0x1a20


0xa631:	cmp	esi, 0x406
0xa637:	jne	0xa680


0x1bf0:	jmp	qword ptr [rip + 0x20d2fa]


0xa531:	call	0xa860


0xa552:	add	rsp, 8
0xa556:	mov	eax, ebx
0xa558:	pop	rbx
0xa559:	pop	rbp
0xa55a:	pop	r12
0xa55c:	pop	r13
0xa55e:	ret	


0xa450:	xor	eax, eax
0xa452:	call	0x1aa0


0xa478:	lea	rax, [rsp + 0x60]
0xa47d:	mov	dword ptr [rsp], 0x18
0xa484:	mov	ecx, dword ptr [rsp + 0x38]
0xa488:	mov	qword ptr [rsp + 8], rax
0xa48d:	lea	rax, [rsp + 0x20]
0xa492:	mov	qword ptr [rsp + 0x10], rax
0xa497:	jmp	0xa450


0x1c40:	jmp	qword ptr [rip + 0x20d2d2]


0xa3b6:	mov	eax, dword ptr [rdi + 0x14]
0xa3b9:	mov	esi, dword ptr [rdi + 0x10]
0xa3bc:	lea	rcx, [rdi + rax*4]
0xa3c0:	mov	rdx, rax
0xa3c3:	mov	eax, dword ptr [rcx]
0xa3c5:	mov	dword ptr [rcx], esi
0xa3c7:	cmp	edx, dword ptr [rdi + 0x18]
0xa3ca:	je	0xa3e0


0xa3e5:	sub	rsp, 8
0xa3e9:	call	0x1990


0xa398:	add	edx, esi
0xa39a:	and	edx, 3
0xa39d:	mov	dword ptr [rdi + 0x18], edx
0xa3a0:	mov	byte ptr [rdi + 0x1c], 0
0xa3a4:	ret	


0xa3a0:	mov	byte ptr [rdi + 0x1c], 0
0xa3a4:	ret	


0xa01d:	call	0x1990


0x9e63:	mov	r12, rsp
0x9e66:	xor	ecx, ecx
0x9e68:	mov	r13, rdx
0x9e6b:	mov	rdx, r12
0x9e6e:	mov	rbx, rdi
0x9e71:	mov	rbp, rsi
0x9e74:	call	0x9150


0x9c27:	test	rsi, rsi
0x9c2a:	js	0x9da8


0x9c78:	mov	rdi, rsi
0x9c7b:	call	0x9060


0x9b83:	cmp	rbp, rax
0x9b86:	jae	0x9bbc


0x9b35:	cmp	qword ptr [rdi + 0x20], 0
0x9b3a:	je	0x9b83


0x9aa0:	cmp	qword ptr [r12], 0
0x9aa5:	je	0x9b01


0x9b0b:	mov	qword ptr [rbp + 0x18], 0
0x9b13:	mov	qword ptr [rbp + 0x20], 0
0x9b1b:	pop	rbx
0x9b1c:	pop	rbp
0x9b1d:	pop	r12
0x9b1f:	ret	


0x1c20:	jmp	qword ptr [rip + 0x20d2e2]


0x989d:	mov	rax, rdx
0x98a0:	ret	


0x9866:	xor	ebp, ebp
0x9868:	jmp	0x9854


0x9817:	mov	r13, rdx
0x981a:	mov	r12, rsi
0x981d:	mov	r15, rdi
0x9820:	xor	ebp, ebp
0x9822:	mov	rdi, qword ptr [r14]
0x9825:	test	rdi, rdi
0x9828:	je	0x984a


0x97f2:	xor	eax, eax
0x97f4:	ret	


0x9799:	xor	r8d, r8d
0x979c:	mov	rcx, qword ptr [r9]
0x979f:	test	rcx, rcx
0x97a2:	je	0x97dd


0x96f3:	xor	eax, eax
0x96f5:	ret	


0x96c7:	mov	rdx, qword ptr [rdi]
0x96ca:	mov	rcx, qword ptr [rdi + 8]
0x96ce:	cmp	rdx, rcx
0x96d1:	jae	0x96f8


0x9575:	lea	rdx, [rip + 0x2ce8]
0x957c:	mov	esi, 1
0x9581:	mov	rdi, r12
0x9584:	xor	eax, eax
0x9586:	call	0x1d60


0x94c0:	cmp	qword ptr [rcx], 0
0x94c4:	je	0x94ed


0x94f6:	xor	eax, eax
0x94f8:	cmp	qword ptr [rdi + 0x18], rsi
0x94fc:	je	0x9500


0x94a7:	ret	


0x930b:	mov	rbp, rdi
0x930e:	mov	r13, rsi
0x9311:	mov	r14d, edx
0x9314:	nop	dword ptr [rax]
0x9318:	mov	r15, qword ptr [r12]
0x931c:	test	r15, r15
0x931f:	je	0x93da


0x93e8:	add	rsp, 8
0x93ec:	mov	eax, 1
0x93f1:	pop	rbx
0x93f2:	pop	rbp
0x93f3:	pop	r12
0x93f5:	pop	r13
0x93f7:	pop	r14
0x93f9:	pop	r15
0x93fb:	ret	


0x92e5:	ret	


0x9284:	movss	xmm0, dword ptr [rdx + 8]
0x9289:	ucomiss	xmm0, dword ptr [rip + 0x3064]
0x9290:	jbe	0x92e0


0x90ef:	mov	rax, rdi
0x90f2:	ret	


0x1c90:	jmp	qword ptr [rip + 0x20d2aa]


0x8fb1:	xor	eax, eax
0x8fb3:	call	0x1ce0


0x8fd8:	lea	rax, [rsp + 0x60]
0x8fdd:	mov	dword ptr [rsp], 0x10
0x8fe4:	mov	edx, dword ptr [rsp + 0x30]
0x8fe8:	mov	qword ptr [rsp + 8], rax
0x8fed:	lea	rax, [rsp + 0x20]
0x8ff2:	mov	qword ptr [rsp + 0x10], rax
0x8ff7:	jmp	0x8fb1


0x8f09:	mov	rdx, qword ptr [rdi + 0x10]
0x8f0d:	mov	rcx, qword ptr [rsi + 8]
0x8f11:	test	rdx, rdx
0x8f14:	je	0x8f30


0x8f67:	lea	rcx, [rip + 0x32e2]
0x8f6e:	lea	rsi, [rip + 0x329b]
0x8f75:	lea	rdi, [rip + 0x32b8]
0x8f7c:	sub	rsp, 8
0x8f80:	mov	edx, 0x3c
0x8f85:	call	0x1b20


0x19d0:	jmp	qword ptr [rip + 0x20d40a]


0x1ad0:	jmp	qword ptr [rip + 0x20d38a]


0x19a0:	jmp	qword ptr [rip + 0x20d422]


0x8c65:	mov	word ptr [rsi + 0x74], dx
0x8c69:	xor	eax, eax
0x8c6b:	ret	


0x8c70:	sub	rsp, 8
0x8c74:	call	0x19a0


0x85fe:	xor	ebp, ebp
0x8600:	pop	rbx
0x8601:	mov	rax, rbp
0x8604:	pop	rbp
0x8605:	pop	r12
0x8607:	pop	r13
0x8609:	pop	r14
0x860b:	ret	


0x84f4:	mov	edx, dword ptr [rdi + 0x48]
0x84f7:	test	dh, 0x20
0x84fa:	jne	0x85fe


0x83a3:	mov	rdi, qword ptr [rbp + 8]
0x83a7:	test	rdi, rdi
0x83aa:	je	0x83b1


0x835f:	cmp	qword ptr [rdi + 0x58], 0
0x8364:	jns	0x837f


0x7fba:	mov	eax, esi
0x7fbc:	mov	ebp, esi
0x7fbe:	and	eax, 0x204
0x7fc3:	cmp	eax, 0x204
0x7fc8:	je	0x8338


0x8338:	call	0x19a0


0x7a30:	mov	eax, dword ptr [rdi + 0x48]
0x7a33:	mov	edx, eax
0x7a35:	and	edx, 0x10
0x7a38:	je	0x7a47


0x75fa:	mov	rdi, rax
0x75fd:	call	0x1bc0


0x751f:	mov	rax, qword ptr [rdx + 8]
0x7523:	test	rax, rax
0x7526:	je	0x7545


0x7560:	mov	rax, qword ptr [rdx + 0x78]
0x7564:	mov	rdi, qword ptr [rcx]
0x7567:	mov	rsi, rsp
0x756a:	mov	qword ptr [rsp], rax
0x756e:	mov	rax, qword ptr [rdx + 0x80]
0x7575:	mov	qword ptr [rsp + 8], rax
0x757a:	call	0xa130


0x74d0:	mov	rdi, qword ptr [r12]
0x74d4:	lea	rsi, [rdx + 0x78]
0x74d8:	call	0x8f00


0x7462:	mov	edi, 0x18
0x7467:	call	0x1c20


0x72c0:	test	r9d, r9d
0x72c3:	je	0x7300


0x7213:	lea	rdx, [rip + 0x42a4]
0x721a:	mov	ecx, 3
0x721f:	mov	rsi, rbp
0x7222:	mov	rdi, rdx
0x7225:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x71ac:	mov	rdi, rax
0x71af:	mov	esi, edx
0x71b1:	xor	eax, eax
0x71b3:	jmp	0x8f90


0x71c0:	mov	rsi, rax
0x71c3:	xor	eax, eax
0x71c5:	jmp	0xa430


0x7160:	mov	edi, 0x20
0x7165:	call	0x1c20


0x712c:	mov	r8, qword ptr [rip + 0x207e95]
0x7133:	lea	rcx, [rip - 0x77a]
0x713a:	lea	rdx, [rip - 0x761]
0x7141:	xor	esi, esi
0x7143:	mov	edi, 0x1f
0x7148:	call	0x98d0


0x70c7:	mov	qword ptr [rsi], rax
0x70ca:	mov	rsi, rax
0x70cd:	call	0x1c80


0x70e8:	call	0x1da0


0x7063:	and	dh, 2
0x7066:	jne	0x7090


0x70a8:	xor	ebp, ebp
0x70aa:	jmp	0x7078


0x6ff2:	cmp	esi, -0x64
0x6ff5:	jne	0x7041


0x6ff7:	test	dl, dl
0x6ff9:	jne	0x7010


0x6ed2:	xor	ebx, ebx
0x6ed4:	mov	rdx, qword ptr [rsp + 0x88]
0x6edc:	xor	rdx, qword ptr fs:[0x28]
0x6ee5:	mov	rax, rbx
0x6ee8:	jne	0x6f62


0x6e6a:	mov	r12, qword ptr [rbx + 0x50]
0x6e6e:	mov	rbp, rdi
0x6e71:	mov	r13d, esi
0x6e74:	test	r12, r12
0x6e77:	je	0x6ea0


0x6e1c:	mov	rdi, rbx
0x6e1f:	call	0xa360


0x6df0:	ret	


0x6db5:	push	rbp
0x6db6:	push	rbx
0x6db7:	mov	rbx, rdi
0x6dba:	sub	rsp, 8
0x6dbe:	nop	
0x6dc0:	mov	rdi, qword ptr [rbx + 0x18]
0x6dc4:	mov	rbp, qword ptr [rbx + 0x10]
0x6dc8:	test	rdi, rdi
0x6dcb:	je	0x6dd2


0x6c31:	lea	rsi, [rdx + 0x28]
0x6c35:	movabs	rax, 0x1fffffffffffffff
0x6c3f:	cmp	rsi, rax
0x6c42:	mov	qword ptr [rbp + 0x38], rsi
0x6c46:	ja	0x6ce4


0x6c65:	test	rbx, rbx
0x6c68:	je	0x6c81


0x6a5c:	test	al, 1
0x6a5e:	je	0x6ac0


0x6ac0:	test	al, 2
0x6ac2:	jne	0x6a60


0x6a30:	mov	eax, 0xffffffff
0x6a35:	ret	


0x6a26:	seta	al
0x6a29:	movzx	eax, al
0x6a2c:	ret	


0x69d0:	mov	rax, qword ptr [rsi]
0x69d3:	cmp	qword ptr [rdi], rax
0x69d6:	sete	al
0x69d9:	ret	


0x69cc:	ret	


0x6970:	mov	rax, qword ptr [rdi + 0x20]
0x6974:	cmp	qword ptr [rdi + 0x28], rax
0x6978:	jne	0x696a


0x696a:	jmp	0x1cf0


0x693c:	mov	rax, qword ptr [rdi + 0x10]
0x6940:	sub	rax, qword ptr [rdi + 8]
0x6944:	test	dword ptr [rdi], 0x100
0x694a:	je	0x6957


0x6957:	ret	


0x690a:	mov	rdi, rbx
0x690d:	pop	rbx
0x690e:	jmp	0x1c30


0x68f9:	call	0x1c60


0x1ba0:	jmp	qword ptr [rip + 0x20d322]


0x6837:	ret	


0x6830:	xor	eax, eax
0x6832:	cmp	edx, 0x11
0x6835:	je	0x6840


0x1a60:	jmp	qword ptr [rip + 0x20d3c2]


0x1a80:	jmp	qword ptr [rip + 0x20d3b2]


0x6739:	call	0x6790


0x6722:	movzx	edx, dl
0x6725:	test	rdx, rdx
0x6728:	jne	0x6739


0x66d0:	test	rax, rax
0x66d3:	mov	edx, 0x80
0x66d8:	cmove	rax, rdx
0x66dc:	test	rax, rax
0x66df:	jns	0x66c2


0x66a8:	movabs	rdx, 0x5555555555555553
0x66b2:	cmp	rax, rdx
0x66b5:	ja	0x66e1


0x6650:	test	rcx, rcx
0x6653:	je	0x6678


0x661b:	xor	edx, edx
0x661d:	movabs	rax, 0x5555555555555554
0x6627:	div	r9
0x662a:	cmp	rax, rcx
0x662d:	jbe	0x666b


0x65fb:	sub	rsp, 8
0x65ff:	call	0x6790


0x65f1:	movzx	eax, al
0x65f4:	test	rax, rax
0x65f7:	jne	0x65fb


0x65a9:	test	rdi, rdi
0x65ac:	jne	0x65c8


0x65ae:	mov	rsi, rbx
0x65b1:	call	0x1c80


0x657b:	sub	rsp, 8
0x657f:	call	0x6790


0x6571:	movzx	eax, al
0x6574:	test	rax, rax
0x6577:	jne	0x657b


0x6518:	sub	rsp, 8
0x651c:	call	0x1b40


0x6509:	movzx	eax, byte ptr [rip + 0x208d48]
0x6510:	ret	


0x6416:	mov	eax, r10d
0x6419:	mov	r11d, 1
0x641f:	add	r10d, 8
0x6423:	add	rax, rbp
0x6426:	mov	rax, qword ptr [rax]
0x6429:	test	rax, rax
0x642c:	mov	qword ptr [r8 + r9*8], rax
0x6430:	je	0x643c


0x646c:	mov	rax, rbx
0x646f:	add	rbx, 8
0x6473:	jmp	0x6426


0x6348:	mov	r11d, eax
0x634b:	add	r11, qword ptr [r10 + 0x10]
0x634f:	add	eax, 8
0x6352:	mov	dword ptr [r10], eax
0x6355:	mov	rax, qword ptr [r11]
0x6358:	test	rax, rax
0x635b:	mov	qword ptr [r8 + r9*8], rax
0x635f:	je	0x636b


0x638a:	mov	r11, qword ptr [r10 + 8]
0x638e:	lea	rax, [r11 + 8]
0x6392:	mov	qword ptr [r10 + 8], rax
0x6396:	jmp	0x6355


0x631b:	jmp	0x5ee0


0x6018:	mov	r8, rcx
0x601b:	mov	rcx, rdx
0x601e:	lea	rdx, [rip + 0x5e2f]
0x6025:	mov	esi, 1
0x602a:	xor	eax, eax
0x602c:	call	0x1d60


0x5f00:	mov	r8, rdx
0x5f03:	lea	rdx, [rip + 0x5f3e]
0x5f0a:	mov	r9, rcx
0x5f0d:	xor	eax, eax
0x5f0f:	mov	rcx, rsi
0x5f12:	mov	esi, 1
0x5f17:	call	0x1d60


0x1a90:	jmp	qword ptr [rip + 0x20d3aa]


0x5d87:	call	0x1990


0x5d55:	test	rdx, rdx
0x5d58:	je	0x5d87


0x5cf4:	call	0x1990


0x5c8c:	mov	dword ptr [rsp], esi
0x5c8f:	mov	rcx, rsp
0x5c92:	mov	rdx, -1
0x5c99:	mov	rsi, rax
0x5c9c:	mov	qword ptr [rsp + 4], 0
0x5ca5:	mov	qword ptr [rsp + 0xc], 0x4000000
0x5cae:	mov	qword ptr [rsp + 0x14], 0
0x5cb7:	mov	qword ptr [rsp + 0x1c], 0
0x5cc0:	mov	qword ptr [rsp + 0x24], 0
0x5cc9:	mov	qword ptr [rsp + 0x2c], 0
0x5cd2:	mov	dword ptr [rsp + 0x34], 0
0x5cda:	call	0x5500


0x5b60:	call	0x1990


0x5aff:	mov	dword ptr [rsp], esi
0x5b02:	mov	rcx, rsp
0x5b05:	mov	rsi, rax
0x5b08:	mov	qword ptr [rsp + 4], 0
0x5b11:	mov	qword ptr [rsp + 0xc], 0
0x5b1a:	mov	qword ptr [rsp + 0x14], 0
0x5b23:	mov	qword ptr [rsp + 0x1c], 0
0x5b2c:	mov	qword ptr [rsp + 0x24], 0
0x5b35:	mov	qword ptr [rsp + 0x2c], 0
0x5b3e:	mov	dword ptr [rsp + 0x34], 0
0x5b46:	call	0x5500


0x5ad4:	call	0x1990


0x5a6c:	mov	dword ptr [rsp], esi
0x5a6f:	mov	rcx, rsp
0x5a72:	mov	rdx, -1
0x5a79:	mov	rsi, rax
0x5a7c:	mov	qword ptr [rsp + 4], 0
0x5a85:	mov	qword ptr [rsp + 0xc], 0
0x5a8e:	mov	qword ptr [rsp + 0x14], 0
0x5a97:	mov	qword ptr [rsp + 0x1c], 0
0x5aa0:	mov	qword ptr [rsp + 0x24], 0
0x5aa9:	mov	qword ptr [rsp + 0x2c], 0
0x5ab2:	mov	dword ptr [rsp + 0x34], 0
0x5aba:	call	0x5500


0x5981:	mov	rdi, qword ptr [r12 + 8]
0x5986:	lea	rbx, [rip + 0x209793]
0x598d:	cmp	rdi, rbx
0x5990:	je	0x59a9


0x5956:	sub	eax, 2
0x5959:	lea	rbx, [r12 + 0x18]
0x595e:	shl	rax, 4
0x5962:	lea	rbp, [r12 + rax + 0x28]
0x5967:	nop	word ptr [rax + rax]
0x5970:	mov	rdi, qword ptr [rbx]
0x5973:	add	rbx, 0x10
0x5977:	call	0x1da0


0x57b7:	sub	rsp, 8
0x57bb:	call	0x1990


0x57a9:	test	rdx, rdx
0x57ac:	je	0x57b7


0x1a70:	jmp	qword ptr [rip + 0x20d3ba]


0x41ad:	mov	rcx, qword ptr [rip + 0x20af2c]
0x41b4:	lea	rdi, [rip + 0x777d]
0x41bb:	mov	edx, 0x37
0x41c0:	mov	esi, 1
0x41c5:	call	0x1d50


0x4136:	mov	esi, 0x2f
0x413b:	mov	rbx, rdi
0x413e:	call	0x1b00


0x3f80:	cmp	qword ptr [rdi + 0x30], 0
0x3f85:	jne	0x3f98


0x3f34:	cmp	eax, 0x4000
0x3f39:	je	0x3fd0


0x3e8c:	test	dl, dl
0x3e8e:	je	0x3eca


0x3c71:	pop	rbx
0x3c72:	mov	rax, r14
0x3c75:	pop	rbp
0x3c76:	pop	r12
0x3c78:	pop	r13
0x3c7a:	pop	r14
0x3c7c:	ret	


0x3c40:	mov	r12, rcx
0x3c43:	mov	r13, rdi
0x3c46:	mov	rbp, rdx
0x3c49:	lea	rbx, [rsi + 8]
0x3c4d:	jmp	0x3c5f


0x3a80:	lea	rsi, [rip + 0x7db1]
0x3a87:	xor	edi, edi
0x3a89:	call	0x1a60


0x3a35:	lea	rsi, [rip + 0x7e17]
0x3a3c:	xor	edi, edi
0x3a3e:	call	0x1a60


0x3828:	mov	ebp, 2
0x382d:	jmp	0x31bc


0x30be:	cmp	byte ptr [rsi + 8], 1
0x30c2:	mov	r13, rsi
0x30c5:	lea	r12, [rip + 0x872c]
0x30cc:	mov	ebp, 2
0x30d1:	sbb	esi, esi
0x30d3:	xor	edx, edx
0x30d5:	and	esi, 0xffffffc0
0x30d8:	add	esi, 0x258
0x30de:	call	0x67d0


0x2df0:	cmp	dl, 1
0x2df3:	mov	r14d, edx
0x2df6:	mov	eax, 0
0x2dfb:	sbb	ebp, ebp
0x2dfd:	mov	qword ptr [rsp + 0x50], -1
0x2e06:	not	ebp
0x2e08:	and	ebp, 4
0x2e0b:	test	dl, dl
0x2e0d:	cmovne	r14d, eax
0x2e11:	jmp	0x2cb1


0x2c0c:	xor	ebp, ebp
0x2c0e:	test	dl, dl
0x2c10:	mov	dword ptr [r9], 2
0x2c17:	setne	bpl
0x2c1b:	mov	edx, 0x30900
0x2c20:	xor	eax, eax
0x2c22:	mov	rsi, r15
0x2c25:	mov	r12, r9
0x2c28:	mov	qword ptr [rsp + 0x50], -1
0x2c31:	shl	ebp, 2
0x2c34:	call	0x1aa0


0x2b60:	mov	rcx, rdx
0x2b63:	mov	r8d, 0x100
0x2b69:	mov	rdx, rsi
0x2b6c:	mov	esi, edi
0x2b6e:	mov	edi, 1
0x2b73:	call	0x1ae0


0x2b4e:	test	rax, rax
0x2b51:	js	0x2ba6


0x19e0:	jmp	qword ptr [rip + 0x20d402]


0x24fd:	lea	rsi, [rip + 0x864c]
0x2504:	xor	edi, edi
0x2506:	call	0x1a60


0x24cf:	lea	rsi, [rip + 0x8652]
0x24d6:	xor	edi, edi
0x24d8:	call	0x1a60


0x2459:	cmp	qword ptr [rip + 0x20cb8f], 0
0x2461:	push	rbp
0x2462:	mov	rbp, rsp
0x2465:	je	0x2473


0x2488:	ret	


0x2440:	pop	rbp
0x2441:	ret	


0x2428:	mov	rax, qword ptr [rip + 0x20cbb9]
0x242f:	test	rax, rax
0x2432:	je	0x2440


0x23f0:	pop	rbp
0x23f1:	ret	


0x23d7:	mov	rax, qword ptr [rip + 0x20cbf2]
0x23de:	test	rax, rax
0x23e1:	je	0x23f0




0x1972:	add	rsp, 8
0x1976:	ret	


0x1970:	call	rax




0x1a20:	jmp	qword ptr [rip + 0x20d3e2]


0xa639:	mov	rax, qword ptr [rsp + 0x10]
0xa63e:	cmp	dword ptr [rip + 0x204c17], 0
0xa645:	mov	dword ptr [rsp], 0x18
0xa64c:	mov	r12d, dword ptr [rax + 0x10]
0xa650:	mov	edx, r12d
0xa653:	js	0xa783


0xa680:	cmp	esi, 0xb
0xa683:	je	0xa6b0




0x1aa0:	jmp	qword ptr [rip + 0x20d3a2]




0xa3e0:	mov	byte ptr [rdi + 0x1c], 1
0xa3e4:	ret	


0xa3cc:	add	edx, 3
0xa3cf:	and	edx, 3
0xa3d2:	mov	dword ptr [rdi + 0x14], edx
0xa3d5:	ret	


0x1990:	jmp	qword ptr [rip + 0x20d42a]


0x9da8:	mov	rax, rsi
0x9dab:	pxor	xmm0, xmm0
0x9daf:	shr	rax, 1
0x9db2:	and	esi, 1
0x9db5:	or	rax, rsi
0x9db8:	cvtsi2ss	xmm0, rax
0x9dbd:	addss	xmm0, xmm0
0x9dc1:	jmp	0x9c39


0x9c30:	pxor	xmm0, xmm0
0x9c34:	cvtsi2ss	xmm0, rsi
0x9c39:	divss	xmm0, dword ptr [r12 + 8]
0x9c40:	ucomiss	xmm0, dword ptr [rip + 0x26c5]
0x9c47:	jae	0x9d80


0x9bbc:	mov	rdi, qword ptr [r12 + 0x48]
0x9bc1:	test	rdi, rdi
0x9bc4:	je	0x9be1


0x9b3c:	cmp	rbp, rax
0x9b3f:	jae	0x9bbc


0x9b01:	add	r12, 0x10
0x9b05:	cmp	qword ptr [rbp + 8], r12
0x9b09:	ja	0x9aa0


0x9aa7:	mov	rbx, qword ptr [r12 + 8]
0x9aac:	mov	rax, qword ptr [rbp + 0x40]
0x9ab0:	test	rbx, rbx
0x9ab3:	je	0x9ae5




0x9880:	mov	rax, rdx
0x9883:	add	rdi, 1
0x9887:	shl	rax, 5
0x988b:	sub	rax, rdx
0x988e:	xor	edx, edx
0x9890:	add	rax, rcx
0x9893:	movzx	ecx, byte ptr [rdi]
0x9896:	div	rsi
0x9899:	test	cl, cl
0x989b:	jne	0x9880


0x9854:	add	rsp, 8
0x9858:	mov	rax, rbp
0x985b:	pop	rbx
0x985c:	pop	rbp
0x985d:	pop	r12
0x985f:	pop	r13
0x9861:	pop	r14
0x9863:	pop	r15
0x9865:	ret	


0x984a:	add	r14, 0x10
0x984e:	cmp	qword ptr [r15 + 8], r14
0x9852:	ja	0x9822


0x982a:	mov	rbx, r14
0x982d:	jmp	0x9833


0x97dd:	add	r9, 0x10
0x97e1:	cmp	qword ptr [rdi + 8], r9
0x97e5:	ja	0x979c


0x97a4:	cmp	rdx, r8
0x97a7:	jbe	0x97e7


0x96d3:	mov	rax, qword ptr [rdx]
0x96d6:	test	rax, rax
0x96d9:	jne	0x96f6


0x96f8:	sub	rsp, 8
0x96fc:	call	0x1990


0x956c:	add	rsi, 0x10
0x9570:	cmp	rsi, rdi
0x9573:	jb	0x9540


0x9546:	mov	rax, qword ptr [rsi + 8]
0x954a:	mov	edx, 1
0x954f:	test	rax, rax
0x9552:	je	0x9565


0x1d60:	jmp	qword ptr [rip + 0x20d242]


0x94ed:	add	rcx, 0x10
0x94f1:	cmp	rcx, r8
0x94f4:	jb	0x94c0


0x94c6:	mov	rax, qword ptr [rcx + 8]
0x94ca:	add	rsi, 1
0x94ce:	add	rdx, 1
0x94d2:	test	rax, rax
0x94d5:	je	0x94ed


0x9500:	cmp	qword ptr [rdi + 0x20], rdx
0x9504:	sete	al
0x9507:	ret	


0x94fe:	ret	


0x949c:	add	rsi, 0x10
0x94a0:	cmp	rsi, rdi
0x94a3:	jb	0x9470


0x9476:	mov	rdx, qword ptr [rsi + 8]
0x947a:	mov	ecx, 1
0x947f:	test	rdx, rdx
0x9482:	je	0x9495


0x93da:	add	r12, 0x10
0x93de:	cmp	qword ptr [r13 + 8], r12
0x93e2:	ja	0x9318


0x9325:	mov	rbx, qword ptr [r12 + 8]
0x932a:	test	rbx, rbx
0x932d:	jne	0x934c


0x92e0:	mov	qword ptr [rdi], rcx
0x92e3:	xor	eax, eax
0x92e5:	ret	


0x9292:	movss	xmm1, dword ptr [rip + 0x305e]
0x929a:	ucomiss	xmm1, xmm0
0x929d:	jbe	0x92e0


0x90e0:	test	rax, rax
0x90e3:	jne	0x90ef


0x90a7:	test	rcx, rcx
0x90aa:	je	0x90e5




0x1ce0:	jmp	qword ptr [rip + 0x20d282]


0x8f30:	mov	qword ptr [rdi + 0x10], 1
0x8f38:	mov	rax, qword ptr [rsi]
0x8f3b:	mov	qword ptr [rdi], rcx
0x8f3e:	mov	qword ptr [rdi + 8], rax
0x8f42:	xor	eax, eax
0x8f44:	ret	


0x8f16:	cmp	qword ptr [rdi], rcx
0x8f19:	je	0x8f48


0x1b20:	jmp	qword ptr [rip + 0x20d362]








0x8500:	movzx	eax, word ptr [rbp + 0x74]
0x8504:	mov	ebx, 3
0x8509:	mov	r12, rdi
0x850c:	mov	word ptr [rbp + 0x74], bx
0x8510:	cmp	ax, 1
0x8514:	je	0x8760


0x83b1:	mov	rdi, qword ptr [rbp + 0x10]
0x83b5:	call	0x1da0


0x83ac:	call	0x6db0


0x8366:	jmp	0x8480


0x837f:	mov	rbx, qword ptr [rdi + 0x10]
0x8383:	test	rbx, rbx
0x8386:	jne	0x8370


0x7fce:	test	sil, 0x12
0x7fd2:	je	0x8338


0x7a47:	and	eax, 0x204
0x7a4c:	mov	rsi, qword ptr [rbp + 0x30]
0x7a50:	mov	edi, 0xffffff9c
0x7a55:	cmp	eax, 0x200
0x7a5a:	jne	0x7a60


0x7a3a:	test	al, 1
0x7a3c:	mov	edx, 0x20000
0x7a41:	jne	0x7b48


0x1bc0:	jmp	qword ptr [rip + 0x20d312]


0x7545:	mov	rax, qword ptr [rsp + 0x18]
0x754a:	xor	rax, qword ptr fs:[0x28]
0x7553:	jne	0x75ae


0x7528:	cmp	qword ptr [rax + 0x58], 0
0x752d:	js	0x7545


0x7300:	test	r12d, r12d
0x7303:	js	0x7440


0x72c5:	and	bh, 2
0x72c8:	je	0x72d3


0x7225:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x7227:	seta	al
0x722a:	sbb	al, 0
0x722c:	test	al, al
0x722e:	jne	0x72c0


0x1c80:	jmp	qword ptr [rip + 0x20d2b2]


0x1da0:	jmp	qword ptr [rip + 0x20d222]


0x7068:	mov	edi, dword ptr [rdi + 0x28]
0x706b:	xor	ebp, ebp
0x706d:	call	0x1c70


0x7090:	mov	edx, 1
0x7095:	mov	esi, 0xffffff9c
0x709a:	call	0x6fe0


0x7078:	lea	rdi, [rbx + 0x60]
0x707c:	call	0x6e00


0x7041:	call	0x1990


0x6ffb:	test	byte ptr [rbx + 0x48], 4
0x6fff:	jne	0x7005


0x7010:	lea	rdi, [rbx + 0x60]
0x7014:	call	0xa370


0x6eea:	add	rsp, 0x98
0x6ef1:	pop	rbx
0x6ef2:	pop	rbp
0x6ef3:	pop	r12
0x6ef5:	pop	r13
0x6ef7:	ret	


0x6f62:	call	0x1ab0


0x6ea0:	mov	r8, qword ptr [rip + 0x208121]
0x6ea7:	lea	rcx, [rip - 0x4ae]
0x6eae:	lea	rdx, [rip - 0x4c5]
0x6eb5:	xor	esi, esi
0x6eb7:	mov	edi, 0xd
0x6ebc:	call	0x98d0


0x6e79:	mov	rax, qword ptr [rbp + 0x78]
0x6e7d:	mov	rsi, rsp
0x6e80:	mov	rdi, r12
0x6e83:	mov	qword ptr [rsp], rax
0x6e87:	call	0x9660


0x6dd2:	mov	rdi, rbx
0x6dd5:	mov	rbx, rbp
0x6dd8:	call	0x1da0


0x6dcd:	call	0x1b60


0x6c4c:	shl	rsi, 3
0x6c50:	call	0x1c80


0x6ce4:	call	0x1da0


0x6c81:	mov	rcx, r13
0x6c84:	mov	edx, 8
0x6c89:	mov	rsi, r12
0x6c8c:	call	0x19f0


0x6c6a:	mov	rdx, rdi
0x6c6d:	nop	dword ptr [rax]
0x6c70:	add	rdx, 8
0x6c74:	mov	qword ptr [rdx - 8], rbx
0x6c78:	mov	rbx, qword ptr [rbx + 0x10]
0x6c7c:	test	rbx, rbx
0x6c7f:	jne	0x6c70


0x6a60:	mov	rdx, rbx
0x6a63:	mov	edi, 1
0x6a68:	call	0x1c00


0x6ac4:	test	dl, dl
0x6ac6:	jne	0x6a60


0x697a:	cmp	qword ptr [rdi + 0x48], 0
0x697f:	jne	0x696a


0x1cf0:	jmp	qword ptr [rip + 0x20d27a]


0x694c:	mov	rdx, qword ptr [rdi + 0x58]
0x6950:	sub	rdx, qword ptr [rdi + 0x48]
0x6954:	add	rax, rdx
0x6957:	ret	


0x1c30:	jmp	qword ptr [rip + 0x20d2da]


0x1c60:	jmp	qword ptr [rip + 0x20d2c2]




0x6840:	cmp	qword ptr [rsi + 0x58], 0
0x6845:	setne	al
0x6848:	ret	






0x672a:	call	0x1b90


0x66e1:	sub	rsp, 8
0x66e5:	call	0x6790


0x66c2:	mov	qword ptr [rsi], rax
0x66c5:	mov	rsi, rax
0x66c8:	jmp	0x65a0


0x66b7:	mov	rdx, rax
0x66ba:	shr	rdx, 1
0x66bd:	lea	rax, [rdx + rax + 1]
0x66c2:	mov	qword ptr [rsi], rax
0x66c5:	mov	rsi, rax
0x66c8:	jmp	0x65a0


0x6678:	xor	edx, edx
0x667a:	mov	eax, 0x80
0x667f:	xor	r8d, r8d
0x6682:	div	r9
0x6685:	test	rax, rax
0x6688:	sete	r8b
0x668c:	lea	rcx, [r8 + rax]
0x6690:	jmp	0x6655


0x6655:	mov	rax, rcx
0x6658:	mul	r9
0x665b:	seto	dl
0x665e:	test	rax, rax
0x6661:	movzx	edx, dl
0x6664:	js	0x666b


0x666b:	sub	rsp, 8
0x666f:	call	0x6790


0x662f:	mov	rax, rcx
0x6632:	shr	rax, 1
0x6635:	lea	rcx, [rax + rcx + 1]
0x663a:	mov	qword ptr [rsi], rcx
0x663d:	imul	rcx, r9
0x6641:	mov	rsi, rcx
0x6644:	jmp	0x65a0


0x65f9:	jmp	0x65a0


0x65c8:	call	0x1da0


0x6579:	jmp	0x6540


0x1b40:	jmp	qword ptr [rip + 0x20d352]


0x643c:	test	r11b, r11b
0x643f:	jne	0x6465


0x6432:	add	r9, 1
0x6436:	cmp	r9, 0xa
0x643a:	jne	0x6410


0x6426:	mov	rax, qword ptr [rax]
0x6429:	test	rax, rax
0x642c:	mov	qword ptr [r8 + r9*8], rax
0x6430:	je	0x643c


0x636b:	call	0x5ee0


0x6361:	add	r9, 1
0x6365:	cmp	r9, 0xa
0x6369:	jne	0x6340


0x6355:	mov	rax, qword ptr [r11]
0x6358:	test	rax, rax
0x635b:	mov	qword ptr [r8 + r9*8], rax
0x635f:	je	0x636b


0x6310:	add	r9, 1
0x6314:	cmp	qword ptr [r8 + r9*8], 0
0x6319:	jne	0x6310




0x5d5a:	mov	qword ptr [rsp + 0x28], rsi
0x5d5f:	mov	qword ptr [rsp + 0x30], rdx
0x5d64:	mov	rcx, rsp
0x5d67:	mov	rdx, r8
0x5d6a:	mov	rsi, r9
0x5d6d:	call	0x5500


0x59a9:	lea	rbx, [rip + 0x2096e0]
0x59b0:	cmp	r12, rbx
0x59b3:	je	0x59c4


0x5992:	call	0x1da0


0x57ae:	mov	qword ptr [rdi + 0x28], rsi
0x57b2:	mov	qword ptr [rdi + 0x30], rdx
0x57b6:	ret	




0x1d50:	jmp	qword ptr [rip + 0x20d24a]


0x1b00:	jmp	qword ptr [rip + 0x20d372]


0x3f87:	lea	rsi, [rip + 0x792a]
0x3f8e:	xor	edi, edi
0x3f90:	jmp	0x1a60


0x3f98:	lea	rsi, [rip + 0x792c]
0x3f9f:	xor	edi, edi
0x3fa1:	jmp	0x1a60


0x3fd0:	lea	rsi, [rip + 0x7901]
0x3fd7:	xor	edi, edi
0x3fd9:	jmp	0x1a60


0x3f3f:	cmp	eax, 0xa000
0x3f44:	je	0x3fb0


0x3e80:	add	rax, 1
0x3e84:	movzx	edx, byte ptr [rax]
0x3e87:	cmp	dl, 0x2f
0x3e8a:	je	0x3e80


0x3eca:	ret	


0x3e90:	mov	rcx, rax
0x3e93:	xor	esi, esi
0x3e95:	jmp	0x3eb5


0x3c5f:	mov	rdx, r12
0x3c62:	mov	rsi, rbp
0x3c65:	mov	rdi, r13
0x3c68:	call	0x1b70


0x31bc:	mov	rbx, qword ptr [rsp + 0xc8]
0x31c4:	xor	rbx, qword ptr fs:[0x28]
0x31cd:	mov	eax, ebp
0x31cf:	jne	0x38e0


0x2cb1:	cmp	qword ptr [rbx + 0x20], 0
0x2cb6:	jne	0x2de0


0x1ae0:	jmp	qword ptr [rip + 0x20d382]


0x2ba6:	call	0x19a0


0x2b53:	xor	eax, eax
0x2b55:	pop	rbx
0x2b56:	ret	




0x2473:	call	0x23c0


0x2467:	mov	rdi, qword ptr [rip + 0x20cb9a]
0x246e:	call	0x1da8


0x2434:	pop	rbp
0x2435:	jmp	rax


0x23e3:	pop	rbp
0x23e4:	jmp	rax




0xa783:	xor	esi, esi
0xa785:	xor	eax, eax
0xa787:	call	0x1a20


0xa659:	xor	eax, eax
0xa65b:	mov	esi, 0x406
0xa660:	call	0x1a20


0xa6b0:	mov	edi, ebp
0xa6b2:	xor	eax, eax
0xa6b4:	call	0x1a20


0xa685:	jg	0xa6e0






0x9c39:	divss	xmm0, dword ptr [r12 + 8]
0x9c40:	ucomiss	xmm0, dword ptr [rip + 0x26c5]
0x9c47:	jae	0x9d80


0x9c4d:	ucomiss	xmm0, dword ptr [rip + 0x26bc]
0x9c54:	jb	0x9dd0


0x9d80:	xor	ebx, ebx
0x9d82:	mov	rcx, qword ptr [rsp + 0x58]
0x9d87:	xor	rcx, qword ptr fs:[0x28]
0x9d90:	mov	eax, ebx
0x9d92:	jne	0x9e2a


0x9bb1:	add	rbp, 0x10
0x9bb5:	cmp	qword ptr [r12 + 8], rbp
0x9bba:	ja	0x9b90


0x9be1:	mov	rdi, qword ptr [r12]
0x9be5:	call	0x1da0


0x9ae5:	test	rax, rax
0x9ae8:	je	0x9af0


0x9822:	mov	rdi, qword ptr [r14]
0x9825:	test	rdi, rdi
0x9828:	je	0x984a


0x9833:	mov	rsi, r13
0x9836:	call	r12


0x97e7:	mov	rax, r8
0x97ea:	ret	


0x979c:	mov	rcx, qword ptr [r9]
0x979f:	test	rcx, rcx
0x97a2:	je	0x97dd


0x97a9:	mov	qword ptr [rsi + r8*8], rcx
0x97ad:	mov	rcx, qword ptr [r9 + 8]
0x97b1:	lea	rax, [r8 + 1]
0x97b5:	test	rcx, rcx
0x97b8:	je	0x97da


0x96f6:	ret	


0x9540:	cmp	qword ptr [rsi], 0
0x9544:	je	0x956c


0x9565:	cmp	rbx, rdx
0x9568:	cmovb	rbx, rdx
0x956c:	add	rsi, 0x10
0x9570:	cmp	rsi, rdi
0x9573:	jb	0x9540




0x9470:	cmp	qword ptr [rsi], 0
0x9474:	je	0x949c


0x94a5:	ret	


0x9495:	cmp	rax, rcx
0x9498:	cmovb	rax, rcx
0x949c:	add	rsi, 0x10
0x94a0:	cmp	rsi, rdi
0x94a3:	jb	0x9470


0x9318:	mov	r15, qword ptr [r12]
0x931c:	test	r15, r15
0x931f:	je	0x93da


0x932f:	jmp	0x938b


0x934c:	mov	r15, qword ptr [rbx]
0x934f:	mov	rdi, rbp
0x9352:	mov	rsi, r15
0x9355:	call	0x9120


0x929f:	movss	xmm1, dword ptr [rdx + 0xc]
0x92a4:	ucomiss	xmm1, dword ptr [rip + 0x3051]
0x92ab:	jbe	0x92e0


0x90e5:	add	rdi, 2
0x90e9:	cmp	rdi, -1
0x90ed:	jne	0x9088


0x90ac:	mov	r8d, 0x10
0x90b2:	mov	esi, 9
0x90b7:	mov	ecx, 3
0x90bc:	jmp	0x90c9




0x8f48:	mov	rax, qword ptr [rdi + 8]
0x8f4c:	cmp	qword ptr [rsi], rax
0x8f4f:	jne	0x8f1b


0x8f1b:	lea	r8, [rdx + 1]
0x8f1f:	xor	eax, eax
0x8f21:	test	rdx, r8
0x8f24:	mov	qword ptr [rdi + 0x10], r8
0x8f28:	je	0x8f60




0x8760:	mov	rsi, rbp
0x8763:	xor	edx, edx
0x8765:	call	0x6a40


0x851a:	cmp	ax, 2
0x851e:	movzx	ecx, word ptr [rbp + 0x70]
0x8522:	je	0x8610


0x8480:	mov	rbx, rdi
0x8483:	mov	rdi, rbx
0x8486:	call	0x1da0


0x8388:	mov	rbx, qword ptr [rdi + 8]
0x838c:	call	0x1da0


0x8370:	call	0x1da0


0x7fd8:	mov	r13, rdi
0x7fdb:	mov	esi, 1
0x7fe0:	mov	edi, 0x80
0x7fe5:	mov	r14, rdx
0x7fe8:	call	0x1b90


0x7a5c:	mov	edi, dword ptr [r15 + 0x2c]
0x7a60:	lea	rcx, [rsp + 0x64]
0x7a65:	call	0xa4a0


0x7a60:	lea	rcx, [rsp + 0x64]
0x7a65:	call	0xa4a0


0x7b48:	xor	edx, edx
0x7b4a:	cmp	qword ptr [rbp + 0x58], 0
0x7b4f:	setne	dl
0x7b52:	shl	edx, 0x11
0x7b55:	jmp	0x7a47




0x7555:	add	rsp, 0x28
0x7559:	ret	


0x75ae:	call	0x1ab0


0x752f:	mov	rcx, qword ptr [rsi]
0x7532:	cmp	qword ptr [rcx + 0x10], 0
0x7537:	je	0x75b3


0x7440:	mov	byte ptr [rsp + 0xf], 0
0x7445:	jmp	0x7254


0x7309:	test	bl, 2
0x730c:	mov	r15d, r12d
0x730f:	mov	byte ptr [rsp + 0xf], 0
0x7314:	jne	0x7280


0x72d3:	xor	ebx, ebx
0x72d5:	mov	rcx, qword ptr [rsp + 0xa8]
0x72dd:	xor	rcx, qword ptr fs:[0x28]
0x72e6:	mov	eax, ebx
0x72e8:	jne	0x7425


0x72ca:	test	r12d, r12d
0x72cd:	jns	0x7380


0x7234:	test	r9d, r9d
0x7237:	jne	0x72c5






0x1c70:	jmp	qword ptr [rip + 0x20d2ba]


0x7001:	test	esi, esi
0x7003:	jns	0x7030


0x7005:	mov	dword ptr [rbx + 0x2c], ebp
0x7008:	add	rsp, 8
0x700c:	pop	rbx
0x700d:	pop	rbp
0x700e:	ret	


0x1ab0:	jmp	qword ptr [rip + 0x20d39a]


0x1b60:	jmp	qword ptr [rip + 0x20d342]


0x19f0:	jmp	qword ptr [rip + 0x20d3fa]


0x6c70:	add	rdx, 8
0x6c74:	mov	qword ptr [rdx - 8], rbx
0x6c78:	mov	rbx, qword ptr [rbx + 0x10]
0x6c7c:	test	rbx, rbx
0x6c7f:	jne	0x6c70


0x1c00:	jmp	qword ptr [rip + 0x20d2f2]


0x6ac8:	mov	rdx, rsi
0x6acb:	mov	esi, dword ptr [r12 + 0x2c]
0x6ad0:	mov	r8d, 0x100
0x6ad6:	mov	rcx, rbx
0x6ad9:	mov	edi, 1
0x6ade:	call	0x1ae0


0x6981:	push	r12
0x6983:	push	rbp
0x6984:	mov	r12d, edx
0x6987:	push	rbx
0x6988:	mov	rbp, rsi
0x698b:	mov	rbx, rdi
0x698e:	call	0x1bf0








0x1b90:	jmp	qword ptr [rip + 0x20d32a]


0x6666:	test	rdx, rdx
0x6669:	je	0x663a




0x6441:	call	0x5ee0


0x6465:	mov	dword ptr [rsp + 8], r10d
0x646a:	jmp	0x6441


0x6410:	cmp	r10d, 0x2f
0x6414:	ja	0x646c


0x6340:	mov	eax, dword ptr [r10]
0x6343:	cmp	eax, 0x2f
0x6346:	ja	0x638a


0x59c4:	pop	rbx
0x59c5:	mov	dword ptr [rip + 0x2096a9], 1
0x59cf:	pop	rbp
0x59d0:	pop	r12
0x59d2:	ret	


0x59b5:	mov	rdi, r12
0x59b8:	call	0x1da0






0x3fb0:	lea	rsi, [rip + 0x792b]
0x3fb7:	xor	edi, edi
0x3fb9:	jmp	0x1a60


0x3f46:	cmp	eax, 0x6000
0x3f4b:	je	0x3fe0


0x3eb5:	cmp	dl, 0x2f
0x3eb8:	jne	0x3ea0


0x1b70:	jmp	qword ptr [rip + 0x20d33a]


0x31d5:	add	rsp, 0xd8
0x31dc:	pop	rbx
0x31dd:	pop	rbp
0x31de:	pop	r12
0x31e0:	pop	r13
0x31e2:	pop	r14
0x31e4:	pop	r15
0x31e6:	ret	


0x38e0:	call	0x1ab0


0x2cbc:	mov	eax, dword ptr [r13 + 4]
0x2cc0:	cmp	eax, 5
0x2cc3:	je	0x2cf2


0x2de0:	mov	eax, 3
0x2de5:	jmp	0x2cf7




0x1da8:	jmp	qword ptr [rip + 0x20d242]


0xa687:	cmp	esi, 4
0xa68a:	je	0xa760


0xa6e0:	cmp	esi, 0x407
0xa6e6:	jg	0xa730


0x9dd0:	cvttss2si	rsi, xmm0
0x9dd5:	jmp	0x9c78


0x9c5a:	subss	xmm0, dword ptr [rip + 0x26ae]
0x9c62:	movabs	rax, 0x8000000000000000
0x9c6c:	cvttss2si	rsi, xmm0
0x9c71:	xor	rsi, rax
0x9c74:	nop	dword ptr [rax]
0x9c78:	mov	rdi, rsi
0x9c7b:	call	0x9060


0x9d98:	add	rsp, 0x60
0x9d9c:	pop	rbx
0x9d9d:	pop	rbp
0x9d9e:	pop	r12
0x9da0:	ret	


0x9e2a:	call	0x1ab0


0x9b90:	mov	rdi, qword ptr [rbp + 8]
0x9b94:	test	rdi, rdi
0x9b97:	je	0x9bb1


0x9b76:	add	rbp, 0x10
0x9b7a:	cmp	rax, rbp
0x9b7d:	ja	0x9b48


0x9b51:	mov	rbx, rbp
0x9b54:	jmp	0x9b63


0x9af0:	mov	qword ptr [r12], 0
0x9af8:	mov	qword ptr [r12 + 8], 0
0x9b01:	add	r12, 0x10
0x9b05:	cmp	qword ptr [rbp + 8], r12
0x9b09:	ja	0x9aa0


0x9aea:	mov	rdi, qword ptr [r12]
0x9aee:	call	rax


0x9ac6:	mov	rdx, qword ptr [rbx + 8]
0x9aca:	mov	rcx, qword ptr [rbp + 0x48]
0x9ace:	mov	qword ptr [rbx], 0
0x9ad5:	test	rdx, rdx
0x9ad8:	mov	qword ptr [rbx + 8], rcx
0x9adc:	mov	qword ptr [rbp + 0x48], rbx
0x9ae0:	mov	rbx, rdx
0x9ae3:	jne	0x9ab8


0x9abd:	mov	rdi, qword ptr [rbx]
0x9ac0:	call	rax


0x97da:	mov	r8, rax
0x97dd:	add	r9, 0x10
0x97e1:	cmp	qword ptr [rdi + 8], r9
0x97e5:	ja	0x979c


0x96e9:	mov	rax, qword ptr [rdx]
0x96ec:	test	rax, rax
0x96ef:	je	0x96e0


0x9558:	mov	rax, qword ptr [rax + 8]
0x955c:	add	rdx, 1
0x9560:	test	rax, rax
0x9563:	jne	0x9558


0x94e0:	mov	rax, qword ptr [rax + 8]
0x94e4:	add	rdx, 1
0x94e8:	test	rax, rax
0x94eb:	jne	0x94e0


0x9488:	mov	rdx, qword ptr [rdx + 8]
0x948c:	add	rcx, 1
0x9490:	test	rdx, rdx
0x9493:	jne	0x9488


0x938b:	test	r14b, r14b
0x938e:	mov	qword ptr [r12 + 8], 0
0x9397:	jne	0x93da


0x92ad:	movss	xmm1, dword ptr [rdx]
0x92b1:	ucomiss	xmm1, dword ptr [rip + 0x3048]
0x92b8:	jb	0x92e0


0x9088:	mov	rax, rdi
0x908b:	mov	rcx, rdi
0x908e:	mul	r9
0x9091:	mov	rax, rdx
0x9094:	shr	rax, 1
0x9097:	lea	rax, [rax + rax*2]
0x909b:	sub	rcx, rax
0x909e:	cmp	rdi, 9
0x90a2:	mov	rax, rcx
0x90a5:	jbe	0x90e0


0x90c9:	add	rcx, 2
0x90cd:	xor	edx, edx
0x90cf:	mov	rax, rdi
0x90d2:	div	rcx
0x90d5:	add	rsi, r8
0x90d8:	cmp	rsi, rdi
0x90db:	mov	rax, rdx
0x90de:	jb	0x90c0


0x8f51:	mov	eax, 1
0x8f56:	ret	


0x8f60:	test	r8, r8
0x8f63:	je	0x8f51


0x8f2a:	ret	


0x8610:	lea	eax, [rcx - 0xc]
0x8613:	cmp	ax, 1
0x8617:	jbe	0x8690


0x8528:	cmp	cx, 1
0x852c:	jne	0x8560


0x75b3:	call	0x1990


0x7539:	mov	rsi, qword ptr [rdx + 0x80]
0x7540:	cmp	qword ptr [rcx], rsi
0x7543:	je	0x7590


0x7254:	mov	edi, dword ptr [r13 + 0x2c]
0x7258:	mov	rdx, rbp
0x725b:	mov	esi, ebx
0x725d:	call	0x7190


0x731a:	test	rbp, rbp
0x731d:	je	0x7340


0x7280:	lea	rdx, [rsp + 0x10]
0x7285:	mov	esi, r15d
0x7288:	mov	edi, 1
0x728d:	call	0x1c50


0x72ee:	add	rsp, 0xb8
0x72f5:	pop	rbx
0x72f6:	pop	rbp
0x72f7:	pop	r12
0x72f9:	pop	r13
0x72fb:	pop	r14
0x72fd:	pop	r15
0x72ff:	ret	


0x7425:	call	0x1ab0


0x7380:	mov	edi, r12d
0x7383:	xor	ebx, ebx
0x7385:	call	0x1b50


0x723d:	test	r12d, r12d
0x7240:	jns	0x742a




0x7030:	mov	edi, esi
0x7032:	call	0x1b50












0x663a:	mov	qword ptr [rsi], rcx
0x663d:	imul	rcx, r9
0x6641:	mov	rsi, rcx
0x6644:	jmp	0x65a0


0x3fe0:	lea	rsi, [rip + 0x7909]
0x3fe7:	xor	edi, edi
0x3fe9:	jmp	0x1a60


0x3f51:	cmp	eax, 0x2000
0x3f56:	je	0x3ff0


0x3eba:	add	rcx, 1
0x3ebe:	movzx	edx, byte ptr [rcx]
0x3ec1:	mov	esi, 1
0x3ec6:	test	dl, dl
0x3ec8:	jne	0x3eb5


0x3ea0:	test	sil, sil
0x3ea3:	je	0x3eaa




0x2cf2:	mov	eax, 2
0x2cf7:	mov	rcx, qword ptr [rsp + 0xb8]
0x2cff:	xor	rcx, qword ptr fs:[0x28]
0x2d08:	jne	0x3083


0x2cc5:	cmp	byte ptr [r13], 0
0x2cca:	jne	0x2ce9


0x2cf7:	mov	rcx, qword ptr [rsp + 0xb8]
0x2cff:	xor	rcx, qword ptr fs:[0x28]
0x2d08:	jne	0x3083


0xa760:	mov	eax, dword ptr [rsp]
0xa763:	cmp	eax, 0x2f
0xa766:	ja	0xa854


0xa690:	jg	0xa750


0xa6e8:	cmp	esi, 0x406
0xa6ee:	jge	0xa760


0xa730:	cmp	esi, 0x409
0xa736:	je	0xa760


0x9b7f:	mov	rbp, qword ptr [r12]
0x9b83:	cmp	rbp, rax
0x9b86:	jae	0x9bbc


0x9b48:	mov	rdi, qword ptr [rbp]
0x9b4c:	test	rdi, rdi
0x9b4f:	je	0x9b76


0x9b63:	call	qword ptr [r12 + 0x40]


0x9ab8:	test	rax, rax
0x9abb:	je	0x9ac6


0x97f0:	ret	


0x97c5:	mov	r8, qword ptr [rcx]
0x97c8:	add	rax, 1
0x97cc:	mov	qword ptr [rsi + rax*8 - 8], r8
0x97d1:	mov	rcx, qword ptr [rcx + 8]
0x97d5:	test	rcx, rcx
0x97d8:	jne	0x97c0


0x96e0:	add	rdx, 0x10
0x96e4:	cmp	rdx, rcx
0x96e7:	jae	0x96f8


0x96f1:	ret	


0x9399:	mov	rsi, r15
0x939c:	mov	rdi, rbp
0x939f:	call	0x9120


0x92ba:	addss	xmm1, dword ptr [rip + 0x3032]
0x92c2:	movss	xmm2, dword ptr [rdx + 4]
0x92c7:	ucomiss	xmm2, xmm1
0x92ca:	jbe	0x92e0


0x90c0:	add	r8, 8
0x90c4:	test	rdx, rdx
0x90c7:	je	0x90e5


0x8f65:	jmp	0x8f38


0x8690:	mov	edx, 1
0x8695:	mov	rsi, rbp
0x8698:	call	0x6a40


0x8619:	cmp	cx, 1
0x861d:	jne	0x8560


0x852e:	jmp	0x8750


0x8560:	mov	rbx, qword ptr [rbp + 0x10]
0x8564:	test	rbx, rbx
0x8567:	jne	0x8538


0x7590:	mov	rsi, qword ptr [rdx + 0x78]
0x7594:	cmp	qword ptr [rcx + 8], rsi
0x7598:	jne	0x7545


0x7340:	and	bh, 2
0x7343:	jne	0x73d8


0x731f:	lea	rdx, [rip + 0x4198]
0x7326:	mov	ecx, 3
0x732b:	mov	rsi, rbp
0x732e:	mov	rdi, rdx
0x7331:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1c50:	jmp	qword ptr [rip + 0x20d2ca]


0x1b50:	jmp	qword ptr [rip + 0x20d34a]


0x7246:	test	bh, 2
0x7249:	jne	0x7390


0x742a:	test	bl, 2
0x742d:	mov	r15d, r12d
0x7430:	mov	byte ptr [rsp + 0xf], 1
0x7435:	je	0x7326


0x3ff0:	lea	rsi, [rip + 0x790c]
0x3ff7:	xor	edi, edi
0x3ff9:	jmp	0x1a60


0x3f5c:	cmp	eax, 0x1000
0x3f61:	je	0x4000


0x3eaa:	add	rcx, 1
0x3eae:	movzx	edx, byte ptr [rcx]
0x3eb1:	test	dl, dl
0x3eb3:	je	0x3eca


0x3ea5:	mov	rax, rcx
0x3ea8:	xor	esi, esi
0x3eaa:	add	rcx, 1
0x3eae:	movzx	edx, byte ptr [rcx]
0x3eb1:	test	dl, dl
0x3eb3:	je	0x3eca


0x2d0e:	add	rsp, 0xc8
0x2d15:	pop	rbx
0x2d16:	pop	rbp
0x2d17:	pop	r12
0x2d19:	pop	r13
0x2d1b:	pop	r14
0x2d1d:	pop	r15
0x2d1f:	ret	


0x3083:	call	0x1ab0


0x2ccc:	cmp	eax, 3
0x2ccf:	je	0x2cd8


0x2ce9:	cmp	eax, 3
0x2cec:	je	0x2e20


0xa76c:	add	rax, qword ptr [rsp + 0x10]
0xa771:	mov	edx, dword ptr [rax]
0xa773:	mov	edi, ebp
0xa775:	xor	eax, eax
0xa777:	call	0x1a20


0xa854:	mov	rax, qword ptr [rsp + 8]
0xa859:	jmp	0xa771


0xa696:	cmp	esi, 2
0xa699:	je	0xa760


0xa750:	cmp	esi, 9
0xa753:	je	0xa6b0


0xa6f0:	cmp	esi, 0x401
0xa6f6:	je	0xa6b0


0xa738:	jl	0xa6b0


0x97c0:	cmp	rdx, rax
0x97c3:	je	0x97f0


0x92cc:	movss	xmm3, dword ptr [rip + 0x3030]
0x92d4:	ucomiss	xmm3, xmm2
0x92d7:	jb	0x92e0


0x8f38:	mov	rax, qword ptr [rsi]
0x8f3b:	mov	qword ptr [rdi], rcx
0x8f3e:	mov	qword ptr [rdi + 8], rax
0x8f42:	xor	eax, eax
0x8f44:	ret	


0x8623:	test	dl, 0x40
0x8626:	je	0x86d8


0x8750:	cmp	ax, 4
0x8754:	jne	0x8623


0x8569:	mov	rbx, qword ptr [rbp + 8]
0x856d:	cmp	qword ptr [rbx + 0x18], 0
0x8572:	jne	0x8ae0


0x8538:	mov	qword ptr [r12], rbx
0x853c:	mov	rdi, rbp
0x853f:	call	0x1da0


0x759a:	mov	rdx, qword ptr [rax + 0x78]
0x759e:	mov	rax, qword ptr [rax + 0x80]
0x75a5:	mov	qword ptr [rcx + 8], rdx
0x75a9:	mov	qword ptr [rcx], rax
0x75ac:	jmp	0x7545


0x7349:	mov	edi, r15d
0x734c:	call	0x1c70


0x73d8:	movzx	r14d, byte ptr [rsp + 0xf]
0x73de:	mov	esi, r15d
0x73e1:	mov	rdi, r13
0x73e4:	xor	ebx, ebx
0x73e6:	xor	r14d, 1
0x73ea:	movzx	edx, r14b
0x73ee:	call	0x6fe0


0x7331:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x7333:	seta	al
0x7336:	sbb	al, 0
0x7338:	test	al, al
0x733a:	je	0x7280






0x724f:	mov	byte ptr [rsp + 0xf], 1
0x7254:	mov	edi, dword ptr [r13 + 0x2c]
0x7258:	mov	rdx, rbp
0x725b:	mov	esi, ebx
0x725d:	call	0x7190


0x7390:	lea	r15, [r13 + 0x60]
0x7394:	mov	rdi, r15
0x7397:	call	0xa360


0x7326:	mov	ecx, 3
0x732b:	mov	rsi, rbp
0x732e:	mov	rdi, rdx
0x7331:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x743b:	jmp	0x7280


0x4000:	lea	rsi, [rip + 0x7913]
0x4007:	xor	edi, edi
0x4009:	jmp	0x1a60


0x3f67:	cmp	eax, 0xc000
0x3f6c:	je	0x3fc0


0x2cd8:	call	0x6500


0x2cd1:	cmp	byte ptr [r13 + 0x19], 0
0x2cd6:	je	0x2cf2


0x2e20:	xor	r12d, r12d
0x2e23:	test	ebp, ebp
0x2e25:	je	0x2d20


0xa771:	mov	edx, dword ptr [rax]
0xa773:	mov	edi, ebp
0xa775:	xor	eax, eax
0xa777:	call	0x1a20


0xa69f:	jg	0xa6b0


0xa759:	jg	0xa760


0xa6f8:	cmp	esi, 0x402
0xa6fe:	je	0xa760


0xa73e:	cmp	esi, 0x40a
0xa744:	jne	0xa708


0x92d9:	ucomiss	xmm0, xmm1
0x92dc:	ja	0x92e5


0x86d8:	mov	rdi, qword ptr [r12 + 8]
0x86dd:	test	rdi, rdi
0x86e0:	je	0x88f8


0x862c:	mov	rax, qword ptr [r12 + 0x18]
0x8631:	cmp	qword ptr [rbp + 0x78], rax
0x8635:	je	0x86d8


0x875a:	jmp	0x863b


0x8578:	mov	qword ptr [r12], rbx
0x857c:	mov	rdi, rbp
0x857f:	call	0x1da0


0x8ae0:	mov	rax, qword ptr [rbx + 0x48]
0x8ae4:	mov	rdx, qword ptr [r12 + 0x20]
0x8ae9:	mov	esi, 3
0x8aee:	mov	qword ptr [r12], rbx
0x8af2:	mov	rdi, r12
0x8af5:	mov	byte ptr [rdx + rax], 0
0x8af9:	call	0x75c0


0x3fc0:	lea	rsi, [rip + 0x7958]
0x3fc7:	xor	edi, edi
0x3fc9:	jmp	0x1a60


0x3f6e:	lea	rsi, [rip + 0x79b1]
0x3f75:	xor	edi, edi
0x3f77:	jmp	0x1a60


0x2d20:	lea	rbx, [rsp + 0x20]
0x2d25:	mov	edi, dword ptr [rsp + 0x10]
0x2d29:	mov	rsi, r15
0x2d2c:	mov	rdx, rbx
0x2d2f:	call	0x2b40


0x2e2b:	cmp	ebp, 4
0x2e2e:	jne	0x2f78


0xa6a1:	cmp	esi, 1
0xa6a4:	jne	0xa708


0xa75b:	cmp	esi, 8
0xa75e:	jne	0xa708


0xa700:	cmp	esi, 0x400
0xa706:	je	0xa760


0xa746:	jmp	0xa6b0


0xa708:	mov	eax, dword ptr [rsp]
0xa70b:	cmp	eax, 0x2f
0xa70e:	ja	0xa84a


0x88f8:	mov	esi, 3
0x88fd:	mov	rdi, r12
0x8900:	call	0x75c0


0x86e6:	test	dh, 0x10
0x86e9:	jne	0x88e2


0x863b:	test	byte ptr [rbp + 0x72], 2
0x863f:	jne	0x8b20


0x2e34:	cmp	byte ptr [r13 + 9], 0
0x2e39:	je	0x2f50


0x2f78:	mov	rsi, qword ptr [rsp + 8]
0x2f7d:	mov	edi, 4
0x2f82:	call	0x5b70


0xa714:	add	rax, qword ptr [rsp + 0x10]
0xa719:	mov	rdx, qword ptr [rax]
0xa71c:	mov	edi, ebp
0xa71e:	xor	eax, eax
0xa720:	call	0x1a20


0xa84a:	mov	rax, qword ptr [rsp + 8]
0xa84f:	jmp	0xa719


0x86ef:	mov	rcx, qword ptr [rbp + 0x30]
0x86f3:	mov	edx, 0xffffffff
0x86f8:	mov	rsi, rbp
0x86fb:	mov	rdi, r12
0x86fe:	call	0x71d0


0x88e2:	and	dh, 0xef
0x88e5:	mov	dword ptr [r12 + 0x48], edx
0x88ea:	call	0x6db0


0x8645:	mov	rdi, qword ptr [r12 + 8]
0x864a:	test	rdi, rdi
0x864d:	je	0x865d


0x8b20:	mov	edi, dword ptr [rbp + 0x44]
0x8b23:	call	0x1b50


0x2f50:	cmp	byte ptr [r13 + 0xa], 0
0x2f55:	je	0x2f5c


0x2e3f:	mov	rsi, qword ptr [rsp + 8]
0x2e44:	mov	edi, 4
0x2e49:	call	0x5b70


0xa719:	mov	rdx, qword ptr [rax]
0xa71c:	mov	edi, ebp
0xa71e:	xor	eax, eax
0xa720:	call	0x1a20


0x865d:	mov	edi, dword ptr [r12 + 0x48]
0x8662:	mov	r10d, 6
0x8668:	lea	rsi, [r12 + 0x58]
0x866d:	mov	word ptr [rbp + 0x70], r10w
0x8672:	mov	rdx, rbp
0x8675:	call	0x7500


0x864f:	call	0x6db0


0x2f5c:	mov	rsi, qword ptr [rsp + 8]
0x2f61:	mov	edi, 4
0x2f66:	mov	ebx, 0x15
0x2f6b:	call	0x5b70


0x2f57:	test	r14b, r14b
0x2f5a:	jne	0x2f78


0x867a:	pop	rbx
0x867b:	mov	rax, rbp
0x867e:	pop	rbp
0x867f:	pop	r12
0x8681:	pop	r13
0x8683:	pop	r14
0x8685:	ret	


0x8703:	test	eax, eax
0x8705:	je	0x89c2


0x89c2:	mov	rbp, qword ptr [r12 + 8]
0x89c7:	jmp	0x8916


0x870b:	call	0x19a0


0x8916:	mov	qword ptr [r12 + 8], 0
0x891f:	jmp	0x8892


0x8892:	mov	rax, qword ptr [rbp + 8]
0x8896:	lea	rsi, [rbp + 0x108]
0x889d:	mov	rdi, qword ptr [rax + 0x48]
0x88a1:	mov	rax, qword ptr [rax + 0x38]
0x88a5:	cmp	byte ptr [rax + rdi - 1], 0x2f
0x88aa:	lea	rdx, [rdi - 1]
0x88ae:	cmove	rdi, rdx
0x88b2:	add	rdi, qword ptr [r12 + 0x20]
0x88b7:	mov	byte ptr [rdi], 0x2f
0x88ba:	mov	rax, qword ptr [rbp + 0x60]
0x88be:	add	rdi, 1
0x88c2:	lea	rdx, [rax + 1]
0x88c6:	call	0x1cc0


0x1cc0:	jmp	qword ptr [rip + 0x20d292]




0x2d34:	test	eax, eax
0x2d36:	jne	0x2f00


0x2d3c:	mov	eax, dword ptr [rsp + 0x38]
0x2d40:	and	eax, 0xf000
0x2d45:	cmp	eax, 0xa000
0x2d4a:	je	0x2f94


0x2f00:	call	0x19a0


0x2f94:	cmp	dword ptr [r13 + 4], 3
0x2f99:	jne	0x2cf2


0x2d50:	cmp	eax, 0x4000
0x2d55:	je	0x2e34


0x2f9f:	jmp	0x2d5b


0x2d5b:	mov	rsi, qword ptr [rsp + 8]
0x2d60:	mov	edi, 4
0x2d65:	call	0x5b70


0x2cdd:	test	al, al
0x2cdf:	je	0x2fa8


0x2fa8:	lea	rbx, [rsp + 0x20]
0x2fad:	mov	edi, dword ptr [rsp + 0x10]
0x2fb1:	mov	rsi, r15
0x2fb4:	mov	rdx, rbx
0x2fb7:	call	0x2b40


0x2ce5:	mov	eax, dword ptr [r13 + 4]
0x2ce9:	cmp	eax, 3
0x2cec:	je	0x2e20


0x2fbc:	test	eax, eax
0x2fbe:	jne	0x2f00


0x2fc4:	mov	eax, dword ptr [rsp + 0x38]
0x2fc8:	and	eax, 0xf000
0x2fcd:	cmp	eax, 0xa000
0x2fd2:	je	0x2ce5


0x2fd8:	mov	edi, dword ptr [rsp + 0x10]
0x2fdc:	mov	ecx, 0x200
0x2fe1:	mov	edx, 2
0x2fe6:	mov	rsi, r15
0x2fe9:	call	0x1a10


0x1a10:	jmp	qword ptr [rip + 0x20d3ea]




0x2478:	mov	byte ptr [rip + 0x20cc69], 1
0x247f:	pop	rbp
0x2480:	ret	


0x7019:	test	eax, eax
0x701b:	js	0x7005


0x701d:	mov	edi, eax
0x701f:	call	0x1b50


0x73f3:	jmp	0x72d5


0x72d5:	mov	rcx, qword ptr [rsp + 0xa8]
0x72dd:	xor	rcx, qword ptr fs:[0x28]
0x72e6:	mov	eax, ebx
0x72e8:	jne	0x7425


0x709f:	jmp	0x7078


0x8654:	mov	qword ptr [r12 + 8], 0
0x865d:	mov	edi, dword ptr [r12 + 0x48]
0x8662:	mov	r10d, 6
0x8668:	lea	rsi, [r12 + 0x58]
0x866d:	mov	word ptr [rbp + 0x70], r10w
0x8672:	mov	rdx, rbp
0x8675:	call	0x7500


0x88ef:	mov	qword ptr [r12 + 8], 0
0x88f8:	mov	esi, 3
0x88fd:	mov	rdi, r12
0x8900:	call	0x75c0


0x739c:	test	al, al
0x739e:	mov	byte ptr [rsp + 0xf], al
0x73a2:	jne	0x7254


0x73a8:	mov	rdi, r15
0x73ab:	call	0xa3b0


0x73b0:	test	eax, eax
0x73b2:	mov	r15d, eax
0x73b5:	mov	ebx, dword ptr [r13 + 0x48]
0x73b9:	js	0x724f


0x73bf:	test	bl, 2
0x73c2:	mov	r12d, eax
0x73c5:	mov	byte ptr [rsp + 0xf], 1
0x73ca:	je	0x7340


0x73d0:	jmp	0x7280


0x6e24:	test	al, al
0x6e26:	je	0x6e10


0x6e10:	mov	rdi, rbx
0x6e13:	call	0xa3b0


0x6e28:	pop	rbx
0x6e29:	ret	


0x6e18:	test	eax, eax
0x6e1a:	jns	0x6e30


0x6e30:	mov	edi, eax
0x6e32:	call	0x1b50


0x7081:	add	rsp, 8
0x7085:	mov	eax, ebp
0x7087:	pop	rbx
0x7088:	pop	rbp
0x7089:	ret	


0x74dd:	test	al, al
0x74df:	je	0x74c1


0x74c1:	pop	rbx
0x74c2:	mov	eax, 1
0x74c7:	pop	rbp
0x74c8:	pop	r12
0x74ca:	ret	


0x74e1:	mov	edx, 2
0x74e6:	mov	qword ptr [rbx], rbx
0x74e9:	mov	word ptr [rbx + 0x70], dx
0x74ed:	pop	rbx
0x74ee:	pop	rbp
0x74ef:	pop	r12
0x74f1:	ret	


0x9c80:	mov	edx, 8
0x9c85:	mov	rbx, rax
0x9c88:	xor	ecx, ecx
0x9c8a:	mov	rax, rdx
0x9c8d:	mul	rbx
0x9c90:	jo	0x9e2f


0x9e2f:	mov	ecx, 1
0x9e34:	jmp	0x9c96


0x9c96:	test	rax, rax
0x9c99:	mov	eax, 1
0x9c9e:	cmovs	rcx, rax
0x9ca2:	test	rbx, rbx
0x9ca5:	je	0x9d80


0x9cab:	and	ecx, 1
0x9cae:	jne	0x9d80


0x9cb4:	cmp	qword ptr [rbp + 0x10], rbx
0x9cb8:	je	0x9de0


0x9de0:	mov	ebx, 1
0x9de5:	jmp	0x9d82


0x9cbe:	mov	esi, 0x10
0x9cc3:	mov	rdi, rbx
0x9cc6:	call	0x1b90


0x9d82:	mov	rcx, qword ptr [rsp + 0x58]
0x9d87:	xor	rcx, qword ptr fs:[0x28]
0x9d90:	mov	eax, ebx
0x9d92:	jne	0x9e2a


0x3ca3:	test	rax, rax
0x3ca6:	jne	0x3d48


0x3cac:	mov	rdi, rbx
0x3caf:	call	0x8e70


0x3d48:	xor	esi, esi
0x3d4a:	mov	rdi, rbx
0x3d4d:	mov	edx, 1
0x3d52:	call	0x6960


0x404c:	mov	rbx, rax
0x404f:	mov	rdi, rax
0x4052:	call	0x3ed0


0x6f79:	cmp	rax, 0x52654973
0x6f7f:	je	0x6fd0


0x6fd0:	mov	eax, 2
0x6fd5:	add	rsp, 8
0x6fd9:	ret	


0x6f81:	jle	0x6fb0


0x6fb0:	cmp	rax, 0x6969
0x6fb6:	je	0x6fc5


0x6f83:	cmp	rax, 0x58465342
0x6f89:	je	0x6fd0


0x6fc5:	xor	eax, eax
0x6fc7:	add	rsp, 8
0x6fcb:	ret	


0x6fb8:	cmp	rax, 0x9fa0
0x6fbe:	je	0x6fc5


0x6f8b:	mov	edx, 0xff534d42
0x6f90:	cmp	rax, rdx
0x6f93:	je	0x6fc5


0x6fc0:	test	rax, rax
0x6fc3:	jne	0x6f9d


0x6f95:	cmp	rax, 0x5346414f
0x6f9b:	je	0x6fc5


0x6f9d:	mov	eax, 1
0x6fa2:	add	rsp, 8
0x6fa6:	ret	


0xa8a1:	test	rbp, rbp
0xa8a4:	je	0xa8c6


0xa8c6:	add	rsp, 8
0xa8ca:	pop	rbx
0xa8cb:	pop	rbp
0xa8cc:	pop	r12
0xa8ce:	pop	r13
0xa8d0:	pop	r14
0xa8d2:	pop	r15
0xa8d4:	ret	


0xa8a6:	xor	ebx, ebx
0xa8a8:	nop	dword ptr [rax + rax]
0xa8b0:	mov	rdx, r15
0xa8b3:	mov	rsi, r14
0xa8b6:	mov	edi, r13d
0xa8b9:	call	qword ptr [r12 + rbx*8]


0x2fee:	test	eax, eax
0x2ff0:	je	0x2ce5


0x2ff6:	call	0x19a0


0x88cb:	movzx	eax, word ptr [rbp + 0x70]
0x88cf:	jmp	0x882e


0x882e:	cmp	ax, 0xb
0x8832:	mov	qword ptr [r12], rbp
0x8836:	je	0x86b8


0x86b8:	mov	rax, qword ptr [rbp + 0xa8]
0x86bf:	cmp	rax, 2
0x86c3:	je	0x8a68


0x883c:	cmp	ax, 1
0x8840:	jne	0x867a


0x8a68:	mov	rbx, qword ptr [rbp + 8]
0x8a6c:	cmp	qword ptr [rbx + 0x68], 0
0x8a71:	jne	0x8a84


0x86c9:	cmp	rax, 1
0x86cd:	je	0x867a


0x8846:	cmp	qword ptr [rbp + 0x58], 0
0x884b:	jne	0x8856


0x8a73:	mov	eax, dword ptr [r12 + 0x48]
0x8a78:	and	eax, 0x18
0x8a7b:	cmp	eax, 0x18
0x8a7e:	je	0x8bdd


0x8a84:	xor	edx, edx
0x8a86:	mov	rsi, rbp
0x8a89:	mov	rdi, r12
0x8a8c:	call	0x6a40


0x86cf:	call	0x1990


0x884d:	mov	rax, qword ptr [rbp + 0x78]
0x8851:	mov	qword ptr [r12 + 0x18], rax
0x8856:	mov	edi, dword ptr [r12 + 0x48]
0x885b:	lea	rsi, [r12 + 0x58]
0x8860:	mov	rdx, rbp
0x8863:	call	0x7450


0x8856:	mov	edi, dword ptr [r12 + 0x48]
0x885b:	lea	rsi, [r12 + 0x58]
0x8860:	mov	rdx, rbp
0x8863:	call	0x7450


0x8bdd:	mov	esi, dword ptr [r12 + 0x2c]
0x8be2:	mov	rdi, rbx
0x8be5:	call	0x6f70


0x8bea:	cmp	eax, 2
0x8bed:	jne	0x8a84


0x8bf3:	movzx	eax, word ptr [rbp + 0x70]
0x8bf7:	jmp	0x883c


0x8868:	test	al, al
0x886a:	jne	0x867a


0x8870:	call	0x19a0


0x6e37:	jmp	0x6e1c


0x7024:	mov	dword ptr [rbx + 0x2c], ebp
0x7027:	add	rsp, 8
0x702b:	pop	rbx
0x702c:	pop	rbp
0x702d:	ret	


0x8b28:	jmp	0x8645


0x7037:	mov	dword ptr [rbx + 0x2c], ebp
0x703a:	add	rsp, 8
0x703e:	pop	rbx
0x703f:	pop	rbp
0x7040:	ret	


0x738a:	jmp	0x72d5


0x7292:	test	eax, eax
0x7294:	je	0x7360


0x7360:	mov	rax, qword ptr [rsp + 0x10]
0x7365:	cmp	qword ptr [r14 + 0x78], rax
0x7369:	je	0x7400


0x729a:	mov	ebx, 0xffffffff
0x729f:	test	r12d, r12d
0x72a2:	jns	0x72d5


0x7400:	mov	rax, qword ptr [rsp + 0x18]
0x7405:	cmp	qword ptr [r14 + 0x80], rax
0x740c:	jne	0x736f


0x736f:	call	0x19a0


0x72a4:	call	0x19a0


0x7412:	mov	ebx, dword ptr [r13 + 0x48]
0x7416:	jmp	0x7340


0x3c6d:	test	eax, eax
0x3c6f:	jne	0x3c50


0x3c50:	mov	r14, qword ptr [rbx]
0x3c53:	add	rbp, r12
0x3c56:	add	rbx, 8
0x3c5a:	test	r14, r14
0x3c5d:	je	0x3c71


0x9ccb:	test	rax, rax
0x9cce:	mov	qword ptr [rsp], rax
0x9cd2:	je	0x9d80


0x9cd8:	mov	qword ptr [rsp + 0x10], rbx
0x9cdd:	shl	rbx, 4
0x9ce1:	mov	qword ptr [rsp + 0x28], r12
0x9ce6:	add	rbx, rax
0x9ce9:	mov	rax, qword ptr [rbp + 0x30]
0x9ced:	mov	r12, rsp
0x9cf0:	xor	edx, edx
0x9cf2:	mov	rsi, rbp
0x9cf5:	mov	rdi, r12
0x9cf8:	mov	qword ptr [rsp + 8], rbx
0x9cfd:	mov	qword ptr [rsp + 0x18], 0
0x9d06:	mov	qword ptr [rsp + 0x30], rax
0x9d0b:	mov	rax, qword ptr [rbp + 0x38]
0x9d0f:	mov	qword ptr [rsp + 0x20], 0
0x9d18:	mov	qword ptr [rsp + 0x38], rax
0x9d1d:	mov	rax, qword ptr [rbp + 0x40]
0x9d21:	mov	qword ptr [rsp + 0x40], rax
0x9d26:	mov	rax, qword ptr [rbp + 0x48]
0x9d2a:	mov	qword ptr [rsp + 0x48], rax
0x9d2f:	call	0x92f0


0x9d34:	test	al, al
0x9d36:	mov	ebx, eax
0x9d38:	jne	0x9df0


0x9d3e:	mov	rax, qword ptr [rsp + 0x48]
0x9d43:	mov	edx, 1
0x9d48:	mov	rsi, r12
0x9d4b:	mov	rdi, rbp
0x9d4e:	mov	qword ptr [rbp + 0x48], rax
0x9d52:	call	0x92f0


0x9df0:	mov	rdi, qword ptr [rbp]
0x9df4:	call	0x1da0


0x9d57:	test	al, al
0x9d59:	je	0x9e39


0x9e39:	call	0x1990


0x9d5f:	xor	edx, edx
0x9d61:	mov	rsi, r12
0x9d64:	mov	rdi, rbp
0x9d67:	call	0x92f0


0x9d6c:	test	al, al
0x9d6e:	je	0x9e39


0x9d74:	mov	rdi, qword ptr [rsp]
0x9d78:	call	0x1da0


0x7fed:	test	rax, rax
0x7ff0:	mov	rbx, rax
0x7ff3:	je	0x824e


0x824e:	add	rsp, 0x28
0x8252:	mov	rax, rbx
0x8255:	pop	rbx
0x8256:	pop	rbp
0x8257:	pop	r12
0x8259:	pop	r13
0x825b:	pop	r14
0x825d:	pop	r15
0x825f:	ret	


0x7ff9:	test	bpl, 2
0x7ffd:	mov	qword ptr [rax + 0x40], r14
0x8001:	jne	0x8260


0x8007:	mov	rdi, qword ptr [r13]
0x800b:	mov	dword ptr [rax + 0x48], ebp
0x800e:	mov	dword ptr [rbx + 0x2c], 0xffffff9c
0x8015:	test	rdi, rdi
0x8018:	je	0x827f


0x8260:	mov	rdi, qword ptr [r13]
0x8264:	mov	eax, ebp
0x8266:	mov	dword ptr [rbx + 0x2c], 0xffffff9c
0x826d:	and	ah, 0xfd
0x8270:	or	eax, 4
0x8273:	test	rdi, rdi
0x8276:	mov	dword ptr [rbx + 0x48], eax
0x8279:	jne	0x801e


0x827f:	mov	edx, 0x1000
0x8284:	jmp	0x8055


0x801e:	mov	r15, r13
0x8021:	xor	r12d, r12d
0x8024:	nop	dword ptr [rax]
0x8028:	call	0x1a80


0x8055:	lea	rsi, [rbx + 0x30]
0x8059:	lea	rdi, [rbx + 0x20]
0x805d:	call	0x70b0


0x672f:	test	rax, rax
0x6732:	je	0x6739


0x6734:	add	rsp, 8
0x6738:	ret	


0x6a6d:	test	eax, eax
0x6a6f:	je	0x6aeb


0x6aeb:	mov	eax, dword ptr [rbp + 0x90]
0x6af1:	and	eax, 0xf000
0x6af6:	cmp	eax, 0x4000
0x6afb:	je	0x6b20


0x6a71:	call	0x19a0


0x6b20:	mov	rax, qword ptr [rbp + 0x88]
0x6b27:	cmp	rax, 1
0x6b2b:	jbe	0x6bb0


0x6afd:	cmp	eax, 0xa000
0x6b02:	je	0x6bd8


0x6bb0:	mov	rax, -1
0x6bb7:	jmp	0x6b46


0x6b31:	cmp	qword ptr [rbp + 0x58], 0
0x6b36:	jle	0x6bb0


0x6bd8:	mov	eax, 0xc
0x6bdd:	jmp	0x6ab8


0x6b08:	cmp	eax, 0x8000
0x6b0d:	sete	al
0x6b10:	movzx	eax, al
0x6b13:	pop	rbx
0x6b14:	lea	eax, [rax + rax*4 + 3]
0x6b18:	pop	rbp
0x6b19:	pop	r12
0x6b1b:	ret	


0x6b46:	cmp	byte ptr [rbp + 0x108], 0x2e
0x6b4d:	mov	qword ptr [rbp + 0x68], rax
0x6b51:	mov	eax, 1
0x6b56:	jne	0x6ab8


0x6b38:	test	byte ptr [r12 + 0x48], 0x20
0x6b3e:	lea	rdx, [rax - 2]
0x6b42:	cmove	rax, rdx
0x6b46:	cmp	byte ptr [rbp + 0x108], 0x2e
0x6b4d:	mov	qword ptr [rbp + 0x68], rax
0x6b51:	mov	eax, 1
0x6b56:	jne	0x6ab8


0x6ab8:	pop	rbx
0x6ab9:	pop	rbp
0x6aba:	pop	r12
0x6abc:	ret	


0x6b5c:	cmp	byte ptr [rbp + 0x109], 0
0x6b63:	jne	0x6be8


0x6b69:	cmp	qword ptr [rbp + 0x58], 1
0x6b6e:	sbb	eax, eax
0x6b70:	and	eax, 0xfffffffc
0x6b73:	add	eax, 5
0x6b76:	jmp	0x6ab8


0x6be8:	mov	edx, dword ptr [rbp + 0x108]
0x6bee:	and	edx, 0xffff00
0x6bf4:	cmp	edx, 0x2e00
0x6bfa:	jne	0x6ab8


0x6c00:	jmp	0x6b69


0x8a91:	mov	edx, dword ptr [rbp + 0x90]
0x8a97:	mov	word ptr [rbp + 0x70], ax
0x8a9b:	and	edx, 0xf000
0x8aa1:	cmp	edx, 0x4000
0x8aa7:	jne	0x883c


0x8aad:	cmp	qword ptr [rbp + 0x58], 0
0x8ab2:	je	0x8bce


0x8bce:	cmp	ax, 1
0x8bd2:	jne	0x867a


0x8ab8:	mov	rcx, qword ptr [rbx + 0x68]
0x8abc:	lea	rdx, [rcx - 1]
0x8ac0:	cmp	rdx, -3
0x8ac4:	ja	0x8aca


0x8bd8:	jmp	0x884d


0x8ac6:	mov	qword ptr [rbx + 0x68], rdx
0x8aca:	cmp	ax, 1
0x8ace:	jne	0x867a


0x8aca:	cmp	ax, 1
0x8ace:	jne	0x867a


0x8ad4:	jmp	0x8856


0x869d:	cmp	ax, 1
0x86a1:	mov	word ptr [rbp + 0x70], ax
0x86a5:	je	0x89ec


0x89ec:	mov	esi, dword ptr [r12 + 0x48]
0x89f1:	test	sil, 4
0x89f5:	je	0x8bfc


0x86ab:	cmp	ax, 0xb
0x86af:	mov	qword ptr [r12], rbp
0x86b3:	jne	0x867a


0x8bfc:	mov	edi, dword ptr [r12 + 0x2c]
0x8c01:	lea	rdx, [rip + 0x28b7]
0x8c08:	call	0x7190


0x89fb:	mov	qword ptr [r12], rbp
0x89ff:	jmp	0x8846


0x876a:	mov	word ptr [rbp + 0x70], ax
0x876e:	mov	rax, rbp
0x8771:	pop	rbx
0x8772:	pop	rbp
0x8773:	pop	r12
0x8775:	pop	r13
0x8777:	pop	r14
0x8779:	ret	


0x6c91:	mov	r8, qword ptr [rbp + 0x10]
0x6c95:	mov	rcx, r12
0x6c98:	sub	rcx, 1
0x6c9c:	mov	rax, qword ptr [r8]
0x6c9f:	je	0x6d10


0x6d10:	mov	rdx, rax
0x6d13:	jmp	0x6cca


0x6ca1:	mov	rdi, rax
0x6ca4:	mov	rdx, r8
0x6ca7:	jmp	0x6cb3


0x6cca:	mov	qword ptr [rdx + 0x10], 0
0x6cd2:	add	rsp, 8
0x6cd6:	pop	rbx
0x6cd7:	pop	rbp
0x6cd8:	pop	r12
0x6cda:	pop	r13
0x6cdc:	ret	


0x6cb3:	mov	rsi, qword ptr [rdx + 8]
0x6cb7:	add	rdx, 8
0x6cbb:	sub	rcx, 1
0x6cbf:	mov	qword ptr [rdi + 0x10], rsi
0x6cc3:	jne	0x6cb0


0x6cc5:	mov	rdx, qword ptr [r8 + r12*8 - 8]
0x6cca:	mov	qword ptr [rdx + 0x10], 0
0x6cd2:	add	rsp, 8
0x6cd6:	pop	rbx
0x6cd7:	pop	rbp
0x6cd8:	pop	r12
0x6cda:	pop	r13
0x6cdc:	ret	


0x6cb0:	mov	rdi, qword ptr [rdx]
0x6cb3:	mov	rsi, qword ptr [rdx + 8]
0x6cb7:	add	rdx, 8
0x6cbb:	sub	rcx, 1
0x6cbf:	mov	qword ptr [rdi + 0x10], rsi
0x6cc3:	jne	0x6cb0


0x7351:	mov	ebx, eax
0x7353:	jmp	0x729f


0x729f:	test	r12d, r12d
0x72a2:	jns	0x72d5


0x7072:	test	eax, eax
0x7074:	setne	bpl
0x7078:	lea	rdi, [rbx + 0x60]
0x707c:	call	0x6e00


0x6ae3:	test	eax, eax
0x6ae5:	jne	0x6b80


0x6b80:	call	0x19a0


0x2b78:	test	eax, eax
0x2b7a:	je	0x2ba0


0x2ba0:	mov	rax, qword ptr [rbx + 0x30]
0x2ba4:	jmp	0x2b4e


0x2b7c:	mov	qword ptr [rbx + 0x30], -2
0x2b84:	call	0x19a0


0x4143:	test	rax, rax
0x4146:	je	0x419d


0x419d:	mov	qword ptr [rip + 0x20af74], rbx
0x41a4:	mov	qword ptr [rip + 0x20af1d], rbx
0x41ab:	pop	rbx
0x41ac:	ret	


0x4148:	lea	r8, [rax + 1]
0x414c:	mov	rdx, r8
0x414f:	sub	rdx, rbx
0x4152:	cmp	rdx, 6
0x4156:	jle	0x419d


0x4158:	lea	rsi, [rax - 6]
0x415c:	lea	rdi, [rip + 0x780d]
0x4163:	mov	ecx, 7
0x4168:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4168:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x416a:	seta	dl
0x416d:	sbb	dl, 0
0x4170:	test	dl, dl
0x4172:	jne	0x419d


0x4174:	lea	rdi, [rip + 0x77fd]
0x417b:	mov	ecx, 3
0x4180:	mov	rsi, r8
0x4183:	mov	rbx, r8
0x4186:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4186:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4188:	seta	dl
0x418b:	sbb	dl, 0
0x418e:	test	dl, dl
0x4190:	jne	0x419d


0x4192:	lea	rbx, [rax + 4]
0x4196:	mov	qword ptr [rip + 0x20af03], rbx
0x419d:	mov	qword ptr [rip + 0x20af74], rbx
0x41a4:	mov	qword ptr [rip + 0x20af1d], rbx
0x41ab:	pop	rbx
0x41ac:	ret	


0x41ca:	call	0x1990


0x6521:	test	eax, eax
0x6523:	mov	byte ptr [rip + 0x208d2f], 1
0x652a:	sete	al
0x652d:	mov	byte ptr [rip + 0x208d25], al
0x6533:	add	rsp, 8
0x6537:	ret	


0x68fe:	test	eax, eax
0x6900:	je	0x690a


0x6902:	test	dword ptr [rbx], 0x100
0x6908:	jne	0x6918


0x6918:	mov	rdi, rbx
0x691b:	mov	edx, 1
0x6920:	xor	esi, esi
0x6922:	call	0x6960


0x9d7d:	jmp	0x9d82


0x9df9:	mov	rax, qword ptr [rsp]
0x9dfd:	mov	qword ptr [rbp], rax
0x9e01:	mov	rax, qword ptr [rsp + 8]
0x9e06:	mov	qword ptr [rbp + 8], rax
0x9e0a:	mov	rax, qword ptr [rsp + 0x10]
0x9e0f:	mov	qword ptr [rbp + 0x10], rax
0x9e13:	mov	rax, qword ptr [rsp + 0x18]
0x9e18:	mov	qword ptr [rbp + 0x18], rax
0x9e1c:	mov	rax, qword ptr [rsp + 0x48]
0x9e21:	mov	qword ptr [rbp + 0x48], rax
0x9e25:	jmp	0x9d82


0x8584:	cmp	qword ptr [rbx + 0x58], -1
0x8589:	je	0x8a42


0x8a42:	mov	rdi, rbx
0x8a45:	xor	ebp, ebp
0x8a47:	call	0x1da0


0x858f:	cmp	word ptr [rbx + 0x70], 0xb
0x8594:	je	0x86cf


0x859a:	mov	rdx, qword ptr [r12 + 0x20]
0x859f:	mov	rax, qword ptr [rbx + 0x48]
0x85a3:	mov	byte ptr [rdx + rax], 0
0x85a7:	cmp	qword ptr [rbx + 0x58], 0
0x85ac:	je	0x8970


0x8970:	mov	rdi, r12
0x8973:	call	0x7050


0x85b2:	movzx	eax, word ptr [rbx + 0x72]
0x85b6:	test	al, 2
0x85b8:	je	0x8928


0x8928:	test	al, 1
0x892a:	jne	0x85d3


0x85be:	mov	eax, dword ptr [r12 + 0x48]
0x85c3:	mov	edi, dword ptr [rbx + 0x44]
0x85c6:	test	al, 4
0x85c8:	je	0x89cc


0x8930:	mov	rsi, qword ptr [rbx + 8]
0x8934:	lea	rcx, [rip + 0x2b83]
0x893b:	mov	edx, 0xffffffff
0x8940:	mov	rdi, r12
0x8943:	call	0x71d0


0x85d3:	mov	edi, dword ptr [r12 + 0x48]
0x85d8:	cmp	word ptr [rbx + 0x70], 2
0x85dd:	je	0x85f3


0x89cc:	test	ah, 2
0x89cf:	je	0x8b6d


0x85ce:	call	0x1b50


0x85f3:	and	edi, 0x2000
0x85f9:	mov	rbp, rbx
0x85fc:	je	0x867a


0x85df:	mov	ecx, dword ptr [rbx + 0x40]
0x85e2:	test	ecx, ecx
0x85e4:	je	0x8988


0x8b6d:	call	0x1c70


0x89d5:	mov	esi, edi
0x89d7:	mov	edx, 1
0x89dc:	mov	rdi, r12
0x89df:	call	0x6fe0


0x8988:	mov	eax, 6
0x898d:	lea	rsi, [r12 + 0x58]
0x8992:	mov	rdx, rbx
0x8995:	mov	word ptr [rbx + 0x70], ax
0x8999:	call	0x7500


0x85ea:	mov	edx, 7
0x85ef:	mov	word ptr [rbx + 0x70], dx
0x85f3:	and	edi, 0x2000
0x85f9:	mov	rbp, rbx
0x85fc:	je	0x867a


0x899e:	mov	edi, dword ptr [r12 + 0x48]
0x89a3:	jmp	0x85f3


0x89e4:	mov	edi, dword ptr [rbx + 0x44]
0x89e7:	jmp	0x85ce


0x8b72:	test	eax, eax
0x8b74:	je	0x8b89


0x8b89:	mov	edi, dword ptr [rbx + 0x44]
0x8b8c:	jmp	0x85ce


0x8b76:	call	0x19a0


0x8948:	test	eax, eax
0x894a:	je	0x85d3


0x8950:	call	0x19a0


0x8978:	test	eax, eax
0x897a:	jne	0x8950


0x897c:	jmp	0x85d3


0x8a4c:	call	0x19a0


0x8544:	cmp	qword ptr [rbx + 0x58], 0
0x8549:	je	0x8780


0x8780:	mov	rdi, r12
0x8783:	call	0x7050


0x854f:	movzx	eax, word ptr [rbx + 0x74]
0x8553:	mov	rbp, rbx
0x8556:	cmp	ax, 4
0x855a:	jne	0x8888


0x8888:	cmp	ax, 2
0x888c:	je	0x8b2d


0x8b2d:	mov	edx, 1
0x8b32:	mov	rsi, rbx
0x8b35:	mov	rdi, r12
0x8b38:	call	0x6a40


0x8b3d:	cmp	ax, 1
0x8b41:	mov	word ptr [rbx + 0x70], ax
0x8b45:	je	0x8ba1


0x8ba1:	mov	esi, dword ptr [r12 + 0x48]
0x8ba6:	test	sil, 4
0x8baa:	jne	0x8b47


0x8b47:	mov	esi, 3
0x8b4c:	mov	rbp, rbx
0x8b4f:	mov	word ptr [rbx + 0x74], si
0x8b53:	jmp	0x8892


0x8bac:	mov	edi, dword ptr [r12 + 0x2c]
0x8bb1:	lea	rdx, [rip + 0x2907]
0x8bb8:	call	0x7190


0x8788:	test	eax, eax
0x878a:	jne	0x8b91


0x8790:	test	dword ptr [r12 + 0x48], 0x102
0x8799:	mov	rdi, qword ptr [r12 + 0x58]
0x879e:	je	0x88d8


0x8b91:	or	dword ptr [r12 + 0x48], 0x2000
0x8b9a:	xor	ebp, ebp
0x8b9c:	jmp	0x867a


0x88d8:	call	0x1da0


0x87a4:	test	rdi, rdi
0x87a7:	je	0x87ae


0x87ae:	mov	rdx, qword ptr [rbx + 0x60]
0x87b2:	lea	rbp, [rbx + 0x108]
0x87b9:	mov	rdi, qword ptr [r12 + 0x20]
0x87be:	mov	rsi, rbp
0x87c1:	mov	qword ptr [rbx + 0x48], rdx
0x87c5:	add	rdx, 1
0x87c9:	call	0x1cc0


0x87a9:	call	0x9b20


0x87ce:	mov	esi, 0x2f
0x87d3:	mov	rdi, rbp
0x87d6:	call	0x1b00


0x87db:	test	rax, rax
0x87de:	je	0x880b


0x880b:	mov	rax, qword ptr [r12 + 0x20]
0x8810:	mov	edi, dword ptr [r12 + 0x48]
0x8815:	lea	rsi, [r12 + 0x58]
0x881a:	mov	rbp, rbx
0x881d:	mov	qword ptr [rbx + 0x38], rax
0x8821:	mov	qword ptr [rbx + 0x30], rax
0x8825:	call	0x7120


0x87e0:	cmp	rbp, rax
0x87e3:	je	0x89b0


0x89b0:	cmp	byte ptr [rbx + 0x109], 0
0x89b7:	jne	0x87e9


0x87e9:	lea	r13, [rax + 1]
0x87ed:	mov	rdi, r13
0x87f0:	call	0x1a80


0x89bd:	jmp	0x880b


0x88dd:	jmp	0x87ae


0x59bd:	mov	qword ptr [rip + 0x2096bc], rbx
0x59c4:	pop	rbx
0x59c5:	mov	dword ptr [rip + 0x2096a9], 1
0x59cf:	pop	rbp
0x59d0:	pop	r12
0x59d2:	ret	


0x8375:	cmp	qword ptr [rbx + 0x58], 0
0x837a:	mov	rdi, rbx
0x837d:	js	0x839b


0x839b:	mov	rdi, rbx
0x839e:	call	0x1da0


0x8391:	cmp	qword ptr [rbx + 0x58], 0
0x8396:	mov	rdi, rbx
0x8399:	jns	0x837f


0x848b:	jmp	0x83a3


0x9bd9:	test	rbx, rbx
0x9bdc:	mov	rdi, rbx
0x9bdf:	jne	0x9bd0


0x9bd0:	mov	rbx, qword ptr [rdi + 8]
0x9bd4:	call	0x1da0


0x9bea:	pop	rbx
0x9beb:	mov	rdi, r12
0x9bee:	pop	rbp
0x9bef:	pop	r12
0x9bf1:	jmp	0x1da0


0x9ba9:	test	rbx, rbx
0x9bac:	mov	rdi, rbx
0x9baf:	jne	0x9ba0


0x9ba0:	mov	rbx, qword ptr [rdi + 8]
0x9ba4:	call	0x1da0


0x5997:	mov	qword ptr [rip + 0x2096ee], 0x100
0x59a2:	mov	qword ptr [rip + 0x2096ef], rbx
0x59a9:	lea	rbx, [rip + 0x2096e0]
0x59b0:	cmp	r12, rbx
0x59b3:	je	0x59c4


0x65cd:	xor	eax, eax
0x65cf:	pop	rbx
0x65d0:	ret	


0x6ce9:	mov	qword ptr [rbp + 0x10], 0
0x6cf1:	mov	qword ptr [rbp + 0x38], 0
0x6cf9:	add	rsp, 8
0x6cfd:	mov	rax, rbx
0x6d00:	pop	rbx
0x6d01:	pop	rbp
0x6d02:	pop	r12
0x6d04:	pop	r13
0x6d06:	ret	


0x6ddd:	test	rbp, rbp
0x6de0:	jne	0x6dc0


0x6de2:	add	rsp, 8
0x6de6:	pop	rbx
0x6de7:	pop	rbp
0x6de8:	ret	


0x6dc0:	mov	rdi, qword ptr [rbx + 0x18]
0x6dc4:	mov	rbp, qword ptr [rbx + 0x10]
0x6dc8:	test	rdi, rdi
0x6dcb:	je	0x6dd2


0x83ba:	mov	rdi, qword ptr [rbp + 0x20]
0x83be:	call	0x1da0


0x83c3:	mov	eax, dword ptr [rbp + 0x48]
0x83c6:	test	ah, 2
0x83c9:	je	0x8430


0x8430:	test	al, 4
0x8432:	jne	0x83d6


0x83cb:	mov	edi, dword ptr [rbp + 0x2c]
0x83ce:	test	edi, edi
0x83d0:	jns	0x8460


0x8434:	mov	edi, dword ptr [rbp + 0x28]
0x8437:	call	0x1c70


0x83d6:	xor	ebx, ebx
0x83d8:	lea	rdi, [rbp + 0x60]
0x83dc:	call	0x6e00


0x8460:	call	0x1b50


0x8465:	test	eax, eax
0x8467:	je	0x83d6


0x846d:	call	0x19a0


0x83e1:	mov	rdi, qword ptr [rbp + 0x50]
0x83e5:	test	rdi, rdi
0x83e8:	je	0x83ef


0x83ef:	test	dword ptr [rbp + 0x48], 0x102
0x83f6:	mov	rdi, qword ptr [rbp + 0x58]
0x83fa:	je	0x8420


0x83ea:	call	0x9b20


0x8420:	call	0x1da0


0x83fc:	test	rdi, rdi
0x83ff:	je	0x8406


0x8406:	mov	rdi, rbp
0x8409:	call	0x1da0


0x8401:	call	0x9b20


0x843c:	test	eax, eax
0x843e:	jne	0x8490


0x8440:	mov	edi, dword ptr [rbp + 0x28]
0x8443:	call	0x1b50


0x8490:	call	0x19a0


0x8448:	test	eax, eax
0x844a:	je	0x83d6


0x844c:	call	0x19a0


0x840e:	test	ebx, ebx
0x8410:	jne	0x84c1


0x8416:	mov	eax, ebx
0x8418:	pop	rbx
0x8419:	pop	rbp
0x841a:	pop	r12
0x841c:	ret	


0x84c1:	call	0x19a0


0x8425:	jmp	0x8406


0x597c:	cmp	rbx, rbp
0x597f:	jne	0x5970


0x5970:	mov	rdi, qword ptr [rbx]
0x5973:	add	rbx, 0x10
0x5977:	call	0x1da0


0x70ed:	mov	qword ptr [rbx], 0
0x70f4:	call	0x19a0


0x6c55:	test	rax, rax
0x6c58:	mov	rdi, rax
0x6c5b:	je	0x6ce0


0x6ce0:	mov	rdi, qword ptr [rbp + 0x10]
0x6ce4:	call	0x1da0


0x6c61:	mov	qword ptr [rbp + 0x10], rax
0x6c65:	test	rbx, rbx
0x6c68:	je	0x6c81


0x65b6:	test	rax, rax
0x65b9:	jne	0x65c0


0x65bb:	test	rbx, rbx
0x65be:	jne	0x65d1


0x65c0:	pop	rbx
0x65c1:	ret	


0x65d1:	call	0x6790


0x70d2:	test	rax, rax
0x70d5:	je	0x7108


0x7108:	mov	rdi, qword ptr [rbx]
0x710b:	call	0x1da0


0x70d7:	mov	qword ptr [rbx], rax
0x70da:	mov	eax, 1
0x70df:	pop	rbx
0x70e0:	ret	


0x7110:	mov	qword ptr [rbx], 0
0x7117:	xor	eax, eax
0x7119:	pop	rbx
0x711a:	ret	


0x8062:	test	al, al
0x8064:	mov	byte ptr [rsp + 0x16], al
0x8068:	je	0x8309


0x8309:	mov	rdi, rbx
0x830c:	xor	ebx, ebx
0x830e:	call	0x1da0


0x806e:	mov	rsi, qword ptr [r13]
0x8072:	test	rsi, rsi
0x8075:	je	0x8320


0x8320:	xor	r15d, r15d
0x8323:	test	r14, r14
0x8326:	jne	0x80b0


0x807b:	lea	rsi, [rip + 0x3e1f]
0x8082:	xor	edx, edx
0x8084:	mov	rdi, rbx
0x8087:	call	0x6d20


0x832c:	xor	r12d, r12d
0x832f:	jmp	0x81cc


0x80b0:	mov	eax, dword ptr [rbx + 0x48]
0x80b3:	shr	eax, 0xa
0x80b6:	and	eax, 1
0x80b9:	mov	byte ptr [rsp + 0x16], al
0x80bd:	test	rsi, rsi
0x80c0:	je	0x832c


0x81cc:	lea	rsi, [rip + 0x3cce]
0x81d3:	xor	edx, edx
0x81d5:	mov	rdi, rbx
0x81d8:	call	0x6d20


0x80c6:	shr	ebp, 0xb
0x80c9:	mov	qword ptr [rsp + 0x18], 0
0x80d2:	xor	r12d, r12d
0x80d5:	xor	ebp, 1
0x80d8:	mov	eax, ebp
0x80da:	xor	ebp, ebp
0x80dc:	and	eax, 1
0x80df:	mov	byte ptr [rsp + 0x17], al
0x80e3:	jmp	0x815c


0x815c:	mov	rdi, rsi
0x815f:	mov	qword ptr [rsp + 8], rsi
0x8164:	call	0x1a80


0x8313:	jmp	0x824e


0x7602:	test	eax, eax
0x7604:	mov	dword ptr [rsp + 0x64], eax
0x7608:	js	0x7b60


0x7b60:	mov	rdi, qword ptr [rbp + 0x18]
0x7b64:	call	0x1b60


0x760e:	cmp	qword ptr [r15 + 0x40], 0
0x7613:	je	0x7de8


0x7de8:	mov	qword ptr [rsp + 0x38], 0x186a0
0x7df1:	mov	byte ptr [rsp + 0x5f], 1
0x7df6:	mov	edi, dword ptr [r15 + 0x48]
0x7dfa:	jmp	0x762b


0x7619:	mov	qword ptr [rsp + 0x38], -1
0x7622:	mov	edi, dword ptr [r15 + 0x48]
0x7626:	mov	byte ptr [rsp + 0x5f], 1
0x762b:	mov	rcx, qword ptr [rbp + 0x48]
0x762f:	mov	rdx, qword ptr [rbp + 0x38]
0x7633:	mov	qword ptr [rsp + 0x40], 0
0x763c:	cmp	byte ptr [rdx + rcx - 1], 0x2f
0x7641:	lea	rax, [rcx - 1]
0x7645:	cmovne	rax, rcx
0x7649:	and	edi, 4
0x764c:	mov	qword ptr [rsp + 0x48], rax
0x7651:	je	0x7663


0x762b:	mov	rcx, qword ptr [rbp + 0x48]
0x762f:	mov	rdx, qword ptr [rbp + 0x38]
0x7633:	mov	qword ptr [rsp + 0x40], 0
0x763c:	cmp	byte ptr [rdx + rcx - 1], 0x2f
0x7641:	lea	rax, [rcx - 1]
0x7645:	cmovne	rax, rcx
0x7649:	and	edi, 4
0x764c:	mov	qword ptr [rsp + 0x48], rax
0x7651:	je	0x7663


0x7663:	mov	rax, qword ptr [rsp + 0x48]
0x7668:	mov	rbx, qword ptr [r15 + 0x30]
0x766c:	mov	byte ptr [rsp + 0x5e], 0
0x7671:	mov	byte ptr [rsp + 0x5d], 0
0x7676:	mov	qword ptr [rsp + 8], 0
0x767f:	mov	qword ptr [rsp + 0x10], 0
0x7688:	add	rax, 1
0x768c:	mov	qword ptr [rsp + 0x20], rbp
0x7691:	sub	rbx, rax
0x7694:	mov	qword ptr [rsp + 0x18], rax
0x7699:	mov	rax, qword ptr [rbp + 0x58]
0x769d:	mov	qword ptr [rsp + 0x28], rbx
0x76a2:	xor	ebx, ebx
0x76a4:	add	rax, 1
0x76a8:	mov	qword ptr [rsp + 0x30], rax
0x76ad:	jmp	0x778f


0x7653:	add	rax, qword ptr [r15 + 0x20]
0x7657:	lea	rbx, [rax + 1]
0x765b:	mov	byte ptr [rax], 0x2f
0x765e:	mov	qword ptr [rsp + 0x40], rbx
0x7663:	mov	rax, qword ptr [rsp + 0x48]
0x7668:	mov	rbx, qword ptr [r15 + 0x30]
0x766c:	mov	byte ptr [rsp + 0x5e], 0
0x7671:	mov	byte ptr [rsp + 0x5d], 0
0x7676:	mov	qword ptr [rsp + 8], 0
0x767f:	mov	qword ptr [rsp + 0x10], 0
0x7688:	add	rax, 1
0x768c:	mov	qword ptr [rsp + 0x20], rbp
0x7691:	sub	rbx, rax
0x7694:	mov	qword ptr [rsp + 0x18], rax
0x7699:	mov	rax, qword ptr [rbp + 0x58]
0x769d:	mov	qword ptr [rsp + 0x28], rbx
0x76a2:	xor	ebx, ebx
0x76a4:	add	rax, 1
0x76a8:	mov	qword ptr [rsp + 0x30], rax
0x76ad:	jmp	0x778f


0x778f:	mov	rax, qword ptr [rsp + 0x20]
0x7794:	mov	r13, qword ptr [rax + 0x18]
0x7798:	test	r13, r13
0x779b:	je	0x7c68


0x7c68:	mov	rbp, rax
0x7c6b:	cmp	byte ptr [rsp + 0x5d], 0
0x7c70:	jne	0x78d8


0x77a1:	call	0x19a0


0x7c76:	test	byte ptr [r15 + 0x48], 4
0x7c7b:	je	0x7c9b


0x78d8:	mov	rax, qword ptr [r15 + 8]
0x78dc:	mov	rcx, qword ptr [r15 + 0x20]
0x78e0:	test	rax, rax
0x78e3:	je	0x7910


0x7c9b:	cmp	qword ptr [rsp + 0x50], 0
0x7ca1:	jne	0x7d10


0x7c7d:	mov	rax, qword ptr [rsp + 0x18]
0x7c82:	cmp	qword ptr [r15 + 0x30], rax
0x7c86:	je	0x7c8d


0x7910:	mov	rax, qword ptr [rsp + 0x10]
0x7915:	jmp	0x7923


0x7ca3:	cmp	byte ptr [rsp + 0x5f], 0
0x7ca8:	je	0x7d10


0x7d10:	test	rbx, rbx
0x7d13:	jne	0x7cb6


0x7c8d:	sub	qword ptr [rsp + 0x40], 1
0x7c93:	mov	rax, qword ptr [rsp + 0x40]
0x7c98:	mov	byte ptr [rax], 0
0x7c9b:	cmp	qword ptr [rsp + 0x50], 0
0x7ca1:	jne	0x7d10


0x7c88:	test	rbx, rbx
0x7c8b:	jne	0x7c93


0x7923:	cmp	qword ptr [rax + 0x58], 0
0x7928:	js	0x7c76


0x7903:	mov	qword ptr [rax + 0x38], rcx
0x7907:	mov	rax, qword ptr [rax + 0x10]
0x790b:	test	rax, rax
0x790e:	jne	0x78e8


0x78f8:	sub	rdx, qword ptr [rax + 0x38]
0x78fc:	add	rdx, rcx
0x78ff:	mov	qword ptr [rax + 0x30], rdx
0x7903:	mov	qword ptr [rax + 0x38], rcx
0x7907:	mov	rax, qword ptr [rax + 0x10]
0x790b:	test	rax, rax
0x790e:	jne	0x78e8


0x7caa:	cmp	dword ptr [rsp + 0x58], 1
0x7caf:	je	0x7cf0


0x7d15:	cmp	dword ptr [rsp + 0x58], 3
0x7d1a:	je	0x7ed8


0x7cb6:	cmp	byte ptr [rsp + 0x5e], 0
0x7cbb:	jne	0x7db8


0x7c93:	mov	rax, qword ptr [rsp + 0x40]
0x7c98:	mov	byte ptr [rax], 0
0x7c9b:	cmp	qword ptr [rsp + 0x50], 0
0x7ca1:	jne	0x7d10


0x792e:	mov	rdx, qword ptr [rax + 0x30]
0x7932:	lea	rsi, [rax + 0x108]
0x7939:	cmp	rdx, rsi
0x793c:	je	0x7949


0x78e8:	mov	rdx, qword ptr [rax + 0x30]
0x78ec:	lea	rsi, [rax + 0x108]
0x78f3:	cmp	rdx, rsi
0x78f6:	je	0x7903


0x7cf0:	cmp	qword ptr [rbp + 0x58], 0
0x7cf5:	jne	0x7e26


0x7cb1:	test	rbx, rbx
0x7cb4:	je	0x7cf0


0x7ed8:	movzx	eax, word ptr [rbp + 0x70]
0x7edc:	cmp	ax, 7
0x7ee0:	je	0x7d20


0x7d20:	mov	rdi, qword ptr [rsp + 0x10]
0x7d25:	call	0x6db0


0x7cc1:	cmp	qword ptr [r15 + 0x40], 0
0x7cc6:	je	0x7b85


0x7db8:	lea	rax, [rip - 0x13af]
0x7dbf:	mov	rsi, qword ptr [rsp + 0x10]
0x7dc4:	mov	rdx, rbx
0x7dc7:	mov	rdi, r15
0x7dca:	mov	qword ptr [r15 + 0x40], rax
0x7dce:	call	0x6c10


0x7949:	mov	rdx, qword ptr [rax + 0x10]
0x794d:	mov	qword ptr [rax + 0x38], rcx
0x7951:	test	rdx, rdx
0x7954:	jne	0x7920


0x793e:	sub	rdx, qword ptr [rax + 0x38]
0x7942:	add	rdx, rcx
0x7945:	mov	qword ptr [rax + 0x30], rdx
0x7949:	mov	rdx, qword ptr [rax + 0x10]
0x794d:	mov	qword ptr [rax + 0x38], rcx
0x7951:	test	rdx, rdx
0x7954:	jne	0x7920


0x7cfb:	mov	rdi, r15
0x7cfe:	call	0x7050


0x7e26:	mov	rsi, qword ptr [rbp + 8]
0x7e2a:	lea	rcx, [rip + 0x368d]
0x7e31:	mov	edx, 0xffffffff
0x7e36:	mov	rdi, r15
0x7e39:	call	0x71d0


0x7ee6:	cmp	ax, 4
0x7eea:	je	0x7d20


0x7b85:	mov	rbx, qword ptr [rsp + 0x68]
0x7b8a:	xor	rbx, qword ptr fs:[0x28]
0x7b93:	mov	rax, qword ptr [rsp + 0x10]
0x7b98:	jne	0x7f71


0x7ccc:	cmp	rbx, 1
0x7cd0:	je	0x7b85


0x7956:	mov	rdx, qword ptr [rax + 8]
0x795a:	jmp	0x7920


0x7920:	mov	rax, rdx
0x7923:	cmp	qword ptr [rax + 0x58], 0
0x7928:	js	0x7c76


0x7ef0:	mov	esi, 6
0x7ef5:	mov	word ptr [rbp + 0x70], si
0x7ef9:	jmp	0x7d20


0x7b9e:	add	rsp, 0x78
0x7ba2:	pop	rbx
0x7ba3:	pop	rbp
0x7ba4:	pop	r12
0x7ba6:	pop	r13
0x7ba8:	pop	r14
0x7baa:	pop	r15
0x7bac:	ret	


0x7f71:	call	0x1ab0


0x7cd6:	mov	rsi, qword ptr [rsp + 0x10]
0x7cdb:	mov	rdx, rbx
0x7cde:	mov	rdi, r15
0x7ce1:	call	0x6c10


0x7e3e:	test	eax, eax
0x7e40:	setne	al
0x7e43:	jmp	0x7d08


0x7d08:	test	al, al
0x7d0a:	jne	0x7e93


0x7e93:	mov	edi, 7
0x7e98:	mov	word ptr [rbp + 0x70], di
0x7e9c:	or	dword ptr [r15 + 0x48], 0x2000
0x7ea4:	mov	rdi, qword ptr [rsp + 0x10]
0x7ea9:	call	0x6db0


0x7d03:	test	eax, eax
0x7d05:	setne	al
0x7d08:	test	al, al
0x7d0a:	jne	0x7e93


0x7ce6:	mov	qword ptr [rsp + 0x10], rax
0x7ceb:	jmp	0x7b85


0x7dd3:	mov	qword ptr [r15 + 0x40], 0
0x7ddb:	mov	qword ptr [rsp + 0x10], rax
0x7de0:	jmp	0x7b85


0x7eae:	mov	qword ptr [rsp + 0x10], 0
0x7eb7:	jmp	0x7b85


0x7d2a:	mov	qword ptr [rsp + 0x10], 0
0x7d33:	jmp	0x7b85


0x7b69:	cmp	dword ptr [rsp + 0x58], 3
0x7b6e:	mov	qword ptr [rbp + 0x18], 0
0x7b76:	je	0x7d9b


0x7d9b:	mov	r10d, 4
0x7da1:	mov	word ptr [rbp + 0x70], r10w
0x7da6:	call	0x19a0


0x7b7c:	mov	qword ptr [rsp + 0x10], 0
0x7b85:	mov	rbx, qword ptr [rsp + 0x68]
0x7b8a:	xor	rbx, qword ptr fs:[0x28]
0x7b93:	mov	rax, qword ptr [rsp + 0x10]
0x7b98:	jne	0x7f71


0x8905:	test	rax, rax
0x8908:	mov	qword ptr [r12 + 8], rax
0x890d:	je	0x8a04


0x8a04:	mov	edi, dword ptr [r12 + 0x48]
0x8a09:	test	edi, 0x2000
0x8a0f:	jne	0x85fe


0x8913:	mov	rbp, rax
0x8916:	mov	qword ptr [r12 + 8], 0
0x891f:	jmp	0x8892


0x8a15:	mov	r9d, dword ptr [rbp + 0x40]
0x8a19:	test	r9d, r9d
0x8a1c:	je	0x8a30


0x8a30:	lea	rsi, [r12 + 0x58]
0x8a35:	mov	rdx, rbp
0x8a38:	call	0x7500


0x8a1e:	cmp	word ptr [rbp + 0x70], 4
0x8a23:	je	0x8a30


0x8a25:	mov	r8d, 7
0x8a2b:	mov	word ptr [rbp + 0x70], r8w
0x8a30:	lea	rsi, [r12 + 0x58]
0x8a35:	mov	rdx, rbp
0x8a38:	call	0x7500


0x8a3d:	jmp	0x867a


0x8afe:	test	rax, rax
0x8b01:	mov	rbx, rax
0x8b04:	je	0x8b58


0x8b58:	test	byte ptr [r12 + 0x49], 0x20
0x8b5e:	jne	0x85fe


0x8b06:	mov	rdi, rbp
0x8b09:	mov	rbp, rbx
0x8b0c:	call	0x1da0


0x8b64:	mov	rbx, qword ptr [rbp + 8]
0x8b68:	jmp	0x8578


0x8b11:	jmp	0x8892


0x8fb8:	mov	edi, eax
0x8fba:	call	0xa520


0x8fbf:	mov	rcx, qword ptr [rsp + 0x18]
0x8fc4:	xor	rcx, qword ptr fs:[0x28]
0x8fcd:	jne	0x8ff9


0x8fcf:	add	rsp, 0x58
0x8fd3:	ret	


0x8ff9:	call	0x1ab0


0x5f1c:	lea	rsi, [rip + 0x5f38]
0x5f23:	xor	edi, edi
0x5f25:	mov	edx, 5
0x5f2a:	call	0x1a60


0x6031:	jmp	0x5f1c


0x958b:	lea	rdx, [rip + 0x2cea]
0x9592:	xor	eax, eax
0x9594:	mov	rcx, rbp
0x9597:	mov	esi, 1
0x959c:	mov	rdi, r12
0x959f:	call	0x1d60


0x95a4:	test	r13, r13
0x95a7:	js	0x9610


0x9610:	mov	rax, r13
0x9613:	mov	rdx, r13
0x9616:	pxor	xmm0, xmm0
0x961a:	shr	rax, 1
0x961d:	and	edx, 1
0x9620:	or	rax, rdx
0x9623:	test	rbp, rbp
0x9626:	cvtsi2sd	xmm0, rax
0x962b:	addsd	xmm0, xmm0
0x962f:	mulsd	xmm0, qword ptr [rip + 0x2ce1]
0x9637:	jns	0x95bf


0x95a9:	pxor	xmm0, xmm0
0x95ad:	test	rbp, rbp
0x95b0:	cvtsi2sd	xmm0, r13
0x95b5:	mulsd	xmm0, qword ptr [rip + 0x2d5b]
0x95bd:	js	0x9639


0x9639:	mov	rax, rbp
0x963c:	pxor	xmm1, xmm1
0x9640:	shr	rax, 1
0x9643:	and	ebp, 1
0x9646:	or	rax, rbp
0x9649:	cvtsi2sd	xmm1, rax
0x964e:	addsd	xmm1, xmm1
0x9652:	jmp	0x95c8


0x95bf:	pxor	xmm1, xmm1
0x95c3:	cvtsi2sd	xmm1, rbp
0x95c8:	divsd	xmm0, xmm1
0x95cc:	lea	rdx, [rip + 0x2cdd]
0x95d3:	mov	rcx, r13
0x95d6:	mov	rdi, r12
0x95d9:	mov	esi, 1
0x95de:	mov	eax, 1
0x95e3:	call	0x1d60


0x95c8:	divsd	xmm0, xmm1
0x95cc:	lea	rdx, [rip + 0x2cdd]
0x95d3:	mov	rcx, r13
0x95d6:	mov	rdi, r12
0x95d9:	mov	esi, 1
0x95de:	mov	eax, 1
0x95e3:	call	0x1d60


0x95e8:	add	rsp, 8
0x95ec:	mov	rcx, rbx
0x95ef:	mov	rdi, r12
0x95f2:	pop	rbx
0x95f3:	pop	rbp
0x95f4:	pop	r12
0x95f6:	pop	r13
0x95f8:	lea	rdx, [rip + 0x2c95]
0x95ff:	mov	esi, 1
0x9604:	xor	eax, eax
0x9606:	jmp	0x1d60


0x2c39:	test	eax, eax
0x2c3b:	js	0x2ca5


0x2ca5:	xor	r14d, r14d
0x2ca8:	mov	eax, 3
0x2cad:	mov	dword ptr [r12], eax
0x2cb1:	cmp	qword ptr [rbx + 0x20], 0
0x2cb6:	jne	0x2de0


0x2c3d:	mov	edi, eax
0x2c3f:	mov	dword ptr [rsp + 0x18], eax
0x2c43:	call	0x1d10


0x1d10:	jmp	qword ptr [rip + 0x20d26a]




0xa457:	mov	edi, eax
0xa459:	call	0xa520


0xa45e:	mov	rsi, qword ptr [rsp + 0x18]
0xa463:	xor	rsi, qword ptr fs:[0x28]
0xa46c:	jne	0xa499


0xa46e:	add	rsp, 0x58
0xa472:	ret	


0xa499:	call	0x1ab0


0xa725:	mov	ebx, eax
0xa727:	jmp	0xa6c0


0xa6c0:	mov	rcx, qword ptr [rsp + 0x18]
0xa6c5:	xor	rcx, qword ptr fs:[0x28]
0xa6ce:	mov	eax, ebx
0xa6d0:	jne	0xa82d


0xa6d6:	add	rsp, 0x50
0xa6da:	pop	rbx
0xa6db:	pop	rbp
0xa6dc:	pop	r12
0xa6de:	ret	


0xa82d:	call	0x1ab0


0xa6b9:	mov	ebx, eax
0xa6bb:	nop	dword ptr [rax + rax]
0xa6c0:	mov	rcx, qword ptr [rsp + 0x18]
0xa6c5:	xor	rcx, qword ptr fs:[0x28]
0xa6ce:	mov	eax, ebx
0xa6d0:	jne	0xa82d


0xa77c:	mov	ebx, eax
0xa77e:	jmp	0xa6c0


0xa665:	test	eax, eax
0xa667:	mov	ebx, eax
0xa669:	js	0xa7f8


0xa7f8:	call	0x19a0


0xa66f:	mov	dword ptr [rip + 0x204be3], 1
0xa679:	jmp	0xa6c0


0xa78c:	test	eax, eax
0xa78e:	mov	ebx, eax
0xa790:	js	0xa6c0


0xa796:	cmp	dword ptr [rip + 0x204abf], -1
0xa79d:	jne	0xa6c0


0xa7a3:	xor	eax, eax
0xa7a5:	mov	esi, 1
0xa7aa:	mov	edi, ebx
0xa7ac:	call	0x1a20


0xa7b1:	test	eax, eax
0xa7b3:	js	0xa7d1


0xa7d1:	call	0x19a0


0xa7b5:	or	eax, 1
0xa7b8:	mov	esi, 2
0xa7bd:	mov	edi, ebx
0xa7bf:	mov	edx, eax
0xa7c1:	xor	eax, eax
0xa7c3:	call	0x1a20


0xa7c8:	cmp	eax, -1
0xa7cb:	jne	0xa6c0


0xa843:	mov	ebx, eax
0xa845:	jmp	0xa6c0


0x1dec:	lea	rsi, [rip + 0xa0ae]
0x1df3:	mov	edi, 6
0x1df8:	call	0x1c90


0x2931:	test	eax, eax
0x2933:	jne	0x2970


0x2935:	cmp	byte ptr [r13 + 0x1a], 0
0x293a:	mov	eax, 2
0x293f:	jne	0x2a28


0x2970:	call	0x19a0


0x2945:	mov	rcx, qword ptr [rsp + 0x98]
0x294d:	xor	rcx, qword ptr fs:[0x28]
0x2956:	jne	0x2b38


0x2a28:	mov	rsi, qword ptr [rbx + 0x38]
0x2a2c:	mov	edi, 4
0x2a31:	call	0x5b70


0x295c:	add	rsp, 0xa8
0x2963:	pop	rbx
0x2964:	pop	rbp
0x2965:	pop	r12
0x2967:	pop	r13
0x2969:	ret	


0x2b38:	call	0x1ab0


0x4331:	cmp	r15d, 0xa
0x4335:	mov	qword ptr [rsp + 0x58], rax
0x433a:	ja	0x54ef


0x4340:	lea	rcx, [rip + 0x7699]
0x4347:	mov	edx, r15d
0x434a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x434e:	add	rax, rcx
0x4351:	jmp	rax


0x54ef:	call	0x1990


0x5e92:	test	eax, eax
0x5e94:	jne	0x5ec8


0x5e96:	mov	rax, qword ptr [rsp + 8]
0x5e9b:	mov	qword ptr [rbx], rax
0x5e9e:	mov	rax, qword ptr [rsp]
0x5ea2:	mov	qword ptr [rbx + 8], rax
0x5ea6:	mov	rax, rbx
0x5ea9:	mov	rcx, qword ptr [rsp + 0x98]
0x5eb1:	xor	rcx, qword ptr fs:[0x28]
0x5eba:	jne	0x5ecc


0x5ec8:	xor	eax, eax
0x5eca:	jmp	0x5ea9


0x5ebc:	add	rsp, 0xa0
0x5ec3:	pop	rbx
0x5ec4:	ret	


0x5ecc:	call	0x1ab0


0x5ea9:	mov	rcx, qword ptr [rsp + 0x98]
0x5eb1:	xor	rcx, qword ptr fs:[0x28]
0x5eba:	jne	0x5ecc


0x8169:	cmp	rax, 2
0x816d:	mov	rsi, qword ptr [rsp + 8]
0x8172:	jbe	0x80e8


0x80e8:	mov	rdx, rax
0x80eb:	mov	rdi, rbx
0x80ee:	call	0x6d20


0x8178:	cmp	byte ptr [rsp + 0x17], 0
0x817d:	je	0x80e8


0x8183:	cmp	byte ptr [rsi + rax - 1], 0x2f
0x8188:	jne	0x80e8


0x819b:	sub	rax, 1
0x819f:	cmp	rax, 1
0x81a3:	jne	0x8190


0x81a5:	jmp	0x80e8


0x8190:	cmp	byte ptr [rsi + rax - 2], 0x2f
0x8195:	jne	0x80e8


0x87f5:	lea	rdx, [rax + 1]
0x87f9:	mov	r14, rax
0x87fc:	mov	rsi, r13
0x87ff:	mov	rdi, rbp
0x8802:	call	0x1cc0


0x8807:	mov	qword ptr [rbx + 0x60], r14
0x880b:	mov	rax, qword ptr [r12 + 0x20]
0x8810:	mov	edi, dword ptr [r12 + 0x48]
0x8815:	lea	rsi, [r12 + 0x58]
0x881a:	mov	rbp, rbx
0x881d:	mov	qword ptr [rbx + 0x38], rax
0x8821:	mov	qword ptr [rbx + 0x30], rax
0x8825:	call	0x7120


0x802d:	cmp	r12, rax
0x8030:	cmovb	r12, rax
0x8034:	add	r15, 8
0x8038:	mov	rdi, qword ptr [r15]
0x803b:	test	rdi, rdi
0x803e:	jne	0x8028


0x8040:	lea	rdx, [r12 + 1]
0x8045:	mov	eax, 0x1000
0x804a:	cmp	rdx, 0x1000
0x8051:	cmovb	rdx, rax
0x8055:	lea	rsi, [rbx + 0x30]
0x8059:	lea	rdi, [rbx + 0x20]
0x805d:	call	0x70b0


0x8028:	call	0x1a80


0x3926:	mov	r14, qword ptr [r15]
0x3929:	mov	qword ptr [rsp], -1
0x3931:	test	r14, r14
0x3934:	je	0x39ed


0x39ed:	mov	rax, qword ptr [rsp]
0x39f1:	add	rsp, 0x28
0x39f5:	pop	rbx
0x39f6:	pop	rbp
0x39f7:	pop	r12
0x39f9:	pop	r13
0x39fb:	pop	r14
0x39fd:	pop	r15
0x39ff:	ret	


0x393a:	mov	r12, rax
0x393d:	mov	byte ptr [rsp + 0x17], 0
0x3942:	xor	ebx, ebx
0x3944:	jmp	0x3997


0x3997:	mov	rsi, qword ptr [rsp + 8]
0x399c:	mov	rdx, r12
0x399f:	mov	rdi, r14
0x39a2:	call	0x19b0


0x19b0:	jmp	qword ptr [rip + 0x20d41a]




0x3bf1:	test	rax, rax
0x3bf4:	js	0x3c05


0x3c05:	mov	rdx, rax
0x3c08:	mov	rsi, r12
0x3c0b:	mov	rdi, r14
0x3c0e:	call	0x3a20


0x3bf6:	add	rsp, 8
0x3bfa:	pop	rbx
0x3bfb:	pop	rbp
0x3bfc:	pop	r12
0x3bfe:	pop	r13
0x3c00:	pop	r14
0x3c02:	pop	r15
0x3c04:	ret	


0x3ed9:	cmp	rax, 1
0x3edd:	jbe	0x3eea


0x3eea:	pop	rbx
0x3eeb:	ret	


0x3edf:	cmp	byte ptr [rbx + rax - 1], 0x2f
0x3ee4:	lea	rdx, [rax - 1]
0x3ee8:	je	0x3ef8


0x3ef8:	cmp	rdx, 1
0x3efc:	je	0x3f10


0x3f10:	mov	eax, 1
0x3f15:	pop	rbx
0x3f16:	ret	


0x3efe:	cmp	byte ptr [rbx + rdx - 1], 0x2f
0x3f03:	lea	rax, [rdx - 1]
0x3f07:	je	0x3ef0


0x3ef0:	mov	rdx, rax
0x3ef3:	nop	dword ptr [rax + rax]
0x3ef8:	cmp	rdx, 1
0x3efc:	je	0x3f10


0x3f09:	mov	rax, rdx
0x3f0c:	pop	rbx
0x3f0d:	ret	


0x4057:	sub	rbx, r12
0x405a:	mov	r13, rax
0x405d:	mov	rdi, rbp
0x4060:	add	rbx, rax
0x4063:	call	0x1a80


0x4068:	test	r13, r13
0x406b:	mov	r14, rax
0x406e:	je	0x40a0


0x40a0:	xor	eax, eax
0x40a2:	cmp	byte ptr [rbp], 0x2f
0x40a6:	mov	edx, 0
0x40ab:	sete	al
0x40ae:	mov	qword ptr [rsp], rax
0x40b2:	mov	eax, 0x2e
0x40b7:	cmovne	eax, edx
0x40ba:	mov	byte ptr [rsp + 0xf], al
0x40be:	lea	rdi, [rbx + r14 + 1]
0x40c3:	add	rdi, qword ptr [rsp]
0x40c7:	call	0x1c20


0x4070:	cmp	byte ptr [r12 + rbx - 1], 0x2f
0x4076:	je	0x4120


0x4120:	mov	qword ptr [rsp], 0
0x4128:	mov	byte ptr [rsp + 0xf], 0
0x412d:	jmp	0x40be


0x407c:	xor	eax, eax
0x407e:	cmp	byte ptr [rbp], 0x2f
0x4082:	mov	edx, 0
0x4087:	setne	al
0x408a:	mov	qword ptr [rsp], rax
0x408e:	mov	eax, 0x2f
0x4093:	cmove	eax, edx
0x4096:	mov	byte ptr [rsp + 0xf], al
0x409a:	jmp	0x40be


0x40be:	lea	rdi, [rbx + r14 + 1]
0x40c3:	add	rdi, qword ptr [rsp]
0x40c7:	call	0x1c20


0x6779:	mov	rdi, rbx
0x677c:	lea	rsi, [rax + 1]
0x6780:	pop	rbx
0x6781:	jmp	0x6740


0x5f2f:	lea	rdx, [rip + 0x622a]
0x5f36:	mov	rcx, rax
0x5f39:	mov	r8d, 0x7e3
0x5f3f:	mov	esi, 1
0x5f44:	mov	rdi, rbp
0x5f47:	xor	eax, eax
0x5f49:	call	0x1d60


0x5f4e:	lea	rsi, [rip + 0x5f7b]
0x5f55:	xor	edi, edi
0x5f57:	mov	edx, 5
0x5f5c:	call	0x1a60


0x5f61:	mov	rsi, rbp
0x5f64:	mov	rdi, rax
0x5f67:	call	0x1b80


0x1b80:	jmp	qword ptr [rip + 0x20d332]




0x24dd:	mov	rdi, qword ptr [rip + 0x20cbfc]
0x24e4:	mov	rdx, rax
0x24e7:	mov	rcx, rbx
0x24ea:	mov	esi, 1
0x24ef:	xor	eax, eax
0x24f1:	call	0x1d60


0x24f6:	mov	edi, ebp
0x24f8:	call	0x1d40


0x1d40:	jmp	qword ptr [rip + 0x20d252]




0x250b:	mov	rdx, rbx
0x250e:	mov	rsi, rax
0x2511:	mov	edi, 1
0x2516:	xor	eax, eax
0x2518:	call	0x1ca0


0x1ca0:	jmp	qword ptr [rip + 0x20d2a2]




0x3a43:	mov	rbx, rax
0x3a46:	mov	rsi, rbp
0x3a49:	mov	edi, 1
0x3a4e:	call	0x5e20


0x3a8e:	mov	rbx, rax
0x3a91:	jmp	0x3a46


0x3a46:	mov	rsi, rbp
0x3a49:	mov	edi, 1
0x3a4e:	call	0x5e20


0x3ad1:	mov	rdi, rax
0x3ad4:	mov	rsi, rbx
0x3ad7:	call	0x1b80


0x6494:	lea	rdx, [rip + 0x503b]
0x649b:	mov	rsi, rax
0x649e:	mov	edi, 1
0x64a3:	xor	eax, eax
0x64a5:	call	0x1ca0


0x67a7:	mov	edi, dword ptr [rip + 0x208873]
0x67ad:	lea	rdx, [rip + 0x50db]
0x67b4:	mov	rcx, rax
0x67b7:	xor	esi, esi
0x67b9:	xor	eax, eax
0x67bb:	call	0x1cd0


0x1cd0:	jmp	qword ptr [rip + 0x20d28a]




0x67df:	test	rax, rax
0x67e2:	je	0x67f0


0x67f0:	call	0x19a0


0x67e4:	add	rsp, 8
0x67e8:	ret	


0x30e3:	mov	rbx, rax
0x30e6:	lea	rax, [rsp + 0x2c]
0x30eb:	mov	qword ptr [rsp + 0x10], rax
0x30f0:	lea	rax, [rsp + 0x30]
0x30f5:	mov	qword ptr [rsp + 0x18], rax
0x30fa:	nop	word ptr [rax + rax]
0x3100:	mov	rdi, rbx
0x3103:	call	0x84e0


0x3108:	test	rax, rax
0x310b:	mov	r15, rax
0x310e:	je	0x319a


0x319a:	call	0x19a0


0x3114:	movzx	edx, word ptr [rax + 0x70]
0x3118:	cmp	dx, 0xd
0x311c:	ja	0x3877


0x3122:	movzx	eax, dx
0x3125:	movsxd	rax, dword ptr [r12 + rax*4]
0x3129:	add	rax, r12
0x312c:	jmp	rax


0x3877:	mov	rdx, qword ptr [r15 + 0x38]
0x387b:	mov	esi, 3
0x3880:	xor	edi, edi
0x3882:	call	0x5c70


0x6894:	test	rax, rax
0x6897:	jle	0x68b2


0x68b2:	mov	rdi, qword ptr [rsp + 8]
0x68b7:	call	0x1da0


0x6899:	mov	rdi, qword ptr [rsp + 8]
0x689e:	lea	rax, [rdi + rax - 1]
0x68a3:	cmp	byte ptr [rax], 0xa
0x68a6:	je	0x68d8


0x68d8:	mov	byte ptr [rax], 0
0x68db:	mov	rdi, qword ptr [rsp + 8]
0x68e0:	jmp	0x68a8


0x68a8:	call	0x1bd0


0x1bd0:	jmp	qword ptr [rip + 0x20d30a]




0x68bc:	mov	rdx, qword ptr [rsp + 0x18]
0x68c1:	xor	rdx, qword ptr fs:[0x28]
0x68ca:	mov	eax, ebx
0x68cc:	jne	0x68e2


0x68ce:	add	rsp, 0x20
0x68d2:	pop	rbx
0x68d3:	ret	


0x68e2:	call	0x1ab0


0x319f:	mov	r12, rax
0x31a2:	mov	eax, dword ptr [rax]
0x31a4:	test	eax, eax
0x31a6:	jne	0x36b8


0x31ac:	mov	rdi, rbx
0x31af:	call	0x8350


0x36b8:	lea	rsi, [rip + 0x7def]
0x36bf:	xor	edi, edi
0x36c1:	mov	edx, 5
0x36c6:	mov	ebp, 4
0x36cb:	call	0x1a60


0x36d0:	mov	esi, dword ptr [r12]
0x36d4:	mov	rdx, rax
0x36d7:	xor	edi, edi
0x36d9:	xor	eax, eax
0x36db:	call	0x1cd0


0x31b4:	test	eax, eax
0x31b6:	jne	0x36f0


0x36f0:	lea	rsi, [rip + 0x7e06]
0x36f7:	mov	edx, 5
0x36fc:	xor	edi, edi
0x36fe:	mov	ebp, 4
0x3703:	call	0x1a60


0x3708:	mov	esi, dword ptr [r12]
0x370c:	mov	rdx, rax
0x370f:	xor	edi, edi
0x3711:	xor	eax, eax
0x3713:	call	0x1cd0


0x67f5:	cmp	dword ptr [rax], 0x16
0x67f8:	je	0x6800


0x6800:	lea	rcx, [rip + 0x59c9]
0x6807:	lea	rsi, [rip + 0x5992]
0x680e:	lea	rdi, [rip + 0x59a8]
0x6815:	mov	edx, 0x29
0x681a:	call	0x1b20


0x67fa:	call	0x6790


0x2975:	mov	edx, dword ptr [rax]
0x2977:	mov	rbp, rax
0x297a:	cmp	edx, 0x1e
0x297d:	je	0x2a78


0x2a78:	mov	rdx, qword ptr [rbx + 0x30]
0x2a7c:	mov	esi, dword ptr [r12 + 0x2c]
0x2a81:	mov	rcx, rsp
0x2a84:	mov	r8d, 0x100
0x2a8a:	mov	edi, 1
0x2a8f:	call	0x1ae0


0x2983:	cmp	byte ptr [r13], 0
0x2988:	je	0x29b0


0x29b0:	cmp	word ptr [rbx + 0x70], 4
0x29b5:	je	0x2ab0


0x298a:	cmp	edx, 0x14
0x298d:	je	0x2af9


0x2ab0:	cmp	edx, 0x27
0x2ab3:	ja	0x29bb


0x29bb:	mov	rsi, qword ptr [rbx + 0x38]
0x29bf:	mov	edi, 4
0x29c4:	call	0x5b70


0x2af9:	mov	eax, 2
0x2afe:	jmp	0x2945


0x2993:	jle	0x2af0


0x2ab9:	movabs	rax, 0x8000320000
0x2ac3:	bt	rax, rdx
0x2ac7:	jae	0x29bb


0x2af0:	cmp	edx, 2
0x2af3:	jne	0x29b0


0x2999:	cmp	edx, 0x16
0x299c:	je	0x2af9


0x2acd:	mov	eax, dword ptr [rbx + 0x40]
0x2ad0:	cmp	eax, 1
0x2ad3:	je	0x2ade


0x29a2:	cmp	edx, 0x54
0x29a5:	je	0x2af9


0x2ade:	mov	dword ptr [rbp], eax
0x2ae1:	jmp	0x29bb


0x2ad5:	cmp	eax, 0xd
0x2ad8:	jne	0x29bb


0x2a94:	test	eax, eax
0x2a96:	je	0x2aa0


0x2aa0:	mov	dword ptr [rbp], 0x1e
0x2aa7:	jmp	0x29bb


0x2a98:	mov	edx, dword ptr [rbp]
0x2a9b:	cmp	edx, 2
0x2a9e:	je	0x2b1b


0x2b1b:	cmp	byte ptr [r13], 0
0x2b20:	mov	eax, 2
0x2b25:	jne	0x2945


0x2b2b:	cmp	word ptr [rbx + 0x70], 4
0x2b30:	jne	0x29bb


0x2b36:	jmp	0x2ab9


0xa7d6:	mov	r12d, dword ptr [rax]
0xa7d9:	mov	rbp, rax
0xa7dc:	mov	edi, ebx
0xa7de:	call	0x1b50


0xa7e3:	mov	ebx, 0xffffffff
0xa7e8:	mov	dword ptr [rbp], r12d
0xa7ec:	jmp	0xa6c0


0xa7fd:	cmp	dword ptr [rax], 0x16
0xa800:	jne	0xa66f


0xa806:	xor	esi, esi
0xa808:	xor	eax, eax
0xa80a:	mov	edx, r12d
0xa80d:	mov	edi, ebp
0xa80f:	call	0x1a20


0xa814:	test	eax, eax
0xa816:	mov	ebx, eax
0xa818:	js	0xa6c0


0xa81e:	mov	dword ptr [rip + 0x204a34], 0xffffffff
0xa828:	jmp	0xa7a3


0x7dab:	mov	eax, dword ptr [rax]
0x7dad:	mov	dword ptr [rbp + 0x40], eax
0x7db0:	jmp	0x7b7c


0x77a6:	mov	rdi, r13
0x77a9:	mov	dword ptr [rax], 0
0x77af:	mov	r12, rax
0x77b2:	call	0x1c10


0x1c10:	jmp	qword ptr [rip + 0x20d2ea]




0x70f9:	mov	dword ptr [rax], 0x24
0x70ff:	xor	eax, eax
0x7101:	pop	rbx
0x7102:	ret	


0x84c6:	mov	dword ptr [rax], ebx
0x84c8:	mov	ebx, 0xffffffff
0x84cd:	jmp	0x8416


0x8451:	mov	r12, rax
0x8454:	jmp	0x84b8


0x84b8:	mov	ebx, dword ptr [r12]
0x84bc:	jmp	0x83d8


0x83d8:	lea	rdi, [rbp + 0x60]
0x83dc:	call	0x6e00


0x8495:	mov	edi, dword ptr [rbp + 0x28]
0x8498:	mov	r12, rax
0x849b:	mov	ebx, dword ptr [rax]
0x849d:	call	0x1b50


0x84a2:	test	eax, eax
0x84a4:	je	0x83d8


0x84aa:	test	ebx, ebx
0x84ac:	jne	0x83d8


0x8472:	mov	ebx, dword ptr [rax]
0x8474:	jmp	0x83d8


0x8a51:	mov	dword ptr [rax], 0
0x8a57:	mov	qword ptr [r12], 0
0x8a5f:	jmp	0x867a


0x8955:	mov	edi, dword ptr [r12 + 0x48]
0x895a:	mov	eax, dword ptr [rax]
0x895c:	or	edi, 0x2000
0x8962:	mov	dword ptr [rbx + 0x40], eax
0x8965:	mov	dword ptr [r12 + 0x48], edi
0x896a:	jmp	0x85d8


0x85d8:	cmp	word ptr [rbx + 0x70], 2
0x85dd:	je	0x85f3


0x8b7b:	mov	eax, dword ptr [rax]
0x8b7d:	mov	dword ptr [rbx + 0x40], eax
0x8b80:	or	dword ptr [r12 + 0x48], 0x2000
0x8b89:	mov	edi, dword ptr [rbx + 0x44]
0x8b8c:	jmp	0x85ce


0x2b89:	movsxd	rdx, dword ptr [rax]
0x2b8c:	mov	qword ptr [rbx + 8], rdx
0x2b90:	mov	dword ptr [rax], edx
0x2b92:	mov	eax, 0xffffffff
0x2b97:	pop	rbx
0x2b98:	ret	


0x6b85:	mov	eax, dword ptr [rax]
0x6b87:	jmp	0x6a84


0x6a84:	lea	rdi, [rbx + 8]
0x6a88:	mov	dword ptr [rbp + 0x40], eax
0x6a8b:	mov	qword ptr [rbp + 0x78], 0
0x6a93:	mov	qword ptr [rbx + 0x88], 0
0x6a9e:	xor	eax, eax
0x6aa0:	and	rdi, 0xfffffffffffffff8
0x6aa4:	sub	rbx, rdi
0x6aa7:	lea	ecx, [rbx + 0x90]
0x6aad:	shr	ecx, 3
0x6ab0:	rep stosq	qword ptr [rdi], rax


0x6ab3:	mov	eax, 0xa
0x6ab8:	pop	rbx
0x6ab9:	pop	rbp
0x6aba:	pop	r12
0x6abc:	ret	


0x6ab0:	rep stosq	qword ptr [rdi], rax


0x6a76:	mov	r12, rax
0x6a79:	mov	eax, dword ptr [rax]
0x6a7b:	cmp	eax, 2
0x6a7e:	je	0x6b90


0x6b90:	mov	rsi, qword ptr [rbp + 0x30]
0x6b94:	mov	rdx, rbx
0x6b97:	mov	edi, 1
0x6b9c:	call	0x1a90


0x6ba1:	test	eax, eax
0x6ba3:	je	0x6bc0


0x6bc0:	mov	dword ptr [r12], 0
0x6bc8:	mov	eax, 0xd
0x6bcd:	jmp	0x6ab8


0x6ba5:	mov	eax, dword ptr [r12]
0x6ba9:	jmp	0x6a84


0x72a9:	mov	r12d, dword ptr [rax]
0x72ac:	mov	rbp, rax
0x72af:	mov	edi, r15d
0x72b2:	call	0x1b50


0x72b7:	mov	dword ptr [rbp], r12d
0x72bb:	jmp	0x72d5


0x7374:	mov	dword ptr [rax], 2
0x737a:	jmp	0x729a


0x8875:	xor	ebp, ebp
0x8877:	mov	dword ptr [rax], 0xc
0x887d:	jmp	0x867a


0x2ffb:	mov	ebx, dword ptr [rax]
0x2ffd:	mov	r12d, 1
0x3003:	cmp	ebx, 0xd
0x3006:	je	0x2e23


0x2e23:	test	ebp, ebp
0x2e25:	je	0x2d20


0x300c:	jmp	0x2f07


0x2f07:	mov	rsi, qword ptr [rsp + 8]
0x2f0c:	mov	edi, 4
0x2f11:	call	0x5b70


0x2f05:	mov	ebx, dword ptr [rax]
0x2f07:	mov	rsi, qword ptr [rsp + 8]
0x2f0c:	mov	edi, 4
0x2f11:	call	0x5b70


0x8710:	mov	eax, dword ptr [rax]
0x8712:	or	word ptr [rbp + 0x72], 1
0x8717:	mov	dword ptr [rbp + 0x40], eax
0x871a:	mov	rbp, qword ptr [r12 + 8]
0x871f:	test	rbp, rbp
0x8722:	je	0x8916


0x8728:	mov	rax, rbp
0x872b:	nop	dword ptr [rax + rax]
0x8730:	mov	rdx, qword ptr [rax + 8]
0x8734:	mov	rdx, qword ptr [rdx + 0x30]
0x8738:	mov	qword ptr [rax + 0x30], rdx
0x873c:	mov	rax, qword ptr [rax + 0x10]
0x8740:	test	rax, rax
0x8743:	jne	0x8730


0x8745:	jmp	0x8916


0x8730:	mov	rdx, qword ptr [rax + 8]
0x8734:	mov	rdx, qword ptr [rdx + 0x30]
0x8738:	mov	qword ptr [rax + 0x30], rdx
0x873c:	mov	rax, qword ptr [rax + 0x10]
0x8740:	test	rax, rax
0x8743:	jne	0x8730


0x2bab:	mov	rdx, qword ptr [rbx + 8]
0x2baf:	jmp	0x2b90


0x2b90:	mov	dword ptr [rax], edx
0x2b92:	mov	eax, 0xffffffff
0x2b97:	pop	rbx
0x2b98:	ret	


0x833d:	xor	ebx, ebx
0x833f:	mov	dword ptr [rax], 0x16
0x8345:	jmp	0x824e


0x8c79:	mov	dword ptr [rax], 0x16
0x8c7f:	mov	eax, 1
0x8c84:	add	rsp, 8
0x8c88:	ret	


0x5521:	mov	r13, rax
0x5524:	mov	eax, dword ptr [rax]
0x5526:	test	r15d, r15d
0x5529:	mov	rbx, qword ptr [rip + 0x209b50]
0x5530:	mov	dword ptr [rsp + 0x18], eax
0x5534:	js	0x56a1


0x56a1:	call	0x1990


0x553a:	cmp	dword ptr [rip + 0x209b37], r15d
0x5541:	jg	0x55a5


0x5543:	cmp	r15d, 0x7fffffff
0x554a:	je	0x56a6


0x55a5:	mov	eax, dword ptr [rbp + 4]
0x55a8:	shl	r15, 4
0x55ac:	sub	rsp, 8
0x55b0:	add	rbx, r15
0x55b3:	lea	r15, [rbp + 8]
0x55b7:	mov	r8d, dword ptr [rbp]
0x55bb:	mov	r11, qword ptr [rbx]
0x55be:	mov	r12, qword ptr [rbx + 8]
0x55c2:	mov	rcx, r14
0x55c5:	or	eax, 1
0x55c8:	mov	dword ptr [rsp + 0x24], eax
0x55cc:	push	qword ptr [rbp + 0x30]
0x55cf:	mov	r9d, eax
0x55d2:	push	qword ptr [rbp + 0x28]
0x55d5:	push	r15
0x55d7:	mov	rsi, r11
0x55da:	mov	rdx, qword ptr [rsp + 0x28]
0x55df:	mov	rdi, r12
0x55e2:	mov	qword ptr [rsp + 0x30], r11
0x55e7:	call	0x42c0


0x56a6:	call	0x6790


0x5550:	lea	r12d, [r15 + 1]
0x5554:	lea	rax, [rip + 0x209b35]
0x555b:	movsxd	rsi, r12d
0x555e:	shl	rsi, 4
0x5562:	cmp	rbx, rax
0x5565:	je	0x5680


0x5680:	xor	edi, edi
0x5682:	call	0x65a0


0x556b:	mov	rdi, rbx
0x556e:	call	0x65a0


0x5573:	mov	rbx, rax
0x5576:	mov	qword ptr [rip + 0x209b03], rax
0x557d:	movsxd	rdi, dword ptr [rip + 0x209af4]
0x5584:	mov	edx, r12d
0x5587:	xor	esi, esi
0x5589:	sub	edx, edi
0x558b:	shl	rdi, 4
0x558f:	movsxd	rdx, edx
0x5592:	add	rdi, rbx
0x5595:	shl	rdx, 4
0x5599:	call	0x1b30


0x1b30:	jmp	qword ptr [rip + 0x20d35a]




0x5687:	movdqa	xmm0, xmmword ptr [rip + 0x209a01]
0x568f:	mov	rbx, rax
0x5692:	mov	qword ptr [rip + 0x2099e7], rax
0x5699:	movups	xmmword ptr [rax], xmm0
0x569c:	jmp	0x557d


0x557d:	movsxd	rdi, dword ptr [rip + 0x209af4]
0x5584:	mov	edx, r12d
0x5587:	xor	esi, esi
0x5589:	sub	edx, edi
0x558b:	shl	rdi, 4
0x558f:	movsxd	rdx, edx
0x5592:	add	rdi, rbx
0x5595:	shl	rdx, 4
0x5599:	call	0x1b30


0x56bc:	mov	r12d, dword ptr [rax]
0x56bf:	mov	rbp, rax
0x56c2:	lea	rax, [rip + 0x209b57]
0x56c9:	test	rbx, rbx
0x56cc:	mov	esi, 0x38
0x56d1:	cmove	rbx, rax
0x56d5:	mov	rdi, rbx
0x56d8:	call	0x6740


0x57f2:	mov	r12d, dword ptr [rax]
0x57f5:	mov	rbp, rax
0x57f8:	lea	rax, [rbx + 8]
0x57fc:	sub	rsp, 8
0x5800:	mov	r9d, dword ptr [rbx + 4]
0x5804:	push	qword ptr [rbx + 0x30]
0x5807:	mov	r8d, dword ptr [rbx]
0x580a:	push	qword ptr [rbx + 0x28]
0x580d:	mov	rdx, r15
0x5810:	push	rax
0x5811:	mov	rcx, qword ptr [rsp + 0x28]
0x5816:	mov	rsi, r14
0x5819:	mov	rdi, r13
0x581c:	call	0x42c0


0x586f:	test	r12, r12
0x5872:	mov	r13, rax
0x5875:	mov	eax, dword ptr [rax]
0x5877:	sete	bpl
0x587b:	or	ebp, dword ptr [rbx + 4]
0x587e:	lea	r10, [rbx + 8]
0x5882:	sub	rsp, 8
0x5886:	mov	r8d, dword ptr [rbx]
0x5889:	mov	rcx, r15
0x588c:	mov	dword ptr [rsp + 0x14], eax
0x5890:	push	qword ptr [rbx + 0x30]
0x5893:	mov	rdx, r14
0x5896:	push	qword ptr [rbx + 0x28]
0x5899:	push	r10
0x589b:	xor	esi, esi
0x589d:	mov	r9d, ebp
0x58a0:	xor	edi, edi
0x58a2:	mov	qword ptr [rsp + 0x40], r10
0x58a7:	call	0x42c0


0x8ca3:	test	r12d, 0xffffefff
0x8caa:	mov	r13, rax
0x8cad:	jne	0x8d98


0x8cb3:	mov	rbp, qword ptr [rbx]
0x8cb6:	mov	dword ptr [rax], 0
0x8cbc:	test	byte ptr [rbx + 0x49], 0x20
0x8cc0:	jne	0x8d40


0x8d98:	mov	dword ptr [rax], 0x16
0x8d9e:	xor	eax, eax
0x8da0:	jmp	0x8d24


0x8cc2:	movzx	eax, word ptr [rbp + 0x70]
0x8cc6:	cmp	ax, 9
0x8cca:	je	0x8d30


0x8d40:	pop	rbx
0x8d41:	xor	eax, eax
0x8d43:	pop	rbp
0x8d44:	pop	r12
0x8d46:	pop	r13
0x8d48:	pop	r14
0x8d4a:	ret	


0x8d24:	pop	rbx
0x8d25:	pop	rbp
0x8d26:	pop	r12
0x8d28:	pop	r13
0x8d2a:	pop	r14
0x8d2c:	ret	


0x8d30:	pop	rbx
0x8d31:	mov	rax, qword ptr [rbp + 0x10]
0x8d35:	pop	rbp
0x8d36:	pop	r12
0x8d38:	pop	r13
0x8d3a:	pop	r14
0x8d3c:	ret	


0x8ccc:	cmp	ax, 1
0x8cd0:	jne	0x8d40


0x8cd2:	mov	rdi, qword ptr [rbx + 8]
0x8cd6:	test	rdi, rdi
0x8cd9:	je	0x8ce0


0x8ce0:	cmp	r12d, 0x1000
0x8ce7:	mov	r14d, 1
0x8ced:	jne	0x8cfc


0x8cdb:	call	0x6db0


0x8cef:	or	dword ptr [rbx + 0x48], 0x1000
0x8cf6:	mov	r14d, 2
0x8cfc:	cmp	qword ptr [rbp + 0x58], 0
0x8d01:	jne	0x8d15


0x8cfc:	cmp	qword ptr [rbp + 0x58], 0
0x8d01:	jne	0x8d15


0x8d03:	mov	rax, qword ptr [rbp + 0x30]
0x8d07:	cmp	byte ptr [rax], 0x2f
0x8d0a:	je	0x8d15


0x8d15:	mov	esi, r14d
0x8d18:	mov	rdi, rbx
0x8d1b:	call	0x75c0


0x8d0c:	mov	esi, dword ptr [rbx + 0x48]
0x8d0f:	test	sil, 4
0x8d13:	je	0x8d50


0x8d50:	mov	edi, dword ptr [rbx + 0x2c]
0x8d53:	lea	rdx, [rip + 0x2765]
0x8d5a:	call	0x7190


0x8d20:	mov	qword ptr [rbx + 8], rax
0x8d24:	pop	rbx
0x8d25:	pop	rbp
0x8d26:	pop	r12
0x8d28:	pop	r13
0x8d2a:	pop	r14
0x8d2c:	ret	


0x8e17:	cmp	rax, -3
0x8e1b:	mov	rbp, rax
0x8e1e:	jbe	0x8e40


0x8e40:	mov	rdx, qword ptr [rsp + 8]
0x8e45:	xor	rdx, qword ptr fs:[0x28]
0x8e4e:	mov	rax, rbp
0x8e51:	jne	0x8e5e


0x8e20:	test	r12, r12
0x8e23:	je	0x8e40


0x8e53:	add	rsp, 0x18
0x8e57:	pop	rbx
0x8e58:	pop	rbp
0x8e59:	pop	r12
0x8e5b:	pop	r13
0x8e5d:	ret	


0x8e5e:	call	0x1ab0


0x8e25:	xor	edi, edi
0x8e27:	call	0x9000


0x8e7c:	mov	ebx, dword ptr [rbp]
0x8e7f:	mov	rdi, rbp
0x8e82:	mov	r12, rax
0x8e85:	call	0xa560


0x1dfd:	lea	rsi, [rip + 0x8bc6]
0x1e04:	lea	rdi, [rip + 0x8b96]
0x1e0b:	call	0x1a50


0x1a50:	jmp	qword ptr [rip + 0x20d3ca]




0x900b:	mov	rdx, rax
0x900e:	mov	eax, 1
0x9013:	test	rdx, rdx
0x9016:	je	0x9035


0x9035:	add	rsp, 8
0x9039:	ret	


0x9018:	lea	rdi, [rip + 0x323d]
0x901f:	mov	ecx, 2
0x9024:	mov	rsi, rdx
0x9027:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x9027:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x9029:	seta	cl
0x902c:	sbb	cl, 0
0x902f:	xor	eax, eax
0x9031:	test	cl, cl
0x9033:	jne	0x9040


0x9040:	lea	rdi, [rip + 0x3217]
0x9047:	mov	ecx, 6
0x904c:	mov	rsi, rdx
0x904f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x904f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x9051:	seta	al
0x9054:	sbb	al, 0
0x9056:	test	al, al
0x9058:	setne	al
0x905b:	add	rsp, 8
0x905f:	ret	


0x8e2c:	test	al, al
0x8e2e:	jne	0x8e40


0x8e30:	movzx	eax, byte ptr [r13]
0x8e35:	mov	ebp, 1
0x8e3a:	mov	dword ptr [rbx], eax
0x8e3c:	nop	dword ptr [rax]
0x8e40:	mov	rdx, qword ptr [rsp + 8]
0x8e45:	xor	rdx, qword ptr fs:[0x28]
0x8e4e:	mov	rax, rbp
0x8e51:	jne	0x8e5e


0x40cc:	test	rax, rax
0x40cf:	mov	r13, rax
0x40d2:	je	0x4106


0x4106:	add	rsp, 0x18
0x410a:	mov	rax, r13
0x410d:	pop	rbx
0x410e:	pop	rbp
0x410f:	pop	r12
0x4111:	pop	r13
0x4113:	pop	r14
0x4115:	pop	r15
0x4117:	ret	


0x40d4:	mov	rdi, rax
0x40d7:	mov	rdx, rbx
0x40da:	mov	rsi, r12
0x40dd:	call	0x1cb0


0x1cb0:	jmp	qword ptr [rip + 0x20d29a]




0x4019:	test	rax, rax
0x401c:	je	0x4023


0x4023:	call	0x6790


0x401e:	add	rsp, 8
0x4022:	ret	


0x716a:	mov	rdi, rax
0x716d:	mov	qword ptr [rbx], rax
0x7170:	xor	eax, eax
0x7172:	test	rdi, rdi
0x7175:	je	0x7156


0x7156:	pop	rbx
0x7157:	ret	


0x7177:	call	0x8ef0


0x717c:	mov	eax, 1
0x7181:	pop	rbx
0x7182:	ret	


0x882a:	movzx	eax, word ptr [rbx + 0x70]
0x882e:	cmp	ax, 0xb
0x8832:	mov	qword ptr [r12], rbp
0x8836:	je	0x86b8


0x746c:	test	rax, rax
0x746f:	mov	rbp, rax
0x7472:	je	0x74f8


0x74f8:	pop	rbx
0x74f9:	xor	eax, eax
0x74fb:	pop	rbp
0x74fc:	pop	r12
0x74fe:	ret	


0x7478:	mov	rax, qword ptr [rbx + 0x78]
0x747c:	mov	rdi, qword ptr [r12]
0x7480:	mov	rsi, rbp
0x7483:	mov	qword ptr [rbp + 0x10], rbx
0x7487:	mov	qword ptr [rbp], rax
0x748b:	mov	rax, qword ptr [rbx + 0x80]
0x7492:	mov	qword ptr [rbp + 8], rax
0x7496:	call	0xa0d0


0x6549:	test	rax, rax
0x654c:	jne	0x6553


0x654e:	test	rbx, rbx
0x6551:	jne	0x6555


0x6553:	pop	rbx
0x6554:	ret	


0x6555:	call	0x6790


0x66f9:	mov	rdx, rbx
0x66fc:	xor	esi, esi
0x66fe:	mov	rdi, rax
0x6701:	pop	rbx
0x6702:	jmp	0x1b30


0x6754:	add	rsp, 8
0x6758:	mov	rdx, rbx
0x675b:	mov	rsi, rbp
0x675e:	pop	rbx
0x675f:	pop	rbp
0x6760:	mov	rdi, rax
0x6763:	jmp	0x1be0


0x1be0:	jmp	qword ptr [rip + 0x20d302]




0x6d43:	test	rax, rax
0x6d46:	mov	rbx, rax
0x6d49:	je	0x6d9c


0x6d9c:	add	rsp, 8
0x6da0:	mov	rax, rbx
0x6da3:	pop	rbx
0x6da4:	pop	rbp
0x6da5:	pop	r12
0x6da7:	pop	r13
0x6da9:	ret	


0x6d4b:	lea	rdi, [rax + 0x108]
0x6d52:	mov	rdx, rbp
0x6d55:	mov	rsi, r13
0x6d58:	call	0x1be0


0x80f3:	test	rax, rax
0x80f6:	mov	rcx, rax
0x80f9:	je	0x82f0


0x82f0:	mov	rdi, r12
0x82f3:	call	0x6db0


0x80ff:	mov	qword ptr [rax + 0x58], 0
0x8107:	mov	qword ptr [rax + 8], r15
0x810b:	lea	rax, [rax + 0x108]
0x8112:	test	r12, r12
0x8115:	mov	qword ptr [rcx + 0x30], rax
0x8119:	je	0x8290


0x8290:	xor	edx, edx
0x8292:	mov	rsi, rcx
0x8295:	mov	rdi, rbx
0x8298:	mov	qword ptr [rsp + 8], rcx
0x829d:	call	0x6a40


0x811f:	cmp	byte ptr [rsp + 0x16], 0
0x8124:	je	0x8290


0x812a:	mov	esi, 0xb
0x812f:	test	r14, r14
0x8132:	mov	qword ptr [rcx + 0xa8], 2
0x813d:	mov	word ptr [rcx + 0x70], si
0x8141:	je	0x82d0


0x82d0:	mov	qword ptr [rcx + 0x10], 0
0x82d8:	mov	rax, qword ptr [rsp + 0x18]
0x82dd:	mov	qword ptr [rsp + 0x18], rcx
0x82e2:	mov	qword ptr [rax + 0x10], rcx
0x82e6:	jmp	0x814e


0x8147:	mov	qword ptr [rcx + 0x10], r12
0x814b:	mov	r12, rcx
0x814e:	add	rbp, 1
0x8152:	mov	rsi, qword ptr [r13 + rbp*8]
0x8157:	test	rsi, rsi
0x815a:	je	0x81b0


0x814e:	add	rbp, 1
0x8152:	mov	rsi, qword ptr [r13 + rbp*8]
0x8157:	test	rsi, rsi
0x815a:	je	0x81b0


0x81b0:	test	r14, r14
0x81b3:	je	0x81cc


0x81b5:	cmp	rbp, 1
0x81b9:	jbe	0x81cc


0x81bb:	mov	rsi, r12
0x81be:	mov	rdx, rbp
0x81c1:	mov	rdi, rbx
0x81c4:	call	0x6c10


0x81c9:	mov	r12, rax
0x81cc:	lea	rsi, [rip + 0x3cce]
0x81d3:	xor	edx, edx
0x81d5:	mov	rdi, rbx
0x81d8:	call	0x6d20


0x82a2:	mov	rcx, qword ptr [rsp + 8]
0x82a7:	test	r14, r14
0x82aa:	mov	word ptr [rcx + 0x70], ax
0x82ae:	jne	0x8147


0x82b4:	test	r12, r12
0x82b7:	mov	qword ptr [rcx + 0x10], 0
0x82bf:	jne	0x82d8


0x82c1:	mov	qword ptr [rsp + 0x18], rcx
0x82c6:	mov	r12, rcx
0x82c9:	jmp	0x814e


0x82d8:	mov	rax, qword ptr [rsp + 0x18]
0x82dd:	mov	qword ptr [rsp + 0x18], rcx
0x82e2:	mov	qword ptr [rax + 0x10], rcx
0x82e6:	jmp	0x814e


0x82f8:	mov	rdi, r15
0x82fb:	call	0x1da0


0x8300:	mov	rdi, qword ptr [rbx + 0x20]
0x8304:	call	0x1da0


0x81dd:	test	rax, rax
0x81e0:	mov	qword ptr [rbx], rax
0x81e3:	je	0x82f0


0x81e9:	mov	edi, dword ptr [rbx + 0x48]
0x81ec:	mov	edx, 9
0x81f1:	lea	rsi, [rbx + 0x58]
0x81f5:	mov	qword ptr [rax + 0x10], r12
0x81f9:	mov	word ptr [rax + 0x70], dx
0x81fd:	mov	qword ptr [rax + 0x58], 1
0x8205:	call	0x7120


0x820a:	test	al, al
0x820c:	je	0x82f0


0x8212:	mov	esi, dword ptr [rbx + 0x48]
0x8215:	test	esi, 0x204
0x821b:	jne	0x8240


0x821d:	mov	edi, dword ptr [rbx + 0x2c]
0x8220:	lea	rdx, [rip + 0x3298]
0x8227:	call	0x7190


0x8240:	lea	rdi, [rbx + 0x60]
0x8244:	mov	esi, 0xffffffff
0x8249:	call	0xa340


0x808c:	test	rax, rax
0x808f:	mov	r15, rax
0x8092:	je	0x8300


0x8098:	mov	rax, -1
0x809f:	test	r14, r14
0x80a2:	mov	rsi, qword ptr [r13]
0x80a6:	mov	qword ptr [r15 + 0x58], rax
0x80aa:	mov	qword ptr [r15 + 0x68], rax
0x80ae:	je	0x80bd


0x80bd:	test	rsi, rsi
0x80c0:	je	0x832c


0x9913:	test	rax, rax
0x9916:	mov	rbx, rax
0x9919:	je	0x99ca


0x99ca:	add	rsp, 8
0x99ce:	mov	rax, rbx
0x99d1:	pop	rbx
0x99d2:	pop	rbp
0x99d3:	pop	r12
0x99d5:	pop	r13
0x99d7:	pop	r14
0x99d9:	pop	r15
0x99db:	ret	


0x991f:	test	r15, r15
0x9922:	lea	rdi, [rax + 0x28]
0x9926:	je	0x99e0


0x99e0:	lea	rax, [rip + 0x28f9]
0x99e7:	mov	qword ptr [rbx + 0x28], rax
0x99eb:	call	0x9270


0x992c:	mov	qword ptr [rax + 0x28], r15
0x9930:	call	0x9270


0x9935:	test	al, al
0x9937:	je	0x99c0


0x99c0:	mov	rdi, rbx
0x99c3:	xor	ebx, ebx
0x99c5:	call	0x1da0


0x993d:	cmp	byte ptr [r15 + 0x10], 0
0x9942:	je	0x9a40


0x9a40:	test	rbp, rbp
0x9a43:	movss	xmm1, dword ptr [r15 + 8]
0x9a49:	jns	0x9a01


0x9948:	mov	rdi, rbp
0x994b:	call	0x9060


0x9a4b:	mov	rax, rbp
0x9a4e:	pxor	xmm0, xmm0
0x9a52:	shr	rax, 1
0x9a55:	and	ebp, 1
0x9a58:	or	rax, rbp
0x9a5b:	cvtsi2ss	xmm0, rax
0x9a60:	addss	xmm0, xmm0
0x9a64:	jmp	0x9a0a


0x9a01:	pxor	xmm0, xmm0
0x9a05:	cvtsi2ss	xmm0, rbp
0x9a0a:	divss	xmm0, xmm1
0x9a0e:	ucomiss	xmm0, dword ptr [rip + 0x28f7]
0x9a15:	jae	0x99c0


0x9a0a:	divss	xmm0, xmm1
0x9a0e:	ucomiss	xmm0, dword ptr [rip + 0x28f7]
0x9a15:	jae	0x99c0


0x9a17:	ucomiss	xmm0, dword ptr [rip + 0x28f2]
0x9a1e:	jb	0x9a70


0x9a70:	cvttss2si	rbp, xmm0
0x9a75:	jmp	0x9948


0x9a20:	subss	xmm0, dword ptr [rip + 0x28e8]
0x9a28:	movabs	rax, 0x8000000000000000
0x9a32:	cvttss2si	rbp, xmm0
0x9a37:	xor	rbp, rax
0x9a3a:	jmp	0x9948


0x9950:	mov	edx, 8
0x9955:	mov	rbp, rax
0x9958:	xor	ecx, ecx
0x995a:	mov	rax, rdx
0x995d:	mul	rbp
0x9960:	jo	0x9a7a


0x9a7a:	mov	ecx, 1
0x9a7f:	jmp	0x9966


0x9966:	test	rax, rax
0x9969:	js	0x99c0


0x996b:	test	rcx, rcx
0x996e:	jne	0x99c0


0x9970:	test	rbp, rbp
0x9973:	mov	qword ptr [rbx + 0x10], rbp
0x9977:	je	0x99c0


0x9979:	mov	esi, 0x10
0x997e:	mov	rdi, rbp
0x9981:	call	0x1b90


0x9986:	test	rax, rax
0x9989:	mov	qword ptr [rbx], rax
0x998c:	je	0x99c0


0x998e:	shl	rbp, 4
0x9992:	mov	qword ptr [rbx + 0x18], 0
0x999a:	mov	qword ptr [rbx + 0x20], 0
0x99a2:	add	rbp, rax
0x99a5:	mov	qword ptr [rbx + 0x30], r12
0x99a9:	mov	qword ptr [rbx + 0x38], r13
0x99ad:	mov	qword ptr [rbx + 8], rbp
0x99b1:	mov	qword ptr [rbx + 0x40], r14
0x99b5:	mov	qword ptr [rbx + 0x48], 0
0x99bd:	jmp	0x99ca


0x99f0:	test	al, al
0x99f2:	movss	xmm1, dword ptr [rip + 0x290e]
0x99fa:	je	0x99c0


0x99fc:	test	rbp, rbp
0x99ff:	js	0x9a4b


0x6ec1:	test	rax, rax
0x6ec4:	mov	r12, rax
0x6ec7:	mov	qword ptr [rbx + 0x50], rax
0x6ecb:	jne	0x6e79


0x6ecd:	test	r13d, r13d
0x6ed0:	jns	0x6f00


0x6f00:	lea	rsi, [rsp + 0x10]
0x6f05:	mov	edi, r13d
0x6f08:	call	0x1d20


0x1d20:	jmp	qword ptr [rip + 0x20d262]




0x714d:	test	rax, rax
0x7150:	mov	qword ptr [rbx], rax
0x7153:	setne	al
0x7156:	pop	rbx
0x7157:	ret	


0xa3fe:	test	rax, rax
0xa401:	je	0xa420


0xa420:	lea	rax, [rip + 0x1ef9]
0xa427:	add	rsp, 8
0xa42b:	ret	


0xa403:	cmp	byte ptr [rax], 0
0xa406:	lea	rdx, [rip + 0x1f13]
0xa40d:	cmove	rax, rdx
0xa411:	add	rsp, 8
0xa415:	ret	


0x41e0:	movzx	edx, byte ptr [rax]
0x41e3:	and	edx, 0xffffffdf
0x41e6:	cmp	dl, 0x55
0x41e9:	je	0x4260


0x4260:	movzx	edx, byte ptr [rax + 1]
0x4264:	and	edx, 0xffffffdf
0x4267:	cmp	dl, 0x54
0x426a:	jne	0x41f0


0x41eb:	cmp	dl, 0x47
0x41ee:	je	0x4210


0x426c:	movzx	edx, byte ptr [rax + 2]
0x4270:	and	edx, 0xffffffdf
0x4273:	cmp	dl, 0x46
0x4276:	jne	0x41f0


0x41f0:	lea	rax, [rip + 0x7794]
0x41f7:	lea	rdx, [rip + 0x778f]
0x41fe:	cmp	ebx, 9
0x4201:	cmovne	rax, rdx
0x4205:	add	rsp, 8
0x4209:	pop	rbx
0x420a:	pop	rbp
0x420b:	ret	


0x4210:	movzx	edx, byte ptr [rax + 1]
0x4214:	and	edx, 0xffffffdf
0x4217:	cmp	dl, 0x42
0x421a:	jne	0x41f0


0x427c:	cmp	byte ptr [rax + 3], 0x2d
0x4280:	jne	0x41f0


0x421c:	cmp	byte ptr [rax + 2], 0x31
0x4220:	jne	0x41f0


0x4286:	cmp	byte ptr [rax + 4], 0x38
0x428a:	jne	0x41f0


0x4222:	cmp	byte ptr [rax + 3], 0x38
0x4226:	jne	0x41f0


0x4290:	cmp	byte ptr [rax + 5], 0
0x4294:	jne	0x41f0


0x4228:	cmp	byte ptr [rax + 4], 0x30
0x422c:	jne	0x41f0


0x429a:	cmp	byte ptr [rbp], 0x60
0x429e:	lea	rax, [rip + 0x76d7]
0x42a5:	lea	rdx, [rip + 0x76d4]
0x42ac:	cmovne	rax, rdx
0x42b0:	add	rsp, 8
0x42b4:	pop	rbx
0x42b5:	pop	rbp
0x42b6:	ret	


0x422e:	cmp	byte ptr [rax + 5], 0x33
0x4232:	jne	0x41f0


0x4234:	cmp	byte ptr [rax + 6], 0x30
0x4238:	jne	0x41f0


0x423a:	cmp	byte ptr [rax + 7], 0
0x423e:	jne	0x41f0


0x4240:	cmp	byte ptr [rbp], 0x60
0x4244:	lea	rax, [rip + 0x7739]
0x424b:	lea	rdx, [rip + 0x7736]
0x4252:	cmovne	rax, rdx
0x4256:	add	rsp, 8
0x425a:	pop	rbx
0x425b:	pop	rbp
0x425c:	ret	


0xa4ba:	test	eax, eax
0xa4bc:	js	0xa510


0xa510:	add	rsp, 8
0xa514:	xor	ebp, ebp
0xa516:	pop	rbx
0xa517:	mov	rax, rbp
0xa51a:	pop	rbp
0xa51b:	pop	r12
0xa51d:	pop	r13
0xa51f:	ret	


0xa4be:	mov	edi, eax
0xa4c0:	mov	ebx, eax
0xa4c2:	call	0x1d10


0x7a6a:	test	rax, rax
0x7a6d:	mov	qword ptr [rbp + 0x18], rax
0x7a71:	je	0x7d90


0x7d90:	cmp	dword ptr [rsp + 0x58], 3
0x7d95:	jne	0x7b7c


0x7a77:	cmp	word ptr [rbp + 0x70], 0xb
0x7a7c:	je	0x7e10


0x7e10:	xor	edx, edx
0x7e12:	mov	rsi, rbp
0x7e15:	mov	rdi, r15
0x7e18:	call	0x6a40


0x7a82:	mov	edi, dword ptr [r15 + 0x48]
0x7a86:	test	edi, 0x100
0x7a8c:	jne	0x7bb0


0x7a92:	cmp	qword ptr [r15 + 0x40], 1
0x7a97:	sbb	rax, rax
0x7a9a:	and	eax, 0x186a1
0x7a9f:	sub	rax, 1
0x7aa3:	cmp	dword ptr [rsp + 0x58], 2
0x7aa8:	mov	qword ptr [rsp + 0x38], rax
0x7aad:	je	0x7e00


0x7bb0:	lea	rbx, [r15 + 0x58]
0x7bb4:	mov	rdx, rbp
0x7bb7:	mov	rsi, rbx
0x7bba:	call	0x7500


0x7e00:	mov	byte ptr [rsp + 0x5f], 0
0x7e05:	mov	edi, dword ptr [r15 + 0x48]
0x7e09:	jmp	0x762b


0x7ab3:	mov	edx, dword ptr [r15 + 0x48]
0x7ab7:	mov	eax, dword ptr [rsp + 0x64]
0x7abb:	and	edx, 0x38
0x7abe:	cmp	edx, 0x18
0x7ac1:	je	0x7e64


0x7e64:	cmp	qword ptr [rbp + 0x88], 2
0x7e6c:	jne	0x7ac7


0x7ac7:	cmp	dword ptr [rsp + 0x58], 3
0x7acc:	mov	r12d, 1
0x7ad2:	sete	bl
0x7ad5:	test	byte ptr [r15 + 0x49], 2
0x7ada:	jne	0x7ebc


0x7e72:	mov	esi, eax
0x7e74:	mov	rdi, rbp
0x7e77:	call	0x6f70


0x7ae0:	test	eax, eax
0x7ae2:	jns	0x7e48


0x7ebc:	mov	edi, eax
0x7ebe:	mov	edx, 3
0x7ec3:	mov	esi, 0x406
0x7ec8:	xor	eax, eax
0x7eca:	call	0xa5e0


0x7ae8:	test	bl, bl
0x7aea:	je	0x7afb


0x7e48:	xor	ecx, ecx
0x7e4a:	mov	edx, eax
0x7e4c:	mov	rsi, rbp
0x7e4f:	mov	rdi, r15
0x7e52:	call	0x71d0


0x7afb:	or	word ptr [rbp + 0x72], 1
0x7b00:	mov	rdi, qword ptr [rbp + 0x18]
0x7b04:	call	0x1b60


0x7aec:	test	r12b, r12b
0x7aef:	je	0x7afb


0x7af1:	call	0x19a0


0x7af6:	mov	eax, dword ptr [rax]
0x7af8:	mov	dword ptr [rbp + 0x40], eax
0x7afb:	or	word ptr [rbp + 0x72], 1
0x7b00:	mov	rdi, qword ptr [rbp + 0x18]
0x7b04:	call	0x1b60


0x7b09:	mov	edi, dword ptr [r15 + 0x48]
0x7b0d:	mov	qword ptr [rbp + 0x18], 0
0x7b15:	test	edi, 0x200
0x7b1b:	je	0x7b30


0x7b30:	mov	qword ptr [rbp + 0x18], 0
0x7b38:	mov	byte ptr [rsp + 0x5f], 0
0x7b3d:	jmp	0x762b


0x7b1d:	mov	eax, dword ptr [rsp + 0x64]
0x7b21:	test	eax, eax
0x7b23:	js	0x7b30


0x7b25:	mov	edi, eax
0x7b27:	call	0x1b50


0x7b2c:	mov	edi, dword ptr [r15 + 0x48]
0x7b30:	mov	qword ptr [rbp + 0x18], 0
0x7b38:	mov	byte ptr [rsp + 0x5f], 0
0x7b3d:	jmp	0x762b


0x7e57:	test	eax, eax
0x7e59:	jne	0x7ae8


0x7e5f:	jmp	0x7622


0x7622:	mov	edi, dword ptr [r15 + 0x48]
0x7626:	mov	byte ptr [rsp + 0x5f], 1
0x762b:	mov	rcx, qword ptr [rbp + 0x48]
0x762f:	mov	rdx, qword ptr [rbp + 0x38]
0x7633:	mov	qword ptr [rsp + 0x40], 0
0x763c:	cmp	byte ptr [rdx + rcx - 1], 0x2f
0x7641:	lea	rax, [rcx - 1]
0x7645:	cmovne	rax, rcx
0x7649:	and	edi, 4
0x764c:	mov	qword ptr [rsp + 0x48], rax
0x7651:	je	0x7663


0x7ecf:	mov	dword ptr [rsp + 0x64], eax
0x7ed3:	jmp	0x7ae0


0x7e7c:	test	eax, eax
0x7e7e:	jne	0x7efe


0x7e80:	mov	eax, dword ptr [rsp + 0x64]
0x7e84:	jmp	0x7ac7


0x7efe:	cmp	dword ptr [rsp + 0x58], 3
0x7f03:	jne	0x7e00


0x7f09:	mov	eax, dword ptr [rsp + 0x64]
0x7f0d:	xor	r12d, r12d
0x7f10:	mov	ebx, 1
0x7f15:	jmp	0x7ad5


0x7ad5:	test	byte ptr [r15 + 0x49], 2
0x7ada:	jne	0x7ebc


0x7bbf:	xor	edx, edx
0x7bc1:	mov	rsi, rbp
0x7bc4:	mov	rdi, r15
0x7bc7:	call	0x6a40


0x7bcc:	mov	edi, dword ptr [r15 + 0x48]
0x7bd0:	mov	rdx, rbp
0x7bd3:	mov	rsi, rbx
0x7bd6:	call	0x7450


0x7bdb:	test	al, al
0x7bdd:	jne	0x7a92


0x7be3:	call	0x19a0


0x7be8:	mov	qword ptr [rsp + 0x10], 0
0x7bf1:	mov	dword ptr [rax], 0xc
0x7bf7:	jmp	0x7b85


0x7e1d:	mov	word ptr [rbp + 0x70], ax
0x7e21:	jmp	0x7a92


0x6993:	mov	edx, r12d
0x6996:	mov	rsi, rbp
0x6999:	mov	edi, eax
0x699b:	call	0x1b10


0x1b10:	jmp	qword ptr [rip + 0x20d36a]




0xa56c:	test	eax, eax
0xa56e:	mov	rdi, rbx
0xa571:	js	0xa5c7


0xa5c7:	pop	rbx
0xa5c8:	pop	rbp
0xa5c9:	pop	r12
0xa5cb:	jmp	0x1a40


0xa573:	call	0x1c60


0x1a40:	jmp	qword ptr [rip + 0x20d3d2]




0xa578:	test	eax, eax
0xa57a:	jne	0xa5a8


0xa57c:	mov	rdi, rbx
0xa57f:	call	0x68f0


0xa5a8:	mov	rdi, rbx
0xa5ab:	call	0x1bf0


0xa5b0:	xor	esi, esi
0xa5b2:	mov	edx, 1
0xa5b7:	mov	edi, eax
0xa5b9:	call	0x1b10


0xa5be:	cmp	rax, -1
0xa5c2:	jne	0xa57c


0xa5c4:	mov	rdi, rbx
0xa5c7:	pop	rbx
0xa5c8:	pop	rbp
0xa5c9:	pop	r12
0xa5cb:	jmp	0x1a40


0x69a0:	cmp	rax, -1
0x69a4:	je	0x69b2


0x69b2:	pop	rbx
0x69b3:	pop	rbp
0x69b4:	pop	r12
0x69b6:	ret	


0x69a6:	and	dword ptr [rbx], 0xffffffef
0x69a9:	mov	qword ptr [rbx + 0x90], rax
0x69b0:	xor	eax, eax
0x69b2:	pop	rbx
0x69b3:	pop	rbp
0x69b4:	pop	r12
0x69b6:	ret	


0x6f0d:	test	eax, eax
0x6f0f:	jne	0x6ed2


0x6f11:	test	r12, r12
0x6f14:	mov	rbx, qword ptr [rsp + 0x10]
0x6f19:	je	0x6ed4


0x6ed4:	mov	rdx, qword ptr [rsp + 0x88]
0x6edc:	xor	rdx, qword ptr fs:[0x28]
0x6ee5:	mov	rax, rbx
0x6ee8:	jne	0x6f62


0x6f1b:	mov	edi, 0x10
0x6f20:	call	0x1c20


0x6f25:	test	rax, rax
0x6f28:	mov	r13, rax
0x6f2b:	je	0x6ed4


0x6f2d:	mov	rax, qword ptr [rbp + 0x78]
0x6f31:	mov	qword ptr [r13 + 8], rbx
0x6f35:	mov	rsi, r13
0x6f38:	mov	rdi, r12
0x6f3b:	mov	qword ptr [r13], rax
0x6f3f:	call	0xa0d0


0x6d5d:	mov	rax, qword ptr [r12 + 0x20]
0x6d62:	mov	byte ptr [rbx + rbp + 0x108], 0
0x6d6a:	mov	qword ptr [rbx + 0x60], rbp
0x6d6e:	mov	qword ptr [rbx + 0x50], r12
0x6d72:	mov	dword ptr [rbx + 0x40], 0
0x6d79:	mov	qword ptr [rbx + 0x18], 0
0x6d81:	mov	qword ptr [rbx + 0x38], rax
0x6d85:	mov	dword ptr [rbx + 0x72], 0x30000
0x6d8c:	mov	qword ptr [rbx + 0x20], 0
0x6d94:	mov	qword ptr [rbx + 0x28], 0
0x6d9c:	add	rsp, 8
0x6da0:	mov	rax, rbx
0x6da3:	pop	rbx
0x6da4:	pop	rbp
0x6da5:	pop	r12
0x6da7:	pop	r13
0x6da9:	ret	


0x40e2:	movzx	ecx, byte ptr [rsp + 0xf]
0x40e7:	mov	rdi, qword ptr [rsp]
0x40eb:	add	rdi, rax
0x40ee:	test	r15, r15
0x40f1:	mov	byte ptr [rax], cl
0x40f3:	je	0x40f8


0x40f8:	mov	rdx, r14
0x40fb:	mov	rsi, rbp
0x40fe:	call	0x1cb0


0x40f5:	mov	qword ptr [r15], rdi
0x40f8:	mov	rdx, r14
0x40fb:	mov	rsi, rbp
0x40fe:	call	0x1cb0


0x4103:	mov	byte ptr [rax], 0
0x4106:	add	rsp, 0x18
0x410a:	mov	rax, r13
0x410d:	pop	rbx
0x410e:	pop	rbp
0x410f:	pop	r12
0x4111:	pop	r13
0x4113:	pop	r14
0x4115:	pop	r15
0x4117:	ret	


0x1e10:	lea	rdi, [rip + 0x8b8a]
0x1e17:	call	0x1a30


0x1a30:	jmp	qword ptr [rip + 0x20d3da]




0x56dd:	mov	dword ptr [rbp], r12d
0x56e1:	pop	rbx
0x56e2:	pop	rbp
0x56e3:	pop	r12
0x56e5:	ret	


0x559e:	mov	dword ptr [rip + 0x209ad3], r12d
0x55a5:	mov	eax, dword ptr [rbp + 4]
0x55a8:	shl	r15, 4
0x55ac:	sub	rsp, 8
0x55b0:	add	rbx, r15
0x55b3:	lea	r15, [rbp + 8]
0x55b7:	mov	r8d, dword ptr [rbp]
0x55bb:	mov	r11, qword ptr [rbx]
0x55be:	mov	r12, qword ptr [rbx + 8]
0x55c2:	mov	rcx, r14
0x55c5:	or	eax, 1
0x55c8:	mov	dword ptr [rsp + 0x24], eax
0x55cc:	push	qword ptr [rbp + 0x30]
0x55cf:	mov	r9d, eax
0x55d2:	push	qword ptr [rbp + 0x28]
0x55d5:	push	r15
0x55d7:	mov	rsi, r11
0x55da:	mov	rdx, qword ptr [rsp + 0x28]
0x55df:	mov	rdi, r12
0x55e2:	mov	qword ptr [rsp + 0x30], r11
0x55e7:	call	0x42c0


0x77b7:	test	rax, rax
0x77ba:	mov	rbp, rax
0x77bd:	je	0x7d40


0x7d40:	mov	eax, dword ptr [r12]
0x7d44:	mov	rbp, qword ptr [rsp + 0x20]
0x7d49:	test	eax, eax
0x7d4b:	je	0x7d6e


0x77c3:	test	byte ptr [r15 + 0x48], 0x20
0x77c8:	jne	0x77d4


0x7d6e:	mov	rdi, qword ptr [rbp + 0x18]
0x7d72:	test	rdi, rdi
0x7d75:	je	0x7c6b


0x7d4d:	test	rbx, rbx
0x7d50:	mov	dword ptr [rbp + 0x40], eax
0x7d53:	jne	0x7e89


0x77ca:	cmp	byte ptr [rax + 0x13], 0x2e
0x77ce:	je	0x79b0


0x77d4:	lea	r13, [rbp + 0x13]
0x77d8:	mov	rdi, r13
0x77db:	call	0x1a80


0x7c6b:	cmp	byte ptr [rsp + 0x5d], 0
0x7c70:	jne	0x78d8


0x7d7b:	call	0x1b60


0x7d59:	cmp	qword ptr [rsp + 0x50], 0
0x7d5f:	mov	eax, 4
0x7d64:	jne	0x7e89


0x7e89:	mov	eax, 7
0x7e8e:	jmp	0x7d6a


0x79b0:	cmp	byte ptr [rax + 0x14], 0
0x79b4:	je	0x79c1


0x7d6a:	mov	word ptr [rbp + 0x70], ax
0x7d6e:	mov	rdi, qword ptr [rbp + 0x18]
0x7d72:	test	rdi, rdi
0x7d75:	je	0x7c6b


0x79c1:	mov	r13, qword ptr [rsp + 8]
0x79c6:	jmp	0x778a


0x79b6:	cmp	word ptr [rax + 0x14], 0x2e
0x79bb:	jne	0x77d4


0x778a:	mov	qword ptr [rsp + 8], r13
0x778f:	mov	rax, qword ptr [rsp + 0x20]
0x7794:	mov	r13, qword ptr [rax + 0x18]
0x7798:	test	r13, r13
0x779b:	je	0x7c68


0x7d80:	mov	qword ptr [rbp + 0x18], 0
0x7d88:	jmp	0x7c6b


0x77e0:	mov	rsi, r13
0x77e3:	mov	rdx, rax
0x77e6:	mov	rdi, r15
0x77e9:	mov	r14, rax
0x77ec:	call	0x6d20


0x77f1:	test	rax, rax
0x77f4:	mov	r13, rax
0x77f7:	je	0x7c10


0x7c10:	mov	rdi, r13
0x7c13:	mov	rbp, qword ptr [rsp + 0x20]
0x7c18:	mov	ebx, dword ptr [r12]
0x7c1c:	call	0x1da0


0x77fd:	cmp	qword ptr [rsp + 0x28], r14
0x7802:	ja	0x76b8


0x7808:	mov	rax, qword ptr [r15 + 0x20]
0x780c:	lea	rsi, [r15 + 0x30]
0x7810:	lea	rdi, [r15 + 0x20]
0x7814:	mov	qword ptr [rsp + 0x28], rax
0x7819:	mov	rax, qword ptr [rsp + 0x48]
0x781e:	lea	rdx, [rax + r14 + 2]
0x7823:	call	0x70b0


0x76b8:	mov	r9, r14
0x76bb:	add	r9, qword ptr [rsp + 0x18]
0x76c0:	jb	0x7f20


0x7f20:	mov	rdi, r13
0x7f23:	mov	rbp, qword ptr [rsp + 0x20]
0x7f28:	call	0x1da0


0x76c6:	mov	rax, qword ptr [rsp + 0x30]
0x76cb:	lea	rsi, [r13 + 0x108]
0x76d2:	mov	qword ptr [r13 + 0x58], rax
0x76d6:	mov	rax, qword ptr [r15]
0x76d9:	mov	qword ptr [r13 + 0x48], r9
0x76dd:	mov	qword ptr [r13 + 8], rax
0x76e1:	mov	rax, qword ptr [rbp]
0x76e5:	mov	qword ptr [r13 + 0x80], rax
0x76ec:	mov	eax, dword ptr [r15 + 0x48]
0x76f0:	test	al, 4
0x76f2:	jne	0x7960


0x76f8:	mov	qword ptr [r13 + 0x30], rsi
0x76fc:	cmp	qword ptr [r15 + 0x40], 0
0x7701:	je	0x770c


0x7960:	mov	rax, qword ptr [r13 + 0x38]
0x7964:	mov	rdi, qword ptr [rsp + 0x40]
0x7969:	mov	qword ptr [r13 + 0x30], rax
0x796d:	mov	rax, qword ptr [r13 + 0x60]
0x7971:	lea	rdx, [rax + 1]
0x7975:	call	0x1cc0


0x770c:	movzx	edx, byte ptr [rbp + 0x12]
0x7710:	and	eax, 0x18
0x7713:	mov	esi, edx
0x7715:	sub	edx, 1
0x7718:	cmp	eax, 0x18
0x771b:	je	0x79d0


0x7703:	test	ah, 4
0x7706:	je	0x7a08


0x79d0:	and	esi, 0xfb
0x79d6:	je	0x7721


0x7721:	mov	ecx, 0xb
0x7726:	cmp	edx, 0xb
0x7729:	mov	word ptr [r13 + 0x70], cx
0x772e:	ja	0x7998


0x7a08:	xor	edx, edx
0x7a0a:	mov	rsi, r13
0x7a0d:	mov	rdi, r15
0x7a10:	call	0x6a40


0x79dc:	mov	eax, 0xb
0x79e1:	cmp	edx, 0xb
0x79e4:	mov	word ptr [r13 + 0x70], ax
0x79e9:	jbe	0x7f76


0x7734:	lea	rax, [rip + 0x4aa5]
0x773b:	mov	eax, dword ptr [rax + rdx*4]
0x773e:	mov	dword ptr [r13 + 0x90], eax
0x7745:	mov	eax, 2
0x774a:	mov	qword ptr [r13 + 0xa8], rax
0x7751:	cmp	qword ptr [rsp + 0x10], 0
0x7757:	mov	qword ptr [r13 + 0x10], 0
0x775f:	je	0x7988


0x7998:	mov	dword ptr [r13 + 0x90], 0
0x79a3:	mov	eax, 2
0x79a8:	jmp	0x774a


0x7f76:	lea	rax, [rip + 0x4263]
0x7f7d:	mov	eax, dword ptr [rax + rdx*4]
0x7f80:	mov	dword ptr [r13 + 0x90], eax
0x7f87:	mov	eax, 1
0x7f8c:	jmp	0x774a


0x79ef:	mov	dword ptr [r13 + 0x90], 0
0x79fa:	mov	eax, 1
0x79ff:	jmp	0x774a


0x7988:	mov	qword ptr [rsp + 0x10], r13
0x798d:	jmp	0x776e


0x7765:	mov	rax, qword ptr [rsp + 8]
0x776a:	mov	qword ptr [rax + 0x10], r13
0x776e:	cmp	rbx, 0x2710
0x7775:	je	0x7870


0x774a:	mov	qword ptr [r13 + 0xa8], rax
0x7751:	cmp	qword ptr [rsp + 0x10], 0
0x7757:	mov	qword ptr [r13 + 0x10], 0
0x775f:	je	0x7988


0x776e:	cmp	rbx, 0x2710
0x7775:	je	0x7870


0x7870:	cmp	qword ptr [r15 + 0x40], 0
0x7875:	jne	0x777b


0x777b:	add	rbx, 1
0x777f:	cmp	rbx, qword ptr [rsp + 0x38]
0x7784:	jae	0x78c8


0x787b:	mov	esi, dword ptr [rsp + 0x64]
0x787f:	mov	rdi, qword ptr [rsp + 0x20]
0x7884:	call	0x6e40


0x78c8:	cmp	byte ptr [rsp + 0x5d], 0
0x78cd:	mov	rbp, qword ptr [rsp + 0x20]
0x78d2:	je	0x7c76


0x7889:	cmp	rax, 0x1021994
0x788f:	je	0x7c00


0x7c00:	mov	byte ptr [rsp + 0x5e], 0
0x7c05:	jmp	0x777b


0x7895:	mov	ecx, 0xff534d42
0x789a:	cmp	rax, rcx
0x789d:	je	0x7c00


0x78a3:	cmp	rax, 0x6969
0x78a9:	je	0x7c00


0x78af:	add	rbx, 1
0x78b3:	cmp	rbx, qword ptr [rsp + 0x38]
0x78b8:	mov	byte ptr [rsp + 0x5e], 1
0x78bd:	jb	0x778a


0x7a15:	mov	word ptr [r13 + 0x70], ax
0x7a1a:	jmp	0x7751


0x7751:	cmp	qword ptr [rsp + 0x10], 0
0x7757:	mov	qword ptr [r13 + 0x10], 0
0x775f:	je	0x7988


0x797a:	mov	eax, dword ptr [r15 + 0x48]
0x797e:	jmp	0x76fc


0x76fc:	cmp	qword ptr [r15 + 0x40], 0
0x7701:	je	0x770c


0x7828:	test	al, al
0x782a:	je	0x7c10


0x7830:	mov	rdx, qword ptr [r15 + 0x20]
0x7834:	cmp	rdx, qword ptr [rsp + 0x28]
0x7839:	je	0x7a20


0x7a20:	movzx	eax, byte ptr [rsp + 0x5d]
0x7a25:	jmp	0x7854


0x783f:	add	rdx, qword ptr [rsp + 0x18]
0x7844:	test	byte ptr [r15 + 0x48], 4
0x7849:	cmove	rdx, qword ptr [rsp + 0x40]
0x784f:	mov	qword ptr [rsp + 0x40], rdx
0x7854:	mov	rcx, qword ptr [r15 + 0x30]
0x7858:	sub	rcx, qword ptr [rsp + 0x18]
0x785d:	mov	byte ptr [rsp + 0x5d], al
0x7861:	mov	qword ptr [rsp + 0x28], rcx
0x7866:	jmp	0x76b8


0x7854:	mov	rcx, qword ptr [r15 + 0x30]
0x7858:	sub	rcx, qword ptr [rsp + 0x18]
0x785d:	mov	byte ptr [rsp + 0x5d], al
0x7861:	mov	qword ptr [rsp + 0x28], rcx
0x7866:	jmp	0x76b8


0x7f2d:	mov	rdi, qword ptr [rsp + 0x10]
0x7f32:	call	0x6db0


0x7f37:	mov	rdi, qword ptr [rbp + 0x18]
0x7f3b:	call	0x1b60


0x7f40:	mov	r8d, 7
0x7f46:	mov	qword ptr [rbp + 0x18], 0
0x7f4e:	mov	qword ptr [rsp + 0x10], 0
0x7f57:	mov	word ptr [rbp + 0x70], r8w
0x7f5c:	or	dword ptr [r15 + 0x48], 0x2000
0x7f64:	mov	dword ptr [r12], 0x24
0x7f6c:	jmp	0x7b85


0x7c21:	mov	rdi, qword ptr [rsp + 0x10]
0x7c26:	call	0x6db0


0x7c2b:	mov	rdi, qword ptr [rbp + 0x18]
0x7c2f:	call	0x1b60


0x7c34:	mov	r9d, 7
0x7c3a:	mov	qword ptr [rbp + 0x18], 0
0x7c42:	mov	qword ptr [rsp + 0x10], 0
0x7c4b:	mov	word ptr [rbp + 0x70], r9w
0x7c50:	or	dword ptr [r15 + 0x48], 0x2000
0x7c58:	mov	dword ptr [r12], ebx
0x7c5c:	jmp	0x7b85


0x68ad:	test	eax, eax
0x68af:	setg	bl
0x68b2:	mov	rdi, qword ptr [rsp + 8]
0x68b7:	call	0x1da0


0x3718:	jmp	0x31bc


0x36e0:	mov	rdi, rbx
0x36e3:	call	0x8350


0x36e8:	test	eax, eax
0x36ea:	je	0x31bc


0x67c0:	call	0x1990


0x64aa:	lea	rsi, [rip + 0x5a06]
0x64b1:	mov	edx, 5
0x64b6:	xor	edi, edi
0x64b8:	call	0x1a60


0x64bd:	lea	rcx, [rip + 0x4dcc]
0x64c4:	lea	rdx, [rip + 0x44d2]
0x64cb:	mov	rsi, rax
0x64ce:	mov	edi, 1
0x64d3:	xor	eax, eax
0x64d5:	call	0x1ca0


0x64da:	mov	rbx, qword ptr [rip + 0x208bc7]
0x64e1:	lea	rsi, [rip + 0x5c00]
0x64e8:	xor	edi, edi
0x64ea:	mov	edx, 5
0x64ef:	call	0x1a60


0x64f4:	mov	rsi, rbx
0x64f7:	mov	rdi, rax
0x64fa:	pop	rbx
0x64fb:	jmp	0x1b80


0x251d:	mov	rbx, qword ptr [rip + 0x20cb84]
0x2524:	lea	rsi, [rip + 0x864d]
0x252b:	mov	edx, 5
0x2530:	xor	edi, edi
0x2532:	call	0x1a60


0x2537:	mov	rsi, rbx
0x253a:	mov	rdi, rax
0x253d:	call	0x1b80


0x2542:	mov	rbx, qword ptr [rip + 0x20cb5f]
0x2549:	lea	rsi, [rip + 0x86c8]
0x2550:	mov	edx, 5
0x2555:	xor	edi, edi
0x2557:	call	0x1a60


0x255c:	mov	rsi, rbx
0x255f:	mov	rdi, rax
0x2562:	call	0x1b80


0x2567:	mov	rbx, qword ptr [rip + 0x20cb3a]
0x256e:	lea	rsi, [rip + 0x881b]
0x2575:	mov	edx, 5
0x257a:	xor	edi, edi
0x257c:	call	0x1a60


0x2581:	mov	rsi, rbx
0x2584:	mov	rdi, rax
0x2587:	call	0x1b80


0x258c:	mov	rbx, qword ptr [rip + 0x20cb15]
0x2593:	lea	rsi, [rip + 0x88d6]
0x259a:	mov	edx, 5
0x259f:	xor	edi, edi
0x25a1:	call	0x1a60


0x25a6:	mov	rsi, rbx
0x25a9:	mov	rdi, rax
0x25ac:	call	0x1b80


0x25b1:	mov	rbx, qword ptr [rip + 0x20caf0]
0x25b8:	lea	rsi, [rip + 0x89b1]
0x25bf:	mov	edx, 5
0x25c4:	xor	edi, edi
0x25c6:	call	0x1a60


0x25cb:	mov	rsi, rbx
0x25ce:	mov	rdi, rax
0x25d1:	call	0x1b80


0x25d6:	mov	rbx, qword ptr [rip + 0x20cacb]
0x25dd:	lea	rsi, [rip + 0x8a3c]
0x25e4:	mov	edx, 5
0x25e9:	xor	edi, edi
0x25eb:	call	0x1a60


0x25f0:	mov	rsi, rbx
0x25f3:	mov	rdi, rax
0x25f6:	call	0x1b80


0x25fb:	mov	rbx, qword ptr [rip + 0x20caa6]
0x2602:	lea	rsi, [rip + 0x8a47]
0x2609:	mov	edx, 5
0x260e:	xor	edi, edi
0x2610:	call	0x1a60


0x2615:	mov	rsi, rbx
0x2618:	mov	rdi, rax
0x261b:	call	0x1b80


0x2620:	mov	rbx, qword ptr [rip + 0x20ca81]
0x2627:	lea	rsi, [rip + 0x8a5a]
0x262e:	mov	edx, 5
0x2633:	xor	edi, edi
0x2635:	call	0x1a60


0x263a:	mov	rsi, rbx
0x263d:	mov	rdi, rax
0x2640:	call	0x1b80


0x2645:	mov	rbx, qword ptr [rip + 0x20cacc]
0x264c:	lea	rsi, [rip + 0x8ad5]
0x2653:	xor	edi, edi
0x2655:	mov	edx, 5
0x265a:	call	0x1a60


0x265f:	mov	rcx, rbx
0x2662:	mov	rdx, rbx
0x2665:	mov	rsi, rax
0x2668:	mov	edi, 1
0x266d:	xor	eax, eax
0x266f:	call	0x1ca0


0x2674:	mov	rbx, qword ptr [rip + 0x20ca2d]
0x267b:	lea	rsi, [rip + 0x8b26]
0x2682:	mov	edx, 5
0x2687:	xor	edi, edi
0x2689:	call	0x1a60


0x268e:	mov	rsi, rbx
0x2691:	mov	rdi, rax
0x2694:	lea	rbx, [rip + 0x8289]
0x269b:	call	0x1b80


0x26a0:	lea	rax, [rip + 0x8280]
0x26a7:	lea	rcx, [rip + 0x82ba]
0x26ae:	mov	qword ptr [rsp + 0x60], 0
0x26b7:	mov	qword ptr [rsp + 0x68], 0
0x26c0:	mov	rdx, rsp
0x26c3:	mov	qword ptr [rsp], rax
0x26c7:	lea	rax, [rip + 0x825b]
0x26ce:	mov	qword ptr [rsp + 0x30], rcx
0x26d3:	lea	rcx, [rip + 0x8298]
0x26da:	mov	qword ptr [rsp + 8], rax
0x26df:	lea	rax, [rip + 0x82bb]
0x26e6:	mov	qword ptr [rsp + 0x40], rcx
0x26eb:	lea	rcx, [rip + 0x828a]
0x26f2:	mov	qword ptr [rsp + 0x10], rax
0x26f7:	lea	rax, [rip + 0x823b]
0x26fe:	mov	qword ptr [rsp + 0x50], rcx
0x2703:	mov	qword ptr [rsp + 0x18], rax
0x2708:	lea	rax, [rip + 0x8240]
0x270f:	mov	qword ptr [rsp + 0x20], rax
0x2714:	lea	rax, [rip + 0x823e]
0x271b:	mov	qword ptr [rsp + 0x28], rax
0x2720:	mov	qword ptr [rsp + 0x38], rax
0x2725:	mov	qword ptr [rsp + 0x48], rax
0x272a:	mov	qword ptr [rsp + 0x58], rax
0x272f:	nop	
0x2730:	add	rdx, 0x10
0x2734:	mov	rdi, qword ptr [rdx]
0x2737:	test	rdi, rdi
0x273a:	je	0x274f


0x274f:	mov	r12, qword ptr [rdx + 8]
0x2753:	xor	edi, edi
0x2755:	mov	edx, 5
0x275a:	lea	rsi, [rip + 0x8225]
0x2761:	test	r12, r12
0x2764:	je	0x282b


0x273c:	mov	ecx, 3
0x2741:	mov	rsi, rbx
0x2744:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x282b:	call	0x1a60


0x276a:	call	0x1a60


0x2744:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2746:	seta	al
0x2749:	sbb	al, 0
0x274b:	test	al, al
0x274d:	jne	0x2730


0x2730:	add	rdx, 0x10
0x2734:	mov	rdi, qword ptr [rdx]
0x2737:	test	rdi, rdi
0x273a:	je	0x274f


0x276f:	lea	rcx, [rip + 0x8b1a]
0x2776:	lea	rdx, [rip + 0x8220]
0x277d:	mov	rsi, rax
0x2780:	mov	edi, 1
0x2785:	xor	eax, eax
0x2787:	call	0x1ca0


0x278c:	xor	esi, esi
0x278e:	mov	edi, 5
0x2793:	call	0x1c90


0x2798:	test	rax, rax
0x279b:	je	0x27b9


0x27b9:	lea	rsi, [rip + 0x81ef]
0x27c0:	xor	edi, edi
0x27c2:	mov	edx, 5
0x27c7:	call	0x1a60


0x279d:	lea	rsi, [rip + 0x8207]
0x27a4:	mov	edx, 3
0x27a9:	mov	rdi, rax
0x27ac:	call	0x19b0


0x27cc:	lea	rcx, [rip + 0x8151]
0x27d3:	lea	rdx, [rip + 0x8ab6]
0x27da:	mov	rsi, rax
0x27dd:	mov	edi, 1
0x27e2:	xor	eax, eax
0x27e4:	call	0x1ca0


0x27e9:	cmp	r12, rbx
0x27ec:	lea	rcx, [rip + 0x8150]
0x27f3:	lea	rbx, [rip + 0x96a7]
0x27fa:	cmove	rbx, rcx
0x27fe:	lea	rsi, [rip + 0x8afb]
0x2805:	xor	edi, edi
0x2807:	mov	edx, 5
0x280c:	call	0x1a60


0x2811:	mov	rcx, rbx
0x2814:	mov	rsi, rax
0x2817:	mov	rdx, r12
0x281a:	mov	edi, 1
0x281f:	xor	eax, eax
0x2821:	call	0x1ca0


0x2826:	jmp	0x24f6


0x2830:	lea	rcx, [rip + 0x8a59]
0x2837:	lea	rdx, [rip + 0x815f]
0x283e:	mov	rsi, rax
0x2841:	mov	edi, 1
0x2846:	xor	eax, eax
0x2848:	call	0x1ca0


0x284d:	xor	esi, esi
0x284f:	mov	edi, 5
0x2854:	call	0x1c90


0x2859:	test	rax, rax
0x285c:	je	0x2876


0x2876:	lea	rsi, [rip + 0x8132]
0x287d:	mov	edx, 5
0x2882:	xor	edi, edi
0x2884:	lea	r12, [rip + 0x8099]
0x288b:	lea	rbx, [rip + 0x80b1]
0x2892:	call	0x1a60


0x285e:	lea	rsi, [rip + 0x8146]
0x2865:	mov	edx, 3
0x286a:	mov	rdi, rax
0x286d:	call	0x19b0


0x2897:	lea	rcx, [rip + 0x8086]
0x289e:	lea	rdx, [rip + 0x89eb]
0x28a5:	mov	rsi, rax
0x28a8:	mov	edi, 1
0x28ad:	xor	eax, eax
0x28af:	call	0x1ca0


0x28b4:	jmp	0x27fe


0x27fe:	lea	rsi, [rip + 0x8afb]
0x2805:	xor	edi, edi
0x2807:	mov	edx, 5
0x280c:	call	0x1a60


0x3adc:	mov	r15, qword ptr [r14]
0x3adf:	test	r15, r15
0x3ae2:	je	0x3b78


0x3b78:	mov	rdi, qword ptr [rip + 0x20b561]
0x3b7f:	mov	rax, qword ptr [rdi + 0x28]
0x3b83:	cmp	rax, qword ptr [rdi + 0x30]
0x3b87:	jae	0x3ba8


0x3ae8:	xor	r13d, r13d
0x3aeb:	xor	ebx, ebx
0x3aed:	jmp	0x3b28


0x3b89:	lea	rdx, [rax + 1]
0x3b8d:	mov	qword ptr [rdi + 0x28], rdx
0x3b91:	mov	byte ptr [rax], 0xa
0x3b94:	add	rsp, 8
0x3b98:	pop	rbx
0x3b99:	pop	rbp
0x3b9a:	pop	r12
0x3b9c:	pop	r13
0x3b9e:	pop	r14
0x3ba0:	pop	r15
0x3ba2:	ret	


0x3ba8:	add	rsp, 8
0x3bac:	mov	esi, 0xa
0x3bb1:	pop	rbx
0x3bb2:	pop	rbp
0x3bb3:	pop	r12
0x3bb5:	pop	r13
0x3bb7:	pop	r14
0x3bb9:	pop	r15
0x3bbb:	jmp	0x1af0


0x3b28:	test	rbx, rbx
0x3b2b:	je	0x3af0


0x1af0:	jmp	qword ptr [rip + 0x20d37a]


0x3af0:	mov	rdi, r15
0x3af3:	add	rbx, 1
0x3af7:	mov	r13, rbp
0x3afa:	call	0x5e40


0x3b2d:	mov	rdx, r12
0x3b30:	mov	rsi, rbp
0x3b33:	mov	rdi, r13
0x3b36:	call	0x1b70




0x3b3b:	test	eax, eax
0x3b3d:	jne	0x3af0


0x3b3f:	mov	rdi, r15
0x3b42:	add	rbx, 1
0x3b46:	add	rbp, r12
0x3b49:	call	0x5e40


0x5f6c:	cmp	r12, 9
0x5f70:	ja	0x62b0


0x5f76:	lea	rdx, [rip + 0x61af]
0x5f7d:	movsxd	rax, dword ptr [rdx + r12*4]
0x5f81:	add	rax, rdx
0x5f84:	jmp	rax


0x62b0:	mov	r10, qword ptr [rbx + 0x40]
0x62b4:	mov	r9, qword ptr [rbx + 0x38]
0x62b8:	mov	edx, 5
0x62bd:	mov	rax, qword ptr [rbx + 0x10]
0x62c1:	mov	r8, qword ptr [rbx + 8]
0x62c5:	lea	rsi, [rip + 0x5ddc]
0x62cc:	mov	r13, qword ptr [rbx + 0x30]
0x62d0:	mov	r12, qword ptr [rbx + 0x28]
0x62d4:	mov	r15, qword ptr [rbx + 0x20]
0x62d8:	mov	r14, qword ptr [rbx + 0x18]
0x62dc:	mov	qword ptr [rsp + 0x18], r10
0x62e1:	mov	qword ptr [rsp + 0x10], r9
0x62e6:	mov	qword ptr [rsp], rax
0x62ea:	mov	qword ptr [rsp + 8], r8
0x62ef:	mov	rbx, qword ptr [rbx]
0x62f2:	jmp	0x6082


0x6082:	xor	edi, edi
0x6084:	call	0x1a60


0x6089:	mov	r10, qword ptr [rsp + 0x18]
0x608e:	push	r10
0x6090:	jmp	0x5fd4


0x5fd4:	mov	r9, qword ptr [rsp + 0x18]
0x5fd9:	mov	rdx, rax
0x5fdc:	mov	rcx, rbx
0x5fdf:	mov	esi, 1
0x5fe4:	mov	rdi, rbp
0x5fe7:	xor	eax, eax
0x5fe9:	push	r9
0x5feb:	push	r13
0x5fed:	push	r12
0x5fef:	push	r15
0x5ff1:	push	r14
0x5ff3:	mov	r9, qword ptr [rsp + 0x30]
0x5ff8:	mov	r8, qword ptr [rsp + 0x38]
0x5ffd:	call	0x1d60


0x6002:	add	rsp, 0x30
0x6006:	add	rsp, 0x28
0x600a:	pop	rbx
0x600b:	pop	rbp
0x600c:	pop	r12
0x600e:	pop	r13
0x6010:	pop	r14
0x6012:	pop	r15
0x6014:	ret	


0x2872:	test	eax, eax
0x2874:	jne	0x28b9


0x28b9:	lea	r12, [rip + 0x8064]
0x28c0:	mov	r13, qword ptr [rip + 0x20c7e1]
0x28c7:	lea	rsi, [rip + 0x89ea]
0x28ce:	xor	edi, edi
0x28d0:	mov	edx, 5
0x28d5:	call	0x1a60


0x28da:	mov	rsi, r13
0x28dd:	mov	rdi, rax
0x28e0:	call	0x1b80


0x28e5:	jmp	0x27b9


0x27b1:	test	eax, eax
0x27b3:	jne	0x28c0


0x28c0:	mov	r13, qword ptr [rip + 0x20c7e1]
0x28c7:	lea	rsi, [rip + 0x89ea]
0x28ce:	xor	edi, edi
0x28d0:	mov	edx, 5
0x28d5:	call	0x1a60


0x39a7:	test	eax, eax
0x39a9:	jne	0x3987


0x39ab:	mov	rdi, r14
0x39ae:	call	0x1a80


0x3987:	add	rbx, 1
0x398b:	add	rbp, r13
0x398e:	mov	r14, qword ptr [r15 + rbx*8]
0x3992:	test	r14, r14
0x3995:	je	0x39d8


0x39d8:	cmp	byte ptr [rsp + 0x17], 0
0x39dd:	mov	rax, -2
0x39e4:	cmove	rax, qword ptr [rsp]
0x39e9:	mov	qword ptr [rsp], rax
0x39ed:	mov	rax, qword ptr [rsp]
0x39f1:	add	rsp, 0x28
0x39f5:	pop	rbx
0x39f6:	pop	rbp
0x39f7:	pop	r12
0x39f9:	pop	r13
0x39fb:	pop	r14
0x39fd:	pop	r15
0x39ff:	ret	


0x39b3:	cmp	rax, r12
0x39b6:	je	0x3a10


0x3a10:	mov	qword ptr [rsp], rbx
0x3a14:	jmp	0x39ed


0x39b8:	cmp	qword ptr [rsp], -1
0x39bd:	jne	0x3950


0x39bf:	mov	qword ptr [rsp], rbx
0x39c3:	add	rbx, 1
0x39c7:	add	rbp, r13
0x39ca:	mov	r14, qword ptr [r15 + rbx*8]
0x39ce:	test	r14, r14
0x39d1:	jne	0x3997


0x3950:	mov	rax, qword ptr [rsp + 0x18]
0x3955:	test	rax, rax
0x3958:	je	0x3a00


0x3a00:	mov	byte ptr [rsp + 0x17], 1
0x3a05:	jmp	0x3987


0x395e:	mov	rdi, qword ptr [rsp]
0x3962:	mov	rdx, r13
0x3965:	mov	rsi, rbp
0x3968:	imul	rdi, r13
0x396c:	add	rdi, rax
0x396f:	call	0x1b70


0x3974:	test	eax, eax
0x3976:	movzx	eax, byte ptr [rsp + 0x17]
0x397b:	mov	ecx, 1
0x3980:	cmovne	eax, ecx
0x3983:	mov	byte ptr [rsp + 0x17], al
0x3987:	add	rbx, 1
0x398b:	add	rbp, r13
0x398e:	mov	r14, qword ptr [r15 + rbx*8]
0x3992:	test	r14, r14
0x3995:	je	0x39d8


0xa4c7:	test	rax, rax
0xa4ca:	mov	rbp, rax
0xa4cd:	je	0xa4e8


0xa4e8:	call	0x19a0


0xa4cf:	mov	dword ptr [r12], ebx
0xa4d3:	add	rsp, 8
0xa4d7:	mov	rax, rbp
0xa4da:	pop	rbx
0xa4db:	pop	rbp
0xa4dc:	pop	r12
0xa4de:	pop	r13
0xa4e0:	ret	


0xa4ed:	mov	r13d, dword ptr [rax]
0xa4f0:	mov	r12, rax
0xa4f3:	mov	edi, ebx
0xa4f5:	call	0x1b50


0xa4fa:	mov	rax, rbp
0xa4fd:	mov	dword ptr [r12], r13d
0xa501:	add	rsp, 8
0xa505:	pop	rbx
0xa506:	pop	rbp
0xa507:	pop	r12
0xa509:	pop	r13
0xa50b:	ret	


0x2c48:	test	rax, rax
0x2c4b:	mov	r14, rax
0x2c4e:	mov	edx, dword ptr [rsp + 0x18]
0x2c52:	je	0x2eb0


0x2eb0:	mov	edi, edx
0x2eb2:	call	0x1b50


0x2c58:	call	0x19a0


0x2c5d:	mov	qword ptr [rsp + 0x18], rax
0x2c62:	mov	dword ptr [rax], 0
0x2c68:	nop	dword ptr [rax + rax]
0x2c70:	mov	rdi, r14
0x2c73:	call	0x1c10


0x2c78:	test	rax, rax
0x2c7b:	je	0x2ec8


0x2ec8:	mov	rax, qword ptr [rsp + 0x18]
0x2ecd:	mov	rdi, r14
0x2ed0:	mov	edx, dword ptr [rax]
0x2ed2:	mov	dword ptr [rsp + 0x18], edx
0x2ed6:	call	0x1b60


0x2c81:	cmp	byte ptr [rax + 0x13], 0x2e
0x2c85:	jne	0x2c9d


0x2c87:	xor	edx, edx
0x2c89:	cmp	byte ptr [rax + 0x14], 0x2e
0x2c8d:	sete	dl
0x2c90:	movzx	eax, byte ptr [rax + rdx + 0x14]
0x2c95:	test	al, al
0x2c97:	je	0x2c70


0x2c9d:	mov	rdi, r14
0x2ca0:	call	0x1b60


0x2c70:	mov	rdi, r14
0x2c73:	call	0x1c10


0x2c99:	cmp	al, 0x2f
0x2c9b:	je	0x2c70


0x2edb:	mov	edx, dword ptr [rsp + 0x18]
0x2edf:	test	edx, edx
0x2ee1:	jne	0x2ca5


0x2ee7:	mov	r14d, 1
0x2eed:	mov	eax, 4
0x2ef2:	jmp	0x2cad


0x2cad:	mov	dword ptr [r12], eax
0x2cb1:	cmp	qword ptr [rbx + 0x20], 0
0x2cb6:	jne	0x2de0


0x2eb7:	mov	eax, 3
0x2ebc:	jmp	0x2cad


0x6927:	mov	rdi, rbx
0x692a:	pop	rbx
0x692b:	jmp	0x1c30


0x3d57:	test	eax, eax
0x3d59:	mov	rdi, qword ptr [rip + 0x20b350]
0x3d60:	je	0x3cc8


0x3cc8:	call	0x68f0


0x3d66:	call	0x8e70


0x822c:	test	eax, eax
0x822e:	mov	dword ptr [rbx + 0x28], eax
0x8231:	jns	0x8240


0x8233:	or	dword ptr [rbx + 0x48], 4
0x8237:	nop	word ptr [rax + rax]
0x8240:	lea	rdi, [rbx + 0x60]
0x8244:	mov	esi, 0xffffffff
0x8249:	call	0xa340


0x8d5f:	test	eax, eax
0x8d61:	mov	ebp, eax
0x8d63:	js	0x8db9


0x8db9:	mov	qword ptr [rbx + 8], 0
0x8dc1:	xor	eax, eax
0x8dc3:	jmp	0x8d24


0x8d65:	mov	esi, r14d
0x8d68:	mov	rdi, rbx
0x8d6b:	call	0x75c0


0x8d70:	test	byte ptr [rbx + 0x49], 2
0x8d74:	mov	qword ptr [rbx + 8], rax
0x8d78:	jne	0x8da8


0x8d7a:	mov	edi, ebp
0x8d7c:	call	0x1c70


0x8da8:	mov	edx, 1
0x8dad:	mov	esi, ebp
0x8daf:	mov	rdi, rbx
0x8db2:	call	0x6fe0


0x8db7:	jmp	0x8d8c


0x8d8c:	mov	rax, qword ptr [rbx + 8]
0x8d90:	jmp	0x8d24


0x8d81:	test	eax, eax
0x8d83:	jne	0x8dc8


0x8d85:	mov	edi, ebp
0x8d87:	call	0x1b50


0x8dc8:	mov	ebx, dword ptr [r13]
0x8dcc:	mov	edi, ebp
0x8dce:	call	0x1b50


0x8dd3:	xor	eax, eax
0x8dd5:	mov	dword ptr [r13], ebx
0x8dd9:	jmp	0x8d24


0x8bbd:	test	eax, eax
0x8bbf:	mov	dword ptr [rbx + 0x44], eax
0x8bc2:	js	0x8c40


0x8c40:	call	0x19a0


0x8bc4:	or	word ptr [rbx + 0x72], 2
0x8bc9:	jmp	0x8b47


0x8c45:	mov	eax, dword ptr [rax]
0x8c47:	mov	edi, 7
0x8c4c:	mov	word ptr [rbx + 0x70], di
0x8c50:	mov	dword ptr [rbx + 0x40], eax
0x8c53:	jmp	0x8b47


0x8c0d:	test	eax, eax
0x8c0f:	mov	dword ptr [rbp + 0x44], eax
0x8c12:	js	0x8c22


0x8c22:	call	0x19a0


0x8c14:	or	word ptr [rbp + 0x72], 2
0x8c19:	movzx	eax, word ptr [rbp + 0x70]
0x8c1d:	jmp	0x882e


0x8c27:	mov	eax, dword ptr [rax]
0x8c29:	mov	r11d, 7
0x8c2f:	mov	word ptr [rbp + 0x70], r11w
0x8c34:	mov	dword ptr [rbp + 0x40], eax
0x8c37:	mov	qword ptr [r12], rbp
0x8c3b:	jmp	0x867a


0x7262:	test	eax, eax
0x7264:	mov	r15d, eax
0x7267:	js	0x741b


0x741b:	mov	ebx, 0xffffffff
0x7420:	jmp	0x72d5


0x726d:	mov	ebx, dword ptr [r13 + 0x48]
0x7271:	test	bl, 2
0x7274:	je	0x731a


0x6446:	mov	rax, qword ptr [rsp + 0x78]
0x644b:	xor	rax, qword ptr fs:[0x28]
0x6454:	jne	0x6460


0x6456:	add	rsp, 0xb8
0x645d:	pop	rbx
0x645e:	pop	rbp
0x645f:	ret	


0x6460:	call	0x1ab0


0x6370:	mov	rax, qword ptr [rsp + 0x58]
0x6375:	xor	rax, qword ptr fs:[0x28]
0x637e:	jne	0x6385


0x6380:	add	rsp, 0x68
0x6384:	ret	


0x6385:	call	0x1ab0


0x1e1c:	lea	rdi, [rip + 0x1e6d]
0x1e23:	call	0xa8f0


0x1e28:	xor	edi, edi
0x1e2a:	mov	byte ptr [rsp], 0
0x1e2e:	mov	dword ptr [rsp + 4], 4
0x1e36:	mov	byte ptr [rsp + 8], 0
0x1e3b:	mov	byte ptr [rsp + 0xa], 0
0x1e40:	mov	byte ptr [rsp + 9], 0
0x1e45:	mov	qword ptr [rsp + 0x10], 0
0x1e4e:	mov	byte ptr [rsp + 0x18], 0
0x1e53:	call	0x1a00


0x1a00:	jmp	qword ptr [rip + 0x20d3f2]




0x3ccd:	test	eax, eax
0x3ccf:	mov	rdi, qword ptr [rip + 0x20b3da]
0x3cd6:	je	0x3d66


0x3cdc:	call	0x8e70


0xa584:	test	eax, eax
0xa586:	je	0xa5c4


0xa588:	call	0x19a0


0xa58d:	mov	r12d, dword ptr [rax]
0xa590:	mov	rdi, rbx
0xa593:	mov	rbp, rax
0xa596:	call	0x1a40


0xa59b:	test	r12d, r12d
0xa59e:	jne	0xa5d0


0xa5a0:	pop	rbx
0xa5a1:	pop	rbp
0xa5a2:	pop	r12
0xa5a4:	ret	


0xa5d0:	mov	dword ptr [rbp], r12d
0xa5d4:	mov	eax, 0xffffffff
0xa5d9:	jmp	0xa5a0


0x8e8a:	and	ebx, 0x20
0x8e8d:	test	ebx, ebx
0x8e8f:	jne	0x8ea8


0x8e91:	test	eax, eax
0x8e93:	je	0x8e9f


0x8ea8:	test	eax, eax
0x8eaa:	jne	0x8ec8


0x8e9f:	pop	rbx
0x8ea0:	pop	rbp
0x8ea1:	pop	r12
0x8ea3:	ret	


0x8e95:	test	r12, r12
0x8e98:	mov	eax, 0xffffffff
0x8e9d:	je	0x8ed8


0x8eac:	call	0x19a0


0x8ec8:	pop	rbx
0x8ec9:	mov	eax, 0xffffffff
0x8ece:	pop	rbp
0x8ecf:	pop	r12
0x8ed1:	ret	


0x8ed8:	call	0x19a0


0x8edd:	cmp	dword ptr [rax], 9
0x8ee0:	pop	rbx
0x8ee1:	pop	rbp
0x8ee2:	pop	r12
0x8ee4:	setne	al
0x8ee7:	movzx	eax, al
0x8eea:	neg	eax
0x8eec:	ret	


0x8eb1:	mov	dword ptr [rax], 0
0x8eb7:	mov	eax, 0xffffffff
0x8ebc:	pop	rbx
0x8ebd:	pop	rbp
0x8ebe:	pop	r12
0x8ec0:	ret	


0x3cfb:	mov	rbx, qword ptr [rip + 0x20b3fe]
0x3d02:	mov	r12, rax
0x3d05:	call	0x19a0


0x3d0a:	mov	rbp, rax
0x3d0d:	test	rbx, rbx
0x3d10:	je	0x3d80


0x3d80:	mov	esi, dword ptr [rax]
0x3d82:	lea	rdx, [rip + 0x7b06]
0x3d89:	mov	rcx, r12
0x3d8c:	xor	edi, edi
0x3d8e:	xor	eax, eax
0x3d90:	call	0x1cd0


0x3d12:	mov	rdi, rbx
0x3d15:	call	0x5c40


0x3d95:	jmp	0x3d33


0x3d33:	call	0x3dc0


0x3d6b:	test	eax, eax
0x3d6d:	jne	0x3ce8


0x3d73:	pop	rbx
0x3d74:	pop	rbp
0x3d75:	pop	r12
0x3d77:	jmp	0x3dc0


0x3ce8:	lea	rsi, [rip + 0x7ba3]
0x3cef:	xor	edi, edi
0x3cf1:	mov	edx, 5
0x3cf6:	call	0x1a60


0x3cb4:	test	eax, eax
0x3cb6:	jne	0x3ce8


0x3cb8:	pop	rbx
0x3cb9:	pop	rbp
0x3cba:	pop	r12
0x3cbc:	jmp	0x3dc0


0x3dd2:	test	eax, eax
0x3dd4:	je	0x3dec


0x3dec:	mov	rdi, qword ptr [rip + 0x20b2ed]
0x3df3:	call	0x8e70


0x3dd6:	call	0x19a0


0x3ddb:	cmp	byte ptr [rip + 0x20b326], 0
0x3de2:	mov	rbx, rax
0x3de5:	je	0x3e03


0x3e03:	lea	rsi, [rip + 0x7aa2]
0x3e0a:	xor	edi, edi
0x3e0c:	mov	edx, 5
0x3e11:	call	0x1a60


0x3de7:	cmp	dword ptr [rax], 0x20
0x3dea:	jne	0x3e03


0x3e16:	mov	rdi, qword ptr [rip + 0x20b2f3]
0x3e1d:	mov	rbp, rax
0x3e20:	test	rdi, rdi
0x3e23:	je	0x3e4d


0x3e4d:	mov	esi, dword ptr [rbx]
0x3e4f:	lea	rdx, [rip + 0x7a39]
0x3e56:	mov	rcx, rax
0x3e59:	xor	edi, edi
0x3e5b:	xor	eax, eax
0x3e5d:	call	0x1cd0


0x3e25:	call	0x5c40


0x3e62:	jmp	0x3e42


0x3e42:	mov	edi, dword ptr [rip + 0x20b1d8]
0x3e48:	call	0x19c0


0x19c0:	jmp	qword ptr [rip + 0x20d412]




0x3df8:	test	eax, eax
0x3dfa:	jne	0x3e42


0x3dfc:	add	rsp, 8
0x3e00:	pop	rbx
0x3e01:	pop	rbp
0x3e02:	ret	


0x3d38:	mov	edi, dword ptr [rip + 0x20b2e2]
0x3d3e:	call	0x19c0


0x1e58:	test	eax, eax
0x1e5a:	mov	byte ptr [rsp + 0x1a], 0
0x1e5f:	mov	byte ptr [rsp + 0x1b], 0
0x1e64:	setne	byte ptr [rsp + 0x19]
0x1e69:	xor	r12d, r12d
0x1e6c:	nop	dword ptr [rax]
0x1e70:	lea	rcx, [rip + 0x20cb69]
0x1e77:	lea	rdx, [rip + 0x8bc5]
0x1e7e:	xor	r8d, r8d
0x1e81:	mov	rsi, rbx
0x1e84:	mov	edi, ebp
0x1e86:	call	0x1ac0


0x1ac0:	jmp	qword ptr [rip + 0x20d392]




0x1e8b:	cmp	eax, -1
0x1e8e:	je	0x20be


0x20be:	cmp	dword ptr [rip + 0x20cff4], ebp
0x20c4:	jge	0x2190


0x1e94:	cmp	eax, 0x69
0x1e97:	je	0x1f70


0x20ca:	cmp	byte ptr [rsp + 9], 0
0x20cf:	je	0x20da


0x2190:	cmp	byte ptr [rsp], 0
0x2194:	je	0x2308


0x1f70:	mov	dword ptr [rsp + 4], 3
0x1f78:	mov	byte ptr [rsp], 0
0x1f7c:	xor	r12d, r12d
0x1f7f:	jmp	0x1e70


0x1e9d:	jle	0x1ed0


0x20da:	movsxd	rdx, dword ptr [rip + 0x20cfd7]
0x20e1:	test	r12b, r12b
0x20e4:	lea	r13, [rbx + rdx*8]
0x20e8:	je	0x214a


0x20d1:	test	r14b, r14b
0x20d4:	jne	0x2294


0x2308:	lea	rsi, [rip + 0x873c]
0x230f:	xor	edi, edi
0x2311:	mov	edx, 5
0x2316:	call	0x1a60


0x219a:	xor	eax, eax
0x219c:	mov	rdx, qword ptr [rsp + 0xb8]
0x21a4:	xor	rdx, qword ptr fs:[0x28]
0x21ad:	jne	0x2303


0x1e70:	lea	rcx, [rip + 0x20cb69]
0x1e77:	lea	rdx, [rip + 0x8bc5]
0x1e7e:	xor	r8d, r8d
0x1e81:	mov	rsi, rbx
0x1e84:	mov	edi, ebp
0x1e86:	call	0x1ac0


0x1ed0:	cmp	eax, 0x49
0x1ed3:	je	0x1f88


0x1e9f:	cmp	eax, 0x81
0x1ea4:	je	0x2080


0x214a:	mov	rsi, rsp
0x214d:	mov	rdi, r13
0x2150:	call	0x3090


0x20ea:	sub	ebp, edx
0x20ec:	cmp	byte ptr [rsp + 9], 0
0x20f1:	movsxd	rbx, ebp
0x20f4:	jne	0x226a


0x2294:	lea	rdi, [rip + 0x20ce55]
0x229b:	call	0x5e60


0x21b3:	add	rsp, 0xc0
0x21ba:	pop	rbx
0x21bb:	pop	rbp
0x21bc:	pop	r12
0x21be:	pop	r13
0x21c0:	pop	r14
0x21c2:	ret	


0x2303:	call	0x1ab0


0x1f88:	mov	dword ptr [rsp + 4], 4
0x1f90:	mov	byte ptr [rsp], 0
0x1f94:	mov	r12d, 1
0x1f9a:	jmp	0x1e70


0x1ed9:	jle	0x1fa0


0x2080:	mov	byte ptr [rsp + 8], 1
0x2085:	jmp	0x1e70


0x1eaa:	jle	0x1f08


0x20fa:	cmp	rbx, 3
0x20fe:	jbe	0x214a


0x226a:	lea	rdx, [rip + 0x9177]
0x2271:	lea	rsi, [rip + 0x9198]
0x2278:	mov	r8d, 5
0x227e:	mov	rcx, rbx
0x2281:	xor	edi, edi
0x2283:	mov	rbp, qword ptr [rip + 0x20ce8e]
0x228a:	call	0x1d00


0x1fa0:	cmp	eax, 0xffffff7d
0x1fa5:	jne	0x22f1


0x1edf:	cmp	eax, 0x64
0x1ee2:	je	0x2090


0x1f08:	cmp	eax, 0x76
0x1f0b:	je	0x2000


0x1eac:	cmp	eax, 0x83
0x1eb1:	je	0x2040


0x2100:	lea	rdx, [rip + 0x8985]
0x2107:	lea	rsi, [rip + 0x8999]
0x210e:	mov	r8d, 5
0x2114:	mov	rcx, rbx
0x2117:	xor	edi, edi
0x2119:	mov	rbp, qword ptr [rip + 0x20cff8]
0x2120:	call	0x1d00


0x1d00:	jmp	qword ptr [rip + 0x20d272]


0x1fab:	lea	rax, [rip + 0x8a70]
0x1fb2:	sub	rsp, 8
0x1fb6:	mov	rdi, qword ptr [rip + 0x20d0eb]
0x1fbd:	push	0
0x1fbf:	mov	rcx, qword ptr [rip + 0x20d04a]
0x1fc6:	lea	r9, [rip + 0x8a3a]
0x1fcd:	push	rax
0x1fce:	lea	rax, [rip + 0x8a5a]
0x1fd5:	lea	r8, [rip + 0x8a3b]
0x1fdc:	lea	rdx, [rip + 0x89ba]
0x1fe3:	lea	rsi, [rip + 0x893a]
0x1fea:	push	rax
0x1feb:	xor	eax, eax
0x1fed:	call	0x63a0


0x22f1:	cmp	eax, 0xffffff7e
0x22f6:	jne	0x209f


0x2090:	mov	byte ptr [rsp + 0xa], 1
0x2095:	jmp	0x1e70


0x1ee8:	cmp	eax, 0x66
0x1eeb:	jne	0x20af


0x2000:	mov	byte ptr [rsp + 0x1a], 1
0x2005:	jmp	0x1e70


0x1f11:	cmp	eax, 0x80
0x1f16:	jne	0x209a


0x2040:	mov	r14, qword ptr [rip + 0x20d079]
0x2047:	test	r14, r14
0x204a:	je	0x2185


0x1eb7:	jl	0x2010




0x22fc:	xor	edi, edi
0x22fe:	call	0x24a0


0x209f:	mov	r12d, 1
0x20a5:	lea	r14, [rsp + 0x20]
0x20aa:	jmp	0x21d7


0x1ef1:	mov	dword ptr [rsp + 4], 5
0x1ef9:	mov	byte ptr [rsp], 1
0x1efd:	xor	r12d, r12d
0x1f00:	jmp	0x1e70


0x20af:	cmp	eax, 0x52
0x20b2:	jne	0x209f


0x1f1c:	mov	rsi, qword ptr [rip + 0x20d19d]
0x1f23:	test	rsi, rsi
0x1f26:	je	0x1f70


0x209a:	cmp	eax, 0x72
0x209d:	je	0x20b4


0x2185:	mov	r14d, 1
0x218b:	jmp	0x1e70


0x2050:	lea	rsi, [rip + 0x89ac]
0x2057:	mov	rdi, r14
0x205a:	call	0x1bb0


0x2010:	movsxd	rax, dword ptr [rip + 0x20d0a1]
0x2017:	mov	ecx, 0x13
0x201c:	mov	rdi, r13
0x201f:	mov	rsi, qword ptr [rbx + rax*8 - 8]
0x2024:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1ebd:	cmp	eax, 0x84
0x1ec2:	jne	0x209f


0x21d7:	cmp	ebp, r12d
0x21da:	jle	0x2260


0x20b4:	mov	byte ptr [rsp + 9], 1
0x20b9:	jmp	0x1e70


0x1f28:	mov	r9, qword ptr [rip + 0x20d0e9]
0x1f2f:	lea	rdx, [rip + 0x20ca6a]
0x1f36:	lea	rcx, [rip + 0x9513]
0x1f3d:	lea	rdi, [rip + 0x8a9e]
0x1f44:	mov	r8d, 4
0x1f4a:	call	0x3bc0


0x1bb0:	jmp	qword ptr [rip + 0x20d31a]


0x2024:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2026:	seta	al
0x2029:	sbb	al, 0
0x202b:	test	al, al
0x202d:	jne	0x2365


0x1ec8:	mov	byte ptr [rsp + 0x19], 1
0x1ecd:	jmp	0x1e70


0x2260:	mov	edi, 1
0x2265:	call	0x24a0


0x21e0:	mov	r13, qword ptr [rbx + r12*8]
0x21e4:	cmp	byte ptr [r13], 0x2d
0x21e9:	jne	0x21d3




0x2033:	xor	r14d, r14d
0x2036:	jmp	0x1e70


0x2365:	lea	rsi, [rip + 0x8fcc]
0x236c:	mov	edx, 5
0x2371:	xor	edi, edi
0x2373:	call	0x1a60


0x21eb:	cmp	byte ptr [r13 + 1], 0
0x21f0:	je	0x21d3


0x21d3:	add	r12, 1
0x21d7:	cmp	ebp, r12d
0x21da:	jle	0x2260


0x21f2:	mov	rdx, r14
0x21f5:	mov	rsi, r13
0x21f8:	mov	edi, 1
0x21fd:	call	0x1a90


0x2202:	test	eax, eax
0x2204:	jne	0x21d3


0x2206:	mov	rsi, r13
0x2209:	mov	edi, 4
0x220e:	call	0x5b70


0x1f4f:	lea	rdx, [rip + 0x94fa]
0x1f56:	mov	eax, dword ptr [rdx + rax*4]
0x1f59:	cmp	eax, 1
0x1f5c:	je	0x1f88


0x1f5e:	jb	0x21c3


0x21c3:	mov	dword ptr [rsp + 4], 5
0x21cb:	xor	r12d, r12d
0x21ce:	jmp	0x1e70


0x1f64:	cmp	eax, 2
0x1f67:	jne	0x1e70


0x1ff2:	add	rsp, 0x20
0x1ff6:	xor	edi, edi
0x1ff8:	call	0x1d40


0x22a0:	test	rax, rax
0x22a3:	mov	qword ptr [rsp + 0x10], rax
0x22a8:	jne	0x20da


0x22ae:	lea	rsi, [rip + 0x96c1]
0x22b5:	mov	edi, 4
0x22ba:	call	0x5b70


0x2155:	lea	edx, [rax - 2]
0x2158:	cmp	eax, 4
0x215b:	sete	al
0x215e:	cmp	edx, 2
0x2161:	movzx	eax, al
0x2164:	jbe	0x219c


0x219c:	mov	rdx, qword ptr [rsp + 0xb8]
0x21a4:	xor	rdx, qword ptr fs:[0x28]
0x21ad:	jne	0x2303


0x2166:	lea	rcx, [rip + 0x92d3]
0x216d:	lea	rsi, [rip + 0x88e7]
0x2174:	lea	rdi, [rip + 0x88fb]
0x217b:	mov	edx, 0x173
0x2180:	call	0x1b20


0x2378:	xor	esi, esi
0x237a:	mov	rdx, rax
0x237d:	mov	edi, 1
0x2382:	xor	eax, eax
0x2384:	call	0x1cd0


0x2389:	nop	dword ptr [rax]


0x231b:	xor	esi, esi
0x231d:	mov	rdx, rax
0x2320:	xor	edi, edi
0x2322:	xor	eax, eax
0x2324:	call	0x1cd0


0x2329:	jmp	0x2260


0x205f:	test	eax, eax
0x2061:	jne	0x232e


0x2067:	mov	byte ptr [rsp + 0x18], 1
0x206c:	mov	r14d, 1
0x2072:	jmp	0x1e70


0x232e:	mov	rsi, r14
0x2331:	mov	edi, 4
0x2336:	call	0x5b70


0x2125:	mov	rdi, qword ptr [rip + 0x20cfb4]
0x212c:	mov	rdx, rax
0x212f:	mov	r8, rbx
0x2132:	mov	rcx, rbp
0x2135:	mov	esi, 1
0x213a:	xor	eax, eax
0x213c:	call	0x1d60


0x2141:	call	0x6850


0x2146:	test	al, al
0x2148:	je	0x219a


0x228f:	jmp	0x2125


0x3e2a:	mov	esi, dword ptr [rbx]
0x3e2c:	lea	rdx, [rip + 0x7a72]
0x3e33:	mov	rcx, rax
0x3e36:	mov	r8, rbp
0x3e39:	xor	edi, edi
0x3e3b:	xor	eax, eax
0x3e3d:	call	0x1cd0


0x3d1a:	mov	esi, dword ptr [rbp]
0x3d1d:	lea	rdx, [rip + 0x7b81]
0x3d24:	mov	rcx, rax
0x3d27:	mov	r8, r12
0x3d2a:	xor	edi, edi
0x3d2c:	xor	eax, eax
0x3d2e:	call	0x1cd0


0x3b4e:	mov	rdi, qword ptr [rip + 0x20b58b]
0x3b55:	lea	rdx, [rip + 0x7d31]
0x3b5c:	mov	rcx, rax
0x3b5f:	mov	esi, 1
0x3b64:	xor	eax, eax
0x3b66:	call	0x1d60


0x3b6b:	mov	r15, qword ptr [r14 + rbx*8]
0x3b6f:	test	r15, r15
0x3b72:	jne	0x3b28


0x3aff:	mov	rdi, qword ptr [rip + 0x20b5da]
0x3b06:	lea	rdx, [rip + 0x7d78]
0x3b0d:	mov	rcx, rax
0x3b10:	mov	esi, 1
0x3b15:	xor	eax, eax
0x3b17:	add	rbp, r12
0x3b1a:	call	0x1d60


0x3b1f:	mov	r15, qword ptr [r14 + rbx*8]
0x3b23:	test	r15, r15
0x3b26:	je	0x3b78


0x6f44:	test	rax, rax
0x6f47:	je	0x6f58


0x6f58:	mov	rdi, r13
0x6f5b:	call	0x1da0


0x6f49:	cmp	r13, rax
0x6f4c:	jne	0x6f67


0x6f4e:	mov	rbx, qword ptr [rsp + 0x10]
0x6f53:	jmp	0x6ed4


0x6f67:	call	0x1990


0x6f60:	jmp	0x6f4e


0x749b:	cmp	rbp, rax
0x749e:	mov	r12, rax
0x74a1:	je	0x74c1


0x74a3:	mov	rdi, rbp
0x74a6:	call	0x1da0


0x74ab:	test	r12, r12
0x74ae:	je	0x74f8


0x74b0:	mov	rax, qword ptr [r12 + 0x10]
0x74b5:	mov	ecx, 2
0x74ba:	mov	word ptr [rbx + 0x70], cx
0x74be:	mov	qword ptr [rbx], rax
0x74c1:	pop	rbx
0x74c2:	mov	eax, 1
0x74c7:	pop	rbp
0x74c8:	pop	r12
0x74ca:	ret	


0x55ec:	add	rsp, 0x20
0x55f0:	mov	r11, qword ptr [rsp + 0x10]
0x55f5:	cmp	r11, rax
0x55f8:	ja	0x5661


0x55fa:	lea	rsi, [rax + 1]
0x55fe:	lea	rax, [rip + 0x209b1b]
0x5605:	cmp	r12, rax
0x5608:	mov	qword ptr [rbx], rsi
0x560b:	je	0x561f


0x5661:	mov	eax, dword ptr [rsp + 0x18]
0x5665:	mov	dword ptr [r13], eax
0x5669:	add	rsp, 0x28
0x566d:	mov	rax, r12
0x5670:	pop	rbx
0x5671:	pop	rbp
0x5672:	pop	r12
0x5674:	pop	r13
0x5676:	pop	r14
0x5678:	pop	r15
0x567a:	ret	


0x561f:	mov	rdi, rsi
0x5622:	mov	qword ptr [rsp + 0x10], rsi
0x5627:	call	0x6540


0x560d:	mov	rdi, r12
0x5610:	mov	qword ptr [rsp + 0x10], rsi
0x5615:	call	0x1da0


0x561a:	mov	rsi, qword ptr [rsp + 0x10]
0x561f:	mov	rdi, rsi
0x5622:	mov	qword ptr [rsp + 0x10], rsi
0x5627:	call	0x6540


0x562c:	sub	rsp, 8
0x5630:	mov	qword ptr [rbx + 8], rax
0x5634:	mov	r8d, dword ptr [rbp]
0x5638:	push	qword ptr [rbp + 0x30]
0x563b:	push	qword ptr [rbp + 0x28]
0x563e:	mov	rcx, r14
0x5641:	push	r15
0x5643:	mov	r9d, dword ptr [rsp + 0x3c]
0x5648:	mov	rdi, rax
0x564b:	mov	rdx, qword ptr [rsp + 0x28]
0x5650:	mov	rsi, qword ptr [rsp + 0x30]
0x5655:	mov	r12, rax
0x5658:	call	0x42c0


0x5d72:	mov	rdi, qword ptr [rsp + 0x38]
0x5d77:	xor	rdi, qword ptr fs:[0x28]
0x5d80:	jne	0x5d8c


0x5d82:	add	rsp, 0x48
0x5d86:	ret	


0x5d8c:	call	0x1ab0


0x5abf:	mov	rcx, qword ptr [rsp + 0x38]
0x5ac4:	xor	rcx, qword ptr fs:[0x28]
0x5acd:	jne	0x5ad9


0x5acf:	add	rsp, 0x48
0x5ad3:	ret	


0x5ad9:	call	0x1ab0


0x5b4b:	mov	rdx, qword ptr [rsp + 0x38]
0x5b50:	xor	rdx, qword ptr fs:[0x28]
0x5b59:	jne	0x5b65


0x5b5b:	add	rsp, 0x48
0x5b5f:	ret	


0x5b65:	call	0x1ab0


0x5cdf:	mov	rcx, qword ptr [rsp + 0x38]
0x5ce4:	xor	rcx, qword ptr fs:[0x28]
0x5ced:	jne	0x5cf9


0x5cef:	add	rsp, 0x48
0x5cf3:	ret	


0x5cf9:	call	0x1ab0


0x3887:	movzx	ebx, word ptr [r15 + 0x70]
0x388c:	lea	rsi, [rip + 0x7ee5]
0x3893:	mov	edx, 5
0x3898:	xor	edi, edi
0x389a:	mov	rbp, rax
0x389d:	call	0x1a60


0x38a2:	lea	r9, [rip + 0x7c2d]
0x38a9:	mov	rdx, rax
0x38ac:	mov	r8, rbp
0x38af:	mov	ecx, ebx
0x38b1:	xor	esi, esi
0x38b3:	xor	edi, edi
0x38b5:	xor	eax, eax
0x38b7:	call	0x1cd0


0x38bc:	call	0x1990


0x5c0e:	mov	rsi, qword ptr [rsp + 0x38]
0x5c13:	xor	rsi, qword ptr fs:[0x28]
0x5c1c:	jne	0x5c23


0x5c1e:	add	rsp, 0x48
0x5c22:	ret	


0x5c23:	call	0x1ab0


0x565d:	add	rsp, 0x20
0x5661:	mov	eax, dword ptr [rsp + 0x18]
0x5665:	mov	dword ptr [r13], eax
0x5669:	add	rsp, 0x28
0x566d:	mov	rax, r12
0x5670:	pop	rbx
0x5671:	pop	rbp
0x5672:	pop	r12
0x5674:	pop	r13
0x5676:	pop	r14
0x5678:	pop	r15
0x567a:	ret	


0x58ac:	lea	rsi, [rax + 1]
0x58b0:	mov	qword ptr [rsp + 0x48], rax
0x58b5:	add	rsp, 0x20
0x58b9:	mov	rdi, rsi
0x58bc:	mov	qword ptr [rsp + 0x18], rsi
0x58c1:	call	0x6540


0x58c6:	mov	qword ptr [rsp + 0x10], rax
0x58cb:	sub	rsp, 8
0x58cf:	push	qword ptr [rbx + 0x30]
0x58d2:	push	qword ptr [rbx + 0x28]
0x58d5:	mov	r10, qword ptr [rsp + 0x38]
0x58da:	mov	r9d, ebp
0x58dd:	mov	r8d, dword ptr [rbx]
0x58e0:	mov	rcx, r15
0x58e3:	mov	rdx, r14
0x58e6:	mov	rdi, rax
0x58e9:	push	r10
0x58eb:	mov	rsi, qword ptr [rsp + 0x38]
0x58f0:	call	0x42c0


0x58f5:	mov	eax, dword ptr [rsp + 0x2c]
0x58f9:	add	rsp, 0x20
0x58fd:	test	r12, r12
0x5900:	mov	dword ptr [r13], eax
0x5904:	je	0x590f


0x590f:	mov	rax, qword ptr [rsp + 0x10]
0x5914:	add	rsp, 0x38
0x5918:	pop	rbx
0x5919:	pop	rbp
0x591a:	pop	r12
0x591c:	pop	r13
0x591e:	pop	r14
0x5920:	pop	r15
0x5922:	ret	


0x5906:	mov	r11, qword ptr [rsp + 0x28]
0x590b:	mov	qword ptr [r12], r11
0x590f:	mov	rax, qword ptr [rsp + 0x10]
0x5914:	add	rsp, 0x38
0x5918:	pop	rbx
0x5919:	pop	rbp
0x591a:	pop	r12
0x591c:	pop	r13
0x591e:	pop	r14
0x5920:	pop	r15
0x5922:	ret	


0x5821:	mov	dword ptr [rbp], r12d
0x5825:	add	rsp, 0x38
0x5829:	pop	rbx
0x582a:	pop	rbp
0x582b:	pop	r12
0x582d:	pop	r13
0x582f:	pop	r14
0x5831:	pop	r15
0x5833:	ret	


0x3a53:	mov	rdx, r12
0x3a56:	mov	rbp, rax
0x3a59:	mov	esi, 8
0x3a5e:	xor	edi, edi
0x3a60:	call	0x5a50


0x3a65:	mov	r8, rbp
0x3a68:	mov	rdx, rbx
0x3a6b:	mov	rcx, rax
0x3a6e:	pop	rbx
0x3a6f:	pop	rbp
0x3a70:	pop	r12
0x3a72:	xor	esi, esi
0x3a74:	xor	edi, edi
0x3a76:	xor	eax, eax
0x3a78:	jmp	0x1cd0


0x3c13:	mov	rdx, r15
0x3c16:	mov	rsi, rbp
0x3c19:	mov	rdi, rbx
0x3c1c:	call	0x3aa0


0x3c21:	call	r13


0x233b:	lea	rsi, [rip + 0x902e]
0x2342:	mov	rbx, rax
0x2345:	mov	edx, 5
0x234a:	xor	edi, edi
0x234c:	call	0x1a60


0x2351:	mov	rcx, rbx
0x2354:	mov	rdx, rax
0x2357:	xor	esi, esi
0x2359:	mov	edi, 1
0x235e:	xor	eax, eax
0x2360:	call	0x1cd0


0x22bf:	lea	rsi, [rip + 0x9102]
0x22c6:	mov	edx, 5
0x22cb:	xor	edi, edi
0x22cd:	mov	rbp, rax
0x22d0:	call	0x1a60


0x22d5:	mov	rbx, rax
0x22d8:	call	0x19a0


0x22dd:	mov	esi, dword ptr [rax]
0x22df:	mov	rcx, rbp
0x22e2:	mov	rdx, rbx
0x22e5:	mov	edi, 1
0x22ea:	xor	eax, eax
0x22ec:	call	0x1cd0


0x2213:	mov	rdx, r13
0x2216:	mov	esi, 3
0x221b:	mov	edi, 1
0x2220:	mov	r12, rax
0x2223:	call	0x5a50


0x2228:	lea	rsi, [rip + 0x9171]
0x222f:	mov	rbx, qword ptr [rbx]
0x2232:	mov	edx, 5
0x2237:	xor	edi, edi
0x2239:	mov	rbp, rax
0x223c:	call	0x1a60


0x2241:	mov	rdi, qword ptr [rip + 0x20ce98]
0x2248:	mov	rdx, rax
0x224b:	mov	r9, r12
0x224e:	mov	r8, rbp
0x2251:	mov	rcx, rbx
0x2254:	mov	esi, 1
0x2259:	xor	eax, eax
0x225b:	call	0x1d60


0x2f16:	mov	rbp, rax
0x2f19:	lea	rsi, [rip + 0x856a]
0x2f20:	mov	edx, 5
0x2f25:	xor	edi, edi
0x2f27:	call	0x1a60


0x2f2c:	mov	rcx, rbp
0x2f2f:	mov	rdx, rax
0x2f32:	mov	esi, ebx
0x2f34:	xor	eax, eax
0x2f36:	xor	edi, edi
0x2f38:	call	0x1cd0


0x2f3d:	mov	eax, 4
0x2f42:	jmp	0x2cf7


0x29c9:	lea	rsi, [rip + 0x8aba]
0x29d0:	xor	edi, edi
0x29d2:	mov	edx, 5
0x29d7:	mov	r12, rax
0x29da:	call	0x1a60


0x29df:	mov	esi, dword ptr [rbp]
0x29e2:	mov	rdx, rax
0x29e5:	xor	edi, edi
0x29e7:	xor	eax, eax
0x29e9:	mov	rcx, r12
0x29ec:	call	0x1cd0


0x29f1:	mov	rax, qword ptr [rbx + 8]
0x29f5:	cmp	qword ptr [rax + 0x58], 0
0x29fa:	jns	0x2a13


0x29fc:	jmp	0x2a1a


0x2a13:	cmp	qword ptr [rax + 0x20], 0
0x2a18:	je	0x2a00


0x2a1a:	mov	eax, 4
0x2a1f:	jmp	0x2945


0x2a00:	mov	qword ptr [rax + 0x20], 1
0x2a08:	mov	rax, qword ptr [rax + 8]
0x2a0c:	cmp	qword ptr [rax + 0x58], 0
0x2a11:	js	0x2a1a


0x2a36:	test	bpl, bpl
0x2a39:	mov	rbx, rax
0x2a3c:	mov	edx, 5
0x2a41:	je	0x2b08


0x2b08:	lea	rsi, [rip + 0x896f]
0x2b0f:	xor	edi, edi
0x2b11:	call	0x1a60


0x2a47:	lea	rsi, [rip + 0x8a1a]
0x2a4e:	xor	edi, edi
0x2a50:	call	0x1a60


0x2a55:	mov	rsi, rax
0x2a58:	mov	rdx, rbx
0x2a5b:	mov	edi, 1
0x2a60:	xor	eax, eax
0x2a62:	call	0x1ca0


0x2a67:	mov	eax, 2
0x2a6c:	jmp	0x2945


0x2b16:	jmp	0x2a55


0x2d6a:	mov	rbp, rax
0x2d6d:	mov	edi, dword ptr [rsp + 0x10]
0x2d71:	mov	rdx, rbx
0x2d74:	mov	rsi, r15
0x2d77:	call	0x2b40


0x2d7c:	test	eax, eax
0x2d7e:	jne	0x3030


0x2d84:	mov	rdi, rbx
0x2d87:	call	0x3f20


0x3030:	lea	rsi, [rip + 0x8453]
0x3037:	mov	edx, 5
0x303c:	xor	edi, edi
0x303e:	call	0x1a60


0x3043:	mov	rbx, rax
0x3046:	call	0x19a0


0x304b:	mov	esi, dword ptr [rax]
0x304d:	mov	rcx, rbp
0x3050:	xor	eax, eax
0x3052:	mov	rdx, rbx
0x3055:	xor	edi, edi
0x3057:	call	0x1cd0


0x305c:	mov	eax, 4
0x3061:	jmp	0x2cf7


0x2d8c:	test	r12d, r12d
0x2d8f:	mov	r13, rax
0x2d92:	mov	rbx, qword ptr [rip + 0x20c37f]
0x2d99:	mov	edx, 5
0x2d9e:	je	0x3018


0x3018:	lea	rsi, [rip + 0x847c]
0x301f:	xor	edi, edi
0x3021:	call	0x1a60


0x2da4:	lea	rsi, [rip + 0x87b5]
0x2dab:	xor	edi, edi
0x2dad:	call	0x1a60


0x2db2:	mov	rdi, qword ptr [rip + 0x20c327]
0x2db9:	mov	rdx, rax
0x2dbc:	mov	r9, rbp
0x2dbf:	mov	r8, r13
0x2dc2:	mov	rcx, rbx
0x2dc5:	mov	esi, 1
0x2dca:	xor	eax, eax
0x2dcc:	call	0x1d60


0x2dd1:	call	0x6850


0x2dd6:	test	al, al
0x2dd8:	jne	0x2cf2


0x3026:	jmp	0x2db2


0x2f70:	mov	rbp, rax
0x2f73:	jmp	0x2f19


0x2f19:	lea	rsi, [rip + 0x856a]
0x2f20:	mov	edx, 5
0x2f25:	xor	edi, edi
0x2f27:	call	0x1a60


0x2e4e:	cmp	dword ptr [rsp + 0x14], 2
0x2e53:	mov	rbp, rax
0x2e56:	jne	0x2f8a


0x2e5c:	test	r14b, r14b
0x2e5f:	jne	0x2f8a


0x2f8a:	lea	rbx, [rsp + 0x20]
0x2f8f:	jmp	0x2d6d


0x2e65:	test	r12d, r12d
0x2e68:	mov	rbx, qword ptr [rip + 0x20c2a9]
0x2e6f:	mov	edx, 5
0x2e74:	je	0x3070


0x2d6d:	mov	edi, dword ptr [rsp + 0x10]
0x2d71:	mov	rdx, rbx
0x2d74:	mov	rsi, r15
0x2d77:	call	0x2b40


0x3070:	lea	rsi, [rip + 0x84c9]
0x3077:	xor	edi, edi
0x3079:	call	0x1a60


0x2e7a:	lea	rsi, [rip + 0x868f]
0x2e81:	xor	edi, edi
0x2e83:	call	0x1a60


0x2e88:	mov	rdi, qword ptr [rip + 0x20c251]
0x2e8f:	mov	rdx, rax
0x2e92:	mov	r8, rbp
0x2e95:	mov	rcx, rbx
0x2e98:	mov	esi, 1
0x2e9d:	xor	eax, eax
0x2e9f:	call	0x1d60


0x2ea4:	jmp	0x2dd1


0x307e:	jmp	0x2e88


0x2f87:	mov	rbp, rax
0x2f8a:	lea	rbx, [rsp + 0x20]
0x2f8f:	jmp	0x2d6d


0x6e8c:	test	rax, rax
0x6e8f:	je	0x6ecd


0x6e91:	mov	rbx, qword ptr [rax + 8]
0x6e95:	jmp	0x6ed4


0x757f:	test	rax, rax
0x7582:	je	0x75b3


0x7584:	mov	rdi, rax
0x7587:	call	0x1da0


0x758c:	jmp	0x7545


0xa536:	mov	r12d, eax
0xa539:	call	0x19a0


0xa53e:	mov	r13d, dword ptr [rax]
0xa541:	mov	rbp, rax
0xa544:	mov	edi, ebx
0xa546:	call	0x1b50


0xa54b:	mov	ebx, r12d
0xa54e:	mov	dword ptr [rbp], r13d
0xa552:	add	rsp, 8
0xa556:	mov	eax, ebx
0xa558:	pop	rbx
0xa559:	pop	rbp
0xa55a:	pop	r12
0xa55c:	pop	r13
0xa55e:	ret	


0x3c24:	mov	rax, -1
0x3c2b:	jmp	0x3bf6


0xa8bd:	add	rbx, 1
0xa8c1:	cmp	rbp, rbx
0xa8c4:	jne	0xa8b0


0xa8b0:	mov	rdx, r15
0xa8b3:	mov	rsi, r14
0xa8b6:	mov	edi, r13d
0xa8b9:	call	qword ptr [r12 + rbx*8]


0x9b68:	mov	rbx, qword ptr [rbx + 8]
0x9b6c:	test	rbx, rbx
0x9b6f:	jne	0x9b60


0x9b71:	mov	rax, qword ptr [r12 + 8]
0x9b76:	add	rbp, 0x10
0x9b7a:	cmp	rax, rbp
0x9b7d:	ja	0x9b48


0x9b60:	mov	rdi, qword ptr [rbx]
0x9b63:	call	qword ptr [r12 + 0x40]


0x9ac2:	mov	rax, qword ptr [rbp + 0x40]
0x9ac6:	mov	rdx, qword ptr [rbx + 8]
0x9aca:	mov	rcx, qword ptr [rbp + 0x48]
0x9ace:	mov	qword ptr [rbx], 0
0x9ad5:	test	rdx, rdx
0x9ad8:	mov	qword ptr [rbx + 8], rcx
0x9adc:	mov	qword ptr [rbp + 0x48], rbx
0x9ae0:	mov	rbx, rdx
0x9ae3:	jne	0x9ab8


0x9839:	test	al, al
0x983b:	je	0x9854


0x983d:	mov	rbx, qword ptr [rbx + 8]
0x9841:	add	rbp, 1
0x9845:	test	rbx, rbx
0x9848:	jne	0x9830


0x9830:	mov	rdi, qword ptr [rbx]
0x9833:	mov	rsi, r13
0x9836:	call	r12


0x912e:	cmp	qword ptr [rbx + 0x10], rax
0x9132:	jbe	0x913d


0x913d:	call	0x1990


0x9134:	shl	rax, 4
0x9138:	add	rax, qword ptr [rbx]
0x913b:	pop	rbx
0x913c:	ret	


0x93a4:	cmp	qword ptr [rax], 0
0x93a8:	mov	rbx, rax
0x93ab:	je	0x9400


0x9400:	mov	qword ptr [rax], r15
0x9403:	add	qword ptr [rbp + 0x18], 1
0x9408:	jmp	0x93cd


0x93ad:	mov	rax, qword ptr [rbp + 0x48]
0x93b1:	test	rax, rax
0x93b4:	je	0x9410


0x93cd:	mov	qword ptr [r12], 0
0x93d5:	sub	qword ptr [r13 + 0x18], 1
0x93da:	add	r12, 0x10
0x93de:	cmp	qword ptr [r13 + 8], r12
0x93e2:	ja	0x9318


0x9410:	mov	edi, 0x10
0x9415:	call	0x1c20


0x93b6:	mov	rdx, qword ptr [rax + 8]
0x93ba:	mov	qword ptr [rbp + 0x48], rdx
0x93be:	mov	rdx, qword ptr [rbx + 8]
0x93c2:	mov	qword ptr [rax], r15
0x93c5:	mov	qword ptr [rax + 8], rdx
0x93c9:	mov	qword ptr [rbx + 8], rax
0x93cd:	mov	qword ptr [r12], 0
0x93d5:	sub	qword ptr [r13 + 0x18], 1
0x93da:	add	r12, 0x10
0x93de:	cmp	qword ptr [r13 + 8], r12
0x93e2:	ja	0x9318


0x941a:	test	rax, rax
0x941d:	jne	0x93be


0x941f:	add	rsp, 8
0x9423:	xor	eax, eax
0x9425:	pop	rbx
0x9426:	pop	rbp
0x9427:	pop	r12
0x9429:	pop	r13
0x942b:	pop	r14
0x942d:	pop	r15
0x942f:	ret	


0x93be:	mov	rdx, qword ptr [rbx + 8]
0x93c2:	mov	qword ptr [rax], r15
0x93c5:	mov	qword ptr [rax + 8], rdx
0x93c9:	mov	qword ptr [rbx + 8], rax
0x93cd:	mov	qword ptr [r12], 0
0x93d5:	sub	qword ptr [r13 + 0x18], 1
0x93da:	add	r12, 0x10
0x93de:	cmp	qword ptr [r13 + 8], r12
0x93e2:	ja	0x9318


0x935a:	cmp	qword ptr [rax], 0
0x935e:	mov	rdx, qword ptr [rbx + 8]
0x9362:	jne	0x9338


0x9364:	mov	qword ptr [rax], r15
0x9367:	add	qword ptr [rbp + 0x18], 1
0x936c:	test	rdx, rdx
0x936f:	mov	qword ptr [rbx], 0
0x9376:	mov	rax, qword ptr [rbp + 0x48]
0x937a:	mov	qword ptr [rbx + 8], rax
0x937e:	mov	qword ptr [rbp + 0x48], rbx
0x9382:	mov	rbx, rdx
0x9385:	jne	0x934c


0x9338:	mov	rcx, qword ptr [rax + 8]
0x933c:	test	rdx, rdx
0x933f:	mov	qword ptr [rbx + 8], rcx
0x9343:	mov	qword ptr [rax + 8], rbx
0x9347:	mov	rbx, rdx
0x934a:	je	0x9387


0x9387:	mov	r15, qword ptr [r12]
0x938b:	test	r14b, r14b
0x938e:	mov	qword ptr [r12 + 8], 0
0x9397:	jne	0x93da


0x9169:	mov	qword ptr [r14], rax
0x916c:	mov	rsi, qword ptr [rax]
0x916f:	test	rsi, rsi
0x9172:	je	0x9260


0x9260:	xor	esi, esi
0x9262:	pop	rbx
0x9263:	mov	rax, rsi
0x9266:	pop	rbp
0x9267:	pop	r12
0x9269:	pop	r13
0x926b:	pop	r14
0x926d:	ret	


0x9178:	cmp	rsi, rbp
0x917b:	mov	rbx, rax
0x917e:	je	0x9213


0x9213:	test	r13b, r13b
0x9216:	je	0x91fe


0x9184:	mov	rdi, rbp
0x9187:	call	qword ptr [r12 + 0x38]


0x91fe:	pop	rbx
0x91ff:	mov	rax, rsi
0x9202:	pop	rbp
0x9203:	pop	r12
0x9205:	pop	r13
0x9207:	pop	r14
0x9209:	ret	


0x9218:	mov	rax, qword ptr [rbx + 8]
0x921c:	test	rax, rax
0x921f:	je	0x9250


0x9250:	mov	qword ptr [rbx], 0
0x9257:	jmp	0x91fe


0x9221:	movdqu	xmm0, xmmword ptr [rax]
0x9225:	movups	xmmword ptr [rbx], xmm0
0x9228:	mov	qword ptr [rax], 0
0x922f:	mov	rdx, qword ptr [r12 + 0x48]
0x9234:	mov	qword ptr [rax + 8], rdx
0x9238:	mov	qword ptr [r12 + 0x48], rax
0x923d:	mov	rax, rsi
0x9240:	pop	rbx
0x9241:	pop	rbp
0x9242:	pop	r12
0x9244:	pop	r13
0x9246:	pop	r14
0x9248:	ret	


0x966f:	mov	rsi, qword ptr [rax]
0x9672:	test	rsi, rsi
0x9675:	je	0x969d


0x969d:	xor	esi, esi
0x969f:	pop	rbx
0x96a0:	mov	rax, rsi
0x96a3:	pop	rbp
0x96a4:	pop	r12
0x96a6:	ret	


0x9677:	mov	rbx, rax
0x967a:	jmp	0x9683


0x9683:	cmp	rsi, rbp
0x9686:	je	0x969f


0x969f:	pop	rbx
0x96a0:	mov	rax, rsi
0x96a3:	pop	rbp
0x96a4:	pop	r12
0x96a6:	ret	


0x9688:	mov	rdi, rbp
0x968b:	call	qword ptr [r12 + 0x38]


0x9721:	mov	rdx, rax
0x9724:	mov	rcx, rax
0x9727:	mov	rax, qword ptr [rdx]
0x972a:	mov	rdx, qword ptr [rdx + 8]
0x972e:	cmp	rax, rbx
0x9731:	je	0x9749


0x9749:	test	rdx, rdx
0x974c:	jne	0x9778


0x974e:	mov	rdx, qword ptr [rbp + 8]
0x9752:	jmp	0x9760


0x9778:	mov	rax, qword ptr [rdx]
0x977b:	add	rsp, 8
0x977f:	pop	rbx
0x9780:	pop	rbp
0x9781:	ret	


0x973d:	mov	rax, qword ptr [rdx]
0x9740:	mov	rdx, qword ptr [rdx + 8]
0x9744:	cmp	rax, rbx
0x9747:	jne	0x9738


0x9760:	add	rcx, 0x10
0x9764:	cmp	rdx, rcx
0x9767:	ja	0x9758


0x9738:	test	rdx, rdx
0x973b:	je	0x974e


0x9769:	xor	eax, eax
0x976b:	add	rsp, 8
0x976f:	pop	rbx
0x9770:	pop	rbp
0x9771:	ret	


0x9758:	mov	rax, qword ptr [rcx]
0x975b:	test	rax, rax
0x975e:	jne	0x976b


0x976b:	add	rsp, 8
0x976f:	pop	rbx
0x9770:	pop	rbp
0x9771:	ret	


0x9e79:	test	rax, rax
0x9e7c:	mov	rdx, rax
0x9e7f:	je	0x9eb0


0x9eb0:	mov	rax, qword ptr [rbx + 0x18]
0x9eb4:	test	rax, rax
0x9eb7:	js	0x9f30


0x9e81:	xor	eax, eax
0x9e83:	test	r13, r13
0x9e86:	je	0x9e8c


0x9f30:	mov	rdx, rax
0x9f33:	pxor	xmm1, xmm1
0x9f37:	and	eax, 1
0x9f3a:	shr	rdx, 1
0x9f3d:	or	rdx, rax
0x9f40:	mov	rax, qword ptr [rbx + 0x10]
0x9f44:	cvtsi2ss	xmm1, rdx
0x9f49:	mov	rdx, qword ptr [rbx + 0x28]
0x9f4d:	test	rax, rax
0x9f50:	addss	xmm1, xmm1
0x9f54:	jns	0x9ed3


0x9eb9:	pxor	xmm1, xmm1
0x9ebd:	mov	rdx, qword ptr [rbx + 0x28]
0x9ec1:	cvtsi2ss	xmm1, rax
0x9ec6:	mov	rax, qword ptr [rbx + 0x10]
0x9eca:	test	rax, rax
0x9ecd:	js	0x9f5a


0x9e8c:	mov	rcx, qword ptr [rsp + 8]
0x9e91:	xor	rcx, qword ptr fs:[0x28]
0x9e9a:	jne	0xa0bf


0x9e88:	mov	qword ptr [r13], rdx
0x9e8c:	mov	rcx, qword ptr [rsp + 8]
0x9e91:	xor	rcx, qword ptr fs:[0x28]
0x9e9a:	jne	0xa0bf


0x9f5a:	mov	rcx, rax
0x9f5d:	pxor	xmm0, xmm0
0x9f61:	shr	rcx, 1
0x9f64:	and	eax, 1
0x9f67:	or	rcx, rax
0x9f6a:	cvtsi2ss	xmm0, rcx
0x9f6f:	addss	xmm0, xmm0
0x9f73:	jmp	0x9edc


0x9ed3:	pxor	xmm0, xmm0
0x9ed7:	cvtsi2ss	xmm0, rax
0x9edc:	mulss	xmm0, dword ptr [rdx + 8]
0x9ee1:	ucomiss	xmm1, xmm0
0x9ee4:	ja	0x9f80


0x9ea0:	add	rsp, 0x18
0x9ea4:	pop	rbx
0x9ea5:	pop	rbp
0x9ea6:	pop	r12
0x9ea8:	pop	r13
0x9eaa:	ret	


0xa0bf:	call	0x1ab0


0x9edc:	mulss	xmm0, dword ptr [rdx + 8]
0x9ee1:	ucomiss	xmm1, xmm0
0x9ee4:	ja	0x9f80


0x9eea:	mov	r12, qword ptr [rsp]
0x9eee:	cmp	qword ptr [r12], 0
0x9ef3:	je	0xa028


0x9f80:	lea	rdi, [rbx + 0x28]
0x9f84:	call	0x9270


0xa028:	mov	qword ptr [r12], rbp
0xa02c:	mov	eax, 1
0xa031:	add	qword ptr [rbx + 0x20], 1
0xa036:	add	qword ptr [rbx + 0x18], 1
0xa03b:	jmp	0x9e8c


0x9ef9:	mov	rax, qword ptr [rbx + 0x48]
0x9efd:	test	rax, rax
0x9f00:	je	0xa040


0xa040:	mov	edi, 0x10
0xa045:	call	0x1c20


0x9f06:	mov	rdx, qword ptr [rax + 8]
0x9f0a:	mov	qword ptr [rbx + 0x48], rdx
0x9f0e:	mov	rdx, qword ptr [r12 + 8]
0x9f13:	mov	qword ptr [rax], rbp
0x9f16:	mov	qword ptr [rax + 8], rdx
0x9f1a:	mov	qword ptr [r12 + 8], rax
0x9f1f:	mov	eax, 1
0x9f24:	add	qword ptr [rbx + 0x20], 1
0x9f29:	jmp	0x9e8c


0xa04a:	test	rax, rax
0xa04d:	jne	0x9f0e


0xa053:	mov	eax, 0xffffffff
0xa058:	jmp	0x9e8c


0x9f0e:	mov	rdx, qword ptr [r12 + 8]
0x9f13:	mov	qword ptr [rax], rbp
0x9f16:	mov	qword ptr [rax + 8], rdx
0x9f1a:	mov	qword ptr [r12 + 8], rax
0x9f1f:	mov	eax, 1
0x9f24:	add	qword ptr [rbx + 0x20], 1
0x9f29:	jmp	0x9e8c


0x9f89:	mov	rax, qword ptr [rbx + 0x10]
0x9f8d:	mov	rdx, qword ptr [rbx + 0x28]
0x9f91:	test	rax, rax
0x9f94:	movss	xmm2, dword ptr [rdx + 8]
0x9f99:	js	0xa060


0xa060:	mov	rcx, rax
0xa063:	pxor	xmm0, xmm0
0xa067:	shr	rcx, 1
0xa06a:	and	eax, 1
0xa06d:	or	rcx, rax
0xa070:	cvtsi2ss	xmm0, rcx
0xa075:	addss	xmm0, xmm0
0xa079:	jmp	0x9fa8


0x9f9f:	pxor	xmm0, xmm0
0x9fa3:	cvtsi2ss	xmm0, rax
0x9fa8:	mov	rax, qword ptr [rbx + 0x18]
0x9fac:	test	rax, rax
0x9faf:	js	0xa080


0x9fa8:	mov	rax, qword ptr [rbx + 0x18]
0x9fac:	test	rax, rax
0x9faf:	js	0xa080


0xa080:	mov	rcx, rax
0xa083:	pxor	xmm1, xmm1
0xa087:	shr	rcx, 1
0xa08a:	and	eax, 1
0xa08d:	or	rcx, rax
0xa090:	cvtsi2ss	xmm1, rcx
0xa095:	addss	xmm1, xmm1
0xa099:	jmp	0x9fbe


0x9fb5:	pxor	xmm1, xmm1
0x9fb9:	cvtsi2ss	xmm1, rax
0x9fbe:	movaps	xmm3, xmm2
0x9fc1:	mulss	xmm3, xmm0
0x9fc5:	ucomiss	xmm1, xmm3
0x9fc8:	jbe	0x9eea


0x9fbe:	movaps	xmm3, xmm2
0x9fc1:	mulss	xmm3, xmm0
0x9fc5:	ucomiss	xmm1, xmm3
0x9fc8:	jbe	0x9eea


0x9fce:	cmp	byte ptr [rdx + 0x10], 0
0x9fd2:	mulss	xmm0, dword ptr [rdx + 0xc]
0x9fd7:	jne	0x9fdd


0x9fd9:	mulss	xmm0, xmm2
0x9fdd:	ucomiss	xmm0, dword ptr [rip + 0x2328]
0x9fe4:	jae	0xa053


0x9fdd:	ucomiss	xmm0, dword ptr [rip + 0x2328]
0x9fe4:	jae	0xa053


0x9fe6:	ucomiss	xmm0, dword ptr [rip + 0x2323]
0x9fed:	jae	0xa0a0


0x9ff3:	cvttss2si	rsi, xmm0
0x9ff8:	mov	rdi, rbx
0x9ffb:	call	0x9c00


0xa0a0:	subss	xmm0, dword ptr [rip + 0x2268]
0xa0a8:	movabs	rax, 0x8000000000000000
0xa0b2:	cvttss2si	rsi, xmm0
0xa0b7:	xor	rsi, rax
0xa0ba:	jmp	0x9ff8


0x9ff8:	mov	rdi, rbx
0x9ffb:	call	0x9c00


0xa000:	test	al, al
0xa002:	je	0xa053


0xa004:	xor	ecx, ecx
0xa006:	mov	rdx, r12
0xa009:	mov	rsi, rbp
0xa00c:	mov	rdi, rbx
0xa00f:	call	0x9150


0xa0f0:	cmp	eax, -1
0xa0f3:	je	0xa120


0xa120:	xor	ebx, ebx
0xa122:	jmp	0xa0fd


0xa0f5:	test	eax, eax
0xa0f7:	jne	0xa0fd


0xa0fd:	mov	rcx, qword ptr [rsp + 8]
0xa102:	xor	rcx, qword ptr fs:[0x28]
0xa10b:	mov	rax, rbx
0xa10e:	jne	0xa124


0xa0f9:	mov	rbx, qword ptr [rsp]
0xa0fd:	mov	rcx, qword ptr [rsp + 8]
0xa102:	xor	rcx, qword ptr fs:[0x28]
0xa10b:	mov	rax, rbx
0xa10e:	jne	0xa124


0xa110:	add	rsp, 0x10
0xa114:	pop	rbx
0xa115:	ret	


0xa124:	call	0x1ab0


0xa014:	test	rax, rax
0xa017:	je	0x9eea


0xa158:	test	rax, rax
0xa15b:	mov	rbp, rax
0xa15e:	je	0xa16f


0xa16f:	mov	rcx, qword ptr [rsp + 8]
0xa174:	xor	rcx, qword ptr fs:[0x28]
0xa17d:	mov	rax, rbp
0xa180:	jne	0xa32e


0xa160:	mov	rax, qword ptr [rsp]
0xa164:	sub	qword ptr [rbx + 0x20], 1
0xa169:	cmp	qword ptr [rax], 0
0xa16d:	je	0xa190


0xa186:	add	rsp, 0x10
0xa18a:	pop	rbx
0xa18b:	pop	rbp
0xa18c:	pop	r12
0xa18e:	ret	


0xa32e:	call	0x1ab0


0xa190:	mov	rax, qword ptr [rbx + 0x18]
0xa194:	sub	rax, 1
0xa198:	test	rax, rax
0xa19b:	mov	qword ptr [rbx + 0x18], rax
0xa19f:	js	0xa2a0


0xa2a0:	mov	rdx, rax
0xa2a3:	pxor	xmm0, xmm0
0xa2a7:	shr	rdx, 1
0xa2aa:	and	eax, 1
0xa2ad:	or	rdx, rax
0xa2b0:	cvtsi2ss	xmm0, rdx
0xa2b5:	addss	xmm0, xmm0
0xa2b9:	jmp	0xa1ae


0xa1a5:	pxor	xmm0, xmm0
0xa1a9:	cvtsi2ss	xmm0, rax
0xa1ae:	mov	rax, qword ptr [rbx + 0x10]
0xa1b2:	mov	rdx, qword ptr [rbx + 0x28]
0xa1b6:	test	rax, rax
0xa1b9:	js	0xa280


0xa1ae:	mov	rax, qword ptr [rbx + 0x10]
0xa1b2:	mov	rdx, qword ptr [rbx + 0x28]
0xa1b6:	test	rax, rax
0xa1b9:	js	0xa280


0xa280:	mov	rcx, rax
0xa283:	pxor	xmm1, xmm1
0xa287:	shr	rcx, 1
0xa28a:	and	eax, 1
0xa28d:	or	rcx, rax
0xa290:	cvtsi2ss	xmm1, rcx
0xa295:	addss	xmm1, xmm1
0xa299:	jmp	0xa1c8


0xa1bf:	pxor	xmm1, xmm1
0xa1c3:	cvtsi2ss	xmm1, rax
0xa1c8:	mulss	xmm1, dword ptr [rdx]
0xa1cc:	ucomiss	xmm1, xmm0
0xa1cf:	jbe	0xa16f


0xa1c8:	mulss	xmm1, dword ptr [rdx]
0xa1cc:	ucomiss	xmm1, xmm0
0xa1cf:	jbe	0xa16f


0xa1d1:	lea	rdi, [rbx + 0x28]
0xa1d5:	call	0x9270


0xa1da:	mov	rax, qword ptr [rbx + 0x10]
0xa1de:	mov	rdx, qword ptr [rbx + 0x28]
0xa1e2:	test	rax, rax
0xa1e5:	js	0xa310


0xa310:	mov	rcx, rax
0xa313:	pxor	xmm0, xmm0
0xa317:	shr	rcx, 1
0xa31a:	and	eax, 1
0xa31d:	or	rcx, rax
0xa320:	cvtsi2ss	xmm0, rcx
0xa325:	addss	xmm0, xmm0
0xa329:	jmp	0xa1f4


0xa1eb:	pxor	xmm0, xmm0
0xa1ef:	cvtsi2ss	xmm0, rax
0xa1f4:	mov	rax, qword ptr [rbx + 0x18]
0xa1f8:	test	rax, rax
0xa1fb:	js	0xa2f0


0xa1f4:	mov	rax, qword ptr [rbx + 0x18]
0xa1f8:	test	rax, rax
0xa1fb:	js	0xa2f0


0xa2f0:	mov	rcx, rax
0xa2f3:	pxor	xmm1, xmm1
0xa2f7:	shr	rcx, 1
0xa2fa:	and	eax, 1
0xa2fd:	or	rcx, rax
0xa300:	cvtsi2ss	xmm1, rcx
0xa305:	addss	xmm1, xmm1
0xa309:	jmp	0xa20a


0xa201:	pxor	xmm1, xmm1
0xa205:	cvtsi2ss	xmm1, rax
0xa20a:	movss	xmm2, dword ptr [rdx]
0xa20e:	mulss	xmm2, xmm0
0xa212:	ucomiss	xmm2, xmm1
0xa215:	jbe	0xa16f


0xa20a:	movss	xmm2, dword ptr [rdx]
0xa20e:	mulss	xmm2, xmm0
0xa212:	ucomiss	xmm2, xmm1
0xa215:	jbe	0xa16f


0xa21b:	cmp	byte ptr [rdx + 0x10], 0
0xa21f:	mulss	xmm0, dword ptr [rdx + 4]
0xa224:	je	0xa2e0


0xa2e0:	mulss	xmm0, dword ptr [rdx + 8]
0xa2e5:	jmp	0xa22a


0xa22a:	ucomiss	xmm0, dword ptr [rip + 0x20df]
0xa231:	jae	0xa2c0


0xa237:	cvttss2si	rsi, xmm0
0xa23c:	mov	rdi, rbx
0xa23f:	call	0x9c00


0xa2c0:	subss	xmm0, dword ptr [rip + 0x2048]
0xa2c8:	movabs	rax, 0x8000000000000000
0xa2d2:	cvttss2si	rsi, xmm0
0xa2d7:	xor	rsi, rax
0xa2da:	jmp	0xa23c


0xa23c:	mov	rdi, rbx
0xa23f:	call	0x9c00


0xa244:	test	al, al
0xa246:	jne	0xa16f


0xa24c:	mov	rdi, qword ptr [rbx + 0x48]
0xa250:	test	rdi, rdi
0xa253:	je	0xa269


0xa269:	mov	qword ptr [rbx + 0x48], 0
0xa271:	jmp	0xa16f


0xa261:	test	r12, r12
0xa264:	mov	rdi, r12
0xa267:	jne	0xa258


0xa258:	mov	r12, qword ptr [rdi + 8]
0xa25c:	call	0x1da0


0x9690:	test	al, al
0x9692:	jne	0x96b0


0x9694:	mov	rbx, qword ptr [rbx + 8]
0x9698:	test	rbx, rbx
0x969b:	jne	0x9680


0x96b0:	mov	rsi, qword ptr [rbx]
0x96b3:	pop	rbx
0x96b4:	pop	rbp
0x96b5:	mov	rax, rsi
0x96b8:	pop	r12
0x96ba:	ret	


0x9680:	mov	rsi, qword ptr [rbx]
0x9683:	cmp	rsi, rbp
0x9686:	je	0x969f


0x918c:	test	al, al
0x918e:	jne	0x9210


0x9194:	mov	rax, qword ptr [rbx + 8]
0x9198:	test	rax, rax
0x919b:	je	0x9260


0x9210:	mov	rsi, qword ptr [rbx]
0x9213:	test	r13b, r13b
0x9216:	je	0x91fe


0x91a1:	mov	rsi, qword ptr [rax]
0x91a4:	cmp	rbp, rsi
0x91a7:	jne	0x91c9


0x91a9:	jmp	0x91dc


0x91c9:	mov	rdi, rbp
0x91cc:	call	qword ptr [r12 + 0x38]


0x91dc:	test	r13b, r13b
0x91df:	je	0x91fe


0x91e1:	mov	rdx, qword ptr [rax + 8]
0x91e5:	mov	qword ptr [rbx + 8], rdx
0x91e9:	mov	qword ptr [rax], 0
0x91f0:	mov	rdx, qword ptr [r12 + 0x48]
0x91f5:	mov	qword ptr [rax + 8], rdx
0x91f9:	mov	qword ptr [r12 + 0x48], rax
0x91fe:	pop	rbx
0x91ff:	mov	rax, rsi
0x9202:	pop	rbp
0x9203:	pop	r12
0x9205:	pop	r13
0x9207:	pop	r14
0x9209:	ret	


0x91d1:	test	al, al
0x91d3:	je	0x91b0


0x91b0:	mov	rbx, qword ptr [rbx + 8]
0x91b4:	mov	rax, qword ptr [rbx + 8]
0x91b8:	test	rax, rax
0x91bb:	je	0x9260


0x91d5:	mov	rax, qword ptr [rbx + 8]
0x91d9:	mov	rsi, qword ptr [rax]
0x91dc:	test	r13b, r13b
0x91df:	je	0x91fe


0x91c1:	mov	rsi, qword ptr [rax]
0x91c4:	cmp	rsi, rbp
0x91c7:	je	0x91dc






0x6120:	mov	r13, qword ptr [rbx + 0x10]
0x6124:	mov	r12, qword ptr [rbx + 8]
0x6128:	lea	rsi, [rip + 0x5d57]
0x612f:	mov	rbx, qword ptr [rbx]
0x6132:	mov	edx, 5
0x6137:	xor	edi, edi
0x6139:	call	0x1a60


0x6260:	mov	r9, qword ptr [rbx + 0x10]
0x6264:	mov	r13, qword ptr [rbx + 0x30]
0x6268:	lea	rsi, [rip + 0x5da1]
0x626f:	mov	r12, qword ptr [rbx + 0x28]
0x6273:	mov	r15, qword ptr [rbx + 0x20]
0x6277:	mov	edx, 5
0x627c:	mov	r14, qword ptr [rbx + 0x18]
0x6280:	mov	r8, qword ptr [rbx + 8]
0x6284:	xor	edi, edi
0x6286:	mov	qword ptr [rsp + 8], r9
0x628b:	mov	rbx, qword ptr [rbx]
0x628e:	mov	qword ptr [rsp], r8
0x6292:	call	0x1a60


0x6040:	mov	r10, qword ptr [rbx + 0x40]
0x6044:	mov	r9, qword ptr [rbx + 0x38]
0x6048:	lea	rsi, [rip + 0x6021]
0x604f:	mov	rax, qword ptr [rbx + 0x10]
0x6053:	mov	r8, qword ptr [rbx + 8]
0x6057:	mov	edx, 5
0x605c:	mov	r13, qword ptr [rbx + 0x30]
0x6060:	mov	r12, qword ptr [rbx + 0x28]
0x6064:	mov	r15, qword ptr [rbx + 0x20]
0x6068:	mov	r14, qword ptr [rbx + 0x18]
0x606c:	mov	rbx, qword ptr [rbx]
0x606f:	mov	qword ptr [rsp + 0x18], r10
0x6074:	mov	qword ptr [rsp + 0x10], r9
0x6079:	mov	qword ptr [rsp], rax
0x607d:	mov	qword ptr [rsp + 8], r8
0x6082:	xor	edi, edi
0x6084:	call	0x1a60


0x6006:	add	rsp, 0x28
0x600a:	pop	rbx
0x600b:	pop	rbp
0x600c:	pop	r12
0x600e:	pop	r13
0x6010:	pop	r14
0x6012:	pop	r15
0x6014:	ret	


0x61c8:	mov	r15, qword ptr [rbx + 0x20]
0x61cc:	lea	rsi, [rip + 0x5ded]
0x61d3:	mov	edx, 5
0x61d8:	xor	edi, edi
0x61da:	mov	r14, qword ptr [rbx + 0x18]
0x61de:	mov	r13, qword ptr [rbx + 0x10]
0x61e2:	mov	r12, qword ptr [rbx + 8]
0x61e6:	mov	rbx, qword ptr [rbx]
0x61e9:	call	0x1a60


0x61f8:	mov	r8, qword ptr [rbx + 8]
0x61fc:	mov	r12, qword ptr [rbx + 0x28]
0x6200:	lea	rsi, [rip + 0x5de1]
0x6207:	mov	r15, qword ptr [rbx + 0x20]
0x620b:	mov	r14, qword ptr [rbx + 0x18]
0x620f:	mov	edx, 5
0x6214:	mov	r13, qword ptr [rbx + 0x10]
0x6218:	xor	edi, edi
0x621a:	mov	rbx, qword ptr [rbx]
0x621d:	mov	qword ptr [rsp], r8
0x6221:	call	0x1a60


0x6170:	lea	rsi, [rip + 0x5e29]
0x6177:	mov	edx, 5
0x617c:	xor	edi, edi
0x617e:	mov	r14, qword ptr [rbx + 0x18]
0x6182:	mov	r13, qword ptr [rbx + 0x10]
0x6186:	mov	r12, qword ptr [rbx + 8]
0x618a:	mov	rbx, qword ptr [rbx]
0x618d:	call	0x1a60


0x5f90:	mov	r9, qword ptr [rbx + 0x38]
0x5f94:	mov	rax, qword ptr [rbx + 0x10]
0x5f98:	lea	rsi, [rip + 0x60a1]
0x5f9f:	mov	r8, qword ptr [rbx + 8]
0x5fa3:	mov	edx, 5
0x5fa8:	xor	edi, edi
0x5faa:	mov	r13, qword ptr [rbx + 0x30]
0x5fae:	mov	r12, qword ptr [rbx + 0x28]
0x5fb2:	mov	qword ptr [rsp + 0x10], r9
0x5fb7:	mov	r15, qword ptr [rbx + 0x20]
0x5fbb:	mov	r14, qword ptr [rbx + 0x18]
0x5fbf:	mov	qword ptr [rsp], rax
0x5fc3:	mov	qword ptr [rsp + 8], r8
0x5fc8:	mov	rbx, qword ptr [rbx]
0x5fcb:	call	0x1a60


0x6098:	mov	rbx, qword ptr [rbx]
0x609b:	lea	rsi, [rip + 0x5dbd]
0x60a2:	mov	edx, 5
0x60a7:	xor	edi, edi
0x60a9:	call	0x1a60


0x60d8:	mov	r12, qword ptr [rbx + 8]
0x60dc:	lea	rsi, [rip + 0x5d8c]
0x60e3:	mov	rbx, qword ptr [rbx]
0x60e6:	mov	edx, 5
0x60eb:	xor	edi, edi
0x60ed:	call	0x1a60


0x60f2:	add	rsp, 0x28
0x60f6:	mov	r8, r12
0x60f9:	mov	rcx, rbx
0x60fc:	mov	rdi, rbp
0x60ff:	mov	rdx, rax
0x6102:	mov	esi, 1
0x6107:	pop	rbx
0x6108:	pop	rbp
0x6109:	pop	r12
0x610b:	pop	r13
0x610d:	pop	r14
0x610f:	pop	r15
0x6111:	xor	eax, eax
0x6113:	jmp	0x1d60


0x60ae:	add	rsp, 0x28
0x60b2:	mov	rcx, rbx
0x60b5:	mov	rdi, rbp
0x60b8:	pop	rbx
0x60b9:	pop	rbp
0x60ba:	pop	r12
0x60bc:	pop	r13
0x60be:	pop	r14
0x60c0:	pop	r15
0x60c2:	mov	rdx, rax
0x60c5:	mov	esi, 1
0x60ca:	xor	eax, eax
0x60cc:	jmp	0x1d60


0x5fd0:	sub	rsp, 8
0x5fd4:	mov	r9, qword ptr [rsp + 0x18]
0x5fd9:	mov	rdx, rax
0x5fdc:	mov	rcx, rbx
0x5fdf:	mov	esi, 1
0x5fe4:	mov	rdi, rbp
0x5fe7:	xor	eax, eax
0x5fe9:	push	r9
0x5feb:	push	r13
0x5fed:	push	r12
0x5fef:	push	r15
0x5ff1:	push	r14
0x5ff3:	mov	r9, qword ptr [rsp + 0x30]
0x5ff8:	mov	r8, qword ptr [rsp + 0x38]
0x5ffd:	call	0x1d60


0x6192:	sub	rsp, 8
0x6196:	push	r14
0x6198:	mov	rdx, rax
0x619b:	mov	r9, r13
0x619e:	mov	r8, r12
0x61a1:	mov	rcx, rbx
0x61a4:	mov	rdi, rbp
0x61a7:	mov	esi, 1
0x61ac:	xor	eax, eax
0x61ae:	call	0x1d60


0x61b3:	pop	rax
0x61b4:	pop	rdx
0x61b5:	add	rsp, 0x28
0x61b9:	pop	rbx
0x61ba:	pop	rbp
0x61bb:	pop	r12
0x61bd:	pop	r13
0x61bf:	pop	r14
0x61c1:	pop	r15
0x61c3:	ret	


0x6226:	sub	rsp, 8
0x622a:	mov	r9, r13
0x622d:	push	r12
0x622f:	push	r15
0x6231:	push	r14
0x6233:	mov	r8, qword ptr [rsp + 0x20]
0x6238:	mov	rcx, rbx
0x623b:	mov	rdx, rax
0x623e:	mov	rdi, rbp
0x6241:	mov	esi, 1
0x6246:	xor	eax, eax
0x6248:	call	0x1d60


0x624d:	add	rsp, 0x20
0x6251:	add	rsp, 0x28
0x6255:	pop	rbx
0x6256:	pop	rbp
0x6257:	pop	r12
0x6259:	pop	r13
0x625b:	pop	r14
0x625d:	pop	r15
0x625f:	ret	


0x61ee:	push	r15
0x61f0:	jmp	0x6196


0x6196:	push	r14
0x6198:	mov	rdx, rax
0x619b:	mov	r9, r13
0x619e:	mov	r8, r12
0x61a1:	mov	rcx, rbx
0x61a4:	mov	rdi, rbp
0x61a7:	mov	esi, 1
0x61ac:	xor	eax, eax
0x61ae:	call	0x1d60


0x6297:	push	r13
0x6299:	push	r12
0x629b:	push	r15
0x629d:	push	r14
0x629f:	mov	r9, qword ptr [rsp + 0x28]
0x62a4:	jmp	0x6233


0x6233:	mov	r8, qword ptr [rsp + 0x20]
0x6238:	mov	rcx, rbx
0x623b:	mov	rdx, rax
0x623e:	mov	rdi, rbp
0x6241:	mov	esi, 1
0x6246:	xor	eax, eax
0x6248:	call	0x1d60


0x613e:	add	rsp, 0x28
0x6142:	mov	r9, r13
0x6145:	mov	r8, r12
0x6148:	mov	rcx, rbx
0x614b:	mov	rdi, rbp
0x614e:	mov	rdx, rax
0x6151:	pop	rbx
0x6152:	pop	rbp
0x6153:	pop	r12
0x6155:	pop	r13
0x6157:	pop	r14
0x6159:	pop	r15
0x615b:	mov	esi, 1
0x6160:	xor	eax, eax
0x6162:	jmp	0x1d60


0x4e60:	sub	rsp, 8
0x4e64:	mov	rcx, rbp
0x4e67:	mov	rsi, r13
0x4e6a:	push	qword ptr [rsp + 0x68]
0x4e6e:	push	qword ptr [rsp + 0x78]
0x4e72:	mov	rdi, r14
0x4e75:	push	0
0x4e77:	mov	r9d, dword ptr [rsp + 0x98]
0x4e7f:	mov	r8d, dword ptr [rsp + 0x28]
0x4e84:	mov	rdx, qword ptr [rsp + 0x30]
0x4e89:	and	r9d, 0xfffffffd
0x4e8d:	call	0x42c0


0x4e92:	add	rsp, 0x20
0x4e96:	mov	r15, rax
0x4e99:	mov	rbx, qword ptr [rsp + 0xa8]
0x4ea1:	xor	rbx, qword ptr fs:[0x28]
0x4eaa:	mov	rax, r15
0x4ead:	jne	0x54b3


0x4eb3:	add	rsp, 0xb8
0x4eba:	pop	rbx
0x4ebb:	pop	rbp
0x4ebc:	pop	r12
0x4ebe:	pop	r13
0x4ec0:	pop	r14
0x4ec2:	pop	r15
0x4ec4:	ret	


0x54b3:	call	0x1ab0


0x545d:	sub	rsp, 8
0x5461:	mov	r8d, 5
0x5467:	mov	rcx, r11
0x546a:	push	qword ptr [rsp + 0x68]
0x546e:	push	qword ptr [rsp + 0x78]
0x5472:	mov	rdi, r14
0x5475:	push	qword ptr [rsp + 0x38]
0x5479:	mov	r9d, dword ptr [rsp + 0x98]
0x5481:	mov	rdx, qword ptr [rsp + 0x30]
0x5486:	mov	rsi, qword ptr [rsp + 0x70]
0x548b:	call	0x42c0


0x5490:	add	rsp, 0x20
0x5494:	mov	r15, rax
0x5497:	jmp	0x4e99


0x4e99:	mov	rbx, qword ptr [rsp + 0xa8]
0x4ea1:	xor	rbx, qword ptr fs:[0x28]
0x4eaa:	mov	rax, r15
0x4ead:	jne	0x54b3


0x1980:	push	qword ptr [rip + 0x20d42a]
0x1986:	jmp	qword ptr [rip + 0x20d42c]


0x198c:	nop	dword ptr [rax]


0x1996:	push	0
0x199b:	jmp	0x1980


0x19a6:	push	1
0x19ab:	jmp	0x1980


0x19b6:	push	2
0x19bb:	jmp	0x1980


0x19c6:	push	3
0x19cb:	jmp	0x1980


0x19d6:	push	4
0x19db:	jmp	0x1980


0x19e6:	push	5
0x19eb:	jmp	0x1980


0x19f6:	push	6
0x19fb:	jmp	0x1980


0x1a06:	push	7
0x1a0b:	jmp	0x1980


0x1a16:	push	8
0x1a1b:	jmp	0x1980


0x1a26:	push	9
0x1a2b:	jmp	0x1980


0x1a36:	push	0xa
0x1a3b:	jmp	0x1980


0x1a46:	push	0xb
0x1a4b:	jmp	0x1980


0x1a56:	push	0xc
0x1a5b:	jmp	0x1980


0x1a66:	push	0xd
0x1a6b:	jmp	0x1980


0x1a76:	push	0xe
0x1a7b:	jmp	0x1980


0x1a86:	push	0xf
0x1a8b:	jmp	0x1980


0x1a96:	push	0x10
0x1a9b:	jmp	0x1980


0x1aa6:	push	0x11
0x1aab:	jmp	0x1980


0x1ab6:	push	0x12
0x1abb:	jmp	0x1980


0x1ac6:	push	0x13
0x1acb:	jmp	0x1980


0x1ad6:	push	0x14
0x1adb:	jmp	0x1980


0x1ae6:	push	0x15
0x1aeb:	jmp	0x1980


0x1af6:	push	0x16
0x1afb:	jmp	0x1980


0x1b06:	push	0x17
0x1b0b:	jmp	0x1980


0x1b16:	push	0x18
0x1b1b:	jmp	0x1980


0x1b26:	push	0x19
0x1b2b:	jmp	0x1980


0x1b36:	push	0x1a
0x1b3b:	jmp	0x1980


0x1b46:	push	0x1b
0x1b4b:	jmp	0x1980


0x1b56:	push	0x1c
0x1b5b:	jmp	0x1980


0x1b66:	push	0x1d
0x1b6b:	jmp	0x1980


0x1b76:	push	0x1e
0x1b7b:	jmp	0x1980


0x1b86:	push	0x1f
0x1b8b:	jmp	0x1980


0x1b96:	push	0x20
0x1b9b:	jmp	0x1980


0x1ba6:	push	0x21
0x1bab:	jmp	0x1980


0x1bb6:	push	0x22
0x1bbb:	jmp	0x1980


0x1bc6:	push	0x23
0x1bcb:	jmp	0x1980


0x1bd6:	push	0x24
0x1bdb:	jmp	0x1980


0x1be6:	push	0x25
0x1beb:	jmp	0x1980


0x1bf6:	push	0x26
0x1bfb:	jmp	0x1980


0x1c06:	push	0x27
0x1c0b:	jmp	0x1980


0x1c16:	push	0x28
0x1c1b:	jmp	0x1980


0x1c26:	push	0x29
0x1c2b:	jmp	0x1980


0x1c36:	push	0x2a
0x1c3b:	jmp	0x1980


0x1c46:	push	0x2b
0x1c4b:	jmp	0x1980


0x1c56:	push	0x2c
0x1c5b:	jmp	0x1980


0x1c66:	push	0x2d
0x1c6b:	jmp	0x1980


0x1c76:	push	0x2e
0x1c7b:	jmp	0x1980


0x1c86:	push	0x2f
0x1c8b:	jmp	0x1980


0x1c96:	push	0x30
0x1c9b:	jmp	0x1980


0x1ca6:	push	0x31
0x1cab:	jmp	0x1980


0x1cb6:	push	0x32
0x1cbb:	jmp	0x1980


0x1cc6:	push	0x33
0x1ccb:	jmp	0x1980


0x1cd6:	push	0x34
0x1cdb:	jmp	0x1980


0x1ce6:	push	0x35
0x1ceb:	jmp	0x1980


0x1cf6:	push	0x36
0x1cfb:	jmp	0x1980


0x1d06:	push	0x37
0x1d0b:	jmp	0x1980


0x1d16:	push	0x38
0x1d1b:	jmp	0x1980


0x1d26:	push	0x39
0x1d2b:	jmp	0x1980


0x1d36:	push	0x3a
0x1d3b:	jmp	0x1980


0x1d46:	push	0x3b
0x1d4b:	jmp	0x1980


0x1d56:	push	0x3c
0x1d5b:	jmp	0x1980


0x1d66:	push	0x3d
0x1d6b:	jmp	0x1980


0x1d70:	jmp	qword ptr [rip + 0x20d23a]




0x1d76:	push	0x3e
0x1d7b:	jmp	0x1980


0x1d80:	jmp	qword ptr [rip + 0x20d232]




0x1d86:	push	0x3f
0x1d8b:	jmp	0x1980


0x1d90:	jmp	qword ptr [rip + 0x20d22a]




0x1d96:	push	0x40
0x1d9b:	jmp	0x1980


0x1da6:	nop	


0x23ba:	hlt	


0x23bb:	nop	dword ptr [rax + rax]


0x23f2:	nop	dword ptr [rax]
0x23f6:	nop	word ptr cs:[rax + rax]


0x2442:	nop	dword ptr [rax]
0x2446:	nop	word ptr cs:[rax + rax]


0x248a:	nop	word ptr [rax + rax]


0x249a:	nop	word ptr [rax + rax]


0x28ea:	nop	word ptr [rax + rax]


0x2b3d:	nop	dword ptr [rax]


0x2bb1:	nop	dword ptr [rax + rax]
0x2bb6:	nop	word ptr cs:[rax + rax]


0x3088:	nop	dword ptr [rax + rax]


0x3140:	lea	rsi, [rip + 0x837a]
0x3147:	mov	edx, 5
0x314c:	xor	edi, edi
0x314e:	mov	rbp, rax
0x3151:	call	0x1a60


0x3156:	mov	esi, dword ptr [r15 + 0x40]
0x315a:	mov	rcx, rbp
0x315d:	mov	rdx, rax
0x3160:	xor	edi, edi
0x3162:	xor	eax, eax
0x3164:	call	0x1cd0


0x3169:	mov	rsi, r15
0x316c:	mov	edx, 4
0x3171:	mov	rdi, rbx
0x3174:	call	0x8c60


0x3179:	mov	rdi, rbx
0x317c:	mov	ebp, 4
0x3181:	call	0x84e0


0x3186:	mov	rdi, rbx
0x3189:	call	0x84e0


0x318e:	test	rax, rax
0x3191:	mov	r15, rax
0x3194:	jne	0x3114


0x31f6:	cmp	byte ptr [r13 + 8], 0
0x31fb:	je	0x3218


0x3218:	and	edx, 0xfffffffd
0x321b:	xor	r14d, r14d
0x321e:	mov	rcx, r13
0x3221:	cmp	dx, 4
0x3225:	mov	r8d, 3
0x322b:	mov	rsi, r15
0x322e:	sete	r14b
0x3232:	mov	rdi, rbx
0x3235:	xor	r9d, r9d
0x3238:	mov	edx, r14d
0x323b:	call	0x2bc0


0x31fd:	cmp	qword ptr [r15 + 0x58], 0
0x3202:	jle	0x3218


0x3204:	mov	rax, qword ptr [rbx + 0x18]
0x3208:	cmp	qword ptr [r15 + 0x78], rax
0x320c:	jne	0x37b8


0x37b8:	mov	rax, qword ptr [r15 + 8]
0x37bc:	cmp	qword ptr [rax + 0x58], 0
0x37c1:	jns	0x37db


0x37c3:	jmp	0x37e2


0x37db:	cmp	qword ptr [rax + 0x20], 0
0x37e0:	je	0x37c8


0x37e2:	mov	rsi, qword ptr [r15 + 0x38]
0x37e6:	mov	edi, 4
0x37eb:	call	0x5b70


0x37c8:	mov	qword ptr [rax + 0x20], 1
0x37d0:	mov	rax, qword ptr [rax + 8]
0x37d4:	cmp	qword ptr [rax + 0x58], 0
0x37d9:	js	0x37e2


0x37f0:	lea	rsi, [rip + 0x7e91]
0x37f7:	mov	rbp, rax
0x37fa:	mov	edx, 5
0x37ff:	xor	edi, edi
0x3801:	call	0x1a60


0x3806:	mov	rcx, rbp
0x3809:	mov	rdx, rax
0x380c:	xor	esi, esi
0x380e:	xor	edi, edi
0x3810:	xor	eax, eax
0x3812:	mov	ebp, 4
0x3817:	call	0x1cd0


0x381c:	jmp	0x3100


0x3100:	mov	rdi, rbx
0x3103:	call	0x84e0


0x3240:	cmp	eax, 2
0x3243:	mov	ecx, eax
0x3245:	je	0x34a8


0x34a8:	mov	ecx, r14d
0x34ab:	mov	rdx, r13
0x34ae:	mov	rsi, r15
0x34b1:	mov	rdi, rbx
0x34b4:	call	0x28f0


0x324b:	lea	eax, [rcx - 2]
0x324e:	cmp	eax, 2
0x3251:	ja	0x38c1


0x3257:	cmp	ecx, 4
0x325a:	je	0x38e5


0x38c1:	lea	rcx, [rip + 0x7f68]
0x38c8:	lea	rsi, [rip + 0x7ee1]
0x38cf:	lea	rdi, [rip + 0x7c16]
0x38d6:	mov	edx, 0x261
0x38db:	call	0x1b20


0x38e5:	mov	ebp, 4
0x38ea:	jmp	0x3100


0x3260:	cmp	ecx, 3
0x3263:	jne	0x3100


0x3269:	cmp	ebp, 2
0x326c:	mov	eax, 3
0x3271:	cmove	ebp, eax
0x3274:	jmp	0x3100


0x34b9:	mov	ecx, eax
0x34bb:	jmp	0x324b


0x3290:	lea	rsi, [rip + 0x8421]
0x3297:	mov	rbp, rax
0x329a:	mov	edx, 5
0x329f:	xor	edi, edi
0x32a1:	call	0x1a60


0x32a6:	mov	rcx, rbp
0x32a9:	mov	rdx, rax
0x32ac:	xor	esi, esi
0x32ae:	jmp	0x3160


0x3160:	xor	edi, edi
0x3162:	xor	eax, eax
0x3164:	call	0x1cd0


0x32c3:	cmp	byte ptr [r13 + 0xa], 0
0x32c8:	je	0x3430


0x3378:	cmp	qword ptr [r15 + 0x58], 0
0x337d:	jne	0x33b8


0x3430:	mov	ebp, 0x15
0x3435:	mov	rsi, qword ptr [r15 + 0x38]
0x3439:	mov	edi, 4
0x343e:	call	0x5b70


0x32ce:	mov	rsi, qword ptr [r15 + 0x30]
0x32d2:	mov	edi, dword ptr [rbx + 0x2c]
0x32d5:	xor	eax, eax
0x32d7:	mov	edx, 0x30900
0x32dc:	call	0x1aa0


0x337f:	mov	r14, qword ptr [r15 + 0x30]
0x3383:	mov	rdi, r14
0x3386:	call	0x3e70


0x33b8:	mov	r9, qword ptr [rsp + 0x10]
0x33bd:	mov	rcx, r13
0x33c0:	mov	r8d, 2
0x33c6:	mov	edx, 1
0x33cb:	mov	rsi, r15
0x33ce:	mov	rdi, rbx
0x33d1:	call	0x2bc0


0x33d6:	cmp	eax, 2
0x33d9:	mov	ecx, eax
0x33db:	je	0x34c0


0x34c0:	cmp	dword ptr [rsp + 0x2c], 4
0x34c5:	jne	0x3100


0x33e1:	mov	rax, qword ptr [r15 + 8]
0x33e5:	cmp	qword ptr [rax + 0x58], 0
0x33ea:	jns	0x3403


0x34cb:	mov	ecx, 1
0x34d0:	mov	rdx, r13
0x34d3:	mov	rsi, r15
0x34d6:	mov	rdi, rbx
0x34d9:	call	0x28f0


0x33ec:	jmp	0x340a


0x3403:	cmp	qword ptr [rax + 0x20], 0
0x3408:	je	0x33f0


0x340a:	mov	edx, 4
0x340f:	mov	rsi, r15
0x3412:	mov	rdi, rbx
0x3415:	mov	dword ptr [rsp + 8], ecx
0x3419:	call	0x8c60


0x33f0:	mov	qword ptr [rax + 0x20], 1
0x33f8:	mov	rax, qword ptr [rax + 8]
0x33fc:	cmp	qword ptr [rax + 0x58], 0
0x3401:	js	0x340a


0x341e:	mov	rdi, rbx
0x3421:	call	0x84e0


0x3426:	mov	ecx, dword ptr [rsp + 8]
0x342a:	jmp	0x324b


0x34de:	mov	edx, 4
0x34e3:	mov	rsi, r15
0x34e6:	mov	rdi, rbx
0x34e9:	mov	dword ptr [rsp + 8], eax
0x34ed:	call	0x8c60


0x34f2:	mov	rdi, rbx
0x34f5:	call	0x84e0


0x34fa:	mov	ecx, dword ptr [rsp + 8]
0x34fe:	cmp	ecx, 2
0x3501:	je	0x3100


0x3507:	jmp	0x33e1


0x338b:	cmp	byte ptr [rax], 0x2e
0x338e:	je	0x3510


0x3510:	xor	edx, edx
0x3512:	cmp	byte ptr [rax + 1], 0x2e
0x3516:	sete	dl
0x3519:	movzx	eax, byte ptr [rax + rdx + 1]
0x351e:	test	al, al
0x3520:	je	0x352a


0x3394:	mov	rax, qword ptr [r13 + 0x10]
0x3398:	test	rax, rax
0x339b:	je	0x33ad


0x352a:	mov	rdx, qword ptr [r15 + 0x38]
0x352e:	mov	esi, 4
0x3533:	mov	edi, 2
0x3538:	call	0x5a50


0x3522:	cmp	al, 0x2f
0x3524:	jne	0x3394


0x33ad:	cmp	byte ptr [r13 + 0x18], 0
0x33b2:	jne	0x35a8


0x339d:	mov	rcx, qword ptr [rax]
0x33a0:	cmp	qword ptr [r15 + 0x80], rcx
0x33a7:	je	0x3720


0x35a8:	lea	rsi, [rip + 0x7f0f]
0x35af:	xor	edx, edx
0x35b1:	mov	rdi, r14
0x35b4:	call	0x4010


0x3720:	mov	rax, qword ptr [rax + 8]
0x3724:	cmp	qword ptr [r15 + 0x78], rax
0x3728:	jne	0x33ad


0x372e:	mov	rdx, qword ptr [r15 + 0x38]
0x3732:	lea	rdi, [rip + 0x823d]
0x3739:	mov	ecx, 2
0x373e:	mov	rsi, rdx
0x3741:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3741:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3743:	seta	al
0x3746:	sbb	al, 0
0x3748:	test	al, al
0x374a:	je	0x383e


0x383e:	mov	rsi, rdx
0x3841:	mov	edi, 4
0x3846:	call	0x5b70


0x3750:	lea	rdx, [rip + 0x821f]
0x3757:	mov	esi, 4
0x375c:	mov	edi, 1
0x3761:	call	0x5a50


0x35b9:	test	rax, rax
0x35bc:	mov	r14, rax
0x35bf:	je	0x35d7


0x35d7:	mov	rdx, qword ptr [r15 + 0x30]
0x35db:	mov	esi, 4
0x35e0:	mov	edi, 1
0x35e5:	call	0x5a50


0x35c1:	mov	rdx, qword ptr [rsp + 0x18]
0x35c6:	mov	rsi, rax
0x35c9:	mov	edi, 1
0x35ce:	call	0x1a90


0x35d3:	test	eax, eax
0x35d5:	je	0x3640


0x3640:	mov	rdi, r14
0x3643:	call	0x1da0


0x3648:	mov	rax, qword ptr [rsp + 0x30]
0x364d:	cmp	qword ptr [rbx + 0x18], rax
0x3651:	je	0x33b8


0x3657:	mov	rsi, qword ptr [r15 + 0x38]
0x365b:	mov	edi, 4
0x3660:	call	0x5b70


0x35ea:	mov	rdx, r14
0x35ed:	xor	edi, edi
0x35ef:	mov	esi, 4
0x35f4:	mov	rbp, rax
0x35f7:	call	0x5a50


0x35fc:	lea	rsi, [rip + 0x8065]
0x3603:	xor	edi, edi
0x3605:	mov	edx, 5
0x360a:	mov	qword ptr [rsp + 8], rax
0x360f:	call	0x1a60


0x3614:	mov	rcx, qword ptr [rsp + 8]
0x3619:	mov	rdx, rax
0x361c:	xor	edi, edi
0x361e:	mov	r8, rbp
0x3621:	xor	esi, esi
0x3623:	xor	eax, eax
0x3625:	call	0x1cd0


0x362a:	mov	rdi, r14
0x362d:	call	0x1da0


0x3632:	jmp	0x3169


0x3766:	mov	rdx, qword ptr [r15 + 0x38]
0x376a:	mov	esi, 4
0x376f:	xor	edi, edi
0x3771:	mov	rbp, rax
0x3774:	call	0x5a50


0x3779:	lea	rsi, [rip + 0x7e70]
0x3780:	mov	r14, rax
0x3783:	mov	edx, 5
0x3788:	xor	edi, edi
0x378a:	call	0x1a60


0x378f:	mov	r8, rbp
0x3792:	mov	rdx, rax
0x3795:	mov	rcx, r14
0x3798:	xor	esi, esi
0x379a:	xor	edi, edi
0x379c:	xor	eax, eax
0x379e:	call	0x1cd0


0x37a3:	mov	edx, 5
0x37a8:	lea	rsi, [rip + 0x7e81]
0x37af:	jmp	0x3698


0x3698:	xor	edi, edi
0x369a:	call	0x1a60


0x369f:	xor	esi, esi
0x36a1:	mov	rdx, rax
0x36a4:	xor	edi, edi
0x36a6:	xor	eax, eax
0x36a8:	call	0x1cd0


0x36ad:	jmp	0x3169


0x353d:	lea	rdx, [rip + 0x7f7a]
0x3544:	mov	esi, 4
0x3549:	mov	edi, 1
0x354e:	mov	rbp, rax
0x3551:	call	0x5a50


0x3556:	lea	rdx, [rip + 0x7f62]
0x355d:	xor	edi, edi
0x355f:	mov	esi, 4
0x3564:	mov	r14, rax
0x3567:	call	0x5a50


0x356c:	lea	rsi, [rip + 0x8015]
0x3573:	xor	edi, edi
0x3575:	mov	edx, 5
0x357a:	mov	qword ptr [rsp + 8], rax
0x357f:	call	0x1a60


0x3584:	mov	rcx, qword ptr [rsp + 8]
0x3589:	mov	rdx, rax
0x358c:	mov	r9, rbp
0x358f:	mov	r8, r14
0x3592:	xor	esi, esi
0x3594:	xor	edi, edi
0x3596:	xor	eax, eax
0x3598:	call	0x1cd0


0x359d:	jmp	0x3169


0x32e1:	test	eax, eax
0x32e3:	js	0x3341


0x3341:	cmp	byte ptr [r13 + 0xa], 0
0x3346:	je	0x3430


0x32e5:	mov	edi, eax
0x32e7:	mov	dword ptr [rsp + 8], eax
0x32eb:	call	0x1d10


0x334c:	mov	ebp, 0x27
0x3351:	jmp	0x3435


0x3435:	mov	rsi, qword ptr [r15 + 0x38]
0x3439:	mov	edi, 4
0x343e:	call	0x5b70


0x32f0:	test	rax, rax
0x32f3:	mov	r14, rax
0x32f6:	mov	edx, dword ptr [rsp + 8]
0x32fa:	je	0x3832


0x3832:	mov	edi, edx
0x3834:	call	0x1b50


0x3300:	call	0x19a0


0x3305:	mov	qword ptr [rsp + 8], rax
0x330a:	mov	dword ptr [rax], 0
0x3310:	mov	rdi, r14
0x3313:	call	0x1c10


0x3318:	test	rax, rax
0x331b:	je	0x3356


0x3356:	mov	rax, qword ptr [rsp + 8]
0x335b:	mov	rdi, r14
0x335e:	mov	edx, dword ptr [rax]
0x3360:	mov	dword ptr [rsp + 8], edx
0x3364:	call	0x1b60


0x331d:	cmp	byte ptr [rax + 0x13], 0x2e
0x3321:	jne	0x3339


0x3323:	xor	edx, edx
0x3325:	cmp	byte ptr [rax + 0x14], 0x2e
0x3329:	sete	dl
0x332c:	movzx	eax, byte ptr [rax + rdx + 0x14]
0x3331:	test	al, al
0x3333:	je	0x3310


0x3339:	mov	rdi, r14
0x333c:	call	0x1b60


0x3310:	mov	rdi, r14
0x3313:	call	0x1c10


0x3335:	cmp	al, 0x2f
0x3337:	je	0x3310


0x3369:	mov	edx, dword ptr [rsp + 8]
0x336d:	test	edx, edx
0x336f:	jne	0x3341


0x3839:	jmp	0x3341


0x3443:	lea	rsi, [rip + 0x8040]
0x344a:	xor	edi, edi
0x344c:	mov	r14, rax
0x344f:	mov	edx, 5
0x3454:	call	0x1a60


0x3459:	xor	edi, edi
0x345b:	mov	rdx, rax
0x345e:	mov	rcx, r14
0x3461:	xor	eax, eax
0x3463:	mov	esi, ebp
0x3465:	call	0x1cd0


0x346a:	mov	rax, qword ptr [r15 + 8]
0x346e:	cmp	qword ptr [rax + 0x58], 0
0x3473:	jns	0x3497


0x3475:	jmp	0x3169


0x3497:	cmp	qword ptr [rax + 0x20], 0
0x349c:	je	0x3480


0x3480:	mov	qword ptr [rax + 0x20], 1
0x3488:	mov	rax, qword ptr [rax + 8]
0x348c:	cmp	qword ptr [rax + 0x58], 0
0x3491:	js	0x3169


0x349e:	jmp	0x3169


0x3665:	lea	rsi, [rip + 0x801c]
0x366c:	mov	rbp, rax
0x366f:	mov	edx, 5
0x3674:	xor	edi, edi
0x3676:	call	0x1a60


0x367b:	xor	esi, esi
0x367d:	mov	rdx, rax
0x3680:	mov	rcx, rbp
0x3683:	xor	edi, edi
0x3685:	xor	eax, eax
0x3687:	call	0x1cd0


0x368c:	lea	rsi, [rip + 0x813d]
0x3693:	mov	edx, 5
0x3698:	xor	edi, edi
0x369a:	call	0x1a60


0x384b:	lea	rsi, [rip + 0x7d6e]
0x3852:	mov	rbp, rax
0x3855:	xor	edi, edi
0x3857:	mov	edx, 5
0x385c:	call	0x1a60


0x3861:	mov	rcx, rbp
0x3864:	mov	rdx, rax
0x3867:	xor	esi, esi
0x3869:	xor	edi, edi
0x386b:	xor	eax, eax
0x386d:	call	0x1cd0


0x3872:	jmp	0x37a3


0x38ef:	nop	


0x38fa:	nop	word ptr [rax + rax]


0x3a16:	nop	word ptr cs:[rax + rax]


0x3a93:	nop	dword ptr [rax]
0x3a96:	nop	word ptr cs:[rax + rax]


0x3c2d:	nop	dword ptr [rax]


0x3c7d:	nop	dword ptr [rax]


0x3c88:	nop	dword ptr [rax + rax]


0x3d97:	nop	word ptr [rax + rax]


0x3da8:	nop	dword ptr [rax + rax]


0x3db8:	nop	dword ptr [rax + rax]


0x3e64:	nop	word ptr cs:[rax + rax]
0x3e6e:	nop	


0x3ecc:	nop	dword ptr [rax]


0x3f17:	nop	word ptr [rax + rax]


0x400e:	nop	


0x4028:	nop	dword ptr [rax + rax]


0x412f:	nop	


0x41cf:	nop	


0x42b7:	nop	word ptr [rax + rax]


0x4353:	mov	byte ptr [rsp + 0xe], 1
0x4358:	mov	byte ptr [rsp + 0x7c], 0
0x435d:	xor	r12d, r12d
0x4360:	mov	qword ptr [rsp + 0x50], 0
0x4369:	mov	byte ptr [rsp + 0xf], 1
0x436e:	mov	byte ptr [rsp + 0xd], 0
0x4373:	lea	rax, [rip + 0x7613]
0x437a:	mov	qword ptr [rsp + 0x18], 1
0x4383:	xor	r15d, r15d
0x4386:	mov	dword ptr [rsp + 8], 2
0x438e:	mov	qword ptr [rsp + 0x48], rax
0x4393:	xor	r11d, r11d
0x4396:	mov	rax, rbp
0x4399:	mov	r8d, r12d
0x439c:	mov	rbp, r11
0x439f:	mov	r11, rax
0x43a2:	nop	word ptr [rax + rax]
0x43a8:	cmp	r11, rbp
0x43ab:	setne	r12b
0x43af:	cmp	r11, -1
0x43b3:	jne	0x43c2


0x43b5:	mov	rax, qword ptr [rsp + 0x10]
0x43ba:	cmp	byte ptr [rax + rbp], 0
0x43be:	setne	r12b
0x43c2:	test	r12b, r12b
0x43c5:	je	0x4a20


0x43c2:	test	r12b, r12b
0x43c5:	je	0x4a20


0x4a20:	cmp	dword ptr [rsp + 8], 2
0x4a25:	movzx	ebx, byte ptr [rsp + 0xf]
0x4a2a:	mov	r12d, r8d
0x4a2d:	mov	rbp, r11
0x4a30:	sete	dl
0x4a33:	mov	eax, ebx
0x4a35:	test	r15, r15
0x4a38:	sete	cl
0x4a3b:	and	eax, edx
0x4a3d:	and	al, cl
0x4a3f:	jne	0x54a6


0x43cb:	cmp	dword ptr [rsp + 8], 2
0x43d0:	mov	rdi, qword ptr [rsp + 0x10]
0x43d5:	lea	r9, [rdi + rbp]
0x43d9:	setne	al
0x43dc:	and	al, byte ptr [rsp + 0xd]
0x43e0:	mov	r10d, eax
0x43e3:	je	0x4490


0x4a45:	mov	eax, ebx
0x4a47:	xor	eax, 1
0x4a4a:	and	dl, al
0x4a4c:	je	0x53bc


0x54a6:	mov	dword ptr [rsp + 8], 2
0x54ae:	jmp	0x4e49


0x4490:	movzx	ebx, byte ptr [r9]
0x4494:	cmp	bl, 0x7e
0x4497:	ja	0x47b8


0x43e9:	mov	rax, qword ptr [rsp + 0x18]
0x43ee:	test	rax, rax
0x43f1:	je	0x4820


0x53bc:	mov	rbx, qword ptr [rsp + 0x48]
0x53c1:	test	rbx, rbx
0x53c4:	je	0x53f2


0x4a52:	cmp	byte ptr [rsp + 0x7c], 0
0x4a57:	je	0x53ba


0x4e49:	cmp	byte ptr [rsp + 0xd], 0
0x4e4e:	je	0x4e60


0x449d:	lea	rcx, [rip + 0x7568]
0x44a4:	movzx	edx, bl
0x44a7:	movsxd	rax, dword ptr [rcx + rdx*4]
0x44ab:	add	rax, rcx
0x44ae:	jmp	rax


0x47b8:	cmp	qword ptr [rsp + 0x58], 1
0x47be:	jne	0x4b68


0x4820:	movzx	ebx, byte ptr [r9]
0x4824:	cmp	bl, 0x7e
0x4827:	ja	0x47b0


0x43f7:	cmp	r11, -1
0x43fb:	lea	rbx, [rbp + rax]
0x4400:	jne	0x4430


0x53f2:	cmp	r13, r15
0x53f5:	jbe	0x4e99


0x53c6:	test	al, al
0x53c8:	je	0x53f2


0x53ba:	mov	eax, edx
0x53bc:	mov	rbx, qword ptr [rsp + 0x48]
0x53c1:	test	rbx, rbx
0x53c4:	je	0x53f2


0x4a5d:	cmp	byte ptr [rsp + 0xe], 0
0x4a62:	jne	0x545d


0x4e50:	test	al, al
0x4e52:	mov	eax, 4
0x4e57:	cmove	eax, dword ptr [rsp + 8]
0x4e5c:	mov	dword ptr [rsp + 8], eax


0x47c4:	mov	qword ptr [rsp + 0x38], r11
0x47c9:	mov	byte ptr [rsp + 0x30], r8b
0x47ce:	mov	byte ptr [rsp + 0x28], r10b
0x47d3:	call	0x1d90


0x4b68:	lea	rax, [rsp + 0xa0]
0x4b70:	cmp	r11, -1
0x4b74:	mov	qword ptr [rsp + 0xa0], 0
0x4b80:	mov	qword ptr [rsp + 0x28], rax
0x4b85:	jne	0x4bb4


0x4829:	lea	rcx, [rip + 0x73d8]
0x4830:	movzx	edx, bl
0x4833:	movsxd	rax, dword ptr [rcx + rdx*4]
0x4837:	add	rax, rcx
0x483a:	jmp	rax


0x47b0:	xor	r10d, r10d
0x47b3:	nop	dword ptr [rax + rax]
0x47b8:	cmp	qword ptr [rsp + 0x58], 1
0x47be:	jne	0x4b68


0x4402:	cmp	rax, 1
0x4406:	jbe	0x4430


0x4430:	cmp	rbx, r11
0x4433:	mov	byte ptr [rsp + 0x28], r10b
0x4438:	ja	0x49f0


0x53fb:	mov	byte ptr [r14 + r15], 0
0x5400:	jmp	0x4e99


0x53ca:	movzx	ecx, byte ptr [rbx]
0x53cd:	mov	rax, rbx
0x53d0:	test	cl, cl
0x53d2:	je	0x53f2


0x4a68:	test	r13, r13
0x4a6b:	sete	al
0x4a6e:	cmp	qword ptr [rsp + 0x50], 0
0x4a74:	setne	dl
0x4a77:	and	al, dl
0x4a79:	je	0x549c


0x4b87:	mov	rdi, qword ptr [rsp + 0x10]
0x4b8c:	mov	byte ptr [rsp + 0x40], r8b
0x4b91:	mov	byte ptr [rsp + 0x38], r10b
0x4b96:	mov	qword ptr [rsp + 0x30], r9
0x4b9b:	call	0x1a80


0x4bb4:	lea	rax, [rsp + 0x9c]
0x4bbc:	xor	ecx, ecx
0x4bbe:	mov	byte ptr [rsp + 0x7e], bl
0x4bc2:	mov	byte ptr [rsp + 0x7d], r8b
0x4bc7:	mov	rbx, rcx
0x4bca:	mov	qword ptr [rsp + 0x88], r9
0x4bd2:	mov	qword ptr [rsp + 0x38], rax
0x4bd7:	mov	byte ptr [rsp + 0x7f], r10b
0x4bdc:	mov	qword ptr [rsp + 0x80], r15
0x4be4:	mov	qword ptr [rsp + 0x40], r14
0x4be9:	mov	qword ptr [rsp + 0x70], r13
0x4bee:	mov	qword ptr [rsp + 0x30], r11
0x4bf3:	mov	rax, qword ptr [rsp + 0x10]
0x4bf8:	lea	r14, [rbp + rbx]
0x4bfd:	mov	rdx, qword ptr [rsp + 0x30]
0x4c02:	mov	rcx, qword ptr [rsp + 0x28]
0x4c07:	mov	rdi, qword ptr [rsp + 0x38]
0x4c0c:	lea	r13, [rax + r14]
0x4c10:	sub	rdx, r14
0x4c13:	mov	rsi, r13
0x4c16:	call	0x8de0


0x4408:	mov	byte ptr [rsp + 0x38], r8b
0x440d:	mov	byte ptr [rsp + 0x30], r10b
0x4412:	mov	qword ptr [rsp + 0x28], r9
0x4417:	call	0x1a80


0x443e:	mov	rdx, qword ptr [rsp + 0x18]
0x4443:	mov	rsi, qword ptr [rsp + 0x48]
0x4448:	mov	rdi, r9
0x444b:	mov	qword ptr [rsp + 0x40], r11
0x4450:	mov	byte ptr [rsp + 0x38], r8b
0x4455:	mov	qword ptr [rsp + 0x30], r9
0x445a:	call	0x1b70


0x49f0:	xor	r10d, r10d
0x49f3:	jmp	0x4490


0x53d4:	mov	rdx, r15
0x53d7:	sub	rax, r15
0x53da:	cmp	r13, rdx
0x53dd:	jbe	0x53e3


0x549c:	movzx	eax, byte ptr [rsp + 0x7c]
0x54a1:	jmp	0x53bc


0x4a7f:	mov	r13, qword ptr [rsp + 0x50]
0x4a84:	lea	rbx, [rip + 0x6f02]
0x4a8b:	mov	byte ptr [r14], 0x27
0x4a8f:	mov	dword ptr [rsp + 8], 2
0x4a97:	mov	r15d, 1
0x4a9d:	mov	qword ptr [rsp + 0x18], 1
0x4aa6:	mov	byte ptr [rsp + 0xf], 0
0x4aab:	mov	qword ptr [rsp + 0x48], rbx
0x4ab0:	mov	byte ptr [rsp + 0x7c], al
0x4ab4:	jmp	0x4393


0x53e3:	add	rdx, 1
0x53e7:	movzx	ecx, byte ptr [rax + rdx]
0x53eb:	test	cl, cl
0x53ed:	jne	0x53da


0x53df:	mov	byte ptr [r14 + rdx], cl
0x53e3:	add	rdx, 1
0x53e7:	movzx	ecx, byte ptr [rax + rdx]
0x53eb:	test	cl, cl
0x53ed:	jne	0x53da


0x4393:	xor	r11d, r11d
0x4396:	mov	rax, rbp
0x4399:	mov	r8d, r12d
0x439c:	mov	rbp, r11
0x439f:	mov	r11, rax
0x43a2:	nop	word ptr [rax + rax]
0x43a8:	cmp	r11, rbp
0x43ab:	setne	r12b
0x43af:	cmp	r11, -1
0x43b3:	jne	0x43c2


0x53ef:	mov	r15, rdx
0x53f2:	cmp	r13, r15
0x53f5:	jbe	0x4e99


0x53da:	cmp	r13, rdx
0x53dd:	jbe	0x53e3


0x445f:	test	eax, eax
0x4461:	mov	r9, qword ptr [rsp + 0x30]
0x4466:	movzx	r8d, byte ptr [rsp + 0x38]
0x446c:	mov	r11, qword ptr [rsp + 0x40]
0x4471:	jne	0x49f0


0x4477:	cmp	byte ptr [rsp + 0xf], 0
0x447c:	movzx	r10d, byte ptr [rsp + 0x28]
0x4482:	jne	0x5405


0x5405:	cmp	dword ptr [rsp + 8], 2
0x540a:	movzx	ebx, byte ptr [rsp + 0xf]
0x540f:	mov	rbp, r11
0x5412:	sete	al
0x5415:	mov	byte ptr [rsp + 0xd], bl
0x5419:	jmp	0x4e49


0x4c1b:	test	rax, rax
0x4c1e:	mov	r15, rax
0x4c21:	je	0x4c71


0x4c71:	mov	edx, r12d
0x4c74:	mov	rdi, rbx
0x4c77:	movzx	r8d, byte ptr [rsp + 0x7d]
0x4c7d:	xor	edx, 1
0x4c80:	movzx	ebx, byte ptr [rsp + 0x7e]
0x4c85:	movzx	r10d, byte ptr [rsp + 0x7f]
0x4c8b:	and	dl, byte ptr [rsp + 0xd]
0x4c8f:	mov	r15, qword ptr [rsp + 0x80]
0x4c97:	mov	r14, qword ptr [rsp + 0x40]
0x4c9c:	mov	r13, qword ptr [rsp + 0x70]
0x4ca1:	mov	r11, qword ptr [rsp + 0x30]
0x4ca6:	cmp	rdi, 1
0x4caa:	jbe	0x52ab


0x4c23:	cmp	rax, -1
0x4c27:	je	0x5245


0x52ab:	mov	eax, edx
0x52ad:	jmp	0x4807


0x4cb0:	mov	rcx, rdi
0x4cb3:	xor	esi, esi
0x4cb5:	movzx	r9d, byte ptr [rsp + 0xf]
0x4cbb:	add	rcx, rbp
0x4cbe:	mov	rdi, qword ptr [rsp + 0x10]
0x4cc3:	jmp	0x4d7e


0x5245:	mov	rdi, rbx
0x5248:	movzx	r8d, byte ptr [rsp + 0x7d]
0x524e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x5253:	movzx	r10d, byte ptr [rsp + 0x7f]
0x5259:	mov	r15, qword ptr [rsp + 0x80]
0x5261:	xor	r12d, r12d
0x5264:	mov	r14, qword ptr [rsp + 0x40]
0x5269:	mov	r13, qword ptr [rsp + 0x70]
0x526e:	mov	r11, qword ptr [rsp + 0x30]
0x5273:	movzx	edx, byte ptr [rsp + 0xd]
0x5278:	jmp	0x4ca6


0x4c2d:	cmp	rax, -2
0x4c31:	je	0x51d1


0x4807:	test	al, al
0x4809:	jne	0x51a1


0x4d7e:	test	dl, dl
0x4d80:	jne	0x4cd0


0x4ca6:	cmp	rdi, 1
0x4caa:	jbe	0x52ab


0x51d1:	mov	r11, qword ptr [rsp + 0x30]
0x51d6:	mov	rsi, r14
0x51d9:	mov	rcx, r13
0x51dc:	mov	rax, rbx
0x51df:	mov	rdi, rbx
0x51e2:	movzx	r8d, byte ptr [rsp + 0x7d]
0x51e8:	movzx	ebx, byte ptr [rsp + 0x7e]
0x51ed:	mov	r9, qword ptr [rsp + 0x88]
0x51f5:	cmp	rsi, r11
0x51f8:	movzx	r10d, byte ptr [rsp + 0x7f]
0x51fe:	mov	r15, qword ptr [rsp + 0x80]
0x5206:	mov	r14, qword ptr [rsp + 0x40]
0x520b:	mov	r13, qword ptr [rsp + 0x70]
0x5210:	jae	0x5238


0x4c37:	cmp	dword ptr [rsp + 8], 2
0x4c3c:	sete	al
0x4c3f:	and	al, byte ptr [rsp + 0xf]
0x4c43:	jne	0x4de0


0x480f:	cmp	dword ptr [rsp + 8], 2
0x4814:	sete	dl
0x4817:	jmp	0x44e8


0x51a1:	movzx	edx, byte ptr [rsp + 0xd]
0x51a6:	xor	r12d, r12d
0x51a9:	jmp	0x4cb0


0x4d86:	mov	eax, esi
0x4d88:	xor	eax, 1
0x4d8b:	and	eax, r8d
0x4d8e:	test	r10b, r10b
0x4d91:	je	0x4da1


0x4cd0:	cmp	dword ptr [rsp + 8], 2
0x4cd5:	sete	al
0x4cd8:	test	r9b, r9b
0x4cdb:	jne	0x5190


0x5212:	cmp	byte ptr [rcx], 0
0x5215:	jne	0x5227


0x5238:	movzx	edx, byte ptr [rsp + 0xd]
0x523d:	xor	r12d, r12d
0x5240:	jmp	0x4ca6


0x4c49:	mov	edi, dword ptr [rsp + 0x9c]
0x4c50:	call	0x1d80


0x4de0:	cmp	r15, 1
0x4de4:	je	0x4c49


0x44e8:	cmp	byte ptr [rsp + 0xd], 1
0x44ed:	jne	0x4602


0x4da1:	add	rbp, 1
0x4da5:	cmp	rbp, rcx
0x4da8:	jae	0x452c


0x4d93:	cmp	r13, r15
0x4d96:	jbe	0x4d9d


0x4ce1:	mov	esi, r8d
0x4ce4:	xor	esi, 1
0x4ce7:	and	al, sil
0x4cea:	je	0x4d1b


0x5190:	movzx	ebx, byte ptr [rsp + 0xf]
0x5195:	mov	rbp, r11
0x5198:	mov	byte ptr [rsp + 0xd], bl
0x519c:	jmp	0x4e49


0x5217:	jmp	0x5238


0x5227:	add	rax, 1
0x522b:	lea	rdx, [rbp + rax]
0x5230:	cmp	r11, rdx
0x5233:	ja	0x5220


0x4dea:	mov	rdi, qword ptr [rsp + 0x10]
0x4def:	lea	rcx, [rdi + r15]
0x4df3:	lea	rdx, [rdi + r14 + 1]
0x4df8:	lea	r8, [rcx + r14]
0x4dfc:	jmp	0x4e0d


0x44f3:	test	dl, dl
0x44f5:	jne	0x4602


0x4602:	cmp	byte ptr [rsp + 0xf], 0
0x4607:	jne	0x44fb


0x4dae:	test	al, al
0x4db0:	je	0x51ae


0x452c:	test	al, al
0x452e:	je	0x4550


0x4d9d:	add	r15, 1
0x4da1:	add	rbp, 1
0x4da5:	cmp	rbp, rcx
0x4da8:	jae	0x452c


0x4d98:	mov	byte ptr [r14 + r15], 0x5c
0x4d9d:	add	r15, 1
0x4da1:	add	rbp, 1
0x4da5:	cmp	rbp, rcx
0x4da8:	jae	0x452c


0x4d1b:	cmp	r13, r15
0x4d1e:	jbe	0x4d25


0x4cec:	cmp	r13, r15
0x4cef:	jbe	0x4cf6


0x5235:	mov	rdi, rax
0x5238:	movzx	edx, byte ptr [rsp + 0xd]
0x523d:	xor	r12d, r12d
0x5240:	jmp	0x4ca6


0x5220:	cmp	byte ptr [r9 + rax], 0
0x5225:	je	0x5235


0x4e0d:	movzx	ecx, byte ptr [rdx]
0x4e10:	sub	ecx, 0x5b
0x4e13:	cmp	cl, 0x21
0x4e16:	ja	0x4e00


0x44fb:	mov	rsi, qword ptr [rsp + 0x20]
0x4500:	test	rsi, rsi
0x4503:	je	0x4519


0x460d:	jmp	0x4519


0x51ae:	xor	r10d, r10d
0x51b1:	jmp	0x4d6d


0x4db6:	cmp	r13, r15
0x4db9:	jbe	0x4dc0


0x4550:	cmp	r15, r13
0x4553:	jae	0x4559


0x4530:	cmp	r13, r15
0x4533:	jbe	0x453a


0x4d25:	lea	rax, [r15 + 1]
0x4d29:	cmp	r13, rax
0x4d2c:	jbe	0x4d3b


0x4d20:	mov	byte ptr [r14 + r15], 0x5c
0x4d25:	lea	rax, [r15 + 1]
0x4d29:	cmp	r13, rax
0x4d2c:	jbe	0x4d3b


0x4cf6:	lea	rsi, [r15 + 1]
0x4cfa:	cmp	r13, rsi
0x4cfd:	jbe	0x4d05


0x4cf1:	mov	byte ptr [r14 + r15], 0x27
0x4cf6:	lea	rsi, [r15 + 1]
0x4cfa:	cmp	r13, rsi
0x4cfd:	jbe	0x4d05


0x4e18:	mov	esi, 1
0x4e1d:	shl	rsi, cl
0x4e20:	mov	rcx, rsi
0x4e23:	movabs	rsi, 0x20000002b
0x4e2d:	test	rcx, rsi
0x4e30:	je	0x4e00


0x4e00:	add	rdx, 1
0x4e04:	cmp	r8, rdx
0x4e07:	je	0x4c49


0x4519:	test	r10b, r10b
0x451c:	jne	0x4663


0x4505:	mov	edx, ebx
0x4507:	shr	dl, 5
0x450a:	movzx	edx, dl
0x450d:	mov	edx, dword ptr [rsi + rdx*4]
0x4510:	bt	edx, ebx
0x4513:	jb	0x4663


0x4d6d:	cmp	r13, r15
0x4d70:	jbe	0x4d76


0x4dc0:	lea	rax, [r15 + 1]
0x4dc4:	cmp	r13, rax
0x4dc7:	jbe	0x4dcf


0x4dbb:	mov	byte ptr [r14 + r15], 0x27
0x4dc0:	lea	rax, [r15 + 1]
0x4dc4:	cmp	r13, rax
0x4dc7:	jbe	0x4dcf


0x4555:	mov	byte ptr [r14 + r15], bl
0x4559:	movzx	edi, byte ptr [rsp + 0xe]
0x455e:	add	r15, 1
0x4562:	mov	eax, 0
0x4567:	test	r12b, r12b
0x456a:	cmove	edi, eax
0x456d:	mov	byte ptr [rsp + 0xe], dil
0x4572:	jmp	0x43a8


0x4559:	movzx	edi, byte ptr [rsp + 0xe]
0x455e:	add	r15, 1
0x4562:	mov	eax, 0
0x4567:	test	r12b, r12b
0x456a:	cmove	edi, eax
0x456d:	mov	byte ptr [rsp + 0xe], dil
0x4572:	jmp	0x43a8


0x453a:	lea	rax, [r15 + 1]
0x453e:	cmp	r13, rax
0x4541:	jbe	0x4549


0x4535:	mov	byte ptr [r14 + r15], 0x27
0x453a:	lea	rax, [r15 + 1]
0x453e:	cmp	r13, rax
0x4541:	jbe	0x4549


0x4d3b:	lea	rax, [r15 + 2]
0x4d3f:	cmp	r13, rax
0x4d42:	jbe	0x4d54


0x4d2e:	mov	eax, ebx
0x4d30:	shr	al, 6
0x4d33:	add	eax, 0x30
0x4d36:	mov	byte ptr [r14 + r15 + 1], al
0x4d3b:	lea	rax, [r15 + 2]
0x4d3f:	cmp	r13, rax
0x4d42:	jbe	0x4d54


0x4d05:	lea	rsi, [r15 + 2]
0x4d09:	cmp	r13, rsi
0x4d0c:	jbe	0x4d14


0x4cff:	mov	byte ptr [r14 + r15 + 1], 0x24
0x4d05:	lea	rsi, [r15 + 2]
0x4d09:	cmp	r13, rsi
0x4d0c:	jbe	0x4d14


0x4e32:	mov	r14, qword ptr [rsp + 0x40]
0x4e37:	mov	r13, qword ptr [rsp + 0x70]
0x4e3c:	mov	rbp, qword ptr [rsp + 0x30]
0x4e41:	mov	dword ptr [rsp + 8], 2
0x4e49:	cmp	byte ptr [rsp + 0xd], 0
0x4e4e:	je	0x4e60


0x4522:	xor	eax, 1
0x4525:	add	rbp, 1
0x4529:	and	eax, r8d
0x452c:	test	al, al
0x452e:	je	0x4550


0x4663:	cmp	dword ptr [rsp + 8], 2
0x4668:	sete	dl
0x466b:	cmp	byte ptr [rsp + 0xf], 0
0x4670:	mov	eax, edx
0x4672:	jne	0x4ec8


0x4d76:	movzx	ebx, byte ptr [rdi + rbp]
0x4d7a:	add	r15, 1
0x4d7e:	test	dl, dl
0x4d80:	jne	0x4cd0


0x4d72:	mov	byte ptr [r14 + r15], bl
0x4d76:	movzx	ebx, byte ptr [rdi + rbp]
0x4d7a:	add	r15, 1
0x4d7e:	test	dl, dl
0x4d80:	jne	0x4cd0


0x4dcf:	add	r15, 2
0x4dd3:	xor	r10d, r10d
0x4dd6:	xor	r8d, r8d
0x4dd9:	jmp	0x4d6d


0x4dc9:	mov	byte ptr [r14 + r15 + 1], 0x27
0x4dcf:	add	r15, 2
0x4dd3:	xor	r10d, r10d
0x4dd6:	xor	r8d, r8d
0x4dd9:	jmp	0x4d6d


0x43a8:	cmp	r11, rbp
0x43ab:	setne	r12b
0x43af:	cmp	r11, -1
0x43b3:	jne	0x43c2


0x4549:	add	r15, 2
0x454d:	xor	r8d, r8d
0x4550:	cmp	r15, r13
0x4553:	jae	0x4559


0x4543:	mov	byte ptr [r14 + r15 + 1], 0x27
0x4549:	add	r15, 2
0x454d:	xor	r8d, r8d
0x4550:	cmp	r15, r13
0x4553:	jae	0x4559


0x4d54:	and	ebx, 7
0x4d57:	add	rbp, 1
0x4d5b:	add	r15, 3
0x4d5f:	add	ebx, 0x30
0x4d62:	cmp	rbp, rcx
0x4d65:	jae	0x4550


0x4d44:	mov	eax, ebx
0x4d46:	shr	al, 3
0x4d49:	and	eax, 7
0x4d4c:	add	eax, 0x30
0x4d4f:	mov	byte ptr [r14 + r15 + 2], al
0x4d54:	and	ebx, 7
0x4d57:	add	rbp, 1
0x4d5b:	add	r15, 3
0x4d5f:	add	ebx, 0x30
0x4d62:	cmp	rbp, rcx
0x4d65:	jae	0x4550


0x4d14:	add	r15, 3
0x4d18:	mov	r8d, eax
0x4d1b:	cmp	r13, r15
0x4d1e:	jbe	0x4d25


0x4d0e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x4d14:	add	r15, 3
0x4d18:	mov	r8d, eax
0x4d1b:	cmp	r13, r15
0x4d1e:	jbe	0x4d25


0x4678:	mov	eax, r8d
0x467b:	xor	eax, 1
0x467e:	and	al, dl
0x4680:	je	0x46b1


0x4ec8:	mov	rbp, r11
0x4ecb:	jmp	0x4e49


0x4d6b:	mov	esi, edx
0x4d6d:	cmp	r13, r15
0x4d70:	jbe	0x4d76


0x46b1:	cmp	r13, r15
0x46b4:	jbe	0x46bb


0x4682:	cmp	r13, r15
0x4685:	jbe	0x468c


0x46bb:	add	r15, 1
0x46bf:	add	rbp, 1
0x46c3:	jmp	0x4550


0x46b6:	mov	byte ptr [r14 + r15], 0x5c
0x46bb:	add	r15, 1
0x46bf:	add	rbp, 1
0x46c3:	jmp	0x4550


0x468c:	lea	rdx, [r15 + 1]
0x4690:	cmp	r13, rdx
0x4693:	jbe	0x469b


0x4687:	mov	byte ptr [r14 + r15], 0x27
0x468c:	lea	rdx, [r15 + 1]
0x4690:	cmp	r13, rdx
0x4693:	jbe	0x469b


0x469b:	lea	rdx, [r15 + 2]
0x469f:	cmp	r13, rdx
0x46a2:	jbe	0x46aa


0x4695:	mov	byte ptr [r14 + r15 + 1], 0x24
0x469b:	lea	rdx, [r15 + 2]
0x469f:	cmp	r13, rdx
0x46a2:	jbe	0x46aa


0x46aa:	add	r15, 3
0x46ae:	mov	r8d, eax
0x46b1:	cmp	r13, r15
0x46b4:	jbe	0x46bb


0x46a4:	mov	byte ptr [r14 + r15 + 2], 0x27
0x46aa:	add	r15, 3
0x46ae:	mov	r8d, eax
0x46b1:	cmp	r13, r15
0x46b4:	jbe	0x46bb


0x4c55:	mov	rdi, qword ptr [rsp + 0x28]
0x4c5a:	test	eax, eax
0x4c5c:	mov	eax, 0
0x4c61:	cmove	r12d, eax
0x4c65:	add	rbx, r15
0x4c68:	call	0x1d70


0x4c6d:	test	eax, eax
0x4c6f:	je	0x4bf3


0x4bf3:	mov	rax, qword ptr [rsp + 0x10]
0x4bf8:	lea	r14, [rbp + rbx]
0x4bfd:	mov	rdx, qword ptr [rsp + 0x30]
0x4c02:	mov	rcx, qword ptr [rsp + 0x28]
0x4c07:	mov	rdi, qword ptr [rsp + 0x38]
0x4c0c:	lea	r13, [rax + r14]
0x4c10:	sub	rdx, r14
0x4c13:	mov	rsi, r13
0x4c16:	call	0x8de0


0x441c:	movzx	r8d, byte ptr [rsp + 0x38]
0x4422:	movzx	r10d, byte ptr [rsp + 0x30]
0x4428:	mov	r11, rax
0x442b:	mov	r9, qword ptr [rsp + 0x28]
0x4430:	cmp	rbx, r11
0x4433:	mov	byte ptr [rsp + 0x28], r10b
0x4438:	ja	0x49f0


0x4ba0:	movzx	r8d, byte ptr [rsp + 0x40]
0x4ba6:	movzx	r10d, byte ptr [rsp + 0x38]
0x4bac:	mov	r11, rax
0x4baf:	mov	r9, qword ptr [rsp + 0x30]
0x4bb4:	lea	rax, [rsp + 0x9c]
0x4bbc:	xor	ecx, ecx
0x4bbe:	mov	byte ptr [rsp + 0x7e], bl
0x4bc2:	mov	byte ptr [rsp + 0x7d], r8b
0x4bc7:	mov	rbx, rcx
0x4bca:	mov	qword ptr [rsp + 0x88], r9
0x4bd2:	mov	qword ptr [rsp + 0x38], rax
0x4bd7:	mov	byte ptr [rsp + 0x7f], r10b
0x4bdc:	mov	qword ptr [rsp + 0x80], r15
0x4be4:	mov	qword ptr [rsp + 0x40], r14
0x4be9:	mov	qword ptr [rsp + 0x70], r13
0x4bee:	mov	qword ptr [rsp + 0x30], r11
0x4bf3:	mov	rax, qword ptr [rsp + 0x10]
0x4bf8:	lea	r14, [rbp + rbx]
0x4bfd:	mov	rdx, qword ptr [rsp + 0x30]
0x4c02:	mov	rcx, qword ptr [rsp + 0x28]
0x4c07:	mov	rdi, qword ptr [rsp + 0x38]
0x4c0c:	lea	r13, [rax + r14]
0x4c10:	sub	rdx, r14
0x4c13:	mov	rsi, r13
0x4c16:	call	0x8de0


0x47d8:	mov	rcx, qword ptr [rax]
0x47db:	movzx	edx, bl
0x47de:	movzx	r10d, byte ptr [rsp + 0x28]
0x47e4:	movzx	r8d, byte ptr [rsp + 0x30]
0x47ea:	mov	r11, qword ptr [rsp + 0x38]
0x47ef:	mov	edi, 1
0x47f4:	movzx	eax, word ptr [rcx + rdx*2]
0x47f8:	and	ax, 0x4000
0x47fc:	setne	r12b
0x4800:	sete	al
0x4803:	and	al, byte ptr [rsp + 0xd]
0x4807:	test	al, al
0x4809:	jne	0x51a1


0x44b0:	xor	r10d, r10d
0x44b3:	cmp	r11, 1
0x44b7:	setne	al
0x44ba:	cmp	r11, -1
0x44be:	jne	0x44cc


0x44c0:	mov	rax, qword ptr [rsp + 0x10]
0x44c5:	cmp	byte ptr [rax + 1], 0
0x44c9:	setne	al
0x44cc:	cmp	dword ptr [rsp + 8], 2
0x44d1:	sete	dl
0x44d4:	test	al, al
0x44d6:	je	0x4728


0x44cc:	cmp	dword ptr [rsp + 8], 2
0x44d1:	sete	dl
0x44d4:	test	al, al
0x44d6:	je	0x4728


0x4728:	test	rbp, rbp
0x472b:	jne	0x44dc


0x44dc:	xor	r12d, r12d
0x44df:	xor	eax, eax
0x44e1:	nop	dword ptr [rax]
0x44e8:	cmp	byte ptr [rsp + 0xd], 1
0x44ed:	jne	0x4602


0x4731:	movzx	eax, byte ptr [rsp + 0xf]
0x4736:	and	al, dl
0x4738:	je	0x44e8


0x473e:	mov	rbp, r11
0x4741:	mov	dword ptr [rsp + 8], 2
0x4749:	jmp	0x4e49


0x4b48:	cmp	byte ptr [rsp + 0xf], 0
0x4b4d:	jne	0x5370


0x4590:	cmp	eax, 5
0x4593:	je	0x4b08


0x4b53:	xor	r12d, r12d
0x4b56:	xor	eax, eax
0x4b58:	mov	ebx, 0x3f
0x4b5d:	jmp	0x4519


0x5370:	mov	rbp, r11
0x5373:	movzx	eax, byte ptr [rsp + 0xf]
0x5378:	jmp	0x4e49


0x4b08:	test	byte ptr [rsp + 0x78], 4
0x4b0d:	je	0x4b30


0x4599:	cmp	eax, 2
0x459c:	mov	ebx, 0x3f
0x45a1:	sete	dl
0x45a4:	xor	r12d, r12d
0x45a7:	xor	eax, eax
0x45a9:	jmp	0x44e8


0x4b30:	xor	edx, edx
0x4b32:	xor	r12d, r12d
0x4b35:	xor	eax, eax
0x4b37:	mov	ebx, 0x3f
0x4b3c:	jmp	0x44e8


0x4b0f:	lea	rcx, [rbp + 2]
0x4b13:	cmp	rcx, r11
0x4b16:	jae	0x4b30


0x4b18:	mov	rax, qword ptr [rsp + 0x10]
0x4b1d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x4b22:	je	0x52b2


0x52b2:	movzx	ebx, byte ptr [rax + rcx]
0x52b6:	cmp	bl, 0x3e
0x52b9:	ja	0x4b30


0x52bf:	movabs	rax, 0x7000a38200000000
0x52c9:	bt	rax, rbx
0x52cd:	jae	0x4b30


0x52d3:	cmp	byte ptr [rsp + 0xf], 0
0x52d8:	jne	0x54c2


0x52de:	cmp	r13, r15
0x52e1:	jbe	0x52e8


0x54c2:	mov	rbp, r11
0x54c5:	jmp	0x4e60


0x52e8:	lea	rax, [r15 + 1]
0x52ec:	cmp	r13, rax
0x52ef:	jbe	0x52f7


0x52e3:	mov	byte ptr [r14 + r15], 0x3f
0x52e8:	lea	rax, [r15 + 1]
0x52ec:	cmp	r13, rax
0x52ef:	jbe	0x52f7


0x52f7:	lea	rax, [r15 + 2]
0x52fb:	cmp	r13, rax
0x52fe:	jbe	0x5306


0x52f1:	mov	byte ptr [r14 + r15 + 1], 0x22
0x52f7:	lea	rax, [r15 + 2]
0x52fb:	cmp	r13, rax
0x52fe:	jbe	0x5306


0x5306:	lea	rax, [r15 + 3]
0x530a:	cmp	r13, rax
0x530d:	jbe	0x5315


0x5300:	mov	byte ptr [r14 + r15 + 2], 0x22
0x5306:	lea	rax, [r15 + 3]
0x530a:	cmp	r13, rax
0x530d:	jbe	0x5315


0x5315:	add	r15, 4
0x5319:	xor	edx, edx
0x531b:	xor	r12d, r12d
0x531e:	xor	eax, eax
0x5320:	mov	rbp, rcx
0x5323:	jmp	0x44e8


0x530f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x5315:	add	r15, 4
0x5319:	xor	edx, edx
0x531b:	xor	r12d, r12d
0x531e:	xor	eax, eax
0x5320:	mov	rbp, rcx
0x5323:	jmp	0x44e8


0x4ac0:	cmp	byte ptr [rsp + 0xf], 0
0x4ac5:	jne	0x5370


0x45be:	mov	byte ptr [rsp + 0x7c], r12b
0x45c3:	xor	edx, edx
0x45c5:	xor	eax, eax
0x45c7:	mov	ebx, 0x27
0x45cc:	jmp	0x44e8


0x4acb:	test	r13, r13
0x4ace:	je	0x4ed0


0x4ed0:	cmp	r13, r15
0x4ed3:	jbe	0x4eda


0x4ad4:	xor	edx, edx
0x4ad6:	cmp	qword ptr [rsp + 0x50], 0
0x4adc:	jne	0x4ed0


0x4eda:	lea	rax, [r15 + 1]
0x4ede:	cmp	r13, rax
0x4ee1:	jbe	0x4ee9


0x4ed5:	mov	byte ptr [r14 + r15], 0x27
0x4eda:	lea	rax, [r15 + 1]
0x4ede:	cmp	r13, rax
0x4ee1:	jbe	0x4ee9


0x4ae2:	mov	qword ptr [rsp + 0x50], r13
0x4ae7:	add	r15, 3
0x4aeb:	xor	eax, eax
0x4aed:	mov	byte ptr [rsp + 0x7c], r12b
0x4af2:	xor	r8d, r8d
0x4af5:	mov	r13, rdx
0x4af8:	mov	ebx, 0x27
0x4afd:	jmp	0x4519


0x4ee9:	lea	rax, [r15 + 2]
0x4eed:	cmp	r13, rax
0x4ef0:	jbe	0x54e2


0x4ee3:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x4ee9:	lea	rax, [r15 + 2]
0x4eed:	cmp	r13, rax
0x4ef0:	jbe	0x54e2


0x54e2:	mov	rdx, r13
0x54e5:	mov	r13, qword ptr [rsp + 0x50]
0x54ea:	jmp	0x4ae2


0x4ef6:	mov	rdx, r13
0x4ef9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x4eff:	mov	r13, qword ptr [rsp + 0x50]
0x4f04:	jmp	0x4ae2


0x45f4:	cmp	byte ptr [rsp + 0xd], 0
0x45f9:	jne	0x4660


0x45fb:	mov	ebx, edx
0x45fd:	xor	r12d, r12d
0x4600:	xor	eax, eax
0x4602:	cmp	byte ptr [rsp + 0xf], 0
0x4607:	jne	0x44fb


0x4660:	xor	r12d, r12d
0x4663:	cmp	dword ptr [rsp + 8], 2
0x4668:	sete	dl
0x466b:	cmp	byte ptr [rsp + 0xf], 0
0x4670:	mov	eax, edx
0x4672:	jne	0x4ec8


0x4a00:	cmp	byte ptr [rsp + 0xf], 0
0x4a05:	jne	0x5370


0x4633:	cmp	byte ptr [rsp + 0xd], 0
0x4638:	je	0x4850


0x4a0b:	add	rbp, 1
0x4a0f:	mov	eax, r8d
0x4a12:	xor	r12d, r12d
0x4a15:	mov	ebx, 0x5c
0x4a1a:	jmp	0x452c


0x4850:	mov	edx, 0x5c
0x4855:	mov	ebx, 0x5c
0x485a:	jmp	0x45f4


0x463e:	cmp	byte ptr [rsp + 0xf], 0
0x4643:	je	0x4850


0x4649:	cmp	qword ptr [rsp + 0x18], 0
0x464f:	jne	0x4a0b


0x4655:	mov	ebx, 0x5c
0x465a:	nop	word ptr [rax + rax]
0x4660:	xor	r12d, r12d
0x4663:	cmp	dword ptr [rsp + 8], 2
0x4668:	sete	dl
0x466b:	cmp	byte ptr [rsp + 0xf], 0
0x4670:	mov	eax, edx
0x4672:	jne	0x4ec8


0x46db:	xor	edx, edx
0x46dd:	test	byte ptr [rsp + 0x78], 1
0x46e2:	je	0x45fb


0x48a3:	cmp	dword ptr [rsp + 8], 2
0x48a8:	sete	dl
0x48ab:	cmp	byte ptr [rsp + 0xf], 0
0x48b0:	jne	0x544a


0x46e8:	add	rbp, 1
0x46ec:	jmp	0x43a8


0x48b6:	mov	eax, r8d
0x48b9:	mov	rcx, r15
0x48bc:	xor	eax, 1
0x48bf:	and	al, dl
0x48c1:	je	0x48f0


0x544a:	movzx	ebx, byte ptr [rsp + 0xf]
0x544f:	mov	rbp, r11
0x5452:	mov	eax, edx
0x5454:	mov	byte ptr [rsp + 0xd], bl
0x5458:	jmp	0x4e49


0x48f0:	cmp	r13, rcx
0x48f3:	jbe	0x48fa


0x48c3:	cmp	r13, r15
0x48c6:	jbe	0x48cd


0x48fa:	cmp	dword ptr [rsp + 8], 2
0x48ff:	lea	r15, [rcx + 1]
0x4903:	je	0x4f09


0x48f5:	mov	byte ptr [r14 + rcx], 0x5c
0x48fa:	cmp	dword ptr [rsp + 8], 2
0x48ff:	lea	r15, [rcx + 1]
0x4903:	je	0x4f09


0x48cd:	lea	rcx, [r15 + 1]
0x48d1:	cmp	r13, rcx
0x48d4:	jbe	0x48dc


0x48c8:	mov	byte ptr [r14 + r15], 0x27
0x48cd:	lea	rcx, [r15 + 1]
0x48d1:	cmp	r13, rcx
0x48d4:	jbe	0x48dc


0x4f09:	mov	eax, r12d
0x4f0c:	mov	ebx, 0x30
0x4f11:	xor	r12d, r12d
0x4f14:	jmp	0x4519


0x4909:	lea	rax, [rbp + 1]
0x490d:	cmp	rax, r11
0x4910:	jae	0x492b


0x48dc:	lea	rcx, [r15 + 2]
0x48e0:	cmp	r13, rcx
0x48e3:	ja	0x4f19


0x48d6:	mov	byte ptr [r14 + r15 + 1], 0x24
0x48dc:	lea	rcx, [r15 + 2]
0x48e0:	cmp	r13, rcx
0x48e3:	ja	0x4f19


0x4912:	mov	rax, qword ptr [rsp + 0x10]
0x4917:	movzx	eax, byte ptr [rax + rbp + 1]
0x491c:	mov	byte ptr [rsp + 0x28], al
0x4920:	sub	eax, 0x30
0x4923:	cmp	al, 9
0x4925:	jbe	0x5159


0x492b:	mov	eax, r12d
0x492e:	mov	ebx, 0x30
0x4933:	xor	r12d, r12d
0x4936:	jmp	0x44e8


0x48e9:	lea	rcx, [r15 + 3]
0x48ed:	mov	r8d, eax
0x48f0:	cmp	r13, rcx
0x48f3:	jbe	0x48fa


0x4f19:	mov	byte ptr [r14 + r15 + 2], 0x27
0x4f1f:	jmp	0x48e9


0x5159:	cmp	r13, r15
0x515c:	jbe	0x5163


0x5163:	lea	rax, [rcx + 2]
0x5167:	cmp	r13, rax
0x516a:	jbe	0x5172


0x515e:	mov	byte ptr [r14 + r15], 0x30
0x5163:	lea	rax, [rcx + 2]
0x5167:	cmp	r13, rax
0x516a:	jbe	0x5172


0x5172:	mov	eax, r12d
0x5175:	lea	r15, [rcx + 3]
0x5179:	xor	r12d, r12d
0x517c:	mov	ebx, 0x30
0x5181:	jmp	0x44e8


0x516c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x5172:	mov	eax, r12d
0x5175:	lea	r15, [rcx + 3]
0x5179:	xor	r12d, r12d
0x517c:	mov	ebx, 0x30
0x5181:	jmp	0x44e8


0x45e2:	cmp	dword ptr [rsp + 8], 2
0x45e7:	sete	al
0x45ea:	and	al, byte ptr [rsp + 0xf]
0x45ee:	jne	0x473e


0x49a0:	mov	edx, 0xd
0x49a5:	xor	r10d, r10d
0x49a8:	mov	ebx, 0x72
0x49ad:	jmp	0x45e2


0x4f24:	test	ebx, ebx
0x4f26:	jne	0x4353


0x4f2c:	mov	byte ptr [rsp + 0xd], 1
0x4f31:	test	r13, r13
0x4f34:	jne	0x54ca


0x4f3a:	lea	rax, [rip + 0x6a4c]
0x4f41:	mov	qword ptr [rsp + 0x50], 0
0x4f4a:	mov	byte ptr [rsp + 0xe], 1
0x4f4f:	mov	byte ptr [rsp + 0x7c], 0
0x4f54:	xor	r12d, r12d
0x4f57:	mov	byte ptr [rsp + 0xf], 0
0x4f5c:	mov	qword ptr [rsp + 0x18], 1
0x4f65:	mov	qword ptr [rsp + 0x48], rax
0x4f6a:	mov	r15d, 1
0x4f70:	mov	dword ptr [rsp + 8], 2
0x4f78:	jmp	0x4393


0x54ca:	mov	byte ptr [rsp + 0xe], 1
0x54cf:	xor	eax, eax
0x54d1:	xor	r12d, r12d
0x54d4:	mov	qword ptr [rsp + 0x50], 0
0x54dd:	jmp	0x4a84


0x4a84:	lea	rbx, [rip + 0x6f02]
0x4a8b:	mov	byte ptr [r14], 0x27
0x4a8f:	mov	dword ptr [rsp + 8], 2
0x4a97:	mov	r15d, 1
0x4a9d:	mov	qword ptr [rsp + 0x18], 1
0x4aa6:	mov	byte ptr [rsp + 0xf], 0
0x4aab:	mov	qword ptr [rsp + 0x48], rbx
0x4ab0:	mov	byte ptr [rsp + 0x7c], al
0x4ab4:	jmp	0x4393


0x4f88:	test	r13, r13
0x4f8b:	je	0x51b6


0x537d:	lea	rax, [rip + 0x6607]
0x5384:	mov	byte ptr [rsp + 0xe], 1
0x5389:	mov	byte ptr [rsp + 0x7c], 0
0x538e:	xor	r12d, r12d
0x5391:	mov	qword ptr [rsp + 0x50], 0
0x539a:	mov	byte ptr [rsp + 0xf], 1
0x539f:	mov	byte ptr [rsp + 0xd], 1
0x53a4:	mov	qword ptr [rsp + 0x18], 1
0x53ad:	xor	r15d, r15d
0x53b0:	mov	qword ptr [rsp + 0x48], rax
0x53b5:	jmp	0x4393


0x51b6:	mov	qword ptr [rsp + 0x50], 0
0x51bf:	mov	byte ptr [rsp + 0xe], 1
0x51c4:	xor	r12d, r12d
0x51c7:	mov	byte ptr [rsp + 0x7c], 0
0x51cc:	jmp	0x4fab


0x4f91:	mov	byte ptr [r14], 0x22
0x4f95:	mov	byte ptr [rsp + 0xe], 1
0x4f9a:	xor	r12d, r12d
0x4f9d:	mov	byte ptr [rsp + 0x7c], 0
0x4fa2:	mov	qword ptr [rsp + 0x50], 0
0x4fab:	lea	rax, [rip + 0x69d9]
0x4fb2:	mov	byte ptr [rsp + 0xf], 0
0x4fb7:	mov	byte ptr [rsp + 0xd], 1
0x4fbc:	mov	qword ptr [rsp + 0x18], 1
0x4fc5:	mov	r15d, 1
0x4fcb:	mov	qword ptr [rsp + 0x48], rax
0x4fd0:	jmp	0x4393


0x4fab:	lea	rax, [rip + 0x69d9]
0x4fb2:	mov	byte ptr [rsp + 0xf], 0
0x4fb7:	mov	byte ptr [rsp + 0xd], 1
0x4fbc:	mov	qword ptr [rsp + 0x18], 1
0x4fc5:	mov	r15d, 1
0x4fcb:	mov	qword ptr [rsp + 0x48], rax
0x4fd0:	jmp	0x4393


0x4fd5:	lea	rax, [rip + 0x69af]
0x4fdc:	mov	byte ptr [rsp + 0xe], 1
0x4fe1:	mov	byte ptr [rsp + 0x7c], 0
0x4fe6:	xor	r12d, r12d
0x4fe9:	mov	qword ptr [rsp + 0x50], 0
0x4ff2:	mov	byte ptr [rsp + 0xf], 1
0x4ff7:	mov	byte ptr [rsp + 0xd], 1
0x4ffc:	mov	qword ptr [rsp + 0x18], 1
0x5005:	xor	r15d, r15d
0x5008:	mov	qword ptr [rsp + 0x48], rax
0x500d:	mov	dword ptr [rsp + 8], 5
0x5015:	jmp	0x4393


0x501a:	mov	byte ptr [rsp + 0xe], 1
0x501f:	mov	byte ptr [rsp + 0x7c], 0
0x5024:	xor	r12d, r12d
0x5027:	mov	qword ptr [rsp + 0x50], 0
0x5030:	mov	byte ptr [rsp + 0xf], 0
0x5035:	xor	r15d, r15d
0x5038:	mov	byte ptr [rsp + 0xd], 1
0x503d:	mov	qword ptr [rsp + 0x18], 0
0x5046:	mov	qword ptr [rsp + 0x48], 0
0x504f:	jmp	0x4393


0x5054:	cmp	dword ptr [rsp + 8], 0xa
0x5059:	je	0x50b1


0x50b1:	xor	r15d, r15d
0x50b4:	test	ebx, ebx
0x50b6:	je	0x527d


0x505b:	lea	rsi, [rip + 0x692d]
0x5062:	xor	edi, edi
0x5064:	mov	edx, 5
0x5069:	call	0x1a60


0x527d:	mov	rdx, qword ptr [rsp + 0x68]
0x5282:	movzx	eax, byte ptr [rdx]
0x5285:	test	al, al
0x5287:	je	0x50bc


0x50bc:	test	ebx, ebx
0x50be:	mov	rbx, qword ptr [rsp + 0x60]
0x50c3:	setne	byte ptr [rsp + 0xf]
0x50c8:	xor	r12d, r12d
0x50cb:	mov	rdi, rbx
0x50ce:	call	0x1a80


0x5299:	add	r15, 1
0x529d:	movzx	eax, byte ptr [rdx + r15]
0x52a2:	test	al, al
0x52a4:	jne	0x5290


0x5295:	mov	byte ptr [r14 + r15], al
0x5299:	add	r15, 1
0x529d:	movzx	eax, byte ptr [rdx + r15]
0x52a2:	test	al, al
0x52a4:	jne	0x5290


0x52a6:	jmp	0x50bc


0x5290:	cmp	r13, r15
0x5293:	jbe	0x5299


0x50d3:	mov	qword ptr [rsp + 0x48], rbx
0x50d8:	mov	qword ptr [rsp + 0x18], rax
0x50dd:	mov	byte ptr [rsp + 0xe], 1
0x50e2:	mov	byte ptr [rsp + 0x7c], 0
0x50e7:	mov	qword ptr [rsp + 0x50], 0
0x50f0:	mov	byte ptr [rsp + 0xd], 1
0x50f5:	jmp	0x4393


0x506e:	mov	rcx, rax
0x5071:	mov	qword ptr [rsp + 0x68], rax
0x5076:	lea	rax, [rip + 0x6912]
0x507d:	cmp	rcx, rax
0x5080:	je	0x541e


0x541e:	mov	esi, dword ptr [rsp + 8]
0x5422:	mov	rdi, rcx
0x5425:	call	0x41d0


0x5086:	lea	rsi, [rip + 0x6900]
0x508d:	xor	edi, edi
0x508f:	mov	edx, 5
0x5094:	call	0x1a60


0x5099:	mov	rcx, rax
0x509c:	mov	qword ptr [rsp + 0x60], rax
0x50a1:	lea	rax, [rip + 0x68e5]
0x50a8:	cmp	rcx, rax
0x50ab:	je	0x5434


0x5434:	mov	esi, dword ptr [rsp + 8]
0x5438:	mov	rdi, rcx
0x543b:	call	0x41d0


0x5440:	mov	qword ptr [rsp + 0x60], rax
0x5445:	jmp	0x50b1


0x542a:	mov	qword ptr [rsp + 0x68], rax
0x542f:	jmp	0x5086


0x50fa:	mov	byte ptr [rsp + 0xe], 1
0x50ff:	mov	byte ptr [rsp + 0x7c], 0
0x5104:	xor	r12d, r12d
0x5107:	mov	qword ptr [rsp + 0x50], 0
0x5110:	mov	byte ptr [rsp + 0xf], 0
0x5115:	xor	r15d, r15d
0x5118:	mov	byte ptr [rsp + 0xd], 0
0x511d:	mov	qword ptr [rsp + 0x18], 0
0x5126:	mov	qword ptr [rsp + 0x48], 0
0x512f:	jmp	0x4393


0x5134:	mov	byte ptr [rsp + 0xe], 1
0x5139:	mov	byte ptr [rsp + 0x7c], 0
0x513e:	xor	r12d, r12d
0x5141:	mov	qword ptr [rsp + 0x50], 0
0x514a:	mov	byte ptr [rsp + 0xf], 1
0x514f:	mov	byte ptr [rsp + 0xd], 1
0x5154:	jmp	0x4373


0x4373:	lea	rax, [rip + 0x7613]
0x437a:	mov	qword ptr [rsp + 0x18], 1
0x4383:	xor	r15d, r15d
0x4386:	mov	dword ptr [rsp + 8], 2
0x438e:	mov	qword ptr [rsp + 0x48], rax
0x4393:	xor	r11d, r11d
0x4396:	mov	rax, rbp
0x4399:	mov	r8d, r12d
0x439c:	mov	rbp, r11
0x439f:	mov	r11, rax
0x43a2:	nop	word ptr [rax + rax]
0x43a8:	cmp	r11, rbp
0x43ab:	setne	r12b
0x43af:	cmp	r11, -1
0x43b3:	jne	0x43c2


0x5328:	test	ebx, ebx
0x532a:	je	0x54b8


0x54b8:	mov	byte ptr [rsp + 0xd], 0
0x54bd:	jmp	0x4f31


0x5330:	lea	rax, [rip + 0x6656]
0x5337:	mov	byte ptr [rsp + 0xe], 1
0x533c:	mov	byte ptr [rsp + 0x7c], 0
0x5341:	xor	r12d, r12d
0x5344:	mov	qword ptr [rsp + 0x50], 0
0x534d:	mov	byte ptr [rsp + 0xf], 1
0x5352:	mov	byte ptr [rsp + 0xd], 0
0x5357:	mov	qword ptr [rsp + 0x18], 1
0x5360:	xor	r15d, r15d
0x5363:	mov	qword ptr [rsp + 0x48], rax
0x5368:	jmp	0x4393


0x4f31:	test	r13, r13
0x4f34:	jne	0x54ca


0x54f4:	nop	
0x54f6:	nop	word ptr cs:[rax + rax]


0x56ab:	nop	dword ptr [rax + rax]


0x56e6:	nop	word ptr cs:[rax + rax]


0x5701:	nop	dword ptr [rax + rax]
0x5706:	nop	word ptr cs:[rax + rax]


0x5721:	nop	dword ptr [rax + rax]
0x5726:	nop	word ptr cs:[rax + rax]


0x5765:	nop	
0x5766:	nop	word ptr cs:[rax + rax]


0x5785:	nop	
0x5786:	nop	word ptr cs:[rax + rax]


0x5834:	nop	
0x5836:	nop	word ptr cs:[rax + rax]


0x5923:	nop	dword ptr [rax]
0x5926:	nop	word ptr cs:[rax + rax]


0x593a:	nop	word ptr [rax + rax]


0x59d3:	nop	dword ptr [rax]
0x59d6:	nop	word ptr cs:[rax + rax]


0x59f3:	nop	dword ptr [rax]
0x59f6:	nop	word ptr cs:[rax + rax]


0x5a0c:	nop	dword ptr [rax]


0x5a28:	nop	dword ptr [rax + rax]


0x5a44:	nop	
0x5a46:	nop	word ptr cs:[rax + rax]


0x5ade:	nop	


0x5b6a:	nop	word ptr [rax + rax]


0x5b7c:	nop	dword ptr [rax]


0x5b8f:	nop	


0x5c28:	nop	dword ptr [rax + rax]


0x5c51:	nop	dword ptr [rax + rax]
0x5c56:	nop	word ptr cs:[rax + rax]


0x5c6a:	nop	word ptr [rax + rax]


0x5cfe:	nop	


0x5d91:	nop	dword ptr [rax + rax]
0x5d96:	nop	word ptr cs:[rax + rax]


0x5dac:	nop	dword ptr [rax]


0x5dc7:	nop	word ptr [rax + rax]


0x5de3:	nop	dword ptr [rax]
0x5de6:	nop	word ptr cs:[rax + rax]


0x5dfc:	nop	dword ptr [rax]


0x5e14:	nop	
0x5e16:	nop	word ptr cs:[rax + rax]


0x5e33:	nop	dword ptr [rax]
0x5e36:	nop	word ptr cs:[rax + rax]


0x5e58:	nop	dword ptr [rax + rax]


0x5ed1:	nop	word ptr cs:[rax + rax]
0x5edb:	nop	dword ptr [rax + rax]


0x62f7:	nop	word ptr [rax + rax]


0x6398:	nop	dword ptr [rax + rax]


0x6475:	nop	
0x6476:	nop	word ptr cs:[rax + rax]


0x6538:	nop	dword ptr [rax + rax]


0x655a:	nop	word ptr [rax + rax]


0x6584:	nop	
0x6586:	nop	word ptr cs:[rax + rax]


0x6592:	nop	dword ptr [rax]
0x6596:	nop	word ptr cs:[rax + rax]


0x65d6:	nop	word ptr cs:[rax + rax]


0x6604:	nop	
0x6606:	nop	word ptr cs:[rax + rax]


0x6692:	nop	dword ptr [rax]
0x6696:	nop	word ptr cs:[rax + rax]


0x66ea:	nop	word ptr [rax + rax]


0x6707:	nop	word ptr [rax + rax]


0x673e:	nop	


0x6768:	nop	dword ptr [rax + rax]


0x6783:	nop	word ptr cs:[rax + rax]
0x678d:	nop	dword ptr [rax]


0x67c5:	nop	word ptr cs:[rax + rax]
0x67cf:	nop	


0x681f:	nop	


0x6849:	nop	dword ptr [rax]


0x68e7:	nop	word ptr [rax + rax]


0x6959:	nop	dword ptr [rax]


0x69b7:	nop	word ptr [rax + rax]


0x69da:	nop	word ptr [rax + rax]


0x69ed:	nop	dword ptr [rax]


0x69fc:	nop	dword ptr [rax]


0x6a0a:	nop	word ptr [rax + rax]


0x6a36:	nop	word ptr cs:[rax + rax]


0x6c05:	nop	
0x6c06:	nop	word ptr cs:[rax + rax]


0x6d15:	nop	
0x6d16:	nop	word ptr cs:[rax + rax]


0x6daa:	nop	word ptr [rax + rax]


0x6df2:	nop	dword ptr [rax]
0x6df6:	nop	word ptr cs:[rax + rax]


0x6e39:	nop	dword ptr [rax]


0x6f6c:	nop	dword ptr [rax]


0x6fda:	nop	word ptr [rax + rax]


0x7046:	nop	word ptr cs:[rax + rax]


0x70ac:	nop	dword ptr [rax]


0x711b:	nop	dword ptr [rax + rax]


0x7183:	nop	dword ptr [rax]
0x7186:	nop	word ptr cs:[rax + rax]


0x71ca:	nop	word ptr [rax + rax]


0x744a:	nop	word ptr [rax + rax]


0x74ff:	nop	


0x75b8:	nop	dword ptr [rax + rax]


0x7f91:	nop	dword ptr [rax + rax]
0x7f96:	nop	word ptr cs:[rax + rax]


0x834a:	nop	word ptr [rax + rax]


0x84d2:	nop	dword ptr [rax]
0x84d6:	nop	word ptr cs:[rax + rax]


0x8c58:	nop	dword ptr [rax + rax]


0x8c89:	nop	dword ptr [rax]


0x8dde:	nop	


0x8e63:	nop	word ptr cs:[rax + rax]
0x8e6d:	nop	dword ptr [rax]


0x8eed:	nop	dword ptr [rax]


0x8f8a:	nop	word ptr [rax + rax]


0x8ffe:	nop	


0x90f3:	nop	dword ptr [rax]
0x90f6:	nop	word ptr cs:[rax + rax]


0x9117:	nop	word ptr [rax + rax]


0x9142:	nop	dword ptr [rax]
0x9146:	nop	word ptr cs:[rax + rax]


0x926e:	nop	


0x92e7:	nop	word ptr [rax + rax]


0x9435:	nop	
0x9436:	nop	word ptr cs:[rax + rax]


0x9445:	nop	
0x9446:	nop	word ptr cs:[rax + rax]


0x9455:	nop	
0x9456:	nop	word ptr cs:[rax + rax]


0x94a9:	nop	dword ptr [rax]


0x9508:	nop	dword ptr [rax + rax]


0x9657:	nop	word ptr [rax + rax]


0x96bb:	nop	dword ptr [rax + rax]


0x9701:	nop	dword ptr [rax + rax]
0x9706:	nop	word ptr cs:[rax + rax]


0x9782:	nop	dword ptr [rax]
0x9786:	nop	word ptr cs:[rax + rax]


0x97f5:	nop	
0x97f6:	nop	word ptr cs:[rax + rax]


0x986a:	nop	word ptr [rax + rax]


0x98a1:	nop	dword ptr [rax + rax]
0x98a6:	nop	word ptr cs:[rax + rax]


0x9a84:	nop	
0x9a86:	nop	word ptr cs:[rax + rax]


0x9bf6:	nop	word ptr cs:[rax + rax]


0x9e3e:	nop	


0xa0c4:	nop	
0xa0c6:	nop	word ptr cs:[rax + rax]


0xa129:	nop	dword ptr [rax]


0xa333:	nop	word ptr cs:[rax + rax]
0xa33d:	nop	dword ptr [rax]


0xa35b:	nop	dword ptr [rax + rax]


0xa365:	nop	
0xa366:	nop	word ptr cs:[rax + rax]


0xa3a5:	nop	
0xa3a6:	nop	word ptr cs:[rax + rax]


0xa3ee:	nop	


0xa42c:	nop	dword ptr [rax]


0xa49e:	nop	


0xa55f:	nop	


0xa5db:	nop	dword ptr [rax + rax]


0xa85e:	nop	


0xa86e:	nop	


0xa8d5:	nop	
0xa8d6:	nop	word ptr cs:[rax + rax]


0xa8e2:	nop	word ptr cs:[rax + rax]
0xa8ec:	nop	dword ptr [rax]


0x3130:	mov	rdx, qword ptr [r15 + 0x38]
0x3134:	mov	esi, 3
0x3139:	xor	edi, edi
0x313b:	call	0x5c70


0x31f0:	cmp	dx, 6
0x31f4:	jne	0x3218


0x3280:	mov	rdx, qword ptr [r15 + 0x38]
0x3284:	mov	esi, 3
0x3289:	xor	edi, edi
0x328b:	call	0x5c70


0x32b8:	cmp	byte ptr [r13 + 9], 0
0x32bd:	jne	0x3378


0x4580:	xor	r10d, r10d
0x4583:	mov	eax, dword ptr [rsp + 8]
0x4587:	cmp	eax, 2
0x458a:	je	0x4b48


0x45b0:	xor	r10d, r10d
0x45b3:	cmp	dword ptr [rsp + 8], 2
0x45b8:	je	0x4ac0


0x45d8:	mov	edx, 9
0x45dd:	mov	ebx, 0x74
0x45e2:	cmp	dword ptr [rsp + 8], 2
0x45e7:	sete	al
0x45ea:	and	al, byte ptr [rsp + 0xf]
0x45ee:	jne	0x473e


0x4618:	mov	edx, 8
0x461d:	mov	ebx, 0x62
0x4622:	jmp	0x45f4


0x4628:	cmp	dword ptr [rsp + 8], 2
0x462d:	je	0x4a00


0x46d0:	cmp	byte ptr [rsp + 0xd], 0
0x46d5:	jne	0x48a3


0x46f8:	cmp	dword ptr [rsp + 8], 2
0x46fd:	sete	dl
0x4700:	xor	eax, eax
0x4702:	jmp	0x44e8


0x4710:	mov	edx, 7
0x4715:	mov	ebx, 0x61
0x471a:	jmp	0x45f4


0x4720:	cmp	dword ptr [rsp + 8], 2
0x4725:	sete	dl
0x4728:	test	rbp, rbp
0x472b:	jne	0x44dc


0x4750:	cmp	dword ptr [rsp + 8], 2
0x4755:	sete	dl
0x4758:	xor	r12d, r12d
0x475b:	jmp	0x4731


0x4760:	cmp	dword ptr [rsp + 8], 2
0x4765:	mov	ebx, 0x20
0x476a:	sete	dl
0x476d:	jmp	0x4731


0x4770:	mov	edx, 0xd
0x4775:	mov	ebx, 0x72
0x477a:	jmp	0x45e2


0x4780:	mov	edx, 0xc
0x4785:	mov	ebx, 0x66
0x478a:	jmp	0x45f4


0x4790:	mov	edx, 0xb
0x4795:	mov	ebx, 0x76
0x479a:	jmp	0x45f4


0x47a0:	mov	edx, 0xa
0x47a5:	mov	ebx, 0x6e
0x47aa:	jmp	0x45e2


0x4840:	xor	r10d, r10d
0x4843:	cmp	byte ptr [rsp + 0xd], 0
0x4848:	jne	0x463e


0x4860:	mov	edx, 0xc
0x4865:	xor	r10d, r10d
0x4868:	mov	ebx, 0x66
0x486d:	jmp	0x45f4


0x4878:	mov	edx, 0xa
0x487d:	xor	r10d, r10d
0x4880:	mov	ebx, 0x6e
0x4885:	jmp	0x45e2


0x4890:	mov	ebx, 0x61
0x4895:	jmp	0x4660


0x48a0:	xor	r10d, r10d
0x48a3:	cmp	dword ptr [rsp + 8], 2
0x48a8:	sete	dl
0x48ab:	cmp	byte ptr [rsp + 0xf], 0
0x48b0:	jne	0x544a


0x4940:	cmp	dword ptr [rsp + 8], 2
0x4945:	mov	r12d, r10d
0x4948:	sete	dl
0x494b:	xor	r10d, r10d
0x494e:	xor	eax, eax
0x4950:	jmp	0x44e8


0x4958:	cmp	dword ptr [rsp + 8], 2
0x495d:	sete	dl
0x4960:	xor	r10d, r10d
0x4963:	jmp	0x4728


0x4970:	cmp	dword ptr [rsp + 8], 2
0x4975:	sete	dl
0x4978:	xor	r10d, r10d
0x497b:	xor	r12d, r12d
0x497e:	jmp	0x4731


0x4988:	cmp	dword ptr [rsp + 8], 2
0x498d:	mov	r12d, r10d
0x4990:	mov	ebx, 0x20
0x4995:	sete	dl
0x4998:	xor	r10d, r10d
0x499b:	jmp	0x4731


0x49b8:	mov	ebx, 0x76
0x49bd:	jmp	0x4660


0x49c8:	mov	edx, 9
0x49cd:	xor	r10d, r10d
0x49d0:	mov	ebx, 0x74
0x49d5:	jmp	0x45e2


0x49e0:	mov	ebx, 0x62
0x49e5:	jmp	0x4660


0x4f80:	test	ebx, ebx
0x4f82:	jne	0x537d


0x1ecf:	nop	


0x1f05:	nop	dword ptr [rax]


0x1f6d:	nop	dword ptr [rax]


0x1f84:	nop	dword ptr [rax]


0x1f9f:	nop	


0x1ffd:	nop	dword ptr [rax]


0x200a:	nop	word ptr [rax + rax]


0x203b:	nop	dword ptr [rax + rax]


0x2077:	nop	word ptr [rax + rax]


0x208a:	nop	word ptr [rax + rax]


0x23e6:	nop	word ptr cs:[rax + rax]


0x2437:	nop	word ptr [rax + rax]


0x2481:	nop	dword ptr [rax]


0x296a:	nop	word ptr [rax + rax]


0x29ab:	nop	dword ptr [rax + rax]


0x29fe:	nop	


0x2a24:	nop	dword ptr [rax]


0x2a71:	nop	dword ptr [rax]


0x2aac:	nop	dword ptr [rax]


0x2ae6:	nop	word ptr cs:[rax + rax]


0x2b03:	nop	dword ptr [rax + rax]


0x2b57:	nop	word ptr [rax + rax]


0x2b99:	nop	dword ptr [rax]


0x2dde:	nop	


0x2dea:	nop	word ptr [rax + rax]


0x2e16:	nop	word ptr cs:[rax + rax]


0x2ea9:	nop	dword ptr [rax]


0x2ec1:	nop	dword ptr [rax]


0x2ef7:	nop	word ptr [rax + rax]


0x2f47:	nop	word ptr [rax + rax]


0x2f75:	nop	dword ptr [rax]


0x2fa4:	nop	dword ptr [rax]


0x3011:	nop	dword ptr [rax]


0x302b:	nop	dword ptr [rax + rax]


0x3066:	nop	word ptr cs:[rax + rax]


0x312e:	nop	


0x31e7:	nop	word ptr [rax + rax]


0x3212:	nop	word ptr [rax + rax]


0x3279:	nop	dword ptr [rax]


0x32b3:	nop	dword ptr [rax + rax]


0x3371:	nop	dword ptr [rax]


0x33ee:	nop	


0x342f:	nop	


0x347a:	nop	word ptr [rax + rax]


0x34a3:	nop	dword ptr [rax + rax]


0x350c:	nop	dword ptr [rax]


0x35a2:	nop	word ptr [rax + rax]


0x3637:	nop	word ptr [rax + rax]


0x36b2:	nop	word ptr [rax + rax]


0x371d:	nop	dword ptr [rax]


0x37b4:	nop	dword ptr [rax]


0x37c5:	nop	dword ptr [rax]


0x3821:	nop	dword ptr [rax]


0x3946:	nop	word ptr cs:[rax + rax]


0x39d3:	nop	dword ptr [rax + rax]


0x3a07:	nop	word ptr [rax + rax]


0x3a7d:	nop	dword ptr [rax]


0x3aef:	nop	


0x3b74:	nop	dword ptr [rax]


0x3ba3:	nop	dword ptr [rax + rax]


0x3c4f:	nop	


0x3cc1:	nop	dword ptr [rax]


0x3ce1:	nop	dword ptr [rax]


0x3d43:	nop	dword ptr [rax + rax]


0x3d7c:	nop	dword ptr [rax]


0x3e7b:	nop	dword ptr [rax + rax]


0x3e97:	nop	word ptr [rax + rax]


0x3eec:	nop	dword ptr [rax]


0x3f0e:	nop	


0x3f7c:	nop	dword ptr [rax]


0x3f95:	nop	dword ptr [rax]


0x3fa6:	nop	word ptr cs:[rax + rax]


0x3fbe:	nop	


0x3fce:	nop	


0x3fde:	nop	


0x3fee:	nop	


0x3ffe:	nop	


0x409c:	nop	dword ptr [rax]


0x4118:	nop	dword ptr [rax + rax]


0x420c:	nop	dword ptr [rax]


0x425d:	nop	dword ptr [rax]


0x4488:	nop	dword ptr [rax + rax]


0x4577:	nop	word ptr [rax + rax]


0x45ae:	nop	


0x45d1:	nop	dword ptr [rax]


0x4612:	nop	word ptr [rax + rax]


0x4624:	nop	dword ptr [rax]


0x46c8:	nop	dword ptr [rax + rax]


0x46f1:	nop	dword ptr [rax]


0x4707:	nop	word ptr [rax + rax]


0x471f:	nop	


0x474e:	nop	


0x475d:	nop	dword ptr [rax]


0x476f:	nop	


0x477f:	nop	


0x478f:	nop	


0x479f:	nop	


0x47af:	nop	


0x481c:	nop	dword ptr [rax]


0x483c:	nop	dword ptr [rax]


0x484e:	nop	


0x485f:	nop	


0x4872:	nop	word ptr [rax + rax]


0x488a:	nop	word ptr [rax + rax]


0x489a:	nop	word ptr [rax + rax]


0x493b:	nop	dword ptr [rax + rax]


0x4955:	nop	dword ptr [rax]


0x4968:	nop	dword ptr [rax + rax]


0x4983:	nop	dword ptr [rax + rax]


0x49b2:	nop	word ptr [rax + rax]


0x49c2:	nop	word ptr [rax + rax]


0x49da:	nop	word ptr [rax + rax]


0x49ea:	nop	word ptr [rax + rax]


0x49f8:	nop	dword ptr [rax + rax]


0x4a1f:	nop	


0x4ab9:	nop	dword ptr [rax]


0x4b02:	nop	word ptr [rax + rax]


0x4b28:	nop	dword ptr [rax + rax]


0x4b41:	nop	dword ptr [rax]


0x4b62:	nop	word ptr [rax + rax]


0x4cc8:	nop	dword ptr [rax + rax]


0x4ddb:	nop	dword ptr [rax + rax]


0x4dfe:	nop	


0x4ec5:	nop	dword ptr [rax]


0x4f7d:	nop	dword ptr [rax]


0x5186:	nop	word ptr cs:[rax + rax]


0x5219:	nop	dword ptr [rax]


0x528d:	nop	dword ptr [rax]


0x536d:	nop	dword ptr [rax]


0x567b:	nop	dword ptr [rax + rax]


0x5ec5:	nop	dword ptr [rax]


0x5f86:	nop	word ptr cs:[rax + rax]


0x6015:	nop	dword ptr [rax]


0x6036:	nop	word ptr cs:[rax + rax]


0x6095:	nop	dword ptr [rax]


0x60d1:	nop	dword ptr [rax]


0x6118:	nop	dword ptr [rax + rax]


0x6167:	nop	word ptr [rax + rax]


0x61c4:	nop	dword ptr [rax]


0x61f2:	nop	word ptr [rax + rax]


0x62a6:	nop	word ptr cs:[rax + rax]


0x6309:	nop	dword ptr [rax]


0x6511:	nop	dword ptr [rax]


0x65c2:	nop	word ptr [rax + rax]


0x6649:	nop	dword ptr [rax]


0x6674:	nop	dword ptr [rax]


0x66cd:	nop	dword ptr [rax]


0x67e9:	nop	dword ptr [rax]


0x67ff:	nop	


0x6839:	nop	dword ptr [rax]


0x68d4:	nop	dword ptr [rax]


0x6913:	nop	dword ptr [rax + rax]


0x696f:	nop	


0x69ce:	nop	


0x6a2d:	nop	dword ptr [rax]


0x6abd:	nop	dword ptr [rax]


0x6b1c:	nop	dword ptr [rax]


0x6b7b:	nop	dword ptr [rax + rax]


0x6b8c:	nop	dword ptr [rax]


0x6bae:	nop	


0x6bb9:	nop	dword ptr [rax]


0x6bd2:	nop	word ptr [rax + rax]


0x6be2:	nop	word ptr [rax + rax]


0x6ca9:	nop	dword ptr [rax]


0x6cdd:	nop	dword ptr [rax]


0x6d07:	nop	word ptr [rax + rax]


0x6de9:	nop	dword ptr [rax]


0x6e06:	nop	word ptr cs:[rax + rax]


0x6e2a:	nop	word ptr [rax + rax]


0x6e97:	nop	word ptr [rax + rax]


0x6ef8:	nop	dword ptr [rax + rax]


0x6fa7:	nop	word ptr [rax + rax]


0x6fcc:	nop	dword ptr [rax]


0x700f:	nop	


0x702e:	nop	


0x708a:	nop	word ptr [rax + rax]


0x70a1:	nop	dword ptr [rax]


0x70e1:	nop	dword ptr [rax]


0x7103:	nop	dword ptr [rax + rax]


0x7158:	nop	dword ptr [rax + rax]


0x71b8:	nop	dword ptr [rax + rax]


0x727a:	nop	word ptr [rax + rax]


0x72bd:	nop	dword ptr [rax]


0x7358:	nop	dword ptr [rax + rax]


0x737f:	nop	


0x738f:	nop	


0x73d5:	nop	dword ptr [rax]


0x73f8:	nop	dword ptr [rax + rax]


0x74cb:	nop	dword ptr [rax + rax]


0x74f2:	nop	word ptr [rax + rax]


0x755a:	nop	word ptr [rax + rax]


0x758e:	nop	


0x76b2:	nop	word ptr [rax + rax]


0x786b:	nop	dword ptr [rax + rax]


0x78c3:	nop	dword ptr [rax + rax]


0x78e5:	nop	dword ptr [rax]


0x7917:	nop	word ptr [rax + rax]


0x795c:	nop	dword ptr [rax]


0x7983:	nop	dword ptr [rax + rax]


0x7992:	nop	word ptr [rax + rax]


0x79ad:	nop	dword ptr [rax]


0x79cb:	nop	dword ptr [rax + rax]


0x7a04:	nop	dword ptr [rax]


0x7a1f:	nop	


0x7a2a:	nop	word ptr [rax + rax]


0x7b42:	nop	word ptr [rax + rax]


0x7b5a:	nop	word ptr [rax + rax]


0x7bad:	nop	dword ptr [rax]


0x7bf9:	nop	dword ptr [rax]


0x7c0a:	nop	word ptr [rax + rax]


0x7c61:	nop	dword ptr [rax]


0x7d38:	nop	dword ptr [rax + rax]


0x7d8d:	nop	dword ptr [rax]


0x7db5:	nop	dword ptr [rax]


0x7de5:	nop	dword ptr [rax]


0x7dff:	nop	


0x7e0e:	nop	


0x7f1a:	nop	word ptr [rax + rax]


0x80e5:	nop	dword ptr [rax]


0x818e:	nop	


0x81aa:	nop	word ptr [rax + rax]


0x8289:	nop	dword ptr [rax]


0x82ce:	nop	


0x82eb:	nop	dword ptr [rax + rax]


0x8318:	nop	dword ptr [rax + rax]


0x8334:	nop	dword ptr [rax]


0x836b:	nop	dword ptr [rax + rax]


0x841d:	nop	dword ptr [rax]


0x8427:	nop	word ptr [rax + rax]


0x8456:	nop	word ptr cs:[rax + rax]


0x8479:	nop	dword ptr [rax]


0x84b2:	nop	word ptr [rax + rax]


0x8533:	nop	dword ptr [rax + rax]


0x860c:	nop	dword ptr [rax]


0x8686:	nop	word ptr cs:[rax + rax]


0x86b5:	nop	dword ptr [rax]


0x86d4:	nop	dword ptr [rax]


0x874a:	nop	word ptr [rax + rax]


0x875f:	nop	


0x877a:	nop	word ptr [rax + rax]


0x8882:	nop	word ptr [rax + rax]


0x88d4:	nop	dword ptr [rax]


0x8924:	nop	dword ptr [rax]


0x896f:	nop	


0x8981:	nop	dword ptr [rax]


0x89a8:	nop	dword ptr [rax + rax]


0x8a64:	nop	dword ptr [rax]


0x8ad9:	nop	dword ptr [rax]


0x8b16:	nop	word ptr cs:[rax + rax]


0x8c6c:	nop	dword ptr [rax]


0x8d2d:	nop	dword ptr [rax]


0x8d3d:	nop	dword ptr [rax]


0x8d4b:	nop	dword ptr [rax + rax]


0x8d92:	nop	word ptr [rax + rax]


0x8da5:	nop	dword ptr [rax]


0x8ea4:	nop	dword ptr [rax]


0x8ec1:	nop	dword ptr [rax]


0x8ed2:	nop	word ptr [rax + rax]


0x8f2c:	nop	dword ptr [rax]


0x8f45:	nop	dword ptr [rax]


0x8f57:	nop	word ptr [rax + rax]


0x8fd4:	nop	dword ptr [rax]


0x903a:	nop	word ptr [rax + rax]


0x9081:	nop	dword ptr [rax]


0x90be:	nop	


0x91ab:	nop	dword ptr [rax + rax]


0x920a:	nop	word ptr [rax + rax]


0x9249:	nop	dword ptr [rax]


0x9259:	nop	dword ptr [rax]


0x92de:	nop	


0x9331:	nop	dword ptr [rax]


0x93fc:	nop	dword ptr [rax]


0x940a:	nop	word ptr [rax + rax]


0x946e:	nop	


0x9484:	nop	dword ptr [rax]


0x94d7:	nop	word ptr [rax + rax]


0x9537:	nop	word ptr [rax + rax]


0x9554:	nop	dword ptr [rax]


0x960b:	nop	dword ptr [rax + rax]


0x967c:	nop	dword ptr [rax]


0x96a7:	nop	word ptr [rax + rax]


0x96db:	nop	dword ptr [rax + rax]


0x9733:	nop	dword ptr [rax + rax]


0x9754:	nop	dword ptr [rax]


0x9772:	nop	word ptr [rax + rax]


0x97ba:	nop	word ptr [rax + rax]


0x97eb:	nop	dword ptr [rax + rax]


0x982f:	nop	


0x9879:	nop	dword ptr [rax]


0x99bf:	nop	


0x99dc:	nop	dword ptr [rax]


0x9a3f:	nop	


0x9a66:	nop	word ptr cs:[rax + rax]


0x9ab5:	nop	dword ptr [rax]


0x9b41:	nop	dword ptr [rax]


0x9b56:	nop	word ptr cs:[rax + rax]


0x9b88:	nop	dword ptr [rax + rax]


0x9b99:	nop	dword ptr [rax]


0x9bc6:	nop	word ptr cs:[rax + rax]


0x9d7f:	nop	


0x9da1:	nop	dword ptr [rax]


0x9dc6:	nop	word ptr cs:[rax + rax]


0x9dda:	nop	word ptr [rax + rax]


0x9de7:	nop	word ptr [rax + rax]


0x9eab:	nop	dword ptr [rax + rax]


0x9f2e:	nop	


0x9f78:	nop	dword ptr [rax + rax]


0xa022:	nop	word ptr [rax + rax]


0xa05d:	nop	dword ptr [rax]


0xa07e:	nop	


0xa09e:	nop	


0xa116:	nop	word ptr cs:[rax + rax]


0xa18f:	nop	


0xa255:	nop	dword ptr [rax]


0xa276:	nop	word ptr cs:[rax + rax]


0xa29e:	nop	


0xa2be:	nop	


0xa2df:	nop	


0xa2ea:	nop	word ptr [rax + rax]


0xa30e:	nop	


0xa3d6:	nop	word ptr cs:[rax + rax]


0xa416:	nop	word ptr cs:[rax + rax]


0xa473:	nop	dword ptr [rax + rax]


0xa4e1:	nop	dword ptr [rax]


0xa50c:	nop	dword ptr [rax]


0xa5a5:	nop	dword ptr [rax]


0xa67b:	nop	dword ptr [rax + rax]


0xa6a6:	nop	word ptr cs:[rax + rax]


0xa6df:	nop	


0xa729:	nop	dword ptr [rax]


0xa74b:	nop	dword ptr [rax + rax]


0xa7f1:	nop	dword ptr [rax]


