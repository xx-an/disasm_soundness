0x1fa50:	sub	rsp, 8
0x1fa54:	add	rsp, 8
0x1fa58:	ret	


0x1fa40:	mov	rdx, qword ptr [rip + 0x2085c1]
0x1fa47:	xor	esi, esi
0x1fa49:	jmp	0x2940


0x1fa30:	ret	


0x1f9c0:	push	r15
0x1f9c2:	push	r14
0x1f9c4:	mov	r15, rdx
0x1f9c7:	push	r13
0x1f9c9:	push	r12
0x1f9cb:	lea	r12, [rip + 0x207c9e]
0x1f9d2:	push	rbp
0x1f9d3:	lea	rbp, [rip + 0x207c9e]
0x1f9da:	push	rbx
0x1f9db:	mov	r13d, edi
0x1f9de:	mov	r14, rsi
0x1f9e1:	sub	rbp, r12
0x1f9e4:	sub	rsp, 8
0x1f9e8:	sar	rbp, 3
0x1f9ec:	call	0x2390


0x1f9b0:	mov	edx, 3
0x1f9b5:	xor	esi, esi
0x1f9b7:	xor	eax, eax
0x1f9b9:	jmp	0x1f730


0x1f730:	push	r12
0x1f732:	push	rbp
0x1f733:	mov	ebp, edi
0x1f735:	push	rbx
0x1f736:	sub	rsp, 0x50
0x1f73a:	mov	rax, qword ptr fs:[0x28]
0x1f743:	mov	qword ptr [rsp + 0x18], rax
0x1f748:	xor	eax, eax
0x1f74a:	lea	rax, [rsp + 0x70]
0x1f74f:	test	esi, esi
0x1f751:	mov	qword ptr [rsp + 0x30], rdx
0x1f756:	mov	qword ptr [rsp + 0x38], rcx
0x1f75b:	mov	qword ptr [rsp + 0x40], r8
0x1f760:	mov	qword ptr [rsp + 8], rax
0x1f765:	lea	rax, [rsp + 0x20]
0x1f76a:	mov	qword ptr [rsp + 0x48], r9
0x1f76f:	mov	dword ptr [rsp], 0x10
0x1f776:	mov	qword ptr [rsp + 0x10], rax
0x1f77b:	je	0x1f982


0x1f6f0:	push	r13
0x1f6f2:	push	r12
0x1f6f4:	push	rbp
0x1f6f5:	push	rbx
0x1f6f6:	mov	ebx, edi
0x1f6f8:	sub	rsp, 8
0x1f6fc:	cmp	edi, 2
0x1f6ff:	ja	0x1f722


0x1f670:	push	r13
0x1f672:	push	r12
0x1f674:	or	edx, 0x90900
0x1f67a:	push	rbp
0x1f67b:	push	rbx
0x1f67c:	xor	eax, eax
0x1f67e:	mov	r12, rcx
0x1f681:	sub	rsp, 8
0x1f685:	call	0x1f600


0x1f600:	sub	rsp, 0x58
0x1f604:	mov	qword ptr [rsp + 0x38], rcx
0x1f609:	xor	ecx, ecx
0x1f60b:	mov	rax, qword ptr fs:[0x28]
0x1f614:	mov	qword ptr [rsp + 0x18], rax
0x1f619:	xor	eax, eax
0x1f61b:	test	dl, 0x40
0x1f61e:	jne	0x1f648


0x1f5c0:	sub	rsp, 8
0x1f5c4:	mov	edi, 0xe
0x1f5c9:	call	0x27d0


0x1f580:	cmp	byte ptr [rdi + 0x1c], 0
0x1f584:	jne	0x1f5b5


0x1f540:	movzx	edx, byte ptr [rdi + 0x1c]
0x1f544:	mov	ecx, dword ptr [rdi + 0x14]
0x1f547:	xor	edx, 1
0x1f54a:	movzx	edx, dl
0x1f54d:	add	ecx, edx
0x1f54f:	and	ecx, 3
0x1f552:	mov	eax, ecx
0x1f554:	lea	r8, [rdi + rax*4]
0x1f558:	mov	eax, dword ptr [r8]
0x1f55b:	mov	dword ptr [r8], esi
0x1f55e:	mov	esi, dword ptr [rdi + 0x18]
0x1f561:	mov	dword ptr [rdi + 0x14], ecx
0x1f564:	cmp	esi, ecx
0x1f566:	jne	0x1f570


0x1f530:	movzx	eax, byte ptr [rdi + 0x1c]
0x1f534:	ret	


0x1f510:	mov	byte ptr [rdi + 0x1c], 1
0x1f514:	mov	qword ptr [rdi + 0x14], 0
0x1f51c:	mov	dword ptr [rdi], esi
0x1f51e:	mov	dword ptr [rdi + 4], esi
0x1f521:	mov	dword ptr [rdi + 8], esi
0x1f524:	mov	dword ptr [rdi + 0xc], esi
0x1f527:	mov	dword ptr [rdi + 0x10], esi
0x1f52a:	ret	


0x1f4b0:	sub	rsp, 8
0x1f4b4:	xor	esi, esi
0x1f4b6:	call	0x2840


0x1f440:	sub	rsp, 0x58
0x1f444:	mov	qword ptr [rsp + 0x30], rdx
0x1f449:	xor	edx, edx
0x1f44b:	mov	rax, qword ptr fs:[0x28]
0x1f454:	mov	qword ptr [rsp + 0x18], rax
0x1f459:	xor	eax, eax
0x1f45b:	test	sil, 0x40
0x1f45f:	jne	0x1f488


0x1f3b0:	cmp	dword ptr [rdi + 0x18], 0x95f616
0x1f3b7:	jne	0x1f417


0x1f3a0:	mov	qword ptr [rdi + 0x10], 0
0x1f3a8:	mov	dword ptr [rdi + 0x18], 0x95f616
0x1f3af:	ret	


0x1f320:	push	r12
0x1f322:	push	rbp
0x1f323:	mov	rbp, rdi
0x1f326:	push	rbx
0x1f327:	call	0x2460


0x1f1d0:	push	r12
0x1f1d2:	push	rbp
0x1f1d3:	push	rbx
0x1f1d4:	mov	rbx, rsi
0x1f1d7:	sub	rsp, 0x50
0x1f1db:	mov	rax, qword ptr fs:[0x28]
0x1f1e4:	mov	qword ptr [rsp + 0x48], rax
0x1f1e9:	xor	eax, eax
0x1f1eb:	test	rdi, rdi
0x1f1ee:	je	0x1f2f0


0x1f120:	push	r13
0x1f122:	push	r12
0x1f124:	push	rbp
0x1f125:	push	rbx
0x1f126:	mov	rbp, rsi
0x1f129:	sub	rsp, 8
0x1f12d:	test	rdi, rdi
0x1f130:	je	0x1f1a0


0x1f110:	cmp	rdi, 1
0x1f114:	je	0x1f11b


0x1f030:	push	r12
0x1f032:	push	rbp
0x1f033:	mov	rbp, rdi
0x1f036:	push	rbx
0x1f037:	lea	rdi, [rip + 0xb69]
0x1f03e:	sub	rsp, 0x10
0x1f042:	call	0x23e0


0x1eef0:	push	r15
0x1eef2:	push	r14
0x1eef4:	mov	eax, 1
0x1eef9:	push	r13
0x1eefb:	push	r12
0x1eefd:	push	rbp
0x1eefe:	push	rbx
0x1eeff:	sub	rsp, 8
0x1ef03:	mov	rbp, qword ptr [rsi + 0x30]
0x1ef07:	test	rbp, rbp
0x1ef0a:	je	0x1efa0


0x1ee60:	test	rdi, rdi
0x1ee63:	push	r12
0x1ee65:	push	rbp
0x1ee66:	push	rbx
0x1ee67:	je	0x1eec8


0x1ee00:	push	r13
0x1ee02:	push	r12
0x1ee04:	push	rbp
0x1ee05:	push	rbx
0x1ee06:	mov	rbp, rdi
0x1ee09:	sub	rsp, 8
0x1ee0d:	call	0x2410


0x1edd0:	test	rdi, rdi
0x1edd3:	je	0x1edf8


0x1eda0:	test	rdi, rdi
0x1eda3:	je	0x1edc0


0x1ed50:	test	rdx, rdx
0x1ed53:	jne	0x1ed78


0x1ed30:	sub	rsp, 8
0x1ed34:	push	0
0x1ed36:	push	qword ptr [rsp + 0x28]
0x1ed3a:	push	qword ptr [rsp + 0x28]
0x1ed3e:	push	qword ptr [rsp + 0x28]
0x1ed42:	call	0x1e920


0x1ed10:	sub	rsp, 8
0x1ed14:	push	1
0x1ed16:	push	qword ptr [rsp + 0x20]
0x1ed1a:	push	qword ptr [rsp + 0x20]
0x1ed1e:	push	0
0x1ed20:	call	0x1e920


0x1ecf0:	sub	rsp, 8
0x1ecf4:	push	0
0x1ecf6:	push	r9
0x1ecf8:	mov	r9, rdx
0x1ecfb:	call	0x1e4a0


0x1ecd0:	sub	rsp, 8
0x1ecd4:	mov	r9, rdx
0x1ecd7:	push	1
0x1ecd9:	push	r8
0x1ecdb:	xor	r8d, r8d
0x1ecde:	call	0x1e4a0


0x1ec30:	test	r8d, 0xfffffff8
0x1ec37:	jne	0x1ecc8


0x1ebe0:	push	rbx
0x1ebe1:	mov	rbx, rdi
0x1ebe4:	mov	rdi, qword ptr [rdi]
0x1ebe7:	test	rdi, rdi
0x1ebea:	je	0x1ebf1


0x1eb50:	push	r13
0x1eb52:	push	r12
0x1eb54:	push	rbp
0x1eb55:	push	rbx
0x1eb56:	sub	rsp, 8
0x1eb5a:	cmp	edi, 0x10
0x1eb5d:	ja	0x1ebc0


0x1ea40:	mov	eax, edx
0x1ea42:	push	r14
0x1ea44:	push	r13
0x1ea46:	and	eax, 1
0x1ea49:	push	r12
0x1ea4b:	push	rbp
0x1ea4c:	cmp	eax, 1
0x1ea4f:	push	rbx
0x1ea50:	mov	rbx, rdi
0x1ea53:	sbb	r14, r14
0x1ea56:	mov	qword ptr [rdi], 0
0x1ea5d:	mov	qword ptr [rdi + 8], 0
0x1ea65:	and	r14d, 0xfd4fca
0x1ea6c:	mov	qword ptr [rdi + 0x10], 0
0x1ea74:	mov	edi, 0x100
0x1ea79:	mov	r12, rsi
0x1ea7c:	mov	ebp, edx
0x1ea7e:	add	r14, 0x3b2fc
0x1ea85:	call	0x2780


0x1e920:	push	r15
0x1e922:	push	r14
0x1e924:	push	r13
0x1e926:	push	r12
0x1e928:	mov	r12, rdi
0x1e92b:	push	rbp
0x1e92c:	push	rbx
0x1e92d:	mov	rbp, r8
0x1e930:	mov	rbx, rdx
0x1e933:	mov	rdx, rbp
0x1e936:	sub	rsp, 0x28
0x1e93a:	shr	rdx, 0x3f
0x1e93e:	mov	rax, qword ptr [rsp + 0x70]
0x1e943:	mov	edi, edx
0x1e945:	mov	r8d, dword ptr [rsp + 0x78]
0x1e94a:	shr	rax, 0x3f
0x1e94e:	or	dil, al
0x1e951:	jne	0x1ea20


0x1e4a0:	push	r15
0x1e4a2:	push	r14
0x1e4a4:	mov	rax, r8
0x1e4a7:	push	r13
0x1e4a9:	push	r12
0x1e4ab:	add	r8, rcx
0x1e4ae:	push	rbp
0x1e4af:	push	rbx
0x1e4b0:	sub	rsp, 0x38
0x1e4b4:	test	rcx, rcx
0x1e4b7:	mov	ebx, dword ptr [rsp + 0x78]
0x1e4bb:	mov	r12, qword ptr [rsp + 0x70]
0x1e4c0:	mov	dword ptr [rsp + 0x28], ebx
0x1e4c4:	js	0x1e800


0x1e3d0:	push	r12
0x1e3d2:	push	rbp
0x1e3d3:	xor	eax, eax
0x1e3d5:	push	rbx
0x1e3d6:	mov	rbp, qword ptr [rdi + 0x20]
0x1e3da:	mov	rbx, rdi
0x1e3dd:	mov	r12, qword ptr [rdi]
0x1e3e0:	lea	rdi, [rbp + 8]
0x1e3e4:	mov	rcx, rbp
0x1e3e7:	mov	qword ptr [rbp], 0
0x1e3ef:	mov	qword ptr [rbp + 0xf8], 0
0x1e3fa:	and	rdi, 0xfffffffffffffff8
0x1e3fe:	sub	rcx, rdi
0x1e401:	add	ecx, 0x100
0x1e407:	shr	ecx, 3
0x1e40a:	rep stosq	qword ptr [rdi], rax


0x1e3c0:	mov	rax, qword ptr [rip + 0x209f39]
0x1e3c7:	mov	qword ptr [rip + 0x209f32], rdi
0x1e3ce:	ret	


0x1e350:	sub	rsp, 8
0x1e354:	mov	rcx, qword ptr [rip + 0x209fa5]
0x1e35b:	mov	r8, rdi
0x1e35e:	mov	rdi, rdx
0x1e361:	mov	rax, rcx
0x1e364:	shr	rax, 0x19
0x1e368:	and	eax, 1
0x1e36b:	shl	eax, 4
0x1e36e:	mov	edx, eax
0x1e370:	movzx	eax, byte ptr [rdi + 0x38]
0x1e374:	and	eax, 0xffffffef
0x1e377:	or	eax, edx
0x1e379:	mov	rdx, rsi
0x1e37c:	mov	rsi, r8
0x1e37f:	or	eax, 0xffffff80
0x1e382:	mov	byte ptr [rdi + 0x38], al
0x1e385:	call	0x1d250


0x1d250:	push	r15
0x1d252:	push	r14
0x1d254:	push	r13
0x1d256:	push	r12
0x1d258:	push	rbp
0x1d259:	push	rbx
0x1d25a:	sub	rsp, 0x128
0x1d261:	mov	qword ptr [rdi + 0x18], rcx
0x1d265:	mov	qword ptr [rdi + 0x10], 0
0x1d26d:	mov	rax, qword ptr fs:[0x28]
0x1d276:	mov	qword ptr [rsp + 0x118], rax
0x1d27e:	xor	eax, eax
0x1d280:	movzx	eax, byte ptr [rdi + 0x38]
0x1d284:	mov	qword ptr [rsp + 8], rdi
0x1d289:	mov	qword ptr [rsp + 0x10], rsi
0x1d28e:	mov	qword ptr [rsp], rdx
0x1d292:	mov	qword ptr [rsp + 0x18], rcx
0x1d297:	mov	dword ptr [rsp + 0x4c], 0
0x1d29f:	mov	qword ptr [rdi + 0x30], 0
0x1d2a7:	mov	rbx, qword ptr [rdi]
0x1d2aa:	mov	byte ptr [rsp + 0x20], al
0x1d2ae:	and	eax, 0xffffff90
0x1d2b1:	cmp	qword ptr [rdi + 8], 0xe7
0x1d2b9:	mov	byte ptr [rdi + 0x38], al
0x1d2bc:	jbe	0x1e0b6


0x1d0d0:	push	r15
0x1d0d2:	push	r14
0x1d0d4:	mov	r14, rcx
0x1d0d7:	push	r13
0x1d0d9:	push	r12
0x1d0db:	mov	r13, r9
0x1d0de:	push	rbp
0x1d0df:	push	rbx
0x1d0e0:	mov	rbp, rdx
0x1d0e3:	mov	r12, rdi
0x1d0e6:	sub	rsp, 0x58
0x1d0ea:	mov	rbx, qword ptr [rsi]
0x1d0ed:	mov	rax, qword ptr fs:[0x28]
0x1d0f6:	mov	qword ptr [rsp + 0x48], rax
0x1d0fb:	xor	eax, eax
0x1d0fd:	mov	qword ptr [rsp + 0x28], rsi
0x1d102:	mov	qword ptr [rsp + 0x10], r8
0x1d107:	mov	rax, qword ptr [rbx + 0xa8]
0x1d10e:	mov	qword ptr [rsp + 0x20], rax
0x1d113:	call	0x1cf40


0x1cf40:	push	r15
0x1cf42:	push	r14
0x1cf44:	mov	r15, rcx
0x1cf47:	push	r13
0x1cf49:	push	r12
0x1cf4b:	mov	r13, rsi
0x1cf4e:	push	rbp
0x1cf4f:	push	rbx
0x1cf50:	mov	rbx, r9
0x1cf53:	mov	rbp, rdx
0x1cf56:	mov	r12, r8
0x1cf59:	sub	rsp, 0x48
0x1cf5d:	mov	rax, qword ptr fs:[0x28]
0x1cf66:	mov	qword ptr [rsp + 0x38], rax
0x1cf6b:	xor	eax, eax
0x1cf6d:	mov	rax, qword ptr [rsi]
0x1cf70:	mov	qword ptr [rsp], rdi
0x1cf74:	mov	qword ptr [rsp + 0x10], rax
0x1cf79:	call	0x1ba60


0x1ba60:	push	r15
0x1ba62:	push	r14
0x1ba64:	push	r13
0x1ba66:	push	r12
0x1ba68:	push	rbp
0x1ba69:	push	rbx
0x1ba6a:	sub	rsp, 0x128
0x1ba71:	mov	qword ptr [rsp + 0x20], rcx
0x1ba76:	movzx	ecx, byte ptr [rdx + 8]
0x1ba7a:	mov	rax, qword ptr fs:[0x28]
0x1ba83:	mov	qword ptr [rsp + 0x118], rax
0x1ba8b:	xor	eax, eax
0x1ba8d:	mov	rax, qword ptr [rsi]
0x1ba90:	mov	qword ptr [rsp + 0x18], rdx
0x1ba95:	mov	qword ptr [rsp + 0x40], r9
0x1ba9a:	cmp	cl, 0x24
0x1ba9d:	mov	qword ptr [rsp + 0x10], rax
0x1baa2:	ja	0x1bb60


0x1b9a0:	push	r14
0x1b9a2:	mov	r14, rdi
0x1b9a5:	push	r13
0x1b9a7:	mov	r13, rsi
0x1b9aa:	push	r12
0x1b9ac:	mov	r12, -2
0x1b9b3:	push	rbp
0x1b9b4:	mov	rbp, rdx
0x1b9b7:	push	rbx
0x1b9b8:	mov	rbx, -1
0x1b9bf:	nop	
0x1b9c0:	mov	rdx, rbp
0x1b9c3:	mov	rsi, r14
0x1b9c6:	mov	rdi, r13
0x1b9c9:	call	0x1b2a0


0x1b2a0:	push	r15
0x1b2a2:	push	r14
0x1b2a4:	push	r13
0x1b2a6:	push	r12
0x1b2a8:	push	rbp
0x1b2a9:	push	rbx
0x1b2aa:	mov	rbp, rdi
0x1b2ad:	sub	rsp, 0x38
0x1b2b1:	mov	r14, qword ptr [rsi + 0x48]
0x1b2b5:	mov	rax, qword ptr fs:[0x28]
0x1b2be:	mov	qword ptr [rsp + 0x28], rax
0x1b2c3:	xor	eax, eax
0x1b2c5:	cmp	qword ptr [rsi + 0x68], r14
0x1b2c9:	jle	0x1b360


0x1b040:	push	r14
0x1b042:	push	r13
0x1b044:	mov	r10, rsi
0x1b047:	push	r12
0x1b049:	push	rbp
0x1b04a:	movsxd	r11, ecx
0x1b04d:	push	rbx
0x1b04e:	mov	rbp, rdx
0x1b051:	mov	rbx, rdi
0x1b054:	sub	rsp, 0x20
0x1b058:	mov	r12, qword ptr [rsi + 0x48]
0x1b05c:	mov	rax, qword ptr fs:[0x28]
0x1b065:	mov	qword ptr [rsp + 0x18], rax
0x1b06a:	xor	eax, eax
0x1b06c:	cmp	dword ptr [rsi + 0x90], 1
0x1b073:	je	0x1b0c8


0x1a7f0:	push	r15
0x1a7f2:	push	r14
0x1a7f4:	mov	rax, rdi
0x1a7f7:	push	r13
0x1a7f9:	push	r12
0x1a7fb:	mov	r13, rsi
0x1a7fe:	push	rbp
0x1a7ff:	push	rbx
0x1a800:	mov	rbp, rdx
0x1a803:	mov	rbx, rcx
0x1a806:	lea	rcx, [rdx*8]
0x1a80e:	sub	rsp, 0xa8
0x1a815:	mov	r12, qword ptr [rax + 0x98]
0x1a81c:	mov	rax, qword ptr [rax + 0xb8]
0x1a823:	mov	qword ptr [rsp + 8], rdi
0x1a828:	mov	qword ptr [rsp + 0x18], rcx
0x1a82d:	mov	rdi, qword ptr fs:[0x28]
0x1a836:	mov	qword ptr [rsp + 0x98], rdi
0x1a83e:	xor	edi, edi
0x1a840:	mov	rdx, qword ptr [rax + rdx*8]
0x1a844:	mov	dword ptr [rsp + 0x5c], 0
0x1a84c:	mov	rcx, qword ptr [rbx + 8]
0x1a850:	test	rdx, rdx
0x1a853:	je	0x1aaa8


0x190c0:	push	r15
0x190c2:	push	r14
0x190c4:	push	r13
0x190c6:	push	r12
0x190c8:	mov	r13, r9
0x190cb:	push	rbp
0x190cc:	push	rbx
0x190cd:	mov	rbp, rcx
0x190d0:	mov	ecx, 0x20
0x190d5:	mov	r12, r8
0x190d8:	sub	rsp, 0x238
0x190df:	mov	rbx, qword ptr [rdi]
0x190e2:	mov	rax, qword ptr [rsp + 0x278]
0x190ea:	mov	qword ptr [rsp + 0x48], rdi
0x190ef:	mov	qword ptr [rsp + 0x78], rsi
0x190f4:	mov	rsi, rdi
0x190f7:	lea	rdi, [rsp + 0x120]
0x190ff:	mov	qword ptr [rsp + 0x88], rdx
0x19107:	mov	qword ptr [rsp + 0x38], rbx
0x1910c:	mov	qword ptr [rsp + 0xb8], rax
0x19114:	mov	qword ptr [rsp], rdi
0x19118:	mov	rax, qword ptr fs:[0x28]
0x19121:	mov	qword ptr [rsp + 0x228], rax
0x19129:	xor	eax, eax
0x1912b:	rep stosq	qword ptr [rdi], rax


0x18d80:	push	r15
0x18d82:	push	r14
0x18d84:	mov	r14, rdi
0x18d87:	push	r13
0x18d89:	push	r12
0x18d8b:	mov	r13, rsi
0x18d8e:	push	rbp
0x18d8f:	push	rbx
0x18d90:	sub	rsp, 0x68
0x18d94:	mov	r15, qword ptr [rsi + 0x18]
0x18d98:	mov	rbx, qword ptr [rsi + 0x10]
0x18d9c:	mov	qword ptr [rsp], rdi
0x18da0:	mov	edi, 8
0x18da5:	mov	qword ptr [rsp + 0x40], 1
0x18dae:	mov	rax, qword ptr fs:[0x28]
0x18db7:	mov	qword ptr [rsp + 0x58], rax
0x18dbc:	xor	eax, eax
0x18dbe:	mov	qword ptr [rsp + 0x48], 1
0x18dc7:	call	0x2780


0x18b90:	push	r15
0x18b92:	push	r14
0x18b94:	push	r13
0x18b96:	push	r12
0x18b98:	mov	r13, rdi
0x18b9b:	push	rbp
0x18b9c:	push	rbx
0x18b9d:	mov	rbx, rsi
0x18ba0:	sub	rsp, 0x38
0x18ba4:	mov	r12, qword ptr [rsi + 0x48]
0x18ba8:	mov	r14, qword ptr [rsi + 0xb8]
0x18baf:	mov	rax, qword ptr fs:[0x28]
0x18bb8:	mov	qword ptr [rsp + 0x28], rax
0x18bbd:	xor	eax, eax
0x18bbf:	mov	r15, qword ptr [rsi + 0x98]
0x18bc6:	lea	rbp, [r12*8]
0x18bce:	add	r14, rbp
0x18bd1:	cmp	qword ptr [rsi + 0xc0], r12
0x18bd8:	jge	0x18c20


0x182a0:	push	r15
0x182a2:	push	r14
0x182a4:	push	r13
0x182a6:	push	r12
0x182a8:	push	rbp
0x182a9:	push	rbx
0x182aa:	sub	rsp, 0xb8
0x182b1:	mov	r15, qword ptr [rdi + 0x48]
0x182b5:	mov	rax, qword ptr fs:[0x28]
0x182be:	mov	qword ptr [rsp + 0xa8], rax
0x182c6:	xor	eax, eax
0x182c8:	cmp	qword ptr [rsi], 0
0x182cc:	mov	rax, qword ptr [rdi + 0x98]
0x182d3:	mov	qword ptr [rsp + 0x48], rsi
0x182d8:	mov	qword ptr [rsp + 0x40], rdx
0x182dd:	mov	qword ptr [rsp + 0x38], rax
0x182e2:	jle	0x18610


0x18100:	push	r15
0x18102:	push	r14
0x18104:	mov	r14, rcx
0x18107:	push	r13
0x18109:	push	r12
0x1810b:	mov	r13, rsi
0x1810e:	push	rbp
0x1810f:	push	rbx
0x18110:	lea	rsi, [rdx + 0x10]
0x18114:	mov	rbp, rdx
0x18117:	mov	r9, r8
0x1811a:	mov	r12, r8
0x1811d:	sub	rsp, 0x20
0x18121:	mov	rcx, qword ptr [rdx + 8]
0x18125:	mov	r8, r14
0x18128:	push	8
0x1812a:	mov	rdx, qword ptr [rdx]
0x1812d:	mov	rbx, rdi
0x18130:	call	0x170b0


0x17810:	push	rbp
0x17811:	mov	rbp, rsp
0x17814:	push	r15
0x17816:	push	r14
0x17818:	push	r13
0x1781a:	push	r12
0x1781c:	mov	r13, rcx
0x1781f:	push	rbx
0x17820:	mov	r12, rsi
0x17823:	sub	rsp, 0xb8
0x1782a:	mov	qword ptr [rbp - 0x98], rdx
0x17831:	mov	qword ptr [rbp - 0x50], 0
0x17839:	mov	rax, qword ptr fs:[0x28]
0x17842:	mov	qword ptr [rbp - 0x38], rax
0x17846:	xor	eax, eax
0x17848:	mov	rax, qword ptr [rdi]
0x1784b:	test	r8b, r8b
0x1784e:	mov	qword ptr [rbp - 0x48], 2
0x17856:	mov	qword ptr [rbp - 0x40], 0
0x1785e:	mov	qword ptr [rbp - 0x90], rax
0x17865:	je	0x1800d


0x170b0:	push	r15
0x170b2:	push	r14
0x170b4:	mov	r15, rdi
0x170b7:	push	r13
0x170b9:	push	r12
0x170bb:	push	rbp
0x170bc:	push	rbx
0x170bd:	mov	rbp, rcx
0x170c0:	mov	rbx, rdx
0x170c3:	sub	rsp, 0xd8
0x170ca:	mov	rcx, qword ptr [rdi + 0x98]
0x170d1:	mov	r13, qword ptr [rsi + 8]
0x170d5:	mov	rax, qword ptr fs:[0x28]
0x170de:	mov	qword ptr [rsp + 0xc8], rax
0x170e6:	xor	eax, eax
0x170e8:	mov	rax, rdx
0x170eb:	mov	qword ptr [rsp + 0x60], rsi
0x170f0:	mov	qword ptr [rsp + 0x78], r8
0x170f5:	shl	rax, 4
0x170f9:	add	rax, qword ptr [rcx]
0x170fc:	mov	qword ptr [rsp + 0x40], r9
0x17101:	mov	qword ptr [rsp + 0x30], rcx
0x17106:	mov	dword ptr [rsp + 0x88], 0
0x17111:	mov	rax, qword ptr [rax]
0x17114:	mov	qword ptr [rsp + 0x48], rax
0x17119:	movsxd	rax, dword ptr [rdi + 0xe0]
0x17120:	add	rax, r9
0x17123:	cmp	rax, r13
0x17126:	jge	0x17746


0x16e50:	shl	rdx, 4
0x16e54:	push	r13
0x16e56:	push	r12
0x16e58:	lea	r9, [rdi + rdx]
0x16e5c:	push	rbp
0x16e5d:	push	rbx
0x16e5e:	sub	rsp, 8
0x16e62:	movzx	r11d, byte ptr [r9 + 8]
0x16e67:	cmp	r11b, 7
0x16e6b:	je	0x16f80


0x16920:	push	r15
0x16922:	push	r14
0x16924:	mov	rax, rdi
0x16927:	push	r13
0x16929:	push	r12
0x1692b:	push	rbp
0x1692c:	push	rbx
0x1692d:	xor	ebx, ebx
0x1692f:	mov	rbp, rcx
0x16932:	sub	rsp, 0x178
0x16939:	mov	rax, qword ptr [rax]
0x1693c:	mov	qword ptr [rsp + 0x30], rdi
0x16941:	mov	qword ptr [rsp + 0x20], rsi
0x16946:	mov	rdi, qword ptr fs:[0x28]
0x1694f:	mov	qword ptr [rsp + 0x168], rdi
0x16957:	xor	edi, edi
0x16959:	cmp	dword ptr [rax + 0xb4], 1
0x16960:	mov	qword ptr [rsp + 0x28], rdx
0x16965:	mov	qword ptr [rsp + 8], rax
0x1696a:	jne	0x16983


0x166b0:	push	r15
0x166b2:	push	r14
0x166b4:	mov	r14, rdx
0x166b7:	push	r13
0x166b9:	push	r12
0x166bb:	mov	r13, rcx
0x166be:	push	rbp
0x166bf:	push	rbx
0x166c0:	mov	rbp, rdi
0x166c3:	mov	edi, 0x20
0x166c8:	mov	r12d, r8d
0x166cb:	sub	rsp, 0x58
0x166cf:	mov	qword ptr [rsp], rsi
0x166d3:	mov	esi, 1
0x166d8:	mov	qword ptr [rsp + 8], r9
0x166dd:	mov	rax, qword ptr fs:[0x28]
0x166e6:	mov	qword ptr [rsp + 0x48], rax
0x166eb:	xor	eax, eax
0x166ed:	mov	qword ptr [rsp + 0x18], 0
0x166f6:	call	0x26b0


0x15ea0:	push	r14
0x15ea2:	push	r13
0x15ea4:	mov	r13, rcx
0x15ea7:	push	r12
0x15ea9:	push	rbp
0x15eaa:	mov	r12, r9
0x15ead:	push	rbx
0x15eae:	mov	rbp, rdi
0x15eb1:	mov	rbx, rsi
0x15eb4:	sub	rsp, 0x10
0x15eb8:	test	qword ptr [rsp + 0x40], 0x400000
0x15ec1:	je	0x15ee8


0x15e50:	push	rbp
0x15e51:	push	rbx
0x15e52:	mov	rbp, rdi
0x15e55:	mov	rdi, rsi
0x15e58:	mov	rbx, rsi
0x15e5b:	sub	rsp, 8
0x15e5f:	call	0x2530


0x15db0:	push	r12
0x15db2:	push	rbp
0x15db3:	push	rbx
0x15db4:	mov	rax, qword ptr [rdi]
0x15db7:	sub	rax, 1
0x15dbb:	test	rax, rax
0x15dbe:	mov	qword ptr [rdi], rax
0x15dc1:	js	0x15e25


0x15d60:	push	r12
0x15d62:	push	rbp
0x15d63:	mov	rbp, rdi
0x15d66:	push	rbx
0x15d67:	cmp	qword ptr [rdi], 0
0x15d6b:	jle	0x15da2


0x15cd0:	cmp	byte ptr [rsi + 0x30], 0x10
0x15cd4:	je	0x15d38


0x15130:	push	r15
0x15132:	push	r14
0x15134:	mov	r15, rdi
0x15137:	push	r13
0x15139:	push	r12
0x1513b:	mov	edi, 0x3800
0x15140:	push	rbp
0x15141:	push	rbx
0x15142:	sub	rsp, 0x108
0x15149:	mov	rax, qword ptr fs:[0x28]
0x15152:	mov	qword ptr [rsp + 0xf8], rax
0x1515a:	xor	eax, eax
0x1515c:	mov	qword ptr [rsp + 8], rsi
0x15161:	call	0x2780


0x14ef0:	push	r15
0x14ef2:	push	r14
0x14ef4:	mov	r14, rdx
0x14ef7:	push	r13
0x14ef9:	push	r12
0x14efb:	lea	rdx, [rsi + rsi*2]
0x14eff:	push	rbp
0x14f00:	push	rbx
0x14f01:	pxor	xmm0, xmm0
0x14f05:	sub	rsp, 0x48
0x14f09:	mov	rax, qword ptr fs:[0x28]
0x14f12:	mov	qword ptr [rsp + 0x38], rax
0x14f17:	xor	eax, eax
0x14f19:	mov	rax, qword ptr [rdi + 0x38]
0x14f1d:	mov	qword ptr [rsp + 0x30], 0
0x14f26:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x14f2b:	mov	qword ptr [rsp + 0x10], rcx
0x14f30:	lea	rbp, [rax + rdx*8]
0x14f34:	mov	r10, qword ptr [rbp + 8]
0x14f38:	test	r10, r10
0x14f3b:	jle	0x15122


0x14750:	push	r15
0x14752:	push	r14
0x14754:	mov	r15, rsi
0x14757:	push	r13
0x14759:	push	r12
0x1475b:	mov	r10d, edx
0x1475e:	push	rbp
0x1475f:	push	rbx
0x14760:	mov	rbp, rsi
0x14763:	mov	rbx, rdi
0x14766:	sub	rsp, 0x48
0x1476a:	mov	rax, qword ptr fs:[0x28]
0x14773:	mov	qword ptr [rsp + 0x38], rax
0x14778:	xor	eax, eax
0x1477a:	mov	rax, qword ptr [rdi + 0x28]
0x1477e:	sub	rbp, rax
0x14781:	cmp	rax, rsi
0x14784:	jle	0x147e6


0x14680:	push	r12
0x14682:	mov	r12, rdx
0x14685:	push	rbp
0x14686:	push	rbx
0x14687:	mov	edx, dword ptr [rdi + 0xa0]
0x1468d:	mov	rbx, rsi
0x14690:	mov	rsi, rcx
0x14693:	mov	rbp, rdi
0x14696:	call	0x14480


0x14570:	mov	rax, qword ptr [rdi + 8]
0x14574:	movzx	ecx, byte ptr [rax + rdx]
0x14578:	movzx	eax, byte ptr [rsi + 8]
0x1457c:	cmp	al, 3
0x1457e:	je	0x14638


0x14480:	push	rbp
0x14481:	push	rbx
0x14482:	mov	rbp, rdi
0x14485:	sub	rsp, 8
0x14489:	test	rsi, rsi
0x1448c:	js	0x144e0


0x14330:	push	r15
0x14332:	push	r14
0x14334:	push	r13
0x14336:	push	r12
0x14338:	push	rbp
0x14339:	push	rbx
0x1433a:	sub	rsp, 0x28
0x1433e:	cmp	qword ptr [rsi], 0
0x14342:	mov	r13, qword ptr [rdi + 0x98]
0x14349:	jle	0x14410


0x13f90:	push	r15
0x13f92:	push	r14
0x13f94:	push	r13
0x13f96:	push	r12
0x13f98:	mov	r12, rdx
0x13f9b:	push	rbp
0x13f9c:	push	rbx
0x13f9d:	mov	rbx, rdi
0x13fa0:	mov	rbp, rsi
0x13fa3:	xor	esi, esi
0x13fa5:	sub	rsp, 0x78
0x13fa9:	mov	rdi, qword ptr [rdi + 0xc8]
0x13fb0:	mov	rax, qword ptr fs:[0x28]
0x13fb9:	mov	qword ptr [rsp + 0x68], rax
0x13fbe:	xor	eax, eax
0x13fc0:	mov	qword ptr [rsp + 0x20], rcx
0x13fc5:	mov	dword ptr [rsp + 0x2c], r8d
0x13fca:	mov	rdx, rdi
0x13fcd:	cmp	rsi, rdx
0x13fd0:	jge	0x14027


0x13eb0:	push	r15
0x13eb2:	push	r14
0x13eb4:	push	r13
0x13eb6:	push	r12
0x13eb8:	push	rbp
0x13eb9:	push	rbx
0x13eba:	sub	rsp, 0x48
0x13ebe:	mov	rax, qword ptr fs:[0x28]
0x13ec7:	mov	qword ptr [rsp + 0x38], rax
0x13ecc:	xor	eax, eax
0x13ece:	test	rcx, rcx
0x13ed1:	jle	0x13f66


0x13cb0:	push	r15
0x13cb2:	push	r14
0x13cb4:	push	r13
0x13cb6:	push	r12
0x13cb8:	push	rbp
0x13cb9:	push	rbx
0x13cba:	sub	rsp, 8
0x13cbe:	mov	rbp, qword ptr [rdx + 8]
0x13cc2:	test	rbp, rbp
0x13cc5:	je	0x13ea0


0x139f0:	push	r15
0x139f2:	push	r14
0x139f4:	push	r13
0x139f6:	push	r12
0x139f8:	push	rbp
0x139f9:	push	rbx
0x139fa:	sub	rsp, 0x28
0x139fe:	mov	r10, qword ptr [rdx + 8]
0x13a02:	test	r10, r10
0x13a05:	je	0x13c8f


0x13890:	test	rsi, rsi
0x13893:	push	r14
0x13895:	push	r13
0x13897:	push	r12
0x13899:	push	rbp
0x1389a:	push	rbx
0x1389b:	je	0x13945


0x13800:	push	r12
0x13802:	push	rbp
0x13803:	push	rbx
0x13804:	mov	rax, qword ptr [rsi + 8]
0x13808:	mov	qword ptr [rdi + 8], rax
0x1380c:	mov	r12, qword ptr [rsi + 8]
0x13810:	test	r12, r12
0x13813:	jle	0x13850


0x13760:	push	rbp
0x13761:	push	rbx
0x13762:	mov	rbp, rdi
0x13765:	mov	rbx, rsi
0x13768:	sub	rsp, 0x18
0x1376c:	mov	rdx, qword ptr [rsi + 8]
0x13770:	mov	rax, qword ptr fs:[0x28]
0x13779:	mov	qword ptr [rsp + 8], rax
0x1377e:	xor	eax, eax
0x13780:	mov	dword ptr [rsp + 4], 0
0x13788:	test	rdx, rdx
0x1378b:	je	0x13793


0x13520:	push	r15
0x13522:	push	r14
0x13524:	push	r13
0x13526:	push	r12
0x13528:	mov	r13, rdx
0x1352b:	push	rbp
0x1352c:	push	rbx
0x1352d:	sub	rsp, 0x48
0x13531:	mov	rbx, qword ptr [rsi]
0x13534:	mov	rbp, qword ptr [rdx + 8]
0x13538:	mov	rax, qword ptr fs:[0x28]
0x13541:	mov	qword ptr [rsp + 0x38], rax
0x13546:	xor	eax, eax
0x13548:	test	byte ptr [rsi + 0x38], 0x10
0x1354c:	mov	qword ptr [rsp + 0x18], rdi
0x13551:	je	0x136c8


0x13440:	push	r14
0x13442:	push	r13
0x13444:	lea	r13, [rsi + 0x70]
0x13448:	push	r12
0x1344a:	push	rbp
0x1344b:	lea	r12, [rsi + 0x80]
0x13452:	push	rbx
0x13453:	mov	rbx, rdi
0x13456:	sub	rsp, 0x10
0x1345a:	mov	rbp, qword ptr [rdi]
0x1345d:	mov	rax, qword ptr fs:[0x28]
0x13466:	mov	qword ptr [rsp + 8], rax
0x1346b:	xor	eax, eax
0x1346d:	mov	r14, rsp
0x13470:	lea	r8, [rbx + 0x28]
0x13474:	xor	ecx, ecx
0x13476:	xor	edx, edx
0x13478:	mov	rsi, r12
0x1347b:	mov	rdi, r13
0x1347e:	call	0x13360


0x13360:	push	rbx
0x13361:	mov	rbx, rdi
0x13364:	sub	rsp, 0x20
0x13368:	mov	eax, dword ptr [rsi]
0x1336a:	cmp	eax, 0xf
0x1336d:	je	0x133e8


0x131b0:	mov	r9, qword ptr [rsi + 8]
0x131b4:	xor	eax, eax
0x131b6:	test	r9, r9
0x131b9:	je	0x13278


0x13050:	push	r15
0x13052:	push	r14
0x13054:	mov	r14, rdi
0x13057:	push	r13
0x13059:	push	r12
0x1305b:	mov	r15, rsi
0x1305e:	push	rbp
0x1305f:	push	rbx
0x13060:	mov	rbp, rdx
0x13063:	mov	ebx, ecx
0x13065:	sub	rsp, 0x38
0x13069:	mov	r12, qword ptr [rsi + 8]
0x1306d:	mov	rax, qword ptr fs:[0x28]
0x13076:	mov	qword ptr [rsp + 0x28], rax
0x1307b:	xor	eax, eax
0x1307d:	mov	qword ptr [rsp + 0x18], 0
0x13086:	lea	rdi, [r12*8]
0x1308e:	mov	qword ptr [rsp + 0x10], r12
0x13093:	call	0x2780


0x12da0:	push	r15
0x12da2:	push	r14
0x12da4:	mov	r15, rsi
0x12da7:	push	r13
0x12da9:	push	r12
0x12dab:	push	rbp
0x12dac:	push	rbx
0x12dad:	lea	rbx, [rdx + rdx*2]
0x12db1:	mov	rbp, rdx
0x12db4:	sub	rsp, 0x68
0x12db8:	mov	r12, qword ptr [rsi + 0x28]
0x12dbc:	shl	rbx, 3
0x12dc0:	mov	rax, qword ptr fs:[0x28]
0x12dc9:	mov	qword ptr [rsp + 0x58], rax
0x12dce:	xor	eax, eax
0x12dd0:	mov	qword ptr [rsp + 0x10], rdi
0x12dd5:	mov	dword ptr [rsp + 0x1c], ecx
0x12dd9:	add	r12, rbx
0x12ddc:	mov	rax, qword ptr [r12 + 8]
0x12de1:	mov	qword ptr [rsp + 0x28], 0
0x12dea:	lea	rdi, [rax + 1]
0x12dee:	mov	qword ptr [rsp + 0x20], rdi
0x12df3:	shl	rdi, 3
0x12df7:	call	0x2780


0x12bc0:	test	rsi, rsi
0x12bc3:	je	0x12cb8


0x12950:	push	r15
0x12952:	push	r14
0x12954:	push	r13
0x12956:	push	r12
0x12958:	push	rbp
0x12959:	push	rbx
0x1295a:	xor	ebx, ebx
0x1295c:	sub	rsp, 0x48
0x12960:	mov	rax, qword ptr [rdi + 0x98]
0x12967:	mov	r15, qword ptr [rdi + 0xc8]
0x1296e:	mov	r12, qword ptr [rsp + 0x80]
0x12976:	mov	qword ptr [rsp + 8], rax
0x1297b:	mov	rbp, r15
0x1297e:	cmp	rbx, rbp
0x12981:	jge	0x129db


0x128f0:	movzx	eax, byte ptr [rsi + 0x30]
0x128f4:	mov	rdx, qword ptr [rsi + 8]
0x128f8:	cmp	al, 0xb
0x128fa:	je	0x12940


0x12860:	movzx	eax, byte ptr [rsi + 0x30]
0x12864:	cmp	al, 4
0x12866:	je	0x128c0


0x12820:	mov	rax, qword ptr [rdi]
0x12823:	cmp	rax, rdx
0x12826:	jle	0x12852


0x12720:	push	r15
0x12722:	push	r14
0x12724:	lea	r14, [rsi + 0x10]
0x12728:	push	r13
0x1272a:	push	r12
0x1272c:	mov	r15, rcx
0x1272f:	push	rbp
0x12730:	push	rbx
0x12731:	mov	r12, rdi
0x12734:	mov	rbp, rsi
0x12737:	mov	rbx, rdx
0x1273a:	mov	r13d, r8d
0x1273d:	sub	rsp, 8
0x12741:	mov	rdi, qword ptr [rbp + 8]
0x12745:	mov	rdx, rbx
0x12748:	mov	rsi, r14
0x1274b:	call	0x126a0


0x126a0:	xor	eax, eax
0x126a2:	test	rdi, rdi
0x126a5:	jle	0x126e5


0x12640:	mov	rdx, qword ptr [rdi + 8]
0x12644:	xor	eax, eax
0x12646:	cmp	rdx, qword ptr [rsi + 8]
0x1264a:	je	0x12650


0x125f0:	mov	rcx, qword ptr [rdi + 0x30]
0x125f4:	lea	rax, [rsi + 1]
0x125f8:	cmp	rax, rcx
0x125fb:	jge	0x12638


0x12530:	push	r14
0x12532:	push	r13
0x12534:	mov	r14, rdi
0x12537:	push	r12
0x12539:	push	rbp
0x1253a:	push	rbx
0x1253b:	cmp	qword ptr [rdi + 0xe8], 0
0x12543:	jle	0x125c9


0x123d0:	push	r14
0x123d2:	push	r13
0x123d4:	push	r12
0x123d6:	mov	r12, rdi
0x123d9:	push	rbp
0x123da:	push	rbx
0x123db:	mov	rdi, qword ptr [rdi]
0x123de:	test	rdi, rdi
0x123e1:	je	0x1240e


0x12390:	push	rbx
0x12391:	mov	rbx, rdi
0x12394:	mov	rdi, qword ptr [rdi + 0x10]
0x12398:	call	0x2a10


0x12330:	push	rbx
0x12331:	mov	rbx, rdi
0x12334:	mov	rdi, qword ptr [rdi + 0x30]
0x12338:	call	0x2a10


0x120b0:	push	r15
0x120b2:	push	r14
0x120b4:	mov	r9, rsi
0x120b7:	push	r13
0x120b9:	push	r12
0x120bb:	mov	r14, rdi
0x120be:	push	rbp
0x120bf:	push	rbx
0x120c0:	mov	r13, rdx
0x120c3:	mov	ebp, r8d
0x120c6:	sub	rsp, 0x18
0x120ca:	mov	qword ptr [rsp + 8], rcx
0x120cf:	mov	r8, qword ptr [r14]
0x120d2:	mov	rax, r9
0x120d5:	mov	rdi, qword ptr [r14 + 0x28]
0x120d9:	shl	rax, 4
0x120dd:	mov	r12, r13
0x120e0:	add	rax, r8
0x120e3:	cmp	byte ptr [rax + 8], 4
0x120e7:	je	0x122a0


0x12010:	push	r13
0x12012:	push	r12
0x12014:	mov	r13, rsi
0x12017:	push	rbp
0x12018:	push	rbx
0x12019:	shl	r13, 4
0x1201d:	mov	rbp, rsi
0x12020:	mov	r12d, edx
0x12023:	mov	rbx, rdi
0x12026:	sub	rsp, 8
0x1202a:	mov	rax, qword ptr [rdi]
0x1202d:	mov	rsi, qword ptr [rax + r13]
0x12031:	mov	rdx, qword ptr [rax + r13 + 8]
0x12036:	call	0x11e40


0x11e40:	push	r15
0x11e42:	push	r14
0x11e44:	mov	r14, rsi
0x11e47:	push	r13
0x11e49:	push	r12
0x11e4b:	push	rbp
0x11e4c:	push	rbx
0x11e4d:	mov	rbx, rdi
0x11e50:	sub	rsp, 0x18
0x11e54:	mov	rsi, qword ptr [rdi + 0x10]
0x11e58:	mov	rbp, qword ptr [rdi + 8]
0x11e5c:	cmp	rsi, rbp
0x11e5f:	jae	0x11f10


0x11e20:	lea	rdi, [rsi + 0x28]
0x11e24:	sub	rsp, 8
0x11e28:	call	0x11df0


0x11df0:	mov	eax, dword ptr [rdi + 8]
0x11df3:	and	eax, 0x400ff
0x11df8:	cmp	eax, 6
0x11dfb:	je	0x11e10


0x11dc0:	push	rbx
0x11dc1:	mov	rbx, rdi
0x11dc4:	mov	rdi, qword ptr [rdi]
0x11dc7:	call	0x2a10


0x11d30:	push	r12
0x11d32:	push	rbp
0x11d33:	mov	rbp, rsi
0x11d36:	push	rbx
0x11d37:	mov	rax, qword ptr [rdi + 0x40]
0x11d3b:	mov	rbx, rdi
0x11d3e:	mov	r12, qword ptr [rdi + 0xc0]
0x11d45:	cmp	rax, rsi
0x11d48:	jg	0x11d70


0x11be0:	push	rbp
0x11be1:	push	rbx
0x11be2:	movabs	rdx, 0xffffffffffffffe
0x11bec:	sub	rsp, 8
0x11bf0:	mov	rax, qword ptr [rdi + 0x40]
0x11bf4:	cmp	rax, rdx
0x11bf7:	ja	0x11d08


0x115c0:	push	r15
0x115c2:	push	r14
0x115c4:	mov	r14, rdi
0x115c7:	push	r13
0x115c9:	push	r12
0x115cb:	push	rbp
0x115cc:	push	rbx
0x115cd:	sub	rsp, 0xa8
0x115d4:	mov	rbx, qword ptr [rdi + 0x58]
0x115d8:	mov	r15, qword ptr [rdi + 0x30]
0x115dc:	mov	rax, qword ptr fs:[0x28]
0x115e5:	mov	qword ptr [rsp + 0x98], rax
0x115ed:	xor	eax, eax
0x115ef:	cmp	qword ptr [rdi + 0x40], rbx
0x115f3:	cmovle	rbx, qword ptr [rdi + 0x40]
0x115f8:	cmp	byte ptr [rdi + 0x8a], 0
0x115ff:	jne	0x1160c


0x113f0:	push	r15
0x113f2:	push	r14
0x113f4:	push	r13
0x113f6:	push	r12
0x113f8:	push	rbp
0x113f9:	push	rbx
0x113fa:	mov	rbx, rdi
0x113fd:	sub	rsp, 0x68
0x11401:	mov	r12, qword ptr [rdi + 0x58]
0x11405:	mov	rbp, qword ptr [rdi + 0x30]
0x11409:	mov	rax, qword ptr fs:[0x28]
0x11412:	mov	qword ptr [rsp + 0x58], rax
0x11417:	xor	eax, eax
0x11419:	cmp	qword ptr [rdi + 0x40], r12
0x1141d:	cmovle	r12, qword ptr [rdi + 0x40]
0x11422:	cmp	r12, rbp
0x11425:	jle	0x114b4


0x11380:	push	r12
0x11382:	mov	r12, qword ptr [rdi + 0x58]
0x11386:	cmp	qword ptr [rdi + 0x40], r12
0x1138a:	push	rbp
0x1138b:	mov	rbp, rdi
0x1138e:	cmovle	r12, qword ptr [rdi + 0x40]
0x11393:	push	rbx
0x11394:	mov	rbx, qword ptr [rdi + 0x30]
0x11398:	cmp	r12, rbx
0x1139b:	jle	0x113d5


0x11290:	push	r14
0x11292:	push	r13
0x11294:	mov	r14, rdi
0x11297:	push	r12
0x11299:	push	rbp
0x1129a:	mov	r12, rdx
0x1129d:	push	rbx
0x1129e:	mov	rbx, qword ptr [rsi + 0x10]
0x112a2:	mov	rbp, rsi
0x112a5:	mov	qword ptr [rsi], rdx
0x112a8:	mov	qword ptr [rsi + 0x28], 0
0x112b0:	lea	r13, [rsi + 0x20]
0x112b4:	lea	rdi, [rbx*8]
0x112bc:	mov	qword ptr [rsi + 0x20], rbx
0x112c0:	call	0x2780


0x11160:	push	rbp
0x11161:	push	rbx
0x11162:	mov	rbp, rsi
0x11165:	mov	rbx, rdi
0x11168:	sub	rsp, 8
0x1116c:	mov	rdx, qword ptr [rdi]
0x1116f:	test	rdx, rdx
0x11172:	je	0x11198


0x110f0:	push	rbp
0x110f1:	push	rbx
0x110f2:	mov	rbp, rsi
0x110f5:	mov	rbx, rdi
0x110f8:	sub	rsp, 8
0x110fc:	mov	rsi, qword ptr [rdi + 8]
0x11100:	cmp	qword ptr [rdi], rsi
0x11103:	mov	rax, qword ptr [rdi + 0x10]
0x11107:	je	0x11128


0x11050:	push	rbp
0x11051:	push	rbx
0x11052:	mov	rbp, rsi
0x11055:	mov	rbx, rdi
0x11058:	sub	rsp, 8
0x1105c:	cmp	dword ptr [rdi + 0x90], 1
0x11063:	jle	0x110ad


0x10ff0:	push	r12
0x10ff2:	mov	r12, rsi
0x10ff5:	push	rbp
0x10ff6:	mov	rbp, rdx
0x10ff9:	push	rbx
0x10ffa:	mov	rbx, rdi
0x10ffd:	jmp	0x11003


0x10f80:	push	r12
0x10f82:	mov	r12, rsi
0x10f85:	push	rbp
0x10f86:	mov	rbp, rdx
0x10f89:	push	rbx
0x10f8a:	mov	rbx, rdi
0x10f8d:	jmp	0x10f93


0x10f10:	mov	rax, qword ptr [rdi + 0xd8]
0x10f17:	lea	rsi, [rsi + rsi*4]
0x10f1b:	lea	rax, [rax + rsi*8]
0x10f1f:	mov	r10, qword ptr [rax + 0x10]
0x10f23:	cmp	r10, r8
0x10f26:	jg	0x10f70


0x10ce0:	push	r15
0x10ce2:	push	r14
0x10ce4:	mov	r9, rdx
0x10ce7:	push	r13
0x10ce9:	push	r12
0x10ceb:	lea	rdx, [rcx + rcx*2]
0x10cef:	push	rbp
0x10cf0:	push	rbx
0x10cf1:	mov	r15d, esi
0x10cf4:	sub	rsp, 0x48
0x10cf8:	mov	r14, qword ptr [rdi + 0x98]
0x10cff:	mov	qword ptr [rsp], rdi
0x10d03:	mov	rax, qword ptr [r14 + 0x30]
0x10d07:	lea	r12, [rax + rdx*8]
0x10d0b:	cmp	qword ptr [r12 + 8], 0
0x10d11:	jle	0x10ea5


0x10cc0:	cmp	byte ptr [rsi + 0x30], 0x11
0x10cc4:	je	0x10cd0


0x10b90:	mov	rax, qword ptr [rsi + 0x48]
0x10b94:	cmp	qword ptr [rsi + 0x68], rax
0x10b98:	jle	0x10bf0


0x10340:	push	r15
0x10342:	push	r14
0x10344:	lea	rsi, [rip + 0x124cc]
0x1034b:	push	r13
0x1034d:	push	r12
0x1034f:	lea	rdi, [rip + 0x1237a]
0x10356:	push	rbp
0x10357:	push	rbx
0x10358:	sub	rsp, 0x68
0x1035c:	mov	rax, qword ptr fs:[0x28]
0x10365:	mov	qword ptr [rsp + 0x58], rax
0x1036a:	xor	eax, eax
0x1036c:	call	0x28d0


0x10300:	push	rbx
0x10301:	mov	rbx, rdi
0x10304:	mov	rdi, qword ptr [rdi]
0x10307:	call	0x2a10


0x10270:	push	rbx
0x10271:	mov	rbx, rdi
0x10274:	call	0x2530


0x101e0:	push	r13
0x101e2:	push	r12
0x101e4:	mov	r13, rsi
0x101e7:	push	rbp
0x101e8:	push	rbx
0x101e9:	mov	rbx, rdi
0x101ec:	mov	r12, rdx
0x101ef:	sub	rsp, 0x18
0x101f3:	mov	rax, qword ptr fs:[0x28]
0x101fc:	mov	qword ptr [rsp + 8], rax
0x10201:	xor	eax, eax
0x10203:	lea	rax, [rsp + 4]
0x10208:	test	rdi, rdi
0x1020b:	cmove	rbx, rax
0x1020f:	mov	rdi, rbx
0x10212:	call	0x2580


0x10090:	push	r14
0x10092:	push	r13
0x10094:	push	r12
0x10096:	push	rbp
0x10097:	mov	r12d, esi
0x1009a:	push	rbx
0x1009b:	mov	rbx, rdi
0x1009e:	call	0x2410


0x10060:	cmp	edx, 4
0x10063:	ja	0x10070


0xf8e0:	push	r14
0xf8e2:	push	r13
0xf8e4:	push	r12
0xf8e6:	push	rbp
0xf8e7:	push	rbx
0xf8e8:	mov	rbp, qword ptr [rdi]
0xf8eb:	test	rbp, rbp
0xf8ee:	je	0xf9fe


0xf750:	push	r12
0xf752:	push	rbp
0xf753:	mov	rbp, rdi
0xf756:	push	rbx
0xf757:	mov	rdi, qword ptr [rdi]
0xf75a:	test	rdi, rdi
0xf75d:	je	0xf7a3


0xf3a0:	push	r15
0xf3a2:	push	r14
0xf3a4:	push	r13
0xf3a6:	push	r12
0xf3a8:	push	rbp
0xf3a9:	push	rbx
0xf3aa:	sub	rsp, 0x28
0xf3ae:	test	esi, 0xfffff000
0xf3b4:	jne	0xf738


0xe9c0:	push	r15
0xe9c2:	push	r14
0xe9c4:	mov	r15, rdi
0xe9c7:	push	r13
0xe9c9:	push	r12
0xe9cb:	push	rbp
0xe9cc:	push	rbx
0xe9cd:	sub	rsp, 0x78
0xe9d1:	mov	rbp, qword ptr [rdi]
0xe9d4:	mov	rax, qword ptr fs:[0x28]
0xe9dd:	mov	qword ptr [rsp + 0x68], rax
0xe9e2:	xor	eax, eax
0xe9e4:	mov	dword ptr [rsp + 0x58], esi
0xe9e8:	mov	rax, qword ptr [rbp + 0x18]
0xe9ec:	test	rax, rax
0xe9ef:	mov	qword ptr [rsp + 0x50], rax
0xe9f4:	je	0xee30


0xe900:	sub	rsp, 0x28
0xe904:	mov	rcx, rsi
0xe907:	mov	rax, qword ptr fs:[0x28]
0xe910:	mov	qword ptr [rsp + 0x18], rax
0xe915:	xor	eax, eax
0xe917:	and	edi, 0x102
0xe91d:	jne	0xe960


0xe850:	and	edi, 0x102
0xe856:	push	r12
0xe858:	mov	r12, rsi
0xe85b:	push	rbp
0xe85c:	push	rbx
0xe85d:	mov	rbx, rdx
0xe860:	je	0xe8d0


0xe5d0:	push	r15
0xe5d2:	push	r14
0xe5d4:	mov	r14, rsi
0xe5d7:	push	r13
0xe5d9:	push	r12
0xe5db:	mov	r13, rdi
0xe5de:	push	rbp
0xe5df:	push	rbx
0xe5e0:	mov	r12d, edx
0xe5e3:	mov	rbp, rcx
0xe5e6:	sub	rsp, 0xb8
0xe5ed:	mov	ebx, dword ptr [rdi + 0x48]
0xe5f0:	mov	rax, qword ptr fs:[0x28]
0xe5f9:	mov	qword ptr [rsp + 0xa8], rax
0xe601:	xor	eax, eax
0xe603:	mov	r9d, ebx
0xe606:	and	r9d, 4
0xe60a:	test	rcx, rcx
0xe60d:	je	0xe6c0


0xe590:	mov	rax, rdx
0xe593:	mov	edx, esi
0xe595:	shl	edx, 0xd
0xe598:	and	edx, 0x20000
0xe59e:	or	edx, 0x90900
0xe5a4:	and	esi, 0x200
0xe5aa:	jne	0xe5c0


0xe520:	and	edi, 0x102
0xe526:	push	rbx
0xe527:	mov	rbx, rsi
0xe52a:	je	0xe560


0xe4b0:	push	rbx
0xe4b1:	mov	rcx, qword ptr [rsi]
0xe4b4:	mov	rbx, rdi
0xe4b7:	mov	rdi, qword ptr [rdi]
0xe4ba:	lea	rax, [rcx + rdx + 0x100]
0xe4c2:	cmp	rcx, rax
0xe4c5:	ja	0xe4e8


0xe450:	push	rbp
0xe451:	push	rbx
0xe452:	mov	rbx, rdi
0xe455:	sub	rsp, 8
0xe459:	mov	edx, dword ptr [rdi + 0x48]
0xe45c:	mov	ebp, edx
0xe45e:	and	ebp, 4
0xe461:	jne	0xe4a8


0xe3e0:	push	rbp
0xe3e1:	push	rbx
0xe3e2:	mov	ebp, esi
0xe3e4:	mov	rbx, rdi
0xe3e7:	sub	rsp, 8
0xe3eb:	mov	esi, dword ptr [rdi + 0x2c]
0xe3ee:	cmp	esi, ebp
0xe3f0:	jne	0xe3f7


0xe370:	sub	rsp, 8
0xe374:	call	0xe240


0xe240:	push	r13
0xe242:	push	r12
0xe244:	push	rbp
0xe245:	push	rbx
0xe246:	sub	rsp, 0x98
0xe24d:	mov	rbx, qword ptr [rdi + 0x50]
0xe251:	mov	rax, qword ptr fs:[0x28]
0xe25a:	mov	qword ptr [rsp + 0x88], rax
0xe262:	xor	eax, eax
0xe264:	test	byte ptr [rbx + 0x49], 2
0xe268:	je	0xe2d2


0xe200:	push	rbx
0xe201:	mov	rbx, rdi
0xe204:	jmp	0xe21c


0xe1b0:	test	rdi, rdi
0xe1b3:	je	0xe1f0


0xe120:	push	r13
0xe122:	push	r12
0xe124:	mov	r12, rdi
0xe127:	push	rbp
0xe128:	lea	rdi, [rdx + 0x110]
0xe12f:	push	rbx
0xe130:	mov	r13, rsi
0xe133:	mov	rbp, rdx
0xe136:	sub	rsp, 8
0xe13a:	and	rdi, 0xfffffffffffffff8
0xe13e:	call	0x2780


0xe010:	push	r13
0xe012:	push	r12
0xe014:	mov	r12, rdx
0xe017:	push	rbp
0xe018:	push	rbx
0xe019:	mov	rbp, rdi
0xe01c:	mov	rbx, rsi
0xe01f:	sub	rsp, 8
0xe023:	cmp	qword ptr [rbp + 0x38], rdx
0xe027:	mov	r13, qword ptr [rdi + 0x40]
0xe02b:	mov	rdi, qword ptr [rdi + 0x10]
0xe02f:	jae	0xe065


0xde40:	push	r12
0xde42:	push	rbp
0xde43:	mov	rbp, rsi
0xde46:	push	rbx
0xde47:	cmp	qword ptr [rbp + 0x58], 0
0xde4c:	lea	rbx, [rsi + 0x78]
0xde50:	mov	r12, rdi
0xde53:	mov	eax, dword ptr [rdi + 0x48]
0xde56:	mov	rsi, qword ptr [rsi + 0x30]
0xde5a:	jne	0xdec0


0xde10:	mov	rdx, qword ptr [rdi]
0xde13:	mov	rax, qword ptr [rsi]
0xde16:	mov	rax, qword ptr [rax + 0x80]
0xde1d:	cmp	qword ptr [rdx + 0x80], rax
0xde24:	jb	0xde30


0xde00:	mov	rax, qword ptr [rsi]
0xde03:	cmp	qword ptr [rdi], rax
0xde06:	sete	al
0xde09:	ret	


0xddf0:	mov	rax, qword ptr [rdi]
0xddf3:	xor	edx, edx
0xddf5:	div	rsi
0xddf8:	mov	rax, rdx
0xddfb:	ret	


0xdde0:	mov	rax, qword ptr [rdi + 8]
0xdde4:	xor	edx, edx
0xdde6:	div	rsi
0xdde9:	mov	rax, rdx
0xddec:	ret	


0xddc0:	xor	eax, eax
0xddc2:	mov	rdx, qword ptr [rsi + 8]
0xddc6:	cmp	qword ptr [rdi + 8], rdx
0xddca:	je	0xddd0


0xdd60:	mov	rax, qword ptr [rdi + 8]
0xdd64:	cmp	qword ptr [rdi + 0x10], rax
0xdd68:	je	0xdd70


0xdd20:	test	rdi, rdi
0xdd23:	push	rbx
0xdd24:	mov	rbx, rdi
0xdd27:	je	0xdd3a


0xdca0:	push	r12
0xdca2:	push	rbp
0xdca3:	push	rbx
0xdca4:	mov	rbx, rdi
0xdca7:	call	0x2730


0xd880:	push	r15
0xd882:	push	r14
0xd884:	push	r13
0xd886:	push	r12
0xd888:	push	rbp
0xd889:	push	rbx
0xd88a:	sub	rsp, 0x28
0xd88e:	mov	rax, qword ptr fs:[0x28]
0xd897:	mov	qword ptr [rsp + 0x18], rax
0xd89c:	xor	eax, eax
0xd89e:	cmp	edx, 0x24
0xd8a1:	ja	0xdc05


0xd7d0:	push	r13
0xd7d2:	push	r12
0xd7d4:	mov	r10d, esi
0xd7d7:	push	rbp
0xd7d8:	push	rbx
0xd7d9:	mov	r12, r8
0xd7dc:	sub	rsp, 0x18
0xd7e0:	mov	rax, qword ptr fs:[0x28]
0xd7e9:	mov	qword ptr [rsp + 8], rax
0xd7ee:	xor	eax, eax
0xd7f0:	cmp	edi, 3
0xd7f3:	mov	ebp, dword ptr [rip + 0x21a82f]
0xd7f9:	ja	0xd854


0xd3b0:	push	r15
0xd3b2:	push	r14
0xd3b4:	push	r13
0xd3b6:	push	r12
0xd3b8:	push	rbp
0xd3b9:	push	rbx
0xd3ba:	sub	rsp, 0x28
0xd3be:	mov	rax, qword ptr fs:[0x28]
0xd3c7:	mov	qword ptr [rsp + 0x18], rax
0xd3cc:	xor	eax, eax
0xd3ce:	cmp	edx, 0x24
0xd3d1:	ja	0xd735


0xccf0:	push	r15
0xccf2:	push	r14
0xccf4:	push	r13
0xccf6:	push	r12
0xccf8:	push	rbp
0xccf9:	push	rbx
0xccfa:	sub	rsp, 0x28
0xccfe:	mov	rax, qword ptr fs:[0x28]
0xcd07:	mov	qword ptr [rsp + 0x18], rax
0xcd0c:	xor	eax, eax
0xcd0e:	cmp	edx, 0x24
0xcd11:	ja	0xd37f


0xccc0:	mov	edx, dword ptr [rdi + 0x48]
0xccc3:	mov	eax, 1
0xccc8:	and	edx, 0x11
0xcccb:	cmp	edx, 0x10
0xccce:	je	0xccd7


0xcc70:	sub	rsp, 8
0xcc74:	or	esi, 0x200
0xcc7a:	call	0xf3a0


0xcc30:	lea	rsi, [rip + 0x156b8]
0xcc37:	sub	rsp, 8
0xcc3b:	mov	edx, 5
0xcc40:	xor	edi, edi
0xcc42:	call	0x2510


0xcc10:	push	rbx
0xcc11:	mov	rbx, rdi
0xcc14:	call	0x2530


0xcbe0:	push	rbp
0xcbe1:	push	rbx
0xcbe2:	mov	rbp, rdi
0xcbe5:	mov	rdi, rsi
0xcbe8:	mov	rbx, rsi
0xcbeb:	sub	rsp, 8
0xcbef:	call	0xc9e0


0xcbb0:	mov	rax, rdi
0xcbb3:	sub	rsp, 8
0xcbb7:	mul	rsi
0xcbba:	seto	dl
0xcbbd:	test	rax, rax
0xcbc0:	js	0xcbd9


0xcb90:	push	rbx
0xcb91:	mov	rbx, rdi
0xcb94:	call	0xc9e0


0xcb40:	test	rdi, rdi
0xcb43:	mov	rax, qword ptr [rsi]
0xcb46:	je	0xcb70


0xcab0:	test	rdi, rdi
0xcab3:	mov	r9, rdx
0xcab6:	mov	rcx, qword ptr [rsi]
0xcab9:	je	0xcaf0


0xca80:	mov	rax, rsi
0xca83:	mul	rdx
0xca86:	mov	rsi, rax
0xca89:	seto	al
0xca8c:	test	rsi, rsi
0xca8f:	js	0xca9b


0xca40:	test	rsi, rsi
0xca43:	push	rbx
0xca44:	mov	rbx, rsi
0xca47:	jne	0xca4e


0xca30:	jmp	0xc9e0


0xca00:	mov	rax, rdi
0xca03:	mul	rsi
0xca06:	mov	rdi, rax
0xca09:	seto	al
0xca0c:	test	rdi, rdi
0xca0f:	js	0xca1b


0xc9e0:	push	rbx
0xc9e1:	mov	rbx, rdi
0xc9e4:	call	0x2780


0xc960:	push	rbx
0xc961:	lea	rsi, [rip + 0x1567a]
0xc968:	mov	edx, 5
0xc96d:	xor	edi, edi
0xc96f:	call	0x2510


0xc880:	push	rbp
0xc881:	push	rbx
0xc882:	mov	r10d, 0x20
0xc888:	xor	r11d, r11d
0xc88b:	sub	rsp, 0xb8
0xc892:	mov	rax, qword ptr fs:[0x28]
0xc89b:	mov	qword ptr [rsp + 0x78], rax
0xc8a0:	xor	eax, eax
0xc8a2:	lea	rax, [rsp + 0xd0]
0xc8aa:	mov	qword ptr [rsp + 0xa0], r8
0xc8b2:	lea	rbx, [rsp + 0xd0]
0xc8ba:	lea	r8, [rsp + 0x20]
0xc8bf:	mov	qword ptr [rsp + 0xa8], r9
0xc8c7:	mov	dword ptr [rsp + 8], 0x20
0xc8cf:	mov	qword ptr [rsp + 0x10], rax
0xc8d4:	lea	rax, [rsp + 0x80]
0xc8dc:	xor	r9d, r9d
0xc8df:	mov	qword ptr [rsp + 0x18], rax
0xc8e4:	mov	rbp, rax
0xc8e7:	nop	word ptr [rax + rax]
0xc8f0:	cmp	r10d, 0x2f
0xc8f4:	ja	0xc94c


0xc800:	sub	rsp, 0x68
0xc804:	mov	r10, r8
0xc807:	xor	r9d, r9d
0xc80a:	mov	rax, qword ptr fs:[0x28]
0xc813:	mov	qword ptr [rsp + 0x58], rax
0xc818:	xor	eax, eax
0xc81a:	mov	r8, rsp
0xc81d:	nop	dword ptr [rax]
0xc820:	mov	eax, dword ptr [r10]
0xc823:	cmp	eax, 0x2f
0xc826:	ja	0xc86a


0xc7e0:	xor	r9d, r9d
0xc7e3:	cmp	qword ptr [r8], 0
0xc7e7:	je	0xc7fb


0xc3c0:	push	r15
0xc3c2:	push	r14
0xc3c4:	push	r13
0xc3c6:	push	r12
0xc3c8:	mov	r12, r9
0xc3cb:	push	rbp
0xc3cc:	push	rbx
0xc3cd:	mov	rbp, rdi
0xc3d0:	mov	rbx, r8
0xc3d3:	sub	rsp, 0x28
0xc3d7:	test	rsi, rsi
0xc3da:	je	0xc4f8


0xc380:	push	rbp
0xc381:	push	rbx
0xc382:	mov	rdx, rsi
0xc385:	mov	rbx, rsi
0xc388:	xor	esi, esi
0xc38a:	mov	rbp, rdi
0xc38d:	sub	rsp, 8
0xc391:	call	0x2670


0xc360:	lea	rcx, [rip + 0x21bcd9]
0xc367:	mov	rsi, rdi
0xc36a:	mov	rdx, -1
0xc371:	xor	edi, edi
0xc373:	jmp	0xba20


0xc340:	lea	rcx, [rip + 0x21bcf9]
0xc347:	mov	rdx, -1
0xc34e:	jmp	0xba20


0xc320:	lea	rcx, [rip + 0x21bd19]
0xc327:	mov	rdx, rsi
0xc32a:	mov	rsi, rdi
0xc32d:	xor	edi, edi
0xc32f:	jmp	0xba20


0xc310:	lea	rcx, [rip + 0x21bd29]
0xc317:	jmp	0xba20


0xc2f0:	mov	r8, rcx
0xc2f3:	mov	rcx, rdx
0xc2f6:	mov	rdx, rsi
0xc2f9:	mov	rsi, rdi
0xc2fc:	xor	edi, edi
0xc2fe:	jmp	0xc220


0xc2d0:	mov	rcx, rdx
0xc2d3:	mov	r8, -1
0xc2da:	mov	rdx, rsi
0xc2dd:	mov	rsi, rdi
0xc2e0:	xor	edi, edi
0xc2e2:	jmp	0xc220


0xc2c0:	mov	r8, -1
0xc2c7:	jmp	0xc220


0xc220:	sub	rsp, 0x48
0xc224:	mov	r9, rcx
0xc227:	mov	rcx, qword ptr [rip + 0x21c0c2]
0xc22e:	movdqa	xmm0, xmmword ptr [rip + 0x21c08a]
0xc236:	mov	rax, qword ptr fs:[0x28]
0xc23f:	mov	qword ptr [rsp + 0x38], rax
0xc244:	xor	eax, eax
0xc246:	movaps	xmmword ptr [rsp], xmm0
0xc24a:	test	rsi, rsi
0xc24d:	mov	qword ptr [rsp + 0x30], rcx
0xc252:	mov	dword ptr [rsp], 0xa
0xc259:	movdqa	xmm0, xmmword ptr [rip + 0x21c06f]
0xc261:	movaps	xmmword ptr [rsp + 0x10], xmm0
0xc266:	movdqa	xmm0, xmmword ptr [rip + 0x21c072]
0xc26e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0xc273:	je	0xc2a7


0xc190:	sub	rsp, 0x48
0xc194:	mov	rax, rdx
0xc197:	mov	rdx, qword ptr fs:[0x28]
0xc1a0:	mov	qword ptr [rsp + 0x38], rdx
0xc1a5:	xor	edx, edx
0xc1a7:	cmp	esi, 0xa
0xc1aa:	je	0xc214


0xc180:	mov	edx, 0x3a
0xc185:	jmp	0xc0b0


0xc160:	mov	edx, 0x3a
0xc165:	mov	rsi, -1
0xc16c:	jmp	0xc0b0


0xc150:	movsx	edx, sil
0xc154:	mov	rsi, -1
0xc15b:	jmp	0xc0b0


0xc0b0:	sub	rsp, 0x48
0xc0b4:	mov	ecx, edx
0xc0b6:	mov	rax, qword ptr fs:[0x28]
0xc0bf:	mov	qword ptr [rsp + 0x38], rax
0xc0c4:	xor	eax, eax
0xc0c6:	mov	rax, qword ptr [rip + 0x21c223]
0xc0cd:	mov	r8, rsp
0xc0d0:	and	ecx, 0x1f
0xc0d3:	movdqa	xmm0, xmmword ptr [rip + 0x21c1e5]
0xc0db:	mov	qword ptr [rsp + 0x30], rax
0xc0e0:	mov	eax, edx
0xc0e2:	movaps	xmmword ptr [rsp], xmm0
0xc0e6:	shr	al, 5
0xc0e9:	movzx	eax, al
0xc0ec:	lea	r9, [r8 + rax*4 + 8]
0xc0f1:	movdqa	xmm0, xmmword ptr [rip + 0x21c1d7]
0xc0f9:	movaps	xmmword ptr [rsp + 0x10], xmm0
0xc0fe:	movdqa	xmm0, xmmword ptr [rip + 0x21c1da]
0xc106:	movaps	xmmword ptr [rsp + 0x20], xmm0
0xc10b:	mov	edx, dword ptr [r9]
0xc10e:	mov	eax, edx
0xc110:	shr	eax, cl
0xc112:	not	eax
0xc114:	and	eax, 1
0xc117:	shl	eax, cl
0xc119:	mov	rcx, r8
0xc11c:	xor	eax, edx
0xc11e:	mov	rdx, rsi
0xc121:	mov	rsi, rdi
0xc124:	mov	dword ptr [r9], eax
0xc127:	xor	edi, edi
0xc129:	call	0xba20


0xc0a0:	mov	rcx, rdx
0xc0a3:	mov	rdx, rsi
0xc0a6:	mov	esi, edi
0xc0a8:	xor	edi, edi
0xc0aa:	jmp	0xc000


0xc090:	mov	rdx, rsi
0xc093:	mov	esi, edi
0xc095:	xor	edi, edi
0xc097:	jmp	0xbf70


0xc000:	sub	rsp, 0x48
0xc004:	mov	rax, rdx
0xc007:	mov	rdx, rcx
0xc00a:	mov	rcx, qword ptr fs:[0x28]
0xc013:	mov	qword ptr [rsp + 0x38], rcx
0xc018:	xor	ecx, ecx
0xc01a:	cmp	esi, 0xa
0xc01d:	je	0xc080


0xbf70:	sub	rsp, 0x48
0xbf74:	mov	rax, rdx
0xbf77:	mov	rdx, qword ptr fs:[0x28]
0xbf80:	mov	qword ptr [rsp + 0x38], rdx
0xbf85:	xor	edx, edx
0xbf87:	cmp	esi, 0xa
0xbf8a:	je	0xbff4


0xbf50:	lea	rcx, [rip + 0x21c369]
0xbf57:	mov	rdx, rsi
0xbf5a:	mov	rsi, rdi
0xbf5d:	xor	edi, edi
0xbf5f:	jmp	0xba20


0xbf30:	lea	rcx, [rip + 0x21c389]
0xbf37:	mov	rsi, rdi
0xbf3a:	mov	rdx, -1
0xbf41:	xor	edi, edi
0xbf43:	jmp	0xba20


0xbf20:	lea	rcx, [rip + 0x21c399]
0xbf27:	jmp	0xba20


0xbf00:	lea	rcx, [rip + 0x21c3b9]
0xbf07:	mov	rdx, -1
0xbf0e:	jmp	0xba20


0xbe60:	mov	eax, dword ptr [rip + 0x21c212]
0xbe66:	push	r12
0xbe68:	mov	r12, qword ptr [rip + 0x21c211]
0xbe6f:	push	rbp
0xbe70:	push	rbx
0xbe71:	cmp	eax, 1
0xbe74:	jle	0xbea1


0xbe50:	mov	rcx, rdx
0xbe53:	xor	edx, edx
0xbe55:	jmp	0xbd60


0xbd60:	push	r15
0xbd62:	push	r14
0xbd64:	lea	rax, [rip + 0x21c555]
0xbd6b:	push	r13
0xbd6d:	push	r12
0xbd6f:	mov	r12, rdx
0xbd72:	push	rbp
0xbd73:	push	rbx
0xbd74:	mov	rbx, rcx
0xbd77:	mov	r14, rdi
0xbd7a:	mov	r15, rsi
0xbd7d:	sub	rsp, 0x38
0xbd81:	test	rcx, rcx
0xbd84:	cmove	rbx, rax
0xbd88:	xor	ebp, ebp
0xbd8a:	call	0x2410


0xbce0:	push	r15
0xbce2:	push	r14
0xbce4:	lea	rax, [rip + 0x21c5d5]
0xbceb:	push	r13
0xbced:	push	r12
0xbcef:	mov	r13, rdi
0xbcf2:	push	rbp
0xbcf3:	push	rbx
0xbcf4:	mov	rbx, r8
0xbcf7:	mov	r14, rsi
0xbcfa:	mov	r15, rdx
0xbcfd:	sub	rsp, 0x18
0xbd01:	test	r8, r8
0xbd04:	cmove	rbx, rax
0xbd08:	mov	qword ptr [rsp + 8], rcx
0xbd0d:	call	0x2410


0xbcb0:	lea	rax, [rip + 0x21c609]
0xbcb7:	test	rdi, rdi
0xbcba:	cmove	rdi, rax
0xbcbe:	test	rsi, rsi
0xbcc1:	mov	dword ptr [rdi], 0xa
0xbcc7:	je	0xbcd7


0xbc90:	lea	rax, [rip + 0x21c629]
0xbc97:	test	rdi, rdi
0xbc9a:	cmove	rdi, rax
0xbc9e:	mov	eax, dword ptr [rdi + 4]
0xbca1:	mov	dword ptr [rdi + 4], esi
0xbca4:	ret	


0xbc50:	lea	rax, [rip + 0x21c669]
0xbc57:	test	rdi, rdi
0xbc5a:	mov	ecx, esi
0xbc5c:	cmove	rdi, rax
0xbc60:	mov	eax, esi
0xbc62:	and	ecx, 0x1f
0xbc65:	shr	al, 5
0xbc68:	movzx	eax, al
0xbc6b:	lea	rdi, [rdi + rax*4 + 8]
0xbc70:	mov	esi, dword ptr [rdi]
0xbc72:	mov	eax, esi
0xbc74:	shr	eax, cl
0xbc76:	xor	edx, eax
0xbc78:	and	eax, 1
0xbc7b:	and	edx, 1
0xbc7e:	shl	edx, cl
0xbc80:	xor	edx, esi
0xbc82:	mov	dword ptr [rdi], edx
0xbc84:	ret	


0xbc30:	lea	rax, [rip + 0x21c689]
0xbc37:	test	rdi, rdi
0xbc3a:	cmove	rdi, rax
0xbc3e:	mov	dword ptr [rdi], esi
0xbc40:	ret	


0xbc10:	lea	rax, [rip + 0x21c6a9]
0xbc17:	test	rdi, rdi
0xbc1a:	cmove	rdi, rax
0xbc1e:	mov	eax, dword ptr [rdi]
0xbc20:	ret	


0xbbd0:	push	r12
0xbbd2:	push	rbp
0xbbd3:	push	rbx
0xbbd4:	mov	rbx, rdi
0xbbd7:	call	0x2410


0xba20:	push	r15
0xba22:	push	r14
0xba24:	movsxd	r15, edi
0xba27:	push	r13
0xba29:	push	r12
0xba2b:	mov	r14, rdx
0xba2e:	push	rbp
0xba2f:	push	rbx
0xba30:	mov	rbp, rcx
0xba33:	sub	rsp, 0x28
0xba37:	mov	qword ptr [rsp + 8], rsi
0xba3c:	call	0x2410


0xa7e0:	push	r15
0xa7e2:	push	r14
0xa7e4:	mov	r15d, r8d
0xa7e7:	push	r13
0xa7e9:	push	r12
0xa7eb:	mov	r14, rdi
0xa7ee:	push	rbp
0xa7ef:	push	rbx
0xa7f0:	mov	ebx, r9d
0xa7f3:	mov	r13, rsi
0xa7f6:	mov	rbp, rcx
0xa7f9:	and	ebx, 2
0xa7fc:	sub	rsp, 0xb8
0xa803:	mov	rax, qword ptr [rsp + 0xf0]
0xa80b:	mov	qword ptr [rsp + 0x10], rdx
0xa810:	mov	dword ptr [rsp + 8], r8d
0xa815:	mov	dword ptr [rsp + 0x78], r9d
0xa81a:	mov	qword ptr [rsp + 0x20], rax
0xa81f:	mov	rax, qword ptr [rsp + 0xf8]
0xa827:	mov	qword ptr [rsp + 0x68], rax
0xa82c:	mov	rax, qword ptr [rsp + 0x100]
0xa834:	mov	qword ptr [rsp + 0x60], rax
0xa839:	mov	rax, qword ptr fs:[0x28]
0xa842:	mov	qword ptr [rsp + 0xa8], rax
0xa84a:	xor	eax, eax
0xa84c:	call	0x2520


0xa6f0:	push	rbp
0xa6f1:	push	rbx
0xa6f2:	mov	rbp, rdi
0xa6f5:	mov	ebx, esi
0xa6f7:	sub	rsp, 8
0xa6fb:	call	0x1f5c0


0xa650:	test	rdi, rdi
0xa653:	push	rbx
0xa654:	je	0xa6cd


0x9f40:	push	r15
0x9f42:	push	r14
0x9f44:	push	r13
0x9f46:	push	r12
0x9f48:	push	rbp
0x9f49:	push	rbx
0x9f4a:	sub	rsp, 0x98
0x9f51:	mov	rax, qword ptr fs:[0x28]
0x9f5a:	mov	qword ptr [rsp + 0x88], rax
0x9f62:	xor	eax, eax
0x9f64:	cmp	rdi, rsi
0x9f67:	je	0xa2f0


0x9f20:	mov	eax, edi
0x9f22:	lea	rdx, [rip + 0x17b17]
0x9f29:	mov	ecx, edi
0x9f2b:	shr	al, 5
0x9f2e:	and	ecx, 0x1f
0x9f31:	and	eax, 7
0x9f34:	mov	eax, dword ptr [rdx + rax*4]
0x9f37:	shr	eax, cl
0x9f39:	and	eax, 1
0x9f3c:	ret	


0x9ec0:	push	rbp
0x9ec1:	push	rbx
0x9ec2:	mov	rbx, rsi
0x9ec5:	lea	rax, [rbx + 0x18]
0x9ec9:	mov	rbp, rdi
0x9ecc:	sub	rsp, 8
0x9ed0:	mov	rsi, qword ptr [rsi]
0x9ed3:	mov	rdx, qword ptr [rbx + 8]
0x9ed7:	cmp	rsi, rax
0x9eda:	je	0x9f00


0x9e90:	push	rbx
0x9e91:	mov	ebx, edi
0x9e93:	call	0x2760


0x9df0:	test	rdi, rdi
0x9df3:	lea	rcx, [rsi + 0x14]
0x9df7:	mov	byte ptr [rsi + 0x14], 0
0x9dfb:	movabs	r9, 0x6666666666666667
0x9e05:	movabs	rsi, 0xcccccccccccccccd
0x9e0f:	mov	r8d, 0x30
0x9e15:	js	0x9e53


0x9d50:	push	rbp
0x9d51:	push	rbx
0x9d52:	mov	rbp, rdi
0x9d55:	sub	rsp, 0x18
0x9d59:	mov	rbx, qword ptr [rdi + 0x10]
0x9d5d:	test	rbx, rbx
0x9d60:	je	0x9dc0


0x9d30:	push	rbx
0x9d31:	mov	rbx, rdi
0x9d34:	mov	rdi, qword ptr [rdi]
0x9d37:	call	0x87b0


0x9cc0:	push	rbp
0x9cc1:	push	rbx
0x9cc2:	mov	rbp, rdi
0x9cc5:	mov	edi, 0x18
0x9cca:	sub	rsp, 8
0x9cce:	call	0x2780


0x9cb0:	mov	rax, qword ptr [rsi]
0x9cb3:	cmp	qword ptr [rdi], rax
0x9cb6:	sete	al
0x9cb9:	ret	


0x9ca0:	mov	rax, qword ptr [rdi]
0x9ca3:	xor	edx, edx
0x9ca5:	div	rsi
0x9ca8:	mov	rax, rdx
0x9cab:	ret	


0x9ab0:	push	r13
0x9ab2:	push	r12
0x9ab4:	mov	r13, rsi
0x9ab7:	push	rbp
0x9ab8:	push	rbx
0x9ab9:	mov	r12, rdx
0x9abc:	mov	rbx, rdi
0x9abf:	sub	rsp, 0x18
0x9ac3:	mov	rax, qword ptr fs:[0x28]
0x9acc:	mov	qword ptr [rsp + 8], rax
0x9ad1:	xor	eax, eax
0x9ad3:	test	rdi, rdi
0x9ad6:	je	0x9bf0


0x90a0:	push	r15
0x90a2:	push	r14
0x90a4:	mov	eax, edx
0x90a6:	push	r13
0x90a8:	push	r12
0x90aa:	mov	r15d, edx
0x90ad:	push	rbp
0x90ae:	push	rbx
0x90af:	and	eax, 0x20
0x90b2:	and	r15d, 3
0x90b6:	mov	r12d, edx
0x90b9:	mov	rbx, rdi
0x90bc:	sub	rsp, 0x98
0x90c3:	mov	qword ptr [rsp + 0x18], rcx
0x90c8:	mov	dword ptr [rsp + 0x30], eax
0x90cc:	mov	rcx, qword ptr fs:[0x28]
0x90d5:	mov	qword ptr [rsp + 0x88], rcx
0x90dd:	xor	ecx, ecx
0x90df:	cmp	eax, 1
0x90e2:	mov	qword ptr [rsp], rsi
0x90e6:	mov	qword ptr [rsp + 0x10], r8
0x90eb:	sbb	eax, eax
0x90ed:	and	eax, 0xffffffe8
0x90f0:	add	eax, 0x400
0x90f5:	mov	dword ptr [rsp + 0x34], eax
0x90f9:	call	0x2490


0x8fd0:	fld	dword ptr [rip + 0x189fa]
0x8fd6:	fld	xword ptr [rsp + 8]
0x8fda:	fucomi	st(1)
0x8fdc:	jae	0x9050


0x8dc0:	push	r12
0x8dc2:	push	rbp
0x8dc3:	mov	ecx, 1
0x8dc8:	push	rbx
0x8dc9:	mov	rbx, rdi
0x8dcc:	sub	rsp, 0x10
0x8dd0:	mov	rdx, rsp
0x8dd3:	mov	rax, qword ptr fs:[0x28]
0x8ddc:	mov	qword ptr [rsp + 8], rax
0x8de1:	xor	eax, eax
0x8de3:	call	0x7de0


0x8d60:	push	rbx
0x8d61:	mov	rbx, rsi
0x8d64:	sub	rsp, 0x10
0x8d68:	mov	rdx, rsp
0x8d6b:	mov	rax, qword ptr fs:[0x28]
0x8d74:	mov	qword ptr [rsp + 8], rax
0x8d79:	xor	eax, eax
0x8d7b:	call	0x8ad0


0x8ad0:	push	r13
0x8ad2:	push	r12
0x8ad4:	push	rbp
0x8ad5:	push	rbx
0x8ad6:	sub	rsp, 0x18
0x8ada:	mov	rax, qword ptr fs:[0x28]
0x8ae3:	mov	qword ptr [rsp + 8], rax
0x8ae8:	xor	eax, eax
0x8aea:	test	rsi, rsi
0x8aed:	je	0x8cad


0x8890:	push	r12
0x8892:	push	rbp
0x8893:	mov	rbp, rdi
0x8896:	push	rbx
0x8897:	sub	rsp, 0x60
0x889b:	mov	r12, qword ptr [rdi + 0x28]
0x889f:	mov	rax, qword ptr fs:[0x28]
0x88a8:	mov	qword ptr [rsp + 0x58], rax
0x88ad:	xor	eax, eax
0x88af:	cmp	byte ptr [r12 + 0x10], 0
0x88b5:	jne	0x8908


0x87b0:	push	r12
0x87b2:	push	rbp
0x87b3:	mov	r12, rdi
0x87b6:	push	rbx
0x87b7:	cmp	qword ptr [rdi + 0x40], 0
0x87bc:	mov	rbp, qword ptr [rdi]
0x87bf:	mov	rax, qword ptr [rdi + 8]
0x87c3:	je	0x8813


0x8720:	push	r12
0x8722:	push	rbp
0x8723:	mov	rbp, rdi
0x8726:	push	rbx
0x8727:	mov	r12, qword ptr [rdi]
0x872a:	cmp	r12, qword ptr [rdi + 8]
0x872e:	jae	0x879b


0x8560:	push	r15
0x8562:	push	r14
0x8564:	lea	rax, [rip - 0x7db]
0x856b:	push	r13
0x856d:	push	r12
0x856f:	mov	r12, rdx
0x8572:	push	rbp
0x8573:	push	rbx
0x8574:	mov	r13, rcx
0x8577:	mov	rbp, rdi
0x857a:	mov	edi, 0x50
0x857f:	mov	r15, rsi
0x8582:	sub	rsp, 8
0x8586:	test	rdx, rdx
0x8589:	mov	r14, r8
0x858c:	cmove	r12, rax
0x8590:	lea	rax, [rip - 0x7f7]
0x8597:	test	rcx, rcx
0x859a:	cmove	r13, rax
0x859e:	call	0x2780


0x8540:	movabs	rax, 0x3f80000000000000
0x854a:	mov	byte ptr [rdi + 0x10], 0
0x854e:	mov	qword ptr [rdi], rax
0x8551:	movabs	rax, 0x3fb4fdf43f4ccccd
0x855b:	mov	qword ptr [rdi + 8], rax
0x855f:	ret	


0x8500:	movzx	ecx, byte ptr [rdi]
0x8503:	xor	edx, edx
0x8505:	test	cl, cl
0x8507:	je	0x852d


0x8490:	push	r15
0x8492:	push	r14
0x8494:	push	r13
0x8496:	push	r12
0x8498:	push	rbp
0x8499:	push	rbx
0x849a:	sub	rsp, 8
0x849e:	mov	r14, qword ptr [rdi]
0x84a1:	cmp	qword ptr [rdi + 8], r14
0x84a5:	jbe	0x84f6


0x8420:	mov	r9, qword ptr [rdi]
0x8423:	cmp	qword ptr [rdi + 8], r9
0x8427:	jbe	0x8482


0x83a0:	push	rbp
0x83a1:	push	rbx
0x83a2:	mov	rbp, rdi
0x83a5:	mov	rbx, rsi
0x83a8:	sub	rsp, 8
0x83ac:	call	0x7db0


0x8350:	cmp	qword ptr [rdi + 0x20], 0
0x8355:	je	0x8383


0x82f0:	push	r12
0x82f2:	push	rbp
0x82f3:	mov	r12, rdi
0x82f6:	push	rbx
0x82f7:	mov	rbp, rsi
0x82fa:	call	0x7db0


0x81a0:	push	r13
0x81a2:	push	r12
0x81a4:	mov	r12, rsi
0x81a7:	push	rbp
0x81a8:	push	rbx
0x81a9:	xor	ebx, ebx
0x81ab:	sub	rsp, 8
0x81af:	mov	rsi, qword ptr [rdi]
0x81b2:	mov	rcx, qword ptr [rdi + 0x20]
0x81b6:	mov	rbp, qword ptr [rdi + 0x10]
0x81ba:	mov	r13, qword ptr [rdi + 0x18]
0x81be:	mov	rdi, qword ptr [rdi + 8]
0x81c2:	cmp	rsi, rdi
0x81c5:	jae	0x8205


0x8140:	mov	rcx, qword ptr [rdi]
0x8143:	mov	r8, qword ptr [rdi + 8]
0x8147:	xor	edx, edx
0x8149:	xor	esi, esi
0x814b:	cmp	rcx, r8
0x814e:	jae	0x8186


0x80f0:	mov	rsi, qword ptr [rdi]
0x80f3:	mov	rdi, qword ptr [rdi + 8]
0x80f7:	xor	eax, eax
0x80f9:	cmp	rsi, rdi
0x80fc:	jae	0x8137


0x80e0:	mov	rax, qword ptr [rdi + 0x20]
0x80e4:	ret	


0x80d0:	mov	rax, qword ptr [rdi + 0x18]
0x80d4:	ret	


0x80c0:	mov	rax, qword ptr [rdi + 0x10]
0x80c4:	ret	


0x7f80:	push	r15
0x7f82:	push	r14
0x7f84:	push	r13
0x7f86:	push	r12
0x7f88:	push	rbp
0x7f89:	push	rbx
0x7f8a:	sub	rsp, 8
0x7f8e:	mov	r12, qword ptr [rsi]
0x7f91:	cmp	r12, qword ptr [rsi + 8]
0x7f95:	jae	0x8078


0x7f00:	mov	rdx, qword ptr [rdi]
0x7f03:	lea	rcx, [rip + 0x19a96]
0x7f0a:	mov	eax, 1
0x7f0f:	cmp	rdx, rcx
0x7f12:	je	0x7f75


0x7de0:	push	r14
0x7de2:	push	r13
0x7de4:	mov	r14, rdx
0x7de7:	push	r12
0x7de9:	push	rbp
0x7dea:	mov	r12, rdi
0x7ded:	push	rbx
0x7dee:	mov	rbp, rsi
0x7df1:	mov	r13d, ecx
0x7df4:	call	0x7db0


0x7db0:	push	rbx
0x7db1:	mov	rbx, rdi
0x7db4:	mov	rdi, rsi
0x7db7:	mov	rsi, qword ptr [rbx + 0x10]
0x7dbb:	call	qword ptr [rbx + 0x30]


0x7da0:	cmp	rdi, rsi
0x7da3:	sete	al
0x7da6:	ret	


0x7d90:	mov	rax, rdi
0x7d93:	xor	edx, edx
0x7d95:	ror	rax, 3
0x7d99:	div	rsi
0x7d9c:	mov	rax, rdx
0x7d9f:	ret	


0x7cf0:	cmp	rdi, 0xa
0x7cf4:	mov	eax, 0xa
0x7cf9:	movabs	r9, 0xaaaaaaaaaaaaaaab
0x7d03:	cmovb	rdi, rax
0x7d07:	or	rdi, 1
0x7d0b:	cmp	rdi, -1
0x7d0f:	je	0x7d7f


0x7b40:	push	r15
0x7b42:	push	r14
0x7b44:	mov	r15, rsi
0x7b47:	push	r13
0x7b49:	push	r12
0x7b4b:	mov	r12, rdx
0x7b4e:	push	rbp
0x7b4f:	push	rbx
0x7b50:	sub	rsp, 0x18
0x7b54:	mov	qword ptr [rsp + 8], rdi
0x7b59:	mov	rdi, rdx
0x7b5c:	call	0x2730


0x7af0:	push	rbp
0x7af1:	push	rbx
0x7af2:	mov	ebp, edi
0x7af4:	lea	rdi, [rip + 0x19e29]
0x7afb:	xor	esi, esi
0x7afd:	xor	eax, eax
0x7aff:	sub	rsp, 8
0x7b03:	mov	ebx, 1
0x7b08:	call	0x28b0


0x7aa0:	sub	rsp, 0x20
0x7aa4:	mov	r9d, 0xffffffff
0x7aaa:	mov	rax, qword ptr fs:[0x28]
0x7ab3:	mov	qword ptr [rsp + 0x10], rax
0x7ab8:	xor	eax, eax
0x7aba:	mov	byte ptr [rsp + 0xf], 0
0x7abf:	push	r8
0x7ac1:	xor	r8d, r8d
0x7ac4:	push	rcx
0x7ac5:	xor	ecx, ecx
0x7ac7:	lea	rax, [rsp + 0x1f]
0x7acc:	push	rax
0x7acd:	call	0x5e80


0x5e80:	push	r15
0x5e82:	push	r14
0x5e84:	mov	r10, rsi
0x5e87:	push	r13
0x5e89:	push	r12
0x5e8b:	mov	r12, rdi
0x5e8e:	push	rbp
0x5e8f:	push	rbx
0x5e90:	mov	ebp, r9d
0x5e93:	sub	rsp, 0x4b8
0x5e9a:	mov	r13, qword ptr [rdx + 0x30]
0x5e9e:	mov	r14d, dword ptr [rdx + 8]
0x5ea2:	mov	rax, qword ptr [rsp + 0x4f0]
0x5eaa:	mov	qword ptr [rsp], rdx
0x5eae:	mov	dword ptr [rsp + 0x24], r8d
0x5eb3:	mov	byte ptr [rsp + 0x23], cl
0x5eb7:	mov	qword ptr [rsp + 0x18], rax
0x5ebc:	mov	rax, qword ptr [rsp + 0x4f8]
0x5ec4:	mov	qword ptr [rsp + 0x10], rax
0x5ec9:	mov	rax, qword ptr fs:[0x28]
0x5ed2:	mov	qword ptr [rsp + 0x4a8], rax
0x5eda:	xor	eax, eax
0x5edc:	lea	rax, [rip + 0x1c0fe]
0x5ee3:	test	r13, r13
0x5ee6:	cmove	r13, rax
0x5eea:	cmp	r14d, 0xc
0x5eee:	jle	0x6048


0x5e20:	test	rdx, rdx
0x5e23:	je	0x5e70


0x5dc0:	test	rdx, rdx
0x5dc3:	je	0x5e10


0x5d10:	push	r12
0x5d12:	push	rbp
0x5d13:	mov	r12d, r8d
0x5d16:	push	rbx
0x5d17:	mov	rbp, rsi
0x5d1a:	sub	rsp, 0x10
0x5d1e:	cmp	byte ptr [rdx], 0x2d
0x5d21:	mov	qword ptr [rsp + 8], rdi
0x5d26:	je	0x5d80


0x5af0:	push	r15
0x5af2:	push	r14
0x5af4:	mov	r15, rdx
0x5af7:	push	r13
0x5af9:	push	r12
0x5afb:	mov	r13, rsi
0x5afe:	push	rbp
0x5aff:	push	rbx
0x5b00:	mov	ebp, r8d
0x5b03:	xor	r14d, r14d
0x5b06:	xor	ebx, ebx
0x5b08:	sub	rsp, 0x48
0x5b0c:	mov	rax, qword ptr fs:[0x28]
0x5b15:	mov	qword ptr [rsp + 0x38], rax
0x5b1a:	xor	eax, eax
0x5b1c:	lea	rax, [rsp + 0x30]
0x5b21:	mov	qword ptr [rsp + 8], rdi
0x5b26:	mov	dword ptr [rsp + 0x18], ecx
0x5b2a:	mov	dword ptr [rsp + 0x20], r8d
0x5b2f:	mov	qword ptr [rsp + 0x10], r9
0x5b34:	mov	qword ptr [rsp + 0x30], 0
0x5b3d:	mov	qword ptr [rsp], rax
0x5b41:	jmp	0x5b50


0x5780:	push	r15
0x5782:	push	r14
0x5784:	push	r13
0x5786:	push	r12
0x5788:	mov	r13, rsi
0x578b:	push	rbp
0x578c:	push	rbx
0x578d:	mov	ebp, edx
0x578f:	mov	r12, rdi
0x5792:	sub	rsp, 8
0x5796:	and	edx, 0x18000000
0x579c:	mov	rbx, qword ptr [rdi]
0x579f:	je	0x5880


0x55e0:	push	r15
0x55e2:	push	r14
0x55e4:	xor	eax, eax
0x55e6:	push	r13
0x55e8:	push	r12
0x55ea:	push	rbp
0x55eb:	push	rbx
0x55ec:	sub	rsp, 0x18
0x55f0:	mov	r14, qword ptr [rdi]
0x55f3:	test	r14, r14
0x55f6:	je	0x568b


0x5510:	push	r14
0x5512:	push	r13
0x5514:	mov	r14, rdi
0x5517:	push	r12
0x5519:	mov	r12d, edx
0x551c:	and	edx, 0x10000000
0x5522:	push	rbp
0x5523:	lea	r13, [rip - 0x53a]
0x552a:	push	rbx
0x552b:	mov	rbx, rsi
0x552e:	je	0x5537


0x5420:	push	r14
0x5422:	push	r13
0x5424:	mov	r14, rdi
0x5427:	push	r12
0x5429:	push	rbp
0x542a:	push	rbx
0x542b:	mov	rbx, qword ptr [rdi]
0x542e:	test	rbx, rbx
0x5431:	je	0x54aa


0x5410:	mov	edi, 0x10
0x5415:	jmp	0xcb90


0x5380:	movzx	eax, byte ptr [rdi]
0x5383:	mov	r9d, esi
0x5386:	mov	r8d, esi
0x5389:	lea	rdx, [rip + 0x1c180]
0x5390:	and	r9d, 0x20
0x5394:	and	r8d, 0x8000000
0x539b:	and	esi, 2
0x539e:	cmp	al, 0x7d
0x53a0:	lea	rcx, [rdi + 1]
0x53a4:	ja	0x53c8


0x5350:	push	rbp
0x5351:	push	rbx
0x5352:	mov	rbx, rdi
0x5355:	mov	edi, 0x10
0x535a:	mov	rbp, rsi
0x535d:	sub	rsp, 8
0x5361:	call	0xc9e0


0x50c0:	push	r15
0x50c2:	push	r14
0x50c4:	xor	r14d, r14d
0x50c7:	push	r13
0x50c9:	push	r12
0x50cb:	lea	r12, [rip + 0x1c96e]
0x50d2:	push	rbp
0x50d3:	push	rbx
0x50d4:	mov	rbx, rsi
0x50d7:	sub	rsp, 0x68
0x50db:	lea	rbp, [rsp + 0x10]
0x50e0:	mov	qword ptr [rsp + 0x20], rdi
0x50e5:	mov	byte ptr [rsp + 0x10], 0
0x50ea:	mov	rax, qword ptr fs:[0x28]
0x50f3:	mov	qword ptr [rsp + 0x58], rax
0x50f8:	xor	eax, eax
0x50fa:	lea	rax, [rbp + 4]
0x50fe:	mov	qword ptr [rsp + 0x14], 0
0x5107:	mov	byte ptr [rsp + 0x1c], 0
0x510c:	mov	qword ptr [rsp + 8], rax
0x5111:	jmp	0x5146


0x4ff0:	mov	eax, edx
0x4ff2:	and	eax, 0x10
0x4ff5:	and	edx, 8
0x4ff8:	jne	0x5008


0x4fe0:	jmp	0x8500


0x4fc0:	sub	rsp, 8
0x4fc4:	call	0x26d0


0x4fa0:	sub	rsp, 8
0x4fa4:	call	0x9f40


0x4f90:	jmp	0x2a10


0x4f80:	jmp	qword ptr [rcx]


0x4f20:	push	r12
0x4f22:	mov	rax, rsi
0x4f25:	push	rbp
0x4f26:	lea	rsi, [rdi + 0x10]
0x4f2a:	push	rbx
0x4f2b:	mov	rbx, rdi
0x4f2e:	mov	rdi, qword ptr [rdi]
0x4f31:	mov	r12, rdx
0x4f34:	mov	rdx, rax
0x4f37:	call	0x4cf0


0x4ec0:	push	r12
0x4ec2:	mov	rax, rsi
0x4ec5:	push	rbp
0x4ec6:	lea	rsi, [rdi + 0x10]
0x4eca:	push	rbx
0x4ecb:	mov	rbx, rdi
0x4ece:	mov	rdi, qword ptr [rdi]
0x4ed1:	mov	r12, rdx
0x4ed4:	mov	rdx, rax
0x4ed7:	call	0x4cf0


0x4e90:	push	rbx
0x4e91:	mov	rbx, rdi
0x4e94:	mov	rdi, qword ptr [rdi]
0x4e97:	call	0x87b0


0x4e20:	push	rbx
0x4e21:	mov	edi, 0x18
0x4e26:	call	0x2780


0x4db0:	lea	rdx, [rsi - 1]
0x4db4:	movabs	rax, 0x7ffffffffffffffd
0x4dbe:	cmp	rdx, rax
0x4dc1:	jbe	0x4de0


0x4cf0:	push	r12
0x4cf2:	push	rbp
0x4cf3:	mov	r12, rdi
0x4cf6:	push	rbx
0x4cf7:	mov	rbp, rsi
0x4cfa:	sub	rsp, 0x10
0x4cfe:	mov	rbx, qword ptr [rsi]
0x4d01:	test	rbx, rbx
0x4d04:	je	0x4d48


0x4cd0:	push	rbx
0x4cd1:	mov	rbx, rdi
0x4cd4:	mov	rdi, qword ptr [rdi + 8]
0x4cd8:	call	0x87b0


0x4cc0:	mov	rax, rdi
0x4cc3:	xor	edx, edx
0x4cc5:	div	rsi
0x4cc8:	mov	rax, rdx
0x4ccb:	ret	


0x4cb0:	mov	rax, qword ptr [rsi]
0x4cb3:	cmp	qword ptr [rdi], rax
0x4cb6:	sete	al
0x4cb9:	ret	


0x4ca0:	mov	rax, qword ptr [rdi]
0x4ca3:	xor	edx, edx
0x4ca5:	div	rsi
0x4ca8:	mov	rax, rdx
0x4cab:	ret	


0x4bf0:	push	rbp
0x4bf1:	push	rbx
0x4bf2:	sub	rsp, 8
0x4bf6:	mov	rdi, qword ptr [rip + 0x2234ab]
0x4bfd:	call	0x1f320


0x4be0:	mov	byte ptr [rip + 0x2235b9], dil
0x4be7:	ret	


0x4bd0:	mov	qword ptr [rip + 0x2235d1], rdi
0x4bd7:	ret	


0x4bb0:	push	rbx
0x4bb1:	cmp	qword ptr [rdi], 0
0x4bb5:	mov	rbx, rdi
0x4bb8:	je	0x4bc3


0x4b90:	cmp	qword ptr [rdi], 0
0x4b94:	je	0x4ba0


0x4b00:	mov	rcx, qword ptr [rdi]
0x4b03:	test	rcx, rcx
0x4b06:	je	0x4b40


0x4ac0:	push	rbx
0x4ac1:	mov	rbx, rdi
0x4ac4:	mov	edi, 0x30
0x4ac9:	call	0x2780


0x4a90:	push	rbx
0x4a91:	mov	rbx, rdi
0x4a94:	mov	edi, 0x30
0x4a99:	call	0x2780


0x4a40:	push	r14
0x4a42:	push	r13
0x4a44:	push	r12
0x4a46:	push	rbp
0x4a47:	push	rbx
0x4a48:	mov	r14, qword ptr [rsi]
0x4a4b:	test	r14, r14
0x4a4e:	je	0x4a81


0x49d0:	push	r15
0x49d2:	push	r14
0x49d4:	mov	r14, rdi
0x49d7:	push	r13
0x49d9:	push	r12
0x49db:	mov	r12, rsi
0x49de:	push	rbp
0x49df:	push	rbx
0x49e0:	mov	rbp, rcx
0x49e3:	mov	rbx, rdx
0x49e6:	mov	rcx, r8
0x49e9:	mov	rdx, rbp
0x49ec:	sub	rsp, 8
0x49f0:	mov	rsi, rbx
0x49f3:	mov	rdi, r12
0x49f6:	mov	r15, r8
0x49f9:	mov	r13, r9
0x49fc:	call	0x4710


0x48b0:	push	r15
0x48b2:	push	r14
0x48b4:	mov	r14, rdi
0x48b7:	push	r13
0x48b9:	push	r12
0x48bb:	xor	edi, edi
0x48bd:	push	rbp
0x48be:	push	rbx
0x48bf:	mov	rbp, rsi
0x48c2:	lea	rsi, [rip + 0x1cba8]
0x48c9:	mov	r12, rdx
0x48cc:	mov	edx, 5
0x48d1:	sub	rsp, 8
0x48d5:	mov	rbx, qword ptr [rip + 0x223804]
0x48dc:	call	0x2510


0x4830:	cmp	rdx, -1
0x4834:	push	r12
0x4836:	mov	edx, 5
0x483b:	push	rbp
0x483c:	mov	r12, rsi
0x483f:	push	rbx
0x4840:	mov	rbp, rdi
0x4843:	je	0x4890


0x4710:	push	r15
0x4712:	push	r14
0x4714:	mov	r15, rsi
0x4717:	push	r13
0x4719:	push	r12
0x471b:	mov	r13, rcx
0x471e:	push	rbp
0x471f:	push	rbx
0x4720:	mov	rbp, rdx
0x4723:	sub	rsp, 0x28
0x4727:	mov	qword ptr [rsp + 8], rdi
0x472c:	mov	qword ptr [rsp + 0x18], rdx
0x4731:	call	0x2530


0x4700:	mov	edi, 1
0x4705:	jmp	0x4240


0x4240:	push	r13
0x4242:	push	r12
0x4244:	mov	edx, 5
0x4249:	push	rbp
0x424a:	push	rbx
0x424b:	mov	ebp, edi
0x424d:	sub	rsp, 0x88
0x4254:	mov	rbx, qword ptr [rip + 0x223f55]
0x425b:	mov	rax, qword ptr fs:[0x28]
0x4264:	mov	qword ptr [rsp + 0x78], rax
0x4269:	xor	eax, eax
0x426b:	test	edi, edi
0x426d:	je	0x429d


0x40e0:	push	r13
0x40e2:	push	r12
0x40e4:	push	rbp
0x40e5:	push	rbx
0x40e6:	mov	rbx, rdi
0x40e9:	mov	rbp, rsi
0x40ec:	sub	rsp, 0x78
0x40f0:	mov	rdi, qword ptr [rdi + 8]
0x40f4:	mov	rax, qword ptr fs:[0x28]
0x40fd:	mov	qword ptr [rsp + 0x68], rax
0x4102:	xor	eax, eax
0x4104:	cmp	byte ptr [rip + 0x224062], 0
0x410b:	cmove	rdi, qword ptr [rbx]
0x410f:	call	0x4050


0x4050:	push	rbx
0x4051:	sub	rsp, 0x2a0
0x4058:	mov	rbx, qword ptr [rip + 0x224049]
0x405f:	mov	rax, qword ptr fs:[0x28]
0x4068:	mov	qword ptr [rsp + 0x298], rax
0x4070:	xor	eax, eax
0x4072:	cmp	rdi, -1
0x4076:	je	0x40c0


0x4040:	push	rbp
0x4041:	mov	rbp, rsp
0x4044:	pop	rbp
0x4045:	jmp	0x3fb0


0x4000:	cmp	byte ptr [rip + 0x2240e1], 0
0x4007:	jne	0x4038


0x3fb0:	lea	rdi, [rip + 0x2240e9]
0x3fb7:	lea	rsi, [rip + 0x2240e2]
0x3fbe:	push	rbp
0x3fbf:	sub	rsi, rdi
0x3fc2:	mov	rbp, rsp
0x3fc5:	sar	rsi, 3
0x3fc9:	mov	rax, rsi
0x3fcc:	shr	rax, 0x3f
0x3fd0:	add	rsi, rax
0x3fd3:	sar	rsi, 1
0x3fd6:	je	0x3ff0


0x3f70:	lea	rdi, [rip + 0x224129]
0x3f77:	push	rbp
0x3f78:	lea	rax, [rip + 0x224121]
0x3f7f:	cmp	rax, rdi
0x3f82:	mov	rbp, rsp
0x3f85:	je	0x3fa0


0x3f40:	xor	ebp, ebp
0x3f42:	mov	r9, rdx
0x3f45:	pop	rsi
0x3f46:	mov	rdx, rsp
0x3f49:	and	rsp, 0xfffffffffffffff0
0x3f4d:	push	rax
0x3f4e:	push	rsp
0x3f4f:	lea	r8, [rip + 0x1bada]
0x3f56:	lea	rcx, [rip + 0x1ba63]
0x3f5d:	lea	rdi, [rip - 0x1514]
0x3f64:	call	qword ptr [rip + 0x224076]


0x2a50:	push	r15
0x2a52:	push	r14
0x2a54:	xor	r15d, r15d
0x2a57:	push	r13
0x2a59:	push	r12
0x2a5b:	mov	r12d, edi
0x2a5e:	push	rbp
0x2a5f:	push	rbx
0x2a60:	mov	rbp, rsi
0x2a63:	lea	rbx, [rip + 0x1e556]
0x2a6a:	xor	r13d, r13d
0x2a6d:	sub	rsp, 0x138
0x2a74:	mov	rdi, qword ptr [rsi]
0x2a77:	mov	rax, qword ptr fs:[0x28]
0x2a80:	mov	qword ptr [rsp + 0x128], rax
0x2a88:	xor	eax, eax
0x2a8a:	lea	rax, [rip + 0x1fc0b]
0x2a91:	mov	qword ptr [rsp + 0x88], 0
0x2a9d:	lea	r14, [rsp + 0x5c]
0x2aa2:	mov	qword ptr [rsp + 0x80], rax
0x2aaa:	call	0xa650


0x2a20:	lea	rcx, [rip + 0x1f039]
0x2a27:	lea	rsi, [rip + 0x1ea7a]
0x2a2e:	lea	rdi, [rip + 0x1eac1]
0x2a35:	sub	rsp, 8
0x2a39:	mov	edx, 0xb3
0x2a3e:	call	0x2600


0x2390:	sub	rsp, 8
0x2394:	mov	rax, qword ptr [rip + 0x225c4d]
0x239b:	test	rax, rax
0x239e:	je	0x23a2


0x2940:	jmp	qword ptr [rip + 0x22561a]


0x1f982:	mov	rax, qword ptr [rsp + 0x10]
0x1f987:	xor	esi, esi
0x1f989:	mov	edx, dword ptr [rax + 0x10]
0x1f98c:	xor	eax, eax
0x1f98e:	call	0x24a0


0x1f781:	cmp	esi, 0x406
0x1f787:	jne	0x1f7d0


0x1f701:	call	0x1f9b0


0x1f722:	add	rsp, 8
0x1f726:	mov	eax, ebx
0x1f728:	pop	rbx
0x1f729:	pop	rbp
0x1f72a:	pop	r12
0x1f72c:	pop	r13
0x1f72e:	ret	


0x1f620:	xor	eax, eax
0x1f622:	call	0x2550


0x1f648:	lea	rax, [rsp + 0x60]
0x1f64d:	mov	dword ptr [rsp], 0x18
0x1f654:	mov	ecx, dword ptr [rsp + 0x38]
0x1f658:	mov	qword ptr [rsp + 8], rax
0x1f65d:	lea	rax, [rsp + 0x20]
0x1f662:	mov	qword ptr [rsp + 0x10], rax
0x1f667:	jmp	0x1f620


0x27d0:	jmp	qword ptr [rip + 0x2256d2]


0x1f586:	mov	eax, dword ptr [rdi + 0x14]
0x1f589:	mov	esi, dword ptr [rdi + 0x10]
0x1f58c:	lea	rcx, [rdi + rax*4]
0x1f590:	mov	rdx, rax
0x1f593:	mov	eax, dword ptr [rcx]
0x1f595:	mov	dword ptr [rcx], esi
0x1f597:	cmp	edx, dword ptr [rdi + 0x18]
0x1f59a:	je	0x1f5b0


0x1f5b5:	sub	rsp, 8
0x1f5b9:	call	0x2400


0x1f568:	add	edx, esi
0x1f56a:	and	edx, 3
0x1f56d:	mov	dword ptr [rdi + 0x18], edx
0x1f570:	mov	byte ptr [rdi + 0x1c], 0
0x1f574:	ret	


0x1f570:	mov	byte ptr [rdi + 0x1c], 0
0x1f574:	ret	


0x2840:	jmp	qword ptr [rip + 0x22569a]


0x1f461:	xor	eax, eax
0x1f463:	call	0x28b0


0x1f488:	lea	rax, [rsp + 0x60]
0x1f48d:	mov	dword ptr [rsp], 0x10
0x1f494:	mov	edx, dword ptr [rsp + 0x30]
0x1f498:	mov	qword ptr [rsp + 8], rax
0x1f49d:	lea	rax, [rsp + 0x20]
0x1f4a2:	mov	qword ptr [rsp + 0x10], rax
0x1f4a7:	jmp	0x1f461


0x1f3b9:	mov	rdx, qword ptr [rdi + 0x10]
0x1f3bd:	mov	rcx, qword ptr [rsi + 8]
0x1f3c1:	test	rdx, rdx
0x1f3c4:	je	0x1f3e0


0x1f417:	lea	rcx, [rip + 0x3c32]
0x1f41e:	lea	rsi, [rip + 0x3beb]
0x1f425:	lea	rdi, [rip + 0x3c0c]
0x1f42c:	sub	rsp, 8
0x1f430:	mov	edx, 0x3c
0x1f435:	call	0x2600


0x2460:	jmp	qword ptr [rip + 0x22588a]


0x1f2f0:	mov	rdi, rsi
0x1f2f3:	call	0x2860


0x1f1f4:	mov	rbp, rdi
0x1f1f7:	call	0x1f030


0x1f1a0:	add	rsp, 8
0x1f1a4:	mov	rdi, rbp
0x1f1a7:	mov	rsi, rdx
0x1f1aa:	pop	rbx
0x1f1ab:	pop	rbp
0x1f1ac:	pop	r12
0x1f1ae:	pop	r13
0x1f1b0:	jmp	0x25e0


0x1f132:	mov	r13, rdx
0x1f135:	mov	rbx, rdi
0x1f138:	call	0x1f030


0x1f11b:	ret	


0x1f116:	jmp	0x1edd0


0x23e0:	jmp	qword ptr [rip + 0x2258ca]


0x1efa0:	add	rsp, 8
0x1efa4:	pop	rbx
0x1efa5:	pop	rbp
0x1efa6:	pop	r12
0x1efa8:	pop	r13
0x1efaa:	pop	r14
0x1efac:	pop	r15
0x1efae:	ret	


0x1ef10:	cmp	rsi, rbp
0x1ef13:	mov	r12, rdi
0x1ef16:	mov	r13, rsi
0x1ef19:	ja	0x1ef24


0x1eec8:	mov	edi, 0x80
0x1eecd:	call	0x2780


0x1ee69:	mov	r12, rdi
0x1ee6c:	call	0x2530


0x2410:	jmp	qword ptr [rip + 0x2258b2]


0x1edf8:	ret	


0x1edd5:	push	rbx
0x1edd6:	nop	word ptr cs:[rax + rax]
0x1ede0:	mov	rbx, qword ptr [rdi]
0x1ede3:	call	0x2a10


0x1edc0:	lea	rdi, [rip + 0xde0]
0x1edc7:	jmp	0x2900


0x1eda5:	mov	rsi, rdi
0x1eda8:	lea	rdi, [rip + 0xdf8]
0x1edaf:	mov	edx, 1
0x1edb4:	jmp	0x24b0


0x1ed55:	and	byte ptr [rdi + 0x38], 0xf9
0x1ed59:	mov	qword ptr [rsi], 0
0x1ed60:	mov	qword ptr [rsi + 0x10], 0
0x1ed68:	mov	qword ptr [rsi + 8], 0
0x1ed70:	ret	


0x1ed78:	movzx	eax, byte ptr [rdi + 0x38]
0x1ed7c:	and	eax, 0xfffffff9
0x1ed7f:	or	eax, 2
0x1ed82:	mov	byte ptr [rdi + 0x38], al
0x1ed85:	mov	qword ptr [rsi], rdx
0x1ed88:	mov	qword ptr [rsi + 8], rcx
0x1ed8c:	mov	qword ptr [rsi + 0x10], r8
0x1ed90:	ret	


0x1ec3d:	push	r13
0x1ec3f:	push	r12
0x1ec41:	mov	r13, rdx
0x1ec44:	push	rbp
0x1ec45:	push	rbx
0x1ec46:	mov	r12, rcx
0x1ec49:	mov	ebx, r8d
0x1ec4c:	mov	rbp, rdi
0x1ec4f:	sub	rsp, 0x18
0x1ec53:	test	r8b, 4
0x1ec57:	jne	0x1eca8


0x1ecc8:	mov	eax, 2
0x1eccd:	ret	


0x1ebf1:	mov	rdi, qword ptr [rbx + 0x20]
0x1ebf5:	mov	qword ptr [rbx], 0
0x1ebfc:	mov	qword ptr [rbx + 8], 0
0x1ec04:	call	0x2a10


0x1ebec:	call	0x123d0


0x1eb5f:	lea	rax, [rip + 0x427a]
0x1eb66:	movsxd	rdi, edi
0x1eb69:	lea	rsi, [rip + 0x4310]
0x1eb70:	mov	rbp, rdx
0x1eb73:	mov	edx, 5
0x1eb78:	mov	r12, rcx
0x1eb7b:	add	rsi, qword ptr [rax + rdi*8]
0x1eb7f:	xor	edi, edi
0x1eb81:	call	0x2510


0x1ebc0:	call	0x2400


0x2780:	jmp	qword ptr [rip + 0x2256fa]


0x1e957:	test	rbx, rbx
0x1e95a:	js	0x1ea20


0x1ea20:	mov	rbx, -2
0x1ea27:	jmp	0x1e9ba


0x1e800:	mov	r12, -1
0x1e807:	jmp	0x1e5d2


0x1e4ca:	cmp	rcx, rdx
0x1e4cd:	jg	0x1e800


0x1e40d:	mov	rcx, rbp
0x1e410:	mov	rdi, rbx
0x1e413:	mov	rsi, qword ptr [r12 + 0x48]
0x1e418:	lea	rdx, [rsi + 0x18]
0x1e41c:	add	rsi, 0x10
0x1e420:	call	0x16920


0x1e40a:	rep stosq	qword ptr [rdi], rax


0x1e0b6:	mov	rdi, rbx
0x1e0b9:	mov	esi, 0xe8
0x1e0be:	call	0x2830


0x1d2c2:	lea	rdi, [rbx + 8]
0x1d2c6:	mov	rax, qword ptr [rsp + 8]
0x1d2cb:	mov	rcx, rbx
0x1d2ce:	and	rdi, 0xfffffffffffffff8
0x1d2d2:	sub	rcx, rdi
0x1d2d5:	mov	qword ptr [rax + 0x10], 0xe8
0x1d2dd:	xor	eax, eax
0x1d2df:	add	ecx, 0xe8
0x1d2e5:	mov	qword ptr [rbx], 0
0x1d2ec:	mov	qword ptr [rbx + 0xe0], 0
0x1d2f7:	shr	ecx, 3
0x1d2fa:	rep stosq	qword ptr [rdi], rax


0x1baa8:	mov	rbp, rsi
0x1baab:	lea	rsi, [rip + 0x716e]
0x1bab2:	movzx	edx, cl
0x1bab5:	mov	r14, rdi
0x1bab8:	movsxd	rax, dword ptr [rsi + rdx*4]
0x1babc:	add	rax, rsi
0x1babf:	jmp	rax


0x1bb60:	mov	qword ptr [rsp + 0x28], 0
0x1bb69:	nop	dword ptr [rax]
0x1bb70:	mov	rdi, qword ptr [rsp + 0x118]
0x1bb78:	xor	rdi, qword ptr fs:[0x28]
0x1bb81:	mov	rax, qword ptr [rsp + 0x28]
0x1bb86:	jne	0x1cefe


0x1b360:	mov	byte ptr [rdi + 8], 2
0x1b364:	mov	rdi, qword ptr [rsp + 0x28]
0x1b369:	xor	rdi, qword ptr fs:[0x28]
0x1b372:	jne	0x1b998


0x1b2cf:	movzx	r13d, byte ptr [rdi + 0xa]
0x1b2d4:	mov	r15, rdx
0x1b2d7:	mov	rdx, qword ptr [rsi + 8]
0x1b2db:	mov	rbx, rsi
0x1b2de:	movzx	r12d, byte ptr [rdx + r14]
0x1b2e3:	and	r13d, 0xffffff9f
0x1b2e7:	mov	byte ptr [rdi + 0xa], r13b
0x1b2eb:	mov	eax, dword ptr [rsi + 0x90]
0x1b2f1:	mov	byte ptr [rdi], r12b
0x1b2f4:	cmp	eax, 1
0x1b2f7:	jle	0x1b390


0x1b0c8:	movzx	eax, byte ptr [rbp + 8]
0x1b0cc:	add	r11, r12
0x1b0cf:	mov	qword ptr [r10 + 0x48], r11
0x1b0d3:	mov	edx, eax
0x1b0d5:	and	edx, 0xfffffffb
0x1b0d8:	cmp	dl, 0x1a
0x1b0db:	je	0x1b100


0x1b075:	mov	rsi, r12
0x1b078:	mov	rdi, r10
0x1b07b:	call	0x125f0


0x1aaa8:	lea	r14, [rbp*8]
0x1aab0:	add	r14, qword ptr [rsi]
0x1aab3:	test	rcx, rcx
0x1aab6:	jne	0x1ab70


0x1a859:	lea	rdi, [rdx + 8]
0x1a85d:	test	rcx, rcx
0x1a860:	mov	qword ptr [rsp + 0x10], rdi
0x1a865:	jne	0x1a8b8


0x1912b:	rep stosq	qword ptr [rdi], rax


0x18bda:	mov	qword ptr [r14], rdx
0x18bdd:	mov	rbp, rdx
0x18be0:	mov	qword ptr [rsi + 0xc0], r12
0x18be7:	cmp	qword ptr [r15 + 0x98], 0
0x18bef:	jne	0x18d18


0x18c20:	mov	rax, qword ptr [r14]
0x18c23:	test	rax, rax
0x18c26:	je	0x18d08


0x18610:	xor	eax, eax
0x18612:	nop	word ptr [rax + rax]
0x18618:	mov	rbx, qword ptr [rsp + 0xa8]
0x18620:	xor	rbx, qword ptr fs:[0x28]
0x18629:	jne	0x18b7c


0x182e8:	lea	rax, [r15*8]
0x182f0:	mov	r14, rdi
0x182f3:	mov	qword ptr [rsp], 0
0x182fb:	mov	qword ptr [rsp + 8], r15
0x18300:	mov	qword ptr [rsp + 0x60], rax
0x18305:	lea	rax, [rsp + 0x90]
0x1830d:	mov	qword ptr [rsp + 0x68], rax
0x18312:	lea	rax, [rsp + 0x8c]
0x1831a:	mov	qword ptr [rsp + 0x78], rax
0x1831f:	jmp	0x18367


0x1800d:	mov	qword ptr [rbp - 0x88], 0
0x18018:	jmp	0x1788d


0x1786b:	mov	edi, 0x60
0x17870:	call	0x2780


0x1712c:	mov	rax, qword ptr [rsp + 0x60]
0x17131:	mov	rdx, qword ptr [r15 + 0xb8]
0x17138:	mov	rcx, qword ptr [r15 + 0x48]
0x1713c:	mov	r12, qword ptr [rax]
0x1713f:	mov	r14, qword ptr [rax + 0x10]
0x17143:	mov	qword ptr [rsp + 0x68], rdx
0x17148:	mov	qword ptr [rsp + 0x70], rcx
0x1714d:	mov	edx, dword ptr [r15 + 0xa0]
0x17154:	test	r12, r12
0x17157:	mov	qword ptr [r15 + 0xb8], r14
0x1715e:	je	0x17540


0x17746:	lea	r12, [rax + 1]
0x1774a:	movabs	rax, 0x7fffffffffffffff
0x17754:	sub	rax, r13
0x17757:	cmp	rax, r12
0x1775a:	jl	0x177cb


0x16f80:	mov	rdx, qword ptr [rcx + 8]
0x16f84:	lea	rsi, [rdx + r8]
0x16f88:	movzx	eax, byte ptr [rsi]
0x16f8b:	cmp	al, 0xc1
0x16f8d:	jbe	0x16f40


0x16e71:	cmp	dword ptr [rcx + 0x90], 1
0x16e78:	je	0x16f40


0x1696c:	mov	rax, qword ptr [rsp + 0x30]
0x16971:	mov	rax, qword ptr [rax + 0x18]
0x16975:	mov	rbx, rax
0x16978:	mov	qword ptr [rsp], rax
0x1697c:	shr	rbx, 0x16
0x16980:	and	ebx, 1
0x16983:	mov	rax, qword ptr [rsp + 0x20]
0x16988:	cmp	qword ptr [rax], 0
0x1698c:	jle	0x16d9d


0x16983:	mov	rax, qword ptr [rsp + 0x20]
0x16988:	cmp	qword ptr [rax], 0
0x1698c:	jle	0x16d9d


0x26b0:	jmp	qword ptr [rip + 0x225762]


0x15ee8:	mov	rcx, qword ptr [r13]
0x15eec:	cmp	qword ptr [r8], rcx
0x15eef:	mov	rax, qword ptr [rdx]
0x15ef2:	je	0x16009


0x15ec3:	lea	rdi, [rip + 0xc949]
0x15eca:	mov	ecx, 6
0x15ecf:	mov	rsi, r9
0x15ed2:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2530:	jmp	qword ptr [rip + 0x225822]


0x15e25:	lea	rcx, [rip + 0xcf34]
0x15e2c:	lea	rsi, [rip + 0xc96d]
0x15e33:	lea	rdi, [rip + 0xc9ca]
0x15e3a:	mov	edx, 0x555
0x15e3f:	call	0x2600


0x15dc3:	lea	rbx, [rax + rax*2]
0x15dc7:	mov	rax, qword ptr [rsi]
0x15dca:	mov	r12, rsi
0x15dcd:	shl	rcx, 4
0x15dd1:	mov	rbp, r9
0x15dd4:	mov	rdi, r8
0x15dd7:	shl	rbx, 4
0x15ddb:	add	rax, rbx
0x15dde:	mov	rsi, qword ptr [rax]
0x15de1:	mov	qword ptr [rdx], rsi
0x15de4:	mov	rsi, qword ptr [rax + 0x10]
0x15de8:	mov	rdx, rcx
0x15deb:	call	0x2710


0x15da2:	pop	rbx
0x15da3:	mov	rdi, qword ptr [rbp + 0x10]
0x15da7:	pop	rbp
0x15da8:	pop	r12
0x15daa:	jmp	0x2a10


0x15d6d:	xor	ebx, ebx
0x15d6f:	xor	r12d, r12d
0x15d72:	nop	word ptr [rax + rax]
0x15d78:	mov	rax, qword ptr [rbp + 0x10]
0x15d7c:	add	r12, 1
0x15d80:	mov	rdi, qword ptr [rax + rbx + 0x28]
0x15d85:	call	0x2a10


0x15d38:	mov	rax, qword ptr [rsi + 8]
0x15d3c:	mov	rdx, qword ptr [rax + 0x18]
0x15d40:	mov	rax, qword ptr [rax + 0x38]
0x15d44:	mov	qword ptr [rsi + 0x18], rdx
0x15d48:	mov	qword ptr [rsi + 0x38], rax
0x15d4c:	xor	eax, eax
0x15d4e:	ret	


0x15cd6:	push	rbp
0x15cd7:	push	rbx
0x15cd8:	mov	rbx, rsi
0x15cdb:	mov	rbp, rdi
0x15cde:	sub	rsp, 8
0x15ce2:	mov	qword ptr [rbx + 0x18], rsi
0x15ce6:	mov	rdx, qword ptr [rbx + 0x30]
0x15cea:	mov	rsi, qword ptr [rsi + 0x28]
0x15cee:	call	0x11e40


0x15122:	xor	edi, edi
0x15124:	jmp	0x150e1


0x14f41:	lea	rax, [rsp + 0x20]
0x14f46:	mov	r12, rdi
0x14f49:	mov	r13, rsi
0x14f4c:	xor	ebx, ebx
0x14f4e:	mov	qword ptr [rsp + 0x18], rax
0x14f53:	jmp	0x14fad


0x147e6:	test	rbp, rbp
0x147e9:	je	0x1484e


0x14786:	cmp	dword ptr [rdi + 0x90], 1
0x1478d:	jg	0x148c0


0x14638:	mov	r8, qword ptr [rsi]
0x1463b:	movzx	eax, cl
0x1463e:	sar	rax, 6
0x14642:	mov	r8, qword ptr [r8 + rax*8]
0x14646:	xor	eax, eax
0x14648:	bt	r8, rcx
0x1464c:	jb	0x145c0


0x14584:	jbe	0x14620


0x144e0:	mov	eax, dword ptr [rbp + 0x70]
0x144e3:	add	rsp, 8
0x144e7:	pop	rbx
0x144e8:	pop	rbp
0x144e9:	ret	


0x1448e:	cmp	qword ptr [rdi + 0x58], rsi
0x14492:	je	0x14538


0x14410:	xor	eax, eax
0x14412:	add	rsp, 0x28
0x14416:	pop	rbx
0x14417:	pop	rbp
0x14418:	pop	r12
0x1441a:	pop	r13
0x1441c:	pop	r14
0x1441e:	pop	r15
0x14420:	ret	


0x1434f:	mov	r14, rdx
0x14352:	mov	r12, rsi
0x14355:	mov	r15, rdi
0x14358:	xor	ebx, ebx
0x1435a:	jmp	0x1436e


0x13fd2:	lea	rax, [rsi + rdx]
0x13fd6:	mov	r8, qword ptr [rbx + 0xd8]
0x13fdd:	mov	rcx, rax
0x13fe0:	shr	rcx, 0x3f
0x13fe4:	add	rcx, rax
0x13fe7:	sar	rcx, 1
0x13fea:	lea	rax, [rcx + rcx*4]
0x13fee:	cmp	r12, qword ptr [r8 + rax*8 + 8]
0x13ff3:	jle	0x14022


0x14027:	cmp	rdi, rsi
0x1402a:	jle	0x1404d


0x13f66:	xor	eax, eax
0x13f68:	mov	rcx, qword ptr [rsp + 0x38]
0x13f6d:	xor	rcx, qword ptr fs:[0x28]
0x13f76:	jne	0x13f87


0x13ed7:	lea	rax, [rsp + 0x1c]
0x13edc:	mov	r14, rdi
0x13edf:	mov	rbx, rsi
0x13ee2:	mov	r12, rdx
0x13ee5:	mov	rbp, rcx
0x13ee8:	xor	r15d, r15d
0x13eeb:	lea	r13, [rsp + 0x20]
0x13ef0:	mov	qword ptr [rsp + 8], rax
0x13ef5:	jmp	0x13f4c


0x13ea0:	mov	dword ptr [rdi], 0
0x13ea6:	xor	ebx, ebx
0x13ea8:	jmp	0x13e3f


0x13ccb:	test	rbp, rbp
0x13cce:	jle	0x13cec


0x13c8f:	mov	dword ptr [rdi], 0
0x13c95:	xor	r14d, r14d
0x13c98:	jmp	0x13a9c


0x13a0b:	mov	r8d, ecx
0x13a0e:	test	r10, r10
0x13a11:	lea	r12, [r8 + r10]
0x13a15:	jle	0x13a2c


0x13945:	test	rdx, rdx
0x13948:	je	0x13951


0x138a1:	test	rdx, rdx
0x138a4:	mov	r13, qword ptr [rsi + 8]
0x138a8:	je	0x13940


0x13850:	pxor	xmm0, xmm0
0x13854:	mov	qword ptr [rdi + 0x10], 0
0x1385c:	xor	eax, eax
0x1385e:	movups	xmmword ptr [rdi], xmm0
0x13861:	pop	rbx
0x13862:	pop	rbp
0x13863:	pop	r12
0x13865:	ret	


0x13815:	mov	rbx, rdi
0x13818:	mov	qword ptr [rdi], rax
0x1381b:	lea	rdi, [rax*8]
0x13823:	mov	rbp, rsi
0x13826:	call	0x2780


0x13793:	mov	rdx, qword ptr [rbx + 0x10]
0x13797:	test	rdx, rdx
0x1379a:	je	0x137a2


0x1378d:	cmp	byte ptr [rdx + 0x30], 0x11
0x13791:	je	0x137e0


0x136c8:	lea	rax, [rbx + 0x70]
0x136cc:	lea	r14, [rsp + 0x20]
0x136d1:	sub	rbx, -0x80
0x136d5:	xor	ecx, ecx
0x136d7:	xor	edx, edx
0x136d9:	mov	rsi, rbx
0x136dc:	mov	r15, rax
0x136df:	mov	r8, r14
0x136e2:	mov	rdi, rax
0x136e5:	mov	byte ptr [rsp + 0x28], 8
0x136ea:	mov	qword ptr [rsp + 8], rax
0x136ef:	call	0x13360


0x13557:	test	rbp, rbp
0x1355a:	je	0x135d0


0x133e8:	mov	edi, 0x3c8
0x133ed:	mov	qword ptr [rsp + 0x18], r8
0x133f2:	mov	qword ptr [rsp + 0x10], rcx
0x133f7:	mov	qword ptr [rsp + 8], rdx
0x133fc:	mov	qword ptr [rsp], rsi
0x13400:	call	0x2780


0x1336f:	movsxd	r9, eax
0x13372:	lea	r10d, [rax + 1]
0x13376:	mov	rdi, qword ptr [rdi]
0x13379:	mov	rax, r9
0x1337c:	shl	rax, 6
0x13380:	add	rax, 8
0x13384:	shl	r9, 6
0x13388:	mov	dword ptr [rsi], r10d
0x1338b:	add	rax, rdi
0x1338e:	lea	rsi, [rdi + r9]
0x13392:	mov	qword ptr [rsi + 8], 0
0x1339a:	mov	qword ptr [rsi + 0x10], rdx
0x1339e:	lea	rdi, [rsi + 0x20]
0x133a2:	mov	qword ptr [rsi + 0x18], rcx
0x133a6:	movdqu	xmm0, xmmword ptr [r8]
0x133ab:	movups	xmmword ptr [rsi + 0x30], xmm0
0x133af:	and	byte ptr [rdi + 0x1a], 0xf3
0x133b3:	test	rdx, rdx
0x133b6:	mov	qword ptr [rsi + 0x20], 0
0x133be:	mov	qword ptr [rsi + 0x28], 0
0x133c6:	mov	qword ptr [rsi + 0x40], -1
0x133ce:	je	0x133d3


0x13278:	ret	


0x131bf:	mov	r11, qword ptr [rdx + 8]
0x131c3:	test	r11, r11
0x131c6:	je	0x13278


0x12cb8:	xor	eax, eax
0x12cba:	ret	


0x12bc9:	mov	rdx, qword ptr [rsi + 8]
0x12bcd:	test	rdx, rdx
0x12bd0:	je	0x12cb8


0x12983:	lea	rax, [rbx + rbp]
0x12987:	mov	r13, qword ptr [rdi + 0xd8]
0x1298e:	mov	r10, rax
0x12991:	shr	r10, 0x3f
0x12995:	add	r10, rax
0x12998:	sar	r10, 1
0x1299b:	lea	rax, [r10 + r10*4]
0x1299f:	cmp	r8, qword ptr [r13 + rax*8 + 8]
0x129a4:	jle	0x129d6


0x129db:	cmp	r15, rbx
0x129de:	jle	0x12b80


0x12940:	mov	qword ptr [rdx + 0x20], rsi
0x12944:	xor	eax, eax
0x12946:	ret	


0x128fc:	cmp	al, 0x10
0x128fe:	je	0x12928


0x128c0:	mov	rax, qword ptr [rdi + 0xe0]
0x128c7:	test	rax, rax
0x128ca:	je	0x1286c


0x12868:	cmp	al, 0x11
0x1286a:	je	0x12870


0x12852:	ret	


0x12828:	sub	rax, 1
0x1282c:	cmp	rdx, rax
0x1282f:	mov	qword ptr [rdi], rax
0x12832:	jge	0x12852


0x126e5:	ret	


0x126a7:	mov	r8, qword ptr [rsi]
0x126aa:	sub	rdi, 1
0x126ae:	xor	esi, esi
0x126b0:	cmp	rsi, rdi
0x126b3:	jae	0x126dd


0x12650:	lea	rax, [rdx - 1]
0x12654:	lea	rdx, [rax*8]
0x1265c:	jmp	0x1267d


0x1264c:	ret	


0x125fd:	mov	rdx, qword ptr [rdi + 0x10]
0x12601:	lea	rdi, [rax*4]
0x12609:	cmp	dword ptr [rdx + rax*4], -1
0x1260d:	jne	0x12638


0x12638:	mov	eax, 1
0x1263d:	ret	


0x125c9:	pop	rbx
0x125ca:	mov	qword ptr [r14 + 0xe8], 0
0x125d5:	mov	qword ptr [r14 + 0xc8], 0
0x125e0:	pop	rbp
0x125e1:	pop	r12
0x125e3:	pop	r13
0x125e5:	pop	r14
0x125e7:	ret	


0x12549:	xor	r13d, r13d
0x1254c:	nop	dword ptr [rax]
0x12550:	mov	rax, qword ptr [r14 + 0xf8]
0x12557:	mov	r12, qword ptr [rax + r13*8]
0x1255b:	cmp	qword ptr [r12 + 0x20], 0
0x12561:	jle	0x1258d


0x1240e:	mov	rdi, qword ptr [r12 + 0x18]
0x12413:	call	0x2a10


0x123e3:	cmp	qword ptr [r12 + 0x10], 0
0x123e9:	je	0x1240e


0x2a10:	jmp	qword ptr [rip + 0x2255b2]


0x122a0:	mov	rax, qword ptr [r14 + 0x18]
0x122a4:	lea	rbx, [r13 + r13*2]
0x122a9:	lea	r15, [r9*8]
0x122b1:	mov	edx, ebp
0x122b3:	shl	rbx, 3
0x122b7:	mov	r9, qword ptr [rax + r9*8]
0x122bb:	mov	qword ptr [rdi + rbx + 8], 0
0x122c4:	mov	rdi, r14
0x122c7:	mov	rsi, r9
0x122ca:	mov	qword ptr [rsp], r9
0x122ce:	call	0x12010


0x120ed:	lea	r12, [r9 + r9*2]
0x120f1:	shl	r12, 3
0x120f5:	lea	rsi, [rdi + r12]
0x120f9:	mov	rcx, qword ptr [rsi + 8]
0x120fd:	test	rcx, rcx
0x12100:	je	0x122f9


0x11e65:	mov	r12, qword ptr [rdi + 0x18]
0x11e69:	mov	rbp, qword ptr [rdi + 0x28]
0x11e6d:	mov	rax, rsi
0x11e70:	mov	ecx, edx
0x11e72:	shl	rax, 4
0x11e76:	add	rax, qword ptr [rbx]
0x11e79:	and	ecx, 0xfffc00ff
0x11e7f:	mov	qword ptr [rax + 8], rdx
0x11e83:	mov	dword ptr [rax + 8], ecx
0x11e86:	xor	ecx, ecx
0x11e88:	cmp	dl, 6
0x11e8b:	mov	qword ptr [rax], r14
0x11e8e:	sete	cl
0x11e91:	cmp	dl, 5
0x11e94:	jne	0x11ea2


0x11f10:	lea	r13, [rbp + rbp]
0x11f15:	movabs	rax, 0xaaaaaaaaaaaaaaa
0x11f1f:	cmp	r13, rax
0x11f22:	ja	0x12002


0x11e10:	mov	rdi, qword ptr [rdi]
0x11e13:	jmp	0x11dc0


0x11dfd:	cmp	eax, 3
0x11e00:	je	0x11e08


0x11d4a:	cmp	rax, qword ptr [rdi + 0x58]
0x11d4e:	jge	0x11d70


0x11d70:	mov	rax, qword ptr [rbx + 0x30]
0x11d74:	cmp	rax, rbp
0x11d77:	jg	0x11d5f


0x11bfd:	mov	rdx, qword ptr [rdi + 0x58]
0x11c01:	add	rax, rax
0x11c04:	movsxd	rsi, esi
0x11c07:	mov	rbx, rdi
0x11c0a:	cmp	rax, rdx
0x11c0d:	cmovg	rax, rdx
0x11c11:	cmp	rax, rsi
0x11c14:	cmovge	rsi, rax
0x11c18:	call	0x11050


0x11d08:	mov	ebp, 0xc
0x11d0d:	add	rsp, 8
0x11d11:	mov	eax, ebp
0x11d13:	pop	rbx
0x11d14:	pop	rbp
0x11d15:	ret	


0x11601:	cmp	qword ptr [rdi + 0x78], 0
0x11606:	je	0x11790


0x1160c:	mov	r13, qword ptr [r14 + 0x38]
0x11610:	cmp	r15, rbx
0x11613:	jl	0x11650


0x114b4:	mov	rax, qword ptr [rsp + 0x58]
0x114b9:	xor	rax, qword ptr fs:[0x28]
0x114c2:	mov	qword ptr [rbx + 0x30], rbp
0x114c6:	mov	qword ptr [rbx + 0x38], rbp
0x114ca:	jne	0x115ae


0x1142b:	lea	r14, [rdi + 0x20]
0x1142f:	lea	r13, [rsp + 0xc]
0x11434:	nop	dword ptr [rax]
0x11438:	mov	rdi, qword ptr [rbx + 0x78]
0x1143c:	mov	rdx, r12
0x1143f:	mov	r15, qword ptr [rbx + 0x20]
0x11443:	sub	rdx, rbp
0x11446:	test	rdi, rdi
0x11449:	jne	0x11530


0x113d5:	mov	qword ptr [rbp + 0x30], rbx
0x113d9:	mov	qword ptr [rbp + 0x38], rbx
0x113dd:	pop	rbx
0x113de:	pop	rbp
0x113df:	pop	r12
0x113e1:	ret	


0x1139d:	call	0x23c0


0x11198:	mov	qword ptr [rdi], 1
0x1119f:	mov	qword ptr [rdi + 8], 1
0x111a7:	mov	edi, 8
0x111ac:	call	0x2780


0x11174:	mov	rsi, qword ptr [rdi + 8]
0x11178:	mov	rax, qword ptr [rdi + 0x10]
0x1117c:	test	rsi, rsi
0x1117f:	jne	0x111d0


0x11128:	add	rsi, 1
0x1112c:	lea	rdx, [rsi + rsi]
0x11130:	shl	rsi, 4
0x11134:	mov	qword ptr [rdi], rdx
0x11137:	mov	rdi, rax
0x1113a:	call	0x2830


0x11109:	lea	rdx, [rsi + 1]
0x1110d:	mov	qword ptr [rbx + 8], rdx
0x11111:	mov	qword ptr [rax + rsi*8], rbp
0x11115:	mov	eax, 1
0x1111a:	add	rsp, 8
0x1111e:	pop	rbx
0x1111f:	pop	rbp
0x11120:	ret	


0x110ad:	cmp	byte ptr [rbx + 0x8b], 0
0x110b4:	jne	0x110c8


0x11065:	movabs	rax, 0x1fffffffffffffff
0x1106f:	cmp	rsi, rax
0x11072:	ja	0x110e0


0x11003:	mov	rsi, rbx
0x11006:	mov	rdi, rbp
0x11009:	call	r12


0x10f93:	mov	rax, qword ptr [rbx + 8]
0x10f97:	test	rax, rax
0x10f9a:	jne	0x10f90


0x10f28:	mov	rax, qword ptr [rax + 0x18]
0x10f2c:	cmp	rax, r8
0x10f2f:	jl	0x10f50


0x10f70:	mov	eax, 0xffffffff
0x10f75:	ret	


0x10ea5:	add	rsp, 0x48
0x10ea9:	mov	eax, r15d
0x10eac:	pop	rbx
0x10ead:	sar	eax, 1
0x10eaf:	pop	rbp
0x10eb0:	pop	r12
0x10eb2:	pop	r13
0x10eb4:	pop	r14
0x10eb6:	pop	r15
0x10eb8:	ret	


0x10d17:	lea	rax, [r8 + r8*4]
0x10d1b:	mov	r11, rcx
0x10d1e:	mov	ecx, r9d
0x10d21:	mov	r10, r8
0x10d24:	xor	ebx, ebx
0x10d26:	mov	dword ptr [rsp + 0x20], esi
0x10d2a:	shl	rax, 3
0x10d2e:	mov	r15, r9
0x10d31:	mov	qword ptr [rsp + 0x10], r11
0x10d36:	mov	qword ptr [rsp + 0x28], rax
0x10d3b:	mov	eax, 1
0x10d40:	shl	rax, cl
0x10d43:	mov	qword ptr [rsp + 0x18], rax
0x10d48:	not	eax
0x10d4a:	mov	word ptr [rsp + 0x26], ax
0x10d4f:	mov	eax, esi
0x10d51:	and	eax, 1
0x10d54:	mov	dword ptr [rsp + 0xc], eax
0x10d58:	mov	eax, esi
0x10d5a:	and	eax, 2
0x10d5d:	mov	dword ptr [rsp + 8], eax
0x10d61:	jmp	0x10d85


0x10cd0:	cmp	rdi, qword ptr [rsi + 0x28]
0x10cd4:	jne	0x10cc6


0x10cc6:	xor	eax, eax
0x10cc8:	ret	


0x10bf0:	mov	byte ptr [rdi + 8], 2
0x10bf4:	xor	eax, eax
0x10bf6:	ret	


0x10b9a:	mov	r8, qword ptr [rsi + 8]
0x10b9e:	cmp	dword ptr [rsi + 0x90], 1
0x10ba5:	movzx	ecx, byte ptr [r8 + rax]
0x10baa:	mov	byte ptr [rdi], cl
0x10bac:	jle	0x10bc3


0x28d0:	jmp	qword ptr [rip + 0x225652]


0x2580:	jmp	qword ptr [rip + 0x2257fa]


0x10065:	mov	word ptr [rsi + 0x74], dx
0x10069:	xor	eax, eax
0x1006b:	ret	


0x10070:	sub	rsp, 8
0x10074:	call	0x2410


0xf9fe:	xor	ebp, ebp
0xfa00:	pop	rbx
0xfa01:	mov	rax, rbp
0xfa04:	pop	rbp
0xfa05:	pop	r12
0xfa07:	pop	r13
0xfa09:	pop	r14
0xfa0b:	ret	


0xf8f4:	mov	edx, dword ptr [rdi + 0x48]
0xf8f7:	test	dh, 0x20
0xf8fa:	jne	0xf9fe


0xf7a3:	mov	rdi, qword ptr [rbp + 8]
0xf7a7:	test	rdi, rdi
0xf7aa:	je	0xf7b1


0xf75f:	cmp	qword ptr [rdi + 0x58], 0
0xf764:	jns	0xf77f


0xf3ba:	mov	eax, esi
0xf3bc:	mov	ebp, esi
0xf3be:	and	eax, 0x204
0xf3c3:	cmp	eax, 0x204
0xf3c8:	je	0xf738


0xf738:	call	0x2410


0xee30:	mov	eax, dword ptr [rdi + 0x48]
0xee33:	mov	edx, eax
0xee35:	and	edx, 0x10
0xee38:	je	0xee47


0xe9fa:	mov	rdi, rax
0xe9fd:	call	0x26e0


0xe91f:	mov	rax, qword ptr [rdx + 8]
0xe923:	test	rax, rax
0xe926:	je	0xe945


0xe960:	mov	rax, qword ptr [rdx + 0x78]
0xe964:	mov	rdi, qword ptr [rcx]
0xe967:	mov	rsi, rsp
0xe96a:	mov	qword ptr [rsp], rax
0xe96e:	mov	rax, qword ptr [rdx + 0x80]
0xe975:	mov	qword ptr [rsp + 8], rax
0xe97a:	call	0x8dc0


0xe8d0:	mov	rdi, qword ptr [r12]
0xe8d4:	lea	rsi, [rdx + 0x78]
0xe8d8:	call	0x1f3b0


0xe862:	mov	edi, 0x18
0xe867:	call	0x2780


0xe6c0:	test	r9d, r9d
0xe6c3:	je	0xe700


0xe613:	lea	rdx, [rip + 0x14081]
0xe61a:	mov	ecx, 3
0xe61f:	mov	rsi, rbp
0xe622:	mov	rdi, rdx
0xe625:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xe5ac:	mov	rdi, rax
0xe5af:	mov	esi, edx
0xe5b1:	xor	eax, eax
0xe5b3:	jmp	0x1f440


0xe5c0:	mov	rsi, rax
0xe5c3:	xor	eax, eax
0xe5c5:	jmp	0x1f600


0xe560:	mov	edi, 0x20
0xe565:	call	0x2780


0xe52c:	mov	r8, qword ptr [rip + 0x219a95]
0xe533:	lea	rcx, [rip - 0x77a]
0xe53a:	lea	rdx, [rip - 0x761]
0xe541:	xor	esi, esi
0xe543:	mov	edi, 0x1f
0xe548:	call	0x8560


0xe4c7:	mov	qword ptr [rsi], rax
0xe4ca:	mov	rsi, rax
0xe4cd:	call	0x2830


0xe4e8:	call	0x2a10


0xe463:	and	dh, 2
0xe466:	jne	0xe490


0xe4a8:	xor	ebp, ebp
0xe4aa:	jmp	0xe478


0xe3f2:	cmp	esi, -0x64
0xe3f5:	jne	0xe441


0xe3f7:	test	dl, dl
0xe3f9:	jne	0xe410


0xe2d2:	xor	ebx, ebx
0xe2d4:	mov	rdx, qword ptr [rsp + 0x88]
0xe2dc:	xor	rdx, qword ptr fs:[0x28]
0xe2e5:	mov	rax, rbx
0xe2e8:	jne	0xe362


0xe26a:	mov	r12, qword ptr [rbx + 0x50]
0xe26e:	mov	rbp, rdi
0xe271:	mov	r13d, esi
0xe274:	test	r12, r12
0xe277:	je	0xe2a0


0xe21c:	mov	rdi, rbx
0xe21f:	call	0x1f530


0xe1f0:	ret	


0xe1b5:	push	rbp
0xe1b6:	push	rbx
0xe1b7:	mov	rbx, rdi
0xe1ba:	sub	rsp, 8
0xe1be:	nop	
0xe1c0:	mov	rdi, qword ptr [rbx + 0x18]
0xe1c4:	mov	rbp, qword ptr [rbx + 0x10]
0xe1c8:	test	rdi, rdi
0xe1cb:	je	0xe1d2


0xe031:	lea	rsi, [rdx + 0x28]
0xe035:	movabs	rax, 0x1fffffffffffffff
0xe03f:	cmp	rsi, rax
0xe042:	mov	qword ptr [rbp + 0x38], rsi
0xe046:	ja	0xe0e4


0xe065:	test	rbx, rbx
0xe068:	je	0xe081


0xde5c:	test	al, 1
0xde5e:	je	0xdec0


0xdec0:	test	al, 2
0xdec2:	jne	0xde60


0xde30:	mov	eax, 0xffffffff
0xde35:	ret	


0xde26:	seta	al
0xde29:	movzx	eax, al
0xde2c:	ret	


0xddd0:	mov	rax, qword ptr [rsi]
0xddd3:	cmp	qword ptr [rdi], rax
0xddd6:	sete	al
0xddd9:	ret	


0xddcc:	ret	


0xdd70:	mov	rax, qword ptr [rdi + 0x20]
0xdd74:	cmp	qword ptr [rdi + 0x28], rax
0xdd78:	jne	0xdd6a


0xdd6a:	jmp	0x28c0


0xdd3a:	mov	rdi, rbx
0xdd3d:	pop	rbx
0xdd3e:	jmp	0x27a0


0xdd29:	call	0x2810


0x2730:	jmp	qword ptr [rip + 0x225722]


0xd8a7:	lea	rax, [rsp + 0x10]
0xd8ac:	mov	r15, rsi
0xd8af:	test	rsi, rsi
0xd8b2:	mov	rbp, rdi
0xd8b5:	mov	dword ptr [rsp + 8], edx
0xd8b9:	mov	r14, rcx
0xd8bc:	mov	r13, r8
0xd8bf:	cmove	r15, rax
0xd8c3:	call	0x2410


0xdc05:	lea	rcx, [rip + 0x14a84]
0xdc0c:	lea	rsi, [rip + 0x1472d]
0xdc13:	lea	rdi, [rip + 0x14746]
0xdc1a:	mov	edx, 0x54
0xdc1f:	call	0x2600


0xd7fb:	cmp	edi, 2
0xd7fe:	jae	0xd84b


0xd854:	cmp	edi, 4
0xd857:	lea	rsi, [rip + 0x14cf3]
0xd85e:	je	0xd80c


0xd3d7:	lea	rax, [rsp + 0x10]
0xd3dc:	mov	r15, rsi
0xd3df:	test	rsi, rsi
0xd3e2:	mov	rbp, rdi
0xd3e5:	mov	dword ptr [rsp + 8], edx
0xd3e9:	mov	r14, rcx
0xd3ec:	mov	r13, r8
0xd3ef:	cmove	r15, rax
0xd3f3:	call	0x2410


0xd735:	lea	rcx, [rip + 0x14e0c]
0xd73c:	lea	rsi, [rip + 0x14bfd]
0xd743:	lea	rdi, [rip + 0x14c16]
0xd74a:	mov	edx, 0x54
0xd74f:	call	0x2600


0xcd17:	lea	rax, [rsp + 0x10]
0xcd1c:	test	rsi, rsi
0xcd1f:	mov	rbx, rsi
0xcd22:	mov	r12, rdi
0xcd25:	mov	ebp, edx
0xcd27:	mov	r14, rcx
0xcd2a:	cmove	rbx, rax
0xcd2e:	mov	r15, r8
0xcd31:	call	0x2410


0xd37f:	lea	rcx, [rip + 0x150da]
0xd386:	lea	rsi, [rip + 0x14fb3]
0xd38d:	lea	rdi, [rip + 0x14fcc]
0xd394:	mov	edx, 0x54
0xd399:	call	0x2600


0xccd7:	ret	


0xccd0:	xor	eax, eax
0xccd2:	cmp	edx, 0x11
0xccd5:	je	0xcce0


0x2510:	jmp	qword ptr [rip + 0x225832]


0xcbd9:	call	0xcc30


0xcbc2:	movzx	edx, dl
0xcbc5:	test	rdx, rdx
0xcbc8:	jne	0xcbd9


0xcb70:	test	rax, rax
0xcb73:	mov	edx, 0x80
0xcb78:	cmove	rax, rdx
0xcb7c:	test	rax, rax
0xcb7f:	jns	0xcb62


0xcb48:	movabs	rdx, 0x5555555555555553
0xcb52:	cmp	rax, rdx
0xcb55:	ja	0xcb81


0xcaf0:	test	rcx, rcx
0xcaf3:	je	0xcb18


0xcabb:	xor	edx, edx
0xcabd:	movabs	rax, 0x5555555555555554
0xcac7:	div	r9
0xcaca:	cmp	rax, rcx
0xcacd:	jbe	0xcb0b


0xca9b:	sub	rsp, 8
0xca9f:	call	0xcc30


0xca91:	movzx	eax, al
0xca94:	test	rax, rax
0xca97:	jne	0xca9b


0xca49:	test	rdi, rdi
0xca4c:	jne	0xca68


0xca4e:	mov	rsi, rbx
0xca51:	call	0x2830


0xca1b:	sub	rsp, 8
0xca1f:	call	0xcc30


0xca11:	movzx	eax, al
0xca14:	test	rax, rax
0xca17:	jne	0xca1b


0xc8f6:	mov	eax, r10d
0xc8f9:	mov	r11d, 1
0xc8ff:	add	r10d, 8
0xc903:	add	rax, rbp
0xc906:	mov	rax, qword ptr [rax]
0xc909:	test	rax, rax
0xc90c:	mov	qword ptr [r8 + r9*8], rax
0xc910:	je	0xc91c


0xc94c:	mov	rax, rbx
0xc94f:	add	rbx, 8
0xc953:	jmp	0xc906


0xc828:	mov	r11d, eax
0xc82b:	add	r11, qword ptr [r10 + 0x10]
0xc82f:	add	eax, 8
0xc832:	mov	dword ptr [r10], eax
0xc835:	mov	rax, qword ptr [r11]
0xc838:	test	rax, rax
0xc83b:	mov	qword ptr [r8 + r9*8], rax
0xc83f:	je	0xc84b


0xc86a:	mov	r11, qword ptr [r10 + 8]
0xc86e:	lea	rax, [r11 + 8]
0xc872:	mov	qword ptr [r10 + 8], rax
0xc876:	jmp	0xc835


0xc7fb:	jmp	0xc3c0


0xc4f8:	mov	r8, rcx
0xc4fb:	mov	rcx, rdx
0xc4fe:	lea	rdx, [rip + 0x15a8f]
0xc505:	mov	esi, 1
0xc50a:	xor	eax, eax
0xc50c:	call	0x2970


0xc3e0:	mov	r8, rdx
0xc3e3:	lea	rdx, [rip + 0x15b9e]
0xc3ea:	mov	r9, rcx
0xc3ed:	xor	eax, eax
0xc3ef:	mov	rcx, rsi
0xc3f2:	mov	esi, 1
0xc3f7:	call	0x2970


0x2670:	jmp	qword ptr [rip + 0x225782]


0xc2a7:	call	0x2400


0xc275:	test	rdx, rdx
0xc278:	je	0xc2a7


0xc214:	call	0x2400


0xc1ac:	mov	dword ptr [rsp], esi
0xc1af:	mov	rcx, rsp
0xc1b2:	mov	rdx, -1
0xc1b9:	mov	rsi, rax
0xc1bc:	mov	qword ptr [rsp + 4], 0
0xc1c5:	mov	qword ptr [rsp + 0xc], 0x4000000
0xc1ce:	mov	qword ptr [rsp + 0x14], 0
0xc1d7:	mov	qword ptr [rsp + 0x1c], 0
0xc1e0:	mov	qword ptr [rsp + 0x24], 0
0xc1e9:	mov	qword ptr [rsp + 0x2c], 0
0xc1f2:	mov	dword ptr [rsp + 0x34], 0
0xc1fa:	call	0xba20


0xc080:	call	0x2400


0xc01f:	mov	dword ptr [rsp], esi
0xc022:	mov	rcx, rsp
0xc025:	mov	rsi, rax
0xc028:	mov	qword ptr [rsp + 4], 0
0xc031:	mov	qword ptr [rsp + 0xc], 0
0xc03a:	mov	qword ptr [rsp + 0x14], 0
0xc043:	mov	qword ptr [rsp + 0x1c], 0
0xc04c:	mov	qword ptr [rsp + 0x24], 0
0xc055:	mov	qword ptr [rsp + 0x2c], 0
0xc05e:	mov	dword ptr [rsp + 0x34], 0
0xc066:	call	0xba20


0xbff4:	call	0x2400


0xbf8c:	mov	dword ptr [rsp], esi
0xbf8f:	mov	rcx, rsp
0xbf92:	mov	rdx, -1
0xbf99:	mov	rsi, rax
0xbf9c:	mov	qword ptr [rsp + 4], 0
0xbfa5:	mov	qword ptr [rsp + 0xc], 0
0xbfae:	mov	qword ptr [rsp + 0x14], 0
0xbfb7:	mov	qword ptr [rsp + 0x1c], 0
0xbfc0:	mov	qword ptr [rsp + 0x24], 0
0xbfc9:	mov	qword ptr [rsp + 0x2c], 0
0xbfd2:	mov	dword ptr [rsp + 0x34], 0
0xbfda:	call	0xba20


0xbea1:	mov	rdi, qword ptr [r12 + 8]
0xbea6:	lea	rbx, [rip + 0x21c313]
0xbead:	cmp	rdi, rbx
0xbeb0:	je	0xbec9


0xbe76:	sub	eax, 2
0xbe79:	lea	rbx, [r12 + 0x18]
0xbe7e:	shl	rax, 4
0xbe82:	lea	rbp, [r12 + rax + 0x28]
0xbe87:	nop	word ptr [rax + rax]
0xbe90:	mov	rdi, qword ptr [rbx]
0xbe93:	add	rbx, 0x10
0xbe97:	call	0x2a10


0xbcd7:	sub	rsp, 8
0xbcdb:	call	0x2400


0xbcc9:	test	rdx, rdx
0xbccc:	je	0xbcd7


0x2520:	jmp	qword ptr [rip + 0x22582a]


0xa6cd:	mov	rcx, qword ptr [rip + 0x21da0c]
0xa6d4:	lea	rdi, [rip + 0x1739d]
0xa6db:	mov	edx, 0x37
0xa6e0:	mov	esi, 1
0xa6e5:	call	0x2960


0xa656:	mov	esi, 0x2f
0xa65b:	mov	rbx, rdi
0xa65e:	call	0x25d0


0xa2f0:	xor	eax, eax
0xa2f2:	jmp	0x9fe8


0x9f6d:	mov	rbp, rdi
0x9f70:	mov	r12, rsi
0x9f73:	call	0x2520


0x9f00:	lea	rcx, [rdi + 0x18]
0x9f04:	mov	rdi, rcx
0x9f07:	call	0x2710


0x9edc:	mov	qword ptr [rdi], rsi
0x9edf:	movzx	eax, byte ptr [rbx + 0x10]
0x9ee3:	mov	qword ptr [rbp + 8], rdx
0x9ee7:	test	al, al
0x9ee9:	mov	byte ptr [rbp + 0x10], al
0x9eec:	je	0x9ef4


0x2760:	jmp	qword ptr [rip + 0x22570a]


0x9e53:	mov	rax, rdi
0x9e56:	lea	rsi, [rcx - 1]
0x9e5a:	imul	r9
0x9e5d:	mov	rax, rdi
0x9e60:	sar	rax, 0x3f
0x9e64:	sar	rdx, 2
0x9e68:	sub	rdx, rax
0x9e6b:	lea	rax, [rdx + rdx*4]
0x9e6f:	lea	eax, [r8 + rax*2]
0x9e73:	sub	eax, edi
0x9e75:	test	rdx, rdx
0x9e78:	mov	rdi, rdx
0x9e7b:	mov	byte ptr [rcx - 1], al
0x9e7e:	jne	0x9e50


0x9dc0:	mov	edi, 0x10
0x9dc5:	mov	qword ptr [rsp + 8], rsi
0x9dca:	call	0x2780


0x9d62:	cmp	qword ptr [rbx], rsi
0x9d65:	je	0x9d90


0x9bf0:	lea	rdi, [rip + 0x15f61]
0x9bf7:	call	0x23e0


0x9adc:	xor	ebp, ebp
0x9ade:	cmp	byte ptr [rbx], 0x27
0x9ae1:	jne	0x9aec


0x2490:	jmp	qword ptr [rip + 0x225872]


0x8fde:	fstp	st(1)
0x8fe0:	fnstcw	word ptr [rsp - 0xa]
0x8fe4:	movzx	eax, word ptr [rsp - 0xa]
0x8fe9:	or	ah, 0xc
0x8fec:	mov	word ptr [rsp - 0xc], ax
0x8ff1:	fld	st(0)
0x8ff3:	fldcw	word ptr [rsp - 0xc]
0x8ff7:	fistp	qword ptr [rsp - 0x18]
0x8ffb:	fldcw	word ptr [rsp - 0xa]
0x8fff:	mov	rax, qword ptr [rsp - 0x18]
0x9004:	mov	qword ptr [rsp - 0x20], rax
0x9009:	test	rax, rax
0x900c:	fild	qword ptr [rsp - 0x20]
0x9010:	jns	0x9018


0x9050:	fnstcw	word ptr [rsp - 0xa]
0x9054:	movzx	eax, word ptr [rsp - 0xa]
0x9059:	fsubr	st(1), st(0)
0x905b:	fxch	st(1)
0x905d:	movabs	rdx, 0x8000000000000000
0x9067:	or	ah, 0xc
0x906a:	mov	word ptr [rsp - 0xc], ax
0x906f:	fldcw	word ptr [rsp - 0xc]
0x9073:	fistp	qword ptr [rsp - 0x18]
0x9077:	fldcw	word ptr [rsp - 0xa]
0x907b:	mov	rax, qword ptr [rsp - 0x18]
0x9080:	xor	rax, rdx
0x9083:	jmp	0x9004


0x8cad:	call	0x2400


0x8af3:	mov	r12, rsp
0x8af6:	xor	ecx, ecx
0x8af8:	mov	r13, rdx
0x8afb:	mov	rdx, r12
0x8afe:	mov	rbx, rdi
0x8b01:	mov	rbp, rsi
0x8b04:	call	0x7de0


0x88b7:	test	rsi, rsi
0x88ba:	js	0x8a38


0x8908:	mov	rdi, rsi
0x890b:	call	0x7cf0


0x8813:	cmp	rbp, rax
0x8816:	jae	0x884c


0x87c5:	cmp	qword ptr [rdi + 0x20], 0
0x87ca:	je	0x8813


0x8730:	cmp	qword ptr [r12], 0
0x8735:	je	0x8791


0x879b:	mov	qword ptr [rbp + 0x18], 0
0x87a3:	mov	qword ptr [rbp + 0x20], 0
0x87ab:	pop	rbx
0x87ac:	pop	rbp
0x87ad:	pop	r12
0x87af:	ret	


0x852d:	mov	rax, rdx
0x8530:	ret	


0x84f6:	xor	ebp, ebp
0x84f8:	jmp	0x84e4


0x84a7:	mov	r13, rdx
0x84aa:	mov	r12, rsi
0x84ad:	mov	r15, rdi
0x84b0:	xor	ebp, ebp
0x84b2:	mov	rdi, qword ptr [r14]
0x84b5:	test	rdi, rdi
0x84b8:	je	0x84da


0x8482:	xor	eax, eax
0x8484:	ret	


0x8429:	xor	r8d, r8d
0x842c:	mov	rcx, qword ptr [r9]
0x842f:	test	rcx, rcx
0x8432:	je	0x846d


0x8383:	xor	eax, eax
0x8385:	ret	


0x8357:	mov	rdx, qword ptr [rdi]
0x835a:	mov	rcx, qword ptr [rdi + 8]
0x835e:	cmp	rdx, rcx
0x8361:	jae	0x8388


0x8205:	lea	rdx, [rip + 0x19722]
0x820c:	mov	esi, 1
0x8211:	mov	rdi, r12
0x8214:	xor	eax, eax
0x8216:	call	0x2970


0x8150:	cmp	qword ptr [rcx], 0
0x8154:	je	0x817d


0x8186:	xor	eax, eax
0x8188:	cmp	qword ptr [rdi + 0x18], rsi
0x818c:	je	0x8190


0x8137:	ret	


0x7f9b:	mov	rbp, rdi
0x7f9e:	mov	r13, rsi
0x7fa1:	mov	r14d, edx
0x7fa4:	nop	dword ptr [rax]
0x7fa8:	mov	r15, qword ptr [r12]
0x7fac:	test	r15, r15
0x7faf:	je	0x806a


0x8078:	add	rsp, 8
0x807c:	mov	eax, 1
0x8081:	pop	rbx
0x8082:	pop	rbp
0x8083:	pop	r12
0x8085:	pop	r13
0x8087:	pop	r14
0x8089:	pop	r15
0x808b:	ret	


0x7f75:	ret	


0x7f14:	movss	xmm0, dword ptr [rdx + 8]
0x7f19:	ucomiss	xmm0, dword ptr [rip + 0x19a94]
0x7f20:	jbe	0x7f70


0x7d7f:	mov	rax, rdi
0x7d82:	ret	


0x28b0:	jmp	qword ptr [rip + 0x225662]


0x6048:	test	r14d, r14d
0x604b:	mov	eax, 0xc
0x6050:	cmove	r14d, eax
0x6054:	jmp	0x5ef8


0x5ef4:	sub	r14d, 0xc
0x5ef8:	movzx	eax, byte ptr [r10]
0x5efc:	xor	r15d, r15d
0x5eff:	test	al, al
0x5f01:	je	0x5f42


0x5e70:	ret	


0x5e25:	push	r13
0x5e27:	push	r12
0x5e29:	mov	r12, rdi
0x5e2c:	push	rbp
0x5e2d:	push	rbx
0x5e2e:	mov	rbp, rdx
0x5e31:	mov	rbx, rsi
0x5e34:	sub	rsp, 8
0x5e38:	add	rbp, rbx
0x5e3b:	call	0x23c0


0x5e10:	ret	


0x5dc5:	push	r13
0x5dc7:	push	r12
0x5dc9:	mov	r12, rdi
0x5dcc:	push	rbp
0x5dcd:	push	rbx
0x5dce:	mov	rbp, rdx
0x5dd1:	mov	rbx, rsi
0x5dd4:	sub	rsp, 8
0x5dd8:	add	rbp, rbx
0x5ddb:	call	0x29e0


0x5d80:	cmp	byte ptr [rdx + 1], 0
0x5d84:	jne	0x5d28


0x5d28:	lea	rsi, [rip + 0x1cae8]
0x5d2f:	mov	rdi, rdx
0x5d32:	mov	dword ptr [rsp + 4], ecx
0x5d36:	call	0x28d0


0x5b50:	mov	rax, qword ptr [r15 + 8]
0x5b54:	cmp	rax, qword ptr [r15 + 0x10]
0x5b58:	jae	0x5b80


0x5880:	test	rbx, rbx
0x5883:	je	0x5890


0x57a5:	mov	esi, ebp
0x57a7:	mov	rdi, r13
0x57aa:	call	0x5380


0x568b:	add	rsp, 0x18
0x568f:	pop	rbx
0x5690:	pop	rbp
0x5691:	pop	r12
0x5693:	pop	r13
0x5695:	pop	r14
0x5697:	pop	r15
0x5699:	ret	


0x55fc:	mov	eax, dword ptr [r14 + 8]
0x5600:	xor	ebp, ebp
0x5602:	mov	qword ptr [rsp + 8], rsi
0x5607:	test	eax, eax
0x5609:	jne	0x56eb


0x5537:	mov	edx, r12d
0x553a:	mov	rsi, rbx
0x553d:	mov	rdi, r14
0x5540:	call	r13


0x5530:	mov	r13, qword ptr [rip + 0x222aa1]
0x5537:	mov	edx, r12d
0x553a:	mov	rsi, rbx
0x553d:	mov	rdi, r14
0x5540:	call	r13


0x54aa:	mov	rbx, qword ptr [r14 + 8]
0x54ae:	test	rbx, rbx
0x54b1:	je	0x54d4


0x53a6:	movsxd	rax, dword ptr [rdx + rax*4]
0x53aa:	add	rax, rdx
0x53ad:	jmp	rax


0x53c8:	movzx	eax, byte ptr [rdi + 1]
0x53cc:	mov	rdi, rcx
0x53cf:	jmp	0x539e


0x5146:	cmp	byte ptr [rsp + 0x10], 0
0x514b:	jne	0x51b7


0x4ffa:	test	eax, eax
0x4ffc:	je	0x5050


0x5008:	push	r12
0x500a:	push	rbp
0x500b:	mov	rbp, rdi
0x500e:	push	rbx
0x500f:	mov	rbx, rsi
0x5012:	sub	rsp, 0x10
0x5016:	test	eax, eax
0x5018:	jne	0x5058


0x26d0:	jmp	qword ptr [rip + 0x225752]


0x4de0:	mov	rax, rsi
0x4de3:	ret	


0x4dc3:	push	rbx
0x4dc4:	mov	rbx, rdi
0x4dc7:	sub	rsp, 0x10
0x4dcb:	mov	rdi, qword ptr [rdi]
0x4dce:	test	rdi, rdi
0x4dd1:	je	0x4de8


0x4d48:	mov	edi, 0x10
0x4d4d:	mov	qword ptr [rsp + 8], rdx
0x4d52:	call	0x2780


0x4d06:	cmp	qword ptr [rbx], rdx
0x4d09:	je	0x4d38


0x4bc3:	mov	rdi, rbx
0x4bc6:	pop	rbx
0x4bc7:	jmp	0x2a10


0x4bba:	mov	rdi, qword ptr [rdi + 0x10]
0x4bbe:	call	0x2a10


0x4ba0:	mov	rax, qword ptr [rdi + 0x28]
0x4ba4:	sub	rax, qword ptr [rdi + 0x20]
0x4ba8:	sar	rax, 3
0x4bac:	ret	


0x4b96:	mov	rax, qword ptr [rdi + 8]
0x4b9a:	ret	


0x4b40:	mov	rdx, qword ptr [rdi + 0x28]
0x4b44:	mov	rax, qword ptr [rdx]
0x4b47:	test	rax, rax
0x4b4a:	je	0x4b60


0x4b08:	push	rbp
0x4b09:	push	rbx
0x4b0a:	mov	rbp, rsi
0x4b0d:	mov	rbx, rdi
0x4b10:	lea	rsi, [rdi + 0x18]
0x4b14:	lea	rdi, [rdi + 0x10]
0x4b18:	sub	rsp, 8
0x4b1c:	xor	edx, edx
0x4b1e:	call	0x29c0


0x4a81:	pop	rbx
0x4a82:	mov	rax, r14
0x4a85:	pop	rbp
0x4a86:	pop	r12
0x4a88:	pop	r13
0x4a8a:	pop	r14
0x4a8c:	ret	


0x4a50:	mov	r12, rcx
0x4a53:	mov	r13, rdi
0x4a56:	mov	rbp, rdx
0x4a59:	lea	rbx, [rsi + 8]
0x4a5d:	jmp	0x4a6f


0x4890:	lea	rsi, [rip + 0x1cba2]
0x4897:	xor	edi, edi
0x4899:	call	0x2510


0x4845:	lea	rsi, [rip + 0x1cc08]
0x484c:	xor	edi, edi
0x484e:	call	0x2510


0x429d:	lea	rsi, [rip + 0x1bbbc]
0x42a4:	xor	edi, edi
0x42a6:	call	0x2510


0x426f:	lea	rsi, [rip + 0x1bbc2]
0x4276:	xor	edi, edi
0x4278:	call	0x2510


0x40c0:	lea	rsi, [rip + 0x1b99d]
0x40c7:	mov	edx, 5
0x40cc:	xor	edi, edi
0x40ce:	call	0x2510


0x4078:	mov	r8, qword ptr [rip + 0x2240c9]
0x407f:	mov	edx, dword ptr [rip + 0x2240eb]
0x4085:	mov	rsi, rsp
0x4088:	mov	ecx, 1
0x408d:	call	0x90a0


0x4009:	cmp	qword ptr [rip + 0x223fe7], 0
0x4011:	push	rbp
0x4012:	mov	rbp, rsp
0x4015:	je	0x4023


0x4038:	ret	


0x3ff0:	pop	rbp
0x3ff1:	ret	


0x3fd8:	mov	rax, qword ptr [rip + 0x224011]
0x3fdf:	test	rax, rax
0x3fe2:	je	0x3ff0


0x3fa0:	pop	rbp
0x3fa1:	ret	


0x3f87:	mov	rax, qword ptr [rip + 0x224042]
0x3f8e:	test	rax, rax
0x3f91:	je	0x3fa0




0x2600:	jmp	qword ptr [rip + 0x2257ba]


0x23a2:	add	rsp, 8
0x23a6:	ret	


0x23a0:	call	rax




0x24a0:	jmp	qword ptr [rip + 0x22586a]


0x1f789:	mov	rax, qword ptr [rsp + 0x10]
0x1f78e:	cmp	dword ptr [rip + 0x208b63], 0
0x1f795:	mov	dword ptr [rsp], 0x18
0x1f79c:	mov	r12d, dword ptr [rax + 0x10]
0x1f7a0:	mov	edx, r12d
0x1f7a3:	js	0x1f8d3


0x1f7d0:	cmp	esi, 0xb
0x1f7d3:	je	0x1f800


0x2550:	jmp	qword ptr [rip + 0x225812]




0x1f5b0:	mov	byte ptr [rdi + 0x1c], 1
0x1f5b4:	ret	


0x1f59c:	add	edx, 3
0x1f59f:	and	edx, 3
0x1f5a2:	mov	dword ptr [rdi + 0x14], edx
0x1f5a5:	ret	


0x2400:	jmp	qword ptr [rip + 0x2258ba]




0x1f3e0:	mov	qword ptr [rdi + 0x10], 1
0x1f3e8:	mov	rax, qword ptr [rsi]
0x1f3eb:	mov	qword ptr [rdi], rcx
0x1f3ee:	mov	qword ptr [rdi + 8], rax
0x1f3f2:	xor	eax, eax
0x1f3f4:	ret	


0x1f3c6:	cmp	qword ptr [rdi], rcx
0x1f3c9:	je	0x1f3f8




0x2860:	jmp	qword ptr [rip + 0x22568a]


0x25e0:	jmp	qword ptr [rip + 0x2257ca]




0x1ef1b:	lea	rdx, [rsi + 0x38]
0x1ef1f:	cmp	rbp, rdx
0x1ef22:	jb	0x1efa0


0x1ef24:	cmp	byte ptr [rbp], 0
0x1ef28:	lea	rbx, [r12 + 9]
0x1ef2d:	je	0x1ef90




0x2900:	jmp	qword ptr [rip + 0x22563a]


0x24b0:	jmp	qword ptr [rip + 0x225862]


0x1ec59:	mov	rdi, rsi
0x1ec5c:	mov	qword ptr [rsp + 8], rsi
0x1ec61:	call	0x2530


0x1eca8:	test	byte ptr [rbp + 0x38], 0x10
0x1ecac:	mov	rcx, qword ptr [rcx]
0x1ecaf:	mov	rdx, qword ptr [r12 + 8]
0x1ecb4:	jne	0x1ec76




0x1e960:	mov	r15, rbx
0x1e963:	add	r15, rbp
0x1e966:	jo	0x1ea20


0x1e9ba:	add	rsp, 0x28
0x1e9be:	mov	rax, rbx
0x1e9c1:	pop	rbx
0x1e9c2:	pop	rbp
0x1e9c3:	pop	r12
0x1e9c5:	pop	r13
0x1e9c7:	pop	r14
0x1e9c9:	pop	r15
0x1e9cb:	ret	


0x1e5d2:	add	rsp, 0x38
0x1e5d6:	mov	rax, r12
0x1e5d9:	pop	rbx
0x1e5da:	pop	rbp
0x1e5db:	pop	r12
0x1e5dd:	pop	r13
0x1e5df:	pop	r14
0x1e5e1:	pop	r15
0x1e5e3:	ret	


0x1e4d3:	cmp	r8, rdx
0x1e4d6:	mov	rbx, rcx
0x1e4d9:	mov	r15, rdi
0x1e4dc:	jg	0x1e760


0x2830:	jmp	qword ptr [rip + 0x2256a2]


0x1d2fd:	movabs	rax, 0x555555555555554
0x1d307:	mov	dword ptr [rbx + 0x80], 0xf
0x1d311:	cmp	qword ptr [rsp], rax
0x1d315:	ja	0x1d956


0x1d2fa:	rep stosq	qword ptr [rdi], rax


0x1bb8c:	add	rsp, 0x128
0x1bb93:	pop	rbx
0x1bb94:	pop	rbp
0x1bb95:	pop	r12
0x1bb97:	pop	r13
0x1bb99:	pop	r14
0x1bb9b:	pop	r15
0x1bb9d:	ret	


0x1cefe:	call	0x2560


0x1b378:	add	rsp, 0x38
0x1b37c:	pop	rbx
0x1b37d:	pop	rbp
0x1b37e:	pop	r12
0x1b380:	pop	r13
0x1b382:	pop	r14
0x1b384:	pop	r15
0x1b386:	ret	


0x1b998:	call	0x2560


0x1b390:	cmp	r12b, 0x5c
0x1b394:	je	0x1b410


0x1b2fd:	cmp	r14, qword ptr [rsi + 0x30]
0x1b301:	je	0x1b4a0


0x1b100:	mov	r12, qword ptr [r10 + 0x68]
0x1b104:	cmp	r11, r12
0x1b107:	jge	0x1b228


0x1b0dd:	cmp	al, 0x1c
0x1b0df:	je	0x1b100


0x1aabc:	mov	qword ptr [r14], 0
0x1aac3:	xor	eax, eax
0x1aac5:	jmp	0x1a888


0x1ab70:	mov	qword ptr [rsp + 0x10], 0
0x1ab79:	jmp	0x1a918


0x1a867:	mov	rdx, qword ptr [rsi]
0x1a86a:	mov	qword ptr [rdx + rbp*8], 0
0x1a872:	mov	rdx, qword ptr [rax + rbp*8]
0x1a876:	xor	eax, eax
0x1a878:	test	byte ptr [rdx + 0x68], 0x40
0x1a87c:	jne	0x1a95f


0x1a8b8:	lea	rdi, [rsp + 0x60]
0x1a8bd:	mov	rdx, rbx
0x1a8c0:	mov	rsi, r12
0x1a8c3:	mov	dword ptr [rsp + 0x60], 0
0x1a8cb:	call	0x13cb0


0x1912e:	mov	rdi, qword ptr [rsi + 0x20]
0x19132:	mov	qword ptr [rsp + 0x1b8], rbx
0x1913a:	test	rdi, rdi
0x1913d:	mov	qword ptr [rsp + 0x68], rdi
0x19142:	je	0x19166


0x18bf5:	mov	rcx, qword ptr [rsp + 0x28]
0x18bfa:	xor	rcx, qword ptr fs:[0x28]
0x18c03:	mov	rax, rbp
0x18c06:	jne	0x18d77


0x18d18:	test	rbp, rbp
0x18d1b:	je	0x18d70


0x18d08:	mov	qword ptr [r14], rdx
0x18d0b:	mov	rbp, rdx
0x18d0e:	jmp	0x18be7


0x18c2c:	test	rdx, rdx
0x18c2f:	mov	rax, qword ptr [rax + 0x50]
0x18c33:	je	0x18cc0


0x1862f:	add	rsp, 0xb8
0x18636:	pop	rbx
0x18637:	pop	rbp
0x18638:	pop	r12
0x1863a:	pop	r13
0x1863c:	pop	r14
0x1863e:	pop	r15
0x18640:	ret	


0x18b7c:	call	0x2560


0x18367:	mov	rax, qword ptr [rsp + 0x40]
0x1836c:	mov	rdi, qword ptr [rsp]
0x18370:	mov	rax, qword ptr [rax]
0x18373:	mov	r13, qword ptr [rax + rdi*8]
0x18377:	mov	rdi, qword ptr [rsp + 0x38]
0x1837c:	mov	rax, qword ptr [rdi]
0x1837f:	mov	rbx, r13
0x18382:	shl	rbx, 4
0x18386:	add	rax, rbx
0x18389:	cmp	byte ptr [rax + 8], 4
0x1838d:	jne	0x18350


0x1788d:	mov	rax, qword ptr [rbp - 0x90]
0x17894:	pxor	xmm0, xmm0
0x17898:	mov	qword ptr [rbp - 0x60], 0
0x178a0:	mov	rbx, qword ptr [rax + 0x90]
0x178a7:	mov	rax, qword ptr [rbp - 0x98]
0x178ae:	movaps	xmmword ptr [rbp - 0x70], xmm0
0x178b2:	shl	rax, 4
0x178b6:	cmp	rax, 0xfbf
0x178bc:	mov	qword ptr [rbp - 0xb8], rax
0x178c3:	ja	0x17fb6


0x17540:	lea	rsi, [rbp - 1]
0x17544:	mov	qword ptr [r15 + 0x48], rbp
0x17548:	mov	rdi, r15
0x1754b:	call	0x14480


0x17164:	lea	rsi, [r12 - 1]
0x17169:	mov	qword ptr [r15 + 0x48], r12
0x1716d:	mov	rdi, r15
0x17170:	call	0x14480


0x177cb:	mov	eax, 0xc
0x177d0:	jmp	0x17634


0x1775c:	lea	r14, [r13 + r12]
0x17761:	movabs	rax, 0x1fffffffffffffff
0x1776b:	cmp	r14, rax
0x1776e:	ja	0x177cb


0x16f40:	xor	ebp, ebp
0x16f42:	add	rsp, 8
0x16f46:	mov	eax, ebp
0x16f48:	pop	rbx
0x16f49:	pop	rbp
0x16f4a:	pop	r12
0x16f4c:	pop	r13
0x16f4e:	ret	


0x16f8f:	mov	rcx, qword ptr [rcx + 0x58]
0x16f93:	lea	rdi, [r8 + 1]
0x16f97:	cmp	rdi, rcx
0x16f9a:	jge	0x16f40


0x16e7e:	mov	rbx, rsi
0x16e81:	mov	rdi, rcx
0x16e84:	mov	rsi, r8
0x16e87:	mov	r10, rcx
0x16e8a:	call	0x125f0


0x16d9d:	mov	rax, qword ptr [rsp + 0x168]
0x16da5:	xor	rax, qword ptr fs:[0x28]
0x16dae:	jne	0x16e42


0x16992:	lea	rax, [rsp + 0x58]
0x16997:	mov	qword ptr [rsp], 0
0x1699f:	mov	qword ptr [rsp + 0x40], rax
0x169a4:	lea	rax, [rsp + 0x54]
0x169a9:	mov	qword ptr [rsp + 0x48], rax
0x169ae:	lea	rax, [rsp + 0x60]
0x169b3:	mov	qword ptr [rsp + 0x38], rax
0x169b8:	jmp	0x169fe




0x16009:	lea	r14, [rcx + rcx + 1]
0x1600e:	mov	rdi, rax
0x16011:	mov	qword ptr [rsp + 8], r8
0x16016:	mov	qword ptr [rsp], rdx
0x1601a:	lea	rsi, [r14*8]
0x16022:	call	0x2830


0x15ef8:	lea	rdx, [rcx + 1]
0x15efc:	mov	rdi, r12
0x15eff:	mov	qword ptr [r13], rdx
0x15f03:	lea	r13, [rax + rcx*8]
0x15f07:	call	0x2690


0x15ed2:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x15ed4:	seta	al
0x15ed7:	sbb	al, 0
0x15ed9:	test	al, al
0x15edb:	jne	0x15fd6




0x2710:	jmp	qword ptr [rip + 0x225732]


0x150e1:	call	0x2a10


0x14fad:	mov	rax, qword ptr [rbp + 0x10]
0x14fb1:	mov	rax, qword ptr [rax + rbx*8]
0x14fb5:	cmp	r13, rax
0x14fb8:	je	0x14fa0


0x1484e:	mov	rax, qword ptr [rbx + 0x58]
0x14852:	sub	qword ptr [rbx + 0x68], rbp
0x14856:	mov	qword ptr [rbx + 0x28], r15
0x1485a:	sub	rax, rbp
0x1485d:	cmp	dword ptr [rbx + 0x90], 1
0x14864:	mov	qword ptr [rbx + 0x58], rax
0x14868:	jle	0x14908


0x147eb:	mov	rax, qword ptr [rbx + 0x38]
0x147ef:	movzx	edx, byte ptr [rbx + 0x8c]
0x147f6:	mov	r8, qword ptr [rbx + 0x30]
0x147fa:	cmp	rax, rbp
0x147fd:	jle	0x14920


0x14793:	mov	rax, qword ptr [rbx + 0x50]
0x14797:	mov	qword ptr [rbx + 0x30], 0
0x1479f:	mov	rbp, r15
0x147a2:	mov	qword ptr [rbx + 0x28], 0
0x147aa:	mov	qword ptr [rbx + 0x38], 0
0x147b2:	mov	byte ptr [rbx + 0x8c], 0
0x147b9:	mov	qword ptr [rbx + 0x58], rax
0x147bd:	mov	rax, qword ptr [rbx + 0x60]
0x147c1:	mov	qword ptr [rbx + 0x68], rax
0x147c5:	mov	eax, r10d
0x147c8:	and	eax, 1
0x147cb:	cmp	eax, 1
0x147ce:	sbb	eax, eax
0x147d0:	and	eax, 2
0x147d3:	add	eax, 4
0x147d6:	cmp	byte ptr [rbx + 0x8b], 0
0x147dd:	mov	dword ptr [rbx + 0x70], eax
0x147e0:	je	0x148b0


0x148c0:	mov	qword ptr [rdi + 0x20], 0
0x148c8:	jmp	0x14793


0x145c0:	push	rbx
0x145c1:	mov	ebx, dword ptr [rsi + 8]
0x145c4:	mov	eax, 1
0x145c9:	test	ebx, 0x3ff00
0x145cf:	je	0x1461c


0x14652:	ret	


0x14620:	cmp	al, 1
0x14622:	jne	0x14630


0x1458a:	cmp	al, 5
0x1458c:	je	0x145a0


0x14538:	and	edx, 2
0x1453b:	cmp	edx, 1
0x1453e:	sbb	eax, eax
0x14540:	and	eax, 2
0x14543:	add	eax, 8
0x14546:	jmp	0x144d2


0x14498:	cmp	dword ptr [rdi + 0x90], 1
0x1449f:	jle	0x144f0


0x1436e:	mov	rax, qword ptr [r14]
0x14371:	mov	rbp, qword ptr [rax + rbx*8]
0x14375:	mov	rax, rbp
0x14378:	shl	rax, 4
0x1437c:	add	rax, qword ptr [r13]
0x14380:	cmp	byte ptr [rax + 8], 8
0x14384:	jne	0x14360


0x14022:	cmp	rsi, rcx
0x14025:	jl	0x14000


0x13ff5:	jmp	0x14078


0x1404d:	xor	eax, eax
0x1404f:	mov	rbx, qword ptr [rsp + 0x68]
0x14054:	xor	rbx, qword ptr fs:[0x28]
0x1405d:	jne	0x14329


0x1402c:	mov	rcx, qword ptr [rbx + 0xd8]
0x14033:	lea	rax, [rsi + rsi*4]
0x14037:	shl	rax, 3
0x1403b:	cmp	qword ptr [rcx + rax + 8], r12
0x14040:	mov	qword ptr [rsp + 0x30], rax
0x14045:	jne	0x1404d


0x13f78:	add	rsp, 0x48
0x13f7c:	pop	rbx
0x13f7d:	pop	rbp
0x13f7e:	pop	r12
0x13f80:	pop	r13
0x13f82:	pop	r14
0x13f84:	pop	r15
0x13f86:	ret	


0x13f87:	call	0x2560


0x13f4c:	mov	rsi, qword ptr [rbx + r15*8]
0x13f50:	mov	rdx, qword ptr [r12 + r15*8]
0x13f54:	test	rsi, rsi
0x13f57:	jne	0x13f00


0x13e3f:	add	rsp, 8
0x13e43:	mov	rax, rbx
0x13e46:	pop	rbx
0x13e47:	pop	rbp
0x13e48:	pop	r12
0x13e4a:	pop	r13
0x13e4c:	pop	r14
0x13e4e:	pop	r15
0x13e50:	ret	


0x13cec:	mov	rax, qword ptr [rsi + 0x88]
0x13cf3:	mov	r14, rdx
0x13cf6:	mov	r12, rsi
0x13cf9:	mov	r13, rdi
0x13cfc:	and	rax, rbp
0x13cff:	lea	rdx, [rax + rax*2]
0x13d03:	mov	rax, qword ptr [rsi + 0x40]
0x13d07:	lea	rax, [rax + rdx*8]
0x13d0b:	mov	r10, qword ptr [rax]
0x13d0e:	test	r10, r10
0x13d11:	jle	0x13d46


0x13cd0:	mov	rax, qword ptr [rdx + 0x10]
0x13cd4:	lea	rcx, [rax + rbp*8]
0x13cd8:	nop	dword ptr [rax + rax]
0x13ce0:	add	rbp, qword ptr [rax]
0x13ce3:	add	rax, 8
0x13ce7:	cmp	rcx, rax
0x13cea:	jne	0x13ce0


0x13a9c:	add	rsp, 0x28
0x13aa0:	mov	rax, r14
0x13aa3:	pop	rbx
0x13aa4:	pop	rbp
0x13aa5:	pop	r12
0x13aa7:	pop	r13
0x13aa9:	pop	r14
0x13aab:	pop	r15
0x13aad:	ret	


0x13a2c:	mov	rax, qword ptr [rsi + 0x88]
0x13a33:	mov	rbp, rdx
0x13a36:	mov	dword ptr [rsp + 4], ecx
0x13a3a:	mov	r13, rsi
0x13a3d:	mov	qword ptr [rsp + 0x18], rdi
0x13a42:	and	rax, r12
0x13a45:	lea	rdx, [rax + rax*2]
0x13a49:	mov	rax, qword ptr [rsi + 0x40]
0x13a4d:	lea	rax, [rax + rdx*8]
0x13a51:	mov	r11, qword ptr [rax]
0x13a54:	test	r11, r11
0x13a57:	jle	0x13ab0


0x13a17:	mov	rax, qword ptr [rdx + 0x10]
0x13a1b:	lea	r10, [rax + r10*8]
0x13a1f:	nop	
0x13a20:	add	r12, qword ptr [rax]
0x13a23:	add	rax, 8
0x13a27:	cmp	r10, rax
0x13a2a:	jne	0x13a20


0x13951:	pxor	xmm0, xmm0
0x13955:	mov	qword ptr [rdi + 0x10], 0
0x1395d:	xor	eax, eax
0x1395f:	movaps	xmmword ptr [rdi], xmm0
0x13962:	pop	rbx
0x13963:	pop	rbp
0x13964:	pop	r12
0x13966:	pop	r13
0x13968:	pop	r14
0x1396a:	ret	


0x1394a:	cmp	qword ptr [rdx + 8], 0
0x1394f:	jg	0x13970


0x13940:	test	r13, r13
0x13943:	jg	0x13973


0x138ae:	test	r13, r13
0x138b1:	jle	0x13940


0x137a2:	mov	rcx, qword ptr [rsp + 8]
0x137a7:	xor	rcx, qword ptr fs:[0x28]
0x137b0:	mov	eax, dword ptr [rsp + 4]
0x137b4:	jne	0x137fb


0x1379c:	cmp	byte ptr [rdx + 0x30], 0x11
0x137a0:	je	0x137c0


0x137e0:	lea	rdi, [rsp + 4]
0x137e5:	mov	rsi, rbp
0x137e8:	call	0x13520


0x135d0:	lea	rax, [rbx + 0x70]
0x135d4:	lea	r14, [rsp + 0x20]
0x135d9:	sub	rbx, -0x80
0x135dd:	xor	ecx, ecx
0x135df:	xor	edx, edx
0x135e1:	mov	rsi, rbx
0x135e4:	mov	r15, rax
0x135e7:	mov	r8, r14
0x135ea:	mov	rdi, rax
0x135ed:	mov	byte ptr [rsp + 0x28], 8
0x135f2:	mov	qword ptr [rsp + 8], rax
0x135f7:	call	0x13360


0x1355c:	mov	rax, qword ptr [rdx + 0x28]
0x13560:	cmp	rax, 0x3f
0x13564:	jg	0x1369d


0x133d3:	test	rcx, rcx
0x133d6:	je	0x133db


0x133d0:	mov	qword ptr [rdx], rax
0x133d3:	test	rcx, rcx
0x133d6:	je	0x133db


0x131cc:	push	r13
0x131ce:	push	r12
0x131d0:	lea	rax, [r9 + r11]
0x131d4:	push	rbp
0x131d5:	push	rbx
0x131d6:	mov	r12, rdx
0x131d9:	mov	rbx, rdi
0x131dc:	mov	rbp, rsi
0x131df:	sub	rsp, 8
0x131e3:	mov	rcx, qword ptr [rdi + 8]
0x131e7:	mov	r13, qword ptr [rdi]
0x131ea:	mov	rdi, qword ptr [rdi + 0x10]
0x131ee:	lea	rdx, [rax + rcx]
0x131f2:	cmp	rdx, r13
0x131f5:	jg	0x13320


0x12bd6:	push	r12
0x12bd8:	push	rbp
0x12bd9:	mov	r12, rsi
0x12bdc:	push	rbx
0x12bdd:	mov	rax, qword ptr [rdi + 8]
0x12be1:	mov	rbx, rdi
0x12be4:	mov	rsi, qword ptr [rdi]
0x12be7:	lea	rcx, [rax + rdx*2]
0x12beb:	cmp	rsi, rcx
0x12bee:	jl	0x12d38


0x129d6:	cmp	rbx, r10
0x129d9:	jl	0x129b0


0x129a6:	jmp	0x12b40


0x12b80:	mov	rbx, -1
0x12b87:	jmp	0x12a02


0x129e4:	mov	r11, qword ptr [rdi + 0xd8]
0x129eb:	lea	rax, [rbx + rbx*4]
0x129ef:	lea	rax, [r11 + rax*8]
0x129f3:	cmp	r8, qword ptr [rax + 8]
0x129f7:	mov	rax, -1
0x129fe:	cmovne	rbx, rax
0x12a02:	mov	rax, r15
0x12a05:	xor	ebp, ebp
0x12a07:	cmp	rbp, rax
0x12a0a:	jge	0x12a64


0x12928:	mov	rax, qword ptr [rsi + 0x10]
0x1292c:	mov	rcx, qword ptr [rax + 0x18]
0x12930:	mov	qword ptr [rdx + 0x20], rcx
0x12934:	mov	rdx, qword ptr [rsi + 0x20]
0x12938:	mov	qword ptr [rax + 0x20], rdx
0x1293c:	xor	eax, eax
0x1293e:	ret	


0x12900:	test	rdx, rdx
0x12903:	je	0x1290d


0x1286c:	xor	eax, eax
0x1286e:	ret	


0x128cc:	movsxd	rdx, dword ptr [rsi + 0x28]
0x128d0:	mov	rcx, qword ptr [rax + rdx*8]
0x128d4:	mov	eax, 1
0x128d9:	shl	eax, cl
0x128db:	mov	qword ptr [rsi + 0x28], rcx
0x128df:	cdqe	
0x128e1:	or	qword ptr [rdi + 0xa0], rax
0x128e8:	xor	eax, eax
0x128ea:	ret	


0x12870:	mov	rax, qword ptr [rsi + 8]
0x12874:	test	rax, rax
0x12877:	je	0x1286c


0x12834:	mov	rax, qword ptr [rsi]
0x12837:	nop	word ptr [rax + rax]
0x12840:	mov	rcx, qword ptr [rax + rdx*8 + 8]
0x12845:	mov	qword ptr [rax + rdx*8], rcx
0x12849:	add	rdx, 1
0x1284d:	cmp	rdx, qword ptr [rdi]
0x12850:	jl	0x12840


0x126b5:	lea	rcx, [rsi + rdi]
0x126b9:	shr	rcx, 1
0x126bc:	cmp	rdx, qword ptr [r8 + rcx*8]
0x126c0:	jle	0x126d8


0x126dd:	xor	eax, eax
0x126df:	cmp	rdx, qword ptr [r8 + rsi*8]
0x126e3:	je	0x12710


0x1267d:	test	rax, rax
0x12680:	jns	0x12660


0x1260f:	sub	rcx, rsi
0x12612:	lea	rsi, [rdx + rdi - 4]
0x12617:	mov	edx, 2
0x1261c:	jmp	0x1262b


0x1258d:	mov	rdi, qword ptr [r12 + 0x28]
0x12592:	call	0x2a10


0x12563:	xor	ebx, ebx
0x12565:	nop	dword ptr [rax]
0x12568:	mov	rax, qword ptr [r12 + 0x28]
0x1256d:	mov	rbp, qword ptr [rax + rbx*8]
0x12571:	add	rbx, 1
0x12575:	mov	rdi, qword ptr [rbp + 0x20]
0x12579:	call	0x2a10


0x123eb:	xor	ebx, ebx
0x123ed:	jmp	0x123f4




0x122f9:	mov	rax, qword ptr [r14 + 0x18]
0x122fd:	mov	rcx, qword ptr [rax + r9*8]
0x12301:	mov	qword ptr [rax + r13*8], rcx
0x12305:	xor	eax, eax
0x12307:	jmp	0x121e0


0x12106:	lea	rbx, [r13 + r13*2]
0x1210b:	mov	rsi, qword ptr [rsi + 0x10]
0x1210f:	shl	rbx, 3
0x12113:	add	rdi, rbx
0x12116:	cmp	rcx, 1
0x1211a:	mov	r15, qword ptr [rsi]
0x1211d:	mov	qword ptr [rdi + 8], 0
0x12125:	je	0x12240


0x11e96:	xor	ecx, ecx
0x11e98:	cmp	dword ptr [rbx + 0xb4], 1
0x11e9f:	setg	cl
0x11ea2:	movzx	edx, byte ptr [rax + 0xa]
0x11ea6:	shl	ecx, 4
0x11ea9:	pxor	xmm0, xmm0
0x11ead:	and	edx, 0xffffffef
0x11eb0:	or	edx, ecx
0x11eb2:	mov	byte ptr [rax + 0xa], dl
0x11eb5:	mov	qword ptr [r12 + rsi*8], -1
0x11ebd:	mov	rax, qword ptr [rbx + 0x10]
0x11ec1:	lea	rax, [rax + rax*2]
0x11ec5:	lea	rax, [rbp + rax*8]
0x11eca:	movups	xmmword ptr [rax], xmm0
0x11ecd:	mov	qword ptr [rax + 0x10], 0
0x11ed5:	mov	rax, qword ptr [rbx + 0x10]
0x11ed9:	lea	rdx, [rax + rax*2]
0x11edd:	mov	rax, qword ptr [rbx + 0x30]
0x11ee1:	lea	rax, [rax + rdx*8]
0x11ee5:	movups	xmmword ptr [rax], xmm0
0x11ee8:	mov	qword ptr [rax + 0x10], 0
0x11ef0:	mov	rax, qword ptr [rbx + 0x10]
0x11ef4:	lea	rdx, [rax + 1]
0x11ef8:	mov	qword ptr [rbx + 0x10], rdx
0x11efc:	add	rsp, 0x18
0x11f00:	pop	rbx
0x11f01:	pop	rbp
0x11f02:	pop	r12
0x11f04:	pop	r13
0x11f06:	pop	r14
0x11f08:	pop	r15
0x11f0a:	ret	


0x11ea2:	movzx	edx, byte ptr [rax + 0xa]
0x11ea6:	shl	ecx, 4
0x11ea9:	pxor	xmm0, xmm0
0x11ead:	and	edx, 0xffffffef
0x11eb0:	or	edx, ecx
0x11eb2:	mov	byte ptr [rax + 0xa], dl
0x11eb5:	mov	qword ptr [r12 + rsi*8], -1
0x11ebd:	mov	rax, qword ptr [rbx + 0x10]
0x11ec1:	lea	rax, [rax + rax*2]
0x11ec5:	lea	rax, [rbp + rax*8]
0x11eca:	movups	xmmword ptr [rax], xmm0
0x11ecd:	mov	qword ptr [rax + 0x10], 0
0x11ed5:	mov	rax, qword ptr [rbx + 0x10]
0x11ed9:	lea	rdx, [rax + rax*2]
0x11edd:	mov	rax, qword ptr [rbx + 0x30]
0x11ee1:	lea	rax, [rax + rdx*8]
0x11ee5:	movups	xmmword ptr [rax], xmm0
0x11ee8:	mov	qword ptr [rax + 0x10], 0
0x11ef0:	mov	rax, qword ptr [rbx + 0x10]
0x11ef4:	lea	rdx, [rax + 1]
0x11ef8:	mov	qword ptr [rbx + 0x10], rdx
0x11efc:	add	rsp, 0x18
0x11f00:	pop	rbx
0x11f01:	pop	rbp
0x11f02:	pop	r12
0x11f04:	pop	r13
0x11f06:	pop	r14
0x11f08:	pop	r15
0x11f0a:	ret	


0x11f28:	mov	rdi, qword ptr [rdi]
0x11f2b:	mov	rsi, rbp
0x11f2e:	mov	qword ptr [rsp + 8], rdx
0x11f33:	shl	rsi, 5
0x11f37:	call	0x2830


0x12002:	mov	rax, -1
0x12009:	jmp	0x11efc


0x11e08:	mov	rdi, qword ptr [rdi]
0x11e0b:	jmp	0x2a10


0x11e02:	ret	


0x11d50:	lea	esi, [rbp + 1]
0x11d53:	mov	rdi, rbx
0x11d56:	call	0x11be0


0x11d79:	cmp	rax, qword ptr [rbx + 0x58]
0x11d7d:	jge	0x11d5f


0x11d5f:	cmp	r12, rbp
0x11d62:	jl	0x11d90


0x11790:	cmp	byte ptr [rdi + 0x8c], 0
0x11797:	jne	0x1160c


0x11650:	lea	rax, [r14 + 0x20]
0x11654:	mov	qword ptr [rsp + 8], rax
0x11659:	mov	rax, rbx
0x1165c:	sub	rax, r15
0x1165f:	mov	qword ptr [rsp + 0x10], rax
0x11664:	lea	rax, [rsp + 0x44]
0x11669:	mov	qword ptr [rsp + 0x20], rax
0x1166e:	mov	rdx, qword ptr [r14 + 0x78]
0x11672:	mov	rax, qword ptr [r14 + 0x20]
0x11676:	test	rdx, rdx
0x11679:	mov	qword ptr [rsp + 0x48], rax
0x1167e:	jne	0x11989


0x11615:	mov	qword ptr [r14 + 0x30], r15
0x11619:	mov	qword ptr [r14 + 0x38], r13
0x1161d:	xor	eax, eax
0x1161f:	mov	rcx, qword ptr [rsp + 0x98]
0x11627:	xor	rcx, qword ptr fs:[0x28]
0x11630:	jne	0x11bba


0x114d0:	add	rsp, 0x68
0x114d4:	pop	rbx
0x114d5:	pop	rbp
0x114d6:	pop	r12
0x114d8:	pop	r13
0x114da:	pop	r14
0x114dc:	pop	r15
0x114de:	ret	


0x115ae:	call	0x2560


0x1144f:	mov	rsi, qword ptr [rbx + 0x28]
0x11453:	add	rsi, rbp
0x11456:	add	rsi, qword ptr [rbx]
0x11459:	mov	rcx, r14
0x1145c:	mov	rdi, r13
0x1145f:	call	0x101e0


0x11530:	mov	ecx, dword ptr [rbx + 0x90]
0x11536:	xor	eax, eax
0x11538:	lea	rsi, [rsp + 0x10]
0x1153d:	test	ecx, ecx
0x1153f:	jg	0x11561


0x23c0:	jmp	qword ptr [rip + 0x2258da]


0x11181:	mov	qword ptr [rax], rbp
0x11184:	add	qword ptr [rdi + 8], 1
0x11189:	mov	eax, 1
0x1118e:	add	rsp, 8
0x11192:	pop	rbx
0x11193:	pop	rbp
0x11194:	ret	


0x111d0:	cmp	rdx, rsi
0x111d3:	je	0x11260


0x110b6:	mov	qword ptr [rbx + 0x40], rbp
0x110ba:	add	rsp, 8
0x110be:	xor	eax, eax
0x110c0:	pop	rbx
0x110c1:	pop	rbp
0x110c2:	ret	


0x110c8:	mov	rdi, qword ptr [rbx + 8]
0x110cc:	mov	rsi, rbp
0x110cf:	call	0x2830


0x11074:	mov	rdi, qword ptr [rdi + 0x10]
0x11078:	lea	rsi, [rsi*4]
0x11080:	call	0x2830


0x110e0:	add	rsp, 8
0x110e4:	mov	eax, 0xc
0x110e9:	pop	rbx
0x110ea:	pop	rbp
0x110eb:	ret	


0x10f9c:	mov	rax, qword ptr [rbx + 0x10]
0x10fa0:	test	rax, rax
0x10fa3:	jne	0x10f90


0x10f90:	mov	rbx, rax
0x10f93:	mov	rax, qword ptr [rbx + 8]
0x10f97:	test	rax, rax
0x10f9a:	jne	0x10f90


0x10f50:	mov	eax, 1
0x10f55:	ret	


0x10f31:	xor	esi, esi
0x10f33:	cmp	r10, r8
0x10f36:	sete	sil
0x10f3a:	or	esi, 2
0x10f3d:	cmp	rax, r8
0x10f40:	je	0x10f65


0x10d85:	mov	rax, qword ptr [r12 + 0x10]
0x10d8a:	mov	rbp, qword ptr [rax + rbx*8]
0x10d8e:	mov	rax, rbp
0x10d91:	shl	rax, 4
0x10d95:	add	rax, qword ptr [r14]
0x10d98:	movzx	edx, byte ptr [rax + 8]
0x10d9c:	cmp	dl, 8
0x10d9f:	jne	0x10d68


0x10cd6:	or	byte ptr [rsi + 0x32], 8
0x10cda:	xor	eax, eax
0x10cdc:	ret	


0x10bc3:	cmp	cl, 0x5c
0x10bc6:	je	0x10c30


0x10bae:	cmp	rax, qword ptr [rsi + 0x30]
0x10bb2:	je	0x10bc3






0xf900:	movzx	eax, word ptr [rbp + 0x74]
0xf904:	mov	ebx, 3
0xf909:	mov	r12, rdi
0xf90c:	mov	word ptr [rbp + 0x74], bx
0xf910:	cmp	ax, 1
0xf914:	je	0xfb60


0xf7b1:	mov	rdi, qword ptr [rbp + 0x10]
0xf7b5:	call	0x2a10


0xf7ac:	call	0xe1b0


0xf766:	jmp	0xf880


0xf77f:	mov	rbx, qword ptr [rdi + 0x10]
0xf783:	test	rbx, rbx
0xf786:	jne	0xf770


0xf3ce:	test	sil, 0x12
0xf3d2:	je	0xf738


0xee47:	and	eax, 0x204
0xee4c:	mov	rsi, qword ptr [rbp + 0x30]
0xee50:	mov	edi, 0xffffff9c
0xee55:	cmp	eax, 0x200
0xee5a:	jne	0xee60


0xee3a:	test	al, 1
0xee3c:	mov	edx, 0x20000
0xee41:	jne	0xef48


0x26e0:	jmp	qword ptr [rip + 0x22574a]


0xe945:	mov	rax, qword ptr [rsp + 0x18]
0xe94a:	xor	rax, qword ptr fs:[0x28]
0xe953:	jne	0xe9ae


0xe928:	cmp	qword ptr [rax + 0x58], 0
0xe92d:	js	0xe945


0xe700:	test	r12d, r12d
0xe703:	js	0xe840


0xe6c5:	and	bh, 2
0xe6c8:	je	0xe6d3


0xe625:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xe627:	seta	al
0xe62a:	sbb	al, 0
0xe62c:	test	al, al
0xe62e:	jne	0xe6c0


0xe468:	mov	edi, dword ptr [rdi + 0x28]
0xe46b:	xor	ebp, ebp
0xe46d:	call	0x2820


0xe490:	mov	edx, 1
0xe495:	mov	esi, 0xffffff9c
0xe49a:	call	0xe3e0


0xe478:	lea	rdi, [rbx + 0x60]
0xe47c:	call	0xe200


0xe441:	call	0x2400


0xe3fb:	test	byte ptr [rbx + 0x48], 4
0xe3ff:	jne	0xe405


0xe410:	lea	rdi, [rbx + 0x60]
0xe414:	call	0x1f540


0xe2ea:	add	rsp, 0x98
0xe2f1:	pop	rbx
0xe2f2:	pop	rbp
0xe2f3:	pop	r12
0xe2f5:	pop	r13
0xe2f7:	ret	


0xe362:	call	0x2560


0xe2a0:	mov	r8, qword ptr [rip + 0x219d21]
0xe2a7:	lea	rcx, [rip - 0x4ae]
0xe2ae:	lea	rdx, [rip - 0x4c5]
0xe2b5:	xor	esi, esi
0xe2b7:	mov	edi, 0xd
0xe2bc:	call	0x8560


0xe279:	mov	rax, qword ptr [rbp + 0x78]
0xe27d:	mov	rsi, rsp
0xe280:	mov	rdi, r12
0xe283:	mov	qword ptr [rsp], rax
0xe287:	call	0x82f0


0xe1d2:	mov	rdi, rbx
0xe1d5:	mov	rbx, rbp
0xe1d8:	call	0x2a10


0xe1cd:	call	0x2650


0xe04c:	shl	rsi, 3
0xe050:	call	0x2830


0xe0e4:	call	0x2a10


0xe081:	mov	rcx, r13
0xe084:	mov	edx, 8
0xe089:	mov	rsi, r12
0xe08c:	call	0x2470


0xe06a:	mov	rdx, rdi
0xe06d:	nop	dword ptr [rax]
0xe070:	add	rdx, 8
0xe074:	mov	qword ptr [rdx - 8], rbx
0xe078:	mov	rbx, qword ptr [rbx + 0x10]
0xe07c:	test	rbx, rbx
0xe07f:	jne	0xe070


0xde60:	mov	rdx, rbx
0xde63:	mov	edi, 1
0xde68:	call	0x2740


0xdec4:	test	dl, dl
0xdec6:	jne	0xde60


0xdd7a:	cmp	qword ptr [rdi + 0x48], 0
0xdd7f:	jne	0xdd6a


0x28c0:	jmp	qword ptr [rip + 0x22565a]


0x27a0:	jmp	qword ptr [rip + 0x2256ea]


0x2810:	jmp	qword ptr [rip + 0x2256b2]




0xd800:	sub	edi, 1
0xd803:	lea	rsi, [rip + 0x14d62]
0xd80a:	jne	0xd846


0xd84b:	lea	rsi, [rip + 0x14d3e]
0xd852:	jmp	0xd80c


0xd80c:	test	r10d, r10d
0xd80f:	movsxd	rax, r10d
0xd812:	js	0xd862


0xd860:	jmp	0xd846


0xcce0:	cmp	qword ptr [rsi + 0x58], 0
0xcce5:	setne	al
0xcce8:	ret	




0xcbca:	call	0x26b0


0xcb81:	sub	rsp, 8
0xcb85:	call	0xcc30


0xcb62:	mov	qword ptr [rsi], rax
0xcb65:	mov	rsi, rax
0xcb68:	jmp	0xca40


0xcb57:	mov	rdx, rax
0xcb5a:	shr	rdx, 1
0xcb5d:	lea	rax, [rdx + rax + 1]
0xcb62:	mov	qword ptr [rsi], rax
0xcb65:	mov	rsi, rax
0xcb68:	jmp	0xca40


0xcb18:	xor	edx, edx
0xcb1a:	mov	eax, 0x80
0xcb1f:	xor	r8d, r8d
0xcb22:	div	r9
0xcb25:	test	rax, rax
0xcb28:	sete	r8b
0xcb2c:	lea	rcx, [r8 + rax]
0xcb30:	jmp	0xcaf5


0xcaf5:	mov	rax, rcx
0xcaf8:	mul	r9
0xcafb:	seto	dl
0xcafe:	test	rax, rax
0xcb01:	movzx	edx, dl
0xcb04:	js	0xcb0b


0xcb0b:	sub	rsp, 8
0xcb0f:	call	0xcc30


0xcacf:	mov	rax, rcx
0xcad2:	shr	rax, 1
0xcad5:	lea	rcx, [rax + rcx + 1]
0xcada:	mov	qword ptr [rsi], rcx
0xcadd:	imul	rcx, r9
0xcae1:	mov	rsi, rcx
0xcae4:	jmp	0xca40


0xca99:	jmp	0xca40


0xca68:	call	0x2a10


0xca19:	jmp	0xc9e0


0xc91c:	test	r11b, r11b
0xc91f:	jne	0xc945


0xc912:	add	r9, 1
0xc916:	cmp	r9, 0xa
0xc91a:	jne	0xc8f0


0xc906:	mov	rax, qword ptr [rax]
0xc909:	test	rax, rax
0xc90c:	mov	qword ptr [r8 + r9*8], rax
0xc910:	je	0xc91c


0xc84b:	call	0xc3c0


0xc841:	add	r9, 1
0xc845:	cmp	r9, 0xa
0xc849:	jne	0xc820


0xc835:	mov	rax, qword ptr [r11]
0xc838:	test	rax, rax
0xc83b:	mov	qword ptr [r8 + r9*8], rax
0xc83f:	je	0xc84b


0xc7f0:	add	r9, 1
0xc7f4:	cmp	qword ptr [r8 + r9*8], 0
0xc7f9:	jne	0xc7f0


0x2970:	jmp	qword ptr [rip + 0x225602]




0xc27a:	mov	qword ptr [rsp + 0x28], rsi
0xc27f:	mov	qword ptr [rsp + 0x30], rdx
0xc284:	mov	rcx, rsp
0xc287:	mov	rdx, r8
0xc28a:	mov	rsi, r9
0xc28d:	call	0xba20


0xbec9:	lea	rbx, [rip + 0x21c1c0]
0xbed0:	cmp	r12, rbx
0xbed3:	je	0xbee4


0xbeb2:	call	0x2a10


0xbcce:	mov	qword ptr [rdi + 0x28], rsi
0xbcd2:	mov	qword ptr [rdi + 0x30], rdx
0xbcd6:	ret	




0x2960:	jmp	qword ptr [rip + 0x22560a]


0x25d0:	jmp	qword ptr [rip + 0x2257d2]


0x9fe8:	mov	rsi, qword ptr [rsp + 0x88]
0x9ff0:	xor	rsi, qword ptr fs:[0x28]
0x9ff9:	jne	0xa61f


0x9ef4:	add	rsp, 8
0x9ef8:	pop	rbx
0x9ef9:	pop	rbp
0x9efa:	ret	


0x9eee:	mov	eax, dword ptr [rbx + 0x14]
0x9ef1:	mov	dword ptr [rbp + 0x14], eax
0x9ef4:	add	rsp, 8
0x9ef8:	pop	rbx
0x9ef9:	pop	rbp
0x9efa:	ret	




0x9e80:	sub	rcx, 2
0x9e84:	mov	byte ptr [rsi - 1], 0x2d
0x9e88:	mov	rax, rcx
0x9e8b:	ret	


0x9e50:	mov	rcx, rsi
0x9e53:	mov	rax, rdi
0x9e56:	lea	rsi, [rcx - 1]
0x9e5a:	imul	r9
0x9e5d:	mov	rax, rdi
0x9e60:	sar	rax, 0x3f
0x9e64:	sar	rdx, 2
0x9e68:	sub	rdx, rax
0x9e6b:	lea	rax, [rdx + rdx*4]
0x9e6f:	lea	eax, [r8 + rax*2]
0x9e73:	sub	eax, edi
0x9e75:	test	rdx, rdx
0x9e78:	mov	rdi, rdx
0x9e7b:	mov	byte ptr [rcx - 1], al
0x9e7e:	jne	0x9e50


0x9e46:	mov	rax, rcx
0x9e49:	ret	


0x9e20:	mov	rax, rdi
0x9e23:	sub	rcx, 1
0x9e27:	mul	rsi
0x9e2a:	shr	rdx, 3
0x9e2e:	lea	rax, [rdx + rdx*4]
0x9e32:	add	rax, rax
0x9e35:	sub	rdi, rax
0x9e38:	add	edi, 0x30
0x9e3b:	test	rdx, rdx
0x9e3e:	mov	byte ptr [rcx], dil
0x9e41:	mov	rdi, rdx
0x9e44:	jne	0x9e20


0x9d90:	mov	rax, qword ptr [rbx + 8]
0x9d94:	add	rsp, 0x18
0x9d98:	pop	rbx
0x9d99:	pop	rbp
0x9d9a:	ret	


0x9d67:	mov	rdi, qword ptr [rbp]
0x9d6b:	mov	qword ptr [rbx], rsi
0x9d6e:	mov	rsi, rbx
0x9d71:	call	0x8d60


0x9ae3:	add	rbx, 1
0x9ae7:	mov	ebp, 4
0x9aec:	lea	rdx, [rip + 0x17f25]
0x9af3:	lea	rsi, [rip + 0x21df26]
0x9afa:	mov	ecx, 4
0x9aff:	mov	rdi, rbx
0x9b02:	call	0x4710


0x9aec:	lea	rdx, [rip + 0x17f25]
0x9af3:	lea	rsi, [rip + 0x21df26]
0x9afa:	mov	ecx, 4
0x9aff:	mov	rdi, rbx
0x9b02:	call	0x4710




0x9012:	fadd	dword ptr [rip + 0x189b4]
0x9018:	test	edi, edi
0x901a:	jne	0x9048


0x9018:	test	edi, edi
0x901a:	jne	0x9048


0x9004:	mov	qword ptr [rsp - 0x20], rax
0x9009:	test	rax, rax
0x900c:	fild	qword ptr [rsp - 0x20]
0x9010:	jns	0x9018


0x8a38:	mov	rax, rsi
0x8a3b:	pxor	xmm0, xmm0
0x8a3f:	shr	rax, 1
0x8a42:	and	esi, 1
0x8a45:	or	rax, rsi
0x8a48:	cvtsi2ss	xmm0, rax
0x8a4d:	addss	xmm0, xmm0
0x8a51:	jmp	0x88c9


0x88c0:	pxor	xmm0, xmm0
0x88c4:	cvtsi2ss	xmm0, rsi
0x88c9:	divss	xmm0, dword ptr [r12 + 8]
0x88d0:	ucomiss	xmm0, dword ptr [rip + 0x190f5]
0x88d7:	jae	0x8a10


0x884c:	mov	rdi, qword ptr [r12 + 0x48]
0x8851:	test	rdi, rdi
0x8854:	je	0x8871


0x87cc:	cmp	rbp, rax
0x87cf:	jae	0x884c


0x8791:	add	r12, 0x10
0x8795:	cmp	qword ptr [rbp + 8], r12
0x8799:	ja	0x8730


0x8737:	mov	rbx, qword ptr [r12 + 8]
0x873c:	mov	rax, qword ptr [rbp + 0x40]
0x8740:	test	rbx, rbx
0x8743:	je	0x8775


0x8510:	mov	rax, rdx
0x8513:	add	rdi, 1
0x8517:	shl	rax, 5
0x851b:	sub	rax, rdx
0x851e:	xor	edx, edx
0x8520:	add	rax, rcx
0x8523:	movzx	ecx, byte ptr [rdi]
0x8526:	div	rsi
0x8529:	test	cl, cl
0x852b:	jne	0x8510


0x84e4:	add	rsp, 8
0x84e8:	mov	rax, rbp
0x84eb:	pop	rbx
0x84ec:	pop	rbp
0x84ed:	pop	r12
0x84ef:	pop	r13
0x84f1:	pop	r14
0x84f3:	pop	r15
0x84f5:	ret	


0x84da:	add	r14, 0x10
0x84de:	cmp	qword ptr [r15 + 8], r14
0x84e2:	ja	0x84b2


0x84ba:	mov	rbx, r14
0x84bd:	jmp	0x84c3


0x846d:	add	r9, 0x10
0x8471:	cmp	qword ptr [rdi + 8], r9
0x8475:	ja	0x842c


0x8434:	cmp	rdx, r8
0x8437:	jbe	0x8477


0x8363:	mov	rax, qword ptr [rdx]
0x8366:	test	rax, rax
0x8369:	jne	0x8386


0x8388:	sub	rsp, 8
0x838c:	call	0x2400


0x81fc:	add	rsi, 0x10
0x8200:	cmp	rsi, rdi
0x8203:	jb	0x81d0


0x81d6:	mov	rax, qword ptr [rsi + 8]
0x81da:	mov	edx, 1
0x81df:	test	rax, rax
0x81e2:	je	0x81f5


0x817d:	add	rcx, 0x10
0x8181:	cmp	rcx, r8
0x8184:	jb	0x8150


0x8156:	mov	rax, qword ptr [rcx + 8]
0x815a:	add	rsi, 1
0x815e:	add	rdx, 1
0x8162:	test	rax, rax
0x8165:	je	0x817d


0x8190:	cmp	qword ptr [rdi + 0x20], rdx
0x8194:	sete	al
0x8197:	ret	


0x818e:	ret	


0x812c:	add	rsi, 0x10
0x8130:	cmp	rsi, rdi
0x8133:	jb	0x8100


0x8106:	mov	rdx, qword ptr [rsi + 8]
0x810a:	mov	ecx, 1
0x810f:	test	rdx, rdx
0x8112:	je	0x8125


0x806a:	add	r12, 0x10
0x806e:	cmp	qword ptr [r13 + 8], r12
0x8072:	ja	0x7fa8


0x7fb5:	mov	rbx, qword ptr [r12 + 8]
0x7fba:	test	rbx, rbx
0x7fbd:	jne	0x7fdc


0x7f70:	mov	qword ptr [rdi], rcx
0x7f73:	xor	eax, eax
0x7f75:	ret	


0x7f22:	movss	xmm1, dword ptr [rip + 0x19a8e]
0x7f2a:	ucomiss	xmm1, xmm0
0x7f2d:	jbe	0x7f70


0x7d70:	test	rax, rax
0x7d73:	jne	0x7d7f


0x7d37:	test	rcx, rcx
0x7d3a:	je	0x7d75




0x5ef8:	movzx	eax, byte ptr [r10]
0x5efc:	xor	r15d, r15d
0x5eff:	test	al, al
0x5f01:	je	0x5f42


0x5f42:	mov	rdi, qword ptr [rsp + 0x4a8]
0x5f4a:	xor	rdi, qword ptr fs:[0x28]
0x5f53:	mov	rax, r15
0x5f56:	jne	0x7a78


0x5f03:	cmp	al, 0x25
0x5f05:	mov	rbx, r10
0x5f08:	mov	dword ptr [rsp + 0x30], r14d
0x5f0d:	mov	qword ptr [rsp + 0x28], r13
0x5f12:	movsxd	r10, ebp
0x5f15:	je	0x5fab


0x29e0:	jmp	qword ptr [rip + 0x2255ca]


0x5d86:	mov	rdx, qword ptr [rip + 0x222323]
0x5d8d:	lea	r9, [rsp + 8]
0x5d92:	lea	rdi, [rip - 0xe19]
0x5d99:	movsx	r8d, r8b
0x5d9d:	call	0x5af0


0x5b5a:	lea	rdx, [rax + 1]
0x5b5e:	mov	qword ptr [r15 + 8], rdx
0x5b62:	movzx	r12d, byte ptr [rax]
0x5b66:	cmp	qword ptr [rsp + 0x30], r14
0x5b6b:	jne	0x5b48


0x5b80:	mov	rdi, r15
0x5b83:	call	0x23d0


0x5890:	mov	edi, 0x28
0x5895:	call	0xcb90


0x5885:	mov	edx, dword ptr [rbx + 8]
0x5888:	test	edx, edx
0x588a:	je	0x5938


0x56eb:	mov	r12, qword ptr [r14 + 0x20]
0x56ef:	mov	rbx, qword ptr [r14 + 0x10]
0x56f3:	test	r12, r12
0x56f6:	je	0x56d0


0x54d4:	pop	rbx
0x54d5:	mov	rdi, r14
0x54d8:	pop	rbp
0x54d9:	pop	r12
0x54db:	pop	r13
0x54dd:	pop	r14
0x54df:	jmp	0x2a10


0x54e8:	mov	rdi, qword ptr [rbx + 0x10]
0x54ec:	call	0x87b0


0x5446:	cmp	eax, 1
0x5449:	jne	0x549a


0x539e:	cmp	al, 0x7d
0x53a0:	lea	rcx, [rdi + 1]
0x53a4:	ja	0x53c8


0x514d:	mov	rcx, qword ptr [rsp + 0x20]
0x5152:	movzx	edx, byte ptr [rcx]
0x5155:	mov	eax, edx
0x5157:	shr	al, 5
0x515a:	and	eax, 7
0x515d:	mov	eax, dword ptr [r12 + rax*4]
0x5161:	bt	eax, edx
0x5164:	jae	0x51a0


0x51b7:	call	0x2520


0x5050:	jmp	0x26d0


0x4ffe:	jmp	0x9f40


0x501a:	call	0x2530


0x5058:	mov	rdi, rsi
0x505b:	call	0xcc10




0x4de8:	movabs	rdi, 0x7fffffffffffffff
0x4df2:	mov	qword ptr [rsp + 8], rsi
0x4df7:	call	0x9cc0


0x4dd3:	add	rsp, 0x10
0x4dd7:	pop	rbx
0x4dd8:	jmp	0x9d50


0x4d38:	mov	rax, qword ptr [rbx + 8]
0x4d3c:	add	rsp, 0x10
0x4d40:	pop	rbx
0x4d41:	pop	rbp
0x4d42:	pop	r12
0x4d44:	ret	


0x4d0b:	mov	qword ptr [rbx], rdx
0x4d0e:	mov	rsi, rbx
0x4d11:	mov	rdi, r12
0x4d14:	call	0x8d60


0x4b60:	mov	dword ptr [rsi], 2
0x4b66:	ret	


0x4b4c:	add	rdx, 8
0x4b50:	mov	dword ptr [rsi], 1
0x4b56:	mov	qword ptr [rdi + 0x28], rdx
0x4b5a:	ret	


0x29c0:	jmp	qword ptr [rip + 0x2255da]


0x4a6f:	mov	rdx, r12
0x4a72:	mov	rsi, rbp
0x4a75:	mov	rdi, r13
0x4a78:	call	0x2680


0x4023:	call	0x3f70


0x4017:	mov	rdi, qword ptr [rip + 0x223fea]
0x401e:	call	0x2a18


0x3fe4:	pop	rbp
0x3fe5:	jmp	rax


0x3f93:	pop	rbp
0x3f94:	jmp	rax






0x1f8d3:	xor	esi, esi
0x1f8d5:	xor	eax, eax
0x1f8d7:	call	0x24a0


0x1f7a9:	xor	eax, eax
0x1f7ab:	mov	esi, 0x406
0x1f7b0:	call	0x24a0


0x1f800:	mov	edi, ebp
0x1f802:	xor	eax, eax
0x1f804:	call	0x24a0


0x1f7d5:	jg	0x1f830






0x1f3f8:	mov	rax, qword ptr [rdi + 8]
0x1f3fc:	cmp	qword ptr [rsi], rax
0x1f3ff:	jne	0x1f3cb


0x1f3cb:	lea	r8, [rdx + 1]
0x1f3cf:	xor	eax, eax
0x1f3d1:	test	rdx, r8
0x1f3d4:	mov	qword ptr [rdi + 0x10], r8
0x1f3d8:	je	0x1f410






0x1ef90:	lea	rbx, [rip + 0x304a]
0x1ef97:	mov	qword ptr [r13 + 0x30], rbx
0x1ef9b:	mov	eax, 1
0x1efa0:	add	rsp, 8
0x1efa4:	pop	rbx
0x1efa5:	pop	rbp
0x1efa6:	pop	r12
0x1efa8:	pop	r13
0x1efaa:	pop	r14
0x1efac:	pop	r15
0x1efae:	ret	






0x1ecb6:	sub	rsp, 8
0x1ecba:	push	rbx
0x1ecbb:	push	r12
0x1ecbd:	push	r13
0x1ecbf:	jmp	0x1ec7f


0x1ec76:	sub	rsp, 8
0x1ec7a:	push	rbx
0x1ec7b:	push	0
0x1ec7d:	push	0
0x1ec7f:	mov	rdi, rbp
0x1ec82:	mov	r9, rdx
0x1ec85:	mov	r8, rdx
0x1ec88:	call	0x190c0


0x1e96c:	test	rbp, rbp
0x1e96f:	mov	r14, rcx
0x1e972:	mov	rcx, r9
0x1e975:	je	0x1ea30


0x1e4e2:	test	rax, rax
0x1e4e5:	js	0x1e4f0


0x1e760:	mov	r8, rdx
0x1e763:	jmp	0x1e507




0x1d31b:	mov	r14, qword ptr [rsp]
0x1d31f:	lea	rax, [r14 + 1]
0x1d323:	mov	rdi, rax
0x1d326:	mov	qword ptr [rbx + 8], rax
0x1d32a:	mov	qword ptr [rsp + 0x28], rax
0x1d32f:	shl	rdi, 4
0x1d333:	call	0x2780


0x1d956:	mov	dword ptr [rsp + 0x4c], 0xc
0x1d95e:	jmp	0x1d5cc


0x2560:	jmp	qword ptr [rip + 0x22580a]


0x1b410:	lea	rsi, [r14 + 1]
0x1b414:	cmp	rsi, qword ptr [rbx + 0x58]
0x1b418:	jge	0x1b4c0


0x1b396:	mov	byte ptr [rbp + 8], 1
0x1b39a:	mov	qword ptr [rsp], rdx
0x1b39e:	call	0x29f0


0x1b4a0:	cmp	r12b, 0x5c
0x1b4a4:	je	0x1b410


0x1b307:	mov	rcx, qword ptr [rsi + 0x10]
0x1b30b:	mov	ecx, dword ptr [rcx + r14*4]
0x1b30f:	cmp	ecx, -1
0x1b312:	je	0x1b3f0


0x1b10d:	movzx	r13d, byte ptr [rbp]
0x1b112:	xor	r8d, r8d
0x1b115:	jmp	0x1b142


0x1b228:	mov	eax, 7
0x1b22d:	jmp	0x1b0a1


0x1b0e1:	cmp	al, 0x16
0x1b0e3:	jne	0x1b0ee


0x1a888:	mov	rdi, qword ptr [rsp + 0x98]
0x1a890:	xor	rdi, qword ptr fs:[0x28]
0x1a899:	jne	0x1b03b


0x1a918:	lea	rdi, [rsp + 0x5c]
0x1a91d:	mov	rdx, rbx
0x1a920:	mov	rsi, r12
0x1a923:	call	0x13cb0


0x1a95f:	mov	rax, qword ptr [rsp + 8]
0x1a964:	xor	ebx, ebx
0x1a966:	mov	rsi, qword ptr [rax + 0xc8]
0x1a96d:	mov	rdx, rsi
0x1a970:	cmp	rbx, rdx
0x1a973:	jge	0x1a9d3


0x19166:	mov	rax, qword ptr [rsp + 0x48]
0x1916b:	mov	qword ptr [rsp + 0x98], 0
0x19177:	mov	rax, qword ptr [rax + 0x30]
0x1917b:	cmp	rax, qword ptr [rsp + 0x270]
0x19183:	jae	0x191a4


0x19144:	movzx	edx, byte ptr [rsi + 0x38]
0x19148:	test	dl, 8
0x1914b:	je	0x195e0


0x18c0c:	add	rsp, 0x38
0x18c10:	pop	rbx
0x18c11:	pop	rbp
0x18c12:	pop	r12
0x18c14:	pop	r13
0x18c16:	pop	r14
0x18c18:	pop	r15
0x18c1a:	ret	


0x18d77:	call	0x2560


0x18d70:	xor	ebp, ebp
0x18d72:	jmp	0x18bf5


0x18d1d:	lea	r14, [rbp + 0x10]
0x18d21:	lea	r15, [rbp + 0x18]
0x18d25:	mov	rcx, r12
0x18d28:	mov	rdi, rbx
0x18d2b:	mov	rdx, r15
0x18d2e:	mov	rsi, r14
0x18d31:	call	0x14330


0x18be7:	cmp	qword ptr [r15 + 0x98], 0
0x18bef:	jne	0x18d18


0x18cc0:	movdqu	xmm0, xmmword ptr [rax]
0x18cc4:	mov	rdi, rbx
0x18cc7:	mov	edx, dword ptr [rsi + 0xa0]
0x18ccd:	lea	rsi, [r12 - 1]
0x18cd2:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x18cd7:	mov	rax, qword ptr [rax + 0x10]
0x18cdb:	mov	qword ptr [rsp + 0x20], rax
0x18ce0:	call	0x14480


0x18c39:	mov	r14, qword ptr [rdx + 0x50]
0x18c3d:	lea	rdi, [rsp + 0x10]
0x18c42:	mov	rdx, rax
0x18c45:	mov	qword ptr [rsp], rdi
0x18c49:	mov	rsi, r14
0x18c4c:	call	0x13890


0x1838f:	mov	ebp, dword ptr [rax + 8]
0x18392:	test	ebp, 0x3ff00
0x18398:	je	0x183e0


0x18350:	mov	rdi, qword ptr [rsp + 0x48]
0x18355:	add	qword ptr [rsp], 1
0x1835a:	mov	rax, qword ptr [rsp]
0x1835e:	cmp	rax, qword ptr [rdi]
0x18361:	jge	0x18610


0x178c9:	add	rax, 0x10
0x178cd:	mov	byte ptr [rbp - 0xc9], 0
0x178d4:	sub	rsp, rax
0x178d7:	lea	rax, [rsp + 0xf]
0x178dc:	and	rax, 0xfffffffffffffff0
0x178e0:	mov	qword ptr [rbp - 0xc0], rax
0x178e7:	mov	rdx, qword ptr [rbp - 0xb8]
0x178ee:	mov	rdi, qword ptr [rbp - 0xc0]
0x178f5:	mov	rsi, r13
0x178f8:	call	0x2710


0x17fb6:	mov	rdi, qword ptr [rbp - 0xb8]
0x17fbd:	call	0x2780


0x17634:	mov	rbx, qword ptr [rsp + 0xc8]
0x1763c:	xor	rbx, qword ptr fs:[0x28]
0x17645:	jne	0x177fc


0x17770:	mov	rax, qword ptr [rsp + 0x60]
0x17775:	lea	rsi, [r14*8]
0x1777d:	mov	rdi, qword ptr [rax + 0x10]
0x17781:	call	0x2830


0x16f9c:	cmp	al, 0xdf
0x16f9e:	movzx	edx, byte ptr [rdx + r8 + 1]
0x16fa4:	ja	0x1700e


0x16db4:	add	rsp, 0x178
0x16dbb:	pop	rbx
0x16dbc:	pop	rbp
0x16dbd:	pop	r12
0x16dbf:	pop	r13
0x16dc1:	pop	r14
0x16dc3:	pop	r15
0x16dc5:	ret	


0x16e42:	call	0x2560


0x169fe:	mov	rax, qword ptr [rsp + 0x28]
0x16a03:	mov	rdi, qword ptr [rsp]
0x16a07:	mov	rax, qword ptr [rax]
0x16a0a:	mov	r12, qword ptr [rax + rdi*8]
0x16a0e:	mov	rax, qword ptr [rsp + 8]
0x16a13:	mov	rcx, qword ptr [rax]
0x16a16:	mov	rax, r12
0x16a19:	shl	rax, 4
0x16a1d:	mov	qword ptr [rsp + 0x10], rax
0x16a22:	lea	rsi, [rcx + rax]
0x16a26:	movzx	eax, byte ptr [rsi + 8]
0x16a2a:	cmp	eax, 1
0x16a2d:	mov	edx, eax
0x16a2f:	jne	0x169c0


0x2690:	jmp	qword ptr [rip + 0x225772]


0x15ee1:	lea	r12, [rip + 0xc925]
0x15ee8:	mov	rcx, qword ptr [r13]
0x15eec:	cmp	qword ptr [r8], rcx
0x15eef:	mov	rax, qword ptr [rdx]
0x15ef2:	je	0x16009


0x15fd6:	lea	rdi, [rip + 0xc83c]
0x15fdd:	mov	ecx, 6
0x15fe2:	mov	rsi, r9
0x15fe5:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]




0x14fa0:	add	rbx, 1
0x14fa4:	cmp	r10, rbx
0x14fa7:	jle	0x15080


0x14fba:	mov	rdx, rax
0x14fbd:	shl	rdx, 4
0x14fc1:	add	rdx, qword ptr [r12]
0x14fc5:	test	byte ptr [rdx + 8], 8
0x14fc9:	je	0x14fa0


0x14908:	cmp	byte ptr [rbx + 0x8b], 0
0x1490f:	jne	0x14cc0


0x1486e:	cmp	byte ptr [rbx + 0x88], 0
0x14875:	mov	rdi, rbx
0x14878:	je	0x148f8


0x14920:	test	dl, dl
0x14922:	jne	0x14dcd


0x14803:	test	dl, dl
0x14805:	jne	0x14a18


0x148b0:	mov	rax, qword ptr [rbx]
0x148b3:	mov	qword ptr [rbx + 8], rax
0x148b7:	jmp	0x147e6


0x1461c:	pop	rbx
0x1461d:	ret	


0x145d1:	mov	rsi, rdx
0x145d4:	mov	edx, dword ptr [rdi + 0xa0]
0x145da:	shr	ebx, 8
0x145dd:	call	0x14480


0x14624:	xor	eax, eax
0x14626:	cmp	byte ptr [rsi], cl
0x14628:	je	0x145c0


0x14630:	xor	eax, eax
0x14632:	ret	


0x145a0:	cmp	cl, 0xa
0x145a3:	je	0x14668


0x1458e:	cmp	al, 7
0x14590:	jne	0x14630


0x144d2:	add	rsp, 8
0x144d6:	pop	rbx
0x144d7:	pop	rbp
0x144d8:	ret	


0x144f0:	mov	rax, qword ptr [rdi + 8]
0x144f4:	mov	rcx, qword ptr [rdi + 0x80]
0x144fb:	movzx	eax, byte ptr [rax + rsi]
0x144ff:	mov	rdx, rax
0x14502:	sar	rax, 6
0x14506:	mov	rcx, qword ptr [rcx + rax*8]
0x1450a:	mov	eax, 1
0x1450f:	bt	rcx, rdx
0x14513:	jb	0x144d2


0x144a1:	mov	rax, qword ptr [rdi + 0x10]
0x144a5:	jmp	0x144ba


0x14386:	mov	rax, qword ptr [rax]
0x14389:	cmp	rax, 0x3f
0x1438d:	jg	0x14360


0x14360:	add	rbx, 1
0x14364:	cmp	rbx, qword ptr [r12]
0x14368:	jge	0x14410


0x14000:	lea	rdx, [rsi + rcx]
0x14004:	mov	rax, rdx
0x14007:	shr	rax, 0x3f
0x1400b:	add	rax, rdx
0x1400e:	sar	rax, 1
0x14011:	lea	rdx, [rax + rax*4]
0x14015:	mov	r9, rax
0x14018:	cmp	r12, qword ptr [r8 + rdx*8 + 8]
0x1401d:	jg	0x14080


0x14078:	mov	r9, rcx
0x1407b:	mov	rcx, rdx
0x1407e:	nop	
0x14080:	lea	rsi, [r9 + 1]
0x14084:	mov	rdx, rcx
0x14087:	jmp	0x13fcd


0x14063:	add	rsp, 0x78
0x14067:	pop	rbx
0x14068:	pop	rbp
0x14069:	pop	r12
0x1406b:	pop	r13
0x1406d:	pop	r14
0x1406f:	pop	r15
0x14071:	ret	


0x14329:	call	0x2560


0x14047:	cmp	rsi, -1
0x1404b:	jne	0x14090


0x13f59:	mov	qword ptr [rbx + r15*8], rdx
0x13f5d:	add	r15, 1
0x13f61:	cmp	rbp, r15
0x13f64:	jne	0x13f4c


0x13f00:	test	rdx, rdx
0x13f03:	je	0x13f43


0x13d46:	mov	esi, 1
0x13d4b:	mov	edi, 0x70
0x13d50:	call	0x26b0


0x13d13:	mov	r11, qword ptr [rax + 0x10]
0x13d17:	xor	r9d, r9d
0x13d1a:	nop	word ptr [rax + rax]
0x13d20:	mov	rbx, qword ptr [r11 + r9*8]
0x13d24:	cmp	qword ptr [rbx], rbp
0x13d27:	jne	0x13d3d


0x13ce0:	add	rbp, qword ptr [rax]
0x13ce3:	add	rax, 8
0x13ce7:	cmp	rcx, rax
0x13cea:	jne	0x13ce0


0x13ab0:	mov	esi, 1
0x13ab5:	mov	edi, 0x70
0x13aba:	call	0x26b0


0x13a59:	mov	rbx, qword ptr [rax + 0x10]
0x13a5d:	xor	r10d, r10d
0x13a60:	mov	r9d, ecx
0x13a63:	jmp	0x13a71


0x13a20:	add	r12, qword ptr [rax]
0x13a23:	add	rax, 8
0x13a27:	cmp	r10, rax
0x13a2a:	jne	0x13a20


0x13970:	mov	rsi, rdx
0x13973:	pop	rbx
0x13974:	pop	rbp
0x13975:	pop	r12
0x13977:	pop	r13
0x13979:	pop	r14
0x1397b:	jmp	0x13800


0x13973:	pop	rbx
0x13974:	pop	rbp
0x13975:	pop	r12
0x13977:	pop	r13
0x13979:	pop	r14
0x1397b:	jmp	0x13800


0x138b7:	mov	r14, qword ptr [rdx + 8]
0x138bb:	test	r14, r14
0x138be:	jle	0x13973


0x137b6:	add	rsp, 0x18
0x137ba:	pop	rbx
0x137bb:	pop	rbp
0x137bc:	ret	


0x137fb:	call	0x2560


0x137c0:	lea	rdi, [rsp + 4]
0x137c5:	mov	rsi, rbp
0x137c8:	call	0x13520


0x1356a:	mov	rdx, qword ptr [rbx + 0xa0]
0x13571:	bt	rdx, rax
0x13575:	jae	0x1369d


0x1369d:	mov	rdi, qword ptr [rsp + 0x38]
0x136a2:	xor	rdi, qword ptr fs:[0x28]
0x136ab:	mov	rax, rbp
0x136ae:	jne	0x13752


0x133db:	add	rsp, 0x20
0x133df:	pop	rbx
0x133e0:	ret	


0x133d8:	mov	qword ptr [rcx], rax
0x133db:	add	rsp, 0x20
0x133df:	pop	rbx
0x133e0:	ret	


0x131fb:	lea	rsi, [rcx + r9]
0x131ff:	mov	r13, qword ptr [rbp + 0x10]
0x13203:	mov	rdx, qword ptr [r12 + 0x10]
0x13208:	sub	r9, 1
0x1320c:	sub	rcx, 1
0x13210:	add	rsi, r11
0x13213:	sub	r11, 1
0x13217:	mov	rax, qword ptr [r13 + r9*8]
0x1321c:	mov	r8, qword ptr [rdx + r11*8]
0x13220:	cmp	rax, r8
0x13223:	je	0x13236


0x13320:	add	r13, rax
0x13323:	lea	rsi, [r13*8]
0x1332b:	call	0x2830


0x12d38:	add	rdx, rsi
0x12d3b:	mov	rdi, qword ptr [rdi + 0x10]
0x12d3f:	lea	rbp, [rdx + rdx]
0x12d43:	shl	rdx, 4
0x12d47:	mov	rsi, rdx
0x12d4a:	call	0x2830


0x12bf4:	test	rax, rax
0x12bf7:	je	0x12d70


0x129b0:	lea	r11, [rbx + r10]
0x129b4:	mov	rax, r11
0x129b7:	shr	rax, 0x3f
0x129bb:	add	rax, r11
0x129be:	sar	rax, 1
0x129c1:	lea	r11, [rax + rax*4]
0x129c5:	mov	r14, rax
0x129c8:	cmp	qword ptr [r13 + r11*8 + 8], r8
0x129cd:	jl	0x12b50


0x12b40:	mov	r14, r10
0x12b43:	mov	r10, rbp
0x12b46:	nop	word ptr cs:[rax + rax]
0x12b50:	lea	rbx, [r14 + 1]
0x12b54:	mov	rbp, r10
0x12b57:	jmp	0x1297e


0x12a02:	mov	rax, r15
0x12a05:	xor	ebp, ebp
0x12a07:	cmp	rbp, rax
0x12a0a:	jge	0x12a64


0x12a0c:	lea	r11, [rbp + rax]
0x12a11:	mov	r10, r11
0x12a14:	shr	r10, 0x3f
0x12a18:	add	r10, r11
0x12a1b:	mov	r11, qword ptr [rdi + 0xd8]
0x12a22:	sar	r10, 1
0x12a25:	lea	r13, [r10 + r10*4]
0x12a29:	cmp	r12, qword ptr [r11 + r13*8 + 8]
0x12a2e:	jle	0x12a5f


0x12a64:	cmp	r15, rbp
0x12a67:	jle	0x12b90


0x1290d:	mov	rax, qword ptr [rsi + 0x10]
0x12911:	test	rax, rax
0x12914:	je	0x1291e


0x12905:	mov	rax, qword ptr [rsi + 0x20]
0x12909:	mov	qword ptr [rdx + 0x20], rax
0x1290d:	mov	rax, qword ptr [rsi + 0x10]
0x12911:	test	rax, rax
0x12914:	je	0x1291e


0x12879:	cmp	byte ptr [rax + 0x30], 0x11
0x1287d:	jne	0x1286c


0x12840:	mov	rcx, qword ptr [rax + rdx*8 + 8]
0x12845:	mov	qword ptr [rax + rdx*8], rcx
0x12849:	add	rdx, 1
0x1284d:	cmp	rdx, qword ptr [rdi]
0x12850:	jl	0x12840


0x126d8:	cmp	rsi, rcx
0x126db:	jb	0x126c8


0x126c2:	jmp	0x126f0


0x12710:	lea	rax, [rsi + 1]
0x12714:	ret	


0x12682:	mov	eax, 1
0x12687:	ret	


0x12660:	mov	rcx, qword ptr [rdi + 0x10]
0x12664:	mov	r8, qword ptr [rcx + rdx]
0x12668:	mov	rcx, qword ptr [rsi + 0x10]
0x1266c:	mov	rcx, qword ptr [rcx + rdx]
0x12670:	sub	rdx, 8
0x12674:	cmp	r8, rcx
0x12677:	jne	0x12690


0x1262b:	cmp	rdx, rcx
0x1262e:	mov	eax, edx
0x12630:	jne	0x12620


0x123f4:	mov	rax, rbx
0x123f7:	add	rbx, 1
0x123fb:	shl	rax, 4
0x123ff:	add	rdi, rax
0x12402:	call	0x11df0


0x121e0:	add	rsp, 0x18
0x121e4:	pop	rbx
0x121e5:	pop	rbp
0x121e6:	pop	r12
0x121e8:	pop	r13
0x121ea:	pop	r14
0x121ec:	pop	r15
0x121ee:	ret	


0x12240:	cmp	r9, qword ptr [rsp + 8]
0x12245:	jne	0x12250


0x1212b:	mov	rdx, qword ptr [r14 + 0x10]
0x1212f:	lea	rsi, [rdx - 1]
0x12133:	mov	rax, rsi
0x12136:	shl	rax, 4
0x1213a:	add	rax, r8
0x1213d:	test	byte ptr [rax + 0xa], 4
0x12141:	je	0x121f0


0x11efc:	add	rsp, 0x18
0x11f00:	pop	rbx
0x11f01:	pop	rbp
0x11f02:	pop	r12
0x11f04:	pop	r13
0x11f06:	pop	r14
0x11f08:	pop	r15
0x11f0a:	ret	


0x11d7f:	lea	esi, [rbp + 1]
0x11d82:	mov	rdi, rbx
0x11d85:	call	0x11be0


0x11d90:	mov	rax, qword ptr [rbx + 0xb8]
0x11d97:	mov	rdx, rbp
0x11d9a:	xor	esi, esi
0x11d9c:	sub	rdx, r12
0x11d9f:	shl	rdx, 3
0x11da3:	lea	rdi, [rax + r12*8 + 8]
0x11da8:	call	0x2620


0x11d64:	xor	eax, eax
0x11d66:	pop	rbx
0x11d67:	pop	rbp
0x11d68:	pop	r12
0x11d6a:	ret	


0x1179d:	cmp	r15, rbx
0x117a0:	jge	0x11938


0x11684:	mov	rbp, qword ptr [r14 + 0x28]
0x11688:	add	rbp, r13
0x1168b:	add	rbp, qword ptr [r14]
0x1168e:	mov	qword ptr [rsp + 0x18], rbp
0x11693:	mov	rcx, qword ptr [rsp + 8]
0x11698:	mov	rdx, qword ptr [rsp + 0x10]
0x1169d:	mov	rsi, qword ptr [rsp + 0x18]
0x116a2:	mov	rdi, qword ptr [rsp + 0x20]
0x116a7:	call	0x101e0


0x11989:	mov	eax, dword ptr [r14 + 0x90]
0x11990:	test	eax, eax
0x11992:	jle	0x11bb0


0x11636:	add	rsp, 0xa8
0x1163d:	pop	rbx
0x1163e:	pop	rbp
0x1163f:	pop	r12
0x11641:	pop	r13
0x11643:	pop	r14
0x11645:	pop	r15
0x11647:	ret	


0x11bba:	call	0x2560


0x11541:	jmp	0x11459


0x11561:	mov	rcx, qword ptr [rbx]
0x11564:	add	rcx, rbp
0x11567:	add	rcx, rax
0x1156a:	add	rcx, qword ptr [rbx + 0x28]
0x1156e:	movzx	ecx, byte ptr [rcx]
0x11571:	movzx	ecx, byte ptr [rdi + rcx]
0x11575:	mov	rdi, qword ptr [rbx + 8]
0x11579:	add	rdi, rbp
0x1157c:	mov	byte ptr [rdi + rax], cl
0x1157f:	mov	byte ptr [rsi + rax], cl
0x11582:	lea	ecx, [rax + 1]
0x11585:	cmp	ecx, dword ptr [rbx + 0x90]
0x1158b:	jl	0x11550




0x11260:	lea	rdx, [rsi + rsi]
0x11264:	shl	rsi, 4
0x11268:	mov	qword ptr [rdi], rdx
0x1126b:	mov	rdi, rax
0x1126e:	call	0x2830


0x111d9:	cmp	qword ptr [rax], rbp
0x111dc:	lea	rdx, [rsi*8]
0x111e4:	jle	0x11220


0x10fa5:	mov	rsi, rbx
0x10fa8:	mov	rdi, rbp
0x10fab:	call	r12


0x10f65:	mov	r8, r9
0x10f68:	jmp	0x10ce0


0x10f42:	xor	eax, eax
0x10f44:	cmp	r10, r8
0x10f47:	je	0x10f60


0x10da1:	mov	ecx, dword ptr [rsp + 0xc]
0x10da5:	test	ecx, ecx
0x10da7:	je	0x10d76


0x10d68:	cmp	dl, 9
0x10d6b:	je	0x10ec0


0x10c30:	and	edx, 1
0x10c33:	je	0x10c3f


0x10bc8:	cmp	cl, 0x5b
0x10bcb:	je	0x10c00


0x10bb4:	mov	r9, qword ptr [rsi + 0x10]
0x10bb8:	cmp	dword ptr [r9 + rax*4], -1
0x10bbd:	je	0x10c3f


0xfb60:	mov	rsi, rbp
0xfb63:	xor	edx, edx
0xfb65:	call	0xde40


0xf91a:	cmp	ax, 2
0xf91e:	movzx	ecx, word ptr [rbp + 0x70]
0xf922:	je	0xfa10


0xf880:	mov	rbx, rdi
0xf883:	mov	rdi, rbx
0xf886:	call	0x2a10


0xf788:	mov	rbx, qword ptr [rdi + 8]
0xf78c:	call	0x2a10


0xf770:	call	0x2a10


0xf3d8:	mov	r13, rdi
0xf3db:	mov	esi, 1
0xf3e0:	mov	edi, 0x80
0xf3e5:	mov	r14, rdx
0xf3e8:	call	0x26b0


0xee5c:	mov	edi, dword ptr [r15 + 0x2c]
0xee60:	lea	rcx, [rsp + 0x64]
0xee65:	call	0x1f670


0xee60:	lea	rcx, [rsp + 0x64]
0xee65:	call	0x1f670


0xef48:	xor	edx, edx
0xef4a:	cmp	qword ptr [rbp + 0x58], 0
0xef4f:	setne	dl
0xef52:	shl	edx, 0x11
0xef55:	jmp	0xee47




0xe955:	add	rsp, 0x28
0xe959:	ret	


0xe9ae:	call	0x2560


0xe92f:	mov	rcx, qword ptr [rsi]
0xe932:	cmp	qword ptr [rcx + 0x10], 0
0xe937:	je	0xe9b3


0xe840:	mov	byte ptr [rsp + 0xf], 0
0xe845:	jmp	0xe654


0xe709:	test	bl, 2
0xe70c:	mov	r15d, r12d
0xe70f:	mov	byte ptr [rsp + 0xf], 0
0xe714:	jne	0xe680


0xe6d3:	xor	ebx, ebx
0xe6d5:	mov	rcx, qword ptr [rsp + 0xa8]
0xe6dd:	xor	rcx, qword ptr fs:[0x28]
0xe6e6:	mov	eax, ebx
0xe6e8:	jne	0xe825


0xe6ca:	test	r12d, r12d
0xe6cd:	jns	0xe780


0xe634:	test	r9d, r9d
0xe637:	jne	0xe6c5


0x2820:	jmp	qword ptr [rip + 0x2256aa]


0xe401:	test	esi, esi
0xe403:	jns	0xe430


0xe405:	mov	dword ptr [rbx + 0x2c], ebp
0xe408:	add	rsp, 8
0xe40c:	pop	rbx
0xe40d:	pop	rbp
0xe40e:	ret	


0x2650:	jmp	qword ptr [rip + 0x225792]


0x2470:	jmp	qword ptr [rip + 0x225882]


0xe070:	add	rdx, 8
0xe074:	mov	qword ptr [rdx - 8], rbx
0xe078:	mov	rbx, qword ptr [rbx + 0x10]
0xe07c:	test	rbx, rbx
0xe07f:	jne	0xe070


0x2740:	jmp	qword ptr [rip + 0x22571a]


0xdec8:	mov	rdx, rsi
0xdecb:	mov	esi, dword ptr [r12 + 0x2c]
0xded0:	mov	r8d, 0x100
0xded6:	mov	rcx, rbx
0xded9:	mov	edi, 1
0xdede:	call	0x25b0


0xdd81:	push	r12
0xdd83:	push	rbp
0xdd84:	mov	r12d, edx
0xdd87:	push	rbx
0xdd88:	mov	rbp, rsi
0xdd8b:	mov	rbx, rdi
0xdd8e:	call	0x2730








0xd846:	call	0x2400


0xd862:	lea	rbx, [rip + 0x14d20]
0xd869:	mov	byte ptr [rsp + 6], dl
0xd86d:	mov	byte ptr [rsp + 7], 0
0xd872:	lea	r13, [rsp + 6]
0xd877:	sub	rbx, rax
0xd87a:	jmp	0xd823


0xd814:	shl	rax, 5
0xd818:	lea	rbx, [rip + 0x14d6a]
0xd81f:	mov	r13, qword ptr [rcx + rax]
0xd823:	mov	edx, 5
0xd828:	xor	edi, edi
0xd82a:	call	0x2510


0xcb06:	test	rdx, rdx
0xcb09:	je	0xcada


0xc921:	call	0xc3c0


0xc945:	mov	dword ptr [rsp + 8], r10d
0xc94a:	jmp	0xc921


0xc8f0:	cmp	r10d, 0x2f
0xc8f4:	ja	0xc94c


0xc820:	mov	eax, dword ptr [r10]
0xc823:	cmp	eax, 0x2f
0xc826:	ja	0xc86a




0xbee4:	pop	rbx
0xbee5:	mov	dword ptr [rip + 0x21c189], 1
0xbeef:	pop	rbp
0xbef0:	pop	r12
0xbef2:	ret	


0xbed5:	mov	rdi, r12
0xbed8:	call	0x2a10






0x9fff:	add	rsp, 0x98
0xa006:	pop	rbx
0xa007:	pop	rbp
0xa008:	pop	r12
0xa00a:	pop	r13
0xa00c:	pop	r14
0xa00e:	pop	r15
0xa010:	ret	


0xa61f:	call	0x2560


0x901c:	fxch	st(1)
0x901e:	fucomip	st(1)
0x9020:	jp	0x9028


0x9048:	fstp	st(1)
0x904a:	ret	


0x88c9:	divss	xmm0, dword ptr [r12 + 8]
0x88d0:	ucomiss	xmm0, dword ptr [rip + 0x190f5]
0x88d7:	jae	0x8a10


0x88dd:	ucomiss	xmm0, dword ptr [rip + 0x190ec]
0x88e4:	jb	0x8a60


0x8a10:	xor	ebx, ebx
0x8a12:	mov	rcx, qword ptr [rsp + 0x58]
0x8a17:	xor	rcx, qword ptr fs:[0x28]
0x8a20:	mov	eax, ebx
0x8a22:	jne	0x8aba


0x8841:	add	rbp, 0x10
0x8845:	cmp	qword ptr [r12 + 8], rbp
0x884a:	ja	0x8820


0x8871:	mov	rdi, qword ptr [r12]
0x8875:	call	0x2a10


0x8775:	test	rax, rax
0x8778:	je	0x8780


0x84b2:	mov	rdi, qword ptr [r14]
0x84b5:	test	rdi, rdi
0x84b8:	je	0x84da


0x84c3:	mov	rsi, r13
0x84c6:	call	r12


0x8477:	mov	rax, r8
0x847a:	ret	


0x842c:	mov	rcx, qword ptr [r9]
0x842f:	test	rcx, rcx
0x8432:	je	0x846d


0x8439:	mov	qword ptr [rsi + r8*8], rcx
0x843d:	mov	rcx, qword ptr [r9 + 8]
0x8441:	lea	rax, [r8 + 1]
0x8445:	test	rcx, rcx
0x8448:	je	0x846a


0x8386:	ret	


0x81d0:	cmp	qword ptr [rsi], 0
0x81d4:	je	0x81fc


0x81f5:	cmp	rbx, rdx
0x81f8:	cmovb	rbx, rdx
0x81fc:	add	rsi, 0x10
0x8200:	cmp	rsi, rdi
0x8203:	jb	0x81d0


0x8100:	cmp	qword ptr [rsi], 0
0x8104:	je	0x812c


0x8135:	ret	


0x8125:	cmp	rax, rcx
0x8128:	cmovb	rax, rcx
0x812c:	add	rsi, 0x10
0x8130:	cmp	rsi, rdi
0x8133:	jb	0x8100


0x7fa8:	mov	r15, qword ptr [r12]
0x7fac:	test	r15, r15
0x7faf:	je	0x806a


0x7fbf:	jmp	0x801b


0x7fdc:	mov	r15, qword ptr [rbx]
0x7fdf:	mov	rdi, rbp
0x7fe2:	mov	rsi, r15
0x7fe5:	call	0x7db0


0x7f2f:	movss	xmm1, dword ptr [rdx + 0xc]
0x7f34:	ucomiss	xmm1, dword ptr [rip + 0x19a81]
0x7f3b:	jbe	0x7f70


0x7d75:	add	rdi, 2
0x7d79:	cmp	rdi, -1
0x7d7d:	jne	0x7d18


0x7d3c:	mov	r8d, 0x10
0x7d42:	mov	esi, 9
0x7d47:	mov	ecx, 3
0x7d4c:	jmp	0x7d59


0x5f5c:	add	rsp, 0x4b8
0x5f63:	pop	rbx
0x5f64:	pop	rbp
0x5f65:	pop	r12
0x5f67:	pop	r13
0x5f69:	pop	r14
0x5f6b:	pop	r15
0x5f6d:	ret	


0x7a78:	call	0x2560


0x5fab:	movzx	eax, byte ptr [rsp + 0x23]
0x5fb0:	xor	r14d, r14d
0x5fb3:	mov	dword ptr [rsp + 8], 0
0x5fbb:	mov	byte ptr [rsp + 0x34], al
0x5fbf:	mov	eax, 1
0x5fc4:	add	rbx, 1
0x5fc8:	movsx	r11d, byte ptr [rbx]
0x5fcc:	lea	ecx, [r11 - 0x23]
0x5fd0:	mov	r13d, r11d
0x5fd3:	mov	edi, r11d
0x5fd6:	cmp	cl, 0x3c
0x5fd9:	ja	0x600f


0x5f1b:	test	r10d, r10d
0x5f1e:	mov	r14d, 0
0x5f24:	mov	eax, 1
0x5f29:	cmovns	r14, r10
0x5f2d:	test	r14, r14
0x5f30:	cmove	r14, rax
0x5f34:	mov	rax, r15
0x5f37:	not	rax
0x5f3a:	cmp	rax, r14
0x5f3d:	ja	0x5f70




0x5b6d:	mov	rsi, qword ptr [rsp]
0x5b71:	mov	rdi, rbx
0x5b74:	call	0xcb40


0x5b48:	mov	byte ptr [rbx + r14], r12b
0x5b4c:	add	r14, 1
0x5b50:	mov	rax, qword ptr [r15 + 8]
0x5b54:	cmp	rax, qword ptr [r15 + 0x10]
0x5b58:	jae	0x5b80


0x23d0:	jmp	qword ptr [rip + 0x2258d2]


0x5938:	mov	eax, dword ptr [rbx + 0xc]
0x593b:	xor	eax, ebp
0x593d:	test	eax, 0x60000018
0x5942:	je	0x58ef


0x5750:	mov	rdi, qword ptr [rsp + 8]
0x5755:	call	0x2530


0x5619:	mov	r15d, dword ptr [r14 + 0xc]
0x561d:	mov	r12, qword ptr [r14 + 0x10]
0x5621:	mov	rbx, qword ptr [rsp + 8]
0x5626:	mov	r13d, r15d
0x5629:	and	r13d, 8
0x562d:	mov	rsi, rbx
0x5630:	mov	rdi, rbp
0x5633:	call	0x2450


0x56d0:	mov	rax, qword ptr [r14]
0x56d3:	test	rax, rax
0x56d6:	je	0x576b


0x56f8:	add	rbx, 8
0x56fc:	xor	r13d, r13d
0x56ff:	jmp	0x572a


0x544b:	cmp	qword ptr [rbx + 0x20], 0
0x5450:	mov	rdi, qword ptr [rbx + 0x10]
0x5454:	je	0x5495


0x549a:	mov	rdi, rbx
0x549d:	mov	rbx, r13
0x54a0:	call	0x2a10


0x5166:	mov	qword ptr [rsp + 0x28], 1
0x516f:	movsx	r13d, byte ptr [rcx]
0x5173:	mov	byte ptr [rsp + 0x30], 1
0x5178:	mov	byte ptr [rsp + 0x1c], 1
0x517d:	mov	dword ptr [rsp + 0x34], r13d
0x5182:	test	r13d, r13d
0x5185:	je	0x5250


0x51a0:	mov	rdi, qword ptr [rsp + 8]
0x51a5:	call	0x2990




0x2680:	jmp	qword ptr [rip + 0x22577a]


0x2a18:	jmp	qword ptr [rip + 0x2255da]


0x1f7d7:	cmp	esi, 4
0x1f7da:	je	0x1f8b0


0x1f830:	cmp	esi, 0x407
0x1f836:	jg	0x1f880


0x1f401:	mov	eax, 1
0x1f406:	ret	


0x1f410:	test	r8, r8
0x1f413:	je	0x1f401


0x1f3da:	ret	


0x1ec7f:	mov	rdi, rbp
0x1ec82:	mov	r9, rdx
0x1ec85:	mov	r8, rdx
0x1ec88:	call	0x190c0


0x1ea30:	mov	r14, rsi
0x1ea33:	xor	r13d, r13d
0x1ea36:	jmp	0x1e988


0x1e97b:	xor	r13d, r13d
0x1e97e:	test	rbx, rbx
0x1e981:	mov	qword ptr [rsp + 8], rsi
0x1e986:	jne	0x1e9d0


0x1e4f0:	test	r8, r8
0x1e4f3:	js	0x1e7d8


0x1e4e7:	cmp	rcx, r8
0x1e4ea:	jg	0x1e760


0x1e507:	movzx	eax, byte ptr [r15 + 0x38]
0x1e50c:	mov	r13d, eax
0x1e50f:	shr	r13b, 5
0x1e513:	mov	edi, r13d
0x1e516:	and	edi, 3
0x1e519:	cmp	r8, rbx
0x1e51c:	mov	dword ptr [rsp + 0x2c], edi
0x1e520:	jle	0x1e531


0x1d5cc:	mov	rdi, rbx
0x1d5cf:	call	0x123d0




0x1b41e:	cmp	byte ptr [rbx + 0x8b], 0
0x1b425:	jne	0x1b8b0


0x1b4c0:	mov	byte ptr [rbp + 8], 0x24
0x1b4c4:	mov	eax, 1
0x1b4c9:	jmp	0x1b364


0x29f0:	jmp	qword ptr [rip + 0x2255c2]


0x1b4aa:	mov	rax, qword ptr [rbx + 0x10]
0x1b4ae:	mov	byte ptr [rbp + 8], 1
0x1b4b2:	mov	ecx, dword ptr [rax + r14*4]
0x1b4b6:	jmp	0x1b326


0x1b3f0:	or	r13d, 0x20
0x1b3f4:	mov	byte ptr [rdi + 8], 1
0x1b3f8:	mov	eax, 1
0x1b3fd:	mov	byte ptr [rdi + 0xa], r13b
0x1b401:	jmp	0x1b364


0x1b318:	cmp	r12b, 0x5c
0x1b31c:	je	0x1b410


0x1b142:	cmp	al, 0x1e
0x1b144:	movsxd	r14, r8d
0x1b147:	je	0x1b1b0


0x1b0a1:	mov	rcx, qword ptr [rsp + 0x18]
0x1b0a6:	xor	rcx, qword ptr fs:[0x28]
0x1b0af:	jne	0x1b298


0x1b0e5:	test	r9b, r9b
0x1b0e8:	je	0x1b232


0x1b0ee:	movzx	eax, byte ptr [rbp]
0x1b0f2:	mov	dword ptr [rbx], 0
0x1b0f8:	mov	byte ptr [rbx + 8], al
0x1b0fb:	xor	eax, eax
0x1b0fd:	jmp	0x1b0a1


0x1a89f:	add	rsp, 0xa8
0x1a8a6:	pop	rbx
0x1a8a7:	pop	rbp
0x1a8a8:	pop	r12
0x1a8aa:	pop	r13
0x1a8ac:	pop	r14
0x1a8ae:	pop	r15
0x1a8b0:	ret	


0x1b03b:	call	0x2560


0x1a975:	lea	rax, [rbx + rdx]
0x1a979:	mov	rcx, rax
0x1a97c:	shr	rcx, 0x3f
0x1a980:	add	rcx, rax
0x1a983:	mov	rax, qword ptr [rsp + 8]
0x1a988:	sar	rcx, 1
0x1a98b:	mov	rdi, qword ptr [rax + 0xd8]
0x1a992:	lea	rax, [rcx + rcx*4]
0x1a996:	cmp	rbp, qword ptr [rdi + rax*8 + 8]
0x1a99b:	jle	0x1a9ce


0x1a9d3:	cmp	rsi, rbx
0x1a9d6:	jle	0x1aad0


0x19185:	mov	rcx, qword ptr [rsp + 0x270]
0x1918d:	lea	rdx, [rcx - 1]
0x19191:	sub	rdx, rax
0x19194:	sub	qword ptr [rsp + 0x270], rdx
0x1919c:	mov	qword ptr [rsp + 0x98], rdx
0x191a4:	mov	rsi, qword ptr [rsp + 0x48]
0x191a9:	cmp	qword ptr [rsi + 0x10], 0
0x191ae:	je	0x1a040


0x191a4:	mov	rsi, qword ptr [rsp + 0x48]
0x191a9:	cmp	qword ptr [rsi + 0x10], 0
0x191ae:	je	0x1a040


0x195e0:	mov	qword ptr [rsp + 0x68], 0
0x195e9:	jmp	0x19166


0x19151:	cmp	rbp, r8
0x19154:	je	0x195e0


0x183e0:	mov	rdi, qword ptr [r14 + 0xc8]
0x183e7:	mov	rax, qword ptr [r14 + 0x98]
0x183ee:	xor	ecx, ecx
0x183f0:	mov	r10, qword ptr [r14 + 8]
0x183f4:	mov	r9, qword ptr [rsp + 8]
0x183f9:	mov	qword ptr [rsp + 0x70], rdi
0x183fe:	mov	qword ptr [rsp + 0x50], rax
0x18403:	cmp	rcx, rdi
0x18406:	jge	0x1845b


0x1839a:	mov	edx, dword ptr [r14 + 0xa0]
0x183a1:	mov	rsi, qword ptr [rsp + 8]
0x183a6:	mov	rdi, r14
0x183a9:	call	0x14480


0x1764b:	add	rsp, 0xd8
0x17652:	pop	rbx
0x17653:	pop	rbp
0x17654:	pop	r12
0x17656:	pop	r13
0x17658:	pop	r14
0x1765a:	pop	r15
0x1765c:	ret	


0x177fc:	call	0x2560


0x16fa6:	add	edx, -0x80
0x16fa9:	mov	ebp, 2
0x16fae:	cmp	dl, 0x3f
0x16fb1:	ja	0x16f40


0x1700e:	cmp	al, 0xef
0x17010:	ja	0x17058


0x16a31:	movzx	r13d, byte ptr [rsi]
0x16a35:	test	ebx, ebx
0x16a37:	mov	byte ptr [rbp + r13], 1
0x16a3d:	je	0x16a50


0x169c0:	cmp	eax, 3
0x169c3:	je	0x16cb6




0x15fe5:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x15fe7:	mov	rcx, qword ptr [r13]
0x15feb:	seta	al
0x15fee:	sbb	al, 0
0x15ff0:	test	al, al
0x15ff2:	lea	rax, [rip + 0xc814]
0x15ff9:	cmove	r12, rax
0x15ffd:	cmp	qword ptr [r8], rcx
0x16000:	mov	rax, qword ptr [rdx]
0x16003:	jne	0x15ef8


0x15080:	xor	r9d, r9d
0x15083:	test	r10, r10
0x15086:	lea	r11, [rsp + 0x30]
0x1508b:	jle	0x150dc


0x14fcb:	lea	r9, [rax + rax*2]
0x14fcf:	mov	rcx, qword ptr [r12 + 0x28]
0x14fd4:	lea	r11, [rbp + 0x10]
0x14fd8:	mov	rdi, r10
0x14fdb:	shl	r9, 3
0x14fdf:	mov	rsi, r11
0x14fe2:	add	rcx, r9
0x14fe5:	mov	r15, qword ptr [rcx + 0x10]
0x14fe9:	mov	qword ptr [rsp + 8], rcx
0x14fee:	mov	r8, qword ptr [r15]
0x14ff1:	mov	rdx, r8
0x14ff4:	mov	qword ptr [rsp], r8
0x14ff8:	call	0x126a0


0x14915:	mov	qword ptr [rbx + 0x30], rax
0x14919:	jmp	0x14883


0x14cc0:	cmp	byte ptr [rbx + 0x88], 0
0x14cc7:	jne	0x14dc0


0x148f8:	call	0x113f0


0x1487a:	call	0x115c0


0x14928:	movsxd	rdx, dword ptr [rbx + 0x90]
0x1492f:	mov	qword ptr [rbx + 0x30], 0
0x14937:	mov	r11, qword ptr [rbx + 0x28]
0x1493b:	cmp	edx, 1
0x1493e:	jle	0x14d28


0x14dcd:	mov	rdx, qword ptr [rbx + 0x50]
0x14dd1:	mov	byte ptr [rbx + 0x8c], 0
0x14dd8:	add	rdx, rbp
0x14ddb:	sub	rdx, r15
0x14dde:	mov	qword ptr [rbx + 0x58], rdx
0x14de2:	mov	rdx, qword ptr [rbx + 0x60]
0x14de6:	add	rdx, rbp
0x14de9:	sub	rdx, r15
0x14dec:	mov	qword ptr [rbx + 0x68], rdx
0x14df0:	jmp	0x14928


0x1480b:	lea	rsi, [rbp - 1]
0x1480f:	mov	edx, r10d
0x14812:	mov	rdi, rbx
0x14815:	mov	qword ptr [rsp], r8
0x14819:	call	0x14480


0x14a18:	mov	r14, qword ptr [rbx + 0x18]
0x14a1c:	mov	rcx, r8
0x14a1f:	xor	esi, esi
0x14a21:	jmp	0x14a33


0x1462a:	ret	


0x14668:	mov	rcx, qword ptr [rdi + 0x98]
0x1466f:	xor	eax, eax
0x14671:	test	byte ptr [rcx + 0xd8], 0x40
0x14678:	jne	0x145c0


0x145a9:	test	cl, cl
0x145ab:	jne	0x145c0


0x14596:	xor	eax, eax
0x14598:	test	cl, cl
0x1459a:	js	0x1462a


0x14515:	xor	eax, eax
0x14517:	cmp	dl, 0xa
0x1451a:	jne	0x144d2


0x144ba:	mov	ebx, dword ptr [rax + rsi*4]
0x144bd:	cmp	ebx, -1
0x144c0:	je	0x144b0


0x1438f:	mov	rsi, qword ptr [r13 + 0xa0]
0x14396:	bt	rsi, rax
0x1439a:	jae	0x14360


0x1401f:	mov	rcx, rax
0x14022:	cmp	rsi, rcx
0x14025:	jl	0x14000


0x14080:	lea	rsi, [r9 + 1]
0x14084:	mov	rdx, rcx
0x14087:	jmp	0x13fcd


0x13fcd:	cmp	rsi, rdx
0x13fd0:	jge	0x14027


0x14090:	lea	rax, [rbp + 0x10]
0x14094:	mov	r13, qword ptr [rbx + 0x98]
0x1409b:	mov	qword ptr [rsp], rax
0x1409f:	lea	rax, [rsp + 0x4c]
0x140a4:	mov	qword ptr [rsp + 0x38], rax
0x140a9:	lea	rax, [rsp + 0x50]
0x140ae:	mov	qword ptr [rsp + 0x10], rax
0x140b3:	mov	rax, qword ptr [rsp + 0x30]
0x140b8:	lea	r15, [rcx + rax]
0x140bc:	jmp	0x14198


0x13f43:	add	r15, 1
0x13f47:	cmp	rbp, r15
0x13f4a:	je	0x13f66


0x13f05:	add	rdx, 8
0x13f09:	add	rsi, 8
0x13f0d:	mov	rdi, r13
0x13f10:	call	0x13890


0x13d29:	lea	rdi, [rbx + 8]
0x13d2d:	mov	rsi, r14
0x13d30:	call	0x12640


0x13d3d:	add	r9, 1
0x13d41:	cmp	r10, r9
0x13d44:	jne	0x13d20


0x13a71:	mov	r14, qword ptr [rbx + r10*8]
0x13a75:	cmp	qword ptr [r14], r12
0x13a78:	jne	0x13a68


0x138c4:	mov	r12, rdi
0x138c7:	lea	rdi, [r13 + r14]
0x138cc:	mov	rbx, rdx
0x138cf:	mov	rbp, rsi
0x138d2:	mov	qword ptr [r12], rdi
0x138d6:	shl	rdi, 3
0x138da:	call	0x2780


0x1357b:	lea	rax, [rbx + 0x70]
0x1357f:	lea	r14, [rsp + 0x20]
0x13584:	sub	rbx, -0x80
0x13588:	xor	ecx, ecx
0x1358a:	xor	edx, edx
0x1358c:	mov	rsi, rbx
0x1358f:	mov	r15, rax
0x13592:	mov	r8, r14
0x13595:	mov	rdi, rax
0x13598:	mov	byte ptr [rsp + 0x28], 8
0x1359d:	mov	qword ptr [rsp + 8], rax
0x135a2:	call	0x13360


0x136b4:	add	rsp, 0x48
0x136b8:	pop	rbx
0x136b9:	pop	rbp
0x136ba:	pop	r12
0x136bc:	pop	r13
0x136be:	pop	r14
0x136c0:	pop	r15
0x136c2:	ret	


0x13752:	call	0x2560


0x13236:	test	rcx, rcx
0x13239:	jns	0x1324a


0x13225:	jge	0x13280


0x12d70:	mov	qword ptr [rbx + 8], rdx
0x12d74:	mov	rax, qword ptr [r12 + 8]
0x12d79:	mov	rdi, qword ptr [rbx + 0x10]
0x12d7d:	mov	rsi, qword ptr [r12 + 0x10]
0x12d82:	lea	rdx, [rax*8]
0x12d8a:	call	0x2710


0x12bfd:	lea	rbp, [rax + rdx*2]
0x12c01:	sub	rdx, 1
0x12c05:	sub	rax, 1
0x12c09:	mov	rdi, rdx
0x12c0c:	not	rdi
0x12c0f:	test	rdi, rdi
0x12c12:	jns	0x12c50


0x12b50:	lea	rbx, [r14 + 1]
0x12b54:	mov	rbp, r10
0x12b57:	jmp	0x1297e


0x129d3:	mov	r10, rax
0x129d6:	cmp	rbx, r10
0x129d9:	jl	0x129b0


0x1297e:	cmp	rbx, rbp
0x12981:	jge	0x129db


0x12a5f:	cmp	rbp, r10
0x12a62:	jl	0x12a38


0x12a30:	jmp	0x12b60


0x12b90:	mov	rbp, -1
0x12b97:	jmp	0x12a8c


0x12a6d:	mov	r10, qword ptr [rdi + 0xd8]
0x12a74:	lea	rax, [rbp + rbp*4]
0x12a79:	lea	rax, [r10 + rax*8]
0x12a7d:	cmp	r12, qword ptr [rax + 8]
0x12a81:	mov	rax, -1
0x12a88:	cmovne	rbp, rax
0x12a8c:	cmp	qword ptr [rsi], 0
0x12a90:	jle	0x12bb2


0x1291e:	xor	eax, eax
0x12920:	ret	


0x12916:	mov	rdx, qword ptr [rsi + 0x20]
0x1291a:	mov	qword ptr [rax + 0x20], rdx
0x1291e:	xor	eax, eax
0x12920:	ret	


0x1287f:	mov	rcx, qword ptr [rax + 0x28]
0x12883:	mov	rax, qword ptr [rax + 8]
0x12887:	test	rax, rax
0x1288a:	mov	qword ptr [rsi + 8], rax
0x1288e:	je	0x12893


0x126c8:	lea	rax, [rsi + rcx]
0x126cc:	shr	rax, 1
0x126cf:	cmp	qword ptr [r8 + rax*8], rdx
0x126d3:	jl	0x12700


0x126f0:	mov	rax, rcx
0x126f3:	mov	rcx, rdi
0x126f6:	nop	word ptr cs:[rax + rax]
0x12700:	lea	rsi, [rax + 1]
0x12704:	mov	rdi, rcx
0x12707:	jmp	0x126b0


0x12679:	sub	rax, 1
0x1267d:	test	rax, rax
0x12680:	jns	0x12660


0x12690:	xor	eax, eax
0x12692:	ret	


0x12632:	ret	


0x12620:	add	rdx, 1
0x12624:	cmp	dword ptr [rsi + rdx*4 - 4], -1
0x12629:	jne	0x1263d


0x12247:	cmp	r9, r13
0x1224a:	jne	0x1230c


0x12250:	mov	eax, dword ptr [rax + 8]
0x12253:	mov	rsi, r15
0x12256:	mov	rdi, r14
0x12259:	shr	eax, 8
0x1225c:	and	eax, 0x3ff
0x12261:	or	ebp, eax
0x12263:	mov	edx, ebp
0x12265:	call	0x12010


0x121f0:	mov	edx, ebp
0x121f2:	mov	rsi, r15
0x121f5:	mov	rdi, r14
0x121f8:	call	0x12010


0x12147:	test	rsi, rsi
0x1214a:	jle	0x121f0


0x2620:	jmp	qword ptr [rip + 0x2257aa]


0x117a6:	lea	rax, [rdi + 0x20]
0x117aa:	mov	qword ptr [rsp + 8], rax
0x117af:	lea	rax, [rsp + 0x44]
0x117b4:	mov	qword ptr [rsp + 0x30], rax
0x117b9:	lea	rax, [rsp + 0x48]
0x117be:	mov	qword ptr [rsp + 0x38], rax
0x117c3:	lea	rax, [rsp + 0x50]
0x117c8:	mov	qword ptr [rsp + 0x28], rax
0x117cd:	nop	dword ptr [rax]
0x117d0:	mov	rbp, qword ptr [r14 + 0x28]
0x117d4:	mov	r13, r15
0x117d7:	add	rbp, r15
0x117da:	add	rbp, qword ptr [r14]
0x117dd:	movzx	r12d, byte ptr [rbp]
0x117e2:	test	r12b, 0x80
0x117e6:	jne	0x117fa


0x11938:	mov	qword ptr [r14 + 0x30], r15
0x1193c:	mov	qword ptr [r14 + 0x38], r15
0x11940:	xor	eax, eax
0x11942:	jmp	0x1161f


0x11bb0:	lea	rcx, [rsp + 0x50]
0x11bb5:	jmp	0x119cb


0x11998:	mov	rdi, qword ptr [r14 + 0x28]
0x1199c:	lea	r11d, [rax - 1]
0x119a0:	lea	rcx, [rsp + 0x50]
0x119a5:	xor	eax, eax
0x119a7:	add	rdi, r13
0x119aa:	add	rdi, qword ptr [r14]
0x119ad:	jmp	0x119ba


0x11459:	mov	rcx, r14
0x1145c:	mov	rdi, r13
0x1145f:	call	0x101e0


0x11550:	add	rax, 1
0x11554:	cmp	rdx, rax
0x11557:	je	0x11459


0x1158d:	jmp	0x11459


0x11220:	mov	rcx, qword ptr [rax + rdx - 8]
0x11225:	cmp	rbp, rcx
0x11228:	jge	0x11203


0x111e6:	test	rsi, rsi
0x111e9:	jle	0x11203


0x10f60:	mov	esi, 1
0x10f65:	mov	r8, r9
0x10f68:	jmp	0x10ce0


0x10f49:	ret	


0x10d76:	add	rbx, 1
0x10d7a:	cmp	qword ptr [r12 + 8], rbx
0x10d7f:	jle	0x10ea0


0x10da9:	cmp	qword ptr [rax], r15
0x10dac:	jne	0x10d76


0x10ec0:	mov	edx, dword ptr [rsp + 8]
0x10ec4:	test	edx, edx
0x10ec6:	je	0x10d76


0x10d71:	cmp	dl, 4
0x10d74:	je	0x10dc8


0x10c3f:	mov	byte ptr [rdi + 8], 1
0x10c43:	mov	eax, 1
0x10c48:	ret	


0x10c35:	lea	rdx, [rax + 1]
0x10c39:	cmp	rdx, qword ptr [rsi + 0x58]
0x10c3d:	jl	0x10c80


0x10c00:	lea	rcx, [rax + 1]
0x10c04:	cmp	rcx, qword ptr [rsi + 0x58]
0x10c08:	jge	0x10c50


0x10bcd:	cmp	cl, 0x5d
0x10bd0:	je	0x10c70


0xfa10:	lea	eax, [rcx - 0xc]
0xfa13:	cmp	ax, 1
0xfa17:	jbe	0xfa90


0xf928:	cmp	cx, 1
0xf92c:	jne	0xf960


0xe9b3:	call	0x2400


0xe939:	mov	rsi, qword ptr [rdx + 0x80]
0xe940:	cmp	qword ptr [rcx], rsi
0xe943:	je	0xe990


0xe654:	mov	edi, dword ptr [r13 + 0x2c]
0xe658:	mov	rdx, rbp
0xe65b:	mov	esi, ebx
0xe65d:	call	0xe590


0xe71a:	test	rbp, rbp
0xe71d:	je	0xe740


0xe680:	lea	rdx, [rsp + 0x10]
0xe685:	mov	esi, r15d
0xe688:	mov	edi, 1
0xe68d:	call	0x27e0


0xe6ee:	add	rsp, 0xb8
0xe6f5:	pop	rbx
0xe6f6:	pop	rbp
0xe6f7:	pop	r12
0xe6f9:	pop	r13
0xe6fb:	pop	r14
0xe6fd:	pop	r15
0xe6ff:	ret	


0xe825:	call	0x2560


0xe780:	mov	edi, r12d
0xe783:	xor	ebx, ebx
0xe785:	call	0x2640


0xe63d:	test	r12d, r12d
0xe640:	jns	0xe82a




0xe430:	mov	edi, esi
0xe432:	call	0x2640








0x25b0:	jmp	qword ptr [rip + 0x2257e2]


0xd823:	mov	edx, 5
0xd828:	xor	edi, edi
0xd82a:	call	0x2510


0xcada:	mov	qword ptr [rsi], rcx
0xcadd:	imul	rcx, r9
0xcae1:	mov	rsi, rcx
0xcae4:	jmp	0xca40


0x9028:	fstp	st(0)
0x902a:	nop	word ptr [rax + rax]
0x9030:	add	rax, 1
0x9034:	mov	qword ptr [rsp - 0x20], rax
0x9039:	test	rax, rax
0x903c:	fild	qword ptr [rsp - 0x20]
0x9040:	js	0x9090


0x9022:	je	0x904a


0x8a60:	cvttss2si	rsi, xmm0
0x8a65:	jmp	0x8908


0x88ea:	subss	xmm0, dword ptr [rip + 0x190de]
0x88f2:	movabs	rax, 0x8000000000000000
0x88fc:	cvttss2si	rsi, xmm0
0x8901:	xor	rsi, rax
0x8904:	nop	dword ptr [rax]
0x8908:	mov	rdi, rsi
0x890b:	call	0x7cf0


0x8a28:	add	rsp, 0x60
0x8a2c:	pop	rbx
0x8a2d:	pop	rbp
0x8a2e:	pop	r12
0x8a30:	ret	


0x8aba:	call	0x2560


0x8820:	mov	rdi, qword ptr [rbp + 8]
0x8824:	test	rdi, rdi
0x8827:	je	0x8841


0x8806:	add	rbp, 0x10
0x880a:	cmp	rax, rbp
0x880d:	ja	0x87d8


0x87e1:	mov	rbx, rbp
0x87e4:	jmp	0x87f3


0x8780:	mov	qword ptr [r12], 0
0x8788:	mov	qword ptr [r12 + 8], 0
0x8791:	add	r12, 0x10
0x8795:	cmp	qword ptr [rbp + 8], r12
0x8799:	ja	0x8730


0x877a:	mov	rdi, qword ptr [r12]
0x877e:	call	rax


0x8756:	mov	rdx, qword ptr [rbx + 8]
0x875a:	mov	rcx, qword ptr [rbp + 0x48]
0x875e:	mov	qword ptr [rbx], 0
0x8765:	test	rdx, rdx
0x8768:	mov	qword ptr [rbx + 8], rcx
0x876c:	mov	qword ptr [rbp + 0x48], rbx
0x8770:	mov	rbx, rdx
0x8773:	jne	0x8748


0x874d:	mov	rdi, qword ptr [rbx]
0x8750:	call	rax


0x846a:	mov	r8, rax
0x846d:	add	r9, 0x10
0x8471:	cmp	qword ptr [rdi + 8], r9
0x8475:	ja	0x842c


0x8379:	mov	rax, qword ptr [rdx]
0x837c:	test	rax, rax
0x837f:	je	0x8370


0x81e8:	mov	rax, qword ptr [rax + 8]
0x81ec:	add	rdx, 1
0x81f0:	test	rax, rax
0x81f3:	jne	0x81e8


0x8170:	mov	rax, qword ptr [rax + 8]
0x8174:	add	rdx, 1
0x8178:	test	rax, rax
0x817b:	jne	0x8170


0x8118:	mov	rdx, qword ptr [rdx + 8]
0x811c:	add	rcx, 1
0x8120:	test	rdx, rdx
0x8123:	jne	0x8118


0x801b:	test	r14b, r14b
0x801e:	mov	qword ptr [r12 + 8], 0
0x8027:	jne	0x806a


0x7f3d:	movss	xmm1, dword ptr [rdx]
0x7f41:	ucomiss	xmm1, dword ptr [rip + 0x19a78]
0x7f48:	jb	0x7f70


0x7d18:	mov	rax, rdi
0x7d1b:	mov	rcx, rdi
0x7d1e:	mul	r9
0x7d21:	mov	rax, rdx
0x7d24:	shr	rax, 1
0x7d27:	lea	rax, [rax + rax*2]
0x7d2b:	sub	rcx, rax
0x7d2e:	cmp	rdi, 9
0x7d32:	mov	rax, rcx
0x7d35:	jbe	0x7d70


0x7d59:	add	rcx, 2
0x7d5d:	xor	edx, edx
0x7d5f:	mov	rax, rdi
0x7d62:	div	rcx
0x7d65:	add	rsi, r8
0x7d68:	cmp	rsi, rdi
0x7d6b:	mov	rax, rdx
0x7d6e:	jb	0x7d50


0x5fdb:	mov	rdx, rax
0x5fde:	movabs	rsi, 0x1000000000002500
0x5fe8:	shl	rdx, cl
0x5feb:	test	rdx, rsi
0x5fee:	jne	0x6070


0x600f:	lea	eax, [r11 - 0x30]
0x6013:	cmp	eax, 9
0x6016:	jbe	0x61a0


0x5f3f:	xor	r15d, r15d
0x5f42:	mov	rdi, qword ptr [rsp + 0x4a8]
0x5f4a:	xor	rdi, qword ptr fs:[0x28]
0x5f53:	mov	rax, r15
0x5f56:	jne	0x7a78


0x5f70:	test	r12, r12
0x5f73:	je	0x5f8a




0x58ef:	mov	rdi, r13
0x58f2:	and	ebp, 0x10000002
0x58f8:	call	0xcc10


0x5944:	jmp	0x5890


0x2450:	jmp	qword ptr [rip + 0x225892]


0x576b:	mov	ebx, 1
0x5770:	jmp	0x5674


0x56dc:	mov	r14, rax
0x56df:	mov	eax, dword ptr [r14 + 8]
0x56e3:	test	eax, eax
0x56e5:	je	0x5610


0x572a:	mov	edx, dword ptr [rbx - 8]
0x572d:	test	edx, 0x8000000
0x5733:	je	0x5708


0x5495:	call	0x2a10


0x5456:	xor	r12d, r12d
0x5459:	xor	ebp, ebp
0x545b:	jmp	0x546e


0x5250:	mov	rsi, qword ptr [rsp + 0x58]
0x5255:	xor	rsi, qword ptr fs:[0x28]
0x525e:	mov	rax, r14
0x5261:	jne	0x533f


0x518b:	cmp	byte ptr [rsp + 0x30], 0
0x5190:	mov	r15, qword ptr [rsp + 0x20]
0x5195:	jne	0x5118


0x2990:	jmp	qword ptr [rip + 0x2255f2]




0x1f8b0:	mov	eax, dword ptr [rsp]
0x1f8b3:	cmp	eax, 0x2f
0x1f8b6:	ja	0x1f9a4


0x1f7e0:	jg	0x1f8a0


0x1f838:	cmp	esi, 0x406
0x1f83e:	jge	0x1f8b0


0x1f880:	cmp	esi, 0x409
0x1f886:	je	0x1f8b0


0x1f415:	jmp	0x1f3e8


0x1e988:	movzx	r8d, r8b
0x1e98c:	mov	rdx, r15
0x1e98f:	mov	rsi, r14
0x1e992:	push	r8
0x1e994:	push	qword ptr [rsp + 0x70]
0x1e998:	mov	rdi, r12
0x1e99b:	mov	r9, qword ptr [rsp + 0x80]
0x1e9a3:	mov	r8, qword ptr [rsp + 0x70]
0x1e9a8:	call	0x1e4a0


0x1e9d0:	mov	rdi, r15
0x1e9d3:	mov	dword ptr [rsp + 0x1c], r8d
0x1e9d8:	mov	qword ptr [rsp + 0x10], r9
0x1e9dd:	call	0x2780


0x1e7d8:	movzx	eax, byte ptr [r15 + 0x38]
0x1e7dd:	xor	r8d, r8d
0x1e7e0:	mov	r13d, eax
0x1e7e3:	shr	r13b, 5
0x1e7e7:	mov	edi, r13d
0x1e7ea:	and	edi, 3
0x1e7ed:	mov	dword ptr [rsp + 0x2c], edi
0x1e7f1:	jmp	0x1e531


0x1e4f9:	test	rax, rax
0x1e4fc:	jns	0x1e507


0x1e531:	test	al, 0x10
0x1e533:	jne	0x1e700


0x1e522:	cmp	qword ptr [r15 + 0x20], 0
0x1e527:	je	0x1e531


0x1b42b:	movzx	edi, byte ptr [rdx + r14 + 1]
0x1b431:	mov	r12d, edi
0x1b434:	mov	dword ptr [rsp + 8], edi
0x1b438:	cmp	eax, 1
0x1b43b:	mov	byte ptr [rbp], r12b
0x1b43f:	mov	byte ptr [rbp + 8], 1
0x1b443:	jle	0x1b890


0x1b8b0:	cmp	eax, 1
0x1b8b3:	jle	0x1b8e4


0x1b364:	mov	rdi, qword ptr [rsp + 0x28]
0x1b369:	xor	rdi, qword ptr fs:[0x28]
0x1b372:	jne	0x1b998




0x1b326:	mov	edi, ecx
0x1b328:	mov	qword ptr [rsp + 8], rdx
0x1b32d:	mov	dword ptr [rsp], ecx
0x1b330:	call	0x2770


0x1b322:	mov	byte ptr [rdi + 8], 1
0x1b326:	mov	edi, ecx
0x1b328:	mov	qword ptr [rsp + 8], rdx
0x1b32d:	mov	dword ptr [rsp], ecx
0x1b330:	call	0x2770


0x1b1b0:	cmp	byte ptr [r10 + 0x8b], 0
0x1b1b8:	je	0x1b149


0x1b149:	mov	rdx, qword ptr [r10 + 8]
0x1b14d:	lea	rax, [r11 + 1]
0x1b151:	mov	qword ptr [r10 + 0x48], rax
0x1b155:	movzx	r9d, byte ptr [rdx + r11]
0x1b15a:	cmp	rax, r12
0x1b15d:	jge	0x1b228


0x1b0b5:	add	rsp, 0x20
0x1b0b9:	pop	rbx
0x1b0ba:	pop	rbp
0x1b0bb:	pop	r12
0x1b0bd:	pop	r13
0x1b0bf:	pop	r14
0x1b0c1:	ret	


0x1b298:	call	0x2560


0x1b232:	mov	rdi, rsp
0x1b235:	mov	rdx, r8
0x1b238:	mov	rsi, r10
0x1b23b:	call	0x10b90


0x1a9ce:	cmp	rbx, rcx
0x1a9d1:	jl	0x1a9a8


0x1a99d:	jmp	0x1aad7


0x1aad0:	xor	eax, eax
0x1aad2:	jmp	0x1a888


0x1a9dc:	lea	rax, [rbx + rbx*4]
0x1a9e0:	lea	rsi, [rax*8]
0x1a9e8:	mov	rax, qword ptr [rsp + 8]
0x1a9ed:	mov	qword ptr [rsp + 0x40], rsi
0x1a9f2:	mov	rax, qword ptr [rax + 0xd8]
0x1a9f9:	cmp	rbp, qword ptr [rax + rsi + 8]
0x1a9fe:	jne	0x1aad0


0x1a040:	mov	dword ptr [rsp + 0x5c], 1
0x1a048:	jmp	0x19c39


0x191b4:	mov	rdi, qword ptr [rsp + 0x38]
0x191b9:	mov	rax, qword ptr [rdi + 0x48]
0x191bd:	test	rax, rax
0x191c0:	je	0x1a040


0x1915a:	and	edx, 1
0x1915d:	cmove	rax, rdi
0x19161:	mov	qword ptr [rsp + 0x68], rax
0x19166:	mov	rax, qword ptr [rsp + 0x48]
0x1916b:	mov	qword ptr [rsp + 0x98], 0
0x19177:	mov	rax, qword ptr [rax + 0x30]
0x1917b:	cmp	rax, qword ptr [rsp + 0x270]
0x19183:	jae	0x191a4


0x18408:	lea	rax, [rcx + rdi]
0x1840c:	mov	r11, qword ptr [r14 + 0xd8]
0x18413:	mov	rsi, rax
0x18416:	shr	rsi, 0x3f
0x1841a:	add	rsi, rax
0x1841d:	sar	rsi, 1
0x18420:	lea	rax, [rsi + rsi*4]
0x18424:	cmp	r9, qword ptr [r11 + rax*8 + 8]
0x18429:	jle	0x18456


0x1845b:	cmp	qword ptr [rsp + 0x70], rcx
0x18460:	jle	0x18486


0x16fb3:	jmp	0x16f42


0x17012:	cmp	al, 0xe0
0x17014:	jne	0x1701f


0x17058:	cmp	al, 0xf7
0x1705a:	ja	0x17070


0x16a50:	mov	rax, qword ptr [rsp + 0x30]
0x16a55:	test	byte ptr [rax + 0x1a], 0x40
0x16a59:	je	0x169e7


0x16a3f:	call	0x29e0


0x16cb6:	mov	r13, rbp
0x16cb9:	xor	r12d, r12d
0x16cbc:	mov	qword ptr [rsp + 0x18], 0
0x16cc5:	mov	rax, qword ptr [rsp + 0x10]
0x16cca:	mov	rsi, qword ptr [rsp + 0x18]
0x16ccf:	xor	r14d, r14d
0x16cd2:	mov	rax, qword ptr [rcx + rax]
0x16cd6:	mov	r15, qword ptr [rax + rsi]
0x16cda:	nop	word ptr [rax + rax]
0x16ce0:	bt	r15, r14
0x16ce4:	jae	0x16d05


0x169c9:	cmp	eax, 6
0x169cc:	je	0x16b58


0x150dc:	mov	rdi, qword ptr [rsp + 0x30]
0x150e1:	call	0x2a10


0x14883:	mov	qword ptr [rbx + 0x48], 0
0x1488b:	xor	eax, eax
0x1488d:	mov	rcx, qword ptr [rsp + 0x38]
0x14892:	xor	rcx, qword ptr fs:[0x28]
0x1489b:	jne	0x14eea


0x14ccd:	mov	rcx, qword ptr [rbx + 0x78]
0x14cd1:	test	rcx, rcx
0x14cd4:	je	0x14883


0x14dc0:	mov	rdi, rbx
0x14dc3:	call	0x11380


0x14d28:	mov	rax, qword ptr [rbx]
0x14d2b:	mov	rdx, qword ptr [rbx + 0x78]
0x14d2f:	add	rax, rbp
0x14d32:	test	rdx, rdx
0x14d35:	movzx	eax, byte ptr [r11 + rax - 1]
0x14d3b:	mov	qword ptr [rbx + 0x38], 0
0x14d43:	je	0x14d49


0x14944:	cmp	byte ptr [rbx + 0x89], 0
0x1494b:	jne	0x14c08


0x14a33:	lea	rdx, [rsi + rcx]
0x14a37:	mov	rax, rdx
0x14a3a:	shr	rax, 0x3f
0x14a3e:	add	rax, rdx
0x14a41:	sar	rax, 1
0x14a44:	mov	rdx, qword ptr [r14 + rax*8]
0x14a48:	mov	r12, rax
0x14a4b:	cmp	rdx, rbp
0x14a4e:	jle	0x14a28


0x1467e:	ret	


0x145ad:	mov	rcx, qword ptr [rdi + 0x98]
0x145b4:	xor	eax, eax
0x145b6:	test	byte ptr [rcx + 0xd8], 0x80
0x145bd:	jne	0x1462a


0x1451c:	xor	eax, eax
0x1451e:	cmp	byte ptr [rbp + 0x8d], 0
0x14525:	setne	al
0x14528:	add	rsp, 8
0x1452c:	add	eax, eax
0x1452e:	pop	rbx
0x1452f:	pop	rbp
0x14530:	ret	


0x144b0:	sub	rsi, 1
0x144b4:	cmp	rsi, -1
0x144b8:	je	0x144e0


0x144c2:	cmp	byte ptr [rbp + 0x8e], 0
0x144c9:	jne	0x14548


0x1439c:	mov	r8, qword ptr [r15 + 0xe8]
0x143a3:	cmp	r8, qword ptr [r15 + 0xf0]
0x143aa:	mov	r9, qword ptr [r15 + 0xf8]
0x143b1:	je	0x14428


0x14198:	mov	r10, qword ptr [r15]
0x1419b:	mov	r9, qword ptr [rbp + 8]
0x1419f:	mov	rsi, qword ptr [rsp]
0x141a3:	mov	rdx, r10
0x141a6:	mov	rdi, r9
0x141a9:	call	0x126a0


0x13d20:	mov	rbx, qword ptr [r11 + r9*8]
0x13d24:	cmp	qword ptr [rbx], rbp
0x13d27:	jne	0x13d3d


0x13a7a:	movzx	eax, byte ptr [r14 + 0x68]
0x13a7f:	and	eax, 0xf
0x13a82:	cmp	eax, r9d
0x13a85:	jne	0x13a68


0x13a68:	add	r10, 1
0x13a6c:	cmp	r10, r11
0x13a6f:	je	0x13ab0


0x1323b:	jmp	0x13258


0x1324a:	mov	r10, qword ptr [rdi + rcx*8]
0x1324e:	cmp	r10, r8
0x13251:	jg	0x13240


0x13227:	sub	r11, 1
0x1322b:	js	0x13290


0x13280:	sub	r9, 1
0x13284:	js	0x13290


0x12c14:	test	rax, rax
0x12c17:	js	0x12c50


0x12c50:	test	rdx, rdx
0x12c53:	jns	0x12ce8


0x12a38:	lea	r13, [rbp + r10]
0x12a3d:	mov	rax, r13
0x12a40:	shr	rax, 0x3f
0x12a44:	add	rax, r13
0x12a47:	sar	rax, 1
0x12a4a:	lea	r13, [rax + rax*4]
0x12a4e:	mov	r14, rax
0x12a51:	cmp	qword ptr [r11 + r13*8 + 8], r12
0x12a56:	jl	0x12b70


0x12b60:	mov	r14, r10
0x12b63:	mov	r10, rax
0x12b66:	nop	word ptr cs:[rax + rax]
0x12b70:	lea	rbp, [r14 + 1]
0x12b74:	mov	rax, r10
0x12b77:	jmp	0x12a07


0x12a8c:	cmp	qword ptr [rsi], 0
0x12a90:	jle	0x12bb2


0x12bb2:	xor	eax, eax
0x12bb4:	jmp	0x12b2e


0x12a96:	mov	qword ptr [rsp + 0x30], rbp
0x12a9b:	mov	qword ptr [rsp + 0x20], r9
0x12aa0:	mov	r13, rdi
0x12aa3:	mov	qword ptr [rsp + 0x18], r8
0x12aa8:	mov	qword ptr [rsp + 0x10], rcx
0x12aad:	xor	r14d, r14d
0x12ab0:	mov	qword ptr [rsp + 0x38], rsi
0x12ab5:	mov	qword ptr [rsp + 0x28], rbx
0x12aba:	mov	rbp, rdx
0x12abd:	mov	r15, r12
0x12ac0:	mov	rax, qword ptr [rbp]
0x12ac4:	mov	rdx, qword ptr [r13 + 0xd8]
0x12acb:	mov	rdi, r13
0x12ace:	mov	r9, qword ptr [rsp + 0x28]
0x12ad3:	mov	r8, qword ptr [rsp + 0x18]
0x12ad8:	mov	rcx, qword ptr [rsp + 0x10]
0x12add:	mov	rsi, qword ptr [rax + r14*8]
0x12ae1:	lea	rax, [rsi + rsi*4]
0x12ae5:	lea	rax, [rdx + rax*8]
0x12ae9:	mov	rdx, qword ptr [rsp + 8]
0x12aee:	mov	rax, qword ptr [rax]
0x12af1:	shl	rax, 4
0x12af5:	add	rax, qword ptr [rdx]
0x12af8:	mov	r12, qword ptr [rax]
0x12afb:	mov	rdx, r12
0x12afe:	call	0x10f10


0x12893:	mov	rax, qword ptr [rdi + 0xe0]
0x1289a:	mov	rdx, qword ptr [rsi + 0x28]
0x1289e:	cmp	rcx, 0x3f
0x128a2:	mov	rdx, qword ptr [rax + rdx*8]
0x128a6:	mov	qword ptr [rax + rcx*8], rdx
0x128aa:	jg	0x1286c


0x12890:	mov	qword ptr [rax], rsi
0x12893:	mov	rax, qword ptr [rdi + 0xe0]
0x1289a:	mov	rdx, qword ptr [rsi + 0x28]
0x1289e:	cmp	rcx, 0x3f
0x128a2:	mov	rdx, qword ptr [rax + rdx*8]
0x128a6:	mov	qword ptr [rax + rcx*8], rdx
0x128aa:	jg	0x1286c


0x12700:	lea	rsi, [rax + 1]
0x12704:	mov	rdi, rcx
0x12707:	jmp	0x126b0


0x126d5:	mov	rcx, rax
0x126d8:	cmp	rsi, rcx
0x126db:	jb	0x126c8


0x126b0:	cmp	rsi, rdi
0x126b3:	jae	0x126dd


0x1263d:	ret	


0x1230c:	mov	rsi, r15
0x1230f:	call	0x11160


0x12150:	shl	rdx, 4
0x12154:	sub	r8, rax
0x12157:	mov	rcx, qword ptr [r14 + 0x20]
0x1215b:	lea	r8, [r8 + rdx - 0x20]
0x12160:	jmp	0x1217a




0x117e8:	mov	rdi, qword ptr [rsp + 8]
0x117ed:	call	0x2990


0x117fa:	mov	rax, qword ptr [r14 + 0x20]
0x117fe:	mov	rdi, qword ptr [rsp + 0x30]
0x11803:	mov	rdx, rbx
0x11806:	mov	rcx, qword ptr [rsp + 8]
0x1180b:	sub	rdx, r15
0x1180e:	mov	rsi, rbp
0x11811:	mov	qword ptr [rsp + 0x10], rdx
0x11816:	mov	qword ptr [rsp + 0x48], rax
0x1181b:	mov	qword ptr [rsp + 0x20], rdi
0x11820:	call	0x101e0


0x1161f:	mov	rcx, qword ptr [rsp + 0x98]
0x11627:	xor	rcx, qword ptr fs:[0x28]
0x11630:	jne	0x11bba


0x119cb:	mov	qword ptr [rsp + 0x18], rcx
0x119d0:	jmp	0x11693


0x119ba:	movzx	esi, byte ptr [rdi + rax]
0x119be:	cmp	r11, rax
0x119c1:	movzx	esi, byte ptr [rdx + rsi]
0x119c5:	mov	byte ptr [rcx + rax], sil
0x119c9:	jne	0x119af


0x1155d:	mov	rdi, qword ptr [rbx + 0x78]
0x11561:	mov	rcx, qword ptr [rbx]
0x11564:	add	rcx, rbp
0x11567:	add	rcx, rax
0x1156a:	add	rcx, qword ptr [rbx + 0x28]
0x1156e:	movzx	ecx, byte ptr [rcx]
0x11571:	movzx	ecx, byte ptr [rdi + rcx]
0x11575:	mov	rdi, qword ptr [rbx + 8]
0x11579:	add	rdi, rbp
0x1157c:	mov	byte ptr [rdi + rax], cl
0x1157f:	mov	byte ptr [rsi + rax], cl
0x11582:	lea	ecx, [rax + 1]
0x11585:	cmp	ecx, dword ptr [rbx + 0x90]
0x1158b:	jl	0x11550


0x11203:	mov	qword ptr [rax + rdx], rbp
0x11207:	mov	eax, 1
0x1120c:	add	qword ptr [rbx + 8], 1
0x11211:	jmp	0x1118e


0x111eb:	add	rdx, rax
0x111ee:	nop	
0x111f0:	mov	rcx, qword ptr [rdx - 8]
0x111f4:	sub	rdx, 8
0x111f8:	mov	qword ptr [rdx + 8], rcx
0x111fc:	cmp	rax, rdx
0x111ff:	jne	0x111f0


0x10ea0:	mov	r15d, dword ptr [rsp + 0x20]
0x10ea5:	add	rsp, 0x48
0x10ea9:	mov	eax, r15d
0x10eac:	pop	rbx
0x10ead:	sar	eax, 1
0x10eaf:	pop	rbp
0x10eb0:	pop	r12
0x10eb2:	pop	r13
0x10eb4:	pop	r14
0x10eb6:	pop	r15
0x10eb8:	ret	


0x10dae:	add	rsp, 0x48
0x10db2:	mov	eax, 0xffffffff
0x10db7:	pop	rbx
0x10db8:	pop	rbp
0x10db9:	pop	r12
0x10dbb:	pop	r13
0x10dbd:	pop	r14
0x10dbf:	pop	r15
0x10dc1:	ret	


0x10ecc:	cmp	qword ptr [rax], r15
0x10ecf:	jne	0x10d76


0x10dc8:	cmp	r10, -1
0x10dcc:	je	0x10d76


0x10c80:	mov	qword ptr [rsi + 0x48], rdx
0x10c84:	movzx	eax, byte ptr [r8 + rax + 1]
0x10c8a:	mov	byte ptr [rdi + 8], 1
0x10c8e:	mov	byte ptr [rdi], al
0x10c90:	mov	eax, 1
0x10c95:	ret	


0x10c0a:	movzx	eax, byte ptr [r8 + rax + 1]
0x10c10:	cmp	al, 0x3a
0x10c12:	mov	byte ptr [rdi], al
0x10c14:	je	0x10cb0


0x10c50:	mov	byte ptr [rdi + 8], 1
0x10c54:	mov	byte ptr [rdi], 0x5b
0x10c57:	mov	eax, 1
0x10c5c:	ret	


0x10c70:	mov	byte ptr [rdi + 8], 0x15
0x10c74:	mov	eax, 1
0x10c79:	ret	


0x10bd6:	cmp	cl, 0x5e
0x10bd9:	je	0x10c60


0xfa90:	mov	edx, 1
0xfa95:	mov	rsi, rbp
0xfa98:	call	0xde40


0xfa19:	cmp	cx, 1
0xfa1d:	jne	0xf960


0xf92e:	jmp	0xfb50


0xf960:	mov	rbx, qword ptr [rbp + 0x10]
0xf964:	test	rbx, rbx
0xf967:	jne	0xf938


0xe990:	mov	rsi, qword ptr [rdx + 0x78]
0xe994:	cmp	qword ptr [rcx + 8], rsi
0xe998:	jne	0xe945


0xe740:	and	bh, 2
0xe743:	jne	0xe7d8


0xe71f:	lea	rdx, [rip + 0x13f75]
0xe726:	mov	ecx, 3
0xe72b:	mov	rsi, rbp
0xe72e:	mov	rdi, rdx
0xe731:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x27e0:	jmp	qword ptr [rip + 0x2256ca]


0x2640:	jmp	qword ptr [rip + 0x22579a]


0xe646:	test	bh, 2
0xe649:	jne	0xe790


0xe82a:	test	bl, 2
0xe82d:	mov	r15d, r12d
0xe830:	mov	byte ptr [rsp + 0xf], 1
0xe835:	je	0xe726




0x9090:	fadd	dword ptr [rip + 0x18936]
0x9096:	ret	


0x9042:	jmp	0x904a


0x904a:	ret	


0x9024:	fstp	st(0)
0x9026:	jmp	0x9030


0x880f:	mov	rbp, qword ptr [r12]
0x8813:	cmp	rbp, rax
0x8816:	jae	0x884c


0x87d8:	mov	rdi, qword ptr [rbp]
0x87dc:	test	rdi, rdi
0x87df:	je	0x8806


0x87f3:	call	qword ptr [r12 + 0x40]


0x8748:	test	rax, rax
0x874b:	je	0x8756


0x8480:	ret	


0x8455:	mov	r8, qword ptr [rcx]
0x8458:	add	rax, 1
0x845c:	mov	qword ptr [rsi + rax*8 - 8], r8
0x8461:	mov	rcx, qword ptr [rcx + 8]
0x8465:	test	rcx, rcx
0x8468:	jne	0x8450


0x8370:	add	rdx, 0x10
0x8374:	cmp	rdx, rcx
0x8377:	jae	0x8388


0x8381:	ret	


0x8029:	mov	rsi, r15
0x802c:	mov	rdi, rbp
0x802f:	call	0x7db0


0x7f4a:	addss	xmm1, dword ptr [rip + 0x19a62]
0x7f52:	movss	xmm2, dword ptr [rdx + 4]
0x7f57:	ucomiss	xmm2, xmm1
0x7f5a:	jbe	0x7f70


0x7d50:	add	r8, 8
0x7d54:	test	rdx, rdx
0x7d57:	je	0x7d75


0x5ff4:	test	cl, cl
0x5ff6:	je	0x6080


0x6070:	mov	dword ptr [rsp + 8], r11d
0x6075:	jmp	0x5fc4


0x61a0:	xor	r10d, r10d
0x61a3:	movsx	r11d, byte ptr [rbx + 1]
0x61a8:	cmp	r10d, 0xccccccc
0x61af:	lea	rcx, [rbx + 1]
0x61b3:	mov	r13d, r11d
0x61b6:	lea	eax, [r11 - 0x30]
0x61ba:	jg	0x61e5


0x601c:	cmp	r13b, 0x45
0x6020:	je	0x6060


0x5f8a:	add	r15, r14
0x5f8d:	mov	rbp, rbx
0x5f90:	movzx	eax, byte ptr [rbp + 1]
0x5f94:	lea	rbx, [rbp + 1]
0x5f98:	mov	r10, -1
0x5f9f:	test	al, al
0x5fa1:	je	0x5f42


0x5f75:	cmp	r10d, 1
0x5f79:	jg	0x6160




0x5674:	mov	rdi, rbp
0x5677:	call	0x2a10


0x5610:	test	rbp, rbp
0x5613:	je	0x5750


0x5708:	mov	rsi, qword ptr [rsp + 8]
0x570d:	mov	rdi, qword ptr [rbx]
0x5710:	call	0x5510


0x5735:	mov	rsi, qword ptr [rsp + 8]
0x573a:	xor	r8d, r8d
0x573d:	xor	ecx, ecx
0x573f:	xor	edx, edx
0x5741:	mov	rdi, rbx
0x5744:	call	0x1ec30


0x546e:	lea	rax, [rdi + r12]
0x5472:	test	dword ptr [rax], 0x8000000
0x5478:	je	0x5460


0x5267:	add	rsp, 0x68
0x526b:	pop	rbx
0x526c:	pop	rbp
0x526d:	pop	r12
0x526f:	pop	r13
0x5271:	pop	r14
0x5273:	pop	r15
0x5275:	ret	


0x533f:	call	0x2560


0x5197:	movsx	eax, byte ptr [r15]
0x519b:	jmp	0x5120


0x5118:	mov	edi, r13d
0x511b:	call	0x28e0




0x1f8bc:	add	rax, qword ptr [rsp + 0x10]
0x1f8c1:	mov	edx, dword ptr [rax]
0x1f8c3:	mov	edi, ebp
0x1f8c5:	xor	eax, eax
0x1f8c7:	call	0x24a0


0x1f9a4:	mov	rax, qword ptr [rsp + 8]
0x1f9a9:	jmp	0x1f8c1


0x1f7e6:	cmp	esi, 2
0x1f7e9:	je	0x1f8b0


0x1f8a0:	cmp	esi, 9
0x1f8a3:	je	0x1f800


0x1f840:	cmp	esi, 0x401
0x1f846:	je	0x1f800


0x1f888:	jl	0x1f800


0x1f3e8:	mov	rax, qword ptr [rsi]
0x1f3eb:	mov	qword ptr [rdi], rcx
0x1f3ee:	mov	qword ptr [rdi + 8], rax
0x1f3f2:	xor	eax, eax
0x1f3f4:	ret	


0x1e4fe:	cmp	rbx, r8
0x1e501:	jle	0x1e7d8


0x1e539:	test	r12, r12
0x1e53c:	je	0x1e700


0x1e700:	mov	edi, 0x10
0x1e705:	mov	r14d, 1
0x1e70b:	mov	r13d, 1
0x1e711:	xor	r12d, r12d
0x1e714:	jmp	0x1e55f


0x1e529:	test	al, 8
0x1e52b:	je	0x1e720


0x1b890:	call	0x29f0


0x1b449:	mov	rax, qword ptr [rbx + 0x10]
0x1b44d:	mov	r8d, dword ptr [rax + rsi*4]
0x1b451:	mov	edi, r8d
0x1b454:	mov	dword ptr [rsp], r8d
0x1b458:	call	0x2770


0x1b8e4:	cmp	byte ptr [rbx + 0x8c], 0
0x1b8eb:	mov	rcx, qword ptr [rbx]
0x1b8ee:	mov	rdi, qword ptr [rbx + 0x28]
0x1b8f2:	je	0x1b938


0x1b8b5:	mov	rcx, qword ptr [rbx + 0x10]
0x1b8b9:	lea	rdi, [rsi*4]
0x1b8c1:	mov	r8d, dword ptr [rcx + rsi*4]
0x1b8c5:	cmp	r8d, -1
0x1b8c9:	je	0x1b97f


0x2770:	jmp	qword ptr [rip + 0x225702]


0x1b1ba:	cmp	byte ptr [r10 + 0x8c], 0
0x1b1c2:	je	0x1b258


0x1b163:	cmp	r13b, r9b
0x1b166:	jne	0x1b120


0x1a9a8:	lea	rdx, [rbx + rcx]
0x1a9ac:	mov	rax, rdx
0x1a9af:	shr	rax, 0x3f
0x1a9b3:	add	rax, rdx
0x1a9b6:	sar	rax, 1
0x1a9b9:	lea	rdx, [rax + rax*4]
0x1a9bd:	mov	r8, rax
0x1a9c0:	cmp	rbp, qword ptr [rdi + rdx*8 + 8]
0x1a9c5:	jg	0x1aae0


0x1aad7:	mov	r8, rcx
0x1aada:	mov	rcx, rdx
0x1aadd:	nop	dword ptr [rax]
0x1aae0:	lea	rbx, [r8 + 1]
0x1aae4:	mov	rdx, rcx
0x1aae7:	jmp	0x1a970


0x1aa04:	cmp	rbx, -1
0x1aa08:	je	0x1aad0


0x19c39:	mov	rsi, qword ptr [rsp + 0x228]
0x19c41:	xor	rsi, qword ptr fs:[0x28]
0x19c4a:	mov	eax, dword ptr [rsp + 0x5c]
0x19c4e:	jne	0x1a7eb


0x191c6:	mov	rdx, qword ptr [rdi + 0x50]
0x191ca:	test	rdx, rdx
0x191cd:	je	0x1a040


0x18456:	cmp	rsi, rcx
0x18459:	jg	0x18430


0x1842b:	jmp	0x185f8


0x18486:	mov	rax, qword ptr [rsp + 0x50]
0x1848b:	cmp	qword ptr [r14 + 0xe8], 0
0x18493:	mov	rdx, qword ptr [rax]
0x18496:	mov	rax, qword ptr [rdx + rbx]
0x1849a:	mov	qword ptr [rsp + 0x58], rax
0x1849f:	jle	0x1865b


0x18462:	mov	rdx, qword ptr [r14 + 0xd8]
0x18469:	lea	rax, [rcx + rcx*4]
0x1846d:	mov	rdi, qword ptr [rsp + 8]
0x18472:	lea	rax, [rdx + rax*8]
0x18476:	cmp	qword ptr [rax + 8], rdi
0x1847a:	jne	0x18486


0x16f42:	add	rsp, 8
0x16f46:	mov	eax, ebp
0x16f48:	pop	rbx
0x16f49:	pop	rbp
0x16f4a:	pop	r12
0x16f4c:	pop	r13
0x16f4e:	ret	


0x17016:	cmp	dl, 0x9f
0x17019:	jbe	0x16f40


0x1701f:	mov	ebp, 3
0x17024:	movsxd	rdi, ebp
0x17027:	add	r8, rdi
0x1702a:	cmp	rcx, r8
0x1702d:	jl	0x16f40


0x1705c:	cmp	al, 0xf0
0x1705e:	jne	0x17069


0x17070:	cmp	al, 0xfb
0x17072:	ja	0x17088


0x169e7:	mov	rdi, qword ptr [rsp + 0x20]
0x169ec:	add	qword ptr [rsp], 1
0x169f1:	mov	rax, qword ptr [rsp]
0x169f5:	cmp	rax, qword ptr [rdi]
0x169f8:	jge	0x16d9d


0x16a5b:	mov	rsi, qword ptr [rsp + 8]
0x16a60:	cmp	dword ptr [rsi + 0xb4], 1
0x16a67:	jle	0x169e7


0x16ce6:	test	ebx, ebx
0x16ce8:	mov	byte ptr [r13 + r14], 1
0x16cee:	je	0x16d05


0x16d05:	add	r14, 1
0x16d09:	cmp	r14, 0x40
0x16d0d:	jne	0x16ce0


0x16b58:	mov	rax, qword ptr [rsp + 8]
0x16b5d:	mov	r12, qword ptr [rsi]
0x16b60:	cmp	dword ptr [rax + 0xb4], 1
0x16b67:	jle	0x16b8d


0x169d2:	and	edx, 0xfffffffd
0x169d5:	cmp	dl, 5
0x169d8:	je	0x16dd4


0x148a1:	add	rsp, 0x48
0x148a5:	pop	rbx
0x148a6:	pop	rbp
0x148a7:	pop	r12
0x148a9:	pop	r13
0x148ab:	pop	r14
0x148ad:	pop	r15
0x148af:	ret	


0x14eea:	call	0x2560


0x14cda:	cmp	qword ptr [rbx + 0x40], rax
0x14cde:	mov	rdx, qword ptr [rbx + 0x30]
0x14ce2:	cmovle	rax, qword ptr [rbx + 0x40]
0x14ce7:	cmp	rax, rdx
0x14cea:	jg	0x14cf8


0x14d49:	mov	rcx, qword ptr [rbx + 0x80]
0x14d50:	movzx	edx, al
0x14d53:	sar	rdx, 6
0x14d57:	mov	rcx, qword ptr [rcx + rdx*8]
0x14d5b:	mov	edx, 1
0x14d60:	bt	rcx, rax
0x14d64:	jb	0x14d80


0x14d45:	movzx	eax, byte ptr [rdx + rax]
0x14d49:	mov	rcx, qword ptr [rbx + 0x80]
0x14d50:	movzx	edx, al
0x14d53:	sar	rdx, 6
0x14d57:	mov	rcx, qword ptr [rcx + rdx*8]
0x14d5b:	mov	edx, 1
0x14d60:	bt	rcx, rax
0x14d64:	jb	0x14d80


0x14951:	lea	r14, [r11 + rax]
0x14955:	cmp	r15, r14
0x14958:	jle	0x14d9f


0x14c08:	mov	rcx, qword ptr [rbx]
0x14c0b:	mov	rdi, rbp
0x14c0e:	sub	rdi, rdx
0x14c11:	mov	rdx, rdi
0x14c14:	lea	r12, [rcx + r11]
0x14c18:	add	rdx, r12
0x14c1b:	lea	rsi, [r12 + rbp - 1]
0x14c20:	cmp	rcx, rdx
0x14c23:	cmovb	rcx, rdx
0x14c27:	cmp	rcx, rsi
0x14c2a:	jbe	0x14c45


0x14a28:	jge	0x14a63


0x14a50:	mov	rcx, rax
0x14a53:	jmp	0x14a2e


0x144cb:	xor	eax, eax
0x144cd:	cmp	ebx, 0xa
0x144d0:	je	0x1451c


0x14548:	mov	edi, ebx
0x1454a:	call	0x2770


0x14428:	lea	rax, [r8 + r8]
0x1442c:	mov	rsi, r8
0x1442f:	mov	rdi, r9
0x14432:	shl	rsi, 4
0x14436:	mov	qword ptr [rsp + 8], rcx
0x1443b:	mov	qword ptr [rsp + 0x10], rax
0x14440:	call	0x2830


0x143b3:	mov	esi, 0x30
0x143b8:	mov	edi, 1
0x143bd:	mov	qword ptr [rsp + 0x10], r9
0x143c2:	mov	qword ptr [rsp + 8], r8
0x143c7:	mov	qword ptr [rsp + 0x18], rcx
0x143cc:	call	0x26b0


0x13a87:	mov	rdi, qword ptr [r14 + 0x50]
0x13a8b:	test	rdi, rdi
0x13a8e:	je	0x13a68


0x13258:	sub	rsi, 1
0x1325c:	mov	qword ptr [rdi + rsi*8], r8
0x13260:	sub	r9, 1
0x13264:	js	0x13290


0x13253:	cmp	r10, r8
0x13256:	je	0x13260


0x13240:	sub	rcx, 1
0x13244:	cmp	rcx, -1
0x13248:	je	0x13258


0x13290:	mov	rcx, qword ptr [rbx + 8]
0x13294:	mov	rdx, qword ptr [rbp + 8]
0x13298:	add	rdx, rcx
0x1329b:	add	rdx, qword ptr [r12 + 8]
0x132a0:	lea	rax, [rcx - 1]
0x132a4:	lea	r9, [rdx - 1]
0x132a8:	sub	rdx, rsi
0x132ab:	add	rcx, rdx
0x132ae:	test	rdx, rdx
0x132b1:	mov	qword ptr [rbx + 8], rcx
0x132b5:	jle	0x132fd


0x1322d:	mov	r8, qword ptr [rdx + r11*8]
0x13231:	cmp	rax, r8
0x13234:	jne	0x13225


0x13286:	mov	rax, qword ptr [r13 + r9*8]
0x1328b:	jmp	0x13220


0x12c19:	mov	rcx, qword ptr [rbx + 0x10]
0x12c1d:	mov	rsi, qword ptr [r12 + 0x10]
0x12c22:	mov	rsi, qword ptr [rsi + rdx*8]
0x12c26:	cmp	qword ptr [rcx + rax*8], rsi
0x12c2a:	je	0x12cc0


0x12c59:	mov	rcx, qword ptr [rbx + 8]
0x12c5d:	mov	rax, qword ptr [r12 + 8]
0x12c62:	lea	r8, [rcx + rax*2 - 1]
0x12c67:	mov	rdx, r8
0x12c6a:	sub	rdx, rbp
0x12c6d:	add	rdx, 1
0x12c71:	je	0x12caa


0x12ce8:	mov	rax, qword ptr [rbx + 0x10]
0x12cec:	add	rdx, 1
0x12cf0:	mov	rsi, qword ptr [r12 + 0x10]
0x12cf5:	sub	rbp, rdx
0x12cf8:	shl	rdx, 3
0x12cfc:	lea	rdi, [rax + rbp*8]
0x12d00:	call	0x2710


0x12b70:	lea	rbp, [r14 + 1]
0x12b74:	mov	rax, r10
0x12b77:	jmp	0x12a07


0x12a5c:	mov	r10, rax
0x12a5f:	cmp	rbp, r10
0x12a62:	jl	0x12a38


0x12a07:	cmp	rbp, rax
0x12a0a:	jge	0x12a64


0x12b2e:	add	rsp, 0x48
0x12b32:	pop	rbx
0x12b33:	pop	rbp
0x12b34:	pop	r12
0x12b36:	pop	r13
0x12b38:	pop	r14
0x12b3a:	pop	r15
0x12b3c:	ret	


0x128ac:	mov	rax, -2
0x128b3:	rol	rax, cl
0x128b6:	and	qword ptr [rdi + 0xa0], rax
0x128bd:	jmp	0x1286c


0x1217a:	cmp	qword ptr [rcx + rsi*8], r15
0x1217e:	jne	0x12168


0x11693:	mov	rcx, qword ptr [rsp + 8]
0x11698:	mov	rdx, qword ptr [rsp + 0x10]
0x1169d:	mov	rsi, qword ptr [rsp + 0x18]
0x116a2:	mov	rdi, qword ptr [rsp + 0x20]
0x116a7:	call	0x101e0


0x119af:	add	rax, 1
0x119b3:	cmp	qword ptr [rsp + 0x10], rax
0x119b8:	je	0x119cb


0x11242:	jmp	0x11203


0x11230:	mov	qword ptr [rax + rdx], rcx
0x11234:	sub	rdx, 8
0x11238:	mov	rcx, qword ptr [rax + rdx - 8]
0x1123d:	cmp	rcx, rbp
0x11240:	jg	0x11230


0x1118e:	add	rsp, 8
0x11192:	pop	rbx
0x11193:	pop	rbp
0x11194:	ret	


0x11201:	xor	edx, edx
0x11203:	mov	qword ptr [rax + rdx], rbp
0x11207:	mov	eax, 1
0x1120c:	add	qword ptr [rbx + 8], 1
0x11211:	jmp	0x1118e


0x111f0:	mov	rcx, qword ptr [rdx - 8]
0x111f4:	sub	rdx, 8
0x111f8:	mov	qword ptr [rdx + 8], rcx
0x111fc:	cmp	rax, rdx
0x111ff:	jne	0x111f0


0x10ed5:	add	rsp, 0x48
0x10ed9:	xor	eax, eax
0x10edb:	pop	rbx
0x10edc:	pop	rbp
0x10edd:	pop	r12
0x10edf:	pop	r13
0x10ee1:	pop	r14
0x10ee3:	pop	r15
0x10ee5:	ret	


0x10dce:	mov	rax, qword ptr [rsp]
0x10dd2:	mov	r13, qword ptr [rsp + 0x28]
0x10dd7:	mov	rdi, rbp
0x10dda:	mov	qword ptr [rsp + 0x30], r12
0x10ddf:	mov	qword ptr [rsp + 0x38], rbx
0x10de4:	mov	r12, r10
0x10de7:	add	r13, qword ptr [rax + 0xd8]
0x10dee:	lea	rax, [rbp + rbp*2]
0x10df3:	mov	rbp, r14
0x10df6:	mov	r14, rdi
0x10df9:	shl	rax, 3
0x10dfd:	mov	rbx, rax
0x10e00:	cmp	qword ptr [r13], r14
0x10e04:	jne	0x10e70


0x10cb0:	and	edx, 4
0x10cb3:	je	0x10c50


0x10c1a:	cmp	al, 0x3d
0x10c1c:	je	0x10ca0


0x10c60:	mov	byte ptr [rdi + 8], 0x19
0x10c64:	mov	eax, 1
0x10c69:	ret	


0x10bdf:	cmp	cl, 0x2d
0x10be2:	jne	0x10c3f


0xfa23:	test	dl, 0x40
0xfa26:	je	0xfad8


0xfb50:	cmp	ax, 4
0xfb54:	jne	0xfa23


0xf969:	mov	rbx, qword ptr [rbp + 8]
0xf96d:	cmp	qword ptr [rbx + 0x18], 0
0xf972:	jne	0xfee0


0xf938:	mov	qword ptr [r12], rbx
0xf93c:	mov	rdi, rbp
0xf93f:	call	0x2a10


0xe99a:	mov	rdx, qword ptr [rax + 0x78]
0xe99e:	mov	rax, qword ptr [rax + 0x80]
0xe9a5:	mov	qword ptr [rcx + 8], rdx
0xe9a9:	mov	qword ptr [rcx], rax
0xe9ac:	jmp	0xe945


0xe749:	mov	edi, r15d
0xe74c:	call	0x2820


0xe7d8:	movzx	r14d, byte ptr [rsp + 0xf]
0xe7de:	mov	esi, r15d
0xe7e1:	mov	rdi, r13
0xe7e4:	xor	ebx, ebx
0xe7e6:	xor	r14d, 1
0xe7ea:	movzx	edx, r14b
0xe7ee:	call	0xe3e0


0xe731:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xe733:	seta	al
0xe736:	sbb	al, 0
0xe738:	test	al, al
0xe73a:	je	0xe680






0xe64f:	mov	byte ptr [rsp + 0xf], 1
0xe654:	mov	edi, dword ptr [r13 + 0x2c]
0xe658:	mov	rdx, rbp
0xe65b:	mov	esi, ebx
0xe65d:	call	0xe590


0xe790:	lea	r15, [r13 + 0x60]
0xe794:	mov	rdi, r15
0xe797:	call	0x1f530


0xe726:	mov	ecx, 3
0xe72b:	mov	rsi, rbp
0xe72e:	mov	rdi, rdx
0xe731:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xe83b:	jmp	0xe680


0x9030:	add	rax, 1
0x9034:	mov	qword ptr [rsp - 0x20], rax
0x9039:	test	rax, rax
0x903c:	fild	qword ptr [rsp - 0x20]
0x9040:	js	0x9090


0x8450:	cmp	rdx, rax
0x8453:	je	0x8480


0x7f5c:	movss	xmm3, dword ptr [rip + 0x19a60]
0x7f64:	ucomiss	xmm3, xmm2
0x7f67:	jb	0x7f70


0x6080:	mov	r14d, 1
0x6086:	jmp	0x5fc4


0x5ffc:	movabs	rsi, 0x800000000000000
0x6006:	test	rdx, rsi
0x6009:	jne	0x6190


0x5fc4:	add	rbx, 1
0x5fc8:	movsx	r11d, byte ptr [rbx]
0x5fcc:	lea	ecx, [r11 - 0x23]
0x5fd0:	mov	r13d, r11d
0x5fd3:	mov	edi, r11d
0x5fd6:	cmp	cl, 0x3c
0x5fd9:	ja	0x600f


0x61bc:	movsx	edx, byte ptr [rbx]
0x61bf:	je	0x61e0


0x61e5:	cmp	eax, 9
0x61e8:	ja	0x6208


0x6060:	movsx	edi, byte ptr [rbx + 1]
0x6064:	add	rbx, 1
0x6068:	mov	r13d, edi
0x606b:	jmp	0x602b


0x6022:	cmp	r13b, 0x4f
0x6026:	je	0x6060


0x5fa3:	cmp	al, 0x25
0x5fa5:	jne	0x5f1b


0x5f7f:	movsx	edi, byte ptr [rbx]
0x5f82:	mov	rsi, r12
0x5f85:	call	0x2660


0x6160:	lea	r13, [r10 - 1]
0x6164:	xor	ebp, ebp
0x6166:	nop	word ptr cs:[rax + rax]
0x6170:	mov	rsi, r12
0x6173:	mov	edi, 0x20
0x6178:	add	rbp, 1
0x617c:	call	0x2660


0x5460:	add	rbp, 1
0x5464:	add	r12, 0x48
0x5468:	cmp	rbp, qword ptr [rbx + 0x20]
0x546c:	jae	0x5495


0x547a:	lea	rdi, [rax + 8]
0x547e:	add	rbp, 1
0x5482:	add	r12, 0x48
0x5486:	call	0x1ebe0


0x5120:	mov	rdx, r14
0x5123:	cdqe	
0x5125:	add	r15, qword ptr [rsp + 0x28]
0x512a:	shl	rdx, 5
0x512e:	mov	byte ptr [rsp + 0x1c], 0
0x5133:	sub	rdx, r14
0x5136:	add	rax, rdx
0x5139:	xor	edx, edx
0x513b:	div	rbx
0x513e:	mov	qword ptr [rsp + 0x20], r15
0x5143:	mov	r14, rdx
0x5146:	cmp	byte ptr [rsp + 0x10], 0
0x514b:	jne	0x51b7


0x28e0:	jmp	qword ptr [rip + 0x22564a]


0x1f8c1:	mov	edx, dword ptr [rax]
0x1f8c3:	mov	edi, ebp
0x1f8c5:	xor	eax, eax
0x1f8c7:	call	0x24a0


0x1f7ef:	jg	0x1f800


0x1f8a9:	jg	0x1f8b0


0x1f848:	cmp	esi, 0x402
0x1f84e:	je	0x1f8b0


0x1f88e:	cmp	esi, 0x40a
0x1f894:	jne	0x1f858


0x1e542:	and	eax, 6
0x1e545:	mov	rcx, qword ptr [r15 + 0x30]
0x1e549:	cmp	al, 4
0x1e54b:	je	0x1e6e0


0x1e55f:	mov	qword ptr [rsp + 0x20], r9
0x1e564:	mov	qword ptr [rsp + 0x18], rdx
0x1e569:	mov	qword ptr [rsp + 0x10], rsi
0x1e56e:	mov	qword ptr [rsp + 8], r8
0x1e573:	call	0x2780


0x1e720:	mov	rdi, r15
0x1e723:	mov	qword ptr [rsp + 0x20], r9
0x1e728:	mov	qword ptr [rsp + 0x18], rdx
0x1e72d:	mov	qword ptr [rsp + 0x10], rsi
0x1e732:	mov	qword ptr [rsp + 8], r8
0x1e737:	call	0x1e3d0


0x1b938:	add	rcx, rsi
0x1b93b:	movzx	edi, byte ptr [rcx + rdi]
0x1b93f:	mov	r12d, edi
0x1b942:	mov	dword ptr [rsp + 8], edi
0x1b946:	jmp	0x1b438


0x1b8f4:	mov	r8, qword ptr [rbx + 0x18]
0x1b8f8:	add	rcx, rdi
0x1b8fb:	add	rcx, qword ptr [r8 + rsi*8]
0x1b8ff:	movzx	edi, byte ptr [rcx]
0x1b902:	mov	r12d, edi
0x1b905:	mov	dword ptr [rsp + 8], edi
0x1b909:	and	edi, 0x80
0x1b90f:	jne	0x1b42b


0x1b97f:	movzx	eax, byte ptr [rdx + r14 + 1]
0x1b985:	mov	byte ptr [rbp + 8], 1
0x1b989:	mov	r12d, eax
0x1b98c:	mov	byte ptr [rbp], al
0x1b98f:	mov	dword ptr [rsp + 8], eax
0x1b993:	jmp	0x1b451


0x1b8cf:	lea	r9, [r14 + 2]
0x1b8d3:	cmp	qword ptr [rbx + 0x30], r9
0x1b8d7:	je	0x1b8e4




0x1b258:	lea	rax, [r11 + 1]
0x1b25c:	add	r11, qword ptr [r10]
0x1b25f:	mov	rdx, qword ptr [r10 + 0x28]
0x1b263:	mov	qword ptr [r10 + 0x48], rax
0x1b267:	movzx	r9d, byte ptr [r11 + rdx]
0x1b26c:	jmp	0x1b15a


0x1b1c8:	cmp	r11, qword ptr [r10 + 0x30]
0x1b1cc:	je	0x1b1dd


0x1b168:	mov	rdx, qword ptr [r10 + 8]
0x1b16c:	cmp	byte ptr [rdx + rax], 0x5d
0x1b170:	jne	0x1b120


0x1b120:	mov	rax, qword ptr [rbx + 8]
0x1b124:	mov	byte ptr [rax + r8], r9b
0x1b128:	add	r8, 1
0x1b12c:	cmp	r8, 0x20
0x1b130:	je	0x1b228


0x1a9cb:	mov	rcx, rax
0x1a9ce:	cmp	rbx, rcx
0x1a9d1:	jl	0x1a9a8


0x1aae0:	lea	rbx, [r8 + 1]
0x1aae4:	mov	rdx, rcx
0x1aae7:	jmp	0x1a970


0x1a970:	cmp	rbx, rdx
0x1a973:	jge	0x1a9d3


0x1aa0e:	mov	rax, qword ptr [rsp + 8]
0x1aa13:	mov	qword ptr [rsp + 0x60], 0
0x1aa1c:	mov	r12, qword ptr [rax + 0x98]
0x1aa23:	mov	rax, qword ptr [rsp + 0x10]
0x1aa28:	cmp	qword ptr [rax + 8], 0
0x1aa2d:	jle	0x1aad0


0x19c54:	add	rsp, 0x238
0x19c5b:	pop	rbx
0x19c5c:	pop	rbp
0x19c5d:	pop	r12
0x19c5f:	pop	r13
0x19c61:	pop	r14
0x19c63:	pop	r15
0x19c65:	ret	


0x1a7eb:	call	0x2560


0x191d3:	mov	rcx, qword ptr [rdi + 0x58]
0x191d7:	test	rcx, rcx
0x191da:	je	0x1a040


0x18430:	lea	rdx, [rsi + rcx]
0x18434:	mov	rax, rdx
0x18437:	shr	rax, 0x3f
0x1843b:	add	rax, rdx
0x1843e:	sar	rax, 1
0x18441:	lea	rdx, [rax + rax*4]
0x18445:	mov	r8, rax
0x18448:	cmp	r9, qword ptr [r11 + rdx*8 + 8]
0x1844d:	jg	0x18600


0x185f8:	mov	r8, rsi
0x185fb:	mov	rsi, rdi
0x185fe:	nop	
0x18600:	lea	rcx, [r8 + 1]
0x18604:	mov	rdi, rsi
0x18607:	jmp	0x18403


0x1865b:	mov	rax, qword ptr [rsp + 0x70]
0x18660:	cmp	qword ptr [rsp + 0x70], rax
0x18665:	mov	dword ptr [rsp + 0x8c], 0
0x18670:	jge	0x18350


0x184a5:	mov	qword ptr [rsp + 0x30], r13
0x184aa:	mov	qword ptr [rsp + 0x28], 0
0x184b3:	mov	r13, r10
0x184b6:	mov	rax, qword ptr [r14 + 0xf8]
0x184bd:	mov	rbx, qword ptr [rsp + 0x28]
0x184c2:	mov	rdi, qword ptr [rsp + 0x58]
0x184c7:	mov	rbx, qword ptr [rax + rbx*8]
0x184cb:	mov	rax, qword ptr [rbx + 8]
0x184cf:	shl	rax, 4
0x184d3:	cmp	rdi, qword ptr [rdx + rax]
0x184d7:	je	0x18500


0x1847c:	cmp	rcx, -1
0x18480:	jne	0x18656


0x17033:	mov	eax, 1
0x17038:	jmp	0x17047


0x17060:	cmp	dl, 0x8f
0x17063:	jbe	0x16f40


0x17069:	mov	ebp, 4
0x1706e:	jmp	0x17024


0x17074:	cmp	al, 0xf8
0x17076:	jne	0x17081


0x17088:	cmp	al, 0xfd
0x1708a:	ja	0x16f40


0x16a6d:	mov	rax, qword ptr [rsi]
0x16a70:	mov	rdi, qword ptr [rsp + 0x10]
0x16a75:	movzx	edx, byte ptr [rax + rdi]
0x16a79:	mov	byte ptr [rsp + 0x60], dl
0x16a7d:	lea	rdx, [r12 + 1]
0x16a82:	cmp	qword ptr [rsi + 0x10], rdx
0x16a86:	jbe	0x16dc6


0x16cf0:	call	0x29e0


0x16d0f:	add	r12, 0x40
0x16d13:	add	qword ptr [rsp + 0x18], 8
0x16d19:	add	r13, 0x40
0x16d1d:	cmp	r12, 0x100
0x16d24:	je	0x169e7


0x16ce0:	bt	r15, r14
0x16ce4:	jae	0x16d05


0x16b8d:	xor	r13d, r13d
0x16b90:	cmp	qword ptr [r12 + 0x28], 0
0x16b96:	jle	0x169e7


0x16b69:	cmp	qword ptr [r12 + 0x48], 0
0x16b6f:	jne	0x16c6f


0x16dd4:	movdqa	xmm0, xmmword ptr [rip + 0xc224]
0x16ddc:	cmp	eax, 2
0x16ddf:	movups	xmmword ptr [rbp], xmm0
0x16de3:	movups	xmmword ptr [rbp + 0x10], xmm0
0x16de7:	movups	xmmword ptr [rbp + 0x20], xmm0
0x16deb:	movups	xmmword ptr [rbp + 0x30], xmm0
0x16def:	movups	xmmword ptr [rbp + 0x40], xmm0
0x16df3:	movups	xmmword ptr [rbp + 0x50], xmm0
0x16df7:	movups	xmmword ptr [rbp + 0x60], xmm0
0x16dfb:	movups	xmmword ptr [rbp + 0x70], xmm0
0x16dff:	movups	xmmword ptr [rbp + 0x80], xmm0
0x16e06:	movups	xmmword ptr [rbp + 0x90], xmm0
0x16e0d:	movups	xmmword ptr [rbp + 0xa0], xmm0
0x16e14:	movups	xmmword ptr [rbp + 0xb0], xmm0
0x16e1b:	movups	xmmword ptr [rbp + 0xc0], xmm0
0x16e22:	movups	xmmword ptr [rbp + 0xd0], xmm0
0x16e29:	movups	xmmword ptr [rbp + 0xe0], xmm0
0x16e30:	movups	xmmword ptr [rbp + 0xf0], xmm0
0x16e37:	jne	0x16d9d


0x169de:	cmp	eax, 2
0x169e1:	je	0x16d34


0x14cec:	jmp	0x14d18


0x14cf8:	mov	rsi, qword ptr [rbx]
0x14cfb:	add	rsi, rdx
0x14cfe:	movzx	esi, byte ptr [rsi + r15]
0x14d03:	movzx	esi, byte ptr [rcx + rsi]
0x14d07:	mov	rcx, qword ptr [rbx + 8]
0x14d0b:	mov	byte ptr [rcx + rdx], sil
0x14d0f:	add	rdx, 1
0x14d13:	cmp	rax, rdx
0x14d16:	jne	0x14cf0


0x14d80:	mov	dword ptr [rbx + 0x70], edx
0x14d83:	jmp	0x14af8


0x14d66:	xor	edx, edx
0x14d68:	cmp	al, 0xa
0x14d6a:	jne	0x14d80


0x14d9f:	sub	r14, r15
0x14da2:	mov	r12, r14
0x14da5:	mov	qword ptr [rbx + 0x30], r14
0x14da9:	lea	rsi, [r8 - 1]
0x14dad:	mov	edx, r10d
0x14db0:	mov	rdi, rbx
0x14db3:	call	0x14480


0x1495e:	lea	rax, [rbx + 0x20]
0x14962:	lea	r13, [rsp + 0x24]
0x14967:	mov	qword ptr [rsp + 0x10], rax
0x1496c:	nop	dword ptr [rax]
0x14970:	mov	r12, qword ptr [rbx + 0x50]
0x14974:	mov	rsi, qword ptr [rbx]
0x14977:	mov	rdi, r13
0x1497a:	mov	rax, qword ptr [rbx + 0x20]
0x1497e:	mov	rcx, qword ptr [rsp + 0x10]
0x14983:	mov	dword ptr [rsp + 0xc], r10d
0x14988:	mov	qword ptr [rsp], r8
0x1498c:	sub	r12, r14
0x1498f:	add	rsi, r14
0x14992:	mov	rdx, r12
0x14995:	mov	qword ptr [rsp + 0x18], rax
0x1499a:	call	0x101e0


0x14c45:	movzx	edx, byte ptr [rsi]
0x14c48:	and	edx, 0xffffffc0
0x14c4b:	cmp	dl, 0x80
0x14c4e:	je	0x14c38


0x14c2c:	jmp	0x14951


0x14a2a:	lea	rsi, [rax + 1]
0x14a2e:	cmp	rsi, rcx
0x14a31:	jge	0x14a58


0x14a63:	lea	r13, [r12 - 1]
0x14a68:	mov	edx, r10d
0x14a6b:	mov	rdi, rbx
0x14a6e:	mov	qword ptr [rsp], r8
0x14a72:	mov	rsi, r13
0x14a75:	call	0x14480


0x14a2e:	cmp	rsi, rcx
0x14a31:	jge	0x14a58


0x13a90:	mov	rsi, rbp
0x13a93:	call	0x12640


0x13266:	sub	r11, 1
0x1326a:	js	0x13290


0x13260:	sub	r9, 1
0x13264:	js	0x13290


0x132fd:	shl	rdx, 3
0x13301:	lea	rsi, [rdi + rsi*8]
0x13305:	call	0x2710


0x132b7:	test	rax, rax
0x132ba:	js	0x132fd


0x13220:	cmp	rax, r8
0x13223:	je	0x13236


0x12cc0:	sub	rdx, 1
0x12cc4:	sub	rax, 1
0x12cc8:	mov	rdi, rdx
0x12ccb:	not	rdi
0x12cce:	jmp	0x12c0f


0x12c30:	jge	0x12cd8


0x12caa:	xor	eax, eax
0x12cac:	pop	rbx
0x12cad:	pop	rbp
0x12cae:	pop	r12
0x12cb0:	ret	


0x12c73:	mov	rdi, qword ptr [rbx + 0x10]
0x12c77:	lea	rax, [rcx - 1]
0x12c7b:	add	rcx, rdx
0x12c7e:	mov	qword ptr [rbx + 8], rcx
0x12c82:	nop	word ptr [rax + rax]
0x12c88:	mov	rsi, qword ptr [rdi + r8*8]
0x12c8c:	mov	rcx, qword ptr [rdi + rax*8]
0x12c90:	lea	r9, [rax + rdx]
0x12c94:	lea	r9, [rdi + r9*8]
0x12c98:	cmp	rsi, rcx
0x12c9b:	jle	0x12d10


0x12180:	mov	edx, dword ptr [rax + 8]
0x12183:	shr	edx, 8
0x12186:	and	edx, 0x3ff
0x1218c:	cmp	ebp, edx
0x1218e:	jne	0x12168


0x12168:	add	rax, r8
0x1216b:	sub	rsi, 1
0x1216f:	test	byte ptr [rax + 0xa], 4
0x12173:	je	0x121f0


0x10e06:	cmp	r15, 0x3f
0x10e0a:	jg	0x10e18


0x10e70:	add	r13, 0x28
0x10e74:	cmp	byte ptr [r13 - 8], 0
0x10e79:	jne	0x10e00


0x10cb5:	mov	byte ptr [rdi + 8], 0x1e
0x10cb9:	mov	eax, 2
0x10cbe:	ret	


0x10ca0:	mov	byte ptr [rdi + 8], 0x1c
0x10ca4:	mov	eax, 2
0x10ca9:	ret	


0x10c22:	cmp	al, 0x2e
0x10c24:	jne	0x10c50


0x10be4:	mov	byte ptr [rdi + 8], 0x16
0x10be8:	mov	eax, 1
0x10bed:	ret	


0xfad8:	mov	rdi, qword ptr [r12 + 8]
0xfadd:	test	rdi, rdi
0xfae0:	je	0xfcf8


0xfa2c:	mov	rax, qword ptr [r12 + 0x18]
0xfa31:	cmp	qword ptr [rbp + 0x78], rax
0xfa35:	je	0xfad8


0xfb5a:	jmp	0xfa3b


0xf978:	mov	qword ptr [r12], rbx
0xf97c:	mov	rdi, rbp
0xf97f:	call	0x2a10


0xfee0:	mov	rax, qword ptr [rbx + 0x48]
0xfee4:	mov	rdx, qword ptr [r12 + 0x20]
0xfee9:	mov	esi, 3
0xfeee:	mov	qword ptr [r12], rbx
0xfef2:	mov	rdi, r12
0xfef5:	mov	byte ptr [rdx + rax], 0
0xfef9:	call	0xe9c0


0x7f69:	ucomiss	xmm0, xmm1
0x7f6c:	ja	0x7f75


0x6190:	mov	byte ptr [rsp + 0x34], 1
0x6195:	jmp	0x5fc4


0x61e0:	cmp	dl, 0x37
0x61e3:	jle	0x61c1


0x61c1:	lea	esi, [r10 + r10*4]
0x61c5:	mov	rbx, rcx
0x61c8:	lea	r10d, [rdx + rsi*2 - 0x30]
0x61cd:	cmp	eax, 9
0x61d0:	jbe	0x61a3


0x61ea:	movsx	r11d, byte ptr [rbx + 2]
0x61ef:	mov	r10d, 0x7fffffff
0x61f5:	add	rbx, 2
0x61f9:	mov	r13d, r11d
0x61fc:	lea	eax, [r11 - 0x30]
0x6200:	jmp	0x61cd


0x6208:	mov	edi, r11d
0x620b:	mov	rbx, rcx
0x620e:	mov	r10d, 0x7fffffff
0x6214:	jmp	0x601c


0x602b:	cmp	r13b, 0x7a
0x602f:	ja	0x6090


0x6028:	xor	r11d, r11d
0x602b:	cmp	r13b, 0x7a
0x602f:	ja	0x6090


0x2660:	jmp	qword ptr [rip + 0x22578a]




0x1f7f1:	cmp	esi, 1
0x1f7f4:	jne	0x1f858


0x1f8ab:	cmp	esi, 8
0x1f8ae:	jne	0x1f858


0x1f850:	cmp	esi, 0x400
0x1f856:	je	0x1f8b0


0x1f896:	jmp	0x1f800


0x1f858:	mov	eax, dword ptr [rsp]
0x1f85b:	cmp	eax, 0x2f
0x1f85e:	ja	0x1f99a


0x1e6e0:	mov	r14, qword ptr [r12]
0x1e6e4:	cmp	r14, rcx
0x1e6e7:	ja	0x1e551


0x1e551:	lea	r14, [rcx + 1]
0x1e555:	mov	r13, r14
0x1e558:	mov	rdi, r14
0x1e55b:	shl	rdi, 4
0x1e55f:	mov	qword ptr [rsp + 0x20], r9
0x1e564:	mov	qword ptr [rsp + 0x18], rdx
0x1e569:	mov	qword ptr [rsp + 0x10], rsi
0x1e56e:	mov	qword ptr [rsp + 8], r8
0x1e573:	call	0x2780


0x1b438:	cmp	eax, 1
0x1b43b:	mov	byte ptr [rbp], r12b
0x1b43f:	mov	byte ptr [rbp + 8], 1
0x1b443:	jle	0x1b890


0x1b915:	jmp	0x1b438


0x1b451:	mov	edi, r8d
0x1b454:	mov	dword ptr [rsp], r8d
0x1b458:	call	0x2770


0x1b8d9:	cmp	dword ptr [rcx + rdi + 4], -1
0x1b8de:	je	0x1b97f


0x1b15a:	cmp	rax, r12
0x1b15d:	jge	0x1b228


0x1b1dd:	mov	rax, qword ptr [r10 + 0x18]
0x1b1e1:	mov	rax, qword ptr [rax + r11*8]
0x1b1e5:	add	rax, qword ptr [r10]
0x1b1e8:	add	rax, qword ptr [r10 + 0x28]
0x1b1ec:	movzx	r9d, byte ptr [rax]
0x1b1f0:	test	r9b, 0x80
0x1b1f4:	jne	0x1b149


0x1b1ce:	mov	rax, qword ptr [r10 + 0x10]
0x1b1d2:	cmp	dword ptr [rax + r11*4], -1
0x1b1d7:	je	0x1b149


0x1b172:	add	rax, 1
0x1b176:	mov	qword ptr [r10 + 0x48], rax
0x1b17a:	mov	rax, qword ptr [rbx + 8]
0x1b17e:	mov	byte ptr [rax + r14], 0
0x1b183:	movzx	eax, byte ptr [rbp + 8]
0x1b187:	cmp	al, 0x1c
0x1b189:	je	0x1b28b


0x1b136:	movzx	eax, byte ptr [rbp + 8]
0x1b13a:	mov	r11, qword ptr [r10 + 0x48]
0x1b13e:	mov	r12, qword ptr [r10 + 0x68]
0x1b142:	cmp	al, 0x1e
0x1b144:	movsxd	r14, r8d
0x1b147:	je	0x1b1b0


0x1aa33:	lea	rax, [rsp + 0x60]
0x1aa38:	mov	qword ptr [rsp + 0x20], 0
0x1aa41:	mov	qword ptr [rsp + 0x48], rbx
0x1aa46:	mov	r15, r13
0x1aa49:	mov	qword ptr [rsp + 0x38], rax
0x1aa4e:	jmp	0x1aa72


0x191e0:	cmp	qword ptr [rdi + 0x60], 0
0x191e5:	je	0x1a040


0x18453:	mov	rsi, rax
0x18456:	cmp	rsi, rcx
0x18459:	jg	0x18430


0x18600:	lea	rcx, [r8 + 1]
0x18604:	mov	rdi, rsi
0x18607:	jmp	0x18403


0x18403:	cmp	rcx, rdi
0x18406:	jge	0x1845b


0x18676:	lea	rax, [r13*8]
0x1867e:	mov	r12, qword ptr [rsp + 0x70]
0x18683:	mov	rbp, qword ptr [rsp + 0x38]
0x18688:	mov	qword ptr [rsp + 0x50], rax
0x1868d:	lea	rax, [r13 + r13*2]
0x18692:	lea	r8, [r12 + r12*4]
0x18696:	shl	rax, 3
0x1869a:	mov	qword ptr [rsp + 0x58], rax
0x1869f:	lea	r15, [r8*8]
0x186a7:	jmp	0x187dd


0x18500:	cmp	qword ptr [rbx + 0x20], 0
0x18505:	mov	r11, qword ptr [rbx]
0x18508:	jle	0x18b72


0x184d9:	add	qword ptr [rsp + 0x28], 1
0x184df:	mov	rax, qword ptr [rsp + 0x28]
0x184e4:	cmp	rax, qword ptr [r14 + 0xe8]
0x184eb:	jge	0x18b61


0x18656:	cmp	r13, qword ptr [rax]
0x18659:	jne	0x18648


0x17047:	movzx	ebx, byte ptr [rsi + rax]
0x1704b:	lea	edx, [rbx - 0x80]
0x1704e:	cmp	dl, 0x3f
0x17051:	jbe	0x1703a


0x17024:	movsxd	rdi, ebp
0x17027:	add	r8, rdi
0x1702a:	cmp	rcx, r8
0x1702d:	jl	0x16f40


0x17078:	cmp	dl, 0x87
0x1707b:	jbe	0x16f40


0x17081:	mov	ebp, 5
0x17086:	jmp	0x17024


0x17090:	cmp	al, 0xfc
0x17092:	jne	0x1709d


0x16dc6:	mov	rax, qword ptr [rsp + 0x38]
0x16dcb:	add	rax, 1
0x16dcf:	jmp	0x16af4


0x16a8c:	lea	rcx, [rax + rdi + 0x10]
0x16a91:	mov	eax, dword ptr [rcx + 8]
0x16a94:	and	eax, 0x2000ff
0x16a99:	cmp	eax, 0x200001
0x16a9e:	jne	0x16dc6


0x16d2a:	mov	rax, qword ptr [rsp + 8]
0x16d2f:	mov	rcx, qword ptr [rax]
0x16d32:	jmp	0x16cc5


0x16b9c:	mov	r15, r12
0x16b9f:	mov	r14, qword ptr [rsp + 0x40]
0x16ba4:	mov	r12, rbp
0x16ba7:	mov	rbp, r13
0x16baa:	mov	r13d, ebx
0x16bad:	jmp	0x16bbd


0x16b75:	test	byte ptr [r12 + 0x20], 1
0x16b7b:	jne	0x16c6f


0x16c6f:	mov	r12, qword ptr [rsp + 0x40]
0x16c74:	mov	r13, qword ptr [rsp + 0x48]
0x16c79:	mov	byte ptr [rsp + 0x54], 0
0x16c7e:	nop	
0x16c80:	xor	edi, edi
0x16c82:	mov	qword ptr [r12], 0
0x16c8a:	mov	rcx, r12
0x16c8d:	mov	edx, 1
0x16c92:	mov	rsi, r13
0x16c95:	call	0x101e0


0x16e3d:	jmp	0x16d94


0x16d34:	movdqa	xmm0, xmmword ptr [rip + 0xc2c4]
0x16d3c:	movups	xmmword ptr [rbp], xmm0
0x16d40:	movups	xmmword ptr [rbp + 0x10], xmm0
0x16d44:	movups	xmmword ptr [rbp + 0x20], xmm0
0x16d48:	movups	xmmword ptr [rbp + 0x30], xmm0
0x16d4c:	movups	xmmword ptr [rbp + 0x40], xmm0
0x16d50:	movups	xmmword ptr [rbp + 0x50], xmm0
0x16d54:	movups	xmmword ptr [rbp + 0x60], xmm0
0x16d58:	movups	xmmword ptr [rbp + 0x70], xmm0
0x16d5c:	movups	xmmword ptr [rbp + 0x80], xmm0
0x16d63:	movups	xmmword ptr [rbp + 0x90], xmm0
0x16d6a:	movups	xmmword ptr [rbp + 0xa0], xmm0
0x16d71:	movups	xmmword ptr [rbp + 0xb0], xmm0
0x16d78:	movups	xmmword ptr [rbp + 0xc0], xmm0
0x16d7f:	movups	xmmword ptr [rbp + 0xd0], xmm0
0x16d86:	movups	xmmword ptr [rbp + 0xe0], xmm0
0x16d8d:	movups	xmmword ptr [rbp + 0xf0], xmm0
0x16d94:	mov	rax, qword ptr [rsp + 0x30]
0x16d99:	or	byte ptr [rax + 0x38], 1
0x16d9d:	mov	rax, qword ptr [rsp + 0x168]
0x16da5:	xor	rax, qword ptr fs:[0x28]
0x16dae:	jne	0x16e42


0x14d18:	mov	qword ptr [rbx + 0x30], rdx
0x14d1c:	mov	qword ptr [rbx + 0x38], rdx
0x14d20:	jmp	0x14883


0x14cf0:	mov	r15, qword ptr [rbx + 0x28]
0x14cf4:	mov	rcx, qword ptr [rbx + 0x78]
0x14cf8:	mov	rsi, qword ptr [rbx]
0x14cfb:	add	rsi, rdx
0x14cfe:	movzx	esi, byte ptr [rsi + r15]
0x14d03:	movzx	esi, byte ptr [rcx + rsi]
0x14d07:	mov	rcx, qword ptr [rbx + 8]
0x14d0b:	mov	byte ptr [rcx + rdx], sil
0x14d0f:	add	rdx, 1
0x14d13:	cmp	rax, rdx
0x14d16:	jne	0x14cf0


0x14af8:	movzx	eax, byte ptr [rbx + 0x8b]
0x14aff:	jmp	0x14bcc


0x14d6c:	xor	edx, edx
0x14d6e:	cmp	byte ptr [rbx + 0x8d], 0
0x14d75:	setne	dl
0x14d78:	add	edx, edx
0x14d7a:	nop	word ptr [rax + rax]
0x14d80:	mov	dword ptr [rbx + 0x70], edx
0x14d83:	jmp	0x14af8


0x14c38:	sub	rsi, 1
0x14c3c:	cmp	rcx, rsi
0x14c3f:	ja	0x14951


0x14c50:	mov	rdx, qword ptr [rbx + 0x58]
0x14c54:	mov	rcx, qword ptr [rbx + 0x78]
0x14c58:	mov	r14, rsi
0x14c5b:	add	rdx, r12
0x14c5e:	sub	rdx, rsi
0x14c61:	test	rcx, rcx
0x14c64:	jne	0x14eb2


0x14a58:	lea	r12, [rax + 1]
0x14a5c:	cmp	rdx, rbp
0x14a5f:	cmovge	r12, rax
0x14a63:	lea	r13, [r12 - 1]
0x14a68:	mov	edx, r10d
0x14a6b:	mov	rdi, rbx
0x14a6e:	mov	qword ptr [rsp], r8
0x14a72:	mov	rsi, r13
0x14a75:	call	0x14480


0x1326c:	mov	rax, qword ptr [r13 + r9*8]
0x13271:	jmp	0x1322d


0x12c0f:	test	rdi, rdi
0x12c12:	jns	0x12c50


0x12c36:	sub	rdx, 1
0x12c3a:	sub	rbp, 1
0x12c3e:	mov	rdi, rdx
0x12c41:	mov	qword ptr [rcx + rbp*8], rsi
0x12c45:	not	rdi
0x12c48:	test	rdi, rdi
0x12c4b:	js	0x12c14


0x12cd8:	sub	rax, 1
0x12cdc:	jmp	0x12c0f


0x12d10:	sub	rax, 1
0x12d14:	mov	qword ptr [r9], rcx
0x12d17:	jns	0x12c88


0x12c9d:	sub	r8, 1
0x12ca1:	sub	rdx, 1
0x12ca5:	mov	qword ptr [r9], rsi
0x12ca8:	jne	0x12c88


0x12190:	call	0x11160


0x12175:	test	rsi, rsi
0x12178:	jle	0x121f0


0x10e0c:	movzx	eax, word ptr [r13 + 0x22]
0x10e11:	test	qword ptr [rsp + 0x18], rax
0x10e16:	je	0x10e70


0x10e18:	mov	rax, qword ptr [rbp + 0x28]
0x10e1c:	mov	rax, qword ptr [rax + rbx + 0x10]
0x10e21:	mov	rcx, qword ptr [rax]
0x10e24:	cmp	qword ptr [rsp + 0x10], rcx
0x10e29:	je	0x10ef0


0x10e7b:	mov	rbx, qword ptr [rsp + 0x38]
0x10e80:	mov	r10, r12
0x10e83:	mov	r12, qword ptr [rsp + 0x30]
0x10e88:	mov	r14, rbp
0x10e8b:	add	rbx, 1
0x10e8f:	cmp	qword ptr [r12 + 8], rbx
0x10e94:	jg	0x10d85


0x10e00:	cmp	qword ptr [r13], r14
0x10e04:	jne	0x10e70


0x10c26:	mov	byte ptr [rdi + 8], 0x1a
0x10c2a:	mov	eax, 2
0x10c2f:	ret	


0xfcf8:	mov	esi, 3
0xfcfd:	mov	rdi, r12
0xfd00:	call	0xe9c0


0xfae6:	test	dh, 0x10
0xfae9:	jne	0xfce2


0xfa3b:	test	byte ptr [rbp + 0x72], 2
0xfa3f:	jne	0xff20


0x61a3:	movsx	r11d, byte ptr [rbx + 1]
0x61a8:	cmp	r10d, 0xccccccc
0x61af:	lea	rcx, [rbx + 1]
0x61b3:	mov	r13d, r11d
0x61b6:	lea	eax, [r11 - 0x30]
0x61ba:	jg	0x61e5


0x61d2:	mov	edi, r11d
0x61d5:	jmp	0x601c


0x61cd:	cmp	eax, 9
0x61d0:	jbe	0x61a3


0x6031:	lea	rsi, [rip + 0x1b700]
0x6038:	movzx	eax, r13b
0x603c:	movsxd	rax, dword ptr [rsi + rax*4]
0x6040:	add	rax, rsi
0x6043:	jmp	rax


0x6090:	lea	rax, [rbx - 1]
0x6094:	mov	r13d, 1
0x609a:	mov	rdx, rax
0x609d:	lea	rax, [rax - 1]
0x60a1:	add	r13d, 1
0x60a5:	cmp	byte ptr [rax + 1], 0x25
0x60a9:	jne	0x609a




0x1f864:	add	rax, qword ptr [rsp + 0x10]
0x1f869:	mov	rdx, qword ptr [rax]
0x1f86c:	mov	edi, ebp
0x1f86e:	xor	eax, eax
0x1f870:	call	0x24a0


0x1f99a:	mov	rax, qword ptr [rsp + 8]
0x1f99f:	jmp	0x1f869


0x1e6ed:	test	r14, r14
0x1e6f0:	mov	r13, r14
0x1e6f3:	jg	0x1e558


0x1b1fa:	cmp	dword ptr [r10 + 0x90], 1
0x1b202:	mov	eax, 1
0x1b207:	je	0x1b216


0x1b28b:	mov	dword ptr [rbx], 2
0x1b291:	xor	eax, eax
0x1b293:	jmp	0x1b0a1


0x1b18f:	cmp	al, 0x1e
0x1b191:	je	0x1b27e


0x1aa72:	mov	rax, qword ptr [rsp + 0x10]
0x1aa77:	mov	rdi, qword ptr [rsp + 0x20]
0x1aa7c:	mov	rax, qword ptr [rax + 0x10]
0x1aa80:	mov	r14, qword ptr [rax + rdi*8]
0x1aa84:	mov	rax, r14
0x1aa87:	shl	rax, 4
0x1aa8b:	add	rax, qword ptr [r12]
0x1aa8f:	cmp	r14, qword ptr [r15 + 0x10]
0x1aa93:	movzx	eax, byte ptr [rax + 8]
0x1aa97:	jne	0x1aa50


0x191eb:	cmp	qword ptr [rax + 0x10], 0
0x191f0:	jne	0x19228


0x187dd:	mov	rax, qword ptr [r14 + 0xd8]
0x187e4:	add	rax, r15
0x187e7:	cmp	r13, qword ptr [rax]
0x187ea:	jne	0x187c8


0x18b72:	mov	r12, qword ptr [rsp + 8]
0x18b77:	jmp	0x18842


0x1850e:	mov	rcx, qword ptr [rsp + 8]
0x18513:	mov	r8, r13
0x18516:	xor	ebp, ebp
0x18518:	mov	r13, rbx
0x1851b:	mov	rbx, rcx
0x1851e:	jmp	0x1858c


0x184f1:	mov	rax, qword ptr [rsp + 0x50]
0x184f6:	mov	rdx, qword ptr [rax]
0x184f9:	jmp	0x184b6


0x18b61:	mov	r13, qword ptr [rsp + 0x30]
0x18b66:	mov	rax, qword ptr [r14 + 0xc8]
0x18b6d:	jmp	0x18660


0x18648:	add	rax, 0x28
0x1864c:	cmp	byte ptr [rax - 8], 0
0x18650:	je	0x18486


0x1703a:	add	rax, 1
0x1703e:	cmp	rdi, rax
0x17041:	jle	0x16f42


0x17053:	jmp	0x16f40


0x17094:	cmp	dl, 0x83
0x17097:	jbe	0x16f40


0x1709d:	mov	ebp, 6
0x170a2:	jmp	0x17024


0x16af4:	mov	rsi, qword ptr [rsp + 0x38]
0x16af9:	mov	rcx, qword ptr [rsp + 0x40]
0x16afe:	mov	rdi, qword ptr [rsp + 0x48]
0x16b03:	sub	rax, rsi
0x16b06:	mov	qword ptr [rcx], 0
0x16b0d:	mov	r12, rax
0x16b10:	mov	rdx, rax
0x16b13:	call	0x101e0


0x16aa4:	add	rdi, 0x20
0x16aa8:	mov	r13, rdi
0x16aab:	mov	rdi, qword ptr [rsp + 0x38]
0x16ab0:	lea	rax, [rdi + 1]
0x16ab4:	jmp	0x16adb


0x16cc5:	mov	rax, qword ptr [rsp + 0x10]
0x16cca:	mov	rsi, qword ptr [rsp + 0x18]
0x16ccf:	xor	r14d, r14d
0x16cd2:	mov	rax, qword ptr [rcx + rax]
0x16cd6:	mov	r15, qword ptr [rax + rsi]
0x16cda:	nop	word ptr [rax + rax]
0x16ce0:	bt	r15, r14
0x16ce4:	jae	0x16d05


0x16bbd:	mov	qword ptr [r14], 0
0x16bc4:	mov	rax, qword ptr [r15]
0x16bc7:	mov	rdx, r14
0x16bca:	mov	rdi, qword ptr [rsp + 0x38]
0x16bcf:	lea	rbx, [rbp*4]
0x16bd7:	mov	esi, dword ptr [rax + rbp*4]
0x16bda:	call	0x2790


0x16b81:	cmp	qword ptr [r12 + 0x40], 0
0x16b87:	jne	0x16c6f


0x16d94:	mov	rax, qword ptr [rsp + 0x30]
0x16d99:	or	byte ptr [rax + 0x38], 1
0x16d9d:	mov	rax, qword ptr [rsp + 0x168]
0x16da5:	xor	rax, qword ptr fs:[0x28]
0x16dae:	jne	0x16e42


0x14bcc:	test	al, al
0x14bce:	je	0x1484a


0x14c6a:	lea	r13, [rsp + 0x24]
0x14c6f:	add	r12, rbp
0x14c72:	lea	rcx, [rsp + 0x28]
0x14c77:	sub	r12, r14
0x14c7a:	mov	dword ptr [rsp + 0xc], r10d
0x14c7f:	mov	qword ptr [rsp], r8
0x14c83:	mov	rdi, r13
0x14c86:	mov	qword ptr [rsp + 0x28], 0
0x14c8f:	call	0x101e0


0x14eb2:	cmp	rdx, 6
0x14eb6:	mov	edi, 6
0x14ebb:	lea	r11, [rsp + 0x32]
0x14ec0:	cmovle	rdi, rdx
0x14ec4:	sub	edi, 1
0x14ec7:	test	edi, edi
0x14ec9:	movsxd	rax, edi
0x14ecc:	js	0x14ee2


0x132f0:	sub	rax, 1
0x132f4:	mov	qword ptr [r10], rcx
0x132f7:	cmp	rax, -1
0x132fb:	jne	0x132c0


0x132d5:	sub	r9, 1
0x132d9:	sub	rdx, 1
0x132dd:	mov	qword ptr [r10], r8
0x132e0:	jne	0x132c0


0x12d1d:	lea	rsi, [rdi + rbp*8]
0x12d21:	shl	rdx, 3
0x12d25:	call	0x2710


0x12c88:	mov	rsi, qword ptr [rdi + r8*8]
0x12c8c:	mov	rcx, qword ptr [rdi + rax*8]
0x12c90:	lea	r9, [rax + rdx]
0x12c94:	lea	r9, [rdi + r9*8]
0x12c98:	cmp	rsi, rcx
0x12c9b:	jle	0x12d10


0x10ef0:	mov	r15d, dword ptr [rsp + 0x20]
0x10ef5:	add	rsp, 0x48
0x10ef9:	pop	rbx
0x10efa:	pop	rbp
0x10efb:	mov	eax, r15d
0x10efe:	and	eax, 1
0x10f01:	pop	r12
0x10f03:	neg	eax
0x10f05:	pop	r13
0x10f07:	pop	r14
0x10f09:	pop	r15
0x10f0b:	ret	


0x10e2f:	mov	esi, dword ptr [rsp + 0x20]
0x10e33:	mov	rdi, qword ptr [rsp]
0x10e37:	mov	r8, r12
0x10e3a:	mov	rdx, r15
0x10e3d:	call	0x10ce0


0xfaef:	mov	rcx, qword ptr [rbp + 0x30]
0xfaf3:	mov	edx, 0xffffffff
0xfaf8:	mov	rsi, rbp
0xfafb:	mov	rdi, r12
0xfafe:	call	0xe5d0


0xfce2:	and	dh, 0xef
0xfce5:	mov	dword ptr [r12 + 0x48], edx
0xfcea:	call	0xe1b0


0xfa45:	mov	rdi, qword ptr [r12 + 8]
0xfa4a:	test	rdi, rdi
0xfa4d:	je	0xfa5d


0xff20:	mov	edi, dword ptr [rbp + 0x44]
0xff23:	call	0x2640


0x60ab:	test	r10d, r10d
0x60ae:	mov	eax, 0
0x60b3:	movsxd	r13, r13d
0x60b6:	cmovns	eax, r10d
0x60ba:	mov	qword ptr [rsp + 0x38], rdx
0x60bf:	mov	r14, r13
0x60c2:	cdqe	
0x60c4:	mov	rdx, r15
0x60c7:	mov	rbp, rbx
0x60ca:	cmp	rax, r13
0x60cd:	not	rdx
0x60d0:	cmovae	r14, rax
0x60d4:	cmp	rdx, r14
0x60d7:	jbe	0x5f3f


0x609a:	mov	rdx, rax
0x609d:	lea	rax, [rax - 1]
0x60a1:	add	r13d, 1
0x60a5:	cmp	byte ptr [rax + 1], 0x25
0x60a9:	jne	0x609a


0x1f869:	mov	rdx, qword ptr [rax]
0x1f86c:	mov	edi, ebp
0x1f86e:	xor	eax, eax
0x1f870:	call	0x24a0


0x1e558:	mov	rdi, r14
0x1e55b:	shl	rdi, 4
0x1e55f:	mov	qword ptr [rsp + 0x20], r9
0x1e564:	mov	qword ptr [rsp + 0x18], rdx
0x1e569:	mov	qword ptr [rsp + 0x10], rsi
0x1e56e:	mov	qword ptr [rsp + 8], r8
0x1e573:	call	0x2780


0x1b216:	add	rax, r11
0x1b219:	mov	qword ptr [r10 + 0x48], rax
0x1b21d:	jmp	0x1b15a


0x1b209:	mov	rsi, r11
0x1b20c:	mov	rdi, r10
0x1b20f:	call	0x125f0


0x1b27e:	mov	dword ptr [rbx], 4
0x1b284:	xor	eax, eax
0x1b286:	jmp	0x1b0a1


0x1b197:	cmp	al, 0x1a
0x1b199:	je	0x1b271


0x1aa99:	cmp	rbp, qword ptr [r15 + 0x18]
0x1aa9d:	jne	0x1aa50


0x1aa50:	cmp	al, 4
0x1aa52:	je	0x1add8


0x191f2:	cmp	qword ptr [rdx + 0x10], 0
0x191f7:	jne	0x19228


0x19228:	cmp	qword ptr [rsp + 0x270], 0
0x19231:	mov	dword ptr [rsp + 0x58], 1
0x19239:	je	0x195c0


0x187ec:	mov	rdi, qword ptr [rsp + 8]
0x187f1:	cmp	rdi, qword ptr [rax + 8]
0x187f5:	jne	0x187c8


0x187c8:	add	r12, 1
0x187cc:	add	r15, 0x28
0x187d0:	cmp	r12, qword ptr [r14 + 0xc8]
0x187d7:	jge	0x18350


0x18842:	cmp	qword ptr [rsp + 8], r11
0x18847:	jl	0x184d9


0x1858c:	mov	rax, qword ptr [r13 + 0x28]
0x18590:	mov	r9, qword ptr [rax + rbp*8]
0x18594:	mov	r15, qword ptr [r9 + 8]
0x18598:	mov	rdx, r15
0x1859b:	sub	rdx, r11
0x1859e:	test	rdx, rdx
0x185a1:	lea	r12, [rdx + rbx]
0x185a5:	jle	0x18553


0x184b6:	mov	rax, qword ptr [r14 + 0xf8]
0x184bd:	mov	rbx, qword ptr [rsp + 0x28]
0x184c2:	mov	rdi, qword ptr [rsp + 0x58]
0x184c7:	mov	rbx, qword ptr [rax + rbx*8]
0x184cb:	mov	rax, qword ptr [rbx + 8]
0x184cf:	shl	rax, 4
0x184d3:	cmp	rdi, qword ptr [rdx + rax]
0x184d7:	je	0x18500


0x18660:	cmp	qword ptr [rsp + 0x70], rax
0x18665:	mov	dword ptr [rsp + 0x8c], 0
0x18670:	jge	0x18350


0x16adb:	movzx	edx, byte ptr [rcx]
0x16ade:	add	rax, 1
0x16ae2:	mov	byte ptr [rax - 1], dl
0x16ae5:	mov	rdx, rax
0x16ae8:	sub	rdx, rdi
0x16aeb:	add	rdx, r12
0x16aee:	cmp	qword ptr [rsi + 0x10], rdx
0x16af2:	ja	0x16ac0


0x2790:	jmp	qword ptr [rip + 0x2256f2]


0x1484a:	add	qword ptr [rbx + 8], rbp
0x1484e:	mov	rax, qword ptr [rbx + 0x58]
0x14852:	sub	qword ptr [rbx + 0x68], rbp
0x14856:	mov	qword ptr [rbx + 0x28], r15
0x1485a:	sub	rax, rbp
0x1485d:	cmp	dword ptr [rbx + 0x90], 1
0x14864:	mov	qword ptr [rbx + 0x58], rax
0x14868:	jle	0x14908


0x14bd4:	jmp	0x1484e


0x14ee2:	mov	rsi, r11
0x14ee5:	jmp	0x14c6a


0x14ece:	movzx	edi, byte ptr [rsi + rax]
0x14ed2:	movzx	edi, byte ptr [rcx + rdi]
0x14ed6:	mov	byte ptr [r11 + rax], dil
0x14eda:	sub	rax, 1
0x14ede:	test	eax, eax
0x14ee0:	jns	0x14ece


0x132c0:	mov	r8, qword ptr [rdi + r9*8]
0x132c4:	mov	rcx, qword ptr [rdi + rax*8]
0x132c8:	lea	r10, [rax + rdx]
0x132cc:	lea	r10, [rdi + r10*8]
0x132d0:	cmp	r8, rcx
0x132d3:	jle	0x132f0


0x132e2:	xor	edx, edx
0x132e4:	jmp	0x13301


0xfa5d:	mov	edi, dword ptr [r12 + 0x48]
0xfa62:	mov	r10d, 6
0xfa68:	lea	rsi, [r12 + 0x58]
0xfa6d:	mov	word ptr [rbp + 0x70], r10w
0xfa72:	mov	rdx, rbp
0xfa75:	call	0xe900


0xfa4f:	call	0xe1b0


0x60dd:	test	r12, r12
0x60e0:	je	0x614e


0x1b271:	mov	dword ptr [rbx], 3
0x1b277:	xor	eax, eax
0x1b279:	jmp	0x1b0a1


0x1b19f:	xor	eax, eax
0x1b1a1:	jmp	0x1b0a1


0x1aa9f:	jmp	0x1aa58


0x1add8:	mov	rax, qword ptr [rsp + 8]
0x1addd:	mov	r13, qword ptr [rsp + 0x40]
0x1ade2:	mov	rbx, qword ptr [rsp + 0x48]
0x1ade7:	add	r13, qword ptr [rax + 0xd8]
0x1adee:	lea	rax, [r14 + r14*2]
0x1adf2:	shl	rax, 3
0x1adf6:	mov	qword ptr [rsp + 0x30], rax
0x1adfb:	lea	rax, [r14*8]
0x1ae03:	mov	qword ptr [rsp + 0x28], rax
0x1ae08:	mov	rax, r15
0x1ae0b:	mov	r15, r13
0x1ae0e:	mov	r13, rbx
0x1ae11:	mov	rbx, rax
0x1ae14:	jmp	0x1af7e


0x1aa58:	mov	rcx, qword ptr [rsp + 0x10]
0x1aa5d:	add	qword ptr [rsp + 0x20], 1
0x1aa63:	mov	rax, qword ptr [rsp + 0x20]
0x1aa68:	cmp	rax, qword ptr [rcx + 8]
0x1aa6c:	jge	0x1b02b


0x191f9:	cmp	qword ptr [rcx + 0x10], 0
0x191fe:	je	0x19206


0x195c0:	mov	rax, qword ptr [rsp + 0x38]
0x195c5:	cmp	qword ptr [rax + 0x98], 0
0x195cd:	setne	al
0x195d0:	movzx	eax, al
0x195d3:	mov	dword ptr [rsp + 0x58], eax
0x195d7:	jmp	0x1923f


0x1923f:	mov	r11, qword ptr [rsp + 0x38]
0x19244:	mov	rax, qword ptr [rsp + 0x48]
0x19249:	mov	rdi, qword ptr [rsp + 0x88]
0x19251:	mov	rsi, qword ptr [r11 + 0x10]
0x19255:	mov	rbx, qword ptr [rax + 0x28]
0x19259:	mov	edx, dword ptr [r11 + 0xb4]
0x19260:	mov	rax, qword ptr [rax + 0x18]
0x19264:	mov	qword ptr [rsp + 0x178], rdi
0x1926c:	mov	qword ptr [rsp + 0x170], rdi
0x19274:	mov	qword ptr [rsp + 8], rsi
0x19279:	lea	rsi, [rsi + 1]
0x1927d:	mov	qword ptr [rsp + 0xb0], rbx
0x19285:	movsxd	rcx, edx
0x19288:	shr	rax, 0x16
0x1928c:	mov	qword ptr [rsp + 0x198], rbx
0x19294:	and	eax, 1
0x19297:	cmp	rsi, rcx
0x1929a:	mov	dword ptr [rsp + 0x1b0], edx
0x192a1:	cmovl	rsi, rcx
0x192a5:	lea	rcx, [rdi + 1]
0x192a9:	mov	byte ptr [rsp + 0x1a8], al
0x192b0:	mov	qword ptr [rsp + 0x188], rdi
0x192b8:	mov	qword ptr [rsp + 0x180], rdi
0x192c0:	cmp	rsi, rcx
0x192c3:	mov	rdi, qword ptr [rsp]
0x192c7:	cmovg	rsi, rcx
0x192cb:	test	rbx, rbx
0x192ce:	mov	rcx, qword ptr [rsp + 0x78]
0x192d3:	setne	bl
0x192d6:	or	eax, ebx
0x192d8:	mov	byte ptr [rsp + 0x1ab], al
0x192df:	movzx	eax, byte ptr [r11 + 0xb0]
0x192e7:	mov	qword ptr [rsp + 0x120], rcx
0x192ef:	mov	edx, eax
0x192f1:	shr	al, 3
0x192f4:	shr	dl, 2
0x192f7:	and	eax, 1
0x192fa:	and	edx, 1
0x192fd:	mov	byte ptr [rsp + 0x1aa], al
0x19304:	mov	byte ptr [rsp + 0x1a9], dl
0x1930b:	call	0x11050


0x187f7:	mov	rbx, qword ptr [rax + 0x18]
0x187fb:	mov	rax, qword ptr [rax + 0x10]
0x187ff:	mov	rdx, qword ptr [rbp + 0x30]
0x18803:	mov	rcx, rbx
0x18806:	sub	rcx, rax
0x18809:	mov	qword ptr [rsp + 0x20], rcx
0x1880e:	je	0x186b0


0x1884d:	mov	rax, r12
0x18850:	lea	r15, [r11*8]
0x18858:	mov	r12, rbx
0x1885b:	mov	rbx, r11
0x1885e:	mov	r11, r13
0x18861:	mov	r13, rax
0x18864:	nop	dword ptr [rax]
0x18868:	mov	rax, rbx
0x1886b:	sub	rax, qword ptr [r12]
0x1886f:	test	rax, rax
0x18872:	jle	0x18895


0x18553:	mov	r8, qword ptr [rsp + 8]
0x18558:	mov	rcx, qword ptr [rsp + 0x30]
0x1855d:	mov	rdx, r9
0x18560:	mov	rsi, r13
0x18563:	mov	rdi, r14
0x18566:	call	0x18100


0x185a7:	cmp	qword ptr [r14 + 0x30], r12
0x185ab:	jge	0x18520


0x16ac0:	mov	rcx, qword ptr [rsi]
0x16ac3:	add	rcx, r13
0x16ac6:	add	r13, 0x10
0x16aca:	mov	edx, dword ptr [rcx + 8]
0x16acd:	and	edx, 0x2000ff
0x16ad3:	cmp	edx, 0x200001
0x16ad9:	jne	0x16af4




0x13301:	lea	rsi, [rdi + rsi*8]
0x13305:	call	0x2710


0x614e:	add	r15, r14
0x6151:	jmp	0x5f90


0x60e2:	cmp	r13, rax
0x60e5:	jae	0x6133


0x1af7e:	cmp	r14, qword ptr [r15]
0x1af81:	je	0x1ae20


0x1b02b:	cmp	qword ptr [rsp + 0x60], 0
0x1b031:	je	0x1aad0


0x19206:	test	rbp, rbp
0x19209:	je	0x1921c


0x19200:	cmp	byte ptr [rsi + 0x38], 0
0x19204:	js	0x19228


0x186b0:	mov	rcx, qword ptr [rbp + 0x28]
0x186b4:	mov	rdi, qword ptr [rsp + 0x58]
0x186b9:	mov	rcx, qword ptr [rcx + rdi + 0x10]
0x186be:	mov	rcx, qword ptr [rcx]
0x186c1:	lea	rcx, [rcx + rcx*2]
0x186c5:	lea	rcx, [rdx + rcx*8]
0x186c9:	mov	qword ptr [rsp + 0x18], rcx
0x186ce:	add	rbx, qword ptr [rsp + 8]
0x186d3:	mov	edx, dword ptr [r14 + 0xa0]
0x186da:	mov	rdi, r14
0x186dd:	sub	rbx, rax
0x186e0:	lea	rsi, [rbx - 1]
0x186e4:	call	0x14480


0x18814:	mov	rcx, qword ptr [rbp + 0x18]
0x18818:	mov	rdi, qword ptr [rsp + 0x50]
0x1881d:	mov	rcx, qword ptr [rcx + rdi]
0x18821:	lea	rcx, [rcx + rcx*2]
0x18825:	lea	rcx, [rdx + rcx*8]
0x18829:	mov	qword ptr [rsp + 0x18], rcx
0x1882e:	jmp	0x186ce


0x18895:	mov	rax, qword ptr [r14 + 0xb8]
0x1889c:	mov	rax, qword ptr [rax + r15]
0x188a0:	test	rax, rax
0x188a3:	je	0x189af


0x18874:	cmp	qword ptr [r14 + 0x30], r13
0x18878:	jle	0x18b01


0x185b1:	cmp	qword ptr [r14 + 0x58], r12
0x185b5:	mov	qword ptr [rsp + 0x18], rdx
0x185ba:	mov	qword ptr [rsp + 0x10], r9
0x185bf:	jl	0x18a18


0x18520:	lea	rsi, [r8 + r11]
0x18524:	lea	rdi, [r8 + rbx]
0x18528:	mov	qword ptr [rsp + 0x20], r9
0x1852d:	mov	qword ptr [rsp + 0x18], r11
0x18532:	mov	qword ptr [rsp + 0x10], r8
0x18537:	call	0x2680


0x5f90:	movzx	eax, byte ptr [rbp + 1]
0x5f94:	lea	rbx, [rbp + 1]
0x5f98:	mov	r10, -1
0x5f9f:	test	al, al
0x5fa1:	je	0x5f42


0x60e7:	mov	eax, dword ptr [rsp + 8]
0x60eb:	movsxd	rbx, r10d
0x60ee:	sub	rbx, r13
0x60f1:	cmp	eax, 0x30
0x60f4:	je	0x7323


0x6133:	cmp	byte ptr [rsp + 0x34], 0
0x6138:	je	0x7268


0x1ae20:	mov	rax, qword ptr [r15 + 0x18]
0x1ae24:	sub	rax, qword ptr [r15 + 0x10]
0x1ae28:	test	rax, rax
0x1ae2b:	lea	r9, [rbp + rax]
0x1ae30:	je	0x1af90


0x1af87:	mov	rax, r15
0x1af8a:	jmp	0x1af70


0x1b037:	xor	eax, eax
0x1b039:	jmp	0x1b00a


0x1921c:	xor	r12d, r12d
0x1921f:	xor	ebp, ebp
0x19221:	nop	dword ptr [rax]
0x19228:	cmp	qword ptr [rsp + 0x270], 0
0x19231:	mov	dword ptr [rsp + 0x58], 1
0x19239:	je	0x195c0


0x1920b:	test	r12, r12
0x1920e:	mov	dword ptr [rsp + 0x5c], 1
0x19216:	jne	0x19c39


0x186ce:	add	rbx, qword ptr [rsp + 8]
0x186d3:	mov	edx, dword ptr [r14 + 0xa0]
0x186da:	mov	rdi, r14
0x186dd:	sub	rbx, rax
0x186e0:	lea	rsi, [rbx - 1]
0x186e4:	call	0x14480


0x189af:	add	rbx, 1
0x189b3:	add	r15, 8
0x189b7:	cmp	qword ptr [rsp + 8], rbx
0x189bc:	jge	0x18868


0x188a9:	mov	rcx, qword ptr [rax + 0x10]
0x188ad:	test	rcx, rcx
0x188b0:	jle	0x189af


0x18b01:	cmp	qword ptr [r14 + 0x58], r13
0x18b05:	jle	0x189c2


0x1887e:	movzx	ecx, byte ptr [r11 + rbx - 1]
0x18884:	lea	rax, [r13 + 1]
0x18888:	cmp	byte ptr [r11 + r13], cl
0x1888c:	jne	0x189c2


0x18a18:	mov	rcx, rbx
0x18a1b:	mov	rbx, r13
0x18a1e:	mov	r13, r8
0x18a21:	cmp	qword ptr [rbx + 0x20], rbp
0x18a25:	jg	0x184d9


0x185c5:	mov	rsi, r12
0x185c8:	mov	rdi, r14
0x185cb:	mov	qword ptr [rsp + 0x20], r11
0x185d0:	call	0x11d30


0x7323:	test	rbx, rbx
0x7326:	je	0x6133


0x60fa:	cmp	eax, 0x2b
0x60fd:	je	0x7323


0x7268:	mov	rdi, qword ptr [rsp + 0x38]
0x726d:	mov	rcx, r12
0x7270:	mov	edx, 1
0x7275:	mov	rsi, r13
0x7278:	call	0x2960


0x613e:	mov	rsi, qword ptr [rsp + 0x38]
0x6143:	mov	rdx, r13
0x6146:	mov	rdi, r12
0x6149:	call	0x5e20


0x1af90:	mov	rax, qword ptr [r12 + 0x28]
0x1af95:	mov	rdi, qword ptr [rsp + 0x30]
0x1af9a:	mov	rax, qword ptr [rax + rdi + 0x10]
0x1af9f:	mov	r10, qword ptr [rax]
0x1afa2:	jmp	0x1ae44


0x1ae36:	mov	rax, qword ptr [r12 + 0x18]
0x1ae3b:	mov	rsi, qword ptr [rsp + 0x28]
0x1ae40:	mov	r10, qword ptr [rax + rsi]
0x1ae44:	cmp	r9, qword ptr [rbx + 0x18]
0x1ae48:	jg	0x1af87


0x1af70:	add	r13, 1
0x1af74:	cmp	byte ptr [rax + 0x20], 0
0x1af78:	lea	r15, [rax + 0x28]
0x1af7c:	je	0x1afb0


0x1b00a:	mov	rdi, qword ptr [rsp + 0x90]
0x1b012:	mov	dword ptr [rsp + 8], eax
0x1b016:	call	0x2a10


0x189c2:	mov	r13, r11
0x189c5:	jmp	0x184d9


0x18868:	mov	rax, rbx
0x1886b:	sub	rax, qword ptr [r12]
0x1886f:	test	rax, rax
0x18872:	jle	0x18895


0x188b6:	mov	rdi, qword ptr [rax + 0x18]
0x188ba:	mov	rax, qword ptr [rsp + 0x50]
0x188bf:	xor	edx, edx
0x188c1:	mov	r8, qword ptr [rsp + 0x58]
0x188c6:	mov	rsi, qword ptr [rax]
0x188c9:	jmp	0x188dd


0x18b0b:	lea	esi, [r13 + 1]
0x18b0f:	mov	rdi, r14
0x18b12:	call	0x11be0


0x18892:	mov	r13, rax
0x18895:	mov	rax, qword ptr [r14 + 0xb8]
0x1889c:	mov	rax, qword ptr [rax + r15]
0x188a0:	test	rax, rax
0x188a3:	je	0x189af


0x18a2b:	test	rbp, rbp
0x18a2e:	mov	r12, rcx
0x18a31:	je	0x18842


0x732c:	xor	edx, edx
0x732e:	mov	qword ptr [rsp + 8], rbp
0x7333:	mov	rbp, rdx
0x7336:	nop	word ptr cs:[rax + rax]
0x7340:	mov	rsi, r12
0x7343:	mov	edi, 0x30
0x7348:	add	rbp, 1
0x734c:	call	0x2660


0x6103:	xor	edx, edx
0x6105:	test	rbx, rbx
0x6108:	je	0x6133


0x1ae44:	cmp	r9, qword ptr [rbx + 0x18]
0x1ae48:	jg	0x1af87


0x1ae4e:	mov	rax, qword ptr [rbx]
0x1ae51:	mov	rax, qword ptr [rax + r9*8]
0x1ae55:	test	rax, rax
0x1ae58:	je	0x1af87


0x1afb0:	mov	r15, rbx
0x1afb3:	jmp	0x1aa58


0x188dd:	mov	rbp, qword ptr [rdi + rdx*8]
0x188e1:	mov	rax, rbp
0x188e4:	shl	rax, 4
0x188e8:	add	rax, rsi
0x188eb:	cmp	byte ptr [rax + 8], 9
0x188ef:	jne	0x188d0


0x18a37:	mov	r15, r11
0x18a3a:	jmp	0x1883e


0x610a:	mov	qword ptr [rsp + 8], rbp
0x610f:	mov	rbp, rdx
0x6112:	nop	word ptr [rax + rax]
0x6118:	mov	rsi, r12
0x611b:	mov	edi, 0x20
0x6120:	add	rbp, 1
0x6124:	call	0x2660


0x1ae5e:	mov	rdi, qword ptr [rax + 0x10]
0x1ae62:	lea	rsi, [rax + 0x18]
0x1ae66:	mov	rdx, r10
0x1ae69:	call	0x126a0


0x188f1:	cmp	r8, qword ptr [rax]
0x188f4:	jne	0x188d0


0x188d0:	add	rdx, 1
0x188d4:	cmp	rcx, rdx
0x188d7:	je	0x189af


0x1883e:	lea	r11, [r15 + 1]
0x18842:	cmp	qword ptr [rsp + 8], r11
0x18847:	jl	0x184d9


0x188f6:	cmp	rbp, -1
0x188fa:	je	0x189af


0x18900:	mov	rsi, qword ptr [r12 + 0x10]
0x18905:	mov	rcx, qword ptr [r12]
0x18909:	test	rsi, rsi
0x1890c:	je	0x189d0


0x189d0:	mov	rsi, rbx
0x189d3:	mov	edi, 0x18
0x189d8:	mov	qword ptr [rsp + 0x18], r11
0x189dd:	sub	rsi, rcx
0x189e0:	mov	qword ptr [rsp + 0x10], rcx
0x189e5:	add	rsi, 1
0x189e9:	call	0x26b0


0x18912:	mov	qword ptr [rsp + 0x10], r11
0x18917:	mov	rdx, qword ptr [r12 + 8]
0x1891c:	sub	rsp, 8
0x18920:	push	9
0x18922:	mov	r9, rbx
0x18925:	mov	r8, rbp
0x18928:	mov	rdi, r14
0x1892b:	call	0x170b0


0x185d5:	test	eax, eax
0x185d7:	jne	0x18618


0x185d9:	mov	r8, qword ptr [r14 + 8]
0x185dd:	mov	rdx, qword ptr [rsp + 0x18]
0x185e2:	mov	r9, qword ptr [rsp + 0x10]
0x185e7:	mov	r11, qword ptr [rsp + 0x20]
0x185ec:	jmp	0x18520


0x18618:	mov	rbx, qword ptr [rsp + 0xa8]
0x18620:	xor	rbx, qword ptr fs:[0x28]
0x18629:	jne	0x18b7c


0xfa7a:	pop	rbx
0xfa7b:	mov	rax, rbp
0xfa7e:	pop	rbp
0xfa7f:	pop	r12
0xfa81:	pop	r13
0xfa83:	pop	r14
0xfa85:	ret	


0xfb03:	test	eax, eax
0xfb05:	je	0xfdc2


0xfdc2:	mov	rbp, qword ptr [r12 + 8]
0xfdc7:	jmp	0xfd16


0xfb0b:	call	0x2410


0xfd16:	mov	qword ptr [r12 + 8], 0
0xfd1f:	jmp	0xfc92


0xfc92:	mov	rax, qword ptr [rbp + 8]
0xfc96:	lea	rsi, [rbp + 0x108]
0xfc9d:	mov	rdi, qword ptr [rax + 0x48]
0xfca1:	mov	rax, qword ptr [rax + 0x38]
0xfca5:	cmp	byte ptr [rax + rdi - 1], 0x2f
0xfcaa:	lea	rdx, [rdi - 1]
0xfcae:	cmove	rdi, rdx
0xfcb2:	add	rdi, qword ptr [r12 + 0x20]
0xfcb7:	mov	byte ptr [rdi], 0x2f
0xfcba:	mov	rax, qword ptr [rbp + 0x60]
0xfcbe:	add	rdi, 1
0xfcc2:	lea	rdx, [rax + 1]
0xfcc6:	call	0x2890


0x2890:	jmp	qword ptr [rip + 0x225672]




0x10e42:	cmp	eax, -1
0x10e45:	je	0x10dae


0x10e4b:	test	eax, eax
0x10e4d:	jne	0x10e57


0x10e4f:	mov	esi, dword ptr [rsp + 8]
0x10e53:	test	esi, esi
0x10e55:	jne	0x10ed5


0x10e57:	cmp	r15, 0x3f
0x10e5b:	jg	0x10e70


0x10e5d:	movzx	eax, word ptr [rsp + 0x26]
0x10e62:	and	word ptr [r13 + 0x22], ax
0x10e67:	nop	word ptr [rax + rax]
0x10e70:	add	r13, 0x28
0x10e74:	cmp	byte ptr [r13 - 8], 0
0x10e79:	jne	0x10e00


0x5749:	test	eax, eax
0x574b:	sete	al
0x574e:	jmp	0x5715


0x5715:	test	al, al
0x5717:	jne	0x5672


0x571d:	add	r13, 1
0x5721:	add	rbx, 0x48
0x5725:	cmp	r12, r13
0x5728:	je	0x56d0


0x5672:	xor	ebx, ebx
0x5674:	mov	rdi, rbp
0x5677:	call	0x2a10


0x12195:	test	al, al
0x12197:	je	0x121db


0x121db:	mov	eax, 0xc
0x121e0:	add	rsp, 0x18
0x121e4:	pop	rbx
0x121e5:	pop	rbp
0x121e6:	pop	r12
0x121e8:	pop	r13
0x121ea:	pop	r14
0x121ec:	pop	r15
0x121ee:	ret	


0x12199:	mov	rax, qword ptr [r14 + 0x28]
0x1219d:	mov	edx, ebp
0x1219f:	mov	rdi, r14
0x121a2:	mov	rax, qword ptr [rax + r12 + 0x10]
0x121a7:	mov	r9, qword ptr [rax + 8]
0x121ab:	mov	rsi, r9
0x121ae:	mov	qword ptr [rsp], r9
0x121b2:	call	0x12010


0x12314:	mov	edx, eax
0x12316:	xor	eax, eax
0x12318:	test	dl, dl
0x1231a:	jne	0x121e0


0x12320:	jmp	0x121db


0x12b03:	mov	ebx, eax
0x12b05:	mov	rax, qword ptr [rbp]
0x12b09:	mov	r9, qword ptr [rsp + 0x30]
0x12b0e:	mov	rcx, qword ptr [rsp + 0x20]
0x12b13:	mov	r8, r15
0x12b16:	mov	rdx, r12
0x12b19:	mov	rdi, r13
0x12b1c:	mov	rsi, qword ptr [rax + r14*8]
0x12b20:	call	0x10f10


0x12b25:	cmp	ebx, eax
0x12b27:	je	0x12ba0


0x12ba0:	mov	rax, qword ptr [rsp + 0x38]
0x12ba5:	add	r14, 1
0x12ba9:	cmp	r14, qword ptr [rax]
0x12bac:	jl	0x12ac0


0x12b29:	mov	eax, 1
0x12b2e:	add	rsp, 0x48
0x12b32:	pop	rbx
0x12b33:	pop	rbp
0x12b34:	pop	r12
0x12b36:	pop	r13
0x12b38:	pop	r14
0x12b3a:	pop	r15
0x12b3c:	ret	


0x12ac0:	mov	rax, qword ptr [rbp]
0x12ac4:	mov	rdx, qword ptr [r13 + 0xd8]
0x12acb:	mov	rdi, r13
0x12ace:	mov	r9, qword ptr [rsp + 0x28]
0x12ad3:	mov	r8, qword ptr [rsp + 0x18]
0x12ad8:	mov	rcx, qword ptr [rsp + 0x10]
0x12add:	mov	rsi, qword ptr [rax + r14*8]
0x12ae1:	lea	rax, [rsi + rsi*4]
0x12ae5:	lea	rax, [rdx + rax*8]
0x12ae9:	mov	rdx, qword ptr [rsp + 8]
0x12aee:	mov	rax, qword ptr [rax]
0x12af1:	shl	rax, 4
0x12af5:	add	rax, qword ptr [rdx]
0x12af8:	mov	r12, qword ptr [rax]
0x12afb:	mov	rdx, r12
0x12afe:	call	0x10f10


0x14dc8:	jmp	0x14883


0x1b240:	cmp	byte ptr [rsp + 8], 0x15
0x1b245:	mov	eax, 0xb
0x1b24a:	je	0x1b0ee


0x1b250:	jmp	0x1b0a1


0x13a98:	test	al, al
0x13a9a:	je	0x13a68


0x13d35:	test	al, al
0x13d37:	jne	0x13e3f


0x1487f:	test	eax, eax
0x14881:	jne	0x1488d


0x1488d:	mov	rcx, qword ptr [rsp + 0x38]
0x14892:	xor	rcx, qword ptr fs:[0x28]
0x1489b:	jne	0x14eea


0x148fd:	jmp	0x14883


0x13f15:	test	eax, eax
0x13f17:	mov	dword ptr [rsp + 0x1c], eax
0x13f1b:	jne	0x13f68


0x13f1d:	mov	rdi, qword ptr [rsp + 8]
0x13f22:	mov	rdx, r13
0x13f25:	mov	rsi, r14
0x13f28:	call	0x13cb0


0x13f68:	mov	rcx, qword ptr [rsp + 0x38]
0x13f6d:	xor	rcx, qword ptr fs:[0x28]
0x13f76:	jne	0x13f87


0x18c51:	test	eax, eax
0x18c53:	mov	dword ptr [r13], eax
0x18c57:	jne	0x18d70


0x18c5d:	mov	rax, qword ptr [rbx + 0x48]
0x18c61:	mov	edx, dword ptr [rbx + 0xa0]
0x18c67:	mov	rdi, rbx
0x18c6a:	lea	rsi, [rax - 1]
0x18c6e:	call	0x14480


0x18d36:	test	eax, eax
0x18d38:	mov	dword ptr [r13], eax
0x18d3c:	jne	0x18d70


0x18d3e:	test	byte ptr [rbp + 0x68], 0x40
0x18d42:	je	0x18bf5


0x18d48:	mov	rdx, r15
0x18d4b:	mov	rsi, r14
0x18d4e:	mov	rdi, rbx
0x18d51:	call	0x182a0


0x18d56:	test	eax, eax
0x18d58:	mov	dword ptr [r13], eax
0x18d5c:	jne	0x18d70


0x18d5e:	mov	rax, qword ptr [rbx + 0xb8]
0x18d65:	mov	rbp, qword ptr [rax + r12*8]
0x18d69:	jmp	0x18bf5


0x1ec8d:	add	rsp, 0x20
0x1ec91:	test	eax, eax
0x1ec93:	setne	al
0x1ec96:	add	rsp, 0x18
0x1ec9a:	pop	rbx
0x1ec9b:	movzx	eax, al
0x1ec9e:	pop	rbp
0x1ec9f:	pop	r12
0x1eca1:	pop	r13
0x1eca3:	ret	


0x4028:	mov	byte ptr [rip + 0x2240b9], 1
0x402f:	pop	rbp
0x4030:	ret	


0xe419:	test	eax, eax
0xe41b:	js	0xe405


0xe41d:	mov	edi, eax
0xe41f:	call	0x2640


0xe7f3:	jmp	0xe6d5


0xe6d5:	mov	rcx, qword ptr [rsp + 0xa8]
0xe6dd:	xor	rcx, qword ptr fs:[0x28]
0xe6e6:	mov	eax, ebx
0xe6e8:	jne	0xe825


0xe49f:	jmp	0xe478


0xfa54:	mov	qword ptr [r12 + 8], 0
0xfa5d:	mov	edi, dword ptr [r12 + 0x48]
0xfa62:	mov	r10d, 6
0xfa68:	lea	rsi, [r12 + 0x58]
0xfa6d:	mov	word ptr [rbp + 0x70], r10w
0xfa72:	mov	rdx, rbp
0xfa75:	call	0xe900


0xfcef:	mov	qword ptr [r12 + 8], 0
0xfcf8:	mov	esi, 3
0xfcfd:	mov	rdi, r12
0xfd00:	call	0xe9c0


0x18b17:	test	eax, eax
0x18b19:	jne	0x18618


0x18b1f:	mov	r11, qword ptr [r14 + 8]
0x18b23:	jmp	0x1887e


0x11d8a:	test	eax, eax
0x11d8c:	je	0x11d5f


0x11d8e:	jmp	0x11d66


0x11d66:	pop	rbx
0x11d67:	pop	rbp
0x11d68:	pop	r12
0x11d6a:	ret	


0x11d5b:	test	eax, eax
0x11d5d:	jne	0x11d66


0x137cd:	test	rax, rax
0x137d0:	mov	qword ptr [rbx + 0x10], rax
0x137d4:	je	0x137a2


0x137d6:	mov	qword ptr [rax], rbx
0x137d9:	jmp	0x137a2


0x137ed:	test	rax, rax
0x137f0:	mov	qword ptr [rbx + 8], rax
0x137f4:	je	0x13793


0x137f6:	mov	qword ptr [rax], rbx
0x137f9:	jmp	0x13793


0x13f2d:	mov	rdi, qword ptr [rsp + 0x30]
0x13f32:	mov	qword ptr [rbx + r15*8], rax
0x13f36:	call	0x2a10


0x1a928:	mov	qword ptr [r14], rax
0x1a92b:	mov	eax, dword ptr [rsp + 0x5c]
0x1a92f:	test	eax, eax
0x1a931:	jne	0x1a888


0x1a937:	cmp	qword ptr [rsp + 0x10], 0
0x1a93d:	je	0x1a888


0x1a943:	mov	rax, qword ptr [rsp + 8]
0x1a948:	mov	rax, qword ptr [rax + 0xb8]
0x1a94f:	mov	rdx, qword ptr [rax + rbp*8]
0x1a953:	xor	eax, eax
0x1a955:	test	byte ptr [rdx + 0x68], 0x40
0x1a959:	je	0x1a888


0x1a8d0:	mov	rdx, rax
0x1a8d3:	mov	eax, dword ptr [rsp + 0x60]
0x1a8d7:	test	eax, eax
0x1a8d9:	jne	0x1a888


0x1a8db:	mov	r15, qword ptr [rdx + 0x38]
0x1a8df:	lea	r14, [rdx + 0x38]
0x1a8e3:	test	r15, r15
0x1a8e6:	je	0x1aaf0


0x1aaf0:	mov	rdi, qword ptr [rbx + 8]
0x1aaf4:	mov	qword ptr [rdx + 0x40], 0
0x1aafc:	mov	qword ptr [rsp + 0x20], rdx
0x1ab01:	mov	qword ptr [rdx + 0x38], rdi
0x1ab05:	shl	rdi, 3
0x1ab09:	call	0x2780


0x1a8ec:	mov	rsi, qword ptr [rsp + 0x10]
0x1a8f1:	mov	rdx, r14
0x1a8f4:	mov	rdi, rbx
0x1a8f7:	call	0x131b0


0x1a8fc:	test	eax, eax
0x1a8fe:	mov	dword ptr [rsp + 0x5c], eax
0x1a902:	jne	0x1a888


0x1a904:	cmp	qword ptr [r13 + 0x28], 0
0x1a909:	jne	0x1ab80


0x1a90f:	mov	r14, qword ptr [rsp + 0x18]
0x1a914:	add	r14, qword ptr [r13]
0x1a918:	lea	rdi, [rsp + 0x5c]
0x1a91d:	mov	rdx, rbx
0x1a920:	mov	rsi, r12
0x1a923:	call	0x13cb0


0x1ab80:	mov	rax, qword ptr [rsp + 8]
0x1ab85:	mov	rax, qword ptr [rax + 0xd8]
0x1ab8c:	mov	qword ptr [rsp + 0x20], rax
0x1ab91:	jle	0x1ac6b


0x1ac6b:	mov	dword ptr [rsp + 0x5c], 0
0x1ac73:	jmp	0x1a90f


0x1ab97:	xor	r15d, r15d
0x1ab9a:	nop	word ptr [rax + rax]
0x1aba0:	mov	rax, qword ptr [r13 + 0x30]
0x1aba4:	mov	rdi, qword ptr [rsp + 0x20]
0x1aba9:	mov	rax, qword ptr [rax + r15*8]
0x1abad:	lea	rax, [rax + rax*4]
0x1abb1:	lea	rdx, [rdi + rax*8]
0x1abb5:	cmp	rbp, qword ptr [rdx + 0x10]
0x1abb9:	jle	0x1ac5d


0x1ac5d:	add	r15, 1
0x1ac61:	cmp	r15, qword ptr [r13 + 0x28]
0x1ac65:	jl	0x1aba0


0x1abbf:	cmp	rbp, qword ptr [rdx + 8]
0x1abc3:	jg	0x1ac5d


0x1aba0:	mov	rax, qword ptr [r13 + 0x30]
0x1aba4:	mov	rdi, qword ptr [rsp + 0x20]
0x1aba9:	mov	rax, qword ptr [rax + r15*8]
0x1abad:	lea	rax, [rax + rax*4]
0x1abb1:	lea	rdx, [rdi + rax*8]
0x1abb5:	cmp	rbp, qword ptr [rdx + 0x10]
0x1abb9:	jle	0x1ac5d


0x1abc9:	mov	rcx, qword ptr [rdx]
0x1abcc:	mov	rax, qword ptr [r12]
0x1abd0:	mov	rsi, qword ptr [rbx + 8]
0x1abd4:	shl	rcx, 4
0x1abd8:	cmp	rbp, qword ptr [rdx + 0x18]
0x1abdc:	mov	r8, qword ptr [rax + rcx]
0x1abe0:	je	0x1ac80


0x1ac80:	test	rsi, rsi
0x1ac83:	jle	0x1ac5d


0x1abe6:	xor	r14d, r14d
0x1abe9:	test	rsi, rsi
0x1abec:	jle	0x1ac5d


0x1ac85:	mov	r10, qword ptr [rbx + 0x10]
0x1ac89:	mov	r9, -1
0x1ac90:	lea	r11, [r10 + rsi*8]
0x1ac94:	mov	rcx, r10
0x1ac97:	mov	rsi, r9
0x1ac9a:	jmp	0x1acb6


0x1abee:	mov	qword ptr [rsp + 0x28], rbp
0x1abf3:	mov	rbp, r8
0x1abf6:	jmp	0x1ac0e


0x1acb6:	mov	rdi, qword ptr [rcx]
0x1acb9:	mov	rdx, rdi
0x1acbc:	shl	rdx, 4
0x1acc0:	add	rdx, rax
0x1acc3:	movzx	r14d, byte ptr [rdx + 8]
0x1acc8:	cmp	r14d, 8
0x1accc:	jne	0x1aca0


0x1ac0e:	mov	rdx, qword ptr [rbx + 0x10]
0x1ac12:	mov	rsi, qword ptr [rdx + r14*8]
0x1ac16:	mov	rdx, rsi
0x1ac19:	shl	rdx, 4
0x1ac1d:	add	rax, rdx
0x1ac20:	movzx	edx, byte ptr [rax + 8]
0x1ac24:	sub	edx, 8
0x1ac27:	cmp	edx, 1
0x1ac2a:	ja	0x1ac00


0x1acce:	cmp	r8, qword ptr [rdx]
0x1acd1:	cmove	rsi, rdi
0x1acd5:	add	rcx, 8
0x1acd9:	cmp	r11, rcx
0x1acdc:	jne	0x1acb6


0x1aca0:	cmp	r14d, 9
0x1aca4:	jne	0x1acad


0x1ac2c:	cmp	rbp, qword ptr [rax]
0x1ac2f:	jne	0x1ac00


0x1ac00:	add	r14, 1
0x1ac04:	cmp	r14, qword ptr [rbx + 8]
0x1ac08:	jge	0x1ac58


0x1acde:	test	rsi, rsi
0x1ace1:	mov	r14, r9
0x1ace4:	mov	qword ptr [rsp + 0x28], r9
0x1ace9:	js	0x1adb0


0x1aca6:	cmp	r8, qword ptr [rdx]
0x1aca9:	cmove	r9, rdi
0x1acad:	add	rcx, 8
0x1acb1:	cmp	r11, rcx
0x1acb4:	je	0x1acde


0x1acad:	add	rcx, 8
0x1acb1:	cmp	r11, rcx
0x1acb4:	je	0x1acde


0x1ac31:	mov	rcx, qword ptr [rsp + 0x10]
0x1ac36:	mov	rdx, rbx
0x1ac39:	mov	rdi, r12
0x1ac3c:	call	0x14ef0


0x1ac0a:	mov	rax, qword ptr [r12]
0x1ac0e:	mov	rdx, qword ptr [rbx + 0x10]
0x1ac12:	mov	rsi, qword ptr [rdx + r14*8]
0x1ac16:	mov	rdx, rsi
0x1ac19:	shl	rdx, 4
0x1ac1d:	add	rax, rdx
0x1ac20:	movzx	edx, byte ptr [rax + 8]
0x1ac24:	sub	edx, 8
0x1ac27:	cmp	edx, 1
0x1ac2a:	ja	0x1ac00


0x1ac58:	mov	rbp, qword ptr [rsp + 0x28]
0x1ac5d:	add	r15, 1
0x1ac61:	cmp	r15, qword ptr [r13 + 0x28]
0x1ac65:	jl	0x1aba0


0x1adb0:	cmp	qword ptr [rsp + 0x28], 0
0x1adb6:	jns	0x1ad1f


0x1acef:	mov	rcx, qword ptr [rsp + 0x10]
0x1acf4:	mov	rdx, rbx
0x1acf7:	mov	rdi, r12
0x1acfa:	call	0x14ef0


0x1adbc:	jmp	0x1ac5d


0x1ad1f:	xor	r14d, r14d
0x1ad22:	mov	qword ptr [rsp + 0x30], rbp
0x1ad27:	mov	rbp, r14
0x1ad2a:	mov	r14, qword ptr [rsp + 0x28]
0x1ad2f:	jmp	0x1ad4a


0x1ad4a:	mov	r10, qword ptr [r10 + rbp*8]
0x1ad4e:	mov	rax, qword ptr [r12 + 0x38]
0x1ad53:	mov	rdx, r14
0x1ad56:	lea	r9, [r10 + r10*2]
0x1ad5a:	shl	r9, 3
0x1ad5e:	add	rax, r9
0x1ad61:	mov	rdi, qword ptr [rax + 8]
0x1ad65:	lea	rsi, [rax + 0x10]
0x1ad69:	call	0x126a0


0x8910:	mov	edx, 8
0x8915:	mov	rbx, rax
0x8918:	xor	ecx, ecx
0x891a:	mov	rax, rdx
0x891d:	mul	rbx
0x8920:	jo	0x8abf


0x8abf:	mov	ecx, 1
0x8ac4:	jmp	0x8926


0x8926:	test	rax, rax
0x8929:	mov	eax, 1
0x892e:	cmovs	rcx, rax
0x8932:	test	rbx, rbx
0x8935:	je	0x8a10


0x893b:	and	ecx, 1
0x893e:	jne	0x8a10


0x8944:	cmp	qword ptr [rbp + 0x10], rbx
0x8948:	je	0x8a70


0x8a70:	mov	ebx, 1
0x8a75:	jmp	0x8a12


0x894e:	mov	esi, 0x10
0x8953:	mov	rdi, rbx
0x8956:	call	0x26b0


0x8a12:	mov	rcx, qword ptr [rsp + 0x58]
0x8a17:	xor	rcx, qword ptr fs:[0x28]
0x8a20:	mov	eax, ebx
0x8a22:	jne	0x8aba


0xe79c:	test	al, al
0xe79e:	mov	byte ptr [rsp + 0xf], al
0xe7a2:	jne	0xe654


0xe7a8:	mov	rdi, r15
0xe7ab:	call	0x1f580


0xe7b0:	test	eax, eax
0xe7b2:	mov	r15d, eax
0xe7b5:	mov	ebx, dword ptr [r13 + 0x48]
0xe7b9:	js	0xe64f


0xe7bf:	test	bl, 2
0xe7c2:	mov	r12d, eax
0xe7c5:	mov	byte ptr [rsp + 0xf], 1
0xe7ca:	je	0xe740


0xe7d0:	jmp	0xe680


0xe224:	test	al, al
0xe226:	je	0xe210


0xe210:	mov	rdi, rbx
0xe213:	call	0x1f580


0xe228:	pop	rbx
0xe229:	ret	


0xe218:	test	eax, eax
0xe21a:	jns	0xe230


0xe230:	mov	edi, eax
0xe232:	call	0x2640


0xe481:	add	rsp, 8
0xe485:	mov	eax, ebp
0xe487:	pop	rbx
0xe488:	pop	rbp
0xe489:	ret	


0xe8dd:	test	al, al
0xe8df:	je	0xe8c1


0xe8c1:	pop	rbx
0xe8c2:	mov	eax, 1
0xe8c7:	pop	rbp
0xe8c8:	pop	r12
0xe8ca:	ret	


0xe8e1:	mov	edx, 2
0xe8e6:	mov	qword ptr [rbx], rbx
0xe8e9:	mov	word ptr [rbx + 0x70], dx
0xe8ed:	pop	rbx
0xe8ee:	pop	rbp
0xe8ef:	pop	r12
0xe8f1:	ret	


0x19310:	test	eax, eax
0x19312:	mov	dword ptr [rsp + 0x5c], eax
0x19316:	jne	0x19c10


0x1931c:	mov	rdi, qword ptr [rsp + 0x38]
0x19321:	lea	rax, [rdi + 0xb8]
0x19328:	mov	qword ptr [rsp + 0x1a0], rax
0x19330:	movzx	eax, byte ptr [rdi + 0xb0]
0x19337:	mov	byte ptr [rsp + 8], al
0x1933b:	shr	al, 4
0x1933e:	and	eax, 1
0x19341:	cmp	byte ptr [rsp + 0x1ab], 0
0x19349:	mov	byte ptr [rsp + 0x1ae], al
0x19350:	jne	0x19375


0x19c10:	mov	rdi, qword ptr [rsp + 0x1d8]
0x19c18:	call	0x2a10


0x19352:	mov	rsi, qword ptr [rsp + 0x38]
0x19357:	mov	rax, qword ptr [rsp + 0x78]
0x1935c:	cmp	dword ptr [rsi + 0xb4], 1
0x19363:	mov	qword ptr [rsp + 0x128], rax
0x1936b:	mov	rax, qword ptr [rsp + 0x88]
0x19373:	jle	0x19377


0x19375:	xor	eax, eax
0x19377:	mov	qword ptr [rsp + 0x150], rax
0x1937f:	mov	qword ptr [rsp + 0x158], rax
0x19387:	mov	rax, qword ptr [rsp + 0x48]
0x1938c:	mov	qword ptr [rsp + 0x188], r13
0x19394:	mov	qword ptr [rsp + 0x180], r13
0x1939c:	movzx	eax, byte ptr [rax + 0x38]
0x193a0:	mov	byte ptr [rsp + 8], al
0x193a4:	shr	al, 7
0x193a7:	mov	byte ptr [rsp + 0x1ad], al
0x193ae:	mov	rax, qword ptr [rsp + 0x38]
0x193b3:	mov	r14, qword ptr [rax + 0x98]
0x193ba:	mov	eax, dword ptr [rsp + 0x280]
0x193c1:	mov	qword ptr [rsp + 0x1c8], -1
0x193cd:	lea	r13, [r14 + r14]
0x193d1:	mov	dword ptr [rsp + 0x1c0], eax
0x193d8:	test	r13, r13
0x193db:	jle	0x1942f


0x19377:	mov	qword ptr [rsp + 0x150], rax
0x1937f:	mov	qword ptr [rsp + 0x158], rax
0x19387:	mov	rax, qword ptr [rsp + 0x48]
0x1938c:	mov	qword ptr [rsp + 0x188], r13
0x19394:	mov	qword ptr [rsp + 0x180], r13
0x1939c:	movzx	eax, byte ptr [rax + 0x38]
0x193a0:	mov	byte ptr [rsp + 8], al
0x193a4:	shr	al, 7
0x193a7:	mov	byte ptr [rsp + 0x1ad], al
0x193ae:	mov	rax, qword ptr [rsp + 0x38]
0x193b3:	mov	r14, qword ptr [rax + 0x98]
0x193ba:	mov	eax, dword ptr [rsp + 0x280]
0x193c1:	mov	qword ptr [rsp + 0x1c8], -1
0x193cd:	lea	r13, [r14 + r14]
0x193d1:	mov	dword ptr [rsp + 0x1c0], eax
0x193d8:	test	r13, r13
0x193db:	jle	0x1942f


0x1942f:	cmp	qword ptr [rsp + 0x270], 1
0x19438:	mov	qword ptr [rsp + 0x1f0], r13
0x19440:	mov	dword ptr [rsp + 0x200], 1
0x1944b:	mov	qword ptr [rsp + 0x210], r13
0x19453:	jbe	0x1a578


0x193dd:	movabs	rax, 0x666666666666666
0x193e7:	cmp	r13, rax
0x193ea:	jg	0x1a130


0x1a578:	mov	rax, qword ptr [rsp + 0x38]
0x1a57d:	test	byte ptr [rax + 0xb0], 2
0x1a584:	jne	0x19459


0x19459:	mov	rax, qword ptr [rsp + 0x160]
0x19461:	movabs	rdx, 0x1ffffffffffffffe
0x1946b:	cmp	rax, rdx
0x1946e:	ja	0x1a130


0x193f0:	lea	rdi, [r13 + r14*8]
0x193f5:	shl	rdi, 3
0x193f9:	call	0x2780


0x1a130:	mov	rdi, qword ptr [rsp + 0x1d8]
0x1a138:	mov	dword ptr [rsp + 0x5c], 0xc
0x1a140:	jmp	0x19c18


0x1a58a:	mov	qword ptr [rsp + 0x1d8], 0
0x1a596:	jmp	0x19495


0x19474:	lea	rdi, [rax*8 + 8]
0x1947c:	call	0x2780


0x19c18:	call	0x2a10


0x19495:	mov	eax, dword ptr [rsp + 0x280]
0x1949c:	mov	qword ptr [rsp + 0xd8], rbp
0x194a4:	and	eax, 1
0x194a7:	cmp	eax, 1
0x194aa:	sbb	eax, eax
0x194ac:	and	eax, 2
0x194af:	add	eax, 4
0x194b2:	mov	dword ptr [rsp + 0x190], eax
0x194b9:	xor	eax, eax
0x194bb:	cmp	rbp, r12
0x194be:	setle	al
0x194c1:	lea	eax, [rax + rax - 1]
0x194c5:	mov	dword ptr [rsp + 0xac], eax
0x194cc:	mov	rax, r12
0x194cf:	cmovle	rax, rbp
0x194d3:	mov	qword ptr [rsp + 0x90], rax
0x194db:	mov	rax, r12
0x194de:	cmovge	rax, rbp
0x194e2:	cmp	qword ptr [rsp + 0x68], 0
0x194e8:	mov	qword ptr [rsp + 0x70], rax
0x194ed:	mov	rax, qword ptr [rsp + 0x38]
0x194f2:	mov	esi, dword ptr [rax + 0xb4]
0x194f8:	mov	eax, 8
0x194fd:	mov	dword ptr [rsp + 0xc8], esi
0x19504:	je	0x1953f


0x1953f:	cmp	rbp, qword ptr [rsp + 0x70]
0x19544:	setg	cl
0x19547:	cmp	rbp, qword ptr [rsp + 0x90]
0x1954f:	setl	dl
0x19552:	or	cl, dl
0x19554:	jne	0x1a029


0x19506:	cmp	esi, 1
0x19509:	mov	ecx, 4
0x1950e:	je	0x1952e


0x1955a:	lea	rcx, [rsp + 0xd8]
0x19562:	cmp	rbp, r12
0x19565:	mov	edx, 0
0x1956a:	cmovle	rdx, rcx
0x1956e:	test	rdx, rdx
0x19571:	mov	qword ptr [rsp + 0xc0], rdx
0x19579:	setne	byte ptr [rsp + 0xcf]
0x19581:	sub	eax, 4
0x19584:	mov	dword ptr [rsp + 0xa8], eax
0x1958b:	lea	rax, [rsp + 0xd0]
0x19593:	mov	qword ptr [rsp + 0x28], rax
0x19598:	mov	eax, dword ptr [rsp + 0xa8]
0x1959f:	cmp	eax, 4
0x195a2:	ja	0x1a18d


0x1a029:	mov	rdi, qword ptr [rsp + 0x1d8]
0x1a031:	mov	dword ptr [rsp + 0x5c], 1
0x1a039:	jmp	0x19c18


0x1952e:	xor	edx, edx
0x19530:	cmp	rbp, r12
0x19533:	movzx	eax, bl
0x19536:	setle	dl
0x19539:	or	eax, ecx
0x1953b:	add	edx, edx
0x1953d:	or	eax, edx
0x1953f:	cmp	rbp, qword ptr [rsp + 0x70]
0x19544:	setg	cl
0x19547:	cmp	rbp, qword ptr [rsp + 0x90]
0x1954f:	setl	dl
0x19552:	or	cl, dl
0x19554:	jne	0x1a029


0x19510:	mov	rax, qword ptr [rsp + 0x48]
0x19515:	test	byte ptr [rax + 0x1a], 0x40
0x19519:	jne	0x1a29e


0x195a8:	lea	rcx, [rip + 0x9331]
0x195af:	movsxd	rax, dword ptr [rcx + rax*4]
0x195b3:	add	rax, rcx
0x195b6:	jmp	rax


0x1a18d:	mov	rbx, qword ptr [rsp + 0x68]
0x1a192:	mov	r13d, dword ptr [rsp + 0xac]
0x1a19a:	mov	r14, qword ptr [rsp + 0x90]
0x1a1a2:	mov	r15, qword ptr [rsp + 0x70]
0x1a1a7:	mov	r12, qword ptr [rsp + 0x88]
0x1a1af:	jmp	0x1a1f8


0x1951f:	cmp	qword ptr [rsp + 0xb0], 0
0x19528:	jne	0x1a29e


0x1a29e:	xor	ecx, ecx
0x1a2a0:	jmp	0x1952e


0x1a1f8:	mov	rdx, rbp
0x1a1fb:	sub	rdx, qword ptr [rsp + 0x148]
0x1a203:	cmp	qword ptr [rsp + 0x158], rdx
0x1a20b:	ja	0x1a1b8


0x1a20d:	mov	edx, dword ptr [rsp + 0x280]
0x1a214:	mov	rdi, qword ptr [rsp]
0x1a218:	mov	rsi, rbp
0x1a21b:	call	0x14750


0x1a1b8:	cmp	r12, rbp
0x1a1bb:	mov	rax, rbx
0x1a1be:	jle	0x1a1cf


0x1a1cf:	cmp	byte ptr [rax], 0
0x1a1d2:	jne	0x19698


0x1a1c0:	mov	rax, qword ptr [rsp + 0x128]
0x1a1c8:	movzx	eax, byte ptr [rax + rdx]
0x1a1cc:	add	rax, rbx
0x1a1cf:	cmp	byte ptr [rax], 0
0x1a1d2:	jne	0x19698


0x1a1d8:	movsxd	rax, r13d
0x1a1db:	add	rbp, rax
0x1a1de:	cmp	rbp, r14
0x1a1e1:	mov	qword ptr [rsp + 0xd8], rbp
0x1a1e9:	jl	0x1a029


0x19698:	mov	edx, dword ptr [rsp + 0x280]
0x1969f:	mov	rdi, qword ptr [rsp]
0x196a3:	mov	rsi, rbp
0x196a6:	call	0x14750


0x1a1ef:	cmp	rbp, r15
0x1a1f2:	jg	0x1a029


0x196ab:	test	eax, eax
0x196ad:	mov	dword ptr [rsp + 0x5c], eax
0x196b1:	jne	0x19c10


0x196b7:	cmp	dword ptr [rsp + 0xc8], 1
0x196bf:	je	0x196dd


0x196dd:	mov	rbx, qword ptr [rsp + 0x1b8]
0x196e5:	movzx	eax, byte ptr [rsp + 0x58]
0x196ea:	mov	dword ptr [rsp + 0x200], 0
0x196f5:	mov	qword ptr [rsp + 0x1e8], 0
0x19701:	mov	qword ptr [rsp + 0x1e0], 0
0x1970d:	mov	dword ptr [rsp + 0xd0], 0
0x19718:	mov	r14, qword ptr [rbx + 0x48]
0x1971c:	and	eax, 1
0x1971f:	mov	byte ptr [rsp + 0xce], al
0x19726:	mov	rax, qword ptr [rsp + 0x168]
0x1972e:	cmp	byte ptr [r14 + 0x68], 0
0x19733:	mov	qword ptr [rsp + 8], rax
0x19738:	js	0x1a0b0


0x196c1:	cmp	qword ptr [rsp + 0x150], 0
0x196ca:	je	0x196dd


0x1a0b0:	mov	edx, dword ptr [rsp + 0x1c0]
0x1a0b7:	mov	rdi, qword ptr [rsp]
0x1a0bb:	lea	rsi, [rax - 1]
0x1a0bf:	call	0x14480


0x1973e:	mov	rax, qword ptr [rsp + 0x1d8]
0x19746:	test	rax, rax
0x19749:	je	0x19762


0x196cc:	mov	rax, qword ptr [rsp + 0x130]
0x196d4:	cmp	dword ptr [rax], -1
0x196d7:	je	0x1a001


0x19762:	movzx	eax, byte ptr [rsp + 0xcf]
0x1976a:	mov	byte ptr [rsp + 0x18], al
0x1976e:	movzx	eax, byte ptr [r14 + 0x68]
0x19773:	test	al, 0x10
0x19775:	mov	qword ptr [rsp + 0x20], -1
0x1977e:	mov	qword ptr [rsp + 0x30], 0
0x19787:	jne	0x1a610


0x1974b:	cmp	qword ptr [rbx + 0x98], 0
0x19753:	mov	rdi, qword ptr [rsp + 8]
0x19758:	mov	qword ptr [rax + rdi*8], r14
0x1975c:	jne	0x1a64b


0x1a001:	movsxd	rax, dword ptr [rsp + 0xac]
0x1a009:	add	rbp, rax
0x1a00c:	cmp	rbp, qword ptr [rsp + 0x90]
0x1a014:	mov	qword ptr [rsp + 0xd8], rbp
0x1a01c:	jl	0x1a029


0x1978d:	mov	rax, qword ptr [rsp + 0xc0]
0x19795:	mov	r8, qword ptr [rsp + 0x168]
0x1979d:	mov	qword ptr [rsp + 0x50], rax
0x197a2:	lea	rax, [rsp + 0xe0]
0x197aa:	mov	qword ptr [rsp + 0x60], rax
0x197af:	lea	rax, [rsp + 0xd4]
0x197b7:	mov	qword ptr [rsp + 0x80], rax
0x197bf:	jmp	0x1981c


0x1a610:	cmp	byte ptr [r14 + 0x68], 0
0x1a615:	js	0x1a686


0x1a64b:	lea	rbx, [r14 + 0x10]
0x1a64f:	lea	rbp, [r14 + 0x18]
0x1a653:	mov	rdi, qword ptr [rsp]
0x1a657:	xor	ecx, ecx
0x1a659:	mov	rdx, rbp
0x1a65c:	mov	rsi, rbx
0x1a65f:	call	0x14330


0x1a01e:	cmp	rbp, qword ptr [rsp + 0x70]
0x1a023:	jle	0x19598


0x1981c:	cmp	qword ptr [rsp + 0x188], r8
0x19824:	jle	0x19914


0x1a686:	mov	rsi, qword ptr [r14 + 0x10]
0x1a68a:	mov	rcx, qword ptr [rsp + 8]
0x1a68f:	lea	rdx, [r14 + 0x18]
0x1a693:	mov	rdi, qword ptr [rsp]
0x1a697:	call	0x14680


0x1a617:	mov	esi, dword ptr [rsp + 0x58]
0x1a61b:	mov	rax, qword ptr [rsp + 8]
0x1a620:	test	esi, esi
0x1a622:	mov	qword ptr [rsp + 0x20], rax
0x1a627:	je	0x19926


0x19598:	mov	eax, dword ptr [rsp + 0xa8]
0x1959f:	cmp	eax, 4
0x195a2:	ja	0x1a18d


0x19914:	mov	rax, qword ptr [rsp + 0x50]
0x19919:	test	rax, rax
0x1991c:	je	0x19926


0x1982a:	mov	rax, qword ptr [rsp + 0x160]
0x19832:	lea	rbx, [r8 + 1]
0x19836:	cmp	rbx, rax
0x19839:	jge	0x19ce0


0x19926:	mov	rax, qword ptr [rsp + 0x20]
0x1992b:	cmp	rax, -1
0x1992f:	je	0x19ff0


0x1a62d:	mov	qword ptr [rsp + 0x30], 1
0x1a636:	jmp	0x1978d


0x1991e:	mov	rdi, qword ptr [rsp + 8]
0x19923:	add	qword ptr [rax], rdi
0x19926:	mov	rax, qword ptr [rsp + 0x20]
0x1992b:	cmp	rax, -1
0x1992f:	je	0x19ff0


0x1983f:	mov	rax, qword ptr [rsp + 0x150]
0x19847:	cmp	rbx, rax
0x1984a:	jge	0x19fd0


0x19ce0:	cmp	rax, qword ptr [rsp + 0x178]
0x19ce8:	jge	0x1983f


0x19ff0:	mov	rdi, qword ptr [rsp]
0x19ff4:	call	0x12530


0x19935:	cmp	rax, -2
0x19939:	je	0x1a130


0x19850:	test	byte ptr [r14 + 0x68], 0x20
0x19855:	jne	0x19d20


0x19fd0:	cmp	rax, qword ptr [rsp + 0x178]
0x19fd8:	jge	0x19850


0x19cee:	mov	rdi, qword ptr [rsp]
0x19cf2:	lea	esi, [rbx + 1]
0x19cf5:	call	0x11be0


0x1993f:	mov	rax, qword ptr [rsp + 0x20]
0x19944:	mov	qword ptr [rsp + 0x1c8], rax
0x1994c:	mov	rax, qword ptr [rsp + 0x48]
0x19951:	test	byte ptr [rax + 0x38], 0x10
0x19955:	jne	0x1a110


0x1985b:	lea	rax, [r8 + 1]
0x1985f:	mov	qword ptr [rsp + 0x168], rax
0x19867:	mov	rax, qword ptr [rsp + 0x128]
0x1986f:	movzx	r13d, byte ptr [rax + r8]
0x19874:	mov	rax, qword ptr [r14 + 0x58]
0x19878:	test	rax, rax
0x1987b:	je	0x19f90


0x19d20:	cmp	qword ptr [r14 + 0x10], 0
0x19d25:	mov	r13, qword ptr [rsp + 0x1b8]
0x19d2d:	jle	0x1a05b


0x19fde:	jmp	0x19cee


0x1995b:	cmp	qword ptr [rsp + 0x270], 1
0x19964:	jbe	0x1a25c


0x1a110:	mov	rax, qword ptr [rsp + 0x38]
0x1a115:	cmp	qword ptr [rax + 0x98], 0
0x1a11d:	je	0x1a34c


0x19f90:	mov	rbp, qword ptr [r14 + 0x60]
0x19f94:	test	rbp, rbp
0x19f97:	je	0x1a145


0x19881:	mov	r13, qword ptr [rax + r13*8]
0x19885:	cmp	qword ptr [rsp + 0x1d8], 0
0x1988e:	je	0x198a4


0x1a05b:	mov	dword ptr [rsp + 0xd0], 0
0x1a066:	jmp	0x1985b


0x19d33:	lea	rax, [r13 + 0xd8]
0x19d3a:	xor	r12d, r12d
0x19d3d:	mov	qword ptr [rsp + 0xa0], rbx
0x19d45:	mov	rbx, r12
0x19d48:	mov	r12, r8
0x19d4b:	mov	qword ptr [rsp + 0x40], rax
0x19d50:	jmp	0x19ea8


0x1a25c:	mov	rax, qword ptr [rsp + 0x38]
0x1a261:	cmp	qword ptr [rax + 0x98], 0
0x1a269:	je	0x1a34c


0x1996a:	mov	rcx, qword ptr [rsp + 0x20]
0x1996f:	mov	rbx, qword ptr [rsp + 0x1d8]
0x19977:	mov	rdi, qword ptr [rsp]
0x1997b:	mov	rax, qword ptr [rbx + rcx*8]
0x1997f:	mov	rsi, qword ptr [rax + 0x10]
0x19983:	lea	rdx, [rax + 0x18]
0x19987:	call	0x14680


0x1a34c:	cmp	qword ptr [rsp + 0x270], 0
0x1a355:	je	0x19c10


0x1a123:	jmp	0x1a26f


0x1a145:	mov	rdi, qword ptr [rsp + 0x1b8]
0x1a14d:	mov	rsi, r14
0x1a150:	call	0x15130


0x19f9d:	mov	rax, qword ptr [rsp + 0x168]
0x19fa5:	mov	edx, dword ptr [rsp + 0x1c0]
0x19fac:	mov	rdi, qword ptr [rsp]
0x19fb0:	lea	rsi, [rax - 1]
0x19fb4:	call	0x14480


0x198a4:	test	r13, r13
0x198a7:	jne	0x197c8


0x19890:	mov	rsi, qword ptr [rsp]
0x19894:	mov	rdi, qword ptr [rsp + 0x28]
0x19899:	mov	rdx, r13
0x1989c:	call	0x18b90


0x19ea8:	mov	rax, qword ptr [r14 + 0x18]
0x19eac:	mov	rbp, qword ptr [r13]
0x19eb0:	mov	r15, qword ptr [rax + rbx*8]
0x19eb4:	mov	rax, r15
0x19eb7:	shl	rax, 4
0x19ebb:	add	rax, rbp
0x19ebe:	test	byte ptr [rax + 0xa], 0x10
0x19ec2:	je	0x19e9a


0x1a26f:	mov	rcx, qword ptr [rsp + 0x20]
0x1a274:	mov	rbx, qword ptr [rsp + 0x1d8]
0x1a27c:	mov	rdi, qword ptr [rsp]
0x1a280:	mov	rax, qword ptr [rbx + rcx*8]
0x1a284:	mov	rsi, qword ptr [rax + 0x10]
0x1a288:	lea	rdx, [rax + 0x18]
0x1a28c:	call	0x14680


0x1a35b:	cmp	qword ptr [rsp + 0x270], 1
0x1a364:	je	0x1a788


0x198ad:	mov	ecx, dword ptr [rsp + 0xd0]
0x198b4:	mov	rdi, qword ptr [rsp + 0x1d8]
0x198bc:	test	ecx, ecx
0x198be:	jne	0x1a180


0x197c8:	cmp	r14, r13
0x197cb:	mov	r8, qword ptr [rsp + 0x168]
0x197d3:	sete	al
0x197d6:	and	byte ptr [rsp + 0x18], al
0x197da:	movzx	eax, byte ptr [r13 + 0x68]
0x197df:	cmove	rbx, qword ptr [rsp + 8]
0x197e5:	test	al, 0x10
0x197e7:	mov	qword ptr [rsp + 8], rbx
0x197ec:	je	0x19819


0x19e9a:	add	rbx, 1
0x19e9e:	cmp	rbx, qword ptr [r14 + 0x10]
0x19ea2:	jge	0x1a050


0x19ec4:	mov	ecx, dword ptr [rax + 8]
0x19ec7:	test	ecx, 0x3ff00
0x19ecd:	mov	dword ptr [rsp + 0x10], ecx
0x19ed1:	je	0x19d90


0x1a788:	mov	rsi, qword ptr [rsp + 0xb8]
0x1a790:	mov	rax, qword ptr [rsp + 0x1c8]
0x1a798:	mov	qword ptr [rsi], 0
0x1a79f:	mov	qword ptr [rsi + 8], rax
0x1a7a3:	xor	eax, eax
0x1a7a5:	jmp	0x1a421


0x1a36a:	mov	rsi, qword ptr [rsp + 0xb8]
0x1a372:	mov	rcx, qword ptr [rsp + 0x270]
0x1a37a:	mov	rdx, -1
0x1a381:	shl	rcx, 4
0x1a385:	lea	rax, [rsi + 0x10]
0x1a389:	add	rcx, rsi
0x1a38c:	mov	qword ptr [rax + 8], rdx
0x1a390:	mov	qword ptr [rax], rdx
0x1a393:	add	rax, 0x10
0x1a397:	cmp	rcx, rax
0x1a39a:	jne	0x1a38c


0x198c4:	test	rdi, rdi
0x198c7:	je	0x19914


0x1a180:	mov	dword ptr [rsp + 0x5c], 0xc
0x1a188:	jmp	0x19c18


0x19819:	mov	r14, r13
0x1981c:	cmp	qword ptr [rsp + 0x188], r8
0x19824:	jle	0x19914


0x197ee:	test	al, al
0x197f0:	js	0x19cb0


0x1a050:	mov	rbx, qword ptr [rsp + 0xa0]
0x1a058:	mov	r8, r12
0x1a05b:	mov	dword ptr [rsp + 0xd0], 0
0x1a066:	jmp	0x1985b


0x19d90:	mov	rcx, qword ptr [rsp]
0x19d94:	mov	rsi, qword ptr [rsp + 0x40]
0x19d99:	mov	r8, r12
0x19d9c:	mov	rdx, r15
0x19d9f:	mov	rdi, rbp
0x19da2:	call	0x16e50


0x19ed7:	mov	edx, dword ptr [rsp + 0x1c0]
0x19ede:	mov	rdi, qword ptr [rsp]
0x19ee2:	mov	rsi, r12
0x19ee5:	call	0x14480


0x1a421:	movzx	r11d, byte ptr [rsp + 0x1ac]
0x1a42a:	mov	r10, qword ptr [rsp + 0x150]
0x1a432:	xor	ecx, ecx
0x1a434:	mov	r9, qword ptr [rsp + 0x138]
0x1a43c:	mov	r8, qword ptr [rsp + 0x158]
0x1a444:	mov	rdi, qword ptr [rsp + 0xd8]
0x1a44c:	mov	rdx, qword ptr [rsp + 0xb8]
0x1a454:	jmp	0x1a459


0x1a39c:	mov	rdi, qword ptr [rsp + 0xb8]
0x1a3a4:	mov	rax, qword ptr [rsp + 0x1c8]
0x1a3ac:	mov	qword ptr [rdi + 8], rax
0x1a3b0:	mov	rax, qword ptr [rsp + 0x48]
0x1a3b5:	mov	qword ptr [rdi], 0
0x1a3bc:	test	byte ptr [rax + 0x38], 0x10
0x1a3c0:	jne	0x1a7a3


0x1a38c:	mov	qword ptr [rax + 8], rdx
0x1a390:	mov	qword ptr [rax], rdx
0x1a393:	add	rax, 0x10
0x1a397:	cmp	rcx, rax
0x1a39a:	jne	0x1a38c


0x198c9:	movzx	eax, byte ptr [rsp + 0xce]
0x198d1:	xor	eax, 1
0x198d4:	test	byte ptr [rsp + 0x30], al
0x198d8:	jne	0x19914


0x19cb0:	mov	rsi, qword ptr [r13 + 0x10]
0x19cb4:	mov	rdi, qword ptr [rsp]
0x19cb8:	lea	rdx, [r13 + 0x18]
0x19cbc:	mov	rcx, r8
0x19cbf:	mov	qword ptr [rsp + 0x10], r8
0x19cc4:	call	0x14680


0x197f6:	mov	eax, dword ptr [rsp + 0x58]
0x197fa:	mov	qword ptr [rsp + 0x20], r8
0x197ff:	test	eax, eax
0x19801:	je	0x19926


0x1a459:	cmp	rax, -1
0x1a45d:	je	0x1a479


0x1a3c6:	cmp	qword ptr [rsp + 0x270], 1
0x1a3cf:	je	0x1a7a3


0x1a7a3:	xor	eax, eax
0x1a7a5:	jmp	0x1a421


0x198da:	mov	rsi, qword ptr [rsp + 0x1e0]
0x198e2:	mov	rax, qword ptr [rsp + 0x168]
0x198ea:	xor	ecx, ecx
0x198ec:	jmp	0x19903


0x19807:	mov	qword ptr [rsp + 0x30], 1
0x19810:	mov	qword ptr [rsp + 0x50], 0
0x19819:	mov	r14, r13
0x1981c:	cmp	qword ptr [rsp + 0x188], r8
0x19824:	jle	0x19914


0x1a479:	add	rcx, 1
0x1a47d:	add	rdx, 0x10
0x1a481:	cmp	rcx, qword ptr [rsp + 0x270]
0x1a489:	jne	0x1a456


0x1a45f:	test	r11b, r11b
0x1a462:	mov	rsi, qword ptr [rdx + 8]
0x1a466:	jne	0x1a7aa


0x1a3d5:	mov	rax, qword ptr [rsp + 0x38]
0x1a3da:	xor	r8d, r8d
0x1a3dd:	test	byte ptr [rax + 0xb0], 1
0x1a3e4:	je	0x1a3f5


0x19903:	lea	rdx, [rax + 1]
0x19907:	cmp	rsi, rdx
0x1990a:	jge	0x198f0


0x1a48b:	cmp	qword ptr [rsp + 0x98], 0
0x1a494:	jle	0x1a4d5


0x1a456:	mov	rax, qword ptr [rdx]
0x1a459:	cmp	rax, -1
0x1a45d:	je	0x1a479


0x1a46c:	add	rax, rdi
0x1a46f:	add	rsi, rdi
0x1a472:	mov	qword ptr [rdx], rax
0x1a475:	mov	qword ptr [rdx + 8], rsi
0x1a479:	add	rcx, 1
0x1a47d:	add	rdx, 0x10
0x1a481:	cmp	rcx, qword ptr [rsp + 0x270]
0x1a489:	jne	0x1a456


0x1a7aa:	cmp	r10, rax
0x1a7ad:	je	0x1a7cc


0x1a3f5:	mov	rbx, qword ptr [rsp + 0xb8]
0x1a3fd:	mov	rdx, qword ptr [rsp + 0x270]
0x1a405:	mov	rsi, qword ptr [rsp]
0x1a409:	mov	rdi, qword ptr [rsp + 0x48]
0x1a40e:	mov	rcx, rbx
0x1a411:	call	0x17810


0x1a3e6:	xor	r8d, r8d
0x1a3e9:	cmp	qword ptr [rax + 0x98], 0
0x1a3f1:	setg	r8b
0x1a3f5:	mov	rbx, qword ptr [rsp + 0xb8]
0x1a3fd:	mov	rdx, qword ptr [rsp + 0x270]
0x1a405:	mov	rsi, qword ptr [rsp]
0x1a409:	mov	rdi, qword ptr [rsp + 0x48]
0x1a40e:	mov	rcx, rbx
0x1a411:	call	0x17810


0x1990c:	test	cl, cl
0x1990e:	jne	0x1a7de


0x198f0:	cmp	qword ptr [rdi + rdx*8], 0
0x198f5:	mov	rax, rdx
0x198f8:	mov	ecx, 1
0x198fd:	jne	0x19c70


0x1a4d5:	mov	rax, qword ptr [rsp + 0x38]
0x1a4da:	mov	rdi, qword ptr [rsp + 0x1d8]
0x1a4e2:	mov	r9, qword ptr [rax + 0xe0]
0x1a4e9:	test	r9, r9
0x1a4ec:	je	0x19c18


0x1a496:	mov	rdx, qword ptr [rsp + 0x98]
0x1a49e:	mov	rdi, qword ptr [rsp + 0xb8]
0x1a4a6:	mov	rax, rcx
0x1a4a9:	shl	rax, 4
0x1a4ad:	add	rdx, rcx
0x1a4b0:	lea	rax, [rdi + rax + 8]
0x1a4b5:	shl	rdx, 4
0x1a4b9:	lea	rsi, [rdi + rdx + 8]
0x1a4be:	mov	rdx, -1
0x1a4c5:	mov	qword ptr [rax - 8], rdx
0x1a4c9:	mov	qword ptr [rax], rdx
0x1a4cc:	add	rax, 0x10
0x1a4d0:	cmp	rsi, rax
0x1a4d3:	jne	0x1a4c5


0x1a7cc:	mov	rax, r8
0x1a7cf:	jmp	0x1a7b3


0x1a7af:	mov	rax, qword ptr [r9 + rax*8]
0x1a7b3:	cmp	r10, rsi
0x1a7b6:	mov	qword ptr [rdx], rax
0x1a7b9:	je	0x1a7c4


0x1a7de:	mov	qword ptr [rsp + 0x168], rax
0x1a7e6:	jmp	0x19914


0x19c70:	mov	rsi, qword ptr [rsp]
0x19c74:	mov	rdi, qword ptr [rsp + 0x28]
0x19c79:	mov	qword ptr [rsp + 0x168], rdx
0x19c81:	xor	edx, edx
0x19c83:	call	0x18b90


0x1a4f2:	mov	r10, qword ptr [rsp + 0xb8]
0x1a4fa:	xor	r8d, r8d
0x1a4fd:	lea	rdx, [r10 + 0x10]
0x1a501:	jmp	0x1a539


0x1a4c5:	mov	qword ptr [rax - 8], rdx
0x1a4c9:	mov	qword ptr [rax], rdx
0x1a4cc:	add	rax, 0x10
0x1a4d0:	cmp	rsi, rax
0x1a4d3:	jne	0x1a4c5


0x1a7b3:	cmp	r10, rsi
0x1a7b6:	mov	qword ptr [rdx], rax
0x1a7b9:	je	0x1a7c4


0x1a7c4:	mov	rsi, r8
0x1a7c7:	jmp	0x1a46c


0x1a7bb:	mov	rsi, qword ptr [r9 + rsi*8]
0x1a7bf:	jmp	0x1a46c


0x1a539:	lea	rsi, [r8 + 1]
0x1a53d:	cmp	rsi, rcx
0x1a540:	jne	0x1a503


0x1a542:	jmp	0x19c18


0x1a503:	mov	rax, qword ptr [r9 + rsi*8 - 8]
0x1a508:	cmp	rax, r8
0x1a50b:	je	0x1a532


0x1a532:	add	rdx, 0x10
0x1a536:	mov	r8, rsi
0x1a539:	lea	rsi, [r8 + 1]
0x1a53d:	cmp	rsi, rcx
0x1a540:	jne	0x1a503


0x1a50d:	add	rax, 1
0x1a511:	shl	rax, 4
0x1a515:	mov	rax, qword ptr [r10 + rax]
0x1a519:	mov	qword ptr [rdx], rax
0x1a51c:	mov	rax, qword ptr [r9 + rsi*8 - 8]
0x1a521:	add	rax, 1
0x1a525:	shl	rax, 4
0x1a529:	mov	rax, qword ptr [r10 + rax + 8]
0x1a52e:	mov	qword ptr [rdx + 8], rax
0x1a532:	add	rdx, 0x10
0x1a536:	mov	r8, rsi
0x1a539:	lea	rsi, [r8 + 1]
0x1a53d:	cmp	rsi, rcx
0x1a540:	jne	0x1a503


0x19da7:	test	eax, eax
0x19da9:	je	0x19e92


0x19e92:	mov	r12, qword ptr [rsp + 0x168]
0x19e9a:	add	rbx, 1
0x19e9e:	cmp	rbx, qword ptr [r14 + 0x10]
0x19ea2:	jge	0x1a050


0x19daf:	movsxd	rbp, eax
0x19db2:	add	rbp, qword ptr [rsp + 0x168]
0x19dba:	cmp	dword ptr [rsp + 0x200], eax
0x19dc1:	cmovge	eax, dword ptr [rsp + 0x200]
0x19dc9:	mov	rdi, qword ptr [rsp]
0x19dcd:	mov	rsi, rbp
0x19dd0:	mov	dword ptr [rsp + 0x200], eax
0x19dd7:	call	0x11d30


0x19ddc:	test	eax, eax
0x19dde:	mov	dword ptr [rsp + 0xd4], eax
0x19de5:	jne	0x1a080


0x19deb:	mov	rax, qword ptr [r13 + 0x18]
0x19def:	lea	r12, [rbp*8]
0x19df7:	mov	rax, qword ptr [rax + r15*8]
0x19dfb:	mov	r15, qword ptr [rsp + 0x1d8]
0x19e03:	lea	rdx, [rax + rax*2]
0x19e07:	mov	rax, qword ptr [r13 + 0x30]
0x19e0b:	add	r15, r12
0x19e0e:	lea	rdx, [rax + rdx*8]
0x19e12:	mov	rax, qword ptr [r15]
0x19e15:	test	rax, rax
0x19e18:	je	0x19f18


0x1a080:	mov	rbx, qword ptr [rsp + 0xa0]
0x1a088:	mov	rdi, qword ptr [rsp + 0x1d8]
0x1a090:	test	rdi, rdi
0x1a093:	mov	dword ptr [rsp + 0xd0], eax
0x1a09a:	je	0x1a180


0x19f18:	movdqu	xmm0, xmmword ptr [rdx]
0x19f1c:	lea	rsi, [rbp - 1]
0x19f20:	mov	rdi, qword ptr [rsp]
0x19f24:	movaps	xmmword ptr [rsp + 0xe0], xmm0
0x19f2c:	mov	rax, qword ptr [rdx + 0x10]
0x19f30:	mov	edx, dword ptr [rsp + 0x1c0]
0x19f37:	mov	qword ptr [rsp + 0xf0], rax
0x19f3f:	call	0x14480


0x19e1e:	mov	rsi, qword ptr [rax + 0x50]
0x19e22:	mov	rdi, qword ptr [rsp + 0x60]
0x19e27:	call	0x13890


0x1a0a0:	xor	r13d, r13d
0x1a0a3:	jmp	0x19890


0x19e2c:	test	eax, eax
0x19e2e:	mov	dword ptr [rsp + 0xd4], eax
0x19e35:	jne	0x1a080


0x19e3b:	mov	edx, dword ptr [rsp + 0x1c0]
0x19e42:	mov	rdi, qword ptr [rsp]
0x19e46:	lea	rsi, [rbp - 1]
0x19e4a:	call	0x14480


0x19c88:	mov	edx, dword ptr [rsp + 0xd0]
0x19c8f:	test	edx, edx
0x19c91:	jne	0x1a5cd


0x19c97:	test	rax, rax
0x19c9a:	jne	0x1a5e0


0x1a5cd:	test	rax, rax
0x1a5d0:	mov	r13, rax
0x1a5d3:	jne	0x197c8


0x19ca0:	mov	rdi, qword ptr [rsp + 0x1d8]
0x19ca8:	jmp	0x198da


0x1a5e0:	mov	r13, rax
0x1a5e3:	jmp	0x197c8


0x1a5d9:	jmp	0x19914


0x198a1:	mov	r13, rax
0x198a4:	test	r13, r13
0x198a7:	jne	0x197c8


0x19cfa:	test	eax, eax
0x19cfc:	mov	dword ptr [rsp + 0xd0], eax
0x19d03:	jne	0x1a5e8


0x19d09:	test	byte ptr [r14 + 0x68], 0x20
0x19d0e:	mov	r8, qword ptr [rsp + 0x168]
0x19d16:	je	0x1985b


0x1a5e8:	cmp	eax, 0xc
0x1a5eb:	je	0x1a130


0x1a5f1:	lea	rcx, [rip + 0x8778]
0x1a5f8:	lea	rsi, [rip + 0x81a1]
0x1a5ff:	lea	rdi, [rip + 0x824a]
0x1a606:	mov	edx, 0x46c
0x1a60b:	call	0x2600


0x19ff9:	mov	rbp, qword ptr [rsp + 0xd8]
0x1a001:	movsxd	rax, dword ptr [rsp + 0xac]
0x1a009:	add	rbp, rax
0x1a00c:	cmp	rbp, qword ptr [rsp + 0x90]
0x1a014:	mov	qword ptr [rsp + 0xd8], rbp
0x1a01c:	jl	0x1a029


0x1a664:	test	eax, eax
0x1a666:	mov	dword ptr [rsp + 0xd0], eax
0x1a66d:	jne	0x1a6b8


0x1a66f:	movzx	eax, byte ptr [r14 + 0x68]
0x1a674:	test	al, 0x40
0x1a676:	jne	0x1a760


0x1a6b8:	cdqe	
0x1a6ba:	mov	qword ptr [rsp + 0x20], rax
0x1a6bf:	jmp	0x19926


0x1a67c:	mov	byte ptr [rsp + 0x18], 0
0x1a681:	jmp	0x19773


0x1a760:	mov	rdi, qword ptr [rsp]
0x1a764:	mov	rdx, rbp
0x1a767:	mov	rsi, rbx
0x1a76a:	call	0x182a0


0x19773:	test	al, 0x10
0x19775:	mov	qword ptr [rsp + 0x20], -1
0x1977e:	mov	qword ptr [rsp + 0x30], 0
0x19787:	jne	0x1a610


0x1a76f:	test	eax, eax
0x1a771:	mov	dword ptr [rsp + 0xd0], eax
0x1a778:	jne	0x1a6b8


0x1a77e:	movzx	eax, byte ptr [r14 + 0x68]
0x1a783:	jmp	0x1a67c


0x1a220:	test	eax, eax
0x1a222:	jne	0x19c08


0x1a228:	mov	rdx, rbp
0x1a22b:	sub	rdx, qword ptr [rsp + 0x148]
0x1a233:	jmp	0x1a1b8


0x19c08:	mov	dword ptr [rsp + 0x5c], eax
0x19c0c:	nop	dword ptr [rax]
0x19c10:	mov	rdi, qword ptr [rsp + 0x1d8]
0x19c18:	call	0x2a10


0x11c1d:	test	eax, eax
0x11c1f:	mov	ebp, eax
0x11c21:	jne	0x11cdd


0x11c27:	mov	rdi, qword ptr [rbx + 0xb8]
0x11c2e:	test	rdi, rdi
0x11c31:	je	0x11c54


0x11cdd:	add	rsp, 8
0x11ce1:	mov	eax, ebp
0x11ce3:	pop	rbx
0x11ce4:	pop	rbp
0x11ce5:	ret	


0x11c54:	cmp	byte ptr [rbx + 0x88], 0
0x11c5b:	mov	eax, dword ptr [rbx + 0x90]
0x11c61:	je	0x11c80


0x11c33:	mov	rax, qword ptr [rbx + 0x40]
0x11c37:	lea	rsi, [rax*8 + 8]
0x11c3f:	call	0x2830


0x11c80:	cmp	eax, 1
0x11c83:	jg	0x11cf0


0x11c63:	cmp	eax, 1
0x11c66:	mov	rdi, rbx
0x11c69:	jle	0x11d20


0x11c85:	mov	rcx, qword ptr [rbx + 0x78]
0x11c89:	test	rcx, rcx
0x11c8c:	je	0x11cdd


0x11cf0:	mov	rdi, rbx
0x11cf3:	call	0x113f0


0x11d20:	call	0x11380


0x11c6f:	add	rsp, 8
0x11c73:	pop	rbx
0x11c74:	pop	rbp
0x11c75:	jmp	0x115c0


0x11c8e:	mov	rsi, qword ptr [rbx + 0x58]
0x11c92:	cmp	qword ptr [rbx + 0x40], rsi
0x11c96:	cmovle	rsi, qword ptr [rbx + 0x40]
0x11c9b:	mov	rax, qword ptr [rbx + 0x30]
0x11c9f:	cmp	rsi, rax
0x11ca2:	jg	0x11cb4


0x11ca4:	jmp	0x11cd5


0x11cb4:	mov	rdx, qword ptr [rbx]
0x11cb7:	add	rdx, rax
0x11cba:	add	rdx, qword ptr [rbx + 0x28]
0x11cbe:	movzx	edx, byte ptr [rdx]
0x11cc1:	movzx	ecx, byte ptr [rcx + rdx]
0x11cc5:	mov	rdx, qword ptr [rbx + 8]
0x11cc9:	mov	byte ptr [rdx + rax], cl
0x11ccc:	add	rax, 1
0x11cd0:	cmp	rsi, rax
0x11cd3:	jne	0x11cb0


0x11cd5:	mov	qword ptr [rbx + 0x30], rax
0x11cd9:	mov	qword ptr [rbx + 0x38], rax
0x11cdd:	add	rsp, 8
0x11ce1:	mov	eax, ebp
0x11ce3:	pop	rbx
0x11ce4:	pop	rbp
0x11ce5:	ret	


0x11cb0:	mov	rcx, qword ptr [rbx + 0x78]
0x11cb4:	mov	rdx, qword ptr [rbx]
0x11cb7:	add	rdx, rax
0x11cba:	add	rdx, qword ptr [rbx + 0x28]
0x11cbe:	movzx	edx, byte ptr [rdx]
0x11cc1:	movzx	ecx, byte ptr [rcx + rdx]
0x11cc5:	mov	rdx, qword ptr [rbx + 8]
0x11cc9:	mov	byte ptr [rdx + rax], cl
0x11ccc:	add	rax, 1
0x11cd0:	cmp	rsi, rax
0x11cd3:	jne	0x11cb0


0x11d25:	add	rsp, 8
0x11d29:	mov	eax, ebp
0x11d2b:	pop	rbx
0x11d2c:	pop	rbp
0x11d2d:	ret	


0x11cf8:	add	rsp, 8
0x11cfc:	mov	eax, ebp
0x11cfe:	pop	rbx
0x11cff:	pop	rbp
0x11d00:	ret	


0x1b214:	cdqe	
0x1b216:	add	rax, r11
0x1b219:	mov	qword ptr [r10 + 0x48], rax
0x1b21d:	jmp	0x1b15a


0x16e8f:	cmp	r11b, 5
0x16e93:	mov	ebp, eax
0x16e95:	je	0x16f50


0x16f50:	cmp	eax, 1
0x16f53:	jle	0x16f40


0x16e9b:	cmp	r11b, 6
0x16e9f:	jne	0x16f40


0x16f55:	mov	rax, qword ptr [rbx]
0x16f58:	test	al, 0x40
0x16f5a:	je	0x16f70


0x16ea5:	cmp	eax, 1
0x16ea8:	jle	0x16f40


0x16f70:	mov	rdx, qword ptr [r10 + 8]
0x16f74:	cmp	byte ptr [rdx + r8], 0xa
0x16f79:	jne	0x16f5c


0x16f5c:	test	al, 0x80
0x16f5e:	je	0x16f42


0x16eae:	mov	r13, qword ptr [r9]
0x16eb1:	mov	rsi, qword ptr [r13 + 0x40]
0x16eb5:	mov	rdx, qword ptr [r13 + 0x28]
0x16eb9:	test	rsi, rsi
0x16ebc:	jne	0x16ec9


0x16f7b:	jmp	0x16f40


0x16f60:	mov	rax, qword ptr [r10 + 8]
0x16f64:	cmp	byte ptr [rax + r8], 0
0x16f69:	je	0x16f40


0x16ebe:	cmp	qword ptr [r13 + 0x48], 0
0x16ec3:	je	0x16fb8


0x16ec9:	mov	rax, qword ptr [r10 + 0x10]
0x16ecd:	test	rdx, rdx
0x16ed0:	mov	r12d, dword ptr [rax + r8*4]
0x16ed4:	jle	0x16ef7


0x16f6b:	jmp	0x16f42


0x16fb8:	test	rdx, rdx
0x16fbb:	jne	0x16ec9


0x16ef7:	mov	rax, qword ptr [r13 + 0x48]
0x16efb:	test	rax, rax
0x16efe:	jle	0x16fdc


0x16ed6:	mov	rcx, qword ptr [r13]
0x16eda:	cmp	r12d, dword ptr [rcx]
0x16edd:	je	0x16f32


0x16fc1:	test	byte ptr [r13 + 0x20], 1
0x16fc6:	jne	0x16f42


0x16fdc:	test	rsi, rsi
0x16fdf:	jle	0x16fc1


0x16f04:	xor	ebx, ebx
0x16f06:	jmp	0x16f1e


0x16f32:	test	byte ptr [r13 + 0x20], 1
0x16f37:	je	0x16f42


0x16edf:	xor	eax, eax
0x16ee1:	jmp	0x16eee


0x16fcc:	jmp	0x16f40


0x16fe1:	mov	rdx, qword ptr [r13 + 8]
0x16fe5:	xor	eax, eax
0x16fe7:	jmp	0x16ff9


0x16f1e:	mov	rax, qword ptr [r13 + 0x18]
0x16f22:	mov	edi, r12d
0x16f25:	mov	rsi, qword ptr [rax + rbx*8]
0x16f29:	call	0x24e0


0x16eee:	add	rax, 1
0x16ef2:	cmp	rax, rdx
0x16ef5:	jne	0x16ee8


0x16ff9:	cmp	r12d, dword ptr [rdx + rax*4]
0x16ffd:	jl	0x16ff0


0x24e0:	jmp	qword ptr [rip + 0x22584a]


0x16ee8:	cmp	r12d, dword ptr [rcx + rax*4]
0x16eec:	je	0x16f32


0x16ff0:	add	rax, 1
0x16ff4:	cmp	rax, rsi
0x16ff7:	je	0x16fc1


0x16fff:	mov	rcx, qword ptr [r13 + 0x10]
0x17003:	cmp	r12d, dword ptr [rcx + rax*4]
0x17007:	jg	0x16ff0




0x17009:	jmp	0x16f32


0x1b080:	cmp	eax, 1
0x1b083:	jle	0x1b0c8


0x1b085:	mov	rdx, qword ptr [r10 + 0x10]
0x1b089:	cdqe	
0x1b08b:	mov	dword ptr [rbx], 1
0x1b091:	add	rax, r12
0x1b094:	mov	edx, dword ptr [rdx + r12*4]
0x1b098:	mov	dword ptr [rbx + 8], edx
0x1b09b:	mov	qword ptr [r10 + 0x48], rax
0x1b09f:	xor	eax, eax
0x1b0a1:	mov	rcx, qword ptr [rsp + 0x18]
0x1b0a6:	xor	rcx, qword ptr fs:[0x28]
0x1b0af:	jne	0x1b298


0x1e425:	mov	rax, qword ptr [r12 + 0x50]
0x1e42a:	cmp	qword ptr [r12 + 0x48], rax
0x1e42f:	je	0x1e449


0x1e449:	mov	rsi, qword ptr [r12 + 0x58]
0x1e44e:	cmp	rsi, rax
0x1e451:	je	0x1e46b


0x1e431:	lea	rdx, [rax + 0x18]
0x1e435:	lea	rsi, [rax + 0x10]
0x1e439:	mov	rcx, rbp
0x1e43c:	mov	rdi, rbx
0x1e43f:	call	0x16920


0x1e46b:	mov	rsi, qword ptr [r12 + 0x60]
0x1e470:	cmp	rsi, rax
0x1e473:	je	0x1e488


0x1e453:	lea	rdx, [rsi + 0x18]
0x1e457:	mov	rcx, rbp
0x1e45a:	add	rsi, 0x10
0x1e45e:	mov	rdi, rbx
0x1e461:	call	0x16920


0x1e488:	or	byte ptr [rbx + 0x38], 8
0x1e48c:	xor	eax, eax
0x1e48e:	pop	rbx
0x1e48f:	pop	rbp
0x1e490:	pop	r12
0x1e492:	ret	


0x1e475:	lea	rdx, [rsi + 0x18]
0x1e479:	mov	rcx, rbp
0x1e47c:	add	rsi, 0x10
0x1e480:	mov	rdi, rbx
0x1e483:	call	0x16920


0x1e466:	mov	rax, qword ptr [r12 + 0x48]
0x1e46b:	mov	rsi, qword ptr [r12 + 0x60]
0x1e470:	cmp	rsi, rax
0x1e473:	je	0x1e488


0x1e444:	mov	rax, qword ptr [r12 + 0x48]
0x1e449:	mov	rsi, qword ptr [r12 + 0x58]
0x1e44e:	cmp	rsi, rax
0x1e451:	je	0x1e46b


0x1e73c:	movzx	eax, byte ptr [r15 + 0x38]
0x1e741:	mov	r9, qword ptr [rsp + 0x20]
0x1e746:	mov	rdx, qword ptr [rsp + 0x18]
0x1e74b:	mov	rsi, qword ptr [rsp + 0x10]
0x1e750:	mov	r8, qword ptr [rsp + 8]
0x1e755:	jmp	0x1e531


0x4edc:	test	rax, rax
0x4edf:	je	0x4f10


0x4f10:	pop	rbx
0x4f11:	mov	eax, 0xffffffff
0x4f16:	pop	rbp
0x4f17:	pop	r12
0x4f19:	ret	


0x4ee1:	lea	rdi, [rbx + 8]
0x4ee5:	mov	rsi, r12
0x4ee8:	mov	rbp, rax
0x4eeb:	call	0x4db0


0x4ef0:	cmp	rax, -1
0x4ef4:	je	0x4f10


0x4ef6:	pop	rbx
0x4ef7:	mov	rdi, rbp
0x4efa:	xor	edx, edx
0x4efc:	mov	rsi, rax
0x4eff:	pop	rbp
0x4f00:	pop	r12
0x4f02:	jmp	0x8ad0


0x4f3c:	test	rax, rax
0x4f3f:	je	0x4f70


0x4f70:	mov	eax, 0xffffffff
0x4f75:	jmp	0x4f6a


0x4f41:	lea	rdi, [rbx + 8]
0x4f45:	mov	rsi, r12
0x4f48:	mov	rbp, rax
0x4f4b:	call	0x4db0


0x4f6a:	pop	rbx
0x4f6b:	pop	rbp
0x4f6c:	pop	r12
0x4f6e:	ret	


0x4f50:	cmp	rax, -1
0x4f54:	je	0x4f70


0x4f56:	mov	rsi, rax
0x4f59:	mov	rdi, rbp
0x4f5c:	call	0x82f0


0x4fa9:	test	eax, eax
0x4fab:	sete	al
0x4fae:	add	rsp, 8
0x4fb2:	ret	


0x7ad2:	add	rsp, 0x20
0x7ad6:	mov	rdx, qword ptr [rsp + 8]
0x7adb:	xor	rdx, qword ptr fs:[0x28]
0x7ae4:	jne	0x7aeb


0x7ae6:	add	rsp, 0x18
0x7aea:	ret	


0x7aeb:	call	0x2560


0xe379:	cmp	rax, 0x52654973
0xe37f:	je	0xe3d0


0xe3d0:	mov	eax, 2
0xe3d5:	add	rsp, 8
0xe3d9:	ret	


0xe381:	jle	0xe3b0


0xe3b0:	cmp	rax, 0x6969
0xe3b6:	je	0xe3c5


0xe383:	cmp	rax, 0x58465342
0xe389:	je	0xe3d0


0xe3c5:	xor	eax, eax
0xe3c7:	add	rsp, 8
0xe3cb:	ret	


0xe3b8:	cmp	rax, 0x9fa0
0xe3be:	je	0xe3c5


0xe38b:	mov	edx, 0xff534d42
0xe390:	cmp	rax, rdx
0xe393:	je	0xe3c5


0xe3c0:	test	rax, rax
0xe3c3:	jne	0xe39d


0xe395:	cmp	rax, 0x5346414f
0xe39b:	je	0xe3c5


0xe39d:	mov	eax, 1
0xe3a2:	add	rsp, 8
0xe3a6:	ret	


0x12407:	cmp	qword ptr [r12 + 0x10], rbx
0x1240c:	ja	0x123f0


0x123f0:	mov	rdi, qword ptr [r12]
0x123f4:	mov	rax, rbx
0x123f7:	add	rbx, 1
0x123fb:	shl	rax, 4
0x123ff:	add	rdi, rax
0x12402:	call	0x11df0


0x11e2d:	xor	eax, eax
0x11e2f:	add	rsp, 8
0x11e33:	ret	


0x15cf3:	cmp	rax, -1
0x15cf7:	mov	rdx, rax
0x15cfa:	mov	qword ptr [rbx + 0x38], rax
0x15cfe:	je	0x15d50


0x15d50:	mov	eax, 0xc
0x15d55:	jmp	0x15d2c


0x15d00:	xor	eax, eax
0x15d02:	cmp	byte ptr [rbx + 0x30], 0xc
0x15d06:	jne	0x15d2c


0x15d2c:	add	rsp, 8
0x15d30:	pop	rbx
0x15d31:	pop	rbp
0x15d32:	ret	


0x15d08:	mov	ecx, dword ptr [rbx + 0x28]
0x15d0b:	shl	rdx, 4
0x15d0f:	add	rdx, qword ptr [rbp]
0x15d13:	and	ecx, 0x3ff
0x15d19:	shl	ecx, 8
0x15d1c:	mov	esi, ecx
0x15d1e:	mov	ecx, dword ptr [rdx + 8]
0x15d21:	and	ecx, 0xfffc00ff
0x15d27:	or	ecx, esi
0x15d29:	mov	dword ptr [rdx + 8], ecx
0x15d2c:	add	rsp, 8
0x15d30:	pop	rbx
0x15d31:	pop	rbp
0x15d32:	ret	


0x1203b:	cmp	rax, -1
0x1203f:	je	0x120a4


0x120a4:	add	rsp, 8
0x120a8:	pop	rbx
0x120a9:	pop	rbp
0x120aa:	pop	r12
0x120ac:	pop	r13
0x120ae:	ret	


0x12041:	mov	edi, r12d
0x12044:	mov	r8, qword ptr [rbx]
0x12047:	mov	rsi, rax
0x1204a:	and	di, 0x3ff
0x1204f:	shl	rsi, 4
0x12053:	mov	ecx, edi
0x12055:	and	ecx, 0x3ff
0x1205b:	add	rsi, r8
0x1205e:	shl	ecx, 8
0x12061:	mov	edx, ecx
0x12063:	mov	ecx, dword ptr [rsi + 8]
0x12066:	and	ecx, 0xfffc00ff
0x1206c:	or	ecx, edx
0x1206e:	mov	dword ptr [rsi + 8], ecx
0x12071:	mov	edx, dword ptr [r8 + r13 + 8]
0x12076:	and	ecx, 0xfffc00ff
0x1207c:	shr	edx, 8
0x1207f:	or	edx, edi
0x12081:	and	edx, 0x3ff
0x12087:	shl	edx, 8
0x1208a:	or	edx, ecx
0x1208c:	mov	ecx, edx
0x1208e:	mov	dword ptr [rsi + 8], edx
0x12091:	shr	ecx, 0x10
0x12094:	mov	edx, ecx
0x12096:	or	edx, 4
0x12099:	mov	byte ptr [rsi + 0xa], dl
0x1209c:	mov	rdx, qword ptr [rbx + 0x20]
0x120a0:	mov	qword ptr [rdx + rax*8], rbp
0x120a4:	add	rsp, 8
0x120a8:	pop	rbx
0x120a9:	pop	rbp
0x120aa:	pop	r12
0x120ac:	pop	r13
0x120ae:	ret	


0x121b7:	cmp	rax, -1
0x121bb:	mov	r13, rax
0x121be:	je	0x121db


0x121c0:	add	rbx, qword ptr [r14 + 0x28]
0x121c4:	mov	rsi, r13
0x121c7:	mov	rdi, rbx
0x121ca:	call	0x11160


0x121cf:	test	al, al
0x121d1:	mov	r9, qword ptr [rsp]
0x121d5:	jne	0x120cf


0x120cf:	mov	r8, qword ptr [r14]
0x120d2:	mov	rax, r9
0x120d5:	mov	rdi, qword ptr [r14 + 0x28]
0x120d9:	shl	rax, 4
0x120dd:	mov	r12, r13
0x120e0:	add	rax, r8
0x120e3:	cmp	byte ptr [rax + 8], 4
0x120e7:	je	0x122a0


0x121fd:	cmp	rax, -1
0x12201:	mov	r13, rax
0x12204:	je	0x121db


0x12206:	mov	rdi, qword ptr [r14 + 0x28]
0x1220a:	mov	rsi, r13
0x1220d:	add	rdi, rbx
0x12210:	call	0x11160


0x12215:	test	al, al
0x12217:	je	0x121db


0x12219:	mov	rcx, qword ptr [rsp + 8]
0x1221e:	mov	r8d, ebp
0x12221:	mov	rdx, r13
0x12224:	mov	rsi, r15
0x12227:	mov	rdi, r14
0x1222a:	call	0x120b0


0x1222f:	test	eax, eax
0x12231:	je	0x12199


0x12237:	jmp	0x121e0


0x1226a:	cmp	rax, -1
0x1226e:	mov	r13, rax
0x12271:	je	0x121db


0x12277:	add	rbx, qword ptr [r14 + 0x28]
0x1227b:	mov	rsi, rax
0x1227e:	mov	rdi, rbx
0x12281:	call	0x11160


0x12286:	test	al, al
0x12288:	je	0x121db


0x1228e:	mov	r9, r15
0x12291:	jmp	0x120cf


0x122d3:	cmp	rax, -1
0x122d7:	mov	r13, rax
0x122da:	mov	r9, qword ptr [rsp]
0x122de:	je	0x121db


0x122e4:	mov	rax, qword ptr [r14 + 0x18]
0x122e8:	mov	qword ptr [rsp], r9
0x122ec:	mov	rcx, qword ptr [rax + r15]
0x122f0:	mov	qword ptr [rax + r12*8], rcx
0x122f4:	jmp	0x121c0


0x1ad6e:	test	rax, rax
0x1ad71:	jne	0x1ad38


0x1ad73:	add	r9, qword ptr [r12 + 0x30]
0x1ad78:	mov	rdi, qword ptr [r9 + 8]
0x1ad7c:	lea	rsi, [r9 + 0x10]
0x1ad80:	call	0x126a0


0x1ad38:	add	rbp, 1
0x1ad3c:	cmp	rbp, qword ptr [rbx + 8]
0x1ad40:	jge	0x1adc8


0x1ad46:	mov	r10, qword ptr [rbx + 0x10]
0x1ad4a:	mov	r10, qword ptr [r10 + rbp*8]
0x1ad4e:	mov	rax, qword ptr [r12 + 0x38]
0x1ad53:	mov	rdx, r14
0x1ad56:	lea	r9, [r10 + r10*2]
0x1ad5a:	shl	r9, 3
0x1ad5e:	add	rax, r9
0x1ad61:	mov	rdi, qword ptr [rax + 8]
0x1ad65:	lea	rsi, [rax + 0x10]
0x1ad69:	call	0x126a0


0x1adc8:	mov	rbp, qword ptr [rsp + 0x30]
0x1adcd:	jmp	0x1ac5d


0x1ad85:	test	rax, rax
0x1ad88:	jne	0x1ad38


0x1ad8a:	mov	rcx, qword ptr [rsp + 0x10]
0x1ad8f:	mov	rdx, rbx
0x1ad92:	mov	rsi, r10
0x1ad95:	mov	rdi, r12
0x1ad98:	call	0x14ef0


0x1ae6e:	test	rax, rax
0x1ae71:	je	0x1af87


0x1ae77:	sub	rsp, 8
0x1ae7b:	lea	rdx, [rbx + 0x30]
0x1ae7f:	lea	rsi, [rbx + 0x28]
0x1ae83:	push	r9
0x1ae85:	mov	rdi, qword ptr [rsp + 0x18]
0x1ae8a:	mov	rcx, r14
0x1ae8d:	mov	r9, r10
0x1ae90:	mov	r8, rbp
0x1ae93:	call	0x12950


0x1ae98:	test	al, al
0x1ae9a:	pop	rdx
0x1ae9b:	pop	rcx
0x1ae9c:	jne	0x1af87


0x1aea2:	cmp	qword ptr [rsp + 0x60], 0
0x1aea8:	je	0x1afb8


0x1afb8:	mov	rax, qword ptr [rbx + 0x30]
0x1afbc:	lea	rsi, [rbx + 0x20]
0x1afc0:	movdqa	xmm0, xmmword ptr [rbx]
0x1afc4:	mov	qword ptr [rsp + 0x90], rax
0x1afcc:	mov	rax, qword ptr [rsp + 0x38]
0x1afd1:	movaps	xmmword ptr [rsp + 0x60], xmm0
0x1afd6:	lea	rdi, [rax + 0x20]
0x1afda:	movdqa	xmm0, xmmword ptr [rbx + 0x10]
0x1afdf:	movaps	xmmword ptr [rsp + 0x70], xmm0
0x1afe4:	movdqa	xmm0, xmmword ptr [rbx + 0x20]
0x1afe9:	movaps	xmmword ptr [rsp + 0x80], xmm0
0x1aff1:	call	0x13800


0x1aeae:	mov	rax, qword ptr [rsp + 0x38]
0x1aeb3:	mov	rsi, r13
0x1aeb6:	mov	qword ptr [rsp + 0x70], r14
0x1aebb:	mov	qword ptr [rsp + 0x78], rbp
0x1aec0:	lea	rdi, [rax + 0x20]
0x1aec4:	call	0x11160


0x1aec9:	test	al, al
0x1aecb:	je	0x1b024


0x1b024:	mov	eax, 0xc
0x1b029:	jmp	0x1affe


0x1aed1:	mov	rdi, qword ptr [rsp + 0x18]
0x1aed6:	mov	rax, qword ptr [rsp + 0x60]
0x1aedb:	mov	rsi, qword ptr [rsp + 0x38]
0x1aee0:	mov	r15, qword ptr [rax + rdi]
0x1aee4:	mov	rdi, qword ptr [rsp + 8]
0x1aee9:	call	0x18d80


0x1affe:	cmp	qword ptr [rsp + 0x60], 0
0x1b004:	je	0x1a888


0x1aff6:	test	eax, eax
0x1aff8:	je	0x1aeae


0x141ae:	test	rax, rax
0x141b1:	je	0x14189


0x14189:	add	r15, 0x28
0x1418d:	cmp	byte ptr [r15 - 8], 0
0x14192:	je	0x1404d


0x141b3:	mov	r8, qword ptr [r15 + 0x18]
0x141b7:	add	r8, r12
0x141ba:	mov	r14, r8
0x141bd:	sub	r14, qword ptr [r15 + 0x10]
0x141c1:	cmp	r12, r14
0x141c4:	jne	0x140c8


0x141ca:	mov	rcx, qword ptr [r13 + 0x28]
0x141ce:	lea	rax, [r10 + r10*2]
0x141d2:	mov	rsi, qword ptr [rsp]
0x141d6:	mov	rdi, r9
0x141d9:	lea	rax, [rcx + rax*8]
0x141dd:	mov	rax, qword ptr [rax + 0x10]
0x141e1:	mov	r14, qword ptr [rax]
0x141e4:	mov	rdx, r14
0x141e7:	call	0x126a0


0x140c8:	mov	rax, qword ptr [r13 + 0x18]
0x140cc:	mov	rcx, qword ptr [rax + r10*8]
0x140d0:	mov	r10, qword ptr [rbx + 0xb8]
0x140d7:	lea	rax, [r14*8]
0x140df:	mov	qword ptr [rsp + 0x18], rax
0x140e4:	add	r10, rax
0x140e7:	mov	qword ptr [rsp + 8], rcx
0x140ec:	mov	r9, qword ptr [r10]
0x140ef:	test	r9, r9
0x140f2:	je	0x14280


0x14280:	mov	edi, 8
0x14285:	mov	qword ptr [rsp + 0x18], r10
0x1428a:	mov	qword ptr [rsp + 0x50], 1
0x14293:	mov	qword ptr [rsp + 0x58], 1
0x1429c:	call	0x2780


0x140f8:	mov	rdi, qword ptr [r9 + 0x10]
0x140fc:	lea	rsi, [r9 + 0x18]
0x14100:	mov	rdx, rcx
0x14103:	call	0x126a0


0x14108:	test	rax, rax
0x1410b:	jne	0x14189


0x1410d:	mov	rdi, qword ptr [rsp + 0x10]
0x14112:	lea	rsi, [r9 + 8]
0x14116:	call	0x13800


0x1411b:	mov	rsi, qword ptr [rsp + 8]
0x14120:	mov	rdi, qword ptr [rsp + 0x10]
0x14125:	mov	dword ptr [rsp + 0x4c], eax
0x14129:	call	0x11160


0x1412e:	mov	edx, dword ptr [rsp + 0x4c]
0x14132:	test	edx, edx
0x14134:	jne	0x142d6


0x1413a:	cmp	al, 1
0x1413c:	jne	0x142d6


0x142d6:	mov	rdi, qword ptr [rsp + 0x60]
0x142db:	call	0x2a10


0x14142:	mov	r10, qword ptr [rsp + 0x18]
0x14147:	add	r10, qword ptr [rbx + 0xb8]
0x1414e:	mov	rdx, qword ptr [rsp + 0x10]
0x14153:	mov	rdi, qword ptr [rsp + 0x38]
0x14158:	mov	rsi, r13
0x1415b:	mov	qword ptr [rsp + 8], r10
0x14160:	call	0x13cb0


0x14165:	mov	r10, qword ptr [rsp + 8]
0x1416a:	mov	rdi, qword ptr [rsp + 0x60]
0x1416f:	mov	qword ptr [r10], rax
0x14172:	call	0x2a10


0x141ec:	test	rax, rax
0x141ef:	jne	0x14189


0x141f1:	mov	edi, 8
0x141f6:	mov	qword ptr [rsp + 0x50], 1
0x141ff:	mov	qword ptr [rsp + 0x58], 1
0x14208:	call	0x2780


0x150a8:	test	rax, rax
0x150ab:	jne	0x150d2


0x150ad:	lea	rbx, [r14 + 0x10]
0x150b1:	mov	rdi, qword ptr [r14 + 8]
0x150b5:	mov	rsi, rbx
0x150b8:	call	0x126a0


0x150d2:	add	r9, 1
0x150d6:	cmp	qword ptr [rbp + 8], r9
0x150da:	jg	0x15090


0x15090:	mov	rax, qword ptr [rbp + 0x10]
0x15094:	mov	rdi, qword ptr [rsp + 0x28]
0x15099:	mov	rsi, r11
0x1509c:	mov	r10, qword ptr [rax + r9*8]
0x150a0:	mov	rdx, r10
0x150a3:	call	0x126a0


0x150bd:	sub	rax, 1
0x150c1:	mov	rdx, rax
0x150c4:	js	0x150d2


0x150c6:	lea	rdi, [r14 + 8]
0x150ca:	mov	rsi, rbx
0x150cd:	call	0x12820


0x14ffd:	mov	rcx, qword ptr [rsp + 8]
0x15002:	mov	r8, qword ptr [rsp]
0x15006:	cmp	qword ptr [rcx + 8], 1
0x1500b:	jg	0x14f58


0x15011:	test	rax, rax
0x15014:	jne	0x14fa0


0x14f58:	test	rax, rax
0x14f5b:	jne	0x15038


0x15016:	mov	rdi, qword ptr [r14 + 8]
0x1501a:	lea	rsi, [r14 + 0x10]
0x1501e:	mov	rdx, r8
0x15021:	call	0x126a0


0x14f61:	mov	rdi, qword ptr [r14 + 8]
0x14f65:	lea	rsi, [r14 + 0x10]
0x14f69:	mov	rdx, r8
0x14f6c:	call	0x126a0


0x15038:	mov	r15, qword ptr [r15 + 8]
0x1503c:	test	r15, r15
0x1503f:	jle	0x14fa0


0x15045:	mov	rdx, r15
0x15048:	mov	rsi, r11
0x1504b:	mov	rdi, r10
0x1504e:	call	0x126a0


0x15053:	test	rax, rax
0x15056:	jne	0x14fa0


0x1505c:	mov	rdi, qword ptr [r14 + 8]
0x15060:	lea	rsi, [r14 + 0x10]
0x15064:	call	0x126a0


0x15069:	test	rax, rax
0x1506c:	je	0x14fa0


0x15072:	jmp	0x14f7a


0x14f7a:	mov	rdx, qword ptr [r12 + 0x38]
0x14f7f:	mov	rsi, qword ptr [rsp + 0x10]
0x14f84:	mov	rdi, qword ptr [rsp + 0x18]
0x14f89:	add	rdx, r9
0x14f8c:	call	0x131b0


0x14f91:	test	eax, eax
0x14f93:	jne	0x15110


0x14f99:	mov	r10, qword ptr [rbp + 8]
0x14f9d:	nop	dword ptr [rax]
0x14fa0:	add	rbx, 1
0x14fa4:	cmp	r10, rbx
0x14fa7:	jle	0x15080


0x15110:	mov	rdi, qword ptr [rsp + 0x30]
0x15115:	mov	dword ptr [rsp], eax
0x15118:	call	0x2a10


0x14f71:	test	rax, rax
0x14f74:	je	0x15038


0x15026:	test	rax, rax
0x15029:	jne	0x14f7a


0x1502f:	jmp	0x14fa0


0x12750:	test	rax, rax
0x12753:	jne	0x127c0


0x12755:	mov	rax, rbx
0x12758:	shl	rax, 4
0x1275c:	add	rax, qword ptr [r12]
0x12760:	movzx	edx, byte ptr [rax + 8]
0x12764:	cmp	edx, r13d
0x12767:	jne	0x1276e


0x127c0:	xor	eax, eax
0x127c2:	add	rsp, 8
0x127c6:	pop	rbx
0x127c7:	pop	rbp
0x127c8:	pop	r12
0x127ca:	pop	r13
0x127cc:	pop	r14
0x127ce:	pop	r15
0x127d0:	ret	


0x12769:	cmp	qword ptr [rax], r15
0x1276c:	je	0x127a8


0x1276e:	mov	rsi, rbx
0x12771:	mov	rdi, rbp
0x12774:	call	0x11160


0x127a8:	cmp	r13d, 9
0x127ac:	jne	0x127c0


0x127ae:	mov	rsi, rbx
0x127b1:	mov	rdi, rbp
0x127b4:	call	0x11160


0x127b9:	test	al, al
0x127bb:	je	0x127d8


0x127d8:	add	rsp, 8
0x127dc:	mov	eax, 0xc
0x127e1:	pop	rbx
0x127e2:	pop	rbp
0x127e3:	pop	r12
0x127e5:	pop	r13
0x127e7:	pop	r14
0x127e9:	pop	r15
0x127eb:	ret	


0x12779:	test	al, al
0x1277b:	je	0x127d8


0x1277d:	lea	rbx, [rbx + rbx*2]
0x12781:	mov	rdx, qword ptr [r12 + 0x28]
0x12786:	shl	rbx, 3
0x1278a:	add	rdx, rbx
0x1278d:	mov	rax, qword ptr [rdx + 8]
0x12791:	test	rax, rax
0x12794:	je	0x127c0


0x12796:	cmp	rax, 2
0x1279a:	mov	rdx, qword ptr [rdx + 0x10]
0x1279e:	je	0x127f0


0x127f0:	mov	rdx, qword ptr [rdx + 8]
0x127f4:	mov	r8d, r13d
0x127f7:	mov	rcx, r15
0x127fa:	mov	rsi, rbp
0x127fd:	mov	rdi, r12
0x12800:	call	0x12720


0x127a0:	mov	rbx, qword ptr [rdx]
0x127a3:	jmp	0x12741


0x12741:	mov	rdi, qword ptr [rbp + 8]
0x12745:	mov	rdx, rbx
0x12748:	mov	rsi, r14
0x1274b:	call	0x126a0


0x12805:	test	eax, eax
0x12807:	jne	0x127c2


0x12809:	mov	rax, qword ptr [r12 + 0x28]
0x1280e:	mov	rdx, qword ptr [rax + rbx + 0x10]
0x12813:	jmp	0x127a0


0x127c2:	add	rsp, 8
0x127c6:	pop	rbx
0x127c7:	pop	rbp
0x127c8:	pop	r12
0x127ca:	pop	r13
0x127cc:	pop	r14
0x127ce:	pop	r15
0x127d0:	ret	


0x135a7:	mov	rdi, r15
0x135aa:	mov	r8, r14
0x135ad:	xor	ecx, ecx
0x135af:	xor	edx, edx
0x135b1:	mov	rsi, rbx
0x135b4:	mov	r12, rax
0x135b7:	mov	byte ptr [rsp + 0x28], 9
0x135bc:	call	0x13360


0x135c1:	mov	r15, rax
0x135c4:	jmp	0x1371d


0x1371d:	mov	rdi, qword ptr [rsp + 8]
0x13722:	mov	r8, r14
0x13725:	mov	rcx, r15
0x13728:	mov	rdx, rbp
0x1372b:	mov	rsi, rbx
0x1372e:	mov	byte ptr [rsp + 0x28], 0x10
0x13733:	call	0x13360


0x13738:	mov	r11, rax
0x1373b:	jmp	0x1361c


0x1361c:	mov	rdi, qword ptr [rsp + 8]
0x13621:	mov	r8, r14
0x13624:	mov	rcx, r11
0x13627:	mov	rdx, r12
0x1362a:	mov	rsi, rbx
0x1362d:	mov	byte ptr [rsp + 0x28], 0x10
0x13632:	mov	qword ptr [rsp + 0x10], r11
0x13637:	call	0x13360


0x1363c:	test	rax, rax
0x1363f:	mov	rbp, rax
0x13642:	je	0x13740


0x13740:	mov	rax, qword ptr [rsp + 0x18]
0x13745:	xor	ebp, ebp
0x13747:	mov	dword ptr [rax], 0xc
0x1374d:	jmp	0x1369d


0x13648:	mov	r11, qword ptr [rsp + 0x10]
0x1364d:	test	r11, r11
0x13650:	je	0x13740


0x13656:	test	r12, r12
0x13659:	je	0x13740


0x1365f:	test	r15, r15
0x13662:	je	0x13740


0x13668:	mov	rax, qword ptr [r13 + 0x28]
0x1366c:	mov	qword ptr [r15 + 0x28], rax
0x13670:	mov	qword ptr [r12 + 0x28], rax
0x13675:	movzx	eax, byte ptr [r13 + 0x32]
0x1367a:	movzx	edx, byte ptr [r15 + 0x32]
0x1367f:	and	eax, 8
0x13682:	and	edx, 0xfffffff7
0x13685:	mov	ecx, eax
0x13687:	or	edx, ecx
0x13689:	mov	byte ptr [r15 + 0x32], dl
0x1368d:	movzx	eax, byte ptr [r12 + 0x32]
0x13693:	and	eax, 0xfffffff7
0x13696:	or	eax, ecx
0x13698:	mov	byte ptr [r12 + 0x32], al
0x1369d:	mov	rdi, qword ptr [rsp + 0x38]
0x136a2:	xor	rdi, qword ptr fs:[0x28]
0x136ab:	mov	rax, rbp
0x136ae:	jne	0x13752


0x135fc:	mov	rdi, r15
0x135ff:	mov	r8, r14
0x13602:	xor	ecx, ecx
0x13604:	xor	edx, edx
0x13606:	mov	rsi, rbx
0x13609:	mov	r12, rax
0x1360c:	mov	byte ptr [rsp + 0x28], 9
0x13611:	call	0x13360


0x13616:	mov	r11, rax
0x13619:	mov	r15, rax
0x1361c:	mov	rdi, qword ptr [rsp + 8]
0x13621:	mov	r8, r14
0x13624:	mov	rcx, r11
0x13627:	mov	rdx, r12
0x1362a:	mov	rsi, rbx
0x1362d:	mov	byte ptr [rsp + 0x28], 0x10
0x13632:	mov	qword ptr [rsp + 0x10], r11
0x13637:	call	0x13360


0x136f4:	xor	ecx, ecx
0x136f6:	xor	edx, edx
0x136f8:	mov	rdi, r15
0x136fb:	mov	r8, r14
0x136fe:	mov	rsi, rbx
0x13701:	mov	r12, rax
0x13704:	mov	byte ptr [rsp + 0x28], 9
0x13709:	call	0x13360


0x1370e:	test	rbp, rbp
0x13711:	mov	r15, rax
0x13714:	mov	r11, rax
0x13717:	je	0x1361c


0x13483:	test	rax, rax
0x13486:	mov	qword ptr [r14], rax
0x13489:	je	0x134dc


0x134dc:	mov	rcx, qword ptr [rsp + 8]
0x134e1:	xor	rcx, qword ptr fs:[0x28]
0x134ea:	jne	0x1350c


0x1348b:	mov	qword ptr [rax], rbp
0x1348e:	mov	rbp, qword ptr [r14]
0x13491:	or	byte ptr [rbp + 0x32], 4
0x13495:	mov	rax, qword ptr [rbx + 8]
0x13499:	test	rax, rax
0x1349c:	je	0x134b0


0x134ec:	add	rsp, 0x10
0x134f0:	pop	rbx
0x134f1:	pop	rbp
0x134f2:	pop	r12
0x134f4:	pop	r13
0x134f6:	pop	r14
0x134f8:	ret	


0x1350c:	call	0x2560


0x134b0:	xor	edx, edx
0x134b2:	jmp	0x134bb


0x1349e:	lea	r14, [rbp + 8]
0x134a2:	mov	rbx, rax
0x134a5:	jmp	0x13470


0x134bb:	mov	rax, qword ptr [rbx + 0x10]
0x134bf:	test	rax, rax
0x134c2:	je	0x134c9


0x13470:	lea	r8, [rbx + 0x28]
0x13474:	xor	ecx, ecx
0x13476:	xor	edx, edx
0x13478:	mov	rsi, r12
0x1347b:	mov	rdi, r13
0x1347e:	call	0x13360


0x134c9:	mov	rax, qword ptr [rbx]
0x134cc:	mov	rbp, qword ptr [rbp]
0x134d0:	mov	rdx, rbx
0x134d3:	test	rax, rax
0x134d6:	jne	0x134b8


0x134c4:	cmp	rax, rdx
0x134c7:	jne	0x13500


0x134d8:	mov	rax, qword ptr [rsp]
0x134dc:	mov	rcx, qword ptr [rsp + 8]
0x134e1:	xor	rcx, qword ptr fs:[0x28]
0x134ea:	jne	0x1350c


0x134b8:	mov	rbx, rax
0x134bb:	mov	rax, qword ptr [rbx + 0x10]
0x134bf:	test	rax, rax
0x134c2:	je	0x134c9


0x13500:	lea	r14, [rbp + 0x10]
0x13504:	mov	rbx, rax
0x13507:	jmp	0x13470


0x19e4f:	mov	rdx, qword ptr [rsp + 0x60]
0x19e54:	mov	rdi, qword ptr [rsp + 0x80]
0x19e5c:	mov	ecx, eax
0x19e5e:	add	r12, qword ptr [rsp + 0x1d8]
0x19e66:	mov	rsi, r13
0x19e69:	call	0x139f0


0x19e6e:	mov	rdi, qword ptr [rsp + 0xf0]
0x19e76:	mov	qword ptr [r12], rax
0x19e7a:	call	0x2a10


0x19f44:	mov	rdi, qword ptr [rsp + 0x80]
0x19f4c:	mov	rdx, qword ptr [rsp + 0x60]
0x19f51:	mov	ecx, eax
0x19f53:	mov	rsi, r13
0x19f56:	call	0x139f0


0x19f5b:	mov	rdi, qword ptr [rsp + 0x1d8]
0x19f63:	mov	qword ptr [r15], rax
0x19f66:	cmp	qword ptr [rdi + rbp*8], 0
0x19f6b:	jne	0x19e92


0x19f71:	mov	eax, dword ptr [rsp + 0xd4]
0x19f78:	test	eax, eax
0x19f7a:	je	0x19e92


0x19f80:	mov	rbx, qword ptr [rsp + 0xa0]
0x19f88:	jmp	0x1a090


0x1a090:	test	rdi, rdi
0x1a093:	mov	dword ptr [rsp + 0xd0], eax
0x1a09a:	je	0x1a180


0x19eea:	mov	ecx, dword ptr [rsp + 0x10]
0x19eee:	shr	ecx, 8
0x19ef1:	mov	edx, ecx
0x19ef3:	and	dx, 0x3ff
0x19ef8:	test	cl, 4
0x19efb:	jne	0x19d58


0x19f01:	and	ecx, 8
0x19f04:	je	0x19d69


0x19d58:	test	al, 1
0x19d5a:	je	0x19e9a


0x19d69:	test	dl, 0x20
0x19d6c:	je	0x19d76


0x19f0a:	test	al, 1
0x19f0c:	je	0x19d69


0x19d60:	and	ecx, 8
0x19d63:	jne	0x19e9a


0x19d76:	and	edx, 0x80
0x19d7c:	je	0x19d90


0x19d6e:	test	al, 2
0x19d70:	je	0x19e9a


0x19f12:	jmp	0x19e9a


0x19d7e:	test	al, 8
0x19d80:	je	0x19e9a


0x19fb9:	test	al, 1
0x19fbb:	je	0x1a070


0x1a070:	mov	r13, qword ptr [rbp + r13*8]
0x1a075:	jmp	0x19885


0x19fc1:	mov	r13, qword ptr [rbp + r13*8 + 0x800]
0x19fc9:	jmp	0x19885


0x19885:	cmp	qword ptr [rsp + 0x1d8], 0
0x1988e:	je	0x198a4


0x1a0c4:	test	al, 1
0x1a0c6:	je	0x1a235


0x1a235:	test	eax, eax
0x1a237:	je	0x1973e


0x1a0cc:	mov	r14, qword ptr [rbx + 0x50]
0x1a0d0:	test	r14, r14
0x1a0d3:	jne	0x1973e


0x1a23d:	mov	edx, eax
0x1a23f:	and	edx, 6
0x1a242:	cmp	edx, 6
0x1a245:	je	0x1a6af


0x1a0d9:	mov	eax, dword ptr [rsp + 0xd0]
0x1a0e0:	cmp	eax, 0xc
0x1a0e3:	mov	dword ptr [rsp + 0x5c], eax
0x1a0e7:	je	0x19c10


0x1a6af:	mov	r14, qword ptr [rbx + 0x60]
0x1a6b3:	jmp	0x1a0d0


0x1a24b:	test	al, 2
0x1a24d:	je	0x1a700


0x1a0ed:	lea	rcx, [rip + 0x8c7c]
0x1a0f4:	lea	rsi, [rip + 0x86a5]
0x1a0fb:	lea	rdi, [rip + 0x874e]
0x1a102:	mov	edx, 0x435
0x1a107:	call	0x2600


0x1a0d0:	test	r14, r14
0x1a0d3:	jne	0x1973e


0x1a700:	test	al, 4
0x1a702:	je	0x1973e


0x1a253:	mov	r14, qword ptr [rbx + 0x58]
0x1a257:	jmp	0x1a0d0


0x1a708:	mov	rdx, qword ptr [r14 + 0x50]
0x1a70c:	mov	rdi, qword ptr [rsp + 0x28]
0x1a711:	mov	ecx, eax
0x1a713:	mov	rsi, rbx
0x1a716:	call	0x139f0


0x1a71b:	mov	r14, rax
0x1a71e:	jmp	0x1a0d0


0x18c73:	mov	r8, qword ptr [rbx + 0xb8]
0x18c7a:	mov	rdx, qword ptr [rsp]
0x18c7e:	mov	ecx, eax
0x18c80:	mov	rsi, r15
0x18c83:	mov	rdi, r13
0x18c86:	add	r8, rbp
0x18c89:	mov	qword ptr [rsp + 8], r8
0x18c8e:	call	0x139f0


0x18c93:	mov	r8, qword ptr [rsp + 8]
0x18c98:	test	r14, r14
0x18c9b:	mov	rbp, rax
0x18c9e:	mov	qword ptr [r8], rax
0x18ca1:	je	0x18be7


0x18ca7:	mov	rdi, qword ptr [rsp + 0x20]
0x18cac:	call	0x2a10


0x186e9:	mov	rsi, qword ptr [rsp + 0x60]
0x186ee:	mov	ecx, eax
0x186f0:	mov	rax, qword ptr [r14 + 0xb8]
0x186f7:	lea	r10, [rbx*8]
0x186ff:	mov	qword ptr [rsp + 0x10], 0
0x18708:	lea	r11, [rax + r10]
0x1870c:	mov	rax, qword ptr [rax + rsi]
0x18710:	mov	rdx, qword ptr [r11]
0x18713:	test	rax, rax
0x18716:	je	0x18721


0x18721:	test	rdx, rdx
0x18724:	je	0x18a40


0x18718:	mov	rax, qword ptr [rax + 0x10]
0x1871c:	mov	qword ptr [rsp + 0x10], rax
0x18721:	test	rdx, rdx
0x18724:	je	0x18a40


0x18a40:	mov	rdx, qword ptr [rsp + 0x18]
0x18a45:	mov	rdi, qword ptr [rsp + 0x78]
0x18a4a:	mov	rsi, rbp
0x18a4d:	mov	qword ptr [rsp + 0x28], r11
0x18a52:	call	0x139f0


0x1872a:	mov	rsi, qword ptr [rdx + 0x50]
0x1872e:	mov	rdi, qword ptr [rsp + 0x68]
0x18733:	mov	rdx, qword ptr [rsp + 0x18]
0x18738:	mov	qword ptr [rsp + 0x30], r10
0x1873d:	mov	dword ptr [rsp + 0x28], ecx
0x18741:	call	0x13890


0x18746:	test	eax, eax
0x18748:	mov	dword ptr [rsp + 0x8c], eax
0x1874f:	mov	ecx, dword ptr [rsp + 0x28]
0x18753:	mov	r10, qword ptr [rsp + 0x30]
0x18758:	jne	0x18ae8


0x1875e:	add	r10, qword ptr [r14 + 0xb8]
0x18765:	mov	rdx, qword ptr [rsp + 0x68]
0x1876a:	mov	rsi, rbp
0x1876d:	mov	rdi, qword ptr [rsp + 0x78]
0x18772:	mov	qword ptr [rsp + 0x28], r10
0x18777:	call	0x139f0


0x18ae8:	mov	rdi, qword ptr [rsp + 0xa0]
0x18af0:	call	0x2a10


0x1877c:	mov	r10, qword ptr [rsp + 0x28]
0x18781:	mov	rdi, qword ptr [rsp + 0xa0]
0x18789:	mov	qword ptr [r10], rax
0x1878c:	call	0x2a10


0x18a57:	mov	r11, qword ptr [rsp + 0x28]
0x18a5c:	mov	rdx, qword ptr [r14 + 0xb8]
0x18a63:	mov	qword ptr [r11], rax
0x18a66:	cmp	qword ptr [rdx + rbx*8], 0
0x18a6b:	jne	0x187a3


0x18a71:	mov	eax, dword ptr [rsp + 0x8c]
0x18a78:	test	eax, eax
0x18a7a:	je	0x187a3


0x187a3:	cmp	qword ptr [rsp + 0x20], 0
0x187a9:	jne	0x187c8


0x18a80:	jmp	0x18618


0x187ab:	mov	rax, qword ptr [rsp + 0x60]
0x187b0:	mov	rbx, qword ptr [rsp + 0x10]
0x187b5:	mov	rax, qword ptr [rdx + rax]
0x187b9:	cmp	qword ptr [rax + 0x10], rbx
0x187bd:	jg	0x18a88


0x18a88:	mov	rax, qword ptr [rsp + 0x18]
0x18a8d:	mov	rcx, qword ptr [rsp + 8]
0x18a92:	mov	rdi, r14
0x18a95:	lea	r8, [rax + 0x10]
0x18a99:	lea	rbx, [rax + 8]
0x18a9d:	mov	rdx, r8
0x18aa0:	mov	rsi, rbx
0x18aa3:	mov	qword ptr [rsp + 0x10], r8
0x18aa8:	call	0x14330


0x18aad:	test	eax, eax
0x18aaf:	mov	dword ptr [rsp + 0x8c], eax
0x18ab6:	jne	0x18618


0x18abc:	mov	r8, qword ptr [rsp + 0x10]
0x18ac1:	mov	rsi, rbx
0x18ac4:	mov	rdi, r14
0x18ac7:	mov	rdx, r8
0x18aca:	call	0x182a0


0x18acf:	test	eax, eax
0x18ad1:	mov	dword ptr [rsp + 0x8c], eax
0x18ad8:	je	0x187c8


0x18ade:	jmp	0x18618


0x14a7a:	cmp	rbp, r12
0x14a7d:	mov	dword ptr [rbx + 0x70], eax
0x14a80:	mov	r8, qword ptr [rsp]
0x14a84:	jne	0x14b08


0x14a8a:	cmp	rbp, r8
0x14a8d:	jge	0x14b08


0x14b08:	mov	rax, qword ptr [rbx + 0x50]
0x14b0c:	mov	byte ptr [rbx + 0x8c], 0
0x14b13:	add	rax, rbp
0x14b16:	sub	rax, r15
0x14b19:	mov	qword ptr [rbx + 0x58], rax
0x14b1d:	mov	rax, qword ptr [rbx + 0x60]
0x14b21:	add	rax, rbp
0x14b24:	sub	rax, r15
0x14b27:	test	r12, r12
0x14b2a:	mov	qword ptr [rbx + 0x68], rax
0x14b2e:	jle	0x14b53


0x14a8f:	cmp	qword ptr [r14 + r12*8], rbp
0x14a93:	jne	0x14b08


0x14b53:	cmp	r12, r8
0x14b56:	jge	0x14d88


0x14b30:	cmp	qword ptr [r14 + r12*8 - 8], rbp
0x14b35:	je	0x14b4b


0x14a95:	mov	rdi, qword ptr [rbx + 0x10]
0x14a99:	sub	r8, rbp
0x14a9c:	lea	rdx, [r8*4]
0x14aa4:	lea	rsi, [rdi + rbp*4]
0x14aa8:	call	0x2890


0x14b5c:	mov	rax, qword ptr [rbx + 0x10]
0x14b60:	jmp	0x14b75


0x14d88:	jne	0x14b7c


0x14b4b:	test	r13, r13
0x14b4e:	mov	r12, r13
0x14b51:	jne	0x14b40


0x14b37:	jmp	0x14b53


0x14b75:	cmp	dword ptr [rax + r12*4], -1
0x14b7a:	je	0x14b68


0x14b7c:	mov	rdx, qword ptr [r14 + r12*8]
0x14b80:	sub	rdx, rbp
0x14b83:	cmp	rdx, 0
0x14b87:	mov	qword ptr [rbx + 0x30], rdx
0x14b8b:	je	0x14bc1


0x14b40:	cmp	qword ptr [r14 + r13*8 - 8], rbp
0x14b45:	jne	0x14b53


0x14b68:	add	r12, 1
0x14b6c:	cmp	r12, r8
0x14b6f:	je	0x14d90


0x14bc1:	movzx	eax, byte ptr [rbx + 0x8b]
0x14bc8:	mov	qword ptr [rbx + 0x38], rdx
0x14bcc:	test	al, al
0x14bce:	je	0x1484a


0x14b8d:	jle	0x14baf


0x14b47:	sub	r13, 1
0x14b4b:	test	r13, r13
0x14b4e:	mov	r12, r13
0x14b51:	jne	0x14b40


0x14d90:	mov	qword ptr [rbx + 0x30], 0
0x14d98:	xor	edx, edx
0x14d9a:	jmp	0x14bc1


0x14baf:	mov	rdi, qword ptr [rbx + 8]
0x14bb3:	mov	esi, 0xff
0x14bb8:	call	0x2620


0x14b8f:	mov	rax, qword ptr [rbx + 0x10]
0x14b93:	lea	rcx, [rax + rdx*4]
0x14b97:	nop	word ptr [rax + rax]
0x14ba0:	mov	dword ptr [rax], 0xffffffff
0x14ba6:	add	rax, 4
0x14baa:	cmp	rcx, rax
0x14bad:	jne	0x14ba0


0x14ba0:	mov	dword ptr [rax], 0xffffffff
0x14ba6:	add	rax, 4
0x14baa:	cmp	rcx, rax
0x14bad:	jne	0x14ba0


0x14db8:	mov	dword ptr [rbx + 0x70], eax
0x14dbb:	jmp	0x149fa


0x149fa:	cmp	r12, 0
0x149fe:	jne	0x14e1a


0x14a04:	movzx	eax, byte ptr [rbx + 0x8b]
0x14a0b:	mov	qword ptr [rbx + 0x38], r12
0x14a0f:	jmp	0x14bcc


0x14e1a:	jle	0x14e37


0x14e37:	cmp	byte ptr [rbx + 0x8b], 0
0x14e3e:	jne	0x14e98


0x14e1c:	mov	rax, qword ptr [rbx + 0x10]
0x14e20:	lea	rdx, [rax + r12*4]
0x14e24:	nop	dword ptr [rax]
0x14e28:	mov	dword ptr [rax], 0xffffffff
0x14e2e:	add	rax, 4
0x14e32:	cmp	rdx, rax
0x14e35:	jne	0x14e28


0x14e40:	mov	qword ptr [rbx + 0x38], r12
0x14e44:	jmp	0x1484a


0x14e98:	mov	rdi, qword ptr [rbx + 8]
0x14e9c:	mov	rdx, r12
0x14e9f:	mov	esi, 0xff
0x14ea4:	call	0x2620


0x14e28:	mov	dword ptr [rax], 0xffffffff
0x14e2e:	add	rax, 4
0x14e32:	cmp	rdx, rax
0x14e35:	jne	0x14e28


0x1481e:	mov	r8, qword ptr [rsp]
0x14822:	mov	dword ptr [rbx + 0x70], eax
0x14825:	sub	r8, rbp
0x14828:	cmp	dword ptr [rbx + 0x90], 1
0x1482f:	jg	0x148d0


0x14835:	cmp	byte ptr [rbx + 0x8b], 0
0x1483c:	jne	0x14be0


0x148d0:	mov	rdi, qword ptr [rbx + 0x10]
0x148d4:	lea	rdx, [r8*4]
0x148dc:	lea	rsi, [rdi + rbp*4]
0x148e0:	call	0x2890


0x14842:	sub	qword ptr [rbx + 0x38], rbp
0x14846:	mov	qword ptr [rbx + 0x30], r8
0x1484a:	add	qword ptr [rbx + 8], rbp
0x1484e:	mov	rax, qword ptr [rbx + 0x58]
0x14852:	sub	qword ptr [rbx + 0x68], rbp
0x14856:	mov	qword ptr [rbx + 0x28], r15
0x1485a:	sub	rax, rbp
0x1485d:	cmp	dword ptr [rbx + 0x90], 1
0x14864:	mov	qword ptr [rbx + 0x58], rax
0x14868:	jle	0x14908


0x14be0:	mov	rdi, qword ptr [rbx + 8]
0x14be4:	mov	rdx, r8
0x14be7:	lea	rsi, [rdi + rbp]
0x14beb:	call	0x2890


0x183ae:	mov	edx, ebp
0x183b0:	shr	edx, 8
0x183b3:	mov	ecx, edx
0x183b5:	and	cx, 0x3ff
0x183ba:	test	dl, 4
0x183bd:	jne	0x18328


0x183c3:	and	edx, 8
0x183c6:	je	0x18331


0x18328:	test	al, 1
0x1832a:	je	0x18350


0x18331:	test	cl, 0x20
0x18334:	je	0x1833a


0x183cc:	test	al, 1
0x183ce:	je	0x18331


0x1832c:	and	edx, 8
0x1832f:	jne	0x18350


0x1833a:	and	ecx, 0x80
0x18340:	je	0x183e0


0x18336:	test	al, 2
0x18338:	je	0x18350


0x183d4:	jmp	0x18350


0x18346:	test	al, 8
0x18348:	jne	0x183e0


0x145e2:	mov	ecx, ebx
0x145e4:	mov	edx, eax
0x145e6:	and	cx, 0x3ff
0x145eb:	test	bl, 4
0x145ee:	je	0x14658


0x14658:	and	ebx, 8
0x1465b:	je	0x145fc


0x145f0:	xor	eax, eax
0x145f2:	test	dl, 1
0x145f5:	je	0x1461c


0x145fc:	test	cl, 0x20
0x145ff:	je	0x14608


0x1465d:	test	al, 1
0x1465f:	je	0x145fc


0x145f7:	and	ebx, 8
0x145fa:	jne	0x1461c


0x14608:	shr	edx, 3
0x1460b:	mov	eax, 1
0x14610:	and	edx, 1
0x14613:	and	ecx, 0x80
0x14619:	cmovne	eax, edx
0x1461c:	pop	rbx
0x1461d:	ret	


0x14601:	xor	eax, eax
0x14603:	test	dl, 2
0x14606:	je	0x1461c


0x14661:	xor	eax, eax
0x14663:	pop	rbx
0x14664:	ret	


0x18ce5:	lea	rdx, [rsp + 0x10]
0x18cea:	mov	ecx, eax
0x18cec:	mov	rsi, r15
0x18cef:	mov	rdi, r13
0x18cf2:	call	0x139f0


0x18cf7:	mov	rbp, rax
0x18cfa:	mov	qword ptr [r14], rax
0x18cfd:	jmp	0x18be7


0x17175:	cmp	r12, rbp
0x17178:	mov	r13d, eax
0x1717b:	je	0x17553


0x17553:	mov	edi, 8
0x17558:	mov	qword ptr [rsp + 0x90], 1
0x17564:	mov	qword ptr [rsp + 0x98], 1
0x17570:	call	0x2780


0x17181:	mov	rbp, qword ptr [r14 + r12*8]
0x17185:	test	rbp, rbp
0x17188:	je	0x17194


0x17194:	pxor	xmm0, xmm0
0x17198:	mov	qword ptr [rsp + 0xa0], 0
0x171a4:	movaps	xmmword ptr [rsp + 0x90], xmm0
0x171ac:	cmp	r12, qword ptr [rsp + 0x40]
0x171b1:	jge	0x174d8


0x1718a:	test	byte ptr [rbp + 0x68], 0x40
0x1718e:	jne	0x176b0


0x171b7:	mov	ecx, dword ptr [r15 + 0xe0]
0x171be:	test	ecx, ecx
0x171c0:	js	0x174d8


0x174d8:	mov	rdi, qword ptr [rsp + 0xa0]
0x174e0:	call	0x2a10


0x176b0:	lea	rbx, [rsp + 0x90]
0x176b8:	lea	rsi, [rbp + 8]
0x176bc:	mov	rdi, rbx
0x176bf:	call	0x13800


0x171c6:	lea	rbx, [rsp + 0x90]
0x171ce:	lea	rax, [r12*8 + 8]
0x171d6:	mov	qword ptr [rsp], r12
0x171da:	mov	qword ptr [rsp + 0x20], 0
0x171e3:	mov	qword ptr [rsp + 8], rbx
0x171e8:	lea	rbx, [rsp + 0xb0]
0x171f0:	mov	qword ptr [rsp + 0x10], rax
0x171f5:	mov	rax, qword ptr [r15 + 0xb8]
0x171fc:	mov	qword ptr [rsp + 0x18], rbx
0x17201:	lea	rbx, [rsp + 0x8c]
0x17209:	mov	qword ptr [rsp + 0x58], rbx
0x1720e:	mov	rcx, qword ptr [rsp + 0x10]
0x17213:	mov	qword ptr [rsp + 0x98], 0
0x1721f:	mov	rsi, qword ptr [rax + rcx]
0x17223:	test	rsi, rsi
0x17226:	je	0x175e8


0x175e8:	test	rbp, rbp
0x175eb:	jne	0x17252


0x1722c:	mov	rdi, qword ptr [rsp + 8]
0x17231:	add	rsi, 8
0x17235:	call	0x12bc0


0x175f1:	mov	rax, qword ptr [rsp]
0x175f5:	lea	rbx, [rax + 1]
0x175f9:	mov	r12, rbx
0x175fc:	jmp	0x17464


0x17252:	cmp	qword ptr [rbp + 0x28], 0
0x17257:	mov	rax, qword ptr [rsp + 0x18]
0x1725c:	pxor	xmm0, xmm0
0x17260:	mov	r12, qword ptr [r15 + 0x98]
0x17267:	mov	dword ptr [rsp + 0x8c], 0
0x17272:	mov	qword ptr [rax + 0x10], 0
0x1727a:	movaps	xmmword ptr [rax], xmm0
0x1727d:	jle	0x177b0


0x17464:	mov	edx, dword ptr [r15 + 0xa0]
0x1746b:	mov	rsi, qword ptr [rsp]
0x1746f:	mov	rdi, r15
0x17472:	call	0x14480


0x177b0:	xor	edi, edi
0x177b2:	jmp	0x17668


0x17283:	lea	rax, [r12 + 0xd8]
0x1728b:	xor	ebx, ebx
0x1728d:	mov	qword ptr [rsp + 0x28], rax
0x17292:	jmp	0x172d9


0x17668:	call	0x2a10


0x172d9:	mov	rax, qword ptr [rbp + 0x30]
0x172dd:	mov	rdi, qword ptr [r12]
0x172e1:	mov	r14, qword ptr [rax + rbx*8]
0x172e5:	mov	r13, r14
0x172e8:	shl	r13, 4
0x172ec:	lea	rsi, [rdi + r13]
0x172f0:	test	byte ptr [rsi + 0xa], 0x10
0x172f4:	je	0x17298


0x17298:	mov	rdx, qword ptr [rsp]
0x1729c:	mov	rdi, r15
0x1729f:	call	0x14570


0x172f6:	mov	r8, qword ptr [rsp]
0x172fa:	mov	rsi, qword ptr [rsp + 0x28]
0x172ff:	mov	rcx, r15
0x17302:	mov	rdx, r14
0x17305:	call	0x16e50


0x1730a:	cmp	eax, 1
0x1730d:	jle	0x175d0


0x175d0:	test	eax, eax
0x175d2:	jne	0x172a8


0x17313:	cdqe	
0x17315:	add	rax, qword ptr [rsp]
0x17319:	mov	rdx, qword ptr [r12 + 0x18]
0x1731e:	lea	r13, [r14*8]
0x17326:	mov	rdx, qword ptr [rdx + r14*8]
0x1732a:	mov	rcx, rax
0x1732d:	mov	qword ptr [rsp + 0x38], rax
0x17332:	lea	r14, [rax*8]
0x1733a:	mov	rax, qword ptr [r15 + 0xb8]
0x17341:	mov	rsi, qword ptr [rax + rcx*8]
0x17345:	mov	qword ptr [rsp + 0xb8], 0
0x17351:	test	rsi, rsi
0x17354:	je	0x17379


0x175d8:	mov	rsi, qword ptr [r12]
0x175dc:	add	rsi, r13
0x175df:	jmp	0x17298


0x172a8:	lea	r13, [r14*8]
0x172b0:	mov	rax, qword ptr [r12 + 0x18]
0x172b5:	mov	rdi, qword ptr [rsp + 8]
0x172ba:	mov	rsi, qword ptr [rax + r13]
0x172be:	call	0x11160


0x17379:	mov	rdi, qword ptr [rsp + 0x18]
0x1737e:	mov	rsi, rdx
0x17381:	call	0x11160


0x17356:	mov	rdi, qword ptr [rsp + 0x18]
0x1735b:	add	rsi, 8
0x1735f:	mov	qword ptr [rsp + 0x50], rdx
0x17364:	call	0x12bc0


0x17386:	test	al, al
0x17388:	je	0x17608


0x17608:	mov	rdi, qword ptr [rsp + 0xc0]
0x17610:	call	0x2a10


0x1738e:	add	r14, qword ptr [r15 + 0xb8]
0x17395:	mov	rdx, qword ptr [rsp + 0x18]
0x1739a:	mov	rsi, r12
0x1739d:	mov	rdi, qword ptr [rsp + 0x58]
0x173a2:	call	0x13cb0


0x173a7:	mov	rdx, qword ptr [rsp + 0x38]
0x173ac:	mov	qword ptr [r14], rax
0x173af:	mov	rax, qword ptr [r15 + 0xb8]
0x173b6:	cmp	qword ptr [rax + rdx*8], 0
0x173bb:	jne	0x172b0


0x173c1:	mov	edx, dword ptr [rsp + 0x8c]
0x173c8:	test	edx, edx
0x173ca:	je	0x172b0


0x172b0:	mov	rax, qword ptr [r12 + 0x18]
0x172b5:	mov	rdi, qword ptr [rsp + 8]
0x172ba:	mov	rsi, qword ptr [rax + r13]
0x172be:	call	0x11160


0x173d0:	mov	rdi, qword ptr [rsp + 0xc0]
0x173d8:	call	0x2a10


0x172c3:	test	al, al
0x172c5:	je	0x17608


0x172cb:	add	rbx, 1
0x172cf:	cmp	rbx, qword ptr [rbp + 0x28]
0x172d3:	jge	0x17660


0x17660:	mov	rdi, qword ptr [rsp + 0xc0]
0x17668:	call	0x2a10


0x172a4:	test	al, al
0x172a6:	je	0x172cb


0x17369:	test	eax, eax
0x1736b:	mov	dword ptr [rsp + 0x8c], eax
0x17372:	mov	rdx, qword ptr [rsp + 0x50]
0x17377:	jne	0x173d0


0x1723a:	test	eax, eax
0x1723c:	mov	dword ptr [rsp + 0x88], eax
0x17243:	jne	0x17620


0x17249:	test	rbp, rbp
0x1724c:	je	0x173f8


0x17620:	mov	rdi, qword ptr [rsp + 0xa0]
0x17628:	call	0x2a10


0x173f8:	mov	rax, qword ptr [rsp]
0x173fc:	cmp	qword ptr [rsp + 0x98], 0
0x17405:	lea	rbx, [rax + 1]
0x17409:	mov	r12, rbx
0x1740c:	je	0x17464


0x1740e:	mov	ecx, dword ptr [rsp + 0x110]
0x17415:	mov	rdx, qword ptr [rsp + 0x48]
0x1741a:	mov	rsi, qword ptr [rsp + 8]
0x1741f:	mov	rdi, qword ptr [rsp + 0x30]
0x17424:	call	0x13050


0x176c4:	test	eax, eax
0x176c6:	mov	dword ptr [rsp + 0x88], eax
0x176cd:	jne	0x17634


0x176d3:	test	byte ptr [rbp + 0x68], 0x40
0x176d7:	je	0x171ac


0x171ac:	cmp	r12, qword ptr [rsp + 0x40]
0x171b1:	jge	0x174d8


0x176dd:	cmp	qword ptr [rsp + 0x98], 0
0x176e6:	je	0x17712


0x17712:	mov	rsi, qword ptr [rsp + 0x30]
0x17717:	lea	rdi, [rsp + 0x88]
0x1771f:	mov	ecx, r13d
0x17722:	mov	rdx, rbx
0x17725:	call	0x139f0


0x176e8:	mov	r8d, dword ptr [rsp + 0x110]
0x176f0:	mov	rcx, qword ptr [rsp + 0x48]
0x176f5:	mov	rdx, r12
0x176f8:	mov	rsi, rbx
0x176fb:	mov	rdi, r15
0x176fe:	call	0x13f90


0x17703:	test	eax, eax
0x17705:	mov	dword ptr [rsp + 0x88], eax
0x1770c:	jne	0x17620


0x1772a:	test	rax, rax
0x1772d:	mov	rbp, rax
0x17730:	je	0x177b7


0x177b7:	mov	esi, dword ptr [rsp + 0x88]
0x177be:	test	esi, esi
0x177c0:	je	0x17736


0x17736:	mov	rax, qword ptr [r15 + 0xb8]
0x1773d:	mov	qword ptr [rax + r12*8], rbp
0x17741:	jmp	0x171ac


0x177c6:	jmp	0x17620


0x17477:	mov	rdx, qword ptr [rsp + 8]
0x1747c:	mov	rsi, qword ptr [rsp + 0x30]
0x17481:	lea	rdi, [rsp + 0x88]
0x17489:	mov	ecx, eax
0x1748b:	call	0x139f0


0x17490:	test	rax, rax
0x17493:	mov	rbp, rax
0x17496:	je	0x17680


0x17680:	mov	eax, dword ptr [rsp + 0x88]
0x17687:	test	eax, eax
0x17689:	jne	0x17620


0x1749c:	mov	rax, qword ptr [r15 + 0xb8]
0x174a3:	mov	rdx, qword ptr [rsp + 0x10]
0x174a8:	mov	qword ptr [rsp + 0x20], 0
0x174b1:	mov	qword ptr [rax + rdx], rbp
0x174b5:	cmp	qword ptr [rsp + 0x40], rbx
0x174ba:	jle	0x174d8


0x1768b:	mov	rax, qword ptr [r15 + 0xb8]
0x17692:	mov	rdx, qword ptr [rsp + 0x10]
0x17697:	add	qword ptr [rsp + 0x20], 1
0x1769d:	mov	qword ptr [rax + rdx], 0
0x176a5:	jmp	0x174b5


0x174bc:	movsxd	rdx, dword ptr [r15 + 0xe0]
0x174c3:	add	qword ptr [rsp + 0x10], 8
0x174c9:	cmp	rdx, qword ptr [rsp + 0x20]
0x174ce:	mov	qword ptr [rsp], rbx
0x174d2:	jge	0x1720e


0x174b5:	cmp	qword ptr [rsp + 0x40], rbx
0x174ba:	jle	0x174d8


0x1720e:	mov	rcx, qword ptr [rsp + 0x10]
0x17213:	mov	qword ptr [rsp + 0x98], 0
0x1721f:	mov	rsi, qword ptr [rax + rcx]
0x17223:	test	rsi, rsi
0x17226:	je	0x175e8


0x17550:	mov	r13d, eax
0x17553:	mov	edi, 8
0x17558:	mov	qword ptr [rsp + 0x90], 1
0x17564:	mov	qword ptr [rsp + 0x98], 1
0x17570:	call	0x2780


0x1469b:	test	rbx, rbx
0x1469e:	jle	0x14748


0x14748:	pop	rbx
0x14749:	xor	eax, eax
0x1474b:	pop	rbp
0x1474c:	pop	r12
0x1474e:	ret	


0x146a4:	mov	rdx, qword ptr [rbp + 0x98]
0x146ab:	mov	r11d, eax
0x146ae:	mov	ebp, eax
0x146b0:	and	eax, 1
0x146b3:	mov	r9, qword ptr [r12]
0x146b7:	xor	esi, esi
0x146b9:	and	ebp, 8
0x146bc:	and	r11d, 2
0x146c0:	mov	r10d, eax
0x146c3:	mov	r8, qword ptr [rdx]
0x146c6:	jmp	0x146d9


0x146d9:	mov	rax, qword ptr [r9 + rsi*8]
0x146dd:	mov	rdx, rax
0x146e0:	shl	rdx, 4
0x146e4:	add	rdx, r8
0x146e7:	mov	ecx, dword ptr [rdx + 8]
0x146ea:	shr	ecx, 8
0x146ed:	mov	edi, ecx
0x146ef:	and	di, 0x3ff
0x146f4:	cmp	byte ptr [rdx + 8], 2
0x146f8:	jne	0x146d0


0x146fa:	test	di, di
0x146fd:	je	0x14725


0x146d0:	add	rsi, 1
0x146d4:	cmp	rsi, rbx
0x146d7:	je	0x14748


0x14725:	pop	rbx
0x14726:	pop	rbp
0x14727:	pop	r12
0x14729:	ret	


0x146ff:	test	cl, 4
0x14702:	je	0x14730


0x14730:	and	ecx, 8
0x14733:	je	0x1470e


0x14704:	test	r10d, r10d
0x14707:	je	0x146d0


0x1470e:	test	dil, 0x20
0x14712:	je	0x14719


0x14735:	test	r10d, r10d
0x14738:	jne	0x146d0


0x14709:	and	ecx, 8
0x1470c:	jne	0x146d0


0x14719:	and	edi, 0x80
0x1471f:	je	0x14725


0x14714:	test	r11d, r11d
0x14717:	je	0x146d0


0x1473a:	test	dil, 0x20
0x1473e:	je	0x14719


0x14721:	test	ebp, ebp
0x14723:	je	0x146d0


0x14740:	jmp	0x14714


0x19cc9:	test	rax, rax
0x19ccc:	mov	r8, qword ptr [rsp + 0x10]
0x19cd1:	je	0x19819


0x19cd7:	jmp	0x197f6


0x1a291:	mov	qword ptr [rsp + 0x1d0], rax
0x1a299:	jmp	0x199b8


0x199b8:	mov	r13, qword ptr [rsp + 0x1d0]
0x199c0:	movabs	rsi, 0x1ffffffffffffffe
0x199ca:	cmp	qword ptr [rsp + 0x20], rsi
0x199cf:	mov	r15, qword ptr [rsp + 0x1b8]
0x199d7:	ja	0x1a63b


0x199dd:	mov	rax, qword ptr [rsp + 0x20]
0x199e2:	add	rax, 1
0x199e6:	lea	rbx, [rax*8]
0x199ee:	mov	qword ptr [rsp + 8], rax
0x199f3:	mov	rdi, rbx
0x199f6:	call	0x2780


0x1a63b:	mov	rdi, rbx
0x1a63e:	mov	dword ptr [rsp + 0x5c], 0xc
0x1a646:	jmp	0x19c18


0x1998c:	mov	r13, rax
0x1998f:	mov	qword ptr [rsp + 0x1d0], rax
0x19997:	mov	rax, qword ptr [rsp + 0x38]
0x1999c:	test	byte ptr [rax + 0xb0], 1
0x199a3:	jne	0x199c0


0x199a5:	mov	rax, qword ptr [rsp + 0x38]
0x199aa:	cmp	qword ptr [rax + 0x98], 0
0x199b2:	je	0x1a34c


0x199c0:	movabs	rsi, 0x1ffffffffffffffe
0x199ca:	cmp	qword ptr [rsp + 0x20], rsi
0x199cf:	mov	r15, qword ptr [rsp + 0x1b8]
0x199d7:	ja	0x1a63b


0x1a69c:	test	rax, rax
0x1a69f:	mov	qword ptr [rsp + 0x30], rax
0x1a6a4:	je	0x1978d


0x1a6aa:	jmp	0x1a617


0x18930:	pop	rdx
0x18931:	cmp	eax, 1
0x18934:	pop	rcx
0x18935:	mov	r11, qword ptr [rsp + 0x10]
0x1893a:	je	0x189af


0x1893c:	test	eax, eax
0x1893e:	jne	0x18618


0x18944:	mov	rax, qword ptr [r12 + 0x20]
0x18949:	cmp	rax, qword ptr [r12 + 0x18]
0x1894e:	je	0x18b28


0x18b28:	lea	rdx, [rax + rax + 1]
0x18b2d:	mov	rdi, qword ptr [r12 + 0x28]
0x18b32:	lea	rsi, [rdx*8]
0x18b3a:	mov	qword ptr [rsp + 0x10], rdx
0x18b3f:	call	0x2830


0x18954:	mov	esi, 0x28
0x18959:	mov	edi, 1
0x1895e:	call	0x26b0


0x18135:	test	eax, eax
0x18137:	pop	rdx
0x18138:	pop	rcx
0x18139:	je	0x18150


0x18150:	mov	rax, qword ptr [rbx + 0xc8]
0x18157:	mov	rdx, qword ptr [rbx + 0xd0]
0x1815e:	mov	r15, qword ptr [rbp + 8]
0x18162:	mov	rcx, qword ptr [r13]
0x18166:	mov	rdi, qword ptr [rbx + 0xd8]
0x1816d:	cmp	rax, rdx
0x18170:	mov	rsi, r15
0x18173:	jge	0x18210


0x1813b:	add	rsp, 0x18
0x1813f:	pop	rbx
0x18140:	pop	rbp
0x18141:	pop	r12
0x18143:	pop	r13
0x18145:	pop	r14
0x18147:	pop	r15
0x18149:	ret	


0x18179:	lea	rdx, [rax + rax*4]
0x1817d:	shl	rdx, 3
0x18181:	test	rax, rax
0x18184:	jle	0x18191


0x18210:	lea	rsi, [rdx + rdx*4]
0x18214:	mov	qword ptr [rsp + 8], rcx
0x18219:	shl	rsi, 4
0x1821d:	call	0x2830


0x18191:	add	rdi, rdx
0x18194:	xor	edx, edx
0x18196:	cmp	r15, rcx
0x18199:	sete	dl
0x1819c:	add	rax, 1
0x181a0:	mov	qword ptr [rdi], r14
0x181a3:	neg	edx
0x181a5:	mov	qword ptr [rdi + 8], r12
0x181a9:	mov	qword ptr [rdi + 0x10], rcx
0x181ad:	mov	word ptr [rdi + 0x22], dx
0x181b1:	mov	qword ptr [rdi + 0x18], r15
0x181b5:	mov	qword ptr [rbx + 0xc8], rax
0x181bc:	mov	byte ptr [rdi + 0x20], 0
0x181c0:	mov	rax, r15
0x181c3:	movsxd	rdx, dword ptr [rbx + 0xe0]
0x181ca:	sub	rax, rcx
0x181cd:	cmp	rdx, rax
0x181d0:	jge	0x181dc


0x18186:	lea	r8, [rdi + rdx - 0x28]
0x1818b:	cmp	r12, qword ptr [r8 + 8]
0x1818f:	je	0x18200


0x181d2:	sub	r15d, ecx
0x181d5:	mov	dword ptr [rbx + 0xe0], r15d
0x181dc:	add	rsi, r12
0x181df:	sub	rsi, qword ptr [r13]
0x181e3:	add	rsp, 0x18
0x181e7:	mov	rdi, rbx
0x181ea:	pop	rbx
0x181eb:	pop	rbp
0x181ec:	pop	r12
0x181ee:	pop	r13
0x181f0:	pop	r14
0x181f2:	pop	r15
0x181f4:	jmp	0x11d30


0x181dc:	add	rsi, r12
0x181df:	sub	rsi, qword ptr [r13]
0x181e3:	add	rsp, 0x18
0x181e7:	mov	rdi, rbx
0x181ea:	pop	rbx
0x181eb:	pop	rbp
0x181ec:	pop	r12
0x181ee:	pop	r13
0x181f0:	pop	r14
0x181f2:	pop	r15
0x181f4:	jmp	0x11d30


0x18200:	mov	byte ptr [r8 + 0x20], 1
0x18205:	jmp	0x18191


0x1856b:	cmp	eax, 1
0x1856e:	mov	r8, qword ptr [r14 + 8]
0x18572:	ja	0x18618


0x18578:	add	rbp, 1
0x1857c:	cmp	rbp, qword ptr [r13 + 0x20]
0x18580:	mov	r11, r15
0x18583:	mov	rbx, r12
0x18586:	jge	0x18838


0x18838:	mov	rbx, r13
0x1883b:	mov	r13, r8
0x1883e:	lea	r11, [r15 + 1]
0x18842:	cmp	qword ptr [rsp + 8], r11
0x18847:	jl	0x184d9


0x1b9ce:	cdqe	
0x1b9d0:	add	qword ptr [r14 + 0x48], rax
0x1b9d4:	movzx	eax, byte ptr [r13 + 8]
0x1b9d9:	movzx	edx, byte ptr [r13]
0x1b9de:	cmp	al, 2
0x1b9e0:	je	0x1ba30


0x1ba30:	mov	rbx, -2
0x1ba37:	mov	rax, rbx
0x1ba3a:	pop	rbx
0x1ba3b:	pop	rbp
0x1ba3c:	pop	r12
0x1ba3e:	pop	r13
0x1ba40:	pop	r14
0x1ba42:	ret	


0x1b9e2:	cmp	al, 0x18
0x1b9e4:	je	0x1ba37


0x1ba37:	mov	rax, rbx
0x1ba3a:	pop	rbx
0x1ba3b:	pop	rbp
0x1ba3c:	pop	r12
0x1ba3e:	pop	r13
0x1ba40:	pop	r14
0x1ba42:	ret	


0x1b9e6:	cmp	dl, 0x2c
0x1b9e9:	je	0x1ba37


0x1b9eb:	cmp	al, 1
0x1b9ed:	je	0x1b9f8


0x1b9f8:	lea	eax, [rdx - 0x30]
0x1b9fb:	cmp	al, 9
0x1b9fd:	ja	0x1b9ef


0x1b9ef:	mov	rbx, r12
0x1b9f2:	jmp	0x1b9c0


0x1b9ff:	cmp	rbx, -2
0x1ba03:	je	0x1b9ef


0x1b9c0:	mov	rdx, rbp
0x1b9c3:	mov	rsi, r14
0x1b9c6:	mov	rdi, r13
0x1b9c9:	call	0x1b2a0


0x1ba05:	cmp	rbx, -1
0x1ba09:	je	0x1ba48


0x1ba48:	movzx	ebx, dl
0x1ba4b:	sub	ebx, 0x30
0x1ba4e:	movsxd	rbx, ebx
0x1ba51:	jmp	0x1b9c0


0x1ba0b:	lea	rax, [rbx + rbx*4]
0x1ba0f:	lea	rbx, [rdx + rax*2]
0x1ba13:	mov	eax, 0x8030
0x1ba18:	cmp	rbx, 0x8030
0x1ba1f:	cmovg	rbx, rax
0x1ba23:	sub	rbx, 0x30
0x1ba27:	jmp	0x1b9c0


0x1cf7e:	mov	edx, dword ptr [rbx]
0x1cf80:	mov	r14, rax
0x1cf83:	test	edx, edx
0x1cf85:	je	0x1cf90


0x1cf90:	lea	rax, [rsp + 0x20]
0x1cf95:	mov	qword ptr [rsp + 0x18], rax
0x1cf9a:	nop	word ptr [rax + rax]
0x1cfa0:	movzx	eax, byte ptr [rbp + 8]
0x1cfa4:	mov	edx, eax
0x1cfa6:	and	edx, 0xfffffff7
0x1cfa9:	cmp	dl, 2
0x1cfac:	je	0x1d040


0x1cf87:	test	rax, rax
0x1cf8a:	je	0x1d08a


0x1d040:	mov	rcx, qword ptr [rsp + 0x38]
0x1d045:	xor	rcx, qword ptr fs:[0x28]
0x1d04e:	mov	rax, r14
0x1d051:	jne	0x1d0bd


0x1cfb2:	cmp	al, 9
0x1cfb4:	jne	0x1cfbf


0x1d08a:	xor	r14d, r14d
0x1d08d:	jmp	0x1d040


0x1d053:	add	rsp, 0x48
0x1d057:	pop	rbx
0x1d058:	pop	rbp
0x1d059:	pop	r12
0x1d05b:	pop	r13
0x1d05d:	pop	r14
0x1d05f:	pop	r15
0x1d061:	ret	


0x1d0bd:	call	0x2560


0x1cfb6:	test	r12, r12
0x1cfb9:	jne	0x1d040


0x1cfbf:	mov	rdi, qword ptr [rsp]
0x1cfc3:	mov	r9, rbx
0x1cfc6:	mov	r8, r12
0x1cfc9:	mov	rcx, r15
0x1cfcc:	mov	rdx, rbp
0x1cfcf:	mov	rsi, r13
0x1cfd2:	call	0x1ba60


0x1cfd7:	mov	r9, rax
0x1cfda:	mov	eax, dword ptr [rbx]
0x1cfdc:	test	eax, eax
0x1cfde:	je	0x1cfe9


0x1cfe9:	test	r14, r14
0x1cfec:	je	0x1d068


0x1cfe0:	test	r9, r9
0x1cfe3:	je	0x1d074


0x1d068:	test	r14, r14
0x1d06b:	cmove	r14, r9
0x1d06f:	jmp	0x1cfa0


0x1cfee:	test	r9, r9
0x1cff1:	je	0x1d068


0x1d074:	test	r14, r14
0x1d077:	je	0x1d08a


0x1cfa0:	movzx	eax, byte ptr [rbp + 8]
0x1cfa4:	mov	edx, eax
0x1cfa6:	and	edx, 0xfffffff7
0x1cfa9:	cmp	dl, 2
0x1cfac:	je	0x1d040


0x1cff3:	mov	rax, qword ptr [rsp + 0x10]
0x1cff8:	mov	r8, qword ptr [rsp + 0x18]
0x1cffd:	mov	rcx, r9
0x1d000:	mov	rdx, r14
0x1d003:	mov	qword ptr [rsp + 8], r9
0x1d008:	mov	byte ptr [rsp + 0x28], 0x10
0x1d00d:	lea	rsi, [rax + 0x80]
0x1d014:	lea	rdi, [rax + 0x70]
0x1d018:	call	0x13360


0x1d079:	lea	rsi, [rip - 0xb260]
0x1d080:	xor	edx, edx
0x1d082:	mov	rdi, r14
0x1d085:	call	0x10f80


0x1d01d:	test	rax, rax
0x1d020:	mov	r9, qword ptr [rsp + 8]
0x1d025:	je	0x1d090


0x1d090:	lea	rsi, [rip - 0xb277]
0x1d097:	mov	rdi, r9
0x1d09a:	xor	edx, edx
0x1d09c:	call	0x10f80


0x1d027:	mov	r14, rax
0x1d02a:	movzx	eax, byte ptr [rbp + 8]
0x1d02e:	mov	edx, eax
0x1d030:	and	edx, 0xfffffff7
0x1d033:	cmp	dl, 2
0x1d036:	jne	0x1cfb2


0x1d118:	mov	edx, dword ptr [r13]
0x1d11c:	mov	r15, rax
0x1d11f:	test	edx, edx
0x1d121:	je	0x1d12c


0x1d12c:	lea	rax, [rsp + 0x30]
0x1d131:	mov	qword ptr [rsp + 8], rax
0x1d136:	jmp	0x1d1c4


0x1d123:	test	rax, rax
0x1d126:	je	0x1d212


0x1d1c4:	cmp	byte ptr [rbp + 8], 0xa
0x1d1c8:	jne	0x1d218


0x1d212:	xor	r15d, r15d
0x1d215:	nop	dword ptr [rax]
0x1d218:	mov	rcx, qword ptr [rsp + 0x48]
0x1d21d:	xor	rcx, qword ptr fs:[0x28]
0x1d226:	mov	rax, r15
0x1d229:	jne	0x1d24a


0x1d1ca:	mov	rdx, r14
0x1d1cd:	mov	rsi, r12
0x1d1d0:	mov	rdi, rbp
0x1d1d3:	or	rdx, 0x800000
0x1d1da:	call	0x1b2a0


0x1d218:	mov	rcx, qword ptr [rsp + 0x48]
0x1d21d:	xor	rcx, qword ptr fs:[0x28]
0x1d226:	mov	rax, r15
0x1d229:	jne	0x1d24a


0x1d22b:	add	rsp, 0x58
0x1d22f:	pop	rbx
0x1d230:	pop	rbp
0x1d231:	pop	r12
0x1d233:	pop	r13
0x1d235:	pop	r14
0x1d237:	pop	r15
0x1d239:	ret	


0x1d24a:	call	0x2560


0x1d1df:	cdqe	
0x1d1e1:	add	qword ptr [r12 + 0x48], rax
0x1d1e6:	movzx	eax, byte ptr [rbp + 8]
0x1d1ea:	mov	edx, eax
0x1d1ec:	and	edx, 0xfffffff7
0x1d1ef:	cmp	dl, 2
0x1d1f2:	jne	0x1d140


0x1d1f8:	xor	ecx, ecx
0x1d1fa:	jmp	0x1d19f


0x1d140:	cmp	al, 9
0x1d142:	jne	0x1d150


0x1d19f:	mov	r8, qword ptr [rsp + 8]
0x1d1a4:	lea	rsi, [rbx + 0x80]
0x1d1ab:	lea	rdi, [rbx + 0x70]
0x1d1af:	mov	rdx, r15
0x1d1b2:	mov	byte ptr [rsp + 0x38], 0xa
0x1d1b7:	call	0x13360


0x1d144:	cmp	qword ptr [rsp + 0x10], 0
0x1d14a:	jne	0x1d1f8


0x1d150:	mov	rax, qword ptr [rbx + 0xa8]
0x1d157:	mov	r8, qword ptr [rsp + 0x10]
0x1d15c:	mov	rcx, r14
0x1d15f:	mov	rsi, qword ptr [rsp + 0x28]
0x1d164:	mov	r9, r13
0x1d167:	mov	rdx, rbp
0x1d16a:	mov	rdi, r12
0x1d16d:	mov	qword ptr [rsp + 0x18], rax
0x1d172:	mov	rax, qword ptr [rsp + 0x20]
0x1d177:	mov	qword ptr [rbx + 0xa8], rax
0x1d17e:	call	0x1cf40


0x1d183:	mov	rcx, rax
0x1d186:	mov	eax, dword ptr [r13]
0x1d18a:	test	eax, eax
0x1d18c:	je	0x1d193


0x1d193:	mov	rax, qword ptr [rsp + 0x18]
0x1d198:	or	qword ptr [rbx + 0xa8], rax
0x1d19f:	mov	r8, qword ptr [rsp + 8]
0x1d1a4:	lea	rsi, [rbx + 0x80]
0x1d1ab:	lea	rdi, [rbx + 0x70]
0x1d1af:	mov	rdx, r15
0x1d1b2:	mov	byte ptr [rsp + 0x38], 0xa
0x1d1b7:	call	0x13360


0x1d18e:	test	rcx, rcx
0x1d191:	je	0x1d1fc


0x1d1fc:	test	r15, r15
0x1d1ff:	je	0x1d212


0x1d201:	lea	rsi, [rip - 0xb3e8]
0x1d208:	xor	edx, edx
0x1d20a:	mov	rdi, r15
0x1d20d:	call	0x10f80


0x1d1bc:	test	rax, rax
0x1d1bf:	mov	r15, rax
0x1d1c2:	je	0x1d240


0x1d240:	mov	dword ptr [r13], 0xc
0x1d248:	jmp	0x1d218


0x1e9ad:	mov	rdi, r13
0x1e9b0:	mov	rbx, rax
0x1e9b3:	call	0x2a10


0x1ece3:	add	rsp, 0x18
0x1ece7:	ret	


0x1ed00:	add	rsp, 0x18
0x1ed04:	ret	


0x1ed25:	add	rsp, 0x28
0x1ed29:	ret	


0x1ed47:	add	rsp, 0x28
0x1ed4b:	ret	


0x1f9f1:	test	rbp, rbp
0x1f9f4:	je	0x1fa16


0x1fa16:	add	rsp, 8
0x1fa1a:	pop	rbx
0x1fa1b:	pop	rbp
0x1fa1c:	pop	r12
0x1fa1e:	pop	r13
0x1fa20:	pop	r14
0x1fa22:	pop	r15
0x1fa24:	ret	


0x1f9f6:	xor	ebx, ebx
0x1f9f8:	nop	dword ptr [rax + rax]
0x1fa00:	mov	rdx, r15
0x1fa03:	mov	rsi, r14
0x1fa06:	mov	edi, r13d
0x1fa09:	call	qword ptr [r12 + rbx*8]


0x16f2e:	test	eax, eax
0x16f30:	je	0x16f10


0x16f10:	add	rbx, 1
0x16f14:	cmp	rbx, qword ptr [r13 + 0x48]
0x16f18:	jge	0x16fd8


0x16fd8:	mov	rsi, qword ptr [r13 + 0x40]
0x16fdc:	test	rsi, rsi
0x16fdf:	jle	0x16fc1


0x14bf0:	movzx	eax, byte ptr [rbx + 0x8b]
0x14bf7:	sub	qword ptr [rbx + 0x30], rbp
0x14bfb:	sub	qword ptr [rbx + 0x38], rbp
0x14bff:	jmp	0x14bcc


0x148e5:	mov	r8, qword ptr [rbx + 0x30]
0x148e9:	sub	r8, rbp
0x148ec:	jmp	0x14835


0x14aad:	mov	rdi, qword ptr [rbx + 8]
0x14ab1:	mov	rdx, qword ptr [rbx + 0x30]
0x14ab5:	lea	rsi, [rdi + rbp]
0x14ab9:	sub	rdx, rbp
0x14abc:	call	0x2890


0x14ac1:	mov	rax, qword ptr [rbx + 0x30]
0x14ac5:	sub	qword ptr [rbx + 0x38], rbp
0x14ac9:	sub	rax, rbp
0x14acc:	test	rax, rax
0x14acf:	mov	qword ptr [rbx + 0x30], rax
0x14ad3:	jle	0x14af8


0x14ad5:	mov	rcx, qword ptr [rbx + 0x18]
0x14ad9:	xor	eax, eax
0x14adb:	lea	rsi, [rcx + rbp*8]
0x14adf:	nop	
0x14ae0:	mov	rdx, qword ptr [rsi + rax*8]
0x14ae4:	sub	rdx, rbp
0x14ae7:	mov	qword ptr [rcx + rax*8], rdx
0x14aeb:	add	rax, 1
0x14aef:	cmp	qword ptr [rbx + 0x30], rax
0x14af3:	jg	0x14ae0


0x14ae0:	mov	rdx, qword ptr [rsi + rax*8]
0x14ae4:	sub	rdx, rbp
0x14ae7:	mov	qword ptr [rcx + rax*8], rdx
0x14aeb:	add	rax, 1
0x14aef:	cmp	qword ptr [rbx + 0x30], rax
0x14af3:	jg	0x14ae0


0xfccb:	movzx	eax, word ptr [rbp + 0x70]
0xfccf:	jmp	0xfc2e


0xfc2e:	cmp	ax, 0xb
0xfc32:	mov	qword ptr [r12], rbp
0xfc36:	je	0xfab8


0xfab8:	mov	rax, qword ptr [rbp + 0xa8]
0xfabf:	cmp	rax, 2
0xfac3:	je	0xfe68


0xfc3c:	cmp	ax, 1
0xfc40:	jne	0xfa7a


0xfe68:	mov	rbx, qword ptr [rbp + 8]
0xfe6c:	cmp	qword ptr [rbx + 0x68], 0
0xfe71:	jne	0xfe84


0xfac9:	cmp	rax, 1
0xfacd:	je	0xfa7a


0xfc46:	cmp	qword ptr [rbp + 0x58], 0
0xfc4b:	jne	0xfc56


0xfe73:	mov	eax, dword ptr [r12 + 0x48]
0xfe78:	and	eax, 0x18
0xfe7b:	cmp	eax, 0x18
0xfe7e:	je	0xffdd


0xfe84:	xor	edx, edx
0xfe86:	mov	rsi, rbp
0xfe89:	mov	rdi, r12
0xfe8c:	call	0xde40


0xfacf:	call	0x2400


0xfc4d:	mov	rax, qword ptr [rbp + 0x78]
0xfc51:	mov	qword ptr [r12 + 0x18], rax
0xfc56:	mov	edi, dword ptr [r12 + 0x48]
0xfc5b:	lea	rsi, [r12 + 0x58]
0xfc60:	mov	rdx, rbp
0xfc63:	call	0xe850


0xfc56:	mov	edi, dword ptr [r12 + 0x48]
0xfc5b:	lea	rsi, [r12 + 0x58]
0xfc60:	mov	rdx, rbp
0xfc63:	call	0xe850


0xffdd:	mov	esi, dword ptr [r12 + 0x2c]
0xffe2:	mov	rdi, rbx
0xffe5:	call	0xe370


0xffea:	cmp	eax, 2
0xffed:	jne	0xfe84


0xfff3:	movzx	eax, word ptr [rbp + 0x70]
0xfff7:	jmp	0xfc3c


0xfc68:	test	al, al
0xfc6a:	jne	0xfa7a


0xfc70:	call	0x2410


0x16bdf:	cmp	rax, -1
0x16be3:	je	0x16c0f


0x16c0f:	mov	rax, qword ptr [rsp + 0x30]
0x16c14:	test	byte ptr [rax + 0x1a], 0x40
0x16c18:	je	0x16baf


0x16be5:	movzx	edx, byte ptr [rsp + 0x60]
0x16bea:	test	r13d, r13d
0x16bed:	mov	byte ptr [r12 + rdx], 1
0x16bf2:	mov	qword ptr [rsp + 0x10], rdx
0x16bf7:	je	0x16c0f


0x16baf:	add	rbp, 1
0x16bb3:	cmp	rbp, qword ptr [r15 + 0x28]
0x16bb7:	jge	0x16c64


0x16c1a:	mov	rax, qword ptr [rsp + 8]
0x16c1f:	cmp	dword ptr [rax + 0xb4], 1
0x16c26:	jle	0x16baf


0x16bf9:	call	0x29e0


0x16c64:	mov	ebx, r13d
0x16c67:	mov	rbp, r12
0x16c6a:	jmp	0x169e7


0x16c28:	mov	rax, qword ptr [r15]
0x16c2b:	mov	edi, dword ptr [rax + rbx]
0x16c2e:	call	0x28e0


0x6129:	cmp	rbx, rbp
0x612c:	jne	0x6118


0x612e:	mov	rbp, qword ptr [rsp + 8]
0x6133:	cmp	byte ptr [rsp + 0x34], 0
0x6138:	je	0x7268


0x6118:	mov	rsi, r12
0x611b:	mov	edi, 0x20
0x6120:	add	rbp, 1
0x6124:	call	0x2660


0x7351:	cmp	rbx, rbp
0x7354:	jne	0x7340


0x7356:	jmp	0x612e


0x7340:	mov	rsi, r12
0x7343:	mov	edi, 0x30
0x7348:	add	rbp, 1
0x734c:	call	0x2660


0x6181:	cmp	r13, rbp
0x6184:	jne	0x6170


0x6186:	jmp	0x5f7f


0x6170:	mov	rsi, r12
0x6173:	mov	edi, 0x20
0x6178:	add	rbp, 1
0x617c:	call	0x2660


0x16c33:	mov	rdi, qword ptr [rsp + 0x38]
0x16c38:	mov	rdx, r14
0x16c3b:	mov	esi, eax
0x16c3d:	call	0x2790


0x16c42:	cmp	rax, -1
0x16c46:	je	0x16baf


0x16c4c:	movzx	eax, byte ptr [rsp + 0x60]
0x16c51:	add	rbp, 1
0x16c55:	mov	byte ptr [r12 + rax], 1
0x16c5a:	cmp	rbp, qword ptr [r15 + 0x28]
0x16c5e:	jl	0x16bbd


0x1b45d:	mov	r8d, dword ptr [rsp]
0x1b461:	test	eax, eax
0x1b463:	setne	al
0x1b466:	cmp	r8d, 0x5f
0x1b46a:	sete	dl
0x1b46d:	lea	ecx, [r12 - 0x27]
0x1b472:	or	eax, edx
0x1b474:	shl	eax, 6
0x1b477:	or	r13d, eax
0x1b47a:	cmp	cl, 0x56
0x1b47d:	mov	byte ptr [rbp + 0xa], r13b
0x1b481:	ja	0x1b885


0x1b487:	lea	rdx, [rip + 0x7636]
0x1b48e:	movzx	ecx, cl
0x1b491:	movsxd	rax, dword ptr [rdx + rcx*4]
0x1b495:	add	rax, rdx
0x1b498:	jmp	rax


0x1b885:	mov	eax, 2
0x1b88a:	jmp	0x1b364


0x1454f:	test	eax, eax
0x14551:	jne	0x1455c


0x14553:	cmp	ebx, 0x5f
0x14556:	jne	0x144cb


0x1455c:	mov	eax, 1
0x14561:	jmp	0x144d2


0x1b335:	mov	ecx, dword ptr [rsp]
0x1b338:	test	eax, eax
0x1b33a:	setne	al
0x1b33d:	cmp	ecx, 0x5f
0x1b340:	sete	cl
0x1b343:	or	eax, ecx
0x1b345:	shl	eax, 6
0x1b348:	or	r13d, eax
0x1b34b:	mov	byte ptr [rbp + 0xa], r13b
0x1b34f:	mov	rdx, qword ptr [rsp + 8]
0x1b354:	jmp	0x1b3cc


0x1b3cc:	sub	r12d, 0xa
0x1b3d0:	cmp	r12b, 0x73
0x1b3d4:	ja	0x1b50c


0x1b3da:	lea	rcx, [rip + 0x7513]
0x1b3e1:	movzx	r12d, r12b
0x1b3e5:	movsxd	rax, dword ptr [rcx + r12*4]
0x1b3e9:	add	rax, rcx
0x1b3ec:	jmp	rax


0x1b50c:	mov	eax, 1
0x1b511:	jmp	0x1b364


0xe237:	jmp	0xe21c


0xe424:	mov	dword ptr [rbx + 0x2c], ebp
0xe427:	add	rsp, 8
0xe42b:	pop	rbx
0xe42c:	pop	rbp
0xe42d:	ret	


0xff28:	jmp	0xfa45


0xe437:	mov	dword ptr [rbx + 0x2c], ebp
0xe43a:	add	rsp, 8
0xe43e:	pop	rbx
0xe43f:	pop	rbp
0xe440:	ret	


0xe78a:	jmp	0xe6d5


0xe692:	test	eax, eax
0xe694:	je	0xe760


0xe760:	mov	rax, qword ptr [rsp + 0x10]
0xe765:	cmp	qword ptr [r14 + 0x78], rax
0xe769:	je	0xe800


0xe69a:	mov	ebx, 0xffffffff
0xe69f:	test	r12d, r12d
0xe6a2:	jns	0xe6d5


0xe800:	mov	rax, qword ptr [rsp + 0x18]
0xe805:	cmp	qword ptr [r14 + 0x80], rax
0xe80c:	jne	0xe76f


0xe76f:	call	0x2410


0xe6a4:	call	0x2410


0xe812:	mov	ebx, dword ptr [r13 + 0x48]
0xe816:	jmp	0xe740


0x117f2:	test	eax, eax
0x117f4:	jne	0x118e8


0x118e8:	call	0x23c0


0x51aa:	test	eax, eax
0x51ac:	je	0x52e2


0x52e2:	lea	rcx, [rip + 0x1c427]
0x52e9:	lea	rsi, [rip + 0x1c1b8]
0x52f0:	lea	rdi, [rip + 0x1c1d1]
0x52f7:	mov	edx, 0x96
0x52fc:	call	0x2600


0x51b2:	mov	byte ptr [rsp + 0x10], 1
0x51b7:	call	0x2520


0x5638:	mov	rsi, rbp
0x563b:	mov	rdi, r12
0x563e:	call	0x82f0


0xdee3:	test	eax, eax
0xdee5:	jne	0xdf80


0xdeeb:	mov	eax, dword ptr [rbp + 0x90]
0xdef1:	and	eax, 0xf000
0xdef6:	cmp	eax, 0x4000
0xdefb:	je	0xdf20


0xdf80:	call	0x2410


0xdf20:	mov	rax, qword ptr [rbp + 0x88]
0xdf27:	cmp	rax, 1
0xdf2b:	jbe	0xdfb0


0xdefd:	cmp	eax, 0xa000
0xdf02:	je	0xdfd8


0xdfb0:	mov	rax, -1
0xdfb7:	jmp	0xdf46


0xdf31:	cmp	qword ptr [rbp + 0x58], 0
0xdf36:	jle	0xdfb0


0xdfd8:	mov	eax, 0xc
0xdfdd:	jmp	0xdeb8


0xdf08:	cmp	eax, 0x8000
0xdf0d:	sete	al
0xdf10:	movzx	eax, al
0xdf13:	pop	rbx
0xdf14:	lea	eax, [rax + rax*4 + 3]
0xdf18:	pop	rbp
0xdf19:	pop	r12
0xdf1b:	ret	


0xdf46:	cmp	byte ptr [rbp + 0x108], 0x2e
0xdf4d:	mov	qword ptr [rbp + 0x68], rax
0xdf51:	mov	eax, 1
0xdf56:	jne	0xdeb8


0xdf38:	test	byte ptr [r12 + 0x48], 0x20
0xdf3e:	lea	rdx, [rax - 2]
0xdf42:	cmove	rax, rdx
0xdf46:	cmp	byte ptr [rbp + 0x108], 0x2e
0xdf4d:	mov	qword ptr [rbp + 0x68], rax
0xdf51:	mov	eax, 1
0xdf56:	jne	0xdeb8


0xdeb8:	pop	rbx
0xdeb9:	pop	rbp
0xdeba:	pop	r12
0xdebc:	ret	


0xdf5c:	cmp	byte ptr [rbp + 0x109], 0
0xdf63:	jne	0xdfe8


0xdf69:	cmp	qword ptr [rbp + 0x58], 1
0xdf6e:	sbb	eax, eax
0xdf70:	and	eax, 0xfffffffc
0xdf73:	add	eax, 5
0xdf76:	jmp	0xdeb8


0xdfe8:	mov	edx, dword ptr [rbp + 0x108]
0xdfee:	and	edx, 0xffff00
0xdff4:	cmp	edx, 0x2e00
0xdffa:	jne	0xdeb8


0xe000:	jmp	0xdf69


0xfe91:	mov	edx, dword ptr [rbp + 0x90]
0xfe97:	mov	word ptr [rbp + 0x70], ax
0xfe9b:	and	edx, 0xf000
0xfea1:	cmp	edx, 0x4000
0xfea7:	jne	0xfc3c


0xfead:	cmp	qword ptr [rbp + 0x58], 0
0xfeb2:	je	0xffce


0xffce:	cmp	ax, 1
0xffd2:	jne	0xfa7a


0xfeb8:	mov	rcx, qword ptr [rbx + 0x68]
0xfebc:	lea	rdx, [rcx - 1]
0xfec0:	cmp	rdx, -3
0xfec4:	ja	0xfeca


0xffd8:	jmp	0xfc4d


0xfec6:	mov	qword ptr [rbx + 0x68], rdx
0xfeca:	cmp	ax, 1
0xfece:	jne	0xfa7a


0xfeca:	cmp	ax, 1
0xfece:	jne	0xfa7a


0xfed4:	jmp	0xfc56


0xfa9d:	cmp	ax, 1
0xfaa1:	mov	word ptr [rbp + 0x70], ax
0xfaa5:	je	0xfdec


0xfdec:	mov	esi, dword ptr [r12 + 0x48]
0xfdf1:	test	sil, 4
0xfdf5:	je	0xfffc


0xfaab:	cmp	ax, 0xb
0xfaaf:	mov	qword ptr [r12], rbp
0xfab3:	jne	0xfa7a


0xfffc:	mov	edi, dword ptr [r12 + 0x2c]
0x10001:	lea	rdx, [rip + 0x12694]
0x10008:	call	0xe590


0xfdfb:	mov	qword ptr [r12], rbp
0xfdff:	jmp	0xfc46


0xfb6a:	mov	word ptr [rbp + 0x70], ax
0xfb6e:	mov	rax, rbp
0xfb71:	pop	rbx
0xfb72:	pop	rbp
0xfb73:	pop	r12
0xfb75:	pop	r13
0xfb77:	pop	r14
0xfb79:	ret	


0x14ea9:	mov	r12, qword ptr [rbx + 0x30]
0x14ead:	jmp	0x14a04


0x14bbd:	mov	rdx, qword ptr [rbx + 0x30]
0x14bc1:	movzx	eax, byte ptr [rbx + 0x8b]
0x14bc8:	mov	qword ptr [rbx + 0x38], rdx
0x14bcc:	test	al, al
0x14bce:	je	0x1484a


0x11dad:	mov	qword ptr [rbx + 0xc0], rbp
0x11db4:	jmp	0x11d64


0x1b895:	mov	rsi, qword ptr [rax]
0x1b898:	movzx	edx, r12b
0x1b89c:	movzx	eax, word ptr [rsi + rdx*2]
0x1b8a0:	shr	ax, 3
0x1b8a4:	and	eax, 1
0x1b8a7:	cmp	r12b, 0x5f
0x1b8ab:	jmp	0x1b46a


0x1b46a:	sete	dl
0x1b46d:	lea	ecx, [r12 - 0x27]
0x1b472:	or	eax, edx
0x1b474:	shl	eax, 6
0x1b477:	or	r13d, eax
0x1b47a:	cmp	cl, 0x56
0x1b47d:	mov	byte ptr [rbp + 0xa], r13b
0x1b481:	ja	0x1b885


0x1b3a3:	mov	rsi, qword ptr [rax]
0x1b3a6:	movzx	ecx, r12b
0x1b3aa:	movzx	eax, word ptr [rsi + rcx*2]
0x1b3ae:	shr	ax, 3
0x1b3b2:	and	eax, 1
0x1b3b5:	cmp	r12b, 0x5f
0x1b3b9:	sete	cl
0x1b3bc:	or	eax, ecx
0x1b3be:	shl	eax, 6
0x1b3c1:	or	r13d, eax
0x1b3c4:	mov	byte ptr [rbp + 0xa], r13b
0x1b3c8:	mov	rdx, qword ptr [rsp]
0x1b3cc:	sub	r12d, 0xa
0x1b3d0:	cmp	r12b, 0x73
0x1b3d4:	ja	0x1b50c


0x1853c:	test	eax, eax
0x1853e:	mov	r8, qword ptr [rsp + 0x10]
0x18543:	mov	r11, qword ptr [rsp + 0x18]
0x18548:	mov	r9, qword ptr [rsp + 0x20]
0x1854d:	jne	0x18a18


0x4a7d:	test	eax, eax
0x4a7f:	jne	0x4a60


0x4a60:	mov	r14, qword ptr [rbx]
0x4a63:	add	rbp, r12
0x4a66:	add	rbx, 8
0x4a6a:	test	r14, r14
0x4a6d:	je	0x4a81


0x5b88:	cmp	eax, -1
0x5b8b:	mov	r12d, eax
0x5b8e:	jne	0x5b66


0x5b90:	mov	r12d, dword ptr [r15]
0x5b93:	call	0x2410


0x5b66:	cmp	qword ptr [rsp + 0x30], r14
0x5b6b:	jne	0x5b48


0xde6d:	test	eax, eax
0xde6f:	je	0xdeeb


0xde71:	call	0x2410


0xe091:	mov	r8, qword ptr [rbp + 0x10]
0xe095:	mov	rcx, r12
0xe098:	sub	rcx, 1
0xe09c:	mov	rax, qword ptr [r8]
0xe09f:	je	0xe110


0xe110:	mov	rdx, rax
0xe113:	jmp	0xe0ca


0xe0a1:	mov	rdi, rax
0xe0a4:	mov	rdx, r8
0xe0a7:	jmp	0xe0b3


0xe0ca:	mov	qword ptr [rdx + 0x10], 0
0xe0d2:	add	rsp, 8
0xe0d6:	pop	rbx
0xe0d7:	pop	rbp
0xe0d8:	pop	r12
0xe0da:	pop	r13
0xe0dc:	ret	


0xe0b3:	mov	rsi, qword ptr [rdx + 8]
0xe0b7:	add	rdx, 8
0xe0bb:	sub	rcx, 1
0xe0bf:	mov	qword ptr [rdi + 0x10], rsi
0xe0c3:	jne	0xe0b0


0xe0c5:	mov	rdx, qword ptr [r8 + r12*8 - 8]
0xe0ca:	mov	qword ptr [rdx + 0x10], 0
0xe0d2:	add	rsp, 8
0xe0d6:	pop	rbx
0xe0d7:	pop	rbp
0xe0d8:	pop	r12
0xe0da:	pop	r13
0xe0dc:	ret	


0xe0b0:	mov	rdi, qword ptr [rdx]
0xe0b3:	mov	rsi, qword ptr [rdx + 8]
0xe0b7:	add	rdx, 8
0xe0bb:	sub	rcx, 1
0xe0bf:	mov	qword ptr [rdi + 0x10], rsi
0xe0c3:	jne	0xe0b0


0xe751:	mov	ebx, eax
0xe753:	jmp	0xe69f


0xe69f:	test	r12d, r12d
0xe6a2:	jns	0xe6d5


0xe472:	test	eax, eax
0xe474:	setne	bpl
0xe478:	lea	rdi, [rbx + 0x60]
0xe47c:	call	0xe200


0x15f0c:	lea	rdi, [rip + 0xc90c]
0x15f13:	mov	qword ptr [r13], rax
0x15f17:	mov	ecx, 6
0x15f1c:	mov	rsi, r12
0x15f1f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x15f1f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x15f21:	seta	al
0x15f24:	sbb	al, 0
0x15f26:	test	al, al
0x15f28:	je	0x15f98


0x15f98:	call	0x29f0


0x15f2a:	lea	rdi, [rip + 0xc8f4]
0x15f31:	mov	ecx, 6
0x15f36:	mov	rsi, r12
0x15f39:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x15f39:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x15f3b:	seta	al
0x15f3e:	sbb	al, 0
0x15f40:	test	al, al
0x15f42:	jne	0x16048


0x15f48:	call	0x29f0


0x16048:	lea	rdi, [rip + 0xc7ca]
0x1604f:	mov	ecx, 6
0x16054:	mov	rsi, r12
0x16057:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x16057:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x16059:	seta	al
0x1605c:	sbb	al, 0
0x1605e:	test	al, al
0x16060:	je	0x160ca


0x160ca:	call	0x29f0


0x16062:	lea	rdi, [rip + 0xc7c2]
0x16069:	mov	ecx, 6
0x1606e:	mov	rsi, r12
0x16071:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x16071:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x16073:	seta	al
0x16076:	sbb	al, 0
0x16078:	test	al, al
0x1607a:	jne	0x16112


0x16080:	call	0x29f0


0x16112:	lea	rdi, [rip + 0xc6f4]
0x16119:	mov	ecx, 6
0x1611e:	mov	rsi, r12
0x16121:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x16121:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x16123:	seta	al
0x16126:	sbb	al, 0
0x16128:	test	al, al
0x1612a:	je	0x161d3


0x161d3:	call	0x29f0


0x16130:	lea	rdi, [rip + 0xc713]
0x16137:	mov	ecx, 6
0x1613c:	mov	rsi, r12
0x1613f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1613f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x16141:	seta	al
0x16144:	sbb	al, 0
0x16146:	test	al, al
0x16148:	jne	0x16253


0x1614e:	call	0x29f0


0x16253:	lea	rdi, [rip + 0xc5d7]
0x1625a:	mov	ecx, 6
0x1625f:	mov	rsi, r12
0x16262:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x16262:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x16264:	seta	al
0x16267:	sbb	al, 0
0x16269:	test	al, al
0x1626b:	jne	0x162ec


0x1626d:	call	0x29f0


0x162ec:	lea	rdi, [rip + 0xc520]
0x162f3:	mov	ecx, 6
0x162f8:	mov	rsi, r12
0x162fb:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x162fb:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x162fd:	seta	al
0x16300:	sbb	al, 0
0x16302:	test	al, al
0x16304:	jne	0x16352


0x16306:	call	0x29f0


0x16352:	lea	rdi, [rip + 0xc4de]
0x16359:	mov	ecx, 6
0x1635e:	mov	rsi, r12
0x16361:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x16361:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x16363:	seta	al
0x16366:	sbb	al, 0
0x16368:	test	al, al
0x1636a:	jne	0x1645e


0x16370:	call	0x29f0


0x1645e:	lea	rsi, [rip + 0xc3d8]
0x16465:	mov	rdi, r12
0x16468:	call	0x26d0


0x16375:	xor	ecx, ecx
0x16377:	test	rbp, rbp
0x1637a:	mov	rdx, qword ptr [rax]
0x1637d:	mov	esi, 1
0x16382:	jne	0x16424


0x16388:	test	byte ptr [rdx + rcx*2], 1
0x1638c:	je	0x1639f


0x16424:	xor	eax, eax
0x16426:	mov	edi, 1
0x1642b:	test	byte ptr [rdx + rax*2], 1
0x1642f:	je	0x1644d


0x1639f:	add	rcx, 1
0x163a3:	cmp	rcx, 0x100
0x163aa:	jne	0x16388


0x1638e:	mov	rax, rcx
0x16391:	mov	rdi, rsi
0x16394:	sar	rax, 6
0x16398:	shl	rdi, cl
0x1639b:	or	qword ptr [rbx + rax*8], rdi
0x1639f:	add	rcx, 1
0x163a3:	cmp	rcx, 0x100
0x163aa:	jne	0x16388


0x1644d:	add	rax, 1
0x16451:	cmp	rax, 0x100
0x16457:	jne	0x1642b


0x16431:	movzx	ecx, byte ptr [rbp + rax]
0x16436:	mov	r14, rdi
0x16439:	mov	rsi, rcx
0x1643c:	and	ecx, 0x3f
0x1643f:	shr	rsi, 3
0x16443:	shl	r14, cl
0x16446:	and	esi, 0x18
0x16449:	or	qword ptr [rbx + rsi], r14
0x1644d:	add	rax, 1
0x16451:	cmp	rax, 0x100
0x16457:	jne	0x1642b


0x163ac:	jmp	0x15f84


0x16459:	jmp	0x15f84


0x1642b:	test	byte ptr [rdx + rax*2], 1
0x1642f:	je	0x1644d


0x15f84:	xor	eax, eax
0x15f86:	add	rsp, 0x10
0x15f8a:	pop	rbx
0x15f8b:	pop	rbp
0x15f8c:	pop	r12
0x15f8e:	pop	r13
0x15f90:	pop	r14
0x15f92:	ret	


0x1630b:	xor	ecx, ecx
0x1630d:	test	rbp, rbp
0x16310:	mov	rax, qword ptr [rax]
0x16313:	mov	edi, 1
0x16318:	jne	0x16640


0x1631e:	test	byte ptr [rax + rcx*2 + 1], 1
0x16323:	je	0x16336


0x16640:	xor	edx, edx
0x16642:	test	byte ptr [rax + rdx*2 + 1], 1
0x16647:	je	0x16665


0x16336:	add	rcx, 1
0x1633a:	cmp	rcx, 0x100
0x16341:	jne	0x1631e


0x16325:	mov	rdx, rcx
0x16328:	mov	rsi, rdi
0x1632b:	sar	rdx, 6
0x1632f:	shl	rsi, cl
0x16332:	or	qword ptr [rbx + rdx*8], rsi
0x16336:	add	rcx, 1
0x1633a:	cmp	rcx, 0x100
0x16341:	jne	0x1631e


0x16665:	add	rdx, 1
0x16669:	cmp	rdx, 0x100
0x16670:	jne	0x16642


0x16649:	movzx	ecx, byte ptr [rbp + rdx]
0x1664e:	mov	r9, rdi
0x16651:	mov	rsi, rcx
0x16654:	and	ecx, 0x3f
0x16657:	shr	rsi, 3
0x1665b:	shl	r9, cl
0x1665e:	and	esi, 0x18
0x16661:	or	qword ptr [rbx + rsi], r9
0x16665:	add	rdx, 1
0x16669:	cmp	rdx, 0x100
0x16670:	jne	0x16642


0x16343:	jmp	0x15f84


0x16672:	jmp	0x15f84


0x16642:	test	byte ptr [rax + rdx*2 + 1], 1
0x16647:	je	0x16665


0x16272:	xor	ecx, ecx
0x16274:	test	rbp, rbp
0x16277:	mov	rdx, qword ptr [rax]
0x1627a:	mov	edi, 1
0x1627f:	jne	0x16677


0x16677:	xor	eax, eax
0x16679:	test	byte ptr [rdx + rax*2 + 1], 0x40
0x1667e:	je	0x1669c


0x162a0:	add	rcx, 1
0x162a4:	cmp	rcx, 0x100
0x162ab:	jne	0x16288


0x1628f:	mov	rax, rcx
0x16292:	mov	rsi, rdi
0x16295:	sar	rax, 6
0x16299:	shl	rsi, cl
0x1629c:	or	qword ptr [rbx + rax*8], rsi
0x162a0:	add	rcx, 1
0x162a4:	cmp	rcx, 0x100
0x162ab:	jne	0x16288


0x1669c:	add	rax, 1
0x166a0:	cmp	rax, 0x100
0x166a6:	jne	0x16679


0x16680:	movzx	ecx, byte ptr [rbp + rax]
0x16685:	mov	r14, rdi
0x16688:	mov	rsi, rcx
0x1668b:	and	ecx, 0x3f
0x1668e:	shr	rsi, 3
0x16692:	shl	r14, cl
0x16695:	and	esi, 0x18
0x16698:	or	qword ptr [rbx + rsi], r14
0x1669c:	add	rax, 1
0x166a0:	cmp	rax, 0x100
0x166a6:	jne	0x16679


0x162ad:	jmp	0x15f84


0x16288:	test	byte ptr [rdx + rcx*2 + 1], 0x40
0x1628d:	je	0x162a0


0x166a8:	jmp	0x15f84


0x16679:	test	byte ptr [rdx + rax*2 + 1], 0x40
0x1667e:	je	0x1669c


0x16153:	xor	ecx, ecx
0x16155:	test	rbp, rbp
0x16158:	mov	rdx, qword ptr [rax]
0x1615b:	mov	edi, 1
0x16160:	jne	0x1660a


0x1660a:	xor	eax, eax
0x1660c:	test	byte ptr [rdx + rax*2 + 1], 8
0x16611:	je	0x1662f


0x16188:	add	rcx, 1
0x1618c:	cmp	rcx, 0x100
0x16193:	jne	0x16170


0x16177:	mov	rax, rcx
0x1617a:	mov	rsi, rdi
0x1617d:	sar	rax, 6
0x16181:	shl	rsi, cl
0x16184:	or	qword ptr [rbx + rax*8], rsi
0x16188:	add	rcx, 1
0x1618c:	cmp	rcx, 0x100
0x16193:	jne	0x16170


0x1662f:	add	rax, 1
0x16633:	cmp	rax, 0x100
0x16639:	jne	0x1660c


0x16613:	movzx	ecx, byte ptr [rbp + rax]
0x16618:	mov	r14, rdi
0x1661b:	mov	rsi, rcx
0x1661e:	and	ecx, 0x3f
0x16621:	shr	rsi, 3
0x16625:	shl	r14, cl
0x16628:	and	esi, 0x18
0x1662b:	or	qword ptr [rbx + rsi], r14
0x1662f:	add	rax, 1
0x16633:	cmp	rax, 0x100
0x16639:	jne	0x1660c


0x16195:	jmp	0x15f84


0x16170:	test	byte ptr [rdx + rcx*2 + 1], 8
0x16175:	je	0x16188


0x1663b:	jmp	0x15f84


0x1660c:	test	byte ptr [rdx + rax*2 + 1], 8
0x16611:	je	0x1662f


0x161d8:	xor	ecx, ecx
0x161da:	test	rbp, rbp
0x161dd:	mov	rdx, qword ptr [rax]
0x161e0:	mov	edi, 1
0x161e5:	jne	0x163b8


0x163b8:	xor	eax, eax
0x163ba:	test	byte ptr [rdx + rax*2 + 1], 4
0x163bf:	je	0x163dd


0x16208:	add	rcx, 1
0x1620c:	cmp	rcx, 0x100
0x16213:	jne	0x161f0


0x161f7:	mov	rax, rcx
0x161fa:	mov	rsi, rdi
0x161fd:	sar	rax, 6
0x16201:	shl	rsi, cl
0x16204:	or	qword ptr [rbx + rax*8], rsi
0x16208:	add	rcx, 1
0x1620c:	cmp	rcx, 0x100
0x16213:	jne	0x161f0


0x163dd:	add	rax, 1
0x163e1:	cmp	rax, 0x100
0x163e7:	jne	0x163ba


0x163c1:	movzx	ecx, byte ptr [rbp + rax]
0x163c6:	mov	r9, rdi
0x163c9:	mov	rsi, rcx
0x163cc:	and	ecx, 0x3f
0x163cf:	shr	rsi, 3
0x163d3:	shl	r9, cl
0x163d6:	and	esi, 0x18
0x163d9:	or	qword ptr [rbx + rsi], r9
0x163dd:	add	rax, 1
0x163e1:	cmp	rax, 0x100
0x163e7:	jne	0x163ba


0x16215:	jmp	0x15f84


0x161f0:	test	byte ptr [rdx + rcx*2 + 1], 4
0x161f5:	je	0x16208


0x163e9:	jmp	0x15f84


0x163ba:	test	byte ptr [rdx + rax*2 + 1], 4
0x163bf:	je	0x163dd


0x16085:	xor	ecx, ecx
0x16087:	test	rbp, rbp
0x1608a:	mov	rdx, qword ptr [rax]
0x1608d:	mov	edi, 1
0x16092:	jne	0x163ee


0x163ee:	xor	eax, eax
0x163f0:	test	byte ptr [rdx + rax*2 + 1], 0x20
0x163f5:	je	0x16413


0x160b8:	add	rcx, 1
0x160bc:	cmp	rcx, 0x100
0x160c3:	jne	0x160a0


0x160a7:	mov	rax, rcx
0x160aa:	mov	rsi, rdi
0x160ad:	sar	rax, 6
0x160b1:	shl	rsi, cl
0x160b4:	or	qword ptr [rbx + rax*8], rsi
0x160b8:	add	rcx, 1
0x160bc:	cmp	rcx, 0x100
0x160c3:	jne	0x160a0


0x16413:	add	rax, 1
0x16417:	cmp	rax, 0x100
0x1641d:	jne	0x163f0


0x163f7:	movzx	ecx, byte ptr [rbp + rax]
0x163fc:	mov	r9, rdi
0x163ff:	mov	rsi, rcx
0x16402:	and	ecx, 0x3f
0x16405:	shr	rsi, 3
0x16409:	shl	r9, cl
0x1640c:	and	esi, 0x18
0x1640f:	or	qword ptr [rbx + rsi], r9
0x16413:	add	rax, 1
0x16417:	cmp	rax, 0x100
0x1641d:	jne	0x163f0


0x160c5:	jmp	0x15f84


0x160a0:	test	byte ptr [rdx + rcx*2 + 1], 0x20
0x160a5:	je	0x160b8


0x1641f:	jmp	0x15f84


0x163f0:	test	byte ptr [rdx + rax*2 + 1], 0x20
0x163f5:	je	0x16413


0x160cf:	xor	ecx, ecx
0x160d1:	test	rbp, rbp
0x160d4:	mov	rdx, qword ptr [rax]
0x160d7:	mov	edi, 1
0x160dc:	jne	0x162b2


0x162b2:	xor	eax, eax
0x162b4:	nop	dword ptr [rax]
0x162b8:	test	byte ptr [rdx + rax*2 + 1], 2
0x162bd:	je	0x162db


0x16100:	add	rcx, 1
0x16104:	cmp	rcx, 0x100
0x1610b:	jne	0x160e8


0x160ef:	mov	rax, rcx
0x160f2:	mov	rsi, rdi
0x160f5:	sar	rax, 6
0x160f9:	shl	rsi, cl
0x160fc:	or	qword ptr [rbx + rax*8], rsi
0x16100:	add	rcx, 1
0x16104:	cmp	rcx, 0x100
0x1610b:	jne	0x160e8


0x162db:	add	rax, 1
0x162df:	cmp	rax, 0x100
0x162e5:	jne	0x162b8


0x162bf:	movzx	ecx, byte ptr [rbp + rax]
0x162c4:	mov	r14, rdi
0x162c7:	mov	rsi, rcx
0x162ca:	and	ecx, 0x3f
0x162cd:	shr	rsi, 3
0x162d1:	shl	r14, cl
0x162d4:	and	esi, 0x18
0x162d7:	or	qword ptr [rbx + rsi], r14
0x162db:	add	rax, 1
0x162df:	cmp	rax, 0x100
0x162e5:	jne	0x162b8


0x1610d:	jmp	0x15f84


0x160e8:	test	byte ptr [rdx + rcx*2 + 1], 2
0x160ed:	je	0x16100


0x162e7:	jmp	0x15f84


0x162b8:	test	byte ptr [rdx + rax*2 + 1], 2
0x162bd:	je	0x162db


0x15f4d:	xor	ecx, ecx
0x15f4f:	test	rbp, rbp
0x15f52:	mov	rdx, qword ptr [rax]
0x15f55:	mov	edi, 1
0x15f5a:	jne	0x1621a


0x15f60:	test	byte ptr [rdx + rcx*2], 2
0x15f64:	je	0x15f77


0x1621a:	xor	eax, eax
0x1621c:	nop	dword ptr [rax]
0x16220:	test	byte ptr [rdx + rax*2], 2
0x16224:	je	0x16242


0x15f77:	add	rcx, 1
0x15f7b:	cmp	rcx, 0x100
0x15f82:	jne	0x15f60


0x15f66:	mov	rax, rcx
0x15f69:	mov	rsi, rdi
0x15f6c:	sar	rax, 6
0x15f70:	shl	rsi, cl
0x15f73:	or	qword ptr [rbx + rax*8], rsi
0x15f77:	add	rcx, 1
0x15f7b:	cmp	rcx, 0x100
0x15f82:	jne	0x15f60


0x16242:	add	rax, 1
0x16246:	cmp	rax, 0x100
0x1624c:	jne	0x16220


0x16226:	movzx	ecx, byte ptr [rbp + rax]
0x1622b:	mov	r11, rdi
0x1622e:	mov	rsi, rcx
0x16231:	and	ecx, 0x3f
0x16234:	shr	rsi, 3
0x16238:	shl	r11, cl
0x1623b:	and	esi, 0x18
0x1623e:	or	qword ptr [rbx + rsi], r11
0x16242:	add	rax, 1
0x16246:	cmp	rax, 0x100
0x1624c:	jne	0x16220


0x1624e:	jmp	0x15f84


0x16220:	test	byte ptr [rdx + rax*2], 2
0x16224:	je	0x16242


0x15f9d:	xor	ecx, ecx
0x15f9f:	test	rbp, rbp
0x15fa2:	mov	rdx, qword ptr [rax]
0x15fa5:	mov	edi, 1
0x15faa:	jne	0x1619a


0x15fb0:	test	byte ptr [rdx + rcx*2], 8
0x15fb4:	je	0x15fc7


0x1619a:	xor	eax, eax
0x1619c:	nop	dword ptr [rax]
0x161a0:	test	byte ptr [rdx + rax*2], 8
0x161a4:	je	0x161c2


0x15fc7:	add	rcx, 1
0x15fcb:	cmp	rcx, 0x100
0x15fd2:	jne	0x15fb0


0x15fb6:	mov	rax, rcx
0x15fb9:	mov	rsi, rdi
0x15fbc:	sar	rax, 6
0x15fc0:	shl	rsi, cl
0x15fc3:	or	qword ptr [rbx + rax*8], rsi
0x15fc7:	add	rcx, 1
0x15fcb:	cmp	rcx, 0x100
0x15fd2:	jne	0x15fb0


0x161c2:	add	rax, 1
0x161c6:	cmp	rax, 0x100
0x161cc:	jne	0x161a0


0x161a6:	movzx	ecx, byte ptr [rbp + rax]
0x161ab:	mov	r10, rdi
0x161ae:	mov	rsi, rcx
0x161b1:	and	ecx, 0x3f
0x161b4:	shr	rsi, 3
0x161b8:	shl	r10, cl
0x161bb:	and	esi, 0x18
0x161be:	or	qword ptr [rbx + rsi], r10
0x161c2:	add	rax, 1
0x161c6:	cmp	rax, 0x100
0x161cc:	jne	0x161a0


0x15fd4:	jmp	0x15f84


0x161ce:	jmp	0x15f84


0x161a0:	test	byte ptr [rdx + rax*2], 8
0x161a4:	je	0x161c2


0x4b23:	test	rax, rax
0x4b26:	js	0x4b70


0x4b70:	mov	rdi, qword ptr [rbx]
0x4b73:	call	0x2700


0x4b28:	mov	dword ptr [rbp], 1
0x4b2f:	add	qword ptr [rbx + 8], 1
0x4b34:	mov	rax, qword ptr [rbx + 0x10]
0x4b38:	add	rsp, 8
0x4b3c:	pop	rbx
0x4b3d:	pop	rbp
0x4b3e:	ret	


0x2700:	jmp	qword ptr [rip + 0x22573a]




0x16bfe:	mov	rdx, qword ptr [rsp + 0x10]
0x16c03:	mov	rax, qword ptr [rax]
0x16c06:	movsxd	rax, dword ptr [rax + rdx*4]
0x16c0a:	mov	byte ptr [r12 + rax], 1
0x16c0f:	mov	rax, qword ptr [rsp + 0x30]
0x16c14:	test	byte ptr [rax + 0x1a], 0x40
0x16c18:	je	0x16baf


0x16cf5:	mov	rax, qword ptr [rax]
0x16cf8:	lea	rdx, [r12 + r14]
0x16cfc:	movsxd	rax, dword ptr [rax + rdx*4]
0x16d00:	mov	byte ptr [rbp + rax], 1
0x16d05:	add	r14, 1
0x16d09:	cmp	r14, 0x40
0x16d0d:	jne	0x16ce0


0x16a44:	mov	rax, qword ptr [rax]
0x16a47:	movsxd	rax, dword ptr [rax + r13*4]
0x16a4b:	mov	byte ptr [rbp + rax], 1
0x16a50:	mov	rax, qword ptr [rsp + 0x30]
0x16a55:	test	byte ptr [rax + 0x1a], 0x40
0x16a59:	je	0x169e7


0x5de0:	mov	r13, rax
0x5de3:	nop	dword ptr [rax + rax]
0x5de8:	movzx	ecx, byte ptr [rbx]
0x5deb:	mov	rax, qword ptr [r13]
0x5def:	mov	rsi, r12
0x5df2:	add	rbx, 1
0x5df6:	mov	edi, dword ptr [rax + rcx*4]
0x5df9:	call	0x2660


0x5dfe:	cmp	rbx, rbp
0x5e01:	jne	0x5de8


0x5e03:	add	rsp, 8
0x5e07:	pop	rbx
0x5e08:	pop	rbp
0x5e09:	pop	r12
0x5e0b:	pop	r13
0x5e0d:	ret	


0x5de8:	movzx	ecx, byte ptr [rbx]
0x5deb:	mov	rax, qword ptr [r13]
0x5def:	mov	rsi, r12
0x5df2:	add	rbx, 1
0x5df6:	mov	edi, dword ptr [rax + rcx*4]
0x5df9:	call	0x2660


0xa663:	test	rax, rax
0xa666:	je	0xa6bd


0xa6bd:	mov	qword ptr [rip + 0x21daec], rbx
0xa6c4:	mov	qword ptr [rip + 0x21d9fd], rbx
0xa6cb:	pop	rbx
0xa6cc:	ret	


0xa668:	lea	r8, [rax + 1]
0xa66c:	mov	rdx, r8
0xa66f:	sub	rdx, rbx
0xa672:	cmp	rdx, 6
0xa676:	jle	0xa6bd


0xa678:	lea	rsi, [rax - 6]
0xa67c:	lea	rdi, [rip + 0x1742d]
0xa683:	mov	ecx, 7
0xa688:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xa688:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xa68a:	seta	dl
0xa68d:	sbb	dl, 0
0xa690:	test	dl, dl
0xa692:	jne	0xa6bd


0xa694:	lea	rdi, [rip + 0x1741d]
0xa69b:	mov	ecx, 3
0xa6a0:	mov	rsi, r8
0xa6a3:	mov	rbx, r8
0xa6a6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xa6a6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xa6a8:	seta	dl
0xa6ab:	sbb	dl, 0
0xa6ae:	test	dl, dl
0xa6b0:	jne	0xa6bd


0xa6b2:	lea	rbx, [rax + 4]
0xa6b6:	mov	qword ptr [rip + 0x21d9e3], rbx
0xa6bd:	mov	qword ptr [rip + 0x21daec], rbx
0xa6c4:	mov	qword ptr [rip + 0x21d9fd], rbx
0xa6cb:	pop	rbx
0xa6cc:	ret	


0x727d:	jmp	0x614e


0xa6ea:	call	0x2400


0x821b:	lea	rdx, [rip + 0x19724]
0x8222:	xor	eax, eax
0x8224:	mov	rcx, rbp
0x8227:	mov	esi, 1
0x822c:	mov	rdi, r12
0x822f:	call	0x2970


0x8234:	test	r13, r13
0x8237:	js	0x82a0


0x82a0:	mov	rax, r13
0x82a3:	mov	rdx, r13
0x82a6:	pxor	xmm0, xmm0
0x82aa:	shr	rax, 1
0x82ad:	and	edx, 1
0x82b0:	or	rax, rdx
0x82b3:	test	rbp, rbp
0x82b6:	cvtsi2sd	xmm0, rax
0x82bb:	addsd	xmm0, xmm0
0x82bf:	mulsd	xmm0, qword ptr [rip + 0x19711]
0x82c7:	jns	0x824f


0x8239:	pxor	xmm0, xmm0
0x823d:	test	rbp, rbp
0x8240:	cvtsi2sd	xmm0, r13
0x8245:	mulsd	xmm0, qword ptr [rip + 0x1978b]
0x824d:	js	0x82c9


0x82c9:	mov	rax, rbp
0x82cc:	pxor	xmm1, xmm1
0x82d0:	shr	rax, 1
0x82d3:	and	ebp, 1
0x82d6:	or	rax, rbp
0x82d9:	cvtsi2sd	xmm1, rax
0x82de:	addsd	xmm1, xmm1
0x82e2:	jmp	0x8258


0x824f:	pxor	xmm1, xmm1
0x8253:	cvtsi2sd	xmm1, rbp
0x8258:	divsd	xmm0, xmm1
0x825c:	lea	rdx, [rip + 0x19715]
0x8263:	mov	rcx, r13
0x8266:	mov	rdi, r12
0x8269:	mov	esi, 1
0x826e:	mov	eax, 1
0x8273:	call	0x2970


0x8258:	divsd	xmm0, xmm1
0x825c:	lea	rdx, [rip + 0x19715]
0x8263:	mov	rcx, r13
0x8266:	mov	rdi, r12
0x8269:	mov	esi, 1
0x826e:	mov	eax, 1
0x8273:	call	0x2970


0x8278:	add	rsp, 8
0x827c:	mov	rcx, rbx
0x827f:	mov	rdi, r12
0x8282:	pop	rbx
0x8283:	pop	rbp
0x8284:	pop	r12
0x8286:	pop	r13
0x8288:	lea	rdx, [rip + 0x196cf]
0x828f:	mov	esi, 1
0x8294:	xor	eax, eax
0x8296:	jmp	0x2970


0xc3fc:	lea	rsi, [rip + 0x15b98]
0xc403:	xor	edi, edi
0xc405:	mov	edx, 5
0xc40a:	call	0x2510


0xc511:	jmp	0xc3fc


0xdd2e:	test	eax, eax
0xdd30:	je	0xdd3a


0xdd32:	test	dword ptr [rbx], 0x100
0xdd38:	jne	0xdd48


0xdd48:	mov	rdi, rbx
0xdd4b:	mov	edx, 1
0xdd50:	xor	esi, esi
0xdd52:	call	0xdd60


0xea02:	test	eax, eax
0xea04:	mov	dword ptr [rsp + 0x64], eax
0xea08:	js	0xef60


0xef60:	mov	rdi, qword ptr [rbp + 0x18]
0xef64:	call	0x2650


0xea0e:	cmp	qword ptr [r15 + 0x40], 0
0xea13:	je	0xf1e8


0xf1e8:	mov	qword ptr [rsp + 0x38], 0x186a0
0xf1f1:	mov	byte ptr [rsp + 0x5f], 1
0xf1f6:	mov	edi, dword ptr [r15 + 0x48]
0xf1fa:	jmp	0xea2b


0xea19:	mov	qword ptr [rsp + 0x38], -1
0xea22:	mov	edi, dword ptr [r15 + 0x48]
0xea26:	mov	byte ptr [rsp + 0x5f], 1
0xea2b:	mov	rcx, qword ptr [rbp + 0x48]
0xea2f:	mov	rdx, qword ptr [rbp + 0x38]
0xea33:	mov	qword ptr [rsp + 0x40], 0
0xea3c:	cmp	byte ptr [rdx + rcx - 1], 0x2f
0xea41:	lea	rax, [rcx - 1]
0xea45:	cmovne	rax, rcx
0xea49:	and	edi, 4
0xea4c:	mov	qword ptr [rsp + 0x48], rax
0xea51:	je	0xea63


0xea2b:	mov	rcx, qword ptr [rbp + 0x48]
0xea2f:	mov	rdx, qword ptr [rbp + 0x38]
0xea33:	mov	qword ptr [rsp + 0x40], 0
0xea3c:	cmp	byte ptr [rdx + rcx - 1], 0x2f
0xea41:	lea	rax, [rcx - 1]
0xea45:	cmovne	rax, rcx
0xea49:	and	edi, 4
0xea4c:	mov	qword ptr [rsp + 0x48], rax
0xea51:	je	0xea63


0xea63:	mov	rax, qword ptr [rsp + 0x48]
0xea68:	mov	rbx, qword ptr [r15 + 0x30]
0xea6c:	mov	byte ptr [rsp + 0x5e], 0
0xea71:	mov	byte ptr [rsp + 0x5d], 0
0xea76:	mov	qword ptr [rsp + 8], 0
0xea7f:	mov	qword ptr [rsp + 0x10], 0
0xea88:	add	rax, 1
0xea8c:	mov	qword ptr [rsp + 0x20], rbp
0xea91:	sub	rbx, rax
0xea94:	mov	qword ptr [rsp + 0x18], rax
0xea99:	mov	rax, qword ptr [rbp + 0x58]
0xea9d:	mov	qword ptr [rsp + 0x28], rbx
0xeaa2:	xor	ebx, ebx
0xeaa4:	add	rax, 1
0xeaa8:	mov	qword ptr [rsp + 0x30], rax
0xeaad:	jmp	0xeb8f


0xea53:	add	rax, qword ptr [r15 + 0x20]
0xea57:	lea	rbx, [rax + 1]
0xea5b:	mov	byte ptr [rax], 0x2f
0xea5e:	mov	qword ptr [rsp + 0x40], rbx
0xea63:	mov	rax, qword ptr [rsp + 0x48]
0xea68:	mov	rbx, qword ptr [r15 + 0x30]
0xea6c:	mov	byte ptr [rsp + 0x5e], 0
0xea71:	mov	byte ptr [rsp + 0x5d], 0
0xea76:	mov	qword ptr [rsp + 8], 0
0xea7f:	mov	qword ptr [rsp + 0x10], 0
0xea88:	add	rax, 1
0xea8c:	mov	qword ptr [rsp + 0x20], rbp
0xea91:	sub	rbx, rax
0xea94:	mov	qword ptr [rsp + 0x18], rax
0xea99:	mov	rax, qword ptr [rbp + 0x58]
0xea9d:	mov	qword ptr [rsp + 0x28], rbx
0xeaa2:	xor	ebx, ebx
0xeaa4:	add	rax, 1
0xeaa8:	mov	qword ptr [rsp + 0x30], rax
0xeaad:	jmp	0xeb8f


0xeb8f:	mov	rax, qword ptr [rsp + 0x20]
0xeb94:	mov	r13, qword ptr [rax + 0x18]
0xeb98:	test	r13, r13
0xeb9b:	je	0xf068


0xf068:	mov	rbp, rax
0xf06b:	cmp	byte ptr [rsp + 0x5d], 0
0xf070:	jne	0xecd8


0xeba1:	call	0x2410


0xf076:	test	byte ptr [r15 + 0x48], 4
0xf07b:	je	0xf09b


0xecd8:	mov	rax, qword ptr [r15 + 8]
0xecdc:	mov	rcx, qword ptr [r15 + 0x20]
0xece0:	test	rax, rax
0xece3:	je	0xed10


0xf09b:	cmp	qword ptr [rsp + 0x50], 0
0xf0a1:	jne	0xf110


0xf07d:	mov	rax, qword ptr [rsp + 0x18]
0xf082:	cmp	qword ptr [r15 + 0x30], rax
0xf086:	je	0xf08d


0xed10:	mov	rax, qword ptr [rsp + 0x10]
0xed15:	jmp	0xed23


0xf0a3:	cmp	byte ptr [rsp + 0x5f], 0
0xf0a8:	je	0xf110


0xf110:	test	rbx, rbx
0xf113:	jne	0xf0b6


0xf08d:	sub	qword ptr [rsp + 0x40], 1
0xf093:	mov	rax, qword ptr [rsp + 0x40]
0xf098:	mov	byte ptr [rax], 0
0xf09b:	cmp	qword ptr [rsp + 0x50], 0
0xf0a1:	jne	0xf110


0xf088:	test	rbx, rbx
0xf08b:	jne	0xf093


0xed23:	cmp	qword ptr [rax + 0x58], 0
0xed28:	js	0xf076


0xed03:	mov	qword ptr [rax + 0x38], rcx
0xed07:	mov	rax, qword ptr [rax + 0x10]
0xed0b:	test	rax, rax
0xed0e:	jne	0xece8


0xecf8:	sub	rdx, qword ptr [rax + 0x38]
0xecfc:	add	rdx, rcx
0xecff:	mov	qword ptr [rax + 0x30], rdx
0xed03:	mov	qword ptr [rax + 0x38], rcx
0xed07:	mov	rax, qword ptr [rax + 0x10]
0xed0b:	test	rax, rax
0xed0e:	jne	0xece8


0xf0aa:	cmp	dword ptr [rsp + 0x58], 1
0xf0af:	je	0xf0f0


0xf115:	cmp	dword ptr [rsp + 0x58], 3
0xf11a:	je	0xf2d8


0xf0b6:	cmp	byte ptr [rsp + 0x5e], 0
0xf0bb:	jne	0xf1b8


0xf093:	mov	rax, qword ptr [rsp + 0x40]
0xf098:	mov	byte ptr [rax], 0
0xf09b:	cmp	qword ptr [rsp + 0x50], 0
0xf0a1:	jne	0xf110


0xed2e:	mov	rdx, qword ptr [rax + 0x30]
0xed32:	lea	rsi, [rax + 0x108]
0xed39:	cmp	rdx, rsi
0xed3c:	je	0xed49


0xece8:	mov	rdx, qword ptr [rax + 0x30]
0xecec:	lea	rsi, [rax + 0x108]
0xecf3:	cmp	rdx, rsi
0xecf6:	je	0xed03


0xf0f0:	cmp	qword ptr [rbp + 0x58], 0
0xf0f5:	jne	0xf226


0xf0b1:	test	rbx, rbx
0xf0b4:	je	0xf0f0


0xf2d8:	movzx	eax, word ptr [rbp + 0x70]
0xf2dc:	cmp	ax, 7
0xf2e0:	je	0xf120


0xf120:	mov	rdi, qword ptr [rsp + 0x10]
0xf125:	call	0xe1b0


0xf0c1:	cmp	qword ptr [r15 + 0x40], 0
0xf0c6:	je	0xef85


0xf1b8:	lea	rax, [rip - 0x13af]
0xf1bf:	mov	rsi, qword ptr [rsp + 0x10]
0xf1c4:	mov	rdx, rbx
0xf1c7:	mov	rdi, r15
0xf1ca:	mov	qword ptr [r15 + 0x40], rax
0xf1ce:	call	0xe010


0xed49:	mov	rdx, qword ptr [rax + 0x10]
0xed4d:	mov	qword ptr [rax + 0x38], rcx
0xed51:	test	rdx, rdx
0xed54:	jne	0xed20


0xed3e:	sub	rdx, qword ptr [rax + 0x38]
0xed42:	add	rdx, rcx
0xed45:	mov	qword ptr [rax + 0x30], rdx
0xed49:	mov	rdx, qword ptr [rax + 0x10]
0xed4d:	mov	qword ptr [rax + 0x38], rcx
0xed51:	test	rdx, rdx
0xed54:	jne	0xed20


0xf0fb:	mov	rdi, r15
0xf0fe:	call	0xe450


0xf226:	mov	rsi, qword ptr [rbp + 8]
0xf22a:	lea	rcx, [rip + 0x1346a]
0xf231:	mov	edx, 0xffffffff
0xf236:	mov	rdi, r15
0xf239:	call	0xe5d0


0xf2e6:	cmp	ax, 4
0xf2ea:	je	0xf120


0xef85:	mov	rbx, qword ptr [rsp + 0x68]
0xef8a:	xor	rbx, qword ptr fs:[0x28]
0xef93:	mov	rax, qword ptr [rsp + 0x10]
0xef98:	jne	0xf371


0xf0cc:	cmp	rbx, 1
0xf0d0:	je	0xef85


0xed56:	mov	rdx, qword ptr [rax + 8]
0xed5a:	jmp	0xed20


0xed20:	mov	rax, rdx
0xed23:	cmp	qword ptr [rax + 0x58], 0
0xed28:	js	0xf076


0xf2f0:	mov	esi, 6
0xf2f5:	mov	word ptr [rbp + 0x70], si
0xf2f9:	jmp	0xf120


0xef9e:	add	rsp, 0x78
0xefa2:	pop	rbx
0xefa3:	pop	rbp
0xefa4:	pop	r12
0xefa6:	pop	r13
0xefa8:	pop	r14
0xefaa:	pop	r15
0xefac:	ret	


0xf371:	call	0x2560


0xf0d6:	mov	rsi, qword ptr [rsp + 0x10]
0xf0db:	mov	rdx, rbx
0xf0de:	mov	rdi, r15
0xf0e1:	call	0xe010


0xf23e:	test	eax, eax
0xf240:	setne	al
0xf243:	jmp	0xf108


0xf108:	test	al, al
0xf10a:	jne	0xf293


0xf293:	mov	edi, 7
0xf298:	mov	word ptr [rbp + 0x70], di
0xf29c:	or	dword ptr [r15 + 0x48], 0x2000
0xf2a4:	mov	rdi, qword ptr [rsp + 0x10]
0xf2a9:	call	0xe1b0


0xf103:	test	eax, eax
0xf105:	setne	al
0xf108:	test	al, al
0xf10a:	jne	0xf293


0xf0e6:	mov	qword ptr [rsp + 0x10], rax
0xf0eb:	jmp	0xef85


0xf1d3:	mov	qword ptr [r15 + 0x40], 0
0xf1db:	mov	qword ptr [rsp + 0x10], rax
0xf1e0:	jmp	0xef85


0xf2ae:	mov	qword ptr [rsp + 0x10], 0
0xf2b7:	jmp	0xef85


0xf12a:	mov	qword ptr [rsp + 0x10], 0
0xf133:	jmp	0xef85


0xef69:	cmp	dword ptr [rsp + 0x58], 3
0xef6e:	mov	qword ptr [rbp + 0x18], 0
0xef76:	je	0xf19b


0xf19b:	mov	r10d, 4
0xf1a1:	mov	word ptr [rbp + 0x70], r10w
0xf1a6:	call	0x2410


0xef7c:	mov	qword ptr [rsp + 0x10], 0
0xef85:	mov	rbx, qword ptr [rsp + 0x68]
0xef8a:	xor	rbx, qword ptr fs:[0x28]
0xef93:	mov	rax, qword ptr [rsp + 0x10]
0xef98:	jne	0xf371


0xfd05:	test	rax, rax
0xfd08:	mov	qword ptr [r12 + 8], rax
0xfd0d:	je	0xfe04


0xfe04:	mov	edi, dword ptr [r12 + 0x48]
0xfe09:	test	edi, 0x2000
0xfe0f:	jne	0xf9fe


0xfd13:	mov	rbp, rax
0xfd16:	mov	qword ptr [r12 + 8], 0
0xfd1f:	jmp	0xfc92


0xfe15:	mov	r9d, dword ptr [rbp + 0x40]
0xfe19:	test	r9d, r9d
0xfe1c:	je	0xfe30


0xfe30:	lea	rsi, [r12 + 0x58]
0xfe35:	mov	rdx, rbp
0xfe38:	call	0xe900


0xfe1e:	cmp	word ptr [rbp + 0x70], 4
0xfe23:	je	0xfe30


0xfe25:	mov	r8d, 7
0xfe2b:	mov	word ptr [rbp + 0x70], r8w
0xfe30:	lea	rsi, [r12 + 0x58]
0xfe35:	mov	rdx, rbp
0xfe38:	call	0xe900


0xfe3d:	jmp	0xfa7a


0xfefe:	test	rax, rax
0xff01:	mov	rbx, rax
0xff04:	je	0xff58


0xff58:	test	byte ptr [r12 + 0x49], 0x20
0xff5e:	jne	0xf9fe


0xff06:	mov	rdi, rbp
0xff09:	mov	rbp, rbx
0xff0c:	call	0x2a10


0xff64:	mov	rbx, qword ptr [rbp + 8]
0xff68:	jmp	0xf978


0x118ed:	mov	rax, qword ptr [rax]
0x118f0:	mov	rdx, qword ptr [r14 + 8]
0x118f4:	mov	eax, dword ptr [rax + r12*4]
0x118f8:	mov	byte ptr [rdx + r15], al
0x118fc:	mov	rdx, qword ptr [r14 + 8]
0x11900:	mov	rax, qword ptr [r14 + 0x10]
0x11904:	movzx	edx, byte ptr [rdx + r15]
0x11909:	mov	dword ptr [rax + r15*4], edx
0x1190d:	add	r15, 1
0x11911:	jmp	0x118ba


0x118ba:	cmp	rbx, r15
0x118bd:	jg	0x117d0


0x118c3:	jmp	0x11938


0x117d0:	mov	rbp, qword ptr [r14 + 0x28]
0x117d4:	mov	r13, r15
0x117d7:	add	rbp, r15
0x117da:	add	rbp, qword ptr [r14]
0x117dd:	movzx	r12d, byte ptr [rbp]
0x117e2:	test	r12b, 0x80
0x117e6:	jne	0x117fa


0x5e40:	mov	r13, rax
0x5e43:	nop	dword ptr [rax + rax]
0x5e48:	movzx	ecx, byte ptr [rbx]
0x5e4b:	mov	rax, qword ptr [r13]
0x5e4f:	mov	rsi, r12
0x5e52:	add	rbx, 1
0x5e56:	mov	edi, dword ptr [rax + rcx*4]
0x5e59:	call	0x2660


0x5e5e:	cmp	rbx, rbp
0x5e61:	jne	0x5e48


0x5e63:	add	rsp, 8
0x5e67:	pop	rbx
0x5e68:	pop	rbp
0x5e69:	pop	r12
0x5e6b:	pop	r13
0x5e6d:	ret	


0x5e48:	movzx	ecx, byte ptr [rbx]
0x5e4b:	mov	rax, qword ptr [r13]
0x5e4f:	mov	rsi, r12
0x5e52:	add	rbx, 1
0x5e56:	mov	edi, dword ptr [rax + rcx*4]
0x5e59:	call	0x2660


0x113bf:	mov	rsi, qword ptr [rax]
0x113c2:	mov	rcx, qword ptr [rbp + 8]
0x113c6:	mov	edx, dword ptr [rsi + rdx*4]
0x113c9:	mov	byte ptr [rcx + rbx], dl
0x113cc:	add	rbx, 1
0x113d0:	cmp	r12, rbx
0x113d3:	jne	0x113a8


0x113e8:	movzx	edx, byte ptr [rcx + rdx]
0x113ec:	jmp	0x113bf


0x113a8:	mov	rdx, qword ptr [rbp]
0x113ac:	mov	rcx, qword ptr [rbp + 0x78]
0x113b0:	add	rdx, rbx
0x113b3:	add	rdx, qword ptr [rbp + 0x28]
0x113b7:	test	rcx, rcx
0x113ba:	movzx	edx, byte ptr [rdx]
0x113bd:	jne	0x113e8


0x1330a:	xor	eax, eax
0x1330c:	add	rsp, 8
0x13310:	pop	rbx
0x13311:	pop	rbp
0x13312:	pop	r12
0x13314:	pop	r13
0x13316:	ret	


0x12d2a:	xor	eax, eax
0x12d2c:	jmp	0x12cac


0x12cac:	pop	rbx
0x12cad:	pop	rbp
0x12cae:	pop	r12
0x12cb0:	ret	


0x12d05:	jmp	0x12c59


0x12d8f:	jmp	0x12caa


0x178fd:	lea	rax, [rbp - 0x70]
0x17901:	mov	rcx, qword ptr [r13]
0x17905:	mov	qword ptr [rbp - 0xa8], rax
0x1790c:	add	rax, 0x10
0x17910:	mov	qword ptr [rbp - 0x78], rcx
0x17914:	mov	qword ptr [rbp - 0xc8], rax
0x1791b:	lea	rax, [rbp - 0x78]
0x1791f:	mov	qword ptr [rbp - 0xb0], rax
0x17926:	jmp	0x17a09


0x17a09:	mov	rax, qword ptr [r13 + 8]
0x17a0d:	cmp	rax, rcx
0x17a10:	jl	0x17f00


0x17f00:	mov	rdi, qword ptr [rbp - 0x60]
0x17f04:	call	0x2a10


0x17a16:	mov	rdi, qword ptr [rbp - 0x90]
0x17a1d:	mov	r9, rbx
0x17a20:	mov	r15, rbx
0x17a23:	shl	r9, 4
0x17a27:	mov	rdx, qword ptr [rdi]
0x17a2a:	add	rdx, r9
0x17a2d:	movzx	esi, byte ptr [rdx + 8]
0x17a31:	cmp	esi, 8
0x17a34:	jne	0x17930


0x17a3a:	mov	rdx, qword ptr [rdx]
0x17a3d:	add	rdx, 1
0x17a41:	cmp	qword ptr [rbp - 0x98], rdx
0x17a48:	jle	0x17939


0x17930:	cmp	esi, 9
0x17933:	je	0x17b20


0x17939:	cmp	rax, rcx
0x1793c:	jne	0x1794c


0x17a4e:	shl	rdx, 4
0x17a52:	add	rdx, r13
0x17a55:	mov	qword ptr [rdx + 8], -1
0x17a5d:	mov	qword ptr [rdx], rcx
0x17a60:	mov	rax, qword ptr [r13 + 8]
0x17a64:	jmp	0x17939


0x17b20:	mov	rdi, qword ptr [rdx]
0x17b23:	lea	rsi, [rdi + 1]
0x17b27:	cmp	qword ptr [rbp - 0x98], rsi
0x17b2e:	jle	0x17939


0x1793e:	cmp	qword ptr [r12 + 0xb0], rbx
0x17946:	je	0x17d20


0x1794c:	mov	r14, qword ptr [r12 + 0x98]
0x17954:	mov	rdi, qword ptr [r14]
0x17957:	lea	rsi, [rdi + r9]
0x1795b:	movzx	eax, byte ptr [rsi + 8]
0x1795f:	test	al, 8
0x17961:	jne	0x17a70


0x17b34:	shl	rsi, 4
0x17b38:	lea	rax, [r13 + rsi]
0x17b3d:	cmp	qword ptr [rax], rcx
0x17b40:	jl	0x17ec0


0x17d20:	cmp	qword ptr [rbp - 0x88], 0
0x17d28:	je	0x1805c


0x17967:	test	byte ptr [rsi + 0xa], 0x10
0x1796b:	jne	0x17b70


0x17a70:	mov	rax, qword ptr [r12 + 0xb8]
0x17a78:	mov	rdx, qword ptr [rbp - 0x78]
0x17a7c:	mov	rsi, rbx
0x17a7f:	mov	rdi, qword ptr [rbp - 0xa8]
0x17a86:	mov	r9, qword ptr [rax + rdx*8]
0x17a8a:	mov	rax, qword ptr [r14 + 0x28]
0x17a8e:	lea	rdx, [rbx + rbx*2]
0x17a92:	mov	qword ptr [rbp - 0xa0], r9
0x17a99:	lea	r15, [rax + rdx*8]
0x17a9d:	call	0x11160


0x17ec0:	mov	rdx, qword ptr [rbp - 0xb8]
0x17ec7:	mov	rdi, qword ptr [rbp - 0xc0]
0x17ece:	mov	rsi, r13
0x17ed1:	mov	qword ptr [rax + 8], rcx
0x17ed5:	mov	qword ptr [rbp - 0xd8], r9
0x17edc:	mov	qword ptr [rbp - 0xa0], rcx
0x17ee3:	call	0x2710


0x17b46:	test	byte ptr [rdx + 0xa], 8
0x17b4a:	je	0x17b5e


0x1805c:	mov	rdi, qword ptr [rbp - 0x60]
0x18060:	call	0x2a10


0x17d2e:	mov	rcx, qword ptr [rbp - 0x98]
0x17d35:	test	rcx, rcx
0x17d38:	je	0x17d5a


0x17971:	cmp	al, 4
0x17973:	je	0x17bb0


0x17b70:	mov	r8, qword ptr [rbp - 0x78]
0x17b74:	lea	rsi, [r14 + 0xd8]
0x17b7b:	mov	rcx, r12
0x17b7e:	mov	rdx, rbx
0x17b81:	mov	qword ptr [rbp - 0xa0], r9
0x17b88:	call	0x16e50


0x17b5e:	mov	qword ptr [rax + 8], rcx
0x17b62:	mov	rax, qword ptr [r13 + 8]
0x17b66:	jmp	0x17939


0x17b4c:	mov	rdi, qword ptr [rbp - 0xc0]
0x17b53:	cmp	qword ptr [rdi + rsi], -1
0x17b58:	jne	0x17f4b


0x17d5a:	mov	rdi, qword ptr [rbp - 0x60]
0x17d5e:	call	0x2a10


0x17d3a:	mov	rax, r13
0x17d3d:	xor	edx, edx
0x17d3f:	nop	
0x17d40:	cmp	qword ptr [rax], 0
0x17d44:	js	0x17d4d


0x17bb0:	mov	rax, qword ptr [rsi]
0x17bb3:	add	rax, 1
0x17bb7:	shl	rax, 4
0x17bbb:	add	rax, r13
0x17bbe:	mov	rdx, qword ptr [rax + 8]
0x17bc2:	mov	rdi, qword ptr [rax]
0x17bc5:	mov	rcx, rdx
0x17bc8:	sub	rcx, rdi
0x17bcb:	cmp	qword ptr [rbp - 0x88], 0
0x17bd3:	je	0x17d88


0x17979:	mov	rcx, qword ptr [rbp - 0x78]
0x1797d:	mov	rdx, rcx
0x17980:	mov	rdi, r12
0x17983:	mov	qword ptr [rbp - 0xa0], rcx
0x1798a:	call	0x14570


0x17f4b:	mov	rdx, qword ptr [rbp - 0xb8]
0x17f52:	mov	rsi, rdi
0x17f55:	mov	rdi, r13
0x17f58:	mov	qword ptr [rbp - 0xd8], rcx
0x17f5f:	mov	qword ptr [rbp - 0xa0], r9
0x17f66:	call	0x2710


0x17d4d:	add	rdx, 1
0x17d51:	add	rax, 0x10
0x17d55:	cmp	rcx, rdx
0x17d58:	jne	0x17d40


0x17d46:	cmp	qword ptr [rax + 8], -1
0x17d4b:	je	0x17da0


0x17d88:	test	rcx, rcx
0x17d8b:	je	0x17e40


0x17bd9:	cmp	rdi, -1
0x17bdd:	je	0x17df6


0x17d40:	cmp	qword ptr [rax], 0
0x17d44:	js	0x17d4d


0x17da0:	mov	rdi, qword ptr [rbp - 0x88]
0x17da7:	mov	r9, qword ptr [rbp - 0xa8]
0x17dae:	mov	r8, r13
0x17db1:	mov	rcx, qword ptr [rbp - 0x98]
0x17db8:	mov	rdx, qword ptr [rbp - 0xb0]
0x17dbf:	lea	rsi, [rdi + 0x10]
0x17dc3:	call	0x15db0


0x17e40:	mov	rdi, qword ptr [rbp - 0xa8]
0x17e47:	mov	rsi, rbx
0x17e4a:	mov	qword ptr [rbp - 0xa0], r9
0x17e51:	call	0x11160


0x17d91:	mov	r15, qword ptr [rbp - 0x78]
0x17d95:	jmp	0x17c35


0x17df6:	mov	rdi, qword ptr [rbp - 0x88]
0x17dfd:	mov	rcx, qword ptr [rbp - 0x98]
0x17e04:	lea	rdx, [rbp - 0x78]
0x17e08:	mov	r9, qword ptr [rbp - 0xa8]
0x17e0f:	mov	r8, r13
0x17e12:	lea	rsi, [rdi + 0x10]
0x17e16:	call	0x15db0


0x17be3:	cmp	rdx, -1
0x17be7:	je	0x17df6


0x17c35:	mov	rax, qword ptr [r14 + 0x18]
0x17c39:	lea	rdx, [r15 + rcx]
0x17c3d:	mov	rbx, qword ptr [rax + rbx*8]
0x17c41:	jmp	0x179aa


0x17bed:	test	rcx, rcx
0x17bf0:	je	0x17e40


0x179aa:	cmp	qword ptr [rbp - 0x88], 0
0x179b2:	mov	qword ptr [rbp - 0x78], rdx
0x179b6:	je	0x179f4


0x17bf6:	mov	r15, qword ptr [rbp - 0x78]
0x17bfa:	mov	rdx, qword ptr [r12 + 0x30]
0x17bff:	mov	rax, qword ptr [r12 + 8]
0x17c04:	sub	rdx, r15
0x17c07:	cmp	rcx, rdx
0x17c0a:	jg	0x17df6


0x179f4:	mov	qword ptr [rbp - 0x68], 0
0x179fc:	test	rbx, rbx
0x179ff:	js	0x17dda


0x179b8:	cmp	rdx, qword ptr [r12 + 0xa8]
0x179c0:	jg	0x17df6


0x17c10:	lea	rsi, [rax + r15]
0x17c14:	add	rdi, rax
0x17c17:	mov	rdx, rcx
0x17c1a:	mov	qword ptr [rbp - 0xa0], rcx
0x17c21:	call	0x2680


0x17dda:	cmp	rbx, -2
0x17dde:	je	0x17f88


0x17a05:	mov	rcx, qword ptr [rbp - 0x78]
0x17a09:	mov	rax, qword ptr [r13 + 8]
0x17a0d:	cmp	rax, rcx
0x17a10:	jl	0x17f00


0x179c6:	mov	rax, qword ptr [r12 + 0xb8]
0x179ce:	mov	rax, qword ptr [rax + rdx*8]
0x179d2:	test	rax, rax
0x179d5:	je	0x17df6


0x17f88:	mov	rdi, qword ptr [rbp - 0x60]
0x17f8c:	call	0x2a10


0x179db:	mov	rdi, qword ptr [rax + 0x10]
0x179df:	lea	rsi, [rax + 0x18]
0x179e3:	mov	rdx, rbx
0x179e6:	call	0x126a0


0x180ac:	mov	rdi, qword ptr [rbp - 0x60]
0x180b0:	call	0x2a10


0x179eb:	test	rax, rax
0x179ee:	je	0x17df6


0x17c26:	test	eax, eax
0x17c28:	mov	rcx, qword ptr [rbp - 0xa0]
0x17c2f:	jne	0x17df6


0x1798f:	test	al, al
0x17991:	mov	rcx, qword ptr [rbp - 0xa0]
0x17998:	je	0x17de8


0x17de8:	cmp	qword ptr [rbp - 0x88], 0
0x17df0:	je	0x180ac


0x1799e:	mov	rax, qword ptr [r14 + 0x18]
0x179a2:	lea	rdx, [rcx + 1]
0x179a6:	mov	rbx, qword ptr [rax + r15*8]
0x179aa:	cmp	qword ptr [rbp - 0x88], 0
0x179b2:	mov	qword ptr [rbp - 0x78], rdx
0x179b6:	je	0x179f4


0x17b8d:	movsxd	rcx, eax
0x17b90:	test	rcx, rcx
0x17b93:	jne	0x17d91


0x17b99:	mov	r9, qword ptr [rbp - 0xa0]
0x17ba0:	mov	rsi, qword ptr [r14]
0x17ba3:	mov	rcx, qword ptr [rbp - 0x78]
0x17ba7:	add	rsi, r9
0x17baa:	jmp	0x1797d


0x1797d:	mov	rdx, rcx
0x17980:	mov	rdi, r12
0x17983:	mov	qword ptr [rbp - 0xa0], rcx
0x1798a:	call	0x14570


0x17e56:	test	al, al
0x17e58:	je	0x17f88


0x17e5e:	mov	rdx, qword ptr [r14 + 0x28]
0x17e62:	lea	rax, [rbx + rbx*2]
0x17e66:	mov	rcx, qword ptr [rbp - 0x78]
0x17e6a:	lea	rax, [rdx + rax*8]
0x17e6e:	mov	qword ptr [rbp - 0xd8], rcx
0x17e75:	mov	rax, qword ptr [rax + 0x10]
0x17e79:	mov	rbx, qword ptr [rax]
0x17e7c:	mov	rax, qword ptr [r12 + 0xb8]
0x17e84:	mov	rax, qword ptr [rax + rcx*8]
0x17e88:	mov	rdx, rbx
0x17e8b:	mov	rdi, qword ptr [rax + 0x10]
0x17e8f:	lea	rsi, [rax + 0x18]
0x17e93:	call	0x126a0


0x17e98:	test	rax, rax
0x17e9b:	jne	0x179fc


0x17ea1:	mov	r9, qword ptr [rbp - 0xa0]
0x17ea8:	mov	rsi, qword ptr [r14]
0x17eab:	mov	rcx, qword ptr [rbp - 0xd8]
0x17eb2:	add	rsi, r9
0x17eb5:	jmp	0x1797d


0x179fc:	test	rbx, rbx
0x179ff:	js	0x17dda


0x17aa2:	test	al, al
0x17aa4:	mov	r9, qword ptr [rbp - 0xa0]
0x17aab:	je	0x17f88


0x17ab1:	mov	r10, qword ptr [r15 + 8]
0x17ab5:	test	r10, r10
0x17ab8:	jle	0x17de8


0x17abe:	mov	r15, qword ptr [r15 + 0x10]
0x17ac2:	mov	r11, qword ptr [r9 + 0x10]
0x17ac6:	lea	r14, [r9 + 0x18]
0x17aca:	mov	rbx, -1
0x17ad1:	xor	r9d, r9d
0x17ad4:	mov	qword ptr [rbp - 0xa0], r12
0x17adb:	nop	dword ptr [rax + rax]
0x17ae0:	mov	r12, qword ptr [r15 + r9*8]
0x17ae4:	mov	rsi, r14
0x17ae7:	mov	rdi, r11
0x17aea:	mov	rdx, r12
0x17aed:	call	0x126a0


0x17af2:	test	rax, rax
0x17af5:	je	0x17b04


0x17b04:	add	r9, 1
0x17b08:	cmp	r10, r9
0x17b0b:	jne	0x17ae0


0x17af7:	cmp	rbx, -1
0x17afb:	jne	0x17c50


0x17b0d:	mov	r12, qword ptr [rbp - 0xa0]
0x17b14:	jmp	0x179fc


0x17ae0:	mov	r12, qword ptr [r15 + r9*8]
0x17ae4:	mov	rsi, r14
0x17ae7:	mov	rdi, r11
0x17aea:	mov	rdx, r12
0x17aed:	call	0x126a0


0x17b01:	mov	rbx, r12
0x17b04:	add	r9, 1
0x17b08:	cmp	r10, r9
0x17b0b:	jne	0x17ae0


0x17c50:	mov	rsi, qword ptr [rbp - 0xc8]
0x17c57:	mov	rdi, qword ptr [rbp - 0x68]
0x17c5b:	mov	rdx, rbx
0x17c5e:	mov	r14, r12
0x17c61:	mov	r12, qword ptr [rbp - 0xa0]
0x17c68:	call	0x126a0


0x17c6d:	test	rax, rax
0x17c70:	jne	0x17e30


0x17c76:	mov	rcx, qword ptr [rbp - 0x88]
0x17c7d:	test	rcx, rcx
0x17c80:	je	0x179fc


0x17e30:	mov	rbx, r14
0x17e33:	jmp	0x179fc


0x17c86:	mov	r15, qword ptr [rcx]
0x17c89:	mov	rdx, qword ptr [rbp - 0x78]
0x17c8d:	lea	rax, [r15 + 1]
0x17c91:	cmp	rax, qword ptr [rcx + 8]
0x17c95:	mov	qword ptr [rcx], rax
0x17c98:	je	0x1801d


0x1801d:	lea	rsi, [rax + rax*2]
0x18021:	mov	rax, qword ptr [rbp - 0x88]
0x18028:	mov	qword ptr [rbp - 0xa0], rdx
0x1802f:	shl	rsi, 5
0x18033:	mov	rdi, qword ptr [rax + 0x10]
0x18037:	call	0x2830


0x17c9e:	mov	rax, qword ptr [rcx + 0x10]
0x17ca2:	lea	r15, [r15 + r15*2]
0x17ca6:	shl	r15, 4
0x17caa:	add	r15, rax
0x17cad:	mov	qword ptr [r15 + 8], r14
0x17cb1:	mov	r14, qword ptr [rbp - 0xb8]
0x17cb8:	mov	qword ptr [r15], rdx
0x17cbb:	mov	rdi, r14
0x17cbe:	call	0x2780


0x17f6b:	mov	rax, qword ptr [r13 + 8]
0x17f6f:	mov	r9, qword ptr [rbp - 0xa0]
0x17f76:	mov	rcx, qword ptr [rbp - 0xd8]
0x17f7d:	jmp	0x17939


0x17ee8:	mov	rax, qword ptr [r13 + 8]
0x17eec:	mov	rcx, qword ptr [rbp - 0xa0]
0x17ef3:	mov	r9, qword ptr [rbp - 0xd8]
0x17efa:	jmp	0x17939


0x9f0c:	mov	rdx, qword ptr [rbx + 8]
0x9f10:	mov	qword ptr [rbp], rax
0x9f14:	jmp	0x9edf


0x9edf:	movzx	eax, byte ptr [rbx + 0x10]
0x9ee3:	mov	qword ptr [rbp + 8], rdx
0x9ee7:	test	al, al
0x9ee9:	mov	byte ptr [rbp + 0x10], al
0x9eec:	je	0x9ef4


0x15df0:	mov	rdi, qword ptr [rbp + 0x10]
0x15df4:	call	0x2a10


0x1803c:	test	rax, rax
0x1803f:	je	0x18085


0x18085:	mov	rdi, qword ptr [rbp - 0x60]
0x18089:	call	0x2a10


0x18041:	mov	rcx, qword ptr [rbp - 0x88]
0x18048:	mov	rdx, qword ptr [rbp - 0xa0]
0x1804f:	shl	qword ptr [rcx + 8], 1
0x18053:	mov	qword ptr [rcx + 0x10], rax
0x18057:	jmp	0x17ca2


0x17ca2:	lea	r15, [r15 + r15*2]
0x17ca6:	shl	r15, 4
0x17caa:	add	r15, rax
0x17cad:	mov	qword ptr [r15 + 8], r14
0x17cb1:	mov	r14, qword ptr [rbp - 0xb8]
0x17cb8:	mov	qword ptr [r15], rdx
0x17cbb:	mov	rdi, r14
0x17cbe:	call	0x2780


0x18222:	test	rax, rax
0x18225:	mov	rcx, qword ptr [rsp + 8]
0x1822a:	je	0x18280


0x18280:	mov	rdi, qword ptr [rbx + 0xd8]
0x18287:	call	0x2a10


0x1822c:	mov	rsi, qword ptr [rbx + 0xc8]
0x18233:	mov	rdx, qword ptr [rbx + 0xd0]
0x1823a:	mov	qword ptr [rbx + 0xd8], rax
0x18241:	mov	qword ptr [rsp + 8], rcx
0x18246:	lea	rsi, [rsi + rsi*4]
0x1824a:	lea	rdx, [rdx + rdx*4]
0x1824e:	lea	rdi, [rax + rsi*8]
0x18252:	shl	rdx, 3
0x18256:	xor	esi, esi
0x18258:	call	0x2620


0x1825d:	shl	qword ptr [rbx + 0xd0], 1
0x18264:	mov	rax, qword ptr [rbx + 0xc8]
0x1826b:	mov	rdi, qword ptr [rbx + 0xd8]
0x18272:	mov	rsi, qword ptr [rbp + 8]
0x18276:	mov	rcx, qword ptr [rsp + 8]
0x1827b:	jmp	0x18179


0x18b44:	test	rax, rax
0x18b47:	je	0x18a09


0x18a09:	mov	eax, 0xc
0x18a0e:	jmp	0x18618


0x18b4d:	mov	rdx, qword ptr [rsp + 0x10]
0x18b52:	mov	qword ptr [r12 + 0x28], rax
0x18b57:	mov	qword ptr [r12 + 0x18], rdx
0x18b5c:	jmp	0x18954


0x11c44:	test	rax, rax
0x11c47:	je	0x11d08


0x11c4d:	mov	qword ptr [rbx + 0xb8], rax
0x11c54:	cmp	byte ptr [rbx + 0x88], 0
0x11c5b:	mov	eax, dword ptr [rbx + 0x90]
0x11c61:	je	0x11c80


0x14445:	test	rax, rax
0x14448:	mov	r9, rax
0x1444b:	mov	rcx, qword ptr [rsp + 8]
0x14450:	je	0x14421


0x14421:	mov	eax, 0xc
0x14426:	jmp	0x14412


0x14452:	mov	qword ptr [r15 + 0xf8], rax
0x14459:	mov	rax, qword ptr [rsp + 0x10]
0x1445e:	mov	r8, qword ptr [r15 + 0xe8]
0x14465:	mov	qword ptr [r15 + 0xf0], rax
0x1446c:	jmp	0x143b3


0x14412:	add	rsp, 0x28
0x14416:	pop	rbx
0x14417:	pop	rbp
0x14418:	pop	r12
0x1441a:	pop	r13
0x1441c:	pop	r14
0x1441e:	pop	r15
0x14420:	ret	


0x11273:	test	rax, rax
0x11276:	je	0x11285


0x11285:	xor	eax, eax
0x11287:	jmp	0x1118e


0x11278:	mov	qword ptr [rbx + 0x10], rax
0x1127c:	mov	rsi, qword ptr [rbx + 8]
0x11280:	jmp	0x111d9


0x12d4f:	test	rax, rax
0x12d52:	je	0x12d94


0x12d94:	mov	eax, 0xc
0x12d99:	jmp	0x12cac


0x12d54:	mov	qword ptr [rbx + 0x10], rax
0x12d58:	mov	qword ptr [rbx], rbp
0x12d5b:	mov	rax, qword ptr [rbx + 8]
0x12d5f:	mov	rdx, qword ptr [r12 + 8]
0x12d64:	jmp	0x12bf4


0x13330:	test	rax, rax
0x13333:	mov	rdi, rax
0x13336:	je	0x13351


0x13351:	mov	eax, 0xc
0x13356:	jmp	0x1330c


0x13338:	mov	qword ptr [rbx + 0x10], rax
0x1333c:	mov	qword ptr [rbx], r13
0x1333f:	mov	rcx, qword ptr [rbx + 8]
0x13343:	mov	r9, qword ptr [rbp + 8]
0x13347:	mov	r11, qword ptr [r12 + 8]
0x1334c:	jmp	0x131fb


0x1330c:	add	rsp, 8
0x13310:	pop	rbx
0x13311:	pop	rbp
0x13312:	pop	r12
0x13314:	pop	r13
0x13316:	ret	


0x17786:	test	rax, rax
0x17789:	je	0x177cb


0x1778b:	mov	rcx, qword ptr [rsp + 0x60]
0x17790:	lea	rdx, [r12*8]
0x17798:	lea	rdi, [rax + r13*8]
0x1779c:	xor	esi, esi
0x1779e:	mov	qword ptr [rcx + 0x10], rax
0x177a2:	mov	qword ptr [rcx + 8], r14
0x177a6:	call	0x2620


0x177ab:	jmp	0x1712c


0xe055:	test	rax, rax
0xe058:	mov	rdi, rax
0xe05b:	je	0xe0e0


0xe0e0:	mov	rdi, qword ptr [rbp + 0x10]
0xe0e4:	call	0x2a10


0xe061:	mov	qword ptr [rbp + 0x10], rax
0xe065:	test	rbx, rbx
0xe068:	je	0xe081


0x11085:	test	rax, rax
0x11088:	je	0x110e0


0x1108a:	mov	rdi, qword ptr [rbx + 0x18]
0x1108e:	mov	qword ptr [rbx + 0x10], rax
0x11092:	test	rdi, rdi
0x11095:	je	0x110ad


0x11097:	lea	rsi, [rbp*8]
0x1109f:	call	0x2830


0x110a4:	test	rax, rax
0x110a7:	je	0x110e0


0x110a9:	mov	qword ptr [rbx + 0x18], rax
0x110ad:	cmp	byte ptr [rbx + 0x8b], 0
0x110b4:	jne	0x110c8


0x110d4:	test	rax, rax
0x110d7:	je	0x110e0


0x110d9:	mov	qword ptr [rbx + 8], rax
0x110dd:	jmp	0x110b6


0x11f3c:	test	rax, rax
0x11f3f:	je	0x12002


0x11f45:	mov	r15, rbp
0x11f48:	mov	rdi, qword ptr [rbx + 0x18]
0x11f4c:	mov	qword ptr [rbx], rax
0x11f4f:	shl	r15, 4
0x11f53:	mov	rsi, r15
0x11f56:	call	0x2830


0x11f5b:	mov	rdi, qword ptr [rbx + 0x20]
0x11f5f:	mov	rsi, r15
0x11f62:	lea	r15, [r13 + rbp*4]
0x11f67:	mov	r12, rax
0x11f6a:	shl	r15, 3
0x11f6e:	call	0x2830


0x11f73:	mov	rdi, qword ptr [rbx + 0x28]
0x11f77:	mov	rsi, r15
0x11f7a:	mov	qword ptr [rsp], rax
0x11f7e:	call	0x2830


0x11f83:	mov	rdi, qword ptr [rbx + 0x30]
0x11f87:	mov	rsi, r15
0x11f8a:	mov	rbp, rax
0x11f8d:	call	0x2830


0x11f92:	test	r12, r12
0x11f95:	mov	rcx, qword ptr [rsp]
0x11f99:	je	0x11fd0


0x11fd0:	mov	rdi, r12
0x11fd3:	mov	qword ptr [rsp + 8], rax
0x11fd8:	mov	qword ptr [rsp], rcx
0x11fdc:	call	0x2a10


0x11f9b:	test	rcx, rcx
0x11f9e:	je	0x11fd0


0x11fa0:	test	rbp, rbp
0x11fa3:	je	0x11fd0


0x11fa5:	test	rax, rax
0x11fa8:	mov	rdx, qword ptr [rsp + 8]
0x11fad:	je	0x11fd0


0x11faf:	mov	qword ptr [rbx + 0x18], r12
0x11fb3:	mov	qword ptr [rbx + 0x20], rcx
0x11fb7:	mov	qword ptr [rbx + 0x28], rbp
0x11fbb:	mov	qword ptr [rbx + 0x30], rax
0x11fbf:	mov	qword ptr [rbx + 8], r13
0x11fc3:	mov	rsi, qword ptr [rbx + 0x10]
0x11fc7:	jmp	0x11e6d


0x11e6d:	mov	rax, rsi
0x11e70:	mov	ecx, edx
0x11e72:	shl	rax, 4
0x11e76:	add	rax, qword ptr [rbx]
0x11e79:	and	ecx, 0xfffc00ff
0x11e7f:	mov	qword ptr [rax + 8], rdx
0x11e83:	mov	dword ptr [rax + 8], ecx
0x11e86:	xor	ecx, ecx
0x11e88:	cmp	dl, 6
0x11e8b:	mov	qword ptr [rax], r14
0x11e8e:	sete	cl
0x11e91:	cmp	dl, 5
0x11e94:	jne	0x11ea2


0x16027:	test	rax, rax
0x1602a:	je	0x16348


0x16348:	mov	eax, 0xc
0x1634d:	jmp	0x15f86


0x16030:	mov	rdx, qword ptr [rsp]
0x16034:	mov	r8, qword ptr [rsp + 8]
0x16039:	mov	qword ptr [rdx], rax
0x1603c:	mov	qword ptr [r8], r14
0x1603f:	mov	rcx, qword ptr [r13]
0x16043:	jmp	0x15ef8


0x15f86:	add	rsp, 0x10
0x15f8a:	pop	rbx
0x15f8b:	pop	rbp
0x15f8c:	pop	r12
0x15f8e:	pop	r13
0x15f90:	pop	r14
0x15f92:	ret	


0xca56:	test	rax, rax
0xca59:	jne	0xca60


0xca5b:	test	rbx, rbx
0xca5e:	jne	0xca71


0xca60:	pop	rbx
0xca61:	ret	


0xca71:	call	0xcc30


0xe4d2:	test	rax, rax
0xe4d5:	je	0xe508


0xe508:	mov	rdi, qword ptr [rbx]
0xe50b:	call	0x2a10


0xe4d7:	mov	qword ptr [rbx], rax
0xe4da:	mov	eax, 1
0xe4df:	pop	rbx
0xe4e0:	ret	


0x1113f:	test	rax, rax
0x11142:	je	0x11150


0x11150:	xor	eax, eax
0x11152:	jmp	0x1111a


0x11144:	mov	qword ptr [rbx + 0x10], rax
0x11148:	mov	rsi, qword ptr [rbx + 8]
0x1114c:	jmp	0x11109


0x1111a:	add	rsp, 8
0x1111e:	pop	rbx
0x1111f:	pop	rbp
0x11120:	ret	


0x1e0c3:	test	rax, rax
0x1e0c6:	mov	rbx, rax
0x1e0c9:	je	0x1e261


0x1e261:	mov	eax, 0xc
0x1e266:	jmp	0x1d5ec


0x1e0cf:	mov	rax, qword ptr [rsp + 8]
0x1e0d4:	mov	qword ptr [rax + 8], 0xe8
0x1e0dc:	mov	qword ptr [rax], rbx
0x1e0df:	jmp	0x1d2c2


0x1d5ec:	mov	rbx, qword ptr [rsp + 0x118]
0x1d5f4:	xor	rbx, qword ptr fs:[0x28]
0x1d5fd:	jne	0x1e340


0x1d603:	add	rsp, 0x128
0x1d60a:	pop	rbx
0x1d60b:	pop	rbp
0x1d60c:	pop	r12
0x1d60e:	pop	r13
0x1d610:	pop	r14
0x1d612:	pop	r15
0x1d614:	ret	


0x1e340:	call	0x2560


0x1f2f8:	jmp	0x1f24e


0x1f24e:	mov	rcx, qword ptr [rsp + 0x48]
0x1f253:	xor	rcx, qword ptr fs:[0x28]
0x1f25c:	jne	0x1f30c


0x1f262:	add	rsp, 0x50
0x1f266:	pop	rbx
0x1f267:	pop	rbp
0x1f268:	pop	r12
0x1f26a:	ret	


0x1f30c:	call	0x2560


0x1f627:	mov	edi, eax
0x1f629:	call	0x1f6f0


0x1f62e:	mov	rsi, qword ptr [rsp + 0x18]
0x1f633:	xor	rsi, qword ptr fs:[0x28]
0x1f63c:	jne	0x1f669


0x1f63e:	add	rsp, 0x58
0x1f642:	ret	


0x1f669:	call	0x2560


0x1f875:	mov	ebx, eax
0x1f877:	jmp	0x1f810


0x1f810:	mov	rcx, qword ptr [rsp + 0x18]
0x1f815:	xor	rcx, qword ptr fs:[0x28]
0x1f81e:	mov	eax, ebx
0x1f820:	jne	0x1f97d


0x1f826:	add	rsp, 0x50
0x1f82a:	pop	rbx
0x1f82b:	pop	rbp
0x1f82c:	pop	r12
0x1f82e:	ret	


0x1f97d:	call	0x2560


0x1f809:	mov	ebx, eax
0x1f80b:	nop	dword ptr [rax + rax]
0x1f810:	mov	rcx, qword ptr [rsp + 0x18]
0x1f815:	xor	rcx, qword ptr fs:[0x28]
0x1f81e:	mov	eax, ebx
0x1f820:	jne	0x1f97d


0x1f8cc:	mov	ebx, eax
0x1f8ce:	jmp	0x1f810


0x1f7b5:	test	eax, eax
0x1f7b7:	mov	ebx, eax
0x1f7b9:	js	0x1f948


0x1f948:	call	0x2410


0x1f7bf:	mov	dword ptr [rip + 0x208b2f], 1
0x1f7c9:	jmp	0x1f810


0x1f8dc:	test	eax, eax
0x1f8de:	mov	ebx, eax
0x1f8e0:	js	0x1f810


0x1f8e6:	cmp	dword ptr [rip + 0x208a0b], -1
0x1f8ed:	jne	0x1f810


0x1f8f3:	xor	eax, eax
0x1f8f5:	mov	esi, 1
0x1f8fa:	mov	edi, ebx
0x1f8fc:	call	0x24a0


0x1f901:	test	eax, eax
0x1f903:	js	0x1f921


0x1f921:	call	0x2410


0x1f905:	or	eax, 1
0x1f908:	mov	esi, 2
0x1f90d:	mov	edi, ebx
0x1f90f:	mov	edx, eax
0x1f911:	xor	eax, eax
0x1f913:	call	0x24a0


0x1f918:	cmp	eax, -1
0x1f91b:	jne	0x1f810


0x1f993:	mov	ebx, eax
0x1f995:	jmp	0x1f810


0x2aaf:	lea	rsi, [rip + 0x1f52b]
0x2ab6:	mov	edi, 6
0x2abb:	call	0x2840


0x1646d:	test	eax, eax
0x1646f:	jne	0x164ea


0x16471:	call	0x29f0


0x164ea:	lea	rsi, [rip + 0xc352]
0x164f1:	mov	rdi, r12
0x164f4:	call	0x26d0


0x16476:	xor	ecx, ecx
0x16478:	test	rbp, rbp
0x1647b:	mov	rsi, qword ptr [rax]
0x1647e:	mov	edx, 1
0x16483:	jne	0x164af


0x16485:	cmp	word ptr [rsi + rcx*2], 0
0x1648a:	jns	0x1649d


0x164af:	xor	eax, eax
0x164b1:	mov	edi, 1
0x164b6:	cmp	word ptr [rsi + rax*2], 0
0x164bb:	jns	0x164d9


0x1648c:	mov	rax, rcx
0x1648f:	mov	rdi, rdx
0x16492:	sar	rax, 6
0x16496:	shl	rdi, cl
0x16499:	or	qword ptr [rbx + rax*8], rdi
0x1649d:	add	rcx, 1
0x164a1:	cmp	rcx, 0x100
0x164a8:	jne	0x16485


0x1649d:	add	rcx, 1
0x164a1:	cmp	rcx, 0x100
0x164a8:	jne	0x16485


0x164bd:	movzx	ecx, byte ptr [rbp + rax]
0x164c2:	mov	r9, rdi
0x164c5:	mov	rdx, rcx
0x164c8:	and	ecx, 0x3f
0x164cb:	shr	rdx, 3
0x164cf:	shl	r9, cl
0x164d2:	and	edx, 0x18
0x164d5:	or	qword ptr [rbx + rdx], r9
0x164d9:	add	rax, 1
0x164dd:	cmp	rax, 0x100
0x164e3:	jne	0x164b6


0x164d9:	add	rax, 1
0x164dd:	cmp	rax, 0x100
0x164e3:	jne	0x164b6


0x164aa:	jmp	0x15f84


0x164e5:	jmp	0x15f84


0x164b6:	cmp	word ptr [rsi + rax*2], 0
0x164bb:	jns	0x164d9


0x164f9:	test	eax, eax
0x164fb:	jne	0x16574


0x164fd:	call	0x29f0


0x16574:	lea	rsi, [rip + 0xc2ce]
0x1657b:	mov	rdi, r12
0x1657e:	call	0x26d0


0x16502:	xor	ecx, ecx
0x16504:	test	rbp, rbp
0x16507:	mov	rsi, qword ptr [rax]
0x1650a:	mov	edx, 1
0x1650f:	jne	0x1653a


0x16511:	test	byte ptr [rsi + rcx*2], 4
0x16515:	je	0x16528


0x1653a:	xor	eax, eax
0x1653c:	mov	edi, 1
0x16541:	test	byte ptr [rsi + rax*2], 4
0x16545:	je	0x16563


0x16528:	add	rcx, 1
0x1652c:	cmp	rcx, 0x100
0x16533:	jne	0x16511


0x16517:	mov	rax, rcx
0x1651a:	mov	rdi, rdx
0x1651d:	sar	rax, 6
0x16521:	shl	rdi, cl
0x16524:	or	qword ptr [rbx + rax*8], rdi
0x16528:	add	rcx, 1
0x1652c:	cmp	rcx, 0x100
0x16533:	jne	0x16511


0x16563:	add	rax, 1
0x16567:	cmp	rax, 0x100
0x1656d:	jne	0x16541


0x16547:	movzx	ecx, byte ptr [rbp + rax]
0x1654c:	mov	r14, rdi
0x1654f:	mov	rdx, rcx
0x16552:	and	ecx, 0x3f
0x16555:	shr	rdx, 3
0x16559:	shl	r14, cl
0x1655c:	and	edx, 0x18
0x1655f:	or	qword ptr [rbx + rdx], r14
0x16563:	add	rax, 1
0x16567:	cmp	rax, 0x100
0x1656d:	jne	0x16541


0x16535:	jmp	0x15f84


0x1656f:	jmp	0x15f84


0x16541:	test	byte ptr [rsi + rax*2], 4
0x16545:	je	0x16563


0x16583:	test	eax, eax
0x16585:	jne	0x16600


0x16587:	call	0x29f0


0x16600:	mov	eax, 4
0x16605:	jmp	0x15f86


0x1658c:	xor	ecx, ecx
0x1658e:	test	rbp, rbp
0x16591:	mov	rsi, qword ptr [rax]
0x16594:	mov	edx, 1
0x16599:	jne	0x165c5


0x1659b:	test	byte ptr [rsi + rcx*2 + 1], 0x10
0x165a0:	je	0x165b3


0x165c5:	xor	eax, eax
0x165c7:	mov	edi, 1
0x165cc:	test	byte ptr [rsi + rax*2 + 1], 0x10
0x165d1:	je	0x165ef


0x165b3:	add	rcx, 1
0x165b7:	cmp	rcx, 0x100
0x165be:	jne	0x1659b


0x165a2:	mov	rax, rcx
0x165a5:	mov	rdi, rdx
0x165a8:	sar	rax, 6
0x165ac:	shl	rdi, cl
0x165af:	or	qword ptr [rbx + rax*8], rdi
0x165b3:	add	rcx, 1
0x165b7:	cmp	rcx, 0x100
0x165be:	jne	0x1659b


0x165ef:	add	rax, 1
0x165f3:	cmp	rax, 0x100
0x165f9:	jne	0x165cc


0x165d3:	movzx	ecx, byte ptr [rbp + rax]
0x165d8:	mov	r9, rdi
0x165db:	mov	rdx, rcx
0x165de:	and	ecx, 0x3f
0x165e1:	shr	rdx, 3
0x165e5:	shl	r9, cl
0x165e8:	and	edx, 0x18
0x165eb:	or	qword ptr [rbx + rdx], r9
0x165ef:	add	rax, 1
0x165f3:	cmp	rax, 0x100
0x165f9:	jne	0x165cc


0x165c0:	jmp	0x15f84


0x165fb:	jmp	0x15f84


0x165cc:	test	byte ptr [rsi + rax*2 + 1], 0x10
0x165d1:	je	0x165ef


0x1ef3b:	test	eax, eax
0x1ef3d:	je	0x1ef97


0x1ef97:	mov	qword ptr [r13 + 0x30], rbx
0x1ef9b:	mov	eax, 1
0x1efa0:	add	rsp, 8
0x1efa4:	pop	rbx
0x1efa5:	pop	rbp
0x1efa6:	pop	r12
0x1efa8:	pop	r13
0x1efaa:	pop	r14
0x1efac:	pop	r15
0x1efae:	ret	


0x1ef3f:	cmp	byte ptr [rbx], 0
0x1ef42:	jne	0x1ef56


0x1ef44:	lea	r14, [r12 + 9]
0x1ef49:	cmp	r14, rbx
0x1ef4c:	jne	0x1efb0


0x1ef56:	mov	rdi, rbx
0x1ef59:	call	0x2530


0x1ef4e:	cmp	byte ptr [r12 + 8], 0
0x1ef54:	je	0x1efb0


0x1efb0:	mov	rdi, rbp
0x1efb3:	call	0x2530


0x4fc9:	test	eax, eax
0x4fcb:	sete	al
0x4fce:	add	rsp, 8
0x4fd2:	ret	


0x1f468:	mov	edi, eax
0x1f46a:	call	0x1f6f0


0x1f46f:	mov	rcx, qword ptr [rsp + 0x18]
0x1f474:	xor	rcx, qword ptr fs:[0x28]
0x1f47d:	jne	0x1f4a9


0x1f47f:	add	rsp, 0x58
0x1f483:	ret	


0x1f4a9:	call	0x2560


0x7b0d:	cmp	ebp, eax
0x7b0f:	je	0x7b29


0x7b29:	add	rsp, 8
0x7b2d:	mov	eax, ebx
0x7b2f:	pop	rbx
0x7b30:	pop	rbp
0x7b31:	ret	


0x7b11:	xor	ebx, ebx
0x7b13:	test	eax, eax
0x7b15:	js	0x7b29


0x7b17:	mov	edi, eax
0x7b19:	call	0x2640


0x7b1e:	call	0x2410


0x90fe:	mov	r14, qword ptr [rax]
0x9101:	mov	r13, rax
0x9104:	mov	rdi, r14
0x9107:	call	0x2530


0x9e98:	test	eax, eax
0x9e9a:	js	0x9ea0


0x9ea0:	mov	edi, ebx
0x9ea2:	call	0x2480


0x9e9c:	pop	rbx
0x9e9d:	ret	


0x2480:	jmp	qword ptr [rip + 0x22587a]




0x51bc:	mov	r15, qword ptr [rsp + 0x20]
0x51c1:	mov	rsi, rax
0x51c4:	mov	rdi, r15
0x51c7:	call	0xc380


0x9f78:	cmp	rax, 1
0x9f7c:	ja	0xa018


0x9f82:	call	0x29f0


0xa018:	mov	qword ptr [rsp + 0x50], r12
0xa01d:	mov	r12, rsp
0xa020:	mov	qword ptr [rsp + 0x10], rbp
0xa025:	mov	byte ptr [rsp], 0
0xa029:	mov	qword ptr [rsp + 4], 0
0xa032:	lea	r13, [rip + 0x17a07]
0xa039:	mov	byte ptr [rsp + 0xc], 0
0xa03e:	mov	byte ptr [rsp + 0x40], 0
0xa043:	lea	r14, [r12 + 4]
0xa048:	mov	qword ptr [rsp + 0x44], 0
0xa051:	mov	byte ptr [rsp + 0x4c], 0
0xa056:	lea	rbp, [rsp + 0x40]
0xa05b:	jmp	0xa0f9


0xa0f9:	cmp	byte ptr [rsp], 0
0xa0fd:	jne	0xa1a4


0xa103:	mov	rcx, qword ptr [rsp + 0x10]
0xa108:	movzx	edx, byte ptr [rcx]
0xa10b:	mov	eax, edx
0xa10d:	shr	al, 5
0xa110:	and	eax, 7
0xa113:	mov	eax, dword ptr [r13 + rax*4]
0xa118:	bt	eax, edx
0xa11b:	jae	0xa190


0xa1a4:	call	0x2520


0xa11d:	mov	qword ptr [rsp + 0x18], 1
0xa126:	movsx	eax, byte ptr [rcx]
0xa129:	mov	byte ptr [rsp + 0x20], 1
0xa12e:	mov	byte ptr [rsp + 0xc], 1
0xa133:	mov	dword ptr [rsp + 0x24], eax
0xa137:	mov	r9d, dword ptr [rsp + 0x24]
0xa13c:	test	r9d, r9d
0xa13f:	je	0xa3e8


0xa190:	mov	rdi, r14
0xa193:	call	0x2990


0xa3e8:	cmp	byte ptr [rsp + 0xc], 0
0xa3ed:	jne	0xa445


0xa145:	cmp	byte ptr [rsp + 0x4c], 0
0xa14a:	je	0xa060


0xa3ef:	cmp	byte ptr [rsp], 0
0xa3f3:	mov	rbx, rsp
0xa3f6:	jne	0xa4d8


0xa445:	cmp	byte ptr [rsp + 0x4c], 0
0xa44a:	jne	0xa3ca


0xa060:	cmp	byte ptr [rsp + 0x40], 0
0xa065:	jne	0xa256


0xa150:	cmp	byte ptr [rsp + 0x60], 0
0xa155:	jne	0xa0a3


0xa3fc:	mov	rcx, qword ptr [rsp + 0x10]
0xa401:	lea	rsi, [rip + 0x17638]
0xa408:	movzx	edx, byte ptr [rcx]
0xa40b:	mov	eax, edx
0xa40d:	shr	al, 5
0xa410:	and	eax, 7
0xa413:	mov	eax, dword ptr [rsi + rax*4]
0xa416:	bt	eax, edx
0xa419:	jae	0xa4c0


0xa4d8:	call	0x2520


0xa450:	cmp	byte ptr [rsp + 0x40], 0
0xa455:	lea	rbx, [rsp + 0x40]
0xa45a:	jne	0xa598


0xa3ca:	cmp	byte ptr [rsp + 0x60], 0
0xa3cf:	jne	0xa493


0xa06b:	mov	rcx, qword ptr [rsp + 0x50]
0xa070:	movzx	edx, byte ptr [rcx]
0xa073:	mov	eax, edx
0xa075:	shr	al, 5
0xa078:	and	eax, 7
0xa07b:	mov	eax, dword ptr [r13 + rax*4]
0xa080:	bt	eax, edx
0xa083:	jae	0xa240


0xa256:	call	0x2520


0xa15b:	cmp	byte ptr [rsp + 0x20], 0
0xa160:	jne	0xa3d8


0xa0a3:	mov	r15d, dword ptr [rsp + 0x64]
0xa0a8:	test	r15d, r15d
0xa0ab:	je	0xa3b0


0xa41f:	mov	qword ptr [rsp + 0x18], 1
0xa428:	movsx	eax, byte ptr [rcx]
0xa42b:	mov	byte ptr [rsp + 0x20], 1
0xa430:	mov	byte ptr [rsp + 0xc], 1
0xa435:	mov	dword ptr [rsp + 0x24], eax
0xa439:	mov	esi, dword ptr [rsp + 0x24]
0xa43d:	test	esi, esi
0xa43f:	jne	0xa3c0


0xa4c0:	mov	rbx, rsp
0xa4c3:	lea	rdi, [rbx + 4]
0xa4c7:	call	0x2990


0xa460:	mov	rcx, qword ptr [rsp + 0x50]
0xa465:	lea	rsi, [rip + 0x175d4]
0xa46c:	movzx	edx, byte ptr [rcx]
0xa46f:	mov	eax, edx
0xa471:	shr	al, 5
0xa474:	and	eax, 7
0xa477:	mov	eax, dword ptr [rsi + rax*4]
0xa47a:	bt	eax, edx
0xa47d:	jae	0xa580


0xa598:	call	0x2520


0xa493:	mov	edx, dword ptr [rsp + 0x64]
0xa497:	xor	eax, eax
0xa499:	test	edx, edx
0xa49b:	setne	al
0xa49e:	neg	eax
0xa4a0:	jmp	0x9fe8


0xa089:	mov	qword ptr [rsp + 0x58], 1
0xa092:	movsx	eax, byte ptr [rcx]
0xa095:	mov	byte ptr [rsp + 0x60], 1
0xa09a:	mov	byte ptr [rsp + 0x4c], 1
0xa09f:	mov	dword ptr [rsp + 0x64], eax
0xa0a3:	mov	r15d, dword ptr [rsp + 0x64]
0xa0a8:	test	r15d, r15d
0xa0ab:	je	0xa3b0


0xa240:	lea	rdi, [rbp + 4]
0xa244:	call	0x2990


0xa166:	mov	rdx, qword ptr [rsp + 0x18]
0xa16b:	mov	rax, qword ptr [rsp + 0x58]
0xa170:	mov	rdi, qword ptr [rsp + 0x10]
0xa175:	mov	rsi, qword ptr [rsp + 0x50]
0xa17a:	cmp	rdx, rax
0xa17d:	jne	0xa4a8


0xa3d8:	mov	eax, 0xffffffff
0xa3dd:	jmp	0x9fe8


0xa3b0:	cmp	byte ptr [rsp + 0xc], 0
0xa3b5:	je	0xa3ef


0xa0b1:	cmp	byte ptr [rsp + 0x20], 0
0xa0b6:	je	0xa3c0


0xa3c0:	mov	eax, 1
0xa3c5:	jmp	0x9fe8


0xa483:	mov	qword ptr [rsp + 0x58], 1
0xa48c:	movsx	eax, byte ptr [rcx]
0xa48f:	mov	dword ptr [rsp + 0x64], eax
0xa493:	mov	edx, dword ptr [rsp + 0x64]
0xa497:	xor	eax, eax
0xa499:	test	edx, edx
0xa49b:	setne	al
0xa49e:	neg	eax
0xa4a0:	jmp	0x9fe8


0xa580:	lea	rdi, [rsp + 0x44]
0xa585:	lea	rbx, [rsp + 0x40]
0xa58a:	call	0x2990


0xa183:	call	0x2680


0xa4a8:	jae	0xa561


0xa3b7:	cmp	byte ptr [rsp + 0x20], 0
0xa3bc:	jne	0xa439


0xa0bc:	mov	edi, dword ptr [rsp + 0x24]
0xa0c0:	call	0x28e0


0xa4ae:	call	0x2680


0xa561:	mov	rdx, rax
0xa564:	call	0x2680


0xa439:	mov	esi, dword ptr [rsp + 0x24]
0xa43d:	test	esi, esi
0xa43f:	jne	0xa3c0


0xa0c5:	mov	edi, r15d
0xa0c8:	mov	ebx, eax
0xa0ca:	call	0x28e0


0xa0cf:	sub	ebx, eax
0xa0d1:	mov	eax, ebx
0xa0d3:	test	eax, eax
0xa0d5:	jne	0x9fe8


0xa0db:	mov	rax, qword ptr [rsp + 0x18]
0xa0e0:	add	qword ptr [rsp + 0x10], rax
0xa0e5:	mov	rax, qword ptr [rsp + 0x58]
0xa0ea:	add	qword ptr [rsp + 0x50], rax
0xa0ef:	mov	byte ptr [rsp + 0xc], 0
0xa0f4:	mov	byte ptr [rsp + 0x4c], 0
0xa0f9:	cmp	byte ptr [rsp], 0
0xa0fd:	jne	0xa1a4


0xa569:	test	eax, eax
0xa56b:	jns	0xa3c0


0xa571:	jmp	0xa3d8


0xa4b3:	test	eax, eax
0xa4b5:	jg	0xa3c0


0xa4bb:	jmp	0xa3d8


0xa188:	jmp	0xa0d3


0xa0d3:	test	eax, eax
0xa0d5:	jne	0x9fe8


0xa58f:	test	eax, eax
0xa591:	je	0xa600


0xa600:	lea	rcx, [rip + 0x17459]
0xa607:	lea	rsi, [rip + 0x16e9a]
0xa60e:	lea	rdi, [rip + 0x16eb3]
0xa615:	mov	edx, 0x96
0xa61a:	call	0x2600


0xa593:	mov	byte ptr [rsp + 0x40], 1
0xa598:	call	0x2520


0xa249:	test	eax, eax
0xa24b:	je	0xa600


0xa251:	mov	byte ptr [rsp + 0x40], 1
0xa256:	call	0x2520


0xa4cc:	test	eax, eax
0xa4ce:	je	0xa600


0xa4d4:	mov	byte ptr [rsp], 1
0xa4d8:	call	0x2520


0xa198:	test	eax, eax
0xa19a:	je	0xa600


0xa1a0:	mov	byte ptr [rsp], 1
0xa1a4:	call	0x2520


0x9f87:	mov	r14, qword ptr [rax]
0x9f8a:	jmp	0x9fa0


0x9fa0:	movzx	r13d, byte ptr [rbp]
0x9fa5:	test	byte ptr [r14 + r13*2 + 1], 1
0x9fab:	mov	rbx, r13
0x9fae:	je	0x9fbd


0x9fbd:	movzx	r13d, byte ptr [r12]
0x9fc2:	test	byte ptr [r14 + r13*2 + 1], 1
0x9fc8:	mov	rdx, r13
0x9fcb:	je	0x9fda


0x9fb0:	call	0x29e0


0x9fda:	test	bl, bl
0x9fdc:	jne	0x9f90


0x9fcd:	call	0x29e0


0x9fde:	xor	eax, eax
0x9fe0:	sub	eax, edx
0x9fe2:	nop	word ptr [rax + rax]
0x9fe8:	mov	rsi, qword ptr [rsp + 0x88]
0x9ff0:	xor	rsi, qword ptr fs:[0x28]
0x9ff9:	jne	0xa61f


0x9f90:	add	rbp, 1
0x9f94:	add	r12, 1
0x9f98:	cmp	bl, dl
0x9f9a:	jne	0xa3a0


0xa3a0:	movzx	eax, bl
0xa3a3:	sub	eax, edx
0xa3a5:	jmp	0x9fe8


0x9fd2:	mov	rax, qword ptr [rax]
0x9fd5:	movzx	edx, byte ptr [rax + r13*4]
0x9fda:	test	bl, bl
0x9fdc:	jne	0x9f90


0x9fb5:	mov	rax, qword ptr [rax]
0x9fb8:	movzx	ebx, byte ptr [rax + r13*4]
0x9fbd:	movzx	r13d, byte ptr [r12]
0x9fc2:	test	byte ptr [r14 + r13*2 + 1], 1
0x9fc8:	mov	rdx, r13
0x9fcb:	je	0x9fda


0xa1a9:	mov	rbx, qword ptr [rsp + 0x10]
0xa1ae:	mov	rsi, rax
0xa1b1:	mov	rdi, rbx
0xa1b4:	call	0xc380


0xa4dd:	mov	rbp, qword ptr [rsp + 0x10]
0xa4e2:	mov	rsi, rax
0xa4e5:	mov	rdi, rbp
0xa4e8:	call	0xc380


0xa25b:	mov	rbx, qword ptr [rsp + 0x50]
0xa260:	mov	rsi, rax
0xa263:	mov	rdi, rbx
0xa266:	call	0xc380


0xa59d:	mov	rbp, qword ptr [rsp + 0x50]
0xa5a2:	mov	rsi, rax
0xa5a5:	mov	rdi, rbp
0xa5a8:	call	0xc380


0xa851:	cmp	r15d, 0xa
0xa855:	mov	qword ptr [rsp + 0x58], rax
0xa85a:	ja	0xba0f


0xa860:	lea	rcx, [rip + 0x172b9]
0xa867:	mov	edx, r15d
0xa86a:	movsxd	rax, dword ptr [rcx + rdx*4]
0xa86e:	add	rax, rcx
0xa871:	jmp	rax


0xba0f:	call	0x2400


0xc396:	mov	rdx, rax
0xc399:	sub	rdx, rbp
0xc39c:	add	rdx, 1
0xc3a0:	test	rax, rax
0xc3a3:	mov	rax, rbx
0xc3a6:	cmovne	rax, rdx
0xc3aa:	add	rsp, 8
0xc3ae:	pop	rbx
0xc3af:	pop	rbp
0xc3b0:	ret	


0xa5ad:	lea	rcx, [rbx + 4]
0xa5b1:	lea	rdi, [rbx + 0x24]
0xa5b5:	mov	rdx, rax
0xa5b8:	mov	rsi, rbp
0xa5bb:	call	0x101e0


0xa26b:	lea	rcx, [rbp + 4]
0xa26f:	lea	rdi, [rbp + 0x24]
0xa273:	mov	rdx, rax
0xa276:	mov	rsi, rbx
0xa279:	call	0x101e0


0xa4ed:	lea	rcx, [rbx + 4]
0xa4f1:	lea	rdi, [rbx + 0x24]
0xa4f5:	mov	rdx, rax
0xa4f8:	mov	rsi, rbp
0xa4fb:	call	0x101e0


0xa1b9:	lea	rcx, [r12 + 4]
0xa1be:	lea	rdi, [r12 + 0x24]
0xa1c3:	mov	rdx, rax
0xa1c6:	mov	rsi, rbx
0xa1c9:	call	0x101e0


0x51cc:	lea	rcx, [rbp + 4]
0x51d0:	lea	rdi, [rbp + 0x24]
0x51d4:	mov	rdx, rax
0x51d7:	mov	rsi, r15
0x51da:	call	0x101e0


0xc40f:	lea	rdx, [rip + 0x15eaa]
0xc416:	mov	rcx, rax
0xc419:	mov	r8d, 0x7e3
0xc41f:	mov	esi, 1
0xc424:	mov	rdi, rbp
0xc427:	xor	eax, eax
0xc429:	call	0x2970


0xc42e:	lea	rsi, [rip + 0x15bf3]
0xc435:	xor	edi, edi
0xc437:	mov	edx, 5
0xc43c:	call	0x2510


0xc441:	mov	rsi, rbp
0xc444:	mov	rdi, rax
0xc447:	call	0x26a0


0x26a0:	jmp	qword ptr [rip + 0x22576a]




0xd82f:	mov	r9, r12
0xd832:	mov	rdx, rax
0xd835:	mov	r8, r13
0xd838:	mov	rcx, rbx
0xd83b:	xor	esi, esi
0xd83d:	mov	edi, ebp
0xd83f:	xor	eax, eax
0xd841:	call	0x28a0


0x28a0:	jmp	qword ptr [rip + 0x22566a]




0x40d3:	jmp	0x4092


0x4092:	mov	rsi, rbx
0x4095:	mov	rdi, rax
0x4098:	call	0x26a0


0x427d:	mov	rdi, qword ptr [rip + 0x223e5c]
0x4284:	mov	rdx, rax
0x4287:	mov	rcx, rbx
0x428a:	mov	esi, 1
0x428f:	xor	eax, eax
0x4291:	call	0x2970


0x4296:	mov	edi, ebp
0x4298:	call	0x2950


0x2950:	jmp	qword ptr [rip + 0x225612]




0x42ab:	mov	rcx, rbx
0x42ae:	mov	rdx, rbx
0x42b1:	mov	rsi, rax
0x42b4:	mov	edi, 1
0x42b9:	xor	eax, eax
0x42bb:	call	0x2850


0x2850:	jmp	qword ptr [rip + 0x225692]




0x4853:	mov	rbx, rax
0x4856:	mov	rsi, rbp
0x4859:	mov	edi, 1
0x485e:	call	0xc340


0x489e:	mov	rbx, rax
0x48a1:	jmp	0x4856


0x4856:	mov	rsi, rbp
0x4859:	mov	edi, 1
0x485e:	call	0xc340


0x1eb86:	mov	rdi, rax
0x1eb89:	mov	r13, rax
0x1eb8c:	call	0x2530


0x48e1:	mov	rdi, rax
0x48e4:	mov	rsi, rbx
0x48e7:	call	0x26a0


0xc974:	lea	rdx, [rip + 0x1567c]
0xc97b:	mov	rsi, rax
0xc97e:	mov	edi, 1
0xc983:	xor	eax, eax
0xc985:	call	0x2850


0xcc47:	mov	edi, dword ptr [rip + 0x21b3db]
0xcc4d:	lea	rdx, [rip + 0x1483c]
0xcc54:	mov	rcx, rax
0xcc57:	xor	esi, esi
0xcc59:	xor	eax, eax
0xcc5b:	call	0x28a0


0xdd93:	mov	edx, r12d
0xdd96:	mov	rsi, rbp
0xdd99:	mov	edi, eax
0xdd9b:	call	0x25f0


0x25f0:	jmp	qword ptr [rip + 0x2257c2]




0x7b61:	mov	ebx, eax
0x7b63:	call	0x2410


0xdcac:	test	eax, eax
0xdcae:	mov	rdi, rbx
0xdcb1:	js	0xdd07


0xdd07:	pop	rbx
0xdd08:	pop	rbp
0xdd09:	pop	r12
0xdd0b:	jmp	0x24f0


0xdcb3:	call	0x2810


0x24f0:	jmp	qword ptr [rip + 0x225842]




0xdcb8:	test	eax, eax
0xdcba:	jne	0xdce8


0xdcbc:	mov	rdi, rbx
0xdcbf:	call	0xdd20


0xdce8:	mov	rdi, rbx
0xdceb:	call	0x2730


0xdcf0:	xor	esi, esi
0xdcf2:	mov	edx, 1
0xdcf7:	mov	edi, eax
0xdcf9:	call	0x25f0


0x10217:	cmp	rax, -3
0x1021b:	mov	rbp, rax
0x1021e:	jbe	0x10240


0x10240:	mov	rdx, qword ptr [rsp + 8]
0x10245:	xor	rdx, qword ptr fs:[0x28]
0x1024e:	mov	rax, rbp
0x10251:	jne	0x1025e


0x10220:	test	r12, r12
0x10223:	je	0x10240


0x10253:	add	rsp, 0x18
0x10257:	pop	rbx
0x10258:	pop	rbp
0x10259:	pop	r12
0x1025b:	pop	r13
0x1025d:	ret	


0x1025e:	call	0x2560


0x10225:	xor	edi, edi
0x10227:	call	0x1f4b0


0x51df:	cmp	rax, -1
0x51e3:	mov	qword ptr [rsp + 0x28], rax
0x51e8:	je	0x5280


0x5280:	mov	qword ptr [rsp + 0x28], 1
0x5289:	mov	byte ptr [rsp + 0x30], 0
0x528e:	mov	r13d, dword ptr [rsp + 0x34]
0x5293:	mov	byte ptr [rsp + 0x1c], 1
0x5298:	jmp	0x518b


0x51ee:	cmp	rax, -2
0x51f2:	je	0x52a0


0x52a0:	mov	rdi, qword ptr [rsp + 0x20]
0x52a5:	call	0x2530


0x51f8:	test	rax, rax
0x51fb:	jne	0x52d8


0x5201:	mov	rax, qword ptr [rsp + 0x20]
0x5206:	mov	qword ptr [rsp + 0x28], 1
0x520f:	cmp	byte ptr [rax], 0
0x5212:	jne	0x5320


0x52d8:	mov	r13d, dword ptr [rsp + 0x34]
0x52dd:	jmp	0x5226


0x5218:	mov	r13d, dword ptr [rsp + 0x34]
0x521d:	test	r13d, r13d
0x5220:	jne	0x5301


0x5320:	lea	rcx, [rip + 0x1c3e9]
0x5327:	lea	rsi, [rip + 0x1c17a]
0x532e:	lea	rdi, [rip + 0x1c1aa]
0x5335:	mov	edx, 0xb2
0x533a:	call	0x2600


0x5226:	lea	rdi, [rbp + 4]
0x522a:	mov	byte ptr [rsp + 0x30], 1
0x522f:	call	0x2990


0x5301:	lea	rcx, [rip + 0x1c408]
0x5308:	lea	rsi, [rip + 0x1c199]
0x530f:	lea	rdi, [rip + 0x1c1e0]
0x5316:	mov	edx, 0xb3
0x531b:	call	0x2600


0x5234:	test	eax, eax
0x5236:	je	0x52c8


0x52c8:	mov	byte ptr [rsp + 0x1c], 1
0x52cd:	jmp	0x5182


0x523c:	test	r13d, r13d
0x523f:	mov	byte ptr [rsp + 0x10], 0
0x5244:	mov	byte ptr [rsp + 0x1c], 1
0x5249:	jne	0x518b


0x5182:	test	r13d, r13d
0x5185:	je	0x5250


0xa1ce:	cmp	rax, -1
0xa1d2:	mov	qword ptr [rsp + 0x18], rax
0xa1d7:	je	0xa300


0xa300:	mov	qword ptr [rsp + 0x18], 1
0xa309:	mov	byte ptr [rsp + 0x20], 0
0xa30e:	mov	byte ptr [rsp + 0xc], 1
0xa313:	jmp	0xa145


0xa1dd:	cmp	rax, -2
0xa1e1:	je	0xa340


0xa340:	mov	rdi, qword ptr [rsp + 0x10]
0xa345:	call	0x2530


0xa1e7:	test	rax, rax
0xa1ea:	jne	0xa211


0xa1ec:	mov	rax, qword ptr [rsp + 0x10]
0xa1f1:	mov	qword ptr [rsp + 0x18], 1
0xa1fa:	cmp	byte ptr [rax], 0
0xa1fd:	jne	0xa624


0xa211:	lea	rdi, [r12 + 4]
0xa216:	mov	byte ptr [rsp + 0x20], 1
0xa21b:	call	0x2990


0xa203:	mov	r10d, dword ptr [rsp + 0x24]
0xa208:	test	r10d, r10d
0xa20b:	jne	0xa5fb


0xa624:	lea	rcx, [rip + 0x17435]
0xa62b:	lea	rsi, [rip + 0x16e76]
0xa632:	lea	rdi, [rip + 0x16ea6]
0xa639:	mov	edx, 0xb2
0xa63e:	call	0x2600


0xa5fb:	call	0x2a20


0xa220:	test	eax, eax
0xa222:	je	0xa380


0xa380:	mov	byte ptr [rsp + 0xc], 1
0xa385:	jmp	0xa137


0xa228:	mov	byte ptr [rsp], 0
0xa22c:	mov	byte ptr [rsp + 0xc], 1
0xa231:	jmp	0xa137


0xa137:	mov	r9d, dword ptr [rsp + 0x24]
0xa13c:	test	r9d, r9d
0xa13f:	je	0xa3e8


0xa500:	cmp	rax, -1
0xa504:	mov	qword ptr [rsp + 0x18], rax
0xa509:	je	0xa3c0


0xa50f:	cmp	rax, -2
0xa513:	je	0xa3c0


0xa519:	test	rax, rax
0xa51c:	jne	0xa541


0xa51e:	mov	rax, qword ptr [rsp + 0x10]
0xa523:	mov	qword ptr [rsp + 0x18], 1
0xa52c:	cmp	byte ptr [rax], 0
0xa52f:	jne	0xa624


0xa541:	lea	rdi, [rbx + 4]
0xa545:	mov	byte ptr [rsp + 0x20], 1
0xa54a:	call	0x2990


0xa535:	mov	edi, dword ptr [rsp + 0x24]
0xa539:	test	edi, edi
0xa53b:	jne	0xa5fb


0xa54f:	test	eax, eax
0xa551:	je	0xa576


0xa576:	mov	byte ptr [rsp + 0xc], 1
0xa57b:	jmp	0xa439


0xa553:	mov	byte ptr [rsp], 0
0xa557:	mov	byte ptr [rsp + 0xc], 1
0xa55c:	jmp	0xa439


0xa27e:	cmp	rax, -1
0xa282:	mov	qword ptr [rsp + 0x58], rax
0xa287:	je	0xa320


0xa320:	mov	qword ptr [rsp + 0x58], 1
0xa329:	mov	byte ptr [rsp + 0x60], 0
0xa32e:	mov	byte ptr [rsp + 0x4c], 1
0xa333:	jmp	0xa15b


0xa28d:	cmp	rax, -2
0xa291:	je	0xa360


0xa360:	mov	rdi, qword ptr [rsp + 0x50]
0xa365:	call	0x2530


0xa297:	test	rax, rax
0xa29a:	jne	0xa2c1


0xa29c:	mov	rax, qword ptr [rsp + 0x50]
0xa2a1:	mov	qword ptr [rsp + 0x58], 1
0xa2aa:	cmp	byte ptr [rax], 0
0xa2ad:	jne	0xa624


0xa2c1:	lea	rdi, [rbp + 4]
0xa2c5:	mov	byte ptr [rsp + 0x60], 1
0xa2ca:	call	0x2990


0xa2b3:	mov	r8d, dword ptr [rsp + 0x64]
0xa2b8:	test	r8d, r8d
0xa2bb:	jne	0xa5fb


0xa2cf:	test	eax, eax
0xa2d1:	je	0xa390


0xa390:	mov	byte ptr [rsp + 0x4c], 1
0xa395:	jmp	0xa0a3


0xa2d7:	mov	byte ptr [rsp + 0x40], 0
0xa2dc:	mov	byte ptr [rsp + 0x4c], 1
0xa2e1:	jmp	0xa0a3


0xa5c0:	lea	rdx, [rax + 2]
0xa5c4:	mov	qword ptr [rsp + 0x58], rax
0xa5c9:	cmp	rdx, 1
0xa5cd:	jbe	0xa3d8


0xa5d3:	test	rax, rax
0xa5d6:	jne	0xa493


0xa5dc:	mov	rax, qword ptr [rsp + 0x50]
0xa5e1:	mov	qword ptr [rsp + 0x58], 1
0xa5ea:	cmp	byte ptr [rax], 0
0xa5ed:	jne	0xa624


0xa5ef:	mov	ecx, dword ptr [rsp + 0x64]
0xa5f3:	test	ecx, ecx
0xa5f5:	je	0xa493


0x14c94:	cmp	r12, rax
0x14c97:	mov	r8, qword ptr [rsp]
0x14c9b:	mov	r10d, dword ptr [rsp + 0xc]
0x14ca0:	ja	0x14cac


0x14ca2:	cmp	rax, -3
0x14ca6:	jbe	0x14e71


0x14cac:	mov	r11, qword ptr [rbx + 0x28]
0x14cb0:	mov	rax, qword ptr [rbx + 0x38]
0x14cb4:	jmp	0x14951


0x14e71:	mov	edx, dword ptr [rsp + 0x24]
0x14e75:	sub	rax, r12
0x14e78:	mov	qword ptr [rbx + 0x20], 0
0x14e80:	mov	r12, rax
0x14e83:	mov	qword ptr [rbx + 0x30], rax
0x14e87:	cmp	edx, -1
0x14e8a:	jne	0x149d5


0x14e90:	jmp	0x14cac


0x149d5:	cmp	byte ptr [rbx + 0x8e], 0
0x149dc:	jne	0x14e49


0x149e2:	xor	eax, eax
0x149e4:	cmp	edx, 0xa
0x149e7:	jne	0x149f7


0x14e49:	mov	edi, edx
0x14e4b:	mov	dword ptr [rsp], edx
0x14e4e:	call	0x2770


0x149e9:	xor	eax, eax
0x149eb:	cmp	byte ptr [rbx + 0x8d], 0
0x149f2:	setne	al
0x149f5:	add	eax, eax
0x149f7:	mov	dword ptr [rbx + 0x70], eax
0x149fa:	cmp	r12, 0
0x149fe:	jne	0x14e1a


0x149f7:	mov	dword ptr [rbx + 0x70], eax
0x149fa:	cmp	r12, 0
0x149fe:	jne	0x14e1a


0x14e53:	test	eax, eax
0x14e55:	jne	0x14e63


0x14e57:	mov	edx, dword ptr [rsp]
0x14e5a:	cmp	edx, 0x5f
0x14e5d:	jne	0x149e2


0x14e63:	mov	eax, 1
0x14e68:	jmp	0x149f7


0x16b18:	cmp	r12, rax
0x16b1b:	jne	0x169e7


0x16b21:	mov	edi, dword ptr [rsp + 0x54]
0x16b25:	call	0x28e0


0x16b2a:	mov	rdx, qword ptr [rsp + 0x40]
0x16b2f:	mov	rdi, qword ptr [rsp + 0x38]
0x16b34:	mov	esi, eax
0x16b36:	call	0x2790


0x16b3b:	cmp	rax, -1
0x16b3f:	je	0x169e7


0x16b45:	movzx	eax, byte ptr [rsp + 0x60]
0x16b4a:	mov	byte ptr [rbp + rax], 1
0x16b4f:	jmp	0x169e7


0x16c9a:	cmp	rax, -2
0x16c9e:	jne	0x16caa


0x16ca0:	movzx	eax, byte ptr [rsp + 0x54]
0x16ca5:	mov	byte ptr [rbp + rax], 1
0x16caa:	add	byte ptr [rsp + 0x54], 1
0x16caf:	jne	0x16c80


0x16caa:	add	byte ptr [rsp + 0x54], 1
0x16caf:	jne	0x16c80


0x16cb1:	jmp	0x169e7


0x16c80:	xor	edi, edi
0x16c82:	mov	qword ptr [r12], 0
0x16c8a:	mov	rcx, r12
0x16c8d:	mov	edx, 1
0x16c92:	mov	rsi, r13
0x16c95:	call	0x101e0


0x1499f:	lea	rcx, [rax - 1]
0x149a3:	mov	edx, dword ptr [rsp + 0x24]
0x149a7:	mov	r8, qword ptr [rsp]
0x149ab:	mov	r10d, dword ptr [rsp + 0xc]
0x149b0:	cmp	rcx, -4
0x149b4:	ja	0x14df5


0x149ba:	add	r14, rax
0x149bd:	cmp	r15, r14
0x149c0:	jg	0x14970


0x14df5:	test	rax, rax
0x14df8:	je	0x14e6d


0x149c2:	sub	r14, r15
0x149c5:	cmp	edx, -1
0x149c8:	mov	r12, r14
0x149cb:	mov	qword ptr [rbx + 0x30], r14
0x149cf:	je	0x14da9


0x14970:	mov	r12, qword ptr [rbx + 0x50]
0x14974:	mov	rsi, qword ptr [rbx]
0x14977:	mov	rdi, r13
0x1497a:	mov	rax, qword ptr [rbx + 0x20]
0x1497e:	mov	rcx, qword ptr [rsp + 0x10]
0x14983:	mov	dword ptr [rsp + 0xc], r10d
0x14988:	mov	qword ptr [rsp], r8
0x1498c:	sub	r12, r14
0x1498f:	add	rsi, r14
0x14992:	mov	rdx, r12
0x14995:	mov	qword ptr [rsp + 0x18], rax
0x1499a:	call	0x101e0


0x14e6d:	xor	edx, edx
0x14e6f:	jmp	0x14e07


0x14dfa:	test	r12, r12
0x14dfd:	je	0x14e6d


0x14da9:	lea	rsi, [r8 - 1]
0x14dad:	mov	edx, r10d
0x14db0:	mov	rdi, rbx
0x14db3:	call	0x14480


0x14e07:	mov	rax, qword ptr [rsp + 0x18]
0x14e0c:	mov	qword ptr [rbx + 0x20], rax
0x14e10:	mov	eax, 1
0x14e15:	jmp	0x149ba


0x14dff:	mov	rax, qword ptr [rbx]
0x14e02:	movzx	edx, byte ptr [rax + r14]
0x14e07:	mov	rax, qword ptr [rsp + 0x18]
0x14e0c:	mov	qword ptr [rbx + 0x20], rax
0x14e10:	mov	eax, 1
0x14e15:	jmp	0x149ba


0x116ac:	mov	rbp, rax
0x116af:	lea	rax, [rax - 1]
0x116b3:	cmp	rax, -4
0x116b7:	mov	qword ptr [rsp + 0x20], rax
0x116bc:	ja	0x119f9


0x116c2:	mov	edx, dword ptr [rsp + 0x44]
0x116c6:	mov	edi, edx
0x116c8:	mov	dword ptr [rsp + 0x10], edx
0x116cc:	call	0x2910


0x119f9:	cmp	qword ptr [rsp + 0x20], -3
0x119ff:	jne	0x11a0b


0x2910:	jmp	qword ptr [rip + 0x225632]


0x11a01:	mov	rax, qword ptr [r14 + 0x58]
0x11a05:	cmp	qword ptr [r14 + 0x40], rax
0x11a09:	jl	0x11a88


0x11a0b:	mov	rax, qword ptr [r14]
0x11a0e:	mov	rdx, qword ptr [r14 + 0x78]
0x11a12:	add	rax, r13
0x11a15:	add	rax, qword ptr [r14 + 0x28]
0x11a19:	test	rdx, rdx
0x11a1c:	movzx	eax, byte ptr [rax]
0x11a1f:	jne	0x11bcc




0x11a88:	mov	rax, qword ptr [rsp + 0x48]
0x11a8d:	mov	qword ptr [r14 + 0x20], rax
0x11a91:	jmp	0x11615


0x11a25:	mov	rdx, qword ptr [r14 + 8]
0x11a29:	mov	rcx, r15
0x11a2c:	mov	byte ptr [rdx + r15], al
0x11a30:	cmp	byte ptr [r14 + 0x8c], 0
0x11a38:	jne	0x11bbf


0x11bcc:	movzx	eax, byte ptr [rdx + rax]
0x11bd0:	jmp	0x11a25


0x11a3e:	mov	rdx, qword ptr [r14 + 0x10]
0x11a42:	add	r13, 1
0x11a46:	add	r15, 1
0x11a4a:	cmp	rbp, -1
0x11a4e:	mov	dword ptr [rdx + rcx*4], eax
0x11a51:	jne	0x11610


0x11bbf:	mov	rdx, qword ptr [r14 + 0x18]
0x11bc3:	mov	qword ptr [rdx + r15*8], r13
0x11bc7:	jmp	0x11a3e


0x11a57:	mov	rax, qword ptr [rsp + 0x48]
0x11a5c:	mov	qword ptr [r14 + 0x20], rax
0x11a60:	jmp	0x11610


0x11610:	cmp	r15, rbx
0x11613:	jl	0x11650


0x11825:	mov	rbp, rax
0x11828:	lea	rax, [rax - 1]
0x1182c:	cmp	rax, -4
0x11830:	ja	0x11918


0x11836:	mov	edx, dword ptr [rsp + 0x44]
0x1183a:	mov	edi, edx
0x1183c:	mov	dword ptr [rsp + 0x18], edx
0x11840:	call	0x2910


0x11918:	cmp	rax, -3
0x1191c:	jne	0x11950


0x1191e:	mov	rax, qword ptr [r14 + 0x58]
0x11922:	cmp	qword ptr [r14 + 0x40], rax
0x11926:	jge	0x11950


0x11950:	mov	rax, qword ptr [r14]
0x11953:	mov	rdx, qword ptr [r14 + 8]
0x11957:	add	rax, r15
0x1195a:	add	rax, qword ptr [r14 + 0x28]
0x1195e:	movzx	eax, byte ptr [rax]
0x11961:	mov	byte ptr [rdx + r15], al
0x11965:	mov	rdx, qword ptr [r14 + 0x10]
0x11969:	add	r15, 1
0x1196d:	cmp	rbp, -1
0x11971:	mov	dword ptr [rdx + r13*4], eax
0x11975:	jne	0x118ba


0x11928:	mov	rax, qword ptr [rsp + 0x48]
0x1192d:	mov	qword ptr [r14 + 0x20], rax
0x11931:	nop	dword ptr [rax]
0x11938:	mov	qword ptr [r14 + 0x30], r15
0x1193c:	mov	qword ptr [r14 + 0x38], r15
0x11940:	xor	eax, eax
0x11942:	jmp	0x1161f


0x1197b:	mov	rax, qword ptr [rsp + 0x48]
0x11980:	mov	qword ptr [r14 + 0x20], rax
0x11984:	jmp	0x118ba


0x11464:	lea	rdx, [rax - 1]
0x11468:	cmp	rdx, -3
0x1146c:	ja	0x11500


0x11472:	cmp	rax, -2
0x11476:	mov	edx, dword ptr [rsp + 0xc]
0x1147a:	je	0x114f0


0x11500:	mov	rax, qword ptr [rbx]
0x11503:	mov	rcx, qword ptr [rbx + 0x78]
0x11507:	add	rax, rbp
0x1150a:	add	rax, qword ptr [rbx + 0x28]
0x1150e:	test	rcx, rcx
0x11511:	movzx	edx, byte ptr [rax]
0x11514:	mov	dword ptr [rsp + 0xc], edx
0x11518:	jne	0x115a1


0x114f0:	mov	rax, qword ptr [rbx + 0x58]
0x114f4:	cmp	qword ptr [rbx + 0x40], rax
0x114f8:	jl	0x11598


0x1147c:	mov	rcx, qword ptr [rbx + 0x10]
0x11480:	lea	rsi, [rbp + 1]
0x11484:	lea	rdi, [rbp*4]
0x1148c:	mov	dword ptr [rcx + rbp*4], edx
0x1148f:	add	rbp, rax
0x11492:	cmp	rsi, rbp
0x11495:	jge	0x114e0


0x1151e:	mov	qword ptr [rbx + 0x20], r15
0x11522:	mov	eax, 1
0x11527:	jmp	0x1147c


0x115a1:	movzx	edx, byte ptr [rcx + rdx]
0x115a5:	mov	dword ptr [rsp + 0xc], edx
0x115a9:	jmp	0x1151e


0x11598:	mov	qword ptr [rbx + 0x20], r15
0x1159c:	jmp	0x114b4


0x11497:	lea	rdx, [rcx + rdi + 4]
0x1149c:	lea	rax, [rcx + rbp*4]
0x114a0:	mov	dword ptr [rdx], 0xffffffff
0x114a6:	add	rdx, 4
0x114aa:	cmp	rax, rdx
0x114ad:	jne	0x114a0


0x114e0:	mov	rbp, rsi
0x114e3:	cmp	rbp, r12
0x114e6:	jl	0x11438


0x114af:	cmp	rbp, r12
0x114b2:	jl	0x11438


0x114a0:	mov	dword ptr [rdx], 0xffffffff
0x114a6:	add	rdx, 4
0x114aa:	cmp	rax, rdx
0x114ad:	jne	0x114a0


0x11438:	mov	rdi, qword ptr [rbx + 0x78]
0x1143c:	mov	rdx, r12
0x1143f:	mov	r15, qword ptr [rbx + 0x20]
0x11443:	sub	rdx, rbp
0x11446:	test	rdi, rdi
0x11449:	jne	0x11530


0x114ec:	jmp	0x114b4


0x5d3b:	test	rax, rax
0x5d3e:	mov	rbx, rax
0x5d41:	mov	ecx, dword ptr [rsp + 4]
0x5d45:	je	0x5db0


0x5db0:	mov	ebp, 0xffffffff
0x5db5:	jmp	0x5d70


0x5d47:	lea	r9, [rsp + 8]
0x5d4c:	lea	rdi, [rip - 0xdd3]
0x5d53:	mov	rsi, rbp
0x5d56:	movsx	r8d, r12b
0x5d5a:	mov	rdx, rax
0x5d5d:	call	0x5af0


0x5d70:	add	rsp, 0x10
0x5d74:	mov	eax, ebp
0x5d76:	pop	rbx
0x5d77:	pop	rbp
0x5d78:	pop	r12
0x5d7a:	ret	


0x10371:	test	rax, rax
0x10374:	je	0x107c0


0x107c0:	lea	rsi, [rip + 0x12050]
0x107c7:	lea	rdi, [rip + 0x11f9d]
0x107ce:	call	0x27c0


0x1037a:	lea	r14, [rsp + 0x40]
0x1037f:	lea	r13, [rsp + 0x50]
0x10384:	lea	r12, [rsp + 0x48]
0x10389:	mov	rbp, rax
0x1038c:	mov	qword ptr [rsp + 0x48], 0
0x10395:	mov	qword ptr [rsp + 0x50], 0
0x1039e:	nop	
0x103a0:	mov	rcx, rbp
0x103a3:	mov	edx, 0xa
0x103a8:	mov	rsi, r13
0x103ab:	mov	rdi, r12
0x103ae:	call	0x26c0


0x27c0:	jmp	qword ptr [rip + 0x2256da]


0x26c0:	jmp	qword ptr [rip + 0x22575a]






0xe510:	mov	qword ptr [rbx], 0
0xe517:	xor	eax, eax
0xe519:	pop	rbx
0xe51a:	ret	


0x11fe1:	mov	rcx, qword ptr [rsp]
0x11fe5:	mov	rdi, rcx
0x11fe8:	call	0x2a10


0x11fed:	mov	rdi, rbp
0x11ff0:	call	0x2a10


0x11ff5:	mov	rax, qword ptr [rsp + 8]
0x11ffa:	mov	rdi, rax
0x11ffd:	call	0x2a10


0xe0e9:	mov	qword ptr [rbp + 0x10], 0
0xe0f1:	mov	qword ptr [rbp + 0x38], 0
0xe0f9:	add	rsp, 8
0xe0fd:	mov	rax, rbx
0xe100:	pop	rbx
0xe101:	pop	rbp
0xe102:	pop	r12
0xe104:	pop	r13
0xe106:	ret	


0x1828c:	mov	eax, 0xc
0x18291:	jmp	0x1813b


0x1808e:	cmp	byte ptr [rbp - 0xc9], 0
0x18095:	je	0x17d08


0x17d08:	mov	rdi, qword ptr [rbp - 0x88]
0x17d0f:	call	0x15d60


0x1809b:	mov	rdi, qword ptr [rbp - 0xc0]
0x180a2:	call	0x2a10


0x180a7:	jmp	0x17f9e


0x17f9e:	cmp	qword ptr [rbp - 0x88], 0
0x17fa6:	jne	0x17d08


0x17fac:	mov	eax, 0xc
0x17fb1:	jmp	0x17f29


0x17f29:	mov	rbx, qword ptr [rbp - 0x38]
0x17f2d:	xor	rbx, qword ptr fs:[0x28]
0x17f36:	jne	0x180f5


0x17f3c:	lea	rsp, [rbp - 0x28]
0x17f40:	pop	rbx
0x17f41:	pop	r12
0x17f43:	pop	r13
0x17f45:	pop	r14
0x17f47:	pop	r15
0x17f49:	pop	rbp
0x17f4a:	ret	


0x180f5:	call	0x2560


0x1a416:	test	eax, eax
0x1a418:	jne	0x1a6ed


0x1a41e:	mov	rax, qword ptr [rbx]
0x1a421:	movzx	r11d, byte ptr [rsp + 0x1ac]
0x1a42a:	mov	r10, qword ptr [rsp + 0x150]
0x1a432:	xor	ecx, ecx
0x1a434:	mov	r9, qword ptr [rsp + 0x138]
0x1a43c:	mov	r8, qword ptr [rsp + 0x158]
0x1a444:	mov	rdi, qword ptr [rsp + 0xd8]
0x1a44c:	mov	rdx, qword ptr [rsp + 0xb8]
0x1a454:	jmp	0x1a459


0x1a6ed:	mov	rdi, qword ptr [rsp + 0x1d8]
0x1a6f5:	mov	dword ptr [rsp + 0x5c], eax
0x1a6f9:	jmp	0x19c18


0x15df9:	mov	rax, qword ptr [r12]
0x15dfd:	mov	rdi, qword ptr [rax + rbx + 0x10]
0x15e02:	call	0x2a10


0x15e07:	add	rbx, qword ptr [r12]
0x15e0b:	movdqu	xmm0, xmmword ptr [rbx + 0x18]
0x15e10:	movaps	xmmword ptr [rbp], xmm0
0x15e14:	mov	rax, qword ptr [rbx + 0x28]
0x15e18:	mov	qword ptr [rbp + 0x10], rax
0x15e1c:	mov	rax, qword ptr [rbx + 8]
0x15e20:	pop	rbx
0x15e21:	pop	rbp
0x15e22:	pop	r12
0x15e24:	ret	


0x17e1b:	mov	rcx, qword ptr [rbp - 0x78]
0x17e1f:	mov	rbx, rax
0x17e22:	jmp	0x1791b


0x1791b:	lea	rax, [rbp - 0x78]
0x1791f:	mov	qword ptr [rbp - 0xb0], rax
0x17926:	jmp	0x17a09


0x17dc8:	mov	r9, rax
0x17dcb:	mov	rbx, rax
0x17dce:	mov	r15, rax
0x17dd1:	shl	r9, 4
0x17dd5:	jmp	0x1794c


0x180b5:	cmp	byte ptr [rbp - 0xc9], 0
0x180bc:	mov	eax, 1
0x180c1:	je	0x17f29


0x180c7:	mov	rdi, qword ptr [rbp - 0xc0]
0x180ce:	mov	dword ptr [rbp - 0x88], eax
0x180d4:	call	0x2a10


0x180d9:	mov	eax, dword ptr [rbp - 0x88]
0x180df:	jmp	0x17f29


0x17f91:	cmp	byte ptr [rbp - 0xc9], 0
0x17f98:	jne	0x1809b


0x17d63:	cmp	byte ptr [rbp - 0xc9], 0
0x17d6a:	jne	0x180e4


0x17d70:	mov	rdi, qword ptr [rbp - 0x88]
0x17d77:	call	0x15d60


0x180e4:	mov	rdi, qword ptr [rbp - 0xc0]
0x180eb:	call	0x2a10


0x180f0:	jmp	0x17d70


0x18065:	cmp	byte ptr [rbp - 0xc9], 0
0x1806c:	je	0x17f27


0x17f27:	xor	eax, eax
0x17f29:	mov	rbx, qword ptr [rbp - 0x38]
0x17f2d:	xor	rbx, qword ptr fs:[0x28]
0x17f36:	jne	0x180f5


0x18072:	mov	rdi, qword ptr [rbp - 0xc0]
0x18079:	call	0x2a10


0x1807e:	xor	eax, eax
0x18080:	jmp	0x17f29


0x17f09:	cmp	byte ptr [rbp - 0xc9], 0
0x17f10:	jne	0x17fec


0x17f16:	mov	rdi, qword ptr [rbp - 0x88]
0x17f1d:	test	rdi, rdi
0x17f20:	je	0x17f27


0x17fec:	mov	rdi, qword ptr [rbp - 0xc0]
0x17ff3:	call	0x2a10


0x17f22:	call	0x15d60


0x17ff8:	mov	rdi, qword ptr [rbp - 0x88]
0x17fff:	test	rdi, rdi
0x18002:	jne	0x17f22


0x18008:	jmp	0x17f27


0xff11:	jmp	0xfc92


0x1e9b8:	pop	rax
0x1e9b9:	pop	rdx
0x1e9ba:	add	rsp, 0x28
0x1e9be:	mov	rax, rbx
0x1e9c1:	pop	rbx
0x1e9c2:	pop	rbp
0x1e9c3:	pop	r12
0x1e9c5:	pop	r13
0x1e9c7:	pop	r14
0x1e9c9:	pop	r15
0x1e9cb:	ret	


0x1762d:	mov	eax, dword ptr [rsp + 0x88]
0x17634:	mov	rbx, qword ptr [rsp + 0xc8]
0x1763c:	xor	rbx, qword ptr fs:[0x28]
0x17645:	jne	0x177fc


0x1766d:	mov	dword ptr [rsp + 0x88], 0
0x17678:	jmp	0x173f8


0x173dd:	mov	eax, dword ptr [rsp + 0x8c]
0x173e4:	test	eax, eax
0x173e6:	mov	dword ptr [rsp + 0x88], eax
0x173ed:	jne	0x17620


0x17615:	mov	dword ptr [rsp + 0x88], 0xc
0x17620:	mov	rdi, qword ptr [rsp + 0xa0]
0x17628:	call	0x2a10


0x174e5:	mov	rax, qword ptr [r15 + 0xb8]
0x174ec:	mov	rbx, qword ptr [rsp + 0x40]
0x174f1:	mov	rax, qword ptr [rax + rbx*8]
0x174f5:	test	rax, rax
0x174f8:	je	0x177d5


0x177d5:	mov	rax, qword ptr [rsp + 0x60]
0x177da:	mov	qword ptr [rax], r12
0x177dd:	mov	rax, qword ptr [rsp + 0x68]
0x177e2:	mov	qword ptr [r15 + 0xb8], rax
0x177e9:	mov	rax, qword ptr [rsp + 0x70]
0x177ee:	mov	qword ptr [r15 + 0x48], rax
0x177f2:	mov	eax, 1
0x177f7:	jmp	0x17634


0x174fe:	mov	rbx, qword ptr [rsp + 0x60]
0x17503:	mov	rdx, qword ptr [rsp + 0x78]
0x17508:	lea	rsi, [rax + 0x18]
0x1750c:	mov	qword ptr [rbx], r12
0x1750f:	mov	rbx, qword ptr [rsp + 0x68]
0x17514:	mov	qword ptr [r15 + 0xb8], rbx
0x1751b:	mov	rbx, qword ptr [rsp + 0x70]
0x17520:	mov	qword ptr [r15 + 0x48], rbx
0x17524:	mov	rdi, qword ptr [rax + 0x10]
0x17528:	call	0x126a0


0x1752d:	test	rax, rax
0x17530:	sete	al
0x17533:	movzx	eax, al
0x17536:	jmp	0x17634


0x18791:	mov	rdx, qword ptr [r14 + 0xb8]
0x18798:	cmp	qword ptr [rdx + rbx*8], 0
0x1879d:	je	0x18a71


0x18af5:	mov	eax, dword ptr [rsp + 0x8c]
0x18afc:	jmp	0x18618


0x18cb1:	jmp	0x18be7


0x19e7f:	mov	rdi, qword ptr [rsp + 0x1d8]
0x19e87:	cmp	qword ptr [rdi + rbp*8], 0
0x19e8c:	je	0x19f71


0x1511d:	mov	eax, dword ptr [rsp]
0x15120:	jmp	0x150e8


0x150e8:	mov	rsi, qword ptr [rsp + 0x38]
0x150ed:	xor	rsi, qword ptr fs:[0x28]
0x150f6:	jne	0x15126


0x150f8:	add	rsp, 0x48
0x150fc:	pop	rbx
0x150fd:	pop	rbp
0x150fe:	pop	r12
0x15100:	pop	r13
0x15102:	pop	r14
0x15104:	pop	r15
0x15106:	ret	


0x15126:	call	0x2560


0x1ad9d:	test	eax, eax
0x1ad9f:	jne	0x1a888


0x1ada5:	sub	rbp, 1
0x1ada9:	jmp	0x1ad38


0x1acff:	test	eax, eax
0x1ad01:	jne	0x1a888


0x1ad07:	test	r14, r14
0x1ad0a:	js	0x1ac5d


0x1ad10:	cmp	qword ptr [rbx + 8], 0
0x1ad15:	jle	0x1ac5d


0x1ad1b:	mov	r10, qword ptr [rbx + 0x10]
0x1ad1f:	xor	r14d, r14d
0x1ad22:	mov	qword ptr [rsp + 0x30], rbp
0x1ad27:	mov	rbp, r14
0x1ad2a:	mov	r14, qword ptr [rsp + 0x28]
0x1ad2f:	jmp	0x1ad4a


0x1ac41:	test	eax, eax
0x1ac43:	jne	0x1a888


0x1ac49:	add	r14, 1
0x1ac4d:	cmp	r14, qword ptr [rbx + 8]
0x1ac51:	jl	0x1ac0a


0x14177:	mov	rax, qword ptr [rbx + 0xb8]
0x1417e:	cmp	qword ptr [rax + r14*8], 0
0x14183:	je	0x142c5


0x142c5:	mov	eax, dword ptr [rsp + 0x4c]
0x142c9:	test	eax, eax
0x142cb:	je	0x14189


0x142d1:	jmp	0x1404f


0x1404f:	mov	rbx, qword ptr [rsp + 0x68]
0x14054:	xor	rbx, qword ptr fs:[0x28]
0x1405d:	jne	0x14329


0x142e0:	mov	eax, dword ptr [rsp + 0x4c]
0x142e4:	test	eax, eax
0x142e6:	jne	0x1404f


0x142ec:	mov	eax, 0xc
0x142f1:	jmp	0x1404f


0x19c1d:	mov	rax, qword ptr [rsp + 0x38]
0x19c22:	cmp	qword ptr [rax + 0x98], 0
0x19c2a:	jne	0x1a550


0x19c30:	mov	rdi, qword ptr [rsp]
0x19c34:	call	0x12390


0x1a550:	mov	rdi, qword ptr [rsp]
0x1a554:	call	0x12530


0x1a559:	mov	rdi, qword ptr [rsp + 0x218]
0x1a561:	call	0x2a10


0x1a566:	mov	rdi, qword ptr [rsp + 0x1f8]
0x1a56e:	call	0x2a10


0x1a573:	jmp	0x19c30


0x13f3b:	mov	eax, dword ptr [rsp + 0x1c]
0x13f3f:	test	eax, eax
0x13f41:	jne	0x13f68


0x567c:	mov	eax, dword ptr [r14 + 0xc]
0x5680:	shr	eax, 0x1d
0x5683:	xor	eax, 1
0x5686:	and	eax, 1
0x5689:	xor	eax, ebx
0x568b:	add	rsp, 0x18
0x568f:	pop	rbx
0x5690:	pop	rbp
0x5691:	pop	r12
0x5693:	pop	r13
0x5695:	pop	r14
0x5697:	pop	r15
0x5699:	ret	


0x1b01b:	mov	eax, dword ptr [rsp + 8]
0x1b01f:	jmp	0x1a888


0xf984:	cmp	qword ptr [rbx + 0x58], -1
0xf989:	je	0xfe42


0xfe42:	mov	rdi, rbx
0xfe45:	xor	ebp, ebp
0xfe47:	call	0x2a10


0xf98f:	cmp	word ptr [rbx + 0x70], 0xb
0xf994:	je	0xfacf


0xf99a:	mov	rdx, qword ptr [r12 + 0x20]
0xf99f:	mov	rax, qword ptr [rbx + 0x48]
0xf9a3:	mov	byte ptr [rdx + rax], 0
0xf9a7:	cmp	qword ptr [rbx + 0x58], 0
0xf9ac:	je	0xfd70


0xfd70:	mov	rdi, r12
0xfd73:	call	0xe450


0xf9b2:	movzx	eax, word ptr [rbx + 0x72]
0xf9b6:	test	al, 2
0xf9b8:	je	0xfd28


0xfd28:	test	al, 1
0xfd2a:	jne	0xf9d3


0xf9be:	mov	eax, dword ptr [r12 + 0x48]
0xf9c3:	mov	edi, dword ptr [rbx + 0x44]
0xf9c6:	test	al, 4
0xf9c8:	je	0xfdcc


0xfd30:	mov	rsi, qword ptr [rbx + 8]
0xfd34:	lea	rcx, [rip + 0x12960]
0xfd3b:	mov	edx, 0xffffffff
0xfd40:	mov	rdi, r12
0xfd43:	call	0xe5d0


0xf9d3:	mov	edi, dword ptr [r12 + 0x48]
0xf9d8:	cmp	word ptr [rbx + 0x70], 2
0xf9dd:	je	0xf9f3


0xfdcc:	test	ah, 2
0xfdcf:	je	0xff6d


0xf9ce:	call	0x2640


0xf9f3:	and	edi, 0x2000
0xf9f9:	mov	rbp, rbx
0xf9fc:	je	0xfa7a


0xf9df:	mov	ecx, dword ptr [rbx + 0x40]
0xf9e2:	test	ecx, ecx
0xf9e4:	je	0xfd88


0xff6d:	call	0x2820


0xfdd5:	mov	esi, edi
0xfdd7:	mov	edx, 1
0xfddc:	mov	rdi, r12
0xfddf:	call	0xe3e0


0xfd88:	mov	eax, 6
0xfd8d:	lea	rsi, [r12 + 0x58]
0xfd92:	mov	rdx, rbx
0xfd95:	mov	word ptr [rbx + 0x70], ax
0xfd99:	call	0xe900


0xf9ea:	mov	edx, 7
0xf9ef:	mov	word ptr [rbx + 0x70], dx
0xf9f3:	and	edi, 0x2000
0xf9f9:	mov	rbp, rbx
0xf9fc:	je	0xfa7a


0xfd9e:	mov	edi, dword ptr [r12 + 0x48]
0xfda3:	jmp	0xf9f3


0xfde4:	mov	edi, dword ptr [rbx + 0x44]
0xfde7:	jmp	0xf9ce


0xff72:	test	eax, eax
0xff74:	je	0xff89


0xff89:	mov	edi, dword ptr [rbx + 0x44]
0xff8c:	jmp	0xf9ce


0xff76:	call	0x2410


0xfd48:	test	eax, eax
0xfd4a:	je	0xf9d3


0xfd50:	call	0x2410


0xfd78:	test	eax, eax
0xfd7a:	jne	0xfd50


0xfd7c:	jmp	0xf9d3


0xfe4c:	call	0x2410


0xf944:	cmp	qword ptr [rbx + 0x58], 0
0xf949:	je	0xfb80


0xfb80:	mov	rdi, r12
0xfb83:	call	0xe450


0xf94f:	movzx	eax, word ptr [rbx + 0x74]
0xf953:	mov	rbp, rbx
0xf956:	cmp	ax, 4
0xf95a:	jne	0xfc88


0xfc88:	cmp	ax, 2
0xfc8c:	je	0xff2d


0xff2d:	mov	edx, 1
0xff32:	mov	rsi, rbx
0xff35:	mov	rdi, r12
0xff38:	call	0xde40


0xff3d:	cmp	ax, 1
0xff41:	mov	word ptr [rbx + 0x70], ax
0xff45:	je	0xffa1


0xffa1:	mov	esi, dword ptr [r12 + 0x48]
0xffa6:	test	sil, 4
0xffaa:	jne	0xff47


0xff47:	mov	esi, 3
0xff4c:	mov	rbp, rbx
0xff4f:	mov	word ptr [rbx + 0x74], si
0xff53:	jmp	0xfc92


0xffac:	mov	edi, dword ptr [r12 + 0x2c]
0xffb1:	lea	rdx, [rip + 0x126e4]
0xffb8:	call	0xe590


0xfb88:	test	eax, eax
0xfb8a:	jne	0xff91


0xfb90:	test	dword ptr [r12 + 0x48], 0x102
0xfb99:	mov	rdi, qword ptr [r12 + 0x58]
0xfb9e:	je	0xfcd8


0xff91:	or	dword ptr [r12 + 0x48], 0x2000
0xff9a:	xor	ebp, ebp
0xff9c:	jmp	0xfa7a


0xfcd8:	call	0x2a10


0xfba4:	test	rdi, rdi
0xfba7:	je	0xfbae


0xfbae:	mov	rdx, qword ptr [rbx + 0x60]
0xfbb2:	lea	rbp, [rbx + 0x108]
0xfbb9:	mov	rdi, qword ptr [r12 + 0x20]
0xfbbe:	mov	rsi, rbp
0xfbc1:	mov	qword ptr [rbx + 0x48], rdx
0xfbc5:	add	rdx, 1
0xfbc9:	call	0x2890


0xfba9:	call	0x87b0


0xfbce:	mov	esi, 0x2f
0xfbd3:	mov	rdi, rbp
0xfbd6:	call	0x25d0


0xfbdb:	test	rax, rax
0xfbde:	je	0xfc0b


0xfc0b:	mov	rax, qword ptr [r12 + 0x20]
0xfc10:	mov	edi, dword ptr [r12 + 0x48]
0xfc15:	lea	rsi, [r12 + 0x58]
0xfc1a:	mov	rbp, rbx
0xfc1d:	mov	qword ptr [rbx + 0x38], rax
0xfc21:	mov	qword ptr [rbx + 0x30], rax
0xfc25:	call	0xe520


0xfbe0:	cmp	rbp, rax
0xfbe3:	je	0xfdb0


0xfdb0:	cmp	byte ptr [rbx + 0x109], 0
0xfdb7:	jne	0xfbe9


0xfbe9:	lea	r13, [rax + 1]
0xfbed:	mov	rdi, r13
0xfbf0:	call	0x2530


0xfdbd:	jmp	0xfc0b


0xfcdd:	jmp	0xfbae


0x150e6:	xor	eax, eax
0x150e8:	mov	rsi, qword ptr [rsp + 0x38]
0x150ed:	xor	rsi, qword ptr fs:[0x28]
0x150f6:	jne	0x15126


0x54a5:	test	r13, r13
0x54a8:	jne	0x5438


0x5438:	mov	eax, dword ptr [rbx + 8]
0x543b:	mov	r13, qword ptr [rbx]
0x543e:	test	eax, eax
0x5440:	je	0x54e8


0x8869:	test	rbx, rbx
0x886c:	mov	rdi, rbx
0x886f:	jne	0x8860


0x8860:	mov	rbx, qword ptr [rdi + 8]
0x8864:	call	0x2a10


0x887a:	pop	rbx
0x887b:	mov	rdi, r12
0x887e:	pop	rbp
0x887f:	pop	r12
0x8881:	jmp	0x2a10


0x8839:	test	rbx, rbx
0x883c:	mov	rdi, rbx
0x883f:	jne	0x8830


0x8830:	mov	rbx, qword ptr [rdi + 8]
0x8834:	call	0x2a10


0xbedd:	mov	qword ptr [rip + 0x21c19c], rbx
0xbee4:	pop	rbx
0xbee5:	mov	dword ptr [rip + 0x21c189], 1
0xbeef:	pop	rbp
0xbef0:	pop	r12
0xbef2:	ret	


0xf775:	cmp	qword ptr [rbx + 0x58], 0
0xf77a:	mov	rdi, rbx
0xf77d:	js	0xf79b


0xf79b:	mov	rdi, rbx
0xf79e:	call	0x2a10


0xf791:	cmp	qword ptr [rbx + 0x58], 0
0xf796:	mov	rdi, rbx
0xf799:	jns	0xf77f


0xf88b:	jmp	0xf7a3


0x54c4:	mov	rdi, rbx
0x54c7:	mov	rbx, rbp
0x54ca:	call	0x2a10


0x54cf:	test	rbp, rbp
0x54d2:	jne	0x54b8


0x54b8:	mov	rdi, qword ptr [rbx + 8]
0x54bc:	mov	rbp, qword ptr [rbx]
0x54bf:	call	0x2a10


0xbeb7:	mov	qword ptr [rip + 0x21c1ce], 0x100
0xbec2:	mov	qword ptr [rip + 0x21c1cf], rbx
0xbec9:	lea	rbx, [rip + 0x21c1c0]
0xbed0:	cmp	r12, rbx
0xbed3:	je	0xbee4


0xca6d:	xor	eax, eax
0xca6f:	pop	rbx
0xca70:	ret	


0xe1dd:	test	rbp, rbp
0xe1e0:	jne	0xe1c0


0xe1e2:	add	rsp, 8
0xe1e6:	pop	rbx
0xe1e7:	pop	rbp
0xe1e8:	ret	


0xe1c0:	mov	rdi, qword ptr [rbx + 0x18]
0xe1c4:	mov	rbp, qword ptr [rbx + 0x10]
0xe1c8:	test	rdi, rdi
0xe1cb:	je	0xe1d2


0xf7ba:	mov	rdi, qword ptr [rbp + 0x20]
0xf7be:	call	0x2a10


0xf7c3:	mov	eax, dword ptr [rbp + 0x48]
0xf7c6:	test	ah, 2
0xf7c9:	je	0xf830


0xf830:	test	al, 4
0xf832:	jne	0xf7d6


0xf7cb:	mov	edi, dword ptr [rbp + 0x2c]
0xf7ce:	test	edi, edi
0xf7d0:	jns	0xf860


0xf834:	mov	edi, dword ptr [rbp + 0x28]
0xf837:	call	0x2820


0xf7d6:	xor	ebx, ebx
0xf7d8:	lea	rdi, [rbp + 0x60]
0xf7dc:	call	0xe200


0xf860:	call	0x2640


0xf865:	test	eax, eax
0xf867:	je	0xf7d6


0xf86d:	call	0x2410


0xf7e1:	mov	rdi, qword ptr [rbp + 0x50]
0xf7e5:	test	rdi, rdi
0xf7e8:	je	0xf7ef


0xf7ef:	test	dword ptr [rbp + 0x48], 0x102
0xf7f6:	mov	rdi, qword ptr [rbp + 0x58]
0xf7fa:	je	0xf820


0xf7ea:	call	0x87b0


0xf820:	call	0x2a10


0xf7fc:	test	rdi, rdi
0xf7ff:	je	0xf806


0xf806:	mov	rdi, rbp
0xf809:	call	0x2a10


0xf801:	call	0x87b0


0xf83c:	test	eax, eax
0xf83e:	jne	0xf890


0xf840:	mov	edi, dword ptr [rbp + 0x28]
0xf843:	call	0x2640


0xf890:	call	0x2410


0xf848:	test	eax, eax
0xf84a:	je	0xf7d6


0xf84c:	call	0x2410


0xf80e:	test	ebx, ebx
0xf810:	jne	0xf8c1


0xf816:	mov	eax, ebx
0xf818:	pop	rbx
0xf819:	pop	rbp
0xf81a:	pop	r12
0xf81c:	ret	


0xf8c1:	call	0x2410


0xf825:	jmp	0xf806


0x1257e:	mov	rdi, rbp
0x12581:	call	0x2a10


0x12586:	cmp	qword ptr [r12 + 0x20], rbx
0x1258b:	jg	0x12568


0x12568:	mov	rax, qword ptr [r12 + 0x28]
0x1256d:	mov	rbp, qword ptr [rax + rbx*8]
0x12571:	add	rbx, 1
0x12575:	mov	rdi, qword ptr [rbp + 0x20]
0x12579:	call	0x2a10


0x12597:	mov	rax, qword ptr [r12 + 0x10]
0x1259c:	test	rax, rax
0x1259f:	je	0x125b4


0x125b4:	mov	rdi, r12
0x125b7:	add	r13, 1
0x125bb:	call	0x2a10


0x125a1:	mov	rdi, qword ptr [rax + 0x10]
0x125a5:	call	0x2a10


0x125aa:	mov	rdi, qword ptr [r12 + 0x10]
0x125af:	call	0x2a10


0x125c0:	cmp	qword ptr [r14 + 0xe8], r13
0x125c7:	jg	0x12550


0x12550:	mov	rax, qword ptr [r14 + 0xf8]
0x12557:	mov	r12, qword ptr [rax + r13*8]
0x1255b:	cmp	qword ptr [r12 + 0x20], 0
0x12561:	jle	0x1258d


0xbe9c:	cmp	rbx, rbp
0xbe9f:	jne	0xbe90


0xbe90:	mov	rdi, qword ptr [rbx]
0xbe93:	add	rbx, 0x10
0xbe97:	call	0x2a10


0xe4ed:	mov	qword ptr [rbx], 0
0xe4f4:	call	0x2410


0x12418:	cmp	qword ptr [r12 + 0x10], 0
0x1241e:	je	0x12473


0x12473:	mov	rdi, qword ptr [r12 + 0x28]
0x12478:	call	0x2a10


0x12420:	xor	ebx, ebx
0x12422:	xor	ebp, ebp
0x12424:	nop	dword ptr [rax]
0x12428:	mov	rax, qword ptr [r12 + 0x30]
0x1242d:	test	rax, rax
0x12430:	je	0x1243c


0x1243c:	mov	rax, qword ptr [r12 + 0x38]
0x12441:	test	rax, rax
0x12444:	je	0x12450


0x12432:	mov	rdi, qword ptr [rax + rbx + 0x10]
0x12437:	call	0x2a10


0x12450:	mov	rax, qword ptr [r12 + 0x28]
0x12455:	test	rax, rax
0x12458:	je	0x12464


0x12446:	mov	rdi, qword ptr [rax + rbx + 0x10]
0x1244b:	call	0x2a10


0x12464:	add	rbp, 1
0x12468:	add	rbx, 0x18
0x1246c:	cmp	qword ptr [r12 + 0x10], rbp
0x12471:	ja	0x12428


0x1245a:	mov	rdi, qword ptr [rax + rbx + 0x10]
0x1245f:	call	0x2a10


0x12428:	mov	rax, qword ptr [r12 + 0x30]
0x1242d:	test	rax, rax
0x12430:	je	0x1243c


0x1247d:	mov	rdi, qword ptr [r12 + 0x30]
0x12482:	call	0x2a10


0x12487:	mov	rdi, qword ptr [r12 + 0x38]
0x1248c:	call	0x2a10


0x12491:	mov	rdi, qword ptr [r12]
0x12495:	call	0x2a10


0x1249a:	mov	rdi, qword ptr [r12 + 0x40]
0x1249f:	test	rdi, rdi
0x124a2:	je	0x124f7


0x124f7:	call	0x2a10


0x124a4:	xor	r14d, r14d
0x124a7:	xor	r13d, r13d
0x124aa:	nop	word ptr [rax + rax]
0x124b0:	lea	rbp, [rdi + r14]
0x124b4:	cmp	qword ptr [rbp], 0
0x124b9:	jle	0x124d7


0x124d7:	mov	rdi, qword ptr [rbp + 0x10]
0x124db:	add	r13, 1
0x124df:	add	r14, 0x18
0x124e3:	call	0x2a10


0x124bb:	xor	ebx, ebx
0x124bd:	nop	dword ptr [rax]
0x124c0:	mov	rax, qword ptr [rbp + 0x10]
0x124c4:	mov	rdi, qword ptr [rax + rbx*8]
0x124c8:	add	rbx, 1
0x124cc:	call	0x12330


0x124e8:	cmp	qword ptr [r12 + 0x88], r13
0x124f0:	mov	rdi, qword ptr [r12 + 0x40]
0x124f5:	jae	0x124b0


0x124b0:	lea	rbp, [rdi + r14]
0x124b4:	cmp	qword ptr [rbp], 0
0x124b9:	jle	0x124d7


0x124fc:	mov	rdi, qword ptr [r12 + 0x78]
0x12501:	lea	rax, [rip + 0x108b8]
0x12508:	cmp	rdi, rax
0x1250b:	je	0x12512


0x12512:	mov	rdi, qword ptr [r12 + 0xe0]
0x1251a:	call	0x2a10


0x1250d:	call	0x2a10


0x1251f:	pop	rbx
0x12520:	mov	rdi, r12
0x12523:	pop	rbp
0x12524:	pop	r12
0x12526:	pop	r13
0x12528:	pop	r14
0x1252a:	jmp	0x2a10


0x15d8a:	mov	rax, qword ptr [rbp + 0x10]
0x15d8e:	mov	rdi, qword ptr [rax + rbx + 0x10]
0x15d93:	add	rbx, 0x30
0x15d97:	call	0x2a10


0x15d9c:	cmp	r12, qword ptr [rbp]
0x15da0:	jl	0x15d78


0x15d78:	mov	rax, qword ptr [rbp + 0x10]
0x15d7c:	add	r12, 1
0x15d80:	mov	rdi, qword ptr [rax + rbx + 0x28]
0x15d85:	call	0x2a10


0x1ec09:	mov	rdi, qword ptr [rbx + 0x28]
0x1ec0d:	mov	qword ptr [rbx + 0x20], 0
0x1ec15:	call	0x2a10


0x1ec1a:	mov	qword ptr [rbx + 0x28], 0
0x1ec22:	pop	rbx
0x1ec23:	ret	


0x548b:	cmp	rbp, qword ptr [rbx + 0x20]
0x548f:	mov	rdi, qword ptr [rbx + 0x10]
0x5493:	jb	0x546e


0x1ede8:	test	rbx, rbx
0x1edeb:	mov	rdi, rbx
0x1edee:	jne	0x1ede0


0x1edf0:	pop	rbx
0x1edf1:	ret	


0x1ede0:	mov	rbx, qword ptr [rdi]
0x1ede3:	call	0x2a10


0x1030c:	mov	rdi, qword ptr [rbx + 8]
0x10310:	call	0x2a10


0x10315:	mov	rdi, qword ptr [rbx + 0x10]
0x10319:	call	0x2a10


0x1031e:	test	byte ptr [rbx + 0x28], 4
0x10322:	je	0x1032d


0x1032d:	mov	rdi, rbx
0x10330:	pop	rbx
0x10331:	jmp	0x2a10


0x10324:	mov	rdi, qword ptr [rbx + 0x18]
0x10328:	call	0x2a10


0x11dcc:	mov	rdi, qword ptr [rbx + 8]
0x11dd0:	call	0x2a10


0x11dd5:	mov	rdi, qword ptr [rbx + 0x10]
0x11dd9:	call	0x2a10


0x11dde:	mov	rdi, qword ptr [rbx + 0x18]
0x11de2:	call	0x2a10


0x11de7:	mov	rdi, rbx
0x11dea:	pop	rbx
0x11deb:	jmp	0x2a10


0x1233d:	mov	rdi, qword ptr [rbx + 0x48]
0x12341:	call	0x2a10


0x12346:	mov	rax, qword ptr [rbx + 0x50]
0x1234a:	lea	rdx, [rbx + 8]
0x1234e:	cmp	rax, rdx
0x12351:	je	0x12365


0x12365:	mov	rdi, qword ptr [rbx + 0x18]
0x12369:	call	0x2a10


0x12353:	mov	rdi, qword ptr [rax + 0x10]
0x12357:	call	0x2a10


0x1235c:	mov	rdi, qword ptr [rbx + 0x50]
0x12360:	call	0x2a10


0x1236e:	mov	rdi, qword ptr [rbx + 0x60]
0x12372:	call	0x2a10


0x12377:	mov	rdi, qword ptr [rbx + 0x58]
0x1237b:	call	0x2a10


0x12380:	mov	rdi, rbx
0x12383:	pop	rbx
0x12384:	jmp	0x2a10


0x1239d:	mov	rdi, qword ptr [rbx + 0x18]
0x123a1:	call	0x2a10


0x123a6:	cmp	byte ptr [rbx + 0x8b], 0
0x123ad:	jne	0x123b8


0x123af:	pop	rbx
0x123b0:	ret	


0x123b8:	mov	rdi, qword ptr [rbx + 8]
0x123bc:	pop	rbx
0x123bd:	jmp	0x2a10


0xfbf5:	lea	rdx, [rax + 1]
0xfbf9:	mov	r14, rax
0xfbfc:	mov	rsi, r13
0xfbff:	mov	rdi, rbp
0xfc02:	call	0x2890


0xfc07:	mov	qword ptr [rbx + 0x60], r14
0xfc0b:	mov	rax, qword ptr [r12 + 0x20]
0xfc10:	mov	edi, dword ptr [r12 + 0x48]
0xfc15:	lea	rsi, [r12 + 0x58]
0xfc1a:	mov	rbp, rbx
0xfc1d:	mov	qword ptr [rbx + 0x38], rax
0xfc21:	mov	qword ptr [rbx + 0x30], rax
0xfc25:	call	0xe520


0xa36a:	mov	byte ptr [rsp + 0x60], 0
0xa36f:	mov	qword ptr [rsp + 0x58], rax
0xa374:	mov	byte ptr [rsp + 0x4c], 1
0xa379:	jmp	0xa15b


0xa34a:	mov	byte ptr [rsp + 0x20], 0
0xa34f:	mov	qword ptr [rsp + 0x18], rax
0xa354:	mov	byte ptr [rsp + 0xc], 1
0xa359:	jmp	0xa145


0x52aa:	mov	byte ptr [rsp + 0x30], 0
0x52af:	mov	qword ptr [rsp + 0x28], rax
0x52b4:	mov	r13d, dword ptr [rsp + 0x34]
0x52b9:	mov	byte ptr [rsp + 0x1c], 1
0x52be:	jmp	0x518b


0x1eb91:	test	r12, r12
0x1eb94:	lea	rbx, [rax + 1]
0x1eb98:	je	0x1ebad


0x1ebad:	add	rsp, 8
0x1ebb1:	mov	rax, rbx
0x1ebb4:	pop	rbx
0x1ebb5:	pop	rbp
0x1ebb6:	pop	r12
0x1ebb8:	pop	r13
0x1ebba:	ret	


0x1eb9a:	cmp	rbx, r12
0x1eb9d:	mov	rdx, rbx
0x1eba0:	ja	0x1ebc8


0x1eba2:	mov	rsi, r13
0x1eba5:	mov	rdi, rbp
0x1eba8:	call	0x2710


0x1ebc8:	lea	rdx, [r12 - 1]
0x1ebcd:	mov	byte ptr [rbp + r12 - 1], 0
0x1ebd3:	jmp	0x1eba2


0x910c:	mov	rcx, qword ptr [r13 + 0x10]
0x9110:	mov	r13, qword ptr [r13 + 8]
0x9114:	mov	rbp, rax
0x9117:	sub	rax, 1
0x911b:	mov	edx, 1
0x9120:	cmp	rax, 0x10
0x9124:	lea	rax, [rip + 0x19571]
0x912b:	mov	rdi, r13
0x912e:	cmovae	rbp, rdx
0x9132:	mov	qword ptr [rsp + 0x38], rcx
0x9137:	cmovae	r14, rax
0x913b:	call	0x2530


0x9140:	cmp	rax, 0x11
0x9144:	lea	rax, [rip + 0x18e96]
0x914b:	mov	rdi, qword ptr [rsp + 0x10]
0x9150:	mov	rcx, qword ptr [rsp + 0x18]
0x9155:	cmovae	r13, rax
0x9159:	mov	rax, qword ptr [rsp]
0x915d:	add	rax, 0x287
0x9163:	cmp	rdi, rcx
0x9166:	mov	qword ptr [rsp + 8], rax
0x916b:	ja	0x92b8


0x9171:	xor	edx, edx
0x9173:	mov	rax, rcx
0x9176:	div	rdi
0x9179:	test	rdx, rdx
0x917c:	mov	rdi, rax
0x917f:	je	0x94e0


0x92b8:	test	rcx, rcx
0x92bb:	je	0x9185


0x94e0:	mov	rsi, rbx
0x94e3:	xor	edx, edx
0x94e5:	imul	rsi, rax
0x94e9:	mov	rax, rsi
0x94ec:	div	rdi
0x94ef:	cmp	rax, rbx
0x94f2:	jne	0x9185


0x9185:	mov	qword ptr [rsp + 0x18], rcx
0x918a:	test	rcx, rcx
0x918d:	fild	qword ptr [rsp + 0x18]
0x9191:	jns	0x9199


0x92c1:	mov	rax, qword ptr [rsp + 0x10]
0x92c6:	xor	edx, edx
0x92c8:	div	rcx
0x92cb:	test	rdx, rdx
0x92ce:	mov	r8, rax
0x92d1:	jne	0x9185


0x94f8:	xor	edi, edi
0x94fa:	xor	r9d, r9d
0x94fd:	jmp	0x9309


0x9193:	fadd	dword ptr [rip + 0x18833]
0x9199:	mov	rax, qword ptr [rsp + 0x10]
0x919e:	mov	qword ptr [rsp + 0x18], rax
0x91a3:	test	rax, rax
0x91a6:	fild	qword ptr [rsp + 0x18]
0x91aa:	jns	0x91b2


0x9199:	mov	rax, qword ptr [rsp + 0x10]
0x919e:	mov	qword ptr [rsp + 0x18], rax
0x91a3:	test	rax, rax
0x91a6:	fild	qword ptr [rsp + 0x18]
0x91aa:	jns	0x91b2


0x92d7:	mov	rax, rbx
0x92da:	xor	edx, edx
0x92dc:	div	r8
0x92df:	mov	rbx, rax
0x92e2:	lea	rax, [rdx + rdx*4]
0x92e6:	xor	edx, edx
0x92e8:	mov	rsi, rbx
0x92eb:	add	rax, rax
0x92ee:	div	r8
0x92f1:	add	rdx, rdx
0x92f4:	mov	r9d, eax
0x92f7:	cmp	r8, rdx
0x92fa:	jbe	0x9888


0x9309:	mov	ecx, r12d
0x930c:	mov	r8, qword ptr [rsp + 8]
0x9311:	mov	ebx, 0xffffffff
0x9316:	and	ecx, 0x10
0x9319:	je	0x96e0


0x91ac:	fadd	dword ptr [rip + 0x1881a]
0x91b2:	fdivp	st(1)
0x91b4:	mov	qword ptr [rsp + 0x18], rbx
0x91b9:	test	rbx, rbx
0x91bc:	fild	qword ptr [rsp + 0x18]
0x91c0:	jns	0x91c8


0x91b2:	fdivp	st(1)
0x91b4:	mov	qword ptr [rsp + 0x18], rbx
0x91b9:	test	rbx, rbx
0x91bc:	fild	qword ptr [rsp + 0x18]
0x91c0:	jns	0x91c8


0x9888:	setb	dil
0x988c:	movzx	edi, dil
0x9890:	add	edi, 2
0x9893:	jmp	0x9309


0x9300:	xor	edi, edi
0x9302:	test	rdx, rdx
0x9305:	setne	dil
0x9309:	mov	ecx, r12d
0x930c:	mov	r8, qword ptr [rsp + 8]
0x9311:	mov	ebx, 0xffffffff
0x9316:	and	ecx, 0x10
0x9319:	je	0x96e0


0x96e0:	cmp	r15d, 1
0x96e4:	je	0x9860


0x931f:	mov	r8d, dword ptr [rsp + 0x34]
0x9324:	cmp	r8, rsi
0x9327:	mov	r11, r8
0x932a:	ja	0x98a0


0x91c2:	fadd	dword ptr [rip + 0x18804]
0x91c8:	test	r12b, 0x10
0x91cc:	fmulp	st(1)
0x91ce:	je	0x9398


0x91c8:	test	r12b, 0x10
0x91cc:	fmulp	st(1)
0x91ce:	je	0x9398


0x9860:	mov	rax, rsi
0x9863:	movsxd	rdi, edi
0x9866:	and	eax, 1
0x9869:	add	rax, rdi
0x986c:	setne	al
0x986f:	movzx	eax, al
0x9872:	add	r9d, eax
0x9875:	cmp	r9d, 5
0x9879:	jg	0x96f6


0x96ea:	test	r15d, r15d
0x96ed:	jne	0x9710


0x9330:	xor	ebx, ebx
0x9332:	jmp	0x9357


0x98a0:	mov	r8, qword ptr [rsp + 8]
0x98a5:	xor	ebx, ebx
0x98a7:	jmp	0x96e0


0x9398:	cmp	r15d, 1
0x939c:	je	0x93ac


0x91d4:	fild	dword ptr [rsp + 0x34]
0x91d8:	xor	ebx, ebx
0x91da:	fld	st(0)
0x91dc:	jmp	0x91e4


0x987f:	jmp	0x9710


0x96f6:	add	rsi, 1
0x96fa:	test	ecx, ecx
0x96fc:	je	0x9710


0x96ef:	add	edi, r9d
0x96f2:	test	edi, edi
0x96f4:	jle	0x9710


0x9710:	mov	r15, r8
0x9713:	movabs	rcx, 0xcccccccccccccccd
0x971d:	nop	dword ptr [rax]
0x9720:	mov	rax, rsi
0x9723:	sub	r15, 1
0x9727:	mul	rcx
0x972a:	shr	rdx, 3
0x972e:	lea	rax, [rdx + rdx*4]
0x9732:	add	rax, rax
0x9735:	sub	rsi, rax
0x9738:	add	esi, 0x30
0x973b:	test	rdx, rdx
0x973e:	mov	byte ptr [r15], sil
0x9741:	mov	rsi, rdx
0x9744:	jne	0x9720


0x9357:	mov	rax, rsi
0x935a:	xor	edx, edx
0x935c:	mov	esi, edi
0x935e:	div	r8
0x9361:	sar	esi, 1
0x9363:	mov	r10, rax
0x9366:	lea	eax, [rdx + rdx*4]
0x9369:	xor	edx, edx
0x936b:	lea	eax, [r9 + rax*2]
0x936f:	div	r11d
0x9372:	lea	edx, [rsi + rdx*2]
0x9375:	mov	r9d, eax
0x9378:	mov	rsi, r10
0x937b:	add	edi, edx
0x937d:	cmp	r11d, edx
0x9380:	ja	0x9338


0x93ac:	sub	rsp, 0x10
0x93b0:	lea	rcx, [rip + 0x18629]
0x93b7:	mov	esi, 1
0x93bc:	mov	rbx, qword ptr [rsp + 0x10]
0x93c1:	mov	rdx, -1
0x93c8:	xor	eax, eax
0x93ca:	fstp	xword ptr [rsp]
0x93cd:	xor	ebp, ebp
0x93cf:	mov	rdi, rbx
0x93d2:	call	0x2a00


0x939e:	fld	xword ptr [rip + 0x1868c]
0x93a4:	fucomip	st(1)
0x93a6:	ja	0x9630


0x91e4:	fld	st(0)
0x91e6:	add	ebx, 1
0x91e9:	fmul	st(2)
0x91eb:	fxch	st(3)
0x91ed:	fucomi	st(3)
0x91ef:	jb	0x9200


0x96fe:	mov	eax, dword ptr [rsp + 0x34]
0x9702:	cmp	rax, rsi
0x9705:	je	0x98d0


0x9746:	jmp	0x9420


0x9720:	mov	rax, rsi
0x9723:	sub	r15, 1
0x9727:	mul	rcx
0x972a:	shr	rdx, 3
0x972e:	lea	rax, [rdx + rdx*4]
0x9732:	add	rax, rax
0x9735:	sub	rsi, rax
0x9738:	add	esi, 0x30
0x973b:	test	rdx, rdx
0x973e:	mov	byte ptr [r15], sil
0x9741:	mov	rsi, rdx
0x9744:	jne	0x9720


0x9382:	cmp	r11d, edi
0x9385:	setb	dil
0x9389:	movzx	edi, dil
0x938d:	add	edi, 2
0x9390:	jmp	0x9342


0x9338:	test	edi, edi
0x933a:	setne	dil
0x933e:	movzx	edi, dil
0x9342:	add	ebx, 1
0x9345:	cmp	r8, r10
0x9348:	ja	0x965d


0x2a00:	jmp	qword ptr [rip + 0x2255ba]


0x9630:	sub	rsp, 0x10
0x9634:	mov	edi, r15d
0x9637:	fstp	xword ptr [rsp]
0x963a:	call	0x8fd0


0x9200:	fstp	st(2)
0x9202:	fstp	st(2)
0x9204:	mov	ecx, dword ptr [rsp + 0x30]
0x9208:	add	rbp, 1
0x920c:	xor	eax, eax
0x920e:	fdivrp	st(1)
0x9210:	test	ecx, ecx
0x9212:	sete	al
0x9215:	cmp	r15d, 1
0x9219:	lea	rax, [rbp + rax + 1]
0x921e:	mov	qword ptr [rsp + 0x18], rax
0x9223:	je	0x9790


0x91f1:	cmp	ebx, 8
0x91f4:	jne	0x91e0


0x98d0:	cmp	ebx, 8
0x98d3:	je	0x9710


0x9420:	test	r12b, 4
0x9424:	jne	0x9508


0x9342:	add	ebx, 1
0x9345:	cmp	r8, r10
0x9348:	ja	0x965d


0x934e:	cmp	ebx, 8
0x9351:	je	0x98f8


0x965d:	cmp	r10, 9
0x9661:	ja	0x98f8




0x9790:	sub	rsp, 0x10
0x9794:	lea	rcx, [rip + 0x1824b]
0x979b:	mov	rdx, -1
0x97a2:	fld	st(0)
0x97a4:	fstp	xword ptr [rsp]
0x97a7:	mov	r14, qword ptr [rsp + 0x10]
0x97ac:	mov	esi, 1
0x97b1:	xor	eax, eax
0x97b3:	mov	rdi, r14
0x97b6:	fstp	xword ptr [rsp + 0x30]
0x97ba:	call	0x2a00


0x9229:	fld	xword ptr [rip + 0x18801]
0x922f:	fucomip	st(1)
0x9231:	ja	0x9608


0x91f6:	fstp	st(2)
0x91f8:	fstp	st(2)
0x91fa:	jmp	0x9204


0x91e0:	fstp	st(1)
0x91e2:	fxch	st(2)
0x91e4:	fld	st(0)
0x91e6:	add	ebx, 1
0x91e9:	fmul	st(2)
0x91eb:	fxch	st(3)
0x91ed:	fucomi	st(3)
0x91ef:	jb	0x9200


0x98d9:	add	ebx, 1
0x98dc:	test	r12b, 8
0x98e0:	je	0x99a2


0x942a:	test	r12b, 0x80
0x942e:	je	0x94a7


0x9508:	mov	r14, r8
0x950b:	mov	rdi, r13
0x950e:	mov	qword ptr [rsp + 0x48], r8
0x9513:	sub	r14, r15
0x9516:	mov	rbp, -1
0x951d:	call	0x2530


0x98f8:	mov	r8, qword ptr [rsp + 8]
0x98fd:	jmp	0x96e0


0x9667:	cmp	r15d, 1
0x966b:	je	0x9922


0x9237:	fld	st(0)
0x9239:	fstp	xword ptr [rsp + 0x20]
0x923d:	sub	rsp, 0x10
0x9241:	lea	rcx, [rip + 0x1879e]
0x9248:	mov	esi, 1
0x924d:	mov	rdx, -1
0x9254:	xor	eax, eax
0x9256:	mov	r14, qword ptr [rsp + 0x10]
0x925b:	mov	rdi, r14
0x925e:	fstp	xword ptr [rsp]
0x9261:	call	0x2a00


0x9608:	sub	rsp, 0x10
0x960c:	mov	edi, r15d
0x960f:	fld	st(0)
0x9611:	fstp	xword ptr [rsp]
0x9614:	fstp	xword ptr [rsp + 0x30]
0x9618:	call	0x8fd0


0x9204:	mov	ecx, dword ptr [rsp + 0x30]
0x9208:	add	rbp, 1
0x920c:	xor	eax, eax
0x920e:	fdivrp	st(1)
0x9210:	test	ecx, ecx
0x9212:	sete	al
0x9215:	cmp	r15d, 1
0x9219:	lea	rax, [rbp + rax + 1]
0x921e:	mov	qword ptr [rsp + 0x18], rax
0x9223:	je	0x9790


0x99a2:	mov	rax, rbp
0x99a5:	mov	byte ptr [r8 - 1], 0x30
0x99aa:	not	rax
0x99ad:	add	r8, rax
0x99b0:	cmp	ebp, 8
0x99b3:	mov	eax, ebp
0x99b5:	jae	0x99fa


0x98e6:	lea	r15, [r8 - 1]
0x98ea:	mov	byte ptr [r8 - 1], 0x31
0x98ef:	jmp	0x9420


0x94a7:	mov	rax, qword ptr [rsp + 8]
0x94ac:	mov	rcx, qword ptr [rsp + 0x88]
0x94b4:	xor	rcx, qword ptr fs:[0x28]
0x94bd:	mov	byte ptr [rax], 0
0x94c0:	mov	rax, r15
0x94c3:	jne	0x9a5b


0x9430:	cmp	ebx, -1
0x9433:	je	0x9750


0x9922:	mov	edx, eax
0x9924:	and	edx, 1
0x9927:	add	edx, edi
0x9929:	cmp	edx, 2
0x992c:	setg	dl
0x992f:	jmp	0x9680


0x9671:	test	r15d, r15d
0x9674:	sete	dl
0x9677:	test	edi, edi
0x9679:	setg	r8b
0x967d:	and	edx, r8d
0x9680:	test	dl, dl
0x9682:	je	0x9909


0x99b7:	and	ebp, 4
0x99ba:	jne	0x9a71


0x99fa:	mov	rax, qword ptr [r14]
0x99fd:	lea	rcx, [r8 + 8]
0x9a01:	and	rcx, 0xfffffffffffffff8
0x9a05:	mov	qword ptr [r8], rax
0x9a08:	mov	eax, ebp
0x9a0a:	mov	rdx, qword ptr [r14 + rax - 8]
0x9a0f:	mov	qword ptr [r8 + rax - 8], rdx
0x9a14:	mov	rax, r8
0x9a17:	sub	rax, rcx
0x9a1a:	sub	r14, rax
0x9a1d:	add	eax, ebp
0x9a1f:	and	eax, 0xfffffff8
0x9a22:	cmp	eax, 8
0x9a25:	jb	0x98e6


0x94c9:	add	rsp, 0x98
0x94d0:	pop	rbx
0x94d1:	pop	rbp
0x94d2:	pop	r12
0x94d4:	pop	r13
0x94d6:	pop	r14
0x94d8:	pop	r15
0x94da:	ret	


0x9a5b:	call	0x2560


0x9750:	mov	rcx, qword ptr [rsp + 0x10]
0x9755:	cmp	rcx, 1
0x9759:	jbe	0x9902


0x9439:	mov	eax, r12d
0x943c:	and	eax, 0x100
0x9441:	mov	ecx, eax
0x9443:	or	ecx, ebx
0x9445:	je	0x94a7


0x9680:	test	dl, dl
0x9682:	je	0x9909


0x9909:	test	eax, eax
0x990b:	jne	0x9696


0x9688:	lea	r9d, [rax + 1]
0x968c:	cmp	r9d, 0xa
0x9690:	je	0x9991


0x99c0:	test	eax, eax
0x99c2:	je	0x98e6


0x9a71:	mov	edx, dword ptr [r14]
0x9a74:	mov	dword ptr [r8], edx
0x9a77:	mov	edx, dword ptr [r14 + rax - 4]
0x9a7c:	mov	dword ptr [r8 + rax - 4], edx
0x9a81:	jmp	0x98e6


0x9a2b:	and	eax, 0xfffffff8
0x9a2e:	xor	edx, edx
0x9a30:	mov	esi, edx
0x9a32:	add	edx, 8
0x9a35:	mov	rdi, qword ptr [r14 + rsi]
0x9a39:	cmp	edx, eax
0x9a3b:	mov	qword ptr [rcx + rsi], rdi
0x9a3f:	jb	0x9a30


0x9902:	xor	ebx, ebx
0x9904:	jmp	0x9439


0x975f:	mov	edx, dword ptr [rsp + 0x34]
0x9763:	mov	ebx, 1
0x9768:	mov	eax, 1
0x976d:	imul	rax, rdx
0x9771:	cmp	rcx, rax
0x9774:	jbe	0x9439


0x9447:	and	r12d, 0x40
0x944b:	jne	0x95e8


0x9911:	test	r12b, 8
0x9915:	jne	0x9934


0x9696:	add	r9d, 0x30
0x969a:	mov	rax, qword ptr [rsp]
0x969e:	lea	r8, [rax + 0x286]
0x96a5:	mov	byte ptr [rax + 0x286], r9b
0x96ac:	mov	eax, ebp
0x96ae:	sub	r8, rbp
0x96b1:	cmp	ebp, 8
0x96b4:	jae	0x9941


0x9991:	lea	rsi, [r10 + 1]
0x9995:	cmp	rsi, 0xa
0x9999:	je	0x99f0


0x99c8:	movzx	edx, byte ptr [r14]
0x99cc:	test	al, 2
0x99ce:	mov	byte ptr [r8], dl
0x99d1:	je	0x98e6


0x9a30:	mov	esi, edx
0x9a32:	add	edx, 8
0x9a35:	mov	rdi, qword ptr [r14 + rsi]
0x9a39:	cmp	edx, eax
0x9a3b:	mov	qword ptr [rcx + rsi], rdi
0x9a3f:	jb	0x9a30


0x9a41:	jmp	0x98e6


0x977a:	add	ebx, 1
0x977d:	cmp	ebx, 8
0x9780:	jne	0x976d


0x9451:	test	ebx, ebx
0x9453:	je	0x9a86


0x95e8:	mov	rcx, qword ptr [rsp]
0x95ec:	lea	rdi, [rcx + 0x288]
0x95f3:	mov	byte ptr [rcx + 0x287], 0x20
0x95fa:	mov	qword ptr [rsp + 8], rdi
0x95ff:	jmp	0x9451


0x9917:	mov	r9d, 0x30
0x991d:	jmp	0x969a


0x9934:	mov	r8, qword ptr [rsp + 8]
0x9939:	xor	r9d, r9d
0x993c:	jmp	0x96e0


0x96ba:	test	bpl, 4
0x96be:	jne	0x9a46


0x9941:	mov	rax, qword ptr [r14]
0x9944:	mov	r9, r14
0x9947:	mov	qword ptr [r8], rax
0x994a:	mov	eax, ebp
0x994c:	mov	rdx, qword ptr [r14 + rax - 8]
0x9951:	mov	qword ptr [r8 + rax - 8], rdx
0x9956:	lea	rdx, [r8 + 8]
0x995a:	mov	rax, r8
0x995d:	and	rdx, 0xfffffffffffffff8
0x9961:	sub	rax, rdx
0x9964:	sub	r9, rax
0x9967:	add	eax, ebp
0x9969:	and	eax, 0xfffffff8
0x996c:	cmp	eax, 8
0x996f:	jb	0x96d7


0x99f0:	mov	r8, qword ptr [rsp + 8]
0x99f5:	jmp	0x96d7


0x999b:	xor	edi, edi
0x999d:	jmp	0x9911


0x99d7:	movzx	edx, word ptr [r14 + rax - 2]
0x99dd:	mov	word ptr [r8 + rax - 2], dx
0x99e3:	jmp	0x98e6


0x9782:	jmp	0x9439


0x976d:	imul	rax, rdx
0x9771:	cmp	rcx, rax
0x9774:	jbe	0x9439


0x9a86:	test	eax, eax
0x9a88:	mov	rdx, qword ptr [rsp + 8]
0x9a8d:	jne	0x949b


0x9459:	cmp	ebx, 1
0x945c:	jne	0x946c


0x969a:	mov	rax, qword ptr [rsp]
0x969e:	lea	r8, [rax + 0x286]
0x96a5:	mov	byte ptr [rax + 0x286], r9b
0x96ac:	mov	eax, ebp
0x96ae:	sub	r8, rbp
0x96b1:	cmp	ebp, 8
0x96b4:	jae	0x9941


0x96c4:	test	eax, eax
0x96c6:	je	0x96d7


0x9a46:	mov	edx, dword ptr [r14]
0x9a49:	mov	dword ptr [r8], edx
0x9a4c:	mov	edx, dword ptr [r14 + rax - 4]
0x9a51:	mov	dword ptr [r8 + rax - 4], edx
0x9a56:	jmp	0x96d7


0x96d7:	xor	edi, edi
0x96d9:	xor	r9d, r9d
0x96dc:	nop	dword ptr [rax]
0x96e0:	cmp	r15d, 1
0x96e4:	je	0x9860


0x9975:	and	eax, 0xfffffff8
0x9978:	xor	edi, edi
0x997a:	mov	r10d, edi
0x997d:	add	edi, 8
0x9980:	mov	r11, qword ptr [r9 + r10]
0x9984:	cmp	edi, eax
0x9986:	mov	qword ptr [rdx + r10], r11
0x998a:	jb	0x997a


0x9a93:	jmp	0x94a7


0x949b:	lea	rax, [rdx + 1]
0x949f:	mov	byte ptr [rdx], 0x42
0x94a2:	mov	qword ptr [rsp + 8], rax
0x94a7:	mov	rax, qword ptr [rsp + 8]
0x94ac:	mov	rcx, qword ptr [rsp + 0x88]
0x94b4:	xor	rcx, qword ptr fs:[0x28]
0x94bd:	mov	byte ptr [rax], 0
0x94c0:	mov	rax, r15
0x94c3:	jne	0x9a5b


0x945e:	mov	r9d, dword ptr [rsp + 0x30]
0x9463:	test	r9d, r9d
0x9466:	je	0x98b0


0x946c:	lea	rcx, [rip + 0x185ad]
0x9473:	movsxd	rbx, ebx
0x9476:	mov	rdi, qword ptr [rsp + 8]
0x947b:	test	eax, eax
0x947d:	movzx	ecx, byte ptr [rcx + rbx]
0x9481:	lea	rdx, [rdi + 1]
0x9485:	mov	byte ptr [rdi], cl
0x9487:	je	0x98c4


0x96c8:	movzx	edx, byte ptr [r14]
0x96cc:	test	al, 2
0x96ce:	mov	byte ptr [r8], dl
0x96d1:	jne	0x9a60


0x997a:	mov	r10d, edi
0x997d:	add	edi, 8
0x9980:	mov	r11, qword ptr [r9 + r10]
0x9984:	cmp	edi, eax
0x9986:	mov	qword ptr [rdx + r10], r11
0x998a:	jb	0x997a


0x998c:	jmp	0x96d7


0x98b0:	mov	rbx, qword ptr [rsp + 8]
0x98b5:	test	eax, eax
0x98b7:	lea	rdx, [rbx + 1]
0x98bb:	mov	byte ptr [rbx], 0x6b
0x98be:	jne	0x949b


0x98c4:	mov	qword ptr [rsp + 8], rdx
0x98c9:	jmp	0x94a7


0x948d:	mov	r8d, dword ptr [rsp + 0x30]
0x9492:	test	r8d, r8d
0x9495:	jne	0x9650


0x9a60:	movzx	edx, word ptr [r14 + rax - 2]
0x9a66:	mov	word ptr [r8 + rax - 2], dx
0x9a6c:	jmp	0x96d7


0x9650:	lea	rdx, [rdi + 2]
0x9654:	mov	byte ptr [rdi + 1], 0x69
0x9658:	jmp	0x949b


0x961d:	pop	rax
0x961e:	pop	rdx
0x961f:	fld	xword ptr [rsp + 0x20]
0x9623:	jmp	0x9239


0x9239:	fstp	xword ptr [rsp + 0x20]
0x923d:	sub	rsp, 0x10
0x9241:	lea	rcx, [rip + 0x1879e]
0x9248:	mov	esi, 1
0x924d:	mov	rdx, -1
0x9254:	xor	eax, eax
0x9256:	mov	r14, qword ptr [rsp + 0x10]
0x925b:	mov	rdi, r14
0x925e:	fstp	xword ptr [rsp]
0x9261:	call	0x2a00


0x963f:	pop	r8
0x9641:	pop	r9
0x9643:	jmp	0x93ac


0x9522:	lea	rdi, [rsp + 0x50]
0x9527:	mov	ecx, 0x29
0x952c:	mov	rdx, r14
0x952f:	mov	rsi, r15
0x9532:	mov	qword ptr [rsp + 0x40], rax
0x9537:	mov	qword ptr [rsp + 0x18], rdi
0x953c:	call	0x26f0


0x26f0:	jmp	qword ptr [rip + 0x225742]




0x1efb8:	lea	rdx, [rax + 1]
0x1efbc:	mov	r15, rax
0x1efbf:	mov	rax, rbx
0x1efc2:	sub	rax, r14
0x1efc5:	mov	rcx, rax
0x1efc8:	not	rcx
0x1efcb:	cmp	rcx, rdx
0x1efce:	jb	0x1f000


0x1f000:	call	0x2410


0x1efd0:	add	rax, rdx
0x1efd3:	cmp	rax, 0x76
0x1efd7:	jbe	0x1f010


0x1f010:	mov	rsi, rbp
0x1f013:	mov	rdi, rbx
0x1f016:	call	0x2710


0x1efd9:	mov	rdi, rbp
0x1efdc:	call	0x1ee60


0x1f01b:	mov	byte ptr [rbx + r15 + 1], 0
0x1f021:	jmp	0x1ef97


0x1ef5e:	lea	rbx, [rbx + rax + 1]
0x1ef63:	cmp	byte ptr [rbx], 0
0x1ef66:	jne	0x1ef30


0x1ef68:	mov	rax, qword ptr [r12]
0x1ef6c:	test	rax, rax
0x1ef6f:	je	0x1ef30


0x1ef30:	mov	rsi, rbp
0x1ef33:	mov	rdi, rbx
0x1ef36:	call	0x26d0


0x1ef71:	lea	rbx, [rax + 9]
0x1ef75:	mov	rsi, rbp
0x1ef78:	mov	r12, rax
0x1ef7b:	mov	rdi, rbx
0x1ef7e:	call	0x26d0


0x1ef83:	test	eax, eax
0x1ef85:	jne	0x1ef3f


0x1ef87:	jmp	0x1ef97


0x575a:	lea	rdi, [rax + 1]
0x575e:	call	0xc9e0


0x501f:	mov	rsi, rbx
0x5022:	mov	rdx, rax
0x5025:	mov	rdi, rbp
0x5028:	mov	r12, rax
0x502b:	call	0x2420


0x2420:	jmp	qword ptr [rip + 0x2258aa]




0x1ec66:	xor	ecx, ecx
0x1ec68:	test	byte ptr [rbp + 0x38], 0x10
0x1ec6c:	mov	rdx, rax
0x1ec6f:	mov	rsi, qword ptr [rsp + 8]
0x1ec74:	je	0x1ecb6


0x1ee71:	lea	rbp, [rax + 1]
0x1ee75:	mov	edi, 0x76
0x1ee7a:	cmp	rbp, 0x76
0x1ee7e:	cmovae	rdi, rbp
0x1ee82:	add	rdi, 0x11
0x1ee86:	and	rdi, 0xfffffffffffffff8
0x1ee8a:	call	0x2780


0x4736:	mov	r14, qword ptr [r15]
0x4739:	mov	qword ptr [rsp], -1
0x4741:	test	r14, r14
0x4744:	je	0x47fd


0x47fd:	mov	rax, qword ptr [rsp]
0x4801:	add	rsp, 0x28
0x4805:	pop	rbx
0x4806:	pop	rbp
0x4807:	pop	r12
0x4809:	pop	r13
0x480b:	pop	r14
0x480d:	pop	r15
0x480f:	ret	


0x474a:	mov	r12, rax
0x474d:	mov	byte ptr [rsp + 0x17], 0
0x4752:	xor	ebx, ebx
0x4754:	jmp	0x47a7


0x47a7:	mov	rsi, qword ptr [rsp + 8]
0x47ac:	mov	rdx, r12
0x47af:	mov	rdi, r14
0x47b2:	call	0x2420


0x9b07:	test	eax, eax
0x9b09:	js	0x9b48


0x9b48:	lea	r8, [rip + 0x17eb7]
0x9b4f:	xor	edx, edx
0x9b51:	mov	rsi, rsp
0x9b54:	mov	rcx, r12
0x9b57:	mov	rdi, rbx
0x9b5a:	call	0xd880


0x9b0b:	lea	rdx, [rip + 0x17f06]
0x9b12:	cdqe	
0x9b14:	mov	qword ptr [r12], 1
0x9b1c:	or	ebp, dword ptr [rdx + rax*4]
0x9b1f:	xor	eax, eax
0x9b21:	mov	dword ptr [r13], ebp
0x9b25:	mov	rcx, qword ptr [rsp + 8]
0x9b2a:	xor	rcx, qword ptr fs:[0x28]
0x9b33:	jne	0x9c91


0x9b39:	add	rsp, 0x18
0x9b3d:	pop	rbx
0x9b3e:	pop	rbp
0x9b3f:	pop	r12
0x9b41:	pop	r13
0x9b43:	ret	


0x9c91:	call	0x2560


0x4a01:	test	rax, rax
0x4a04:	js	0x4a15


0x4a15:	mov	rdx, rax
0x4a18:	mov	rsi, r12
0x4a1b:	mov	rdi, r14
0x4a1e:	call	0x4830


0x4a06:	add	rsp, 8
0x4a0a:	pop	rbx
0x4a0b:	pop	rbp
0x4a0c:	pop	r12
0x4a0e:	pop	r13
0x4a10:	pop	r14
0x4a12:	pop	r15
0x4a14:	ret	


0xcc19:	mov	rdi, rbx
0xcc1c:	lea	rsi, [rax + 1]
0xcc20:	pop	rbx
0xcc21:	jmp	0xcbe0


0x10279:	mov	rcx, rbx
0x1027c:	add	rax, 1
0x10280:	xor	edx, edx
0x10282:	jmp	0x10297


0x10297:	movzx	esi, byte ptr [rbx + rdx]
0x1029b:	lea	rdi, [rdx + 1]
0x1029f:	cmp	sil, 0x5c
0x102a3:	jne	0x10288


0x102a5:	lea	r8, [rdx + 4]
0x102a9:	cmp	r8, rax
0x102ac:	jae	0x10288


0x10288:	mov	byte ptr [rcx], sil
0x1028b:	mov	rdx, rdi
0x1028e:	add	rcx, 1
0x10292:	cmp	rax, rdx
0x10295:	jbe	0x102f0


0x102ae:	movzx	r9d, byte ptr [rbx + rdi]
0x102b3:	lea	r10d, [r9 - 0x30]
0x102b7:	cmp	r10b, 3
0x102bb:	ja	0x10288


0x102f0:	pop	rbx
0x102f1:	ret	


0x102bd:	movzx	r10d, byte ptr [rbx + rdx + 2]
0x102c3:	lea	r11d, [r10 - 0x30]
0x102c7:	cmp	r11b, 7
0x102cb:	ja	0x10288


0x102cd:	movzx	edx, byte ptr [rbx + rdx + 3]
0x102d2:	lea	r11d, [rdx - 0x30]
0x102d6:	cmp	r11b, 7
0x102da:	ja	0x10288


0x102dc:	lea	edx, [r10 + r9*8]
0x102e0:	lea	edx, [r11 + rdx*8 - 0x80]
0x102e5:	mov	byte ptr [rcx], dl
0x102e7:	mov	rdx, r8
0x102ea:	jmp	0x1028e


0x1028e:	add	rcx, 1
0x10292:	cmp	rax, rdx
0x10295:	jbe	0x102f0


0x15e64:	cmp	rax, 1
0x15e68:	jne	0x15e90


0x15e6a:	movzx	ecx, byte ptr [rbx]
0x15e6d:	mov	rdx, rcx
0x15e70:	and	ecx, 0x3f
0x15e73:	shr	rdx, 3
0x15e77:	shl	rax, cl
0x15e7a:	and	edx, 0x18
0x15e7d:	or	qword ptr [rbp + rdx], rax
0x15e82:	add	rsp, 8
0x15e86:	xor	eax, eax
0x15e88:	pop	rbx
0x15e89:	pop	rbp
0x15e8a:	ret	


0x15e90:	add	rsp, 8
0x15e94:	mov	eax, 3
0x15e99:	pop	rbx
0x15e9a:	pop	rbp
0x15e9b:	ret	


0x18963:	test	rax, rax
0x18966:	je	0x18a09


0x1896c:	mov	rdx, qword ptr [r12 + 0x20]
0x18971:	mov	rcx, qword ptr [r12 + 0x28]
0x18976:	mov	rsi, r12
0x18979:	mov	r8, qword ptr [rsp + 8]
0x1897e:	mov	rdi, r14
0x18981:	mov	qword ptr [rcx + rdx*8], rax
0x18985:	mov	rcx, qword ptr [rsp + 0x30]
0x1898a:	add	rdx, 1
0x1898e:	mov	qword ptr [rax], rbp
0x18991:	mov	qword ptr [rax + 8], rbx
0x18995:	mov	qword ptr [r12 + 0x20], rdx
0x1899a:	mov	rdx, rax
0x1899d:	call	0x18100


0x189a2:	cmp	eax, 1
0x189a5:	mov	r11, qword ptr [r14 + 8]
0x189a9:	ja	0x18618


0x895b:	test	rax, rax
0x895e:	mov	qword ptr [rsp], rax
0x8962:	je	0x8a10


0x8968:	mov	qword ptr [rsp + 0x10], rbx
0x896d:	shl	rbx, 4
0x8971:	mov	qword ptr [rsp + 0x28], r12
0x8976:	add	rbx, rax
0x8979:	mov	rax, qword ptr [rbp + 0x30]
0x897d:	mov	r12, rsp
0x8980:	xor	edx, edx
0x8982:	mov	rsi, rbp
0x8985:	mov	rdi, r12
0x8988:	mov	qword ptr [rsp + 8], rbx
0x898d:	mov	qword ptr [rsp + 0x18], 0
0x8996:	mov	qword ptr [rsp + 0x30], rax
0x899b:	mov	rax, qword ptr [rbp + 0x38]
0x899f:	mov	qword ptr [rsp + 0x20], 0
0x89a8:	mov	qword ptr [rsp + 0x38], rax
0x89ad:	mov	rax, qword ptr [rbp + 0x40]
0x89b1:	mov	qword ptr [rsp + 0x40], rax
0x89b6:	mov	rax, qword ptr [rbp + 0x48]
0x89ba:	mov	qword ptr [rsp + 0x48], rax
0x89bf:	call	0x7f80


0x89c4:	test	al, al
0x89c6:	mov	ebx, eax
0x89c8:	jne	0x8a80


0x89ce:	mov	rax, qword ptr [rsp + 0x48]
0x89d3:	mov	edx, 1
0x89d8:	mov	rsi, r12
0x89db:	mov	rdi, rbp
0x89de:	mov	qword ptr [rbp + 0x48], rax
0x89e2:	call	0x7f80


0x8a80:	mov	rdi, qword ptr [rbp]
0x8a84:	call	0x2a10


0x8a89:	mov	rax, qword ptr [rsp]
0x8a8d:	mov	qword ptr [rbp], rax
0x8a91:	mov	rax, qword ptr [rsp + 8]
0x8a96:	mov	qword ptr [rbp + 8], rax
0x8a9a:	mov	rax, qword ptr [rsp + 0x10]
0x8a9f:	mov	qword ptr [rbp + 0x10], rax
0x8aa3:	mov	rax, qword ptr [rsp + 0x18]
0x8aa8:	mov	qword ptr [rbp + 0x18], rax
0x8aac:	mov	rax, qword ptr [rsp + 0x48]
0x8ab1:	mov	qword ptr [rbp + 0x48], rax
0x8ab5:	jmp	0x8a12


0x89e7:	test	al, al
0x89e9:	je	0x8ac9


0x8ac9:	call	0x2400


0x89ef:	xor	edx, edx
0x89f1:	mov	rsi, r12
0x89f4:	mov	rdi, rbp
0x89f7:	call	0x7f80


0x89fc:	test	al, al
0x89fe:	je	0x8ac9


0x8a04:	mov	rdi, qword ptr [rsp]
0x8a08:	call	0x2a10


0x8a0d:	jmp	0x8a12


0x189ee:	test	rax, rax
0x189f1:	mov	rsi, rax
0x189f4:	mov	qword ptr [r12 + 0x10], rax
0x189f9:	mov	rcx, qword ptr [rsp + 0x10]
0x189fe:	mov	r11, qword ptr [rsp + 0x18]
0x18a03:	jne	0x18912


0x143d1:	mov	r8, qword ptr [rsp + 8]
0x143d6:	mov	r9, qword ptr [rsp + 0x10]
0x143db:	test	rax, rax
0x143de:	mov	qword ptr [r9 + r8*8], rax
0x143e2:	je	0x14421


0x143e4:	add	r8, 1
0x143e8:	add	rbx, 1
0x143ec:	mov	rcx, qword ptr [rsp + 0x18]
0x143f1:	mov	qword ptr [r15 + 0xe8], r8
0x143f8:	cmp	rbx, qword ptr [r12]
0x143fc:	mov	qword ptr [rax + 8], rbp
0x14400:	mov	qword ptr [rax], rcx
0x14403:	jl	0x1436e


0xf3ed:	test	rax, rax
0xf3f0:	mov	rbx, rax
0xf3f3:	je	0xf64e


0xf64e:	add	rsp, 0x28
0xf652:	mov	rax, rbx
0xf655:	pop	rbx
0xf656:	pop	rbp
0xf657:	pop	r12
0xf659:	pop	r13
0xf65b:	pop	r14
0xf65d:	pop	r15
0xf65f:	ret	


0xf3f9:	test	bpl, 2
0xf3fd:	mov	qword ptr [rax + 0x40], r14
0xf401:	jne	0xf660


0xf407:	mov	rdi, qword ptr [r13]
0xf40b:	mov	dword ptr [rax + 0x48], ebp
0xf40e:	mov	dword ptr [rbx + 0x2c], 0xffffff9c
0xf415:	test	rdi, rdi
0xf418:	je	0xf67f


0xf660:	mov	rdi, qword ptr [r13]
0xf664:	mov	eax, ebp
0xf666:	mov	dword ptr [rbx + 0x2c], 0xffffff9c
0xf66d:	and	ah, 0xfd
0xf670:	or	eax, 4
0xf673:	test	rdi, rdi
0xf676:	mov	dword ptr [rbx + 0x48], eax
0xf679:	jne	0xf41e


0xf67f:	mov	edx, 0x1000
0xf684:	jmp	0xf455


0xf41e:	mov	r15, r13
0xf421:	xor	r12d, r12d
0xf424:	nop	dword ptr [rax]
0xf428:	call	0x2530


0xf455:	lea	rsi, [rbx + 0x30]
0xf459:	lea	rdi, [rbx + 0x20]
0xf45d:	call	0xe4b0


0xf462:	test	al, al
0xf464:	mov	byte ptr [rsp + 0x16], al
0xf468:	je	0xf709


0xf709:	mov	rdi, rbx
0xf70c:	xor	ebx, ebx
0xf70e:	call	0x2a10


0xf46e:	mov	rsi, qword ptr [r13]
0xf472:	test	rsi, rsi
0xf475:	je	0xf720


0xf720:	xor	r15d, r15d
0xf723:	test	r14, r14
0xf726:	jne	0xf4b0


0xf47b:	lea	rsi, [rip + 0x12b5f]
0xf482:	xor	edx, edx
0xf484:	mov	rdi, rbx
0xf487:	call	0xe120


0xf72c:	xor	r12d, r12d
0xf72f:	jmp	0xf5cc


0xf4b0:	mov	eax, dword ptr [rbx + 0x48]
0xf4b3:	shr	eax, 0xa
0xf4b6:	and	eax, 1
0xf4b9:	mov	byte ptr [rsp + 0x16], al
0xf4bd:	test	rsi, rsi
0xf4c0:	je	0xf72c


0xf5cc:	lea	rsi, [rip + 0x12a0e]
0xf5d3:	xor	edx, edx
0xf5d5:	mov	rdi, rbx
0xf5d8:	call	0xe120


0xf4c6:	shr	ebp, 0xb
0xf4c9:	mov	qword ptr [rsp + 0x18], 0
0xf4d2:	xor	r12d, r12d
0xf4d5:	xor	ebp, 1
0xf4d8:	mov	eax, ebp
0xf4da:	xor	ebp, ebp
0xf4dc:	and	eax, 1
0xf4df:	mov	byte ptr [rsp + 0x17], al
0xf4e3:	jmp	0xf55c


0xf55c:	mov	rdi, rsi
0xf55f:	mov	qword ptr [rsp + 8], rsi
0xf564:	call	0x2530


0xf713:	jmp	0xf64e


0xf569:	cmp	rax, 2
0xf56d:	mov	rsi, qword ptr [rsp + 8]
0xf572:	jbe	0xf4e8


0xf4e8:	mov	rdx, rax
0xf4eb:	mov	rdi, rbx
0xf4ee:	call	0xe120


0xf578:	cmp	byte ptr [rsp + 0x17], 0
0xf57d:	je	0xf4e8


0xf583:	cmp	byte ptr [rsi + rax - 1], 0x2f
0xf588:	jne	0xf4e8


0xf59b:	sub	rax, 1
0xf59f:	cmp	rax, 1
0xf5a3:	jne	0xf590


0xf5a5:	jmp	0xf4e8


0xf590:	cmp	byte ptr [rsi + rax - 2], 0x2f
0xf595:	jne	0xf4e8


0xf42d:	cmp	r12, rax
0xf430:	cmovb	r12, rax
0xf434:	add	r15, 8
0xf438:	mov	rdi, qword ptr [r15]
0xf43b:	test	rdi, rdi
0xf43e:	jne	0xf428


0xf440:	lea	rdx, [r12 + 1]
0xf445:	mov	eax, 0x1000
0xf44a:	cmp	rdx, 0x1000
0xf451:	cmovb	rdx, rax
0xf455:	lea	rsi, [rbx + 0x30]
0xf459:	lea	rdi, [rbx + 0x20]
0xf45d:	call	0xe4b0


0xf428:	call	0x2530


0xcc7f:	test	rax, rax
0xcc82:	je	0xcc90


0xcc90:	call	0x2410


0xcc84:	add	rsp, 8
0xcc88:	ret	


0x13abf:	test	rax, rax
0x13ac2:	mov	r14, rax
0x13ac5:	je	0x13c06


0x13c06:	mov	rax, qword ptr [rsp + 0x18]
0x13c0b:	xor	r14d, r14d
0x13c0e:	mov	dword ptr [rax], 0xc
0x13c14:	jmp	0x13a9c


0x13acb:	lea	rax, [rax + 8]
0x13acf:	mov	rsi, rbp
0x13ad2:	mov	rdi, rax
0x13ad5:	mov	rbx, rax
0x13ad8:	call	0x13800


0x13add:	test	eax, eax
0x13adf:	jne	0x13c9d


0x13ae5:	movzx	eax, byte ptr [r14 + 0x68]
0x13aea:	movzx	edx, byte ptr [rsp + 4]
0x13aef:	mov	qword ptr [r14 + 0x50], rbx
0x13af3:	and	edx, 0xf
0x13af6:	and	eax, 0xfffffff0
0x13af9:	or	eax, edx
0x13afb:	cmp	qword ptr [rbp + 8], 0
0x13b00:	mov	byte ptr [r14 + 0x68], al
0x13b04:	jle	0x13be8


0x13c9d:	mov	rdi, r14
0x13ca0:	call	0x2a10


0x13be8:	mov	rdx, r12
0x13beb:	mov	rsi, r14
0x13bee:	mov	rdi, r13
0x13bf1:	call	0x11290


0x13b0a:	lea	rcx, [r14 + 0x18]
0x13b0e:	xor	r15d, r15d
0x13b11:	mov	qword ptr [rsp + 0x10], r12
0x13b16:	xor	r10d, r10d
0x13b19:	mov	r12, r13
0x13b1c:	mov	r13, r15
0x13b1f:	mov	qword ptr [rsp + 8], rcx
0x13b24:	mov	r15, rbx
0x13b27:	nop	word ptr [rax + rax]
0x13b30:	mov	rax, qword ptr [rbp + 0x10]
0x13b34:	mov	rax, qword ptr [rax + r13*8]
0x13b38:	shl	rax, 4
0x13b3c:	add	rax, qword ptr [r12]
0x13b40:	movzx	esi, byte ptr [rax + 8]
0x13b44:	mov	ebx, dword ptr [rax + 8]
0x13b47:	shr	ebx, 8
0x13b4a:	and	bx, 0x3ff
0x13b4f:	cmp	esi, 1
0x13b52:	movzx	edi, bx
0x13b55:	jne	0x13b5b


0x13b57:	test	edi, edi
0x13b59:	je	0x13bd2


0x13b5b:	movzx	edx, byte ptr [r14 + 0x68]
0x13b60:	movzx	eax, byte ptr [rax + 0xa]
0x13b64:	mov	r9d, edx
0x13b67:	shr	al, 4
0x13b6a:	and	edx, 0xffffffdf
0x13b6d:	shr	r9b, 5
0x13b71:	or	eax, r9d
0x13b74:	and	eax, 1
0x13b77:	shl	eax, 5
0x13b7a:	or	eax, edx
0x13b7c:	cmp	esi, 2
0x13b7f:	mov	byte ptr [r14 + 0x68], al
0x13b83:	je	0x13c50


0x13bd2:	add	r13, 1
0x13bd6:	cmp	r13, qword ptr [rbp + 8]
0x13bda:	jl	0x13b30


0x13c50:	or	eax, 0x10
0x13c53:	mov	byte ptr [r14 + 0x68], al
0x13c57:	jmp	0x13b95


0x13b89:	cmp	esi, 4
0x13b8c:	jne	0x13b95


0x13b30:	mov	rax, qword ptr [rbp + 0x10]
0x13b34:	mov	rax, qword ptr [rax + r13*8]
0x13b38:	shl	rax, 4
0x13b3c:	add	rax, qword ptr [r12]
0x13b40:	movzx	esi, byte ptr [rax + 8]
0x13b44:	mov	ebx, dword ptr [rax + 8]
0x13b47:	shr	ebx, 8
0x13b4a:	and	bx, 0x3ff
0x13b4f:	cmp	esi, 1
0x13b52:	movzx	edi, bx
0x13b55:	jne	0x13b5b


0x13be0:	mov	r13, r12
0x13be3:	mov	r12, qword ptr [rsp + 0x10]
0x13be8:	mov	rdx, r12
0x13beb:	mov	rsi, r14
0x13bee:	mov	rdi, r13
0x13bf1:	call	0x11290


0x13b95:	test	edi, edi
0x13b97:	je	0x13bd2


0x13b8e:	or	eax, 0x40
0x13b91:	mov	byte ptr [r14 + 0x68], al
0x13b95:	test	edi, edi
0x13b97:	je	0x13bd2


0x13b99:	cmp	r15, qword ptr [r14 + 0x50]
0x13b9d:	je	0x13c60


0x13c60:	mov	edi, 0x18
0x13c65:	call	0x2780


0x13ba3:	test	bl, 1
0x13ba6:	je	0x13c20


0x13c20:	test	bl, 2
0x13c23:	je	0x13c2c


0x13ba8:	test	byte ptr [rsp + 4], 1
0x13bad:	je	0x13bb8


0x13c2c:	test	bl, 0x10
0x13c2f:	je	0x13c38


0x13c25:	test	byte ptr [rsp + 4], 1
0x13c2a:	jne	0x13bb8


0x13bb8:	mov	rdx, r13
0x13bbb:	sub	rdx, r10
0x13bbe:	js	0x13bce


0x13baf:	test	bl, 2
0x13bb2:	je	0x13c2c


0x13c38:	and	ebx, 0x40
0x13c3b:	je	0x13bd2


0x13c31:	test	byte ptr [rsp + 4], 2
0x13c36:	je	0x13bb8


0x13bce:	add	r10, 1
0x13bd2:	add	r13, 1
0x13bd6:	cmp	r13, qword ptr [rbp + 8]
0x13bda:	jl	0x13b30


0x13bc0:	mov	rsi, qword ptr [rsp + 8]
0x13bc5:	lea	rdi, [r14 + 0x10]
0x13bc9:	call	0x12820


0x13c3d:	test	byte ptr [rsp + 4], 4
0x13c42:	jne	0x13bd2


0x13c44:	jmp	0x13bb8


0x13ca5:	jmp	0x13c06


0x13d55:	test	rax, rax
0x13d58:	mov	rbx, rax
0x13d5b:	je	0x13e88


0x13e88:	mov	dword ptr [r13], 0xc
0x13e90:	xor	ebx, ebx
0x13e92:	jmp	0x13e3f


0x13d61:	lea	r15, [rax + 8]
0x13d65:	mov	rsi, r14
0x13d68:	mov	rdi, r15
0x13d6b:	call	0x13800


0x13d70:	test	eax, eax
0x13d72:	jne	0x13e80


0x13d78:	mov	rax, qword ptr [r14 + 8]
0x13d7c:	mov	qword ptr [rbx + 0x50], r15
0x13d80:	test	rax, rax
0x13d83:	jle	0x13e2d


0x13e80:	mov	rdi, rbx
0x13e83:	call	0x2a10


0x13e2d:	mov	rdx, rbp
0x13e30:	mov	rsi, rbx
0x13e33:	mov	rdi, r12
0x13e36:	call	0x11290


0x13d89:	mov	rsi, qword ptr [r14 + 0x10]
0x13d8d:	mov	r8, qword ptr [r12]
0x13d91:	lea	r9, [rsi + rax*8]
0x13d95:	jmp	0x13de4


0x13de4:	mov	rax, qword ptr [rsi]
0x13de7:	shl	rax, 4
0x13deb:	add	rax, r8
0x13dee:	movzx	edi, byte ptr [rax + 8]
0x13df2:	cmp	edi, 1
0x13df5:	jne	0x13da0


0x13df7:	test	dword ptr [rax + 8], 0x3ff00
0x13dfe:	je	0x13ddb


0x13da0:	movzx	ecx, byte ptr [rbx + 0x68]
0x13da4:	movzx	edx, byte ptr [rax + 0xa]
0x13da8:	mov	r10d, ecx
0x13dab:	shr	dl, 4
0x13dae:	and	ecx, 0xffffffdf
0x13db1:	shr	r10b, 5
0x13db5:	or	edx, r10d
0x13db8:	and	edx, 1
0x13dbb:	shl	edx, 5
0x13dbe:	or	edx, ecx
0x13dc0:	cmp	edi, 2
0x13dc3:	mov	byte ptr [rbx + 0x68], dl
0x13dc6:	je	0x13e58


0x13ddb:	add	rsi, 8
0x13ddf:	cmp	r9, rsi
0x13de2:	je	0x13e2d


0x13e00:	movzx	edx, byte ptr [rbx + 0x68]
0x13e04:	movzx	eax, byte ptr [rax + 0xa]
0x13e08:	mov	ecx, edx
0x13e0a:	shr	al, 4
0x13e0d:	and	edx, 0xffffffdf
0x13e10:	shr	cl, 5
0x13e13:	or	eax, ecx
0x13e15:	and	eax, 1
0x13e18:	shl	eax, 5
0x13e1b:	or	eax, edx
0x13e1d:	mov	byte ptr [rbx + 0x68], al
0x13e20:	add	rsi, 8
0x13e24:	or	byte ptr [rbx + 0x68], 0x80
0x13e28:	cmp	r9, rsi
0x13e2b:	jne	0x13de4


0x13e58:	or	edx, 0x10
0x13e5b:	mov	byte ptr [rbx + 0x68], dl
0x13e5e:	jmp	0x13ddb


0x13dcc:	cmp	edi, 4
0x13dcf:	jne	0x13e68


0x13dd5:	or	edx, 0x40
0x13dd8:	mov	byte ptr [rbx + 0x68], dl
0x13ddb:	add	rsi, 8
0x13ddf:	cmp	r9, rsi
0x13de2:	je	0x13e2d


0x13e68:	cmp	edi, 0xc
0x13e6b:	je	0x13e20


0x13e20:	add	rsi, 8
0x13e24:	or	byte ptr [rbx + 0x68], 0x80
0x13e28:	cmp	r9, rsi
0x13e2b:	jne	0x13de4


0x13e6d:	test	dword ptr [rax + 8], 0x3ff00
0x13e74:	je	0x13ddb


0x13e7a:	jmp	0x13e20


0xcbcf:	test	rax, rax
0xcbd2:	je	0xcbd9


0xcbd4:	add	rsp, 8
0xcbd8:	ret	


0x166fb:	test	rax, rax
0x166fe:	je	0x168c0


0x168c0:	mov	rax, qword ptr [rsp + 8]
0x168c5:	xor	r14d, r14d
0x168c8:	mov	dword ptr [rax], 0xc
0x168ce:	jmp	0x16872


0x16704:	mov	esi, 1
0x16709:	mov	edi, 0x50
0x1670e:	mov	rbx, rax
0x16711:	call	0x26b0


0x16872:	mov	rdi, qword ptr [rsp + 0x48]
0x16877:	xor	rdi, qword ptr fs:[0x28]
0x16880:	mov	rax, r14
0x16883:	jne	0x16915


0x16889:	add	rsp, 0x58
0x1688d:	pop	rbx
0x1688e:	pop	rbp
0x1688f:	pop	r12
0x16891:	pop	r13
0x16893:	pop	r14
0x16895:	pop	r15
0x16897:	ret	


0x16915:	call	0x2560


0x16716:	test	rax, rax
0x16719:	mov	r15, rax
0x1671c:	je	0x168d0


0x168d0:	mov	rdi, rbx
0x168d3:	xor	r14d, r14d
0x168d6:	call	0x2a10


0x16722:	movzx	eax, byte ptr [rax + 0x20]
0x16726:	sub	rsp, 8
0x1672a:	mov	edx, r12d
0x1672d:	push	0
0x1672f:	and	edx, 1
0x16732:	mov	rdi, qword ptr [rsp + 0x10]
0x16737:	lea	rcx, [r15 + 0x48]
0x1673b:	mov	r9, r14
0x1673e:	mov	rsi, rbx
0x16741:	lea	r8, [rsp + 0x28]
0x16746:	and	eax, 0xfffffffe
0x16749:	or	eax, edx
0x1674b:	lea	rdx, [r15 + 0x18]
0x1674f:	mov	byte ptr [r15 + 0x20], al
0x16753:	call	0x15ea0


0x16758:	test	eax, eax
0x1675a:	pop	rdx
0x1675b:	pop	rcx
0x1675c:	jne	0x168f0


0x16762:	movsx	rcx, byte ptr [r13]
0x16767:	mov	esi, 1
0x1676c:	test	cl, cl
0x1676e:	je	0x167aa


0x168f0:	mov	rdi, rbx
0x168f3:	mov	dword ptr [rsp], eax
0x168f6:	xor	r14d, r14d
0x168f9:	call	0x2a10


0x167aa:	test	r12b, r12b
0x167ad:	je	0x167c2


0x16770:	lea	rax, [rcx + 0x3f]
0x16774:	test	rcx, rcx
0x16777:	mov	rdx, rcx
0x1677a:	cmovns	rax, rcx
0x1677e:	sar	rdx, 0x3f
0x16782:	add	r13, 1
0x16786:	shr	rdx, 0x3a
0x1678a:	sar	rax, 6
0x1678e:	add	rcx, rdx
0x16791:	and	ecx, 0x3f
0x16794:	sub	rcx, rdx
0x16797:	mov	rdx, rsi
0x1679a:	shl	rdx, cl
0x1679d:	movsx	rcx, byte ptr [r13]
0x167a2:	or	qword ptr [rbx + rax*8], rdx
0x167a6:	test	cl, cl
0x167a8:	jne	0x16770


0x167c2:	cmp	dword ptr [rbp + 0xb4], 1
0x167c9:	jle	0x167e3


0x167af:	lea	rdx, [rbx + 0x20]
0x167b3:	mov	rax, rbx
0x167b6:	not	qword ptr [rax]
0x167b9:	add	rax, 8
0x167bd:	cmp	rdx, rax
0x167c0:	jne	0x167b6


0x167e3:	lea	r9, [rsp + 0x20]
0x167e8:	lea	r12, [rbp + 0x70]
0x167ec:	lea	r13, [rbp + 0x80]
0x167f3:	xor	ecx, ecx
0x167f5:	xor	edx, edx
0x167f7:	mov	byte ptr [rsp + 0x28], 3
0x167fc:	mov	r8, r9
0x167ff:	mov	rsi, r13
0x16802:	mov	rdi, r12
0x16805:	mov	qword ptr [rsp + 0x20], rbx
0x1680a:	mov	qword ptr [rsp], r9
0x1680e:	call	0x13360


0x167cb:	mov	rcx, qword ptr [rbp + 0x78]
0x167cf:	xor	eax, eax
0x167d1:	mov	rdx, qword ptr [rcx + rax]
0x167d5:	and	qword ptr [rbx + rax], rdx
0x167d9:	add	rax, 8
0x167dd:	cmp	rax, 0x20
0x167e1:	jne	0x167d1


0x167b6:	not	qword ptr [rax]
0x167b9:	add	rax, 8
0x167bd:	cmp	rdx, rax
0x167c0:	jne	0x167b6


0x167d1:	mov	rdx, qword ptr [rcx + rax]
0x167d5:	and	qword ptr [rbx + rax], rdx
0x167d9:	add	rax, 8
0x167dd:	cmp	rax, 0x20
0x167e1:	jne	0x167d1


0x16813:	test	rax, rax
0x16816:	mov	r14, rax
0x16819:	je	0x168b0


0x168b0:	mov	rdi, rbx
0x168b3:	call	0x2a10


0x1681f:	cmp	dword ptr [rbp + 0xb4], 1
0x16826:	jle	0x168a0


0x168a0:	mov	rdi, r15
0x168a3:	call	0x11dc0


0x16828:	or	byte ptr [rbp + 0xb0], 2
0x1682f:	mov	r9, qword ptr [rsp]
0x16833:	xor	ecx, ecx
0x16835:	xor	edx, edx
0x16837:	mov	rsi, r13
0x1683a:	mov	rdi, r12
0x1683d:	mov	byte ptr [rsp + 0x28], 6
0x16842:	mov	qword ptr [rsp + 0x20], r15
0x16847:	mov	r8, r9
0x1684a:	call	0x13360


0x1684f:	test	rax, rax
0x16852:	je	0x168b0


0x16854:	lea	r8, [rsp + 0x30]
0x16859:	mov	rdx, r14
0x1685c:	mov	rcx, rax
0x1685f:	mov	rsi, r13
0x16862:	mov	rdi, r12
0x16865:	mov	byte ptr [rsp + 0x38], 0xa
0x1686a:	call	0x13360


0x1686f:	mov	r14, rax
0x16872:	mov	rdi, qword ptr [rsp + 0x48]
0x16877:	xor	rdi, qword ptr fs:[0x28]
0x16880:	mov	rax, r14
0x16883:	jne	0x16915


0x168b8:	mov	rdi, r15
0x168bb:	call	0x11dc0


0x168fe:	mov	rdi, r15
0x16901:	call	0x11dc0


0x168db:	mov	rax, qword ptr [rsp + 8]
0x168e0:	mov	dword ptr [rax], 0xc
0x168e6:	jmp	0x16872


0x1e38a:	test	eax, eax
0x1e38c:	je	0x1e3b8


0x1e3b8:	xor	eax, eax
0x1e3ba:	add	rsp, 8
0x1e3be:	ret	


0x1e38e:	lea	rdx, [rip + 0x4a4b]
0x1e395:	cdqe	
0x1e397:	lea	rsi, [rip + 0x4ae2]
0x1e39e:	xor	edi, edi
0x1e3a0:	add	rsi, qword ptr [rdx + rax*8]
0x1e3a4:	mov	edx, 5
0x1e3a9:	add	rsp, 8
0x1e3ad:	jmp	0x2510


0x13c6a:	test	rax, rax
0x13c6d:	mov	qword ptr [r14 + 0x50], rax
0x13c71:	je	0x13bfe


0x13bfe:	mov	rdi, r14
0x13c01:	call	0x12330


0x13c73:	mov	rsi, rbp
0x13c76:	mov	rdi, rax
0x13c79:	call	0x13800


0x13c7e:	test	eax, eax
0x13c80:	jne	0x13c06


0x13c82:	or	byte ptr [r14 + 0x68], 0x80
0x13c87:	xor	r10d, r10d
0x13c8a:	jmp	0x13ba3


0x1ee8f:	test	rax, rax
0x1ee92:	mov	rbx, rax
0x1ee95:	je	0x1eebb


0x1eebb:	mov	rax, rbx
0x1eebe:	pop	rbx
0x1eebf:	pop	rbp
0x1eec0:	pop	r12
0x1eec2:	ret	


0x1ee97:	mov	qword ptr [rax], 0
0x1ee9e:	lea	rdi, [rbx + 9]
0x1eea2:	mov	eax, 1
0x1eea7:	mov	word ptr [rbx + 8], ax
0x1eeab:	mov	rdx, rbp
0x1eeae:	mov	rsi, r12
0x1eeb1:	call	0x2710


0x1eeb6:	mov	byte ptr [rbx + rbp + 9], 0
0x1eebb:	mov	rax, rbx
0x1eebe:	pop	rbx
0x1eebf:	pop	rbp
0x1eec0:	pop	r12
0x1eec2:	ret	


0x1efe1:	mov	rbx, rax
0x1efe4:	mov	qword ptr [r12], rax
0x1efe8:	xor	eax, eax
0x1efea:	test	rbx, rbx
0x1efed:	je	0x1efa0


0x1efef:	mov	byte ptr [rbx + 8], 0
0x1eff3:	add	rbx, 9
0x1eff7:	jmp	0x1ef97


0x17cc3:	test	rax, rax
0x17cc6:	mov	qword ptr [r15 + 0x10], rax
0x17cca:	je	0x17cf2


0x17cf2:	mov	rdi, qword ptr [rbp - 0x60]
0x17cf6:	call	0x2a10


0x17ccc:	mov	rdx, r14
0x17ccf:	mov	rsi, r13
0x17cd2:	mov	rdi, rax
0x17cd5:	call	0x2710


0x17cda:	mov	rsi, qword ptr [rbp - 0xa8]
0x17ce1:	lea	rdi, [r15 + 0x18]
0x17ce5:	call	0x13800


0x17cea:	test	eax, eax
0x17cec:	je	0x179fc


0x17cfb:	cmp	byte ptr [rbp - 0xc9], 0
0x17d02:	jne	0x1809b


0x199fb:	test	rax, rax
0x199fe:	mov	r12, rax
0x19a01:	je	0x1a130


0x19a07:	cmp	qword ptr [r15 + 0x98], 0
0x19a0f:	je	0x1a2a5


0x1a2a5:	pxor	xmm0, xmm0
0x1a2a9:	mov	qword ptr [rsp + 0xe0], rax
0x1a2b1:	mov	rdi, qword ptr [rsp]
0x1a2b5:	mov	rax, qword ptr [rsp + 0x20]
0x1a2ba:	lea	rbx, [rsp + 0xe0]
0x1a2c2:	mov	qword ptr [rsp + 0xe8], 0
0x1a2ce:	mov	qword ptr [rsp + 0xf0], r13
0x1a2d6:	mov	rsi, rbx
0x1a2d9:	mov	qword ptr [rsp + 0x110], 0
0x1a2e5:	movaps	xmmword ptr [rsp + 0x100], xmm0
0x1a2ed:	mov	qword ptr [rsp + 0xf8], rax
0x1a2f5:	call	0x18d80


0x19a15:	mov	rdi, rbx
0x19a18:	call	0x2780


0x19a1d:	test	rax, rax
0x19a20:	mov	rbp, rax
0x19a23:	je	0x1a128


0x1a128:	mov	rdi, r12
0x1a12b:	call	0x2a10


0x19a29:	mov	r14, qword ptr [rsp + 0x20]
0x19a2e:	lea	rbx, [rsp + 0xe0]
0x19a36:	mov	qword ptr [rsp + 0x10], r15
0x19a3b:	mov	qword ptr [rsp + 0x18], rax
0x19a40:	mov	rax, qword ptr [rsp + 8]
0x19a45:	xor	esi, esi
0x19a47:	mov	rdi, rbp
0x19a4a:	lea	rdx, [rax*8]
0x19a52:	call	0x2620


0x19a57:	pxor	xmm0, xmm0
0x19a5b:	mov	qword ptr [rsp + 0xe0], r12
0x19a63:	mov	qword ptr [rsp + 0xe8], rbp
0x19a6b:	mov	qword ptr [rsp + 0xf0], r13
0x19a73:	mov	rsi, rbx
0x19a76:	mov	qword ptr [rsp + 0xf8], r14
0x19a7e:	mov	rdi, qword ptr [rsp]
0x19a82:	movaps	xmmword ptr [rbx + 0x20], xmm0
0x19a86:	mov	qword ptr [rbx + 0x30], 0
0x19a8e:	call	0x18d80


0x17575:	test	rax, rax
0x17578:	mov	qword ptr [rsp + 0xa0], rax
0x17580:	je	0x177cb


0x17586:	mov	qword ptr [rax], rbx
0x17589:	mov	ecx, dword ptr [rsp + 0x110]
0x17590:	lea	rbx, [rsp + 0x90]
0x17598:	mov	rdx, qword ptr [rsp + 0x48]
0x1759d:	mov	rdi, qword ptr [rsp + 0x30]
0x175a2:	mov	r12, rbp
0x175a5:	mov	rsi, rbx
0x175a8:	mov	dword ptr [rsp + 0x88], 0
0x175b3:	call	0x13050


0x1420d:	test	rax, rax
0x14210:	mov	qword ptr [rsp + 0x60], rax
0x14215:	je	0x1430d


0x1430d:	mov	qword ptr [rsp + 0x58], 0
0x14316:	mov	qword ptr [rsp + 0x50], 0
0x1431f:	mov	eax, 0xc
0x14324:	jmp	0x14220


0x1421b:	mov	qword ptr [rax], r14
0x1421e:	xor	eax, eax
0x14220:	mov	r15, qword ptr [rsp + 0x10]
0x14225:	mov	rdx, qword ptr [rsp + 0x20]
0x1422a:	mov	rdi, r13
0x1422d:	mov	ecx, dword ptr [rsp + 0x2c]
0x14231:	mov	dword ptr [rsp + 0x4c], eax
0x14235:	mov	rsi, r15
0x14238:	call	0x13050


0x14220:	mov	r15, qword ptr [rsp + 0x10]
0x14225:	mov	rdx, qword ptr [rsp + 0x20]
0x1422a:	mov	rdi, r13
0x1422d:	mov	ecx, dword ptr [rsp + 0x2c]
0x14231:	mov	dword ptr [rsp + 0x4c], eax
0x14235:	mov	rsi, r15
0x14238:	call	0x13050


0x142a1:	test	rax, rax
0x142a4:	mov	qword ptr [rsp + 0x60], rax
0x142a9:	je	0x142ec


0x142ab:	mov	rdi, qword ptr [rsp + 8]
0x142b0:	mov	dword ptr [rsp + 0x4c], 0
0x142b8:	mov	r10, qword ptr [rsp + 0x18]
0x142bd:	mov	qword ptr [rax], rdi
0x142c0:	jmp	0x1414e


0x1414e:	mov	rdx, qword ptr [rsp + 0x10]
0x14153:	mov	rdi, qword ptr [rsp + 0x38]
0x14158:	mov	rsi, r13
0x1415b:	mov	qword ptr [rsp + 8], r10
0x14160:	call	0x13cb0


0x19481:	test	rax, rax
0x19484:	mov	rdi, rax
0x19487:	mov	qword ptr [rsp + 0x1d8], rax
0x1948f:	je	0x1a180


0x193fe:	mov	rdi, r14
0x19401:	mov	r15, rax
0x19404:	mov	qword ptr [rsp + 0x1f8], rax
0x1940c:	shl	rdi, 4
0x19410:	call	0x2780


0x19415:	test	rax, rax
0x19418:	mov	qword ptr [rsp + 0x218], rax
0x19420:	je	0x1a130


0x19426:	test	r15, r15
0x19429:	je	0x1a130


0x1ab0e:	mov	rdx, qword ptr [rsp + 0x20]
0x1ab13:	test	rax, rax
0x1ab16:	mov	qword ptr [rdx + 0x48], rax
0x1ab1a:	je	0x1ab63


0x1ab63:	mov	eax, 0xc
0x1ab68:	jmp	0x1a888


0x1ab1c:	cmp	qword ptr [rbx + 8], 0
0x1ab21:	mov	dword ptr [rsp + 0x60], 0
0x1ab29:	jg	0x1ab3e


0x1ab2b:	jmp	0x1a8ec


0x1ab3e:	mov	rax, qword ptr [rbx + 0x10]
0x1ab42:	mov	rdi, r14
0x1ab45:	mov	rax, qword ptr [rax + r15*8]
0x1ab49:	lea	rdx, [rax + rax*2]
0x1ab4d:	mov	rax, qword ptr [r12 + 0x38]
0x1ab52:	lea	rsi, [rax + rdx*8]
0x1ab56:	call	0x12bc0


0x1ab5b:	test	eax, eax
0x1ab5d:	mov	dword ptr [rsp + 0x60], eax
0x1ab61:	je	0x1ab30


0x1ab30:	add	r15, 1
0x1ab34:	cmp	r15, qword ptr [rbx + 8]
0x1ab38:	jge	0x1a8ec


0x1e578:	test	rax, rax
0x1e57b:	mov	rbp, rax
0x1e57e:	je	0x1e810


0x1e810:	mov	r12, -2
0x1e817:	jmp	0x1e5d2


0x1e584:	sub	rsp, 8
0x1e588:	mov	rcx, rbx
0x1e58b:	mov	rdi, r15
0x1e58e:	mov	eax, dword ptr [rsp + 0x34]
0x1e592:	push	rax
0x1e593:	push	rbp
0x1e594:	push	r14
0x1e596:	mov	r9, qword ptr [rsp + 0x40]
0x1e59b:	mov	r8, qword ptr [rsp + 0x28]
0x1e5a0:	mov	rdx, qword ptr [rsp + 0x38]
0x1e5a5:	mov	rsi, qword ptr [rsp + 0x30]
0x1e5aa:	call	0x190c0


0x1e5af:	add	rsp, 0x20
0x1e5b3:	test	eax, eax
0x1e5b5:	je	0x1e5e8


0x1e5e8:	test	r12, r12
0x1e5eb:	je	0x1e6b8


0x1e5b7:	cmp	eax, 1
0x1e5ba:	mov	r12, -1
0x1e5c1:	je	0x1e5ca


0x1e6b8:	cmp	byte ptr [rsp + 0x28], 0
0x1e6bd:	mov	r12, qword ptr [rbp]
0x1e6c1:	je	0x1e5ca


0x1e5f1:	movzx	eax, byte ptr [r15 + 0x38]
0x1e5f6:	lea	rdx, [r13 + 1]
0x1e5fa:	shr	al, 1
0x1e5fc:	and	eax, 3
0x1e5ff:	je	0x1e770


0x1e5ca:	mov	rdi, rbp
0x1e5cd:	call	0x2a10


0x1e5c3:	mov	r12, -2
0x1e5ca:	mov	rdi, rbp
0x1e5cd:	call	0x2a10


0x1e6c7:	cmp	r12, rbx
0x1e6ca:	jne	0x1e8c2


0x1e770:	lea	r14, [rdx*8]
0x1e778:	mov	qword ptr [rsp + 8], rdx
0x1e77d:	mov	rdi, r14
0x1e780:	call	0x2780


0x1e605:	cmp	eax, 1
0x1e608:	je	0x1e820


0x1e6d0:	mov	r12, qword ptr [rbp + 8]
0x1e6d4:	sub	r12, rbx
0x1e6d7:	jmp	0x1e5ca


0x1e8c2:	lea	rcx, [rip + 0x4487]
0x1e8c9:	lea	rsi, [rip + 0x3ed0]
0x1e8d0:	lea	rdi, [rip + 0x3fea]
0x1e8d7:	mov	edx, 0x1be
0x1e8dc:	call	0x2600


0x1e820:	cmp	qword ptr [r12], rdx
0x1e824:	mov	r9d, 1
0x1e82a:	jae	0x1e627


0x1e60e:	cmp	eax, 2
0x1e611:	jne	0x1e900


0x1e830:	lea	rcx, [rdx*8]
0x1e838:	mov	rdi, qword ptr [r12 + 8]
0x1e83d:	mov	byte ptr [rsp + 0x18], r9b
0x1e842:	mov	qword ptr [rsp + 0x10], rdx
0x1e847:	mov	rsi, rcx
0x1e84a:	mov	qword ptr [rsp + 8], rcx
0x1e84f:	call	0x2830


0x1e627:	test	r13, r13
0x1e62a:	jle	0x1e898


0x1e617:	cmp	r14, qword ptr [r12]
0x1e61b:	ja	0x1e8e1


0x1e900:	lea	rcx, [rip + 0x4439]
0x1e907:	lea	rsi, [rip + 0x3e92]
0x1e90e:	lea	rdi, [rip + 0x3f77]
0x1e915:	mov	edx, 0x1f9
0x1e91a:	call	0x2600


0x1e898:	xor	edx, edx
0x1e89a:	xor	r13d, r13d
0x1e89d:	jmp	0x1e66b


0x1e630:	mov	r8, qword ptr [r12 + 8]
0x1e635:	mov	rdi, qword ptr [r12 + 0x10]
0x1e63a:	lea	rsi, [r13*8]
0x1e642:	mov	rdx, r13
0x1e645:	xor	eax, eax
0x1e647:	nop	word ptr [rax + rax]
0x1e650:	mov	rcx, qword ptr [rbp + rax*2]
0x1e655:	mov	qword ptr [r8 + rax], rcx
0x1e659:	mov	rcx, qword ptr [rbp + rax*2 + 8]
0x1e65e:	mov	qword ptr [rdi + rax], rcx
0x1e662:	add	rax, 8
0x1e666:	cmp	rsi, rax
0x1e669:	jne	0x1e650


0x1e621:	mov	r9d, 2
0x1e627:	test	r13, r13
0x1e62a:	jle	0x1e898


0x1e8e1:	lea	rcx, [rip + 0x4458]
0x1e8e8:	lea	rsi, [rip + 0x3eb1]
0x1e8ef:	lea	rdi, [rip + 0x3fb3]
0x1e8f6:	mov	edx, 0x1fb
0x1e8fb:	call	0x2600


0x1e66b:	cmp	qword ptr [r12], rdx
0x1e66f:	jbe	0x1e69d


0x1e650:	mov	rcx, qword ptr [rbp + rax*2]
0x1e655:	mov	qword ptr [r8 + rax], rcx
0x1e659:	mov	rcx, qword ptr [rbp + rax*2 + 8]
0x1e65e:	mov	qword ptr [rdi + rax], rcx
0x1e662:	add	rax, 8
0x1e666:	cmp	rsi, rax
0x1e669:	jne	0x1e650


0x1e69d:	movzx	eax, byte ptr [r15 + 0x38]
0x1e6a2:	lea	r13d, [r9 + r9]
0x1e6a6:	and	eax, 0xfffffff9
0x1e6a9:	or	eax, r13d
0x1e6ac:	test	al, 6
0x1e6ae:	mov	byte ptr [r15 + 0x38], al
0x1e6b2:	je	0x1e5c3


0x1e671:	mov	rsi, qword ptr [r12 + 0x10]
0x1e676:	mov	rcx, qword ptr [r12 + 8]
0x1e67b:	mov	rax, -1
0x1e682:	nop	word ptr [rax + rax]
0x1e688:	mov	qword ptr [rsi + rdx*8], rax
0x1e68c:	add	r13, 1
0x1e690:	mov	qword ptr [rcx + rdx*8], rax
0x1e694:	cmp	r13, qword ptr [r12]
0x1e698:	mov	rdx, r13
0x1e69b:	jb	0x1e688


0x1e688:	mov	qword ptr [rsi + rdx*8], rax
0x1e68c:	add	r13, 1
0x1e690:	mov	qword ptr [rcx + rdx*8], rax
0x1e694:	cmp	r13, qword ptr [r12]
0x1e698:	mov	rdx, r13
0x1e69b:	jb	0x1e688


0x1e854:	test	rax, rax
0x1e857:	mov	r14, rax
0x1e85a:	je	0x1e8aa


0x1e8aa:	xor	r9d, r9d
0x1e8ad:	jmp	0x1e69d


0x1e85c:	mov	rcx, qword ptr [rsp + 8]
0x1e861:	mov	rdi, qword ptr [r12 + 0x10]
0x1e866:	mov	rsi, rcx
0x1e869:	call	0x2830


0x1e86e:	test	rax, rax
0x1e871:	mov	rdx, qword ptr [rsp + 0x10]
0x1e876:	movzx	r9d, byte ptr [rsp + 0x18]
0x1e87c:	je	0x1e8b2


0x1e8b2:	mov	rdi, r14
0x1e8b5:	call	0x2a10


0x1e87e:	mov	qword ptr [r12 + 8], r14
0x1e883:	mov	qword ptr [r12 + 0x10], rax
0x1e888:	mov	qword ptr [r12], rdx
0x1e88c:	jmp	0x1e627


0x1e8ba:	xor	r9d, r9d
0x1e8bd:	jmp	0x1e69d


0x1e785:	test	rax, rax
0x1e788:	mov	qword ptr [r12 + 8], rax
0x1e78d:	mov	rdx, qword ptr [rsp + 8]
0x1e792:	je	0x1e8aa


0x1e798:	mov	rdi, r14
0x1e79b:	mov	qword ptr [rsp + 8], rdx
0x1e7a0:	mov	qword ptr [rsp + 0x10], rax
0x1e7a5:	call	0x2780


0x1e7aa:	test	rax, rax
0x1e7ad:	mov	qword ptr [r12 + 0x10], rax
0x1e7b2:	mov	rdx, qword ptr [rsp + 8]
0x1e7b7:	mov	rcx, qword ptr [rsp + 0x10]
0x1e7bc:	je	0x1e8a2


0x1e8a2:	mov	rdi, rcx
0x1e8a5:	call	0x2a10


0x1e7c2:	mov	qword ptr [r12], rdx
0x1e7c6:	mov	r9d, 1
0x1e7cc:	jmp	0x1e627


0x1e9e2:	test	rax, rax
0x1e9e5:	mov	r13, rax
0x1e9e8:	je	0x1ea20


0x1e9ea:	mov	rsi, qword ptr [rsp + 8]
0x1e9ef:	mov	rdx, rbx
0x1e9f2:	mov	rdi, rax
0x1e9f5:	call	0x2710


0x1e9fa:	lea	rdi, [r13 + rbx]
0x1e9ff:	mov	rsi, r14
0x1ea02:	mov	rdx, rbp
0x1ea05:	mov	r14, r13
0x1ea08:	call	0x2710


0x1ea0d:	mov	rcx, qword ptr [rsp + 0x10]
0x1ea12:	mov	r8d, dword ptr [rsp + 0x1c]
0x1ea17:	jmp	0x1e988


0x138df:	test	rax, rax
0x138e2:	mov	qword ptr [r12 + 0x10], rax
0x138e7:	je	0x139d8


0x139d8:	mov	eax, 0xc
0x139dd:	jmp	0x13962


0x138ed:	mov	r9, qword ptr [rbx + 0x10]
0x138f1:	mov	r8, qword ptr [rbp + 0x10]
0x138f5:	xor	ebx, ebx
0x138f7:	xor	ecx, ecx
0x138f9:	xor	esi, esi
0x138fb:	jmp	0x1391e


0x13962:	pop	rbx
0x13963:	pop	rbp
0x13964:	pop	r12
0x13966:	pop	r13
0x13968:	pop	r14
0x1396a:	ret	


0x1391e:	mov	rdx, qword ptr [r8 + rsi*8]
0x13922:	mov	rdi, qword ptr [r9 + rcx*8]
0x13926:	add	rbx, 1
0x1392a:	cmp	rdx, rdi
0x1392d:	jle	0x13900


0x13900:	sete	dil
0x13904:	mov	qword ptr [rax + rbx*8 - 8], rdx
0x13909:	add	rsi, 1
0x1390d:	movzx	edi, dil
0x13911:	add	rcx, rdi
0x13914:	cmp	r13, rsi
0x13917:	jle	0x13980


0x1392f:	add	rcx, 1
0x13933:	mov	qword ptr [rax + rbx*8 - 8], rdi
0x13938:	jmp	0x13914


0x13980:	cmp	r14, rcx
0x13983:	jg	0x139b8


0x13919:	cmp	r14, rcx
0x1391c:	jle	0x13998


0x13914:	cmp	r13, rsi
0x13917:	jle	0x13980


0x13985:	mov	qword ptr [r12 + 8], rbx
0x1398a:	xor	eax, eax
0x1398c:	pop	rbx
0x1398d:	pop	rbp
0x1398e:	pop	r12
0x13990:	pop	r13
0x13992:	pop	r14
0x13994:	ret	


0x139b8:	sub	r14, rcx
0x139bb:	lea	rdi, [rax + rbx*8]
0x139bf:	lea	rsi, [r9 + rcx*8]
0x139c3:	lea	rdx, [r14*8]
0x139cb:	add	rbx, r14
0x139ce:	call	0x2710


0x13998:	sub	r13, rsi
0x1399b:	lea	rdi, [rax + rbx*8]
0x1399f:	lea	rsi, [r8 + rsi*8]
0x139a3:	lea	rdx, [r13*8]
0x139ab:	add	rbx, r13
0x139ae:	call	0x2710


0x139b3:	jmp	0x13985


0x139d3:	jmp	0x13985


0x17fc2:	test	rax, rax
0x17fc5:	mov	qword ptr [rbp - 0xc0], rax
0x17fcc:	mov	byte ptr [rbp - 0xc9], 1
0x17fd3:	jne	0x178e7


0x17fd9:	mov	rdi, qword ptr [rbp - 0x88]
0x17fe0:	test	rdi, rdi
0x17fe3:	je	0x17fac


0x178e7:	mov	rdx, qword ptr [rbp - 0xb8]
0x178ee:	mov	rdi, qword ptr [rbp - 0xc0]
0x178f5:	mov	rsi, r13
0x178f8:	call	0x2710


0x17fe5:	call	0x15d60


0x1d338:	test	r14, r14
0x1d33b:	mov	qword ptr [rbx], rax
0x1d33e:	je	0x1e025


0x1e025:	xor	ebp, ebp
0x1e027:	mov	esi, 1
0x1e02c:	jmp	0x1d35d


0x1d344:	mov	esi, 1
0x1d349:	nop	dword ptr [rax]
0x1d350:	add	rsi, rsi
0x1d353:	cmp	qword ptr [rsp], rsi
0x1d357:	jae	0x1d350


0x1d35d:	mov	edi, 0x18
0x1d362:	call	0x26b0


0x1d359:	lea	rbp, [rsi - 1]
0x1d35d:	mov	edi, 0x18
0x1d362:	call	0x26b0


0x1d350:	add	rsi, rsi
0x1d353:	cmp	qword ptr [rsp], rsi
0x1d357:	jae	0x1d350


0x1d367:	mov	qword ptr [rbx + 0x88], rbp
0x1d36e:	mov	qword ptr [rbx + 0x40], rax
0x1d372:	call	0x2520


0x1d377:	mov	edi, 0xe
0x1d37c:	mov	dword ptr [rbx + 0xb4], eax
0x1d382:	call	0x27d0


0x4d57:	test	rax, rax
0x4d5a:	mov	rbx, rax
0x4d5d:	mov	qword ptr [rbp], rax
0x4d61:	mov	rdx, qword ptr [rsp + 8]
0x4d66:	jne	0x4d0b


0x4d2b:	add	rsp, 0x10
0x4d2f:	pop	rbx
0x4d30:	pop	rbp
0x4d31:	pop	r12
0x4d33:	ret	


0x9dcf:	test	rax, rax
0x9dd2:	mov	rbx, rax
0x9dd5:	mov	qword ptr [rbp + 0x10], rax
0x9dd9:	mov	rsi, qword ptr [rsp + 8]
0x9dde:	jne	0x9d67


0x9de0:	add	rsp, 0x18
0x9de4:	mov	rax, -1
0x9deb:	pop	rbx
0x9dec:	pop	rbp
0x9ded:	ret	


0xe56a:	mov	rdi, rax
0xe56d:	mov	qword ptr [rbx], rax
0xe570:	xor	eax, eax
0xe572:	test	rdi, rdi
0xe575:	je	0xe556


0xe556:	pop	rbx
0xe557:	ret	


0xe577:	call	0x1f3a0


0xe57c:	mov	eax, 1
0xe581:	pop	rbx
0xe582:	ret	


0xfc2a:	movzx	eax, word ptr [rbx + 0x70]
0xfc2e:	cmp	ax, 0xb
0xfc32:	mov	qword ptr [r12], rbp
0xfc36:	je	0xfab8


0xe86c:	test	rax, rax
0xe86f:	mov	rbp, rax
0xe872:	je	0xe8f8


0xe8f8:	pop	rbx
0xe8f9:	xor	eax, eax
0xe8fb:	pop	rbp
0xe8fc:	pop	r12
0xe8fe:	ret	


0xe878:	mov	rax, qword ptr [rbx + 0x78]
0xe87c:	mov	rdi, qword ptr [r12]
0xe880:	mov	rsi, rbp
0xe883:	mov	qword ptr [rbp + 0x10], rbx
0xe887:	mov	qword ptr [rbp], rax
0xe88b:	mov	rax, qword ptr [rbx + 0x80]
0xe892:	mov	qword ptr [rbp + 8], rax
0xe896:	call	0x8d60


0x111b1:	test	rax, rax
0x111b4:	mov	qword ptr [rbx + 0x10], rax
0x111b8:	je	0x11248


0x11248:	mov	qword ptr [rbx + 8], 0
0x11250:	mov	qword ptr [rbx], 0
0x11257:	jmp	0x1118e


0x111be:	mov	qword ptr [rax], rbp
0x111c1:	add	rsp, 8
0x111c5:	mov	eax, 1
0x111ca:	pop	rbx
0x111cb:	pop	rbp
0x111cc:	ret	


0x13405:	test	rax, rax
0x13408:	mov	rdi, rax
0x1340b:	je	0x1343c


0x1343c:	xor	eax, eax
0x1343e:	jmp	0x133db


0x1340d:	mov	rax, qword ptr [rbx]
0x13410:	mov	r10d, 1
0x13416:	mov	qword ptr [rbx], rdi
0x13419:	xor	r9d, r9d
0x1341c:	mov	r8, qword ptr [rsp + 0x18]
0x13421:	mov	rcx, qword ptr [rsp + 0x10]
0x13426:	mov	rdx, qword ptr [rsp + 8]
0x1342b:	mov	rsi, qword ptr [rsp]
0x1342f:	mov	qword ptr [rdi], rax
0x13432:	mov	eax, 8
0x13437:	jmp	0x13384


0x13384:	shl	r9, 6
0x13388:	mov	dword ptr [rsi], r10d
0x1338b:	add	rax, rdi
0x1338e:	lea	rsi, [rdi + r9]
0x13392:	mov	qword ptr [rsi + 8], 0
0x1339a:	mov	qword ptr [rsi + 0x10], rdx
0x1339e:	lea	rdi, [rsi + 0x20]
0x133a2:	mov	qword ptr [rsi + 0x18], rcx
0x133a6:	movdqu	xmm0, xmmword ptr [r8]
0x133ab:	movups	xmmword ptr [rsi + 0x30], xmm0
0x133af:	and	byte ptr [rdi + 0x1a], 0xf3
0x133b3:	test	rdx, rdx
0x133b6:	mov	qword ptr [rsi + 0x20], 0
0x133be:	mov	qword ptr [rsi + 0x28], 0
0x133c6:	mov	qword ptr [rsi + 0x40], -1
0x133ce:	je	0x133d3


0x1382b:	test	rax, rax
0x1382e:	mov	qword ptr [rbx + 0x10], rax
0x13832:	je	0x13870


0x13870:	mov	qword ptr [rbx + 8], 0
0x13878:	mov	qword ptr [rbx], 0
0x1387f:	mov	eax, 0xc
0x13884:	jmp	0x1384a


0x13834:	mov	rsi, qword ptr [rbp + 0x10]
0x13838:	lea	rdx, [r12*8]
0x13840:	mov	rdi, rax
0x13843:	call	0x2710


0x1384a:	pop	rbx
0x1384b:	pop	rbp
0x1384c:	pop	r12
0x1384e:	ret	


0x13848:	xor	eax, eax
0x1384a:	pop	rbx
0x1384b:	pop	rbp
0x1384c:	pop	r12
0x1384e:	ret	


0x17875:	lea	rcx, [rbp - 0x50]
0x17879:	test	rax, rax
0x1787c:	mov	qword ptr [rbp - 0x40], rax
0x17880:	mov	qword ptr [rbp - 0x88], rcx
0x17887:	je	0x17fac


0x1eed2:	test	rax, rax
0x1eed5:	mov	rbx, rax
0x1eed8:	je	0x1eebb


0x1eeda:	xor	edx, edx
0x1eedc:	mov	qword ptr [rbx], 0
0x1eee3:	mov	rax, rbx
0x1eee6:	mov	word ptr [rbx + 8], dx
0x1eeea:	pop	rbx
0x1eeeb:	pop	rbp
0x1eeec:	pop	r12
0x1eeee:	ret	


0x4a9e:	test	rax, rax
0x4aa1:	je	0x4ab2


0x4ab2:	pop	rbx
0x4ab3:	ret	


0x4aa3:	mov	qword ptr [rax], 0
0x4aaa:	mov	qword ptr [rax + 0x20], rbx
0x4aae:	mov	qword ptr [rax + 0x28], rbx
0x4ab2:	pop	rbx
0x4ab3:	ret	


0x4ace:	test	rax, rax
0x4ad1:	je	0x4af6


0x4af6:	pop	rbx
0x4af7:	ret	


0x4ad3:	mov	qword ptr [rax], rbx
0x4ad6:	mov	qword ptr [rax + 0x10], 0
0x4ade:	mov	qword ptr [rax + 0x18], 0
0x4ae6:	mov	qword ptr [rax + 8], 0
0x4aee:	mov	qword ptr [rax + 0x20], 0
0x4af6:	pop	rbx
0x4af7:	ret	


0x4e2b:	test	rax, rax
0x4e2e:	mov	rbx, rax
0x4e31:	je	0x4e6c


0x4e6c:	mov	rax, rbx
0x4e6f:	pop	rbx
0x4e70:	ret	


0x4e33:	lea	r8, [rip - 0x16a]
0x4e3a:	lea	rcx, [rip - 0x191]
0x4e41:	lea	rdx, [rip - 0x1a8]
0x4e48:	xor	esi, esi
0x4e4a:	mov	edi, 0xb
0x4e4f:	call	0x8560


0x85a3:	test	rax, rax
0x85a6:	mov	rbx, rax
0x85a9:	je	0x865a


0x865a:	add	rsp, 8
0x865e:	mov	rax, rbx
0x8661:	pop	rbx
0x8662:	pop	rbp
0x8663:	pop	r12
0x8665:	pop	r13
0x8667:	pop	r14
0x8669:	pop	r15
0x866b:	ret	


0x85af:	test	r15, r15
0x85b2:	lea	rdi, [rax + 0x28]
0x85b6:	je	0x8670


0x8670:	lea	rax, [rip + 0x19329]
0x8677:	mov	qword ptr [rbx + 0x28], rax
0x867b:	call	0x7f00


0x85bc:	mov	qword ptr [rax + 0x28], r15
0x85c0:	call	0x7f00


0x85c5:	test	al, al
0x85c7:	je	0x8650


0x8650:	mov	rdi, rbx
0x8653:	xor	ebx, ebx
0x8655:	call	0x2a10


0x85cd:	cmp	byte ptr [r15 + 0x10], 0
0x85d2:	je	0x86d0


0x86d0:	test	rbp, rbp
0x86d3:	movss	xmm1, dword ptr [r15 + 8]
0x86d9:	jns	0x8691


0x85d8:	mov	rdi, rbp
0x85db:	call	0x7cf0


0x86db:	mov	rax, rbp
0x86de:	pxor	xmm0, xmm0
0x86e2:	shr	rax, 1
0x86e5:	and	ebp, 1
0x86e8:	or	rax, rbp
0x86eb:	cvtsi2ss	xmm0, rax
0x86f0:	addss	xmm0, xmm0
0x86f4:	jmp	0x869a


0x8691:	pxor	xmm0, xmm0
0x8695:	cvtsi2ss	xmm0, rbp
0x869a:	divss	xmm0, xmm1
0x869e:	ucomiss	xmm0, dword ptr [rip + 0x19327]
0x86a5:	jae	0x8650


0x869a:	divss	xmm0, xmm1
0x869e:	ucomiss	xmm0, dword ptr [rip + 0x19327]
0x86a5:	jae	0x8650


0x86a7:	ucomiss	xmm0, dword ptr [rip + 0x19322]
0x86ae:	jb	0x8700


0x8700:	cvttss2si	rbp, xmm0
0x8705:	jmp	0x85d8


0x86b0:	subss	xmm0, dword ptr [rip + 0x19318]
0x86b8:	movabs	rax, 0x8000000000000000
0x86c2:	cvttss2si	rbp, xmm0
0x86c7:	xor	rbp, rax
0x86ca:	jmp	0x85d8


0x85e0:	mov	edx, 8
0x85e5:	mov	rbp, rax
0x85e8:	xor	ecx, ecx
0x85ea:	mov	rax, rdx
0x85ed:	mul	rbp
0x85f0:	jo	0x870a


0x870a:	mov	ecx, 1
0x870f:	jmp	0x85f6


0x85f6:	test	rax, rax
0x85f9:	js	0x8650


0x85fb:	test	rcx, rcx
0x85fe:	jne	0x8650


0x8600:	test	rbp, rbp
0x8603:	mov	qword ptr [rbx + 0x10], rbp
0x8607:	je	0x8650


0x8609:	mov	esi, 0x10
0x860e:	mov	rdi, rbp
0x8611:	call	0x26b0


0x8616:	test	rax, rax
0x8619:	mov	qword ptr [rbx], rax
0x861c:	je	0x8650


0x861e:	shl	rbp, 4
0x8622:	mov	qword ptr [rbx + 0x18], 0
0x862a:	mov	qword ptr [rbx + 0x20], 0
0x8632:	add	rbp, rax
0x8635:	mov	qword ptr [rbx + 0x30], r12
0x8639:	mov	qword ptr [rbx + 0x38], r13
0x863d:	mov	qword ptr [rbx + 8], rbp
0x8641:	mov	qword ptr [rbx + 0x40], r14
0x8645:	mov	qword ptr [rbx + 0x48], 0
0x864d:	jmp	0x865a


0x8680:	test	al, al
0x8682:	movss	xmm1, dword ptr [rip + 0x1933e]
0x868a:	je	0x8650


0x868c:	test	rbp, rbp
0x868f:	js	0x86db


0x4e54:	test	rax, rax
0x4e57:	mov	qword ptr [rbx], rax
0x4e5a:	je	0x4e78


0x4e78:	mov	rdi, rbx
0x4e7b:	xor	ebx, ebx
0x4e7d:	call	0x2a10


0x4e5c:	mov	qword ptr [rbx + 8], 0
0x4e64:	mov	qword ptr [rbx + 0x10], 0
0x4e6c:	mov	rax, rbx
0x4e6f:	pop	rbx
0x4e70:	ret	


0x4e82:	jmp	0x4e6c


0xe2c1:	test	rax, rax
0xe2c4:	mov	r12, rax
0xe2c7:	mov	qword ptr [rbx + 0x50], rax
0xe2cb:	jne	0xe279


0xe2cd:	test	r13d, r13d
0xe2d0:	jns	0xe300


0xe300:	lea	rsi, [rsp + 0x10]
0xe305:	mov	edi, r13d
0xe308:	call	0x2930


0x2930:	jmp	qword ptr [rip + 0x225622]




0xe54d:	test	rax, rax
0xe550:	mov	qword ptr [rbx], rax
0xe553:	setne	al
0xe556:	pop	rbx
0xe557:	ret	


0x9cd3:	test	rax, rax
0x9cd6:	mov	rbx, rax
0x9cd9:	je	0x9d10


0x9d10:	add	rsp, 8
0x9d14:	mov	rax, rbx
0x9d17:	pop	rbx
0x9d18:	pop	rbp
0x9d19:	ret	


0x9cdb:	mov	r8, qword ptr [rip + 0x21e2e6]
0x9ce2:	lea	rcx, [rip - 0x39]
0x9ce9:	lea	rdx, [rip - 0x50]
0x9cf0:	xor	esi, esi
0x9cf2:	mov	edi, 0x3fd
0x9cf7:	call	0x8560


0x9cfc:	test	rax, rax
0x9cff:	mov	qword ptr [rbx], rax
0x9d02:	je	0x9d20


0x9d20:	mov	rdi, rbx
0x9d23:	xor	ebx, ebx
0x9d25:	call	0x2a10


0x9d04:	mov	qword ptr [rbx + 8], rbp
0x9d08:	mov	qword ptr [rbx + 0x10], 0
0x9d10:	add	rsp, 8
0x9d14:	mov	rax, rbx
0x9d17:	pop	rbx
0x9d18:	pop	rbp
0x9d19:	ret	


0x9d2a:	jmp	0x9d10


0x4dfc:	test	rax, rax
0x4dff:	mov	rdi, rax
0x4e02:	mov	qword ptr [rbx], rax
0x4e05:	mov	rsi, qword ptr [rsp + 8]
0x4e0a:	jne	0x4dd3


0x4e0c:	add	rsp, 0x10
0x4e10:	mov	rax, -1
0x4e17:	pop	rbx
0x4e18:	ret	


0xc9e9:	test	rax, rax
0xc9ec:	jne	0xc9f3


0xc9ee:	test	rbx, rbx
0xc9f1:	jne	0xc9f5


0xc9f3:	pop	rbx
0xc9f4:	ret	


0xc9f5:	call	0xcc30


0x5763:	mov	rbp, rax
0x5766:	jmp	0x5619


0x5366:	mov	rdx, qword ptr [rbx + 8]
0x536a:	mov	qword ptr [rax + 8], rbp
0x536e:	mov	qword ptr [rbx + 8], rax
0x5372:	mov	qword ptr [rax], rdx
0x5375:	add	rsp, 8
0x5379:	pop	rbx
0x537a:	pop	rbp
0x537b:	ret	


0xcb99:	mov	rdx, rbx
0xcb9c:	xor	esi, esi
0xcb9e:	mov	rdi, rax
0xcba1:	pop	rbx
0xcba2:	jmp	0x2620


0xcbf4:	add	rsp, 8
0xcbf8:	mov	rdx, rbx
0xcbfb:	mov	rsi, rbp
0xcbfe:	pop	rbx
0xcbff:	pop	rbp
0xcc00:	mov	rdi, rax
0xcc03:	jmp	0x2710


0xe143:	test	rax, rax
0xe146:	mov	rbx, rax
0xe149:	je	0xe19c


0xe19c:	add	rsp, 8
0xe1a0:	mov	rax, rbx
0xe1a3:	pop	rbx
0xe1a4:	pop	rbp
0xe1a5:	pop	r12
0xe1a7:	pop	r13
0xe1a9:	ret	


0xe14b:	lea	rdi, [rax + 0x108]
0xe152:	mov	rdx, rbp
0xe155:	mov	rsi, r13
0xe158:	call	0x2710


0xe15d:	mov	rax, qword ptr [r12 + 0x20]
0xe162:	mov	byte ptr [rbx + rbp + 0x108], 0
0xe16a:	mov	qword ptr [rbx + 0x60], rbp
0xe16e:	mov	qword ptr [rbx + 0x50], r12
0xe172:	mov	dword ptr [rbx + 0x40], 0
0xe179:	mov	qword ptr [rbx + 0x18], 0
0xe181:	mov	qword ptr [rbx + 0x38], rax
0xe185:	mov	dword ptr [rbx + 0x72], 0x30000
0xe18c:	mov	qword ptr [rbx + 0x20], 0
0xe194:	mov	qword ptr [rbx + 0x28], 0
0xe19c:	add	rsp, 8
0xe1a0:	mov	rax, rbx
0xe1a3:	pop	rbx
0xe1a4:	pop	rbp
0xe1a5:	pop	r12
0xe1a7:	pop	r13
0xe1a9:	ret	


0xf4f3:	test	rax, rax
0xf4f6:	mov	rcx, rax
0xf4f9:	je	0xf6f0


0xf6f0:	mov	rdi, r12
0xf6f3:	call	0xe1b0


0xf4ff:	mov	qword ptr [rax + 0x58], 0
0xf507:	mov	qword ptr [rax + 8], r15
0xf50b:	lea	rax, [rax + 0x108]
0xf512:	test	r12, r12
0xf515:	mov	qword ptr [rcx + 0x30], rax
0xf519:	je	0xf690


0xf690:	xor	edx, edx
0xf692:	mov	rsi, rcx
0xf695:	mov	rdi, rbx
0xf698:	mov	qword ptr [rsp + 8], rcx
0xf69d:	call	0xde40


0xf51f:	cmp	byte ptr [rsp + 0x16], 0
0xf524:	je	0xf690


0xf52a:	mov	esi, 0xb
0xf52f:	test	r14, r14
0xf532:	mov	qword ptr [rcx + 0xa8], 2
0xf53d:	mov	word ptr [rcx + 0x70], si
0xf541:	je	0xf6d0


0xf6d0:	mov	qword ptr [rcx + 0x10], 0
0xf6d8:	mov	rax, qword ptr [rsp + 0x18]
0xf6dd:	mov	qword ptr [rsp + 0x18], rcx
0xf6e2:	mov	qword ptr [rax + 0x10], rcx
0xf6e6:	jmp	0xf54e


0xf547:	mov	qword ptr [rcx + 0x10], r12
0xf54b:	mov	r12, rcx
0xf54e:	add	rbp, 1
0xf552:	mov	rsi, qword ptr [r13 + rbp*8]
0xf557:	test	rsi, rsi
0xf55a:	je	0xf5b0


0xf54e:	add	rbp, 1
0xf552:	mov	rsi, qword ptr [r13 + rbp*8]
0xf557:	test	rsi, rsi
0xf55a:	je	0xf5b0


0xf5b0:	test	r14, r14
0xf5b3:	je	0xf5cc


0xf5b5:	cmp	rbp, 1
0xf5b9:	jbe	0xf5cc


0xf5bb:	mov	rsi, r12
0xf5be:	mov	rdx, rbp
0xf5c1:	mov	rdi, rbx
0xf5c4:	call	0xe010


0xf5c9:	mov	r12, rax
0xf5cc:	lea	rsi, [rip + 0x12a0e]
0xf5d3:	xor	edx, edx
0xf5d5:	mov	rdi, rbx
0xf5d8:	call	0xe120


0xf6a2:	mov	rcx, qword ptr [rsp + 8]
0xf6a7:	test	r14, r14
0xf6aa:	mov	word ptr [rcx + 0x70], ax
0xf6ae:	jne	0xf547


0xf6b4:	test	r12, r12
0xf6b7:	mov	qword ptr [rcx + 0x10], 0
0xf6bf:	jne	0xf6d8


0xf6c1:	mov	qword ptr [rsp + 0x18], rcx
0xf6c6:	mov	r12, rcx
0xf6c9:	jmp	0xf54e


0xf6d8:	mov	rax, qword ptr [rsp + 0x18]
0xf6dd:	mov	qword ptr [rsp + 0x18], rcx
0xf6e2:	mov	qword ptr [rax + 0x10], rcx
0xf6e6:	jmp	0xf54e


0xf6f8:	mov	rdi, r15
0xf6fb:	call	0x2a10


0xf700:	mov	rdi, qword ptr [rbx + 0x20]
0xf704:	call	0x2a10


0xf5dd:	test	rax, rax
0xf5e0:	mov	qword ptr [rbx], rax
0xf5e3:	je	0xf6f0


0xf5e9:	mov	edi, dword ptr [rbx + 0x48]
0xf5ec:	mov	edx, 9
0xf5f1:	lea	rsi, [rbx + 0x58]
0xf5f5:	mov	qword ptr [rax + 0x10], r12
0xf5f9:	mov	word ptr [rax + 0x70], dx
0xf5fd:	mov	qword ptr [rax + 0x58], 1
0xf605:	call	0xe520


0xf60a:	test	al, al
0xf60c:	je	0xf6f0


0xf612:	mov	esi, dword ptr [rbx + 0x48]
0xf615:	test	esi, 0x204
0xf61b:	jne	0xf640


0xf61d:	mov	edi, dword ptr [rbx + 0x2c]
0xf620:	lea	rdx, [rip + 0x13075]
0xf627:	call	0xe590


0xf640:	lea	rdi, [rbx + 0x60]
0xf644:	mov	esi, 0xffffffff
0xf649:	call	0x1f510


0xf48c:	test	rax, rax
0xf48f:	mov	r15, rax
0xf492:	je	0xf700


0xf498:	mov	rax, -1
0xf49f:	test	r14, r14
0xf4a2:	mov	rsi, qword ptr [r13]
0xf4a6:	mov	qword ptr [r15 + 0x58], rax
0xf4aa:	mov	qword ptr [r15 + 0x68], rax
0xf4ae:	je	0xf4bd


0xf4bd:	test	rsi, rsi
0xf4c0:	je	0xf72c


0x112c5:	test	rax, rax
0x112c8:	mov	qword ptr [rbp + 0x30], rax
0x112cc:	je	0x1130e


0x1130e:	pop	rbx
0x1130f:	mov	eax, 0xc
0x11314:	pop	rbp
0x11315:	pop	r12
0x11317:	pop	r13
0x11319:	pop	r14
0x1131b:	ret	


0x112ce:	test	rbx, rbx
0x112d1:	jle	0x11320


0x11320:	and	r12, qword ptr [r14 + 0x88]
0x11327:	mov	rax, qword ptr [r14 + 0x40]
0x1132b:	lea	rdx, [r12 + r12*2]
0x1132f:	lea	rbx, [rax + rdx*8]
0x11333:	mov	rdx, qword ptr [rbx]
0x11336:	cmp	qword ptr [rbx + 8], rdx
0x1133a:	mov	rax, qword ptr [rbx + 0x10]
0x1133e:	lea	rsi, [rdx + 1]
0x11342:	jle	0x11356


0x112d3:	xor	ebx, ebx
0x112d5:	jmp	0x112ea


0x11356:	lea	r12, [rsi + rsi]
0x1135a:	mov	rdi, rax
0x1135d:	shl	rsi, 4
0x11361:	call	0x2830


0x11344:	mov	qword ptr [rbx], rsi
0x11347:	mov	qword ptr [rax + rdx*8], rbp
0x1134b:	xor	eax, eax
0x1134d:	pop	rbx
0x1134e:	pop	rbp
0x1134f:	pop	r12
0x11351:	pop	r13
0x11353:	pop	r14
0x11355:	ret	


0x112ea:	mov	rax, qword ptr [rbp + 0x18]
0x112ee:	mov	rsi, qword ptr [rax + rbx*8]
0x112f2:	mov	rax, rsi
0x112f5:	shl	rax, 4
0x112f9:	add	rax, qword ptr [r14]
0x112fc:	test	byte ptr [rax + 8], 8
0x11300:	jne	0x112e0


0x11302:	mov	rdi, r13
0x11305:	call	0x110f0


0x112e0:	add	rbx, 1
0x112e4:	cmp	qword ptr [rbp + 0x10], rbx
0x112e8:	jle	0x11320


0x1130a:	test	al, al
0x1130c:	jne	0x112e0


0x11366:	test	rax, rax
0x11369:	je	0x1130e


0x1136b:	mov	rdx, qword ptr [rbx]
0x1136e:	mov	qword ptr [rbx + 0x10], rax
0x11372:	mov	qword ptr [rbx + 8], r12
0x11376:	lea	rsi, [rdx + 1]
0x1137a:	jmp	0x11344


0x13e3b:	test	eax, eax
0x13e3d:	jne	0x13e94


0x13e94:	mov	rdi, rbx
0x13e97:	call	0x12330


0x13bf6:	test	eax, eax
0x13bf8:	je	0x13a9c


0x12dfc:	test	rax, rax
0x12dff:	mov	qword ptr [rsp + 0x30], rax
0x12e04:	je	0x13040


0x13040:	mov	eax, 0xc
0x13045:	jmp	0x12f46


0x12e0a:	mov	rax, qword ptr [r15 + 0x30]
0x12e0e:	mov	rdx, qword ptr [r15]
0x12e11:	mov	r13, rbp
0x12e14:	shl	r13, 4
0x12e18:	mov	qword ptr [rax + rbx + 8], -1
0x12e21:	lea	rax, [rdx + r13]
0x12e25:	mov	r8d, dword ptr [rax + 8]
0x12e29:	test	r8d, 0x3ff00
0x12e30:	jne	0x12fd0


0x12f46:	mov	rsi, qword ptr [rsp + 0x58]
0x12f4b:	xor	rsi, qword ptr fs:[0x28]
0x12f54:	jne	0x1304a


0x12e36:	test	byte ptr [rax + 8], 8
0x12e3a:	je	0x12f00


0x12fd0:	cmp	qword ptr [r12 + 8], 0
0x12fd6:	je	0x12f00


0x12f5a:	add	rsp, 0x68
0x12f5e:	pop	rbx
0x12f5f:	pop	rbp
0x12f60:	pop	r12
0x12f62:	pop	r13
0x12f64:	pop	r14
0x12f66:	pop	r15
0x12f68:	ret	


0x1304a:	call	0x2560


0x12f00:	lea	rdi, [rsp + 0x20]
0x12f05:	mov	rsi, rbp
0x12f08:	call	0x11160


0x12e40:	mov	rsi, qword ptr [r15 + 0x28]
0x12e44:	lea	rax, [rsi + rbx]
0x12e48:	cmp	qword ptr [rax + 8], 0
0x12e4d:	jle	0x12f00


0x12fdc:	mov	rcx, qword ptr [r12 + 0x10]
0x12fe1:	mov	rcx, qword ptr [rcx]
0x12fe4:	shl	rcx, 4
0x12fe8:	test	byte ptr [rdx + rcx + 0xa], 4
0x12fed:	jne	0x12e36


0x12e53:	lea	rdx, [rsp + 0x20]
0x12e58:	mov	byte ptr [rsp + 0x1b], 0
0x12e5d:	xor	r14d, r14d
0x12e60:	lea	r12, [rsp + 0x40]
0x12e65:	mov	qword ptr [rsp + 8], rdx
0x12e6a:	jmp	0x12e86


0x12ff3:	shr	r8d, 8
0x12ff7:	mov	rcx, rbp
0x12ffa:	mov	rdx, rbp
0x12ffd:	and	r8d, 0x3ff
0x13004:	mov	rsi, rbp
0x13007:	mov	rdi, r15
0x1300a:	call	0x120b0


0x12e86:	mov	rax, qword ptr [rax + 0x10]
0x12e8a:	mov	rdx, qword ptr [rax + r14*8]
0x12e8e:	mov	rax, qword ptr [r15 + 0x30]
0x12e92:	lea	r8, [rdx + rdx*2]
0x12e96:	lea	r13, [r8*8]
0x12e9e:	add	rax, r13
0x12ea1:	mov	rcx, qword ptr [rax + 8]
0x12ea5:	cmp	rcx, -1
0x12ea9:	je	0x12f70


0x12f70:	lea	rax, [rsi + rbx]
0x12f74:	add	r14, 1
0x12f78:	mov	byte ptr [rsp + 0x1b], 1
0x12f7d:	cmp	qword ptr [rax + 8], r14
0x12f81:	jg	0x12e86


0x12eaf:	test	rcx, rcx
0x12eb2:	je	0x13028


0x12f87:	lea	rdi, [rsp + 0x20]
0x12f8c:	mov	rsi, rbp
0x12f8f:	call	0x11160


0x13028:	mov	rsi, r15
0x1302b:	mov	rdi, r12
0x1302e:	call	0x12da0


0x12eb8:	movdqu	xmm0, xmmword ptr [rax]
0x12ebc:	movaps	xmmword ptr [rsp + 0x40], xmm0
0x12ec1:	mov	rax, qword ptr [rax + 0x10]
0x12ec5:	mov	qword ptr [rsp + 0x50], rax
0x12eca:	mov	rdi, qword ptr [rsp + 8]
0x12ecf:	mov	rsi, r12
0x12ed2:	call	0x12bc0


0x12ed7:	test	eax, eax
0x12ed9:	jne	0x12f46


0x12edb:	mov	rax, qword ptr [r15 + 0x30]
0x12edf:	cmp	qword ptr [rax + r13 + 8], 0
0x12ee5:	jne	0x12e70


0x12ee7:	mov	rdi, qword ptr [rsp + 0x50]
0x12eec:	call	0x2a10


0x12e70:	mov	rsi, qword ptr [r15 + 0x28]
0x12e74:	add	r14, 1
0x12e78:	lea	rax, [rsi + rbx]
0x12e7c:	cmp	qword ptr [rax + 8], r14
0x12e80:	jle	0x12f87


0x12ef1:	mov	byte ptr [rsp + 0x1b], 1
0x12ef6:	jmp	0x12e70


0x13033:	test	eax, eax
0x13035:	je	0x12eca


0x12eca:	mov	rdi, qword ptr [rsp + 8]
0x12ecf:	mov	rsi, r12
0x12ed2:	call	0x12bc0


0x1303b:	jmp	0x12f46


0x1300f:	test	eax, eax
0x13011:	jne	0x12f46


0x13017:	mov	rax, qword ptr [r15]
0x1301a:	add	rax, r13
0x1301d:	jmp	0x12e36


0x12f94:	test	al, al
0x12f96:	je	0x13040


0x12f9c:	cmp	byte ptr [rsp + 0x1c], 1
0x12fa1:	mov	rax, qword ptr [r15 + 0x30]
0x12fa5:	lea	rdx, [rax + rbx]
0x12fa9:	je	0x12f19


0x12f19:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x12f1f:	movups	xmmword ptr [rax + rbx], xmm0
0x12f23:	mov	rdx, qword ptr [rsp + 0x30]
0x12f28:	mov	qword ptr [rax + rbx + 0x10], rdx
0x12f2d:	mov	rbx, qword ptr [rsp + 0x10]
0x12f32:	mov	rax, qword ptr [rsp + 0x30]
0x12f37:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x12f3d:	movaps	xmmword ptr [rbx], xmm0
0x12f40:	mov	qword ptr [rbx + 0x10], rax
0x12f44:	xor	eax, eax
0x12f46:	mov	rsi, qword ptr [rsp + 0x58]
0x12f4b:	xor	rsi, qword ptr fs:[0x28]
0x12f54:	jne	0x1304a


0x12faf:	cmp	byte ptr [rsp + 0x1b], 0
0x12fb4:	je	0x12f19


0x12fba:	mov	qword ptr [rdx + 8], 0
0x12fc2:	jmp	0x12f2d


0x12f2d:	mov	rbx, qword ptr [rsp + 0x10]
0x12f32:	mov	rax, qword ptr [rsp + 0x30]
0x12f37:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x12f3d:	movaps	xmmword ptr [rbx], xmm0
0x12f40:	mov	qword ptr [rbx + 0x10], rax
0x12f44:	xor	eax, eax
0x12f46:	mov	rsi, qword ptr [rsp + 0x58]
0x12f4b:	xor	rsi, qword ptr fs:[0x28]
0x12f54:	jne	0x1304a


0x12f0d:	test	al, al
0x12f0f:	je	0x13040


0x12f15:	mov	rax, qword ptr [r15 + 0x30]
0x12f19:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x12f1f:	movups	xmmword ptr [rax + rbx], xmm0
0x12f23:	mov	rdx, qword ptr [rsp + 0x30]
0x12f28:	mov	qword ptr [rax + rbx + 0x10], rdx
0x12f2d:	mov	rbx, qword ptr [rsp + 0x10]
0x12f32:	mov	rax, qword ptr [rsp + 0x30]
0x12f37:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x12f3d:	movaps	xmmword ptr [rbx], xmm0
0x12f40:	mov	qword ptr [rbx + 0x10], rax
0x12f44:	xor	eax, eax
0x12f46:	mov	rsi, qword ptr [rsp + 0x58]
0x12f4b:	xor	rsi, qword ptr fs:[0x28]
0x12f54:	jne	0x1304a


0x13098:	test	rax, rax
0x1309b:	mov	qword ptr [rsp + 0x20], rax
0x130a0:	je	0x1319d


0x1319d:	mov	eax, 0xc
0x131a2:	jmp	0x1317e


0x130a6:	test	r12, r12
0x130a9:	jle	0x1313b


0x1317e:	mov	rdx, qword ptr [rsp + 0x28]
0x13183:	xor	rdx, qword ptr fs:[0x28]
0x1318c:	jne	0x131a4


0x1313b:	mov	rdi, qword ptr [r15 + 0x10]
0x1313f:	call	0x2a10


0x130af:	lea	r12, [rsp + 0x10]
0x130b4:	xor	r13d, r13d
0x130b7:	nop	word ptr [rax + rax]
0x130c0:	mov	rax, qword ptr [r15 + 0x10]
0x130c4:	mov	rdx, qword ptr [rax + r13*8]
0x130c8:	mov	rax, qword ptr [r14 + 0x30]
0x130cc:	lea	rcx, [rdx + rdx*2]
0x130d0:	lea	rsi, [rax + rcx*8]
0x130d4:	mov	r8, qword ptr [rsi + 8]
0x130d8:	test	r8, r8
0x130db:	jle	0x13160


0x1318e:	add	rsp, 0x38
0x13192:	pop	rbx
0x13193:	pop	rbp
0x13194:	pop	r12
0x13196:	pop	r13
0x13198:	pop	r14
0x1319a:	pop	r15
0x1319c:	ret	


0x131a4:	call	0x2560


0x13160:	mov	rdi, r12
0x13163:	call	0x12bc0


0x130e1:	mov	r10, qword ptr [rsi + 0x10]
0x130e5:	mov	r9, qword ptr [r14]
0x130e8:	xor	ecx, ecx
0x130ea:	jmp	0x130f9


0x130f9:	mov	rdi, qword ptr [r10 + rcx*8]
0x130fd:	mov	rax, rdi
0x13100:	shl	rax, 4
0x13104:	add	rax, r9
0x13107:	movzx	r11d, byte ptr [rax + 8]
0x1310c:	cmp	ebx, r11d
0x1310f:	jne	0x130f0


0x13111:	cmp	rbp, qword ptr [rax]
0x13114:	jne	0x130f0


0x130f0:	add	rcx, 1
0x130f4:	cmp	r8, rcx
0x130f7:	je	0x13160


0x13116:	cmp	rdi, -1
0x1311a:	je	0x13160


0x1311c:	mov	r8d, ebx
0x1311f:	mov	rcx, rbp
0x13122:	mov	rsi, r12
0x13125:	mov	rdi, r14
0x13128:	call	0x12720


0x1312d:	test	eax, eax
0x1312f:	jne	0x1316c


0x13131:	add	r13, 1
0x13135:	cmp	qword ptr [r15 + 8], r13
0x13139:	jg	0x130c0


0x1316c:	mov	rdi, qword ptr [rsp + 0x20]
0x13171:	mov	dword ptr [rsp + 0xc], eax
0x13175:	call	0x2a10


0x130c0:	mov	rax, qword ptr [r15 + 0x10]
0x130c4:	mov	rdx, qword ptr [rax + r13*8]
0x130c8:	mov	rax, qword ptr [r14 + 0x30]
0x130cc:	lea	rcx, [rdx + rdx*2]
0x130d0:	lea	rsi, [rax + rcx*8]
0x130d4:	mov	r8, qword ptr [rsi + 8]
0x130d8:	test	r8, r8
0x130db:	jle	0x13160


0x13168:	test	eax, eax
0x1316a:	je	0x13131


0x1317a:	mov	eax, dword ptr [rsp + 0xc]
0x1317e:	mov	rdx, qword ptr [rsp + 0x28]
0x13183:	xor	rdx, qword ptr fs:[0x28]
0x1318c:	jne	0x131a4


0x13144:	mov	rax, qword ptr [rsp + 0x20]
0x13149:	movdqa	xmm0, xmmword ptr [rsp + 0x10]
0x1314f:	mov	qword ptr [r15 + 0x10], rax
0x13153:	xor	eax, eax
0x13155:	movaps	xmmword ptr [r15], xmm0
0x13159:	jmp	0x1317e


0x1423d:	mov	rsi, r15
0x14240:	mov	rdi, rbp
0x14243:	mov	r14d, eax
0x14246:	call	0x12bc0


0x1424b:	mov	rdi, qword ptr [rsp + 0x60]
0x14250:	mov	r15d, eax
0x14253:	call	0x2a10


0x14258:	mov	eax, dword ptr [rsp + 0x4c]
0x1425c:	mov	edx, r14d
0x1425f:	or	edx, r15d
0x14262:	or	edx, eax
0x14264:	jne	0x142f6


0x1426a:	mov	rcx, qword ptr [rbx + 0xd8]
0x14271:	jmp	0x140b3


0x142f6:	test	eax, eax
0x142f8:	jne	0x1404f


0x140b3:	mov	rax, qword ptr [rsp + 0x30]
0x140b8:	lea	r15, [rcx + rax]
0x140bc:	jmp	0x14198


0x142fe:	test	r14d, r14d
0x14301:	mov	eax, r14d
0x14304:	cmove	eax, r15d
0x14308:	jmp	0x1404f


0x175b8:	test	eax, eax
0x175ba:	mov	dword ptr [rsp + 0x88], eax
0x175c1:	je	0x176dd


0x175c7:	jmp	0x17620


0x17429:	test	eax, eax
0x1742b:	mov	dword ptr [rsp + 0x88], eax
0x17432:	jne	0x17620


0x17438:	mov	r8d, dword ptr [rsp + 0x110]
0x17440:	mov	rcx, qword ptr [rsp + 0x48]
0x17445:	mov	rdx, rbx
0x17448:	mov	rsi, qword ptr [rsp + 8]
0x1744d:	mov	rdi, r15
0x17450:	call	0x13f90


0x17455:	test	eax, eax
0x17457:	mov	dword ptr [rsp + 0x88], eax
0x1745e:	jne	0x17620


0x15166:	test	rax, rax
0x15169:	mov	qword ptr [rsp + 0x18], rax
0x1516e:	je	0x15540


0x15540:	xor	eax, eax
0x15542:	mov	rbx, qword ptr [rsp + 0xf8]
0x1554a:	xor	rbx, qword ptr fs:[0x28]
0x15553:	jne	0x15ca4


0x15174:	mov	rax, qword ptr [rsp + 0x18]
0x15179:	pxor	xmm0, xmm0
0x1517d:	lea	rbx, [rax + 0x1800]
0x15184:	mov	rax, qword ptr [rsp + 8]
0x15189:	movaps	xmmword ptr [rsp + 0x90], xmm0
0x15191:	mov	qword ptr [rsp + 0x40], rbx
0x15196:	movaps	xmmword ptr [rsp + 0xa0], xmm0
0x1519e:	cmp	qword ptr [rax + 0x10], 0
0x151a3:	mov	qword ptr [rax + 0x58], 0
0x151ab:	mov	qword ptr [rax + 0x60], 0
0x151b3:	jle	0x15c2a


0x15559:	add	rsp, 0x108
0x15560:	pop	rbx
0x15561:	pop	rbp
0x15562:	pop	r12
0x15564:	pop	r13
0x15566:	pop	r14
0x15568:	pop	r15
0x1556a:	ret	


0x15ca4:	call	0x2560


0x15c2a:	mov	rdi, qword ptr [rsp + 0x18]
0x15c2f:	call	0x2a10


0x151b9:	mov	qword ptr [rsp + 0x30], r15
0x151be:	xor	ebp, ebp
0x151c0:	mov	qword ptr [rsp + 0x10], 0
0x151c9:	mov	r15, rbx
0x151cc:	mov	rbx, qword ptr [rsp + 0x10]
0x151d1:	lea	rax, [rbx*8]
0x151d9:	mov	qword ptr [rsp + 0x20], rax
0x151de:	mov	rax, qword ptr [rsp + 8]
0x151e3:	mov	rax, qword ptr [rax + 0x18]
0x151e7:	mov	r13, qword ptr [rax + rbx*8]
0x151eb:	mov	rax, qword ptr [rsp + 0x30]
0x151f0:	shl	r13, 4
0x151f4:	add	r13, qword ptr [rax]
0x151f7:	movzx	r14d, byte ptr [r13 + 8]
0x151fc:	mov	eax, dword ptr [r13 + 8]
0x15200:	shr	eax, 8
0x15203:	and	ax, 0x3ff
0x15207:	cmp	r14d, 1
0x1520b:	je	0x15570


0x15570:	movzx	ecx, byte ptr [r13]
0x15575:	lea	r12, [rsp + 0x90]
0x1557d:	mov	edi, 1
0x15582:	mov	rdx, rcx
0x15585:	and	ecx, 0x3f
0x15588:	shr	rdx, 3
0x1558c:	shl	rdi, cl
0x1558f:	and	edx, 0x18
0x15592:	or	qword ptr [r12 + rdx], rdi
0x15596:	test	ax, ax
0x15599:	je	0x15660


0x15211:	cmp	r14d, 3
0x15215:	je	0x159e0


0x15660:	xor	ebx, ebx
0x15662:	test	rbp, rbp
0x15665:	jle	0x157cb


0x1559f:	test	al, 0x20
0x155a1:	jne	0x15910


0x159e0:	mov	rsi, qword ptr [r13]
0x159e4:	lea	r12, [rsp + 0x90]
0x159ec:	xor	edx, edx
0x159ee:	mov	rcx, qword ptr [r12 + rdx]
0x159f2:	or	rcx, qword ptr [rsi + rdx]
0x159f6:	mov	qword ptr [r12 + rdx], rcx
0x159fa:	add	rdx, 8
0x159fe:	cmp	rdx, 0x20
0x15a02:	jne	0x159ee


0x1521b:	cmp	r14d, 5
0x1521f:	je	0x158a0


0x157cb:	cmp	rbp, rbx
0x157ce:	jne	0x1522f


0x1566b:	mov	qword ptr [rsp + 0x28], r13
0x15670:	mov	r13, r15
0x15673:	nop	dword ptr [rax + rax]
0x15678:	mov	r10, rbx
0x1567b:	shl	r10, 5
0x1567f:	cmp	r14d, 1
0x15683:	jne	0x156a8


0x155a7:	test	al, 0x80
0x155a9:	jne	0x15844


0x15910:	mov	rdx, qword ptr [rsp + 0x90]
0x15918:	pxor	xmm0, xmm0
0x1591c:	and	dh, 4
0x1591f:	movaps	xmmword ptr [r12], xmm0
0x15924:	movaps	xmmword ptr [r12 + 0x10], xmm0
0x1592a:	je	0x1522f


0x15a04:	jmp	0x15596


0x159ee:	mov	rcx, qword ptr [r12 + rdx]
0x159f2:	or	rcx, qword ptr [rsi + rdx]
0x159f6:	mov	qword ptr [r12 + rdx], rcx
0x159fa:	add	rdx, 8
0x159fe:	cmp	rdx, 0x20
0x15a02:	jne	0x159ee


0x158a0:	mov	rsi, qword ptr [rsp + 0x30]
0x158a5:	cmp	dword ptr [rsi + 0xb4], 1
0x158ac:	jle	0x159b5


0x15225:	cmp	r14d, 7
0x15229:	je	0x15a09


0x157d4:	mov	rax, rbp
0x157d7:	movdqa	xmm0, xmmword ptr [rsp + 0x90]
0x157e0:	shl	rax, 5
0x157e4:	mov	rbx, qword ptr [rsp + 0x20]
0x157e9:	mov	edi, 8
0x157ee:	add	rax, r15
0x157f1:	movups	xmmword ptr [rax], xmm0
0x157f4:	movdqa	xmm0, xmmword ptr [rsp + 0xa0]
0x157fd:	movups	xmmword ptr [rax + 0x10], xmm0
0x15801:	mov	rax, qword ptr [rsp + 8]
0x15806:	mov	rax, qword ptr [rax + 0x18]
0x1580a:	mov	r13, qword ptr [rax + rbx]
0x1580e:	mov	rbx, qword ptr [rsp + 0x18]
0x15813:	lea	rax, [rbp + rbp*2]
0x15818:	lea	rbx, [rbx + rax*8]
0x1581c:	mov	qword ptr [rbx], 1
0x15823:	mov	qword ptr [rbx + 8], 1
0x1582b:	call	0x2780


0x1522f:	mov	rbx, qword ptr [rsp + 8]
0x15234:	add	qword ptr [rsp + 0x10], 1
0x1523a:	mov	rax, qword ptr [rsp + 0x10]
0x1523f:	cmp	rax, qword ptr [rbx + 0x10]
0x15243:	jl	0x151cc


0x15685:	mov	rax, qword ptr [rsp + 0x28]
0x1568a:	movzx	edx, byte ptr [rax]
0x1568d:	mov	rax, rdx
0x15690:	shr	rax, 3
0x15694:	and	eax, 0x18
0x15697:	add	rax, r13
0x1569a:	mov	rax, qword ptr [rax + r10]
0x1569e:	bt	rax, rdx
0x156a2:	jae	0x157bb


0x156a8:	lea	rdi, [r13 + r10]
0x156ad:	lea	rsi, [rsp + 0xb0]
0x156b5:	xor	ecx, ecx
0x156b7:	xor	eax, eax
0x156b9:	mov	rdx, qword ptr [r12 + rax*8]
0x156bd:	and	rdx, qword ptr [rdi + rax*8]
0x156c1:	mov	qword ptr [rsi + rax*8], rdx
0x156c5:	add	rax, 1
0x156c9:	or	rcx, rdx
0x156cc:	cmp	rax, 4
0x156d0:	jne	0x156b9


0x155af:	test	al, 4
0x155b1:	je	0x15605


0x15844:	pxor	xmm0, xmm0
0x15848:	movaps	xmmword ptr [r12], xmm0
0x1584d:	movaps	xmmword ptr [r12 + 0x10], xmm0
0x15853:	jmp	0x1522f


0x15930:	mov	qword ptr [rsp + 0x90], 0x400
0x1593c:	jmp	0x155a7


0x15596:	test	ax, ax
0x15599:	je	0x15660


0x159b5:	pcmpeqd	xmm0, xmm0
0x159b9:	lea	r12, [rsp + 0x90]
0x159c1:	movaps	xmmword ptr [rsp + 0x90], xmm0
0x159c9:	movaps	xmmword ptr [rsp + 0xa0], xmm0
0x159d1:	jmp	0x158d6


0x158b2:	mov	rsi, qword ptr [rsi + 0x78]
0x158b6:	lea	r12, [rsp + 0x90]
0x158be:	xor	edx, edx
0x158c0:	mov	rcx, qword ptr [r12 + rdx]
0x158c4:	or	rcx, qword ptr [rsi + rdx]
0x158c8:	mov	qword ptr [r12 + rdx], rcx
0x158cc:	add	rdx, 8
0x158d0:	cmp	rdx, 0x20
0x158d4:	jne	0x158c0


0x15a09:	pcmpeqd	xmm0, xmm0
0x15a0d:	lea	r12, [rsp + 0x90]
0x15a15:	movaps	xmmword ptr [rsp + 0x90], xmm0
0x15a1d:	jmp	0x158d6


0x151cc:	mov	rbx, qword ptr [rsp + 0x10]
0x151d1:	lea	rax, [rbx*8]
0x151d9:	mov	qword ptr [rsp + 0x20], rax
0x151de:	mov	rax, qword ptr [rsp + 8]
0x151e3:	mov	rax, qword ptr [rax + 0x18]
0x151e7:	mov	r13, qword ptr [rax + rbx*8]
0x151eb:	mov	rax, qword ptr [rsp + 0x30]
0x151f0:	shl	r13, 4
0x151f4:	add	r13, qword ptr [rax]
0x151f7:	movzx	r14d, byte ptr [r13 + 8]
0x151fc:	mov	eax, dword ptr [r13 + 8]
0x15200:	shr	eax, 8
0x15203:	and	ax, 0x3ff
0x15207:	cmp	r14d, 1
0x1520b:	je	0x15570


0x15245:	test	rbp, rbp
0x15248:	mov	r15, qword ptr [rsp + 0x30]
0x1524d:	jle	0x15ca9


0x157bb:	add	rbx, 1
0x157bf:	cmp	rbx, rbp
0x157c2:	jl	0x15678


0x156d2:	test	rcx, rcx
0x156d5:	je	0x157bb


0x156b9:	mov	rdx, qword ptr [r12 + rax*8]
0x156bd:	and	rdx, qword ptr [rdi + rax*8]
0x156c1:	mov	qword ptr [rsi + rax*8], rdx
0x156c5:	add	rax, 1
0x156c9:	or	rcx, rdx
0x156cc:	cmp	rax, 4
0x156d0:	jne	0x156b9


0x15605:	test	al, 8
0x15607:	je	0x15660


0x155b3:	cmp	r14d, 1
0x155b7:	je	0x15995


0x158d6:	mov	rbx, qword ptr [rsp + 0x30]
0x158db:	mov	rdx, qword ptr [rbx + 0xd8]
0x158e2:	test	dl, 0x40
0x158e5:	jne	0x158f3


0x158c0:	mov	rcx, qword ptr [r12 + rdx]
0x158c4:	or	rcx, qword ptr [rsi + rdx]
0x158c8:	mov	qword ptr [r12 + rdx], rcx
0x158cc:	add	rdx, 8
0x158d0:	cmp	rdx, 0x20
0x158d4:	jne	0x158c0


0x15ca9:	mov	rdi, qword ptr [rsp + 0x18]
0x15cae:	call	0x2a10


0x15253:	lea	rbx, [rbp + 1]
0x15257:	mov	qword ptr [rsp + 0x78], 0
0x15260:	mov	qword ptr [rsp + 0x70], rbx
0x15265:	shl	rbx, 3
0x15269:	mov	rdi, rbx
0x1526c:	call	0x2780


0x15678:	mov	r10, rbx
0x1567b:	shl	r10, 5
0x1567f:	cmp	r14d, 1
0x15683:	jne	0x156a8


0x157c8:	mov	r15, r13
0x157cb:	cmp	rbp, rbx
0x157ce:	jne	0x1522f


0x156db:	lea	r11, [rsp + 0xd0]
0x156e3:	xor	r15d, r15d
0x156e6:	xor	r9d, r9d
0x156e9:	xor	ecx, ecx
0x156eb:	mov	rsi, qword ptr [r12 + rcx*8]
0x156ef:	mov	rax, qword ptr [rdi + rcx*8]
0x156f3:	mov	rdx, rsi
0x156f6:	not	rdx
0x156f9:	and	rdx, rax
0x156fc:	not	rax
0x156ff:	and	rax, rsi
0x15702:	mov	qword ptr [r11 + rcx*8], rdx
0x15706:	or	r9, rdx
0x15709:	mov	qword ptr [r12 + rcx*8], rax
0x1570d:	add	rcx, 1
0x15711:	or	r15, rax
0x15714:	cmp	rcx, 4
0x15718:	jne	0x156eb


0x15609:	cmp	r14d, 1
0x1560d:	je	0x15941


0x15995:	test	byte ptr [r13 + 0xa], 0x40
0x1599a:	je	0x15844


0x155bd:	mov	r8, qword ptr [rsp + 0x30]
0x155c2:	cmp	dword ptr [r8 + 0xb4], 1
0x155ca:	jle	0x15a22


0x158e7:	and	qword ptr [rsp + 0x90], 0xfffffffffffffbff
0x158f3:	and	edx, 0x80
0x158f9:	je	0x15596


0x158f3:	and	edx, 0x80
0x158f9:	je	0x15596


0x1571a:	mov	rdi, qword ptr [rsp + 0x18]
0x1571f:	lea	rax, [rbx + rbx*2]
0x15723:	test	r9, r9
0x15726:	lea	rdx, [rdi + rax*8]
0x1572a:	je	0x15794


0x156eb:	mov	rsi, qword ptr [r12 + rcx*8]
0x156ef:	mov	rax, qword ptr [rdi + rcx*8]
0x156f3:	mov	rdx, rsi
0x156f6:	not	rdx
0x156f9:	and	rdx, rax
0x156fc:	not	rax
0x156ff:	and	rax, rsi
0x15702:	mov	qword ptr [r11 + rcx*8], rdx
0x15706:	or	r9, rdx
0x15709:	mov	qword ptr [r12 + rcx*8], rax
0x1570d:	add	rcx, 1
0x15711:	or	r15, rax
0x15714:	cmp	rcx, 4
0x15718:	jne	0x156eb


0x15941:	test	byte ptr [r13 + 0xa], 0x40
0x15946:	jne	0x15844


0x15613:	mov	rdi, qword ptr [rsp + 0x30]
0x15618:	cmp	dword ptr [rdi + 0xb4], 1
0x1561f:	jle	0x1595e


0x159a0:	mov	r8, qword ptr [rsp + 0x30]
0x159a5:	cmp	dword ptr [r8 + 0xb4], 1
0x159ad:	jg	0x155d0


0x15a22:	mov	rdi, qword ptr [rsp + 0x30]
0x15a27:	xor	esi, esi
0x15a29:	xor	edx, edx
0x15a2b:	mov	rcx, qword ptr [r12 + rdx*8]
0x15a2f:	and	rcx, qword ptr [rdi + rdx*8 + 0xb8]
0x15a37:	mov	qword ptr [r12 + rdx*8], rcx
0x15a3b:	add	rdx, 1
0x15a3f:	or	rsi, rcx
0x15a42:	cmp	rdx, 4
0x15a46:	jne	0x15a2b


0x155d0:	mov	rdi, qword ptr [r8 + 0x78]
0x155d4:	xor	esi, esi
0x155d6:	xor	ecx, ecx
0x155d8:	mov	rdx, qword ptr [rdi + rcx*8]
0x155dc:	not	rdx
0x155df:	or	rdx, qword ptr [r8 + rcx*8 + 0xb8]
0x155e7:	and	rdx, qword ptr [r12 + rcx*8]
0x155eb:	mov	qword ptr [r12 + rcx*8], rdx
0x155ef:	add	rcx, 1
0x155f3:	or	rsi, rdx
0x155f6:	cmp	rcx, 4
0x155fa:	jne	0x155d8


0x158ff:	and	qword ptr [rsp + 0x90], 0xfffffffffffffffe
0x15908:	jmp	0x15596


0x15794:	mov	rax, qword ptr [rsp + 8]
0x15799:	mov	rsi, qword ptr [rsp + 0x20]
0x1579e:	mov	rdi, rdx
0x157a1:	mov	rax, qword ptr [rax + 0x18]
0x157a5:	mov	rsi, qword ptr [rax + rsi]
0x157a9:	call	0x11160


0x1572c:	mov	rax, rbp
0x1572f:	movdqa	xmm0, xmmword ptr [rsp + 0xd0]
0x15738:	shl	rax, 5
0x1573c:	mov	rsi, rdx
0x1573f:	mov	qword ptr [rsp + 0x38], rdx
0x15744:	add	rax, r13
0x15747:	movups	xmmword ptr [rax], xmm0
0x1574a:	movdqa	xmm0, xmmword ptr [rsp + 0xe0]
0x15753:	movups	xmmword ptr [rax + 0x10], xmm0
0x15757:	lea	rax, [rbp + rbp*2]
0x1575c:	lea	rdi, [rdi + rax*8]
0x15760:	movdqa	xmm0, xmmword ptr [rsp + 0xb0]
0x15769:	movups	xmmword ptr [r13 + r10], xmm0
0x1576f:	movdqa	xmm0, xmmword ptr [rsp + 0xc0]
0x15778:	movups	xmmword ptr [r13 + r10 + 0x10], xmm0
0x1577e:	call	0x13800


0x1594c:	mov	rdi, qword ptr [rsp + 0x30]
0x15951:	cmp	dword ptr [rdi + 0xb4], 1
0x15958:	jg	0x15625


0x1595e:	mov	rsi, qword ptr [rsp + 0x30]
0x15963:	xor	ecx, ecx
0x15965:	xor	edx, edx
0x15967:	mov	rax, qword ptr [rsi + rdx*8 + 0xb8]
0x1596f:	not	rax
0x15972:	and	rax, qword ptr [r12 + rdx*8]
0x15976:	mov	qword ptr [r12 + rdx*8], rax
0x1597a:	add	rdx, 1
0x1597e:	or	rcx, rax
0x15981:	cmp	rdx, 4
0x15985:	jne	0x15967


0x15625:	mov	rsi, qword ptr [rdi + 0x78]
0x15629:	xor	ecx, ecx
0x1562b:	xor	edx, edx
0x1562d:	mov	rax, qword ptr [rdi + rdx*8 + 0xb8]
0x15635:	and	rax, qword ptr [rsi + rdx*8]
0x15639:	not	rax
0x1563c:	and	rax, qword ptr [r12 + rdx*8]
0x15640:	mov	qword ptr [r12 + rdx*8], rax
0x15644:	add	rdx, 1
0x15648:	or	rcx, rax
0x1564b:	cmp	rdx, 4
0x1564f:	jne	0x1562d


0x159b3:	jmp	0x15a22


0x15a48:	test	rsi, rsi
0x15a4b:	jne	0x15605


0x15a2b:	mov	rcx, qword ptr [r12 + rdx*8]
0x15a2f:	and	rcx, qword ptr [rdi + rdx*8 + 0xb8]
0x15a37:	mov	qword ptr [r12 + rdx*8], rcx
0x15a3b:	add	rdx, 1
0x15a3f:	or	rsi, rcx
0x15a42:	cmp	rdx, 4
0x15a46:	jne	0x15a2b


0x155fc:	test	rsi, rsi
0x155ff:	je	0x1522f


0x155d8:	mov	rdx, qword ptr [rdi + rcx*8]
0x155dc:	not	rdx
0x155df:	or	rdx, qword ptr [r8 + rcx*8 + 0xb8]
0x155e7:	and	rdx, qword ptr [r12 + rcx*8]
0x155eb:	mov	qword ptr [r12 + rcx*8], rdx
0x155ef:	add	rcx, 1
0x155f3:	or	rsi, rdx
0x155f6:	cmp	rcx, 4
0x155fa:	jne	0x155d8


0x15987:	test	rcx, rcx
0x1598a:	jne	0x15660


0x15967:	mov	rax, qword ptr [rsi + rdx*8 + 0xb8]
0x1596f:	not	rax
0x15972:	and	rax, qword ptr [r12 + rdx*8]
0x15976:	mov	qword ptr [r12 + rdx*8], rax
0x1597a:	add	rdx, 1
0x1597e:	or	rcx, rax
0x15981:	cmp	rdx, 4
0x15985:	jne	0x15967


0x15651:	test	rcx, rcx
0x15654:	je	0x1522f


0x1562d:	mov	rax, qword ptr [rdi + rdx*8 + 0xb8]
0x15635:	and	rax, qword ptr [rsi + rdx*8]
0x15639:	not	rax
0x1563c:	and	rax, qword ptr [r12 + rdx*8]
0x15640:	mov	qword ptr [r12 + rdx*8], rax
0x15644:	add	rdx, 1
0x15648:	or	rcx, rax
0x1564b:	cmp	rdx, 4
0x1564f:	jne	0x1562d


0x15a51:	jmp	0x1522f


0x15990:	jmp	0x1522f


0x15783:	test	eax, eax
0x15785:	jne	0x15860


0x1578b:	mov	rdx, qword ptr [rsp + 0x38]
0x15790:	add	rbp, 1
0x15794:	mov	rax, qword ptr [rsp + 8]
0x15799:	mov	rsi, qword ptr [rsp + 0x20]
0x1579e:	mov	rdi, rdx
0x157a1:	mov	rax, qword ptr [rax + 0x18]
0x157a5:	mov	rsi, qword ptr [rax + rsi]
0x157a9:	call	0x11160


0x15860:	mov	rax, qword ptr [rsp + 0x18]
0x15865:	lea	rbx, [rax + 0x10]
0x15869:	lea	rax, [rbp + rbp*2]
0x1586e:	lea	rbp, [rbx + rax*8]
0x15872:	nop	word ptr [rax + rax]
0x15878:	mov	rdi, qword ptr [rbx]
0x1587b:	add	rbx, 0x18
0x1587f:	call	0x2a10


0x157ae:	test	al, al
0x157b0:	je	0x15860


0x157b6:	test	r15, r15
0x157b9:	je	0x157c8


0x15884:	cmp	rbp, rbx
0x15887:	jne	0x15878


0x15889:	mov	rdi, qword ptr [rsp + 0x18]
0x1588e:	call	0x2a10


0x15878:	mov	rdi, qword ptr [rbx]
0x1587b:	add	rbx, 0x18
0x1587f:	call	0x2a10


0x15893:	jmp	0x15540


0x15cb3:	test	rbp, rbp
0x15cb6:	jne	0x15540


0x15cbc:	jmp	0x15c34


0x15c34:	mov	esi, 0x100
0x15c39:	mov	edi, 8
0x15c3e:	call	0x26b0


0x15c43:	mov	rbx, qword ptr [rsp + 8]
0x15c48:	test	rax, rax
0x15c4b:	mov	qword ptr [rbx + 0x58], rax
0x15c4f:	setne	al
0x15c52:	jmp	0x15542


0x15542:	mov	rbx, qword ptr [rsp + 0xf8]
0x1554a:	xor	rbx, qword ptr fs:[0x28]
0x15553:	jne	0x15ca4


0x1a155:	test	al, al
0x1a157:	jne	0x19874


0x1a15d:	mov	rdi, qword ptr [rsp + 0x1d8]
0x1a165:	mov	dword ptr [rsp + 0xd0], 0xc
0x1a170:	test	rdi, rdi
0x1a173:	jne	0x1a0a0


0x19874:	mov	rax, qword ptr [r14 + 0x58]
0x19878:	test	rax, rax
0x1987b:	je	0x19f90


0x15271:	test	rax, rax
0x15274:	mov	r12, rax
0x15277:	mov	qword ptr [rsp + 0x80], rax
0x1527f:	je	0x15a7f


0x15a7f:	mov	rdi, r12
0x15a82:	call	0x2a10


0x15285:	movabs	rax, 0xaaaaaaaaaaaa855
0x1528f:	mov	dword ptr [rsp + 0x6c], 0
0x15297:	cmp	rbp, rax
0x1529a:	jg	0x15a7f


0x152a0:	lea	rax, [rbp + rbp*2]
0x152a5:	shl	rax, 3
0x152a9:	mov	rdi, rax
0x152ac:	mov	qword ptr [rsp + 0x58], rax
0x152b1:	call	0x2780


0x15a87:	mov	rax, qword ptr [rsp + 0x18]
0x15a8c:	lea	rbx, [rax + 0x10]
0x15a90:	lea	rax, [rbp + rbp*2]
0x15a95:	lea	rbp, [rbx + rax*8]
0x15a99:	nop	dword ptr [rax]
0x15aa0:	mov	rdi, qword ptr [rbx]
0x15aa3:	add	rbx, 0x18
0x15aa7:	call	0x2a10


0x15aac:	cmp	rbp, rbx
0x15aaf:	jne	0x15aa0


0x15ab1:	mov	rdi, qword ptr [rsp + 0x18]
0x15ab6:	call	0x2a10


0x15aa0:	mov	rdi, qword ptr [rbx]
0x15aa3:	add	rbx, 0x18
0x15aa7:	call	0x2a10


0x15abb:	jmp	0x15540


0x152b6:	test	rax, rax
0x152b9:	mov	qword ptr [rsp + 0x10], rax
0x152be:	je	0x15a7f


0x152c4:	mov	rax, qword ptr [rsp + 0x10]
0x152c9:	sub	rbx, 8
0x152cd:	mov	r12, qword ptr [rsp + 0x40]
0x152d2:	pxor	xmm0, xmm0
0x152d6:	lea	r14, [rsp + 0x70]
0x152db:	mov	qword ptr [rsp + 0x20], rbp
0x152e0:	mov	byte ptr [rsp + 0x4f], 0
0x152e5:	mov	rbp, r15
0x152e8:	add	rax, rbx
0x152eb:	mov	qword ptr [rsp + 0x50], r12
0x152f0:	add	rbx, rax
0x152f3:	mov	qword ptr [rsp + 0x30], rax
0x152f8:	mov	rax, qword ptr [rsp + 0x18]
0x152fd:	movaps	xmmword ptr [rsp + 0xd0], xmm0
0x15305:	mov	qword ptr [rsp + 0x38], rbx
0x1530a:	xor	ebx, ebx
0x1530c:	lea	r13, [rax + 8]
0x15310:	lea	rax, [rsp + 0x6c]
0x15315:	movaps	xmmword ptr [rsp + 0xe0], xmm0
0x1531d:	mov	qword ptr [rsp + 0x28], rax
0x15322:	mov	qword ptr [rsp + 0x78], 0
0x1532b:	cmp	qword ptr [r13], 0
0x15330:	jle	0x15378


0x15378:	mov	rdi, qword ptr [rsp + 0x28]
0x1537d:	xor	ecx, ecx
0x1537f:	mov	rsi, rbp
0x15382:	mov	rdx, r14
0x15385:	call	0x139f0


0x15332:	xor	r15d, r15d
0x15335:	nop	dword ptr [rax]
0x15338:	mov	rax, qword ptr [r13 + 8]
0x1533c:	mov	rdx, qword ptr [rax + r15*8]
0x15340:	mov	rax, qword ptr [rbp + 0x18]
0x15344:	mov	rax, qword ptr [rax + rdx*8]
0x15348:	cmp	rax, -1
0x1534c:	je	0x1536e


0x1536e:	add	r15, 1
0x15372:	cmp	qword ptr [r13], r15
0x15376:	jg	0x15338


0x1534e:	lea	rdx, [rax + rax*2]
0x15352:	mov	rax, qword ptr [rbp + 0x30]
0x15356:	mov	rdi, r14
0x15359:	lea	rsi, [rax + rdx*8]
0x1535d:	call	0x12bc0


0x15338:	mov	rax, qword ptr [r13 + 8]
0x1533c:	mov	rdx, qword ptr [rax + r15*8]
0x15340:	mov	rax, qword ptr [rbp + 0x18]
0x15344:	mov	rax, qword ptr [rax + rdx*8]
0x15348:	cmp	rax, -1
0x1534c:	je	0x1536e


0x15362:	test	eax, eax
0x15364:	mov	dword ptr [rsp + 0x6c], eax
0x15368:	jne	0x15a68


0x15a68:	mov	rbp, qword ptr [rsp + 0x20]
0x15a6d:	mov	rdi, qword ptr [rsp + 0x10]
0x15a72:	call	0x2a10


0x15a77:	mov	r12, qword ptr [rsp + 0x80]
0x15a7f:	mov	rdi, r12
0x15a82:	call	0x2a10


0x1538a:	mov	rsi, qword ptr [rsp + 0x10]
0x1538f:	test	rax, rax
0x15392:	mov	qword ptr [rsi + rbx*8], rax
0x15396:	je	0x15b48


0x15b48:	mov	ecx, dword ptr [rsp + 0x6c]
0x15b4c:	test	ecx, ecx
0x15b4e:	je	0x1539c


0x1539c:	cmp	byte ptr [rax + 0x68], 0
0x153a0:	js	0x15ac0


0x15b54:	jmp	0x15a68


0x15ac0:	mov	rdi, qword ptr [rsp + 0x28]
0x15ac5:	mov	ecx, 1
0x15aca:	mov	rdx, r14
0x15acd:	mov	rsi, rbp
0x15ad0:	call	0x139f0


0x153a6:	mov	rdi, qword ptr [rsp + 0x30]
0x153ab:	mov	rsi, qword ptr [rsp + 0x38]
0x153b0:	mov	qword ptr [rdi + rbx*8], rax
0x153b4:	mov	rax, qword ptr [rsp + 0x10]
0x153b9:	mov	rax, qword ptr [rax + rbx*8]
0x153bd:	mov	qword ptr [rsi + rbx*8], rax
0x153c1:	lea	rdx, [rsp + 0xd0]
0x153c9:	xor	eax, eax
0x153cb:	mov	rcx, qword ptr [rdx + rax]
0x153cf:	or	rcx, qword ptr [r12 + rax]
0x153d3:	mov	qword ptr [rdx + rax], rcx
0x153d7:	add	rax, 8
0x153db:	cmp	rax, 0x20
0x153df:	jne	0x153cb


0x153e1:	add	rbx, 1
0x153e5:	add	r13, 0x18
0x153e9:	add	r12, 0x20
0x153ed:	cmp	rbx, qword ptr [rsp + 0x20]
0x153f2:	jne	0x15322


0x153cb:	mov	rcx, qword ptr [rdx + rax]
0x153cf:	or	rcx, qword ptr [r12 + rax]
0x153d3:	mov	qword ptr [rdx + rax], rcx
0x153d7:	add	rax, 8
0x153db:	cmp	rax, 0x20
0x153df:	jne	0x153cb


0x153f8:	cmp	byte ptr [rsp + 0x4f], 0
0x153fd:	mov	r15, rbp
0x15400:	mov	rbp, qword ptr [rsp + 0x20]
0x15405:	mov	qword ptr [rsp + 0x20], rdx
0x1540a:	jne	0x15b59


0x15322:	mov	qword ptr [rsp + 0x78], 0
0x1532b:	cmp	qword ptr [r13], 0
0x15330:	jle	0x15378


0x15410:	mov	esi, 0x100
0x15415:	mov	edi, 8
0x1541a:	call	0x26b0


0x15b59:	mov	esi, 0x200
0x15b5e:	mov	edi, 8
0x15b63:	call	0x26b0


0x15b68:	mov	r11, rax
0x15b6b:	mov	rax, qword ptr [rsp + 8]
0x15b70:	test	r11, r11
0x15b73:	mov	qword ptr [rax + 0x60], r11
0x15b77:	je	0x15a6d


0x15a6d:	mov	rdi, qword ptr [rsp + 0x10]
0x15a72:	call	0x2a10


0x15b7d:	mov	r13, qword ptr [rsp + 0x40]
0x15b82:	mov	r10, qword ptr [rsp + 0x10]
0x15b87:	mov	r12, r11
0x15b8a:	mov	r14, qword ptr [rsp + 0x30]
0x15b8f:	mov	rdx, qword ptr [rsp + 0x20]
0x15b94:	xor	ebx, ebx
0x15b96:	add	r13, 0x20
0x15b9a:	mov	rax, qword ptr [rdx + rbx]
0x15b9e:	test	rax, rax
0x15ba1:	je	0x15bbf


0x15bbf:	add	rbx, 8
0x15bc3:	add	r12, 0x200
0x15bca:	cmp	rbx, 0x20
0x15bce:	jne	0x15b9a


0x15ba3:	mov	rsi, r12
0x15ba6:	mov	ecx, 1
0x15bab:	test	al, 1
0x15bad:	jne	0x15c5c


0x15bd0:	jmp	0x1548e


0x15b9a:	mov	rax, qword ptr [rdx + rbx]
0x15b9e:	test	rax, rax
0x15ba1:	je	0x15bbf


0x15bb3:	add	rcx, rcx
0x15bb6:	add	rsi, 8
0x15bba:	shr	rax, 1
0x15bbd:	jne	0x15bab


0x15c5c:	mov	rdi, qword ptr [rsp + 0x18]
0x15c61:	test	qword ptr [rdi + rbx + 0x1800], rcx
0x15c69:	jne	0x15ca0


0x1548e:	test	byte ptr [rsp + 0xd1], 4
0x15496:	je	0x154d2


0x15bab:	test	al, 1
0x15bad:	jne	0x15c5c


0x15c6b:	lea	r9, [r13 + rbx]
0x15c70:	xor	r8d, r8d
0x15c73:	mov	r15, qword ptr [r9]
0x15c76:	add	r8, 1
0x15c7a:	add	r9, 0x20
0x15c7e:	mov	rdi, r8
0x15c81:	and	r15, rcx
0x15c84:	test	r15, r15
0x15c87:	je	0x15c73


0x15ca0:	xor	edi, edi
0x15ca2:	jmp	0x15c89


0x154d2:	mov	rdi, qword ptr [rsp + 0x10]
0x154d7:	call	0x2a10


0x15498:	xor	eax, eax
0x1549a:	mov	rdx, qword ptr [rsp + 0x50]
0x1549f:	jmp	0x154ae


0x15c73:	mov	r15, qword ptr [r9]
0x15c76:	add	r8, 1
0x15c7a:	add	r9, 0x20
0x15c7e:	mov	rdi, r8
0x15c81:	and	r15, rcx
0x15c84:	test	r15, r15
0x15c87:	je	0x15c73


0x15c89:	mov	r8, qword ptr [r10 + rdi*8]
0x15c8d:	mov	qword ptr [rsi], r8
0x15c90:	mov	rdi, qword ptr [r14 + rdi*8]
0x15c94:	mov	qword ptr [rsi + 0x800], rdi
0x15c9b:	jmp	0x15bb3


0x154ae:	test	qword ptr [rdx], 0x400
0x154b5:	je	0x154a1


0x154a1:	add	rax, 1
0x154a5:	add	rdx, 0x20
0x154a9:	cmp	rax, rbp
0x154ac:	je	0x154d2


0x154b7:	mov	rbx, qword ptr [rsp + 0x38]
0x154bc:	cmp	byte ptr [rsp + 0x4f], 0
0x154c1:	mov	rax, qword ptr [rbx + rax*8]
0x154c5:	mov	qword ptr [r11 + 0x50], rax
0x154c9:	je	0x154d2


0x154cb:	mov	qword ptr [r11 + 0x850], rax
0x154d2:	mov	rdi, qword ptr [rsp + 0x10]
0x154d7:	call	0x2a10


0x154dc:	mov	rdi, qword ptr [rsp + 0x80]
0x154e4:	call	0x2a10


0x154e9:	mov	rax, qword ptr [rsp + 0x18]
0x154ee:	mov	rbx, qword ptr [rsp + 0x58]
0x154f3:	lea	rbp, [rax + 0x10]
0x154f7:	add	rbx, rbp
0x154fa:	mov	rdi, qword ptr [rbp]
0x154fe:	add	rbp, 0x18
0x15502:	call	0x2a10


0x15507:	cmp	rbx, rbp
0x1550a:	jne	0x154fa


0x1550c:	mov	rdi, qword ptr [rsp + 0x18]
0x15511:	call	0x2a10


0x154fa:	mov	rdi, qword ptr [rbp]
0x154fe:	add	rbp, 0x18
0x15502:	call	0x2a10


0x15516:	mov	eax, 1
0x1551b:	jmp	0x15542


0x1541f:	mov	r11, rax
0x15422:	mov	rax, qword ptr [rsp + 8]
0x15427:	test	r11, r11
0x1542a:	mov	qword ptr [rax + 0x58], r11
0x1542e:	je	0x15a6d


0x15434:	mov	rbx, qword ptr [rsp + 0x40]
0x15439:	mov	r12, qword ptr [rsp + 0x10]
0x1543e:	xor	r9d, r9d
0x15441:	mov	r13, qword ptr [rsp + 0x30]
0x15446:	mov	rdx, qword ptr [rsp + 0x20]
0x1544b:	add	rbx, 0x20
0x1544f:	mov	rax, qword ptr [rdx + r9]
0x15453:	test	rax, rax
0x15456:	je	0x15484


0x15484:	add	r9, 8
0x15488:	cmp	r9, 0x20
0x1548c:	jne	0x1544f


0x15458:	mov	rsi, r9
0x1545b:	mov	ecx, 1
0x15460:	shl	rsi, 6
0x15464:	add	rsi, r11
0x15467:	nop	word ptr [rax + rax]
0x15470:	test	al, 1
0x15472:	jne	0x15bd8


0x1544f:	mov	rax, qword ptr [rdx + r9]
0x15453:	test	rax, rax
0x15456:	je	0x15484


0x15478:	add	rcx, rcx
0x1547b:	add	rsi, 8
0x1547f:	shr	rax, 1
0x15482:	jne	0x15470


0x15bd8:	mov	rdi, qword ptr [rsp + 0x18]
0x15bdd:	test	qword ptr [rdi + r9 + 0x1800], rcx
0x15be5:	jne	0x15c57


0x15470:	test	al, 1
0x15472:	jne	0x15bd8


0x15be7:	lea	rdi, [rbx + r9]
0x15beb:	xor	r8d, r8d
0x15bee:	nop	
0x15bf0:	mov	r10, qword ptr [rdi]
0x15bf3:	add	r8, 1
0x15bf7:	add	rdi, 0x20
0x15bfb:	and	r10, rcx
0x15bfe:	test	r10, r10
0x15c01:	je	0x15bf0


0x15c57:	xor	r8d, r8d
0x15c5a:	jmp	0x15c07


0x15bf0:	mov	r10, qword ptr [rdi]
0x15bf3:	add	r8, 1
0x15bf7:	add	rdi, 0x20
0x15bfb:	and	r10, rcx
0x15bfe:	test	r10, r10
0x15c01:	je	0x15bf0


0x15c03:	shl	r8, 3
0x15c07:	test	qword ptr [r15 + r9 + 0xb8], rcx
0x15c0f:	je	0x15c1e


0x15c07:	test	qword ptr [r15 + r9 + 0xb8], rcx
0x15c0f:	je	0x15c1e


0x15c1e:	mov	rdi, qword ptr [r12 + r8]
0x15c22:	mov	qword ptr [rsi], rdi
0x15c25:	jmp	0x15478


0x15c11:	mov	rdi, qword ptr [r13 + r8]
0x15c16:	mov	qword ptr [rsi], rdi
0x15c19:	jmp	0x15478


0x15ad5:	mov	rdi, qword ptr [rsp + 0x30]
0x15ada:	test	rax, rax
0x15add:	mov	qword ptr [rdi + rbx*8], rax
0x15ae1:	je	0x15a56


0x15a56:	mov	edx, dword ptr [rsp + 0x6c]
0x15a5a:	test	edx, edx
0x15a5c:	je	0x15ae7


0x15ae7:	mov	rdi, qword ptr [rsp + 0x10]
0x15aec:	cmp	rax, qword ptr [rdi + rbx*8]
0x15af0:	je	0x15b0b


0x15b0b:	mov	rdi, qword ptr [rsp + 0x28]
0x15b10:	mov	rsi, rbp
0x15b13:	mov	ecx, 2
0x15b18:	mov	rdx, r14
0x15b1b:	call	0x139f0


0x15af2:	movzx	edi, byte ptr [rsp + 0x4f]
0x15af7:	cmp	dword ptr [rbp + 0xb4], 2
0x15afe:	mov	eax, 1
0x15b03:	cmovge	edi, eax
0x15b06:	mov	byte ptr [rsp + 0x4f], dil
0x15b0b:	mov	rdi, qword ptr [rsp + 0x28]
0x15b10:	mov	rsi, rbp
0x15b13:	mov	ecx, 2
0x15b18:	mov	rdx, r14
0x15b1b:	call	0x139f0


0x15b20:	mov	rsi, qword ptr [rsp + 0x38]
0x15b25:	test	rax, rax
0x15b28:	mov	qword ptr [rsi + rbx*8], rax
0x15b2c:	jne	0x153c1


0x15b32:	mov	eax, dword ptr [rsp + 0x6c]
0x15b36:	test	eax, eax
0x15b38:	je	0x153c1


0x153c1:	lea	rdx, [rsp + 0xd0]
0x153c9:	xor	eax, eax
0x153cb:	mov	rcx, qword ptr [rdx + rax]
0x153cf:	or	rcx, qword ptr [r12 + rax]
0x153d3:	mov	qword ptr [rdx + rax], rcx
0x153d7:	add	rax, 8
0x153db:	cmp	rax, 0x20
0x153df:	jne	0x153cb


0x15b3e:	jmp	0x15a68


0x15830:	test	rax, rax
0x15833:	mov	qword ptr [rbx + 0x10], rax
0x15837:	je	0x1551d


0x1551d:	test	rbp, rbp
0x15520:	mov	qword ptr [rbx + 8], 0
0x15528:	mov	qword ptr [rbx], 0
0x1552f:	jne	0x15860


0x1583d:	mov	qword ptr [rax], r13
0x15840:	add	rbp, 1
0x15844:	pxor	xmm0, xmm0
0x15848:	movaps	xmmword ptr [r12], xmm0
0x1584d:	movaps	xmmword ptr [r12 + 0x10], xmm0
0x15853:	jmp	0x1522f


0x15535:	mov	rdi, qword ptr [rsp + 0x18]
0x1553a:	call	0x2a10


0x18dcc:	test	rax, rax
0x18dcf:	mov	qword ptr [rsp + 0x50], rax
0x18dd4:	je	0x190b4


0x190b4:	mov	eax, 0xc
0x190b9:	jmp	0x19095


0x18dda:	lea	rcx, [rsp + 0x40]
0x18ddf:	mov	qword ptr [rax], rbx
0x18de2:	mov	rdx, r15
0x18de5:	mov	rsi, r13
0x18de8:	mov	rdi, r14
0x18deb:	mov	qword ptr [rsp + 0x10], rcx
0x18df0:	call	0x1a7f0


0x19095:	mov	rdx, qword ptr [rsp + 0x58]
0x1909a:	xor	rdx, qword ptr fs:[0x28]
0x190a3:	jne	0x190bb


0x190a5:	add	rsp, 0x68
0x190a9:	pop	rbx
0x190aa:	pop	rbp
0x190ab:	pop	r12
0x190ad:	pop	r13
0x190af:	pop	r14
0x190b1:	pop	r15
0x190b3:	ret	


0x190bb:	call	0x2560


0x18df5:	test	eax, eax
0x18df7:	jne	0x19085


0x18dfd:	lea	rax, [r15*8]
0x18e05:	test	r15, r15
0x18e08:	mov	dword ptr [rsp + 0x2c], 0
0x18e10:	mov	qword ptr [rsp + 8], rax
0x18e15:	lea	rax, [r13 + 0x30]
0x18e19:	mov	qword ptr [rsp + 0x38], rax
0x18e1e:	jle	0x19027


0x19085:	mov	rdi, qword ptr [rsp + 0x50]
0x1908a:	mov	dword ptr [rsp], eax
0x1908d:	call	0x2a10


0x19027:	xor	eax, eax
0x19029:	jmp	0x19085


0x18e24:	mov	rdi, qword ptr [r13]
0x18e28:	mov	rax, qword ptr [rsp + 8]
0x18e2d:	cmp	qword ptr [rdi + rax], 0
0x18e32:	je	0x19048


0x19048:	mov	rax, qword ptr [rsp]
0x1904c:	add	dword ptr [rsp + 0x2c], 1
0x19051:	mov	ecx, dword ptr [rsp + 0x2c]
0x19055:	cmp	dword ptr [rax + 0xe0], ecx
0x1905b:	jge	0x18e54


0x18e38:	mov	rax, qword ptr [rsp]
0x18e3c:	mov	dword ptr [rsp + 0x2c], 0
0x18e44:	mov	ecx, dword ptr [rsp + 0x2c]
0x18e48:	cmp	dword ptr [rax + 0xe0], ecx
0x18e4e:	jl	0x19061


0x19061:	mov	rdx, qword ptr [rsp + 8]
0x19066:	xor	esi, esi
0x19068:	call	0x2620


0x18e54:	mov	rbx, qword ptr [rsp]
0x18e58:	mov	rdi, qword ptr [rsp + 8]
0x18e5d:	sub	r15, 1
0x18e61:	mov	qword ptr [rsp + 0x48], 0
0x18e6a:	mov	rax, qword ptr [rbx + 0xb8]
0x18e71:	mov	r12, qword ptr [rax + rdi - 8]
0x18e76:	test	r12, r12
0x18e79:	je	0x19000


0x19000:	mov	rcx, qword ptr [rsp + 0x10]
0x19005:	mov	rdi, qword ptr [rsp]
0x19009:	mov	rdx, r15
0x1900c:	mov	rsi, r13
0x1900f:	call	0x1a7f0


0x18e7f:	cmp	qword ptr [r12 + 0x28], 0
0x18e85:	mov	r14, qword ptr [rbx + 0x98]
0x18e8c:	jle	0x19000


0x18e92:	xor	ebx, ebx
0x18e94:	jmp	0x18f3b


0x18f3b:	mov	rax, qword ptr [r12 + 0x30]
0x18f40:	mov	rsi, qword ptr [r14]
0x18f43:	mov	rbp, qword ptr [rax + rbx*8]
0x18f47:	mov	r9, rbp
0x18f4a:	shl	r9, 4
0x18f4e:	add	rsi, r9
0x18f51:	test	byte ptr [rsi + 0xa], 0x10
0x18f55:	je	0x18ea0


0x18ea0:	mov	rdi, qword ptr [rsp]
0x18ea4:	mov	rdx, r15
0x18ea7:	call	0x14570


0x18f5b:	mov	rcx, qword ptr [rsp]
0x18f5f:	mov	rax, qword ptr [r13 + 0x18]
0x18f63:	mov	r8, r15
0x18f66:	mov	rdx, rbp
0x18f69:	mov	qword ptr [rsp + 0x18], r9
0x18f6e:	mov	r11, qword ptr [rcx + 0x98]
0x18f75:	mov	qword ptr [rsp + 0x20], rax
0x18f7a:	mov	rdi, qword ptr [r11]
0x18f7d:	lea	rsi, [r11 + 0xd8]
0x18f84:	mov	qword ptr [rsp + 0x30], r11
0x18f89:	call	0x16e50


0x18f8e:	movsxd	r10, eax
0x18f91:	mov	r9, qword ptr [rsp + 0x18]
0x18f96:	cmp	r10d, 0
0x18f9a:	jle	0x19030


0x19030:	jne	0x18ee2


0x18fa0:	movsxd	rax, r10d
0x18fa3:	add	rax, r15
0x18fa6:	cmp	qword ptr [rsp + 0x20], rax
0x18fab:	jl	0x18ee2


0x19036:	mov	rsi, qword ptr [r14]
0x19039:	add	rsi, r9
0x1903c:	jmp	0x18ea0


0x18ee2:	cmp	qword ptr [r13 + 0x28], 0
0x18ee7:	je	0x18f17


0x18fb1:	mov	rdx, qword ptr [r13]
0x18fb5:	mov	r11, qword ptr [rsp + 0x30]
0x18fba:	mov	rax, qword ptr [rdx + rax*8]
0x18fbe:	test	rax, rax
0x18fc1:	je	0x19036


0x18f17:	mov	rdi, qword ptr [rsp + 0x10]
0x18f1c:	mov	rsi, rbp
0x18f1f:	call	0x11160


0x18ee9:	mov	rax, qword ptr [r14 + 0x18]
0x18eed:	sub	rsp, 8
0x18ef1:	lea	rsi, [r13 + 0x28]
0x18ef5:	lea	r8, [r10 + r15]
0x18ef9:	mov	r9, rbp
0x18efc:	mov	rcx, qword ptr [rax + rbp*8]
0x18f00:	push	r15
0x18f02:	mov	rdx, qword ptr [rsp + 0x48]
0x18f07:	mov	rdi, qword ptr [rsp + 0x10]
0x18f0c:	call	0x12950


0x18fc3:	mov	rdx, qword ptr [r11 + 0x18]
0x18fc7:	mov	rdi, qword ptr [rax + 0x10]
0x18fcb:	lea	rsi, [rax + 0x18]
0x18fcf:	mov	qword ptr [rsp + 0x18], r9
0x18fd4:	mov	rdx, qword ptr [rdx + rbp*8]
0x18fd8:	call	0x126a0


0x18fdd:	test	rax, rax
0x18fe0:	jne	0x18ee2


0x18fe6:	mov	r9, qword ptr [rsp + 0x18]
0x18feb:	mov	rsi, qword ptr [r14]
0x18fee:	add	rsi, r9
0x18ff1:	jmp	0x18ea0


0x18f11:	test	al, al
0x18f13:	pop	rdx
0x18f14:	pop	rcx
0x18f15:	jne	0x18f2c


0x18f2c:	add	rbx, 1
0x18f30:	cmp	rbx, qword ptr [r12 + 0x28]
0x18f35:	jge	0x19000


0x18f24:	test	al, al
0x18f26:	je	0x19080


0x19080:	mov	eax, 0xc
0x19085:	mov	rdi, qword ptr [rsp + 0x50]
0x1908a:	mov	dword ptr [rsp], eax
0x1908d:	call	0x2a10


0x18eac:	test	al, al
0x18eae:	je	0x18f2c


0x18eb0:	mov	rax, qword ptr [r13]
0x18eb4:	mov	rcx, qword ptr [rsp + 8]
0x18eb9:	mov	rax, qword ptr [rax + rcx]
0x18ebd:	test	rax, rax
0x18ec0:	je	0x18f2c


0x18ec2:	mov	rdx, qword ptr [r14 + 0x18]
0x18ec6:	mov	rdi, qword ptr [rax + 0x10]
0x18eca:	lea	rsi, [rax + 0x18]
0x18ece:	mov	rdx, qword ptr [rdx + rbp*8]
0x18ed2:	call	0x126a0


0x18ed7:	test	rax, rax
0x18eda:	je	0x18f2c


0x18edc:	mov	r10d, 1
0x18ee2:	cmp	qword ptr [r13 + 0x28], 0
0x18ee7:	je	0x18f17


0x19014:	test	eax, eax
0x19016:	jne	0x19085


0x19018:	sub	qword ptr [rsp + 8], 8
0x1901e:	test	r15, r15
0x19021:	jne	0x18e24


0x1906d:	mov	rdi, qword ptr [rsp + 0x50]
0x19072:	call	0x2a10


0x19077:	xor	eax, eax
0x19079:	jmp	0x19095


0x19092:	mov	eax, dword ptr [rsp]
0x19095:	mov	rdx, qword ptr [rsp + 0x58]
0x1909a:	xor	rdx, qword ptr fs:[0x28]
0x190a3:	jne	0x190bb


0x19a93:	mov	rdi, qword ptr [rsp + 0x110]
0x19a9b:	mov	r15d, eax
0x19a9e:	call	0x2a10


0x19aa3:	test	r15d, r15d
0x19aa6:	jne	0x1a6c4


0x19aac:	cmp	qword ptr [r12], 0
0x19ab1:	jne	0x1a723


0x1a6c4:	mov	r14, qword ptr [rsp + 0x18]
0x1a6c9:	mov	eax, r15d
0x1a6cc:	mov	rdi, r12
0x1a6cf:	mov	dword ptr [rsp + 8], eax
0x1a6d3:	call	0x2a10


0x19ab7:	cmp	qword ptr [rbp], 0
0x19abc:	jne	0x1a723


0x1a723:	mov	r15, qword ptr [rsp + 0x10]
0x1a728:	mov	rcx, qword ptr [rsp + 8]
0x1a72d:	mov	rdx, rbp
0x1a730:	mov	rsi, r12
0x1a733:	mov	qword ptr [rsp + 0x20], r14
0x1a738:	mov	rdi, r15
0x1a73b:	call	0x13eb0


0x19ac2:	mov	rdx, qword ptr [rsp + 0x1d8]
0x19aca:	nop	word ptr [rax + rax]
0x19ad0:	sub	r14, 1
0x19ad4:	cmp	r14, -1
0x19ad8:	je	0x1a59b


0x1a59b:	mov	rdi, r12
0x1a59e:	call	0x2a10


0x19ade:	mov	rax, qword ptr [rdx + r14*8]
0x19ae2:	test	rax, rax
0x19ae5:	je	0x19ad0


0x19ad0:	sub	r14, 1
0x19ad4:	cmp	r14, -1
0x19ad8:	je	0x1a59b


0x19ae7:	test	byte ptr [rax + 0x68], 0x10
0x19aeb:	je	0x19ad0


0x19aed:	mov	rsi, qword ptr [rax + 0x10]
0x19af1:	mov	rdi, qword ptr [rsp]
0x19af5:	lea	rdx, [rax + 0x18]
0x19af9:	mov	rcx, r14
0x19afc:	call	0x14680


0x19b01:	mov	r13, rax
0x19b04:	lea	rax, [r14 + 1]
0x19b08:	mov	qword ptr [rsp + 8], rax
0x19b0d:	jmp	0x19a40


0x19a40:	mov	rax, qword ptr [rsp + 8]
0x19a45:	xor	esi, esi
0x19a47:	mov	rdi, rbp
0x19a4a:	lea	rdx, [rax*8]
0x19a52:	call	0x2620


0x1a740:	mov	rdi, rbp
0x1a743:	mov	dword ptr [rsp + 8], eax
0x1a747:	call	0x2a10


0x1a74c:	mov	eax, dword ptr [rsp + 8]
0x1a750:	test	eax, eax
0x1a752:	je	0x1a322


0x1a322:	mov	rdi, qword ptr [rsp + 0x1d8]
0x1a32a:	call	0x2a10


0x1a758:	xor	r14d, r14d
0x1a75b:	jmp	0x1a6cc


0x1a6cc:	mov	rdi, r12
0x1a6cf:	mov	dword ptr [rsp + 8], eax
0x1a6d3:	call	0x2a10


0x1a6d8:	mov	rdi, r14
0x1a6db:	call	0x2a10


0x1a6e0:	mov	eax, dword ptr [rsp + 8]
0x1a6e4:	cmp	eax, 1
0x1a6e7:	je	0x19ff0


0x1a32f:	mov	rax, qword ptr [rsp + 0x20]
0x1a334:	mov	qword ptr [rsp + 0x1d8], r12
0x1a33c:	mov	qword ptr [rsp + 0x1d0], r13
0x1a344:	mov	qword ptr [rsp + 0x1c8], rax
0x1a34c:	cmp	qword ptr [rsp + 0x270], 0
0x1a355:	je	0x19c10


0x1a5a3:	mov	rdi, rbp
0x1a5a6:	call	0x2a10


0x1a5ab:	jmp	0x19ff0


0x1a2fa:	mov	rdi, qword ptr [rsp + 0x110]
0x1a302:	mov	dword ptr [rsp + 8], eax
0x1a306:	call	0x2a10


0x1a30b:	mov	eax, dword ptr [rsp + 8]
0x1a30f:	test	eax, eax
0x1a311:	jne	0x1a758


0x1a317:	cmp	qword ptr [r12], 0
0x1a31c:	je	0x19fe3


0x19fe3:	mov	rdi, r12
0x19fe6:	call	0x2a10


0x1aeee:	test	eax, eax
0x1aef0:	jne	0x1affe


0x1aef6:	mov	rsi, qword ptr [rbx + 8]
0x1aefa:	mov	rdx, qword ptr [rsp + 0x60]
0x1aeff:	test	rsi, rsi
0x1af02:	je	0x1af1d


0x1af1d:	mov	r11, qword ptr [rsp + 0x38]
0x1af22:	mov	rax, qword ptr [rsp + 0x18]
0x1af27:	mov	rdi, qword ptr [rsp + 0x88]
0x1af2f:	lea	r9, [r11 + 0x30]
0x1af33:	mov	qword ptr [rdx + rax], r15
0x1af37:	mov	rdx, r13
0x1af3a:	mov	rsi, r9
0x1af3d:	call	0x126a0


0x1af04:	lea	rcx, [rbp + 1]
0x1af08:	mov	rdi, r12
0x1af0b:	call	0x13eb0


0x1af10:	test	eax, eax
0x1af12:	jne	0x1affe


0x1af18:	mov	rdx, qword ptr [rsp + 0x60]
0x1af1d:	mov	r11, qword ptr [rsp + 0x38]
0x1af22:	mov	rax, qword ptr [rsp + 0x18]
0x1af27:	mov	rdi, qword ptr [rsp + 0x88]
0x1af2f:	lea	r9, [r11 + 0x30]
0x1af33:	mov	qword ptr [rdx + rax], r15
0x1af37:	mov	rdx, r13
0x1af3a:	mov	rsi, r9
0x1af3d:	call	0x126a0


0x1af42:	sub	rax, 1
0x1af46:	mov	rdx, rax
0x1af49:	js	0x1af57


0x1af57:	mov	rcx, qword ptr [rsp + 8]
0x1af5c:	lea	rax, [r13 + r13*4]
0x1af61:	mov	rdx, qword ptr [rcx + 0xd8]
0x1af68:	lea	rax, [rdx + rax*8]
0x1af6c:	nop	dword ptr [rax]
0x1af70:	add	r13, 1
0x1af74:	cmp	byte ptr [rax + 0x20], 0
0x1af78:	lea	r15, [rax + 0x28]
0x1af7c:	je	0x1afb0


0x1af4b:	lea	rdi, [r11 + 0x28]
0x1af4f:	mov	rsi, r9
0x1af52:	call	0x12820


0x1ea8a:	test	rax, rax
0x1ea8d:	mov	qword ptr [rbx + 0x20], rax
0x1ea91:	je	0x1eb40


0x1eb40:	mov	ebp, 0xc
0x1eb45:	pop	rbx
0x1eb46:	mov	eax, ebp
0x1eb48:	pop	rbp
0x1eb49:	pop	r12
0x1eb4b:	pop	r13
0x1eb4d:	pop	r14
0x1eb4f:	ret	


0x1ea97:	mov	r13, rbp
0x1ea9a:	shl	r13, 0x15
0x1ea9e:	and	r13d, 0x400000
0x1eaa5:	or	r13, r14
0x1eaa8:	test	bpl, 4
0x1eaac:	jne	0x1eb10


0x1eaae:	and	byte ptr [rbx + 0x38], 0x7f
0x1eab2:	movzx	edx, byte ptr [rbx + 0x38]
0x1eab6:	shr	ebp, 3
0x1eab9:	mov	rdi, r12
0x1eabc:	and	ebp, 1
0x1eabf:	mov	qword ptr [rbx + 0x28], 0
0x1eac7:	shl	ebp, 4
0x1eaca:	and	edx, 0xffffffef
0x1eacd:	or	ebp, edx
0x1eacf:	mov	byte ptr [rbx + 0x38], bpl
0x1ead3:	call	0x2530


0x1eb10:	and	r13, 0xffffffffffffffbf
0x1eb14:	or	byte ptr [rbx + 0x38], 0x80
0x1eb18:	or	r13, 0x100
0x1eb1f:	jmp	0x1eab2


0x1eab2:	movzx	edx, byte ptr [rbx + 0x38]
0x1eab6:	shr	ebp, 3
0x1eab9:	mov	rdi, r12
0x1eabc:	and	ebp, 1
0x1eabf:	mov	qword ptr [rbx + 0x28], 0
0x1eac7:	shl	ebp, 4
0x1eaca:	and	edx, 0xffffffef
0x1eacd:	or	ebp, edx
0x1eacf:	mov	byte ptr [rbx + 0x38], bpl
0x1ead3:	call	0x2530


0x1ead8:	mov	rcx, r13
0x1eadb:	mov	rdx, rax
0x1eade:	mov	rsi, r12
0x1eae1:	mov	rdi, rbx
0x1eae4:	call	0x1d250


0x1eae9:	cmp	eax, 0x10
0x1eaec:	mov	ebp, eax
0x1eaee:	je	0x1eb28


0x1eb28:	mov	ebp, 8
0x1eb2d:	mov	rdi, qword ptr [rbx + 0x20]
0x1eb31:	call	0x2a10


0x1eaf0:	test	eax, eax
0x1eaf2:	jne	0x1eb2d


0x1eaf4:	mov	rdi, rbx
0x1eaf7:	call	0x1e3d0


0x1eb2d:	mov	rdi, qword ptr [rbx + 0x20]
0x1eb31:	call	0x2a10


0x1eafc:	pop	rbx
0x1eafd:	mov	eax, ebp
0x1eaff:	pop	rbp
0x1eb00:	pop	r12
0x1eb02:	pop	r13
0x1eb04:	pop	r14
0x1eb06:	ret	


0x1eb36:	mov	qword ptr [rbx + 0x20], 0
0x1eb3e:	jmp	0x1eafc


0xcc95:	cmp	dword ptr [rax], 0x16
0xcc98:	je	0xcca0


0xcca0:	lea	rcx, [rip + 0x15689]
0xcca7:	lea	rsi, [rip + 0x15652]
0xccae:	lea	rdi, [rip + 0x15668]
0xccb5:	mov	edx, 0x29
0xccba:	call	0x2600


0xcc9a:	call	0xcc30


0x1f005:	mov	dword ptr [rax], 0xc
0x1f00b:	xor	eax, eax
0x1f00d:	jmp	0x1efa0


0xe4f9:	mov	dword ptr [rax], 0x24
0xe4ff:	xor	eax, eax
0xe501:	pop	rbx
0xe502:	ret	


0xf8c6:	mov	dword ptr [rax], ebx
0xf8c8:	mov	ebx, 0xffffffff
0xf8cd:	jmp	0xf816


0xf851:	mov	r12, rax
0xf854:	jmp	0xf8b8


0xf8b8:	mov	ebx, dword ptr [r12]
0xf8bc:	jmp	0xf7d8


0xf7d8:	lea	rdi, [rbp + 0x60]
0xf7dc:	call	0xe200


0xf895:	mov	edi, dword ptr [rbp + 0x28]
0xf898:	mov	r12, rax
0xf89b:	mov	ebx, dword ptr [rax]
0xf89d:	call	0x2640


0xf8a2:	test	eax, eax
0xf8a4:	je	0xf7d8


0xf8aa:	test	ebx, ebx
0xf8ac:	jne	0xf7d8


0xf872:	mov	ebx, dword ptr [rax]
0xf874:	jmp	0xf7d8


0xfe51:	mov	dword ptr [rax], 0
0xfe57:	mov	qword ptr [r12], 0
0xfe5f:	jmp	0xfa7a


0xfd55:	mov	edi, dword ptr [r12 + 0x48]
0xfd5a:	mov	eax, dword ptr [rax]
0xfd5c:	or	edi, 0x2000
0xfd62:	mov	dword ptr [rbx + 0x40], eax
0xfd65:	mov	dword ptr [r12 + 0x48], edi
0xfd6a:	jmp	0xf9d8


0xf9d8:	cmp	word ptr [rbx + 0x70], 2
0xf9dd:	je	0xf9f3


0xff7b:	mov	eax, dword ptr [rax]
0xff7d:	mov	dword ptr [rbx + 0x40], eax
0xff80:	or	dword ptr [r12 + 0x48], 0x2000
0xff89:	mov	edi, dword ptr [rbx + 0x44]
0xff8c:	jmp	0xf9ce


0x7b68:	cmp	ebx, 1
0x7b6b:	mov	r14, rax
0x7b6e:	je	0x7cd0


0x7cd0:	xor	ebx, ebx
0x7cd2:	xor	ebp, ebp
0x7cd4:	jmp	0x7bb0


0x7b74:	cmp	ebx, 2
0x7b77:	je	0x7cc0


0x7bb0:	xor	esi, esi
0x7bb2:	xor	edi, edi
0x7bb4:	call	0x2590


0x7cc0:	xor	ebx, ebx
0x7cc2:	jmp	0x7b9a


0x7b7d:	test	ebx, ebx
0x7b7f:	je	0x7c38


0x2590:	jmp	qword ptr [rip + 0x2257f2]


0x7b9a:	mov	esi, 1
0x7b9f:	mov	edi, 1
0x7ba4:	call	0x2590


0x7c38:	xor	ebx, ebx
0x7c3a:	xor	ebp, ebp
0x7c3c:	xor	r13d, r13d
0x7c3f:	jmp	0x7bf0


0x7b85:	mov	esi, 2
0x7b8a:	mov	edi, 2
0x7b8f:	call	0x2590




0x7bf0:	mov	rdi, qword ptr [rsp + 8]
0x7bf5:	mov	rdx, r12
0x7bf8:	mov	rsi, r15
0x7bfb:	call	0x2630


0x2630:	jmp	qword ptr [rip + 0x2257a2]




0x7b23:	mov	dword ptr [rax], 9
0x7b29:	add	rsp, 8
0x7b2d:	mov	eax, ebx
0x7b2f:	pop	rbx
0x7b30:	pop	rbp
0x7b31:	ret	


0x1f926:	mov	r12d, dword ptr [rax]
0x1f929:	mov	rbp, rax
0x1f92c:	mov	edi, ebx
0x1f92e:	call	0x2640


0x1f933:	mov	ebx, 0xffffffff
0x1f938:	mov	dword ptr [rbp], r12d
0x1f93c:	jmp	0x1f810


0x1f94d:	cmp	dword ptr [rax], 0x16
0x1f950:	jne	0x1f7bf


0x1f956:	xor	esi, esi
0x1f958:	xor	eax, eax
0x1f95a:	mov	edx, r12d
0x1f95d:	mov	edi, ebp
0x1f95f:	call	0x24a0


0x1f964:	test	eax, eax
0x1f966:	mov	ebx, eax
0x1f968:	js	0x1f810


0x1f96e:	mov	dword ptr [rip + 0x208980], 0xffffffff
0x1f978:	jmp	0x1f8f3


0xf1ab:	mov	eax, dword ptr [rax]
0xf1ad:	mov	dword ptr [rbp + 0x40], eax
0xf1b0:	jmp	0xef7c


0xeba6:	mov	rdi, r13
0xeba9:	mov	dword ptr [rax], 0
0xebaf:	mov	r12, rax
0xebb2:	call	0x2750


0x2750:	jmp	qword ptr [rip + 0x225712]




0xde76:	mov	r12, rax
0xde79:	mov	eax, dword ptr [rax]
0xde7b:	cmp	eax, 2
0xde7e:	je	0xdf90


0xdf90:	mov	rsi, qword ptr [rbp + 0x30]
0xdf94:	mov	rdx, rbx
0xdf97:	mov	edi, 1
0xdf9c:	call	0x2540


0xde84:	lea	rdi, [rbx + 8]
0xde88:	mov	dword ptr [rbp + 0x40], eax
0xde8b:	mov	qword ptr [rbp + 0x78], 0
0xde93:	mov	qword ptr [rbx + 0x88], 0
0xde9e:	xor	eax, eax
0xdea0:	and	rdi, 0xfffffffffffffff8
0xdea4:	sub	rbx, rdi
0xdea7:	lea	ecx, [rbx + 0x90]
0xdead:	shr	ecx, 3
0xdeb0:	rep stosq	qword ptr [rdi], rax


0x2540:	jmp	qword ptr [rip + 0x22581a]


0xdeb3:	mov	eax, 0xa
0xdeb8:	pop	rbx
0xdeb9:	pop	rbp
0xdeba:	pop	r12
0xdebc:	ret	


0xdeb0:	rep stosq	qword ptr [rdi], rax




0x5b98:	mov	dword ptr [rsp + 0x1c], 0
0x5ba0:	mov	qword ptr [rsp + 0x28], rax
0x5ba5:	and	r12d, 0x20
0x5ba9:	test	r12d, r12d
0x5bac:	je	0x5bbf


0x5bbf:	lea	rsi, [r14 + 1]
0x5bc3:	mov	rdi, rbx
0x5bc6:	call	0xca40


0x5bae:	mov	r12d, dword ptr [rax]
0x5bb1:	xor	eax, eax
0x5bb3:	test	r12d, r12d
0x5bb6:	setne	al
0x5bb9:	neg	eax
0x5bbb:	mov	dword ptr [rsp + 0x1c], eax
0x5bbf:	lea	rsi, [r14 + 1]
0x5bc3:	mov	rdi, rbx
0x5bc6:	call	0xca40


0x5bcb:	mov	r15, rax
0x5bce:	mov	eax, dword ptr [rsp + 0x20]
0x5bd2:	test	r14, r14
0x5bd5:	mov	byte ptr [r15 + r14], al
0x5bd9:	je	0x5ca0


0x5ca0:	mov	edi, 0x10
0x5ca5:	call	0xc9e0


0x5bdf:	xor	ebx, ebx
0x5be1:	cmp	byte ptr [r15 + r14 - 1], al
0x5be6:	mov	edi, 0x10
0x5beb:	setne	bl
0x5bee:	add	rbx, r14
0x5bf1:	call	0xc9e0


0x5bf6:	mov	rcx, qword ptr [r13 + 8]
0x5bfa:	add	rbx, r15
0x5bfd:	mov	qword ptr [rax + 8], r15
0x5c01:	cmp	r15, rbx
0x5c04:	mov	qword ptr [r13 + 8], rax
0x5c08:	mov	qword ptr [rax], rcx
0x5c0b:	jae	0x5c6f


0x5c0d:	movzx	eax, bpl
0x5c11:	mov	rsi, r15
0x5c14:	mov	qword ptr [rsp + 0x20], rax
0x5c19:	jmp	0x5c28


0x5c6f:	mov	rax, qword ptr [rsp + 0x28]
0x5c74:	mov	rdi, qword ptr [rsp + 0x38]
0x5c79:	xor	rdi, qword ptr fs:[0x28]
0x5c82:	mov	dword ptr [rax], r12d
0x5c85:	mov	eax, dword ptr [rsp + 0x1c]
0x5c89:	jne	0x5cfe


0x5c28:	cmp	byte ptr [r15], bpl
0x5c2b:	lea	r14, [r15 + 1]
0x5c2f:	jne	0x5c20


0x5c8b:	add	rsp, 0x48
0x5c8f:	pop	rbx
0x5c90:	pop	rbp
0x5c91:	pop	r12
0x5c93:	pop	r13
0x5c95:	pop	r14
0x5c97:	pop	r15
0x5c99:	ret	


0x5cfe:	call	0x2560


0x5c31:	mov	qword ptr [rsp], rsi
0x5c35:	call	0x29f0


0x5c20:	cmp	rbx, r14
0x5c23:	mov	r15, r14
0x5c26:	je	0x5c6f


0x5c3a:	mov	rcx, qword ptr [rsp + 0x20]
0x5c3f:	mov	rax, qword ptr [rax]
0x5c42:	mov	rsi, qword ptr [rsp]
0x5c46:	test	byte ptr [rax + rcx*2 + 1], 0x20
0x5c4b:	jne	0x5cc0


0x5c4d:	mov	byte ptr [r15], 0
0x5c51:	mov	rcx, qword ptr [rsp + 0x10]
0x5c56:	mov	rdi, r13
0x5c59:	mov	edx, dword ptr [rsp + 0x18]
0x5c5d:	mov	rax, qword ptr [rsp + 8]
0x5c62:	call	rax


0x5cc0:	cmp	r15, rsi
0x5cc3:	je	0x5c64


0x5c64:	cmp	rbx, r14
0x5c67:	mov	rsi, r14
0x5c6a:	mov	r15, r14
0x5c6d:	jne	0x5c28


0x5cc5:	movzx	ecx, byte ptr [r14 - 2]
0x5cca:	test	byte ptr [rax + rcx*2 + 1], 0x20
0x5ccf:	jne	0x5cf0


0x5cd1:	jmp	0x5c4d


0x5cf0:	sub	r15, 1
0x5cf4:	cmp	r15, rsi
0x5cf7:	jne	0x5ce0


0x5cf9:	jmp	0x5c64


0x5ce0:	movzx	ecx, byte ptr [r15 - 1]
0x5ce5:	test	byte ptr [rax + rcx*2 + 1], 0x20
0x5cea:	je	0x5c4d


0x5caa:	mov	rdx, qword ptr [r13 + 8]
0x5cae:	mov	qword ptr [rax + 8], r15
0x5cb2:	mov	qword ptr [r13 + 8], rax
0x5cb6:	mov	qword ptr [rax], rdx
0x5cb9:	jmp	0x5c6f


0x5d62:	mov	rdi, rbx
0x5d65:	mov	ebp, eax
0x5d67:	call	0xdca0


0x5da2:	add	rsp, 0x10
0x5da6:	mov	ebp, eax
0x5da8:	mov	eax, ebp
0x5daa:	pop	rbx
0x5dab:	pop	rbp
0x5dac:	pop	r12
0x5dae:	ret	


0xdf85:	mov	eax, dword ptr [rax]
0xdf87:	jmp	0xde84


0xe6a9:	mov	r12d, dword ptr [rax]
0xe6ac:	mov	rbp, rax
0xe6af:	mov	edi, r15d
0xe6b2:	call	0x2640


0xe6b7:	mov	dword ptr [rbp], r12d
0xe6bb:	jmp	0xe6d5


0xe774:	mov	dword ptr [rax], 2
0xe77a:	jmp	0xe69a


0xfc75:	xor	ebp, ebp
0xfc77:	mov	dword ptr [rax], 0xc
0xfc7d:	jmp	0xfa7a


0xfb10:	mov	eax, dword ptr [rax]
0xfb12:	or	word ptr [rbp + 0x72], 1
0xfb17:	mov	dword ptr [rbp + 0x40], eax
0xfb1a:	mov	rbp, qword ptr [r12 + 8]
0xfb1f:	test	rbp, rbp
0xfb22:	je	0xfd16


0xfb28:	mov	rax, rbp
0xfb2b:	nop	dword ptr [rax + rax]
0xfb30:	mov	rdx, qword ptr [rax + 8]
0xfb34:	mov	rdx, qword ptr [rdx + 0x30]
0xfb38:	mov	qword ptr [rax + 0x30], rdx
0xfb3c:	mov	rax, qword ptr [rax + 0x10]
0xfb40:	test	rax, rax
0xfb43:	jne	0xfb30


0xfb45:	jmp	0xfd16


0xfb30:	mov	rdx, qword ptr [rax + 8]
0xfb34:	mov	rdx, qword ptr [rdx + 0x30]
0xfb38:	mov	qword ptr [rax + 0x30], rdx
0xfb3c:	mov	rax, qword ptr [rax + 0x10]
0xfb40:	test	rax, rax
0xfb43:	jne	0xfb30


0xcd36:	xor	ecx, ecx
0xcd38:	mov	edx, ebp
0xcd3a:	mov	dword ptr [rax], 0
0xcd40:	mov	rsi, rbx
0xcd43:	mov	rdi, r12
0xcd46:	mov	r13, rax
0xcd49:	call	0x24d0


0x24d0:	jmp	qword ptr [rip + 0x225852]




0xd3f8:	mov	dword ptr [rax], 0
0xd3fe:	mov	r12, rax
0xd401:	movzx	ebx, byte ptr [rbp]
0xd405:	call	0x29f0


0xd40a:	mov	edx, dword ptr [rsp + 8]
0xd40e:	mov	rsi, qword ptr [rax]
0xd411:	mov	rax, rbp
0xd414:	jmp	0xd427


0xd427:	movzx	ecx, bl
0xd42a:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0xd42f:	jne	0xd420


0xd431:	cmp	bl, 0x2d
0xd434:	je	0xd488


0xd420:	add	rax, 1
0xd424:	movzx	ebx, byte ptr [rax]
0xd427:	movzx	ecx, bl
0xd42a:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0xd42f:	jne	0xd420


0xd488:	mov	ebp, 4
0xd48d:	mov	rdi, qword ptr [rsp + 0x18]
0xd492:	xor	rdi, qword ptr fs:[0x28]
0xd49b:	mov	eax, ebp
0xd49d:	jne	0xd730


0xd436:	mov	rsi, r15
0xd439:	mov	rdi, rbp
0xd43c:	call	0x2920


0xd4a3:	add	rsp, 0x28
0xd4a7:	pop	rbx
0xd4a8:	pop	rbp
0xd4a9:	pop	r12
0xd4ab:	pop	r13
0xd4ad:	pop	r14
0xd4af:	pop	r15
0xd4b1:	ret	


0xd730:	call	0x2560


0x2920:	jmp	qword ptr [rip + 0x22562a]




0xd8c8:	mov	dword ptr [rax], 0
0xd8ce:	mov	r12, rax
0xd8d1:	movzx	ebx, byte ptr [rbp]
0xd8d5:	call	0x29f0


0xd8da:	mov	edx, dword ptr [rsp + 8]
0xd8de:	mov	rsi, qword ptr [rax]
0xd8e1:	mov	rax, rbp
0xd8e4:	jmp	0xd8f7


0xd8f7:	movzx	ecx, bl
0xd8fa:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0xd8ff:	jne	0xd8f0


0xd901:	cmp	bl, 0x2d
0xd904:	je	0xd958


0xd8f0:	add	rax, 1
0xd8f4:	movzx	ebx, byte ptr [rax]
0xd8f7:	movzx	ecx, bl
0xd8fa:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0xd8ff:	jne	0xd8f0


0xd958:	mov	ebp, 4
0xd95d:	mov	rdi, qword ptr [rsp + 0x18]
0xd962:	xor	rdi, qword ptr fs:[0x28]
0xd96b:	mov	eax, ebp
0xd96d:	jne	0xdc00


0xd906:	xor	ecx, ecx
0xd908:	mov	rsi, r15
0xd90b:	mov	rdi, rbp
0xd90e:	call	0x2610


0xd973:	add	rsp, 0x28
0xd977:	pop	rbx
0xd978:	pop	rbp
0xd979:	pop	r12
0xd97b:	pop	r13
0xd97d:	pop	r14
0xd97f:	pop	r15
0xd981:	ret	


0xdc00:	call	0x2560


0x2610:	jmp	qword ptr [rip + 0x2257b2]




0x9b5f:	test	eax, eax
0x9b61:	jne	0x9ba8


0x9b63:	movzx	esi, byte ptr [rbx]
0x9b66:	lea	edx, [rsi - 0x30]
0x9b69:	cmp	dl, 9
0x9b6c:	jbe	0x9b98


0x9ba8:	mov	rdx, qword ptr [r12]
0x9bac:	mov	dword ptr [r13], 0
0x9bb4:	test	rdx, rdx
0x9bb7:	jne	0x9b25


0x9b98:	mov	rdx, qword ptr [r12]
0x9b9c:	mov	dword ptr [r13], ebp
0x9ba0:	jmp	0x9bb4


0x9b6e:	mov	rcx, qword ptr [rsp]
0x9b72:	cmp	rbx, rcx
0x9b75:	jne	0x9b89


0x9bbd:	lea	rdi, [rip + 0x17e32]
0x9bc4:	call	0x23e0


0x9b25:	mov	rcx, qword ptr [rsp + 8]
0x9b2a:	xor	rcx, qword ptr fs:[0x28]
0x9b33:	jne	0x9c91


0x9bb4:	test	rdx, rdx
0x9bb7:	jne	0x9b25


0x9b77:	jmp	0x9c50


0x9b89:	add	rbx, 1
0x9b8d:	movzx	edi, byte ptr [rbx]
0x9b90:	lea	edx, [rdi - 0x30]
0x9b93:	cmp	dl, 9
0x9b96:	ja	0x9b80


0x9c50:	cmp	byte ptr [rcx - 1], 0x42
0x9c54:	je	0x9c68


0x9b80:	cmp	rbx, rcx
0x9b83:	je	0x9c50


0x9c68:	or	ebp, 0x180
0x9c6e:	cmp	byte ptr [rcx - 2], 0x69
0x9c72:	jne	0x9b98


0x9c56:	or	bpl, 0x80
0x9c5a:	or	ebp, 0x20
0x9c5d:	jmp	0x9b98


0x9c78:	jmp	0x9c5a


0x9c5a:	or	ebp, 0x20
0x9c5d:	jmp	0x9b98


0xf73d:	xor	ebx, ebx
0xf73f:	mov	dword ptr [rax], 0x16
0xf745:	jmp	0xf64e


0x10079:	mov	dword ptr [rax], 0x16
0x1007f:	mov	eax, 1
0x10084:	add	rsp, 8
0x10088:	ret	


0xba41:	mov	r13, rax
0xba44:	mov	eax, dword ptr [rax]
0xba46:	test	r15d, r15d
0xba49:	mov	rbx, qword ptr [rip + 0x21c630]
0xba50:	mov	dword ptr [rsp + 0x18], eax
0xba54:	js	0xbbc1


0xbbc1:	call	0x2400


0xba5a:	cmp	dword ptr [rip + 0x21c617], r15d
0xba61:	jg	0xbac5


0xba63:	cmp	r15d, 0x7fffffff
0xba6a:	je	0xbbc6


0xbac5:	mov	eax, dword ptr [rbp + 4]
0xbac8:	shl	r15, 4
0xbacc:	sub	rsp, 8
0xbad0:	add	rbx, r15
0xbad3:	lea	r15, [rbp + 8]
0xbad7:	mov	r8d, dword ptr [rbp]
0xbadb:	mov	r11, qword ptr [rbx]
0xbade:	mov	r12, qword ptr [rbx + 8]
0xbae2:	mov	rcx, r14
0xbae5:	or	eax, 1
0xbae8:	mov	dword ptr [rsp + 0x24], eax
0xbaec:	push	qword ptr [rbp + 0x30]
0xbaef:	mov	r9d, eax
0xbaf2:	push	qword ptr [rbp + 0x28]
0xbaf5:	push	r15
0xbaf7:	mov	rsi, r11
0xbafa:	mov	rdx, qword ptr [rsp + 0x28]
0xbaff:	mov	rdi, r12
0xbb02:	mov	qword ptr [rsp + 0x30], r11
0xbb07:	call	0xa7e0


0xbbc6:	call	0xcc30


0xba70:	lea	r12d, [r15 + 1]
0xba74:	lea	rax, [rip + 0x21c615]
0xba7b:	movsxd	rsi, r12d
0xba7e:	shl	rsi, 4
0xba82:	cmp	rbx, rax
0xba85:	je	0xbba0


0xbba0:	xor	edi, edi
0xbba2:	call	0xca40


0xba8b:	mov	rdi, rbx
0xba8e:	call	0xca40


0xba93:	mov	rbx, rax
0xba96:	mov	qword ptr [rip + 0x21c5e3], rax
0xba9d:	movsxd	rdi, dword ptr [rip + 0x21c5d4]
0xbaa4:	mov	edx, r12d
0xbaa7:	xor	esi, esi
0xbaa9:	sub	edx, edi
0xbaab:	shl	rdi, 4
0xbaaf:	movsxd	rdx, edx
0xbab2:	add	rdi, rbx
0xbab5:	shl	rdx, 4
0xbab9:	call	0x2620


0xbabe:	mov	dword ptr [rip + 0x21c5b3], r12d
0xbac5:	mov	eax, dword ptr [rbp + 4]
0xbac8:	shl	r15, 4
0xbacc:	sub	rsp, 8
0xbad0:	add	rbx, r15
0xbad3:	lea	r15, [rbp + 8]
0xbad7:	mov	r8d, dword ptr [rbp]
0xbadb:	mov	r11, qword ptr [rbx]
0xbade:	mov	r12, qword ptr [rbx + 8]
0xbae2:	mov	rcx, r14
0xbae5:	or	eax, 1
0xbae8:	mov	dword ptr [rsp + 0x24], eax
0xbaec:	push	qword ptr [rbp + 0x30]
0xbaef:	mov	r9d, eax
0xbaf2:	push	qword ptr [rbp + 0x28]
0xbaf5:	push	r15
0xbaf7:	mov	rsi, r11
0xbafa:	mov	rdx, qword ptr [rsp + 0x28]
0xbaff:	mov	rdi, r12
0xbb02:	mov	qword ptr [rsp + 0x30], r11
0xbb07:	call	0xa7e0


0xbba7:	movdqa	xmm0, xmmword ptr [rip + 0x21c4e1]
0xbbaf:	mov	rbx, rax
0xbbb2:	mov	qword ptr [rip + 0x21c4c7], rax
0xbbb9:	movups	xmmword ptr [rax], xmm0
0xbbbc:	jmp	0xba9d


0xba9d:	movsxd	rdi, dword ptr [rip + 0x21c5d4]
0xbaa4:	mov	edx, r12d
0xbaa7:	xor	esi, esi
0xbaa9:	sub	edx, edi
0xbaab:	shl	rdi, 4
0xbaaf:	movsxd	rdx, edx
0xbab2:	add	rdi, rbx
0xbab5:	shl	rdx, 4
0xbab9:	call	0x2620


0xbbdc:	mov	r12d, dword ptr [rax]
0xbbdf:	mov	rbp, rax
0xbbe2:	lea	rax, [rip + 0x21c6d7]
0xbbe9:	test	rbx, rbx
0xbbec:	mov	esi, 0x38
0xbbf1:	cmove	rbx, rax
0xbbf5:	mov	rdi, rbx
0xbbf8:	call	0xcbe0


0xbd12:	mov	r12d, dword ptr [rax]
0xbd15:	mov	rbp, rax
0xbd18:	lea	rax, [rbx + 8]
0xbd1c:	sub	rsp, 8
0xbd20:	mov	r9d, dword ptr [rbx + 4]
0xbd24:	push	qword ptr [rbx + 0x30]
0xbd27:	mov	r8d, dword ptr [rbx]
0xbd2a:	push	qword ptr [rbx + 0x28]
0xbd2d:	mov	rdx, r15
0xbd30:	push	rax
0xbd31:	mov	rcx, qword ptr [rsp + 0x28]
0xbd36:	mov	rsi, r14
0xbd39:	mov	rdi, r13
0xbd3c:	call	0xa7e0


0xbd8f:	test	r12, r12
0xbd92:	mov	r13, rax
0xbd95:	mov	eax, dword ptr [rax]
0xbd97:	sete	bpl
0xbd9b:	or	ebp, dword ptr [rbx + 4]
0xbd9e:	lea	r10, [rbx + 8]
0xbda2:	sub	rsp, 8
0xbda6:	mov	r8d, dword ptr [rbx]
0xbda9:	mov	rcx, r15
0xbdac:	mov	dword ptr [rsp + 0x14], eax
0xbdb0:	push	qword ptr [rbx + 0x30]
0xbdb3:	mov	rdx, r14
0xbdb6:	push	qword ptr [rbx + 0x28]
0xbdb9:	push	r10
0xbdbb:	xor	esi, esi
0xbdbd:	mov	r9d, ebp
0xbdc0:	xor	edi, edi
0xbdc2:	mov	qword ptr [rsp + 0x40], r10
0xbdc7:	call	0xa7e0


0x100a3:	test	r12d, 0xffffefff
0x100aa:	mov	r13, rax
0x100ad:	jne	0x10198


0x100b3:	mov	rbp, qword ptr [rbx]
0x100b6:	mov	dword ptr [rax], 0
0x100bc:	test	byte ptr [rbx + 0x49], 0x20
0x100c0:	jne	0x10140


0x10198:	mov	dword ptr [rax], 0x16
0x1019e:	xor	eax, eax
0x101a0:	jmp	0x10124


0x100c2:	movzx	eax, word ptr [rbp + 0x70]
0x100c6:	cmp	ax, 9
0x100ca:	je	0x10130


0x10140:	pop	rbx
0x10141:	xor	eax, eax
0x10143:	pop	rbp
0x10144:	pop	r12
0x10146:	pop	r13
0x10148:	pop	r14
0x1014a:	ret	


0x10124:	pop	rbx
0x10125:	pop	rbp
0x10126:	pop	r12
0x10128:	pop	r13
0x1012a:	pop	r14
0x1012c:	ret	


0x10130:	pop	rbx
0x10131:	mov	rax, qword ptr [rbp + 0x10]
0x10135:	pop	rbp
0x10136:	pop	r12
0x10138:	pop	r13
0x1013a:	pop	r14
0x1013c:	ret	


0x100cc:	cmp	ax, 1
0x100d0:	jne	0x10140


0x100d2:	mov	rdi, qword ptr [rbx + 8]
0x100d6:	test	rdi, rdi
0x100d9:	je	0x100e0


0x100e0:	cmp	r12d, 0x1000
0x100e7:	mov	r14d, 1
0x100ed:	jne	0x100fc


0x100db:	call	0xe1b0


0x100ef:	or	dword ptr [rbx + 0x48], 0x1000
0x100f6:	mov	r14d, 2
0x100fc:	cmp	qword ptr [rbp + 0x58], 0
0x10101:	jne	0x10115


0x100fc:	cmp	qword ptr [rbp + 0x58], 0
0x10101:	jne	0x10115


0x10103:	mov	rax, qword ptr [rbp + 0x30]
0x10107:	cmp	byte ptr [rax], 0x2f
0x1010a:	je	0x10115


0x10115:	mov	esi, r14d
0x10118:	mov	rdi, rbx
0x1011b:	call	0xe9c0


0x1010c:	mov	esi, dword ptr [rbx + 0x48]
0x1010f:	test	sil, 4
0x10113:	je	0x10150


0x10150:	mov	edi, dword ptr [rbx + 0x2c]
0x10153:	lea	rdx, [rip + 0x12542]
0x1015a:	call	0xe590


0x10120:	mov	qword ptr [rbx + 8], rax
0x10124:	pop	rbx
0x10125:	pop	rbp
0x10126:	pop	r12
0x10128:	pop	r13
0x1012a:	pop	r14
0x1012c:	ret	


0x1ee12:	cmp	byte ptr [rbp + 8], 0
0x1ee16:	mov	rbx, rax
0x1ee19:	mov	r12d, dword ptr [rax]
0x1ee1c:	lea	rdi, [rbp + 9]
0x1ee20:	jne	0x1ee24


0x1ee22:	xor	edi, edi
0x1ee24:	call	0x1eda0


0x1ee24:	call	0x1eda0


0x1ee29:	test	eax, eax
0x1ee2b:	je	0x1ee50


0x1ee50:	call	0x2720


0x1ee2d:	mov	r12d, dword ptr [rbx]
0x1ee30:	xor	r13d, r13d
0x1ee33:	mov	rdi, rbp
0x1ee36:	call	0x1edd0


0x2720:	jmp	qword ptr [rip + 0x22572a]




0x1ee3b:	mov	dword ptr [rbx], r12d
0x1ee3e:	add	rsp, 8
0x1ee42:	mov	eax, r13d
0x1ee45:	pop	rbx
0x1ee46:	pop	rbp
0x1ee47:	pop	r12
0x1ee49:	pop	r13
0x1ee4b:	ret	


0x9bc9:	cmp	rax, 1
0x9bcd:	sbb	rax, rax
0x9bd0:	and	eax, 0x200
0x9bd5:	add	rax, 0x200
0x9bdb:	mov	qword ptr [r12], rax
0x9bdf:	mov	eax, 4
0x9be4:	jmp	0x9b25


0x9bfc:	test	rax, rax
0x9bff:	mov	rbx, rax
0x9c02:	jne	0x9adc


0x9c08:	lea	rdi, [rip + 0x17ddd]
0x9c0f:	call	0x23e0


0x9c14:	test	rax, rax
0x9c17:	mov	rbx, rax
0x9c1a:	jne	0x9adc


0x9c20:	lea	rdi, [rip + 0x17dcf]
0x9c27:	call	0x23e0


0x9c2c:	test	rax, rax
0x9c2f:	je	0x9c7a


0x9c7a:	mov	qword ptr [r12], 0x400
0x9c82:	xor	eax, eax
0x9c84:	mov	dword ptr [r13], 0
0x9c8c:	jmp	0x9b25


0x9c31:	mov	qword ptr [r12], 0x200
0x9c39:	xor	eax, eax
0x9c3b:	mov	dword ptr [r13], 0
0x9c43:	jmp	0x9b25


0x1f047:	test	rax, rax
0x1f04a:	mov	rbx, rax
0x1f04d:	je	0x1f0e8


0x1f0e8:	cmp	byte ptr [rbp + 8], 0
0x1f0ec:	mov	r12d, 1
0x1f0f2:	jne	0x1f059


0x1f053:	cmp	byte ptr [rbp + 8], 0
0x1f057:	jne	0x1f0c0


0x1f0f8:	add	rsp, 0x10
0x1f0fc:	mov	rax, r12
0x1f0ff:	pop	rbx
0x1f100:	pop	rbp
0x1f101:	pop	r12
0x1f103:	ret	


0x1f059:	mov	rdi, rbx
0x1f05c:	call	0x1ee60


0x1f0c0:	lea	rdi, [rbp + 9]
0x1f0c4:	mov	rsi, rax
0x1f0c7:	mov	r12d, 1
0x1f0cd:	call	0x26d0


0x1f0d2:	test	eax, eax
0x1f0d4:	jne	0x1f059


0x1f0d6:	add	rsp, 0x10
0x1f0da:	mov	rax, r12
0x1f0dd:	pop	rbx
0x1f0de:	pop	rbp
0x1f0df:	pop	r12
0x1f0e1:	ret	


0x1f061:	test	rax, rax
0x1f064:	mov	r12, rax
0x1f067:	je	0x1f0ad


0x1f0ad:	add	rsp, 0x10
0x1f0b1:	mov	rax, r12
0x1f0b4:	pop	rbx
0x1f0b5:	pop	rbp
0x1f0b6:	pop	r12
0x1f0b8:	ret	


0x1f069:	xor	edi, edi
0x1f06b:	cmp	byte ptr [rbp + 8], 0
0x1f06f:	je	0x1f075


0x1f075:	call	0x1eda0


0x1f071:	lea	rdi, [rbp + 9]
0x1f075:	call	0x1eda0


0x1f07a:	test	eax, eax
0x1f07c:	je	0x1f108


0x1f108:	call	0x2720


0x1f082:	call	0x2410


0x1f087:	cmp	r12, 1
0x1f08b:	mov	ebx, dword ptr [rax]
0x1f08d:	je	0x1f0a8


0x1f0a8:	mov	dword ptr [rax], ebx
0x1f0aa:	xor	r12d, r12d
0x1f0ad:	add	rsp, 0x10
0x1f0b1:	mov	rax, r12
0x1f0b4:	pop	rbx
0x1f0b5:	pop	rbp
0x1f0b6:	pop	r12
0x1f0b8:	ret	


0x1f08f:	mov	rdi, r12
0x1f092:	mov	qword ptr [rsp + 8], rax
0x1f097:	call	0x1edd0


0x1f09c:	mov	rax, qword ptr [rsp + 8]
0x1f0a1:	nop	dword ptr [rax]
0x1f0a8:	mov	dword ptr [rax], ebx
0x1f0aa:	xor	r12d, r12d
0x1f0ad:	add	rsp, 0x10
0x1f0b1:	mov	rax, r12
0x1f0b4:	pop	rbx
0x1f0b5:	pop	rbp
0x1f0b6:	pop	r12
0x1f0b8:	ret	


0x1f13d:	test	rax, rax
0x1f140:	mov	r12, rax
0x1f143:	je	0x1f18e


0x1f18e:	add	rsp, 8
0x1f192:	xor	eax, eax
0x1f194:	pop	rbx
0x1f195:	pop	rbp
0x1f196:	pop	r12
0x1f198:	pop	r13
0x1f19a:	ret	


0x1f145:	mov	rsi, r13
0x1f148:	mov	rdi, rbp
0x1f14b:	call	0x2430


0x2430:	jmp	qword ptr [rip + 0x2258a2]




0x1f1fc:	test	rax, rax
0x1f1ff:	mov	r12, rax
0x1f202:	je	0x1f300


0x1f300:	mov	rax, -1
0x1f307:	jmp	0x1f24e


0x1f208:	mov	rdi, rbx
0x1f20b:	call	0x2800


0x2800:	jmp	qword ptr [rip + 0x2256ba]




0x1f32c:	mov	ebx, dword ptr [rbp]
0x1f32f:	mov	rdi, rbp
0x1f332:	mov	r12, rax
0x1f335:	call	0xdca0


0x2ac0:	lea	rsi, [rip + 0x1d076]
0x2ac7:	lea	rdi, [rip + 0x1d03d]
0x2ace:	call	0x2500


0x2500:	jmp	qword ptr [rip + 0x22583a]




0x1f4bb:	mov	rdx, rax
0x1f4be:	mov	eax, 1
0x1f4c3:	test	rdx, rdx
0x1f4c6:	je	0x1f4e5


0x1f4e5:	add	rsp, 8
0x1f4e9:	ret	


0x1f4c8:	lea	rdi, [rip + 0x3b8d]
0x1f4cf:	mov	ecx, 2
0x1f4d4:	mov	rsi, rdx
0x1f4d7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1f4d7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1f4d9:	seta	cl
0x1f4dc:	sbb	cl, 0
0x1f4df:	xor	eax, eax
0x1f4e1:	test	cl, cl
0x1f4e3:	jne	0x1f4f0


0x1f4f0:	lea	rdi, [rip + 0x3b67]
0x1f4f7:	mov	ecx, 6
0x1f4fc:	mov	rsi, rdx
0x1f4ff:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1f4ff:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1f501:	seta	al
0x1f504:	sbb	al, 0
0x1f506:	test	al, al
0x1f508:	setne	al
0x1f50b:	add	rsp, 8
0x1f50f:	ret	


0x1022c:	test	al, al
0x1022e:	jne	0x10240


0x10230:	movzx	eax, byte ptr [r13]
0x10235:	mov	ebp, 1
0x1023a:	mov	dword ptr [rbx], eax
0x1023c:	nop	dword ptr [rax]
0x10240:	mov	rdx, qword ptr [rsp + 8]
0x10245:	xor	rdx, qword ptr fs:[0x28]
0x1024e:	mov	rax, rbp
0x10251:	jne	0x1025e


0x1d387:	movzx	edx, byte ptr [rax]
0x1d38a:	and	edx, 0xffffffdf
0x1d38d:	cmp	dl, 0x55
0x1d390:	jne	0x1d3e0


0x1d392:	movzx	edx, byte ptr [rax + 1]
0x1d396:	and	edx, 0xffffffdf
0x1d399:	cmp	dl, 0x54
0x1d39c:	jne	0x1d3e0


0x1d3e0:	movzx	eax, byte ptr [rbx + 0xb0]
0x1d3e7:	mov	edx, eax
0x1d3e9:	and	edx, 0xfffffff7
0x1d3ec:	cmp	dword ptr [rbx + 0xb4], 1
0x1d3f3:	mov	byte ptr [rbx + 0xb0], dl
0x1d3f9:	jle	0x1d40e


0x1d39e:	movzx	edx, byte ptr [rax + 2]
0x1d3a2:	and	edx, 0xffffffdf
0x1d3a5:	cmp	dl, 0x46
0x1d3a8:	jne	0x1d3e0


0x1d40e:	cmp	qword ptr [rbx], 0
0x1d412:	je	0x1d956


0x1d3fb:	test	al, 4
0x1d3fd:	je	0x1d963


0x1d3aa:	xor	edx, edx
0x1d3ac:	cmp	byte ptr [rax + 3], 0x2d
0x1d3b0:	lea	rdi, [rip + 0x54ab]
0x1d3b7:	mov	ecx, 2
0x1d3bc:	sete	dl
0x1d3bf:	lea	rsi, [rax + rdx + 3]
0x1d3c4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1d418:	cmp	qword ptr [rbx + 0x40], 0
0x1d41d:	je	0x1d956


0x1d963:	mov	esi, 1
0x1d968:	mov	edi, 0x20
0x1d96d:	call	0x26b0


0x1d403:	lea	rax, [rip + 0x59b6]
0x1d40a:	mov	qword ptr [rbx + 0x78], rax
0x1d40e:	cmp	qword ptr [rbx], 0
0x1d412:	je	0x1d956


0x1d3c4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1d3c6:	seta	al
0x1d3c9:	sbb	al, 0
0x1d3cb:	test	al, al
0x1d3cd:	jne	0x1d3e0


0x1d423:	mov	rax, qword ptr [rsp + 0x18]
0x1d428:	lea	rbp, [rsp + 0x80]
0x1d430:	mov	ecx, 0x12
0x1d435:	mov	dword ptr [rsp + 0x4c], 0
0x1d43d:	lea	r8, [rbp + 8]
0x1d441:	and	eax, 0x400000
0x1d446:	mov	qword ptr [rsp + 0x20], rax
0x1d44b:	mov	rax, qword ptr [rsp + 8]
0x1d450:	setne	dl
0x1d453:	mov	rdi, r8
0x1d456:	mov	rsi, qword ptr [rax + 0x28]
0x1d45a:	xor	eax, eax
0x1d45c:	rep stosq	qword ptr [rdi], rax


0x1d3cf:	or	byte ptr [rbx + 0xb0], 4
0x1d3d6:	nop	word ptr cs:[rax + rax]
0x1d3e0:	movzx	eax, byte ptr [rbx + 0xb0]
0x1d3e7:	mov	edx, eax
0x1d3e9:	and	edx, 0xfffffff7
0x1d3ec:	cmp	dword ptr [rbx + 0xb4], 1
0x1d3f3:	mov	byte ptr [rbx + 0xb0], dl
0x1d3f9:	jle	0x1d40e


0x1d45c:	rep stosq	qword ptr [rdi], rax


0x1d45f:	mov	rax, qword ptr [rsp + 0x10]
0x1d464:	mov	rdi, qword ptr [rsp]
0x1d468:	test	rsi, rsi
0x1d46b:	mov	byte ptr [rsp + 0x108], dl
0x1d472:	mov	ecx, dword ptr [rbx + 0xb4]
0x1d478:	setne	r12b
0x1d47c:	mov	qword ptr [rsp + 0xf8], rsi
0x1d484:	mov	qword ptr [rsp + 0x80], rax
0x1d48c:	movzx	eax, byte ptr [rbx + 0xb0]
0x1d493:	or	r12d, edx
0x1d496:	mov	qword ptr [rsp + 0xd8], rdi
0x1d49e:	mov	qword ptr [rsp + 0xd0], rdi
0x1d4a6:	mov	esi, r12d
0x1d4a9:	mov	byte ptr [rsp + 0x10b], r12b
0x1d4b1:	mov	dword ptr [rsp + 0x110], ecx
0x1d4b8:	mov	qword ptr [rsp + 0xe8], rdi
0x1d4c0:	mov	qword ptr [rsp + 0xe0], rdi
0x1d4c8:	mov	edx, eax
0x1d4ca:	shr	al, 3
0x1d4cd:	shr	dl, 2
0x1d4d0:	and	eax, 1
0x1d4d3:	and	edx, 1
0x1d4d6:	test	rdi, rdi
0x1d4d9:	mov	byte ptr [rsp + 0x10a], al
0x1d4e0:	mov	byte ptr [rsp + 0x109], dl
0x1d4e7:	jne	0x1d925


0x1d4ed:	test	sil, sil
0x1d4f0:	je	0x1d4ff


0x1d925:	mov	rsi, qword ptr [rsp + 0x28]
0x1d92a:	mov	rdi, rbp
0x1d92d:	call	0x11050


0x1d4ff:	cmp	qword ptr [rsp + 0x20], 0
0x1d505:	mov	rax, qword ptr [rsp + 0x10]
0x1d50a:	mov	qword ptr [rsp + 0x88], rax
0x1d512:	je	0x1d615


0x1d4f2:	mov	rax, qword ptr [rsp + 0x88]
0x1d4fa:	mov	qword ptr [rsp + 0x10], rax
0x1d4ff:	cmp	qword ptr [rsp + 0x20], 0
0x1d505:	mov	rax, qword ptr [rsp + 0x10]
0x1d50a:	mov	qword ptr [rsp + 0x88], rax
0x1d512:	je	0x1d615


0x1d615:	cmp	ecx, 1
0x1d618:	jg	0x1dfca


0x1d518:	cmp	ecx, 1
0x1d51b:	jle	0x1e10d


0x1d61e:	test	r12b, r12b
0x1d621:	mov	rsi, qword ptr [rsp + 0xc0]
0x1d629:	je	0x1dc44


0x1dfca:	mov	rdi, rbp
0x1dfcd:	call	0x113f0


0x1e10d:	mov	rdi, rbp
0x1e110:	call	0x11380


0x1d521:	mov	rdi, rbp
0x1d524:	call	0x115c0


0x1dc44:	mov	qword ptr [rsp + 0xb0], rsi
0x1dc4c:	mov	qword ptr [rsp + 0xb8], rsi
0x1dc54:	mov	dword ptr [rsp + 0x4c], 0
0x1dc5c:	jmp	0x1d6a8


0x1d62f:	cmp	qword ptr [rsp + 0xd8], rsi
0x1d637:	mov	rax, qword ptr [rsp + 0xb0]
0x1d63f:	cmovle	rsi, qword ptr [rsp + 0xd8]
0x1d648:	cmp	rsi, rax
0x1d64b:	jg	0x1d65d


0x1d6a8:	mov	r12, qword ptr [rsp + 8]
0x1d6ad:	mov	r14, qword ptr [rsp + 0x18]
0x1d6b2:	lea	r13, [rsp + 0x50]
0x1d6b7:	mov	rsi, rbp
0x1d6ba:	mov	rdi, r13
0x1d6bd:	mov	qword ptr [rsp + 0x28], r13
0x1d6c2:	mov	r15, qword ptr [r12]
0x1d6c6:	mov	rdx, r14
0x1d6c9:	mov	qword ptr [r12 + 0x30], 0
0x1d6d2:	or	rdx, 0x800000
0x1d6d9:	mov	qword ptr [r15 + 0xd8], r14
0x1d6e0:	call	0x1b2a0


0x1d64d:	jmp	0x1d690


0x1d65d:	mov	rdx, qword ptr [rsp + 0x80]
0x1d665:	mov	rcx, qword ptr [rsp + 0xf8]
0x1d66d:	add	rdx, rax
0x1d670:	add	rdx, qword ptr [rsp + 0xa8]
0x1d678:	movzx	edx, byte ptr [rdx]
0x1d67b:	movzx	edx, byte ptr [rcx + rdx]
0x1d67f:	mov	rcx, qword ptr [rsp + 0x10]
0x1d684:	mov	byte ptr [rcx + rax], dl
0x1d687:	add	rax, 1
0x1d68b:	cmp	rsi, rax
0x1d68e:	jne	0x1d650


0x1d690:	mov	qword ptr [rsp + 0xb0], rax
0x1d698:	mov	qword ptr [rsp + 0xb8], rax
0x1d6a0:	mov	dword ptr [rsp + 0x4c], 0
0x1d6a8:	mov	r12, qword ptr [rsp + 8]
0x1d6ad:	mov	r14, qword ptr [rsp + 0x18]
0x1d6b2:	lea	r13, [rsp + 0x50]
0x1d6b7:	mov	rsi, rbp
0x1d6ba:	mov	rdi, r13
0x1d6bd:	mov	qword ptr [rsp + 0x28], r13
0x1d6c2:	mov	r15, qword ptr [r12]
0x1d6c6:	mov	rdx, r14
0x1d6c9:	mov	qword ptr [r12 + 0x30], 0
0x1d6d2:	or	rdx, 0x800000
0x1d6d9:	mov	qword ptr [r15 + 0xd8], r14
0x1d6e0:	call	0x1b2a0


0x1d650:	mov	rdx, qword ptr [rsp + 0x88]
0x1d658:	mov	qword ptr [rsp + 0x10], rdx
0x1d65d:	mov	rdx, qword ptr [rsp + 0x80]
0x1d665:	mov	rcx, qword ptr [rsp + 0xf8]
0x1d66d:	add	rdx, rax
0x1d670:	add	rdx, qword ptr [rsp + 0xa8]
0x1d678:	movzx	edx, byte ptr [rdx]
0x1d67b:	movzx	edx, byte ptr [rcx + rdx]
0x1d67f:	mov	rcx, qword ptr [rsp + 0x10]
0x1d684:	mov	byte ptr [rcx + rax], dl
0x1d687:	add	rax, 1
0x1d68b:	cmp	rsi, rax
0x1d68e:	jne	0x1d650


0x1d6e5:	lea	r9, [rsp + 0x4c]
0x1d6ea:	xor	r8d, r8d
0x1d6ed:	mov	rcx, r14
0x1d6f0:	mov	rdx, r13
0x1d6f3:	mov	rsi, r12
0x1d6f6:	mov	rdi, rbp
0x1d6f9:	cdqe	
0x1d6fb:	add	qword ptr [rsp + 0xc8], rax
0x1d703:	call	0x1d0d0


0x1d708:	mov	ecx, dword ptr [rsp + 0x4c]
0x1d70c:	test	ecx, ecx
0x1d70e:	jne	0x1e137


0x1d714:	lea	r13, [r15 + 0x70]
0x1d718:	lea	r12, [rsp + 0x60]
0x1d71d:	sub	r15, -0x80
0x1d721:	xor	edx, edx
0x1d723:	xor	ecx, ecx
0x1d725:	mov	rsi, r15
0x1d728:	mov	r8, r12
0x1d72b:	mov	rdi, r13
0x1d72e:	mov	qword ptr [rsp], rax
0x1d732:	mov	byte ptr [rsp + 0x68], 2
0x1d737:	call	0x13360


0x1e137:	test	rax, rax
0x1e13a:	je	0x1e26b


0x1e26b:	mov	rax, qword ptr [rsp + 8]
0x1e270:	mov	qword ptr [rbx + 0x68], 0
0x1e278:	mov	r13, qword ptr [rax]
0x1e27b:	jmp	0x1d57c


0x1e140:	lea	r13, [r15 + 0x70]
0x1e144:	lea	r12, [rsp + 0x60]
0x1e149:	sub	r15, -0x80
0x1e14d:	xor	ecx, ecx
0x1e14f:	xor	edx, edx
0x1e151:	mov	rsi, r15
0x1e154:	mov	r8, r12
0x1e157:	mov	rdi, r13
0x1e15a:	mov	qword ptr [rsp], rax
0x1e15e:	mov	byte ptr [rsp + 0x68], 2
0x1e163:	call	0x13360


0x1d57c:	mov	rdi, qword ptr [r13 + 0x70]
0x1d580:	test	rdi, rdi
0x1d583:	je	0x1d598


0x1d598:	mov	rdi, qword ptr [r13 + 0x20]
0x1d59c:	mov	qword ptr [r13 + 0x70], 0
0x1d5a4:	mov	dword ptr [r13 + 0x80], 0xf
0x1d5af:	mov	qword ptr [r13 + 0x68], 0
0x1d5b7:	call	0x2a10


0x1d590:	test	r12, r12
0x1d593:	mov	rdi, r12
0x1d596:	jne	0x1d588


0x1d588:	mov	r12, qword ptr [rdi]
0x1d58b:	call	0x2a10


0x1d5bc:	mov	qword ptr [r13 + 0x20], 0
0x1d5c4:	mov	rdi, rbp
0x1d5c7:	call	0x12390


0x1e168:	mov	r9, qword ptr [rsp]
0x1e16c:	mov	r11, rax
0x1e16f:	jmp	0x1d74b


0x1d74b:	mov	rcx, r11
0x1d74e:	mov	rdx, r9
0x1d751:	mov	r8, r12
0x1d754:	mov	rsi, r15
0x1d757:	mov	rdi, r13
0x1d75a:	mov	qword ptr [rsp], r11
0x1d75e:	mov	byte ptr [rsp + 0x68], 0x10
0x1d763:	call	0x13360


0x1d768:	mov	r11, qword ptr [rsp]
0x1d76c:	mov	rdx, r11
0x1d76f:	mov	r11, rax
0x1d772:	test	rdx, rdx
0x1d775:	mov	rcx, qword ptr [rsp + 8]
0x1d77a:	sete	dl
0x1d77d:	test	r11, r11
0x1d780:	sete	al
0x1d783:	or	dl, al
0x1d785:	mov	r13, qword ptr [rcx]
0x1d788:	jne	0x1e122


0x1d78e:	mov	r15, qword ptr [r13 + 8]
0x1d792:	mov	qword ptr [rbx + 0x68], r11
0x1d796:	lea	rcx, [r15*8]
0x1d79e:	lea	r15, [r15 + r15*2]
0x1d7a2:	mov	rdi, rcx
0x1d7a5:	mov	qword ptr [rsp], rcx
0x1d7a9:	shl	r15, 3
0x1d7ad:	call	0x2780


0x1e122:	mov	dword ptr [rsp + 0x4c], 0xc
0x1e12a:	mov	qword ptr [rbx + 0x68], 0
0x1e132:	jmp	0x1d57c


0x1d7b2:	mov	rcx, qword ptr [rsp]
0x1d7b6:	mov	qword ptr [r13 + 0x18], rax
0x1d7ba:	mov	qword ptr [rsp + 0x18], rax
0x1d7bf:	mov	rdi, rcx
0x1d7c2:	call	0x2780


0x1d7c7:	mov	rdi, r15
0x1d7ca:	mov	qword ptr [r13 + 0x20], rax
0x1d7ce:	mov	qword ptr [rsp + 0x10], rax
0x1d7d3:	call	0x2780


0x1d7d8:	mov	rdi, r15
0x1d7db:	mov	qword ptr [r13 + 0x28], rax
0x1d7df:	mov	qword ptr [rsp], rax
0x1d7e3:	call	0x2780


0x1d7e8:	mov	rdx, qword ptr [rsp + 0x18]
0x1d7ed:	mov	qword ptr [r13 + 0x30], rax
0x1d7f1:	mov	rsi, qword ptr [rsp]
0x1d7f5:	mov	rcx, qword ptr [rsp + 0x10]
0x1d7fa:	test	rdx, rdx
0x1d7fd:	je	0x1dfbd


0x1dfbd:	mov	dword ptr [rsp + 0x4c], 0xc
0x1dfc5:	jmp	0x1d57c


0x1d803:	test	rcx, rcx
0x1d806:	je	0x1dfbd


0x1d80c:	test	rsi, rsi
0x1d80f:	je	0x1dfbd


0x1d815:	test	rax, rax
0x1d818:	je	0x1dfbd


0x1d81e:	mov	rax, qword ptr [rsp + 8]
0x1d823:	mov	r15, qword ptr [rax + 0x30]
0x1d827:	lea	rdi, [r15*8]
0x1d82f:	call	0x2780


0x1d834:	test	rax, rax
0x1d837:	mov	qword ptr [r13 + 0xe0], rax
0x1d83e:	je	0x1d8ad


0x1d8ad:	mov	rdi, qword ptr [r13 + 0x68]
0x1d8b1:	mov	rdx, qword ptr [rsp + 8]
0x1d8b6:	lea	rsi, [rip - 0xa15d]
0x1d8bd:	call	0x10f80


0x1d840:	test	r15, r15
0x1d843:	je	0x1d85d


0x1d85d:	mov	rdi, qword ptr [r13 + 0x68]
0x1d861:	lea	rsi, [rip - 0xb008]
0x1d868:	mov	rdx, r13
0x1d86b:	call	0x10ff0


0x1d845:	xor	edx, edx
0x1d847:	nop	word ptr [rax + rax]
0x1d850:	mov	qword ptr [rax + rdx*8], rdx
0x1d854:	add	rdx, 1
0x1d858:	cmp	rdx, r15
0x1d85b:	jne	0x1d850


0x1d850:	mov	qword ptr [rax + rdx*8], rdx
0x1d854:	add	rdx, 1
0x1d858:	cmp	rdx, r15
0x1d85b:	jne	0x1d850


0x1d73c:	mov	r9, qword ptr [rsp]
0x1d740:	mov	r11, rax
0x1d743:	mov	rdx, rax
0x1d746:	test	r9, r9
0x1d749:	je	0x1d772


0x1d772:	test	rdx, rdx
0x1d775:	mov	rcx, qword ptr [rsp + 8]
0x1d77a:	sete	dl
0x1d77d:	test	r11, r11
0x1d780:	sete	al
0x1d783:	or	dl, al
0x1d785:	mov	r13, qword ptr [rcx]
0x1d788:	jne	0x1e122


0x1d529:	test	eax, eax
0x1d52b:	jne	0x1d570


0x1d52d:	mov	rax, qword ptr [rsp]
0x1d531:	cmp	rax, qword ptr [rsp + 0xb8]
0x1d539:	jle	0x1e0f0


0x1d570:	mov	dword ptr [rsp + 0x4c], eax
0x1d574:	mov	rax, qword ptr [rsp + 8]
0x1d579:	mov	r13, qword ptr [rax]
0x1d57c:	mov	rdi, qword ptr [r13 + 0x70]
0x1d580:	test	rdi, rdi
0x1d583:	je	0x1d598


0x1e0f0:	mov	dword ptr [rsp + 0x4c], 0
0x1e0f8:	jmp	0x1d6a8


0x1d53f:	movsxd	rax, dword ptr [rbx + 0xb4]
0x1d546:	mov	rsi, qword ptr [rsp + 0xc0]
0x1d54e:	add	rax, qword ptr [rsp + 0xb0]
0x1d556:	cmp	rsi, rax
0x1d559:	jg	0x1e0f0


0x1d55f:	add	rsi, rsi
0x1d562:	mov	rdi, rbp
0x1d565:	call	0x11050


0x1e115:	mov	dword ptr [rsp + 0x4c], 0
0x1e11d:	jmp	0x1d6a8


0x1dfd2:	mov	dword ptr [rsp + 0x4c], 0
0x1dfda:	jmp	0x1d6a8


0x1d56a:	test	eax, eax
0x1d56c:	je	0x1d521


0x1d932:	test	eax, eax
0x1d934:	jne	0x1d570


0x1d93a:	movzx	esi, byte ptr [rsp + 0x10b]
0x1d942:	mov	ecx, dword ptr [rbx + 0xb4]
0x1d948:	test	sil, sil
0x1d94b:	je	0x1d4ff


0x1d951:	jmp	0x1d4f2


0x1d972:	test	rax, rax
0x1d975:	mov	qword ptr [rbx + 0x78], rax
0x1d979:	je	0x1d956


0x1d97b:	xor	r12d, r12d
0x1d97e:	xor	ebp, ebp
0x1d980:	mov	r13d, 1
0x1d986:	xor	r15d, r15d
0x1d989:	nop	dword ptr [rax]
0x1d990:	lea	r14d, [rbp + r15]
0x1d995:	mov	edi, r14d
0x1d998:	call	0x2880


0x2880:	jmp	qword ptr [rip + 0x22567a]




0x1f5ce:	test	rax, rax
0x1f5d1:	je	0x1f5f0


0x1f5f0:	lea	rax, [rip + 0x3a6d]
0x1f5f7:	add	rsp, 8
0x1f5fb:	ret	


0x1f5d3:	cmp	byte ptr [rax], 0
0x1f5d6:	lea	rdx, [rip + 0x3a87]
0x1f5dd:	cmove	rax, rdx
0x1f5e1:	add	rsp, 8
0x1f5e5:	ret	


0xa700:	movzx	edx, byte ptr [rax]
0xa703:	and	edx, 0xffffffdf
0xa706:	cmp	dl, 0x55
0xa709:	je	0xa780


0xa780:	movzx	edx, byte ptr [rax + 1]
0xa784:	and	edx, 0xffffffdf
0xa787:	cmp	dl, 0x54
0xa78a:	jne	0xa710


0xa70b:	cmp	dl, 0x47
0xa70e:	je	0xa730


0xa78c:	movzx	edx, byte ptr [rax + 2]
0xa790:	and	edx, 0xffffffdf
0xa793:	cmp	dl, 0x46
0xa796:	jne	0xa710


0xa710:	lea	rax, [rip + 0x173b4]
0xa717:	lea	rdx, [rip + 0x16dd6]
0xa71e:	cmp	ebx, 9
0xa721:	cmovne	rax, rdx
0xa725:	add	rsp, 8
0xa729:	pop	rbx
0xa72a:	pop	rbp
0xa72b:	ret	


0xa730:	movzx	edx, byte ptr [rax + 1]
0xa734:	and	edx, 0xffffffdf
0xa737:	cmp	dl, 0x42
0xa73a:	jne	0xa710


0xa79c:	cmp	byte ptr [rax + 3], 0x2d
0xa7a0:	jne	0xa710


0xa73c:	cmp	byte ptr [rax + 2], 0x31
0xa740:	jne	0xa710


0xa7a6:	cmp	byte ptr [rax + 4], 0x38
0xa7aa:	jne	0xa710


0xa742:	cmp	byte ptr [rax + 3], 0x38
0xa746:	jne	0xa710


0xa7b0:	cmp	byte ptr [rax + 5], 0
0xa7b4:	jne	0xa710


0xa748:	cmp	byte ptr [rax + 4], 0x30
0xa74c:	jne	0xa710


0xa7ba:	cmp	byte ptr [rbp], 0x60
0xa7be:	lea	rax, [rip + 0x172f7]
0xa7c5:	lea	rdx, [rip + 0x172f4]
0xa7cc:	cmovne	rax, rdx
0xa7d0:	add	rsp, 8
0xa7d4:	pop	rbx
0xa7d5:	pop	rbp
0xa7d6:	ret	


0xa74e:	cmp	byte ptr [rax + 5], 0x33
0xa752:	jne	0xa710


0xa754:	cmp	byte ptr [rax + 6], 0x30
0xa758:	jne	0xa710


0xa75a:	cmp	byte ptr [rax + 7], 0
0xa75e:	jne	0xa710


0xa760:	cmp	byte ptr [rbp], 0x60
0xa764:	lea	rax, [rip + 0x17359]
0xa76b:	lea	rdx, [rip + 0x17356]
0xa772:	cmovne	rax, rdx
0xa776:	add	rsp, 8
0xa77a:	pop	rbx
0xa77b:	pop	rbp
0xa77c:	ret	


0x1f68a:	test	eax, eax
0x1f68c:	js	0x1f6e0


0x1f6e0:	add	rsp, 8
0x1f6e4:	xor	ebp, ebp
0x1f6e6:	pop	rbx
0x1f6e7:	mov	rax, rbp
0x1f6ea:	pop	rbp
0x1f6eb:	pop	r12
0x1f6ed:	pop	r13
0x1f6ef:	ret	


0x1f68e:	mov	edi, eax
0x1f690:	mov	ebx, eax
0x1f692:	call	0x28f0


0x28f0:	jmp	qword ptr [rip + 0x225642]




0xee6a:	test	rax, rax
0xee6d:	mov	qword ptr [rbp + 0x18], rax
0xee71:	je	0xf190


0xf190:	cmp	dword ptr [rsp + 0x58], 3
0xf195:	jne	0xef7c


0xee77:	cmp	word ptr [rbp + 0x70], 0xb
0xee7c:	je	0xf210


0xf210:	xor	edx, edx
0xf212:	mov	rsi, rbp
0xf215:	mov	rdi, r15
0xf218:	call	0xde40


0xee82:	mov	edi, dword ptr [r15 + 0x48]
0xee86:	test	edi, 0x100
0xee8c:	jne	0xefb0


0xee92:	cmp	qword ptr [r15 + 0x40], 1
0xee97:	sbb	rax, rax
0xee9a:	and	eax, 0x186a1
0xee9f:	sub	rax, 1
0xeea3:	cmp	dword ptr [rsp + 0x58], 2
0xeea8:	mov	qword ptr [rsp + 0x38], rax
0xeead:	je	0xf200


0xefb0:	lea	rbx, [r15 + 0x58]
0xefb4:	mov	rdx, rbp
0xefb7:	mov	rsi, rbx
0xefba:	call	0xe900


0xf200:	mov	byte ptr [rsp + 0x5f], 0
0xf205:	mov	edi, dword ptr [r15 + 0x48]
0xf209:	jmp	0xea2b


0xeeb3:	mov	edx, dword ptr [r15 + 0x48]
0xeeb7:	mov	eax, dword ptr [rsp + 0x64]
0xeebb:	and	edx, 0x38
0xeebe:	cmp	edx, 0x18
0xeec1:	je	0xf264


0xf264:	cmp	qword ptr [rbp + 0x88], 2
0xf26c:	jne	0xeec7


0xeec7:	cmp	dword ptr [rsp + 0x58], 3
0xeecc:	mov	r12d, 1
0xeed2:	sete	bl
0xeed5:	test	byte ptr [r15 + 0x49], 2
0xeeda:	jne	0xf2bc


0xf272:	mov	esi, eax
0xf274:	mov	rdi, rbp
0xf277:	call	0xe370


0xeee0:	test	eax, eax
0xeee2:	jns	0xf248


0xf2bc:	mov	edi, eax
0xf2be:	mov	edx, 3
0xf2c3:	mov	esi, 0x406
0xf2c8:	xor	eax, eax
0xf2ca:	call	0x1f730


0xeee8:	test	bl, bl
0xeeea:	je	0xeefb


0xf248:	xor	ecx, ecx
0xf24a:	mov	edx, eax
0xf24c:	mov	rsi, rbp
0xf24f:	mov	rdi, r15
0xf252:	call	0xe5d0


0xeefb:	or	word ptr [rbp + 0x72], 1
0xef00:	mov	rdi, qword ptr [rbp + 0x18]
0xef04:	call	0x2650


0xeeec:	test	r12b, r12b
0xeeef:	je	0xeefb


0xeef1:	call	0x2410


0xeef6:	mov	eax, dword ptr [rax]
0xeef8:	mov	dword ptr [rbp + 0x40], eax
0xeefb:	or	word ptr [rbp + 0x72], 1
0xef00:	mov	rdi, qword ptr [rbp + 0x18]
0xef04:	call	0x2650


0xef09:	mov	edi, dword ptr [r15 + 0x48]
0xef0d:	mov	qword ptr [rbp + 0x18], 0
0xef15:	test	edi, 0x200
0xef1b:	je	0xef30


0xef30:	mov	qword ptr [rbp + 0x18], 0
0xef38:	mov	byte ptr [rsp + 0x5f], 0
0xef3d:	jmp	0xea2b


0xef1d:	mov	eax, dword ptr [rsp + 0x64]
0xef21:	test	eax, eax
0xef23:	js	0xef30


0xef25:	mov	edi, eax
0xef27:	call	0x2640


0xef2c:	mov	edi, dword ptr [r15 + 0x48]
0xef30:	mov	qword ptr [rbp + 0x18], 0
0xef38:	mov	byte ptr [rsp + 0x5f], 0
0xef3d:	jmp	0xea2b


0xf257:	test	eax, eax
0xf259:	jne	0xeee8


0xf25f:	jmp	0xea22


0xea22:	mov	edi, dword ptr [r15 + 0x48]
0xea26:	mov	byte ptr [rsp + 0x5f], 1
0xea2b:	mov	rcx, qword ptr [rbp + 0x48]
0xea2f:	mov	rdx, qword ptr [rbp + 0x38]
0xea33:	mov	qword ptr [rsp + 0x40], 0
0xea3c:	cmp	byte ptr [rdx + rcx - 1], 0x2f
0xea41:	lea	rax, [rcx - 1]
0xea45:	cmovne	rax, rcx
0xea49:	and	edi, 4
0xea4c:	mov	qword ptr [rsp + 0x48], rax
0xea51:	je	0xea63


0xf2cf:	mov	dword ptr [rsp + 0x64], eax
0xf2d3:	jmp	0xeee0


0xf27c:	test	eax, eax
0xf27e:	jne	0xf2fe


0xf280:	mov	eax, dword ptr [rsp + 0x64]
0xf284:	jmp	0xeec7


0xf2fe:	cmp	dword ptr [rsp + 0x58], 3
0xf303:	jne	0xf200


0xf309:	mov	eax, dword ptr [rsp + 0x64]
0xf30d:	xor	r12d, r12d
0xf310:	mov	ebx, 1
0xf315:	jmp	0xeed5


0xeed5:	test	byte ptr [r15 + 0x49], 2
0xeeda:	jne	0xf2bc


0xefbf:	xor	edx, edx
0xefc1:	mov	rsi, rbp
0xefc4:	mov	rdi, r15
0xefc7:	call	0xde40


0xefcc:	mov	edi, dword ptr [r15 + 0x48]
0xefd0:	mov	rdx, rbp
0xefd3:	mov	rsi, rbx
0xefd6:	call	0xe850


0xefdb:	test	al, al
0xefdd:	jne	0xee92


0xefe3:	call	0x2410


0xefe8:	mov	qword ptr [rsp + 0x10], 0
0xeff1:	mov	dword ptr [rax], 0xc
0xeff7:	jmp	0xef85


0xf21d:	mov	word ptr [rbp + 0x70], ax
0xf221:	jmp	0xee92


0x1f697:	test	rax, rax
0x1f69a:	mov	rbp, rax
0x1f69d:	je	0x1f6b8


0x1f6b8:	call	0x2410


0x1f69f:	mov	dword ptr [r12], ebx
0x1f6a3:	add	rsp, 8
0x1f6a7:	mov	rax, rbp
0x1f6aa:	pop	rbx
0x1f6ab:	pop	rbp
0x1f6ac:	pop	r12
0x1f6ae:	pop	r13
0x1f6b0:	ret	


0x1f6bd:	mov	r13d, dword ptr [rax]
0x1f6c0:	mov	r12, rax
0x1f6c3:	mov	edi, ebx
0x1f6c5:	call	0x2640


0x1f6ca:	mov	rax, rbp
0x1f6cd:	mov	dword ptr [r12], r13d
0x1f6d1:	add	rsp, 8
0x1f6d5:	pop	rbx
0x1f6d6:	pop	rbp
0x1f6d7:	pop	r12
0x1f6d9:	pop	r13
0x1f6db:	ret	


0x1d99d:	cmp	eax, -1
0x1d9a0:	je	0x1d9b5


0x1d9b5:	test	r14d, 0xffffff80
0x1d9bc:	jne	0x1d9ca


0x1d9a2:	mov	rsi, qword ptr [rbx + 0x78]
0x1d9a6:	mov	rdi, r13
0x1d9a9:	mov	ecx, r15d
0x1d9ac:	shl	rdi, cl
0x1d9af:	add	rsi, r12
0x1d9b2:	or	qword ptr [rsi], rdi
0x1d9b5:	test	r14d, 0xffffff80
0x1d9bc:	jne	0x1d9ca


0x1d9be:	cmp	eax, r14d
0x1d9c1:	je	0x1d9ca


0x1d9ca:	add	r15, 1
0x1d9ce:	cmp	r15, 0x40
0x1d9d2:	jne	0x1d990


0x1d9c3:	or	byte ptr [rbx + 0xb0], 8
0x1d9ca:	add	r15, 1
0x1d9ce:	cmp	r15, 0x40
0x1d9d2:	jne	0x1d990


0x1d9d4:	add	ebp, 0x40
0x1d9d7:	add	r12, 8
0x1d9db:	cmp	ebp, 0x100
0x1d9e1:	jne	0x1d986


0x1d990:	lea	r14d, [rbp + r15]
0x1d995:	mov	edi, r14d
0x1d998:	call	0x2880


0x1d9e3:	jmp	0x1d40e


0x1d986:	xor	r15d, r15d
0x1d989:	nop	dword ptr [rax]
0x1d990:	lea	r14d, [rbp + r15]
0x1d995:	mov	edi, r14d
0x1d998:	call	0x2880


0x2ad3:	lea	rdi, [rip + 0x1d031]
0x2ada:	call	0x24c0


0x24c0:	jmp	qword ptr [rip + 0x22585a]




0x1f210:	cmp	rax, -1
0x1f214:	mov	qword ptr [rsp + 8], rax
0x1f219:	je	0x1f270


0x1f270:	lea	rsi, [rsp + 0x10]
0x1f275:	lea	rdi, [rsp + 8]
0x1f27a:	call	0x2430


0x1f21b:	mov	rsi, rbx
0x1f21e:	mov	rdi, rbp
0x1f221:	call	0x1eef0


0x1f226:	test	al, al
0x1f228:	jne	0x1f233


0x1f22a:	mov	qword ptr [rsp + 8], -1
0x1f233:	cmp	r12, 1
0x1f237:	je	0x1f249


0x1f233:	cmp	r12, 1
0x1f237:	je	0x1f249


0x1f249:	mov	rax, qword ptr [rsp + 8]
0x1f24e:	mov	rcx, qword ptr [rsp + 0x48]
0x1f253:	xor	rcx, qword ptr fs:[0x28]
0x1f25c:	jne	0x1f30c


0x1f239:	mov	rdi, r12
0x1f23c:	call	0x1ee00


0x1f241:	test	al, al
0x1f243:	je	0x1f300


0x1f27f:	test	rax, rax
0x1f282:	je	0x1f233


0x1f284:	mov	eax, dword ptr [rbx]
0x1f286:	mov	edx, dword ptr [rbx + 4]
0x1f289:	xor	eax, dword ptr [rsp + 0x10]
0x1f28d:	xor	edx, dword ptr [rsp + 0x14]
0x1f291:	mov	ecx, dword ptr [rsp + 0x30]
0x1f295:	or	eax, edx
0x1f297:	mov	edx, dword ptr [rbx + 8]
0x1f29a:	xor	edx, dword ptr [rsp + 0x18]
0x1f29e:	or	eax, edx
0x1f2a0:	mov	edx, dword ptr [rbx + 0xc]
0x1f2a3:	xor	edx, dword ptr [rsp + 0x1c]
0x1f2a7:	or	eax, edx
0x1f2a9:	mov	edx, dword ptr [rbx + 0x10]
0x1f2ac:	xor	edx, dword ptr [rsp + 0x20]
0x1f2b0:	or	eax, edx
0x1f2b2:	mov	edx, dword ptr [rbx + 0x14]
0x1f2b5:	xor	edx, dword ptr [rsp + 0x24]
0x1f2b9:	or	eax, edx
0x1f2bb:	mov	edx, dword ptr [rbx + 0x20]
0x1f2be:	test	edx, edx
0x1f2c0:	sete	dil
0x1f2c4:	test	ecx, ecx
0x1f2c6:	sete	sil
0x1f2ca:	cmp	dil, sil
0x1f2cd:	je	0x1f2db


0x1f2db:	test	eax, eax
0x1f2dd:	je	0x1f21b


0x1f2cf:	test	edx, edx
0x1f2d1:	js	0x1f2db


0x1f2e3:	jmp	0x1f233


0x1f2d3:	test	ecx, ecx
0x1f2d5:	jns	0x1f233


0x1f150:	test	rax, rax
0x1f153:	je	0x1f180


0x1f180:	cmp	r12, 1
0x1f184:	je	0x1f18e


0x1f155:	mov	rsi, r13
0x1f158:	mov	rdi, rbx
0x1f15b:	call	0x1eef0


0x1f186:	mov	rdi, r12
0x1f189:	call	0x1ee00


0x1f160:	test	al, al
0x1f162:	je	0x1f180


0x1f164:	cmp	r12, 1
0x1f168:	jne	0x1f1b5


0x1f16a:	add	rsp, 8
0x1f16e:	mov	rax, r13
0x1f171:	pop	rbx
0x1f172:	pop	rbp
0x1f173:	pop	r12
0x1f175:	pop	r13
0x1f177:	ret	


0x1f1b5:	mov	rdi, r12
0x1f1b8:	call	0x1ee00


0x1f1bd:	test	al, al
0x1f1bf:	jne	0x1f16a


0x1f1c1:	jmp	0x1f18e


0x1f10d:	jmp	0x1f0ad


0x1ee55:	mov	r13d, 1
0x1ee5b:	jmp	0x1ee33


0x1ee33:	mov	rdi, rbp
0x1ee36:	call	0x1edd0


0xbbfd:	mov	dword ptr [rbp], r12d
0xbc01:	pop	rbx
0xbc02:	pop	rbp
0xbc03:	pop	r12
0xbc05:	ret	


0xd913:	mov	rcx, qword ptr [r15]
0xd916:	mov	rbx, rax
0xd919:	cmp	rcx, rbp
0xd91c:	je	0xd948


0xd948:	test	r13, r13
0xd94b:	mov	qword ptr [rsp + 8], rcx
0xd950:	jne	0xd990


0xd91e:	mov	eax, dword ptr [r12]
0xd922:	test	eax, eax
0xd924:	je	0xd988


0xd990:	movzx	r12d, byte ptr [rbp]
0xd995:	test	r12b, r12b
0xd998:	je	0xd958


0xd988:	xor	ebp, ebp
0xd98a:	jmp	0xd930


0xd926:	cmp	eax, 0x22
0xd929:	mov	ebp, 1
0xd92e:	jne	0xd958


0xd99a:	movsx	esi, r12b
0xd99e:	mov	rdi, r13
0xd9a1:	xor	ebp, ebp
0xd9a3:	call	0x25a0


0xd930:	test	r13, r13
0xd933:	je	0xd93e


0x25a0:	jmp	qword ptr [rip + 0x2257ea]


0xd93e:	mov	qword ptr [r14], rbx
0xd941:	jmp	0xd95d


0xd935:	movzx	r12d, byte ptr [rcx]
0xd939:	test	r12b, r12b
0xd93c:	jne	0xd9b7




0xd95d:	mov	rdi, qword ptr [rsp + 0x18]
0xd962:	xor	rdi, qword ptr fs:[0x28]
0xd96b:	mov	eax, ebp
0xd96d:	jne	0xdc00


0xd9b7:	movsx	esi, r12b
0xd9bb:	mov	rdi, r13
0xd9be:	mov	qword ptr [rsp + 8], rcx
0xd9c3:	call	0x25a0


0xd441:	mov	rcx, qword ptr [r15]
0xd444:	mov	rbx, rax
0xd447:	cmp	rcx, rbp
0xd44a:	je	0xd478


0xd478:	test	r13, r13
0xd47b:	mov	qword ptr [rsp + 8], rcx
0xd480:	jne	0xd4c0


0xd44c:	mov	eax, dword ptr [r12]
0xd450:	test	eax, eax
0xd452:	je	0xd4b8


0xd4c0:	movzx	r12d, byte ptr [rbp]
0xd4c5:	test	r12b, r12b
0xd4c8:	je	0xd488


0xd4b8:	xor	ebp, ebp
0xd4ba:	jmp	0xd45e


0xd454:	cmp	eax, 0x22
0xd457:	mov	ebp, 1
0xd45c:	jne	0xd488


0xd4ca:	movsx	esi, r12b
0xd4ce:	mov	rdi, r13
0xd4d1:	xor	ebp, ebp
0xd4d3:	call	0x25a0


0xd45e:	test	r13, r13
0xd461:	je	0xd46c


0xd46c:	mov	qword ptr [r14], rbx
0xd46f:	jmp	0xd48d


0xd463:	movzx	r12d, byte ptr [rcx]
0xd467:	test	r12b, r12b
0xd46a:	jne	0xd4e7


0xd48d:	mov	rdi, qword ptr [rsp + 0x18]
0xd492:	xor	rdi, qword ptr fs:[0x28]
0xd49b:	mov	eax, ebp
0xd49d:	jne	0xd730


0xd4e7:	movsx	esi, r12b
0xd4eb:	mov	rdi, r13
0xd4ee:	mov	qword ptr [rsp + 8], rcx
0xd4f3:	call	0x25a0


0xcd4e:	mov	rcx, qword ptr [rbx]
0xcd51:	mov	rbp, rax
0xcd54:	cmp	rcx, r12
0xcd57:	je	0xcdb8


0xcdb8:	test	r15, r15
0xcdbb:	je	0xd250


0xcd59:	mov	eax, dword ptr [r13]
0xcd5d:	test	eax, eax
0xcd5f:	jne	0xcda0


0xd250:	mov	r12d, 4
0xd256:	jmp	0xcd79


0xcdc1:	movzx	r13d, byte ptr [rcx]
0xcdc5:	mov	qword ptr [rsp + 8], rcx
0xcdca:	mov	r12d, 4
0xcdd0:	test	r13b, r13b
0xcdd3:	je	0xcd79


0xcd61:	xor	r12d, r12d
0xcd64:	test	r15, r15
0xcd67:	je	0xcd76


0xcda0:	cmp	eax, 0x22
0xcda3:	mov	r12d, 4
0xcda9:	jne	0xcd79


0xcd79:	mov	rdi, qword ptr [rsp + 0x18]
0xcd7e:	xor	rdi, qword ptr fs:[0x28]
0xcd87:	mov	eax, r12d
0xcd8a:	jne	0xd39e


0xcdd5:	movsx	esi, r13b
0xcdd9:	mov	rdi, r15
0xcddc:	call	0x25a0


0xcd76:	mov	qword ptr [r14], rbp
0xcd79:	mov	rdi, qword ptr [rsp + 0x18]
0xcd7e:	xor	rdi, qword ptr fs:[0x28]
0xcd87:	mov	eax, r12d
0xcd8a:	jne	0xd39e


0xcd69:	movzx	r13d, byte ptr [rcx]
0xcd6d:	test	r13b, r13b
0xcd70:	jne	0xcdf3


0xcdab:	mov	r12d, 1
0xcdb1:	jmp	0xcd64


0xcd90:	add	rsp, 0x28
0xcd94:	pop	rbx
0xcd95:	pop	rbp
0xcd96:	pop	r12
0xcd98:	pop	r13
0xcd9a:	pop	r14
0xcd9c:	pop	r15
0xcd9e:	ret	


0xd39e:	call	0x2560


0xcdf3:	movsx	esi, r13b
0xcdf7:	mov	rdi, r15
0xcdfa:	mov	qword ptr [rsp + 8], rcx
0xcdff:	call	0x25a0


0xcd64:	test	r15, r15
0xcd67:	je	0xcd76


0xdfa1:	test	eax, eax
0xdfa3:	je	0xdfc0


0xdfc0:	mov	dword ptr [r12], 0
0xdfc8:	mov	eax, 0xd
0xdfcd:	jmp	0xdeb8


0xdfa5:	mov	eax, dword ptr [r12]
0xdfa9:	jmp	0xde84


0xebb7:	test	rax, rax
0xebba:	mov	rbp, rax
0xebbd:	je	0xf140


0xf140:	mov	eax, dword ptr [r12]
0xf144:	mov	rbp, qword ptr [rsp + 0x20]
0xf149:	test	eax, eax
0xf14b:	je	0xf16e


0xebc3:	test	byte ptr [r15 + 0x48], 0x20
0xebc8:	jne	0xebd4


0xf16e:	mov	rdi, qword ptr [rbp + 0x18]
0xf172:	test	rdi, rdi
0xf175:	je	0xf06b


0xf14d:	test	rbx, rbx
0xf150:	mov	dword ptr [rbp + 0x40], eax
0xf153:	jne	0xf289


0xebca:	cmp	byte ptr [rax + 0x13], 0x2e
0xebce:	je	0xedb0


0xebd4:	lea	r13, [rbp + 0x13]
0xebd8:	mov	rdi, r13
0xebdb:	call	0x2530


0xf06b:	cmp	byte ptr [rsp + 0x5d], 0
0xf070:	jne	0xecd8


0xf17b:	call	0x2650


0xf159:	cmp	qword ptr [rsp + 0x50], 0
0xf15f:	mov	eax, 4
0xf164:	jne	0xf289


0xf289:	mov	eax, 7
0xf28e:	jmp	0xf16a


0xedb0:	cmp	byte ptr [rax + 0x14], 0
0xedb4:	je	0xedc1


0xf16a:	mov	word ptr [rbp + 0x70], ax
0xf16e:	mov	rdi, qword ptr [rbp + 0x18]
0xf172:	test	rdi, rdi
0xf175:	je	0xf06b


0xedc1:	mov	r13, qword ptr [rsp + 8]
0xedc6:	jmp	0xeb8a


0xedb6:	cmp	word ptr [rax + 0x14], 0x2e
0xedbb:	jne	0xebd4


0xeb8a:	mov	qword ptr [rsp + 8], r13
0xeb8f:	mov	rax, qword ptr [rsp + 0x20]
0xeb94:	mov	r13, qword ptr [rax + 0x18]
0xeb98:	test	r13, r13
0xeb9b:	je	0xf068


0xf180:	mov	qword ptr [rbp + 0x18], 0
0xf188:	jmp	0xf06b


0xebe0:	mov	rsi, r13
0xebe3:	mov	rdx, rax
0xebe6:	mov	rdi, r15
0xebe9:	mov	r14, rax
0xebec:	call	0xe120


0xebf1:	test	rax, rax
0xebf4:	mov	r13, rax
0xebf7:	je	0xf010


0xf010:	mov	rdi, r13
0xf013:	mov	rbp, qword ptr [rsp + 0x20]
0xf018:	mov	ebx, dword ptr [r12]
0xf01c:	call	0x2a10


0xebfd:	cmp	qword ptr [rsp + 0x28], r14
0xec02:	ja	0xeab8


0xec08:	mov	rax, qword ptr [r15 + 0x20]
0xec0c:	lea	rsi, [r15 + 0x30]
0xec10:	lea	rdi, [r15 + 0x20]
0xec14:	mov	qword ptr [rsp + 0x28], rax
0xec19:	mov	rax, qword ptr [rsp + 0x48]
0xec1e:	lea	rdx, [rax + r14 + 2]
0xec23:	call	0xe4b0


0xeab8:	mov	r9, r14
0xeabb:	add	r9, qword ptr [rsp + 0x18]
0xeac0:	jb	0xf320


0xf320:	mov	rdi, r13
0xf323:	mov	rbp, qword ptr [rsp + 0x20]
0xf328:	call	0x2a10


0xeac6:	mov	rax, qword ptr [rsp + 0x30]
0xeacb:	lea	rsi, [r13 + 0x108]
0xead2:	mov	qword ptr [r13 + 0x58], rax
0xead6:	mov	rax, qword ptr [r15]
0xead9:	mov	qword ptr [r13 + 0x48], r9
0xeadd:	mov	qword ptr [r13 + 8], rax
0xeae1:	mov	rax, qword ptr [rbp]
0xeae5:	mov	qword ptr [r13 + 0x80], rax
0xeaec:	mov	eax, dword ptr [r15 + 0x48]
0xeaf0:	test	al, 4
0xeaf2:	jne	0xed60


0xeaf8:	mov	qword ptr [r13 + 0x30], rsi
0xeafc:	cmp	qword ptr [r15 + 0x40], 0
0xeb01:	je	0xeb0c


0xed60:	mov	rax, qword ptr [r13 + 0x38]
0xed64:	mov	rdi, qword ptr [rsp + 0x40]
0xed69:	mov	qword ptr [r13 + 0x30], rax
0xed6d:	mov	rax, qword ptr [r13 + 0x60]
0xed71:	lea	rdx, [rax + 1]
0xed75:	call	0x2890


0xeb0c:	movzx	edx, byte ptr [rbp + 0x12]
0xeb10:	and	eax, 0x18
0xeb13:	mov	esi, edx
0xeb15:	sub	edx, 1
0xeb18:	cmp	eax, 0x18
0xeb1b:	je	0xedd0


0xeb03:	test	ah, 4
0xeb06:	je	0xee08


0xedd0:	and	esi, 0xfb
0xedd6:	je	0xeb21


0xeb21:	mov	ecx, 0xb
0xeb26:	cmp	edx, 0xb
0xeb29:	mov	word ptr [r13 + 0x70], cx
0xeb2e:	ja	0xed98


0xee08:	xor	edx, edx
0xee0a:	mov	rsi, r13
0xee0d:	mov	rdi, r15
0xee10:	call	0xde40


0xeddc:	mov	eax, 0xb
0xede1:	cmp	edx, 0xb
0xede4:	mov	word ptr [r13 + 0x70], ax
0xede9:	jbe	0xf376


0xeb34:	lea	rax, [rip + 0x13b65]
0xeb3b:	mov	eax, dword ptr [rax + rdx*4]
0xeb3e:	mov	dword ptr [r13 + 0x90], eax
0xeb45:	mov	eax, 2
0xeb4a:	mov	qword ptr [r13 + 0xa8], rax
0xeb51:	cmp	qword ptr [rsp + 0x10], 0
0xeb57:	mov	qword ptr [r13 + 0x10], 0
0xeb5f:	je	0xed88


0xed98:	mov	dword ptr [r13 + 0x90], 0
0xeda3:	mov	eax, 2
0xeda8:	jmp	0xeb4a


0xf376:	lea	rax, [rip + 0x13323]
0xf37d:	mov	eax, dword ptr [rax + rdx*4]
0xf380:	mov	dword ptr [r13 + 0x90], eax
0xf387:	mov	eax, 1
0xf38c:	jmp	0xeb4a


0xedef:	mov	dword ptr [r13 + 0x90], 0
0xedfa:	mov	eax, 1
0xedff:	jmp	0xeb4a


0xed88:	mov	qword ptr [rsp + 0x10], r13
0xed8d:	jmp	0xeb6e


0xeb65:	mov	rax, qword ptr [rsp + 8]
0xeb6a:	mov	qword ptr [rax + 0x10], r13
0xeb6e:	cmp	rbx, 0x2710
0xeb75:	je	0xec70


0xeb4a:	mov	qword ptr [r13 + 0xa8], rax
0xeb51:	cmp	qword ptr [rsp + 0x10], 0
0xeb57:	mov	qword ptr [r13 + 0x10], 0
0xeb5f:	je	0xed88


0xeb6e:	cmp	rbx, 0x2710
0xeb75:	je	0xec70


0xec70:	cmp	qword ptr [r15 + 0x40], 0
0xec75:	jne	0xeb7b


0xeb7b:	add	rbx, 1
0xeb7f:	cmp	rbx, qword ptr [rsp + 0x38]
0xeb84:	jae	0xecc8


0xec7b:	mov	esi, dword ptr [rsp + 0x64]
0xec7f:	mov	rdi, qword ptr [rsp + 0x20]
0xec84:	call	0xe240


0xecc8:	cmp	byte ptr [rsp + 0x5d], 0
0xeccd:	mov	rbp, qword ptr [rsp + 0x20]
0xecd2:	je	0xf076


0xec89:	cmp	rax, 0x1021994
0xec8f:	je	0xf000


0xf000:	mov	byte ptr [rsp + 0x5e], 0
0xf005:	jmp	0xeb7b


0xec95:	mov	ecx, 0xff534d42
0xec9a:	cmp	rax, rcx
0xec9d:	je	0xf000


0xeca3:	cmp	rax, 0x6969
0xeca9:	je	0xf000


0xecaf:	add	rbx, 1
0xecb3:	cmp	rbx, qword ptr [rsp + 0x38]
0xecb8:	mov	byte ptr [rsp + 0x5e], 1
0xecbd:	jb	0xeb8a


0xee15:	mov	word ptr [r13 + 0x70], ax
0xee1a:	jmp	0xeb51


0xeb51:	cmp	qword ptr [rsp + 0x10], 0
0xeb57:	mov	qword ptr [r13 + 0x10], 0
0xeb5f:	je	0xed88


0xed7a:	mov	eax, dword ptr [r15 + 0x48]
0xed7e:	jmp	0xeafc


0xeafc:	cmp	qword ptr [r15 + 0x40], 0
0xeb01:	je	0xeb0c


0xec28:	test	al, al
0xec2a:	je	0xf010


0xec30:	mov	rdx, qword ptr [r15 + 0x20]
0xec34:	cmp	rdx, qword ptr [rsp + 0x28]
0xec39:	je	0xee20


0xee20:	movzx	eax, byte ptr [rsp + 0x5d]
0xee25:	jmp	0xec54


0xec3f:	add	rdx, qword ptr [rsp + 0x18]
0xec44:	test	byte ptr [r15 + 0x48], 4
0xec49:	cmove	rdx, qword ptr [rsp + 0x40]
0xec4f:	mov	qword ptr [rsp + 0x40], rdx
0xec54:	mov	rcx, qword ptr [r15 + 0x30]
0xec58:	sub	rcx, qword ptr [rsp + 0x18]
0xec5d:	mov	byte ptr [rsp + 0x5d], al
0xec61:	mov	qword ptr [rsp + 0x28], rcx
0xec66:	jmp	0xeab8


0xec54:	mov	rcx, qword ptr [r15 + 0x30]
0xec58:	sub	rcx, qword ptr [rsp + 0x18]
0xec5d:	mov	byte ptr [rsp + 0x5d], al
0xec61:	mov	qword ptr [rsp + 0x28], rcx
0xec66:	jmp	0xeab8


0xf32d:	mov	rdi, qword ptr [rsp + 0x10]
0xf332:	call	0xe1b0


0xf337:	mov	rdi, qword ptr [rbp + 0x18]
0xf33b:	call	0x2650


0xf340:	mov	r8d, 7
0xf346:	mov	qword ptr [rbp + 0x18], 0
0xf34e:	mov	qword ptr [rsp + 0x10], 0
0xf357:	mov	word ptr [rbp + 0x70], r8w
0xf35c:	or	dword ptr [r15 + 0x48], 0x2000
0xf364:	mov	dword ptr [r12], 0x24
0xf36c:	jmp	0xef85


0xf021:	mov	rdi, qword ptr [rsp + 0x10]
0xf026:	call	0xe1b0


0xf02b:	mov	rdi, qword ptr [rbp + 0x18]
0xf02f:	call	0x2650


0xf034:	mov	r9d, 7
0xf03a:	mov	qword ptr [rbp + 0x18], 0
0xf042:	mov	qword ptr [rsp + 0x10], 0
0xf04b:	mov	word ptr [rbp + 0x70], r9w
0xf050:	or	dword ptr [r15 + 0x48], 0x2000
0xf058:	mov	dword ptr [r12], ebx
0xf05c:	jmp	0xef85


0x7c00:	mov	r12, rax
0x7c03:	test	bl, bl
0x7c05:	mov	r15d, dword ptr [r14]
0x7c08:	jne	0x7cb0


0x7c0e:	test	bpl, bpl
0x7c11:	jne	0x7c80


0x7cb0:	mov	edi, 2
0x7cb5:	call	0x2640


0x7c13:	test	r13b, r13b
0x7c16:	jne	0x7c8f


0x7c80:	mov	edi, 1
0x7c85:	call	0x2640


0x7c18:	test	r12, r12
0x7c1b:	jne	0x7c20


0x7c8f:	xor	edi, edi
0x7c91:	call	0x2640


0x7c1d:	mov	dword ptr [r14], r15d
0x7c20:	add	rsp, 0x18
0x7c24:	mov	rax, r12
0x7c27:	pop	rbx
0x7c28:	pop	rbp
0x7c29:	pop	r12
0x7c2b:	pop	r13
0x7c2d:	pop	r14
0x7c2f:	pop	r15
0x7c31:	ret	


0x7c20:	add	rsp, 0x18
0x7c24:	mov	rax, r12
0x7c27:	pop	rbx
0x7c28:	pop	rbp
0x7c29:	pop	r12
0x7c2b:	pop	r13
0x7c2d:	pop	r14
0x7c2f:	pop	r15
0x7c31:	ret	


0x7c96:	jmp	0x7c18


0x7c8a:	test	r13b, r13b
0x7c8d:	je	0x7c18


0x7cba:	jmp	0x7c0e


0x7b94:	cmp	eax, 2
0x7b97:	setne	bl
0x7b9a:	mov	esi, 1
0x7b9f:	mov	edi, 1
0x7ba4:	call	0x2590


0x7ba9:	cmp	eax, 1
0x7bac:	setne	bpl
0x7bb0:	xor	esi, esi
0x7bb2:	xor	edi, edi
0x7bb4:	call	0x2590


0x7bb9:	test	eax, eax
0x7bbb:	je	0x7c48


0x7c48:	xor	r13d, r13d
0x7c4b:	test	bpl, bpl
0x7c4e:	je	0x7bd8


0x7bc1:	xor	edi, edi
0x7bc3:	call	0x7af0


0x7bd8:	test	bl, bl
0x7bda:	je	0x7bf0


0x7c50:	mov	edi, 1
0x7c55:	call	0x7af0


0x7bdc:	mov	edi, 2
0x7be1:	call	0x7af0


0x7be6:	test	al, al
0x7be8:	mov	ebx, eax
0x7bea:	je	0x7ca0


0x7ca0:	mov	r15d, dword ptr [r14]
0x7ca3:	xor	r12d, r12d
0x7ca6:	nop	word ptr cs:[rax + rax]
0x7cb0:	mov	edi, 2
0x7cb5:	call	0x2640


0x7c5a:	test	al, al
0x7c5c:	mov	ebp, eax
0x7c5e:	jne	0x7bd8


0x7c64:	xor	r12d, r12d
0x7c67:	test	bl, bl
0x7c69:	mov	r15d, dword ptr [r14]
0x7c6c:	je	0x7c80


0x7c6e:	mov	edi, 2
0x7c73:	call	0x2640


0x7bc8:	test	al, al
0x7bca:	mov	r13d, eax
0x7bcd:	je	0x7ce0


0x7ce0:	mov	r13d, 1
0x7ce6:	xor	r12d, r12d
0x7ce9:	jmp	0x7c03


0x7bd3:	test	bpl, bpl
0x7bd6:	jne	0x7c50


0x7c03:	test	bl, bl
0x7c05:	mov	r15d, dword ptr [r14]
0x7c08:	jne	0x7cb0


0xe30d:	test	eax, eax
0xe30f:	jne	0xe2d2


0xe311:	test	r12, r12
0xe314:	mov	rbx, qword ptr [rsp + 0x10]
0xe319:	je	0xe2d4


0xe2d4:	mov	rdx, qword ptr [rsp + 0x88]
0xe2dc:	xor	rdx, qword ptr fs:[0x28]
0xe2e5:	mov	rax, rbx
0xe2e8:	jne	0xe362


0xe31b:	mov	edi, 0x10
0xe320:	call	0x2780


0xe325:	test	rax, rax
0xe328:	mov	r13, rax
0xe32b:	je	0xe2d4


0xe32d:	mov	rax, qword ptr [rbp + 0x78]
0xe331:	mov	qword ptr [r13 + 8], rbx
0xe335:	mov	rsi, r13
0xe338:	mov	rdi, r12
0xe33b:	mov	qword ptr [r13], rax
0xe33f:	call	0x8d60


0x16906:	mov	rdi, qword ptr [rsp + 8]
0x1690b:	mov	eax, dword ptr [rsp]
0x1690e:	mov	dword ptr [rdi], eax
0x16910:	jmp	0x16872


0x168a8:	jmp	0x16872


0x47b7:	test	eax, eax
0x47b9:	jne	0x4797


0x47bb:	mov	rdi, r14
0x47be:	call	0x2530


0x4797:	add	rbx, 1
0x479b:	add	rbp, r13
0x479e:	mov	r14, qword ptr [r15 + rbx*8]
0x47a2:	test	r14, r14
0x47a5:	je	0x47e8


0x47e8:	cmp	byte ptr [rsp + 0x17], 0
0x47ed:	mov	rax, -2
0x47f4:	cmove	rax, qword ptr [rsp]
0x47f9:	mov	qword ptr [rsp], rax
0x47fd:	mov	rax, qword ptr [rsp]
0x4801:	add	rsp, 0x28
0x4805:	pop	rbx
0x4806:	pop	rbp
0x4807:	pop	r12
0x4809:	pop	r13
0x480b:	pop	r14
0x480d:	pop	r15
0x480f:	ret	


0x47c3:	cmp	rax, r12
0x47c6:	je	0x4820


0x4820:	mov	qword ptr [rsp], rbx
0x4824:	jmp	0x47fd


0x47c8:	cmp	qword ptr [rsp], -1
0x47cd:	jne	0x4760


0x47cf:	mov	qword ptr [rsp], rbx
0x47d3:	add	rbx, 1
0x47d7:	add	rbp, r13
0x47da:	mov	r14, qword ptr [r15 + rbx*8]
0x47de:	test	r14, r14
0x47e1:	jne	0x47a7


0x4760:	mov	rax, qword ptr [rsp + 0x18]
0x4765:	test	rax, rax
0x4768:	je	0x4810


0x4810:	mov	byte ptr [rsp + 0x17], 1
0x4815:	jmp	0x4797


0x476e:	mov	rdi, qword ptr [rsp]
0x4772:	mov	rdx, r13
0x4775:	mov	rsi, rbp
0x4778:	imul	rdi, r13
0x477c:	add	rdi, rax
0x477f:	call	0x2680


0x4784:	test	eax, eax
0x4786:	movzx	eax, byte ptr [rsp + 0x17]
0x478b:	mov	ecx, 1
0x4790:	cmovne	eax, ecx
0x4793:	mov	byte ptr [rsp + 0x17], al
0x4797:	add	rbx, 1
0x479b:	add	rbp, r13
0x479e:	mov	r14, qword ptr [r15 + rbx*8]
0x47a2:	test	r14, r14
0x47a5:	je	0x47e8


0x5030:	test	eax, eax
0x5032:	jne	0x503f


0x5034:	movsx	edx, byte ptr [rbx + r12]
0x5039:	cmp	edx, 0x2f
0x503c:	cmovne	eax, edx
0x503f:	add	rsp, 0x10
0x5043:	pop	rbx
0x5044:	pop	rbp
0x5045:	pop	r12
0x5047:	ret	


0x503f:	add	rsp, 0x10
0x5043:	pop	rbx
0x5044:	pop	rbp
0x5045:	pop	r12
0x5047:	ret	


0x9541:	mov	ecx, r12d
0x9544:	mov	dword ptr [rsp + 0x20], ebx
0x9548:	mov	r12, r14
0x954b:	mov	rbx, r13
0x954e:	mov	r8, qword ptr [rsp + 0x48]
0x9553:	mov	r15, qword ptr [rsp + 0x38]
0x9558:	mov	r13, qword ptr [rsp + 0x40]
0x955d:	mov	r14d, ecx
0x9560:	jmp	0x95a2


0x95a2:	movzx	eax, byte ptr [r15]
0x95a6:	test	al, al
0x95a8:	je	0x95b7


0x95b7:	cmp	rbp, r12
0x95ba:	jbe	0x9568


0x95aa:	cmp	al, 0x7f
0x95ac:	movzx	ebp, al
0x95af:	cmovae	rbp, r12
0x95b3:	add	r15, 1
0x95b7:	cmp	rbp, r12
0x95ba:	jbe	0x9568


0x9568:	mov	rax, qword ptr [rsp + 0x18]
0x956d:	sub	r12, rbp
0x9570:	sub	r8, rbp
0x9573:	mov	rdi, r8
0x9576:	mov	rdx, rbp
0x9579:	lea	rsi, [rax + r12]
0x957d:	call	0x2710


0x95bc:	mov	eax, r14d
0x95bf:	mov	r15, r8
0x95c2:	mov	r14, r12
0x95c5:	mov	rsi, qword ptr [rsp + 0x18]
0x95ca:	sub	r15, r14
0x95cd:	mov	rdx, r14
0x95d0:	mov	rdi, r15
0x95d3:	mov	ebx, dword ptr [rsp + 0x20]
0x95d7:	mov	r12d, eax
0x95da:	call	0x2710


0x95df:	jmp	0x942a


0x9582:	test	r12, r12
0x9585:	mov	r8, rax
0x9588:	je	0x9a98


0x9a98:	mov	ebx, dword ptr [rsp + 0x20]
0x9a9c:	mov	r15, rax
0x9a9f:	mov	r12d, r14d
0x9aa2:	jmp	0x942a


0x958e:	sub	r8, r13
0x9591:	mov	rdx, r13
0x9594:	mov	rsi, rbx
0x9597:	mov	rdi, r8
0x959a:	call	0x2710


0x959f:	mov	r8, rax
0x95a2:	movzx	eax, byte ptr [r15]
0x95a6:	test	al, al
0x95a8:	je	0x95b7


0x9266:	mov	rdi, r14
0x9269:	call	0x2530


0x926e:	pop	rcx
0x926f:	pop	rsi
0x9270:	cmp	rax, qword ptr [rsp + 0x18]
0x9275:	mov	r14, rax
0x9278:	fld	xword ptr [rsp + 0x20]
0x927c:	ja	0x9828


0x9282:	test	r12b, 8
0x9286:	je	0x93f0


0x9828:	fld	dword ptr [rip + 0x181fe]
0x982e:	fmul	st(1), st(0)
0x9830:	fld	xword ptr [rip + 0x181fa]
0x9836:	fucomip	st(2)
0x9838:	jbe	0x97e3


0x93f0:	fstp	st(0)
0x93f2:	jmp	0x9400


0x928c:	mov	rax, qword ptr [rsp]
0x9290:	cmp	byte ptr [rax + r14 - 1], 0x30
0x9296:	jne	0x93f8


0x97e3:	fdivp	st(1)
0x97e5:	sub	rsp, 0x10
0x97e9:	lea	rcx, [rip + 0x181f0]
0x97f0:	mov	r14, qword ptr [rsp + 0x10]
0x97f5:	mov	rdx, -1
0x97fc:	mov	esi, 1
0x9801:	xor	eax, eax
0x9803:	xor	ebp, ebp
0x9805:	mov	rdi, r14
0x9808:	fstp	xword ptr [rsp]
0x980b:	call	0x2a00


0x983a:	fstp	dword ptr [rsp + 0x18]
0x983e:	sub	rsp, 0x10
0x9842:	mov	edi, r15d
0x9845:	fstp	xword ptr [rsp]
0x9848:	call	0x8fd0


0x9400:	mov	r15, qword ptr [rsp + 8]
0x9405:	mov	rsi, qword ptr [rsp]
0x9409:	mov	rdx, r14
0x940c:	sub	r15, r14
0x940f:	sub	r14, rbp
0x9412:	mov	rdi, r15
0x9415:	call	0x2890


0x929c:	fld	dword ptr [rip + 0x1878a]
0x92a2:	cmp	r15d, 1
0x92a6:	fmul	st(1), st(0)
0x92a8:	jne	0x9830


0x93f8:	fstp	st(0)
0x93fa:	nop	word ptr [rax + rax]
0x9400:	mov	r15, qword ptr [rsp + 8]
0x9405:	mov	rsi, qword ptr [rsp]
0x9409:	mov	rdx, r14
0x940c:	sub	r15, r14
0x940f:	sub	r14, rbp
0x9412:	mov	rdi, r15
0x9415:	call	0x2890


0x92ae:	jmp	0x97e3


0x9830:	fld	xword ptr [rip + 0x181fa]
0x9836:	fucomip	st(2)
0x9838:	jbe	0x97e3


0x941a:	mov	r8, r14
0x941d:	add	r8, r15
0x9420:	test	r12b, 4
0x9424:	jne	0x9508


0x984d:	pop	rbp
0x984e:	pop	r14
0x9850:	fld	dword ptr [rsp + 0x18]
0x9854:	jmp	0x97e3


0x9810:	mov	rdi, r14
0x9813:	call	0x2530


0x9818:	pop	r10
0x981a:	mov	r14, rax
0x981d:	pop	r11
0x981f:	jmp	0x9400


0x97bf:	mov	rdi, r14
0x97c2:	call	0x2530


0x97c7:	mov	r14, rax
0x97ca:	pop	rax
0x97cb:	pop	rdx
0x97cc:	cmp	r14, qword ptr [rsp + 0x18]
0x97d1:	fld	xword ptr [rsp + 0x20]
0x97d5:	jbe	0x9282


0x97db:	fld	dword ptr [rip + 0x1824b]
0x97e1:	fmul	st(1), st(0)
0x97e3:	fdivp	st(1)
0x97e5:	sub	rsp, 0x10
0x97e9:	lea	rcx, [rip + 0x181f0]
0x97f0:	mov	r14, qword ptr [rsp + 0x10]
0x97f5:	mov	rdx, -1
0x97fc:	mov	esi, 1
0x9801:	xor	eax, eax
0x9803:	xor	ebp, ebp
0x9805:	mov	rdi, r14
0x9808:	fstp	xword ptr [rsp]
0x980b:	call	0x2a00


0x93d7:	mov	rdi, rbx
0x93da:	mov	ebx, 0xffffffff
0x93df:	call	0x2530


0x93e4:	pop	rsi
0x93e5:	pop	rdi
0x93e6:	mov	r14, rax
0x93e9:	jmp	0x9400


0x13e9c:	jmp	0x13e88


0x124d1:	cmp	qword ptr [rbp], rbx
0x124d5:	jg	0x124c0


0x124c0:	mov	rax, qword ptr [rbp + 0x10]
0x124c4:	mov	rdi, qword ptr [rax + rbx*8]
0x124c8:	add	rbx, 1
0x124cc:	call	0x12330


0x17fea:	jmp	0x17fac


0x17d7c:	xor	eax, eax
0x17d7e:	jmp	0x17f29


0x17d14:	mov	eax, 0xc
0x17d19:	jmp	0x17f29


0x103b3:	cmp	rax, -1
0x103b7:	je	0x105f0


0x105f0:	mov	rdi, qword ptr [rsp + 0x48]
0x105f5:	call	0x2a10


0x103bd:	lea	rcx, [rsp + 0x1c]
0x103c2:	lea	rdx, [rsp + 0x18]
0x103c7:	sub	rsp, 8
0x103cb:	lea	rbx, [rsp + 0x1f]
0x103d0:	lea	rsi, [rip + 0x123a9]
0x103d7:	push	rbx
0x103d8:	lea	rax, [rsp + 0x34]
0x103dd:	push	rax
0x103de:	lea	rax, [rsp + 0x38]
0x103e3:	push	rax
0x103e4:	mov	rdi, qword ptr [rsp + 0x68]
0x103e9:	xor	eax, eax
0x103eb:	lea	r9, [rsp + 0x5c]
0x103f0:	lea	r8, [rsp + 0x58]
0x103f5:	call	0x27f0


0x27f0:	jmp	qword ptr [rip + 0x2256c2]




0x105fa:	test	byte ptr [rbp], 0x20
0x105fe:	jne	0x10b60


0x10604:	mov	rdi, rbp
0x10607:	call	0xdca0


0x10b60:	call	0x2410


0x10b65:	mov	r13d, dword ptr [rax]
0x10b68:	mov	r12, rax
0x10b6b:	mov	rdi, rbp
0x10b6e:	call	0xdca0


0x107d3:	test	rax, rax
0x107d6:	mov	rbx, rax
0x107d9:	je	0x10b7c


0x10b7c:	xor	eax, eax
0x10b7e:	jmp	0x10621


0x107df:	mov	rdi, rbx
0x107e2:	lea	r14, [rsp + 0x40]
0x107e7:	lea	rbp, [rip + 0x11f11]
0x107ee:	call	0x27b0


0x10621:	mov	rbx, qword ptr [rsp + 0x58]
0x10626:	xor	rbx, qword ptr fs:[0x28]
0x1062f:	jne	0x10b83


0x27b0:	jmp	qword ptr [rip + 0x2256e2]


0x10635:	add	rsp, 0x68
0x10639:	pop	rbx
0x1063a:	pop	rbp
0x1063b:	pop	r12
0x1063d:	pop	r13
0x1063f:	pop	r14
0x10641:	pop	r15
0x10643:	ret	


0x10b83:	call	0x2560




0x11845:	mov	edx, dword ptr [rsp + 0x18]
0x11849:	mov	r12d, eax
0x1184c:	cmp	edx, eax
0x1184e:	je	0x118c8


0x118c8:	mov	rsi, qword ptr [r14 + 0x28]
0x118cc:	mov	rdi, qword ptr [r14 + 8]
0x118d0:	mov	rdx, rbp
0x118d3:	add	rsi, r15
0x118d6:	add	rsi, qword ptr [r14]
0x118d9:	add	rdi, r15
0x118dc:	call	0x2710


0x11850:	mov	rdx, qword ptr [rsp + 0x38]
0x11855:	mov	rdi, qword ptr [rsp + 0x28]
0x1185a:	mov	esi, eax
0x1185c:	call	0x2790


0x11861:	cmp	rbp, rax
0x11864:	jne	0x119d8


0x1186a:	mov	rdi, qword ptr [r14 + 8]
0x1186e:	mov	rsi, qword ptr [rsp + 0x28]
0x11873:	mov	rdx, rbp
0x11876:	add	rdi, r15
0x11879:	call	0x2710


0x119d8:	mov	r13, r15
0x119db:	jmp	0x1166e


0x1166e:	mov	rdx, qword ptr [r14 + 0x78]
0x11672:	mov	rax, qword ptr [r14 + 0x20]
0x11676:	test	rdx, rdx
0x11679:	mov	qword ptr [rsp + 0x48], rax
0x1167e:	jne	0x11989


0x1187e:	add	r15, 1
0x11882:	mov	rdx, qword ptr [r14 + 0x10]
0x11886:	lea	rax, [r13*4]
0x1188e:	lea	rcx, [r15 + rbp - 1]
0x11893:	cmp	r15, rcx
0x11896:	mov	dword ptr [rdx + r13*4], r12d
0x1189a:	jge	0x118ba


0x1189c:	lea	rax, [rdx + rax + 4]
0x118a1:	lea	rdx, [rdx + rcx*4]
0x118a5:	nop	dword ptr [rax]
0x118a8:	mov	dword ptr [rax], 0xffffffff
0x118ae:	add	rax, 4
0x118b2:	cmp	rdx, rax
0x118b5:	jne	0x118a8


0x118b7:	mov	r15, rcx
0x118ba:	cmp	rbx, r15
0x118bd:	jg	0x117d0


0x118a8:	mov	dword ptr [rax], 0xffffffff
0x118ae:	add	rax, 4
0x118b2:	cmp	rdx, rax
0x118b5:	jne	0x118a8


0x118e1:	jmp	0x1187e


0x116d1:	mov	edx, dword ptr [rsp + 0x10]
0x116d5:	mov	r12d, eax
0x116d8:	mov	qword ptr [rsp + 8], r15
0x116dd:	cmp	edx, eax
0x116df:	je	0x119e0


0x119e0:	mov	rdi, qword ptr [r14 + 8]
0x119e4:	mov	rsi, qword ptr [rsp + 0x18]
0x119e9:	mov	rdx, rbp
0x119ec:	add	rdi, r15
0x119ef:	call	0x2710


0x116e5:	lea	rcx, [rsp + 0x50]
0x116ea:	lea	rdx, [rsp + 0x48]
0x116ef:	mov	esi, eax
0x116f1:	mov	rdi, rcx
0x116f4:	mov	qword ptr [rsp + 0x10], rcx
0x116f9:	call	0x2790


0x116fe:	cmp	rbp, rax
0x11701:	mov	r11, rax
0x11704:	mov	rcx, qword ptr [rsp + 0x10]
0x11709:	jne	0x11a96


0x1170f:	mov	rdi, qword ptr [r14 + 8]
0x11713:	mov	rdx, rbp
0x11716:	mov	rsi, rcx
0x11719:	add	rdi, r15
0x1171c:	call	0x2710


0x11a96:	cmp	rax, -1
0x11a9a:	je	0x119e0


0x11aa0:	lea	rax, [rax + r15]
0x11aa4:	mov	rsi, rax
0x11aa7:	mov	qword ptr [rsp + 8], rax
0x11aac:	mov	rax, qword ptr [r14 + 0x40]
0x11ab0:	cmp	rsi, rax
0x11ab3:	ja	0x11a88


0x11ab5:	cmp	qword ptr [r14 + 0x18], 0
0x11aba:	je	0x11b78


0x11b78:	lea	rdi, [rax*8]
0x11b80:	mov	qword ptr [rsp + 0x18], rcx
0x11b85:	mov	qword ptr [rsp + 0x10], r11
0x11b8a:	call	0x2780


0x11ac0:	cmp	byte ptr [r14 + 0x8c], 0
0x11ac8:	jne	0x11aea


0x11aca:	test	r15, r15
0x11acd:	je	0x11ae2


0x11aea:	mov	rdi, qword ptr [r14 + 8]
0x11aee:	mov	rsi, rcx
0x11af1:	mov	rdx, r11
0x11af4:	mov	qword ptr [rsp + 0x10], r11
0x11af9:	add	rdi, r15
0x11afc:	call	0x2710


0x11ae2:	mov	byte ptr [r14 + 0x8c], 1
0x11aea:	mov	rdi, qword ptr [r14 + 8]
0x11aee:	mov	rsi, rcx
0x11af1:	mov	rdx, r11
0x11af4:	mov	qword ptr [rsp + 0x10], r11
0x11af9:	add	rdi, r15
0x11afc:	call	0x2710


0x11acf:	mov	rdx, qword ptr [r14 + 0x18]
0x11ad3:	xor	eax, eax
0x11ad5:	mov	qword ptr [rdx + rax*8], rax
0x11ad9:	add	rax, 1
0x11add:	cmp	rax, r15
0x11ae0:	jne	0x11ad5


0x11ad5:	mov	qword ptr [rdx + rax*8], rax
0x11ad9:	add	rax, 1
0x11add:	cmp	rax, r15
0x11ae0:	jne	0x11ad5


0x11b8f:	test	rax, rax
0x11b92:	mov	qword ptr [r14 + 0x18], rax
0x11b96:	mov	r11, qword ptr [rsp + 0x10]
0x11b9b:	mov	rcx, qword ptr [rsp + 0x18]
0x11ba0:	jne	0x11ac0


0x11ba6:	mov	eax, 0xc
0x11bab:	jmp	0x1161f


0x11b01:	mov	rax, qword ptr [r14 + 0x10]
0x11b05:	mov	r11, qword ptr [rsp + 0x10]
0x11b0a:	lea	rcx, [rax + r15*4]
0x11b0e:	mov	rax, qword ptr [r14 + 0x18]
0x11b12:	cmp	r11, 1
0x11b16:	mov	dword ptr [rcx], r12d
0x11b19:	lea	rsi, [rax + r15*8]
0x11b1d:	mov	qword ptr [rsi], r13
0x11b20:	jbe	0x11b4a


0x11b4a:	mov	rbx, qword ptr [r14 + 0x58]
0x11b4e:	sub	r11, rbp
0x11b51:	add	rbx, r11
0x11b54:	cmp	r13, qword ptr [r14 + 0x60]
0x11b58:	mov	qword ptr [r14 + 0x58], rbx
0x11b5c:	jge	0x11b62


0x11b22:	mov	eax, 1
0x11b27:	mov	rdx, qword ptr [rsp + 0x20]
0x11b2c:	cmp	rax, rbp
0x11b2f:	cmovb	rdx, rax
0x11b33:	add	rdx, r13
0x11b36:	mov	qword ptr [rsi + rax*8], rdx
0x11b3a:	mov	dword ptr [rcx + rax*4], 0xffffffff
0x11b41:	add	rax, 1
0x11b45:	cmp	rax, r11
0x11b48:	jne	0x11b27


0x11b5e:	add	qword ptr [r14 + 0x68], r11
0x11b62:	cmp	qword ptr [r14 + 0x40], rbx
0x11b66:	mov	r15, qword ptr [rsp + 8]
0x11b6b:	cmovle	rbx, qword ptr [r14 + 0x40]
0x11b70:	add	r13, rbp
0x11b73:	jmp	0x11610


0x11b62:	cmp	qword ptr [r14 + 0x40], rbx
0x11b66:	mov	r15, qword ptr [rsp + 8]
0x11b6b:	cmovle	rbx, qword ptr [r14 + 0x40]
0x11b70:	add	r13, rbp
0x11b73:	jmp	0x11610


0x11b27:	mov	rdx, qword ptr [rsp + 0x20]
0x11b2c:	cmp	rax, rbp
0x11b2f:	cmovb	rdx, rax
0x11b33:	add	rdx, r13
0x11b36:	mov	qword ptr [rsi + rax*8], rdx
0x11b3a:	mov	dword ptr [rcx + rax*4], 0xffffffff
0x11b41:	add	rax, 1
0x11b45:	cmp	rax, r11
0x11b48:	jne	0x11b27


0x11721:	cmp	byte ptr [r14 + 0x8c], 0
0x11729:	lea	rax, [rbp + r13]
0x1172e:	jne	0x11a65


0x11734:	add	r15, 1
0x11738:	mov	rsi, qword ptr [rsp + 8]
0x1173d:	mov	rdx, qword ptr [r14 + 0x10]
0x11741:	lea	rcx, [r15 + rbp - 1]
0x11746:	mov	r13, rax
0x11749:	cmp	r15, rcx
0x1174c:	lea	rax, [rsi*4]
0x11754:	mov	dword ptr [rdx + rsi*4], r12d
0x11758:	jge	0x11610


0x11a65:	mov	rdx, qword ptr [r14 + 0x18]
0x11a69:	mov	rcx, r15
0x11a6c:	mov	r10, r13
0x11a6f:	sub	rcx, r13
0x11a72:	lea	rdx, [rdx + rcx*8]
0x11a76:	mov	qword ptr [rdx + r10*8], r10
0x11a7a:	add	r10, 1
0x11a7e:	cmp	rax, r10
0x11a81:	jne	0x11a76


0x1175e:	lea	rax, [rdx + rax + 4]
0x11763:	lea	rdx, [rdx + rcx*4]
0x11767:	nop	word ptr [rax + rax]
0x11770:	mov	dword ptr [rax], 0xffffffff
0x11776:	add	rax, 4
0x1177a:	cmp	rdx, rax
0x1177d:	jne	0x11770


0x11a83:	jmp	0x11734


0x11a76:	mov	qword ptr [rdx + r10*8], r10
0x11a7a:	add	r10, 1
0x11a7e:	cmp	rax, r10
0x11a81:	jne	0x11a76


0x1177f:	mov	r15, rcx
0x11782:	jmp	0x11610


0x11770:	mov	dword ptr [rax], 0xffffffff
0x11776:	add	rax, 4
0x1177a:	cmp	rdx, rax
0x1177d:	jne	0x11770


0x119f4:	jmp	0x11721


0xdcfe:	cmp	rax, -1
0xdd02:	jne	0xdcbc


0xdd04:	mov	rdi, rbx
0xdd07:	pop	rbx
0xdd08:	pop	rbp
0xdd09:	pop	r12
0xdd0b:	jmp	0x24f0


0xdda0:	cmp	rax, -1
0xdda4:	je	0xddb2


0xddb2:	pop	rbx
0xddb3:	pop	rbp
0xddb4:	pop	r12
0xddb6:	ret	


0xdda6:	and	dword ptr [rbx], 0xffffffef
0xdda9:	mov	qword ptr [rbx + 0x90], rax
0xddb0:	xor	eax, eax
0xddb2:	pop	rbx
0xddb3:	pop	rbp
0xddb4:	pop	r12
0xddb6:	ret	


0xc98a:	lea	rsi, [rip + 0x1567c]
0xc991:	mov	edx, 5
0xc996:	xor	edi, edi
0xc998:	call	0x2510


0xc99d:	lea	rcx, [rip + 0x14304]
0xc9a4:	lea	rdx, [rip + 0x1315c]
0xc9ab:	mov	rsi, rax
0xc9ae:	mov	edi, 1
0xc9b3:	xor	eax, eax
0xc9b5:	call	0x2850


0xc9ba:	mov	rbx, qword ptr [rip + 0x21b6e7]
0xc9c1:	lea	rsi, [rip + 0x15878]
0xc9c8:	xor	edi, edi
0xc9ca:	mov	edx, 5
0xc9cf:	call	0x2510


0xc9d4:	mov	rsi, rbx
0xc9d7:	mov	rdi, rax
0xc9da:	pop	rbx
0xc9db:	jmp	0x26a0


0x42c0:	mov	rbx, qword ptr [rip + 0x223de1]
0x42c7:	lea	rsi, [rip + 0x1bbda]
0x42ce:	mov	edx, 5
0x42d3:	xor	edi, edi
0x42d5:	call	0x2510


0x42da:	mov	rsi, rbx
0x42dd:	mov	rdi, rax
0x42e0:	call	0x26a0


0xcc60:	call	0x2400


0x42e5:	mov	rbx, qword ptr [rip + 0x223dbc]
0x42ec:	lea	rsi, [rip + 0x1bbfd]
0x42f3:	mov	edx, 5
0x42f8:	xor	edi, edi
0x42fa:	call	0x2510


0x42ff:	mov	rsi, rbx
0x4302:	mov	rdi, rax
0x4305:	call	0x26a0


0x430a:	mov	rbx, qword ptr [rip + 0x223d97]
0x4311:	lea	rsi, [rip + 0x1bc28]
0x4318:	mov	edx, 5
0x431d:	xor	edi, edi
0x431f:	call	0x2510


0x4324:	mov	rsi, rbx
0x4327:	mov	rdi, rax
0x432a:	call	0x26a0


0x432f:	mov	rbx, qword ptr [rip + 0x223d72]
0x4336:	lea	rsi, [rip + 0x1bdc3]
0x433d:	mov	edx, 5
0x4342:	xor	edi, edi
0x4344:	call	0x2510


0x4349:	mov	rsi, rbx
0x434c:	mov	rdi, rax
0x434f:	call	0x26a0


0x4354:	mov	rbx, qword ptr [rip + 0x223d4d]
0x435b:	lea	rsi, [rip + 0x1c056]
0x4362:	mov	edx, 5
0x4367:	xor	edi, edi
0x4369:	call	0x2510


0x436e:	mov	rsi, rbx
0x4371:	mov	rdi, rax
0x4374:	call	0x26a0


0x4379:	mov	rbx, qword ptr [rip + 0x223d28]
0x4380:	lea	rsi, [rip + 0x1c1d9]
0x4387:	mov	edx, 5
0x438c:	xor	edi, edi
0x438e:	call	0x2510


0x4393:	mov	rsi, rbx
0x4396:	mov	rdi, rax
0x4399:	call	0x26a0


0x439e:	mov	rbx, qword ptr [rip + 0x223d03]
0x43a5:	lea	rsi, [rip + 0x1c284]
0x43ac:	mov	edx, 5
0x43b1:	xor	edi, edi
0x43b3:	call	0x2510


0x43b8:	mov	rsi, rbx
0x43bb:	mov	rdi, rax
0x43be:	call	0x26a0


0x43c3:	mov	rbx, qword ptr [rip + 0x223cde]
0x43ca:	lea	rsi, [rip + 0x1c37f]
0x43d1:	mov	edx, 5
0x43d6:	xor	edi, edi
0x43d8:	call	0x2510


0x43dd:	mov	rsi, rbx
0x43e0:	mov	rdi, rax
0x43e3:	call	0x26a0


0x43e8:	mov	rbx, qword ptr [rip + 0x223cb9]
0x43ef:	lea	rsi, [rip + 0x1c5c2]
0x43f6:	mov	edx, 5
0x43fb:	xor	edi, edi
0x43fd:	call	0x2510


0x4402:	mov	rsi, rbx
0x4405:	mov	rdi, rax
0x4408:	call	0x26a0


0x440d:	mov	rbx, qword ptr [rip + 0x223c94]
0x4414:	lea	rsi, [rip + 0x1c66d]
0x441b:	mov	edx, 5
0x4420:	xor	edi, edi
0x4422:	call	0x2510


0x4427:	mov	rsi, rbx
0x442a:	mov	rdi, rax
0x442d:	call	0x26a0


0x4432:	mov	rbx, qword ptr [rip + 0x223c6f]
0x4439:	lea	rsi, [rip + 0x1c678]
0x4440:	mov	edx, 5
0x4445:	xor	edi, edi
0x4447:	call	0x2510


0x444c:	mov	rsi, rbx
0x444f:	mov	rdi, rax
0x4452:	call	0x26a0


0x4457:	lea	rsi, [rip + 0x1c692]
0x445e:	mov	edx, 5
0x4463:	xor	edi, edi
0x4465:	call	0x2510


0x446a:	lea	rdx, [rip + 0x1b61d]
0x4471:	mov	rsi, rax
0x4474:	mov	edi, 1
0x4479:	xor	eax, eax
0x447b:	call	0x2850


0x4480:	mov	rbx, qword ptr [rip + 0x223c21]
0x4487:	lea	rsi, [rip + 0x1c742]
0x448e:	mov	edx, 5
0x4493:	xor	edi, edi
0x4495:	call	0x2510


0x449a:	mov	rsi, rbx
0x449d:	mov	rdi, rax
0x44a0:	lea	rbx, [rip + 0x1b5e4]
0x44a7:	call	0x26a0


0x44ac:	lea	rax, [rip + 0x1b5de]
0x44b3:	lea	rcx, [rip + 0x1b618]
0x44ba:	mov	qword ptr [rsp + 0x60], 0
0x44c3:	mov	qword ptr [rsp + 0x68], 0
0x44cc:	mov	rdx, rsp
0x44cf:	mov	qword ptr [rsp], rax
0x44d3:	lea	rax, [rip + 0x1b5b9]
0x44da:	mov	qword ptr [rsp + 0x30], rcx
0x44df:	lea	rcx, [rip + 0x1b5f6]
0x44e6:	mov	qword ptr [rsp + 8], rax
0x44eb:	lea	rax, [rip + 0x1b619]
0x44f2:	mov	qword ptr [rsp + 0x40], rcx
0x44f7:	lea	rcx, [rip + 0x1b5e8]
0x44fe:	mov	qword ptr [rsp + 0x10], rax
0x4503:	lea	rax, [rip + 0x1b599]
0x450a:	mov	qword ptr [rsp + 0x50], rcx
0x450f:	mov	qword ptr [rsp + 0x18], rax
0x4514:	lea	rax, [rip + 0x1b59e]
0x451b:	mov	qword ptr [rsp + 0x20], rax
0x4520:	lea	rax, [rip + 0x1b59c]
0x4527:	mov	qword ptr [rsp + 0x28], rax
0x452c:	mov	qword ptr [rsp + 0x38], rax
0x4531:	mov	qword ptr [rsp + 0x48], rax
0x4536:	mov	qword ptr [rsp + 0x58], rax
0x453b:	nop	dword ptr [rax + rax]
0x4540:	add	rdx, 0x10
0x4544:	mov	rdi, qword ptr [rdx]
0x4547:	test	rdi, rdi
0x454a:	je	0x455f


0x455f:	mov	r12, qword ptr [rdx + 8]
0x4563:	xor	edi, edi
0x4565:	mov	edx, 5
0x456a:	lea	rsi, [rip + 0x1b57f]
0x4571:	test	r12, r12
0x4574:	je	0x463b


0x454c:	mov	ecx, 3
0x4551:	mov	rsi, rbx
0x4554:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x463b:	call	0x2510


0x457a:	call	0x2510


0x4554:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4556:	seta	al
0x4559:	sbb	al, 0
0x455b:	test	al, al
0x455d:	jne	0x4540


0x4540:	add	rdx, 0x10
0x4544:	mov	rdi, qword ptr [rdx]
0x4547:	test	rdi, rdi
0x454a:	je	0x455f


0x457f:	lea	rcx, [rip + 0x1c722]
0x4586:	lea	rdx, [rip + 0x1b57a]
0x458d:	mov	rsi, rax
0x4590:	mov	edi, 1
0x4595:	xor	eax, eax
0x4597:	call	0x2850


0x459c:	xor	esi, esi
0x459e:	mov	edi, 5
0x45a3:	call	0x2840


0x45a8:	test	rax, rax
0x45ab:	je	0x45c9


0x45c9:	lea	rsi, [rip + 0x1b549]
0x45d0:	xor	edi, edi
0x45d2:	mov	edx, 5
0x45d7:	call	0x2510


0x45ad:	lea	rsi, [rip + 0x1b561]
0x45b4:	mov	edx, 3
0x45b9:	mov	rdi, rax
0x45bc:	call	0x2420


0x45c1:	test	eax, eax
0x45c3:	jne	0x46d0


0x46d0:	mov	r13, qword ptr [rip + 0x2239d1]
0x46d7:	lea	rsi, [rip + 0x1c5f2]
0x46de:	xor	edi, edi
0x46e0:	mov	edx, 5
0x46e5:	call	0x2510


0x46ea:	mov	rsi, r13
0x46ed:	mov	rdi, rax
0x46f0:	call	0x26a0


0x45dc:	lea	rcx, [rip + 0x1b4a8]
0x45e3:	lea	rdx, [rip + 0x1c6be]
0x45ea:	mov	rsi, rax
0x45ed:	mov	edi, 1
0x45f2:	xor	eax, eax
0x45f4:	call	0x2850


0x45f9:	cmp	r12, rbx
0x45fc:	lea	rcx, [rip + 0x1b4aa]
0x4603:	lea	rbx, [rip + 0x1d9d7]
0x460a:	cmove	rbx, rcx
0x460e:	lea	rsi, [rip + 0x1c703]
0x4615:	xor	edi, edi
0x4617:	mov	edx, 5
0x461c:	call	0x2510


0x4621:	mov	rcx, rbx
0x4624:	mov	rsi, rax
0x4627:	mov	rdx, r12
0x462a:	mov	edi, 1
0x462f:	xor	eax, eax
0x4631:	call	0x2850


0x4636:	jmp	0x4296


0x4640:	lea	rcx, [rip + 0x1c661]
0x4647:	lea	rdx, [rip + 0x1b4b9]
0x464e:	mov	rsi, rax
0x4651:	mov	edi, 1
0x4656:	xor	eax, eax
0x4658:	call	0x2850


0x465d:	xor	esi, esi
0x465f:	mov	edi, 5
0x4664:	call	0x2840


0x4669:	test	rax, rax
0x466c:	je	0x4686


0x4686:	lea	rsi, [rip + 0x1b48c]
0x468d:	mov	edx, 5
0x4692:	xor	edi, edi
0x4694:	lea	r12, [rip + 0x1b3f0]
0x469b:	lea	rbx, [rip + 0x1b40b]
0x46a2:	call	0x2510


0x466e:	lea	rsi, [rip + 0x1b4a0]
0x4675:	mov	edx, 3
0x467a:	mov	rdi, rax
0x467d:	call	0x2420


0x4682:	test	eax, eax
0x4684:	jne	0x46c9


0x46c9:	lea	r12, [rip + 0x1b3bb]
0x46d0:	mov	r13, qword ptr [rip + 0x2239d1]
0x46d7:	lea	rsi, [rip + 0x1c5f2]
0x46de:	xor	edi, edi
0x46e0:	mov	edx, 5
0x46e5:	call	0x2510


0x46a7:	lea	rcx, [rip + 0x1b3dd]
0x46ae:	lea	rdx, [rip + 0x1c5f3]
0x46b5:	mov	rsi, rax
0x46b8:	mov	edi, 1
0x46bd:	xor	eax, eax
0x46bf:	call	0x2850


0x46c4:	jmp	0x460e


0x460e:	lea	rsi, [rip + 0x1c703]
0x4615:	xor	edi, edi
0x4617:	mov	edx, 5
0x461c:	call	0x2510


0x46f5:	jmp	0x45c9


0x48ec:	mov	r15, qword ptr [r14]
0x48ef:	test	r15, r15
0x48f2:	je	0x4988


0x4988:	mov	rdi, qword ptr [rip + 0x223751]
0x498f:	mov	rax, qword ptr [rdi + 0x28]
0x4993:	cmp	rax, qword ptr [rdi + 0x30]
0x4997:	jae	0x49b8


0x48f8:	xor	r13d, r13d
0x48fb:	xor	ebx, ebx
0x48fd:	jmp	0x4938


0x4999:	lea	rdx, [rax + 1]
0x499d:	mov	qword ptr [rdi + 0x28], rdx
0x49a1:	mov	byte ptr [rax], 0xa
0x49a4:	add	rsp, 8
0x49a8:	pop	rbx
0x49a9:	pop	rbp
0x49aa:	pop	r12
0x49ac:	pop	r13
0x49ae:	pop	r14
0x49b0:	pop	r15
0x49b2:	ret	


0x49b8:	add	rsp, 8
0x49bc:	mov	esi, 0xa
0x49c1:	pop	rbx
0x49c2:	pop	rbp
0x49c3:	pop	r12
0x49c5:	pop	r13
0x49c7:	pop	r14
0x49c9:	pop	r15
0x49cb:	jmp	0x25c0


0x4938:	test	rbx, rbx
0x493b:	je	0x4900


0x25c0:	jmp	qword ptr [rip + 0x2257da]


0x4900:	mov	rdi, r15
0x4903:	add	rbx, 1
0x4907:	mov	r13, rbp
0x490a:	call	0xc360


0x493d:	mov	rdx, r12
0x4940:	mov	rsi, rbp
0x4943:	mov	rdi, r13
0x4946:	call	0x2680




0x494b:	test	eax, eax
0x494d:	jne	0x4900


0x494f:	mov	rdi, r15
0x4952:	add	rbx, 1
0x4956:	add	rbp, r12
0x4959:	call	0xc360


0x409d:	mov	rax, qword ptr [rsp + 0x298]
0x40a5:	xor	rax, qword ptr fs:[0x28]
0x40ae:	jne	0x40d5


0x40b0:	add	rsp, 0x2a0
0x40b7:	pop	rbx
0x40b8:	ret	


0x40d5:	call	0x2560


0xc44c:	cmp	r12, 9
0xc450:	ja	0xc790


0xc456:	lea	rdx, [rip + 0x15e27]
0xc45d:	movsxd	rax, dword ptr [rdx + r12*4]
0xc461:	add	rax, rdx
0xc464:	jmp	rax


0xc790:	mov	r10, qword ptr [rbx + 0x40]
0xc794:	mov	r9, qword ptr [rbx + 0x38]
0xc798:	mov	edx, 5
0xc79d:	mov	rax, qword ptr [rbx + 0x10]
0xc7a1:	mov	r8, qword ptr [rbx + 8]
0xc7a5:	lea	rsi, [rip + 0x15a54]
0xc7ac:	mov	r13, qword ptr [rbx + 0x30]
0xc7b0:	mov	r12, qword ptr [rbx + 0x28]
0xc7b4:	mov	r15, qword ptr [rbx + 0x20]
0xc7b8:	mov	r14, qword ptr [rbx + 0x18]
0xc7bc:	mov	qword ptr [rsp + 0x18], r10
0xc7c1:	mov	qword ptr [rsp + 0x10], r9
0xc7c6:	mov	qword ptr [rsp], rax
0xc7ca:	mov	qword ptr [rsp + 8], r8
0xc7cf:	mov	rbx, qword ptr [rbx]
0xc7d2:	jmp	0xc562


0xc562:	xor	edi, edi
0xc564:	call	0x2510


0xc569:	mov	r10, qword ptr [rsp + 0x18]
0xc56e:	push	r10
0xc570:	jmp	0xc4b4


0xc4b4:	mov	r9, qword ptr [rsp + 0x18]
0xc4b9:	mov	rdx, rax
0xc4bc:	mov	rcx, rbx
0xc4bf:	mov	esi, 1
0xc4c4:	mov	rdi, rbp
0xc4c7:	xor	eax, eax
0xc4c9:	push	r9
0xc4cb:	push	r13
0xc4cd:	push	r12
0xc4cf:	push	r15
0xc4d1:	push	r14
0xc4d3:	mov	r9, qword ptr [rsp + 0x30]
0xc4d8:	mov	r8, qword ptr [rsp + 0x38]
0xc4dd:	call	0x2970


0xc4e2:	add	rsp, 0x30
0xc4e6:	add	rsp, 0x28
0xc4ea:	pop	rbx
0xc4eb:	pop	rbp
0xc4ec:	pop	r12
0xc4ee:	pop	r13
0xc4f0:	pop	r14
0xc4f2:	pop	r15
0xc4f4:	ret	


0x9ea7:	test	eax, eax
0x9ea9:	sete	al
0x9eac:	movzx	eax, al
0x9eaf:	pop	rbx
0x9eb0:	ret	


0xdd57:	mov	rdi, rbx
0xdd5a:	pop	rbx
0xdd5b:	jmp	0x27a0


0x4b78:	cmp	eax, 1
0x4b7b:	sbb	eax, eax
0x4b7d:	and	eax, 2
0x4b80:	add	eax, 2
0x4b83:	mov	dword ptr [rbp], eax
0x4b86:	xor	eax, eax
0x4b88:	jmp	0x4b38


0x4b38:	add	rsp, 8
0x4b3c:	pop	rbx
0x4b3d:	pop	rbp
0x4b3e:	ret	


0x1015f:	test	eax, eax
0x10161:	mov	ebp, eax
0x10163:	js	0x101b9


0x101b9:	mov	qword ptr [rbx + 8], 0
0x101c1:	xor	eax, eax
0x101c3:	jmp	0x10124


0x10165:	mov	esi, r14d
0x10168:	mov	rdi, rbx
0x1016b:	call	0xe9c0


0x10170:	test	byte ptr [rbx + 0x49], 2
0x10174:	mov	qword ptr [rbx + 8], rax
0x10178:	jne	0x101a8


0x1017a:	mov	edi, ebp
0x1017c:	call	0x2820


0x101a8:	mov	edx, 1
0x101ad:	mov	esi, ebp
0x101af:	mov	rdi, rbx
0x101b2:	call	0xe3e0


0x101b7:	jmp	0x1018c


0x1018c:	mov	rax, qword ptr [rbx + 8]
0x10190:	jmp	0x10124


0x10181:	test	eax, eax
0x10183:	jne	0x101c8


0x10185:	mov	edi, ebp
0x10187:	call	0x2640


0x101c8:	mov	ebx, dword ptr [r13]
0x101cc:	mov	edi, ebp
0x101ce:	call	0x2640


0x101d3:	xor	eax, eax
0x101d5:	mov	dword ptr [r13], ebx
0x101d9:	jmp	0x10124


0xf62c:	test	eax, eax
0xf62e:	mov	dword ptr [rbx + 0x28], eax
0xf631:	jns	0xf640


0xf633:	or	dword ptr [rbx + 0x48], 4
0xf637:	nop	word ptr [rax + rax]
0xf640:	lea	rdi, [rbx + 0x60]
0xf644:	mov	esi, 0xffffffff
0xf649:	call	0x1f510


0xffbd:	test	eax, eax
0xffbf:	mov	dword ptr [rbx + 0x44], eax
0xffc2:	js	0x10040


0x10040:	call	0x2410


0xffc4:	or	word ptr [rbx + 0x72], 2
0xffc9:	jmp	0xff47


0x10045:	mov	eax, dword ptr [rax]
0x10047:	mov	edi, 7
0x1004c:	mov	word ptr [rbx + 0x70], di
0x10050:	mov	dword ptr [rbx + 0x40], eax
0x10053:	jmp	0xff47


0x1000d:	test	eax, eax
0x1000f:	mov	dword ptr [rbp + 0x44], eax
0x10012:	js	0x10022


0x10022:	call	0x2410


0x10014:	or	word ptr [rbp + 0x72], 2
0x10019:	movzx	eax, word ptr [rbp + 0x70]
0x1001d:	jmp	0xfc2e


0x10027:	mov	eax, dword ptr [rax]
0x10029:	mov	r11d, 7
0x1002f:	mov	word ptr [rbp + 0x70], r11w
0x10034:	mov	dword ptr [rbp + 0x40], eax
0x10037:	mov	qword ptr [r12], rbp
0x1003b:	jmp	0xfa7a


0xe662:	test	eax, eax
0xe664:	mov	r15d, eax
0xe667:	js	0xe81b


0xe81b:	mov	ebx, 0xffffffff
0xe820:	jmp	0xe6d5


0xe66d:	mov	ebx, dword ptr [r13 + 0x48]
0xe671:	test	bl, 2
0xe674:	je	0xe71a


0x58fd:	cmp	ebp, 0x10000000
0x5903:	mov	r12, rax
0x5906:	je	0x5950


0x5950:	mov	rdx, rax
0x5953:	mov	rcx, rax
0x5956:	jmp	0x596e


0x5908:	mov	rdi, qword ptr [rbx + 0x10]
0x590c:	mov	rsi, r12
0x590f:	call	0x8d60


0x596e:	movzx	eax, byte ptr [rdx]
0x5971:	lea	rsi, [rdx + 1]
0x5975:	cmp	al, 0x5c
0x5977:	jne	0x5960


0x5979:	cmp	byte ptr [rdx + 1], 0
0x597d:	je	0x5990


0x5960:	add	rcx, 1
0x5964:	test	al, al
0x5966:	mov	byte ptr [rcx - 1], al
0x5969:	je	0x5908


0x5990:	add	rcx, 1
0x5994:	mov	byte ptr [rcx - 1], 0x5c
0x5998:	jmp	0x596b


0x597f:	movzx	eax, byte ptr [rdx + 1]
0x5983:	lea	rsi, [rdx + 2]
0x5987:	jmp	0x5960


0x596b:	mov	rdx, rsi
0x596e:	movzx	eax, byte ptr [rdx]
0x5971:	lea	rsi, [rdx + 1]
0x5975:	cmp	al, 0x5c
0x5977:	jne	0x5960


0x5060:	mov	r12, rax
0x5063:	mov	rdi, rax
0x5066:	jmp	0x5089


0x5089:	mov	esi, 0x2f
0x508e:	call	0x25a0


0x589a:	lea	rdx, [rip - 0x901]
0x58a1:	mov	rbx, rax
0x58a4:	mov	dword ptr [rax + 8], 0
0x58ab:	mov	dword ptr [rax + 0xc], ebp
0x58ae:	lea	rcx, [rip - 0x8f5]
0x58b5:	mov	eax, ebp
0x58b7:	and	eax, 0x10
0x58ba:	lea	rax, [rip - 0x801]
0x58c1:	lea	r8, [rip - 0x938]
0x58c8:	cmovne	rcx, rdx
0x58cc:	lea	rdx, [rip - 0x8f3]
0x58d3:	cmovne	rdx, rax
0x58d7:	xor	esi, esi
0x58d9:	xor	edi, edi
0x58db:	call	0x8560


0x58e0:	mov	qword ptr [rbx + 0x10], rax
0x58e4:	mov	rax, qword ptr [r12]
0x58e8:	mov	qword ptr [r12], rbx
0x58ec:	mov	qword ptr [rbx], rax
0x58ef:	mov	rdi, r13
0x58f2:	and	ebp, 0x10000002
0x58f8:	call	0xcc10


0xc926:	mov	rax, qword ptr [rsp + 0x78]
0xc92b:	xor	rax, qword ptr fs:[0x28]
0xc934:	jne	0xc940


0xc936:	add	rsp, 0xb8
0xc93d:	pop	rbx
0xc93e:	pop	rbp
0xc93f:	ret	


0xc940:	call	0x2560


0xc850:	mov	rax, qword ptr [rsp + 0x58]
0xc855:	xor	rax, qword ptr fs:[0x28]
0xc85e:	jne	0xc865


0xc860:	add	rsp, 0x68
0xc864:	ret	


0xc865:	call	0x2560


0x4114:	cmp	byte ptr [rip + 0x224051], 0
0x411b:	je	0x4186


0x4186:	cmp	byte ptr [rip + 0x223ff5], 1
0x418d:	lea	rsi, [rip + 0x1b8f1]
0x4194:	mov	rdx, rbp
0x4197:	mov	edi, 1
0x419c:	sbb	ecx, ecx
0x419e:	xor	eax, eax
0x41a0:	and	ecx, 0xa
0x41a3:	call	0x2850


0x411d:	mov	rdi, qword ptr [rip + 0x223f84]
0x4124:	mov	rax, qword ptr [rdi + 0x28]
0x4128:	cmp	rax, qword ptr [rdi + 0x30]
0x412c:	jae	0x41d0


0x4132:	lea	rdx, [rax + 1]
0x4136:	mov	qword ptr [rdi + 0x28], rdx
0x413a:	mov	byte ptr [rax], 9
0x413d:	mov	r12, qword ptr [rip + 0x22400c]
0x4144:	mov	rsi, rsp
0x4147:	mov	r13, qword ptr [rip + 0x22400a]
0x414e:	movdqa	xmm0, xmmword ptr [rbx + 0x10]
0x4153:	lea	rbx, [rsp + 0x10]
0x4158:	mov	rdi, r12
0x415b:	mov	rdx, rbx
0x415e:	movaps	xmmword ptr [rsp], xmm0
0x4162:	call	0x1f120


0x41d0:	mov	esi, 9
0x41d5:	call	0x25c0


0x4167:	test	rax, rax
0x416a:	je	0x41e0


0x41e0:	mov	rdi, qword ptr [rsp]
0x41e4:	lea	rsi, [rsp + 0x50]
0x41e9:	call	0x9df0


0x416c:	mov	r8d, dword ptr [rsp + 8]
0x4171:	mov	rdi, qword ptr [rip + 0x223f30]
0x4178:	mov	rcx, r12
0x417b:	mov	rdx, rbx
0x417e:	mov	rsi, r13
0x4181:	call	0x7aa0


0x41ee:	mov	rdi, rax
0x41f1:	mov	rbx, rax
0x41f4:	call	0xc360


0x41a8:	mov	rdi, qword ptr [rip + 0x223ef9]
0x41af:	call	0x2980


0x2980:	jmp	qword ptr [rip + 0x2255fa]




0x41b4:	mov	rax, qword ptr [rsp + 0x68]
0x41b9:	xor	rax, qword ptr fs:[0x28]
0x41c2:	jne	0x4234


0x41c4:	add	rsp, 0x78
0x41c8:	pop	rbx
0x41c9:	pop	rbp
0x41ca:	pop	r12
0x41cc:	pop	r13
0x41ce:	ret	


0x4234:	call	0x2560


0x41da:	jmp	0x413d


0x413d:	mov	r12, qword ptr [rip + 0x22400c]
0x4144:	mov	rsi, rsp
0x4147:	mov	r13, qword ptr [rip + 0x22400a]
0x414e:	movdqa	xmm0, xmmword ptr [rbx + 0x10]
0x4153:	lea	rbx, [rsp + 0x10]
0x4158:	mov	rdi, r12
0x415b:	mov	rdx, rbx
0x415e:	movaps	xmmword ptr [rsp], xmm0
0x4162:	call	0x1f120


0x107f3:	test	rax, rax
0x107f6:	mov	r13, rax
0x107f9:	je	0x10a3e


0x10a3e:	mov	rdi, rbx
0x10a41:	call	0x23f0


0x23f0:	jmp	qword ptr [rip + 0x2258c2]


0x29b0:	jmp	qword ptr [rip + 0x2255e2]






0x103fa:	and	eax, 0xfffffffb
0x103fd:	add	rsp, 0x20
0x10401:	cmp	eax, 3
0x10404:	jne	0x103a0


0x10406:	movsxd	rdi, dword ptr [rsp + 0x24]
0x1040b:	lea	rsi, [rip + 0x122d3]
0x10412:	add	rdi, qword ptr [rsp + 0x48]
0x10417:	call	0x29d0


0x103a0:	mov	rcx, rbp
0x103a3:	mov	edx, 0xa
0x103a8:	mov	rsi, r13
0x103ab:	mov	rdi, r12
0x103ae:	call	0x26c0


0x29d0:	jmp	qword ptr [rip + 0x2255d2]




0x5093:	test	rax, rax
0x5096:	mov	rbx, rax
0x5099:	jne	0x5070


0x509b:	mov	rsi, r12
0x509e:	mov	rdi, rbp
0x50a1:	call	0x9f40


0x5070:	mov	byte ptr [rax], 0
0x5073:	mov	rsi, r12
0x5076:	mov	rdi, rbp
0x5079:	call	0x9f40


0x507e:	test	eax, eax
0x5080:	jle	0x50a6


0x50a6:	mov	rdi, r12
0x50a9:	mov	dword ptr [rsp + 0xc], eax
0x50ad:	call	0x2a10


0x5082:	lea	rdi, [rbx + 1]
0x5086:	mov	byte ptr [rbx], 0x2f
0x5089:	mov	esi, 0x2f
0x508e:	call	0x25a0


0x50b2:	mov	eax, dword ptr [rsp + 0xc]
0x50b6:	add	rsp, 0x10
0x50ba:	pop	rbx
0x50bb:	pop	rbp
0x50bc:	pop	r12
0x50be:	ret	


0xce04:	test	rax, rax
0xce07:	mov	rcx, qword ptr [rsp + 8]
0xce0c:	je	0xce68


0xce68:	mov	qword ptr [r14], rbp
0xce6b:	or	r12d, 2
0xce6f:	jmp	0xcd79


0xce0e:	lea	eax, [r13 - 0x45]
0xce12:	cmp	al, 0x2f
0xce14:	ja	0xce78


0xce16:	movabs	rdx, 0x814400308945
0xce20:	bt	rdx, rax
0xce24:	jae	0xce78


0xce78:	mov	edi, 1
0xce7d:	mov	eax, 0x400
0xce82:	sub	r13d, 0x42
0xce86:	cmp	r13b, 0x35
0xce8a:	ja	0xce68


0xce26:	mov	esi, 0x30
0xce2b:	mov	rdi, r15
0xce2e:	mov	qword ptr [rsp + 8], rcx
0xce33:	call	0x25a0


0xce8c:	lea	rsi, [rip + 0x154f5]
0xce93:	movzx	r13d, r13b
0xce97:	movsxd	rdx, dword ptr [rsi + r13*4]
0xce9b:	add	rdx, rsi
0xce9e:	jmp	rdx


0xce38:	test	rax, rax
0xce3b:	mov	rcx, qword ptr [rsp + 8]
0xce40:	je	0xce78


0xce42:	movzx	eax, byte ptr [rcx + 1]
0xce46:	cmp	al, 0x44
0xce48:	je	0xce56


0xce56:	mov	edi, 2
0xce5b:	mov	eax, 0x3e8
0xce60:	jmp	0xce82


0xce4a:	cmp	al, 0x69
0xce4c:	je	0xd338


0xce82:	sub	r13d, 0x42
0xce86:	cmp	r13b, 0x35
0xce8a:	ja	0xce68


0xd338:	xor	edi, edi
0xd33a:	cmp	byte ptr [rcx + 2], 0x42
0xd33e:	mov	eax, 0x400
0xd343:	sete	dil
0xd347:	lea	edi, [rdi + rdi + 1]
0xd34b:	jmp	0xce82


0xce52:	cmp	al, 0x42
0xce54:	jne	0xce78


0xcde1:	test	rax, rax
0xcde4:	mov	rcx, qword ptr [rsp + 8]
0xcde9:	je	0xcd79


0xcdeb:	mov	ebp, 1
0xcdf0:	xor	r12d, r12d
0xcdf3:	movsx	esi, r13b
0xcdf7:	mov	rdi, r15
0xcdfa:	mov	qword ptr [rsp + 8], rcx
0xcdff:	call	0x25a0


0xd4f8:	test	rax, rax
0xd4fb:	mov	rcx, qword ptr [rsp + 8]
0xd500:	je	0xd5cc


0xd5cc:	mov	qword ptr [r14], rbx
0xd5cf:	or	ebp, 2
0xd5d2:	jmp	0xd48d


0xd506:	lea	eax, [r12 - 0x45]
0xd50b:	cmp	al, 0x2f
0xd50d:	ja	0xd560


0xd50f:	movabs	rdx, 0x814400308945
0xd519:	bt	rdx, rax
0xd51d:	jae	0xd560


0xd560:	mov	edi, 1
0xd565:	mov	esi, 0x400
0xd56a:	sub	r12d, 0x42
0xd56e:	cmp	r12b, 0x35
0xd572:	ja	0xd5cc


0xd51f:	mov	esi, 0x30
0xd524:	mov	rdi, r13
0xd527:	mov	qword ptr [rsp + 8], rcx
0xd52c:	call	0x25a0


0xd574:	lea	rdx, [rip + 0x14ef5]
0xd57b:	movzx	r12d, r12b
0xd57f:	movsxd	rax, dword ptr [rdx + r12*4]
0xd583:	add	rax, rdx
0xd586:	jmp	rax


0xd531:	test	rax, rax
0xd534:	mov	rcx, qword ptr [rsp + 8]
0xd539:	je	0xd560


0xd53b:	movzx	eax, byte ptr [rcx + 1]
0xd53f:	cmp	al, 0x44
0xd541:	je	0xd54f


0xd54f:	mov	edi, 2
0xd554:	mov	esi, 0x3e8
0xd559:	jmp	0xd56a


0xd543:	cmp	al, 0x69
0xd545:	je	0xd718


0xd56a:	sub	r12d, 0x42
0xd56e:	cmp	r12b, 0x35
0xd572:	ja	0xd5cc


0xd718:	xor	edi, edi
0xd71a:	cmp	byte ptr [rcx + 2], 0x42
0xd71e:	mov	esi, 0x400
0xd723:	sete	dil
0xd727:	lea	edi, [rdi + rdi + 1]
0xd72b:	jmp	0xd56a


0xd54b:	cmp	al, 0x42
0xd54d:	jne	0xd560


0xd4d8:	test	rax, rax
0xd4db:	mov	ebx, 1
0xd4e0:	mov	rcx, qword ptr [rsp + 8]
0xd4e5:	je	0xd488


0xd9c8:	test	rax, rax
0xd9cb:	mov	rcx, qword ptr [rsp + 8]
0xd9d0:	je	0xda9c


0xda9c:	mov	qword ptr [r14], rbx
0xda9f:	or	ebp, 2
0xdaa2:	jmp	0xd95d


0xd9d6:	lea	eax, [r12 - 0x45]
0xd9db:	cmp	al, 0x2f
0xd9dd:	ja	0xda30


0xd9df:	movabs	rdx, 0x814400308945
0xd9e9:	bt	rdx, rax
0xd9ed:	jae	0xda30


0xda30:	mov	edi, 1
0xda35:	mov	esi, 0x400
0xda3a:	sub	r12d, 0x42
0xda3e:	cmp	r12b, 0x35
0xda42:	ja	0xda9c


0xd9ef:	mov	esi, 0x30
0xd9f4:	mov	rdi, r13
0xd9f7:	mov	qword ptr [rsp + 8], rcx
0xd9fc:	call	0x25a0


0xda44:	lea	rdx, [rip + 0x14b6d]
0xda4b:	movzx	r12d, r12b
0xda4f:	movsxd	rax, dword ptr [rdx + r12*4]
0xda53:	add	rax, rdx
0xda56:	jmp	rax


0xda01:	test	rax, rax
0xda04:	mov	rcx, qword ptr [rsp + 8]
0xda09:	je	0xda30


0xda0b:	movzx	eax, byte ptr [rcx + 1]
0xda0f:	cmp	al, 0x44
0xda11:	je	0xda1f


0xda1f:	mov	edi, 2
0xda24:	mov	esi, 0x3e8
0xda29:	jmp	0xda3a


0xda13:	cmp	al, 0x69
0xda15:	je	0xdbe8


0xda3a:	sub	r12d, 0x42
0xda3e:	cmp	r12b, 0x35
0xda42:	ja	0xda9c


0xdbe8:	xor	edi, edi
0xdbea:	cmp	byte ptr [rcx + 2], 0x42
0xdbee:	mov	esi, 0x400
0xdbf3:	sete	dil
0xdbf7:	lea	edi, [rdi + rdi + 1]
0xdbfb:	jmp	0xda3a


0xda1b:	cmp	al, 0x42
0xda1d:	jne	0xda30


0xd9a8:	test	rax, rax
0xd9ab:	mov	ebx, 1
0xd9b0:	mov	rcx, qword ptr [rsp + 8]
0xd9b5:	je	0xd958


0x2adf:	lea	rdi, [rip + 0x210a]
0x2ae6:	call	0x1fa40


0x2aeb:	call	0x5410


0x2af0:	lea	rdi, [rip + 0x1d05e]
0x2af7:	mov	qword ptr [rip + 0x225642], rax
0x2afe:	call	0x23e0


0x2b03:	lea	rdx, [rip + 0x22563e]
0x2b0a:	lea	rsi, [rip + 0x22565f]
0x2b11:	mov	rdi, rax
0x2b14:	call	0x9ab0


0x2b19:	lea	rax, [rsp + 0x60]
0x2b1e:	mov	byte ptr [rsp + 0x1c], 0
0x2b23:	mov	dword ptr [rsp + 0x18], 0x10
0x2b2b:	mov	dword ptr [rsp + 0x10], 8
0x2b33:	mov	byte ptr [rsp + 8], 1
0x2b38:	mov	byte ptr [rsp + 0x20], 0
0x2b3d:	mov	qword ptr [rsp + 0x28], rax
0x2b42:	nop	word ptr [rax + rax]
0x2b48:	lea	rcx, [rip + 0x224b91]
0x2b4f:	lea	rdx, [rip + 0x1d00d]
0x2b56:	mov	r8, r14
0x2b59:	mov	rsi, rbp
0x2b5c:	mov	edi, r12d
0x2b5f:	mov	dword ptr [rsp + 0x5c], 0xffffffff
0x2b67:	call	0x2570


0x2570:	jmp	qword ptr [rip + 0x225802]




0xdcc4:	test	eax, eax
0xdcc6:	je	0xdd04


0xdcc8:	call	0x2410


0xdccd:	mov	r12d, dword ptr [rax]
0xdcd0:	mov	rdi, rbx
0xdcd3:	mov	rbp, rax
0xdcd6:	call	0x24f0


0xdcdb:	test	r12d, r12d
0xdcde:	jne	0xdd10


0xdce0:	pop	rbx
0xdce1:	pop	rbp
0xdce2:	pop	r12
0xdce4:	ret	


0xdd10:	mov	dword ptr [rbp], r12d
0xdd14:	mov	eax, 0xffffffff
0xdd19:	jmp	0xdce0


0x10b73:	mov	dword ptr [r12], r13d
0x10b77:	jmp	0x10a59


0x10a59:	mov	qword ptr [r14], 0
0x10a60:	mov	rdi, qword ptr [rsp + 0x40]
0x10a65:	test	rdi, rdi
0x10a68:	je	0x10a86


0x10a86:	mov	dword ptr [r12], r13d
0x10a8a:	xor	eax, eax
0x10a8c:	jmp	0x10621


0x10a79:	test	rbx, rbx
0x10a7c:	mov	qword ptr [rsp + 0x40], rbx
0x10a81:	mov	rdi, rbx
0x10a84:	jne	0x10a70


0x10a70:	mov	rbx, qword ptr [rdi + 0x30]
0x10a74:	call	0x10300


0x1060c:	cmp	eax, -1
0x1060f:	je	0x10a4e


0x10a4e:	call	0x2410


0x10615:	mov	qword ptr [r14], 0
0x1061c:	mov	rax, qword ptr [rsp + 0x40]
0x10621:	mov	rbx, qword ptr [rsp + 0x58]
0x10626:	xor	rbx, qword ptr fs:[0x28]
0x1062f:	jne	0x10b83


0x10a53:	mov	r13d, dword ptr [rax]
0x10a56:	mov	r12, rax
0x10a59:	mov	qword ptr [r14], 0
0x10a60:	mov	rdi, qword ptr [rsp + 0x40]
0x10a65:	test	rdi, rdi
0x10a68:	je	0x10a86


0x1f33a:	and	ebx, 0x20
0x1f33d:	test	ebx, ebx
0x1f33f:	jne	0x1f358


0x1f341:	test	eax, eax
0x1f343:	je	0x1f34f


0x1f358:	test	eax, eax
0x1f35a:	jne	0x1f378


0x1f34f:	pop	rbx
0x1f350:	pop	rbp
0x1f351:	pop	r12
0x1f353:	ret	


0x1f345:	test	r12, r12
0x1f348:	mov	eax, 0xffffffff
0x1f34d:	je	0x1f388


0x1f35c:	call	0x2410


0x1f378:	pop	rbx
0x1f379:	mov	eax, 0xffffffff
0x1f37e:	pop	rbp
0x1f37f:	pop	r12
0x1f381:	ret	


0x1f388:	call	0x2410


0x1f38d:	cmp	dword ptr [rax], 9
0x1f390:	pop	rbx
0x1f391:	pop	rbp
0x1f392:	pop	r12
0x1f394:	setne	al
0x1f397:	movzx	eax, al
0x1f39a:	neg	eax
0x1f39c:	ret	


0x1f361:	mov	dword ptr [rax], 0
0x1f367:	mov	eax, 0xffffffff
0x1f36c:	pop	rbx
0x1f36d:	pop	rbp
0x1f36e:	pop	r12
0x1f370:	ret	


0x5d6c:	test	eax, eax
0x5d6e:	jne	0x5db0


0x1d5d4:	mov	rax, qword ptr [rsp + 8]
0x1d5d9:	mov	qword ptr [rax], 0
0x1d5e0:	mov	qword ptr [rax + 8], 0
0x1d5e8:	mov	eax, dword ptr [rsp + 0x4c]
0x1d5ec:	mov	rbx, qword ptr [rsp + 0x118]
0x1d5f4:	xor	rbx, qword ptr fs:[0x28]
0x1d5fd:	jne	0x1e340


0x4c02:	test	eax, eax
0x4c04:	je	0x4c1c


0x4c1c:	mov	rdi, qword ptr [rip + 0x2234bd]
0x4c23:	call	0x1f320


0x4c06:	call	0x2410


0x4c0b:	cmp	byte ptr [rip + 0x22358e], 0
0x4c12:	mov	rbx, rax
0x4c15:	je	0x4c33


0x4c33:	lea	rsi, [rip + 0x1c859]
0x4c3a:	xor	edi, edi
0x4c3c:	mov	edx, 5
0x4c41:	call	0x2510


0x4c17:	cmp	dword ptr [rax], 0x20
0x4c1a:	jne	0x4c33


0x4c46:	mov	rdi, qword ptr [rip + 0x22355b]
0x4c4d:	mov	rbp, rax
0x4c50:	test	rdi, rdi
0x4c53:	je	0x4c7d


0x4c7d:	mov	esi, dword ptr [rbx]
0x4c7f:	lea	rdx, [rip + 0x1c80a]
0x4c86:	mov	rcx, rax
0x4c89:	xor	edi, edi
0x4c8b:	xor	eax, eax
0x4c8d:	call	0x28a0


0x4c55:	call	0xc160


0x4c92:	jmp	0x4c72


0x4c72:	mov	edi, dword ptr [rip + 0x2233b0]
0x4c78:	call	0x2440


0x2440:	jmp	qword ptr [rip + 0x22589a]




0x4c28:	test	eax, eax
0x4c2a:	jne	0x4c72


0x4c2c:	add	rsp, 8
0x4c30:	pop	rbx
0x4c31:	pop	rbp
0x4c32:	ret	


0x2b6c:	cmp	eax, -1
0x2b6f:	je	0x2ee6


0x2ee6:	cmp	byte ptr [rsp + 8], 0
0x2eeb:	je	0x3f2c


0x2b75:	add	eax, 0x83
0x2b7a:	cmp	eax, 0x10a
0x2b7f:	ja	0x2edc


0x3f2c:	mov	edi, 1
0x3f31:	call	0x4240


0x2ef1:	cmp	byte ptr [rip + 0x22528e], 0
0x2ef8:	je	0x371e


0x2b85:	movsxd	rax, dword ptr [rbx + rax*4]
0x2b89:	add	rax, rbx
0x2b8c:	jmp	rax


0x2edc:	mov	byte ptr [rsp + 8], 0
0x2ee1:	jmp	0x2b48


0x371e:	cmp	byte ptr [rsp + 0x20], 0
0x3723:	je	0x3e72


0x2efe:	cmp	byte ptr [rsp + 0x1c], 0
0x2f03:	jne	0x3f0b


0x2b48:	lea	rcx, [rip + 0x224b91]
0x2b4f:	lea	rdx, [rip + 0x1d00d]
0x2b56:	mov	r8, r14
0x2b59:	mov	rsi, rbp
0x2b5c:	mov	edi, r12d
0x2b5f:	mov	dword ptr [rsp + 0x5c], 0xffffffff
0x2b67:	call	0x2570


0x3e72:	cmp	byte ptr [rsp + 0x1c], 0
0x3e77:	jne	0x3a09


0x3729:	cmp	byte ptr [rsp + 0x1c], 0
0x372e:	je	0x2f09


0x2f09:	cmp	byte ptr [rip + 0x22525d], 0
0x2f10:	je	0x2f2a


0x3f0b:	lea	rsi, [rip + 0x1ce66]
0x3f12:	mov	edx, 5
0x3f17:	xor	edi, edi
0x3f19:	call	0x2510


0x3e7d:	jmp	0x2f09


0x3a09:	mov	qword ptr [rip + 0x2245fc], 0
0x3a14:	jmp	0x2f09


0x3734:	mov	rbx, qword ptr [rip + 0x2248d5]
0x373b:	test	rbx, rbx
0x373e:	je	0x39d8


0x2f2a:	cmp	byte ptr [rip + 0x22523b], 0
0x2f31:	je	0x2f5d


0x2f12:	cmp	byte ptr [rip + 0x22526c], 0
0x2f19:	jne	0x3a19


0x39d8:	lea	rsi, [rip + 0x1d3c9]
0x39df:	xor	edi, edi
0x39e1:	mov	edx, 5
0x39e6:	call	0x2510


0x3744:	lea	rsi, [rip + 0x1d695]
0x374b:	mov	edx, 5
0x3750:	xor	edi, edi
0x3752:	call	0x2510


0x2f5d:	test	r13, r13
0x2f60:	movsxd	rax, dword ptr [rip + 0x225151]
0x2f67:	je	0x3a97


0x2f33:	cmp	qword ptr [rip + 0x225225], 0
0x2f3b:	je	0x3be8


0x2f1f:	mov	qword ptr [rip + 0x22521e], 1
0x2f2a:	cmp	byte ptr [rip + 0x22523b], 0
0x2f31:	je	0x2f5d


0x3a19:	lea	rsi, [rip + 0x1d3f8]
0x3a20:	xor	edi, edi
0x3a22:	mov	edx, 5
0x3a27:	call	0x2510


0x3a97:	cmp	r12d, eax
0x3a9a:	lea	rdi, [rsp + 0x80]
0x3aa2:	jle	0x3aa9


0x2f6d:	cmp	r12d, eax
0x2f70:	jg	0x3de9


0x3be8:	lea	rdi, [rip + 0x1bff6]
0x3bef:	call	0x23e0


0x2f41:	mov	r15, qword ptr [rip + 0x225218]
0x2f48:	cmp	byte ptr [r15], 0x2b
0x2f4c:	jne	0x3b05


0x3aa9:	call	0x4a90


0x3aa4:	lea	rdi, [rbp + rax*8]
0x3aa9:	call	0x4a90


0x2f76:	lea	rsi, [rip + 0x1f60d]
0x2f7d:	mov	rdi, r13
0x2f80:	call	0x26d0


0x3de9:	mov	rdi, qword ptr [rbp + rax*8]
0x3dee:	call	0xc360


0x2f52:	add	r15, 1
0x2f56:	mov	qword ptr [rip + 0x2251fb], r15
0x2f5d:	test	r13, r13
0x2f60:	movsxd	rax, dword ptr [rip + 0x225151]
0x2f67:	je	0x3a97


0x3b05:	mov	r9, qword ptr [rip + 0x224514]
0x3b0c:	lea	rdx, [rip + 0x223b6d]
0x3b13:	lea	rcx, [rip + 0x1d8f6]
0x3b1a:	lea	rdi, [rip + 0x1c0cf]
0x3b21:	mov	r8d, 4
0x3b27:	mov	rsi, r15
0x3b2a:	call	0x49d0


0x3b2f:	lea	rdx, [rip + 0x1d8da]
0x3b36:	mov	eax, dword ptr [rdx + rax*4]
0x3b39:	cmp	eax, 1
0x3b3c:	je	0x3d38


0x3d38:	lea	rax, [rip + 0x1bed4]
0x3d3f:	mov	qword ptr [rip + 0x224412], rax
0x3d46:	jmp	0x2f5d


0x3b42:	jb	0x3d25


0x3d25:	lea	rax, [rip + 0x1becf]
0x3d2c:	mov	qword ptr [rip + 0x224425], rax
0x3d33:	jmp	0x2f5d


0x3b48:	cmp	eax, 2
0x3b4b:	jne	0x2f5d


0x3b51:	lea	rax, [rip + 0x1c0ca]
0x3b58:	mov	qword ptr [rip + 0x2245f9], rax
0x3b5f:	jmp	0x2f5d


0x2f85:	test	eax, eax
0x2f87:	jne	0x38bd


0x2f8d:	mov	rdi, qword ptr [rip + 0x22511c]
0x2f94:	call	0x4ac0


0x38bd:	mov	rdx, qword ptr [rip + 0x2247ec]
0x38c4:	lea	rsi, [rip + 0x1ef4c]
0x38cb:	mov	rdi, r13
0x38ce:	call	0x7b40


0x38d3:	test	rax, rax
0x38d6:	jne	0x2f8d


0x38dc:	mov	rsi, r13
0x38df:	mov	edi, 4
0x38e4:	call	0xc090


0x2f99:	mov	byte ptr [rip + 0x2251e3], 1
0x2fa0:	mov	r15, rax
0x2fa3:	test	r15, r15
0x2fa6:	je	0x3ddf


0x3ddf:	call	0xcc30


0x2fac:	call	0x4e20


0x2fb1:	test	rax, rax
0x2fb4:	mov	qword ptr [rip + 0x2251dd], rax
0x2fbb:	je	0x3ddf


0x2fc1:	cmp	byte ptr [rip + 0x2251bc], 0
0x2fc8:	jne	0x312f


0x2fce:	cmp	byte ptr [rip + 0x2251ae], 0
0x2fd5:	je	0x312f


0x312f:	or	dword ptr [rsp + 0x10], 0x100
0x3137:	jmp	0x2fdb


0x2fdb:	mov	eax, dword ptr [rsp + 0x10]
0x2fdf:	or	eax, dword ptr [rsp + 0x18]
0x2fe3:	mov	r12, r14
0x2fe6:	mov	dword ptr [rsp + 0x1c], eax
0x2fea:	movzx	eax, byte ptr [rsp + 8]
0x2fef:	mov	byte ptr [rsp + 0x18], al
0x2ff3:	lea	rax, [rsp + 0x90]
0x2ffb:	mov	qword ptr [rsp + 0x48], rax
0x3000:	mov	rsi, r12
0x3003:	mov	rdi, r15
0x3006:	call	0x4b00


0x300b:	test	rax, rax
0x300e:	mov	rbx, rax
0x3011:	je	0x3529


0x3529:	mov	eax, dword ptr [rsp + 0x5c]
0x352d:	cmp	eax, 3
0x3530:	je	0x3ddf


0x3017:	test	r13, r13
0x301a:	je	0x34b0


0x3536:	cmp	eax, 4
0x3539:	je	0x355f


0x34b0:	cmp	byte ptr [rax], 0
0x34b3:	jne	0x3060


0x3020:	lea	rdx, [rip + 0x1f563]
0x3027:	mov	ecx, 2
0x302c:	mov	rsi, r13
0x302f:	mov	rdi, rdx
0x3032:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x355f:	mov	rdx, r13
0x3562:	mov	esi, 3
0x3567:	xor	edi, edi
0x3569:	call	0xc190


0x353b:	cmp	eax, 2
0x353e:	je	0x35a2


0x34b9:	lea	rsi, [rip + 0x1c848]
0x34c0:	mov	edx, 5
0x34c5:	xor	edi, edi
0x34c7:	call	0x2510


0x3060:	lea	rax, [rip + 0x2250a9]
0x3067:	mov	esi, dword ptr [rsp + 0x1c]
0x306b:	xor	edx, edx
0x306d:	mov	rdi, rax
0x3070:	mov	qword ptr [rax], rbx
0x3073:	call	0xcc70


0x3032:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3034:	seta	al
0x3037:	sbb	al, 0
0x3039:	test	al, al
0x303b:	jne	0x3057


0x35a2:	mov	rdi, r15
0x35a5:	call	0x4bb0


0x3540:	lea	rcx, [rip + 0x1deb6]
0x3547:	lea	rsi, [rip + 0x1c718]
0x354e:	lea	rdi, [rip + 0x1d943]
0x3555:	mov	edx, 0x438
0x355a:	call	0x2600


0x303d:	mov	ecx, 2
0x3042:	mov	rsi, rbx
0x3045:	mov	rdi, rdx
0x3048:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3057:	cmp	byte ptr [rbx], 0
0x305a:	je	0x3458


0x3048:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x304a:	seta	al
0x304d:	sbb	al, 0
0x304f:	test	al, al
0x3051:	je	0x3418


0x3458:	mov	rdi, r15
0x345b:	call	0x4b90


0x3418:	mov	rsi, rbx
0x341b:	mov	edi, 4
0x3420:	call	0xc090


0x3460:	lea	rsi, [rip + 0x1c8a1]
0x3467:	mov	edx, 5
0x346c:	xor	edi, edi
0x346e:	mov	rbx, rax
0x3471:	call	0x2510


0x35aa:	mov	rdi, qword ptr [rip + 0x224be7]
0x35b1:	call	0x4e90


0x3078:	mov	qword ptr [rsp + 0x10], rax
0x307d:	movzx	eax, byte ptr [rsp + 8]
0x3082:	mov	qword ptr [rsp + 0x28], r15
0x3087:	mov	qword ptr [rsp + 0x20], r13
0x308c:	mov	qword ptr [rsp + 0x30], r12
0x3091:	mov	r15d, eax
0x3094:	mov	rdi, qword ptr [rsp + 0x10]
0x3099:	call	0xf8e0


0x309e:	test	rax, rax
0x30a1:	mov	r14, rax
0x30a4:	je	0x36c6


0x36c6:	call	0x2410


0x30aa:	movzx	ebp, word ptr [rax + 0x70]
0x30ae:	mov	r13, qword ptr [rax + 0x38]
0x30b2:	cmp	ebp, 4
0x30b5:	je	0x3688


0x3688:	mov	rsi, r13
0x368b:	mov	edi, 4
0x3690:	xor	r12d, r12d
0x3693:	call	0xc090


0x30bb:	cmp	ebp, 6
0x30be:	movzx	r12d, byte ptr [rsp + 8]
0x30c4:	je	0x31b0


0x31b0:	mov	eax, dword ptr [rip + 0x224fb2]
0x31b6:	test	eax, eax
0x31b8:	jne	0x350d


0x30ca:	mov	rdi, qword ptr [rip + 0x22506f]
0x30d1:	mov	rsi, r13
0x30d4:	call	0x55e0


0x31be:	mov	rcx, qword ptr [r14 + 0xd0]
0x31c5:	mov	r9, qword ptr [r14 + 0xd8]
0x31cc:	cmp	byte ptr [rip + 0x224fb2], 0
0x31d3:	je	0x34fd


0x350d:	cmp	eax, 2
0x3510:	je	0x3a84


0x34fd:	mov	rbx, qword ptr [r14 + 0xb8]
0x3504:	shl	rbx, 9
0x3508:	jmp	0x31ee


0x31d9:	cmp	qword ptr [r14 + 0xa8], 0
0x31e1:	mov	ebx, 0
0x31e6:	cmovns	rbx, qword ptr [r14 + 0xa8]
0x31ee:	mov	rdx, qword ptr [rip + 0x224f13]
0x31f5:	mov	r14, qword ptr [r14 + 0x58]
0x31f9:	mov	qword ptr [rsp + 0x60], rbx
0x31fe:	mov	qword ptr [rsp + 0x68], 1
0x3207:	mov	qword ptr [rsp + 0x70], rcx
0x320c:	mov	qword ptr [rsp + 0x78], r9
0x3211:	test	rdx, rdx
0x3214:	je	0x3653


0x3a84:	mov	rcx, qword ptr [r14 + 0xc0]
0x3a8b:	mov	r9, qword ptr [r14 + 0xc8]
0x3a92:	jmp	0x31cc


0x3516:	mov	rcx, qword ptr [r14 + 0xe0]
0x351d:	mov	r9, qword ptr [r14 + 0xe8]
0x3524:	jmp	0x31cc


0x31ee:	mov	rdx, qword ptr [rip + 0x224f13]
0x31f5:	mov	r14, qword ptr [r14 + 0x58]
0x31f9:	mov	qword ptr [rsp + 0x60], rbx
0x31fe:	mov	qword ptr [rsp + 0x68], 1
0x3207:	mov	qword ptr [rsp + 0x70], rcx
0x320c:	mov	qword ptr [rsp + 0x78], r9
0x3211:	test	rdx, rdx
0x3214:	je	0x3653


0x3653:	lea	rdi, [r14 + 0xa]
0x3657:	mov	esi, 0x40
0x365c:	mov	qword ptr [rsp + 0x40], r9
0x3661:	mov	qword ptr [rsp + 0x38], rcx
0x3666:	mov	qword ptr [rip + 0x224a9b], rdi
0x366d:	call	0xcbb0


0x321a:	mov	rax, qword ptr [rip + 0x224f67]
0x3221:	cmp	r14, rax
0x3224:	je	0x3300


0x31cc:	cmp	byte ptr [rip + 0x224fb2], 0
0x31d3:	je	0x34fd


0x3300:	cmp	byte ptr [rip + 0x224e79], 0
0x3307:	mov	qword ptr [rip + 0x224e7a], r14
0x330e:	je	0x331a


0x322a:	jbe	0x37b3


0x331a:	mov	rax, r14
0x331d:	xor	esi, esi
0x331f:	mov	rdx, rbx
0x3322:	shl	rax, 6
0x3326:	add	rax, qword ptr [rip + 0x224dd3]
0x332d:	add	rdx, qword ptr [rax]
0x3330:	setb	sil
0x3334:	test	rsi, rsi
0x3337:	mov	rsi, -1
0x333e:	cmovne	rdx, rsi
0x3342:	add	qword ptr [rax + 8], 1
0x3347:	cmp	rcx, qword ptr [rax + 0x10]
0x334b:	mov	qword ptr [rax], rdx
0x334e:	jg	0x3646


0x3310:	mov	eax, ebp
0x3312:	and	eax, 0xfffffffd
0x3315:	cmp	eax, 4
0x3318:	je	0x3360


0x37b3:	lea	rdx, [rax - 1]
0x37b7:	cmp	r14, rdx
0x37ba:	jne	0x3eec


0x3230:	cmp	r14, rdx
0x3233:	jb	0x329a


0x3354:	jl	0x3360


0x3646:	mov	qword ptr [rax + 0x10], rcx
0x364a:	mov	qword ptr [rax + 0x18], r9
0x364e:	jmp	0x3360


0x3360:	xor	eax, eax
0x3362:	add	rbx, qword ptr [rip + 0x224db7]
0x3369:	setb	al
0x336c:	test	rax, rax
0x336f:	mov	rax, -1
0x3376:	cmovne	rbx, rax
0x337a:	add	qword ptr [rip + 0x224da6], 1
0x3382:	cmp	rcx, qword ptr [rip + 0x224da7]
0x3389:	mov	qword ptr [rip + 0x224d90], rbx
0x3390:	jg	0x3408


0x37c0:	mov	rdx, qword ptr [rip + 0x224939]
0x37c7:	shl	rax, 6
0x37cb:	xor	edi, edi
0x37cd:	mov	rsi, rbx
0x37d0:	add	rax, rdx
0x37d3:	add	rsi, qword ptr [rax]
0x37d6:	setb	dil
0x37da:	test	rdi, rdi
0x37dd:	mov	rdi, -1
0x37e4:	cmovne	rsi, rdi
0x37e8:	mov	rdi, qword ptr [rax + 8]
0x37ec:	mov	qword ptr [rsp + 0x60], rsi
0x37f1:	add	rdi, 1
0x37f5:	mov	qword ptr [rsp + 0x68], rdi
0x37fa:	cmp	rcx, qword ptr [rax + 0x10]
0x37fe:	jl	0x3ae8


0x3eec:	lea	rcx, [rip + 0x1d4fd]
0x3ef3:	lea	rsi, [rip + 0x1bd6c]
0x3efa:	lea	rdi, [rip + 0x1bdc7]
0x3f01:	mov	edx, 0x27d
0x3f06:	call	0x2600


0x329a:	lea	rdx, [rax + 1]
0x329e:	cmp	r14, rdx
0x32a1:	jb	0x3300


0x3235:	mov	edx, 0x80
0x323a:	xor	esi, esi
0x323c:	mov	rdi, qword ptr [rip + 0x224ebd]
0x3243:	mov	rax, rdx
0x3246:	mul	r14
0x3249:	jo	0x3eb9


0x3356:	cmp	dword ptr [rax + 0x18], r9d
0x335a:	js	0x3646


0x3392:	jl	0x33a0


0x3408:	mov	qword ptr [rip + 0x224d21], rcx
0x340f:	mov	qword ptr [rip + 0x224d22], r9
0x3416:	jmp	0x33a0


0x3ae8:	movdqu	xmm0, xmmword ptr [rax + 0x10]
0x3aed:	movaps	xmmword ptr [rsp + 0x70], xmm0
0x3af2:	jmp	0x3810


0x3804:	jg	0x3810


0x32a3:	shl	rax, 6
0x32a7:	add	rax, qword ptr [rip + 0x224e52]
0x32ae:	nop	
0x32b0:	movabs	rsi, 0x8000000000000000
0x32ba:	add	rdx, 1
0x32be:	mov	qword ptr [rax + 0x40], 0
0x32c6:	mov	qword ptr [rax + 0x48], 0
0x32ce:	mov	qword ptr [rax + 0x50], rsi
0x32d2:	add	rax, 0x40
0x32d6:	mov	qword ptr [rax + 0x18], -1
0x32de:	mov	qword ptr [rax + 0x20], 0
0x32e6:	mov	qword ptr [rax + 0x28], 0
0x32ee:	mov	qword ptr [rax + 0x30], rsi
0x32f2:	mov	qword ptr [rax + 0x38], -1
0x32fa:	cmp	r14, rdx
0x32fd:	jae	0x32b0


0x3eb9:	mov	esi, 1
0x3ebe:	jmp	0x324f


0x324f:	test	rax, rax
0x3252:	mov	qword ptr [rsp + 0x40], r9
0x3257:	mov	qword ptr [rsp + 0x38], rcx
0x325c:	js	0x3ddf


0x33a0:	and	ebp, 0xfffffffd
0x33a3:	cmp	ebp, 4
0x33a6:	je	0x34eb


0x3394:	cmp	dword ptr [rip + 0x224d9d], r9d
0x339b:	js	0x3408


0x3810:	cmp	byte ptr [rip + 0x224969], 0
0x3817:	je	0x3b64


0x3806:	cmp	r9d, dword ptr [rax + 0x18]
0x380a:	js	0x3ae8


0x32b0:	movabs	rsi, 0x8000000000000000
0x32ba:	add	rdx, 1
0x32be:	mov	qword ptr [rax + 0x40], 0
0x32c6:	mov	qword ptr [rax + 0x48], 0
0x32ce:	mov	qword ptr [rax + 0x50], rsi
0x32d2:	add	rax, 0x40
0x32d6:	mov	qword ptr [rax + 0x18], -1
0x32de:	mov	qword ptr [rax + 0x20], 0
0x32e6:	mov	qword ptr [rax + 0x28], 0
0x32ee:	mov	qword ptr [rax + 0x30], rsi
0x32f2:	mov	qword ptr [rax + 0x38], -1
0x32fa:	cmp	r14, rdx
0x32fd:	jae	0x32b0


0x3262:	test	rsi, rsi
0x3265:	jne	0x3ddf


0x34eb:	cmp	r14, qword ptr [rip + 0x224b1e]
0x34f2:	jbe	0x33be


0x33ac:	cmp	byte ptr [rip + 0x224dd3], 0
0x33b3:	jne	0x34eb


0x3b64:	xor	r10d, r10d
0x3b67:	add	rsi, qword ptr [rax + 0x20]
0x3b6b:	mov	r11, -1
0x3b72:	setb	r10b
0x3b76:	test	r10, r10
0x3b79:	cmovne	rsi, r11
0x3b7d:	add	rdi, qword ptr [rax + 0x28]
0x3b81:	mov	qword ptr [rsp + 0x60], rsi
0x3b86:	mov	qword ptr [rsp + 0x68], rdi
0x3b8b:	mov	rsi, qword ptr [rax + 0x30]
0x3b8f:	cmp	qword ptr [rsp + 0x70], rsi
0x3b94:	jl	0x3ba9


0x381d:	mov	rsi, r14
0x3820:	xor	edi, edi
0x3822:	shl	rsi, 6
0x3826:	add	rdx, rsi
0x3829:	mov	rsi, qword ptr [rax]
0x382c:	add	rsi, qword ptr [rdx + 0x20]
0x3830:	jb	0x3ec3


0x326b:	mov	rsi, r14
0x326e:	shl	rsi, 7
0x3272:	call	0xca40


0x33be:	mov	rdx, qword ptr [rip + 0x224db3]
0x33c5:	cmp	byte ptr [rip + 0x224da1], 0
0x33cc:	mov	rax, qword ptr [rsp + 0x68]
0x33d1:	cmove	rax, qword ptr [rsp + 0x60]
0x33d7:	test	rdx, rdx
0x33da:	js	0x3710


0x34f8:	jmp	0x33b9


0x33b9:	test	r14, r14
0x33bc:	jne	0x3400


0x3ba9:	movdqu	xmm0, xmmword ptr [rax + 0x30]
0x3bae:	movaps	xmmword ptr [rsp + 0x70], xmm0
0x3bb3:	jmp	0x381d


0x3b96:	jg	0x381d


0x3ec3:	mov	edi, 1
0x3ec8:	jmp	0x3836


0x3836:	test	rdi, rdi
0x3839:	mov	rdi, -1
0x3840:	mov	r10, qword ptr [rdx + 0x30]
0x3844:	cmovne	rsi, rdi
0x3848:	mov	rdi, qword ptr [rax + 8]
0x384c:	add	rdi, qword ptr [rdx + 0x28]
0x3850:	mov	qword ptr [rdx + 0x20], rsi
0x3854:	mov	qword ptr [rdx + 0x28], rdi
0x3858:	cmp	r10, qword ptr [rax + 0x10]
0x385c:	jl	0x3ad5


0x3710:	neg	rdx
0x3713:	cmp	rdx, rax
0x3716:	setae	al
0x3719:	jmp	0x33e6


0x33e0:	cmp	rax, rdx
0x33e3:	setae	al
0x33e6:	test	al, al
0x33e8:	je	0x3400


0x3400:	and	r15d, r12d
0x3403:	jmp	0x3094


0x3b9c:	mov	esi, dword ptr [rax + 0x38]
0x3b9f:	cmp	dword ptr [rsp + 0x78], esi
0x3ba3:	jns	0x381d


0x3ad5:	movdqu	xmm0, xmmword ptr [rax + 0x10]
0x3ada:	movq	r10, xmm0
0x3adf:	movups	xmmword ptr [rdx + 0x30], xmm0
0x3ae3:	jmp	0x3872


0x3862:	jg	0x3872


0x33e6:	test	al, al
0x33e8:	je	0x3400


0x33ea:	lea	rdi, [rsp + 0x60]
0x33ef:	mov	rsi, r13
0x33f2:	call	0x40e0


0x3094:	mov	rdi, qword ptr [rsp + 0x10]
0x3099:	call	0xf8e0


0x3872:	xor	r11d, r11d
0x3875:	add	rsi, qword ptr [rax + 0x20]
0x3879:	setb	r11b
0x387d:	test	r11, r11
0x3880:	mov	r11, -1
0x3887:	cmovne	rsi, r11
0x388b:	add	rdi, qword ptr [rax + 0x28]
0x388f:	mov	qword ptr [rdx + 0x20], rsi
0x3893:	mov	qword ptr [rdx + 0x28], rdi
0x3897:	cmp	r10, qword ptr [rax + 0x30]
0x389b:	jl	0x38af


0x3864:	mov	r11d, dword ptr [rax + 0x18]
0x3868:	cmp	dword ptr [rdx + 0x38], r11d
0x386c:	js	0x3ad5


0x38af:	movdqu	xmm0, xmmword ptr [rax + 0x30]
0x38b4:	movups	xmmword ptr [rdx + 0x30], xmm0
0x38b8:	jmp	0x3300


0x389d:	jg	0x3300


0x38a3:	mov	esi, dword ptr [rax + 0x38]
0x38a6:	cmp	dword ptr [rdx + 0x38], esi
0x38a9:	jns	0x3300


0x3277:	mov	qword ptr [rip + 0x224e82], rax
0x327e:	lea	rax, [r14 + r14]
0x3282:	mov	r9, qword ptr [rsp + 0x40]
0x3287:	mov	rcx, qword ptr [rsp + 0x38]
0x328c:	mov	qword ptr [rip + 0x224e75], rax
0x3293:	mov	rax, qword ptr [rip + 0x224eee]
0x329a:	lea	rdx, [rax + 1]
0x329e:	cmp	r14, rdx
0x32a1:	jb	0x3300


0x3672:	mov	rcx, qword ptr [rsp + 0x38]
0x3677:	mov	qword ptr [rip + 0x224a82], rax
0x367e:	mov	r9, qword ptr [rsp + 0x40]
0x3683:	jmp	0x3300


0x30d9:	test	al, al
0x30db:	jne	0x311b


0x30dd:	cmp	ebp, 0xb
0x30e0:	je	0x3bb8


0x311b:	sub	ebp, 1
0x311e:	je	0x3a3f


0x3bb8:	mov	rbx, qword ptr [rsp + 0x10]
0x3bbd:	mov	edx, 1
0x3bc2:	mov	rsi, r14
0x3bc5:	mov	rdi, rbx
0x3bc8:	call	0x10060


0x30e6:	cmp	ebp, 0xa
0x30e9:	sete	r8b
0x30ed:	cmp	ebp, 0xd
0x30f0:	sete	al
0x30f3:	or	r8b, al
0x30f6:	mov	r12d, r8d
0x30f9:	jne	0x399a


0x3a3f:	mov	rbx, qword ptr [rsp + 0x10]
0x3a44:	mov	edx, 4
0x3a49:	mov	rsi, r14
0x3a4c:	mov	rdi, rbx
0x3a4f:	call	0x10060


0x3124:	movzx	r12d, byte ptr [rsp + 8]
0x312a:	jmp	0x3400


0x30ff:	mov	rax, qword ptr [rsp + 0x10]
0x3104:	test	byte ptr [rax + 0x48], 0x40
0x3108:	je	0x313c


0x399a:	mov	rsi, r13
0x399d:	mov	edi, 4
0x39a2:	xor	r12d, r12d
0x39a5:	call	0xc090


0x313c:	cmp	byte ptr [rip + 0x225041], 0
0x3143:	jne	0x318c


0x310a:	cmp	qword ptr [r14 + 0x58], 0
0x310f:	jle	0x313c


0x3145:	cmp	byte ptr [rip + 0x225037], 0
0x314c:	jne	0x316b


0x318c:	cmp	ebp, 2
0x318f:	je	0x3c8d


0x3111:	mov	rcx, qword ptr [r14 + 0x78]
0x3115:	cmp	qword ptr [rax + 0x18], rcx
0x3119:	je	0x313c


0x314e:	mov	eax, dword ptr [r14 + 0x90]
0x3155:	and	eax, 0xf000
0x315a:	cmp	eax, 0x4000
0x315f:	je	0x318c


0x316b:	mov	rdx, qword ptr [r14 + 0x80]
0x3172:	mov	rsi, qword ptr [r14 + 0x78]
0x3176:	mov	rdi, qword ptr [rip + 0x22501b]
0x317d:	call	0x4ec0


0x3c8d:	mov	rdi, qword ptr [rsp + 0x10]
0x3c92:	mov	rsi, r14
0x3c95:	call	0xccc0


0x3195:	cmp	ebp, 7
0x3198:	je	0x3c62


0x3161:	cmp	qword ptr [r14 + 0x88], 1
0x3169:	jbe	0x318c


0x3c62:	mov	rdx, r13
0x3c65:	xor	edi, edi
0x3c67:	mov	esi, 3
0x3c6c:	call	0xc190


0x319e:	cmp	ebp, 1
0x31a1:	je	0x3124


0x31a3:	movzx	r12d, byte ptr [rsp + 8]
0x31a9:	nop	dword ptr [rax]
0x31b0:	mov	eax, dword ptr [rip + 0x224fb2]
0x31b6:	test	eax, eax
0x31b8:	jne	0x350d


0x3c9a:	test	al, al
0x3c9c:	je	0x3124


0x3ca2:	cmp	qword ptr [rip + 0x2244e6], 0
0x3caa:	mov	rbp, qword ptr [r14]
0x3cad:	jne	0x3cd7


0x3caf:	jmp	0x3d69


0x3cd7:	test	r14, r14
0x3cda:	setne	al
0x3cdd:	cmp	rbp, r14
0x3ce0:	setne	dl
0x3ce3:	and	al, dl
0x3ce5:	jne	0x3cb4


0x3d69:	call	0x4e20


0x3ce7:	mov	rdx, r13
0x3cea:	xor	edi, edi
0x3cec:	mov	esi, 3
0x3cf1:	mov	r12d, eax
0x3cf4:	call	0xc190


0x3cb4:	mov	rdx, qword ptr [r14 + 0x80]
0x3cbb:	mov	rsi, qword ptr [r14 + 0x78]
0x3cbf:	mov	rdi, qword ptr [rip + 0x2244ca]
0x3cc6:	call	0x4f20


0x3ccb:	test	eax, eax
0x3ccd:	jg	0x3124


0x3cd3:	mov	r14, qword ptr [r14 + 8]
0x3cd7:	test	r14, r14
0x3cda:	setne	al
0x3cdd:	cmp	rbp, r14
0x3ce0:	setne	dl
0x3ce3:	and	al, dl
0x3ce5:	jne	0x3cb4


0x3d6e:	test	rax, rax
0x3d71:	mov	qword ptr [rip + 0x224418], rax
0x3d78:	je	0x3ddf


0x3d7a:	xor	edi, edi
0x3d7c:	call	0x10340


0x3d81:	mov	r12, rax
0x3d84:	jmp	0x3d96


0x3d96:	test	r12, r12
0x3d99:	je	0x3cd7


0x3d9f:	test	byte ptr [r12 + 0x28], 3
0x3da5:	jne	0x3d86


0x3da7:	mov	rsi, qword ptr [r12 + 8]
0x3dac:	mov	rdx, qword ptr [rsp + 0x48]
0x3db1:	mov	edi, 1
0x3db6:	call	0x2740


0x3d86:	mov	rbx, qword ptr [r12 + 0x30]
0x3d8b:	mov	rdi, r12
0x3d8e:	call	0x10300


0x3d93:	mov	r12, rbx
0x3d96:	test	r12, r12
0x3d99:	je	0x3cd7


0x3dbb:	test	eax, eax
0x3dbd:	jne	0x3d86


0x3dbf:	mov	rdx, qword ptr [rsp + 0x98]
0x3dc7:	mov	rsi, qword ptr [rsp + 0x90]
0x3dcf:	mov	rdi, qword ptr [rip + 0x2243ba]
0x3dd6:	call	0x4ec0


0x3ddb:	test	eax, eax
0x3ddd:	jns	0x3d86


0x3182:	test	eax, eax
0x3184:	js	0x3ddf


0x318a:	je	0x311b


0x3a54:	mov	rdi, rbx
0x3a57:	call	0xf8e0


0x3a5c:	cmp	r14, rax
0x3a5f:	je	0x3124


0x3a65:	lea	rcx, [rip + 0x1d984]
0x3a6c:	lea	rsi, [rip + 0x1c1f3]
0x3a73:	lea	rdi, [rip + 0x1c234]
0x3a7a:	mov	edx, 0x22f
0x3a7f:	call	0x2600


0x3bcd:	mov	rdi, rbx
0x3bd0:	call	0xf8e0


0x3bd5:	cmp	r14, rax
0x3bd8:	jne	0x3ecd


0x3bde:	movzx	ebp, word ptr [r14 + 0x70]
0x3be3:	jmp	0x30e6


0x3ecd:	lea	rcx, [rip + 0x1d51c]
0x3ed4:	lea	rsi, [rip + 0x1bd8b]
0x3edb:	lea	rdi, [rip + 0x1bdcc]
0x3ee2:	mov	edx, 0x20e
0x3ee7:	call	0x2600


0x36cb:	cmp	dword ptr [rax], 0
0x36ce:	mov	r14d, r15d
0x36d1:	mov	r13, qword ptr [rsp + 0x20]
0x36d6:	mov	r15, qword ptr [rsp + 0x28]
0x36db:	mov	r12, qword ptr [rsp + 0x30]
0x36e0:	mov	rbx, rax
0x36e3:	jne	0x3956


0x36e9:	mov	rdi, qword ptr [rsp + 0x10]
0x36ee:	mov	qword ptr [rip + 0x224a8f], 0
0x36f9:	call	0xf750


0x3956:	mov	rax, qword ptr [rsp + 0x10]
0x395b:	mov	esi, 3
0x3960:	xor	edi, edi
0x3962:	xor	r14d, r14d
0x3965:	mov	rdx, qword ptr [rax + 0x20]
0x3969:	call	0xc190


0x36fe:	test	eax, eax
0x3700:	jne	0x392d


0x3706:	and	byte ptr [rsp + 0x18], r14b
0x370b:	jmp	0x3000


0x392d:	lea	rsi, [rip + 0x1c3ac]
0x3934:	mov	edx, 5
0x3939:	xor	edi, edi
0x393b:	xor	r14d, r14d
0x393e:	call	0x2510


0x3000:	mov	rsi, r12
0x3003:	mov	rdi, r15
0x3006:	call	0x4b00


0x3aae:	mov	r15, rax
0x3ab1:	mov	eax, dword ptr [rip + 0x224601]
0x3ab7:	add	eax, 1
0x3aba:	cmp	eax, r12d
0x3abd:	setl	al
0x3ac0:	cmp	dword ptr [rsp + 0x18], 2
0x3ac5:	sete	dl
0x3ac8:	or	eax, edx
0x3aca:	mov	byte ptr [rip + 0x2246b3], al
0x3ad0:	jmp	0x2fa3


0x2fa3:	test	r15, r15
0x2fa6:	je	0x3ddf


0x3bf4:	test	rax, rax
0x3bf7:	mov	r15, rax
0x3bfa:	mov	qword ptr [rip + 0x22455f], rax
0x3c01:	je	0x3af7


0x3af7:	lea	r15, [rip + 0x1c036]
0x3afe:	mov	qword ptr [rip + 0x22465b], r15
0x3b05:	mov	r9, qword ptr [rip + 0x224514]
0x3b0c:	lea	rdx, [rip + 0x223b6d]
0x3b13:	lea	rcx, [rip + 0x1d8f6]
0x3b1a:	lea	rdi, [rip + 0x1c0cf]
0x3b21:	mov	r8d, 4
0x3b27:	mov	rsi, r15
0x3b2a:	call	0x49d0


0x3c07:	lea	rsi, [rip + 0x1bf40]
0x3c0e:	mov	rdi, rax
0x3c11:	call	0x26d0


0x3c16:	test	eax, eax
0x3c18:	je	0x3af7


0x3c1e:	cmp	byte ptr [r15], 0x2b
0x3c22:	lea	rbx, [rip + 0x1d7d9]
0x3c29:	jne	0x3c3b


0x3c2b:	jmp	0x3d4b


0x3c3b:	mov	r15, qword ptr [rip + 0x22451e]
0x3c42:	mov	edx, 6
0x3c47:	mov	rsi, rbx
0x3c4a:	mov	rdi, r15
0x3c4d:	call	0x2420


0x3d4b:	mov	esi, 0xa
0x3d50:	mov	rdi, r15
0x3d53:	call	0x25a0


0x3d58:	test	rax, rax
0x3d5b:	je	0x2f52


0x3d61:	mov	byte ptr [rax], 0
0x3d64:	jmp	0x2f48


0x2f48:	cmp	byte ptr [r15], 0x2b
0x2f4c:	jne	0x3b05


0x3c52:	test	eax, eax
0x3c54:	je	0x3c30


0x3c30:	add	r15, 6
0x3c34:	mov	qword ptr [rip + 0x224525], r15
0x3c3b:	mov	r15, qword ptr [rip + 0x22451e]
0x3c42:	mov	edx, 6
0x3c47:	mov	rsi, rbx
0x3c4a:	mov	rdi, r15
0x3c4d:	call	0x2420


0x3c56:	jmp	0x2f48


0x3943:	mov	esi, dword ptr [rbx]
0x3945:	mov	rdx, rax
0x3948:	xor	edi, edi
0x394a:	xor	eax, eax
0x394c:	call	0x28a0


0x3951:	jmp	0x3706


0x3476:	mov	rdx, r13
0x3479:	mov	esi, 3
0x347e:	xor	edi, edi
0x3480:	mov	rbp, rax
0x3483:	call	0xc190


0x34cc:	lea	rdx, [rip + 0x1dfbd]
0x34d3:	mov	rcx, rax
0x34d6:	xor	esi, esi
0x34d8:	xor	edi, edi
0x34da:	xor	eax, eax
0x34dc:	call	0x28a0


0x34e1:	mov	byte ptr [rsp + 0x18], 0
0x34e6:	jmp	0x3000


0x3a2c:	xor	esi, esi
0x3a2e:	mov	rdx, rax
0x3a31:	xor	edi, edi
0x3a33:	xor	eax, eax
0x3a35:	call	0x28a0


0x3a3a:	jmp	0x2f1f


0x3757:	xor	edi, edi
0x3759:	mov	rdx, rax
0x375c:	mov	rcx, rbx
0x375f:	xor	esi, esi
0x3761:	xor	eax, eax
0x3763:	call	0x28a0


0x3768:	mov	edi, 1
0x376d:	call	0x4240


0x39eb:	xor	esi, esi
0x39ed:	mov	rdx, rax
0x39f0:	xor	edi, edi
0x39f2:	xor	eax, eax
0x39f4:	call	0x28a0


0x39f9:	mov	rbx, qword ptr [rip + 0x224610]
0x3a00:	test	rbx, rbx
0x3a03:	jne	0x3744


0x3f1e:	xor	esi, esi
0x3f20:	mov	rdx, rax
0x3f23:	xor	edi, edi
0x3f25:	xor	eax, eax
0x3f27:	call	0x28a0


0x1041c:	test	rax, rax
0x1041f:	mov	r15, rax
0x10422:	je	0x103a0


0x10428:	lea	rcx, [rsp + 0x2c]
0x1042d:	lea	rdx, [rsp + 0x28]
0x10432:	sub	rsp, 8
0x10436:	push	rbx
0x10437:	lea	rsi, [rip + 0x122ab]
0x1043e:	mov	rdi, rax
0x10441:	xor	eax, eax
0x10443:	lea	r9, [rsp + 0x44]
0x10448:	lea	r8, [rsp + 0x40]
0x1044d:	call	0x27f0


0x10452:	and	eax, 0xfffffffb
0x10455:	cmp	eax, 1
0x10458:	pop	rdx
0x10459:	pop	rcx
0x1045a:	jne	0x103a0


0x10460:	movsxd	rax, dword ptr [rsp + 0x3c]
0x10465:	mov	rdx, qword ptr [rsp + 0x48]
0x1046a:	mov	byte ptr [rdx + rax], 0
0x1046e:	movsxd	rax, dword ptr [rsp + 0x24]
0x10473:	mov	rdx, qword ptr [rsp + 0x48]
0x10478:	mov	byte ptr [rdx + rax], 0
0x1047c:	movsxd	rax, dword ptr [rsp + 0x2c]
0x10481:	mov	byte ptr [r15 + rax], 0
0x10486:	movsxd	rax, dword ptr [rsp + 0x34]
0x1048b:	mov	byte ptr [r15 + rax], 0
0x10490:	movsxd	rdi, dword ptr [rsp + 0x30]
0x10495:	add	rdi, r15
0x10498:	call	0x10270


0x1049d:	movsxd	rdi, dword ptr [rsp + 0x20]
0x104a2:	add	rdi, qword ptr [rsp + 0x48]
0x104a7:	call	0x10270


0x104ac:	movsxd	rdi, dword ptr [rsp + 0x38]
0x104b1:	add	rdi, qword ptr [rsp + 0x48]
0x104b6:	call	0x10270


0x104bb:	mov	edi, 0x38
0x104c0:	call	0xc9e0


0x104c5:	movsxd	rdi, dword ptr [rsp + 0x30]
0x104ca:	mov	rbx, rax
0x104cd:	add	rdi, r15
0x104d0:	call	0xcc10


0x104d5:	movsxd	rdi, dword ptr [rsp + 0x20]
0x104da:	mov	qword ptr [rbx], rax
0x104dd:	add	rdi, qword ptr [rsp + 0x48]
0x104e2:	call	0xcc10


0x104e7:	movsxd	rdi, dword ptr [rsp + 0x38]
0x104ec:	mov	qword ptr [rbx + 8], rax
0x104f0:	add	rdi, qword ptr [rsp + 0x48]
0x104f5:	call	0xcc10


0x104fa:	movsxd	rdi, dword ptr [rsp + 0x28]
0x104ff:	mov	qword ptr [rbx + 0x10], rax
0x10503:	add	rdi, r15
0x10506:	call	0xcc10


0x1050b:	mov	edx, dword ptr [rsp + 0x18]
0x1050f:	mov	r15, rax
0x10512:	mov	qword ptr [rbx + 0x18], rax
0x10516:	mov	eax, dword ptr [rsp + 0x1c]
0x1051a:	movabs	rsi, 0xfffff00000000000
0x10524:	lea	rdi, [rip + 0x121d4]
0x1052b:	or	byte ptr [rbx + 0x28], 4
0x1052f:	mov	rcx, rdx
0x10532:	shl	rdx, 0x20
0x10536:	shl	rcx, 8
0x1053a:	and	rdx, rsi
0x1053d:	movabs	rsi, 0xffffff00000
0x10547:	and	ecx, 0xfff00
0x1054d:	or	rdx, rcx
0x10550:	movzx	ecx, al
0x10553:	shl	rax, 0xc
0x10557:	or	rdx, rcx
0x1055a:	and	rax, rsi
0x1055d:	mov	ecx, 7
0x10562:	mov	rsi, r15
0x10565:	or	rax, rdx
0x10568:	mov	edx, 1
0x1056d:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1056d:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1056f:	mov	qword ptr [rbx + 0x20], rax
0x10573:	seta	al
0x10576:	sbb	al, 0
0x10578:	test	al, al
0x1057a:	je	0x1059a


0x1059a:	movzx	eax, byte ptr [rbx + 0x28]
0x1059e:	mov	r8, qword ptr [rbx]
0x105a1:	mov	esi, 0x3a
0x105a6:	mov	rdi, r8
0x105a9:	mov	qword ptr [rsp + 8], r8
0x105ae:	and	eax, 0xfffffffe
0x105b1:	or	eax, edx
0x105b3:	mov	byte ptr [rbx + 0x28], al
0x105b6:	call	0x25a0


0x1057c:	lea	rdi, [rip + 0x12183]
0x10583:	mov	ecx, 5
0x10588:	mov	rsi, r15
0x1058b:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1058b:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1058d:	seta	al
0x10590:	sbb	al, 0
0x10592:	test	al, al
0x10594:	jne	0x10648


0x10648:	lea	rdi, [rip + 0x120bc]
0x1064f:	mov	ecx, 6
0x10654:	mov	rsi, r15
0x10657:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10657:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10659:	seta	al
0x1065c:	sbb	al, 0
0x1065e:	test	al, al
0x10660:	je	0x1059a


0x10666:	lea	rdi, [rip + 0x120a4]
0x1066d:	mov	ecx, 8
0x10672:	mov	rsi, r15
0x10675:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10675:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10677:	seta	al
0x1067a:	sbb	al, 0
0x1067c:	test	al, al
0x1067e:	je	0x1059a


0x10684:	lea	rdi, [rip + 0x1208e]
0x1068b:	mov	ecx, 7
0x10690:	mov	rsi, r15
0x10693:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10693:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10695:	seta	al
0x10698:	sbb	al, 0
0x1069a:	test	al, al
0x1069c:	je	0x1059a


0x106a2:	lea	rdi, [rip + 0x12077]
0x106a9:	mov	ecx, 8
0x106ae:	mov	rsi, r15
0x106b1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x106b1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x106b3:	seta	al
0x106b6:	sbb	al, 0
0x106b8:	test	al, al
0x106ba:	je	0x1059a


0x106c0:	lea	rdi, [rip + 0x12061]
0x106c7:	mov	ecx, 7
0x106cc:	mov	rsi, r15
0x106cf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x106cf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x106d1:	seta	al
0x106d4:	sbb	al, 0
0x106d6:	test	al, al
0x106d8:	je	0x1059a


0x106de:	lea	rdi, [rip + 0x1204a]
0x106e5:	mov	ecx, 0xb
0x106ea:	mov	rsi, r15
0x106ed:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x106ed:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x106ef:	seta	al
0x106f2:	sbb	al, 0
0x106f4:	test	al, al
0x106f6:	je	0x1059a


0x106fc:	lea	rdi, [rip + 0x12037]
0x10703:	mov	ecx, 6
0x10708:	mov	rsi, r15
0x1070b:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1070b:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1070d:	seta	al
0x10710:	sbb	al, 0
0x10712:	test	al, al
0x10714:	je	0x1059a


0x1071a:	lea	rdi, [rip + 0x1201f]
0x10721:	mov	ecx, 6
0x10726:	mov	rsi, r15
0x10729:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10729:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1072b:	seta	al
0x1072e:	sbb	al, 0
0x10730:	test	al, al
0x10732:	je	0x1059a


0x10738:	lea	rdi, [rip + 0x12007]
0x1073f:	mov	ecx, 7
0x10744:	mov	rsi, r15
0x10747:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10747:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10749:	seta	al
0x1074c:	sbb	al, 0
0x1074e:	test	al, al
0x10750:	je	0x1059a


0x10756:	lea	rsi, [rip + 0x11ff0]
0x1075d:	mov	rdi, r15
0x10760:	mov	byte ptr [rsp + 8], dl
0x10764:	call	0x26d0


0x10769:	test	eax, eax
0x1076b:	movzx	edx, byte ptr [rsp + 8]
0x10770:	je	0x1059a


0x10776:	lea	rsi, [rip + 0x11fd7]
0x1077d:	mov	rdi, r15
0x10780:	call	0x26d0


0x10785:	test	eax, eax
0x10787:	sete	dl
0x1078a:	jmp	0x1059a


0x105bb:	test	rax, rax
0x105be:	mov	edx, 1
0x105c3:	mov	r8, qword ptr [rsp + 8]
0x105c8:	je	0x10790


0x10790:	cmp	byte ptr [r8], 0x2f
0x10794:	je	0x10ac0


0x105ce:	movzx	eax, byte ptr [rbx + 0x28]
0x105d2:	add	edx, edx
0x105d4:	and	eax, 0xfffffffd
0x105d7:	or	eax, edx
0x105d9:	mov	byte ptr [rbx + 0x28], al
0x105dc:	mov	qword ptr [r14], rbx
0x105df:	lea	r14, [rbx + 0x30]
0x105e3:	jmp	0x103a0


0x10ac0:	cmp	byte ptr [r8 + 1], 0x2f
0x10ac5:	jne	0x1079a


0x1079a:	lea	rsi, [rip + 0x11fc3]
0x107a1:	mov	ecx, 7
0x107a6:	mov	rdi, r8
0x107a9:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10acb:	lea	rdi, [rip + 0x11c87]
0x10ad2:	mov	ecx, 6
0x10ad7:	mov	rsi, r15
0x10ada:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x107a9:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x107ab:	seta	al
0x107ae:	sbb	al, 0
0x107b0:	test	al, al
0x107b2:	sete	dl
0x107b5:	jmp	0x105ce


0x10ada:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10adc:	seta	al
0x10adf:	sbb	al, 0
0x10ae1:	test	al, al
0x10ae3:	je	0x105ce


0x10ae9:	lea	rdi, [rip + 0x11c6f]
0x10af0:	mov	ecx, 5
0x10af5:	mov	rsi, r15
0x10af8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10af8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10afa:	seta	al
0x10afd:	sbb	al, 0
0x10aff:	test	al, al
0x10b01:	je	0x105ce


0x10b07:	jmp	0x1079a


0x1080f:	mov	edi, 0x38
0x10814:	mov	r15, rax
0x10817:	call	0xc9e0


0x1081c:	mov	rdi, qword ptr [r13]
0x10820:	mov	r12, rax
0x10823:	call	0xcc10


0x10828:	mov	rdi, qword ptr [r13 + 8]
0x1082c:	mov	qword ptr [r12], rax
0x10830:	call	0xcc10


0x10835:	mov	rdi, qword ptr [r13 + 0x10]
0x10839:	mov	qword ptr [r12 + 8], rax
0x1083e:	mov	qword ptr [r12 + 0x10], 0
0x10847:	call	0xcc10


0x1084c:	mov	ecx, 7
0x10851:	mov	rsi, rax
0x10854:	mov	rdi, rbp
0x10857:	or	byte ptr [r12 + 0x28], 4
0x1085d:	mov	r13, rax
0x10860:	mov	qword ptr [r12 + 0x18], rax
0x10865:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10865:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10867:	mov	edx, 1
0x1086c:	seta	al
0x1086f:	sbb	al, 0
0x10871:	test	al, al
0x10873:	je	0x109d8


0x109d8:	movzx	eax, byte ptr [r12 + 0x28]
0x109de:	mov	r15, qword ptr [r12]
0x109e2:	mov	esi, 0x3a
0x109e7:	mov	rdi, r15
0x109ea:	and	eax, 0xfffffffe
0x109ed:	or	eax, edx
0x109ef:	mov	byte ptr [r12 + 0x28], al
0x109f4:	call	0x25a0


0x10879:	lea	rdi, [rip + 0x11e86]
0x10880:	mov	ecx, 5
0x10885:	mov	rsi, r13
0x10888:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10888:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1088a:	seta	al
0x1088d:	sbb	al, 0
0x1088f:	test	al, al
0x10891:	je	0x109d8


0x10897:	lea	rdi, [rip + 0x11e6d]
0x1089e:	mov	ecx, 6
0x108a3:	mov	rsi, r13
0x108a6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x108a6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x108a8:	seta	al
0x108ab:	sbb	al, 0
0x108ad:	test	al, al
0x108af:	je	0x109d8


0x108b5:	lea	rdi, [rip + 0x11e55]
0x108bc:	mov	ecx, 8
0x108c1:	mov	rsi, r13
0x108c4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x108c4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x108c6:	seta	al
0x108c9:	sbb	al, 0
0x108cb:	test	al, al
0x108cd:	je	0x109d8


0x108d3:	lea	rdi, [rip + 0x11e3f]
0x108da:	mov	ecx, 7
0x108df:	mov	rsi, r13
0x108e2:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x108e2:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x108e4:	seta	al
0x108e7:	sbb	al, 0
0x108e9:	test	al, al
0x108eb:	je	0x109d8


0x108f1:	lea	rdi, [rip + 0x11e28]
0x108f8:	mov	ecx, 8
0x108fd:	mov	rsi, r13
0x10900:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10900:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10902:	seta	al
0x10905:	sbb	al, 0
0x10907:	test	al, al
0x10909:	je	0x109d8


0x1090f:	lea	rdi, [rip + 0x11e12]
0x10916:	mov	ecx, 7
0x1091b:	mov	rsi, r13
0x1091e:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1091e:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10920:	seta	al
0x10923:	sbb	al, 0
0x10925:	test	al, al
0x10927:	je	0x109d8


0x1092d:	lea	rdi, [rip + 0x11dfb]
0x10934:	mov	ecx, 0xb
0x10939:	mov	rsi, r13
0x1093c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1093c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1093e:	seta	al
0x10941:	sbb	al, 0
0x10943:	test	al, al
0x10945:	je	0x109d8


0x1094b:	lea	rdi, [rip + 0x11de8]
0x10952:	mov	ecx, 6
0x10957:	mov	rsi, r13
0x1095a:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1095a:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1095c:	seta	al
0x1095f:	sbb	al, 0
0x10961:	test	al, al
0x10963:	je	0x109d8


0x10965:	lea	rdi, [rip + 0x11dd4]
0x1096c:	mov	ecx, 6
0x10971:	mov	rsi, r13
0x10974:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10974:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10976:	seta	al
0x10979:	sbb	al, 0
0x1097b:	test	al, al
0x1097d:	je	0x109d8


0x1097f:	lea	rdi, [rip + 0x11dc0]
0x10986:	mov	ecx, 7
0x1098b:	mov	rsi, r13
0x1098e:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1098e:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10990:	seta	al
0x10993:	sbb	al, 0
0x10995:	test	al, al
0x10997:	je	0x109d8


0x10999:	lea	rsi, [rip + 0x11dad]
0x109a0:	mov	rdi, r13
0x109a3:	mov	byte ptr [rsp + 8], dl
0x109a7:	call	0x26d0


0x109ac:	test	eax, eax
0x109ae:	movzx	edx, byte ptr [rsp + 8]
0x109b3:	je	0x109d8


0x109b5:	lea	rsi, [rip + 0x11d98]
0x109bc:	mov	rdi, r13
0x109bf:	call	0x26d0


0x109c4:	test	r15, r15
0x109c7:	sete	dl
0x109ca:	test	eax, eax
0x109cc:	sete	al
0x109cf:	and	edx, eax
0x109d1:	nop	dword ptr [rax]
0x109d8:	movzx	eax, byte ptr [r12 + 0x28]
0x109de:	mov	r15, qword ptr [r12]
0x109e2:	mov	esi, 0x3a
0x109e7:	mov	rdi, r15
0x109ea:	and	eax, 0xfffffffe
0x109ed:	or	eax, edx
0x109ef:	mov	byte ptr [r12 + 0x28], al
0x109f4:	call	0x25a0


0x109f9:	test	rax, rax
0x109fc:	mov	edx, 1
0x10a01:	je	0x10a98


0x10a98:	cmp	byte ptr [r15], 0x2f
0x10a9c:	je	0x10b10


0x10a07:	movzx	eax, byte ptr [r12 + 0x28]
0x10a0d:	add	edx, edx
0x10a0f:	mov	qword ptr [r12 + 0x20], -1
0x10a18:	mov	rdi, rbx
0x10a1b:	and	eax, 0xfffffffd
0x10a1e:	or	eax, edx
0x10a20:	mov	byte ptr [r12 + 0x28], al
0x10a25:	mov	qword ptr [r14], r12
0x10a28:	lea	r14, [r12 + 0x30]
0x10a2d:	call	0x27b0


0x10b10:	cmp	byte ptr [r15 + 1], 0x2f
0x10b15:	jne	0x10a9e


0x10a9e:	lea	rsi, [rip + 0x11cbf]
0x10aa5:	mov	ecx, 7
0x10aaa:	mov	rdi, r15
0x10aad:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10b17:	lea	rdi, [rip + 0x11c3b]
0x10b1e:	mov	ecx, 6
0x10b23:	mov	rsi, r13
0x10b26:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10aad:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10aaf:	seta	al
0x10ab2:	sbb	al, 0
0x10ab4:	test	al, al
0x10ab6:	sete	dl
0x10ab9:	jmp	0x10a07


0x10b26:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10b28:	seta	al
0x10b2b:	sbb	al, 0
0x10b2d:	test	al, al
0x10b2f:	je	0x10a07


0x10b35:	lea	rdi, [rip + 0x11c23]
0x10b3c:	mov	ecx, 5
0x10b41:	mov	rsi, r13
0x10b44:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10b44:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x10b46:	seta	al
0x10b49:	sbb	al, 0
0x10b4b:	test	al, al
0x10b4d:	je	0x10a07


0x10b53:	jmp	0x10a9e


0x10a32:	test	rax, rax
0x10a35:	mov	r13, rax
0x10a38:	jne	0x10800


0x10800:	lea	rsi, [rip + 0x11f6e]
0x10807:	mov	rdi, r13
0x1080a:	call	0x29b0


0x10a46:	test	eax, eax
0x10a48:	jne	0x10615


0x35b6:	mov	rdi, qword ptr [rip + 0x224bd3]
0x35bd:	test	rdi, rdi
0x35c0:	je	0x35c7


0x35c7:	test	r13, r13
0x35ca:	je	0x35e7


0x35c2:	call	0x4e90


0x35e7:	cmp	byte ptr [rip + 0x224b93], 0
0x35ee:	je	0x3612


0x35cc:	mov	rdi, qword ptr [rip + 0x224add]
0x35d3:	test	byte ptr [rdi], 0x20
0x35d6:	je	0x391b


0x3612:	movzx	eax, byte ptr [rsp + 0x18]
0x3617:	xor	eax, 1
0x361a:	mov	rcx, qword ptr [rsp + 0x128]
0x3622:	xor	rcx, qword ptr fs:[0x28]
0x362b:	movzx	eax, al
0x362e:	jne	0x3de4


0x35f0:	lea	rsi, [rip + 0x1c70b]
0x35f7:	xor	edi, edi
0x35f9:	mov	edx, 5
0x35fe:	call	0x2510


0x391b:	call	0xdca0


0x35dc:	cmp	byte ptr [rsp + 0x18], 0
0x35e1:	jne	0x3e82


0x3634:	add	rsp, 0x138
0x363b:	pop	rbx
0x363c:	pop	rbp
0x363d:	pop	r12
0x363f:	pop	r13
0x3641:	pop	r14
0x3643:	pop	r15
0x3645:	ret	


0x3de4:	call	0x2560


0x3e82:	mov	rsi, r13
0x3e85:	mov	edi, 4
0x3e8a:	call	0xc090


0x3920:	test	eax, eax
0x3922:	jne	0x35dc


0x3928:	jmp	0x35e7


0x3603:	lea	rdi, [rip + 0x224b16]
0x360a:	mov	rsi, rax
0x360d:	call	0x40e0


0x3488:	lea	rdx, [rip + 0x1c897]
0x348f:	mov	rcx, rax
0x3492:	mov	r9, rbp
0x3495:	mov	r8, rbx
0x3498:	xor	esi, esi
0x349a:	xor	edi, edi
0x349c:	xor	eax, eax
0x349e:	call	0x28a0


0x34a3:	mov	byte ptr [rsp + 0x18], 0
0x34a8:	jmp	0x3000


0x396e:	lea	rsi, [rip + 0x1c30c]
0x3975:	mov	edx, 5
0x397a:	xor	edi, edi
0x397c:	mov	rbp, rax
0x397f:	call	0x2510


0x3984:	mov	esi, dword ptr [rbx]
0x3986:	mov	rdx, rax
0x3989:	mov	rcx, rbp
0x398c:	xor	edi, edi
0x398e:	xor	eax, eax
0x3990:	call	0x28a0


0x3995:	jmp	0x36e9


0x3cf9:	lea	rsi, [rip + 0x1d200]
0x3d00:	mov	rbx, rax
0x3d03:	xor	edi, edi
0x3d05:	mov	edx, 5
0x3d0a:	call	0x2510


0x3d0f:	mov	rcx, rbx
0x3d12:	mov	rdx, rax
0x3d15:	xor	esi, esi
0x3d17:	xor	edi, edi
0x3d19:	xor	eax, eax
0x3d1b:	call	0x28a0


0x3d20:	jmp	0x3400


0x3c71:	mov	esi, dword ptr [r14 + 0x40]
0x3c75:	lea	rdx, [rip + 0x1d814]
0x3c7c:	mov	rcx, rax
0x3c7f:	xor	edi, edi
0x3c81:	xor	eax, eax
0x3c83:	call	0x28a0


0x3c88:	jmp	0x31b0


0x356e:	lea	rsi, [rip + 0x1c6e2]
0x3575:	mov	edx, 5
0x357a:	xor	edi, edi
0x357c:	mov	rbp, rax
0x357f:	call	0x2510


0x3584:	mov	rbx, rax
0x3587:	call	0x2410


0x358c:	mov	esi, dword ptr [rax]
0x358e:	mov	rcx, rbp
0x3591:	mov	rdx, rbx
0x3594:	xor	edi, edi
0x3596:	xor	eax, eax
0x3598:	call	0x28a0


0x359d:	mov	byte ptr [rsp + 0x18], 0
0x35a2:	mov	rdi, r15
0x35a5:	call	0x4bb0


0x3e8f:	lea	rsi, [rip + 0x1be5b]
0x3e96:	mov	rbx, rax
0x3e99:	mov	edx, 5
0x3e9e:	xor	edi, edi
0x3ea0:	call	0x2510


0x3ea5:	mov	rcx, rbx
0x3ea8:	mov	rdx, rax
0x3eab:	xor	esi, esi
0x3ead:	mov	edi, 1
0x3eb2:	xor	eax, eax
0x3eb4:	call	0x28a0


0x39aa:	lea	rsi, [rip + 0x1c306]
0x39b1:	mov	edx, 5
0x39b6:	xor	edi, edi
0x39b8:	mov	rbx, rax
0x39bb:	call	0x2510


0x39c0:	mov	esi, dword ptr [r14 + 0x40]
0x39c4:	mov	rdx, rax
0x39c7:	mov	rcx, rbx
0x39ca:	xor	edi, edi
0x39cc:	xor	eax, eax
0x39ce:	call	0x28a0


0x39d3:	jmp	0x3400


0x3698:	lea	rsi, [rip + 0x1c5f6]
0x369f:	mov	edx, 5
0x36a4:	xor	edi, edi
0x36a6:	mov	rbx, rax
0x36a9:	call	0x2510


0x36ae:	mov	esi, dword ptr [r14 + 0x40]
0x36b2:	mov	rdx, rax
0x36b5:	mov	rcx, rbx
0x36b8:	xor	edi, edi
0x36ba:	xor	eax, eax
0x36bc:	call	0x28a0


0x36c1:	jmp	0x31b0


0x3425:	lea	rsi, [rip + 0x1da94]
0x342c:	xor	edi, edi
0x342e:	mov	rbp, rax
0x3431:	mov	edx, 5
0x3436:	call	0x2510


0x343b:	xor	esi, esi
0x343d:	mov	rdx, rax
0x3440:	xor	edi, edi
0x3442:	xor	eax, eax
0x3444:	mov	rcx, rbp
0x3447:	call	0x28a0


0x344c:	cmp	byte ptr [rbx], 0
0x344f:	jne	0x34e1


0x38e9:	lea	rsi, [rip + 0x1c34c]
0x38f0:	mov	edx, 5
0x38f5:	xor	edi, edi
0x38f7:	mov	rbp, rax
0x38fa:	call	0x2510


0x38ff:	mov	rbx, rax
0x3902:	call	0x2410


0x3907:	mov	esi, dword ptr [rax]
0x3909:	mov	rcx, rbp
0x390c:	mov	rdx, rbx
0x390f:	mov	edi, 1
0x3914:	xor	eax, eax
0x3916:	call	0x28a0


0x4c5a:	mov	esi, dword ptr [rbx]
0x4c5c:	lea	rdx, [rip + 0x1c83c]
0x4c63:	mov	rcx, rax
0x4c66:	mov	r8, rbp
0x4c69:	xor	edi, edi
0x4c6b:	xor	eax, eax
0x4c6d:	call	0x28a0


0x3df3:	lea	rsi, [rip + 0x1be31]
0x3dfa:	mov	rbx, rax
0x3dfd:	mov	edx, 5
0x3e02:	xor	edi, edi
0x3e04:	call	0x2510


0x3e09:	mov	rcx, rbx
0x3e0c:	mov	rdx, rax
0x3e0f:	xor	esi, esi
0x3e11:	xor	edi, edi
0x3e13:	xor	eax, eax
0x3e15:	call	0x28a0


0x3e1a:	lea	rsi, [rip + 0x1d03f]
0x3e21:	mov	edx, 5
0x3e26:	xor	edi, edi
0x3e28:	call	0x2510


0x3e2d:	mov	rdi, qword ptr [rip + 0x2242ac]
0x3e34:	lea	rdx, [rip + 0x1e155]
0x3e3b:	mov	rcx, rax
0x3e3e:	mov	esi, 1
0x3e43:	xor	eax, eax
0x3e45:	call	0x2970


0x3e4a:	mov	edi, 1
0x3e4f:	call	0x4240


0x41f9:	lea	rsi, [rip + 0x1b86d]
0x4200:	mov	r12, rax
0x4203:	xor	edi, edi
0x4205:	mov	edx, 5
0x420a:	call	0x2510


0x420f:	xor	esi, esi
0x4211:	mov	rdx, rax
0x4214:	xor	edi, edi
0x4216:	mov	rcx, r12
0x4219:	xor	eax, eax
0x421b:	call	0x28a0


0x4220:	mov	rsi, qword ptr [rip + 0x223e81]
0x4227:	mov	rdi, rbx
0x422a:	call	0x26a0


0x422f:	jmp	0x4186


0x495e:	mov	rdi, qword ptr [rip + 0x22377b]
0x4965:	lea	rdx, [rip + 0x1cb22]
0x496c:	mov	rcx, rax
0x496f:	mov	esi, 1
0x4974:	xor	eax, eax
0x4976:	call	0x2970


0x497b:	mov	r15, qword ptr [r14 + rbx*8]
0x497f:	test	r15, r15
0x4982:	jne	0x4938


0x490f:	mov	rdi, qword ptr [rip + 0x2237ca]
0x4916:	lea	rdx, [rip + 0x1cb69]
0x491d:	mov	rcx, rax
0x4920:	mov	esi, 1
0x4925:	xor	eax, eax
0x4927:	add	rbp, r12
0x492a:	call	0x2970


0x492f:	mov	r15, qword ptr [r14 + rbx*8]
0x4933:	test	r15, r15
0x4936:	je	0x4988


0x1d870:	mov	rax, qword ptr [rsp + 8]
0x1d875:	mov	rdi, qword ptr [r13 + 0xe0]
0x1d87c:	mov	rdx, qword ptr [rax + 0x30]
0x1d880:	test	rdx, rdx
0x1d883:	je	0x1e174


0x1e174:	call	0x2a10


0x1d889:	mov	rax, qword ptr [rdi]
0x1d88c:	test	rax, rax
0x1d88f:	je	0x1d89e


0x1d89e:	add	rax, 1
0x1d8a2:	cmp	rdx, rax
0x1d8a5:	ja	0x1d898


0x1d891:	jmp	0x1d8ad


0x1d8a7:	je	0x1e174


0x1d898:	cmp	qword ptr [rdi + rax*8], rax
0x1d89c:	jne	0x1d8ad


0x1e179:	mov	qword ptr [r13 + 0xe0], 0
0x1e184:	jmp	0x1d8ad


0xbdcc:	lea	rsi, [rax + 1]
0xbdd0:	mov	qword ptr [rsp + 0x48], rax
0xbdd5:	add	rsp, 0x20
0xbdd9:	mov	rdi, rsi
0xbddc:	mov	qword ptr [rsp + 0x18], rsi
0xbde1:	call	0xc9e0


0xbde6:	mov	qword ptr [rsp + 0x10], rax
0xbdeb:	sub	rsp, 8
0xbdef:	push	qword ptr [rbx + 0x30]
0xbdf2:	push	qword ptr [rbx + 0x28]
0xbdf5:	mov	r10, qword ptr [rsp + 0x38]
0xbdfa:	mov	r9d, ebp
0xbdfd:	mov	r8d, dword ptr [rbx]
0xbe00:	mov	rcx, r15
0xbe03:	mov	rdx, r14
0xbe06:	mov	rdi, rax
0xbe09:	push	r10
0xbe0b:	mov	rsi, qword ptr [rsp + 0x38]
0xbe10:	call	0xa7e0


0xbe15:	mov	eax, dword ptr [rsp + 0x2c]
0xbe19:	add	rsp, 0x20
0xbe1d:	test	r12, r12
0xbe20:	mov	dword ptr [r13], eax
0xbe24:	je	0xbe2f


0xbe2f:	mov	rax, qword ptr [rsp + 0x10]
0xbe34:	add	rsp, 0x38
0xbe38:	pop	rbx
0xbe39:	pop	rbp
0xbe3a:	pop	r12
0xbe3c:	pop	r13
0xbe3e:	pop	r14
0xbe40:	pop	r15
0xbe42:	ret	


0xbe26:	mov	r11, qword ptr [rsp + 0x28]
0xbe2b:	mov	qword ptr [r12], r11
0xbe2f:	mov	rax, qword ptr [rsp + 0x10]
0xbe34:	add	rsp, 0x38
0xbe38:	pop	rbx
0xbe39:	pop	rbp
0xbe3a:	pop	r12
0xbe3c:	pop	r13
0xbe3e:	pop	r14
0xbe40:	pop	r15
0xbe42:	ret	


0xbd41:	mov	dword ptr [rbp], r12d
0xbd45:	add	rsp, 0x38
0xbd49:	pop	rbx
0xbd4a:	pop	rbp
0xbd4b:	pop	r12
0xbd4d:	pop	r13
0xbd4f:	pop	r14
0xbd51:	pop	r15
0xbd53:	ret	


0xbb0c:	add	rsp, 0x20
0xbb10:	mov	r11, qword ptr [rsp + 0x10]
0xbb15:	cmp	r11, rax
0xbb18:	ja	0xbb81


0xbb1a:	lea	rsi, [rax + 1]
0xbb1e:	lea	rax, [rip + 0x21c69b]
0xbb25:	cmp	r12, rax
0xbb28:	mov	qword ptr [rbx], rsi
0xbb2b:	je	0xbb3f


0xbb81:	mov	eax, dword ptr [rsp + 0x18]
0xbb85:	mov	dword ptr [r13], eax
0xbb89:	add	rsp, 0x28
0xbb8d:	mov	rax, r12
0xbb90:	pop	rbx
0xbb91:	pop	rbp
0xbb92:	pop	r12
0xbb94:	pop	r13
0xbb96:	pop	r14
0xbb98:	pop	r15
0xbb9a:	ret	


0xbb3f:	mov	rdi, rsi
0xbb42:	mov	qword ptr [rsp + 0x10], rsi
0xbb47:	call	0xc9e0


0xbb2d:	mov	rdi, r12
0xbb30:	mov	qword ptr [rsp + 0x10], rsi
0xbb35:	call	0x2a10


0xbb3a:	mov	rsi, qword ptr [rsp + 0x10]
0xbb3f:	mov	rdi, rsi
0xbb42:	mov	qword ptr [rsp + 0x10], rsi
0xbb47:	call	0xc9e0


0xbb4c:	sub	rsp, 8
0xbb50:	mov	qword ptr [rbx + 8], rax
0xbb54:	mov	r8d, dword ptr [rbp]
0xbb58:	push	qword ptr [rbp + 0x30]
0xbb5b:	push	qword ptr [rbp + 0x28]
0xbb5e:	mov	rcx, r14
0xbb61:	push	r15
0xbb63:	mov	r9d, dword ptr [rsp + 0x3c]
0xbb68:	mov	rdi, rax
0xbb6b:	mov	rdx, qword ptr [rsp + 0x28]
0xbb70:	mov	rsi, qword ptr [rsp + 0x30]
0xbb75:	mov	r12, rax
0xbb78:	call	0xa7e0


0xc292:	mov	rdi, qword ptr [rsp + 0x38]
0xc297:	xor	rdi, qword ptr fs:[0x28]
0xc2a0:	jne	0xc2ac


0xc2a2:	add	rsp, 0x48
0xc2a6:	ret	


0xc2ac:	call	0x2560


0xbfdf:	mov	rcx, qword ptr [rsp + 0x38]
0xbfe4:	xor	rcx, qword ptr fs:[0x28]
0xbfed:	jne	0xbff9


0xbfef:	add	rsp, 0x48
0xbff3:	ret	


0xbff9:	call	0x2560


0xc06b:	mov	rdx, qword ptr [rsp + 0x38]
0xc070:	xor	rdx, qword ptr fs:[0x28]
0xc079:	jne	0xc085


0xc07b:	add	rsp, 0x48
0xc07f:	ret	


0xc085:	call	0x2560


0xc1ff:	mov	rcx, qword ptr [rsp + 0x38]
0xc204:	xor	rcx, qword ptr fs:[0x28]
0xc20d:	jne	0xc219


0xc20f:	add	rsp, 0x48
0xc213:	ret	


0xc219:	call	0x2560


0xc12e:	mov	rsi, qword ptr [rsp + 0x38]
0xc133:	xor	rsi, qword ptr fs:[0x28]
0xc13c:	jne	0xc143


0xc13e:	add	rsp, 0x48
0xc142:	ret	


0xc143:	call	0x2560


0xbb7d:	add	rsp, 0x20
0xbb81:	mov	eax, dword ptr [rsp + 0x18]
0xbb85:	mov	dword ptr [r13], eax
0xbb89:	add	rsp, 0x28
0xbb8d:	mov	rax, r12
0xbb90:	pop	rbx
0xbb91:	pop	rbp
0xbb92:	pop	r12
0xbb94:	pop	r13
0xbb96:	pop	r14
0xbb98:	pop	r15
0xbb9a:	ret	


0x4a23:	mov	rdx, r15
0x4a26:	mov	rsi, rbp
0x4a29:	mov	rdi, rbx
0x4a2c:	call	0x48b0


0x4a31:	call	r13


0x4863:	mov	rdx, r12
0x4866:	mov	rbp, rax
0x4869:	mov	esi, 8
0x486e:	xor	edi, edi
0x4870:	call	0xbf70


0x4875:	mov	r8, rbp
0x4878:	mov	rdx, rbx
0x487b:	mov	rcx, rax
0x487e:	pop	rbx
0x487f:	pop	rbp
0x4880:	pop	r12
0x4882:	xor	esi, esi
0x4884:	xor	edi, edi
0x4886:	xor	eax, eax
0x4888:	jmp	0x28a0


0x1d8c2:	test	eax, eax
0x1d8c4:	jne	0x1d570


0x1d8ca:	mov	rdi, qword ptr [r13 + 0x68]
0x1d8ce:	lea	rsi, [rip - 0x7c05]
0x1d8d5:	mov	rdx, r13
0x1d8d8:	call	0x10f80


0x1d8dd:	test	eax, eax
0x1d8df:	jne	0x1d570


0x1d8e5:	mov	rdi, qword ptr [r13 + 0x68]
0x1d8e9:	lea	rsi, [rip - 0xb000]
0x1d8f0:	mov	rdx, r13
0x1d8f3:	call	0x10ff0


0x1d8f8:	mov	rdx, qword ptr [r13 + 0x68]
0x1d8fc:	lea	rsi, [rip + 0x53c5]
0x1d903:	nop	dword ptr [rax + rax]
0x1d908:	movzx	ecx, byte ptr [rdx + 0x30]
0x1d90c:	mov	rdi, qword ptr [rdx + 0x38]
0x1d910:	cmp	cl, 0x10
0x1d913:	ja	0x1d9e8


0x1d919:	movzx	eax, cl
0x1d91c:	movsxd	rax, dword ptr [rsi + rax*4]
0x1d920:	add	rax, rsi
0x1d923:	jmp	rax


0x1d9e8:	and	ecx, 8
0x1d9eb:	jne	0x1e302


0x1d9f1:	mov	rax, qword ptr [rdx + 0x20]
0x1d9f5:	mov	rcx, qword ptr [rax + 0x38]
0x1d9f9:	mov	rax, qword ptr [r13 + 0x18]
0x1d9fd:	mov	qword ptr [rax + rdi*8], rcx
0x1da01:	mov	r15, qword ptr [rdx + 8]
0x1da05:	xor	edi, edi
0x1da07:	test	r15, r15
0x1da0a:	je	0x1da1b


0x1e302:	lea	rcx, [rip + 0x4a77]
0x1e309:	lea	rsi, [rip + 0x44b0]
0x1e310:	lea	rdi, [rip + 0x44c9]
0x1e317:	mov	edx, 0x5c2
0x1e31c:	call	0x2600


0x1da1b:	mov	r15, qword ptr [rdx + 0x10]
0x1da1f:	test	r15, r15
0x1da22:	sete	cl
0x1da25:	cmp	r15, rdi
0x1da28:	sete	al
0x1da2b:	or	cl, al
0x1da2d:	mov	byte ptr [rsp + 0x10], cl
0x1da31:	je	0x1da0c


0x1da0c:	mov	rdx, r15
0x1da0f:	jmp	0x1d908


0x1da33:	mov	rax, qword ptr [rdx]
0x1da36:	mov	rdi, rdx
0x1da39:	test	rax, rax
0x1da3c:	jne	0x1da18


0x1d908:	movzx	ecx, byte ptr [rdx + 0x30]
0x1d90c:	mov	rdi, qword ptr [rdx + 0x38]
0x1d910:	cmp	cl, 0x10
0x1d913:	ja	0x1d9e8


0x1da3e:	xor	r14d, r14d
0x1da41:	xor	r15d, r15d
0x1da44:	nop	dword ptr [rax]
0x1da48:	mov	rdx, qword ptr [r13 + 0x10]
0x1da4c:	cmp	rdx, r15
0x1da4f:	je	0x1da76


0x1da18:	mov	rdx, rax
0x1da1b:	mov	r15, qword ptr [rdx + 0x10]
0x1da1f:	test	r15, r15
0x1da22:	sete	cl
0x1da25:	cmp	r15, rdi
0x1da28:	sete	al
0x1da2b:	or	cl, al
0x1da2d:	mov	byte ptr [rsp + 0x10], cl
0x1da31:	je	0x1da0c


0x1da76:	test	r14b, r14b
0x1da79:	je	0x1dcbe


0x1da51:	lea	r10, [r15 + r15*2]
0x1da55:	mov	rax, qword ptr [r13 + 0x30]
0x1da59:	shl	r10, 3
0x1da5d:	cmp	qword ptr [rax + r10 + 8], 0
0x1da63:	je	0x1dc68


0x1dcbe:	mov	rax, qword ptr [rsp + 8]
0x1dcc3:	test	byte ptr [rax + 0x38], 0x10
0x1dcc7:	jne	0x1dcda


0x1da7f:	xor	r14d, r14d
0x1da82:	xor	r15d, r15d
0x1da85:	jmp	0x1da51


0x1dc68:	mov	ecx, 1
0x1dc6d:	mov	rdx, r15
0x1dc70:	mov	rsi, r13
0x1dc73:	mov	rdi, r12
0x1dc76:	mov	qword ptr [rsp], r10
0x1dc7a:	call	0x12da0


0x1da69:	mov	rdx, qword ptr [r13 + 0x10]
0x1da6d:	add	r15, 1
0x1da71:	cmp	rdx, r15
0x1da74:	jne	0x1da51


0x1dcc9:	cmp	qword ptr [rax + 0x30], 0
0x1dcce:	je	0x1dcda


0x1dcda:	cmp	qword ptr [r13 + 0x98], 0
0x1dce2:	je	0x1dddb


0x1dcd0:	test	byte ptr [r13 + 0xb0], 1
0x1dcd8:	jne	0x1dce8


0x1dddb:	movzx	eax, byte ptr [rbx + 0xb0]
0x1dde2:	mov	dword ptr [rsp + 0x4c], 0
0x1ddea:	shr	al, 2
0x1dded:	cmp	qword ptr [rsp + 0x20], 0
0x1ddf3:	sete	dl
0x1ddf6:	and	al, dl
0x1ddf8:	jne	0x1dfdf


0x1dce8:	lea	rdi, [rdx + rdx*2]
0x1dcec:	mov	qword ptr [rsp], rdx
0x1dcf0:	shl	rdi, 3
0x1dcf4:	call	0x2780


0x1ddfe:	mov	rax, qword ptr [rbx + 0x68]
0x1de02:	mov	rdi, r12
0x1de05:	mov	rax, qword ptr [rax + 0x18]
0x1de09:	mov	rax, qword ptr [rax + 0x38]
0x1de0d:	lea	rdx, [rax + rax*2]
0x1de11:	mov	qword ptr [rbx + 0x90], rax
0x1de18:	mov	rax, qword ptr [rbx + 0x30]
0x1de1c:	lea	rsi, [rax + rdx*8]
0x1de20:	call	0x13800


0x1dfdf:	mov	rcx, qword ptr [rsp + 8]
0x1dfe4:	cmp	qword ptr [rcx + 0x28], 0
0x1dfe9:	jne	0x1ddfe


0x1dfef:	mov	r10, qword ptr [rbx + 0x10]
0x1dff3:	test	r10, r10
0x1dff6:	je	0x1e2aa


0x1e2aa:	cmp	qword ptr [rbx + 0x98], 0
0x1e2b2:	movzx	edx, byte ptr [rbx + 0xb0]
0x1e2b9:	mov	dword ptr [rbx + 0xb4], 1
0x1e2c3:	setg	al
0x1e2c6:	and	edx, 0xfffffff9
0x1e2c9:	or	eax, r14d
0x1e2cc:	and	eax, 1
0x1e2cf:	add	eax, eax
0x1e2d1:	or	eax, edx
0x1e2d3:	mov	byte ptr [rbx + 0xb0], al
0x1e2d9:	jmp	0x1ddfe


0x1dffc:	mov	rsi, qword ptr [rbx]
0x1dfff:	lea	r9, [rip + 0x4d06]
0x1e006:	xor	r8d, r8d
0x1e009:	xor	edx, edx
0x1e00b:	mov	rcx, rsi
0x1e00e:	cmp	byte ptr [rcx + 8], 0xc
0x1e012:	ja	0x1e2de


0x1e018:	movzx	edi, byte ptr [rcx + 8]
0x1e01c:	movsxd	rdi, dword ptr [r9 + rdi*4]
0x1e020:	add	rdi, r9
0x1e023:	jmp	rdi


0x1e2de:	call	0x2400


0x1de25:	test	eax, eax
0x1de27:	mov	r15d, eax
0x1de2a:	mov	dword ptr [rsp + 0x50], eax
0x1de2e:	jne	0x1df4f


0x1de34:	cmp	qword ptr [rbx + 0x98], 0
0x1de3c:	jle	0x1df10


0x1df4f:	mov	rax, qword ptr [rsp + 8]
0x1df54:	mov	dword ptr [rsp + 0x4c], r15d
0x1df59:	mov	r13, qword ptr [rax]
0x1df5c:	mov	rdi, qword ptr [r13 + 0x70]
0x1df60:	test	rdi, rdi
0x1df63:	je	0x1df78


0x1df10:	mov	rdi, qword ptr [rsp + 0x28]
0x1df15:	xor	ecx, ecx
0x1df17:	mov	rdx, r12
0x1df1a:	mov	rsi, rbx
0x1df1d:	call	0x139f0


0x1de42:	mov	r9, qword ptr [rsp + 0x68]
0x1de47:	test	r9, r9
0x1de4a:	jle	0x1df10


0x1df78:	mov	rdi, qword ptr [r13 + 0x20]
0x1df7c:	mov	qword ptr [r13 + 0x70], 0
0x1df84:	mov	dword ptr [r13 + 0x80], 0xf
0x1df8f:	mov	qword ptr [r13 + 0x68], 0
0x1df97:	call	0x2a10


0x1de50:	xor	r10d, r10d
0x1de53:	lea	r13, [r12 + 0x10]
0x1de58:	jmp	0x1de6d


0x1de6d:	mov	rcx, qword ptr [rsp + 0x70]
0x1de72:	mov	rsi, qword ptr [rbx]
0x1de75:	mov	r8, qword ptr [rcx + r10*8]
0x1de79:	mov	rdi, r8
0x1de7c:	shl	rdi, 4
0x1de80:	add	rdi, rsi
0x1de83:	cmp	byte ptr [rdi + 8], 4
0x1de87:	jne	0x1de60


0x1de89:	xor	edx, edx
0x1de8b:	jmp	0x1de99


0x1de60:	add	r10, 1
0x1de64:	cmp	r9, r10
0x1de67:	jle	0x1df10


0x1de99:	mov	rax, qword ptr [rcx + rdx*8]
0x1de9d:	shl	rax, 4
0x1dea1:	add	rax, rsi
0x1dea4:	cmp	byte ptr [rax + 8], 9
0x1dea8:	jne	0x1de90


0x1deaa:	mov	r11, qword ptr [rdi]
0x1dead:	cmp	qword ptr [rax], r11
0x1deb0:	jne	0x1de90


0x1de90:	add	rdx, 1
0x1de94:	cmp	r9, rdx
0x1de97:	je	0x1de60


0x1deb2:	mov	rdx, qword ptr [rbx + 0x28]
0x1deb6:	lea	rax, [r8 + r8*2]
0x1deba:	mov	rsi, r13
0x1debd:	mov	rdi, r9
0x1dec0:	lea	rax, [rdx + rax*8]
0x1dec4:	mov	rax, qword ptr [rax + 0x10]
0x1dec8:	mov	r11, qword ptr [rax]
0x1decb:	mov	rdx, r11
0x1dece:	call	0x126a0


0x1ded3:	test	rax, rax
0x1ded6:	jne	0x1de60


0x1ded8:	mov	rax, qword ptr [rbx + 0x30]
0x1dedc:	lea	rdx, [r11 + r11*2]
0x1dee0:	mov	rdi, r12
0x1dee3:	lea	rsi, [rax + rdx*8]
0x1dee7:	call	0x12bc0


0x1deec:	test	eax, eax
0x1deee:	jne	0x1e230


0x1def4:	mov	r9, qword ptr [rsp + 0x68]
0x1def9:	mov	r10d, 1
0x1deff:	cmp	r9, r10
0x1df02:	jg	0x1de6d


0x1e230:	mov	r15d, eax
0x1e233:	jmp	0x1df4f


0x1df70:	test	r12, r12
0x1df73:	mov	rdi, r12
0x1df76:	jne	0x1df68


0x1df68:	mov	r12, qword ptr [rdi]
0x1df6b:	call	0x2a10


0x1df9c:	mov	qword ptr [r13 + 0x20], 0
0x1dfa4:	mov	rdi, rbp
0x1dfa7:	call	0x12390


0x1dfac:	mov	eax, dword ptr [rsp + 0x4c]
0x1dfb0:	test	eax, eax
0x1dfb2:	je	0x1d5ec


0x1dfb8:	jmp	0x1d5cc


0x1df22:	test	rax, rax
0x1df25:	mov	qword ptr [rbx + 0x48], rax
0x1df29:	je	0x1e092


0x1e092:	mov	r15d, dword ptr [rsp + 0x50]
0x1e097:	jmp	0x1df4f


0x1df2f:	cmp	byte ptr [rax + 0x68], 0
0x1df33:	js	0x1e031


0x1e031:	mov	r14, qword ptr [rsp + 0x28]
0x1e036:	mov	ecx, 1
0x1e03b:	mov	rdx, r12
0x1e03e:	mov	rsi, rbx
0x1e041:	mov	rdi, r14
0x1e044:	call	0x139f0


0x1df39:	mov	qword ptr [rbx + 0x60], rax
0x1df3d:	mov	qword ptr [rbx + 0x58], rax
0x1df41:	mov	qword ptr [rbx + 0x50], rax
0x1df45:	mov	rdi, qword ptr [rsp + 0x70]
0x1df4a:	call	0x2a10


0x1e049:	mov	ecx, 2
0x1e04e:	mov	rdx, r12
0x1e051:	mov	rsi, rbx
0x1e054:	mov	rdi, r14
0x1e057:	mov	qword ptr [rbx + 0x50], rax
0x1e05b:	call	0x139f0


0x1e060:	mov	ecx, 6
0x1e065:	mov	qword ptr [rbx + 0x58], rax
0x1e069:	mov	rdx, r12
0x1e06c:	mov	rsi, rbx
0x1e06f:	mov	rdi, r14
0x1e072:	call	0x139f0


0x1e077:	cmp	qword ptr [rbx + 0x50], 0
0x1e07c:	mov	qword ptr [rbx + 0x60], rax
0x1e080:	je	0x1e092


0x1e082:	cmp	qword ptr [rbx + 0x58], 0
0x1e087:	je	0x1e092


0x1e089:	test	rax, rax
0x1e08c:	jne	0x1df45


0x1df45:	mov	rdi, qword ptr [rsp + 0x70]
0x1df4a:	call	0x2a10


0x1dcf9:	test	rax, rax
0x1dcfc:	mov	qword ptr [r13 + 0x38], rax
0x1dd00:	je	0x1e24c


0x1e24c:	mov	rax, qword ptr [rsp + 8]
0x1e251:	mov	dword ptr [rsp + 0x4c], 0xc
0x1e259:	mov	r13, qword ptr [rax]
0x1e25c:	jmp	0x1d57c


0x1dd06:	mov	rdx, qword ptr [rsp]
0x1dd0a:	xor	esi, esi
0x1dd0c:	xor	ecx, ecx
0x1dd0e:	test	rdx, rdx
0x1dd11:	jne	0x1dd24


0x1dd13:	jmp	0x1dddb


0x1dd24:	pxor	xmm0, xmm0
0x1dd28:	add	rax, rsi
0x1dd2b:	add	rcx, 1
0x1dd2f:	mov	qword ptr [rax + 0x10], 0
0x1dd37:	add	rsi, 0x18
0x1dd3b:	movups	xmmword ptr [rax], xmm0
0x1dd3e:	mov	rax, qword ptr [r13 + 0x10]
0x1dd42:	cmp	rcx, rax
0x1dd45:	jb	0x1dd20


0x1dd20:	mov	rax, qword ptr [r13 + 0x38]
0x1dd24:	pxor	xmm0, xmm0
0x1dd28:	add	rax, rsi
0x1dd2b:	add	rcx, 1
0x1dd2f:	mov	qword ptr [rax + 0x10], 0
0x1dd37:	add	rsi, 0x18
0x1dd3b:	movups	xmmword ptr [rax], xmm0
0x1dd3e:	mov	rax, qword ptr [r13 + 0x10]
0x1dd42:	cmp	rcx, rax
0x1dd45:	jb	0x1dd20


0x1dd47:	test	rax, rax
0x1dd4a:	je	0x1dddb


0x1dd50:	mov	rax, qword ptr [r13 + 0x30]
0x1dd54:	mov	qword ptr [rsp + 0x18], 0
0x1dd5d:	mov	qword ptr [rsp + 0x10], 0
0x1dd66:	mov	rcx, qword ptr [rsp + 0x18]
0x1dd6b:	lea	rdx, [rax + rcx]
0x1dd6f:	cmp	qword ptr [rdx + 8], 0
0x1dd74:	mov	rcx, qword ptr [rdx + 0x10]
0x1dd78:	jle	0x1ddc4


0x1ddc4:	add	qword ptr [rsp + 0x10], 1
0x1ddca:	add	qword ptr [rsp + 0x18], 0x18
0x1ddd0:	mov	rdx, qword ptr [rsp + 0x10]
0x1ddd5:	cmp	rdx, qword ptr [r13 + 0x10]
0x1ddd9:	jb	0x1dd66


0x1dd7a:	xor	r15d, r15d
0x1dd7d:	jmp	0x1dd98


0x1dd66:	mov	rcx, qword ptr [rsp + 0x18]
0x1dd6b:	lea	rdx, [rax + rcx]
0x1dd6f:	cmp	qword ptr [rdx + 8], 0
0x1dd74:	mov	rcx, qword ptr [rdx + 0x10]
0x1dd78:	jle	0x1ddc4


0x1dd98:	mov	rax, qword ptr [rcx + r15*8]
0x1dd9c:	mov	qword ptr [rsp], rcx
0x1dda0:	lea	rsi, [rax + rax*2]
0x1dda4:	mov	rax, qword ptr [r13 + 0x38]
0x1dda8:	lea	rdi, [rax + rsi*8]
0x1ddac:	mov	rsi, qword ptr [rsp + 0x10]
0x1ddb1:	call	0x110f0


0x1ddb6:	test	al, al
0x1ddb8:	jne	0x1dd80


0x1ddba:	mov	eax, 0xc
0x1ddbf:	jmp	0x1d570


0x1dd80:	mov	rax, qword ptr [r13 + 0x30]
0x1dd84:	mov	rdx, qword ptr [rsp + 0x18]
0x1dd89:	add	r15, 1
0x1dd8d:	mov	rcx, qword ptr [rsp]
0x1dd91:	cmp	r15, qword ptr [rax + rdx + 8]
0x1dd96:	jge	0x1ddc4


0x1dc7f:	test	eax, eax
0x1dc81:	jne	0x1d570


0x1dc87:	mov	rax, qword ptr [r13 + 0x30]
0x1dc8b:	mov	r10, qword ptr [rsp]
0x1dc8f:	add	r15, 1
0x1dc93:	cmp	qword ptr [rax + r10 + 8], 0
0x1dc99:	jne	0x1da48


0x1dc9f:	mov	rdi, qword ptr [rsp + 0x70]
0x1dca4:	call	0x2a10


0x1da48:	mov	rdx, qword ptr [r13 + 0x10]
0x1da4c:	cmp	rdx, r15
0x1da4f:	je	0x1da76


0x1dca9:	cmp	qword ptr [r13 + 0x10], r15
0x1dcad:	je	0x1da7f


0x1dcb3:	movzx	r14d, byte ptr [rsp + 0x10]
0x1dcb9:	jmp	0x1da51


0x1d0a1:	lea	rsi, [rip - 0xb288]
0x1d0a8:	mov	rdi, r14
0x1d0ab:	xor	edx, edx
0x1d0ad:	xor	r14d, r14d
0x1d0b0:	call	0x10f80


0x1d0b5:	mov	dword ptr [rbx], 0xc
0x1d0bb:	jmp	0x1d040


0x5b79:	mov	rbx, rax
0x5b7c:	jmp	0x5b48


0x5914:	cmp	r12, rax
0x5917:	je	0x5870


0x5870:	add	rsp, 8
0x5874:	pop	rbx
0x5875:	pop	rbp
0x5876:	pop	r12
0x5878:	pop	r13
0x587a:	pop	r14
0x587c:	pop	r15
0x587e:	ret	


0x591d:	add	rsp, 8
0x5921:	mov	rdi, r12
0x5924:	pop	rbx
0x5925:	pop	rbp
0x5926:	pop	r12
0x5928:	pop	r13
0x592a:	pop	r14
0x592c:	pop	r15
0x592e:	jmp	0x2a10


0xe344:	test	rax, rax
0xe347:	je	0xe358


0xe358:	mov	rdi, r13
0xe35b:	call	0x2a10


0xe349:	cmp	r13, rax
0xe34c:	jne	0xe367


0xe34e:	mov	rbx, qword ptr [rsp + 0x10]
0xe353:	jmp	0xe2d4


0xe367:	call	0x2400


0xe360:	jmp	0xe34e


0xe89b:	cmp	rbp, rax
0xe89e:	mov	r12, rax
0xe8a1:	je	0xe8c1


0xe8a3:	mov	rdi, rbp
0xe8a6:	call	0x2a10


0xe8ab:	test	r12, r12
0xe8ae:	je	0xe8f8


0xe8b0:	mov	rax, qword ptr [r12 + 0x10]
0xe8b5:	mov	ecx, 2
0xe8ba:	mov	word ptr [rbx + 0x70], cx
0xe8be:	mov	qword ptr [rbx], rax
0xe8c1:	pop	rbx
0xe8c2:	mov	eax, 1
0xe8c7:	pop	rbp
0xe8c8:	pop	r12
0xe8ca:	ret	


0x4d19:	test	rax, rax
0x4d1c:	je	0x4d70


0x4d70:	xor	eax, eax
0x4d72:	jmp	0x4d2b


0x4d1e:	cmp	rbx, rax
0x4d21:	je	0x4d78


0x4d78:	lea	rdx, [rip - 0xbf]
0x4d7f:	mov	qword ptr [rbp], 0
0x4d87:	xor	r8d, r8d
0x4d8a:	xor	ecx, ecx
0x4d8c:	xor	esi, esi
0x4d8e:	mov	edi, 0x3fd
0x4d93:	call	0x8560


0x4d23:	mov	rax, qword ptr [rax + 8]
0x4d27:	mov	qword ptr [rbx + 8], rax
0x4d2b:	add	rsp, 0x10
0x4d2f:	pop	rbx
0x4d30:	pop	rbp
0x4d31:	pop	r12
0x4d33:	ret	


0x4d98:	mov	qword ptr [rbx + 8], rax
0x4d9c:	add	rsp, 0x10
0x4da0:	pop	rbx
0x4da1:	pop	rbp
0x4da2:	pop	r12
0x4da4:	ret	


0x9d76:	test	rax, rax
0x9d79:	je	0x9de0


0x9d7b:	cmp	rbx, rax
0x9d7e:	je	0x9da0


0x9da0:	mov	rax, qword ptr [rbp + 8]
0x9da4:	mov	qword ptr [rbp + 0x10], 0
0x9dac:	lea	rdx, [rax + 1]
0x9db0:	mov	qword ptr [rbp + 8], rdx
0x9db4:	mov	qword ptr [rbx + 8], rax
0x9db8:	add	rsp, 0x18
0x9dbc:	pop	rbx
0x9dbd:	pop	rbp
0x9dbe:	ret	


0x9d80:	mov	rax, qword ptr [rax + 8]
0x9d84:	mov	qword ptr [rbx + 8], rax
0x9d88:	add	rsp, 0x18
0x9d8c:	pop	rbx
0x9d8d:	pop	rbp
0x9d8e:	ret	


0x5643:	test	rax, rax
0x5646:	jne	0x5672


0x5648:	test	r13d, r13d
0x564b:	je	0x56a0


0x56a0:	test	r15d, 0x40000000
0x56a7:	jne	0x56d0


0x564d:	mov	esi, 0x2f
0x5652:	mov	rdi, rbp
0x5655:	call	0x25d0


0x56a9:	mov	esi, 0x2f
0x56ae:	mov	rdi, rbx
0x56b1:	call	0x25a0


0x56b6:	test	rax, rax
0x56b9:	je	0x56d0


0x56bb:	add	rax, 1
0x56bf:	mov	rbx, rax
0x56c2:	jne	0x562d


0x562d:	mov	rsi, rbx
0x5630:	mov	rdi, rbp
0x5633:	call	0x2450


0x565a:	test	rax, rax
0x565d:	je	0x56a0


0x565f:	mov	byte ptr [rax], 0
0x5662:	mov	rsi, rbp
0x5665:	mov	rdi, r12
0x5668:	call	0x82f0


0x566d:	test	rax, rax
0x5670:	je	0x5648


0x4f61:	test	rax, rax
0x4f64:	setne	al
0x4f67:	movzx	eax, al
0x4f6a:	pop	rbx
0x4f6b:	pop	rbp
0x4f6c:	pop	r12
0x4f6e:	ret	


0xe28c:	test	rax, rax
0xe28f:	je	0xe2cd


0xe291:	mov	rbx, qword ptr [rax + 8]
0xe295:	jmp	0xe2d4


0x57af:	test	al, al
0x57b1:	je	0x5880


0x57b7:	test	rbx, rbx
0x57ba:	je	0x57c6


0x57c6:	mov	edi, 0x28
0x57cb:	call	0xcb90


0x57bc:	cmp	dword ptr [rbx + 8], 1
0x57c0:	je	0x59e8


0x59e8:	mov	eax, dword ptr [rbx + 0xc]
0x59eb:	xor	eax, ebp
0x59ed:	test	eax, 0x20000000
0x59f2:	je	0x57e8


0x57e8:	mov	rcx, qword ptr [rbx + 0x20]
0x57ec:	cmp	rcx, qword ptr [rbx + 0x18]
0x57f0:	mov	rdi, qword ptr [rbx + 0x10]
0x57f4:	je	0x5a00


0x59f8:	jmp	0x57c6


0x5a00:	test	rdi, rdi
0x5a03:	je	0x5a40


0x57fa:	lea	rax, [rcx + rcx*8]
0x57fe:	lea	r15, [rcx + 1]
0x5802:	test	ebp, 0x8000000
0x5808:	lea	r14, [rdi + rax*8]
0x580c:	mov	qword ptr [rbx + 0x20], r15
0x5810:	mov	dword ptr [r14], ebp
0x5813:	je	0x59a0


0x5a40:	test	rcx, rcx
0x5a43:	mov	eax, 1
0x5a48:	mov	edx, 0x48
0x5a4d:	cmove	rcx, rax
0x5a51:	mov	rax, rdx
0x5a54:	xor	esi, esi
0x5a56:	mul	rcx
0x5a59:	jo	0x5ae4


0x5a05:	movabs	rax, 0x12f684bda12f683
0x5a0f:	cmp	rcx, rax
0x5a12:	ja	0x5a69


0x59a0:	and	ebp, 0x4000000
0x59a6:	je	0x59ce


0x5819:	mov	r12d, ebp
0x581c:	sar	r12d, 3
0x5820:	and	r12d, 2
0x5824:	or	r12d, 9
0x5828:	and	ebp, 8
0x582b:	je	0x5a70


0x5ae4:	mov	esi, 1
0x5ae9:	jmp	0x5a5f


0x5a5f:	test	rax, rax
0x5a62:	js	0x5a69


0x5a14:	mov	rax, rcx
0x5a17:	shr	rax, 1
0x5a1a:	lea	rcx, [rcx + rax + 1]
0x5a1f:	lea	rsi, [rcx + rcx*8]
0x5a23:	mov	qword ptr [rbx + 0x18], rcx
0x5a27:	shl	rsi, 3
0x5a2b:	call	0xca40


0x5a69:	call	0xcc30


0x59ce:	mov	qword ptr [r14 + 8], r13
0x59d2:	add	rsp, 8
0x59d6:	pop	rbx
0x59d7:	pop	rbp
0x59d8:	pop	r12
0x59da:	pop	r13
0x59dc:	pop	r14
0x59de:	pop	r15
0x59e0:	ret	


0x59a8:	mov	rdi, r13
0x59ab:	call	0xcc10


0x5a70:	lea	rdi, [r14 + 8]
0x5a74:	mov	edx, r12d
0x5a77:	mov	rsi, r13
0x5a7a:	call	0x1ea40


0x5831:	mov	rdi, r13
0x5834:	call	0x2530


0x5a64:	test	rsi, rsi
0x5a67:	je	0x5a1f


0x5a1f:	lea	rsi, [rcx + rcx*8]
0x5a23:	mov	qword ptr [rbx + 0x18], rcx
0x5a27:	shl	rsi, 3
0x5a2b:	call	0xca40


0x5839:	test	rax, rax
0x583c:	je	0x5868


0x5868:	lea	rax, [r15 - 1]
0x586c:	mov	qword ptr [rbx + 0x20], rax
0x5870:	add	rsp, 8
0x5874:	pop	rbx
0x5875:	pop	rbp
0x5876:	pop	r12
0x5878:	pop	r13
0x587a:	pop	r14
0x587c:	pop	r15
0x587e:	ret	


0x583e:	cmp	byte ptr [r13 + rax - 1], 0x2f
0x5844:	lea	rbp, [rax - 1]
0x5848:	je	0x5863


0x5863:	test	rbp, rbp
0x5866:	jne	0x5850


0x584a:	jmp	0x5a92


0x5850:	cmp	byte ptr [r13 + rbp - 1], 0x2f
0x5856:	lea	rax, [rbp - 1]
0x585a:	jne	0x5a98


0x5a92:	mov	rbp, rax
0x5a95:	nop	dword ptr [rax]
0x5a98:	lea	rdi, [rbp + 7]
0x5a9c:	call	0xc9e0


0x5860:	mov	rbp, rax
0x5863:	test	rbp, rbp
0x5866:	jne	0x5850


0x5a98:	lea	rdi, [rbp + 7]
0x5a9c:	call	0xc9e0


0x5aa1:	mov	rdx, rbp
0x5aa4:	mov	r15, rax
0x5aa7:	mov	rsi, r13
0x5aaa:	mov	rdi, rax
0x5aad:	add	rbp, r15
0x5ab0:	call	0x2710


0x5ab5:	lea	rdi, [r14 + 8]
0x5ab9:	mov	eax, 0x3f29
0x5abe:	mov	dword ptr [rbp], 0x2a2e2f28
0x5ac5:	mov	word ptr [rbp + 4], ax
0x5ac9:	mov	byte ptr [rbp + 6], 0
0x5acd:	mov	edx, r12d
0x5ad0:	mov	rsi, r15
0x5ad3:	call	0x1ea40


0x5ad8:	mov	rdi, r15
0x5adb:	mov	ebp, eax
0x5add:	call	0x2a10


0x5ae2:	jmp	0x5a81


0x5a81:	test	ebp, ebp
0x5a83:	je	0x5870


0x5a89:	mov	r15, qword ptr [rbx + 0x20]
0x5a8d:	jmp	0x5868


0x5a7f:	mov	ebp, eax
0x5a81:	test	ebp, ebp
0x5a83:	je	0x5870


0x59b0:	mov	edi, 0x10
0x59b5:	mov	r13, rax
0x59b8:	call	0xc9e0


0x59bd:	mov	rdx, qword ptr [r12 + 8]
0x59c2:	mov	qword ptr [rax + 8], r13
0x59c6:	mov	qword ptr [r12 + 8], rax
0x59cb:	mov	qword ptr [rax], rdx
0x59ce:	mov	qword ptr [r14 + 8], r13
0x59d2:	add	rsp, 8
0x59d6:	pop	rbx
0x59d7:	pop	rbp
0x59d8:	pop	r12
0x59da:	pop	r13
0x59dc:	pop	r14
0x59de:	pop	r15
0x59e0:	ret	


0x5a30:	mov	rcx, qword ptr [rbx + 0x20]
0x5a34:	mov	rdi, rax
0x5a37:	mov	qword ptr [rbx + 0x10], rax
0x5a3b:	jmp	0x57fa


0x57d0:	mov	rbx, rax
0x57d3:	mov	dword ptr [rax + 8], 1
0x57da:	mov	dword ptr [rax + 0xc], ebp
0x57dd:	mov	rax, qword ptr [r12]
0x57e1:	mov	qword ptr [r12], rbx
0x57e5:	mov	qword ptr [rbx], rax
0x57e8:	mov	rcx, qword ptr [rbx + 0x20]
0x57ec:	cmp	rcx, qword ptr [rbx + 0x18]
0x57f0:	mov	rdi, qword ptr [rbx + 0x10]
0x57f4:	je	0x5a00


0xe97f:	test	rax, rax
0xe982:	je	0xe9b3


0xe984:	mov	rdi, rax
0xe987:	call	0x2a10


0xe98c:	jmp	0xe945


0x1f706:	mov	r12d, eax
0x1f709:	call	0x2410


0x1f70e:	mov	r13d, dword ptr [rax]
0x1f711:	mov	rbp, rax
0x1f714:	mov	edi, ebx
0x1f716:	call	0x2640


0x1f71b:	mov	ebx, r12d
0x1f71e:	mov	dword ptr [rbp], r13d
0x1f722:	add	rsp, 8
0x1f726:	mov	eax, ebx
0x1f728:	pop	rbx
0x1f729:	pop	rbp
0x1f72a:	pop	r12
0x1f72c:	pop	r13
0x1f72e:	ret	


0x4a34:	mov	rax, -1
0x4a3b:	jmp	0x4a06


0x1fa0d:	add	rbx, 1
0x1fa11:	cmp	rbp, rbx
0x1fa14:	jne	0x1fa00


0x1fa00:	mov	rdx, r15
0x1fa03:	mov	rsi, r14
0x1fa06:	mov	edi, r13d
0x1fa09:	call	qword ptr [r12 + rbx*8]


0x87f8:	mov	rbx, qword ptr [rbx + 8]
0x87fc:	test	rbx, rbx
0x87ff:	jne	0x87f0


0x8801:	mov	rax, qword ptr [r12 + 8]
0x8806:	add	rbp, 0x10
0x880a:	cmp	rax, rbp
0x880d:	ja	0x87d8


0x87f0:	mov	rdi, qword ptr [rbx]
0x87f3:	call	qword ptr [r12 + 0x40]


0x8752:	mov	rax, qword ptr [rbp + 0x40]
0x8756:	mov	rdx, qword ptr [rbx + 8]
0x875a:	mov	rcx, qword ptr [rbp + 0x48]
0x875e:	mov	qword ptr [rbx], 0
0x8765:	test	rdx, rdx
0x8768:	mov	qword ptr [rbx + 8], rcx
0x876c:	mov	qword ptr [rbp + 0x48], rbx
0x8770:	mov	rbx, rdx
0x8773:	jne	0x8748


0x84c9:	test	al, al
0x84cb:	je	0x84e4


0x84cd:	mov	rbx, qword ptr [rbx + 8]
0x84d1:	add	rbp, 1
0x84d5:	test	rbx, rbx
0x84d8:	jne	0x84c0


0x84c0:	mov	rdi, qword ptr [rbx]
0x84c3:	mov	rsi, r13
0x84c6:	call	r12


0x10fae:	test	eax, eax
0x10fb0:	jne	0x10fe6


0x10fe6:	pop	rbx
0x10fe7:	pop	rbp
0x10fe8:	pop	r12
0x10fea:	ret	


0x10fc0:	mov	rax, qword ptr [rdx + 0x10]
0x10fc4:	cmp	rax, rbx
0x10fc7:	mov	rbx, rdx
0x10fca:	sete	sil
0x10fce:	test	rax, rax
0x10fd1:	sete	cl
0x10fd4:	or	sil, cl
0x10fd7:	je	0x10f90


0x10fd9:	mov	rsi, rbx
0x10fdc:	mov	rdi, rbp
0x10fdf:	call	r12


0x10fe2:	test	eax, eax
0x10fe4:	je	0x10fb8


0x10fb8:	mov	rdx, qword ptr [rbx]
0x10fbb:	test	rdx, rdx
0x10fbe:	je	0x10fe6


0x5543:	test	eax, eax
0x5545:	sete	cl
0x5548:	test	r12d, 0x40000000
0x554f:	jne	0x5578


0x5551:	movzx	edx, byte ptr [rbx]
0x5554:	test	dl, dl
0x5556:	je	0x5578


0x5578:	pop	rbx
0x5579:	mov	eax, ecx
0x557b:	pop	rbp
0x557c:	pop	r12
0x557e:	pop	r13
0x5580:	pop	r14
0x5582:	ret	


0x5558:	test	eax, eax
0x555a:	je	0x55b7


0x55b7:	mov	ecx, 1
0x55bc:	pop	rbx
0x55bd:	mov	eax, ecx
0x55bf:	pop	rbp
0x55c0:	pop	r12
0x55c2:	pop	r13
0x55c4:	pop	r14
0x55c6:	ret	


0x5598:	cmp	al, 0x2f
0x559a:	je	0x5588


0x556d:	test	al, al
0x556f:	mov	edx, eax
0x5571:	mov	rbx, rbp
0x5574:	jne	0x5560


0x5588:	movzx	eax, byte ptr [rbp + 1]
0x558c:	mov	rbx, rbp
0x558f:	add	rbp, 1
0x5593:	nop	dword ptr [rax + rax]
0x5598:	cmp	al, 0x2f
0x559a:	je	0x5588


0x559c:	mov	edx, r12d
0x559f:	mov	rsi, rbp
0x55a2:	mov	rdi, r14
0x55a5:	call	r13


0x5576:	xor	ecx, ecx
0x5578:	pop	rbx
0x5579:	mov	eax, ecx
0x557b:	pop	rbp
0x557c:	pop	r12
0x557e:	pop	r13
0x5580:	pop	r14
0x5582:	ret	


0x5560:	cmp	dl, 0x2f
0x5563:	lea	rbp, [rbx + 1]
0x5567:	movzx	eax, byte ptr [rbx + 1]
0x556b:	je	0x5598


0x55a8:	movzx	edx, byte ptr [rbx + 1]
0x55ac:	test	dl, dl
0x55ae:	je	0x55d0


0x55d0:	test	eax, eax
0x55d2:	sete	cl
0x55d5:	jmp	0x5578


0x55b0:	test	eax, eax
0x55b2:	mov	rbx, rbp
0x55b5:	jne	0x5560


0x1100c:	test	eax, eax
0x1100e:	jne	0x1103c


0x11010:	mov	rdx, qword ptr [rbx + 8]
0x11014:	xor	ecx, ecx
0x11016:	test	rdx, rdx
0x11019:	jne	0x11000


0x1103c:	pop	rbx
0x1103d:	pop	rbp
0x1103e:	pop	r12
0x11040:	ret	


0x1101b:	jmp	0x11023


0x11000:	mov	rbx, rdx
0x11003:	mov	rsi, rbx
0x11006:	mov	rdi, rbp
0x11009:	call	r12


0x11023:	mov	rdx, qword ptr [rbx + 0x10]
0x11027:	cmp	rdx, rcx
0x1102a:	je	0x11031


0x11031:	mov	rdx, qword ptr [rbx]
0x11034:	mov	rcx, rbx
0x11037:	test	rdx, rdx
0x1103a:	jne	0x11020


0x1102c:	test	rdx, rdx
0x1102f:	jne	0x11000


0x11020:	mov	rbx, rdx
0x11023:	mov	rdx, qword ptr [rbx + 0x10]
0x11027:	cmp	rdx, rcx
0x1102a:	je	0x11031


0x7dbe:	cmp	qword ptr [rbx + 0x10], rax
0x7dc2:	jbe	0x7dcd


0x7dcd:	call	0x2400


0x7dc4:	shl	rax, 4
0x7dc8:	add	rax, qword ptr [rbx]
0x7dcb:	pop	rbx
0x7dcc:	ret	


0x8034:	cmp	qword ptr [rax], 0
0x8038:	mov	rbx, rax
0x803b:	je	0x8090


0x8090:	mov	qword ptr [rax], r15
0x8093:	add	qword ptr [rbp + 0x18], 1
0x8098:	jmp	0x805d


0x803d:	mov	rax, qword ptr [rbp + 0x48]
0x8041:	test	rax, rax
0x8044:	je	0x80a0


0x805d:	mov	qword ptr [r12], 0
0x8065:	sub	qword ptr [r13 + 0x18], 1
0x806a:	add	r12, 0x10
0x806e:	cmp	qword ptr [r13 + 8], r12
0x8072:	ja	0x7fa8


0x80a0:	mov	edi, 0x10
0x80a5:	call	0x2780


0x8046:	mov	rdx, qword ptr [rax + 8]
0x804a:	mov	qword ptr [rbp + 0x48], rdx
0x804e:	mov	rdx, qword ptr [rbx + 8]
0x8052:	mov	qword ptr [rax], r15
0x8055:	mov	qword ptr [rax + 8], rdx
0x8059:	mov	qword ptr [rbx + 8], rax
0x805d:	mov	qword ptr [r12], 0
0x8065:	sub	qword ptr [r13 + 0x18], 1
0x806a:	add	r12, 0x10
0x806e:	cmp	qword ptr [r13 + 8], r12
0x8072:	ja	0x7fa8


0x80aa:	test	rax, rax
0x80ad:	jne	0x804e


0x80af:	add	rsp, 8
0x80b3:	xor	eax, eax
0x80b5:	pop	rbx
0x80b6:	pop	rbp
0x80b7:	pop	r12
0x80b9:	pop	r13
0x80bb:	pop	r14
0x80bd:	pop	r15
0x80bf:	ret	


0x804e:	mov	rdx, qword ptr [rbx + 8]
0x8052:	mov	qword ptr [rax], r15
0x8055:	mov	qword ptr [rax + 8], rdx
0x8059:	mov	qword ptr [rbx + 8], rax
0x805d:	mov	qword ptr [r12], 0
0x8065:	sub	qword ptr [r13 + 0x18], 1
0x806a:	add	r12, 0x10
0x806e:	cmp	qword ptr [r13 + 8], r12
0x8072:	ja	0x7fa8


0x7fea:	cmp	qword ptr [rax], 0
0x7fee:	mov	rdx, qword ptr [rbx + 8]
0x7ff2:	jne	0x7fc8


0x7ff4:	mov	qword ptr [rax], r15
0x7ff7:	add	qword ptr [rbp + 0x18], 1
0x7ffc:	test	rdx, rdx
0x7fff:	mov	qword ptr [rbx], 0
0x8006:	mov	rax, qword ptr [rbp + 0x48]
0x800a:	mov	qword ptr [rbx + 8], rax
0x800e:	mov	qword ptr [rbp + 0x48], rbx
0x8012:	mov	rbx, rdx
0x8015:	jne	0x7fdc


0x7fc8:	mov	rcx, qword ptr [rax + 8]
0x7fcc:	test	rdx, rdx
0x7fcf:	mov	qword ptr [rbx + 8], rcx
0x7fd3:	mov	qword ptr [rax + 8], rbx
0x7fd7:	mov	rbx, rdx
0x7fda:	je	0x8017


0x8017:	mov	r15, qword ptr [r12]
0x801b:	test	r14b, r14b
0x801e:	mov	qword ptr [r12 + 8], 0
0x8027:	jne	0x806a


0x7df9:	mov	qword ptr [r14], rax
0x7dfc:	mov	rsi, qword ptr [rax]
0x7dff:	test	rsi, rsi
0x7e02:	je	0x7ef0


0x7ef0:	xor	esi, esi
0x7ef2:	pop	rbx
0x7ef3:	mov	rax, rsi
0x7ef6:	pop	rbp
0x7ef7:	pop	r12
0x7ef9:	pop	r13
0x7efb:	pop	r14
0x7efd:	ret	


0x7e08:	cmp	rsi, rbp
0x7e0b:	mov	rbx, rax
0x7e0e:	je	0x7ea3


0x7ea3:	test	r13b, r13b
0x7ea6:	je	0x7e8e


0x7e14:	mov	rdi, rbp
0x7e17:	call	qword ptr [r12 + 0x38]


0x7e8e:	pop	rbx
0x7e8f:	mov	rax, rsi
0x7e92:	pop	rbp
0x7e93:	pop	r12
0x7e95:	pop	r13
0x7e97:	pop	r14
0x7e99:	ret	


0x7ea8:	mov	rax, qword ptr [rbx + 8]
0x7eac:	test	rax, rax
0x7eaf:	je	0x7ee0


0x7ee0:	mov	qword ptr [rbx], 0
0x7ee7:	jmp	0x7e8e


0x7eb1:	movdqu	xmm0, xmmword ptr [rax]
0x7eb5:	movups	xmmword ptr [rbx], xmm0
0x7eb8:	mov	qword ptr [rax], 0
0x7ebf:	mov	rdx, qword ptr [r12 + 0x48]
0x7ec4:	mov	qword ptr [rax + 8], rdx
0x7ec8:	mov	qword ptr [r12 + 0x48], rax
0x7ecd:	mov	rax, rsi
0x7ed0:	pop	rbx
0x7ed1:	pop	rbp
0x7ed2:	pop	r12
0x7ed4:	pop	r13
0x7ed6:	pop	r14
0x7ed8:	ret	


0x82ff:	mov	rsi, qword ptr [rax]
0x8302:	test	rsi, rsi
0x8305:	je	0x832d


0x832d:	xor	esi, esi
0x832f:	pop	rbx
0x8330:	mov	rax, rsi
0x8333:	pop	rbp
0x8334:	pop	r12
0x8336:	ret	


0x8307:	mov	rbx, rax
0x830a:	jmp	0x8313


0x8313:	cmp	rsi, rbp
0x8316:	je	0x832f


0x832f:	pop	rbx
0x8330:	mov	rax, rsi
0x8333:	pop	rbp
0x8334:	pop	r12
0x8336:	ret	


0x8318:	mov	rdi, rbp
0x831b:	call	qword ptr [r12 + 0x38]


0x83b1:	mov	rdx, rax
0x83b4:	mov	rcx, rax
0x83b7:	mov	rax, qword ptr [rdx]
0x83ba:	mov	rdx, qword ptr [rdx + 8]
0x83be:	cmp	rax, rbx
0x83c1:	je	0x83d9


0x83d9:	test	rdx, rdx
0x83dc:	jne	0x8408


0x83de:	mov	rdx, qword ptr [rbp + 8]
0x83e2:	jmp	0x83f0


0x8408:	mov	rax, qword ptr [rdx]
0x840b:	add	rsp, 8
0x840f:	pop	rbx
0x8410:	pop	rbp
0x8411:	ret	


0x83cd:	mov	rax, qword ptr [rdx]
0x83d0:	mov	rdx, qword ptr [rdx + 8]
0x83d4:	cmp	rax, rbx
0x83d7:	jne	0x83c8


0x83f0:	add	rcx, 0x10
0x83f4:	cmp	rdx, rcx
0x83f7:	ja	0x83e8


0x83c8:	test	rdx, rdx
0x83cb:	je	0x83de


0x83f9:	xor	eax, eax
0x83fb:	add	rsp, 8
0x83ff:	pop	rbx
0x8400:	pop	rbp
0x8401:	ret	


0x83e8:	mov	rax, qword ptr [rcx]
0x83eb:	test	rax, rax
0x83ee:	jne	0x83fb


0x83fb:	add	rsp, 8
0x83ff:	pop	rbx
0x8400:	pop	rbp
0x8401:	ret	


0x8b09:	test	rax, rax
0x8b0c:	mov	rdx, rax
0x8b0f:	je	0x8b40


0x8b40:	mov	rax, qword ptr [rbx + 0x18]
0x8b44:	test	rax, rax
0x8b47:	js	0x8bc0


0x8b11:	xor	eax, eax
0x8b13:	test	r13, r13
0x8b16:	je	0x8b1c


0x8bc0:	mov	rdx, rax
0x8bc3:	pxor	xmm1, xmm1
0x8bc7:	and	eax, 1
0x8bca:	shr	rdx, 1
0x8bcd:	or	rdx, rax
0x8bd0:	mov	rax, qword ptr [rbx + 0x10]
0x8bd4:	cvtsi2ss	xmm1, rdx
0x8bd9:	mov	rdx, qword ptr [rbx + 0x28]
0x8bdd:	test	rax, rax
0x8be0:	addss	xmm1, xmm1
0x8be4:	jns	0x8b63


0x8b49:	pxor	xmm1, xmm1
0x8b4d:	mov	rdx, qword ptr [rbx + 0x28]
0x8b51:	cvtsi2ss	xmm1, rax
0x8b56:	mov	rax, qword ptr [rbx + 0x10]
0x8b5a:	test	rax, rax
0x8b5d:	js	0x8bea


0x8b1c:	mov	rcx, qword ptr [rsp + 8]
0x8b21:	xor	rcx, qword ptr fs:[0x28]
0x8b2a:	jne	0x8d4f


0x8b18:	mov	qword ptr [r13], rdx
0x8b1c:	mov	rcx, qword ptr [rsp + 8]
0x8b21:	xor	rcx, qword ptr fs:[0x28]
0x8b2a:	jne	0x8d4f


0x8bea:	mov	rcx, rax
0x8bed:	pxor	xmm0, xmm0
0x8bf1:	shr	rcx, 1
0x8bf4:	and	eax, 1
0x8bf7:	or	rcx, rax
0x8bfa:	cvtsi2ss	xmm0, rcx
0x8bff:	addss	xmm0, xmm0
0x8c03:	jmp	0x8b6c


0x8b63:	pxor	xmm0, xmm0
0x8b67:	cvtsi2ss	xmm0, rax
0x8b6c:	mulss	xmm0, dword ptr [rdx + 8]
0x8b71:	ucomiss	xmm1, xmm0
0x8b74:	ja	0x8c10


0x8b30:	add	rsp, 0x18
0x8b34:	pop	rbx
0x8b35:	pop	rbp
0x8b36:	pop	r12
0x8b38:	pop	r13
0x8b3a:	ret	


0x8d4f:	call	0x2560


0x8b6c:	mulss	xmm0, dword ptr [rdx + 8]
0x8b71:	ucomiss	xmm1, xmm0
0x8b74:	ja	0x8c10


0x8b7a:	mov	r12, qword ptr [rsp]
0x8b7e:	cmp	qword ptr [r12], 0
0x8b83:	je	0x8cb8


0x8c10:	lea	rdi, [rbx + 0x28]
0x8c14:	call	0x7f00


0x8cb8:	mov	qword ptr [r12], rbp
0x8cbc:	mov	eax, 1
0x8cc1:	add	qword ptr [rbx + 0x20], 1
0x8cc6:	add	qword ptr [rbx + 0x18], 1
0x8ccb:	jmp	0x8b1c


0x8b89:	mov	rax, qword ptr [rbx + 0x48]
0x8b8d:	test	rax, rax
0x8b90:	je	0x8cd0


0x8cd0:	mov	edi, 0x10
0x8cd5:	call	0x2780


0x8b96:	mov	rdx, qword ptr [rax + 8]
0x8b9a:	mov	qword ptr [rbx + 0x48], rdx
0x8b9e:	mov	rdx, qword ptr [r12 + 8]
0x8ba3:	mov	qword ptr [rax], rbp
0x8ba6:	mov	qword ptr [rax + 8], rdx
0x8baa:	mov	qword ptr [r12 + 8], rax
0x8baf:	mov	eax, 1
0x8bb4:	add	qword ptr [rbx + 0x20], 1
0x8bb9:	jmp	0x8b1c


0x8cda:	test	rax, rax
0x8cdd:	jne	0x8b9e


0x8ce3:	mov	eax, 0xffffffff
0x8ce8:	jmp	0x8b1c


0x8b9e:	mov	rdx, qword ptr [r12 + 8]
0x8ba3:	mov	qword ptr [rax], rbp
0x8ba6:	mov	qword ptr [rax + 8], rdx
0x8baa:	mov	qword ptr [r12 + 8], rax
0x8baf:	mov	eax, 1
0x8bb4:	add	qword ptr [rbx + 0x20], 1
0x8bb9:	jmp	0x8b1c


0x8c19:	mov	rax, qword ptr [rbx + 0x10]
0x8c1d:	mov	rdx, qword ptr [rbx + 0x28]
0x8c21:	test	rax, rax
0x8c24:	movss	xmm2, dword ptr [rdx + 8]
0x8c29:	js	0x8cf0


0x8cf0:	mov	rcx, rax
0x8cf3:	pxor	xmm0, xmm0
0x8cf7:	shr	rcx, 1
0x8cfa:	and	eax, 1
0x8cfd:	or	rcx, rax
0x8d00:	cvtsi2ss	xmm0, rcx
0x8d05:	addss	xmm0, xmm0
0x8d09:	jmp	0x8c38


0x8c2f:	pxor	xmm0, xmm0
0x8c33:	cvtsi2ss	xmm0, rax
0x8c38:	mov	rax, qword ptr [rbx + 0x18]
0x8c3c:	test	rax, rax
0x8c3f:	js	0x8d10


0x8c38:	mov	rax, qword ptr [rbx + 0x18]
0x8c3c:	test	rax, rax
0x8c3f:	js	0x8d10


0x8d10:	mov	rcx, rax
0x8d13:	pxor	xmm1, xmm1
0x8d17:	shr	rcx, 1
0x8d1a:	and	eax, 1
0x8d1d:	or	rcx, rax
0x8d20:	cvtsi2ss	xmm1, rcx
0x8d25:	addss	xmm1, xmm1
0x8d29:	jmp	0x8c4e


0x8c45:	pxor	xmm1, xmm1
0x8c49:	cvtsi2ss	xmm1, rax
0x8c4e:	movaps	xmm3, xmm2
0x8c51:	mulss	xmm3, xmm0
0x8c55:	ucomiss	xmm1, xmm3
0x8c58:	jbe	0x8b7a


0x8c4e:	movaps	xmm3, xmm2
0x8c51:	mulss	xmm3, xmm0
0x8c55:	ucomiss	xmm1, xmm3
0x8c58:	jbe	0x8b7a


0x8c5e:	cmp	byte ptr [rdx + 0x10], 0
0x8c62:	mulss	xmm0, dword ptr [rdx + 0xc]
0x8c67:	jne	0x8c6d


0x8c69:	mulss	xmm0, xmm2
0x8c6d:	ucomiss	xmm0, dword ptr [rip + 0x18d58]
0x8c74:	jae	0x8ce3


0x8c6d:	ucomiss	xmm0, dword ptr [rip + 0x18d58]
0x8c74:	jae	0x8ce3


0x8c76:	ucomiss	xmm0, dword ptr [rip + 0x18d53]
0x8c7d:	jae	0x8d30


0x8c83:	cvttss2si	rsi, xmm0
0x8c88:	mov	rdi, rbx
0x8c8b:	call	0x8890


0x8d30:	subss	xmm0, dword ptr [rip + 0x18c98]
0x8d38:	movabs	rax, 0x8000000000000000
0x8d42:	cvttss2si	rsi, xmm0
0x8d47:	xor	rsi, rax
0x8d4a:	jmp	0x8c88


0x8c88:	mov	rdi, rbx
0x8c8b:	call	0x8890


0x8c90:	test	al, al
0x8c92:	je	0x8ce3


0x8c94:	xor	ecx, ecx
0x8c96:	mov	rdx, r12
0x8c99:	mov	rsi, rbp
0x8c9c:	mov	rdi, rbx
0x8c9f:	call	0x7de0


0x8d80:	cmp	eax, -1
0x8d83:	je	0x8db0


0x8db0:	xor	ebx, ebx
0x8db2:	jmp	0x8d8d


0x8d85:	test	eax, eax
0x8d87:	jne	0x8d8d


0x8d8d:	mov	rcx, qword ptr [rsp + 8]
0x8d92:	xor	rcx, qword ptr fs:[0x28]
0x8d9b:	mov	rax, rbx
0x8d9e:	jne	0x8db4


0x8d89:	mov	rbx, qword ptr [rsp]
0x8d8d:	mov	rcx, qword ptr [rsp + 8]
0x8d92:	xor	rcx, qword ptr fs:[0x28]
0x8d9b:	mov	rax, rbx
0x8d9e:	jne	0x8db4


0x8da0:	add	rsp, 0x10
0x8da4:	pop	rbx
0x8da5:	ret	


0x8db4:	call	0x2560


0x8ca4:	test	rax, rax
0x8ca7:	je	0x8b7a


0x8de8:	test	rax, rax
0x8deb:	mov	rbp, rax
0x8dee:	je	0x8dff


0x8dff:	mov	rcx, qword ptr [rsp + 8]
0x8e04:	xor	rcx, qword ptr fs:[0x28]
0x8e0d:	mov	rax, rbp
0x8e10:	jne	0x8fbe


0x8df0:	mov	rax, qword ptr [rsp]
0x8df4:	sub	qword ptr [rbx + 0x20], 1
0x8df9:	cmp	qword ptr [rax], 0
0x8dfd:	je	0x8e20


0x8e16:	add	rsp, 0x10
0x8e1a:	pop	rbx
0x8e1b:	pop	rbp
0x8e1c:	pop	r12
0x8e1e:	ret	


0x8fbe:	call	0x2560


0x8e20:	mov	rax, qword ptr [rbx + 0x18]
0x8e24:	sub	rax, 1
0x8e28:	test	rax, rax
0x8e2b:	mov	qword ptr [rbx + 0x18], rax
0x8e2f:	js	0x8f30


0x8f30:	mov	rdx, rax
0x8f33:	pxor	xmm0, xmm0
0x8f37:	shr	rdx, 1
0x8f3a:	and	eax, 1
0x8f3d:	or	rdx, rax
0x8f40:	cvtsi2ss	xmm0, rdx
0x8f45:	addss	xmm0, xmm0
0x8f49:	jmp	0x8e3e


0x8e35:	pxor	xmm0, xmm0
0x8e39:	cvtsi2ss	xmm0, rax
0x8e3e:	mov	rax, qword ptr [rbx + 0x10]
0x8e42:	mov	rdx, qword ptr [rbx + 0x28]
0x8e46:	test	rax, rax
0x8e49:	js	0x8f10


0x8e3e:	mov	rax, qword ptr [rbx + 0x10]
0x8e42:	mov	rdx, qword ptr [rbx + 0x28]
0x8e46:	test	rax, rax
0x8e49:	js	0x8f10


0x8f10:	mov	rcx, rax
0x8f13:	pxor	xmm1, xmm1
0x8f17:	shr	rcx, 1
0x8f1a:	and	eax, 1
0x8f1d:	or	rcx, rax
0x8f20:	cvtsi2ss	xmm1, rcx
0x8f25:	addss	xmm1, xmm1
0x8f29:	jmp	0x8e58


0x8e4f:	pxor	xmm1, xmm1
0x8e53:	cvtsi2ss	xmm1, rax
0x8e58:	mulss	xmm1, dword ptr [rdx]
0x8e5c:	ucomiss	xmm1, xmm0
0x8e5f:	jbe	0x8dff


0x8e58:	mulss	xmm1, dword ptr [rdx]
0x8e5c:	ucomiss	xmm1, xmm0
0x8e5f:	jbe	0x8dff


0x8e61:	lea	rdi, [rbx + 0x28]
0x8e65:	call	0x7f00


0x8e6a:	mov	rax, qword ptr [rbx + 0x10]
0x8e6e:	mov	rdx, qword ptr [rbx + 0x28]
0x8e72:	test	rax, rax
0x8e75:	js	0x8fa0


0x8fa0:	mov	rcx, rax
0x8fa3:	pxor	xmm0, xmm0
0x8fa7:	shr	rcx, 1
0x8faa:	and	eax, 1
0x8fad:	or	rcx, rax
0x8fb0:	cvtsi2ss	xmm0, rcx
0x8fb5:	addss	xmm0, xmm0
0x8fb9:	jmp	0x8e84


0x8e7b:	pxor	xmm0, xmm0
0x8e7f:	cvtsi2ss	xmm0, rax
0x8e84:	mov	rax, qword ptr [rbx + 0x18]
0x8e88:	test	rax, rax
0x8e8b:	js	0x8f80


0x8e84:	mov	rax, qword ptr [rbx + 0x18]
0x8e88:	test	rax, rax
0x8e8b:	js	0x8f80


0x8f80:	mov	rcx, rax
0x8f83:	pxor	xmm1, xmm1
0x8f87:	shr	rcx, 1
0x8f8a:	and	eax, 1
0x8f8d:	or	rcx, rax
0x8f90:	cvtsi2ss	xmm1, rcx
0x8f95:	addss	xmm1, xmm1
0x8f99:	jmp	0x8e9a


0x8e91:	pxor	xmm1, xmm1
0x8e95:	cvtsi2ss	xmm1, rax
0x8e9a:	movss	xmm2, dword ptr [rdx]
0x8e9e:	mulss	xmm2, xmm0
0x8ea2:	ucomiss	xmm2, xmm1
0x8ea5:	jbe	0x8dff


0x8e9a:	movss	xmm2, dword ptr [rdx]
0x8e9e:	mulss	xmm2, xmm0
0x8ea2:	ucomiss	xmm2, xmm1
0x8ea5:	jbe	0x8dff


0x8eab:	cmp	byte ptr [rdx + 0x10], 0
0x8eaf:	mulss	xmm0, dword ptr [rdx + 4]
0x8eb4:	je	0x8f70


0x8f70:	mulss	xmm0, dword ptr [rdx + 8]
0x8f75:	jmp	0x8eba


0x8eba:	ucomiss	xmm0, dword ptr [rip + 0x18b0f]
0x8ec1:	jae	0x8f50


0x8ec7:	cvttss2si	rsi, xmm0
0x8ecc:	mov	rdi, rbx
0x8ecf:	call	0x8890


0x8f50:	subss	xmm0, dword ptr [rip + 0x18a78]
0x8f58:	movabs	rax, 0x8000000000000000
0x8f62:	cvttss2si	rsi, xmm0
0x8f67:	xor	rsi, rax
0x8f6a:	jmp	0x8ecc


0x8ecc:	mov	rdi, rbx
0x8ecf:	call	0x8890


0x8ed4:	test	al, al
0x8ed6:	jne	0x8dff


0x8edc:	mov	rdi, qword ptr [rbx + 0x48]
0x8ee0:	test	rdi, rdi
0x8ee3:	je	0x8ef9


0x8ef9:	mov	qword ptr [rbx + 0x48], 0
0x8f01:	jmp	0x8dff


0x8ef1:	test	r12, r12
0x8ef4:	mov	rdi, r12
0x8ef7:	jne	0x8ee8


0x8ee8:	mov	r12, qword ptr [rdi + 8]
0x8eec:	call	0x2a10


0x8320:	test	al, al
0x8322:	jne	0x8340


0x8324:	mov	rbx, qword ptr [rbx + 8]
0x8328:	test	rbx, rbx
0x832b:	jne	0x8310


0x8340:	mov	rsi, qword ptr [rbx]
0x8343:	pop	rbx
0x8344:	pop	rbp
0x8345:	mov	rax, rsi
0x8348:	pop	r12
0x834a:	ret	


0x8310:	mov	rsi, qword ptr [rbx]
0x8313:	cmp	rsi, rbp
0x8316:	je	0x832f


0x7e1c:	test	al, al
0x7e1e:	jne	0x7ea0


0x7e24:	mov	rax, qword ptr [rbx + 8]
0x7e28:	test	rax, rax
0x7e2b:	je	0x7ef0


0x7ea0:	mov	rsi, qword ptr [rbx]
0x7ea3:	test	r13b, r13b
0x7ea6:	je	0x7e8e


0x7e31:	mov	rsi, qword ptr [rax]
0x7e34:	cmp	rbp, rsi
0x7e37:	jne	0x7e59


0x7e39:	jmp	0x7e6c


0x7e59:	mov	rdi, rbp
0x7e5c:	call	qword ptr [r12 + 0x38]


0x7e6c:	test	r13b, r13b
0x7e6f:	je	0x7e8e


0x7e71:	mov	rdx, qword ptr [rax + 8]
0x7e75:	mov	qword ptr [rbx + 8], rdx
0x7e79:	mov	qword ptr [rax], 0
0x7e80:	mov	rdx, qword ptr [r12 + 0x48]
0x7e85:	mov	qword ptr [rax + 8], rdx
0x7e89:	mov	qword ptr [r12 + 0x48], rax
0x7e8e:	pop	rbx
0x7e8f:	mov	rax, rsi
0x7e92:	pop	rbp
0x7e93:	pop	r12
0x7e95:	pop	r13
0x7e97:	pop	r14
0x7e99:	ret	


0x7e61:	test	al, al
0x7e63:	je	0x7e40


0x7e40:	mov	rbx, qword ptr [rbx + 8]
0x7e44:	mov	rax, qword ptr [rbx + 8]
0x7e48:	test	rax, rax
0x7e4b:	je	0x7ef0


0x7e65:	mov	rax, qword ptr [rbx + 8]
0x7e69:	mov	rsi, qword ptr [rax]
0x7e6c:	test	r13b, r13b
0x7e6f:	je	0x7e8e


0x7e51:	mov	rsi, qword ptr [rax]
0x7e54:	cmp	rsi, rbp
0x7e57:	je	0x7e6c


0x54f1:	mov	rdi, rbx
0x54f4:	mov	rbx, r13
0x54f7:	call	0x2a10


0x54fc:	test	r13, r13
0x54ff:	jne	0x5438


0x5505:	jmp	0x54aa


0x4cdd:	mov	rdi, rbx
0x4ce0:	pop	rbx
0x4ce1:	jmp	0x2a10


0x4e9c:	mov	rdi, qword ptr [rbx + 8]
0x4ea0:	call	0x2a10


0x4ea5:	mov	rdi, qword ptr [rbx + 0x10]
0x4ea9:	call	0x2a10


0x4eae:	mov	rdi, rbx
0x4eb1:	pop	rbx
0x4eb2:	jmp	0x2a10


0x9d3c:	mov	rdi, qword ptr [rbx + 0x10]
0x9d40:	call	0x2a10


0x9d45:	mov	rdi, rbx
0x9d48:	pop	rbx
0x9d49:	jmp	0x2a10






0xc600:	mov	r13, qword ptr [rbx + 0x10]
0xc604:	mov	r12, qword ptr [rbx + 8]
0xc608:	lea	rsi, [rip + 0x159b7]
0xc60f:	mov	rbx, qword ptr [rbx]
0xc612:	mov	edx, 5
0xc617:	xor	edi, edi
0xc619:	call	0x2510


0xc740:	mov	r9, qword ptr [rbx + 0x10]
0xc744:	mov	r13, qword ptr [rbx + 0x30]
0xc748:	lea	rsi, [rip + 0x15a19]
0xc74f:	mov	r12, qword ptr [rbx + 0x28]
0xc753:	mov	r15, qword ptr [rbx + 0x20]
0xc757:	mov	edx, 5
0xc75c:	mov	r14, qword ptr [rbx + 0x18]
0xc760:	mov	r8, qword ptr [rbx + 8]
0xc764:	xor	edi, edi
0xc766:	mov	qword ptr [rsp + 8], r9
0xc76b:	mov	rbx, qword ptr [rbx]
0xc76e:	mov	qword ptr [rsp], r8
0xc772:	call	0x2510


0xc520:	mov	r10, qword ptr [rbx + 0x40]
0xc524:	mov	r9, qword ptr [rbx + 0x38]
0xc528:	lea	rsi, [rip + 0x15c99]
0xc52f:	mov	rax, qword ptr [rbx + 0x10]
0xc533:	mov	r8, qword ptr [rbx + 8]
0xc537:	mov	edx, 5
0xc53c:	mov	r13, qword ptr [rbx + 0x30]
0xc540:	mov	r12, qword ptr [rbx + 0x28]
0xc544:	mov	r15, qword ptr [rbx + 0x20]
0xc548:	mov	r14, qword ptr [rbx + 0x18]
0xc54c:	mov	rbx, qword ptr [rbx]
0xc54f:	mov	qword ptr [rsp + 0x18], r10
0xc554:	mov	qword ptr [rsp + 0x10], r9
0xc559:	mov	qword ptr [rsp], rax
0xc55d:	mov	qword ptr [rsp + 8], r8
0xc562:	xor	edi, edi
0xc564:	call	0x2510


0xc5b8:	mov	r12, qword ptr [rbx + 8]
0xc5bc:	lea	rsi, [rip + 0x159ec]
0xc5c3:	mov	rbx, qword ptr [rbx]
0xc5c6:	mov	edx, 5
0xc5cb:	xor	edi, edi
0xc5cd:	call	0x2510


0xc4e6:	add	rsp, 0x28
0xc4ea:	pop	rbx
0xc4eb:	pop	rbp
0xc4ec:	pop	r12
0xc4ee:	pop	r13
0xc4f0:	pop	r14
0xc4f2:	pop	r15
0xc4f4:	ret	


0xc6a8:	mov	r15, qword ptr [rbx + 0x20]
0xc6ac:	lea	rsi, [rip + 0x15a65]
0xc6b3:	mov	edx, 5
0xc6b8:	xor	edi, edi
0xc6ba:	mov	r14, qword ptr [rbx + 0x18]
0xc6be:	mov	r13, qword ptr [rbx + 0x10]
0xc6c2:	mov	r12, qword ptr [rbx + 8]
0xc6c6:	mov	rbx, qword ptr [rbx]
0xc6c9:	call	0x2510


0xc6d8:	mov	r8, qword ptr [rbx + 8]
0xc6dc:	mov	r12, qword ptr [rbx + 0x28]
0xc6e0:	lea	rsi, [rip + 0x15a59]
0xc6e7:	mov	r15, qword ptr [rbx + 0x20]
0xc6eb:	mov	r14, qword ptr [rbx + 0x18]
0xc6ef:	mov	edx, 5
0xc6f4:	mov	r13, qword ptr [rbx + 0x10]
0xc6f8:	xor	edi, edi
0xc6fa:	mov	rbx, qword ptr [rbx]
0xc6fd:	mov	qword ptr [rsp], r8
0xc701:	call	0x2510


0xc650:	lea	rsi, [rip + 0x15aa1]
0xc657:	mov	edx, 5
0xc65c:	xor	edi, edi
0xc65e:	mov	r14, qword ptr [rbx + 0x18]
0xc662:	mov	r13, qword ptr [rbx + 0x10]
0xc666:	mov	r12, qword ptr [rbx + 8]
0xc66a:	mov	rbx, qword ptr [rbx]
0xc66d:	call	0x2510


0xc470:	mov	r9, qword ptr [rbx + 0x38]
0xc474:	mov	rax, qword ptr [rbx + 0x10]
0xc478:	lea	rsi, [rip + 0x15d19]
0xc47f:	mov	r8, qword ptr [rbx + 8]
0xc483:	mov	edx, 5
0xc488:	xor	edi, edi
0xc48a:	mov	r13, qword ptr [rbx + 0x30]
0xc48e:	mov	r12, qword ptr [rbx + 0x28]
0xc492:	mov	qword ptr [rsp + 0x10], r9
0xc497:	mov	r15, qword ptr [rbx + 0x20]
0xc49b:	mov	r14, qword ptr [rbx + 0x18]
0xc49f:	mov	qword ptr [rsp], rax
0xc4a3:	mov	qword ptr [rsp + 8], r8
0xc4a8:	mov	rbx, qword ptr [rbx]
0xc4ab:	call	0x2510


0xc578:	mov	rbx, qword ptr [rbx]
0xc57b:	lea	rsi, [rip + 0x15a1d]
0xc582:	mov	edx, 5
0xc587:	xor	edi, edi
0xc589:	call	0x2510


0x19b12:	cmp	qword ptr [rsp + 0x70], rbp
0x19b17:	jle	0x1964f


0x19b84:	cmp	qword ptr [rsp + 0x90], rbp
0x19b8c:	jg	0x1a029


0x195ee:	cmp	qword ptr [rsp + 0x70], rbp
0x195f3:	jle	0x1964f


0x1964f:	cmp	qword ptr [rsp + 0x70], rbp
0x19654:	jne	0x19698


0x19b1d:	mov	rax, qword ptr [rsp + 0x78]
0x19b22:	mov	rdi, qword ptr [rsp + 0xb0]
0x19b2a:	mov	rsi, qword ptr [rsp + 0x68]
0x19b2f:	movzx	eax, byte ptr [rax + rbp]
0x19b33:	movzx	edx, byte ptr [rdi + rax]
0x19b37:	lea	rax, [rbp + 1]
0x19b3b:	cmp	byte ptr [rsi + rdx], 0
0x19b3f:	jne	0x19698


0x19b92:	xor	ecx, ecx
0x19b94:	mov	rax, rbp
0x19b97:	mov	rdi, qword ptr [rsp + 0x68]
0x19b9c:	mov	rsi, qword ptr [rsp + 0xb0]
0x19ba4:	mov	r9, qword ptr [rsp + 0x90]
0x19bac:	mov	r10, qword ptr [rsp + 0x78]
0x19bb1:	mov	r8, qword ptr [rsp + 0x88]
0x19bb9:	jmp	0x19bd2


0x195f5:	mov	rax, qword ptr [rsp + 0x78]
0x195fa:	mov	rdi, qword ptr [rsp + 0x68]
0x195ff:	movzx	edx, byte ptr [rax + rbp]
0x19603:	lea	rax, [rbp + 1]
0x19607:	cmp	byte ptr [rdi + rdx], 0
0x1960b:	jne	0x19698


0x19656:	xor	eax, eax
0x19658:	mov	rsi, qword ptr [rsp + 0x70]
0x1965d:	cmp	qword ptr [rsp + 0x88], rsi
0x19665:	jle	0x19670


0x19b45:	mov	rsi, qword ptr [rsp + 0x68]
0x19b4a:	mov	rdi, qword ptr [rsp + 0xb0]
0x19b52:	mov	rcx, qword ptr [rsp + 0x70]
0x19b57:	mov	r8, qword ptr [rsp + 0x78]
0x19b5c:	jmp	0x19b77


0x19bd2:	xor	edx, edx
0x19bd4:	cmp	r8, rax
0x19bd7:	jle	0x19bde


0x19611:	mov	rsi, qword ptr [rsp + 0x68]
0x19616:	mov	rcx, qword ptr [rsp + 0x70]
0x1961b:	mov	rdi, qword ptr [rsp + 0x78]
0x19620:	jmp	0x1963a


0x19670:	mov	rsi, qword ptr [rsp + 0xb0]
0x19678:	test	rsi, rsi
0x1967b:	je	0x19681


0x19667:	mov	rax, qword ptr [rsp + 0x78]
0x1966c:	movzx	eax, byte ptr [rax + rsi]
0x19670:	mov	rsi, qword ptr [rsp + 0xb0]
0x19678:	test	rsi, rsi
0x1967b:	je	0x19681


0x19b77:	cmp	rcx, rax
0x19b7a:	mov	rbp, rax
0x19b7d:	jne	0x19b60


0x19bde:	test	rsi, rsi
0x19be1:	je	0x19be7


0x19bd9:	movzx	edx, byte ptr [r10 + rax]
0x19bde:	test	rsi, rsi
0x19be1:	je	0x19be7


0x1963a:	cmp	rcx, rax
0x1963d:	mov	rbp, rax
0x19640:	jne	0x19628


0x19681:	mov	rdi, qword ptr [rsp + 0x68]
0x19686:	cmp	byte ptr [rdi + rax], 0
0x1968a:	je	0x1a029


0x1967d:	movzx	eax, byte ptr [rsi + rax]
0x19681:	mov	rdi, qword ptr [rsp + 0x68]
0x19686:	cmp	byte ptr [rdi + rax], 0
0x1968a:	je	0x1a029


0x19b7f:	jmp	0x19642


0x19b60:	movzx	eax, byte ptr [r8 + rax]
0x19b65:	movzx	edx, byte ptr [rdi + rax]
0x19b69:	lea	rax, [rbp + 1]
0x19b6d:	cmp	byte ptr [rsi + rdx], 0
0x19b71:	jne	0x1a7d1


0x19be7:	cmp	byte ptr [rdi + rdx], 0
0x19beb:	je	0x19bc0


0x19be3:	movzx	edx, byte ptr [rsi + rdx]
0x19be7:	cmp	byte ptr [rdi + rdx], 0
0x19beb:	je	0x19bc0


0x19642:	mov	rax, qword ptr [rsp + 0x70]
0x19647:	mov	qword ptr [rsp + 0xd8], rax
0x1964f:	cmp	qword ptr [rsp + 0x70], rbp
0x19654:	jne	0x19698


0x19628:	movzx	edx, byte ptr [rdi + rax]
0x1962c:	lea	rax, [rax + 1]
0x19630:	cmp	byte ptr [rsi + rdx], 0
0x19634:	jne	0x1a7d1


0x19690:	mov	rbp, qword ptr [rsp + 0x70]
0x19695:	nop	dword ptr [rax]
0x19698:	mov	edx, dword ptr [rsp + 0x280]
0x1969f:	mov	rdi, qword ptr [rsp]
0x196a3:	mov	rsi, rbp
0x196a6:	call	0x14750


0x1a7d1:	mov	qword ptr [rsp + 0xd8], rbp
0x1a7d9:	jmp	0x19698


0x19bc0:	sub	rax, 1
0x19bc4:	mov	ecx, 1
0x19bc9:	cmp	rax, r9
0x19bcc:	jl	0x1a5b0


0x19bed:	test	cl, cl
0x19bef:	je	0x19698


0x1a5b0:	mov	qword ptr [rsp + 0xd8], rax
0x1a5b8:	mov	rdi, qword ptr [rsp + 0x1d8]
0x1a5c0:	mov	dword ptr [rsp + 0x5c], 1
0x1a5c8:	jmp	0x19c18


0x19bf5:	mov	qword ptr [rsp + 0xd8], rax
0x19bfd:	mov	rbp, rax
0x19c00:	jmp	0x19698


0xc58e:	add	rsp, 0x28
0xc592:	mov	rcx, rbx
0xc595:	mov	rdi, rbp
0xc598:	pop	rbx
0xc599:	pop	rbp
0xc59a:	pop	r12
0xc59c:	pop	r13
0xc59e:	pop	r14
0xc5a0:	pop	r15
0xc5a2:	mov	rdx, rax
0xc5a5:	mov	esi, 1
0xc5aa:	xor	eax, eax
0xc5ac:	jmp	0x2970


0xc4b0:	sub	rsp, 8
0xc4b4:	mov	r9, qword ptr [rsp + 0x18]
0xc4b9:	mov	rdx, rax
0xc4bc:	mov	rcx, rbx
0xc4bf:	mov	esi, 1
0xc4c4:	mov	rdi, rbp
0xc4c7:	xor	eax, eax
0xc4c9:	push	r9
0xc4cb:	push	r13
0xc4cd:	push	r12
0xc4cf:	push	r15
0xc4d1:	push	r14
0xc4d3:	mov	r9, qword ptr [rsp + 0x30]
0xc4d8:	mov	r8, qword ptr [rsp + 0x38]
0xc4dd:	call	0x2970


0xc672:	sub	rsp, 8
0xc676:	push	r14
0xc678:	mov	rdx, rax
0xc67b:	mov	r9, r13
0xc67e:	mov	r8, r12
0xc681:	mov	rcx, rbx
0xc684:	mov	rdi, rbp
0xc687:	mov	esi, 1
0xc68c:	xor	eax, eax
0xc68e:	call	0x2970


0xc693:	pop	rax
0xc694:	pop	rdx
0xc695:	add	rsp, 0x28
0xc699:	pop	rbx
0xc69a:	pop	rbp
0xc69b:	pop	r12
0xc69d:	pop	r13
0xc69f:	pop	r14
0xc6a1:	pop	r15
0xc6a3:	ret	


0xc706:	sub	rsp, 8
0xc70a:	mov	r9, r13
0xc70d:	push	r12
0xc70f:	push	r15
0xc711:	push	r14
0xc713:	mov	r8, qword ptr [rsp + 0x20]
0xc718:	mov	rcx, rbx
0xc71b:	mov	rdx, rax
0xc71e:	mov	rdi, rbp
0xc721:	mov	esi, 1
0xc726:	xor	eax, eax
0xc728:	call	0x2970


0xc72d:	add	rsp, 0x20
0xc731:	add	rsp, 0x28
0xc735:	pop	rbx
0xc736:	pop	rbp
0xc737:	pop	r12
0xc739:	pop	r13
0xc73b:	pop	r14
0xc73d:	pop	r15
0xc73f:	ret	


0xc6ce:	push	r15
0xc6d0:	jmp	0xc676


0xc676:	push	r14
0xc678:	mov	rdx, rax
0xc67b:	mov	r9, r13
0xc67e:	mov	r8, r12
0xc681:	mov	rcx, rbx
0xc684:	mov	rdi, rbp
0xc687:	mov	esi, 1
0xc68c:	xor	eax, eax
0xc68e:	call	0x2970


0xc5d2:	add	rsp, 0x28
0xc5d6:	mov	r8, r12
0xc5d9:	mov	rcx, rbx
0xc5dc:	mov	rdi, rbp
0xc5df:	mov	rdx, rax
0xc5e2:	mov	esi, 1
0xc5e7:	pop	rbx
0xc5e8:	pop	rbp
0xc5e9:	pop	r12
0xc5eb:	pop	r13
0xc5ed:	pop	r14
0xc5ef:	pop	r15
0xc5f1:	xor	eax, eax
0xc5f3:	jmp	0x2970


0xc777:	push	r13
0xc779:	push	r12
0xc77b:	push	r15
0xc77d:	push	r14
0xc77f:	mov	r9, qword ptr [rsp + 0x28]
0xc784:	jmp	0xc713


0xc713:	mov	r8, qword ptr [rsp + 0x20]
0xc718:	mov	rcx, rbx
0xc71b:	mov	rdx, rax
0xc71e:	mov	rdi, rbp
0xc721:	mov	esi, 1
0xc726:	xor	eax, eax
0xc728:	call	0x2970


0xc61e:	add	rsp, 0x28
0xc622:	mov	r9, r13
0xc625:	mov	r8, r12
0xc628:	mov	rcx, rbx
0xc62b:	mov	rdi, rbp
0xc62e:	mov	rdx, rax
0xc631:	pop	rbx
0xc632:	pop	rbp
0xc633:	pop	r12
0xc635:	pop	r13
0xc637:	pop	r14
0xc639:	pop	r15
0xc63b:	mov	esi, 1
0xc640:	xor	eax, eax
0xc642:	jmp	0x2970


0x2db7:	sub	rsp, 8
0x2dbb:	mov	rdi, qword ptr [rip + 0x2252e6]
0x2dc2:	push	0
0x2dc4:	mov	rcx, qword ptr [rip + 0x22524d]
0x2dcb:	lea	r9, [rip + 0x1cdd8]
0x2dd2:	push	rax
0x2dd3:	lea	rax, [rip + 0x1cdff]
0x2dda:	lea	r8, [rip + 0x1cdd9]
0x2de1:	lea	rdx, [rip + 0x1cd1f]
0x2de8:	lea	rsi, [rip + 0x1cc9c]
0x2def:	push	rax
0x2df0:	xor	eax, eax
0x2df2:	call	0xc880


0x2df7:	add	rsp, 0x20
0x2dfb:	xor	edi, edi
0x2dfd:	call	0x2950


0x64f9:	sub	rsp, 8
0x64fd:	mov	eax, dword ptr [rsp + 0x508]
0x6504:	xor	edi, edi
0x6506:	mov	r9d, r14d
0x6509:	push	rax
0x650a:	push	qword ptr [rsp + 0x20]
0x650e:	mov	ecx, ebp
0x6510:	push	qword ptr [rsp + 0x30]
0x6514:	mov	rdx, qword ptr [rsp + 0x20]
0x6519:	mov	r8d, dword ptr [rsp + 0x28]
0x651e:	mov	rsi, qword ptr [rsp + 0x58]
0x6523:	call	0x5e80


0x6528:	add	rsp, 0x20
0x652c:	movsxd	r10, dword ptr [rsp + 0x40]
0x6531:	mov	edx, 0
0x6536:	mov	rcx, r15
0x6539:	not	rcx
0x653c:	test	r10d, r10d
0x653f:	cmovns	rdx, r10
0x6543:	cmp	rax, rdx
0x6546:	mov	r13, rdx
0x6549:	cmovae	r13, rax
0x654d:	cmp	rcx, r13
0x6550:	jbe	0x5f3f


0x6556:	test	r12, r12
0x6559:	jne	0x735b


0x655f:	add	r15, r13
0x6562:	mov	rbp, rbx
0x6565:	jmp	0x5f90


0x735b:	cmp	rax, rdx
0x735e:	jae	0x73b7


0x7360:	movsxd	rdx, r10d
0x7363:	mov	rdi, rdx
0x7366:	sub	rdi, rax
0x7369:	mov	eax, dword ptr [rsp + 8]
0x736d:	cmp	eax, 0x30
0x7370:	je	0x775a


0x73b7:	sub	rsp, 8
0x73bb:	mov	r9d, r14d
0x73be:	mov	ecx, ebp
0x73c0:	mov	eax, dword ptr [rsp + 0x508]
0x73c7:	mov	rdi, r12
0x73ca:	push	rax
0x73cb:	push	qword ptr [rsp + 0x20]
0x73cf:	push	qword ptr [rsp + 0x30]
0x73d3:	mov	r8d, dword ptr [rsp + 0x28]
0x73d8:	mov	rdx, qword ptr [rsp + 0x20]
0x73dd:	mov	rsi, qword ptr [rsp + 0x58]
0x73e2:	call	0x5e80


0x775a:	test	rdi, rdi
0x775d:	je	0x73b7


0x7376:	cmp	eax, 0x2b
0x7379:	je	0x775a


0x7763:	xor	edx, edx
0x7765:	mov	dword ptr [rsp + 0x34], ebp
0x7769:	mov	qword ptr [rsp + 0x40], rbx
0x776e:	mov	rbp, rdi
0x7771:	mov	rbx, rdx
0x7774:	nop	dword ptr [rax]
0x7778:	mov	rsi, r12
0x777b:	mov	edi, 0x30
0x7780:	add	rbx, 1
0x7784:	call	0x2660


0x737f:	xor	edx, edx
0x7381:	test	rdi, rdi
0x7384:	je	0x73b7


0x7386:	mov	dword ptr [rsp + 0x34], ebp
0x738a:	mov	qword ptr [rsp + 0x40], rbx
0x738f:	mov	rbp, rdi
0x7392:	mov	rbx, rdx
0x7395:	nop	dword ptr [rax]
0x7398:	mov	rsi, r12
0x739b:	mov	edi, 0x20
0x73a0:	add	rbx, 1
0x73a4:	call	0x2660


0x73a9:	cmp	rbp, rbx
0x73ac:	jne	0x7398


0x73ae:	mov	ebp, dword ptr [rsp + 0x34]
0x73b2:	mov	rbx, qword ptr [rsp + 0x40]
0x73b7:	sub	rsp, 8
0x73bb:	mov	r9d, r14d
0x73be:	mov	ecx, ebp
0x73c0:	mov	eax, dword ptr [rsp + 0x508]
0x73c7:	mov	rdi, r12
0x73ca:	push	rax
0x73cb:	push	qword ptr [rsp + 0x20]
0x73cf:	push	qword ptr [rsp + 0x30]
0x73d3:	mov	r8d, dword ptr [rsp + 0x28]
0x73d8:	mov	rdx, qword ptr [rsp + 0x20]
0x73dd:	mov	rsi, qword ptr [rsp + 0x58]
0x73e2:	call	0x5e80


0x7398:	mov	rsi, r12
0x739b:	mov	edi, 0x20
0x73a0:	add	rbx, 1
0x73a4:	call	0x2660


0x7789:	cmp	rbp, rbx
0x778c:	jne	0x7778


0x778e:	jmp	0x73ae


0x7778:	mov	rsi, r12
0x777b:	mov	edi, 0x30
0x7780:	add	rbx, 1
0x7784:	call	0x2660


0x73e7:	add	rsp, 0x20
0x73eb:	jmp	0x655f


0xb380:	sub	rsp, 8
0xb384:	mov	rcx, rbp
0xb387:	mov	rsi, r13
0xb38a:	push	qword ptr [rsp + 0x68]
0xb38e:	push	qword ptr [rsp + 0x78]
0xb392:	mov	rdi, r14
0xb395:	push	0
0xb397:	mov	r9d, dword ptr [rsp + 0x98]
0xb39f:	mov	r8d, dword ptr [rsp + 0x28]
0xb3a4:	mov	rdx, qword ptr [rsp + 0x30]
0xb3a9:	and	r9d, 0xfffffffd
0xb3ad:	call	0xa7e0


0xb3b2:	add	rsp, 0x20
0xb3b6:	mov	r15, rax
0xb3b9:	mov	rbx, qword ptr [rsp + 0xa8]
0xb3c1:	xor	rbx, qword ptr fs:[0x28]
0xb3ca:	mov	rax, r15
0xb3cd:	jne	0xb9d3


0xb3d3:	add	rsp, 0xb8
0xb3da:	pop	rbx
0xb3db:	pop	rbp
0xb3dc:	pop	r12
0xb3de:	pop	r13
0xb3e0:	pop	r14
0xb3e2:	pop	r15
0xb3e4:	ret	


0xb9d3:	call	0x2560


0xb97d:	sub	rsp, 8
0xb981:	mov	r8d, 5
0xb987:	mov	rcx, r11
0xb98a:	push	qword ptr [rsp + 0x68]
0xb98e:	push	qword ptr [rsp + 0x78]
0xb992:	mov	rdi, r14
0xb995:	push	qword ptr [rsp + 0x38]
0xb999:	mov	r9d, dword ptr [rsp + 0x98]
0xb9a1:	mov	rdx, qword ptr [rsp + 0x30]
0xb9a6:	mov	rsi, qword ptr [rsp + 0x70]
0xb9ab:	call	0xa7e0


0xb9b0:	add	rsp, 0x20
0xb9b4:	mov	r15, rax
0xb9b7:	jmp	0xb3b9


0xb3b9:	mov	rbx, qword ptr [rsp + 0xa8]
0xb3c1:	xor	rbx, qword ptr fs:[0x28]
0xb3ca:	mov	rax, r15
0xb3cd:	jne	0xb9d3


0x1c759:	sub	rsp, 8
0x1c75d:	mov	rdi, qword ptr [r14 + 0x78]
0x1c761:	lea	rdx, [r13 + 0x18]
0x1c765:	push	qword ptr [rsp + 0x28]
0x1c769:	mov	r9, qword ptr [rsp + 0xb8]
0x1c771:	lea	rcx, [r13 + 0x48]
0x1c775:	mov	r8, qword ptr [rsp + 0x68]
0x1c77a:	mov	rsi, r12
0x1c77d:	call	0x15ea0


0x1c782:	mov	rdx, qword ptr [rsp + 0x50]
0x1c787:	test	eax, eax
0x1c789:	mov	dword ptr [rdx], eax
0x1c78b:	pop	r9
0x1c78d:	pop	r10
0x1c78f:	je	0x1c6a0


0x1c6a0:	movzx	eax, byte ptr [r15 + 8]
0x1c6a5:	cmp	al, 2
0x1c6a7:	je	0x1c841


0x1c795:	jmp	0x1c6d8


0x1c841:	mov	rax, qword ptr [rsp + 0x40]
0x1c846:	mov	dword ptr [rax], 7
0x1c84c:	jmp	0x1c6d8


0x1c6ad:	cmp	al, 0x15
0x1c6af:	je	0x1cac2


0x1c6d8:	mov	rdi, r12
0x1c6db:	call	0x2a10


0x1cac2:	add	qword ptr [r14 + 0x48], rbx
0x1cac6:	cmp	byte ptr [rsp + 0x57], 0
0x1cacb:	je	0x1cae1


0x1c6b5:	xor	r9d, r9d
0x1c6b8:	jmp	0x1c342


0x1cae1:	mov	rax, qword ptr [rsp + 0x10]
0x1cae6:	mov	edx, dword ptr [rax + 0xb4]
0x1caec:	cmp	edx, 1
0x1caef:	jle	0x1cb09


0x1cacd:	lea	rdx, [r12 + 0x20]
0x1cad2:	mov	rax, r12
0x1cad5:	not	qword ptr [rax]
0x1cad8:	add	rax, 8
0x1cadc:	cmp	rdx, rax
0x1cadf:	jne	0x1cad5


0x1c342:	mov	rax, qword ptr [rsp + 0x28]
0x1c347:	mov	r8, qword ptr [rsp + 0x20]
0x1c34c:	and	r9d, 1
0x1c350:	mov	rdi, qword ptr [rsp]
0x1c354:	mov	ecx, ebx
0x1c356:	mov	rdx, r15
0x1c359:	mov	rsi, r14
0x1c35c:	mov	dword ptr [rsp + 0xa0], 3
0x1c367:	mov	qword ptr [rsp + 0xa8], rax
0x1c36f:	call	0x1b040


0x1cb09:	cmp	qword ptr [r13 + 0x28], 0
0x1cb0e:	jne	0x1cb98


0x1caf1:	mov	rcx, qword ptr [rax + 0x78]
0x1caf5:	xor	eax, eax
0x1caf7:	mov	rsi, qword ptr [rcx + rax]
0x1cafb:	and	qword ptr [r12 + rax], rsi
0x1caff:	add	rax, 8
0x1cb03:	cmp	rax, 0x20
0x1cb07:	jne	0x1caf7


0x1cad5:	not	qword ptr [rax]
0x1cad8:	add	rax, 8
0x1cadc:	cmp	rdx, rax
0x1cadf:	jne	0x1cad5


0x1cb14:	cmp	qword ptr [r13 + 0x30], 0
0x1cb19:	jne	0x1cb98


0x1cb98:	mov	rax, qword ptr [rsp + 0x10]
0x1cb9d:	lea	r15, [rsp + 0xb0]
0x1cba5:	xor	edx, edx
0x1cba7:	xor	ecx, ecx
0x1cba9:	mov	r8, r15
0x1cbac:	or	byte ptr [rax + 0xb0], 2
0x1cbb3:	lea	rbx, [rax + 0x70]
0x1cbb7:	lea	rbp, [rax + 0x80]
0x1cbbe:	mov	byte ptr [rsp + 0xb8], 6
0x1cbc6:	mov	qword ptr [rsp + 0xb0], r13
0x1cbce:	mov	rdi, rbx
0x1cbd1:	mov	rsi, rbp
0x1cbd4:	call	0x13360


0x1caf7:	mov	rsi, qword ptr [rcx + rax]
0x1cafb:	and	qword ptr [r12 + rax], rsi
0x1caff:	add	rax, 8
0x1cb03:	cmp	rax, 0x20
0x1cb07:	jne	0x1caf7


0x1cb1b:	cmp	qword ptr [r13 + 0x38], 0
0x1cb20:	jne	0x1cb98


0x1cb22:	cmp	qword ptr [r13 + 0x40], 0
0x1cb27:	jne	0x1cb98


0x1cb29:	sub	edx, 1
0x1cb2c:	jle	0x1cb3c


0x1cb3c:	mov	rdi, r13
0x1cb3f:	call	0x11dc0


0x1cb2e:	cmp	qword ptr [r13 + 0x48], 0
0x1cb33:	jne	0x1cb98


0x1cb35:	test	byte ptr [r13 + 0x20], 1
0x1cb3a:	jne	0x1cb98


0x1cb44:	mov	rax, qword ptr [rsp + 0x10]
0x1cb49:	lea	r8, [rsp + 0xb0]
0x1cb51:	xor	ecx, ecx
0x1cb53:	xor	edx, edx
0x1cb55:	mov	byte ptr [rsp + 0xb8], 3
0x1cb5d:	mov	qword ptr [rsp + 0xb0], r12
0x1cb65:	lea	rsi, [rax + 0x80]
0x1cb6c:	lea	rdi, [rax + 0x70]
0x1cb70:	call	0x13360


0x1cb75:	test	rax, rax
0x1cb78:	mov	qword ptr [rsp + 0x28], rax
0x1cb7d:	jne	0x1bbfc


0x1cb83:	mov	rax, qword ptr [rsp + 0x40]
0x1cb88:	mov	dword ptr [rax], 0xc
0x1cb8e:	jmp	0x1c6d8


0x1bbfc:	mov	rbx, qword ptr [rsp + 0x18]
0x1bc01:	mov	rdx, qword ptr [rsp + 0x20]
0x1bc06:	mov	rsi, r14
0x1bc09:	lea	r15, [rsp + 0xc0]
0x1bc11:	mov	rdi, rbx
0x1bc14:	call	0x1b2a0


0x1bc19:	cdqe	
0x1bc1b:	add	qword ptr [r14 + 0x48], rax
0x1bc1f:	movzx	eax, byte ptr [rbx + 8]
0x1bc23:	nop	dword ptr [rax + rax]
0x1bc28:	cmp	al, 0x17
0x1bc2a:	ja	0x1bb70


0x1bc30:	cmp	al, 0x12
0x1bc32:	mov	ecx, 0x8c0800
0x1bc37:	sete	bl
0x1bc3a:	bt	rcx, rax
0x1bc3e:	jae	0x1bb70


0x1bb70:	mov	rdi, qword ptr [rsp + 0x118]
0x1bb78:	xor	rdi, qword ptr fs:[0x28]
0x1bb81:	mov	rax, qword ptr [rsp + 0x28]
0x1bb86:	jne	0x1cefe


0x1bc44:	mov	rcx, qword ptr [rsp + 0x18]
0x1bc49:	cmp	al, 0x17
0x1bc4b:	mov	rbp, qword ptr [r14 + 0x48]
0x1bc4f:	movdqa	xmm0, xmmword ptr [rcx]
0x1bc53:	je	0x1bf78


0x1bf78:	mov	rdx, qword ptr [rsp + 0x20]
0x1bf7d:	mov	rsi, rcx
0x1bf80:	mov	rdi, r14
0x1bf83:	movaps	xmmword ptr [rsp], xmm0
0x1bf87:	call	0x1b9a0


0x1bc59:	cmp	al, 0x13
0x1bc5b:	movzx	ebx, bl
0x1bc5e:	je	0x1bf10


0x1bf10:	mov	qword ptr [rsp], 1
0x1bf18:	mov	rdx, qword ptr [rsp + 0x20]
0x1bf1d:	mov	rdi, qword ptr [rsp + 0x18]
0x1bf22:	mov	rsi, r14
0x1bf25:	call	0x1b2a0


0x1bc64:	mov	rdx, qword ptr [rsp + 0x20]
0x1bc69:	mov	rdi, qword ptr [rsp + 0x18]
0x1bc6e:	mov	rsi, r14
0x1bc71:	call	0x1b2a0


0x1bc76:	cdqe	
0x1bc78:	add	qword ptr [r14 + 0x48], rax
0x1bc7c:	cmp	qword ptr [rsp + 0x28], 0
0x1bc82:	je	0x1c010


0x1c010:	mov	rax, qword ptr [rsp + 0x40]
0x1c015:	mov	ecx, dword ptr [rax]
0x1c017:	test	ecx, ecx
0x1c019:	je	0x1bf67


0x1bc88:	mov	qword ptr [rsp], -1
0x1bc90:	test	rbx, rbx
0x1bc93:	mov	rbp, qword ptr [rsp + 0x28]
0x1bc98:	mov	qword ptr [rsp + 0x30], 0
0x1bca1:	jg	0x1be20


0x1bf67:	mov	qword ptr [rsp + 0x28], 0
0x1bf70:	jmp	0x1bdbe


0x1c01f:	jmp	0x1bb60


0x1bca7:	cmp	byte ptr [rbp + 0x30], 0x11
0x1bcab:	je	0x1bff0


0x1be20:	cmp	rbx, 1
0x1be24:	je	0x1c65c


0x1bdbe:	test	qword ptr [rsp + 0x20], 0x1000000
0x1bdc7:	mov	rax, qword ptr [rsp + 0x18]
0x1bdcc:	movzx	eax, byte ptr [rax + 8]
0x1bdd0:	je	0x1bc28


0x1bff0:	mov	rdx, qword ptr [rbp + 0x28]
0x1bff4:	lea	rsi, [rip - 0xb33b]
0x1bffb:	mov	rdi, rbp
0x1bffe:	call	0x10f80


0x1bcb1:	cmp	qword ptr [rsp], -1
0x1bcb6:	mov	rdx, rbp
0x1bcb9:	mov	r8, r15
0x1bcbc:	sete	al
0x1bcbf:	xor	ecx, ecx
0x1bcc1:	add	eax, 0xa
0x1bcc4:	mov	byte ptr [rsp + 0xc8], al
0x1bccb:	mov	rax, qword ptr [rsp + 0x10]
0x1bcd0:	lea	r12, [rax + 0x70]
0x1bcd4:	lea	r13, [rax + 0x80]
0x1bcdb:	mov	rdi, r12
0x1bcde:	mov	rsi, r13
0x1bce1:	call	0x13360


0x1c65c:	mov	r13, qword ptr [rsp + 0x28]
0x1c661:	mov	qword ptr [rsp + 0x30], r13
0x1c666:	jmp	0x1beb4


0x1be2a:	mov	rax, qword ptr [rsp + 0x10]
0x1be2f:	mov	r13, rbp
0x1be32:	mov	qword ptr [rsp + 0x48], r14
0x1be37:	lea	r12, [rax + 0x80]
0x1be3e:	lea	rdi, [rax + 0x70]
0x1be42:	mov	rax, rbp
0x1be45:	mov	r14, rax
0x1be48:	mov	ebp, 2
0x1be4d:	mov	rsi, r12
0x1be50:	mov	qword ptr [rsp + 0x30], rdi
0x1be55:	mov	r12, r13
0x1be58:	mov	r13, rbx
0x1be5b:	mov	rbx, rsi
0x1be5e:	nop	
0x1be60:	mov	rsi, qword ptr [rsp + 0x10]
0x1be65:	mov	rdi, r12
0x1be68:	call	0x13440


0x1bc28:	cmp	al, 0x17
0x1bc2a:	ja	0x1bb70


0x1bdd6:	cmp	al, 0xb
0x1bdd8:	je	0x1bde2


0x1beb4:	cmp	qword ptr [rsp], rbx
0x1beb8:	je	0x1c024


0x1bde2:	mov	rax, qword ptr [rsp + 0x28]
0x1bde7:	test	rax, rax
0x1bdea:	je	0x1bdfd


0x1bdda:	cmp	al, 0x17
0x1bddc:	jne	0x1bc28


0x1c024:	mov	rdx, qword ptr [rsp + 0x30]
0x1c029:	nop	dword ptr [rax]
0x1c030:	mov	qword ptr [rsp + 0x28], rdx
0x1c035:	jmp	0x1bdbe


0x1bebe:	mov	rsi, qword ptr [rsp + 0x10]
0x1bec3:	mov	rdi, r13
0x1bec6:	call	0x13440


0x1bdfd:	mov	rax, qword ptr [rsp + 0x40]
0x1be02:	mov	qword ptr [rsp + 0x28], 0
0x1be0b:	mov	dword ptr [rax], 0xd
0x1be11:	jmp	0x1bb70


0x1bdec:	lea	rsi, [rip - 0x9fd3]
0x1bdf3:	xor	edx, edx
0x1bdf5:	mov	rdi, rax
0x1bdf8:	call	0x10f80


0x1becb:	test	rax, rax
0x1bece:	mov	rbp, rax
0x1bed1:	jne	0x1bca7


0x1be6d:	mov	rdi, qword ptr [rsp + 0x30]
0x1be72:	mov	r12, rax
0x1be75:	mov	rdx, r14
0x1be78:	mov	r8, r15
0x1be7b:	mov	rcx, rax
0x1be7e:	mov	rsi, rbx
0x1be81:	mov	byte ptr [rsp + 0xc8], 0x10
0x1be89:	call	0x13360


0x1befe:	mov	qword ptr [rsp + 0x28], 0
0x1bf07:	jmp	0x1bb70


0x1c003:	jmp	0x1bcb1


0x1bf2a:	cdqe	
0x1bf2c:	add	qword ptr [r14 + 0x48], rax
0x1bf30:	cmp	qword ptr [rsp + 0x28], 0
0x1bf36:	je	0x1c010


0x1bf3c:	mov	rax, qword ptr [rsp]
0x1bf40:	or	rax, rbx
0x1bf43:	jne	0x1bc90


0x1bf49:	mov	rdi, qword ptr [rsp + 0x28]
0x1bf4e:	lea	rsi, [rip - 0xa135]
0x1bf55:	xor	edx, edx
0x1bf57:	call	0x10f80


0x1bc90:	test	rbx, rbx
0x1bc93:	mov	rbp, qword ptr [rsp + 0x28]
0x1bc98:	mov	qword ptr [rsp + 0x30], 0
0x1bca1:	jg	0x1be20


0x1bf5c:	mov	rax, qword ptr [rsp + 0x40]
0x1bf61:	mov	esi, dword ptr [rax]
0x1bf63:	test	esi, esi
0x1bf65:	jne	0x1beeb


0x1beeb:	mov	rdi, qword ptr [rsp + 0x28]
0x1bef0:	lea	rsi, [rip - 0xa0d7]
0x1bef7:	xor	edx, edx
0x1bef9:	call	0x10f80


0x1bf8c:	cmp	rax, -1
0x1bf90:	mov	rbx, rax
0x1bf93:	movdqa	xmm0, xmmword ptr [rsp]
0x1bf98:	je	0x1c040


0x1c040:	mov	rax, qword ptr [rsp + 0x18]
0x1c045:	cmp	byte ptr [rax + 8], 1
0x1c049:	jne	0x1c100


0x1bf9e:	cmp	rax, -2
0x1bfa2:	je	0x1bfbd


0x1c04f:	mov	rax, qword ptr [rsp + 0x18]
0x1c054:	cmp	byte ptr [rax], 0x2c
0x1c057:	jne	0x1c100


0x1c100:	mov	rax, qword ptr [rsp + 0x40]
0x1c105:	mov	dword ptr [rax], 0xa
0x1c10b:	cmp	qword ptr [rsp + 0x28], 0
0x1c111:	jne	0x1beeb


0x1bfbd:	test	qword ptr [rsp + 0x20], 0x200000
0x1bfc6:	je	0x1cf03


0x1bfa4:	mov	rax, qword ptr [rsp + 0x18]
0x1bfa9:	movzx	eax, byte ptr [rax + 8]
0x1bfad:	cmp	al, 0x18
0x1bfaf:	je	0x1c0d0


0x1c05d:	xor	ebx, ebx
0x1c05f:	mov	rdx, qword ptr [rsp + 0x20]
0x1c064:	mov	rsi, qword ptr [rsp + 0x18]
0x1c069:	mov	rdi, r14
0x1c06c:	movaps	xmmword ptr [rsp + 0x30], xmm0
0x1c071:	call	0x1b9a0


0x1c117:	jmp	0x1bb60


0x1cf03:	mov	rax, qword ptr [rsp + 0x18]
0x1cf08:	cmp	byte ptr [rax + 8], 2
0x1cf0c:	jne	0x1c100


0x1bfcc:	mov	rax, qword ptr [rsp + 0x18]
0x1bfd1:	mov	qword ptr [r14 + 0x48], rbp
0x1bfd5:	movaps	xmmword ptr [rax], xmm0
0x1bfd8:	mov	byte ptr [rax + 8], 1
0x1bfdc:	mov	rax, qword ptr [rsp + 0x28]
0x1bfe1:	jmp	0x1bda5


0x1c0d0:	mov	qword ptr [rsp], rbx
0x1c0d4:	xor	eax, eax
0x1c0d6:	cmp	qword ptr [rsp], 0x7fff
0x1c0de:	setg	al
0x1c0e1:	jmp	0x1c0b7


0x1bfb5:	cmp	al, 1
0x1bfb7:	je	0x1c0e3


0x1cf12:	mov	rax, qword ptr [rsp + 0x40]
0x1cf17:	mov	dword ptr [rax], 9
0x1cf1d:	jmp	0x1c10b


0x1bda5:	mov	rdi, qword ptr [rsp + 0x40]
0x1bdaa:	mov	edx, dword ptr [rdi]
0x1bdac:	test	edx, edx
0x1bdae:	je	0x1bdb9


0x1c0b7:	test	rax, rax
0x1c0ba:	je	0x1bf18


0x1c0e3:	mov	rax, qword ptr [rsp + 0x18]
0x1c0e8:	cmp	byte ptr [rax], 0x2c
0x1c0eb:	je	0x1c05f


0x1c10b:	cmp	qword ptr [rsp + 0x28], 0
0x1c111:	jne	0x1beeb


0x1bdb9:	mov	qword ptr [rsp + 0x28], rax
0x1bdbe:	test	qword ptr [rsp + 0x20], 0x1000000
0x1bdc7:	mov	rax, qword ptr [rsp + 0x18]
0x1bdcc:	movzx	eax, byte ptr [rax + 8]
0x1bdd0:	je	0x1bc28


0x1bdb0:	test	rax, rax
0x1bdb3:	je	0x1c10b


0x1bf18:	mov	rdx, qword ptr [rsp + 0x20]
0x1bf1d:	mov	rdi, qword ptr [rsp + 0x18]
0x1bf22:	mov	rsi, r14
0x1bf25:	call	0x1b2a0


0x1c0c0:	mov	rax, qword ptr [rsp + 0x40]
0x1c0c5:	mov	dword ptr [rax], 0xf
0x1c0cb:	jmp	0x1c10b


0x1c05f:	mov	rdx, qword ptr [rsp + 0x20]
0x1c064:	mov	rsi, qword ptr [rsp + 0x18]
0x1c069:	mov	rdi, r14
0x1c06c:	movaps	xmmword ptr [rsp + 0x30], xmm0
0x1c071:	call	0x1b9a0


0x1c0f1:	test	qword ptr [rsp + 0x20], 0x200000
0x1c0fa:	jne	0x1bfcc


0x1c076:	cmp	rax, -2
0x1c07a:	mov	qword ptr [rsp], rax
0x1c07e:	movdqa	xmm0, xmmword ptr [rsp + 0x30]
0x1c084:	je	0x1bfbd


0x1c08a:	mov	rax, qword ptr [rsp]
0x1c08e:	cmp	rax, -1
0x1c092:	je	0x1c099


0x1c099:	mov	rax, qword ptr [rsp + 0x18]
0x1c09e:	cmp	byte ptr [rax + 8], 0x18
0x1c0a2:	jne	0x1c100


0x1c094:	cmp	rax, rbx
0x1c097:	jl	0x1c100


0x1c0a4:	cmp	qword ptr [rsp], -1
0x1c0a9:	jne	0x1c0d4


0x1c0ab:	xor	eax, eax
0x1c0ad:	cmp	rbx, 0x7fff
0x1c0b4:	setg	al
0x1c0b7:	test	rax, rax
0x1c0ba:	je	0x1bf18


0x1c0d4:	xor	eax, eax
0x1c0d6:	cmp	qword ptr [rsp], 0x7fff
0x1c0de:	setg	al
0x1c0e1:	jmp	0x1c0b7


0x1be8e:	test	r12, r12
0x1be91:	mov	r14, rax
0x1be94:	je	0x1bee0


0x1bee0:	mov	rax, qword ptr [rsp + 0x40]
0x1bee5:	mov	dword ptr [rax], 0xc
0x1beeb:	mov	rdi, qword ptr [rsp + 0x28]
0x1bef0:	lea	rsi, [rip - 0xa0d7]
0x1bef7:	xor	edx, edx
0x1bef9:	call	0x10f80


0x1be96:	test	rax, rax
0x1be99:	je	0x1bee0


0x1be9b:	add	rbp, 1
0x1be9f:	cmp	rbp, r13
0x1bea2:	jle	0x1be60


0x1be60:	mov	rsi, qword ptr [rsp + 0x10]
0x1be65:	mov	rdi, r12
0x1be68:	call	0x13440


0x1bea4:	mov	r14, qword ptr [rsp + 0x48]
0x1bea9:	mov	rbx, r13
0x1beac:	mov	qword ptr [rsp + 0x30], rax
0x1beb1:	mov	r13, r12
0x1beb4:	cmp	qword ptr [rsp], rbx
0x1beb8:	je	0x1c024


0x1bce6:	test	rax, rax
0x1bce9:	mov	rdx, rax
0x1bcec:	je	0x1bee0


0x1bcf2:	add	rbx, 2
0x1bcf6:	cmp	rbx, qword ptr [rsp]
0x1bcfa:	jg	0x1bd7b


0x1bcfc:	mov	qword ptr [rsp + 0x48], r14
0x1bd01:	mov	r14, rax
0x1bd04:	mov	rsi, qword ptr [rsp + 0x10]
0x1bd09:	mov	rdi, rbp
0x1bd0c:	call	0x13440


0x1bd7b:	mov	rax, qword ptr [rsp + 0x30]
0x1bd80:	test	rax, rax
0x1bd83:	je	0x1c030


0x1c030:	mov	qword ptr [rsp + 0x28], rdx
0x1c035:	jmp	0x1bdbe


0x1bd89:	mov	rcx, rdx
0x1bd8c:	mov	r8, r15
0x1bd8f:	mov	rdx, rax
0x1bd92:	mov	rsi, r13
0x1bd95:	mov	rdi, r12
0x1bd98:	mov	byte ptr [rsp + 0xc8], 0x10
0x1bda0:	call	0x13360


0x1bd11:	mov	r8, r15
0x1bd14:	mov	rbp, rax
0x1bd17:	mov	rcx, rax
0x1bd1a:	mov	rdx, r14
0x1bd1d:	mov	rsi, r13
0x1bd20:	mov	rdi, r12
0x1bd23:	mov	byte ptr [rsp + 0xc8], 0x10
0x1bd2b:	call	0x13360


0x1bd30:	test	rbp, rbp
0x1bd33:	je	0x1bee0


0x1bd39:	test	rax, rax
0x1bd3c:	je	0x1bee0


0x1bd42:	xor	ecx, ecx
0x1bd44:	mov	r8, r15
0x1bd47:	mov	rdx, rax
0x1bd4a:	mov	rsi, r13
0x1bd4d:	mov	rdi, r12
0x1bd50:	mov	byte ptr [rsp + 0xc8], 0xa
0x1bd58:	call	0x13360


0x1bd5d:	test	rax, rax
0x1bd60:	mov	r14, rax
0x1bd63:	je	0x1bee0


0x1bd69:	add	rbx, 1
0x1bd6d:	cmp	rbx, qword ptr [rsp]
0x1bd71:	jle	0x1bd04


0x1bd04:	mov	rsi, qword ptr [rsp + 0x10]
0x1bd09:	mov	rdi, rbp
0x1bd0c:	call	0x13440


0x1bd73:	mov	r14, qword ptr [rsp + 0x48]
0x1bd78:	mov	rdx, rax
0x1bd7b:	mov	rax, qword ptr [rsp + 0x30]
0x1bd80:	test	rax, rax
0x1bd83:	je	0x1c030


0x1cbd9:	mov	rdi, rax
0x1cbdc:	mov	qword ptr [rsp + 0x28], rax
0x1cbe1:	lea	rdx, [r12 + 0x20]
0x1cbe6:	test	rdi, rdi
0x1cbe9:	mov	rax, r12
0x1cbec:	je	0x1cb83


0x1cbee:	cmp	qword ptr [rax], 0
0x1cbf2:	jne	0x1ce9d


0x1cbf8:	add	rax, 8
0x1cbfc:	cmp	rdx, rax
0x1cbff:	jne	0x1cbee


0x1ce9d:	xor	ecx, ecx
0x1ce9f:	xor	edx, edx
0x1cea1:	mov	r8, r15
0x1cea4:	mov	rsi, rbp
0x1cea7:	mov	rdi, rbx
0x1ceaa:	mov	byte ptr [rsp + 0xb8], 3
0x1ceb2:	mov	qword ptr [rsp + 0xb0], r12
0x1ceba:	call	0x13360


0x1cc01:	mov	rdi, r12
0x1cc04:	call	0x2a10


0x1cebf:	test	rax, rax
0x1cec2:	je	0x1cb83


0x1cec8:	mov	rcx, qword ptr [rsp + 0x28]
0x1cecd:	lea	r8, [rsp + 0xc0]
0x1ced5:	mov	rdx, rax
0x1ced8:	mov	rsi, rbp
0x1cedb:	mov	rdi, rbx
0x1cede:	mov	byte ptr [rsp + 0xc8], 0xa
0x1cee6:	call	0x13360


0x1ceeb:	test	rax, rax
0x1ceee:	mov	qword ptr [rsp + 0x28], rax
0x1cef3:	jne	0x1bbfc


0x1cef9:	jmp	0x1cb83


0x1c374:	test	eax, eax
0x1c376:	jne	0x1c85b


0x1c37c:	mov	rdx, qword ptr [rsp + 0x20]
0x1c381:	mov	rsi, r14
0x1c384:	mov	rdi, r15
0x1c387:	call	0x10b90


0x1c85b:	mov	rdx, qword ptr [rsp + 0x40]
0x1c860:	mov	dword ptr [rdx], eax
0x1c862:	jmp	0x1c6d8


0x1c38c:	movsxd	rbx, eax
0x1c38f:	mov	eax, dword ptr [rsp + 0xa0]
0x1c396:	lea	edx, [rax - 2]
0x1c399:	and	edx, 0xfffffffd
0x1c39c:	je	0x1c3b5


0x1c3b5:	cmp	eax, 4
0x1c3b8:	ja	0x1cd5a


0x1c39e:	movzx	edx, byte ptr [r15 + 8]
0x1c3a3:	cmp	dl, 2
0x1c3a6:	je	0x1c841


0x1c3be:	movsxd	rax, dword ptr [rbp + rax*4]
0x1c3c3:	add	rax, rbp
0x1c3c6:	jmp	rax


0x1cd5a:	lea	rcx, [rip + 0x602f]
0x1cd61:	lea	rsi, [rip + 0x5a58]
0x1cd68:	lea	rdi, [rip + 0x4797]
0x1cd6f:	mov	edx, 0xced
0x1cd74:	call	0x2600


0x1c3ac:	cmp	dl, 0x16
0x1c3af:	je	0x1c867


0x1c867:	movsxd	rax, ebx
0x1c86a:	mov	r11, qword ptr [rsp + 0x20]
0x1c86f:	add	qword ptr [r14 + 0x48], rax
0x1c873:	mov	r10, qword ptr [rsp + 0x60]
0x1c878:	mov	rdx, r11
0x1c87b:	mov	rdi, r10
0x1c87e:	call	0x10b90


0x1c883:	movzx	edx, byte ptr [rsp + 0xc8]
0x1c88b:	cmp	dl, 2
0x1c88e:	je	0x1c841


0x1c890:	cmp	dl, 0x15
0x1c893:	je	0x1caa7


0x1caa7:	mov	eax, ebx
0x1caa9:	neg	eax
0x1caab:	cdqe	
0x1caad:	add	qword ptr [r14 + 0x48], rax
0x1cab1:	mov	byte ptr [r15 + 8], 1
0x1cab6:	mov	eax, dword ptr [rsp + 0xa0]
0x1cabd:	jmp	0x1c3b5


0x1c899:	mov	rdx, qword ptr [rsp + 0x68]
0x1c89e:	lea	rdi, [rsp + 0xb0]
0x1c8a6:	mov	r9d, 1
0x1c8ac:	mov	r8, r11
0x1c8af:	mov	ecx, eax
0x1c8b1:	mov	dword ptr [rsp + 0xb0], 3
0x1c8bc:	mov	qword ptr [rsp + 0xb8], rdx
0x1c8c4:	mov	rdx, r10
0x1c8c7:	call	0x1b040


0x1c8cc:	test	eax, eax
0x1c8ce:	jne	0x1c85b


0x1c8d0:	mov	rdx, qword ptr [rsp + 0x20]
0x1c8d5:	mov	rsi, r14
0x1c8d8:	mov	rdi, r15
0x1c8db:	call	0x10b90


0x1c8e0:	movsxd	rbx, eax
0x1c8e3:	mov	rax, qword ptr [rsp + 0x10]
0x1c8e8:	mov	esi, dword ptr [rsp + 0xa0]
0x1c8ef:	mov	r9d, 0
0x1c8f5:	cmp	dword ptr [rax + 0xb4], 1
0x1c8fc:	lea	eax, [rsi - 2]
0x1c8ff:	cmovg	r9, r13
0x1c903:	and	eax, 0xfffffffd
0x1c906:	je	0x1cd79


0x1cd79:	mov	rax, qword ptr [rsp + 0x40]
0x1cd7e:	mov	dword ptr [rax], 0xb
0x1cd84:	jmp	0x1c6d8


0x1c90c:	mov	r10d, dword ptr [rsp + 0xb0]
0x1c914:	lea	eax, [r10 - 2]
0x1c918:	and	eax, 0xfffffffd
0x1c91b:	je	0x1cd79


0x1c921:	cmp	esi, 3
0x1c924:	sete	r11b
0x1c928:	je	0x1cdbd


0x1cdbd:	mov	rdi, qword ptr [rsp + 0xa8]
0x1cdc5:	xor	eax, eax
0x1cdc7:	or	rcx, 0xffffffffffffffff
0x1cdcb:	repne scasb	al, byte ptr [rdi]


0x1c92e:	cmp	r10d, 3
0x1c932:	je	0x1cd89


0x1cdcb:	repne scasb	al, byte ptr [rdi]


0x1cdcd:	mov	rax, rcx
0x1cdd0:	not	rax
0x1cdd3:	sub	rax, 1
0x1cdd7:	cmp	rax, 1
0x1cddb:	jbe	0x1c92e


0x1cd89:	mov	rdi, qword ptr [rsp + 0xb8]
0x1cd91:	xor	eax, eax
0x1cd93:	or	rcx, 0xffffffffffffffff
0x1cd97:	repne scasb	al, byte ptr [rdi]


0x1c938:	test	esi, esi
0x1c93a:	jne	0x1cca9


0x1cde1:	jmp	0x1cdad


0x1cd97:	repne scasb	al, byte ptr [rdi]


0x1cd99:	mov	rax, rcx
0x1cd9c:	not	rax
0x1cd9f:	sub	rax, 1
0x1cda3:	cmp	rax, 1
0x1cda7:	jbe	0x1c938


0x1c940:	movzx	edx, byte ptr [rsp + 0xa8]
0x1c948:	test	r10d, r10d
0x1c94b:	jne	0x1cc8d


0x1cca9:	xor	edx, edx
0x1ccab:	cmp	esi, 3
0x1ccae:	jne	0x1c948


0x1cdad:	mov	rax, qword ptr [rsp + 0x40]
0x1cdb2:	mov	dword ptr [rax], 3
0x1cdb8:	jmp	0x1c6d8


0x1c951:	movzx	r8d, byte ptr [rsp + 0xb8]
0x1c95a:	test	esi, esi
0x1c95c:	je	0x1cc46


0x1cc8d:	cmp	r10d, 3
0x1cc91:	je	0x1cf22


0x1ccb4:	mov	rax, qword ptr [rsp + 0xa8]
0x1ccbc:	movzx	edx, byte ptr [rax]
0x1ccbf:	jmp	0x1c948


0x1c948:	test	r10d, r10d
0x1c94b:	jne	0x1cc8d


0x1cc46:	test	r9, r9
0x1cc49:	je	0x1ccc4


0x1c962:	test	r11b, r11b
0x1c965:	jne	0x1cc46


0x1cf22:	mov	rax, qword ptr [rsp + 0xb8]
0x1cf2a:	movzx	r8d, byte ptr [rax]
0x1cf2e:	jmp	0x1c95a


0x1cc97:	test	esi, esi
0x1cc99:	je	0x1cc43


0x1ccc4:	test	r10d, r10d
0x1ccc7:	je	0x1c9a7


0x1cc4b:	mov	edi, edx
0x1cc4d:	mov	dword ptr [rsp + 0x78], r8d
0x1cc52:	mov	qword ptr [rsp + 0x70], r9
0x1cc57:	call	0x2880


0x1c96b:	test	r9, r9
0x1c96e:	mov	edx, dword ptr [rsp + 0xa8]
0x1c975:	je	0x1c994


0x1c95a:	test	esi, esi
0x1c95c:	je	0x1cc46


0x1cc43:	xor	r8d, r8d
0x1cc46:	test	r9, r9
0x1cc49:	je	0x1ccc4


0x1cc9b:	test	r11b, r11b
0x1cc9e:	jne	0x1cc43


0x1c9a7:	test	qword ptr [rsp + 0x20], 0x10000
0x1c9b0:	je	0x1c9bb


0x1cccd:	cmp	r10d, 3
0x1ccd1:	jne	0x1cc80


0x1c994:	cmp	edx, -1
0x1c997:	je	0x1cdad


0x1c977:	mov	edi, r8d
0x1c97a:	mov	dword ptr [rsp + 0x78], edx
0x1c97e:	mov	qword ptr [rsp + 0x70], r9
0x1c983:	call	0x2880


0x1cca0:	mov	edx, dword ptr [rsp + 0xa8]
0x1cca7:	jmp	0x1cc80


0x1c9bb:	test	r9, r9
0x1c9be:	je	0x1c9e6


0x1c9b2:	cmp	r8d, edx
0x1c9b5:	jb	0x1cd79


0x1ccd3:	jmp	0x1c9a7


0x1cc80:	mov	r8d, dword ptr [rsp + 0xb8]
0x1cc88:	jmp	0x1c994


0x1c99d:	cmp	r8d, -1
0x1c9a1:	je	0x1cdad


0x1c9e6:	xor	eax, eax
0x1c9e8:	mov	edi, 1
0x1c9ed:	cmp	edx, eax
0x1c9ef:	mov	ecx, eax
0x1c9f1:	ja	0x1ca09


0x1c9c0:	mov	rax, qword ptr [r9 + 0x40]
0x1c9c4:	cmp	rax, qword ptr [rsp + 0x48]
0x1c9c9:	mov	rcx, qword ptr [r9 + 8]
0x1c9cd:	je	0x1cde3


0x1c9f3:	cmp	r8d, eax
0x1c9f6:	jb	0x1ca09


0x1ca09:	add	rax, 1
0x1ca0d:	cmp	rax, 0x100
0x1ca13:	jne	0x1c9ed


0x1cde3:	mov	rax, qword ptr [rsp + 0x48]
0x1cde8:	mov	rdi, rcx
0x1cdeb:	mov	dword ptr [rsp + 0x8c], r8d
0x1cdf3:	mov	dword ptr [rsp + 0x88], edx
0x1cdfa:	mov	qword ptr [rsp + 0x70], r9
0x1cdff:	add	rax, rax
0x1ce02:	add	rax, 1
0x1ce06:	lea	r10, [rax*4]
0x1ce0e:	mov	qword ptr [rsp + 0x48], rax
0x1ce13:	mov	rsi, r10
0x1ce16:	mov	qword ptr [rsp + 0x80], r10
0x1ce1e:	call	0x2830


0x1c9d3:	mov	dword ptr [rcx + rax*4], edx
0x1c9d6:	mov	rcx, qword ptr [r9 + 0x10]
0x1c9da:	lea	rsi, [rax + 1]
0x1c9de:	mov	qword ptr [r9 + 0x40], rsi
0x1c9e2:	mov	dword ptr [rcx + rax*4], r8d
0x1c9e6:	xor	eax, eax
0x1c9e8:	mov	edi, 1
0x1c9ed:	cmp	edx, eax
0x1c9ef:	mov	ecx, eax
0x1c9f1:	ja	0x1ca09


0x1c9f8:	mov	rsi, rax
0x1c9fb:	mov	r11, rdi
0x1c9fe:	sar	rsi, 6
0x1ca02:	shl	r11, cl
0x1ca05:	or	qword ptr [r12 + rsi*8], r11
0x1ca09:	add	rax, 1
0x1ca0d:	cmp	rax, 0x100
0x1ca13:	jne	0x1c9ed


0x1ca15:	mov	rax, qword ptr [rsp + 0x40]
0x1ca1a:	mov	dword ptr [rax], 0
0x1ca20:	jmp	0x1c6a0


0x1c9ed:	cmp	edx, eax
0x1c9ef:	mov	ecx, eax
0x1c9f1:	ja	0x1ca09


0x1ce23:	mov	r9, qword ptr [rsp + 0x70]
0x1ce28:	mov	r10, qword ptr [rsp + 0x80]
0x1ce30:	mov	qword ptr [rsp + 0x78], rax
0x1ce35:	mov	rdi, qword ptr [r9 + 0x10]
0x1ce39:	mov	rsi, r10
0x1ce3c:	call	0x2830


0x1ce41:	mov	rcx, qword ptr [rsp + 0x78]
0x1ce46:	test	rcx, rcx
0x1ce49:	je	0x1ce75


0x1ce75:	mov	rdi, rcx
0x1ce78:	mov	qword ptr [rsp], rax
0x1ce7c:	call	0x2a10


0x1ce4b:	test	rax, rax
0x1ce4e:	mov	r9, qword ptr [rsp + 0x70]
0x1ce53:	mov	edx, dword ptr [rsp + 0x88]
0x1ce5a:	mov	r8d, dword ptr [rsp + 0x8c]
0x1ce62:	je	0x1ce75


0x1ce64:	mov	qword ptr [r9 + 0x10], rax
0x1ce68:	mov	qword ptr [r9 + 8], rcx
0x1ce6c:	mov	rax, qword ptr [r9 + 0x40]
0x1ce70:	jmp	0x1c9d3


0x1c988:	mov	r9, qword ptr [rsp + 0x70]
0x1c98d:	mov	edx, dword ptr [rsp + 0x78]
0x1c991:	mov	r8d, eax
0x1c994:	cmp	edx, -1
0x1c997:	je	0x1cdad


0x1cc5c:	mov	edx, eax
0x1cc5e:	mov	eax, dword ptr [rsp + 0xb0]
0x1cc65:	mov	r9, qword ptr [rsp + 0x70]
0x1cc6a:	mov	r8d, dword ptr [rsp + 0x78]
0x1cc6f:	cmp	eax, 3
0x1cc72:	je	0x1c977


0x1cc78:	test	eax, eax
0x1cc7a:	je	0x1c977


0x1ce81:	mov	rax, qword ptr [rsp]
0x1ce85:	mov	rdi, rax
0x1ce88:	call	0x2a10


0x1ce8d:	mov	rax, qword ptr [rsp + 0x40]
0x1ce92:	mov	dword ptr [rax], 0xc
0x1ce98:	jmp	0x1c6d8


0x1cc09:	jmp	0x1bbfc


0x1c6e0:	mov	rdi, r13
0x1c6e3:	call	0x11dc0


0x1c6e8:	mov	rax, qword ptr [rsp + 0x40]
0x1c6ed:	mov	r8d, dword ptr [rax]
0x1c6f0:	test	r8d, r8d
0x1c6f3:	jne	0x1bb60


0x1c6f9:	mov	qword ptr [rsp + 0x28], 0
0x1c702:	jmp	0x1bbfc


0x23b0:	push	qword ptr [rip + 0x2258da]
0x23b6:	jmp	qword ptr [rip + 0x2258dc]


0x23bc:	nop	dword ptr [rax]


0x23c6:	push	0
0x23cb:	jmp	0x23b0


0x23d6:	push	1
0x23db:	jmp	0x23b0


0x23e6:	push	2
0x23eb:	jmp	0x23b0


0x23f6:	push	3
0x23fb:	jmp	0x23b0


0x2406:	push	4
0x240b:	jmp	0x23b0


0x2416:	push	5
0x241b:	jmp	0x23b0


0x2426:	push	6
0x242b:	jmp	0x23b0


0x2436:	push	7
0x243b:	jmp	0x23b0


0x2446:	push	8
0x244b:	jmp	0x23b0


0x2456:	push	9
0x245b:	jmp	0x23b0


0x2466:	push	0xa
0x246b:	jmp	0x23b0


0x2476:	push	0xb
0x247b:	jmp	0x23b0


0x2486:	push	0xc
0x248b:	jmp	0x23b0


0x2496:	push	0xd
0x249b:	jmp	0x23b0


0x24a6:	push	0xe
0x24ab:	jmp	0x23b0


0x24b6:	push	0xf
0x24bb:	jmp	0x23b0


0x24c6:	push	0x10
0x24cb:	jmp	0x23b0


0x24d6:	push	0x11
0x24db:	jmp	0x23b0


0x24e6:	push	0x12
0x24eb:	jmp	0x23b0


0x24f6:	push	0x13
0x24fb:	jmp	0x23b0


0x2506:	push	0x14
0x250b:	jmp	0x23b0


0x2516:	push	0x15
0x251b:	jmp	0x23b0


0x2526:	push	0x16
0x252b:	jmp	0x23b0


0x2536:	push	0x17
0x253b:	jmp	0x23b0


0x2546:	push	0x18
0x254b:	jmp	0x23b0


0x2556:	push	0x19
0x255b:	jmp	0x23b0


0x2566:	push	0x1a
0x256b:	jmp	0x23b0


0x2576:	push	0x1b
0x257b:	jmp	0x23b0


0x2586:	push	0x1c
0x258b:	jmp	0x23b0


0x2596:	push	0x1d
0x259b:	jmp	0x23b0


0x25a6:	push	0x1e
0x25ab:	jmp	0x23b0


0x25b6:	push	0x1f
0x25bb:	jmp	0x23b0


0x25c6:	push	0x20
0x25cb:	jmp	0x23b0


0x25d6:	push	0x21
0x25db:	jmp	0x23b0


0x25e6:	push	0x22
0x25eb:	jmp	0x23b0


0x25f6:	push	0x23
0x25fb:	jmp	0x23b0


0x2606:	push	0x24
0x260b:	jmp	0x23b0


0x2616:	push	0x25
0x261b:	jmp	0x23b0


0x2626:	push	0x26
0x262b:	jmp	0x23b0


0x2636:	push	0x27
0x263b:	jmp	0x23b0


0x2646:	push	0x28
0x264b:	jmp	0x23b0


0x2656:	push	0x29
0x265b:	jmp	0x23b0


0x2666:	push	0x2a
0x266b:	jmp	0x23b0


0x2676:	push	0x2b
0x267b:	jmp	0x23b0


0x2686:	push	0x2c
0x268b:	jmp	0x23b0


0x2696:	push	0x2d
0x269b:	jmp	0x23b0


0x26a6:	push	0x2e
0x26ab:	jmp	0x23b0


0x26b6:	push	0x2f
0x26bb:	jmp	0x23b0


0x26c6:	push	0x30
0x26cb:	jmp	0x23b0


0x26d6:	push	0x31
0x26db:	jmp	0x23b0


0x26e6:	push	0x32
0x26eb:	jmp	0x23b0


0x26f6:	push	0x33
0x26fb:	jmp	0x23b0


0x2706:	push	0x34
0x270b:	jmp	0x23b0


0x2716:	push	0x35
0x271b:	jmp	0x23b0


0x2726:	push	0x36
0x272b:	jmp	0x23b0


0x2736:	push	0x37
0x273b:	jmp	0x23b0


0x2746:	push	0x38
0x274b:	jmp	0x23b0


0x2756:	push	0x39
0x275b:	jmp	0x23b0


0x2766:	push	0x3a
0x276b:	jmp	0x23b0


0x2776:	push	0x3b
0x277b:	jmp	0x23b0


0x2786:	push	0x3c
0x278b:	jmp	0x23b0


0x2796:	push	0x3d
0x279b:	jmp	0x23b0


0x27a6:	push	0x3e
0x27ab:	jmp	0x23b0


0x27b6:	push	0x3f
0x27bb:	jmp	0x23b0


0x27c6:	push	0x40
0x27cb:	jmp	0x23b0


0x27d6:	push	0x41
0x27db:	jmp	0x23b0


0x27e6:	push	0x42
0x27eb:	jmp	0x23b0


0x27f6:	push	0x43
0x27fb:	jmp	0x23b0


0x2806:	push	0x44
0x280b:	jmp	0x23b0


0x2816:	push	0x45
0x281b:	jmp	0x23b0


0x2826:	push	0x46
0x282b:	jmp	0x23b0


0x2836:	push	0x47
0x283b:	jmp	0x23b0


0x2846:	push	0x48
0x284b:	jmp	0x23b0


0x2856:	push	0x49
0x285b:	jmp	0x23b0


0x2866:	push	0x4a
0x286b:	jmp	0x23b0


0x2870:	jmp	qword ptr [rip + 0x225682]




0x2876:	push	0x4b
0x287b:	jmp	0x23b0


0x2886:	push	0x4c
0x288b:	jmp	0x23b0


0x2896:	push	0x4d
0x289b:	jmp	0x23b0


0x28a6:	push	0x4e
0x28ab:	jmp	0x23b0


0x28b6:	push	0x4f
0x28bb:	jmp	0x23b0


0x28c6:	push	0x50
0x28cb:	jmp	0x23b0


0x28d6:	push	0x51
0x28db:	jmp	0x23b0


0x28e6:	push	0x52
0x28eb:	jmp	0x23b0


0x28f6:	push	0x53
0x28fb:	jmp	0x23b0


0x2906:	push	0x54
0x290b:	jmp	0x23b0


0x2916:	push	0x55
0x291b:	jmp	0x23b0


0x2926:	push	0x56
0x292b:	jmp	0x23b0


0x2936:	push	0x57
0x293b:	jmp	0x23b0


0x2946:	push	0x58
0x294b:	jmp	0x23b0


0x2956:	push	0x59
0x295b:	jmp	0x23b0


0x2966:	push	0x5a
0x296b:	jmp	0x23b0


0x2976:	push	0x5b
0x297b:	jmp	0x23b0


0x2986:	push	0x5c
0x298b:	jmp	0x23b0


0x2996:	push	0x5d
0x299b:	jmp	0x23b0


0x29a0:	jmp	qword ptr [rip + 0x2255ea]




0x29a6:	push	0x5e
0x29ab:	jmp	0x23b0


0x29b6:	push	0x5f
0x29bb:	jmp	0x23b0


0x29c6:	push	0x60
0x29cb:	jmp	0x23b0


0x29d6:	push	0x61
0x29db:	jmp	0x23b0


0x29e6:	push	0x62
0x29eb:	jmp	0x23b0


0x29f6:	push	0x63
0x29fb:	jmp	0x23b0


0x2a06:	push	0x64
0x2a0b:	jmp	0x23b0


0x2a16:	nop	


0x2a43:	nop	word ptr cs:[rax + rax]
0x2a4d:	nop	dword ptr [rax]


0x2b8e:	mov	dword ptr [rsp + 0x10], 0x48
0x2b96:	jmp	0x2b48


0x2b98:	mov	rdi, qword ptr [rip + 0x225521]
0x2b9f:	lea	r8, [rip + 0x1cfee]
0x2ba6:	lea	rcx, [rip + 0x2255cb]
0x2bad:	xor	edx, edx
0x2baf:	xor	esi, esi
0x2bb1:	call	0xccf0


0x2bb6:	test	eax, eax
0x2bb8:	jne	0x3e54


0x2bbe:	cmp	qword ptr [rip + 0x2255b2], 0
0x2bc6:	jne	0x2b48


0x3e54:	mov	r8, qword ptr [rip + 0x224265]
0x3e5b:	mov	esi, dword ptr [rsp + 0x5c]
0x3e5f:	lea	rcx, [rip + 0x22387a]
0x3e66:	mov	edx, 0x74
0x3e6b:	mov	edi, eax
0x3e6d:	call	0xd7d0


0x2bc8:	mov	rax, qword ptr [rip + 0x2254f1]
0x2bcf:	cmp	byte ptr [rax], 0x2d
0x2bd2:	jne	0x2b48


0x2bd8:	lea	rsi, [rip + 0x1e171]
0x2bdf:	mov	edx, 5
0x2be4:	xor	edi, edi
0x2be6:	call	0x2510


0x2beb:	xor	esi, esi
0x2bed:	mov	rdx, rax
0x2bf0:	mov	edi, 1
0x2bf5:	xor	eax, eax
0x2bf7:	call	0x28a0


0x2bfc:	mov	byte ptr [rsp + 0x1c], 1
0x2c01:	jmp	0x2b48


0x2c06:	mov	dword ptr [rip + 0x225563], r15d
0x2c0d:	mov	qword ptr [rip + 0x225530], 0x100000
0x2c18:	jmp	0x2b48


0x2c1d:	mov	byte ptr [rip + 0x225560], 1
0x2c24:	jmp	0x2b48


0x2c29:	mov	dword ptr [rip + 0x225540], r15d
0x2c30:	mov	qword ptr [rip + 0x22550d], 0x400
0x2c3b:	jmp	0x2b48


0x2c40:	mov	dword ptr [rip + 0x225526], 0xb0
0x2c4a:	mov	qword ptr [rip + 0x2254f3], 1
0x2c55:	jmp	0x2b48


0x2c5a:	mov	rcx, qword ptr [rsp + 0x28]
0x2c5f:	mov	rdi, qword ptr [rip + 0x22545a]
0x2c66:	xor	r8d, r8d
0x2c69:	xor	edx, edx
0x2c6b:	xor	esi, esi
0x2c6d:	call	0xd3b0


0x2c72:	test	eax, eax
0x2c74:	jne	0x3772


0x2c7a:	mov	rax, qword ptr [rsp + 0x60]
0x2c7f:	mov	byte ptr [rsp + 0x20], 1
0x2c84:	mov	qword ptr [rip + 0x225385], rax
0x2c8b:	jmp	0x2b48


0x3772:	mov	rdi, qword ptr [rip + 0x224947]
0x3779:	call	0xc360


0x377e:	lea	rsi, [rip + 0x1c3f6]
0x3785:	mov	edx, 5
0x378a:	xor	edi, edi
0x378c:	mov	qword ptr [rsp + 8], rax
0x3791:	call	0x2510


0x3796:	mov	rcx, qword ptr [rsp + 8]
0x379b:	mov	rdx, rax
0x379e:	xor	esi, esi
0x37a0:	xor	edi, edi
0x37a2:	xor	eax, eax
0x37a4:	call	0x28a0


0x37a9:	mov	byte ptr [rsp + 8], 0
0x37ae:	jmp	0x2b48


0x2c90:	mov	byte ptr [rip + 0x2254ea], 1
0x2c97:	jmp	0x2b48


0x2c9c:	mov	byte ptr [rip + 0x2254e2], 1
0x2ca3:	mov	dword ptr [rip + 0x2254c6], r15d
0x2caa:	mov	qword ptr [rip + 0x225493], 1
0x2cb5:	jmp	0x2b48


0x2cba:	mov	byte ptr [rip + 0x2254c5], 1
0x2cc1:	jmp	0x2b48


0x2cc6:	mov	rdx, qword ptr [rip + 0x2253f3]
0x2ccd:	mov	rsi, qword ptr [rip + 0x22546c]
0x2cd4:	mov	r8d, 0xa
0x2cda:	lea	rdi, [rip + 0x2a9f]
0x2ce1:	mov	ecx, 0x10000000
0x2ce6:	call	0x5d10


0x2ceb:	test	eax, eax
0x2ced:	je	0x2b48


0x2cf3:	mov	rdx, qword ptr [rip + 0x2253c6]
0x2cfa:	mov	esi, 3
0x2cff:	xor	edi, edi
0x2d01:	call	0xc190


0x2d06:	mov	qword ptr [rsp + 8], rax
0x2d0b:	call	0x2410


0x2d10:	mov	rcx, qword ptr [rsp + 8]
0x2d15:	mov	esi, dword ptr [rax]
0x2d17:	lea	rdx, [rip + 0x1e772]
0x2d1e:	xor	edi, edi
0x2d20:	xor	eax, eax
0x2d22:	call	0x28a0


0x2d27:	mov	byte ptr [rsp + 8], 0
0x2d2c:	jmp	0x2b48


0x2d31:	mov	byte ptr [rip + 0x225448], 1
0x2d38:	jmp	0x2b48


0x2d3d:	mov	dword ptr [rsp + 0x18], 0x10
0x2d45:	jmp	0x2b48


0x2d4a:	mov	dword ptr [rsp + 0x18], 2
0x2d52:	jmp	0x2b48


0x2d57:	mov	dword ptr [rsp + 0x18], 0x11
0x2d5f:	jmp	0x2b48


0x2d64:	mov	rdi, qword ptr [rip + 0x225355]
0x2d6b:	lea	rdx, [rip + 0x2253d6]
0x2d72:	lea	rsi, [rip + 0x2253f7]
0x2d79:	call	0x9ab0


0x2d7e:	test	eax, eax
0x2d80:	je	0x2b48


0x2d86:	mov	r8, qword ptr [rip + 0x225333]
0x2d8d:	mov	esi, dword ptr [rsp + 0x5c]
0x2d91:	lea	rcx, [rip + 0x224948]
0x2d98:	mov	edx, 0x42
0x2d9d:	mov	edi, eax
0x2d9f:	call	0xd7d0


0x2da4:	mov	byte ptr [rip + 0x2253d7], 1
0x2dab:	jmp	0x2b48


0x2db0:	lea	rax, [rip + 0x1ce15]


0x2e02:	mov	byte ptr [rip + 0x225364], 1
0x2e09:	jmp	0x2b48


0x2e0e:	mov	rax, qword ptr [rip + 0x2252ab]
0x2e15:	mov	qword ptr [rip + 0x225344], rax
0x2e1c:	jmp	0x2b48


0x2e21:	mov	rsi, qword ptr [rip + 0x225298]
0x2e28:	xor	eax, eax
0x2e2a:	mov	byte ptr [rip + 0x22533b], 1
0x2e31:	test	rsi, rsi
0x2e34:	je	0x2e67


0x2e67:	lea	rdi, [rip + 0x1cd39]
0x2e6e:	mov	dword ptr [rip + 0x2252f4], eax
0x2e74:	call	0x23e0


0x2e36:	mov	r9, qword ptr [rip + 0x2251e3]
0x2e3d:	lea	rdx, [rip + 0x22485c]
0x2e44:	lea	rcx, [rip + 0x1e5d5]
0x2e4b:	lea	rdi, [rip + 0x1cd4e]
0x2e52:	mov	r8d, 4
0x2e58:	call	0x49d0


0x2e5d:	lea	rdx, [rip + 0x1e5bc]
0x2e64:	mov	eax, dword ptr [rdx + rax*4]
0x2e67:	lea	rdi, [rip + 0x1cd39]
0x2e6e:	mov	dword ptr [rip + 0x2252f4], eax
0x2e74:	call	0x23e0


0x2e79:	mov	rdi, rax
0x2e7c:	call	0x1ee60


0x2e81:	mov	qword ptr [rip + 0x2252c8], rax
0x2e88:	jmp	0x2b48


0x2e8d:	mov	dword ptr [rip + 0x2252d9], 0x90
0x2e97:	mov	qword ptr [rip + 0x2252a6], 1
0x2ea2:	jmp	0x2b48


0x2ea7:	mov	rsi, qword ptr [rip + 0x225212]
0x2eae:	mov	rdi, qword ptr [rip + 0x22528b]
0x2eb5:	mov	edx, 0x10000000
0x2eba:	call	0x5780


0x2ebf:	jmp	0x2b48


0x2ec4:	mov	byte ptr [rip + 0x2252ba], 1
0x2ecb:	jmp	0x2b48


0x2ed0:	mov	r13, qword ptr [rip + 0x2251e9]
0x2ed7:	jmp	0x2b48


0x3c5b:	xor	edi, edi
0x3c5d:	call	0x4240


0x3f36:	nop	word ptr cs:[rax + rax]


0x3f6a:	hlt	


0x3f6b:	nop	dword ptr [rax + rax]


0x3fa2:	nop	dword ptr [rax]
0x3fa6:	nop	word ptr cs:[rax + rax]


0x3ff2:	nop	dword ptr [rax]
0x3ff6:	nop	word ptr cs:[rax + rax]


0x403a:	nop	word ptr [rax + rax]


0x404a:	nop	word ptr [rax + rax]


0x40da:	nop	word ptr [rax + rax]


0x4239:	nop	dword ptr [rax]


0x46fa:	nop	word ptr [rax + rax]


0x470a:	nop	word ptr [rax + rax]


0x4826:	nop	word ptr cs:[rax + rax]


0x48a3:	nop	dword ptr [rax]
0x48a6:	nop	word ptr cs:[rax + rax]


0x4a3d:	nop	dword ptr [rax]


0x4a8d:	nop	dword ptr [rax]


0x4ab4:	nop	
0x4ab6:	nop	word ptr cs:[rax + rax]


0x4af8:	nop	dword ptr [rax + rax]


0x4b8a:	nop	word ptr [rax + rax]


0x4bad:	nop	dword ptr [rax]


0x4bcc:	nop	dword ptr [rax]


0x4bd8:	nop	dword ptr [rax + rax]


0x4be8:	nop	dword ptr [rax + rax]


0x4c94:	nop	word ptr cs:[rax + rax]
0x4c9e:	nop	


0x4cac:	nop	dword ptr [rax]


0x4cba:	nop	word ptr [rax + rax]


0x4ccc:	nop	dword ptr [rax]


0x4ce6:	nop	word ptr cs:[rax + rax]


0x4da5:	nop	
0x4da6:	nop	word ptr cs:[rax + rax]


0x4e19:	nop	dword ptr [rax]


0x4e84:	nop	
0x4e86:	nop	word ptr cs:[rax + rax]


0x4eb7:	nop	word ptr [rax + rax]


0x4f1a:	nop	word ptr [rax + rax]


0x4f77:	nop	word ptr [rax + rax]


0x4f82:	nop	dword ptr [rax]
0x4f86:	nop	word ptr cs:[rax + rax]


0x4f95:	nop	
0x4f96:	nop	word ptr cs:[rax + rax]


0x4fb3:	nop	dword ptr [rax]
0x4fb6:	nop	word ptr cs:[rax + rax]


0x4fd3:	nop	dword ptr [rax]
0x4fd6:	nop	word ptr cs:[rax + rax]


0x4fe5:	nop	
0x4fe6:	nop	word ptr cs:[rax + rax]


0x50bf:	nop	


0x5344:	nop	
0x5346:	nop	word ptr cs:[rax + rax]


0x537c:	nop	dword ptr [rax]


0x53bd:	mov	eax, 1
0x53c2:	ret	


0x53dd:	test	esi, esi
0x53df:	lea	rax, [rdi + 2]
0x53e3:	jne	0x53ed


0x53e5:	cmp	byte ptr [rdi + 1], 0
0x53e9:	cmovne	rcx, rax
0x53ed:	movzx	eax, byte ptr [rcx]
0x53f0:	mov	rdi, rcx
0x53f3:	jmp	0x539e


0x53ed:	movzx	eax, byte ptr [rcx]
0x53f0:	mov	rdi, rcx
0x53f3:	jmp	0x539e


0x53fd:	movzx	eax, byte ptr [rdi + 1]
0x5401:	cmp	al, 0x28
0x5403:	je	0x53bd


0x5405:	mov	rdi, rcx
0x5408:	jmp	0x539e


0x540a:	nop	word ptr [rax + rax]


0x541a:	nop	word ptr [rax + rax]


0x5507:	nop	word ptr [rax + rax]


0x55d7:	nop	word ptr [rax + rax]


0x5775:	nop	
0x5776:	nop	word ptr cs:[rax + rax]


0x5aee:	nop	


0x5d03:	nop	dword ptr [rax]
0x5d06:	nop	word ptr cs:[rax + rax]


0x5db7:	nop	word ptr [rax + rax]


0x5e12:	nop	dword ptr [rax]
0x5e16:	nop	word ptr cs:[rax + rax]


0x5e72:	nop	dword ptr [rax]
0x5e76:	nop	word ptr cs:[rax + rax]


0x608b:	mov	rbx, qword ptr [rsp + 0x38]
0x6090:	lea	rax, [rbx - 1]
0x6094:	mov	r13d, 1
0x609a:	mov	rdx, rax
0x609d:	lea	rax, [rax - 1]
0x60a1:	add	r13d, 1
0x60a5:	cmp	byte ptr [rax + 1], 0x25
0x60a9:	jne	0x609a


0x622a:	xor	r14d, r14d
0x622d:	mov	ebp, 0x2520
0x6232:	test	r11d, r11d
0x6235:	mov	word ptr [rsp + 0x9b], bp
0x623d:	jne	0x7a90


0x6243:	lea	rdx, [rsp + 0x9b]
0x624b:	mov	rbp, rbx
0x624e:	lea	rax, [rdx + 2]
0x6252:	mov	byte ptr [rax], r13b
0x6255:	mov	byte ptr [rax + 1], 0
0x6259:	lea	rax, [rsp + 0xa0]
0x6261:	mov	rcx, qword ptr [rsp]
0x6265:	mov	esi, 0x400
0x626a:	mov	dword ptr [rsp + 0x40], r10d
0x626f:	mov	rdi, rax
0x6272:	mov	dword ptr [rsp + 0x58], r11d
0x6277:	mov	qword ptr [rsp + 0x38], rax
0x627c:	call	0x2870


0x7a90:	xor	esi, esi
0x7a92:	jmp	0x648a


0x648a:	lea	rdx, [rsp + 0x9b]
0x6492:	mov	byte ptr [rsp + 0x9d], r11b
0x649a:	mov	rbp, rbx
0x649d:	mov	r11d, esi
0x64a0:	lea	rax, [rdx + 3]
0x64a4:	jmp	0x6252


0x6252:	mov	byte ptr [rax], r13b
0x6255:	mov	byte ptr [rax + 1], 0
0x6259:	lea	rax, [rsp + 0xa0]
0x6261:	mov	rcx, qword ptr [rsp]
0x6265:	mov	esi, 0x400
0x626a:	mov	dword ptr [rsp + 0x40], r10d
0x626f:	mov	rdi, rax
0x6272:	mov	dword ptr [rsp + 0x58], r11d
0x6277:	mov	qword ptr [rsp + 0x38], rax
0x627c:	call	0x2870


0x6281:	test	rax, rax
0x6284:	je	0x5f90


0x628a:	movsxd	r10, dword ptr [rsp + 0x40]
0x628f:	lea	r13, [rax - 1]
0x6293:	mov	eax, 0
0x6298:	mov	rdx, r15
0x629b:	not	rdx
0x629e:	test	r10d, r10d
0x62a1:	cmovns	rax, r10
0x62a5:	cmp	r13, rax
0x62a8:	mov	rdi, rax
0x62ab:	cmovae	rdi, r13
0x62af:	cmp	rdx, rdi
0x62b2:	mov	qword ptr [rsp + 0x40], rdi
0x62b7:	jbe	0x5f3f


0x62bd:	test	r12, r12
0x62c0:	je	0x6343


0x6343:	add	r15, qword ptr [rsp + 0x40]
0x6348:	jmp	0x5f90


0x62c6:	mov	r11d, dword ptr [rsp + 0x58]
0x62cb:	test	r11d, r11d
0x62ce:	jne	0x631b


0x62d0:	cmp	r13, rax
0x62d3:	jae	0x631b


0x631b:	test	r14b, r14b
0x631e:	jne	0x72b0


0x62d5:	mov	eax, dword ptr [rsp + 8]
0x62d9:	movsxd	rbx, r10d
0x62dc:	sub	rbx, r13
0x62df:	cmp	eax, 0x30
0x62e2:	je	0x72f0


0x6324:	cmp	byte ptr [rsp + 0x34], 0
0x6329:	je	0x7288


0x72b0:	mov	rsi, qword ptr [rsp + 0x38]
0x72b5:	mov	rdx, r13
0x72b8:	mov	rdi, r12
0x72bb:	add	rsi, 1
0x72bf:	call	0x5dc0


0x72f0:	test	rbx, rbx
0x72f3:	je	0x631b


0x62e8:	cmp	eax, 0x2b
0x62eb:	je	0x72f0


0x7288:	mov	rdi, qword ptr [rsp + 0x38]
0x728d:	mov	rcx, r12
0x7290:	mov	edx, 1
0x7295:	mov	rsi, r13
0x7298:	add	rdi, 1
0x729c:	call	0x2960


0x632f:	mov	rsi, qword ptr [rsp + 0x38]
0x6334:	mov	rdx, r13
0x6337:	mov	rdi, r12
0x633a:	add	rsi, 1
0x633e:	call	0x5e20


0x72f9:	xor	edx, edx
0x72fb:	mov	qword ptr [rsp + 8], rbp
0x7300:	mov	rbp, rdx
0x7303:	nop	dword ptr [rax + rax]
0x7308:	mov	rsi, r12
0x730b:	mov	edi, 0x30
0x7310:	add	rbp, 1
0x7314:	call	0x2660


0x62f1:	xor	edx, edx
0x62f3:	test	rbx, rbx
0x62f6:	je	0x631b


0x62f8:	mov	qword ptr [rsp + 8], rbp
0x62fd:	mov	rbp, rdx
0x6300:	mov	rsi, r12
0x6303:	mov	edi, 0x20
0x6308:	add	rbp, 1
0x630c:	call	0x2660


0x6311:	cmp	rbx, rbp
0x6314:	jne	0x6300


0x6316:	mov	rbp, qword ptr [rsp + 8]
0x631b:	test	r14b, r14b
0x631e:	jne	0x72b0


0x6300:	mov	rsi, r12
0x6303:	mov	edi, 0x20
0x6308:	add	rbp, 1
0x630c:	call	0x2660


0x7319:	cmp	rbx, rbp
0x731c:	jne	0x7308


0x731e:	jmp	0x6316


0x7308:	mov	rsi, r12
0x730b:	mov	edi, 0x30
0x7310:	add	rbp, 1
0x7314:	call	0x2660


0x72a1:	jmp	0x6343


0x72c4:	jmp	0x6343


0x6359:	movzx	eax, byte ptr [rsp + 0x34]
0x635e:	test	r14b, r14b
0x6361:	lea	rdx, [rsp + 0x9b]
0x6369:	mov	rbp, rbx
0x636c:	cmovne	eax, r14d
0x6370:	xor	r14d, r14d
0x6373:	xor	r11d, r11d
0x6376:	mov	byte ptr [rsp + 0x34], al
0x637a:	mov	eax, 0x2520
0x637f:	mov	word ptr [rsp + 0x9b], ax
0x6387:	lea	rax, [rdx + 2]
0x638b:	jmp	0x6252


0x6390:	test	r10d, r10d
0x6393:	mov	r13d, 0
0x6399:	mov	eax, 1
0x639e:	cmovns	r13d, r10d
0x63a2:	movsxd	r13, r13d
0x63a5:	test	r13, r13
0x63a8:	cmove	r13, rax
0x63ac:	mov	rax, r15
0x63af:	not	rax
0x63b2:	cmp	rax, r13
0x63b5:	jbe	0x5f3f


0x63bb:	test	r12, r12
0x63be:	je	0x655f


0x63c4:	cmp	r10d, 1
0x63c8:	jle	0x63ff


0x63ff:	mov	rsi, r12
0x6402:	mov	edi, 9
0x6407:	call	0x2660


0x63ca:	mov	eax, dword ptr [rsp + 8]
0x63ce:	movsxd	r10, r10d
0x63d1:	lea	r14, [r10 - 1]
0x63d5:	cmp	eax, 0x30
0x63d8:	je	0x78af


0x78af:	xor	ebp, ebp
0x78b1:	mov	rsi, r12
0x78b4:	mov	edi, 0x30
0x78b9:	add	rbp, 1
0x78bd:	call	0x2660


0x63de:	xor	ebp, ebp
0x63e0:	cmp	eax, 0x2b
0x63e3:	je	0x78af


0x63e9:	mov	rsi, r12
0x63ec:	mov	edi, 0x20
0x63f1:	add	rbp, 1
0x63f5:	call	0x2660


0x63fa:	cmp	r14, rbp
0x63fd:	jne	0x63e9


0x78c2:	cmp	r14, rbp
0x78c5:	jne	0x78b1


0x78c7:	jmp	0x63ff


0x78b1:	mov	rsi, r12
0x78b4:	mov	edi, 0x30
0x78b9:	add	rbp, 1
0x78bd:	call	0x2660


0x640c:	jmp	0x655f


0x6411:	mov	rax, qword ptr [rsp]
0x6415:	mov	edx, 0x92492493
0x641a:	mov	esi, 1
0x641f:	mov	eax, dword ptr [rax + 0x18]
0x6422:	lea	ecx, [rax + 6]
0x6425:	mov	dword ptr [rsp + 0x38], eax
0x6429:	mov	eax, ecx
0x642b:	imul	edx
0x642d:	lea	eax, [rdx + rcx]
0x6430:	mov	edx, ecx
0x6432:	sar	edx, 0x1f
0x6435:	sar	eax, 2
0x6438:	sub	eax, edx
0x643a:	lea	edx, [rax*8]
0x6441:	sub	edx, eax
0x6443:	sub	ecx, edx
0x6445:	add	ecx, 1
0x6448:	nop	dword ptr [rax + rax]
0x6450:	mov	eax, ecx
0x6452:	xor	r8d, r8d
0x6455:	xor	r9d, r9d
0x6458:	shr	eax, 0x1f
0x645b:	mov	r13d, eax
0x645e:	mov	eax, ecx
0x6460:	not	eax
0x6462:	shr	eax, 0x1f
0x6465:	cmp	r11d, 0x4f
0x6469:	jne	0x7180


0x646f:	test	al, al
0x6471:	je	0x7180


0x7180:	mov	eax, ecx
0x7182:	neg	eax
0x7184:	test	r13b, r13b
0x7187:	cmovne	ecx, eax
0x718a:	jmp	0x6768


0x6477:	mov	r13d, edi
0x647a:	mov	edx, 0x2520
0x647f:	xor	r14d, r14d
0x6482:	mov	word ptr [rsp + 0x9b], dx
0x648a:	lea	rdx, [rsp + 0x9b]
0x6492:	mov	byte ptr [rsp + 0x9d], r11b
0x649a:	mov	rbp, rbx
0x649d:	mov	r11d, esi
0x64a0:	lea	rax, [rdx + 3]
0x64a4:	jmp	0x6252


0x6768:	lea	rax, [rsp + 0xa0]
0x6770:	lea	rdi, [rsp + 0xb7]
0x6778:	mov	r11d, 0xcccccccd
0x677e:	mov	qword ptr [rsp + 0x38], rax
0x6783:	nop	dword ptr [rax + rax]
0x6788:	test	r8b, 1
0x678c:	lea	r14, [rdi - 1]
0x6790:	je	0x67a0


0x67a0:	mov	eax, ecx
0x67a2:	sar	r8d, 1
0x67a5:	mul	r11d
0x67a8:	shr	edx, 3
0x67ab:	lea	eax, [rdx + rdx*4]
0x67ae:	add	eax, eax
0x67b0:	sub	ecx, eax
0x67b2:	mov	eax, r8d
0x67b5:	add	ecx, 0x30
0x67b8:	or	eax, edx
0x67ba:	mov	byte ptr [rdi - 1], cl
0x67bd:	mov	ecx, edx
0x67bf:	mov	rdi, r14
0x67c2:	jne	0x6788


0x6792:	lea	rax, [rdi - 2]
0x6796:	mov	byte ptr [rdi - 1], 0x3a
0x679a:	mov	rdi, r14
0x679d:	mov	r14, rax
0x67a0:	mov	eax, ecx
0x67a2:	sar	r8d, 1
0x67a5:	mul	r11d
0x67a8:	shr	edx, 3
0x67ab:	lea	eax, [rdx + rdx*4]
0x67ae:	add	eax, eax
0x67b0:	sub	ecx, eax
0x67b2:	mov	eax, r8d
0x67b5:	add	ecx, 0x30
0x67b8:	or	eax, edx
0x67ba:	mov	byte ptr [rdi - 1], cl
0x67bd:	mov	ecx, edx
0x67bf:	mov	rdi, r14
0x67c2:	jne	0x6788


0x67c4:	cmp	r10d, esi
0x67c7:	cmovge	esi, r10d
0x67cb:	test	r13b, r13b
0x67ce:	mov	dword ptr [rsp + 0x58], esi
0x67d2:	jne	0x7190


0x6788:	test	r8b, 1
0x678c:	lea	r14, [rdi - 1]
0x6790:	je	0x67a0


0x67d8:	test	r9b, r9b
0x67db:	je	0x6659


0x7190:	cmp	dword ptr [rsp + 8], 0x2d
0x7195:	mov	ebp, 0x2d
0x719a:	jne	0x67f1


0x6659:	mov	rax, qword ptr [rsp + 0x38]
0x665e:	mov	rdx, r15
0x6661:	not	rdx
0x6664:	add	rax, 0x17
0x6668:	sub	rax, r14
0x666b:	cmp	dword ptr [rsp + 8], 0x2d
0x6670:	mov	qword ptr [rsp + 0x40], rax
0x6675:	je	0x668a


0x67e1:	cmp	dword ptr [rsp + 8], 0x2d
0x67e6:	mov	ebp, 0x2b
0x67eb:	je	0x759d


0x71a0:	mov	byte ptr [rsp + 0x40], 0x2d
0x71a5:	test	r10d, r10d
0x71a8:	mov	ecx, 0
0x71ad:	mov	eax, 1
0x71b2:	cmovns	ecx, r10d
0x71b6:	movsxd	r13, ecx
0x71b9:	test	r13, r13
0x71bc:	cmovne	rax, r13
0x71c0:	mov	rdi, rax
0x71c3:	mov	qword ptr [rsp + 8], rax
0x71c8:	mov	rax, r15
0x71cb:	not	rax
0x71ce:	cmp	rax, rdi
0x71d1:	jbe	0x5f3f


0x67f1:	mov	rax, qword ptr [rsp + 0x38]
0x67f6:	mov	rdx, r15
0x67f9:	not	rdx
0x67fc:	add	rax, 0x17
0x6800:	sub	rax, r14
0x6803:	mov	rdi, rax
0x6806:	mov	qword ptr [rsp + 0x40], rax
0x680b:	mov	eax, dword ptr [rsp + 0x58]
0x680f:	sub	eax, 1
0x6812:	sub	eax, edi
0x6814:	test	eax, eax
0x6816:	mov	r13d, eax
0x6819:	jle	0x74e0


0x668a:	test	r10d, r10d
0x668d:	mov	ecx, 0
0x6692:	mov	rbp, rbx
0x6695:	cmovns	ecx, r10d
0x6699:	movsxd	r13, ecx
0x669c:	mov	rax, qword ptr [rsp + 0x40]
0x66a1:	cmp	rax, r13
0x66a4:	mov	rbx, rax
0x66a7:	cmovb	rbx, r13
0x66ab:	cmp	rbx, rdx
0x66ae:	jae	0x5f3f


0x6677:	mov	r13d, dword ptr [rsp + 0x58]
0x667c:	sub	r13d, dword ptr [rsp + 0x40]
0x6681:	test	r13d, r13d
0x6684:	jg	0x77be


0x759d:	mov	byte ptr [rsp + 0x40], 0x2b
0x75a2:	jmp	0x71a5


0x71d7:	test	r12, r12
0x71da:	je	0x7239


0x74e0:	test	r10d, r10d
0x74e3:	mov	ecx, 0
0x74e8:	mov	eax, 1
0x74ed:	cmovns	ecx, r10d
0x74f1:	movsxd	r13, ecx
0x74f4:	test	r13, r13
0x74f7:	cmovne	rax, r13
0x74fb:	cmp	rax, rdx
0x74fe:	mov	qword ptr [rsp + 0x48], rax
0x7503:	jae	0x5f3f


0x681f:	cmp	dword ptr [rsp + 8], 0x5f
0x6824:	je	0x743c


0x66b4:	test	r12, r12
0x66b7:	je	0x672e


0x77be:	cmp	dword ptr [rsp + 8], 0x5f
0x77c3:	je	0x743a


0x71a5:	test	r10d, r10d
0x71a8:	mov	ecx, 0
0x71ad:	mov	eax, 1
0x71b2:	cmovns	ecx, r10d
0x71b6:	movsxd	r13, ecx
0x71b9:	test	r13, r13
0x71bc:	cmovne	rax, r13
0x71c0:	mov	rdi, rax
0x71c3:	mov	qword ptr [rsp + 8], rax
0x71c8:	mov	rax, r15
0x71cb:	not	rax
0x71ce:	cmp	rax, rdi
0x71d1:	jbe	0x5f3f


0x7239:	add	r15, qword ptr [rsp + 8]
0x723e:	mov	rax, qword ptr [rsp + 0x38]
0x7243:	mov	rbp, rbx
0x7246:	mov	dword ptr [rsp + 8], 0x2d
0x724e:	add	rax, 0x17
0x7252:	sub	rax, r14
0x7255:	mov	rdx, r15
0x7258:	mov	qword ptr [rsp + 0x40], rax
0x725d:	not	rdx
0x7260:	jmp	0x669c


0x71dc:	mov	edi, dword ptr [rsp + 0x58]
0x71e0:	test	edi, edi
0x71e2:	jne	0x7222


0x7509:	test	r12, r12
0x750c:	je	0x758a


0x743c:	movsxd	rax, r13d
0x743f:	cmp	rax, rdx
0x7442:	mov	qword ptr [rsp + 8], rax
0x7447:	jae	0x5f3f


0x682a:	movsxd	rax, dword ptr [rsp + 0x58]
0x682f:	cmp	rax, rdx
0x6832:	mov	rdi, rax
0x6835:	jae	0x5f3f


0x672e:	add	r15, rbx
0x6731:	jmp	0x5f90


0x66b9:	mov	edx, dword ptr [rsp + 0x58]
0x66bd:	test	edx, edx
0x66bf:	jne	0x6713


0x743a:	xor	ebp, ebp
0x743c:	movsxd	rax, r13d
0x743f:	cmp	rax, rdx
0x7442:	mov	qword ptr [rsp + 8], rax
0x7447:	jae	0x5f3f


0x77c9:	movsxd	rax, dword ptr [rsp + 0x58]
0x77ce:	cmp	rax, rdx
0x77d1:	jb	0x68d1


0x669c:	mov	rax, qword ptr [rsp + 0x40]
0x66a1:	cmp	rax, r13
0x66a4:	mov	rbx, rax
0x66a7:	cmovb	rbx, r13
0x66ab:	cmp	rbx, rdx
0x66ae:	jae	0x5f3f


0x71e4:	cmp	r13, 1
0x71e8:	jbe	0x7222


0x7222:	movsx	edi, byte ptr [rsp + 0x40]
0x7227:	mov	rsi, r12
0x722a:	mov	dword ptr [rsp + 0x48], r10d
0x722f:	call	0x2660


0x758a:	add	r15, qword ptr [rsp + 0x48]
0x758f:	mov	rbp, rbx
0x7592:	mov	rdx, r15
0x7595:	not	rdx
0x7598:	jmp	0x669c


0x750e:	mov	ecx, dword ptr [rsp + 0x58]
0x7512:	test	ecx, ecx
0x7514:	jne	0x7574


0x744d:	test	r12, r12
0x7450:	je	0x7495


0x683b:	test	r10d, r10d
0x683e:	mov	eax, 0
0x6843:	mov	ecx, 1
0x6848:	cmovns	eax, r10d
0x684c:	cdqe	
0x684e:	test	rax, rax
0x6851:	cmovne	rcx, rax
0x6855:	cmp	rcx, rdx
0x6858:	mov	qword ptr [rsp + 0x48], rcx
0x685d:	jae	0x5f3f


0x66c1:	cmp	rax, r13
0x66c4:	jae	0x6713


0x6713:	cmp	byte ptr [rsp + 0x34], 0
0x6718:	je	0x72d0


0x68d1:	mov	rbp, rbx
0x68d4:	movsxd	rbx, r13d
0x68d7:	xor	r13d, r13d
0x68da:	test	r12, r12
0x68dd:	je	0x68f6


0x77d7:	jmp	0x5f3f


0x71ea:	movsxd	rax, r10d
0x71ed:	sub	rax, 1
0x71f1:	je	0x7222


0x7516:	cmp	r13, 1
0x751a:	jbe	0x7574


0x7574:	movsx	edi, bpl
0x7578:	mov	rsi, r12
0x757b:	mov	dword ptr [rsp + 0x38], r10d
0x7580:	call	0x2660


0x7495:	add	r15, qword ptr [rsp + 8]
0x749a:	mov	eax, r10d
0x749d:	sub	eax, r13d
0x74a0:	cmp	r10d, r13d
0x74a3:	mov	r10d, 0
0x74a9:	cmovg	r10d, eax
0x74ad:	test	bpl, bpl
0x74b0:	mov	rdx, r15
0x74b3:	not	rdx
0x74b6:	jne	0x75e3


0x7452:	xor	edx, edx
0x7454:	mov	byte ptr [rsp + 0x40], bpl
0x7459:	mov	qword ptr [rsp + 0x48], rbx
0x745e:	mov	rbp, rdx
0x7461:	mov	rbx, rax
0x7464:	mov	dword ptr [rsp + 0x50], r10d
0x7469:	nop	dword ptr [rax]
0x7470:	mov	rsi, r12
0x7473:	mov	edi, 0x20
0x7478:	add	rbp, 1
0x747c:	call	0x2660


0x6863:	test	r12, r12
0x6866:	je	0x68cc


0x66c6:	movsxd	r13, r10d
0x66c9:	sub	r13, rax
0x66cc:	mov	eax, dword ptr [rsp + 8]
0x66d0:	cmp	eax, 0x30
0x66d3:	je	0x73f0


0x72d0:	mov	rsi, qword ptr [rsp + 0x40]
0x72d5:	mov	rcx, r12
0x72d8:	mov	edx, 1
0x72dd:	mov	rdi, r14
0x72e0:	call	0x2960


0x671e:	mov	rdx, qword ptr [rsp + 0x40]
0x6723:	mov	rsi, r14
0x6726:	mov	rdi, r12
0x6729:	call	0x5e20


0x68f6:	add	r15, rbx
0x68f9:	xor	r13d, r13d
0x68fc:	xor	r10d, r10d
0x68ff:	mov	rdx, r15
0x6902:	not	rdx
0x6905:	jmp	0x669c


0x71f3:	mov	qword ptr [rsp + 0x48], rbx
0x71f8:	xor	ebp, ebp
0x71fa:	mov	rbx, rax
0x71fd:	mov	dword ptr [rsp + 0x50], r10d
0x7202:	mov	rsi, r12
0x7205:	mov	edi, 0x20
0x720a:	add	rbp, 1
0x720e:	call	0x2660


0x751c:	mov	edi, dword ptr [rsp + 8]
0x7520:	movsxd	rax, r10d
0x7523:	sub	rax, 1
0x7527:	mov	qword ptr [rsp + 0x38], rax
0x752c:	cmp	edi, 0x30
0x752f:	je	0x79f6


0x74bc:	mov	rax, qword ptr [rsp + 0x38]
0x74c1:	movsxd	r13, r10d
0x74c4:	mov	rbp, rbx
0x74c7:	mov	dword ptr [rsp + 8], 0x5f
0x74cf:	add	rax, 0x17
0x74d3:	sub	rax, r14
0x74d6:	mov	qword ptr [rsp + 0x40], rax
0x74db:	jmp	0x669c


0x75e3:	movsxd	rcx, r10d
0x75e6:	mov	r13d, 1
0x75ec:	test	rcx, rcx
0x75ef:	cmovne	r13, rcx
0x75f3:	cmp	r13, rdx
0x75f6:	mov	qword ptr [rsp + 8], r13
0x75fb:	jae	0x5f3f


0x68cc:	add	r15, qword ptr [rsp + 0x48]
0x68d1:	mov	rbp, rbx
0x68d4:	movsxd	rbx, r13d
0x68d7:	xor	r13d, r13d
0x68da:	test	r12, r12
0x68dd:	je	0x68f6


0x6868:	test	edi, edi
0x686a:	jne	0x68c0


0x73f0:	test	r13, r13
0x73f3:	je	0x6713


0x66d9:	cmp	eax, 0x2b
0x66dc:	je	0x73f0


0x79f6:	cmp	qword ptr [rsp + 0x38], 0
0x79fc:	je	0x7574


0x7535:	cmp	edi, 0x2b
0x7538:	je	0x79f6


0x7601:	test	r12, r12
0x7604:	je	0x7675


0x686c:	cmp	rax, 1
0x6870:	jbe	0x68c0


0x68c0:	movsx	edi, bpl
0x68c4:	mov	rsi, r12
0x68c7:	call	0x2660


0x73f9:	xor	edx, edx
0x73fb:	mov	qword ptr [rsp + 8], rbx
0x7400:	mov	rbx, rdx
0x7403:	nop	dword ptr [rax + rax]
0x7408:	mov	rsi, r12
0x740b:	mov	edi, 0x30
0x7410:	add	rbx, 1
0x7414:	call	0x2660


0x66e2:	xor	edx, edx
0x66e4:	test	r13, r13
0x66e7:	je	0x6713


0x7a02:	xor	edx, edx
0x7a04:	mov	qword ptr [rsp + 0x50], rbx
0x7a09:	mov	dword ptr [rsp + 0x5c], r10d
0x7a0e:	mov	rbx, rdx
0x7a11:	mov	rsi, r12
0x7a14:	mov	edi, 0x30
0x7a19:	add	rbx, 1
0x7a1d:	call	0x2660


0x753e:	xor	edx, edx
0x7540:	test	rax, rax
0x7543:	je	0x7574


0x7675:	add	r15, qword ptr [rsp + 8]
0x767a:	mov	rax, qword ptr [rsp + 0x38]
0x767f:	mov	r13, rcx
0x7682:	mov	rbp, rbx
0x7685:	mov	dword ptr [rsp + 8], 0x5f
0x768d:	add	rax, 0x17
0x7691:	sub	rax, r14
0x7694:	mov	rdx, r15
0x7697:	mov	qword ptr [rsp + 0x40], rax
0x769c:	not	rdx
0x769f:	jmp	0x669c


0x7606:	mov	esi, dword ptr [rsp + 0x58]
0x760a:	test	esi, esi
0x760c:	jne	0x7655


0x6872:	mov	edi, dword ptr [rsp + 8]
0x6876:	movsxd	r10, r10d
0x6879:	lea	rax, [r10 - 1]
0x687d:	cmp	edi, 0x30
0x6880:	mov	qword ptr [rsp + 0x38], rax
0x6885:	je	0x7990


0x66e9:	mov	qword ptr [rsp + 8], rbx
0x66ee:	mov	rbx, rdx
0x66f1:	nop	dword ptr [rax]
0x66f8:	mov	rsi, r12
0x66fb:	mov	edi, 0x20
0x6700:	add	rbx, 1
0x6704:	call	0x2660


0x7545:	mov	qword ptr [rsp + 0x50], rbx
0x754a:	mov	dword ptr [rsp + 0x5c], r10d
0x754f:	mov	rbx, rdx
0x7552:	mov	rsi, r12
0x7555:	mov	edi, 0x20
0x755a:	add	rbx, 1
0x755e:	call	0x2660


0x760e:	cmp	r10d, 1
0x7612:	jbe	0x7655


0x7655:	movsx	edi, bpl
0x7659:	mov	rsi, r12
0x765c:	mov	dword ptr [rsp + 0x48], r10d
0x7661:	mov	qword ptr [rsp + 0x40], rcx
0x7666:	call	0x2660


0x7990:	cmp	qword ptr [rsp + 0x38], 0
0x7996:	je	0x68c0


0x688b:	cmp	edi, 0x2b
0x688e:	je	0x7990


0x7614:	lea	rax, [rcx - 1]
0x7618:	xor	r13d, r13d
0x761b:	mov	qword ptr [rsp + 0x48], rbx
0x7620:	mov	dword ptr [rsp + 0x50], r10d
0x7625:	mov	rbx, r13
0x7628:	mov	r13, rcx
0x762b:	mov	qword ptr [rsp + 0x40], rax
0x7630:	mov	rsi, r12
0x7633:	mov	edi, 0x20
0x7638:	add	rbx, 1
0x763c:	call	0x2660


0x799c:	xor	edx, edx
0x799e:	mov	qword ptr [rsp + 0x50], rbx
0x79a3:	mov	rbx, rdx
0x79a6:	mov	rsi, r12
0x79a9:	mov	edi, 0x30
0x79ae:	add	rbx, 1
0x79b2:	call	0x2660


0x6894:	xor	edx, edx
0x6896:	test	rax, rax
0x6899:	je	0x68c0


0x689b:	mov	qword ptr [rsp + 0x50], rbx
0x68a0:	mov	rbx, rdx
0x68a3:	mov	rsi, r12
0x68a6:	mov	edi, 0x20
0x68ab:	add	rbx, 1
0x68af:	call	0x2660


0x72e5:	jmp	0x672e


0x68b4:	cmp	qword ptr [rsp + 0x38], rbx
0x68b9:	jne	0x68a3


0x68bb:	mov	rbx, qword ptr [rsp + 0x50]
0x68c0:	movsx	edi, bpl
0x68c4:	mov	rsi, r12
0x68c7:	call	0x2660


0x68a3:	mov	rsi, r12
0x68a6:	mov	edi, 0x20
0x68ab:	add	rbx, 1
0x68af:	call	0x2660


0x79b7:	cmp	qword ptr [rsp + 0x38], rbx
0x79bc:	jne	0x79a6


0x79be:	jmp	0x68bb


0x79a6:	mov	rsi, r12
0x79a9:	mov	edi, 0x30
0x79ae:	add	rbx, 1
0x79b2:	call	0x2660


0x7641:	cmp	qword ptr [rsp + 0x40], rbx
0x7646:	jne	0x7630


0x7648:	mov	rbx, qword ptr [rsp + 0x48]
0x764d:	mov	r10d, dword ptr [rsp + 0x50]
0x7652:	mov	rcx, r13
0x7655:	movsx	edi, bpl
0x7659:	mov	rsi, r12
0x765c:	mov	dword ptr [rsp + 0x48], r10d
0x7661:	mov	qword ptr [rsp + 0x40], rcx
0x7666:	call	0x2660


0x7630:	mov	rsi, r12
0x7633:	mov	edi, 0x20
0x7638:	add	rbx, 1
0x763c:	call	0x2660


0x766b:	mov	r10d, dword ptr [rsp + 0x48]
0x7670:	mov	rcx, qword ptr [rsp + 0x40]
0x7675:	add	r15, qword ptr [rsp + 8]
0x767a:	mov	rax, qword ptr [rsp + 0x38]
0x767f:	mov	r13, rcx
0x7682:	mov	rbp, rbx
0x7685:	mov	dword ptr [rsp + 8], 0x5f
0x768d:	add	rax, 0x17
0x7691:	sub	rax, r14
0x7694:	mov	rdx, r15
0x7697:	mov	qword ptr [rsp + 0x40], rax
0x769c:	not	rdx
0x769f:	jmp	0x669c


0x7563:	cmp	qword ptr [rsp + 0x38], rbx
0x7568:	jne	0x7552


0x756a:	mov	rbx, qword ptr [rsp + 0x50]
0x756f:	mov	r10d, dword ptr [rsp + 0x5c]
0x7574:	movsx	edi, bpl
0x7578:	mov	rsi, r12
0x757b:	mov	dword ptr [rsp + 0x38], r10d
0x7580:	call	0x2660


0x7552:	mov	rsi, r12
0x7555:	mov	edi, 0x20
0x755a:	add	rbx, 1
0x755e:	call	0x2660


0x7585:	mov	r10d, dword ptr [rsp + 0x38]
0x758a:	add	r15, qword ptr [rsp + 0x48]
0x758f:	mov	rbp, rbx
0x7592:	mov	rdx, r15
0x7595:	not	rdx
0x7598:	jmp	0x669c


0x6709:	cmp	r13, rbx
0x670c:	jne	0x66f8


0x670e:	mov	rbx, qword ptr [rsp + 8]
0x6713:	cmp	byte ptr [rsp + 0x34], 0
0x6718:	je	0x72d0


0x66f8:	mov	rsi, r12
0x66fb:	mov	edi, 0x20
0x6700:	add	rbx, 1
0x6704:	call	0x2660


0x7a22:	cmp	qword ptr [rsp + 0x38], rbx
0x7a27:	jne	0x7a11


0x7a29:	jmp	0x756a


0x7a11:	mov	rsi, r12
0x7a14:	mov	edi, 0x30
0x7a19:	add	rbx, 1
0x7a1d:	call	0x2660


0x7419:	cmp	r13, rbx
0x741c:	jne	0x7408


0x741e:	jmp	0x670e


0x7408:	mov	rsi, r12
0x740b:	mov	edi, 0x30
0x7410:	add	rbx, 1
0x7414:	call	0x2660


0x7213:	cmp	rbx, rbp
0x7216:	jne	0x7202


0x7218:	mov	rbx, qword ptr [rsp + 0x48]
0x721d:	mov	r10d, dword ptr [rsp + 0x50]
0x7222:	movsx	edi, byte ptr [rsp + 0x40]
0x7227:	mov	rsi, r12
0x722a:	mov	dword ptr [rsp + 0x48], r10d
0x722f:	call	0x2660


0x7202:	mov	rsi, r12
0x7205:	mov	edi, 0x20
0x720a:	add	rbp, 1
0x720e:	call	0x2660


0x7234:	mov	r10d, dword ptr [rsp + 0x48]
0x7239:	add	r15, qword ptr [rsp + 8]
0x723e:	mov	rax, qword ptr [rsp + 0x38]
0x7243:	mov	rbp, rbx
0x7246:	mov	dword ptr [rsp + 8], 0x2d
0x724e:	add	rax, 0x17
0x7252:	sub	rax, r14
0x7255:	mov	rdx, r15
0x7258:	mov	qword ptr [rsp + 0x40], rax
0x725d:	not	rdx
0x7260:	jmp	0x669c


0x68f1:	cmp	r13, rbx
0x68f4:	jne	0x68e0


0x68e0:	mov	rsi, r12
0x68e3:	mov	edi, 0x30
0x68e8:	add	r13, 1
0x68ec:	call	0x2660


0x7481:	cmp	rbx, rbp
0x7484:	ja	0x7470


0x7486:	movzx	ebp, byte ptr [rsp + 0x40]
0x748b:	mov	rbx, qword ptr [rsp + 0x48]
0x7490:	mov	r10d, dword ptr [rsp + 0x50]
0x7495:	add	r15, qword ptr [rsp + 8]
0x749a:	mov	eax, r10d
0x749d:	sub	eax, r13d
0x74a0:	cmp	r10d, r13d
0x74a3:	mov	r10d, 0
0x74a9:	cmovg	r10d, eax
0x74ad:	test	bpl, bpl
0x74b0:	mov	rdx, r15
0x74b3:	not	rdx
0x74b6:	jne	0x75e3


0x7470:	mov	rsi, r12
0x7473:	mov	edi, 0x20
0x7478:	add	rbp, 1
0x747c:	call	0x2660


0x64a9:	cmp	r11d, 0x45
0x64ad:	je	0x6090


0x64b3:	mov	rax, qword ptr [rsp]
0x64b7:	mov	esi, 1
0x64bc:	mov	ecx, dword ptr [rax + 0x18]
0x64bf:	jmp	0x6450


0x6450:	mov	eax, ecx
0x6452:	xor	r8d, r8d
0x6455:	xor	r9d, r9d
0x6458:	shr	eax, 0x1f
0x645b:	mov	r13d, eax
0x645e:	mov	eax, ecx
0x6460:	not	eax
0x6462:	shr	eax, 0x1f
0x6465:	cmp	r11d, 0x4f
0x6469:	jne	0x7180


0x64c1:	mov	eax, 1
0x64c6:	test	r14b, r14b
0x64c9:	jne	0x742a


0x64cf:	mov	r14d, eax
0x64d2:	mov	r13d, 0x70
0x64d8:	jmp	0x622d


0x742a:	mov	r13d, 0x70
0x7430:	mov	byte ptr [rsp + 0x34], 0
0x7435:	jmp	0x622d


0x622d:	mov	ebp, 0x2520
0x6232:	test	r11d, r11d
0x6235:	mov	word ptr [rsp + 0x9b], bp
0x623d:	jne	0x7a90


0x64dd:	lea	rax, [rip + 0x19738]
0x64e4:	mov	r14d, 0xffffffff
0x64ea:	mov	qword ptr [rsp + 0x38], rax
0x64ef:	movzx	ebp, byte ptr [rsp + 0x34]
0x64f4:	mov	dword ptr [rsp + 0x40], r10d


0x656a:	cmp	r11d, 0x45
0x656e:	je	0x6090


0x6574:	mov	rax, qword ptr [rsp]
0x6578:	mov	esi, 2
0x657d:	mov	ecx, dword ptr [rax]
0x657f:	jmp	0x6450


0x6584:	mov	rax, qword ptr [rsp]
0x6588:	mov	rdi, qword ptr [rsp + 0x10]
0x658d:	lea	rsi, [rsp + 0x60]
0x6592:	mov	dword ptr [rsp + 0x40], r10d
0x6597:	lea	r14, [rsp + 0xb7]
0x659f:	movdqu	xmm0, xmmword ptr [rax]
0x65a3:	movaps	xmmword ptr [rsp + 0x60], xmm0
0x65a8:	movdqu	xmm0, xmmword ptr [rax + 0x10]
0x65ad:	movaps	xmmword ptr [rsp + 0x70], xmm0
0x65b2:	movdqu	xmm0, xmmword ptr [rax + 0x20]
0x65b7:	mov	rax, qword ptr [rax + 0x30]
0x65bb:	movaps	xmmword ptr [rsp + 0x80], xmm0
0x65c3:	mov	qword ptr [rsp + 0x90], rax
0x65cb:	call	0x1f1d0


0x65d0:	mov	r10d, dword ptr [rsp + 0x40]
0x65d5:	mov	rsi, rax
0x65d8:	mov	rcx, rax
0x65db:	lea	rax, [rsp + 0xa0]
0x65e3:	movabs	r8, 0x6666666666666667
0x65ed:	mov	edi, 0x30
0x65f2:	mov	qword ptr [rsp + 0x38], rax
0x65f7:	nop	word ptr [rax + rax]
0x6600:	mov	rax, rcx
0x6603:	imul	r8
0x6606:	mov	rax, rcx
0x6609:	sar	rax, 0x3f
0x660d:	sar	rdx, 2
0x6611:	sub	rdx, rax
0x6614:	mov	rax, rdx
0x6617:	lea	rdx, [rdx + rdx*4]
0x661b:	add	rdx, rdx
0x661e:	sub	rcx, rdx
0x6621:	mov	rdx, rcx
0x6624:	mov	rcx, rax
0x6627:	mov	eax, edi
0x6629:	sub	eax, edx
0x662b:	add	edx, 0x30
0x662e:	test	rsi, rsi
0x6631:	cmovs	edx, eax
0x6634:	sub	r14, 1
0x6638:	test	rcx, rcx
0x663b:	mov	byte ptr [r14], dl
0x663e:	jne	0x6600


0x6640:	test	r10d, r10d
0x6643:	mov	eax, 1
0x6648:	cmovg	eax, r10d
0x664c:	test	rsi, rsi
0x664f:	mov	dword ptr [rsp + 0x58], eax
0x6653:	js	0x7190


0x6600:	mov	rax, rcx
0x6603:	imul	r8
0x6606:	mov	rax, rcx
0x6609:	sar	rax, 0x3f
0x660d:	sar	rdx, 2
0x6611:	sub	rdx, rax
0x6614:	mov	rax, rdx
0x6617:	lea	rdx, [rdx + rdx*4]
0x661b:	add	rdx, rdx
0x661e:	sub	rcx, rdx
0x6621:	mov	rdx, rcx
0x6624:	mov	rcx, rax
0x6627:	mov	eax, edi
0x6629:	sub	eax, edx
0x662b:	add	edx, 0x30
0x662e:	test	rsi, rsi
0x6631:	cmovs	edx, eax
0x6634:	sub	r14, 1
0x6638:	test	rcx, rcx
0x663b:	mov	byte ptr [r14], dl
0x663e:	jne	0x6600


0x6736:	mov	rax, qword ptr [rsp]
0x673a:	cmp	r11d, 0x4f
0x673e:	mov	esi, 1
0x6743:	mov	eax, dword ptr [rax + 0x10]
0x6746:	je	0x647a


0x647a:	mov	edx, 0x2520
0x647f:	xor	r14d, r14d
0x6482:	mov	word ptr [rsp + 0x9b], dx
0x648a:	lea	rdx, [rsp + 0x9b]
0x6492:	mov	byte ptr [rsp + 0x9d], r11b
0x649a:	mov	rbp, rbx
0x649d:	mov	r11d, esi
0x64a0:	lea	rax, [rdx + 3]
0x64a4:	jmp	0x6252


0x674c:	lea	edx, [rax + rax*4]
0x674f:	xor	r9d, r9d
0x6752:	xor	r13d, r13d
0x6755:	xor	r8d, r8d
0x6758:	lea	ecx, [rax + rdx*2]
0x675b:	sar	ecx, 5
0x675e:	add	ecx, 1
0x6761:	nop	dword ptr [rax]
0x6768:	lea	rax, [rsp + 0xa0]
0x6770:	lea	rdi, [rsp + 0xb7]
0x6778:	mov	r11d, 0xcccccccd
0x677e:	mov	qword ptr [rsp + 0x38], rax
0x6783:	nop	dword ptr [rax + rax]
0x6788:	test	r8b, 1
0x678c:	lea	r14, [rdi - 1]
0x6790:	je	0x67a0


0x690a:	lea	rax, [rip + 0x1ae12]
0x6911:	mov	r14d, 0xffffffff
0x6917:	mov	qword ptr [rsp + 0x38], rax
0x691c:	jmp	0x64ef


0x64ef:	movzx	ebp, byte ptr [rsp + 0x34]
0x64f4:	mov	dword ptr [rsp + 0x40], r10d


0x6921:	cmp	r11d, 0x45
0x6925:	je	0x6090


0x692b:	mov	rax, qword ptr [rsp]
0x692f:	mov	edx, 0x92492493
0x6934:	mov	esi, dword ptr [rax + 0x1c]
0x6937:	sub	esi, dword ptr [rax + 0x18]
0x693a:	add	esi, 7
0x693d:	mov	eax, esi
0x693f:	imul	edx
0x6941:	lea	ecx, [rdx + rsi]
0x6944:	sar	esi, 0x1f
0x6947:	sar	ecx, 2
0x694a:	sub	ecx, esi
0x694c:	mov	esi, 2
0x6951:	jmp	0x6450


0x6956:	cmp	r11d, 0x45
0x695a:	je	0x6090


0x6960:	mov	rcx, qword ptr [rsp]
0x6964:	mov	edx, 0x92492493
0x6969:	mov	esi, dword ptr [rcx + 0x14]
0x696c:	mov	r8d, dword ptr [rcx + 0x1c]
0x6970:	mov	r14d, dword ptr [rcx + 0x18]
0x6974:	mov	eax, esi
0x6976:	mov	ecx, r8d
0x6979:	sar	eax, 0x1f
0x697c:	sub	ecx, r14d
0x697f:	add	ecx, 0x17e
0x6985:	and	eax, 0x190
0x698a:	lea	r9d, [rsi + rax - 0x64]
0x698f:	mov	eax, ecx
0x6991:	imul	edx
0x6993:	lea	eax, [rdx + rcx]
0x6996:	mov	edx, ecx
0x6998:	sar	edx, 0x1f
0x699b:	sar	eax, 2
0x699e:	sub	eax, edx
0x69a0:	lea	edx, [rax*8]
0x69a7:	sub	edx, eax
0x69a9:	mov	eax, r8d
0x69ac:	sub	eax, ecx
0x69ae:	lea	ebp, [rax + rdx + 3]
0x69b2:	test	ebp, ebp
0x69b4:	js	0x77e0


0x77e0:	sub	r9d, 1
0x77e4:	mov	edx, 0x16d
0x77e9:	test	r9b, 3
0x77ed:	jne	0x7829


0x69ba:	test	r9b, 3
0x69be:	mov	eax, 0x16d
0x69c3:	jne	0x6a0a


0x77ef:	mov	eax, r9d
0x77f2:	mov	edx, 0x51eb851f
0x77f7:	imul	edx
0x77f9:	mov	eax, r9d
0x77fc:	sar	eax, 0x1f
0x77ff:	sar	edx, 5
0x7802:	sub	edx, eax
0x7804:	imul	eax, edx, 0x64
0x7807:	mov	edx, 0x16e
0x780c:	cmp	r9d, eax
0x780f:	jne	0x7829


0x7829:	add	r8d, edx
0x782c:	mov	edx, 0x92492493
0x7831:	mov	ecx, r8d
0x7834:	sub	ecx, r14d
0x7837:	add	ecx, 0x17e
0x783d:	mov	eax, ecx
0x783f:	sub	r8d, ecx
0x7842:	imul	edx
0x7844:	lea	eax, [rdx + rcx]
0x7847:	mov	edx, ecx
0x7849:	sar	edx, 0x1f
0x784c:	sar	eax, 2
0x784f:	sub	eax, edx
0x7851:	lea	edx, [rax*8]
0x7858:	sub	edx, eax
0x785a:	lea	ecx, [r8 + rdx + 3]
0x785f:	mov	r8d, 0xffffffff
0x7865:	jmp	0x6a4f


0x69c5:	mov	eax, r9d
0x69c8:	mov	edx, 0x51eb851f
0x69cd:	mov	ecx, r9d
0x69d0:	imul	edx
0x69d2:	sar	ecx, 0x1f
0x69d5:	mov	eax, 0x16e
0x69da:	mov	dword ptr [rsp + 0x38], edx
0x69de:	sar	edx, 5
0x69e1:	sub	edx, ecx
0x69e3:	imul	edx, edx, 0x64
0x69e6:	cmp	r9d, edx
0x69e9:	jne	0x6a0a


0x6a0a:	sub	r8d, eax
0x6a0d:	mov	edx, 0x92492493
0x6a12:	mov	ecx, r8d
0x6a15:	sub	ecx, r14d
0x6a18:	add	ecx, 0x17e
0x6a1e:	mov	eax, ecx
0x6a20:	sub	r8d, ecx
0x6a23:	imul	edx
0x6a25:	lea	eax, [rdx + rcx]
0x6a28:	mov	edx, ecx
0x6a2a:	sar	edx, 0x1f
0x6a2d:	sar	eax, 2
0x6a30:	sub	eax, edx
0x6a32:	lea	edx, [rax*8]
0x6a39:	sub	edx, eax
0x6a3b:	lea	ecx, [r8 + rdx + 3]
0x6a40:	mov	r8d, 1
0x6a46:	test	ecx, ecx
0x6a48:	jns	0x6a4f


0x7811:	mov	eax, r9d
0x7814:	mov	ecx, 0x190
0x7819:	cdq	
0x781a:	idiv	ecx
0x781c:	cmp	edx, 1
0x781f:	sbb	edx, edx
0x7821:	not	edx
0x7823:	add	edx, 0x16e
0x7829:	add	r8d, edx
0x782c:	mov	edx, 0x92492493
0x7831:	mov	ecx, r8d
0x7834:	sub	ecx, r14d
0x7837:	add	ecx, 0x17e
0x783d:	mov	eax, ecx
0x783f:	sub	r8d, ecx
0x7842:	imul	edx
0x7844:	lea	eax, [rdx + rcx]
0x7847:	mov	edx, ecx
0x7849:	sar	edx, 0x1f
0x784c:	sar	eax, 2
0x784f:	sub	eax, edx
0x7851:	lea	edx, [rax*8]
0x7858:	sub	edx, eax
0x785a:	lea	ecx, [r8 + rdx + 3]
0x785f:	mov	r8d, 0xffffffff
0x7865:	jmp	0x6a4f


0x6a4f:	cmp	r13b, 0x47
0x6a53:	je	0x76e7


0x69eb:	mov	edx, dword ptr [rsp + 0x38]
0x69ef:	sar	edx, 7
0x69f2:	mov	eax, edx
0x69f4:	sub	eax, ecx
0x69f6:	imul	eax, eax, 0x190
0x69fc:	cmp	r9d, eax
0x69ff:	sete	al
0x6a02:	movzx	eax, al
0x6a05:	add	eax, 0x16d
0x6a0a:	sub	r8d, eax
0x6a0d:	mov	edx, 0x92492493
0x6a12:	mov	ecx, r8d
0x6a15:	sub	ecx, r14d
0x6a18:	add	ecx, 0x17e
0x6a1e:	mov	eax, ecx
0x6a20:	sub	r8d, ecx
0x6a23:	imul	edx
0x6a25:	lea	eax, [rdx + rcx]
0x6a28:	mov	edx, ecx
0x6a2a:	sar	edx, 0x1f
0x6a2d:	sar	eax, 2
0x6a30:	sub	eax, edx
0x6a32:	lea	edx, [rax*8]
0x6a39:	sub	edx, eax
0x6a3b:	lea	ecx, [r8 + rdx + 3]
0x6a40:	mov	r8d, 1
0x6a46:	test	ecx, ecx
0x6a48:	jns	0x6a4f


0x6a4a:	mov	ecx, ebp
0x6a4c:	xor	r8d, r8d
0x6a4f:	cmp	r13b, 0x47
0x6a53:	je	0x76e7


0x76e7:	mov	eax, 0xfffff894
0x76ec:	mov	r9d, dword ptr [rsp + 8]
0x76f1:	lea	ecx, [rsi + r8 + 0x76c]
0x76f9:	sub	eax, r8d
0x76fc:	cmp	esi, eax
0x76fe:	setl	r13b
0x7702:	setge	al
0x7705:	test	r9d, r9d
0x7708:	je	0x6eb5


0x6a59:	cmp	r13b, 0x67
0x6a5d:	jne	0x786a


0x6eb5:	mov	esi, dword ptr [rsp + 0x24]
0x6eb9:	cmp	esi, 0x2b
0x6ebc:	je	0x75a7


0x770e:	cmp	dword ptr [rsp + 8], 0x2b
0x7713:	je	0x75a7


0x6a63:	mov	ecx, 0x51eb851f
0x6a68:	mov	eax, esi
0x6a6a:	mov	r9d, esi
0x6a6d:	imul	ecx
0x6a6f:	mov	eax, edx
0x6a71:	mov	edx, esi
0x6a73:	sar	edx, 0x1f
0x6a76:	sar	eax, 5
0x6a79:	sub	eax, edx
0x6a7b:	imul	eax, eax, 0x64
0x6a7e:	sub	r9d, eax
0x6a81:	add	r9d, r8d
0x6a84:	mov	eax, r9d
0x6a87:	imul	ecx
0x6a89:	mov	eax, r9d
0x6a8c:	sar	eax, 0x1f
0x6a8f:	mov	ecx, edx
0x6a91:	sar	ecx, 5
0x6a94:	sub	ecx, eax
0x6a96:	imul	ecx, ecx, 0x64
0x6a99:	sub	r9d, ecx
0x6a9c:	mov	ecx, r9d
0x6a9f:	js	0x76a4


0x786a:	mov	eax, ecx
0x786c:	mov	edx, 0x92492493
0x7871:	mov	esi, 2
0x7876:	imul	edx
0x7878:	lea	eax, [rdx + rcx]
0x787b:	sar	ecx, 0x1f
0x787e:	sar	eax, 2
0x7881:	sub	eax, ecx
0x7883:	mov	ecx, eax
0x7885:	add	ecx, 1
0x7888:	jmp	0x6450


0x75a7:	mov	esi, 4
0x75ac:	mov	edx, 0x270f
0x75b1:	cmp	edx, ecx
0x75b3:	mov	r9d, 1
0x75b9:	mov	dword ptr [rsp + 8], 0x2b
0x75c1:	jb	0x6acc


0x6ec2:	mov	dword ptr [rsp + 8], esi
0x6ec6:	xor	r9d, r9d
0x6ec9:	mov	esi, 4
0x6ece:	jmp	0x6acc


0x7719:	xor	r9d, r9d
0x771c:	mov	esi, 4
0x7721:	jmp	0x6acc


0x76a4:	mov	eax, 0xfffff894
0x76a9:	sub	eax, r8d
0x76ac:	cmp	esi, eax
0x76ae:	jge	0x7a7d


0x6aa5:	mov	esi, dword ptr [rsp + 8]
0x6aa9:	test	esi, esi
0x6aab:	je	0x76c1


0x6acc:	xor	r8d, r8d
0x6acf:	jmp	0x6465


0x75c7:	cmp	r10d, esi
0x75ca:	mov	dword ptr [rsp + 8], 0x2b
0x75d2:	setg	r9b
0x75d6:	jmp	0x6acc


0x76b4:	neg	ecx
0x76b6:	cmp	dword ptr [rsp + 8], 0
0x76bb:	jne	0x6ab1


0x7a7d:	add	ecx, 0x64
0x7a80:	cmp	dword ptr [rsp + 8], 0
0x7a85:	je	0x76c1


0x76c1:	mov	eax, dword ptr [rsp + 0x24]
0x76c5:	cmp	eax, 0x2b
0x76c8:	je	0x7a4b


0x6ab1:	mov	eax, 1
0x6ab6:	xor	r13d, r13d
0x6ab9:	cmp	dword ptr [rsp + 8], 0x2b
0x6abe:	je	0x7a5d


0x6465:	cmp	r11d, 0x4f
0x6469:	jne	0x7180


0x7a8b:	jmp	0x6ab1


0x7a4b:	mov	eax, 1
0x7a50:	xor	r13d, r13d
0x7a53:	mov	esi, 2
0x7a58:	jmp	0x75c7


0x76ce:	mov	dword ptr [rsp + 8], eax
0x76d2:	xor	r9d, r9d
0x76d5:	mov	eax, 1
0x76da:	xor	r13d, r13d
0x76dd:	mov	esi, 2
0x76e2:	jmp	0x6acc


0x7a5d:	mov	esi, 2
0x7a62:	mov	edx, 0x63
0x7a67:	jmp	0x75b1


0x6ac4:	xor	r9d, r9d
0x6ac7:	mov	esi, 2
0x6acc:	xor	r8d, r8d
0x6acf:	jmp	0x6465


0x75b1:	cmp	edx, ecx
0x75b3:	mov	r9d, 1
0x75b9:	mov	dword ptr [rsp + 8], 0x2b
0x75c1:	jb	0x6acc


0x6ad4:	cmp	r11d, 0x45
0x6ad8:	je	0x6090


0x6ade:	mov	rax, qword ptr [rsp]
0x6ae2:	mov	esi, 2
0x6ae7:	mov	ecx, dword ptr [rax + 8]
0x6aea:	jmp	0x6450


0x6aef:	cmp	r11d, 0x45
0x6af3:	je	0x6090


0x6af9:	mov	rax, qword ptr [rsp]
0x6afd:	mov	esi, 2
0x6b02:	mov	ecx, dword ptr [rax + 4]
0x6b05:	jmp	0x6450


0x6b0a:	cmp	r11d, 0x45
0x6b0e:	je	0x6090


0x6b14:	cmp	r10d, -1
0x6b18:	je	0x7730


0x7730:	mov	ecx, dword ptr [rsp + 0x500]
0x7737:	mov	esi, 9
0x773c:	mov	r10d, 9
0x7742:	jmp	0x6450


0x6b1e:	cmp	r10d, 8
0x6b22:	jg	0x7a6c


0x6b28:	mov	ecx, dword ptr [rsp + 0x500]
0x6b2f:	mov	esi, r10d
0x6b32:	mov	r8d, 0x66666667
0x6b38:	nop	dword ptr [rax + rax]
0x6b40:	mov	eax, ecx
0x6b42:	add	esi, 1
0x6b45:	sar	ecx, 0x1f
0x6b48:	imul	r8d
0x6b4b:	sar	edx, 2
0x6b4e:	sub	edx, ecx
0x6b50:	cmp	esi, 9
0x6b53:	mov	ecx, edx
0x6b55:	jne	0x6b40


0x7a6c:	mov	ecx, dword ptr [rsp + 0x500]
0x7a73:	jmp	0x6b57


0x6b57:	mov	esi, r10d
0x6b5a:	jmp	0x6450


0x6b40:	mov	eax, ecx
0x6b42:	add	esi, 1
0x6b45:	sar	ecx, 0x1f
0x6b48:	imul	r8d
0x6b4b:	sar	edx, 2
0x6b4e:	sub	edx, ecx
0x6b50:	cmp	esi, 9
0x6b53:	mov	ecx, edx
0x6b55:	jne	0x6b40


0x6b5f:	cmp	r11d, 0x45
0x6b63:	je	0x6090


0x6b69:	mov	ecx, dword ptr [rsp + 0x30]
0x6b6d:	mov	esi, 2
0x6b72:	jmp	0x6450


0x6b77:	cmp	r11d, 0x45
0x6b7b:	je	0x7423


0x7423:	xor	esi, esi
0x7425:	jmp	0x647a


0x6b81:	mov	rax, qword ptr [rsp]
0x6b85:	mov	edx, 0x51eb851f
0x6b8a:	mov	r9d, dword ptr [rsp + 8]
0x6b8f:	mov	esi, dword ptr [rax + 0x14]
0x6b92:	mov	eax, esi
0x6b94:	imul	edx
0x6b96:	mov	eax, edx
0x6b98:	mov	edx, esi
0x6b9a:	sar	edx, 0x1f
0x6b9d:	sar	eax, 5
0x6ba0:	sub	eax, edx
0x6ba2:	mov	edx, esi
0x6ba4:	lea	ecx, [rax + 0x13]
0x6ba7:	imul	eax, eax, 0x64
0x6baa:	sub	edx, eax
0x6bac:	mov	eax, edx
0x6bae:	shr	eax, 0x1f
0x6bb1:	test	ecx, ecx
0x6bb3:	setg	dl
0x6bb6:	and	eax, edx
0x6bb8:	cmp	esi, 0xfffff894
0x6bbe:	setl	r13b
0x6bc2:	sub	ecx, eax
0x6bc4:	cmp	esi, 0xfffff894
0x6bca:	setge	al
0x6bcd:	test	r9d, r9d
0x6bd0:	jne	0x6ab9


0x6bd6:	cmp	dword ptr [rsp + 0x24], 0x2b
0x6bdb:	je	0x7a5d


0x6ab9:	cmp	dword ptr [rsp + 8], 0x2b
0x6abe:	je	0x7a5d


0x6be1:	mov	esi, dword ptr [rsp + 0x24]
0x6be5:	mov	dword ptr [rsp + 8], esi
0x6be9:	jmp	0x6ac4


0x6bee:	test	r11d, r11d
0x6bf1:	jne	0x6090


0x6bf7:	lea	rax, [rip + 0x1ab2e]
0x6bfe:	mov	r14d, 0xffffffff
0x6c04:	mov	qword ptr [rsp + 0x38], rax
0x6c09:	jmp	0x64ef


0x6c0e:	test	r11d, r11d
0x6c11:	jne	0x6090


0x6c17:	mov	r11d, dword ptr [rsp + 8]
0x6c1c:	test	r11d, r11d
0x6c1f:	jne	0x796f


0x6c25:	test	r10d, r10d
0x6c28:	jns	0x796f


0x796f:	mov	r14d, r10d
0x7972:	mov	eax, 0
0x7977:	sub	r14d, 6
0x797b:	cmovs	r14d, eax
0x797f:	lea	rax, [rip + 0x1829c]
0x7986:	mov	qword ptr [rsp + 0x38], rax
0x798b:	jmp	0x64ef


0x6c2e:	lea	rax, [rip + 0x18fed]
0x6c35:	mov	r14d, 4
0x6c3b:	mov	dword ptr [rsp + 8], 0x2b
0x6c43:	mov	qword ptr [rsp + 0x38], rax
0x6c48:	jmp	0x64ef


0x6c4d:	movzx	ecx, byte ptr [rbx - 1]
0x6c51:	lea	rax, [rbx - 1]
0x6c55:	mov	qword ptr [rsp + 0x38], rax
0x6c5a:	test	r10d, r10d
0x6c5d:	mov	eax, 0
0x6c62:	mov	rdx, r15
0x6c65:	cmovns	eax, r10d
0x6c69:	cmp	cl, 0x25
0x6c6c:	not	rdx
0x6c6f:	cdqe	
0x6c71:	jne	0x608b


0x6c77:	test	rax, rax
0x6c7a:	mov	r14d, 1
0x6c80:	mov	rbp, qword ptr [rsp + 0x38]
0x6c85:	cmovne	r14, rax
0x6c89:	mov	r13d, 1
0x6c8f:	jmp	0x60d4


0x60d4:	cmp	rdx, r14
0x60d7:	jbe	0x5f3f


0x6c94:	cmp	r11d, 0x45
0x6c98:	je	0x6090


0x6c9e:	test	r14b, r14b
0x6ca1:	je	0x622d


0x6ca7:	mov	byte ptr [rsp + 0x34], r14b
0x6cac:	jmp	0x622a


0x6cb1:	test	r10d, r10d
0x6cb4:	mov	eax, 0
0x6cb9:	mov	r14d, 1
0x6cbf:	cmovns	eax, r10d
0x6cc3:	mov	rdx, r15
0x6cc6:	cdqe	
0x6cc8:	not	rdx
0x6ccb:	test	rax, rax
0x6cce:	cmovne	r14, rax
0x6cd2:	test	r11d, r11d
0x6cd5:	jne	0x7747


0x6cdb:	cmp	rdx, r14
0x6cde:	jbe	0x5f3f


0x7747:	mov	rbp, rbx
0x774a:	mov	qword ptr [rsp + 0x38], rbx
0x774f:	mov	r13d, 1
0x7755:	jmp	0x60d4


0x6ce4:	test	r12, r12
0x6ce7:	je	0x5f8a


0x6ced:	cmp	r10d, 1
0x6cf1:	jle	0x5f82


0x5f82:	mov	rsi, r12
0x5f85:	call	0x2660


0x6cf7:	mov	eax, dword ptr [rsp + 8]
0x6cfb:	movsxd	r10, r10d
0x6cfe:	lea	r13, [r10 - 1]
0x6d02:	cmp	eax, 0x30
0x6d05:	je	0x7a2e


0x7a2e:	xor	ebp, ebp
0x7a30:	mov	rsi, r12
0x7a33:	mov	edi, 0x30
0x7a38:	add	rbp, 1
0x7a3c:	call	0x2660


0x6d0b:	xor	ebp, ebp
0x6d0d:	cmp	eax, 0x2b
0x6d10:	je	0x7a2e


0x6d16:	mov	rsi, r12
0x6d19:	mov	edi, 0x20
0x6d1e:	add	rbp, 1
0x6d22:	call	0x2660


0x6d27:	cmp	r13, rbp
0x6d2a:	jne	0x6d16


0x6d2c:	jmp	0x5f7f


0x7a41:	cmp	r13, rbp
0x7a44:	jne	0x7a30


0x7a46:	jmp	0x5f7f


0x7a30:	mov	rsi, r12
0x7a33:	mov	edi, 0x30
0x7a38:	add	rbp, 1
0x7a3c:	call	0x2660


0x6d31:	movzx	eax, byte ptr [rbx + 1]
0x6d35:	lea	rdx, [rbx + 1]
0x6d39:	cmp	al, 0x3a
0x6d3b:	je	0x7921


0x7921:	lea	rcx, [rbx + 2]
0x7925:	mov	r14d, 1
0x792b:	mov	rdx, rcx
0x792e:	add	rcx, 1
0x7932:	movzx	eax, byte ptr [rcx - 1]
0x7936:	add	r14, 1
0x793a:	cmp	al, 0x3a
0x793c:	jne	0x6d47


0x6d41:	mov	r14d, 1
0x6d47:	cmp	al, 0x7a
0x6d49:	jne	0x6090


0x7942:	jmp	0x792b


0x6d47:	cmp	al, 0x7a
0x6d49:	jne	0x6090


0x6d4f:	mov	rbx, rdx
0x6d52:	mov	rax, qword ptr [rsp]
0x6d56:	mov	ecx, dword ptr [rax + 0x20]
0x6d59:	test	ecx, ecx
0x6d5b:	js	0x75db


0x792b:	mov	rdx, rcx
0x792e:	add	rcx, 1
0x7932:	movzx	eax, byte ptr [rcx - 1]
0x7936:	add	r14, 1
0x793a:	cmp	al, 0x3a
0x793c:	jne	0x6d47


0x75db:	mov	rbp, rbx
0x75de:	jmp	0x5f90


0x6d61:	mov	rcx, qword ptr [rax + 0x28]
0x6d65:	mov	r13d, 1
0x6d6b:	test	ecx, ecx
0x6d6d:	js	0x6d83


0x6d83:	mov	eax, ecx
0x6d85:	mov	edx, 0x91a2b3c5
0x6d8a:	mov	r9d, ecx
0x6d8d:	imul	edx
0x6d8f:	sar	r9d, 0x1f
0x6d93:	mov	r8d, 0x88888889
0x6d99:	mov	eax, ecx
0x6d9b:	add	edx, ecx
0x6d9d:	sar	edx, 0xb
0x6da0:	sub	edx, r9d
0x6da3:	mov	ebp, edx
0x6da5:	imul	r8d
0x6da8:	lea	esi, [rdx + rcx]
0x6dab:	sar	esi, 5
0x6dae:	sub	esi, r9d
0x6db1:	mov	eax, esi
0x6db3:	imul	r8d
0x6db6:	mov	eax, esi
0x6db8:	sar	eax, 0x1f
0x6dbb:	lea	r8d, [rdx + rsi]
0x6dbf:	sar	r8d, 5
0x6dc3:	sub	r8d, eax
0x6dc6:	mov	eax, esi
0x6dc8:	imul	r8d, r8d, 0x3c
0x6dcc:	imul	esi, esi, 0x3c
0x6dcf:	sub	eax, r8d
0x6dd2:	sub	ecx, esi
0x6dd4:	cmp	r14, 1
0x6dd8:	mov	r8d, eax
0x6ddb:	je	0x788d


0x6d6f:	mov	r13d, 0
0x6d75:	jne	0x6d83


0x788d:	imul	ecx, ebp, 0x64
0x7890:	mov	eax, r13d
0x7893:	mov	r9d, 1
0x7899:	xor	eax, 1
0x789c:	mov	esi, 6
0x78a1:	add	ecx, r8d
0x78a4:	mov	r8d, 4
0x78aa:	jmp	0x6465


0x6de1:	jb	0x7951


0x6d77:	mov	rax, qword ptr [rsp + 0x28]
0x6d7c:	cmp	byte ptr [rax], 0x2d
0x6d7f:	sete	r13b
0x6d83:	mov	eax, ecx
0x6d85:	mov	edx, 0x91a2b3c5
0x6d8a:	mov	r9d, ecx
0x6d8d:	imul	edx
0x6d8f:	sar	r9d, 0x1f
0x6d93:	mov	r8d, 0x88888889
0x6d99:	mov	eax, ecx
0x6d9b:	add	edx, ecx
0x6d9d:	sar	edx, 0xb
0x6da0:	sub	edx, r9d
0x6da3:	mov	ebp, edx
0x6da5:	imul	r8d
0x6da8:	lea	esi, [rdx + rcx]
0x6dab:	sar	esi, 5
0x6dae:	sub	esi, r9d
0x6db1:	mov	eax, esi
0x6db3:	imul	r8d
0x6db6:	mov	eax, esi
0x6db8:	sar	eax, 0x1f
0x6dbb:	lea	r8d, [rdx + rsi]
0x6dbf:	sar	r8d, 5
0x6dc3:	sub	r8d, eax
0x6dc6:	mov	eax, esi
0x6dc8:	imul	r8d, r8d, 0x3c
0x6dcc:	imul	esi, esi, 0x3c
0x6dcf:	sub	eax, r8d
0x6dd2:	sub	ecx, esi
0x6dd4:	cmp	r14, 1
0x6dd8:	mov	r8d, eax
0x6ddb:	je	0x788d


0x7951:	imul	ecx, ebp, 0x64
0x7954:	xor	r8d, r8d
0x7957:	mov	r9d, 1
0x795d:	mov	esi, 5
0x7962:	add	ecx, eax
0x7964:	mov	eax, r13d
0x7967:	xor	eax, 1
0x796a:	jmp	0x6465


0x6de7:	cmp	r14, 2
0x6deb:	je	0x7793


0x7793:	imul	r8d, r8d, 0x64
0x7797:	mov	r9d, 1
0x779d:	mov	esi, 9
0x77a2:	imul	eax, ebp, 0x2710
0x77a8:	add	eax, r8d
0x77ab:	mov	r8d, 0x14
0x77b1:	add	ecx, eax
0x77b3:	mov	eax, r13d
0x77b6:	xor	eax, 1
0x77b9:	jmp	0x6465


0x6df1:	cmp	r14, 3
0x6df5:	jne	0x7944


0x6dfb:	test	ecx, ecx
0x6dfd:	jne	0x7793


0x7944:	movzx	ecx, byte ptr [rbx]
0x7947:	mov	qword ptr [rsp + 0x38], rbx
0x794c:	jmp	0x6c5a


0x6e03:	test	eax, eax
0x6e05:	jne	0x788d


0x6c5a:	test	r10d, r10d
0x6c5d:	mov	eax, 0
0x6c62:	mov	rdx, r15
0x6c65:	cmovns	eax, r10d
0x6c69:	cmp	cl, 0x25
0x6c6c:	not	rdx
0x6c6f:	cdqe	
0x6c71:	jne	0x608b


0x6e0b:	mov	eax, r13d
0x6e0e:	mov	ecx, ebp
0x6e10:	mov	r9d, 1
0x6e16:	xor	eax, 1
0x6e19:	mov	esi, 3
0x6e1e:	jmp	0x6465


0x6e32:	mov	r9, qword ptr [rsp]
0x6e36:	mov	ecx, 0x92492493
0x6e3b:	mov	eax, dword ptr [r9 + 0x18]
0x6e3f:	lea	esi, [rax + 6]
0x6e42:	mov	dword ptr [rsp + 0x38], eax
0x6e46:	mov	eax, esi
0x6e48:	imul	ecx
0x6e4a:	lea	eax, [rdx + rsi]
0x6e4d:	mov	edx, esi
0x6e4f:	sar	edx, 0x1f
0x6e52:	sar	eax, 2
0x6e55:	sub	eax, edx
0x6e57:	lea	edx, [rax*8]
0x6e5e:	sub	edx, eax
0x6e60:	mov	eax, edx
0x6e62:	mov	edx, dword ptr [r9 + 0x1c]
0x6e66:	sub	eax, esi
0x6e68:	lea	esi, [rax + rdx + 7]
0x6e6c:	mov	eax, esi
0x6e6e:	imul	ecx
0x6e70:	jmp	0x6941


0x6941:	lea	ecx, [rdx + rsi]
0x6944:	sar	esi, 0x1f
0x6947:	sar	ecx, 2
0x694a:	sub	ecx, esi
0x694c:	mov	esi, 2
0x6951:	jmp	0x6450


0x6e75:	cmp	r11d, 0x45
0x6e79:	je	0x7423


0x6e7f:	cmp	r11d, 0x4f
0x6e83:	je	0x6090


0x6e89:	mov	rax, qword ptr [rsp]
0x6e8d:	mov	r8d, dword ptr [rsp + 8]
0x6e92:	mov	eax, dword ptr [rax + 0x14]
0x6e95:	cmp	eax, 0xfffff894
0x6e9a:	lea	ecx, [rax + 0x76c]
0x6ea0:	setl	r13b
0x6ea4:	cmp	eax, 0xfffff894
0x6ea9:	setge	al
0x6eac:	test	r8d, r8d
0x6eaf:	jne	0x770e


0x6ed3:	movzx	edi, byte ptr [rsp + 0x34]
0x6ed8:	test	r14b, r14b
0x6edb:	mov	eax, 0
0x6ee0:	mov	dword ptr [rsp + 0x38], r10d
0x6ee5:	cmovne	edi, eax
0x6ee8:	mov	byte ptr [rsp + 0x34], dil
0x6eed:	mov	rdi, qword ptr [rsp + 0x28]
0x6ef2:	call	0x2530


0x6ef7:	movsxd	r10, dword ptr [rsp + 0x38]
0x6efc:	mov	r13, rax
0x6eff:	mov	eax, 0
0x6f04:	mov	rdx, r15
0x6f07:	not	rdx
0x6f0a:	test	r10d, r10d
0x6f0d:	cmovns	rax, r10
0x6f11:	cmp	r13, rax
0x6f14:	mov	rbp, rax
0x6f17:	cmovae	rbp, r13
0x6f1b:	cmp	rdx, rbp
0x6f1e:	jbe	0x5f3f


0x6f24:	test	r12, r12
0x6f27:	je	0x6f9f


0x6f9f:	add	r15, rbp
0x6fa2:	mov	rbp, rbx
0x6fa5:	jmp	0x5f90


0x6f29:	cmp	r13, rax
0x6f2c:	jae	0x6f7b


0x6f2e:	mov	edi, dword ptr [rsp + 8]
0x6f32:	mov	rax, r10
0x6f35:	sub	rax, r13
0x6f38:	mov	qword ptr [rsp + 0x38], rax
0x6f3d:	cmp	edi, 0x30
0x6f40:	je	0x79c3


0x6f7b:	test	r14b, r14b
0x6f7e:	jne	0x7903


0x79c3:	cmp	qword ptr [rsp + 0x38], 0
0x79c9:	je	0x6f7b


0x6f46:	cmp	edi, 0x2b
0x6f49:	je	0x79c3


0x6f84:	cmp	byte ptr [rsp + 0x34], 0
0x6f89:	je	0x78e9


0x7903:	mov	rsi, qword ptr [rsp + 0x28]
0x7908:	mov	rdx, r13
0x790b:	mov	rdi, r12
0x790e:	call	0x5dc0


0x79cf:	xor	edx, edx
0x79d1:	mov	qword ptr [rsp + 8], rbx
0x79d6:	mov	rbx, rdx
0x79d9:	mov	rsi, r12
0x79dc:	mov	edi, 0x30
0x79e1:	add	rbx, 1
0x79e5:	call	0x2660


0x6f4f:	xor	edx, edx
0x6f51:	test	rax, rax
0x6f54:	je	0x6f7b


0x78e9:	mov	rdi, qword ptr [rsp + 0x28]
0x78ee:	mov	rcx, r12
0x78f1:	mov	edx, 1
0x78f6:	mov	rsi, r13
0x78f9:	call	0x2960


0x6f8f:	mov	rsi, qword ptr [rsp + 0x28]
0x6f94:	mov	rdx, r13
0x6f97:	mov	rdi, r12
0x6f9a:	call	0x5e20


0x6f56:	mov	qword ptr [rsp + 8], rbx
0x6f5b:	mov	rbx, rdx
0x6f5e:	mov	rsi, r12
0x6f61:	mov	edi, 0x20
0x6f66:	add	rbx, 1
0x6f6a:	call	0x2660


0x78fe:	jmp	0x6f9f


0x6f6f:	cmp	qword ptr [rsp + 0x38], rbx
0x6f74:	jne	0x6f5e


0x6f76:	mov	rbx, qword ptr [rsp + 8]
0x6f7b:	test	r14b, r14b
0x6f7e:	jne	0x7903


0x6f5e:	mov	rsi, r12
0x6f61:	mov	edi, 0x20
0x6f66:	add	rbx, 1
0x6f6a:	call	0x2660


0x79ea:	cmp	qword ptr [rsp + 0x38], rbx
0x79ef:	jne	0x79d9


0x79f1:	jmp	0x6f76


0x79d9:	mov	rsi, r12
0x79dc:	mov	edi, 0x30
0x79e1:	add	rbx, 1
0x79e5:	call	0x2660


0x7913:	jmp	0x6f9f


0x6faa:	cmp	r11d, 0x45
0x6fae:	je	0x7423


0x6fb4:	mov	rax, qword ptr [rsp]
0x6fb8:	mov	edx, 0x51eb851f
0x6fbd:	mov	esi, dword ptr [rax + 0x14]
0x6fc0:	mov	eax, esi
0x6fc2:	imul	edx
0x6fc4:	mov	eax, esi
0x6fc6:	sar	eax, 0x1f
0x6fc9:	mov	ecx, edx
0x6fcb:	sar	ecx, 5
0x6fce:	sub	ecx, eax
0x6fd0:	mov	eax, esi
0x6fd2:	imul	ecx, ecx, 0x64
0x6fd5:	sub	eax, ecx
0x6fd7:	mov	ecx, eax
0x6fd9:	jns	0x6aa5


0x6fdf:	neg	eax
0x6fe1:	add	ecx, 0x64
0x6fe4:	cmp	esi, 0xfffff893
0x6fea:	cmovle	ecx, eax
0x6fed:	jmp	0x6aa5


0x6ff2:	cmp	r11d, 0x45
0x6ff6:	je	0x6090


0x6ffc:	mov	rax, qword ptr [rsp]
0x7000:	mov	esi, 2
0x7005:	mov	ecx, dword ptr [rax + 0xc]
0x7008:	jmp	0x6450


0x700d:	cmp	r11d, 0x45
0x7011:	je	0x6090


0x7017:	mov	rax, qword ptr [rsp]
0x701b:	mov	ecx, dword ptr [rax + 0xc]
0x701e:	mov	r8d, dword ptr [rsp + 8]
0x7023:	mov	esi, 2
0x7028:	test	r8d, r8d
0x702b:	jne	0x6450


0x7031:	mov	dword ptr [rsp + 8], 0x5f
0x7039:	jmp	0x6450


0x703e:	cmp	r11d, 0x45
0x7042:	je	0x6090


0x7048:	mov	rax, qword ptr [rsp]
0x704c:	mov	esi, 3
0x7051:	mov	eax, dword ptr [rax + 0x1c]
0x7054:	cmp	eax, -1
0x7057:	lea	ecx, [rax + 1]
0x705a:	setl	r13b
0x705e:	cmp	eax, -1
0x7061:	setge	al
0x7064:	xor	r8d, r8d
0x7067:	xor	r9d, r9d
0x706a:	jmp	0x6465


0x706f:	cmp	r11d, 0x45
0x7073:	je	0x6090


0x7079:	mov	rax, qword ptr [rsp]
0x707d:	mov	ecx, dword ptr [rax + 8]
0x7080:	jmp	0x701e


0x701e:	mov	r8d, dword ptr [rsp + 8]
0x7023:	mov	esi, 2
0x7028:	test	r8d, r8d
0x702b:	jne	0x6450


0x7082:	cmp	r11d, 0x45
0x7086:	je	0x6090


0x708c:	mov	ecx, dword ptr [rsp + 0x30]
0x7090:	jmp	0x701e


0x7092:	cmp	r11d, 0x45
0x7096:	je	0x6090


0x709c:	mov	rax, qword ptr [rsp]
0x70a0:	mov	esi, 2
0x70a5:	mov	eax, dword ptr [rax + 0x10]
0x70a8:	cmp	eax, -1
0x70ab:	lea	ecx, [rax + 1]
0x70ae:	setl	r13b
0x70b2:	cmp	eax, -1
0x70b5:	setge	al
0x70b8:	xor	r8d, r8d
0x70bb:	xor	r9d, r9d
0x70be:	jmp	0x6465


0x70c3:	test	r10d, r10d
0x70c6:	mov	r13d, 0
0x70cc:	mov	eax, 1
0x70d1:	cmovns	r13d, r10d
0x70d5:	movsxd	r13, r13d
0x70d8:	test	r13, r13
0x70db:	cmove	r13, rax
0x70df:	mov	rax, r15
0x70e2:	not	rax
0x70e5:	cmp	rax, r13
0x70e8:	jbe	0x5f3f


0x70ee:	test	r12, r12
0x70f1:	je	0x655f


0x70f7:	cmp	r10d, 1
0x70fb:	jle	0x7132


0x7132:	mov	rsi, r12
0x7135:	mov	edi, 0xa
0x713a:	call	0x2660


0x70fd:	mov	eax, dword ptr [rsp + 8]
0x7101:	movsxd	r10, r10d
0x7104:	lea	r14, [r10 - 1]
0x7108:	cmp	eax, 0x30
0x710b:	je	0x78cc


0x78cc:	xor	ebp, ebp
0x78ce:	mov	rsi, r12
0x78d1:	mov	edi, 0x30
0x78d6:	add	rbp, 1
0x78da:	call	0x2660


0x7111:	xor	ebp, ebp
0x7113:	cmp	eax, 0x2b
0x7116:	je	0x78cc


0x711c:	mov	rsi, r12
0x711f:	mov	edi, 0x20
0x7124:	add	rbp, 1
0x7128:	call	0x2660


0x712d:	cmp	r14, rbp
0x7130:	jne	0x711c


0x78df:	cmp	r14, rbp
0x78e2:	jne	0x78ce


0x78e4:	jmp	0x7132


0x78ce:	mov	rsi, r12
0x78d1:	mov	edi, 0x30
0x78d6:	add	rbp, 1
0x78da:	call	0x2660


0x713f:	jmp	0x655f


0x7144:	xor	eax, eax
0x7146:	jmp	0x64c6


0x64c6:	test	r14b, r14b
0x64c9:	jne	0x742a


0x714b:	movzx	eax, byte ptr [rsp + 0x34]
0x7150:	test	r14b, r14b
0x7153:	cmovne	eax, r14d
0x7157:	cmp	r11d, 0x45
0x715b:	je	0x7918


0x7918:	mov	byte ptr [rsp + 0x34], al
0x791c:	jmp	0x6090


0x7161:	mov	r13d, edi
0x7164:	mov	byte ptr [rsp + 0x34], al
0x7168:	xor	r14d, r14d
0x716b:	jmp	0x622d


0x7170:	xor	r14d, r14d
0x7173:	jmp	0x6d52


0x6d52:	mov	rax, qword ptr [rsp]
0x6d56:	mov	ecx, dword ptr [rax + 0x20]
0x6d59:	test	ecx, ecx
0x6d5b:	js	0x75db


0x7a97:	nop	word ptr [rax + rax]


0x7b32:	nop	dword ptr [rax]
0x7b36:	nop	word ptr cs:[rax + rax]


0x7cee:	nop	


0x7d83:	nop	dword ptr [rax]
0x7d86:	nop	word ptr cs:[rax + rax]


0x7da7:	nop	word ptr [rax + rax]


0x7dd2:	nop	dword ptr [rax]
0x7dd6:	nop	word ptr cs:[rax + rax]


0x7efe:	nop	


0x7f77:	nop	word ptr [rax + rax]


0x80c5:	nop	
0x80c6:	nop	word ptr cs:[rax + rax]


0x80d5:	nop	
0x80d6:	nop	word ptr cs:[rax + rax]


0x80e5:	nop	
0x80e6:	nop	word ptr cs:[rax + rax]


0x8139:	nop	dword ptr [rax]


0x8198:	nop	dword ptr [rax + rax]


0x82e7:	nop	word ptr [rax + rax]


0x834b:	nop	dword ptr [rax + rax]


0x8391:	nop	dword ptr [rax + rax]
0x8396:	nop	word ptr cs:[rax + rax]


0x8412:	nop	dword ptr [rax]
0x8416:	nop	word ptr cs:[rax + rax]


0x8485:	nop	
0x8486:	nop	word ptr cs:[rax + rax]


0x84fa:	nop	word ptr [rax + rax]


0x8531:	nop	dword ptr [rax + rax]
0x8536:	nop	word ptr cs:[rax + rax]


0x8714:	nop	
0x8716:	nop	word ptr cs:[rax + rax]


0x8886:	nop	word ptr cs:[rax + rax]


0x8ace:	nop	


0x8d54:	nop	
0x8d56:	nop	word ptr cs:[rax + rax]


0x8db9:	nop	dword ptr [rax]


0x8fc3:	nop	word ptr cs:[rax + rax]
0x8fcd:	nop	dword ptr [rax]


0x9097:	nop	word ptr [rax + rax]


0x9aa7:	nop	word ptr [rax + rax]


0x9c96:	nop	word ptr cs:[rax + rax]


0x9cac:	nop	dword ptr [rax]


0x9cba:	nop	word ptr [rax + rax]


0x9d2c:	nop	dword ptr [rax]


0x9d4e:	nop	


0x9dee:	nop	


0x9e8c:	nop	dword ptr [rax]


0x9eb1:	nop	dword ptr [rax + rax]
0x9eb6:	nop	word ptr cs:[rax + rax]


0x9f16:	nop	word ptr cs:[rax + rax]


0x9f3d:	nop	dword ptr [rax]


0xa643:	nop	word ptr cs:[rax + rax]
0xa64d:	nop	dword ptr [rax]


0xa6ef:	nop	


0xa7d7:	nop	word ptr [rax + rax]


0xa873:	mov	byte ptr [rsp + 0xe], 1
0xa878:	mov	byte ptr [rsp + 0x7c], 0
0xa87d:	xor	r12d, r12d
0xa880:	mov	qword ptr [rsp + 0x50], 0
0xa889:	mov	byte ptr [rsp + 0xf], 1
0xa88e:	mov	byte ptr [rsp + 0xd], 0
0xa893:	lea	rax, [rip + 0x16c5a]
0xa89a:	mov	qword ptr [rsp + 0x18], 1
0xa8a3:	xor	r15d, r15d
0xa8a6:	mov	dword ptr [rsp + 8], 2
0xa8ae:	mov	qword ptr [rsp + 0x48], rax
0xa8b3:	xor	r11d, r11d
0xa8b6:	mov	rax, rbp
0xa8b9:	mov	r8d, r12d
0xa8bc:	mov	rbp, r11
0xa8bf:	mov	r11, rax
0xa8c2:	nop	word ptr [rax + rax]
0xa8c8:	cmp	r11, rbp
0xa8cb:	setne	r12b
0xa8cf:	cmp	r11, -1
0xa8d3:	jne	0xa8e2


0xa8d5:	mov	rax, qword ptr [rsp + 0x10]
0xa8da:	cmp	byte ptr [rax + rbp], 0
0xa8de:	setne	r12b
0xa8e2:	test	r12b, r12b
0xa8e5:	je	0xaf40


0xa8e2:	test	r12b, r12b
0xa8e5:	je	0xaf40


0xaf40:	cmp	dword ptr [rsp + 8], 2
0xaf45:	movzx	ebx, byte ptr [rsp + 0xf]
0xaf4a:	mov	r12d, r8d
0xaf4d:	mov	rbp, r11
0xaf50:	sete	dl
0xaf53:	mov	eax, ebx
0xaf55:	test	r15, r15
0xaf58:	sete	cl
0xaf5b:	and	eax, edx
0xaf5d:	and	al, cl
0xaf5f:	jne	0xb9c6


0xa8eb:	cmp	dword ptr [rsp + 8], 2
0xa8f0:	mov	rdi, qword ptr [rsp + 0x10]
0xa8f5:	lea	r9, [rdi + rbp]
0xa8f9:	setne	al
0xa8fc:	and	al, byte ptr [rsp + 0xd]
0xa900:	mov	r10d, eax
0xa903:	je	0xa9b0


0xaf65:	mov	eax, ebx
0xaf67:	xor	eax, 1
0xaf6a:	and	dl, al
0xaf6c:	je	0xb8dc


0xb9c6:	mov	dword ptr [rsp + 8], 2
0xb9ce:	jmp	0xb369


0xa9b0:	movzx	ebx, byte ptr [r9]
0xa9b4:	cmp	bl, 0x7e
0xa9b7:	ja	0xacd8


0xa909:	mov	rax, qword ptr [rsp + 0x18]
0xa90e:	test	rax, rax
0xa911:	je	0xad40


0xb8dc:	mov	rbx, qword ptr [rsp + 0x48]
0xb8e1:	test	rbx, rbx
0xb8e4:	je	0xb912


0xaf72:	cmp	byte ptr [rsp + 0x7c], 0
0xaf77:	je	0xb8da


0xb369:	cmp	byte ptr [rsp + 0xd], 0
0xb36e:	je	0xb380


0xa9bd:	lea	rcx, [rip + 0x17188]
0xa9c4:	movzx	edx, bl
0xa9c7:	movsxd	rax, dword ptr [rcx + rdx*4]
0xa9cb:	add	rax, rcx
0xa9ce:	jmp	rax


0xacd8:	cmp	qword ptr [rsp + 0x58], 1
0xacde:	jne	0xb088


0xad40:	movzx	ebx, byte ptr [r9]
0xad44:	cmp	bl, 0x7e
0xad47:	ja	0xacd0


0xa917:	cmp	r11, -1
0xa91b:	lea	rbx, [rbp + rax]
0xa920:	jne	0xa950


0xb912:	cmp	r13, r15
0xb915:	jbe	0xb3b9


0xb8e6:	test	al, al
0xb8e8:	je	0xb912


0xb8da:	mov	eax, edx
0xb8dc:	mov	rbx, qword ptr [rsp + 0x48]
0xb8e1:	test	rbx, rbx
0xb8e4:	je	0xb912


0xaf7d:	cmp	byte ptr [rsp + 0xe], 0
0xaf82:	jne	0xb97d


0xb370:	test	al, al
0xb372:	mov	eax, 4
0xb377:	cmove	eax, dword ptr [rsp + 8]
0xb37c:	mov	dword ptr [rsp + 8], eax


0xace4:	mov	qword ptr [rsp + 0x38], r11
0xace9:	mov	byte ptr [rsp + 0x30], r8b
0xacee:	mov	byte ptr [rsp + 0x28], r10b
0xacf3:	call	0x29f0


0xb088:	lea	rax, [rsp + 0xa0]
0xb090:	cmp	r11, -1
0xb094:	mov	qword ptr [rsp + 0xa0], 0
0xb0a0:	mov	qword ptr [rsp + 0x28], rax
0xb0a5:	jne	0xb0d4


0xad49:	lea	rcx, [rip + 0x16ff8]
0xad50:	movzx	edx, bl
0xad53:	movsxd	rax, dword ptr [rcx + rdx*4]
0xad57:	add	rax, rcx
0xad5a:	jmp	rax


0xacd0:	xor	r10d, r10d
0xacd3:	nop	dword ptr [rax + rax]
0xacd8:	cmp	qword ptr [rsp + 0x58], 1
0xacde:	jne	0xb088


0xa922:	cmp	rax, 1
0xa926:	jbe	0xa950


0xa950:	cmp	rbx, r11
0xa953:	mov	byte ptr [rsp + 0x28], r10b
0xa958:	ja	0xaf10


0xb91b:	mov	byte ptr [r14 + r15], 0
0xb920:	jmp	0xb3b9


0xb8ea:	movzx	ecx, byte ptr [rbx]
0xb8ed:	mov	rax, rbx
0xb8f0:	test	cl, cl
0xb8f2:	je	0xb912


0xaf88:	test	r13, r13
0xaf8b:	sete	al
0xaf8e:	cmp	qword ptr [rsp + 0x50], 0
0xaf94:	setne	dl
0xaf97:	and	al, dl
0xaf99:	je	0xb9bc


0xb0a7:	mov	rdi, qword ptr [rsp + 0x10]
0xb0ac:	mov	byte ptr [rsp + 0x40], r8b
0xb0b1:	mov	byte ptr [rsp + 0x38], r10b
0xb0b6:	mov	qword ptr [rsp + 0x30], r9
0xb0bb:	call	0x2530


0xb0d4:	lea	rax, [rsp + 0x9c]
0xb0dc:	xor	ecx, ecx
0xb0de:	mov	byte ptr [rsp + 0x7e], bl
0xb0e2:	mov	byte ptr [rsp + 0x7d], r8b
0xb0e7:	mov	rbx, rcx
0xb0ea:	mov	qword ptr [rsp + 0x88], r9
0xb0f2:	mov	qword ptr [rsp + 0x38], rax
0xb0f7:	mov	byte ptr [rsp + 0x7f], r10b
0xb0fc:	mov	qword ptr [rsp + 0x80], r15
0xb104:	mov	qword ptr [rsp + 0x40], r14
0xb109:	mov	qword ptr [rsp + 0x70], r13
0xb10e:	mov	qword ptr [rsp + 0x30], r11
0xb113:	mov	rax, qword ptr [rsp + 0x10]
0xb118:	lea	r14, [rbp + rbx]
0xb11d:	mov	rdx, qword ptr [rsp + 0x30]
0xb122:	mov	rcx, qword ptr [rsp + 0x28]
0xb127:	mov	rdi, qword ptr [rsp + 0x38]
0xb12c:	lea	r13, [rax + r14]
0xb130:	sub	rdx, r14
0xb133:	mov	rsi, r13
0xb136:	call	0x101e0


0xa928:	mov	byte ptr [rsp + 0x38], r8b
0xa92d:	mov	byte ptr [rsp + 0x30], r10b
0xa932:	mov	qword ptr [rsp + 0x28], r9
0xa937:	call	0x2530


0xa95e:	mov	rdx, qword ptr [rsp + 0x18]
0xa963:	mov	rsi, qword ptr [rsp + 0x48]
0xa968:	mov	rdi, r9
0xa96b:	mov	qword ptr [rsp + 0x40], r11
0xa970:	mov	byte ptr [rsp + 0x38], r8b
0xa975:	mov	qword ptr [rsp + 0x30], r9
0xa97a:	call	0x2680


0xaf10:	xor	r10d, r10d
0xaf13:	jmp	0xa9b0


0xb8f4:	mov	rdx, r15
0xb8f7:	sub	rax, r15
0xb8fa:	cmp	r13, rdx
0xb8fd:	jbe	0xb903


0xb9bc:	movzx	eax, byte ptr [rsp + 0x7c]
0xb9c1:	jmp	0xb8dc


0xaf9f:	mov	r13, qword ptr [rsp + 0x50]
0xafa4:	lea	rbx, [rip + 0x16549]
0xafab:	mov	byte ptr [r14], 0x27
0xafaf:	mov	dword ptr [rsp + 8], 2
0xafb7:	mov	r15d, 1
0xafbd:	mov	qword ptr [rsp + 0x18], 1
0xafc6:	mov	byte ptr [rsp + 0xf], 0
0xafcb:	mov	qword ptr [rsp + 0x48], rbx
0xafd0:	mov	byte ptr [rsp + 0x7c], al
0xafd4:	jmp	0xa8b3


0xb903:	add	rdx, 1
0xb907:	movzx	ecx, byte ptr [rax + rdx]
0xb90b:	test	cl, cl
0xb90d:	jne	0xb8fa


0xb8ff:	mov	byte ptr [r14 + rdx], cl
0xb903:	add	rdx, 1
0xb907:	movzx	ecx, byte ptr [rax + rdx]
0xb90b:	test	cl, cl
0xb90d:	jne	0xb8fa


0xa8b3:	xor	r11d, r11d
0xa8b6:	mov	rax, rbp
0xa8b9:	mov	r8d, r12d
0xa8bc:	mov	rbp, r11
0xa8bf:	mov	r11, rax
0xa8c2:	nop	word ptr [rax + rax]
0xa8c8:	cmp	r11, rbp
0xa8cb:	setne	r12b
0xa8cf:	cmp	r11, -1
0xa8d3:	jne	0xa8e2


0xb90f:	mov	r15, rdx
0xb912:	cmp	r13, r15
0xb915:	jbe	0xb3b9


0xb8fa:	cmp	r13, rdx
0xb8fd:	jbe	0xb903


0xa97f:	test	eax, eax
0xa981:	mov	r9, qword ptr [rsp + 0x30]
0xa986:	movzx	r8d, byte ptr [rsp + 0x38]
0xa98c:	mov	r11, qword ptr [rsp + 0x40]
0xa991:	jne	0xaf10


0xa997:	cmp	byte ptr [rsp + 0xf], 0
0xa99c:	movzx	r10d, byte ptr [rsp + 0x28]
0xa9a2:	jne	0xb925


0xb925:	cmp	dword ptr [rsp + 8], 2
0xb92a:	movzx	ebx, byte ptr [rsp + 0xf]
0xb92f:	mov	rbp, r11
0xb932:	sete	al
0xb935:	mov	byte ptr [rsp + 0xd], bl
0xb939:	jmp	0xb369


0xb13b:	test	rax, rax
0xb13e:	mov	r15, rax
0xb141:	je	0xb191


0xb191:	mov	edx, r12d
0xb194:	mov	rdi, rbx
0xb197:	movzx	r8d, byte ptr [rsp + 0x7d]
0xb19d:	xor	edx, 1
0xb1a0:	movzx	ebx, byte ptr [rsp + 0x7e]
0xb1a5:	movzx	r10d, byte ptr [rsp + 0x7f]
0xb1ab:	and	dl, byte ptr [rsp + 0xd]
0xb1af:	mov	r15, qword ptr [rsp + 0x80]
0xb1b7:	mov	r14, qword ptr [rsp + 0x40]
0xb1bc:	mov	r13, qword ptr [rsp + 0x70]
0xb1c1:	mov	r11, qword ptr [rsp + 0x30]
0xb1c6:	cmp	rdi, 1
0xb1ca:	jbe	0xb7cb


0xb143:	cmp	rax, -1
0xb147:	je	0xb765


0xb7cb:	mov	eax, edx
0xb7cd:	jmp	0xad27


0xb1d0:	mov	rcx, rdi
0xb1d3:	xor	esi, esi
0xb1d5:	movzx	r9d, byte ptr [rsp + 0xf]
0xb1db:	add	rcx, rbp
0xb1de:	mov	rdi, qword ptr [rsp + 0x10]
0xb1e3:	jmp	0xb29e


0xb765:	mov	rdi, rbx
0xb768:	movzx	r8d, byte ptr [rsp + 0x7d]
0xb76e:	movzx	ebx, byte ptr [rsp + 0x7e]
0xb773:	movzx	r10d, byte ptr [rsp + 0x7f]
0xb779:	mov	r15, qword ptr [rsp + 0x80]
0xb781:	xor	r12d, r12d
0xb784:	mov	r14, qword ptr [rsp + 0x40]
0xb789:	mov	r13, qword ptr [rsp + 0x70]
0xb78e:	mov	r11, qword ptr [rsp + 0x30]
0xb793:	movzx	edx, byte ptr [rsp + 0xd]
0xb798:	jmp	0xb1c6


0xb14d:	cmp	rax, -2
0xb151:	je	0xb6f1


0xad27:	test	al, al
0xad29:	jne	0xb6c1


0xb29e:	test	dl, dl
0xb2a0:	jne	0xb1f0


0xb1c6:	cmp	rdi, 1
0xb1ca:	jbe	0xb7cb


0xb6f1:	mov	r11, qword ptr [rsp + 0x30]
0xb6f6:	mov	rsi, r14
0xb6f9:	mov	rcx, r13
0xb6fc:	mov	rax, rbx
0xb6ff:	mov	rdi, rbx
0xb702:	movzx	r8d, byte ptr [rsp + 0x7d]
0xb708:	movzx	ebx, byte ptr [rsp + 0x7e]
0xb70d:	mov	r9, qword ptr [rsp + 0x88]
0xb715:	cmp	rsi, r11
0xb718:	movzx	r10d, byte ptr [rsp + 0x7f]
0xb71e:	mov	r15, qword ptr [rsp + 0x80]
0xb726:	mov	r14, qword ptr [rsp + 0x40]
0xb72b:	mov	r13, qword ptr [rsp + 0x70]
0xb730:	jae	0xb758


0xb157:	cmp	dword ptr [rsp + 8], 2
0xb15c:	sete	al
0xb15f:	and	al, byte ptr [rsp + 0xf]
0xb163:	jne	0xb300


0xad2f:	cmp	dword ptr [rsp + 8], 2
0xad34:	sete	dl
0xad37:	jmp	0xaa08


0xb6c1:	movzx	edx, byte ptr [rsp + 0xd]
0xb6c6:	xor	r12d, r12d
0xb6c9:	jmp	0xb1d0


0xb2a6:	mov	eax, esi
0xb2a8:	xor	eax, 1
0xb2ab:	and	eax, r8d
0xb2ae:	test	r10b, r10b
0xb2b1:	je	0xb2c1


0xb1f0:	cmp	dword ptr [rsp + 8], 2
0xb1f5:	sete	al
0xb1f8:	test	r9b, r9b
0xb1fb:	jne	0xb6b0


0xb732:	cmp	byte ptr [rcx], 0
0xb735:	jne	0xb747


0xb758:	movzx	edx, byte ptr [rsp + 0xd]
0xb75d:	xor	r12d, r12d
0xb760:	jmp	0xb1c6


0xb169:	mov	edi, dword ptr [rsp + 0x9c]
0xb170:	call	0x29a0


0xb300:	cmp	r15, 1
0xb304:	je	0xb169


0xaa08:	cmp	byte ptr [rsp + 0xd], 1
0xaa0d:	jne	0xab22


0xb2c1:	add	rbp, 1
0xb2c5:	cmp	rbp, rcx
0xb2c8:	jae	0xaa4c


0xb2b3:	cmp	r13, r15
0xb2b6:	jbe	0xb2bd


0xb201:	mov	esi, r8d
0xb204:	xor	esi, 1
0xb207:	and	al, sil
0xb20a:	je	0xb23b


0xb6b0:	movzx	ebx, byte ptr [rsp + 0xf]
0xb6b5:	mov	rbp, r11
0xb6b8:	mov	byte ptr [rsp + 0xd], bl
0xb6bc:	jmp	0xb369


0xb737:	jmp	0xb758


0xb747:	add	rax, 1
0xb74b:	lea	rdx, [rbp + rax]
0xb750:	cmp	r11, rdx
0xb753:	ja	0xb740


0xb30a:	mov	rdi, qword ptr [rsp + 0x10]
0xb30f:	lea	rcx, [rdi + r15]
0xb313:	lea	rdx, [rdi + r14 + 1]
0xb318:	lea	r8, [rcx + r14]
0xb31c:	jmp	0xb32d


0xaa13:	test	dl, dl
0xaa15:	jne	0xab22


0xab22:	cmp	byte ptr [rsp + 0xf], 0
0xab27:	jne	0xaa1b


0xb2ce:	test	al, al
0xb2d0:	je	0xb6ce


0xaa4c:	test	al, al
0xaa4e:	je	0xaa70


0xb2bd:	add	r15, 1
0xb2c1:	add	rbp, 1
0xb2c5:	cmp	rbp, rcx
0xb2c8:	jae	0xaa4c


0xb2b8:	mov	byte ptr [r14 + r15], 0x5c
0xb2bd:	add	r15, 1
0xb2c1:	add	rbp, 1
0xb2c5:	cmp	rbp, rcx
0xb2c8:	jae	0xaa4c


0xb23b:	cmp	r13, r15
0xb23e:	jbe	0xb245


0xb20c:	cmp	r13, r15
0xb20f:	jbe	0xb216


0xb755:	mov	rdi, rax
0xb758:	movzx	edx, byte ptr [rsp + 0xd]
0xb75d:	xor	r12d, r12d
0xb760:	jmp	0xb1c6


0xb740:	cmp	byte ptr [r9 + rax], 0
0xb745:	je	0xb755


0xb32d:	movzx	ecx, byte ptr [rdx]
0xb330:	sub	ecx, 0x5b
0xb333:	cmp	cl, 0x21
0xb336:	ja	0xb320


0xaa1b:	mov	rsi, qword ptr [rsp + 0x20]
0xaa20:	test	rsi, rsi
0xaa23:	je	0xaa39


0xab2d:	jmp	0xaa39


0xb6ce:	xor	r10d, r10d
0xb6d1:	jmp	0xb28d


0xb2d6:	cmp	r13, r15
0xb2d9:	jbe	0xb2e0


0xaa70:	cmp	r15, r13
0xaa73:	jae	0xaa79


0xaa50:	cmp	r13, r15
0xaa53:	jbe	0xaa5a


0xb245:	lea	rax, [r15 + 1]
0xb249:	cmp	r13, rax
0xb24c:	jbe	0xb25b


0xb240:	mov	byte ptr [r14 + r15], 0x5c
0xb245:	lea	rax, [r15 + 1]
0xb249:	cmp	r13, rax
0xb24c:	jbe	0xb25b


0xb216:	lea	rsi, [r15 + 1]
0xb21a:	cmp	r13, rsi
0xb21d:	jbe	0xb225


0xb211:	mov	byte ptr [r14 + r15], 0x27
0xb216:	lea	rsi, [r15 + 1]
0xb21a:	cmp	r13, rsi
0xb21d:	jbe	0xb225


0xb338:	mov	esi, 1
0xb33d:	shl	rsi, cl
0xb340:	mov	rcx, rsi
0xb343:	movabs	rsi, 0x20000002b
0xb34d:	test	rcx, rsi
0xb350:	je	0xb320


0xb320:	add	rdx, 1
0xb324:	cmp	r8, rdx
0xb327:	je	0xb169


0xaa39:	test	r10b, r10b
0xaa3c:	jne	0xab83


0xaa25:	mov	edx, ebx
0xaa27:	shr	dl, 5
0xaa2a:	movzx	edx, dl
0xaa2d:	mov	edx, dword ptr [rsi + rdx*4]
0xaa30:	bt	edx, ebx
0xaa33:	jb	0xab83


0xb28d:	cmp	r13, r15
0xb290:	jbe	0xb296


0xb2e0:	lea	rax, [r15 + 1]
0xb2e4:	cmp	r13, rax
0xb2e7:	jbe	0xb2ef


0xb2db:	mov	byte ptr [r14 + r15], 0x27
0xb2e0:	lea	rax, [r15 + 1]
0xb2e4:	cmp	r13, rax
0xb2e7:	jbe	0xb2ef


0xaa75:	mov	byte ptr [r14 + r15], bl
0xaa79:	movzx	edi, byte ptr [rsp + 0xe]
0xaa7e:	add	r15, 1
0xaa82:	mov	eax, 0
0xaa87:	test	r12b, r12b
0xaa8a:	cmove	edi, eax
0xaa8d:	mov	byte ptr [rsp + 0xe], dil
0xaa92:	jmp	0xa8c8


0xaa79:	movzx	edi, byte ptr [rsp + 0xe]
0xaa7e:	add	r15, 1
0xaa82:	mov	eax, 0
0xaa87:	test	r12b, r12b
0xaa8a:	cmove	edi, eax
0xaa8d:	mov	byte ptr [rsp + 0xe], dil
0xaa92:	jmp	0xa8c8


0xaa5a:	lea	rax, [r15 + 1]
0xaa5e:	cmp	r13, rax
0xaa61:	jbe	0xaa69


0xaa55:	mov	byte ptr [r14 + r15], 0x27
0xaa5a:	lea	rax, [r15 + 1]
0xaa5e:	cmp	r13, rax
0xaa61:	jbe	0xaa69


0xb25b:	lea	rax, [r15 + 2]
0xb25f:	cmp	r13, rax
0xb262:	jbe	0xb274


0xb24e:	mov	eax, ebx
0xb250:	shr	al, 6
0xb253:	add	eax, 0x30
0xb256:	mov	byte ptr [r14 + r15 + 1], al
0xb25b:	lea	rax, [r15 + 2]
0xb25f:	cmp	r13, rax
0xb262:	jbe	0xb274


0xb225:	lea	rsi, [r15 + 2]
0xb229:	cmp	r13, rsi
0xb22c:	jbe	0xb234


0xb21f:	mov	byte ptr [r14 + r15 + 1], 0x24
0xb225:	lea	rsi, [r15 + 2]
0xb229:	cmp	r13, rsi
0xb22c:	jbe	0xb234


0xb352:	mov	r14, qword ptr [rsp + 0x40]
0xb357:	mov	r13, qword ptr [rsp + 0x70]
0xb35c:	mov	rbp, qword ptr [rsp + 0x30]
0xb361:	mov	dword ptr [rsp + 8], 2
0xb369:	cmp	byte ptr [rsp + 0xd], 0
0xb36e:	je	0xb380


0xaa42:	xor	eax, 1
0xaa45:	add	rbp, 1
0xaa49:	and	eax, r8d
0xaa4c:	test	al, al
0xaa4e:	je	0xaa70


0xab83:	cmp	dword ptr [rsp + 8], 2
0xab88:	sete	dl
0xab8b:	cmp	byte ptr [rsp + 0xf], 0
0xab90:	mov	eax, edx
0xab92:	jne	0xb3e8


0xb296:	movzx	ebx, byte ptr [rdi + rbp]
0xb29a:	add	r15, 1
0xb29e:	test	dl, dl
0xb2a0:	jne	0xb1f0


0xb292:	mov	byte ptr [r14 + r15], bl
0xb296:	movzx	ebx, byte ptr [rdi + rbp]
0xb29a:	add	r15, 1
0xb29e:	test	dl, dl
0xb2a0:	jne	0xb1f0


0xb2ef:	add	r15, 2
0xb2f3:	xor	r10d, r10d
0xb2f6:	xor	r8d, r8d
0xb2f9:	jmp	0xb28d


0xb2e9:	mov	byte ptr [r14 + r15 + 1], 0x27
0xb2ef:	add	r15, 2
0xb2f3:	xor	r10d, r10d
0xb2f6:	xor	r8d, r8d
0xb2f9:	jmp	0xb28d


0xa8c8:	cmp	r11, rbp
0xa8cb:	setne	r12b
0xa8cf:	cmp	r11, -1
0xa8d3:	jne	0xa8e2


0xaa69:	add	r15, 2
0xaa6d:	xor	r8d, r8d
0xaa70:	cmp	r15, r13
0xaa73:	jae	0xaa79


0xaa63:	mov	byte ptr [r14 + r15 + 1], 0x27
0xaa69:	add	r15, 2
0xaa6d:	xor	r8d, r8d
0xaa70:	cmp	r15, r13
0xaa73:	jae	0xaa79


0xb274:	and	ebx, 7
0xb277:	add	rbp, 1
0xb27b:	add	r15, 3
0xb27f:	add	ebx, 0x30
0xb282:	cmp	rbp, rcx
0xb285:	jae	0xaa70


0xb264:	mov	eax, ebx
0xb266:	shr	al, 3
0xb269:	and	eax, 7
0xb26c:	add	eax, 0x30
0xb26f:	mov	byte ptr [r14 + r15 + 2], al
0xb274:	and	ebx, 7
0xb277:	add	rbp, 1
0xb27b:	add	r15, 3
0xb27f:	add	ebx, 0x30
0xb282:	cmp	rbp, rcx
0xb285:	jae	0xaa70


0xb234:	add	r15, 3
0xb238:	mov	r8d, eax
0xb23b:	cmp	r13, r15
0xb23e:	jbe	0xb245


0xb22e:	mov	byte ptr [r14 + r15 + 2], 0x27
0xb234:	add	r15, 3
0xb238:	mov	r8d, eax
0xb23b:	cmp	r13, r15
0xb23e:	jbe	0xb245


0xab98:	mov	eax, r8d
0xab9b:	xor	eax, 1
0xab9e:	and	al, dl
0xaba0:	je	0xabd1


0xb3e8:	mov	rbp, r11
0xb3eb:	jmp	0xb369


0xb28b:	mov	esi, edx
0xb28d:	cmp	r13, r15
0xb290:	jbe	0xb296


0xabd1:	cmp	r13, r15
0xabd4:	jbe	0xabdb


0xaba2:	cmp	r13, r15
0xaba5:	jbe	0xabac


0xabdb:	add	r15, 1
0xabdf:	add	rbp, 1
0xabe3:	jmp	0xaa70


0xabd6:	mov	byte ptr [r14 + r15], 0x5c
0xabdb:	add	r15, 1
0xabdf:	add	rbp, 1
0xabe3:	jmp	0xaa70


0xabac:	lea	rdx, [r15 + 1]
0xabb0:	cmp	r13, rdx
0xabb3:	jbe	0xabbb


0xaba7:	mov	byte ptr [r14 + r15], 0x27
0xabac:	lea	rdx, [r15 + 1]
0xabb0:	cmp	r13, rdx
0xabb3:	jbe	0xabbb


0xabbb:	lea	rdx, [r15 + 2]
0xabbf:	cmp	r13, rdx
0xabc2:	jbe	0xabca


0xabb5:	mov	byte ptr [r14 + r15 + 1], 0x24
0xabbb:	lea	rdx, [r15 + 2]
0xabbf:	cmp	r13, rdx
0xabc2:	jbe	0xabca


0xabca:	add	r15, 3
0xabce:	mov	r8d, eax
0xabd1:	cmp	r13, r15
0xabd4:	jbe	0xabdb


0xabc4:	mov	byte ptr [r14 + r15 + 2], 0x27
0xabca:	add	r15, 3
0xabce:	mov	r8d, eax
0xabd1:	cmp	r13, r15
0xabd4:	jbe	0xabdb


0xb175:	mov	rdi, qword ptr [rsp + 0x28]
0xb17a:	test	eax, eax
0xb17c:	mov	eax, 0
0xb181:	cmove	r12d, eax
0xb185:	add	rbx, r15
0xb188:	call	0x2990


0xb18d:	test	eax, eax
0xb18f:	je	0xb113


0xb113:	mov	rax, qword ptr [rsp + 0x10]
0xb118:	lea	r14, [rbp + rbx]
0xb11d:	mov	rdx, qword ptr [rsp + 0x30]
0xb122:	mov	rcx, qword ptr [rsp + 0x28]
0xb127:	mov	rdi, qword ptr [rsp + 0x38]
0xb12c:	lea	r13, [rax + r14]
0xb130:	sub	rdx, r14
0xb133:	mov	rsi, r13
0xb136:	call	0x101e0


0xa93c:	movzx	r8d, byte ptr [rsp + 0x38]
0xa942:	movzx	r10d, byte ptr [rsp + 0x30]
0xa948:	mov	r11, rax
0xa94b:	mov	r9, qword ptr [rsp + 0x28]
0xa950:	cmp	rbx, r11
0xa953:	mov	byte ptr [rsp + 0x28], r10b
0xa958:	ja	0xaf10


0xb0c0:	movzx	r8d, byte ptr [rsp + 0x40]
0xb0c6:	movzx	r10d, byte ptr [rsp + 0x38]
0xb0cc:	mov	r11, rax
0xb0cf:	mov	r9, qword ptr [rsp + 0x30]
0xb0d4:	lea	rax, [rsp + 0x9c]
0xb0dc:	xor	ecx, ecx
0xb0de:	mov	byte ptr [rsp + 0x7e], bl
0xb0e2:	mov	byte ptr [rsp + 0x7d], r8b
0xb0e7:	mov	rbx, rcx
0xb0ea:	mov	qword ptr [rsp + 0x88], r9
0xb0f2:	mov	qword ptr [rsp + 0x38], rax
0xb0f7:	mov	byte ptr [rsp + 0x7f], r10b
0xb0fc:	mov	qword ptr [rsp + 0x80], r15
0xb104:	mov	qword ptr [rsp + 0x40], r14
0xb109:	mov	qword ptr [rsp + 0x70], r13
0xb10e:	mov	qword ptr [rsp + 0x30], r11
0xb113:	mov	rax, qword ptr [rsp + 0x10]
0xb118:	lea	r14, [rbp + rbx]
0xb11d:	mov	rdx, qword ptr [rsp + 0x30]
0xb122:	mov	rcx, qword ptr [rsp + 0x28]
0xb127:	mov	rdi, qword ptr [rsp + 0x38]
0xb12c:	lea	r13, [rax + r14]
0xb130:	sub	rdx, r14
0xb133:	mov	rsi, r13
0xb136:	call	0x101e0


0xacf8:	mov	rcx, qword ptr [rax]
0xacfb:	movzx	edx, bl
0xacfe:	movzx	r10d, byte ptr [rsp + 0x28]
0xad04:	movzx	r8d, byte ptr [rsp + 0x30]
0xad0a:	mov	r11, qword ptr [rsp + 0x38]
0xad0f:	mov	edi, 1
0xad14:	movzx	eax, word ptr [rcx + rdx*2]
0xad18:	and	ax, 0x4000
0xad1c:	setne	r12b
0xad20:	sete	al
0xad23:	and	al, byte ptr [rsp + 0xd]
0xad27:	test	al, al
0xad29:	jne	0xb6c1


0xa9d0:	xor	r10d, r10d
0xa9d3:	cmp	r11, 1
0xa9d7:	setne	al
0xa9da:	cmp	r11, -1
0xa9de:	jne	0xa9ec


0xa9e0:	mov	rax, qword ptr [rsp + 0x10]
0xa9e5:	cmp	byte ptr [rax + 1], 0
0xa9e9:	setne	al
0xa9ec:	cmp	dword ptr [rsp + 8], 2
0xa9f1:	sete	dl
0xa9f4:	test	al, al
0xa9f6:	je	0xac48


0xa9ec:	cmp	dword ptr [rsp + 8], 2
0xa9f1:	sete	dl
0xa9f4:	test	al, al
0xa9f6:	je	0xac48


0xac48:	test	rbp, rbp
0xac4b:	jne	0xa9fc


0xa9fc:	xor	r12d, r12d
0xa9ff:	xor	eax, eax
0xaa01:	nop	dword ptr [rax]
0xaa08:	cmp	byte ptr [rsp + 0xd], 1
0xaa0d:	jne	0xab22


0xac51:	movzx	eax, byte ptr [rsp + 0xf]
0xac56:	and	al, dl
0xac58:	je	0xaa08


0xac5e:	mov	rbp, r11
0xac61:	mov	dword ptr [rsp + 8], 2
0xac69:	jmp	0xb369


0xb068:	cmp	byte ptr [rsp + 0xf], 0
0xb06d:	jne	0xb890


0xaab0:	cmp	eax, 5
0xaab3:	je	0xb028


0xb073:	xor	r12d, r12d
0xb076:	xor	eax, eax
0xb078:	mov	ebx, 0x3f
0xb07d:	jmp	0xaa39


0xb890:	mov	rbp, r11
0xb893:	movzx	eax, byte ptr [rsp + 0xf]
0xb898:	jmp	0xb369


0xb028:	test	byte ptr [rsp + 0x78], 4
0xb02d:	je	0xb050


0xaab9:	cmp	eax, 2
0xaabc:	mov	ebx, 0x3f
0xaac1:	sete	dl
0xaac4:	xor	r12d, r12d
0xaac7:	xor	eax, eax
0xaac9:	jmp	0xaa08


0xb050:	xor	edx, edx
0xb052:	xor	r12d, r12d
0xb055:	xor	eax, eax
0xb057:	mov	ebx, 0x3f
0xb05c:	jmp	0xaa08


0xb02f:	lea	rcx, [rbp + 2]
0xb033:	cmp	rcx, r11
0xb036:	jae	0xb050


0xb038:	mov	rax, qword ptr [rsp + 0x10]
0xb03d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0xb042:	je	0xb7d2


0xb7d2:	movzx	ebx, byte ptr [rax + rcx]
0xb7d6:	cmp	bl, 0x3e
0xb7d9:	ja	0xb050


0xb7df:	movabs	rax, 0x7000a38200000000
0xb7e9:	bt	rax, rbx
0xb7ed:	jae	0xb050


0xb7f3:	cmp	byte ptr [rsp + 0xf], 0
0xb7f8:	jne	0xb9e2


0xb7fe:	cmp	r13, r15
0xb801:	jbe	0xb808


0xb9e2:	mov	rbp, r11
0xb9e5:	jmp	0xb380


0xb808:	lea	rax, [r15 + 1]
0xb80c:	cmp	r13, rax
0xb80f:	jbe	0xb817


0xb803:	mov	byte ptr [r14 + r15], 0x3f
0xb808:	lea	rax, [r15 + 1]
0xb80c:	cmp	r13, rax
0xb80f:	jbe	0xb817


0xb817:	lea	rax, [r15 + 2]
0xb81b:	cmp	r13, rax
0xb81e:	jbe	0xb826


0xb811:	mov	byte ptr [r14 + r15 + 1], 0x22
0xb817:	lea	rax, [r15 + 2]
0xb81b:	cmp	r13, rax
0xb81e:	jbe	0xb826


0xb826:	lea	rax, [r15 + 3]
0xb82a:	cmp	r13, rax
0xb82d:	jbe	0xb835


0xb820:	mov	byte ptr [r14 + r15 + 2], 0x22
0xb826:	lea	rax, [r15 + 3]
0xb82a:	cmp	r13, rax
0xb82d:	jbe	0xb835


0xb835:	add	r15, 4
0xb839:	xor	edx, edx
0xb83b:	xor	r12d, r12d
0xb83e:	xor	eax, eax
0xb840:	mov	rbp, rcx
0xb843:	jmp	0xaa08


0xb82f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0xb835:	add	r15, 4
0xb839:	xor	edx, edx
0xb83b:	xor	r12d, r12d
0xb83e:	xor	eax, eax
0xb840:	mov	rbp, rcx
0xb843:	jmp	0xaa08


0xafe0:	cmp	byte ptr [rsp + 0xf], 0
0xafe5:	jne	0xb890


0xaade:	mov	byte ptr [rsp + 0x7c], r12b
0xaae3:	xor	edx, edx
0xaae5:	xor	eax, eax
0xaae7:	mov	ebx, 0x27
0xaaec:	jmp	0xaa08


0xafeb:	test	r13, r13
0xafee:	je	0xb3f0


0xb3f0:	cmp	r13, r15
0xb3f3:	jbe	0xb3fa


0xaff4:	xor	edx, edx
0xaff6:	cmp	qword ptr [rsp + 0x50], 0
0xaffc:	jne	0xb3f0


0xb3fa:	lea	rax, [r15 + 1]
0xb3fe:	cmp	r13, rax
0xb401:	jbe	0xb409


0xb3f5:	mov	byte ptr [r14 + r15], 0x27
0xb3fa:	lea	rax, [r15 + 1]
0xb3fe:	cmp	r13, rax
0xb401:	jbe	0xb409


0xb002:	mov	qword ptr [rsp + 0x50], r13
0xb007:	add	r15, 3
0xb00b:	xor	eax, eax
0xb00d:	mov	byte ptr [rsp + 0x7c], r12b
0xb012:	xor	r8d, r8d
0xb015:	mov	r13, rdx
0xb018:	mov	ebx, 0x27
0xb01d:	jmp	0xaa39


0xb409:	lea	rax, [r15 + 2]
0xb40d:	cmp	r13, rax
0xb410:	jbe	0xba02


0xb403:	mov	byte ptr [r14 + r15 + 1], 0x5c
0xb409:	lea	rax, [r15 + 2]
0xb40d:	cmp	r13, rax
0xb410:	jbe	0xba02


0xba02:	mov	rdx, r13
0xba05:	mov	r13, qword ptr [rsp + 0x50]
0xba0a:	jmp	0xb002


0xb416:	mov	rdx, r13
0xb419:	mov	byte ptr [r14 + r15 + 2], 0x27
0xb41f:	mov	r13, qword ptr [rsp + 0x50]
0xb424:	jmp	0xb002


0xab14:	cmp	byte ptr [rsp + 0xd], 0
0xab19:	jne	0xab80


0xab1b:	mov	ebx, edx
0xab1d:	xor	r12d, r12d
0xab20:	xor	eax, eax
0xab22:	cmp	byte ptr [rsp + 0xf], 0
0xab27:	jne	0xaa1b


0xab80:	xor	r12d, r12d
0xab83:	cmp	dword ptr [rsp + 8], 2
0xab88:	sete	dl
0xab8b:	cmp	byte ptr [rsp + 0xf], 0
0xab90:	mov	eax, edx
0xab92:	jne	0xb3e8


0xaf20:	cmp	byte ptr [rsp + 0xf], 0
0xaf25:	jne	0xb890


0xab53:	cmp	byte ptr [rsp + 0xd], 0
0xab58:	je	0xad70


0xaf2b:	add	rbp, 1
0xaf2f:	mov	eax, r8d
0xaf32:	xor	r12d, r12d
0xaf35:	mov	ebx, 0x5c
0xaf3a:	jmp	0xaa4c


0xad70:	mov	edx, 0x5c
0xad75:	mov	ebx, 0x5c
0xad7a:	jmp	0xab14


0xab5e:	cmp	byte ptr [rsp + 0xf], 0
0xab63:	je	0xad70


0xab69:	cmp	qword ptr [rsp + 0x18], 0
0xab6f:	jne	0xaf2b


0xab75:	mov	ebx, 0x5c
0xab7a:	nop	word ptr [rax + rax]
0xab80:	xor	r12d, r12d
0xab83:	cmp	dword ptr [rsp + 8], 2
0xab88:	sete	dl
0xab8b:	cmp	byte ptr [rsp + 0xf], 0
0xab90:	mov	eax, edx
0xab92:	jne	0xb3e8


0xabfb:	xor	edx, edx
0xabfd:	test	byte ptr [rsp + 0x78], 1
0xac02:	je	0xab1b


0xadc3:	cmp	dword ptr [rsp + 8], 2
0xadc8:	sete	dl
0xadcb:	cmp	byte ptr [rsp + 0xf], 0
0xadd0:	jne	0xb96a


0xac08:	add	rbp, 1
0xac0c:	jmp	0xa8c8


0xadd6:	mov	eax, r8d
0xadd9:	mov	rcx, r15
0xaddc:	xor	eax, 1
0xaddf:	and	al, dl
0xade1:	je	0xae10


0xb96a:	movzx	ebx, byte ptr [rsp + 0xf]
0xb96f:	mov	rbp, r11
0xb972:	mov	eax, edx
0xb974:	mov	byte ptr [rsp + 0xd], bl
0xb978:	jmp	0xb369


0xae10:	cmp	r13, rcx
0xae13:	jbe	0xae1a


0xade3:	cmp	r13, r15
0xade6:	jbe	0xaded


0xae1a:	cmp	dword ptr [rsp + 8], 2
0xae1f:	lea	r15, [rcx + 1]
0xae23:	je	0xb429


0xae15:	mov	byte ptr [r14 + rcx], 0x5c
0xae1a:	cmp	dword ptr [rsp + 8], 2
0xae1f:	lea	r15, [rcx + 1]
0xae23:	je	0xb429


0xaded:	lea	rcx, [r15 + 1]
0xadf1:	cmp	r13, rcx
0xadf4:	jbe	0xadfc


0xade8:	mov	byte ptr [r14 + r15], 0x27
0xaded:	lea	rcx, [r15 + 1]
0xadf1:	cmp	r13, rcx
0xadf4:	jbe	0xadfc


0xb429:	mov	eax, r12d
0xb42c:	mov	ebx, 0x30
0xb431:	xor	r12d, r12d
0xb434:	jmp	0xaa39


0xae29:	lea	rax, [rbp + 1]
0xae2d:	cmp	rax, r11
0xae30:	jae	0xae4b


0xadfc:	lea	rcx, [r15 + 2]
0xae00:	cmp	r13, rcx
0xae03:	ja	0xb439


0xadf6:	mov	byte ptr [r14 + r15 + 1], 0x24
0xadfc:	lea	rcx, [r15 + 2]
0xae00:	cmp	r13, rcx
0xae03:	ja	0xb439


0xae32:	mov	rax, qword ptr [rsp + 0x10]
0xae37:	movzx	eax, byte ptr [rax + rbp + 1]
0xae3c:	mov	byte ptr [rsp + 0x28], al
0xae40:	sub	eax, 0x30
0xae43:	cmp	al, 9
0xae45:	jbe	0xb679


0xae4b:	mov	eax, r12d
0xae4e:	mov	ebx, 0x30
0xae53:	xor	r12d, r12d
0xae56:	jmp	0xaa08


0xae09:	lea	rcx, [r15 + 3]
0xae0d:	mov	r8d, eax
0xae10:	cmp	r13, rcx
0xae13:	jbe	0xae1a


0xb439:	mov	byte ptr [r14 + r15 + 2], 0x27
0xb43f:	jmp	0xae09


0xb679:	cmp	r13, r15
0xb67c:	jbe	0xb683


0xb683:	lea	rax, [rcx + 2]
0xb687:	cmp	r13, rax
0xb68a:	jbe	0xb692


0xb67e:	mov	byte ptr [r14 + r15], 0x30
0xb683:	lea	rax, [rcx + 2]
0xb687:	cmp	r13, rax
0xb68a:	jbe	0xb692


0xb692:	mov	eax, r12d
0xb695:	lea	r15, [rcx + 3]
0xb699:	xor	r12d, r12d
0xb69c:	mov	ebx, 0x30
0xb6a1:	jmp	0xaa08


0xb68c:	mov	byte ptr [r14 + rcx + 2], 0x30
0xb692:	mov	eax, r12d
0xb695:	lea	r15, [rcx + 3]
0xb699:	xor	r12d, r12d
0xb69c:	mov	ebx, 0x30
0xb6a1:	jmp	0xaa08


0xab02:	cmp	dword ptr [rsp + 8], 2
0xab07:	sete	al
0xab0a:	and	al, byte ptr [rsp + 0xf]
0xab0e:	jne	0xac5e


0xaec0:	mov	edx, 0xd
0xaec5:	xor	r10d, r10d
0xaec8:	mov	ebx, 0x72
0xaecd:	jmp	0xab02


0xb444:	test	ebx, ebx
0xb446:	jne	0xa873


0xb44c:	mov	byte ptr [rsp + 0xd], 1
0xb451:	test	r13, r13
0xb454:	jne	0xb9ea


0xb45a:	lea	rax, [rip + 0x16093]
0xb461:	mov	qword ptr [rsp + 0x50], 0
0xb46a:	mov	byte ptr [rsp + 0xe], 1
0xb46f:	mov	byte ptr [rsp + 0x7c], 0
0xb474:	xor	r12d, r12d
0xb477:	mov	byte ptr [rsp + 0xf], 0
0xb47c:	mov	qword ptr [rsp + 0x18], 1
0xb485:	mov	qword ptr [rsp + 0x48], rax
0xb48a:	mov	r15d, 1
0xb490:	mov	dword ptr [rsp + 8], 2
0xb498:	jmp	0xa8b3


0xb9ea:	mov	byte ptr [rsp + 0xe], 1
0xb9ef:	xor	eax, eax
0xb9f1:	xor	r12d, r12d
0xb9f4:	mov	qword ptr [rsp + 0x50], 0
0xb9fd:	jmp	0xafa4


0xafa4:	lea	rbx, [rip + 0x16549]
0xafab:	mov	byte ptr [r14], 0x27
0xafaf:	mov	dword ptr [rsp + 8], 2
0xafb7:	mov	r15d, 1
0xafbd:	mov	qword ptr [rsp + 0x18], 1
0xafc6:	mov	byte ptr [rsp + 0xf], 0
0xafcb:	mov	qword ptr [rsp + 0x48], rbx
0xafd0:	mov	byte ptr [rsp + 0x7c], al
0xafd4:	jmp	0xa8b3


0xb4a8:	test	r13, r13
0xb4ab:	je	0xb6d6


0xb89d:	lea	rax, [rip + 0x16227]
0xb8a4:	mov	byte ptr [rsp + 0xe], 1
0xb8a9:	mov	byte ptr [rsp + 0x7c], 0
0xb8ae:	xor	r12d, r12d
0xb8b1:	mov	qword ptr [rsp + 0x50], 0
0xb8ba:	mov	byte ptr [rsp + 0xf], 1
0xb8bf:	mov	byte ptr [rsp + 0xd], 1
0xb8c4:	mov	qword ptr [rsp + 0x18], 1
0xb8cd:	xor	r15d, r15d
0xb8d0:	mov	qword ptr [rsp + 0x48], rax
0xb8d5:	jmp	0xa8b3


0xb6d6:	mov	qword ptr [rsp + 0x50], 0
0xb6df:	mov	byte ptr [rsp + 0xe], 1
0xb6e4:	xor	r12d, r12d
0xb6e7:	mov	byte ptr [rsp + 0x7c], 0
0xb6ec:	jmp	0xb4cb


0xb4b1:	mov	byte ptr [r14], 0x22
0xb4b5:	mov	byte ptr [rsp + 0xe], 1
0xb4ba:	xor	r12d, r12d
0xb4bd:	mov	byte ptr [rsp + 0x7c], 0
0xb4c2:	mov	qword ptr [rsp + 0x50], 0
0xb4cb:	lea	rax, [rip + 0x165f9]
0xb4d2:	mov	byte ptr [rsp + 0xf], 0
0xb4d7:	mov	byte ptr [rsp + 0xd], 1
0xb4dc:	mov	qword ptr [rsp + 0x18], 1
0xb4e5:	mov	r15d, 1
0xb4eb:	mov	qword ptr [rsp + 0x48], rax
0xb4f0:	jmp	0xa8b3


0xb4cb:	lea	rax, [rip + 0x165f9]
0xb4d2:	mov	byte ptr [rsp + 0xf], 0
0xb4d7:	mov	byte ptr [rsp + 0xd], 1
0xb4dc:	mov	qword ptr [rsp + 0x18], 1
0xb4e5:	mov	r15d, 1
0xb4eb:	mov	qword ptr [rsp + 0x48], rax
0xb4f0:	jmp	0xa8b3


0xb4f5:	lea	rax, [rip + 0x165cf]
0xb4fc:	mov	byte ptr [rsp + 0xe], 1
0xb501:	mov	byte ptr [rsp + 0x7c], 0
0xb506:	xor	r12d, r12d
0xb509:	mov	qword ptr [rsp + 0x50], 0
0xb512:	mov	byte ptr [rsp + 0xf], 1
0xb517:	mov	byte ptr [rsp + 0xd], 1
0xb51c:	mov	qword ptr [rsp + 0x18], 1
0xb525:	xor	r15d, r15d
0xb528:	mov	qword ptr [rsp + 0x48], rax
0xb52d:	mov	dword ptr [rsp + 8], 5
0xb535:	jmp	0xa8b3


0xb53a:	mov	byte ptr [rsp + 0xe], 1
0xb53f:	mov	byte ptr [rsp + 0x7c], 0
0xb544:	xor	r12d, r12d
0xb547:	mov	qword ptr [rsp + 0x50], 0
0xb550:	mov	byte ptr [rsp + 0xf], 0
0xb555:	xor	r15d, r15d
0xb558:	mov	byte ptr [rsp + 0xd], 1
0xb55d:	mov	qword ptr [rsp + 0x18], 0
0xb566:	mov	qword ptr [rsp + 0x48], 0
0xb56f:	jmp	0xa8b3


0xb574:	cmp	dword ptr [rsp + 8], 0xa
0xb579:	je	0xb5d1


0xb5d1:	xor	r15d, r15d
0xb5d4:	test	ebx, ebx
0xb5d6:	je	0xb79d


0xb57b:	lea	rsi, [rip + 0x1654b]
0xb582:	xor	edi, edi
0xb584:	mov	edx, 5
0xb589:	call	0x2510


0xb79d:	mov	rdx, qword ptr [rsp + 0x68]
0xb7a2:	movzx	eax, byte ptr [rdx]
0xb7a5:	test	al, al
0xb7a7:	je	0xb5dc


0xb5dc:	test	ebx, ebx
0xb5de:	mov	rbx, qword ptr [rsp + 0x60]
0xb5e3:	setne	byte ptr [rsp + 0xf]
0xb5e8:	xor	r12d, r12d
0xb5eb:	mov	rdi, rbx
0xb5ee:	call	0x2530


0xb7b9:	add	r15, 1
0xb7bd:	movzx	eax, byte ptr [rdx + r15]
0xb7c2:	test	al, al
0xb7c4:	jne	0xb7b0


0xb7b5:	mov	byte ptr [r14 + r15], al
0xb7b9:	add	r15, 1
0xb7bd:	movzx	eax, byte ptr [rdx + r15]
0xb7c2:	test	al, al
0xb7c4:	jne	0xb7b0


0xb7c6:	jmp	0xb5dc


0xb7b0:	cmp	r13, r15
0xb7b3:	jbe	0xb7b9


0xb5f3:	mov	qword ptr [rsp + 0x48], rbx
0xb5f8:	mov	qword ptr [rsp + 0x18], rax
0xb5fd:	mov	byte ptr [rsp + 0xe], 1
0xb602:	mov	byte ptr [rsp + 0x7c], 0
0xb607:	mov	qword ptr [rsp + 0x50], 0
0xb610:	mov	byte ptr [rsp + 0xd], 1
0xb615:	jmp	0xa8b3


0xb58e:	mov	rcx, rax
0xb591:	mov	qword ptr [rsp + 0x68], rax
0xb596:	lea	rax, [rip + 0x16530]
0xb59d:	cmp	rcx, rax
0xb5a0:	je	0xb93e


0xb93e:	mov	esi, dword ptr [rsp + 8]
0xb942:	mov	rdi, rcx
0xb945:	call	0xa6f0


0xb5a6:	lea	rsi, [rip + 0x15f47]
0xb5ad:	xor	edi, edi
0xb5af:	mov	edx, 5
0xb5b4:	call	0x2510


0xb5b9:	mov	rcx, rax
0xb5bc:	mov	qword ptr [rsp + 0x60], rax
0xb5c1:	lea	rax, [rip + 0x15f2c]
0xb5c8:	cmp	rcx, rax
0xb5cb:	je	0xb954


0xb954:	mov	esi, dword ptr [rsp + 8]
0xb958:	mov	rdi, rcx
0xb95b:	call	0xa6f0


0xb960:	mov	qword ptr [rsp + 0x60], rax
0xb965:	jmp	0xb5d1


0xb94a:	mov	qword ptr [rsp + 0x68], rax
0xb94f:	jmp	0xb5a6


0xb61a:	mov	byte ptr [rsp + 0xe], 1
0xb61f:	mov	byte ptr [rsp + 0x7c], 0
0xb624:	xor	r12d, r12d
0xb627:	mov	qword ptr [rsp + 0x50], 0
0xb630:	mov	byte ptr [rsp + 0xf], 0
0xb635:	xor	r15d, r15d
0xb638:	mov	byte ptr [rsp + 0xd], 0
0xb63d:	mov	qword ptr [rsp + 0x18], 0
0xb646:	mov	qword ptr [rsp + 0x48], 0
0xb64f:	jmp	0xa8b3


0xb654:	mov	byte ptr [rsp + 0xe], 1
0xb659:	mov	byte ptr [rsp + 0x7c], 0
0xb65e:	xor	r12d, r12d
0xb661:	mov	qword ptr [rsp + 0x50], 0
0xb66a:	mov	byte ptr [rsp + 0xf], 1
0xb66f:	mov	byte ptr [rsp + 0xd], 1
0xb674:	jmp	0xa893


0xa893:	lea	rax, [rip + 0x16c5a]
0xa89a:	mov	qword ptr [rsp + 0x18], 1
0xa8a3:	xor	r15d, r15d
0xa8a6:	mov	dword ptr [rsp + 8], 2
0xa8ae:	mov	qword ptr [rsp + 0x48], rax
0xa8b3:	xor	r11d, r11d
0xa8b6:	mov	rax, rbp
0xa8b9:	mov	r8d, r12d
0xa8bc:	mov	rbp, r11
0xa8bf:	mov	r11, rax
0xa8c2:	nop	word ptr [rax + rax]
0xa8c8:	cmp	r11, rbp
0xa8cb:	setne	r12b
0xa8cf:	cmp	r11, -1
0xa8d3:	jne	0xa8e2


0xb848:	test	ebx, ebx
0xb84a:	je	0xb9d8


0xb9d8:	mov	byte ptr [rsp + 0xd], 0
0xb9dd:	jmp	0xb451


0xb850:	lea	rax, [rip + 0x15c9d]
0xb857:	mov	byte ptr [rsp + 0xe], 1
0xb85c:	mov	byte ptr [rsp + 0x7c], 0
0xb861:	xor	r12d, r12d
0xb864:	mov	qword ptr [rsp + 0x50], 0
0xb86d:	mov	byte ptr [rsp + 0xf], 1
0xb872:	mov	byte ptr [rsp + 0xd], 0
0xb877:	mov	qword ptr [rsp + 0x18], 1
0xb880:	xor	r15d, r15d
0xb883:	mov	qword ptr [rsp + 0x48], rax
0xb888:	jmp	0xa8b3


0xb451:	test	r13, r13
0xb454:	jne	0xb9ea


0xba14:	nop	
0xba16:	nop	word ptr cs:[rax + rax]


0xbbcb:	nop	dword ptr [rax + rax]


0xbc06:	nop	word ptr cs:[rax + rax]


0xbc21:	nop	dword ptr [rax + rax]
0xbc26:	nop	word ptr cs:[rax + rax]


0xbc41:	nop	dword ptr [rax + rax]
0xbc46:	nop	word ptr cs:[rax + rax]


0xbc85:	nop	
0xbc86:	nop	word ptr cs:[rax + rax]


0xbca5:	nop	
0xbca6:	nop	word ptr cs:[rax + rax]


0xbd54:	nop	
0xbd56:	nop	word ptr cs:[rax + rax]


0xbe43:	nop	dword ptr [rax]
0xbe46:	nop	word ptr cs:[rax + rax]


0xbe5a:	nop	word ptr [rax + rax]


0xbef3:	nop	dword ptr [rax]
0xbef6:	nop	word ptr cs:[rax + rax]


0xbf13:	nop	dword ptr [rax]
0xbf16:	nop	word ptr cs:[rax + rax]


0xbf2c:	nop	dword ptr [rax]


0xbf48:	nop	dword ptr [rax + rax]


0xbf64:	nop	
0xbf66:	nop	word ptr cs:[rax + rax]


0xbffe:	nop	


0xc08a:	nop	word ptr [rax + rax]


0xc09c:	nop	dword ptr [rax]


0xc0af:	nop	


0xc148:	nop	dword ptr [rax + rax]


0xc171:	nop	dword ptr [rax + rax]
0xc176:	nop	word ptr cs:[rax + rax]


0xc18a:	nop	word ptr [rax + rax]


0xc21e:	nop	


0xc2b1:	nop	dword ptr [rax + rax]
0xc2b6:	nop	word ptr cs:[rax + rax]


0xc2cc:	nop	dword ptr [rax]


0xc2e7:	nop	word ptr [rax + rax]


0xc303:	nop	dword ptr [rax]
0xc306:	nop	word ptr cs:[rax + rax]


0xc31c:	nop	dword ptr [rax]


0xc334:	nop	
0xc336:	nop	word ptr cs:[rax + rax]


0xc353:	nop	dword ptr [rax]
0xc356:	nop	word ptr cs:[rax + rax]


0xc378:	nop	dword ptr [rax + rax]


0xc3b1:	nop	word ptr cs:[rax + rax]
0xc3bb:	nop	dword ptr [rax + rax]


0xc7d7:	nop	word ptr [rax + rax]


0xc878:	nop	dword ptr [rax + rax]


0xc955:	nop	
0xc956:	nop	word ptr cs:[rax + rax]


0xc9fa:	nop	word ptr [rax + rax]


0xca24:	nop	
0xca26:	nop	word ptr cs:[rax + rax]


0xca32:	nop	dword ptr [rax]
0xca36:	nop	word ptr cs:[rax + rax]


0xca76:	nop	word ptr cs:[rax + rax]


0xcaa4:	nop	
0xcaa6:	nop	word ptr cs:[rax + rax]


0xcb32:	nop	dword ptr [rax]
0xcb36:	nop	word ptr cs:[rax + rax]


0xcb8a:	nop	word ptr [rax + rax]


0xcba7:	nop	word ptr [rax + rax]


0xcbde:	nop	


0xcc08:	nop	dword ptr [rax + rax]


0xcc23:	nop	word ptr cs:[rax + rax]
0xcc2d:	nop	dword ptr [rax]


0xcc65:	nop	word ptr cs:[rax + rax]
0xcc6f:	nop	


0xccbf:	nop	


0xcce9:	nop	dword ptr [rax]


0xcea0:	movabs	r8, 0x8000000000000000
0xceaa:	movsxd	rsi, eax
0xcead:	mov	rax, r8
0xceb0:	cqo	
0xceb2:	idiv	rsi
0xceb5:	cmp	rbp, rax
0xceb8:	mov	r9, rax
0xcebb:	jl	0xd365


0xd365:	mov	eax, 1
0xd36a:	mov	rbp, r8
0xd36d:	jmp	0xcef8


0xcec1:	movabs	r10, 0x7fffffffffffffff
0xcecb:	mov	rax, r10
0xcece:	cqo	
0xced0:	idiv	rsi
0xced3:	cmp	rbp, rax
0xced6:	jg	0xd372


0xcef8:	or	r12d, eax
0xcefb:	nop	dword ptr [rax + rax]
0xcf00:	movsxd	rax, edi
0xcf03:	add	rcx, rax
0xcf06:	mov	eax, r12d
0xcf09:	or	eax, 2
0xcf0c:	mov	qword ptr [rbx], rcx
0xcf0f:	cmp	byte ptr [rcx], 0
0xcf12:	cmovne	r12d, eax
0xcf16:	jmp	0xcd76


0xcedc:	imul	rbp, rsi
0xcee0:	cmp	r9, rbp
0xcee3:	jg	0xd365


0xd372:	mov	eax, 1
0xd377:	mov	rbp, r10
0xd37a:	jmp	0xcef8


0xcee9:	cmp	rax, rbp
0xceec:	jl	0xd372


0xcef2:	imul	rbp, rsi
0xcef6:	xor	eax, eax
0xcef8:	or	r12d, eax
0xcefb:	nop	dword ptr [rax + rax]
0xcf00:	movsxd	rax, edi
0xcf03:	add	rcx, rax
0xcf06:	mov	eax, r12d
0xcf09:	or	eax, 2
0xcf0c:	mov	qword ptr [rbx], rcx
0xcf0f:	cmp	byte ptr [rcx], 0
0xcf12:	cmovne	r12d, eax
0xcf16:	jmp	0xcd76


0xd260:	mov	r12d, 1
0xd266:	movabs	rbp, 0x8000000000000000
0xd270:	jmp	0xcf00


0xcf33:	movabs	rax, 0x3fffffffffffffff
0xcf3d:	cmp	rbp, rax
0xcf40:	jg	0xd320


0xcf00:	movsxd	rax, edi
0xcf03:	add	rcx, rax
0xcf06:	mov	eax, r12d
0xcf09:	or	eax, 2
0xcf0c:	mov	qword ptr [rbx], rcx
0xcf0f:	cmp	byte ptr [rcx], 0
0xcf12:	cmovne	r12d, eax
0xcf16:	jmp	0xcd76


0xcf46:	add	rbp, rbp
0xcf49:	jmp	0xcf00


0xd320:	mov	r12d, 1
0xd326:	movabs	rbp, 0x7fffffffffffffff
0xd330:	jmp	0xcf00


0xcf63:	movabs	rax, 0x3fffffffffffff
0xcf6d:	cmp	rbp, rax
0xcf70:	jg	0xd320


0xcf76:	shl	rbp, 9
0xcf7a:	jmp	0xcf00


0xcfcf:	cmp	r10, rbp
0xcfd2:	jle	0xcfb0


0xcfb0:	mov	rax, r9
0xcfb3:	cqo	
0xcfb5:	idiv	rsi
0xcfb8:	cmp	rax, rbp
0xcfbb:	jl	0xd2a8


0xcfd4:	mov	r11d, 1
0xcfda:	movabs	rbp, 0x8000000000000000
0xcfe4:	jmp	0xcfc5


0xd2a8:	mov	r11d, 1
0xd2ae:	movabs	rbp, 0x7fffffffffffffff
0xd2b8:	jmp	0xcfc5


0xcfc1:	imul	rbp, rsi
0xcfc5:	sub	r8d, 1
0xcfc9:	je	0xd0f0


0xcfc5:	sub	r8d, 1
0xcfc9:	je	0xd0f0


0xd0f0:	or	r12d, r11d
0xd0f3:	jmp	0xcf00


0xd03f:	cmp	r10, rbp
0xd042:	jle	0xd020


0xd020:	mov	rax, r9
0xd023:	cqo	
0xd025:	idiv	rsi
0xd028:	cmp	rax, rbp
0xd02b:	jl	0xd278


0xd044:	mov	r11d, 1
0xd04a:	movabs	rbp, 0x8000000000000000
0xd054:	jmp	0xd035


0xd278:	mov	r11d, 1
0xd27e:	movabs	rbp, 0x7fffffffffffffff
0xd288:	jmp	0xd035


0xd031:	imul	rbp, rsi
0xd035:	sub	r8d, 1
0xd039:	je	0xd0f0


0xd035:	sub	r8d, 1
0xd039:	je	0xd0f0


0xd07e:	sub	r8, 1
0xd082:	mov	rax, r8
0xd085:	cqo	
0xd087:	idiv	rsi
0xd08a:	cmp	rbp, rax
0xd08d:	jg	0xd320


0xd093:	imul	rbp, rsi
0xd097:	jmp	0xcf00


0xd0d1:	mov	rax, r9
0xd0d4:	cqo	
0xd0d6:	idiv	rsi
0xd0d9:	cmp	rax, rbp
0xd0dc:	jl	0xd350


0xd2c0:	mov	r11d, 1
0xd2c6:	movabs	rbp, 0x8000000000000000
0xd2d0:	jmp	0xd0e6


0xd350:	mov	r11d, 1
0xd356:	movabs	rbp, 0x7fffffffffffffff
0xd360:	jmp	0xd0e6


0xd0e2:	imul	rbp, rsi
0xd0e6:	sub	r8d, 1
0xd0ea:	jne	0xd0c8


0xd0e6:	sub	r8d, 1
0xd0ea:	jne	0xd0c8


0xd0c8:	cmp	r10, rbp
0xd0cb:	jg	0xd2c0


0xd14b:	cmp	r10, rbp
0xd14e:	jle	0xd130


0xd130:	mov	rax, r9
0xd133:	cqo	
0xd135:	idiv	rsi
0xd138:	cmp	rax, rbp
0xd13b:	jl	0xd2d8


0xd150:	mov	r11d, 1
0xd156:	movabs	rbp, 0x8000000000000000
0xd160:	jmp	0xd145


0xd2d8:	mov	r11d, 1
0xd2de:	movabs	rbp, 0x7fffffffffffffff
0xd2e8:	jmp	0xd145


0xd141:	imul	rbp, rsi
0xd145:	sub	r8d, 1
0xd149:	je	0xd0f0


0xd145:	sub	r8d, 1
0xd149:	je	0xd0f0


0xd1b7:	cmp	r10, rbp
0xd1ba:	jle	0xd198


0xd198:	mov	rax, r9
0xd19b:	cqo	
0xd19d:	idiv	rsi
0xd1a0:	cmp	rax, rbp
0xd1a3:	jl	0xd2f0


0xd1bc:	mov	r11d, 1
0xd1c2:	movabs	rbp, 0x8000000000000000
0xd1cc:	jmp	0xd1ad


0xd2f0:	mov	r11d, 1
0xd2f6:	movabs	rbp, 0x7fffffffffffffff
0xd300:	jmp	0xd1ad


0xd1a9:	imul	rbp, rsi
0xd1ad:	sub	r8d, 1
0xd1b1:	je	0xd0f0


0xd1ad:	sub	r8d, 1
0xd1b1:	je	0xd0f0


0xd1e3:	movabs	rax, 0x1fffffffffffff
0xd1ed:	cmp	rbp, rax
0xd1f0:	jg	0xd320


0xd1f6:	shl	rbp, 0xa
0xd1fa:	jmp	0xcf00


0xd22d:	mov	rax, r9
0xd230:	cqo	
0xd232:	idiv	rsi
0xd235:	cmp	rax, rbp
0xd238:	jl	0xd308


0xd290:	mov	r11d, 1
0xd296:	movabs	rbp, 0x8000000000000000
0xd2a0:	jmp	0xd242


0xd308:	mov	r11d, 1
0xd30e:	movabs	rbp, 0x7fffffffffffffff
0xd318:	jmp	0xd242


0xd23e:	imul	rbp, rsi
0xd242:	sub	r8d, 1
0xd246:	jne	0xd228


0xd242:	sub	r8d, 1
0xd246:	jne	0xd228


0xd248:	jmp	0xd0f0


0xd228:	cmp	r10, rbp
0xd22b:	jg	0xd290


0xd3a3:	nop	word ptr cs:[rax + rax]
0xd3ad:	nop	dword ptr [rax]


0xd588:	mov	rax, rbx
0xd58b:	mul	rsi
0xd58e:	jo	0xd781


0xd781:	or	rax, 0xffffffffffffffff
0xd785:	mov	r8d, 1
0xd78b:	jmp	0xd597


0xd594:	xor	r8d, r8d
0xd597:	mul	rsi
0xd59a:	jo	0xd772


0xd597:	mul	rsi
0xd59a:	jo	0xd772


0xd772:	mov	r8d, 1
0xd778:	or	rbx, 0xffffffffffffffff
0xd77c:	jmp	0xd5a3


0xd5a0:	mov	rbx, rax
0xd5a3:	or	ebp, r8d
0xd5a6:	nop	word ptr cs:[rax + rax]
0xd5b0:	movsxd	rdi, edi
0xd5b3:	mov	eax, ebp
0xd5b5:	add	rcx, rdi
0xd5b8:	or	eax, 2
0xd5bb:	mov	qword ptr [r15], rcx
0xd5be:	cmp	byte ptr [rcx], 0
0xd5c1:	mov	qword ptr [r14], rbx
0xd5c4:	cmovne	ebp, eax
0xd5c7:	jmp	0xd48d


0xd5a3:	or	ebp, r8d
0xd5a6:	nop	word ptr cs:[rax + rax]
0xd5b0:	movsxd	rdi, edi
0xd5b3:	mov	eax, ebp
0xd5b5:	add	rcx, rdi
0xd5b8:	or	eax, 2
0xd5bb:	mov	qword ptr [r15], rcx
0xd5be:	cmp	byte ptr [rcx], 0
0xd5c1:	mov	qword ptr [r14], rbx
0xd5c4:	cmovne	ebp, eax
0xd5c7:	jmp	0xd48d


0xd5d7:	mov	edx, 2
0xd5dc:	mov	rax, rdx
0xd5df:	mul	rbx
0xd5e2:	jo	0xd67e


0xd67e:	mov	ebp, 1
0xd683:	or	rbx, 0xffffffffffffffff
0xd687:	jmp	0xd5b0


0xd5e8:	add	rbx, rbx
0xd5eb:	jmp	0xd5b0


0xd5b0:	movsxd	rdi, edi
0xd5b3:	mov	eax, ebp
0xd5b5:	add	rcx, rdi
0xd5b8:	or	eax, 2
0xd5bb:	mov	qword ptr [r15], rcx
0xd5be:	cmp	byte ptr [rcx], 0
0xd5c1:	mov	qword ptr [r14], rbx
0xd5c4:	cmovne	ebp, eax
0xd5c7:	jmp	0xd48d


0xd5ed:	mov	edx, 0x200
0xd5f2:	mov	rax, rdx
0xd5f5:	mul	rbx
0xd5f8:	jo	0xd67e


0xd5fe:	shl	rbx, 9
0xd602:	jmp	0xd5b0


0xd604:	mov	r8d, 7
0xd60a:	xor	r9d, r9d
0xd60d:	nop	dword ptr [rax]
0xd610:	mov	rax, rbx
0xd613:	mul	rsi
0xd616:	mov	rbx, rax
0xd619:	jo	0xd7ae


0xd7ae:	mov	r9d, 1
0xd7b4:	or	rbx, 0xffffffffffffffff
0xd7b8:	jmp	0xd61f


0xd61f:	sub	r8d, 1
0xd623:	jne	0xd610


0xd625:	or	ebp, r9d
0xd628:	jmp	0xd5b0


0xd610:	mov	rax, rbx
0xd613:	mul	rsi
0xd616:	mov	rbx, rax
0xd619:	jo	0xd7ae


0xd62a:	mov	r8d, 8
0xd630:	xor	r9d, r9d
0xd633:	nop	dword ptr [rax + rax]
0xd638:	mov	rax, rbx
0xd63b:	mul	rsi
0xd63e:	mov	rbx, rax
0xd641:	jo	0xd790


0xd790:	mov	r9d, 1
0xd796:	or	rbx, 0xffffffffffffffff
0xd79a:	jmp	0xd647


0xd647:	sub	r8d, 1
0xd64b:	jne	0xd638


0xd64d:	jmp	0xd625


0xd638:	mov	rax, rbx
0xd63b:	mul	rsi
0xd63e:	mov	rbx, rax
0xd641:	jo	0xd790


0xd64f:	mov	r8d, 4
0xd655:	xor	r9d, r9d
0xd658:	mov	rax, rbx
0xd65b:	mul	rsi
0xd65e:	mov	rbx, rax
0xd661:	jo	0xd763


0xd763:	mov	r9d, 1
0xd769:	or	rbx, 0xffffffffffffffff
0xd76d:	jmp	0xd667


0xd667:	sub	r8d, 1
0xd66b:	jne	0xd658


0xd66d:	jmp	0xd625


0xd658:	mov	rax, rbx
0xd65b:	mul	rsi
0xd65e:	mov	rbx, rax
0xd661:	jo	0xd763


0xd66f:	mov	rax, rbx
0xd672:	mul	rsi
0xd675:	mov	rbx, rax
0xd678:	jno	0xd5b0


0xd79f:	mov	r9d, 1
0xd7a5:	or	rbx, 0xffffffffffffffff
0xd7a9:	jmp	0xd6a8


0xd6a8:	sub	r8d, 1
0xd6ac:	jne	0xd699


0xd6ae:	jmp	0xd625


0xd699:	mov	rax, rbx
0xd69c:	mul	rsi
0xd69f:	mov	rbx, rax
0xd6a2:	jo	0xd79f


0xd6b3:	mov	r8d, 6
0xd6b9:	xor	r9d, r9d
0xd6bc:	mov	rax, rbx
0xd6bf:	mul	rsi
0xd6c2:	mov	rbx, rax
0xd6c5:	jo	0xd754


0xd754:	mov	r9d, 1
0xd75a:	or	rbx, 0xffffffffffffffff
0xd75e:	jmp	0xd6cb


0xd6cb:	sub	r8d, 1
0xd6cf:	jne	0xd6bc


0xd6d1:	jmp	0xd625


0xd6bc:	mov	rax, rbx
0xd6bf:	mul	rsi
0xd6c2:	mov	rbx, rax
0xd6c5:	jo	0xd754


0xd6d6:	mov	edx, 0x400
0xd6db:	mov	rax, rdx
0xd6de:	mul	rbx
0xd6e1:	jo	0xd67e


0xd6e3:	shl	rbx, 0xa
0xd6e7:	jmp	0xd5b0


0xd6ec:	mov	rax, rbx
0xd6ef:	mul	rsi
0xd6f2:	jo	0xd7bd


0xd7bd:	mov	r8d, 1
0xd7c3:	or	rax, 0xffffffffffffffff
0xd7c7:	jmp	0xd6fb


0xd6f8:	xor	r8d, r8d
0xd6fb:	mul	rsi
0xd6fe:	jno	0xd597


0xd6fb:	mul	rsi
0xd6fe:	jno	0xd597


0xd704:	mov	r8d, 1
0xd70a:	or	rax, 0xffffffffffffffff
0xd70e:	jmp	0xd597


0xd7cc:	nop	dword ptr [rax]


0xd87c:	nop	dword ptr [rax]


0xda58:	mov	rax, rbx
0xda5b:	mul	rsi
0xda5e:	jo	0xdc51


0xdc51:	or	rax, 0xffffffffffffffff
0xdc55:	mov	r8d, 1
0xdc5b:	jmp	0xda67


0xda64:	xor	r8d, r8d
0xda67:	mul	rsi
0xda6a:	jo	0xdc42


0xda67:	mul	rsi
0xda6a:	jo	0xdc42


0xdc42:	mov	r8d, 1
0xdc48:	or	rbx, 0xffffffffffffffff
0xdc4c:	jmp	0xda73


0xda70:	mov	rbx, rax
0xda73:	or	ebp, r8d
0xda76:	nop	word ptr cs:[rax + rax]
0xda80:	movsxd	rdi, edi
0xda83:	mov	eax, ebp
0xda85:	add	rcx, rdi
0xda88:	or	eax, 2
0xda8b:	mov	qword ptr [r15], rcx
0xda8e:	cmp	byte ptr [rcx], 0
0xda91:	mov	qword ptr [r14], rbx
0xda94:	cmovne	ebp, eax
0xda97:	jmp	0xd95d


0xda73:	or	ebp, r8d
0xda76:	nop	word ptr cs:[rax + rax]
0xda80:	movsxd	rdi, edi
0xda83:	mov	eax, ebp
0xda85:	add	rcx, rdi
0xda88:	or	eax, 2
0xda8b:	mov	qword ptr [r15], rcx
0xda8e:	cmp	byte ptr [rcx], 0
0xda91:	mov	qword ptr [r14], rbx
0xda94:	cmovne	ebp, eax
0xda97:	jmp	0xd95d


0xdaa7:	mov	edx, 2
0xdaac:	mov	rax, rdx
0xdaaf:	mul	rbx
0xdab2:	jo	0xdb4e


0xdb4e:	mov	ebp, 1
0xdb53:	or	rbx, 0xffffffffffffffff
0xdb57:	jmp	0xda80


0xdab8:	add	rbx, rbx
0xdabb:	jmp	0xda80


0xda80:	movsxd	rdi, edi
0xda83:	mov	eax, ebp
0xda85:	add	rcx, rdi
0xda88:	or	eax, 2
0xda8b:	mov	qword ptr [r15], rcx
0xda8e:	cmp	byte ptr [rcx], 0
0xda91:	mov	qword ptr [r14], rbx
0xda94:	cmovne	ebp, eax
0xda97:	jmp	0xd95d


0xdabd:	mov	edx, 0x200
0xdac2:	mov	rax, rdx
0xdac5:	mul	rbx
0xdac8:	jo	0xdb4e


0xdace:	shl	rbx, 9
0xdad2:	jmp	0xda80


0xdad4:	mov	r8d, 7
0xdada:	xor	r9d, r9d
0xdadd:	nop	dword ptr [rax]
0xdae0:	mov	rax, rbx
0xdae3:	mul	rsi
0xdae6:	mov	rbx, rax
0xdae9:	jo	0xdc7e


0xdc7e:	mov	r9d, 1
0xdc84:	or	rbx, 0xffffffffffffffff
0xdc88:	jmp	0xdaef


0xdaef:	sub	r8d, 1
0xdaf3:	jne	0xdae0


0xdaf5:	or	ebp, r9d
0xdaf8:	jmp	0xda80


0xdae0:	mov	rax, rbx
0xdae3:	mul	rsi
0xdae6:	mov	rbx, rax
0xdae9:	jo	0xdc7e


0xdafa:	mov	r8d, 8
0xdb00:	xor	r9d, r9d
0xdb03:	nop	dword ptr [rax + rax]
0xdb08:	mov	rax, rbx
0xdb0b:	mul	rsi
0xdb0e:	mov	rbx, rax
0xdb11:	jo	0xdc60


0xdc60:	mov	r9d, 1
0xdc66:	or	rbx, 0xffffffffffffffff
0xdc6a:	jmp	0xdb17


0xdb17:	sub	r8d, 1
0xdb1b:	jne	0xdb08


0xdb1d:	jmp	0xdaf5


0xdb08:	mov	rax, rbx
0xdb0b:	mul	rsi
0xdb0e:	mov	rbx, rax
0xdb11:	jo	0xdc60


0xdb1f:	mov	r8d, 4
0xdb25:	xor	r9d, r9d
0xdb28:	mov	rax, rbx
0xdb2b:	mul	rsi
0xdb2e:	mov	rbx, rax
0xdb31:	jo	0xdc33


0xdc33:	mov	r9d, 1
0xdc39:	or	rbx, 0xffffffffffffffff
0xdc3d:	jmp	0xdb37


0xdb37:	sub	r8d, 1
0xdb3b:	jne	0xdb28


0xdb3d:	jmp	0xdaf5


0xdb28:	mov	rax, rbx
0xdb2b:	mul	rsi
0xdb2e:	mov	rbx, rax
0xdb31:	jo	0xdc33


0xdb3f:	mov	rax, rbx
0xdb42:	mul	rsi
0xdb45:	mov	rbx, rax
0xdb48:	jno	0xda80


0xdc6f:	mov	r9d, 1
0xdc75:	or	rbx, 0xffffffffffffffff
0xdc79:	jmp	0xdb78


0xdb78:	sub	r8d, 1
0xdb7c:	jne	0xdb69


0xdb7e:	jmp	0xdaf5


0xdb69:	mov	rax, rbx
0xdb6c:	mul	rsi
0xdb6f:	mov	rbx, rax
0xdb72:	jo	0xdc6f


0xdb83:	mov	r8d, 6
0xdb89:	xor	r9d, r9d
0xdb8c:	mov	rax, rbx
0xdb8f:	mul	rsi
0xdb92:	mov	rbx, rax
0xdb95:	jo	0xdc24


0xdc24:	mov	r9d, 1
0xdc2a:	or	rbx, 0xffffffffffffffff
0xdc2e:	jmp	0xdb9b


0xdb9b:	sub	r8d, 1
0xdb9f:	jne	0xdb8c


0xdba1:	jmp	0xdaf5


0xdb8c:	mov	rax, rbx
0xdb8f:	mul	rsi
0xdb92:	mov	rbx, rax
0xdb95:	jo	0xdc24


0xdba6:	mov	edx, 0x400
0xdbab:	mov	rax, rdx
0xdbae:	mul	rbx
0xdbb1:	jo	0xdb4e


0xdbb3:	shl	rbx, 0xa
0xdbb7:	jmp	0xda80


0xdbbc:	mov	rax, rbx
0xdbbf:	mul	rsi
0xdbc2:	jo	0xdc8d


0xdc8d:	mov	r8d, 1
0xdc93:	or	rax, 0xffffffffffffffff
0xdc97:	jmp	0xdbcb


0xdbc8:	xor	r8d, r8d
0xdbcb:	mul	rsi
0xdbce:	jno	0xda67


0xdbcb:	mul	rsi
0xdbce:	jno	0xda67


0xdbd4:	mov	r8d, 1
0xdbda:	or	rax, 0xffffffffffffffff
0xdbde:	jmp	0xda67


0xdc9c:	nop	dword ptr [rax]


0xdd1b:	nop	dword ptr [rax + rax]


0xddb7:	nop	word ptr [rax + rax]


0xddda:	nop	word ptr [rax + rax]


0xdded:	nop	dword ptr [rax]


0xddfc:	nop	dword ptr [rax]


0xde0a:	nop	word ptr [rax + rax]


0xde36:	nop	word ptr cs:[rax + rax]


0xe005:	nop	
0xe006:	nop	word ptr cs:[rax + rax]


0xe115:	nop	
0xe116:	nop	word ptr cs:[rax + rax]


0xe1aa:	nop	word ptr [rax + rax]


0xe1f2:	nop	dword ptr [rax]
0xe1f6:	nop	word ptr cs:[rax + rax]


0xe239:	nop	dword ptr [rax]


0xe36c:	nop	dword ptr [rax]


0xe3da:	nop	word ptr [rax + rax]


0xe446:	nop	word ptr cs:[rax + rax]


0xe4ac:	nop	dword ptr [rax]


0xe51b:	nop	dword ptr [rax + rax]


0xe583:	nop	dword ptr [rax]
0xe586:	nop	word ptr cs:[rax + rax]


0xe5ca:	nop	word ptr [rax + rax]


0xe84a:	nop	word ptr [rax + rax]


0xe8ff:	nop	


0xe9b8:	nop	dword ptr [rax + rax]


0xf391:	nop	dword ptr [rax + rax]
0xf396:	nop	word ptr cs:[rax + rax]


0xf74a:	nop	word ptr [rax + rax]


0xf8d2:	nop	dword ptr [rax]
0xf8d6:	nop	word ptr cs:[rax + rax]


0x10058:	nop	dword ptr [rax + rax]


0x10089:	nop	dword ptr [rax]


0x101de:	nop	


0x10263:	nop	word ptr cs:[rax + rax]
0x1026d:	nop	dword ptr [rax]


0x102f2:	nop	dword ptr [rax]
0x102f6:	nop	word ptr cs:[rax + rax]


0x10336:	nop	word ptr cs:[rax + rax]


0x10b88:	nop	dword ptr [rax + rax]


0x10cbf:	nop	


0x10cdd:	nop	dword ptr [rax]


0x10f0c:	nop	dword ptr [rax]


0x10f76:	nop	word ptr cs:[rax + rax]


0x10feb:	nop	dword ptr [rax + rax]


0x11041:	nop	dword ptr [rax + rax]
0x11046:	nop	word ptr cs:[rax + rax]


0x110ec:	nop	dword ptr [rax]


0x11154:	nop	
0x11156:	nop	word ptr cs:[rax + rax]


0x1128c:	nop	dword ptr [rax]


0x1137c:	nop	dword ptr [rax]


0x113ee:	nop	


0x115b3:	nop	dword ptr [rax]
0x115b6:	nop	word ptr cs:[rax + rax]


0x11bd5:	nop	
0x11bd6:	nop	word ptr cs:[rax + rax]


0x11d2e:	nop	


0x11db6:	nop	word ptr cs:[rax + rax]


0x11e15:	nop	
0x11e16:	nop	word ptr cs:[rax + rax]


0x11e34:	nop	
0x11e36:	nop	word ptr cs:[rax + rax]


0x1200e:	nop	


0x120af:	nop	


0x12325:	nop	
0x12326:	nop	word ptr cs:[rax + rax]


0x12389:	nop	dword ptr [rax]


0x123c2:	nop	dword ptr [rax]
0x123c6:	nop	word ptr cs:[rax + rax]


0x1252f:	nop	


0x125e8:	nop	dword ptr [rax + rax]


0x1263f:	nop	


0x12693:	nop	dword ptr [rax]
0x12696:	nop	word ptr cs:[rax + rax]


0x12715:	nop	
0x12716:	nop	word ptr cs:[rax + rax]


0x12815:	nop	
0x12816:	nop	word ptr cs:[rax + rax]


0x12854:	nop	
0x12856:	nop	word ptr cs:[rax + rax]


0x128eb:	nop	dword ptr [rax + rax]


0x12947:	nop	word ptr [rax + rax]


0x12bb9:	nop	dword ptr [rax]


0x12d9e:	nop	


0x1304f:	nop	


0x131a9:	nop	dword ptr [rax]


0x13358:	nop	dword ptr [rax + rax]


0x13511:	nop	dword ptr [rax + rax]
0x13516:	nop	word ptr cs:[rax + rax]


0x13757:	nop	word ptr [rax + rax]


0x13886:	nop	word ptr cs:[rax + rax]


0x139e2:	nop	dword ptr [rax]
0x139e6:	nop	word ptr cs:[rax + rax]


0x13caa:	nop	word ptr [rax + rax]


0x13eaa:	nop	word ptr [rax + rax]


0x13f8c:	nop	dword ptr [rax]


0x1432e:	nop	


0x14471:	nop	dword ptr [rax + rax]
0x14476:	nop	word ptr cs:[rax + rax]


0x14566:	nop	word ptr cs:[rax + rax]


0x1474f:	nop	


0x14eef:	nop	


0x1512b:	nop	dword ptr [rax + rax]


0x15cc1:	nop	dword ptr [rax + rax]
0x15cc6:	nop	word ptr cs:[rax + rax]


0x15d57:	nop	word ptr [rax + rax]


0x15daf:	nop	


0x15e44:	nop	
0x15e46:	nop	word ptr cs:[rax + rax]


0x15e9c:	nop	dword ptr [rax]


0x166ad:	nop	dword ptr [rax]


0x1691a:	nop	word ptr [rax + rax]


0x16e47:	nop	word ptr [rax + rax]


0x170a4:	nop	
0x170a6:	nop	word ptr cs:[rax + rax]


0x17801:	nop	dword ptr [rax + rax]
0x17806:	nop	word ptr cs:[rax + rax]


0x180fa:	nop	word ptr [rax + rax]


0x18296:	nop	word ptr cs:[rax + rax]


0x18b81:	nop	dword ptr [rax + rax]
0x18b86:	nop	word ptr cs:[rax + rax]


0x18d7c:	nop	dword ptr [rax]


0x1b29d:	nop	dword ptr [rax]


0x1b4e9:	mov	byte ptr [rbp + 8], 0x18
0x1b4ed:	jmp	0x1b364


0x1b5e2:	mov	byte ptr [rbp + 8], 0xa
0x1b5e6:	mov	eax, 1
0x1b5eb:	jmp	0x1b364


0x1b539:	mov	byte ptr [rbp + 8], 0x17
0x1b53d:	jmp	0x1b364


0x1b551:	test	r14, r14
0x1b554:	jne	0x1b91a


0x1b55a:	mov	byte ptr [rbp + 8], 0xc
0x1b55e:	mov	dword ptr [rbp], 0x10
0x1b565:	mov	eax, 1
0x1b56a:	jmp	0x1b364


0x1b91a:	cmp	byte ptr [rdx + r14 - 1], 0xa
0x1b920:	jne	0x1b50c


0x1b926:	test	r15d, 0x800
0x1b92d:	je	0x1b50c


0x1b933:	jmp	0x1b55a


0x1b592:	mov	byte ptr [rbp + 8], 0x13
0x1b596:	jmp	0x1b364


0x1b5c2:	mov	byte ptr [rbp + 8], 0x12
0x1b5c6:	jmp	0x1b364


0x1b5f0:	mov	byte ptr [rbp + 8], 0xb
0x1b5f4:	mov	eax, 1
0x1b5f9:	jmp	0x1b364


0x1b612:	mov	byte ptr [rbp + 8], 9
0x1b616:	jmp	0x1b364


0x1b632:	mov	byte ptr [rbp + 8], 8
0x1b636:	jmp	0x1b364


0x1b646:	add	r14, 1
0x1b64a:	cmp	r14, qword ptr [rbx + 0x58]
0x1b64e:	jne	0x1b94b


0x1b654:	mov	byte ptr [rbp + 8], 0xc
0x1b658:	mov	dword ptr [rbp], 0x20
0x1b65f:	mov	eax, 1
0x1b664:	jmp	0x1b364


0x1b94b:	lea	rdi, [rsp + 0x10]
0x1b950:	mov	rdx, r15
0x1b953:	mov	qword ptr [rbx + 0x48], r14
0x1b957:	mov	rsi, rbx
0x1b95a:	call	0x1b2a0


0x1b95f:	movzx	eax, byte ptr [rsp + 0x18]
0x1b964:	sub	qword ptr [rbx + 0x48], 1
0x1b969:	lea	edx, [rax - 9]
0x1b96c:	mov	eax, 1
0x1b971:	cmp	dl, 1
0x1b974:	ja	0x1b364


0x1b97a:	jmp	0x1b654


0x1b669:	test	r15d, 0x8400
0x1b670:	mov	eax, 2
0x1b675:	jne	0x1b364


0x1b67b:	mov	byte ptr [rbp + 8], 0xa
0x1b67f:	jmp	0x1b364


0x1b684:	and	r15d, 0x1200
0x1b68b:	mov	eax, 2
0x1b690:	cmp	r15, 0x200
0x1b697:	jne	0x1b364


0x1b69d:	jmp	0x1b539


0x1b6a2:	test	r15d, 0x80000
0x1b6a9:	mov	eax, 2
0x1b6ae:	jne	0x1b364


0x1b6b4:	mov	byte ptr [rbp + 8], 0x20
0x1b6b8:	jmp	0x1b364


0x1b6bd:	test	r15d, 0x80000
0x1b6c4:	mov	eax, 2
0x1b6c9:	jne	0x1b364


0x1b6cf:	mov	byte ptr [rbp + 8], 0x22
0x1b6d3:	jmp	0x1b364


0x1b6d8:	and	r15d, 0x1200
0x1b6df:	mov	eax, 2
0x1b6e4:	cmp	r15, 0x200
0x1b6eb:	jne	0x1b364


0x1b6f1:	jmp	0x1b4e9


0x1b6f6:	test	r15d, 0x80000
0x1b6fd:	mov	eax, 2
0x1b702:	jne	0x1b364


0x1b708:	mov	byte ptr [rbp + 8], 0xc
0x1b70c:	mov	dword ptr [rbp], 0x100
0x1b713:	jmp	0x1b364


0x1b718:	test	r15d, 0x80000
0x1b71f:	mov	eax, 2
0x1b724:	jne	0x1b364


0x1b72a:	mov	byte ptr [rbp + 8], 0xc
0x1b72e:	mov	dword ptr [rbp], 0x40
0x1b735:	jmp	0x1b364


0x1b73a:	test	r15d, 0x80000
0x1b741:	mov	eax, 2
0x1b746:	jne	0x1b364


0x1b74c:	mov	byte ptr [rbp + 8], 0x21
0x1b750:	jmp	0x1b364


0x1b755:	test	r15d, 0x80000
0x1b75c:	mov	eax, 2
0x1b761:	jne	0x1b364


0x1b767:	mov	byte ptr [rbp + 8], 0x23
0x1b76b:	jmp	0x1b364


0x1b770:	test	r15d, 0x80000
0x1b777:	mov	eax, 2
0x1b77c:	jne	0x1b364


0x1b782:	mov	byte ptr [rbp + 8], 0xc
0x1b786:	mov	dword ptr [rbp], 0x200
0x1b78d:	jmp	0x1b364


0x1b792:	and	r15d, 0x402
0x1b799:	mov	eax, 2
0x1b79e:	cmp	r15, 2
0x1b7a2:	jne	0x1b364


0x1b7a8:	jmp	0x1b592


0x1b7ad:	test	r15d, 0x80000
0x1b7b4:	mov	eax, 2
0x1b7b9:	jne	0x1b364


0x1b7bf:	mov	byte ptr [rbp + 8], 0xc
0x1b7c3:	mov	dword ptr [rbp], 9
0x1b7ca:	jmp	0x1b364


0x1b7cf:	test	r15d, 0x80000
0x1b7d6:	mov	eax, 2
0x1b7db:	jne	0x1b364


0x1b7e1:	mov	byte ptr [rbp + 8], 0xc
0x1b7e5:	mov	dword ptr [rbp], 6
0x1b7ec:	jmp	0x1b364


0x1b7f1:	test	r15d, 0x4000
0x1b7f8:	mov	eax, 2
0x1b7fd:	jne	0x1b364


0x1b803:	mov	edx, dword ptr [rsp + 8]
0x1b807:	mov	byte ptr [rbp + 8], 4
0x1b80b:	sub	edx, 0x31
0x1b80e:	movsxd	rdx, edx
0x1b811:	mov	qword ptr [rbp], rdx
0x1b815:	jmp	0x1b364


0x1b81a:	and	r15d, 0x402
0x1b821:	mov	eax, 2
0x1b826:	cmp	r15, 2
0x1b82a:	jne	0x1b364


0x1b830:	jmp	0x1b5c2


0x1b835:	test	r15d, 0x2000
0x1b83c:	mov	eax, 2
0x1b841:	jne	0x1b364


0x1b847:	jmp	0x1b612


0x1b84c:	test	r15d, 0x2000
0x1b853:	mov	eax, 2
0x1b858:	jne	0x1b364


0x1b85e:	jmp	0x1b632


0x1b863:	test	r15d, 0x80000
0x1b86a:	mov	eax, 2
0x1b86f:	jne	0x1b364


0x1b875:	mov	byte ptr [rbp + 8], 0xc
0x1b879:	mov	dword ptr [rbp], 0x80
0x1b880:	jmp	0x1b364


0x1b99d:	nop	dword ptr [rax]


0x1ba56:	nop	word ptr cs:[rax + rax]


0x1bac1:	mov	rbx, qword ptr [rbp + 0x30]
0x1bac5:	mov	r15, qword ptr [rsp + 0x20]
0x1baca:	mov	rsi, rdi
0x1bacd:	mov	r13, qword ptr [rsp + 0x18]
0x1bad2:	mov	qword ptr [rsp], r8
0x1bad6:	lea	rax, [rbx + 1]
0x1bada:	mov	rdx, r15
0x1badd:	or	rdx, 0x800000
0x1bae4:	mov	rdi, r13
0x1bae7:	mov	qword ptr [rbp + 0x30], rax
0x1baeb:	call	0x1b2a0


0x1baf0:	cdqe	
0x1baf2:	add	qword ptr [r14 + 0x48], rax
0x1baf6:	xor	eax, eax
0x1baf8:	cmp	byte ptr [r13 + 8], 9
0x1bafd:	mov	rdx, r13
0x1bb00:	je	0x1c600


0x1c600:	cmp	rbx, 8
0x1c604:	jbe	0x1c66b


0x1bb06:	mov	r13, qword ptr [rsp + 0x40]
0x1bb0b:	mov	r8, qword ptr [rsp]
0x1bb0f:	mov	rcx, r15
0x1bb12:	mov	rsi, rbp
0x1bb15:	mov	rdi, r14
0x1bb18:	add	r8, 1
0x1bb1c:	mov	r9, r13
0x1bb1f:	call	0x1d0d0


0x1c66b:	mov	rsi, qword ptr [rsp + 0x10]
0x1c670:	mov	edx, 1
0x1c675:	mov	ecx, ebx
0x1c677:	shl	edx, cl
0x1c679:	movsxd	rdx, edx
0x1c67c:	or	qword ptr [rsi + 0xa8], rdx
0x1c683:	jmp	0x1c606


0x1c606:	mov	rdi, qword ptr [rsp + 0x10]
0x1c60b:	lea	r8, [rsp + 0xc0]
0x1c613:	xor	ecx, ecx
0x1c615:	mov	rdx, rax
0x1c618:	mov	byte ptr [rsp + 0xc8], 0x11
0x1c620:	lea	rsi, [rdi + 0x80]
0x1c627:	add	rdi, 0x70
0x1c62b:	call	0x13360


0x1c630:	test	rax, rax
0x1c633:	mov	qword ptr [rsp + 0x28], rax
0x1c638:	je	0x1c5c8


0x1c5c8:	mov	rax, qword ptr [rsp + 0x40]
0x1c5cd:	mov	dword ptr [rax], 0xc
0x1c5d3:	jmp	0x1bb60


0x1c63a:	mov	qword ptr [rax + 0x28], rbx
0x1c63e:	jmp	0x1bbfc


0x1bb24:	mov	r11d, dword ptr [r13]
0x1bb28:	test	r11d, r11d
0x1bb2b:	jne	0x1bb60


0x1bb2d:	mov	rdx, qword ptr [rsp + 0x18]
0x1bb32:	cmp	byte ptr [rdx + 8], 9
0x1bb36:	je	0x1c600


0x1bb3c:	test	rax, rax
0x1bb3f:	je	0x1bb52


0x1bb52:	mov	rax, qword ptr [rsp + 0x40]
0x1bb57:	mov	dword ptr [rax], 8
0x1bb5d:	nop	dword ptr [rax]
0x1bb60:	mov	qword ptr [rsp + 0x28], 0
0x1bb69:	nop	dword ptr [rax]
0x1bb70:	mov	rdi, qword ptr [rsp + 0x118]
0x1bb78:	xor	rdi, qword ptr fs:[0x28]
0x1bb81:	mov	rax, qword ptr [rsp + 0x28]
0x1bb86:	jne	0x1cefe


0x1bb41:	lea	rsi, [rip - 0x9d28]
0x1bb48:	xor	edx, edx
0x1bb4a:	mov	rdi, rax
0x1bb4d:	call	0x10f80


0x1bb9e:	test	qword ptr [rsp + 0x20], 0x1000000
0x1bba7:	jne	0x1bdfd


0x1bbad:	mov	rax, qword ptr [rsp + 0x20]
0x1bbb2:	test	al, 0x20
0x1bbb4:	jne	0x1bdfd


0x1bbba:	test	al, 0x10
0x1bbbc:	jne	0x1ca25


0x1bbc2:	cmp	cl, 9
0x1bbc5:	je	0x1c5d8


0x1ca25:	mov	rbx, qword ptr [rsp + 0x18]
0x1ca2a:	mov	rdx, rax
0x1ca2d:	mov	rsi, r14
0x1ca30:	mov	qword ptr [rsp], r8
0x1ca34:	mov	r15, rax
0x1ca37:	mov	rdi, rbx
0x1ca3a:	call	0x1b2a0


0x1c5d8:	test	qword ptr [rsp + 0x20], 0x20000
0x1c5e1:	jne	0x1bbcb


0x1bbcb:	mov	rax, qword ptr [rsp + 0x10]
0x1bbd0:	mov	r8, qword ptr [rsp + 0x18]
0x1bbd5:	xor	ecx, ecx
0x1bbd7:	xor	edx, edx
0x1bbd9:	lea	rsi, [rax + 0x80]
0x1bbe0:	lea	rdi, [rax + 0x70]
0x1bbe4:	mov	byte ptr [r8 + 8], 1
0x1bbe9:	call	0x13360


0x1c5e7:	mov	rax, qword ptr [rsp + 0x40]
0x1c5ec:	mov	qword ptr [rsp + 0x28], 0
0x1c5f5:	mov	dword ptr [rax], 0x10
0x1c5fb:	jmp	0x1bb70


0x1bbee:	test	rax, rax
0x1bbf1:	mov	qword ptr [rsp + 0x28], rax
0x1bbf6:	je	0x1c5c8


0x1ca3f:	cdqe	
0x1ca41:	add	qword ptr [r14 + 0x48], rax
0x1ca45:	mov	r9, qword ptr [rsp + 0x40]
0x1ca4a:	mov	r8, qword ptr [rsp]
0x1ca4e:	mov	rcx, r15
0x1ca51:	mov	rdx, rbx
0x1ca54:	mov	rsi, rbp
0x1ca57:	mov	rdi, r14
0x1ca5a:	call	0x1ba60


0x1ca5f:	mov	qword ptr [rsp + 0x28], rax
0x1ca64:	jmp	0x1bb70


0x1c191:	mov	rax, qword ptr [rsp + 0x10]
0x1c196:	lea	rbx, [rax + 0x70]
0x1c19a:	lea	r12, [rax + 0x80]
0x1c1a1:	lea	eax, [rbp - 0x100]
0x1c1a7:	test	eax, 0xfffffeff
0x1c1ac:	jne	0x1c81a


0x1c12f:	mov	rax, qword ptr [rsp + 0x10]
0x1c134:	movzx	eax, byte ptr [rax + 0xb0]
0x1c13b:	test	al, 0x10
0x1c13d:	jne	0x1c191


0x1c1b2:	cmp	ebp, 0x100
0x1c1b8:	mov	r15, qword ptr [rsp + 0x18]
0x1c1bd:	je	0x1c7f2


0x1c81a:	mov	r8, qword ptr [rsp + 0x18]
0x1c81f:	xor	ecx, ecx
0x1c821:	xor	edx, edx
0x1c823:	mov	rsi, r12
0x1c826:	mov	rdi, rbx
0x1c829:	call	0x13360


0x1c13f:	mov	rdi, qword ptr [rsp + 0x10]
0x1c144:	or	eax, 0x10
0x1c147:	test	al, 8
0x1c149:	mov	byte ptr [rdi + 0xb0], al
0x1c14f:	jne	0x1cd53


0x1c7f2:	mov	dword ptr [r15], 6
0x1c7f9:	mov	r8, r15
0x1c7fc:	xor	ecx, ecx
0x1c7fe:	xor	edx, edx
0x1c800:	mov	rsi, r12
0x1c803:	mov	rdi, rbx
0x1c806:	call	0x13360


0x1c1c3:	mov	dword ptr [r15], 5
0x1c1ca:	mov	r8, r15
0x1c1cd:	xor	ecx, ecx
0x1c1cf:	xor	edx, edx
0x1c1d1:	mov	rsi, r12
0x1c1d4:	mov	rdi, rbx
0x1c1d7:	call	0x13360


0x1c155:	movabs	rdx, 0x3ff000000000000
0x1c15f:	test	al, 4
0x1c161:	mov	qword ptr [rdi + 0xb8], rdx
0x1c168:	movabs	rdx, 0x7fffffe87fffffe
0x1c172:	mov	qword ptr [rdi + 0xc0], rdx
0x1c179:	je	0x1ccd8


0x1cd53:	xor	ebx, ebx
0x1cd55:	xor	r12d, r12d
0x1cd58:	jmp	0x1cce3


0x1ccd8:	mov	ebx, 0x80
0x1ccdd:	mov	r12d, 2
0x1cce3:	call	0x29f0


0x1c17f:	pxor	xmm0, xmm0
0x1c183:	mov	rax, qword ptr [rsp + 0x18]
0x1c188:	movups	xmmword ptr [rdi + 0xc8], xmm0
0x1c18f:	mov	ebp, dword ptr [rax]
0x1c191:	mov	rax, qword ptr [rsp + 0x10]
0x1c196:	lea	rbx, [rax + 0x70]
0x1c19a:	lea	r12, [rax + 0x80]
0x1c1a1:	lea	eax, [rbp - 0x100]
0x1c1a7:	test	eax, 0xfffffeff
0x1c1ac:	jne	0x1c81a


0x1cce3:	call	0x29f0


0x1cce8:	movsxd	rdx, ebx
0x1cceb:	movsxd	r9, r12d
0x1ccee:	mov	r8d, 1
0x1ccf4:	add	rdx, rdx
0x1ccf7:	add	rdx, qword ptr [rax]
0x1ccfa:	mov	rax, qword ptr [rsp + 0x10]
0x1ccff:	lea	rdi, [rax + r9*8]
0x1cd03:	xor	eax, eax
0x1cd05:	jmp	0x1cd22


0x1cd22:	test	byte ptr [rdx + rax*2], 8
0x1cd26:	mov	ecx, eax
0x1cd28:	je	0x1cd10


0x1cd10:	lea	esi, [rbx + rax]
0x1cd13:	cmp	esi, 0x5f
0x1cd16:	je	0x1cd2a


0x1cd2a:	mov	rsi, r8
0x1cd2d:	shl	rsi, cl
0x1cd30:	or	qword ptr [rdi + 0xb8], rsi
0x1cd37:	jmp	0x1cd18


0x1cd18:	add	rax, 1
0x1cd1c:	cmp	rax, 0x40
0x1cd20:	je	0x1cd39


0x1cd39:	add	r9, 1
0x1cd3d:	add	ebx, 0x40
0x1cd40:	sub	rdx, -0x80
0x1cd44:	add	rdi, 8
0x1cd48:	cmp	r9d, 3
0x1cd4c:	jle	0x1cd03


0x1cd03:	xor	eax, eax
0x1cd05:	jmp	0x1cd22


0x1cd4e:	jmp	0x1c191


0x1c1dc:	mov	dword ptr [r15], 0xa
0x1c1e3:	mov	rbp, rax
0x1c1e6:	mov	r8, qword ptr [rsp + 0x18]
0x1c1eb:	xor	ecx, ecx
0x1c1ed:	xor	edx, edx
0x1c1ef:	mov	rsi, r12
0x1c1f2:	mov	rdi, rbx
0x1c1f5:	call	0x13360


0x1c1fa:	lea	r8, [rsp + 0xc0]
0x1c202:	mov	rdx, rbp
0x1c205:	mov	rdi, rbx
0x1c208:	mov	rcx, rax
0x1c20b:	mov	rsi, r12
0x1c20e:	mov	r13, rax
0x1c211:	mov	byte ptr [rsp + 0xc8], 0xa
0x1c219:	call	0x13360


0x1c21e:	test	rbp, rbp
0x1c221:	mov	rdi, rax
0x1c224:	mov	qword ptr [rsp + 0x28], rax
0x1c229:	sete	dl
0x1c22c:	test	r13, r13
0x1c22f:	sete	al
0x1c232:	or	dl, al
0x1c234:	jne	0x1c5c8


0x1c23a:	test	rdi, rdi
0x1c23d:	je	0x1c5c8


0x1c243:	mov	rdx, qword ptr [rsp + 0x20]
0x1c248:	mov	rdi, qword ptr [rsp + 0x18]
0x1c24d:	mov	rsi, r14
0x1c250:	call	0x1b2a0


0x1c255:	cdqe	
0x1c257:	add	qword ptr [r14 + 0x48], rax
0x1c25b:	jmp	0x1bb70


0x1c80b:	mov	dword ptr [r15], 9
0x1c812:	mov	rbp, rax
0x1c815:	jmp	0x1c1e6


0x1c1e6:	mov	r8, qword ptr [rsp + 0x18]
0x1c1eb:	xor	ecx, ecx
0x1c1ed:	xor	edx, edx
0x1c1ef:	mov	rsi, r12
0x1c1f2:	mov	rdi, rbx
0x1c1f5:	call	0x13360


0x1c82e:	test	rax, rax
0x1c831:	mov	qword ptr [rsp + 0x28], rax
0x1c836:	jne	0x1c243


0x1c83c:	jmp	0x1c5c8


0x1c260:	mov	esi, 1
0x1c265:	mov	edi, 0x20
0x1c26a:	mov	qword ptr [rsp + 0x98], 0
0x1c276:	call	0x26b0


0x1c27b:	mov	esi, 1
0x1c280:	mov	r12, rax
0x1c283:	mov	edi, 0x50
0x1c288:	call	0x26b0


0x1c28d:	test	r12, r12
0x1c290:	mov	r13, rax
0x1c293:	sete	dl
0x1c296:	test	rax, rax
0x1c299:	sete	al
0x1c29c:	or	dl, al
0x1c29e:	jne	0x1ca79


0x1c2a4:	mov	r10, qword ptr [rsp + 0x18]
0x1c2a9:	mov	rdx, qword ptr [rsp + 0x20]
0x1c2ae:	mov	rsi, r14
0x1c2b1:	mov	rdi, r10
0x1c2b4:	call	0x10b90


0x1ca79:	mov	rdi, r12
0x1ca7c:	call	0x2a10


0x1ca81:	mov	rdi, r13
0x1ca84:	call	0x2a10


0x1ca89:	jmp	0x1c5c8


0x1c2b9:	movsxd	rbx, eax
0x1c2bc:	movzx	eax, byte ptr [r10 + 8]
0x1c2c1:	cmp	al, 2
0x1c2c3:	je	0x1ca69


0x1ca69:	mov	rax, qword ptr [rsp + 0x40]
0x1ca6e:	mov	dword ptr [rax], 2
0x1ca74:	jmp	0x1c6d8


0x1c2c9:	cmp	al, 0x19
0x1c2cb:	mov	byte ptr [rsp + 0x57], 0
0x1c2d0:	je	0x1c79a


0x1c79a:	or	byte ptr [r13 + 0x20], 1
0x1c79f:	test	qword ptr [rsp + 0x20], 0x100
0x1c7a8:	je	0x1c7b2


0x1c2d6:	cmp	al, 0x15
0x1c2d8:	je	0x1c7e4


0x1c7b2:	add	qword ptr [r14 + 0x48], rbx
0x1c7b6:	mov	r11, qword ptr [rsp + 0x18]
0x1c7bb:	mov	rsi, r14
0x1c7be:	mov	rdx, qword ptr [rsp + 0x20]
0x1c7c3:	mov	rdi, r11
0x1c7c6:	call	0x10b90


0x1c7aa:	or	qword ptr [r12], 0x400
0x1c7b2:	add	qword ptr [r14 + 0x48], rbx
0x1c7b6:	mov	r11, qword ptr [rsp + 0x18]
0x1c7bb:	mov	rsi, r14
0x1c7be:	mov	rdx, qword ptr [rsp + 0x20]
0x1c7c3:	mov	rdi, r11
0x1c7c6:	call	0x10b90


0x1c7e4:	mov	rax, qword ptr [rsp + 0x18]
0x1c7e9:	mov	byte ptr [rax + 8], 1
0x1c7ed:	jmp	0x1c2de


0x1c2de:	lea	rax, [rsp + 0xd0]
0x1c2e6:	mov	r15, qword ptr [rsp + 0x18]
0x1c2eb:	lea	rbp, [rip + 0x69c2]
0x1c2f2:	mov	qword ptr [rsp + 0x48], 0
0x1c2fb:	mov	r9d, 1
0x1c301:	mov	qword ptr [rsp + 0x30], 0
0x1c30a:	mov	qword ptr [rsp + 0x28], rax
0x1c30f:	lea	rax, [rsp + 0xa0]
0x1c317:	mov	qword ptr [rsp], rax
0x1c31b:	lea	rax, [rsp + 0x98]
0x1c323:	mov	qword ptr [rsp + 0x58], rax
0x1c328:	lea	rax, [rsp + 0xc0]
0x1c330:	mov	qword ptr [rsp + 0x60], rax
0x1c335:	lea	rax, [rsp + 0xf0]
0x1c33d:	mov	qword ptr [rsp + 0x68], rax
0x1c342:	mov	rax, qword ptr [rsp + 0x28]
0x1c347:	mov	r8, qword ptr [rsp + 0x20]
0x1c34c:	and	r9d, 1
0x1c350:	mov	rdi, qword ptr [rsp]
0x1c354:	mov	ecx, ebx
0x1c356:	mov	rdx, r15
0x1c359:	mov	rsi, r14
0x1c35c:	mov	dword ptr [rsp + 0xa0], 3
0x1c367:	mov	qword ptr [rsp + 0xa8], rax
0x1c36f:	call	0x1b040


0x1c7cb:	mov	ebx, eax
0x1c7cd:	movzx	eax, byte ptr [r11 + 8]
0x1c7d2:	cmp	al, 2
0x1c7d4:	je	0x1ca69


0x1c7da:	mov	byte ptr [rsp + 0x57], 1
0x1c7df:	jmp	0x1c2d6


0x1c3c8:	mov	rbx, qword ptr [rsp + 0x40]
0x1c3cd:	cmp	cl, 0x23
0x1c3d0:	mov	rsi, qword ptr [rdi + 0x78]
0x1c3d4:	sete	r8b
0x1c3d8:	lea	rcx, [rip + 0x5c02]
0x1c3df:	lea	rdx, [rip + 0x6445]
0x1c3e6:	movzx	r8d, r8b
0x1c3ea:	mov	r9, rbx
0x1c3ed:	mov	rdi, qword ptr [rsp + 0x10]
0x1c3f2:	call	0x166b0


0x1c3f7:	mov	edi, dword ptr [rbx]
0x1c3f9:	mov	qword ptr [rsp + 0x28], rax
0x1c3fe:	test	edi, edi
0x1c400:	je	0x1bbfc


0x1c406:	test	rax, rax
0x1c409:	jne	0x1bbfc


0x1c40f:	jmp	0x1bb60


0x1c3ed:	mov	rdi, qword ptr [rsp + 0x10]
0x1c3f2:	call	0x166b0


0x1c43f:	mov	rax, qword ptr [rsp + 0x18]
0x1c444:	mov	rdi, qword ptr [rsp + 0x10]
0x1c449:	mov	rcx, qword ptr [rax]
0x1c44c:	mov	eax, 1
0x1c451:	shl	eax, cl
0x1c453:	cdqe	
0x1c455:	test	qword ptr [rdi + 0xa8], rax
0x1c45c:	je	0x1ca8e


0x1ca8e:	mov	rax, qword ptr [rsp + 0x40]
0x1ca93:	mov	qword ptr [rsp + 0x28], 0
0x1ca9c:	mov	dword ptr [rax], 6
0x1caa2:	jmp	0x1bb70


0x1c462:	mov	rbx, qword ptr [rsp + 0x10]
0x1c467:	mov	r8, qword ptr [rsp + 0x18]
0x1c46c:	xor	ecx, ecx
0x1c46e:	xor	edx, edx
0x1c470:	or	qword ptr [rbx + 0xa0], rax
0x1c477:	lea	rsi, [rbx + 0x80]
0x1c47e:	lea	rdi, [rbx + 0x70]
0x1c482:	call	0x13360


0x1c487:	test	rax, rax
0x1c48a:	mov	qword ptr [rsp + 0x28], rax
0x1c48f:	je	0x1c5c8


0x1c495:	add	qword ptr [rbx + 0x98], 1
0x1c49d:	or	byte ptr [rbx + 0xb0], 2
0x1c4a4:	jmp	0x1bbfc


0x1c4a9:	mov	rbx, qword ptr [rsp + 0x10]
0x1c4ae:	mov	r8, qword ptr [rsp + 0x18]
0x1c4b3:	xor	ecx, ecx
0x1c4b5:	xor	edx, edx
0x1c4b7:	lea	rsi, [rbx + 0x80]
0x1c4be:	lea	rdi, [rbx + 0x70]
0x1c4c2:	call	0x13360


0x1c4c7:	test	rax, rax
0x1c4ca:	mov	qword ptr [rsp + 0x28], rax
0x1c4cf:	je	0x1c5c8


0x1c4d5:	cmp	dword ptr [rbx + 0xb4], 1
0x1c4dc:	jle	0x1bbfc


0x1c4e2:	or	byte ptr [rbx + 0xb0], 2
0x1c4e9:	jmp	0x1bbfc


0x1c4ee:	mov	rax, qword ptr [rsp + 0x10]
0x1c4f3:	mov	r8, qword ptr [rsp + 0x18]
0x1c4f8:	xor	ecx, ecx
0x1c4fa:	xor	edx, edx
0x1c4fc:	lea	rbx, [rax + 0x70]
0x1c500:	lea	rbp, [rax + 0x80]
0x1c507:	mov	rdi, rbx
0x1c50a:	mov	rsi, rbp
0x1c50d:	call	0x13360


0x1c512:	test	rax, rax
0x1c515:	mov	qword ptr [rsp + 0x28], rax
0x1c51a:	je	0x1c5c8


0x1c520:	mov	rax, qword ptr [rsp + 0x10]
0x1c525:	lea	r12, [rsp + 0xc0]
0x1c52d:	mov	r15, qword ptr [rsp + 0x28]
0x1c532:	cmp	dword ptr [rax + 0xb4], 1
0x1c539:	jle	0x1bbfc


0x1c53f:	mov	rax, qword ptr [r14 + 0x48]
0x1c543:	cmp	qword ptr [r14 + 0x68], rax
0x1c547:	jle	0x1c851


0x1c851:	mov	qword ptr [rsp + 0x28], r15
0x1c856:	jmp	0x1bbfc


0x1c54d:	cmp	rax, qword ptr [r14 + 0x30]
0x1c551:	je	0x1c851


0x1c557:	mov	rdx, qword ptr [r14 + 0x10]
0x1c55b:	cmp	dword ptr [rdx + rax*4], -1
0x1c55f:	jne	0x1c851


0x1c565:	mov	r13, qword ptr [rsp + 0x18]
0x1c56a:	mov	rdx, qword ptr [rsp + 0x20]
0x1c56f:	mov	rsi, r14
0x1c572:	mov	rdi, r13
0x1c575:	call	0x1b2a0


0x1c57a:	cdqe	
0x1c57c:	add	qword ptr [r14 + 0x48], rax
0x1c580:	mov	r8, r13
0x1c583:	xor	ecx, ecx
0x1c585:	xor	edx, edx
0x1c587:	mov	rsi, rbp
0x1c58a:	mov	rdi, rbx
0x1c58d:	call	0x13360


0x1c592:	mov	rdx, r15
0x1c595:	mov	r13, rax
0x1c598:	mov	r8, r12
0x1c59b:	mov	rcx, rax
0x1c59e:	mov	rsi, rbp
0x1c5a1:	mov	rdi, rbx
0x1c5a4:	mov	byte ptr [rsp + 0xc8], 0x10
0x1c5ac:	call	0x13360


0x1c5b1:	test	r13, r13
0x1c5b4:	mov	r15, rax
0x1c5b7:	sete	dl
0x1c5ba:	test	rax, rax
0x1c5bd:	sete	al
0x1c5c0:	or	dl, al
0x1c5c2:	je	0x1c53f


0x1c643:	mov	rax, qword ptr [rsp + 0x40]
0x1c648:	mov	qword ptr [rsp + 0x28], 0
0x1c651:	mov	dword ptr [rax], 5
0x1c657:	jmp	0x1bb70


0x1c685:	mov	rsi, qword ptr [rsp + 0xa8]
0x1c68d:	mov	rdi, r12
0x1c690:	call	0x15e50


0x1c695:	mov	rdx, qword ptr [rsp + 0x40]
0x1c69a:	test	eax, eax
0x1c69c:	mov	dword ptr [rdx], eax
0x1c69e:	jne	0x1c6d8


0x1c6bd:	mov	rsi, qword ptr [rsp + 0xa8]
0x1c6c5:	mov	rdi, r12
0x1c6c8:	call	0x15e50


0x1c6cd:	mov	rdx, qword ptr [rsp + 0x40]
0x1c6d2:	test	eax, eax
0x1c6d4:	mov	dword ptr [rdx], eax
0x1c6d6:	je	0x1c6a0


0x1c707:	mov	rdx, qword ptr [r13 + 0x28]
0x1c70b:	cmp	rdx, qword ptr [rsp + 0x30]
0x1c710:	mov	rax, qword ptr [r13]
0x1c714:	je	0x1cc0e


0x1cc0e:	mov	rdx, qword ptr [rsp + 0x30]
0x1cc13:	lea	rdi, [rdx + rdx + 1]
0x1cc18:	lea	rsi, [rdi*4]
0x1cc20:	mov	qword ptr [rsp + 0x30], rdi
0x1cc25:	mov	rdi, rax
0x1cc28:	call	0x2830


0x1c71a:	lea	rcx, [rdx + 1]
0x1c71e:	mov	qword ptr [r13 + 0x28], rcx
0x1c722:	mov	ecx, dword ptr [rsp + 0xa8]
0x1c729:	mov	dword ptr [rax + rdx*4], ecx
0x1c72c:	jmp	0x1c6a0


0x1cc2d:	test	rax, rax
0x1cc30:	je	0x1cb83


0x1cc36:	mov	qword ptr [r13], rax
0x1cc3a:	mov	rdx, qword ptr [r13 + 0x28]
0x1cc3e:	jmp	0x1c71a


0x1c731:	movzx	edx, byte ptr [rsp + 0xa8]
0x1c739:	mov	esi, 1
0x1c73e:	mov	rax, rdx
0x1c741:	and	edx, 0x3f
0x1c744:	shr	rax, 3
0x1c748:	mov	ecx, edx
0x1c74a:	and	eax, 0x18
0x1c74d:	shl	rsi, cl
0x1c750:	or	qword ptr [r12 + rax], rsi
0x1c754:	jmp	0x1c6a0


0x1cf33:	nop	dword ptr [rax]
0x1cf36:	nop	word ptr cs:[rax + rax]


0x1d0c2:	nop	dword ptr [rax]
0x1d0c6:	nop	word ptr cs:[rax + rax]


0x1d24f:	nop	


0x1da87:	or	byte ptr [r13 + 0xb0], 1
0x1da8f:	mov	r15, qword ptr [rdx + 8]
0x1da93:	test	r15, r15
0x1da96:	je	0x1e0a9


0x1e0a9:	mov	rax, qword ptr [rdx + 0x20]
0x1e0ad:	mov	rcx, qword ptr [rax + 0x38]
0x1e0b1:	jmp	0x1daa4


0x1da9c:	mov	rax, qword ptr [r15 + 0x18]
0x1daa0:	mov	rcx, qword ptr [rax + 0x38]
0x1daa4:	mov	rax, qword ptr [rdx + 0x10]
0x1daa8:	test	rax, rax
0x1daab:	je	0x1e09c


0x1daa4:	mov	rax, qword ptr [rdx + 0x10]
0x1daa8:	test	rax, rax
0x1daab:	je	0x1e09c


0x1e09c:	mov	rax, qword ptr [rdx + 0x20]
0x1e0a0:	mov	r9, qword ptr [rax + 0x38]
0x1e0a4:	jmp	0x1dab9


0x1dab1:	mov	rax, qword ptr [rax + 0x18]
0x1dab5:	mov	r9, qword ptr [rax + 0x38]
0x1dab9:	test	rcx, rcx
0x1dabc:	js	0x1e321


0x1dab9:	test	rcx, rcx
0x1dabc:	js	0x1e321


0x1e321:	lea	rcx, [rip + 0x4a58]
0x1e328:	lea	rsi, [rip + 0x4491]
0x1e32f:	lea	rdi, [rip + 0x4541]
0x1e336:	mov	edx, 0x5af
0x1e33b:	call	0x2600


0x1dac2:	test	r9, r9
0x1dac5:	js	0x1e2e3


0x1e2e3:	lea	rcx, [rip + 0x4a96]
0x1e2ea:	lea	rsi, [rip + 0x44cf]
0x1e2f1:	lea	rdi, [rip + 0x4589]
0x1e2f8:	mov	edx, 0x5b0
0x1e2fd:	call	0x2600


0x1dacb:	mov	rax, qword ptr [r13 + 0x28]
0x1dacf:	lea	rdi, [rdi + rdi*2]
0x1dad3:	mov	qword ptr [rsp + 0x38], rsi
0x1dad8:	mov	qword ptr [rsp + 0x30], r9
0x1dadd:	mov	qword ptr [rsp + 0x18], rcx
0x1dae2:	mov	qword ptr [rsp + 0x10], rdx
0x1dae7:	lea	r10, [rax + rdi*8]
0x1daeb:	mov	edi, 0x10
0x1daf0:	mov	qword ptr [r10], 2
0x1daf7:	mov	qword ptr [rsp], r10
0x1dafb:	call	0x2780


0x1db00:	mov	r10, qword ptr [rsp]
0x1db04:	test	rax, rax
0x1db07:	mov	rdx, qword ptr [rsp + 0x10]
0x1db0c:	mov	rcx, qword ptr [rsp + 0x18]
0x1db11:	mov	r9, qword ptr [rsp + 0x30]
0x1db16:	mov	rsi, qword ptr [rsp + 0x38]
0x1db1b:	mov	qword ptr [r10 + 0x10], rax
0x1db1f:	je	0x1ddba


0x1db25:	cmp	rcx, r9
0x1db28:	je	0x1e0fd


0x1e0fd:	mov	qword ptr [r10 + 8], 1
0x1e105:	mov	qword ptr [rax], rcx
0x1e108:	jmp	0x1da05


0x1db2e:	mov	qword ptr [r10 + 8], 2
0x1db36:	jl	0x1e0e4


0x1da05:	xor	edi, edi
0x1da07:	test	r15, r15
0x1da0a:	je	0x1da1b


0x1e0e4:	mov	qword ptr [rax], rcx
0x1e0e7:	mov	qword ptr [rax + 8], r9
0x1e0eb:	jmp	0x1da05


0x1db3c:	mov	qword ptr [rax], r9
0x1db3f:	mov	qword ptr [rax + 8], rcx
0x1db43:	jmp	0x1da05


0x1db48:	mov	rax, qword ptr [rdx + 0x20]
0x1db4c:	lea	rcx, [rdi + rdi*2]
0x1db50:	mov	edi, 8
0x1db55:	mov	qword ptr [rsp + 0x10], rsi
0x1db5a:	mov	qword ptr [rsp], rdx
0x1db5e:	mov	r14, qword ptr [rax + 0x38]
0x1db62:	mov	rax, qword ptr [r13 + 0x28]
0x1db66:	lea	r15, [rax + rcx*8]
0x1db6a:	mov	qword ptr [r15], 1
0x1db71:	mov	qword ptr [r15 + 8], 1
0x1db79:	call	0x2780


0x1db7e:	test	rax, rax
0x1db81:	mov	qword ptr [r15 + 0x10], rax
0x1db85:	mov	rdx, qword ptr [rsp]
0x1db89:	mov	rsi, qword ptr [rsp + 0x10]
0x1db8e:	je	0x1e238


0x1e238:	mov	qword ptr [r15 + 8], 0
0x1e240:	mov	qword ptr [r15], 0
0x1e247:	jmp	0x1ddba


0x1db94:	mov	qword ptr [rax], r14
0x1db97:	mov	r15, qword ptr [rdx + 8]
0x1db9b:	jmp	0x1da05


0x1dba0:	cmp	qword ptr [rdx + 0x20], 0
0x1dba5:	je	0x1da01


0x1da01:	mov	r15, qword ptr [rdx + 8]
0x1da05:	xor	edi, edi
0x1da07:	test	r15, r15
0x1da0a:	je	0x1da1b


0x1dbab:	lea	rcx, [rip + 0x51ce]
0x1dbb2:	lea	rsi, [rip + 0x4c07]
0x1dbb9:	lea	rdi, [rip + 0x4ca4]
0x1dbc0:	mov	edx, 0x59f
0x1dbc5:	call	0x2600


0x1dbea:	mov	rax, qword ptr [r13 + 0x28]
0x1dbee:	lea	rcx, [rdi + rdi*2]
0x1dbf2:	mov	edi, 8
0x1dbf7:	mov	qword ptr [rsp + 0x18], rsi
0x1dbfc:	mov	qword ptr [rsp + 0x10], rdx
0x1dc01:	lea	rcx, [rax + rcx*8]
0x1dc05:	mov	qword ptr [rcx], 1
0x1dc0c:	mov	qword ptr [rcx + 8], 1
0x1dc14:	mov	qword ptr [rsp], rcx
0x1dc18:	call	0x2780


0x1dc1d:	mov	rcx, qword ptr [rsp]
0x1dc21:	test	rax, rax
0x1dc24:	mov	rdx, qword ptr [rsp + 0x10]
0x1dc29:	mov	rsi, qword ptr [rsp + 0x18]
0x1dc2e:	mov	qword ptr [rcx + 0x10], rax
0x1dc32:	je	0x1e280


0x1e280:	mov	qword ptr [rcx + 8], 0
0x1e288:	mov	qword ptr [rcx], 0
0x1e28f:	mov	eax, 0xc
0x1e294:	jmp	0x1d570


0x1dc38:	mov	qword ptr [rax], r15
0x1dc3b:	mov	r15, qword ptr [rdx + 8]
0x1dc3f:	jmp	0x1da05


0x1e189:	mov	r8d, eax
0x1e18c:	add	rdx, 1
0x1e190:	add	rcx, 0x10
0x1e194:	cmp	rdx, r10
0x1e197:	jne	0x1e00e


0x1e19d:	or	r14b, r8b
0x1e1a0:	je	0x1e2aa


0x1e00e:	cmp	byte ptr [rcx + 8], 0xc
0x1e012:	ja	0x1e2de


0x1e1a6:	mov	rax, rdx
0x1e1a9:	shl	rax, 4
0x1e1ad:	add	rax, rsi
0x1e1b0:	jmp	0x1e1c8


0x1e1c8:	movzx	edx, byte ptr [rsi + 8]
0x1e1cc:	cmp	dl, 1
0x1e1cf:	jne	0x1e1b2


0x1e1d1:	cmp	byte ptr [rsi], 0
0x1e1d4:	jns	0x1e1bb


0x1e1b2:	cmp	dl, 5
0x1e1b5:	jne	0x1e1bb


0x1e1d6:	and	byte ptr [rsi + 0xa], 0xdf
0x1e1da:	jmp	0x1e1bb


0x1e1bb:	add	rsi, 0x10
0x1e1bf:	cmp	rax, rsi
0x1e1c2:	je	0x1e2a7


0x1e1b7:	mov	byte ptr [rsi + 8], 7
0x1e1bb:	add	rsi, 0x10
0x1e1bf:	cmp	rax, rsi
0x1e1c2:	je	0x1e2a7


0x1e2a7:	mov	r14d, r8d
0x1e2aa:	cmp	qword ptr [rbx + 0x98], 0
0x1e2b2:	movzx	edx, byte ptr [rbx + 0xb0]
0x1e2b9:	mov	dword ptr [rbx + 0xb4], 1
0x1e2c3:	setg	al
0x1e2c6:	and	edx, 0xfffffff9
0x1e2c9:	or	eax, r14d
0x1e2cc:	and	eax, 1
0x1e2cf:	add	eax, eax
0x1e2d1:	or	eax, edx
0x1e2d3:	mov	byte ptr [rbx + 0xb0], al
0x1e2d9:	jmp	0x1ddfe


0x1e18c:	add	rdx, 1
0x1e190:	add	rcx, 0x10
0x1e194:	cmp	rdx, r10
0x1e197:	jne	0x1e00e


0x1e1e9:	mov	edi, dword ptr [rcx]
0x1e1eb:	cmp	edi, 0x20
0x1e1ee:	je	0x1e18c


0x1e1f0:	jbe	0x1e299


0x1e299:	cmp	edi, 0x10
0x1e29c:	je	0x1e18c


0x1e1f6:	cmp	edi, 0x40
0x1e1f9:	je	0x1e18c


0x1e2a2:	jmp	0x1ddfe


0x1e1fb:	add	edi, -0x80
0x1e1fe:	je	0x1e18c


0x1e200:	jmp	0x1ddfe


0x1e216:	cmp	qword ptr [rdi + 0x18], 0
0x1e21b:	je	0x1e18c


0x1e221:	jmp	0x1ddfe


0x1e345:	nop	
0x1e346:	nop	word ptr cs:[rax + rax]


0x1e3bf:	nop	


0x1e3cf:	nop	


0x1e493:	nop	dword ptr [rax]
0x1e496:	nop	word ptr cs:[rax + rax]


0x1e91f:	nop	


0x1ea3b:	nop	dword ptr [rax + rax]


0x1ebd5:	nop	
0x1ebd6:	nop	word ptr cs:[rax + rax]


0x1ec24:	nop	
0x1ec26:	nop	word ptr cs:[rax + rax]


0x1ecce:	nop	


0x1ece8:	nop	dword ptr [rax + rax]


0x1ed05:	nop	
0x1ed06:	nop	word ptr cs:[rax + rax]


0x1ed2a:	nop	word ptr [rax + rax]


0x1ed4c:	nop	dword ptr [rax]


0x1ed91:	nop	word ptr cs:[rax + rax]
0x1ed9b:	nop	dword ptr [rax + rax]


0x1edcc:	nop	dword ptr [rax]


0x1edfa:	nop	word ptr [rax + rax]


0x1ee5d:	nop	dword ptr [rax]


0x1eeef:	nop	


0x1f026:	nop	word ptr cs:[rax + rax]


0x1f10f:	nop	


0x1f11c:	nop	dword ptr [rax]


0x1f1c3:	nop	dword ptr [rax]
0x1f1c6:	nop	word ptr cs:[rax + rax]


0x1f311:	nop	word ptr cs:[rax + rax]
0x1f31b:	nop	dword ptr [rax + rax]


0x1f39d:	nop	dword ptr [rax]


0x1f43a:	nop	word ptr [rax + rax]


0x1f4ae:	nop	


0x1f52b:	nop	dword ptr [rax + rax]


0x1f535:	nop	
0x1f536:	nop	word ptr cs:[rax + rax]


0x1f575:	nop	
0x1f576:	nop	word ptr cs:[rax + rax]


0x1f5be:	nop	


0x1f5fc:	nop	dword ptr [rax]


0x1f66e:	nop	


0x1f72f:	nop	


0x1f9ae:	nop	


0x1f9be:	nop	


0x1fa25:	nop	
0x1fa26:	nop	word ptr cs:[rax + rax]


0x1fa32:	nop	word ptr cs:[rax + rax]
0x1fa3c:	nop	dword ptr [rax]


0x53b0:	xor	eax, eax
0x53b2:	ret	


0x53b8:	test	r8d, r8d
0x53bb:	je	0x53c8


0x53d8:	test	r8d, r8d
0x53db:	jne	0x53c8


0x53f8:	test	r9d, r9d
0x53fb:	je	0x53c8


0x6220:	cmp	r11d, 0x4f
0x6224:	je	0x6090


0x6350:	test	r11d, r11d
0x6353:	jne	0x6090


0x6e28:	cmp	r11d, 0x45
0x6e2c:	je	0x6090


0xaaa0:	xor	r10d, r10d
0xaaa3:	mov	eax, dword ptr [rsp + 8]
0xaaa7:	cmp	eax, 2
0xaaaa:	je	0xb068


0xaad0:	xor	r10d, r10d
0xaad3:	cmp	dword ptr [rsp + 8], 2
0xaad8:	je	0xafe0


0xaaf8:	mov	edx, 9
0xaafd:	mov	ebx, 0x74
0xab02:	cmp	dword ptr [rsp + 8], 2
0xab07:	sete	al
0xab0a:	and	al, byte ptr [rsp + 0xf]
0xab0e:	jne	0xac5e


0xab38:	mov	edx, 8
0xab3d:	mov	ebx, 0x62
0xab42:	jmp	0xab14


0xab48:	cmp	dword ptr [rsp + 8], 2
0xab4d:	je	0xaf20


0xabf0:	cmp	byte ptr [rsp + 0xd], 0
0xabf5:	jne	0xadc3


0xac18:	cmp	dword ptr [rsp + 8], 2
0xac1d:	sete	dl
0xac20:	xor	eax, eax
0xac22:	jmp	0xaa08


0xac30:	mov	edx, 7
0xac35:	mov	ebx, 0x61
0xac3a:	jmp	0xab14


0xac40:	cmp	dword ptr [rsp + 8], 2
0xac45:	sete	dl
0xac48:	test	rbp, rbp
0xac4b:	jne	0xa9fc


0xac70:	cmp	dword ptr [rsp + 8], 2
0xac75:	sete	dl
0xac78:	xor	r12d, r12d
0xac7b:	jmp	0xac51


0xac80:	cmp	dword ptr [rsp + 8], 2
0xac85:	mov	ebx, 0x20
0xac8a:	sete	dl
0xac8d:	jmp	0xac51


0xac90:	mov	edx, 0xd
0xac95:	mov	ebx, 0x72
0xac9a:	jmp	0xab02


0xaca0:	mov	edx, 0xc
0xaca5:	mov	ebx, 0x66
0xacaa:	jmp	0xab14


0xacb0:	mov	edx, 0xb
0xacb5:	mov	ebx, 0x76
0xacba:	jmp	0xab14


0xacc0:	mov	edx, 0xa
0xacc5:	mov	ebx, 0x6e
0xacca:	jmp	0xab02


0xad60:	xor	r10d, r10d
0xad63:	cmp	byte ptr [rsp + 0xd], 0
0xad68:	jne	0xab5e


0xad80:	mov	edx, 0xc
0xad85:	xor	r10d, r10d
0xad88:	mov	ebx, 0x66
0xad8d:	jmp	0xab14


0xad98:	mov	edx, 0xa
0xad9d:	xor	r10d, r10d
0xada0:	mov	ebx, 0x6e
0xada5:	jmp	0xab02


0xadb0:	mov	ebx, 0x61
0xadb5:	jmp	0xab80


0xadc0:	xor	r10d, r10d
0xadc3:	cmp	dword ptr [rsp + 8], 2
0xadc8:	sete	dl
0xadcb:	cmp	byte ptr [rsp + 0xf], 0
0xadd0:	jne	0xb96a


0xae60:	cmp	dword ptr [rsp + 8], 2
0xae65:	mov	r12d, r10d
0xae68:	sete	dl
0xae6b:	xor	r10d, r10d
0xae6e:	xor	eax, eax
0xae70:	jmp	0xaa08


0xae78:	cmp	dword ptr [rsp + 8], 2
0xae7d:	sete	dl
0xae80:	xor	r10d, r10d
0xae83:	jmp	0xac48


0xae90:	cmp	dword ptr [rsp + 8], 2
0xae95:	sete	dl
0xae98:	xor	r10d, r10d
0xae9b:	xor	r12d, r12d
0xae9e:	jmp	0xac51


0xaea8:	cmp	dword ptr [rsp + 8], 2
0xaead:	mov	r12d, r10d
0xaeb0:	mov	ebx, 0x20
0xaeb5:	sete	dl
0xaeb8:	xor	r10d, r10d
0xaebb:	jmp	0xac51


0xaed8:	mov	ebx, 0x76
0xaedd:	jmp	0xab80


0xaee8:	mov	edx, 9
0xaeed:	xor	r10d, r10d
0xaef0:	mov	ebx, 0x74
0xaef5:	jmp	0xab02


0xaf00:	mov	ebx, 0x62
0xaf05:	jmp	0xab80


0xb4a0:	test	ebx, ebx
0xb4a2:	jne	0xb89d


0xcf20:	movabs	rax, 0xc000000000000000
0xcf2a:	cmp	rbp, rax
0xcf2d:	jl	0xd260


0xcf50:	movabs	rax, 0xffc0000000000000
0xcf5a:	cmp	rbp, rax
0xcf5d:	jl	0xd260


0xcf80:	movsxd	rsi, eax
0xcf83:	movabs	rax, 0x8000000000000000
0xcf8d:	mov	r8d, 7
0xcf93:	cqo	
0xcf95:	xor	r11d, r11d
0xcf98:	movabs	r9, 0x7fffffffffffffff
0xcfa2:	idiv	rsi
0xcfa5:	mov	r10, rax
0xcfa8:	jmp	0xcfcf


0xcff0:	movsxd	rsi, eax
0xcff3:	movabs	rax, 0x8000000000000000
0xcffd:	mov	r8d, 8
0xd003:	cqo	
0xd005:	xor	r11d, r11d
0xd008:	movabs	r9, 0x7fffffffffffffff
0xd012:	idiv	rsi
0xd015:	mov	r10, rax
0xd018:	jmp	0xd03f


0xd060:	movabs	r8, 0x8000000000000000
0xd06a:	movsxd	rsi, eax
0xd06d:	mov	rax, r8
0xd070:	cqo	
0xd072:	idiv	rsi
0xd075:	cmp	rbp, rax
0xd078:	jl	0xd260


0xd0a0:	movsxd	rsi, eax
0xd0a3:	movabs	rax, 0x8000000000000000
0xd0ad:	mov	r8d, 3
0xd0b3:	cqo	
0xd0b5:	xor	r11d, r11d
0xd0b8:	movabs	r9, 0x7fffffffffffffff
0xd0c2:	idiv	rsi
0xd0c5:	mov	r10, rax
0xd0c8:	cmp	r10, rbp
0xd0cb:	jg	0xd2c0


0xd100:	movsxd	rsi, eax
0xd103:	movabs	rax, 0x8000000000000000
0xd10d:	mov	r8d, 6
0xd113:	cqo	
0xd115:	xor	r11d, r11d
0xd118:	movabs	r9, 0x7fffffffffffffff
0xd122:	idiv	rsi
0xd125:	mov	r10, rax
0xd128:	jmp	0xd14b


0xd168:	movsxd	rsi, eax
0xd16b:	movabs	rax, 0x8000000000000000
0xd175:	mov	r8d, 5
0xd17b:	cqo	
0xd17d:	xor	r11d, r11d
0xd180:	movabs	r9, 0x7fffffffffffffff
0xd18a:	idiv	rsi
0xd18d:	mov	r10, rax
0xd190:	jmp	0xd1b7


0xd1d0:	movabs	rax, 0xffe0000000000000
0xd1da:	cmp	rbp, rax
0xd1dd:	jl	0xd260


0xd200:	movsxd	rsi, eax
0xd203:	movabs	rax, 0x8000000000000000
0xd20d:	mov	r8d, 4
0xd213:	cqo	
0xd215:	xor	r11d, r11d
0xd218:	movabs	r9, 0x7fffffffffffffff
0xd222:	idiv	rsi
0xd225:	mov	r10, rax
0xd228:	cmp	r10, rbp
0xd22b:	jg	0xd290


0xd690:	mov	r8d, 5
0xd696:	xor	r9d, r9d
0xd699:	mov	rax, rbx
0xd69c:	mul	rsi
0xd69f:	mov	rbx, rax
0xd6a2:	jo	0xd79f


0xdb60:	mov	r8d, 5
0xdb66:	xor	r9d, r9d
0xdb69:	mov	rax, rbx
0xdb6c:	mul	rsi
0xdb6f:	mov	rbx, rax
0xdb72:	jo	0xdc6f


0x1b4d0:	and	r15d, 0x1200
0x1b4d7:	mov	eax, 1
0x1b4dc:	cmp	r15, 0x1200
0x1b4e3:	jne	0x1b364


0x1b4f8:	and	r15d, 0x8400
0x1b4ff:	cmp	r15, 0x8000
0x1b506:	je	0x1b5e2


0x1b520:	and	r15d, 0x1200
0x1b527:	mov	eax, 1
0x1b52c:	cmp	r15, 0x1200
0x1b533:	jne	0x1b364


0x1b548:	test	r15d, 0x800008
0x1b54f:	jne	0x1b55a


0x1b570:	mov	byte ptr [rbp + 8], 0x14
0x1b574:	mov	eax, 1
0x1b579:	jmp	0x1b364


0x1b580:	test	r15d, 0x402
0x1b587:	mov	eax, 1
0x1b58c:	jne	0x1b364


0x1b5a0:	mov	byte ptr [rbp + 8], 5
0x1b5a4:	mov	eax, 1
0x1b5a9:	jmp	0x1b364


0x1b5b0:	test	r15d, 0x402
0x1b5b7:	mov	eax, 1
0x1b5bc:	jne	0x1b364


0x1b5d0:	test	r15d, 0x800
0x1b5d7:	mov	eax, 1
0x1b5dc:	je	0x1b364


0x1b600:	test	r15d, 0x2000
0x1b607:	mov	eax, 1
0x1b60c:	je	0x1b364


0x1b620:	test	r15d, 0x2000
0x1b627:	mov	eax, 1
0x1b62c:	je	0x1b364


0x1b640:	test	r15b, 8
0x1b644:	jne	0x1b654


0x1c120:	mov	rax, qword ptr [rsp + 0x18]
0x1c125:	mov	ebp, dword ptr [rax]
0x1c127:	test	ebp, 0x30f
0x1c12d:	je	0x1c191


0x1c418:	mov	rbx, qword ptr [rsp + 0x40]
0x1c41d:	cmp	cl, 0x21
0x1c420:	mov	rsi, qword ptr [rdi + 0x78]
0x1c424:	sete	r8b
0x1c428:	lea	rcx, [rip + 0x36e8]
0x1c42f:	lea	rdx, [rip + 0x63e9]
0x1c436:	movzx	r8d, r8b
0x1c43a:	mov	r9, rbx
0x1c43d:	jmp	0x1c3ed


0x1dbd0:	mov	rax, qword ptr [rdx + 0x20]
0x1dbd4:	mov	r15, qword ptr [rax + 0x38]
0x1dbd8:	mov	rax, qword ptr [r13 + 0x18]
0x1dbdc:	mov	qword ptr [rax + rdi*8], r15
0x1dbe0:	cmp	byte ptr [rdx + 0x30], 4
0x1dbe4:	jne	0x1da01


0x1e1e0:	cmp	byte ptr [rcx], 0
0x1e1e3:	cmovs	r14d, eax
0x1e1e7:	jmp	0x1e18c


0x1e208:	mov	rdi, qword ptr [rcx]
0x1e20b:	cmp	qword ptr [rdi + 0x10], 0
0x1e210:	jne	0x1ddfe


0x32ff:	nop	


0x339d:	nop	dword ptr [rax]


0x33f7:	nop	word ptr [rax + rax]


0x3455:	nop	dword ptr [rax]


0x34ad:	nop	dword ptr [rax]


0x3f96:	nop	word ptr cs:[rax + rax]


0x3fe7:	nop	word ptr [rax + rax]


0x4031:	nop	dword ptr [rax]


0x40b9:	nop	dword ptr [rax]


0x41cf:	nop	


0x41df:	nop	


0x4756:	nop	word ptr cs:[rax + rax]


0x47e3:	nop	dword ptr [rax + rax]


0x4817:	nop	word ptr [rax + rax]


0x488d:	nop	dword ptr [rax]


0x48ff:	nop	


0x4984:	nop	dword ptr [rax]


0x49b3:	nop	dword ptr [rax + rax]


0x4a5f:	nop	


0x4b3f:	nop	


0x4b5b:	nop	dword ptr [rax + rax]


0x4b67:	nop	word ptr [rax + rax]


0x4b9b:	nop	dword ptr [rax + rax]


0x4d34:	nop	dword ptr [rax]


0x4d45:	nop	dword ptr [rax]


0x4d68:	nop	dword ptr [rax + rax]


0x4d74:	nop	dword ptr [rax]


0x4ddd:	nop	dword ptr [rax]


0x4de4:	nop	dword ptr [rax]


0x4e71:	nop	dword ptr [rax]


0x4f07:	nop	word ptr [rax + rax]


0x4f6f:	nop	


0x5003:	nop	dword ptr [rax + rax]


0x5048:	nop	dword ptr [rax + rax]


0x5055:	nop	dword ptr [rax]


0x5068:	nop	dword ptr [rax + rax]


0x5113:	nop	dword ptr [rax + rax]


0x519d:	nop	dword ptr [rax]


0x524f:	nop	


0x5276:	nop	word ptr cs:[rax + rax]


0x529d:	nop	dword ptr [rax]


0x52c3:	nop	dword ptr [rax + rax]


0x52d2:	nop	word ptr [rax + rax]


0x53af:	nop	


0x53b3:	nop	dword ptr [rax + rax]


0x53c3:	nop	dword ptr [rax + rax]


0x53d1:	nop	dword ptr [rax]


0x53f5:	nop	dword ptr [rax]


0x5433:	nop	dword ptr [rax + rax]


0x545d:	nop	dword ptr [rax]


0x54b3:	nop	dword ptr [rax + rax]


0x54e4:	nop	dword ptr [rax]


0x555c:	nop	dword ptr [rax]


0x5583:	nop	dword ptr [rax + rax]


0x55c7:	nop	word ptr [rax + rax]


0x560f:	nop	


0x569a:	nop	word ptr [rax + rax]


0x56c8:	nop	dword ptr [rax + rax]


0x5701:	nop	dword ptr [rax]


0x584f:	nop	


0x587f:	nop	


0x5933:	nop	dword ptr [rax + rax]


0x5949:	nop	dword ptr [rax]


0x5958:	nop	dword ptr [rax + rax]


0x5989:	nop	dword ptr [rax]


0x599a:	nop	word ptr [rax + rax]


0x59e1:	nop	dword ptr [rax]


0x59fd:	nop	dword ptr [rax]


0x5a6e:	nop	


0x5b43:	nop	dword ptr [rax + rax]


0x5b7e:	nop	


0x5c1b:	nop	dword ptr [rax + rax]


0x5c9a:	nop	word ptr [rax + rax]


0x5cbb:	nop	dword ptr [rax + rax]


0x5cd6:	nop	word ptr cs:[rax + rax]


0x5d7b:	nop	dword ptr [rax + rax]


0x5daf:	nop	


0x5e0e:	nop	


0x5e6e:	nop	


0x5f6e:	nop	


0x6045:	nop	dword ptr [rax]


0x6059:	nop	dword ptr [rax]


0x606d:	nop	dword ptr [rax]


0x607a:	nop	word ptr [rax + rax]


0x6156:	nop	word ptr cs:[rax + rax]


0x618b:	nop	dword ptr [rax + rax]


0x619a:	nop	word ptr [rax + rax]


0x61da:	nop	word ptr [rax + rax]


0x6202:	nop	word ptr [rax + rax]


0x6219:	nop	dword ptr [rax]


0x634d:	nop	dword ptr [rax]


0x68df:	nop	


0x6e23:	nop	dword ptr [rax + rax]


0x7178:	nop	dword ptr [rax + rax]


0x718f:	nop	


0x7265:	nop	dword ptr [rax]


0x7282:	nop	word ptr [rax + rax]


0x72a6:	nop	word ptr cs:[rax + rax]


0x72c9:	nop	dword ptr [rax]


0x72ea:	nop	word ptr [rax + rax]


0x7726:	nop	word ptr cs:[rax + rax]


0x77dc:	nop	dword ptr [rax]


0x7c32:	nop	word ptr [rax + rax]


0x7c41:	nop	dword ptr [rax]


0x7c78:	nop	dword ptr [rax + rax]


0x7c98:	nop	dword ptr [rax + rax]


0x7cbf:	nop	


0x7cc7:	nop	word ptr [rax + rax]


0x7cd9:	nop	dword ptr [rax]


0x7d11:	nop	dword ptr [rax]


0x7d4e:	nop	


0x7e3b:	nop	dword ptr [rax + rax]


0x7e9a:	nop	word ptr [rax + rax]


0x7ed9:	nop	dword ptr [rax]


0x7ee9:	nop	dword ptr [rax]


0x7f6e:	nop	


0x7fc1:	nop	dword ptr [rax]


0x808c:	nop	dword ptr [rax]


0x809a:	nop	word ptr [rax + rax]


0x80fe:	nop	


0x8114:	nop	dword ptr [rax]


0x8167:	nop	word ptr [rax + rax]


0x81c7:	nop	word ptr [rax + rax]


0x81e4:	nop	dword ptr [rax]


0x829b:	nop	dword ptr [rax + rax]


0x830c:	nop	dword ptr [rax]


0x8337:	nop	word ptr [rax + rax]


0x836b:	nop	dword ptr [rax + rax]


0x83c3:	nop	dword ptr [rax + rax]


0x83e4:	nop	dword ptr [rax]


0x8402:	nop	word ptr [rax + rax]


0x844a:	nop	word ptr [rax + rax]


0x847b:	nop	dword ptr [rax + rax]


0x84bf:	nop	


0x8509:	nop	dword ptr [rax]


0x864f:	nop	


0x866c:	nop	dword ptr [rax]


0x86cf:	nop	


0x86f6:	nop	word ptr cs:[rax + rax]


0x8745:	nop	dword ptr [rax]


0x87d1:	nop	dword ptr [rax]


0x87e6:	nop	word ptr cs:[rax + rax]


0x8818:	nop	dword ptr [rax + rax]


0x8829:	nop	dword ptr [rax]


0x8856:	nop	word ptr cs:[rax + rax]


0x8a0f:	nop	


0x8a31:	nop	dword ptr [rax]


0x8a56:	nop	word ptr cs:[rax + rax]


0x8a6a:	nop	word ptr [rax + rax]


0x8a77:	nop	word ptr [rax + rax]


0x8b3b:	nop	dword ptr [rax + rax]


0x8bbe:	nop	


0x8c08:	nop	dword ptr [rax + rax]


0x8cb2:	nop	word ptr [rax + rax]


0x8ced:	nop	dword ptr [rax]


0x8d0e:	nop	


0x8d2e:	nop	


0x8da6:	nop	word ptr cs:[rax + rax]


0x8e1f:	nop	


0x8ee5:	nop	dword ptr [rax]


0x8f06:	nop	word ptr cs:[rax + rax]


0x8f2e:	nop	


0x8f4e:	nop	


0x8f6f:	nop	


0x8f7a:	nop	word ptr [rax + rax]


0x8f9e:	nop	


0x9044:	nop	dword ptr [rax]


0x904c:	nop	dword ptr [rax]


0x9088:	nop	dword ptr [rax + rax]


0x91de:	nop	


0x91fc:	nop	dword ptr [rax]


0x92b3:	nop	dword ptr [rax + rax]


0x9334:	nop	dword ptr [rax]


0x9392:	nop	word ptr [rax + rax]


0x93eb:	nop	dword ptr [rax + rax]


0x93f4:	nop	dword ptr [rax]


0x94db:	nop	dword ptr [rax + rax]


0x9502:	nop	word ptr [rax + rax]


0x9562:	nop	word ptr [rax + rax]


0x95e4:	nop	dword ptr [rax]


0x9604:	nop	dword ptr [rax]


0x9628:	nop	dword ptr [rax + rax]


0x9648:	nop	dword ptr [rax + rax]


0x970b:	nop	dword ptr [rax + rax]


0x974b:	nop	dword ptr [rax + rax]


0x9787:	nop	word ptr [rax + rax]


0x9824:	nop	dword ptr [rax]


0x9856:	nop	word ptr cs:[rax + rax]


0x9884:	nop	dword ptr [rax]


0x9898:	nop	dword ptr [rax + rax]


0x98ac:	nop	dword ptr [rax]


0x98ce:	nop	


0x98f4:	nop	dword ptr [rax]


0x99e8:	nop	dword ptr [rax + rax]


0x9b44:	nop	dword ptr [rax]


0x9b7c:	nop	dword ptr [rax]


0x9ba2:	nop	word ptr [rax + rax]


0x9be9:	nop	dword ptr [rax]


0x9c48:	nop	dword ptr [rax + rax]


0x9c62:	nop	word ptr [rax + rax]


0x9d1a:	nop	word ptr [rax + rax]


0x9d8f:	nop	


0x9d9b:	nop	dword ptr [rax + rax]


0x9dbf:	nop	


0x9e17:	nop	word ptr [rax + rax]


0x9e4a:	nop	word ptr [rax + rax]


0x9e9e:	nop	


0x9efb:	nop	dword ptr [rax + rax]


0x9f8c:	nop	dword ptr [rax]


0xa011:	nop	dword ptr [rax]


0xa18d:	nop	dword ptr [rax]


0xa236:	nop	word ptr cs:[rax + rax]


0xa2e6:	nop	word ptr cs:[rax + rax]


0xa2f7:	nop	word ptr [rax + rax]


0xa318:	nop	dword ptr [rax + rax]


0xa338:	nop	dword ptr [rax + rax]


0xa35e:	nop	


0xa37e:	nop	


0xa38a:	nop	word ptr [rax + rax]


0xa39a:	nop	word ptr [rax + rax]


0xa3aa:	nop	word ptr [rax + rax]


0xa3be:	nop	


0xa3d5:	nop	dword ptr [rax]


0xa3e2:	nop	word ptr [rax + rax]


0xa4a5:	nop	dword ptr [rax]


0xa72c:	nop	dword ptr [rax]


0xa77d:	nop	dword ptr [rax]


0xa9a8:	nop	dword ptr [rax + rax]


0xaa97:	nop	word ptr [rax + rax]


0xaace:	nop	


0xaaf1:	nop	dword ptr [rax]


0xab32:	nop	word ptr [rax + rax]


0xab44:	nop	dword ptr [rax]


0xabe8:	nop	dword ptr [rax + rax]


0xac11:	nop	dword ptr [rax]


0xac27:	nop	word ptr [rax + rax]


0xac3f:	nop	


0xac6e:	nop	


0xac7d:	nop	dword ptr [rax]


0xac8f:	nop	


0xac9f:	nop	


0xacaf:	nop	


0xacbf:	nop	


0xaccf:	nop	


0xad3c:	nop	dword ptr [rax]


0xad5c:	nop	dword ptr [rax]


0xad6e:	nop	


0xad7f:	nop	


0xad92:	nop	word ptr [rax + rax]


0xadaa:	nop	word ptr [rax + rax]


0xadba:	nop	word ptr [rax + rax]


0xae5b:	nop	dword ptr [rax + rax]


0xae75:	nop	dword ptr [rax]


0xae88:	nop	dword ptr [rax + rax]


0xaea3:	nop	dword ptr [rax + rax]


0xaed2:	nop	word ptr [rax + rax]


0xaee2:	nop	word ptr [rax + rax]


0xaefa:	nop	word ptr [rax + rax]


0xaf0a:	nop	word ptr [rax + rax]


0xaf18:	nop	dword ptr [rax + rax]


0xaf3f:	nop	


0xafd9:	nop	dword ptr [rax]


0xb022:	nop	word ptr [rax + rax]


0xb048:	nop	dword ptr [rax + rax]


0xb061:	nop	dword ptr [rax]


0xb082:	nop	word ptr [rax + rax]


0xb1e8:	nop	dword ptr [rax + rax]


0xb2fb:	nop	dword ptr [rax + rax]


0xb31e:	nop	


0xb3e5:	nop	dword ptr [rax]


0xb49d:	nop	dword ptr [rax]


0xb6a6:	nop	word ptr cs:[rax + rax]


0xb739:	nop	dword ptr [rax]


0xb7ad:	nop	dword ptr [rax]


0xb88d:	nop	dword ptr [rax]


0xbb9b:	nop	dword ptr [rax + rax]


0xc466:	nop	word ptr cs:[rax + rax]


0xc4f5:	nop	dword ptr [rax]


0xc516:	nop	word ptr cs:[rax + rax]


0xc575:	nop	dword ptr [rax]


0xc5b1:	nop	dword ptr [rax]


0xc5f8:	nop	dword ptr [rax + rax]


0xc647:	nop	word ptr [rax + rax]


0xc6a4:	nop	dword ptr [rax]


0xc6d2:	nop	word ptr [rax + rax]


0xc786:	nop	word ptr cs:[rax + rax]


0xc7e9:	nop	dword ptr [rax]


0xca62:	nop	word ptr [rax + rax]


0xcae9:	nop	dword ptr [rax]


0xcb14:	nop	dword ptr [rax]


0xcb6d:	nop	dword ptr [rax]


0xcc89:	nop	dword ptr [rax]


0xcc9f:	nop	


0xccd9:	nop	dword ptr [rax]


0xcd9f:	nop	


0xcdb3:	nop	dword ptr [rax + rax]


0xce62:	nop	word ptr [rax + rax]


0xce74:	nop	dword ptr [rax]


0xcf1b:	nop	dword ptr [rax + rax]


0xcf4b:	nop	dword ptr [rax + rax]


0xcf7c:	nop	dword ptr [rax]


0xcfaa:	nop	word ptr [rax + rax]


0xcfe6:	nop	word ptr cs:[rax + rax]


0xd01a:	nop	word ptr [rax + rax]


0xd056:	nop	word ptr cs:[rax + rax]


0xd09c:	nop	dword ptr [rax]


0xd0ec:	nop	dword ptr [rax]


0xd0f8:	nop	dword ptr [rax + rax]


0xd12a:	nop	word ptr [rax + rax]


0xd162:	nop	word ptr [rax + rax]


0xd192:	nop	word ptr [rax + rax]


0xd1ce:	nop	


0xd1ff:	nop	


0xd24d:	nop	dword ptr [rax]


0xd25b:	nop	dword ptr [rax + rax]


0xd275:	nop	dword ptr [rax]


0xd28d:	nop	dword ptr [rax]


0xd2a2:	nop	word ptr [rax + rax]


0xd2bd:	nop	dword ptr [rax]


0xd2d5:	nop	dword ptr [rax]


0xd2ed:	nop	dword ptr [rax]


0xd305:	nop	dword ptr [rax]


0xd31d:	nop	dword ptr [rax]


0xd335:	nop	dword ptr [rax]


0xd416:	nop	word ptr cs:[rax + rax]


0xd471:	nop	dword ptr [rax]


0xd482:	nop	word ptr [rax + rax]


0xd4b2:	nop	word ptr [rax + rax]


0xd4bc:	nop	dword ptr [rax]


0xd55b:	nop	dword ptr [rax + rax]


0xd68c:	nop	dword ptr [rax]


0xd713:	nop	dword ptr [rax + rax]


0xd8e6:	nop	word ptr cs:[rax + rax]


0xd943:	nop	dword ptr [rax + rax]


0xd952:	nop	word ptr [rax + rax]


0xd982:	nop	word ptr [rax + rax]


0xd98c:	nop	dword ptr [rax]


0xda2b:	nop	dword ptr [rax + rax]


0xdb5c:	nop	dword ptr [rax]


0xdbe3:	nop	dword ptr [rax + rax]


0xdce5:	nop	dword ptr [rax]


0xdd43:	nop	dword ptr [rax + rax]


0xdd6f:	nop	


0xddce:	nop	


0xde2d:	nop	dword ptr [rax]


0xdebd:	nop	dword ptr [rax]


0xdf1c:	nop	dword ptr [rax]


0xdf7b:	nop	dword ptr [rax + rax]


0xdf8c:	nop	dword ptr [rax]


0xdfae:	nop	


0xdfb9:	nop	dword ptr [rax]


0xdfd2:	nop	word ptr [rax + rax]


0xdfe2:	nop	word ptr [rax + rax]


0xe0a9:	nop	dword ptr [rax]


0xe0dd:	nop	dword ptr [rax]


0xe107:	nop	word ptr [rax + rax]


0xe1e9:	nop	dword ptr [rax]


0xe206:	nop	word ptr cs:[rax + rax]


0xe22a:	nop	word ptr [rax + rax]


0xe297:	nop	word ptr [rax + rax]


0xe2f8:	nop	dword ptr [rax + rax]


0xe3a7:	nop	word ptr [rax + rax]


0xe3cc:	nop	dword ptr [rax]


0xe40f:	nop	


0xe42e:	nop	


0xe48a:	nop	word ptr [rax + rax]


0xe4a1:	nop	dword ptr [rax]


0xe4e1:	nop	dword ptr [rax]


0xe503:	nop	dword ptr [rax + rax]


0xe558:	nop	dword ptr [rax + rax]


0xe5b8:	nop	dword ptr [rax + rax]


0xe67a:	nop	word ptr [rax + rax]


0xe6bd:	nop	dword ptr [rax]


0xe758:	nop	dword ptr [rax + rax]


0xe77f:	nop	


0xe78f:	nop	


0xe7d5:	nop	dword ptr [rax]


0xe7f8:	nop	dword ptr [rax + rax]


0xe8cb:	nop	dword ptr [rax + rax]


0xe8f2:	nop	word ptr [rax + rax]


0xe95a:	nop	word ptr [rax + rax]


0xe98e:	nop	


0xeab2:	nop	word ptr [rax + rax]


0xec6b:	nop	dword ptr [rax + rax]


0xecc3:	nop	dword ptr [rax + rax]


0xece5:	nop	dword ptr [rax]


0xed17:	nop	word ptr [rax + rax]


0xed5c:	nop	dword ptr [rax]


0xed83:	nop	dword ptr [rax + rax]


0xed92:	nop	word ptr [rax + rax]


0xedad:	nop	dword ptr [rax]


0xedcb:	nop	dword ptr [rax + rax]


0xee04:	nop	dword ptr [rax]


0xee1f:	nop	


0xee2a:	nop	word ptr [rax + rax]


0xef42:	nop	word ptr [rax + rax]


0xef5a:	nop	word ptr [rax + rax]


0xefad:	nop	dword ptr [rax]


0xeff9:	nop	dword ptr [rax]


0xf00a:	nop	word ptr [rax + rax]


0xf061:	nop	dword ptr [rax]


0xf138:	nop	dword ptr [rax + rax]


0xf18d:	nop	dword ptr [rax]


0xf1b5:	nop	dword ptr [rax]


0xf1e5:	nop	dword ptr [rax]


0xf1ff:	nop	


0xf20e:	nop	


0xf31a:	nop	word ptr [rax + rax]


0xf4e5:	nop	dword ptr [rax]


0xf58e:	nop	


0xf5aa:	nop	word ptr [rax + rax]


0xf689:	nop	dword ptr [rax]


0xf6ce:	nop	


0xf6eb:	nop	dword ptr [rax + rax]


0xf718:	nop	dword ptr [rax + rax]


0xf734:	nop	dword ptr [rax]


0xf76b:	nop	dword ptr [rax + rax]


0xf81d:	nop	dword ptr [rax]


0xf827:	nop	word ptr [rax + rax]


0xf856:	nop	word ptr cs:[rax + rax]


0xf879:	nop	dword ptr [rax]


0xf8b2:	nop	word ptr [rax + rax]


0xf933:	nop	dword ptr [rax + rax]


0xfa0c:	nop	dword ptr [rax]


0xfa86:	nop	word ptr cs:[rax + rax]


0xfab5:	nop	dword ptr [rax]


0xfad4:	nop	dword ptr [rax]


0xfb4a:	nop	word ptr [rax + rax]


0xfb5f:	nop	


0xfb7a:	nop	word ptr [rax + rax]


0xfc82:	nop	word ptr [rax + rax]


0xfcd4:	nop	dword ptr [rax]


0xfd24:	nop	dword ptr [rax]


0xfd6f:	nop	


0xfd81:	nop	dword ptr [rax]


0xfda8:	nop	dword ptr [rax + rax]


0xfe64:	nop	dword ptr [rax]


0xfed9:	nop	dword ptr [rax]


0xff16:	nop	word ptr cs:[rax + rax]


0x1006c:	nop	dword ptr [rax]


0x1012d:	nop	dword ptr [rax]


0x1013d:	nop	dword ptr [rax]


0x1014b:	nop	dword ptr [rax + rax]


0x10192:	nop	word ptr [rax + rax]


0x101a5:	nop	dword ptr [rax]


0x10284:	nop	dword ptr [rax]


0x102ec:	nop	dword ptr [rax]


0x105e8:	nop	dword ptr [rax + rax]


0x10644:	nop	dword ptr [rax]


0x1078f:	nop	


0x107ba:	nop	word ptr [rax + rax]


0x107ff:	nop	


0x10a6a:	nop	word ptr [rax + rax]


0x10a91:	nop	dword ptr [rax]


0x10abe:	nop	


0x10b0c:	nop	dword ptr [rax]


0x10b58:	nop	dword ptr [rax + rax]


0x10bee:	nop	


0x10bf7:	nop	word ptr [rax + rax]


0x10c49:	nop	dword ptr [rax]


0x10c5d:	nop	dword ptr [rax]


0x10c6a:	nop	word ptr [rax + rax]


0x10c7a:	nop	word ptr [rax + rax]


0x10c96:	nop	word ptr cs:[rax + rax]


0x10caa:	nop	word ptr [rax + rax]


0x10cc9:	nop	dword ptr [rax]


0x10d63:	nop	dword ptr [rax + rax]


0x10dc2:	nop	word ptr [rax + rax]


0x10e9a:	nop	word ptr [rax + rax]


0x10eb9:	nop	dword ptr [rax]


0x10ee6:	nop	word ptr cs:[rax + rax]


0x10f4b:	nop	dword ptr [rax + rax]


0x10f56:	nop	word ptr cs:[rax + rax]


0x10f6d:	nop	dword ptr [rax]


0x10f8f:	nop	


0x10fb2:	nop	word ptr [rax + rax]


0x10fff:	nop	


0x1101d:	nop	dword ptr [rax]


0x110c3:	nop	dword ptr [rax + rax]


0x110df:	nop	


0x11121:	nop	dword ptr [rax]


0x1114e:	nop	


0x11195:	nop	dword ptr [rax]


0x111cd:	nop	dword ptr [rax]


0x11216:	nop	word ptr cs:[rax + rax]


0x1122a:	nop	word ptr [rax + rax]


0x11244:	nop	dword ptr [rax]


0x1125c:	nop	dword ptr [rax]


0x112d7:	nop	word ptr [rax + rax]


0x1131c:	nop	dword ptr [rax]


0x113a2:	nop	word ptr [rax + rax]


0x113e2:	nop	word ptr [rax + rax]


0x114df:	nop	


0x114ee:	nop	


0x114fe:	nop	


0x1152c:	nop	dword ptr [rax]


0x11546:	nop	word ptr cs:[rax + rax]


0x11592:	nop	word ptr [rax + rax]


0x11648:	nop	dword ptr [rax + rax]


0x11787:	nop	word ptr [rax + rax]


0x118c5:	nop	dword ptr [rax]


0x118e3:	nop	dword ptr [rax + rax]


0x11913:	nop	dword ptr [rax + rax]


0x11947:	nop	word ptr [rax + rax]


0x119d5:	nop	dword ptr [rax]


0x11c7a:	nop	word ptr [rax + rax]


0x11ca6:	nop	word ptr cs:[rax + rax]


0x11ce6:	nop	word ptr cs:[rax + rax]


0x11d01:	nop	dword ptr [rax]


0x11d16:	nop	word ptr cs:[rax + rax]


0x11d6b:	nop	dword ptr [rax + rax]


0x11e04:	nop	dword ptr [rax]


0x11f0b:	nop	dword ptr [rax + rax]


0x11fcc:	nop	dword ptr [rax]


0x12162:	nop	word ptr [rax + rax]


0x121ef:	nop	


0x12239:	nop	dword ptr [rax]


0x12296:	nop	word ptr cs:[rax + rax]


0x123b1:	nop	dword ptr [rax]


0x123ef:	nop	


0x1261e:	nop	


0x12634:	nop	dword ptr [rax]


0x1264e:	nop	


0x1265e:	nop	


0x12688:	nop	dword ptr [rax + rax]


0x126c4:	nop	dword ptr [rax]


0x126e7:	nop	word ptr [rax + rax]


0x12709:	nop	dword ptr [rax]


0x127a5:	nop	dword ptr [rax]


0x127bd:	nop	dword ptr [rax]


0x127d1:	nop	dword ptr [rax]


0x127ec:	nop	dword ptr [rax]


0x1286f:	nop	


0x128bf:	nop	


0x12921:	nop	dword ptr [rax]


0x1293f:	nop	


0x129ab:	nop	dword ptr [rax + rax]


0x12a35:	nop	dword ptr [rax]


0x12b3d:	nop	dword ptr [rax]


0x12b5c:	nop	dword ptr [rax]


0x12b7c:	nop	dword ptr [rax]


0x12b8c:	nop	dword ptr [rax]


0x12b9c:	nop	dword ptr [rax]


0x12c4d:	nop	dword ptr [rax]


0x12cb1:	nop	dword ptr [rax]


0x12cbb:	nop	dword ptr [rax + rax]


0x12cd3:	nop	dword ptr [rax + rax]


0x12ce1:	nop	dword ptr [rax]


0x12d0a:	nop	word ptr [rax + rax]


0x12d31:	nop	dword ptr [rax]


0x12d69:	nop	dword ptr [rax]


0x12e6c:	nop	dword ptr [rax]


0x12efb:	nop	dword ptr [rax + rax]


0x12f69:	nop	dword ptr [rax]


0x12fc7:	nop	word ptr [rax + rax]


0x13022:	nop	word ptr [rax + rax]


0x130ec:	nop	dword ptr [rax]


0x1315b:	nop	dword ptr [rax + rax]


0x1323d:	nop	dword ptr [rax]


0x13273:	nop	dword ptr [rax + rax]


0x1327a:	nop	word ptr [rax + rax]


0x1328d:	nop	dword ptr [rax]


0x132bc:	nop	dword ptr [rax]


0x132e6:	nop	word ptr cs:[rax + rax]


0x13317:	nop	word ptr [rax + rax]


0x133e1:	nop	dword ptr [rax]


0x134a7:	nop	word ptr [rax + rax]


0x134b4:	nop	dword ptr [rax]


0x134f9:	nop	dword ptr [rax]


0x135c9:	nop	dword ptr [rax]


0x136c3:	nop	dword ptr [rax + rax]


0x137bd:	nop	dword ptr [rax]


0x137db:	nop	dword ptr [rax + rax]


0x1384f:	nop	


0x13866:	nop	word ptr cs:[rax + rax]


0x138fd:	nop	dword ptr [rax]


0x1393a:	nop	word ptr [rax + rax]


0x1396b:	nop	dword ptr [rax + rax]


0x13995:	nop	dword ptr [rax]


0x139b5:	nop	dword ptr [rax]


0x139d5:	nop	dword ptr [rax]


0x13a65:	nop	dword ptr [rax]


0x13aae:	nop	


0x13bb4:	nop	dword ptr [rax]


0x13c19:	nop	dword ptr [rax]


0x13c49:	nop	dword ptr [rax]


0x13c5c:	nop	dword ptr [rax]


0x13d97:	nop	word ptr [rax + rax]


0x13e51:	nop	dword ptr [rax]


0x13e63:	nop	dword ptr [rax + rax]


0x13e7c:	nop	dword ptr [rax]


0x13e9e:	nop	


0x13ef7:	nop	word ptr [rax + rax]


0x13ffa:	nop	word ptr [rax + rax]


0x14072:	nop	word ptr [rax + rax]


0x1408c:	nop	dword ptr [rax]


0x140c1:	nop	dword ptr [rax]


0x14276:	nop	word ptr cs:[rax + rax]


0x1435c:	nop	dword ptr [rax]


0x14409:	nop	dword ptr [rax]


0x144a7:	nop	word ptr [rax + rax]


0x144d9:	nop	dword ptr [rax]


0x144ea:	nop	word ptr [rax + rax]


0x14531:	nop	dword ptr [rax]


0x145bf:	nop	


0x1461e:	nop	


0x1462c:	nop	dword ptr [rax]


0x14633:	nop	dword ptr [rax + rax]


0x14654:	nop	dword ptr [rax]


0x14665:	nop	dword ptr [rax]


0x146c8:	nop	dword ptr [rax + rax]


0x1472a:	nop	word ptr [rax + rax]


0x14742:	nop	word ptr [rax + rax]


0x148bc:	nop	dword ptr [rax]


0x148cd:	nop	dword ptr [rax]


0x148f1:	nop	dword ptr [rax]


0x14902:	nop	word ptr [rax + rax]


0x1491e:	nop	


0x14a14:	nop	dword ptr [rax]


0x14a23:	nop	dword ptr [rax + rax]


0x14a55:	nop	dword ptr [rax]


0x14af5:	nop	dword ptr [rax]


0x14b04:	nop	dword ptr [rax]


0x14b39:	nop	dword ptr [rax]


0x14b62:	nop	word ptr [rax + rax]


0x14bd9:	nop	dword ptr [rax]


0x14c01:	nop	dword ptr [rax]


0x14c31:	nop	dword ptr [rax]


0x14cb9:	nop	dword ptr [rax]


0x14cee:	nop	


0x14d25:	nop	dword ptr [rax]


0x14d8e:	nop	


0x14e95:	nop	dword ptr [rax]


0x14f55:	nop	dword ptr [rax]


0x15034:	nop	dword ptr [rax]


0x15077:	nop	word ptr [rax + rax]


0x1508d:	nop	dword ptr [rax]


0x15107:	nop	word ptr [rax + rax]


0x1553f:	nop	


0x1556b:	nop	dword ptr [rax + rax]


0x1565a:	nop	word ptr [rax + rax]


0x15858:	nop	dword ptr [rax + rax]


0x15898:	nop	dword ptr [rax + rax]


0x1590d:	nop	dword ptr [rax]


0x159d6:	nop	word ptr cs:[rax + rax]


0x15a62:	nop	word ptr [rax + rax]


0x15b43:	nop	dword ptr [rax + rax]


0x15bd5:	nop	dword ptr [rax]


0x15d33:	nop	dword ptr [rax + rax]


0x15d4f:	nop	


0x15e8b:	nop	dword ptr [rax + rax]


0x15f93:	nop	dword ptr [rax + rax]


0x16098:	nop	dword ptr [rax + rax]


0x160e2:	nop	word ptr [rax + rax]


0x16166:	nop	word ptr cs:[rax + rax]


0x161eb:	nop	dword ptr [rax + rax]


0x16285:	nop	dword ptr [rax]


0x163b1:	nop	dword ptr [rax]


0x16898:	nop	dword ptr [rax + rax]


0x168aa:	nop	word ptr [rax + rax]


0x168e8:	nop	dword ptr [rax + rax]


0x169ba:	nop	word ptr [rax + rax]


0x16ab6:	nop	word ptr cs:[rax + rax]


0x16b54:	nop	dword ptr [rax]


0x16ee3:	nop	dword ptr [rax + rax]


0x16f08:	nop	dword ptr [rax + rax]


0x16f39:	nop	dword ptr [rax]


0x16f4f:	nop	


0x16f6d:	nop	dword ptr [rax]


0x16f7d:	nop	dword ptr [rax]


0x16fb5:	nop	dword ptr [rax]


0x16fd1:	nop	dword ptr [rax]


0x16fe9:	nop	dword ptr [rax]


0x17294:	nop	dword ptr [rax]


0x173f3:	nop	dword ptr [rax + rax]


0x1753b:	nop	dword ptr [rax + rax]


0x175c9:	nop	dword ptr [rax]


0x175e4:	nop	dword ptr [rax]


0x17601:	nop	dword ptr [rax]


0x1765d:	nop	dword ptr [rax]


0x1767d:	nop	dword ptr [rax]


0x176aa:	nop	word ptr [rax + rax]


0x1792b:	nop	dword ptr [rax + rax]


0x17a69:	nop	dword ptr [rax]


0x17b19:	nop	dword ptr [rax]


0x17b6b:	nop	dword ptr [rax + rax]


0x17baf:	nop	


0x17c46:	nop	word ptr cs:[rax + rax]


0x17d1e:	nop	


0x17d83:	nop	dword ptr [rax + rax]


0x17d9a:	nop	word ptr [rax + rax]


0x17de4:	nop	dword ptr [rax]


0x17e27:	nop	word ptr [rax + rax]


0x17e38:	nop	dword ptr [rax + rax]


0x17eba:	nop	word ptr [rax + rax]


0x17eff:	nop	


0x17f82:	nop	word ptr [rax + rax]


0x1814a:	nop	word ptr [rax + rax]


0x181f9:	nop	dword ptr [rax]


0x18207:	nop	word ptr [rax + rax]


0x18321:	nop	dword ptr [rax]


0x1834e:	nop	


0x183d9:	nop	dword ptr [rax]


0x184fb:	nop	dword ptr [rax + rax]


0x185f1:	nop	dword ptr [rax]


0x1860c:	nop	dword ptr [rax]


0x18641:	nop	dword ptr [rax]


0x186ac:	nop	dword ptr [rax]


0x187c3:	nop	dword ptr [rax + rax]


0x18833:	nop	dword ptr [rax + rax]


0x188cb:	nop	dword ptr [rax + rax]


0x189ca:	nop	word ptr [rax + rax]


0x18a13:	nop	dword ptr [rax + rax]


0x18a3f:	nop	


0x18a85:	nop	dword ptr [rax]


0x18ae3:	nop	dword ptr [rax + rax]


0x18c1b:	nop	dword ptr [rax + rax]


0x18cb6:	nop	word ptr cs:[rax + rax]


0x18d02:	nop	word ptr [rax + rax]


0x18d13:	nop	dword ptr [rax + rax]


0x18d6e:	nop	


0x18e99:	nop	dword ptr [rax]


0x18ff6:	nop	word ptr cs:[rax + rax]


0x1902b:	nop	dword ptr [rax + rax]


0x19041:	nop	dword ptr [rax]


0x1907b:	nop	dword ptr [rax + rax]


0x195b8:	nop	dword ptr [rax + rax]


0x195dc:	nop	dword ptr [rax]


0x19622:	nop	word ptr [rax + rax]


0x197c1:	nop	dword ptr [rax]


0x198ee:	nop	


0x19b5e:	nop	


0x19bbb:	nop	dword ptr [rax + rax]


0x19c05:	nop	dword ptr [rax]


0x19c66:	nop	word ptr cs:[rax + rax]


0x19cad:	nop	dword ptr [rax]


0x19cdc:	nop	dword ptr [rax]


0x19d1c:	nop	dword ptr [rax]


0x19d55:	nop	dword ptr [rax]


0x19d86:	nop	word ptr cs:[rax + rax]


0x19f14:	nop	dword ptr [rax]


0x19f8d:	nop	dword ptr [rax]


0x19fce:	nop	


0x19feb:	nop	dword ptr [rax + rax]


0x1a03e:	nop	


0x1a04d:	nop	dword ptr [rax]


0x1a06b:	nop	dword ptr [rax + rax]


0x1a07a:	nop	word ptr [rax + rax]


0x1a0a8:	nop	dword ptr [rax + rax]


0x1a10c:	nop	dword ptr [rax]


0x1a179:	nop	dword ptr [rax]


0x1a1b1:	nop	dword ptr [rax]


0x1a547:	nop	word ptr [rax + rax]


0x1a5de:	nop	


0x1a6fe:	nop	


0x1a882:	nop	word ptr [rax + rax]


0x1a8b1:	nop	dword ptr [rax]


0x1a9a2:	nop	word ptr [rax + rax]


0x1aaa1:	nop	dword ptr [rax]


0x1aaca:	nop	word ptr [rax + rax]


0x1aaec:	nop	dword ptr [rax]


0x1ab6d:	nop	dword ptr [rax]


0x1ab7e:	nop	


0x1abf8:	nop	dword ptr [rax + rax]


0x1ac53:	nop	dword ptr [rax + rax]


0x1ac78:	nop	dword ptr [rax + rax]


0x1ac9c:	nop	dword ptr [rax]


0x1ad31:	nop	dword ptr [rax]


0x1adab:	nop	dword ptr [rax + rax]


0x1adc1:	nop	dword ptr [rax]


0x1add2:	nop	word ptr [rax + rax]


0x1ae19:	nop	dword ptr [rax]


0x1af8c:	nop	dword ptr [rax]


0x1afa7:	nop	word ptr [rax + rax]


0x1b0c2:	nop	word ptr [rax + rax]


0x1b0ff:	nop	


0x1b117:	nop	word ptr [rax + rax]


0x1b1a6:	nop	word ptr cs:[rax + rax]


0x1b222:	nop	word ptr [rax + rax]


0x1b255:	nop	dword ptr [rax]


0x1b356:	nop	word ptr cs:[rax + rax]


0x1b387:	nop	word ptr [rax + rax]


0x1b3ee:	nop	


0x1b406:	nop	word ptr cs:[rax + rax]


0x1b49a:	nop	word ptr [rax + rax]


0x1b4bb:	nop	dword ptr [rax + rax]


0x1b4ce:	nop	


0x1b4f2:	nop	word ptr [rax + rax]


0x1b516:	nop	word ptr cs:[rax + rax]


0x1b542:	nop	word ptr [rax + rax]


0x1b56f:	nop	


0x1b57e:	nop	


0x1b59b:	nop	dword ptr [rax + rax]


0x1b5ae:	nop	


0x1b5cb:	nop	dword ptr [rax + rax]


0x1b5fe:	nop	


0x1b61b:	nop	dword ptr [rax + rax]


0x1b63b:	nop	dword ptr [rax + rax]


0x1b88f:	nop	


0x1b9f4:	nop	dword ptr [rax]


0x1ba29:	nop	dword ptr [rax]


0x1ba43:	nop	dword ptr [rax + rax]


0x1be16:	nop	word ptr cs:[rax + rax]


0x1bed7:	nop	word ptr [rax + rax]


0x1bf0c:	nop	dword ptr [rax]


0x1bf75:	nop	dword ptr [rax]


0x1bfe6:	nop	word ptr cs:[rax + rax]


0x1c008:	nop	dword ptr [rax + rax]


0x1c03a:	nop	word ptr [rax + rax]


0x1c0cd:	nop	dword ptr [rax]


0x1c11c:	nop	dword ptr [rax]


0x1c414:	nop	dword ptr [rax]


0x1cb93:	nop	dword ptr [rax + rax]


0x1cd07:	nop	word ptr [rax + rax]


0x1d03c:	nop	dword ptr [rax]


0x1d062:	nop	word ptr [rax + rax]


0x1d08f:	nop	


0x1d13b:	nop	dword ptr [rax + rax]


0x1d23a:	nop	word ptr [rax + rax]


0x1d56e:	nop	


0x1d585:	nop	dword ptr [rax]


0x1d64f:	nop	


0x1d893:	nop	dword ptr [rax + rax]


0x1da14:	nop	dword ptr [rax]


0x1dbca:	nop	word ptr [rax + rax]


0x1dc61:	nop	dword ptr [rax]


0x1dd18:	nop	dword ptr [rax + rax]


0x1dd7f:	nop	


0x1de5a:	nop	word ptr [rax + rax]


0x1de8d:	nop	dword ptr [rax]


0x1df08:	nop	dword ptr [rax + rax]


0x1df65:	nop	dword ptr [rax]


0x1e1dc:	nop	dword ptr [rax]


0x1e205:	nop	dword ptr [rax]


0x1e226:	nop	word ptr cs:[rax + rax]


0x1e3b2:	nop	word ptr [rax + rax]


0x1e5e4:	nop	dword ptr [rax]


0x1e6dc:	nop	dword ptr [rax]


0x1e6f9:	nop	dword ptr [rax]


0x1e719:	nop	dword ptr [rax]


0x1e75a:	nop	word ptr [rax + rax]


0x1e768:	nop	dword ptr [rax + rax]


0x1e7d1:	nop	dword ptr [rax]


0x1e7f6:	nop	word ptr cs:[rax + rax]


0x1e80c:	nop	dword ptr [rax]


0x1e81c:	nop	dword ptr [rax]


0x1e891:	nop	dword ptr [rax]


0x1e9cc:	nop	dword ptr [rax]


0x1ea1c:	nop	dword ptr [rax]


0x1ea29:	nop	dword ptr [rax]


0x1eb07:	nop	word ptr [rax + rax]


0x1eb21:	nop	dword ptr [rax]


0x1ebbb:	nop	dword ptr [rax + rax]


0x1ebc5:	nop	dword ptr [rax]


0x1eca4:	nop	dword ptr [rax]


0x1ecc1:	nop	dword ptr [rax]


0x1ed71:	nop	dword ptr [rax]


0x1edb9:	nop	dword ptr [rax]


0x1edf2:	nop	word ptr [rax + rax]


0x1ee4c:	nop	dword ptr [rax]


0x1eec3:	nop	dword ptr [rax + rax]


0x1ef2f:	nop	


0x1ef89:	nop	dword ptr [rax]


0x1efaf:	nop	


0x1eff9:	nop	dword ptr [rax]


0x1f00f:	nop	


0x1f0b9:	nop	dword ptr [rax]


0x1f0e2:	nop	word ptr [rax + rax]


0x1f104:	nop	dword ptr [rax]


0x1f178:	nop	dword ptr [rax + rax]


0x1f19b:	nop	dword ptr [rax + rax]


0x1f26b:	nop	dword ptr [rax + rax]


0x1f2e8:	nop	dword ptr [rax + rax]


0x1f2fd:	nop	dword ptr [rax]


0x1f354:	nop	dword ptr [rax]


0x1f371:	nop	dword ptr [rax]


0x1f382:	nop	word ptr [rax + rax]


0x1f3dc:	nop	dword ptr [rax]


0x1f3f5:	nop	dword ptr [rax]


0x1f407:	nop	word ptr [rax + rax]


0x1f484:	nop	dword ptr [rax]


0x1f4ea:	nop	word ptr [rax + rax]


0x1f5a6:	nop	word ptr cs:[rax + rax]


0x1f5e6:	nop	word ptr cs:[rax + rax]


0x1f643:	nop	dword ptr [rax + rax]


0x1f6b1:	nop	dword ptr [rax]


0x1f6dc:	nop	dword ptr [rax]


0x1f7cb:	nop	dword ptr [rax + rax]


0x1f7f6:	nop	word ptr cs:[rax + rax]


0x1f82f:	nop	


0x1f879:	nop	dword ptr [rax]


0x1f89b:	nop	dword ptr [rax + rax]


0x1f941:	nop	dword ptr [rax]


