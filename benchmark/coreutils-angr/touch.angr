0xf710:	sub	rsp, 8
0xf714:	add	rsp, 8
0xf718:	ret	


0xf700:	mov	rdx, qword ptr [rip + 0x205901]
0xf707:	xor	esi, esi
0xf709:	jmp	0x2ac0


0xf6f0:	ret	


0xf680:	push	r15
0xf682:	push	r14
0xf684:	mov	r15, rdx
0xf687:	push	r13
0xf689:	push	r12
0xf68b:	lea	r12, [rip + 0x204a5e]
0xf692:	push	rbp
0xf693:	lea	rbp, [rip + 0x204a5e]
0xf69a:	push	rbx
0xf69b:	mov	r13d, edi
0xf69e:	mov	r14, rsi
0xf6a1:	sub	rbp, r12
0xf6a4:	sub	rsp, 8
0xf6a8:	sar	rbp, 3
0xf6ac:	call	0x26b0


0xe990:	push	r15
0xe992:	push	r14
0xe994:	lea	rcx, [rsi + 0x20]
0xe998:	push	r13
0xe99a:	push	r12
0xe99c:	lea	rax, [rdx + 0x10]
0xe9a0:	push	rbp
0xe9a1:	push	rbx
0xe9a2:	mov	r14, rsi
0xe9a5:	mov	r15, rdx
0xe9a8:	xor	ebx, ebx
0xe9aa:	mov	r9d, 7
0xe9b0:	sub	rsp, 0x58
0xe9b4:	mov	r10d, 7
0xe9ba:	mov	qword ptr [rsi], 0
0xe9c1:	mov	qword ptr [rsi + 8], rcx
0xe9c5:	mov	qword ptr [rsp + 0x28], rcx
0xe9ca:	mov	r8, -1
0xe9d1:	mov	qword ptr [rdx], 0
0xe9d8:	mov	qword ptr [rsp + 8], rax
0xe9dd:	mov	qword ptr [rdx + 8], rax
0xe9e1:	mov	qword ptr [rsp + 0x18], 0
0xe9ea:	mov	qword ptr [rsp + 0x10], 0
0xe9f3:	mov	qword ptr [rsp + 0x20], 0
0xe9fc:	jmp	0xea0b


0xe790:	cmp	qword ptr [rsi], 0
0xe794:	mov	rax, qword ptr [rsi + 8]
0xe798:	je	0xe7fd


0xd670:	push	rbp
0xd671:	mov	rbp, rsp
0xd674:	push	r15
0xd676:	push	r14
0xd678:	push	r13
0xd67a:	push	r12
0xd67c:	lea	r14, [rbp - 0x3b0]
0xd683:	push	rbx
0xd684:	mov	rbx, rdx
0xd687:	mov	r12, rcx
0xd68a:	mov	rdx, r14
0xd68d:	sub	rsp, 0x408
0xd694:	mov	qword ptr [rbp - 0x418], rsi
0xd69b:	lea	rsi, [rbp - 0x2c0]
0xd6a2:	mov	qword ptr [rbp - 0x3e8], rdi
0xd6a9:	mov	rdi, rbx
0xd6ac:	mov	qword ptr [rbp - 0x410], r14
0xd6b3:	mov	rax, qword ptr fs:[0x28]
0xd6bc:	mov	qword ptr [rbp - 0x38], rax
0xd6c0:	xor	eax, eax
0xd6c2:	mov	qword ptr [rbp - 0x408], rsi
0xd6c9:	call	0xe990


0xd660:	or	dword ptr [rdi], 0x20
0xd663:	ret	


0xd600:	mov	rax, qword ptr [rdi + 8]
0xd604:	cmp	qword ptr [rdi + 0x10], rax
0xd608:	je	0xd610


0xd5c0:	test	rdi, rdi
0xd5c3:	push	rbx
0xd5c4:	mov	rbx, rdi
0xd5c7:	je	0xd5da


0xd540:	push	r12
0xd542:	push	rbp
0xd543:	push	rbx
0xd544:	mov	rbx, rdi
0xd547:	call	0x29a0


0xd4f0:	sub	rsp, 0x18
0xd4f4:	mov	rax, qword ptr fs:[0x28]
0xd4fd:	mov	qword ptr [rsp + 8], rax
0xd502:	xor	eax, eax
0xd504:	mov	byte ptr [rsp + 7], 0
0xd509:	push	r9
0xd50b:	xor	r9d, r9d
0xd50e:	push	r8
0xd510:	xor	r8d, r8d
0xd513:	lea	rax, [rsp + 0x17]
0xd518:	push	rax
0xd519:	push	-1
0xd51b:	call	0xba30


0xba30:	push	r15
0xba32:	push	r14
0xba34:	mov	r11, rdx
0xba37:	push	r13
0xba39:	push	r12
0xba3b:	mov	r13, rcx
0xba3e:	push	rbp
0xba3f:	push	rbx
0xba40:	mov	rbp, rdi
0xba43:	sub	rsp, 0x4c8
0xba4a:	mov	rdi, qword ptr [rcx + 0x30]
0xba4e:	mov	r15d, dword ptr [rcx + 8]
0xba52:	mov	rax, qword ptr [rsp + 0x508]
0xba5a:	mov	qword ptr [rsp + 8], rsi
0xba5f:	mov	dword ptr [rsp + 0x2c], r9d
0xba64:	movsxd	r10, dword ptr [rsp + 0x500]
0xba6c:	mov	byte ptr [rsp + 0x2b], r8b
0xba71:	mov	qword ptr [rsp + 0x18], rax
0xba76:	mov	rax, qword ptr [rsp + 0x510]
0xba7e:	mov	qword ptr [rsp + 0x10], rax
0xba83:	mov	rax, qword ptr fs:[0x28]
0xba8c:	mov	qword ptr [rsp + 0x4b8], rax
0xba94:	xor	eax, eax
0xba96:	lea	rax, [rip + 0x48d9]
0xba9d:	test	rdi, rdi
0xbaa0:	cmovne	rax, rdi
0xbaa4:	cmp	r15d, 0xc
0xbaa8:	mov	qword ptr [rsp + 0x20], rax
0xbaad:	jle	0xbba0


0xb9e0:	test	rdx, rdx
0xb9e3:	push	r12
0xb9e5:	push	rbp
0xb9e6:	mov	rbp, rdi
0xb9e9:	push	rbx
0xb9ea:	je	0xba19


0xb990:	test	rdx, rdx
0xb993:	push	r12
0xb995:	push	rbp
0xb996:	mov	rbp, rdi
0xb999:	push	rbx
0xb99a:	je	0xb9c9


0xb950:	sub	rsp, 8
0xb954:	mov	edi, 0xe
0xb959:	call	0x29f0


0xb8f0:	sub	rsp, 8
0xb8f4:	xor	esi, esi
0xb8f6:	call	0x2a30


0xb870:	push	r12
0xb872:	push	rbp
0xb873:	mov	rbp, rdi
0xb876:	push	rbx
0xb877:	call	0x2790


0xb770:	push	r13
0xb772:	push	r12
0xb774:	mov	rax, rsi
0xb777:	push	rbp
0xb778:	push	rbx
0xb779:	mov	r13, rdi
0xb77c:	sub	rsp, 0x7f8
0xb783:	lea	r12, [rsp + 0x10]
0xb788:	lea	rsi, [rsp + 8]
0xb78d:	mov	qword ptr [rsp + 8], 0x7d0
0xb796:	mov	rcx, qword ptr fs:[0x28]
0xb79f:	mov	qword ptr [rsp + 0x7e8], rcx
0xb7a7:	xor	ecx, ecx
0xb7a9:	mov	rdi, r12
0xb7ac:	mov	rcx, rdx
0xb7af:	mov	rdx, rax
0xb7b2:	call	0xd670


0xb620:	push	r12
0xb622:	push	rbp
0xb623:	push	rbx
0xb624:	mov	rbx, rsi
0xb627:	sub	rsp, 0x50
0xb62b:	mov	rax, qword ptr fs:[0x28]
0xb634:	mov	qword ptr [rsp + 0x48], rax
0xb639:	xor	eax, eax
0xb63b:	test	rdi, rdi
0xb63e:	je	0xb740


0xb570:	push	r13
0xb572:	push	r12
0xb574:	push	rbp
0xb575:	push	rbx
0xb576:	mov	rbp, rsi
0xb579:	sub	rsp, 8
0xb57d:	test	rdi, rdi
0xb580:	je	0xb5f0


0xb560:	cmp	rdi, 1
0xb564:	je	0xb56b


0xb480:	push	r12
0xb482:	push	rbp
0xb483:	mov	rbp, rdi
0xb486:	push	rbx
0xb487:	lea	rdi, [rip + 0x5046]
0xb48e:	sub	rsp, 0x10
0xb492:	call	0x26f0


0xb340:	push	r15
0xb342:	push	r14
0xb344:	mov	eax, 1
0xb349:	push	r13
0xb34b:	push	r12
0xb34d:	push	rbp
0xb34e:	push	rbx
0xb34f:	sub	rsp, 8
0xb353:	mov	rbp, qword ptr [rsi + 0x30]
0xb357:	test	rbp, rbp
0xb35a:	je	0xb3f0


0xb2b0:	test	rdi, rdi
0xb2b3:	push	r12
0xb2b5:	push	rbp
0xb2b6:	push	rbx
0xb2b7:	je	0xb318


0xb250:	push	r13
0xb252:	push	r12
0xb254:	push	rbp
0xb255:	push	rbx
0xb256:	mov	rbp, rdi
0xb259:	sub	rsp, 8
0xb25d:	call	0x2750


0xb220:	test	rdi, rdi
0xb223:	je	0xb248


0xb1f0:	test	rdi, rdi
0xb1f3:	je	0xb210


0xb160:	push	r13
0xb162:	push	r12
0xb164:	mov	r13, rsi
0xb167:	push	rbp
0xb168:	push	rbx
0xb169:	mov	rbx, rdi
0xb16c:	mov	r12, rdx
0xb16f:	sub	rsp, 0x18
0xb173:	mov	rax, qword ptr fs:[0x28]
0xb17c:	mov	qword ptr [rsp + 8], rax
0xb181:	xor	eax, eax
0xb183:	lea	rax, [rsp + 4]
0xb188:	test	rdi, rdi
0xb18b:	cmove	rbx, rax
0xb18f:	mov	rdi, rbx
0xb192:	call	0x2850


0xb120:	lea	rsi, [rip + 0x6c68]
0xb127:	sub	rsp, 8
0xb12b:	mov	edx, 5
0xb130:	xor	edi, edi
0xb132:	call	0x27f0


0xb100:	push	rbx
0xb101:	mov	rbx, rdi
0xb104:	call	0x2810


0xb0d0:	push	rbp
0xb0d1:	push	rbx
0xb0d2:	mov	rbp, rdi
0xb0d5:	mov	rdi, rsi
0xb0d8:	mov	rbx, rsi
0xb0db:	sub	rsp, 8
0xb0df:	call	0xaed0


0xb0a0:	mov	rax, rdi
0xb0a3:	sub	rsp, 8
0xb0a7:	mul	rsi
0xb0aa:	seto	dl
0xb0ad:	test	rax, rax
0xb0b0:	js	0xb0c9


0xb080:	push	rbx
0xb081:	mov	rbx, rdi
0xb084:	call	0xaed0


0xb030:	test	rdi, rdi
0xb033:	mov	rax, qword ptr [rsi]
0xb036:	je	0xb060


0xafa0:	test	rdi, rdi
0xafa3:	mov	r9, rdx
0xafa6:	mov	rcx, qword ptr [rsi]
0xafa9:	je	0xafe0


0xaf70:	mov	rax, rsi
0xaf73:	mul	rdx
0xaf76:	mov	rsi, rax
0xaf79:	seto	al
0xaf7c:	test	rsi, rsi
0xaf7f:	js	0xaf8b


0xaf30:	test	rsi, rsi
0xaf33:	push	rbx
0xaf34:	mov	rbx, rsi
0xaf37:	jne	0xaf3e


0xaf20:	jmp	0xaed0


0xaef0:	mov	rax, rdi
0xaef3:	mul	rsi
0xaef6:	mov	rdi, rax
0xaef9:	seto	al
0xaefc:	test	rdi, rdi
0xaeff:	js	0xaf0b


0xaed0:	push	rbx
0xaed1:	mov	rbx, rdi
0xaed4:	call	0x29d0


0xae50:	push	rbx
0xae51:	lea	rsi, [rip + 0x6c2a]
0xae58:	mov	edx, 5
0xae5d:	xor	edi, edi
0xae5f:	call	0x27f0


0xad70:	push	rbp
0xad71:	push	rbx
0xad72:	mov	r10d, 0x20
0xad78:	xor	r11d, r11d
0xad7b:	sub	rsp, 0xb8
0xad82:	mov	rax, qword ptr fs:[0x28]
0xad8b:	mov	qword ptr [rsp + 0x78], rax
0xad90:	xor	eax, eax
0xad92:	lea	rax, [rsp + 0xd0]
0xad9a:	mov	qword ptr [rsp + 0xa0], r8
0xada2:	lea	rbx, [rsp + 0xd0]
0xadaa:	lea	r8, [rsp + 0x20]
0xadaf:	mov	qword ptr [rsp + 0xa8], r9
0xadb7:	mov	dword ptr [rsp + 8], 0x20
0xadbf:	mov	qword ptr [rsp + 0x10], rax
0xadc4:	lea	rax, [rsp + 0x80]
0xadcc:	xor	r9d, r9d
0xadcf:	mov	qword ptr [rsp + 0x18], rax
0xadd4:	mov	rbp, rax
0xadd7:	nop	word ptr [rax + rax]
0xade0:	cmp	r10d, 0x2f
0xade4:	ja	0xae3c


0xacf0:	sub	rsp, 0x68
0xacf4:	mov	r10, r8
0xacf7:	xor	r9d, r9d
0xacfa:	mov	rax, qword ptr fs:[0x28]
0xad03:	mov	qword ptr [rsp + 0x58], rax
0xad08:	xor	eax, eax
0xad0a:	mov	r8, rsp
0xad0d:	nop	dword ptr [rax]
0xad10:	mov	eax, dword ptr [r10]
0xad13:	cmp	eax, 0x2f
0xad16:	ja	0xad5a


0xacd0:	xor	r9d, r9d
0xacd3:	cmp	qword ptr [r8], 0
0xacd7:	je	0xaceb


0xa8b0:	push	r15
0xa8b2:	push	r14
0xa8b4:	push	r13
0xa8b6:	push	r12
0xa8b8:	mov	r12, r9
0xa8bb:	push	rbp
0xa8bc:	push	rbx
0xa8bd:	mov	rbp, rdi
0xa8c0:	mov	rbx, r8
0xa8c3:	sub	rsp, 0x28
0xa8c7:	test	rsi, rsi
0xa8ca:	je	0xa9e8


0xa890:	lea	rcx, [rip + 0x20a7a9]
0xa897:	mov	rsi, rdi
0xa89a:	mov	rdx, -1
0xa8a1:	xor	edi, edi
0xa8a3:	jmp	0x9f50


0xa870:	lea	rcx, [rip + 0x20a7c9]
0xa877:	mov	rdx, -1
0xa87e:	jmp	0x9f50


0xa850:	lea	rcx, [rip + 0x20a7e9]
0xa857:	mov	rdx, rsi
0xa85a:	mov	rsi, rdi
0xa85d:	xor	edi, edi
0xa85f:	jmp	0x9f50


0xa840:	lea	rcx, [rip + 0x20a7f9]
0xa847:	jmp	0x9f50


0xa820:	mov	r8, rcx
0xa823:	mov	rcx, rdx
0xa826:	mov	rdx, rsi
0xa829:	mov	rsi, rdi
0xa82c:	xor	edi, edi
0xa82e:	jmp	0xa750


0xa800:	mov	rcx, rdx
0xa803:	mov	r8, -1
0xa80a:	mov	rdx, rsi
0xa80d:	mov	rsi, rdi
0xa810:	xor	edi, edi
0xa812:	jmp	0xa750


0xa7f0:	mov	r8, -1
0xa7f7:	jmp	0xa750


0xa750:	sub	rsp, 0x48
0xa754:	mov	r9, rcx
0xa757:	mov	rcx, qword ptr [rip + 0x20ab32]
0xa75e:	movdqa	xmm0, xmmword ptr [rip + 0x20aafa]
0xa766:	mov	rax, qword ptr fs:[0x28]
0xa76f:	mov	qword ptr [rsp + 0x38], rax
0xa774:	xor	eax, eax
0xa776:	movaps	xmmword ptr [rsp], xmm0
0xa77a:	test	rsi, rsi
0xa77d:	mov	qword ptr [rsp + 0x30], rcx
0xa782:	mov	dword ptr [rsp], 0xa
0xa789:	movdqa	xmm0, xmmword ptr [rip + 0x20aadf]
0xa791:	movaps	xmmword ptr [rsp + 0x10], xmm0
0xa796:	movdqa	xmm0, xmmword ptr [rip + 0x20aae2]
0xa79e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0xa7a3:	je	0xa7d7


0xa6c0:	sub	rsp, 0x48
0xa6c4:	mov	rax, rdx
0xa6c7:	mov	rdx, qword ptr fs:[0x28]
0xa6d0:	mov	qword ptr [rsp + 0x38], rdx
0xa6d5:	xor	edx, edx
0xa6d7:	cmp	esi, 0xa
0xa6da:	je	0xa744


0xa6b0:	mov	edx, 0x3a
0xa6b5:	jmp	0xa5e0


0xa690:	mov	edx, 0x3a
0xa695:	mov	rsi, -1
0xa69c:	jmp	0xa5e0


0xa680:	movsx	edx, sil
0xa684:	mov	rsi, -1
0xa68b:	jmp	0xa5e0


0xa5e0:	sub	rsp, 0x48
0xa5e4:	mov	ecx, edx
0xa5e6:	mov	rax, qword ptr fs:[0x28]
0xa5ef:	mov	qword ptr [rsp + 0x38], rax
0xa5f4:	xor	eax, eax
0xa5f6:	mov	rax, qword ptr [rip + 0x20ac93]
0xa5fd:	mov	r8, rsp
0xa600:	and	ecx, 0x1f
0xa603:	movdqa	xmm0, xmmword ptr [rip + 0x20ac55]
0xa60b:	mov	qword ptr [rsp + 0x30], rax
0xa610:	mov	eax, edx
0xa612:	movaps	xmmword ptr [rsp], xmm0
0xa616:	shr	al, 5
0xa619:	movzx	eax, al
0xa61c:	lea	r9, [r8 + rax*4 + 8]
0xa621:	movdqa	xmm0, xmmword ptr [rip + 0x20ac47]
0xa629:	movaps	xmmword ptr [rsp + 0x10], xmm0
0xa62e:	movdqa	xmm0, xmmword ptr [rip + 0x20ac4a]
0xa636:	movaps	xmmword ptr [rsp + 0x20], xmm0
0xa63b:	mov	edx, dword ptr [r9]
0xa63e:	mov	eax, edx
0xa640:	shr	eax, cl
0xa642:	not	eax
0xa644:	and	eax, 1
0xa647:	shl	eax, cl
0xa649:	mov	rcx, r8
0xa64c:	xor	eax, edx
0xa64e:	mov	rdx, rsi
0xa651:	mov	rsi, rdi
0xa654:	mov	dword ptr [r9], eax
0xa657:	xor	edi, edi
0xa659:	call	0x9f50


0xa5d0:	mov	rcx, rdx
0xa5d3:	mov	rdx, rsi
0xa5d6:	mov	esi, edi
0xa5d8:	xor	edi, edi
0xa5da:	jmp	0xa530


0xa5c0:	mov	rdx, rsi
0xa5c3:	mov	esi, edi
0xa5c5:	xor	edi, edi
0xa5c7:	jmp	0xa4a0


0xa530:	sub	rsp, 0x48
0xa534:	mov	rax, rdx
0xa537:	mov	rdx, rcx
0xa53a:	mov	rcx, qword ptr fs:[0x28]
0xa543:	mov	qword ptr [rsp + 0x38], rcx
0xa548:	xor	ecx, ecx
0xa54a:	cmp	esi, 0xa
0xa54d:	je	0xa5b0


0xa4a0:	sub	rsp, 0x48
0xa4a4:	mov	rax, rdx
0xa4a7:	mov	rdx, qword ptr fs:[0x28]
0xa4b0:	mov	qword ptr [rsp + 0x38], rdx
0xa4b5:	xor	edx, edx
0xa4b7:	cmp	esi, 0xa
0xa4ba:	je	0xa524


0xa480:	lea	rcx, [rip + 0x20add9]
0xa487:	mov	rdx, rsi
0xa48a:	mov	rsi, rdi
0xa48d:	xor	edi, edi
0xa48f:	jmp	0x9f50


0xa460:	lea	rcx, [rip + 0x20adf9]
0xa467:	mov	rsi, rdi
0xa46a:	mov	rdx, -1
0xa471:	xor	edi, edi
0xa473:	jmp	0x9f50


0xa450:	lea	rcx, [rip + 0x20ae09]
0xa457:	jmp	0x9f50


0xa430:	lea	rcx, [rip + 0x20ae29]
0xa437:	mov	rdx, -1
0xa43e:	jmp	0x9f50


0xa390:	mov	eax, dword ptr [rip + 0x20ace2]
0xa396:	push	r12
0xa398:	mov	r12, qword ptr [rip + 0x20ace1]
0xa39f:	push	rbp
0xa3a0:	push	rbx
0xa3a1:	cmp	eax, 1
0xa3a4:	jle	0xa3d1


0xa380:	mov	rcx, rdx
0xa383:	xor	edx, edx
0xa385:	jmp	0xa290


0xa290:	push	r15
0xa292:	push	r14
0xa294:	lea	rax, [rip + 0x20afc5]
0xa29b:	push	r13
0xa29d:	push	r12
0xa29f:	mov	r12, rdx
0xa2a2:	push	rbp
0xa2a3:	push	rbx
0xa2a4:	mov	rbx, rcx
0xa2a7:	mov	r14, rdi
0xa2aa:	mov	r15, rsi
0xa2ad:	sub	rsp, 0x38
0xa2b1:	test	rcx, rcx
0xa2b4:	cmove	rbx, rax
0xa2b8:	xor	ebp, ebp
0xa2ba:	call	0x2750


0xa210:	push	r15
0xa212:	push	r14
0xa214:	lea	rax, [rip + 0x20b045]
0xa21b:	push	r13
0xa21d:	push	r12
0xa21f:	mov	r13, rdi
0xa222:	push	rbp
0xa223:	push	rbx
0xa224:	mov	rbx, r8
0xa227:	mov	r14, rsi
0xa22a:	mov	r15, rdx
0xa22d:	sub	rsp, 0x18
0xa231:	test	r8, r8
0xa234:	cmove	rbx, rax
0xa238:	mov	qword ptr [rsp + 8], rcx
0xa23d:	call	0x2750


0xa1e0:	lea	rax, [rip + 0x20b079]
0xa1e7:	test	rdi, rdi
0xa1ea:	cmove	rdi, rax
0xa1ee:	test	rsi, rsi
0xa1f1:	mov	dword ptr [rdi], 0xa
0xa1f7:	je	0xa207


0xa1c0:	lea	rax, [rip + 0x20b099]
0xa1c7:	test	rdi, rdi
0xa1ca:	cmove	rdi, rax
0xa1ce:	mov	eax, dword ptr [rdi + 4]
0xa1d1:	mov	dword ptr [rdi + 4], esi
0xa1d4:	ret	


0xa180:	lea	rax, [rip + 0x20b0d9]
0xa187:	test	rdi, rdi
0xa18a:	mov	ecx, esi
0xa18c:	cmove	rdi, rax
0xa190:	mov	eax, esi
0xa192:	and	ecx, 0x1f
0xa195:	shr	al, 5
0xa198:	movzx	eax, al
0xa19b:	lea	rdi, [rdi + rax*4 + 8]
0xa1a0:	mov	esi, dword ptr [rdi]
0xa1a2:	mov	eax, esi
0xa1a4:	shr	eax, cl
0xa1a6:	xor	edx, eax
0xa1a8:	and	eax, 1
0xa1ab:	and	edx, 1
0xa1ae:	shl	edx, cl
0xa1b0:	xor	edx, esi
0xa1b2:	mov	dword ptr [rdi], edx
0xa1b4:	ret	


0xa160:	lea	rax, [rip + 0x20b0f9]
0xa167:	test	rdi, rdi
0xa16a:	cmove	rdi, rax
0xa16e:	mov	dword ptr [rdi], esi
0xa170:	ret	


0xa140:	lea	rax, [rip + 0x20b119]
0xa147:	test	rdi, rdi
0xa14a:	cmove	rdi, rax
0xa14e:	mov	eax, dword ptr [rdi]
0xa150:	ret	


0xa100:	push	r12
0xa102:	push	rbp
0xa103:	push	rbx
0xa104:	mov	rbx, rdi
0xa107:	call	0x2750


0x9f50:	push	r15
0x9f52:	push	r14
0x9f54:	movsxd	r15, edi
0x9f57:	push	r13
0x9f59:	push	r12
0x9f5b:	mov	r14, rdx
0x9f5e:	push	rbp
0x9f5f:	push	rbx
0x9f60:	mov	rbp, rcx
0x9f63:	sub	rsp, 0x28
0x9f67:	mov	qword ptr [rsp + 8], rsi
0x9f6c:	call	0x2750


0x8d10:	push	r15
0x8d12:	push	r14
0x8d14:	mov	r15d, r8d
0x8d17:	push	r13
0x8d19:	push	r12
0x8d1b:	mov	r14, rdi
0x8d1e:	push	rbp
0x8d1f:	push	rbx
0x8d20:	mov	ebx, r9d
0x8d23:	mov	r13, rsi
0x8d26:	mov	rbp, rcx
0x8d29:	and	ebx, 2
0x8d2c:	sub	rsp, 0xb8
0x8d33:	mov	rax, qword ptr [rsp + 0xf0]
0x8d3b:	mov	qword ptr [rsp + 0x10], rdx
0x8d40:	mov	dword ptr [rsp + 8], r8d
0x8d45:	mov	dword ptr [rsp + 0x78], r9d
0x8d4a:	mov	qword ptr [rsp + 0x20], rax
0x8d4f:	mov	rax, qword ptr [rsp + 0xf8]
0x8d57:	mov	qword ptr [rsp + 0x68], rax
0x8d5c:	mov	rax, qword ptr [rsp + 0x100]
0x8d64:	mov	qword ptr [rsp + 0x60], rax
0x8d69:	mov	rax, qword ptr fs:[0x28]
0x8d72:	mov	qword ptr [rsp + 0xa8], rax
0x8d7a:	xor	eax, eax
0x8d7c:	call	0x2800


0x8c20:	push	rbp
0x8c21:	push	rbx
0x8c22:	mov	rbp, rdi
0x8c25:	mov	ebx, esi
0x8c27:	sub	rsp, 8
0x8c2b:	call	0xb950


0x8b80:	test	rdi, rdi
0x8b83:	push	rbx
0x8b84:	je	0x8bfd


0x8af0:	push	rbx
0x8af1:	lea	rdi, [rip + 0x89fe]
0x8af8:	mov	ebx, 0x31069
0x8afd:	sub	rsp, 0x10
0x8b01:	mov	rax, qword ptr fs:[0x28]
0x8b0a:	mov	qword ptr [rsp + 8], rax
0x8b0f:	xor	eax, eax
0x8b11:	call	0x26f0


0x8800:	push	r15
0x8802:	push	r14
0x8804:	push	r13
0x8806:	push	r12
0x8808:	mov	r12, rdi
0x880b:	push	rbp
0x880c:	push	rbx
0x880d:	mov	ebp, edx
0x880f:	mov	rdi, rsi
0x8812:	mov	rbx, rsi
0x8815:	sub	rsp, 0xd8
0x881c:	mov	rax, qword ptr fs:[0x28]
0x8825:	mov	qword ptr [rsp + 0xc8], rax
0x882d:	xor	eax, eax
0x882f:	call	0x2810


0x8740:	push	rbp
0x8741:	push	rbx
0x8742:	mov	rbx, rdi
0x8745:	sub	rsp, 0x18
0x8749:	mov	rax, qword ptr fs:[0x28]
0x8752:	mov	qword ptr [rsp + 8], rax
0x8757:	xor	eax, eax
0x8759:	cmp	rdx, 1
0x875d:	je	0x87b8


0x86d0:	push	r14
0x86d2:	push	r13
0x86d4:	mov	r14, rdx
0x86d7:	push	r12
0x86d9:	push	rbp
0x86da:	mov	r12, rdi
0x86dd:	push	rbx
0x86de:	lea	rdi, [rip + 0x7def]
0x86e5:	mov	r13, rsi
0x86e8:	sub	rsp, 0x10
0x86ec:	call	0x26f0


0x6960:	push	r15
0x6962:	push	r14
0x6964:	mov	r14, rdx
0x6967:	push	r13
0x6969:	push	r12
0x696b:	push	rbp
0x696c:	push	rbx
0x696d:	mov	rbp, rsi
0x6970:	sub	rsp, 0x458
0x6977:	mov	qword ptr [rsp + 0x28], rdi
0x697c:	mov	rdi, rsi
0x697f:	mov	dword ptr [rsp + 0x20], ecx
0x6983:	mov	rax, qword ptr fs:[0x28]
0x698c:	mov	qword ptr [rsp + 0x448], rax
0x6994:	xor	eax, eax
0x6996:	mov	qword ptr [rsp], r8
0x699a:	mov	qword ptr [rsp + 0x10], r9
0x699f:	call	0x2810


0x4d50:	push	r15
0x4d52:	push	r14
0x4d54:	xor	edx, edx
0x4d56:	push	r13
0x4d58:	push	r12
0x4d5a:	mov	r11, rdi
0x4d5d:	push	rbp
0x4d5e:	push	rbx
0x4d5f:	mov	r14d, 0x26
0x4d65:	xor	ebx, ebx
0x4d67:	mov	r9d, 0xfffffffe
0x4d6d:	sub	rsp, 0x5c8
0x4d74:	lea	r15, [rsp + 0x110]
0x4d7c:	lea	r13, [rsp + 0x140]
0x4d84:	mov	word ptr [rsp + 0x110], dx
0x4d8c:	mov	rax, qword ptr fs:[0x28]
0x4d95:	mov	qword ptr [rsp + 0x5b8], rax
0x4d9d:	xor	eax, eax
0x4d9f:	mov	r12, r15
0x4da2:	mov	dword ptr [rsp + 0x34], 0
0x4daa:	movsx	r8d, r14b
0x4dae:	cmp	r8d, -0x5d
0x4db2:	je	0x4df0


0x4970:	push	r13
0x4972:	push	r12
0x4974:	mov	edx, 5
0x4979:	push	rbp
0x497a:	push	rbx
0x497b:	mov	rbx, rsi
0x497e:	lea	rsi, [rip + 0xb75a]
0x4985:	mov	rbp, rdi
0x4988:	xor	edi, edi
0x498a:	sub	rsp, 0x78
0x498e:	mov	rax, qword ptr fs:[0x28]
0x4997:	mov	qword ptr [rsp + 0x68], rax
0x499c:	xor	eax, eax
0x499e:	call	0x27f0


0x4870:	push	rbp
0x4871:	push	rbx
0x4872:	mov	rbp, rsi
0x4875:	mov	rbx, rdi
0x4878:	sub	rsp, 8
0x487c:	cmp	byte ptr [rdi + 0xe0], 0
0x4883:	je	0x48d8


0x47b0:	push	r12
0x47b2:	push	rbp
0x47b3:	mov	rcx, rdi
0x47b6:	push	rbx
0x47b7:	mov	rbx, rdx
0x47ba:	lea	rdx, [rip + 0xb973]
0x47c1:	mov	r12, rsi
0x47c4:	xor	r9d, r9d
0x47c7:	xor	r8d, r8d
0x47ca:	sub	rsp, 0x30
0x47ce:	mov	esi, 0x64
0x47d3:	mov	rdi, rbx
0x47d6:	mov	rax, qword ptr fs:[0x28]
0x47df:	mov	qword ptr [rsp + 0x28], rax
0x47e4:	xor	eax, eax
0x47e6:	call	0xd4f0


0x45c0:	push	rbp
0x45c1:	push	rbx
0x45c2:	mov	rbx, rsi
0x45c5:	lea	rsi, [rip + 0xbb13]
0x45cc:	mov	rbp, rdi
0x45cf:	mov	edx, 5
0x45d4:	sub	rsp, 8
0x45d8:	xor	edi, edi
0x45da:	call	0x27f0


0x4500:	push	r12
0x4502:	mov	r12, rdi
0x4505:	push	rbp
0x4506:	mov	rbp, rsi
0x4509:	push	rbx
0x450a:	lea	rsi, [rip + 0xbbc6]
0x4511:	lea	rbx, [rip + 0x2101c8]
0x4518:	jmp	0x452c


0x44d0:	mov	eax, dword ptr [rdi]
0x44d2:	mov	edx, dword ptr [rdi + 4]
0x44d5:	xor	eax, dword ptr [rsi]
0x44d7:	xor	edx, dword ptr [rsi + 4]
0x44da:	or	eax, edx
0x44dc:	mov	edx, dword ptr [rdi + 8]
0x44df:	xor	edx, dword ptr [rsi + 8]
0x44e2:	or	eax, edx
0x44e4:	mov	edx, dword ptr [rdi + 0xc]
0x44e7:	xor	edx, dword ptr [rsi + 0xc]
0x44ea:	or	eax, edx
0x44ec:	mov	edx, dword ptr [rdi + 0x10]
0x44ef:	xor	edx, dword ptr [rsi + 0x10]
0x44f2:	or	eax, edx
0x44f4:	mov	edx, dword ptr [rdi + 0x14]
0x44f7:	xor	edx, dword ptr [rsi + 0x14]
0x44fa:	or	eax, edx
0x44fc:	sete	al
0x44ff:	ret	


0x43f0:	cmp	rcx, 2
0x43f4:	mov	r9, rdx
0x43f7:	jg	0x4440


0x43b0:	mov	r8, rdx
0x43b3:	xor	edi, 1
0x43b6:	lea	rdx, [rip + 0xbd11]
0x43bd:	movzx	edi, dil
0x43c1:	sub	rsp, 8
0x43c5:	mov	rcx, rsi
0x43c8:	add	rdx, rdi
0x43cb:	mov	rdi, qword ptr [rip + 0x210d0e]
0x43d2:	mov	esi, 1
0x43d7:	xor	eax, eax
0x43d9:	call	0x2af0


0x42c0:	push	rbx
0x42c1:	mov	rbx, rdi
0x42c4:	sub	rsp, 0xd0
0x42cb:	test	al, al
0x42cd:	mov	qword ptr [rsp + 0x28], rsi
0x42d2:	mov	qword ptr [rsp + 0x30], rdx
0x42d7:	mov	qword ptr [rsp + 0x38], rcx
0x42dc:	mov	qword ptr [rsp + 0x40], r8
0x42e1:	mov	qword ptr [rsp + 0x48], r9
0x42e6:	je	0x431f


0x41c0:	mov	eax, edi
0x41c2:	mov	edx, 0x91a2b3c5
0x41c7:	push	r12
0x41c9:	imul	edx
0x41cb:	push	rbp
0x41cc:	push	rbx
0x41cd:	mov	eax, edi
0x41cf:	mov	ecx, edi
0x41d1:	mov	r12, rsi
0x41d4:	sar	eax, 0x1f
0x41d7:	sar	ecx, 0x1f
0x41da:	mov	ebp, edi
0x41dc:	lea	ebx, [rdx + rdi]
0x41df:	and	ecx, 2
0x41e2:	mov	rdx, -1
0x41e9:	lea	r8d, [rcx + 0x2b]
0x41ed:	lea	rcx, [rip + 0xbec2]
0x41f4:	mov	esi, 1
0x41f9:	sar	ebx, 0xb
0x41fc:	mov	rdi, r12
0x41ff:	sub	ebx, eax
0x4201:	mov	eax, ebx
0x4203:	sar	eax, 0x1f
0x4206:	mov	r9d, eax
0x4209:	xor	r9d, ebx
0x420c:	imul	ebx, ebx, 0xe10
0x4212:	sub	r9d, eax
0x4215:	xor	eax, eax
0x4217:	call	0x2b40


0x4040:	mov	rax, qword ptr [rdi + 0xa8]
0x4047:	mov	r8, qword ptr [rsp + 0x10]
0x404c:	mov	r9, qword ptr [rsp + 0x18]
0x4051:	test	rax, rax
0x4054:	je	0x4098


0x3ff0:	sub	rsp, 0x28
0x3ff4:	xor	edi, edi
0x3ff6:	mov	rsi, rsp
0x3ff9:	mov	rax, qword ptr fs:[0x28]
0x4002:	mov	qword ptr [rsp + 0x18], rax
0x4007:	xor	eax, eax
0x4009:	call	0x27a0


0x3fe0:	mov	rsi, rdi
0x3fe3:	xor	edi, edi
0x3fe5:	jmp	0x27a0


0x3f50:	push	r13
0x3f52:	push	r12
0x3f54:	mov	r13d, r8d
0x3f57:	push	rbp
0x3f58:	push	rbx
0x3f59:	mov	r12d, esi
0x3f5c:	mov	rbx, rdx
0x3f5f:	mov	rbp, rcx
0x3f62:	sub	rsp, 8
0x3f66:	test	edi, edi
0x3f68:	jns	0x3f90


0x3ef0:	push	r13
0x3ef2:	push	r12
0x3ef4:	xor	eax, eax
0x3ef6:	push	rbp
0x3ef7:	push	rbx
0x3ef8:	mov	ebp, edi
0x3efa:	mov	rdi, rsi
0x3efd:	mov	esi, edx
0x3eff:	mov	edx, ecx
0x3f01:	sub	rsp, 8
0x3f05:	call	0x2a80


0x3e40:	push	rbp
0x3e41:	push	rbx
0x3e42:	sub	rsp, 8
0x3e46:	mov	rdi, qword ptr [rip + 0x21125b]
0x3e4d:	call	0xb870


0x3e30:	mov	byte ptr [rip + 0x211311], dil
0x3e37:	ret	


0x3e20:	mov	qword ptr [rip + 0x211329], rdi
0x3e27:	ret	


0x3dd0:	push	r14
0x3dd2:	push	r13
0x3dd4:	push	r12
0x3dd6:	push	rbp
0x3dd7:	push	rbx
0x3dd8:	mov	r14, qword ptr [rsi]
0x3ddb:	test	r14, r14
0x3dde:	je	0x3e11


0x3d60:	push	r15
0x3d62:	push	r14
0x3d64:	mov	r14, rdi
0x3d67:	push	r13
0x3d69:	push	r12
0x3d6b:	mov	r12, rsi
0x3d6e:	push	rbp
0x3d6f:	push	rbx
0x3d70:	mov	rbp, rcx
0x3d73:	mov	rbx, rdx
0x3d76:	mov	rcx, r8
0x3d79:	mov	rdx, rbp
0x3d7c:	sub	rsp, 8
0x3d80:	mov	rsi, rbx
0x3d83:	mov	rdi, r12
0x3d86:	mov	r15, r8
0x3d89:	mov	r13, r9
0x3d8c:	call	0x3aa0


0x3c40:	push	r15
0x3c42:	push	r14
0x3c44:	mov	r14, rdi
0x3c47:	push	r13
0x3c49:	push	r12
0x3c4b:	xor	edi, edi
0x3c4d:	push	rbp
0x3c4e:	push	rbx
0x3c4f:	mov	rbp, rsi
0x3c52:	lea	rsi, [rip + 0xc428]
0x3c59:	mov	r12, rdx
0x3c5c:	mov	edx, 5
0x3c61:	sub	rsp, 8
0x3c65:	mov	rbx, qword ptr [rip + 0x211474]
0x3c6c:	call	0x27f0


0x3bc0:	cmp	rdx, -1
0x3bc4:	push	r12
0x3bc6:	mov	edx, 5
0x3bcb:	push	rbp
0x3bcc:	mov	r12, rsi
0x3bcf:	push	rbx
0x3bd0:	mov	rbp, rdi
0x3bd3:	je	0x3c20


0x3aa0:	push	r15
0x3aa2:	push	r14
0x3aa4:	mov	r15, rsi
0x3aa7:	push	r13
0x3aa9:	push	r12
0x3aab:	mov	r13, rcx
0x3aae:	push	rbp
0x3aaf:	push	rbx
0x3ab0:	mov	rbp, rdx
0x3ab3:	sub	rsp, 0x28
0x3ab7:	mov	qword ptr [rsp + 8], rdi
0x3abc:	mov	qword ptr [rsp + 0x18], rdx
0x3ac1:	call	0x2810


0x3a90:	mov	edi, 1
0x3a95:	jmp	0x3690


0x3690:	push	r13
0x3692:	push	r12
0x3694:	mov	edx, 5
0x3699:	push	rbp
0x369a:	push	rbx
0x369b:	mov	ebp, edi
0x369d:	sub	rsp, 0x88
0x36a4:	mov	rbx, qword ptr [rip + 0x211aad]
0x36ab:	mov	rax, qword ptr fs:[0x28]
0x36b4:	mov	qword ptr [rsp + 0x78], rax
0x36b9:	xor	eax, eax
0x36bb:	test	edi, edi
0x36bd:	je	0x36ed


0x3640:	push	rbx
0x3641:	mov	rbx, rsi
0x3644:	call	0x86d0


0x3630:	push	rbp
0x3631:	mov	rbp, rsp
0x3634:	pop	rbp
0x3635:	jmp	0x35a0


0x35f0:	cmp	byte ptr [rip + 0x211af1], 0
0x35f7:	jne	0x3628


0x35a0:	lea	rdi, [rip + 0x211af9]
0x35a7:	lea	rsi, [rip + 0x211af2]
0x35ae:	push	rbp
0x35af:	sub	rsi, rdi
0x35b2:	mov	rbp, rsp
0x35b5:	sar	rsi, 3
0x35b9:	mov	rax, rsi
0x35bc:	shr	rax, 0x3f
0x35c0:	add	rsi, rax
0x35c3:	sar	rsi, 1
0x35c6:	je	0x35e0


0x3560:	lea	rdi, [rip + 0x211b39]
0x3567:	push	rbp
0x3568:	lea	rax, [rip + 0x211b31]
0x356f:	cmp	rax, rdi
0x3572:	mov	rbp, rsp
0x3575:	je	0x3590


0x3530:	xor	ebp, ebp
0x3532:	mov	r9, rdx
0x3535:	pop	rsi
0x3536:	mov	rdx, rsp
0x3539:	and	rsp, 0xfffffffffffffff0
0x353d:	push	rax
0x353e:	push	rsp
0x353f:	lea	r8, [rip + 0xc1aa]
0x3546:	lea	rcx, [rip + 0xc133]
0x354d:	lea	rdi, [rip - 0x994]
0x3554:	call	qword ptr [rip + 0x211a86]


0x2bc0:	push	r15
0x2bc2:	push	r14
0x2bc4:	xor	r15d, r15d
0x2bc7:	push	r13
0x2bc9:	push	r12
0x2bcb:	mov	r12d, edi
0x2bce:	push	rbp
0x2bcf:	push	rbx
0x2bd0:	mov	rbp, rsi
0x2bd3:	lea	r13, [rip + 0x211566]
0x2bda:	xor	r14d, r14d
0x2bdd:	sub	rsp, 0xf8
0x2be4:	mov	rdi, qword ptr [rsi]
0x2be7:	mov	rax, qword ptr fs:[0x28]
0x2bf0:	mov	qword ptr [rsp + 0xe8], rax
0x2bf8:	xor	eax, eax
0x2bfa:	call	0x8b80


0x2b60:	mov	eax, edi
0x2b62:	mov	ecx, 0x64
0x2b67:	push	rbx
0x2b68:	cdq	
0x2b69:	mov	rbx, rsi
0x2b6c:	idiv	ecx
0x2b6e:	xor	ecx, ecx
0x2b70:	lea	r8d, [rax + 0x13]
0x2b74:	mov	esi, edx
0x2b76:	sar	esi, 0x1f
0x2b79:	mov	eax, r8d
0x2b7c:	xor	edx, esi
0x2b7e:	sar	eax, 0x1f
0x2b81:	xor	r8d, eax
0x2b84:	cmp	edi, 0xfffff894
0x2b8a:	lea	rdi, [rip + 0xd52c]
0x2b91:	setge	cl
0x2b94:	sub	edx, esi
0x2b96:	sub	r8d, eax
0x2b99:	add	rcx, rdi
0x2b9c:	mov	r9d, edx
0x2b9f:	mov	rdi, rbx
0x2ba2:	or	rdx, 0xffffffffffffffff
0x2ba6:	mov	esi, 1
0x2bab:	xor	eax, eax
0x2bad:	call	0x2b40


0x26b0:	sub	rsp, 8
0x26b4:	mov	rax, qword ptr [rip + 0x21292d]
0x26bb:	test	rax, rax
0x26be:	je	0x26c2


0x2ac0:	jmp	qword ptr [rip + 0x2124ca]


0xea0b:	movzx	eax, byte ptr [rdi]
0xea0e:	test	al, al
0xea10:	jne	0xea00


0xe7fd:	xor	eax, eax
0xe7ff:	ret	


0xe79a:	lea	r8, [rip + 0x387f]
0xe7a1:	lea	r10, [rip + 0x38d8]
0xe7a8:	lea	r9, [rip + 0x385d]
0xe7af:	xor	ecx, ecx
0xe7b1:	nop	dword ptr [rax]
0xe7b8:	cmp	dword ptr [rax], 0x16
0xe7bb:	ja	0xe800


0xd610:	mov	rax, qword ptr [rdi + 0x20]
0xd614:	cmp	qword ptr [rdi + 0x28], rax
0xd618:	jne	0xd60a


0xd60a:	jmp	0x2a90


0xd5da:	mov	rdi, rbx
0xd5dd:	pop	rbx
0xd5de:	jmp	0x29e0


0xd5c9:	call	0x2a10


0x29a0:	jmp	qword ptr [rip + 0x21255a]


0xbba0:	test	r15d, r15d
0xbba3:	mov	eax, 0xc
0xbba8:	cmove	r15d, eax
0xbbac:	jmp	0xbab7


0xbab3:	sub	r15d, 0xc
0xbab7:	movzx	eax, byte ptr [r11]
0xbabb:	xor	r14d, r14d
0xbabe:	test	al, al
0xbac0:	je	0xbb7c


0xba19:	mov	rax, rbp
0xba1c:	pop	rbx
0xba1d:	pop	rbp
0xba1e:	pop	r12
0xba20:	ret	


0xb9ec:	mov	r12, rsi
0xb9ef:	lea	rbx, [rdx - 1]
0xb9f3:	call	0x26e0


0xb9c9:	mov	rax, rbp
0xb9cc:	pop	rbx
0xb9cd:	pop	rbp
0xb9ce:	pop	r12
0xb9d0:	ret	


0xb99c:	mov	r12, rsi
0xb99f:	lea	rbx, [rdx - 1]
0xb9a3:	call	0x2b20


0x29f0:	jmp	qword ptr [rip + 0x212532]


0x2a30:	jmp	qword ptr [rip + 0x212512]


0x2790:	jmp	qword ptr [rip + 0x212662]


0xb740:	mov	rdi, rsi
0xb743:	call	0x2a50


0xb644:	mov	rbp, rdi
0xb647:	call	0xb480


0xb5f0:	add	rsp, 8
0xb5f4:	mov	rdi, rbp
0xb5f7:	mov	rsi, rdx
0xb5fa:	pop	rbx
0xb5fb:	pop	rbp
0xb5fc:	pop	r12
0xb5fe:	pop	r13
0xb600:	jmp	0x28b0


0xb582:	mov	r13, rdx
0xb585:	mov	rbx, rdi
0xb588:	call	0xb480


0xb56b:	ret	


0xb566:	jmp	0xb220


0x26f0:	jmp	qword ptr [rip + 0x2126b2]


0xb3f0:	add	rsp, 8
0xb3f4:	pop	rbx
0xb3f5:	pop	rbp
0xb3f6:	pop	r12
0xb3f8:	pop	r13
0xb3fa:	pop	r14
0xb3fc:	pop	r15
0xb3fe:	ret	


0xb360:	cmp	rsi, rbp
0xb363:	mov	r12, rdi
0xb366:	mov	r13, rsi
0xb369:	ja	0xb374


0xb318:	mov	edi, 0x80
0xb31d:	call	0x29d0


0xb2b9:	mov	r12, rdi
0xb2bc:	call	0x2810


0x2750:	jmp	qword ptr [rip + 0x212682]


0xb248:	ret	


0xb225:	push	rbx
0xb226:	nop	word ptr cs:[rax + rax]
0xb230:	mov	rbx, qword ptr [rdi]
0xb233:	call	0x2710


0xb210:	lea	rdi, [rip + 0x52bd]
0xb217:	jmp	0x2aa0


0xb1f5:	mov	rsi, rdi
0xb1f8:	lea	rdi, [rip + 0x52d5]
0xb1ff:	mov	edx, 1
0xb204:	jmp	0x27b0


0x2850:	jmp	qword ptr [rip + 0x212602]


0x27f0:	jmp	qword ptr [rip + 0x212632]


0x2810:	jmp	qword ptr [rip + 0x212622]


0xb0c9:	call	0xb120


0xb0b2:	movzx	edx, dl
0xb0b5:	test	rdx, rdx
0xb0b8:	jne	0xb0c9


0xb060:	test	rax, rax
0xb063:	mov	edx, 0x80
0xb068:	cmove	rax, rdx
0xb06c:	test	rax, rax
0xb06f:	jns	0xb052


0xb038:	movabs	rdx, 0x5555555555555553
0xb042:	cmp	rax, rdx
0xb045:	ja	0xb071


0xafe0:	test	rcx, rcx
0xafe3:	je	0xb008


0xafab:	xor	edx, edx
0xafad:	movabs	rax, 0x5555555555555554
0xafb7:	div	r9
0xafba:	cmp	rax, rcx
0xafbd:	jbe	0xaffb


0xaf8b:	sub	rsp, 8
0xaf8f:	call	0xb120


0xaf81:	movzx	eax, al
0xaf84:	test	rax, rax
0xaf87:	jne	0xaf8b


0xaf39:	test	rdi, rdi
0xaf3c:	jne	0xaf58


0xaf3e:	mov	rsi, rbx
0xaf41:	call	0x2a20


0xaf0b:	sub	rsp, 8
0xaf0f:	call	0xb120


0xaf01:	movzx	eax, al
0xaf04:	test	rax, rax
0xaf07:	jne	0xaf0b


0x29d0:	jmp	qword ptr [rip + 0x212542]


0xade6:	mov	eax, r10d
0xade9:	mov	r11d, 1
0xadef:	add	r10d, 8
0xadf3:	add	rax, rbp
0xadf6:	mov	rax, qword ptr [rax]
0xadf9:	test	rax, rax
0xadfc:	mov	qword ptr [r8 + r9*8], rax
0xae00:	je	0xae0c


0xae3c:	mov	rax, rbx
0xae3f:	add	rbx, 8
0xae43:	jmp	0xadf6


0xad18:	mov	r11d, eax
0xad1b:	add	r11, qword ptr [r10 + 0x10]
0xad1f:	add	eax, 8
0xad22:	mov	dword ptr [r10], eax
0xad25:	mov	rax, qword ptr [r11]
0xad28:	test	rax, rax
0xad2b:	mov	qword ptr [r8 + r9*8], rax
0xad2f:	je	0xad3b


0xad5a:	mov	r11, qword ptr [r10 + 8]
0xad5e:	lea	rax, [r11 + 8]
0xad62:	mov	qword ptr [r10 + 8], rax
0xad66:	jmp	0xad25


0xaceb:	jmp	0xa8b0


0xa9e8:	mov	r8, rcx
0xa9eb:	mov	rcx, rdx
0xa9ee:	lea	rdx, [rip + 0x703f]
0xa9f5:	mov	esi, 1
0xa9fa:	xor	eax, eax
0xa9fc:	call	0x2af0


0xa8d0:	mov	r8, rdx
0xa8d3:	lea	rdx, [rip + 0x714e]
0xa8da:	mov	r9, rcx
0xa8dd:	xor	eax, eax
0xa8df:	mov	rcx, rsi
0xa8e2:	mov	esi, 1
0xa8e7:	call	0x2af0


0xa7d7:	call	0x2740


0xa7a5:	test	rdx, rdx
0xa7a8:	je	0xa7d7


0xa744:	call	0x2740


0xa6dc:	mov	dword ptr [rsp], esi
0xa6df:	mov	rcx, rsp
0xa6e2:	mov	rdx, -1
0xa6e9:	mov	rsi, rax
0xa6ec:	mov	qword ptr [rsp + 4], 0
0xa6f5:	mov	qword ptr [rsp + 0xc], 0x4000000
0xa6fe:	mov	qword ptr [rsp + 0x14], 0
0xa707:	mov	qword ptr [rsp + 0x1c], 0
0xa710:	mov	qword ptr [rsp + 0x24], 0
0xa719:	mov	qword ptr [rsp + 0x2c], 0
0xa722:	mov	dword ptr [rsp + 0x34], 0
0xa72a:	call	0x9f50


0xa5b0:	call	0x2740


0xa54f:	mov	dword ptr [rsp], esi
0xa552:	mov	rcx, rsp
0xa555:	mov	rsi, rax
0xa558:	mov	qword ptr [rsp + 4], 0
0xa561:	mov	qword ptr [rsp + 0xc], 0
0xa56a:	mov	qword ptr [rsp + 0x14], 0
0xa573:	mov	qword ptr [rsp + 0x1c], 0
0xa57c:	mov	qword ptr [rsp + 0x24], 0
0xa585:	mov	qword ptr [rsp + 0x2c], 0
0xa58e:	mov	dword ptr [rsp + 0x34], 0
0xa596:	call	0x9f50


0xa524:	call	0x2740


0xa4bc:	mov	dword ptr [rsp], esi
0xa4bf:	mov	rcx, rsp
0xa4c2:	mov	rdx, -1
0xa4c9:	mov	rsi, rax
0xa4cc:	mov	qword ptr [rsp + 4], 0
0xa4d5:	mov	qword ptr [rsp + 0xc], 0
0xa4de:	mov	qword ptr [rsp + 0x14], 0
0xa4e7:	mov	qword ptr [rsp + 0x1c], 0
0xa4f0:	mov	qword ptr [rsp + 0x24], 0
0xa4f9:	mov	qword ptr [rsp + 0x2c], 0
0xa502:	mov	dword ptr [rsp + 0x34], 0
0xa50a:	call	0x9f50


0xa3d1:	mov	rdi, qword ptr [r12 + 8]
0xa3d6:	lea	rbx, [rip + 0x20ad83]
0xa3dd:	cmp	rdi, rbx
0xa3e0:	je	0xa3f9


0xa3a6:	sub	eax, 2
0xa3a9:	lea	rbx, [r12 + 0x18]
0xa3ae:	shl	rax, 4
0xa3b2:	lea	rbp, [r12 + rax + 0x28]
0xa3b7:	nop	word ptr [rax + rax]
0xa3c0:	mov	rdi, qword ptr [rbx]
0xa3c3:	add	rbx, 0x10
0xa3c7:	call	0x2710


0xa207:	sub	rsp, 8
0xa20b:	call	0x2740


0xa1f9:	test	rdx, rdx
0xa1fc:	je	0xa207


0x2800:	jmp	qword ptr [rip + 0x21262a]


0x8bfd:	mov	rcx, qword ptr [rip + 0x20c4dc]
0x8c04:	lea	rdi, [rip + 0x88fd]
0x8c0b:	mov	edx, 0x37
0x8c10:	mov	esi, 1
0x8c15:	call	0x2ae0


0x8b86:	mov	esi, 0x2f
0x8b8b:	mov	rbx, rdi
0x8b8e:	call	0x28a0


0x87b8:	mov	edx, dword ptr [rsi]
0x87ba:	mov	eax, 1
0x87bf:	mov	dword ptr [rdi], edx
0x87c1:	cmp	dword ptr [rsi], 0x44
0x87c4:	jg	0x879a


0x875f:	jb	0x8778


0x4df0:	lea	rax, [rip + 0xc4e9]
0x4df7:	movzx	ebp, byte ptr [rax + rbx]
0x4dfb:	test	ebp, ebp
0x4dfd:	je	0x5118


0x4db4:	cmp	r9d, -2
0x4db8:	je	0x5440


0x48d8:	mov	byte ptr [rsi], 0
0x48db:	movsxd	rdx, dword ptr [rdi + 0x10]
0x48df:	cmp	edx, 6
0x48e2:	ja	0x48cb


0x4885:	mov	r9, qword ptr [rdi + 8]
0x4889:	lea	rax, [r9 + 1]
0x488d:	cmp	rax, 0xd
0x4891:	jbe	0x4928


0x452c:	mov	rdi, rbp
0x452f:	call	0x2950


0x43f9:	test	r8, r8
0x43fc:	js	0x4490


0x4440:	test	r8, r8
0x4443:	jns	0x4402


0x2af0:	jmp	qword ptr [rip + 0x2124b2]


0x431f:	lea	rdi, [rip + 0xbda1]
0x4326:	mov	edx, 6
0x432b:	mov	esi, 1
0x4330:	mov	rax, qword ptr fs:[0x28]
0x4339:	mov	qword ptr [rsp + 0x18], rax
0x433e:	xor	eax, eax
0x4340:	mov	rcx, qword ptr [rip + 0x210d99]
0x4347:	call	0x2ae0


0x42e8:	movaps	xmmword ptr [rsp + 0x50], xmm0
0x42ed:	movaps	xmmword ptr [rsp + 0x60], xmm1
0x42f2:	movaps	xmmword ptr [rsp + 0x70], xmm2
0x42f7:	movaps	xmmword ptr [rsp + 0x80], xmm3
0x42ff:	movaps	xmmword ptr [rsp + 0x90], xmm4
0x4307:	movaps	xmmword ptr [rsp + 0xa0], xmm5
0x430f:	movaps	xmmword ptr [rsp + 0xb0], xmm6
0x4317:	movaps	xmmword ptr [rsp + 0xc0], xmm7
0x431f:	lea	rdi, [rip + 0xbda1]
0x4326:	mov	edx, 6
0x432b:	mov	esi, 1
0x4330:	mov	rax, qword ptr fs:[0x28]
0x4339:	mov	qword ptr [rsp + 0x18], rax
0x433e:	xor	eax, eax
0x4340:	mov	rcx, qword ptr [rip + 0x210d99]
0x4347:	call	0x2ae0


0x2b40:	jmp	qword ptr [rip + 0x21248a]


0x4098:	cmp	r9, 4
0x409c:	jg	0x4100


0x4056:	cmp	qword ptr [rdi + 0x30], 0
0x405b:	jne	0x4098


0x27a0:	jmp	qword ptr [rip + 0x21265a]


0x3f6a:	test	rdx, rdx
0x3f6d:	je	0x3fc0


0x3f90:	mov	rsi, rcx
0x3f93:	call	0x2ab0


0x2a80:	jmp	qword ptr [rip + 0x2124ea]


0x3e11:	pop	rbx
0x3e12:	mov	rax, r14
0x3e15:	pop	rbp
0x3e16:	pop	r12
0x3e18:	pop	r13
0x3e1a:	pop	r14
0x3e1c:	ret	


0x3de0:	mov	r12, rcx
0x3de3:	mov	r13, rdi
0x3de6:	mov	rbp, rdx
0x3de9:	lea	rbx, [rsi + 8]
0x3ded:	jmp	0x3dff


0x3c20:	lea	rsi, [rip + 0xc422]
0x3c27:	xor	edi, edi
0x3c29:	call	0x27f0


0x3bd5:	lea	rsi, [rip + 0xc488]
0x3bdc:	xor	edi, edi
0x3bde:	call	0x27f0


0x36ed:	lea	rsi, [rip + 0xc264]
0x36f4:	xor	edi, edi
0x36f6:	call	0x27f0


0x36bf:	lea	rsi, [rip + 0xc26a]
0x36c6:	xor	edi, edi
0x36c8:	call	0x27f0


0x35f9:	cmp	qword ptr [rip + 0x2119f7], 0
0x3601:	push	rbp
0x3602:	mov	rbp, rsp
0x3605:	je	0x3613


0x3628:	ret	


0x35e0:	pop	rbp
0x35e1:	ret	


0x35c8:	mov	rax, qword ptr [rip + 0x211a21]
0x35cf:	test	rax, rax
0x35d2:	je	0x35e0


0x3590:	pop	rbp
0x3591:	ret	


0x3577:	mov	rax, qword ptr [rip + 0x211a5a]
0x357e:	test	rax, rax
0x3581:	je	0x3590




0x26c2:	add	rsp, 8
0x26c6:	ret	


0x26c0:	call	rax




0xea12:	lea	rax, [rbx + rbx*4]
0xea16:	lea	rax, [rbx + rax*2]
0xea1a:	mov	qword ptr [rcx + rax*8], rdi
0xea1e:	mov	rax, qword ptr [rsp + 0x10]
0xea23:	mov	qword ptr [r14 + 0x10], rax
0xea27:	mov	rax, qword ptr [rsp + 0x18]
0xea2c:	mov	qword ptr [r14 + 0x18], rax
0xea30:	xor	eax, eax
0xea32:	add	rsp, 0x58
0xea36:	pop	rbx
0xea37:	pop	rbp
0xea38:	pop	r12
0xea3a:	pop	r13
0xea3c:	pop	r14
0xea3e:	pop	r15
0xea40:	ret	


0xea00:	cmp	al, 0x25
0xea02:	lea	rbp, [rdi + 1]
0xea06:	je	0xea48


0xe7bd:	mov	edx, dword ptr [rax]
0xe7bf:	movsxd	rdx, dword ptr [r8 + rdx*4]
0xe7c3:	add	rdx, r8
0xe7c6:	jmp	rdx


0xe800:	mov	eax, 0xffffffff
0xe805:	ret	


0xd61a:	cmp	qword ptr [rdi + 0x48], 0
0xd61f:	jne	0xd60a


0x2a90:	jmp	qword ptr [rip + 0x2124e2]


0x29e0:	jmp	qword ptr [rip + 0x21253a]


0x2a10:	jmp	qword ptr [rip + 0x212522]




0xbab7:	movzx	eax, byte ptr [r11]
0xbabb:	xor	r14d, r14d
0xbabe:	test	al, al
0xbac0:	je	0xbb7c


0xbb7c:	test	rbp, rbp
0xbb7f:	je	0xbaff


0xbac6:	mov	dword ptr [rsp + 0x68], r15d
0xbacb:	mov	rbx, r11
0xbace:	cmp	al, 0x25
0xbad0:	je	0xbbb8


0x26e0:	jmp	qword ptr [rip + 0x2126ba]


0x2b20:	jmp	qword ptr [rip + 0x21249a]








0x2a50:	jmp	qword ptr [rip + 0x212502]


0x28b0:	jmp	qword ptr [rip + 0x2125d2]




0xb36b:	lea	rdx, [rsi + 0x38]
0xb36f:	cmp	rbp, rdx
0xb372:	jb	0xb3f0


0xb374:	cmp	byte ptr [rbp], 0
0xb378:	lea	rbx, [r12 + 9]
0xb37d:	je	0xb3e0




0x2710:	jmp	qword ptr [rip + 0x2126a2]


0x2aa0:	jmp	qword ptr [rip + 0x2124da]


0x27b0:	jmp	qword ptr [rip + 0x212652]








0xb0ba:	call	0x2940


0xb071:	sub	rsp, 8
0xb075:	call	0xb120


0xb052:	mov	qword ptr [rsi], rax
0xb055:	mov	rsi, rax
0xb058:	jmp	0xaf30


0xb047:	mov	rdx, rax
0xb04a:	shr	rdx, 1
0xb04d:	lea	rax, [rdx + rax + 1]
0xb052:	mov	qword ptr [rsi], rax
0xb055:	mov	rsi, rax
0xb058:	jmp	0xaf30


0xb008:	xor	edx, edx
0xb00a:	mov	eax, 0x80
0xb00f:	xor	r8d, r8d
0xb012:	div	r9
0xb015:	test	rax, rax
0xb018:	sete	r8b
0xb01c:	lea	rcx, [r8 + rax]
0xb020:	jmp	0xafe5


0xafe5:	mov	rax, rcx
0xafe8:	mul	r9
0xafeb:	seto	dl
0xafee:	test	rax, rax
0xaff1:	movzx	edx, dl
0xaff4:	js	0xaffb


0xaffb:	sub	rsp, 8
0xafff:	call	0xb120


0xafbf:	mov	rax, rcx
0xafc2:	shr	rax, 1
0xafc5:	lea	rcx, [rax + rcx + 1]
0xafca:	mov	qword ptr [rsi], rcx
0xafcd:	imul	rcx, r9
0xafd1:	mov	rsi, rcx
0xafd4:	jmp	0xaf30


0xaf89:	jmp	0xaf30


0xaf58:	call	0x2710


0x2a20:	jmp	qword ptr [rip + 0x21251a]


0xaf09:	jmp	0xaed0




0xae0c:	test	r11b, r11b
0xae0f:	jne	0xae35


0xae02:	add	r9, 1
0xae06:	cmp	r9, 0xa
0xae0a:	jne	0xade0


0xadf6:	mov	rax, qword ptr [rax]
0xadf9:	test	rax, rax
0xadfc:	mov	qword ptr [r8 + r9*8], rax
0xae00:	je	0xae0c


0xad3b:	call	0xa8b0


0xad31:	add	r9, 1
0xad35:	cmp	r9, 0xa
0xad39:	jne	0xad10


0xad25:	mov	rax, qword ptr [r11]
0xad28:	test	rax, rax
0xad2b:	mov	qword ptr [r8 + r9*8], rax
0xad2f:	je	0xad3b


0xace0:	add	r9, 1
0xace4:	cmp	qword ptr [r8 + r9*8], 0
0xace9:	jne	0xace0


0x2740:	jmp	qword ptr [rip + 0x21268a]


0xa7aa:	mov	qword ptr [rsp + 0x28], rsi
0xa7af:	mov	qword ptr [rsp + 0x30], rdx
0xa7b4:	mov	rcx, rsp
0xa7b7:	mov	rdx, r8
0xa7ba:	mov	rsi, r9
0xa7bd:	call	0x9f50


0xa3f9:	lea	rbx, [rip + 0x20ac90]
0xa400:	cmp	r12, rbx
0xa403:	je	0xa414


0xa3e2:	call	0x2710


0xa1fe:	mov	qword ptr [rdi + 0x28], rsi
0xa202:	mov	qword ptr [rdi + 0x30], rdx
0xa206:	ret	




0x2ae0:	jmp	qword ptr [rip + 0x2124ba]


0x28a0:	jmp	qword ptr [rip + 0x2125da]


0x87c6:	and	ecx, 8
0x87c9:	jne	0x8770


0x879a:	mov	rdi, qword ptr [rsp + 8]
0x879f:	xor	rdi, qword ptr fs:[0x28]
0x87a8:	jne	0x87ec


0x8778:	mov	rbp, rsp
0x877b:	mov	rdi, rbp
0x877e:	call	0x2990


0x8761:	cmp	rdx, 2
0x8765:	jne	0x87f1


0x5118:	cmp	dword ptr [rsp + 0x34], 3
0x511d:	jne	0x512f


0x4e03:	lea	rdx, [rip + 0xc2d6]
0x4e0a:	movsxd	rax, ebp
0x4e0d:	movzx	eax, byte ptr [rdx + rax]
0x4e11:	mov	edx, 1
0x4e16:	sub	edx, eax
0x4e18:	mov	rbx, rax
0x4e1b:	movsxd	rdx, edx
0x4e1e:	lea	rax, [rdx*8]
0x4e26:	sub	rax, rdx
0x4e29:	shl	rax, 3
0x4e2d:	add	rax, r13
0x4e30:	mov	rdi, qword ptr [rax + 0x10]
0x4e34:	mov	rdx, qword ptr [rax + 0x30]
0x4e38:	movdqu	xmm0, xmmword ptr [rax]
0x4e3c:	mov	r14, qword ptr [rax]
0x4e3f:	mov	r10, qword ptr [rax + 8]
0x4e43:	mov	qword ptr [rsp + 0x10], rdi
0x4e48:	mov	rdi, qword ptr [rax + 0x18]
0x4e4c:	movaps	xmmword ptr [rsp + 0xd0], xmm0
0x4e54:	mov	qword ptr [rsp + 0x100], rdx
0x4e5c:	mov	qword ptr [rsp + 8], rdi
0x4e61:	mov	rdi, qword ptr [rax + 0x20]
0x4e65:	movdqu	xmm0, xmmword ptr [rax + 0x10]
0x4e6a:	mov	qword ptr [rsp + 0x28], rdi
0x4e6f:	mov	rdi, qword ptr [rax + 0x28]
0x4e73:	movaps	xmmword ptr [rsp + 0xe0], xmm0
0x4e7b:	movdqu	xmm0, xmmword ptr [rax + 0x20]
0x4e80:	mov	eax, dword ptr [rax + 0x30]
0x4e83:	mov	qword ptr [rsp + 0x20], rdi
0x4e88:	movaps	xmmword ptr [rsp + 0xf0], xmm0
0x4e90:	mov	dword ptr [rsp + 0x18], eax
0x4e94:	lea	eax, [rbp - 4]
0x4e97:	cmp	eax, 0x57
0x4e9a:	ja	0x4ff0


0x5440:	mov	rdi, qword ptr [r11]
0x5443:	mov	edx, 1
0x5448:	movabs	r10, 0x3ffffff03ffffff
0x5452:	movzx	ecx, byte ptr [rdi]
0x5455:	cmp	cl, 0x20
0x5458:	mov	esi, ecx
0x545a:	movzx	r9d, cl
0x545e:	ja	0x54af


0x4dbe:	test	r9d, r9d
0x4dc1:	jle	0x5370


0x48e4:	mov	rdi, rsi
0x48e7:	mov	ecx, 1
0x48ec:	mov	esi, 0x64
0x48f1:	lea	rax, [rip + 0xc728]
0x48f8:	lea	r9, [rax + rdx*4]
0x48fc:	lea	rax, [rip + 0xb79c]
0x4903:	mov	edx, 1
0x4908:	lea	r8, [rax + rcx]
0x490c:	mov	rcx, -1
0x4913:	xor	eax, eax
0x4915:	call	0x2700


0x48cb:	add	rsp, 8
0x48cf:	mov	rax, rbp
0x48d2:	pop	rbx
0x48d3:	pop	rbp
0x48d4:	ret	


0x4928:	lea	rdx, [rax + rax*4]
0x492c:	mov	esi, 0x64
0x4931:	mov	rdi, rbp
0x4934:	lea	rcx, [rax + rdx*2]
0x4938:	lea	rax, [rip + 0xc701]
0x493f:	lea	rdx, [rip + 0xb75a]
0x4946:	add	rcx, rax
0x4949:	xor	eax, eax
0x494b:	call	0x2880


0x4897:	lea	r8, [rip + 0xb924]
0x489e:	mov	rcx, -1
0x48a5:	mov	edx, 1
0x48aa:	mov	esi, 0x64
0x48af:	mov	rdi, rbp
0x48b2:	xor	eax, eax
0x48b4:	call	0x2700


0x2950:	jmp	qword ptr [rip + 0x212582]


0x4490:	lea	rax, [rdx + rdx*4]
0x4494:	xor	ecx, ecx
0x4496:	lea	r9, [rax + rax*4]
0x449a:	shl	r9, 2
0x449e:	mov	rax, r9
0x44a1:	movabs	rdx, 0xa3d70a3d70a3d70b
0x44ab:	imul	rdx
0x44ae:	add	rdx, r9
0x44b1:	sar	r9, 0x3f
0x44b5:	sar	rdx, 6
0x44b9:	sub	rdx, r9
0x44bc:	mov	rax, rdx
0x44bf:	shl	rax, 4
0x44c3:	sub	rax, rdx
0x44c6:	lea	r9, [rcx + rax*4]
0x44ca:	jmp	0x441e


0x4402:	xor	ecx, ecx
0x4404:	imul	r9, r9, 0x3c
0x4408:	seto	cl
0x440b:	test	sil, sil
0x440e:	jne	0x4480


0x4445:	mov	rax, r9
0x4448:	movabs	rdx, 0xa3d70a3d70a3d70b
0x4452:	imul	rdx
0x4455:	mov	rax, r9
0x4458:	sar	rax, 0x3f
0x445c:	lea	rcx, [rdx + r9]
0x4460:	sar	rcx, 6
0x4464:	sub	rcx, rax
0x4467:	lea	rax, [rcx + rcx*4]
0x446b:	mov	rcx, r9
0x446e:	lea	rax, [rax + rax*4]
0x4472:	shl	rax, 2
0x4476:	sub	rcx, rax
0x4479:	jmp	0x449e






0x409e:	add	qword ptr [rdi + 0xc8], 1
0x40a6:	cmp	r9, 2
0x40aa:	jle	0x41a8


0x4100:	add	rax, 1
0x4104:	movabs	rsi, 0xa3d70a3d70a3d70b
0x410e:	mov	r10, r8
0x4111:	mov	qword ptr [rdi + 0xa8], rax
0x4118:	mov	rax, r8
0x411b:	sar	r10, 0x3f
0x411f:	imul	rsi
0x4122:	sub	r9, 4
0x4126:	mov	qword ptr [rdi + 0x30], r9
0x412a:	lea	rcx, [rdx + r8]
0x412e:	mov	rdx, r8
0x4131:	sar	rcx, 6
0x4135:	sub	rcx, r10
0x4138:	lea	rax, [rcx + rcx*4]
0x413c:	lea	rax, [rax + rax*4]
0x4140:	shl	rax, 2
0x4144:	sub	rdx, rax
0x4147:	mov	rax, rcx
0x414a:	mov	qword ptr [rdi + 0x40], rdx
0x414e:	imul	rsi
0x4151:	mov	rax, rcx
0x4154:	sar	rax, 0x3f
0x4158:	lea	rsi, [rdx + rcx]
0x415c:	movabs	rdx, 0x346dc5d63886594b
0x4166:	sar	rsi, 6
0x416a:	sub	rsi, rax
0x416d:	lea	rax, [rsi + rsi*4]
0x4171:	lea	rax, [rax + rax*4]
0x4175:	shl	rax, 2
0x4179:	sub	rcx, rax
0x417c:	mov	rax, r8
0x417f:	imul	rdx
0x4182:	mov	qword ptr [rdi + 0x38], rcx
0x4186:	sar	rdx, 0xb
0x418a:	sub	rdx, r10
0x418d:	mov	qword ptr [rdi + 0x28], rdx
0x4191:	ret	


0x405d:	cmp	byte ptr [rdi + 0xa1], 0
0x4064:	jne	0x4098




0x3fc0:	call	0x2750


0x3f6f:	mov	ecx, r13d
0x3f72:	mov	rdx, rbp
0x3f75:	mov	rsi, rbx
0x3f78:	mov	edi, r12d
0x3f7b:	call	0x2720


0x2ab0:	jmp	qword ptr [rip + 0x2124d2]




0x3dff:	mov	rdx, r12
0x3e02:	mov	rsi, rbp
0x3e05:	mov	rdi, r13
0x3e08:	call	0x2920


0x3613:	call	0x3560


0x3607:	mov	rdi, qword ptr [rip + 0x2119fa]
0x360e:	call	0x2b50


0x35d4:	pop	rbp
0x35d5:	jmp	rax


0x3583:	pop	rbp
0x3584:	jmp	rax


0xea48:	lea	rax, [rbx + rbx*4]
0xea4c:	mov	r13, r8
0xea4f:	lea	rax, [rbx + rax*2]
0xea53:	lea	r12, [rcx + rax*8]
0xea57:	mov	qword ptr [r12], rdi
0xea5b:	mov	dword ptr [r12 + 0x10], 0
0xea64:	mov	qword ptr [r12 + 0x18], 0
0xea6d:	mov	qword ptr [r12 + 0x20], 0
0xea76:	mov	qword ptr [r12 + 0x28], r8
0xea7b:	mov	qword ptr [r12 + 0x30], 0
0xea84:	mov	qword ptr [r12 + 0x38], 0
0xea8d:	mov	qword ptr [r12 + 0x40], r8
0xea92:	mov	qword ptr [r12 + 0x50], r8
0xea97:	movzx	ebx, byte ptr [rdi + 1]
0xea9b:	lea	eax, [rbx - 0x30]
0xea9e:	cmp	al, 9
0xeaa0:	ja	0xeade


0xea08:	mov	rdi, rbp
0xea0b:	movzx	eax, byte ptr [rdi]
0xea0e:	test	al, al
0xea10:	jne	0xea00


0xd621:	push	r12
0xd623:	push	rbp
0xd624:	mov	r12d, edx
0xd627:	push	rbx
0xd628:	mov	rbp, rsi
0xd62b:	mov	rbx, rdi
0xd62e:	call	0x29a0








0xbaff:	mov	rbx, qword ptr [rsp + 0x4b8]
0xbb07:	xor	rbx, qword ptr fs:[0x28]
0xbb10:	mov	rax, r14
0xbb13:	jne	0xd4c5


0xbb85:	cmp	qword ptr [rsp + 8], 0
0xbb8b:	je	0xbaff


0xbbb8:	movzx	eax, byte ptr [rsp + 0x2b]
0xbbbd:	xor	r8d, r8d
0xbbc0:	xor	r15d, r15d
0xbbc3:	mov	edx, 1
0xbbc8:	mov	byte ptr [rsp + 0x30], al
0xbbcc:	add	rbx, 1
0xbbd0:	movsx	eax, byte ptr [rbx]
0xbbd3:	lea	ecx, [rax - 0x23]
0xbbd6:	mov	esi, eax
0xbbd8:	mov	r9d, eax
0xbbdb:	cmp	cl, 0x3c
0xbbde:	ja	0xbc0c


0xbad6:	test	r10d, r10d
0xbad9:	mov	r12d, 0
0xbadf:	mov	eax, 1
0xbae4:	cmovns	r12, r10
0xbae8:	test	r12, r12
0xbaeb:	cmove	r12, rax
0xbaef:	mov	rax, qword ptr [rsp + 8]
0xbaf4:	sub	rax, r14
0xbaf7:	cmp	rax, r12
0xbafa:	ja	0xbb30










0xb3e0:	lea	rbx, [rip + 0x4f8f]
0xb3e7:	mov	qword ptr [r13 + 0x30], rbx
0xb3eb:	mov	eax, 1
0xb3f0:	add	rsp, 8
0xb3f4:	pop	rbx
0xb3f5:	pop	rbp
0xb3f6:	pop	r12
0xb3f8:	pop	r13
0xb3fa:	pop	r14
0xb3fc:	pop	r15
0xb3fe:	ret	








0x2940:	jmp	qword ptr [rip + 0x21258a]


0xaff6:	test	rdx, rdx
0xaff9:	je	0xafca




0xae11:	call	0xa8b0


0xae35:	mov	dword ptr [rsp + 8], r10d
0xae3a:	jmp	0xae11


0xade0:	cmp	r10d, 0x2f
0xade4:	ja	0xae3c


0xad10:	mov	eax, dword ptr [r10]
0xad13:	cmp	eax, 0x2f
0xad16:	ja	0xad5a




0xa414:	pop	rbx
0xa415:	mov	dword ptr [rip + 0x20ac59], 1
0xa41f:	pop	rbp
0xa420:	pop	r12
0xa422:	ret	


0xa405:	mov	rdi, r12
0xa408:	call	0x2710






0x87cb:	add	edx, 0x64
0x87ce:	mov	dword ptr [rdi], edx
0x87d0:	jmp	0x879a


0x8770:	xor	eax, eax
0x8772:	jmp	0x879a


0x87aa:	add	rsp, 0x18
0x87ae:	pop	rbx
0x87af:	pop	rbp
0x87b0:	ret	


0x87ec:	call	0x2830


0x2990:	jmp	qword ptr [rip + 0x212562]


0x876b:	and	ecx, 2
0x876e:	jne	0x87d8


0x87f1:	call	0x2740


0x511f:	cmp	r9d, 0
0x5123:	jle	0x5590


0x512f:	lea	rdx, [rip + 0xc22a]
0x5136:	lea	rcx, [rip + 0xc063]
0x513d:	lea	rsi, [rip + 0xc0dc]
0x5144:	jmp	0x5166


0x4ea0:	lea	rdx, [rip + 0xc019]
0x4ea7:	movsxd	rax, dword ptr [rdx + rax*4]
0x4eab:	add	rax, rdx
0x4eae:	jmp	rax


0x4ff0:	mov	rdi, qword ptr [rsp + 0x10]
0x4ff5:	lea	rax, [rbx*8]
0x4ffd:	mov	qword ptr [rsp + 0xd0], r14
0x5005:	mov	qword ptr [rsp + 0xd8], r10
0x500d:	mov	rcx, r12
0x5010:	sub	rax, rbx
0x5013:	movdqa	xmm0, xmmword ptr [rsp + 0xd0]
0x501c:	mov	qword ptr [rsp + 0xe0], rdi
0x5024:	mov	rdi, qword ptr [rsp + 8]
0x5029:	shl	rax, 3
0x502d:	sub	r13, rax
0x5030:	add	rbx, rbx
0x5033:	mov	rax, r13
0x5036:	sub	rcx, rbx
0x5039:	lea	r13, [r13 + 0x38]
0x503d:	mov	qword ptr [rsp + 0xe8], rdi
0x5045:	mov	rdi, qword ptr [rsp + 0x28]
0x504a:	movups	xmmword ptr [rax + 0x38], xmm0
0x504e:	mov	qword ptr [rsp + 0xf0], rdi
0x5056:	mov	rdi, qword ptr [rsp + 0x20]
0x505b:	movdqa	xmm0, xmmword ptr [rsp + 0xe0]
0x5064:	mov	qword ptr [rsp + 0xf8], rdi
0x506c:	mov	edi, dword ptr [rsp + 0x18]
0x5070:	movups	xmmword ptr [rax + 0x48], xmm0
0x5074:	mov	dword ptr [rsp + 0x100], edi
0x507b:	mov	rdx, qword ptr [rsp + 0x100]
0x5083:	movdqa	xmm0, xmmword ptr [rsp + 0xf0]
0x508c:	movsx	edi, word ptr [rcx]
0x508f:	mov	qword ptr [rax + 0x68], rdx
0x5093:	lea	rdx, [rip + 0xc226]
0x509a:	movups	xmmword ptr [rax + 0x58], xmm0
0x509e:	lea	rax, [rip + 0xc09b]
0x50a5:	mov	esi, edi
0x50a7:	movzx	eax, byte ptr [rax + rbp]
0x50ab:	sub	eax, 0x1c
0x50ae:	cdqe	
0x50b0:	movsx	edx, byte ptr [rdx + rax]
0x50b4:	add	edx, edi
0x50b6:	cmp	edx, 0x70
0x50b9:	ja	0x50d3


0x5460:	mov	rax, rdx
0x5463:	shl	rax, cl
0x5466:	movabs	rcx, 0x100003e00
0x5470:	test	rax, rcx
0x5473:	je	0x551a


0x54af:	lea	eax, [rsi - 0x2b]
0x54b2:	sub	ecx, 0x30
0x54b5:	and	eax, 0xfffffffd
0x54b8:	cmp	cl, 9
0x54bb:	ja	0x5520


0x5370:	xor	eax, eax
0x5372:	xor	r9d, r9d
0x5375:	cmp	r8d, 0x70
0x5379:	ja	0x4df0


0x4dc7:	cmp	r9d, 0x115
0x4dce:	jle	0x5420


0x2700:	jmp	qword ptr [rip + 0x2126aa]


0x2880:	jmp	qword ptr [rip + 0x2125ea]




0x441e:	lea	rdx, [r9 + 0x5a0]
0x4425:	xor	eax, eax
0x4427:	cmp	rdx, 0xb40
0x442e:	ja	0x443c


0x4410:	xor	edx, edx
0x4412:	add	r9, r8
0x4415:	seto	dl
0x4418:	xor	eax, eax
0x441a:	or	ecx, edx
0x441c:	jne	0x443c


0x4480:	xor	edx, edx
0x4482:	sub	r9, r8
0x4485:	seto	dl
0x4488:	jmp	0x4418


0x449e:	mov	rax, r9
0x44a1:	movabs	rdx, 0xa3d70a3d70a3d70b
0x44ab:	imul	rdx
0x44ae:	add	rdx, r9
0x44b1:	sar	r9, 0x3f
0x44b5:	sar	rdx, 6
0x44b9:	sub	rdx, r9
0x44bc:	mov	rax, rdx
0x44bf:	shl	rax, 4
0x44c3:	sub	rax, rdx
0x44c6:	lea	r9, [rcx + rax*4]
0x44ca:	jmp	0x441e


0x41a8:	mov	qword ptr [rdi + 0x48], r8
0x41ac:	mov	qword ptr [rdi + 0x50], 0
0x41b4:	jmp	0x40e8


0x40b0:	mov	rax, r8
0x40b3:	movabs	rdx, 0xa3d70a3d70a3d70b
0x40bd:	imul	rdx
0x40c0:	mov	rax, r8
0x40c3:	sar	rax, 0x3f
0x40c7:	add	rdx, r8
0x40ca:	sar	rdx, 6
0x40ce:	sub	rdx, rax
0x40d1:	lea	rax, [rdx + rdx*4]
0x40d5:	mov	qword ptr [rdi + 0x48], rdx
0x40d9:	lea	rax, [rax + rax*4]
0x40dd:	shl	rax, 2
0x40e1:	sub	r8, rax
0x40e4:	mov	qword ptr [rdi + 0x50], r8
0x40e8:	mov	qword ptr [rdi + 0x58], 0
0x40f0:	mov	qword ptr [rdi + 0x60], 0
0x40f8:	mov	dword ptr [rdi + 0x1c], 2
0x40ff:	ret	


0x4066:	cmp	qword ptr [rdi + 0xc8], 0
0x406e:	jne	0x407a


0x2720:	jmp	qword ptr [rip + 0x21269a]




0x2920:	jmp	qword ptr [rip + 0x21259a]


0x2b50:	jmp	qword ptr [rip + 0x2124a2]


0xeaa2:	jmp	0xeeda


0xeade:	lea	rax, [rbp + 1]
0xeae2:	cmp	bl, 0x27
0xeae5:	mov	rdx, rax
0xeae8:	jne	0xeab0


0xbb19:	add	rsp, 0x4c8
0xbb20:	pop	rbx
0xbb21:	pop	rbp
0xbb22:	pop	r12
0xbb24:	pop	r13
0xbb26:	pop	r14
0xbb28:	pop	r15
0xbb2a:	ret	


0xd4c5:	call	0x2830


0xbb91:	mov	byte ptr [rbp], 0
0xbb95:	jmp	0xbaff


0xbbe0:	mov	rdi, rdx
0xbbe3:	movabs	r11, 0x1000000000002500
0xbbed:	shl	rdi, cl
0xbbf0:	test	rdi, r11
0xbbf3:	jne	0xbc60


0xbc0c:	lea	edx, [rax - 0x30]
0xbc0f:	cmp	edx, 9
0xbc12:	jbe	0xbd70


0xbafc:	xor	r14d, r14d
0xbaff:	mov	rbx, qword ptr [rsp + 0x4b8]
0xbb07:	xor	rbx, qword ptr fs:[0x28]
0xbb10:	mov	rax, r14
0xbb13:	jne	0xd4c5


0xbb30:	test	rbp, rbp
0xbb33:	je	0xbb5c




0xafca:	mov	qword ptr [rsi], rcx
0xafcd:	imul	rcx, r9
0xafd1:	mov	rsi, rcx
0xafd4:	jmp	0xaf30


0x2830:	jmp	qword ptr [rip + 0x212612]




0x87d8:	imul	eax, dword ptr [rsi], 0x64
0x87db:	add	eax, dword ptr [rsi + 4]
0x87de:	sub	eax, 0x76c
0x87e3:	mov	dword ptr [rdi], eax
0x87e5:	mov	eax, 1
0x87ea:	jmp	0x879a


0x5590:	jne	0x512f


0x5129:	mov	r9d, 0xfffffffe
0x512f:	lea	rdx, [rip + 0xc22a]
0x5136:	lea	rcx, [rip + 0xc063]
0x513d:	lea	rsi, [rip + 0xc0dc]
0x5144:	jmp	0x5166


0x5166:	movsx	eax, byte ptr [rdx + rbx]
0x516a:	cmp	eax, -0x5d
0x516d:	je	0x5150


0x50bb:	lea	rdi, [rip + 0xc0de]
0x50c2:	movsxd	rdx, edx
0x50c5:	movsx	di, byte ptr [rdi + rdx]
0x50ca:	cmp	si, di
0x50cd:	je	0x5580


0x50d3:	lea	rdx, [rip + 0xc1c6]
0x50da:	movsx	rbx, byte ptr [rdx + rax]
0x50df:	lea	r12, [rcx + 2]
0x50e3:	lea	rax, [r15 + 0x26]
0x50e7:	mov	word ptr [rcx + 2], bx
0x50eb:	cmp	r12, rax
0x50ee:	jae	0x64b9


0x551a:	lea	eax, [rsi - 0x2b]
0x551d:	and	eax, 0xfffffffd
0x5520:	test	al, al
0x5522:	je	0x569c


0x5479:	lea	rax, [rdi + 1]
0x547d:	jmp	0x5499


0x54bd:	cmp	sil, 0x2d
0x54c1:	sete	cl
0x54c4:	test	al, al
0x54c6:	jne	0x64ca


0x5520:	test	al, al
0x5522:	je	0x569c


0x537f:	lea	rdx, [rip + 0xbe1a]
0x5386:	movsxd	r8, r8d
0x5389:	movsx	edx, byte ptr [rdx + r8]
0x538e:	cmp	edx, eax
0x5390:	jne	0x4df0


0x5420:	lea	rdx, [rip + 0xbfb9]
0x5427:	movsxd	rax, r9d
0x542a:	movzx	eax, byte ptr [rdx + rax]
0x542e:	add	r8d, eax
0x5431:	jmp	0x5375


0x4dd4:	add	r8d, 2
0x4dd8:	mov	eax, 2
0x4ddd:	cmp	r8d, 0x70
0x4de1:	jbe	0x537f






0x4430:	imul	r9d, r9d, 0x3c
0x4434:	mov	eax, 1
0x4439:	mov	dword ptr [rdi], r9d
0x443c:	ret	


0x443c:	ret	


0x4418:	xor	eax, eax
0x441a:	or	ecx, edx
0x441c:	jne	0x443c


0x40e8:	mov	qword ptr [rdi + 0x58], 0
0x40f0:	mov	qword ptr [rdi + 0x60], 0
0x40f8:	mov	dword ptr [rdi + 0x1c], 2
0x40ff:	ret	


0x4070:	cmp	r9, 2
0x4074:	jle	0x4198


0x407a:	mov	rax, qword ptr [rsp + 0x18]
0x407f:	mov	byte ptr [rdi + 0xd8], 1
0x4086:	movdqu	xmm0, xmmword ptr [rsp + 8]
0x408c:	mov	qword ptr [rdi + 0x30], rax
0x4090:	movups	xmmword ptr [rdi + 0x20], xmm0
0x4094:	ret	






0xeeda:	mov	rax, rbp
0xeedd:	nop	dword ptr [rax]
0xeee0:	add	rax, 1
0xeee4:	movzx	edx, byte ptr [rax]
0xeee7:	lea	ecx, [rdx - 0x30]
0xeeea:	cmp	cl, 9
0xeeed:	jbe	0xeee0


0xeaea:	or	dword ptr [r12 + 0x10], 1
0xeaf0:	jmp	0xead8


0xeab0:	cmp	bl, 0x2d
0xeab3:	je	0xeaf8


0xbbf5:	test	cl, cl
0xbbf7:	je	0xbc70


0xbc60:	mov	r15d, eax
0xbc63:	jmp	0xbbcc


0xbd70:	xor	r10d, r10d
0xbd73:	movsx	eax, byte ptr [rbx + 1]
0xbd77:	cmp	r10d, 0xccccccc
0xbd7e:	lea	rcx, [rbx + 1]
0xbd82:	mov	esi, eax
0xbd84:	lea	edx, [rax - 0x30]
0xbd87:	jg	0xbdb6


0xbc18:	cmp	sil, 0x45
0xbc1c:	je	0xbc48


0xbb5c:	add	r14, r12
0xbb5f:	mov	r12, rbx
0xbb62:	movzx	eax, byte ptr [r12 + 1]
0xbb68:	lea	rbx, [r12 + 1]
0xbb6d:	mov	r10, -1
0xbb74:	test	al, al
0xbb76:	jne	0xbace


0xbb35:	cmp	r10d, 1
0xbb39:	jle	0xbb52




0x5596:	jmp	0x5328


0x5150:	cmp	r12, r15
0x5153:	je	0x5328


0x516f:	add	eax, 1
0x5172:	cmp	eax, 0x70
0x5175:	ja	0x5150


0x5580:	lea	rax, [rip + 0xbc99]
0x5587:	movzx	ebx, byte ptr [rax + rdx]
0x558b:	jmp	0x50df


0x50f4:	cmp	ebx, 0xc
0x50f7:	je	0x64c3


0x64b9:	mov	eax, 2
0x64be:	jmp	0x532d


0x569c:	cmp	sil, 0x2d
0x56a0:	sete	cl
0x56a3:	jmp	0x54cc


0x5528:	lea	ecx, [r9 - 0x41]
0x552c:	cmp	ecx, 0x39
0x552f:	jbe	0x55a0


0x5499:	mov	qword ptr [r11], rax
0x549c:	movzx	r9d, byte ptr [rax]
0x54a0:	mov	rdi, rax
0x54a3:	cmp	r9b, 0x20
0x54a7:	mov	ecx, r9d
0x54aa:	mov	esi, r9d
0x54ad:	jbe	0x5480


0x54cc:	cmp	cl, 1
0x54cf:	mov	rax, qword ptr [r11]
0x54d2:	sbb	r9d, r9d
0x54d5:	and	r9d, 2
0x54d9:	sub	r9d, 1
0x54dd:	add	rax, 1
0x54e1:	mov	qword ptr [r11], rax
0x54e4:	movzx	ecx, byte ptr [rax]
0x54e7:	mov	rdi, rax
0x54ea:	cmp	cl, 0x20
0x54ed:	mov	esi, ecx
0x54ef:	ja	0x632c


0x64ca:	mov	rdi, qword ptr [r11]
0x64cd:	xor	r9d, r9d
0x64d0:	jmp	0x6337


0x5396:	lea	rax, [rip + 0xbe83]
0x539d:	movzx	ebp, byte ptr [rax + r8]
0x53a2:	test	ebp, ebp
0x53a4:	je	0x5690


0x5375:	cmp	r8d, 0x70
0x5379:	ja	0x4df0


0x4198:	mov	qword ptr [rdi + 0xc8], 1
0x41a3:	nop	dword ptr [rax + rax]
0x41a8:	mov	qword ptr [rdi + 0x48], r8
0x41ac:	mov	qword ptr [rdi + 0x50], 0
0x41b4:	jmp	0x40e8


0xeee0:	add	rax, 1
0xeee4:	movzx	edx, byte ptr [rax]
0xeee7:	lea	ecx, [rdx - 0x30]
0xeeea:	cmp	cl, 9
0xeeed:	jbe	0xeee0


0xeeef:	cmp	dl, 0x24
0xeef2:	mov	r13, r8
0xeef5:	jne	0xeade


0xead8:	movzx	ebx, byte ptr [rax]
0xeadb:	mov	rbp, rax
0xeade:	lea	rax, [rbp + 1]
0xeae2:	cmp	bl, 0x27
0xeae5:	mov	rdx, rax
0xeae8:	jne	0xeab0


0xeaf8:	or	dword ptr [r12 + 0x10], 2
0xeafe:	jmp	0xead8


0xeab5:	cmp	bl, 0x2b
0xeab8:	je	0xeb00


0xbc70:	mov	r8d, 1
0xbc76:	jmp	0xbbcc


0xbbf9:	movabs	rcx, 0x800000000000000
0xbc03:	test	rdi, rcx
0xbc06:	jne	0xbd60


0xbbcc:	add	rbx, 1
0xbbd0:	movsx	eax, byte ptr [rbx]
0xbbd3:	lea	ecx, [rax - 0x23]
0xbbd6:	mov	esi, eax
0xbbd8:	mov	r9d, eax
0xbbdb:	cmp	cl, 0x3c
0xbbde:	ja	0xbc0c


0xbd89:	movsx	edi, byte ptr [rbx]
0xbd8c:	je	0xbdb0


0xbdb6:	cmp	edx, 9
0xbdb9:	ja	0xbdd0


0xbc48:	movsx	r9d, byte ptr [rbx + 1]
0xbc4d:	mov	r11d, eax
0xbc50:	add	rbx, 1
0xbc54:	mov	esi, r9d
0xbc57:	jmp	0xbc27


0xbc1e:	xor	r11d, r11d
0xbc21:	cmp	sil, 0x4f
0xbc25:	je	0xbc48


0xbace:	cmp	al, 0x25
0xbad0:	je	0xbbb8


0xbb52:	movzx	eax, byte ptr [rbx]
0xbb55:	add	rbp, 1
0xbb59:	mov	byte ptr [rbp - 1], al
0xbb5c:	add	r14, r12
0xbb5f:	mov	r12, rbx
0xbb62:	movzx	eax, byte ptr [r12 + 1]
0xbb68:	lea	rbx, [r12 + 1]
0xbb6d:	mov	r10, -1
0xbb74:	test	al, al
0xbb76:	jne	0xbace


0xbb3b:	lea	r15, [r10 - 1]
0xbb3f:	mov	rdi, rbp
0xbb42:	mov	esi, 0x20
0xbb47:	mov	rdx, r15
0xbb4a:	add	rbp, r15
0xbb4d:	call	0x28f0


0x5328:	mov	eax, 1
0x532d:	mov	rdi, qword ptr [rsp + 0x5b8]
0x5335:	xor	rdi, qword ptr fs:[0x28]
0x533e:	jne	0x6830


0x5159:	sub	r12, 2
0x515d:	movsx	rbx, word ptr [r12]
0x5162:	sub	r13, 0x38
0x5166:	movsx	eax, byte ptr [rdx + rbx]
0x516a:	cmp	eax, -0x5d
0x516d:	je	0x5150


0x5177:	cdqe	
0x5179:	cmp	byte ptr [rcx + rax], 1
0x517d:	jne	0x5150


0x50df:	lea	r12, [rcx + 2]
0x50e3:	lea	rax, [r15 + 0x26]
0x50e7:	mov	word ptr [rcx + 2], bx
0x50eb:	cmp	r12, rax
0x50ee:	jae	0x64b9


0x64c3:	xor	eax, eax
0x64c5:	jmp	0x532d


0x50fd:	lea	rdx, [rip + 0xc25c]
0x5104:	movsxd	rax, ebx
0x5107:	movzx	r14d, byte ptr [rdx + rax]
0x510c:	jmp	0x4daa


0x532d:	mov	rdi, qword ptr [rsp + 0x5b8]
0x5335:	xor	rdi, qword ptr fs:[0x28]
0x533e:	jne	0x6830


0x55a0:	mov	rax, rdx
0x55a3:	shl	rax, cl
0x55a6:	test	rax, r10
0x55a9:	je	0x5531


0x5531:	cmp	sil, 0x28
0x5535:	jne	0x5356


0x5480:	mov	rsi, rdx
0x5483:	movabs	r14, 0x100003e00
0x548d:	add	rax, 1
0x5491:	shl	rsi, cl
0x5494:	test	rsi, r14
0x5497:	je	0x5518


0x54f5:	mov	rsi, rdx
0x54f8:	movabs	r14, 0x100003e00
0x5502:	add	rax, 1
0x5506:	shl	rsi, cl
0x5509:	test	rsi, r14
0x550c:	je	0x5455


0x632c:	lea	eax, [rcx - 0x30]
0x632f:	cmp	al, 9
0x6331:	ja	0x5455


0x6337:	xor	eax, eax
0x6339:	mov	rcx, rdi
0x633c:	mov	r14d, 0x30
0x6342:	mov	r10, rax
0x6345:	jmp	0x6363


0x5690:	mov	eax, 0x38
0x5695:	xor	ebx, ebx
0x5697:	jmp	0x4e2d


0x53aa:	mov	eax, dword ptr [rsp + 0x34]
0x53ae:	mov	rcx, r12
0x53b1:	movsxd	rbx, ebp
0x53b4:	mov	r9d, 0xfffffffe
0x53ba:	cmp	eax, 1
0x53bd:	adc	eax, -1
0x53c0:	add	r13, 0x38
0x53c4:	mov	dword ptr [rsp + 0x34], eax
0x53c8:	mov	rax, qword ptr [rsp + 0x38]
0x53cd:	mov	qword ptr [rsp + 0x98], rax
0x53d5:	mov	rax, qword ptr [rsp + 0x40]
0x53da:	movdqa	xmm0, xmmword ptr [rsp + 0x90]
0x53e3:	mov	qword ptr [rsp + 0xa0], rax
0x53eb:	mov	rax, qword ptr [rsp + 0xc0]
0x53f3:	movups	xmmword ptr [r13], xmm0
0x53f8:	movdqa	xmm0, xmmword ptr [rsp + 0xa0]
0x5401:	mov	qword ptr [r13 + 0x30], rax
0x5405:	movups	xmmword ptr [r13 + 0x10], xmm0
0x540a:	movdqa	xmm0, xmmword ptr [rsp + 0xb0]
0x5413:	movups	xmmword ptr [r13 + 0x20], xmm0
0x5418:	jmp	0x50df


0xeefb:	xor	edx, edx
0xeefd:	movsx	eax, bl
0xef00:	movabs	rdi, 0x1999999999999999
0xef0a:	mov	rsi, r8
0xef0d:	sub	eax, 0x30
0xef10:	cmp	rdx, rdi
0xef13:	cdqe	
0xef15:	ja	0xef1e


0xeb00:	or	dword ptr [r12 + 0x10], 4
0xeb06:	jmp	0xead8


0xeaba:	cmp	bl, 0x20
0xeabd:	je	0xeb10


0xbd60:	mov	byte ptr [rsp + 0x30], 1
0xbd65:	jmp	0xbbcc


0xbdb0:	cmp	dil, 0x37
0xbdb4:	jle	0xbd8e


0xbd8e:	lea	r9d, [r10 + r10*4]
0xbd92:	mov	rbx, rcx
0xbd95:	lea	r10d, [rdi + r9*2 - 0x30]
0xbd9a:	cmp	edx, 9
0xbd9d:	jbe	0xbd73


0xbdbb:	movsx	eax, byte ptr [rbx + 2]
0xbdbf:	mov	r10d, 0x7fffffff
0xbdc5:	add	rbx, 2
0xbdc9:	mov	esi, eax
0xbdcb:	lea	edx, [rax - 0x30]
0xbdce:	jmp	0xbd9a


0xbdd0:	mov	r9d, eax
0xbdd3:	mov	rbx, rcx
0xbdd6:	mov	r10d, 0x7fffffff
0xbddc:	jmp	0xbc18


0xbc27:	cmp	sil, 0x7a
0xbc2b:	ja	0xbc80


0x28f0:	jmp	qword ptr [rip + 0x2125b2]


0x5344:	add	rsp, 0x5c8
0x534b:	pop	rbx
0x534c:	pop	rbp
0x534d:	pop	r12
0x534f:	pop	r13
0x5351:	pop	r14
0x5353:	pop	r15
0x5355:	ret	


0x6830:	call	0x2830


0x517f:	movzx	ebx, byte ptr [rsi + rax]
0x5183:	test	ebx, ebx
0x5185:	je	0x5150


0x4daa:	movsx	r8d, r14b
0x4dae:	cmp	r8d, -0x5d
0x4db2:	je	0x4df0


0x55ab:	mov	rax, qword ptr [r11]
0x55ae:	lea	r14, [rsp + 0x5a0]
0x55b6:	mov	r10d, 1
0x55bc:	movabs	r9, 0x3ffffff03ffffff
0x55c6:	mov	rdx, r14
0x55c9:	lea	rdi, [r14 + 0x13]
0x55cd:	add	rax, 1
0x55d1:	jmp	0x55d7


0x553b:	mov	rsi, qword ptr [r11]
0x553e:	xor	ecx, ecx
0x5540:	jmp	0x555f


0x5356:	lea	rax, [rdi + 1]
0x535a:	mov	qword ptr [r11], rax
0x535d:	movzx	r9d, byte ptr [rdi]
0x5361:	test	r9d, r9d
0x5364:	jg	0x5420


0x5518:	mov	esi, ecx
0x551a:	lea	eax, [rsi - 0x2b]
0x551d:	and	eax, 0xfffffffd
0x5520:	test	al, al
0x5522:	je	0x569c


0x5455:	cmp	cl, 0x20
0x5458:	mov	esi, ecx
0x545a:	movzx	r9d, cl
0x545e:	ja	0x54af


0x5512:	jmp	0x54e1


0x6363:	imul	r10, r10, 0xa
0x6367:	jo	0x6387


0x4e2d:	add	rax, r13
0x4e30:	mov	rdi, qword ptr [rax + 0x10]
0x4e34:	mov	rdx, qword ptr [rax + 0x30]
0x4e38:	movdqu	xmm0, xmmword ptr [rax]
0x4e3c:	mov	r14, qword ptr [rax]
0x4e3f:	mov	r10, qword ptr [rax + 8]
0x4e43:	mov	qword ptr [rsp + 0x10], rdi
0x4e48:	mov	rdi, qword ptr [rax + 0x18]
0x4e4c:	movaps	xmmword ptr [rsp + 0xd0], xmm0
0x4e54:	mov	qword ptr [rsp + 0x100], rdx
0x4e5c:	mov	qword ptr [rsp + 8], rdi
0x4e61:	mov	rdi, qword ptr [rax + 0x20]
0x4e65:	movdqu	xmm0, xmmword ptr [rax + 0x10]
0x4e6a:	mov	qword ptr [rsp + 0x28], rdi
0x4e6f:	mov	rdi, qword ptr [rax + 0x28]
0x4e73:	movaps	xmmword ptr [rsp + 0xe0], xmm0
0x4e7b:	movdqu	xmm0, xmmword ptr [rax + 0x20]
0x4e80:	mov	eax, dword ptr [rax + 0x30]
0x4e83:	mov	qword ptr [rsp + 0x20], rdi
0x4e88:	movaps	xmmword ptr [rsp + 0xf0], xmm0
0x4e90:	mov	dword ptr [rsp + 0x18], eax
0x4e94:	lea	eax, [rbp - 4]
0x4e97:	cmp	eax, 0x57
0x4e9a:	ja	0x4ff0


0xef17:	lea	rsi, [rdx + rdx*4]
0xef1b:	add	rsi, rsi
0xef1e:	mov	rcx, rbp
0xef21:	add	rax, rsi
0xef24:	movzx	ebx, byte ptr [rbp + 1]
0xef28:	setb	sil
0xef2c:	add	rbp, 1
0xef30:	mov	rdx, rax
0xef33:	movzx	esi, sil
0xef37:	test	rsi, rsi
0xef3a:	lea	edi, [rbx - 0x30]
0xef3d:	jne	0xf2ce


0xef1e:	mov	rcx, rbp
0xef21:	add	rax, rsi
0xef24:	movzx	ebx, byte ptr [rbp + 1]
0xef28:	setb	sil
0xef2c:	add	rbp, 1
0xef30:	mov	rdx, rax
0xef33:	movzx	esi, sil
0xef37:	test	rsi, rsi
0xef3a:	lea	edi, [rbx - 0x30]
0xef3d:	jne	0xf2ce


0xeb10:	or	dword ptr [r12 + 0x10], 8
0xeb16:	jmp	0xead8


0xeabf:	cmp	bl, 0x23
0xeac2:	je	0xeb20


0xbd73:	movsx	eax, byte ptr [rbx + 1]
0xbd77:	cmp	r10d, 0xccccccc
0xbd7e:	lea	rcx, [rbx + 1]
0xbd82:	mov	esi, eax
0xbd84:	lea	edx, [rax - 0x30]
0xbd87:	jg	0xbdb6


0xbd9f:	mov	r9d, eax
0xbda2:	jmp	0xbc18


0xbd9a:	cmp	edx, 9
0xbd9d:	jbe	0xbd73


0xbc2d:	lea	rdx, [rip + 0x6190]
0xbc34:	movzx	eax, sil
0xbc38:	movsxd	rax, dword ptr [rdx + rax*4]
0xbc3c:	add	rax, rdx
0xbc3f:	jmp	rax


0xbc80:	lea	rax, [rbx - 1]
0xbc84:	mov	r8d, 1
0xbc8a:	mov	r9, rax
0xbc8d:	lea	rax, [rax - 1]
0xbc91:	add	r8d, 1
0xbc95:	cmp	byte ptr [rax + 1], 0x25
0xbc99:	jne	0xbc8a




0x5187:	mov	rax, qword ptr [rsp + 0x38]
0x518c:	add	r13, 0x38
0x5190:	mov	rcx, r12
0x5193:	mov	dword ptr [rsp + 0x34], 3
0x519b:	mov	qword ptr [rsp + 0x98], rax
0x51a3:	mov	rax, qword ptr [rsp + 0x40]
0x51a8:	movdqa	xmm0, xmmword ptr [rsp + 0x90]
0x51b1:	mov	qword ptr [rsp + 0xa0], rax
0x51b9:	mov	rax, qword ptr [rsp + 0xc0]
0x51c1:	movups	xmmword ptr [r13], xmm0
0x51c6:	movdqa	xmm0, xmmword ptr [rsp + 0xa0]
0x51cf:	mov	qword ptr [r13 + 0x30], rax
0x51d3:	movups	xmmword ptr [r13 + 0x10], xmm0
0x51d8:	movdqa	xmm0, xmmword ptr [rsp + 0xb0]
0x51e1:	movups	xmmword ptr [r13 + 0x20], xmm0
0x51e6:	jmp	0x50df


0x55d7:	cmp	rdx, rdi
0x55da:	jae	0x55e3


0x555f:	lea	rdi, [rsi + 1]
0x5563:	mov	qword ptr [r11], rdi
0x5566:	movzx	eax, byte ptr [rdi - 1]
0x556a:	test	al, al
0x556c:	je	0x5370


0x54e1:	mov	qword ptr [r11], rax
0x54e4:	movzx	ecx, byte ptr [rax]
0x54e7:	mov	rdi, rax
0x54ea:	cmp	cl, 0x20
0x54ed:	mov	esi, ecx
0x54ef:	ja	0x632c


0x6387:	mov	eax, 2
0x638c:	mov	r9d, 0x3f
0x6392:	jmp	0x542e


0x6369:	movzx	edx, sil
0x636d:	mov	esi, r14d
0x6370:	lea	eax, [rdx - 0x30]
0x6373:	sub	esi, edx
0x6375:	cmp	r9d, -1
0x6379:	cmovne	esi, eax
0x637c:	movsxd	rax, esi
0x637f:	add	rax, r10
0x6382:	mov	r10, rax
0x6385:	jno	0x6350


0xef43:	cmp	dil, 9
0xef47:	jbe	0xeefd


0xf2ce:	cmp	dil, 9
0xf2d2:	ja	0xf1db


0xeb20:	or	dword ptr [r12 + 0x10], 0x10
0xeb26:	jmp	0xead8


0xeac4:	cmp	bl, 0x30
0xeac7:	je	0xeb30


0xbc9b:	mov	rdx, qword ptr [rsp + 8]
0xbca0:	mov	eax, 0
0xbca5:	movsxd	r8, r8d
0xbca8:	mov	rcx, r8
0xbcab:	mov	r12, rbx
0xbcae:	sub	rdx, r14
0xbcb1:	test	r10d, r10d
0xbcb4:	cmovns	eax, r10d
0xbcb8:	cdqe	
0xbcba:	cmp	rax, r8
0xbcbd:	cmovae	rcx, rax
0xbcc1:	cmp	rcx, rdx
0xbcc4:	jae	0xbafc


0xbc8a:	mov	r9, rax
0xbc8d:	lea	rax, [rax - 1]
0xbc91:	add	r8d, 1
0xbc95:	cmp	byte ptr [rax + 1], 0x25
0xbc99:	jne	0xbc8a


0x55dc:	mov	byte ptr [rdx], sil
0x55df:	add	rdx, 1
0x55e3:	mov	qword ptr [r11], rax
0x55e6:	movzx	ecx, byte ptr [rax]
0x55e9:	mov	esi, ecx
0x55eb:	sub	ecx, 0x41
0x55ee:	cmp	ecx, 0x39
0x55f1:	ja	0x55fe


0x55e3:	mov	qword ptr [r11], rax
0x55e6:	movzx	ecx, byte ptr [rax]
0x55e9:	mov	esi, ecx
0x55eb:	sub	ecx, 0x41
0x55ee:	cmp	ecx, 0x39
0x55f1:	ja	0x55fe


0x5572:	cmp	al, 0x28
0x5574:	jne	0x5548


0x542e:	add	r8d, eax
0x5431:	jmp	0x5375


0x6350:	movzx	esi, byte ptr [rcx + 1]
0x6354:	lea	rbp, [rcx + 1]
0x6358:	lea	edx, [rsi - 0x30]
0x635b:	cmp	dl, 9
0x635e:	ja	0x6397


0xeefd:	movsx	eax, bl
0xef00:	movabs	rdi, 0x1999999999999999
0xef0a:	mov	rsi, r8
0xef0d:	sub	eax, 0x30
0xef10:	cmp	rdx, rdi
0xef13:	cdqe	
0xef15:	ja	0xef1e


0xef49:	mov	r13, rax
0xef4c:	sub	r13, 1
0xef50:	cmp	r13, -3
0xef54:	ja	0xf1db


0xf2d8:	movsx	eax, bl
0xf2db:	mov	rsi, r8
0xf2de:	mov	rcx, rbp
0xf2e1:	sub	eax, 0x30
0xf2e4:	cdqe	
0xf2e6:	jmp	0xef21


0xf1db:	mov	rcx, qword ptr [r15 + 8]
0xf1df:	cmp	qword ptr [rsp + 8], rcx
0xf1e4:	je	0xf1ee


0xeb30:	or	dword ptr [r12 + 0x10], 0x20
0xeb36:	jmp	0xead8


0xeac9:	cmp	bl, 0x49
0xeacc:	jne	0xeb40


0xbcca:	test	rbp, rbp
0xbccd:	je	0xbd55


0x55f3:	mov	rbp, r10
0x55f6:	shl	rbp, cl
0x55f9:	test	rbp, r9
0x55fc:	jne	0x55d3


0x55fe:	cmp	sil, 0x2e
0x5602:	je	0x55d3


0x5576:	add	rcx, 1
0x557a:	jmp	0x5553


0x5548:	cmp	al, 0x29
0x554a:	sete	al
0x554d:	movzx	eax, al
0x5550:	sub	rcx, rax
0x5553:	test	rcx, rcx
0x5556:	je	0x56a8


0x6360:	mov	rcx, rbp
0x6363:	imul	r10, r10, 0xa
0x6367:	jo	0x6387


0x6397:	and	esi, 0xfffffffd
0x639a:	mov	r10, rbp
0x639d:	mov	rdx, rax
0x63a0:	cmp	sil, 0x2c
0x63a4:	jne	0x6478


0xef5a:	lea	rbp, [rcx + 2]
0xef5e:	movzx	ebx, byte ptr [rcx + 2]
0xef62:	jmp	0xeade


0xef21:	add	rax, rsi
0xef24:	movzx	ebx, byte ptr [rbp + 1]
0xef28:	setb	sil
0xef2c:	add	rbp, 1
0xef30:	mov	rdx, rax
0xef33:	movzx	esi, sil
0xef37:	test	rsi, rsi
0xef3a:	lea	edi, [rbx - 0x30]
0xef3d:	jne	0xf2ce


0xf1ee:	mov	rdi, qword ptr [r14 + 8]
0xf1f2:	cmp	qword ptr [rsp + 0x28], rdi
0xf1f7:	je	0xf1fe


0xf1e6:	mov	rdi, rcx
0xf1e9:	call	0x2710


0xeace:	or	dword ptr [r12 + 0x10], 0x40
0xead4:	nop	dword ptr [rax]
0xead8:	movzx	ebx, byte ptr [rax]
0xeadb:	mov	rbp, rax
0xeade:	lea	rax, [rbp + 1]
0xeae2:	cmp	bl, 0x27
0xeae5:	mov	rdx, rax
0xeae8:	jne	0xeab0


0xeb40:	cmp	bl, 0x2a
0xeb43:	je	0xecf9


0xbd55:	add	r14, rcx
0xbd58:	jmp	0xbb62


0xbcd3:	cmp	rax, r8
0xbcd6:	jbe	0xbd25


0x55d3:	add	rax, 1
0x55d7:	cmp	rdx, rdi
0x55da:	jae	0x55e3


0x5604:	mov	byte ptr [rdx], 0
0x5607:	movzx	eax, byte ptr [rsp + 0x5a0]
0x560f:	test	al, al
0x5611:	je	0x5632


0x5553:	test	rcx, rcx
0x5556:	je	0x56a8


0x56a8:	movzx	ecx, byte ptr [rsi + 1]
0x56ac:	jmp	0x5455


0x555c:	mov	rsi, rdi
0x555f:	lea	rdi, [rsi + 1]
0x5563:	mov	qword ptr [r11], rdi
0x5566:	movzx	eax, byte ptr [rdi - 1]
0x556a:	test	al, al
0x556c:	je	0x5370


0x63aa:	movsx	eax, byte ptr [rbp + 1]
0x63ae:	lea	esi, [rax - 0x30]
0x63b1:	cmp	sil, 9
0x63b5:	ja	0x6478


0x6478:	mov	eax, r9d
0x647b:	mov	qword ptr [r11], r10
0x647e:	mov	qword ptr [rsp + 0x38], rdx
0x6483:	shr	eax, 0x1f
0x6486:	mov	byte ptr [rsp + 0x90], al
0x648d:	mov	rax, r10
0x6490:	sub	rax, rdi
0x6493:	cmp	r9d, 1
0x6497:	mov	qword ptr [rsp + 0x40], rax
0x649c:	sbb	eax, eax
0x649e:	not	eax
0x64a0:	add	eax, 0x14
0x64a3:	cmp	r9d, 1
0x64a7:	sbb	r9d, r9d
0x64aa:	not	r9d
0x64ad:	add	r9d, 0x113
0x64b4:	jmp	0x542e


0xf1fe:	call	0x2750


0xf1f9:	call	0x2710


0xecf9:	mov	rsi, qword ptr [rsp + 0x10]
0xecfe:	mov	ecx, 1
0xed03:	mov	qword ptr [r12 + 0x18], rbp
0xed08:	mov	qword ptr [r12 + 0x20], rax
0xed0d:	test	rsi, rsi
0xed10:	cmovne	rcx, rsi
0xed14:	mov	qword ptr [rsp + 0x10], rcx
0xed19:	movzx	ecx, byte ptr [rbp + 1]
0xed1d:	lea	esi, [rcx - 0x30]
0xed20:	cmp	sil, 9
0xed24:	jbe	0xf005


0xeb49:	lea	ecx, [rbx - 0x30]
0xeb4c:	cmp	cl, 9
0xeb4f:	jbe	0xef67


0xbb62:	movzx	eax, byte ptr [r12 + 1]
0xbb68:	lea	rbx, [r12 + 1]
0xbb6d:	mov	r10, -1
0xbb74:	test	al, al
0xbb76:	jne	0xbace


0xbd25:	cmp	byte ptr [rsp + 0x30], 0
0xbd2a:	mov	qword ptr [rsp + 0x38], rcx
0xbd2f:	mov	rdx, r8
0xbd32:	mov	qword ptr [rsp + 0x30], r8
0xbd37:	mov	rsi, r9
0xbd3a:	mov	rdi, rbp
0xbd3d:	je	0xcf10


0xbcd8:	movsxd	rdx, r10d
0xbcdb:	mov	qword ptr [rsp + 0x48], r8
0xbce0:	mov	qword ptr [rsp + 0x40], rcx
0xbce5:	sub	rdx, r8
0xbce8:	cmp	r15d, 0x30
0xbcec:	mov	qword ptr [rsp + 0x38], r9
0xbcf1:	lea	rbx, [rbp + rdx]
0xbcf6:	je	0xcf66


0x5632:	lea	rcx, [rip + 0x20f4a7]
0x5639:	lea	rsi, [rip + 0xab86]
0x5640:	mov	rbp, rcx
0x5643:	jmp	0x5656


0x5613:	mov	rdx, r14
0x5616:	movzx	ecx, al
0x5619:	sub	eax, 0x61
0x561c:	lea	esi, [rcx - 0x20]
0x561f:	cmp	al, 0x1a
0x5621:	cmovb	ecx, esi
0x5624:	add	rdx, 1
0x5628:	mov	byte ptr [rdx - 1], cl
0x562b:	movzx	eax, byte ptr [rdx]
0x562e:	test	al, al
0x5630:	jne	0x5616


0x63bb:	lea	rdi, [rcx + 3]
0x63bf:	movsx	ecx, byte ptr [rcx + 3]
0x63c3:	sub	eax, 0x30
0x63c6:	mov	r10d, 8
0x63cc:	lea	eax, [rax + rax*4]
0x63cf:	lea	esi, [rcx - 0x30]
0x63d2:	add	eax, eax
0x63d4:	cmp	sil, 9
0x63d8:	ja	0x63e5


0xf005:	mov	rsi, rax
0xf008:	add	rsi, 1
0xf00c:	movzx	edi, byte ptr [rsi]
0xf00f:	lea	r11d, [rdi - 0x30]
0xf013:	cmp	r11b, 9
0xf017:	jbe	0xf008


0xed2a:	mov	rsi, qword ptr [rsp + 0x20]
0xed2f:	cmp	rsi, -1
0xed33:	lea	rdx, [rsi + 1]
0xed37:	mov	qword ptr [r12 + 0x28], rsi
0xed3c:	je	0xf1db


0xef67:	mov	qword ptr [r12 + 0x18], rbp
0xef6c:	movzx	edi, byte ptr [rbp]
0xef70:	mov	rsi, rbp
0xef73:	lea	ecx, [rdi - 0x30]
0xef76:	cmp	cl, 9
0xef79:	jbe	0xef87


0xeb55:	cmp	bl, 0x2e
0xeb58:	je	0xee2f


0xcf10:	call	0x2970


0xbd43:	call	0xb9e0


0xcf66:	mov	rdi, rbp
0xcf69:	mov	esi, 0x30
0xcf6e:	mov	rbp, rbx
0xcf71:	call	0x28f0


0xbcfc:	cmp	r15d, 0x2b
0xbd00:	je	0xcf66


0x5656:	mov	rdi, r14
0x5659:	mov	qword ptr [rsp + 0x10], r11
0x565e:	mov	dword ptr [rsp + 8], r8d
0x5663:	call	0x2950


0x5616:	movzx	ecx, al
0x5619:	sub	eax, 0x61
0x561c:	lea	esi, [rcx - 0x20]
0x561f:	cmp	al, 0x1a
0x5621:	cmovb	ecx, esi
0x5624:	add	rdx, 1
0x5628:	mov	byte ptr [rdx - 1], cl
0x562b:	movzx	eax, byte ptr [rdx]
0x562e:	test	al, al
0x5630:	jne	0x5616


0x63da:	lea	eax, [rax + rcx - 0x30]
0x63de:	add	rdi, 1
0x63e2:	movsx	ecx, byte ptr [rdi]
0x63e5:	sub	r10d, 1
0x63e9:	jne	0x63cc


0x63e5:	sub	r10d, 1
0x63e9:	jne	0x63cc


0xf008:	add	rsi, 1
0xf00c:	movzx	edi, byte ptr [rsi]
0xf00f:	lea	r11d, [rdi - 0x30]
0xf013:	cmp	r11b, 9
0xf017:	jbe	0xf008


0xf019:	cmp	dil, 0x24
0xf01d:	jne	0xed2a


0xed42:	mov	rbx, qword ptr [rsp + 0x20]
0xed47:	mov	rbp, rax
0xed4a:	mov	qword ptr [rsp + 0x20], rdx
0xed4f:	cmp	r9, rbx
0xed52:	mov	rcx, qword ptr [r15 + 8]
0xed56:	ja	0xf3d2


0xef87:	movzx	edi, byte ptr [rax]
0xef8a:	lea	edx, [rdi - 0x30]
0xef8d:	cmp	dl, 9
0xef90:	jbe	0xef80


0xef7b:	jmp	0xefb0


0xee2f:	cmp	byte ptr [rbp + 1], 0x2a
0xee33:	mov	qword ptr [r12 + 0x30], rbp
0xee38:	jne	0xefbe


0xeb5e:	xor	eax, eax
0xeb60:	mov	esi, 1
0xeb65:	jmp	0xeb97


0x2970:	jmp	qword ptr [rip + 0x212572]


0xbd06:	mov	rdi, rbp
0xbd09:	mov	esi, 0x20
0xbd0e:	mov	rbp, rbx
0xbd11:	call	0x28f0


0x63eb:	cmp	r9d, -1
0x63ef:	jne	0x63ff


0x63cc:	lea	eax, [rax + rax*4]
0x63cf:	lea	esi, [rcx - 0x30]
0x63d2:	add	eax, eax
0x63d4:	cmp	sil, 9
0x63d8:	ja	0x63e5


0xf023:	xor	esi, esi
0xf025:	movsx	eax, cl
0xf028:	movabs	rdi, 0x1999999999999999
0xf032:	mov	rcx, r8
0xf035:	sub	eax, 0x30
0xf038:	cmp	rsi, rdi
0xf03b:	cdqe	
0xf03d:	ja	0xf046


0xed5c:	add	r9, r9
0xed5f:	lea	rax, [rbx + 1]
0xed63:	cmp	r9, rbx
0xed66:	cmovbe	r9, rax
0xed6a:	movabs	rax, 0x7ffffffffffffff
0xed74:	cmp	r9, rax
0xed77:	ja	0xf61b


0xf3d2:	mov	rax, qword ptr [r15]
0xf3d5:	jmp	0xedd7


0xef80:	mov	rbp, rax
0xef83:	add	rax, 1
0xef87:	movzx	edi, byte ptr [rax]
0xef8a:	lea	edx, [rdi - 0x30]
0xef8d:	cmp	dl, 9
0xef90:	jbe	0xef80


0xef92:	mov	rcx, rax
0xef95:	lea	rdx, [rbp + 2]
0xef99:	mov	rbp, rax
0xef9c:	sub	rcx, rsi
0xef9f:	mov	rsi, qword ptr [rsp + 0x10]
0xefa4:	cmp	rsi, rcx
0xefa7:	cmovae	rcx, rsi
0xefab:	mov	qword ptr [rsp + 0x10], rcx
0xefb0:	mov	qword ptr [r12 + 0x20], rbp
0xefb5:	movzx	ebx, byte ptr [rbp]
0xefb9:	jmp	0xeb55


0xefb0:	mov	qword ptr [r12 + 0x20], rbp
0xefb5:	movzx	ebx, byte ptr [rbp]
0xefb9:	jmp	0xeb55


0xee3e:	mov	rsi, qword ptr [rsp + 0x18]
0xee43:	lea	r11, [rbp + 2]
0xee47:	mov	eax, 2
0xee4c:	mov	qword ptr [r12 + 0x38], r11
0xee51:	cmp	rsi, 2
0xee55:	cmovae	rax, rsi
0xee59:	mov	qword ptr [rsp + 0x18], rax
0xee5e:	movsx	eax, byte ptr [rbp + 2]
0xee62:	lea	edx, [rax - 0x30]
0xee65:	cmp	dl, 9
0xee68:	jbe	0xf4fc


0xefbe:	movzx	eax, byte ptr [rbp + 1]
0xefc2:	sub	eax, 0x30
0xefc5:	cmp	al, 9
0xefc7:	ja	0xefde


0xeb97:	add	rbp, 1
0xeb9b:	cmp	bl, 0x68
0xeb9e:	jne	0xeb70




0x63f1:	jmp	0x6460


0x63ff:	sub	ecx, 0x30
0x6402:	cmp	cl, 9
0x6405:	jbe	0x63f8


0xf03f:	lea	rcx, [rsi + rsi*4]
0xf043:	add	rcx, rcx
0xf046:	mov	rbp, rdx
0xf049:	xor	r11d, r11d
0xf04c:	add	rax, rcx
0xf04f:	movzx	ecx, byte ptr [rdx + 1]
0xf053:	setb	r11b
0xf057:	add	rdx, 1
0xf05b:	mov	rsi, rax
0xf05e:	test	r11, r11
0xf061:	lea	edi, [rcx - 0x30]
0xf064:	jne	0xf56e


0xf046:	mov	rbp, rdx
0xf049:	xor	r11d, r11d
0xf04c:	add	rax, rcx
0xf04f:	movzx	ecx, byte ptr [rdx + 1]
0xf053:	setb	r11b
0xf057:	add	rdx, 1
0xf05b:	mov	rsi, rax
0xf05e:	test	r11, r11
0xf061:	lea	edi, [rcx - 0x30]
0xf064:	jne	0xf56e


0xed7d:	mov	rsi, r9
0xed80:	mov	qword ptr [rsp + 0x40], r9
0xed85:	mov	qword ptr [rsp + 0x38], r10
0xed8a:	shl	rsi, 5
0xed8e:	cmp	qword ptr [rsp + 8], rcx
0xed93:	mov	qword ptr [rsp + 0x30], r8
0xed98:	je	0xf4b1


0xf61b:	cmp	qword ptr [rsp + 8], rcx
0xf620:	jne	0xf484


0xedd7:	mov	rdx, rax
0xedda:	shl	rdx, 5
0xedde:	add	rdx, rcx
0xede1:	cmp	rax, rbx
0xede4:	ja	0xee06


0xf4fc:	mov	rdx, r11
0xf4ff:	add	rdx, 1
0xf503:	movzx	ecx, byte ptr [rdx]
0xf506:	lea	esi, [rcx - 0x30]
0xf509:	cmp	sil, 9
0xf50d:	jbe	0xf4ff


0xee6e:	mov	rbx, qword ptr [r12 + 0x40]
0xee73:	cmp	rbx, -1
0xee77:	je	0xf4d5


0xefde:	mov	rsi, qword ptr [rsp + 0x18]
0xefe3:	mov	rax, rdx
0xefe6:	mov	qword ptr [r12 + 0x38], rdx
0xefeb:	sub	rax, rbp
0xefee:	movzx	ebx, byte ptr [rdx]
0xeff1:	mov	rbp, rdx
0xeff4:	cmp	rsi, rax
0xeff7:	cmovae	rax, rsi
0xeffb:	mov	qword ptr [rsp + 0x18], rax
0xf000:	jmp	0xeb5e


0xeba0:	mov	ecx, eax
0xeba2:	mov	edx, esi
0xeba4:	and	ecx, 1
0xeba7:	shl	edx, cl
0xeba9:	or	eax, edx
0xebab:	jmp	0xeb93


0xeb70:	cmp	bl, 0x4c
0xeb73:	je	0xebb0


0x6460:	lea	esi, [rcx - 0x30]
0x6463:	cmp	sil, 9
0x6467:	ja	0x63ff


0x63f8:	add	rdi, 1
0x63fc:	movzx	ecx, byte ptr [rdi]
0x63ff:	sub	ecx, 0x30
0x6402:	cmp	cl, 9
0x6405:	jbe	0x63f8


0x6407:	test	r9d, r9d
0x640a:	jns	0x64d5


0xf06a:	cmp	dil, 9
0xf06e:	jbe	0xf025


0xf56e:	cmp	dil, 9
0xf572:	ja	0xf1db


0xf4b1:	mov	rdi, rsi
0xf4b4:	call	0x29d0


0xed9e:	mov	rdi, rcx
0xeda1:	call	0x2a20


0xf626:	jmp	0xf48c


0xf484:	mov	rdi, rcx
0xf487:	call	0x2710


0xee06:	shl	rbx, 5
0xee0a:	lea	rax, [rcx + rbx]
0xee0e:	mov	edx, dword ptr [rax]
0xee10:	test	edx, edx
0xee12:	jne	0xf2eb


0xf4ff:	add	rdx, 1
0xf503:	movzx	ecx, byte ptr [rdx]
0xf506:	lea	esi, [rcx - 0x30]
0xf509:	cmp	sil, 9
0xf50d:	jbe	0xf4ff


0xf50f:	cmp	cl, 0x24
0xf512:	jne	0xee6e


0xf4d5:	mov	rsi, qword ptr [rsp + 0x20]
0xf4da:	cmp	rsi, -1
0xf4de:	lea	rax, [rsi + 1]
0xf4e2:	mov	qword ptr [r12 + 0x40], rsi
0xf4e7:	je	0xf1db


0xee7d:	cmp	r9, rbx
0xee80:	mov	rcx, qword ptr [r15 + 8]
0xee84:	jbe	0xf3ef


0xefd0:	add	rdx, 1
0xefd4:	movzx	eax, byte ptr [rdx]
0xefd7:	sub	eax, 0x30
0xefda:	cmp	al, 9
0xefdc:	jbe	0xefd0


0xeb93:	movzx	ebx, byte ptr [rbp]
0xeb97:	add	rbp, 1
0xeb9b:	cmp	bl, 0x68
0xeb9e:	jne	0xeb70


0xebb0:	or	eax, 4
0xebb3:	jmp	0xeb93


0xeb75:	cmp	bl, 0x6c
0xeb78:	je	0xeb90


0x6469:	cmp	cl, 0x30
0x646c:	je	0x6459


0x6410:	test	eax, eax
0x6412:	je	0x64d5


0x64d5:	cmp	r9d, 1
0x64d9:	cdqe	
0x64db:	mov	qword ptr [rsp + 0x90], rdx
0x64e3:	mov	qword ptr [rsp + 0x38], rax
0x64e8:	sbb	eax, eax
0x64ea:	mov	qword ptr [r11], rdi
0x64ed:	not	eax
0x64ef:	add	eax, 0x16
0x64f2:	cmp	r9d, 1
0x64f6:	sbb	r9d, r9d
0x64f9:	not	r9d
0x64fc:	add	r9d, 0x115
0x6503:	jmp	0x542e


0xf025:	movsx	eax, cl
0xf028:	movabs	rdi, 0x1999999999999999
0xf032:	mov	rcx, r8
0xf035:	sub	eax, 0x30
0xf038:	cmp	rsi, rdi
0xf03b:	cdqe	
0xf03d:	ja	0xf046


0xf070:	lea	rbx, [rax - 1]
0xf074:	cmp	rbx, -3
0xf078:	ja	0xf1db


0xf578:	movsx	eax, cl
0xf57b:	mov	rbp, rdx
0xf57e:	mov	rcx, r8
0xf581:	sub	eax, 0x30
0xf584:	cdqe	
0xf586:	jmp	0xf049


0xf48c:	mov	rdi, qword ptr [r14 + 8]
0xf490:	cmp	qword ptr [rsp + 0x28], rdi
0xf495:	je	0xf49c


0xedf0:	add	rax, 1
0xedf4:	mov	dword ptr [rdx], 0
0xedfa:	add	rdx, 0x20
0xedfe:	cmp	rax, rbx
0xee01:	jbe	0xedf0


0xee03:	mov	qword ptr [r15], rax
0xee06:	shl	rbx, 5
0xee0a:	lea	rax, [rcx + rbx]
0xee0e:	mov	edx, dword ptr [rax]
0xee10:	test	edx, edx
0xee12:	jne	0xf2eb


0xee18:	mov	dword ptr [rax], 5
0xee1e:	movzx	ebx, byte ptr [rbp]
0xee22:	lea	rdx, [rbp + 1]
0xee26:	cmp	bl, 0x2e
0xee29:	jne	0xeb5e


0xf2eb:	cmp	edx, 5
0xf2ee:	jne	0xf1df


0xf518:	xor	ecx, ecx
0xf51a:	movabs	rsi, 0x1999999999999999
0xf524:	sub	eax, 0x30
0xf527:	mov	rdx, r8
0xf52a:	cmp	rcx, rsi
0xf52d:	cdqe	
0xf52f:	ja	0xf538


0xf4ed:	mov	rbx, qword ptr [rsp + 0x20]
0xf4f2:	mov	qword ptr [rsp + 0x20], rax
0xf4f7:	jmp	0xee7d


0xf3ef:	add	r9, r9
0xf3f2:	lea	rax, [rbx + 1]
0xf3f6:	cmp	r9, rbx
0xf3f9:	cmovbe	r9, rax
0xf3fd:	movabs	rax, 0x7ffffffffffffff
0xf407:	cmp	r9, rax
0xf40a:	ja	0xf61b


0xee8a:	mov	rax, qword ptr [r15]
0xee8d:	mov	rdx, rax
0xee90:	shl	rdx, 5
0xee94:	add	rdx, rcx
0xee97:	cmp	rax, rbx
0xee9a:	ja	0xeeb6


0xeb90:	add	eax, 8
0xeb93:	movzx	ebx, byte ptr [rbp]
0xeb97:	add	rbp, 1
0xeb9b:	cmp	bl, 0x68
0xeb9e:	jne	0xeb70


0xeb7a:	cmp	bl, 0x6a
0xeb7d:	je	0xeb90


0x6459:	add	rdi, 1
0x645d:	movzx	ecx, byte ptr [rdi]
0x6460:	lea	esi, [rcx - 0x30]
0x6463:	cmp	sil, 9
0x6467:	ja	0x63ff


0x646e:	add	eax, 1
0x6471:	jmp	0x63ff


0x6418:	movabs	rcx, 0x8000000000000000
0x6422:	cmp	rdx, rcx
0x6425:	je	0x6387


0xf07e:	mov	qword ptr [r12 + 0x28], rbx
0xf083:	add	rbp, 2
0xf087:	jmp	0xed4f


0xf049:	xor	r11d, r11d
0xf04c:	add	rax, rcx
0xf04f:	movzx	ecx, byte ptr [rdx + 1]
0xf053:	setb	r11b
0xf057:	add	rdx, 1
0xf05b:	mov	rsi, rax
0xf05e:	test	r11, r11
0xf061:	lea	edi, [rcx - 0x30]
0xf064:	jne	0xf56e


0xf49c:	call	0x2750


0xf497:	call	0x2710


0xf2f4:	movzx	ebx, byte ptr [rbp]
0xf2f8:	lea	rdx, [rbp + 1]
0xf2fc:	jmp	0xeb55


0xf1df:	cmp	qword ptr [rsp + 8], rcx
0xf1e4:	je	0xf1ee


0xf531:	lea	rdx, [rcx + rcx*4]
0xf535:	add	rdx, rdx
0xf538:	mov	rsi, r11
0xf53b:	xor	ebx, ebx
0xf53d:	add	rdx, rax
0xf540:	movsx	eax, byte ptr [r11 + 1]
0xf545:	setb	bl
0xf548:	add	r11, 1
0xf54c:	mov	rcx, rdx
0xf54f:	test	rbx, rbx
0xf552:	lea	edi, [rax - 0x30]
0xf555:	je	0xf5c8


0xf538:	mov	rsi, r11
0xf53b:	xor	ebx, ebx
0xf53d:	add	rdx, rax
0xf540:	movsx	eax, byte ptr [r11 + 1]
0xf545:	setb	bl
0xf548:	add	r11, 1
0xf54c:	mov	rcx, rdx
0xf54f:	test	rbx, rbx
0xf552:	lea	edi, [rax - 0x30]
0xf555:	je	0xf5c8


0xf410:	mov	rsi, r9
0xf413:	mov	qword ptr [rsp + 0x48], r9
0xf418:	mov	qword ptr [rsp + 0x40], r10
0xf41d:	shl	rsi, 5
0xf421:	cmp	qword ptr [rsp + 8], rcx
0xf426:	mov	qword ptr [rsp + 0x38], r8
0xf42b:	mov	qword ptr [rsp + 0x30], r11
0xf430:	je	0xf5ee


0xeeb6:	shl	rbx, 5
0xeeba:	lea	rax, [rcx + rbx]
0xeebe:	mov	edx, dword ptr [rax]
0xeec0:	test	edx, edx
0xeec2:	jne	0xf3da


0xeb7f:	mov	edx, ebx
0xeb81:	and	edx, 0xffffffdf
0xeb84:	cmp	dl, 0x5a
0xeb87:	je	0xeb90


0x642b:	sub	rdx, 1
0x642f:	mov	qword ptr [r11], rdi
0x6432:	mov	r9d, 0x114
0x6438:	mov	qword ptr [rsp + 0x90], rdx
0x6440:	mov	edx, 0x3b9aca00
0x6445:	sub	edx, eax
0x6447:	movsxd	rax, edx
0x644a:	mov	qword ptr [rsp + 0x38], rax
0x644f:	mov	eax, 0x15
0x6454:	jmp	0x542e


0xed4f:	cmp	r9, rbx
0xed52:	mov	rcx, qword ptr [r15 + 8]
0xed56:	ja	0xf3d2


0xf5c8:	cmp	dil, 9
0xf5cc:	jbe	0xf51a


0xf557:	cmp	dil, 9
0xf55b:	ja	0xf1db


0xf5ee:	mov	rdi, rsi
0xf5f1:	call	0x29d0


0xf436:	mov	rdi, rcx
0xf439:	call	0x2a20


0xeea0:	add	rax, 1
0xeea4:	mov	dword ptr [rdx], 0
0xeeaa:	add	rdx, 0x20
0xeeae:	cmp	rax, rbx
0xeeb1:	jbe	0xeea0


0xeeb3:	mov	qword ptr [r15], rax
0xeeb6:	shl	rbx, 5
0xeeba:	lea	rax, [rcx + rbx]
0xeebe:	mov	edx, dword ptr [rax]
0xeec0:	test	edx, edx
0xeec2:	jne	0xf3da


0xeec8:	mov	dword ptr [rax], 5
0xeece:	mov	rbp, r11
0xeed1:	movzx	ebx, byte ptr [r11]
0xeed5:	jmp	0xeb5e


0xf3da:	cmp	edx, 5
0xf3dd:	jne	0xf1df


0xeb89:	cmp	bl, 0x74
0xeb8c:	jne	0xebb8


0xf51a:	movabs	rsi, 0x1999999999999999
0xf524:	sub	eax, 0x30
0xf527:	mov	rdx, r8
0xf52a:	cmp	rcx, rsi
0xf52d:	cdqe	
0xf52f:	ja	0xf538


0xf5d2:	lea	rbx, [rdx - 1]
0xf5d6:	cmp	rbx, -3
0xf5da:	ja	0xf1db


0xf561:	sub	eax, 0x30
0xf564:	mov	rdx, r8
0xf567:	mov	rsi, r11
0xf56a:	cdqe	
0xf56c:	jmp	0xf53b


0xf3e3:	movzx	ebx, byte ptr [r11]
0xf3e7:	mov	rbp, r11
0xf3ea:	jmp	0xeb5e


0xebb8:	lea	edx, [rbx - 0x25]
0xebbb:	cmp	dl, 0x53
0xebbe:	ja	0xf1db


0xf5e0:	mov	qword ptr [r12 + 0x40], rbx
0xf5e5:	lea	r11, [rsi + 2]
0xf5e9:	jmp	0xee7d


0xf53b:	xor	ebx, ebx
0xf53d:	add	rdx, rax
0xf540:	movsx	eax, byte ptr [r11 + 1]
0xf545:	setb	bl
0xf548:	add	r11, 1
0xf54c:	mov	rcx, rdx
0xf54f:	test	rbx, rbx
0xf552:	lea	edi, [rax - 0x30]
0xf555:	je	0xf5c8


0xebc4:	lea	rcx, [rip + 0x34d1]
0xebcb:	movzx	edx, dl
0xebce:	movsxd	rdx, dword ptr [rcx + rdx*4]
0xebd2:	add	rdx, rcx
0xebd5:	jmp	rdx


0xbd48:	mov	r8, qword ptr [rsp + 0x30]
0xbd4d:	mov	rcx, qword ptr [rsp + 0x38]
0xbd52:	add	rbp, r8
0xbd55:	add	r14, rcx
0xbd58:	jmp	0xbb62


0x3618:	mov	byte ptr [rip + 0x211ac9], 1
0x361f:	pop	rbp
0x3620:	ret	


0xd520:	add	rsp, 0x20
0xd524:	mov	rdx, qword ptr [rsp + 8]
0xd529:	xor	rdx, qword ptr fs:[0x28]
0xd532:	jne	0xd539


0xd534:	add	rsp, 0x18
0xd538:	ret	


0xd539:	call	0x2830


0x47eb:	test	r12, r12
0x47ee:	je	0x4803


0x4803:	mov	rdx, qword ptr [rsp + 0x28]
0x4808:	xor	rdx, qword ptr fs:[0x28]
0x4811:	mov	rax, rbx
0x4814:	jne	0x485c


0x47f0:	cmp	eax, 0x63
0x47f3:	mov	rbp, rax
0x47f6:	jg	0x4803


0x4816:	add	rsp, 0x30
0x481a:	pop	rbx
0x481b:	pop	rbp
0x481c:	pop	r12
0x481e:	ret	


0x485c:	call	0x2830


0x47f8:	cmp	qword ptr [r12 + 0xd0], 0
0x4801:	jne	0x4820


0x4820:	mov	edi, dword ptr [r12 + 0x18]
0x4825:	mov	rsi, rsp
0x4828:	call	0x41c0


0xd6ce:	test	eax, eax
0xd6d0:	js	0xe538


0xe538:	xor	r15d, r15d
0xe53b:	jmp	0xd84f


0xd6d6:	mov	rsi, r14
0xd6d9:	mov	rdi, r12
0xd6dc:	call	0xe790


0xd84f:	mov	rdi, qword ptr [rbp - 0x38]
0xd853:	xor	rdi, qword ptr fs:[0x28]
0xd85c:	mov	rax, r15
0xd85f:	jne	0xe767


0xd865:	lea	rsp, [rbp - 0x28]
0xd869:	pop	rbx
0xd86a:	pop	r12
0xd86c:	pop	r13
0xd86e:	pop	r14
0xd870:	pop	r15
0xd872:	pop	rbp
0xd873:	ret	


0xe767:	call	0x2830


0xd6e1:	test	eax, eax
0xd6e3:	js	0xe5a0


0xe5a0:	mov	rax, qword ptr [rbp - 0x408]
0xe5a7:	mov	rdi, qword ptr [rbp - 0x2b8]
0xe5ae:	add	rax, 0x20
0xe5b2:	cmp	rdi, rax
0xe5b5:	je	0xe5bc


0xd6e9:	mov	rax, qword ptr [rbp - 0x2b0]
0xd6f0:	mov	rdx, -1
0xd6f7:	add	rax, 7
0xd6fb:	cmp	rax, 6
0xd6ff:	cmovbe	rax, rdx
0xd703:	add	rax, qword ptr [rbp - 0x2a8]
0xd70a:	jb	0xe138


0xe5bc:	mov	rax, qword ptr [rbp - 0x410]
0xe5c3:	mov	rdi, qword ptr [rbp - 0x3a8]
0xe5ca:	add	rax, 0x10
0xe5ce:	cmp	rdi, rax
0xe5d1:	je	0xe5d8


0xe5b7:	call	0x2710


0xe138:	call	0x2750


0xd710:	mov	rdi, rax
0xd713:	xor	r8d, r8d
0xd716:	add	rdi, 6
0xd71a:	setb	r8b
0xd71e:	jb	0xe138


0xe5d8:	call	0x2750


0xe5d3:	call	0x2710


0xd724:	cmp	rdi, 0xf9f
0xd72b:	jbe	0xd878


0xd878:	add	rax, 0x24
0xd87c:	mov	qword ptr [rbp - 0x420], 0
0xd887:	and	rax, 0xfffffffffffffff0
0xd88b:	sub	rsp, rax
0xd88e:	lea	rax, [rsp + 0xf]
0xd893:	and	rax, 0xfffffffffffffff0
0xd897:	mov	qword ptr [rbp - 0x3d8], rax
0xd89e:	jmp	0xd765


0xd731:	cmp	rdi, -1
0xd735:	mov	qword ptr [rbp - 0x3c8], r8
0xd73c:	je	0xe138


0xd765:	xor	r12d, r12d
0xd768:	cmp	qword ptr [rbp - 0x3e8], 0
0xd770:	je	0xd77c


0xd742:	call	0x29d0


0xd77c:	mov	r13, qword ptr [rbp - 0x2b8]
0xd783:	lea	rax, [rbp - 0x3bc]
0xd78a:	mov	r15, qword ptr [rbp - 0x3e8]
0xd791:	mov	qword ptr [rbp - 0x400], 0
0xd79c:	mov	qword ptr [rbp - 0x3f0], rax
0xd7a3:	mov	rax, rbx
0xd7a6:	mov	rbx, r8
0xd7a9:	mov	rcx, qword ptr [r13]
0xd7ad:	mov	r8, rax
0xd7b0:	cmp	rcx, r8
0xd7b3:	je	0xe121


0xd772:	mov	rax, qword ptr [rbp - 0x418]
0xd779:	mov	r12, qword ptr [rax]
0xd77c:	mov	r13, qword ptr [rbp - 0x2b8]
0xd783:	lea	rax, [rbp - 0x3bc]
0xd78a:	mov	r15, qword ptr [rbp - 0x3e8]
0xd791:	mov	qword ptr [rbp - 0x400], 0
0xd79c:	mov	qword ptr [rbp - 0x3f0], rax
0xd7a3:	mov	rax, rbx
0xd7a6:	mov	rbx, r8
0xd7a9:	mov	rcx, qword ptr [r13]
0xd7ad:	mov	r8, rax
0xd7b0:	cmp	rcx, r8
0xd7b3:	je	0xe121


0xe121:	mov	r14, rbx
0xe124:	jmp	0xd923


0xd7b9:	sub	rcx, r8
0xd7bc:	mov	rax, rbx
0xd7bf:	add	rax, rcx
0xd7c2:	mov	r14, rax
0xd7c5:	jae	0xd8a8


0xd923:	mov	rax, qword ptr [rbp - 0x400]
0xd92a:	cmp	qword ptr [rbp - 0x2c0], rax
0xd931:	je	0xe5eb


0xd7cb:	cmp	r12, -1
0xd7cf:	je	0xe2a0


0xd8a8:	cmp	r12, rax
0xd8ab:	jae	0xd914


0xe5eb:	mov	rbx, r14
0xe5ee:	xor	eax, eax
0xe5f0:	add	rbx, 1
0xe5f4:	jb	0xe700


0xd937:	movzx	edx, byte ptr [r13 + 0x48]
0xd93c:	mov	rax, qword ptr [r13 + 0x50]
0xd940:	cmp	dl, 0x25
0xd943:	je	0xe0d8


0xe2a0:	mov	r14, r12
0xe2a3:	jmp	0xd914


0xd7d5:	call	0x2750


0xd8ad:	test	r12, r12
0xd8b0:	jne	0xe1e0


0xd914:	lea	rdi, [r15 + rbx]
0xd918:	mov	rdx, rcx
0xd91b:	mov	rsi, r8
0xd91e:	call	0x2970


0xe700:	cmp	r12, -1
0xe704:	mov	eax, 1
0xe709:	je	0xe64c


0xe5fa:	cmp	r12, rbx
0xe5fd:	jae	0xe64c


0xe0d8:	cmp	rax, -1
0xe0dc:	jne	0xe596


0xd949:	cmp	rax, -1
0xd94d:	je	0xe596


0xd8b6:	cmp	rax, 0xc
0xd8ba:	ja	0xe1f2


0xe1e0:	js	0xd7d5


0xe64c:	cmp	r15, qword ptr [rbp - 0x3e8]
0xe653:	mov	byte ptr [r15 + r14], 0
0xe658:	je	0xe671


0xe70f:	test	r12, r12
0xe712:	je	0xd7d5


0xe5ff:	test	r12, r12
0xe602:	jne	0xe739


0xe0e2:	mov	rax, r14
0xe0e5:	add	rax, 1
0xe0e9:	mov	rbx, rax
0xe0ec:	jae	0xe178


0xe596:	call	0x2740


0xd953:	mov	r8, qword ptr [rbp - 0x3a8]
0xd95a:	shl	rax, 5
0xd95e:	add	rax, r8
0xd961:	cmp	dl, 0x6e
0xd964:	mov	edi, dword ptr [rax]
0xd966:	mov	dword ptr [rbp - 0x3d0], edi
0xd96c:	je	0xe150


0xd8c0:	mov	r12d, 0xc
0xd8c6:	cmp	r15, qword ptr [rbp - 0x3e8]
0xd8cd:	sete	dl
0xd8d0:	test	r15, r15
0xd8d3:	je	0xe218


0xe1f2:	cmp	rax, -1
0xe1f6:	je	0xd7d5


0xe1e6:	add	r12, r12
0xe1e9:	cmp	r12, rax
0xe1ec:	jae	0xd8c6


0xe671:	mov	rax, qword ptr [rbp - 0x420]
0xe678:	test	rax, rax
0xe67b:	je	0xe685


0xe65a:	cmp	r12, rbx
0xe65d:	jbe	0xe671


0xe718:	js	0xd7d5


0xe608:	cmp	rbx, 0xc
0xe60c:	ja	0xe71e


0xe739:	js	0xd7d5


0xe0f2:	cmp	r12, -1
0xe0f6:	jne	0xd7d5


0xe178:	cmp	r12, rax
0xe17b:	jae	0xe0ff


0xe150:	mov	edx, edi
0xe152:	sub	edx, 0x12
0xe155:	cmp	edx, 4
0xe158:	ja	0xe596


0xd972:	mov	eax, dword ptr [r13 + 0x10]
0xd976:	mov	rdi, qword ptr [rbp - 0x3d8]
0xd97d:	test	al, 1
0xd97f:	mov	byte ptr [rdi], 0x25
0xd982:	lea	rbx, [rdi + 1]
0xd986:	je	0xd997


0xe218:	mov	rdi, r12
0xe21b:	mov	qword ptr [rbp - 0x3e0], r8
0xe222:	mov	byte ptr [rbp - 0x3d0], dl
0xe228:	mov	qword ptr [rbp - 0x3c8], rcx
0xe22f:	call	0x29d0


0xd8d9:	test	dl, dl
0xd8db:	jne	0xe218


0xe1fc:	cmp	r15, qword ptr [rbp - 0x3e8]
0xe203:	mov	r12, rax
0xe206:	sete	dl
0xe209:	test	r15, r15
0xe20c:	jne	0xd8d9


0xd8c6:	cmp	r15, qword ptr [rbp - 0x3e8]
0xd8cd:	sete	dl
0xd8d0:	test	r15, r15
0xd8d3:	je	0xe218


0xe685:	mov	rax, qword ptr [rbp - 0x408]
0xe68c:	mov	rdi, qword ptr [rbp - 0x2b8]
0xe693:	add	rax, 0x20
0xe697:	cmp	rdi, rax
0xe69a:	je	0xe6a1


0xe67d:	mov	rdi, rax
0xe680:	call	0x2710


0xe65f:	mov	rdi, r15
0xe662:	mov	rsi, rbx
0xe665:	call	0x2a20


0xe71e:	test	rax, rax
0xe721:	jne	0xd7d5


0xe612:	mov	r12d, 0xc
0xe618:	cmp	r15, qword ptr [rbp - 0x3e8]
0xe61f:	sete	r13b
0xe623:	test	r15, r15
0xe626:	je	0xe6cc


0xe73f:	add	r12, r12
0xe742:	cmp	r12, rbx
0xe745:	jae	0xe618


0xe0fc:	mov	rbx, r12
0xe0ff:	mov	byte ptr [r15 + r14], 0x25
0xe104:	mov	r8, qword ptr [r13 + 8]
0xe108:	add	r13, 0x58
0xe10c:	mov	rcx, qword ptr [r13]
0xe110:	add	qword ptr [rbp - 0x400], 1
0xe118:	cmp	rcx, r8
0xe11b:	jne	0xd7b9


0xe17d:	test	r12, r12
0xe180:	jne	0xe550


0xe0ff:	mov	byte ptr [r15 + r14], 0x25
0xe104:	mov	r8, qword ptr [r13 + 8]
0xe108:	add	r13, 0x58
0xe10c:	mov	rcx, qword ptr [r13]
0xe110:	add	qword ptr [rbp - 0x400], 1
0xe118:	cmp	rcx, r8
0xe11b:	jne	0xd7b9


0xe15e:	lea	rdi, [rip + 0x3e93]
0xe165:	mov	rax, qword ptr [rax + 0x10]
0xe169:	movsxd	rdx, dword ptr [rdi + rdx*4]
0xe16d:	add	rdx, rdi
0xe170:	jmp	rdx


0xd997:	test	al, 2
0xd999:	je	0xd9a2


0xd988:	mov	rdi, qword ptr [rbp - 0x3d8]
0xd98f:	lea	rbx, [rdi + 2]
0xd993:	mov	byte ptr [rdi + 1], 0x27
0xd997:	test	al, 2
0xd999:	je	0xd9a2


0xd8e1:	mov	rsi, r12
0xd8e4:	mov	rdi, r15
0xd8e7:	mov	qword ptr [rbp - 0x3d0], r8
0xd8ee:	mov	qword ptr [rbp - 0x3c8], rcx
0xd8f5:	call	0x2a20


0xe6a1:	mov	rax, qword ptr [rbp - 0x410]
0xe6a8:	mov	rdi, qword ptr [rbp - 0x3a8]
0xe6af:	add	rax, 0x10
0xe6b3:	cmp	rdi, rax
0xe6b6:	je	0xe6bd


0xe69c:	call	0x2710


0xe727:	cmp	rbx, -1
0xe72b:	je	0xd7d5


0xe6cc:	mov	rdi, r12
0xe6cf:	call	0x29d0


0xe62c:	test	r13b, r13b
0xe62f:	jne	0xe6cc


0xe74b:	jmp	0xe71e


0xe618:	cmp	r15, qword ptr [rbp - 0x3e8]
0xe61f:	sete	r13b
0xe623:	test	r15, r15
0xe626:	je	0xe6cc


0xe186:	cmp	rax, 0xc
0xe18a:	ja	0xe562


0xe550:	js	0xd7d5


0xd9a2:	test	al, 4
0xd9a4:	je	0xd9ad


0xd99b:	mov	byte ptr [rbx], 0x2d
0xd99e:	add	rbx, 1
0xd9a2:	test	al, 4
0xd9a4:	je	0xd9ad


0xe6bd:	mov	rax, qword ptr [rbp - 0x418]
0xe6c4:	mov	qword ptr [rax], r14
0xe6c7:	jmp	0xd84f


0xe6b8:	call	0x2710


0xe731:	mov	r12, rbx
0xe734:	jmp	0xe618


0xe635:	mov	rsi, r12
0xe638:	mov	rdi, r15
0xe63b:	call	0x2a20


0xe190:	mov	r12d, 0xc
0xe196:	cmp	r15, qword ptr [rbp - 0x3e8]
0xe19d:	sete	dl
0xe1a0:	test	r15, r15
0xe1a3:	je	0xe410


0xe562:	cmp	rax, -1
0xe566:	je	0xd7d5


0xe556:	add	r12, r12
0xe559:	cmp	r12, rax
0xe55c:	jae	0xe196


0xd9ad:	test	al, 8
0xd9af:	je	0xd9b8


0xd9a6:	mov	byte ptr [rbx], 0x2b
0xd9a9:	add	rbx, 1
0xd9ad:	test	al, 8
0xd9af:	je	0xd9b8


0xe410:	mov	rdi, r12
0xe413:	mov	byte ptr [rbp - 0x3c8], dl
0xe419:	call	0x29d0


0xe1a9:	test	dl, dl
0xe1ab:	jne	0xe410


0xe56c:	mov	r12, rax
0xe56f:	jmp	0xe196


0xe196:	cmp	r15, qword ptr [rbp - 0x3e8]
0xe19d:	sete	dl
0xe1a0:	test	r15, r15
0xe1a3:	je	0xe410


0xd9b8:	test	al, 0x10
0xd9ba:	je	0xd9c3


0xd9b1:	mov	byte ptr [rbx], 0x20
0xd9b4:	add	rbx, 1
0xd9b8:	test	al, 0x10
0xd9ba:	je	0xd9c3


0xe1b1:	mov	rsi, r12
0xe1b4:	mov	rdi, r15
0xe1b7:	call	0x2a20


0xd9c3:	test	al, 0x40
0xd9c5:	je	0xd9ce


0xd9bc:	mov	byte ptr [rbx], 0x23
0xd9bf:	add	rbx, 1
0xd9c3:	test	al, 0x40
0xd9c5:	je	0xd9ce


0xd9ce:	test	al, 0x20
0xd9d0:	je	0xd9d9


0xd9c7:	mov	byte ptr [rbx], 0x49
0xd9ca:	add	rbx, 1
0xd9ce:	test	al, 0x20
0xd9d0:	je	0xd9d9


0xd9d9:	mov	rsi, qword ptr [r13 + 0x18]
0xd9dd:	mov	rdx, qword ptr [r13 + 0x20]
0xd9e1:	cmp	rsi, rdx
0xd9e4:	je	0xda16


0xd9d2:	mov	byte ptr [rbx], 0x30
0xd9d5:	add	rbx, 1
0xd9d9:	mov	rsi, qword ptr [r13 + 0x18]
0xd9dd:	mov	rdx, qword ptr [r13 + 0x20]
0xd9e1:	cmp	rsi, rdx
0xd9e4:	je	0xda16


0xda16:	mov	rsi, qword ptr [r13 + 0x30]
0xda1a:	mov	rdx, qword ptr [r13 + 0x38]
0xda1e:	cmp	rsi, rdx
0xda21:	je	0xda53


0xd9e6:	mov	rcx, rdx
0xd9e9:	mov	rdi, rbx
0xd9ec:	mov	qword ptr [rbp - 0x3e0], r8
0xd9f3:	sub	rcx, rsi
0xd9f6:	mov	rdx, rcx
0xd9f9:	mov	qword ptr [rbp - 0x3c8], rcx
0xda00:	call	0x2970


0xda53:	mov	edi, dword ptr [rbp - 0x3d0]
0xda59:	cmp	edi, 0x10
0xda5c:	ja	0xda8b


0xda23:	mov	rcx, rdx
0xda26:	mov	rdi, rbx
0xda29:	mov	qword ptr [rbp - 0x3e0], r8
0xda30:	sub	rcx, rsi
0xda33:	mov	rdx, rcx
0xda36:	mov	qword ptr [rbp - 0x3c8], rcx
0xda3d:	call	0x2970


0xda5e:	mov	eax, 1
0xda63:	mov	ecx, edi
0xda65:	shl	rax, cl
0xda68:	test	eax, 0x14180
0xda6d:	jne	0xda84


0xda8b:	movzx	eax, byte ptr [r13 + 0x48]
0xda90:	mov	byte ptr [rbx + 1], 0
0xda94:	mov	byte ptr [rbx], al
0xda96:	mov	rax, qword ptr [r13 + 0x28]
0xda9a:	cmp	rax, -1
0xda9e:	je	0xe1d0


0xda6f:	test	ah, 0x10
0xda72:	jne	0xe3d0


0xda84:	mov	byte ptr [rbx], 0x6c
0xda87:	add	rbx, 1
0xda8b:	movzx	eax, byte ptr [r13 + 0x48]
0xda90:	mov	byte ptr [rbx + 1], 0
0xda94:	mov	byte ptr [rbx], al
0xda96:	mov	rax, qword ptr [r13 + 0x28]
0xda9a:	cmp	rax, -1
0xda9e:	je	0xe1d0


0xe1d0:	mov	dword ptr [rbp - 0x3e0], 0
0xe1da:	jmp	0xdac7


0xdaa4:	shl	rax, 5
0xdaa8:	add	rax, r8
0xdaab:	cmp	dword ptr [rax], 5
0xdaae:	jne	0xe596


0xda78:	test	ah, 6
0xda7b:	je	0xda8b


0xe3d0:	mov	byte ptr [rbx], 0x4c
0xe3d3:	add	rbx, 1
0xe3d7:	jmp	0xda8b


0xdac7:	mov	rax, qword ptr [r13 + 0x40]
0xdacb:	cmp	rax, -1
0xdacf:	je	0xdafc


0xdab4:	mov	eax, dword ptr [rax + 0x10]
0xdab7:	mov	dword ptr [rbp - 0x3e0], 1
0xdac1:	mov	dword ptr [rbp - 0x3b8], eax
0xdac7:	mov	rax, qword ptr [r13 + 0x40]
0xdacb:	cmp	rax, -1
0xdacf:	je	0xdafc


0xda7d:	mov	byte ptr [rbx], 0x6c
0xda80:	add	rbx, 1
0xda84:	mov	byte ptr [rbx], 0x6c
0xda87:	add	rbx, 1
0xda8b:	movzx	eax, byte ptr [r13 + 0x48]
0xda90:	mov	byte ptr [rbx + 1], 0
0xda94:	mov	byte ptr [rbx], al
0xda96:	mov	rax, qword ptr [r13 + 0x28]
0xda9a:	cmp	rax, -1
0xda9e:	je	0xe1d0


0xdafc:	mov	rax, r14
0xdaff:	xor	edx, edx
0xdb01:	add	rax, 2
0xdb05:	jb	0xe76c


0xdad1:	shl	rax, 5
0xdad5:	add	r8, rax
0xdad8:	cmp	dword ptr [r8], 5
0xdadc:	jne	0xe596


0xe76c:	cmp	r12, -1
0xe770:	mov	edx, 1
0xe775:	je	0xdb5b


0xdb0b:	cmp	r12, rax
0xdb0e:	jae	0xdb5b


0xdae2:	mov	eax, dword ptr [rbp - 0x3e0]
0xdae8:	mov	edx, dword ptr [r8 + 0x10]
0xdaec:	mov	dword ptr [rbp + rax*4 - 0x3b8], edx
0xdaf3:	lea	eax, [rax + 1]
0xdaf6:	mov	dword ptr [rbp - 0x3e0], eax
0xdafc:	mov	rax, r14
0xdaff:	xor	edx, edx
0xdb01:	add	rax, 2
0xdb05:	jb	0xe76c


0xdb5b:	mov	byte ptr [r15 + r14], 0
0xdb60:	call	0x2750


0xe77b:	test	r12, r12
0xe77e:	je	0xd7d5


0xdb10:	test	r12, r12
0xdb13:	jne	0xe338


0xe784:	jns	0xe350


0xdb19:	cmp	rax, 0xc
0xdb1d:	ja	0xe350


0xe338:	js	0xd7d5


0xe78a:	jmp	0xd7d5


0xe350:	test	rdx, rdx
0xe353:	jne	0xd7d5


0xdb23:	mov	r12d, 0xc
0xdb29:	cmp	r15, qword ptr [rbp - 0x3e8]
0xdb30:	sete	dl
0xdb33:	test	r15, r15
0xdb36:	je	0xe380


0xe33e:	add	r12, r12
0xe341:	cmp	r12, rax
0xe344:	jae	0xdb29


0xe359:	cmp	rax, -1
0xe35d:	je	0xd7d5


0xe380:	mov	rdi, r12
0xe383:	mov	byte ptr [rbp - 0x3c8], dl
0xe389:	call	0x29d0


0xdb3c:	test	dl, dl
0xdb3e:	jne	0xe380


0xdb29:	cmp	r15, qword ptr [rbp - 0x3e8]
0xdb30:	sete	dl
0xdb33:	test	r15, r15
0xdb36:	je	0xe380


0xe363:	cmp	r15, qword ptr [rbp - 0x3e8]
0xe36a:	mov	r12, rax
0xe36d:	sete	dl
0xe370:	test	r15, r15
0xe373:	jne	0xdb3c


0xdb44:	mov	rsi, r12
0xdb47:	mov	rdi, r15
0xdb4a:	call	0x2a20


0xb7b7:	test	rax, rax
0xb7ba:	mov	rbx, qword ptr [rsp + 8]
0xb7bf:	je	0xb84e


0xb84e:	mov	rdi, r13
0xb851:	mov	ebx, 0xffffffff
0xb856:	call	0xd660


0xb7c5:	mov	rcx, r13
0xb7c8:	mov	rdx, rbx
0xb7cb:	mov	esi, 1
0xb7d0:	mov	rdi, rax
0xb7d3:	mov	rbp, rax
0xb7d6:	call	0x2ae0


0xb85b:	jmp	0xb7f6


0xb7f6:	mov	rcx, qword ptr [rsp + 0x7e8]
0xb7fe:	xor	rcx, qword ptr fs:[0x28]
0xb807:	mov	eax, ebx
0xb809:	jne	0xb85d


0xb80b:	add	rsp, 0x7f8
0xb812:	pop	rbx
0xb813:	pop	rbp
0xb814:	pop	r12
0xb816:	pop	r13
0xb818:	ret	


0xb85d:	call	0x2830


0xf6b1:	test	rbp, rbp
0xf6b4:	je	0xf6d6


0xf6d6:	add	rsp, 8
0xf6da:	pop	rbx
0xf6db:	pop	rbp
0xf6dc:	pop	r12
0xf6de:	pop	r13
0xf6e0:	pop	r14
0xf6e2:	pop	r15
0xf6e4:	ret	


0xf6b6:	xor	ebx, ebx
0xf6b8:	nop	dword ptr [rax + rax]
0xf6c0:	mov	rdx, r15
0xf6c3:	mov	rsi, r14
0xf6c6:	mov	edi, r13d
0xf6c9:	call	qword ptr [r12 + rbx*8]


0xda42:	mov	rcx, qword ptr [rbp - 0x3c8]
0xda49:	mov	r8, qword ptr [rbp - 0x3e0]
0xda50:	add	rbx, rcx
0xda53:	mov	edi, dword ptr [rbp - 0x3d0]
0xda59:	cmp	edi, 0x10
0xda5c:	ja	0xda8b


0xda05:	mov	rcx, qword ptr [rbp - 0x3c8]
0xda0c:	mov	r8, qword ptr [rbp - 0x3e0]
0xda13:	add	rbx, rcx
0xda16:	mov	rsi, qword ptr [r13 + 0x30]
0xda1a:	mov	rdx, qword ptr [r13 + 0x38]
0xda1e:	cmp	rsi, rdx
0xda21:	je	0xda53


0xcf15:	mov	rcx, qword ptr [rsp + 0x38]
0xcf1a:	mov	r8, qword ptr [rsp + 0x30]
0xcf1f:	jmp	0xbd52


0xbd52:	add	rbp, r8
0xbd55:	add	r14, rcx
0xbd58:	jmp	0xbb62


0xbd16:	mov	r8, qword ptr [rsp + 0x48]
0xbd1b:	mov	rcx, qword ptr [rsp + 0x40]
0xbd20:	mov	r9, qword ptr [rsp + 0x38]
0xbd25:	cmp	byte ptr [rsp + 0x30], 0
0xbd2a:	mov	qword ptr [rsp + 0x38], rcx
0xbd2f:	mov	rdx, r8
0xbd32:	mov	qword ptr [rsp + 0x30], r8
0xbd37:	mov	rsi, r9
0xbd3a:	mov	rdi, rbp
0xbd3d:	je	0xcf10


0xcf76:	mov	r9, qword ptr [rsp + 0x38]
0xcf7b:	mov	rcx, qword ptr [rsp + 0x40]
0xcf80:	mov	r8, qword ptr [rsp + 0x48]
0xcf85:	jmp	0xbd25


0x3e0d:	test	eax, eax
0x3e0f:	jne	0x3df0


0x3df0:	mov	r14, qword ptr [rbx]
0x3df3:	add	rbp, r12
0x3df6:	add	rbx, 8
0x3dfa:	test	r14, r14
0x3dfd:	je	0x3e11


0x3f80:	cmp	eax, 1
0x3f83:	je	0x3fc0


0x3f85:	add	rsp, 8
0x3f89:	pop	rbx
0x3f8a:	pop	rbp
0x3f8b:	pop	r12
0x3f8d:	pop	r13
0x3f8f:	ret	


0x4950:	jmp	0x48b9


0x48b9:	movsxd	rdx, dword ptr [rbx + 0x10]
0x48bd:	cmp	edx, 6
0x48c0:	ja	0x48cb


0x48c2:	cmp	eax, 0x63
0x48c5:	jbe	0x4955


0x4955:	xor	ecx, ecx
0x4957:	mov	esi, 0x64
0x495c:	test	eax, eax
0x495e:	sete	cl
0x4961:	sub	esi, eax
0x4963:	cdqe	
0x4965:	movsxd	rsi, esi
0x4968:	lea	rdi, [rbp + rax]
0x496d:	jmp	0x48f1


0x48f1:	lea	rax, [rip + 0xc728]
0x48f8:	lea	r9, [rax + rdx*4]
0x48fc:	lea	rax, [rip + 0xb79c]
0x4903:	mov	edx, 1
0x4908:	lea	r8, [rax + rcx]
0x490c:	mov	rcx, -1
0x4913:	xor	eax, eax
0x4915:	call	0x2700


0x491a:	add	rsp, 8
0x491e:	mov	rax, rbp
0x4921:	pop	rbx
0x4922:	pop	rbp
0x4923:	ret	


0x8783:	mov	rdi, rbp
0x8786:	call	0x2730


0x2730:	jmp	qword ptr [rip + 0x212692]




0xb0bf:	test	rax, rax
0xb0c2:	je	0xb0c9


0xb0c4:	add	rsp, 8
0xb0c8:	ret	


0x3f98:	test	rbx, rbx
0x3f9b:	je	0x3f80


0x3f9d:	cmp	eax, -1
0x3fa0:	jne	0x3f80


0x3fa2:	call	0x2750


0x5668:	test	eax, eax
0x566a:	mov	r8d, dword ptr [rsp + 8]
0x566f:	mov	r11, qword ptr [rsp + 0x10]
0x5674:	jne	0x5645


0x5676:	mov	rcx, rbp
0x5679:	movsxd	rax, dword ptr [rcx + 0xc]
0x567d:	mov	r9d, dword ptr [rcx + 8]
0x5681:	mov	qword ptr [rsp + 0x90], rax
0x5689:	jmp	0x4dbe


0x5645:	add	rbp, 0x10
0x5649:	mov	rsi, qword ptr [rbp]
0x564d:	test	rsi, rsi
0x5650:	je	0x65f5


0x65f5:	mov	rbp, r14
0x65f8:	mov	edx, dword ptr [rbp]
0x65fb:	add	rbp, 4
0x65ff:	lea	eax, [rdx - 0x1010101]
0x6605:	not	edx
0x6607:	and	eax, edx
0x6609:	and	eax, 0x80808080
0x660e:	je	0x65f8


0x65f8:	mov	edx, dword ptr [rbp]
0x65fb:	add	rbp, 4
0x65ff:	lea	eax, [rdx - 0x1010101]
0x6605:	not	edx
0x6607:	and	eax, edx
0x6609:	and	eax, 0x80808080
0x660e:	je	0x65f8


0x6610:	mov	edx, eax
0x6612:	mov	r9d, 1
0x6618:	shr	edx, 0x10
0x661b:	test	eax, 0x8080
0x6620:	cmove	eax, edx
0x6623:	lea	rdx, [rbp + 2]
0x6627:	mov	edi, eax
0x6629:	cmove	rbp, rdx
0x662d:	add	dil, al
0x6630:	sbb	rbp, 3
0x6634:	sub	rbp, r14
0x6637:	cmp	rbp, 3
0x663b:	je	0x664a


0x664a:	lea	rcx, [rip + 0x20e2ef]
0x6651:	lea	rsi, [rip + 0x9b71]
0x6658:	mov	dword ptr [rsp + 8], ebx
0x665c:	mov	qword ptr [rsp + 0x20], rbp
0x6661:	mov	dword ptr [rsp + 0x10], r8d
0x6666:	mov	ebx, r9d
0x6669:	mov	rbp, rcx
0x666c:	mov	qword ptr [rsp + 0x18], r11
0x6671:	test	ebx, ebx
0x6673:	je	0x67e8


0x663d:	xor	r9d, r9d
0x6640:	cmp	rbp, 4
0x6644:	je	0x6811


0x67e8:	mov	rdi, r14
0x67eb:	call	0x2950


0x6679:	mov	edx, 3
0x667e:	mov	rdi, r14
0x6681:	call	0x2760


0x6811:	xor	r9d, r9d
0x6814:	cmp	byte ptr [rsp + 0x5a3], 0x2e
0x681c:	sete	r9b
0x6820:	jmp	0x664a


0x2760:	jmp	qword ptr [rip + 0x21267a]




0x67f0:	test	eax, eax
0x67f2:	sete	al
0x67f5:	jmp	0x668b


0x668b:	test	al, al
0x668d:	jne	0x67fa


0x6693:	add	rbp, 0x10
0x6697:	mov	rsi, qword ptr [rbp]
0x669b:	test	rsi, rsi
0x669e:	jne	0x6671


0x67fa:	movsxd	rbx, dword ptr [rsp + 8]
0x67ff:	mov	r8d, dword ptr [rsp + 0x10]
0x6804:	mov	rcx, rbp
0x6807:	mov	r11, qword ptr [rsp + 0x18]
0x680c:	jmp	0x5679


0x66a0:	mov	r11, qword ptr [rsp + 0x18]
0x66a5:	mov	r8d, dword ptr [rsp + 0x10]
0x66aa:	mov	rsi, r14
0x66ad:	movsxd	rbx, dword ptr [rsp + 8]
0x66b2:	mov	byte ptr [rsp + 8], al
0x66b6:	mov	rbp, qword ptr [rsp + 0x20]
0x66bb:	mov	rdi, r11
0x66be:	mov	dword ptr [rsp + 0x28], r8d
0x66c3:	mov	qword ptr [rsp + 0x10], r11
0x66c8:	call	0x4500


0x6671:	test	ebx, ebx
0x6673:	je	0x67e8


0x5679:	movsxd	rax, dword ptr [rcx + 0xc]
0x567d:	mov	r9d, dword ptr [rcx + 8]
0x5681:	mov	qword ptr [rsp + 0x90], rax
0x5689:	jmp	0x4dbe


0xb38b:	test	eax, eax
0xb38d:	je	0xb3e7


0xb3e7:	mov	qword ptr [r13 + 0x30], rbx
0xb3eb:	mov	eax, 1
0xb3f0:	add	rsp, 8
0xb3f4:	pop	rbx
0xb3f5:	pop	rbp
0xb3f6:	pop	r12
0xb3f8:	pop	r13
0xb3fa:	pop	r14
0xb3fc:	pop	r15
0xb3fe:	ret	


0xb38f:	cmp	byte ptr [rbx], 0
0xb392:	jne	0xb3a6


0xb394:	lea	r14, [r12 + 9]
0xb399:	cmp	r14, rbx
0xb39c:	jne	0xb400


0xb3a6:	mov	rdi, rbx
0xb3a9:	call	0x2810


0xb39e:	cmp	byte ptr [r12 + 8], 0
0xb3a4:	je	0xb400


0xb400:	mov	rdi, rbp
0xb403:	call	0x2810


0x4534:	test	eax, eax
0x4536:	jne	0x4520


0x4538:	mov	rax, rbx
0x453b:	pop	rbx
0x453c:	pop	rbp
0x453d:	pop	r12
0x453f:	ret	


0x4520:	add	rbx, 0x10
0x4524:	mov	rsi, qword ptr [rbx]
0x4527:	test	rsi, rsi
0x452a:	je	0x4540


0x4540:	mov	rsi, qword ptr [r12 + 0xe8]
0x4548:	lea	rbx, [r12 + 0xe8]
0x4550:	test	rsi, rsi
0x4553:	jne	0x459c


0x459c:	mov	rdi, rbp
0x459f:	call	0x2950


0x457c:	mov	rdi, rbp
0x457f:	call	0x2950


0x4584:	test	eax, eax
0x4586:	jne	0x4570


0x4588:	jmp	0x4538


0x4570:	add	rbx, 0x10
0x4574:	mov	rsi, qword ptr [rbx]
0x4577:	test	rsi, rsi
0x457a:	je	0x45b0


0x45b0:	xor	ebx, ebx
0x45b2:	mov	rax, rbx
0x45b5:	pop	rbx
0x45b6:	pop	rbp
0x45b7:	pop	r12
0x45b9:	ret	


0x45a4:	test	eax, eax
0x45a6:	jne	0x4590


0x45a8:	mov	rax, rbx
0x45ab:	pop	rbx
0x45ac:	pop	rbp
0x45ad:	pop	r12
0x45af:	ret	


0x4590:	add	rbx, 0x10
0x4594:	mov	rsi, qword ptr [rbx]
0x4597:	test	rsi, rsi
0x459a:	je	0x4558


0x4558:	lea	rbx, [rip + 0x20fe81]
0x455f:	lea	rsi, [rip + 0xbb75]
0x4566:	jmp	0x457c


0x66cd:	test	rax, rax
0x66d0:	mov	rcx, rax
0x66d3:	mov	r11, qword ptr [rsp + 0x10]
0x66d8:	mov	r8d, dword ptr [rsp + 0x28]
0x66dd:	jne	0x5679


0x66e3:	lea	rsi, [rip + 0x9a6c]
0x66ea:	mov	rdi, r14
0x66ed:	mov	qword ptr [rsp + 0x18], r11
0x66f2:	mov	dword ptr [rsp + 0x10], r8d
0x66f7:	call	0x2950


0x66fc:	test	eax, eax
0x66fe:	mov	r8d, dword ptr [rsp + 0x10]
0x6703:	mov	r11, qword ptr [rsp + 0x18]
0x6708:	je	0x6835


0x6835:	lea	rcx, [rip + 0x20e294]
0x683c:	jmp	0x5679


0x670e:	lea	rcx, [rip + 0x20e16b]
0x6715:	lea	rsi, [rip + 0x9ab5]
0x671c:	mov	rdi, r14
0x671f:	mov	qword ptr [rsp + 0x20], r11
0x6724:	mov	qword ptr [rsp + 0x18], rcx
0x6729:	mov	dword ptr [rsp + 0x10], r8d
0x672e:	call	0x2950


0x6733:	test	eax, eax
0x6735:	mov	r8d, dword ptr [rsp + 0x10]
0x673a:	mov	rcx, qword ptr [rsp + 0x18]
0x673f:	mov	r11, qword ptr [rsp + 0x20]
0x6744:	je	0x5679


0x674a:	add	rcx, 0x10
0x674e:	mov	rsi, qword ptr [rcx]
0x6751:	test	rsi, rsi
0x6754:	jne	0x671c


0x6756:	lea	rdx, [r14 + rbp - 1]
0x675b:	cmp	byte ptr [rdx], 0x53
0x675e:	je	0x6841


0x671c:	mov	rdi, r14
0x671f:	mov	qword ptr [rsp + 0x20], r11
0x6724:	mov	qword ptr [rsp + 0x18], rcx
0x6729:	mov	dword ptr [rsp + 0x10], r8d
0x672e:	call	0x2950


0x6841:	lea	rcx, [rip + 0x20e038]
0x6848:	lea	rsi, [rip + 0x9982]
0x684f:	mov	byte ptr [rdx], 0
0x6852:	mov	rdi, r14
0x6855:	mov	qword ptr [rsp + 0x28], r11
0x685a:	mov	qword ptr [rsp + 0x20], rcx
0x685f:	mov	dword ptr [rsp + 0x10], r8d
0x6864:	mov	qword ptr [rsp + 0x18], rdx
0x6869:	call	0x2950


0x6764:	lea	rcx, [rip + 0x20dfb5]
0x676b:	lea	rsi, [rip + 0x9a64]
0x6772:	mov	rdi, r14
0x6775:	mov	qword ptr [rsp + 0x20], r11
0x677a:	mov	qword ptr [rsp + 0x18], rcx
0x677f:	mov	dword ptr [rsp + 0x10], r8d
0x6784:	call	0x2950


0x6789:	test	eax, eax
0x678b:	mov	r8d, dword ptr [rsp + 0x10]
0x6790:	mov	rcx, qword ptr [rsp + 0x18]
0x6795:	mov	r11, qword ptr [rsp + 0x20]
0x679a:	je	0x5679


0x67a0:	add	rcx, 0x10
0x67a4:	mov	rsi, qword ptr [rcx]
0x67a7:	test	rsi, rsi
0x67aa:	jne	0x6772


0x67ac:	sub	rbp, 1
0x67b0:	movzx	edx, byte ptr [rsp + 0x5a0]
0x67b8:	je	0x692c


0x6772:	mov	rdi, r14
0x6775:	mov	qword ptr [rsp + 0x20], r11
0x677a:	mov	qword ptr [rsp + 0x18], rcx
0x677f:	mov	dword ptr [rsp + 0x10], r8d
0x6784:	call	0x2950


0x692c:	lea	rcx, [rip + 0x20d90d]
0x6933:	lea	rax, [rip + 0x98a5]
0x693a:	cmp	byte ptr [rax], dl
0x693c:	je	0x5679


0x67be:	mov	rax, r14
0x67c1:	mov	rdx, r14
0x67c4:	movzx	ecx, byte ptr [rax]
0x67c7:	test	cl, cl
0x67c9:	mov	byte ptr [rdx], cl
0x67cb:	je	0x68a8


0x6942:	add	rcx, 0x10
0x6946:	mov	rax, qword ptr [rcx]
0x6949:	test	rax, rax
0x694c:	jne	0x693a


0x68a8:	cmp	byte ptr [rsp + 8], 0
0x68ad:	je	0x68da


0x67d1:	cmp	byte ptr [rax], 0x2e
0x67d4:	je	0x689e


0x694e:	jmp	0x67be


0x693a:	cmp	byte ptr [rax], dl
0x693c:	je	0x5679


0x68da:	cmp	byte ptr [r11 + 0xd9], 0
0x68e2:	je	0x6387


0x68af:	mov	rdi, r11
0x68b2:	mov	rsi, r14
0x68b5:	mov	dword ptr [rsp + 0x10], r8d
0x68ba:	mov	qword ptr [rsp + 8], r11
0x68bf:	call	0x4500


0x689e:	mov	byte ptr [rsp + 8], 1
0x68a3:	jmp	0x67de


0x67da:	add	rdx, 1
0x67de:	add	rax, 1
0x67e2:	jmp	0x67c4


0x68e8:	lea	rsi, [rip + 0x98f2]
0x68ef:	mov	edx, 5
0x68f4:	xor	edi, edi
0x68f6:	mov	qword ptr [rsp + 0x10], r11
0x68fb:	mov	dword ptr [rsp + 8], r8d
0x6900:	call	0x27f0


0x67de:	add	rax, 1
0x67e2:	jmp	0x67c4


0x67c4:	movzx	ecx, byte ptr [rax]
0x67c7:	test	cl, cl
0x67c9:	mov	byte ptr [rdx], cl
0x67cb:	je	0x68a8


0x68c4:	test	rax, rax
0x68c7:	mov	rcx, rax
0x68ca:	mov	r11, qword ptr [rsp + 8]
0x68cf:	mov	r8d, dword ptr [rsp + 0x10]
0x68d4:	jne	0x5679


0x686e:	test	eax, eax
0x6870:	mov	r8d, dword ptr [rsp + 0x10]
0x6875:	mov	rcx, qword ptr [rsp + 0x20]
0x687a:	mov	r11, qword ptr [rsp + 0x28]
0x687f:	je	0x5679


0x6885:	add	rcx, 0x10
0x6889:	mov	rsi, qword ptr [rcx]
0x688c:	mov	rdx, qword ptr [rsp + 0x18]
0x6891:	test	rsi, rsi
0x6894:	jne	0x6852


0x6896:	mov	byte ptr [rdx], 0x53
0x6899:	jmp	0x6764


0x6852:	mov	rdi, r14
0x6855:	mov	qword ptr [rsp + 0x28], r11
0x685a:	mov	qword ptr [rsp + 0x20], rcx
0x685f:	mov	dword ptr [rsp + 0x10], r8d
0x6864:	mov	qword ptr [rsp + 0x18], rdx
0x6869:	call	0x2950


0x8b93:	test	rax, rax
0x8b96:	je	0x8bed


0x8bed:	mov	qword ptr [rip + 0x20c564], rbx
0x8bf4:	mov	qword ptr [rip + 0x20c4c5], rbx
0x8bfb:	pop	rbx
0x8bfc:	ret	


0x8b98:	lea	r8, [rax + 1]
0x8b9c:	mov	rdx, r8
0x8b9f:	sub	rdx, rbx
0x8ba2:	cmp	rdx, 6
0x8ba6:	jle	0x8bed


0x8ba8:	lea	rsi, [rax - 6]
0x8bac:	lea	rdi, [rip + 0x898d]
0x8bb3:	mov	ecx, 7
0x8bb8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x8bb8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x8bba:	seta	dl
0x8bbd:	sbb	dl, 0
0x8bc0:	test	dl, dl
0x8bc2:	jne	0x8bed


0x8bc4:	lea	rdi, [rip + 0x897d]
0x8bcb:	mov	ecx, 3
0x8bd0:	mov	rsi, r8
0x8bd3:	mov	rbx, r8
0x8bd6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x8bd6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x8bd8:	seta	dl
0x8bdb:	sbb	dl, 0
0x8bde:	test	dl, dl
0x8be0:	jne	0x8bed


0x8be2:	lea	rbx, [rax + 4]
0x8be6:	mov	qword ptr [rip + 0x20c4b3], rbx
0x8bed:	mov	qword ptr [rip + 0x20c564], rbx
0x8bf4:	mov	qword ptr [rip + 0x20c4c5], rbx
0x8bfb:	pop	rbx
0x8bfc:	ret	


0xb7db:	cmp	rax, rbx
0xb7de:	jb	0xb820


0xb820:	cmp	rbp, r12
0xb823:	mov	ebx, 0xffffffff
0xb828:	je	0xb7f6


0xb7e0:	cmp	rbp, r12
0xb7e3:	je	0xb7ed


0xb82a:	call	0x2750


0xb7ed:	cmp	rbx, 0x7fffffff
0xb7f4:	ja	0xb843


0xb7e5:	mov	rdi, rbp
0xb7e8:	call	0x2710


0xb843:	call	0x2750


0x434c:	lea	rax, [rsp + 0xe0]
0x4354:	mov	rdi, qword ptr [rip + 0x210d85]
0x435b:	mov	rdx, rsp
0x435e:	mov	rsi, rbx
0x4361:	mov	dword ptr [rsp], 8
0x4368:	mov	dword ptr [rsp + 4], 0x30
0x4370:	mov	qword ptr [rsp + 8], rax
0x4375:	lea	rax, [rsp + 0x20]
0x437a:	mov	qword ptr [rsp + 0x10], rax
0x437f:	call	0xb770


0x4384:	mov	rax, qword ptr [rsp + 0x18]
0x4389:	xor	rax, qword ptr fs:[0x28]
0x4392:	jne	0x439d


0x4394:	add	rsp, 0xd0
0x439b:	pop	rbx
0x439c:	ret	


0x439d:	call	0x2830


0x8c1a:	call	0x2740


0xdb4f:	test	rax, rax
0xdb52:	je	0xd7d5


0xdb58:	mov	r15, rax
0xdb5b:	mov	byte ptr [r15 + r14], 0
0xdb60:	call	0x2750


0xe1bc:	test	rax, rax
0xe1bf:	je	0xe2bb


0xe2bb:	call	0x2750


0xe1c5:	mov	r15, rax
0xe1c8:	jmp	0xe0ff


0xe640:	test	rax, rax
0xe643:	je	0xe2bb


0xe649:	mov	r15, rax
0xe64c:	cmp	r15, qword ptr [rbp - 0x3e8]
0xe653:	mov	byte ptr [r15 + r14], 0
0xe658:	je	0xe671


0xd8fa:	test	rax, rax
0xd8fd:	mov	rcx, qword ptr [rbp - 0x3c8]
0xd904:	mov	r8, qword ptr [rbp - 0x3d0]
0xd90b:	je	0xe2bb


0xd911:	mov	r15, rax
0xd914:	lea	rdi, [r15 + rbx]
0xd918:	mov	rdx, rcx
0xd91b:	mov	rsi, r8
0xd91e:	call	0x2970


0xe66a:	test	rax, rax
0xe66d:	cmovne	r15, rax
0xe671:	mov	rax, qword ptr [rbp - 0x420]
0xe678:	test	rax, rax
0xe67b:	je	0xe685


0xf43e:	mov	rdx, qword ptr [r15 + 8]
0xf442:	mov	r11, qword ptr [rsp + 0x30]
0xf447:	mov	rcx, rax
0xf44a:	mov	r8, qword ptr [rsp + 0x38]
0xf44f:	mov	r10, qword ptr [rsp + 0x40]
0xf454:	mov	r9, qword ptr [rsp + 0x48]
0xf459:	test	rcx, rcx
0xf45c:	je	0xf677


0xf677:	mov	rcx, rdx
0xf67a:	jmp	0xf61b


0xf462:	cmp	qword ptr [rsp + 8], rdx
0xf467:	mov	rax, qword ptr [r15]
0xf46a:	je	0xf630


0xf630:	mov	rsi, qword ptr [rsp + 8]
0xf635:	shl	rax, 5
0xf639:	mov	rdi, rcx
0xf63c:	mov	rdx, rax
0xf63f:	mov	qword ptr [rsp + 0x48], r9
0xf644:	mov	qword ptr [rsp + 0x40], r10
0xf649:	mov	qword ptr [rsp + 0x38], r8
0xf64e:	mov	qword ptr [rsp + 0x30], r11
0xf653:	call	0x2970


0xf470:	mov	qword ptr [r15 + 8], rcx
0xf474:	jmp	0xee8d


0xee8d:	mov	rdx, rax
0xee90:	shl	rdx, 5
0xee94:	add	rdx, rcx
0xee97:	cmp	rax, rbx
0xee9a:	ja	0xeeb6


0xf658:	mov	r9, qword ptr [rsp + 0x48]
0xf65d:	mov	rcx, rax
0xf660:	mov	r10, qword ptr [rsp + 0x40]
0xf665:	mov	rax, qword ptr [r15]
0xf668:	mov	r8, qword ptr [rsp + 0x38]
0xf66d:	mov	r11, qword ptr [rsp + 0x30]
0xf672:	jmp	0xf470


0xeda6:	mov	rdx, qword ptr [r15 + 8]
0xedaa:	mov	r8, qword ptr [rsp + 0x30]
0xedaf:	mov	rcx, rax
0xedb2:	mov	r10, qword ptr [rsp + 0x38]
0xedb7:	mov	r9, qword ptr [rsp + 0x40]
0xedbc:	test	rcx, rcx
0xedbf:	je	0xf677


0xedc5:	cmp	qword ptr [rsp + 8], rdx
0xedca:	mov	rax, qword ptr [r15]
0xedcd:	je	0xf58b


0xf58b:	mov	rsi, qword ptr [rsp + 8]
0xf590:	shl	rax, 5
0xf594:	mov	rdi, rcx
0xf597:	mov	rdx, rax
0xf59a:	mov	qword ptr [rsp + 0x40], r9
0xf59f:	mov	qword ptr [rsp + 0x38], r10
0xf5a4:	mov	qword ptr [rsp + 0x30], r8
0xf5a9:	call	0x2970


0xedd3:	mov	qword ptr [r15 + 8], rcx
0xedd7:	mov	rdx, rax
0xedda:	shl	rdx, 5
0xedde:	add	rdx, rcx
0xede1:	cmp	rax, rbx
0xede4:	ja	0xee06


0xf5ae:	mov	r9, qword ptr [rsp + 0x40]
0xf5b3:	mov	rcx, rax
0xf5b6:	mov	r10, qword ptr [rsp + 0x38]
0xf5bb:	mov	rax, qword ptr [r15]
0xf5be:	mov	r8, qword ptr [rsp + 0x30]
0xf5c3:	jmp	0xedd3


0xaf46:	test	rax, rax
0xaf49:	jne	0xaf50


0xaf4b:	test	rbx, rbx
0xaf4e:	jne	0xaf61


0xaf50:	pop	rbx
0xaf51:	ret	


0xaf61:	call	0xb120


0xa40d:	mov	qword ptr [rip + 0x20ac6c], rbx
0xa414:	pop	rbx
0xa415:	mov	dword ptr [rip + 0x20ac59], 1
0xa41f:	pop	rbp
0xa420:	pop	r12
0xa422:	ret	


0xa3e7:	mov	qword ptr [rip + 0x20ac9e], 0x100
0xa3f2:	mov	qword ptr [rip + 0x20ac9f], rbx
0xa3f9:	lea	rbx, [rip + 0x20ac90]
0xa400:	cmp	r12, rbx
0xa403:	je	0xa414


0xaf5d:	xor	eax, eax
0xaf5f:	pop	rbx
0xaf60:	ret	


0xa3cc:	cmp	rbx, rbp
0xa3cf:	jne	0xa3c0


0xa3c0:	mov	rdi, qword ptr [rbx]
0xa3c3:	add	rbx, 0x10
0xa3c7:	call	0x2710


0xb238:	test	rbx, rbx
0xb23b:	mov	rdi, rbx
0xb23e:	jne	0xb230


0xb240:	pop	rbx
0xb241:	ret	


0xb230:	mov	rbx, qword ptr [rdi]
0xb233:	call	0x2710


0xb748:	jmp	0xb69e


0xb69e:	mov	rcx, qword ptr [rsp + 0x48]
0xb6a3:	xor	rcx, qword ptr fs:[0x28]
0xb6ac:	jne	0xb75c


0xb6b2:	add	rsp, 0x50
0xb6b6:	pop	rbx
0xb6b7:	pop	rbp
0xb6b8:	pop	r12
0xb6ba:	ret	


0xb75c:	call	0x2830


0xb9b0:	movzx	ecx, byte ptr [r12 + rbx]
0xb9b5:	mov	rdx, qword ptr [rax]
0xb9b8:	mov	edx, dword ptr [rdx + rcx*4]
0xb9bb:	mov	byte ptr [rbp + rbx], dl
0xb9bf:	sub	rbx, 1
0xb9c3:	cmp	rbx, -1
0xb9c7:	jne	0xb9b0


0xba00:	movzx	ecx, byte ptr [r12 + rbx]
0xba05:	mov	rdx, qword ptr [rax]
0xba08:	mov	edx, dword ptr [rdx + rcx*4]
0xba0b:	mov	byte ptr [rbp + rbx], dl
0xba0f:	sub	rbx, 1
0xba13:	cmp	rbx, -1
0xba17:	jne	0xba00


0xd5ce:	test	eax, eax
0xd5d0:	je	0xd5da


0xd5d2:	test	dword ptr [rbx], 0x100
0xd5d8:	jne	0xd5e8


0xd5e8:	mov	rdi, rbx
0xd5eb:	mov	edx, 1
0xd5f0:	xor	esi, esi
0xd5f2:	call	0xd600


0x2bff:	lea	rsi, [rip + 0xd770]
0x2c06:	mov	edi, 6
0x2c0b:	call	0x2a30


0x3f0a:	cmp	ebp, eax
0x3f0c:	mov	ebx, eax
0x3f0e:	je	0x3f39


0x3f39:	add	rsp, 8
0x3f3d:	mov	eax, ebx
0x3f3f:	pop	rbx
0x3f40:	pop	rbp
0x3f41:	pop	r12
0x3f43:	pop	r13
0x3f45:	ret	


0x3f10:	test	eax, eax
0x3f12:	js	0x3f39


0x3f14:	mov	esi, ebp
0x3f16:	mov	edi, eax
0x3f18:	call	0x2860


0x2860:	jmp	qword ptr [rip + 0x2125fa]




0x400e:	mov	rcx, qword ptr [rsp + 0x18]
0x4013:	xor	rcx, qword ptr fs:[0x28]
0x401c:	mov	rax, qword ptr [rsp]
0x4020:	mov	rdx, qword ptr [rsp + 8]
0x4025:	jne	0x402c


0x4027:	add	rsp, 0x28
0x402b:	ret	


0x402c:	call	0x2830


0x2bb2:	mov	rax, rbx
0x2bb5:	pop	rbx
0x2bb6:	ret	


0x421c:	sub	ebp, ebx
0x421e:	je	0x4282


0x4282:	mov	rax, r12
0x4285:	pop	rbx
0x4286:	pop	rbp
0x4287:	pop	r12
0x4289:	ret	


0x4220:	cdqe	
0x4222:	mov	ecx, 0x88888889
0x4227:	mov	r8d, 0xcccccccd
0x422d:	lea	rsi, [r12 + rax]
0x4231:	mov	eax, ebp
0x4233:	sar	eax, 0x1f
0x4236:	xor	ebp, eax
0x4238:	mov	byte ptr [rsi], 0x3a
0x423b:	sub	ebp, eax
0x423d:	mov	eax, ebp
0x423f:	mul	ecx
0x4241:	mov	eax, ebp
0x4243:	mov	ecx, edx
0x4245:	mov	edi, edx
0x4247:	mov	edx, 0x1b4e81b5
0x424c:	mul	edx
0x424e:	shr	ecx, 5
0x4251:	shr	edi, 5
0x4254:	mov	eax, ecx
0x4256:	shr	edx, 6
0x4259:	add	edx, 0x30
0x425c:	mov	byte ptr [rsi + 1], dl
0x425f:	mul	r8d
0x4262:	imul	edi, edi, 0x3c
0x4265:	shr	edx, 3
0x4268:	lea	eax, [rdx + rdx*4]
0x426b:	add	eax, eax
0x426d:	sub	ecx, eax
0x426f:	lea	rax, [rsi + 3]
0x4273:	add	ecx, 0x30
0x4276:	sub	ebp, edi
0x4278:	mov	byte ptr [rsi + 2], cl
0x427b:	mov	edi, ebp
0x427d:	jne	0x4290


0x427f:	mov	byte ptr [rax], 0
0x4282:	mov	rax, r12
0x4285:	pop	rbx
0x4286:	pop	rbp
0x4287:	pop	r12
0x4289:	ret	


0x4290:	mov	eax, ebp
0x4292:	mov	byte ptr [rsi + 3], 0x3a
0x4296:	mul	r8d
0x4299:	shr	edx, 3
0x429c:	lea	eax, [rdx + 0x30]
0x429f:	lea	edx, [rdx + rdx*4]
0x42a2:	add	edx, edx
0x42a4:	mov	byte ptr [rsi + 4], al
0x42a7:	lea	rax, [rsi + 6]
0x42ab:	sub	edi, edx
0x42ad:	add	edi, 0x30
0x42b0:	mov	byte ptr [rsi + 5], dil
0x42b4:	jmp	0x427f


0x482d:	mov	esi, 0x64
0x4832:	movsxd	rdi, ebp
0x4835:	lea	r8, [rip + 0xb912]
0x483c:	sub	esi, ebp
0x483e:	mov	r9, rax
0x4841:	add	rdi, rbx
0x4844:	movsxd	rsi, esi
0x4847:	mov	rcx, -1
0x484e:	mov	edx, 1
0x4853:	xor	eax, eax
0x4855:	call	0x2700


0x485a:	jmp	0x4803


0xa8ec:	lea	rsi, [rip + 0x7148]
0xa8f3:	xor	edi, edi
0xa8f5:	mov	edx, 5
0xa8fa:	call	0x27f0


0xaa01:	jmp	0xa8ec


0x43de:	mov	eax, 1
0x43e3:	add	rsp, 8
0x43e7:	ret	


0x8d81:	cmp	r15d, 0xa
0x8d85:	mov	qword ptr [rsp + 0x58], rax
0x8d8a:	ja	0x9f3f


0x8d90:	lea	rcx, [rip + 0x8829]
0x8d97:	mov	edx, r15d
0x8d9a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x8d9e:	add	rax, rcx
0x8da1:	jmp	rax


0x9f3f:	call	0x2740


0xe38e:	test	rax, rax
0xe391:	mov	rcx, rax
0xe394:	movzx	edx, byte ptr [rbp - 0x3c8]
0xe39b:	je	0xd7d5


0xe3a1:	test	r14, r14
0xe3a4:	je	0xe540


0xe540:	mov	r15, rcx
0xe543:	jmp	0xdb5b


0xe3aa:	test	dl, dl
0xe3ac:	je	0xe540


0xe3b2:	mov	rsi, r15
0xe3b5:	mov	rdx, r14
0xe3b8:	mov	rdi, rax
0xe3bb:	call	0x2970


0xe3c0:	mov	r15, rax
0xe3c3:	jmp	0xdb5b


0xe41e:	test	rax, rax
0xe421:	mov	rcx, rax
0xe424:	movzx	edx, byte ptr [rbp - 0x3c8]
0xe42b:	je	0xd7d5


0xe431:	test	r14, r14
0xe434:	je	0xe574


0xe574:	mov	r15, rcx
0xe577:	jmp	0xe0ff


0xe43a:	test	dl, dl
0xe43c:	je	0xe574


0xe442:	mov	rsi, r15
0xe445:	mov	rdx, r14
0xe448:	mov	rdi, rax
0xe44b:	call	0x2970


0xe450:	mov	r15, rax
0xe453:	jmp	0xe0ff


0xe6d4:	test	rax, rax
0xe6d7:	mov	rcx, rax
0xe6da:	je	0xd7d5


0xe6e0:	test	r14, r14
0xe6e3:	je	0xe750


0xe750:	mov	r15, rcx
0xe753:	jmp	0xe64c


0xe6e5:	test	r13b, r13b
0xe6e8:	je	0xe750


0xe6ea:	mov	rsi, r15
0xe6ed:	mov	rdx, r14
0xe6f0:	mov	rdi, rax
0xe6f3:	call	0x2970


0xe6f8:	mov	r15, rax
0xe6fb:	jmp	0xe64c


0xe234:	test	rax, rax
0xe237:	mov	r9, rax
0xe23a:	mov	rcx, qword ptr [rbp - 0x3c8]
0xe241:	movzx	edx, byte ptr [rbp - 0x3d0]
0xe248:	mov	r8, qword ptr [rbp - 0x3e0]
0xe24f:	je	0xd7d5


0xe255:	test	rbx, rbx
0xe258:	je	0xe460


0xe460:	mov	r15, r9
0xe463:	jmp	0xd914


0xe25e:	test	dl, dl
0xe260:	je	0xe460


0xe266:	mov	rsi, r15
0xe269:	mov	rdx, rbx
0xe26c:	mov	rdi, rax
0xe26f:	mov	qword ptr [rbp - 0x3d0], r8
0xe276:	mov	qword ptr [rbp - 0x3c8], rcx
0xe27d:	call	0x2970


0xe282:	mov	rcx, qword ptr [rbp - 0x3c8]
0xe289:	mov	r15, rax
0xe28c:	mov	r8, qword ptr [rbp - 0x3d0]
0xe293:	jmp	0xd914


0xd747:	test	rax, rax
0xd74a:	mov	qword ptr [rbp - 0x3d8], rax
0xd751:	je	0xe138


0xd757:	mov	r8, qword ptr [rbp - 0x3c8]
0xd75e:	mov	qword ptr [rbp - 0x420], rax
0xd765:	xor	r12d, r12d
0xd768:	cmp	qword ptr [rbp - 0x3e8], 0
0xd770:	je	0xd77c


0xf5f6:	mov	rdx, qword ptr [rsp + 8]
0xf5fb:	mov	rcx, rax
0xf5fe:	mov	r9, qword ptr [rsp + 0x48]
0xf603:	mov	r10, qword ptr [rsp + 0x40]
0xf608:	mov	r8, qword ptr [rsp + 0x38]
0xf60d:	mov	r11, qword ptr [rsp + 0x30]
0xf612:	jmp	0xf459


0xf459:	test	rcx, rcx
0xf45c:	je	0xf677


0xf4b9:	mov	rdx, qword ptr [rsp + 8]
0xf4be:	mov	rcx, rax
0xf4c1:	mov	r9, qword ptr [rsp + 0x40]
0xf4c6:	mov	r10, qword ptr [rsp + 0x38]
0xf4cb:	mov	r8, qword ptr [rsp + 0x30]
0xf4d0:	jmp	0xedbc


0xedbc:	test	rcx, rcx
0xedbf:	je	0xf677


0xb322:	test	rax, rax
0xb325:	mov	rbx, rax
0xb328:	je	0xb30b


0xb30b:	mov	rax, rbx
0xb30e:	pop	rbx
0xb30f:	pop	rbp
0xb310:	pop	r12
0xb312:	ret	


0xb32a:	xor	edx, edx
0xb32c:	mov	qword ptr [rbx], 0
0xb333:	mov	rax, rbx
0xb336:	mov	word ptr [rbx + 8], dx
0xb33a:	pop	rbx
0xb33b:	pop	rbp
0xb33c:	pop	r12
0xb33e:	ret	


0xaed9:	test	rax, rax
0xaedc:	jne	0xaee3


0xaede:	test	rbx, rbx
0xaee1:	jne	0xaee5


0xaee3:	pop	rbx
0xaee4:	ret	


0xaee5:	call	0xb120


0xb089:	mov	rdx, rbx
0xb08c:	xor	esi, esi
0xb08e:	mov	rdi, rax
0xb091:	pop	rbx
0xb092:	jmp	0x28f0


0xb0e4:	add	rsp, 8
0xb0e8:	mov	rdx, rbx
0xb0eb:	mov	rsi, rbp
0xb0ee:	pop	rbx
0xb0ef:	pop	rbp
0xb0f0:	mov	rdi, rax
0xb0f3:	jmp	0x2970


0xb408:	lea	rdx, [rax + 1]
0xb40c:	mov	r15, rax
0xb40f:	mov	rax, rbx
0xb412:	sub	rax, r14
0xb415:	mov	rcx, rax
0xb418:	not	rcx
0xb41b:	cmp	rcx, rdx
0xb41e:	jb	0xb450


0xb450:	call	0x2750


0xb420:	add	rax, rdx
0xb423:	cmp	rax, 0x76
0xb427:	jbe	0xb460


0xb460:	mov	rsi, rbp
0xb463:	mov	rdi, rbx
0xb466:	call	0x2970


0xb429:	mov	rdi, rbp
0xb42c:	call	0xb2b0


0xb431:	mov	rbx, rax
0xb434:	mov	qword ptr [r12], rax
0xb438:	xor	eax, eax
0xb43a:	test	rbx, rbx
0xb43d:	je	0xb3f0


0xb43f:	mov	byte ptr [rbx + 8], 0
0xb443:	add	rbx, 9
0xb447:	jmp	0xb3e7


0xb46b:	mov	byte ptr [rbx + r15 + 1], 0
0xb471:	jmp	0xb3e7


0xb3ae:	lea	rbx, [rbx + rax + 1]
0xb3b3:	cmp	byte ptr [rbx], 0
0xb3b6:	jne	0xb380


0xb3b8:	mov	rax, qword ptr [r12]
0xb3bc:	test	rax, rax
0xb3bf:	je	0xb380


0xb380:	mov	rsi, rbp
0xb383:	mov	rdi, rbx
0xb386:	call	0x2950


0xb3c1:	lea	rbx, [rax + 9]
0xb3c5:	mov	rsi, rbp
0xb3c8:	mov	r12, rax
0xb3cb:	mov	rdi, rbx
0xb3ce:	call	0x2950


0xb3d3:	test	eax, eax
0xb3d5:	jne	0xb38f


0xb3d7:	jmp	0xb3e7


0xb2c1:	lea	rbp, [rax + 1]
0xb2c5:	mov	edi, 0x76
0xb2ca:	cmp	rbp, 0x76
0xb2ce:	cmovae	rdi, rbp
0xb2d2:	add	rdi, 0x11
0xb2d6:	and	rdi, 0xfffffffffffffff8
0xb2da:	call	0x29d0


0xb2df:	test	rax, rax
0xb2e2:	mov	rbx, rax
0xb2e5:	je	0xb30b


0xb2e7:	mov	qword ptr [rax], 0
0xb2ee:	lea	rdi, [rbx + 9]
0xb2f2:	mov	eax, 1
0xb2f7:	mov	word ptr [rbx + 8], ax
0xb2fb:	mov	rdx, rbp
0xb2fe:	mov	rsi, r12
0xb301:	call	0x2970


0xb306:	mov	byte ptr [rbx + rbp + 9], 0
0xb30b:	mov	rax, rbx
0xb30e:	pop	rbx
0xb30f:	pop	rbp
0xb310:	pop	r12
0xb312:	ret	


0x3ac6:	mov	r14, qword ptr [r15]
0x3ac9:	mov	qword ptr [rsp], -1
0x3ad1:	test	r14, r14
0x3ad4:	je	0x3b8d


0x3b8d:	mov	rax, qword ptr [rsp]
0x3b91:	add	rsp, 0x28
0x3b95:	pop	rbx
0x3b96:	pop	rbp
0x3b97:	pop	r12
0x3b99:	pop	r13
0x3b9b:	pop	r14
0x3b9d:	pop	r15
0x3b9f:	ret	


0x3ada:	mov	r12, rax
0x3add:	mov	byte ptr [rsp + 0x17], 0
0x3ae2:	xor	ebx, ebx
0x3ae4:	jmp	0x3b37


0x3b37:	mov	rsi, qword ptr [rsp + 8]
0x3b3c:	mov	rdx, r12
0x3b3f:	mov	rdi, r14
0x3b42:	call	0x2760


0x3d91:	test	rax, rax
0x3d94:	js	0x3da5


0x3da5:	mov	rdx, rax
0x3da8:	mov	rsi, r12
0x3dab:	mov	rdi, r14
0x3dae:	call	0x3bc0


0x3d96:	add	rsp, 8
0x3d9a:	pop	rbx
0x3d9b:	pop	rbp
0x3d9c:	pop	r12
0x3d9e:	pop	r13
0x3da0:	pop	r14
0x3da2:	pop	r15
0x3da4:	ret	


0x69a4:	test	r14, r14
0x69a7:	mov	qword ptr [rsp + 0x30], rax
0x69ac:	je	0x6f70


0x6f70:	lea	r14, [rsp + 0x60]
0x6f75:	mov	rdi, r14
0x6f78:	call	0x3fe0


0x69b2:	mov	rax, qword ptr [r14 + 8]
0x69b6:	mov	rbx, qword ptr [r14]
0x69b9:	mov	qword ptr [rsp + 0x18], rax
0x69be:	movzx	eax, byte ptr [rbp]
0x69c2:	cmp	al, 0x20
0x69c4:	ja	0x7240


0x69ca:	movabs	rcx, 0x100003e00
0x69d4:	mov	r13, rbp
0x69d7:	mov	esi, 1
0x69dc:	bt	rcx, rax
0x69e0:	mov	rdx, rcx
0x69e3:	jb	0x69fb


0x7240:	mov	r13, rbp
0x7243:	jmp	0x6a09


0x69fb:	add	r13, 1
0x69ff:	movzx	ecx, byte ptr [r13]
0x6a04:	cmp	cl, 0x20
0x6a07:	jbe	0x69f0


0x69e5:	jmp	0x6a09


0x6a09:	lea	rdi, [rip + 0x9834]
0x6a10:	mov	ecx, 4
0x6a15:	mov	rsi, r13
0x6a18:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x69f0:	mov	rax, rsi
0x69f3:	shl	rax, cl
0x69f6:	test	rax, rdx
0x69f9:	je	0x6a09


0x6a18:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6a1a:	seta	al
0x6a1d:	sbb	al, 0
0x6a1f:	test	al, al
0x6a21:	jne	0x6a78


0x6a23:	movzx	r12d, byte ptr [r13 + 4]
0x6a28:	lea	rcx, [r13 + 4]
0x6a2c:	test	r12b, r12b
0x6a2f:	je	0x6a78


0x6a78:	mov	r15, qword ptr [rsp]
0x6a7c:	lea	rdx, [rsp + 0xf0]
0x6a84:	mov	rsi, r14
0x6a87:	mov	rdi, r15
0x6a8a:	call	0xb570


0x6a31:	mov	rdx, rcx
0x6a34:	mov	eax, r12d
0x6a37:	mov	edi, 1
0x6a3c:	jmp	0x6a5b


0x6a5b:	cmp	al, 0x5c
0x6a5d:	jne	0x6a40


0x6a5f:	lea	rax, [rdx + 1]
0x6a63:	movzx	edx, byte ptr [rdx + 1]
0x6a67:	cmp	dl, 0x5c
0x6a6a:	je	0x6a4b


0x6a40:	cmp	al, 0x22
0x6a42:	je	0x6e38


0x6a4b:	lea	rdx, [rax + 1]
0x6a4f:	movzx	eax, byte ptr [rax + 1]
0x6a53:	add	rdi, 1
0x6a57:	test	al, al
0x6a59:	je	0x6a78


0x6a6c:	cmp	dl, 0x22
0x6a6f:	je	0x6a4b


0x6e38:	cmp	rdi, 0x64
0x6e3c:	jle	0x6e78


0x6a48:	mov	rax, rdx
0x6a4b:	lea	rdx, [rax + 1]
0x6a4f:	movzx	eax, byte ptr [rax + 1]
0x6a53:	add	rdi, 1
0x6a57:	test	al, al
0x6a59:	je	0x6a78


0x6e78:	lea	rax, [rsp + 0x370]
0x6e80:	mov	qword ptr [rsp + 8], 0
0x6e89:	mov	qword ptr [rsp + 0x10], rax
0x6e8e:	cmp	r12b, 0x22
0x6e92:	mov	rdx, qword ptr [rsp + 0x10]
0x6e97:	je	0x6ec5


0x6e3e:	mov	qword ptr [rsp + 0x38], rcx
0x6e43:	call	0x29d0


0x6ec5:	mov	rdi, qword ptr [rsp + 0x10]
0x6eca:	mov	byte ptr [rdx], 0
0x6ecd:	xor	r12d, r12d
0x6ed0:	mov	qword ptr [rsp + 0x38], rcx
0x6ed5:	call	0xb2b0


0x6ea0:	xor	eax, eax
0x6ea2:	cmp	r12b, 0x5c
0x6ea6:	sete	al
0x6ea9:	add	rdx, 1
0x6ead:	add	rax, rcx
0x6eb0:	movzx	r12d, byte ptr [rax + 1]
0x6eb5:	movzx	ecx, byte ptr [rax]
0x6eb8:	cmp	r12b, 0x22
0x6ebc:	mov	byte ptr [rdx - 1], cl
0x6ebf:	lea	rcx, [rax + 1]
0x6ec3:	jne	0x6ea0


0x6eda:	test	rax, rax
0x6edd:	mov	r15, rax
0x6ee0:	je	0x6dac


0x6dac:	mov	rdi, qword ptr [rsp + 8]
0x6db1:	call	0x2710


0x6ee6:	mov	rcx, qword ptr [rsp + 0x38]
0x6eeb:	movzx	eax, byte ptr [rcx + 1]
0x6eef:	lea	r13, [rcx + 1]
0x6ef3:	cmp	al, 0x20
0x6ef5:	ja	0x6f31


0x6ef7:	movabs	rcx, 0x100003e00
0x6f01:	mov	esi, 1
0x6f06:	bt	rcx, rax
0x6f0a:	mov	rdx, rcx
0x6f0d:	jb	0x6f23


0x6f31:	lea	rdx, [rsp + 0xf0]
0x6f39:	mov	rsi, r14
0x6f3c:	mov	rdi, r15
0x6f3f:	xor	r12d, r12d
0x6f42:	call	0xb570


0x6f23:	add	r13, 1
0x6f27:	movzx	ecx, byte ptr [r13]
0x6f2c:	cmp	cl, 0x20
0x6f2f:	jbe	0x6f18


0x6f0f:	jmp	0x6f31


0x6f18:	mov	rax, rsi
0x6f1b:	shl	rax, cl
0x6f1e:	test	rax, rdx
0x6f21:	je	0x6f31


0x6db6:	mov	rbx, qword ptr [rsp + 0x448]
0x6dbe:	xor	rbx, qword ptr fs:[0x28]
0x6dc7:	mov	eax, r12d
0x6dca:	jne	0x7ed0


0x6dd0:	add	rsp, 0x458
0x6dd7:	pop	rbx
0x6dd8:	pop	rbp
0x6dd9:	pop	r12
0x6ddb:	pop	r13
0x6ddd:	pop	r14
0x6ddf:	pop	r15
0x6de1:	ret	


0x7ed0:	call	0x2830


0x6e48:	test	rax, rax
0x6e4b:	mov	qword ptr [rsp + 0x10], rax
0x6e50:	mov	qword ptr [rsp + 8], rax
0x6e55:	mov	rcx, qword ptr [rsp + 0x38]
0x6e5a:	jne	0x6e8e


0x6e8e:	cmp	r12b, 0x22
0x6e92:	mov	rdx, qword ptr [rsp + 0x10]
0x6e97:	je	0x6ec5


0x6f7d:	jmp	0x69b2


0x8834:	test	bpl, 4
0x8838:	mov	r13, rax
0x883b:	je	0x8a70


0x8a70:	lea	rax, [r13 - 8]
0x8a74:	xor	r14d, r14d
0x8a77:	cmp	rax, 4
0x8a7b:	jbe	0x889d


0x8841:	mov	esi, 0x2e
0x8846:	mov	rdi, rbx
0x8849:	call	0x2870


0x889d:	test	r13b, 1
0x88a1:	jne	0x8862


0x8a81:	jmp	0x8862


0x2870:	jmp	qword ptr [rip + 0x2125f2]


0x88a3:	lea	rcx, [r13 + rbx]
0x88a8:	mov	rdx, rbx
0x88ab:	nop	dword ptr [rax + rax]
0x88b0:	movsx	eax, byte ptr [rdx]
0x88b3:	sub	eax, 0x30
0x88b6:	cmp	eax, 9
0x88b9:	ja	0x8862


0x8862:	xor	eax, eax
0x8864:	mov	rsi, qword ptr [rsp + 0xc8]
0x886c:	xor	rsi, qword ptr fs:[0x28]
0x8875:	jne	0x8adf




0x88bb:	add	rdx, 1
0x88bf:	cmp	rcx, rdx
0x88c2:	jne	0x88b0


0x887b:	add	rsp, 0xd8
0x8882:	pop	rbx
0x8883:	pop	rbp
0x8884:	pop	r12
0x8886:	pop	r13
0x8888:	pop	r14
0x888a:	pop	r15
0x888c:	ret	


0x8adf:	call	0x2830


0x88c4:	shr	r13, 1
0x88c7:	xor	edx, edx
0x88c9:	lea	r15, [rsp + 0x90]
0x88d1:	jmp	0x88db


0x88b0:	movsx	eax, byte ptr [rdx]
0x88b3:	sub	eax, 0x30
0x88b6:	cmp	eax, 9
0x88b9:	ja	0x8862


0x88db:	movsx	eax, byte ptr [rbx + rdx*2]
0x88df:	lea	ecx, [rax + rax*4 - 0xf0]
0x88e6:	movsx	eax, byte ptr [rbx + rdx*2 + 1]
0x88eb:	lea	eax, [rax + rcx*2 - 0x30]
0x88ef:	mov	dword ptr [r15 + rdx*4], eax
0x88f3:	lea	rax, [rdx + 1]
0x88f7:	cmp	r13, rax
0x88fa:	jne	0x88d8


0x88fc:	sub	rdx, 3
0x8900:	test	bpl, 1
0x8904:	je	0x8a90


0x88d8:	mov	rdx, rax
0x88db:	movsx	eax, byte ptr [rbx + rdx*2]
0x88df:	lea	ecx, [rax + rax*4 - 0xf0]
0x88e6:	movsx	eax, byte ptr [rbx + rdx*2 + 1]
0x88eb:	lea	eax, [rax + rcx*2 - 0x30]
0x88ef:	mov	dword ptr [r15 + rdx*4], eax
0x88f3:	lea	rax, [rdx + 1]
0x88f7:	cmp	r13, rax
0x88fa:	jne	0x88d8


0x8a90:	lea	rdi, [rsp + 0x24]
0x8a95:	mov	ecx, ebp
0x8a97:	mov	rsi, r15
0x8a9a:	call	0x8740


0x890a:	mov	eax, dword ptr [rsp + 0x90]
0x8911:	lea	rsi, [r15 + 0x10]
0x8915:	lea	rdi, [rsp + 0x24]
0x891a:	mov	ecx, ebp
0x891c:	sub	eax, 1
0x891f:	mov	dword ptr [rsp + 0x20], eax
0x8923:	mov	eax, dword ptr [rsp + 0x94]
0x892a:	mov	dword ptr [rsp + 0x1c], eax
0x892e:	mov	eax, dword ptr [rsp + 0x98]
0x8935:	mov	dword ptr [rsp + 0x18], eax
0x8939:	mov	eax, dword ptr [rsp + 0x9c]
0x8940:	mov	dword ptr [rsp + 0x14], eax
0x8944:	call	0x8740


0x8949:	test	al, al
0x894b:	je	0x8862


0x8951:	test	r14, r14
0x8954:	je	0x8ad0


0x8ad0:	mov	dword ptr [rsp + 0x10], 0
0x8ad8:	xor	eax, eax
0x8ada:	jmp	0x8987


0x895a:	movsx	eax, byte ptr [r14 + 1]
0x895f:	sub	eax, 0x30
0x8962:	cmp	eax, 9
0x8965:	ja	0x8862


0x8987:	mov	dword ptr [rsp + 0x50], eax
0x898b:	mov	eax, dword ptr [rsp + 0x14]
0x898f:	lea	rdi, [rsp + 0x50]
0x8994:	mov	dword ptr [rsp + 0x68], 0xffffffff
0x899c:	mov	dword ptr [rsp + 0x70], 0xffffffff
0x89a4:	mov	dword ptr [rsp + 0x54], eax
0x89a8:	mov	eax, dword ptr [rsp + 0x18]
0x89ac:	mov	dword ptr [rsp + 0x58], eax
0x89b0:	mov	eax, dword ptr [rsp + 0x1c]
0x89b4:	mov	dword ptr [rsp + 0x5c], eax
0x89b8:	mov	eax, dword ptr [rsp + 0x20]
0x89bc:	mov	dword ptr [rsp + 0x60], eax
0x89c0:	mov	eax, dword ptr [rsp + 0x24]
0x89c4:	mov	dword ptr [rsp + 0x64], eax
0x89c8:	call	0x2a00


0x896b:	movsx	edx, byte ptr [r14 + 2]
0x8970:	lea	ecx, [rdx - 0x30]
0x8973:	cmp	ecx, 9
0x8976:	ja	0x8862


0x2a00:	jmp	qword ptr [rip + 0x21252a]


0x897c:	lea	eax, [rax + rax*4]
0x897f:	lea	eax, [rdx + rax*2 - 0x30]
0x8983:	mov	dword ptr [rsp + 0x10], eax
0x8987:	mov	dword ptr [rsp + 0x50], eax
0x898b:	mov	eax, dword ptr [rsp + 0x14]
0x898f:	lea	rdi, [rsp + 0x50]
0x8994:	mov	dword ptr [rsp + 0x68], 0xffffffff
0x899c:	mov	dword ptr [rsp + 0x70], 0xffffffff
0x89a4:	mov	dword ptr [rsp + 0x54], eax
0x89a8:	mov	eax, dword ptr [rsp + 0x18]
0x89ac:	mov	dword ptr [rsp + 0x58], eax
0x89b0:	mov	eax, dword ptr [rsp + 0x1c]
0x89b4:	mov	dword ptr [rsp + 0x5c], eax
0x89b8:	mov	eax, dword ptr [rsp + 0x20]
0x89bc:	mov	dword ptr [rsp + 0x60], eax
0x89c0:	mov	eax, dword ptr [rsp + 0x24]
0x89c4:	mov	dword ptr [rsp + 0x64], eax
0x89c8:	call	0x2a00




0x8a9f:	test	al, al
0x8aa1:	je	0x8862


0x8aa7:	lea	rax, [r15 + r13*4 - 0x10]
0x8aac:	mov	esi, dword ptr [rax]
0x8aae:	lea	edx, [rsi - 1]
0x8ab1:	mov	dword ptr [rsp + 0x20], edx
0x8ab5:	mov	edx, dword ptr [rax + 4]
0x8ab8:	mov	dword ptr [rsp + 0x1c], edx
0x8abc:	mov	edx, dword ptr [rax + 8]
0x8abf:	mov	eax, dword ptr [rax + 0xc]
0x8ac2:	mov	dword ptr [rsp + 0x18], edx
0x8ac6:	mov	dword ptr [rsp + 0x14], eax
0x8aca:	jmp	0x8951


0xb109:	mov	rdi, rbx
0xb10c:	lea	rsi, [rax + 1]
0xb110:	pop	rbx
0xb111:	jmp	0xb0d0


0xa8ff:	lea	rdx, [rip + 0x745a]
0xa906:	mov	rcx, rax
0xa909:	mov	r8d, 0x7e3
0xa90f:	mov	esi, 1
0xa914:	mov	rdi, rbp
0xa917:	xor	eax, eax
0xa919:	call	0x2af0


0xa91e:	lea	rsi, [rip + 0x71a3]
0xa925:	xor	edi, edi
0xa927:	mov	edx, 5
0xa92c:	call	0x27f0


0xa931:	mov	rsi, rbp
0xa934:	mov	rdi, rax
0xa937:	call	0x2930


0x2930:	jmp	qword ptr [rip + 0x212592]




0x6905:	mov	rsi, r14
0x6908:	mov	rdi, rax
0x690b:	xor	eax, eax
0x690d:	call	0x42c0


0x6912:	mov	eax, 2
0x6917:	mov	r9d, 0x3f
0x691d:	mov	r8d, dword ptr [rsp + 8]
0x6922:	mov	r11, qword ptr [rsp + 0x10]
0x6927:	jmp	0x542e


0x36cd:	mov	rdi, qword ptr [rip + 0x211a0c]
0x36d4:	mov	rdx, rax
0x36d7:	mov	rcx, rbx
0x36da:	mov	esi, 1
0x36df:	xor	eax, eax
0x36e1:	call	0x2af0


0x36e6:	mov	edi, ebp
0x36e8:	call	0x2ad0


0x2ad0:	jmp	qword ptr [rip + 0x2124c2]




0x36fb:	mov	rdx, rbx
0x36fe:	mov	rsi, rax
0x3701:	mov	edi, 1
0x3706:	xor	eax, eax
0x3708:	call	0x2a40


0x2a40:	jmp	qword ptr [rip + 0x21250a]




0x3be3:	mov	rbx, rax
0x3be6:	mov	rsi, rbp
0x3be9:	mov	edi, 1
0x3bee:	call	0xa870


0x3c2e:	mov	rbx, rax
0x3c31:	jmp	0x3be6


0x3be6:	mov	rsi, rbp
0x3be9:	mov	edi, 1
0x3bee:	call	0xa870


0x3c71:	mov	rdi, rax
0x3c74:	mov	rsi, rbx
0x3c77:	call	0x2930


0x45df:	mov	rsi, rbp
0x45e2:	mov	rdi, rax
0x45e5:	xor	eax, eax
0x45e7:	call	0x42c0


0x45ec:	mov	rsi, qword ptr [rbx + 0x68]
0x45f0:	test	rsi, rsi
0x45f3:	jne	0x4780


0x45f9:	mov	rsi, qword ptr [rbx + 0x70]
0x45fd:	test	rsi, rsi
0x4600:	je	0x4680


0x4780:	lea	rdx, [rip + 0xb979]
0x4787:	xor	edi, edi
0x4789:	call	0x43b0


0x4680:	mov	rsi, qword ptr [rbx + 0x78]
0x4684:	xor	edi, edi
0x4686:	test	rsi, rsi
0x4689:	jne	0x46f0


0x4602:	xor	edi, edi
0x4604:	lea	rdx, [rip + 0xbafd]
0x460b:	call	0x43b0


0x468b:	cmp	qword ptr [rbx + 0x80], 0
0x4693:	jne	0x4620


0x46f0:	lea	rdx, [rip + 0xba1a]
0x46f7:	call	0x43b0


0x4695:	cmp	qword ptr [rbx + 0x88], 0
0x469d:	jne	0x4620


0x4620:	mov	rsi, qword ptr [rbx + 0x80]
0x4627:	test	rsi, rsi
0x462a:	jne	0x470f


0x469f:	cmp	qword ptr [rbx + 0x90], 0
0x46a7:	jne	0x4620


0x4630:	mov	rsi, qword ptr [rbx + 0x88]
0x4637:	test	rsi, rsi
0x463a:	jne	0x472e


0x470f:	lea	rdx, [rip + 0xba02]
0x4716:	call	0x43b0


0x46ad:	mov	eax, dword ptr [rbx + 0x98]
0x46b3:	test	eax, eax
0x46b5:	jne	0x4620


0x4640:	mov	rsi, qword ptr [rbx + 0x90]
0x4647:	test	rsi, rsi
0x464a:	jne	0x474d


0x472e:	lea	rdx, [rip + 0xb9eb]
0x4735:	call	0x43b0


0x46bb:	mov	rbx, qword ptr [rip + 0x210a1e]
0x46c2:	lea	rsi, [rip + 0xba27]
0x46c9:	xor	edi, edi
0x46cb:	mov	edx, 5
0x46d0:	call	0x27f0


0x4650:	movsxd	rsi, dword ptr [rbx + 0x98]
0x4657:	test	rsi, rsi
0x465a:	jne	0x476c


0x474d:	lea	rdx, [rip + 0xbab1]
0x4754:	call	0x43b0


0x4660:	mov	rsi, qword ptr [rip + 0x210a79]
0x4667:	add	rsp, 8
0x466b:	mov	edi, 0xa
0x4670:	pop	rbx
0x4671:	pop	rbp
0x4672:	jmp	0x2910


0x476c:	lea	rdx, [rip + 0xb9b5]
0x4773:	call	0x43b0


0x2910:	jmp	qword ptr [rip + 0x2125a2]




0x4778:	jmp	0x4660


0x4759:	movsxd	rsi, dword ptr [rbx + 0x98]
0x4760:	movzx	edi, al
0x4763:	test	rsi, rsi
0x4766:	je	0x4660


0x473a:	mov	rsi, qword ptr [rbx + 0x90]
0x4741:	movzx	edi, al
0x4744:	test	rsi, rsi
0x4747:	je	0x4650


0x471b:	mov	rsi, qword ptr [rbx + 0x88]
0x4722:	movzx	edi, al
0x4725:	test	rsi, rsi
0x4728:	je	0x4640


0x46fc:	mov	rsi, qword ptr [rbx + 0x80]
0x4703:	movzx	edi, al
0x4706:	test	rsi, rsi
0x4709:	je	0x4630


0x4610:	mov	rsi, qword ptr [rbx + 0x78]
0x4614:	movzx	edi, al
0x4617:	test	rsi, rsi
0x461a:	jne	0x46f0


0x478e:	mov	rsi, qword ptr [rbx + 0x70]
0x4792:	movzx	edi, al
0x4795:	test	rsi, rsi
0x4798:	jne	0x4604


0x479e:	mov	rsi, qword ptr [rbx + 0x78]
0x47a2:	jmp	0x4617


0x4604:	lea	rdx, [rip + 0xbafd]
0x460b:	call	0x43b0


0x4617:	test	rsi, rsi
0x461a:	jne	0x46f0


0x46d5:	add	rsp, 8
0x46d9:	mov	rsi, rbx
0x46dc:	mov	rdi, rax
0x46df:	pop	rbx
0x46e0:	pop	rbp
0x46e1:	jmp	0x28e0


0x28e0:	jmp	qword ptr [rip + 0x2125ba]




0x49a3:	mov	rsi, rbp
0x49a6:	mov	rdi, rax
0x49a9:	xor	eax, eax
0x49ab:	call	0x42c0


0x49b0:	cmp	qword ptr [rbx + 0xa8], 0
0x49b8:	je	0x49c7


0x49c7:	movzx	eax, byte ptr [rbx + 0xdf]
0x49ce:	cmp	byte ptr [rbx + 0xd8], al
0x49d4:	je	0x4bb4


0x49ba:	cmp	byte ptr [rbx + 0xda], 0
0x49c1:	je	0x4bc0


0x4bb4:	xor	edx, edx
0x4bb6:	jmp	0x4a1c


0x49da:	lea	rsi, [rip + 0xb79a]
0x49e1:	mov	rbp, qword ptr [rbx + 0x28]
0x49e5:	mov	edx, 5
0x49ea:	xor	edi, edi
0x49ec:	call	0x27f0


0x4bc0:	mov	rcx, qword ptr [rbx + 0x28]
0x4bc4:	mov	r9, qword ptr [rbx + 0x40]
0x4bc8:	lea	rdx, [rip + 0xb592]
0x4bcf:	mov	r8, qword ptr [rbx + 0x38]
0x4bd3:	mov	rdi, qword ptr [rip + 0x210506]
0x4bda:	xor	eax, eax
0x4bdc:	mov	esi, 1
0x4be1:	call	0x2af0


0x4a1c:	cmp	qword ptr [rbx + 0xc8], 0
0x4a24:	je	0x4a33


0x4a33:	cmp	qword ptr [rbx + 0xb0], 0
0x4a3b:	je	0x4aa2


0x4a26:	cmp	byte ptr [rbx + 0xdd], 0
0x4a2d:	je	0x4c20


0x4aa2:	cmp	qword ptr [rbx + 0xb8], 0
0x4aaa:	je	0x4b30


0x4a3d:	cmp	byte ptr [rbx + 0xdb], 0
0x4a44:	jne	0x4aa2


0x4c20:	mov	rcx, qword ptr [rbx + 0x48]
0x4c24:	xor	edx, 1
0x4c27:	lea	rax, [rip + 0xb559]
0x4c2e:	mov	r9, qword ptr [rbx + 0x58]
0x4c32:	mov	r8, qword ptr [rbx + 0x50]
0x4c36:	movzx	edx, dl
0x4c39:	mov	rdi, qword ptr [rip + 0x2104a0]
0x4c40:	add	rdx, rax
0x4c43:	mov	esi, 1
0x4c48:	xor	eax, eax
0x4c4a:	call	0x2af0


0x4b30:	cmp	qword ptr [rbx + 0xd0], 0
0x4b38:	je	0x4b47


0x4ab0:	cmp	byte ptr [rbx + 0xdc], 0
0x4ab7:	jne	0x4b30


0x4a46:	test	dl, dl
0x4a48:	jne	0x4c8f


0x4b47:	cmp	byte ptr [rbx + 0xa0], 0
0x4b4e:	je	0x4b84


0x4b3a:	cmp	byte ptr [rbx + 0xde], 0
0x4b41:	je	0x4cc0


0x4ab9:	cmp	qword ptr [rbx + 0xc0], 0
0x4ac1:	lea	rax, [rip + 0xb68d]
0x4ac8:	lea	r8, [rip + 0xb8a7]
0x4acf:	mov	ecx, dword ptr [rbx + 0x14]
0x4ad2:	mov	rdi, qword ptr [rip + 0x210607]
0x4ad9:	mov	esi, 1
0x4ade:	cmovne	r8, rax
0x4ae2:	xor	edx, 1
0x4ae5:	lea	rax, [rip + 0xb6b7]
0x4aec:	movzx	edx, dl
0x4aef:	add	rdx, rax
0x4af2:	xor	eax, eax
0x4af4:	call	0x2af0


0x4a4e:	mov	rsi, rsp
0x4a51:	mov	rdi, rbx
0x4a54:	mov	r13d, dword ptr [rbx + 0x10]
0x4a58:	mov	r12, qword ptr [rbx + 8]
0x4a5c:	call	0x4870


0x4c8f:	mov	rsi, qword ptr [rip + 0x21044a]
0x4c96:	mov	edi, 0x20
0x4c9b:	call	0x2910


0x4b84:	mov	rsi, qword ptr [rip + 0x210555]
0x4b8b:	mov	edi, 0xa
0x4b90:	call	0x2910


0x4b50:	test	dl, dl
0x4b52:	mov	rbx, qword ptr [rbx + 0x58]
0x4b56:	jne	0x4b1b


0x4cc0:	xor	edx, 1
0x4cc3:	movzx	ebp, dl
0x4cc6:	lea	rdx, [rip + 0xb48d]
0x4ccd:	add	rbp, rdx
0x4cd0:	mov	edi, dword ptr [rbx + 0x18]
0x4cd3:	mov	rsi, rsp
0x4cd6:	call	0x41c0


0x4b58:	lea	rsi, [rip + 0xb650]
0x4b5f:	mov	edx, 5
0x4b64:	xor	edi, edi
0x4b66:	call	0x27f0


0x4b1b:	mov	rsi, qword ptr [rip + 0x2105be]
0x4b22:	mov	edi, 0x20
0x4b27:	call	0x2910


0x4cdb:	mov	rdi, qword ptr [rip + 0x2103fe]
0x4ce2:	mov	rcx, rax
0x4ce5:	mov	rdx, rbp
0x4ce8:	mov	esi, 1
0x4ced:	xor	eax, eax
0x4cef:	call	0x2af0


0x4a61:	lea	rsi, [rip + 0xbc90]
0x4a68:	mov	edx, 5
0x4a6d:	xor	edi, edi
0x4a6f:	mov	rbp, rax
0x4a72:	call	0x27f0


0x4cf4:	mov	byte ptr [rbx + 0xde], 1
0x4cfb:	jmp	0x4b0e


0x4b0e:	cmp	byte ptr [rbx + 0xa0], 0
0x4b15:	je	0x4b84


0x4b17:	mov	rbx, qword ptr [rbx + 0x58]
0x4b1b:	mov	rsi, qword ptr [rip + 0x2105be]
0x4b22:	mov	edi, 0x20
0x4b27:	call	0x2910


0x4af9:	cmp	qword ptr [rbx + 0xd0], 0
0x4b01:	mov	byte ptr [rbx + 0xdc], 1
0x4b08:	jne	0x4ca8


0x4ca8:	cmp	byte ptr [rbx + 0xde], 0
0x4caf:	jne	0x4b0e


0x4cb5:	lea	rbp, [rip + 0xb49e]
0x4cbc:	jmp	0x4cd0


0x4cd0:	mov	edi, dword ptr [rbx + 0x18]
0x4cd3:	mov	rsi, rsp
0x4cd6:	call	0x41c0


0x4c4f:	mov	rcx, qword ptr [rbx + 0x60]
0x4c53:	test	rcx, rcx
0x4c56:	jne	0x4d00


0x4c5c:	cmp	dword ptr [rbx + 0x1c], 1
0x4c60:	je	0x4d20


0x4d00:	mov	rdi, qword ptr [rip + 0x2103d9]
0x4d07:	lea	rdx, [rip + 0xb48c]
0x4d0e:	mov	esi, 1
0x4d13:	xor	eax, eax
0x4d15:	call	0x2af0


0x4d20:	mov	rcx, qword ptr [rip + 0x2103b9]
0x4d27:	lea	rdi, [rip + 0xb472]
0x4d2e:	mov	edx, 2
0x4d33:	mov	esi, 1
0x4d38:	call	0x2ae0


0x4c66:	cmp	qword ptr [rbx + 0xb0], 0
0x4c6e:	mov	byte ptr [rbx + 0xdd], 1
0x4c75:	mov	edx, 1
0x4c7a:	je	0x4aa2


0x4c80:	movzx	edx, byte ptr [rbx + 0xdb]
0x4c87:	test	dl, dl
0x4c89:	jne	0x4aa2


0x4d3d:	jmp	0x4c66


0x4d1a:	jmp	0x4c5c


0x4be6:	movzx	eax, byte ptr [rbx + 0xdf]
0x4bed:	mov	byte ptr [rbx + 0xda], 1
0x4bf4:	mov	edx, 1
0x4bf9:	cmp	byte ptr [rbx + 0xd8], al
0x4bff:	je	0x4a1c


0x4c05:	mov	rsi, qword ptr [rip + 0x2104d4]
0x4c0c:	mov	edi, 0x20
0x4c11:	call	0x2910


0x4a77:	mov	rdi, qword ptr [rip + 0x210662]
0x4a7e:	mov	rdx, rax
0x4a81:	mov	r9d, r13d
0x4a84:	mov	r8, r12
0x4a87:	mov	rcx, rbp
0x4a8a:	mov	esi, 1
0x4a8f:	xor	eax, eax
0x4a91:	call	0x2af0


0x4a96:	mov	byte ptr [rbx + 0xdb], 1
0x4a9d:	mov	edx, 1
0x4aa2:	cmp	qword ptr [rbx + 0xb8], 0
0x4aaa:	je	0x4b30


0x4b6b:	mov	rdi, qword ptr [rip + 0x21056e]
0x4b72:	mov	rdx, rax
0x4b75:	mov	rcx, rbx
0x4b78:	mov	esi, 1
0x4b7d:	xor	eax, eax
0x4b7f:	call	0x2af0


0x49f1:	mov	rdi, qword ptr [rip + 0x2106e8]
0x49f8:	mov	rdx, rax
0x49fb:	mov	rcx, rbp
0x49fe:	mov	esi, 1
0x4a03:	xor	eax, eax
0x4a05:	call	0x2af0


0x4a0a:	movzx	eax, byte ptr [rbx + 0xd8]
0x4a11:	mov	edx, 1
0x4a16:	mov	byte ptr [rbx + 0xdf], al
0x4a1c:	cmp	qword ptr [rbx + 0xc8], 0
0x4a24:	je	0x4a33


0xae64:	lea	rdx, [rip + 0x6c2c]
0xae6b:	mov	rsi, rax
0xae6e:	mov	edi, 1
0xae73:	xor	eax, eax
0xae75:	call	0x2a40


0xb137:	mov	edi, dword ptr [rip + 0x209ee3]
0xb13d:	lea	rdx, [rip + 0x4f5c]
0xb144:	mov	rcx, rax
0xb147:	xor	esi, esi
0xb149:	xor	eax, eax
0xb14b:	call	0x2a70


0x2a70:	jmp	qword ptr [rip + 0x2124f2]




0xb197:	cmp	rax, -3
0xb19b:	mov	rbp, rax
0xb19e:	jbe	0xb1c0


0xb1c0:	mov	rdx, qword ptr [rsp + 8]
0xb1c5:	xor	rdx, qword ptr fs:[0x28]
0xb1ce:	mov	rax, rbp
0xb1d1:	jne	0xb1de


0xb1a0:	test	r12, r12
0xb1a3:	je	0xb1c0


0xb1d3:	add	rsp, 0x18
0xb1d7:	pop	rbx
0xb1d8:	pop	rbp
0xb1d9:	pop	r12
0xb1db:	pop	r13
0xb1dd:	ret	


0xb1de:	call	0x2830


0xb1a5:	xor	edi, edi
0xb1a7:	call	0xb8f0


0xb455:	mov	dword ptr [rax], 0xc
0xb45b:	xor	eax, eax
0xb45d:	jmp	0xb3f0


0xe2c0:	mov	qword ptr [rbp - 0x3c8], rax
0xe2c7:	nop	word ptr [rax + rax]
0xe2d0:	mov	rdi, r15
0xe2d3:	call	0x2710


0xe2d8:	jmp	0xd7f3


0xd7f3:	mov	rax, qword ptr [rbp - 0x420]
0xd7fa:	test	rax, rax
0xd7fd:	je	0xd807


0xd807:	mov	rax, qword ptr [rbp - 0x408]
0xd80e:	mov	rdi, qword ptr [rbp - 0x2b8]
0xd815:	add	rax, 0x20
0xd819:	cmp	rdi, rax
0xd81c:	je	0xd823


0xd7ff:	mov	rdi, rax
0xd802:	call	0x2710


0xd823:	mov	rax, qword ptr [rbp - 0x410]
0xd82a:	mov	rdi, qword ptr [rbp - 0x3a8]
0xd831:	add	rax, 0x10
0xd835:	cmp	rdi, rax
0xd838:	je	0xd83f


0xd81e:	call	0x2710


0xd83f:	mov	rax, qword ptr [rbp - 0x3c8]
0xd846:	xor	r15d, r15d
0xd849:	mov	dword ptr [rax], 0xc
0xd84f:	mov	rdi, qword ptr [rbp - 0x38]
0xd853:	xor	rdi, qword ptr fs:[0x28]
0xd85c:	mov	rax, r15
0xd85f:	jne	0xe767


0xd83a:	call	0x2710


0xdb65:	mov	qword ptr [rbp - 0x3c8], rax
0xdb6c:	mov	eax, dword ptr [rax]
0xdb6e:	mov	qword ptr [rbp - 0x3f8], rbx
0xdb75:	mov	dword ptr [rbp - 0x424], eax
0xdb7b:	nop	dword ptr [rax + rax]
0xdb80:	mov	rax, qword ptr [rbp - 0x3c8]
0xdb87:	mov	rbx, r12
0xdb8a:	mov	r10d, 0x7fffffff
0xdb90:	sub	rbx, r14
0xdb93:	mov	dword ptr [rbp - 0x3bc], 0xffffffff
0xdb9d:	cmp	rbx, 0x7fffffff
0xdba4:	mov	dword ptr [rax], 0
0xdbaa:	mov	eax, dword ptr [rbp - 0x3d0]
0xdbb0:	cmovbe	r10, rbx
0xdbb4:	cmp	eax, 0x11
0xdbb7:	ja	0xe596


0xdbbd:	lea	rsi, [rip + 0x43ec]
0xdbc4:	movsxd	rax, dword ptr [rsi + rax*4]
0xdbc8:	add	rax, rsi
0xdbcb:	jmp	rax


0xb848:	mov	dword ptr [rax], 0x4b
0xb84e:	mov	rdi, r13
0xb851:	mov	ebx, 0xffffffff
0xb856:	call	0xd660


0xb82f:	mov	r13d, dword ptr [rax]
0xb832:	mov	r12, rax
0xb835:	mov	rdi, rbp
0xb838:	call	0x2710


0xb83d:	mov	dword ptr [r12], r13d
0xb841:	jmp	0xb7f6


0x3fa7:	cmp	dword ptr [rax], 0x26
0x3faa:	je	0x3f6f


0x3fac:	add	rsp, 8
0x3fb0:	mov	eax, 0xffffffff
0x3fb5:	pop	rbx
0x3fb6:	pop	rbp
0x3fb7:	pop	r12
0x3fb9:	pop	r13
0x3fbb:	ret	


0xd7da:	mov	qword ptr [rbp - 0x3c8], rax
0xd7e1:	cmp	r15, qword ptr [rbp - 0x3e8]
0xd7e8:	je	0xd7f3


0xd7ea:	test	r15, r15
0xd7ed:	jne	0xe2d0


0xe2d0:	mov	rdi, r15
0xe2d3:	call	0x2710


0xe5dd:	xor	r15d, r15d
0xe5e0:	mov	dword ptr [rax], 0x16
0xe5e6:	jmp	0xd84f


0xe13d:	mov	qword ptr [rbp - 0x3c8], rax
0xe144:	jmp	0xd807


0xf4a1:	mov	dword ptr [rax], 0xc
0xf4a7:	mov	eax, 0xffffffff
0xf4ac:	jmp	0xea32


0xea32:	add	rsp, 0x58
0xea36:	pop	rbx
0xea37:	pop	rbp
0xea38:	pop	r12
0xea3a:	pop	r13
0xea3c:	pop	r14
0xea3e:	pop	r15
0xea40:	ret	


0xf203:	mov	dword ptr [rax], 0x16
0xf209:	mov	eax, 0xffffffff
0xf20e:	jmp	0xea32


0x3fc5:	mov	dword ptr [rax], 9
0x3fcb:	add	rsp, 8
0x3fcf:	mov	eax, 0xffffffff
0x3fd4:	pop	rbx
0x3fd5:	pop	rbp
0x3fd6:	pop	r12
0x3fd8:	pop	r13
0x3fda:	ret	


0x9f71:	mov	r13, rax
0x9f74:	mov	eax, dword ptr [rax]
0x9f76:	test	r15d, r15d
0x9f79:	mov	rbx, qword ptr [rip + 0x20b100]
0x9f80:	mov	dword ptr [rsp + 0x18], eax
0x9f84:	js	0xa0f1


0xa0f1:	call	0x2740


0x9f8a:	cmp	dword ptr [rip + 0x20b0e7], r15d
0x9f91:	jg	0x9ff5


0x9f93:	cmp	r15d, 0x7fffffff
0x9f9a:	je	0xa0f6


0x9ff5:	mov	eax, dword ptr [rbp + 4]
0x9ff8:	shl	r15, 4
0x9ffc:	sub	rsp, 8
0xa000:	add	rbx, r15
0xa003:	lea	r15, [rbp + 8]
0xa007:	mov	r8d, dword ptr [rbp]
0xa00b:	mov	r11, qword ptr [rbx]
0xa00e:	mov	r12, qword ptr [rbx + 8]
0xa012:	mov	rcx, r14
0xa015:	or	eax, 1
0xa018:	mov	dword ptr [rsp + 0x24], eax
0xa01c:	push	qword ptr [rbp + 0x30]
0xa01f:	mov	r9d, eax
0xa022:	push	qword ptr [rbp + 0x28]
0xa025:	push	r15
0xa027:	mov	rsi, r11
0xa02a:	mov	rdx, qword ptr [rsp + 0x28]
0xa02f:	mov	rdi, r12
0xa032:	mov	qword ptr [rsp + 0x30], r11
0xa037:	call	0x8d10


0xa0f6:	call	0xb120


0x9fa0:	lea	r12d, [r15 + 1]
0x9fa4:	lea	rax, [rip + 0x20b0e5]
0x9fab:	movsxd	rsi, r12d
0x9fae:	shl	rsi, 4
0x9fb2:	cmp	rbx, rax
0x9fb5:	je	0xa0d0


0xa0d0:	xor	edi, edi
0xa0d2:	call	0xaf30


0x9fbb:	mov	rdi, rbx
0x9fbe:	call	0xaf30


0x9fc3:	mov	rbx, rax
0x9fc6:	mov	qword ptr [rip + 0x20b0b3], rax
0x9fcd:	movsxd	rdi, dword ptr [rip + 0x20b0a4]
0x9fd4:	mov	edx, r12d
0x9fd7:	xor	esi, esi
0x9fd9:	sub	edx, edi
0x9fdb:	shl	rdi, 4
0x9fdf:	movsxd	rdx, edx
0x9fe2:	add	rdi, rbx
0x9fe5:	shl	rdx, 4
0x9fe9:	call	0x28f0


0x9fee:	mov	dword ptr [rip + 0x20b083], r12d
0x9ff5:	mov	eax, dword ptr [rbp + 4]
0x9ff8:	shl	r15, 4
0x9ffc:	sub	rsp, 8
0xa000:	add	rbx, r15
0xa003:	lea	r15, [rbp + 8]
0xa007:	mov	r8d, dword ptr [rbp]
0xa00b:	mov	r11, qword ptr [rbx]
0xa00e:	mov	r12, qword ptr [rbx + 8]
0xa012:	mov	rcx, r14
0xa015:	or	eax, 1
0xa018:	mov	dword ptr [rsp + 0x24], eax
0xa01c:	push	qword ptr [rbp + 0x30]
0xa01f:	mov	r9d, eax
0xa022:	push	qword ptr [rbp + 0x28]
0xa025:	push	r15
0xa027:	mov	rsi, r11
0xa02a:	mov	rdx, qword ptr [rsp + 0x28]
0xa02f:	mov	rdi, r12
0xa032:	mov	qword ptr [rsp + 0x30], r11
0xa037:	call	0x8d10


0xa0d7:	movdqa	xmm0, xmmword ptr [rip + 0x20afb1]
0xa0df:	mov	rbx, rax
0xa0e2:	mov	qword ptr [rip + 0x20af97], rax
0xa0e9:	movups	xmmword ptr [rax], xmm0
0xa0ec:	jmp	0x9fcd


0x9fcd:	movsxd	rdi, dword ptr [rip + 0x20b0a4]
0x9fd4:	mov	edx, r12d
0x9fd7:	xor	esi, esi
0x9fd9:	sub	edx, edi
0x9fdb:	shl	rdi, 4
0x9fdf:	movsxd	rdx, edx
0x9fe2:	add	rdi, rbx
0x9fe5:	shl	rdx, 4
0x9fe9:	call	0x28f0


0xa10c:	mov	r12d, dword ptr [rax]
0xa10f:	mov	rbp, rax
0xa112:	lea	rax, [rip + 0x20b147]
0xa119:	test	rbx, rbx
0xa11c:	mov	esi, 0x38
0xa121:	cmove	rbx, rax
0xa125:	mov	rdi, rbx
0xa128:	call	0xb0d0


0xa242:	mov	r12d, dword ptr [rax]
0xa245:	mov	rbp, rax
0xa248:	lea	rax, [rbx + 8]
0xa24c:	sub	rsp, 8
0xa250:	mov	r9d, dword ptr [rbx + 4]
0xa254:	push	qword ptr [rbx + 0x30]
0xa257:	mov	r8d, dword ptr [rbx]
0xa25a:	push	qword ptr [rbx + 0x28]
0xa25d:	mov	rdx, r15
0xa260:	push	rax
0xa261:	mov	rcx, qword ptr [rsp + 0x28]
0xa266:	mov	rsi, r14
0xa269:	mov	rdi, r13
0xa26c:	call	0x8d10


0xa2bf:	test	r12, r12
0xa2c2:	mov	r13, rax
0xa2c5:	mov	eax, dword ptr [rax]
0xa2c7:	sete	bpl
0xa2cb:	or	ebp, dword ptr [rbx + 4]
0xa2ce:	lea	r10, [rbx + 8]
0xa2d2:	sub	rsp, 8
0xa2d6:	mov	r8d, dword ptr [rbx]
0xa2d9:	mov	rcx, r15
0xa2dc:	mov	dword ptr [rsp + 0x14], eax
0xa2e0:	push	qword ptr [rbx + 0x30]
0xa2e3:	mov	rdx, r14
0xa2e6:	push	qword ptr [rbx + 0x28]
0xa2e9:	push	r10
0xa2eb:	xor	esi, esi
0xa2ed:	mov	r9d, ebp
0xa2f0:	xor	edi, edi
0xa2f2:	mov	qword ptr [rsp + 0x40], r10
0xa2f7:	call	0x8d10


0xb262:	cmp	byte ptr [rbp + 8], 0
0xb266:	mov	rbx, rax
0xb269:	mov	r12d, dword ptr [rax]
0xb26c:	lea	rdi, [rbp + 9]
0xb270:	jne	0xb274


0xb272:	xor	edi, edi
0xb274:	call	0xb1f0


0xb274:	call	0xb1f0


0xb279:	test	eax, eax
0xb27b:	je	0xb2a0


0xb2a0:	call	0x2980


0xb27d:	mov	r12d, dword ptr [rbx]
0xb280:	xor	r13d, r13d
0xb283:	mov	rdi, rbp
0xb286:	call	0xb220


0x2980:	jmp	qword ptr [rip + 0x21256a]




0xb28b:	mov	dword ptr [rbx], r12d
0xb28e:	add	rsp, 8
0xb292:	mov	eax, r13d
0xb295:	pop	rbx
0xb296:	pop	rbp
0xb297:	pop	r12
0xb299:	pop	r13
0xb29b:	ret	


0x86f1:	mov	rdi, rax
0x86f4:	mov	rbp, rax
0x86f7:	call	0xb2b0


0x86fc:	mov	rbx, rax
0x86ff:	xor	eax, eax
0x8701:	test	rbx, rbx
0x8704:	je	0x872d


0x872d:	add	rsp, 0x10
0x8731:	pop	rbx
0x8732:	pop	rbp
0x8733:	pop	r12
0x8735:	pop	r13
0x8737:	pop	r14
0x8739:	ret	


0x8706:	mov	r9, rbp
0x8709:	mov	r8, rbx
0x870c:	xor	ecx, ecx
0x870e:	mov	rdx, r14
0x8711:	mov	rsi, r13
0x8714:	mov	rdi, r12
0x8717:	call	0x6960


0x871c:	mov	rdi, rbx
0x871f:	mov	byte ptr [rsp + 0xf], al
0x8723:	call	0xb560


0x8728:	movzx	eax, byte ptr [rsp + 0xf]
0x872d:	add	rsp, 0x10
0x8731:	pop	rbx
0x8732:	pop	rbp
0x8733:	pop	r12
0x8735:	pop	r13
0x8737:	pop	r14
0x8739:	ret	


0x3649:	test	al, al
0x364b:	je	0x364f


0x364f:	mov	rdi, rbx
0x3652:	call	0xa890


0x364d:	pop	rbx
0x364e:	ret	


0x8b16:	test	rax, rax
0x8b19:	je	0x8b20


0x8b20:	mov	rcx, qword ptr [rsp + 8]
0x8b25:	xor	rcx, qword ptr fs:[0x28]
0x8b2e:	mov	eax, ebx
0x8b30:	jne	0x8b79


0x8b1b:	cmp	byte ptr [rax], 0
0x8b1e:	jne	0x8b40


0x8b32:	add	rsp, 0x10
0x8b36:	pop	rbx
0x8b37:	ret	


0x8b79:	call	0x2830


0x8b40:	mov	edx, 0xa
0x8b45:	mov	rsi, rsp
0x8b48:	mov	rdi, rax
0x8b4b:	call	0x2960


0x2960:	jmp	qword ptr [rip + 0x21257a]




0xb497:	test	rax, rax
0xb49a:	mov	rbx, rax
0xb49d:	je	0xb538


0xb538:	cmp	byte ptr [rbp + 8], 0
0xb53c:	mov	r12d, 1
0xb542:	jne	0xb4a9


0xb4a3:	cmp	byte ptr [rbp + 8], 0
0xb4a7:	jne	0xb510


0xb548:	add	rsp, 0x10
0xb54c:	mov	rax, r12
0xb54f:	pop	rbx
0xb550:	pop	rbp
0xb551:	pop	r12
0xb553:	ret	


0xb4a9:	mov	rdi, rbx
0xb4ac:	call	0xb2b0


0xb510:	lea	rdi, [rbp + 9]
0xb514:	mov	rsi, rax
0xb517:	mov	r12d, 1
0xb51d:	call	0x2950


0xb522:	test	eax, eax
0xb524:	jne	0xb4a9


0xb526:	add	rsp, 0x10
0xb52a:	mov	rax, r12
0xb52d:	pop	rbx
0xb52e:	pop	rbp
0xb52f:	pop	r12
0xb531:	ret	


0xb4b1:	test	rax, rax
0xb4b4:	mov	r12, rax
0xb4b7:	je	0xb4fd


0xb4fd:	add	rsp, 0x10
0xb501:	mov	rax, r12
0xb504:	pop	rbx
0xb505:	pop	rbp
0xb506:	pop	r12
0xb508:	ret	


0xb4b9:	xor	edi, edi
0xb4bb:	cmp	byte ptr [rbp + 8], 0
0xb4bf:	je	0xb4c5


0xb4c5:	call	0xb1f0


0xb4c1:	lea	rdi, [rbp + 9]
0xb4c5:	call	0xb1f0


0xb4ca:	test	eax, eax
0xb4cc:	je	0xb558


0xb558:	call	0x2980


0xb4d2:	call	0x2750


0xb4d7:	cmp	r12, 1
0xb4db:	mov	ebx, dword ptr [rax]
0xb4dd:	je	0xb4f8


0xb4f8:	mov	dword ptr [rax], ebx
0xb4fa:	xor	r12d, r12d
0xb4fd:	add	rsp, 0x10
0xb501:	mov	rax, r12
0xb504:	pop	rbx
0xb505:	pop	rbp
0xb506:	pop	r12
0xb508:	ret	


0xb4df:	mov	rdi, r12
0xb4e2:	mov	qword ptr [rsp + 8], rax
0xb4e7:	call	0xb220


0xb4ec:	mov	rax, qword ptr [rsp + 8]
0xb4f1:	nop	dword ptr [rax]
0xb4f8:	mov	dword ptr [rax], ebx
0xb4fa:	xor	r12d, r12d
0xb4fd:	add	rsp, 0x10
0xb501:	mov	rax, r12
0xb504:	pop	rbx
0xb505:	pop	rbp
0xb506:	pop	r12
0xb508:	ret	


0xb58d:	test	rax, rax
0xb590:	mov	r12, rax
0xb593:	je	0xb5de


0xb5de:	add	rsp, 8
0xb5e2:	xor	eax, eax
0xb5e4:	pop	rbx
0xb5e5:	pop	rbp
0xb5e6:	pop	r12
0xb5e8:	pop	r13
0xb5ea:	ret	


0xb595:	mov	rsi, r13
0xb598:	mov	rdi, rbp
0xb59b:	call	0x2770


0x2770:	jmp	qword ptr [rip + 0x212672]




0x6f47:	test	rax, rax
0x6f4a:	jne	0x6aa1


0x6f50:	jmp	0x6d9e


0x6aa1:	cmp	byte ptr [r13], 0
0x6aa6:	lea	rax, [rip + 0x980f]
0x6aad:	mov	qword ptr [rsp + 0x1e0], 0
0x6ab9:	mov	dword ptr [rsp + 0x1cc], 2
0x6ac4:	mov	qword ptr [rsp + 0x218], 0
0x6ad0:	lea	r12, [rsp + 0x130]
0x6ad8:	mov	qword ptr [rsp + 0x220], 0
0x6ae4:	mov	qword ptr [rsp + 0x228], 0
0x6af0:	mov	r14d, 0x76a700
0x6af6:	mov	qword ptr [rsp + 0x230], 0
0x6b02:	mov	qword ptr [rsp + 0x238], 0
0x6b0e:	cmove	r13, rax
0x6b12:	movzx	eax, byte ptr [rsp + 0x20]
0x6b17:	mov	qword ptr [rsp + 0x240], 0
0x6b23:	mov	qword ptr [rsp + 0x1b0], r13
0x6b2b:	movsxd	r13, dword ptr [rsp + 0x18]
0x6b30:	mov	dword ptr [rsp + 0x248], 0
0x6b3b:	mov	byte ptr [rsp + 0x250], 0
0x6b43:	mov	byte ptr [rsp + 0x289], al
0x6b4a:	movsxd	rax, dword ptr [rsp + 0x104]
0x6b52:	mov	qword ptr [rsp + 0x210], r13
0x6b5a:	and	byte ptr [rsp + 0x289], 1
0x6b62:	lea	r13, [rsp + 0x170]
0x6b6a:	add	rax, 0x76c
0x6b70:	mov	qword ptr [rsp + 0x1d8], rax
0x6b78:	mov	eax, dword ptr [rsp + 0x100]
0x6b7f:	add	eax, 1
0x6b82:	cdqe	
0x6b84:	mov	qword ptr [rsp + 0x1e8], rax
0x6b8c:	movsxd	rax, dword ptr [rsp + 0xfc]
0x6b94:	mov	qword ptr [rsp + 0x1f0], rax
0x6b9c:	movsxd	rax, dword ptr [rsp + 0xf8]
0x6ba4:	mov	qword ptr [rsp + 0x1f8], rax
0x6bac:	movsxd	rax, dword ptr [rsp + 0xf4]
0x6bb4:	mov	qword ptr [rsp + 0x200], rax
0x6bbc:	movsxd	rax, dword ptr [rsp + 0xf0]
0x6bc4:	mov	qword ptr [rsp + 0x208], rax
0x6bcc:	mov	eax, dword ptr [rsp + 0x110]
0x6bd3:	mov	dword ptr [rsp + 0x90], eax
0x6bda:	mov	byte ptr [rsp + 0x251], 0
0x6be2:	mov	rdx, qword ptr [rsp + 0x120]
0x6bea:	mov	qword ptr [rsp + 0x258], 0
0x6bf6:	mov	qword ptr [rsp + 0x260], 0
0x6c02:	mov	qword ptr [rsp + 0x278], 0
0x6c0e:	mov	qword ptr [rsp + 0x268], 0
0x6c1a:	mov	qword ptr [rsp + 0x270], 0


0x6d9e:	cmp	r15, qword ptr [rsp]
0x6da2:	je	0x6dac


0x6c26:	mov	qword ptr [rsp + 0x280], 0
0x6c32:	mov	byte ptr [rsp + 0x288], 0
0x6c3a:	mov	byte ptr [rsp + 0x28a], 0
0x6c42:	mov	byte ptr [rsp + 0x28b], 0
0x6c4a:	mov	byte ptr [rsp + 0x28d], 0
0x6c52:	mov	byte ptr [rsp + 0x28c], 0
0x6c5a:	mov	byte ptr [rsp + 0x28e], 0
0x6c62:	mov	byte ptr [rsp + 0x28f], 0
0x6c6a:	mov	byte ptr [rsp + 0x290], 0
0x6c72:	mov	qword ptr [rsp + 0x298], rdx
0x6c7a:	mov	dword ptr [rsp + 0x2a0], 0x10d
0x6c85:	mov	dword ptr [rsp + 0x2a4], eax
0x6c8c:	mov	qword ptr [rsp + 0x2a8], 0
0x6c98:	movsxd	rax, r14d
0x6c9b:	add	rax, rbx
0x6c9e:	jo	0x6cec


0x6da4:	mov	rdi, r15
0x6da7:	call	0xb560


0x6cec:	mov	rdi, qword ptr [rsp + 0x298]
0x6cf4:	test	rdi, rdi
0x6cf7:	je	0x6d26


0x6ca0:	mov	rdx, r13
0x6ca3:	mov	rsi, r12
0x6ca6:	mov	rdi, r15
0x6ca9:	mov	qword ptr [rsp + 0x130], rax
0x6cb1:	call	0xb570


0x6d26:	lea	r13, [rsp + 0x1b0]
0x6d2e:	mov	rdi, r13
0x6d31:	call	0x4d50


0x6cf9:	mov	rsi, qword ptr [rsp + 0x2a8]
0x6d01:	test	rsi, rsi
0x6d04:	je	0x6d26


0x6d06:	call	0x2950


0x6d0b:	test	eax, eax
0x6d0d:	jne	0x6d26


0x6d0f:	mov	dword ptr [rsp + 0x2a4], 0xffffffff
0x6d1a:	mov	qword ptr [rsp + 0x2a8], 0
0x6d26:	lea	r13, [rsp + 0x1b0]
0x6d2e:	mov	rdi, r13
0x6d31:	call	0x4d50


0x6d36:	test	eax, eax
0x6d38:	jne	0x6de8


0x6d3e:	cmp	byte ptr [rsp + 0x289], 0
0x6d46:	jne	0x6f88


0x6de8:	movzx	r12d, byte ptr [rsp + 0x289]
0x6df1:	test	r12b, r12b
0x6df4:	je	0x6d9e


0x6d4c:	movzx	r12d, byte ptr [rsp + 0x250]
0x6d55:	test	r12b, r12b
0x6d58:	jne	0x6f58


0x6f88:	lea	rsi, [rip + 0x92d1]
0x6f8f:	mov	edx, 5
0x6f94:	xor	edi, edi
0x6f96:	call	0x27f0


0x6df6:	add	rbp, qword ptr [rsp + 0x30]
0x6dfb:	mov	rbx, qword ptr [rsp + 0x1b0]
0x6e03:	mov	edx, 5
0x6e08:	cmp	rbx, rbp
0x6e0b:	jb	0x7228


0x6d5e:	mov	rax, qword ptr [rsp + 0x258]
0x6d66:	or	rax, qword ptr [rsp + 0x278]
0x6d6e:	or	rax, qword ptr [rsp + 0x260]
0x6d76:	mov	rdx, qword ptr [rsp + 0x268]
0x6d7e:	or	rax, qword ptr [rsp + 0x270]
0x6d86:	add	rdx, qword ptr [rsp + 0x280]
0x6d8e:	or	rax, rdx
0x6d91:	cmp	rax, 1
0x6d95:	jle	0x73c9


0x6f58:	mov	rax, qword ptr [rsp + 0x28]
0x6f5d:	movdqu	xmm0, xmmword ptr [rsp + 0x208]
0x6f66:	movups	xmmword ptr [rax], xmm0
0x6f69:	jmp	0x6d9e


0x7228:	lea	rsi, [rip + 0x9569]
0x722f:	xor	edi, edi
0x7231:	call	0x27f0


0x6e11:	lea	rsi, [rip + 0x9431]
0x6e18:	xor	edi, edi
0x6e1a:	call	0x27f0


0x73c9:	mov	rbp, qword ptr [rsp + 0x1d8]
0x73d1:	test	rbp, rbp
0x73d4:	js	0x7908


0x6d9b:	xor	r12d, r12d
0x6d9e:	cmp	r15, qword ptr [rsp]
0x6da2:	je	0x6dac


0x7908:	mov	rax, -0x76c
0x790f:	xor	ebx, ebx
0x7911:	sub	rax, rbp
0x7914:	jno	0x7408


0x73da:	cmp	qword ptr [rsp + 0x1e0], 2
0x73e3:	je	0x7938


0x791a:	mov	ebx, 1
0x791f:	jmp	0x7408


0x7408:	movsxd	rdx, eax
0x740b:	mov	dword ptr [rsp + 0x84], eax
0x7412:	cmp	rax, rdx
0x7415:	mov	edx, 1
0x741a:	cmovne	ebx, edx
0x741d:	and	ebx, 1
0x7420:	test	bl, bl
0x7422:	je	0x74c3


0x7938:	cmp	rbp, 0x44
0x793c:	mov	ebx, 0x76c
0x7941:	mov	eax, 0x7d0
0x7946:	cmovle	rbx, rax
0x794a:	add	rbx, rbp
0x794d:	test	r12b, r12b
0x7950:	jne	0x7b68


0x73e9:	xor	ebx, ebx
0x73eb:	cmp	rbp, 0x76c
0x73f2:	lea	rax, [rbp - 0x76c]
0x73f9:	jae	0x7928


0x74c3:	mov	rax, qword ptr [rsp + 0x1e8]
0x74cb:	xor	edx, edx
0x74cd:	add	rax, -1
0x74d1:	jo	0x852a


0x7428:	test	r12b, r12b
0x742b:	je	0x744d


0x7956:	mov	rbp, rbx
0x7959:	jmp	0x73e9


0x7b68:	lea	rsi, [rip + 0x8d49]
0x7b6f:	mov	edx, 5
0x7b74:	xor	edi, edi
0x7b76:	call	0x27f0


0x73ff:	test	rax, rax
0x7402:	jns	0x791a


0x7928:	test	rax, rax
0x792b:	jns	0x7408


0x852a:	mov	edx, 1
0x852f:	jmp	0x74d7


0x74d7:	movsxd	rcx, eax
0x74da:	mov	dword ptr [rsp + 0x80], eax
0x74e1:	cmp	rax, rcx
0x74e4:	mov	ecx, 1
0x74e9:	movzx	eax, byte ptr [rsp + 0x289]
0x74f1:	cmovne	edx, ecx
0x74f4:	test	edx, edx
0x74f6:	jne	0x7455


0x744d:	movzx	eax, byte ptr [rsp + 0x289]
0x7455:	test	al, al
0x7457:	mov	edx, 5
0x745c:	lea	rsi, [rip + 0x9485]
0x7463:	je	0x6d9b


0x742d:	lea	rsi, [rip + 0x8ebf]
0x7434:	xor	edi, edi
0x7436:	mov	edx, 5
0x743b:	call	0x27f0


0x7931:	jmp	0x791a


0x74fc:	mov	rdx, qword ptr [rsp + 0x1f0]
0x7504:	movsxd	rcx, edx
0x7507:	mov	dword ptr [rsp + 0x7c], edx
0x750b:	cmp	rdx, rcx
0x750e:	setne	r12b
0x7512:	movzx	r12d, r12b
0x7516:	jne	0x7455


0x7455:	test	al, al
0x7457:	mov	edx, 5
0x745c:	lea	rsi, [rip + 0x9485]
0x7463:	je	0x6d9b


0x7469:	xor	edi, edi
0x746b:	call	0x27f0


0x751c:	cmp	qword ptr [rsp + 0x278], 0
0x7525:	jne	0x7b93


0x752b:	cmp	byte ptr [rsp + 0x251], 0
0x7533:	je	0x7c42


0x7b93:	mov	r9d, dword ptr [rsp + 0x1cc]
0x7b9b:	mov	rbp, qword ptr [rsp + 0x1f8]
0x7ba3:	test	r9d, r9d
0x7ba6:	je	0x8208


0x7c42:	test	al, al
0x7c44:	mov	qword ptr [rsp + 0x70], 0
0x7c4d:	mov	dword ptr [rsp + 0x78], 0
0x7c55:	mov	qword ptr [rsp + 0x210], 0
0x7c61:	je	0x7bf8


0x7539:	cmp	qword ptr [rsp + 0x258], 0
0x7542:	jne	0x7c42


0x8208:	lea	rdx, [rbp - 1]
0x820c:	cmp	rdx, 0xa
0x8210:	jbe	0x7c38


0x7bac:	cmp	r9d, 1
0x7bb0:	jne	0x7c2e


0x7bf8:	mov	rax, qword ptr [rsp + 0x258]
0x7c00:	or	rax, qword ptr [rsp + 0x260]
0x7c08:	or	rax, qword ptr [rsp + 0x278]
0x7c10:	je	0x7587


0x7c63:	lea	rdi, [rip + 0x8d06]
0x7c6a:	xor	eax, eax
0x7c6c:	call	0x42c0


0x7548:	cmp	qword ptr [rsp + 0x260], 0
0x7551:	je	0x7b93


0x7c38:	mov	r9d, ebp
0x7c3b:	mov	dword ptr [rsp + 0x78], r9d
0x7c40:	jmp	0x7bd8


0x8216:	cmp	rbp, 0xc
0x821a:	jne	0x8519


0x7bb2:	lea	rdx, [rbp - 1]
0x7bb6:	lea	r9d, [rbp + 0xc]
0x7bba:	cmp	rdx, 0xa
0x7bbe:	jbe	0x7c3b


0x7c2e:	cmp	rbp, 0x17
0x7c32:	ja	0x84da


0x7587:	cmp	qword ptr [rsp + 0x268], 0
0x7590:	jne	0x7c1b


0x7c16:	jmp	0x757c


0x7557:	test	al, al
0x7559:	mov	qword ptr [rsp + 0x70], 0
0x7562:	mov	dword ptr [rsp + 0x78], 0
0x756a:	mov	qword ptr [rsp + 0x210], 0
0x7576:	jne	0x7c63


0x7bd8:	mov	rdx, qword ptr [rsp + 0x200]
0x7be0:	mov	rcx, qword ptr [rsp + 0x208]
0x7be8:	test	al, al
0x7bea:	mov	dword ptr [rsp + 0x74], edx
0x7bee:	mov	dword ptr [rsp + 0x70], ecx
0x7bf2:	jne	0x81a8


0x8220:	mov	dword ptr [rsp + 0x78], 0
0x8228:	jmp	0x7bd8


0x8519:	mov	dword ptr [rsp + 0x78], 0xffffffff
0x8521:	lea	rbx, [rip + 0x7d14]
0x8528:	jmp	0x84e9


0x7c3b:	mov	dword ptr [rsp + 0x78], r9d
0x7c40:	jmp	0x7bd8


0x7bc0:	cmp	rbp, 0xc
0x7bc4:	jne	0x8662


0x84da:	lea	rbx, [rip + 0x7e95]
0x84e1:	mov	dword ptr [rsp + 0x78], 0xffffffff
0x84e9:	test	al, al
0x84eb:	je	0x6d9b


0x7596:	mov	eax, dword ptr [rsp + 0x90]
0x759d:	mov	edx, dword ptr [rsp + 0x70]
0x75a1:	mov	dword ptr [rsp + 0xd0], eax
0x75a8:	lea	rax, [rsp + 0x70]
0x75ad:	mov	rdi, r15
0x75b0:	mov	dword ptr [rsp + 0x88], 0xffffffff
0x75bb:	mov	rsi, rax
0x75be:	mov	rbp, rax
0x75c1:	mov	qword ptr [rsp + 0x18], rax
0x75c6:	mov	dword ptr [rsp + 0xb0], edx
0x75cd:	mov	edx, dword ptr [rsp + 0x74]
0x75d1:	mov	dword ptr [rsp + 0xb4], edx
0x75d8:	mov	edx, dword ptr [rsp + 0x78]
0x75dc:	mov	dword ptr [rsp + 0xb8], edx
0x75e3:	mov	edx, dword ptr [rsp + 0x7c]
0x75e7:	mov	dword ptr [rsp + 0xbc], edx
0x75ee:	mov	edx, dword ptr [rsp + 0x80]
0x75f5:	mov	dword ptr [rsp + 0xc0], edx
0x75fc:	mov	edx, dword ptr [rsp + 0x84]
0x7603:	mov	dword ptr [rsp + 0xc4], edx
0x760a:	call	0xb620


0x7c1b:	mov	eax, dword ptr [rsp + 0x1c4]
0x7c22:	mov	dword ptr [rsp + 0x90], eax
0x7c29:	jmp	0x759d


0x757c:	mov	dword ptr [rsp + 0x90], 0xffffffff
0x7587:	cmp	qword ptr [rsp + 0x268], 0
0x7590:	jne	0x7c1b


0x81a8:	lea	rbp, [rsp + 0x300]
0x81b0:	lea	r8, [rip + 0x8175]
0x81b7:	push	rcx
0x81b8:	push	rdx
0x81b9:	mov	esi, 0x64
0x81be:	mov	edx, 1
0x81c3:	mov	rdi, rbp
0x81c6:	xor	eax, eax
0x81c8:	mov	ecx, 0x64
0x81cd:	call	0x2700


0x84e9:	test	al, al
0x84eb:	je	0x6d9b


0x7bca:	mov	dword ptr [rsp + 0x78], 0xc
0x7bd2:	mov	r9d, 0xc
0x7bd8:	mov	rdx, qword ptr [rsp + 0x200]
0x7be0:	mov	rcx, qword ptr [rsp + 0x208]
0x7be8:	test	al, al
0x7bea:	mov	dword ptr [rsp + 0x74], edx
0x7bee:	mov	dword ptr [rsp + 0x70], ecx
0x7bf2:	jne	0x81a8


0x8662:	mov	dword ptr [rsp + 0x78], 0xffffffff
0x866a:	lea	rbx, [rip + 0x7b2f]
0x8671:	jmp	0x84e9


0x84f1:	lea	rsi, [rip + 0x7e19]
0x84f8:	xor	edi, edi
0x84fa:	mov	edx, 5
0x84ff:	call	0x27f0


0x759d:	mov	edx, dword ptr [rsp + 0x70]
0x75a1:	mov	dword ptr [rsp + 0xd0], eax
0x75a8:	lea	rax, [rsp + 0x70]
0x75ad:	mov	rdi, r15
0x75b0:	mov	dword ptr [rsp + 0x88], 0xffffffff
0x75bb:	mov	rsi, rax
0x75be:	mov	rbp, rax
0x75c1:	mov	qword ptr [rsp + 0x18], rax
0x75c6:	mov	dword ptr [rsp + 0xb0], edx
0x75cd:	mov	edx, dword ptr [rsp + 0x74]
0x75d1:	mov	dword ptr [rsp + 0xb4], edx
0x75d8:	mov	edx, dword ptr [rsp + 0x78]
0x75dc:	mov	dword ptr [rsp + 0xb8], edx
0x75e3:	mov	edx, dword ptr [rsp + 0x7c]
0x75e7:	mov	dword ptr [rsp + 0xbc], edx
0x75ee:	mov	edx, dword ptr [rsp + 0x80]
0x75f5:	mov	dword ptr [rsp + 0xc0], edx
0x75fc:	mov	edx, dword ptr [rsp + 0x84]
0x7603:	mov	dword ptr [rsp + 0xc4], edx
0x760a:	call	0xb620


0x81d2:	pop	rsi
0x81d3:	pop	rdi
0x81d4:	cmp	qword ptr [rsp + 0x278], 0
0x81dd:	mov	edx, 5
0x81e2:	je	0x8676


0x8676:	lea	rsi, [rip + 0x82c3]
0x867d:	xor	edi, edi
0x867f:	call	0x27f0


0x81e8:	lea	rsi, [rip + 0x8721]
0x81ef:	xor	edi, edi
0x81f1:	call	0x27f0


0x760f:	mov	ecx, dword ptr [rsp + 0x88]
0x7616:	mov	r14, rax
0x7619:	test	ecx, ecx
0x761b:	js	0x7635


0x7635:	mov	rax, qword ptr [rsp + 0x280]
0x763d:	test	rax, rax
0x7640:	mov	qword ptr [rsp + 0x30], rax
0x7645:	jne	0x795e


0x761d:	lea	rdi, [rsp + 0xb0]
0x7625:	mov	rsi, rbp
0x7628:	call	0x44d0


0x764b:	mov	r10d, dword ptr [rsp + 0xb0]
0x7653:	mov	r9d, dword ptr [rsp + 0x70]
0x7658:	mov	eax, dword ptr [rsp + 0x84]
0x765f:	mov	ebx, dword ptr [rsp + 0xb8]
0x7666:	mov	esi, dword ptr [rsp + 0x78]
0x766a:	mov	edi, dword ptr [rsp + 0xbc]
0x7671:	mov	edx, dword ptr [rsp + 0x7c]
0x7675:	mov	r11d, dword ptr [rsp + 0xc4]
0x767d:	cmp	r10d, r9d
0x7680:	mov	dword ptr [rsp + 0x28], eax
0x7684:	mov	r8d, dword ptr [rsp + 0xb4]
0x768c:	mov	ecx, dword ptr [rsp + 0x74]
0x7690:	mov	dword ptr [rsp + 0x38], ebx
0x7694:	mov	dword ptr [rsp + 0x40], esi
0x7698:	mov	dword ptr [rsp + 0x10], edi
0x769c:	mov	dword ptr [rsp + 0x20], edx
0x76a0:	mov	r14d, dword ptr [rsp + 0xc0]
0x76a8:	mov	ebp, dword ptr [rsp + 0x80]
0x76af:	mov	dword ptr [rsp + 0x44], r11d
0x76b4:	movzx	eax, byte ptr [rsp + 0x289]
0x76bc:	jne	0x822d


0x795e:	mov	edi, dword ptr [rsp + 0x1c8]
0x7965:	lea	rsi, [rsp + 0x3e3]
0x796d:	lea	rbp, [rsp + 0x3e0]
0x7975:	mov	word ptr [rsp + 0x3e0], 0x5858
0x797f:	mov	byte ptr [rsp + 0x3e2], 0x58
0x7987:	call	0x41c0


0x76c2:	cmp	r8d, ecx
0x76c5:	jne	0x822d


0x822d:	test	al, al
0x822f:	je	0x6d9b


0x76cb:	cmp	edi, edx
0x76cd:	jne	0x822d


0x8235:	lea	rsi, [rip + 0x876c]
0x823c:	mov	edx, 5
0x8241:	xor	edi, edi
0x8243:	mov	dword ptr [rsp + 0x5c], ecx
0x8247:	mov	dword ptr [rsp + 0x58], r8d
0x824c:	lea	rbx, [rsp + 0x3e0]
0x8254:	mov	dword ptr [rsp + 0x54], r9d
0x8259:	mov	dword ptr [rsp + 0x50], r10d
0x825e:	call	0x27f0


0x76d3:	cmp	ebx, esi
0x76d5:	je	0x822d


0x76db:	cmp	r14d, ebp
0x76de:	jne	0x822d


0x76e4:	mov	ebx, dword ptr [rsp + 0x28]
0x76e8:	cmp	r11d, ebx
0x76eb:	jne	0x822d


0x76f1:	test	al, al
0x76f3:	je	0x6d9b


0x76f9:	lea	rsi, [rip + 0x92a8]
0x7700:	mov	edx, 5
0x7705:	xor	edi, edi
0x7707:	lea	rbx, [rsp + 0x3e0]
0x770f:	call	0x27f0


0x798c:	mov	rdi, rbp
0x798f:	call	0xb2b0


0x7994:	test	rax, rax
0x7997:	mov	rdx, rax
0x799a:	je	0x84a7


0x84a7:	cmp	byte ptr [rsp + 0x289], 0
0x84af:	je	0x6d9b


0x79a0:	mov	eax, dword ptr [rsp + 0xb0]
0x79a7:	mov	rsi, qword ptr [rsp + 0x18]
0x79ac:	mov	rdi, rdx
0x79af:	mov	qword ptr [rsp + 0x20], rdx
0x79b4:	mov	dword ptr [rsp + 0x88], 0xffffffff
0x79bf:	mov	dword ptr [rsp + 0x70], eax
0x79c3:	mov	eax, dword ptr [rsp + 0xb4]
0x79ca:	mov	dword ptr [rsp + 0x74], eax
0x79ce:	mov	eax, dword ptr [rsp + 0xb8]
0x79d5:	mov	dword ptr [rsp + 0x78], eax
0x79d9:	mov	eax, dword ptr [rsp + 0xbc]
0x79e0:	mov	dword ptr [rsp + 0x7c], eax
0x79e4:	mov	eax, dword ptr [rsp + 0xc0]
0x79eb:	mov	dword ptr [rsp + 0x80], eax
0x79f2:	mov	eax, dword ptr [rsp + 0xc4]
0x79f9:	mov	dword ptr [rsp + 0x84], eax
0x7a00:	mov	eax, dword ptr [rsp + 0xd0]
0x7a07:	mov	dword ptr [rsp + 0x90], eax
0x7a0e:	call	0xb620


0x84b5:	lea	rsi, [rip + 0x7e7f]
0x84bc:	xor	edi, edi
0x84be:	mov	edx, 5
0x84c3:	call	0x27f0


0x762d:	test	al, al
0x762f:	jne	0x7a58


0x7a58:	cmp	qword ptr [rsp + 0x260], 0
0x7a61:	je	0x7cf7


0x7cf7:	cmp	byte ptr [rsp + 0x289], 0
0x7cff:	je	0x7e4e


0x7a67:	cmp	qword ptr [rsp + 0x258], 0
0x7a70:	jne	0x7e3e


0x7e4e:	mov	rax, qword ptr [rsp + 0x218]
0x7e56:	mov	rdx, qword ptr [rsp + 0x220]
0x7e5e:	or	rdx, rax
0x7e61:	or	rdx, qword ptr [rsp + 0x228]
0x7e69:	jne	0x7ed5


0x7d05:	cmp	qword ptr [rsp + 0x258], 0
0x7d0e:	mov	rax, qword ptr [rsp + 0x260]
0x7d16:	jne	0x815f


0x7a76:	mov	rax, qword ptr [rsp + 0x1b8]
0x7a7e:	test	rax, rax
0x7a81:	jle	0x7a98


0x7e3e:	movzx	ebx, byte ptr [rsp + 0x289]
0x7e46:	test	bl, bl
0x7e48:	jne	0x8168


0x7e6b:	cmp	qword ptr [rsp + 0x280], 0
0x7e74:	je	0x8311


0x7ed5:	movsxd	rdx, dword ptr [rsp + 0x84]
0x7edd:	add	rax, rdx
0x7ee0:	seto	dl
0x7ee3:	movsxd	rcx, eax
0x7ee6:	mov	dword ptr [rsp + 0x20], eax
0x7eea:	cmp	rax, rcx
0x7eed:	movzx	edx, dl
0x7ef0:	mov	ecx, 1
0x7ef5:	cmovne	edx, ecx
0x7ef8:	test	edx, edx
0x7efa:	jne	0x6d9b


0x7d1c:	test	rax, rax
0x7d1f:	je	0x8581


0x815f:	test	rax, rax
0x8162:	je	0x7d25


0x7a98:	sub	rax, r12
0x7a9b:	imul	rcx, rax, 7
0x7a9f:	jo	0x7aea


0x7a83:	xor	r12d, r12d
0x7a86:	mov	esi, dword ptr [rsp + 0x1c0]
0x7a8d:	cmp	dword ptr [rsp + 0x88], esi
0x7a94:	setne	r12b
0x7a98:	sub	rax, r12
0x7a9b:	imul	rcx, rax, 7
0x7a9f:	jo	0x7aea


0x8168:	lea	rbp, [rsp + 0x300]
0x8170:	lea	rsi, [rsp + 0x3e0]
0x8178:	mov	rdi, r13
0x817b:	call	0x4870


0x8311:	test	bl, bl
0x8313:	jne	0x8534


0x7e7a:	movsxd	rax, dword ptr [rsp + 0x1c8]
0x7e82:	xor	edx, edx
0x7e84:	mov	rbp, rax
0x7e87:	sub	rax, qword ptr [rsp + 0x98]
0x7e8f:	seto	dl
0x7e92:	sub	r14, rax
0x7e95:	seto	al
0x7e98:	movzx	eax, al
0x7e9b:	or	rdx, rax
0x7e9e:	je	0x8311


0x7f00:	movsxd	r12, dword ptr [rsp + 0x80]
0x7f08:	xor	eax, eax
0x7f0a:	add	r12, qword ptr [rsp + 0x220]
0x7f12:	movsxd	rdx, r12d
0x7f15:	seto	al
0x7f18:	cmp	r12, rdx
0x7f1b:	jne	0x7e02


0x8581:	mov	eax, dword ptr [rsp + 0x80]
0x8588:	mov	edi, dword ptr [rsp + 0x84]
0x858f:	lea	rsi, [rsp + 0x2d3]
0x8597:	mov	r12d, dword ptr [rsp + 0x7c]
0x859c:	lea	rbp, [rsp + 0x300]
0x85a4:	lea	ebx, [rax + 1]
0x85a7:	call	0x2b60


0x7d25:	lea	rbp, [rsp + 0x300]
0x7d2d:	mov	rdi, qword ptr [rsp + 0x18]
0x7d32:	mov	rdx, rbp
0x7d35:	mov	rsi, r13
0x7d38:	call	0x47b0


0x7aea:	cmp	byte ptr [rsp + 0x289], 0
0x7af2:	je	0x6d9b


0x7aa1:	mov	eax, dword ptr [rsp + 0x1c0]
0x7aa8:	sub	eax, dword ptr [rsp + 0x88]
0x7aaf:	mov	esi, 7
0x7ab4:	add	eax, 7
0x7ab7:	cdq	
0x7ab8:	idiv	esi
0x7aba:	movsxd	rax, edx
0x7abd:	add	rax, rcx
0x7ac0:	jo	0x7aea


0x8319:	mov	rbp, qword ptr [rsp + 0x230]
0x8321:	movzx	r12d, byte ptr [rsp + 0x289]
0x832a:	imul	r9, rbp, 0xe10
0x8331:	jo	0x848d


0x8534:	mov	rdi, qword ptr [rsp + 0x18]
0x8539:	lea	rdx, [rsp + 0x300]
0x8541:	mov	rsi, r13
0x8544:	call	0x47b0


0x7ea4:	test	bl, bl
0x7ea6:	je	0x6d9b


0x7f21:	test	eax, eax
0x7f23:	jne	0x7e02


0x7e02:	cmp	byte ptr [rsp + 0x289], 0
0x7e0a:	je	0x6d9b


0x7af8:	mov	rdi, qword ptr [rsp + 0x18]
0x7afd:	lea	rdx, [rsp + 0x300]
0x7b05:	mov	rsi, r13
0x7b08:	call	0x47b0


0x7ac2:	movsxd	rdx, dword ptr [rsp + 0x7c]
0x7ac7:	add	rax, rdx
0x7aca:	seto	dl
0x7acd:	movsxd	rcx, eax
0x7ad0:	mov	dword ptr [rsp + 0x7c], eax
0x7ad4:	cmp	rax, rcx
0x7ad7:	movzx	edx, dl
0x7ada:	mov	ecx, 1
0x7adf:	cmovne	edx, ecx
0x7ae2:	test	edx, edx
0x7ae4:	je	0x7c73


0x848d:	test	r12b, r12b
0x8490:	je	0x6d9b


0x8337:	add	r9, r14
0x833a:	jo	0x848d


0x7eac:	lea	rsi, [rip + 0x8ea5]
0x7eb3:	xor	edi, edi
0x7eb5:	mov	edx, 5
0x7eba:	call	0x27f0


0x7f29:	movsxd	rbp, dword ptr [rsp + 0x7c]
0x7f2e:	xor	eax, eax
0x7f30:	add	rbp, qword ptr [rsp + 0x228]
0x7f38:	movsxd	rdx, ebp
0x7f3b:	seto	al
0x7f3e:	cmp	rbp, rdx
0x7f41:	jne	0x7e02


0x7e10:	lea	rsi, [rip + 0x8612]
0x7e17:	xor	edi, edi
0x7e19:	mov	edx, 5
0x7e1e:	call	0x27f0


0x7c73:	mov	rsi, qword ptr [rsp + 0x18]
0x7c78:	mov	rdi, r15
0x7c7b:	mov	dword ptr [rsp + 0x90], 0xffffffff
0x7c86:	call	0xb620


0x8496:	mov	edx, 5
0x849b:	lea	rsi, [rip + 0x88e6]
0x84a2:	jmp	0x7469


0x8340:	mov	r13, qword ptr [rsp + 0x238]
0x8348:	imul	rax, r13, 0x3c
0x834c:	jo	0x848d


0x7f47:	test	eax, eax
0x7f49:	jne	0x7e02


0x8352:	add	r9, rax
0x8355:	jo	0x848d


0x7f4f:	mov	eax, dword ptr [rsp + 0x20]
0x7f53:	mov	rsi, qword ptr [rsp + 0x18]
0x7f58:	mov	rdi, r15
0x7f5b:	mov	dword ptr [rsp + 0x80], r12d
0x7f63:	mov	dword ptr [rsp + 0x7c], ebp
0x7f67:	mov	dword ptr [rsp + 0x84], eax
0x7f6e:	mov	eax, dword ptr [rsp + 0xb8]
0x7f75:	mov	dword ptr [rsp + 0x78], eax
0x7f79:	mov	eax, dword ptr [rsp + 0xb4]
0x7f80:	mov	dword ptr [rsp + 0x74], eax
0x7f84:	mov	eax, dword ptr [rsp + 0xb0]
0x7f8b:	mov	dword ptr [rsp + 0x70], eax
0x7f8f:	mov	eax, dword ptr [rsp + 0xd0]
0x7f96:	mov	dword ptr [rsp + 0x90], eax
0x7f9d:	call	0xb620


0x835b:	mov	r14, qword ptr [rsp + 0x240]
0x8363:	add	r9, r14
0x8366:	jo	0x848d


0x836c:	movsxd	rsi, dword ptr [rsp + 0x248]
0x8374:	mov	rcx, qword ptr [rsp + 0x210]
0x837c:	mov	r8d, 0x3b9aca00
0x8382:	mov	rbx, r9
0x8385:	add	rcx, rsi
0x8388:	mov	rax, rcx
0x838b:	cqo	
0x838d:	idiv	r8
0x8390:	lea	rax, [rdx + 0x3b9aca00]
0x8397:	cqo	
0x8399:	idiv	r8
0x839c:	mov	rax, rcx
0x839f:	sub	rax, rdx
0x83a2:	mov	rdi, rdx
0x83a5:	cqo	
0x83a7:	idiv	r8
0x83aa:	cdqe	
0x83ac:	add	rbx, rax
0x83af:	jo	0x848d


0x83b5:	mov	rax, qword ptr [rsp + 0x28]
0x83ba:	test	r12b, r12b
0x83bd:	mov	qword ptr [rax], rbx
0x83c0:	mov	qword ptr [rax + 8], rdi
0x83c4:	je	0x70d2


0x70d2:	test	r12b, r12b
0x70d5:	je	0x7393


0x83ca:	mov	rax, rbp
0x83cd:	or	rax, r13
0x83d0:	or	rax, r14
0x83d3:	or	rax, rsi
0x83d6:	je	0x70d2


0x7393:	mov	r12d, 1
0x7399:	jmp	0x6d9e


0x70db:	mov	edx, 5
0x70e0:	lea	rsi, [rip + 0x9395]
0x70e7:	cmp	qword ptr [rsp + 0x10], 0
0x70ed:	je	0x72f2


0x83dc:	mov	dword ptr [rsp + 0x18], esi
0x83e0:	lea	rsi, [rip + 0x89d1]
0x83e7:	xor	edi, edi
0x83e9:	mov	edx, 5
0x83ee:	call	0x27f0


0x72f2:	xor	edi, edi
0x72f4:	call	0x27f0


0x70f3:	mov	rsi, qword ptr [rsp + 0x10]
0x70f8:	lea	rdi, [rip + 0x91ba]
0x70ff:	mov	ecx, 5
0x7104:	mov	edx, 5
0x7109:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x7109:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x710b:	seta	al
0x710e:	sbb	al, 0
0x7110:	test	al, al
0x7112:	je	0x72eb


0x72eb:	lea	rsi, [rip + 0x91a4]
0x72f2:	xor	edi, edi
0x72f4:	call	0x27f0


0x7118:	lea	rsi, [rip + 0x9d51]
0x711f:	xor	edi, edi
0x7121:	call	0x27f0


0x7b0d:	lea	rsi, [rsp + 0x3e0]
0x7b15:	mov	r14d, dword ptr [rsp + 0x1c0]
0x7b1d:	mov	rbp, qword ptr [rsp + 0x1b8]
0x7b25:	mov	rdi, r13
0x7b28:	mov	r12, rax
0x7b2b:	call	0x4870


0x8549:	lea	rsi, [rip + 0x7f12]
0x8550:	mov	rbx, rax
0x8553:	xor	edi, edi
0x8555:	mov	edx, 5
0x855a:	call	0x27f0


0x7d3d:	lea	rsi, [rip + 0x86cb]
0x7d44:	mov	rbx, rax
0x7d47:	mov	edx, 5
0x7d4c:	xor	edi, edi
0x7d4e:	call	0x27f0


0x85ac:	push	r12
0x85ae:	lea	r8, [rip + 0x7e45]
0x85b5:	push	rbx
0x85b6:	mov	r9, rax
0x85b9:	mov	ecx, 0x64
0x85be:	mov	edx, 1
0x85c3:	mov	esi, 0x64
0x85c8:	mov	rdi, rbp
0x85cb:	xor	eax, eax
0x85cd:	call	0x2700


0x85d2:	lea	rsi, [rip + 0x850f]
0x85d9:	mov	edx, 5
0x85de:	xor	edi, edi
0x85e0:	call	0x27f0


0x7b30:	lea	rsi, [rip + 0x8f61]
0x7b37:	mov	rbx, rax
0x7b3a:	xor	edi, edi
0x7b3c:	mov	edx, 5
0x7b41:	call	0x27f0


0x8180:	lea	rsi, [rip + 0x8991]
0x8187:	mov	rbx, rax
0x818a:	xor	edi, edi
0x818c:	mov	edx, 5
0x8191:	call	0x27f0


0x7fa2:	cmp	rax, -1
0x7fa6:	mov	r14, rax
0x7fa9:	je	0x8617


0x8617:	cmp	byte ptr [rsp + 0x289], 0
0x861f:	je	0x6d9b


0x7faf:	movzx	ebx, byte ptr [rsp + 0x289]
0x7fb7:	test	bl, bl
0x7fb9:	je	0x7e6b


0x8625:	mov	rdi, qword ptr [rsp + 0x18]
0x862a:	lea	rdx, [rsp + 0x300]
0x8632:	mov	rsi, r13
0x8635:	call	0x47b0


0x7fbf:	mov	rcx, qword ptr [rsp + 0x228]
0x7fc7:	mov	rax, qword ptr [rsp + 0x218]
0x7fcf:	lea	rsi, [rip + 0x8c72]
0x7fd6:	mov	rbx, qword ptr [rsp + 0x220]
0x7fde:	xor	edi, edi
0x7fe0:	mov	edx, 5
0x7fe5:	mov	qword ptr [rsp + 0x38], rcx
0x7fea:	mov	qword ptr [rsp + 0x30], rax
0x7fef:	call	0x27f0


0x863a:	lea	rsi, [rip + 0x85c7]
0x8641:	mov	rbx, rax
0x8644:	xor	edi, edi
0x8646:	mov	edx, 5
0x864b:	call	0x27f0


0x7c8b:	cmp	rax, -1
0x7c8f:	mov	r14, rax
0x7c92:	je	0x7aea


0x7c98:	cmp	byte ptr [rsp + 0x289], 0
0x7ca0:	je	0x7e4e


0x7ca6:	lea	rbp, [rsp + 0x300]
0x7cae:	mov	rdi, qword ptr [rsp + 0x18]
0x7cb3:	mov	rsi, r13
0x7cb6:	mov	rdx, rbp
0x7cb9:	call	0x47b0


0x7cbe:	lea	rsi, [rsp + 0x3e0]
0x7cc6:	mov	rdi, r13
0x7cc9:	mov	rbp, rax
0x7ccc:	call	0x4870


0x7cd1:	lea	rsi, [rip + 0x8704]
0x7cd8:	mov	r12, rax
0x7cdb:	mov	edx, 5
0x7ce0:	xor	edi, edi
0x7ce2:	call	0x27f0


0x7a13:	cmp	dword ptr [rsp + 0x88], 0
0x7a1b:	mov	r14, rax
0x7a1e:	mov	rdx, qword ptr [rsp + 0x20]
0x7a23:	js	0x8574


0x8574:	mov	rdi, rdx
0x8577:	call	0xb560


0x7a29:	mov	rsi, qword ptr [rsp + 0x18]
0x7a2e:	lea	rdi, [rsp + 0xb0]
0x7a36:	mov	qword ptr [rsp + 0x20], rdx
0x7a3b:	call	0x44d0


0x7a40:	mov	rdx, qword ptr [rsp + 0x20]
0x7a45:	mov	ebp, eax
0x7a47:	mov	rdi, rdx
0x7a4a:	call	0xb560


0x7c71:	jmp	0x7bf8


0x7ce7:	mov	rdx, rbp
0x7cea:	mov	rdi, rax
0x7ced:	mov	rsi, r12
0x7cf0:	xor	eax, eax
0x7cf2:	call	0x42c0


0x8650:	mov	rsi, rbx
0x8653:	mov	rdi, rax
0x8656:	xor	eax, eax
0x8658:	call	0x42c0


0x865d:	jmp	0x6d9b


0x7ff4:	mov	rcx, qword ptr [rsp + 0x38]
0x7ff9:	mov	rsi, qword ptr [rsp + 0x30]
0x7ffe:	mov	rdx, rbx
0x8001:	mov	rdi, rax
0x8004:	xor	eax, eax
0x8006:	call	0x42c0


0x800b:	mov	rdi, qword ptr [rsp + 0x18]
0x8010:	lea	rdx, [rsp + 0x300]
0x8018:	mov	rsi, r13
0x801b:	call	0x47b0


0x8020:	lea	rsi, [rip + 0x8421]
0x8027:	xor	edi, edi
0x8029:	mov	rbx, rax
0x802c:	mov	edx, 5
0x8031:	call	0x27f0


0x8036:	mov	rsi, rbx
0x8039:	mov	rdi, rax
0x803c:	xor	eax, eax
0x803e:	call	0x42c0


0x8043:	mov	eax, dword ptr [rsp + 0xd0]
0x804a:	cmp	eax, -1
0x804d:	je	0x8075


0x8075:	cmp	qword ptr [rsp + 0x228], 0
0x807e:	jne	0x8152


0x804f:	cmp	eax, dword ptr [rsp + 0x90]
0x8056:	je	0x8075


0x8084:	cmp	ebp, dword ptr [rsp + 0x7c]
0x8088:	jne	0x80a7


0x8152:	movzx	ebx, byte ptr [rsp + 0x289]
0x815a:	jmp	0x7e6b


0x8058:	lea	rsi, [rip + 0x8c29]
0x805f:	xor	edi, edi
0x8061:	mov	edx, 5
0x8066:	call	0x27f0


0x808a:	cmp	qword ptr [rsp + 0x220], 0
0x8093:	jne	0x8152


0x80a7:	lea	rsi, [rip + 0x8c1a]
0x80ae:	mov	edx, 5
0x80b3:	xor	edi, edi
0x80b5:	call	0x27f0


0x8099:	cmp	r12d, dword ptr [rsp + 0x80]
0x80a1:	je	0x8152


0x80ba:	mov	rdi, rax
0x80bd:	xor	eax, eax
0x80bf:	call	0x42c0


0x80c4:	lea	r8, [rsp + 0x2d3]
0x80cc:	mov	edi, dword ptr [rsp + 0x20]
0x80d0:	mov	rsi, r8
0x80d3:	mov	qword ptr [rsp + 0x30], r8
0x80d8:	call	0x2b60


0x80dd:	lea	rsi, [rip + 0x8c24]
0x80e4:	mov	edx, 5
0x80e9:	xor	edi, edi
0x80eb:	mov	rbx, rax
0x80ee:	call	0x27f0


0x80f3:	lea	edx, [r12 + 1]
0x80f8:	mov	ecx, ebp
0x80fa:	mov	rsi, rbx
0x80fd:	mov	rdi, rax
0x8100:	xor	eax, eax
0x8102:	call	0x42c0


0x8107:	mov	r8, qword ptr [rsp + 0x30]
0x810c:	mov	eax, dword ptr [rsp + 0x80]
0x8113:	mov	edi, dword ptr [rsp + 0x84]
0x811a:	mov	r12d, dword ptr [rsp + 0x7c]
0x811f:	mov	rsi, r8
0x8122:	lea	ebx, [rax + 1]
0x8125:	call	0x2b60


0x812a:	lea	rsi, [rip + 0x8bff]
0x8131:	mov	rbp, rax
0x8134:	mov	edx, 5
0x8139:	xor	edi, edi
0x813b:	call	0x27f0


0x8140:	mov	ecx, r12d
0x8143:	mov	rdi, rax
0x8146:	mov	edx, ebx
0x8148:	mov	rsi, rbp
0x814b:	xor	eax, eax
0x814d:	call	0x42c0


0x806b:	mov	rdi, rax
0x806e:	xor	eax, eax
0x8070:	call	0x42c0


0x8196:	mov	rsi, rbx
0x8199:	mov	rdi, rax
0x819c:	xor	eax, eax
0x819e:	call	0x42c0


0x81a3:	jmp	0x7d2d


0x7d2d:	mov	rdi, qword ptr [rsp + 0x18]
0x7d32:	mov	rdx, rbp
0x7d35:	mov	rsi, r13
0x7d38:	call	0x47b0


0x7b46:	mov	r8, r12
0x7b49:	mov	rdi, rax
0x7b4c:	mov	ecx, r14d
0x7b4f:	mov	rdx, rbp
0x7b52:	mov	rsi, rbx
0x7b55:	xor	eax, eax
0x7b57:	call	0x42c0


0x7b5c:	jmp	0x6d9b


0x85e5:	mov	rsi, rbp
0x85e8:	mov	rdi, rax
0x85eb:	xor	eax, eax
0x85ed:	call	0x42c0


0x85f2:	pop	rax
0x85f3:	pop	rdx
0x85f4:	cmp	qword ptr [rsp + 0x260], 0
0x85fd:	je	0x7d2d


0x8603:	cmp	qword ptr [rsp + 0x258], 0
0x860c:	jne	0x8170


0x8612:	jmp	0x7d2d


0x8170:	lea	rsi, [rsp + 0x3e0]
0x8178:	mov	rdi, r13
0x817b:	call	0x4870


0x7d53:	mov	rsi, rbx
0x7d56:	mov	rdi, rax
0x7d59:	xor	eax, eax
0x7d5b:	call	0x42c0


0x7d60:	mov	rax, qword ptr [rsp + 0x218]
0x7d68:	mov	rdx, qword ptr [rsp + 0x220]
0x7d70:	movzx	ebx, byte ptr [rsp + 0x289]
0x7d78:	or	rdx, rax
0x7d7b:	mov	rsi, rdx
0x7d7e:	or	rsi, qword ptr [rsp + 0x228]
0x7d86:	je	0x7e6b


0x7d8c:	test	bl, bl
0x7d8e:	je	0x7ed5


0x7d94:	test	rdx, rdx
0x7d97:	je	0x8689


0x8689:	cmp	dword ptr [rsp + 0x78], 0xc
0x868e:	je	0x7dd0


0x7d9d:	cmp	dword ptr [rsp + 0x7c], 0xf
0x7da2:	je	0x7dc1


0x7dd0:	movsxd	rdx, dword ptr [rsp + 0x84]
0x7dd8:	xor	eax, eax
0x7dda:	mov	rcx, rdx
0x7ddd:	add	rcx, qword ptr [rsp + 0x218]
0x7de5:	movsxd	rdx, ecx
0x7de8:	seto	al
0x7deb:	mov	dword ptr [rsp + 0x20], ecx
0x7def:	cmp	rcx, rdx
0x7df2:	mov	edx, 1
0x7df7:	cmovne	eax, edx
0x7dfa:	test	eax, eax
0x7dfc:	je	0x7f00


0x8694:	lea	rsi, [rip + 0x8525]
0x869b:	xor	edi, edi
0x869d:	mov	edx, 5
0x86a2:	call	0x27f0


0x7dc1:	cmp	qword ptr [rsp + 0x228], 0
0x7dca:	jne	0x8689


0x7da4:	lea	rsi, [rip + 0x8dad]
0x7dab:	xor	edi, edi
0x7dad:	mov	edx, 5
0x7db2:	call	0x27f0


0x7db7:	mov	rdi, rax
0x7dba:	xor	eax, eax
0x7dbc:	call	0x42c0


0x86a7:	mov	rdi, rax
0x86aa:	xor	eax, eax
0x86ac:	call	0x42c0


0x86b1:	jmp	0x7dd0


0x855f:	mov	rdx, r14
0x8562:	mov	rdi, rax
0x8565:	mov	rsi, rbx
0x8568:	xor	eax, eax
0x856a:	call	0x42c0


0x856f:	jmp	0x8319


0x7126:	mov	rsi, qword ptr [rsp + 0x10]
0x712b:	mov	rdi, rax
0x712e:	xor	eax, eax
0x7130:	call	0x42c0


0x7135:	mov	r14, qword ptr [rsp + 0x28]
0x713a:	lea	rsi, [rip + 0x9d57]
0x7141:	xor	edi, edi
0x7143:	mov	edx, 5
0x7148:	mov	rbx, qword ptr [r14]
0x714b:	mov	rbp, qword ptr [r14 + 8]
0x714f:	call	0x27f0


0x7154:	mov	rdi, rax
0x7157:	xor	eax, eax
0x7159:	mov	rsi, rbx
0x715c:	lea	rbx, [rsp + 0x130]
0x7164:	mov	edx, ebp
0x7166:	call	0x42c0


0x716b:	mov	rsi, rbx
0x716e:	mov	rdi, r14
0x7171:	call	0x28b0


0x7176:	test	rax, rax
0x7179:	je	0x71b0


0x71b0:	lea	rbx, [rsp + 0x170]
0x71b8:	mov	rsi, qword ptr [rsp + 0x28]
0x71bd:	mov	rdi, r15
0x71c0:	mov	rdx, rbx
0x71c3:	call	0xb570


0x717b:	lea	rdx, [rsp + 0x300]
0x7183:	mov	rdi, rbx
0x7186:	xor	esi, esi
0x7188:	call	0x47b0


0x718d:	lea	rsi, [rip + 0x931c]
0x7194:	mov	rbx, rax
0x7197:	xor	edi, edi
0x7199:	mov	edx, 5
0x719e:	call	0x27f0


0x71a3:	mov	rsi, rbx
0x71a6:	mov	rdi, rax
0x71a9:	xor	eax, eax
0x71ab:	call	0x42c0


0x72f9:	mov	rdi, rax
0x72fc:	xor	eax, eax
0x72fe:	call	0x42c0


0x7303:	jmp	0x7135


0x83f3:	mov	r10d, dword ptr [rsp + 0x18]
0x83f8:	mov	rcx, r14
0x83fb:	mov	rdi, rax
0x83fe:	mov	rdx, r13
0x8401:	xor	eax, eax
0x8403:	mov	rsi, rbp
0x8406:	mov	r8d, r10d
0x8409:	call	0x42c0


0x840e:	lea	rsi, [rip + 0x89f3]
0x8415:	xor	edi, edi
0x8417:	mov	edx, 5
0x841c:	call	0x27f0


0x8421:	mov	rsi, rbx
0x8424:	mov	rdi, rax
0x8427:	xor	eax, eax
0x8429:	call	0x42c0


0x842e:	cmp	dword ptr [rsp + 0x90], -1
0x8436:	je	0x847f


0x847f:	movzx	r12d, byte ptr [rsp + 0x289]
0x8488:	jmp	0x70d2


0x8438:	mov	rsi, qword ptr [rsp + 0x28]
0x843d:	lea	rdx, [rsp + 0x170]
0x8445:	mov	rdi, r15
0x8448:	call	0xb570


0x7e23:	lea	rsi, [rip + 0x860d]
0x7e2a:	mov	rdi, rax
0x7e2d:	mov	edx, 0x877
0x7e32:	xor	eax, eax
0x7e34:	call	0x42c0


0x7e39:	jmp	0x6d9b


0x7ebf:	mov	esi, ebp
0x7ec1:	mov	rdi, rax
0x7ec4:	xor	eax, eax
0x7ec6:	call	0x42c0


0x7ecb:	jmp	0x6d9b


0x84c8:	mov	rsi, rbp
0x84cb:	mov	rdi, rax
0x84ce:	xor	eax, eax
0x84d0:	call	0x42c0


0x84d5:	jmp	0x6d9b


0x7714:	mov	rdi, rax
0x7717:	xor	eax, eax
0x7719:	call	0x42c0


0x771e:	lea	rdi, [rsp + 0xb0]
0x7726:	mov	rdx, rbx
0x7729:	mov	rsi, r13
0x772c:	call	0x47b0


0x7731:	lea	rsi, [rip + 0x8c21]
0x7738:	mov	r12, rax
0x773b:	mov	edx, 5
0x7740:	xor	edi, edi
0x7742:	call	0x27f0


0x7747:	mov	rsi, r12
0x774a:	mov	rdi, rax
0x774d:	xor	eax, eax
0x774f:	call	0x42c0


0x7754:	mov	rdi, qword ptr [rsp + 0x18]
0x7759:	mov	rdx, rbx
0x775c:	mov	rsi, r13
0x775f:	call	0x47b0


0x7764:	lea	rsi, [rip + 0x8c0c]
0x776b:	mov	r12, rax
0x776e:	mov	edx, 5
0x7773:	xor	edi, edi
0x7775:	call	0x27f0


0x777a:	mov	rsi, r12
0x777d:	mov	rdi, rax
0x7780:	xor	eax, eax
0x7782:	call	0x42c0


0x7787:	lea	rsi, [rip + 0x8be8]
0x778e:	mov	r12d, 1
0x7794:	mov	rax, rsi
0x7797:	mov	r11d, dword ptr [rsp + 0x40]
0x779c:	cmp	dword ptr [rsp + 0x38], r11d
0x77a1:	lea	rcx, [rip + 0x8bce]
0x77a8:	lea	rdx, [rip + 0x8a92]
0x77af:	mov	r11d, dword ptr [rsp + 0x20]
0x77b4:	lea	r9, [rip + 0x8a84]
0x77bb:	mov	r8, rcx
0x77be:	mov	rdi, rcx
0x77c1:	cmovne	r8, rdx
0x77c5:	cmp	dword ptr [rsp + 0x10], r11d
0x77ca:	mov	r11d, dword ptr [rsp + 0x28]
0x77cf:	cmovne	rdi, rdx
0x77d3:	cmp	r14d, ebp
0x77d6:	cmove	rdx, rcx
0x77da:	cmp	dword ptr [rsp + 0x44], r11d
0x77df:	cmove	r9, rcx
0x77e3:	sub	rsp, 8
0x77e7:	mov	ecx, 0x64
0x77ec:	push	rsi
0x77ed:	push	rax
0x77ee:	mov	esi, 0x64
0x77f3:	push	r8
0x77f5:	lea	r8, [rip + 0x91d4]
0x77fc:	push	rdi
0x77fd:	push	rdx
0x77fe:	mov	rdi, rbx
0x7801:	mov	edx, 1
0x7806:	xor	eax, eax
0x7808:	call	0x2700


0x780d:	add	rsp, 0x30
0x7811:	mov	eax, 0x34
0x7816:	jmp	0x7822


0x7822:	test	eax, eax
0x7824:	mov	edx, eax
0x7826:	jne	0x7818


0x7828:	movsxd	rax, edx
0x782b:	lea	rdi, [rip + 0x8ba6]
0x7832:	mov	rsi, rbx
0x7835:	mov	byte ptr [rsp + rax + 0x3e0], 0
0x783d:	xor	eax, eax
0x783f:	call	0x42c0


0x7818:	sub	rax, 1
0x781c:	cmp	byte ptr [rbx + rax], 0x20
0x7820:	jne	0x7828


0x7844:	lea	rsi, [rip + 0x8b4a]
0x784b:	xor	edi, edi
0x784d:	mov	edx, 5
0x7852:	call	0x27f0


0x7857:	mov	rdi, rax
0x785a:	xor	eax, eax
0x785c:	call	0x42c0


0x7861:	test	r12d, r12d
0x7864:	je	0x7883


0x7883:	mov	ebx, dword ptr [rsp + 0x20]
0x7887:	cmp	dword ptr [rsp + 0x10], ebx
0x788b:	je	0x78af


0x7866:	lea	rsi, [rip + 0x91a3]
0x786d:	xor	edi, edi
0x786f:	mov	edx, 5
0x7874:	call	0x27f0


0x78af:	lea	rsi, [rip + 0x91ba]
0x78b6:	mov	edx, 5
0x78bb:	xor	edi, edi
0x78bd:	call	0x27f0


0x788d:	cmp	r14d, ebp
0x7890:	je	0x78af


0x7892:	lea	rsi, [rip + 0x91af]
0x7899:	xor	edi, edi
0x789b:	mov	edx, 5
0x78a0:	call	0x27f0


0x78a5:	mov	rdi, rax
0x78a8:	xor	eax, eax
0x78aa:	call	0x42c0


0x78c2:	mov	rdi, rax
0x78c5:	xor	eax, eax
0x78c7:	call	0x42c0


0x78cc:	cmp	qword ptr [rsp + 0x30], 0
0x78d2:	mov	edx, 5
0x78d7:	je	0x86b6


0x86b6:	lea	rsi, [rip + 0x7d03]
0x86bd:	xor	edi, edi
0x86bf:	call	0x27f0


0x78dd:	lea	rsi, [rip + 0x8ac9]
0x78e4:	xor	edi, edi
0x78e6:	call	0x27f0


0x78eb:	lea	rdi, [rip + 0x8adf]
0x78f2:	mov	rsi, rax
0x78f5:	xor	eax, eax
0x78f7:	call	0x42c0


0x78fc:	jmp	0x6d9b


0x86c4:	jmp	0x78eb


0x7879:	mov	rdi, rax
0x787c:	xor	eax, eax
0x787e:	call	0x42c0


0x8263:	mov	rdi, rax
0x8266:	xor	eax, eax
0x8268:	call	0x42c0


0x826d:	lea	rdi, [rsp + 0xb0]
0x8275:	mov	rsi, r13
0x8278:	mov	rdx, rbx
0x827b:	call	0x47b0


0x8280:	lea	rsi, [rip + 0x80d2]
0x8287:	mov	edx, 5
0x828c:	xor	edi, edi
0x828e:	mov	qword ptr [rsp + 0x48], rax
0x8293:	call	0x27f0


0x8298:	mov	rsi, qword ptr [rsp + 0x48]
0x829d:	mov	rdi, rax
0x82a0:	xor	eax, eax
0x82a2:	call	0x42c0


0x82a7:	mov	rdi, qword ptr [rsp + 0x18]
0x82ac:	mov	rsi, r13
0x82af:	mov	rdx, rbx
0x82b2:	call	0x47b0


0x82b7:	lea	rsi, [rip + 0x80b9]
0x82be:	mov	edx, 5
0x82c3:	xor	edi, edi
0x82c5:	mov	r13, rax
0x82c8:	call	0x27f0


0x82cd:	mov	rsi, r13
0x82d0:	mov	rdi, rax
0x82d3:	xor	eax, eax
0x82d5:	call	0x42c0


0x82da:	mov	r10d, dword ptr [rsp + 0x50]
0x82df:	mov	r9d, dword ptr [rsp + 0x54]
0x82e4:	lea	rdx, [rip + 0x808b]
0x82eb:	mov	r8d, dword ptr [rsp + 0x58]
0x82f0:	mov	ecx, dword ptr [rsp + 0x5c]
0x82f4:	lea	rax, [rip + 0x7f46]
0x82fb:	mov	rsi, rdx
0x82fe:	cmp	r10d, r9d
0x8301:	cmovne	rsi, rax
0x8305:	cmp	r8d, ecx
0x8308:	cmove	rax, rdx
0x830c:	jmp	0x7797


0x7797:	mov	r11d, dword ptr [rsp + 0x40]
0x779c:	cmp	dword ptr [rsp + 0x38], r11d
0x77a1:	lea	rcx, [rip + 0x8bce]
0x77a8:	lea	rdx, [rip + 0x8a92]
0x77af:	mov	r11d, dword ptr [rsp + 0x20]
0x77b4:	lea	r9, [rip + 0x8a84]
0x77bb:	mov	r8, rcx
0x77be:	mov	rdi, rcx
0x77c1:	cmovne	r8, rdx
0x77c5:	cmp	dword ptr [rsp + 0x10], r11d
0x77ca:	mov	r11d, dword ptr [rsp + 0x28]
0x77cf:	cmovne	rdi, rdx
0x77d3:	cmp	r14d, ebp
0x77d6:	cmove	rdx, rcx
0x77da:	cmp	dword ptr [rsp + 0x44], r11d
0x77df:	cmove	r9, rcx
0x77e3:	sub	rsp, 8
0x77e7:	mov	ecx, 0x64
0x77ec:	push	rsi
0x77ed:	push	rax
0x77ee:	mov	esi, 0x64
0x77f3:	push	r8
0x77f5:	lea	r8, [rip + 0x91d4]
0x77fc:	push	rdi
0x77fd:	push	rdx
0x77fe:	mov	rdi, rbx
0x7801:	mov	edx, 1
0x7806:	xor	eax, eax
0x7808:	call	0x2700


0x81f6:	mov	rdi, rax
0x81f9:	mov	rsi, rbp
0x81fc:	xor	eax, eax
0x81fe:	call	0x42c0


0x8203:	jmp	0x7bf8


0x8684:	jmp	0x81f6


0x8504:	mov	rdx, rbx
0x8507:	mov	rdi, rax
0x850a:	mov	rsi, rbp
0x850d:	xor	eax, eax
0x850f:	call	0x42c0


0x8514:	jmp	0x6d9b


0x7470:	mov	rdi, rax
0x7473:	xor	eax, eax
0x7475:	call	0x42c0


0x747a:	jmp	0x6d9b


0x7440:	mov	rsi, rbp
0x7443:	mov	rdi, rax
0x7446:	xor	eax, eax
0x7448:	call	0x42c0


0x7b7b:	mov	rsi, rbp
0x7b7e:	mov	rdi, rax
0x7b81:	mov	rdx, rbx
0x7b84:	xor	eax, eax
0x7b86:	mov	rbp, rbx
0x7b89:	call	0x42c0


0x7b8e:	jmp	0x73e9


0x6e1f:	mov	rdi, rax
0x6e22:	mov	rsi, rbx
0x6e25:	xor	eax, eax
0x6e27:	xor	r12d, r12d
0x6e2a:	call	0x42c0


0x6e2f:	jmp	0x6d9e


0x7236:	mov	rdi, rax
0x7239:	jmp	0x6e22


0x6e22:	mov	rsi, rbx
0x6e25:	xor	eax, eax
0x6e27:	xor	r12d, r12d
0x6e2a:	call	0x42c0


0x6f9b:	mov	rdi, rax
0x6f9e:	xor	eax, eax
0x6fa0:	call	0x42c0


0x6fa5:	cmp	byte ptr [rsp + 0x250], 0
0x6fad:	mov	edx, 5
0x6fb2:	lea	rsi, [rip + 0x92b8]
0x6fb9:	jne	0x7020


0x6fbb:	cmp	qword ptr [rsp + 0x280], 0
0x6fc4:	mov	edx, 5
0x6fc9:	lea	rsi, [rip + 0x92ba]
0x6fd0:	jne	0x7020


0x7020:	xor	edi, edi
0x7022:	call	0x27f0


0x6fd2:	mov	rbx, qword ptr [rsp + 0x10]
0x6fd7:	test	rbx, rbx
0x6fda:	je	0x7014


0x7014:	lea	rsi, [rip + 0x92bd]
0x701b:	mov	edx, 5
0x7020:	xor	edi, edi
0x7022:	call	0x27f0


0x6fdc:	cmp	qword ptr [rsp], r15
0x6fe0:	je	0x747f


0x747f:	mov	rsi, qword ptr [rsp + 0x10]
0x7484:	lea	rdi, [rip + 0x8e2e]
0x748b:	mov	ecx, 5
0x7490:	mov	edx, 5
0x7495:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6fe6:	lea	rsi, [rip + 0x92b5]
0x6fed:	mov	edx, 5
0x6ff2:	xor	edi, edi
0x6ff4:	call	0x27f0


0x7495:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x7497:	lea	rsi, [rip + 0x9322]
0x749e:	seta	al
0x74a1:	sbb	al, 0
0x74a3:	test	al, al
0x74a5:	je	0x7020


0x74ab:	lea	rsi, [rip + 0x8e0c]
0x74b2:	xor	edi, edi
0x74b4:	call	0x27f0


0x74b9:	mov	rcx, qword ptr [rsp + 0x10]
0x74be:	jmp	0x6ffc


0x6ffc:	mov	rdi, qword ptr [rip + 0x20e0dd]
0x7003:	mov	rdx, rax
0x7006:	mov	esi, 1
0x700b:	xor	eax, eax
0x700d:	call	0x2af0


0x7012:	jmp	0x703d


0x703d:	cmp	qword ptr [rsp + 0x268], 0
0x7046:	mov	rax, qword ptr [rsp + 0x280]
0x704e:	je	0x7090


0x7090:	test	rax, rax
0x7093:	jne	0x7356


0x7050:	test	rax, rax
0x7053:	jne	0x7356


0x7099:	mov	rsi, qword ptr [rip + 0x20e040]
0x70a0:	mov	edi, 0xa
0x70a5:	call	0x2910


0x7356:	mov	edi, dword ptr [rsp + 0x1c8]
0x735d:	lea	rsi, [rsp + 0x2e0]
0x7365:	call	0x41c0


0x7059:	mov	r8d, dword ptr [rsp + 0x1c4]
0x7061:	mov	rsi, qword ptr [rip + 0x20e078]
0x7068:	test	r8d, r8d
0x706b:	jle	0x70a0


0x70a0:	mov	edi, 0xa
0x70a5:	call	0x2910


0x706d:	lea	rdi, [rip + 0x9279]
0x7074:	mov	rcx, rsi
0x7077:	mov	edx, 5
0x707c:	mov	esi, 1
0x7081:	call	0x2ae0


0x7086:	mov	rax, qword ptr [rsp + 0x280]
0x708e:	nop	
0x7090:	test	rax, rax
0x7093:	jne	0x7356


0x736a:	mov	rdi, qword ptr [rip + 0x20dd6f]
0x7371:	lea	rdx, [rip + 0x8f6f]
0x7378:	mov	rcx, rax
0x737b:	mov	esi, 1
0x7380:	xor	eax, eax
0x7382:	call	0x2af0


0x7387:	mov	rsi, qword ptr [rip + 0x20dd52]
0x738e:	jmp	0x70a0


0x6ff9:	mov	rcx, rbx
0x6ffc:	mov	rdi, qword ptr [rip + 0x20e0dd]
0x7003:	mov	rdx, rax
0x7006:	mov	esi, 1
0x700b:	xor	eax, eax
0x700d:	call	0x2af0


0x7027:	mov	rdi, qword ptr [rip + 0x20e0b2]
0x702e:	mov	rdx, rax
0x7031:	mov	esi, 1
0x7036:	xor	eax, eax
0x7038:	call	0x2af0


0x7a4f:	test	bpl, bpl
0x7a52:	je	0x764b


0x857c:	jmp	0x764b


0x844d:	test	rax, rax
0x8450:	je	0x847f


0x8452:	mov	eax, dword ptr [rsp + 0x190]
0x8459:	cmp	dword ptr [rsp + 0x90], eax
0x8460:	je	0x847f


0x8462:	lea	rsi, [rip + 0x89c7]
0x8469:	xor	edi, edi
0x846b:	mov	edx, 5
0x8470:	call	0x27f0


0x8475:	mov	rdi, rax
0x8478:	xor	eax, eax
0x847a:	call	0x42c0


0x71c8:	test	rax, rax
0x71cb:	je	0x6d9e


0x71d1:	mov	edi, dword ptr [rsp + 0x198]
0x71d8:	lea	rsi, [rsp + 0x2e0]
0x71e0:	call	0x41c0


0x71e5:	lea	rdx, [rsp + 0x300]
0x71ed:	xor	esi, esi
0x71ef:	mov	rdi, rbx
0x71f2:	mov	rbp, rax
0x71f5:	call	0x47b0


0x71fa:	lea	rsi, [rip + 0x92c0]
0x7201:	mov	rbx, rax
0x7204:	xor	edi, edi
0x7206:	mov	edx, 5
0x720b:	call	0x27f0


0x7210:	mov	rdx, rbp
0x7213:	mov	rdi, rax
0x7216:	mov	rsi, rbx
0x7219:	xor	eax, eax
0x721b:	call	0x42c0


0x7220:	jmp	0x6d9e


0x6cb6:	test	rax, rax
0x6cb9:	je	0x6cdc


0x6cdc:	add	r14d, 0x76a700
0x6ce3:	cmp	r14d, 0x1da9c00
0x6cea:	jne	0x6c98


0x6cbb:	mov	rax, qword ptr [rsp + 0x1a0]
0x6cc3:	test	rax, rax
0x6cc6:	je	0x6cdc


0x6c98:	movsxd	rax, r14d
0x6c9b:	add	rax, rbx
0x6c9e:	jo	0x6cec


0x6cc8:	mov	edx, dword ptr [rsp + 0x190]
0x6ccf:	cmp	edx, dword ptr [rsp + 0x2a4]
0x6cd6:	jne	0x739e


0x739e:	mov	qword ptr [rsp + 0x2a8], rax
0x73a6:	mov	dword ptr [rsp + 0x2b0], 0x10d
0x73b1:	mov	dword ptr [rsp + 0x2b4], edx
0x73b8:	mov	qword ptr [rsp + 0x2b8], 0
0x73c4:	jmp	0x6cec


0x6a8f:	test	rax, rax
0x6a92:	je	0x6e60


0x6e60:	mov	qword ptr [rsp + 8], 0
0x6e69:	xor	r12d, r12d
0x6e6c:	jmp	0x6dac


0x6a98:	mov	qword ptr [rsp + 8], 0
0x6aa1:	cmp	byte ptr [r13], 0
0x6aa6:	lea	rax, [rip + 0x980f]
0x6aad:	mov	qword ptr [rsp + 0x1e0], 0
0x6ab9:	mov	dword ptr [rsp + 0x1cc], 2
0x6ac4:	mov	qword ptr [rsp + 0x218], 0
0x6ad0:	lea	r12, [rsp + 0x130]
0x6ad8:	mov	qword ptr [rsp + 0x220], 0
0x6ae4:	mov	qword ptr [rsp + 0x228], 0
0x6af0:	mov	r14d, 0x76a700
0x6af6:	mov	qword ptr [rsp + 0x230], 0
0x6b02:	mov	qword ptr [rsp + 0x238], 0
0x6b0e:	cmove	r13, rax
0x6b12:	movzx	eax, byte ptr [rsp + 0x20]
0x6b17:	mov	qword ptr [rsp + 0x240], 0
0x6b23:	mov	qword ptr [rsp + 0x1b0], r13
0x6b2b:	movsxd	r13, dword ptr [rsp + 0x18]
0x6b30:	mov	dword ptr [rsp + 0x248], 0
0x6b3b:	mov	byte ptr [rsp + 0x250], 0
0x6b43:	mov	byte ptr [rsp + 0x289], al
0x6b4a:	movsxd	rax, dword ptr [rsp + 0x104]
0x6b52:	mov	qword ptr [rsp + 0x210], r13
0x6b5a:	and	byte ptr [rsp + 0x289], 1
0x6b62:	lea	r13, [rsp + 0x170]
0x6b6a:	add	rax, 0x76c
0x6b70:	mov	qword ptr [rsp + 0x1d8], rax
0x6b78:	mov	eax, dword ptr [rsp + 0x100]
0x6b7f:	add	eax, 1
0x6b82:	cdqe	
0x6b84:	mov	qword ptr [rsp + 0x1e8], rax
0x6b8c:	movsxd	rax, dword ptr [rsp + 0xfc]
0x6b94:	mov	qword ptr [rsp + 0x1f0], rax
0x6b9c:	movsxd	rax, dword ptr [rsp + 0xf8]
0x6ba4:	mov	qword ptr [rsp + 0x1f8], rax
0x6bac:	movsxd	rax, dword ptr [rsp + 0xf4]
0x6bb4:	mov	qword ptr [rsp + 0x200], rax
0x6bbc:	movsxd	rax, dword ptr [rsp + 0xf0]
0x6bc4:	mov	qword ptr [rsp + 0x208], rax
0x6bcc:	mov	eax, dword ptr [rsp + 0x110]
0x6bd3:	mov	dword ptr [rsp + 0x90], eax
0x6bda:	mov	byte ptr [rsp + 0x251], 0
0x6be2:	mov	rdx, qword ptr [rsp + 0x120]
0x6bea:	mov	qword ptr [rsp + 0x258], 0
0x6bf6:	mov	qword ptr [rsp + 0x260], 0
0x6c02:	mov	qword ptr [rsp + 0x278], 0
0x6c0e:	mov	qword ptr [rsp + 0x268], 0
0x6c1a:	mov	qword ptr [rsp + 0x270], 0


0xb64c:	test	rax, rax
0xb64f:	mov	r12, rax
0xb652:	je	0xb750


0xb750:	mov	rax, -1
0xb757:	jmp	0xb69e


0xb658:	mov	rdi, rbx
0xb65b:	call	0x2a00


0xb87c:	mov	ebx, dword ptr [rbp]
0xb87f:	mov	rdi, rbp
0xb882:	mov	r12, rax
0xb885:	call	0xd540


0x2c10:	lea	rsi, [rip + 0xcbcd]
0x2c17:	lea	rdi, [rip + 0xcb9d]
0x2c1e:	call	0x27e0


0x27e0:	jmp	qword ptr [rip + 0x21263a]




0xb8fb:	mov	rdx, rax
0xb8fe:	mov	eax, 1
0xb903:	test	rdx, rdx
0xb906:	je	0xb925


0xb925:	add	rsp, 8
0xb929:	ret	


0xb908:	lea	rdi, [rip + 0x4d35]
0xb90f:	mov	ecx, 2
0xb914:	mov	rsi, rdx
0xb917:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb917:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb919:	seta	cl
0xb91c:	sbb	cl, 0
0xb91f:	xor	eax, eax
0xb921:	test	cl, cl
0xb923:	jne	0xb930


0xb930:	lea	rdi, [rip + 0x6469]
0xb937:	mov	ecx, 6
0xb93c:	mov	rsi, rdx
0xb93f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb93f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb941:	seta	al
0xb944:	sbb	al, 0
0xb946:	test	al, al
0xb948:	setne	al
0xb94b:	add	rsp, 8
0xb94f:	ret	


0xb1ac:	test	al, al
0xb1ae:	jne	0xb1c0


0xb1b0:	movzx	eax, byte ptr [r13]
0xb1b5:	mov	ebp, 1
0xb1ba:	mov	dword ptr [rbx], eax
0xb1bc:	nop	dword ptr [rax]
0xb1c0:	mov	rdx, qword ptr [rsp + 8]
0xb1c5:	xor	rdx, qword ptr fs:[0x28]
0xb1ce:	mov	rax, rbp
0xb1d1:	jne	0xb1de


0xb95e:	test	rax, rax
0xb961:	je	0xb980


0xb980:	lea	rax, [rip + 0x641f]
0xb987:	add	rsp, 8
0xb98b:	ret	


0xb963:	cmp	byte ptr [rax], 0
0xb966:	lea	rdx, [rip + 0x6439]
0xb96d:	cmove	rax, rdx
0xb971:	add	rsp, 8
0xb975:	ret	


0x8c30:	movzx	edx, byte ptr [rax]
0x8c33:	and	edx, 0xffffffdf
0x8c36:	cmp	dl, 0x55
0x8c39:	je	0x8cb0


0x8cb0:	movzx	edx, byte ptr [rax + 1]
0x8cb4:	and	edx, 0xffffffdf
0x8cb7:	cmp	dl, 0x54
0x8cba:	jne	0x8c40


0x8c3b:	cmp	dl, 0x47
0x8c3e:	je	0x8c60


0x8cbc:	movzx	edx, byte ptr [rax + 2]
0x8cc0:	and	edx, 0xffffffdf
0x8cc3:	cmp	dl, 0x46
0x8cc6:	jne	0x8c40


0x8c40:	lea	rax, [rip + 0x7600]
0x8c47:	lea	rdx, [rip + 0x890d]
0x8c4e:	cmp	ebx, 9
0x8c51:	cmovne	rax, rdx
0x8c55:	add	rsp, 8
0x8c59:	pop	rbx
0x8c5a:	pop	rbp
0x8c5b:	ret	


0x8c60:	movzx	edx, byte ptr [rax + 1]
0x8c64:	and	edx, 0xffffffdf
0x8c67:	cmp	dl, 0x42
0x8c6a:	jne	0x8c40


0x8ccc:	cmp	byte ptr [rax + 3], 0x2d
0x8cd0:	jne	0x8c40


0x8c6c:	cmp	byte ptr [rax + 2], 0x31
0x8c70:	jne	0x8c40


0x8cd6:	cmp	byte ptr [rax + 4], 0x38
0x8cda:	jne	0x8c40


0x8c72:	cmp	byte ptr [rax + 3], 0x38
0x8c76:	jne	0x8c40


0x8ce0:	cmp	byte ptr [rax + 5], 0
0x8ce4:	jne	0x8c40


0x8c78:	cmp	byte ptr [rax + 4], 0x30
0x8c7c:	jne	0x8c40


0x8cea:	cmp	byte ptr [rbp], 0x60
0x8cee:	lea	rax, [rip + 0x8857]
0x8cf5:	lea	rdx, [rip + 0x8854]
0x8cfc:	cmovne	rax, rdx
0x8d00:	add	rsp, 8
0x8d04:	pop	rbx
0x8d05:	pop	rbp
0x8d06:	ret	


0x8c7e:	cmp	byte ptr [rax + 5], 0x33
0x8c82:	jne	0x8c40


0x8c84:	cmp	byte ptr [rax + 6], 0x30
0x8c88:	jne	0x8c40


0x8c8a:	cmp	byte ptr [rax + 7], 0
0x8c8e:	jne	0x8c40


0x8c90:	cmp	byte ptr [rbp], 0x60
0x8c94:	lea	rax, [rip + 0x88b9]
0x8c9b:	lea	rdx, [rip + 0x88b6]
0x8ca2:	cmovne	rax, rdx
0x8ca6:	add	rsp, 8
0x8caa:	pop	rbx
0x8cab:	pop	rbp
0x8cac:	ret	


0xd633:	mov	edx, r12d
0xd636:	mov	rsi, rbp
0xd639:	mov	edi, eax
0xd63b:	call	0x28c0


0x28c0:	jmp	qword ptr [rip + 0x2125ca]




0xd54c:	test	eax, eax
0xd54e:	mov	rdi, rbx
0xd551:	js	0xd5a7


0xd5a7:	pop	rbx
0xd5a8:	pop	rbp
0xd5a9:	pop	r12
0xd5ab:	jmp	0x27d0


0xd553:	call	0x2a10


0x27d0:	jmp	qword ptr [rip + 0x212642]




0xd558:	test	eax, eax
0xd55a:	jne	0xd588


0xd55c:	mov	rdi, rbx
0xd55f:	call	0xd5c0


0xd588:	mov	rdi, rbx
0xd58b:	call	0x29a0


0xd590:	xor	esi, esi
0xd592:	mov	edx, 1
0xd597:	mov	edi, eax
0xd599:	call	0x28c0


0xd59e:	cmp	rax, -1
0xd5a2:	jne	0xd55c


0xd5a4:	mov	rdi, rbx
0xd5a7:	pop	rbx
0xd5a8:	pop	rbp
0xd5a9:	pop	r12
0xd5ab:	jmp	0x27d0


0xd640:	cmp	rax, -1
0xd644:	je	0xd652


0xd652:	pop	rbx
0xd653:	pop	rbp
0xd654:	pop	r12
0xd656:	ret	


0xd646:	and	dword ptr [rbx], 0xffffffef
0xd649:	mov	qword ptr [rbx + 0x90], rax
0xd650:	xor	eax, eax
0xd652:	pop	rbx
0xd653:	pop	rbp
0xd654:	pop	r12
0xd656:	ret	


0x2c23:	lea	rdi, [rip + 0xcb91]
0x2c2a:	call	0x27c0


0x27c0:	jmp	qword ptr [rip + 0x21264a]




0xb5a0:	test	rax, rax
0xb5a3:	je	0xb5d0


0xb5d0:	cmp	r12, 1
0xb5d4:	je	0xb5de


0xb5a5:	mov	rsi, r13
0xb5a8:	mov	rdi, rbx
0xb5ab:	call	0xb340


0xb5d6:	mov	rdi, r12
0xb5d9:	call	0xb250


0xb5b0:	test	al, al
0xb5b2:	je	0xb5d0


0xb5b4:	cmp	r12, 1
0xb5b8:	jne	0xb605


0xb5ba:	add	rsp, 8
0xb5be:	mov	rax, r13
0xb5c1:	pop	rbx
0xb5c2:	pop	rbp
0xb5c3:	pop	r12
0xb5c5:	pop	r13
0xb5c7:	ret	


0xb605:	mov	rdi, r12
0xb608:	call	0xb250


0xb60d:	test	al, al
0xb60f:	jne	0xb5ba


0xb611:	jmp	0xb5de


0x8b50:	mov	rdx, qword ptr [rsp]
0x8b54:	cmp	byte ptr [rdx], 0
0x8b57:	jne	0x8b20


0x8b59:	cmp	rax, -0x80000000
0x8b5f:	jl	0x8b72


0x8b72:	mov	ebx, 0x80000000
0x8b77:	jmp	0x8b20


0x8b61:	cmp	rax, 0x7fffffff
0x8b67:	mov	ebx, 0x7fffffff
0x8b6c:	cmovle	rbx, rax
0x8b70:	jmp	0x8b20


0xb55d:	jmp	0xb4fd


0xb2a5:	mov	r13d, 1
0xb2ab:	jmp	0xb283


0xb283:	mov	rdi, rbp
0xb286:	call	0xb220


0xa12d:	mov	dword ptr [rbp], r12d
0xa131:	pop	rbx
0xa132:	pop	rbp
0xa133:	pop	r12
0xa135:	ret	


0xb150:	call	0x2740


0x70aa:	cmp	byte ptr [rsp + 0x250], 0
0x70b2:	movzx	r12d, byte ptr [rsp + 0x289]
0x70bb:	je	0x7248


0x7248:	mov	rsi, qword ptr [rsp + 0x278]
0x7250:	mov	rcx, qword ptr [rsp + 0x258]
0x7258:	mov	rdx, qword ptr [rsp + 0x280]
0x7260:	add	rdx, qword ptr [rsp + 0x268]
0x7268:	mov	rax, rsi
0x726b:	or	rax, rcx
0x726e:	or	rax, qword ptr [rsp + 0x260]
0x7276:	or	rax, qword ptr [rsp + 0x270]
0x727e:	or	rax, rdx
0x7281:	cmp	rax, 1
0x7285:	jle	0x73c9


0x70c1:	mov	rax, qword ptr [rsp + 0x28]
0x70c6:	movdqu	xmm0, xmmword ptr [rsp + 0x208]
0x70cf:	movups	xmmword ptr [rax], xmm0
0x70d2:	test	r12b, r12b
0x70d5:	je	0x7393


0x728b:	test	r12b, r12b
0x728e:	je	0x6d9b


0x7294:	cmp	rsi, 1
0x7298:	jg	0x733b


0x729e:	cmp	rcx, 1
0x72a2:	jg	0x7328


0x733b:	lea	rdi, [rip + 0x94a6]
0x7342:	xor	eax, eax
0x7344:	call	0x42c0


0x72a8:	cmp	qword ptr [rsp + 0x260], 1
0x72b1:	jg	0x7318


0x7328:	lea	rdi, [rip + 0x94e1]
0x732f:	xor	eax, eax
0x7331:	call	0x42c0


0x72b3:	cmp	qword ptr [rsp + 0x270], 1
0x72bc:	jg	0x7308


0x7318:	lea	rdi, [rip + 0x9519]
0x731f:	xor	eax, eax
0x7321:	call	0x42c0


0x72be:	mov	rax, qword ptr [rsp + 0x280]
0x72c6:	add	rax, qword ptr [rsp + 0x268]
0x72ce:	cmp	rax, 1
0x72d2:	jle	0x6d9b


0x7308:	lea	rdi, [rip + 0x9551]
0x730f:	xor	eax, eax
0x7311:	call	0x42c0


0x72d8:	lea	rdi, [rip + 0x95b1]
0x72df:	xor	eax, eax
0x72e1:	call	0x42c0


0x72e6:	jmp	0x6d9b


0x7316:	jmp	0x72be


0x7326:	jmp	0x72b3


0x7336:	jmp	0x72a8


0x7349:	mov	rcx, qword ptr [rsp + 0x258]
0x7351:	jmp	0x729e


0x4c16:	jmp	0x49da


0x4b2c:	jmp	0x4b58


0x4b95:	mov	rax, qword ptr [rsp + 0x68]
0x4b9a:	xor	rax, qword ptr fs:[0x28]
0x4ba3:	jne	0x4d42


0x4ba9:	add	rsp, 0x78
0x4bad:	pop	rbx
0x4bae:	pop	rbp
0x4baf:	pop	r12
0x4bb1:	pop	r13
0x4bb3:	ret	


0x4d42:	call	0x2830


0x4ca0:	jmp	0x4a4e


0xae7a:	lea	rsi, [rip + 0x6c2c]
0xae81:	mov	edx, 5
0xae86:	xor	edi, edi
0xae88:	call	0x27f0


0xae8d:	lea	rcx, [rip + 0x5044]
0xae94:	lea	rdx, [rip + 0x491c]
0xae9b:	mov	rsi, rax
0xae9e:	mov	edi, 1
0xaea3:	xor	eax, eax
0xaea5:	call	0x2a40


0xaeaa:	mov	rbx, qword ptr [rip + 0x20a1f7]
0xaeb1:	lea	rsi, [rip + 0x6e28]
0xaeb8:	xor	edi, edi
0xaeba:	mov	edx, 5
0xaebf:	call	0x27f0


0xaec4:	mov	rsi, rbx
0xaec7:	mov	rdi, rax
0xaeca:	pop	rbx
0xaecb:	jmp	0x2930


0x370d:	mov	rbx, qword ptr [rip + 0x211994]
0x3714:	lea	rsi, [rip + 0xc25d]
0x371b:	mov	edx, 5
0x3720:	xor	edi, edi
0x3722:	call	0x27f0


0x3727:	mov	rsi, rbx
0x372a:	mov	rdi, rax
0x372d:	call	0x2930


0x3732:	mov	rbx, qword ptr [rip + 0x21196f]
0x3739:	lea	rsi, [rip + 0xc360]
0x3740:	mov	edx, 5
0x3745:	xor	edi, edi
0x3747:	call	0x27f0


0x374c:	mov	rsi, rbx
0x374f:	mov	rdi, rax
0x3752:	call	0x2930


0x3757:	mov	rbx, qword ptr [rip + 0x21194a]
0x375e:	lea	rsi, [rip + 0xc38b]
0x3765:	mov	edx, 5
0x376a:	xor	edi, edi
0x376c:	call	0x27f0


0x3771:	mov	rsi, rbx
0x3774:	mov	rdi, rax
0x3777:	call	0x2930


0x377c:	mov	rbx, qword ptr [rip + 0x211925]
0x3783:	lea	rsi, [rip + 0xc43e]
0x378a:	mov	edx, 5
0x378f:	xor	edi, edi
0x3791:	call	0x27f0


0x3796:	mov	rsi, rbx
0x3799:	mov	rdi, rax
0x379c:	call	0x2930


0x37a1:	mov	rbx, qword ptr [rip + 0x211900]
0x37a8:	lea	rsi, [rip + 0xc521]
0x37af:	mov	edx, 5
0x37b4:	xor	edi, edi
0x37b6:	call	0x27f0


0x37bb:	mov	rsi, rbx
0x37be:	mov	rdi, rax
0x37c1:	call	0x2930


0x37c6:	mov	rbx, qword ptr [rip + 0x2118db]
0x37cd:	lea	rsi, [rip + 0xc654]
0x37d4:	mov	edx, 5
0x37d9:	xor	edi, edi
0x37db:	call	0x27f0


0x37e0:	mov	rsi, rbx
0x37e3:	mov	rdi, rax
0x37e6:	call	0x2930


0x37eb:	mov	rbx, qword ptr [rip + 0x2118b6]
0x37f2:	lea	rsi, [rip + 0xc65f]
0x37f9:	mov	edx, 5
0x37fe:	xor	edi, edi
0x3800:	call	0x27f0


0x3805:	mov	rsi, rbx
0x3808:	mov	rdi, rax
0x380b:	call	0x2930


0x3810:	mov	rbx, qword ptr [rip + 0x211891]
0x3817:	lea	rsi, [rip + 0xc672]
0x381e:	mov	edx, 5
0x3823:	xor	edi, edi
0x3825:	call	0x27f0


0x382a:	mov	rsi, rbx
0x382d:	mov	rdi, rax
0x3830:	lea	rbx, [rip + 0xbf04]
0x3837:	call	0x2930


0x383c:	lea	rax, [rip + 0xbefe]
0x3843:	lea	rcx, [rip + 0xbf38]
0x384a:	mov	qword ptr [rsp + 0x60], 0
0x3853:	mov	qword ptr [rsp + 0x68], 0
0x385c:	mov	rdx, rsp
0x385f:	mov	qword ptr [rsp], rax
0x3863:	lea	rax, [rip + 0xbed9]
0x386a:	mov	qword ptr [rsp + 0x30], rcx
0x386f:	lea	rcx, [rip + 0xbf16]
0x3876:	mov	qword ptr [rsp + 8], rax
0x387b:	lea	rax, [rip + 0xbf39]
0x3882:	mov	qword ptr [rsp + 0x40], rcx
0x3887:	lea	rcx, [rip + 0xbf08]
0x388e:	mov	qword ptr [rsp + 0x10], rax
0x3893:	lea	rax, [rip + 0xbeb9]
0x389a:	mov	qword ptr [rsp + 0x50], rcx
0x389f:	mov	qword ptr [rsp + 0x18], rax
0x38a4:	lea	rax, [rip + 0xbebe]
0x38ab:	mov	qword ptr [rsp + 0x20], rax
0x38b0:	lea	rax, [rip + 0xbebc]
0x38b7:	mov	qword ptr [rsp + 0x28], rax
0x38bc:	mov	qword ptr [rsp + 0x38], rax
0x38c1:	mov	qword ptr [rsp + 0x48], rax
0x38c6:	mov	qword ptr [rsp + 0x58], rax
0x38cb:	nop	dword ptr [rax + rax]
0x38d0:	add	rdx, 0x10
0x38d4:	mov	rdi, qword ptr [rdx]
0x38d7:	test	rdi, rdi
0x38da:	je	0x38ef


0x38ef:	mov	r12, qword ptr [rdx + 8]
0x38f3:	xor	edi, edi
0x38f5:	mov	edx, 5
0x38fa:	lea	rsi, [rip + 0xbe9f]
0x3901:	test	r12, r12
0x3904:	je	0x39cb


0x38dc:	mov	ecx, 6
0x38e1:	mov	rsi, rbx
0x38e4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x39cb:	call	0x27f0


0x390a:	call	0x27f0


0x38e4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x38e6:	seta	al
0x38e9:	sbb	al, 0
0x38eb:	test	al, al
0x38ed:	jne	0x38d0


0x38d0:	add	rdx, 0x10
0x38d4:	mov	rdi, qword ptr [rdx]
0x38d7:	test	rdi, rdi
0x38da:	je	0x38ef


0x390f:	lea	rcx, [rip + 0xc5c2]
0x3916:	lea	rdx, [rip + 0xbe9a]
0x391d:	mov	rsi, rax
0x3920:	mov	edi, 1
0x3925:	xor	eax, eax
0x3927:	call	0x2a40


0x392c:	xor	esi, esi
0x392e:	mov	edi, 5
0x3933:	call	0x2a30


0x3938:	test	rax, rax
0x393b:	je	0x3959


0x3959:	lea	rsi, [rip + 0xbe69]
0x3960:	xor	edi, edi
0x3962:	mov	edx, 5
0x3967:	call	0x27f0


0x393d:	lea	rsi, [rip + 0xbe81]
0x3944:	mov	edx, 3
0x3949:	mov	rdi, rax
0x394c:	call	0x2760


0x396c:	lea	rcx, [rip + 0xbdc8]
0x3973:	lea	rdx, [rip + 0xc55e]
0x397a:	mov	rsi, rax
0x397d:	mov	edi, 1
0x3982:	xor	eax, eax
0x3984:	call	0x2a40


0x3989:	cmp	r12, rbx
0x398c:	lea	rcx, [rip + 0xbdca]
0x3993:	lea	rbx, [rip + 0xc9dc]
0x399a:	cmove	rbx, rcx
0x399e:	lea	rsi, [rip + 0xc5a3]
0x39a5:	xor	edi, edi
0x39a7:	mov	edx, 5
0x39ac:	call	0x27f0


0x39b1:	mov	rcx, rbx
0x39b4:	mov	rsi, rax
0x39b7:	mov	rdx, r12
0x39ba:	mov	edi, 1
0x39bf:	xor	eax, eax
0x39c1:	call	0x2a40


0x39c6:	jmp	0x36e6


0x39d0:	lea	rcx, [rip + 0xc501]
0x39d7:	lea	rdx, [rip + 0xbdd9]
0x39de:	mov	rsi, rax
0x39e1:	mov	edi, 1
0x39e6:	xor	eax, eax
0x39e8:	call	0x2a40


0x39ed:	xor	esi, esi
0x39ef:	mov	edi, 5
0x39f4:	call	0x2a30


0x39f9:	test	rax, rax
0x39fc:	je	0x3a16


0x3a16:	lea	rsi, [rip + 0xbdac]
0x3a1d:	mov	edx, 5
0x3a22:	xor	edi, edi
0x3a24:	lea	r12, [rip + 0xbd10]
0x3a2b:	lea	rbx, [rip + 0xbd2b]
0x3a32:	call	0x27f0


0x39fe:	lea	rsi, [rip + 0xbdc0]
0x3a05:	mov	edx, 3
0x3a0a:	mov	rdi, rax
0x3a0d:	call	0x2760


0x3a37:	lea	rcx, [rip + 0xbcfd]
0x3a3e:	lea	rdx, [rip + 0xc493]
0x3a45:	mov	rsi, rax
0x3a48:	mov	edi, 1
0x3a4d:	xor	eax, eax
0x3a4f:	call	0x2a40


0x3a54:	jmp	0x399e


0x399e:	lea	rsi, [rip + 0xc5a3]
0x39a5:	xor	edi, edi
0x39a7:	mov	edx, 5
0x39ac:	call	0x27f0


0x3c7c:	mov	r15, qword ptr [r14]
0x3c7f:	test	r15, r15
0x3c82:	je	0x3d18


0x3d18:	mov	rdi, qword ptr [rip + 0x2113c1]
0x3d1f:	mov	rax, qword ptr [rdi + 0x28]
0x3d23:	cmp	rax, qword ptr [rdi + 0x30]
0x3d27:	jae	0x3d48


0x3c88:	xor	r13d, r13d
0x3c8b:	xor	ebx, ebx
0x3c8d:	jmp	0x3cc8


0x3d29:	lea	rdx, [rax + 1]
0x3d2d:	mov	qword ptr [rdi + 0x28], rdx
0x3d31:	mov	byte ptr [rax], 0xa
0x3d34:	add	rsp, 8
0x3d38:	pop	rbx
0x3d39:	pop	rbp
0x3d3a:	pop	r12
0x3d3c:	pop	r13
0x3d3e:	pop	r14
0x3d40:	pop	r15
0x3d42:	ret	


0x3d48:	add	rsp, 8
0x3d4c:	mov	esi, 0xa
0x3d51:	pop	rbx
0x3d52:	pop	rbp
0x3d53:	pop	r12
0x3d55:	pop	r13
0x3d57:	pop	r14
0x3d59:	pop	r15
0x3d5b:	jmp	0x2890


0x3cc8:	test	rbx, rbx
0x3ccb:	je	0x3c90


0x2890:	jmp	qword ptr [rip + 0x2125e2]


0x3c90:	mov	rdi, r15
0x3c93:	add	rbx, 1
0x3c97:	mov	r13, rbp
0x3c9a:	call	0xa890


0x3ccd:	mov	rdx, r12
0x3cd0:	mov	rsi, rbp
0x3cd3:	mov	rdi, r13
0x3cd6:	call	0x2920




0x3cdb:	test	eax, eax
0x3cdd:	jne	0x3c90


0x3cdf:	mov	rdi, r15
0x3ce2:	add	rbx, 1
0x3ce6:	add	rbp, r12
0x3ce9:	call	0xa890


0xa93c:	cmp	r12, 9
0xa940:	ja	0xac80


0xa946:	lea	rdx, [rip + 0x73db]
0xa94d:	movsxd	rax, dword ptr [rdx + r12*4]
0xa951:	add	rax, rdx
0xa954:	jmp	rax


0xac80:	mov	r10, qword ptr [rbx + 0x40]
0xac84:	mov	r9, qword ptr [rbx + 0x38]
0xac88:	mov	edx, 5
0xac8d:	mov	rax, qword ptr [rbx + 0x10]
0xac91:	mov	r8, qword ptr [rbx + 8]
0xac95:	lea	rsi, [rip + 0x7004]
0xac9c:	mov	r13, qword ptr [rbx + 0x30]
0xaca0:	mov	r12, qword ptr [rbx + 0x28]
0xaca4:	mov	r15, qword ptr [rbx + 0x20]
0xaca8:	mov	r14, qword ptr [rbx + 0x18]
0xacac:	mov	qword ptr [rsp + 0x18], r10
0xacb1:	mov	qword ptr [rsp + 0x10], r9
0xacb6:	mov	qword ptr [rsp], rax
0xacba:	mov	qword ptr [rsp + 8], r8
0xacbf:	mov	rbx, qword ptr [rbx]
0xacc2:	jmp	0xaa52


0xaa52:	xor	edi, edi
0xaa54:	call	0x27f0


0xaa59:	mov	r10, qword ptr [rsp + 0x18]
0xaa5e:	push	r10
0xaa60:	jmp	0xa9a4


0xa9a4:	mov	r9, qword ptr [rsp + 0x18]
0xa9a9:	mov	rdx, rax
0xa9ac:	mov	rcx, rbx
0xa9af:	mov	esi, 1
0xa9b4:	mov	rdi, rbp
0xa9b7:	xor	eax, eax
0xa9b9:	push	r9
0xa9bb:	push	r13
0xa9bd:	push	r12
0xa9bf:	push	r15
0xa9c1:	push	r14
0xa9c3:	mov	r9, qword ptr [rsp + 0x30]
0xa9c8:	mov	r8, qword ptr [rsp + 0x38]
0xa9cd:	call	0x2af0


0xa9d2:	add	rsp, 0x30
0xa9d6:	add	rsp, 0x28
0xa9da:	pop	rbx
0xa9db:	pop	rbp
0xa9dc:	pop	r12
0xa9de:	pop	r13
0xa9e0:	pop	r14
0xa9e2:	pop	r15
0xa9e4:	ret	


0xb660:	cmp	rax, -1
0xb664:	mov	qword ptr [rsp + 8], rax
0xb669:	je	0xb6c0


0xb6c0:	lea	rsi, [rsp + 0x10]
0xb6c5:	lea	rdi, [rsp + 8]
0xb6ca:	call	0x2770


0xb66b:	mov	rsi, rbx
0xb66e:	mov	rdi, rbp
0xb671:	call	0xb340


0xb676:	test	al, al
0xb678:	jne	0xb683


0xb67a:	mov	qword ptr [rsp + 8], -1
0xb683:	cmp	r12, 1
0xb687:	je	0xb699


0xb683:	cmp	r12, 1
0xb687:	je	0xb699


0xb699:	mov	rax, qword ptr [rsp + 8]
0xb69e:	mov	rcx, qword ptr [rsp + 0x48]
0xb6a3:	xor	rcx, qword ptr fs:[0x28]
0xb6ac:	jne	0xb75c


0xb689:	mov	rdi, r12
0xb68c:	call	0xb250


0xb691:	test	al, al
0xb693:	je	0xb750


0xb6cf:	test	rax, rax
0xb6d2:	je	0xb683


0xb6d4:	mov	eax, dword ptr [rbx]
0xb6d6:	mov	edx, dword ptr [rbx + 4]
0xb6d9:	xor	eax, dword ptr [rsp + 0x10]
0xb6dd:	xor	edx, dword ptr [rsp + 0x14]
0xb6e1:	mov	ecx, dword ptr [rsp + 0x30]
0xb6e5:	or	eax, edx
0xb6e7:	mov	edx, dword ptr [rbx + 8]
0xb6ea:	xor	edx, dword ptr [rsp + 0x18]
0xb6ee:	or	eax, edx
0xb6f0:	mov	edx, dword ptr [rbx + 0xc]
0xb6f3:	xor	edx, dword ptr [rsp + 0x1c]
0xb6f7:	or	eax, edx
0xb6f9:	mov	edx, dword ptr [rbx + 0x10]
0xb6fc:	xor	edx, dword ptr [rsp + 0x20]
0xb700:	or	eax, edx
0xb702:	mov	edx, dword ptr [rbx + 0x14]
0xb705:	xor	edx, dword ptr [rsp + 0x24]
0xb709:	or	eax, edx
0xb70b:	mov	edx, dword ptr [rbx + 0x20]
0xb70e:	test	edx, edx
0xb710:	sete	dil
0xb714:	test	ecx, ecx
0xb716:	sete	sil
0xb71a:	cmp	dil, sil
0xb71d:	je	0xb72b


0xb72b:	test	eax, eax
0xb72d:	je	0xb66b


0xb71f:	test	edx, edx
0xb721:	js	0xb72b


0xb733:	jmp	0xb683


0xb723:	test	ecx, ecx
0xb725:	jns	0xb683


0x89cd:	mov	ecx, dword ptr [rsp + 0x68]
0x89d1:	mov	r13, rax
0x89d4:	xor	eax, eax
0x89d6:	test	ecx, ecx
0x89d8:	js	0x8864


0x8864:	mov	rsi, qword ptr [rsp + 0xc8]
0x886c:	xor	rsi, qword ptr fs:[0x28]
0x8875:	jne	0x8adf


0x89de:	mov	edx, dword ptr [rsp + 0x24]
0x89e2:	mov	ecx, dword ptr [rsp + 0x20]
0x89e6:	xor	edx, dword ptr [rsp + 0x64]
0x89ea:	xor	ecx, dword ptr [rsp + 0x60]
0x89ee:	mov	esi, dword ptr [rsp + 0x10]
0x89f2:	or	edx, ecx
0x89f4:	mov	ecx, dword ptr [rsp + 0x1c]
0x89f8:	xor	ecx, dword ptr [rsp + 0x5c]
0x89fc:	or	edx, ecx
0x89fe:	mov	ecx, dword ptr [rsp + 0x18]
0x8a02:	xor	ecx, dword ptr [rsp + 0x58]
0x8a06:	or	edx, ecx
0x8a08:	mov	ecx, dword ptr [rsp + 0x14]
0x8a0c:	xor	ecx, dword ptr [rsp + 0x54]
0x8a10:	or	edx, ecx
0x8a12:	mov	ecx, dword ptr [rsp + 0x50]
0x8a16:	xor	ecx, esi
0x8a18:	or	edx, ecx
0x8a1a:	je	0x8a60


0x8a60:	mov	qword ptr [r12], r13
0x8a64:	mov	eax, 1
0x8a69:	jmp	0x8864


0x8a1c:	cmp	esi, 0x3c
0x8a1f:	jne	0x8864


0x8a25:	lea	r14, [rsp + 0xb0]
0x8a2d:	mov	edx, 0x10
0x8a32:	mov	rsi, rbx
0x8a35:	mov	rdi, r14
0x8a38:	call	0x29b0


0x29b0:	jmp	qword ptr [rip + 0x212552]




0x884e:	test	rax, rax
0x8851:	mov	r14, rax
0x8854:	je	0x8893


0x8893:	lea	rax, [r13 - 8]
0x8897:	cmp	rax, 4
0x889b:	ja	0x8862


0x8856:	sub	rax, rbx
0x8859:	sub	r13, rax
0x885c:	cmp	r13, 3
0x8860:	je	0x8890


0x8890:	mov	r13, rax
0x8893:	lea	rax, [r13 - 8]
0x8897:	cmp	rax, 4
0x889b:	ja	0x8862


0x3f1d:	mov	r12d, eax
0x3f20:	call	0x2750


0x3f25:	mov	r13d, dword ptr [rax]
0x3f28:	mov	rbp, rax
0x3f2b:	mov	edi, ebx
0x3f2d:	call	0x2900


0x2900:	jmp	qword ptr [rip + 0x2125aa]




0xd5f7:	mov	rdi, rbx
0xd5fa:	pop	rbx
0xd5fb:	jmp	0x29e0


0x3a12:	test	eax, eax
0x3a14:	jne	0x3a59


0x3a59:	lea	r12, [rip + 0xbcdb]
0x3a60:	mov	r13, qword ptr [rip + 0x211641]
0x3a67:	lea	rsi, [rip + 0xc492]
0x3a6e:	xor	edi, edi
0x3a70:	mov	edx, 5
0x3a75:	call	0x27f0


0x3a7a:	mov	rsi, r13
0x3a7d:	mov	rdi, rax
0x3a80:	call	0x2930


0x3a85:	jmp	0x3959


0x3951:	test	eax, eax
0x3953:	jne	0x3a60


0x3a60:	mov	r13, qword ptr [rip + 0x211641]
0x3a67:	lea	rsi, [rip + 0xc492]
0x3a6e:	xor	edi, edi
0x3a70:	mov	edx, 5
0x3a75:	call	0x27f0


0x3b47:	test	eax, eax
0x3b49:	jne	0x3b27


0x3b4b:	mov	rdi, r14
0x3b4e:	call	0x2810


0x3b27:	add	rbx, 1
0x3b2b:	add	rbp, r13
0x3b2e:	mov	r14, qword ptr [r15 + rbx*8]
0x3b32:	test	r14, r14
0x3b35:	je	0x3b78


0x3b78:	cmp	byte ptr [rsp + 0x17], 0
0x3b7d:	mov	rax, -2
0x3b84:	cmove	rax, qword ptr [rsp]
0x3b89:	mov	qword ptr [rsp], rax
0x3b8d:	mov	rax, qword ptr [rsp]
0x3b91:	add	rsp, 0x28
0x3b95:	pop	rbx
0x3b96:	pop	rbp
0x3b97:	pop	r12
0x3b99:	pop	r13
0x3b9b:	pop	r14
0x3b9d:	pop	r15
0x3b9f:	ret	


0x3b53:	cmp	rax, r12
0x3b56:	je	0x3bb0


0x3bb0:	mov	qword ptr [rsp], rbx
0x3bb4:	jmp	0x3b8d


0x3b58:	cmp	qword ptr [rsp], -1
0x3b5d:	jne	0x3af0


0x3b5f:	mov	qword ptr [rsp], rbx
0x3b63:	add	rbx, 1
0x3b67:	add	rbp, r13
0x3b6a:	mov	r14, qword ptr [r15 + rbx*8]
0x3b6e:	test	r14, r14
0x3b71:	jne	0x3b37


0x3af0:	mov	rax, qword ptr [rsp + 0x18]
0x3af5:	test	rax, rax
0x3af8:	je	0x3ba0


0x3ba0:	mov	byte ptr [rsp + 0x17], 1
0x3ba5:	jmp	0x3b27


0x3afe:	mov	rdi, qword ptr [rsp]
0x3b02:	mov	rdx, r13
0x3b05:	mov	rsi, rbp
0x3b08:	imul	rdi, r13
0x3b0c:	add	rdi, rax
0x3b0f:	call	0x2920


0x3b14:	test	eax, eax
0x3b16:	movzx	eax, byte ptr [rsp + 0x17]
0x3b1b:	mov	ecx, 1
0x3b20:	cmovne	eax, ecx
0x3b23:	mov	byte ptr [rsp + 0x17], al
0x3b27:	add	rbx, 1
0x3b2b:	add	rbp, r13
0x3b2e:	mov	r14, qword ptr [r15 + rbx*8]
0x3b32:	test	r14, r14
0x3b35:	je	0x3b78


0x6686:	test	eax, eax
0x6688:	sete	al
0x668b:	test	al, al
0x668d:	jne	0x67fa


0x878b:	test	rax, rax
0x878e:	je	0x879a


0x8790:	mov	eax, dword ptr [rax + 0x14]
0x8793:	mov	dword ptr [rbx], eax
0x8795:	mov	eax, 1
0x879a:	mov	rdi, qword ptr [rsp + 8]
0x879f:	xor	rdi, qword ptr fs:[0x28]
0x87a8:	jne	0x87ec


0xae16:	mov	rax, qword ptr [rsp + 0x78]
0xae1b:	xor	rax, qword ptr fs:[0x28]
0xae24:	jne	0xae30


0xae26:	add	rsp, 0xb8
0xae2d:	pop	rbx
0xae2e:	pop	rbp
0xae2f:	ret	


0xae30:	call	0x2830


0xad40:	mov	rax, qword ptr [rsp + 0x58]
0xad45:	xor	rax, qword ptr fs:[0x28]
0xad4e:	jne	0xad55


0xad50:	add	rsp, 0x68
0xad54:	ret	


0xad55:	call	0x2830


0x3f32:	mov	ebx, r12d
0x3f35:	mov	dword ptr [rbp], r13d
0x3f39:	add	rsp, 8
0x3f3d:	mov	eax, ebx
0x3f3f:	pop	rbx
0x3f40:	pop	rbp
0x3f41:	pop	r12
0x3f43:	pop	r13
0x3f45:	ret	


0x8a3d:	mov	edx, 0x3935
0x8a42:	lea	rdi, [rsp + 8]
0x8a47:	mov	byte ptr [rax], 0
0x8a4a:	mov	word ptr [rax - 2], dx
0x8a4e:	mov	rsi, r14
0x8a51:	mov	edx, ebp
0x8a53:	call	0x8800


0x8a58:	test	al, al
0x8a5a:	je	0x8864


0x2c2f:	lea	rdi, [rip + 0x120a]
0x2c36:	call	0xf700


0x2c3b:	mov	dword ptr [rip + 0x2124ff], 0
0x2c45:	mov	byte ptr [rip + 0x2124f6], 0
0x2c4c:	mov	byte ptr [rip + 0x2124f0], 0
0x2c53:	nop	dword ptr [rax + rax]
0x2c58:	lea	rdx, [rip + 0xcbe6]
0x2c5f:	xor	r8d, r8d
0x2c62:	mov	rcx, r13
0x2c65:	mov	rsi, rbp
0x2c68:	mov	edi, r12d
0x2c6b:	call	0x2840


0x2840:	jmp	qword ptr [rip + 0x21260a]




0xd564:	test	eax, eax
0xd566:	je	0xd5a4


0xd568:	call	0x2750


0xd56d:	mov	r12d, dword ptr [rax]
0xd570:	mov	rdi, rbx
0xd573:	mov	rbp, rax
0xd576:	call	0x27d0


0xd57b:	test	r12d, r12d
0xd57e:	jne	0xd5b0


0xd580:	pop	rbx
0xd581:	pop	rbp
0xd582:	pop	r12
0xd584:	ret	


0xd5b0:	mov	dword ptr [rbp], r12d
0xd5b4:	mov	eax, 0xffffffff
0xd5b9:	jmp	0xd580


0xb88a:	and	ebx, 0x20
0xb88d:	test	ebx, ebx
0xb88f:	jne	0xb8a8


0xb891:	test	eax, eax
0xb893:	je	0xb89f


0xb8a8:	test	eax, eax
0xb8aa:	jne	0xb8c8


0xb89f:	pop	rbx
0xb8a0:	pop	rbp
0xb8a1:	pop	r12
0xb8a3:	ret	


0xb895:	test	r12, r12
0xb898:	mov	eax, 0xffffffff
0xb89d:	je	0xb8d8


0xb8ac:	call	0x2750


0xb8c8:	pop	rbx
0xb8c9:	mov	eax, 0xffffffff
0xb8ce:	pop	rbp
0xb8cf:	pop	r12
0xb8d1:	ret	


0xb8d8:	call	0x2750


0xb8dd:	cmp	dword ptr [rax], 9
0xb8e0:	pop	rbx
0xb8e1:	pop	rbp
0xb8e2:	pop	r12
0xb8e4:	setne	al
0xb8e7:	movzx	eax, al
0xb8ea:	neg	eax
0xb8ec:	ret	


0xb8b1:	mov	dword ptr [rax], 0
0xb8b7:	mov	eax, 0xffffffff
0xb8bc:	pop	rbx
0xb8bd:	pop	rbp
0xb8be:	pop	r12
0xb8c0:	ret	


0x3e52:	test	eax, eax
0x3e54:	je	0x3e6c


0x3e6c:	mov	rdi, qword ptr [rip + 0x21126d]
0x3e73:	call	0xb870


0x3e56:	call	0x2750


0x3e5b:	cmp	byte ptr [rip + 0x2112e6], 0
0x3e62:	mov	rbx, rax
0x3e65:	je	0x3e83


0x3e83:	lea	rsi, [rip + 0xc219]
0x3e8a:	xor	edi, edi
0x3e8c:	mov	edx, 5
0x3e91:	call	0x27f0


0x3e67:	cmp	dword ptr [rax], 0x20
0x3e6a:	jne	0x3e83


0x3e96:	mov	rdi, qword ptr [rip + 0x2112b3]
0x3e9d:	mov	rbp, rax
0x3ea0:	test	rdi, rdi
0x3ea3:	je	0x3ecd


0x3ecd:	mov	esi, dword ptr [rbx]
0x3ecf:	lea	rdx, [rip + 0xc1ca]
0x3ed6:	mov	rcx, rax
0x3ed9:	xor	edi, edi
0x3edb:	xor	eax, eax
0x3edd:	call	0x2a70


0x3ea5:	call	0xa690


0x3ee2:	jmp	0x3ec2


0x3ec2:	mov	edi, dword ptr [rip + 0x211158]
0x3ec8:	call	0x2780


0x2780:	jmp	qword ptr [rip + 0x21266a]




0x3e78:	test	eax, eax
0x3e7a:	jne	0x3ec2


0x3e7c:	add	rsp, 8
0x3e80:	pop	rbx
0x3e81:	pop	rbp
0x3e82:	ret	


0x2c70:	cmp	eax, -1
0x2c73:	mov	ebx, eax
0x2c75:	je	0x2e32


0x2e32:	cmp	dword ptr [rip + 0x21230b], 0
0x2e39:	jne	0x2e45


0x2c7b:	cmp	ebx, 0x66
0x2c7e:	je	0x2c58


0x2e3b:	mov	dword ptr [rip + 0x2122ff], 3
0x2e45:	test	r14b, r14b
0x2e48:	movzx	eax, byte ptr [rip + 0x2122f3]
0x2e4f:	je	0x3076


0x2e45:	test	r14b, r14b
0x2e48:	movzx	eax, byte ptr [rip + 0x2122f3]
0x2e4f:	je	0x3076


0x2c58:	lea	rdx, [rip + 0xcbe6]
0x2c5f:	xor	r8d, r8d
0x2c62:	mov	rcx, r13
0x2c65:	mov	rsi, rbp
0x2c68:	mov	edi, r12d
0x2c6b:	call	0x2840


0x2c80:	jle	0x2cb0


0x3076:	test	al, al
0x3078:	jne	0x321b


0x2e55:	test	r15, r15
0x2e58:	jne	0x3516


0x2cb0:	cmp	ebx, 0x61
0x2cb3:	je	0x2de0


0x2c82:	cmp	ebx, 0x72
0x2c85:	je	0x2db0


0x307e:	test	r15, r15
0x3081:	je	0x3126


0x321b:	cmp	byte ptr [rip + 0x211f1f], 0
0x3222:	mov	r13, qword ptr [rip + 0x211ed7]
0x3229:	lea	rdx, [rsp + 0x50]
0x322e:	mov	edi, 1
0x3233:	mov	rsi, r13
0x3236:	je	0x331b


0x2e5e:	test	al, al
0x2e60:	jne	0x3516


0x3516:	mov	edx, 5
0x351b:	lea	rsi, [rip + 0xca5e]
0x3522:	jmp	0x33c1


0x2de0:	or	dword ptr [rip + 0x21235d], 1
0x2de7:	jmp	0x2c58


0x2cb9:	jle	0x2d38


0x2db0:	mov	rax, qword ptr [rip + 0x212301]
0x2db7:	mov	byte ptr [rip + 0x212384], 1
0x2dbe:	mov	qword ptr [rip + 0x21233b], rax
0x2dc5:	jmp	0x2c58


0x2c8b:	jg	0x2ce0


0x3126:	mov	eax, r12d
0x3129:	sub	eax, dword ptr [rip + 0x211f81]
0x312f:	sub	eax, 1
0x3132:	jg	0x3336


0x3087:	lea	r13, [rsp + 0x20]
0x308c:	mov	rdi, r13
0x308f:	call	0x3fe0


0x331b:	call	0x29c0


0x323c:	call	0x2820


0x2e66:	mov	eax, dword ptr [rip + 0x212244]
0x2e6c:	cmp	eax, r12d
0x2e6f:	je	0x33b5


0x33c1:	xor	edi, edi
0x33c3:	call	0x27f0


0x2d38:	cmp	ebx, 0xffffff7d
0x2d3e:	jne	0x33a6


0x2cbb:	cmp	ebx, 0x63
0x2cbe:	je	0x2dd0


0x2c8d:	cmp	ebx, 0x68
0x2c90:	je	0x2da0


0x2ce0:	cmp	ebx, 0x74
0x2ce3:	je	0x2df0


0x3138:	cmp	dword ptr [rip + 0x212005], 3
0x313f:	je	0x332a


0x3336:	call	0x8af0


0x29c0:	jmp	qword ptr [rip + 0x21254a]


0x2820:	jmp	qword ptr [rip + 0x21261a]


0x33b5:	lea	rsi, [rip + 0xc4a5]
0x33bc:	mov	edx, 5
0x33c1:	xor	edi, edi
0x33c3:	call	0x27f0


0x2e75:	mov	byte ptr [rsp + 0xc], 1
0x2e7a:	jl	0x2f50


0x2d44:	lea	rax, [rip + 0xcad2]
0x2d4b:	push	0
0x2d4d:	mov	rdi, qword ptr [rip + 0x212354]
0x2d54:	mov	rcx, qword ptr [rip + 0x2122b5]
0x2d5b:	lea	r9, [rip + 0xcaa1]
0x2d62:	lea	r8, [rip + 0xcaa9]
0x2d69:	push	rax
0x2d6a:	lea	rax, [rip + 0xcab8]
0x2d71:	lea	rdx, [rip + 0xca3f]
0x2d78:	lea	rsi, [rip + 0xc9bc]
0x2d7f:	push	rax
0x2d80:	lea	rax, [rip + 0xcab2]
0x2d87:	push	rax
0x2d88:	xor	eax, eax
0x2d8a:	call	0xad70


0x33a6:	cmp	ebx, 0xffffff7e
0x33ac:	jne	0x33d6


0x2dd0:	mov	byte ptr [rip + 0x21236c], 1
0x2dd7:	jmp	0x2c58


0x2cc4:	cmp	ebx, 0x64
0x2cc7:	jne	0x33d6


0x2da0:	mov	byte ptr [rip + 0x21239a], 1
0x2da7:	jmp	0x2c58


0x2c96:	cmp	ebx, 0x6d
0x2c99:	jne	0x33d6


0x2df0:	mov	rsi, qword ptr [rip + 0x2122c1]
0x2df7:	lea	rdi, [rip + 0x212322]
0x2dfe:	mov	edx, 6
0x2e03:	call	0x8800


0x2ce9:	add	ebx, -0x80
0x2cec:	jne	0x33d6


0x332a:	mov	byte ptr [rip + 0x211e0f], 1
0x3331:	jmp	0x2e66


0x3145:	mov	qword ptr [rip + 0x211fd8], 0x3fffffff
0x3150:	mov	qword ptr [rip + 0x211fdd], 0x3fffffff
0x315b:	jmp	0x2e66






0x2f50:	cdqe	
0x2f52:	lea	rdi, [rip + 0xd2e9]
0x2f59:	mov	ecx, 2
0x2f5e:	mov	r13, qword ptr [rbp + rax*8]
0x2f63:	mov	r15d, 1
0x2f69:	mov	rsi, r13
0x2f6c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2e80:	jmp	0x317b


0x33ae:	xor	edi, edi
0x33b0:	call	0x3690


0x33d6:	mov	edi, 1
0x33db:	call	0x3690


0x2ccd:	mov	r15, qword ptr [rip + 0x2123e4]
0x2cd4:	jmp	0x2c58


0x2c9f:	or	dword ptr [rip + 0x21249e], 2
0x2ca6:	jmp	0x2c58


0x2cf2:	mov	r9, qword ptr [rip + 0x21231f]
0x2cf9:	mov	rsi, qword ptr [rip + 0x2123b8]
0x2d00:	lea	rdx, [rip + 0x2113f9]
0x2d07:	lea	rcx, [rip + 0xd322]
0x2d0e:	lea	rdi, [rip + 0xcae7]
0x2d15:	mov	r8d, 4
0x2d1b:	call	0x3d60


0x2f6c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2f6e:	seta	r9b
0x2f72:	sbb	r9b, 0
0x2f76:	movsx	r14d, r9b
0x2f7a:	test	r14d, r14d
0x2f7d:	je	0x2f9b


0x317b:	movzx	r14d, byte ptr [rsp + 0xc]
0x3181:	xor	r14d, 1
0x3185:	mov	rdx, qword ptr [rsp + 0xe8]
0x318d:	xor	rdx, qword ptr fs:[0x28]
0x3196:	movzx	eax, r14b
0x319a:	jne	0x33e0


0x2f9b:	mov	eax, dword ptr [rip + 0x2121a3]
0x2fa1:	cmp	eax, 3
0x2fa4:	je	0x2fc3


0x2f7f:	cmp	byte ptr [rip + 0x2121bd], 0
0x2f86:	jne	0x2f95


0x31a0:	add	rsp, 0xf8
0x31a7:	pop	rbx
0x31a8:	pop	rbp
0x31a9:	pop	r12
0x31ab:	pop	r13
0x31ad:	pop	r14
0x31af:	pop	r15
0x31b1:	ret	


0x33e0:	call	0x2830


0x2fc3:	cmp	byte ptr [rip + 0x212176], 0
0x2fca:	lea	rax, [rip + 0x21214f]
0x2fd1:	mov	ecx, 0
0x2fd6:	cmove	rcx, rax
0x2fda:	cmp	r15d, -1
0x2fde:	sete	r10b
0x2fe2:	and	r10b, byte ptr [rip + 0x212158]
0x2fe9:	jne	0x31b2


0x2fa6:	cmp	eax, 2
0x2fa9:	je	0x316b


0x2f88:	cmp	byte ptr [rip + 0x2121b2], 0
0x2f8f:	je	0x32d4


0x2f95:	mov	r15d, ebx
0x2f98:	xor	r14d, r14d
0x2f9b:	mov	eax, dword ptr [rip + 0x2121a3]
0x2fa1:	cmp	eax, 3
0x2fa4:	je	0x2fc3


0x2fef:	cmp	r15d, 1
0x2ff3:	jne	0x2e85


0x31b2:	mov	rdx, r13
0x31b5:	mov	r8d, 0x100
0x31bb:	mov	esi, 0xffffff9c
0x31c0:	mov	edi, r15d
0x31c3:	call	0x3f50


0x316b:	mov	qword ptr [rip + 0x211fb2], 0x3ffffffe
0x3176:	jmp	0x2fc3


0x2faf:	sub	eax, 1
0x2fb2:	jne	0x33e5


0x32d4:	xor	edi, edi
0x32d6:	mov	ecx, 0x1b6
0x32db:	mov	edx, 0x941
0x32e0:	mov	rsi, r13
0x32e3:	xor	r14d, r14d
0x32e6:	call	0x3ef0


0x2ff9:	xor	r8d, r8d
0x2ffc:	xor	edx, edx
0x2ffe:	mov	esi, 0xffffff9c
0x3003:	mov	edi, 1
0x3008:	call	0x3f50


0x2e85:	xor	r8d, r8d
0x2e88:	mov	rdx, r13
0x2e8b:	mov	esi, 0xffffff9c
0x2e90:	mov	edi, r15d
0x2e93:	mov	byte ptr [rsp + 0x10], r10b
0x2e98:	call	0x3f50


0x2fb8:	mov	qword ptr [rip + 0x212175], 0x3ffffffe
0x2fc3:	cmp	byte ptr [rip + 0x212176], 0
0x2fca:	lea	rax, [rip + 0x21214f]
0x2fd1:	mov	ecx, 0
0x2fd6:	cmove	rcx, rax
0x2fda:	cmp	r15d, -1
0x2fde:	sete	r10b
0x2fe2:	and	r10b, byte ptr [rip + 0x212158]
0x2fe9:	jne	0x31b2


0x33e5:	lea	rcx, [rip + 0xcc34]
0x33ec:	lea	rsi, [rip + 0xc483]
0x33f3:	lea	rdi, [rip + 0xc49a]
0x33fa:	mov	edx, 0x99
0x33ff:	call	0x28d0


0x28d0:	jmp	qword ptr [rip + 0x2125c2]




0x32eb:	cmp	eax, -1
0x32ee:	mov	r15d, eax
0x32f1:	jne	0x2f9b


0x32f7:	call	0x2750


0x32fc:	mov	r14d, dword ptr [rax]
0x32ff:	lea	eax, [r14 - 0x15]
0x3303:	cmp	eax, 1
0x3306:	jbe	0x2f95


0x330c:	cmp	r14d, 1
0x3310:	jne	0x2f9b


0x3316:	jmp	0x2f95


0x2e9d:	test	r15d, r15d
0x2ea0:	mov	edx, eax
0x2ea2:	movzx	r10d, byte ptr [rsp + 0x10]
0x2ea8:	jne	0x2ecc


0x2eaa:	xor	edi, edi
0x2eac:	mov	byte ptr [rsp + 0x18], r10b
0x2eb1:	mov	dword ptr [rsp + 0x10], edx
0x2eb5:	call	0x2900


0x2ecc:	test	edx, edx
0x2ece:	je	0x3160


0x3160:	mov	r10d, 1
0x3166:	jmp	0x2f33


0x2ed4:	test	r14d, r14d
0x2ed7:	jne	0x3039


0x2f33:	mov	eax, dword ptr [rip + 0x212177]
0x2f39:	and	byte ptr [rsp + 0xc], r10b
0x2f3e:	add	eax, 1
0x2f41:	cmp	eax, r12d
0x2f44:	mov	dword ptr [rip + 0x212166], eax
0x2f4a:	jge	0x317b


0x2edd:	call	0x2750


0x3039:	mov	rsi, r13
0x303c:	mov	edi, 4
0x3041:	call	0xa5c0


0x2ee2:	cmp	byte ptr [rip + 0x21225a], 0
0x2ee9:	je	0x2ef4


0x2ef4:	mov	rsi, r13
0x2ef7:	mov	edi, 4
0x2efc:	call	0xa5c0


0x2eeb:	cmp	dword ptr [rax], 2
0x2eee:	je	0x3160


0x2eba:	test	eax, eax
0x2ebc:	mov	edx, dword ptr [rsp + 0x10]
0x2ec0:	movzx	r10d, byte ptr [rsp + 0x18]
0x2ec6:	jne	0x31cf


0x31cf:	mov	rsi, r13
0x31d2:	mov	edi, 4
0x31d7:	mov	byte ptr [rsp + 0x10], r10b
0x31dc:	call	0xa5c0


0x300d:	test	eax, eax
0x300f:	je	0x3160


0x3015:	call	0x2750


0x301a:	cmp	dword ptr [rax], 9
0x301d:	jne	0x2ed4


0x3023:	cmp	byte ptr [rip + 0x212119], 0
0x302a:	jne	0x3160


0x3030:	test	r14d, r14d
0x3033:	je	0x2ef4


0x31c8:	mov	edx, eax
0x31ca:	jmp	0x2ecc


0x2d20:	lea	rdx, [rip + 0xd309]
0x2d27:	mov	eax, dword ptr [rdx + rax*4]
0x2d2a:	or	dword ptr [rip + 0x212414], eax
0x2d30:	jmp	0x2c58


0x2e08:	test	al, al
0x2e0a:	mov	r14d, eax
0x2e0d:	je	0x3404


0x3404:	mov	rdi, qword ptr [rip + 0x211cad]
0x340b:	call	0xa890


0x2e13:	mov	qword ptr [rip + 0x21230a], 0
0x2e1e:	movdqa	xmm0, xmmword ptr [rip + 0x2122fa]
0x2e26:	movaps	xmmword ptr [rip + 0x212303], xmm0
0x2e2d:	jmp	0x2c58


0x2d8f:	add	rsp, 0x20
0x2d93:	xor	edi, edi
0x2d95:	call	0x2ad0


0x333b:	cmp	eax, 0x30daf
0x3340:	jg	0x3138


0x3346:	movsxd	rax, dword ptr [rip + 0x211d63]
0x334d:	lea	rdi, [rip + 0x211dcc]
0x3354:	mov	edx, 9
0x3359:	mov	rsi, qword ptr [rbp + rax*8]
0x335e:	call	0x8800


0x3363:	test	al, al
0x3365:	je	0x3138


0x336b:	mov	qword ptr [rip + 0x211db2], 0
0x3376:	lea	rdi, [rip + 0xc4d4]
0x337d:	movdqa	xmm0, xmmword ptr [rip + 0x211d9b]
0x3385:	movaps	xmmword ptr [rip + 0x211da4], xmm0
0x338c:	call	0x26f0


0x3391:	test	rax, rax
0x3394:	je	0x343a


0x343a:	lea	rdi, [rip + 0x211cdf]
0x3441:	call	0x2730


0x339a:	add	dword ptr [rip + 0x211d0f], 1
0x33a1:	jmp	0x2e66


0x3446:	test	rax, rax
0x3449:	je	0x339a


0x344f:	mov	r10d, dword ptr [rax]
0x3452:	mov	r9d, dword ptr [rax + 4]
0x3456:	lea	rsi, [rip + 0xcb73]
0x345d:	mov	r15d, dword ptr [rax + 8]
0x3461:	mov	r14d, dword ptr [rax + 0xc]
0x3465:	xor	edi, edi
0x3467:	mov	edx, dword ptr [rax + 0x10]
0x346a:	movsxd	r13, dword ptr [rax + 0x14]
0x346e:	movsxd	rax, dword ptr [rip + 0x211c3b]
0x3475:	mov	dword ptr [rsp + 0x1c], r10d
0x347a:	mov	dword ptr [rsp + 0x18], r9d
0x347f:	add	edx, 1
0x3482:	mov	dword ptr [rsp + 0xc], edx
0x3486:	mov	edx, 5
0x348b:	add	r13, 0x76c
0x3492:	mov	rcx, qword ptr [rbp + rax*8]
0x3497:	mov	qword ptr [rsp + 0x10], rcx
0x349c:	call	0x27f0


0x34a1:	mov	r10d, dword ptr [rsp + 0x1c]
0x34a6:	mov	rdx, rax
0x34a9:	mov	r8, r13
0x34ac:	xor	esi, esi
0x34ae:	xor	edi, edi
0x34b0:	xor	eax, eax
0x34b2:	push	r10
0x34b4:	mov	r9d, dword ptr [rsp + 0x20]
0x34b9:	push	r9
0x34bb:	push	r15
0x34bd:	push	r14
0x34bf:	mov	r9d, dword ptr [rsp + 0x2c]
0x34c4:	mov	rcx, qword ptr [rsp + 0x30]
0x34c9:	call	0x2a70


0x34ce:	add	rsp, 0x20
0x34d2:	jmp	0x339a


0x33c8:	xor	esi, esi
0x33ca:	mov	rdx, rax
0x33cd:	xor	edi, edi
0x33cf:	xor	eax, eax
0x33d1:	call	0x2a70


0x3094:	lea	rdi, [rip + 0x212085]
0x309b:	mov	rdx, r13
0x309e:	mov	rsi, r15
0x30a1:	call	0x3640


0x30a6:	cmp	dword ptr [rip + 0x212097], 3
0x30ad:	movdqa	xmm0, xmmword ptr [rip + 0x21206b]
0x30b5:	movaps	xmmword ptr [rip + 0x212074], xmm0
0x30bc:	jne	0x2e66


0x30c2:	mov	rax, qword ptr [rip + 0x212057]
0x30c9:	cmp	rax, qword ptr [rsp + 0x20]
0x30ce:	jne	0x2e66


0x30d4:	mov	rdx, qword ptr [rip + 0x21204d]
0x30db:	cmp	rdx, qword ptr [rsp + 0x28]
0x30e0:	jne	0x2e66


0x30e6:	mov	qword ptr [rsp + 0x38], rdx
0x30eb:	lea	rdi, [rsp + 0x40]
0x30f0:	lea	rdx, [rsp + 0x30]
0x30f5:	xor	rax, 1
0x30f9:	mov	rsi, r15
0x30fc:	mov	qword ptr [rsp + 0x30], rax
0x3101:	call	0x3640


0x3106:	mov	rax, qword ptr [rsp + 0x30]
0x310b:	cmp	qword ptr [rsp + 0x40], rax
0x3110:	jne	0x2e66


0x3116:	mov	rax, qword ptr [rsp + 0x38]
0x311b:	cmp	qword ptr [rsp + 0x48], rax
0x3120:	jne	0x2e66


0x3241:	test	eax, eax
0x3243:	setne	al
0x3246:	test	al, al
0x3248:	jne	0x34d7


0x324e:	mov	rax, qword ptr [rsp + 0x98]
0x3256:	test	r15, r15
0x3259:	mov	qword ptr [rip + 0x211ec0], rax
0x3260:	mov	rax, qword ptr [rsp + 0xa0]
0x3268:	mov	qword ptr [rip + 0x211eb9], rax
0x326f:	mov	rax, qword ptr [rsp + 0xa8]
0x3277:	mov	qword ptr [rip + 0x211eb2], rax
0x327e:	mov	rax, qword ptr [rsp + 0xb0]
0x3286:	mov	qword ptr [rip + 0x211eab], rax
0x328d:	je	0x2e66


0x34d7:	mov	rsi, r13
0x34da:	mov	edi, 4
0x34df:	call	0xa5c0


0x3293:	mov	eax, dword ptr [rip + 0x211eab]
0x3299:	test	al, 1
0x329b:	je	0x32b5


0x32b5:	test	al, 2
0x32b7:	je	0x2e66


0x329d:	lea	rdx, [rip + 0x211e7c]
0x32a4:	mov	rsi, r15
0x32a7:	mov	rdi, rdx
0x32aa:	call	0x3640


0x32bd:	lea	rdx, [rip + 0x211e6c]
0x32c4:	mov	rsi, r15
0x32c7:	mov	rdi, rdx
0x32ca:	call	0x3640


0x32cf:	jmp	0x2e66


0x32af:	mov	eax, dword ptr [rip + 0x211e8f]
0x32b5:	test	al, 2
0x32b7:	je	0x2e66


0x3320:	test	eax, eax
0x3322:	setne	al
0x3325:	jmp	0x3246


0x3246:	test	al, al
0x3248:	jne	0x34d7


0x34e4:	lea	rsi, [rip + 0xcac5]
0x34eb:	mov	edx, 5
0x34f0:	xor	edi, edi
0x34f2:	mov	rbp, rax
0x34f5:	call	0x27f0


0x34fa:	mov	rbx, rax
0x34fd:	call	0x2750


0x3502:	mov	esi, dword ptr [rax]
0x3504:	mov	rcx, rbp
0x3507:	mov	rdx, rbx
0x350a:	mov	edi, 1
0x350f:	xor	eax, eax
0x3511:	call	0x2a70


0x31e1:	lea	rsi, [rip + 0xc6c5]
0x31e8:	mov	edx, 5
0x31ed:	xor	edi, edi
0x31ef:	mov	r14, rax
0x31f2:	call	0x27f0


0x31f7:	mov	r13, rax
0x31fa:	call	0x2750


0x31ff:	mov	esi, dword ptr [rax]
0x3201:	mov	rcx, r14
0x3204:	mov	rdx, r13
0x3207:	xor	edi, edi
0x3209:	xor	eax, eax
0x320b:	call	0x2a70


0x3210:	movzx	r10d, byte ptr [rsp + 0x10]
0x3216:	jmp	0x2f33


0x2f01:	lea	rsi, [rip + 0xc9c8]
0x2f08:	mov	edx, 5
0x2f0d:	xor	edi, edi
0x2f0f:	mov	r14, rax
0x2f12:	call	0x27f0


0x2f17:	mov	r13, rax
0x2f1a:	call	0x2750


0x2f1f:	mov	esi, dword ptr [rax]
0x2f21:	mov	rcx, r14
0x2f24:	mov	rdx, r13
0x2f27:	xor	edi, edi
0x2f29:	xor	eax, eax
0x2f2b:	call	0x2a70


0x2f30:	xor	r10d, r10d
0x2f33:	mov	eax, dword ptr [rip + 0x212177]
0x2f39:	and	byte ptr [rsp + 0xc], r10b
0x2f3e:	add	eax, 1
0x2f41:	cmp	eax, r12d
0x2f44:	mov	dword ptr [rip + 0x212166], eax
0x2f4a:	jge	0x317b


0x3046:	lea	rsi, [rip + 0xc873]
0x304d:	mov	r13, rax
0x3050:	mov	edx, 5
0x3055:	xor	edi, edi
0x3057:	call	0x27f0


0x305c:	mov	rcx, r13
0x305f:	mov	rdx, rax
0x3062:	mov	esi, r14d
0x3065:	xor	edi, edi
0x3067:	xor	eax, eax
0x3069:	call	0x2a70


0x306e:	xor	r10d, r10d
0x3071:	jmp	0x2f33


0x3eaa:	mov	esi, dword ptr [rbx]
0x3eac:	lea	rdx, [rip + 0xc1fc]
0x3eb3:	mov	rcx, rax
0x3eb6:	mov	r8, rbp
0x3eb9:	xor	edi, edi
0x3ebb:	xor	eax, eax
0x3ebd:	call	0x2a70


0x3410:	lea	rsi, [rip + 0xc30d]
0x3417:	mov	rbx, rax
0x341a:	mov	edx, 5
0x341f:	xor	edi, edi
0x3421:	call	0x27f0


0x3426:	mov	rcx, rbx
0x3429:	mov	rdx, rax
0x342c:	xor	esi, esi
0x342e:	mov	edi, 1
0x3433:	xor	eax, eax
0x3435:	call	0x2a70


0x3cee:	mov	rdi, qword ptr [rip + 0x2113eb]
0x3cf5:	lea	rdx, [rip + 0xc3a2]
0x3cfc:	mov	rcx, rax
0x3cff:	mov	esi, 1
0x3d04:	xor	eax, eax
0x3d06:	call	0x2af0


0x3d0b:	mov	r15, qword ptr [r14 + rbx*8]
0x3d0f:	test	r15, r15
0x3d12:	jne	0x3cc8


0x3c9f:	mov	rdi, qword ptr [rip + 0x21143a]
0x3ca6:	lea	rdx, [rip + 0xc3e9]
0x3cad:	mov	rcx, rax
0x3cb0:	mov	esi, 1
0x3cb5:	xor	eax, eax
0x3cb7:	add	rbp, r12
0x3cba:	call	0x2af0


0x3cbf:	mov	r15, qword ptr [r14 + rbx*8]
0x3cc3:	test	r15, r15
0x3cc6:	je	0x3d18


0x3657:	lea	rsi, [rip + 0xc0c6]
0x365e:	mov	rbx, rax
0x3661:	mov	edx, 5
0x3666:	xor	edi, edi
0x3668:	call	0x27f0


0x366d:	mov	rcx, rbx
0x3670:	mov	rdx, rax
0x3673:	xor	esi, esi
0x3675:	mov	edi, 1
0x367a:	xor	eax, eax
0x367c:	call	0x2a70


0x3681:	nop	dword ptr [rax + rax]
0x3686:	nop	word ptr cs:[rax + rax]


0xa2fc:	lea	rsi, [rax + 1]
0xa300:	mov	qword ptr [rsp + 0x48], rax
0xa305:	add	rsp, 0x20
0xa309:	mov	rdi, rsi
0xa30c:	mov	qword ptr [rsp + 0x18], rsi
0xa311:	call	0xaed0


0xa316:	mov	qword ptr [rsp + 0x10], rax
0xa31b:	sub	rsp, 8
0xa31f:	push	qword ptr [rbx + 0x30]
0xa322:	push	qword ptr [rbx + 0x28]
0xa325:	mov	r10, qword ptr [rsp + 0x38]
0xa32a:	mov	r9d, ebp
0xa32d:	mov	r8d, dword ptr [rbx]
0xa330:	mov	rcx, r15
0xa333:	mov	rdx, r14
0xa336:	mov	rdi, rax
0xa339:	push	r10
0xa33b:	mov	rsi, qword ptr [rsp + 0x38]
0xa340:	call	0x8d10


0xa345:	mov	eax, dword ptr [rsp + 0x2c]
0xa349:	add	rsp, 0x20
0xa34d:	test	r12, r12
0xa350:	mov	dword ptr [r13], eax
0xa354:	je	0xa35f


0xa35f:	mov	rax, qword ptr [rsp + 0x10]
0xa364:	add	rsp, 0x38
0xa368:	pop	rbx
0xa369:	pop	rbp
0xa36a:	pop	r12
0xa36c:	pop	r13
0xa36e:	pop	r14
0xa370:	pop	r15
0xa372:	ret	


0xa356:	mov	r11, qword ptr [rsp + 0x28]
0xa35b:	mov	qword ptr [r12], r11
0xa35f:	mov	rax, qword ptr [rsp + 0x10]
0xa364:	add	rsp, 0x38
0xa368:	pop	rbx
0xa369:	pop	rbp
0xa36a:	pop	r12
0xa36c:	pop	r13
0xa36e:	pop	r14
0xa370:	pop	r15
0xa372:	ret	


0xa271:	mov	dword ptr [rbp], r12d
0xa275:	add	rsp, 0x38
0xa279:	pop	rbx
0xa27a:	pop	rbp
0xa27b:	pop	r12
0xa27d:	pop	r13
0xa27f:	pop	r14
0xa281:	pop	r15
0xa283:	ret	


0xa03c:	add	rsp, 0x20
0xa040:	mov	r11, qword ptr [rsp + 0x10]
0xa045:	cmp	r11, rax
0xa048:	ja	0xa0b1


0xa04a:	lea	rsi, [rax + 1]
0xa04e:	lea	rax, [rip + 0x20b10b]
0xa055:	cmp	r12, rax
0xa058:	mov	qword ptr [rbx], rsi
0xa05b:	je	0xa06f


0xa0b1:	mov	eax, dword ptr [rsp + 0x18]
0xa0b5:	mov	dword ptr [r13], eax
0xa0b9:	add	rsp, 0x28
0xa0bd:	mov	rax, r12
0xa0c0:	pop	rbx
0xa0c1:	pop	rbp
0xa0c2:	pop	r12
0xa0c4:	pop	r13
0xa0c6:	pop	r14
0xa0c8:	pop	r15
0xa0ca:	ret	


0xa06f:	mov	rdi, rsi
0xa072:	mov	qword ptr [rsp + 0x10], rsi
0xa077:	call	0xaed0


0xa05d:	mov	rdi, r12
0xa060:	mov	qword ptr [rsp + 0x10], rsi
0xa065:	call	0x2710


0xa06a:	mov	rsi, qword ptr [rsp + 0x10]
0xa06f:	mov	rdi, rsi
0xa072:	mov	qword ptr [rsp + 0x10], rsi
0xa077:	call	0xaed0


0xa07c:	sub	rsp, 8
0xa080:	mov	qword ptr [rbx + 8], rax
0xa084:	mov	r8d, dword ptr [rbp]
0xa088:	push	qword ptr [rbp + 0x30]
0xa08b:	push	qword ptr [rbp + 0x28]
0xa08e:	mov	rcx, r14
0xa091:	push	r15
0xa093:	mov	r9d, dword ptr [rsp + 0x3c]
0xa098:	mov	rdi, rax
0xa09b:	mov	rdx, qword ptr [rsp + 0x28]
0xa0a0:	mov	rsi, qword ptr [rsp + 0x30]
0xa0a5:	mov	r12, rax
0xa0a8:	call	0x8d10


0xa7c2:	mov	rdi, qword ptr [rsp + 0x38]
0xa7c7:	xor	rdi, qword ptr fs:[0x28]
0xa7d0:	jne	0xa7dc


0xa7d2:	add	rsp, 0x48
0xa7d6:	ret	


0xa7dc:	call	0x2830


0xa50f:	mov	rcx, qword ptr [rsp + 0x38]
0xa514:	xor	rcx, qword ptr fs:[0x28]
0xa51d:	jne	0xa529


0xa51f:	add	rsp, 0x48
0xa523:	ret	


0xa529:	call	0x2830


0xa59b:	mov	rdx, qword ptr [rsp + 0x38]
0xa5a0:	xor	rdx, qword ptr fs:[0x28]
0xa5a9:	jne	0xa5b5


0xa5ab:	add	rsp, 0x48
0xa5af:	ret	


0xa5b5:	call	0x2830


0xa72f:	mov	rcx, qword ptr [rsp + 0x38]
0xa734:	xor	rcx, qword ptr fs:[0x28]
0xa73d:	jne	0xa749


0xa73f:	add	rsp, 0x48
0xa743:	ret	


0xa749:	call	0x2830


0xa65e:	mov	rsi, qword ptr [rsp + 0x38]
0xa663:	xor	rsi, qword ptr fs:[0x28]
0xa66c:	jne	0xa673


0xa66e:	add	rsp, 0x48
0xa672:	ret	


0xa673:	call	0x2830


0xa0ad:	add	rsp, 0x20
0xa0b1:	mov	eax, dword ptr [rsp + 0x18]
0xa0b5:	mov	dword ptr [r13], eax
0xa0b9:	add	rsp, 0x28
0xa0bd:	mov	rax, r12
0xa0c0:	pop	rbx
0xa0c1:	pop	rbp
0xa0c2:	pop	r12
0xa0c4:	pop	r13
0xa0c6:	pop	r14
0xa0c8:	pop	r15
0xa0ca:	ret	


0x3bf3:	mov	rdx, r12
0x3bf6:	mov	rbp, rax
0x3bf9:	mov	esi, 8
0x3bfe:	xor	edi, edi
0x3c00:	call	0xa4a0


0x3c05:	mov	r8, rbp
0x3c08:	mov	rdx, rbx
0x3c0b:	mov	rcx, rax
0x3c0e:	pop	rbx
0x3c0f:	pop	rbp
0x3c10:	pop	r12
0x3c12:	xor	esi, esi
0x3c14:	xor	edi, edi
0x3c16:	xor	eax, eax
0x3c18:	jmp	0x2a70


0x3db3:	mov	rdx, r15
0x3db6:	mov	rsi, rbp
0x3db9:	mov	rdi, rbx
0x3dbc:	call	0x3c40


0x3dc1:	call	r13


0x3dc4:	mov	rax, -1
0x3dcb:	jmp	0x3d96


0xf6cd:	add	rbx, 1
0xf6d1:	cmp	rbp, rbx
0xf6d4:	jne	0xf6c0


0xf6c0:	mov	rdx, r15
0xf6c3:	mov	rsi, r14
0xf6c6:	mov	edi, r13d
0xf6c9:	call	qword ptr [r12 + rbx*8]






0xab40:	lea	rsi, [rip + 0x7051]
0xab47:	mov	edx, 5
0xab4c:	xor	edi, edi
0xab4e:	mov	r14, qword ptr [rbx + 0x18]
0xab52:	mov	r13, qword ptr [rbx + 0x10]
0xab56:	mov	r12, qword ptr [rbx + 8]
0xab5a:	mov	rbx, qword ptr [rbx]
0xab5d:	call	0x27f0


0xa960:	mov	r9, qword ptr [rbx + 0x38]
0xa964:	mov	rax, qword ptr [rbx + 0x10]
0xa968:	lea	rsi, [rip + 0x72c9]
0xa96f:	mov	r8, qword ptr [rbx + 8]
0xa973:	mov	edx, 5
0xa978:	xor	edi, edi
0xa97a:	mov	r13, qword ptr [rbx + 0x30]
0xa97e:	mov	r12, qword ptr [rbx + 0x28]
0xa982:	mov	qword ptr [rsp + 0x10], r9
0xa987:	mov	r15, qword ptr [rbx + 0x20]
0xa98b:	mov	r14, qword ptr [rbx + 0x18]
0xa98f:	mov	qword ptr [rsp], rax
0xa993:	mov	qword ptr [rsp + 8], r8
0xa998:	mov	rbx, qword ptr [rbx]
0xa99b:	call	0x27f0


0xaa68:	mov	rbx, qword ptr [rbx]
0xaa6b:	lea	rsi, [rip + 0x6fcd]
0xaa72:	mov	edx, 5
0xaa77:	xor	edi, edi
0xaa79:	call	0x27f0


0xaaa8:	mov	r12, qword ptr [rbx + 8]
0xaaac:	lea	rsi, [rip + 0x6f9c]
0xaab3:	mov	rbx, qword ptr [rbx]
0xaab6:	mov	edx, 5
0xaabb:	xor	edi, edi
0xaabd:	call	0x27f0


0xabc8:	mov	r8, qword ptr [rbx + 8]
0xabcc:	mov	r12, qword ptr [rbx + 0x28]
0xabd0:	lea	rsi, [rip + 0x7009]
0xabd7:	mov	r15, qword ptr [rbx + 0x20]
0xabdb:	mov	r14, qword ptr [rbx + 0x18]
0xabdf:	mov	edx, 5
0xabe4:	mov	r13, qword ptr [rbx + 0x10]
0xabe8:	xor	edi, edi
0xabea:	mov	rbx, qword ptr [rbx]
0xabed:	mov	qword ptr [rsp], r8
0xabf1:	call	0x27f0


0xaaf0:	mov	r13, qword ptr [rbx + 0x10]
0xaaf4:	mov	r12, qword ptr [rbx + 8]
0xaaf8:	lea	rsi, [rip + 0x6f67]
0xaaff:	mov	rbx, qword ptr [rbx]
0xab02:	mov	edx, 5
0xab07:	xor	edi, edi
0xab09:	call	0x27f0


0xac30:	mov	r9, qword ptr [rbx + 0x10]
0xac34:	mov	r13, qword ptr [rbx + 0x30]
0xac38:	lea	rsi, [rip + 0x6fc9]
0xac3f:	mov	r12, qword ptr [rbx + 0x28]
0xac43:	mov	r15, qword ptr [rbx + 0x20]
0xac47:	mov	edx, 5
0xac4c:	mov	r14, qword ptr [rbx + 0x18]
0xac50:	mov	r8, qword ptr [rbx + 8]
0xac54:	xor	edi, edi
0xac56:	mov	qword ptr [rsp + 8], r9
0xac5b:	mov	rbx, qword ptr [rbx]
0xac5e:	mov	qword ptr [rsp], r8
0xac62:	call	0x27f0


0xaa10:	mov	r10, qword ptr [rbx + 0x40]
0xaa14:	mov	r9, qword ptr [rbx + 0x38]
0xaa18:	lea	rsi, [rip + 0x7249]
0xaa1f:	mov	rax, qword ptr [rbx + 0x10]
0xaa23:	mov	r8, qword ptr [rbx + 8]
0xaa27:	mov	edx, 5
0xaa2c:	mov	r13, qword ptr [rbx + 0x30]
0xaa30:	mov	r12, qword ptr [rbx + 0x28]
0xaa34:	mov	r15, qword ptr [rbx + 0x20]
0xaa38:	mov	r14, qword ptr [rbx + 0x18]
0xaa3c:	mov	rbx, qword ptr [rbx]
0xaa3f:	mov	qword ptr [rsp + 0x18], r10
0xaa44:	mov	qword ptr [rsp + 0x10], r9
0xaa49:	mov	qword ptr [rsp], rax
0xaa4d:	mov	qword ptr [rsp + 8], r8
0xaa52:	xor	edi, edi
0xaa54:	call	0x27f0


0xa9d6:	add	rsp, 0x28
0xa9da:	pop	rbx
0xa9db:	pop	rbp
0xa9dc:	pop	r12
0xa9de:	pop	r13
0xa9e0:	pop	r14
0xa9e2:	pop	r15
0xa9e4:	ret	


0xab98:	mov	r15, qword ptr [rbx + 0x20]
0xab9c:	lea	rsi, [rip + 0x7015]
0xaba3:	mov	edx, 5
0xaba8:	xor	edi, edi
0xabaa:	mov	r14, qword ptr [rbx + 0x18]
0xabae:	mov	r13, qword ptr [rbx + 0x10]
0xabb2:	mov	r12, qword ptr [rbx + 8]
0xabb6:	mov	rbx, qword ptr [rbx]
0xabb9:	call	0x27f0


0x6000:	mov	rax, qword ptr [r13 - 0x38]
0x6004:	mov	dword ptr [r11 + 0x18], eax
0x6008:	jmp	0x4eb8


0x6103:	mov	rax, qword ptr [r13 - 0x30]
0x6107:	mov	qword ptr [r11 + 0x50], 0
0x610f:	mov	qword ptr [r11 + 0x58], 0
0x6117:	mov	qword ptr [r11 + 0x60], 0
0x611f:	mov	dword ptr [r11 + 0x1c], 2
0x6127:	mov	qword ptr [r11 + 0x48], rax
0x612b:	jmp	0x4ff0


0x6304:	mov	dword ptr [rsp + 0x58], r9d
0x6309:	mov	qword ptr [rsp + 0x50], r10
0x630e:	mov	edx, 5
0x6313:	add	qword ptr [r11 + 0xb8], 1
0x631b:	mov	qword ptr [rsp + 0x48], r11
0x6320:	lea	rsi, [rip + 0x9eef]
0x6327:	jmp	0x5ac9


0x5f04:	mov	rax, qword ptr [r13 - 0x30]
0x5f08:	mov	byte ptr [r11 + 0xe0], 1
0x5f10:	mov	qword ptr [r11 + 8], rax
0x5f14:	mov	rax, qword ptr [r13]
0x5f18:	mov	dword ptr [r11 + 0x10], eax
0x5f1c:	jmp	0x4ff0


0x5e05:	mov	rax, qword ptr [r13 - 0xa8]
0x5e0c:	movdqu	xmm0, xmmword ptr [r13]
0x5e12:	mov	qword ptr [r11 + 0x38], rax
0x5e16:	mov	rax, qword ptr [r13 - 0x68]
0x5e1a:	movups	xmmword ptr [r11 + 0x20], xmm0
0x5e1f:	mov	qword ptr [r11 + 0x40], rax
0x5e23:	mov	rax, qword ptr [r13 + 0x10]
0x5e27:	mov	qword ptr [r11 + 0x30], rax
0x5e2b:	jmp	0x4ff0


0x5909:	xor	edx, edx
0x590b:	mov	rax, qword ptr [r13 - 0x30]
0x590f:	mov	qword ptr [rsp + 0x100], 0
0x591b:	imul	rax, qword ptr [r13]
0x5920:	pxor	xmm0, xmm0
0x5924:	movaps	xmmword ptr [rsp + 0xd0], xmm0
0x592c:	movaps	xmmword ptr [rsp + 0xe0], xmm0
0x5934:	movaps	xmmword ptr [rsp + 0xf0], xmm0
0x593c:	jo	0x5c4c


0x5b0c:	mov	dword ptr [rsp + 0x58], r9d
0x5b11:	mov	qword ptr [rsp + 0x50], r10
0x5b16:	mov	edx, 5
0x5b1b:	add	qword ptr [r11 + 0xc8], 1
0x5b23:	mov	qword ptr [rsp + 0x48], r11
0x5b28:	lea	rsi, [rip + 0x9ccf]
0x5b2f:	jmp	0x5ac9


0x628c:	mov	dword ptr [rsp + 0x58], r9d
0x6291:	mov	qword ptr [rsp + 0x50], r10
0x6296:	mov	edx, 5
0x629b:	add	qword ptr [r11 + 0xb0], 1
0x62a3:	mov	qword ptr [rsp + 0x48], r11
0x62a8:	lea	rsi, [rip + 0x9f72]
0x62af:	jmp	0x5ac9


0x600d:	mov	dword ptr [r11 + 0x18], 0x6270
0x6015:	jmp	0x4ff0


0x5f8c:	movzx	esi, byte ptr [r13 - 0x38]
0x5f91:	mov	rcx, qword ptr [r13 - 0x28]
0x5f95:	lea	rdi, [r11 + 0x18]
0x5f99:	mov	rdx, qword ptr [r13 - 0x30]
0x5f9d:	mov	r8, qword ptr [r13]
0x5fa1:	mov	dword ptr [rsp + 0x58], r9d
0x5fa6:	mov	qword ptr [rsp + 0x50], r10
0x5fab:	mov	qword ptr [rsp + 0x48], r11
0x5fb0:	call	0x43f0


0x6193:	mov	rax, qword ptr [r13 - 0x30]
0x6197:	mov	qword ptr [r11 + 0x50], 0
0x619f:	mov	qword ptr [r11 + 0x58], 0
0x61a7:	mov	qword ptr [r11 + 0x60], 0
0x61af:	mov	qword ptr [r11 + 0x48], rax
0x61b3:	mov	rax, qword ptr [r13]
0x61b7:	mov	dword ptr [r11 + 0x1c], eax
0x61bb:	jmp	0x4ff0


0x5994:	mov	rcx, qword ptr [r13 - 0xd0]
0x599b:	movzx	eax, byte ptr [r11 + 0xd9]
0x59a3:	cmp	rcx, 3
0x59a7:	jle	0x6508


0x5c13:	xor	edx, edx
0x5c15:	mov	rax, qword ptr [r13 - 0x38]
0x5c19:	mov	qword ptr [rsp + 0x100], 0
0x5c25:	imul	rax, qword ptr [r13]
0x5c2a:	pxor	xmm0, xmm0
0x5c2e:	movaps	xmmword ptr [rsp + 0xd0], xmm0
0x5c36:	movaps	xmmword ptr [rsp + 0xe0], xmm0
0x5c3e:	movaps	xmmword ptr [rsp + 0xf0], xmm0
0x5c46:	jno	0x5942


0x6216:	lea	rsi, [rip + 0xa011]
0x621d:	xor	edi, edi
0x621f:	mov	edx, 5
0x6224:	mov	qword ptr [rsp + 0x58], r11
0x6229:	mov	dword ptr [rsp + 0x50], r9d
0x622e:	mov	qword ptr [rsp + 0x48], r10
0x6233:	call	0x27f0


0x601a:	mov	rax, qword ptr [r13]
0x601e:	mov	dword ptr [r11 + 0x18], eax
0x6022:	jmp	0x4ff0


0x5a9b:	movdqu	xmm0, xmmword ptr [r13]
0x5aa1:	lea	rsi, [rip + 0xa753]
0x5aa8:	mov	dword ptr [rsp + 0x58], r9d
0x5aad:	mov	qword ptr [rsp + 0x50], r10
0x5ab2:	mov	edx, 5
0x5ab7:	movups	xmmword ptr [r11 + 0x58], xmm0
0x5abc:	mov	byte ptr [r11 + 0xa0], 1
0x5ac4:	mov	qword ptr [rsp + 0x48], r11
0x5ac9:	xor	edi, edi
0x5acb:	call	0x27f0


0x5d9a:	mov	rax, qword ptr [r13 - 0x60]
0x5d9e:	movabs	rdx, 0x8000000000000000
0x5da8:	movdqu	xmm0, xmmword ptr [r13 - 0x70]
0x5dae:	mov	qword ptr [r11 + 0x30], rax
0x5db2:	mov	rax, qword ptr [r13 - 0x30]
0x5db6:	movups	xmmword ptr [r11 + 0x20], xmm0
0x5dbb:	mov	rcx, rax
0x5dbe:	neg	rcx
0x5dc1:	cmp	rax, rdx
0x5dc4:	mov	qword ptr [r11 + 0x38], rcx
0x5dc8:	je	0x5328


0x589d:	mov	rax, qword ptr [r13 - 0x38]
0x58a1:	mov	dword ptr [rsp + 0x104], 0
0x58ac:	mov	qword ptr [rsp + 0x20], rax
0x58b1:	mov	eax, dword ptr [r13 - 0x30]
0x58b5:	mov	dword ptr [rsp + 0x18], eax
0x58b9:	mov	qword ptr [rsp + 0x28], 0
0x58c2:	mov	qword ptr [rsp + 8], 0
0x58cb:	xor	r10d, r10d
0x58ce:	mov	qword ptr [rsp + 0x10], 0
0x58d7:	xor	r14d, r14d
0x58da:	jmp	0x4ff0


0x60a0:	mov	rax, qword ptr [r13 - 0x38]
0x60a4:	mov	rdx, qword ptr [r13 - 0xa0]
0x60ab:	mov	rcx, qword ptr [r13 - 0x110]
0x60b2:	mov	dword ptr [r11 + 0x1c], 2
0x60ba:	mov	qword ptr [r11 + 0x58], rax
0x60be:	movsxd	rax, dword ptr [r13 - 0x30]
0x60c2:	mov	qword ptr [r11 + 0x48], rcx
0x60c6:	mov	qword ptr [r11 + 0x50], rdx
0x60ca:	mov	qword ptr [r11 + 0x60], rax
0x60ce:	jmp	0x4ff0


0x5f21:	mov	rax, qword ptr [r13 - 0x38]
0x5f25:	mov	byte ptr [r11 + 0xe0], 1
0x5f2d:	mov	qword ptr [r11 + 8], rax
0x5f31:	mov	rax, qword ptr [r13]
0x5f35:	mov	dword ptr [r11 + 0x10], eax
0x5f39:	jmp	0x4ff0


0x5ba0:	mov	r14, qword ptr [r13 + 8]
0x5ba4:	jmp	0x4ff0


0x5a23:	mov	rax, qword ptr [r13 - 0x68]
0x5a27:	mov	qword ptr [r11 + 0x38], rax
0x5a2b:	mov	rax, qword ptr [r13 + 8]
0x5a2f:	mov	qword ptr [r11 + 0x40], rax
0x5a33:	jmp	0x4ff0


0x6027:	mov	dword ptr [r11 + 0x14], 1
0x602f:	add	qword ptr [r11 + 0xc0], 1
0x6037:	jmp	0x4ff0


0x5ba9:	mov	dword ptr [rsp + 0x104], 0
0x5bb4:	mov	rax, qword ptr [r13 - 0x38]
0x5bb8:	jmp	0x58ee


0x6130:	mov	rax, qword ptr [r13 - 0x38]
0x6134:	mov	rdx, qword ptr [r13 - 0xa0]
0x613b:	mov	rcx, qword ptr [r13 - 0x110]
0x6142:	mov	qword ptr [r11 + 0x58], rax
0x6146:	movsxd	rax, dword ptr [r13 - 0x30]
0x614a:	mov	qword ptr [r11 + 0x48], rcx
0x614e:	mov	qword ptr [r11 + 0x50], rdx
0x6152:	mov	qword ptr [r11 + 0x60], rax
0x6156:	mov	rax, qword ptr [r13]
0x615a:	mov	dword ptr [r11 + 0x1c], eax
0x615e:	jmp	0x4ff0


0x5b31:	mov	dword ptr [rsp + 0x58], r9d
0x5b36:	mov	qword ptr [rsp + 0x50], r10
0x5b3b:	mov	edx, 5
0x5b40:	add	qword ptr [r11 + 0xc8], 1
0x5b48:	add	qword ptr [r11 + 0xa8], 1
0x5b50:	lea	rsi, [rip + 0xa6b6]
0x5b57:	mov	qword ptr [rsp + 0x48], r11
0x5b5c:	jmp	0x5ac9


0x4eb0:	mov	dword ptr [r11 + 0x18], 0x6270
0x4eb8:	mov	rax, qword ptr [r13]
0x4ebc:	xor	r8d, r8d
0x4ebf:	mov	rdx, qword ptr [r13 + 0x10]
0x4ec3:	mov	rcx, qword ptr [r13 + 0x18]
0x4ec7:	mov	rsi, qword ptr [r13 + 0x20]
0x4ecb:	mov	rdi, qword ptr [r13 + 0x28]
0x4ecf:	mov	qword ptr [rsp + 0x48], rax
0x4ed4:	mov	rax, qword ptr [r13 + 8]
0x4ed8:	mov	qword ptr [rsp + 0x50], rax
0x4edd:	mov	eax, dword ptr [r13 + 0x30]
0x4ee1:	add	eax, dword ptr [r11 + 0x98]
0x4ee8:	jo	0x6825


0x5e30:	mov	rax, qword ptr [r13 - 0x68]
0x5e34:	movdqu	xmm0, xmmword ptr [r13]
0x5e3a:	mov	qword ptr [r11 + 0x40], rax
0x5e3e:	mov	rax, qword ptr [r13 - 0x38]
0x5e42:	movups	xmmword ptr [r11 + 0x20], xmm0
0x5e47:	mov	qword ptr [r11 + 0x38], rax
0x5e4b:	mov	rax, qword ptr [r13 + 0x10]
0x5e4f:	mov	qword ptr [r11 + 0x30], rax
0x5e53:	jmp	0x4ff0


0x62b4:	mov	dword ptr [rsp + 0x58], r9d
0x62b9:	mov	qword ptr [rsp + 0x50], r10
0x62be:	mov	edx, 5
0x62c3:	add	qword ptr [r11 + 0xa8], 1
0x62cb:	mov	qword ptr [rsp + 0x48], r11
0x62d0:	lea	rsi, [rip + 0x9635]
0x62d7:	jmp	0x5ac9


0x56b1:	mov	r10, qword ptr [r13 - 0x30]
0x56b5:	mov	dword ptr [rsp + 0x104], 0
0x56c0:	mov	dword ptr [rsp + 0x18], 0
0x56c8:	mov	qword ptr [rsp + 0x20], 0
0x56d1:	xor	r14d, r14d
0x56d4:	mov	qword ptr [rsp + 0x28], 0
0x56dd:	mov	qword ptr [rsp + 8], 0
0x56e6:	mov	qword ptr [rsp + 0x10], 0
0x56ef:	jmp	0x4ff0


0x5736:	mov	r14, qword ptr [r13 - 0x30]
0x573a:	mov	dword ptr [rsp + 0x104], 0
0x5745:	mov	dword ptr [rsp + 0x18], 0
0x574d:	mov	qword ptr [rsp + 0x20], 0
0x5756:	xor	r10d, r10d
0x5759:	mov	qword ptr [rsp + 0x28], 0
0x5762:	mov	qword ptr [rsp + 8], 0
0x576b:	mov	qword ptr [rsp + 0x10], 0
0x5774:	jmp	0x4ff0


0x5d35:	mov	r14, -1
0x5d3c:	jmp	0x4ff0


0x5eb8:	mov	rax, qword ptr [r13 - 0x68]
0x5ebc:	mov	qword ptr [r11 + 0x40], rax
0x5ec0:	mov	rax, qword ptr [r13 - 0x38]
0x5ec4:	mov	qword ptr [r11 + 0x38], rax
0x5ec8:	mov	rax, qword ptr [r13 + 8]
0x5ecc:	mov	rdx, rax
0x5ecf:	neg	rdx
0x5ed2:	mov	qword ptr [r11 + 0x28], rdx
0x5ed6:	movabs	rdx, 0x8000000000000000
0x5ee0:	cmp	rax, rdx
0x5ee3:	jne	0x5e23


0x5a38:	mov	dword ptr [rsp + 0x104], 0
0x5a43:	mov	dword ptr [rsp + 0x18], 0
0x5a4b:	mov	qword ptr [rsp + 0x20], 1
0x5a54:	jmp	0x58b9


0x603c:	mov	rax, qword ptr [r13]
0x6040:	mov	dword ptr [r11 + 0x14], eax
0x6044:	jmp	0x4ff0


0x5bbd:	mov	dword ptr [rsp + 0x104], 0
0x5bc8:	mov	dword ptr [rsp + 0x18], 0
0x5bd0:	xor	r10d, r10d
0x5bd3:	mov	qword ptr [rsp + 0x20], 0
0x5bdc:	mov	qword ptr [rsp + 0x28], 1
0x5be5:	xor	r14d, r14d
0x5be8:	mov	qword ptr [rsp + 8], 0
0x5bf1:	mov	qword ptr [rsp + 0x10], 0
0x5bfa:	jmp	0x4ff0


0x5f3e:	mov	rax, qword ptr [r13 - 0x38]
0x5f42:	mov	qword ptr [r11 + 8], 0
0x5f4a:	mov	dword ptr [r11 + 0x10], eax
0x5f4e:	jmp	0x4ff0


0x61c0:	lea	rsi, [rip + 0xa06e]
0x61c7:	mov	qword ptr [rsp + 0x58], r11
0x61cc:	mov	dword ptr [rsp + 0x50], r9d
0x61d1:	mov	qword ptr [rsp + 0x48], r10
0x61d6:	mov	edx, 5
0x61db:	xor	edi, edi
0x61dd:	call	0x27f0


0x5d41:	mov	dword ptr [rsp + 0x104], 0
0x5d4c:	mov	r10, qword ptr [r13 - 0x38]
0x5d50:	jmp	0x56c0


0x6049:	add	qword ptr [r11 + 0xd0], 1
0x6051:	movzx	esi, byte ptr [r13 - 0x38]
0x6056:	lea	rdi, [r11 + 0x18]
0x605a:	mov	rcx, qword ptr [r13 - 0x28]
0x605e:	mov	rdx, qword ptr [r13 - 0x30]
0x6062:	mov	r8, qword ptr [r13]
0x6066:	mov	dword ptr [rsp + 0x58], r9d
0x606b:	mov	qword ptr [rsp + 0x50], r10
0x6070:	mov	qword ptr [rsp + 0x48], r11
0x6075:	call	0x43f0


0x60d3:	mov	rax, qword ptr [r13 - 0x30]
0x60d7:	mov	rdx, qword ptr [r13 - 0xa0]
0x60de:	mov	qword ptr [r11 + 0x58], 0
0x60e6:	mov	qword ptr [r11 + 0x60], 0
0x60ee:	mov	dword ptr [r11 + 0x1c], 2
0x60f6:	mov	qword ptr [r11 + 0x48], rdx
0x60fa:	mov	qword ptr [r11 + 0x50], rax
0x60fe:	jmp	0x4ff0


0x5f53:	mov	rax, qword ptr [r13]
0x5f57:	mov	qword ptr [r11 + 8], 0
0x5f5f:	mov	dword ptr [r11 + 0x10], eax
0x5f63:	jmp	0x4ff0


0x5d55:	mov	dword ptr [rsp + 0x104], 0
0x5d60:	mov	dword ptr [rsp + 0x18], 0
0x5d68:	xor	r10d, r10d
0x5d6b:	mov	qword ptr [rsp + 0x20], 0
0x5d74:	mov	qword ptr [rsp + 0x28], 0
0x5d7d:	mov	r14d, 1
0x5d83:	mov	qword ptr [rsp + 8], 0
0x5d8c:	mov	qword ptr [rsp + 0x10], 0
0x5d95:	jmp	0x4ff0


0x5e58:	mov	rax, qword ptr [r13 - 0x38]
0x5e5c:	mov	qword ptr [r11 + 0x38], rax
0x5e60:	mov	rax, qword ptr [r13 + 8]
0x5e64:	mov	qword ptr [r11 + 0x40], rax
0x5e68:	jmp	0x4ff0


0x5a59:	mov	dword ptr [rsp + 0x104], 0
0x5a64:	mov	dword ptr [rsp + 0x18], 0
0x5a6c:	xor	r10d, r10d
0x5a6f:	mov	qword ptr [rsp + 0x20], 0
0x5a78:	mov	qword ptr [rsp + 0x28], 0
0x5a81:	xor	r14d, r14d
0x5a84:	mov	qword ptr [rsp + 8], 1
0x5a8d:	mov	qword ptr [rsp + 0x10], 0
0x5a96:	jmp	0x4ff0


0x585b:	mov	rax, qword ptr [r13 - 0x30]
0x585f:	mov	dword ptr [rsp + 0x104], 0
0x586a:	mov	qword ptr [rsp + 8], rax
0x586f:	mov	dword ptr [rsp + 0x18], 0
0x5877:	xor	r10d, r10d
0x587a:	mov	qword ptr [rsp + 0x20], 0
0x5883:	mov	qword ptr [rsp + 0x28], 0
0x588c:	xor	r14d, r14d
0x588f:	mov	qword ptr [rsp + 0x10], 0
0x5898:	jmp	0x4ff0


0x62dc:	mov	dword ptr [rsp + 0x58], r9d
0x62e1:	mov	qword ptr [rsp + 0x50], r10
0x62e6:	mov	edx, 5
0x62eb:	add	qword ptr [r11 + 0xd0], 1
0x62f3:	mov	qword ptr [rsp + 0x48], r11
0x62f8:	lea	rsi, [rip + 0x9f1d]
0x62ff:	jmp	0x5ac9


0x58df:	mov	rax, qword ptr [r13 - 0x30]
0x58e3:	mov	dword ptr [rsp + 0x104], 0
0x58ee:	mov	qword ptr [rsp + 0x20], rax
0x58f3:	mov	dword ptr [rsp + 0x18], 0
0x58fb:	jmp	0x58b9


0x5c60:	mov	dword ptr [rsp + 0x104], 0
0x5c6b:	mov	rax, qword ptr [r13 - 0x38]
0x5c6f:	jmp	0x586a


0x5b61:	mov	dword ptr [rsp + 0x58], r9d
0x5b66:	mov	qword ptr [rsp + 0x50], r10
0x5b6b:	sub	rsp, 8
0x5b6f:	push	qword ptr [r13 + 0x10]
0x5b73:	push	qword ptr [r13 + 8]
0x5b77:	mov	rdi, r11
0x5b7a:	push	qword ptr [r13]
0x5b7e:	mov	qword ptr [rsp + 0x68], r11
0x5b83:	call	0x4040


0x6163:	mov	rax, qword ptr [r13 - 0x30]
0x6167:	mov	rdx, qword ptr [r13 - 0xa0]
0x616e:	mov	qword ptr [r11 + 0x58], 0
0x6176:	mov	qword ptr [r11 + 0x60], 0
0x617e:	mov	qword ptr [r11 + 0x50], rax
0x6182:	mov	rax, qword ptr [r13]
0x6186:	mov	qword ptr [r11 + 0x48], rdx
0x618a:	mov	dword ptr [r11 + 0x1c], eax
0x618e:	jmp	0x4ff0


0x5f68:	mov	eax, dword ptr [r13 - 0x38]
0x5f6c:	add	eax, 0xe10
0x5f71:	mov	dword ptr [r11 + 0x18], eax
0x5f75:	jmp	0x4ff0


0x51eb:	mov	rax, qword ptr [r13 - 0x38]
0x51ef:	mov	rsi, qword ptr [r13 - 0x18]
0x51f3:	mov	rdi, qword ptr [r13 - 0x10]
0x51f7:	mov	r8d, dword ptr [r13 - 8]
0x51fb:	mov	ecx, dword ptr [r11 + 0x98]
0x5202:	mov	rdx, qword ptr [r11 + 0x90]
0x5209:	mov	qword ptr [rsp + 0x48], rax
0x520e:	mov	rax, qword ptr [r13 - 0x30]
0x5212:	mov	qword ptr [rsp + 0x50], rax
0x5217:	mov	rax, qword ptr [r13 - 0x28]
0x521b:	mov	qword ptr [rsp + 0x58], rax
0x5220:	mov	rax, qword ptr [r13 - 0x20]
0x5224:	mov	qword ptr [rsp + 0x60], rax
0x5229:	mov	rax, qword ptr [r11 + 0x88]
0x5230:	mov	qword ptr [rsp + 0x70], rax
0x5235:	mov	rax, qword ptr [r11 + 0x80]
0x523c:	mov	qword ptr [rsp + 0x80], rax
0x5244:	mov	rax, qword ptr [r11 + 0x78]
0x5248:	mov	qword ptr [rsp + 0x88], rax
0x5250:	mov	rax, qword ptr [r11 + 0x70]
0x5254:	mov	qword ptr [rsp + 0x68], rax
0x5259:	mov	rax, qword ptr [r11 + 0x68]
0x525d:	mov	qword ptr [rsp + 0x78], rax
0x5262:	mov	eax, dword ptr [r13]
0x5266:	test	eax, eax
0x5268:	js	0x6562


0x626c:	mov	qword ptr [rsp + 0x58], r11
0x6271:	mov	dword ptr [rsp + 0x50], r9d
0x6276:	mov	edx, 5
0x627b:	mov	qword ptr [rsp + 0x48], r10
0x6280:	lea	rsi, [rip + 0x9f9e]
0x6287:	jmp	0x61db


0x5e6d:	mov	rax, qword ptr [r13 - 0x70]
0x5e71:	movabs	rdx, 0x8000000000000000
0x5e7b:	mov	qword ptr [r11 + 0x38], rax
0x5e7f:	mov	rax, qword ptr [r13 - 0x30]
0x5e83:	mov	rcx, rax
0x5e86:	neg	rcx
0x5e89:	cmp	rax, rdx
0x5e8c:	mov	qword ptr [r11 + 0x40], rcx
0x5e90:	je	0x5328


0x5df0:	mov	rax, qword ptr [r13 - 0x30]
0x5df4:	mov	qword ptr [r11 + 0x40], rax
0x5df8:	mov	rax, qword ptr [r13]
0x5dfc:	mov	qword ptr [r11 + 0x38], rax
0x5e00:	jmp	0x4ff0


0x5ef0:	mov	dword ptr [rsp + 0x104], 0
0x5efb:	mov	r14, qword ptr [r13 - 0x38]
0x5eff:	jmp	0x5745


0x5cf0:	mov	dword ptr [rsp + 0x104], 0
0x5cfb:	mov	dword ptr [rsp + 0x18], 0
0x5d03:	mov	r10d, 1
0x5d09:	mov	qword ptr [rsp + 0x20], 0
0x5d12:	mov	qword ptr [rsp + 0x28], 0
0x5d1b:	xor	r14d, r14d
0x5d1e:	mov	qword ptr [rsp + 8], 0
0x5d27:	mov	qword ptr [rsp + 0x10], 0
0x5d30:	jmp	0x4ff0


0x56f4:	mov	rax, qword ptr [r13 - 0x30]
0x56f8:	mov	dword ptr [rsp + 0x104], 0
0x5703:	mov	qword ptr [rsp + 0x28], rax
0x5708:	mov	dword ptr [rsp + 0x18], 0
0x5710:	xor	r10d, r10d
0x5713:	mov	qword ptr [rsp + 0x20], 0
0x571c:	mov	qword ptr [rsp + 8], 0
0x5725:	xor	r14d, r14d
0x5728:	mov	qword ptr [rsp + 0x10], 0
0x5731:	jmp	0x4ff0


0x5c74:	mov	dword ptr [rsp + 0x68], r9d
0x5c79:	mov	qword ptr [rsp + 0x60], r10
0x5c7e:	sub	rsp, 8
0x5c82:	push	qword ptr [r13 - 0x28]
0x5c86:	push	qword ptr [r13 - 0x30]
0x5c8a:	mov	rdi, r11
0x5c8d:	push	qword ptr [r13 - 0x38]
0x5c91:	mov	qword ptr [rsp + 0x78], r11
0x5c96:	call	0x4040


0x5779:	mov	rax, qword ptr [r13]
0x577d:	xor	r8d, r8d
0x5780:	mov	rdx, qword ptr [r13 + 0x10]
0x5784:	mov	rcx, qword ptr [r13 + 0x18]
0x5788:	mov	rsi, qword ptr [r13 + 0x20]
0x578c:	mov	rdi, qword ptr [r13 + 0x28]
0x5790:	mov	qword ptr [rsp + 0x48], rax
0x5795:	mov	rax, qword ptr [r13 + 8]
0x5799:	mov	qword ptr [rsp + 0x50], rax
0x579e:	mov	eax, dword ptr [r13 + 0x30]
0x57a2:	add	eax, dword ptr [r11 + 0x98]
0x57a9:	jo	0x5ce4


0x5f7a:	mov	eax, dword ptr [r13]
0x5f7e:	add	eax, 0xe10
0x5f83:	mov	dword ptr [r11 + 0x18], eax
0x5f87:	jmp	0x4ff0


0x58fd:	mov	r14, qword ptr [r13 + 8]
0x5901:	xor	r10d, r10d
0x5904:	jmp	0x4ff0


0x597e:	mov	rax, qword ptr [r13]
0x5982:	mov	dword ptr [rsp + 0x104], 0
0x598d:	mov	qword ptr [rsp + 0x10], rax
0x5992:	jmp	0x5950


0x5bff:	mov	dword ptr [rsp + 0x104], 0
0x5c0a:	mov	rax, qword ptr [r13 - 0x38]
0x5c0e:	jmp	0x5703


0xe000:	mov	rax, qword ptr [r13 + 0x50]
0xe004:	lea	rdi, [r15 + r14]
0xe008:	shl	rax, 5
0xe00c:	add	rax, qword ptr [rbp - 0x3a8]
0xe013:	movzx	r9d, byte ptr [rax + 0x10]
0xe018:	mov	eax, dword ptr [rbp - 0x3e0]
0xe01e:	cmp	eax, 1
0xe021:	jne	0xdd2e


0xdd08:	mov	rax, qword ptr [r13 + 0x50]
0xdd0c:	lea	rdi, [r15 + r14]
0xdd10:	shl	rax, 5
0xdd14:	add	rax, qword ptr [rbp - 0x3a8]
0xdd1b:	mov	r9d, dword ptr [rax + 0x10]
0xdd1f:	mov	eax, dword ptr [rbp - 0x3e0]
0xdd25:	cmp	eax, 1
0xdd28:	je	0xdf60


0xdeb8:	mov	rax, qword ptr [r13 + 0x50]
0xdebc:	lea	rdi, [r15 + r14]
0xdec0:	shl	rax, 5
0xdec4:	add	rax, qword ptr [rbp - 0x3a8]
0xdecb:	movsd	xmm0, qword ptr [rax + 0x10]
0xded0:	mov	eax, dword ptr [rbp - 0x3e0]
0xded6:	cmp	eax, 1
0xded9:	je	0xe470


0xe030:	mov	rax, qword ptr [r13 + 0x50]
0xe034:	lea	rdi, [r15 + r14]
0xe038:	shl	rax, 5
0xe03c:	add	rax, qword ptr [rbp - 0x3a8]
0xe043:	movsx	r9d, byte ptr [rax + 0x10]
0xe048:	mov	eax, dword ptr [rbp - 0x3e0]
0xe04e:	cmp	eax, 1
0xe051:	jne	0xdd2e


0xdbd0:	mov	rax, qword ptr [r13 + 0x50]
0xdbd4:	lea	rdi, [r15 + r14]
0xdbd8:	shl	rax, 5
0xdbdc:	add	rax, qword ptr [rbp - 0x3a8]
0xdbe3:	mov	r9, qword ptr [rax + 0x10]
0xdbe7:	mov	eax, dword ptr [rbp - 0x3e0]
0xdbed:	cmp	eax, 1
0xdbf0:	je	0xe0b8


0xde30:	mov	rax, qword ptr [r13 + 0x50]
0xde34:	lea	rdi, [r15 + r14]
0xde38:	shl	rax, 5
0xde3c:	add	rax, qword ptr [rbp - 0x3a8]
0xde43:	fld	xword ptr [rax + 0x10]
0xde46:	mov	eax, dword ptr [rbp - 0x3e0]
0xde4c:	cmp	eax, 1
0xde4f:	je	0xe480


0xdf78:	mov	rax, qword ptr [r13 + 0x50]
0xdf7c:	lea	rdi, [r15 + r14]
0xdf80:	shl	rax, 5
0xdf84:	add	rax, qword ptr [rbp - 0x3a8]
0xdf8b:	movsx	r9d, word ptr [rax + 0x10]
0xdf90:	mov	eax, dword ptr [rbp - 0x3e0]
0xdf96:	cmp	eax, 1
0xdf99:	je	0xdf60


0xdf38:	mov	rax, qword ptr [r13 + 0x50]
0xdf3c:	lea	rdi, [r15 + r14]
0xdf40:	shl	rax, 5
0xdf44:	add	rax, qword ptr [rbp - 0x3a8]
0xdf4b:	movzx	r9d, word ptr [rax + 0x10]
0xdf50:	mov	eax, dword ptr [rbp - 0x3e0]
0xdf56:	cmp	eax, 1
0xdf59:	jne	0xdd2e


0xe8c2:	mov	r11d, dword ptr [rdi + 4]
0xe8c6:	cmp	r11d, 0xaf
0xe8cd:	ja	0xe97d


0xe806:	mov	r11d, dword ptr [rdi]
0xe809:	cmp	r11d, 0x2f
0xe80d:	ja	0xe94a


0xe82a:	mov	r11d, dword ptr [rdi]
0xe82d:	cmp	r11d, 0x2f
0xe831:	ja	0xe96c


0xe84c:	mov	r11d, dword ptr [rdi]
0xe84f:	cmp	r11d, 0x2f
0xe853:	ja	0xe95b


0xe86e:	mov	r11d, dword ptr [rdi]
0xe871:	cmp	r11d, 0x2f
0xe875:	ja	0xe91a


0xe7d0:	mov	rdx, qword ptr [rdi + 8]
0xe7d4:	add	rdx, 0xf
0xe7d8:	and	rdx, 0xfffffffffffffff0
0xe7dc:	lea	r11, [rdx + 0x10]
0xe7e0:	mov	qword ptr [rdi + 8], r11
0xe7e4:	fld	xword ptr [rdx]
0xe7e6:	fstp	xword ptr [rax + 0x10]
0xe7e9:	nop	dword ptr [rax]
0xe7f0:	add	rcx, 1
0xe7f4:	add	rax, 0x20
0xe7f8:	cmp	qword ptr [rsi], rcx
0xe7fb:	ja	0xe7b8


0xe8f0:	mov	r11d, dword ptr [rdi]
0xe8f3:	cmp	r11d, 0x2f
0xe8f7:	ja	0xe93c


0xe894:	mov	r11d, dword ptr [rdi]
0xe897:	cmp	r11d, 0x2f
0xe89b:	ja	0xe92b


0xe3e0:	mov	byte ptr [rax], r14b
0xe3e3:	mov	rbx, r14
0xe3e6:	jmp	0xe104


0xe400:	mov	word ptr [rax], r14w
0xe404:	mov	rbx, r14
0xe407:	jmp	0xe104


0xe2b0:	mov	qword ptr [rax], r14
0xe2b3:	mov	rbx, r14
0xe2b6:	jmp	0xe104


0xe3f0:	mov	dword ptr [rax], r14d
0xe3f3:	mov	rbx, r14
0xe3f6:	jmp	0xe104


0x4eb8:	mov	rax, qword ptr [r13]
0x4ebc:	xor	r8d, r8d
0x4ebf:	mov	rdx, qword ptr [r13 + 0x10]
0x4ec3:	mov	rcx, qword ptr [r13 + 0x18]
0x4ec7:	mov	rsi, qword ptr [r13 + 0x20]
0x4ecb:	mov	rdi, qword ptr [r13 + 0x28]
0x4ecf:	mov	qword ptr [rsp + 0x48], rax
0x4ed4:	mov	rax, qword ptr [r13 + 8]
0x4ed8:	mov	qword ptr [rsp + 0x50], rax
0x4edd:	mov	eax, dword ptr [r13 + 0x30]
0x4ee1:	add	eax, dword ptr [r11 + 0x98]
0x4ee8:	jo	0x6825


0x5ac9:	xor	edi, edi
0x5acb:	call	0x27f0


0x5c4c:	mov	edx, 1
0x5c51:	jmp	0x5942


0x5942:	test	rdx, rdx
0x5945:	mov	qword ptr [rsp + 0x10], rax
0x594a:	jne	0x5328


0x6508:	mov	rdi, qword ptr [r13 - 0xd8]
0x650f:	test	al, al
0x6511:	mov	qword ptr [rsp + 0x48], rdi
0x6516:	je	0x6558


0x59ad:	test	al, al
0x59af:	je	0x5a0a


0x5dce:	mov	rax, qword ptr [r13 + 8]
0x5dd2:	mov	rcx, rax
0x5dd5:	neg	rcx
0x5dd8:	cmp	rax, rdx
0x5ddb:	mov	qword ptr [r11 + 0x40], rcx
0x5ddf:	jne	0x4ff0


0x58ee:	mov	qword ptr [rsp + 0x20], rax
0x58f3:	mov	dword ptr [rsp + 0x18], 0
0x58fb:	jmp	0x58b9


0x6825:	mov	r8d, 1
0x682b:	jmp	0x4eee


0x4eee:	mov	dword ptr [r11 + 0x98], eax
0x4ef5:	xor	eax, eax
0x4ef7:	add	rdi, qword ptr [r11 + 0x90]
0x4efe:	mov	qword ptr [rsp + 0x58], r10
0x4f03:	mov	dword ptr [rsp + 0x60], r9d
0x4f08:	seto	al
0x4f0b:	mov	qword ptr [r11 + 0x90], rdi
0x4f12:	xor	edi, edi
0x4f14:	add	rsi, qword ptr [r11 + 0x88]
0x4f1b:	seto	dil
0x4f1f:	mov	qword ptr [r11 + 0x88], rsi
0x4f26:	xor	esi, esi
0x4f28:	add	rcx, qword ptr [r11 + 0x80]
0x4f2f:	seto	sil
0x4f33:	xor	r10d, r10d
0x4f36:	add	rdx, qword ptr [r11 + 0x78]
0x4f3a:	mov	qword ptr [r11 + 0x80], rcx
0x4f41:	seto	r10b
0x4f45:	mov	qword ptr [r11 + 0x78], rdx
0x4f49:	xor	r9d, r9d
0x4f4c:	mov	rdx, qword ptr [rsp + 0x50]
0x4f51:	add	rdx, qword ptr [r11 + 0x70]
0x4f55:	seto	r9b
0x4f59:	mov	qword ptr [r11 + 0x70], rdx
0x4f5d:	xor	ecx, ecx
0x4f5f:	mov	rdx, qword ptr [rsp + 0x48]
0x4f64:	add	rdx, qword ptr [r11 + 0x68]
0x4f68:	seto	cl
0x4f6b:	or	eax, r8d
0x4f6e:	mov	qword ptr [r11 + 0x68], rdx
0x4f72:	or	eax, edi
0x4f74:	mov	edi, r9d
0x4f77:	or	eax, esi
0x4f79:	or	eax, r10d
0x4f7c:	or	dil, al
0x4f7f:	jne	0x5328


0x5ee9:	jmp	0x5328


0x5e23:	mov	rax, qword ptr [r13 + 0x10]
0x5e27:	mov	qword ptr [r11 + 0x30], rax
0x5e2b:	jmp	0x4ff0


0x58b9:	mov	qword ptr [rsp + 0x28], 0
0x58c2:	mov	qword ptr [rsp + 8], 0
0x58cb:	xor	r10d, r10d
0x58ce:	mov	qword ptr [rsp + 0x10], 0
0x58d7:	xor	r14d, r14d
0x58da:	jmp	0x4ff0


0x56c0:	mov	dword ptr [rsp + 0x18], 0
0x56c8:	mov	qword ptr [rsp + 0x20], 0
0x56d1:	xor	r14d, r14d
0x56d4:	mov	qword ptr [rsp + 0x28], 0
0x56dd:	mov	qword ptr [rsp + 8], 0
0x56e6:	mov	qword ptr [rsp + 0x10], 0
0x56ef:	jmp	0x4ff0


0x586a:	mov	qword ptr [rsp + 8], rax
0x586f:	mov	dword ptr [rsp + 0x18], 0
0x5877:	xor	r10d, r10d
0x587a:	mov	qword ptr [rsp + 0x20], 0
0x5883:	mov	qword ptr [rsp + 0x28], 0
0x588c:	xor	r14d, r14d
0x588f:	mov	qword ptr [rsp + 0x10], 0
0x5898:	jmp	0x4ff0


0x6562:	mov	rax, qword ptr [rsp + 0x70]
0x6567:	sub	ecx, r8d
0x656a:	seto	r8b
0x656e:	mov	dword ptr [r11 + 0x98], ecx
0x6575:	xor	ecx, ecx
0x6577:	sub	rdx, rdi
0x657a:	movzx	r8d, r8b
0x657e:	seto	cl
0x6581:	xor	edi, edi
0x6583:	sub	rax, rsi
0x6586:	seto	dil
0x658a:	mov	qword ptr [r11 + 0x88], rax
0x6591:	xor	esi, esi
0x6593:	mov	rax, qword ptr [rsp + 0x80]
0x659b:	sub	rax, qword ptr [rsp + 0x60]
0x65a0:	mov	qword ptr [rsp + 0x70], rdi
0x65a5:	mov	qword ptr [r11 + 0x90], rdx
0x65ac:	seto	sil
0x65b0:	mov	qword ptr [r11 + 0x80], rax
0x65b7:	xor	edi, edi
0x65b9:	mov	rax, qword ptr [rsp + 0x88]
0x65c1:	sub	rax, qword ptr [rsp + 0x58]
0x65c6:	seto	dil
0x65ca:	mov	qword ptr [r11 + 0x78], rax
0x65ce:	xor	edx, edx
0x65d0:	mov	rax, qword ptr [rsp + 0x68]
0x65d5:	sub	rax, qword ptr [rsp + 0x50]
0x65da:	seto	dl
0x65dd:	mov	qword ptr [r11 + 0x70], rax
0x65e1:	mov	rax, qword ptr [rsp + 0x78]
0x65e6:	mov	qword ptr [rsp + 0x50], rdx
0x65eb:	sub	rax, qword ptr [rsp + 0x48]
0x65f0:	jmp	0x52fc


0x526e:	mov	rax, qword ptr [rsp + 0x70]
0x5273:	add	ecx, r8d
0x5276:	seto	r8b
0x527a:	mov	dword ptr [r11 + 0x98], ecx
0x5281:	xor	ecx, ecx
0x5283:	add	rdx, rdi
0x5286:	movzx	r8d, r8b
0x528a:	seto	cl
0x528d:	xor	edi, edi
0x528f:	add	rax, rsi
0x5292:	seto	dil
0x5296:	mov	qword ptr [r11 + 0x88], rax
0x529d:	xor	esi, esi
0x529f:	mov	rax, qword ptr [rsp + 0x80]
0x52a7:	add	rax, qword ptr [rsp + 0x60]
0x52ac:	mov	qword ptr [rsp + 0x70], rdi
0x52b1:	mov	qword ptr [r11 + 0x90], rdx
0x52b8:	seto	sil
0x52bc:	mov	qword ptr [r11 + 0x80], rax
0x52c3:	xor	edi, edi
0x52c5:	mov	rax, qword ptr [rsp + 0x88]
0x52cd:	add	rax, qword ptr [rsp + 0x58]
0x52d2:	seto	dil
0x52d6:	mov	qword ptr [r11 + 0x78], rax
0x52da:	xor	edx, edx
0x52dc:	mov	rax, qword ptr [rsp + 0x68]
0x52e1:	add	rax, qword ptr [rsp + 0x50]
0x52e6:	seto	dl
0x52e9:	mov	qword ptr [r11 + 0x70], rax
0x52ed:	mov	rax, qword ptr [rsp + 0x78]
0x52f2:	add	rax, qword ptr [rsp + 0x48]
0x52f7:	mov	qword ptr [rsp + 0x50], rdx
0x52fc:	mov	qword ptr [r11 + 0x68], rax
0x5300:	mov	eax, ecx
0x5302:	seto	dl
0x5305:	or	eax, r8d
0x5308:	or	al, byte ptr [rsp + 0x70]
0x530c:	movzx	edx, dl
0x530f:	or	eax, esi
0x5311:	or	eax, edi
0x5313:	or	al, byte ptr [rsp + 0x50]
0x5317:	or	eax, edx
0x5319:	test	al, al
0x531b:	je	0x584e


0x61db:	xor	edi, edi
0x61dd:	call	0x27f0


0x5e96:	mov	rax, qword ptr [r13 + 8]
0x5e9a:	mov	rcx, rax
0x5e9d:	neg	rcx
0x5ea0:	cmp	rax, rdx
0x5ea3:	mov	qword ptr [r11 + 0x28], rcx
0x5ea7:	jne	0x5e23


0x5745:	mov	dword ptr [rsp + 0x18], 0
0x574d:	mov	qword ptr [rsp + 0x20], 0
0x5756:	xor	r10d, r10d
0x5759:	mov	qword ptr [rsp + 0x28], 0
0x5762:	mov	qword ptr [rsp + 8], 0
0x576b:	mov	qword ptr [rsp + 0x10], 0
0x5774:	jmp	0x4ff0


0x5ce4:	mov	r8d, 1
0x5cea:	jmp	0x57af


0x57af:	mov	dword ptr [r11 + 0x98], eax
0x57b6:	xor	eax, eax
0x57b8:	add	rdi, qword ptr [r11 + 0x90]
0x57bf:	seto	al
0x57c2:	mov	qword ptr [r11 + 0x90], rdi
0x57c9:	xor	edi, edi
0x57cb:	add	rsi, qword ptr [r11 + 0x88]
0x57d2:	seto	dil
0x57d6:	mov	qword ptr [r11 + 0x88], rsi
0x57dd:	xor	esi, esi
0x57df:	add	rcx, qword ptr [r11 + 0x80]
0x57e6:	seto	sil
0x57ea:	mov	qword ptr [r11 + 0x80], rcx
0x57f1:	xor	ecx, ecx
0x57f3:	add	rdx, qword ptr [r11 + 0x78]
0x57f7:	seto	cl
0x57fa:	mov	qword ptr [r11 + 0x78], rdx
0x57fe:	mov	rdx, qword ptr [rsp + 0x50]
0x5803:	mov	qword ptr [rsp + 0x58], rcx
0x5808:	xor	ecx, ecx
0x580a:	add	rdx, qword ptr [r11 + 0x70]
0x580e:	seto	cl
0x5811:	mov	qword ptr [r11 + 0x70], rdx
0x5815:	mov	rdx, qword ptr [rsp + 0x48]
0x581a:	mov	qword ptr [rsp + 0x50], rcx
0x581f:	xor	ecx, ecx
0x5821:	add	rdx, qword ptr [r11 + 0x68]
0x5825:	seto	cl
0x5828:	or	eax, r8d
0x582b:	mov	qword ptr [r11 + 0x68], rdx
0x582f:	or	eax, edi
0x5831:	movzx	edi, byte ptr [rsp + 0x50]
0x5836:	or	eax, esi
0x5838:	or	al, byte ptr [rsp + 0x58]
0x583c:	or	dil, al
0x583f:	jne	0x5328


0x5950:	mov	dword ptr [rsp + 0x18], 0
0x5958:	mov	qword ptr [rsp + 0x20], 0
0x5961:	xor	r10d, r10d
0x5964:	mov	qword ptr [rsp + 0x28], 0
0x596d:	mov	qword ptr [rsp + 8], 0
0x5976:	xor	r14d, r14d
0x5979:	jmp	0x4ff0


0x5703:	mov	qword ptr [rsp + 0x28], rax
0x5708:	mov	dword ptr [rsp + 0x18], 0
0x5710:	xor	r10d, r10d
0x5713:	mov	qword ptr [rsp + 0x20], 0
0x571c:	mov	qword ptr [rsp + 8], 0
0x5725:	xor	r14d, r14d
0x5728:	mov	qword ptr [rsp + 0x10], 0
0x5731:	jmp	0x4ff0


0xe027:	jmp	0xdf60


0xdd2e:	cmp	eax, 2
0xdd31:	je	0xdfa8


0xdf60:	push	qword ptr [rbp - 0x3f0]
0xdf66:	push	r9
0xdf68:	mov	r9d, dword ptr [rbp - 0x3b8]
0xdf6f:	jmp	0xdd41


0xe470:	sub	rsp, 8
0xe474:	push	qword ptr [rbp - 0x3f0]
0xe47a:	jmp	0xdef5


0xdedf:	cmp	eax, 2
0xdee2:	jne	0xe2e0


0xe057:	jmp	0xdf60


0xe0b8:	push	qword ptr [rbp - 0x3f0]
0xe0be:	push	r9
0xe0c0:	jmp	0xdf68


0xdbf6:	cmp	eax, 2
0xdbf9:	je	0xe0a0


0xe480:	sub	rsp, 8
0xe484:	push	qword ptr [rbp - 0x3f0]
0xe48a:	sub	rsp, 0x10
0xe48e:	fstp	xword ptr [rsp]
0xe491:	jmp	0xdfbb


0xde55:	cmp	eax, 2
0xde58:	jne	0xe320


0xdf9b:	cmp	eax, 2
0xdf9e:	jne	0xdd37


0xe8d3:	mov	edx, r11d
0xe8d6:	add	rdx, qword ptr [rdi + 0x10]
0xe8da:	add	r11d, 0x10
0xe8de:	mov	dword ptr [rdi + 4], r11d
0xe8e2:	movsd	xmm0, qword ptr [rdx]
0xe8e6:	movsd	qword ptr [rax + 0x10], xmm0
0xe8eb:	jmp	0xe7f0


0xe97d:	mov	rdx, qword ptr [rdi + 8]
0xe981:	lea	r11, [rdx + 8]
0xe985:	mov	qword ptr [rdi + 8], r11
0xe989:	jmp	0xe8e2


0xe813:	mov	edx, r11d
0xe816:	add	rdx, qword ptr [rdi + 0x10]
0xe81a:	add	r11d, 8
0xe81e:	mov	dword ptr [rdi], r11d
0xe821:	mov	rdx, qword ptr [rdx]
0xe824:	mov	qword ptr [rax + 0x10], rdx
0xe828:	jmp	0xe7f0


0xe94a:	mov	rdx, qword ptr [rdi + 8]
0xe94e:	lea	r11, [rdx + 8]
0xe952:	mov	qword ptr [rdi + 8], r11
0xe956:	jmp	0xe821


0xe837:	mov	edx, r11d
0xe83a:	add	rdx, qword ptr [rdi + 0x10]
0xe83e:	add	r11d, 8
0xe842:	mov	dword ptr [rdi], r11d
0xe845:	mov	edx, dword ptr [rdx]
0xe847:	mov	dword ptr [rax + 0x10], edx
0xe84a:	jmp	0xe7f0


0xe96c:	mov	rdx, qword ptr [rdi + 8]
0xe970:	lea	r11, [rdx + 8]
0xe974:	mov	qword ptr [rdi + 8], r11
0xe978:	jmp	0xe845


0xe859:	mov	edx, r11d
0xe85c:	add	rdx, qword ptr [rdi + 0x10]
0xe860:	add	r11d, 8
0xe864:	mov	dword ptr [rdi], r11d
0xe867:	mov	edx, dword ptr [rdx]
0xe869:	mov	byte ptr [rax + 0x10], dl
0xe86c:	jmp	0xe7f0


0xe95b:	mov	rdx, qword ptr [rdi + 8]
0xe95f:	lea	r11, [rdx + 8]
0xe963:	mov	qword ptr [rdi + 8], r11
0xe967:	jmp	0xe867


0xe87b:	mov	edx, r11d
0xe87e:	add	rdx, qword ptr [rdi + 0x10]
0xe882:	add	r11d, 8
0xe886:	mov	dword ptr [rdi], r11d
0xe889:	mov	edx, dword ptr [rdx]
0xe88b:	mov	word ptr [rax + 0x10], dx
0xe88f:	jmp	0xe7f0


0xe91a:	mov	rdx, qword ptr [rdi + 8]
0xe91e:	lea	r11, [rdx + 8]
0xe922:	mov	qword ptr [rdi + 8], r11
0xe926:	jmp	0xe889


0xe7b8:	cmp	dword ptr [rax], 0x16
0xe7bb:	ja	0xe800


0xe8f9:	mov	edx, r11d
0xe8fc:	add	rdx, qword ptr [rdi + 0x10]
0xe900:	add	r11d, 8
0xe904:	mov	dword ptr [rdi], r11d
0xe907:	mov	rdx, qword ptr [rdx]
0xe90a:	test	rdx, rdx
0xe90d:	cmove	rdx, r10
0xe911:	mov	qword ptr [rax + 0x10], rdx
0xe915:	jmp	0xe7f0


0xe93c:	mov	rdx, qword ptr [rdi + 8]
0xe940:	lea	r11, [rdx + 8]
0xe944:	mov	qword ptr [rdi + 8], r11
0xe948:	jmp	0xe907


0xe8a1:	mov	edx, r11d
0xe8a4:	add	rdx, qword ptr [rdi + 0x10]
0xe8a8:	add	r11d, 8
0xe8ac:	mov	dword ptr [rdi], r11d
0xe8af:	mov	rdx, qword ptr [rdx]
0xe8b2:	test	rdx, rdx
0xe8b5:	cmove	rdx, r9
0xe8b9:	mov	qword ptr [rax + 0x10], rdx
0xe8bd:	jmp	0xe7f0


0xe92b:	mov	rdx, qword ptr [rdi + 8]
0xe92f:	lea	r11, [rdx + 8]
0xe933:	mov	qword ptr [rdi + 8], r11
0xe937:	jmp	0xe8af


0xe104:	mov	r8, qword ptr [r13 + 8]
0xe108:	add	r13, 0x58
0xe10c:	mov	rcx, qword ptr [r13]
0xe110:	add	qword ptr [rbp - 0x400], 1
0xe118:	cmp	rcx, r8
0xe11b:	jne	0xd7b9


0x6558:	mov	rax, qword ptr [rsp + 0x48]
0x655d:	jmp	0x5e0c


0x6518:	lea	rsi, [rip + 0xa231]
0x651f:	mov	edx, 5
0x6524:	xor	edi, edi
0x6526:	mov	qword ptr [rsp + 0x60], r11
0x652b:	mov	dword ptr [rsp + 0x58], r9d
0x6530:	mov	qword ptr [rsp + 0x50], r10
0x6535:	call	0x27f0


0x5a0a:	movdqu	xmm0, xmmword ptr [r13 - 0xe0]
0x5a13:	mov	rax, qword ptr [r13 - 0xd0]
0x5a1a:	movups	xmmword ptr [r11 + 0x20], xmm0
0x5a1f:	mov	qword ptr [r11 + 0x30], rax
0x5a23:	mov	rax, qword ptr [r13 - 0x68]
0x5a27:	mov	qword ptr [r11 + 0x38], rax
0x5a2b:	mov	rax, qword ptr [r13 + 8]
0x5a2f:	mov	qword ptr [r11 + 0x40], rax
0x5a33:	jmp	0x4ff0


0x59b1:	mov	rax, qword ptr [r13 - 0xd8]
0x59b8:	lea	rsi, [rip + 0xad59]
0x59bf:	mov	edx, 5
0x59c4:	xor	edi, edi
0x59c6:	mov	qword ptr [rsp + 0x68], r11
0x59cb:	mov	dword ptr [rsp + 0x60], r9d
0x59d0:	mov	qword ptr [rsp + 0x58], r10
0x59d5:	mov	qword ptr [rsp + 0x50], rcx
0x59da:	mov	qword ptr [rsp + 0x48], rax
0x59df:	call	0x27f0


0x5de5:	jmp	0x5328


0x4f85:	test	rcx, rcx
0x4f88:	jne	0x5328


0x52fc:	mov	qword ptr [r11 + 0x68], rax
0x5300:	mov	eax, ecx
0x5302:	seto	dl
0x5305:	or	eax, r8d
0x5308:	or	al, byte ptr [rsp + 0x70]
0x530c:	movzx	edx, dl
0x530f:	or	eax, esi
0x5311:	or	eax, edi
0x5313:	or	al, byte ptr [rsp + 0x50]
0x5317:	or	eax, edx
0x5319:	test	al, al
0x531b:	je	0x584e


0x584e:	mov	byte ptr [r11 + 0xa1], 1
0x5856:	jmp	0x4ff0


0x5ead:	jmp	0x5328


0x5845:	test	rcx, rcx
0x5848:	jne	0x5328


0xdfa8:	sub	rsp, 8
0xdfac:	push	qword ptr [rbp - 0x3f0]
0xdfb2:	push	r9
0xdfb4:	mov	eax, dword ptr [rbp - 0x3b4]
0xdfba:	push	rax
0xdfbb:	mov	r9d, dword ptr [rbp - 0x3b8]
0xdfc2:	mov	r8, qword ptr [rbp - 0x3d8]
0xdfc9:	mov	rsi, r10
0xdfcc:	mov	rcx, -1
0xdfd3:	mov	edx, 1
0xdfd8:	xor	eax, eax
0xdfda:	mov	qword ptr [rbp - 0x430], r10
0xdfe1:	call	0x2700


0xdd37:	sub	rsp, 8
0xdd3b:	push	qword ptr [rbp - 0x3f0]
0xdd41:	mov	r8, qword ptr [rbp - 0x3d8]
0xdd48:	mov	rcx, -1
0xdd4f:	mov	edx, 1
0xdd54:	mov	rsi, r10
0xdd57:	xor	eax, eax
0xdd59:	mov	qword ptr [rbp - 0x430], r10
0xdd60:	call	0x2700


0xdd41:	mov	r8, qword ptr [rbp - 0x3d8]
0xdd48:	mov	rcx, -1
0xdd4f:	mov	edx, 1
0xdd54:	mov	rsi, r10
0xdd57:	xor	eax, eax
0xdd59:	mov	qword ptr [rbp - 0x430], r10
0xdd60:	call	0x2700


0xdef5:	mov	r9d, dword ptr [rbp - 0x3b8]
0xdefc:	mov	r8, qword ptr [rbp - 0x3d8]
0xdf03:	mov	rsi, r10
0xdf06:	mov	rcx, -1
0xdf0d:	mov	edx, 1
0xdf12:	mov	eax, 1
0xdf17:	mov	qword ptr [rbp - 0x430], r10
0xdf1e:	call	0x2700


0xdee8:	mov	eax, dword ptr [rbp - 0x3b4]
0xdeee:	push	qword ptr [rbp - 0x3f0]
0xdef4:	push	rax
0xdef5:	mov	r9d, dword ptr [rbp - 0x3b8]
0xdefc:	mov	r8, qword ptr [rbp - 0x3d8]
0xdf03:	mov	rsi, r10
0xdf06:	mov	rcx, -1
0xdf0d:	mov	edx, 1
0xdf12:	mov	eax, 1
0xdf17:	mov	qword ptr [rbp - 0x430], r10
0xdf1e:	call	0x2700


0xe2e0:	mov	r9, qword ptr [rbp - 0x3f0]
0xe2e7:	mov	r8, qword ptr [rbp - 0x3d8]
0xe2ee:	mov	rsi, r10
0xe2f1:	mov	rcx, -1
0xe2f8:	mov	edx, 1
0xe2fd:	mov	eax, 1
0xe302:	mov	qword ptr [rbp - 0x430], r10
0xe309:	call	0x2700


0xdf68:	mov	r9d, dword ptr [rbp - 0x3b8]
0xdf6f:	jmp	0xdd41


0xe0a0:	sub	rsp, 8
0xe0a4:	push	qword ptr [rbp - 0x3f0]
0xe0aa:	push	r9
0xe0ac:	jmp	0xdfb4


0xdbff:	sub	rsp, 8
0xdc03:	push	qword ptr [rbp - 0x3f0]
0xdc09:	mov	r8, qword ptr [rbp - 0x3d8]
0xdc10:	mov	rsi, r10
0xdc13:	mov	rcx, -1
0xdc1a:	mov	edx, 1
0xdc1f:	xor	eax, eax
0xdc21:	mov	qword ptr [rbp - 0x430], r10
0xdc28:	call	0x2700


0xdfbb:	mov	r9d, dword ptr [rbp - 0x3b8]
0xdfc2:	mov	r8, qword ptr [rbp - 0x3d8]
0xdfc9:	mov	rsi, r10
0xdfcc:	mov	rcx, -1
0xdfd3:	mov	edx, 1
0xdfd8:	xor	eax, eax
0xdfda:	mov	qword ptr [rbp - 0x430], r10
0xdfe1:	call	0x2700


0xde5e:	mov	eax, dword ptr [rbp - 0x3b4]
0xde64:	sub	rsp, 8
0xde68:	push	qword ptr [rbp - 0x3f0]
0xde6e:	mov	r9d, dword ptr [rbp - 0x3b8]
0xde75:	mov	r8, qword ptr [rbp - 0x3d8]
0xde7c:	mov	rsi, r10
0xde7f:	sub	rsp, 0x18
0xde83:	mov	rcx, -1
0xde8a:	mov	edx, 1
0xde8f:	fstp	xword ptr [rsp + 8]
0xde93:	push	rax
0xde94:	xor	eax, eax
0xde96:	mov	qword ptr [rbp - 0x430], r10
0xde9d:	call	0x2700


0xe320:	sub	rsp, 0x10
0xe324:	mov	r9, qword ptr [rbp - 0x3f0]
0xe32b:	fstp	xword ptr [rsp]
0xe32e:	jmp	0xdc09


0xe7f0:	add	rcx, 1
0xe7f4:	add	rax, 0x20
0xe7f8:	cmp	qword ptr [rsi], rcx
0xe7fb:	ja	0xe7b8


0xe8e2:	movsd	xmm0, qword ptr [rdx]
0xe8e6:	movsd	qword ptr [rax + 0x10], xmm0
0xe8eb:	jmp	0xe7f0


0xe821:	mov	rdx, qword ptr [rdx]
0xe824:	mov	qword ptr [rax + 0x10], rdx
0xe828:	jmp	0xe7f0


0xe845:	mov	edx, dword ptr [rdx]
0xe847:	mov	dword ptr [rax + 0x10], edx
0xe84a:	jmp	0xe7f0


0xe867:	mov	edx, dword ptr [rdx]
0xe869:	mov	byte ptr [rax + 0x10], dl
0xe86c:	jmp	0xe7f0


0xe889:	mov	edx, dword ptr [rdx]
0xe88b:	mov	word ptr [rax + 0x10], dx
0xe88f:	jmp	0xe7f0


0xe907:	mov	rdx, qword ptr [rdx]
0xe90a:	test	rdx, rdx
0xe90d:	cmove	rdx, r10
0xe911:	mov	qword ptr [rax + 0x10], rdx
0xe915:	jmp	0xe7f0


0xe8af:	mov	rdx, qword ptr [rdx]
0xe8b2:	test	rdx, rdx
0xe8b5:	cmove	rdx, r9
0xe8b9:	mov	qword ptr [rax + 0x10], rdx
0xe8bd:	jmp	0xe7f0


0x5e0c:	movdqu	xmm0, xmmword ptr [r13]
0x5e12:	mov	qword ptr [r11 + 0x38], rax
0x5e16:	mov	rax, qword ptr [r13 - 0x68]
0x5e1a:	movups	xmmword ptr [r11 + 0x20], xmm0
0x5e1f:	mov	qword ptr [r11 + 0x40], rax
0x5e23:	mov	rax, qword ptr [r13 + 0x10]
0x5e27:	mov	qword ptr [r11 + 0x30], rax
0x5e2b:	jmp	0x4ff0


0x4f8e:	lea	rsi, [rip + 0xb290]
0x4f95:	mov	byte ptr [r11 + 0xa1], 1
0x4f9d:	xor	edi, edi
0x4f9f:	mov	edx, 5
0x4fa4:	mov	qword ptr [rsp + 0x48], r11
0x4fa9:	call	0x27f0


0xdfb4:	mov	eax, dword ptr [rbp - 0x3b4]
0xdfba:	push	rax
0xdfbb:	mov	r9d, dword ptr [rbp - 0x3b8]
0xdfc2:	mov	r8, qword ptr [rbp - 0x3d8]
0xdfc9:	mov	rsi, r10
0xdfcc:	mov	rcx, -1
0xdfd3:	mov	edx, 1
0xdfd8:	xor	eax, eax
0xdfda:	mov	qword ptr [rbp - 0x430], r10
0xdfe1:	call	0x2700


0xdc09:	mov	r8, qword ptr [rbp - 0x3d8]
0xdc10:	mov	rsi, r10
0xdc13:	mov	rcx, -1
0xdc1a:	mov	edx, 1
0xdc1f:	xor	eax, eax
0xdc21:	mov	qword ptr [rbp - 0x430], r10
0xdc28:	call	0x2700


0xdc2d:	pop	rsi
0xdc2e:	pop	rdi
0xdc2f:	mov	r10, qword ptr [rbp - 0x430]
0xdc36:	mov	ecx, dword ptr [rbp - 0x3bc]
0xdc3c:	test	ecx, ecx
0xdc3e:	js	0xdd7c


0xdd7c:	mov	rdi, qword ptr [rbp - 0x3f8]
0xdd83:	cmp	byte ptr [rdi + 1], 0
0xdd87:	jne	0xe0c8


0xdc44:	movsxd	rdx, ecx
0xdc47:	cmp	rdx, r10
0xdc4a:	jae	0xdc5a


0xdd8d:	test	eax, eax
0xdd8f:	jns	0xdc5e


0xe0c8:	mov	byte ptr [rdi + 1], 0
0xe0cc:	jmp	0xdb80


0xdc4c:	add	rdx, r15
0xdc4f:	cmp	byte ptr [rdx + r14], 0
0xdc54:	jne	0xe596


0xdc5a:	cmp	ecx, eax
0xdc5c:	jge	0xdc66


0xdd95:	mov	rax, qword ptr [rbp - 0x3c8]
0xdd9c:	mov	ebx, dword ptr [rax]
0xdd9e:	test	ebx, ebx
0xdda0:	jne	0xddc0


0xdc5e:	mov	dword ptr [rbp - 0x3bc], eax
0xdc64:	mov	ecx, eax
0xdc66:	lea	eax, [rcx + 1]
0xdc69:	cmp	rax, r10
0xdc6c:	jb	0xe4a0


0xdb80:	mov	rax, qword ptr [rbp - 0x3c8]
0xdb87:	mov	rbx, r12
0xdb8a:	mov	r10d, 0x7fffffff
0xdb90:	sub	rbx, r14
0xdb93:	mov	dword ptr [rbp - 0x3bc], 0xffffffff
0xdb9d:	cmp	rbx, 0x7fffffff
0xdba4:	mov	dword ptr [rax], 0
0xdbaa:	mov	eax, dword ptr [rbp - 0x3d0]
0xdbb0:	cmovbe	r10, rbx
0xdbb4:	cmp	eax, 0x11
0xdbb7:	ja	0xe596


0xdc66:	lea	eax, [rcx + 1]
0xdc69:	cmp	rax, r10
0xdc6c:	jb	0xe4a0


0xdda2:	movzx	eax, byte ptr [r13 + 0x48]
0xdda7:	mov	ebx, 0x16
0xddac:	and	eax, 0xffffffef
0xddaf:	cmp	al, 0x63
0xddb1:	mov	eax, 0x54
0xddb6:	cmove	ebx, eax
0xddb9:	nop	dword ptr [rax]
0xddc0:	cmp	r15, qword ptr [rbp - 0x3e8]
0xddc7:	je	0xddd2


0xddc0:	cmp	r15, qword ptr [rbp - 0x3e8]
0xddc7:	je	0xddd2


0xe4a0:	mov	rax, qword ptr [rbp - 0x3c8]
0xe4a7:	mov	edi, dword ptr [rbp - 0x424]
0xe4ad:	movsxd	rbx, ecx
0xe4b0:	add	rbx, r14
0xe4b3:	mov	dword ptr [rax], edi
0xe4b5:	jmp	0xe104


0xdc72:	cmp	rbx, 0x7ffffffe
0xdc79:	ja	0xe4c0


0xddd2:	mov	rax, qword ptr [rbp - 0x420]
0xddd9:	test	rax, rax
0xdddc:	je	0xdde6


0xddc9:	test	r15, r15
0xddcc:	jne	0xe57c


0xdc7f:	lea	rsi, [r12 + r12]
0xdc83:	lea	edx, [rcx + 2]
0xdc86:	test	r12, r12
0xdc89:	mov	rax, -1
0xdc90:	cmovns	rax, rsi
0xdc94:	add	rdx, r14
0xdc97:	jb	0xe758


0xe4c0:	cmp	r15, qword ptr [rbp - 0x3e8]
0xe4c7:	je	0xe4d2


0xdde6:	mov	rax, qword ptr [rbp - 0x408]
0xdded:	mov	rdi, qword ptr [rbp - 0x2b8]
0xddf4:	add	rax, 0x20
0xddf8:	cmp	rdi, rax
0xddfb:	je	0xde02


0xddde:	mov	rdi, rax
0xdde1:	call	0x2710


0xe57c:	mov	rdi, r15
0xe57f:	call	0x2710


0xe758:	cmp	r12, -1
0xe75c:	je	0xdb80


0xdc9d:	cmp	rax, rdx
0xdca0:	cmovb	rax, rdx
0xdca4:	cmp	r12, rax
0xdca7:	jae	0xdb80


0xe4d2:	mov	rax, qword ptr [rbp - 0x420]
0xe4d9:	test	rax, rax
0xe4dc:	je	0xe4e6


0xe4c9:	test	r15, r15
0xe4cc:	jne	0xe589


0xde02:	mov	rax, qword ptr [rbp - 0x410]
0xde09:	mov	rdi, qword ptr [rbp - 0x3a8]
0xde10:	add	rax, 0x10
0xde14:	cmp	rdi, rax
0xde17:	je	0xde1e


0xddfd:	call	0x2710


0xe762:	jmp	0xd7e1


0xdcad:	test	r12, r12
0xdcb0:	js	0xd7e1


0xe4e6:	mov	rax, qword ptr [rbp - 0x408]
0xe4ed:	mov	rdi, qword ptr [rbp - 0x2b8]
0xe4f4:	add	rax, 0x20
0xe4f8:	cmp	rdi, rax
0xe4fb:	je	0xe502


0xe4de:	mov	rdi, rax
0xe4e1:	call	0x2710


0xe589:	mov	rdi, r15
0xe58c:	call	0x2710


0xde1e:	mov	rax, qword ptr [rbp - 0x3c8]
0xde25:	xor	r15d, r15d
0xde28:	mov	dword ptr [rax], ebx
0xde2a:	jmp	0xd84f


0xde19:	call	0x2710


0xd7e1:	cmp	r15, qword ptr [rbp - 0x3e8]
0xd7e8:	je	0xd7f3


0xdcb6:	cmp	rsi, rax
0xdcb9:	mov	r12, rsi
0xdcbc:	jae	0xdccb


0xe502:	mov	rax, qword ptr [rbp - 0x410]
0xe509:	mov	rdi, qword ptr [rbp - 0x3a8]
0xe510:	add	rax, 0x10
0xe514:	cmp	rdi, rax
0xe517:	je	0xe51e


0xe4fd:	call	0x2710


0xdcbe:	cmp	rax, -1
0xdcc2:	je	0xd7e1


0xdccb:	cmp	r15, qword ptr [rbp - 0x3e8]
0xdcd2:	sete	bl
0xdcd5:	test	r15, r15
0xdcd8:	je	0xe060


0xe51e:	mov	rax, qword ptr [rbp - 0x3c8]
0xe525:	xor	r15d, r15d
0xe528:	mov	dword ptr [rax], 0x4b
0xe52e:	jmp	0xd84f


0xe519:	call	0x2710


0xdcc8:	mov	r12, rax
0xdccb:	cmp	r15, qword ptr [rbp - 0x3e8]
0xdcd2:	sete	bl
0xdcd5:	test	r15, r15
0xdcd8:	je	0xe060


0xe060:	mov	rdi, r12
0xe063:	call	0x29d0


0xdcde:	test	bl, bl
0xdce0:	jne	0xe060


0xdce6:	mov	rsi, r12
0xdce9:	mov	rdi, r15
0xdcec:	call	0x2a20


0xdcf1:	test	rax, rax
0xdcf4:	je	0xd7e1


0xdcfa:	mov	r15, rax
0xdcfd:	jmp	0xdb80


0xe068:	test	rax, rax
0xe06b:	mov	rcx, rax
0xe06e:	je	0xd7e1


0xe074:	test	r14, r14
0xe077:	je	0xe130


0xe130:	mov	r15, rcx
0xe133:	jmp	0xdb80


0xe07d:	test	bl, bl
0xe07f:	je	0xe130


0xe085:	mov	rsi, r15
0xe088:	mov	rdx, r14
0xe08b:	mov	rdi, rax
0xe08e:	call	0x2970


0xe093:	mov	r15, rax
0xe096:	jmp	0xdb80


0xe591:	jmp	0xe4d2


0xe584:	jmp	0xddd2


0xdfe6:	add	rsp, 0x20
0xdfea:	mov	r10, qword ptr [rbp - 0x430]
0xdff1:	jmp	0xdc36


0xdc36:	mov	ecx, dword ptr [rbp - 0x3bc]
0xdc3c:	test	ecx, ecx
0xdc3e:	js	0xdd7c


0xdea2:	add	rsp, 0x30
0xdea6:	mov	r10, qword ptr [rbp - 0x430]
0xdead:	jmp	0xdc36


0xe30e:	mov	r10, qword ptr [rbp - 0x430]
0xe315:	jmp	0xdc36


0xdf23:	pop	r8
0xdf25:	mov	r10, qword ptr [rbp - 0x430]
0xdf2c:	pop	r9
0xdf2e:	jmp	0xdc36


0xdd65:	pop	rdx
0xdd66:	pop	rcx
0xdd67:	mov	ecx, dword ptr [rbp - 0x3bc]
0xdd6d:	mov	r10, qword ptr [rbp - 0x430]
0xdd74:	test	ecx, ecx
0xdd76:	jns	0xdc44


0x5c9b:	mov	rax, qword ptr [r13]
0x5c9f:	xor	r8d, r8d
0x5ca2:	mov	rdx, qword ptr [r13 + 0x10]
0x5ca6:	mov	rcx, qword ptr [r13 + 0x18]
0x5caa:	mov	rsi, qword ptr [r13 + 0x20]
0x5cae:	mov	rdi, qword ptr [r13 + 0x28]
0x5cb2:	mov	qword ptr [rsp + 0x68], rax
0x5cb7:	mov	rax, qword ptr [r13 + 8]
0x5cbb:	mov	qword ptr [rsp + 0x70], rax
0x5cc0:	add	rsp, 0x20
0x5cc4:	mov	r11, qword ptr [rsp + 0x58]
0x5cc9:	mov	eax, dword ptr [r13 + 0x30]
0x5ccd:	mov	r10, qword ptr [rsp + 0x60]
0x5cd2:	mov	r9d, dword ptr [rsp + 0x68]
0x5cd7:	add	eax, dword ptr [r11 + 0x98]
0x5cde:	jno	0x57af


0x5b88:	add	rsp, 0x20
0x5b8c:	mov	r11, qword ptr [rsp + 0x48]
0x5b91:	mov	r10, qword ptr [rsp + 0x50]
0x5b96:	mov	r9d, dword ptr [rsp + 0x58]
0x5b9b:	jmp	0x4ff0


0x607a:	test	al, al
0x607c:	mov	r11, qword ptr [rsp + 0x48]
0x6081:	mov	r10, qword ptr [rsp + 0x50]
0x6086:	mov	r9d, dword ptr [rsp + 0x58]
0x608b:	jne	0x4ff0


0x6091:	jmp	0x5328


0x5fb5:	test	al, al
0x5fb7:	je	0x5328


0x5fbd:	mov	r11, qword ptr [rsp + 0x48]
0x5fc2:	xor	edx, edx
0x5fc4:	mov	r10, qword ptr [rsp + 0x50]
0x5fc9:	mov	r9d, dword ptr [rsp + 0x58]
0x5fce:	movsxd	rax, dword ptr [r11 + 0x18]
0x5fd2:	add	rax, qword ptr [r13 - 0x70]
0x5fd6:	movsxd	rcx, eax
0x5fd9:	seto	dl
0x5fdc:	mov	dword ptr [r11 + 0x18], eax
0x5fe0:	cmp	rax, rcx
0x5fe3:	mov	ecx, 1
0x5fe8:	cmovne	edx, ecx
0x5feb:	test	edx, edx
0x5fed:	je	0x4ff0


0x5ff3:	jmp	0x5328


0x4fae:	mov	r11, qword ptr [rsp + 0x48]
0x4fb3:	mov	r10, qword ptr [rsp + 0x58]
0x4fb8:	mov	r9d, dword ptr [rsp + 0x60]
0x4fbd:	cmp	byte ptr [r11 + 0xd9], 0
0x4fc5:	je	0x4ff0


0x4fc7:	mov	dword ptr [rsp + 0x58], r9d
0x4fcc:	mov	qword ptr [rsp + 0x50], r10
0x4fd1:	mov	rsi, r11
0x4fd4:	mov	rdi, rax
0x4fd7:	call	0x45c0


0x4fdc:	mov	r11, qword ptr [rsp + 0x48]
0x4fe1:	mov	r10, qword ptr [rsp + 0x50]
0x4fe6:	mov	r9d, dword ptr [rsp + 0x58]
0x4feb:	nop	dword ptr [rax + rax]
0x4ff0:	mov	rdi, qword ptr [rsp + 0x10]
0x4ff5:	lea	rax, [rbx*8]
0x4ffd:	mov	qword ptr [rsp + 0xd0], r14
0x5005:	mov	qword ptr [rsp + 0xd8], r10
0x500d:	mov	rcx, r12
0x5010:	sub	rax, rbx
0x5013:	movdqa	xmm0, xmmword ptr [rsp + 0xd0]
0x501c:	mov	qword ptr [rsp + 0xe0], rdi
0x5024:	mov	rdi, qword ptr [rsp + 8]
0x5029:	shl	rax, 3
0x502d:	sub	r13, rax
0x5030:	add	rbx, rbx
0x5033:	mov	rax, r13
0x5036:	sub	rcx, rbx
0x5039:	lea	r13, [r13 + 0x38]
0x503d:	mov	qword ptr [rsp + 0xe8], rdi
0x5045:	mov	rdi, qword ptr [rsp + 0x28]
0x504a:	movups	xmmword ptr [rax + 0x38], xmm0
0x504e:	mov	qword ptr [rsp + 0xf0], rdi
0x5056:	mov	rdi, qword ptr [rsp + 0x20]
0x505b:	movdqa	xmm0, xmmword ptr [rsp + 0xe0]
0x5064:	mov	qword ptr [rsp + 0xf8], rdi
0x506c:	mov	edi, dword ptr [rsp + 0x18]
0x5070:	movups	xmmword ptr [rax + 0x48], xmm0
0x5074:	mov	dword ptr [rsp + 0x100], edi
0x507b:	mov	rdx, qword ptr [rsp + 0x100]
0x5083:	movdqa	xmm0, xmmword ptr [rsp + 0xf0]
0x508c:	movsx	edi, word ptr [rcx]
0x508f:	mov	qword ptr [rax + 0x68], rdx
0x5093:	lea	rdx, [rip + 0xc226]
0x509a:	movups	xmmword ptr [rax + 0x58], xmm0
0x509e:	lea	rax, [rip + 0xc09b]
0x50a5:	mov	esi, edi
0x50a7:	movzx	eax, byte ptr [rax + rbp]
0x50ab:	sub	eax, 0x1c
0x50ae:	cdqe	
0x50b0:	movsx	edx, byte ptr [rdx + rax]
0x50b4:	add	edx, edi
0x50b6:	cmp	edx, 0x70
0x50b9:	ja	0x50d3


0x59e4:	mov	rcx, qword ptr [rsp + 0x50]
0x59e9:	mov	rsi, qword ptr [rsp + 0x48]
0x59ee:	mov	rdi, rax
0x59f1:	xor	eax, eax
0x59f3:	mov	rdx, rcx
0x59f6:	call	0x42c0


0x59fb:	mov	r11, qword ptr [rsp + 0x68]
0x5a00:	mov	r9d, dword ptr [rsp + 0x60]
0x5a05:	mov	r10, qword ptr [rsp + 0x58]
0x5a0a:	movdqu	xmm0, xmmword ptr [r13 - 0xe0]
0x5a13:	mov	rax, qword ptr [r13 - 0xd0]
0x5a1a:	movups	xmmword ptr [r11 + 0x20], xmm0
0x5a1f:	mov	qword ptr [r11 + 0x30], rax
0x5a23:	mov	rax, qword ptr [r13 - 0x68]
0x5a27:	mov	qword ptr [r11 + 0x38], rax
0x5a2b:	mov	rax, qword ptr [r13 + 8]
0x5a2f:	mov	qword ptr [r11 + 0x40], rax
0x5a33:	jmp	0x4ff0


0x653a:	mov	rsi, qword ptr [rsp + 0x48]
0x653f:	mov	rdi, rax
0x6542:	xor	eax, eax
0x6544:	call	0x42c0


0x6549:	mov	r11, qword ptr [rsp + 0x60]
0x654e:	mov	r9d, dword ptr [rsp + 0x58]
0x6553:	mov	r10, qword ptr [rsp + 0x50]
0x6558:	mov	rax, qword ptr [rsp + 0x48]
0x655d:	jmp	0x5e0c


0x61e2:	mov	r11, qword ptr [rsp + 0x58]
0x61e7:	mov	r10, qword ptr [rsp + 0x48]
0x61ec:	mov	r9d, dword ptr [rsp + 0x50]
0x61f1:	cmp	byte ptr [r11 + 0xd9], 0
0x61f9:	je	0x4ff0


0x61ff:	mov	dword ptr [rsp + 0x58], r9d
0x6204:	mov	qword ptr [rsp + 0x50], r10
0x6209:	mov	rsi, r11
0x620c:	mov	qword ptr [rsp + 0x48], r11
0x6211:	jmp	0x4fd4


0x4fd4:	mov	rdi, rax
0x4fd7:	call	0x45c0


0x5ad0:	mov	r11, qword ptr [rsp + 0x48]
0x5ad5:	mov	r10, qword ptr [rsp + 0x50]
0x5ada:	mov	r9d, dword ptr [rsp + 0x58]
0x5adf:	cmp	byte ptr [r11 + 0xd9], 0
0x5ae7:	mov	rsi, r11
0x5aea:	je	0x4ff0


0x5af0:	mov	rdi, rax
0x5af3:	call	0x4970


0x5af8:	mov	r11, qword ptr [rsp + 0x48]
0x5afd:	mov	r10, qword ptr [rsp + 0x50]
0x5b02:	mov	r9d, dword ptr [rsp + 0x58]
0x5b07:	jmp	0x4ff0


0x6238:	mov	r11, qword ptr [rsp + 0x58]
0x623d:	mov	r10, qword ptr [rsp + 0x48]
0x6242:	mov	r9d, dword ptr [rsp + 0x50]
0x6247:	cmp	byte ptr [r11 + 0xd9], 0
0x624f:	je	0x4ff0


0x6255:	mov	dword ptr [rsp + 0x58], r9d
0x625a:	mov	qword ptr [rsp + 0x50], r10
0x625f:	mov	rsi, r11
0x6262:	mov	qword ptr [rsp + 0x48], r11
0x6267:	jmp	0x5af0


0xabbe:	push	r15
0xabc0:	jmp	0xab66


0xab66:	push	r14
0xab68:	mov	rdx, rax
0xab6b:	mov	r9, r13
0xab6e:	mov	r8, r12
0xab71:	mov	rcx, rbx
0xab74:	mov	rdi, rbp
0xab77:	mov	esi, 1
0xab7c:	xor	eax, eax
0xab7e:	call	0x2af0


0xab83:	pop	rax
0xab84:	pop	rdx
0xab85:	add	rsp, 0x28
0xab89:	pop	rbx
0xab8a:	pop	rbp
0xab8b:	pop	r12
0xab8d:	pop	r13
0xab8f:	pop	r14
0xab91:	pop	r15
0xab93:	ret	


0xac67:	push	r13
0xac69:	push	r12
0xac6b:	push	r15
0xac6d:	push	r14
0xac6f:	mov	r9, qword ptr [rsp + 0x28]
0xac74:	jmp	0xac03


0xac03:	mov	r8, qword ptr [rsp + 0x20]
0xac08:	mov	rcx, rbx
0xac0b:	mov	rdx, rax
0xac0e:	mov	rdi, rbp
0xac11:	mov	esi, 1
0xac16:	xor	eax, eax
0xac18:	call	0x2af0


0xac1d:	add	rsp, 0x20
0xac21:	add	rsp, 0x28
0xac25:	pop	rbx
0xac26:	pop	rbp
0xac27:	pop	r12
0xac29:	pop	r13
0xac2b:	pop	r14
0xac2d:	pop	r15
0xac2f:	ret	


0xab0e:	add	rsp, 0x28
0xab12:	mov	r9, r13
0xab15:	mov	r8, r12
0xab18:	mov	rcx, rbx
0xab1b:	mov	rdi, rbp
0xab1e:	mov	rdx, rax
0xab21:	pop	rbx
0xab22:	pop	rbp
0xab23:	pop	r12
0xab25:	pop	r13
0xab27:	pop	r14
0xab29:	pop	r15
0xab2b:	mov	esi, 1
0xab30:	xor	eax, eax
0xab32:	jmp	0x2af0


0xabf6:	sub	rsp, 8
0xabfa:	mov	r9, r13
0xabfd:	push	r12
0xabff:	push	r15
0xac01:	push	r14
0xac03:	mov	r8, qword ptr [rsp + 0x20]
0xac08:	mov	rcx, rbx
0xac0b:	mov	rdx, rax
0xac0e:	mov	rdi, rbp
0xac11:	mov	esi, 1
0xac16:	xor	eax, eax
0xac18:	call	0x2af0


0xaac2:	add	rsp, 0x28
0xaac6:	mov	r8, r12
0xaac9:	mov	rcx, rbx
0xaacc:	mov	rdi, rbp
0xaacf:	mov	rdx, rax
0xaad2:	mov	esi, 1
0xaad7:	pop	rbx
0xaad8:	pop	rbp
0xaad9:	pop	r12
0xaadb:	pop	r13
0xaadd:	pop	r14
0xaadf:	pop	r15
0xaae1:	xor	eax, eax
0xaae3:	jmp	0x2af0


0xaa7e:	add	rsp, 0x28
0xaa82:	mov	rcx, rbx
0xaa85:	mov	rdi, rbp
0xaa88:	pop	rbx
0xaa89:	pop	rbp
0xaa8a:	pop	r12
0xaa8c:	pop	r13
0xaa8e:	pop	r14
0xaa90:	pop	r15
0xaa92:	mov	rdx, rax
0xaa95:	mov	esi, 1
0xaa9a:	xor	eax, eax
0xaa9c:	jmp	0x2af0


0xa9a0:	sub	rsp, 8
0xa9a4:	mov	r9, qword ptr [rsp + 0x18]
0xa9a9:	mov	rdx, rax
0xa9ac:	mov	rcx, rbx
0xa9af:	mov	esi, 1
0xa9b4:	mov	rdi, rbp
0xa9b7:	xor	eax, eax
0xa9b9:	push	r9
0xa9bb:	push	r13
0xa9bd:	push	r12
0xa9bf:	push	r15
0xa9c1:	push	r14
0xa9c3:	mov	r9, qword ptr [rsp + 0x30]
0xa9c8:	mov	r8, qword ptr [rsp + 0x38]
0xa9cd:	call	0x2af0


0xab62:	sub	rsp, 8
0xab66:	push	r14
0xab68:	mov	rdx, rax
0xab6b:	mov	r9, r13
0xab6e:	mov	r8, r12
0xab71:	mov	rcx, rbx
0xab74:	mov	rdi, rbp
0xab77:	mov	esi, 1
0xab7c:	xor	eax, eax
0xab7e:	call	0x2af0


0x98b0:	sub	rsp, 8
0x98b4:	mov	rcx, rbp
0x98b7:	mov	rsi, r13
0x98ba:	push	qword ptr [rsp + 0x68]
0x98be:	push	qword ptr [rsp + 0x78]
0x98c2:	mov	rdi, r14
0x98c5:	push	0
0x98c7:	mov	r9d, dword ptr [rsp + 0x98]
0x98cf:	mov	r8d, dword ptr [rsp + 0x28]
0x98d4:	mov	rdx, qword ptr [rsp + 0x30]
0x98d9:	and	r9d, 0xfffffffd
0x98dd:	call	0x8d10


0x98e2:	add	rsp, 0x20
0x98e6:	mov	r15, rax
0x98e9:	mov	rbx, qword ptr [rsp + 0xa8]
0x98f1:	xor	rbx, qword ptr fs:[0x28]
0x98fa:	mov	rax, r15
0x98fd:	jne	0x9f03


0x9903:	add	rsp, 0xb8
0x990a:	pop	rbx
0x990b:	pop	rbp
0x990c:	pop	r12
0x990e:	pop	r13
0x9910:	pop	r14
0x9912:	pop	r15
0x9914:	ret	


0x9f03:	call	0x2830


0x9ead:	sub	rsp, 8
0x9eb1:	mov	r8d, 5
0x9eb7:	mov	rcx, r11
0x9eba:	push	qword ptr [rsp + 0x68]
0x9ebe:	push	qword ptr [rsp + 0x78]
0x9ec2:	mov	rdi, r14
0x9ec5:	push	qword ptr [rsp + 0x38]
0x9ec9:	mov	r9d, dword ptr [rsp + 0x98]
0x9ed1:	mov	rdx, qword ptr [rsp + 0x30]
0x9ed6:	mov	rsi, qword ptr [rsp + 0x70]
0x9edb:	call	0x8d10


0x9ee0:	add	rsp, 0x20
0x9ee4:	mov	r15, rax
0x9ee7:	jmp	0x98e9


0x98e9:	mov	rbx, qword ptr [rsp + 0xa8]
0x98f1:	xor	rbx, qword ptr fs:[0x28]
0x98fa:	mov	rax, r15
0x98fd:	jne	0x9f03


0x26d0:	push	qword ptr [rip + 0x2126ba]
0x26d6:	jmp	qword ptr [rip + 0x2126bc]


0x26dc:	nop	dword ptr [rax]


0x26e6:	push	0
0x26eb:	jmp	0x26d0


0x26f6:	push	1
0x26fb:	jmp	0x26d0


0x2706:	push	2
0x270b:	jmp	0x26d0


0x2716:	push	3
0x271b:	jmp	0x26d0


0x2726:	push	4
0x272b:	jmp	0x26d0


0x2736:	push	5
0x273b:	jmp	0x26d0


0x2746:	push	6
0x274b:	jmp	0x26d0


0x2756:	push	7
0x275b:	jmp	0x26d0


0x2766:	push	8
0x276b:	jmp	0x26d0


0x2776:	push	9
0x277b:	jmp	0x26d0


0x2786:	push	0xa
0x278b:	jmp	0x26d0


0x2796:	push	0xb
0x279b:	jmp	0x26d0


0x27a6:	push	0xc
0x27ab:	jmp	0x26d0


0x27b6:	push	0xd
0x27bb:	jmp	0x26d0


0x27c6:	push	0xe
0x27cb:	jmp	0x26d0


0x27d6:	push	0xf
0x27db:	jmp	0x26d0


0x27e6:	push	0x10
0x27eb:	jmp	0x26d0


0x27f6:	push	0x11
0x27fb:	jmp	0x26d0


0x2806:	push	0x12
0x280b:	jmp	0x26d0


0x2816:	push	0x13
0x281b:	jmp	0x26d0


0x2826:	push	0x14
0x282b:	jmp	0x26d0


0x2836:	push	0x15
0x283b:	jmp	0x26d0


0x2846:	push	0x16
0x284b:	jmp	0x26d0


0x2856:	push	0x17
0x285b:	jmp	0x26d0


0x2866:	push	0x18
0x286b:	jmp	0x26d0


0x2876:	push	0x19
0x287b:	jmp	0x26d0


0x2886:	push	0x1a
0x288b:	jmp	0x26d0


0x2896:	push	0x1b
0x289b:	jmp	0x26d0


0x28a6:	push	0x1c
0x28ab:	jmp	0x26d0


0x28b6:	push	0x1d
0x28bb:	jmp	0x26d0


0x28c6:	push	0x1e
0x28cb:	jmp	0x26d0


0x28d6:	push	0x1f
0x28db:	jmp	0x26d0


0x28e6:	push	0x20
0x28eb:	jmp	0x26d0


0x28f6:	push	0x21
0x28fb:	jmp	0x26d0


0x2906:	push	0x22
0x290b:	jmp	0x26d0


0x2916:	push	0x23
0x291b:	jmp	0x26d0


0x2926:	push	0x24
0x292b:	jmp	0x26d0


0x2936:	push	0x25
0x293b:	jmp	0x26d0


0x2946:	push	0x26
0x294b:	jmp	0x26d0


0x2956:	push	0x27
0x295b:	jmp	0x26d0


0x2966:	push	0x28
0x296b:	jmp	0x26d0


0x2976:	push	0x29
0x297b:	jmp	0x26d0


0x2986:	push	0x2a
0x298b:	jmp	0x26d0


0x2996:	push	0x2b
0x299b:	jmp	0x26d0


0x29a6:	push	0x2c
0x29ab:	jmp	0x26d0


0x29b6:	push	0x2d
0x29bb:	jmp	0x26d0


0x29c6:	push	0x2e
0x29cb:	jmp	0x26d0


0x29d6:	push	0x2f
0x29db:	jmp	0x26d0


0x29e6:	push	0x30
0x29eb:	jmp	0x26d0


0x29f6:	push	0x31
0x29fb:	jmp	0x26d0


0x2a06:	push	0x32
0x2a0b:	jmp	0x26d0


0x2a16:	push	0x33
0x2a1b:	jmp	0x26d0


0x2a26:	push	0x34
0x2a2b:	jmp	0x26d0


0x2a36:	push	0x35
0x2a3b:	jmp	0x26d0


0x2a46:	push	0x36
0x2a4b:	jmp	0x26d0


0x2a56:	push	0x37
0x2a5b:	jmp	0x26d0


0x2a60:	jmp	qword ptr [rip + 0x2124fa]




0x2a66:	push	0x38
0x2a6b:	jmp	0x26d0


0x2a76:	push	0x39
0x2a7b:	jmp	0x26d0


0x2a86:	push	0x3a
0x2a8b:	jmp	0x26d0


0x2a96:	push	0x3b
0x2a9b:	jmp	0x26d0


0x2aa6:	push	0x3c
0x2aab:	jmp	0x26d0


0x2ab6:	push	0x3d
0x2abb:	jmp	0x26d0


0x2ac6:	push	0x3e
0x2acb:	jmp	0x26d0


0x2ad6:	push	0x3f
0x2adb:	jmp	0x26d0


0x2ae6:	push	0x40
0x2aeb:	jmp	0x26d0


0x2af6:	push	0x41
0x2afb:	jmp	0x26d0


0x2b00:	jmp	qword ptr [rip + 0x2124aa]




0x2b06:	push	0x42
0x2b0b:	jmp	0x26d0


0x2b10:	jmp	qword ptr [rip + 0x2124a2]




0x2b16:	push	0x43
0x2b1b:	jmp	0x26d0


0x2b26:	push	0x44
0x2b2b:	jmp	0x26d0


0x2b30:	jmp	qword ptr [rip + 0x212492]




0x2b36:	push	0x45
0x2b3b:	jmp	0x26d0


0x2b46:	push	0x46
0x2b4b:	jmp	0x26d0


0x2bb7:	nop	word ptr [rax + rax]


0x3527:	nop	word ptr [rax + rax]


0x355a:	hlt	


0x355b:	nop	dword ptr [rax + rax]


0x3592:	nop	dword ptr [rax]
0x3596:	nop	word ptr cs:[rax + rax]


0x35e2:	nop	dword ptr [rax]
0x35e6:	nop	word ptr cs:[rax + rax]


0x362a:	nop	word ptr [rax + rax]


0x363a:	nop	word ptr [rax + rax]


0x3a8a:	nop	word ptr [rax + rax]


0x3a9a:	nop	word ptr [rax + rax]


0x3bb6:	nop	word ptr cs:[rax + rax]


0x3c33:	nop	dword ptr [rax]
0x3c36:	nop	word ptr cs:[rax + rax]


0x3dcd:	nop	dword ptr [rax]


0x3e1d:	nop	dword ptr [rax]


0x3e28:	nop	dword ptr [rax + rax]


0x3e38:	nop	dword ptr [rax + rax]


0x3ee4:	nop	word ptr cs:[rax + rax]
0x3eee:	nop	


0x3f46:	nop	word ptr cs:[rax + rax]


0x3fdb:	nop	dword ptr [rax + rax]


0x3fea:	nop	word ptr [rax + rax]


0x4031:	nop	word ptr cs:[rax + rax]
0x403b:	nop	dword ptr [rax + rax]


0x41b9:	nop	dword ptr [rax]


0x42b6:	nop	word ptr cs:[rax + rax]


0x43a2:	nop	dword ptr [rax]
0x43a6:	nop	word ptr cs:[rax + rax]


0x43e8:	nop	dword ptr [rax + rax]


0x44cf:	nop	


0x45ba:	nop	word ptr [rax + rax]


0x47a7:	nop	word ptr [rax + rax]


0x4861:	nop	dword ptr [rax + rax]
0x4866:	nop	word ptr cs:[rax + rax]


0x496f:	nop	


0x4d47:	nop	word ptr [rax + rax]


0x6953:	nop	dword ptr [rax]
0x6956:	nop	word ptr cs:[rax + rax]


0x86c9:	nop	dword ptr [rax]


0x873a:	nop	word ptr [rax + rax]


0x87f6:	nop	word ptr cs:[rax + rax]


0x8ae4:	nop	word ptr cs:[rax + rax]
0x8aee:	nop	


0x8b7e:	nop	


0x8c1f:	nop	


0x8d07:	nop	word ptr [rax + rax]


0x8da3:	mov	byte ptr [rsp + 0xe], 1
0x8da8:	mov	byte ptr [rsp + 0x7c], 0
0x8dad:	xor	r12d, r12d
0x8db0:	mov	qword ptr [rsp + 0x50], 0
0x8db9:	mov	byte ptr [rsp + 0xf], 1
0x8dbe:	mov	byte ptr [rsp + 0xd], 0
0x8dc3:	lea	rax, [rip + 0x8791]
0x8dca:	mov	qword ptr [rsp + 0x18], 1
0x8dd3:	xor	r15d, r15d
0x8dd6:	mov	dword ptr [rsp + 8], 2
0x8dde:	mov	qword ptr [rsp + 0x48], rax
0x8de3:	xor	r11d, r11d
0x8de6:	mov	rax, rbp
0x8de9:	mov	r8d, r12d
0x8dec:	mov	rbp, r11
0x8def:	mov	r11, rax
0x8df2:	nop	word ptr [rax + rax]
0x8df8:	cmp	r11, rbp
0x8dfb:	setne	r12b
0x8dff:	cmp	r11, -1
0x8e03:	jne	0x8e12


0x8e05:	mov	rax, qword ptr [rsp + 0x10]
0x8e0a:	cmp	byte ptr [rax + rbp], 0
0x8e0e:	setne	r12b
0x8e12:	test	r12b, r12b
0x8e15:	je	0x9470


0x8e12:	test	r12b, r12b
0x8e15:	je	0x9470


0x9470:	cmp	dword ptr [rsp + 8], 2
0x9475:	movzx	ebx, byte ptr [rsp + 0xf]
0x947a:	mov	r12d, r8d
0x947d:	mov	rbp, r11
0x9480:	sete	dl
0x9483:	mov	eax, ebx
0x9485:	test	r15, r15
0x9488:	sete	cl
0x948b:	and	eax, edx
0x948d:	and	al, cl
0x948f:	jne	0x9ef6


0x8e1b:	cmp	dword ptr [rsp + 8], 2
0x8e20:	mov	rdi, qword ptr [rsp + 0x10]
0x8e25:	lea	r9, [rdi + rbp]
0x8e29:	setne	al
0x8e2c:	and	al, byte ptr [rsp + 0xd]
0x8e30:	mov	r10d, eax
0x8e33:	je	0x8ee0


0x9495:	mov	eax, ebx
0x9497:	xor	eax, 1
0x949a:	and	dl, al
0x949c:	je	0x9e0c


0x9ef6:	mov	dword ptr [rsp + 8], 2
0x9efe:	jmp	0x9899


0x8ee0:	movzx	ebx, byte ptr [r9]
0x8ee4:	cmp	bl, 0x7e
0x8ee7:	ja	0x9208


0x8e39:	mov	rax, qword ptr [rsp + 0x18]
0x8e3e:	test	rax, rax
0x8e41:	je	0x9270


0x9e0c:	mov	rbx, qword ptr [rsp + 0x48]
0x9e11:	test	rbx, rbx
0x9e14:	je	0x9e42


0x94a2:	cmp	byte ptr [rsp + 0x7c], 0
0x94a7:	je	0x9e0a


0x9899:	cmp	byte ptr [rsp + 0xd], 0
0x989e:	je	0x98b0


0x8eed:	lea	rcx, [rip + 0x86f8]
0x8ef4:	movzx	edx, bl
0x8ef7:	movsxd	rax, dword ptr [rcx + rdx*4]
0x8efb:	add	rax, rcx
0x8efe:	jmp	rax


0x9208:	cmp	qword ptr [rsp + 0x58], 1
0x920e:	jne	0x95b8


0x9270:	movzx	ebx, byte ptr [r9]
0x9274:	cmp	bl, 0x7e
0x9277:	ja	0x9200


0x8e47:	cmp	r11, -1
0x8e4b:	lea	rbx, [rbp + rax]
0x8e50:	jne	0x8e80


0x9e42:	cmp	r13, r15
0x9e45:	jbe	0x98e9


0x9e16:	test	al, al
0x9e18:	je	0x9e42


0x9e0a:	mov	eax, edx
0x9e0c:	mov	rbx, qword ptr [rsp + 0x48]
0x9e11:	test	rbx, rbx
0x9e14:	je	0x9e42


0x94ad:	cmp	byte ptr [rsp + 0xe], 0
0x94b2:	jne	0x9ead


0x98a0:	test	al, al
0x98a2:	mov	eax, 4
0x98a7:	cmove	eax, dword ptr [rsp + 8]
0x98ac:	mov	dword ptr [rsp + 8], eax


0x9214:	mov	qword ptr [rsp + 0x38], r11
0x9219:	mov	byte ptr [rsp + 0x30], r8b
0x921e:	mov	byte ptr [rsp + 0x28], r10b
0x9223:	call	0x2b30


0x95b8:	lea	rax, [rsp + 0xa0]
0x95c0:	cmp	r11, -1
0x95c4:	mov	qword ptr [rsp + 0xa0], 0
0x95d0:	mov	qword ptr [rsp + 0x28], rax
0x95d5:	jne	0x9604


0x9279:	lea	rcx, [rip + 0x8568]
0x9280:	movzx	edx, bl
0x9283:	movsxd	rax, dword ptr [rcx + rdx*4]
0x9287:	add	rax, rcx
0x928a:	jmp	rax


0x9200:	xor	r10d, r10d
0x9203:	nop	dword ptr [rax + rax]
0x9208:	cmp	qword ptr [rsp + 0x58], 1
0x920e:	jne	0x95b8


0x8e52:	cmp	rax, 1
0x8e56:	jbe	0x8e80


0x8e80:	cmp	rbx, r11
0x8e83:	mov	byte ptr [rsp + 0x28], r10b
0x8e88:	ja	0x9440


0x9e4b:	mov	byte ptr [r14 + r15], 0
0x9e50:	jmp	0x98e9


0x9e1a:	movzx	ecx, byte ptr [rbx]
0x9e1d:	mov	rax, rbx
0x9e20:	test	cl, cl
0x9e22:	je	0x9e42


0x94b8:	test	r13, r13
0x94bb:	sete	al
0x94be:	cmp	qword ptr [rsp + 0x50], 0
0x94c4:	setne	dl
0x94c7:	and	al, dl
0x94c9:	je	0x9eec


0x95d7:	mov	rdi, qword ptr [rsp + 0x10]
0x95dc:	mov	byte ptr [rsp + 0x40], r8b
0x95e1:	mov	byte ptr [rsp + 0x38], r10b
0x95e6:	mov	qword ptr [rsp + 0x30], r9
0x95eb:	call	0x2810


0x9604:	lea	rax, [rsp + 0x9c]
0x960c:	xor	ecx, ecx
0x960e:	mov	byte ptr [rsp + 0x7e], bl
0x9612:	mov	byte ptr [rsp + 0x7d], r8b
0x9617:	mov	rbx, rcx
0x961a:	mov	qword ptr [rsp + 0x88], r9
0x9622:	mov	qword ptr [rsp + 0x38], rax
0x9627:	mov	byte ptr [rsp + 0x7f], r10b
0x962c:	mov	qword ptr [rsp + 0x80], r15
0x9634:	mov	qword ptr [rsp + 0x40], r14
0x9639:	mov	qword ptr [rsp + 0x70], r13
0x963e:	mov	qword ptr [rsp + 0x30], r11
0x9643:	mov	rax, qword ptr [rsp + 0x10]
0x9648:	lea	r14, [rbp + rbx]
0x964d:	mov	rdx, qword ptr [rsp + 0x30]
0x9652:	mov	rcx, qword ptr [rsp + 0x28]
0x9657:	mov	rdi, qword ptr [rsp + 0x38]
0x965c:	lea	r13, [rax + r14]
0x9660:	sub	rdx, r14
0x9663:	mov	rsi, r13
0x9666:	call	0xb160


0x8e58:	mov	byte ptr [rsp + 0x38], r8b
0x8e5d:	mov	byte ptr [rsp + 0x30], r10b
0x8e62:	mov	qword ptr [rsp + 0x28], r9
0x8e67:	call	0x2810


0x8e8e:	mov	rdx, qword ptr [rsp + 0x18]
0x8e93:	mov	rsi, qword ptr [rsp + 0x48]
0x8e98:	mov	rdi, r9
0x8e9b:	mov	qword ptr [rsp + 0x40], r11
0x8ea0:	mov	byte ptr [rsp + 0x38], r8b
0x8ea5:	mov	qword ptr [rsp + 0x30], r9
0x8eaa:	call	0x2920


0x9440:	xor	r10d, r10d
0x9443:	jmp	0x8ee0


0x9e24:	mov	rdx, r15
0x9e27:	sub	rax, r15
0x9e2a:	cmp	r13, rdx
0x9e2d:	jbe	0x9e33


0x9eec:	movzx	eax, byte ptr [rsp + 0x7c]
0x9ef1:	jmp	0x9e0c


0x94cf:	mov	r13, qword ptr [rsp + 0x50]
0x94d4:	lea	rbx, [rip + 0x8080]
0x94db:	mov	byte ptr [r14], 0x27
0x94df:	mov	dword ptr [rsp + 8], 2
0x94e7:	mov	r15d, 1
0x94ed:	mov	qword ptr [rsp + 0x18], 1
0x94f6:	mov	byte ptr [rsp + 0xf], 0
0x94fb:	mov	qword ptr [rsp + 0x48], rbx
0x9500:	mov	byte ptr [rsp + 0x7c], al
0x9504:	jmp	0x8de3


0x9e33:	add	rdx, 1
0x9e37:	movzx	ecx, byte ptr [rax + rdx]
0x9e3b:	test	cl, cl
0x9e3d:	jne	0x9e2a


0x9e2f:	mov	byte ptr [r14 + rdx], cl
0x9e33:	add	rdx, 1
0x9e37:	movzx	ecx, byte ptr [rax + rdx]
0x9e3b:	test	cl, cl
0x9e3d:	jne	0x9e2a


0x8de3:	xor	r11d, r11d
0x8de6:	mov	rax, rbp
0x8de9:	mov	r8d, r12d
0x8dec:	mov	rbp, r11
0x8def:	mov	r11, rax
0x8df2:	nop	word ptr [rax + rax]
0x8df8:	cmp	r11, rbp
0x8dfb:	setne	r12b
0x8dff:	cmp	r11, -1
0x8e03:	jne	0x8e12


0x9e3f:	mov	r15, rdx
0x9e42:	cmp	r13, r15
0x9e45:	jbe	0x98e9


0x9e2a:	cmp	r13, rdx
0x9e2d:	jbe	0x9e33


0x8eaf:	test	eax, eax
0x8eb1:	mov	r9, qword ptr [rsp + 0x30]
0x8eb6:	movzx	r8d, byte ptr [rsp + 0x38]
0x8ebc:	mov	r11, qword ptr [rsp + 0x40]
0x8ec1:	jne	0x9440


0x8ec7:	cmp	byte ptr [rsp + 0xf], 0
0x8ecc:	movzx	r10d, byte ptr [rsp + 0x28]
0x8ed2:	jne	0x9e55


0x9e55:	cmp	dword ptr [rsp + 8], 2
0x9e5a:	movzx	ebx, byte ptr [rsp + 0xf]
0x9e5f:	mov	rbp, r11
0x9e62:	sete	al
0x9e65:	mov	byte ptr [rsp + 0xd], bl
0x9e69:	jmp	0x9899


0x966b:	test	rax, rax
0x966e:	mov	r15, rax
0x9671:	je	0x96c1


0x96c1:	mov	edx, r12d
0x96c4:	mov	rdi, rbx
0x96c7:	movzx	r8d, byte ptr [rsp + 0x7d]
0x96cd:	xor	edx, 1
0x96d0:	movzx	ebx, byte ptr [rsp + 0x7e]
0x96d5:	movzx	r10d, byte ptr [rsp + 0x7f]
0x96db:	and	dl, byte ptr [rsp + 0xd]
0x96df:	mov	r15, qword ptr [rsp + 0x80]
0x96e7:	mov	r14, qword ptr [rsp + 0x40]
0x96ec:	mov	r13, qword ptr [rsp + 0x70]
0x96f1:	mov	r11, qword ptr [rsp + 0x30]
0x96f6:	cmp	rdi, 1
0x96fa:	jbe	0x9cfb


0x9673:	cmp	rax, -1
0x9677:	je	0x9c95


0x9cfb:	mov	eax, edx
0x9cfd:	jmp	0x9257


0x9700:	mov	rcx, rdi
0x9703:	xor	esi, esi
0x9705:	movzx	r9d, byte ptr [rsp + 0xf]
0x970b:	add	rcx, rbp
0x970e:	mov	rdi, qword ptr [rsp + 0x10]
0x9713:	jmp	0x97ce


0x9c95:	mov	rdi, rbx
0x9c98:	movzx	r8d, byte ptr [rsp + 0x7d]
0x9c9e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x9ca3:	movzx	r10d, byte ptr [rsp + 0x7f]
0x9ca9:	mov	r15, qword ptr [rsp + 0x80]
0x9cb1:	xor	r12d, r12d
0x9cb4:	mov	r14, qword ptr [rsp + 0x40]
0x9cb9:	mov	r13, qword ptr [rsp + 0x70]
0x9cbe:	mov	r11, qword ptr [rsp + 0x30]
0x9cc3:	movzx	edx, byte ptr [rsp + 0xd]
0x9cc8:	jmp	0x96f6


0x967d:	cmp	rax, -2
0x9681:	je	0x9c21


0x9257:	test	al, al
0x9259:	jne	0x9bf1


0x97ce:	test	dl, dl
0x97d0:	jne	0x9720


0x96f6:	cmp	rdi, 1
0x96fa:	jbe	0x9cfb


0x9c21:	mov	r11, qword ptr [rsp + 0x30]
0x9c26:	mov	rsi, r14
0x9c29:	mov	rcx, r13
0x9c2c:	mov	rax, rbx
0x9c2f:	mov	rdi, rbx
0x9c32:	movzx	r8d, byte ptr [rsp + 0x7d]
0x9c38:	movzx	ebx, byte ptr [rsp + 0x7e]
0x9c3d:	mov	r9, qword ptr [rsp + 0x88]
0x9c45:	cmp	rsi, r11
0x9c48:	movzx	r10d, byte ptr [rsp + 0x7f]
0x9c4e:	mov	r15, qword ptr [rsp + 0x80]
0x9c56:	mov	r14, qword ptr [rsp + 0x40]
0x9c5b:	mov	r13, qword ptr [rsp + 0x70]
0x9c60:	jae	0x9c88


0x9687:	cmp	dword ptr [rsp + 8], 2
0x968c:	sete	al
0x968f:	and	al, byte ptr [rsp + 0xf]
0x9693:	jne	0x9830


0x925f:	cmp	dword ptr [rsp + 8], 2
0x9264:	sete	dl
0x9267:	jmp	0x8f38


0x9bf1:	movzx	edx, byte ptr [rsp + 0xd]
0x9bf6:	xor	r12d, r12d
0x9bf9:	jmp	0x9700


0x97d6:	mov	eax, esi
0x97d8:	xor	eax, 1
0x97db:	and	eax, r8d
0x97de:	test	r10b, r10b
0x97e1:	je	0x97f1


0x9720:	cmp	dword ptr [rsp + 8], 2
0x9725:	sete	al
0x9728:	test	r9b, r9b
0x972b:	jne	0x9be0


0x9c62:	cmp	byte ptr [rcx], 0
0x9c65:	jne	0x9c77


0x9c88:	movzx	edx, byte ptr [rsp + 0xd]
0x9c8d:	xor	r12d, r12d
0x9c90:	jmp	0x96f6


0x9699:	mov	edi, dword ptr [rsp + 0x9c]
0x96a0:	call	0x2b10


0x9830:	cmp	r15, 1
0x9834:	je	0x9699


0x8f38:	cmp	byte ptr [rsp + 0xd], 1
0x8f3d:	jne	0x9052


0x97f1:	add	rbp, 1
0x97f5:	cmp	rbp, rcx
0x97f8:	jae	0x8f7c


0x97e3:	cmp	r13, r15
0x97e6:	jbe	0x97ed


0x9731:	mov	esi, r8d
0x9734:	xor	esi, 1
0x9737:	and	al, sil
0x973a:	je	0x976b


0x9be0:	movzx	ebx, byte ptr [rsp + 0xf]
0x9be5:	mov	rbp, r11
0x9be8:	mov	byte ptr [rsp + 0xd], bl
0x9bec:	jmp	0x9899


0x9c67:	jmp	0x9c88


0x9c77:	add	rax, 1
0x9c7b:	lea	rdx, [rbp + rax]
0x9c80:	cmp	r11, rdx
0x9c83:	ja	0x9c70


0x983a:	mov	rdi, qword ptr [rsp + 0x10]
0x983f:	lea	rcx, [rdi + r15]
0x9843:	lea	rdx, [rdi + r14 + 1]
0x9848:	lea	r8, [rcx + r14]
0x984c:	jmp	0x985d


0x8f43:	test	dl, dl
0x8f45:	jne	0x9052


0x9052:	cmp	byte ptr [rsp + 0xf], 0
0x9057:	jne	0x8f4b


0x97fe:	test	al, al
0x9800:	je	0x9bfe


0x8f7c:	test	al, al
0x8f7e:	je	0x8fa0


0x97ed:	add	r15, 1
0x97f1:	add	rbp, 1
0x97f5:	cmp	rbp, rcx
0x97f8:	jae	0x8f7c


0x97e8:	mov	byte ptr [r14 + r15], 0x5c
0x97ed:	add	r15, 1
0x97f1:	add	rbp, 1
0x97f5:	cmp	rbp, rcx
0x97f8:	jae	0x8f7c


0x976b:	cmp	r13, r15
0x976e:	jbe	0x9775


0x973c:	cmp	r13, r15
0x973f:	jbe	0x9746


0x9c85:	mov	rdi, rax
0x9c88:	movzx	edx, byte ptr [rsp + 0xd]
0x9c8d:	xor	r12d, r12d
0x9c90:	jmp	0x96f6


0x9c70:	cmp	byte ptr [r9 + rax], 0
0x9c75:	je	0x9c85


0x985d:	movzx	ecx, byte ptr [rdx]
0x9860:	sub	ecx, 0x5b
0x9863:	cmp	cl, 0x21
0x9866:	ja	0x9850


0x8f4b:	mov	rsi, qword ptr [rsp + 0x20]
0x8f50:	test	rsi, rsi
0x8f53:	je	0x8f69


0x905d:	jmp	0x8f69


0x9bfe:	xor	r10d, r10d
0x9c01:	jmp	0x97bd


0x9806:	cmp	r13, r15
0x9809:	jbe	0x9810


0x8fa0:	cmp	r15, r13
0x8fa3:	jae	0x8fa9


0x8f80:	cmp	r13, r15
0x8f83:	jbe	0x8f8a


0x9775:	lea	rax, [r15 + 1]
0x9779:	cmp	r13, rax
0x977c:	jbe	0x978b


0x9770:	mov	byte ptr [r14 + r15], 0x5c
0x9775:	lea	rax, [r15 + 1]
0x9779:	cmp	r13, rax
0x977c:	jbe	0x978b


0x9746:	lea	rsi, [r15 + 1]
0x974a:	cmp	r13, rsi
0x974d:	jbe	0x9755


0x9741:	mov	byte ptr [r14 + r15], 0x27
0x9746:	lea	rsi, [r15 + 1]
0x974a:	cmp	r13, rsi
0x974d:	jbe	0x9755


0x9868:	mov	esi, 1
0x986d:	shl	rsi, cl
0x9870:	mov	rcx, rsi
0x9873:	movabs	rsi, 0x20000002b
0x987d:	test	rcx, rsi
0x9880:	je	0x9850


0x9850:	add	rdx, 1
0x9854:	cmp	r8, rdx
0x9857:	je	0x9699


0x8f69:	test	r10b, r10b
0x8f6c:	jne	0x90b3


0x8f55:	mov	edx, ebx
0x8f57:	shr	dl, 5
0x8f5a:	movzx	edx, dl
0x8f5d:	mov	edx, dword ptr [rsi + rdx*4]
0x8f60:	bt	edx, ebx
0x8f63:	jb	0x90b3


0x97bd:	cmp	r13, r15
0x97c0:	jbe	0x97c6


0x9810:	lea	rax, [r15 + 1]
0x9814:	cmp	r13, rax
0x9817:	jbe	0x981f


0x980b:	mov	byte ptr [r14 + r15], 0x27
0x9810:	lea	rax, [r15 + 1]
0x9814:	cmp	r13, rax
0x9817:	jbe	0x981f


0x8fa5:	mov	byte ptr [r14 + r15], bl
0x8fa9:	movzx	edi, byte ptr [rsp + 0xe]
0x8fae:	add	r15, 1
0x8fb2:	mov	eax, 0
0x8fb7:	test	r12b, r12b
0x8fba:	cmove	edi, eax
0x8fbd:	mov	byte ptr [rsp + 0xe], dil
0x8fc2:	jmp	0x8df8


0x8fa9:	movzx	edi, byte ptr [rsp + 0xe]
0x8fae:	add	r15, 1
0x8fb2:	mov	eax, 0
0x8fb7:	test	r12b, r12b
0x8fba:	cmove	edi, eax
0x8fbd:	mov	byte ptr [rsp + 0xe], dil
0x8fc2:	jmp	0x8df8


0x8f8a:	lea	rax, [r15 + 1]
0x8f8e:	cmp	r13, rax
0x8f91:	jbe	0x8f99


0x8f85:	mov	byte ptr [r14 + r15], 0x27
0x8f8a:	lea	rax, [r15 + 1]
0x8f8e:	cmp	r13, rax
0x8f91:	jbe	0x8f99


0x978b:	lea	rax, [r15 + 2]
0x978f:	cmp	r13, rax
0x9792:	jbe	0x97a4


0x977e:	mov	eax, ebx
0x9780:	shr	al, 6
0x9783:	add	eax, 0x30
0x9786:	mov	byte ptr [r14 + r15 + 1], al
0x978b:	lea	rax, [r15 + 2]
0x978f:	cmp	r13, rax
0x9792:	jbe	0x97a4


0x9755:	lea	rsi, [r15 + 2]
0x9759:	cmp	r13, rsi
0x975c:	jbe	0x9764


0x974f:	mov	byte ptr [r14 + r15 + 1], 0x24
0x9755:	lea	rsi, [r15 + 2]
0x9759:	cmp	r13, rsi
0x975c:	jbe	0x9764


0x9882:	mov	r14, qword ptr [rsp + 0x40]
0x9887:	mov	r13, qword ptr [rsp + 0x70]
0x988c:	mov	rbp, qword ptr [rsp + 0x30]
0x9891:	mov	dword ptr [rsp + 8], 2
0x9899:	cmp	byte ptr [rsp + 0xd], 0
0x989e:	je	0x98b0


0x8f72:	xor	eax, 1
0x8f75:	add	rbp, 1
0x8f79:	and	eax, r8d
0x8f7c:	test	al, al
0x8f7e:	je	0x8fa0


0x90b3:	cmp	dword ptr [rsp + 8], 2
0x90b8:	sete	dl
0x90bb:	cmp	byte ptr [rsp + 0xf], 0
0x90c0:	mov	eax, edx
0x90c2:	jne	0x9918


0x97c6:	movzx	ebx, byte ptr [rdi + rbp]
0x97ca:	add	r15, 1
0x97ce:	test	dl, dl
0x97d0:	jne	0x9720


0x97c2:	mov	byte ptr [r14 + r15], bl
0x97c6:	movzx	ebx, byte ptr [rdi + rbp]
0x97ca:	add	r15, 1
0x97ce:	test	dl, dl
0x97d0:	jne	0x9720


0x981f:	add	r15, 2
0x9823:	xor	r10d, r10d
0x9826:	xor	r8d, r8d
0x9829:	jmp	0x97bd


0x9819:	mov	byte ptr [r14 + r15 + 1], 0x27
0x981f:	add	r15, 2
0x9823:	xor	r10d, r10d
0x9826:	xor	r8d, r8d
0x9829:	jmp	0x97bd


0x8df8:	cmp	r11, rbp
0x8dfb:	setne	r12b
0x8dff:	cmp	r11, -1
0x8e03:	jne	0x8e12


0x8f99:	add	r15, 2
0x8f9d:	xor	r8d, r8d
0x8fa0:	cmp	r15, r13
0x8fa3:	jae	0x8fa9


0x8f93:	mov	byte ptr [r14 + r15 + 1], 0x27
0x8f99:	add	r15, 2
0x8f9d:	xor	r8d, r8d
0x8fa0:	cmp	r15, r13
0x8fa3:	jae	0x8fa9


0x97a4:	and	ebx, 7
0x97a7:	add	rbp, 1
0x97ab:	add	r15, 3
0x97af:	add	ebx, 0x30
0x97b2:	cmp	rbp, rcx
0x97b5:	jae	0x8fa0


0x9794:	mov	eax, ebx
0x9796:	shr	al, 3
0x9799:	and	eax, 7
0x979c:	add	eax, 0x30
0x979f:	mov	byte ptr [r14 + r15 + 2], al
0x97a4:	and	ebx, 7
0x97a7:	add	rbp, 1
0x97ab:	add	r15, 3
0x97af:	add	ebx, 0x30
0x97b2:	cmp	rbp, rcx
0x97b5:	jae	0x8fa0


0x9764:	add	r15, 3
0x9768:	mov	r8d, eax
0x976b:	cmp	r13, r15
0x976e:	jbe	0x9775


0x975e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x9764:	add	r15, 3
0x9768:	mov	r8d, eax
0x976b:	cmp	r13, r15
0x976e:	jbe	0x9775


0x90c8:	mov	eax, r8d
0x90cb:	xor	eax, 1
0x90ce:	and	al, dl
0x90d0:	je	0x9101


0x9918:	mov	rbp, r11
0x991b:	jmp	0x9899


0x97bb:	mov	esi, edx
0x97bd:	cmp	r13, r15
0x97c0:	jbe	0x97c6


0x9101:	cmp	r13, r15
0x9104:	jbe	0x910b


0x90d2:	cmp	r13, r15
0x90d5:	jbe	0x90dc


0x910b:	add	r15, 1
0x910f:	add	rbp, 1
0x9113:	jmp	0x8fa0


0x9106:	mov	byte ptr [r14 + r15], 0x5c
0x910b:	add	r15, 1
0x910f:	add	rbp, 1
0x9113:	jmp	0x8fa0


0x90dc:	lea	rdx, [r15 + 1]
0x90e0:	cmp	r13, rdx
0x90e3:	jbe	0x90eb


0x90d7:	mov	byte ptr [r14 + r15], 0x27
0x90dc:	lea	rdx, [r15 + 1]
0x90e0:	cmp	r13, rdx
0x90e3:	jbe	0x90eb


0x90eb:	lea	rdx, [r15 + 2]
0x90ef:	cmp	r13, rdx
0x90f2:	jbe	0x90fa


0x90e5:	mov	byte ptr [r14 + r15 + 1], 0x24
0x90eb:	lea	rdx, [r15 + 2]
0x90ef:	cmp	r13, rdx
0x90f2:	jbe	0x90fa


0x90fa:	add	r15, 3
0x90fe:	mov	r8d, eax
0x9101:	cmp	r13, r15
0x9104:	jbe	0x910b


0x90f4:	mov	byte ptr [r14 + r15 + 2], 0x27
0x90fa:	add	r15, 3
0x90fe:	mov	r8d, eax
0x9101:	cmp	r13, r15
0x9104:	jbe	0x910b


0x96a5:	mov	rdi, qword ptr [rsp + 0x28]
0x96aa:	test	eax, eax
0x96ac:	mov	eax, 0
0x96b1:	cmove	r12d, eax
0x96b5:	add	rbx, r15
0x96b8:	call	0x2b00


0x96bd:	test	eax, eax
0x96bf:	je	0x9643


0x9643:	mov	rax, qword ptr [rsp + 0x10]
0x9648:	lea	r14, [rbp + rbx]
0x964d:	mov	rdx, qword ptr [rsp + 0x30]
0x9652:	mov	rcx, qword ptr [rsp + 0x28]
0x9657:	mov	rdi, qword ptr [rsp + 0x38]
0x965c:	lea	r13, [rax + r14]
0x9660:	sub	rdx, r14
0x9663:	mov	rsi, r13
0x9666:	call	0xb160


0x8e6c:	movzx	r8d, byte ptr [rsp + 0x38]
0x8e72:	movzx	r10d, byte ptr [rsp + 0x30]
0x8e78:	mov	r11, rax
0x8e7b:	mov	r9, qword ptr [rsp + 0x28]
0x8e80:	cmp	rbx, r11
0x8e83:	mov	byte ptr [rsp + 0x28], r10b
0x8e88:	ja	0x9440


0x95f0:	movzx	r8d, byte ptr [rsp + 0x40]
0x95f6:	movzx	r10d, byte ptr [rsp + 0x38]
0x95fc:	mov	r11, rax
0x95ff:	mov	r9, qword ptr [rsp + 0x30]
0x9604:	lea	rax, [rsp + 0x9c]
0x960c:	xor	ecx, ecx
0x960e:	mov	byte ptr [rsp + 0x7e], bl
0x9612:	mov	byte ptr [rsp + 0x7d], r8b
0x9617:	mov	rbx, rcx
0x961a:	mov	qword ptr [rsp + 0x88], r9
0x9622:	mov	qword ptr [rsp + 0x38], rax
0x9627:	mov	byte ptr [rsp + 0x7f], r10b
0x962c:	mov	qword ptr [rsp + 0x80], r15
0x9634:	mov	qword ptr [rsp + 0x40], r14
0x9639:	mov	qword ptr [rsp + 0x70], r13
0x963e:	mov	qword ptr [rsp + 0x30], r11
0x9643:	mov	rax, qword ptr [rsp + 0x10]
0x9648:	lea	r14, [rbp + rbx]
0x964d:	mov	rdx, qword ptr [rsp + 0x30]
0x9652:	mov	rcx, qword ptr [rsp + 0x28]
0x9657:	mov	rdi, qword ptr [rsp + 0x38]
0x965c:	lea	r13, [rax + r14]
0x9660:	sub	rdx, r14
0x9663:	mov	rsi, r13
0x9666:	call	0xb160


0x9228:	mov	rcx, qword ptr [rax]
0x922b:	movzx	edx, bl
0x922e:	movzx	r10d, byte ptr [rsp + 0x28]
0x9234:	movzx	r8d, byte ptr [rsp + 0x30]
0x923a:	mov	r11, qword ptr [rsp + 0x38]
0x923f:	mov	edi, 1
0x9244:	movzx	eax, word ptr [rcx + rdx*2]
0x9248:	and	ax, 0x4000
0x924c:	setne	r12b
0x9250:	sete	al
0x9253:	and	al, byte ptr [rsp + 0xd]
0x9257:	test	al, al
0x9259:	jne	0x9bf1


0x8f00:	xor	r10d, r10d
0x8f03:	cmp	r11, 1
0x8f07:	setne	al
0x8f0a:	cmp	r11, -1
0x8f0e:	jne	0x8f1c


0x8f10:	mov	rax, qword ptr [rsp + 0x10]
0x8f15:	cmp	byte ptr [rax + 1], 0
0x8f19:	setne	al
0x8f1c:	cmp	dword ptr [rsp + 8], 2
0x8f21:	sete	dl
0x8f24:	test	al, al
0x8f26:	je	0x9178


0x8f1c:	cmp	dword ptr [rsp + 8], 2
0x8f21:	sete	dl
0x8f24:	test	al, al
0x8f26:	je	0x9178


0x9178:	test	rbp, rbp
0x917b:	jne	0x8f2c


0x8f2c:	xor	r12d, r12d
0x8f2f:	xor	eax, eax
0x8f31:	nop	dword ptr [rax]
0x8f38:	cmp	byte ptr [rsp + 0xd], 1
0x8f3d:	jne	0x9052


0x9181:	movzx	eax, byte ptr [rsp + 0xf]
0x9186:	and	al, dl
0x9188:	je	0x8f38


0x918e:	mov	rbp, r11
0x9191:	mov	dword ptr [rsp + 8], 2
0x9199:	jmp	0x9899


0x9598:	cmp	byte ptr [rsp + 0xf], 0
0x959d:	jne	0x9dc0


0x8fe0:	cmp	eax, 5
0x8fe3:	je	0x9558


0x95a3:	xor	r12d, r12d
0x95a6:	xor	eax, eax
0x95a8:	mov	ebx, 0x3f
0x95ad:	jmp	0x8f69


0x9dc0:	mov	rbp, r11
0x9dc3:	movzx	eax, byte ptr [rsp + 0xf]
0x9dc8:	jmp	0x9899


0x9558:	test	byte ptr [rsp + 0x78], 4
0x955d:	je	0x9580


0x8fe9:	cmp	eax, 2
0x8fec:	mov	ebx, 0x3f
0x8ff1:	sete	dl
0x8ff4:	xor	r12d, r12d
0x8ff7:	xor	eax, eax
0x8ff9:	jmp	0x8f38


0x9580:	xor	edx, edx
0x9582:	xor	r12d, r12d
0x9585:	xor	eax, eax
0x9587:	mov	ebx, 0x3f
0x958c:	jmp	0x8f38


0x955f:	lea	rcx, [rbp + 2]
0x9563:	cmp	rcx, r11
0x9566:	jae	0x9580


0x9568:	mov	rax, qword ptr [rsp + 0x10]
0x956d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x9572:	je	0x9d02


0x9d02:	movzx	ebx, byte ptr [rax + rcx]
0x9d06:	cmp	bl, 0x3e
0x9d09:	ja	0x9580


0x9d0f:	movabs	rax, 0x7000a38200000000
0x9d19:	bt	rax, rbx
0x9d1d:	jae	0x9580


0x9d23:	cmp	byte ptr [rsp + 0xf], 0
0x9d28:	jne	0x9f12


0x9d2e:	cmp	r13, r15
0x9d31:	jbe	0x9d38


0x9f12:	mov	rbp, r11
0x9f15:	jmp	0x98b0


0x9d38:	lea	rax, [r15 + 1]
0x9d3c:	cmp	r13, rax
0x9d3f:	jbe	0x9d47


0x9d33:	mov	byte ptr [r14 + r15], 0x3f
0x9d38:	lea	rax, [r15 + 1]
0x9d3c:	cmp	r13, rax
0x9d3f:	jbe	0x9d47


0x9d47:	lea	rax, [r15 + 2]
0x9d4b:	cmp	r13, rax
0x9d4e:	jbe	0x9d56


0x9d41:	mov	byte ptr [r14 + r15 + 1], 0x22
0x9d47:	lea	rax, [r15 + 2]
0x9d4b:	cmp	r13, rax
0x9d4e:	jbe	0x9d56


0x9d56:	lea	rax, [r15 + 3]
0x9d5a:	cmp	r13, rax
0x9d5d:	jbe	0x9d65


0x9d50:	mov	byte ptr [r14 + r15 + 2], 0x22
0x9d56:	lea	rax, [r15 + 3]
0x9d5a:	cmp	r13, rax
0x9d5d:	jbe	0x9d65


0x9d65:	add	r15, 4
0x9d69:	xor	edx, edx
0x9d6b:	xor	r12d, r12d
0x9d6e:	xor	eax, eax
0x9d70:	mov	rbp, rcx
0x9d73:	jmp	0x8f38


0x9d5f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x9d65:	add	r15, 4
0x9d69:	xor	edx, edx
0x9d6b:	xor	r12d, r12d
0x9d6e:	xor	eax, eax
0x9d70:	mov	rbp, rcx
0x9d73:	jmp	0x8f38


0x9510:	cmp	byte ptr [rsp + 0xf], 0
0x9515:	jne	0x9dc0


0x900e:	mov	byte ptr [rsp + 0x7c], r12b
0x9013:	xor	edx, edx
0x9015:	xor	eax, eax
0x9017:	mov	ebx, 0x27
0x901c:	jmp	0x8f38


0x951b:	test	r13, r13
0x951e:	je	0x9920


0x9920:	cmp	r13, r15
0x9923:	jbe	0x992a


0x9524:	xor	edx, edx
0x9526:	cmp	qword ptr [rsp + 0x50], 0
0x952c:	jne	0x9920


0x992a:	lea	rax, [r15 + 1]
0x992e:	cmp	r13, rax
0x9931:	jbe	0x9939


0x9925:	mov	byte ptr [r14 + r15], 0x27
0x992a:	lea	rax, [r15 + 1]
0x992e:	cmp	r13, rax
0x9931:	jbe	0x9939


0x9532:	mov	qword ptr [rsp + 0x50], r13
0x9537:	add	r15, 3
0x953b:	xor	eax, eax
0x953d:	mov	byte ptr [rsp + 0x7c], r12b
0x9542:	xor	r8d, r8d
0x9545:	mov	r13, rdx
0x9548:	mov	ebx, 0x27
0x954d:	jmp	0x8f69


0x9939:	lea	rax, [r15 + 2]
0x993d:	cmp	r13, rax
0x9940:	jbe	0x9f32


0x9933:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x9939:	lea	rax, [r15 + 2]
0x993d:	cmp	r13, rax
0x9940:	jbe	0x9f32


0x9f32:	mov	rdx, r13
0x9f35:	mov	r13, qword ptr [rsp + 0x50]
0x9f3a:	jmp	0x9532


0x9946:	mov	rdx, r13
0x9949:	mov	byte ptr [r14 + r15 + 2], 0x27
0x994f:	mov	r13, qword ptr [rsp + 0x50]
0x9954:	jmp	0x9532


0x9044:	cmp	byte ptr [rsp + 0xd], 0
0x9049:	jne	0x90b0


0x904b:	mov	ebx, edx
0x904d:	xor	r12d, r12d
0x9050:	xor	eax, eax
0x9052:	cmp	byte ptr [rsp + 0xf], 0
0x9057:	jne	0x8f4b


0x90b0:	xor	r12d, r12d
0x90b3:	cmp	dword ptr [rsp + 8], 2
0x90b8:	sete	dl
0x90bb:	cmp	byte ptr [rsp + 0xf], 0
0x90c0:	mov	eax, edx
0x90c2:	jne	0x9918


0x9450:	cmp	byte ptr [rsp + 0xf], 0
0x9455:	jne	0x9dc0


0x9083:	cmp	byte ptr [rsp + 0xd], 0
0x9088:	je	0x92a0


0x945b:	add	rbp, 1
0x945f:	mov	eax, r8d
0x9462:	xor	r12d, r12d
0x9465:	mov	ebx, 0x5c
0x946a:	jmp	0x8f7c


0x92a0:	mov	edx, 0x5c
0x92a5:	mov	ebx, 0x5c
0x92aa:	jmp	0x9044


0x908e:	cmp	byte ptr [rsp + 0xf], 0
0x9093:	je	0x92a0


0x9099:	cmp	qword ptr [rsp + 0x18], 0
0x909f:	jne	0x945b


0x90a5:	mov	ebx, 0x5c
0x90aa:	nop	word ptr [rax + rax]
0x90b0:	xor	r12d, r12d
0x90b3:	cmp	dword ptr [rsp + 8], 2
0x90b8:	sete	dl
0x90bb:	cmp	byte ptr [rsp + 0xf], 0
0x90c0:	mov	eax, edx
0x90c2:	jne	0x9918


0x912b:	xor	edx, edx
0x912d:	test	byte ptr [rsp + 0x78], 1
0x9132:	je	0x904b


0x92f3:	cmp	dword ptr [rsp + 8], 2
0x92f8:	sete	dl
0x92fb:	cmp	byte ptr [rsp + 0xf], 0
0x9300:	jne	0x9e9a


0x9138:	add	rbp, 1
0x913c:	jmp	0x8df8


0x9306:	mov	eax, r8d
0x9309:	mov	rcx, r15
0x930c:	xor	eax, 1
0x930f:	and	al, dl
0x9311:	je	0x9340


0x9e9a:	movzx	ebx, byte ptr [rsp + 0xf]
0x9e9f:	mov	rbp, r11
0x9ea2:	mov	eax, edx
0x9ea4:	mov	byte ptr [rsp + 0xd], bl
0x9ea8:	jmp	0x9899


0x9340:	cmp	r13, rcx
0x9343:	jbe	0x934a


0x9313:	cmp	r13, r15
0x9316:	jbe	0x931d


0x934a:	cmp	dword ptr [rsp + 8], 2
0x934f:	lea	r15, [rcx + 1]
0x9353:	je	0x9959


0x9345:	mov	byte ptr [r14 + rcx], 0x5c
0x934a:	cmp	dword ptr [rsp + 8], 2
0x934f:	lea	r15, [rcx + 1]
0x9353:	je	0x9959


0x931d:	lea	rcx, [r15 + 1]
0x9321:	cmp	r13, rcx
0x9324:	jbe	0x932c


0x9318:	mov	byte ptr [r14 + r15], 0x27
0x931d:	lea	rcx, [r15 + 1]
0x9321:	cmp	r13, rcx
0x9324:	jbe	0x932c


0x9959:	mov	eax, r12d
0x995c:	mov	ebx, 0x30
0x9961:	xor	r12d, r12d
0x9964:	jmp	0x8f69


0x9359:	lea	rax, [rbp + 1]
0x935d:	cmp	rax, r11
0x9360:	jae	0x937b


0x932c:	lea	rcx, [r15 + 2]
0x9330:	cmp	r13, rcx
0x9333:	ja	0x9969


0x9326:	mov	byte ptr [r14 + r15 + 1], 0x24
0x932c:	lea	rcx, [r15 + 2]
0x9330:	cmp	r13, rcx
0x9333:	ja	0x9969


0x9362:	mov	rax, qword ptr [rsp + 0x10]
0x9367:	movzx	eax, byte ptr [rax + rbp + 1]
0x936c:	mov	byte ptr [rsp + 0x28], al
0x9370:	sub	eax, 0x30
0x9373:	cmp	al, 9
0x9375:	jbe	0x9ba9


0x937b:	mov	eax, r12d
0x937e:	mov	ebx, 0x30
0x9383:	xor	r12d, r12d
0x9386:	jmp	0x8f38


0x9339:	lea	rcx, [r15 + 3]
0x933d:	mov	r8d, eax
0x9340:	cmp	r13, rcx
0x9343:	jbe	0x934a


0x9969:	mov	byte ptr [r14 + r15 + 2], 0x27
0x996f:	jmp	0x9339


0x9ba9:	cmp	r13, r15
0x9bac:	jbe	0x9bb3


0x9bb3:	lea	rax, [rcx + 2]
0x9bb7:	cmp	r13, rax
0x9bba:	jbe	0x9bc2


0x9bae:	mov	byte ptr [r14 + r15], 0x30
0x9bb3:	lea	rax, [rcx + 2]
0x9bb7:	cmp	r13, rax
0x9bba:	jbe	0x9bc2


0x9bc2:	mov	eax, r12d
0x9bc5:	lea	r15, [rcx + 3]
0x9bc9:	xor	r12d, r12d
0x9bcc:	mov	ebx, 0x30
0x9bd1:	jmp	0x8f38


0x9bbc:	mov	byte ptr [r14 + rcx + 2], 0x30
0x9bc2:	mov	eax, r12d
0x9bc5:	lea	r15, [rcx + 3]
0x9bc9:	xor	r12d, r12d
0x9bcc:	mov	ebx, 0x30
0x9bd1:	jmp	0x8f38


0x9032:	cmp	dword ptr [rsp + 8], 2
0x9037:	sete	al
0x903a:	and	al, byte ptr [rsp + 0xf]
0x903e:	jne	0x918e


0x93f0:	mov	edx, 0xd
0x93f5:	xor	r10d, r10d
0x93f8:	mov	ebx, 0x72
0x93fd:	jmp	0x9032


0x9974:	test	ebx, ebx
0x9976:	jne	0x8da3


0x997c:	mov	byte ptr [rsp + 0xd], 1
0x9981:	test	r13, r13
0x9984:	jne	0x9f1a


0x998a:	lea	rax, [rip + 0x7bca]
0x9991:	mov	qword ptr [rsp + 0x50], 0
0x999a:	mov	byte ptr [rsp + 0xe], 1
0x999f:	mov	byte ptr [rsp + 0x7c], 0
0x99a4:	xor	r12d, r12d
0x99a7:	mov	byte ptr [rsp + 0xf], 0
0x99ac:	mov	qword ptr [rsp + 0x18], 1
0x99b5:	mov	qword ptr [rsp + 0x48], rax
0x99ba:	mov	r15d, 1
0x99c0:	mov	dword ptr [rsp + 8], 2
0x99c8:	jmp	0x8de3


0x9f1a:	mov	byte ptr [rsp + 0xe], 1
0x9f1f:	xor	eax, eax
0x9f21:	xor	r12d, r12d
0x9f24:	mov	qword ptr [rsp + 0x50], 0
0x9f2d:	jmp	0x94d4


0x94d4:	lea	rbx, [rip + 0x8080]
0x94db:	mov	byte ptr [r14], 0x27
0x94df:	mov	dword ptr [rsp + 8], 2
0x94e7:	mov	r15d, 1
0x94ed:	mov	qword ptr [rsp + 0x18], 1
0x94f6:	mov	byte ptr [rsp + 0xf], 0
0x94fb:	mov	qword ptr [rsp + 0x48], rbx
0x9500:	mov	byte ptr [rsp + 0x7c], al
0x9504:	jmp	0x8de3


0x99d8:	test	r13, r13
0x99db:	je	0x9c06


0x9dcd:	lea	rax, [rip + 0x6473]
0x9dd4:	mov	byte ptr [rsp + 0xe], 1
0x9dd9:	mov	byte ptr [rsp + 0x7c], 0
0x9dde:	xor	r12d, r12d
0x9de1:	mov	qword ptr [rsp + 0x50], 0
0x9dea:	mov	byte ptr [rsp + 0xf], 1
0x9def:	mov	byte ptr [rsp + 0xd], 1
0x9df4:	mov	qword ptr [rsp + 0x18], 1
0x9dfd:	xor	r15d, r15d
0x9e00:	mov	qword ptr [rsp + 0x48], rax
0x9e05:	jmp	0x8de3


0x9c06:	mov	qword ptr [rsp + 0x50], 0
0x9c0f:	mov	byte ptr [rsp + 0xe], 1
0x9c14:	xor	r12d, r12d
0x9c17:	mov	byte ptr [rsp + 0x7c], 0
0x9c1c:	jmp	0x99fb


0x99e1:	mov	byte ptr [r14], 0x22
0x99e5:	mov	byte ptr [rsp + 0xe], 1
0x99ea:	xor	r12d, r12d
0x99ed:	mov	byte ptr [rsp + 0x7c], 0
0x99f2:	mov	qword ptr [rsp + 0x50], 0
0x99fb:	lea	rax, [rip + 0x6845]
0x9a02:	mov	byte ptr [rsp + 0xf], 0
0x9a07:	mov	byte ptr [rsp + 0xd], 1
0x9a0c:	mov	qword ptr [rsp + 0x18], 1
0x9a15:	mov	r15d, 1
0x9a1b:	mov	qword ptr [rsp + 0x48], rax
0x9a20:	jmp	0x8de3


0x99fb:	lea	rax, [rip + 0x6845]
0x9a02:	mov	byte ptr [rsp + 0xf], 0
0x9a07:	mov	byte ptr [rsp + 0xd], 1
0x9a0c:	mov	qword ptr [rsp + 0x18], 1
0x9a15:	mov	r15d, 1
0x9a1b:	mov	qword ptr [rsp + 0x48], rax
0x9a20:	jmp	0x8de3


0x9a25:	lea	rax, [rip + 0x681b]
0x9a2c:	mov	byte ptr [rsp + 0xe], 1
0x9a31:	mov	byte ptr [rsp + 0x7c], 0
0x9a36:	xor	r12d, r12d
0x9a39:	mov	qword ptr [rsp + 0x50], 0
0x9a42:	mov	byte ptr [rsp + 0xf], 1
0x9a47:	mov	byte ptr [rsp + 0xd], 1
0x9a4c:	mov	qword ptr [rsp + 0x18], 1
0x9a55:	xor	r15d, r15d
0x9a58:	mov	qword ptr [rsp + 0x48], rax
0x9a5d:	mov	dword ptr [rsp + 8], 5
0x9a65:	jmp	0x8de3


0x9a6a:	mov	byte ptr [rsp + 0xe], 1
0x9a6f:	mov	byte ptr [rsp + 0x7c], 0
0x9a74:	xor	r12d, r12d
0x9a77:	mov	qword ptr [rsp + 0x50], 0
0x9a80:	mov	byte ptr [rsp + 0xf], 0
0x9a85:	xor	r15d, r15d
0x9a88:	mov	byte ptr [rsp + 0xd], 1
0x9a8d:	mov	qword ptr [rsp + 0x18], 0
0x9a96:	mov	qword ptr [rsp + 0x48], 0
0x9a9f:	jmp	0x8de3


0x9aa4:	cmp	dword ptr [rsp + 8], 0xa
0x9aa9:	je	0x9b01


0x9b01:	xor	r15d, r15d
0x9b04:	test	ebx, ebx
0x9b06:	je	0x9ccd


0x9aab:	lea	rsi, [rip + 0x7aab]
0x9ab2:	xor	edi, edi
0x9ab4:	mov	edx, 5
0x9ab9:	call	0x27f0


0x9ccd:	mov	rdx, qword ptr [rsp + 0x68]
0x9cd2:	movzx	eax, byte ptr [rdx]
0x9cd5:	test	al, al
0x9cd7:	je	0x9b0c


0x9b0c:	test	ebx, ebx
0x9b0e:	mov	rbx, qword ptr [rsp + 0x60]
0x9b13:	setne	byte ptr [rsp + 0xf]
0x9b18:	xor	r12d, r12d
0x9b1b:	mov	rdi, rbx
0x9b1e:	call	0x2810


0x9ce9:	add	r15, 1
0x9ced:	movzx	eax, byte ptr [rdx + r15]
0x9cf2:	test	al, al
0x9cf4:	jne	0x9ce0


0x9ce5:	mov	byte ptr [r14 + r15], al
0x9ce9:	add	r15, 1
0x9ced:	movzx	eax, byte ptr [rdx + r15]
0x9cf2:	test	al, al
0x9cf4:	jne	0x9ce0


0x9cf6:	jmp	0x9b0c


0x9ce0:	cmp	r13, r15
0x9ce3:	jbe	0x9ce9


0x9b23:	mov	qword ptr [rsp + 0x48], rbx
0x9b28:	mov	qword ptr [rsp + 0x18], rax
0x9b2d:	mov	byte ptr [rsp + 0xe], 1
0x9b32:	mov	byte ptr [rsp + 0x7c], 0
0x9b37:	mov	qword ptr [rsp + 0x50], 0
0x9b40:	mov	byte ptr [rsp + 0xd], 1
0x9b45:	jmp	0x8de3


0x9abe:	mov	rcx, rax
0x9ac1:	mov	qword ptr [rsp + 0x68], rax
0x9ac6:	lea	rax, [rip + 0x7a90]
0x9acd:	cmp	rcx, rax
0x9ad0:	je	0x9e6e


0x9e6e:	mov	esi, dword ptr [rsp + 8]
0x9e72:	mov	rdi, rcx
0x9e75:	call	0x8c20


0x9ad6:	lea	rsi, [rip + 0x7a7e]
0x9add:	xor	edi, edi
0x9adf:	mov	edx, 5
0x9ae4:	call	0x27f0


0x9ae9:	mov	rcx, rax
0x9aec:	mov	qword ptr [rsp + 0x60], rax
0x9af1:	lea	rax, [rip + 0x7a63]
0x9af8:	cmp	rcx, rax
0x9afb:	je	0x9e84


0x9e84:	mov	esi, dword ptr [rsp + 8]
0x9e88:	mov	rdi, rcx
0x9e8b:	call	0x8c20


0x9e90:	mov	qword ptr [rsp + 0x60], rax
0x9e95:	jmp	0x9b01


0x9e7a:	mov	qword ptr [rsp + 0x68], rax
0x9e7f:	jmp	0x9ad6


0x9b4a:	mov	byte ptr [rsp + 0xe], 1
0x9b4f:	mov	byte ptr [rsp + 0x7c], 0
0x9b54:	xor	r12d, r12d
0x9b57:	mov	qword ptr [rsp + 0x50], 0
0x9b60:	mov	byte ptr [rsp + 0xf], 0
0x9b65:	xor	r15d, r15d
0x9b68:	mov	byte ptr [rsp + 0xd], 0
0x9b6d:	mov	qword ptr [rsp + 0x18], 0
0x9b76:	mov	qword ptr [rsp + 0x48], 0
0x9b7f:	jmp	0x8de3


0x9b84:	mov	byte ptr [rsp + 0xe], 1
0x9b89:	mov	byte ptr [rsp + 0x7c], 0
0x9b8e:	xor	r12d, r12d
0x9b91:	mov	qword ptr [rsp + 0x50], 0
0x9b9a:	mov	byte ptr [rsp + 0xf], 1
0x9b9f:	mov	byte ptr [rsp + 0xd], 1
0x9ba4:	jmp	0x8dc3


0x8dc3:	lea	rax, [rip + 0x8791]
0x8dca:	mov	qword ptr [rsp + 0x18], 1
0x8dd3:	xor	r15d, r15d
0x8dd6:	mov	dword ptr [rsp + 8], 2
0x8dde:	mov	qword ptr [rsp + 0x48], rax
0x8de3:	xor	r11d, r11d
0x8de6:	mov	rax, rbp
0x8de9:	mov	r8d, r12d
0x8dec:	mov	rbp, r11
0x8def:	mov	r11, rax
0x8df2:	nop	word ptr [rax + rax]
0x8df8:	cmp	r11, rbp
0x8dfb:	setne	r12b
0x8dff:	cmp	r11, -1
0x8e03:	jne	0x8e12


0x9d78:	test	ebx, ebx
0x9d7a:	je	0x9f08


0x9f08:	mov	byte ptr [rsp + 0xd], 0
0x9f0d:	jmp	0x9981


0x9d80:	lea	rax, [rip + 0x77d4]
0x9d87:	mov	byte ptr [rsp + 0xe], 1
0x9d8c:	mov	byte ptr [rsp + 0x7c], 0
0x9d91:	xor	r12d, r12d
0x9d94:	mov	qword ptr [rsp + 0x50], 0
0x9d9d:	mov	byte ptr [rsp + 0xf], 1
0x9da2:	mov	byte ptr [rsp + 0xd], 0
0x9da7:	mov	qword ptr [rsp + 0x18], 1
0x9db0:	xor	r15d, r15d
0x9db3:	mov	qword ptr [rsp + 0x48], rax
0x9db8:	jmp	0x8de3


0x9981:	test	r13, r13
0x9984:	jne	0x9f1a


0x9f44:	nop	
0x9f46:	nop	word ptr cs:[rax + rax]


0xa0fb:	nop	dword ptr [rax + rax]


0xa136:	nop	word ptr cs:[rax + rax]


0xa151:	nop	dword ptr [rax + rax]
0xa156:	nop	word ptr cs:[rax + rax]


0xa171:	nop	dword ptr [rax + rax]
0xa176:	nop	word ptr cs:[rax + rax]


0xa1b5:	nop	
0xa1b6:	nop	word ptr cs:[rax + rax]


0xa1d5:	nop	
0xa1d6:	nop	word ptr cs:[rax + rax]


0xa284:	nop	
0xa286:	nop	word ptr cs:[rax + rax]


0xa373:	nop	dword ptr [rax]
0xa376:	nop	word ptr cs:[rax + rax]


0xa38a:	nop	word ptr [rax + rax]


0xa423:	nop	dword ptr [rax]
0xa426:	nop	word ptr cs:[rax + rax]


0xa443:	nop	dword ptr [rax]
0xa446:	nop	word ptr cs:[rax + rax]


0xa45c:	nop	dword ptr [rax]


0xa478:	nop	dword ptr [rax + rax]


0xa494:	nop	
0xa496:	nop	word ptr cs:[rax + rax]


0xa52e:	nop	


0xa5ba:	nop	word ptr [rax + rax]


0xa5cc:	nop	dword ptr [rax]


0xa5df:	nop	


0xa678:	nop	dword ptr [rax + rax]


0xa6a1:	nop	dword ptr [rax + rax]
0xa6a6:	nop	word ptr cs:[rax + rax]


0xa6ba:	nop	word ptr [rax + rax]


0xa74e:	nop	


0xa7e1:	nop	dword ptr [rax + rax]
0xa7e6:	nop	word ptr cs:[rax + rax]


0xa7fc:	nop	dword ptr [rax]


0xa817:	nop	word ptr [rax + rax]


0xa833:	nop	dword ptr [rax]
0xa836:	nop	word ptr cs:[rax + rax]


0xa84c:	nop	dword ptr [rax]


0xa864:	nop	
0xa866:	nop	word ptr cs:[rax + rax]


0xa883:	nop	dword ptr [rax]
0xa886:	nop	word ptr cs:[rax + rax]


0xa8a8:	nop	dword ptr [rax + rax]


0xacc7:	nop	word ptr [rax + rax]


0xad68:	nop	dword ptr [rax + rax]


0xae45:	nop	
0xae46:	nop	word ptr cs:[rax + rax]


0xaeea:	nop	word ptr [rax + rax]


0xaf14:	nop	
0xaf16:	nop	word ptr cs:[rax + rax]


0xaf22:	nop	dword ptr [rax]
0xaf26:	nop	word ptr cs:[rax + rax]


0xaf66:	nop	word ptr cs:[rax + rax]


0xaf94:	nop	
0xaf96:	nop	word ptr cs:[rax + rax]


0xb022:	nop	dword ptr [rax]
0xb026:	nop	word ptr cs:[rax + rax]


0xb07a:	nop	word ptr [rax + rax]


0xb097:	nop	word ptr [rax + rax]


0xb0ce:	nop	


0xb0f8:	nop	dword ptr [rax + rax]


0xb113:	nop	word ptr cs:[rax + rax]
0xb11d:	nop	dword ptr [rax]


0xb155:	nop	word ptr cs:[rax + rax]
0xb15f:	nop	


0xb1e3:	nop	word ptr cs:[rax + rax]
0xb1ed:	nop	dword ptr [rax]


0xb21c:	nop	dword ptr [rax]


0xb24a:	nop	word ptr [rax + rax]


0xb2ad:	nop	dword ptr [rax]


0xb33f:	nop	


0xb476:	nop	word ptr cs:[rax + rax]


0xb55f:	nop	


0xb56c:	nop	dword ptr [rax]


0xb613:	nop	dword ptr [rax]
0xb616:	nop	word ptr cs:[rax + rax]


0xb761:	nop	word ptr cs:[rax + rax]
0xb76b:	nop	dword ptr [rax + rax]


0xb862:	nop	word ptr cs:[rax + rax]
0xb86c:	nop	dword ptr [rax]


0xb8ed:	nop	dword ptr [rax]


0xb98c:	nop	dword ptr [rax]


0xb9d1:	nop	dword ptr [rax + rax]
0xb9d6:	nop	word ptr cs:[rax + rax]


0xba21:	nop	dword ptr [rax + rax]
0xba26:	nop	word ptr cs:[rax + rax]


0xbc7b:	mov	rbx, r9
0xbc7e:	nop	
0xbc80:	lea	rax, [rbx - 1]
0xbc84:	mov	r8d, 1
0xbc8a:	mov	r9, rax
0xbc8d:	lea	rax, [rax - 1]
0xbc91:	add	r8d, 1
0xbc95:	cmp	byte ptr [rax + 1], 0x25
0xbc99:	jne	0xbc8a


0xbdf2:	xor	r8d, r8d
0xbdf5:	mov	eax, 0x2520
0xbdfa:	test	r11d, r11d
0xbdfd:	mov	word ptr [rsp + 0xab], ax
0xbe05:	jne	0xd4db


0xbe0b:	lea	rdx, [rsp + 0xab]
0xbe13:	mov	r12, rbx
0xbe16:	lea	rax, [rdx + 2]
0xbe1a:	lea	r9, [rsp + 0xb0]
0xbe22:	mov	byte ptr [rax], sil
0xbe25:	mov	byte ptr [rax + 1], 0
0xbe29:	mov	rcx, r13
0xbe2c:	mov	esi, 0x400
0xbe31:	mov	dword ptr [rsp + 0x38], r10d
0xbe36:	mov	rdi, r9
0xbe39:	mov	byte ptr [rsp + 0x50], r8b
0xbe3e:	mov	dword ptr [rsp + 0x48], r11d
0xbe43:	mov	qword ptr [rsp + 0x40], r9
0xbe48:	call	0x2a60


0xd4db:	xor	edi, edi
0xd4dd:	jmp	0xbfcc


0xbfcc:	lea	rdx, [rsp + 0xab]
0xbfd4:	mov	byte ptr [rsp + 0xad], r11b
0xbfdc:	mov	r12, rbx
0xbfdf:	mov	r11d, edi
0xbfe2:	lea	rax, [rdx + 3]
0xbfe6:	jmp	0xbe1a


0xbe1a:	lea	r9, [rsp + 0xb0]
0xbe22:	mov	byte ptr [rax], sil
0xbe25:	mov	byte ptr [rax + 1], 0
0xbe29:	mov	rcx, r13
0xbe2c:	mov	esi, 0x400
0xbe31:	mov	dword ptr [rsp + 0x38], r10d
0xbe36:	mov	rdi, r9
0xbe39:	mov	byte ptr [rsp + 0x50], r8b
0xbe3e:	mov	dword ptr [rsp + 0x48], r11d
0xbe43:	mov	qword ptr [rsp + 0x40], r9
0xbe48:	call	0x2a60


0xbe4d:	test	rax, rax
0xbe50:	je	0xbb62


0xbe56:	movsxd	r10, dword ptr [rsp + 0x38]
0xbe5b:	lea	rcx, [rax - 1]
0xbe5f:	mov	rdx, qword ptr [rsp + 8]
0xbe64:	mov	eax, 0
0xbe69:	test	r10d, r10d
0xbe6c:	cmovns	rax, r10
0xbe70:	cmp	rcx, rax
0xbe73:	mov	rbx, rax
0xbe76:	cmovae	rbx, rcx
0xbe7a:	sub	rdx, r14
0xbe7d:	cmp	rdx, rbx
0xbe80:	jbe	0xbafc


0xbe86:	test	rbp, rbp
0xbe89:	je	0xbf2e


0xbf2e:	add	r14, rbx
0xbf31:	jmp	0xbb62


0xbe8f:	mov	r11d, dword ptr [rsp + 0x48]
0xbe94:	mov	r9, qword ptr [rsp + 0x40]
0xbe99:	movzx	r8d, byte ptr [rsp + 0x50]
0xbe9f:	test	r11d, r11d
0xbea2:	jne	0xbefe


0xbea4:	cmp	rcx, rax
0xbea7:	jae	0xbefe


0xbefe:	test	r8b, r8b
0xbf01:	lea	rsi, [r9 + 1]
0xbf05:	mov	rdx, rcx
0xbf08:	jne	0xcf28


0xbea9:	movsxd	rdx, r10d
0xbeac:	mov	qword ptr [rsp + 0x50], r9
0xbeb1:	mov	qword ptr [rsp + 0x48], rcx
0xbeb6:	sub	rdx, rcx
0xbeb9:	cmp	r15d, 0x30
0xbebd:	mov	byte ptr [rsp + 0x40], r8b
0xbec2:	lea	rax, [rbp + rdx]
0xbec7:	mov	qword ptr [rsp + 0x38], rax
0xbecc:	je	0xcf3f


0xbf0e:	cmp	byte ptr [rsp + 0x30], 0
0xbf13:	mov	rdi, rbp
0xbf16:	mov	qword ptr [rsp + 0x30], rcx
0xbf1b:	je	0xc791


0xcf28:	mov	rdi, rbp
0xcf2b:	mov	qword ptr [rsp + 0x30], rcx
0xcf30:	call	0xb990


0xcf3f:	mov	rdi, rbp
0xcf42:	mov	esi, 0x30
0xcf47:	call	0x28f0


0xbed2:	cmp	r15d, 0x2b
0xbed6:	je	0xcf3f


0xc791:	call	0x2970


0xbf21:	call	0xb9e0


0xbedc:	mov	rdi, rbp
0xbedf:	mov	esi, 0x20
0xbee4:	call	0x28f0


0xbf26:	mov	rcx, qword ptr [rsp + 0x30]
0xbf2b:	add	rbp, rcx
0xbf2e:	add	r14, rbx
0xbf31:	jmp	0xbb62


0xc796:	mov	rcx, qword ptr [rsp + 0x30]
0xc79b:	jmp	0xbf2b


0xbf2b:	add	rbp, rcx
0xbf2e:	add	r14, rbx
0xbf31:	jmp	0xbb62


0xbee9:	movzx	r8d, byte ptr [rsp + 0x40]
0xbeef:	mov	rbp, qword ptr [rsp + 0x38]
0xbef4:	mov	r9, qword ptr [rsp + 0x50]
0xbef9:	mov	rcx, qword ptr [rsp + 0x48]
0xbefe:	test	r8b, r8b
0xbf01:	lea	rsi, [r9 + 1]
0xbf05:	mov	rdx, rcx
0xbf08:	jne	0xcf28


0xcf4c:	mov	rbp, qword ptr [rsp + 0x38]
0xcf51:	movzx	r8d, byte ptr [rsp + 0x40]
0xcf57:	mov	rcx, qword ptr [rsp + 0x48]
0xcf5c:	mov	r9, qword ptr [rsp + 0x50]
0xcf61:	jmp	0xbefe


0xcf35:	mov	rcx, qword ptr [rsp + 0x30]
0xcf3a:	jmp	0xbf2b


0xbf36:	test	r11d, r11d
0xbf39:	jne	0xbc80


0xbf3f:	movzx	eax, byte ptr [rsp + 0x30]
0xbf44:	test	r8b, r8b
0xbf47:	lea	rdx, [rsp + 0xab]
0xbf4f:	mov	r12, rbx
0xbf52:	cmovne	eax, r8d
0xbf56:	xor	r8d, r8d
0xbf59:	xor	r11d, r11d
0xbf5c:	mov	byte ptr [rsp + 0x30], al
0xbf60:	mov	eax, 0x2520
0xbf65:	mov	word ptr [rsp + 0xab], ax
0xbf6d:	lea	rax, [rdx + 2]
0xbf71:	jmp	0xbe1a


0xbf76:	cmp	r11d, 0x45
0xbf7a:	je	0xbc80


0xbf80:	mov	ecx, dword ptr [r13]
0xbf84:	mov	edi, 2
0xbf89:	nop	dword ptr [rax]
0xbf90:	mov	eax, ecx
0xbf92:	xor	esi, esi
0xbf94:	mov	byte ptr [rsp + 0x40], 0
0xbf99:	shr	eax, 0x1f
0xbf9c:	mov	dword ptr [rsp + 0x38], eax
0xbfa0:	mov	eax, ecx
0xbfa2:	not	eax
0xbfa4:	shr	eax, 0x1f
0xbfa7:	cmp	r11d, 0x4f
0xbfab:	jne	0xce30


0xbfb1:	test	al, al
0xbfb3:	je	0xce30


0xce30:	mov	eax, ecx
0xce32:	neg	eax
0xce34:	cmp	byte ptr [rsp + 0x38], 0
0xce39:	cmovne	ecx, eax
0xce3c:	jmp	0xc560


0xbfb9:	mov	esi, r9d
0xbfbc:	mov	edx, 0x2520
0xbfc1:	xor	r8d, r8d
0xbfc4:	mov	word ptr [rsp + 0xab], dx
0xbfcc:	lea	rdx, [rsp + 0xab]
0xbfd4:	mov	byte ptr [rsp + 0xad], r11b
0xbfdc:	mov	r12, rbx
0xbfdf:	mov	r11d, edi
0xbfe2:	lea	rax, [rdx + 3]
0xbfe6:	jmp	0xbe1a


0xc560:	lea	r9, [rsp + 0xb0]
0xc568:	mov	r12d, 0xcccccccd
0xc56e:	lea	r11, [r9 + 0x17]
0xc572:	nop	word ptr [rax + rax]
0xc578:	test	sil, 1
0xc57c:	lea	r8, [r11 - 1]
0xc580:	je	0xc591


0xc591:	mov	eax, ecx
0xc593:	sar	esi, 1
0xc595:	mul	r12d
0xc598:	shr	edx, 3
0xc59b:	lea	eax, [rdx + rdx*4]
0xc59e:	add	eax, eax
0xc5a0:	sub	ecx, eax
0xc5a2:	mov	eax, esi
0xc5a4:	add	ecx, 0x30
0xc5a7:	or	eax, edx
0xc5a9:	mov	byte ptr [r11 - 1], cl
0xc5ad:	mov	ecx, edx
0xc5af:	mov	r11, r8
0xc5b2:	jne	0xc578


0xc582:	lea	rax, [r11 - 2]
0xc586:	mov	byte ptr [r11 - 1], 0x3a
0xc58b:	mov	r11, r8
0xc58e:	mov	r8, rax
0xc591:	mov	eax, ecx
0xc593:	sar	esi, 1
0xc595:	mul	r12d
0xc598:	shr	edx, 3
0xc59b:	lea	eax, [rdx + rdx*4]
0xc59e:	add	eax, eax
0xc5a0:	sub	ecx, eax
0xc5a2:	mov	eax, esi
0xc5a4:	add	ecx, 0x30
0xc5a7:	or	eax, edx
0xc5a9:	mov	byte ptr [r11 - 1], cl
0xc5ad:	mov	ecx, edx
0xc5af:	mov	r11, r8
0xc5b2:	jne	0xc578


0xc5b4:	cmp	r10d, edi
0xc5b7:	cmovge	edi, r10d
0xc5bb:	cmp	byte ptr [rsp + 0x38], 0
0xc5c0:	mov	dword ptr [rsp + 0x48], edi
0xc5c4:	jne	0xce48


0xc578:	test	sil, 1
0xc57c:	lea	r8, [r11 - 1]
0xc580:	je	0xc591


0xc5ca:	cmp	byte ptr [rsp + 0x40], 0
0xc5cf:	je	0xc869


0xce48:	cmp	r15d, 0x2d
0xce4c:	mov	byte ptr [rsp + 0x38], 0x2d
0xce51:	jne	0xc5e4


0xc869:	mov	rdx, qword ptr [rsp + 8]
0xc86e:	lea	rcx, [r9 + 0x17]
0xc872:	sub	rcx, r8
0xc875:	sub	rdx, r14
0xc878:	cmp	r15d, 0x2d
0xc87c:	je	0xc88f


0xc5d5:	cmp	r15d, 0x2d
0xc5d9:	je	0xd103


0xce57:	test	r10d, r10d
0xce5a:	mov	r11d, 0
0xce60:	mov	rax, qword ptr [rsp + 8]
0xce65:	cmovns	r11d, r10d
0xce69:	mov	r12d, 1
0xce6f:	movsxd	r11, r11d
0xce72:	test	r11, r11
0xce75:	cmovne	r12, r11
0xce79:	sub	rax, r14
0xce7c:	cmp	rax, r12
0xce7f:	jbe	0xbafc


0xc5e4:	mov	eax, dword ptr [rsp + 0x48]
0xc5e8:	lea	rcx, [r9 + 0x17]
0xc5ec:	mov	rdx, qword ptr [rsp + 8]
0xc5f1:	sub	rcx, r8
0xc5f4:	lea	r12d, [rax - 1]
0xc5f8:	sub	rdx, r14
0xc5fb:	sub	r12d, ecx
0xc5fe:	test	r12d, r12d
0xc601:	jle	0xd04c


0xc88f:	test	r10d, r10d
0xc892:	mov	r11d, 0
0xc898:	mov	r12, rbx
0xc89b:	cmovns	r11d, r10d
0xc89f:	movsxd	r11, r11d
0xc8a2:	jmp	0xc705


0xc87e:	mov	r12d, dword ptr [rsp + 0x48]
0xc883:	sub	r12d, ecx
0xc886:	test	r12d, r12d
0xc889:	jg	0xd219


0xd103:	mov	r15d, 0x2b
0xd109:	jmp	0xce57


0xc5df:	mov	byte ptr [rsp + 0x38], 0x2b
0xc5e4:	mov	eax, dword ptr [rsp + 0x48]
0xc5e8:	lea	rcx, [r9 + 0x17]
0xc5ec:	mov	rdx, qword ptr [rsp + 8]
0xc5f1:	sub	rcx, r8
0xc5f4:	lea	r12d, [rax - 1]
0xc5f8:	sub	rdx, r14
0xc5fb:	sub	r12d, ecx
0xc5fe:	test	r12d, r12d
0xc601:	jle	0xd04c


0xce85:	test	rbp, rbp
0xce88:	je	0xceec


0xd04c:	test	r10d, r10d
0xd04f:	mov	r11d, 0
0xd055:	mov	r12d, 1
0xd05b:	cmovns	r11d, r10d
0xd05f:	movsxd	r11, r11d
0xd062:	test	r11, r11
0xd065:	cmovne	r12, r11
0xd069:	cmp	r12, rdx
0xd06c:	jae	0xbafc


0xc607:	cmp	r15d, 0x5f
0xc60b:	je	0xcfc6


0xc705:	cmp	rcx, r11
0xc708:	mov	rbx, r11
0xc70b:	cmovae	rbx, rcx
0xc70f:	cmp	rbx, rdx
0xc712:	jae	0xbafc


0xd219:	cmp	r15d, 0x5f
0xd21d:	je	0xcfc1


0xceec:	mov	rdx, qword ptr [rsp + 8]
0xcef1:	lea	rcx, [r9 + 0x17]
0xcef5:	add	r14, r12
0xcef8:	mov	r15d, 0x2d
0xcefe:	mov	r12, rbx
0xcf01:	sub	rcx, r8
0xcf04:	sub	rdx, r14
0xcf07:	jmp	0xc705


0xce8a:	mov	eax, dword ptr [rsp + 0x48]
0xce8e:	test	eax, eax
0xce90:	jne	0xcee4


0xd072:	test	rbp, rbp
0xd075:	je	0xd0f0


0xcfc6:	movsxd	r15, r12d
0xcfc9:	cmp	r15, rdx
0xcfcc:	jae	0xbafc


0xc611:	movsxd	rax, dword ptr [rsp + 0x48]
0xc616:	cmp	rax, rdx
0xc619:	mov	rdi, rax
0xc61c:	jae	0xbafc


0xc718:	test	rbp, rbp
0xc71b:	je	0xbf2e


0xcfc1:	mov	byte ptr [rsp + 0x38], 0
0xcfc6:	movsxd	r15, r12d
0xcfc9:	cmp	r15, rdx
0xcfcc:	jae	0xbafc


0xd223:	movsxd	rax, dword ptr [rsp + 0x48]
0xd228:	cmp	rax, rdx
0xd22b:	jae	0xbafc


0xce92:	cmp	r11, 1
0xce96:	jbe	0xcee4


0xcee4:	mov	byte ptr [rbp], r15b
0xcee8:	add	rbp, 1
0xceec:	mov	rdx, qword ptr [rsp + 8]
0xcef1:	lea	rcx, [r9 + 0x17]
0xcef5:	add	r14, r12
0xcef8:	mov	r15d, 0x2d
0xcefe:	mov	r12, rbx
0xcf01:	sub	rcx, r8
0xcf04:	sub	rdx, r14
0xcf07:	jmp	0xc705


0xd0f0:	mov	rdx, qword ptr [rsp + 8]
0xd0f5:	add	r14, r12
0xd0f8:	mov	r12, rbx
0xd0fb:	sub	rdx, r14
0xd0fe:	jmp	0xc705


0xd077:	mov	edi, dword ptr [rsp + 0x48]
0xd07b:	test	edi, edi
0xd07d:	jne	0xd0e4


0xcfd2:	test	rbp, rbp
0xcfd5:	je	0xd008


0xc622:	test	r10d, r10d
0xc625:	mov	eax, 0
0xc62a:	mov	esi, 1
0xc62f:	cmovns	eax, r10d
0xc633:	cdqe	
0xc635:	test	rax, rax
0xc638:	cmovne	rsi, rax
0xc63c:	cmp	rsi, rdx
0xc63f:	jae	0xbafc


0xc721:	mov	esi, dword ptr [rsp + 0x48]
0xc725:	test	esi, esi
0xc727:	jne	0xc778


0xd231:	movsxd	r9, r12d
0xd234:	mov	r12, rbx
0xd237:	jmp	0xc6be


0xce98:	movsxd	rax, r10d
0xce9b:	mov	rdi, rbp
0xce9e:	mov	esi, 0x20
0xcea3:	lea	rcx, [rax - 1]
0xcea7:	mov	qword ptr [rsp + 0x60], r9
0xceac:	mov	qword ptr [rsp + 0x58], r8
0xceb1:	mov	qword ptr [rsp + 0x50], r11
0xceb6:	mov	dword ptr [rsp + 0x40], r10d
0xcebb:	mov	rdx, rcx
0xcebe:	mov	qword ptr [rsp + 0x38], rcx
0xcec3:	call	0x28f0


0xd07f:	cmp	r11, 1
0xd083:	jbe	0xd0e4


0xd0e4:	movzx	eax, byte ptr [rsp + 0x38]
0xd0e9:	add	rbp, 1
0xd0ed:	mov	byte ptr [rbp - 1], al
0xd0f0:	mov	rdx, qword ptr [rsp + 8]
0xd0f5:	add	r14, r12
0xd0f8:	mov	r12, rbx
0xd0fb:	sub	rdx, r14
0xd0fe:	jmp	0xc705


0xd008:	mov	rdx, qword ptr [rsp + 8]
0xd00d:	mov	eax, r10d
0xd010:	add	r14, r15
0xd013:	sub	eax, r12d
0xd016:	cmp	r10d, r12d
0xd019:	mov	r10d, 0
0xd01f:	cmovg	r10d, eax
0xd023:	sub	rdx, r14
0xd026:	cmp	byte ptr [rsp + 0x38], 0
0xd02b:	jne	0xd152


0xcfd7:	mov	rdi, rbp
0xcfda:	mov	rdx, r15
0xcfdd:	mov	esi, 0x20
0xcfe2:	mov	dword ptr [rsp + 0x58], r10d
0xcfe7:	mov	qword ptr [rsp + 0x50], r9
0xcfec:	add	rbp, r15
0xcfef:	mov	qword ptr [rsp + 0x40], r8
0xcff4:	call	0x28f0


0xc645:	add	r14, rsi
0xc648:	test	rbp, rbp
0xc64b:	movsxd	r9, r12d
0xc64e:	mov	r12, rbx
0xc651:	je	0xc6f4


0xc729:	cmp	rcx, r11
0xc72c:	jae	0xc778


0xc778:	cmp	byte ptr [rsp + 0x30], 0
0xc77d:	mov	rdx, rcx
0xc780:	mov	qword ptr [rsp + 0x30], rcx
0xc785:	mov	rsi, r8
0xc788:	mov	rdi, rbp
0xc78b:	jne	0xbf21


0xc6be:	test	rbp, rbp
0xc6c1:	je	0xc6f4


0xd085:	movsxd	rdx, r10d
0xd088:	mov	dword ptr [rsp + 0x6c], r10d
0xd08d:	mov	qword ptr [rsp + 0x60], r8
0xd092:	sub	rdx, 1
0xd096:	cmp	r15d, 0x30
0xd09a:	mov	qword ptr [rsp + 0x58], rcx
0xd09f:	lea	rax, [rbp + rdx]
0xd0a4:	mov	qword ptr [rsp + 0x50], r11
0xd0a9:	mov	qword ptr [rsp + 0x40], rax
0xd0ae:	je	0xd47f


0xd031:	add	r9, 0x17
0xd035:	movsxd	r11, r10d
0xd038:	mov	r12, rbx
0xd03b:	mov	rcx, r9
0xd03e:	mov	r15d, 0x5f
0xd044:	sub	rcx, r8
0xd047:	jmp	0xc705


0xd152:	movsxd	r15, r10d
0xd155:	mov	r12d, 1
0xd15b:	test	r15, r15
0xd15e:	cmovne	r12, r15
0xd162:	cmp	r12, rdx
0xd165:	jae	0xbafc


0xc6f4:	mov	rdx, qword ptr [rsp + 8]
0xc6f9:	add	r14, r9
0xc6fc:	xor	r11d, r11d
0xc6ff:	xor	r10d, r10d
0xc702:	sub	rdx, r14
0xc705:	cmp	rcx, r11
0xc708:	mov	rbx, r11
0xc70b:	cmovae	rbx, rcx
0xc70f:	cmp	rbx, rdx
0xc712:	jae	0xbafc


0xc657:	test	edi, edi
0xc659:	jne	0xc6af


0xc72e:	movsxd	rdx, r10d
0xc731:	mov	qword ptr [rsp + 0x48], r8
0xc736:	mov	qword ptr [rsp + 0x40], rcx
0xc73b:	sub	rdx, rcx
0xc73e:	cmp	r15d, 0x30
0xc742:	lea	rax, [rbp + rdx]
0xc747:	mov	qword ptr [rsp + 0x38], rax
0xc74c:	je	0xcf8a


0xc6c3:	mov	rdx, r9
0xc6c6:	mov	rdi, rbp
0xc6c9:	mov	esi, 0x30
0xc6ce:	mov	qword ptr [rsp + 0x50], r8
0xc6d3:	mov	qword ptr [rsp + 0x40], rcx
0xc6d8:	mov	qword ptr [rsp + 0x38], r9
0xc6dd:	call	0x28f0


0xd47f:	mov	rdi, rbp
0xd482:	mov	esi, 0x30
0xd487:	call	0x28f0


0xd0b4:	cmp	r15d, 0x2b
0xd0b8:	je	0xd47f


0xd16b:	test	rbp, rbp
0xd16e:	je	0xd1cb


0xc65b:	cmp	rax, 1
0xc65f:	jbe	0xc6af


0xc6af:	movzx	eax, byte ptr [rsp + 0x38]
0xc6b4:	add	rbp, 1
0xc6b8:	mov	r12, rbx
0xc6bb:	mov	byte ptr [rbp - 1], al
0xc6be:	test	rbp, rbp
0xc6c1:	je	0xc6f4


0xcf8a:	mov	rdi, rbp
0xcf8d:	mov	esi, 0x30
0xcf92:	call	0x28f0


0xc752:	cmp	r15d, 0x2b
0xc756:	je	0xcf8a


0xd0be:	mov	rdi, rbp
0xd0c1:	mov	esi, 0x20
0xd0c6:	call	0x28f0


0xd1cb:	mov	rdx, qword ptr [rsp + 8]
0xd1d0:	add	r9, 0x17
0xd1d4:	add	r14, r12
0xd1d7:	mov	rcx, r9
0xd1da:	mov	r11, r15
0xd1dd:	mov	r12, rbx
0xd1e0:	sub	rcx, r8
0xd1e3:	mov	r15d, 0x5f
0xd1e9:	sub	rdx, r14
0xd1ec:	jmp	0xc705


0xd170:	mov	r11d, dword ptr [rsp + 0x48]
0xd175:	test	r11d, r11d
0xd178:	jne	0xd1bf


0xc661:	movsxd	rdx, r10d
0xc664:	mov	qword ptr [rsp + 0x58], r8
0xc669:	mov	qword ptr [rsp + 0x50], r9
0xc66e:	sub	rdx, 1
0xc672:	cmp	r15d, 0x30
0xc676:	mov	qword ptr [rsp + 0x40], rcx
0xc67b:	lea	r12, [rbp + rdx]
0xc680:	je	0xd451


0xc75c:	mov	rdi, rbp
0xc75f:	mov	esi, 0x20
0xc764:	call	0x28f0


0xd17a:	cmp	r15, 1
0xd17e:	jbe	0xd1bf


0xd1bf:	movzx	eax, byte ptr [rsp + 0x38]
0xd1c4:	add	rbp, 1
0xd1c8:	mov	byte ptr [rbp - 1], al
0xd1cb:	mov	rdx, qword ptr [rsp + 8]
0xd1d0:	add	r9, 0x17
0xd1d4:	add	r14, r12
0xd1d7:	mov	rcx, r9
0xd1da:	mov	r11, r15
0xd1dd:	mov	r12, rbx
0xd1e0:	sub	rcx, r8
0xd1e3:	mov	r15d, 0x5f
0xd1e9:	sub	rdx, r14
0xd1ec:	jmp	0xc705


0xd451:	mov	rdi, rbp
0xd454:	mov	esi, 0x30
0xd459:	mov	rbp, r12
0xd45c:	call	0x28f0


0xc686:	cmp	r15d, 0x2b
0xc68a:	je	0xd451


0xd180:	lea	rcx, [r15 - 1]
0xd184:	mov	rdi, rbp
0xd187:	mov	esi, 0x20
0xd18c:	mov	dword ptr [rsp + 0x60], r10d
0xd191:	mov	qword ptr [rsp + 0x58], r9
0xd196:	mov	rdx, rcx
0xd199:	mov	qword ptr [rsp + 0x50], r8
0xd19e:	mov	qword ptr [rsp + 0x40], rcx
0xd1a3:	call	0x28f0


0xc690:	mov	rdi, rbp
0xc693:	mov	esi, 0x20
0xc698:	mov	rbp, r12
0xc69b:	call	0x28f0


0xc6a0:	mov	r8, qword ptr [rsp + 0x58]
0xc6a5:	mov	r9, qword ptr [rsp + 0x50]
0xc6aa:	mov	rcx, qword ptr [rsp + 0x40]
0xc6af:	movzx	eax, byte ptr [rsp + 0x38]
0xc6b4:	add	rbp, 1
0xc6b8:	mov	r12, rbx
0xc6bb:	mov	byte ptr [rbp - 1], al
0xc6be:	test	rbp, rbp
0xc6c1:	je	0xc6f4


0xd1a8:	mov	rcx, qword ptr [rsp + 0x40]
0xd1ad:	mov	r10d, dword ptr [rsp + 0x60]
0xd1b2:	mov	r9, qword ptr [rsp + 0x58]
0xd1b7:	mov	r8, qword ptr [rsp + 0x50]
0xd1bc:	add	rbp, rcx
0xd1bf:	movzx	eax, byte ptr [rsp + 0x38]
0xd1c4:	add	rbp, 1
0xd1c8:	mov	byte ptr [rbp - 1], al
0xd1cb:	mov	rdx, qword ptr [rsp + 8]
0xd1d0:	add	r9, 0x17
0xd1d4:	add	r14, r12
0xd1d7:	mov	rcx, r9
0xd1da:	mov	r11, r15
0xd1dd:	mov	r12, rbx
0xd1e0:	sub	rcx, r8
0xd1e3:	mov	r15d, 0x5f
0xd1e9:	sub	rdx, r14
0xd1ec:	jmp	0xc705


0xd461:	mov	rcx, qword ptr [rsp + 0x40]
0xd466:	mov	r9, qword ptr [rsp + 0x50]
0xd46b:	mov	r8, qword ptr [rsp + 0x58]
0xd470:	jmp	0xc6af


0xc769:	mov	rbp, qword ptr [rsp + 0x38]
0xc76e:	mov	r8, qword ptr [rsp + 0x48]
0xc773:	mov	rcx, qword ptr [rsp + 0x40]
0xc778:	cmp	byte ptr [rsp + 0x30], 0
0xc77d:	mov	rdx, rcx
0xc780:	mov	qword ptr [rsp + 0x30], rcx
0xc785:	mov	rsi, r8
0xc788:	mov	rdi, rbp
0xc78b:	jne	0xbf21


0xd0cb:	mov	rbp, qword ptr [rsp + 0x40]
0xd0d0:	mov	r10d, dword ptr [rsp + 0x6c]
0xd0d5:	mov	r8, qword ptr [rsp + 0x60]
0xd0da:	mov	rcx, qword ptr [rsp + 0x58]
0xd0df:	mov	r11, qword ptr [rsp + 0x50]
0xd0e4:	movzx	eax, byte ptr [rsp + 0x38]
0xd0e9:	add	rbp, 1
0xd0ed:	mov	byte ptr [rbp - 1], al
0xd0f0:	mov	rdx, qword ptr [rsp + 8]
0xd0f5:	add	r14, r12
0xd0f8:	mov	r12, rbx
0xd0fb:	sub	rdx, r14
0xd0fe:	jmp	0xc705


0xcf97:	mov	rbp, qword ptr [rsp + 0x38]
0xcf9c:	mov	rcx, qword ptr [rsp + 0x40]
0xcfa1:	mov	r8, qword ptr [rsp + 0x48]
0xcfa6:	jmp	0xc778


0xd48c:	mov	rbp, qword ptr [rsp + 0x40]
0xd491:	mov	r11, qword ptr [rsp + 0x50]
0xd496:	mov	rcx, qword ptr [rsp + 0x58]
0xd49b:	mov	r8, qword ptr [rsp + 0x60]
0xd4a0:	mov	r10d, dword ptr [rsp + 0x6c]
0xd4a5:	jmp	0xd0e4


0xc6e2:	mov	r9, qword ptr [rsp + 0x38]
0xc6e7:	mov	r8, qword ptr [rsp + 0x50]
0xc6ec:	mov	rcx, qword ptr [rsp + 0x40]
0xc6f1:	add	rbp, r9
0xc6f4:	mov	rdx, qword ptr [rsp + 8]
0xc6f9:	add	r14, r9
0xc6fc:	xor	r11d, r11d
0xc6ff:	xor	r10d, r10d
0xc702:	sub	rdx, r14
0xc705:	cmp	rcx, r11
0xc708:	mov	rbx, r11
0xc70b:	cmovae	rbx, rcx
0xc70f:	cmp	rbx, rdx
0xc712:	jae	0xbafc


0xcff9:	mov	r10d, dword ptr [rsp + 0x58]
0xcffe:	mov	r9, qword ptr [rsp + 0x50]
0xd003:	mov	r8, qword ptr [rsp + 0x40]
0xd008:	mov	rdx, qword ptr [rsp + 8]
0xd00d:	mov	eax, r10d
0xd010:	add	r14, r15
0xd013:	sub	eax, r12d
0xd016:	cmp	r10d, r12d
0xd019:	mov	r10d, 0
0xd01f:	cmovg	r10d, eax
0xd023:	sub	rdx, r14
0xd026:	cmp	byte ptr [rsp + 0x38], 0
0xd02b:	jne	0xd152


0xcec8:	mov	rcx, qword ptr [rsp + 0x38]
0xcecd:	mov	r9, qword ptr [rsp + 0x60]
0xced2:	mov	r8, qword ptr [rsp + 0x58]
0xced7:	mov	r11, qword ptr [rsp + 0x50]
0xcedc:	mov	r10d, dword ptr [rsp + 0x40]
0xcee1:	add	rbp, rcx
0xcee4:	mov	byte ptr [rbp], r15b
0xcee8:	add	rbp, 1
0xceec:	mov	rdx, qword ptr [rsp + 8]
0xcef1:	lea	rcx, [r9 + 0x17]
0xcef5:	add	r14, r12
0xcef8:	mov	r15d, 0x2d
0xcefe:	mov	r12, rbx
0xcf01:	sub	rcx, r8
0xcf04:	sub	rdx, r14
0xcf07:	jmp	0xc705


0xbfeb:	test	r10d, r10d
0xbfee:	mov	ecx, 0
0xbff3:	mov	eax, 1
0xbff8:	cmovns	ecx, r10d
0xbffc:	movsxd	rcx, ecx
0xbfff:	test	rcx, rcx
0xc002:	cmove	rcx, rax
0xc006:	mov	rax, qword ptr [rsp + 8]
0xc00b:	sub	rax, r14
0xc00e:	cmp	rax, rcx
0xc011:	jbe	0xbafc


0xc017:	test	rbp, rbp
0xc01a:	je	0xc068


0xc068:	add	r14, rcx
0xc06b:	mov	r12, rbx
0xc06e:	jmp	0xbb62


0xc01c:	cmp	r10d, 1
0xc020:	jle	0xc05c


0xc05c:	mov	byte ptr [rbp], 9
0xc060:	add	rbp, 1
0xc064:	nop	dword ptr [rax]
0xc068:	add	r14, rcx
0xc06b:	mov	r12, rbx
0xc06e:	jmp	0xbb62


0xc022:	movsxd	rdx, r10d
0xc025:	mov	qword ptr [rsp + 0x30], rcx
0xc02a:	sub	rdx, 1
0xc02e:	cmp	r15d, 0x30
0xc032:	lea	r12, [rbp + rdx]
0xc037:	je	0xd354


0xd354:	mov	rdi, rbp
0xd357:	mov	esi, 0x30
0xd35c:	mov	rbp, r12
0xd35f:	call	0x28f0


0xc03d:	cmp	r15d, 0x2b
0xc041:	je	0xd354


0xc047:	mov	rdi, rbp
0xc04a:	mov	esi, 0x20
0xc04f:	mov	rbp, r12
0xc052:	call	0x28f0


0xc057:	mov	rcx, qword ptr [rsp + 0x30]
0xc05c:	mov	byte ptr [rbp], 9
0xc060:	add	rbp, 1
0xc064:	nop	dword ptr [rax]
0xc068:	add	r14, rcx
0xc06b:	mov	r12, rbx
0xc06e:	jmp	0xbb62


0xd364:	mov	rcx, qword ptr [rsp + 0x30]
0xd369:	jmp	0xc05c


0xc073:	mov	eax, 1
0xc078:	test	r8b, r8b
0xc07b:	jne	0xcfab


0xc081:	mov	r8d, eax
0xc084:	mov	esi, 0x70
0xc089:	jmp	0xbdf5


0xcfab:	mov	esi, 0x70
0xcfb0:	mov	byte ptr [rsp + 0x30], 0
0xcfb5:	jmp	0xbdf5


0xbdf5:	mov	eax, 0x2520
0xbdfa:	test	r11d, r11d
0xbdfd:	mov	word ptr [rsp + 0xab], ax
0xbe05:	jne	0xd4db


0xc08e:	lea	rax, [rip + 0x5d17]
0xc095:	mov	dword ptr [rsp + 0x38], 0xffffffff
0xc09d:	mov	qword ptr [rsp + 0x40], rax
0xc0a2:	movzx	r8d, byte ptr [rsp + 0x30]
0xc0a8:	mov	eax, dword ptr [rsp + 0x518]
0xc0af:	mov	rsi, -1
0xc0b6:	mov	dword ptr [rsp + 0x48], r10d
0xc0bb:	xor	edi, edi
0xc0bd:	mov	r9d, r15d
0xc0c0:	mov	rcx, r13
0xc0c3:	mov	dword ptr [rsp + 0x30], r8d
0xc0c8:	push	rax
0xc0c9:	push	qword ptr [rsp + 0x18]
0xc0cd:	push	qword ptr [rsp + 0x28]
0xc0d1:	mov	eax, dword ptr [rsp + 0x50]
0xc0d5:	push	rax
0xc0d6:	mov	rdx, qword ptr [rsp + 0x60]
0xc0db:	call	0xba30


0xc0e0:	add	rsp, 0x20
0xc0e4:	movsxd	r10, dword ptr [rsp + 0x48]
0xc0e9:	mov	r11, rax
0xc0ec:	mov	rsi, qword ptr [rsp + 8]
0xc0f1:	mov	eax, 0
0xc0f6:	test	r10d, r10d
0xc0f9:	cmovns	rax, r10
0xc0fd:	cmp	r11, rax
0xc100:	mov	r12, rax
0xc103:	cmovae	r12, r11
0xc107:	sub	rsi, r14
0xc10a:	cmp	rsi, r12
0xc10d:	mov	qword ptr [rsp + 0x48], rsi
0xc112:	jbe	0xbafc


0xc118:	test	rbp, rbp
0xc11b:	je	0xbb5c


0xc121:	cmp	r11, rax
0xc124:	jae	0xc166


0xc126:	movsxd	rdx, r10d
0xc129:	mov	qword ptr [rsp + 0x58], r11
0xc12e:	sub	rdx, r11
0xc131:	cmp	r15d, 0x30
0xc135:	lea	rax, [rbp + rdx]
0xc13a:	mov	qword ptr [rsp + 0x50], rax
0xc13f:	je	0xd23c


0xc166:	mov	eax, dword ptr [rsp + 0x518]
0xc16d:	mov	qword ptr [rsp + 0x50], r11
0xc172:	mov	rdi, rbp
0xc175:	mov	r9d, r15d
0xc178:	mov	rcx, r13
0xc17b:	push	rax
0xc17c:	push	qword ptr [rsp + 0x18]
0xc180:	push	qword ptr [rsp + 0x28]
0xc184:	mov	eax, dword ptr [rsp + 0x50]
0xc188:	push	rax
0xc189:	mov	r8d, dword ptr [rsp + 0x50]
0xc18e:	mov	rdx, qword ptr [rsp + 0x60]
0xc193:	mov	rsi, qword ptr [rsp + 0x68]
0xc198:	call	0xba30


0xd23c:	mov	rdi, rbp
0xd23f:	mov	esi, 0x30
0xd244:	call	0x28f0


0xc145:	cmp	r15d, 0x2b
0xc149:	je	0xd23c


0xc14f:	mov	rdi, rbp
0xc152:	mov	esi, 0x20
0xc157:	call	0x28f0


0xc15c:	mov	rbp, qword ptr [rsp + 0x50]
0xc161:	mov	r11, qword ptr [rsp + 0x58]
0xc166:	mov	eax, dword ptr [rsp + 0x518]
0xc16d:	mov	qword ptr [rsp + 0x50], r11
0xc172:	mov	rdi, rbp
0xc175:	mov	r9d, r15d
0xc178:	mov	rcx, r13
0xc17b:	push	rax
0xc17c:	push	qword ptr [rsp + 0x18]
0xc180:	push	qword ptr [rsp + 0x28]
0xc184:	mov	eax, dword ptr [rsp + 0x50]
0xc188:	push	rax
0xc189:	mov	r8d, dword ptr [rsp + 0x50]
0xc18e:	mov	rdx, qword ptr [rsp + 0x60]
0xc193:	mov	rsi, qword ptr [rsp + 0x68]
0xc198:	call	0xba30


0xd249:	mov	rbp, qword ptr [rsp + 0x50]
0xd24e:	mov	r11, qword ptr [rsp + 0x58]
0xd253:	jmp	0xc166


0xc19d:	mov	r11, qword ptr [rsp + 0x70]
0xc1a2:	add	rsp, 0x20
0xc1a6:	add	rbp, r11
0xc1a9:	jmp	0xbb5c


0xc1ae:	mov	rdx, qword ptr [rsp + 8]
0xc1b3:	mov	eax, 0
0xc1b8:	mov	ecx, 1
0xc1bd:	sub	rdx, r14
0xc1c0:	test	r10d, r10d
0xc1c3:	cmovns	eax, r10d
0xc1c7:	cdqe	
0xc1c9:	test	rax, rax
0xc1cc:	cmovne	rcx, rax
0xc1d0:	test	r11d, r11d
0xc1d3:	jne	0xd208


0xc1d9:	cmp	rcx, rdx
0xc1dc:	jae	0xbafc


0xd208:	mov	r12, rbx
0xd20b:	mov	r9, rbx
0xd20e:	mov	r8d, 1
0xd214:	jmp	0xbcc1


0xc1e2:	test	rbp, rbp
0xc1e5:	je	0xc068


0xbcc1:	cmp	rcx, rdx
0xbcc4:	jae	0xbafc


0xc1eb:	cmp	r10d, 1
0xc1ef:	jle	0xc22e


0xc22e:	mov	byte ptr [rbp], sil
0xc232:	add	rbp, 1
0xc236:	jmp	0xc068


0xc1f1:	movsxd	rdx, r10d
0xc1f4:	mov	qword ptr [rsp + 0x30], rcx
0xc1f9:	sub	rdx, 1
0xc1fd:	cmp	r15d, 0x30
0xc201:	lea	r12, [rbp + rdx]
0xc206:	je	0xd475


0xd475:	mov	esi, 0x30
0xd47a:	jmp	0xc21b


0xc20c:	cmp	r15d, 0x2b
0xc210:	mov	esi, 0x20
0xc215:	je	0xd475


0xc21b:	mov	rdi, rbp
0xc21e:	mov	rbp, r12
0xc221:	call	0x28f0


0xc226:	movzx	esi, byte ptr [rbx]
0xc229:	mov	rcx, qword ptr [rsp + 0x30]
0xc22e:	mov	byte ptr [rbp], sil
0xc232:	add	rbp, 1
0xc236:	jmp	0xc068


0xc23b:	lea	rax, [rip + 0x3f03]
0xc242:	mov	dword ptr [rsp + 0x38], 0xffffffff
0xc24a:	mov	qword ptr [rsp + 0x40], rax
0xc24f:	jmp	0xc0a2


0xc0a2:	movzx	r8d, byte ptr [rsp + 0x30]
0xc0a8:	mov	eax, dword ptr [rsp + 0x518]
0xc0af:	mov	rsi, -1
0xc0b6:	mov	dword ptr [rsp + 0x48], r10d
0xc0bb:	xor	edi, edi
0xc0bd:	mov	r9d, r15d
0xc0c0:	mov	rcx, r13
0xc0c3:	mov	dword ptr [rsp + 0x30], r8d
0xc0c8:	push	rax
0xc0c9:	push	qword ptr [rsp + 0x18]
0xc0cd:	push	qword ptr [rsp + 0x28]
0xc0d1:	mov	eax, dword ptr [rsp + 0x50]
0xc0d5:	push	rax
0xc0d6:	mov	rdx, qword ptr [rsp + 0x60]
0xc0db:	call	0xba30


0xc254:	cmp	r11d, 0x45
0xc258:	je	0xbc80


0xc25e:	mov	esi, dword ptr [r13 + 0x1c]
0xc262:	sub	esi, dword ptr [r13 + 0x18]
0xc266:	mov	edx, 0x92492493
0xc26b:	add	esi, 7
0xc26e:	mov	eax, esi
0xc270:	imul	edx
0xc272:	lea	ecx, [rdx + rsi]
0xc275:	sar	esi, 0x1f
0xc278:	mov	edi, 2
0xc27d:	sar	ecx, 2
0xc280:	sub	ecx, esi
0xc282:	jmp	0xbf90


0xbf90:	mov	eax, ecx
0xbf92:	xor	esi, esi
0xbf94:	mov	byte ptr [rsp + 0x40], 0
0xbf99:	shr	eax, 0x1f
0xbf9c:	mov	dword ptr [rsp + 0x38], eax
0xbfa0:	mov	eax, ecx
0xbfa2:	not	eax
0xbfa4:	shr	eax, 0x1f
0xbfa7:	cmp	r11d, 0x4f
0xbfab:	jne	0xce30


0xc287:	cmp	r11d, 0x45
0xc28b:	je	0xcfba


0xcfba:	xor	edi, edi
0xcfbc:	jmp	0xbfbc


0xc291:	cmp	r11d, 0x4f
0xc295:	je	0xbc80


0xbfbc:	mov	edx, 0x2520
0xbfc1:	xor	r8d, r8d
0xbfc4:	mov	word ptr [rsp + 0xab], dx
0xbfcc:	lea	rdx, [rsp + 0xab]
0xbfd4:	mov	byte ptr [rsp + 0xad], r11b
0xbfdc:	mov	r12, rbx
0xbfdf:	mov	r11d, edi
0xbfe2:	lea	rax, [rdx + 3]
0xbfe6:	jmp	0xbe1a


0xc29b:	mov	eax, dword ptr [r13 + 0x14]
0xc29f:	cmp	eax, 0xfffff894
0xc2a4:	lea	ecx, [rax + 0x76c]
0xc2aa:	setl	byte ptr [rsp + 0x38]
0xc2af:	cmp	eax, 0xfffff894
0xc2b4:	setge	al
0xc2b7:	test	r15d, r15d
0xc2ba:	jne	0xd139


0xc2c0:	mov	r15d, dword ptr [rsp + 0x2c]
0xc2c5:	cmp	r15d, 0x2b
0xc2c9:	je	0xd143


0xd139:	cmp	r15d, 0x2b
0xd13d:	jne	0xc2cf


0xd143:	mov	edi, 4
0xd148:	mov	edx, 0x270f
0xd14d:	jmp	0xcb9d


0xc2cf:	mov	byte ptr [rsp + 0x40], 0
0xc2d4:	mov	edi, 4
0xc2d9:	xor	esi, esi
0xc2db:	jmp	0xbfa7


0xcb9d:	cmp	edx, ecx
0xcb9f:	mov	byte ptr [rsp + 0x40], 1
0xcba4:	mov	r15d, 0x2b
0xcbaa:	jb	0xc2d9


0xbfa7:	cmp	r11d, 0x4f
0xbfab:	jne	0xce30


0xc2d9:	xor	esi, esi
0xc2db:	jmp	0xbfa7


0xcbb0:	cmp	r10d, edi
0xcbb3:	mov	r15d, 0x2b
0xcbb9:	setg	byte ptr [rsp + 0x40]
0xcbbe:	xor	esi, esi
0xcbc0:	jmp	0xbfa7


0xc2e0:	movzx	esi, byte ptr [rsp + 0x30]
0xc2e5:	mov	rdi, qword ptr [rsp + 0x20]
0xc2ea:	test	r8b, r8b
0xc2ed:	mov	eax, 0
0xc2f2:	mov	dword ptr [rsp + 0x38], r10d
0xc2f7:	mov	byte ptr [rsp + 0x40], r8b
0xc2fc:	cmovne	esi, eax
0xc2ff:	mov	byte ptr [rsp + 0x30], sil
0xc304:	call	0x2810


0xc309:	movsxd	r10, dword ptr [rsp + 0x38]
0xc30e:	mov	r12, rax
0xc311:	mov	rdx, qword ptr [rsp + 8]
0xc316:	mov	eax, 0
0xc31b:	test	r10d, r10d
0xc31e:	cmovns	rax, r10
0xc322:	cmp	r12, rax
0xc325:	mov	rcx, rax
0xc328:	cmovae	rcx, r12
0xc32c:	sub	rdx, r14
0xc32f:	cmp	rdx, rcx
0xc332:	jbe	0xbafc


0xc338:	test	rbp, rbp
0xc33b:	je	0xc068


0xc341:	cmp	r12, rax
0xc344:	movzx	r8d, byte ptr [rsp + 0x40]
0xc34a:	jae	0xc397


0xc34c:	movsxd	rdx, r10d
0xc34f:	mov	qword ptr [rsp + 0x48], rcx
0xc354:	mov	byte ptr [rsp + 0x40], r8b
0xc359:	sub	rdx, r12
0xc35c:	cmp	r15d, 0x30
0xc360:	lea	rax, [rbp + rdx]
0xc365:	mov	qword ptr [rsp + 0x38], rax
0xc36a:	je	0xd42f


0xc397:	test	r8b, r8b
0xc39a:	jne	0xd397


0xd42f:	mov	rdi, rbp
0xd432:	mov	esi, 0x30
0xd437:	call	0x28f0


0xc370:	cmp	r15d, 0x2b
0xc374:	je	0xd42f


0xc3a0:	cmp	byte ptr [rsp + 0x30], 0
0xc3a5:	mov	rdx, r12
0xc3a8:	mov	qword ptr [rsp + 0x30], rcx
0xc3ad:	mov	rsi, qword ptr [rsp + 0x20]
0xc3b2:	mov	rdi, rbp
0xc3b5:	je	0xd388


0xd397:	mov	rsi, qword ptr [rsp + 0x20]
0xd39c:	mov	rdx, r12
0xd39f:	mov	rdi, rbp
0xd3a2:	mov	qword ptr [rsp + 0x30], rcx
0xd3a7:	call	0xb990


0xc37a:	mov	rdi, rbp
0xc37d:	mov	esi, 0x20
0xc382:	call	0x28f0


0xd388:	call	0x2970


0xc3bb:	call	0xb9e0


0xc3c0:	mov	rcx, qword ptr [rsp + 0x30]
0xc3c5:	add	rbp, r12
0xc3c8:	jmp	0xc068


0xd38d:	mov	rcx, qword ptr [rsp + 0x30]
0xd392:	jmp	0xc3c5


0xc3c5:	add	rbp, r12
0xc3c8:	jmp	0xc068


0xd3ac:	mov	rcx, qword ptr [rsp + 0x30]
0xd3b1:	jmp	0xc3c5


0xc387:	movzx	r8d, byte ptr [rsp + 0x40]
0xc38d:	mov	rbp, qword ptr [rsp + 0x38]
0xc392:	mov	rcx, qword ptr [rsp + 0x48]
0xc397:	test	r8b, r8b
0xc39a:	jne	0xd397


0xd43c:	mov	rbp, qword ptr [rsp + 0x38]
0xd441:	movzx	r8d, byte ptr [rsp + 0x40]
0xd447:	mov	rcx, qword ptr [rsp + 0x48]
0xd44c:	jmp	0xc397


0xc3cd:	cmp	r11d, 0x45
0xc3d1:	je	0xcfba


0xc3d7:	mov	esi, dword ptr [r13 + 0x14]
0xc3db:	mov	edx, 0x51eb851f
0xc3e0:	mov	eax, esi
0xc3e2:	imul	edx
0xc3e4:	mov	eax, esi
0xc3e6:	sar	eax, 0x1f
0xc3e9:	mov	ecx, edx
0xc3eb:	sar	ecx, 5
0xc3ee:	sub	ecx, eax
0xc3f0:	mov	eax, esi
0xc3f2:	imul	ecx, ecx, 0x64
0xc3f5:	sub	eax, ecx
0xc3f7:	mov	ecx, eax
0xc3f9:	jns	0xc409


0xc3fb:	neg	eax
0xc3fd:	add	ecx, 0x64
0xc400:	cmp	esi, 0xfffff893
0xc406:	cmovle	ecx, eax
0xc409:	test	r15d, r15d
0xc40c:	je	0xca3a


0xc409:	test	r15d, r15d
0xc40c:	je	0xca3a


0xca3a:	mov	r15d, dword ptr [rsp + 0x2c]
0xca3f:	mov	eax, 1
0xca44:	cmp	r15d, 0x2b
0xca48:	je	0xd4aa


0xc412:	mov	eax, 1
0xc417:	mov	byte ptr [rsp + 0x38], 0
0xc41c:	cmp	r15d, 0x2b
0xc420:	je	0xcb93


0xd4aa:	mov	byte ptr [rsp + 0x38], 0
0xd4af:	mov	edi, 2
0xd4b4:	jmp	0xcbb0


0xca4e:	mov	byte ptr [rsp + 0x40], 0
0xca53:	mov	byte ptr [rsp + 0x38], 0
0xca58:	mov	edi, 2
0xca5d:	xor	esi, esi
0xca5f:	jmp	0xbfa7


0xcb93:	mov	edi, 2
0xcb98:	mov	edx, 0x63
0xcb9d:	cmp	edx, ecx
0xcb9f:	mov	byte ptr [rsp + 0x40], 1
0xcba4:	mov	r15d, 0x2b
0xcbaa:	jb	0xc2d9


0xc426:	mov	byte ptr [rsp + 0x40], 0
0xc42b:	mov	edi, 2
0xc430:	xor	esi, esi
0xc432:	jmp	0xbfa7


0xc437:	movzx	eax, byte ptr [rsp + 0x30]
0xc43c:	test	r8b, r8b
0xc43f:	cmovne	eax, r8d
0xc443:	cmp	r11d, 0x45
0xc447:	je	0xd3b6


0xd3b6:	mov	byte ptr [rsp + 0x30], al
0xd3ba:	jmp	0xbc80


0xc44d:	mov	esi, r9d
0xc450:	mov	byte ptr [rsp + 0x30], al
0xc454:	xor	r8d, r8d
0xc457:	jmp	0xbdf5


0xc45c:	xor	r8d, r8d
0xc45f:	mov	ecx, dword ptr [r13 + 0x20]
0xc463:	test	ecx, ecx
0xc465:	js	0xd10e


0xd10e:	mov	r12, rbx
0xd111:	jmp	0xbb62


0xc46b:	mov	rcx, qword ptr [r13 + 0x28]
0xc46f:	mov	byte ptr [rsp + 0x38], 1
0xc474:	test	ecx, ecx
0xc476:	js	0xc48c


0xc48c:	mov	eax, ecx
0xc48e:	mov	edx, 0x91a2b3c5
0xc493:	mov	esi, 0x88888889
0xc498:	imul	edx
0xc49a:	mov	eax, ecx
0xc49c:	sar	eax, 0x1f
0xc49f:	mov	dword ptr [rsp + 0x40], eax
0xc4a3:	lea	r12d, [rdx + rcx]
0xc4a7:	sar	r12d, 0xb
0xc4ab:	sub	r12d, eax
0xc4ae:	mov	eax, ecx
0xc4b0:	imul	esi
0xc4b2:	lea	edi, [rdx + rcx]
0xc4b5:	sar	edi, 5
0xc4b8:	sub	edi, dword ptr [rsp + 0x40]
0xc4bc:	mov	eax, edi
0xc4be:	imul	esi
0xc4c0:	mov	eax, edi
0xc4c2:	sar	eax, 0x1f
0xc4c5:	lea	esi, [rdx + rdi]
0xc4c8:	sar	esi, 5
0xc4cb:	sub	esi, eax
0xc4cd:	mov	eax, edi
0xc4cf:	imul	esi, esi, 0x3c
0xc4d2:	imul	edi, edi, 0x3c
0xc4d5:	sub	eax, esi
0xc4d7:	sub	ecx, edi
0xc4d9:	cmp	r8, 1
0xc4dd:	mov	esi, eax
0xc4df:	je	0xd332


0xc478:	mov	byte ptr [rsp + 0x38], 0
0xc47d:	jne	0xc48c


0xd332:	movzx	eax, byte ptr [rsp + 0x38]
0xd337:	mov	byte ptr [rsp + 0x40], 1
0xd33c:	mov	edi, 6
0xd341:	imul	ecx, r12d, 0x64
0xd345:	xor	eax, 1
0xd348:	add	ecx, esi
0xd34a:	mov	esi, 4
0xd34f:	jmp	0xbfa7


0xc4e5:	jb	0xd410


0xc47f:	mov	rax, qword ptr [rsp + 0x20]
0xc484:	cmp	byte ptr [rax], 0x2d
0xc487:	sete	byte ptr [rsp + 0x38]
0xc48c:	mov	eax, ecx
0xc48e:	mov	edx, 0x91a2b3c5
0xc493:	mov	esi, 0x88888889
0xc498:	imul	edx
0xc49a:	mov	eax, ecx
0xc49c:	sar	eax, 0x1f
0xc49f:	mov	dword ptr [rsp + 0x40], eax
0xc4a3:	lea	r12d, [rdx + rcx]
0xc4a7:	sar	r12d, 0xb
0xc4ab:	sub	r12d, eax
0xc4ae:	mov	eax, ecx
0xc4b0:	imul	esi
0xc4b2:	lea	edi, [rdx + rcx]
0xc4b5:	sar	edi, 5
0xc4b8:	sub	edi, dword ptr [rsp + 0x40]
0xc4bc:	mov	eax, edi
0xc4be:	imul	esi
0xc4c0:	mov	eax, edi
0xc4c2:	sar	eax, 0x1f
0xc4c5:	lea	esi, [rdx + rdi]
0xc4c8:	sar	esi, 5
0xc4cb:	sub	esi, eax
0xc4cd:	mov	eax, edi
0xc4cf:	imul	esi, esi, 0x3c
0xc4d2:	imul	edi, edi, 0x3c
0xc4d5:	sub	eax, esi
0xc4d7:	sub	ecx, edi
0xc4d9:	cmp	r8, 1
0xc4dd:	mov	esi, eax
0xc4df:	je	0xd332


0xd410:	imul	ecx, r12d, 0x64
0xd414:	xor	esi, esi
0xd416:	mov	byte ptr [rsp + 0x40], 1
0xd41b:	mov	edi, 5
0xd420:	add	ecx, eax
0xd422:	movzx	eax, byte ptr [rsp + 0x38]
0xd427:	xor	eax, 1
0xd42a:	jmp	0xbfa7


0xc4eb:	cmp	r8, 2
0xc4ef:	je	0xd2e5


0xd2e5:	imul	esi, esi, 0x64
0xd2e8:	mov	byte ptr [rsp + 0x40], 1
0xd2ed:	mov	edi, 9
0xd2f2:	imul	eax, r12d, 0x2710
0xd2f9:	add	eax, esi
0xd2fb:	mov	esi, 0x14
0xd300:	add	ecx, eax
0xd302:	movzx	eax, byte ptr [rsp + 0x38]
0xd307:	xor	eax, 1
0xd30a:	jmp	0xbfa7


0xc4f5:	cmp	r8, 3
0xc4f9:	jne	0xd3bf


0xc4ff:	test	ecx, ecx
0xc501:	jne	0xd2e5


0xd3bf:	movzx	ecx, byte ptr [rbx]
0xd3c2:	mov	r9, rbx
0xd3c5:	jmp	0xcc29


0xc507:	test	eax, eax
0xc509:	jne	0xd332


0xcc29:	mov	rdx, qword ptr [rsp + 8]
0xcc2e:	mov	eax, 0
0xcc33:	sub	rdx, r14
0xcc36:	test	r10d, r10d
0xcc39:	cmovns	eax, r10d
0xcc3d:	cmp	cl, 0x25
0xcc40:	cdqe	
0xcc42:	jne	0xbc7b


0xc50f:	movzx	eax, byte ptr [rsp + 0x38]
0xc514:	mov	ecx, r12d
0xc517:	mov	byte ptr [rsp + 0x40], 1
0xc51c:	mov	edi, 3
0xc521:	xor	eax, 1
0xc524:	jmp	0xbfa7


0xcc48:	test	rax, rax
0xcc4b:	mov	ecx, 1
0xcc50:	mov	r12, r9
0xcc53:	cmovne	rcx, rax
0xcc57:	mov	r8d, 1
0xcc5d:	jmp	0xbcc1


0xc543:	lea	edx, [rax + rax*4]
0xc546:	mov	byte ptr [rsp + 0x40], 0
0xc54b:	mov	byte ptr [rsp + 0x38], 0
0xc550:	xor	esi, esi
0xc552:	lea	ecx, [rax + rdx*2]
0xc555:	sar	ecx, 5
0xc558:	add	ecx, 1
0xc55b:	nop	dword ptr [rax + rax]
0xc560:	lea	r9, [rsp + 0xb0]
0xc568:	mov	r12d, 0xcccccccd
0xc56e:	lea	r11, [r9 + 0x17]
0xc572:	nop	word ptr [rax + rax]
0xc578:	test	sil, 1
0xc57c:	lea	r8, [r11 - 1]
0xc580:	je	0xc591


0xc7a0:	movdqu	xmm0, xmmword ptr [r13]
0xc7a6:	lea	rsi, [rsp + 0x70]
0xc7ab:	mov	rax, qword ptr [r13 + 0x30]
0xc7af:	mov	rdi, qword ptr [rsp + 0x10]
0xc7b4:	movaps	xmmword ptr [rsp + 0x70], xmm0
0xc7b9:	mov	dword ptr [rsp + 0x38], r10d
0xc7be:	movdqu	xmm0, xmmword ptr [r13 + 0x10]
0xc7c4:	mov	qword ptr [rsp + 0xa0], rax
0xc7cc:	movaps	xmmword ptr [rsp + 0x80], xmm0
0xc7d4:	movdqu	xmm0, xmmword ptr [r13 + 0x20]
0xc7da:	movaps	xmmword ptr [rsp + 0x90], xmm0
0xc7e2:	call	0xb620


0xc7e7:	lea	r9, [rsp + 0xb0]
0xc7ef:	mov	rsi, rax
0xc7f2:	mov	rcx, rax
0xc7f5:	movabs	r11, 0x6666666666666667
0xc7ff:	mov	edi, 0x30
0xc804:	mov	r10d, dword ptr [rsp + 0x38]
0xc809:	lea	r8, [r9 + 0x17]
0xc80d:	nop	dword ptr [rax]
0xc810:	mov	rax, rcx
0xc813:	imul	r11
0xc816:	mov	rax, rcx
0xc819:	sar	rax, 0x3f
0xc81d:	sar	rdx, 2
0xc821:	sub	rdx, rax
0xc824:	mov	rax, rdx
0xc827:	lea	rdx, [rdx + rdx*4]
0xc82b:	add	rdx, rdx
0xc82e:	sub	rcx, rdx
0xc831:	mov	rdx, rcx
0xc834:	mov	rcx, rax
0xc837:	mov	eax, edi
0xc839:	sub	eax, edx
0xc83b:	add	edx, 0x30
0xc83e:	test	rsi, rsi
0xc841:	cmovs	edx, eax
0xc844:	sub	r8, 1
0xc848:	test	rcx, rcx
0xc84b:	mov	byte ptr [r8], dl
0xc84e:	jne	0xc810


0xc850:	test	r10d, r10d
0xc853:	mov	edi, 1
0xc858:	cmovg	edi, r10d
0xc85c:	test	rsi, rsi
0xc85f:	mov	dword ptr [rsp + 0x48], edi
0xc863:	js	0xce48


0xc810:	mov	rax, rcx
0xc813:	imul	r11
0xc816:	mov	rax, rcx
0xc819:	sar	rax, 0x3f
0xc81d:	sar	rdx, 2
0xc821:	sub	rdx, rax
0xc824:	mov	rax, rdx
0xc827:	lea	rdx, [rdx + rdx*4]
0xc82b:	add	rdx, rdx
0xc82e:	sub	rcx, rdx
0xc831:	mov	rdx, rcx
0xc834:	mov	rcx, rax
0xc837:	mov	eax, edi
0xc839:	sub	eax, edx
0xc83b:	add	edx, 0x30
0xc83e:	test	rsi, rsi
0xc841:	cmovs	edx, eax
0xc844:	sub	r8, 1
0xc848:	test	rcx, rcx
0xc84b:	mov	byte ptr [r8], dl
0xc84e:	jne	0xc810


0xc8a7:	movzx	eax, byte ptr [rbx + 1]
0xc8ab:	lea	rdx, [rbx + 1]
0xc8af:	cmp	al, 0x3a
0xc8b1:	je	0xd3ca


0xd3ca:	lea	rcx, [rbx + 2]
0xd3ce:	mov	r8d, 1
0xd3d4:	mov	rdx, rcx
0xd3d7:	add	rcx, 1
0xd3db:	movzx	eax, byte ptr [rcx - 1]
0xd3df:	add	r8, 1
0xd3e3:	cmp	al, 0x3a
0xd3e5:	jne	0xc8bd


0xc8b7:	mov	r8d, 1
0xc8bd:	cmp	al, 0x7a
0xc8bf:	jne	0xbc80


0xd3eb:	jmp	0xd3d4


0xc8bd:	cmp	al, 0x7a
0xc8bf:	jne	0xbc80


0xc8c5:	mov	rbx, rdx
0xc8c8:	jmp	0xc45f


0xd3d4:	mov	rdx, rcx
0xd3d7:	add	rcx, 1
0xd3db:	movzx	eax, byte ptr [rcx - 1]
0xd3df:	add	r8, 1
0xd3e3:	cmp	al, 0x3a
0xd3e5:	jne	0xc8bd


0xc45f:	mov	ecx, dword ptr [r13 + 0x20]
0xc463:	test	ecx, ecx
0xc465:	js	0xd10e


0xc8cd:	cmp	r11d, 0x45
0xc8d1:	je	0xbc80


0xc8d7:	mov	edi, dword ptr [r13 + 0x14]
0xc8db:	mov	r8d, dword ptr [r13 + 0x1c]
0xc8df:	mov	edx, 0x92492493
0xc8e4:	mov	eax, edi
0xc8e6:	mov	ecx, r8d
0xc8e9:	sar	eax, 0x1f
0xc8ec:	and	eax, 0x190
0xc8f1:	lea	r12d, [rdi + rax - 0x64]
0xc8f6:	mov	eax, dword ptr [r13 + 0x18]
0xc8fa:	sub	ecx, eax
0xc8fc:	mov	dword ptr [rsp + 0x38], eax
0xc900:	add	ecx, 0x17e
0xc906:	mov	eax, ecx
0xc908:	imul	edx
0xc90a:	lea	eax, [rdx + rcx]
0xc90d:	mov	edx, ecx
0xc90f:	sar	edx, 0x1f
0xc912:	sar	eax, 2
0xc915:	sub	eax, edx
0xc917:	lea	edx, [rax*8]
0xc91e:	sub	edx, eax
0xc920:	mov	eax, edx
0xc922:	mov	edx, r8d
0xc925:	sub	edx, ecx
0xc927:	lea	eax, [rdx + rax + 3]
0xc92b:	test	eax, eax
0xc92d:	mov	dword ptr [rsp + 0x40], eax
0xc931:	js	0xd258


0xd258:	sub	r12d, 1
0xd25c:	mov	edx, 0x16d
0xd261:	test	r12b, 3
0xd265:	jne	0xd2a3


0xc937:	test	r12b, 3
0xc93b:	mov	eax, 0x16d
0xc940:	jne	0xc987


0xd267:	mov	eax, r12d
0xd26a:	mov	edx, 0x51eb851f
0xd26f:	imul	edx
0xd271:	mov	eax, edx
0xd273:	mov	edx, r12d
0xd276:	sar	edx, 0x1f
0xd279:	sar	eax, 5
0xd27c:	sub	eax, edx
0xd27e:	mov	edx, 0x16e
0xd283:	imul	eax, eax, 0x64
0xd286:	cmp	r12d, eax
0xd289:	jne	0xd2a3


0xd2a3:	add	r8d, edx
0xd2a6:	mov	edx, 0x92492493
0xd2ab:	mov	ecx, r8d
0xd2ae:	sub	ecx, dword ptr [rsp + 0x38]
0xd2b2:	add	ecx, 0x17e
0xd2b8:	mov	eax, ecx
0xd2ba:	sub	r8d, ecx
0xd2bd:	imul	edx
0xd2bf:	lea	eax, [rdx + rcx]
0xd2c2:	mov	edx, ecx
0xd2c4:	sar	edx, 0x1f
0xd2c7:	sar	eax, 2
0xd2ca:	sub	eax, edx
0xd2cc:	lea	edx, [rax*8]
0xd2d3:	sub	edx, eax
0xd2d5:	lea	ecx, [r8 + rdx + 3]
0xd2da:	mov	r8d, 0xffffffff
0xd2e0:	jmp	0xc9cf


0xc942:	mov	ecx, 0x51eb851f
0xc947:	mov	eax, r12d
0xc94a:	imul	ecx
0xc94c:	mov	eax, r12d
0xc94f:	sar	eax, 0x1f
0xc952:	mov	dword ptr [rsp + 0x48], eax
0xc956:	mov	ecx, edx
0xc958:	sar	edx, 5
0xc95b:	sub	edx, eax
0xc95d:	mov	eax, 0x16e
0xc962:	imul	edx, edx, 0x64
0xc965:	cmp	r12d, edx
0xc968:	jne	0xc987


0xc987:	sub	r8d, eax
0xc98a:	mov	edx, 0x92492493
0xc98f:	mov	ecx, r8d
0xc992:	sub	ecx, dword ptr [rsp + 0x38]
0xc996:	add	ecx, 0x17e
0xc99c:	mov	eax, ecx
0xc99e:	sub	r8d, ecx
0xc9a1:	imul	edx
0xc9a3:	lea	eax, [rdx + rcx]
0xc9a6:	mov	edx, ecx
0xc9a8:	sar	edx, 0x1f
0xc9ab:	sar	eax, 2
0xc9ae:	sub	eax, edx
0xc9b0:	lea	edx, [rax*8]
0xc9b7:	sub	edx, eax
0xc9b9:	lea	ecx, [r8 + rdx + 3]
0xc9be:	mov	r8d, 1
0xc9c4:	test	ecx, ecx
0xc9c6:	jns	0xc9cf


0xd28b:	mov	eax, r12d
0xd28e:	mov	ecx, 0x190
0xd293:	cdq	
0xd294:	idiv	ecx
0xd296:	cmp	edx, 1
0xd299:	sbb	edx, edx
0xd29b:	not	edx
0xd29d:	add	edx, 0x16e
0xd2a3:	add	r8d, edx
0xd2a6:	mov	edx, 0x92492493
0xd2ab:	mov	ecx, r8d
0xd2ae:	sub	ecx, dword ptr [rsp + 0x38]
0xd2b2:	add	ecx, 0x17e
0xd2b8:	mov	eax, ecx
0xd2ba:	sub	r8d, ecx
0xd2bd:	imul	edx
0xd2bf:	lea	eax, [rdx + rcx]
0xd2c2:	mov	edx, ecx
0xd2c4:	sar	edx, 0x1f
0xd2c7:	sar	eax, 2
0xd2ca:	sub	eax, edx
0xd2cc:	lea	edx, [rax*8]
0xd2d3:	sub	edx, eax
0xd2d5:	lea	ecx, [r8 + rdx + 3]
0xd2da:	mov	r8d, 0xffffffff
0xd2e0:	jmp	0xc9cf


0xc9cf:	cmp	sil, 0x47
0xc9d3:	je	0xd116


0xc96a:	sar	ecx, 7
0xc96d:	mov	eax, ecx
0xc96f:	sub	eax, dword ptr [rsp + 0x48]
0xc973:	imul	eax, eax, 0x190
0xc979:	cmp	r12d, eax
0xc97c:	sete	al
0xc97f:	movzx	eax, al
0xc982:	add	eax, 0x16d
0xc987:	sub	r8d, eax
0xc98a:	mov	edx, 0x92492493
0xc98f:	mov	ecx, r8d
0xc992:	sub	ecx, dword ptr [rsp + 0x38]
0xc996:	add	ecx, 0x17e
0xc99c:	mov	eax, ecx
0xc99e:	sub	r8d, ecx
0xc9a1:	imul	edx
0xc9a3:	lea	eax, [rdx + rcx]
0xc9a6:	mov	edx, ecx
0xc9a8:	sar	edx, 0x1f
0xc9ab:	sar	eax, 2
0xc9ae:	sub	eax, edx
0xc9b0:	lea	edx, [rax*8]
0xc9b7:	sub	edx, eax
0xc9b9:	lea	ecx, [r8 + rdx + 3]
0xc9be:	mov	r8d, 1
0xc9c4:	test	ecx, ecx
0xc9c6:	jns	0xc9cf


0xc9c8:	mov	ecx, dword ptr [rsp + 0x40]
0xc9cc:	xor	r8d, r8d
0xc9cf:	cmp	sil, 0x47
0xc9d3:	je	0xd116


0xd116:	mov	eax, 0xfffff894
0xd11b:	lea	ecx, [rdi + r8 + 0x76c]
0xd123:	sub	eax, r8d
0xd126:	cmp	edi, eax
0xd128:	setl	byte ptr [rsp + 0x38]
0xd12d:	setge	al
0xd130:	test	r15d, r15d
0xd133:	je	0xc2c0


0xc9d9:	cmp	sil, 0x67
0xc9dd:	jne	0xd30f


0xc9e3:	mov	ecx, 0x51eb851f
0xc9e8:	mov	eax, edi
0xc9ea:	mov	esi, edi
0xc9ec:	imul	ecx
0xc9ee:	mov	eax, edx
0xc9f0:	mov	edx, edi
0xc9f2:	sar	edx, 0x1f
0xc9f5:	sar	eax, 5
0xc9f8:	sub	eax, edx
0xc9fa:	imul	eax, eax, 0x64
0xc9fd:	sub	esi, eax
0xc9ff:	add	esi, r8d
0xca02:	mov	eax, esi
0xca04:	imul	ecx
0xca06:	mov	eax, esi
0xca08:	sar	eax, 0x1f
0xca0b:	mov	ecx, edx
0xca0d:	sar	ecx, 5
0xca10:	sub	ecx, eax
0xca12:	imul	ecx, ecx, 0x64
0xca15:	sub	esi, ecx
0xca17:	mov	ecx, esi
0xca19:	jns	0xc409


0xd30f:	mov	eax, ecx
0xd311:	mov	edx, 0x92492493
0xd316:	mov	edi, 2
0xd31b:	imul	edx
0xd31d:	lea	eax, [rdx + rcx]
0xd320:	sar	ecx, 0x1f
0xd323:	sar	eax, 2
0xd326:	sub	eax, ecx
0xd328:	mov	ecx, eax
0xd32a:	add	ecx, 1
0xd32d:	jmp	0xbf90


0xca1f:	mov	eax, 0xfffff894
0xca24:	sub	eax, r8d
0xca27:	cmp	edi, eax
0xca29:	jge	0xd4ca


0xca2f:	neg	ecx
0xca31:	test	r15d, r15d
0xca34:	jne	0xc412


0xd4ca:	add	ecx, 0x64
0xd4cd:	test	r15d, r15d
0xd4d0:	je	0xca3a


0xd4d6:	jmp	0xc412


0xca64:	cmp	r11d, 0x45
0xca68:	je	0xbc80


0xca6e:	mov	ecx, dword ptr [r13 + 0xc]
0xca72:	mov	edi, 2
0xca77:	jmp	0xbf90


0xca7c:	mov	eax, dword ptr [r13 + 0x18]
0xca80:	mov	edx, 0x92492493
0xca85:	mov	edi, 1
0xca8a:	lea	ecx, [rax + 6]
0xca8d:	mov	eax, ecx
0xca8f:	imul	edx
0xca91:	lea	eax, [rdx + rcx]
0xca94:	mov	edx, ecx
0xca96:	sar	edx, 0x1f
0xca99:	sar	eax, 2
0xca9c:	sub	eax, edx
0xca9e:	lea	edx, [rax*8]
0xcaa5:	sub	edx, eax
0xcaa7:	sub	ecx, edx
0xcaa9:	add	ecx, 1
0xcaac:	jmp	0xbf90


0xcab1:	cmp	r11d, 0x45
0xcab5:	je	0xbc80


0xcabb:	mov	ecx, dword ptr [r13 + 0x18]
0xcabf:	mov	edi, 1
0xcac4:	jmp	0xbf90


0xcac9:	cmp	r11d, 0x45
0xcacd:	je	0xbc80


0xcad3:	mov	eax, dword ptr [r13 + 0x18]
0xcad7:	mov	ecx, 0x92492493
0xcadc:	lea	esi, [rax + 6]
0xcadf:	mov	eax, esi
0xcae1:	imul	ecx
0xcae3:	lea	eax, [rdx + rsi]
0xcae6:	mov	edx, esi
0xcae8:	sar	edx, 0x1f
0xcaeb:	sar	eax, 2
0xcaee:	sub	eax, edx
0xcaf0:	lea	edx, [rax*8]
0xcaf7:	sub	edx, eax
0xcaf9:	mov	eax, edx
0xcafb:	mov	edx, dword ptr [r13 + 0x1c]
0xcaff:	sub	eax, esi
0xcb01:	lea	esi, [rax + rdx + 7]
0xcb05:	mov	eax, esi
0xcb07:	imul	ecx
0xcb09:	jmp	0xc272


0xc272:	lea	ecx, [rdx + rsi]
0xc275:	sar	esi, 0x1f
0xc278:	mov	edi, 2
0xc27d:	sar	ecx, 2
0xc280:	sub	ecx, esi
0xc282:	jmp	0xbf90


0xcb0e:	cmp	r11d, 0x45
0xcb12:	je	0xbc80


0xcb18:	test	r8b, r8b
0xcb1b:	je	0xbdf5


0xcb21:	mov	byte ptr [rsp + 0x30], r8b
0xcb26:	jmp	0xbdf2


0xcb2b:	cmp	r11d, 0x45
0xcb2f:	je	0xcfba


0xcb35:	mov	esi, dword ptr [r13 + 0x14]
0xcb39:	mov	edx, 0x51eb851f
0xcb3e:	mov	eax, esi
0xcb40:	imul	edx
0xcb42:	mov	eax, edx
0xcb44:	mov	edx, esi
0xcb46:	sar	edx, 0x1f
0xcb49:	sar	eax, 5
0xcb4c:	sub	eax, edx
0xcb4e:	mov	edx, esi
0xcb50:	lea	ecx, [rax + 0x13]
0xcb53:	imul	eax, eax, 0x64
0xcb56:	sub	edx, eax
0xcb58:	mov	eax, edx
0xcb5a:	shr	eax, 0x1f
0xcb5d:	test	ecx, ecx
0xcb5f:	setg	dl
0xcb62:	and	eax, edx
0xcb64:	cmp	esi, 0xfffff894
0xcb6a:	setl	byte ptr [rsp + 0x38]
0xcb6f:	sub	ecx, eax
0xcb71:	cmp	esi, 0xfffff894
0xcb77:	setge	al
0xcb7a:	test	r15d, r15d
0xcb7d:	jne	0xc41c


0xcb83:	cmp	dword ptr [rsp + 0x2c], 0x2b
0xcb88:	mov	r15d, dword ptr [rsp + 0x2c]
0xcb8d:	jne	0xc426


0xc41c:	cmp	r15d, 0x2b
0xc420:	je	0xcb93


0xcbc5:	test	r11d, r11d
0xcbc8:	jne	0xbc80


0xcbce:	lea	rax, [rip + 0x51e6]
0xcbd5:	mov	dword ptr [rsp + 0x38], 0xffffffff
0xcbdd:	mov	qword ptr [rsp + 0x40], rax
0xcbe2:	jmp	0xc0a2


0xcbe7:	test	r11d, r11d
0xcbea:	jne	0xbc80


0xcbf0:	test	r15d, r15d
0xcbf3:	jne	0xd3ed


0xcbf9:	test	r10d, r10d
0xcbfc:	jns	0xd3ed


0xd3ed:	mov	esi, r10d
0xd3f0:	mov	eax, 0
0xd3f5:	sub	esi, 6
0xd3f8:	cmovns	eax, esi
0xd3fb:	mov	dword ptr [rsp + 0x38], eax
0xd3ff:	lea	rax, [rip + 0x49ac]
0xd406:	mov	qword ptr [rsp + 0x40], rax
0xd40b:	jmp	0xc0a2


0xcc02:	lea	rax, [rip + 0x51a9]
0xcc09:	mov	dword ptr [rsp + 0x38], 4
0xcc11:	mov	r15d, 0x2b
0xcc17:	mov	qword ptr [rsp + 0x40], rax
0xcc1c:	jmp	0xc0a2


0xcc21:	movzx	ecx, byte ptr [rbx - 1]
0xcc25:	lea	r9, [rbx - 1]
0xcc29:	mov	rdx, qword ptr [rsp + 8]
0xcc2e:	mov	eax, 0
0xcc33:	sub	rdx, r14
0xcc36:	test	r10d, r10d
0xcc39:	cmovns	eax, r10d
0xcc3d:	cmp	cl, 0x25
0xcc40:	cdqe	
0xcc42:	jne	0xbc7b


0xcc62:	cmp	r11d, 0x45
0xcc66:	je	0xbc80


0xcc6c:	mov	ecx, dword ptr [r13 + 8]
0xcc70:	mov	edi, 2
0xcc75:	jmp	0xbf90


0xcc7a:	cmp	r11d, 0x45
0xcc7e:	je	0xbc80


0xcc84:	mov	ecx, dword ptr [r13 + 4]
0xcc88:	mov	edi, 2
0xcc8d:	jmp	0xbf90


0xcc92:	cmp	r11d, 0x45
0xcc96:	je	0xbc80


0xcc9c:	cmp	r10d, -1
0xcca0:	je	0xd1f1


0xd1f1:	mov	ecx, dword ptr [rsp + 0x518]
0xd1f8:	mov	edi, 9
0xd1fd:	mov	r10d, 9
0xd203:	jmp	0xbf90


0xcca6:	cmp	r10d, 8
0xccaa:	jg	0xd4b9


0xccb0:	mov	ecx, dword ptr [rsp + 0x518]
0xccb7:	mov	esi, r10d
0xccba:	mov	edi, 0x66666667
0xccbf:	nop	
0xccc0:	mov	eax, ecx
0xccc2:	add	esi, 1
0xccc5:	sar	ecx, 0x1f
0xccc8:	imul	edi
0xccca:	sar	edx, 2
0xcccd:	sub	edx, ecx
0xcccf:	cmp	esi, 9
0xccd2:	mov	ecx, edx
0xccd4:	jne	0xccc0


0xd4b9:	mov	ecx, dword ptr [rsp + 0x518]
0xd4c0:	jmp	0xccd6


0xccd6:	mov	edi, r10d
0xccd9:	jmp	0xbf90


0xccc0:	mov	eax, ecx
0xccc2:	add	esi, 1
0xccc5:	sar	ecx, 0x1f
0xccc8:	imul	edi
0xccca:	sar	edx, 2
0xcccd:	sub	edx, ecx
0xcccf:	cmp	esi, 9
0xccd2:	mov	ecx, edx
0xccd4:	jne	0xccc0


0xccde:	cmp	r11d, 0x45
0xcce2:	je	0xbc80


0xcce8:	mov	ecx, dword ptr [rsp + 0x68]
0xccec:	mov	edi, 2
0xccf1:	jmp	0xbf90


0xccf6:	cmp	r11d, 0x45
0xccfa:	je	0xbc80


0xcd00:	mov	ecx, dword ptr [rsp + 0x68]
0xcd04:	test	r15d, r15d
0xcd07:	mov	edi, 2
0xcd0c:	jne	0xbf90


0xcd12:	mov	r15d, 0x5f
0xcd18:	jmp	0xbf90


0xcd1d:	cmp	r11d, 0x45
0xcd21:	je	0xbc80


0xcd27:	mov	eax, dword ptr [r13 + 0x10]
0xcd2b:	mov	byte ptr [rsp + 0x40], 0
0xcd30:	mov	edi, 2
0xcd35:	cmp	eax, -1
0xcd38:	lea	ecx, [rax + 1]
0xcd3b:	setl	byte ptr [rsp + 0x38]
0xcd40:	cmp	eax, -1
0xcd43:	setge	al
0xcd46:	xor	esi, esi
0xcd48:	jmp	0xbfa7


0xcd4d:	test	r10d, r10d
0xcd50:	mov	ecx, 0
0xcd55:	mov	eax, 1
0xcd5a:	cmovns	ecx, r10d
0xcd5e:	movsxd	rcx, ecx
0xcd61:	test	rcx, rcx
0xcd64:	cmove	rcx, rax
0xcd68:	mov	rax, qword ptr [rsp + 8]
0xcd6d:	sub	rax, r14
0xcd70:	cmp	rax, rcx
0xcd73:	jbe	0xbafc


0xcd79:	test	rbp, rbp
0xcd7c:	je	0xc068


0xcd82:	cmp	r10d, 1
0xcd86:	jle	0xcdc2


0xcdc2:	mov	byte ptr [rbp], 0xa
0xcdc6:	add	rbp, 1
0xcdca:	jmp	0xc068


0xcd88:	movsxd	rdx, r10d
0xcd8b:	mov	qword ptr [rsp + 0x30], rcx
0xcd90:	sub	rdx, 1
0xcd94:	cmp	r15d, 0x30
0xcd98:	lea	r12, [rbp + rdx]
0xcd9d:	je	0xd36e


0xd36e:	mov	rdi, rbp
0xd371:	mov	esi, 0x30
0xd376:	mov	rbp, r12
0xd379:	call	0x28f0


0xcda3:	cmp	r15d, 0x2b
0xcda7:	je	0xd36e


0xcdad:	mov	rdi, rbp
0xcdb0:	mov	esi, 0x20
0xcdb5:	mov	rbp, r12
0xcdb8:	call	0x28f0


0xcdbd:	mov	rcx, qword ptr [rsp + 0x30]
0xcdc2:	mov	byte ptr [rbp], 0xa
0xcdc6:	add	rbp, 1
0xcdca:	jmp	0xc068


0xd37e:	mov	rcx, qword ptr [rsp + 0x30]
0xd383:	jmp	0xcdc2


0xcdcf:	xor	eax, eax
0xcdd1:	jmp	0xc078


0xc078:	test	r8b, r8b
0xc07b:	jne	0xcfab


0xcdd6:	cmp	r11d, 0x45
0xcdda:	je	0xbc80


0xcde0:	mov	eax, dword ptr [r13 + 0x1c]
0xcde4:	mov	byte ptr [rsp + 0x40], 0
0xcde9:	mov	edi, 3
0xcdee:	cmp	eax, -1
0xcdf1:	lea	ecx, [rax + 1]
0xcdf4:	setl	byte ptr [rsp + 0x38]
0xcdf9:	cmp	eax, -1
0xcdfc:	setge	al
0xcdff:	xor	esi, esi
0xce01:	jmp	0xbfa7


0xce06:	cmp	r11d, 0x45
0xce0a:	je	0xbc80


0xce10:	mov	ecx, dword ptr [r13 + 8]
0xce14:	jmp	0xcd04


0xcd04:	test	r15d, r15d
0xcd07:	mov	edi, 2
0xcd0c:	jne	0xbf90


0xce19:	cmp	r11d, 0x45
0xce1d:	je	0xbc80


0xce23:	mov	ecx, dword ptr [r13 + 0xc]
0xce27:	jmp	0xcd04


0xd4e2:	nop	dword ptr [rax]
0xd4e6:	nop	word ptr cs:[rax + rax]


0xd53e:	nop	


0xd5bb:	nop	dword ptr [rax + rax]


0xd657:	nop	word ptr [rax + rax]


0xd664:	nop	word ptr cs:[rax + rax]
0xd66e:	nop	


0xe78f:	nop	


0xe98e:	nop	


0xebd7:	mov	r11d, 0x10
0xebdd:	mov	ebx, 0x73
0xebe2:	nop	word ptr [rax + rax]
0xebe8:	cmp	r13, -1
0xebec:	je	0xf2a7


0xf2a7:	mov	rsi, qword ptr [rsp + 0x20]
0xf2ac:	cmp	rsi, -1
0xf2b0:	lea	rax, [rsi + 1]
0xf2b4:	mov	qword ptr [r12 + 0x50], rsi
0xf2b9:	je	0xf1db


0xebf2:	mov	qword ptr [r12 + 0x50], r13
0xebf7:	cmp	r9, r13
0xebfa:	mov	rcx, qword ptr [r15 + 8]
0xebfe:	jbe	0xf220


0xf2bf:	mov	r13, qword ptr [rsp + 0x20]
0xf2c4:	mov	qword ptr [rsp + 0x20], rax
0xf2c9:	jmp	0xebf7


0xf220:	add	r9, r9
0xf223:	lea	rax, [r13 + 1]
0xf227:	cmp	r9, r13
0xf22a:	cmovbe	r9, rax
0xf22e:	movabs	rax, 0x7ffffffffffffff
0xf238:	cmp	r9, rax
0xf23b:	ja	0xf61b


0xec04:	mov	rax, qword ptr [r15]
0xec07:	mov	rdx, rax
0xec0a:	shl	rdx, 5
0xec0e:	add	rdx, rcx
0xec11:	cmp	rax, r13
0xec14:	ja	0xec36


0xebf7:	cmp	r9, r13
0xebfa:	mov	rcx, qword ptr [r15 + 8]
0xebfe:	jbe	0xf220


0xf241:	mov	rsi, r9
0xf244:	mov	qword ptr [rsp + 0x48], r9
0xf249:	mov	qword ptr [rsp + 0x40], r10
0xf24e:	shl	rsi, 5
0xf252:	cmp	qword ptr [rsp + 8], rcx
0xf257:	mov	qword ptr [rsp + 0x38], r8
0xf25c:	mov	dword ptr [rsp + 0x30], r11d
0xf261:	je	0xf301


0xec36:	shl	r13, 5
0xec3a:	lea	rax, [rcx + r13]
0xec3e:	mov	edx, dword ptr [rax]
0xec40:	test	edx, edx
0xec42:	jne	0xf213


0xf301:	mov	rdi, rsi
0xf304:	call	0x29d0


0xf267:	mov	rdi, rcx
0xf26a:	call	0x2a20


0xec20:	add	rax, 1
0xec24:	mov	dword ptr [rdx], 0
0xec2a:	add	rdx, 0x20
0xec2e:	cmp	rax, r13
0xec31:	jbe	0xec20


0xec33:	mov	qword ptr [r15], rax
0xec36:	shl	r13, 5
0xec3a:	lea	rax, [rcx + r13]
0xec3e:	mov	edx, dword ptr [rax]
0xec40:	test	edx, edx
0xec42:	jne	0xf213


0xec48:	mov	dword ptr [rax], r11d
0xec4b:	mov	byte ptr [r12 + 0x48], bl
0xec50:	mov	rax, qword ptr [r14]
0xec53:	mov	qword ptr [r12 + 8], rbp
0xec58:	lea	rbx, [rax + 1]
0xec5c:	cmp	r10, rbx
0xec5f:	mov	qword ptr [r14], rbx
0xec62:	ja	0xecf0


0xf213:	cmp	edx, r11d
0xf216:	je	0xec4b


0xec68:	test	r10, r10
0xec6b:	js	0xf617


0xecf0:	mov	rcx, qword ptr [r14 + 8]
0xecf4:	jmp	0xea08


0xec4b:	mov	byte ptr [r12 + 0x48], bl
0xec50:	mov	rax, qword ptr [r14]
0xec53:	mov	qword ptr [r12 + 8], rbp
0xec58:	lea	rbx, [rax + 1]
0xec5c:	cmp	r10, rbx
0xec5f:	mov	qword ptr [r14], rbx
0xec62:	ja	0xecf0


0xf21c:	jmp	0xf1df


0xf617:	mov	rcx, qword ptr [r15 + 8]
0xf61b:	cmp	qword ptr [rsp + 8], rcx
0xf620:	jne	0xf484


0xec71:	add	r10, r10
0xec74:	movabs	rax, 0x2e8ba2e8ba2e8ba
0xec7e:	cmp	r10, rax
0xec81:	ja	0xf617


0xec87:	lea	rax, [r10 + r10*4]
0xec8b:	mov	rdi, qword ptr [r14 + 8]
0xec8f:	cmp	qword ptr [rsp + 0x28], rdi
0xec94:	mov	qword ptr [rsp + 0x40], r9
0xec99:	mov	qword ptr [rsp + 0x38], r10
0xec9e:	lea	rax, [r10 + rax*2]
0xeca2:	mov	qword ptr [rsp + 0x30], r8
0xeca7:	lea	rsi, [rax*8]
0xecaf:	je	0xf36d


0xf36d:	mov	rdi, rsi
0xf370:	call	0x29d0


0xecb5:	call	0x2a20


0xecba:	test	rax, rax
0xecbd:	mov	rcx, rax
0xecc0:	mov	r8, qword ptr [rsp + 0x30]
0xecc5:	mov	r10, qword ptr [rsp + 0x38]
0xecca:	mov	r9, qword ptr [rsp + 0x40]
0xeccf:	je	0xf617


0xecd5:	mov	rax, qword ptr [rsp + 0x28]
0xecda:	cmp	rax, qword ptr [r14 + 8]
0xecde:	mov	rbx, qword ptr [r14]
0xece1:	je	0xf390


0xf390:	lea	rax, [rbx + rbx*4]
0xf394:	mov	rsi, qword ptr [rsp + 0x28]
0xf399:	mov	rdi, rcx
0xf39c:	mov	qword ptr [rsp + 0x40], r9
0xf3a1:	mov	qword ptr [rsp + 0x38], r10
0xf3a6:	lea	rdx, [rbx + rax*2]
0xf3aa:	mov	qword ptr [rsp + 0x30], r8
0xf3af:	shl	rdx, 3
0xf3b3:	call	0x2970


0xece7:	mov	qword ptr [r14 + 8], rcx
0xeceb:	jmp	0xea08


0xf3b8:	mov	rbx, qword ptr [r14]
0xf3bb:	mov	rcx, rax
0xf3be:	mov	r9, qword ptr [rsp + 0x40]
0xf3c3:	mov	r10, qword ptr [rsp + 0x38]
0xf3c8:	mov	r8, qword ptr [rsp + 0x30]
0xf3cd:	jmp	0xece7


0xf26f:	test	rax, rax
0xf272:	mov	rcx, rax
0xf275:	mov	r11d, dword ptr [rsp + 0x30]
0xf27a:	mov	r8, qword ptr [rsp + 0x38]
0xf27f:	mov	r10, qword ptr [rsp + 0x40]
0xf284:	mov	r9, qword ptr [rsp + 0x48]
0xf289:	je	0xf617


0xf28f:	mov	rax, qword ptr [rsp + 8]
0xf294:	cmp	rax, qword ptr [r15 + 8]
0xf298:	je	0xf329


0xf329:	mov	rdx, qword ptr [r15]
0xf32c:	mov	rsi, qword ptr [rsp + 8]
0xf331:	mov	rdi, rcx
0xf334:	mov	qword ptr [rsp + 0x48], r9
0xf339:	mov	qword ptr [rsp + 0x40], r10
0xf33e:	mov	qword ptr [rsp + 0x38], r8
0xf343:	mov	dword ptr [rsp + 0x30], r11d
0xf348:	shl	rdx, 5
0xf34c:	call	0x2970


0xf29e:	mov	qword ptr [r15 + 8], rcx
0xf2a2:	jmp	0xec04


0xf351:	mov	r9, qword ptr [rsp + 0x48]
0xf356:	mov	r10, qword ptr [rsp + 0x40]
0xf35b:	mov	rcx, rax
0xf35e:	mov	r8, qword ptr [rsp + 0x38]
0xf363:	mov	r11d, dword ptr [rsp + 0x30]
0xf368:	jmp	0xf29e


0xf375:	test	rax, rax
0xf378:	mov	rcx, rax
0xf37b:	mov	r8, qword ptr [rsp + 0x30]
0xf380:	mov	r10, qword ptr [rsp + 0x38]
0xf385:	mov	r9, qword ptr [rsp + 0x40]
0xf38a:	je	0xf479


0xf479:	mov	rcx, qword ptr [r15 + 8]
0xf47d:	cmp	qword ptr [rsp + 8], rcx
0xf482:	je	0xf49c


0xf309:	test	rax, rax
0xf30c:	mov	rcx, rax
0xf30f:	mov	r11d, dword ptr [rsp + 0x30]
0xf314:	mov	r8, qword ptr [rsp + 0x38]
0xf319:	mov	r10, qword ptr [rsp + 0x40]
0xf31e:	mov	r9, qword ptr [rsp + 0x48]
0xf323:	je	0xf48c


0xf08c:	cmp	eax, 0xf
0xf08f:	mov	r11d, 0x16
0xf095:	jg	0xebe8


0xf09b:	test	al, 4
0xf09d:	jne	0xebe8


0xebe8:	cmp	r13, -1
0xebec:	je	0xf2a7


0xf0a3:	cmp	eax, 7
0xf0a6:	mov	r11d, 0x15
0xf0ac:	jg	0xebe8


0xf0b2:	test	al, 2
0xf0b4:	mov	r11d, 0x12
0xf0ba:	jne	0xebe8


0xf0c0:	xor	r11d, r11d
0xf0c3:	test	al, 1
0xf0c5:	sete	r11b
0xf0c9:	add	r11d, 0x13
0xf0cd:	jmp	0xebe8


0xf0eb:	cmp	eax, 0xf
0xf0ee:	mov	r11d, 9
0xf0f4:	jg	0xebe8


0xf0fa:	test	al, 4
0xf0fc:	jne	0xebe8


0xf102:	cmp	eax, 7
0xf105:	mov	r11d, 7
0xf10b:	jg	0xebe8


0xf111:	test	al, 2
0xf113:	mov	r11d, 1
0xf119:	jne	0xebe8


0xf11f:	and	eax, 1
0xf122:	cmp	eax, 1
0xf125:	sbb	r11d, r11d
0xf128:	and	r11d, 2
0xf12c:	add	r11d, 3
0xf130:	jmp	0xebe8


0xf14b:	cmp	eax, 0xf
0xf14e:	mov	r11d, 0xc
0xf154:	jg	0xebe8


0xf15a:	xor	r11d, r11d
0xf15d:	test	al, 4
0xf15f:	setne	r11b
0xf163:	add	r11d, 0xb
0xf167:	jmp	0xebe8


0xf16c:	mov	r11d, 0xe
0xf172:	mov	ebx, 0x63
0xf177:	jmp	0xebe8


0xf17c:	cmp	eax, 0xf
0xf17f:	mov	r11d, 0xa
0xf185:	jg	0xebe8


0xf18b:	test	al, 4
0xf18d:	jne	0xebe8


0xf193:	cmp	eax, 7
0xf196:	mov	r11d, 8
0xf19c:	jg	0xebe8


0xf1a2:	test	al, 2
0xf1a4:	mov	r11d, 2
0xf1aa:	jne	0xebe8


0xf1b0:	and	eax, 1
0xf1b3:	cmp	eax, 1
0xf1b6:	sbb	r11d, r11d
0xf1b9:	and	r11d, 2
0xf1bd:	add	r11d, 4
0xf1c1:	jmp	0xebe8


0xf67c:	nop	dword ptr [rax]


0xf6e5:	nop	
0xf6e6:	nop	word ptr cs:[rax + rax]


0xf6f2:	nop	word ptr cs:[rax + rax]
0xf6fc:	nop	dword ptr [rax]


0x8fd0:	xor	r10d, r10d
0x8fd3:	mov	eax, dword ptr [rsp + 8]
0x8fd7:	cmp	eax, 2
0x8fda:	je	0x9598


0x9000:	xor	r10d, r10d
0x9003:	cmp	dword ptr [rsp + 8], 2
0x9008:	je	0x9510


0x9028:	mov	edx, 9
0x902d:	mov	ebx, 0x74
0x9032:	cmp	dword ptr [rsp + 8], 2
0x9037:	sete	al
0x903a:	and	al, byte ptr [rsp + 0xf]
0x903e:	jne	0x918e


0x9068:	mov	edx, 8
0x906d:	mov	ebx, 0x62
0x9072:	jmp	0x9044


0x9078:	cmp	dword ptr [rsp + 8], 2
0x907d:	je	0x9450


0x9120:	cmp	byte ptr [rsp + 0xd], 0
0x9125:	jne	0x92f3


0x9148:	cmp	dword ptr [rsp + 8], 2
0x914d:	sete	dl
0x9150:	xor	eax, eax
0x9152:	jmp	0x8f38


0x9160:	mov	edx, 7
0x9165:	mov	ebx, 0x61
0x916a:	jmp	0x9044


0x9170:	cmp	dword ptr [rsp + 8], 2
0x9175:	sete	dl
0x9178:	test	rbp, rbp
0x917b:	jne	0x8f2c


0x91a0:	cmp	dword ptr [rsp + 8], 2
0x91a5:	sete	dl
0x91a8:	xor	r12d, r12d
0x91ab:	jmp	0x9181


0x91b0:	cmp	dword ptr [rsp + 8], 2
0x91b5:	mov	ebx, 0x20
0x91ba:	sete	dl
0x91bd:	jmp	0x9181


0x91c0:	mov	edx, 0xd
0x91c5:	mov	ebx, 0x72
0x91ca:	jmp	0x9032


0x91d0:	mov	edx, 0xc
0x91d5:	mov	ebx, 0x66
0x91da:	jmp	0x9044


0x91e0:	mov	edx, 0xb
0x91e5:	mov	ebx, 0x76
0x91ea:	jmp	0x9044


0x91f0:	mov	edx, 0xa
0x91f5:	mov	ebx, 0x6e
0x91fa:	jmp	0x9032


0x9290:	xor	r10d, r10d
0x9293:	cmp	byte ptr [rsp + 0xd], 0
0x9298:	jne	0x908e


0x92b0:	mov	edx, 0xc
0x92b5:	xor	r10d, r10d
0x92b8:	mov	ebx, 0x66
0x92bd:	jmp	0x9044


0x92c8:	mov	edx, 0xa
0x92cd:	xor	r10d, r10d
0x92d0:	mov	ebx, 0x6e
0x92d5:	jmp	0x9032


0x92e0:	mov	ebx, 0x61
0x92e5:	jmp	0x90b0


0x92f0:	xor	r10d, r10d
0x92f3:	cmp	dword ptr [rsp + 8], 2
0x92f8:	sete	dl
0x92fb:	cmp	byte ptr [rsp + 0xf], 0
0x9300:	jne	0x9e9a


0x9390:	cmp	dword ptr [rsp + 8], 2
0x9395:	mov	r12d, r10d
0x9398:	sete	dl
0x939b:	xor	r10d, r10d
0x939e:	xor	eax, eax
0x93a0:	jmp	0x8f38


0x93a8:	cmp	dword ptr [rsp + 8], 2
0x93ad:	sete	dl
0x93b0:	xor	r10d, r10d
0x93b3:	jmp	0x9178


0x93c0:	cmp	dword ptr [rsp + 8], 2
0x93c5:	sete	dl
0x93c8:	xor	r10d, r10d
0x93cb:	xor	r12d, r12d
0x93ce:	jmp	0x9181


0x93d8:	cmp	dword ptr [rsp + 8], 2
0x93dd:	mov	r12d, r10d
0x93e0:	mov	ebx, 0x20
0x93e5:	sete	dl
0x93e8:	xor	r10d, r10d
0x93eb:	jmp	0x9181


0x9408:	mov	ebx, 0x76
0x940d:	jmp	0x90b0


0x9418:	mov	edx, 9
0x941d:	xor	r10d, r10d
0x9420:	mov	ebx, 0x74
0x9425:	jmp	0x9032


0x9430:	mov	ebx, 0x62
0x9435:	jmp	0x90b0


0x99d0:	test	ebx, ebx
0x99d2:	jne	0x9dcd


0xbde8:	cmp	r11d, 0x4f
0xbdec:	je	0xbc80


0xc530:	cmp	r11d, 0x4f
0xc534:	mov	eax, dword ptr [r13 + 0x10]
0xc538:	mov	edi, 1
0xc53d:	je	0xbfbc


0xf0d8:	xor	r11d, r11d
0xf0db:	cmp	eax, 7
0xf0de:	setg	r11b
0xf0e2:	add	r11d, 0xd
0xf0e6:	jmp	0xebe8


0xf138:	xor	r11d, r11d
0xf13b:	cmp	eax, 7
0xf13e:	setg	r11b
0xf142:	add	r11d, 0xf
0xf146:	jmp	0xebe8


0xf1d0:	mov	r11d, 0x11
0xf1d6:	jmp	0xebe8


0x2ca8:	nop	dword ptr [rax + rax]


0x2cd6:	nop	word ptr cs:[rax + rax]


0x2d35:	nop	dword ptr [rax]


0x2d9a:	nop	word ptr [rax + rax]


0x2dac:	nop	dword ptr [rax]


0x2dca:	nop	word ptr [rax + rax]


0x2ddc:	nop	dword ptr [rax]


0x2dec:	nop	dword ptr [rax]


0x3586:	nop	word ptr cs:[rax + rax]


0x35d7:	nop	word ptr [rax + rax]


0x3621:	nop	dword ptr [rax]


0x3ae6:	nop	word ptr cs:[rax + rax]


0x3b73:	nop	dword ptr [rax + rax]


0x3ba7:	nop	word ptr [rax + rax]


0x3c1d:	nop	dword ptr [rax]


0x3c8f:	nop	


0x3d14:	nop	dword ptr [rax]


0x3d43:	nop	dword ptr [rax + rax]


0x3def:	nop	


0x3fbc:	nop	dword ptr [rax]


0x4095:	nop	dword ptr [rax]


0x4192:	nop	word ptr [rax + rax]


0x428a:	nop	word ptr [rax + rax]


0x443e:	nop	


0x447b:	nop	dword ptr [rax + rax]


0x448a:	nop	word ptr [rax + rax]


0x451a:	nop	word ptr [rax + rax]


0x4555:	nop	dword ptr [rax]


0x4568:	nop	dword ptr [rax + rax]


0x458a:	nop	word ptr [rax + rax]


0x4677:	nop	word ptr [rax + rax]


0x46e6:	nop	word ptr cs:[rax + rax]


0x477d:	nop	dword ptr [rax]


0x481f:	nop	


0x48d5:	nop	dword ptr [rax]


0x4924:	nop	dword ptr [rax]


0x4b2e:	nop	


0x4bbb:	nop	dword ptr [rax + rax]


0x4c1b:	nop	dword ptr [rax + rax]


0x4ca5:	nop	dword ptr [rax]


0x4cbe:	nop	


0x4d1f:	nop	


0x4de7:	nop	word ptr [rax + rax]


0x5111:	nop	dword ptr [rax]


0x5146:	nop	word ptr cs:[rax + rax]


0x5321:	nop	dword ptr [rax]


0x536a:	nop	word ptr [rax + rax]


0x541d:	nop	dword ptr [rax]


0x5436:	nop	word ptr cs:[rax + rax]


0x547f:	nop	


0x5514:	nop	dword ptr [rax]


0x5542:	nop	word ptr [rax + rax]


0x557c:	nop	dword ptr [rax]


0x559b:	nop	dword ptr [rax + rax]


0x568e:	nop	


0x5c56:	nop	word ptr cs:[rax + rax]


0x5cef:	nop	


0x5dea:	nop	word ptr [rax + rax]


0x5eb2:	nop	word ptr [rax + rax]


0x5eee:	nop	


0x5ff8:	nop	dword ptr [rax + rax]


0x6096:	nop	word ptr cs:[rax + rax]


0x6347:	nop	word ptr [rax + rax]


0x63f3:	nop	dword ptr [rax + rax]


0x6473:	nop	dword ptr [rax + rax]


0x67e4:	nop	dword ptr [rax]


0x69e7:	nop	word ptr [rax + rax]


0x6a3e:	nop	


0x6a71:	nop	dword ptr [rax]


0x6de2:	nop	word ptr [rax + rax]


0x6e34:	nop	dword ptr [rax]


0x6e5c:	nop	dword ptr [rax]


0x6e71:	nop	dword ptr [rax]


0x6e99:	nop	dword ptr [rax]


0x6f11:	nop	dword ptr [rax]


0x6f55:	nop	dword ptr [rax]


0x6f6e:	nop	


0x6f82:	nop	word ptr [rax + rax]


0x7225:	nop	dword ptr [rax]


0x723e:	nop	


0x7901:	nop	dword ptr [rax]


0x7924:	nop	dword ptr [rax]


0x7933:	nop	dword ptr [rax + rax]


0x7b61:	nop	dword ptr [rax]


0x8774:	nop	dword ptr [rax]


0x87b1:	nop	dword ptr [rax]


0x87d2:	nop	word ptr [rax + rax]


0x888d:	nop	dword ptr [rax]


0x88d3:	nop	dword ptr [rax + rax]


0x8a6e:	nop	


0x8a86:	nop	word ptr cs:[rax + rax]


0x8acf:	nop	


0x8b38:	nop	dword ptr [rax + rax]


0x8c5c:	nop	dword ptr [rax]


0x8cad:	nop	dword ptr [rax]


0x8ed8:	nop	dword ptr [rax + rax]


0x8fc7:	nop	word ptr [rax + rax]


0x8ffe:	nop	


0x9021:	nop	dword ptr [rax]


0x9062:	nop	word ptr [rax + rax]


0x9074:	nop	dword ptr [rax]


0x9118:	nop	dword ptr [rax + rax]


0x9141:	nop	dword ptr [rax]


0x9157:	nop	word ptr [rax + rax]


0x916f:	nop	


0x919e:	nop	


0x91ad:	nop	dword ptr [rax]


0x91bf:	nop	


0x91cf:	nop	


0x91df:	nop	


0x91ef:	nop	


0x91ff:	nop	


0x926c:	nop	dword ptr [rax]


0x928c:	nop	dword ptr [rax]


0x929e:	nop	


0x92af:	nop	


0x92c2:	nop	word ptr [rax + rax]


0x92da:	nop	word ptr [rax + rax]


0x92ea:	nop	word ptr [rax + rax]


0x938b:	nop	dword ptr [rax + rax]


0x93a5:	nop	dword ptr [rax]


0x93b8:	nop	dword ptr [rax + rax]


0x93d3:	nop	dword ptr [rax + rax]


0x9402:	nop	word ptr [rax + rax]


0x9412:	nop	word ptr [rax + rax]


0x942a:	nop	word ptr [rax + rax]


0x943a:	nop	word ptr [rax + rax]


0x9448:	nop	dword ptr [rax + rax]


0x946f:	nop	


0x9509:	nop	dword ptr [rax]


0x9552:	nop	word ptr [rax + rax]


0x9578:	nop	dword ptr [rax + rax]


0x9591:	nop	dword ptr [rax]


0x95b2:	nop	word ptr [rax + rax]


0x9718:	nop	dword ptr [rax + rax]


0x982b:	nop	dword ptr [rax + rax]


0x984e:	nop	


0x9915:	nop	dword ptr [rax]


0x99cd:	nop	dword ptr [rax]


0x9bd6:	nop	word ptr cs:[rax + rax]


0x9c69:	nop	dword ptr [rax]


0x9cdd:	nop	dword ptr [rax]


0x9dbd:	nop	dword ptr [rax]


0xa0cb:	nop	dword ptr [rax + rax]


0xa956:	nop	word ptr cs:[rax + rax]


0xa9e5:	nop	dword ptr [rax]


0xaa06:	nop	word ptr cs:[rax + rax]


0xaa65:	nop	dword ptr [rax]


0xaaa1:	nop	dword ptr [rax]


0xaae8:	nop	dword ptr [rax + rax]


0xab37:	nop	word ptr [rax + rax]


0xab94:	nop	dword ptr [rax]


0xabc2:	nop	word ptr [rax + rax]


0xac76:	nop	word ptr cs:[rax + rax]


0xacd9:	nop	dword ptr [rax]


0xaf52:	nop	word ptr [rax + rax]


0xafd9:	nop	dword ptr [rax]


0xb004:	nop	dword ptr [rax]


0xb05d:	nop	dword ptr [rax]


0xb209:	nop	dword ptr [rax]


0xb242:	nop	word ptr [rax + rax]


0xb29c:	nop	dword ptr [rax]


0xb313:	nop	dword ptr [rax + rax]


0xb37f:	nop	


0xb3d9:	nop	dword ptr [rax]


0xb3ff:	nop	


0xb449:	nop	dword ptr [rax]


0xb45f:	nop	


0xb509:	nop	dword ptr [rax]


0xb532:	nop	word ptr [rax + rax]


0xb554:	nop	dword ptr [rax]


0xb5c8:	nop	dword ptr [rax + rax]


0xb5eb:	nop	dword ptr [rax + rax]


0xb6bb:	nop	dword ptr [rax + rax]


0xb738:	nop	dword ptr [rax + rax]


0xb74d:	nop	dword ptr [rax]


0xb819:	nop	dword ptr [rax]


0xb8a4:	nop	dword ptr [rax]


0xb8c1:	nop	dword ptr [rax]


0xb8d2:	nop	word ptr [rax + rax]


0xb92a:	nop	word ptr [rax + rax]


0xb976:	nop	word ptr cs:[rax + rax]


0xb9a8:	nop	dword ptr [rax + rax]


0xb9f8:	nop	dword ptr [rax + rax]


0xbb2b:	nop	dword ptr [rax + rax]


0xbb9a:	nop	word ptr [rax + rax]


0xbbb1:	nop	dword ptr [rax]


0xbc41:	nop	dword ptr [rax]


0xbc59:	nop	dword ptr [rax]


0xbc68:	nop	dword ptr [rax + rax]


0xbd5d:	nop	dword ptr [rax]


0xbd6a:	nop	word ptr [rax + rax]


0xbda7:	nop	word ptr [rax + rax]


0xbde1:	nop	dword ptr [rax]


0xc529:	nop	dword ptr [rax]


0xce2c:	nop	dword ptr [rax]


0xce41:	nop	dword ptr [rax]


0xcf0c:	nop	dword ptr [rax]


0xcf24:	nop	dword ptr [rax]


0xd585:	nop	dword ptr [rax]


0xd5e3:	nop	dword ptr [rax + rax]


0xd60f:	nop	


0xd874:	nop	dword ptr [rax]


0xd8a3:	nop	dword ptr [rax + rax]


0xdbcd:	nop	dword ptr [rax]


0xdd02:	nop	word ptr [rax + rax]


0xde2f:	nop	


0xdeb2:	nop	word ptr [rax + rax]


0xdf33:	nop	dword ptr [rax + rax]


0xdf5f:	nop	


0xdf74:	nop	dword ptr [rax]


0xdfa4:	nop	dword ptr [rax]


0xdff6:	nop	word ptr cs:[rax + rax]


0xe02c:	nop	dword ptr [rax]


0xe05c:	nop	dword ptr [rax]


0xe09b:	nop	dword ptr [rax + rax]


0xe0b1:	nop	dword ptr [rax]


0xe0c5:	nop	dword ptr [rax]


0xe0d1:	nop	dword ptr [rax]


0xe129:	nop	dword ptr [rax]


0xe149:	nop	dword ptr [rax]


0xe172:	nop	word ptr [rax + rax]


0xe1cd:	nop	dword ptr [rax]


0xe1df:	nop	


0xe212:	nop	word ptr [rax + rax]


0xe298:	nop	dword ptr [rax + rax]


0xe2a8:	nop	dword ptr [rax + rax]


0xe2dd:	nop	dword ptr [rax]


0xe31a:	nop	word ptr [rax + rax]


0xe333:	nop	dword ptr [rax + rax]


0xe34a:	nop	word ptr [rax + rax]


0xe379:	nop	dword ptr [rax]


0xe3c8:	nop	dword ptr [rax + rax]


0xe3dc:	nop	dword ptr [rax]


0xe3eb:	nop	dword ptr [rax + rax]


0xe3fb:	nop	dword ptr [rax + rax]


0xe40c:	nop	dword ptr [rax]


0xe458:	nop	dword ptr [rax + rax]


0xe468:	nop	dword ptr [rax + rax]


0xe47f:	nop	


0xe496:	nop	word ptr cs:[rax + rax]


0xe4ba:	nop	word ptr [rax + rax]


0xe533:	nop	dword ptr [rax + rax]


0xe548:	nop	dword ptr [rax + rax]


0xe59b:	nop	dword ptr [rax + rax]


0xe74d:	nop	dword ptr [rax]


0xe7c8:	nop	dword ptr [rax + rax]


0xe9fe:	nop	


0xea41:	nop	dword ptr [rax]


0xeaa7:	nop	word ptr [rax + rax]


0xeaf2:	nop	word ptr [rax + rax]


0xeb08:	nop	dword ptr [rax + rax]


0xeb18:	nop	dword ptr [rax + rax]


0xeb28:	nop	dword ptr [rax + rax]


0xeb38:	nop	dword ptr [rax + rax]


0xeb67:	nop	word ptr [rax + rax]


0xeb8e:	nop	


0xebad:	nop	dword ptr [rax]


0xebb5:	nop	dword ptr [rax]


0xec16:	nop	word ptr cs:[rax + rax]


0xede6:	nop	word ptr cs:[rax + rax]


0xee9c:	nop	dword ptr [rax]


0xef7d:	nop	dword ptr [rax]


0xefc9:	nop	dword ptr [rax]


0xf0d2:	nop	word ptr [rax + rax]


0xf135:	nop	dword ptr [rax]


0xf1c6:	nop	word ptr cs:[rax + rax]


0xf21e:	nop	


0xf62b:	nop	dword ptr [rax + rax]


