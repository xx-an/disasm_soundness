0x78a0:	sub	rsp, 8
0x78a4:	add	rsp, 8
0x78a8:	ret	


0x7890:	mov	rdx, qword ptr [rip + 0x202771]
0x7897:	xor	esi, esi
0x7899:	jmp	0x1bd0


0x7880:	ret	


0x7810:	push	r15
0x7812:	push	r14
0x7814:	mov	r15, rdx
0x7817:	push	r13
0x7819:	push	r12
0x781b:	lea	r12, [rip + 0x2022ce]
0x7822:	push	rbp
0x7823:	lea	rbp, [rip + 0x2022ce]
0x782a:	push	rbx
0x782b:	mov	r13d, edi
0x782e:	mov	r14, rsi
0x7831:	sub	rbp, r12
0x7834:	sub	rsp, 8
0x7838:	sar	rbp, 3
0x783c:	call	0x17f8


0x77d0:	sub	rsp, 8
0x77d4:	mov	edi, 0xe
0x77d9:	call	0x1af0


0x7770:	sub	rsp, 8
0x7774:	xor	esi, esi
0x7776:	call	0x1b30


0x76f0:	push	r12
0x76f2:	push	rbp
0x76f3:	mov	rbp, rdi
0x76f6:	push	rbx
0x76f7:	call	0x18d0


0x75a0:	push	r12
0x75a2:	push	rbp
0x75a3:	push	rbx
0x75a4:	mov	rbx, rsi
0x75a7:	sub	rsp, 0x50
0x75ab:	mov	rax, qword ptr fs:[0x28]
0x75b4:	mov	qword ptr [rsp + 0x48], rax
0x75b9:	xor	eax, eax
0x75bb:	test	rdi, rdi
0x75be:	je	0x76c0


0x74f0:	push	r13
0x74f2:	push	r12
0x74f4:	push	rbp
0x74f5:	push	rbx
0x74f6:	mov	rbp, rsi
0x74f9:	sub	rsp, 8
0x74fd:	test	rdi, rdi
0x7500:	je	0x7570


0x74e0:	cmp	rdi, 1
0x74e4:	je	0x74eb


0x7400:	push	r12
0x7402:	push	rbp
0x7403:	mov	rbp, rdi
0x7406:	push	rbx
0x7407:	lea	rdi, [rip + 0x1412]
0x740e:	sub	rsp, 0x10
0x7412:	call	0x1840


0x72c0:	push	r15
0x72c2:	push	r14
0x72c4:	mov	eax, 1
0x72c9:	push	r13
0x72cb:	push	r12
0x72cd:	push	rbp
0x72ce:	push	rbx
0x72cf:	sub	rsp, 8
0x72d3:	mov	rbp, qword ptr [rsi + 0x30]
0x72d7:	test	rbp, rbp
0x72da:	je	0x7370


0x7230:	test	rdi, rdi
0x7233:	push	r12
0x7235:	push	rbp
0x7236:	push	rbx
0x7237:	je	0x7298


0x71d0:	push	r13
0x71d2:	push	r12
0x71d4:	push	rbp
0x71d5:	push	rbx
0x71d6:	mov	rbp, rdi
0x71d9:	sub	rsp, 8
0x71dd:	call	0x1880


0x71a0:	test	rdi, rdi
0x71a3:	je	0x71c8


0x7170:	test	rdi, rdi
0x7173:	je	0x7190


0x6fe0:	push	r15
0x6fe2:	push	r14
0x6fe4:	xor	r14d, r14d
0x6fe7:	push	r13
0x6fe9:	mov	r13d, ecx
0x6fec:	push	r12
0x6fee:	push	rbp
0x6fef:	push	rbx
0x6ff0:	mov	r12d, r13d
0x6ff3:	xor	ebx, ebx
0x6ff5:	xor	ebp, ebp
0x6ff7:	and	r12d, 2
0x6ffb:	sub	rsp, 0x18
0x6fff:	and	r13d, 1
0x7003:	mov	qword ptr [rsp], rsi
0x7007:	mov	qword ptr [rsp + 8], rdx
0x700c:	call	0x1830


0x6f80:	push	rbp
0x6f81:	push	rbx
0x6f82:	mov	rbp, rdi
0x6f85:	mov	edi, 0x21
0x6f8a:	sub	rsp, 8
0x6f8e:	call	0x6b40


0x6ef0:	push	r13
0x6ef2:	push	r12
0x6ef4:	mov	r13, rsi
0x6ef7:	push	rbp
0x6ef8:	push	rbx
0x6ef9:	mov	rbx, rdi
0x6efc:	mov	r12, rdx
0x6eff:	sub	rsp, 0x18
0x6f03:	mov	rax, qword ptr fs:[0x28]
0x6f0c:	mov	qword ptr [rsp + 8], rax
0x6f11:	xor	eax, eax
0x6f13:	lea	rax, [rsp + 4]
0x6f18:	test	rdi, rdi
0x6f1b:	cmove	rbx, rax
0x6f1f:	mov	rdi, rbx
0x6f22:	call	0x19a0


0x6e90:	mov	rax, qword ptr [rdi + 8]
0x6e94:	cmp	qword ptr [rdi + 0x10], rax
0x6e98:	je	0x6ea0


0x6e50:	test	rdi, rdi
0x6e53:	push	rbx
0x6e54:	mov	rbx, rdi
0x6e57:	je	0x6e6a


0x6dd0:	push	r12
0x6dd2:	push	rbp
0x6dd3:	push	rbx
0x6dd4:	mov	rbx, rdi
0x6dd7:	call	0x1ab0


0x6d90:	lea	rsi, [rip + 0x1a78]
0x6d97:	sub	rsp, 8
0x6d9b:	mov	edx, 5
0x6da0:	xor	edi, edi
0x6da2:	call	0x1950


0x6d70:	push	rbx
0x6d71:	mov	rbx, rdi
0x6d74:	call	0x1970


0x6d40:	push	rbp
0x6d41:	push	rbx
0x6d42:	mov	rbp, rdi
0x6d45:	mov	rdi, rsi
0x6d48:	mov	rbx, rsi
0x6d4b:	sub	rsp, 8
0x6d4f:	call	0x6b40


0x6d10:	mov	rax, rdi
0x6d13:	sub	rsp, 8
0x6d17:	mul	rsi
0x6d1a:	seto	dl
0x6d1d:	test	rax, rax
0x6d20:	js	0x6d39


0x6cf0:	push	rbx
0x6cf1:	mov	rbx, rdi
0x6cf4:	call	0x6b40


0x6ca0:	test	rdi, rdi
0x6ca3:	mov	rax, qword ptr [rsi]
0x6ca6:	je	0x6cd0


0x6c10:	test	rdi, rdi
0x6c13:	mov	r9, rdx
0x6c16:	mov	rcx, qword ptr [rsi]
0x6c19:	je	0x6c50


0x6be0:	mov	rax, rsi
0x6be3:	mul	rdx
0x6be6:	mov	rsi, rax
0x6be9:	seto	al
0x6bec:	test	rsi, rsi
0x6bef:	js	0x6bfb


0x6ba0:	test	rsi, rsi
0x6ba3:	push	rbx
0x6ba4:	mov	rbx, rsi
0x6ba7:	jne	0x6bae


0x6b90:	jmp	0x6b40


0x6b60:	mov	rax, rdi
0x6b63:	mul	rsi
0x6b66:	mov	rdi, rax
0x6b69:	seto	al
0x6b6c:	test	rdi, rdi
0x6b6f:	js	0x6b7b


0x6b40:	push	rbx
0x6b41:	mov	rbx, rdi
0x6b44:	call	0x1ad0


0x6ac0:	push	rbx
0x6ac1:	lea	rsi, [rip + 0x1a3a]
0x6ac8:	mov	edx, 5
0x6acd:	xor	edi, edi
0x6acf:	call	0x1950


0x69e0:	push	rbp
0x69e1:	push	rbx
0x69e2:	mov	r10d, 0x20
0x69e8:	xor	r11d, r11d
0x69eb:	sub	rsp, 0xb8
0x69f2:	mov	rax, qword ptr fs:[0x28]
0x69fb:	mov	qword ptr [rsp + 0x78], rax
0x6a00:	xor	eax, eax
0x6a02:	lea	rax, [rsp + 0xd0]
0x6a0a:	mov	qword ptr [rsp + 0xa0], r8
0x6a12:	lea	rbx, [rsp + 0xd0]
0x6a1a:	lea	r8, [rsp + 0x20]
0x6a1f:	mov	qword ptr [rsp + 0xa8], r9
0x6a27:	mov	dword ptr [rsp + 8], 0x20
0x6a2f:	mov	qword ptr [rsp + 0x10], rax
0x6a34:	lea	rax, [rsp + 0x80]
0x6a3c:	xor	r9d, r9d
0x6a3f:	mov	qword ptr [rsp + 0x18], rax
0x6a44:	mov	rbp, rax
0x6a47:	nop	word ptr [rax + rax]
0x6a50:	cmp	r10d, 0x2f
0x6a54:	ja	0x6aac


0x6960:	sub	rsp, 0x68
0x6964:	mov	r10, r8
0x6967:	xor	r9d, r9d
0x696a:	mov	rax, qword ptr fs:[0x28]
0x6973:	mov	qword ptr [rsp + 0x58], rax
0x6978:	xor	eax, eax
0x697a:	mov	r8, rsp
0x697d:	nop	dword ptr [rax]
0x6980:	mov	eax, dword ptr [r10]
0x6983:	cmp	eax, 0x2f
0x6986:	ja	0x69ca


0x6940:	xor	r9d, r9d
0x6943:	cmp	qword ptr [r8], 0
0x6947:	je	0x695b


0x6520:	push	r15
0x6522:	push	r14
0x6524:	push	r13
0x6526:	push	r12
0x6528:	mov	r12, r9
0x652b:	push	rbp
0x652c:	push	rbx
0x652d:	mov	rbp, rdi
0x6530:	mov	rbx, r8
0x6533:	sub	rsp, 0x28
0x6537:	test	rsi, rsi
0x653a:	je	0x6658


0x6500:	lea	rcx, [rip + 0x203b19]
0x6507:	mov	rsi, rdi
0x650a:	mov	rdx, -1
0x6511:	xor	edi, edi
0x6513:	jmp	0x5bc0


0x64e0:	lea	rcx, [rip + 0x203b39]
0x64e7:	mov	rdx, -1
0x64ee:	jmp	0x5bc0


0x64c0:	lea	rcx, [rip + 0x203b59]
0x64c7:	mov	rdx, rsi
0x64ca:	mov	rsi, rdi
0x64cd:	xor	edi, edi
0x64cf:	jmp	0x5bc0


0x64b0:	lea	rcx, [rip + 0x203b69]
0x64b7:	jmp	0x5bc0


0x6490:	mov	r8, rcx
0x6493:	mov	rcx, rdx
0x6496:	mov	rdx, rsi
0x6499:	mov	rsi, rdi
0x649c:	xor	edi, edi
0x649e:	jmp	0x63c0


0x6470:	mov	rcx, rdx
0x6473:	mov	r8, -1
0x647a:	mov	rdx, rsi
0x647d:	mov	rsi, rdi
0x6480:	xor	edi, edi
0x6482:	jmp	0x63c0


0x6460:	mov	r8, -1
0x6467:	jmp	0x63c0


0x63c0:	sub	rsp, 0x48
0x63c4:	mov	r9, rcx
0x63c7:	mov	rcx, qword ptr [rip + 0x203e62]
0x63ce:	movdqa	xmm0, xmmword ptr [rip + 0x203e2a]
0x63d6:	mov	rax, qword ptr fs:[0x28]
0x63df:	mov	qword ptr [rsp + 0x38], rax
0x63e4:	xor	eax, eax
0x63e6:	movaps	xmmword ptr [rsp], xmm0
0x63ea:	test	rsi, rsi
0x63ed:	mov	qword ptr [rsp + 0x30], rcx
0x63f2:	mov	dword ptr [rsp], 0xa
0x63f9:	movdqa	xmm0, xmmword ptr [rip + 0x203e0f]
0x6401:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x6406:	movdqa	xmm0, xmmword ptr [rip + 0x203e12]
0x640e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x6413:	je	0x6447


0x6330:	sub	rsp, 0x48
0x6334:	mov	rax, rdx
0x6337:	mov	rdx, qword ptr fs:[0x28]
0x6340:	mov	qword ptr [rsp + 0x38], rdx
0x6345:	xor	edx, edx
0x6347:	cmp	esi, 0xa
0x634a:	je	0x63b4


0x6320:	mov	edx, 0x3a
0x6325:	jmp	0x6250


0x6300:	mov	edx, 0x3a
0x6305:	mov	rsi, -1
0x630c:	jmp	0x6250


0x62f0:	movsx	edx, sil
0x62f4:	mov	rsi, -1
0x62fb:	jmp	0x6250


0x6250:	sub	rsp, 0x48
0x6254:	mov	ecx, edx
0x6256:	mov	rax, qword ptr fs:[0x28]
0x625f:	mov	qword ptr [rsp + 0x38], rax
0x6264:	xor	eax, eax
0x6266:	mov	rax, qword ptr [rip + 0x203fc3]
0x626d:	mov	r8, rsp
0x6270:	and	ecx, 0x1f
0x6273:	movdqa	xmm0, xmmword ptr [rip + 0x203f85]
0x627b:	mov	qword ptr [rsp + 0x30], rax
0x6280:	mov	eax, edx
0x6282:	movaps	xmmword ptr [rsp], xmm0
0x6286:	shr	al, 5
0x6289:	movzx	eax, al
0x628c:	lea	r9, [r8 + rax*4 + 8]
0x6291:	movdqa	xmm0, xmmword ptr [rip + 0x203f77]
0x6299:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x629e:	movdqa	xmm0, xmmword ptr [rip + 0x203f7a]
0x62a6:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x62ab:	mov	edx, dword ptr [r9]
0x62ae:	mov	eax, edx
0x62b0:	shr	eax, cl
0x62b2:	not	eax
0x62b4:	and	eax, 1
0x62b7:	shl	eax, cl
0x62b9:	mov	rcx, r8
0x62bc:	xor	eax, edx
0x62be:	mov	rdx, rsi
0x62c1:	mov	rsi, rdi
0x62c4:	mov	dword ptr [r9], eax
0x62c7:	xor	edi, edi
0x62c9:	call	0x5bc0


0x6240:	mov	rcx, rdx
0x6243:	mov	rdx, rsi
0x6246:	mov	esi, edi
0x6248:	xor	edi, edi
0x624a:	jmp	0x61a0


0x6230:	mov	rdx, rsi
0x6233:	mov	esi, edi
0x6235:	xor	edi, edi
0x6237:	jmp	0x6110


0x61a0:	sub	rsp, 0x48
0x61a4:	mov	rax, rdx
0x61a7:	mov	rdx, rcx
0x61aa:	mov	rcx, qword ptr fs:[0x28]
0x61b3:	mov	qword ptr [rsp + 0x38], rcx
0x61b8:	xor	ecx, ecx
0x61ba:	cmp	esi, 0xa
0x61bd:	je	0x6220


0x6110:	sub	rsp, 0x48
0x6114:	mov	rax, rdx
0x6117:	mov	rdx, qword ptr fs:[0x28]
0x6120:	mov	qword ptr [rsp + 0x38], rdx
0x6125:	xor	edx, edx
0x6127:	cmp	esi, 0xa
0x612a:	je	0x6194


0x60f0:	lea	rcx, [rip + 0x204109]
0x60f7:	mov	rdx, rsi
0x60fa:	mov	rsi, rdi
0x60fd:	xor	edi, edi
0x60ff:	jmp	0x5bc0


0x60d0:	lea	rcx, [rip + 0x204129]
0x60d7:	mov	rsi, rdi
0x60da:	mov	rdx, -1
0x60e1:	xor	edi, edi
0x60e3:	jmp	0x5bc0


0x60c0:	lea	rcx, [rip + 0x204139]
0x60c7:	jmp	0x5bc0


0x60a0:	lea	rcx, [rip + 0x204159]
0x60a7:	mov	rdx, -1
0x60ae:	jmp	0x5bc0


0x6000:	mov	eax, dword ptr [rip + 0x204052]
0x6006:	push	r12
0x6008:	mov	r12, qword ptr [rip + 0x204051]
0x600f:	push	rbp
0x6010:	push	rbx
0x6011:	cmp	eax, 1
0x6014:	jle	0x6041


0x5ff0:	mov	rcx, rdx
0x5ff3:	xor	edx, edx
0x5ff5:	jmp	0x5f00


0x5f00:	push	r15
0x5f02:	push	r14
0x5f04:	lea	rax, [rip + 0x2042f5]
0x5f0b:	push	r13
0x5f0d:	push	r12
0x5f0f:	mov	r12, rdx
0x5f12:	push	rbp
0x5f13:	push	rbx
0x5f14:	mov	rbx, rcx
0x5f17:	mov	r14, rdi
0x5f1a:	mov	r15, rsi
0x5f1d:	sub	rsp, 0x38
0x5f21:	test	rcx, rcx
0x5f24:	cmove	rbx, rax
0x5f28:	xor	ebp, ebp
0x5f2a:	call	0x1880


0x5e80:	push	r15
0x5e82:	push	r14
0x5e84:	lea	rax, [rip + 0x204375]
0x5e8b:	push	r13
0x5e8d:	push	r12
0x5e8f:	mov	r13, rdi
0x5e92:	push	rbp
0x5e93:	push	rbx
0x5e94:	mov	rbx, r8
0x5e97:	mov	r14, rsi
0x5e9a:	mov	r15, rdx
0x5e9d:	sub	rsp, 0x18
0x5ea1:	test	r8, r8
0x5ea4:	cmove	rbx, rax
0x5ea8:	mov	qword ptr [rsp + 8], rcx
0x5ead:	call	0x1880


0x5e50:	lea	rax, [rip + 0x2043a9]
0x5e57:	test	rdi, rdi
0x5e5a:	cmove	rdi, rax
0x5e5e:	test	rsi, rsi
0x5e61:	mov	dword ptr [rdi], 0xa
0x5e67:	je	0x5e77


0x5e30:	lea	rax, [rip + 0x2043c9]
0x5e37:	test	rdi, rdi
0x5e3a:	cmove	rdi, rax
0x5e3e:	mov	eax, dword ptr [rdi + 4]
0x5e41:	mov	dword ptr [rdi + 4], esi
0x5e44:	ret	


0x5df0:	lea	rax, [rip + 0x204409]
0x5df7:	test	rdi, rdi
0x5dfa:	mov	ecx, esi
0x5dfc:	cmove	rdi, rax
0x5e00:	mov	eax, esi
0x5e02:	and	ecx, 0x1f
0x5e05:	shr	al, 5
0x5e08:	movzx	eax, al
0x5e0b:	lea	rdi, [rdi + rax*4 + 8]
0x5e10:	mov	esi, dword ptr [rdi]
0x5e12:	mov	eax, esi
0x5e14:	shr	eax, cl
0x5e16:	xor	edx, eax
0x5e18:	and	eax, 1
0x5e1b:	and	edx, 1
0x5e1e:	shl	edx, cl
0x5e20:	xor	edx, esi
0x5e22:	mov	dword ptr [rdi], edx
0x5e24:	ret	


0x5dd0:	lea	rax, [rip + 0x204429]
0x5dd7:	test	rdi, rdi
0x5dda:	cmove	rdi, rax
0x5dde:	mov	dword ptr [rdi], esi
0x5de0:	ret	


0x5db0:	lea	rax, [rip + 0x204449]
0x5db7:	test	rdi, rdi
0x5dba:	cmove	rdi, rax
0x5dbe:	mov	eax, dword ptr [rdi]
0x5dc0:	ret	


0x5d70:	push	r12
0x5d72:	push	rbp
0x5d73:	push	rbx
0x5d74:	mov	rbx, rdi
0x5d77:	call	0x1880


0x5bc0:	push	r15
0x5bc2:	push	r14
0x5bc4:	movsxd	r15, edi
0x5bc7:	push	r13
0x5bc9:	push	r12
0x5bcb:	mov	r14, rdx
0x5bce:	push	rbp
0x5bcf:	push	rbx
0x5bd0:	mov	rbp, rcx
0x5bd3:	sub	rsp, 0x28
0x5bd7:	mov	qword ptr [rsp + 8], rsi
0x5bdc:	call	0x1880


0x4980:	push	r15
0x4982:	push	r14
0x4984:	mov	r15d, r8d
0x4987:	push	r13
0x4989:	push	r12
0x498b:	mov	r14, rdi
0x498e:	push	rbp
0x498f:	push	rbx
0x4990:	mov	ebx, r9d
0x4993:	mov	r13, rsi
0x4996:	mov	rbp, rcx
0x4999:	and	ebx, 2
0x499c:	sub	rsp, 0xb8
0x49a3:	mov	rax, qword ptr [rsp + 0xf0]
0x49ab:	mov	qword ptr [rsp + 0x10], rdx
0x49b0:	mov	dword ptr [rsp + 8], r8d
0x49b5:	mov	dword ptr [rsp + 0x78], r9d
0x49ba:	mov	qword ptr [rsp + 0x20], rax
0x49bf:	mov	rax, qword ptr [rsp + 0xf8]
0x49c7:	mov	qword ptr [rsp + 0x68], rax
0x49cc:	mov	rax, qword ptr [rsp + 0x100]
0x49d4:	mov	qword ptr [rsp + 0x60], rax
0x49d9:	mov	rax, qword ptr fs:[0x28]
0x49e2:	mov	qword ptr [rsp + 0xa8], rax
0x49ea:	xor	eax, eax
0x49ec:	call	0x1960


0x4890:	push	rbp
0x4891:	push	rbx
0x4892:	mov	rbp, rdi
0x4895:	mov	ebx, esi
0x4897:	sub	rsp, 8
0x489b:	call	0x77d0


0x47f0:	test	rdi, rdi
0x47f3:	push	rbx
0x47f4:	je	0x486d


0x46b0:	push	r14
0x46b2:	push	r13
0x46b4:	mov	r14, r8
0x46b7:	push	r12
0x46b9:	push	rbp
0x46ba:	mov	r12, rdx
0x46bd:	push	rbx
0x46be:	mov	r13, rcx
0x46c1:	sub	rsp, 0xd0
0x46c8:	test	al, al
0x46ca:	mov	rbp, qword ptr [rsp + 0x100]
0x46d2:	je	0x470b


0x4570:	push	r13
0x4572:	push	r12
0x4574:	mov	r13, r8
0x4577:	push	rbp
0x4578:	push	rbx
0x4579:	mov	rbp, rdx
0x457c:	mov	r12, rcx
0x457f:	sub	rsp, 0xe8
0x4586:	test	al, al
0x4588:	je	0x45c4


0x4520:	sub	rsp, 0x20
0x4524:	mov	r9d, 0xffffffff
0x452a:	mov	rax, qword ptr fs:[0x28]
0x4533:	mov	qword ptr [rsp + 0x10], rax
0x4538:	xor	eax, eax
0x453a:	mov	byte ptr [rsp + 0xf], 0
0x453f:	push	r8
0x4541:	xor	r8d, r8d
0x4544:	push	rcx
0x4545:	xor	ecx, ecx
0x4547:	lea	rax, [rsp + 0x1f]
0x454c:	push	rax
0x454d:	call	0x2900


0x2900:	push	r15
0x2902:	push	r14
0x2904:	mov	r10, rsi
0x2907:	push	r13
0x2909:	push	r12
0x290b:	mov	r12, rdi
0x290e:	push	rbp
0x290f:	push	rbx
0x2910:	mov	ebp, r9d
0x2913:	sub	rsp, 0x4b8
0x291a:	mov	r13, qword ptr [rdx + 0x30]
0x291e:	mov	r14d, dword ptr [rdx + 8]
0x2922:	mov	rax, qword ptr [rsp + 0x4f0]
0x292a:	mov	qword ptr [rsp], rdx
0x292e:	mov	dword ptr [rsp + 0x24], r8d
0x2933:	mov	byte ptr [rsp + 0x23], cl
0x2937:	mov	qword ptr [rsp + 0x18], rax
0x293c:	mov	rax, qword ptr [rsp + 0x4f8]
0x2944:	mov	qword ptr [rsp + 0x10], rax
0x2949:	mov	rax, qword ptr fs:[0x28]
0x2952:	mov	qword ptr [rsp + 0x4a8], rax
0x295a:	xor	eax, eax
0x295c:	lea	rax, [rip + 0x5b9e]
0x2963:	test	r13, r13
0x2966:	cmove	r13, rax
0x296a:	cmp	r14d, 0xc
0x296e:	jle	0x2ac8


0x28a0:	test	rdx, rdx
0x28a3:	je	0x28f0


0x2840:	test	rdx, rdx
0x2843:	je	0x2890


0x2790:	push	rbp
0x2791:	push	rbx
0x2792:	sub	rsp, 8
0x2796:	mov	rdi, qword ptr [rip + 0x2078eb]
0x279d:	call	0x76f0


0x2780:	mov	byte ptr [rip + 0x207951], dil
0x2787:	ret	


0x2770:	mov	qword ptr [rip + 0x207969], rdi
0x2777:	ret	


0x2700:	push	rbp
0x2701:	push	rbx
0x2702:	mov	rbp, rdi
0x2705:	mov	rbx, rsi
0x2708:	sub	rsp, 8
0x270c:	mov	rax, qword ptr [rip + 0x2079bd]
0x2713:	test	rax, rax
0x2716:	je	0x2750


0x2360:	push	r13
0x2362:	push	r12
0x2364:	mov	edx, 5
0x2369:	push	rbp
0x236a:	push	rbx
0x236b:	mov	ebp, edi
0x236d:	sub	rsp, 0x88
0x2374:	mov	rbx, qword ptr [rip + 0x207d6d]
0x237b:	mov	rax, qword ptr fs:[0x28]
0x2384:	mov	qword ptr [rsp + 0x78], rax
0x2389:	xor	eax, eax
0x238b:	test	edi, edi
0x238d:	je	0x23bd


0x22d0:	push	rbx
0x22d1:	mov	ecx, esi
0x22d3:	mov	rbx, rdi
0x22d6:	sub	rsp, 0x20
0x22da:	lea	rdx, [rsp + 0x10]
0x22df:	lea	rsi, [rsp + 8]
0x22e4:	mov	qword ptr [rsp + 0x10], 0
0x22ed:	mov	rax, qword ptr fs:[0x28]
0x22f6:	mov	qword ptr [rsp + 0x18], rax
0x22fb:	xor	eax, eax
0x22fd:	call	0x6fe0


0x1e90:	push	r15
0x1e92:	push	r14
0x1e94:	push	r13
0x1e96:	push	r12
0x1e98:	mov	r12, rdi
0x1e9b:	push	rbp
0x1e9c:	push	rbx
0x1e9d:	lea	rdi, [rip + 0x5a20]
0x1ea4:	mov	rbx, rsi
0x1ea7:	lea	rsi, [rip + 0x5ab7]
0x1eae:	lea	rbp, [r12 - 1]
0x1eb3:	sub	rsp, 0x2058
0x1eba:	mov	rax, qword ptr fs:[0x28]
0x1ec3:	mov	qword ptr [rsp + 0x2048], rax
0x1ecb:	xor	eax, eax
0x1ecd:	call	0x1ba0


0x1e80:	push	rbp
0x1e81:	mov	rbp, rsp
0x1e84:	pop	rbp
0x1e85:	jmp	0x1df0


0x1e40:	cmp	byte ptr [rip + 0x208281], 0
0x1e47:	jne	0x1e78


0x1df0:	lea	rdi, [rip + 0x208289]
0x1df7:	lea	rsi, [rip + 0x208282]
0x1dfe:	push	rbp
0x1dff:	sub	rsi, rdi
0x1e02:	mov	rbp, rsp
0x1e05:	sar	rsi, 3
0x1e09:	mov	rax, rsi
0x1e0c:	shr	rax, 0x3f
0x1e10:	add	rsi, rax
0x1e13:	sar	rsi, 1
0x1e16:	je	0x1e30


0x1db0:	lea	rdi, [rip + 0x2082c9]
0x1db7:	push	rbp
0x1db8:	lea	rax, [rip + 0x2082c1]
0x1dbf:	cmp	rax, rdi
0x1dc2:	mov	rbp, rsp
0x1dc5:	je	0x1de0


0x1d80:	xor	ebp, ebp
0x1d82:	mov	r9, rdx
0x1d85:	pop	rsi
0x1d86:	mov	rdx, rsp
0x1d89:	and	rsp, 0xfffffffffffffff0
0x1d8d:	push	rax
0x1d8e:	push	rsp
0x1d8f:	lea	r8, [rip + 0x5aea]
0x1d96:	lea	rcx, [rip + 0x5a73]
0x1d9d:	lea	rdi, [rip - 0x144]
0x1da4:	call	qword ptr [rip + 0x208236]


0x1c60:	push	rbp
0x1c61:	push	rbx
0x1c62:	mov	ebx, edi
0x1c64:	mov	rbp, rsi
0x1c67:	sub	rsp, 8
0x1c6b:	mov	rdi, qword ptr [rsi]
0x1c6e:	call	0x47f0


0x17f8:	sub	rsp, 8
0x17fc:	mov	rax, qword ptr [rip + 0x2087e5]
0x1803:	test	rax, rax
0x1806:	je	0x180a


0x1bd0:	jmp	qword ptr [rip + 0x2083c2]


0x1af0:	jmp	qword ptr [rip + 0x208432]


0x1b30:	jmp	qword ptr [rip + 0x208412]


0x18d0:	jmp	qword ptr [rip + 0x208542]


0x76c0:	mov	rdi, rsi
0x76c3:	call	0x1b50


0x75c4:	mov	rbp, rdi
0x75c7:	call	0x7400


0x7570:	add	rsp, 8
0x7574:	mov	rdi, rbp
0x7577:	mov	rsi, rdx
0x757a:	pop	rbx
0x757b:	pop	rbp
0x757c:	pop	r12
0x757e:	pop	r13
0x7580:	jmp	0x19e0


0x7502:	mov	r13, rdx
0x7505:	mov	rbx, rdi
0x7508:	call	0x7400


0x74eb:	ret	


0x74e6:	jmp	0x71a0


0x1840:	jmp	qword ptr [rip + 0x20858a]


0x7370:	add	rsp, 8
0x7374:	pop	rbx
0x7375:	pop	rbp
0x7376:	pop	r12
0x7378:	pop	r13
0x737a:	pop	r14
0x737c:	pop	r15
0x737e:	ret	


0x72e0:	cmp	rsi, rbp
0x72e3:	mov	r12, rdi
0x72e6:	mov	r13, rsi
0x72e9:	ja	0x72f4


0x7298:	mov	edi, 0x80
0x729d:	call	0x1ad0


0x7239:	mov	r12, rdi
0x723c:	call	0x1970


0x1880:	jmp	qword ptr [rip + 0x20856a]


0x71c8:	ret	


0x71a5:	push	rbx
0x71a6:	nop	word ptr cs:[rax + rax]
0x71b0:	mov	rbx, qword ptr [rdi]
0x71b3:	call	0x1850


0x7190:	lea	rdi, [rip + 0x1689]
0x7197:	jmp	0x1bc0


0x7175:	mov	rsi, rdi
0x7178:	lea	rdi, [rip + 0x16a1]
0x717f:	mov	edx, 1
0x7184:	jmp	0x18e0


0x1830:	jmp	qword ptr [rip + 0x208592]


0x19a0:	jmp	qword ptr [rip + 0x2084da]


0x6ea0:	mov	rax, qword ptr [rdi + 0x20]
0x6ea4:	cmp	qword ptr [rdi + 0x28], rax
0x6ea8:	jne	0x6e9a


0x6e9a:	jmp	0x1b90


0x6e6a:	mov	rdi, rbx
0x6e6d:	pop	rbx
0x6e6e:	jmp	0x1ae0


0x6e59:	call	0x1b10


0x1ab0:	jmp	qword ptr [rip + 0x208452]


0x1950:	jmp	qword ptr [rip + 0x208502]


0x1970:	jmp	qword ptr [rip + 0x2084f2]


0x6d39:	call	0x6d90


0x6d22:	movzx	edx, dl
0x6d25:	test	rdx, rdx
0x6d28:	jne	0x6d39


0x6cd0:	test	rax, rax
0x6cd3:	mov	edx, 0x80
0x6cd8:	cmove	rax, rdx
0x6cdc:	test	rax, rax
0x6cdf:	jns	0x6cc2


0x6ca8:	movabs	rdx, 0x5555555555555553
0x6cb2:	cmp	rax, rdx
0x6cb5:	ja	0x6ce1


0x6c50:	test	rcx, rcx
0x6c53:	je	0x6c78


0x6c1b:	xor	edx, edx
0x6c1d:	movabs	rax, 0x5555555555555554
0x6c27:	div	r9
0x6c2a:	cmp	rax, rcx
0x6c2d:	jbe	0x6c6b


0x6bfb:	sub	rsp, 8
0x6bff:	call	0x6d90


0x6bf1:	movzx	eax, al
0x6bf4:	test	rax, rax
0x6bf7:	jne	0x6bfb


0x6ba9:	test	rdi, rdi
0x6bac:	jne	0x6bc8


0x6bae:	mov	rsi, rbx
0x6bb1:	call	0x1b20


0x6b7b:	sub	rsp, 8
0x6b7f:	call	0x6d90


0x6b71:	movzx	eax, al
0x6b74:	test	rax, rax
0x6b77:	jne	0x6b7b


0x1ad0:	jmp	qword ptr [rip + 0x208442]


0x6a56:	mov	eax, r10d
0x6a59:	mov	r11d, 1
0x6a5f:	add	r10d, 8
0x6a63:	add	rax, rbp
0x6a66:	mov	rax, qword ptr [rax]
0x6a69:	test	rax, rax
0x6a6c:	mov	qword ptr [r8 + r9*8], rax
0x6a70:	je	0x6a7c


0x6aac:	mov	rax, rbx
0x6aaf:	add	rbx, 8
0x6ab3:	jmp	0x6a66


0x6988:	mov	r11d, eax
0x698b:	add	r11, qword ptr [r10 + 0x10]
0x698f:	add	eax, 8
0x6992:	mov	dword ptr [r10], eax
0x6995:	mov	rax, qword ptr [r11]
0x6998:	test	rax, rax
0x699b:	mov	qword ptr [r8 + r9*8], rax
0x699f:	je	0x69ab


0x69ca:	mov	r11, qword ptr [r10 + 8]
0x69ce:	lea	rax, [r11 + 8]
0x69d2:	mov	qword ptr [r10 + 8], rax
0x69d6:	jmp	0x6995


0x695b:	jmp	0x6520


0x6658:	mov	r8, rcx
0x665b:	mov	rcx, rdx
0x665e:	lea	rdx, [rip + 0x1e4f]
0x6665:	mov	esi, 1
0x666a:	xor	eax, eax
0x666c:	call	0x1c00


0x6540:	mov	r8, rdx
0x6543:	lea	rdx, [rip + 0x1f5e]
0x654a:	mov	r9, rcx
0x654d:	xor	eax, eax
0x654f:	mov	rcx, rsi
0x6552:	mov	esi, 1
0x6557:	call	0x1c00


0x6447:	call	0x1870


0x6415:	test	rdx, rdx
0x6418:	je	0x6447


0x63b4:	call	0x1870


0x634c:	mov	dword ptr [rsp], esi
0x634f:	mov	rcx, rsp
0x6352:	mov	rdx, -1
0x6359:	mov	rsi, rax
0x635c:	mov	qword ptr [rsp + 4], 0
0x6365:	mov	qword ptr [rsp + 0xc], 0x4000000
0x636e:	mov	qword ptr [rsp + 0x14], 0
0x6377:	mov	qword ptr [rsp + 0x1c], 0
0x6380:	mov	qword ptr [rsp + 0x24], 0
0x6389:	mov	qword ptr [rsp + 0x2c], 0
0x6392:	mov	dword ptr [rsp + 0x34], 0
0x639a:	call	0x5bc0


0x6220:	call	0x1870


0x61bf:	mov	dword ptr [rsp], esi
0x61c2:	mov	rcx, rsp
0x61c5:	mov	rsi, rax
0x61c8:	mov	qword ptr [rsp + 4], 0
0x61d1:	mov	qword ptr [rsp + 0xc], 0
0x61da:	mov	qword ptr [rsp + 0x14], 0
0x61e3:	mov	qword ptr [rsp + 0x1c], 0
0x61ec:	mov	qword ptr [rsp + 0x24], 0
0x61f5:	mov	qword ptr [rsp + 0x2c], 0
0x61fe:	mov	dword ptr [rsp + 0x34], 0
0x6206:	call	0x5bc0


0x6194:	call	0x1870


0x612c:	mov	dword ptr [rsp], esi
0x612f:	mov	rcx, rsp
0x6132:	mov	rdx, -1
0x6139:	mov	rsi, rax
0x613c:	mov	qword ptr [rsp + 4], 0
0x6145:	mov	qword ptr [rsp + 0xc], 0
0x614e:	mov	qword ptr [rsp + 0x14], 0
0x6157:	mov	qword ptr [rsp + 0x1c], 0
0x6160:	mov	qword ptr [rsp + 0x24], 0
0x6169:	mov	qword ptr [rsp + 0x2c], 0
0x6172:	mov	dword ptr [rsp + 0x34], 0
0x617a:	call	0x5bc0


0x6041:	mov	rdi, qword ptr [r12 + 8]
0x6046:	lea	rbx, [rip + 0x2040b3]
0x604d:	cmp	rdi, rbx
0x6050:	je	0x6069


0x6016:	sub	eax, 2
0x6019:	lea	rbx, [r12 + 0x18]
0x601e:	shl	rax, 4
0x6022:	lea	rbp, [r12 + rax + 0x28]
0x6027:	nop	word ptr [rax + rax]
0x6030:	mov	rdi, qword ptr [rbx]
0x6033:	add	rbx, 0x10
0x6037:	call	0x1850


0x5e77:	sub	rsp, 8
0x5e7b:	call	0x1870


0x5e69:	test	rdx, rdx
0x5e6c:	je	0x5e77


0x1960:	jmp	qword ptr [rip + 0x2084fa]


0x486d:	mov	rcx, qword ptr [rip + 0x20584c]
0x4874:	lea	rdi, [rip + 0x3715]
0x487b:	mov	edx, 0x37
0x4880:	mov	esi, 1
0x4885:	call	0x1bf0


0x47f6:	mov	esi, 0x2f
0x47fb:	mov	rbx, rdi
0x47fe:	call	0x19d0


0x470b:	mov	rax, qword ptr fs:[0x28]
0x4714:	mov	qword ptr [rsp + 0x18], rax
0x4719:	xor	eax, eax
0x471b:	lea	rdx, [rip + 0x3ddf]
0x4722:	lea	rax, [rip + 0x3857]
0x4729:	test	r9b, r9b
0x472c:	lea	rcx, [rip + 0x2053cd]
0x4733:	cmove	rdx, rax
0x4737:	xor	r8d, r8d
0x473a:	mov	ebx, dword ptr [rip + 0x205960]
0x4740:	mov	dword ptr [rip + 0x205956], 1
0x474a:	call	0x1990


0x46d4:	movaps	xmmword ptr [rsp + 0x50], xmm0
0x46d9:	movaps	xmmword ptr [rsp + 0x60], xmm1
0x46de:	movaps	xmmword ptr [rsp + 0x70], xmm2
0x46e3:	movaps	xmmword ptr [rsp + 0x80], xmm3
0x46eb:	movaps	xmmword ptr [rsp + 0x90], xmm4
0x46f3:	movaps	xmmword ptr [rsp + 0xa0], xmm5
0x46fb:	movaps	xmmword ptr [rsp + 0xb0], xmm6
0x4703:	movaps	xmmword ptr [rsp + 0xc0], xmm7
0x470b:	mov	rax, qword ptr fs:[0x28]
0x4714:	mov	qword ptr [rsp + 0x18], rax
0x4719:	xor	eax, eax
0x471b:	lea	rdx, [rip + 0x3ddf]
0x4722:	lea	rax, [rip + 0x3857]
0x4729:	test	r9b, r9b
0x472c:	lea	rcx, [rip + 0x2053cd]
0x4733:	cmove	rdx, rax
0x4737:	xor	r8d, r8d
0x473a:	mov	ebx, dword ptr [rip + 0x205960]
0x4740:	mov	dword ptr [rip + 0x205956], 1
0x474a:	call	0x1990


0x45c4:	mov	rax, qword ptr fs:[0x28]
0x45cd:	mov	qword ptr [rsp + 0x28], rax
0x45d2:	xor	eax, eax
0x45d4:	cmp	edi, 2
0x45d7:	mov	ebx, dword ptr [rip + 0x205ac3]
0x45dd:	mov	dword ptr [rip + 0x205ab9], 0
0x45e7:	je	0x4620


0x458a:	movaps	xmmword ptr [rsp + 0x60], xmm0
0x458f:	movaps	xmmword ptr [rsp + 0x70], xmm1
0x4594:	movaps	xmmword ptr [rsp + 0x80], xmm2
0x459c:	movaps	xmmword ptr [rsp + 0x90], xmm3
0x45a4:	movaps	xmmword ptr [rsp + 0xa0], xmm4
0x45ac:	movaps	xmmword ptr [rsp + 0xb0], xmm5
0x45b4:	movaps	xmmword ptr [rsp + 0xc0], xmm6
0x45bc:	movaps	xmmword ptr [rsp + 0xd0], xmm7
0x45c4:	mov	rax, qword ptr fs:[0x28]
0x45cd:	mov	qword ptr [rsp + 0x28], rax
0x45d2:	xor	eax, eax
0x45d4:	cmp	edi, 2
0x45d7:	mov	ebx, dword ptr [rip + 0x205ac3]
0x45dd:	mov	dword ptr [rip + 0x205ab9], 0
0x45e7:	je	0x4620


0x2ac8:	test	r14d, r14d
0x2acb:	mov	eax, 0xc
0x2ad0:	cmove	r14d, eax
0x2ad4:	jmp	0x2978


0x2974:	sub	r14d, 0xc
0x2978:	movzx	eax, byte ptr [r10]
0x297c:	xor	r15d, r15d
0x297f:	test	al, al
0x2981:	je	0x29c2


0x28f0:	ret	


0x28a5:	push	r13
0x28a7:	push	r12
0x28a9:	mov	r12, rdi
0x28ac:	push	rbp
0x28ad:	push	rbx
0x28ae:	mov	rbp, rdx
0x28b1:	mov	rbx, rsi
0x28b4:	sub	rsp, 8
0x28b8:	add	rbp, rbx
0x28bb:	call	0x1820


0x2890:	ret	


0x2845:	push	r13
0x2847:	push	r12
0x2849:	mov	r12, rdi
0x284c:	push	rbp
0x284d:	push	rbx
0x284e:	mov	rbp, rdx
0x2851:	mov	rbx, rsi
0x2854:	sub	rsp, 8
0x2858:	add	rbp, rbx
0x285b:	call	0x1c30


0x2750:	lea	rsi, [rip + 0x5606]
0x2757:	xor	edx, edx
0x2759:	mov	edi, 0x1fbf
0x275e:	call	0x19b0


0x2718:	mov	rdx, qword ptr [rip + 0x2079b1]
0x271f:	test	rdx, rdx
0x2722:	je	0x2738


0x23bd:	lea	rsi, [rip + 0x55c0]
0x23c4:	xor	edi, edi
0x23c6:	call	0x1950


0x238f:	lea	rsi, [rip + 0x5722]
0x2396:	xor	edi, edi
0x2398:	call	0x1950


0x1ba0:	jmp	qword ptr [rip + 0x2083da]


0x1e49:	cmp	qword ptr [rip + 0x2081a7], 0
0x1e51:	push	rbp
0x1e52:	mov	rbp, rsp
0x1e55:	je	0x1e63


0x1e78:	ret	


0x1e30:	pop	rbp
0x1e31:	ret	


0x1e18:	mov	rax, qword ptr [rip + 0x2081d1]
0x1e1f:	test	rax, rax
0x1e22:	je	0x1e30


0x1de0:	pop	rbp
0x1de1:	ret	


0x1dc7:	mov	rax, qword ptr [rip + 0x20820a]
0x1dce:	test	rax, rax
0x1dd1:	je	0x1de0




0x180a:	add	rsp, 8
0x180e:	ret	


0x1808:	call	rax










0x1b50:	jmp	qword ptr [rip + 0x208402]


0x19e0:	jmp	qword ptr [rip + 0x2084ba]




0x72eb:	lea	rdx, [rsi + 0x38]
0x72ef:	cmp	rbp, rdx
0x72f2:	jb	0x7370


0x72f4:	cmp	byte ptr [rbp], 0
0x72f8:	lea	rbx, [r12 + 9]
0x72fd:	je	0x7360




0x1850:	jmp	qword ptr [rip + 0x208582]


0x1bc0:	jmp	qword ptr [rip + 0x2083ca]


0x18e0:	jmp	qword ptr [rip + 0x20853a]






0x6eaa:	cmp	qword ptr [rdi + 0x48], 0
0x6eaf:	jne	0x6e9a


0x1b90:	jmp	qword ptr [rip + 0x2083e2]


0x1ae0:	jmp	qword ptr [rip + 0x20843a]


0x1b10:	jmp	qword ptr [rip + 0x208422]








0x6d2a:	call	0x1a40


0x6ce1:	sub	rsp, 8
0x6ce5:	call	0x6d90


0x6cc2:	mov	qword ptr [rsi], rax
0x6cc5:	mov	rsi, rax
0x6cc8:	jmp	0x6ba0


0x6cb7:	mov	rdx, rax
0x6cba:	shr	rdx, 1
0x6cbd:	lea	rax, [rdx + rax + 1]
0x6cc2:	mov	qword ptr [rsi], rax
0x6cc5:	mov	rsi, rax
0x6cc8:	jmp	0x6ba0


0x6c78:	xor	edx, edx
0x6c7a:	mov	eax, 0x80
0x6c7f:	xor	r8d, r8d
0x6c82:	div	r9
0x6c85:	test	rax, rax
0x6c88:	sete	r8b
0x6c8c:	lea	rcx, [r8 + rax]
0x6c90:	jmp	0x6c55


0x6c55:	mov	rax, rcx
0x6c58:	mul	r9
0x6c5b:	seto	dl
0x6c5e:	test	rax, rax
0x6c61:	movzx	edx, dl
0x6c64:	js	0x6c6b


0x6c6b:	sub	rsp, 8
0x6c6f:	call	0x6d90


0x6c2f:	mov	rax, rcx
0x6c32:	shr	rax, 1
0x6c35:	lea	rcx, [rax + rcx + 1]
0x6c3a:	mov	qword ptr [rsi], rcx
0x6c3d:	imul	rcx, r9
0x6c41:	mov	rsi, rcx
0x6c44:	jmp	0x6ba0


0x6bf9:	jmp	0x6ba0


0x6bc8:	call	0x1850


0x1b20:	jmp	qword ptr [rip + 0x20841a]


0x6b79:	jmp	0x6b40




0x6a7c:	test	r11b, r11b
0x6a7f:	jne	0x6aa5


0x6a72:	add	r9, 1
0x6a76:	cmp	r9, 0xa
0x6a7a:	jne	0x6a50


0x6a66:	mov	rax, qword ptr [rax]
0x6a69:	test	rax, rax
0x6a6c:	mov	qword ptr [r8 + r9*8], rax
0x6a70:	je	0x6a7c


0x69ab:	call	0x6520


0x69a1:	add	r9, 1
0x69a5:	cmp	r9, 0xa
0x69a9:	jne	0x6980


0x6995:	mov	rax, qword ptr [r11]
0x6998:	test	rax, rax
0x699b:	mov	qword ptr [r8 + r9*8], rax
0x699f:	je	0x69ab


0x6950:	add	r9, 1
0x6954:	cmp	qword ptr [r8 + r9*8], 0
0x6959:	jne	0x6950


0x1c00:	jmp	qword ptr [rip + 0x2083aa]


0x1870:	jmp	qword ptr [rip + 0x208572]


0x641a:	mov	qword ptr [rsp + 0x28], rsi
0x641f:	mov	qword ptr [rsp + 0x30], rdx
0x6424:	mov	rcx, rsp
0x6427:	mov	rdx, r8
0x642a:	mov	rsi, r9
0x642d:	call	0x5bc0


0x6069:	lea	rbx, [rip + 0x204000]
0x6070:	cmp	r12, rbx
0x6073:	je	0x6084


0x6052:	call	0x1850


0x5e6e:	mov	qword ptr [rdi + 0x28], rsi
0x5e72:	mov	qword ptr [rdi + 0x30], rdx
0x5e76:	ret	




0x1bf0:	jmp	qword ptr [rip + 0x2083b2]


0x19d0:	jmp	qword ptr [rip + 0x2084c2]


0x1990:	jmp	qword ptr [rip + 0x2084e2]


0x4620:	lea	rcx, [rip + 0x2054d9]
0x4627:	lea	rdx, [rip + 0x3952]
0x462e:	xor	r8d, r8d
0x4631:	mov	qword ptr [rsp + 8], r9
0x4636:	call	0x1990


0x45e9:	mov	rax, qword ptr [rsp + 0x28]
0x45ee:	xor	rax, qword ptr fs:[0x28]
0x45f7:	mov	dword ptr [rip + 0x205aa3], ebx
0x45fd:	mov	dword ptr [rip + 0x205a89], 0
0x4607:	jne	0x46aa


0x2978:	movzx	eax, byte ptr [r10]
0x297c:	xor	r15d, r15d
0x297f:	test	al, al
0x2981:	je	0x29c2


0x29c2:	mov	rdi, qword ptr [rsp + 0x4a8]
0x29ca:	xor	rdi, qword ptr fs:[0x28]
0x29d3:	mov	rax, r15
0x29d6:	jne	0x44f8


0x2983:	cmp	al, 0x25
0x2985:	mov	rbx, r10
0x2988:	mov	dword ptr [rsp + 0x30], r14d
0x298d:	mov	qword ptr [rsp + 0x28], r13
0x2992:	movsxd	r10, ebp
0x2995:	je	0x2a2b


0x1820:	jmp	qword ptr [rip + 0x20859a]


0x1c30:	jmp	qword ptr [rip + 0x208392]


0x19b0:	jmp	qword ptr [rip + 0x2084d2]


0x2738:	test	rbx, rbx
0x273b:	pxor	xmm0, xmm0
0x273f:	je	0x2748


0x2724:	add	rsp, 8
0x2728:	mov	rsi, rbx
0x272b:	mov	rdi, rbp
0x272e:	pop	rbx
0x272f:	pop	rbp
0x2730:	jmp	0x1910




0x1e63:	call	0x1db0


0x1e57:	mov	rdi, qword ptr [rip + 0x2081aa]
0x1e5e:	call	0x1c50


0x1e24:	pop	rbp
0x1e25:	jmp	rax


0x1dd3:	pop	rbp
0x1dd4:	jmp	rax






0x7360:	lea	rbx, [rip + 0x119a]
0x7367:	mov	qword ptr [r13 + 0x30], rbx
0x736b:	mov	eax, 1
0x7370:	add	rsp, 8
0x7374:	pop	rbx
0x7375:	pop	rbp
0x7376:	pop	r12
0x7378:	pop	r13
0x737a:	pop	r14
0x737c:	pop	r15
0x737e:	ret	








0x6eb1:	push	r12
0x6eb3:	push	rbp
0x6eb4:	mov	r12d, edx
0x6eb7:	push	rbx
0x6eb8:	mov	rbp, rsi
0x6ebb:	mov	rbx, rdi
0x6ebe:	call	0x1ab0








0x1a40:	jmp	qword ptr [rip + 0x20848a]


0x6c66:	test	rdx, rdx
0x6c69:	je	0x6c3a




0x6a81:	call	0x6520


0x6aa5:	mov	dword ptr [rsp + 8], r10d
0x6aaa:	jmp	0x6a81


0x6a50:	cmp	r10d, 0x2f
0x6a54:	ja	0x6aac


0x6980:	mov	eax, dword ptr [r10]
0x6983:	cmp	eax, 0x2f
0x6986:	ja	0x69ca






0x6084:	pop	rbx
0x6085:	mov	dword ptr [rip + 0x203fc9], 1
0x608f:	pop	rbp
0x6090:	pop	r12
0x6092:	ret	


0x6075:	mov	rdi, r12
0x6078:	call	0x1850








0x460d:	add	rsp, 0xe8
0x4614:	pop	rbx
0x4615:	pop	rbp
0x4616:	pop	r12
0x4618:	pop	r13
0x461a:	ret	


0x46aa:	call	0x1980


0x29dc:	add	rsp, 0x4b8
0x29e3:	pop	rbx
0x29e4:	pop	rbp
0x29e5:	pop	r12
0x29e7:	pop	r13
0x29e9:	pop	r14
0x29eb:	pop	r15
0x29ed:	ret	


0x44f8:	call	0x1980


0x2a2b:	movzx	eax, byte ptr [rsp + 0x23]
0x2a30:	xor	r14d, r14d
0x2a33:	mov	dword ptr [rsp + 8], 0
0x2a3b:	mov	byte ptr [rsp + 0x34], al
0x2a3f:	mov	eax, 1
0x2a44:	add	rbx, 1
0x2a48:	movsx	r11d, byte ptr [rbx]
0x2a4c:	lea	ecx, [r11 - 0x23]
0x2a50:	mov	r13d, r11d
0x2a53:	mov	edi, r11d
0x2a56:	cmp	cl, 0x3c
0x2a59:	ja	0x2a8f


0x299b:	test	r10d, r10d
0x299e:	mov	r14d, 0
0x29a4:	mov	eax, 1
0x29a9:	cmovns	r14, r10
0x29ad:	test	r14, r14
0x29b0:	cmove	r14, rax
0x29b4:	mov	rax, r15
0x29b7:	not	rax
0x29ba:	cmp	rax, r14
0x29bd:	ja	0x29f0








0x2748:	add	rsp, 8
0x274c:	pop	rbx
0x274d:	pop	rbp
0x274e:	ret	


0x2741:	pxor	xmm0, xmm0
0x2745:	mov	qword ptr [rbx], rbp
0x2748:	add	rsp, 8
0x274c:	pop	rbx
0x274d:	pop	rbp
0x274e:	ret	


0x1910:	jmp	qword ptr [rip + 0x208522]


0x1c50:	jmp	qword ptr [rip + 0x2083a2]


0x1a50:	jmp	qword ptr [rip + 0x208482]




0x6c3a:	mov	qword ptr [rsi], rcx
0x6c3d:	imul	rcx, r9
0x6c41:	mov	rsi, rcx
0x6c44:	jmp	0x6ba0


0x1980:	jmp	qword ptr [rip + 0x2084ea]


0x2a5b:	mov	rdx, rax
0x2a5e:	movabs	rsi, 0x1000000000002500
0x2a68:	shl	rdx, cl
0x2a6b:	test	rdx, rsi
0x2a6e:	jne	0x2af0


0x2a8f:	lea	eax, [r11 - 0x30]
0x2a93:	cmp	eax, 9
0x2a96:	jbe	0x2c20


0x29bf:	xor	r15d, r15d
0x29c2:	mov	rdi, qword ptr [rsp + 0x4a8]
0x29ca:	xor	rdi, qword ptr fs:[0x28]
0x29d3:	mov	rax, r15
0x29d6:	jne	0x44f8


0x29f0:	test	r12, r12
0x29f3:	je	0x2a0a








0x2a74:	test	cl, cl
0x2a76:	je	0x2b00


0x2af0:	mov	dword ptr [rsp + 8], r11d
0x2af5:	jmp	0x2a44


0x2c20:	xor	r10d, r10d
0x2c23:	movsx	r11d, byte ptr [rbx + 1]
0x2c28:	cmp	r10d, 0xccccccc
0x2c2f:	lea	rcx, [rbx + 1]
0x2c33:	mov	r13d, r11d
0x2c36:	lea	eax, [r11 - 0x30]
0x2c3a:	jg	0x2c65


0x2a9c:	cmp	r13b, 0x45
0x2aa0:	je	0x2ae0


0x2a0a:	add	r15, r14
0x2a0d:	mov	rbp, rbx
0x2a10:	movzx	eax, byte ptr [rbp + 1]
0x2a14:	lea	rbx, [rbp + 1]
0x2a18:	mov	r10, -1
0x2a1f:	test	al, al
0x2a21:	je	0x29c2


0x29f5:	cmp	r10d, 1
0x29f9:	jg	0x2be0


0x2b00:	mov	r14d, 1
0x2b06:	jmp	0x2a44


0x2a7c:	movabs	rsi, 0x800000000000000
0x2a86:	test	rdx, rsi
0x2a89:	jne	0x2c10


0x2a44:	add	rbx, 1
0x2a48:	movsx	r11d, byte ptr [rbx]
0x2a4c:	lea	ecx, [r11 - 0x23]
0x2a50:	mov	r13d, r11d
0x2a53:	mov	edi, r11d
0x2a56:	cmp	cl, 0x3c
0x2a59:	ja	0x2a8f


0x2c3c:	movsx	edx, byte ptr [rbx]
0x2c3f:	je	0x2c60


0x2c65:	cmp	eax, 9
0x2c68:	ja	0x2c88


0x2ae0:	movsx	edi, byte ptr [rbx + 1]
0x2ae4:	add	rbx, 1
0x2ae8:	mov	r13d, edi
0x2aeb:	jmp	0x2aab


0x2aa2:	cmp	r13b, 0x4f
0x2aa6:	je	0x2ae0


0x2a23:	cmp	al, 0x25
0x2a25:	jne	0x299b


0x29ff:	movsx	edi, byte ptr [rbx]
0x2a02:	mov	rsi, r12
0x2a05:	call	0x1a10


0x2be0:	lea	r13, [r10 - 1]
0x2be4:	xor	ebp, ebp
0x2be6:	nop	word ptr cs:[rax + rax]
0x2bf0:	mov	rsi, r12
0x2bf3:	mov	edi, 0x20
0x2bf8:	add	rbp, 1
0x2bfc:	call	0x1a10


0x2c10:	mov	byte ptr [rsp + 0x34], 1
0x2c15:	jmp	0x2a44


0x2c60:	cmp	dl, 0x37
0x2c63:	jle	0x2c41


0x2c41:	lea	esi, [r10 + r10*4]
0x2c45:	mov	rbx, rcx
0x2c48:	lea	r10d, [rdx + rsi*2 - 0x30]
0x2c4d:	cmp	eax, 9
0x2c50:	jbe	0x2c23


0x2c6a:	movsx	r11d, byte ptr [rbx + 2]
0x2c6f:	mov	r10d, 0x7fffffff
0x2c75:	add	rbx, 2
0x2c79:	mov	r13d, r11d
0x2c7c:	lea	eax, [r11 - 0x30]
0x2c80:	jmp	0x2c4d


0x2c88:	mov	edi, r11d
0x2c8b:	mov	rbx, rcx
0x2c8e:	mov	r10d, 0x7fffffff
0x2c94:	jmp	0x2a9c


0x2aab:	cmp	r13b, 0x7a
0x2aaf:	ja	0x2b10


0x2aa8:	xor	r11d, r11d
0x2aab:	cmp	r13b, 0x7a
0x2aaf:	ja	0x2b10


0x1a10:	jmp	qword ptr [rip + 0x2084a2]


0x2c23:	movsx	r11d, byte ptr [rbx + 1]
0x2c28:	cmp	r10d, 0xccccccc
0x2c2f:	lea	rcx, [rbx + 1]
0x2c33:	mov	r13d, r11d
0x2c36:	lea	eax, [r11 - 0x30]
0x2c3a:	jg	0x2c65


0x2c52:	mov	edi, r11d
0x2c55:	jmp	0x2a9c


0x2c4d:	cmp	eax, 9
0x2c50:	jbe	0x2c23


0x2ab1:	lea	rsi, [rip + 0x52dc]
0x2ab8:	movzx	eax, r13b
0x2abc:	movsxd	rax, dword ptr [rsi + rax*4]
0x2ac0:	add	rax, rsi
0x2ac3:	jmp	rax


0x2b10:	lea	rax, [rbx - 1]
0x2b14:	mov	r13d, 1
0x2b1a:	mov	rdx, rax
0x2b1d:	lea	rax, [rax - 1]
0x2b21:	add	r13d, 1
0x2b25:	cmp	byte ptr [rax + 1], 0x25
0x2b29:	jne	0x2b1a




0x2b2b:	test	r10d, r10d
0x2b2e:	mov	eax, 0
0x2b33:	movsxd	r13, r13d
0x2b36:	cmovns	eax, r10d
0x2b3a:	mov	qword ptr [rsp + 0x38], rdx
0x2b3f:	mov	r14, r13
0x2b42:	cdqe	
0x2b44:	mov	rdx, r15
0x2b47:	mov	rbp, rbx
0x2b4a:	cmp	rax, r13
0x2b4d:	not	rdx
0x2b50:	cmovae	r14, rax
0x2b54:	cmp	rdx, r14
0x2b57:	jbe	0x29bf


0x2b1a:	mov	rdx, rax
0x2b1d:	lea	rax, [rax - 1]
0x2b21:	add	r13d, 1
0x2b25:	cmp	byte ptr [rax + 1], 0x25
0x2b29:	jne	0x2b1a


0x2b5d:	test	r12, r12
0x2b60:	je	0x2bce


0x2bce:	add	r15, r14
0x2bd1:	jmp	0x2a10


0x2b62:	cmp	r13, rax
0x2b65:	jae	0x2bb3


0x2a10:	movzx	eax, byte ptr [rbp + 1]
0x2a14:	lea	rbx, [rbp + 1]
0x2a18:	mov	r10, -1
0x2a1f:	test	al, al
0x2a21:	je	0x29c2


0x2b67:	mov	eax, dword ptr [rsp + 8]
0x2b6b:	movsxd	rbx, r10d
0x2b6e:	sub	rbx, r13
0x2b71:	cmp	eax, 0x30
0x2b74:	je	0x3da3


0x2bb3:	cmp	byte ptr [rsp + 0x34], 0
0x2bb8:	je	0x3ce8


0x3da3:	test	rbx, rbx
0x3da6:	je	0x2bb3


0x2b7a:	cmp	eax, 0x2b
0x2b7d:	je	0x3da3


0x3ce8:	mov	rdi, qword ptr [rsp + 0x38]
0x3ced:	mov	rcx, r12
0x3cf0:	mov	edx, 1
0x3cf5:	mov	rsi, r13
0x3cf8:	call	0x1bf0


0x2bbe:	mov	rsi, qword ptr [rsp + 0x38]
0x2bc3:	mov	rdx, r13
0x2bc6:	mov	rdi, r12
0x2bc9:	call	0x28a0


0x3dac:	xor	edx, edx
0x3dae:	mov	qword ptr [rsp + 8], rbp
0x3db3:	mov	rbp, rdx
0x3db6:	nop	word ptr cs:[rax + rax]
0x3dc0:	mov	rsi, r12
0x3dc3:	mov	edi, 0x30
0x3dc8:	add	rbp, 1
0x3dcc:	call	0x1a10


0x2b83:	xor	edx, edx
0x2b85:	test	rbx, rbx
0x2b88:	je	0x2bb3


0x2b8a:	mov	qword ptr [rsp + 8], rbp
0x2b8f:	mov	rbp, rdx
0x2b92:	nop	word ptr [rax + rax]
0x2b98:	mov	rsi, r12
0x2b9b:	mov	edi, 0x20
0x2ba0:	add	rbp, 1
0x2ba4:	call	0x1a10


0x1e68:	mov	byte ptr [rip + 0x208259], 1
0x1e6f:	pop	rbp
0x1e70:	ret	


0x4552:	add	rsp, 0x20
0x4556:	mov	rdx, qword ptr [rsp + 8]
0x455b:	xor	rdx, qword ptr fs:[0x28]
0x4564:	jne	0x456b


0x4566:	add	rsp, 0x18
0x456a:	ret	


0x456b:	call	0x1980


0x7841:	test	rbp, rbp
0x7844:	je	0x7866


0x7866:	add	rsp, 8
0x786a:	pop	rbx
0x786b:	pop	rbp
0x786c:	pop	r12
0x786e:	pop	r13
0x7870:	pop	r14
0x7872:	pop	r15
0x7874:	ret	


0x7846:	xor	ebx, ebx
0x7848:	nop	dword ptr [rax + rax]
0x7850:	mov	rdx, r15
0x7853:	mov	rsi, r14
0x7856:	mov	edi, r13d
0x7859:	call	qword ptr [r12 + rbx*8]


0x2ba9:	cmp	rbx, rbp
0x2bac:	jne	0x2b98


0x2bae:	mov	rbp, qword ptr [rsp + 8]
0x2bb3:	cmp	byte ptr [rsp + 0x34], 0
0x2bb8:	je	0x3ce8


0x2b98:	mov	rsi, r12
0x2b9b:	mov	edi, 0x20
0x2ba0:	add	rbp, 1
0x2ba4:	call	0x1a10


0x3dd1:	cmp	rbx, rbp
0x3dd4:	jne	0x3dc0


0x3dd6:	jmp	0x2bae


0x3dc0:	mov	rsi, r12
0x3dc3:	mov	edi, 0x30
0x3dc8:	add	rbp, 1
0x3dcc:	call	0x1a10


0x2c01:	cmp	r13, rbp
0x2c04:	jne	0x2bf0


0x2c06:	jmp	0x29ff


0x2bf0:	mov	rsi, r12
0x2bf3:	mov	edi, 0x20
0x2bf8:	add	rbp, 1
0x2bfc:	call	0x1a10


0x730b:	test	eax, eax
0x730d:	je	0x7367


0x7367:	mov	qword ptr [r13 + 0x30], rbx
0x736b:	mov	eax, 1
0x7370:	add	rsp, 8
0x7374:	pop	rbx
0x7375:	pop	rbp
0x7376:	pop	r12
0x7378:	pop	r13
0x737a:	pop	r14
0x737c:	pop	r15
0x737e:	ret	


0x730f:	cmp	byte ptr [rbx], 0
0x7312:	jne	0x7326


0x7314:	lea	r14, [r12 + 9]
0x7319:	cmp	r14, rbx
0x731c:	jne	0x7380


0x7326:	mov	rdi, rbx
0x7329:	call	0x1970


0x731e:	cmp	byte ptr [r12 + 8], 0
0x7324:	je	0x7380


0x7380:	mov	rdi, rbp
0x7383:	call	0x1970


0x6d2f:	test	rax, rax
0x6d32:	je	0x6d39


0x6d34:	add	rsp, 8
0x6d38:	ret	


0x2763:	mov	qword ptr [rip + 0x207966], rax
0x276a:	jmp	0x2718


0x2860:	mov	r13, rax
0x2863:	nop	dword ptr [rax + rax]
0x2868:	movzx	ecx, byte ptr [rbx]
0x286b:	mov	rax, qword ptr [r13]
0x286f:	mov	rsi, r12
0x2872:	add	rbx, 1
0x2876:	mov	edi, dword ptr [rax + rcx*4]
0x2879:	call	0x1a10


0x287e:	cmp	rbx, rbp
0x2881:	jne	0x2868


0x2883:	add	rsp, 8
0x2887:	pop	rbx
0x2888:	pop	rbp
0x2889:	pop	r12
0x288b:	pop	r13
0x288d:	ret	


0x2868:	movzx	ecx, byte ptr [rbx]
0x286b:	mov	rax, qword ptr [r13]
0x286f:	mov	rsi, r12
0x2872:	add	rbx, 1
0x2876:	mov	edi, dword ptr [rax + rcx*4]
0x2879:	call	0x1a10


0x28c0:	mov	r13, rax
0x28c3:	nop	dword ptr [rax + rax]
0x28c8:	movzx	ecx, byte ptr [rbx]
0x28cb:	mov	rax, qword ptr [r13]
0x28cf:	mov	rsi, r12
0x28d2:	add	rbx, 1
0x28d6:	mov	edi, dword ptr [rax + rcx*4]
0x28d9:	call	0x1a10


0x28de:	cmp	rbx, rbp
0x28e1:	jne	0x28c8


0x28e3:	add	rsp, 8
0x28e7:	pop	rbx
0x28e8:	pop	rbp
0x28e9:	pop	r12
0x28eb:	pop	r13
0x28ed:	ret	


0x28c8:	movzx	ecx, byte ptr [rbx]
0x28cb:	mov	rax, qword ptr [r13]
0x28cf:	mov	rsi, r12
0x28d2:	add	rbx, 1
0x28d6:	mov	edi, dword ptr [rax + rcx*4]
0x28d9:	call	0x1a10


0x463b:	cmp	eax, -1
0x463e:	je	0x45e9


0x4640:	cmp	eax, 0x68
0x4643:	mov	r9, qword ptr [rsp + 8]
0x4648:	je	0x46a0


0x46a0:	xor	edi, edi
0x46a2:	call	r9


0x464a:	cmp	eax, 0x76
0x464d:	jne	0x45e9


0x464f:	lea	rax, [rsp + 0x110]
0x4657:	mov	rdi, qword ptr [rip + 0x205a2a]
0x465e:	lea	r8, [rsp + 0x10]
0x4663:	mov	rcx, r13
0x4666:	mov	rdx, r12
0x4669:	mov	rsi, rbp
0x466c:	mov	qword ptr [rsp + 0x18], rax
0x4671:	lea	rax, [rsp + 0x30]
0x4676:	mov	dword ptr [rsp + 0x10], 0x30
0x467e:	mov	dword ptr [rsp + 0x14], 0x30
0x4686:	mov	qword ptr [rsp + 0x20], rax
0x468b:	call	0x6960


0x474f:	cmp	eax, -1
0x4752:	je	0x47b8


0x47b8:	mov	rax, qword ptr [rsp + 0x18]
0x47bd:	xor	rax, qword ptr fs:[0x28]
0x47c6:	mov	dword ptr [rip + 0x2058d4], ebx
0x47cc:	jne	0x47e6


0x4754:	cmp	eax, 0x68
0x4757:	je	0x47e0


0x47ce:	add	rsp, 0xd0
0x47d5:	pop	rbx
0x47d6:	pop	rbp
0x47d7:	pop	r12
0x47d9:	pop	r13
0x47db:	pop	r14
0x47dd:	ret	


0x47e6:	call	0x1980


0x47e0:	xor	edi, edi
0x47e2:	call	rbp


0x475d:	cmp	eax, 0x76
0x4760:	jne	0x47b0


0x4762:	lea	rax, [rsp + 0x108]
0x476a:	mov	rdi, qword ptr [rip + 0x205917]
0x4771:	mov	r8, rsp
0x4774:	mov	rcx, r14
0x4777:	mov	rdx, r13
0x477a:	mov	rsi, r12
0x477d:	mov	qword ptr [rsp + 8], rax
0x4782:	lea	rax, [rsp + 0x20]
0x4787:	mov	dword ptr [rsp], 0x30
0x478e:	mov	dword ptr [rsp + 4], 0x30
0x4796:	mov	qword ptr [rsp + 0x10], rax
0x479b:	call	0x6960


0x47b0:	mov	edi, dword ptr [rip + 0x205862]
0x47b6:	call	rbp


0x4803:	test	rax, rax
0x4806:	je	0x485d


0x485d:	mov	qword ptr [rip + 0x205884], rbx
0x4864:	mov	qword ptr [rip + 0x20582d], rbx
0x486b:	pop	rbx
0x486c:	ret	


0x4808:	lea	r8, [rax + 1]
0x480c:	mov	rdx, r8
0x480f:	sub	rdx, rbx
0x4812:	cmp	rdx, 6
0x4816:	jle	0x485d


0x4818:	lea	rsi, [rax - 6]
0x481c:	lea	rdi, [rip + 0x37a5]
0x4823:	mov	ecx, 7
0x4828:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4828:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x482a:	seta	dl
0x482d:	sbb	dl, 0
0x4830:	test	dl, dl
0x4832:	jne	0x485d


0x4834:	lea	rdi, [rip + 0x3795]
0x483b:	mov	ecx, 3
0x4840:	mov	rsi, r8
0x4843:	mov	rbx, r8
0x4846:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4846:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4848:	seta	dl
0x484b:	sbb	dl, 0
0x484e:	test	dl, dl
0x4850:	jne	0x485d


0x4852:	lea	rbx, [rax + 4]
0x4856:	mov	qword ptr [rip + 0x205823], rbx
0x485d:	mov	qword ptr [rip + 0x205884], rbx
0x4864:	mov	qword ptr [rip + 0x20582d], rbx
0x486b:	pop	rbx
0x486c:	ret	


0x3cfd:	jmp	0x2bce


0x488a:	call	0x1870


0x655c:	lea	rsi, [rip + 0x1f58]
0x6563:	xor	edi, edi
0x6565:	mov	edx, 5
0x656a:	call	0x1950


0x6671:	jmp	0x655c


0x6bb6:	test	rax, rax
0x6bb9:	jne	0x6bc0


0x6bbb:	test	rbx, rbx
0x6bbe:	jne	0x6bd1


0x6bc0:	pop	rbx
0x6bc1:	ret	


0x6bd1:	call	0x6d90


0x6e5e:	test	eax, eax
0x6e60:	je	0x6e6a


0x6e62:	test	dword ptr [rbx], 0x100
0x6e68:	jne	0x6e78


0x6e78:	mov	rdi, rbx
0x6e7b:	mov	edx, 1
0x6e80:	xor	esi, esi
0x6e82:	call	0x6e90


0x607d:	mov	qword ptr [rip + 0x203fdc], rbx
0x6084:	pop	rbx
0x6085:	mov	dword ptr [rip + 0x203fc9], 1
0x608f:	pop	rbp
0x6090:	pop	r12
0x6092:	ret	


0x6057:	mov	qword ptr [rip + 0x20400e], 0x100
0x6062:	mov	qword ptr [rip + 0x20400f], rbx
0x6069:	lea	rbx, [rip + 0x204000]
0x6070:	cmp	r12, rbx
0x6073:	je	0x6084


0x6bcd:	xor	eax, eax
0x6bcf:	pop	rbx
0x6bd0:	ret	


0x603c:	cmp	rbx, rbp
0x603f:	jne	0x6030


0x6030:	mov	rdi, qword ptr [rbx]
0x6033:	add	rbx, 0x10
0x6037:	call	0x1850


0x71b8:	test	rbx, rbx
0x71bb:	mov	rdi, rbx
0x71be:	jne	0x71b0


0x71c0:	pop	rbx
0x71c1:	ret	


0x71b0:	mov	rbx, qword ptr [rdi]
0x71b3:	call	0x1850


0x76c8:	jmp	0x761e


0x761e:	mov	rcx, qword ptr [rsp + 0x48]
0x7623:	xor	rcx, qword ptr fs:[0x28]
0x762c:	jne	0x76dc


0x7632:	add	rsp, 0x50
0x7636:	pop	rbx
0x7637:	pop	rbp
0x7638:	pop	r12
0x763a:	ret	


0x76dc:	call	0x1980


0x1c73:	lea	rsi, [rip + 0x6887]
0x1c7a:	mov	edi, 6
0x1c7f:	call	0x1b30


0x1ed2:	test	rax, rax
0x1ed5:	je	0x1f00


0x1f00:	xor	r13d, r13d
0x1f03:	test	r12, r12
0x1f06:	je	0x226b


0x1ed7:	lea	r13, [rsp + 0x40]
0x1edc:	mov	rdx, rax
0x1edf:	mov	esi, 0x2000
0x1ee4:	mov	r15, rax
0x1ee7:	mov	rdi, r13
0x1eea:	call	0x1ac0


0x226b:	xor	edi, edi
0x226d:	call	0x1aa0


0x1f0c:	xor	r14d, r14d
0x1f0f:	xor	r12d, r12d
0x1f12:	jmp	0x1f36


0x1ac0:	jmp	qword ptr [rip + 0x20844a]


0x1aa0:	jmp	qword ptr [rip + 0x20845a]


0x1f36:	cmp	byte ptr [rbx + 0x2c], 0
0x1f3a:	movzx	eax, word ptr [rbx]
0x1f3d:	je	0x1f18






0x1f18:	cmp	ax, 2
0x1f1c:	jne	0x1f25


0x1f3f:	cmp	ax, 7
0x1f43:	jne	0x1f18


0x1f1e:	movsxd	r14, dword ptr [rbx + 0x154]
0x1f25:	sub	rbp, 1
0x1f29:	add	rbx, 0x180
0x1f30:	cmp	rbp, -1
0x1f34:	je	0x1f50


0x1f25:	sub	rbp, 1
0x1f29:	add	rbx, 0x180
0x1f30:	cmp	rbp, -1
0x1f34:	je	0x1f50


0x1f45:	add	r12, 1
0x1f49:	jmp	0x1f25


0x1f50:	xor	edi, edi
0x1f52:	call	0x1aa0


0x49f1:	cmp	r15d, 0xa
0x49f5:	mov	qword ptr [rsp + 0x58], rax
0x49fa:	ja	0x5baf


0x4a00:	lea	rcx, [rip + 0x3639]
0x4a07:	mov	edx, r15d
0x4a0a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x4a0e:	add	rax, rcx
0x4a11:	jmp	rax


0x5baf:	call	0x1870


0x72a2:	test	rax, rax
0x72a5:	mov	rbx, rax
0x72a8:	je	0x728b


0x728b:	mov	rax, rbx
0x728e:	pop	rbx
0x728f:	pop	rbp
0x7290:	pop	r12
0x7292:	ret	


0x72aa:	xor	edx, edx
0x72ac:	mov	qword ptr [rbx], 0
0x72b3:	mov	rax, rbx
0x72b6:	mov	word ptr [rbx + 8], dx
0x72ba:	pop	rbx
0x72bb:	pop	rbp
0x72bc:	pop	r12
0x72be:	ret	


0x6b49:	test	rax, rax
0x6b4c:	jne	0x6b53


0x6b4e:	test	rbx, rbx
0x6b51:	jne	0x6b55


0x6b53:	pop	rbx
0x6b54:	ret	


0x6b55:	call	0x6d90


0x7388:	lea	rdx, [rax + 1]
0x738c:	mov	r15, rax
0x738f:	mov	rax, rbx
0x7392:	sub	rax, r14
0x7395:	mov	rcx, rax
0x7398:	not	rcx
0x739b:	cmp	rcx, rdx
0x739e:	jb	0x73d0


0x73d0:	call	0x1880


0x73a0:	add	rax, rdx
0x73a3:	cmp	rax, 0x76
0x73a7:	jbe	0x73e0


0x73e0:	mov	rsi, rbp
0x73e3:	mov	rdi, rbx
0x73e6:	call	0x1a70


0x73a9:	mov	rdi, rbp
0x73ac:	call	0x7230


0x1a70:	jmp	qword ptr [rip + 0x208472]




0x73b1:	mov	rbx, rax
0x73b4:	mov	qword ptr [r12], rax
0x73b8:	xor	eax, eax
0x73ba:	test	rbx, rbx
0x73bd:	je	0x7370


0x73bf:	mov	byte ptr [rbx + 8], 0
0x73c3:	add	rbx, 9
0x73c7:	jmp	0x7367


0x732e:	lea	rbx, [rbx + rax + 1]
0x7333:	cmp	byte ptr [rbx], 0
0x7336:	jne	0x7300


0x7338:	mov	rax, qword ptr [r12]
0x733c:	test	rax, rax
0x733f:	je	0x7300


0x7300:	mov	rsi, rbp
0x7303:	mov	rdi, rbx
0x7306:	call	0x1a50


0x7341:	lea	rbx, [rax + 9]
0x7345:	mov	rsi, rbp
0x7348:	mov	r12, rax
0x734b:	mov	rdi, rbx
0x734e:	call	0x1a50


0x7353:	test	eax, eax
0x7355:	jne	0x730f


0x7357:	jmp	0x7367


0x7241:	lea	rbp, [rax + 1]
0x7245:	mov	edi, 0x76
0x724a:	cmp	rbp, 0x76
0x724e:	cmovae	rdi, rbp
0x7252:	add	rdi, 0x11
0x7256:	and	rdi, 0xfffffffffffffff8
0x725a:	call	0x1ad0


0x725f:	test	rax, rax
0x7262:	mov	rbx, rax
0x7265:	je	0x728b


0x7267:	mov	qword ptr [rax], 0
0x726e:	lea	rdi, [rbx + 9]
0x7272:	mov	eax, 1
0x7277:	mov	word ptr [rbx + 8], ax
0x727b:	mov	rdx, rbp
0x727e:	mov	rsi, r12
0x7281:	call	0x1a70


0x6d79:	mov	rdi, rbx
0x6d7c:	lea	rsi, [rax + 1]
0x6d80:	pop	rbx
0x6d81:	jmp	0x6d40


0x656f:	lea	rdx, [rip + 0x226a]
0x6576:	mov	rcx, rax
0x6579:	mov	r8d, 0x7e3
0x657f:	mov	esi, 1
0x6584:	mov	rdi, rbp
0x6587:	xor	eax, eax
0x6589:	call	0x1c00


0x658e:	lea	rsi, [rip + 0x1fb3]
0x6595:	xor	edi, edi
0x6597:	mov	edx, 5
0x659c:	call	0x1950


0x65a1:	mov	rsi, rbp
0x65a4:	mov	rdi, rax
0x65a7:	call	0x1a30


0x1a30:	jmp	qword ptr [rip + 0x208492]




0x239d:	mov	rdi, qword ptr [rip + 0x207d1c]
0x23a4:	mov	rdx, rax
0x23a7:	mov	rcx, rbx
0x23aa:	mov	esi, 1
0x23af:	xor	eax, eax
0x23b1:	call	0x1c00


0x23b6:	mov	edi, ebp
0x23b8:	call	0x1be0


0x1be0:	jmp	qword ptr [rip + 0x2083ba]




0x23cb:	mov	rdx, rbx
0x23ce:	mov	rsi, rax
0x23d1:	mov	edi, 1
0x23d6:	xor	eax, eax
0x23d8:	call	0x1b40


0x1b40:	jmp	qword ptr [rip + 0x20840a]




0x6ad4:	lea	rdx, [rip + 0x1a3c]
0x6adb:	mov	rsi, rax
0x6ade:	mov	edi, 1
0x6ae3:	xor	eax, eax
0x6ae5:	call	0x1b40


0x6da7:	mov	edi, dword ptr [rip + 0x20326b]
0x6dad:	lea	rdx, [rip + 0xfbb]
0x6db4:	mov	rcx, rax
0x6db7:	xor	esi, esi
0x6db9:	xor	eax, eax
0x6dbb:	call	0x1b80


0x1b80:	jmp	qword ptr [rip + 0x2083ea]




0x6ec3:	mov	edx, r12d
0x6ec6:	mov	rsi, rbp
0x6ec9:	mov	edi, eax
0x6ecb:	call	0x19f0


0x19f0:	jmp	qword ptr [rip + 0x2084b2]




0x6ddc:	test	eax, eax
0x6dde:	mov	rdi, rbx
0x6de1:	js	0x6e37


0x6e37:	pop	rbx
0x6e38:	pop	rbp
0x6e39:	pop	r12
0x6e3b:	jmp	0x1920


0x6de3:	call	0x1b10


0x1920:	jmp	qword ptr [rip + 0x20851a]




0x6de8:	test	eax, eax
0x6dea:	jne	0x6e18


0x6dec:	mov	rdi, rbx
0x6def:	call	0x6e50


0x6e18:	mov	rdi, rbx
0x6e1b:	call	0x1ab0


0x6e20:	xor	esi, esi
0x6e22:	mov	edx, 1
0x6e27:	mov	edi, eax
0x6e29:	call	0x19f0


0x6f27:	cmp	rax, -3
0x6f2b:	mov	rbp, rax
0x6f2e:	jbe	0x6f50


0x6f50:	mov	rdx, qword ptr [rsp + 8]
0x6f55:	xor	rdx, qword ptr fs:[0x28]
0x6f5e:	mov	rax, rbp
0x6f61:	jne	0x6f6e


0x6f30:	test	r12, r12
0x6f33:	je	0x6f50


0x6f63:	add	rsp, 0x18
0x6f67:	pop	rbx
0x6f68:	pop	rbp
0x6f69:	pop	r12
0x6f6b:	pop	r13
0x6f6d:	ret	


0x6f6e:	call	0x1980


0x6f35:	xor	edi, edi
0x6f37:	call	0x7770


0x6cf9:	mov	rdx, rbx
0x6cfc:	xor	esi, esi
0x6cfe:	mov	rdi, rax
0x6d01:	pop	rbx
0x6d02:	jmp	0x1a00


0x1a00:	jmp	qword ptr [rip + 0x2084aa]




0x6d54:	add	rsp, 8
0x6d58:	mov	rdx, rbx
0x6d5b:	mov	rsi, rbp
0x6d5e:	pop	rbx
0x6d5f:	pop	rbp
0x6d60:	mov	rdi, rax
0x6d63:	jmp	0x1a70


0x6f93:	lea	rsi, [rbp + 0x2c]
0x6f97:	mov	rbx, rax
0x6f9a:	mov	edx, 0x20
0x6f9f:	mov	rdi, rax
0x6fa2:	call	0x1890


0x1890:	jmp	qword ptr [rip + 0x208562]




0x7011:	call	0x1a60


0x1a60:	jmp	qword ptr [rip + 0x20847a]




0x73d5:	mov	dword ptr [rax], 0xc
0x73db:	xor	eax, eax
0x73dd:	jmp	0x7370


0x5be1:	mov	r13, rax
0x5be4:	mov	eax, dword ptr [rax]
0x5be6:	test	r15d, r15d
0x5be9:	mov	rbx, qword ptr [rip + 0x204470]
0x5bf0:	mov	dword ptr [rsp + 0x18], eax
0x5bf4:	js	0x5d61


0x5d61:	call	0x1870


0x5bfa:	cmp	dword ptr [rip + 0x204457], r15d
0x5c01:	jg	0x5c65


0x5c03:	cmp	r15d, 0x7fffffff
0x5c0a:	je	0x5d66


0x5c65:	mov	eax, dword ptr [rbp + 4]
0x5c68:	shl	r15, 4
0x5c6c:	sub	rsp, 8
0x5c70:	add	rbx, r15
0x5c73:	lea	r15, [rbp + 8]
0x5c77:	mov	r8d, dword ptr [rbp]
0x5c7b:	mov	r11, qword ptr [rbx]
0x5c7e:	mov	r12, qword ptr [rbx + 8]
0x5c82:	mov	rcx, r14
0x5c85:	or	eax, 1
0x5c88:	mov	dword ptr [rsp + 0x24], eax
0x5c8c:	push	qword ptr [rbp + 0x30]
0x5c8f:	mov	r9d, eax
0x5c92:	push	qword ptr [rbp + 0x28]
0x5c95:	push	r15
0x5c97:	mov	rsi, r11
0x5c9a:	mov	rdx, qword ptr [rsp + 0x28]
0x5c9f:	mov	rdi, r12
0x5ca2:	mov	qword ptr [rsp + 0x30], r11
0x5ca7:	call	0x4980


0x5d66:	call	0x6d90


0x5c10:	lea	r12d, [r15 + 1]
0x5c14:	lea	rax, [rip + 0x204455]
0x5c1b:	movsxd	rsi, r12d
0x5c1e:	shl	rsi, 4
0x5c22:	cmp	rbx, rax
0x5c25:	je	0x5d40


0x5d40:	xor	edi, edi
0x5d42:	call	0x6ba0


0x5c2b:	mov	rdi, rbx
0x5c2e:	call	0x6ba0


0x5c33:	mov	rbx, rax
0x5c36:	mov	qword ptr [rip + 0x204423], rax
0x5c3d:	movsxd	rdi, dword ptr [rip + 0x204414]
0x5c44:	mov	edx, r12d
0x5c47:	xor	esi, esi
0x5c49:	sub	edx, edi
0x5c4b:	shl	rdi, 4
0x5c4f:	movsxd	rdx, edx
0x5c52:	add	rdi, rbx
0x5c55:	shl	rdx, 4
0x5c59:	call	0x1a00


0x5d47:	movdqa	xmm0, xmmword ptr [rip + 0x204321]
0x5d4f:	mov	rbx, rax
0x5d52:	mov	qword ptr [rip + 0x204307], rax
0x5d59:	movups	xmmword ptr [rax], xmm0
0x5d5c:	jmp	0x5c3d


0x5c3d:	movsxd	rdi, dword ptr [rip + 0x204414]
0x5c44:	mov	edx, r12d
0x5c47:	xor	esi, esi
0x5c49:	sub	edx, edi
0x5c4b:	shl	rdi, 4
0x5c4f:	movsxd	rdx, edx
0x5c52:	add	rdi, rbx
0x5c55:	shl	rdx, 4
0x5c59:	call	0x1a00


0x5d7c:	mov	r12d, dword ptr [rax]
0x5d7f:	mov	rbp, rax
0x5d82:	lea	rax, [rip + 0x204477]
0x5d89:	test	rbx, rbx
0x5d8c:	mov	esi, 0x38
0x5d91:	cmove	rbx, rax
0x5d95:	mov	rdi, rbx
0x5d98:	call	0x6d40


0x5eb2:	mov	r12d, dword ptr [rax]
0x5eb5:	mov	rbp, rax
0x5eb8:	lea	rax, [rbx + 8]
0x5ebc:	sub	rsp, 8
0x5ec0:	mov	r9d, dword ptr [rbx + 4]
0x5ec4:	push	qword ptr [rbx + 0x30]
0x5ec7:	mov	r8d, dword ptr [rbx]
0x5eca:	push	qword ptr [rbx + 0x28]
0x5ecd:	mov	rdx, r15
0x5ed0:	push	rax
0x5ed1:	mov	rcx, qword ptr [rsp + 0x28]
0x5ed6:	mov	rsi, r14
0x5ed9:	mov	rdi, r13
0x5edc:	call	0x4980


0x5f2f:	test	r12, r12
0x5f32:	mov	r13, rax
0x5f35:	mov	eax, dword ptr [rax]
0x5f37:	sete	bpl
0x5f3b:	or	ebp, dword ptr [rbx + 4]
0x5f3e:	lea	r10, [rbx + 8]
0x5f42:	sub	rsp, 8
0x5f46:	mov	r8d, dword ptr [rbx]
0x5f49:	mov	rcx, r15
0x5f4c:	mov	dword ptr [rsp + 0x14], eax
0x5f50:	push	qword ptr [rbx + 0x30]
0x5f53:	mov	rdx, r14
0x5f56:	push	qword ptr [rbx + 0x28]
0x5f59:	push	r10
0x5f5b:	xor	esi, esi
0x5f5d:	mov	r9d, ebp
0x5f60:	xor	edi, edi
0x5f62:	mov	qword ptr [rsp + 0x40], r10
0x5f67:	call	0x4980


0x71e2:	cmp	byte ptr [rbp + 8], 0
0x71e6:	mov	rbx, rax
0x71e9:	mov	r12d, dword ptr [rax]
0x71ec:	lea	rdi, [rbp + 9]
0x71f0:	jne	0x71f4


0x71f2:	xor	edi, edi
0x71f4:	call	0x7170


0x71f4:	call	0x7170


0x71f9:	test	eax, eax
0x71fb:	je	0x7220


0x7220:	call	0x1a80


0x71fd:	mov	r12d, dword ptr [rbx]
0x7200:	xor	r13d, r13d
0x7203:	mov	rdi, rbp
0x7206:	call	0x71a0


0x1a80:	jmp	qword ptr [rip + 0x20846a]




0x720b:	mov	dword ptr [rbx], r12d
0x720e:	add	rsp, 8
0x7212:	mov	eax, r13d
0x7215:	pop	rbx
0x7216:	pop	rbp
0x7217:	pop	r12
0x7219:	pop	r13
0x721b:	ret	


0x7417:	test	rax, rax
0x741a:	mov	rbx, rax
0x741d:	je	0x74b8


0x74b8:	cmp	byte ptr [rbp + 8], 0
0x74bc:	mov	r12d, 1
0x74c2:	jne	0x7429


0x7423:	cmp	byte ptr [rbp + 8], 0
0x7427:	jne	0x7490


0x74c8:	add	rsp, 0x10
0x74cc:	mov	rax, r12
0x74cf:	pop	rbx
0x74d0:	pop	rbp
0x74d1:	pop	r12
0x74d3:	ret	


0x7429:	mov	rdi, rbx
0x742c:	call	0x7230


0x7490:	lea	rdi, [rbp + 9]
0x7494:	mov	rsi, rax
0x7497:	mov	r12d, 1
0x749d:	call	0x1a50


0x74a2:	test	eax, eax
0x74a4:	jne	0x7429


0x74a6:	add	rsp, 0x10
0x74aa:	mov	rax, r12
0x74ad:	pop	rbx
0x74ae:	pop	rbp
0x74af:	pop	r12
0x74b1:	ret	


0x7431:	test	rax, rax
0x7434:	mov	r12, rax
0x7437:	je	0x747d


0x747d:	add	rsp, 0x10
0x7481:	mov	rax, r12
0x7484:	pop	rbx
0x7485:	pop	rbp
0x7486:	pop	r12
0x7488:	ret	


0x7439:	xor	edi, edi
0x743b:	cmp	byte ptr [rbp + 8], 0
0x743f:	je	0x7445


0x7445:	call	0x7170


0x7441:	lea	rdi, [rbp + 9]
0x7445:	call	0x7170


0x744a:	test	eax, eax
0x744c:	je	0x74d8


0x74d8:	call	0x1a80


0x7452:	call	0x1880


0x7457:	cmp	r12, 1
0x745b:	mov	ebx, dword ptr [rax]
0x745d:	je	0x7478


0x7478:	mov	dword ptr [rax], ebx
0x747a:	xor	r12d, r12d
0x747d:	add	rsp, 0x10
0x7481:	mov	rax, r12
0x7484:	pop	rbx
0x7485:	pop	rbp
0x7486:	pop	r12
0x7488:	ret	


0x745f:	mov	rdi, r12
0x7462:	mov	qword ptr [rsp + 8], rax
0x7467:	call	0x71a0


0x746c:	mov	rax, qword ptr [rsp + 8]
0x7471:	nop	dword ptr [rax]
0x7478:	mov	dword ptr [rax], ebx
0x747a:	xor	r12d, r12d
0x747d:	add	rsp, 0x10
0x7481:	mov	rax, r12
0x7484:	pop	rbx
0x7485:	pop	rbp
0x7486:	pop	r12
0x7488:	ret	


0x750d:	test	rax, rax
0x7510:	mov	r12, rax
0x7513:	je	0x755e


0x755e:	add	rsp, 8
0x7562:	xor	eax, eax
0x7564:	pop	rbx
0x7565:	pop	rbp
0x7566:	pop	r12
0x7568:	pop	r13
0x756a:	ret	


0x7515:	mov	rsi, r13
0x7518:	mov	rdi, rbp
0x751b:	call	0x18b0


0x18b0:	jmp	qword ptr [rip + 0x208552]




0x75cc:	test	rax, rax
0x75cf:	mov	r12, rax
0x75d2:	je	0x76d0


0x76d0:	mov	rax, -1
0x76d7:	jmp	0x761e


0x75d8:	mov	rdi, rbx
0x75db:	call	0x1b00


0x1b00:	jmp	qword ptr [rip + 0x20842a]




0x76fc:	mov	ebx, dword ptr [rbp]
0x76ff:	mov	rdi, rbp
0x7702:	mov	r12, rax
0x7705:	call	0x6dd0


0x1c84:	lea	rsi, [rip + 0x5dd6]
0x1c8b:	lea	rdi, [rip + 0x5da6]
0x1c92:	call	0x1940


0x1940:	jmp	qword ptr [rip + 0x20850a]




0x777b:	mov	rdx, rax
0x777e:	mov	eax, 1
0x7783:	test	rdx, rdx
0x7786:	je	0x77a5


0x77a5:	add	rsp, 8
0x77a9:	ret	


0x7788:	lea	rdi, [rip + 0x5ce]
0x778f:	mov	ecx, 2
0x7794:	mov	rsi, rdx
0x7797:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x7797:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x7799:	seta	cl
0x779c:	sbb	cl, 0
0x779f:	xor	eax, eax
0x77a1:	test	cl, cl
0x77a3:	jne	0x77b0


0x77b0:	lea	rdi, [rip + 0x106c]
0x77b7:	mov	ecx, 6
0x77bc:	mov	rsi, rdx
0x77bf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x77bf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x77c1:	seta	al
0x77c4:	sbb	al, 0
0x77c6:	test	al, al
0x77c8:	setne	al
0x77cb:	add	rsp, 8
0x77cf:	ret	


0x6f3c:	test	al, al
0x6f3e:	jne	0x6f50


0x6f40:	movzx	eax, byte ptr [r13]
0x6f45:	mov	ebp, 1
0x6f4a:	mov	dword ptr [rbx], eax
0x6f4c:	nop	dword ptr [rax]
0x6f50:	mov	rdx, qword ptr [rsp + 8]
0x6f55:	xor	rdx, qword ptr fs:[0x28]
0x6f5e:	mov	rax, rbp
0x6f61:	jne	0x6f6e


0x77de:	test	rax, rax
0x77e1:	je	0x7800


0x7800:	lea	rax, [rip + 0x1022]
0x7807:	add	rsp, 8
0x780b:	ret	


0x77e3:	cmp	byte ptr [rax], 0
0x77e6:	lea	rdx, [rip + 0x103c]
0x77ed:	cmove	rax, rdx
0x77f1:	add	rsp, 8
0x77f5:	ret	


0x48a0:	movzx	edx, byte ptr [rax]
0x48a3:	and	edx, 0xffffffdf
0x48a6:	cmp	dl, 0x55
0x48a9:	je	0x4920


0x4920:	movzx	edx, byte ptr [rax + 1]
0x4924:	and	edx, 0xffffffdf
0x4927:	cmp	dl, 0x54
0x492a:	jne	0x48b0


0x48ab:	cmp	dl, 0x47
0x48ae:	je	0x48d0


0x492c:	movzx	edx, byte ptr [rax + 2]
0x4930:	and	edx, 0xffffffdf
0x4933:	cmp	dl, 0x46
0x4936:	jne	0x48b0


0x48b0:	lea	rax, [rip + 0x372c]
0x48b7:	lea	rdx, [rip + 0x3727]
0x48be:	cmp	ebx, 9
0x48c1:	cmovne	rax, rdx
0x48c5:	add	rsp, 8
0x48c9:	pop	rbx
0x48ca:	pop	rbp
0x48cb:	ret	


0x48d0:	movzx	edx, byte ptr [rax + 1]
0x48d4:	and	edx, 0xffffffdf
0x48d7:	cmp	dl, 0x42
0x48da:	jne	0x48b0


0x493c:	cmp	byte ptr [rax + 3], 0x2d
0x4940:	jne	0x48b0


0x48dc:	cmp	byte ptr [rax + 2], 0x31
0x48e0:	jne	0x48b0


0x4946:	cmp	byte ptr [rax + 4], 0x38
0x494a:	jne	0x48b0


0x48e2:	cmp	byte ptr [rax + 3], 0x38
0x48e6:	jne	0x48b0


0x4950:	cmp	byte ptr [rax + 5], 0
0x4954:	jne	0x48b0


0x48e8:	cmp	byte ptr [rax + 4], 0x30
0x48ec:	jne	0x48b0


0x495a:	cmp	byte ptr [rbp], 0x60
0x495e:	lea	rax, [rip + 0x366f]
0x4965:	lea	rdx, [rip + 0x366c]
0x496c:	cmovne	rax, rdx
0x4970:	add	rsp, 8
0x4974:	pop	rbx
0x4975:	pop	rbp
0x4976:	ret	


0x48ee:	cmp	byte ptr [rax + 5], 0x33
0x48f2:	jne	0x48b0


0x48f4:	cmp	byte ptr [rax + 6], 0x30
0x48f8:	jne	0x48b0


0x48fa:	cmp	byte ptr [rax + 7], 0
0x48fe:	jne	0x48b0


0x4900:	cmp	byte ptr [rbp], 0x60
0x4904:	lea	rax, [rip + 0x36d1]
0x490b:	lea	rdx, [rip + 0x36ce]
0x4912:	cmovne	rax, rdx
0x4916:	add	rsp, 8
0x491a:	pop	rbx
0x491b:	pop	rbp
0x491c:	ret	


0x1c97:	lea	rdi, [rip + 0x5d9a]
0x1c9e:	call	0x18f0


0x18f0:	jmp	qword ptr [rip + 0x208532]




0x75e0:	cmp	rax, -1
0x75e4:	mov	qword ptr [rsp + 8], rax
0x75e9:	je	0x7640


0x7640:	lea	rsi, [rsp + 0x10]
0x7645:	lea	rdi, [rsp + 8]
0x764a:	call	0x18b0


0x75eb:	mov	rsi, rbx
0x75ee:	mov	rdi, rbp
0x75f1:	call	0x72c0


0x75f6:	test	al, al
0x75f8:	jne	0x7603


0x75fa:	mov	qword ptr [rsp + 8], -1
0x7603:	cmp	r12, 1
0x7607:	je	0x7619


0x7603:	cmp	r12, 1
0x7607:	je	0x7619


0x7619:	mov	rax, qword ptr [rsp + 8]
0x761e:	mov	rcx, qword ptr [rsp + 0x48]
0x7623:	xor	rcx, qword ptr fs:[0x28]
0x762c:	jne	0x76dc


0x7609:	mov	rdi, r12
0x760c:	call	0x71d0


0x7611:	test	al, al
0x7613:	je	0x76d0


0x764f:	test	rax, rax
0x7652:	je	0x7603


0x7654:	mov	eax, dword ptr [rbx]
0x7656:	mov	edx, dword ptr [rbx + 4]
0x7659:	xor	eax, dword ptr [rsp + 0x10]
0x765d:	xor	edx, dword ptr [rsp + 0x14]
0x7661:	mov	ecx, dword ptr [rsp + 0x30]
0x7665:	or	eax, edx
0x7667:	mov	edx, dword ptr [rbx + 8]
0x766a:	xor	edx, dword ptr [rsp + 0x18]
0x766e:	or	eax, edx
0x7670:	mov	edx, dword ptr [rbx + 0xc]
0x7673:	xor	edx, dword ptr [rsp + 0x1c]
0x7677:	or	eax, edx
0x7679:	mov	edx, dword ptr [rbx + 0x10]
0x767c:	xor	edx, dword ptr [rsp + 0x20]
0x7680:	or	eax, edx
0x7682:	mov	edx, dword ptr [rbx + 0x14]
0x7685:	xor	edx, dword ptr [rsp + 0x24]
0x7689:	or	eax, edx
0x768b:	mov	edx, dword ptr [rbx + 0x20]
0x768e:	test	edx, edx
0x7690:	sete	dil
0x7694:	test	ecx, ecx
0x7696:	sete	sil
0x769a:	cmp	dil, sil
0x769d:	je	0x76ab


0x76ab:	test	eax, eax
0x76ad:	je	0x75eb


0x769f:	test	edx, edx
0x76a1:	js	0x76ab


0x76b3:	jmp	0x7603


0x76a3:	test	ecx, ecx
0x76a5:	jns	0x7603


0x7520:	test	rax, rax
0x7523:	je	0x7550


0x7550:	cmp	r12, 1
0x7554:	je	0x755e


0x7525:	mov	rsi, r13
0x7528:	mov	rdi, rbx
0x752b:	call	0x72c0


0x7556:	mov	rdi, r12
0x7559:	call	0x71d0


0x7530:	test	al, al
0x7532:	je	0x7550


0x7534:	cmp	r12, 1
0x7538:	jne	0x7585


0x753a:	add	rsp, 8
0x753e:	mov	rax, r13
0x7541:	pop	rbx
0x7542:	pop	rbp
0x7543:	pop	r12
0x7545:	pop	r13
0x7547:	ret	


0x7585:	mov	rdi, r12
0x7588:	call	0x71d0


0x758d:	test	al, al
0x758f:	jne	0x753a


0x7591:	jmp	0x755e


0x74dd:	jmp	0x747d


0x7225:	mov	r13d, 1
0x722b:	jmp	0x7203


0x7203:	mov	rdi, rbp
0x7206:	call	0x71a0


0x5d9d:	mov	dword ptr [rbp], r12d
0x5da1:	pop	rbx
0x5da2:	pop	rbp
0x5da3:	pop	r12
0x5da5:	ret	


0x5c5e:	mov	dword ptr [rip + 0x2043f3], r12d
0x5c65:	mov	eax, dword ptr [rbp + 4]
0x5c68:	shl	r15, 4
0x5c6c:	sub	rsp, 8
0x5c70:	add	rbx, r15
0x5c73:	lea	r15, [rbp + 8]
0x5c77:	mov	r8d, dword ptr [rbp]
0x5c7b:	mov	r11, qword ptr [rbx]
0x5c7e:	mov	r12, qword ptr [rbx + 8]
0x5c82:	mov	rcx, r14
0x5c85:	or	eax, 1
0x5c88:	mov	dword ptr [rsp + 0x24], eax
0x5c8c:	push	qword ptr [rbp + 0x30]
0x5c8f:	mov	r9d, eax
0x5c92:	push	qword ptr [rbp + 0x28]
0x5c95:	push	r15
0x5c97:	mov	rsi, r11
0x5c9a:	mov	rdx, qword ptr [rsp + 0x28]
0x5c9f:	mov	rdi, r12
0x5ca2:	mov	qword ptr [rsp + 0x30], r11
0x5ca7:	call	0x4980


0x7016:	call	0x1b70


0x1b70:	jmp	qword ptr [rip + 0x2083f2]




0x6fa7:	mov	rdi, rbx
0x6faa:	mov	byte ptr [rbx + 0x20], 0
0x6fae:	call	0x1970


0x6fb3:	add	rax, rbx
0x6fb6:	cmp	rbx, rax
0x6fb9:	jae	0x6fc1


0x6fbb:	cmp	byte ptr [rax - 1], 0x20
0x6fbf:	je	0x6fd0


0x6fc1:	add	rsp, 8
0x6fc5:	mov	rax, rbx
0x6fc8:	pop	rbx
0x6fc9:	pop	rbp
0x6fca:	ret	


0x6fd0:	sub	rax, 1
0x6fd4:	mov	byte ptr [rax], 0
0x6fd7:	cmp	rbx, rax
0x6fda:	jne	0x6fbb


0x6fdc:	jmp	0x6fc1


0x6e2e:	cmp	rax, -1
0x6e32:	jne	0x6dec


0x6e34:	mov	rdi, rbx
0x6e37:	pop	rbx
0x6e38:	pop	rbp
0x6e39:	pop	r12
0x6e3b:	jmp	0x1920


0x6ed0:	cmp	rax, -1
0x6ed4:	je	0x6ee2


0x6ee2:	pop	rbx
0x6ee3:	pop	rbp
0x6ee4:	pop	r12
0x6ee6:	ret	


0x6ed6:	and	dword ptr [rbx], 0xffffffef
0x6ed9:	mov	qword ptr [rbx + 0x90], rax
0x6ee0:	xor	eax, eax
0x6ee2:	pop	rbx
0x6ee3:	pop	rbp
0x6ee4:	pop	r12
0x6ee6:	ret	


0x6dc0:	call	0x1870


0x6aea:	lea	rsi, [rip + 0x1a3c]
0x6af1:	mov	edx, 5
0x6af6:	xor	edi, edi
0x6af8:	call	0x1950


0x6afd:	lea	rcx, [rip + 0x119c]
0x6b04:	lea	rdx, [rip + 0xf29]
0x6b0b:	mov	rsi, rax
0x6b0e:	mov	edi, 1
0x6b13:	xor	eax, eax
0x6b15:	call	0x1b40


0x6b1a:	mov	rbx, qword ptr [rip + 0x203567]
0x6b21:	lea	rsi, [rip + 0x1c38]
0x6b28:	xor	edi, edi
0x6b2a:	mov	edx, 5
0x6b2f:	call	0x1950


0x6b34:	mov	rsi, rbx
0x6b37:	mov	rdi, rax
0x6b3a:	pop	rbx
0x6b3b:	jmp	0x1a30


0x23dd:	lea	rsi, [rip + 0x56fc]
0x23e4:	mov	edx, 5
0x23e9:	xor	edi, edi
0x23eb:	call	0x1950


0x23f0:	mov	edi, 1
0x23f5:	mov	rsi, rax
0x23f8:	xor	eax, eax
0x23fa:	call	0x1b40


0x23ff:	lea	rsi, [rip + 0x579a]
0x2406:	mov	edx, 5
0x240b:	xor	edi, edi
0x240d:	call	0x1950


0x2412:	mov	edi, 1
0x2417:	mov	rsi, rax
0x241a:	xor	eax, eax
0x241c:	call	0x1b40


0x2421:	lea	rsi, [rip + 0x57d0]
0x2428:	mov	edx, 5
0x242d:	xor	edi, edi
0x242f:	call	0x1950


0x2434:	lea	rcx, [rip + 0x5567]
0x243b:	lea	rdx, [rip + 0x556e]
0x2442:	mov	rsi, rax
0x2445:	mov	edi, 1
0x244a:	xor	eax, eax
0x244c:	call	0x1b40


0x2451:	mov	rbx, qword ptr [rip + 0x207c30]
0x2458:	lea	rsi, [rip + 0x57d9]
0x245f:	mov	edx, 5
0x2464:	xor	edi, edi
0x2466:	call	0x1950


0x246b:	mov	rsi, rbx
0x246e:	mov	rdi, rax
0x2471:	call	0x1a30


0x2476:	mov	rbx, qword ptr [rip + 0x207c0b]
0x247d:	lea	rsi, [rip + 0x57e4]
0x2484:	mov	edx, 5
0x2489:	xor	edi, edi
0x248b:	call	0x1950


0x2490:	mov	rsi, rbx
0x2493:	mov	rdi, rax
0x2496:	lea	rbx, [rip + 0x556c]
0x249d:	call	0x1a30


0x24a2:	lea	rax, [rip + 0x5515]
0x24a9:	lea	rcx, [rip + 0x554f]
0x24b0:	mov	qword ptr [rsp + 0x40], rbx
0x24b5:	lea	rbx, [rip + 0x540e]
0x24bc:	mov	qword ptr [rsp + 0x60], 0
0x24c5:	mov	qword ptr [rsp + 0x68], 0
0x24ce:	mov	qword ptr [rsp], rax
0x24d2:	lea	rax, [rip + 0x54e7]
0x24d9:	mov	qword ptr [rsp + 0x30], rcx
0x24de:	lea	rcx, [rip + 0x552e]
0x24e5:	mov	rdx, rsp
0x24e8:	mov	qword ptr [rsp + 8], rax
0x24ed:	lea	rax, [rip + 0x5544]
0x24f4:	mov	qword ptr [rsp + 0x50], rcx
0x24f9:	mov	qword ptr [rsp + 0x10], rax
0x24fe:	lea	rax, [rip + 0x54cb]
0x2505:	mov	qword ptr [rsp + 0x18], rax
0x250a:	lea	rax, [rip + 0x54d5]
0x2511:	mov	qword ptr [rsp + 0x20], rax
0x2516:	lea	rax, [rip + 0x54d3]
0x251d:	mov	qword ptr [rsp + 0x28], rax
0x2522:	mov	qword ptr [rsp + 0x38], rax
0x2527:	mov	qword ptr [rsp + 0x48], rax
0x252c:	mov	qword ptr [rsp + 0x58], rax
0x2531:	nop	dword ptr [rax]
0x2538:	add	rdx, 0x10
0x253c:	mov	rdi, qword ptr [rdx]
0x253f:	test	rdi, rdi
0x2542:	je	0x2557


0x2557:	mov	r12, qword ptr [rdx + 8]
0x255b:	xor	edi, edi
0x255d:	mov	edx, 5
0x2562:	lea	rsi, [rip + 0x54b4]
0x2569:	test	r12, r12
0x256c:	je	0x2633


0x2544:	mov	ecx, 7
0x2549:	mov	rsi, rbx
0x254c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2633:	call	0x1950


0x2572:	call	0x1950


0x254c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x254e:	seta	al
0x2551:	sbb	al, 0
0x2553:	test	al, al
0x2555:	jne	0x2538


0x2538:	add	rdx, 0x10
0x253c:	mov	rdi, qword ptr [rdx]
0x253f:	test	rdi, rdi
0x2542:	je	0x2557


0x2577:	lea	rcx, [rip + 0x5722]
0x257e:	lea	rdx, [rip + 0x54af]
0x2585:	mov	rsi, rax
0x2588:	mov	edi, 1
0x258d:	xor	eax, eax
0x258f:	call	0x1b40


0x2594:	xor	esi, esi
0x2596:	mov	edi, 5
0x259b:	call	0x1b30


0x25a0:	test	rax, rax
0x25a3:	je	0x25c1


0x25c1:	lea	rsi, [rip + 0x547e]
0x25c8:	xor	edi, edi
0x25ca:	mov	edx, 5
0x25cf:	call	0x1950


0x25a5:	lea	rsi, [rip + 0x5496]
0x25ac:	mov	edx, 3
0x25b1:	mov	rdi, rax
0x25b4:	call	0x18a0


0x18a0:	jmp	qword ptr [rip + 0x20855a]




0x25d4:	lea	rcx, [rip + 0x52ef]
0x25db:	lea	rdx, [rip + 0x56be]
0x25e2:	mov	rsi, rax
0x25e5:	mov	edi, 1
0x25ea:	xor	eax, eax
0x25ec:	call	0x1b40


0x25f1:	cmp	r12, rbx
0x25f4:	lea	rcx, [rip + 0x53df]
0x25fb:	lea	rbx, [rip + 0x5eff]
0x2602:	cmove	rbx, rcx
0x2606:	lea	rsi, [rip + 0x5703]
0x260d:	xor	edi, edi
0x260f:	mov	edx, 5
0x2614:	call	0x1950


0x2619:	mov	rcx, rbx
0x261c:	mov	rsi, rax
0x261f:	mov	rdx, r12
0x2622:	mov	edi, 1
0x2627:	xor	eax, eax
0x2629:	call	0x1b40


0x262e:	jmp	0x23b6


0x2638:	lea	rcx, [rip + 0x5661]
0x263f:	lea	rdx, [rip + 0x53ee]
0x2646:	mov	rsi, rax
0x2649:	mov	edi, 1
0x264e:	xor	eax, eax
0x2650:	call	0x1b40


0x2655:	xor	esi, esi
0x2657:	mov	edi, 5
0x265c:	call	0x1b30


0x2661:	test	rax, rax
0x2664:	je	0x267e


0x267e:	lea	rsi, [rip + 0x53c1]
0x2685:	mov	edx, 5
0x268a:	xor	edi, edi
0x268c:	lea	r12, [rip + 0x5237]
0x2693:	lea	rbx, [rip + 0x5340]
0x269a:	call	0x1950


0x2666:	lea	rsi, [rip + 0x53d5]
0x266d:	mov	edx, 3
0x2672:	mov	rdi, rax
0x2675:	call	0x18a0


0x269f:	lea	rcx, [rip + 0x5224]
0x26a6:	lea	rdx, [rip + 0x55f3]
0x26ad:	mov	rsi, rax
0x26b0:	mov	edi, 1
0x26b5:	xor	eax, eax
0x26b7:	call	0x1b40


0x26bc:	jmp	0x2606


0x2606:	lea	rsi, [rip + 0x5703]
0x260d:	xor	edi, edi
0x260f:	mov	edx, 5
0x2614:	call	0x1950


0x65ac:	cmp	r12, 9
0x65b0:	ja	0x68f0


0x65b6:	lea	rdx, [rip + 0x21eb]
0x65bd:	movsxd	rax, dword ptr [rdx + r12*4]
0x65c1:	add	rax, rdx
0x65c4:	jmp	rax


0x68f0:	mov	r10, qword ptr [rbx + 0x40]
0x68f4:	mov	r9, qword ptr [rbx + 0x38]
0x68f8:	mov	edx, 5
0x68fd:	mov	rax, qword ptr [rbx + 0x10]
0x6901:	mov	r8, qword ptr [rbx + 8]
0x6905:	lea	rsi, [rip + 0x1e14]
0x690c:	mov	r13, qword ptr [rbx + 0x30]
0x6910:	mov	r12, qword ptr [rbx + 0x28]
0x6914:	mov	r15, qword ptr [rbx + 0x20]
0x6918:	mov	r14, qword ptr [rbx + 0x18]
0x691c:	mov	qword ptr [rsp + 0x18], r10
0x6921:	mov	qword ptr [rsp + 0x10], r9
0x6926:	mov	qword ptr [rsp], rax
0x692a:	mov	qword ptr [rsp + 8], r8
0x692f:	mov	rbx, qword ptr [rbx]
0x6932:	jmp	0x66c2


0x66c2:	xor	edi, edi
0x66c4:	call	0x1950


0x66c9:	mov	r10, qword ptr [rsp + 0x18]
0x66ce:	push	r10
0x66d0:	jmp	0x6614


0x6614:	mov	r9, qword ptr [rsp + 0x18]
0x6619:	mov	rdx, rax
0x661c:	mov	rcx, rbx
0x661f:	mov	esi, 1
0x6624:	mov	rdi, rbp
0x6627:	xor	eax, eax
0x6629:	push	r9
0x662b:	push	r13
0x662d:	push	r12
0x662f:	push	r15
0x6631:	push	r14
0x6633:	mov	r9, qword ptr [rsp + 0x30]
0x6638:	mov	r8, qword ptr [rsp + 0x38]
0x663d:	call	0x1c00


0x6642:	add	rsp, 0x30
0x6646:	add	rsp, 0x28
0x664a:	pop	rbx
0x664b:	pop	rbp
0x664c:	pop	r12
0x664e:	pop	r13
0x6650:	pop	r14
0x6652:	pop	r15
0x6654:	ret	


0x7286:	mov	byte ptr [rbx + rbp + 9], 0
0x728b:	mov	rax, rbx
0x728e:	pop	rbx
0x728f:	pop	rbp
0x7290:	pop	r12
0x7292:	ret	


0x73eb:	mov	byte ptr [rbx + r15 + 1], 0
0x73f1:	jmp	0x7367


0x1f57:	test	r13, r13
0x1f5a:	mov	qword ptr [rsp + 0x18], rax
0x1f5f:	jne	0x1f70


0x1f61:	sub	rax, r14
0x1f64:	test	r14, r14
0x1f67:	mov	r13, rax
0x1f6a:	je	0x2277


0x1f70:	lea	r14, [rsp + 0x18]
0x1f75:	mov	rax, r13
0x1f78:	movabs	rdx, 0x1845c8a0ce512957
0x1f82:	mov	rdi, r14
0x1f85:	imul	rdx
0x1f88:	mov	rax, r13
0x1f8b:	sar	rax, 0x3f
0x1f8f:	sar	rdx, 0xd
0x1f93:	mov	rbx, rdx
0x1f96:	movabs	rdx, 0x48d159e26af37c05
0x1fa0:	sub	rbx, rax
0x1fa3:	imul	rsi, rbx, -0x15180
0x1faa:	add	rsi, r13
0x1fad:	mov	rax, rsi
0x1fb0:	imul	rdx
0x1fb3:	mov	rax, rsi
0x1fb6:	sar	rax, 0x3f
0x1fba:	sar	rdx, 0xa
0x1fbe:	sub	rdx, rax
0x1fc1:	imul	eax, edx, 0xe10
0x1fc7:	mov	rbp, rdx
0x1fca:	movabs	rdx, 0x8888888888888889
0x1fd4:	cdqe	
0x1fd6:	sub	rsi, rax
0x1fd9:	mov	rax, rsi
0x1fdc:	imul	rdx
0x1fdf:	add	rdx, rsi
0x1fe2:	sar	rsi, 0x3f
0x1fe6:	sar	rdx, 5
0x1fea:	sub	rdx, rsi
0x1fed:	mov	r15, rdx
0x1ff0:	call	0x1860


0x2277:	lea	rsi, [rip + 0x5653]
0x227e:	mov	edx, 5
0x2283:	xor	edi, edi
0x2285:	call	0x1950


0x1860:	jmp	qword ptr [rip + 0x20857a]




0x228a:	mov	rbx, rax
0x228d:	call	0x1880


0x2292:	mov	esi, dword ptr [rax]
0x2294:	mov	rdx, rbx
0x2297:	mov	edi, 1
0x229c:	xor	eax, eax
0x229e:	call	0x1b80


0x22a3:	mov	esi, 0xa
0x22a8:	call	0x19c0


0x19c0:	jmp	qword ptr [rip + 0x2084ca]




0x2272:	mov	qword ptr [rsp + 0x18], rax
0x2277:	lea	rsi, [rip + 0x5653]
0x227e:	mov	edx, 5
0x2283:	xor	edi, edi
0x2285:	call	0x1950


0x1eef:	cmp	rax, r13
0x1ef2:	je	0x21fd


0x21fd:	lea	r14, [rsp + 0x18]
0x2202:	mov	rdi, rax
0x2205:	mov	qword ptr [rsp + 8], rax
0x220a:	mov	rsi, r14
0x220d:	call	0x2700


0x1ef8:	mov	rdi, r15
0x1efb:	call	0x6dd0


0x2212:	mov	rax, qword ptr [rsp + 8]
0x2217:	cmp	qword ptr [rsp + 0x18], rax
0x221c:	je	0x22b8


0x22b8:	xor	r13d, r13d
0x22bb:	jmp	0x2243


0x2222:	ucomisd	xmm0, qword ptr [rip + 0x5b1e]
0x222a:	jb	0x22b2


0x2243:	mov	rdi, r15
0x2246:	call	0x6dd0


0x22b2:	or	r13, 0xffffffffffffffff
0x22b6:	jmp	0x2243


0x2230:	movsd	xmm1, qword ptr [rip + 0x5b18]
0x2238:	ucomisd	xmm1, xmm0
0x223c:	jbe	0x22b2


0x223e:	cvttsd2si	r13, xmm0
0x2243:	mov	rdi, r15
0x2246:	call	0x6dd0


0x6e87:	mov	rdi, rbx
0x6e8a:	pop	rbx
0x6e8b:	jmp	0x1ae0


0x6a86:	mov	rax, qword ptr [rsp + 0x78]
0x6a8b:	xor	rax, qword ptr fs:[0x28]
0x6a94:	jne	0x6aa0


0x6a96:	add	rsp, 0xb8
0x6a9d:	pop	rbx
0x6a9e:	pop	rbp
0x6a9f:	ret	


0x6aa0:	call	0x1980


0x69b0:	mov	rax, qword ptr [rsp + 0x58]
0x69b5:	xor	rax, qword ptr fs:[0x28]
0x69be:	jne	0x69c5


0x69c0:	add	rsp, 0x68
0x69c4:	ret	


0x69c5:	call	0x1980


0x47a0:	xor	edi, edi
0x47a2:	call	0x1be0


0x4690:	xor	edi, edi
0x4692:	call	0x1be0


0x22ad:	jmp	0x20c1


0x20c1:	mov	rax, qword ptr [rsp + 0x2048]
0x20c9:	xor	rax, qword ptr fs:[0x28]
0x20d2:	jne	0x22bd


0x20d8:	add	rsp, 0x2058
0x20df:	pop	rbx
0x20e0:	pop	rbp
0x20e1:	pop	r12
0x20e3:	pop	r13
0x20e5:	pop	r14
0x20e7:	pop	r15
0x20e9:	ret	


0x22bd:	call	0x1980


0x1ff5:	test	rax, rax
0x1ff8:	mov	r14, rax
0x1ffb:	mov	edx, 5
0x2000:	je	0x2188


0x2188:	lea	rsi, [rip + 0x5765]
0x218f:	xor	edi, edi
0x2191:	call	0x1950


0x2006:	lea	rsi, [rip + 0x58db]
0x200d:	xor	edi, edi
0x200f:	call	0x1950


0x2014:	mov	rdi, qword ptr [rip + 0x20806d]
0x201b:	xor	r8d, r8d
0x201e:	xor	ecx, ecx
0x2020:	mov	rdx, r14
0x2023:	mov	rsi, rax
0x2026:	call	0x4520


0x202b:	cmp	r13, -1
0x202f:	je	0x21d6


0x21d6:	lea	rsi, [rip + 0x5722]
0x21dd:	xor	edi, edi
0x21df:	mov	edx, 5
0x21e4:	call	0x1950


0x2035:	test	rbx, rbx
0x2038:	jle	0x21aa


0x21aa:	lea	rsi, [rip + 0x5793]
0x21b1:	xor	edi, edi
0x21b3:	mov	edx, 5
0x21b8:	call	0x1950


0x203e:	lea	rdx, [rip + 0x58d0]
0x2045:	lea	rsi, [rip + 0x58e1]
0x204c:	mov	r8d, 5
0x2052:	mov	rcx, rbx
0x2055:	xor	edi, edi
0x2057:	call	0x1bb0


0x1bb0:	jmp	qword ptr [rip + 0x2083d2]




0x21bd:	mov	ecx, r15d
0x21c0:	mov	rsi, rax
0x21c3:	mov	edx, ebp
0x21c5:	mov	edi, 1
0x21ca:	xor	eax, eax
0x21cc:	call	0x1b40


0x21d1:	jmp	0x2073


0x2073:	lea	rdx, [rip + 0x58da]
0x207a:	lea	rsi, [rip + 0x58dd]
0x2081:	mov	r8d, 5
0x2087:	mov	rcx, r12
0x208a:	xor	edi, edi
0x208c:	call	0x1bb0


0x21e9:	mov	edi, 1
0x21ee:	mov	rsi, rax
0x21f1:	xor	eax, eax
0x21f3:	call	0x1b40


0x21f8:	jmp	0x2073


0x2196:	mov	edi, 1
0x219b:	mov	rsi, rax
0x219e:	xor	eax, eax
0x21a0:	call	0x1b40


0x21a5:	jmp	0x202b


0x267a:	test	eax, eax
0x267c:	jne	0x26c1


0x26c1:	lea	r12, [rip + 0x5202]
0x26c8:	mov	r13, qword ptr [rip + 0x2079b9]
0x26cf:	lea	rsi, [rip + 0x55f2]
0x26d6:	xor	edi, edi
0x26d8:	mov	edx, 5
0x26dd:	call	0x1950


0x26e2:	mov	rsi, r13
0x26e5:	mov	rdi, rax
0x26e8:	call	0x1a30


0x26ed:	jmp	0x25c1


0x25b9:	test	eax, eax
0x25bb:	jne	0x26c8


0x26c8:	mov	r13, qword ptr [rip + 0x2079b9]
0x26cf:	lea	rsi, [rip + 0x55f2]
0x26d6:	xor	edi, edi
0x26d8:	mov	edx, 5
0x26dd:	call	0x1950


0x701b:	test	rax, rax
0x701e:	mov	r15, rax
0x7021:	je	0x7091


0x7091:	call	0x1900


0x7023:	cmp	word ptr [r15], 7
0x7028:	jne	0x7035


0x1900:	jmp	qword ptr [rip + 0x20852a]


0x702a:	cmp	byte ptr [r15 + 0x2c], 0
0x702f:	jne	0x70c0


0x7035:	test	r12d, r12d
0x7038:	jne	0x7016




0x70c0:	mov	edi, dword ptr [r15 + 4]
0x70c4:	test	edi, edi
0x70c6:	jle	0x703a


0x703a:	cmp	rbp, rbx
0x703d:	je	0x7100


0x70cc:	test	r13b, r13b
0x70cf:	je	0x703a


0x7100:	test	r14, r14
0x7103:	je	0x7138


0x7043:	lea	rax, [rbx + rbx*2]
0x7047:	mov	rdx, qword ptr [r15]
0x704a:	mov	rsi, r15
0x704d:	add	rbx, 1
0x7051:	shl	rax, 7
0x7055:	add	rax, r14
0x7058:	mov	qword ptr [rax], rdx
0x705b:	lea	rdi, [rax + 8]
0x705f:	mov	rdx, qword ptr [r15 + 0x178]
0x7066:	and	rdi, 0xfffffffffffffff8
0x706a:	mov	qword ptr [rax + 0x178], rdx
0x7071:	sub	rax, rdi
0x7074:	sub	rsi, rax
0x7077:	add	eax, 0x180
0x707c:	shr	eax, 3
0x707f:	mov	ecx, eax
0x7081:	rep movsq	qword ptr [rdi], qword ptr [rsi]


0x70d5:	xor	esi, esi
0x70d7:	call	0x1a90


0x7138:	test	rbp, rbp
0x713b:	mov	eax, 1
0x7140:	mov	edx, 0x180
0x7145:	cmove	rbp, rax
0x7149:	mov	rax, rdx
0x714c:	xor	esi, esi
0x714e:	mul	rbp
0x7151:	jo	0x7162


0x7105:	movabs	rax, 0x38e38e38e38e37
0x710f:	cmp	rbp, rax
0x7112:	ja	0x715d


0x7084:	call	0x1b70


0x7081:	rep movsq	qword ptr [rdi], qword ptr [rsi]


0x1a90:	jmp	qword ptr [rip + 0x208462]


0x7162:	mov	esi, 1
0x7167:	jmp	0x7153


0x7153:	test	rax, rax
0x7156:	js	0x715d


0x7114:	mov	rax, rbp
0x7117:	shr	rax, 1
0x711a:	lea	rbp, [rbp + rax + 1]
0x711f:	lea	rsi, [rbp + rbp*2]
0x7124:	mov	rdi, r14
0x7127:	shl	rsi, 7
0x712b:	call	0x6ba0


0x715d:	call	0x6d90




0x7158:	test	rsi, rsi
0x715b:	je	0x711f


0x711f:	lea	rsi, [rbp + rbp*2]
0x7124:	mov	rdi, r14
0x7127:	shl	rsi, 7
0x712b:	call	0x6ba0


0x7130:	mov	r14, rax
0x7133:	jmp	0x7043


0x7089:	test	rax, rax
0x708c:	mov	r15, rax
0x708f:	jne	0x7023


0x1ca3:	lea	rdi, [rip + 0xae6]
0x1caa:	call	0x7890


0x1caf:	lea	rax, [rip + 0x5dc3]
0x1cb6:	sub	rsp, 8
0x1cba:	mov	r8, qword ptr [rip + 0x20834f]
0x1cc1:	push	0
0x1cc3:	lea	rcx, [rip + 0x5d6a]
0x1cca:	lea	rdx, [rip + 0x5bf9]
0x1cd1:	push	rax
0x1cd2:	lea	rax, [rip + 0x5dac]
0x1cd9:	mov	edi, ebx
0x1cdb:	mov	r9d, 1
0x1ce1:	mov	rsi, rbp
0x1ce4:	push	rax
0x1ce5:	lea	rax, [rip + 0x5da9]
0x1cec:	push	rax
0x1ced:	lea	rax, [rip + 0x66c]
0x1cf4:	push	rax
0x1cf5:	xor	eax, eax
0x1cf7:	call	0x46b0


0x1cfc:	movsxd	rax, dword ptr [rip + 0x20838d]
0x1d03:	add	rsp, 0x30
0x1d07:	sub	ebx, eax
0x1d09:	je	0x1d25


0x1d25:	lea	rdi, [rip + 0x5c84]
0x1d2c:	mov	esi, 1
0x1d31:	call	0x22d0


0x1d0b:	sub	ebx, 1
0x1d0e:	jne	0x1d38


0x1d10:	mov	rdi, qword ptr [rbp + rax*8]
0x1d15:	xor	esi, esi
0x1d17:	call	0x22d0


0x1d38:	mov	rdi, qword ptr [rbp + rax*8 + 8]
0x1d3d:	call	0x6500


0x6df4:	test	eax, eax
0x6df6:	je	0x6e34


0x6df8:	call	0x1880


0x6dfd:	mov	r12d, dword ptr [rax]
0x6e00:	mov	rdi, rbx
0x6e03:	mov	rbp, rax
0x6e06:	call	0x1920


0x6e0b:	test	r12d, r12d
0x6e0e:	jne	0x6e40


0x6e10:	pop	rbx
0x6e11:	pop	rbp
0x6e12:	pop	r12
0x6e14:	ret	


0x6e40:	mov	dword ptr [rbp], r12d
0x6e44:	mov	eax, 0xffffffff
0x6e49:	jmp	0x6e10


0x224b:	test	r12, r12
0x224e:	jne	0x1f0c


0x2254:	xor	edi, edi
0x2256:	call	0x1aa0


0x225b:	test	r13, r13
0x225e:	mov	qword ptr [rsp + 0x18], rax
0x2263:	jne	0x1f75


0x2269:	jmp	0x2277


0x1f75:	mov	rax, r13
0x1f78:	movabs	rdx, 0x1845c8a0ce512957
0x1f82:	mov	rdi, r14
0x1f85:	imul	rdx
0x1f88:	mov	rax, r13
0x1f8b:	sar	rax, 0x3f
0x1f8f:	sar	rdx, 0xd
0x1f93:	mov	rbx, rdx
0x1f96:	movabs	rdx, 0x48d159e26af37c05
0x1fa0:	sub	rbx, rax
0x1fa3:	imul	rsi, rbx, -0x15180
0x1faa:	add	rsi, r13
0x1fad:	mov	rax, rsi
0x1fb0:	imul	rdx
0x1fb3:	mov	rax, rsi
0x1fb6:	sar	rax, 0x3f
0x1fba:	sar	rdx, 0xa
0x1fbe:	sub	rdx, rax
0x1fc1:	imul	eax, edx, 0xe10
0x1fc7:	mov	rbp, rdx
0x1fca:	movabs	rdx, 0x8888888888888889
0x1fd4:	cdqe	
0x1fd6:	sub	rsi, rax
0x1fd9:	mov	rax, rsi
0x1fdc:	imul	rdx
0x1fdf:	add	rdx, rsi
0x1fe2:	sar	rsi, 0x3f
0x1fe6:	sar	rdx, 5
0x1fea:	sub	rdx, rsi
0x1fed:	mov	r15, rdx
0x1ff0:	call	0x1860


0x770a:	and	ebx, 0x20
0x770d:	test	ebx, ebx
0x770f:	jne	0x7728


0x7711:	test	eax, eax
0x7713:	je	0x771f


0x7728:	test	eax, eax
0x772a:	jne	0x7748


0x771f:	pop	rbx
0x7720:	pop	rbp
0x7721:	pop	r12
0x7723:	ret	


0x7715:	test	r12, r12
0x7718:	mov	eax, 0xffffffff
0x771d:	je	0x7758


0x772c:	call	0x1880


0x7748:	pop	rbx
0x7749:	mov	eax, 0xffffffff
0x774e:	pop	rbp
0x774f:	pop	r12
0x7751:	ret	


0x7758:	call	0x1880


0x775d:	cmp	dword ptr [rax], 9
0x7760:	pop	rbx
0x7761:	pop	rbp
0x7762:	pop	r12
0x7764:	setne	al
0x7767:	movzx	eax, al
0x776a:	neg	eax
0x776c:	ret	


0x7731:	mov	dword ptr [rax], 0
0x7737:	mov	eax, 0xffffffff
0x773c:	pop	rbx
0x773d:	pop	rbp
0x773e:	pop	r12
0x7740:	ret	


0x27a2:	test	eax, eax
0x27a4:	je	0x27bc


0x27bc:	mov	rdi, qword ptr [rip + 0x2078fd]
0x27c3:	call	0x76f0


0x27a6:	call	0x1880


0x27ab:	cmp	byte ptr [rip + 0x207926], 0
0x27b2:	mov	rbx, rax
0x27b5:	je	0x27d3


0x27d3:	lea	rsi, [rip + 0x5585]
0x27da:	xor	edi, edi
0x27dc:	mov	edx, 5
0x27e1:	call	0x1950


0x27b7:	cmp	dword ptr [rax], 0x20
0x27ba:	jne	0x27d3


0x27e6:	mov	rdi, qword ptr [rip + 0x2078f3]
0x27ed:	mov	rbp, rax
0x27f0:	test	rdi, rdi
0x27f3:	je	0x281d


0x281d:	mov	esi, dword ptr [rbx]
0x281f:	lea	rdx, [rip + 0x5549]
0x2826:	mov	rcx, rax
0x2829:	xor	edi, edi
0x282b:	xor	eax, eax
0x282d:	call	0x1b80


0x27f5:	call	0x6300


0x2832:	jmp	0x2812


0x2812:	mov	edi, dword ptr [rip + 0x207800]
0x2818:	call	0x18c0


0x18c0:	jmp	qword ptr [rip + 0x20854a]




0x27c8:	test	eax, eax
0x27ca:	jne	0x2812


0x27cc:	add	rsp, 8
0x27d0:	pop	rbx
0x27d1:	pop	rbp
0x27d2:	ret	


0x70dc:	test	eax, eax
0x70de:	jns	0x703a


0x70e4:	call	0x1880


0x70e9:	cmp	dword ptr [rax], 3
0x70ec:	je	0x7016


0x70f2:	cmp	rbp, rbx
0x70f5:	jne	0x7043


0x7096:	mov	rax, qword ptr [rsp]
0x709a:	mov	qword ptr [rax], rbx
0x709d:	mov	rax, qword ptr [rsp + 8]
0x70a2:	mov	qword ptr [rax], r14
0x70a5:	add	rsp, 0x18
0x70a9:	xor	eax, eax
0x70ab:	pop	rbx
0x70ac:	pop	rbp
0x70ad:	pop	r12
0x70af:	pop	r13
0x70b1:	pop	r14
0x70b3:	pop	r15
0x70b5:	ret	


0x2091:	mov	rdx, r12
0x2094:	mov	rsi, rax
0x2097:	mov	edi, 1
0x209c:	xor	eax, eax
0x209e:	call	0x1b40


0x20a3:	lea	rdi, [rsp + 0x20]
0x20a8:	mov	esi, 3
0x20ad:	call	0x1930


0x1930:	jmp	qword ptr [rip + 0x208512]




0x205c:	mov	r8d, r15d
0x205f:	mov	rsi, rax
0x2062:	mov	ecx, ebp
0x2064:	mov	rdx, rbx
0x2067:	mov	edi, 1
0x206c:	xor	eax, eax
0x206e:	call	0x1b40


0x2302:	test	eax, eax
0x2304:	jne	0x232b


0x2306:	mov	rsi, qword ptr [rsp + 0x10]
0x230b:	mov	rdi, qword ptr [rsp + 8]
0x2310:	call	0x1e90


0x232b:	mov	rdx, rbx
0x232e:	mov	esi, 3
0x2333:	xor	edi, edi
0x2335:	call	0x6330


0x2315:	mov	rax, qword ptr [rsp + 0x18]
0x231a:	xor	rax, qword ptr fs:[0x28]
0x2323:	jne	0x235a


0x2325:	add	rsp, 0x20
0x2329:	pop	rbx
0x232a:	ret	


0x235a:	call	0x1980


0x1d1c:	add	rsp, 8
0x1d20:	xor	eax, eax
0x1d22:	pop	rbx
0x1d23:	pop	rbp
0x1d24:	ret	


0x1d36:	jmp	0x1d1c


0x20b2:	cmp	eax, -1
0x20b5:	mov	ebx, eax
0x20b7:	je	0x2163


0x2163:	mov	rdi, qword ptr [rip + 0x207f1e]
0x216a:	mov	rax, qword ptr [rdi + 0x28]
0x216e:	cmp	rax, qword ptr [rdi + 0x30]
0x2172:	jae	0x22a3


0x20bd:	test	eax, eax
0x20bf:	jg	0x20ea


0x2178:	lea	rdx, [rax + 1]
0x217c:	mov	qword ptr [rdi + 0x28], rdx
0x2180:	mov	byte ptr [rax], 0xa
0x2183:	jmp	0x20c1


0x20ea:	movsd	xmm0, qword ptr [rsp + 0x20]
0x20f0:	lea	rsi, [rip + 0x5870]
0x20f7:	xor	edi, edi
0x20f9:	mov	edx, 5
0x20fe:	movsd	qword ptr [rsp + 8], xmm0
0x2104:	call	0x1950


0x2109:	movsd	xmm0, qword ptr [rsp + 8]
0x210f:	mov	rsi, rax
0x2112:	mov	edi, 1
0x2117:	mov	eax, 1
0x211c:	call	0x1b40


0x2121:	cmp	ebx, 1
0x2124:	je	0x2163


0x2126:	movsd	xmm0, qword ptr [rsp + 0x28]
0x212c:	lea	rsi, [rip + 0x584a]
0x2133:	mov	edi, 1
0x2138:	mov	eax, 1
0x213d:	call	0x1b40


0x2142:	cmp	ebx, 2
0x2145:	je	0x2163


0x2147:	movsd	xmm0, qword ptr [rsp + 0x30]
0x214d:	lea	rsi, [rip + 0x5829]
0x2154:	mov	edi, 1
0x2159:	mov	eax, 1
0x215e:	call	0x1b40


0x233a:	mov	rbx, rax
0x233d:	call	0x1880


0x2342:	mov	esi, dword ptr [rax]
0x2344:	lea	rdx, [rip + 0x5a24]
0x234b:	mov	rcx, rbx
0x234e:	mov	edi, 1
0x2353:	xor	eax, eax
0x2355:	call	0x1b80


0x27fa:	mov	esi, dword ptr [rbx]
0x27fc:	lea	rdx, [rip + 0x5568]
0x2803:	mov	rcx, rax
0x2806:	mov	r8, rbp
0x2809:	xor	edi, edi
0x280b:	xor	eax, eax
0x280d:	call	0x1b80


0x1d42:	lea	rsi, [rip + 0x5d5d]
0x1d49:	mov	rbx, rax
0x1d4c:	mov	edx, 5
0x1d51:	xor	edi, edi
0x1d53:	call	0x1950


0x1d58:	xor	edi, edi
0x1d5a:	mov	rdx, rax
0x1d5d:	mov	rcx, rbx
0x1d60:	xor	esi, esi
0x1d62:	xor	eax, eax
0x1d64:	call	0x1b80


0x1d69:	mov	edi, 1
0x1d6e:	call	0x2360


0x5cac:	add	rsp, 0x20
0x5cb0:	mov	r11, qword ptr [rsp + 0x10]
0x5cb5:	cmp	r11, rax
0x5cb8:	ja	0x5d21


0x5cba:	lea	rsi, [rax + 1]
0x5cbe:	lea	rax, [rip + 0x20443b]
0x5cc5:	cmp	r12, rax
0x5cc8:	mov	qword ptr [rbx], rsi
0x5ccb:	je	0x5cdf


0x5d21:	mov	eax, dword ptr [rsp + 0x18]
0x5d25:	mov	dword ptr [r13], eax
0x5d29:	add	rsp, 0x28
0x5d2d:	mov	rax, r12
0x5d30:	pop	rbx
0x5d31:	pop	rbp
0x5d32:	pop	r12
0x5d34:	pop	r13
0x5d36:	pop	r14
0x5d38:	pop	r15
0x5d3a:	ret	


0x5cdf:	mov	rdi, rsi
0x5ce2:	mov	qword ptr [rsp + 0x10], rsi
0x5ce7:	call	0x6b40


0x5ccd:	mov	rdi, r12
0x5cd0:	mov	qword ptr [rsp + 0x10], rsi
0x5cd5:	call	0x1850


0x5cda:	mov	rsi, qword ptr [rsp + 0x10]
0x5cdf:	mov	rdi, rsi
0x5ce2:	mov	qword ptr [rsp + 0x10], rsi
0x5ce7:	call	0x6b40


0x5cec:	sub	rsp, 8
0x5cf0:	mov	qword ptr [rbx + 8], rax
0x5cf4:	mov	r8d, dword ptr [rbp]
0x5cf8:	push	qword ptr [rbp + 0x30]
0x5cfb:	push	qword ptr [rbp + 0x28]
0x5cfe:	mov	rcx, r14
0x5d01:	push	r15
0x5d03:	mov	r9d, dword ptr [rsp + 0x3c]
0x5d08:	mov	rdi, rax
0x5d0b:	mov	rdx, qword ptr [rsp + 0x28]
0x5d10:	mov	rsi, qword ptr [rsp + 0x30]
0x5d15:	mov	r12, rax
0x5d18:	call	0x4980


0x6432:	mov	rdi, qword ptr [rsp + 0x38]
0x6437:	xor	rdi, qword ptr fs:[0x28]
0x6440:	jne	0x644c


0x6442:	add	rsp, 0x48
0x6446:	ret	


0x644c:	call	0x1980


0x617f:	mov	rcx, qword ptr [rsp + 0x38]
0x6184:	xor	rcx, qword ptr fs:[0x28]
0x618d:	jne	0x6199


0x618f:	add	rsp, 0x48
0x6193:	ret	


0x6199:	call	0x1980


0x620b:	mov	rdx, qword ptr [rsp + 0x38]
0x6210:	xor	rdx, qword ptr fs:[0x28]
0x6219:	jne	0x6225


0x621b:	add	rsp, 0x48
0x621f:	ret	


0x6225:	call	0x1980


0x639f:	mov	rcx, qword ptr [rsp + 0x38]
0x63a4:	xor	rcx, qword ptr fs:[0x28]
0x63ad:	jne	0x63b9


0x63af:	add	rsp, 0x48
0x63b3:	ret	


0x63b9:	call	0x1980


0x62ce:	mov	rsi, qword ptr [rsp + 0x38]
0x62d3:	xor	rsi, qword ptr fs:[0x28]
0x62dc:	jne	0x62e3


0x62de:	add	rsp, 0x48
0x62e2:	ret	


0x62e3:	call	0x1980


0x5d1d:	add	rsp, 0x20
0x5d21:	mov	eax, dword ptr [rsp + 0x18]
0x5d25:	mov	dword ptr [r13], eax
0x5d29:	add	rsp, 0x28
0x5d2d:	mov	rax, r12
0x5d30:	pop	rbx
0x5d31:	pop	rbp
0x5d32:	pop	r12
0x5d34:	pop	r13
0x5d36:	pop	r14
0x5d38:	pop	r15
0x5d3a:	ret	


0x5f6c:	lea	rsi, [rax + 1]
0x5f70:	mov	qword ptr [rsp + 0x48], rax
0x5f75:	add	rsp, 0x20
0x5f79:	mov	rdi, rsi
0x5f7c:	mov	qword ptr [rsp + 0x18], rsi
0x5f81:	call	0x6b40


0x5f86:	mov	qword ptr [rsp + 0x10], rax
0x5f8b:	sub	rsp, 8
0x5f8f:	push	qword ptr [rbx + 0x30]
0x5f92:	push	qword ptr [rbx + 0x28]
0x5f95:	mov	r10, qword ptr [rsp + 0x38]
0x5f9a:	mov	r9d, ebp
0x5f9d:	mov	r8d, dword ptr [rbx]
0x5fa0:	mov	rcx, r15
0x5fa3:	mov	rdx, r14
0x5fa6:	mov	rdi, rax
0x5fa9:	push	r10
0x5fab:	mov	rsi, qword ptr [rsp + 0x38]
0x5fb0:	call	0x4980


0x5fb5:	mov	eax, dword ptr [rsp + 0x2c]
0x5fb9:	add	rsp, 0x20
0x5fbd:	test	r12, r12
0x5fc0:	mov	dword ptr [r13], eax
0x5fc4:	je	0x5fcf


0x5fcf:	mov	rax, qword ptr [rsp + 0x10]
0x5fd4:	add	rsp, 0x38
0x5fd8:	pop	rbx
0x5fd9:	pop	rbp
0x5fda:	pop	r12
0x5fdc:	pop	r13
0x5fde:	pop	r14
0x5fe0:	pop	r15
0x5fe2:	ret	


0x5fc6:	mov	r11, qword ptr [rsp + 0x28]
0x5fcb:	mov	qword ptr [r12], r11
0x5fcf:	mov	rax, qword ptr [rsp + 0x10]
0x5fd4:	add	rsp, 0x38
0x5fd8:	pop	rbx
0x5fd9:	pop	rbp
0x5fda:	pop	r12
0x5fdc:	pop	r13
0x5fde:	pop	r14
0x5fe0:	pop	r15
0x5fe2:	ret	


0x5ee1:	mov	dword ptr [rbp], r12d
0x5ee5:	add	rsp, 0x38
0x5ee9:	pop	rbx
0x5eea:	pop	rbp
0x5eeb:	pop	r12
0x5eed:	pop	r13
0x5eef:	pop	r14
0x5ef1:	pop	r15
0x5ef3:	ret	


0x47e4:	jmp	0x47b8


0x46a5:	jmp	0x45e9


0x785d:	add	rbx, 1
0x7861:	cmp	rbp, rbx
0x7864:	jne	0x7850


0x7850:	mov	rdx, r15
0x7853:	mov	rsi, r14
0x7856:	mov	edi, r13d
0x7859:	call	qword ptr [r12 + rbx*8]






0x6760:	mov	r13, qword ptr [rbx + 0x10]
0x6764:	mov	r12, qword ptr [rbx + 8]
0x6768:	lea	rsi, [rip + 0x1d77]
0x676f:	mov	rbx, qword ptr [rbx]
0x6772:	mov	edx, 5
0x6777:	xor	edi, edi
0x6779:	call	0x1950


0x68a0:	mov	r9, qword ptr [rbx + 0x10]
0x68a4:	mov	r13, qword ptr [rbx + 0x30]
0x68a8:	lea	rsi, [rip + 0x1dd9]
0x68af:	mov	r12, qword ptr [rbx + 0x28]
0x68b3:	mov	r15, qword ptr [rbx + 0x20]
0x68b7:	mov	edx, 5
0x68bc:	mov	r14, qword ptr [rbx + 0x18]
0x68c0:	mov	r8, qword ptr [rbx + 8]
0x68c4:	xor	edi, edi
0x68c6:	mov	qword ptr [rsp + 8], r9
0x68cb:	mov	rbx, qword ptr [rbx]
0x68ce:	mov	qword ptr [rsp], r8
0x68d2:	call	0x1950


0x6680:	mov	r10, qword ptr [rbx + 0x40]
0x6684:	mov	r9, qword ptr [rbx + 0x38]
0x6688:	lea	rsi, [rip + 0x2059]
0x668f:	mov	rax, qword ptr [rbx + 0x10]
0x6693:	mov	r8, qword ptr [rbx + 8]
0x6697:	mov	edx, 5
0x669c:	mov	r13, qword ptr [rbx + 0x30]
0x66a0:	mov	r12, qword ptr [rbx + 0x28]
0x66a4:	mov	r15, qword ptr [rbx + 0x20]
0x66a8:	mov	r14, qword ptr [rbx + 0x18]
0x66ac:	mov	rbx, qword ptr [rbx]
0x66af:	mov	qword ptr [rsp + 0x18], r10
0x66b4:	mov	qword ptr [rsp + 0x10], r9
0x66b9:	mov	qword ptr [rsp], rax
0x66bd:	mov	qword ptr [rsp + 8], r8
0x66c2:	xor	edi, edi
0x66c4:	call	0x1950


0x6646:	add	rsp, 0x28
0x664a:	pop	rbx
0x664b:	pop	rbp
0x664c:	pop	r12
0x664e:	pop	r13
0x6650:	pop	r14
0x6652:	pop	r15
0x6654:	ret	


0x6808:	mov	r15, qword ptr [rbx + 0x20]
0x680c:	lea	rsi, [rip + 0x1e25]
0x6813:	mov	edx, 5
0x6818:	xor	edi, edi
0x681a:	mov	r14, qword ptr [rbx + 0x18]
0x681e:	mov	r13, qword ptr [rbx + 0x10]
0x6822:	mov	r12, qword ptr [rbx + 8]
0x6826:	mov	rbx, qword ptr [rbx]
0x6829:	call	0x1950


0x67b0:	lea	rsi, [rip + 0x1e61]
0x67b7:	mov	edx, 5
0x67bc:	xor	edi, edi
0x67be:	mov	r14, qword ptr [rbx + 0x18]
0x67c2:	mov	r13, qword ptr [rbx + 0x10]
0x67c6:	mov	r12, qword ptr [rbx + 8]
0x67ca:	mov	rbx, qword ptr [rbx]
0x67cd:	call	0x1950


0x6718:	mov	r12, qword ptr [rbx + 8]
0x671c:	lea	rsi, [rip + 0x1dac]
0x6723:	mov	rbx, qword ptr [rbx]
0x6726:	mov	edx, 5
0x672b:	xor	edi, edi
0x672d:	call	0x1950


0x65d0:	mov	r9, qword ptr [rbx + 0x38]
0x65d4:	mov	rax, qword ptr [rbx + 0x10]
0x65d8:	lea	rsi, [rip + 0x20d9]
0x65df:	mov	r8, qword ptr [rbx + 8]
0x65e3:	mov	edx, 5
0x65e8:	xor	edi, edi
0x65ea:	mov	r13, qword ptr [rbx + 0x30]
0x65ee:	mov	r12, qword ptr [rbx + 0x28]
0x65f2:	mov	qword ptr [rsp + 0x10], r9
0x65f7:	mov	r15, qword ptr [rbx + 0x20]
0x65fb:	mov	r14, qword ptr [rbx + 0x18]
0x65ff:	mov	qword ptr [rsp], rax
0x6603:	mov	qword ptr [rsp + 8], r8
0x6608:	mov	rbx, qword ptr [rbx]
0x660b:	call	0x1950


0x66d8:	mov	rbx, qword ptr [rbx]
0x66db:	lea	rsi, [rip + 0x1ddd]
0x66e2:	mov	edx, 5
0x66e7:	xor	edi, edi
0x66e9:	call	0x1950


0x6838:	mov	r8, qword ptr [rbx + 8]
0x683c:	mov	r12, qword ptr [rbx + 0x28]
0x6840:	lea	rsi, [rip + 0x1e19]
0x6847:	mov	r15, qword ptr [rbx + 0x20]
0x684b:	mov	r14, qword ptr [rbx + 0x18]
0x684f:	mov	edx, 5
0x6854:	mov	r13, qword ptr [rbx + 0x10]
0x6858:	xor	edi, edi
0x685a:	mov	rbx, qword ptr [rbx]
0x685d:	mov	qword ptr [rsp], r8
0x6861:	call	0x1950


0x6866:	sub	rsp, 8
0x686a:	mov	r9, r13
0x686d:	push	r12
0x686f:	push	r15
0x6871:	push	r14
0x6873:	mov	r8, qword ptr [rsp + 0x20]
0x6878:	mov	rcx, rbx
0x687b:	mov	rdx, rax
0x687e:	mov	rdi, rbp
0x6881:	mov	esi, 1
0x6886:	xor	eax, eax
0x6888:	call	0x1c00


0x688d:	add	rsp, 0x20
0x6891:	add	rsp, 0x28
0x6895:	pop	rbx
0x6896:	pop	rbp
0x6897:	pop	r12
0x6899:	pop	r13
0x689b:	pop	r14
0x689d:	pop	r15
0x689f:	ret	


0x66ee:	add	rsp, 0x28
0x66f2:	mov	rcx, rbx
0x66f5:	mov	rdi, rbp
0x66f8:	pop	rbx
0x66f9:	pop	rbp
0x66fa:	pop	r12
0x66fc:	pop	r13
0x66fe:	pop	r14
0x6700:	pop	r15
0x6702:	mov	rdx, rax
0x6705:	mov	esi, 1
0x670a:	xor	eax, eax
0x670c:	jmp	0x1c00


0x6610:	sub	rsp, 8
0x6614:	mov	r9, qword ptr [rsp + 0x18]
0x6619:	mov	rdx, rax
0x661c:	mov	rcx, rbx
0x661f:	mov	esi, 1
0x6624:	mov	rdi, rbp
0x6627:	xor	eax, eax
0x6629:	push	r9
0x662b:	push	r13
0x662d:	push	r12
0x662f:	push	r15
0x6631:	push	r14
0x6633:	mov	r9, qword ptr [rsp + 0x30]
0x6638:	mov	r8, qword ptr [rsp + 0x38]
0x663d:	call	0x1c00


0x6732:	add	rsp, 0x28
0x6736:	mov	r8, r12
0x6739:	mov	rcx, rbx
0x673c:	mov	rdi, rbp
0x673f:	mov	rdx, rax
0x6742:	mov	esi, 1
0x6747:	pop	rbx
0x6748:	pop	rbp
0x6749:	pop	r12
0x674b:	pop	r13
0x674d:	pop	r14
0x674f:	pop	r15
0x6751:	xor	eax, eax
0x6753:	jmp	0x1c00


0x67d2:	sub	rsp, 8
0x67d6:	push	r14
0x67d8:	mov	rdx, rax
0x67db:	mov	r9, r13
0x67de:	mov	r8, r12
0x67e1:	mov	rcx, rbx
0x67e4:	mov	rdi, rbp
0x67e7:	mov	esi, 1
0x67ec:	xor	eax, eax
0x67ee:	call	0x1c00


0x67f3:	pop	rax
0x67f4:	pop	rdx
0x67f5:	add	rsp, 0x28
0x67f9:	pop	rbx
0x67fa:	pop	rbp
0x67fb:	pop	r12
0x67fd:	pop	r13
0x67ff:	pop	r14
0x6801:	pop	r15
0x6803:	ret	


0x682e:	push	r15
0x6830:	jmp	0x67d6


0x67d6:	push	r14
0x67d8:	mov	rdx, rax
0x67db:	mov	r9, r13
0x67de:	mov	r8, r12
0x67e1:	mov	rcx, rbx
0x67e4:	mov	rdi, rbp
0x67e7:	mov	esi, 1
0x67ec:	xor	eax, eax
0x67ee:	call	0x1c00


0x68d7:	push	r13
0x68d9:	push	r12
0x68db:	push	r15
0x68dd:	push	r14
0x68df:	mov	r9, qword ptr [rsp + 0x28]
0x68e4:	jmp	0x6873


0x6873:	mov	r8, qword ptr [rsp + 0x20]
0x6878:	mov	rcx, rbx
0x687b:	mov	rdx, rax
0x687e:	mov	rdi, rbp
0x6881:	mov	esi, 1
0x6886:	xor	eax, eax
0x6888:	call	0x1c00


0x677e:	add	rsp, 0x28
0x6782:	mov	r9, r13
0x6785:	mov	r8, r12
0x6788:	mov	rcx, rbx
0x678b:	mov	rdi, rbp
0x678e:	mov	rdx, rax
0x6791:	pop	rbx
0x6792:	pop	rbp
0x6793:	pop	r12
0x6795:	pop	r13
0x6797:	pop	r14
0x6799:	pop	r15
0x679b:	mov	esi, 1
0x67a0:	xor	eax, eax
0x67a2:	jmp	0x1c00


0x2f79:	sub	rsp, 8
0x2f7d:	mov	eax, dword ptr [rsp + 0x508]
0x2f84:	xor	edi, edi
0x2f86:	mov	r9d, r14d
0x2f89:	push	rax
0x2f8a:	push	qword ptr [rsp + 0x20]
0x2f8e:	mov	ecx, ebp
0x2f90:	push	qword ptr [rsp + 0x30]
0x2f94:	mov	rdx, qword ptr [rsp + 0x20]
0x2f99:	mov	r8d, dword ptr [rsp + 0x28]
0x2f9e:	mov	rsi, qword ptr [rsp + 0x58]
0x2fa3:	call	0x2900


0x2fa8:	add	rsp, 0x20
0x2fac:	movsxd	r10, dword ptr [rsp + 0x40]
0x2fb1:	mov	edx, 0
0x2fb6:	mov	rcx, r15
0x2fb9:	not	rcx
0x2fbc:	test	r10d, r10d
0x2fbf:	cmovns	rdx, r10
0x2fc3:	cmp	rax, rdx
0x2fc6:	mov	r13, rdx
0x2fc9:	cmovae	r13, rax
0x2fcd:	cmp	rcx, r13
0x2fd0:	jbe	0x29bf


0x2fd6:	test	r12, r12
0x2fd9:	jne	0x3ddb


0x2fdf:	add	r15, r13
0x2fe2:	mov	rbp, rbx
0x2fe5:	jmp	0x2a10


0x3ddb:	cmp	rax, rdx
0x3dde:	jae	0x3e37


0x3de0:	movsxd	rdx, r10d
0x3de3:	mov	rdi, rdx
0x3de6:	sub	rdi, rax
0x3de9:	mov	eax, dword ptr [rsp + 8]
0x3ded:	cmp	eax, 0x30
0x3df0:	je	0x41da


0x3e37:	sub	rsp, 8
0x3e3b:	mov	r9d, r14d
0x3e3e:	mov	ecx, ebp
0x3e40:	mov	eax, dword ptr [rsp + 0x508]
0x3e47:	mov	rdi, r12
0x3e4a:	push	rax
0x3e4b:	push	qword ptr [rsp + 0x20]
0x3e4f:	push	qword ptr [rsp + 0x30]
0x3e53:	mov	r8d, dword ptr [rsp + 0x28]
0x3e58:	mov	rdx, qword ptr [rsp + 0x20]
0x3e5d:	mov	rsi, qword ptr [rsp + 0x58]
0x3e62:	call	0x2900


0x41da:	test	rdi, rdi
0x41dd:	je	0x3e37


0x3df6:	cmp	eax, 0x2b
0x3df9:	je	0x41da


0x41e3:	xor	edx, edx
0x41e5:	mov	dword ptr [rsp + 0x34], ebp
0x41e9:	mov	qword ptr [rsp + 0x40], rbx
0x41ee:	mov	rbp, rdi
0x41f1:	mov	rbx, rdx
0x41f4:	nop	dword ptr [rax]
0x41f8:	mov	rsi, r12
0x41fb:	mov	edi, 0x30
0x4200:	add	rbx, 1
0x4204:	call	0x1a10


0x3dff:	xor	edx, edx
0x3e01:	test	rdi, rdi
0x3e04:	je	0x3e37


0x3e06:	mov	dword ptr [rsp + 0x34], ebp
0x3e0a:	mov	qword ptr [rsp + 0x40], rbx
0x3e0f:	mov	rbp, rdi
0x3e12:	mov	rbx, rdx
0x3e15:	nop	dword ptr [rax]
0x3e18:	mov	rsi, r12
0x3e1b:	mov	edi, 0x20
0x3e20:	add	rbx, 1
0x3e24:	call	0x1a10


0x3e29:	cmp	rbp, rbx
0x3e2c:	jne	0x3e18


0x3e2e:	mov	ebp, dword ptr [rsp + 0x34]
0x3e32:	mov	rbx, qword ptr [rsp + 0x40]
0x3e37:	sub	rsp, 8
0x3e3b:	mov	r9d, r14d
0x3e3e:	mov	ecx, ebp
0x3e40:	mov	eax, dword ptr [rsp + 0x508]
0x3e47:	mov	rdi, r12
0x3e4a:	push	rax
0x3e4b:	push	qword ptr [rsp + 0x20]
0x3e4f:	push	qword ptr [rsp + 0x30]
0x3e53:	mov	r8d, dword ptr [rsp + 0x28]
0x3e58:	mov	rdx, qword ptr [rsp + 0x20]
0x3e5d:	mov	rsi, qword ptr [rsp + 0x58]
0x3e62:	call	0x2900


0x3e18:	mov	rsi, r12
0x3e1b:	mov	edi, 0x20
0x3e20:	add	rbx, 1
0x3e24:	call	0x1a10


0x4209:	cmp	rbp, rbx
0x420c:	jne	0x41f8


0x420e:	jmp	0x3e2e


0x41f8:	mov	rsi, r12
0x41fb:	mov	edi, 0x30
0x4200:	add	rbx, 1
0x4204:	call	0x1a10


0x3e67:	add	rsp, 0x20
0x3e6b:	jmp	0x2fdf


0x5520:	sub	rsp, 8
0x5524:	mov	rcx, rbp
0x5527:	mov	rsi, r13
0x552a:	push	qword ptr [rsp + 0x68]
0x552e:	push	qword ptr [rsp + 0x78]
0x5532:	mov	rdi, r14
0x5535:	push	0
0x5537:	mov	r9d, dword ptr [rsp + 0x98]
0x553f:	mov	r8d, dword ptr [rsp + 0x28]
0x5544:	mov	rdx, qword ptr [rsp + 0x30]
0x5549:	and	r9d, 0xfffffffd
0x554d:	call	0x4980


0x5552:	add	rsp, 0x20
0x5556:	mov	r15, rax
0x5559:	mov	rbx, qword ptr [rsp + 0xa8]
0x5561:	xor	rbx, qword ptr fs:[0x28]
0x556a:	mov	rax, r15
0x556d:	jne	0x5b73


0x5573:	add	rsp, 0xb8
0x557a:	pop	rbx
0x557b:	pop	rbp
0x557c:	pop	r12
0x557e:	pop	r13
0x5580:	pop	r14
0x5582:	pop	r15
0x5584:	ret	


0x5b73:	call	0x1980


0x5b1d:	sub	rsp, 8
0x5b21:	mov	r8d, 5
0x5b27:	mov	rcx, r11
0x5b2a:	push	qword ptr [rsp + 0x68]
0x5b2e:	push	qword ptr [rsp + 0x78]
0x5b32:	mov	rdi, r14
0x5b35:	push	qword ptr [rsp + 0x38]
0x5b39:	mov	r9d, dword ptr [rsp + 0x98]
0x5b41:	mov	rdx, qword ptr [rsp + 0x30]
0x5b46:	mov	rsi, qword ptr [rsp + 0x70]
0x5b4b:	call	0x4980


0x5b50:	add	rsp, 0x20
0x5b54:	mov	r15, rax
0x5b57:	jmp	0x5559


0x5559:	mov	rbx, qword ptr [rsp + 0xa8]
0x5561:	xor	rbx, qword ptr fs:[0x28]
0x556a:	mov	rax, r15
0x556d:	jne	0x5b73


0x1810:	push	qword ptr [rip + 0x20859a]
0x1816:	jmp	qword ptr [rip + 0x20859c]


0x181c:	nop	dword ptr [rax]


0x1826:	push	0
0x182b:	jmp	0x1810


0x1836:	push	1
0x183b:	jmp	0x1810


0x1846:	push	2
0x184b:	jmp	0x1810


0x1856:	push	3
0x185b:	jmp	0x1810


0x1866:	push	4
0x186b:	jmp	0x1810


0x1876:	push	5
0x187b:	jmp	0x1810


0x1886:	push	6
0x188b:	jmp	0x1810


0x1896:	push	7
0x189b:	jmp	0x1810


0x18a6:	push	8
0x18ab:	jmp	0x1810


0x18b6:	push	9
0x18bb:	jmp	0x1810


0x18c6:	push	0xa
0x18cb:	jmp	0x1810


0x18d6:	push	0xb
0x18db:	jmp	0x1810


0x18e6:	push	0xc
0x18eb:	jmp	0x1810


0x18f6:	push	0xd
0x18fb:	jmp	0x1810


0x1906:	push	0xe
0x190b:	jmp	0x1810


0x1916:	push	0xf
0x191b:	jmp	0x1810


0x1926:	push	0x10
0x192b:	jmp	0x1810


0x1936:	push	0x11
0x193b:	jmp	0x1810


0x1946:	push	0x12
0x194b:	jmp	0x1810


0x1956:	push	0x13
0x195b:	jmp	0x1810


0x1966:	push	0x14
0x196b:	jmp	0x1810


0x1976:	push	0x15
0x197b:	jmp	0x1810


0x1986:	push	0x16
0x198b:	jmp	0x1810


0x1996:	push	0x17
0x199b:	jmp	0x1810


0x19a6:	push	0x18
0x19ab:	jmp	0x1810


0x19b6:	push	0x19
0x19bb:	jmp	0x1810


0x19c6:	push	0x1a
0x19cb:	jmp	0x1810


0x19d6:	push	0x1b
0x19db:	jmp	0x1810


0x19e6:	push	0x1c
0x19eb:	jmp	0x1810


0x19f6:	push	0x1d
0x19fb:	jmp	0x1810


0x1a06:	push	0x1e
0x1a0b:	jmp	0x1810


0x1a16:	push	0x1f
0x1a1b:	jmp	0x1810


0x1a20:	jmp	qword ptr [rip + 0x20849a]




0x1a26:	push	0x20
0x1a2b:	jmp	0x1810


0x1a36:	push	0x21
0x1a3b:	jmp	0x1810


0x1a46:	push	0x22
0x1a4b:	jmp	0x1810


0x1a56:	push	0x23
0x1a5b:	jmp	0x1810


0x1a66:	push	0x24
0x1a6b:	jmp	0x1810


0x1a76:	push	0x25
0x1a7b:	jmp	0x1810


0x1a86:	push	0x26
0x1a8b:	jmp	0x1810


0x1a96:	push	0x27
0x1a9b:	jmp	0x1810


0x1aa6:	push	0x28
0x1aab:	jmp	0x1810


0x1ab6:	push	0x29
0x1abb:	jmp	0x1810


0x1ac6:	push	0x2a
0x1acb:	jmp	0x1810


0x1ad6:	push	0x2b
0x1adb:	jmp	0x1810


0x1ae6:	push	0x2c
0x1aeb:	jmp	0x1810


0x1af6:	push	0x2d
0x1afb:	jmp	0x1810


0x1b06:	push	0x2e
0x1b0b:	jmp	0x1810


0x1b16:	push	0x2f
0x1b1b:	jmp	0x1810


0x1b26:	push	0x30
0x1b2b:	jmp	0x1810


0x1b36:	push	0x31
0x1b3b:	jmp	0x1810


0x1b46:	push	0x32
0x1b4b:	jmp	0x1810


0x1b56:	push	0x33
0x1b5b:	jmp	0x1810


0x1b60:	jmp	qword ptr [rip + 0x2083fa]




0x1b66:	push	0x34
0x1b6b:	jmp	0x1810


0x1b76:	push	0x35
0x1b7b:	jmp	0x1810


0x1b86:	push	0x36
0x1b8b:	jmp	0x1810


0x1b96:	push	0x37
0x1b9b:	jmp	0x1810


0x1ba6:	push	0x38
0x1bab:	jmp	0x1810


0x1bb6:	push	0x39
0x1bbb:	jmp	0x1810


0x1bc6:	push	0x3a
0x1bcb:	jmp	0x1810


0x1bd6:	push	0x3b
0x1bdb:	jmp	0x1810


0x1be6:	push	0x3c
0x1beb:	jmp	0x1810


0x1bf6:	push	0x3d
0x1bfb:	jmp	0x1810


0x1c06:	push	0x3e
0x1c0b:	jmp	0x1810


0x1c10:	jmp	qword ptr [rip + 0x2083a2]




0x1c16:	push	0x3f
0x1c1b:	jmp	0x1810


0x1c20:	jmp	qword ptr [rip + 0x20839a]




0x1c26:	push	0x40
0x1c2b:	jmp	0x1810


0x1c36:	push	0x41
0x1c3b:	jmp	0x1810


0x1c40:	jmp	qword ptr [rip + 0x20838a]




0x1c46:	push	0x42
0x1c4b:	jmp	0x1810


0x1d73:	nop	word ptr cs:[rax + rax]
0x1d7d:	nop	dword ptr [rax]


0x1daa:	hlt	


0x1dab:	nop	dword ptr [rax + rax]


0x1de2:	nop	dword ptr [rax]
0x1de6:	nop	word ptr cs:[rax + rax]


0x1e32:	nop	dword ptr [rax]
0x1e36:	nop	word ptr cs:[rax + rax]


0x1e7a:	nop	word ptr [rax + rax]


0x1e8a:	nop	word ptr [rax + rax]


0x22c2:	nop	dword ptr [rax]
0x22c6:	nop	word ptr cs:[rax + rax]


0x235f:	nop	


0x26f2:	nop	word ptr cs:[rax + rax]
0x26fc:	nop	dword ptr [rax]


0x276c:	nop	dword ptr [rax]


0x2778:	nop	dword ptr [rax + rax]


0x2788:	nop	dword ptr [rax + rax]


0x2834:	nop	word ptr cs:[rax + rax]
0x283e:	nop	


0x2892:	nop	dword ptr [rax]
0x2896:	nop	word ptr cs:[rax + rax]


0x28f2:	nop	dword ptr [rax]
0x28f6:	nop	word ptr cs:[rax + rax]


0x2b0b:	mov	rbx, qword ptr [rsp + 0x38]
0x2b10:	lea	rax, [rbx - 1]
0x2b14:	mov	r13d, 1
0x2b1a:	mov	rdx, rax
0x2b1d:	lea	rax, [rax - 1]
0x2b21:	add	r13d, 1
0x2b25:	cmp	byte ptr [rax + 1], 0x25
0x2b29:	jne	0x2b1a


0x2caa:	xor	r14d, r14d
0x2cad:	mov	ebp, 0x2520
0x2cb2:	test	r11d, r11d
0x2cb5:	mov	word ptr [rsp + 0x9b], bp
0x2cbd:	jne	0x4510


0x2cc3:	lea	rdx, [rsp + 0x9b]
0x2ccb:	mov	rbp, rbx
0x2cce:	lea	rax, [rdx + 2]
0x2cd2:	mov	byte ptr [rax], r13b
0x2cd5:	mov	byte ptr [rax + 1], 0
0x2cd9:	lea	rax, [rsp + 0xa0]
0x2ce1:	mov	rcx, qword ptr [rsp]
0x2ce5:	mov	esi, 0x400
0x2cea:	mov	dword ptr [rsp + 0x40], r10d
0x2cef:	mov	rdi, rax
0x2cf2:	mov	dword ptr [rsp + 0x58], r11d
0x2cf7:	mov	qword ptr [rsp + 0x38], rax
0x2cfc:	call	0x1b60


0x4510:	xor	esi, esi
0x4512:	jmp	0x2f0a


0x2f0a:	lea	rdx, [rsp + 0x9b]
0x2f12:	mov	byte ptr [rsp + 0x9d], r11b
0x2f1a:	mov	rbp, rbx
0x2f1d:	mov	r11d, esi
0x2f20:	lea	rax, [rdx + 3]
0x2f24:	jmp	0x2cd2


0x2cd2:	mov	byte ptr [rax], r13b
0x2cd5:	mov	byte ptr [rax + 1], 0
0x2cd9:	lea	rax, [rsp + 0xa0]
0x2ce1:	mov	rcx, qword ptr [rsp]
0x2ce5:	mov	esi, 0x400
0x2cea:	mov	dword ptr [rsp + 0x40], r10d
0x2cef:	mov	rdi, rax
0x2cf2:	mov	dword ptr [rsp + 0x58], r11d
0x2cf7:	mov	qword ptr [rsp + 0x38], rax
0x2cfc:	call	0x1b60


0x2d01:	test	rax, rax
0x2d04:	je	0x2a10


0x2d0a:	movsxd	r10, dword ptr [rsp + 0x40]
0x2d0f:	lea	r13, [rax - 1]
0x2d13:	mov	eax, 0
0x2d18:	mov	rdx, r15
0x2d1b:	not	rdx
0x2d1e:	test	r10d, r10d
0x2d21:	cmovns	rax, r10
0x2d25:	cmp	r13, rax
0x2d28:	mov	rdi, rax
0x2d2b:	cmovae	rdi, r13
0x2d2f:	cmp	rdx, rdi
0x2d32:	mov	qword ptr [rsp + 0x40], rdi
0x2d37:	jbe	0x29bf


0x2d3d:	test	r12, r12
0x2d40:	je	0x2dc3


0x2dc3:	add	r15, qword ptr [rsp + 0x40]
0x2dc8:	jmp	0x2a10


0x2d46:	mov	r11d, dword ptr [rsp + 0x58]
0x2d4b:	test	r11d, r11d
0x2d4e:	jne	0x2d9b


0x2d50:	cmp	r13, rax
0x2d53:	jae	0x2d9b


0x2d9b:	test	r14b, r14b
0x2d9e:	jne	0x3d30


0x2d55:	mov	eax, dword ptr [rsp + 8]
0x2d59:	movsxd	rbx, r10d
0x2d5c:	sub	rbx, r13
0x2d5f:	cmp	eax, 0x30
0x2d62:	je	0x3d70


0x2da4:	cmp	byte ptr [rsp + 0x34], 0
0x2da9:	je	0x3d08


0x3d30:	mov	rsi, qword ptr [rsp + 0x38]
0x3d35:	mov	rdx, r13
0x3d38:	mov	rdi, r12
0x3d3b:	add	rsi, 1
0x3d3f:	call	0x2840


0x3d70:	test	rbx, rbx
0x3d73:	je	0x2d9b


0x2d68:	cmp	eax, 0x2b
0x2d6b:	je	0x3d70


0x3d08:	mov	rdi, qword ptr [rsp + 0x38]
0x3d0d:	mov	rcx, r12
0x3d10:	mov	edx, 1
0x3d15:	mov	rsi, r13
0x3d18:	add	rdi, 1
0x3d1c:	call	0x1bf0


0x2daf:	mov	rsi, qword ptr [rsp + 0x38]
0x2db4:	mov	rdx, r13
0x2db7:	mov	rdi, r12
0x2dba:	add	rsi, 1
0x2dbe:	call	0x28a0


0x3d79:	xor	edx, edx
0x3d7b:	mov	qword ptr [rsp + 8], rbp
0x3d80:	mov	rbp, rdx
0x3d83:	nop	dword ptr [rax + rax]
0x3d88:	mov	rsi, r12
0x3d8b:	mov	edi, 0x30
0x3d90:	add	rbp, 1
0x3d94:	call	0x1a10


0x2d71:	xor	edx, edx
0x2d73:	test	rbx, rbx
0x2d76:	je	0x2d9b


0x2d78:	mov	qword ptr [rsp + 8], rbp
0x2d7d:	mov	rbp, rdx
0x2d80:	mov	rsi, r12
0x2d83:	mov	edi, 0x20
0x2d88:	add	rbp, 1
0x2d8c:	call	0x1a10


0x2d91:	cmp	rbx, rbp
0x2d94:	jne	0x2d80


0x2d96:	mov	rbp, qword ptr [rsp + 8]
0x2d9b:	test	r14b, r14b
0x2d9e:	jne	0x3d30


0x2d80:	mov	rsi, r12
0x2d83:	mov	edi, 0x20
0x2d88:	add	rbp, 1
0x2d8c:	call	0x1a10


0x3d99:	cmp	rbx, rbp
0x3d9c:	jne	0x3d88


0x3d9e:	jmp	0x2d96


0x3d88:	mov	rsi, r12
0x3d8b:	mov	edi, 0x30
0x3d90:	add	rbp, 1
0x3d94:	call	0x1a10


0x3d21:	jmp	0x2dc3


0x3d44:	jmp	0x2dc3


0x2dd9:	movzx	eax, byte ptr [rsp + 0x34]
0x2dde:	test	r14b, r14b
0x2de1:	lea	rdx, [rsp + 0x9b]
0x2de9:	mov	rbp, rbx
0x2dec:	cmovne	eax, r14d
0x2df0:	xor	r14d, r14d
0x2df3:	xor	r11d, r11d
0x2df6:	mov	byte ptr [rsp + 0x34], al
0x2dfa:	mov	eax, 0x2520
0x2dff:	mov	word ptr [rsp + 0x9b], ax
0x2e07:	lea	rax, [rdx + 2]
0x2e0b:	jmp	0x2cd2


0x2e10:	test	r10d, r10d
0x2e13:	mov	r13d, 0
0x2e19:	mov	eax, 1
0x2e1e:	cmovns	r13d, r10d
0x2e22:	movsxd	r13, r13d
0x2e25:	test	r13, r13
0x2e28:	cmove	r13, rax
0x2e2c:	mov	rax, r15
0x2e2f:	not	rax
0x2e32:	cmp	rax, r13
0x2e35:	jbe	0x29bf


0x2e3b:	test	r12, r12
0x2e3e:	je	0x2fdf


0x2e44:	cmp	r10d, 1
0x2e48:	jle	0x2e7f


0x2e7f:	mov	rsi, r12
0x2e82:	mov	edi, 9
0x2e87:	call	0x1a10


0x2e4a:	mov	eax, dword ptr [rsp + 8]
0x2e4e:	movsxd	r10, r10d
0x2e51:	lea	r14, [r10 - 1]
0x2e55:	cmp	eax, 0x30
0x2e58:	je	0x432f


0x432f:	xor	ebp, ebp
0x4331:	mov	rsi, r12
0x4334:	mov	edi, 0x30
0x4339:	add	rbp, 1
0x433d:	call	0x1a10


0x2e5e:	xor	ebp, ebp
0x2e60:	cmp	eax, 0x2b
0x2e63:	je	0x432f


0x2e69:	mov	rsi, r12
0x2e6c:	mov	edi, 0x20
0x2e71:	add	rbp, 1
0x2e75:	call	0x1a10


0x2e7a:	cmp	r14, rbp
0x2e7d:	jne	0x2e69


0x4342:	cmp	r14, rbp
0x4345:	jne	0x4331


0x4347:	jmp	0x2e7f


0x4331:	mov	rsi, r12
0x4334:	mov	edi, 0x30
0x4339:	add	rbp, 1
0x433d:	call	0x1a10


0x2e8c:	jmp	0x2fdf


0x2e91:	mov	rax, qword ptr [rsp]
0x2e95:	mov	edx, 0x92492493
0x2e9a:	mov	esi, 1
0x2e9f:	mov	eax, dword ptr [rax + 0x18]
0x2ea2:	lea	ecx, [rax + 6]
0x2ea5:	mov	dword ptr [rsp + 0x38], eax
0x2ea9:	mov	eax, ecx
0x2eab:	imul	edx
0x2ead:	lea	eax, [rdx + rcx]
0x2eb0:	mov	edx, ecx
0x2eb2:	sar	edx, 0x1f
0x2eb5:	sar	eax, 2
0x2eb8:	sub	eax, edx
0x2eba:	lea	edx, [rax*8]
0x2ec1:	sub	edx, eax
0x2ec3:	sub	ecx, edx
0x2ec5:	add	ecx, 1
0x2ec8:	nop	dword ptr [rax + rax]
0x2ed0:	mov	eax, ecx
0x2ed2:	xor	r8d, r8d
0x2ed5:	xor	r9d, r9d
0x2ed8:	shr	eax, 0x1f
0x2edb:	mov	r13d, eax
0x2ede:	mov	eax, ecx
0x2ee0:	not	eax
0x2ee2:	shr	eax, 0x1f
0x2ee5:	cmp	r11d, 0x4f
0x2ee9:	jne	0x3c00


0x2eef:	test	al, al
0x2ef1:	je	0x3c00


0x3c00:	mov	eax, ecx
0x3c02:	neg	eax
0x3c04:	test	r13b, r13b
0x3c07:	cmovne	ecx, eax
0x3c0a:	jmp	0x31e8


0x2ef7:	mov	r13d, edi
0x2efa:	mov	edx, 0x2520
0x2eff:	xor	r14d, r14d
0x2f02:	mov	word ptr [rsp + 0x9b], dx
0x2f0a:	lea	rdx, [rsp + 0x9b]
0x2f12:	mov	byte ptr [rsp + 0x9d], r11b
0x2f1a:	mov	rbp, rbx
0x2f1d:	mov	r11d, esi
0x2f20:	lea	rax, [rdx + 3]
0x2f24:	jmp	0x2cd2


0x31e8:	lea	rax, [rsp + 0xa0]
0x31f0:	lea	rdi, [rsp + 0xb7]
0x31f8:	mov	r11d, 0xcccccccd
0x31fe:	mov	qword ptr [rsp + 0x38], rax
0x3203:	nop	dword ptr [rax + rax]
0x3208:	test	r8b, 1
0x320c:	lea	r14, [rdi - 1]
0x3210:	je	0x3220


0x3220:	mov	eax, ecx
0x3222:	sar	r8d, 1
0x3225:	mul	r11d
0x3228:	shr	edx, 3
0x322b:	lea	eax, [rdx + rdx*4]
0x322e:	add	eax, eax
0x3230:	sub	ecx, eax
0x3232:	mov	eax, r8d
0x3235:	add	ecx, 0x30
0x3238:	or	eax, edx
0x323a:	mov	byte ptr [rdi - 1], cl
0x323d:	mov	ecx, edx
0x323f:	mov	rdi, r14
0x3242:	jne	0x3208


0x3212:	lea	rax, [rdi - 2]
0x3216:	mov	byte ptr [rdi - 1], 0x3a
0x321a:	mov	rdi, r14
0x321d:	mov	r14, rax
0x3220:	mov	eax, ecx
0x3222:	sar	r8d, 1
0x3225:	mul	r11d
0x3228:	shr	edx, 3
0x322b:	lea	eax, [rdx + rdx*4]
0x322e:	add	eax, eax
0x3230:	sub	ecx, eax
0x3232:	mov	eax, r8d
0x3235:	add	ecx, 0x30
0x3238:	or	eax, edx
0x323a:	mov	byte ptr [rdi - 1], cl
0x323d:	mov	ecx, edx
0x323f:	mov	rdi, r14
0x3242:	jne	0x3208


0x3244:	cmp	r10d, esi
0x3247:	cmovge	esi, r10d
0x324b:	test	r13b, r13b
0x324e:	mov	dword ptr [rsp + 0x58], esi
0x3252:	jne	0x3c10


0x3208:	test	r8b, 1
0x320c:	lea	r14, [rdi - 1]
0x3210:	je	0x3220


0x3258:	test	r9b, r9b
0x325b:	je	0x30d9


0x3c10:	cmp	dword ptr [rsp + 8], 0x2d
0x3c15:	mov	ebp, 0x2d
0x3c1a:	jne	0x3271


0x30d9:	mov	rax, qword ptr [rsp + 0x38]
0x30de:	mov	rdx, r15
0x30e1:	not	rdx
0x30e4:	add	rax, 0x17
0x30e8:	sub	rax, r14
0x30eb:	cmp	dword ptr [rsp + 8], 0x2d
0x30f0:	mov	qword ptr [rsp + 0x40], rax
0x30f5:	je	0x310a


0x3261:	cmp	dword ptr [rsp + 8], 0x2d
0x3266:	mov	ebp, 0x2b
0x326b:	je	0x401d


0x3c20:	mov	byte ptr [rsp + 0x40], 0x2d
0x3c25:	test	r10d, r10d
0x3c28:	mov	ecx, 0
0x3c2d:	mov	eax, 1
0x3c32:	cmovns	ecx, r10d
0x3c36:	movsxd	r13, ecx
0x3c39:	test	r13, r13
0x3c3c:	cmovne	rax, r13
0x3c40:	mov	rdi, rax
0x3c43:	mov	qword ptr [rsp + 8], rax
0x3c48:	mov	rax, r15
0x3c4b:	not	rax
0x3c4e:	cmp	rax, rdi
0x3c51:	jbe	0x29bf


0x3271:	mov	rax, qword ptr [rsp + 0x38]
0x3276:	mov	rdx, r15
0x3279:	not	rdx
0x327c:	add	rax, 0x17
0x3280:	sub	rax, r14
0x3283:	mov	rdi, rax
0x3286:	mov	qword ptr [rsp + 0x40], rax
0x328b:	mov	eax, dword ptr [rsp + 0x58]
0x328f:	sub	eax, 1
0x3292:	sub	eax, edi
0x3294:	test	eax, eax
0x3296:	mov	r13d, eax
0x3299:	jle	0x3f60


0x310a:	test	r10d, r10d
0x310d:	mov	ecx, 0
0x3112:	mov	rbp, rbx
0x3115:	cmovns	ecx, r10d
0x3119:	movsxd	r13, ecx
0x311c:	mov	rax, qword ptr [rsp + 0x40]
0x3121:	cmp	rax, r13
0x3124:	mov	rbx, rax
0x3127:	cmovb	rbx, r13
0x312b:	cmp	rbx, rdx
0x312e:	jae	0x29bf


0x30f7:	mov	r13d, dword ptr [rsp + 0x58]
0x30fc:	sub	r13d, dword ptr [rsp + 0x40]
0x3101:	test	r13d, r13d
0x3104:	jg	0x423e


0x401d:	mov	byte ptr [rsp + 0x40], 0x2b
0x4022:	jmp	0x3c25


0x3c57:	test	r12, r12
0x3c5a:	je	0x3cb9


0x3f60:	test	r10d, r10d
0x3f63:	mov	ecx, 0
0x3f68:	mov	eax, 1
0x3f6d:	cmovns	ecx, r10d
0x3f71:	movsxd	r13, ecx
0x3f74:	test	r13, r13
0x3f77:	cmovne	rax, r13
0x3f7b:	cmp	rax, rdx
0x3f7e:	mov	qword ptr [rsp + 0x48], rax
0x3f83:	jae	0x29bf


0x329f:	cmp	dword ptr [rsp + 8], 0x5f
0x32a4:	je	0x3ebc


0x3134:	test	r12, r12
0x3137:	je	0x31ae


0x423e:	cmp	dword ptr [rsp + 8], 0x5f
0x4243:	je	0x3eba


0x3c25:	test	r10d, r10d
0x3c28:	mov	ecx, 0
0x3c2d:	mov	eax, 1
0x3c32:	cmovns	ecx, r10d
0x3c36:	movsxd	r13, ecx
0x3c39:	test	r13, r13
0x3c3c:	cmovne	rax, r13
0x3c40:	mov	rdi, rax
0x3c43:	mov	qword ptr [rsp + 8], rax
0x3c48:	mov	rax, r15
0x3c4b:	not	rax
0x3c4e:	cmp	rax, rdi
0x3c51:	jbe	0x29bf


0x3cb9:	add	r15, qword ptr [rsp + 8]
0x3cbe:	mov	rax, qword ptr [rsp + 0x38]
0x3cc3:	mov	rbp, rbx
0x3cc6:	mov	dword ptr [rsp + 8], 0x2d
0x3cce:	add	rax, 0x17
0x3cd2:	sub	rax, r14
0x3cd5:	mov	rdx, r15
0x3cd8:	mov	qword ptr [rsp + 0x40], rax
0x3cdd:	not	rdx
0x3ce0:	jmp	0x311c


0x3c5c:	mov	edi, dword ptr [rsp + 0x58]
0x3c60:	test	edi, edi
0x3c62:	jne	0x3ca2


0x3f89:	test	r12, r12
0x3f8c:	je	0x400a


0x3ebc:	movsxd	rax, r13d
0x3ebf:	cmp	rax, rdx
0x3ec2:	mov	qword ptr [rsp + 8], rax
0x3ec7:	jae	0x29bf


0x32aa:	movsxd	rax, dword ptr [rsp + 0x58]
0x32af:	cmp	rax, rdx
0x32b2:	mov	rdi, rax
0x32b5:	jae	0x29bf


0x31ae:	add	r15, rbx
0x31b1:	jmp	0x2a10


0x3139:	mov	edx, dword ptr [rsp + 0x58]
0x313d:	test	edx, edx
0x313f:	jne	0x3193


0x3eba:	xor	ebp, ebp
0x3ebc:	movsxd	rax, r13d
0x3ebf:	cmp	rax, rdx
0x3ec2:	mov	qword ptr [rsp + 8], rax
0x3ec7:	jae	0x29bf


0x4249:	movsxd	rax, dword ptr [rsp + 0x58]
0x424e:	cmp	rax, rdx
0x4251:	jb	0x3351


0x311c:	mov	rax, qword ptr [rsp + 0x40]
0x3121:	cmp	rax, r13
0x3124:	mov	rbx, rax
0x3127:	cmovb	rbx, r13
0x312b:	cmp	rbx, rdx
0x312e:	jae	0x29bf


0x3c64:	cmp	r13, 1
0x3c68:	jbe	0x3ca2


0x3ca2:	movsx	edi, byte ptr [rsp + 0x40]
0x3ca7:	mov	rsi, r12
0x3caa:	mov	dword ptr [rsp + 0x48], r10d
0x3caf:	call	0x1a10


0x400a:	add	r15, qword ptr [rsp + 0x48]
0x400f:	mov	rbp, rbx
0x4012:	mov	rdx, r15
0x4015:	not	rdx
0x4018:	jmp	0x311c


0x3f8e:	mov	ecx, dword ptr [rsp + 0x58]
0x3f92:	test	ecx, ecx
0x3f94:	jne	0x3ff4


0x3ecd:	test	r12, r12
0x3ed0:	je	0x3f15


0x32bb:	test	r10d, r10d
0x32be:	mov	eax, 0
0x32c3:	mov	ecx, 1
0x32c8:	cmovns	eax, r10d
0x32cc:	cdqe	
0x32ce:	test	rax, rax
0x32d1:	cmovne	rcx, rax
0x32d5:	cmp	rcx, rdx
0x32d8:	mov	qword ptr [rsp + 0x48], rcx
0x32dd:	jae	0x29bf


0x3141:	cmp	rax, r13
0x3144:	jae	0x3193


0x3193:	cmp	byte ptr [rsp + 0x34], 0
0x3198:	je	0x3d50


0x3351:	mov	rbp, rbx
0x3354:	movsxd	rbx, r13d
0x3357:	xor	r13d, r13d
0x335a:	test	r12, r12
0x335d:	je	0x3376


0x4257:	jmp	0x29bf


0x3c6a:	movsxd	rax, r10d
0x3c6d:	sub	rax, 1
0x3c71:	je	0x3ca2


0x3f96:	cmp	r13, 1
0x3f9a:	jbe	0x3ff4


0x3ff4:	movsx	edi, bpl
0x3ff8:	mov	rsi, r12
0x3ffb:	mov	dword ptr [rsp + 0x38], r10d
0x4000:	call	0x1a10


0x3f15:	add	r15, qword ptr [rsp + 8]
0x3f1a:	mov	eax, r10d
0x3f1d:	sub	eax, r13d
0x3f20:	cmp	r10d, r13d
0x3f23:	mov	r10d, 0
0x3f29:	cmovg	r10d, eax
0x3f2d:	test	bpl, bpl
0x3f30:	mov	rdx, r15
0x3f33:	not	rdx
0x3f36:	jne	0x4063


0x3ed2:	xor	edx, edx
0x3ed4:	mov	byte ptr [rsp + 0x40], bpl
0x3ed9:	mov	qword ptr [rsp + 0x48], rbx
0x3ede:	mov	rbp, rdx
0x3ee1:	mov	rbx, rax
0x3ee4:	mov	dword ptr [rsp + 0x50], r10d
0x3ee9:	nop	dword ptr [rax]
0x3ef0:	mov	rsi, r12
0x3ef3:	mov	edi, 0x20
0x3ef8:	add	rbp, 1
0x3efc:	call	0x1a10


0x32e3:	test	r12, r12
0x32e6:	je	0x334c


0x3146:	movsxd	r13, r10d
0x3149:	sub	r13, rax
0x314c:	mov	eax, dword ptr [rsp + 8]
0x3150:	cmp	eax, 0x30
0x3153:	je	0x3e70


0x3d50:	mov	rsi, qword ptr [rsp + 0x40]
0x3d55:	mov	rcx, r12
0x3d58:	mov	edx, 1
0x3d5d:	mov	rdi, r14
0x3d60:	call	0x1bf0


0x319e:	mov	rdx, qword ptr [rsp + 0x40]
0x31a3:	mov	rsi, r14
0x31a6:	mov	rdi, r12
0x31a9:	call	0x28a0


0x3376:	add	r15, rbx
0x3379:	xor	r13d, r13d
0x337c:	xor	r10d, r10d
0x337f:	mov	rdx, r15
0x3382:	not	rdx
0x3385:	jmp	0x311c


0x3c73:	mov	qword ptr [rsp + 0x48], rbx
0x3c78:	xor	ebp, ebp
0x3c7a:	mov	rbx, rax
0x3c7d:	mov	dword ptr [rsp + 0x50], r10d
0x3c82:	mov	rsi, r12
0x3c85:	mov	edi, 0x20
0x3c8a:	add	rbp, 1
0x3c8e:	call	0x1a10


0x3f9c:	mov	edi, dword ptr [rsp + 8]
0x3fa0:	movsxd	rax, r10d
0x3fa3:	sub	rax, 1
0x3fa7:	mov	qword ptr [rsp + 0x38], rax
0x3fac:	cmp	edi, 0x30
0x3faf:	je	0x4476


0x3f3c:	mov	rax, qword ptr [rsp + 0x38]
0x3f41:	movsxd	r13, r10d
0x3f44:	mov	rbp, rbx
0x3f47:	mov	dword ptr [rsp + 8], 0x5f
0x3f4f:	add	rax, 0x17
0x3f53:	sub	rax, r14
0x3f56:	mov	qword ptr [rsp + 0x40], rax
0x3f5b:	jmp	0x311c


0x4063:	movsxd	rcx, r10d
0x4066:	mov	r13d, 1
0x406c:	test	rcx, rcx
0x406f:	cmovne	r13, rcx
0x4073:	cmp	r13, rdx
0x4076:	mov	qword ptr [rsp + 8], r13
0x407b:	jae	0x29bf


0x334c:	add	r15, qword ptr [rsp + 0x48]
0x3351:	mov	rbp, rbx
0x3354:	movsxd	rbx, r13d
0x3357:	xor	r13d, r13d
0x335a:	test	r12, r12
0x335d:	je	0x3376


0x32e8:	test	edi, edi
0x32ea:	jne	0x3340


0x3e70:	test	r13, r13
0x3e73:	je	0x3193


0x3159:	cmp	eax, 0x2b
0x315c:	je	0x3e70


0x4476:	cmp	qword ptr [rsp + 0x38], 0
0x447c:	je	0x3ff4


0x3fb5:	cmp	edi, 0x2b
0x3fb8:	je	0x4476


0x4081:	test	r12, r12
0x4084:	je	0x40f5


0x32ec:	cmp	rax, 1
0x32f0:	jbe	0x3340


0x3340:	movsx	edi, bpl
0x3344:	mov	rsi, r12
0x3347:	call	0x1a10


0x3e79:	xor	edx, edx
0x3e7b:	mov	qword ptr [rsp + 8], rbx
0x3e80:	mov	rbx, rdx
0x3e83:	nop	dword ptr [rax + rax]
0x3e88:	mov	rsi, r12
0x3e8b:	mov	edi, 0x30
0x3e90:	add	rbx, 1
0x3e94:	call	0x1a10


0x3162:	xor	edx, edx
0x3164:	test	r13, r13
0x3167:	je	0x3193


0x4482:	xor	edx, edx
0x4484:	mov	qword ptr [rsp + 0x50], rbx
0x4489:	mov	dword ptr [rsp + 0x5c], r10d
0x448e:	mov	rbx, rdx
0x4491:	mov	rsi, r12
0x4494:	mov	edi, 0x30
0x4499:	add	rbx, 1
0x449d:	call	0x1a10


0x3fbe:	xor	edx, edx
0x3fc0:	test	rax, rax
0x3fc3:	je	0x3ff4


0x40f5:	add	r15, qword ptr [rsp + 8]
0x40fa:	mov	rax, qword ptr [rsp + 0x38]
0x40ff:	mov	r13, rcx
0x4102:	mov	rbp, rbx
0x4105:	mov	dword ptr [rsp + 8], 0x5f
0x410d:	add	rax, 0x17
0x4111:	sub	rax, r14
0x4114:	mov	rdx, r15
0x4117:	mov	qword ptr [rsp + 0x40], rax
0x411c:	not	rdx
0x411f:	jmp	0x311c


0x4086:	mov	esi, dword ptr [rsp + 0x58]
0x408a:	test	esi, esi
0x408c:	jne	0x40d5


0x32f2:	mov	edi, dword ptr [rsp + 8]
0x32f6:	movsxd	r10, r10d
0x32f9:	lea	rax, [r10 - 1]
0x32fd:	cmp	edi, 0x30
0x3300:	mov	qword ptr [rsp + 0x38], rax
0x3305:	je	0x4410


0x3169:	mov	qword ptr [rsp + 8], rbx
0x316e:	mov	rbx, rdx
0x3171:	nop	dword ptr [rax]
0x3178:	mov	rsi, r12
0x317b:	mov	edi, 0x20
0x3180:	add	rbx, 1
0x3184:	call	0x1a10


0x3fc5:	mov	qword ptr [rsp + 0x50], rbx
0x3fca:	mov	dword ptr [rsp + 0x5c], r10d
0x3fcf:	mov	rbx, rdx
0x3fd2:	mov	rsi, r12
0x3fd5:	mov	edi, 0x20
0x3fda:	add	rbx, 1
0x3fde:	call	0x1a10


0x408e:	cmp	r10d, 1
0x4092:	jbe	0x40d5


0x40d5:	movsx	edi, bpl
0x40d9:	mov	rsi, r12
0x40dc:	mov	dword ptr [rsp + 0x48], r10d
0x40e1:	mov	qword ptr [rsp + 0x40], rcx
0x40e6:	call	0x1a10


0x4410:	cmp	qword ptr [rsp + 0x38], 0
0x4416:	je	0x3340


0x330b:	cmp	edi, 0x2b
0x330e:	je	0x4410


0x4094:	lea	rax, [rcx - 1]
0x4098:	xor	r13d, r13d
0x409b:	mov	qword ptr [rsp + 0x48], rbx
0x40a0:	mov	dword ptr [rsp + 0x50], r10d
0x40a5:	mov	rbx, r13
0x40a8:	mov	r13, rcx
0x40ab:	mov	qword ptr [rsp + 0x40], rax
0x40b0:	mov	rsi, r12
0x40b3:	mov	edi, 0x20
0x40b8:	add	rbx, 1
0x40bc:	call	0x1a10


0x441c:	xor	edx, edx
0x441e:	mov	qword ptr [rsp + 0x50], rbx
0x4423:	mov	rbx, rdx
0x4426:	mov	rsi, r12
0x4429:	mov	edi, 0x30
0x442e:	add	rbx, 1
0x4432:	call	0x1a10


0x3314:	xor	edx, edx
0x3316:	test	rax, rax
0x3319:	je	0x3340


0x331b:	mov	qword ptr [rsp + 0x50], rbx
0x3320:	mov	rbx, rdx
0x3323:	mov	rsi, r12
0x3326:	mov	edi, 0x20
0x332b:	add	rbx, 1
0x332f:	call	0x1a10


0x3d65:	jmp	0x31ae


0x3334:	cmp	qword ptr [rsp + 0x38], rbx
0x3339:	jne	0x3323


0x333b:	mov	rbx, qword ptr [rsp + 0x50]
0x3340:	movsx	edi, bpl
0x3344:	mov	rsi, r12
0x3347:	call	0x1a10


0x3323:	mov	rsi, r12
0x3326:	mov	edi, 0x20
0x332b:	add	rbx, 1
0x332f:	call	0x1a10


0x4437:	cmp	qword ptr [rsp + 0x38], rbx
0x443c:	jne	0x4426


0x443e:	jmp	0x333b


0x4426:	mov	rsi, r12
0x4429:	mov	edi, 0x30
0x442e:	add	rbx, 1
0x4432:	call	0x1a10


0x40c1:	cmp	qword ptr [rsp + 0x40], rbx
0x40c6:	jne	0x40b0


0x40c8:	mov	rbx, qword ptr [rsp + 0x48]
0x40cd:	mov	r10d, dword ptr [rsp + 0x50]
0x40d2:	mov	rcx, r13
0x40d5:	movsx	edi, bpl
0x40d9:	mov	rsi, r12
0x40dc:	mov	dword ptr [rsp + 0x48], r10d
0x40e1:	mov	qword ptr [rsp + 0x40], rcx
0x40e6:	call	0x1a10


0x40b0:	mov	rsi, r12
0x40b3:	mov	edi, 0x20
0x40b8:	add	rbx, 1
0x40bc:	call	0x1a10


0x40eb:	mov	r10d, dword ptr [rsp + 0x48]
0x40f0:	mov	rcx, qword ptr [rsp + 0x40]
0x40f5:	add	r15, qword ptr [rsp + 8]
0x40fa:	mov	rax, qword ptr [rsp + 0x38]
0x40ff:	mov	r13, rcx
0x4102:	mov	rbp, rbx
0x4105:	mov	dword ptr [rsp + 8], 0x5f
0x410d:	add	rax, 0x17
0x4111:	sub	rax, r14
0x4114:	mov	rdx, r15
0x4117:	mov	qword ptr [rsp + 0x40], rax
0x411c:	not	rdx
0x411f:	jmp	0x311c


0x3fe3:	cmp	qword ptr [rsp + 0x38], rbx
0x3fe8:	jne	0x3fd2


0x3fea:	mov	rbx, qword ptr [rsp + 0x50]
0x3fef:	mov	r10d, dword ptr [rsp + 0x5c]
0x3ff4:	movsx	edi, bpl
0x3ff8:	mov	rsi, r12
0x3ffb:	mov	dword ptr [rsp + 0x38], r10d
0x4000:	call	0x1a10


0x3fd2:	mov	rsi, r12
0x3fd5:	mov	edi, 0x20
0x3fda:	add	rbx, 1
0x3fde:	call	0x1a10


0x4005:	mov	r10d, dword ptr [rsp + 0x38]
0x400a:	add	r15, qword ptr [rsp + 0x48]
0x400f:	mov	rbp, rbx
0x4012:	mov	rdx, r15
0x4015:	not	rdx
0x4018:	jmp	0x311c


0x3189:	cmp	r13, rbx
0x318c:	jne	0x3178


0x318e:	mov	rbx, qword ptr [rsp + 8]
0x3193:	cmp	byte ptr [rsp + 0x34], 0
0x3198:	je	0x3d50


0x3178:	mov	rsi, r12
0x317b:	mov	edi, 0x20
0x3180:	add	rbx, 1
0x3184:	call	0x1a10


0x44a2:	cmp	qword ptr [rsp + 0x38], rbx
0x44a7:	jne	0x4491


0x44a9:	jmp	0x3fea


0x4491:	mov	rsi, r12
0x4494:	mov	edi, 0x30
0x4499:	add	rbx, 1
0x449d:	call	0x1a10


0x3e99:	cmp	r13, rbx
0x3e9c:	jne	0x3e88


0x3e9e:	jmp	0x318e


0x3e88:	mov	rsi, r12
0x3e8b:	mov	edi, 0x30
0x3e90:	add	rbx, 1
0x3e94:	call	0x1a10


0x3c93:	cmp	rbx, rbp
0x3c96:	jne	0x3c82


0x3c98:	mov	rbx, qword ptr [rsp + 0x48]
0x3c9d:	mov	r10d, dword ptr [rsp + 0x50]
0x3ca2:	movsx	edi, byte ptr [rsp + 0x40]
0x3ca7:	mov	rsi, r12
0x3caa:	mov	dword ptr [rsp + 0x48], r10d
0x3caf:	call	0x1a10


0x3c82:	mov	rsi, r12
0x3c85:	mov	edi, 0x20
0x3c8a:	add	rbp, 1
0x3c8e:	call	0x1a10


0x3cb4:	mov	r10d, dword ptr [rsp + 0x48]
0x3cb9:	add	r15, qword ptr [rsp + 8]
0x3cbe:	mov	rax, qword ptr [rsp + 0x38]
0x3cc3:	mov	rbp, rbx
0x3cc6:	mov	dword ptr [rsp + 8], 0x2d
0x3cce:	add	rax, 0x17
0x3cd2:	sub	rax, r14
0x3cd5:	mov	rdx, r15
0x3cd8:	mov	qword ptr [rsp + 0x40], rax
0x3cdd:	not	rdx
0x3ce0:	jmp	0x311c


0x3371:	cmp	r13, rbx
0x3374:	jne	0x3360


0x3360:	mov	rsi, r12
0x3363:	mov	edi, 0x30
0x3368:	add	r13, 1
0x336c:	call	0x1a10


0x3f01:	cmp	rbx, rbp
0x3f04:	ja	0x3ef0


0x3f06:	movzx	ebp, byte ptr [rsp + 0x40]
0x3f0b:	mov	rbx, qword ptr [rsp + 0x48]
0x3f10:	mov	r10d, dword ptr [rsp + 0x50]
0x3f15:	add	r15, qword ptr [rsp + 8]
0x3f1a:	mov	eax, r10d
0x3f1d:	sub	eax, r13d
0x3f20:	cmp	r10d, r13d
0x3f23:	mov	r10d, 0
0x3f29:	cmovg	r10d, eax
0x3f2d:	test	bpl, bpl
0x3f30:	mov	rdx, r15
0x3f33:	not	rdx
0x3f36:	jne	0x4063


0x3ef0:	mov	rsi, r12
0x3ef3:	mov	edi, 0x20
0x3ef8:	add	rbp, 1
0x3efc:	call	0x1a10


0x2f29:	cmp	r11d, 0x45
0x2f2d:	je	0x2b10


0x2f33:	mov	rax, qword ptr [rsp]
0x2f37:	mov	esi, 1
0x2f3c:	mov	ecx, dword ptr [rax + 0x18]
0x2f3f:	jmp	0x2ed0


0x2ed0:	mov	eax, ecx
0x2ed2:	xor	r8d, r8d
0x2ed5:	xor	r9d, r9d
0x2ed8:	shr	eax, 0x1f
0x2edb:	mov	r13d, eax
0x2ede:	mov	eax, ecx
0x2ee0:	not	eax
0x2ee2:	shr	eax, 0x1f
0x2ee5:	cmp	r11d, 0x4f
0x2ee9:	jne	0x3c00


0x2f41:	mov	eax, 1
0x2f46:	test	r14b, r14b
0x2f49:	jne	0x3eaa


0x2f4f:	mov	r14d, eax
0x2f52:	mov	r13d, 0x70
0x2f58:	jmp	0x2cad


0x3eaa:	mov	r13d, 0x70
0x3eb0:	mov	byte ptr [rsp + 0x34], 0
0x3eb5:	jmp	0x2cad


0x2cad:	mov	ebp, 0x2520
0x2cb2:	test	r11d, r11d
0x2cb5:	mov	word ptr [rsp + 0x9b], bp
0x2cbd:	jne	0x4510


0x2f5d:	lea	rax, [rip + 0x4e0e]
0x2f64:	mov	r14d, 0xffffffff
0x2f6a:	mov	qword ptr [rsp + 0x38], rax
0x2f6f:	movzx	ebp, byte ptr [rsp + 0x34]
0x2f74:	mov	dword ptr [rsp + 0x40], r10d


0x2fea:	cmp	r11d, 0x45
0x2fee:	je	0x2b10


0x2ff4:	mov	rax, qword ptr [rsp]
0x2ff8:	mov	esi, 2
0x2ffd:	mov	ecx, dword ptr [rax]
0x2fff:	jmp	0x2ed0


0x3004:	mov	rax, qword ptr [rsp]
0x3008:	mov	rdi, qword ptr [rsp + 0x10]
0x300d:	lea	rsi, [rsp + 0x60]
0x3012:	mov	dword ptr [rsp + 0x40], r10d
0x3017:	lea	r14, [rsp + 0xb7]
0x301f:	movdqu	xmm0, xmmword ptr [rax]
0x3023:	movaps	xmmword ptr [rsp + 0x60], xmm0
0x3028:	movdqu	xmm0, xmmword ptr [rax + 0x10]
0x302d:	movaps	xmmword ptr [rsp + 0x70], xmm0
0x3032:	movdqu	xmm0, xmmword ptr [rax + 0x20]
0x3037:	mov	rax, qword ptr [rax + 0x30]
0x303b:	movaps	xmmword ptr [rsp + 0x80], xmm0
0x3043:	mov	qword ptr [rsp + 0x90], rax
0x304b:	call	0x75a0


0x3050:	mov	r10d, dword ptr [rsp + 0x40]
0x3055:	mov	rsi, rax
0x3058:	mov	rcx, rax
0x305b:	lea	rax, [rsp + 0xa0]
0x3063:	movabs	r8, 0x6666666666666667
0x306d:	mov	edi, 0x30
0x3072:	mov	qword ptr [rsp + 0x38], rax
0x3077:	nop	word ptr [rax + rax]
0x3080:	mov	rax, rcx
0x3083:	imul	r8
0x3086:	mov	rax, rcx
0x3089:	sar	rax, 0x3f
0x308d:	sar	rdx, 2
0x3091:	sub	rdx, rax
0x3094:	mov	rax, rdx
0x3097:	lea	rdx, [rdx + rdx*4]
0x309b:	add	rdx, rdx
0x309e:	sub	rcx, rdx
0x30a1:	mov	rdx, rcx
0x30a4:	mov	rcx, rax
0x30a7:	mov	eax, edi
0x30a9:	sub	eax, edx
0x30ab:	add	edx, 0x30
0x30ae:	test	rsi, rsi
0x30b1:	cmovs	edx, eax
0x30b4:	sub	r14, 1
0x30b8:	test	rcx, rcx
0x30bb:	mov	byte ptr [r14], dl
0x30be:	jne	0x3080


0x30c0:	test	r10d, r10d
0x30c3:	mov	eax, 1
0x30c8:	cmovg	eax, r10d
0x30cc:	test	rsi, rsi
0x30cf:	mov	dword ptr [rsp + 0x58], eax
0x30d3:	js	0x3c10


0x3080:	mov	rax, rcx
0x3083:	imul	r8
0x3086:	mov	rax, rcx
0x3089:	sar	rax, 0x3f
0x308d:	sar	rdx, 2
0x3091:	sub	rdx, rax
0x3094:	mov	rax, rdx
0x3097:	lea	rdx, [rdx + rdx*4]
0x309b:	add	rdx, rdx
0x309e:	sub	rcx, rdx
0x30a1:	mov	rdx, rcx
0x30a4:	mov	rcx, rax
0x30a7:	mov	eax, edi
0x30a9:	sub	eax, edx
0x30ab:	add	edx, 0x30
0x30ae:	test	rsi, rsi
0x30b1:	cmovs	edx, eax
0x30b4:	sub	r14, 1
0x30b8:	test	rcx, rcx
0x30bb:	mov	byte ptr [r14], dl
0x30be:	jne	0x3080


0x31b6:	mov	rax, qword ptr [rsp]
0x31ba:	cmp	r11d, 0x4f
0x31be:	mov	esi, 1
0x31c3:	mov	eax, dword ptr [rax + 0x10]
0x31c6:	je	0x2efa


0x2efa:	mov	edx, 0x2520
0x2eff:	xor	r14d, r14d
0x2f02:	mov	word ptr [rsp + 0x9b], dx
0x2f0a:	lea	rdx, [rsp + 0x9b]
0x2f12:	mov	byte ptr [rsp + 0x9d], r11b
0x2f1a:	mov	rbp, rbx
0x2f1d:	mov	r11d, esi
0x2f20:	lea	rax, [rdx + 3]
0x2f24:	jmp	0x2cd2


0x31cc:	lea	edx, [rax + rax*4]
0x31cf:	xor	r9d, r9d
0x31d2:	xor	r13d, r13d
0x31d5:	xor	r8d, r8d
0x31d8:	lea	ecx, [rax + rdx*2]
0x31db:	sar	ecx, 5
0x31de:	add	ecx, 1
0x31e1:	nop	dword ptr [rax]
0x31e8:	lea	rax, [rsp + 0xa0]
0x31f0:	lea	rdi, [rsp + 0xb7]
0x31f8:	mov	r11d, 0xcccccccd
0x31fe:	mov	qword ptr [rsp + 0x38], rax
0x3203:	nop	dword ptr [rax + rax]
0x3208:	test	r8b, 1
0x320c:	lea	r14, [rdi - 1]
0x3210:	je	0x3220


0x338a:	lea	rax, [rip + 0x49e7]
0x3391:	mov	r14d, 0xffffffff
0x3397:	mov	qword ptr [rsp + 0x38], rax
0x339c:	jmp	0x2f6f


0x2f6f:	movzx	ebp, byte ptr [rsp + 0x34]
0x2f74:	mov	dword ptr [rsp + 0x40], r10d


0x33a1:	cmp	r11d, 0x45
0x33a5:	je	0x2b10


0x33ab:	mov	rax, qword ptr [rsp]
0x33af:	mov	edx, 0x92492493
0x33b4:	mov	esi, dword ptr [rax + 0x1c]
0x33b7:	sub	esi, dword ptr [rax + 0x18]
0x33ba:	add	esi, 7
0x33bd:	mov	eax, esi
0x33bf:	imul	edx
0x33c1:	lea	ecx, [rdx + rsi]
0x33c4:	sar	esi, 0x1f
0x33c7:	sar	ecx, 2
0x33ca:	sub	ecx, esi
0x33cc:	mov	esi, 2
0x33d1:	jmp	0x2ed0


0x33d6:	cmp	r11d, 0x45
0x33da:	je	0x2b10


0x33e0:	mov	rcx, qword ptr [rsp]
0x33e4:	mov	edx, 0x92492493
0x33e9:	mov	esi, dword ptr [rcx + 0x14]
0x33ec:	mov	r8d, dword ptr [rcx + 0x1c]
0x33f0:	mov	r14d, dword ptr [rcx + 0x18]
0x33f4:	mov	eax, esi
0x33f6:	mov	ecx, r8d
0x33f9:	sar	eax, 0x1f
0x33fc:	sub	ecx, r14d
0x33ff:	add	ecx, 0x17e
0x3405:	and	eax, 0x190
0x340a:	lea	r9d, [rsi + rax - 0x64]
0x340f:	mov	eax, ecx
0x3411:	imul	edx
0x3413:	lea	eax, [rdx + rcx]
0x3416:	mov	edx, ecx
0x3418:	sar	edx, 0x1f
0x341b:	sar	eax, 2
0x341e:	sub	eax, edx
0x3420:	lea	edx, [rax*8]
0x3427:	sub	edx, eax
0x3429:	mov	eax, r8d
0x342c:	sub	eax, ecx
0x342e:	lea	ebp, [rax + rdx + 3]
0x3432:	test	ebp, ebp
0x3434:	js	0x4260


0x4260:	sub	r9d, 1
0x4264:	mov	edx, 0x16d
0x4269:	test	r9b, 3
0x426d:	jne	0x42a9


0x343a:	test	r9b, 3
0x343e:	mov	eax, 0x16d
0x3443:	jne	0x348a


0x426f:	mov	eax, r9d
0x4272:	mov	edx, 0x51eb851f
0x4277:	imul	edx
0x4279:	mov	eax, r9d
0x427c:	sar	eax, 0x1f
0x427f:	sar	edx, 5
0x4282:	sub	edx, eax
0x4284:	imul	eax, edx, 0x64
0x4287:	mov	edx, 0x16e
0x428c:	cmp	r9d, eax
0x428f:	jne	0x42a9


0x42a9:	add	r8d, edx
0x42ac:	mov	edx, 0x92492493
0x42b1:	mov	ecx, r8d
0x42b4:	sub	ecx, r14d
0x42b7:	add	ecx, 0x17e
0x42bd:	mov	eax, ecx
0x42bf:	sub	r8d, ecx
0x42c2:	imul	edx
0x42c4:	lea	eax, [rdx + rcx]
0x42c7:	mov	edx, ecx
0x42c9:	sar	edx, 0x1f
0x42cc:	sar	eax, 2
0x42cf:	sub	eax, edx
0x42d1:	lea	edx, [rax*8]
0x42d8:	sub	edx, eax
0x42da:	lea	ecx, [r8 + rdx + 3]
0x42df:	mov	r8d, 0xffffffff
0x42e5:	jmp	0x34cf


0x3445:	mov	eax, r9d
0x3448:	mov	edx, 0x51eb851f
0x344d:	mov	ecx, r9d
0x3450:	imul	edx
0x3452:	sar	ecx, 0x1f
0x3455:	mov	eax, 0x16e
0x345a:	mov	dword ptr [rsp + 0x38], edx
0x345e:	sar	edx, 5
0x3461:	sub	edx, ecx
0x3463:	imul	edx, edx, 0x64
0x3466:	cmp	r9d, edx
0x3469:	jne	0x348a


0x348a:	sub	r8d, eax
0x348d:	mov	edx, 0x92492493
0x3492:	mov	ecx, r8d
0x3495:	sub	ecx, r14d
0x3498:	add	ecx, 0x17e
0x349e:	mov	eax, ecx
0x34a0:	sub	r8d, ecx
0x34a3:	imul	edx
0x34a5:	lea	eax, [rdx + rcx]
0x34a8:	mov	edx, ecx
0x34aa:	sar	edx, 0x1f
0x34ad:	sar	eax, 2
0x34b0:	sub	eax, edx
0x34b2:	lea	edx, [rax*8]
0x34b9:	sub	edx, eax
0x34bb:	lea	ecx, [r8 + rdx + 3]
0x34c0:	mov	r8d, 1
0x34c6:	test	ecx, ecx
0x34c8:	jns	0x34cf


0x4291:	mov	eax, r9d
0x4294:	mov	ecx, 0x190
0x4299:	cdq	
0x429a:	idiv	ecx
0x429c:	cmp	edx, 1
0x429f:	sbb	edx, edx
0x42a1:	not	edx
0x42a3:	add	edx, 0x16e
0x42a9:	add	r8d, edx
0x42ac:	mov	edx, 0x92492493
0x42b1:	mov	ecx, r8d
0x42b4:	sub	ecx, r14d
0x42b7:	add	ecx, 0x17e
0x42bd:	mov	eax, ecx
0x42bf:	sub	r8d, ecx
0x42c2:	imul	edx
0x42c4:	lea	eax, [rdx + rcx]
0x42c7:	mov	edx, ecx
0x42c9:	sar	edx, 0x1f
0x42cc:	sar	eax, 2
0x42cf:	sub	eax, edx
0x42d1:	lea	edx, [rax*8]
0x42d8:	sub	edx, eax
0x42da:	lea	ecx, [r8 + rdx + 3]
0x42df:	mov	r8d, 0xffffffff
0x42e5:	jmp	0x34cf


0x34cf:	cmp	r13b, 0x47
0x34d3:	je	0x4167


0x346b:	mov	edx, dword ptr [rsp + 0x38]
0x346f:	sar	edx, 7
0x3472:	mov	eax, edx
0x3474:	sub	eax, ecx
0x3476:	imul	eax, eax, 0x190
0x347c:	cmp	r9d, eax
0x347f:	sete	al
0x3482:	movzx	eax, al
0x3485:	add	eax, 0x16d
0x348a:	sub	r8d, eax
0x348d:	mov	edx, 0x92492493
0x3492:	mov	ecx, r8d
0x3495:	sub	ecx, r14d
0x3498:	add	ecx, 0x17e
0x349e:	mov	eax, ecx
0x34a0:	sub	r8d, ecx
0x34a3:	imul	edx
0x34a5:	lea	eax, [rdx + rcx]
0x34a8:	mov	edx, ecx
0x34aa:	sar	edx, 0x1f
0x34ad:	sar	eax, 2
0x34b0:	sub	eax, edx
0x34b2:	lea	edx, [rax*8]
0x34b9:	sub	edx, eax
0x34bb:	lea	ecx, [r8 + rdx + 3]
0x34c0:	mov	r8d, 1
0x34c6:	test	ecx, ecx
0x34c8:	jns	0x34cf


0x34ca:	mov	ecx, ebp
0x34cc:	xor	r8d, r8d
0x34cf:	cmp	r13b, 0x47
0x34d3:	je	0x4167


0x4167:	mov	eax, 0xfffff894
0x416c:	mov	r9d, dword ptr [rsp + 8]
0x4171:	lea	ecx, [rsi + r8 + 0x76c]
0x4179:	sub	eax, r8d
0x417c:	cmp	esi, eax
0x417e:	setl	r13b
0x4182:	setge	al
0x4185:	test	r9d, r9d
0x4188:	je	0x3935


0x34d9:	cmp	r13b, 0x67
0x34dd:	jne	0x42ea


0x3935:	mov	esi, dword ptr [rsp + 0x24]
0x3939:	cmp	esi, 0x2b
0x393c:	je	0x4027


0x418e:	cmp	dword ptr [rsp + 8], 0x2b
0x4193:	je	0x4027


0x34e3:	mov	ecx, 0x51eb851f
0x34e8:	mov	eax, esi
0x34ea:	mov	r9d, esi
0x34ed:	imul	ecx
0x34ef:	mov	eax, edx
0x34f1:	mov	edx, esi
0x34f3:	sar	edx, 0x1f
0x34f6:	sar	eax, 5
0x34f9:	sub	eax, edx
0x34fb:	imul	eax, eax, 0x64
0x34fe:	sub	r9d, eax
0x3501:	add	r9d, r8d
0x3504:	mov	eax, r9d
0x3507:	imul	ecx
0x3509:	mov	eax, r9d
0x350c:	sar	eax, 0x1f
0x350f:	mov	ecx, edx
0x3511:	sar	ecx, 5
0x3514:	sub	ecx, eax
0x3516:	imul	ecx, ecx, 0x64
0x3519:	sub	r9d, ecx
0x351c:	mov	ecx, r9d
0x351f:	js	0x4124


0x42ea:	mov	eax, ecx
0x42ec:	mov	edx, 0x92492493
0x42f1:	mov	esi, 2
0x42f6:	imul	edx
0x42f8:	lea	eax, [rdx + rcx]
0x42fb:	sar	ecx, 0x1f
0x42fe:	sar	eax, 2
0x4301:	sub	eax, ecx
0x4303:	mov	ecx, eax
0x4305:	add	ecx, 1
0x4308:	jmp	0x2ed0


0x4027:	mov	esi, 4
0x402c:	mov	edx, 0x270f
0x4031:	cmp	edx, ecx
0x4033:	mov	r9d, 1
0x4039:	mov	dword ptr [rsp + 8], 0x2b
0x4041:	jb	0x354c


0x3942:	mov	dword ptr [rsp + 8], esi
0x3946:	xor	r9d, r9d
0x3949:	mov	esi, 4
0x394e:	jmp	0x354c


0x4199:	xor	r9d, r9d
0x419c:	mov	esi, 4
0x41a1:	jmp	0x354c


0x4124:	mov	eax, 0xfffff894
0x4129:	sub	eax, r8d
0x412c:	cmp	esi, eax
0x412e:	jge	0x44fd


0x3525:	mov	esi, dword ptr [rsp + 8]
0x3529:	test	esi, esi
0x352b:	je	0x4141


0x354c:	xor	r8d, r8d
0x354f:	jmp	0x2ee5


0x4047:	cmp	r10d, esi
0x404a:	mov	dword ptr [rsp + 8], 0x2b
0x4052:	setg	r9b
0x4056:	jmp	0x354c


0x4134:	neg	ecx
0x4136:	cmp	dword ptr [rsp + 8], 0
0x413b:	jne	0x3531


0x44fd:	add	ecx, 0x64
0x4500:	cmp	dword ptr [rsp + 8], 0
0x4505:	je	0x4141


0x4141:	mov	eax, dword ptr [rsp + 0x24]
0x4145:	cmp	eax, 0x2b
0x4148:	je	0x44cb


0x3531:	mov	eax, 1
0x3536:	xor	r13d, r13d
0x3539:	cmp	dword ptr [rsp + 8], 0x2b
0x353e:	je	0x44dd


0x2ee5:	cmp	r11d, 0x4f
0x2ee9:	jne	0x3c00


0x450b:	jmp	0x3531


0x44cb:	mov	eax, 1
0x44d0:	xor	r13d, r13d
0x44d3:	mov	esi, 2
0x44d8:	jmp	0x4047


0x414e:	mov	dword ptr [rsp + 8], eax
0x4152:	xor	r9d, r9d
0x4155:	mov	eax, 1
0x415a:	xor	r13d, r13d
0x415d:	mov	esi, 2
0x4162:	jmp	0x354c


0x44dd:	mov	esi, 2
0x44e2:	mov	edx, 0x63
0x44e7:	jmp	0x4031


0x3544:	xor	r9d, r9d
0x3547:	mov	esi, 2
0x354c:	xor	r8d, r8d
0x354f:	jmp	0x2ee5


0x4031:	cmp	edx, ecx
0x4033:	mov	r9d, 1
0x4039:	mov	dword ptr [rsp + 8], 0x2b
0x4041:	jb	0x354c


0x3554:	cmp	r11d, 0x45
0x3558:	je	0x2b10


0x355e:	mov	rax, qword ptr [rsp]
0x3562:	mov	esi, 2
0x3567:	mov	ecx, dword ptr [rax + 8]
0x356a:	jmp	0x2ed0


0x356f:	cmp	r11d, 0x45
0x3573:	je	0x2b10


0x3579:	mov	rax, qword ptr [rsp]
0x357d:	mov	esi, 2
0x3582:	mov	ecx, dword ptr [rax + 4]
0x3585:	jmp	0x2ed0


0x358a:	cmp	r11d, 0x45
0x358e:	je	0x2b10


0x3594:	cmp	r10d, -1
0x3598:	je	0x41b0


0x41b0:	mov	ecx, dword ptr [rsp + 0x500]
0x41b7:	mov	esi, 9
0x41bc:	mov	r10d, 9
0x41c2:	jmp	0x2ed0


0x359e:	cmp	r10d, 8
0x35a2:	jg	0x44ec


0x35a8:	mov	ecx, dword ptr [rsp + 0x500]
0x35af:	mov	esi, r10d
0x35b2:	mov	r8d, 0x66666667
0x35b8:	nop	dword ptr [rax + rax]
0x35c0:	mov	eax, ecx
0x35c2:	add	esi, 1
0x35c5:	sar	ecx, 0x1f
0x35c8:	imul	r8d
0x35cb:	sar	edx, 2
0x35ce:	sub	edx, ecx
0x35d0:	cmp	esi, 9
0x35d3:	mov	ecx, edx
0x35d5:	jne	0x35c0


0x44ec:	mov	ecx, dword ptr [rsp + 0x500]
0x44f3:	jmp	0x35d7


0x35d7:	mov	esi, r10d
0x35da:	jmp	0x2ed0


0x35c0:	mov	eax, ecx
0x35c2:	add	esi, 1
0x35c5:	sar	ecx, 0x1f
0x35c8:	imul	r8d
0x35cb:	sar	edx, 2
0x35ce:	sub	edx, ecx
0x35d0:	cmp	esi, 9
0x35d3:	mov	ecx, edx
0x35d5:	jne	0x35c0


0x35df:	cmp	r11d, 0x45
0x35e3:	je	0x2b10


0x35e9:	mov	ecx, dword ptr [rsp + 0x30]
0x35ed:	mov	esi, 2
0x35f2:	jmp	0x2ed0


0x35f7:	cmp	r11d, 0x45
0x35fb:	je	0x3ea3


0x3ea3:	xor	esi, esi
0x3ea5:	jmp	0x2efa


0x3601:	mov	rax, qword ptr [rsp]
0x3605:	mov	edx, 0x51eb851f
0x360a:	mov	r9d, dword ptr [rsp + 8]
0x360f:	mov	esi, dword ptr [rax + 0x14]
0x3612:	mov	eax, esi
0x3614:	imul	edx
0x3616:	mov	eax, edx
0x3618:	mov	edx, esi
0x361a:	sar	edx, 0x1f
0x361d:	sar	eax, 5
0x3620:	sub	eax, edx
0x3622:	mov	edx, esi
0x3624:	lea	ecx, [rax + 0x13]
0x3627:	imul	eax, eax, 0x64
0x362a:	sub	edx, eax
0x362c:	mov	eax, edx
0x362e:	shr	eax, 0x1f
0x3631:	test	ecx, ecx
0x3633:	setg	dl
0x3636:	and	eax, edx
0x3638:	cmp	esi, 0xfffff894
0x363e:	setl	r13b
0x3642:	sub	ecx, eax
0x3644:	cmp	esi, 0xfffff894
0x364a:	setge	al
0x364d:	test	r9d, r9d
0x3650:	jne	0x3539


0x3656:	cmp	dword ptr [rsp + 0x24], 0x2b
0x365b:	je	0x44dd


0x3539:	cmp	dword ptr [rsp + 8], 0x2b
0x353e:	je	0x44dd


0x3661:	mov	esi, dword ptr [rsp + 0x24]
0x3665:	mov	dword ptr [rsp + 8], esi
0x3669:	jmp	0x3544


0x366e:	test	r11d, r11d
0x3671:	jne	0x2b10


0x3677:	lea	rax, [rip + 0x470c]
0x367e:	mov	r14d, 0xffffffff
0x3684:	mov	qword ptr [rsp + 0x38], rax
0x3689:	jmp	0x2f6f


0x368e:	test	r11d, r11d
0x3691:	jne	0x2b10


0x3697:	mov	r11d, dword ptr [rsp + 8]
0x369c:	test	r11d, r11d
0x369f:	jne	0x43ef


0x36a5:	test	r10d, r10d
0x36a8:	jns	0x43ef


0x43ef:	mov	r14d, r10d
0x43f2:	mov	eax, 0
0x43f7:	sub	r14d, 6
0x43fb:	cmovs	r14d, eax
0x43ff:	lea	rax, [rip + 0x397b]
0x4406:	mov	qword ptr [rsp + 0x38], rax
0x440b:	jmp	0x2f6f


0x36ae:	lea	rax, [rip + 0x46cc]
0x36b5:	mov	r14d, 4
0x36bb:	mov	dword ptr [rsp + 8], 0x2b
0x36c3:	mov	qword ptr [rsp + 0x38], rax
0x36c8:	jmp	0x2f6f


0x36cd:	movzx	ecx, byte ptr [rbx - 1]
0x36d1:	lea	rax, [rbx - 1]
0x36d5:	mov	qword ptr [rsp + 0x38], rax
0x36da:	test	r10d, r10d
0x36dd:	mov	eax, 0
0x36e2:	mov	rdx, r15
0x36e5:	cmovns	eax, r10d
0x36e9:	cmp	cl, 0x25
0x36ec:	not	rdx
0x36ef:	cdqe	
0x36f1:	jne	0x2b0b


0x36f7:	test	rax, rax
0x36fa:	mov	r14d, 1
0x3700:	mov	rbp, qword ptr [rsp + 0x38]
0x3705:	cmovne	r14, rax
0x3709:	mov	r13d, 1
0x370f:	jmp	0x2b54


0x2b54:	cmp	rdx, r14
0x2b57:	jbe	0x29bf


0x3714:	cmp	r11d, 0x45
0x3718:	je	0x2b10


0x371e:	test	r14b, r14b
0x3721:	je	0x2cad


0x3727:	mov	byte ptr [rsp + 0x34], r14b
0x372c:	jmp	0x2caa


0x3731:	test	r10d, r10d
0x3734:	mov	eax, 0
0x3739:	mov	r14d, 1
0x373f:	cmovns	eax, r10d
0x3743:	mov	rdx, r15
0x3746:	cdqe	
0x3748:	not	rdx
0x374b:	test	rax, rax
0x374e:	cmovne	r14, rax
0x3752:	test	r11d, r11d
0x3755:	jne	0x41c7


0x375b:	cmp	rdx, r14
0x375e:	jbe	0x29bf


0x41c7:	mov	rbp, rbx
0x41ca:	mov	qword ptr [rsp + 0x38], rbx
0x41cf:	mov	r13d, 1
0x41d5:	jmp	0x2b54


0x3764:	test	r12, r12
0x3767:	je	0x2a0a


0x376d:	cmp	r10d, 1
0x3771:	jle	0x2a02


0x2a02:	mov	rsi, r12
0x2a05:	call	0x1a10


0x3777:	mov	eax, dword ptr [rsp + 8]
0x377b:	movsxd	r10, r10d
0x377e:	lea	r13, [r10 - 1]
0x3782:	cmp	eax, 0x30
0x3785:	je	0x44ae


0x44ae:	xor	ebp, ebp
0x44b0:	mov	rsi, r12
0x44b3:	mov	edi, 0x30
0x44b8:	add	rbp, 1
0x44bc:	call	0x1a10


0x378b:	xor	ebp, ebp
0x378d:	cmp	eax, 0x2b
0x3790:	je	0x44ae


0x3796:	mov	rsi, r12
0x3799:	mov	edi, 0x20
0x379e:	add	rbp, 1
0x37a2:	call	0x1a10


0x37a7:	cmp	r13, rbp
0x37aa:	jne	0x3796


0x37ac:	jmp	0x29ff


0x44c1:	cmp	r13, rbp
0x44c4:	jne	0x44b0


0x44c6:	jmp	0x29ff


0x44b0:	mov	rsi, r12
0x44b3:	mov	edi, 0x30
0x44b8:	add	rbp, 1
0x44bc:	call	0x1a10


0x37b1:	movzx	eax, byte ptr [rbx + 1]
0x37b5:	lea	rdx, [rbx + 1]
0x37b9:	cmp	al, 0x3a
0x37bb:	je	0x43a1


0x43a1:	lea	rcx, [rbx + 2]
0x43a5:	mov	r14d, 1
0x43ab:	mov	rdx, rcx
0x43ae:	add	rcx, 1
0x43b2:	movzx	eax, byte ptr [rcx - 1]
0x43b6:	add	r14, 1
0x43ba:	cmp	al, 0x3a
0x43bc:	jne	0x37c7


0x37c1:	mov	r14d, 1
0x37c7:	cmp	al, 0x7a
0x37c9:	jne	0x2b10


0x43c2:	jmp	0x43ab


0x37c7:	cmp	al, 0x7a
0x37c9:	jne	0x2b10


0x37cf:	mov	rbx, rdx
0x37d2:	mov	rax, qword ptr [rsp]
0x37d6:	mov	ecx, dword ptr [rax + 0x20]
0x37d9:	test	ecx, ecx
0x37db:	js	0x405b


0x43ab:	mov	rdx, rcx
0x43ae:	add	rcx, 1
0x43b2:	movzx	eax, byte ptr [rcx - 1]
0x43b6:	add	r14, 1
0x43ba:	cmp	al, 0x3a
0x43bc:	jne	0x37c7


0x405b:	mov	rbp, rbx
0x405e:	jmp	0x2a10


0x37e1:	mov	rcx, qword ptr [rax + 0x28]
0x37e5:	mov	r13d, 1
0x37eb:	test	ecx, ecx
0x37ed:	js	0x3803


0x3803:	mov	eax, ecx
0x3805:	mov	edx, 0x91a2b3c5
0x380a:	mov	r9d, ecx
0x380d:	imul	edx
0x380f:	sar	r9d, 0x1f
0x3813:	mov	r8d, 0x88888889
0x3819:	mov	eax, ecx
0x381b:	add	edx, ecx
0x381d:	sar	edx, 0xb
0x3820:	sub	edx, r9d
0x3823:	mov	ebp, edx
0x3825:	imul	r8d
0x3828:	lea	esi, [rdx + rcx]
0x382b:	sar	esi, 5
0x382e:	sub	esi, r9d
0x3831:	mov	eax, esi
0x3833:	imul	r8d
0x3836:	mov	eax, esi
0x3838:	sar	eax, 0x1f
0x383b:	lea	r8d, [rdx + rsi]
0x383f:	sar	r8d, 5
0x3843:	sub	r8d, eax
0x3846:	mov	eax, esi
0x3848:	imul	r8d, r8d, 0x3c
0x384c:	imul	esi, esi, 0x3c
0x384f:	sub	eax, r8d
0x3852:	sub	ecx, esi
0x3854:	cmp	r14, 1
0x3858:	mov	r8d, eax
0x385b:	je	0x430d


0x37ef:	mov	r13d, 0
0x37f5:	jne	0x3803


0x430d:	imul	ecx, ebp, 0x64
0x4310:	mov	eax, r13d
0x4313:	mov	r9d, 1
0x4319:	xor	eax, 1
0x431c:	mov	esi, 6
0x4321:	add	ecx, r8d
0x4324:	mov	r8d, 4
0x432a:	jmp	0x2ee5


0x3861:	jb	0x43d1


0x37f7:	mov	rax, qword ptr [rsp + 0x28]
0x37fc:	cmp	byte ptr [rax], 0x2d
0x37ff:	sete	r13b
0x3803:	mov	eax, ecx
0x3805:	mov	edx, 0x91a2b3c5
0x380a:	mov	r9d, ecx
0x380d:	imul	edx
0x380f:	sar	r9d, 0x1f
0x3813:	mov	r8d, 0x88888889
0x3819:	mov	eax, ecx
0x381b:	add	edx, ecx
0x381d:	sar	edx, 0xb
0x3820:	sub	edx, r9d
0x3823:	mov	ebp, edx
0x3825:	imul	r8d
0x3828:	lea	esi, [rdx + rcx]
0x382b:	sar	esi, 5
0x382e:	sub	esi, r9d
0x3831:	mov	eax, esi
0x3833:	imul	r8d
0x3836:	mov	eax, esi
0x3838:	sar	eax, 0x1f
0x383b:	lea	r8d, [rdx + rsi]
0x383f:	sar	r8d, 5
0x3843:	sub	r8d, eax
0x3846:	mov	eax, esi
0x3848:	imul	r8d, r8d, 0x3c
0x384c:	imul	esi, esi, 0x3c
0x384f:	sub	eax, r8d
0x3852:	sub	ecx, esi
0x3854:	cmp	r14, 1
0x3858:	mov	r8d, eax
0x385b:	je	0x430d


0x43d1:	imul	ecx, ebp, 0x64
0x43d4:	xor	r8d, r8d
0x43d7:	mov	r9d, 1
0x43dd:	mov	esi, 5
0x43e2:	add	ecx, eax
0x43e4:	mov	eax, r13d
0x43e7:	xor	eax, 1
0x43ea:	jmp	0x2ee5


0x3867:	cmp	r14, 2
0x386b:	je	0x4213


0x4213:	imul	r8d, r8d, 0x64
0x4217:	mov	r9d, 1
0x421d:	mov	esi, 9
0x4222:	imul	eax, ebp, 0x2710
0x4228:	add	eax, r8d
0x422b:	mov	r8d, 0x14
0x4231:	add	ecx, eax
0x4233:	mov	eax, r13d
0x4236:	xor	eax, 1
0x4239:	jmp	0x2ee5


0x3871:	cmp	r14, 3
0x3875:	jne	0x43c4


0x387b:	test	ecx, ecx
0x387d:	jne	0x4213


0x43c4:	movzx	ecx, byte ptr [rbx]
0x43c7:	mov	qword ptr [rsp + 0x38], rbx
0x43cc:	jmp	0x36da


0x3883:	test	eax, eax
0x3885:	jne	0x430d


0x36da:	test	r10d, r10d
0x36dd:	mov	eax, 0
0x36e2:	mov	rdx, r15
0x36e5:	cmovns	eax, r10d
0x36e9:	cmp	cl, 0x25
0x36ec:	not	rdx
0x36ef:	cdqe	
0x36f1:	jne	0x2b0b


0x388b:	mov	eax, r13d
0x388e:	mov	ecx, ebp
0x3890:	mov	r9d, 1
0x3896:	xor	eax, 1
0x3899:	mov	esi, 3
0x389e:	jmp	0x2ee5


0x38b2:	mov	r9, qword ptr [rsp]
0x38b6:	mov	ecx, 0x92492493
0x38bb:	mov	eax, dword ptr [r9 + 0x18]
0x38bf:	lea	esi, [rax + 6]
0x38c2:	mov	dword ptr [rsp + 0x38], eax
0x38c6:	mov	eax, esi
0x38c8:	imul	ecx
0x38ca:	lea	eax, [rdx + rsi]
0x38cd:	mov	edx, esi
0x38cf:	sar	edx, 0x1f
0x38d2:	sar	eax, 2
0x38d5:	sub	eax, edx
0x38d7:	lea	edx, [rax*8]
0x38de:	sub	edx, eax
0x38e0:	mov	eax, edx
0x38e2:	mov	edx, dword ptr [r9 + 0x1c]
0x38e6:	sub	eax, esi
0x38e8:	lea	esi, [rax + rdx + 7]
0x38ec:	mov	eax, esi
0x38ee:	imul	ecx
0x38f0:	jmp	0x33c1


0x33c1:	lea	ecx, [rdx + rsi]
0x33c4:	sar	esi, 0x1f
0x33c7:	sar	ecx, 2
0x33ca:	sub	ecx, esi
0x33cc:	mov	esi, 2
0x33d1:	jmp	0x2ed0


0x38f5:	cmp	r11d, 0x45
0x38f9:	je	0x3ea3


0x38ff:	cmp	r11d, 0x4f
0x3903:	je	0x2b10


0x3909:	mov	rax, qword ptr [rsp]
0x390d:	mov	r8d, dword ptr [rsp + 8]
0x3912:	mov	eax, dword ptr [rax + 0x14]
0x3915:	cmp	eax, 0xfffff894
0x391a:	lea	ecx, [rax + 0x76c]
0x3920:	setl	r13b
0x3924:	cmp	eax, 0xfffff894
0x3929:	setge	al
0x392c:	test	r8d, r8d
0x392f:	jne	0x418e


0x3953:	movzx	edi, byte ptr [rsp + 0x34]
0x3958:	test	r14b, r14b
0x395b:	mov	eax, 0
0x3960:	mov	dword ptr [rsp + 0x38], r10d
0x3965:	cmovne	edi, eax
0x3968:	mov	byte ptr [rsp + 0x34], dil
0x396d:	mov	rdi, qword ptr [rsp + 0x28]
0x3972:	call	0x1970


0x3977:	movsxd	r10, dword ptr [rsp + 0x38]
0x397c:	mov	r13, rax
0x397f:	mov	eax, 0
0x3984:	mov	rdx, r15
0x3987:	not	rdx
0x398a:	test	r10d, r10d
0x398d:	cmovns	rax, r10
0x3991:	cmp	r13, rax
0x3994:	mov	rbp, rax
0x3997:	cmovae	rbp, r13
0x399b:	cmp	rdx, rbp
0x399e:	jbe	0x29bf


0x39a4:	test	r12, r12
0x39a7:	je	0x3a1f


0x3a1f:	add	r15, rbp
0x3a22:	mov	rbp, rbx
0x3a25:	jmp	0x2a10


0x39a9:	cmp	r13, rax
0x39ac:	jae	0x39fb


0x39ae:	mov	edi, dword ptr [rsp + 8]
0x39b2:	mov	rax, r10
0x39b5:	sub	rax, r13
0x39b8:	mov	qword ptr [rsp + 0x38], rax
0x39bd:	cmp	edi, 0x30
0x39c0:	je	0x4443


0x39fb:	test	r14b, r14b
0x39fe:	jne	0x4383


0x4443:	cmp	qword ptr [rsp + 0x38], 0
0x4449:	je	0x39fb


0x39c6:	cmp	edi, 0x2b
0x39c9:	je	0x4443


0x3a04:	cmp	byte ptr [rsp + 0x34], 0
0x3a09:	je	0x4369


0x4383:	mov	rsi, qword ptr [rsp + 0x28]
0x4388:	mov	rdx, r13
0x438b:	mov	rdi, r12
0x438e:	call	0x2840


0x444f:	xor	edx, edx
0x4451:	mov	qword ptr [rsp + 8], rbx
0x4456:	mov	rbx, rdx
0x4459:	mov	rsi, r12
0x445c:	mov	edi, 0x30
0x4461:	add	rbx, 1
0x4465:	call	0x1a10


0x39cf:	xor	edx, edx
0x39d1:	test	rax, rax
0x39d4:	je	0x39fb


0x4369:	mov	rdi, qword ptr [rsp + 0x28]
0x436e:	mov	rcx, r12
0x4371:	mov	edx, 1
0x4376:	mov	rsi, r13
0x4379:	call	0x1bf0


0x3a0f:	mov	rsi, qword ptr [rsp + 0x28]
0x3a14:	mov	rdx, r13
0x3a17:	mov	rdi, r12
0x3a1a:	call	0x28a0


0x39d6:	mov	qword ptr [rsp + 8], rbx
0x39db:	mov	rbx, rdx
0x39de:	mov	rsi, r12
0x39e1:	mov	edi, 0x20
0x39e6:	add	rbx, 1
0x39ea:	call	0x1a10


0x437e:	jmp	0x3a1f


0x39ef:	cmp	qword ptr [rsp + 0x38], rbx
0x39f4:	jne	0x39de


0x39f6:	mov	rbx, qword ptr [rsp + 8]
0x39fb:	test	r14b, r14b
0x39fe:	jne	0x4383


0x39de:	mov	rsi, r12
0x39e1:	mov	edi, 0x20
0x39e6:	add	rbx, 1
0x39ea:	call	0x1a10


0x446a:	cmp	qword ptr [rsp + 0x38], rbx
0x446f:	jne	0x4459


0x4471:	jmp	0x39f6


0x4459:	mov	rsi, r12
0x445c:	mov	edi, 0x30
0x4461:	add	rbx, 1
0x4465:	call	0x1a10


0x4393:	jmp	0x3a1f


0x3a2a:	cmp	r11d, 0x45
0x3a2e:	je	0x3ea3


0x3a34:	mov	rax, qword ptr [rsp]
0x3a38:	mov	edx, 0x51eb851f
0x3a3d:	mov	esi, dword ptr [rax + 0x14]
0x3a40:	mov	eax, esi
0x3a42:	imul	edx
0x3a44:	mov	eax, esi
0x3a46:	sar	eax, 0x1f
0x3a49:	mov	ecx, edx
0x3a4b:	sar	ecx, 5
0x3a4e:	sub	ecx, eax
0x3a50:	mov	eax, esi
0x3a52:	imul	ecx, ecx, 0x64
0x3a55:	sub	eax, ecx
0x3a57:	mov	ecx, eax
0x3a59:	jns	0x3525


0x3a5f:	neg	eax
0x3a61:	add	ecx, 0x64
0x3a64:	cmp	esi, 0xfffff893
0x3a6a:	cmovle	ecx, eax
0x3a6d:	jmp	0x3525


0x3a72:	cmp	r11d, 0x45
0x3a76:	je	0x2b10


0x3a7c:	mov	rax, qword ptr [rsp]
0x3a80:	mov	esi, 2
0x3a85:	mov	ecx, dword ptr [rax + 0xc]
0x3a88:	jmp	0x2ed0


0x3a8d:	cmp	r11d, 0x45
0x3a91:	je	0x2b10


0x3a97:	mov	rax, qword ptr [rsp]
0x3a9b:	mov	ecx, dword ptr [rax + 0xc]
0x3a9e:	mov	r8d, dword ptr [rsp + 8]
0x3aa3:	mov	esi, 2
0x3aa8:	test	r8d, r8d
0x3aab:	jne	0x2ed0


0x3ab1:	mov	dword ptr [rsp + 8], 0x5f
0x3ab9:	jmp	0x2ed0


0x3abe:	cmp	r11d, 0x45
0x3ac2:	je	0x2b10


0x3ac8:	mov	rax, qword ptr [rsp]
0x3acc:	mov	esi, 3
0x3ad1:	mov	eax, dword ptr [rax + 0x1c]
0x3ad4:	cmp	eax, -1
0x3ad7:	lea	ecx, [rax + 1]
0x3ada:	setl	r13b
0x3ade:	cmp	eax, -1
0x3ae1:	setge	al
0x3ae4:	xor	r8d, r8d
0x3ae7:	xor	r9d, r9d
0x3aea:	jmp	0x2ee5


0x3aef:	cmp	r11d, 0x45
0x3af3:	je	0x2b10


0x3af9:	mov	rax, qword ptr [rsp]
0x3afd:	mov	ecx, dword ptr [rax + 8]
0x3b00:	jmp	0x3a9e


0x3a9e:	mov	r8d, dword ptr [rsp + 8]
0x3aa3:	mov	esi, 2
0x3aa8:	test	r8d, r8d
0x3aab:	jne	0x2ed0


0x3b02:	cmp	r11d, 0x45
0x3b06:	je	0x2b10


0x3b0c:	mov	ecx, dword ptr [rsp + 0x30]
0x3b10:	jmp	0x3a9e


0x3b12:	cmp	r11d, 0x45
0x3b16:	je	0x2b10


0x3b1c:	mov	rax, qword ptr [rsp]
0x3b20:	mov	esi, 2
0x3b25:	mov	eax, dword ptr [rax + 0x10]
0x3b28:	cmp	eax, -1
0x3b2b:	lea	ecx, [rax + 1]
0x3b2e:	setl	r13b
0x3b32:	cmp	eax, -1
0x3b35:	setge	al
0x3b38:	xor	r8d, r8d
0x3b3b:	xor	r9d, r9d
0x3b3e:	jmp	0x2ee5


0x3b43:	test	r10d, r10d
0x3b46:	mov	r13d, 0
0x3b4c:	mov	eax, 1
0x3b51:	cmovns	r13d, r10d
0x3b55:	movsxd	r13, r13d
0x3b58:	test	r13, r13
0x3b5b:	cmove	r13, rax
0x3b5f:	mov	rax, r15
0x3b62:	not	rax
0x3b65:	cmp	rax, r13
0x3b68:	jbe	0x29bf


0x3b6e:	test	r12, r12
0x3b71:	je	0x2fdf


0x3b77:	cmp	r10d, 1
0x3b7b:	jle	0x3bb2


0x3bb2:	mov	rsi, r12
0x3bb5:	mov	edi, 0xa
0x3bba:	call	0x1a10


0x3b7d:	mov	eax, dword ptr [rsp + 8]
0x3b81:	movsxd	r10, r10d
0x3b84:	lea	r14, [r10 - 1]
0x3b88:	cmp	eax, 0x30
0x3b8b:	je	0x434c


0x434c:	xor	ebp, ebp
0x434e:	mov	rsi, r12
0x4351:	mov	edi, 0x30
0x4356:	add	rbp, 1
0x435a:	call	0x1a10


0x3b91:	xor	ebp, ebp
0x3b93:	cmp	eax, 0x2b
0x3b96:	je	0x434c


0x3b9c:	mov	rsi, r12
0x3b9f:	mov	edi, 0x20
0x3ba4:	add	rbp, 1
0x3ba8:	call	0x1a10


0x3bad:	cmp	r14, rbp
0x3bb0:	jne	0x3b9c


0x435f:	cmp	r14, rbp
0x4362:	jne	0x434e


0x4364:	jmp	0x3bb2


0x434e:	mov	rsi, r12
0x4351:	mov	edi, 0x30
0x4356:	add	rbp, 1
0x435a:	call	0x1a10


0x3bbf:	jmp	0x2fdf


0x3bc4:	xor	eax, eax
0x3bc6:	jmp	0x2f46


0x2f46:	test	r14b, r14b
0x2f49:	jne	0x3eaa


0x3bcb:	movzx	eax, byte ptr [rsp + 0x34]
0x3bd0:	test	r14b, r14b
0x3bd3:	cmovne	eax, r14d
0x3bd7:	cmp	r11d, 0x45
0x3bdb:	je	0x4398


0x4398:	mov	byte ptr [rsp + 0x34], al
0x439c:	jmp	0x2b10


0x3be1:	mov	r13d, edi
0x3be4:	mov	byte ptr [rsp + 0x34], al
0x3be8:	xor	r14d, r14d
0x3beb:	jmp	0x2cad


0x3bf0:	xor	r14d, r14d
0x3bf3:	jmp	0x37d2


0x37d2:	mov	rax, qword ptr [rsp]
0x37d6:	mov	ecx, dword ptr [rax + 0x20]
0x37d9:	test	ecx, ecx
0x37db:	js	0x405b


0x4517:	nop	word ptr [rax + rax]


0x46af:	nop	


0x47eb:	nop	dword ptr [rax + rax]


0x488f:	nop	


0x4977:	nop	word ptr [rax + rax]


0x4a13:	mov	byte ptr [rsp + 0xe], 1
0x4a18:	mov	byte ptr [rsp + 0x7c], 0
0x4a1d:	xor	r12d, r12d
0x4a20:	mov	qword ptr [rsp + 0x50], 0
0x4a29:	mov	byte ptr [rsp + 0xf], 1
0x4a2e:	mov	byte ptr [rsp + 0xd], 0
0x4a33:	lea	rax, [rip + 0x35ab]
0x4a3a:	mov	qword ptr [rsp + 0x18], 1
0x4a43:	xor	r15d, r15d
0x4a46:	mov	dword ptr [rsp + 8], 2
0x4a4e:	mov	qword ptr [rsp + 0x48], rax
0x4a53:	xor	r11d, r11d
0x4a56:	mov	rax, rbp
0x4a59:	mov	r8d, r12d
0x4a5c:	mov	rbp, r11
0x4a5f:	mov	r11, rax
0x4a62:	nop	word ptr [rax + rax]
0x4a68:	cmp	r11, rbp
0x4a6b:	setne	r12b
0x4a6f:	cmp	r11, -1
0x4a73:	jne	0x4a82


0x4a75:	mov	rax, qword ptr [rsp + 0x10]
0x4a7a:	cmp	byte ptr [rax + rbp], 0
0x4a7e:	setne	r12b
0x4a82:	test	r12b, r12b
0x4a85:	je	0x50e0


0x4a82:	test	r12b, r12b
0x4a85:	je	0x50e0


0x50e0:	cmp	dword ptr [rsp + 8], 2
0x50e5:	movzx	ebx, byte ptr [rsp + 0xf]
0x50ea:	mov	r12d, r8d
0x50ed:	mov	rbp, r11
0x50f0:	sete	dl
0x50f3:	mov	eax, ebx
0x50f5:	test	r15, r15
0x50f8:	sete	cl
0x50fb:	and	eax, edx
0x50fd:	and	al, cl
0x50ff:	jne	0x5b66


0x4a8b:	cmp	dword ptr [rsp + 8], 2
0x4a90:	mov	rdi, qword ptr [rsp + 0x10]
0x4a95:	lea	r9, [rdi + rbp]
0x4a99:	setne	al
0x4a9c:	and	al, byte ptr [rsp + 0xd]
0x4aa0:	mov	r10d, eax
0x4aa3:	je	0x4b50


0x5105:	mov	eax, ebx
0x5107:	xor	eax, 1
0x510a:	and	dl, al
0x510c:	je	0x5a7c


0x5b66:	mov	dword ptr [rsp + 8], 2
0x5b6e:	jmp	0x5509


0x4b50:	movzx	ebx, byte ptr [r9]
0x4b54:	cmp	bl, 0x7e
0x4b57:	ja	0x4e78


0x4aa9:	mov	rax, qword ptr [rsp + 0x18]
0x4aae:	test	rax, rax
0x4ab1:	je	0x4ee0


0x5a7c:	mov	rbx, qword ptr [rsp + 0x48]
0x5a81:	test	rbx, rbx
0x5a84:	je	0x5ab2


0x5112:	cmp	byte ptr [rsp + 0x7c], 0
0x5117:	je	0x5a7a


0x5509:	cmp	byte ptr [rsp + 0xd], 0
0x550e:	je	0x5520


0x4b5d:	lea	rcx, [rip + 0x3508]
0x4b64:	movzx	edx, bl
0x4b67:	movsxd	rax, dword ptr [rcx + rdx*4]
0x4b6b:	add	rax, rcx
0x4b6e:	jmp	rax


0x4e78:	cmp	qword ptr [rsp + 0x58], 1
0x4e7e:	jne	0x5228


0x4ee0:	movzx	ebx, byte ptr [r9]
0x4ee4:	cmp	bl, 0x7e
0x4ee7:	ja	0x4e70


0x4ab7:	cmp	r11, -1
0x4abb:	lea	rbx, [rbp + rax]
0x4ac0:	jne	0x4af0


0x5ab2:	cmp	r13, r15
0x5ab5:	jbe	0x5559


0x5a86:	test	al, al
0x5a88:	je	0x5ab2


0x5a7a:	mov	eax, edx
0x5a7c:	mov	rbx, qword ptr [rsp + 0x48]
0x5a81:	test	rbx, rbx
0x5a84:	je	0x5ab2


0x511d:	cmp	byte ptr [rsp + 0xe], 0
0x5122:	jne	0x5b1d


0x5510:	test	al, al
0x5512:	mov	eax, 4
0x5517:	cmove	eax, dword ptr [rsp + 8]
0x551c:	mov	dword ptr [rsp + 8], eax


0x4e84:	mov	qword ptr [rsp + 0x38], r11
0x4e89:	mov	byte ptr [rsp + 0x30], r8b
0x4e8e:	mov	byte ptr [rsp + 0x28], r10b
0x4e93:	call	0x1c40


0x5228:	lea	rax, [rsp + 0xa0]
0x5230:	cmp	r11, -1
0x5234:	mov	qword ptr [rsp + 0xa0], 0
0x5240:	mov	qword ptr [rsp + 0x28], rax
0x5245:	jne	0x5274


0x4ee9:	lea	rcx, [rip + 0x3378]
0x4ef0:	movzx	edx, bl
0x4ef3:	movsxd	rax, dword ptr [rcx + rdx*4]
0x4ef7:	add	rax, rcx
0x4efa:	jmp	rax


0x4e70:	xor	r10d, r10d
0x4e73:	nop	dword ptr [rax + rax]
0x4e78:	cmp	qword ptr [rsp + 0x58], 1
0x4e7e:	jne	0x5228


0x4ac2:	cmp	rax, 1
0x4ac6:	jbe	0x4af0


0x4af0:	cmp	rbx, r11
0x4af3:	mov	byte ptr [rsp + 0x28], r10b
0x4af8:	ja	0x50b0


0x5abb:	mov	byte ptr [r14 + r15], 0
0x5ac0:	jmp	0x5559


0x5a8a:	movzx	ecx, byte ptr [rbx]
0x5a8d:	mov	rax, rbx
0x5a90:	test	cl, cl
0x5a92:	je	0x5ab2


0x5128:	test	r13, r13
0x512b:	sete	al
0x512e:	cmp	qword ptr [rsp + 0x50], 0
0x5134:	setne	dl
0x5137:	and	al, dl
0x5139:	je	0x5b5c


0x5247:	mov	rdi, qword ptr [rsp + 0x10]
0x524c:	mov	byte ptr [rsp + 0x40], r8b
0x5251:	mov	byte ptr [rsp + 0x38], r10b
0x5256:	mov	qword ptr [rsp + 0x30], r9
0x525b:	call	0x1970


0x5274:	lea	rax, [rsp + 0x9c]
0x527c:	xor	ecx, ecx
0x527e:	mov	byte ptr [rsp + 0x7e], bl
0x5282:	mov	byte ptr [rsp + 0x7d], r8b
0x5287:	mov	rbx, rcx
0x528a:	mov	qword ptr [rsp + 0x88], r9
0x5292:	mov	qword ptr [rsp + 0x38], rax
0x5297:	mov	byte ptr [rsp + 0x7f], r10b
0x529c:	mov	qword ptr [rsp + 0x80], r15
0x52a4:	mov	qword ptr [rsp + 0x40], r14
0x52a9:	mov	qword ptr [rsp + 0x70], r13
0x52ae:	mov	qword ptr [rsp + 0x30], r11
0x52b3:	mov	rax, qword ptr [rsp + 0x10]
0x52b8:	lea	r14, [rbp + rbx]
0x52bd:	mov	rdx, qword ptr [rsp + 0x30]
0x52c2:	mov	rcx, qword ptr [rsp + 0x28]
0x52c7:	mov	rdi, qword ptr [rsp + 0x38]
0x52cc:	lea	r13, [rax + r14]
0x52d0:	sub	rdx, r14
0x52d3:	mov	rsi, r13
0x52d6:	call	0x6ef0


0x4ac8:	mov	byte ptr [rsp + 0x38], r8b
0x4acd:	mov	byte ptr [rsp + 0x30], r10b
0x4ad2:	mov	qword ptr [rsp + 0x28], r9
0x4ad7:	call	0x1970


0x4afe:	mov	rdx, qword ptr [rsp + 0x18]
0x4b03:	mov	rsi, qword ptr [rsp + 0x48]
0x4b08:	mov	rdi, r9
0x4b0b:	mov	qword ptr [rsp + 0x40], r11
0x4b10:	mov	byte ptr [rsp + 0x38], r8b
0x4b15:	mov	qword ptr [rsp + 0x30], r9
0x4b1a:	call	0x1a20


0x50b0:	xor	r10d, r10d
0x50b3:	jmp	0x4b50


0x5a94:	mov	rdx, r15
0x5a97:	sub	rax, r15
0x5a9a:	cmp	r13, rdx
0x5a9d:	jbe	0x5aa3


0x5b5c:	movzx	eax, byte ptr [rsp + 0x7c]
0x5b61:	jmp	0x5a7c


0x513f:	mov	r13, qword ptr [rsp + 0x50]
0x5144:	lea	rbx, [rip + 0x2e9a]
0x514b:	mov	byte ptr [r14], 0x27
0x514f:	mov	dword ptr [rsp + 8], 2
0x5157:	mov	r15d, 1
0x515d:	mov	qword ptr [rsp + 0x18], 1
0x5166:	mov	byte ptr [rsp + 0xf], 0
0x516b:	mov	qword ptr [rsp + 0x48], rbx
0x5170:	mov	byte ptr [rsp + 0x7c], al
0x5174:	jmp	0x4a53


0x5aa3:	add	rdx, 1
0x5aa7:	movzx	ecx, byte ptr [rax + rdx]
0x5aab:	test	cl, cl
0x5aad:	jne	0x5a9a


0x5a9f:	mov	byte ptr [r14 + rdx], cl
0x5aa3:	add	rdx, 1
0x5aa7:	movzx	ecx, byte ptr [rax + rdx]
0x5aab:	test	cl, cl
0x5aad:	jne	0x5a9a


0x4a53:	xor	r11d, r11d
0x4a56:	mov	rax, rbp
0x4a59:	mov	r8d, r12d
0x4a5c:	mov	rbp, r11
0x4a5f:	mov	r11, rax
0x4a62:	nop	word ptr [rax + rax]
0x4a68:	cmp	r11, rbp
0x4a6b:	setne	r12b
0x4a6f:	cmp	r11, -1
0x4a73:	jne	0x4a82


0x5aaf:	mov	r15, rdx
0x5ab2:	cmp	r13, r15
0x5ab5:	jbe	0x5559


0x5a9a:	cmp	r13, rdx
0x5a9d:	jbe	0x5aa3


0x4b1f:	test	eax, eax
0x4b21:	mov	r9, qword ptr [rsp + 0x30]
0x4b26:	movzx	r8d, byte ptr [rsp + 0x38]
0x4b2c:	mov	r11, qword ptr [rsp + 0x40]
0x4b31:	jne	0x50b0


0x4b37:	cmp	byte ptr [rsp + 0xf], 0
0x4b3c:	movzx	r10d, byte ptr [rsp + 0x28]
0x4b42:	jne	0x5ac5


0x5ac5:	cmp	dword ptr [rsp + 8], 2
0x5aca:	movzx	ebx, byte ptr [rsp + 0xf]
0x5acf:	mov	rbp, r11
0x5ad2:	sete	al
0x5ad5:	mov	byte ptr [rsp + 0xd], bl
0x5ad9:	jmp	0x5509


0x52db:	test	rax, rax
0x52de:	mov	r15, rax
0x52e1:	je	0x5331


0x5331:	mov	edx, r12d
0x5334:	mov	rdi, rbx
0x5337:	movzx	r8d, byte ptr [rsp + 0x7d]
0x533d:	xor	edx, 1
0x5340:	movzx	ebx, byte ptr [rsp + 0x7e]
0x5345:	movzx	r10d, byte ptr [rsp + 0x7f]
0x534b:	and	dl, byte ptr [rsp + 0xd]
0x534f:	mov	r15, qword ptr [rsp + 0x80]
0x5357:	mov	r14, qword ptr [rsp + 0x40]
0x535c:	mov	r13, qword ptr [rsp + 0x70]
0x5361:	mov	r11, qword ptr [rsp + 0x30]
0x5366:	cmp	rdi, 1
0x536a:	jbe	0x596b


0x52e3:	cmp	rax, -1
0x52e7:	je	0x5905


0x596b:	mov	eax, edx
0x596d:	jmp	0x4ec7


0x5370:	mov	rcx, rdi
0x5373:	xor	esi, esi
0x5375:	movzx	r9d, byte ptr [rsp + 0xf]
0x537b:	add	rcx, rbp
0x537e:	mov	rdi, qword ptr [rsp + 0x10]
0x5383:	jmp	0x543e


0x5905:	mov	rdi, rbx
0x5908:	movzx	r8d, byte ptr [rsp + 0x7d]
0x590e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x5913:	movzx	r10d, byte ptr [rsp + 0x7f]
0x5919:	mov	r15, qword ptr [rsp + 0x80]
0x5921:	xor	r12d, r12d
0x5924:	mov	r14, qword ptr [rsp + 0x40]
0x5929:	mov	r13, qword ptr [rsp + 0x70]
0x592e:	mov	r11, qword ptr [rsp + 0x30]
0x5933:	movzx	edx, byte ptr [rsp + 0xd]
0x5938:	jmp	0x5366


0x52ed:	cmp	rax, -2
0x52f1:	je	0x5891


0x4ec7:	test	al, al
0x4ec9:	jne	0x5861


0x543e:	test	dl, dl
0x5440:	jne	0x5390


0x5366:	cmp	rdi, 1
0x536a:	jbe	0x596b


0x5891:	mov	r11, qword ptr [rsp + 0x30]
0x5896:	mov	rsi, r14
0x5899:	mov	rcx, r13
0x589c:	mov	rax, rbx
0x589f:	mov	rdi, rbx
0x58a2:	movzx	r8d, byte ptr [rsp + 0x7d]
0x58a8:	movzx	ebx, byte ptr [rsp + 0x7e]
0x58ad:	mov	r9, qword ptr [rsp + 0x88]
0x58b5:	cmp	rsi, r11
0x58b8:	movzx	r10d, byte ptr [rsp + 0x7f]
0x58be:	mov	r15, qword ptr [rsp + 0x80]
0x58c6:	mov	r14, qword ptr [rsp + 0x40]
0x58cb:	mov	r13, qword ptr [rsp + 0x70]
0x58d0:	jae	0x58f8


0x52f7:	cmp	dword ptr [rsp + 8], 2
0x52fc:	sete	al
0x52ff:	and	al, byte ptr [rsp + 0xf]
0x5303:	jne	0x54a0


0x4ecf:	cmp	dword ptr [rsp + 8], 2
0x4ed4:	sete	dl
0x4ed7:	jmp	0x4ba8


0x5861:	movzx	edx, byte ptr [rsp + 0xd]
0x5866:	xor	r12d, r12d
0x5869:	jmp	0x5370


0x5446:	mov	eax, esi
0x5448:	xor	eax, 1
0x544b:	and	eax, r8d
0x544e:	test	r10b, r10b
0x5451:	je	0x5461


0x5390:	cmp	dword ptr [rsp + 8], 2
0x5395:	sete	al
0x5398:	test	r9b, r9b
0x539b:	jne	0x5850


0x58d2:	cmp	byte ptr [rcx], 0
0x58d5:	jne	0x58e7


0x58f8:	movzx	edx, byte ptr [rsp + 0xd]
0x58fd:	xor	r12d, r12d
0x5900:	jmp	0x5366


0x5309:	mov	edi, dword ptr [rsp + 0x9c]
0x5310:	call	0x1c20


0x54a0:	cmp	r15, 1
0x54a4:	je	0x5309


0x4ba8:	cmp	byte ptr [rsp + 0xd], 1
0x4bad:	jne	0x4cc2


0x5461:	add	rbp, 1
0x5465:	cmp	rbp, rcx
0x5468:	jae	0x4bec


0x5453:	cmp	r13, r15
0x5456:	jbe	0x545d


0x53a1:	mov	esi, r8d
0x53a4:	xor	esi, 1
0x53a7:	and	al, sil
0x53aa:	je	0x53db


0x5850:	movzx	ebx, byte ptr [rsp + 0xf]
0x5855:	mov	rbp, r11
0x5858:	mov	byte ptr [rsp + 0xd], bl
0x585c:	jmp	0x5509


0x58d7:	jmp	0x58f8


0x58e7:	add	rax, 1
0x58eb:	lea	rdx, [rbp + rax]
0x58f0:	cmp	r11, rdx
0x58f3:	ja	0x58e0


0x54aa:	mov	rdi, qword ptr [rsp + 0x10]
0x54af:	lea	rcx, [rdi + r15]
0x54b3:	lea	rdx, [rdi + r14 + 1]
0x54b8:	lea	r8, [rcx + r14]
0x54bc:	jmp	0x54cd


0x4bb3:	test	dl, dl
0x4bb5:	jne	0x4cc2


0x4cc2:	cmp	byte ptr [rsp + 0xf], 0
0x4cc7:	jne	0x4bbb


0x546e:	test	al, al
0x5470:	je	0x586e


0x4bec:	test	al, al
0x4bee:	je	0x4c10


0x545d:	add	r15, 1
0x5461:	add	rbp, 1
0x5465:	cmp	rbp, rcx
0x5468:	jae	0x4bec


0x5458:	mov	byte ptr [r14 + r15], 0x5c
0x545d:	add	r15, 1
0x5461:	add	rbp, 1
0x5465:	cmp	rbp, rcx
0x5468:	jae	0x4bec


0x53db:	cmp	r13, r15
0x53de:	jbe	0x53e5


0x53ac:	cmp	r13, r15
0x53af:	jbe	0x53b6


0x58f5:	mov	rdi, rax
0x58f8:	movzx	edx, byte ptr [rsp + 0xd]
0x58fd:	xor	r12d, r12d
0x5900:	jmp	0x5366


0x58e0:	cmp	byte ptr [r9 + rax], 0
0x58e5:	je	0x58f5


0x54cd:	movzx	ecx, byte ptr [rdx]
0x54d0:	sub	ecx, 0x5b
0x54d3:	cmp	cl, 0x21
0x54d6:	ja	0x54c0


0x4bbb:	mov	rsi, qword ptr [rsp + 0x20]
0x4bc0:	test	rsi, rsi
0x4bc3:	je	0x4bd9


0x4ccd:	jmp	0x4bd9


0x586e:	xor	r10d, r10d
0x5871:	jmp	0x542d


0x5476:	cmp	r13, r15
0x5479:	jbe	0x5480


0x4c10:	cmp	r15, r13
0x4c13:	jae	0x4c19


0x4bf0:	cmp	r13, r15
0x4bf3:	jbe	0x4bfa


0x53e5:	lea	rax, [r15 + 1]
0x53e9:	cmp	r13, rax
0x53ec:	jbe	0x53fb


0x53e0:	mov	byte ptr [r14 + r15], 0x5c
0x53e5:	lea	rax, [r15 + 1]
0x53e9:	cmp	r13, rax
0x53ec:	jbe	0x53fb


0x53b6:	lea	rsi, [r15 + 1]
0x53ba:	cmp	r13, rsi
0x53bd:	jbe	0x53c5


0x53b1:	mov	byte ptr [r14 + r15], 0x27
0x53b6:	lea	rsi, [r15 + 1]
0x53ba:	cmp	r13, rsi
0x53bd:	jbe	0x53c5


0x54d8:	mov	esi, 1
0x54dd:	shl	rsi, cl
0x54e0:	mov	rcx, rsi
0x54e3:	movabs	rsi, 0x20000002b
0x54ed:	test	rcx, rsi
0x54f0:	je	0x54c0


0x54c0:	add	rdx, 1
0x54c4:	cmp	r8, rdx
0x54c7:	je	0x5309


0x4bd9:	test	r10b, r10b
0x4bdc:	jne	0x4d23


0x4bc5:	mov	edx, ebx
0x4bc7:	shr	dl, 5
0x4bca:	movzx	edx, dl
0x4bcd:	mov	edx, dword ptr [rsi + rdx*4]
0x4bd0:	bt	edx, ebx
0x4bd3:	jb	0x4d23


0x542d:	cmp	r13, r15
0x5430:	jbe	0x5436


0x5480:	lea	rax, [r15 + 1]
0x5484:	cmp	r13, rax
0x5487:	jbe	0x548f


0x547b:	mov	byte ptr [r14 + r15], 0x27
0x5480:	lea	rax, [r15 + 1]
0x5484:	cmp	r13, rax
0x5487:	jbe	0x548f


0x4c15:	mov	byte ptr [r14 + r15], bl
0x4c19:	movzx	edi, byte ptr [rsp + 0xe]
0x4c1e:	add	r15, 1
0x4c22:	mov	eax, 0
0x4c27:	test	r12b, r12b
0x4c2a:	cmove	edi, eax
0x4c2d:	mov	byte ptr [rsp + 0xe], dil
0x4c32:	jmp	0x4a68


0x4c19:	movzx	edi, byte ptr [rsp + 0xe]
0x4c1e:	add	r15, 1
0x4c22:	mov	eax, 0
0x4c27:	test	r12b, r12b
0x4c2a:	cmove	edi, eax
0x4c2d:	mov	byte ptr [rsp + 0xe], dil
0x4c32:	jmp	0x4a68


0x4bfa:	lea	rax, [r15 + 1]
0x4bfe:	cmp	r13, rax
0x4c01:	jbe	0x4c09


0x4bf5:	mov	byte ptr [r14 + r15], 0x27
0x4bfa:	lea	rax, [r15 + 1]
0x4bfe:	cmp	r13, rax
0x4c01:	jbe	0x4c09


0x53fb:	lea	rax, [r15 + 2]
0x53ff:	cmp	r13, rax
0x5402:	jbe	0x5414


0x53ee:	mov	eax, ebx
0x53f0:	shr	al, 6
0x53f3:	add	eax, 0x30
0x53f6:	mov	byte ptr [r14 + r15 + 1], al
0x53fb:	lea	rax, [r15 + 2]
0x53ff:	cmp	r13, rax
0x5402:	jbe	0x5414


0x53c5:	lea	rsi, [r15 + 2]
0x53c9:	cmp	r13, rsi
0x53cc:	jbe	0x53d4


0x53bf:	mov	byte ptr [r14 + r15 + 1], 0x24
0x53c5:	lea	rsi, [r15 + 2]
0x53c9:	cmp	r13, rsi
0x53cc:	jbe	0x53d4


0x54f2:	mov	r14, qword ptr [rsp + 0x40]
0x54f7:	mov	r13, qword ptr [rsp + 0x70]
0x54fc:	mov	rbp, qword ptr [rsp + 0x30]
0x5501:	mov	dword ptr [rsp + 8], 2
0x5509:	cmp	byte ptr [rsp + 0xd], 0
0x550e:	je	0x5520


0x4be2:	xor	eax, 1
0x4be5:	add	rbp, 1
0x4be9:	and	eax, r8d
0x4bec:	test	al, al
0x4bee:	je	0x4c10


0x4d23:	cmp	dword ptr [rsp + 8], 2
0x4d28:	sete	dl
0x4d2b:	cmp	byte ptr [rsp + 0xf], 0
0x4d30:	mov	eax, edx
0x4d32:	jne	0x5588


0x5436:	movzx	ebx, byte ptr [rdi + rbp]
0x543a:	add	r15, 1
0x543e:	test	dl, dl
0x5440:	jne	0x5390


0x5432:	mov	byte ptr [r14 + r15], bl
0x5436:	movzx	ebx, byte ptr [rdi + rbp]
0x543a:	add	r15, 1
0x543e:	test	dl, dl
0x5440:	jne	0x5390


0x548f:	add	r15, 2
0x5493:	xor	r10d, r10d
0x5496:	xor	r8d, r8d
0x5499:	jmp	0x542d


0x5489:	mov	byte ptr [r14 + r15 + 1], 0x27
0x548f:	add	r15, 2
0x5493:	xor	r10d, r10d
0x5496:	xor	r8d, r8d
0x5499:	jmp	0x542d


0x4a68:	cmp	r11, rbp
0x4a6b:	setne	r12b
0x4a6f:	cmp	r11, -1
0x4a73:	jne	0x4a82


0x4c09:	add	r15, 2
0x4c0d:	xor	r8d, r8d
0x4c10:	cmp	r15, r13
0x4c13:	jae	0x4c19


0x4c03:	mov	byte ptr [r14 + r15 + 1], 0x27
0x4c09:	add	r15, 2
0x4c0d:	xor	r8d, r8d
0x4c10:	cmp	r15, r13
0x4c13:	jae	0x4c19


0x5414:	and	ebx, 7
0x5417:	add	rbp, 1
0x541b:	add	r15, 3
0x541f:	add	ebx, 0x30
0x5422:	cmp	rbp, rcx
0x5425:	jae	0x4c10


0x5404:	mov	eax, ebx
0x5406:	shr	al, 3
0x5409:	and	eax, 7
0x540c:	add	eax, 0x30
0x540f:	mov	byte ptr [r14 + r15 + 2], al
0x5414:	and	ebx, 7
0x5417:	add	rbp, 1
0x541b:	add	r15, 3
0x541f:	add	ebx, 0x30
0x5422:	cmp	rbp, rcx
0x5425:	jae	0x4c10


0x53d4:	add	r15, 3
0x53d8:	mov	r8d, eax
0x53db:	cmp	r13, r15
0x53de:	jbe	0x53e5


0x53ce:	mov	byte ptr [r14 + r15 + 2], 0x27
0x53d4:	add	r15, 3
0x53d8:	mov	r8d, eax
0x53db:	cmp	r13, r15
0x53de:	jbe	0x53e5


0x4d38:	mov	eax, r8d
0x4d3b:	xor	eax, 1
0x4d3e:	and	al, dl
0x4d40:	je	0x4d71


0x5588:	mov	rbp, r11
0x558b:	jmp	0x5509


0x542b:	mov	esi, edx
0x542d:	cmp	r13, r15
0x5430:	jbe	0x5436


0x4d71:	cmp	r13, r15
0x4d74:	jbe	0x4d7b


0x4d42:	cmp	r13, r15
0x4d45:	jbe	0x4d4c


0x4d7b:	add	r15, 1
0x4d7f:	add	rbp, 1
0x4d83:	jmp	0x4c10


0x4d76:	mov	byte ptr [r14 + r15], 0x5c
0x4d7b:	add	r15, 1
0x4d7f:	add	rbp, 1
0x4d83:	jmp	0x4c10


0x4d4c:	lea	rdx, [r15 + 1]
0x4d50:	cmp	r13, rdx
0x4d53:	jbe	0x4d5b


0x4d47:	mov	byte ptr [r14 + r15], 0x27
0x4d4c:	lea	rdx, [r15 + 1]
0x4d50:	cmp	r13, rdx
0x4d53:	jbe	0x4d5b


0x4d5b:	lea	rdx, [r15 + 2]
0x4d5f:	cmp	r13, rdx
0x4d62:	jbe	0x4d6a


0x4d55:	mov	byte ptr [r14 + r15 + 1], 0x24
0x4d5b:	lea	rdx, [r15 + 2]
0x4d5f:	cmp	r13, rdx
0x4d62:	jbe	0x4d6a


0x4d6a:	add	r15, 3
0x4d6e:	mov	r8d, eax
0x4d71:	cmp	r13, r15
0x4d74:	jbe	0x4d7b


0x4d64:	mov	byte ptr [r14 + r15 + 2], 0x27
0x4d6a:	add	r15, 3
0x4d6e:	mov	r8d, eax
0x4d71:	cmp	r13, r15
0x4d74:	jbe	0x4d7b


0x5315:	mov	rdi, qword ptr [rsp + 0x28]
0x531a:	test	eax, eax
0x531c:	mov	eax, 0
0x5321:	cmove	r12d, eax
0x5325:	add	rbx, r15
0x5328:	call	0x1c10


0x532d:	test	eax, eax
0x532f:	je	0x52b3


0x52b3:	mov	rax, qword ptr [rsp + 0x10]
0x52b8:	lea	r14, [rbp + rbx]
0x52bd:	mov	rdx, qword ptr [rsp + 0x30]
0x52c2:	mov	rcx, qword ptr [rsp + 0x28]
0x52c7:	mov	rdi, qword ptr [rsp + 0x38]
0x52cc:	lea	r13, [rax + r14]
0x52d0:	sub	rdx, r14
0x52d3:	mov	rsi, r13
0x52d6:	call	0x6ef0


0x4adc:	movzx	r8d, byte ptr [rsp + 0x38]
0x4ae2:	movzx	r10d, byte ptr [rsp + 0x30]
0x4ae8:	mov	r11, rax
0x4aeb:	mov	r9, qword ptr [rsp + 0x28]
0x4af0:	cmp	rbx, r11
0x4af3:	mov	byte ptr [rsp + 0x28], r10b
0x4af8:	ja	0x50b0


0x5260:	movzx	r8d, byte ptr [rsp + 0x40]
0x5266:	movzx	r10d, byte ptr [rsp + 0x38]
0x526c:	mov	r11, rax
0x526f:	mov	r9, qword ptr [rsp + 0x30]
0x5274:	lea	rax, [rsp + 0x9c]
0x527c:	xor	ecx, ecx
0x527e:	mov	byte ptr [rsp + 0x7e], bl
0x5282:	mov	byte ptr [rsp + 0x7d], r8b
0x5287:	mov	rbx, rcx
0x528a:	mov	qword ptr [rsp + 0x88], r9
0x5292:	mov	qword ptr [rsp + 0x38], rax
0x5297:	mov	byte ptr [rsp + 0x7f], r10b
0x529c:	mov	qword ptr [rsp + 0x80], r15
0x52a4:	mov	qword ptr [rsp + 0x40], r14
0x52a9:	mov	qword ptr [rsp + 0x70], r13
0x52ae:	mov	qword ptr [rsp + 0x30], r11
0x52b3:	mov	rax, qword ptr [rsp + 0x10]
0x52b8:	lea	r14, [rbp + rbx]
0x52bd:	mov	rdx, qword ptr [rsp + 0x30]
0x52c2:	mov	rcx, qword ptr [rsp + 0x28]
0x52c7:	mov	rdi, qword ptr [rsp + 0x38]
0x52cc:	lea	r13, [rax + r14]
0x52d0:	sub	rdx, r14
0x52d3:	mov	rsi, r13
0x52d6:	call	0x6ef0


0x4e98:	mov	rcx, qword ptr [rax]
0x4e9b:	movzx	edx, bl
0x4e9e:	movzx	r10d, byte ptr [rsp + 0x28]
0x4ea4:	movzx	r8d, byte ptr [rsp + 0x30]
0x4eaa:	mov	r11, qword ptr [rsp + 0x38]
0x4eaf:	mov	edi, 1
0x4eb4:	movzx	eax, word ptr [rcx + rdx*2]
0x4eb8:	and	ax, 0x4000
0x4ebc:	setne	r12b
0x4ec0:	sete	al
0x4ec3:	and	al, byte ptr [rsp + 0xd]
0x4ec7:	test	al, al
0x4ec9:	jne	0x5861


0x4b70:	xor	r10d, r10d
0x4b73:	cmp	r11, 1
0x4b77:	setne	al
0x4b7a:	cmp	r11, -1
0x4b7e:	jne	0x4b8c


0x4b80:	mov	rax, qword ptr [rsp + 0x10]
0x4b85:	cmp	byte ptr [rax + 1], 0
0x4b89:	setne	al
0x4b8c:	cmp	dword ptr [rsp + 8], 2
0x4b91:	sete	dl
0x4b94:	test	al, al
0x4b96:	je	0x4de8


0x4b8c:	cmp	dword ptr [rsp + 8], 2
0x4b91:	sete	dl
0x4b94:	test	al, al
0x4b96:	je	0x4de8


0x4de8:	test	rbp, rbp
0x4deb:	jne	0x4b9c


0x4b9c:	xor	r12d, r12d
0x4b9f:	xor	eax, eax
0x4ba1:	nop	dword ptr [rax]
0x4ba8:	cmp	byte ptr [rsp + 0xd], 1
0x4bad:	jne	0x4cc2


0x4df1:	movzx	eax, byte ptr [rsp + 0xf]
0x4df6:	and	al, dl
0x4df8:	je	0x4ba8


0x4dfe:	mov	rbp, r11
0x4e01:	mov	dword ptr [rsp + 8], 2
0x4e09:	jmp	0x5509


0x5208:	cmp	byte ptr [rsp + 0xf], 0
0x520d:	jne	0x5a30


0x4c50:	cmp	eax, 5
0x4c53:	je	0x51c8


0x5213:	xor	r12d, r12d
0x5216:	xor	eax, eax
0x5218:	mov	ebx, 0x3f
0x521d:	jmp	0x4bd9


0x5a30:	mov	rbp, r11
0x5a33:	movzx	eax, byte ptr [rsp + 0xf]
0x5a38:	jmp	0x5509


0x51c8:	test	byte ptr [rsp + 0x78], 4
0x51cd:	je	0x51f0


0x4c59:	cmp	eax, 2
0x4c5c:	mov	ebx, 0x3f
0x4c61:	sete	dl
0x4c64:	xor	r12d, r12d
0x4c67:	xor	eax, eax
0x4c69:	jmp	0x4ba8


0x51f0:	xor	edx, edx
0x51f2:	xor	r12d, r12d
0x51f5:	xor	eax, eax
0x51f7:	mov	ebx, 0x3f
0x51fc:	jmp	0x4ba8


0x51cf:	lea	rcx, [rbp + 2]
0x51d3:	cmp	rcx, r11
0x51d6:	jae	0x51f0


0x51d8:	mov	rax, qword ptr [rsp + 0x10]
0x51dd:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x51e2:	je	0x5972


0x5972:	movzx	ebx, byte ptr [rax + rcx]
0x5976:	cmp	bl, 0x3e
0x5979:	ja	0x51f0


0x597f:	movabs	rax, 0x7000a38200000000
0x5989:	bt	rax, rbx
0x598d:	jae	0x51f0


0x5993:	cmp	byte ptr [rsp + 0xf], 0
0x5998:	jne	0x5b82


0x599e:	cmp	r13, r15
0x59a1:	jbe	0x59a8


0x5b82:	mov	rbp, r11
0x5b85:	jmp	0x5520


0x59a8:	lea	rax, [r15 + 1]
0x59ac:	cmp	r13, rax
0x59af:	jbe	0x59b7


0x59a3:	mov	byte ptr [r14 + r15], 0x3f
0x59a8:	lea	rax, [r15 + 1]
0x59ac:	cmp	r13, rax
0x59af:	jbe	0x59b7


0x59b7:	lea	rax, [r15 + 2]
0x59bb:	cmp	r13, rax
0x59be:	jbe	0x59c6


0x59b1:	mov	byte ptr [r14 + r15 + 1], 0x22
0x59b7:	lea	rax, [r15 + 2]
0x59bb:	cmp	r13, rax
0x59be:	jbe	0x59c6


0x59c6:	lea	rax, [r15 + 3]
0x59ca:	cmp	r13, rax
0x59cd:	jbe	0x59d5


0x59c0:	mov	byte ptr [r14 + r15 + 2], 0x22
0x59c6:	lea	rax, [r15 + 3]
0x59ca:	cmp	r13, rax
0x59cd:	jbe	0x59d5


0x59d5:	add	r15, 4
0x59d9:	xor	edx, edx
0x59db:	xor	r12d, r12d
0x59de:	xor	eax, eax
0x59e0:	mov	rbp, rcx
0x59e3:	jmp	0x4ba8


0x59cf:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x59d5:	add	r15, 4
0x59d9:	xor	edx, edx
0x59db:	xor	r12d, r12d
0x59de:	xor	eax, eax
0x59e0:	mov	rbp, rcx
0x59e3:	jmp	0x4ba8


0x5180:	cmp	byte ptr [rsp + 0xf], 0
0x5185:	jne	0x5a30


0x4c7e:	mov	byte ptr [rsp + 0x7c], r12b
0x4c83:	xor	edx, edx
0x4c85:	xor	eax, eax
0x4c87:	mov	ebx, 0x27
0x4c8c:	jmp	0x4ba8


0x518b:	test	r13, r13
0x518e:	je	0x5590


0x5590:	cmp	r13, r15
0x5593:	jbe	0x559a


0x5194:	xor	edx, edx
0x5196:	cmp	qword ptr [rsp + 0x50], 0
0x519c:	jne	0x5590


0x559a:	lea	rax, [r15 + 1]
0x559e:	cmp	r13, rax
0x55a1:	jbe	0x55a9


0x5595:	mov	byte ptr [r14 + r15], 0x27
0x559a:	lea	rax, [r15 + 1]
0x559e:	cmp	r13, rax
0x55a1:	jbe	0x55a9


0x51a2:	mov	qword ptr [rsp + 0x50], r13
0x51a7:	add	r15, 3
0x51ab:	xor	eax, eax
0x51ad:	mov	byte ptr [rsp + 0x7c], r12b
0x51b2:	xor	r8d, r8d
0x51b5:	mov	r13, rdx
0x51b8:	mov	ebx, 0x27
0x51bd:	jmp	0x4bd9


0x55a9:	lea	rax, [r15 + 2]
0x55ad:	cmp	r13, rax
0x55b0:	jbe	0x5ba2


0x55a3:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x55a9:	lea	rax, [r15 + 2]
0x55ad:	cmp	r13, rax
0x55b0:	jbe	0x5ba2


0x5ba2:	mov	rdx, r13
0x5ba5:	mov	r13, qword ptr [rsp + 0x50]
0x5baa:	jmp	0x51a2


0x55b6:	mov	rdx, r13
0x55b9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x55bf:	mov	r13, qword ptr [rsp + 0x50]
0x55c4:	jmp	0x51a2


0x4cb4:	cmp	byte ptr [rsp + 0xd], 0
0x4cb9:	jne	0x4d20


0x4cbb:	mov	ebx, edx
0x4cbd:	xor	r12d, r12d
0x4cc0:	xor	eax, eax
0x4cc2:	cmp	byte ptr [rsp + 0xf], 0
0x4cc7:	jne	0x4bbb


0x4d20:	xor	r12d, r12d
0x4d23:	cmp	dword ptr [rsp + 8], 2
0x4d28:	sete	dl
0x4d2b:	cmp	byte ptr [rsp + 0xf], 0
0x4d30:	mov	eax, edx
0x4d32:	jne	0x5588


0x50c0:	cmp	byte ptr [rsp + 0xf], 0
0x50c5:	jne	0x5a30


0x4cf3:	cmp	byte ptr [rsp + 0xd], 0
0x4cf8:	je	0x4f10


0x50cb:	add	rbp, 1
0x50cf:	mov	eax, r8d
0x50d2:	xor	r12d, r12d
0x50d5:	mov	ebx, 0x5c
0x50da:	jmp	0x4bec


0x4f10:	mov	edx, 0x5c
0x4f15:	mov	ebx, 0x5c
0x4f1a:	jmp	0x4cb4


0x4cfe:	cmp	byte ptr [rsp + 0xf], 0
0x4d03:	je	0x4f10


0x4d09:	cmp	qword ptr [rsp + 0x18], 0
0x4d0f:	jne	0x50cb


0x4d15:	mov	ebx, 0x5c
0x4d1a:	nop	word ptr [rax + rax]
0x4d20:	xor	r12d, r12d
0x4d23:	cmp	dword ptr [rsp + 8], 2
0x4d28:	sete	dl
0x4d2b:	cmp	byte ptr [rsp + 0xf], 0
0x4d30:	mov	eax, edx
0x4d32:	jne	0x5588


0x4d9b:	xor	edx, edx
0x4d9d:	test	byte ptr [rsp + 0x78], 1
0x4da2:	je	0x4cbb


0x4f63:	cmp	dword ptr [rsp + 8], 2
0x4f68:	sete	dl
0x4f6b:	cmp	byte ptr [rsp + 0xf], 0
0x4f70:	jne	0x5b0a


0x4da8:	add	rbp, 1
0x4dac:	jmp	0x4a68


0x4f76:	mov	eax, r8d
0x4f79:	mov	rcx, r15
0x4f7c:	xor	eax, 1
0x4f7f:	and	al, dl
0x4f81:	je	0x4fb0


0x5b0a:	movzx	ebx, byte ptr [rsp + 0xf]
0x5b0f:	mov	rbp, r11
0x5b12:	mov	eax, edx
0x5b14:	mov	byte ptr [rsp + 0xd], bl
0x5b18:	jmp	0x5509


0x4fb0:	cmp	r13, rcx
0x4fb3:	jbe	0x4fba


0x4f83:	cmp	r13, r15
0x4f86:	jbe	0x4f8d


0x4fba:	cmp	dword ptr [rsp + 8], 2
0x4fbf:	lea	r15, [rcx + 1]
0x4fc3:	je	0x55c9


0x4fb5:	mov	byte ptr [r14 + rcx], 0x5c
0x4fba:	cmp	dword ptr [rsp + 8], 2
0x4fbf:	lea	r15, [rcx + 1]
0x4fc3:	je	0x55c9


0x4f8d:	lea	rcx, [r15 + 1]
0x4f91:	cmp	r13, rcx
0x4f94:	jbe	0x4f9c


0x4f88:	mov	byte ptr [r14 + r15], 0x27
0x4f8d:	lea	rcx, [r15 + 1]
0x4f91:	cmp	r13, rcx
0x4f94:	jbe	0x4f9c


0x55c9:	mov	eax, r12d
0x55cc:	mov	ebx, 0x30
0x55d1:	xor	r12d, r12d
0x55d4:	jmp	0x4bd9


0x4fc9:	lea	rax, [rbp + 1]
0x4fcd:	cmp	rax, r11
0x4fd0:	jae	0x4feb


0x4f9c:	lea	rcx, [r15 + 2]
0x4fa0:	cmp	r13, rcx
0x4fa3:	ja	0x55d9


0x4f96:	mov	byte ptr [r14 + r15 + 1], 0x24
0x4f9c:	lea	rcx, [r15 + 2]
0x4fa0:	cmp	r13, rcx
0x4fa3:	ja	0x55d9


0x4fd2:	mov	rax, qword ptr [rsp + 0x10]
0x4fd7:	movzx	eax, byte ptr [rax + rbp + 1]
0x4fdc:	mov	byte ptr [rsp + 0x28], al
0x4fe0:	sub	eax, 0x30
0x4fe3:	cmp	al, 9
0x4fe5:	jbe	0x5819


0x4feb:	mov	eax, r12d
0x4fee:	mov	ebx, 0x30
0x4ff3:	xor	r12d, r12d
0x4ff6:	jmp	0x4ba8


0x4fa9:	lea	rcx, [r15 + 3]
0x4fad:	mov	r8d, eax
0x4fb0:	cmp	r13, rcx
0x4fb3:	jbe	0x4fba


0x55d9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x55df:	jmp	0x4fa9


0x5819:	cmp	r13, r15
0x581c:	jbe	0x5823


0x5823:	lea	rax, [rcx + 2]
0x5827:	cmp	r13, rax
0x582a:	jbe	0x5832


0x581e:	mov	byte ptr [r14 + r15], 0x30
0x5823:	lea	rax, [rcx + 2]
0x5827:	cmp	r13, rax
0x582a:	jbe	0x5832


0x5832:	mov	eax, r12d
0x5835:	lea	r15, [rcx + 3]
0x5839:	xor	r12d, r12d
0x583c:	mov	ebx, 0x30
0x5841:	jmp	0x4ba8


0x582c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x5832:	mov	eax, r12d
0x5835:	lea	r15, [rcx + 3]
0x5839:	xor	r12d, r12d
0x583c:	mov	ebx, 0x30
0x5841:	jmp	0x4ba8


0x4ca2:	cmp	dword ptr [rsp + 8], 2
0x4ca7:	sete	al
0x4caa:	and	al, byte ptr [rsp + 0xf]
0x4cae:	jne	0x4dfe


0x5060:	mov	edx, 0xd
0x5065:	xor	r10d, r10d
0x5068:	mov	ebx, 0x72
0x506d:	jmp	0x4ca2


0x55e4:	test	ebx, ebx
0x55e6:	jne	0x4a13


0x55ec:	mov	byte ptr [rsp + 0xd], 1
0x55f1:	test	r13, r13
0x55f4:	jne	0x5b8a


0x55fa:	lea	rax, [rip + 0x29e4]
0x5601:	mov	qword ptr [rsp + 0x50], 0
0x560a:	mov	byte ptr [rsp + 0xe], 1
0x560f:	mov	byte ptr [rsp + 0x7c], 0
0x5614:	xor	r12d, r12d
0x5617:	mov	byte ptr [rsp + 0xf], 0
0x561c:	mov	qword ptr [rsp + 0x18], 1
0x5625:	mov	qword ptr [rsp + 0x48], rax
0x562a:	mov	r15d, 1
0x5630:	mov	dword ptr [rsp + 8], 2
0x5638:	jmp	0x4a53


0x5b8a:	mov	byte ptr [rsp + 0xe], 1
0x5b8f:	xor	eax, eax
0x5b91:	xor	r12d, r12d
0x5b94:	mov	qword ptr [rsp + 0x50], 0
0x5b9d:	jmp	0x5144


0x5144:	lea	rbx, [rip + 0x2e9a]
0x514b:	mov	byte ptr [r14], 0x27
0x514f:	mov	dword ptr [rsp + 8], 2
0x5157:	mov	r15d, 1
0x515d:	mov	qword ptr [rsp + 0x18], 1
0x5166:	mov	byte ptr [rsp + 0xf], 0
0x516b:	mov	qword ptr [rsp + 0x48], rbx
0x5170:	mov	byte ptr [rsp + 0x7c], al
0x5174:	jmp	0x4a53


0x5648:	test	r13, r13
0x564b:	je	0x5876


0x5a3d:	lea	rax, [rip + 0x259f]
0x5a44:	mov	byte ptr [rsp + 0xe], 1
0x5a49:	mov	byte ptr [rsp + 0x7c], 0
0x5a4e:	xor	r12d, r12d
0x5a51:	mov	qword ptr [rsp + 0x50], 0
0x5a5a:	mov	byte ptr [rsp + 0xf], 1
0x5a5f:	mov	byte ptr [rsp + 0xd], 1
0x5a64:	mov	qword ptr [rsp + 0x18], 1
0x5a6d:	xor	r15d, r15d
0x5a70:	mov	qword ptr [rsp + 0x48], rax
0x5a75:	jmp	0x4a53


0x5876:	mov	qword ptr [rsp + 0x50], 0
0x587f:	mov	byte ptr [rsp + 0xe], 1
0x5884:	xor	r12d, r12d
0x5887:	mov	byte ptr [rsp + 0x7c], 0
0x588c:	jmp	0x566b


0x5651:	mov	byte ptr [r14], 0x22
0x5655:	mov	byte ptr [rsp + 0xe], 1
0x565a:	xor	r12d, r12d
0x565d:	mov	byte ptr [rsp + 0x7c], 0
0x5662:	mov	qword ptr [rsp + 0x50], 0
0x566b:	lea	rax, [rip + 0x2971]
0x5672:	mov	byte ptr [rsp + 0xf], 0
0x5677:	mov	byte ptr [rsp + 0xd], 1
0x567c:	mov	qword ptr [rsp + 0x18], 1
0x5685:	mov	r15d, 1
0x568b:	mov	qword ptr [rsp + 0x48], rax
0x5690:	jmp	0x4a53


0x566b:	lea	rax, [rip + 0x2971]
0x5672:	mov	byte ptr [rsp + 0xf], 0
0x5677:	mov	byte ptr [rsp + 0xd], 1
0x567c:	mov	qword ptr [rsp + 0x18], 1
0x5685:	mov	r15d, 1
0x568b:	mov	qword ptr [rsp + 0x48], rax
0x5690:	jmp	0x4a53


0x5695:	lea	rax, [rip + 0x2947]
0x569c:	mov	byte ptr [rsp + 0xe], 1
0x56a1:	mov	byte ptr [rsp + 0x7c], 0
0x56a6:	xor	r12d, r12d
0x56a9:	mov	qword ptr [rsp + 0x50], 0
0x56b2:	mov	byte ptr [rsp + 0xf], 1
0x56b7:	mov	byte ptr [rsp + 0xd], 1
0x56bc:	mov	qword ptr [rsp + 0x18], 1
0x56c5:	xor	r15d, r15d
0x56c8:	mov	qword ptr [rsp + 0x48], rax
0x56cd:	mov	dword ptr [rsp + 8], 5
0x56d5:	jmp	0x4a53


0x56da:	mov	byte ptr [rsp + 0xe], 1
0x56df:	mov	byte ptr [rsp + 0x7c], 0
0x56e4:	xor	r12d, r12d
0x56e7:	mov	qword ptr [rsp + 0x50], 0
0x56f0:	mov	byte ptr [rsp + 0xf], 0
0x56f5:	xor	r15d, r15d
0x56f8:	mov	byte ptr [rsp + 0xd], 1
0x56fd:	mov	qword ptr [rsp + 0x18], 0
0x5706:	mov	qword ptr [rsp + 0x48], 0
0x570f:	jmp	0x4a53


0x5714:	cmp	dword ptr [rsp + 8], 0xa
0x5719:	je	0x5771


0x5771:	xor	r15d, r15d
0x5774:	test	ebx, ebx
0x5776:	je	0x593d


0x571b:	lea	rsi, [rip + 0x28c5]
0x5722:	xor	edi, edi
0x5724:	mov	edx, 5
0x5729:	call	0x1950


0x593d:	mov	rdx, qword ptr [rsp + 0x68]
0x5942:	movzx	eax, byte ptr [rdx]
0x5945:	test	al, al
0x5947:	je	0x577c


0x577c:	test	ebx, ebx
0x577e:	mov	rbx, qword ptr [rsp + 0x60]
0x5783:	setne	byte ptr [rsp + 0xf]
0x5788:	xor	r12d, r12d
0x578b:	mov	rdi, rbx
0x578e:	call	0x1970


0x5959:	add	r15, 1
0x595d:	movzx	eax, byte ptr [rdx + r15]
0x5962:	test	al, al
0x5964:	jne	0x5950


0x5955:	mov	byte ptr [r14 + r15], al
0x5959:	add	r15, 1
0x595d:	movzx	eax, byte ptr [rdx + r15]
0x5962:	test	al, al
0x5964:	jne	0x5950


0x5966:	jmp	0x577c


0x5950:	cmp	r13, r15
0x5953:	jbe	0x5959


0x5793:	mov	qword ptr [rsp + 0x48], rbx
0x5798:	mov	qword ptr [rsp + 0x18], rax
0x579d:	mov	byte ptr [rsp + 0xe], 1
0x57a2:	mov	byte ptr [rsp + 0x7c], 0
0x57a7:	mov	qword ptr [rsp + 0x50], 0
0x57b0:	mov	byte ptr [rsp + 0xd], 1
0x57b5:	jmp	0x4a53


0x572e:	mov	rcx, rax
0x5731:	mov	qword ptr [rsp + 0x68], rax
0x5736:	lea	rax, [rip + 0x28aa]
0x573d:	cmp	rcx, rax
0x5740:	je	0x5ade


0x5ade:	mov	esi, dword ptr [rsp + 8]
0x5ae2:	mov	rdi, rcx
0x5ae5:	call	0x4890


0x5746:	lea	rsi, [rip + 0x2898]
0x574d:	xor	edi, edi
0x574f:	mov	edx, 5
0x5754:	call	0x1950


0x5759:	mov	rcx, rax
0x575c:	mov	qword ptr [rsp + 0x60], rax
0x5761:	lea	rax, [rip + 0x287d]
0x5768:	cmp	rcx, rax
0x576b:	je	0x5af4


0x5af4:	mov	esi, dword ptr [rsp + 8]
0x5af8:	mov	rdi, rcx
0x5afb:	call	0x4890


0x5b00:	mov	qword ptr [rsp + 0x60], rax
0x5b05:	jmp	0x5771


0x5aea:	mov	qword ptr [rsp + 0x68], rax
0x5aef:	jmp	0x5746


0x57ba:	mov	byte ptr [rsp + 0xe], 1
0x57bf:	mov	byte ptr [rsp + 0x7c], 0
0x57c4:	xor	r12d, r12d
0x57c7:	mov	qword ptr [rsp + 0x50], 0
0x57d0:	mov	byte ptr [rsp + 0xf], 0
0x57d5:	xor	r15d, r15d
0x57d8:	mov	byte ptr [rsp + 0xd], 0
0x57dd:	mov	qword ptr [rsp + 0x18], 0
0x57e6:	mov	qword ptr [rsp + 0x48], 0
0x57ef:	jmp	0x4a53


0x57f4:	mov	byte ptr [rsp + 0xe], 1
0x57f9:	mov	byte ptr [rsp + 0x7c], 0
0x57fe:	xor	r12d, r12d
0x5801:	mov	qword ptr [rsp + 0x50], 0
0x580a:	mov	byte ptr [rsp + 0xf], 1
0x580f:	mov	byte ptr [rsp + 0xd], 1
0x5814:	jmp	0x4a33


0x4a33:	lea	rax, [rip + 0x35ab]
0x4a3a:	mov	qword ptr [rsp + 0x18], 1
0x4a43:	xor	r15d, r15d
0x4a46:	mov	dword ptr [rsp + 8], 2
0x4a4e:	mov	qword ptr [rsp + 0x48], rax
0x4a53:	xor	r11d, r11d
0x4a56:	mov	rax, rbp
0x4a59:	mov	r8d, r12d
0x4a5c:	mov	rbp, r11
0x4a5f:	mov	r11, rax
0x4a62:	nop	word ptr [rax + rax]
0x4a68:	cmp	r11, rbp
0x4a6b:	setne	r12b
0x4a6f:	cmp	r11, -1
0x4a73:	jne	0x4a82


0x59e8:	test	ebx, ebx
0x59ea:	je	0x5b78


0x5b78:	mov	byte ptr [rsp + 0xd], 0
0x5b7d:	jmp	0x55f1


0x59f0:	lea	rax, [rip + 0x25ee]
0x59f7:	mov	byte ptr [rsp + 0xe], 1
0x59fc:	mov	byte ptr [rsp + 0x7c], 0
0x5a01:	xor	r12d, r12d
0x5a04:	mov	qword ptr [rsp + 0x50], 0
0x5a0d:	mov	byte ptr [rsp + 0xf], 1
0x5a12:	mov	byte ptr [rsp + 0xd], 0
0x5a17:	mov	qword ptr [rsp + 0x18], 1
0x5a20:	xor	r15d, r15d
0x5a23:	mov	qword ptr [rsp + 0x48], rax
0x5a28:	jmp	0x4a53


0x55f1:	test	r13, r13
0x55f4:	jne	0x5b8a


0x5bb4:	nop	
0x5bb6:	nop	word ptr cs:[rax + rax]


0x5d6b:	nop	dword ptr [rax + rax]


0x5da6:	nop	word ptr cs:[rax + rax]


0x5dc1:	nop	dword ptr [rax + rax]
0x5dc6:	nop	word ptr cs:[rax + rax]


0x5de1:	nop	dword ptr [rax + rax]
0x5de6:	nop	word ptr cs:[rax + rax]


0x5e25:	nop	
0x5e26:	nop	word ptr cs:[rax + rax]


0x5e45:	nop	
0x5e46:	nop	word ptr cs:[rax + rax]


0x5ef4:	nop	
0x5ef6:	nop	word ptr cs:[rax + rax]


0x5fe3:	nop	dword ptr [rax]
0x5fe6:	nop	word ptr cs:[rax + rax]


0x5ffa:	nop	word ptr [rax + rax]


0x6093:	nop	dword ptr [rax]
0x6096:	nop	word ptr cs:[rax + rax]


0x60b3:	nop	dword ptr [rax]
0x60b6:	nop	word ptr cs:[rax + rax]


0x60cc:	nop	dword ptr [rax]


0x60e8:	nop	dword ptr [rax + rax]


0x6104:	nop	
0x6106:	nop	word ptr cs:[rax + rax]


0x619e:	nop	


0x622a:	nop	word ptr [rax + rax]


0x623c:	nop	dword ptr [rax]


0x624f:	nop	


0x62e8:	nop	dword ptr [rax + rax]


0x6311:	nop	dword ptr [rax + rax]
0x6316:	nop	word ptr cs:[rax + rax]


0x632a:	nop	word ptr [rax + rax]


0x63be:	nop	


0x6451:	nop	dword ptr [rax + rax]
0x6456:	nop	word ptr cs:[rax + rax]


0x646c:	nop	dword ptr [rax]


0x6487:	nop	word ptr [rax + rax]


0x64a3:	nop	dword ptr [rax]
0x64a6:	nop	word ptr cs:[rax + rax]


0x64bc:	nop	dword ptr [rax]


0x64d4:	nop	
0x64d6:	nop	word ptr cs:[rax + rax]


0x64f3:	nop	dword ptr [rax]
0x64f6:	nop	word ptr cs:[rax + rax]


0x6518:	nop	dword ptr [rax + rax]


0x6937:	nop	word ptr [rax + rax]


0x69d8:	nop	dword ptr [rax + rax]


0x6ab5:	nop	
0x6ab6:	nop	word ptr cs:[rax + rax]


0x6b5a:	nop	word ptr [rax + rax]


0x6b84:	nop	
0x6b86:	nop	word ptr cs:[rax + rax]


0x6b92:	nop	dword ptr [rax]
0x6b96:	nop	word ptr cs:[rax + rax]


0x6bd6:	nop	word ptr cs:[rax + rax]


0x6c04:	nop	
0x6c06:	nop	word ptr cs:[rax + rax]


0x6c92:	nop	dword ptr [rax]
0x6c96:	nop	word ptr cs:[rax + rax]


0x6cea:	nop	word ptr [rax + rax]


0x6d07:	nop	word ptr [rax + rax]


0x6d3e:	nop	


0x6d68:	nop	dword ptr [rax + rax]


0x6d83:	nop	word ptr cs:[rax + rax]
0x6d8d:	nop	dword ptr [rax]


0x6dc5:	nop	word ptr cs:[rax + rax]
0x6dcf:	nop	


0x6e4b:	nop	dword ptr [rax + rax]


0x6ee7:	nop	word ptr [rax + rax]


0x6f73:	nop	word ptr cs:[rax + rax]
0x6f7d:	nop	dword ptr [rax]


0x6fde:	nop	


0x7169:	nop	dword ptr [rax]


0x719c:	nop	dword ptr [rax]


0x71ca:	nop	word ptr [rax + rax]


0x722d:	nop	dword ptr [rax]


0x72bf:	nop	


0x73f6:	nop	word ptr cs:[rax + rax]


0x74df:	nop	


0x74ec:	nop	dword ptr [rax]


0x7593:	nop	dword ptr [rax]
0x7596:	nop	word ptr cs:[rax + rax]


0x76e1:	nop	word ptr cs:[rax + rax]
0x76eb:	nop	dword ptr [rax + rax]


0x776d:	nop	dword ptr [rax]


0x780c:	nop	dword ptr [rax]


0x7875:	nop	
0x7876:	nop	word ptr cs:[rax + rax]


0x7882:	nop	word ptr cs:[rax + rax]
0x788c:	nop	dword ptr [rax]


0x2ca0:	cmp	r11d, 0x4f
0x2ca4:	je	0x2b10


0x2dd0:	test	r11d, r11d
0x2dd3:	jne	0x2b10


0x38a8:	cmp	r11d, 0x45
0x38ac:	je	0x2b10


0x4c40:	xor	r10d, r10d
0x4c43:	mov	eax, dword ptr [rsp + 8]
0x4c47:	cmp	eax, 2
0x4c4a:	je	0x5208


0x4c70:	xor	r10d, r10d
0x4c73:	cmp	dword ptr [rsp + 8], 2
0x4c78:	je	0x5180


0x4c98:	mov	edx, 9
0x4c9d:	mov	ebx, 0x74
0x4ca2:	cmp	dword ptr [rsp + 8], 2
0x4ca7:	sete	al
0x4caa:	and	al, byte ptr [rsp + 0xf]
0x4cae:	jne	0x4dfe


0x4cd8:	mov	edx, 8
0x4cdd:	mov	ebx, 0x62
0x4ce2:	jmp	0x4cb4


0x4ce8:	cmp	dword ptr [rsp + 8], 2
0x4ced:	je	0x50c0


0x4d90:	cmp	byte ptr [rsp + 0xd], 0
0x4d95:	jne	0x4f63


0x4db8:	cmp	dword ptr [rsp + 8], 2
0x4dbd:	sete	dl
0x4dc0:	xor	eax, eax
0x4dc2:	jmp	0x4ba8


0x4dd0:	mov	edx, 7
0x4dd5:	mov	ebx, 0x61
0x4dda:	jmp	0x4cb4


0x4de0:	cmp	dword ptr [rsp + 8], 2
0x4de5:	sete	dl
0x4de8:	test	rbp, rbp
0x4deb:	jne	0x4b9c


0x4e10:	cmp	dword ptr [rsp + 8], 2
0x4e15:	sete	dl
0x4e18:	xor	r12d, r12d
0x4e1b:	jmp	0x4df1


0x4e20:	cmp	dword ptr [rsp + 8], 2
0x4e25:	mov	ebx, 0x20
0x4e2a:	sete	dl
0x4e2d:	jmp	0x4df1


0x4e30:	mov	edx, 0xd
0x4e35:	mov	ebx, 0x72
0x4e3a:	jmp	0x4ca2


0x4e40:	mov	edx, 0xc
0x4e45:	mov	ebx, 0x66
0x4e4a:	jmp	0x4cb4


0x4e50:	mov	edx, 0xb
0x4e55:	mov	ebx, 0x76
0x4e5a:	jmp	0x4cb4


0x4e60:	mov	edx, 0xa
0x4e65:	mov	ebx, 0x6e
0x4e6a:	jmp	0x4ca2


0x4f00:	xor	r10d, r10d
0x4f03:	cmp	byte ptr [rsp + 0xd], 0
0x4f08:	jne	0x4cfe


0x4f20:	mov	edx, 0xc
0x4f25:	xor	r10d, r10d
0x4f28:	mov	ebx, 0x66
0x4f2d:	jmp	0x4cb4


0x4f38:	mov	edx, 0xa
0x4f3d:	xor	r10d, r10d
0x4f40:	mov	ebx, 0x6e
0x4f45:	jmp	0x4ca2


0x4f50:	mov	ebx, 0x61
0x4f55:	jmp	0x4d20


0x4f60:	xor	r10d, r10d
0x4f63:	cmp	dword ptr [rsp + 8], 2
0x4f68:	sete	dl
0x4f6b:	cmp	byte ptr [rsp + 0xf], 0
0x4f70:	jne	0x5b0a


0x5000:	cmp	dword ptr [rsp + 8], 2
0x5005:	mov	r12d, r10d
0x5008:	sete	dl
0x500b:	xor	r10d, r10d
0x500e:	xor	eax, eax
0x5010:	jmp	0x4ba8


0x5018:	cmp	dword ptr [rsp + 8], 2
0x501d:	sete	dl
0x5020:	xor	r10d, r10d
0x5023:	jmp	0x4de8


0x5030:	cmp	dword ptr [rsp + 8], 2
0x5035:	sete	dl
0x5038:	xor	r10d, r10d
0x503b:	xor	r12d, r12d
0x503e:	jmp	0x4df1


0x5048:	cmp	dword ptr [rsp + 8], 2
0x504d:	mov	r12d, r10d
0x5050:	mov	ebx, 0x20
0x5055:	sete	dl
0x5058:	xor	r10d, r10d
0x505b:	jmp	0x4df1


0x5078:	mov	ebx, 0x76
0x507d:	jmp	0x4d20


0x5088:	mov	edx, 9
0x508d:	xor	r10d, r10d
0x5090:	mov	ebx, 0x74
0x5095:	jmp	0x4ca2


0x50a0:	mov	ebx, 0x62
0x50a5:	jmp	0x4d20


0x5640:	test	ebx, ebx
0x5642:	jne	0x5a3d


0x1dd6:	nop	word ptr cs:[rax + rax]


0x1e27:	nop	word ptr [rax + rax]


0x1e71:	nop	dword ptr [rax]


0x1f14:	nop	dword ptr [rax]


0x1f4b:	nop	dword ptr [rax + rax]


0x2735:	nop	dword ptr [rax]


0x274f:	nop	


0x288e:	nop	


0x28ee:	nop	


0x29ee:	nop	


0x2ac5:	nop	dword ptr [rax]


0x2ad9:	nop	dword ptr [rax]


0x2aed:	nop	dword ptr [rax]


0x2afa:	nop	word ptr [rax + rax]


0x2bd6:	nop	word ptr cs:[rax + rax]


0x2c0b:	nop	dword ptr [rax + rax]


0x2c1a:	nop	word ptr [rax + rax]


0x2c5a:	nop	word ptr [rax + rax]


0x2c82:	nop	word ptr [rax + rax]


0x2c99:	nop	dword ptr [rax]


0x2dcd:	nop	dword ptr [rax]


0x335f:	nop	


0x38a3:	nop	dword ptr [rax + rax]


0x3bf8:	nop	dword ptr [rax + rax]


0x3c0f:	nop	


0x3ce5:	nop	dword ptr [rax]


0x3d02:	nop	word ptr [rax + rax]


0x3d26:	nop	word ptr cs:[rax + rax]


0x3d49:	nop	dword ptr [rax]


0x3d6a:	nop	word ptr [rax + rax]


0x41a6:	nop	word ptr cs:[rax + rax]


0x425c:	nop	dword ptr [rax]


0x461b:	nop	dword ptr [rax + rax]


0x4697:	nop	word ptr [rax + rax]


0x47a7:	nop	word ptr [rax + rax]


0x47de:	nop	


0x48cc:	nop	dword ptr [rax]


0x491d:	nop	dword ptr [rax]


0x4b48:	nop	dword ptr [rax + rax]


0x4c37:	nop	word ptr [rax + rax]


0x4c6e:	nop	


0x4c91:	nop	dword ptr [rax]


0x4cd2:	nop	word ptr [rax + rax]


0x4ce4:	nop	dword ptr [rax]


0x4d88:	nop	dword ptr [rax + rax]


0x4db1:	nop	dword ptr [rax]


0x4dc7:	nop	word ptr [rax + rax]


0x4ddf:	nop	


0x4e0e:	nop	


0x4e1d:	nop	dword ptr [rax]


0x4e2f:	nop	


0x4e3f:	nop	


0x4e4f:	nop	


0x4e5f:	nop	


0x4e6f:	nop	


0x4edc:	nop	dword ptr [rax]


0x4efc:	nop	dword ptr [rax]


0x4f0e:	nop	


0x4f1f:	nop	


0x4f32:	nop	word ptr [rax + rax]


0x4f4a:	nop	word ptr [rax + rax]


0x4f5a:	nop	word ptr [rax + rax]


0x4ffb:	nop	dword ptr [rax + rax]


0x5015:	nop	dword ptr [rax]


0x5028:	nop	dword ptr [rax + rax]


0x5043:	nop	dword ptr [rax + rax]


0x5072:	nop	word ptr [rax + rax]


0x5082:	nop	word ptr [rax + rax]


0x509a:	nop	word ptr [rax + rax]


0x50aa:	nop	word ptr [rax + rax]


0x50b8:	nop	dword ptr [rax + rax]


0x50df:	nop	


0x5179:	nop	dword ptr [rax]


0x51c2:	nop	word ptr [rax + rax]


0x51e8:	nop	dword ptr [rax + rax]


0x5201:	nop	dword ptr [rax]


0x5222:	nop	word ptr [rax + rax]


0x5388:	nop	dword ptr [rax + rax]


0x549b:	nop	dword ptr [rax + rax]


0x54be:	nop	


0x5585:	nop	dword ptr [rax]


0x563d:	nop	dword ptr [rax]


0x5846:	nop	word ptr cs:[rax + rax]


0x58d9:	nop	dword ptr [rax]


0x594d:	nop	dword ptr [rax]


0x5a2d:	nop	dword ptr [rax]


0x5d3b:	nop	dword ptr [rax + rax]


0x65c6:	nop	word ptr cs:[rax + rax]


0x6655:	nop	dword ptr [rax]


0x6676:	nop	word ptr cs:[rax + rax]


0x66d5:	nop	dword ptr [rax]


0x6711:	nop	dword ptr [rax]


0x6758:	nop	dword ptr [rax + rax]


0x67a7:	nop	word ptr [rax + rax]


0x6804:	nop	dword ptr [rax]


0x6832:	nop	word ptr [rax + rax]


0x68e6:	nop	word ptr cs:[rax + rax]


0x6949:	nop	dword ptr [rax]


0x6bc2:	nop	word ptr [rax + rax]


0x6c49:	nop	dword ptr [rax]


0x6c74:	nop	dword ptr [rax]


0x6ccd:	nop	dword ptr [rax]


0x6e15:	nop	dword ptr [rax]


0x6e73:	nop	dword ptr [rax + rax]


0x6e9f:	nop	


0x6fcb:	nop	dword ptr [rax + rax]


0x70b6:	nop	word ptr cs:[rax + rax]


0x70fb:	nop	dword ptr [rax + rax]


0x7189:	nop	dword ptr [rax]


0x71c2:	nop	word ptr [rax + rax]


0x721c:	nop	dword ptr [rax]


0x7293:	nop	dword ptr [rax + rax]


0x72ff:	nop	


0x7359:	nop	dword ptr [rax]


0x737f:	nop	


0x73c9:	nop	dword ptr [rax]


0x73df:	nop	


0x7489:	nop	dword ptr [rax]


0x74b2:	nop	word ptr [rax + rax]


0x74d4:	nop	dword ptr [rax]


0x7548:	nop	dword ptr [rax + rax]


0x756b:	nop	dword ptr [rax + rax]


0x763b:	nop	dword ptr [rax + rax]


0x76b8:	nop	dword ptr [rax + rax]


0x76cd:	nop	dword ptr [rax]


0x7724:	nop	dword ptr [rax]


0x7741:	nop	dword ptr [rax]


0x7752:	nop	word ptr [rax + rax]


0x77aa:	nop	word ptr [rax + rax]


0x77f6:	nop	word ptr cs:[rax + rax]


