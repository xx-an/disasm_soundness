0x7990:	sub	rsp, 8
0x7994:	add	rsp, 8
0x7998:	ret	


0x7980:	mov	rdx, qword ptr [rip + 0x203681]
0x7987:	xor	esi, esi
0x7989:	jmp	0x1820


0x7970:	ret	


0x7900:	push	r15
0x7902:	push	r14
0x7904:	mov	r15, rdx
0x7907:	push	r13
0x7909:	push	r12
0x790b:	lea	r12, [rip + 0x2031be]
0x7912:	push	rbp
0x7913:	lea	rbp, [rip + 0x2031be]
0x791a:	push	rbx
0x791b:	mov	r13d, edi
0x791e:	mov	r14, rsi
0x7921:	sub	rbp, r12
0x7924:	sub	rsp, 8
0x7928:	sar	rbp, 3
0x792c:	call	0x1528


0x6c10:	push	r15
0x6c12:	push	r14
0x6c14:	lea	rcx, [rsi + 0x20]
0x6c18:	push	r13
0x6c1a:	push	r12
0x6c1c:	lea	rax, [rdx + 0x10]
0x6c20:	push	rbp
0x6c21:	push	rbx
0x6c22:	mov	r14, rsi
0x6c25:	mov	r15, rdx
0x6c28:	xor	ebx, ebx
0x6c2a:	mov	r9d, 7
0x6c30:	sub	rsp, 0x58
0x6c34:	mov	r10d, 7
0x6c3a:	mov	qword ptr [rsi], 0
0x6c41:	mov	qword ptr [rsi + 8], rcx
0x6c45:	mov	qword ptr [rsp + 0x28], rcx
0x6c4a:	mov	r8, -1
0x6c51:	mov	qword ptr [rdx], 0
0x6c58:	mov	qword ptr [rsp + 8], rax
0x6c5d:	mov	qword ptr [rdx + 8], rax
0x6c61:	mov	qword ptr [rsp + 0x18], 0
0x6c6a:	mov	qword ptr [rsp + 0x10], 0
0x6c73:	mov	qword ptr [rsp + 0x20], 0
0x6c7c:	jmp	0x6c8b


0x6a10:	cmp	qword ptr [rsi], 0
0x6a14:	mov	rax, qword ptr [rsi + 8]
0x6a18:	je	0x6a7d


0x58f0:	push	rbp
0x58f1:	mov	rbp, rsp
0x58f4:	push	r15
0x58f6:	push	r14
0x58f8:	push	r13
0x58fa:	push	r12
0x58fc:	lea	r14, [rbp - 0x3b0]
0x5903:	push	rbx
0x5904:	mov	rbx, rdx
0x5907:	mov	r12, rcx
0x590a:	mov	rdx, r14
0x590d:	sub	rsp, 0x408
0x5914:	mov	qword ptr [rbp - 0x418], rsi
0x591b:	lea	rsi, [rbp - 0x2c0]
0x5922:	mov	qword ptr [rbp - 0x3e8], rdi
0x5929:	mov	rdi, rbx
0x592c:	mov	qword ptr [rbp - 0x410], r14
0x5933:	mov	rax, qword ptr fs:[0x28]
0x593c:	mov	qword ptr [rbp - 0x38], rax
0x5940:	xor	eax, eax
0x5942:	mov	qword ptr [rbp - 0x408], rsi
0x5949:	call	0x6c10


0x5890:	mov	rax, qword ptr [rdi + 8]
0x5894:	cmp	qword ptr [rdi + 0x10], rax
0x5898:	je	0x58a0


0x5850:	test	rdi, rdi
0x5853:	push	rbx
0x5854:	mov	rbx, rdi
0x5857:	je	0x586a


0x57d0:	push	r12
0x57d2:	push	rbp
0x57d3:	push	rbx
0x57d4:	mov	rbx, rdi
0x57d7:	call	0x1730


0x5790:	sub	rsp, 8
0x5794:	mov	edi, 0xe
0x5799:	call	0x1770


0x5730:	sub	rsp, 8
0x5734:	xor	esi, esi
0x5736:	call	0x17a0


0x56b0:	push	r12
0x56b2:	push	rbp
0x56b3:	mov	rbp, rdi
0x56b6:	push	rbx
0x56b7:	call	0x15d0


0x54a0:	push	r15
0x54a2:	push	r14
0x54a4:	mov	r15, r9
0x54a7:	push	r13
0x54a9:	push	r12
0x54ab:	mov	r13d, edi
0x54ae:	push	rbp
0x54af:	push	rbx
0x54b0:	mov	rbp, r8
0x54b3:	sub	rsp, 0x428
0x54ba:	mov	rax, qword ptr fs:[0x28]
0x54c3:	mov	qword ptr [rsp + 0x418], rax
0x54cb:	xor	eax, eax
0x54cd:	lea	rax, [rip + 0x20572c]
0x54d4:	test	r8, r8
0x54d7:	mov	qword ptr [rsp], rsi
0x54db:	cmove	rbp, rax
0x54df:	test	rcx, rcx
0x54e2:	jne	0x5600


0x5480:	lea	r9, [rip - 0x27]
0x5487:	mov	rsi, rdi
0x548a:	xor	r8d, r8d
0x548d:	xor	ecx, ecx
0x548f:	xor	edx, edx
0x5491:	mov	edi, 0xffffff9c
0x5496:	jmp	0x54a0


0x5460:	cmp	edi, -0x64
0x5463:	jne	0x5476


0x53e0:	push	rbx
0x53e1:	mov	rax, rsi
0x53e4:	mov	rbx, rdi
0x53e7:	xor	edi, edi
0x53e9:	sub	rsp, 0x10
0x53ed:	mov	rcx, qword ptr fs:[0x28]
0x53f6:	mov	qword ptr [rsp + 8], rcx
0x53fb:	xor	ecx, ecx
0x53fd:	mov	rsi, rsp
0x5400:	mov	rcx, rdx
0x5403:	mov	rdx, rax
0x5406:	call	0x58f0


0x5350:	push	r13
0x5352:	push	r12
0x5354:	mov	r13, rsi
0x5357:	push	rbp
0x5358:	push	rbx
0x5359:	mov	rbx, rdi
0x535c:	mov	r12, rdx
0x535f:	sub	rsp, 0x18
0x5363:	mov	rax, qword ptr fs:[0x28]
0x536c:	mov	qword ptr [rsp + 8], rax
0x5371:	xor	eax, eax
0x5373:	lea	rax, [rsp + 4]
0x5378:	test	rdi, rdi
0x537b:	cmove	rbx, rax
0x537f:	mov	rdi, rbx
0x5382:	call	0x1670


0x5290:	sub	rsp, 0xd8
0x5297:	test	al, al
0x5299:	mov	qword ptr [rsp + 0x30], rdx
0x529e:	mov	qword ptr [rsp + 0x38], rcx
0x52a3:	mov	qword ptr [rsp + 0x40], r8
0x52a8:	mov	qword ptr [rsp + 0x48], r9
0x52ad:	je	0x52e6


0x4e70:	push	r15
0x4e72:	push	r14
0x4e74:	push	r13
0x4e76:	push	r12
0x4e78:	push	rbp
0x4e79:	push	rbx
0x4e7a:	sub	rsp, 0x28
0x4e7e:	mov	rax, qword ptr fs:[0x28]
0x4e87:	mov	qword ptr [rsp + 0x18], rax
0x4e8c:	xor	eax, eax
0x4e8e:	cmp	edx, 0x24
0x4e91:	ja	0x51f5


0x4e40:	push	rbx
0x4e41:	call	0x5480


0x4e00:	lea	rsi, [rip + 0x3ce8]
0x4e07:	sub	rsp, 8
0x4e0b:	mov	edx, 5
0x4e10:	xor	edi, edi
0x4e12:	call	0x1620


0x4de0:	push	rbx
0x4de1:	mov	rbx, rdi
0x4de4:	call	0x1640


0x4db0:	push	rbp
0x4db1:	push	rbx
0x4db2:	mov	rbp, rdi
0x4db5:	mov	rdi, rsi
0x4db8:	mov	rbx, rsi
0x4dbb:	sub	rsp, 8
0x4dbf:	call	0x4bb0


0x4d80:	mov	rax, rdi
0x4d83:	sub	rsp, 8
0x4d87:	mul	rsi
0x4d8a:	seto	dl
0x4d8d:	test	rax, rax
0x4d90:	js	0x4da9


0x4d60:	push	rbx
0x4d61:	mov	rbx, rdi
0x4d64:	call	0x4bb0


0x4d10:	test	rdi, rdi
0x4d13:	mov	rax, qword ptr [rsi]
0x4d16:	je	0x4d40


0x4c80:	test	rdi, rdi
0x4c83:	mov	r9, rdx
0x4c86:	mov	rcx, qword ptr [rsi]
0x4c89:	je	0x4cc0


0x4c50:	mov	rax, rsi
0x4c53:	mul	rdx
0x4c56:	mov	rsi, rax
0x4c59:	seto	al
0x4c5c:	test	rsi, rsi
0x4c5f:	js	0x4c6b


0x4c10:	test	rsi, rsi
0x4c13:	push	rbx
0x4c14:	mov	rbx, rsi
0x4c17:	jne	0x4c1e


0x4c00:	jmp	0x4bb0


0x4bd0:	mov	rax, rdi
0x4bd3:	mul	rsi
0x4bd6:	mov	rdi, rax
0x4bd9:	seto	al
0x4bdc:	test	rdi, rdi
0x4bdf:	js	0x4beb


0x4bb0:	push	rbx
0x4bb1:	mov	rbx, rdi
0x4bb4:	call	0x1750


0x4b30:	push	rbx
0x4b31:	lea	rsi, [rip + 0x3caa]
0x4b38:	mov	edx, 5
0x4b3d:	xor	edi, edi
0x4b3f:	call	0x1620


0x4a50:	push	rbp
0x4a51:	push	rbx
0x4a52:	mov	r10d, 0x20
0x4a58:	xor	r11d, r11d
0x4a5b:	sub	rsp, 0xb8
0x4a62:	mov	rax, qword ptr fs:[0x28]
0x4a6b:	mov	qword ptr [rsp + 0x78], rax
0x4a70:	xor	eax, eax
0x4a72:	lea	rax, [rsp + 0xd0]
0x4a7a:	mov	qword ptr [rsp + 0xa0], r8
0x4a82:	lea	rbx, [rsp + 0xd0]
0x4a8a:	lea	r8, [rsp + 0x20]
0x4a8f:	mov	qword ptr [rsp + 0xa8], r9
0x4a97:	mov	dword ptr [rsp + 8], 0x20
0x4a9f:	mov	qword ptr [rsp + 0x10], rax
0x4aa4:	lea	rax, [rsp + 0x80]
0x4aac:	xor	r9d, r9d
0x4aaf:	mov	qword ptr [rsp + 0x18], rax
0x4ab4:	mov	rbp, rax
0x4ab7:	nop	word ptr [rax + rax]
0x4ac0:	cmp	r10d, 0x2f
0x4ac4:	ja	0x4b1c


0x49d0:	sub	rsp, 0x68
0x49d4:	mov	r10, r8
0x49d7:	xor	r9d, r9d
0x49da:	mov	rax, qword ptr fs:[0x28]
0x49e3:	mov	qword ptr [rsp + 0x58], rax
0x49e8:	xor	eax, eax
0x49ea:	mov	r8, rsp
0x49ed:	nop	dword ptr [rax]
0x49f0:	mov	eax, dword ptr [r10]
0x49f3:	cmp	eax, 0x2f
0x49f6:	ja	0x4a3a


0x49b0:	xor	r9d, r9d
0x49b3:	cmp	qword ptr [r8], 0
0x49b7:	je	0x49cb


0x4590:	push	r15
0x4592:	push	r14
0x4594:	push	r13
0x4596:	push	r12
0x4598:	mov	r12, r9
0x459b:	push	rbp
0x459c:	push	rbx
0x459d:	mov	rbp, rdi
0x45a0:	mov	rbx, r8
0x45a3:	sub	rsp, 0x28
0x45a7:	test	rsi, rsi
0x45aa:	je	0x46c8


0x4570:	lea	rcx, [rip + 0x206aa9]
0x4577:	mov	rsi, rdi
0x457a:	mov	rdx, -1
0x4581:	xor	edi, edi
0x4583:	jmp	0x3c30


0x4550:	lea	rcx, [rip + 0x206ac9]
0x4557:	mov	rdx, -1
0x455e:	jmp	0x3c30


0x4530:	lea	rcx, [rip + 0x206ae9]
0x4537:	mov	rdx, rsi
0x453a:	mov	rsi, rdi
0x453d:	xor	edi, edi
0x453f:	jmp	0x3c30


0x4520:	lea	rcx, [rip + 0x206af9]
0x4527:	jmp	0x3c30


0x4500:	mov	r8, rcx
0x4503:	mov	rcx, rdx
0x4506:	mov	rdx, rsi
0x4509:	mov	rsi, rdi
0x450c:	xor	edi, edi
0x450e:	jmp	0x4430


0x44e0:	mov	rcx, rdx
0x44e3:	mov	r8, -1
0x44ea:	mov	rdx, rsi
0x44ed:	mov	rsi, rdi
0x44f0:	xor	edi, edi
0x44f2:	jmp	0x4430


0x44d0:	mov	r8, -1
0x44d7:	jmp	0x4430


0x4430:	sub	rsp, 0x48
0x4434:	mov	r9, rcx
0x4437:	mov	rcx, qword ptr [rip + 0x206e52]
0x443e:	movdqa	xmm0, xmmword ptr [rip + 0x206e1a]
0x4446:	mov	rax, qword ptr fs:[0x28]
0x444f:	mov	qword ptr [rsp + 0x38], rax
0x4454:	xor	eax, eax
0x4456:	movaps	xmmword ptr [rsp], xmm0
0x445a:	test	rsi, rsi
0x445d:	mov	qword ptr [rsp + 0x30], rcx
0x4462:	mov	dword ptr [rsp], 0xa
0x4469:	movdqa	xmm0, xmmword ptr [rip + 0x206dff]
0x4471:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x4476:	movdqa	xmm0, xmmword ptr [rip + 0x206e02]
0x447e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x4483:	je	0x44b7


0x43a0:	sub	rsp, 0x48
0x43a4:	mov	rax, rdx
0x43a7:	mov	rdx, qword ptr fs:[0x28]
0x43b0:	mov	qword ptr [rsp + 0x38], rdx
0x43b5:	xor	edx, edx
0x43b7:	cmp	esi, 0xa
0x43ba:	je	0x4424


0x4390:	mov	edx, 0x3a
0x4395:	jmp	0x42c0


0x4370:	mov	edx, 0x3a
0x4375:	mov	rsi, -1
0x437c:	jmp	0x42c0


0x4360:	movsx	edx, sil
0x4364:	mov	rsi, -1
0x436b:	jmp	0x42c0


0x42c0:	sub	rsp, 0x48
0x42c4:	mov	ecx, edx
0x42c6:	mov	rax, qword ptr fs:[0x28]
0x42cf:	mov	qword ptr [rsp + 0x38], rax
0x42d4:	xor	eax, eax
0x42d6:	mov	rax, qword ptr [rip + 0x206fb3]
0x42dd:	mov	r8, rsp
0x42e0:	and	ecx, 0x1f
0x42e3:	movdqa	xmm0, xmmword ptr [rip + 0x206f75]
0x42eb:	mov	qword ptr [rsp + 0x30], rax
0x42f0:	mov	eax, edx
0x42f2:	movaps	xmmword ptr [rsp], xmm0
0x42f6:	shr	al, 5
0x42f9:	movzx	eax, al
0x42fc:	lea	r9, [r8 + rax*4 + 8]
0x4301:	movdqa	xmm0, xmmword ptr [rip + 0x206f67]
0x4309:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x430e:	movdqa	xmm0, xmmword ptr [rip + 0x206f6a]
0x4316:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x431b:	mov	edx, dword ptr [r9]
0x431e:	mov	eax, edx
0x4320:	shr	eax, cl
0x4322:	not	eax
0x4324:	and	eax, 1
0x4327:	shl	eax, cl
0x4329:	mov	rcx, r8
0x432c:	xor	eax, edx
0x432e:	mov	rdx, rsi
0x4331:	mov	rsi, rdi
0x4334:	mov	dword ptr [r9], eax
0x4337:	xor	edi, edi
0x4339:	call	0x3c30


0x42b0:	mov	rcx, rdx
0x42b3:	mov	rdx, rsi
0x42b6:	mov	esi, edi
0x42b8:	xor	edi, edi
0x42ba:	jmp	0x4210


0x42a0:	mov	rdx, rsi
0x42a3:	mov	esi, edi
0x42a5:	xor	edi, edi
0x42a7:	jmp	0x4180


0x4210:	sub	rsp, 0x48
0x4214:	mov	rax, rdx
0x4217:	mov	rdx, rcx
0x421a:	mov	rcx, qword ptr fs:[0x28]
0x4223:	mov	qword ptr [rsp + 0x38], rcx
0x4228:	xor	ecx, ecx
0x422a:	cmp	esi, 0xa
0x422d:	je	0x4290


0x4180:	sub	rsp, 0x48
0x4184:	mov	rax, rdx
0x4187:	mov	rdx, qword ptr fs:[0x28]
0x4190:	mov	qword ptr [rsp + 0x38], rdx
0x4195:	xor	edx, edx
0x4197:	cmp	esi, 0xa
0x419a:	je	0x4204


0x4160:	lea	rcx, [rip + 0x2070f9]
0x4167:	mov	rdx, rsi
0x416a:	mov	rsi, rdi
0x416d:	xor	edi, edi
0x416f:	jmp	0x3c30


0x4140:	lea	rcx, [rip + 0x207119]
0x4147:	mov	rsi, rdi
0x414a:	mov	rdx, -1
0x4151:	xor	edi, edi
0x4153:	jmp	0x3c30


0x4130:	lea	rcx, [rip + 0x207129]
0x4137:	jmp	0x3c30


0x4110:	lea	rcx, [rip + 0x207149]
0x4117:	mov	rdx, -1
0x411e:	jmp	0x3c30


0x4070:	mov	eax, dword ptr [rip + 0x206fe2]
0x4076:	push	r12
0x4078:	mov	r12, qword ptr [rip + 0x206fe1]
0x407f:	push	rbp
0x4080:	push	rbx
0x4081:	cmp	eax, 1
0x4084:	jle	0x40b1


0x4060:	mov	rcx, rdx
0x4063:	xor	edx, edx
0x4065:	jmp	0x3f70


0x3f70:	push	r15
0x3f72:	push	r14
0x3f74:	lea	rax, [rip + 0x2072e5]
0x3f7b:	push	r13
0x3f7d:	push	r12
0x3f7f:	mov	r12, rdx
0x3f82:	push	rbp
0x3f83:	push	rbx
0x3f84:	mov	rbx, rcx
0x3f87:	mov	r14, rdi
0x3f8a:	mov	r15, rsi
0x3f8d:	sub	rsp, 0x38
0x3f91:	test	rcx, rcx
0x3f94:	cmove	rbx, rax
0x3f98:	xor	ebp, ebp
0x3f9a:	call	0x15a0


0x3ef0:	push	r15
0x3ef2:	push	r14
0x3ef4:	lea	rax, [rip + 0x207365]
0x3efb:	push	r13
0x3efd:	push	r12
0x3eff:	mov	r13, rdi
0x3f02:	push	rbp
0x3f03:	push	rbx
0x3f04:	mov	rbx, r8
0x3f07:	mov	r14, rsi
0x3f0a:	mov	r15, rdx
0x3f0d:	sub	rsp, 0x18
0x3f11:	test	r8, r8
0x3f14:	cmove	rbx, rax
0x3f18:	mov	qword ptr [rsp + 8], rcx
0x3f1d:	call	0x15a0


0x3ec0:	lea	rax, [rip + 0x207399]
0x3ec7:	test	rdi, rdi
0x3eca:	cmove	rdi, rax
0x3ece:	test	rsi, rsi
0x3ed1:	mov	dword ptr [rdi], 0xa
0x3ed7:	je	0x3ee7


0x3ea0:	lea	rax, [rip + 0x2073b9]
0x3ea7:	test	rdi, rdi
0x3eaa:	cmove	rdi, rax
0x3eae:	mov	eax, dword ptr [rdi + 4]
0x3eb1:	mov	dword ptr [rdi + 4], esi
0x3eb4:	ret	


0x3e60:	lea	rax, [rip + 0x2073f9]
0x3e67:	test	rdi, rdi
0x3e6a:	mov	ecx, esi
0x3e6c:	cmove	rdi, rax
0x3e70:	mov	eax, esi
0x3e72:	and	ecx, 0x1f
0x3e75:	shr	al, 5
0x3e78:	movzx	eax, al
0x3e7b:	lea	rdi, [rdi + rax*4 + 8]
0x3e80:	mov	esi, dword ptr [rdi]
0x3e82:	mov	eax, esi
0x3e84:	shr	eax, cl
0x3e86:	xor	edx, eax
0x3e88:	and	eax, 1
0x3e8b:	and	edx, 1
0x3e8e:	shl	edx, cl
0x3e90:	xor	edx, esi
0x3e92:	mov	dword ptr [rdi], edx
0x3e94:	ret	


0x3e40:	lea	rax, [rip + 0x207419]
0x3e47:	test	rdi, rdi
0x3e4a:	cmove	rdi, rax
0x3e4e:	mov	dword ptr [rdi], esi
0x3e50:	ret	


0x3e20:	lea	rax, [rip + 0x207439]
0x3e27:	test	rdi, rdi
0x3e2a:	cmove	rdi, rax
0x3e2e:	mov	eax, dword ptr [rdi]
0x3e30:	ret	


0x3de0:	push	r12
0x3de2:	push	rbp
0x3de3:	push	rbx
0x3de4:	mov	rbx, rdi
0x3de7:	call	0x15a0


0x3c30:	push	r15
0x3c32:	push	r14
0x3c34:	movsxd	r15, edi
0x3c37:	push	r13
0x3c39:	push	r12
0x3c3b:	mov	r14, rdx
0x3c3e:	push	rbp
0x3c3f:	push	rbx
0x3c40:	mov	rbp, rcx
0x3c43:	sub	rsp, 0x28
0x3c47:	mov	qword ptr [rsp + 8], rsi
0x3c4c:	call	0x15a0


0x29f0:	push	r15
0x29f2:	push	r14
0x29f4:	mov	r15d, r8d
0x29f7:	push	r13
0x29f9:	push	r12
0x29fb:	mov	r14, rdi
0x29fe:	push	rbp
0x29ff:	push	rbx
0x2a00:	mov	ebx, r9d
0x2a03:	mov	r13, rsi
0x2a06:	mov	rbp, rcx
0x2a09:	and	ebx, 2
0x2a0c:	sub	rsp, 0xb8
0x2a13:	mov	rax, qword ptr [rsp + 0xf0]
0x2a1b:	mov	qword ptr [rsp + 0x10], rdx
0x2a20:	mov	dword ptr [rsp + 8], r8d
0x2a25:	mov	dword ptr [rsp + 0x78], r9d
0x2a2a:	mov	qword ptr [rsp + 0x20], rax
0x2a2f:	mov	rax, qword ptr [rsp + 0xf8]
0x2a37:	mov	qword ptr [rsp + 0x68], rax
0x2a3c:	mov	rax, qword ptr [rsp + 0x100]
0x2a44:	mov	qword ptr [rsp + 0x60], rax
0x2a49:	mov	rax, qword ptr fs:[0x28]
0x2a52:	mov	qword ptr [rsp + 0xa8], rax
0x2a5a:	xor	eax, eax
0x2a5c:	call	0x1630


0x2900:	push	rbp
0x2901:	push	rbx
0x2902:	mov	rbp, rdi
0x2905:	mov	ebx, esi
0x2907:	sub	rsp, 8
0x290b:	call	0x5790


0x2860:	test	rdi, rdi
0x2863:	push	rbx
0x2864:	je	0x28dd


0x2760:	push	r15
0x2762:	push	r14
0x2764:	mov	r15, rdx
0x2767:	push	r13
0x2769:	push	r12
0x276b:	mov	r12, rdi
0x276e:	push	rbp
0x276f:	push	rbx
0x2770:	mov	rbp, rsi
0x2773:	sub	rsp, 0x18
0x2777:	call	0x2690


0x2740:	sub	rsp, 8
0x2744:	call	0x2760


0x26f0:	push	rbx
0x26f1:	mov	rbx, rdi
0x26f4:	call	0x1640


0x2690:	movzx	edx, byte ptr [rdi]
0x2693:	mov	rax, rdi
0x2696:	cmp	dl, 0x2f
0x2699:	jne	0x26ac


0x2630:	push	rbp
0x2631:	push	rbx
0x2632:	mov	rbp, rdi
0x2635:	sub	rsp, 8
0x2639:	call	0x25d0


0x25d0:	push	rbp
0x25d1:	push	rbx
0x25d2:	xor	ebp, ebp
0x25d4:	mov	rbx, rdi
0x25d7:	sub	rsp, 8
0x25db:	cmp	byte ptr [rdi], 0x2f
0x25de:	sete	bpl
0x25e2:	call	0x2690


0x25b0:	sub	rsp, 8
0x25b4:	call	0x2630


0x2500:	push	rbp
0x2501:	push	rbx
0x2502:	sub	rsp, 8
0x2506:	mov	rdi, qword ptr [rip + 0x208b7b]
0x250d:	call	0x56b0


0x24f0:	mov	byte ptr [rip + 0x208c39], dil
0x24f7:	ret	


0x24e0:	mov	qword ptr [rip + 0x208c51], rdi
0x24e7:	ret	


0x20c0:	push	r13
0x20c2:	push	r12
0x20c4:	mov	edx, 5
0x20c9:	push	rbp
0x20ca:	push	rbx
0x20cb:	mov	ebp, edi
0x20cd:	sub	rsp, 0x88
0x20d4:	mov	rbx, qword ptr [rip + 0x209065]
0x20db:	mov	rax, qword ptr fs:[0x28]
0x20e4:	mov	qword ptr [rsp + 0x78], rax
0x20e9:	xor	eax, eax
0x20eb:	test	edi, edi
0x20ed:	je	0x211d


0x20b0:	push	rbp
0x20b1:	mov	rbp, rsp
0x20b4:	pop	rbp
0x20b5:	jmp	0x2020


0x2070:	cmp	byte ptr [rip + 0x209051], 0
0x2077:	jne	0x20a8


0x2020:	lea	rdi, [rip + 0x209059]
0x2027:	lea	rsi, [rip + 0x209052]
0x202e:	push	rbp
0x202f:	sub	rsi, rdi
0x2032:	mov	rbp, rsp
0x2035:	sar	rsi, 3
0x2039:	mov	rax, rsi
0x203c:	shr	rax, 0x3f
0x2040:	add	rsi, rax
0x2043:	sar	rsi, 1
0x2046:	je	0x2060


0x1fe0:	lea	rdi, [rip + 0x209099]
0x1fe7:	push	rbp
0x1fe8:	lea	rax, [rip + 0x209091]
0x1fef:	cmp	rax, rdi
0x1ff2:	mov	rbp, rsp
0x1ff5:	je	0x2010


0x1fb0:	xor	ebp, ebp
0x1fb2:	mov	r9, rdx
0x1fb5:	pop	rsi
0x1fb6:	mov	rdx, rsp
0x1fb9:	and	rsp, 0xfffffffffffffff0
0x1fbd:	push	rax
0x1fbe:	push	rsp
0x1fbf:	lea	r8, [rip + 0x59aa]
0x1fc6:	lea	rcx, [rip + 0x5933]
0x1fcd:	lea	rdi, [rip - 0x734]
0x1fd4:	call	qword ptr [rip + 0x208ff6]


0x18a0:	push	r15
0x18a2:	push	r14
0x18a4:	movabs	r15, 0x100003e00
0x18ae:	push	r13
0x18b0:	push	r12
0x18b2:	lea	r13, [rip + 0x6967]
0x18b9:	push	rbp
0x18ba:	push	rbx
0x18bb:	mov	ebp, edi
0x18bd:	mov	rbx, rsi
0x18c0:	sub	rsp, 0xf8
0x18c7:	mov	rdi, qword ptr [rsi]
0x18ca:	mov	rax, qword ptr fs:[0x28]
0x18d3:	mov	qword ptr [rsp + 0xe8], rax
0x18db:	xor	eax, eax
0x18dd:	call	0x2860


0x1528:	sub	rsp, 8
0x152c:	mov	rax, qword ptr [rip + 0x209aa5]
0x1533:	test	rax, rax
0x1536:	je	0x153a


0x1820:	jmp	qword ptr [rip + 0x20976a]


0x6c8b:	movzx	eax, byte ptr [rdi]
0x6c8e:	test	al, al
0x6c90:	jne	0x6c80


0x6a7d:	xor	eax, eax
0x6a7f:	ret	


0x6a1a:	lea	r8, [rip + 0x227f]
0x6a21:	lea	r10, [rip + 0x22d8]
0x6a28:	lea	r9, [rip + 0x2269]
0x6a2f:	xor	ecx, ecx
0x6a31:	nop	dword ptr [rax]
0x6a38:	cmp	dword ptr [rax], 0x16
0x6a3b:	ja	0x6a80


0x58a0:	mov	rax, qword ptr [rdi + 0x20]
0x58a4:	cmp	qword ptr [rdi + 0x28], rax
0x58a8:	jne	0x589a


0x589a:	jmp	0x17f0


0x586a:	mov	rdi, rbx
0x586d:	pop	rbx
0x586e:	jmp	0x1760


0x5859:	call	0x1780


0x1730:	jmp	qword ptr [rip + 0x2097e2]


0x1770:	jmp	qword ptr [rip + 0x2097c2]


0x17a0:	jmp	qword ptr [rip + 0x2097aa]


0x15d0:	jmp	qword ptr [rip + 0x209892]


0x54e8:	lea	r12, [rsp + 0x10]
0x54ed:	mov	ebx, 0x400
0x54f2:	mov	r14, r12
0x54f5:	jmp	0x5511


0x5600:	mov	r12, rdx
0x5603:	mov	rbx, rcx
0x5606:	jmp	0x54f2


0x5465:	mov	rax, rsi
0x5468:	mov	rsi, rdx
0x546b:	mov	rdx, rcx
0x546e:	mov	rdi, rax
0x5471:	jmp	0x15e0


0x5476:	sub	rsp, 8
0x547a:	call	0x1590


0x1670:	jmp	qword ptr [rip + 0x209842]


0x52e6:	mov	rax, qword ptr fs:[0x28]
0x52ef:	mov	qword ptr [rsp + 0x18], rax
0x52f4:	xor	eax, eax
0x52f6:	lea	rax, [rsp + 0xe0]
0x52fe:	mov	rdx, rsp
0x5301:	mov	qword ptr [rsp + 8], rax
0x5306:	lea	rax, [rsp + 0x20]
0x530b:	mov	dword ptr [rsp], 0x10
0x5312:	mov	dword ptr [rsp + 4], 0x30
0x531a:	mov	qword ptr [rsp + 0x10], rax
0x531f:	call	0x53e0


0x52af:	movaps	xmmword ptr [rsp + 0x50], xmm0
0x52b4:	movaps	xmmword ptr [rsp + 0x60], xmm1
0x52b9:	movaps	xmmword ptr [rsp + 0x70], xmm2
0x52be:	movaps	xmmword ptr [rsp + 0x80], xmm3
0x52c6:	movaps	xmmword ptr [rsp + 0x90], xmm4
0x52ce:	movaps	xmmword ptr [rsp + 0xa0], xmm5
0x52d6:	movaps	xmmword ptr [rsp + 0xb0], xmm6
0x52de:	movaps	xmmword ptr [rsp + 0xc0], xmm7
0x52e6:	mov	rax, qword ptr fs:[0x28]
0x52ef:	mov	qword ptr [rsp + 0x18], rax
0x52f4:	xor	eax, eax
0x52f6:	lea	rax, [rsp + 0xe0]
0x52fe:	mov	rdx, rsp
0x5301:	mov	qword ptr [rsp + 8], rax
0x5306:	lea	rax, [rsp + 0x20]
0x530b:	mov	dword ptr [rsp], 0x10
0x5312:	mov	dword ptr [rsp + 4], 0x30
0x531a:	mov	qword ptr [rsp + 0x10], rax
0x531f:	call	0x53e0


0x4e97:	lea	rax, [rsp + 0x10]
0x4e9c:	mov	r15, rsi
0x4e9f:	test	rsi, rsi
0x4ea2:	mov	rbp, rdi
0x4ea5:	mov	dword ptr [rsp + 8], edx
0x4ea9:	mov	r14, rcx
0x4eac:	mov	r13, r8
0x4eaf:	cmove	r15, rax
0x4eb3:	call	0x15a0


0x51f5:	lea	rcx, [rip + 0x3a24]
0x51fc:	lea	rsi, [rip + 0x38fd]
0x5203:	lea	rdi, [rip + 0x3916]
0x520a:	mov	edx, 0x54
0x520f:	call	0x16b0


0x1620:	jmp	qword ptr [rip + 0x20986a]


0x1640:	jmp	qword ptr [rip + 0x20985a]


0x4da9:	call	0x4e00


0x4d92:	movzx	edx, dl
0x4d95:	test	rdx, rdx
0x4d98:	jne	0x4da9


0x4d40:	test	rax, rax
0x4d43:	mov	edx, 0x80
0x4d48:	cmove	rax, rdx
0x4d4c:	test	rax, rax
0x4d4f:	jns	0x4d32


0x4d18:	movabs	rdx, 0x5555555555555553
0x4d22:	cmp	rax, rdx
0x4d25:	ja	0x4d51


0x4cc0:	test	rcx, rcx
0x4cc3:	je	0x4ce8


0x4c8b:	xor	edx, edx
0x4c8d:	movabs	rax, 0x5555555555555554
0x4c97:	div	r9
0x4c9a:	cmp	rax, rcx
0x4c9d:	jbe	0x4cdb


0x4c6b:	sub	rsp, 8
0x4c6f:	call	0x4e00


0x4c61:	movzx	eax, al
0x4c64:	test	rax, rax
0x4c67:	jne	0x4c6b


0x4c19:	test	rdi, rdi
0x4c1c:	jne	0x4c38


0x4c1e:	mov	rsi, rbx
0x4c21:	call	0x1790


0x4beb:	sub	rsp, 8
0x4bef:	call	0x4e00


0x4be1:	movzx	eax, al
0x4be4:	test	rax, rax
0x4be7:	jne	0x4beb


0x1750:	jmp	qword ptr [rip + 0x2097d2]


0x4ac6:	mov	eax, r10d
0x4ac9:	mov	r11d, 1
0x4acf:	add	r10d, 8
0x4ad3:	add	rax, rbp
0x4ad6:	mov	rax, qword ptr [rax]
0x4ad9:	test	rax, rax
0x4adc:	mov	qword ptr [r8 + r9*8], rax
0x4ae0:	je	0x4aec


0x4b1c:	mov	rax, rbx
0x4b1f:	add	rbx, 8
0x4b23:	jmp	0x4ad6


0x49f8:	mov	r11d, eax
0x49fb:	add	r11, qword ptr [r10 + 0x10]
0x49ff:	add	eax, 8
0x4a02:	mov	dword ptr [r10], eax
0x4a05:	mov	rax, qword ptr [r11]
0x4a08:	test	rax, rax
0x4a0b:	mov	qword ptr [r8 + r9*8], rax
0x4a0f:	je	0x4a1b


0x4a3a:	mov	r11, qword ptr [r10 + 8]
0x4a3e:	lea	rax, [r11 + 8]
0x4a42:	mov	qword ptr [r10 + 8], rax
0x4a46:	jmp	0x4a05


0x49cb:	jmp	0x4590


0x46c8:	mov	r8, rcx
0x46cb:	mov	rcx, rdx
0x46ce:	lea	rdx, [rip + 0x40bf]
0x46d5:	mov	esi, 1
0x46da:	xor	eax, eax
0x46dc:	call	0x1850


0x45b0:	mov	r8, rdx
0x45b3:	lea	rdx, [rip + 0x41ce]
0x45ba:	mov	r9, rcx
0x45bd:	xor	eax, eax
0x45bf:	mov	rcx, rsi
0x45c2:	mov	esi, 1
0x45c7:	call	0x1850


0x44b7:	call	0x1590


0x4485:	test	rdx, rdx
0x4488:	je	0x44b7


0x4424:	call	0x1590


0x43bc:	mov	dword ptr [rsp], esi
0x43bf:	mov	rcx, rsp
0x43c2:	mov	rdx, -1
0x43c9:	mov	rsi, rax
0x43cc:	mov	qword ptr [rsp + 4], 0
0x43d5:	mov	qword ptr [rsp + 0xc], 0x4000000
0x43de:	mov	qword ptr [rsp + 0x14], 0
0x43e7:	mov	qword ptr [rsp + 0x1c], 0
0x43f0:	mov	qword ptr [rsp + 0x24], 0
0x43f9:	mov	qword ptr [rsp + 0x2c], 0
0x4402:	mov	dword ptr [rsp + 0x34], 0
0x440a:	call	0x3c30


0x4290:	call	0x1590


0x422f:	mov	dword ptr [rsp], esi
0x4232:	mov	rcx, rsp
0x4235:	mov	rsi, rax
0x4238:	mov	qword ptr [rsp + 4], 0
0x4241:	mov	qword ptr [rsp + 0xc], 0
0x424a:	mov	qword ptr [rsp + 0x14], 0
0x4253:	mov	qword ptr [rsp + 0x1c], 0
0x425c:	mov	qword ptr [rsp + 0x24], 0
0x4265:	mov	qword ptr [rsp + 0x2c], 0
0x426e:	mov	dword ptr [rsp + 0x34], 0
0x4276:	call	0x3c30


0x4204:	call	0x1590


0x419c:	mov	dword ptr [rsp], esi
0x419f:	mov	rcx, rsp
0x41a2:	mov	rdx, -1
0x41a9:	mov	rsi, rax
0x41ac:	mov	qword ptr [rsp + 4], 0
0x41b5:	mov	qword ptr [rsp + 0xc], 0
0x41be:	mov	qword ptr [rsp + 0x14], 0
0x41c7:	mov	qword ptr [rsp + 0x1c], 0
0x41d0:	mov	qword ptr [rsp + 0x24], 0
0x41d9:	mov	qword ptr [rsp + 0x2c], 0
0x41e2:	mov	dword ptr [rsp + 0x34], 0
0x41ea:	call	0x3c30


0x40b1:	mov	rdi, qword ptr [r12 + 8]
0x40b6:	lea	rbx, [rip + 0x2070a3]
0x40bd:	cmp	rdi, rbx
0x40c0:	je	0x40d9


0x4086:	sub	eax, 2
0x4089:	lea	rbx, [r12 + 0x18]
0x408e:	shl	rax, 4
0x4092:	lea	rbp, [r12 + rax + 0x28]
0x4097:	nop	word ptr [rax + rax]
0x40a0:	mov	rdi, qword ptr [rbx]
0x40a3:	add	rbx, 0x10
0x40a7:	call	0x1580


0x15a0:	jmp	qword ptr [rip + 0x2098aa]


0x3ee7:	sub	rsp, 8
0x3eeb:	call	0x1590


0x3ed9:	test	rdx, rdx
0x3edc:	je	0x3ee7


0x1630:	jmp	qword ptr [rip + 0x209862]


0x28dd:	mov	rcx, qword ptr [rip + 0x2087dc]
0x28e4:	lea	rdi, [rip + 0x5985]
0x28eb:	mov	edx, 0x37
0x28f0:	mov	esi, 1
0x28f5:	call	0x1840


0x2866:	mov	esi, 0x2f
0x286b:	mov	rbx, rdi
0x286e:	call	0x1690


0x26ac:	test	dl, dl
0x26ae:	je	0x26ea


0x211d:	lea	rsi, [rip + 0x5887]
0x2124:	xor	edi, edi
0x2126:	call	0x1620


0x20ef:	lea	rsi, [rip + 0x5aaa]
0x20f6:	xor	edi, edi
0x20f8:	call	0x1620


0x2079:	cmp	qword ptr [rip + 0x208f67], 0
0x2081:	push	rbp
0x2082:	mov	rbp, rsp
0x2085:	je	0x2093


0x20a8:	ret	


0x2060:	pop	rbp
0x2061:	ret	


0x2048:	mov	rax, qword ptr [rip + 0x208f91]
0x204f:	test	rax, rax
0x2052:	je	0x2060


0x2010:	pop	rbp
0x2011:	ret	


0x1ff7:	mov	rax, qword ptr [rip + 0x208fca]
0x1ffe:	test	rax, rax
0x2001:	je	0x2010




0x153a:	add	rsp, 8
0x153e:	ret	


0x1538:	call	rax




0x6c92:	lea	rax, [rbx + rbx*4]
0x6c96:	lea	rax, [rbx + rax*2]
0x6c9a:	mov	qword ptr [rcx + rax*8], rdi
0x6c9e:	mov	rax, qword ptr [rsp + 0x10]
0x6ca3:	mov	qword ptr [r14 + 0x10], rax
0x6ca7:	mov	rax, qword ptr [rsp + 0x18]
0x6cac:	mov	qword ptr [r14 + 0x18], rax
0x6cb0:	xor	eax, eax
0x6cb2:	add	rsp, 0x58
0x6cb6:	pop	rbx
0x6cb7:	pop	rbp
0x6cb8:	pop	r12
0x6cba:	pop	r13
0x6cbc:	pop	r14
0x6cbe:	pop	r15
0x6cc0:	ret	


0x6c80:	cmp	al, 0x25
0x6c82:	lea	rbp, [rdi + 1]
0x6c86:	je	0x6cc8


0x6a3d:	mov	edx, dword ptr [rax]
0x6a3f:	movsxd	rdx, dword ptr [r8 + rdx*4]
0x6a43:	add	rdx, r8
0x6a46:	jmp	rdx


0x6a80:	mov	eax, 0xffffffff
0x6a85:	ret	


0x58aa:	cmp	qword ptr [rdi + 0x48], 0
0x58af:	jne	0x589a


0x17f0:	jmp	qword ptr [rip + 0x209782]


0x1760:	jmp	qword ptr [rip + 0x2097ca]


0x1780:	jmp	qword ptr [rip + 0x2097ba]










0x5511:	mov	rcx, rbx
0x5514:	mov	rdx, r14
0x5517:	mov	rsi, qword ptr [rsp]
0x551b:	mov	edi, r13d
0x551e:	call	r15


0x54f2:	mov	r14, r12
0x54f5:	jmp	0x5511


0x15e0:	jmp	qword ptr [rip + 0x20988a]


0x1590:	jmp	qword ptr [rip + 0x2098b2]




0x16b0:	jmp	qword ptr [rip + 0x209822]






0x4d9a:	call	0x1700


0x4d51:	sub	rsp, 8
0x4d55:	call	0x4e00


0x4d32:	mov	qword ptr [rsi], rax
0x4d35:	mov	rsi, rax
0x4d38:	jmp	0x4c10


0x4d27:	mov	rdx, rax
0x4d2a:	shr	rdx, 1
0x4d2d:	lea	rax, [rdx + rax + 1]
0x4d32:	mov	qword ptr [rsi], rax
0x4d35:	mov	rsi, rax
0x4d38:	jmp	0x4c10


0x4ce8:	xor	edx, edx
0x4cea:	mov	eax, 0x80
0x4cef:	xor	r8d, r8d
0x4cf2:	div	r9
0x4cf5:	test	rax, rax
0x4cf8:	sete	r8b
0x4cfc:	lea	rcx, [r8 + rax]
0x4d00:	jmp	0x4cc5


0x4cc5:	mov	rax, rcx
0x4cc8:	mul	r9
0x4ccb:	seto	dl
0x4cce:	test	rax, rax
0x4cd1:	movzx	edx, dl
0x4cd4:	js	0x4cdb


0x4cdb:	sub	rsp, 8
0x4cdf:	call	0x4e00


0x4c9f:	mov	rax, rcx
0x4ca2:	shr	rax, 1
0x4ca5:	lea	rcx, [rax + rcx + 1]
0x4caa:	mov	qword ptr [rsi], rcx
0x4cad:	imul	rcx, r9
0x4cb1:	mov	rsi, rcx
0x4cb4:	jmp	0x4c10


0x4c69:	jmp	0x4c10


0x4c38:	call	0x1580


0x1790:	jmp	qword ptr [rip + 0x2097b2]


0x4be9:	jmp	0x4bb0




0x4aec:	test	r11b, r11b
0x4aef:	jne	0x4b15


0x4ae2:	add	r9, 1
0x4ae6:	cmp	r9, 0xa
0x4aea:	jne	0x4ac0


0x4ad6:	mov	rax, qword ptr [rax]
0x4ad9:	test	rax, rax
0x4adc:	mov	qword ptr [r8 + r9*8], rax
0x4ae0:	je	0x4aec


0x4a1b:	call	0x4590


0x4a11:	add	r9, 1
0x4a15:	cmp	r9, 0xa
0x4a19:	jne	0x49f0


0x4a05:	mov	rax, qword ptr [r11]
0x4a08:	test	rax, rax
0x4a0b:	mov	qword ptr [r8 + r9*8], rax
0x4a0f:	je	0x4a1b


0x49c0:	add	r9, 1
0x49c4:	cmp	qword ptr [r8 + r9*8], 0
0x49c9:	jne	0x49c0


0x1850:	jmp	qword ptr [rip + 0x209752]


0x448a:	mov	qword ptr [rsp + 0x28], rsi
0x448f:	mov	qword ptr [rsp + 0x30], rdx
0x4494:	mov	rcx, rsp
0x4497:	mov	rdx, r8
0x449a:	mov	rsi, r9
0x449d:	call	0x3c30


0x40d9:	lea	rbx, [rip + 0x206f90]
0x40e0:	cmp	r12, rbx
0x40e3:	je	0x40f4


0x40c2:	call	0x1580


0x1580:	jmp	qword ptr [rip + 0x2098ba]




0x3ede:	mov	qword ptr [rdi + 0x28], rsi
0x3ee2:	mov	qword ptr [rdi + 0x30], rdx
0x3ee6:	ret	




0x1840:	jmp	qword ptr [rip + 0x20975a]


0x1690:	jmp	qword ptr [rip + 0x209832]


0x26a0:	add	rax, 1
0x26a4:	movzx	edx, byte ptr [rax]
0x26a7:	cmp	dl, 0x2f
0x26aa:	je	0x26a0


0x26ea:	ret	


0x26b0:	mov	rcx, rax
0x26b3:	xor	esi, esi
0x26b5:	jmp	0x26d5


0x2093:	call	0x1fe0


0x2087:	mov	rdi, qword ptr [rip + 0x208f7a]
0x208e:	call	0x1890


0x2054:	pop	rbp
0x2055:	jmp	rax


0x2003:	pop	rbp
0x2004:	jmp	rax


0x6cc8:	lea	rax, [rbx + rbx*4]
0x6ccc:	mov	r13, r8
0x6ccf:	lea	rax, [rbx + rax*2]
0x6cd3:	lea	r12, [rcx + rax*8]
0x6cd7:	mov	qword ptr [r12], rdi
0x6cdb:	mov	dword ptr [r12 + 0x10], 0
0x6ce4:	mov	qword ptr [r12 + 0x18], 0
0x6ced:	mov	qword ptr [r12 + 0x20], 0
0x6cf6:	mov	qword ptr [r12 + 0x28], r8
0x6cfb:	mov	qword ptr [r12 + 0x30], 0
0x6d04:	mov	qword ptr [r12 + 0x38], 0
0x6d0d:	mov	qword ptr [r12 + 0x40], r8
0x6d12:	mov	qword ptr [r12 + 0x50], r8
0x6d17:	movzx	ebx, byte ptr [rdi + 1]
0x6d1b:	lea	eax, [rbx - 0x30]
0x6d1e:	cmp	al, 9
0x6d20:	ja	0x6d5e


0x6c88:	mov	rdi, rbp
0x6c8b:	movzx	eax, byte ptr [rdi]
0x6c8e:	test	al, al
0x6c90:	jne	0x6c80


0x58b1:	push	r12
0x58b3:	push	rbp
0x58b4:	mov	r12d, edx
0x58b7:	push	rbx
0x58b8:	mov	rbp, rsi
0x58bb:	mov	rbx, rdi
0x58be:	call	0x1730














0x1700:	jmp	qword ptr [rip + 0x2097fa]


0x4cd6:	test	rdx, rdx
0x4cd9:	je	0x4caa




0x4af1:	call	0x4590


0x4b15:	mov	dword ptr [rsp + 8], r10d
0x4b1a:	jmp	0x4af1


0x4ac0:	cmp	r10d, 0x2f
0x4ac4:	ja	0x4b1c


0x49f0:	mov	eax, dword ptr [r10]
0x49f3:	cmp	eax, 0x2f
0x49f6:	ja	0x4a3a




0x40f4:	pop	rbx
0x40f5:	mov	dword ptr [rip + 0x206f59], 1
0x40ff:	pop	rbp
0x4100:	pop	r12
0x4102:	ret	


0x40e5:	mov	rdi, r12
0x40e8:	call	0x1580








0x26d5:	cmp	dl, 0x2f
0x26d8:	jne	0x26c0


0x1890:	jmp	qword ptr [rip + 0x209752]


0x6d22:	jmp	0x715a


0x6d5e:	lea	rax, [rbp + 1]
0x6d62:	cmp	bl, 0x27
0x6d65:	mov	rdx, rax
0x6d68:	jne	0x6d30




0x4caa:	mov	qword ptr [rsi], rcx
0x4cad:	imul	rcx, r9
0x4cb1:	mov	rsi, rcx
0x4cb4:	jmp	0x4c10


0x26da:	add	rcx, 1
0x26de:	movzx	edx, byte ptr [rcx]
0x26e1:	mov	esi, 1
0x26e6:	test	dl, dl
0x26e8:	jne	0x26d5


0x26c0:	test	sil, sil
0x26c3:	je	0x26ca


0x715a:	mov	rax, rbp
0x715d:	nop	dword ptr [rax]
0x7160:	add	rax, 1
0x7164:	movzx	edx, byte ptr [rax]
0x7167:	lea	ecx, [rdx - 0x30]
0x716a:	cmp	cl, 9
0x716d:	jbe	0x7160


0x6d6a:	or	dword ptr [r12 + 0x10], 1
0x6d70:	jmp	0x6d58


0x6d30:	cmp	bl, 0x2d
0x6d33:	je	0x6d78


0x26ca:	add	rcx, 1
0x26ce:	movzx	edx, byte ptr [rcx]
0x26d1:	test	dl, dl
0x26d3:	je	0x26ea


0x26c5:	mov	rax, rcx
0x26c8:	xor	esi, esi
0x26ca:	add	rcx, 1
0x26ce:	movzx	edx, byte ptr [rcx]
0x26d1:	test	dl, dl
0x26d3:	je	0x26ea


0x7160:	add	rax, 1
0x7164:	movzx	edx, byte ptr [rax]
0x7167:	lea	ecx, [rdx - 0x30]
0x716a:	cmp	cl, 9
0x716d:	jbe	0x7160


0x716f:	cmp	dl, 0x24
0x7172:	mov	r13, r8
0x7175:	jne	0x6d5e


0x6d58:	movzx	ebx, byte ptr [rax]
0x6d5b:	mov	rbp, rax
0x6d5e:	lea	rax, [rbp + 1]
0x6d62:	cmp	bl, 0x27
0x6d65:	mov	rdx, rax
0x6d68:	jne	0x6d30


0x6d78:	or	dword ptr [r12 + 0x10], 2
0x6d7e:	jmp	0x6d58


0x6d35:	cmp	bl, 0x2b
0x6d38:	je	0x6d80


0x717b:	xor	edx, edx
0x717d:	movsx	eax, bl
0x7180:	movabs	rdi, 0x1999999999999999
0x718a:	mov	rsi, r8
0x718d:	sub	eax, 0x30
0x7190:	cmp	rdx, rdi
0x7193:	cdqe	
0x7195:	ja	0x719e


0x6d80:	or	dword ptr [r12 + 0x10], 4
0x6d86:	jmp	0x6d58


0x6d3a:	cmp	bl, 0x20
0x6d3d:	je	0x6d90


0x7197:	lea	rsi, [rdx + rdx*4]
0x719b:	add	rsi, rsi
0x719e:	mov	rcx, rbp
0x71a1:	add	rax, rsi
0x71a4:	movzx	ebx, byte ptr [rbp + 1]
0x71a8:	setb	sil
0x71ac:	add	rbp, 1
0x71b0:	mov	rdx, rax
0x71b3:	movzx	esi, sil
0x71b7:	test	rsi, rsi
0x71ba:	lea	edi, [rbx - 0x30]
0x71bd:	jne	0x754e


0x719e:	mov	rcx, rbp
0x71a1:	add	rax, rsi
0x71a4:	movzx	ebx, byte ptr [rbp + 1]
0x71a8:	setb	sil
0x71ac:	add	rbp, 1
0x71b0:	mov	rdx, rax
0x71b3:	movzx	esi, sil
0x71b7:	test	rsi, rsi
0x71ba:	lea	edi, [rbx - 0x30]
0x71bd:	jne	0x754e


0x6d90:	or	dword ptr [r12 + 0x10], 8
0x6d96:	jmp	0x6d58


0x6d3f:	cmp	bl, 0x23
0x6d42:	je	0x6da0


0x71c3:	cmp	dil, 9
0x71c7:	jbe	0x717d


0x754e:	cmp	dil, 9
0x7552:	ja	0x745b


0x6da0:	or	dword ptr [r12 + 0x10], 0x10
0x6da6:	jmp	0x6d58


0x6d44:	cmp	bl, 0x30
0x6d47:	je	0x6db0


0x717d:	movsx	eax, bl
0x7180:	movabs	rdi, 0x1999999999999999
0x718a:	mov	rsi, r8
0x718d:	sub	eax, 0x30
0x7190:	cmp	rdx, rdi
0x7193:	cdqe	
0x7195:	ja	0x719e


0x71c9:	mov	r13, rax
0x71cc:	sub	r13, 1
0x71d0:	cmp	r13, -3
0x71d4:	ja	0x745b


0x7558:	movsx	eax, bl
0x755b:	mov	rsi, r8
0x755e:	mov	rcx, rbp
0x7561:	sub	eax, 0x30
0x7564:	cdqe	
0x7566:	jmp	0x71a1


0x745b:	mov	rcx, qword ptr [r15 + 8]
0x745f:	cmp	qword ptr [rsp + 8], rcx
0x7464:	je	0x746e


0x6db0:	or	dword ptr [r12 + 0x10], 0x20
0x6db6:	jmp	0x6d58


0x6d49:	cmp	bl, 0x49
0x6d4c:	jne	0x6dc0


0x71da:	lea	rbp, [rcx + 2]
0x71de:	movzx	ebx, byte ptr [rcx + 2]
0x71e2:	jmp	0x6d5e


0x71a1:	add	rax, rsi
0x71a4:	movzx	ebx, byte ptr [rbp + 1]
0x71a8:	setb	sil
0x71ac:	add	rbp, 1
0x71b0:	mov	rdx, rax
0x71b3:	movzx	esi, sil
0x71b7:	test	rsi, rsi
0x71ba:	lea	edi, [rbx - 0x30]
0x71bd:	jne	0x754e


0x746e:	mov	rdi, qword ptr [r14 + 8]
0x7472:	cmp	qword ptr [rsp + 0x28], rdi
0x7477:	je	0x747e


0x7466:	mov	rdi, rcx
0x7469:	call	0x1580


0x6d4e:	or	dword ptr [r12 + 0x10], 0x40
0x6d54:	nop	dword ptr [rax]
0x6d58:	movzx	ebx, byte ptr [rax]
0x6d5b:	mov	rbp, rax
0x6d5e:	lea	rax, [rbp + 1]
0x6d62:	cmp	bl, 0x27
0x6d65:	mov	rdx, rax
0x6d68:	jne	0x6d30


0x6dc0:	cmp	bl, 0x2a
0x6dc3:	je	0x6f79


0x747e:	call	0x15a0


0x7479:	call	0x1580


0x6f79:	mov	rsi, qword ptr [rsp + 0x10]
0x6f7e:	mov	ecx, 1
0x6f83:	mov	qword ptr [r12 + 0x18], rbp
0x6f88:	mov	qword ptr [r12 + 0x20], rax
0x6f8d:	test	rsi, rsi
0x6f90:	cmovne	rcx, rsi
0x6f94:	mov	qword ptr [rsp + 0x10], rcx
0x6f99:	movzx	ecx, byte ptr [rbp + 1]
0x6f9d:	lea	esi, [rcx - 0x30]
0x6fa0:	cmp	sil, 9
0x6fa4:	jbe	0x7285


0x6dc9:	lea	ecx, [rbx - 0x30]
0x6dcc:	cmp	cl, 9
0x6dcf:	jbe	0x71e7


0x7285:	mov	rsi, rax
0x7288:	add	rsi, 1
0x728c:	movzx	edi, byte ptr [rsi]
0x728f:	lea	r11d, [rdi - 0x30]
0x7293:	cmp	r11b, 9
0x7297:	jbe	0x7288


0x6faa:	mov	rsi, qword ptr [rsp + 0x20]
0x6faf:	cmp	rsi, -1
0x6fb3:	lea	rdx, [rsi + 1]
0x6fb7:	mov	qword ptr [r12 + 0x28], rsi
0x6fbc:	je	0x745b


0x71e7:	mov	qword ptr [r12 + 0x18], rbp
0x71ec:	movzx	edi, byte ptr [rbp]
0x71f0:	mov	rsi, rbp
0x71f3:	lea	ecx, [rdi - 0x30]
0x71f6:	cmp	cl, 9
0x71f9:	jbe	0x7207


0x6dd5:	cmp	bl, 0x2e
0x6dd8:	je	0x70af


0x7288:	add	rsi, 1
0x728c:	movzx	edi, byte ptr [rsi]
0x728f:	lea	r11d, [rdi - 0x30]
0x7293:	cmp	r11b, 9
0x7297:	jbe	0x7288


0x7299:	cmp	dil, 0x24
0x729d:	jne	0x6faa


0x6fc2:	mov	rbx, qword ptr [rsp + 0x20]
0x6fc7:	mov	rbp, rax
0x6fca:	mov	qword ptr [rsp + 0x20], rdx
0x6fcf:	cmp	r9, rbx
0x6fd2:	mov	rcx, qword ptr [r15 + 8]
0x6fd6:	ja	0x7652


0x7207:	movzx	edi, byte ptr [rax]
0x720a:	lea	edx, [rdi - 0x30]
0x720d:	cmp	dl, 9
0x7210:	jbe	0x7200


0x71fb:	jmp	0x7230


0x70af:	cmp	byte ptr [rbp + 1], 0x2a
0x70b3:	mov	qword ptr [r12 + 0x30], rbp
0x70b8:	jne	0x723e


0x6dde:	xor	eax, eax
0x6de0:	mov	esi, 1
0x6de5:	jmp	0x6e17


0x72a3:	xor	esi, esi
0x72a5:	movsx	eax, cl
0x72a8:	movabs	rdi, 0x1999999999999999
0x72b2:	mov	rcx, r8
0x72b5:	sub	eax, 0x30
0x72b8:	cmp	rsi, rdi
0x72bb:	cdqe	
0x72bd:	ja	0x72c6


0x6fdc:	add	r9, r9
0x6fdf:	lea	rax, [rbx + 1]
0x6fe3:	cmp	r9, rbx
0x6fe6:	cmovbe	r9, rax
0x6fea:	movabs	rax, 0x7ffffffffffffff
0x6ff4:	cmp	r9, rax
0x6ff7:	ja	0x789b


0x7652:	mov	rax, qword ptr [r15]
0x7655:	jmp	0x7057


0x7200:	mov	rbp, rax
0x7203:	add	rax, 1
0x7207:	movzx	edi, byte ptr [rax]
0x720a:	lea	edx, [rdi - 0x30]
0x720d:	cmp	dl, 9
0x7210:	jbe	0x7200


0x7212:	mov	rcx, rax
0x7215:	lea	rdx, [rbp + 2]
0x7219:	mov	rbp, rax
0x721c:	sub	rcx, rsi
0x721f:	mov	rsi, qword ptr [rsp + 0x10]
0x7224:	cmp	rsi, rcx
0x7227:	cmovae	rcx, rsi
0x722b:	mov	qword ptr [rsp + 0x10], rcx
0x7230:	mov	qword ptr [r12 + 0x20], rbp
0x7235:	movzx	ebx, byte ptr [rbp]
0x7239:	jmp	0x6dd5


0x7230:	mov	qword ptr [r12 + 0x20], rbp
0x7235:	movzx	ebx, byte ptr [rbp]
0x7239:	jmp	0x6dd5


0x70be:	mov	rsi, qword ptr [rsp + 0x18]
0x70c3:	lea	r11, [rbp + 2]
0x70c7:	mov	eax, 2
0x70cc:	mov	qword ptr [r12 + 0x38], r11
0x70d1:	cmp	rsi, 2
0x70d5:	cmovae	rax, rsi
0x70d9:	mov	qword ptr [rsp + 0x18], rax
0x70de:	movsx	eax, byte ptr [rbp + 2]
0x70e2:	lea	edx, [rax - 0x30]
0x70e5:	cmp	dl, 9
0x70e8:	jbe	0x777c


0x723e:	movzx	eax, byte ptr [rbp + 1]
0x7242:	sub	eax, 0x30
0x7245:	cmp	al, 9
0x7247:	ja	0x725e


0x6e17:	add	rbp, 1
0x6e1b:	cmp	bl, 0x68
0x6e1e:	jne	0x6df0


0x72bf:	lea	rcx, [rsi + rsi*4]
0x72c3:	add	rcx, rcx
0x72c6:	mov	rbp, rdx
0x72c9:	xor	r11d, r11d
0x72cc:	add	rax, rcx
0x72cf:	movzx	ecx, byte ptr [rdx + 1]
0x72d3:	setb	r11b
0x72d7:	add	rdx, 1
0x72db:	mov	rsi, rax
0x72de:	test	r11, r11
0x72e1:	lea	edi, [rcx - 0x30]
0x72e4:	jne	0x77ee


0x72c6:	mov	rbp, rdx
0x72c9:	xor	r11d, r11d
0x72cc:	add	rax, rcx
0x72cf:	movzx	ecx, byte ptr [rdx + 1]
0x72d3:	setb	r11b
0x72d7:	add	rdx, 1
0x72db:	mov	rsi, rax
0x72de:	test	r11, r11
0x72e1:	lea	edi, [rcx - 0x30]
0x72e4:	jne	0x77ee


0x6ffd:	mov	rsi, r9
0x7000:	mov	qword ptr [rsp + 0x40], r9
0x7005:	mov	qword ptr [rsp + 0x38], r10
0x700a:	shl	rsi, 5
0x700e:	cmp	qword ptr [rsp + 8], rcx
0x7013:	mov	qword ptr [rsp + 0x30], r8
0x7018:	je	0x7731


0x789b:	cmp	qword ptr [rsp + 8], rcx
0x78a0:	jne	0x7704


0x7057:	mov	rdx, rax
0x705a:	shl	rdx, 5
0x705e:	add	rdx, rcx
0x7061:	cmp	rax, rbx
0x7064:	ja	0x7086


0x777c:	mov	rdx, r11
0x777f:	add	rdx, 1
0x7783:	movzx	ecx, byte ptr [rdx]
0x7786:	lea	esi, [rcx - 0x30]
0x7789:	cmp	sil, 9
0x778d:	jbe	0x777f


0x70ee:	mov	rbx, qword ptr [r12 + 0x40]
0x70f3:	cmp	rbx, -1
0x70f7:	je	0x7755


0x725e:	mov	rsi, qword ptr [rsp + 0x18]
0x7263:	mov	rax, rdx
0x7266:	mov	qword ptr [r12 + 0x38], rdx
0x726b:	sub	rax, rbp
0x726e:	movzx	ebx, byte ptr [rdx]
0x7271:	mov	rbp, rdx
0x7274:	cmp	rsi, rax
0x7277:	cmovae	rax, rsi
0x727b:	mov	qword ptr [rsp + 0x18], rax
0x7280:	jmp	0x6dde


0x6e20:	mov	ecx, eax
0x6e22:	mov	edx, esi
0x6e24:	and	ecx, 1
0x6e27:	shl	edx, cl
0x6e29:	or	eax, edx
0x6e2b:	jmp	0x6e13


0x6df0:	cmp	bl, 0x4c
0x6df3:	je	0x6e30


0x72ea:	cmp	dil, 9
0x72ee:	jbe	0x72a5


0x77ee:	cmp	dil, 9
0x77f2:	ja	0x745b


0x7731:	mov	rdi, rsi
0x7734:	call	0x1750


0x701e:	mov	rdi, rcx
0x7021:	call	0x1790


0x78a6:	jmp	0x770c


0x7704:	mov	rdi, rcx
0x7707:	call	0x1580


0x7086:	shl	rbx, 5
0x708a:	lea	rax, [rcx + rbx]
0x708e:	mov	edx, dword ptr [rax]
0x7090:	test	edx, edx
0x7092:	jne	0x756b


0x777f:	add	rdx, 1
0x7783:	movzx	ecx, byte ptr [rdx]
0x7786:	lea	esi, [rcx - 0x30]
0x7789:	cmp	sil, 9
0x778d:	jbe	0x777f


0x778f:	cmp	cl, 0x24
0x7792:	jne	0x70ee


0x7755:	mov	rsi, qword ptr [rsp + 0x20]
0x775a:	cmp	rsi, -1
0x775e:	lea	rax, [rsi + 1]
0x7762:	mov	qword ptr [r12 + 0x40], rsi
0x7767:	je	0x745b


0x70fd:	cmp	r9, rbx
0x7100:	mov	rcx, qword ptr [r15 + 8]
0x7104:	jbe	0x766f


0x7250:	add	rdx, 1
0x7254:	movzx	eax, byte ptr [rdx]
0x7257:	sub	eax, 0x30
0x725a:	cmp	al, 9
0x725c:	jbe	0x7250


0x6e13:	movzx	ebx, byte ptr [rbp]
0x6e17:	add	rbp, 1
0x6e1b:	cmp	bl, 0x68
0x6e1e:	jne	0x6df0


0x6e30:	or	eax, 4
0x6e33:	jmp	0x6e13


0x6df5:	cmp	bl, 0x6c
0x6df8:	je	0x6e10


0x72a5:	movsx	eax, cl
0x72a8:	movabs	rdi, 0x1999999999999999
0x72b2:	mov	rcx, r8
0x72b5:	sub	eax, 0x30
0x72b8:	cmp	rsi, rdi
0x72bb:	cdqe	
0x72bd:	ja	0x72c6


0x72f0:	lea	rbx, [rax - 1]
0x72f4:	cmp	rbx, -3
0x72f8:	ja	0x745b


0x77f8:	movsx	eax, cl
0x77fb:	mov	rbp, rdx
0x77fe:	mov	rcx, r8
0x7801:	sub	eax, 0x30
0x7804:	cdqe	
0x7806:	jmp	0x72c9


0x770c:	mov	rdi, qword ptr [r14 + 8]
0x7710:	cmp	qword ptr [rsp + 0x28], rdi
0x7715:	je	0x771c


0x7070:	add	rax, 1
0x7074:	mov	dword ptr [rdx], 0
0x707a:	add	rdx, 0x20
0x707e:	cmp	rax, rbx
0x7081:	jbe	0x7070


0x7083:	mov	qword ptr [r15], rax
0x7086:	shl	rbx, 5
0x708a:	lea	rax, [rcx + rbx]
0x708e:	mov	edx, dword ptr [rax]
0x7090:	test	edx, edx
0x7092:	jne	0x756b


0x7098:	mov	dword ptr [rax], 5
0x709e:	movzx	ebx, byte ptr [rbp]
0x70a2:	lea	rdx, [rbp + 1]
0x70a6:	cmp	bl, 0x2e
0x70a9:	jne	0x6dde


0x756b:	cmp	edx, 5
0x756e:	jne	0x745f


0x7798:	xor	ecx, ecx
0x779a:	movabs	rsi, 0x1999999999999999
0x77a4:	sub	eax, 0x30
0x77a7:	mov	rdx, r8
0x77aa:	cmp	rcx, rsi
0x77ad:	cdqe	
0x77af:	ja	0x77b8


0x776d:	mov	rbx, qword ptr [rsp + 0x20]
0x7772:	mov	qword ptr [rsp + 0x20], rax
0x7777:	jmp	0x70fd


0x766f:	add	r9, r9
0x7672:	lea	rax, [rbx + 1]
0x7676:	cmp	r9, rbx
0x7679:	cmovbe	r9, rax
0x767d:	movabs	rax, 0x7ffffffffffffff
0x7687:	cmp	r9, rax
0x768a:	ja	0x789b


0x710a:	mov	rax, qword ptr [r15]
0x710d:	mov	rdx, rax
0x7110:	shl	rdx, 5
0x7114:	add	rdx, rcx
0x7117:	cmp	rax, rbx
0x711a:	ja	0x7136


0x6e10:	add	eax, 8
0x6e13:	movzx	ebx, byte ptr [rbp]
0x6e17:	add	rbp, 1
0x6e1b:	cmp	bl, 0x68
0x6e1e:	jne	0x6df0


0x6dfa:	cmp	bl, 0x6a
0x6dfd:	je	0x6e10


0x72fe:	mov	qword ptr [r12 + 0x28], rbx
0x7303:	add	rbp, 2
0x7307:	jmp	0x6fcf


0x72c9:	xor	r11d, r11d
0x72cc:	add	rax, rcx
0x72cf:	movzx	ecx, byte ptr [rdx + 1]
0x72d3:	setb	r11b
0x72d7:	add	rdx, 1
0x72db:	mov	rsi, rax
0x72de:	test	r11, r11
0x72e1:	lea	edi, [rcx - 0x30]
0x72e4:	jne	0x77ee


0x771c:	call	0x15a0


0x7717:	call	0x1580


0x7574:	movzx	ebx, byte ptr [rbp]
0x7578:	lea	rdx, [rbp + 1]
0x757c:	jmp	0x6dd5


0x745f:	cmp	qword ptr [rsp + 8], rcx
0x7464:	je	0x746e


0x77b1:	lea	rdx, [rcx + rcx*4]
0x77b5:	add	rdx, rdx
0x77b8:	mov	rsi, r11
0x77bb:	xor	ebx, ebx
0x77bd:	add	rdx, rax
0x77c0:	movsx	eax, byte ptr [r11 + 1]
0x77c5:	setb	bl
0x77c8:	add	r11, 1
0x77cc:	mov	rcx, rdx
0x77cf:	test	rbx, rbx
0x77d2:	lea	edi, [rax - 0x30]
0x77d5:	je	0x7848


0x77b8:	mov	rsi, r11
0x77bb:	xor	ebx, ebx
0x77bd:	add	rdx, rax
0x77c0:	movsx	eax, byte ptr [r11 + 1]
0x77c5:	setb	bl
0x77c8:	add	r11, 1
0x77cc:	mov	rcx, rdx
0x77cf:	test	rbx, rbx
0x77d2:	lea	edi, [rax - 0x30]
0x77d5:	je	0x7848


0x7690:	mov	rsi, r9
0x7693:	mov	qword ptr [rsp + 0x48], r9
0x7698:	mov	qword ptr [rsp + 0x40], r10
0x769d:	shl	rsi, 5
0x76a1:	cmp	qword ptr [rsp + 8], rcx
0x76a6:	mov	qword ptr [rsp + 0x38], r8
0x76ab:	mov	qword ptr [rsp + 0x30], r11
0x76b0:	je	0x786e


0x7136:	shl	rbx, 5
0x713a:	lea	rax, [rcx + rbx]
0x713e:	mov	edx, dword ptr [rax]
0x7140:	test	edx, edx
0x7142:	jne	0x765a


0x6dff:	mov	edx, ebx
0x6e01:	and	edx, 0xffffffdf
0x6e04:	cmp	dl, 0x5a
0x6e07:	je	0x6e10


0x6fcf:	cmp	r9, rbx
0x6fd2:	mov	rcx, qword ptr [r15 + 8]
0x6fd6:	ja	0x7652


0x7848:	cmp	dil, 9
0x784c:	jbe	0x779a


0x77d7:	cmp	dil, 9
0x77db:	ja	0x745b


0x786e:	mov	rdi, rsi
0x7871:	call	0x1750


0x76b6:	mov	rdi, rcx
0x76b9:	call	0x1790


0x7120:	add	rax, 1
0x7124:	mov	dword ptr [rdx], 0
0x712a:	add	rdx, 0x20
0x712e:	cmp	rax, rbx
0x7131:	jbe	0x7120


0x7133:	mov	qword ptr [r15], rax
0x7136:	shl	rbx, 5
0x713a:	lea	rax, [rcx + rbx]
0x713e:	mov	edx, dword ptr [rax]
0x7140:	test	edx, edx
0x7142:	jne	0x765a


0x7148:	mov	dword ptr [rax], 5
0x714e:	mov	rbp, r11
0x7151:	movzx	ebx, byte ptr [r11]
0x7155:	jmp	0x6dde


0x765a:	cmp	edx, 5
0x765d:	jne	0x745f


0x6e09:	cmp	bl, 0x74
0x6e0c:	jne	0x6e38


0x779a:	movabs	rsi, 0x1999999999999999
0x77a4:	sub	eax, 0x30
0x77a7:	mov	rdx, r8
0x77aa:	cmp	rcx, rsi
0x77ad:	cdqe	
0x77af:	ja	0x77b8


0x7852:	lea	rbx, [rdx - 1]
0x7856:	cmp	rbx, -3
0x785a:	ja	0x745b


0x77e1:	sub	eax, 0x30
0x77e4:	mov	rdx, r8
0x77e7:	mov	rsi, r11
0x77ea:	cdqe	
0x77ec:	jmp	0x77bb


0x7663:	movzx	ebx, byte ptr [r11]
0x7667:	mov	rbp, r11
0x766a:	jmp	0x6dde


0x6e38:	lea	edx, [rbx - 0x25]
0x6e3b:	cmp	dl, 0x53
0x6e3e:	ja	0x745b


0x7860:	mov	qword ptr [r12 + 0x40], rbx
0x7865:	lea	r11, [rsi + 2]
0x7869:	jmp	0x70fd


0x77bb:	xor	ebx, ebx
0x77bd:	add	rdx, rax
0x77c0:	movsx	eax, byte ptr [r11 + 1]
0x77c5:	setb	bl
0x77c8:	add	r11, 1
0x77cc:	mov	rcx, rdx
0x77cf:	test	rbx, rbx
0x77d2:	lea	edi, [rax - 0x30]
0x77d5:	je	0x7848


0x6e44:	lea	rcx, [rip + 0x1ed1]
0x6e4b:	movzx	edx, dl
0x6e4e:	movsxd	rdx, dword ptr [rcx + rdx*4]
0x6e52:	add	rdx, rcx
0x6e55:	jmp	rdx


0x2098:	mov	byte ptr [rip + 0x209029], 1
0x209f:	pop	rbp
0x20a0:	ret	


0x25e7:	mov	rcx, rax
0x25ea:	sub	rcx, rbx
0x25ed:	cmp	rcx, rbp
0x25f0:	jbe	0x2620


0x2620:	add	rsp, 8
0x2624:	mov	rdx, rcx
0x2627:	mov	rax, rdx
0x262a:	pop	rbx
0x262b:	pop	rbp
0x262c:	ret	


0x25f2:	cmp	byte ptr [rax - 1], 0x2f
0x25f6:	lea	rdx, [rcx - 1]
0x25fa:	je	0x260e


0x260e:	cmp	rbp, rdx
0x2611:	jne	0x2600


0x25fc:	jmp	0x2620


0x2613:	add	rsp, 8
0x2617:	mov	rax, rdx
0x261a:	pop	rbx
0x261b:	pop	rbp
0x261c:	ret	


0x2600:	cmp	byte ptr [rbx + rdx - 1], 0x2f
0x2605:	lea	rax, [rdx - 1]
0x2609:	jne	0x2613


0x260b:	mov	rdx, rax
0x260e:	cmp	rbp, rdx
0x2611:	jne	0x2600


0x263e:	test	rax, rax
0x2641:	mov	rbx, rax
0x2644:	sete	al
0x2647:	movzx	eax, al
0x264a:	lea	rdi, [rbx + rax + 1]
0x264f:	call	0x1750


0x277c:	mov	rbx, rax
0x277f:	mov	rdi, rax
0x2782:	call	0x26f0


0x594e:	test	eax, eax
0x5950:	js	0x67b8


0x67b8:	xor	r15d, r15d
0x67bb:	jmp	0x5acf


0x5956:	mov	rsi, r14
0x5959:	mov	rdi, r12
0x595c:	call	0x6a10


0x5acf:	mov	rdi, qword ptr [rbp - 0x38]
0x5ad3:	xor	rdi, qword ptr fs:[0x28]
0x5adc:	mov	rax, r15
0x5adf:	jne	0x69e7


0x5ae5:	lea	rsp, [rbp - 0x28]
0x5ae9:	pop	rbx
0x5aea:	pop	r12
0x5aec:	pop	r13
0x5aee:	pop	r14
0x5af0:	pop	r15
0x5af2:	pop	rbp
0x5af3:	ret	


0x69e7:	call	0x1650


0x1650:	jmp	qword ptr [rip + 0x209852]




0x5961:	test	eax, eax
0x5963:	js	0x6820


0x6820:	mov	rax, qword ptr [rbp - 0x408]
0x6827:	mov	rdi, qword ptr [rbp - 0x2b8]
0x682e:	add	rax, 0x20
0x6832:	cmp	rdi, rax
0x6835:	je	0x683c


0x5969:	mov	rax, qword ptr [rbp - 0x2b0]
0x5970:	mov	rdx, -1
0x5977:	add	rax, 7
0x597b:	cmp	rax, 6
0x597f:	cmovbe	rax, rdx
0x5983:	add	rax, qword ptr [rbp - 0x2a8]
0x598a:	jb	0x63b8


0x683c:	mov	rax, qword ptr [rbp - 0x410]
0x6843:	mov	rdi, qword ptr [rbp - 0x3a8]
0x684a:	add	rax, 0x10
0x684e:	cmp	rdi, rax
0x6851:	je	0x6858


0x6837:	call	0x1580


0x63b8:	call	0x15a0


0x5990:	mov	rdi, rax
0x5993:	xor	r8d, r8d
0x5996:	add	rdi, 6
0x599a:	setb	r8b
0x599e:	jb	0x63b8


0x6858:	call	0x15a0


0x6853:	call	0x1580


0x59a4:	cmp	rdi, 0xf9f
0x59ab:	jbe	0x5af8


0x5af8:	add	rax, 0x24
0x5afc:	mov	qword ptr [rbp - 0x420], 0
0x5b07:	and	rax, 0xfffffffffffffff0
0x5b0b:	sub	rsp, rax
0x5b0e:	lea	rax, [rsp + 0xf]
0x5b13:	and	rax, 0xfffffffffffffff0
0x5b17:	mov	qword ptr [rbp - 0x3d8], rax
0x5b1e:	jmp	0x59e5


0x59b1:	cmp	rdi, -1
0x59b5:	mov	qword ptr [rbp - 0x3c8], r8
0x59bc:	je	0x63b8


0x59e5:	xor	r12d, r12d
0x59e8:	cmp	qword ptr [rbp - 0x3e8], 0
0x59f0:	je	0x59fc


0x59c2:	call	0x1750


0x59fc:	mov	r13, qword ptr [rbp - 0x2b8]
0x5a03:	lea	rax, [rbp - 0x3bc]
0x5a0a:	mov	r15, qword ptr [rbp - 0x3e8]
0x5a11:	mov	qword ptr [rbp - 0x400], 0
0x5a1c:	mov	qword ptr [rbp - 0x3f0], rax
0x5a23:	mov	rax, rbx
0x5a26:	mov	rbx, r8
0x5a29:	mov	rcx, qword ptr [r13]
0x5a2d:	mov	r8, rax
0x5a30:	cmp	rcx, r8
0x5a33:	je	0x63a1


0x59f2:	mov	rax, qword ptr [rbp - 0x418]
0x59f9:	mov	r12, qword ptr [rax]
0x59fc:	mov	r13, qword ptr [rbp - 0x2b8]
0x5a03:	lea	rax, [rbp - 0x3bc]
0x5a0a:	mov	r15, qword ptr [rbp - 0x3e8]
0x5a11:	mov	qword ptr [rbp - 0x400], 0
0x5a1c:	mov	qword ptr [rbp - 0x3f0], rax
0x5a23:	mov	rax, rbx
0x5a26:	mov	rbx, r8
0x5a29:	mov	rcx, qword ptr [r13]
0x5a2d:	mov	r8, rax
0x5a30:	cmp	rcx, r8
0x5a33:	je	0x63a1


0x63a1:	mov	r14, rbx
0x63a4:	jmp	0x5ba3


0x5a39:	sub	rcx, r8
0x5a3c:	mov	rax, rbx
0x5a3f:	add	rax, rcx
0x5a42:	mov	r14, rax
0x5a45:	jae	0x5b28


0x5ba3:	mov	rax, qword ptr [rbp - 0x400]
0x5baa:	cmp	qword ptr [rbp - 0x2c0], rax
0x5bb1:	je	0x686b


0x5a4b:	cmp	r12, -1
0x5a4f:	je	0x6520


0x5b28:	cmp	r12, rax
0x5b2b:	jae	0x5b94


0x686b:	mov	rbx, r14
0x686e:	xor	eax, eax
0x6870:	add	rbx, 1
0x6874:	jb	0x6980


0x5bb7:	movzx	edx, byte ptr [r13 + 0x48]
0x5bbc:	mov	rax, qword ptr [r13 + 0x50]
0x5bc0:	cmp	dl, 0x25
0x5bc3:	je	0x6358


0x6520:	mov	r14, r12
0x6523:	jmp	0x5b94


0x5a55:	call	0x15a0


0x5b2d:	test	r12, r12
0x5b30:	jne	0x6460


0x5b94:	lea	rdi, [r15 + rbx]
0x5b98:	mov	rdx, rcx
0x5b9b:	mov	rsi, r8
0x5b9e:	call	0x1720


0x6980:	cmp	r12, -1
0x6984:	mov	eax, 1
0x6989:	je	0x68cc


0x687a:	cmp	r12, rbx
0x687d:	jae	0x68cc


0x6358:	cmp	rax, -1
0x635c:	jne	0x6816


0x5bc9:	cmp	rax, -1
0x5bcd:	je	0x6816


0x5b36:	cmp	rax, 0xc
0x5b3a:	ja	0x6472


0x6460:	js	0x5a55


0x1720:	jmp	qword ptr [rip + 0x2097ea]


0x68cc:	cmp	r15, qword ptr [rbp - 0x3e8]
0x68d3:	mov	byte ptr [r15 + r14], 0
0x68d8:	je	0x68f1


0x698f:	test	r12, r12
0x6992:	je	0x5a55


0x687f:	test	r12, r12
0x6882:	jne	0x69b9


0x6362:	mov	rax, r14
0x6365:	add	rax, 1
0x6369:	mov	rbx, rax
0x636c:	jae	0x63f8


0x6816:	call	0x1590


0x5bd3:	mov	r8, qword ptr [rbp - 0x3a8]
0x5bda:	shl	rax, 5
0x5bde:	add	rax, r8
0x5be1:	cmp	dl, 0x6e
0x5be4:	mov	edi, dword ptr [rax]
0x5be6:	mov	dword ptr [rbp - 0x3d0], edi
0x5bec:	je	0x63d0


0x5b40:	mov	r12d, 0xc
0x5b46:	cmp	r15, qword ptr [rbp - 0x3e8]
0x5b4d:	sete	dl
0x5b50:	test	r15, r15
0x5b53:	je	0x6498


0x6472:	cmp	rax, -1
0x6476:	je	0x5a55


0x6466:	add	r12, r12
0x6469:	cmp	r12, rax
0x646c:	jae	0x5b46




0x68f1:	mov	rax, qword ptr [rbp - 0x420]
0x68f8:	test	rax, rax
0x68fb:	je	0x6905


0x68da:	cmp	r12, rbx
0x68dd:	jbe	0x68f1


0x6998:	js	0x5a55


0x6888:	cmp	rbx, 0xc
0x688c:	ja	0x699e


0x69b9:	js	0x5a55


0x6372:	cmp	r12, -1
0x6376:	jne	0x5a55


0x63f8:	cmp	r12, rax
0x63fb:	jae	0x637f


0x63d0:	mov	edx, edi
0x63d2:	sub	edx, 0x12
0x63d5:	cmp	edx, 4
0x63d8:	ja	0x6816


0x5bf2:	mov	eax, dword ptr [r13 + 0x10]
0x5bf6:	mov	rdi, qword ptr [rbp - 0x3d8]
0x5bfd:	test	al, 1
0x5bff:	mov	byte ptr [rdi], 0x25
0x5c02:	lea	rbx, [rdi + 1]
0x5c06:	je	0x5c17


0x6498:	mov	rdi, r12
0x649b:	mov	qword ptr [rbp - 0x3e0], r8
0x64a2:	mov	byte ptr [rbp - 0x3d0], dl
0x64a8:	mov	qword ptr [rbp - 0x3c8], rcx
0x64af:	call	0x1750


0x5b59:	test	dl, dl
0x5b5b:	jne	0x6498


0x647c:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6483:	mov	r12, rax
0x6486:	sete	dl
0x6489:	test	r15, r15
0x648c:	jne	0x5b59


0x5b46:	cmp	r15, qword ptr [rbp - 0x3e8]
0x5b4d:	sete	dl
0x5b50:	test	r15, r15
0x5b53:	je	0x6498


0x6905:	mov	rax, qword ptr [rbp - 0x408]
0x690c:	mov	rdi, qword ptr [rbp - 0x2b8]
0x6913:	add	rax, 0x20
0x6917:	cmp	rdi, rax
0x691a:	je	0x6921


0x68fd:	mov	rdi, rax
0x6900:	call	0x1580


0x68df:	mov	rdi, r15
0x68e2:	mov	rsi, rbx
0x68e5:	call	0x1790


0x699e:	test	rax, rax
0x69a1:	jne	0x5a55


0x6892:	mov	r12d, 0xc
0x6898:	cmp	r15, qword ptr [rbp - 0x3e8]
0x689f:	sete	r13b
0x68a3:	test	r15, r15
0x68a6:	je	0x694c


0x69bf:	add	r12, r12
0x69c2:	cmp	r12, rbx
0x69c5:	jae	0x6898


0x637c:	mov	rbx, r12
0x637f:	mov	byte ptr [r15 + r14], 0x25
0x6384:	mov	r8, qword ptr [r13 + 8]
0x6388:	add	r13, 0x58
0x638c:	mov	rcx, qword ptr [r13]
0x6390:	add	qword ptr [rbp - 0x400], 1
0x6398:	cmp	rcx, r8
0x639b:	jne	0x5a39


0x63fd:	test	r12, r12
0x6400:	jne	0x67d0


0x637f:	mov	byte ptr [r15 + r14], 0x25
0x6384:	mov	r8, qword ptr [r13 + 8]
0x6388:	add	r13, 0x58
0x638c:	mov	rcx, qword ptr [r13]
0x6390:	add	qword ptr [rbp - 0x400], 1
0x6398:	cmp	rcx, r8
0x639b:	jne	0x5a39


0x63de:	lea	rdi, [rip + 0x289f]
0x63e5:	mov	rax, qword ptr [rax + 0x10]
0x63e9:	movsxd	rdx, dword ptr [rdi + rdx*4]
0x63ed:	add	rdx, rdi
0x63f0:	jmp	rdx


0x5c17:	test	al, 2
0x5c19:	je	0x5c22


0x5c08:	mov	rdi, qword ptr [rbp - 0x3d8]
0x5c0f:	lea	rbx, [rdi + 2]
0x5c13:	mov	byte ptr [rdi + 1], 0x27
0x5c17:	test	al, 2
0x5c19:	je	0x5c22


0x5b61:	mov	rsi, r12
0x5b64:	mov	rdi, r15
0x5b67:	mov	qword ptr [rbp - 0x3d0], r8
0x5b6e:	mov	qword ptr [rbp - 0x3c8], rcx
0x5b75:	call	0x1790


0x6921:	mov	rax, qword ptr [rbp - 0x410]
0x6928:	mov	rdi, qword ptr [rbp - 0x3a8]
0x692f:	add	rax, 0x10
0x6933:	cmp	rdi, rax
0x6936:	je	0x693d


0x691c:	call	0x1580


0x69a7:	cmp	rbx, -1
0x69ab:	je	0x5a55


0x694c:	mov	rdi, r12
0x694f:	call	0x1750


0x68ac:	test	r13b, r13b
0x68af:	jne	0x694c


0x69cb:	jmp	0x699e


0x6898:	cmp	r15, qword ptr [rbp - 0x3e8]
0x689f:	sete	r13b
0x68a3:	test	r15, r15
0x68a6:	je	0x694c


0x6406:	cmp	rax, 0xc
0x640a:	ja	0x67e2


0x67d0:	js	0x5a55


0x5c22:	test	al, 4
0x5c24:	je	0x5c2d


0x5c1b:	mov	byte ptr [rbx], 0x2d
0x5c1e:	add	rbx, 1
0x5c22:	test	al, 4
0x5c24:	je	0x5c2d


0x693d:	mov	rax, qword ptr [rbp - 0x418]
0x6944:	mov	qword ptr [rax], r14
0x6947:	jmp	0x5acf


0x6938:	call	0x1580


0x69b1:	mov	r12, rbx
0x69b4:	jmp	0x6898


0x68b5:	mov	rsi, r12
0x68b8:	mov	rdi, r15
0x68bb:	call	0x1790


0x6410:	mov	r12d, 0xc
0x6416:	cmp	r15, qword ptr [rbp - 0x3e8]
0x641d:	sete	dl
0x6420:	test	r15, r15
0x6423:	je	0x6690


0x67e2:	cmp	rax, -1
0x67e6:	je	0x5a55


0x67d6:	add	r12, r12
0x67d9:	cmp	r12, rax
0x67dc:	jae	0x6416


0x5c2d:	test	al, 8
0x5c2f:	je	0x5c38


0x5c26:	mov	byte ptr [rbx], 0x2b
0x5c29:	add	rbx, 1
0x5c2d:	test	al, 8
0x5c2f:	je	0x5c38


0x6690:	mov	rdi, r12
0x6693:	mov	byte ptr [rbp - 0x3c8], dl
0x6699:	call	0x1750


0x6429:	test	dl, dl
0x642b:	jne	0x6690


0x67ec:	mov	r12, rax
0x67ef:	jmp	0x6416


0x6416:	cmp	r15, qword ptr [rbp - 0x3e8]
0x641d:	sete	dl
0x6420:	test	r15, r15
0x6423:	je	0x6690


0x5c38:	test	al, 0x10
0x5c3a:	je	0x5c43


0x5c31:	mov	byte ptr [rbx], 0x20
0x5c34:	add	rbx, 1
0x5c38:	test	al, 0x10
0x5c3a:	je	0x5c43


0x6431:	mov	rsi, r12
0x6434:	mov	rdi, r15
0x6437:	call	0x1790


0x5c43:	test	al, 0x40
0x5c45:	je	0x5c4e


0x5c3c:	mov	byte ptr [rbx], 0x23
0x5c3f:	add	rbx, 1
0x5c43:	test	al, 0x40
0x5c45:	je	0x5c4e


0x5c4e:	test	al, 0x20
0x5c50:	je	0x5c59


0x5c47:	mov	byte ptr [rbx], 0x49
0x5c4a:	add	rbx, 1
0x5c4e:	test	al, 0x20
0x5c50:	je	0x5c59


0x5c59:	mov	rsi, qword ptr [r13 + 0x18]
0x5c5d:	mov	rdx, qword ptr [r13 + 0x20]
0x5c61:	cmp	rsi, rdx
0x5c64:	je	0x5c96


0x5c52:	mov	byte ptr [rbx], 0x30
0x5c55:	add	rbx, 1
0x5c59:	mov	rsi, qword ptr [r13 + 0x18]
0x5c5d:	mov	rdx, qword ptr [r13 + 0x20]
0x5c61:	cmp	rsi, rdx
0x5c64:	je	0x5c96


0x5c96:	mov	rsi, qword ptr [r13 + 0x30]
0x5c9a:	mov	rdx, qword ptr [r13 + 0x38]
0x5c9e:	cmp	rsi, rdx
0x5ca1:	je	0x5cd3


0x5c66:	mov	rcx, rdx
0x5c69:	mov	rdi, rbx
0x5c6c:	mov	qword ptr [rbp - 0x3e0], r8
0x5c73:	sub	rcx, rsi
0x5c76:	mov	rdx, rcx
0x5c79:	mov	qword ptr [rbp - 0x3c8], rcx
0x5c80:	call	0x1720


0x5cd3:	mov	edi, dword ptr [rbp - 0x3d0]
0x5cd9:	cmp	edi, 0x10
0x5cdc:	ja	0x5d0b


0x5ca3:	mov	rcx, rdx
0x5ca6:	mov	rdi, rbx
0x5ca9:	mov	qword ptr [rbp - 0x3e0], r8
0x5cb0:	sub	rcx, rsi
0x5cb3:	mov	rdx, rcx
0x5cb6:	mov	qword ptr [rbp - 0x3c8], rcx
0x5cbd:	call	0x1720


0x5cde:	mov	eax, 1
0x5ce3:	mov	ecx, edi
0x5ce5:	shl	rax, cl
0x5ce8:	test	eax, 0x14180
0x5ced:	jne	0x5d04


0x5d0b:	movzx	eax, byte ptr [r13 + 0x48]
0x5d10:	mov	byte ptr [rbx + 1], 0
0x5d14:	mov	byte ptr [rbx], al
0x5d16:	mov	rax, qword ptr [r13 + 0x28]
0x5d1a:	cmp	rax, -1
0x5d1e:	je	0x6450


0x5cef:	test	ah, 0x10
0x5cf2:	jne	0x6650


0x5d04:	mov	byte ptr [rbx], 0x6c
0x5d07:	add	rbx, 1
0x5d0b:	movzx	eax, byte ptr [r13 + 0x48]
0x5d10:	mov	byte ptr [rbx + 1], 0
0x5d14:	mov	byte ptr [rbx], al
0x5d16:	mov	rax, qword ptr [r13 + 0x28]
0x5d1a:	cmp	rax, -1
0x5d1e:	je	0x6450


0x6450:	mov	dword ptr [rbp - 0x3e0], 0
0x645a:	jmp	0x5d47


0x5d24:	shl	rax, 5
0x5d28:	add	rax, r8
0x5d2b:	cmp	dword ptr [rax], 5
0x5d2e:	jne	0x6816


0x5cf8:	test	ah, 6
0x5cfb:	je	0x5d0b


0x6650:	mov	byte ptr [rbx], 0x4c
0x6653:	add	rbx, 1
0x6657:	jmp	0x5d0b


0x5d47:	mov	rax, qword ptr [r13 + 0x40]
0x5d4b:	cmp	rax, -1
0x5d4f:	je	0x5d7c


0x5d34:	mov	eax, dword ptr [rax + 0x10]
0x5d37:	mov	dword ptr [rbp - 0x3e0], 1
0x5d41:	mov	dword ptr [rbp - 0x3b8], eax
0x5d47:	mov	rax, qword ptr [r13 + 0x40]
0x5d4b:	cmp	rax, -1
0x5d4f:	je	0x5d7c


0x5cfd:	mov	byte ptr [rbx], 0x6c
0x5d00:	add	rbx, 1
0x5d04:	mov	byte ptr [rbx], 0x6c
0x5d07:	add	rbx, 1
0x5d0b:	movzx	eax, byte ptr [r13 + 0x48]
0x5d10:	mov	byte ptr [rbx + 1], 0
0x5d14:	mov	byte ptr [rbx], al
0x5d16:	mov	rax, qword ptr [r13 + 0x28]
0x5d1a:	cmp	rax, -1
0x5d1e:	je	0x6450


0x5d7c:	mov	rax, r14
0x5d7f:	xor	edx, edx
0x5d81:	add	rax, 2
0x5d85:	jb	0x69ec


0x5d51:	shl	rax, 5
0x5d55:	add	r8, rax
0x5d58:	cmp	dword ptr [r8], 5
0x5d5c:	jne	0x6816


0x69ec:	cmp	r12, -1
0x69f0:	mov	edx, 1
0x69f5:	je	0x5ddb


0x5d8b:	cmp	r12, rax
0x5d8e:	jae	0x5ddb


0x5d62:	mov	eax, dword ptr [rbp - 0x3e0]
0x5d68:	mov	edx, dword ptr [r8 + 0x10]
0x5d6c:	mov	dword ptr [rbp + rax*4 - 0x3b8], edx
0x5d73:	lea	eax, [rax + 1]
0x5d76:	mov	dword ptr [rbp - 0x3e0], eax
0x5d7c:	mov	rax, r14
0x5d7f:	xor	edx, edx
0x5d81:	add	rax, 2
0x5d85:	jb	0x69ec


0x5ddb:	mov	byte ptr [r15 + r14], 0
0x5de0:	call	0x15a0


0x69fb:	test	r12, r12
0x69fe:	je	0x5a55


0x5d90:	test	r12, r12
0x5d93:	jne	0x65b8


0x6a04:	jns	0x65d0


0x5d99:	cmp	rax, 0xc
0x5d9d:	ja	0x65d0


0x65b8:	js	0x5a55


0x6a0a:	jmp	0x5a55


0x65d0:	test	rdx, rdx
0x65d3:	jne	0x5a55


0x5da3:	mov	r12d, 0xc
0x5da9:	cmp	r15, qword ptr [rbp - 0x3e8]
0x5db0:	sete	dl
0x5db3:	test	r15, r15
0x5db6:	je	0x6600


0x65be:	add	r12, r12
0x65c1:	cmp	r12, rax
0x65c4:	jae	0x5da9


0x65d9:	cmp	rax, -1
0x65dd:	je	0x5a55


0x6600:	mov	rdi, r12
0x6603:	mov	byte ptr [rbp - 0x3c8], dl
0x6609:	call	0x1750


0x5dbc:	test	dl, dl
0x5dbe:	jne	0x6600


0x5da9:	cmp	r15, qword ptr [rbp - 0x3e8]
0x5db0:	sete	dl
0x5db3:	test	r15, r15
0x5db6:	je	0x6600


0x65e3:	cmp	r15, qword ptr [rbp - 0x3e8]
0x65ea:	mov	r12, rax
0x65ed:	sete	dl
0x65f0:	test	r15, r15
0x65f3:	jne	0x5dbc


0x5dc4:	mov	rsi, r12
0x5dc7:	mov	rdi, r15
0x5dca:	call	0x1790


0x540b:	test	rax, rax
0x540e:	je	0x5452


0x5452:	mov	eax, 0xffffffff
0x5457:	jmp	0x5422


0x5410:	mov	rdx, qword ptr [rsp]
0x5414:	cmp	rdx, 0x7fffffff
0x541b:	ja	0x5438


0x5422:	mov	rbx, qword ptr [rsp + 8]
0x5427:	xor	rbx, qword ptr fs:[0x28]
0x5430:	jne	0x5459


0x541d:	mov	qword ptr [rbx], rax
0x5420:	mov	eax, edx
0x5422:	mov	rbx, qword ptr [rsp + 8]
0x5427:	xor	rbx, qword ptr fs:[0x28]
0x5430:	jne	0x5459


0x5438:	mov	rdi, rax
0x543b:	call	0x1580


0x5432:	add	rsp, 0x10
0x5436:	pop	rbx
0x5437:	ret	


0x5459:	call	0x1650


0x5324:	mov	rcx, qword ptr [rsp + 0x18]
0x5329:	xor	rcx, qword ptr fs:[0x28]
0x5332:	jne	0x533c


0x5334:	add	rsp, 0xd8
0x533b:	ret	


0x533c:	call	0x1650


0x7931:	test	rbp, rbp
0x7934:	je	0x7956


0x7956:	add	rsp, 8
0x795a:	pop	rbx
0x795b:	pop	rbp
0x795c:	pop	r12
0x795e:	pop	r13
0x7960:	pop	r14
0x7962:	pop	r15
0x7964:	ret	


0x7936:	xor	ebx, ebx
0x7938:	nop	dword ptr [rax + rax]
0x7940:	mov	rdx, r15
0x7943:	mov	rsi, r14
0x7946:	mov	edi, r13d
0x7949:	call	qword ptr [r12 + rbx*8]


0x5cc2:	mov	rcx, qword ptr [rbp - 0x3c8]
0x5cc9:	mov	r8, qword ptr [rbp - 0x3e0]
0x5cd0:	add	rbx, rcx
0x5cd3:	mov	edi, dword ptr [rbp - 0x3d0]
0x5cd9:	cmp	edi, 0x10
0x5cdc:	ja	0x5d0b


0x5c85:	mov	rcx, qword ptr [rbp - 0x3c8]
0x5c8c:	mov	r8, qword ptr [rbp - 0x3e0]
0x5c93:	add	rbx, rcx
0x5c96:	mov	rsi, qword ptr [r13 + 0x30]
0x5c9a:	mov	rdx, qword ptr [r13 + 0x38]
0x5c9e:	cmp	rsi, rdx
0x5ca1:	je	0x5cd3


0x4d9f:	test	rax, rax
0x4da2:	je	0x4da9


0x4da4:	add	rsp, 8
0x4da8:	ret	


0x2873:	test	rax, rax
0x2876:	je	0x28cd


0x28cd:	mov	qword ptr [rip + 0x20886c], rbx
0x28d4:	mov	qword ptr [rip + 0x2087c5], rbx
0x28db:	pop	rbx
0x28dc:	ret	


0x2878:	lea	r8, [rax + 1]
0x287c:	mov	rdx, r8
0x287f:	sub	rdx, rbx
0x2882:	cmp	rdx, 6
0x2886:	jle	0x28cd


0x2888:	lea	rsi, [rax - 6]
0x288c:	lea	rdi, [rip + 0x5a15]
0x2893:	mov	ecx, 7
0x2898:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2898:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x289a:	seta	dl
0x289d:	sbb	dl, 0
0x28a0:	test	dl, dl
0x28a2:	jne	0x28cd


0x28a4:	lea	rdi, [rip + 0x5a05]
0x28ab:	mov	ecx, 3
0x28b0:	mov	rsi, r8
0x28b3:	mov	rbx, r8
0x28b6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x28b6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x28b8:	seta	dl
0x28bb:	sbb	dl, 0
0x28be:	test	dl, dl
0x28c0:	jne	0x28cd


0x28c2:	lea	rbx, [rax + 4]
0x28c6:	mov	qword ptr [rip + 0x2087b3], rbx
0x28cd:	mov	qword ptr [rip + 0x20886c], rbx
0x28d4:	mov	qword ptr [rip + 0x2087c5], rbx
0x28db:	pop	rbx
0x28dc:	ret	


0x28fa:	call	0x1590


0x5440:	call	0x15a0


0x40ed:	mov	qword ptr [rip + 0x206f6c], rbx
0x40f4:	pop	rbx
0x40f5:	mov	dword ptr [rip + 0x206f59], 1
0x40ff:	pop	rbp
0x4100:	pop	r12
0x4102:	ret	


0x40c7:	mov	qword ptr [rip + 0x206f9e], 0x100
0x40d2:	mov	qword ptr [rip + 0x206f9f], rbx
0x40d9:	lea	rbx, [rip + 0x206f90]
0x40e0:	cmp	r12, rbx
0x40e3:	je	0x40f4


0x4c3d:	xor	eax, eax
0x4c3f:	pop	rbx
0x4c40:	ret	


0x40ac:	cmp	rbx, rbp
0x40af:	jne	0x40a0


0x40a0:	mov	rdi, qword ptr [rbx]
0x40a3:	add	rbx, 0x10
0x40a7:	call	0x1580


0x45cc:	lea	rsi, [rip + 0x41c8]
0x45d3:	xor	edi, edi
0x45d5:	mov	edx, 5
0x45da:	call	0x1620


0x46e1:	jmp	0x45cc


0x5dcf:	test	rax, rax
0x5dd2:	je	0x5a55


0x5dd8:	mov	r15, rax
0x5ddb:	mov	byte ptr [r15 + r14], 0
0x5de0:	call	0x15a0


0x643c:	test	rax, rax
0x643f:	je	0x653b


0x653b:	call	0x15a0


0x6445:	mov	r15, rax
0x6448:	jmp	0x637f


0x68c0:	test	rax, rax
0x68c3:	je	0x653b


0x68c9:	mov	r15, rax
0x68cc:	cmp	r15, qword ptr [rbp - 0x3e8]
0x68d3:	mov	byte ptr [r15 + r14], 0
0x68d8:	je	0x68f1


0x5b7a:	test	rax, rax
0x5b7d:	mov	rcx, qword ptr [rbp - 0x3c8]
0x5b84:	mov	r8, qword ptr [rbp - 0x3d0]
0x5b8b:	je	0x653b


0x5b91:	mov	r15, rax
0x5b94:	lea	rdi, [r15 + rbx]
0x5b98:	mov	rdx, rcx
0x5b9b:	mov	rsi, r8
0x5b9e:	call	0x1720


0x68ea:	test	rax, rax
0x68ed:	cmovne	r15, rax
0x68f1:	mov	rax, qword ptr [rbp - 0x420]
0x68f8:	test	rax, rax
0x68fb:	je	0x6905


0x76be:	mov	rdx, qword ptr [r15 + 8]
0x76c2:	mov	r11, qword ptr [rsp + 0x30]
0x76c7:	mov	rcx, rax
0x76ca:	mov	r8, qword ptr [rsp + 0x38]
0x76cf:	mov	r10, qword ptr [rsp + 0x40]
0x76d4:	mov	r9, qword ptr [rsp + 0x48]
0x76d9:	test	rcx, rcx
0x76dc:	je	0x78f7


0x78f7:	mov	rcx, rdx
0x78fa:	jmp	0x789b


0x76e2:	cmp	qword ptr [rsp + 8], rdx
0x76e7:	mov	rax, qword ptr [r15]
0x76ea:	je	0x78b0


0x78b0:	mov	rsi, qword ptr [rsp + 8]
0x78b5:	shl	rax, 5
0x78b9:	mov	rdi, rcx
0x78bc:	mov	rdx, rax
0x78bf:	mov	qword ptr [rsp + 0x48], r9
0x78c4:	mov	qword ptr [rsp + 0x40], r10
0x78c9:	mov	qword ptr [rsp + 0x38], r8
0x78ce:	mov	qword ptr [rsp + 0x30], r11
0x78d3:	call	0x1720


0x76f0:	mov	qword ptr [r15 + 8], rcx
0x76f4:	jmp	0x710d


0x710d:	mov	rdx, rax
0x7110:	shl	rdx, 5
0x7114:	add	rdx, rcx
0x7117:	cmp	rax, rbx
0x711a:	ja	0x7136


0x78d8:	mov	r9, qword ptr [rsp + 0x48]
0x78dd:	mov	rcx, rax
0x78e0:	mov	r10, qword ptr [rsp + 0x40]
0x78e5:	mov	rax, qword ptr [r15]
0x78e8:	mov	r8, qword ptr [rsp + 0x38]
0x78ed:	mov	r11, qword ptr [rsp + 0x30]
0x78f2:	jmp	0x76f0


0x7026:	mov	rdx, qword ptr [r15 + 8]
0x702a:	mov	r8, qword ptr [rsp + 0x30]
0x702f:	mov	rcx, rax
0x7032:	mov	r10, qword ptr [rsp + 0x38]
0x7037:	mov	r9, qword ptr [rsp + 0x40]
0x703c:	test	rcx, rcx
0x703f:	je	0x78f7


0x7045:	cmp	qword ptr [rsp + 8], rdx
0x704a:	mov	rax, qword ptr [r15]
0x704d:	je	0x780b


0x780b:	mov	rsi, qword ptr [rsp + 8]
0x7810:	shl	rax, 5
0x7814:	mov	rdi, rcx
0x7817:	mov	rdx, rax
0x781a:	mov	qword ptr [rsp + 0x40], r9
0x781f:	mov	qword ptr [rsp + 0x38], r10
0x7824:	mov	qword ptr [rsp + 0x30], r8
0x7829:	call	0x1720


0x7053:	mov	qword ptr [r15 + 8], rcx
0x7057:	mov	rdx, rax
0x705a:	shl	rdx, 5
0x705e:	add	rdx, rcx
0x7061:	cmp	rax, rbx
0x7064:	ja	0x7086


0x782e:	mov	r9, qword ptr [rsp + 0x40]
0x7833:	mov	rcx, rax
0x7836:	mov	r10, qword ptr [rsp + 0x38]
0x783b:	mov	rax, qword ptr [r15]
0x783e:	mov	r8, qword ptr [rsp + 0x30]
0x7843:	jmp	0x7053


0x4c26:	test	rax, rax
0x4c29:	jne	0x4c30


0x4c2b:	test	rbx, rbx
0x4c2e:	jne	0x4c41


0x4c30:	pop	rbx
0x4c31:	ret	


0x4c41:	call	0x4e00


0x585e:	test	eax, eax
0x5860:	je	0x586a


0x5862:	test	dword ptr [rbx], 0x100
0x5868:	jne	0x5878


0x5878:	mov	rdi, rbx
0x587b:	mov	edx, 1
0x5880:	xor	esi, esi
0x5882:	call	0x5890


0x18e2:	lea	rsi, [rip + 0x6ef8]
0x18e9:	mov	edi, 6
0x18ee:	call	0x17a0


0x2a61:	cmp	r15d, 0xa
0x2a65:	mov	qword ptr [rsp + 0x58], rax
0x2a6a:	ja	0x3c1f


0x2a70:	lea	rcx, [rip + 0x58a9]
0x2a77:	mov	edx, r15d
0x2a7a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x2a7e:	add	rax, rcx
0x2a81:	jmp	rax


0x3c1f:	call	0x1590


0x6540:	mov	qword ptr [rbp - 0x3c8], rax
0x6547:	nop	word ptr [rax + rax]
0x6550:	mov	rdi, r15
0x6553:	call	0x1580


0x6558:	jmp	0x5a73


0x5a73:	mov	rax, qword ptr [rbp - 0x420]
0x5a7a:	test	rax, rax
0x5a7d:	je	0x5a87


0x5a87:	mov	rax, qword ptr [rbp - 0x408]
0x5a8e:	mov	rdi, qword ptr [rbp - 0x2b8]
0x5a95:	add	rax, 0x20
0x5a99:	cmp	rdi, rax
0x5a9c:	je	0x5aa3


0x5a7f:	mov	rdi, rax
0x5a82:	call	0x1580


0x5aa3:	mov	rax, qword ptr [rbp - 0x410]
0x5aaa:	mov	rdi, qword ptr [rbp - 0x3a8]
0x5ab1:	add	rax, 0x10
0x5ab5:	cmp	rdi, rax
0x5ab8:	je	0x5abf


0x5a9e:	call	0x1580


0x5abf:	mov	rax, qword ptr [rbp - 0x3c8]
0x5ac6:	xor	r15d, r15d
0x5ac9:	mov	dword ptr [rax], 0xc
0x5acf:	mov	rdi, qword ptr [rbp - 0x38]
0x5ad3:	xor	rdi, qword ptr fs:[0x28]
0x5adc:	mov	rax, r15
0x5adf:	jne	0x69e7


0x5aba:	call	0x1580


0x5de5:	mov	qword ptr [rbp - 0x3c8], rax
0x5dec:	mov	eax, dword ptr [rax]
0x5dee:	mov	qword ptr [rbp - 0x3f8], rbx
0x5df5:	mov	dword ptr [rbp - 0x424], eax
0x5dfb:	nop	dword ptr [rax + rax]
0x5e00:	mov	rax, qword ptr [rbp - 0x3c8]
0x5e07:	mov	rbx, r12
0x5e0a:	mov	r10d, 0x7fffffff
0x5e10:	sub	rbx, r14
0x5e13:	mov	dword ptr [rbp - 0x3bc], 0xffffffff
0x5e1d:	cmp	rbx, 0x7fffffff
0x5e24:	mov	dword ptr [rax], 0
0x5e2a:	mov	eax, dword ptr [rbp - 0x3d0]
0x5e30:	cmovbe	r10, rbx
0x5e34:	cmp	eax, 0x11
0x5e37:	ja	0x6816


0x5e3d:	lea	rsi, [rip + 0x2df8]
0x5e44:	movsxd	rax, dword ptr [rsi + rax*4]
0x5e48:	add	rax, rsi
0x5e4b:	jmp	rax


0x5445:	mov	dword ptr [rax], 0x4b
0x544b:	mov	eax, 0xffffffff
0x5450:	jmp	0x5422


0x5a5a:	mov	qword ptr [rbp - 0x3c8], rax
0x5a61:	cmp	r15, qword ptr [rbp - 0x3e8]
0x5a68:	je	0x5a73


0x5a6a:	test	r15, r15
0x5a6d:	jne	0x6550


0x6550:	mov	rdi, r15
0x6553:	call	0x1580


0x685d:	xor	r15d, r15d
0x6860:	mov	dword ptr [rax], 0x16
0x6866:	jmp	0x5acf


0x63bd:	mov	qword ptr [rbp - 0x3c8], rax
0x63c4:	jmp	0x5a87


0x7721:	mov	dword ptr [rax], 0xc
0x7727:	mov	eax, 0xffffffff
0x772c:	jmp	0x6cb2


0x6cb2:	add	rsp, 0x58
0x6cb6:	pop	rbx
0x6cb7:	pop	rbp
0x6cb8:	pop	r12
0x6cba:	pop	r13
0x6cbc:	pop	r14
0x6cbe:	pop	r15
0x6cc0:	ret	


0x7483:	mov	dword ptr [rax], 0x16
0x7489:	mov	eax, 0xffffffff
0x748e:	jmp	0x6cb2


0x4eb8:	mov	dword ptr [rax], 0
0x4ebe:	mov	r12, rax
0x4ec1:	movzx	ebx, byte ptr [rbp]
0x4ec5:	call	0x1880


0x1880:	jmp	qword ptr [rip + 0x20973a]




0x3c51:	mov	r13, rax
0x3c54:	mov	eax, dword ptr [rax]
0x3c56:	test	r15d, r15d
0x3c59:	mov	rbx, qword ptr [rip + 0x207400]
0x3c60:	mov	dword ptr [rsp + 0x18], eax
0x3c64:	js	0x3dd1


0x3dd1:	call	0x1590


0x3c6a:	cmp	dword ptr [rip + 0x2073e7], r15d
0x3c71:	jg	0x3cd5


0x3c73:	cmp	r15d, 0x7fffffff
0x3c7a:	je	0x3dd6


0x3cd5:	mov	eax, dword ptr [rbp + 4]
0x3cd8:	shl	r15, 4
0x3cdc:	sub	rsp, 8
0x3ce0:	add	rbx, r15
0x3ce3:	lea	r15, [rbp + 8]
0x3ce7:	mov	r8d, dword ptr [rbp]
0x3ceb:	mov	r11, qword ptr [rbx]
0x3cee:	mov	r12, qword ptr [rbx + 8]
0x3cf2:	mov	rcx, r14
0x3cf5:	or	eax, 1
0x3cf8:	mov	dword ptr [rsp + 0x24], eax
0x3cfc:	push	qword ptr [rbp + 0x30]
0x3cff:	mov	r9d, eax
0x3d02:	push	qword ptr [rbp + 0x28]
0x3d05:	push	r15
0x3d07:	mov	rsi, r11
0x3d0a:	mov	rdx, qword ptr [rsp + 0x28]
0x3d0f:	mov	rdi, r12
0x3d12:	mov	qword ptr [rsp + 0x30], r11
0x3d17:	call	0x29f0


0x3dd6:	call	0x4e00


0x3c80:	lea	r12d, [r15 + 1]
0x3c84:	lea	rax, [rip + 0x2073e5]
0x3c8b:	movsxd	rsi, r12d
0x3c8e:	shl	rsi, 4
0x3c92:	cmp	rbx, rax
0x3c95:	je	0x3db0


0x3db0:	xor	edi, edi
0x3db2:	call	0x4c10


0x3c9b:	mov	rdi, rbx
0x3c9e:	call	0x4c10


0x3ca3:	mov	rbx, rax
0x3ca6:	mov	qword ptr [rip + 0x2073b3], rax
0x3cad:	movsxd	rdi, dword ptr [rip + 0x2073a4]
0x3cb4:	mov	edx, r12d
0x3cb7:	xor	esi, esi
0x3cb9:	sub	edx, edi
0x3cbb:	shl	rdi, 4
0x3cbf:	movsxd	rdx, edx
0x3cc2:	add	rdi, rbx
0x3cc5:	shl	rdx, 4
0x3cc9:	call	0x16d0


0x16d0:	jmp	qword ptr [rip + 0x209812]




0x3db7:	movdqa	xmm0, xmmword ptr [rip + 0x2072b1]
0x3dbf:	mov	rbx, rax
0x3dc2:	mov	qword ptr [rip + 0x207297], rax
0x3dc9:	movups	xmmword ptr [rax], xmm0
0x3dcc:	jmp	0x3cad


0x3cad:	movsxd	rdi, dword ptr [rip + 0x2073a4]
0x3cb4:	mov	edx, r12d
0x3cb7:	xor	esi, esi
0x3cb9:	sub	edx, edi
0x3cbb:	shl	rdi, 4
0x3cbf:	movsxd	rdx, edx
0x3cc2:	add	rdi, rbx
0x3cc5:	shl	rdx, 4
0x3cc9:	call	0x16d0


0x3dec:	mov	r12d, dword ptr [rax]
0x3def:	mov	rbp, rax
0x3df2:	lea	rax, [rip + 0x207467]
0x3df9:	test	rbx, rbx
0x3dfc:	mov	esi, 0x38
0x3e01:	cmove	rbx, rax
0x3e05:	mov	rdi, rbx
0x3e08:	call	0x4db0


0x3f22:	mov	r12d, dword ptr [rax]
0x3f25:	mov	rbp, rax
0x3f28:	lea	rax, [rbx + 8]
0x3f2c:	sub	rsp, 8
0x3f30:	mov	r9d, dword ptr [rbx + 4]
0x3f34:	push	qword ptr [rbx + 0x30]
0x3f37:	mov	r8d, dword ptr [rbx]
0x3f3a:	push	qword ptr [rbx + 0x28]
0x3f3d:	mov	rdx, r15
0x3f40:	push	rax
0x3f41:	mov	rcx, qword ptr [rsp + 0x28]
0x3f46:	mov	rsi, r14
0x3f49:	mov	rdi, r13
0x3f4c:	call	0x29f0


0x3f9f:	test	r12, r12
0x3fa2:	mov	r13, rax
0x3fa5:	mov	eax, dword ptr [rax]
0x3fa7:	sete	bpl
0x3fab:	or	ebp, dword ptr [rbx + 4]
0x3fae:	lea	r10, [rbx + 8]
0x3fb2:	sub	rsp, 8
0x3fb6:	mov	r8d, dword ptr [rbx]
0x3fb9:	mov	rcx, r15
0x3fbc:	mov	dword ptr [rsp + 0x14], eax
0x3fc0:	push	qword ptr [rbx + 0x30]
0x3fc3:	mov	rdx, r14
0x3fc6:	push	qword ptr [rbx + 0x28]
0x3fc9:	push	r10
0x3fcb:	xor	esi, esi
0x3fcd:	mov	r9d, ebp
0x3fd0:	xor	edi, edi
0x3fd2:	mov	qword ptr [rsp + 0x40], r10
0x3fd7:	call	0x29f0


0x660e:	test	rax, rax
0x6611:	mov	rcx, rax
0x6614:	movzx	edx, byte ptr [rbp - 0x3c8]
0x661b:	je	0x5a55


0x6621:	test	r14, r14
0x6624:	je	0x67c0


0x67c0:	mov	r15, rcx
0x67c3:	jmp	0x5ddb


0x662a:	test	dl, dl
0x662c:	je	0x67c0


0x6632:	mov	rsi, r15
0x6635:	mov	rdx, r14
0x6638:	mov	rdi, rax
0x663b:	call	0x1720


0x6640:	mov	r15, rax
0x6643:	jmp	0x5ddb


0x669e:	test	rax, rax
0x66a1:	mov	rcx, rax
0x66a4:	movzx	edx, byte ptr [rbp - 0x3c8]
0x66ab:	je	0x5a55


0x66b1:	test	r14, r14
0x66b4:	je	0x67f4


0x67f4:	mov	r15, rcx
0x67f7:	jmp	0x637f


0x66ba:	test	dl, dl
0x66bc:	je	0x67f4


0x66c2:	mov	rsi, r15
0x66c5:	mov	rdx, r14
0x66c8:	mov	rdi, rax
0x66cb:	call	0x1720


0x66d0:	mov	r15, rax
0x66d3:	jmp	0x637f


0x6954:	test	rax, rax
0x6957:	mov	rcx, rax
0x695a:	je	0x5a55


0x6960:	test	r14, r14
0x6963:	je	0x69d0


0x69d0:	mov	r15, rcx
0x69d3:	jmp	0x68cc


0x6965:	test	r13b, r13b
0x6968:	je	0x69d0


0x696a:	mov	rsi, r15
0x696d:	mov	rdx, r14
0x6970:	mov	rdi, rax
0x6973:	call	0x1720


0x6978:	mov	r15, rax
0x697b:	jmp	0x68cc


0x64b4:	test	rax, rax
0x64b7:	mov	r9, rax
0x64ba:	mov	rcx, qword ptr [rbp - 0x3c8]
0x64c1:	movzx	edx, byte ptr [rbp - 0x3d0]
0x64c8:	mov	r8, qword ptr [rbp - 0x3e0]
0x64cf:	je	0x5a55


0x64d5:	test	rbx, rbx
0x64d8:	je	0x66e0


0x66e0:	mov	r15, r9
0x66e3:	jmp	0x5b94


0x64de:	test	dl, dl
0x64e0:	je	0x66e0


0x64e6:	mov	rsi, r15
0x64e9:	mov	rdx, rbx
0x64ec:	mov	rdi, rax
0x64ef:	mov	qword ptr [rbp - 0x3d0], r8
0x64f6:	mov	qword ptr [rbp - 0x3c8], rcx
0x64fd:	call	0x1720


0x6502:	mov	rcx, qword ptr [rbp - 0x3c8]
0x6509:	mov	r15, rax
0x650c:	mov	r8, qword ptr [rbp - 0x3d0]
0x6513:	jmp	0x5b94


0x59c7:	test	rax, rax
0x59ca:	mov	qword ptr [rbp - 0x3d8], rax
0x59d1:	je	0x63b8


0x59d7:	mov	r8, qword ptr [rbp - 0x3c8]
0x59de:	mov	qword ptr [rbp - 0x420], rax
0x59e5:	xor	r12d, r12d
0x59e8:	cmp	qword ptr [rbp - 0x3e8], 0
0x59f0:	je	0x59fc


0x2654:	test	rax, rax
0x2657:	mov	rcx, rax
0x265a:	je	0x2676


0x2676:	add	rsp, 8
0x267a:	mov	rax, rcx
0x267d:	pop	rbx
0x267e:	pop	rbp
0x267f:	ret	


0x265c:	mov	rdx, rbx
0x265f:	mov	rsi, rbp
0x2662:	mov	rdi, rax
0x2665:	call	0x1720


0x266a:	test	rbx, rbx
0x266d:	mov	rcx, rax
0x2670:	je	0x2680


0x2680:	mov	byte ptr [rax], 0x2e
0x2683:	mov	ebx, 1
0x2688:	jmp	0x2672


0x2672:	mov	byte ptr [rcx + rbx], 0
0x2676:	add	rsp, 8
0x267a:	mov	rax, rcx
0x267d:	pop	rbx
0x267e:	pop	rbp
0x267f:	ret	


0x25b9:	test	rax, rax
0x25bc:	je	0x25c3


0x25c3:	call	0x4e00


0x25be:	add	rsp, 8
0x25c2:	ret	


0x7876:	mov	rdx, qword ptr [rsp + 8]
0x787b:	mov	rcx, rax
0x787e:	mov	r9, qword ptr [rsp + 0x48]
0x7883:	mov	r10, qword ptr [rsp + 0x40]
0x7888:	mov	r8, qword ptr [rsp + 0x38]
0x788d:	mov	r11, qword ptr [rsp + 0x30]
0x7892:	jmp	0x76d9


0x76d9:	test	rcx, rcx
0x76dc:	je	0x78f7


0x7739:	mov	rdx, qword ptr [rsp + 8]
0x773e:	mov	rcx, rax
0x7741:	mov	r9, qword ptr [rsp + 0x40]
0x7746:	mov	r10, qword ptr [rsp + 0x38]
0x774b:	mov	r8, qword ptr [rsp + 0x30]
0x7750:	jmp	0x703c


0x703c:	test	rcx, rcx
0x703f:	je	0x78f7


0x4bb9:	test	rax, rax
0x4bbc:	jne	0x4bc3


0x4bbe:	test	rbx, rbx
0x4bc1:	jne	0x4bc5


0x4bc3:	pop	rbx
0x4bc4:	ret	


0x4bc5:	call	0x4e00


0x4d69:	mov	rdx, rbx
0x4d6c:	xor	esi, esi
0x4d6e:	mov	rdi, rax
0x4d71:	pop	rbx
0x4d72:	jmp	0x16d0


0x4dc4:	add	rsp, 8
0x4dc8:	mov	rdx, rbx
0x4dcb:	mov	rsi, rbp
0x4dce:	pop	rbx
0x4dcf:	pop	rbp
0x4dd0:	mov	rdi, rax
0x4dd3:	jmp	0x1720


0x26f9:	cmp	rax, 1
0x26fd:	jbe	0x270a


0x270a:	pop	rbx
0x270b:	ret	


0x26ff:	cmp	byte ptr [rbx + rax - 1], 0x2f
0x2704:	lea	rdx, [rax - 1]
0x2708:	je	0x2718


0x2718:	cmp	rdx, 1
0x271c:	je	0x2730


0x2730:	mov	eax, 1
0x2735:	pop	rbx
0x2736:	ret	


0x271e:	cmp	byte ptr [rbx + rdx - 1], 0x2f
0x2723:	lea	rax, [rdx - 1]
0x2727:	je	0x2710


0x2710:	mov	rdx, rax
0x2713:	nop	dword ptr [rax + rax]
0x2718:	cmp	rdx, 1
0x271c:	je	0x2730


0x2729:	mov	rax, rdx
0x272c:	pop	rbx
0x272d:	ret	


0x2787:	sub	rbx, r12
0x278a:	mov	r13, rax
0x278d:	mov	rdi, rbp
0x2790:	add	rbx, rax
0x2793:	call	0x1640


0x2798:	test	r13, r13
0x279b:	mov	r14, rax
0x279e:	je	0x27d0


0x27d0:	xor	eax, eax
0x27d2:	cmp	byte ptr [rbp], 0x2f
0x27d6:	mov	edx, 0
0x27db:	sete	al
0x27de:	mov	qword ptr [rsp], rax
0x27e2:	mov	eax, 0x2e
0x27e7:	cmovne	eax, edx
0x27ea:	mov	byte ptr [rsp + 0xf], al
0x27ee:	lea	rdi, [rbx + r14 + 1]
0x27f3:	add	rdi, qword ptr [rsp]
0x27f7:	call	0x1750


0x27a0:	cmp	byte ptr [r12 + rbx - 1], 0x2f
0x27a6:	je	0x2850


0x2850:	mov	qword ptr [rsp], 0
0x2858:	mov	byte ptr [rsp + 0xf], 0
0x285d:	jmp	0x27ee


0x27ac:	xor	eax, eax
0x27ae:	cmp	byte ptr [rbp], 0x2f
0x27b2:	mov	edx, 0
0x27b7:	setne	al
0x27ba:	mov	qword ptr [rsp], rax
0x27be:	mov	eax, 0x2f
0x27c3:	cmove	eax, edx
0x27c6:	mov	byte ptr [rsp + 0xf], al
0x27ca:	jmp	0x27ee


0x27ee:	lea	rdi, [rbx + r14 + 1]
0x27f3:	add	rdi, qword ptr [rsp]
0x27f7:	call	0x1750


0x27fc:	test	rax, rax
0x27ff:	mov	r13, rax
0x2802:	je	0x2836


0x2836:	add	rsp, 0x18
0x283a:	mov	rax, r13
0x283d:	pop	rbx
0x283e:	pop	rbp
0x283f:	pop	r12
0x2841:	pop	r13
0x2843:	pop	r14
0x2845:	pop	r15
0x2847:	ret	


0x2804:	mov	rdi, rax
0x2807:	mov	rdx, rbx
0x280a:	mov	rsi, r12
0x280d:	call	0x17c0


0x17c0:	jmp	qword ptr [rip + 0x20979a]




0x2749:	test	rax, rax
0x274c:	je	0x2753


0x2753:	call	0x4e00


0x274e:	add	rsp, 8
0x2752:	ret	


0x4de9:	mov	rdi, rbx
0x4dec:	lea	rsi, [rax + 1]
0x4df0:	pop	rbx
0x4df1:	jmp	0x4db0


0x45df:	lea	rdx, [rip + 0x44da]
0x45e6:	mov	rcx, rax
0x45e9:	mov	r8d, 0x7e3
0x45ef:	mov	esi, 1
0x45f4:	mov	rdi, rbp
0x45f7:	xor	eax, eax
0x45f9:	call	0x1850


0x45fe:	lea	rsi, [rip + 0x4223]
0x4605:	xor	edi, edi
0x4607:	mov	edx, 5
0x460c:	call	0x1620


0x4611:	mov	rsi, rbp
0x4614:	mov	rdi, rax
0x4617:	call	0x16f0


0x16f0:	jmp	qword ptr [rip + 0x209802]




0x20fd:	mov	rdi, qword ptr [rip + 0x208fbc]
0x2104:	mov	rdx, rax
0x2107:	mov	rcx, rbx
0x210a:	mov	esi, 1
0x210f:	xor	eax, eax
0x2111:	call	0x1850


0x2116:	mov	edi, ebp
0x2118:	call	0x1830


0x1830:	jmp	qword ptr [rip + 0x209762]




0x212b:	mov	rdx, rbx
0x212e:	mov	rsi, rax
0x2131:	mov	edi, 1
0x2136:	xor	eax, eax
0x2138:	call	0x17b0


0x17b0:	jmp	qword ptr [rip + 0x2097a2]




0x4b44:	lea	rdx, [rip + 0x3cac]
0x4b4b:	mov	rsi, rax
0x4b4e:	mov	edi, 1
0x4b53:	xor	eax, eax
0x4b55:	call	0x17b0


0x4e17:	mov	edi, dword ptr [rip + 0x2061fb]
0x4e1d:	lea	rdx, [rip + 0x3442]
0x4e24:	mov	rcx, rax
0x4e27:	xor	esi, esi
0x4e29:	xor	eax, eax
0x4e2b:	call	0x17d0


0x17d0:	jmp	qword ptr [rip + 0x209792]




0x5387:	cmp	rax, -3
0x538b:	mov	rbp, rax
0x538e:	jbe	0x53b0


0x53b0:	mov	rdx, qword ptr [rsp + 8]
0x53b5:	xor	rdx, qword ptr fs:[0x28]
0x53be:	mov	rax, rbp
0x53c1:	jne	0x53ce


0x5390:	test	r12, r12
0x5393:	je	0x53b0


0x53c3:	add	rsp, 0x18
0x53c7:	pop	rbx
0x53c8:	pop	rbp
0x53c9:	pop	r12
0x53cb:	pop	r13
0x53cd:	ret	


0x53ce:	call	0x1650


0x5395:	xor	edi, edi
0x5397:	call	0x5730


0x56bc:	mov	ebx, dword ptr [rbp]
0x56bf:	mov	rdi, rbp
0x56c2:	mov	r12, rax
0x56c5:	call	0x57d0


0x18f3:	lea	rsi, [rip + 0x6171]
0x18fa:	lea	rdi, [rip + 0x6141]
0x1901:	call	0x1610


0x1610:	jmp	qword ptr [rip + 0x209872]




0x573b:	mov	rdx, rax
0x573e:	mov	eax, 1
0x5743:	test	rdx, rdx
0x5746:	je	0x5765


0x5765:	add	rsp, 8
0x5769:	ret	


0x5748:	lea	rdi, [rip + 0x34dc]
0x574f:	mov	ecx, 2
0x5754:	mov	rsi, rdx
0x5757:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5757:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5759:	seta	cl
0x575c:	sbb	cl, 0
0x575f:	xor	eax, eax
0x5761:	test	cl, cl
0x5763:	jne	0x5770


0x5770:	lea	rdi, [rip + 0x34b6]
0x5777:	mov	ecx, 6
0x577c:	mov	rsi, rdx
0x577f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x577f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5781:	seta	al
0x5784:	sbb	al, 0
0x5786:	test	al, al
0x5788:	setne	al
0x578b:	add	rsp, 8
0x578f:	ret	


0x539c:	test	al, al
0x539e:	jne	0x53b0


0x53a0:	movzx	eax, byte ptr [r13]
0x53a5:	mov	ebp, 1
0x53aa:	mov	dword ptr [rbx], eax
0x53ac:	nop	dword ptr [rax]
0x53b0:	mov	rdx, qword ptr [rsp + 8]
0x53b5:	xor	rdx, qword ptr fs:[0x28]
0x53be:	mov	rax, rbp
0x53c1:	jne	0x53ce


0x579e:	test	rax, rax
0x57a1:	je	0x57c0


0x57c0:	lea	rax, [rip + 0x346c]
0x57c7:	add	rsp, 8
0x57cb:	ret	


0x57a3:	cmp	byte ptr [rax], 0
0x57a6:	lea	rdx, [rip + 0x3486]
0x57ad:	cmove	rax, rdx
0x57b1:	add	rsp, 8
0x57b5:	ret	


0x2910:	movzx	edx, byte ptr [rax]
0x2913:	and	edx, 0xffffffdf
0x2916:	cmp	dl, 0x55
0x2919:	je	0x2990


0x2990:	movzx	edx, byte ptr [rax + 1]
0x2994:	and	edx, 0xffffffdf
0x2997:	cmp	dl, 0x54
0x299a:	jne	0x2920


0x291b:	cmp	dl, 0x47
0x291e:	je	0x2940


0x299c:	movzx	edx, byte ptr [rax + 2]
0x29a0:	and	edx, 0xffffffdf
0x29a3:	cmp	dl, 0x46
0x29a6:	jne	0x2920


0x2920:	lea	rax, [rip + 0x599c]
0x2927:	lea	rdx, [rip + 0x5997]
0x292e:	cmp	ebx, 9
0x2931:	cmovne	rax, rdx
0x2935:	add	rsp, 8
0x2939:	pop	rbx
0x293a:	pop	rbp
0x293b:	ret	


0x2940:	movzx	edx, byte ptr [rax + 1]
0x2944:	and	edx, 0xffffffdf
0x2947:	cmp	dl, 0x42
0x294a:	jne	0x2920


0x29ac:	cmp	byte ptr [rax + 3], 0x2d
0x29b0:	jne	0x2920


0x294c:	cmp	byte ptr [rax + 2], 0x31
0x2950:	jne	0x2920


0x29b6:	cmp	byte ptr [rax + 4], 0x38
0x29ba:	jne	0x2920


0x2952:	cmp	byte ptr [rax + 3], 0x38
0x2956:	jne	0x2920


0x29c0:	cmp	byte ptr [rax + 5], 0
0x29c4:	jne	0x2920


0x2958:	cmp	byte ptr [rax + 4], 0x30
0x295c:	jne	0x2920


0x29ca:	cmp	byte ptr [rbp], 0x60
0x29ce:	lea	rax, [rip + 0x58df]
0x29d5:	lea	rdx, [rip + 0x58dc]
0x29dc:	cmovne	rax, rdx
0x29e0:	add	rsp, 8
0x29e4:	pop	rbx
0x29e5:	pop	rbp
0x29e6:	ret	


0x295e:	cmp	byte ptr [rax + 5], 0x33
0x2962:	jne	0x2920


0x2964:	cmp	byte ptr [rax + 6], 0x30
0x2968:	jne	0x2920


0x296a:	cmp	byte ptr [rax + 7], 0
0x296e:	jne	0x2920


0x2970:	cmp	byte ptr [rbp], 0x60
0x2974:	lea	rax, [rip + 0x5941]
0x297b:	lea	rdx, [rip + 0x593e]
0x2982:	cmovne	rax, rdx
0x2986:	add	rsp, 8
0x298a:	pop	rbx
0x298b:	pop	rbp
0x298c:	ret	


0x58c3:	mov	edx, r12d
0x58c6:	mov	rsi, rbp
0x58c9:	mov	edi, eax
0x58cb:	call	0x16a0


0x16a0:	jmp	qword ptr [rip + 0x20982a]




0x57dc:	test	eax, eax
0x57de:	mov	rdi, rbx
0x57e1:	js	0x5837


0x5837:	pop	rbx
0x5838:	pop	rbp
0x5839:	pop	r12
0x583b:	jmp	0x1600


0x57e3:	call	0x1780


0x1600:	jmp	qword ptr [rip + 0x20987a]




0x57e8:	test	eax, eax
0x57ea:	jne	0x5818


0x57ec:	mov	rdi, rbx
0x57ef:	call	0x5850


0x5818:	mov	rdi, rbx
0x581b:	call	0x1730


0x5820:	xor	esi, esi
0x5822:	mov	edx, 1
0x5827:	mov	edi, eax
0x5829:	call	0x16a0


0x582e:	cmp	rax, -1
0x5832:	jne	0x57ec


0x5834:	mov	rdi, rbx
0x5837:	pop	rbx
0x5838:	pop	rbp
0x5839:	pop	r12
0x583b:	jmp	0x1600


0x58d0:	cmp	rax, -1
0x58d4:	je	0x58e2


0x58e2:	pop	rbx
0x58e3:	pop	rbp
0x58e4:	pop	r12
0x58e6:	ret	


0x58d6:	and	dword ptr [rbx], 0xffffffef
0x58d9:	mov	qword ptr [rbx + 0x90], rax
0x58e0:	xor	eax, eax
0x58e2:	pop	rbx
0x58e3:	pop	rbp
0x58e4:	pop	r12
0x58e6:	ret	


0x1906:	lea	rdi, [rip + 0x6135]
0x190d:	call	0x15f0


0x15f0:	jmp	qword ptr [rip + 0x209882]




0x4e30:	call	0x1590


0x4b5a:	lea	rsi, [rip + 0x3cac]
0x4b61:	mov	edx, 5
0x4b66:	xor	edi, edi
0x4b68:	call	0x1620


0x4b6d:	lea	rcx, [rip + 0x350c]
0x4b74:	lea	rdx, [rip + 0x2ec3]
0x4b7b:	mov	rsi, rax
0x4b7e:	mov	edi, 1
0x4b83:	xor	eax, eax
0x4b85:	call	0x17b0


0x4b8a:	mov	rbx, qword ptr [rip + 0x2064f7]
0x4b91:	lea	rsi, [rip + 0x3ea8]
0x4b98:	xor	edi, edi
0x4b9a:	mov	edx, 5
0x4b9f:	call	0x1620


0x4ba4:	mov	rsi, rbx
0x4ba7:	mov	rdi, rax
0x4baa:	pop	rbx
0x4bab:	jmp	0x16f0


0x213d:	mov	rbx, qword ptr [rip + 0x208f44]
0x2144:	lea	rsi, [rip + 0x5a7d]
0x214b:	mov	edx, 5
0x2150:	xor	edi, edi
0x2152:	call	0x1620


0x2157:	mov	rsi, rbx
0x215a:	mov	rdi, rax
0x215d:	call	0x16f0


0x2162:	mov	rbx, qword ptr [rip + 0x208f1f]
0x2169:	lea	rsi, [rip + 0x5aa8]
0x2170:	mov	edx, 5
0x2175:	xor	edi, edi
0x2177:	call	0x1620


0x217c:	mov	rsi, rbx
0x217f:	mov	rdi, rax
0x2182:	call	0x16f0


0x2187:	mov	rbx, qword ptr [rip + 0x208efa]
0x218e:	lea	rsi, [rip + 0x5ad3]
0x2195:	mov	edx, 5
0x219a:	xor	edi, edi
0x219c:	call	0x1620


0x21a1:	mov	rsi, rbx
0x21a4:	mov	rdi, rax
0x21a7:	call	0x16f0


0x21ac:	mov	rbx, qword ptr [rip + 0x208ed5]
0x21b3:	lea	rsi, [rip + 0x5b66]
0x21ba:	mov	edx, 5
0x21bf:	xor	edi, edi
0x21c1:	call	0x1620


0x21c6:	mov	rsi, rbx
0x21c9:	mov	rdi, rax
0x21cc:	call	0x16f0


0x21d1:	mov	rbx, qword ptr [rip + 0x208eb0]
0x21d8:	lea	rsi, [rip + 0x5b71]
0x21df:	mov	edx, 5
0x21e4:	xor	edi, edi
0x21e6:	call	0x1620


0x21eb:	mov	rsi, rbx
0x21ee:	mov	rdi, rax
0x21f1:	call	0x16f0


0x21f6:	mov	rbx, qword ptr [rip + 0x208e8b]
0x21fd:	lea	rsi, [rip + 0x5b84]
0x2204:	mov	edx, 5
0x2209:	xor	edi, edi
0x220b:	call	0x1620


0x2210:	mov	rsi, rbx
0x2213:	mov	rdi, rax
0x2216:	call	0x16f0


0x221b:	mov	rbx, qword ptr [rip + 0x208e66]
0x2222:	lea	rsi, [rip + 0x5bcf]
0x2229:	mov	edx, 5
0x222e:	xor	edi, edi
0x2230:	call	0x1620


0x2235:	mov	rsi, rbx
0x2238:	mov	rdi, rax
0x223b:	call	0x16f0


0x2240:	mov	rbx, qword ptr [rip + 0x208e41]
0x2247:	lea	rsi, [rip + 0x5bea]
0x224e:	mov	edx, 5
0x2253:	xor	edi, edi
0x2255:	call	0x1620


0x225a:	mov	rsi, rbx
0x225d:	mov	rdi, rax
0x2260:	call	0x16f0


0x2265:	mov	rbx, qword ptr [rip + 0x208e1c]
0x226c:	lea	rsi, [rip + 0x5cfd]
0x2273:	mov	edx, 5
0x2278:	xor	edi, edi
0x227a:	call	0x1620


0x227f:	mov	rsi, rbx
0x2282:	mov	rdi, rax
0x2285:	lea	rbx, [rip + 0x5718]
0x228c:	call	0x16f0


0x2291:	lea	rax, [rip + 0x5730]
0x2298:	lea	rcx, [rip + 0x576a]
0x229f:	mov	qword ptr [rsp + 0x60], 0
0x22a8:	mov	qword ptr [rsp + 0x68], 0
0x22b1:	mov	rdx, rsp
0x22b4:	mov	qword ptr [rsp], rax
0x22b8:	lea	rax, [rip + 0x570b]
0x22bf:	mov	qword ptr [rsp + 0x30], rcx
0x22c4:	lea	rcx, [rip + 0x5748]
0x22cb:	mov	qword ptr [rsp + 8], rax
0x22d0:	lea	rax, [rip + 0x576b]
0x22d7:	mov	qword ptr [rsp + 0x40], rcx
0x22dc:	lea	rcx, [rip + 0x573a]
0x22e3:	mov	qword ptr [rsp + 0x10], rax
0x22e8:	lea	rax, [rip + 0x56eb]
0x22ef:	mov	qword ptr [rsp + 0x50], rcx
0x22f4:	mov	qword ptr [rsp + 0x18], rax
0x22f9:	lea	rax, [rip + 0x56f0]
0x2300:	mov	qword ptr [rsp + 0x20], rax
0x2305:	lea	rax, [rip + 0x56ee]
0x230c:	mov	qword ptr [rsp + 0x28], rax
0x2311:	mov	qword ptr [rsp + 0x38], rax
0x2316:	mov	qword ptr [rsp + 0x48], rax
0x231b:	mov	qword ptr [rsp + 0x58], rax
0x2320:	add	rdx, 0x10
0x2324:	mov	rdi, qword ptr [rdx]
0x2327:	test	rdi, rdi
0x232a:	je	0x233f


0x233f:	mov	r12, qword ptr [rdx + 8]
0x2343:	xor	edi, edi
0x2345:	mov	edx, 5
0x234a:	lea	rsi, [rip + 0x56d6]
0x2351:	test	r12, r12
0x2354:	je	0x241b


0x232c:	mov	ecx, 7
0x2331:	mov	rsi, rbx
0x2334:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x241b:	call	0x1620


0x235a:	call	0x1620


0x2334:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2336:	seta	al
0x2339:	sbb	al, 0
0x233b:	test	al, al
0x233d:	jne	0x2320


0x2320:	add	rdx, 0x10
0x2324:	mov	rdi, qword ptr [rdx]
0x2327:	test	rdi, rdi
0x232a:	je	0x233f


0x235f:	lea	rcx, [rip + 0x5d1a]
0x2366:	lea	rdx, [rip + 0x56d1]
0x236d:	mov	rsi, rax
0x2370:	mov	edi, 1
0x2375:	xor	eax, eax
0x2377:	call	0x17b0


0x237c:	xor	esi, esi
0x237e:	mov	edi, 5
0x2383:	call	0x17a0


0x2388:	test	rax, rax
0x238b:	je	0x23a9


0x23a9:	lea	rsi, [rip + 0x56a0]
0x23b0:	xor	edi, edi
0x23b2:	mov	edx, 5
0x23b7:	call	0x1620


0x238d:	lea	rsi, [rip + 0x56b8]
0x2394:	mov	edx, 3
0x2399:	mov	rdi, rax
0x239c:	call	0x15b0


0x15b0:	jmp	qword ptr [rip + 0x2098a2]




0x23bc:	lea	rcx, [rip + 0x55e1]
0x23c3:	lea	rdx, [rip + 0x5cb6]
0x23ca:	mov	rsi, rax
0x23cd:	mov	edi, 1
0x23d2:	xor	eax, eax
0x23d4:	call	0x17b0


0x23d9:	cmp	r12, rbx
0x23dc:	lea	rcx, [rip + 0x5601]
0x23e3:	lea	rbx, [rip + 0x63f7]
0x23ea:	cmove	rbx, rcx
0x23ee:	lea	rsi, [rip + 0x5cfb]
0x23f5:	xor	edi, edi
0x23f7:	mov	edx, 5
0x23fc:	call	0x1620


0x2401:	mov	rcx, rbx
0x2404:	mov	rsi, rax
0x2407:	mov	rdx, r12
0x240a:	mov	edi, 1
0x240f:	xor	eax, eax
0x2411:	call	0x17b0


0x2416:	jmp	0x2116


0x2420:	lea	rcx, [rip + 0x5c59]
0x2427:	lea	rdx, [rip + 0x5610]
0x242e:	mov	rsi, rax
0x2431:	mov	edi, 1
0x2436:	xor	eax, eax
0x2438:	call	0x17b0


0x243d:	xor	esi, esi
0x243f:	mov	edi, 5
0x2444:	call	0x17a0


0x2449:	test	rax, rax
0x244c:	je	0x2466


0x2466:	lea	rsi, [rip + 0x55e3]
0x246d:	mov	edx, 5
0x2472:	xor	edi, edi
0x2474:	lea	r12, [rip + 0x5529]
0x247b:	lea	rbx, [rip + 0x5562]
0x2482:	call	0x1620


0x244e:	lea	rsi, [rip + 0x55f7]
0x2455:	mov	edx, 3
0x245a:	mov	rdi, rax
0x245d:	call	0x15b0


0x2487:	lea	rcx, [rip + 0x5516]
0x248e:	lea	rdx, [rip + 0x5beb]
0x2495:	mov	rsi, rax
0x2498:	mov	edi, 1
0x249d:	xor	eax, eax
0x249f:	call	0x17b0


0x24a4:	jmp	0x23ee


0x23ee:	lea	rsi, [rip + 0x5cfb]
0x23f5:	xor	edi, edi
0x23f7:	mov	edx, 5
0x23fc:	call	0x1620


0x461c:	cmp	r12, 9
0x4620:	ja	0x4960


0x4626:	lea	rdx, [rip + 0x4457]
0x462d:	movsxd	rax, dword ptr [rdx + r12*4]
0x4631:	add	rax, rdx
0x4634:	jmp	rax


0x4960:	mov	r10, qword ptr [rbx + 0x40]
0x4964:	mov	r9, qword ptr [rbx + 0x38]
0x4968:	mov	edx, 5
0x496d:	mov	rax, qword ptr [rbx + 0x10]
0x4971:	mov	r8, qword ptr [rbx + 8]
0x4975:	lea	rsi, [rip + 0x4084]
0x497c:	mov	r13, qword ptr [rbx + 0x30]
0x4980:	mov	r12, qword ptr [rbx + 0x28]
0x4984:	mov	r15, qword ptr [rbx + 0x20]
0x4988:	mov	r14, qword ptr [rbx + 0x18]
0x498c:	mov	qword ptr [rsp + 0x18], r10
0x4991:	mov	qword ptr [rsp + 0x10], r9
0x4996:	mov	qword ptr [rsp], rax
0x499a:	mov	qword ptr [rsp + 8], r8
0x499f:	mov	rbx, qword ptr [rbx]
0x49a2:	jmp	0x4732


0x4732:	xor	edi, edi
0x4734:	call	0x1620


0x4739:	mov	r10, qword ptr [rsp + 0x18]
0x473e:	push	r10
0x4740:	jmp	0x4684


0x4684:	mov	r9, qword ptr [rsp + 0x18]
0x4689:	mov	rdx, rax
0x468c:	mov	rcx, rbx
0x468f:	mov	esi, 1
0x4694:	mov	rdi, rbp
0x4697:	xor	eax, eax
0x4699:	push	r9
0x469b:	push	r13
0x469d:	push	r12
0x469f:	push	r15
0x46a1:	push	r14
0x46a3:	mov	r9, qword ptr [rsp + 0x30]
0x46a8:	mov	r8, qword ptr [rsp + 0x38]
0x46ad:	call	0x1850


0x46b2:	add	rsp, 0x30
0x46b6:	add	rsp, 0x28
0x46ba:	pop	rbx
0x46bb:	pop	rbp
0x46bc:	pop	r12
0x46be:	pop	r13
0x46c0:	pop	r14
0x46c2:	pop	r15
0x46c4:	ret	


0x2812:	movzx	ecx, byte ptr [rsp + 0xf]
0x2817:	mov	rdi, qword ptr [rsp]
0x281b:	add	rdi, rax
0x281e:	test	r15, r15
0x2821:	mov	byte ptr [rax], cl
0x2823:	je	0x2828


0x2828:	mov	rdx, r14
0x282b:	mov	rsi, rbp
0x282e:	call	0x17c0


0x2825:	mov	qword ptr [r15], rdi
0x2828:	mov	rdx, r14
0x282b:	mov	rsi, rbp
0x282e:	call	0x17c0


0x2833:	mov	byte ptr [rax], 0
0x2836:	add	rsp, 0x18
0x283a:	mov	rax, r13
0x283d:	pop	rbx
0x283e:	pop	rbp
0x283f:	pop	r12
0x2841:	pop	r13
0x2843:	pop	r14
0x2845:	pop	r15
0x2847:	ret	


0x3e0d:	mov	dword ptr [rbp], r12d
0x3e11:	pop	rbx
0x3e12:	pop	rbp
0x3e13:	pop	r12
0x3e15:	ret	


0x3cce:	mov	dword ptr [rip + 0x207383], r12d
0x3cd5:	mov	eax, dword ptr [rbp + 4]
0x3cd8:	shl	r15, 4
0x3cdc:	sub	rsp, 8
0x3ce0:	add	rbx, r15
0x3ce3:	lea	r15, [rbp + 8]
0x3ce7:	mov	r8d, dword ptr [rbp]
0x3ceb:	mov	r11, qword ptr [rbx]
0x3cee:	mov	r12, qword ptr [rbx + 8]
0x3cf2:	mov	rcx, r14
0x3cf5:	or	eax, 1
0x3cf8:	mov	dword ptr [rsp + 0x24], eax
0x3cfc:	push	qword ptr [rbp + 0x30]
0x3cff:	mov	r9d, eax
0x3d02:	push	qword ptr [rbp + 0x28]
0x3d05:	push	r15
0x3d07:	mov	rsi, r11
0x3d0a:	mov	rdx, qword ptr [rsp + 0x28]
0x3d0f:	mov	rdi, r12
0x3d12:	mov	qword ptr [rsp + 0x30], r11
0x3d17:	call	0x29f0


0x4eca:	mov	edx, dword ptr [rsp + 8]
0x4ece:	mov	rsi, qword ptr [rax]
0x4ed1:	mov	rax, rbp
0x4ed4:	jmp	0x4ee7


0x4ee7:	movzx	ecx, bl
0x4eea:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0x4eef:	jne	0x4ee0


0x4ef1:	cmp	bl, 0x2d
0x4ef4:	je	0x4f48


0x4ee0:	add	rax, 1
0x4ee4:	movzx	ebx, byte ptr [rax]
0x4ee7:	movzx	ecx, bl
0x4eea:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0x4eef:	jne	0x4ee0


0x4f48:	mov	ebp, 4
0x4f4d:	mov	rdi, qword ptr [rsp + 0x18]
0x4f52:	xor	rdi, qword ptr fs:[0x28]
0x4f5b:	mov	eax, ebp
0x4f5d:	jne	0x51f0


0x4ef6:	xor	ecx, ecx
0x4ef8:	mov	rsi, r15
0x4efb:	mov	rdi, rbp
0x4efe:	call	0x16c0


0x4f63:	add	rsp, 0x28
0x4f67:	pop	rbx
0x4f68:	pop	rbp
0x4f69:	pop	r12
0x4f6b:	pop	r13
0x4f6d:	pop	r14
0x4f6f:	pop	r15
0x4f71:	ret	


0x51f0:	call	0x1650


0x16c0:	jmp	qword ptr [rip + 0x20981a]




0x5887:	mov	rdi, rbx
0x588a:	pop	rbx
0x588b:	jmp	0x1760


0x4af6:	mov	rax, qword ptr [rsp + 0x78]
0x4afb:	xor	rax, qword ptr fs:[0x28]
0x4b04:	jne	0x4b10


0x4b06:	add	rsp, 0xb8
0x4b0d:	pop	rbx
0x4b0e:	pop	rbp
0x4b0f:	ret	


0x4b10:	call	0x1650


0x4a20:	mov	rax, qword ptr [rsp + 0x58]
0x4a25:	xor	rax, qword ptr fs:[0x28]
0x4a2e:	jne	0x4a35


0x4a30:	add	rsp, 0x68
0x4a34:	ret	


0x4a35:	call	0x1650


0x4f03:	mov	rcx, qword ptr [r15]
0x4f06:	mov	rbx, rax
0x4f09:	cmp	rcx, rbp
0x4f0c:	je	0x4f38


0x4f38:	test	r13, r13
0x4f3b:	mov	qword ptr [rsp + 8], rcx
0x4f40:	jne	0x4f80


0x4f0e:	mov	eax, dword ptr [r12]
0x4f12:	test	eax, eax
0x4f14:	je	0x4f78


0x4f80:	movzx	r12d, byte ptr [rbp]
0x4f85:	test	r12b, r12b
0x4f88:	je	0x4f48


0x4f78:	xor	ebp, ebp
0x4f7a:	jmp	0x4f20


0x4f16:	cmp	eax, 0x22
0x4f19:	mov	ebp, 1
0x4f1e:	jne	0x4f48


0x4f8a:	movsx	esi, r12b
0x4f8e:	mov	rdi, r13
0x4f91:	xor	ebp, ebp
0x4f93:	call	0x1680


0x4f20:	test	r13, r13
0x4f23:	je	0x4f2e


0x1680:	jmp	qword ptr [rip + 0x20983a]


0x4f2e:	mov	qword ptr [r14], rbx
0x4f31:	jmp	0x4f4d


0x4f25:	movzx	r12d, byte ptr [rcx]
0x4f29:	test	r12b, r12b
0x4f2c:	jne	0x4fa7




0x4f4d:	mov	rdi, qword ptr [rsp + 0x18]
0x4f52:	xor	rdi, qword ptr fs:[0x28]
0x4f5b:	mov	eax, ebp
0x4f5d:	jne	0x51f0


0x4fa7:	movsx	esi, r12b
0x4fab:	mov	rdi, r13
0x4fae:	mov	qword ptr [rsp + 8], rcx
0x4fb3:	call	0x1680


0x2462:	test	eax, eax
0x2464:	jne	0x24a9


0x24a9:	lea	r12, [rip + 0x54f4]
0x24b0:	mov	r13, qword ptr [rip + 0x208bd1]
0x24b7:	lea	rsi, [rip + 0x5bea]
0x24be:	xor	edi, edi
0x24c0:	mov	edx, 5
0x24c5:	call	0x1620


0x24ca:	mov	rsi, r13
0x24cd:	mov	rdi, rax
0x24d0:	call	0x16f0


0x24d5:	jmp	0x23a9


0x23a1:	test	eax, eax
0x23a3:	jne	0x24b0


0x24b0:	mov	r13, qword ptr [rip + 0x208bd1]
0x24b7:	lea	rsi, [rip + 0x5bea]
0x24be:	xor	edi, edi
0x24c0:	mov	edx, 5
0x24c5:	call	0x1620


0x1912:	lea	rdi, [rip + 0xbe7]
0x1919:	mov	dword ptr [rip + 0x2096f5], 0x7d
0x1923:	call	0x7980


0x1928:	lea	r12, [rip + 0x2097b1]
0x192f:	lea	rcx, [rip + 0x2091aa]
0x1936:	lea	rdx, [rip + 0x616f]
0x193d:	xor	r8d, r8d
0x1940:	mov	rsi, rbx
0x1943:	mov	edi, ebp
0x1945:	call	0x1660


0x1660:	jmp	qword ptr [rip + 0x20984a]




0x57f4:	test	eax, eax
0x57f6:	je	0x5834


0x57f8:	call	0x15a0


0x57fd:	mov	r12d, dword ptr [rax]
0x5800:	mov	rdi, rbx
0x5803:	mov	rbp, rax
0x5806:	call	0x1600


0x580b:	test	r12d, r12d
0x580e:	jne	0x5840


0x5810:	pop	rbx
0x5811:	pop	rbp
0x5812:	pop	r12
0x5814:	ret	


0x5840:	mov	dword ptr [rbp], r12d
0x5844:	mov	eax, 0xffffffff
0x5849:	jmp	0x5810


0x56ca:	and	ebx, 0x20
0x56cd:	test	ebx, ebx
0x56cf:	jne	0x56e8


0x56d1:	test	eax, eax
0x56d3:	je	0x56df


0x56e8:	test	eax, eax
0x56ea:	jne	0x5708


0x56df:	pop	rbx
0x56e0:	pop	rbp
0x56e1:	pop	r12
0x56e3:	ret	


0x56d5:	test	r12, r12
0x56d8:	mov	eax, 0xffffffff
0x56dd:	je	0x5718


0x56ec:	call	0x15a0


0x5708:	pop	rbx
0x5709:	mov	eax, 0xffffffff
0x570e:	pop	rbp
0x570f:	pop	r12
0x5711:	ret	


0x5718:	call	0x15a0


0x571d:	cmp	dword ptr [rax], 9
0x5720:	pop	rbx
0x5721:	pop	rbp
0x5722:	pop	r12
0x5724:	setne	al
0x5727:	movzx	eax, al
0x572a:	neg	eax
0x572c:	ret	


0x56f1:	mov	dword ptr [rax], 0
0x56f7:	mov	eax, 0xffffffff
0x56fc:	pop	rbx
0x56fd:	pop	rbp
0x56fe:	pop	r12
0x5700:	ret	


0x2512:	test	eax, eax
0x2514:	je	0x252c


0x252c:	mov	rdi, qword ptr [rip + 0x208b8d]
0x2533:	call	0x56b0


0x2516:	call	0x15a0


0x251b:	cmp	byte ptr [rip + 0x208c0e], 0
0x2522:	mov	rbx, rax
0x2525:	je	0x2543


0x2543:	lea	rsi, [rip + 0x5d0c]
0x254a:	xor	edi, edi
0x254c:	mov	edx, 5
0x2551:	call	0x1620


0x2527:	cmp	dword ptr [rax], 0x20
0x252a:	jne	0x2543


0x2556:	mov	rdi, qword ptr [rip + 0x208bdb]
0x255d:	mov	rbp, rax
0x2560:	test	rdi, rdi
0x2563:	je	0x258d


0x258d:	mov	esi, dword ptr [rbx]
0x258f:	lea	rdx, [rip + 0x5cd0]
0x2596:	mov	rcx, rax
0x2599:	xor	edi, edi
0x259b:	xor	eax, eax
0x259d:	call	0x17d0


0x2565:	call	0x4370


0x25a2:	jmp	0x2582


0x2582:	mov	edi, dword ptr [rip + 0x208a90]
0x2588:	call	0x15c0


0x15c0:	jmp	qword ptr [rip + 0x20989a]




0x2538:	test	eax, eax
0x253a:	jne	0x2582


0x253c:	add	rsp, 8
0x2540:	pop	rbx
0x2541:	pop	rbp
0x2542:	ret	


0x194a:	cmp	eax, -1
0x194d:	je	0x1aaf


0x1aaf:	movsxd	rdx, dword ptr [rip + 0x2095da]
0x1ab6:	sub	ebp, edx
0x1ab8:	lea	r15, [rbx + rdx*8]
0x1abc:	test	ebp, ebp
0x1abe:	jle	0x1ed3


0x1953:	cmp	eax, 0x65
0x1956:	je	0x19a7


0x1ed3:	mov	edx, 5
0x1ed8:	lea	rsi, [rip + 0x5bd5]
0x1edf:	jmp	0x1a90


0x1ac4:	lea	rbx, [rip + 0x209615]
0x1acb:	lea	r12, [rsp + 0x18]
0x1ad0:	xor	edx, edx
0x1ad2:	lea	rbp, [rbx + 0x48]
0x1ad6:	mov	rax, qword ptr [rbx + 0x10]
0x1ada:	test	rax, rax
0x1add:	je	0x1b4f


0x19a7:	lea	edx, [rax - 0x65]
0x19aa:	movsxd	r14, dword ptr [r13 + rdx*4]
0x19af:	cmp	r14d, 2
0x19b3:	ja	0x1e64


0x1958:	jg	0x1999


0x1a90:	xor	edi, edi
0x1a92:	call	0x1620


0x1b4f:	add	rbx, 0x18
0x1b53:	cmp	rbp, rbx
0x1b56:	jne	0x1ad6


0x1adf:	cmp	byte ptr [rax], 0x4c
0x1ae2:	mov	ecx, dword ptr [rbx + 8]
0x1ae5:	lea	edx, [rcx + 0x80]
0x1aeb:	je	0x1d25


0x19b9:	mov	r9, qword ptr [rip + 0x2096d8]
0x19c0:	lea	rdx, [r14 + r14*2]
0x19c4:	mov	dword ptr [r12 + rdx*8 + 8], eax
0x19c9:	movsx	edx, byte ptr [r9]
0x19cd:	cmp	edx, 0x20
0x19d0:	ja	0x1a09


0x1e64:	lea	rcx, [rip + 0x63e1]
0x1e6b:	lea	rsi, [rip + 0x62b6]
0x1e72:	lea	rdi, [rip + 0x62cf]
0x1e79:	mov	edx, 0x150
0x1e7e:	call	0x16b0


0x195a:	cmp	eax, 0xffffff7d
0x195f:	jne	0x1e4d


0x1999:	cmp	eax, 0x69
0x199c:	je	0x19a7


0x1b5c:	test	dl, dl
0x1b5e:	je	0x1f19


0x1ad6:	mov	rax, qword ptr [rbx + 0x10]
0x1ada:	test	rax, rax
0x1add:	je	0x1b4f


0x1d25:	cmp	edx, 0x17f
0x1d2b:	ja	0x1d3f


0x1af1:	cmp	edx, 0x17f
0x1af7:	mov	r8, qword ptr [rbx]
0x1afa:	ja	0x1b18


0x19d2:	bt	r15, rdx
0x19d6:	jae	0x1a09


0x1a09:	lea	rdx, [r14 + r14*2]
0x1a0d:	cmp	eax, 0x69
0x1a10:	mov	qword ptr [r12 + rdx*8 + 0x10], r9
0x1a15:	je	0x1a7e


0x1965:	mov	rdi, qword ptr [rip + 0x20971c]
0x196c:	mov	rcx, qword ptr [rip + 0x20969d]
0x1973:	lea	r8, [rip + 0x6124]
0x197a:	lea	rdx, [rip + 0x60bd]
0x1981:	lea	rsi, [rip + 0x601c]
0x1988:	xor	r9d, r9d
0x198b:	xor	eax, eax
0x198d:	call	0x4a50


0x1e4d:	cmp	eax, 0xffffff7e
0x1e52:	jne	0x1aa5


0x199e:	cmp	eax, 0x6f
0x19a1:	jne	0x1aa5


0x1f19:	mov	edx, 5
0x1f1e:	lea	rsi, [rip + 0x62bb]
0x1f25:	jmp	0x1a90


0x1b64:	mov	rbx, qword ptr [rip + 0x2095d5]
0x1b6b:	mov	esi, 0x2f
0x1b70:	mov	rdi, rbx
0x1b73:	call	0x1680


0x1d2d:	mov	dword ptr [rsp], ecx
0x1d30:	call	0x1550


0x1d3f:	lea	rdx, [rip + 0x5d7e]
0x1d46:	lea	rsi, [rip + 0x5d80]
0x1d4d:	mov	rdi, r12
0x1d50:	xor	eax, eax
0x1d52:	call	0x5290


0x1afc:	mov	qword ptr [rsp + 8], r8
0x1b01:	mov	dword ptr [rsp], ecx
0x1b04:	call	0x1550


0x1b18:	lea	rdx, [rip + 0x5fa5]
0x1b1f:	lea	rsi, [rip + 0x5fae]
0x1b26:	mov	rdi, r12
0x1b29:	xor	eax, eax
0x1b2b:	call	0x5290


0x19d8:	lea	rdx, [r9 + 1]
0x19dc:	mov	esi, 1
0x19e1:	jmp	0x19f7


0x1a7e:	cmp	byte ptr [r9], 0x4c
0x1a82:	jne	0x1a17


0x1a17:	lea	rdi, [rip + 0x60b4]
0x1a1e:	mov	ecx, 2
0x1a23:	mov	rsi, r9
0x1a26:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1e58:	xor	edi, edi
0x1e5a:	call	0x20c0


0x1aa5:	mov	edi, 0x7d
0x1aaa:	call	0x20c0


0x1550:	jmp	qword ptr [rip + 0x2098d2]


0x19f7:	mov	qword ptr [rip + 0x20969a], rdx
0x19fe:	movsx	ecx, byte ptr [rdx]
0x1a01:	mov	r9, rdx
0x1a04:	cmp	ecx, 0x20
0x1a07:	jbe	0x19e8


0x1a84:	lea	rsi, [rip + 0x66fd]
0x1a8b:	mov	edx, 5
0x1a90:	xor	edi, edi
0x1a92:	call	0x1620


0x1a26:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1a28:	seta	al
0x1a2b:	sbb	al, 0
0x1a2d:	test	al, al
0x1a2f:	je	0x192f




0x19e8:	mov	rdi, rsi
0x19eb:	add	rdx, 1
0x19ef:	shl	rdi, cl
0x19f2:	test	rdi, r15
0x19f5:	je	0x1a09


0x192f:	lea	rcx, [rip + 0x2091aa]
0x1936:	lea	rdx, [rip + 0x616f]
0x193d:	xor	r8d, r8d
0x1940:	mov	rsi, rbx
0x1943:	mov	edi, ebp
0x1945:	call	0x1660


0x1a35:	lea	r8, [rip + 0x6047]
0x1a3c:	lea	rcx, [rsp + 0x28]
0x1a41:	mov	edx, 0xa
0x1a46:	xor	esi, esi
0x1a48:	mov	rdi, r9
0x1a4b:	call	0x4e70


0x1a50:	mov	dword ptr [rsp], eax
0x1a53:	call	0x15a0


0x1a58:	mov	edx, dword ptr [rsp]
0x1a5b:	mov	r8, rax
0x1a5e:	test	edx, edx
0x1a60:	jne	0x1e83


0x1a66:	imul	r14, r14, 0x18
0x1a6a:	mov	dword ptr [rax], 0
0x1a70:	mov	rax, qword ptr [rsp + 0x28]
0x1a75:	mov	qword ptr [r12 + r14], rax
0x1a79:	jmp	0x1928


0x1e83:	sub	edx, 1
0x1e86:	je	0x1ecc


0x1ecc:	mov	eax, 0x4b
0x1ed1:	jmp	0x1e8a


0x1e88:	mov	eax, dword ptr [rax]
0x1e8a:	mov	rdi, qword ptr [rip + 0x209207]
0x1e91:	mov	dword ptr [r8], eax
0x1e94:	mov	qword ptr [rsp], r8
0x1e98:	call	0x4570


0x1e8a:	mov	rdi, qword ptr [rip + 0x209207]
0x1e91:	mov	dword ptr [r8], eax
0x1e94:	mov	qword ptr [rsp], r8
0x1e98:	call	0x4570


0x1b30:	test	eax, eax
0x1b32:	js	0x1f9c


0x1f9c:	call	0x4e00


0x1b38:	mov	rdi, qword ptr [rsp + 0x18]
0x1b3d:	call	0x1710


0x1710:	jmp	qword ptr [rip + 0x2097f2]




0x1d57:	jmp	0x1b30


0x1992:	xor	edi, edi
0x1994:	call	0x1830


0x1a97:	xor	esi, esi
0x1a99:	mov	rdx, rax
0x1a9c:	xor	edi, edi
0x1a9e:	xor	eax, eax
0x1aa0:	call	0x17d0


0x1b78:	test	rax, rax
0x1b7b:	je	0x1d5c


0x1d5c:	lea	rdi, [rip + 0x5d7a]
0x1d63:	call	0x4e40


0x1b81:	mov	rdi, rbx
0x1b84:	call	0x25b0


0x1b89:	mov	qword ptr [rip + 0x209598], rax
0x1b90:	cmp	qword ptr [rip + 0x209590], 0
0x1b98:	je	0x1da9


0x1da9:	lea	rdi, [rip + 0x5d41]
0x1db0:	call	0x4de0


0x1b9e:	lea	rdi, [rip + 0x5f65]
0x1ba5:	lea	rbx, [rsp + 0x30]
0x1baa:	lea	r14, [rsp + 0x28]
0x1baf:	lea	r13, [rip + 0x5f7c]
0x1bb6:	lea	r12, [rip + 0x5f82]
0x1bbd:	lea	rbp, [rsp + 0x50]
0x1bc2:	call	0x1560


0x1560:	jmp	qword ptr [rip + 0x2098ca]




0x1db5:	mov	qword ptr [rip + 0x20936c], rax
0x1dbc:	jmp	0x1b9e


0x4fb8:	test	rax, rax
0x4fbb:	mov	rcx, qword ptr [rsp + 8]
0x4fc0:	je	0x508c


0x508c:	mov	qword ptr [r14], rbx
0x508f:	or	ebp, 2
0x5092:	jmp	0x4f4d


0x4fc6:	lea	eax, [r12 - 0x45]
0x4fcb:	cmp	al, 0x2f
0x4fcd:	ja	0x5020


0x4fcf:	movabs	rdx, 0x814400308945
0x4fd9:	bt	rdx, rax
0x4fdd:	jae	0x5020


0x5020:	mov	edi, 1
0x5025:	mov	esi, 0x400
0x502a:	sub	r12d, 0x42
0x502e:	cmp	r12b, 0x35
0x5032:	ja	0x508c


0x4fdf:	mov	esi, 0x30
0x4fe4:	mov	rdi, r13
0x4fe7:	mov	qword ptr [rsp + 8], rcx
0x4fec:	call	0x1680


0x5034:	lea	rdx, [rip + 0x3b0d]
0x503b:	movzx	r12d, r12b
0x503f:	movsxd	rax, dword ptr [rdx + r12*4]
0x5043:	add	rax, rdx
0x5046:	jmp	rax


0x4ff1:	test	rax, rax
0x4ff4:	mov	rcx, qword ptr [rsp + 8]
0x4ff9:	je	0x5020


0x4ffb:	movzx	eax, byte ptr [rcx + 1]
0x4fff:	cmp	al, 0x44
0x5001:	je	0x500f


0x500f:	mov	edi, 2
0x5014:	mov	esi, 0x3e8
0x5019:	jmp	0x502a


0x5003:	cmp	al, 0x69
0x5005:	je	0x51d8


0x502a:	sub	r12d, 0x42
0x502e:	cmp	r12b, 0x35
0x5032:	ja	0x508c


0x51d8:	xor	edi, edi
0x51da:	cmp	byte ptr [rcx + 2], 0x42
0x51de:	mov	esi, 0x400
0x51e3:	sete	dil
0x51e7:	lea	edi, [rdi + rdi + 1]
0x51eb:	jmp	0x502a


0x500b:	cmp	al, 0x42
0x500d:	jne	0x5020


0x4f98:	test	rax, rax
0x4f9b:	mov	ebx, 1
0x4fa0:	mov	rcx, qword ptr [rsp + 8]
0x4fa5:	je	0x4f48


0x1bc7:	mov	qword ptr [rsp], rax
0x1bcb:	mov	rax, qword ptr [rip + 0x209556]
0x1bd2:	mov	qword ptr [rsp + 0x40], 0
0x1bdb:	mov	qword ptr [rsp + 0x30], rax
0x1be0:	lea	rax, [rip + 0x5f2e]
0x1be7:	mov	qword ptr [rsp + 0x38], rax
0x1bec:	jmp	0x1c34


0x1c34:	mov	rdx, qword ptr [rbx]
0x1c37:	cmp	byte ptr [rdx], 0
0x1c3a:	jne	0x1bee


0x1c3c:	lea	rdi, [rip + 0x5eef]
0x1c43:	call	0x4de0


0x1bee:	xor	eax, eax
0x1bf0:	mov	rcx, r13
0x1bf3:	mov	rsi, r12
0x1bf6:	mov	rdi, r14
0x1bf9:	call	0x5290


0x1bfe:	test	eax, eax
0x1c00:	js	0x1f9c


0x1c06:	mov	rsi, qword ptr [rsp + 0x28]
0x1c0b:	mov	rdx, rbp
0x1c0e:	mov	edi, 1
0x1c13:	call	0x1740


0x1740:	jmp	qword ptr [rip + 0x2097da]




0x1c48:	mov	qword ptr [rsp + 0x28], rax
0x1c4d:	mov	rcx, qword ptr [rsp]
0x1c51:	mov	r8, qword ptr [rsp + 0x28]
0x1c56:	lea	rdi, [rsp + 0x20]
0x1c5b:	test	rcx, rcx
0x1c5e:	je	0x1d8c


0x1d8c:	lea	rdx, [rip + 0x5d77]
0x1d93:	lea	rsi, [rip + 0x5dc6]
0x1d9a:	mov	rcx, r8
0x1d9d:	xor	eax, eax
0x1d9f:	call	0x5290


0x1c64:	lea	rdx, [rip + 0x5e9f]
0x1c6b:	lea	rsi, [rip + 0x5ee5]
0x1c72:	xor	eax, eax
0x1c74:	call	0x5290


0x1c79:	test	eax, eax
0x1c7b:	js	0x1f9c


0x1c81:	mov	rdi, qword ptr [rsp + 0x28]
0x1c86:	call	0x1580


0x1c8b:	mov	rdi, qword ptr [rsp + 0x20]
0x1c90:	call	0x1710


0x1da4:	jmp	0x1c79


0x1c95:	mov	ebx, eax
0x1c97:	call	0x15a0


0x1c9c:	test	ebx, ebx
0x1c9e:	mov	rbp, rax
0x1ca1:	jne	0x1ee4


0x1ca7:	mov	rdi, qword ptr [rip + 0x20947a]
0x1cae:	xor	ebx, ebx
0x1cb0:	call	0x1580


0x1ee4:	mov	rdi, qword ptr [rsp + 0x20]
0x1ee9:	call	0x4570


0x1cb5:	mov	rdi, qword ptr [r15]
0x1cb8:	mov	rsi, r15
0x1cbb:	call	0x1810


0x1810:	jmp	qword ptr [rip + 0x209772]




0x1b42:	test	eax, eax
0x1b44:	jne	0x1f60


0x1b4a:	mov	edx, 1
0x1b4f:	add	rbx, 0x18
0x1b53:	cmp	rbp, rbx
0x1b56:	jne	0x1ad6


0x1f60:	mov	rdi, qword ptr [rsp + 0x18]
0x1f65:	call	0x4570


0x1b09:	movsxd	rcx, dword ptr [rsp]
0x1b0d:	mov	rax, qword ptr [rax]
0x1b10:	mov	r8, qword ptr [rsp + 8]
0x1b15:	mov	ecx, dword ptr [rax + rcx*4]
0x1b18:	lea	rdx, [rip + 0x5fa5]
0x1b1f:	lea	rsi, [rip + 0x5fae]
0x1b26:	mov	rdi, r12
0x1b29:	xor	eax, eax
0x1b2b:	call	0x5290


0x1d35:	movsxd	rcx, dword ptr [rsp]
0x1d39:	mov	rax, qword ptr [rax]
0x1d3c:	mov	ecx, dword ptr [rax + rcx*4]
0x1d3f:	lea	rdx, [rip + 0x5d7e]
0x1d46:	lea	rsi, [rip + 0x5d80]
0x1d4d:	mov	rdi, r12
0x1d50:	xor	eax, eax
0x1d52:	call	0x5290


0x1cc0:	cmp	dword ptr [rbp], 2
0x1cc4:	mov	rdi, qword ptr [r15]
0x1cc7:	sete	bl
0x1cca:	call	0x4570


0x1c18:	test	eax, eax
0x1c1a:	je	0x1c4d


0x1c4d:	mov	rcx, qword ptr [rsp]
0x1c51:	mov	r8, qword ptr [rsp + 0x28]
0x1c56:	lea	rdi, [rsp + 0x20]
0x1c5b:	test	rcx, rcx
0x1c5e:	je	0x1d8c


0x1c1c:	mov	rdi, qword ptr [rsp + 0x28]
0x1c21:	add	rbx, 8
0x1c25:	call	0x1580


0x1c2a:	cmp	qword ptr [rbx], 0
0x1c2e:	je	0x1f2a


0x1f2a:	lea	rdi, [rip + 0x5c01]
0x1f31:	call	0x4570


0x1d68:	test	rax, rax
0x1d6b:	mov	rbp, rax
0x1d6e:	je	0x1dc1


0x1dc1:	lea	rdi, [rip + 0x5d24]
0x1dc8:	call	0x1560


0x1d70:	mov	rdi, rax
0x1d73:	call	0x25b0


0x1d78:	mov	qword ptr [rip + 0x2093a9], rax
0x1d7f:	mov	rdi, rbp
0x1d82:	call	0x1580


0x1d87:	jmp	0x1b90


0x1b90:	cmp	qword ptr [rip + 0x209590], 0
0x1b98:	je	0x1da9


0x1dcd:	test	rax, rax
0x1dd0:	mov	rbp, rax
0x1dd3:	je	0x1d7f


0x1d7f:	mov	rdi, rbp
0x1d82:	call	0x1580


0x1dd5:	mov	rdi, rax
0x1dd8:	lea	r13, [rip + 0x5cd3]
0x1ddf:	call	0x4de0


0x1de4:	lea	rsi, [rip + 0x5cc7]
0x1deb:	mov	rdi, rax
0x1dee:	mov	rbp, rax
0x1df1:	call	0x1800


0x1800:	jmp	qword ptr [rip + 0x20977a]




0x1df6:	jmp	0x1e07


0x1e07:	test	rax, rax
0x1e0a:	je	0x1d7f


0x1e10:	xor	edx, edx
0x1e12:	mov	rsi, rbx
0x1e15:	mov	rdi, rax
0x1e18:	call	0x2740


0x1e1d:	mov	esi, 1
0x1e22:	mov	rdi, rax
0x1e25:	mov	r12, rax
0x1e28:	call	0x17e0


0x17e0:	jmp	qword ptr [rip + 0x20978a]




0x1e2d:	test	eax, eax
0x1e2f:	mov	rdi, r12
0x1e32:	jne	0x1df8


0x1e34:	call	0x25b0


0x1df8:	call	0x1580


0x1dfd:	mov	rsi, r13
0x1e00:	xor	edi, edi
0x1e02:	call	0x1800


0x1e39:	mov	rdi, r12
0x1e3c:	mov	qword ptr [rip + 0x2092e5], rax
0x1e43:	call	0x1580


0x1e48:	jmp	0x1d7f


0x1f36:	lea	rsi, [rip + 0x5c08]
0x1f3d:	mov	rbx, rax
0x1f40:	mov	edx, 5
0x1f45:	xor	edi, edi
0x1f47:	call	0x1620


0x1f4c:	mov	rcx, rbx
0x1f4f:	mov	rdx, rax
0x1f52:	xor	esi, esi
0x1f54:	mov	edi, 0x7d
0x1f59:	xor	eax, eax
0x1f5b:	call	0x17d0


0x1ccf:	lea	rsi, [rip + 0x5e90]
0x1cd6:	xor	edi, edi
0x1cd8:	mov	edx, 5
0x1cdd:	mov	r12, rax
0x1ce0:	add	ebx, 0x7e
0x1ce3:	call	0x1620


0x1ce8:	mov	esi, dword ptr [rbp]
0x1ceb:	mov	rdx, rax
0x1cee:	xor	edi, edi
0x1cf0:	xor	eax, eax
0x1cf2:	mov	rcx, r12
0x1cf5:	call	0x17d0


0x1cfa:	mov	eax, ebx
0x1cfc:	mov	rbx, qword ptr [rsp + 0xe8]
0x1d04:	xor	rbx, qword ptr fs:[0x28]
0x1d0d:	jne	0x1e5f


0x1d13:	add	rsp, 0xf8
0x1d1a:	pop	rbx
0x1d1b:	pop	rbp
0x1d1c:	pop	r12
0x1d1e:	pop	r13
0x1d20:	pop	r14
0x1d22:	pop	r15
0x1d24:	ret	


0x1e5f:	call	0x1650


0x1f6a:	lea	rsi, [rip + 0x623f]
0x1f71:	mov	edx, 5
0x1f76:	xor	edi, edi
0x1f78:	mov	rbp, rax
0x1f7b:	call	0x1620


0x1f80:	mov	rbx, rax
0x1f83:	call	0x15a0


0x1f88:	mov	esi, dword ptr [rax]
0x1f8a:	mov	rcx, rbp
0x1f8d:	mov	rdx, rbx
0x1f90:	mov	edi, 0x7d
0x1f95:	xor	eax, eax
0x1f97:	call	0x17d0


0x1eee:	lea	rsi, [rip + 0x62bb]
0x1ef5:	mov	edx, 5
0x1efa:	xor	edi, edi
0x1efc:	mov	rbx, rax
0x1eff:	call	0x1620


0x1f04:	mov	esi, dword ptr [rbp]
0x1f07:	mov	rdx, rax
0x1f0a:	mov	rcx, rbx
0x1f0d:	mov	edi, 0x7d
0x1f12:	xor	eax, eax
0x1f14:	call	0x17d0


0x1e9d:	lea	rsi, [rip + 0x5bea]
0x1ea4:	mov	edx, 5
0x1ea9:	xor	edi, edi
0x1eab:	mov	rbx, rax
0x1eae:	call	0x1620


0x1eb3:	mov	r8, qword ptr [rsp]
0x1eb7:	mov	rdx, rax
0x1eba:	mov	rcx, rbx
0x1ebd:	mov	edi, 0x7d
0x1ec2:	xor	eax, eax
0x1ec4:	mov	esi, dword ptr [r8]
0x1ec7:	call	0x17d0


0x256a:	mov	esi, dword ptr [rbx]
0x256c:	lea	rdx, [rip + 0x5cef]
0x2573:	mov	rcx, rax
0x2576:	mov	r8, rbp
0x2579:	xor	edi, edi
0x257b:	xor	eax, eax
0x257d:	call	0x17d0


0x3d1c:	add	rsp, 0x20
0x3d20:	mov	r11, qword ptr [rsp + 0x10]
0x3d25:	cmp	r11, rax
0x3d28:	ja	0x3d91


0x3d2a:	lea	rsi, [rax + 1]
0x3d2e:	lea	rax, [rip + 0x20742b]
0x3d35:	cmp	r12, rax
0x3d38:	mov	qword ptr [rbx], rsi
0x3d3b:	je	0x3d4f


0x3d91:	mov	eax, dword ptr [rsp + 0x18]
0x3d95:	mov	dword ptr [r13], eax
0x3d99:	add	rsp, 0x28
0x3d9d:	mov	rax, r12
0x3da0:	pop	rbx
0x3da1:	pop	rbp
0x3da2:	pop	r12
0x3da4:	pop	r13
0x3da6:	pop	r14
0x3da8:	pop	r15
0x3daa:	ret	


0x3d4f:	mov	rdi, rsi
0x3d52:	mov	qword ptr [rsp + 0x10], rsi
0x3d57:	call	0x4bb0


0x3d3d:	mov	rdi, r12
0x3d40:	mov	qword ptr [rsp + 0x10], rsi
0x3d45:	call	0x1580


0x3d4a:	mov	rsi, qword ptr [rsp + 0x10]
0x3d4f:	mov	rdi, rsi
0x3d52:	mov	qword ptr [rsp + 0x10], rsi
0x3d57:	call	0x4bb0


0x3d5c:	sub	rsp, 8
0x3d60:	mov	qword ptr [rbx + 8], rax
0x3d64:	mov	r8d, dword ptr [rbp]
0x3d68:	push	qword ptr [rbp + 0x30]
0x3d6b:	push	qword ptr [rbp + 0x28]
0x3d6e:	mov	rcx, r14
0x3d71:	push	r15
0x3d73:	mov	r9d, dword ptr [rsp + 0x3c]
0x3d78:	mov	rdi, rax
0x3d7b:	mov	rdx, qword ptr [rsp + 0x28]
0x3d80:	mov	rsi, qword ptr [rsp + 0x30]
0x3d85:	mov	r12, rax
0x3d88:	call	0x29f0


0x44a2:	mov	rdi, qword ptr [rsp + 0x38]
0x44a7:	xor	rdi, qword ptr fs:[0x28]
0x44b0:	jne	0x44bc


0x44b2:	add	rsp, 0x48
0x44b6:	ret	


0x44bc:	call	0x1650


0x41ef:	mov	rcx, qword ptr [rsp + 0x38]
0x41f4:	xor	rcx, qword ptr fs:[0x28]
0x41fd:	jne	0x4209


0x41ff:	add	rsp, 0x48
0x4203:	ret	


0x4209:	call	0x1650


0x427b:	mov	rdx, qword ptr [rsp + 0x38]
0x4280:	xor	rdx, qword ptr fs:[0x28]
0x4289:	jne	0x4295


0x428b:	add	rsp, 0x48
0x428f:	ret	


0x4295:	call	0x1650


0x440f:	mov	rcx, qword ptr [rsp + 0x38]
0x4414:	xor	rcx, qword ptr fs:[0x28]
0x441d:	jne	0x4429


0x441f:	add	rsp, 0x48
0x4423:	ret	


0x4429:	call	0x1650


0x433e:	mov	rsi, qword ptr [rsp + 0x38]
0x4343:	xor	rsi, qword ptr fs:[0x28]
0x434c:	jne	0x4353


0x434e:	add	rsp, 0x48
0x4352:	ret	


0x4353:	call	0x1650


0x3d8d:	add	rsp, 0x20
0x3d91:	mov	eax, dword ptr [rsp + 0x18]
0x3d95:	mov	dword ptr [r13], eax
0x3d99:	add	rsp, 0x28
0x3d9d:	mov	rax, r12
0x3da0:	pop	rbx
0x3da1:	pop	rbp
0x3da2:	pop	r12
0x3da4:	pop	r13
0x3da6:	pop	r14
0x3da8:	pop	r15
0x3daa:	ret	


0x3fdc:	lea	rsi, [rax + 1]
0x3fe0:	mov	qword ptr [rsp + 0x48], rax
0x3fe5:	add	rsp, 0x20
0x3fe9:	mov	rdi, rsi
0x3fec:	mov	qword ptr [rsp + 0x18], rsi
0x3ff1:	call	0x4bb0


0x3ff6:	mov	qword ptr [rsp + 0x10], rax
0x3ffb:	sub	rsp, 8
0x3fff:	push	qword ptr [rbx + 0x30]
0x4002:	push	qword ptr [rbx + 0x28]
0x4005:	mov	r10, qword ptr [rsp + 0x38]
0x400a:	mov	r9d, ebp
0x400d:	mov	r8d, dword ptr [rbx]
0x4010:	mov	rcx, r15
0x4013:	mov	rdx, r14
0x4016:	mov	rdi, rax
0x4019:	push	r10
0x401b:	mov	rsi, qword ptr [rsp + 0x38]
0x4020:	call	0x29f0


0x4025:	mov	eax, dword ptr [rsp + 0x2c]
0x4029:	add	rsp, 0x20
0x402d:	test	r12, r12
0x4030:	mov	dword ptr [r13], eax
0x4034:	je	0x403f


0x403f:	mov	rax, qword ptr [rsp + 0x10]
0x4044:	add	rsp, 0x38
0x4048:	pop	rbx
0x4049:	pop	rbp
0x404a:	pop	r12
0x404c:	pop	r13
0x404e:	pop	r14
0x4050:	pop	r15
0x4052:	ret	


0x4036:	mov	r11, qword ptr [rsp + 0x28]
0x403b:	mov	qword ptr [r12], r11
0x403f:	mov	rax, qword ptr [rsp + 0x10]
0x4044:	add	rsp, 0x38
0x4048:	pop	rbx
0x4049:	pop	rbp
0x404a:	pop	r12
0x404c:	pop	r13
0x404e:	pop	r14
0x4050:	pop	r15
0x4052:	ret	


0x3f51:	mov	dword ptr [rbp], r12d
0x3f55:	add	rsp, 0x38
0x3f59:	pop	rbx
0x3f5a:	pop	rbp
0x3f5b:	pop	r12
0x3f5d:	pop	r13
0x3f5f:	pop	r14
0x3f61:	pop	r15
0x3f63:	ret	


0x794d:	add	rbx, 1
0x7951:	cmp	rbp, rbx
0x7954:	jne	0x7940


0x7940:	mov	rdx, r15
0x7943:	mov	rsi, r14
0x7946:	mov	edi, r13d
0x7949:	call	qword ptr [r12 + rbx*8]


0x5521:	test	rax, rax
0x5524:	mov	rcx, rax
0x5527:	js	0x55c0


0x55c0:	mov	qword ptr [rsp + 8], rax
0x55c5:	call	0x15a0


0x552d:	cmp	rbx, rcx
0x5530:	ja	0x5610


0x5536:	cmp	r12, r14
0x5539:	je	0x5541


0x5610:	lea	r15, [rsp + 0x10]
0x5615:	lea	r13, [rcx + 1]
0x5619:	mov	byte ptr [r14 + rcx], 0
0x561e:	cmp	r14, r15
0x5621:	jne	0x5660


0x5541:	movabs	rax, 0x4000000000000000
0x554b:	cmp	rbx, rax
0x554e:	jbe	0x5500


0x553b:	mov	rdi, r14
0x553e:	call	qword ptr [rbp + 0x10]


0x5623:	mov	rdi, r13
0x5626:	call	qword ptr [rbp]


0x5660:	cmp	rbx, r13
0x5663:	jbe	0x558d


0x5500:	add	rbx, rbx
0x5503:	mov	rdi, rbx
0x5506:	call	qword ptr [rbp]


0x5550:	test	rbx, rbx
0x5553:	js	0x5648


0x558d:	mov	rsi, qword ptr [rsp + 0x418]
0x5595:	xor	rsi, qword ptr fs:[0x28]
0x559e:	mov	rax, r14
0x55a1:	jne	0x56a3


0x5669:	cmp	r12, r14
0x566c:	je	0x558d


0x5648:	call	0x15a0


0x5559:	movabs	rbx, 0x8000000000000000
0x5563:	mov	rdi, rbx
0x5566:	call	qword ptr [rbp]


0x55a7:	add	rsp, 0x428
0x55ae:	pop	rbx
0x55af:	pop	rbp
0x55b0:	pop	r12
0x55b2:	pop	r13
0x55b4:	pop	r14
0x55b6:	pop	r15
0x55b8:	ret	


0x56a3:	call	0x1650


0x5672:	mov	rax, qword ptr [rbp + 8]
0x5676:	test	rax, rax
0x5679:	je	0x558d


0x567f:	mov	rdi, r14
0x5682:	mov	rsi, r13
0x5685:	call	rax


0x564d:	xor	r14d, r14d
0x5650:	mov	dword ptr [rax], 0x24
0x5656:	jmp	0x558d


0x55ca:	mov	edx, dword ptr [rax]
0x55cc:	mov	rcx, qword ptr [rsp + 8]
0x55d1:	cmp	edx, 0x22
0x55d4:	je	0x552d


0x55da:	cmp	r12, r14
0x55dd:	mov	dword ptr [rsp + 8], edx
0x55e1:	mov	qword ptr [rsp], rax
0x55e5:	je	0x569b


0x569b:	xor	r14d, r14d
0x569e:	jmp	0x558d


0x55eb:	mov	rdi, r14
0x55ee:	xor	r14d, r14d
0x55f1:	call	qword ptr [rbp + 0x10]


0x55f4:	mov	rax, qword ptr [rsp]
0x55f8:	mov	edx, dword ptr [rsp + 8]
0x55fc:	mov	dword ptr [rax], edx
0x55fe:	jmp	0x558d


0x5687:	test	rax, rax
0x568a:	cmovne	r14, rax
0x568e:	jmp	0x558d


0x5569:	test	rax, rax
0x556c:	mov	r14, rax
0x556f:	jne	0x5511


0x5571:	mov	rax, qword ptr [rbp + 0x18]
0x5575:	test	rax, rax
0x5578:	je	0x557f


0x557f:	call	0x15a0


0x557a:	mov	rdi, rbx
0x557d:	call	rax


0x5584:	xor	r14d, r14d
0x5587:	mov	dword ptr [rax], 0xc
0x558d:	mov	rsi, qword ptr [rsp + 0x418]
0x5595:	xor	rsi, qword ptr fs:[0x28]
0x559e:	mov	rax, r14
0x55a1:	jne	0x56a3


0x5509:	test	rax, rax
0x550c:	mov	r14, rax
0x550f:	je	0x5571


0x5629:	test	rax, rax
0x562c:	mov	r14, rax
0x562f:	je	0x5693


0x5693:	mov	rbx, r13
0x5696:	jmp	0x5571


0x5631:	mov	rdx, r13
0x5634:	mov	rsi, r15
0x5637:	mov	rdi, rax
0x563a:	call	0x1720


0x563f:	jmp	0x558d


0x4e46:	test	rax, rax
0x4e49:	mov	rbx, rax
0x4e4c:	je	0x4e58


0x4e58:	call	0x15a0


0x4e4e:	mov	rax, rbx
0x4e51:	pop	rbx
0x4e52:	ret	


0x4e5d:	cmp	dword ptr [rax], 0xc
0x4e60:	jne	0x4e4e


0x4e62:	call	0x4e00






0x6660:	mov	byte ptr [rax], r14b
0x6663:	mov	rbx, r14
0x6666:	jmp	0x6384


0x6530:	mov	qword ptr [rax], r14
0x6533:	mov	rbx, r14
0x6536:	jmp	0x6384


0x6670:	mov	dword ptr [rax], r14d
0x6673:	mov	rbx, r14
0x6676:	jmp	0x6384


0x6680:	mov	word ptr [rax], r14w
0x6684:	mov	rbx, r14
0x6687:	jmp	0x6384


0x6280:	mov	rax, qword ptr [r13 + 0x50]
0x6284:	lea	rdi, [r15 + r14]
0x6288:	shl	rax, 5
0x628c:	add	rax, qword ptr [rbp - 0x3a8]
0x6293:	movzx	r9d, byte ptr [rax + 0x10]
0x6298:	mov	eax, dword ptr [rbp - 0x3e0]
0x629e:	cmp	eax, 1
0x62a1:	jne	0x5fae


0x6138:	mov	rax, qword ptr [r13 + 0x50]
0x613c:	lea	rdi, [r15 + r14]
0x6140:	shl	rax, 5
0x6144:	add	rax, qword ptr [rbp - 0x3a8]
0x614b:	movsd	xmm0, qword ptr [rax + 0x10]
0x6150:	mov	eax, dword ptr [rbp - 0x3e0]
0x6156:	cmp	eax, 1
0x6159:	je	0x66f0


0x61b8:	mov	rax, qword ptr [r13 + 0x50]
0x61bc:	lea	rdi, [r15 + r14]
0x61c0:	shl	rax, 5
0x61c4:	add	rax, qword ptr [rbp - 0x3a8]
0x61cb:	movzx	r9d, word ptr [rax + 0x10]
0x61d0:	mov	eax, dword ptr [rbp - 0x3e0]
0x61d6:	cmp	eax, 1
0x61d9:	jne	0x5fae


0x5f88:	mov	rax, qword ptr [r13 + 0x50]
0x5f8c:	lea	rdi, [r15 + r14]
0x5f90:	shl	rax, 5
0x5f94:	add	rax, qword ptr [rbp - 0x3a8]
0x5f9b:	mov	r9d, dword ptr [rax + 0x10]
0x5f9f:	mov	eax, dword ptr [rbp - 0x3e0]
0x5fa5:	cmp	eax, 1
0x5fa8:	je	0x61e0


0x62b0:	mov	rax, qword ptr [r13 + 0x50]
0x62b4:	lea	rdi, [r15 + r14]
0x62b8:	shl	rax, 5
0x62bc:	add	rax, qword ptr [rbp - 0x3a8]
0x62c3:	movsx	r9d, byte ptr [rax + 0x10]
0x62c8:	mov	eax, dword ptr [rbp - 0x3e0]
0x62ce:	cmp	eax, 1
0x62d1:	jne	0x5fae


0x5e50:	mov	rax, qword ptr [r13 + 0x50]
0x5e54:	lea	rdi, [r15 + r14]
0x5e58:	shl	rax, 5
0x5e5c:	add	rax, qword ptr [rbp - 0x3a8]
0x5e63:	mov	r9, qword ptr [rax + 0x10]
0x5e67:	mov	eax, dword ptr [rbp - 0x3e0]
0x5e6d:	cmp	eax, 1
0x5e70:	je	0x6338


0x60b0:	mov	rax, qword ptr [r13 + 0x50]
0x60b4:	lea	rdi, [r15 + r14]
0x60b8:	shl	rax, 5
0x60bc:	add	rax, qword ptr [rbp - 0x3a8]
0x60c3:	fld	xword ptr [rax + 0x10]
0x60c6:	mov	eax, dword ptr [rbp - 0x3e0]
0x60cc:	cmp	eax, 1
0x60cf:	je	0x6700


0x61f8:	mov	rax, qword ptr [r13 + 0x50]
0x61fc:	lea	rdi, [r15 + r14]
0x6200:	shl	rax, 5
0x6204:	add	rax, qword ptr [rbp - 0x3a8]
0x620b:	movsx	r9d, word ptr [rax + 0x10]
0x6210:	mov	eax, dword ptr [rbp - 0x3e0]
0x6216:	cmp	eax, 1
0x6219:	je	0x61e0


0x6b42:	mov	r11d, dword ptr [rdi + 4]
0x6b46:	cmp	r11d, 0xaf
0x6b4d:	ja	0x6bfd


0x6a86:	mov	r11d, dword ptr [rdi]
0x6a89:	cmp	r11d, 0x2f
0x6a8d:	ja	0x6bca


0x6aaa:	mov	r11d, dword ptr [rdi]
0x6aad:	cmp	r11d, 0x2f
0x6ab1:	ja	0x6bec


0x6acc:	mov	r11d, dword ptr [rdi]
0x6acf:	cmp	r11d, 0x2f
0x6ad3:	ja	0x6bdb


0x6aee:	mov	r11d, dword ptr [rdi]
0x6af1:	cmp	r11d, 0x2f
0x6af5:	ja	0x6b9a


0x6a50:	mov	rdx, qword ptr [rdi + 8]
0x6a54:	add	rdx, 0xf
0x6a58:	and	rdx, 0xfffffffffffffff0
0x6a5c:	lea	r11, [rdx + 0x10]
0x6a60:	mov	qword ptr [rdi + 8], r11
0x6a64:	fld	xword ptr [rdx]
0x6a66:	fstp	xword ptr [rax + 0x10]
0x6a69:	nop	dword ptr [rax]
0x6a70:	add	rcx, 1
0x6a74:	add	rax, 0x20
0x6a78:	cmp	qword ptr [rsi], rcx
0x6a7b:	ja	0x6a38


0x6b70:	mov	r11d, dword ptr [rdi]
0x6b73:	cmp	r11d, 0x2f
0x6b77:	ja	0x6bbc


0x6b14:	mov	r11d, dword ptr [rdi]
0x6b17:	cmp	r11d, 0x2f
0x6b1b:	ja	0x6bab


0x4820:	lea	rsi, [rip + 0x40d1]
0x4827:	mov	edx, 5
0x482c:	xor	edi, edi
0x482e:	mov	r14, qword ptr [rbx + 0x18]
0x4832:	mov	r13, qword ptr [rbx + 0x10]
0x4836:	mov	r12, qword ptr [rbx + 8]
0x483a:	mov	rbx, qword ptr [rbx]
0x483d:	call	0x1620


0x4640:	mov	r9, qword ptr [rbx + 0x38]
0x4644:	mov	rax, qword ptr [rbx + 0x10]
0x4648:	lea	rsi, [rip + 0x4349]
0x464f:	mov	r8, qword ptr [rbx + 8]
0x4653:	mov	edx, 5
0x4658:	xor	edi, edi
0x465a:	mov	r13, qword ptr [rbx + 0x30]
0x465e:	mov	r12, qword ptr [rbx + 0x28]
0x4662:	mov	qword ptr [rsp + 0x10], r9
0x4667:	mov	r15, qword ptr [rbx + 0x20]
0x466b:	mov	r14, qword ptr [rbx + 0x18]
0x466f:	mov	qword ptr [rsp], rax
0x4673:	mov	qword ptr [rsp + 8], r8
0x4678:	mov	rbx, qword ptr [rbx]
0x467b:	call	0x1620


0x4748:	mov	rbx, qword ptr [rbx]
0x474b:	lea	rsi, [rip + 0x404d]
0x4752:	mov	edx, 5
0x4757:	xor	edi, edi
0x4759:	call	0x1620


0x4788:	mov	r12, qword ptr [rbx + 8]
0x478c:	lea	rsi, [rip + 0x401c]
0x4793:	mov	rbx, qword ptr [rbx]
0x4796:	mov	edx, 5
0x479b:	xor	edi, edi
0x479d:	call	0x1620


0x48a8:	mov	r8, qword ptr [rbx + 8]
0x48ac:	mov	r12, qword ptr [rbx + 0x28]
0x48b0:	lea	rsi, [rip + 0x4089]
0x48b7:	mov	r15, qword ptr [rbx + 0x20]
0x48bb:	mov	r14, qword ptr [rbx + 0x18]
0x48bf:	mov	edx, 5
0x48c4:	mov	r13, qword ptr [rbx + 0x10]
0x48c8:	xor	edi, edi
0x48ca:	mov	rbx, qword ptr [rbx]
0x48cd:	mov	qword ptr [rsp], r8
0x48d1:	call	0x1620


0x47d0:	mov	r13, qword ptr [rbx + 0x10]
0x47d4:	mov	r12, qword ptr [rbx + 8]
0x47d8:	lea	rsi, [rip + 0x3fe7]
0x47df:	mov	rbx, qword ptr [rbx]
0x47e2:	mov	edx, 5
0x47e7:	xor	edi, edi
0x47e9:	call	0x1620


0x4910:	mov	r9, qword ptr [rbx + 0x10]
0x4914:	mov	r13, qword ptr [rbx + 0x30]
0x4918:	lea	rsi, [rip + 0x4049]
0x491f:	mov	r12, qword ptr [rbx + 0x28]
0x4923:	mov	r15, qword ptr [rbx + 0x20]
0x4927:	mov	edx, 5
0x492c:	mov	r14, qword ptr [rbx + 0x18]
0x4930:	mov	r8, qword ptr [rbx + 8]
0x4934:	xor	edi, edi
0x4936:	mov	qword ptr [rsp + 8], r9
0x493b:	mov	rbx, qword ptr [rbx]
0x493e:	mov	qword ptr [rsp], r8
0x4942:	call	0x1620


0x46f0:	mov	r10, qword ptr [rbx + 0x40]
0x46f4:	mov	r9, qword ptr [rbx + 0x38]
0x46f8:	lea	rsi, [rip + 0x42c9]
0x46ff:	mov	rax, qword ptr [rbx + 0x10]
0x4703:	mov	r8, qword ptr [rbx + 8]
0x4707:	mov	edx, 5
0x470c:	mov	r13, qword ptr [rbx + 0x30]
0x4710:	mov	r12, qword ptr [rbx + 0x28]
0x4714:	mov	r15, qword ptr [rbx + 0x20]
0x4718:	mov	r14, qword ptr [rbx + 0x18]
0x471c:	mov	rbx, qword ptr [rbx]
0x471f:	mov	qword ptr [rsp + 0x18], r10
0x4724:	mov	qword ptr [rsp + 0x10], r9
0x4729:	mov	qword ptr [rsp], rax
0x472d:	mov	qword ptr [rsp + 8], r8
0x4732:	xor	edi, edi
0x4734:	call	0x1620


0x46b6:	add	rsp, 0x28
0x46ba:	pop	rbx
0x46bb:	pop	rbp
0x46bc:	pop	r12
0x46be:	pop	r13
0x46c0:	pop	r14
0x46c2:	pop	r15
0x46c4:	ret	


0x4878:	mov	r15, qword ptr [rbx + 0x20]
0x487c:	lea	rsi, [rip + 0x4095]
0x4883:	mov	edx, 5
0x4888:	xor	edi, edi
0x488a:	mov	r14, qword ptr [rbx + 0x18]
0x488e:	mov	r13, qword ptr [rbx + 0x10]
0x4892:	mov	r12, qword ptr [rbx + 8]
0x4896:	mov	rbx, qword ptr [rbx]
0x4899:	call	0x1620


0x6384:	mov	r8, qword ptr [r13 + 8]
0x6388:	add	r13, 0x58
0x638c:	mov	rcx, qword ptr [r13]
0x6390:	add	qword ptr [rbp - 0x400], 1
0x6398:	cmp	rcx, r8
0x639b:	jne	0x5a39


0x62a7:	jmp	0x61e0


0x5fae:	cmp	eax, 2
0x5fb1:	je	0x6228


0x66f0:	sub	rsp, 8
0x66f4:	push	qword ptr [rbp - 0x3f0]
0x66fa:	jmp	0x6175


0x615f:	cmp	eax, 2
0x6162:	jne	0x6560


0x61e0:	push	qword ptr [rbp - 0x3f0]
0x61e6:	push	r9
0x61e8:	mov	r9d, dword ptr [rbp - 0x3b8]
0x61ef:	jmp	0x5fc1


0x62d7:	jmp	0x61e0


0x6338:	push	qword ptr [rbp - 0x3f0]
0x633e:	push	r9
0x6340:	jmp	0x61e8


0x5e76:	cmp	eax, 2
0x5e79:	je	0x6320


0x6700:	sub	rsp, 8
0x6704:	push	qword ptr [rbp - 0x3f0]
0x670a:	sub	rsp, 0x10
0x670e:	fstp	xword ptr [rsp]
0x6711:	jmp	0x623b


0x60d5:	cmp	eax, 2
0x60d8:	jne	0x65a0


0x621b:	cmp	eax, 2
0x621e:	jne	0x5fb7


0x6b53:	mov	edx, r11d
0x6b56:	add	rdx, qword ptr [rdi + 0x10]
0x6b5a:	add	r11d, 0x10
0x6b5e:	mov	dword ptr [rdi + 4], r11d
0x6b62:	movsd	xmm0, qword ptr [rdx]
0x6b66:	movsd	qword ptr [rax + 0x10], xmm0
0x6b6b:	jmp	0x6a70


0x6bfd:	mov	rdx, qword ptr [rdi + 8]
0x6c01:	lea	r11, [rdx + 8]
0x6c05:	mov	qword ptr [rdi + 8], r11
0x6c09:	jmp	0x6b62


0x6a93:	mov	edx, r11d
0x6a96:	add	rdx, qword ptr [rdi + 0x10]
0x6a9a:	add	r11d, 8
0x6a9e:	mov	dword ptr [rdi], r11d
0x6aa1:	mov	rdx, qword ptr [rdx]
0x6aa4:	mov	qword ptr [rax + 0x10], rdx
0x6aa8:	jmp	0x6a70


0x6bca:	mov	rdx, qword ptr [rdi + 8]
0x6bce:	lea	r11, [rdx + 8]
0x6bd2:	mov	qword ptr [rdi + 8], r11
0x6bd6:	jmp	0x6aa1


0x6ab7:	mov	edx, r11d
0x6aba:	add	rdx, qword ptr [rdi + 0x10]
0x6abe:	add	r11d, 8
0x6ac2:	mov	dword ptr [rdi], r11d
0x6ac5:	mov	edx, dword ptr [rdx]
0x6ac7:	mov	dword ptr [rax + 0x10], edx
0x6aca:	jmp	0x6a70


0x6bec:	mov	rdx, qword ptr [rdi + 8]
0x6bf0:	lea	r11, [rdx + 8]
0x6bf4:	mov	qword ptr [rdi + 8], r11
0x6bf8:	jmp	0x6ac5


0x6ad9:	mov	edx, r11d
0x6adc:	add	rdx, qword ptr [rdi + 0x10]
0x6ae0:	add	r11d, 8
0x6ae4:	mov	dword ptr [rdi], r11d
0x6ae7:	mov	edx, dword ptr [rdx]
0x6ae9:	mov	byte ptr [rax + 0x10], dl
0x6aec:	jmp	0x6a70


0x6bdb:	mov	rdx, qword ptr [rdi + 8]
0x6bdf:	lea	r11, [rdx + 8]
0x6be3:	mov	qword ptr [rdi + 8], r11
0x6be7:	jmp	0x6ae7


0x6afb:	mov	edx, r11d
0x6afe:	add	rdx, qword ptr [rdi + 0x10]
0x6b02:	add	r11d, 8
0x6b06:	mov	dword ptr [rdi], r11d
0x6b09:	mov	edx, dword ptr [rdx]
0x6b0b:	mov	word ptr [rax + 0x10], dx
0x6b0f:	jmp	0x6a70


0x6b9a:	mov	rdx, qword ptr [rdi + 8]
0x6b9e:	lea	r11, [rdx + 8]
0x6ba2:	mov	qword ptr [rdi + 8], r11
0x6ba6:	jmp	0x6b09


0x6a38:	cmp	dword ptr [rax], 0x16
0x6a3b:	ja	0x6a80


0x6b79:	mov	edx, r11d
0x6b7c:	add	rdx, qword ptr [rdi + 0x10]
0x6b80:	add	r11d, 8
0x6b84:	mov	dword ptr [rdi], r11d
0x6b87:	mov	rdx, qword ptr [rdx]
0x6b8a:	test	rdx, rdx
0x6b8d:	cmove	rdx, r10
0x6b91:	mov	qword ptr [rax + 0x10], rdx
0x6b95:	jmp	0x6a70


0x6bbc:	mov	rdx, qword ptr [rdi + 8]
0x6bc0:	lea	r11, [rdx + 8]
0x6bc4:	mov	qword ptr [rdi + 8], r11
0x6bc8:	jmp	0x6b87


0x6b21:	mov	edx, r11d
0x6b24:	add	rdx, qword ptr [rdi + 0x10]
0x6b28:	add	r11d, 8
0x6b2c:	mov	dword ptr [rdi], r11d
0x6b2f:	mov	rdx, qword ptr [rdx]
0x6b32:	test	rdx, rdx
0x6b35:	cmove	rdx, r9
0x6b39:	mov	qword ptr [rax + 0x10], rdx
0x6b3d:	jmp	0x6a70


0x6bab:	mov	rdx, qword ptr [rdi + 8]
0x6baf:	lea	r11, [rdx + 8]
0x6bb3:	mov	qword ptr [rdi + 8], r11
0x6bb7:	jmp	0x6b2f


0x6228:	sub	rsp, 8
0x622c:	push	qword ptr [rbp - 0x3f0]
0x6232:	push	r9
0x6234:	mov	eax, dword ptr [rbp - 0x3b4]
0x623a:	push	rax
0x623b:	mov	r9d, dword ptr [rbp - 0x3b8]
0x6242:	mov	r8, qword ptr [rbp - 0x3d8]
0x6249:	mov	rsi, r10
0x624c:	mov	rcx, -1
0x6253:	mov	edx, 1
0x6258:	xor	eax, eax
0x625a:	mov	qword ptr [rbp - 0x430], r10
0x6261:	call	0x1570


0x5fb7:	sub	rsp, 8
0x5fbb:	push	qword ptr [rbp - 0x3f0]
0x5fc1:	mov	r8, qword ptr [rbp - 0x3d8]
0x5fc8:	mov	rcx, -1
0x5fcf:	mov	edx, 1
0x5fd4:	mov	rsi, r10
0x5fd7:	xor	eax, eax
0x5fd9:	mov	qword ptr [rbp - 0x430], r10
0x5fe0:	call	0x1570


0x6175:	mov	r9d, dword ptr [rbp - 0x3b8]
0x617c:	mov	r8, qword ptr [rbp - 0x3d8]
0x6183:	mov	rsi, r10
0x6186:	mov	rcx, -1
0x618d:	mov	edx, 1
0x6192:	mov	eax, 1
0x6197:	mov	qword ptr [rbp - 0x430], r10
0x619e:	call	0x1570


0x6168:	mov	eax, dword ptr [rbp - 0x3b4]
0x616e:	push	qword ptr [rbp - 0x3f0]
0x6174:	push	rax
0x6175:	mov	r9d, dword ptr [rbp - 0x3b8]
0x617c:	mov	r8, qword ptr [rbp - 0x3d8]
0x6183:	mov	rsi, r10
0x6186:	mov	rcx, -1
0x618d:	mov	edx, 1
0x6192:	mov	eax, 1
0x6197:	mov	qword ptr [rbp - 0x430], r10
0x619e:	call	0x1570


0x6560:	mov	r9, qword ptr [rbp - 0x3f0]
0x6567:	mov	r8, qword ptr [rbp - 0x3d8]
0x656e:	mov	rsi, r10
0x6571:	mov	rcx, -1
0x6578:	mov	edx, 1
0x657d:	mov	eax, 1
0x6582:	mov	qword ptr [rbp - 0x430], r10
0x6589:	call	0x1570


0x5fc1:	mov	r8, qword ptr [rbp - 0x3d8]
0x5fc8:	mov	rcx, -1
0x5fcf:	mov	edx, 1
0x5fd4:	mov	rsi, r10
0x5fd7:	xor	eax, eax
0x5fd9:	mov	qword ptr [rbp - 0x430], r10
0x5fe0:	call	0x1570


0x61e8:	mov	r9d, dword ptr [rbp - 0x3b8]
0x61ef:	jmp	0x5fc1


0x6320:	sub	rsp, 8
0x6324:	push	qword ptr [rbp - 0x3f0]
0x632a:	push	r9
0x632c:	jmp	0x6234


0x5e7f:	sub	rsp, 8
0x5e83:	push	qword ptr [rbp - 0x3f0]
0x5e89:	mov	r8, qword ptr [rbp - 0x3d8]
0x5e90:	mov	rsi, r10
0x5e93:	mov	rcx, -1
0x5e9a:	mov	edx, 1
0x5e9f:	xor	eax, eax
0x5ea1:	mov	qword ptr [rbp - 0x430], r10
0x5ea8:	call	0x1570


0x623b:	mov	r9d, dword ptr [rbp - 0x3b8]
0x6242:	mov	r8, qword ptr [rbp - 0x3d8]
0x6249:	mov	rsi, r10
0x624c:	mov	rcx, -1
0x6253:	mov	edx, 1
0x6258:	xor	eax, eax
0x625a:	mov	qword ptr [rbp - 0x430], r10
0x6261:	call	0x1570


0x60de:	mov	eax, dword ptr [rbp - 0x3b4]
0x60e4:	sub	rsp, 8
0x60e8:	push	qword ptr [rbp - 0x3f0]
0x60ee:	mov	r9d, dword ptr [rbp - 0x3b8]
0x60f5:	mov	r8, qword ptr [rbp - 0x3d8]
0x60fc:	mov	rsi, r10
0x60ff:	sub	rsp, 0x18
0x6103:	mov	rcx, -1
0x610a:	mov	edx, 1
0x610f:	fstp	xword ptr [rsp + 8]
0x6113:	push	rax
0x6114:	xor	eax, eax
0x6116:	mov	qword ptr [rbp - 0x430], r10
0x611d:	call	0x1570


0x65a0:	sub	rsp, 0x10
0x65a4:	mov	r9, qword ptr [rbp - 0x3f0]
0x65ab:	fstp	xword ptr [rsp]
0x65ae:	jmp	0x5e89


0x6a70:	add	rcx, 1
0x6a74:	add	rax, 0x20
0x6a78:	cmp	qword ptr [rsi], rcx
0x6a7b:	ja	0x6a38


0x6b62:	movsd	xmm0, qword ptr [rdx]
0x6b66:	movsd	qword ptr [rax + 0x10], xmm0
0x6b6b:	jmp	0x6a70


0x6aa1:	mov	rdx, qword ptr [rdx]
0x6aa4:	mov	qword ptr [rax + 0x10], rdx
0x6aa8:	jmp	0x6a70


0x6ac5:	mov	edx, dword ptr [rdx]
0x6ac7:	mov	dword ptr [rax + 0x10], edx
0x6aca:	jmp	0x6a70


0x6ae7:	mov	edx, dword ptr [rdx]
0x6ae9:	mov	byte ptr [rax + 0x10], dl
0x6aec:	jmp	0x6a70


0x6b09:	mov	edx, dword ptr [rdx]
0x6b0b:	mov	word ptr [rax + 0x10], dx
0x6b0f:	jmp	0x6a70


0x6b87:	mov	rdx, qword ptr [rdx]
0x6b8a:	test	rdx, rdx
0x6b8d:	cmove	rdx, r10
0x6b91:	mov	qword ptr [rax + 0x10], rdx
0x6b95:	jmp	0x6a70


0x6b2f:	mov	rdx, qword ptr [rdx]
0x6b32:	test	rdx, rdx
0x6b35:	cmove	rdx, r9
0x6b39:	mov	qword ptr [rax + 0x10], rdx
0x6b3d:	jmp	0x6a70


0x1570:	jmp	qword ptr [rip + 0x2098c2]


0x6234:	mov	eax, dword ptr [rbp - 0x3b4]
0x623a:	push	rax
0x623b:	mov	r9d, dword ptr [rbp - 0x3b8]
0x6242:	mov	r8, qword ptr [rbp - 0x3d8]
0x6249:	mov	rsi, r10
0x624c:	mov	rcx, -1
0x6253:	mov	edx, 1
0x6258:	xor	eax, eax
0x625a:	mov	qword ptr [rbp - 0x430], r10
0x6261:	call	0x1570


0x5e89:	mov	r8, qword ptr [rbp - 0x3d8]
0x5e90:	mov	rsi, r10
0x5e93:	mov	rcx, -1
0x5e9a:	mov	edx, 1
0x5e9f:	xor	eax, eax
0x5ea1:	mov	qword ptr [rbp - 0x430], r10
0x5ea8:	call	0x1570




0x489e:	push	r15
0x48a0:	jmp	0x4846


0x4846:	push	r14
0x4848:	mov	rdx, rax
0x484b:	mov	r9, r13
0x484e:	mov	r8, r12
0x4851:	mov	rcx, rbx
0x4854:	mov	rdi, rbp
0x4857:	mov	esi, 1
0x485c:	xor	eax, eax
0x485e:	call	0x1850


0x4863:	pop	rax
0x4864:	pop	rdx
0x4865:	add	rsp, 0x28
0x4869:	pop	rbx
0x486a:	pop	rbp
0x486b:	pop	r12
0x486d:	pop	r13
0x486f:	pop	r14
0x4871:	pop	r15
0x4873:	ret	


0x4947:	push	r13
0x4949:	push	r12
0x494b:	push	r15
0x494d:	push	r14
0x494f:	mov	r9, qword ptr [rsp + 0x28]
0x4954:	jmp	0x48e3


0x48e3:	mov	r8, qword ptr [rsp + 0x20]
0x48e8:	mov	rcx, rbx
0x48eb:	mov	rdx, rax
0x48ee:	mov	rdi, rbp
0x48f1:	mov	esi, 1
0x48f6:	xor	eax, eax
0x48f8:	call	0x1850


0x48fd:	add	rsp, 0x20
0x4901:	add	rsp, 0x28
0x4905:	pop	rbx
0x4906:	pop	rbp
0x4907:	pop	r12
0x4909:	pop	r13
0x490b:	pop	r14
0x490d:	pop	r15
0x490f:	ret	


0x47ee:	add	rsp, 0x28
0x47f2:	mov	r9, r13
0x47f5:	mov	r8, r12
0x47f8:	mov	rcx, rbx
0x47fb:	mov	rdi, rbp
0x47fe:	mov	rdx, rax
0x4801:	pop	rbx
0x4802:	pop	rbp
0x4803:	pop	r12
0x4805:	pop	r13
0x4807:	pop	r14
0x4809:	pop	r15
0x480b:	mov	esi, 1
0x4810:	xor	eax, eax
0x4812:	jmp	0x1850


0x48d6:	sub	rsp, 8
0x48da:	mov	r9, r13
0x48dd:	push	r12
0x48df:	push	r15
0x48e1:	push	r14
0x48e3:	mov	r8, qword ptr [rsp + 0x20]
0x48e8:	mov	rcx, rbx
0x48eb:	mov	rdx, rax
0x48ee:	mov	rdi, rbp
0x48f1:	mov	esi, 1
0x48f6:	xor	eax, eax
0x48f8:	call	0x1850


0x47a2:	add	rsp, 0x28
0x47a6:	mov	r8, r12
0x47a9:	mov	rcx, rbx
0x47ac:	mov	rdi, rbp
0x47af:	mov	rdx, rax
0x47b2:	mov	esi, 1
0x47b7:	pop	rbx
0x47b8:	pop	rbp
0x47b9:	pop	r12
0x47bb:	pop	r13
0x47bd:	pop	r14
0x47bf:	pop	r15
0x47c1:	xor	eax, eax
0x47c3:	jmp	0x1850


0x475e:	add	rsp, 0x28
0x4762:	mov	rcx, rbx
0x4765:	mov	rdi, rbp
0x4768:	pop	rbx
0x4769:	pop	rbp
0x476a:	pop	r12
0x476c:	pop	r13
0x476e:	pop	r14
0x4770:	pop	r15
0x4772:	mov	rdx, rax
0x4775:	mov	esi, 1
0x477a:	xor	eax, eax
0x477c:	jmp	0x1850


0x4680:	sub	rsp, 8
0x4684:	mov	r9, qword ptr [rsp + 0x18]
0x4689:	mov	rdx, rax
0x468c:	mov	rcx, rbx
0x468f:	mov	esi, 1
0x4694:	mov	rdi, rbp
0x4697:	xor	eax, eax
0x4699:	push	r9
0x469b:	push	r13
0x469d:	push	r12
0x469f:	push	r15
0x46a1:	push	r14
0x46a3:	mov	r9, qword ptr [rsp + 0x30]
0x46a8:	mov	r8, qword ptr [rsp + 0x38]
0x46ad:	call	0x1850


0x4842:	sub	rsp, 8
0x4846:	push	r14
0x4848:	mov	rdx, rax
0x484b:	mov	r9, r13
0x484e:	mov	r8, r12
0x4851:	mov	rcx, rbx
0x4854:	mov	rdi, rbp
0x4857:	mov	esi, 1
0x485c:	xor	eax, eax
0x485e:	call	0x1850


0x5ead:	pop	rsi
0x5eae:	pop	rdi
0x5eaf:	mov	r10, qword ptr [rbp - 0x430]
0x5eb6:	mov	ecx, dword ptr [rbp - 0x3bc]
0x5ebc:	test	ecx, ecx
0x5ebe:	js	0x5ffc


0x5ffc:	mov	rdi, qword ptr [rbp - 0x3f8]
0x6003:	cmp	byte ptr [rdi + 1], 0
0x6007:	jne	0x6348


0x5ec4:	movsxd	rdx, ecx
0x5ec7:	cmp	rdx, r10
0x5eca:	jae	0x5eda


0x600d:	test	eax, eax
0x600f:	jns	0x5ede


0x6348:	mov	byte ptr [rdi + 1], 0
0x634c:	jmp	0x5e00


0x5ecc:	add	rdx, r15
0x5ecf:	cmp	byte ptr [rdx + r14], 0
0x5ed4:	jne	0x6816


0x5eda:	cmp	ecx, eax
0x5edc:	jge	0x5ee6


0x6015:	mov	rax, qword ptr [rbp - 0x3c8]
0x601c:	mov	ebx, dword ptr [rax]
0x601e:	test	ebx, ebx
0x6020:	jne	0x6040


0x5ede:	mov	dword ptr [rbp - 0x3bc], eax
0x5ee4:	mov	ecx, eax
0x5ee6:	lea	eax, [rcx + 1]
0x5ee9:	cmp	rax, r10
0x5eec:	jb	0x6720


0x5e00:	mov	rax, qword ptr [rbp - 0x3c8]
0x5e07:	mov	rbx, r12
0x5e0a:	mov	r10d, 0x7fffffff
0x5e10:	sub	rbx, r14
0x5e13:	mov	dword ptr [rbp - 0x3bc], 0xffffffff
0x5e1d:	cmp	rbx, 0x7fffffff
0x5e24:	mov	dword ptr [rax], 0
0x5e2a:	mov	eax, dword ptr [rbp - 0x3d0]
0x5e30:	cmovbe	r10, rbx
0x5e34:	cmp	eax, 0x11
0x5e37:	ja	0x6816


0x5ee6:	lea	eax, [rcx + 1]
0x5ee9:	cmp	rax, r10
0x5eec:	jb	0x6720


0x6022:	movzx	eax, byte ptr [r13 + 0x48]
0x6027:	mov	ebx, 0x16
0x602c:	and	eax, 0xffffffef
0x602f:	cmp	al, 0x63
0x6031:	mov	eax, 0x54
0x6036:	cmove	ebx, eax
0x6039:	nop	dword ptr [rax]
0x6040:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6047:	je	0x6052


0x6040:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6047:	je	0x6052


0x6720:	mov	rax, qword ptr [rbp - 0x3c8]
0x6727:	mov	edi, dword ptr [rbp - 0x424]
0x672d:	movsxd	rbx, ecx
0x6730:	add	rbx, r14
0x6733:	mov	dword ptr [rax], edi
0x6735:	jmp	0x6384


0x5ef2:	cmp	rbx, 0x7ffffffe
0x5ef9:	ja	0x6740


0x6052:	mov	rax, qword ptr [rbp - 0x420]
0x6059:	test	rax, rax
0x605c:	je	0x6066


0x6049:	test	r15, r15
0x604c:	jne	0x67fc


0x5eff:	lea	rsi, [r12 + r12]
0x5f03:	lea	edx, [rcx + 2]
0x5f06:	test	r12, r12
0x5f09:	mov	rax, -1
0x5f10:	cmovns	rax, rsi
0x5f14:	add	rdx, r14
0x5f17:	jb	0x69d8


0x6740:	cmp	r15, qword ptr [rbp - 0x3e8]
0x6747:	je	0x6752


0x6066:	mov	rax, qword ptr [rbp - 0x408]
0x606d:	mov	rdi, qword ptr [rbp - 0x2b8]
0x6074:	add	rax, 0x20
0x6078:	cmp	rdi, rax
0x607b:	je	0x6082


0x605e:	mov	rdi, rax
0x6061:	call	0x1580


0x67fc:	mov	rdi, r15
0x67ff:	call	0x1580


0x69d8:	cmp	r12, -1
0x69dc:	je	0x5e00


0x5f1d:	cmp	rax, rdx
0x5f20:	cmovb	rax, rdx
0x5f24:	cmp	r12, rax
0x5f27:	jae	0x5e00


0x6752:	mov	rax, qword ptr [rbp - 0x420]
0x6759:	test	rax, rax
0x675c:	je	0x6766


0x6749:	test	r15, r15
0x674c:	jne	0x6809


0x6082:	mov	rax, qword ptr [rbp - 0x410]
0x6089:	mov	rdi, qword ptr [rbp - 0x3a8]
0x6090:	add	rax, 0x10
0x6094:	cmp	rdi, rax
0x6097:	je	0x609e


0x607d:	call	0x1580


0x69e2:	jmp	0x5a61


0x5f2d:	test	r12, r12
0x5f30:	js	0x5a61


0x6766:	mov	rax, qword ptr [rbp - 0x408]
0x676d:	mov	rdi, qword ptr [rbp - 0x2b8]
0x6774:	add	rax, 0x20
0x6778:	cmp	rdi, rax
0x677b:	je	0x6782


0x675e:	mov	rdi, rax
0x6761:	call	0x1580


0x6809:	mov	rdi, r15
0x680c:	call	0x1580


0x609e:	mov	rax, qword ptr [rbp - 0x3c8]
0x60a5:	xor	r15d, r15d
0x60a8:	mov	dword ptr [rax], ebx
0x60aa:	jmp	0x5acf


0x6099:	call	0x1580


0x5a61:	cmp	r15, qword ptr [rbp - 0x3e8]
0x5a68:	je	0x5a73


0x5f36:	cmp	rsi, rax
0x5f39:	mov	r12, rsi
0x5f3c:	jae	0x5f4b


0x6782:	mov	rax, qword ptr [rbp - 0x410]
0x6789:	mov	rdi, qword ptr [rbp - 0x3a8]
0x6790:	add	rax, 0x10
0x6794:	cmp	rdi, rax
0x6797:	je	0x679e


0x677d:	call	0x1580


0x5f3e:	cmp	rax, -1
0x5f42:	je	0x5a61


0x5f4b:	cmp	r15, qword ptr [rbp - 0x3e8]
0x5f52:	sete	bl
0x5f55:	test	r15, r15
0x5f58:	je	0x62e0


0x679e:	mov	rax, qword ptr [rbp - 0x3c8]
0x67a5:	xor	r15d, r15d
0x67a8:	mov	dword ptr [rax], 0x4b
0x67ae:	jmp	0x5acf


0x6799:	call	0x1580


0x5f48:	mov	r12, rax
0x5f4b:	cmp	r15, qword ptr [rbp - 0x3e8]
0x5f52:	sete	bl
0x5f55:	test	r15, r15
0x5f58:	je	0x62e0


0x62e0:	mov	rdi, r12
0x62e3:	call	0x1750


0x5f5e:	test	bl, bl
0x5f60:	jne	0x62e0


0x5f66:	mov	rsi, r12
0x5f69:	mov	rdi, r15
0x5f6c:	call	0x1790


0x5f71:	test	rax, rax
0x5f74:	je	0x5a61


0x5f7a:	mov	r15, rax
0x5f7d:	jmp	0x5e00


0x62e8:	test	rax, rax
0x62eb:	mov	rcx, rax
0x62ee:	je	0x5a61


0x62f4:	test	r14, r14
0x62f7:	je	0x63b0


0x63b0:	mov	r15, rcx
0x63b3:	jmp	0x5e00


0x62fd:	test	bl, bl
0x62ff:	je	0x63b0


0x6305:	mov	rsi, r15
0x6308:	mov	rdx, r14
0x630b:	mov	rdi, rax
0x630e:	call	0x1720


0x6313:	mov	r15, rax
0x6316:	jmp	0x5e00


0x6811:	jmp	0x6752


0x6804:	jmp	0x6052


0x6266:	add	rsp, 0x20
0x626a:	mov	r10, qword ptr [rbp - 0x430]
0x6271:	jmp	0x5eb6


0x5eb6:	mov	ecx, dword ptr [rbp - 0x3bc]
0x5ebc:	test	ecx, ecx
0x5ebe:	js	0x5ffc


0x6122:	add	rsp, 0x30
0x6126:	mov	r10, qword ptr [rbp - 0x430]
0x612d:	jmp	0x5eb6


0x5fe5:	pop	rdx
0x5fe6:	pop	rcx
0x5fe7:	mov	ecx, dword ptr [rbp - 0x3bc]
0x5fed:	mov	r10, qword ptr [rbp - 0x430]
0x5ff4:	test	ecx, ecx
0x5ff6:	jns	0x5ec4


0x658e:	mov	r10, qword ptr [rbp - 0x430]
0x6595:	jmp	0x5eb6


0x61a3:	pop	r8
0x61a5:	mov	r10, qword ptr [rbp - 0x430]
0x61ac:	pop	r9
0x61ae:	jmp	0x5eb6


0x3590:	sub	rsp, 8
0x3594:	mov	rcx, rbp
0x3597:	mov	rsi, r13
0x359a:	push	qword ptr [rsp + 0x68]
0x359e:	push	qword ptr [rsp + 0x78]
0x35a2:	mov	rdi, r14
0x35a5:	push	0
0x35a7:	mov	r9d, dword ptr [rsp + 0x98]
0x35af:	mov	r8d, dword ptr [rsp + 0x28]
0x35b4:	mov	rdx, qword ptr [rsp + 0x30]
0x35b9:	and	r9d, 0xfffffffd
0x35bd:	call	0x29f0


0x35c2:	add	rsp, 0x20
0x35c6:	mov	r15, rax
0x35c9:	mov	rbx, qword ptr [rsp + 0xa8]
0x35d1:	xor	rbx, qword ptr fs:[0x28]
0x35da:	mov	rax, r15
0x35dd:	jne	0x3be3


0x35e3:	add	rsp, 0xb8
0x35ea:	pop	rbx
0x35eb:	pop	rbp
0x35ec:	pop	r12
0x35ee:	pop	r13
0x35f0:	pop	r14
0x35f2:	pop	r15
0x35f4:	ret	


0x3be3:	call	0x1650


0x3b8d:	sub	rsp, 8
0x3b91:	mov	r8d, 5
0x3b97:	mov	rcx, r11
0x3b9a:	push	qword ptr [rsp + 0x68]
0x3b9e:	push	qword ptr [rsp + 0x78]
0x3ba2:	mov	rdi, r14
0x3ba5:	push	qword ptr [rsp + 0x38]
0x3ba9:	mov	r9d, dword ptr [rsp + 0x98]
0x3bb1:	mov	rdx, qword ptr [rsp + 0x30]
0x3bb6:	mov	rsi, qword ptr [rsp + 0x70]
0x3bbb:	call	0x29f0


0x3bc0:	add	rsp, 0x20
0x3bc4:	mov	r15, rax
0x3bc7:	jmp	0x35c9


0x35c9:	mov	rbx, qword ptr [rsp + 0xa8]
0x35d1:	xor	rbx, qword ptr fs:[0x28]
0x35da:	mov	rax, r15
0x35dd:	jne	0x3be3


0x1540:	push	qword ptr [rip + 0x2098d2]
0x1546:	jmp	qword ptr [rip + 0x2098d4]


0x154c:	nop	dword ptr [rax]


0x1556:	push	0
0x155b:	jmp	0x1540


0x1566:	push	1
0x156b:	jmp	0x1540


0x1576:	push	2
0x157b:	jmp	0x1540


0x1586:	push	3
0x158b:	jmp	0x1540


0x1596:	push	4
0x159b:	jmp	0x1540


0x15a6:	push	5
0x15ab:	jmp	0x1540


0x15b6:	push	6
0x15bb:	jmp	0x1540


0x15c6:	push	7
0x15cb:	jmp	0x1540


0x15d6:	push	8
0x15db:	jmp	0x1540


0x15e6:	push	9
0x15eb:	jmp	0x1540


0x15f6:	push	0xa
0x15fb:	jmp	0x1540


0x1606:	push	0xb
0x160b:	jmp	0x1540


0x1616:	push	0xc
0x161b:	jmp	0x1540


0x1626:	push	0xd
0x162b:	jmp	0x1540


0x1636:	push	0xe
0x163b:	jmp	0x1540


0x1646:	push	0xf
0x164b:	jmp	0x1540


0x1656:	push	0x10
0x165b:	jmp	0x1540


0x1666:	push	0x11
0x166b:	jmp	0x1540


0x1676:	push	0x12
0x167b:	jmp	0x1540


0x1686:	push	0x13
0x168b:	jmp	0x1540


0x1696:	push	0x14
0x169b:	jmp	0x1540


0x16a6:	push	0x15
0x16ab:	jmp	0x1540


0x16b6:	push	0x16
0x16bb:	jmp	0x1540


0x16c6:	push	0x17
0x16cb:	jmp	0x1540


0x16d6:	push	0x18
0x16db:	jmp	0x1540


0x16e0:	jmp	qword ptr [rip + 0x20980a]




0x16e6:	push	0x19
0x16eb:	jmp	0x1540


0x16f6:	push	0x1a
0x16fb:	jmp	0x1540


0x1706:	push	0x1b
0x170b:	jmp	0x1540


0x1716:	push	0x1c
0x171b:	jmp	0x1540


0x1726:	push	0x1d
0x172b:	jmp	0x1540


0x1736:	push	0x1e
0x173b:	jmp	0x1540


0x1746:	push	0x1f
0x174b:	jmp	0x1540


0x1756:	push	0x20
0x175b:	jmp	0x1540


0x1766:	push	0x21
0x176b:	jmp	0x1540


0x1776:	push	0x22
0x177b:	jmp	0x1540


0x1786:	push	0x23
0x178b:	jmp	0x1540


0x1796:	push	0x24
0x179b:	jmp	0x1540


0x17a6:	push	0x25
0x17ab:	jmp	0x1540


0x17b6:	push	0x26
0x17bb:	jmp	0x1540


0x17c6:	push	0x27
0x17cb:	jmp	0x1540


0x17d6:	push	0x28
0x17db:	jmp	0x1540


0x17e6:	push	0x29
0x17eb:	jmp	0x1540


0x17f6:	push	0x2a
0x17fb:	jmp	0x1540


0x1806:	push	0x2b
0x180b:	jmp	0x1540


0x1816:	push	0x2c
0x181b:	jmp	0x1540


0x1826:	push	0x2d
0x182b:	jmp	0x1540


0x1836:	push	0x2e
0x183b:	jmp	0x1540


0x1846:	push	0x2f
0x184b:	jmp	0x1540


0x1856:	push	0x30
0x185b:	jmp	0x1540


0x1860:	jmp	qword ptr [rip + 0x20974a]




0x1866:	push	0x31
0x186b:	jmp	0x1540


0x1870:	jmp	qword ptr [rip + 0x209742]




0x1876:	push	0x32
0x187b:	jmp	0x1540


0x1886:	push	0x33
0x188b:	jmp	0x1540


0x1fa1:	nop	word ptr cs:[rax + rax]
0x1fab:	nop	dword ptr [rax + rax]


0x1fda:	hlt	


0x1fdb:	nop	dword ptr [rax + rax]


0x2012:	nop	dword ptr [rax]
0x2016:	nop	word ptr cs:[rax + rax]


0x2062:	nop	dword ptr [rax]
0x2066:	nop	word ptr cs:[rax + rax]


0x20aa:	nop	word ptr [rax + rax]


0x20ba:	nop	word ptr [rax + rax]


0x24da:	nop	word ptr [rax + rax]


0x24e8:	nop	dword ptr [rax + rax]


0x24f8:	nop	dword ptr [rax + rax]


0x25a4:	nop	word ptr cs:[rax + rax]
0x25ae:	nop	


0x25c8:	nop	dword ptr [rax + rax]


0x262d:	nop	dword ptr [rax]


0x268a:	nop	word ptr [rax + rax]


0x26ec:	nop	dword ptr [rax]


0x2737:	nop	word ptr [rax + rax]


0x2758:	nop	dword ptr [rax + rax]


0x285f:	nop	


0x28ff:	nop	


0x29e7:	nop	word ptr [rax + rax]


0x2a83:	mov	byte ptr [rsp + 0xe], 1
0x2a88:	mov	byte ptr [rsp + 0x7c], 0
0x2a8d:	xor	r12d, r12d
0x2a90:	mov	qword ptr [rsp + 0x50], 0
0x2a99:	mov	byte ptr [rsp + 0xf], 1
0x2a9e:	mov	byte ptr [rsp + 0xd], 0
0x2aa3:	lea	rax, [rip + 0x581b]
0x2aaa:	mov	qword ptr [rsp + 0x18], 1
0x2ab3:	xor	r15d, r15d
0x2ab6:	mov	dword ptr [rsp + 8], 2
0x2abe:	mov	qword ptr [rsp + 0x48], rax
0x2ac3:	xor	r11d, r11d
0x2ac6:	mov	rax, rbp
0x2ac9:	mov	r8d, r12d
0x2acc:	mov	rbp, r11
0x2acf:	mov	r11, rax
0x2ad2:	nop	word ptr [rax + rax]
0x2ad8:	cmp	r11, rbp
0x2adb:	setne	r12b
0x2adf:	cmp	r11, -1
0x2ae3:	jne	0x2af2


0x2ae5:	mov	rax, qword ptr [rsp + 0x10]
0x2aea:	cmp	byte ptr [rax + rbp], 0
0x2aee:	setne	r12b
0x2af2:	test	r12b, r12b
0x2af5:	je	0x3150


0x2af2:	test	r12b, r12b
0x2af5:	je	0x3150


0x3150:	cmp	dword ptr [rsp + 8], 2
0x3155:	movzx	ebx, byte ptr [rsp + 0xf]
0x315a:	mov	r12d, r8d
0x315d:	mov	rbp, r11
0x3160:	sete	dl
0x3163:	mov	eax, ebx
0x3165:	test	r15, r15
0x3168:	sete	cl
0x316b:	and	eax, edx
0x316d:	and	al, cl
0x316f:	jne	0x3bd6


0x2afb:	cmp	dword ptr [rsp + 8], 2
0x2b00:	mov	rdi, qword ptr [rsp + 0x10]
0x2b05:	lea	r9, [rdi + rbp]
0x2b09:	setne	al
0x2b0c:	and	al, byte ptr [rsp + 0xd]
0x2b10:	mov	r10d, eax
0x2b13:	je	0x2bc0


0x3175:	mov	eax, ebx
0x3177:	xor	eax, 1
0x317a:	and	dl, al
0x317c:	je	0x3aec


0x3bd6:	mov	dword ptr [rsp + 8], 2
0x3bde:	jmp	0x3579


0x2bc0:	movzx	ebx, byte ptr [r9]
0x2bc4:	cmp	bl, 0x7e
0x2bc7:	ja	0x2ee8


0x2b19:	mov	rax, qword ptr [rsp + 0x18]
0x2b1e:	test	rax, rax
0x2b21:	je	0x2f50


0x3aec:	mov	rbx, qword ptr [rsp + 0x48]
0x3af1:	test	rbx, rbx
0x3af4:	je	0x3b22


0x3182:	cmp	byte ptr [rsp + 0x7c], 0
0x3187:	je	0x3aea


0x3579:	cmp	byte ptr [rsp + 0xd], 0
0x357e:	je	0x3590


0x2bcd:	lea	rcx, [rip + 0x5778]
0x2bd4:	movzx	edx, bl
0x2bd7:	movsxd	rax, dword ptr [rcx + rdx*4]
0x2bdb:	add	rax, rcx
0x2bde:	jmp	rax


0x2ee8:	cmp	qword ptr [rsp + 0x58], 1
0x2eee:	jne	0x3298


0x2f50:	movzx	ebx, byte ptr [r9]
0x2f54:	cmp	bl, 0x7e
0x2f57:	ja	0x2ee0


0x2b27:	cmp	r11, -1
0x2b2b:	lea	rbx, [rbp + rax]
0x2b30:	jne	0x2b60


0x3b22:	cmp	r13, r15
0x3b25:	jbe	0x35c9


0x3af6:	test	al, al
0x3af8:	je	0x3b22


0x3aea:	mov	eax, edx
0x3aec:	mov	rbx, qword ptr [rsp + 0x48]
0x3af1:	test	rbx, rbx
0x3af4:	je	0x3b22


0x318d:	cmp	byte ptr [rsp + 0xe], 0
0x3192:	jne	0x3b8d


0x3580:	test	al, al
0x3582:	mov	eax, 4
0x3587:	cmove	eax, dword ptr [rsp + 8]
0x358c:	mov	dword ptr [rsp + 8], eax


0x2ef4:	mov	qword ptr [rsp + 0x38], r11
0x2ef9:	mov	byte ptr [rsp + 0x30], r8b
0x2efe:	mov	byte ptr [rsp + 0x28], r10b
0x2f03:	call	0x1880


0x3298:	lea	rax, [rsp + 0xa0]
0x32a0:	cmp	r11, -1
0x32a4:	mov	qword ptr [rsp + 0xa0], 0
0x32b0:	mov	qword ptr [rsp + 0x28], rax
0x32b5:	jne	0x32e4


0x2f59:	lea	rcx, [rip + 0x55e8]
0x2f60:	movzx	edx, bl
0x2f63:	movsxd	rax, dword ptr [rcx + rdx*4]
0x2f67:	add	rax, rcx
0x2f6a:	jmp	rax


0x2ee0:	xor	r10d, r10d
0x2ee3:	nop	dword ptr [rax + rax]
0x2ee8:	cmp	qword ptr [rsp + 0x58], 1
0x2eee:	jne	0x3298


0x2b32:	cmp	rax, 1
0x2b36:	jbe	0x2b60


0x2b60:	cmp	rbx, r11
0x2b63:	mov	byte ptr [rsp + 0x28], r10b
0x2b68:	ja	0x3120


0x3b2b:	mov	byte ptr [r14 + r15], 0
0x3b30:	jmp	0x35c9


0x3afa:	movzx	ecx, byte ptr [rbx]
0x3afd:	mov	rax, rbx
0x3b00:	test	cl, cl
0x3b02:	je	0x3b22


0x3198:	test	r13, r13
0x319b:	sete	al
0x319e:	cmp	qword ptr [rsp + 0x50], 0
0x31a4:	setne	dl
0x31a7:	and	al, dl
0x31a9:	je	0x3bcc


0x32b7:	mov	rdi, qword ptr [rsp + 0x10]
0x32bc:	mov	byte ptr [rsp + 0x40], r8b
0x32c1:	mov	byte ptr [rsp + 0x38], r10b
0x32c6:	mov	qword ptr [rsp + 0x30], r9
0x32cb:	call	0x1640


0x32e4:	lea	rax, [rsp + 0x9c]
0x32ec:	xor	ecx, ecx
0x32ee:	mov	byte ptr [rsp + 0x7e], bl
0x32f2:	mov	byte ptr [rsp + 0x7d], r8b
0x32f7:	mov	rbx, rcx
0x32fa:	mov	qword ptr [rsp + 0x88], r9
0x3302:	mov	qword ptr [rsp + 0x38], rax
0x3307:	mov	byte ptr [rsp + 0x7f], r10b
0x330c:	mov	qword ptr [rsp + 0x80], r15
0x3314:	mov	qword ptr [rsp + 0x40], r14
0x3319:	mov	qword ptr [rsp + 0x70], r13
0x331e:	mov	qword ptr [rsp + 0x30], r11
0x3323:	mov	rax, qword ptr [rsp + 0x10]
0x3328:	lea	r14, [rbp + rbx]
0x332d:	mov	rdx, qword ptr [rsp + 0x30]
0x3332:	mov	rcx, qword ptr [rsp + 0x28]
0x3337:	mov	rdi, qword ptr [rsp + 0x38]
0x333c:	lea	r13, [rax + r14]
0x3340:	sub	rdx, r14
0x3343:	mov	rsi, r13
0x3346:	call	0x5350


0x2b38:	mov	byte ptr [rsp + 0x38], r8b
0x2b3d:	mov	byte ptr [rsp + 0x30], r10b
0x2b42:	mov	qword ptr [rsp + 0x28], r9
0x2b47:	call	0x1640


0x2b6e:	mov	rdx, qword ptr [rsp + 0x18]
0x2b73:	mov	rsi, qword ptr [rsp + 0x48]
0x2b78:	mov	rdi, r9
0x2b7b:	mov	qword ptr [rsp + 0x40], r11
0x2b80:	mov	byte ptr [rsp + 0x38], r8b
0x2b85:	mov	qword ptr [rsp + 0x30], r9
0x2b8a:	call	0x16e0


0x3120:	xor	r10d, r10d
0x3123:	jmp	0x2bc0


0x3b04:	mov	rdx, r15
0x3b07:	sub	rax, r15
0x3b0a:	cmp	r13, rdx
0x3b0d:	jbe	0x3b13


0x3bcc:	movzx	eax, byte ptr [rsp + 0x7c]
0x3bd1:	jmp	0x3aec


0x31af:	mov	r13, qword ptr [rsp + 0x50]
0x31b4:	lea	rbx, [rip + 0x510a]
0x31bb:	mov	byte ptr [r14], 0x27
0x31bf:	mov	dword ptr [rsp + 8], 2
0x31c7:	mov	r15d, 1
0x31cd:	mov	qword ptr [rsp + 0x18], 1
0x31d6:	mov	byte ptr [rsp + 0xf], 0
0x31db:	mov	qword ptr [rsp + 0x48], rbx
0x31e0:	mov	byte ptr [rsp + 0x7c], al
0x31e4:	jmp	0x2ac3


0x3b13:	add	rdx, 1
0x3b17:	movzx	ecx, byte ptr [rax + rdx]
0x3b1b:	test	cl, cl
0x3b1d:	jne	0x3b0a


0x3b0f:	mov	byte ptr [r14 + rdx], cl
0x3b13:	add	rdx, 1
0x3b17:	movzx	ecx, byte ptr [rax + rdx]
0x3b1b:	test	cl, cl
0x3b1d:	jne	0x3b0a


0x2ac3:	xor	r11d, r11d
0x2ac6:	mov	rax, rbp
0x2ac9:	mov	r8d, r12d
0x2acc:	mov	rbp, r11
0x2acf:	mov	r11, rax
0x2ad2:	nop	word ptr [rax + rax]
0x2ad8:	cmp	r11, rbp
0x2adb:	setne	r12b
0x2adf:	cmp	r11, -1
0x2ae3:	jne	0x2af2


0x3b1f:	mov	r15, rdx
0x3b22:	cmp	r13, r15
0x3b25:	jbe	0x35c9


0x3b0a:	cmp	r13, rdx
0x3b0d:	jbe	0x3b13


0x2b8f:	test	eax, eax
0x2b91:	mov	r9, qword ptr [rsp + 0x30]
0x2b96:	movzx	r8d, byte ptr [rsp + 0x38]
0x2b9c:	mov	r11, qword ptr [rsp + 0x40]
0x2ba1:	jne	0x3120


0x2ba7:	cmp	byte ptr [rsp + 0xf], 0
0x2bac:	movzx	r10d, byte ptr [rsp + 0x28]
0x2bb2:	jne	0x3b35


0x3b35:	cmp	dword ptr [rsp + 8], 2
0x3b3a:	movzx	ebx, byte ptr [rsp + 0xf]
0x3b3f:	mov	rbp, r11
0x3b42:	sete	al
0x3b45:	mov	byte ptr [rsp + 0xd], bl
0x3b49:	jmp	0x3579


0x334b:	test	rax, rax
0x334e:	mov	r15, rax
0x3351:	je	0x33a1


0x33a1:	mov	edx, r12d
0x33a4:	mov	rdi, rbx
0x33a7:	movzx	r8d, byte ptr [rsp + 0x7d]
0x33ad:	xor	edx, 1
0x33b0:	movzx	ebx, byte ptr [rsp + 0x7e]
0x33b5:	movzx	r10d, byte ptr [rsp + 0x7f]
0x33bb:	and	dl, byte ptr [rsp + 0xd]
0x33bf:	mov	r15, qword ptr [rsp + 0x80]
0x33c7:	mov	r14, qword ptr [rsp + 0x40]
0x33cc:	mov	r13, qword ptr [rsp + 0x70]
0x33d1:	mov	r11, qword ptr [rsp + 0x30]
0x33d6:	cmp	rdi, 1
0x33da:	jbe	0x39db


0x3353:	cmp	rax, -1
0x3357:	je	0x3975


0x39db:	mov	eax, edx
0x39dd:	jmp	0x2f37


0x33e0:	mov	rcx, rdi
0x33e3:	xor	esi, esi
0x33e5:	movzx	r9d, byte ptr [rsp + 0xf]
0x33eb:	add	rcx, rbp
0x33ee:	mov	rdi, qword ptr [rsp + 0x10]
0x33f3:	jmp	0x34ae


0x3975:	mov	rdi, rbx
0x3978:	movzx	r8d, byte ptr [rsp + 0x7d]
0x397e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x3983:	movzx	r10d, byte ptr [rsp + 0x7f]
0x3989:	mov	r15, qword ptr [rsp + 0x80]
0x3991:	xor	r12d, r12d
0x3994:	mov	r14, qword ptr [rsp + 0x40]
0x3999:	mov	r13, qword ptr [rsp + 0x70]
0x399e:	mov	r11, qword ptr [rsp + 0x30]
0x39a3:	movzx	edx, byte ptr [rsp + 0xd]
0x39a8:	jmp	0x33d6


0x335d:	cmp	rax, -2
0x3361:	je	0x3901


0x2f37:	test	al, al
0x2f39:	jne	0x38d1


0x34ae:	test	dl, dl
0x34b0:	jne	0x3400


0x33d6:	cmp	rdi, 1
0x33da:	jbe	0x39db


0x3901:	mov	r11, qword ptr [rsp + 0x30]
0x3906:	mov	rsi, r14
0x3909:	mov	rcx, r13
0x390c:	mov	rax, rbx
0x390f:	mov	rdi, rbx
0x3912:	movzx	r8d, byte ptr [rsp + 0x7d]
0x3918:	movzx	ebx, byte ptr [rsp + 0x7e]
0x391d:	mov	r9, qword ptr [rsp + 0x88]
0x3925:	cmp	rsi, r11
0x3928:	movzx	r10d, byte ptr [rsp + 0x7f]
0x392e:	mov	r15, qword ptr [rsp + 0x80]
0x3936:	mov	r14, qword ptr [rsp + 0x40]
0x393b:	mov	r13, qword ptr [rsp + 0x70]
0x3940:	jae	0x3968


0x3367:	cmp	dword ptr [rsp + 8], 2
0x336c:	sete	al
0x336f:	and	al, byte ptr [rsp + 0xf]
0x3373:	jne	0x3510


0x2f3f:	cmp	dword ptr [rsp + 8], 2
0x2f44:	sete	dl
0x2f47:	jmp	0x2c18


0x38d1:	movzx	edx, byte ptr [rsp + 0xd]
0x38d6:	xor	r12d, r12d
0x38d9:	jmp	0x33e0


0x34b6:	mov	eax, esi
0x34b8:	xor	eax, 1
0x34bb:	and	eax, r8d
0x34be:	test	r10b, r10b
0x34c1:	je	0x34d1


0x3400:	cmp	dword ptr [rsp + 8], 2
0x3405:	sete	al
0x3408:	test	r9b, r9b
0x340b:	jne	0x38c0


0x3942:	cmp	byte ptr [rcx], 0
0x3945:	jne	0x3957


0x3968:	movzx	edx, byte ptr [rsp + 0xd]
0x396d:	xor	r12d, r12d
0x3970:	jmp	0x33d6


0x3379:	mov	edi, dword ptr [rsp + 0x9c]
0x3380:	call	0x1870


0x3510:	cmp	r15, 1
0x3514:	je	0x3379


0x2c18:	cmp	byte ptr [rsp + 0xd], 1
0x2c1d:	jne	0x2d32


0x34d1:	add	rbp, 1
0x34d5:	cmp	rbp, rcx
0x34d8:	jae	0x2c5c


0x34c3:	cmp	r13, r15
0x34c6:	jbe	0x34cd


0x3411:	mov	esi, r8d
0x3414:	xor	esi, 1
0x3417:	and	al, sil
0x341a:	je	0x344b


0x38c0:	movzx	ebx, byte ptr [rsp + 0xf]
0x38c5:	mov	rbp, r11
0x38c8:	mov	byte ptr [rsp + 0xd], bl
0x38cc:	jmp	0x3579


0x3947:	jmp	0x3968


0x3957:	add	rax, 1
0x395b:	lea	rdx, [rbp + rax]
0x3960:	cmp	r11, rdx
0x3963:	ja	0x3950


0x351a:	mov	rdi, qword ptr [rsp + 0x10]
0x351f:	lea	rcx, [rdi + r15]
0x3523:	lea	rdx, [rdi + r14 + 1]
0x3528:	lea	r8, [rcx + r14]
0x352c:	jmp	0x353d


0x2c23:	test	dl, dl
0x2c25:	jne	0x2d32


0x2d32:	cmp	byte ptr [rsp + 0xf], 0
0x2d37:	jne	0x2c2b


0x34de:	test	al, al
0x34e0:	je	0x38de


0x2c5c:	test	al, al
0x2c5e:	je	0x2c80


0x34cd:	add	r15, 1
0x34d1:	add	rbp, 1
0x34d5:	cmp	rbp, rcx
0x34d8:	jae	0x2c5c


0x34c8:	mov	byte ptr [r14 + r15], 0x5c
0x34cd:	add	r15, 1
0x34d1:	add	rbp, 1
0x34d5:	cmp	rbp, rcx
0x34d8:	jae	0x2c5c


0x344b:	cmp	r13, r15
0x344e:	jbe	0x3455


0x341c:	cmp	r13, r15
0x341f:	jbe	0x3426


0x3965:	mov	rdi, rax
0x3968:	movzx	edx, byte ptr [rsp + 0xd]
0x396d:	xor	r12d, r12d
0x3970:	jmp	0x33d6


0x3950:	cmp	byte ptr [r9 + rax], 0
0x3955:	je	0x3965


0x353d:	movzx	ecx, byte ptr [rdx]
0x3540:	sub	ecx, 0x5b
0x3543:	cmp	cl, 0x21
0x3546:	ja	0x3530


0x2c2b:	mov	rsi, qword ptr [rsp + 0x20]
0x2c30:	test	rsi, rsi
0x2c33:	je	0x2c49


0x2d3d:	jmp	0x2c49


0x38de:	xor	r10d, r10d
0x38e1:	jmp	0x349d


0x34e6:	cmp	r13, r15
0x34e9:	jbe	0x34f0


0x2c80:	cmp	r15, r13
0x2c83:	jae	0x2c89


0x2c60:	cmp	r13, r15
0x2c63:	jbe	0x2c6a


0x3455:	lea	rax, [r15 + 1]
0x3459:	cmp	r13, rax
0x345c:	jbe	0x346b


0x3450:	mov	byte ptr [r14 + r15], 0x5c
0x3455:	lea	rax, [r15 + 1]
0x3459:	cmp	r13, rax
0x345c:	jbe	0x346b


0x3426:	lea	rsi, [r15 + 1]
0x342a:	cmp	r13, rsi
0x342d:	jbe	0x3435


0x3421:	mov	byte ptr [r14 + r15], 0x27
0x3426:	lea	rsi, [r15 + 1]
0x342a:	cmp	r13, rsi
0x342d:	jbe	0x3435


0x3548:	mov	esi, 1
0x354d:	shl	rsi, cl
0x3550:	mov	rcx, rsi
0x3553:	movabs	rsi, 0x20000002b
0x355d:	test	rcx, rsi
0x3560:	je	0x3530


0x3530:	add	rdx, 1
0x3534:	cmp	r8, rdx
0x3537:	je	0x3379


0x2c49:	test	r10b, r10b
0x2c4c:	jne	0x2d93


0x2c35:	mov	edx, ebx
0x2c37:	shr	dl, 5
0x2c3a:	movzx	edx, dl
0x2c3d:	mov	edx, dword ptr [rsi + rdx*4]
0x2c40:	bt	edx, ebx
0x2c43:	jb	0x2d93


0x349d:	cmp	r13, r15
0x34a0:	jbe	0x34a6


0x34f0:	lea	rax, [r15 + 1]
0x34f4:	cmp	r13, rax
0x34f7:	jbe	0x34ff


0x34eb:	mov	byte ptr [r14 + r15], 0x27
0x34f0:	lea	rax, [r15 + 1]
0x34f4:	cmp	r13, rax
0x34f7:	jbe	0x34ff


0x2c85:	mov	byte ptr [r14 + r15], bl
0x2c89:	movzx	edi, byte ptr [rsp + 0xe]
0x2c8e:	add	r15, 1
0x2c92:	mov	eax, 0
0x2c97:	test	r12b, r12b
0x2c9a:	cmove	edi, eax
0x2c9d:	mov	byte ptr [rsp + 0xe], dil
0x2ca2:	jmp	0x2ad8


0x2c89:	movzx	edi, byte ptr [rsp + 0xe]
0x2c8e:	add	r15, 1
0x2c92:	mov	eax, 0
0x2c97:	test	r12b, r12b
0x2c9a:	cmove	edi, eax
0x2c9d:	mov	byte ptr [rsp + 0xe], dil
0x2ca2:	jmp	0x2ad8


0x2c6a:	lea	rax, [r15 + 1]
0x2c6e:	cmp	r13, rax
0x2c71:	jbe	0x2c79


0x2c65:	mov	byte ptr [r14 + r15], 0x27
0x2c6a:	lea	rax, [r15 + 1]
0x2c6e:	cmp	r13, rax
0x2c71:	jbe	0x2c79


0x346b:	lea	rax, [r15 + 2]
0x346f:	cmp	r13, rax
0x3472:	jbe	0x3484


0x345e:	mov	eax, ebx
0x3460:	shr	al, 6
0x3463:	add	eax, 0x30
0x3466:	mov	byte ptr [r14 + r15 + 1], al
0x346b:	lea	rax, [r15 + 2]
0x346f:	cmp	r13, rax
0x3472:	jbe	0x3484


0x3435:	lea	rsi, [r15 + 2]
0x3439:	cmp	r13, rsi
0x343c:	jbe	0x3444


0x342f:	mov	byte ptr [r14 + r15 + 1], 0x24
0x3435:	lea	rsi, [r15 + 2]
0x3439:	cmp	r13, rsi
0x343c:	jbe	0x3444


0x3562:	mov	r14, qword ptr [rsp + 0x40]
0x3567:	mov	r13, qword ptr [rsp + 0x70]
0x356c:	mov	rbp, qword ptr [rsp + 0x30]
0x3571:	mov	dword ptr [rsp + 8], 2
0x3579:	cmp	byte ptr [rsp + 0xd], 0
0x357e:	je	0x3590


0x2c52:	xor	eax, 1
0x2c55:	add	rbp, 1
0x2c59:	and	eax, r8d
0x2c5c:	test	al, al
0x2c5e:	je	0x2c80


0x2d93:	cmp	dword ptr [rsp + 8], 2
0x2d98:	sete	dl
0x2d9b:	cmp	byte ptr [rsp + 0xf], 0
0x2da0:	mov	eax, edx
0x2da2:	jne	0x35f8


0x34a6:	movzx	ebx, byte ptr [rdi + rbp]
0x34aa:	add	r15, 1
0x34ae:	test	dl, dl
0x34b0:	jne	0x3400


0x34a2:	mov	byte ptr [r14 + r15], bl
0x34a6:	movzx	ebx, byte ptr [rdi + rbp]
0x34aa:	add	r15, 1
0x34ae:	test	dl, dl
0x34b0:	jne	0x3400


0x34ff:	add	r15, 2
0x3503:	xor	r10d, r10d
0x3506:	xor	r8d, r8d
0x3509:	jmp	0x349d


0x34f9:	mov	byte ptr [r14 + r15 + 1], 0x27
0x34ff:	add	r15, 2
0x3503:	xor	r10d, r10d
0x3506:	xor	r8d, r8d
0x3509:	jmp	0x349d


0x2ad8:	cmp	r11, rbp
0x2adb:	setne	r12b
0x2adf:	cmp	r11, -1
0x2ae3:	jne	0x2af2


0x2c79:	add	r15, 2
0x2c7d:	xor	r8d, r8d
0x2c80:	cmp	r15, r13
0x2c83:	jae	0x2c89


0x2c73:	mov	byte ptr [r14 + r15 + 1], 0x27
0x2c79:	add	r15, 2
0x2c7d:	xor	r8d, r8d
0x2c80:	cmp	r15, r13
0x2c83:	jae	0x2c89


0x3484:	and	ebx, 7
0x3487:	add	rbp, 1
0x348b:	add	r15, 3
0x348f:	add	ebx, 0x30
0x3492:	cmp	rbp, rcx
0x3495:	jae	0x2c80


0x3474:	mov	eax, ebx
0x3476:	shr	al, 3
0x3479:	and	eax, 7
0x347c:	add	eax, 0x30
0x347f:	mov	byte ptr [r14 + r15 + 2], al
0x3484:	and	ebx, 7
0x3487:	add	rbp, 1
0x348b:	add	r15, 3
0x348f:	add	ebx, 0x30
0x3492:	cmp	rbp, rcx
0x3495:	jae	0x2c80


0x3444:	add	r15, 3
0x3448:	mov	r8d, eax
0x344b:	cmp	r13, r15
0x344e:	jbe	0x3455


0x343e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x3444:	add	r15, 3
0x3448:	mov	r8d, eax
0x344b:	cmp	r13, r15
0x344e:	jbe	0x3455


0x2da8:	mov	eax, r8d
0x2dab:	xor	eax, 1
0x2dae:	and	al, dl
0x2db0:	je	0x2de1


0x35f8:	mov	rbp, r11
0x35fb:	jmp	0x3579


0x349b:	mov	esi, edx
0x349d:	cmp	r13, r15
0x34a0:	jbe	0x34a6


0x2de1:	cmp	r13, r15
0x2de4:	jbe	0x2deb


0x2db2:	cmp	r13, r15
0x2db5:	jbe	0x2dbc


0x2deb:	add	r15, 1
0x2def:	add	rbp, 1
0x2df3:	jmp	0x2c80


0x2de6:	mov	byte ptr [r14 + r15], 0x5c
0x2deb:	add	r15, 1
0x2def:	add	rbp, 1
0x2df3:	jmp	0x2c80


0x2dbc:	lea	rdx, [r15 + 1]
0x2dc0:	cmp	r13, rdx
0x2dc3:	jbe	0x2dcb


0x2db7:	mov	byte ptr [r14 + r15], 0x27
0x2dbc:	lea	rdx, [r15 + 1]
0x2dc0:	cmp	r13, rdx
0x2dc3:	jbe	0x2dcb


0x2dcb:	lea	rdx, [r15 + 2]
0x2dcf:	cmp	r13, rdx
0x2dd2:	jbe	0x2dda


0x2dc5:	mov	byte ptr [r14 + r15 + 1], 0x24
0x2dcb:	lea	rdx, [r15 + 2]
0x2dcf:	cmp	r13, rdx
0x2dd2:	jbe	0x2dda


0x2dda:	add	r15, 3
0x2dde:	mov	r8d, eax
0x2de1:	cmp	r13, r15
0x2de4:	jbe	0x2deb


0x2dd4:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2dda:	add	r15, 3
0x2dde:	mov	r8d, eax
0x2de1:	cmp	r13, r15
0x2de4:	jbe	0x2deb


0x3385:	mov	rdi, qword ptr [rsp + 0x28]
0x338a:	test	eax, eax
0x338c:	mov	eax, 0
0x3391:	cmove	r12d, eax
0x3395:	add	rbx, r15
0x3398:	call	0x1860


0x339d:	test	eax, eax
0x339f:	je	0x3323


0x3323:	mov	rax, qword ptr [rsp + 0x10]
0x3328:	lea	r14, [rbp + rbx]
0x332d:	mov	rdx, qword ptr [rsp + 0x30]
0x3332:	mov	rcx, qword ptr [rsp + 0x28]
0x3337:	mov	rdi, qword ptr [rsp + 0x38]
0x333c:	lea	r13, [rax + r14]
0x3340:	sub	rdx, r14
0x3343:	mov	rsi, r13
0x3346:	call	0x5350


0x2b4c:	movzx	r8d, byte ptr [rsp + 0x38]
0x2b52:	movzx	r10d, byte ptr [rsp + 0x30]
0x2b58:	mov	r11, rax
0x2b5b:	mov	r9, qword ptr [rsp + 0x28]
0x2b60:	cmp	rbx, r11
0x2b63:	mov	byte ptr [rsp + 0x28], r10b
0x2b68:	ja	0x3120


0x32d0:	movzx	r8d, byte ptr [rsp + 0x40]
0x32d6:	movzx	r10d, byte ptr [rsp + 0x38]
0x32dc:	mov	r11, rax
0x32df:	mov	r9, qword ptr [rsp + 0x30]
0x32e4:	lea	rax, [rsp + 0x9c]
0x32ec:	xor	ecx, ecx
0x32ee:	mov	byte ptr [rsp + 0x7e], bl
0x32f2:	mov	byte ptr [rsp + 0x7d], r8b
0x32f7:	mov	rbx, rcx
0x32fa:	mov	qword ptr [rsp + 0x88], r9
0x3302:	mov	qword ptr [rsp + 0x38], rax
0x3307:	mov	byte ptr [rsp + 0x7f], r10b
0x330c:	mov	qword ptr [rsp + 0x80], r15
0x3314:	mov	qword ptr [rsp + 0x40], r14
0x3319:	mov	qword ptr [rsp + 0x70], r13
0x331e:	mov	qword ptr [rsp + 0x30], r11
0x3323:	mov	rax, qword ptr [rsp + 0x10]
0x3328:	lea	r14, [rbp + rbx]
0x332d:	mov	rdx, qword ptr [rsp + 0x30]
0x3332:	mov	rcx, qword ptr [rsp + 0x28]
0x3337:	mov	rdi, qword ptr [rsp + 0x38]
0x333c:	lea	r13, [rax + r14]
0x3340:	sub	rdx, r14
0x3343:	mov	rsi, r13
0x3346:	call	0x5350


0x2f08:	mov	rcx, qword ptr [rax]
0x2f0b:	movzx	edx, bl
0x2f0e:	movzx	r10d, byte ptr [rsp + 0x28]
0x2f14:	movzx	r8d, byte ptr [rsp + 0x30]
0x2f1a:	mov	r11, qword ptr [rsp + 0x38]
0x2f1f:	mov	edi, 1
0x2f24:	movzx	eax, word ptr [rcx + rdx*2]
0x2f28:	and	ax, 0x4000
0x2f2c:	setne	r12b
0x2f30:	sete	al
0x2f33:	and	al, byte ptr [rsp + 0xd]
0x2f37:	test	al, al
0x2f39:	jne	0x38d1


0x2be0:	xor	r10d, r10d
0x2be3:	cmp	r11, 1
0x2be7:	setne	al
0x2bea:	cmp	r11, -1
0x2bee:	jne	0x2bfc


0x2bf0:	mov	rax, qword ptr [rsp + 0x10]
0x2bf5:	cmp	byte ptr [rax + 1], 0
0x2bf9:	setne	al
0x2bfc:	cmp	dword ptr [rsp + 8], 2
0x2c01:	sete	dl
0x2c04:	test	al, al
0x2c06:	je	0x2e58


0x2bfc:	cmp	dword ptr [rsp + 8], 2
0x2c01:	sete	dl
0x2c04:	test	al, al
0x2c06:	je	0x2e58


0x2e58:	test	rbp, rbp
0x2e5b:	jne	0x2c0c


0x2c0c:	xor	r12d, r12d
0x2c0f:	xor	eax, eax
0x2c11:	nop	dword ptr [rax]
0x2c18:	cmp	byte ptr [rsp + 0xd], 1
0x2c1d:	jne	0x2d32


0x2e61:	movzx	eax, byte ptr [rsp + 0xf]
0x2e66:	and	al, dl
0x2e68:	je	0x2c18


0x2e6e:	mov	rbp, r11
0x2e71:	mov	dword ptr [rsp + 8], 2
0x2e79:	jmp	0x3579


0x3278:	cmp	byte ptr [rsp + 0xf], 0
0x327d:	jne	0x3aa0


0x2cc0:	cmp	eax, 5
0x2cc3:	je	0x3238


0x3283:	xor	r12d, r12d
0x3286:	xor	eax, eax
0x3288:	mov	ebx, 0x3f
0x328d:	jmp	0x2c49


0x3aa0:	mov	rbp, r11
0x3aa3:	movzx	eax, byte ptr [rsp + 0xf]
0x3aa8:	jmp	0x3579


0x3238:	test	byte ptr [rsp + 0x78], 4
0x323d:	je	0x3260


0x2cc9:	cmp	eax, 2
0x2ccc:	mov	ebx, 0x3f
0x2cd1:	sete	dl
0x2cd4:	xor	r12d, r12d
0x2cd7:	xor	eax, eax
0x2cd9:	jmp	0x2c18


0x3260:	xor	edx, edx
0x3262:	xor	r12d, r12d
0x3265:	xor	eax, eax
0x3267:	mov	ebx, 0x3f
0x326c:	jmp	0x2c18


0x323f:	lea	rcx, [rbp + 2]
0x3243:	cmp	rcx, r11
0x3246:	jae	0x3260


0x3248:	mov	rax, qword ptr [rsp + 0x10]
0x324d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x3252:	je	0x39e2


0x39e2:	movzx	ebx, byte ptr [rax + rcx]
0x39e6:	cmp	bl, 0x3e
0x39e9:	ja	0x3260


0x39ef:	movabs	rax, 0x7000a38200000000
0x39f9:	bt	rax, rbx
0x39fd:	jae	0x3260


0x3a03:	cmp	byte ptr [rsp + 0xf], 0
0x3a08:	jne	0x3bf2


0x3a0e:	cmp	r13, r15
0x3a11:	jbe	0x3a18


0x3bf2:	mov	rbp, r11
0x3bf5:	jmp	0x3590


0x3a18:	lea	rax, [r15 + 1]
0x3a1c:	cmp	r13, rax
0x3a1f:	jbe	0x3a27


0x3a13:	mov	byte ptr [r14 + r15], 0x3f
0x3a18:	lea	rax, [r15 + 1]
0x3a1c:	cmp	r13, rax
0x3a1f:	jbe	0x3a27


0x3a27:	lea	rax, [r15 + 2]
0x3a2b:	cmp	r13, rax
0x3a2e:	jbe	0x3a36


0x3a21:	mov	byte ptr [r14 + r15 + 1], 0x22
0x3a27:	lea	rax, [r15 + 2]
0x3a2b:	cmp	r13, rax
0x3a2e:	jbe	0x3a36


0x3a36:	lea	rax, [r15 + 3]
0x3a3a:	cmp	r13, rax
0x3a3d:	jbe	0x3a45


0x3a30:	mov	byte ptr [r14 + r15 + 2], 0x22
0x3a36:	lea	rax, [r15 + 3]
0x3a3a:	cmp	r13, rax
0x3a3d:	jbe	0x3a45


0x3a45:	add	r15, 4
0x3a49:	xor	edx, edx
0x3a4b:	xor	r12d, r12d
0x3a4e:	xor	eax, eax
0x3a50:	mov	rbp, rcx
0x3a53:	jmp	0x2c18


0x3a3f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x3a45:	add	r15, 4
0x3a49:	xor	edx, edx
0x3a4b:	xor	r12d, r12d
0x3a4e:	xor	eax, eax
0x3a50:	mov	rbp, rcx
0x3a53:	jmp	0x2c18


0x31f0:	cmp	byte ptr [rsp + 0xf], 0
0x31f5:	jne	0x3aa0


0x2cee:	mov	byte ptr [rsp + 0x7c], r12b
0x2cf3:	xor	edx, edx
0x2cf5:	xor	eax, eax
0x2cf7:	mov	ebx, 0x27
0x2cfc:	jmp	0x2c18


0x31fb:	test	r13, r13
0x31fe:	je	0x3600


0x3600:	cmp	r13, r15
0x3603:	jbe	0x360a


0x3204:	xor	edx, edx
0x3206:	cmp	qword ptr [rsp + 0x50], 0
0x320c:	jne	0x3600


0x360a:	lea	rax, [r15 + 1]
0x360e:	cmp	r13, rax
0x3611:	jbe	0x3619


0x3605:	mov	byte ptr [r14 + r15], 0x27
0x360a:	lea	rax, [r15 + 1]
0x360e:	cmp	r13, rax
0x3611:	jbe	0x3619


0x3212:	mov	qword ptr [rsp + 0x50], r13
0x3217:	add	r15, 3
0x321b:	xor	eax, eax
0x321d:	mov	byte ptr [rsp + 0x7c], r12b
0x3222:	xor	r8d, r8d
0x3225:	mov	r13, rdx
0x3228:	mov	ebx, 0x27
0x322d:	jmp	0x2c49


0x3619:	lea	rax, [r15 + 2]
0x361d:	cmp	r13, rax
0x3620:	jbe	0x3c12


0x3613:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x3619:	lea	rax, [r15 + 2]
0x361d:	cmp	r13, rax
0x3620:	jbe	0x3c12


0x3c12:	mov	rdx, r13
0x3c15:	mov	r13, qword ptr [rsp + 0x50]
0x3c1a:	jmp	0x3212


0x3626:	mov	rdx, r13
0x3629:	mov	byte ptr [r14 + r15 + 2], 0x27
0x362f:	mov	r13, qword ptr [rsp + 0x50]
0x3634:	jmp	0x3212


0x2d24:	cmp	byte ptr [rsp + 0xd], 0
0x2d29:	jne	0x2d90


0x2d2b:	mov	ebx, edx
0x2d2d:	xor	r12d, r12d
0x2d30:	xor	eax, eax
0x2d32:	cmp	byte ptr [rsp + 0xf], 0
0x2d37:	jne	0x2c2b


0x2d90:	xor	r12d, r12d
0x2d93:	cmp	dword ptr [rsp + 8], 2
0x2d98:	sete	dl
0x2d9b:	cmp	byte ptr [rsp + 0xf], 0
0x2da0:	mov	eax, edx
0x2da2:	jne	0x35f8


0x3130:	cmp	byte ptr [rsp + 0xf], 0
0x3135:	jne	0x3aa0


0x2d63:	cmp	byte ptr [rsp + 0xd], 0
0x2d68:	je	0x2f80


0x313b:	add	rbp, 1
0x313f:	mov	eax, r8d
0x3142:	xor	r12d, r12d
0x3145:	mov	ebx, 0x5c
0x314a:	jmp	0x2c5c


0x2f80:	mov	edx, 0x5c
0x2f85:	mov	ebx, 0x5c
0x2f8a:	jmp	0x2d24


0x2d6e:	cmp	byte ptr [rsp + 0xf], 0
0x2d73:	je	0x2f80


0x2d79:	cmp	qword ptr [rsp + 0x18], 0
0x2d7f:	jne	0x313b


0x2d85:	mov	ebx, 0x5c
0x2d8a:	nop	word ptr [rax + rax]
0x2d90:	xor	r12d, r12d
0x2d93:	cmp	dword ptr [rsp + 8], 2
0x2d98:	sete	dl
0x2d9b:	cmp	byte ptr [rsp + 0xf], 0
0x2da0:	mov	eax, edx
0x2da2:	jne	0x35f8


0x2e0b:	xor	edx, edx
0x2e0d:	test	byte ptr [rsp + 0x78], 1
0x2e12:	je	0x2d2b


0x2fd3:	cmp	dword ptr [rsp + 8], 2
0x2fd8:	sete	dl
0x2fdb:	cmp	byte ptr [rsp + 0xf], 0
0x2fe0:	jne	0x3b7a


0x2e18:	add	rbp, 1
0x2e1c:	jmp	0x2ad8


0x2fe6:	mov	eax, r8d
0x2fe9:	mov	rcx, r15
0x2fec:	xor	eax, 1
0x2fef:	and	al, dl
0x2ff1:	je	0x3020


0x3b7a:	movzx	ebx, byte ptr [rsp + 0xf]
0x3b7f:	mov	rbp, r11
0x3b82:	mov	eax, edx
0x3b84:	mov	byte ptr [rsp + 0xd], bl
0x3b88:	jmp	0x3579


0x3020:	cmp	r13, rcx
0x3023:	jbe	0x302a


0x2ff3:	cmp	r13, r15
0x2ff6:	jbe	0x2ffd


0x302a:	cmp	dword ptr [rsp + 8], 2
0x302f:	lea	r15, [rcx + 1]
0x3033:	je	0x3639


0x3025:	mov	byte ptr [r14 + rcx], 0x5c
0x302a:	cmp	dword ptr [rsp + 8], 2
0x302f:	lea	r15, [rcx + 1]
0x3033:	je	0x3639


0x2ffd:	lea	rcx, [r15 + 1]
0x3001:	cmp	r13, rcx
0x3004:	jbe	0x300c


0x2ff8:	mov	byte ptr [r14 + r15], 0x27
0x2ffd:	lea	rcx, [r15 + 1]
0x3001:	cmp	r13, rcx
0x3004:	jbe	0x300c


0x3639:	mov	eax, r12d
0x363c:	mov	ebx, 0x30
0x3641:	xor	r12d, r12d
0x3644:	jmp	0x2c49


0x3039:	lea	rax, [rbp + 1]
0x303d:	cmp	rax, r11
0x3040:	jae	0x305b


0x300c:	lea	rcx, [r15 + 2]
0x3010:	cmp	r13, rcx
0x3013:	ja	0x3649


0x3006:	mov	byte ptr [r14 + r15 + 1], 0x24
0x300c:	lea	rcx, [r15 + 2]
0x3010:	cmp	r13, rcx
0x3013:	ja	0x3649


0x3042:	mov	rax, qword ptr [rsp + 0x10]
0x3047:	movzx	eax, byte ptr [rax + rbp + 1]
0x304c:	mov	byte ptr [rsp + 0x28], al
0x3050:	sub	eax, 0x30
0x3053:	cmp	al, 9
0x3055:	jbe	0x3889


0x305b:	mov	eax, r12d
0x305e:	mov	ebx, 0x30
0x3063:	xor	r12d, r12d
0x3066:	jmp	0x2c18


0x3019:	lea	rcx, [r15 + 3]
0x301d:	mov	r8d, eax
0x3020:	cmp	r13, rcx
0x3023:	jbe	0x302a


0x3649:	mov	byte ptr [r14 + r15 + 2], 0x27
0x364f:	jmp	0x3019


0x3889:	cmp	r13, r15
0x388c:	jbe	0x3893


0x3893:	lea	rax, [rcx + 2]
0x3897:	cmp	r13, rax
0x389a:	jbe	0x38a2


0x388e:	mov	byte ptr [r14 + r15], 0x30
0x3893:	lea	rax, [rcx + 2]
0x3897:	cmp	r13, rax
0x389a:	jbe	0x38a2


0x38a2:	mov	eax, r12d
0x38a5:	lea	r15, [rcx + 3]
0x38a9:	xor	r12d, r12d
0x38ac:	mov	ebx, 0x30
0x38b1:	jmp	0x2c18


0x389c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x38a2:	mov	eax, r12d
0x38a5:	lea	r15, [rcx + 3]
0x38a9:	xor	r12d, r12d
0x38ac:	mov	ebx, 0x30
0x38b1:	jmp	0x2c18


0x2d12:	cmp	dword ptr [rsp + 8], 2
0x2d17:	sete	al
0x2d1a:	and	al, byte ptr [rsp + 0xf]
0x2d1e:	jne	0x2e6e


0x30d0:	mov	edx, 0xd
0x30d5:	xor	r10d, r10d
0x30d8:	mov	ebx, 0x72
0x30dd:	jmp	0x2d12


0x3654:	test	ebx, ebx
0x3656:	jne	0x2a83


0x365c:	mov	byte ptr [rsp + 0xd], 1
0x3661:	test	r13, r13
0x3664:	jne	0x3bfa


0x366a:	lea	rax, [rip + 0x4c54]
0x3671:	mov	qword ptr [rsp + 0x50], 0
0x367a:	mov	byte ptr [rsp + 0xe], 1
0x367f:	mov	byte ptr [rsp + 0x7c], 0
0x3684:	xor	r12d, r12d
0x3687:	mov	byte ptr [rsp + 0xf], 0
0x368c:	mov	qword ptr [rsp + 0x18], 1
0x3695:	mov	qword ptr [rsp + 0x48], rax
0x369a:	mov	r15d, 1
0x36a0:	mov	dword ptr [rsp + 8], 2
0x36a8:	jmp	0x2ac3


0x3bfa:	mov	byte ptr [rsp + 0xe], 1
0x3bff:	xor	eax, eax
0x3c01:	xor	r12d, r12d
0x3c04:	mov	qword ptr [rsp + 0x50], 0
0x3c0d:	jmp	0x31b4


0x31b4:	lea	rbx, [rip + 0x510a]
0x31bb:	mov	byte ptr [r14], 0x27
0x31bf:	mov	dword ptr [rsp + 8], 2
0x31c7:	mov	r15d, 1
0x31cd:	mov	qword ptr [rsp + 0x18], 1
0x31d6:	mov	byte ptr [rsp + 0xf], 0
0x31db:	mov	qword ptr [rsp + 0x48], rbx
0x31e0:	mov	byte ptr [rsp + 0x7c], al
0x31e4:	jmp	0x2ac3


0x36b8:	test	r13, r13
0x36bb:	je	0x38e6


0x3aad:	lea	rax, [rip + 0x480f]
0x3ab4:	mov	byte ptr [rsp + 0xe], 1
0x3ab9:	mov	byte ptr [rsp + 0x7c], 0
0x3abe:	xor	r12d, r12d
0x3ac1:	mov	qword ptr [rsp + 0x50], 0
0x3aca:	mov	byte ptr [rsp + 0xf], 1
0x3acf:	mov	byte ptr [rsp + 0xd], 1
0x3ad4:	mov	qword ptr [rsp + 0x18], 1
0x3add:	xor	r15d, r15d
0x3ae0:	mov	qword ptr [rsp + 0x48], rax
0x3ae5:	jmp	0x2ac3


0x38e6:	mov	qword ptr [rsp + 0x50], 0
0x38ef:	mov	byte ptr [rsp + 0xe], 1
0x38f4:	xor	r12d, r12d
0x38f7:	mov	byte ptr [rsp + 0x7c], 0
0x38fc:	jmp	0x36db


0x36c1:	mov	byte ptr [r14], 0x22
0x36c5:	mov	byte ptr [rsp + 0xe], 1
0x36ca:	xor	r12d, r12d
0x36cd:	mov	byte ptr [rsp + 0x7c], 0
0x36d2:	mov	qword ptr [rsp + 0x50], 0
0x36db:	lea	rax, [rip + 0x4be1]
0x36e2:	mov	byte ptr [rsp + 0xf], 0
0x36e7:	mov	byte ptr [rsp + 0xd], 1
0x36ec:	mov	qword ptr [rsp + 0x18], 1
0x36f5:	mov	r15d, 1
0x36fb:	mov	qword ptr [rsp + 0x48], rax
0x3700:	jmp	0x2ac3


0x36db:	lea	rax, [rip + 0x4be1]
0x36e2:	mov	byte ptr [rsp + 0xf], 0
0x36e7:	mov	byte ptr [rsp + 0xd], 1
0x36ec:	mov	qword ptr [rsp + 0x18], 1
0x36f5:	mov	r15d, 1
0x36fb:	mov	qword ptr [rsp + 0x48], rax
0x3700:	jmp	0x2ac3


0x3705:	lea	rax, [rip + 0x4bb7]
0x370c:	mov	byte ptr [rsp + 0xe], 1
0x3711:	mov	byte ptr [rsp + 0x7c], 0
0x3716:	xor	r12d, r12d
0x3719:	mov	qword ptr [rsp + 0x50], 0
0x3722:	mov	byte ptr [rsp + 0xf], 1
0x3727:	mov	byte ptr [rsp + 0xd], 1
0x372c:	mov	qword ptr [rsp + 0x18], 1
0x3735:	xor	r15d, r15d
0x3738:	mov	qword ptr [rsp + 0x48], rax
0x373d:	mov	dword ptr [rsp + 8], 5
0x3745:	jmp	0x2ac3


0x374a:	mov	byte ptr [rsp + 0xe], 1
0x374f:	mov	byte ptr [rsp + 0x7c], 0
0x3754:	xor	r12d, r12d
0x3757:	mov	qword ptr [rsp + 0x50], 0
0x3760:	mov	byte ptr [rsp + 0xf], 0
0x3765:	xor	r15d, r15d
0x3768:	mov	byte ptr [rsp + 0xd], 1
0x376d:	mov	qword ptr [rsp + 0x18], 0
0x3776:	mov	qword ptr [rsp + 0x48], 0
0x377f:	jmp	0x2ac3


0x3784:	cmp	dword ptr [rsp + 8], 0xa
0x3789:	je	0x37e1


0x37e1:	xor	r15d, r15d
0x37e4:	test	ebx, ebx
0x37e6:	je	0x39ad


0x378b:	lea	rsi, [rip + 0x4b35]
0x3792:	xor	edi, edi
0x3794:	mov	edx, 5
0x3799:	call	0x1620


0x39ad:	mov	rdx, qword ptr [rsp + 0x68]
0x39b2:	movzx	eax, byte ptr [rdx]
0x39b5:	test	al, al
0x39b7:	je	0x37ec


0x37ec:	test	ebx, ebx
0x37ee:	mov	rbx, qword ptr [rsp + 0x60]
0x37f3:	setne	byte ptr [rsp + 0xf]
0x37f8:	xor	r12d, r12d
0x37fb:	mov	rdi, rbx
0x37fe:	call	0x1640


0x39c9:	add	r15, 1
0x39cd:	movzx	eax, byte ptr [rdx + r15]
0x39d2:	test	al, al
0x39d4:	jne	0x39c0


0x39c5:	mov	byte ptr [r14 + r15], al
0x39c9:	add	r15, 1
0x39cd:	movzx	eax, byte ptr [rdx + r15]
0x39d2:	test	al, al
0x39d4:	jne	0x39c0


0x39d6:	jmp	0x37ec


0x39c0:	cmp	r13, r15
0x39c3:	jbe	0x39c9


0x3803:	mov	qword ptr [rsp + 0x48], rbx
0x3808:	mov	qword ptr [rsp + 0x18], rax
0x380d:	mov	byte ptr [rsp + 0xe], 1
0x3812:	mov	byte ptr [rsp + 0x7c], 0
0x3817:	mov	qword ptr [rsp + 0x50], 0
0x3820:	mov	byte ptr [rsp + 0xd], 1
0x3825:	jmp	0x2ac3


0x379e:	mov	rcx, rax
0x37a1:	mov	qword ptr [rsp + 0x68], rax
0x37a6:	lea	rax, [rip + 0x4b1a]
0x37ad:	cmp	rcx, rax
0x37b0:	je	0x3b4e


0x3b4e:	mov	esi, dword ptr [rsp + 8]
0x3b52:	mov	rdi, rcx
0x3b55:	call	0x2900


0x37b6:	lea	rsi, [rip + 0x4b08]
0x37bd:	xor	edi, edi
0x37bf:	mov	edx, 5
0x37c4:	call	0x1620


0x37c9:	mov	rcx, rax
0x37cc:	mov	qword ptr [rsp + 0x60], rax
0x37d1:	lea	rax, [rip + 0x4aed]
0x37d8:	cmp	rcx, rax
0x37db:	je	0x3b64


0x3b64:	mov	esi, dword ptr [rsp + 8]
0x3b68:	mov	rdi, rcx
0x3b6b:	call	0x2900


0x3b70:	mov	qword ptr [rsp + 0x60], rax
0x3b75:	jmp	0x37e1


0x3b5a:	mov	qword ptr [rsp + 0x68], rax
0x3b5f:	jmp	0x37b6


0x382a:	mov	byte ptr [rsp + 0xe], 1
0x382f:	mov	byte ptr [rsp + 0x7c], 0
0x3834:	xor	r12d, r12d
0x3837:	mov	qword ptr [rsp + 0x50], 0
0x3840:	mov	byte ptr [rsp + 0xf], 0
0x3845:	xor	r15d, r15d
0x3848:	mov	byte ptr [rsp + 0xd], 0
0x384d:	mov	qword ptr [rsp + 0x18], 0
0x3856:	mov	qword ptr [rsp + 0x48], 0
0x385f:	jmp	0x2ac3


0x3864:	mov	byte ptr [rsp + 0xe], 1
0x3869:	mov	byte ptr [rsp + 0x7c], 0
0x386e:	xor	r12d, r12d
0x3871:	mov	qword ptr [rsp + 0x50], 0
0x387a:	mov	byte ptr [rsp + 0xf], 1
0x387f:	mov	byte ptr [rsp + 0xd], 1
0x3884:	jmp	0x2aa3


0x2aa3:	lea	rax, [rip + 0x581b]
0x2aaa:	mov	qword ptr [rsp + 0x18], 1
0x2ab3:	xor	r15d, r15d
0x2ab6:	mov	dword ptr [rsp + 8], 2
0x2abe:	mov	qword ptr [rsp + 0x48], rax
0x2ac3:	xor	r11d, r11d
0x2ac6:	mov	rax, rbp
0x2ac9:	mov	r8d, r12d
0x2acc:	mov	rbp, r11
0x2acf:	mov	r11, rax
0x2ad2:	nop	word ptr [rax + rax]
0x2ad8:	cmp	r11, rbp
0x2adb:	setne	r12b
0x2adf:	cmp	r11, -1
0x2ae3:	jne	0x2af2


0x3a58:	test	ebx, ebx
0x3a5a:	je	0x3be8


0x3be8:	mov	byte ptr [rsp + 0xd], 0
0x3bed:	jmp	0x3661


0x3a60:	lea	rax, [rip + 0x485e]
0x3a67:	mov	byte ptr [rsp + 0xe], 1
0x3a6c:	mov	byte ptr [rsp + 0x7c], 0
0x3a71:	xor	r12d, r12d
0x3a74:	mov	qword ptr [rsp + 0x50], 0
0x3a7d:	mov	byte ptr [rsp + 0xf], 1
0x3a82:	mov	byte ptr [rsp + 0xd], 0
0x3a87:	mov	qword ptr [rsp + 0x18], 1
0x3a90:	xor	r15d, r15d
0x3a93:	mov	qword ptr [rsp + 0x48], rax
0x3a98:	jmp	0x2ac3


0x3661:	test	r13, r13
0x3664:	jne	0x3bfa


0x3c24:	nop	
0x3c26:	nop	word ptr cs:[rax + rax]


0x3ddb:	nop	dword ptr [rax + rax]


0x3e16:	nop	word ptr cs:[rax + rax]


0x3e31:	nop	dword ptr [rax + rax]
0x3e36:	nop	word ptr cs:[rax + rax]


0x3e51:	nop	dword ptr [rax + rax]
0x3e56:	nop	word ptr cs:[rax + rax]


0x3e95:	nop	
0x3e96:	nop	word ptr cs:[rax + rax]


0x3eb5:	nop	
0x3eb6:	nop	word ptr cs:[rax + rax]


0x3f64:	nop	
0x3f66:	nop	word ptr cs:[rax + rax]


0x4053:	nop	dword ptr [rax]
0x4056:	nop	word ptr cs:[rax + rax]


0x406a:	nop	word ptr [rax + rax]


0x4103:	nop	dword ptr [rax]
0x4106:	nop	word ptr cs:[rax + rax]


0x4123:	nop	dword ptr [rax]
0x4126:	nop	word ptr cs:[rax + rax]


0x413c:	nop	dword ptr [rax]


0x4158:	nop	dword ptr [rax + rax]


0x4174:	nop	
0x4176:	nop	word ptr cs:[rax + rax]


0x420e:	nop	


0x429a:	nop	word ptr [rax + rax]


0x42ac:	nop	dword ptr [rax]


0x42bf:	nop	


0x4358:	nop	dword ptr [rax + rax]


0x4381:	nop	dword ptr [rax + rax]
0x4386:	nop	word ptr cs:[rax + rax]


0x439a:	nop	word ptr [rax + rax]


0x442e:	nop	


0x44c1:	nop	dword ptr [rax + rax]
0x44c6:	nop	word ptr cs:[rax + rax]


0x44dc:	nop	dword ptr [rax]


0x44f7:	nop	word ptr [rax + rax]


0x4513:	nop	dword ptr [rax]
0x4516:	nop	word ptr cs:[rax + rax]


0x452c:	nop	dword ptr [rax]


0x4544:	nop	
0x4546:	nop	word ptr cs:[rax + rax]


0x4563:	nop	dword ptr [rax]
0x4566:	nop	word ptr cs:[rax + rax]


0x4588:	nop	dword ptr [rax + rax]


0x49a7:	nop	word ptr [rax + rax]


0x4a48:	nop	dword ptr [rax + rax]


0x4b25:	nop	
0x4b26:	nop	word ptr cs:[rax + rax]


0x4bca:	nop	word ptr [rax + rax]


0x4bf4:	nop	
0x4bf6:	nop	word ptr cs:[rax + rax]


0x4c02:	nop	dword ptr [rax]
0x4c06:	nop	word ptr cs:[rax + rax]


0x4c46:	nop	word ptr cs:[rax + rax]


0x4c74:	nop	
0x4c76:	nop	word ptr cs:[rax + rax]


0x4d02:	nop	dword ptr [rax]
0x4d06:	nop	word ptr cs:[rax + rax]


0x4d5a:	nop	word ptr [rax + rax]


0x4d77:	nop	word ptr [rax + rax]


0x4dae:	nop	


0x4dd8:	nop	dword ptr [rax + rax]


0x4df3:	nop	word ptr cs:[rax + rax]
0x4dfd:	nop	dword ptr [rax]


0x4e35:	nop	word ptr cs:[rax + rax]
0x4e3f:	nop	


0x4e67:	nop	word ptr [rax + rax]


0x5048:	mov	rax, rbx
0x504b:	mul	rsi
0x504e:	jo	0x5241


0x5241:	or	rax, 0xffffffffffffffff
0x5245:	mov	r8d, 1
0x524b:	jmp	0x5057


0x5054:	xor	r8d, r8d
0x5057:	mul	rsi
0x505a:	jo	0x5232


0x5057:	mul	rsi
0x505a:	jo	0x5232


0x5232:	mov	r8d, 1
0x5238:	or	rbx, 0xffffffffffffffff
0x523c:	jmp	0x5063


0x5060:	mov	rbx, rax
0x5063:	or	ebp, r8d
0x5066:	nop	word ptr cs:[rax + rax]
0x5070:	movsxd	rdi, edi
0x5073:	mov	eax, ebp
0x5075:	add	rcx, rdi
0x5078:	or	eax, 2
0x507b:	mov	qword ptr [r15], rcx
0x507e:	cmp	byte ptr [rcx], 0
0x5081:	mov	qword ptr [r14], rbx
0x5084:	cmovne	ebp, eax
0x5087:	jmp	0x4f4d


0x5063:	or	ebp, r8d
0x5066:	nop	word ptr cs:[rax + rax]
0x5070:	movsxd	rdi, edi
0x5073:	mov	eax, ebp
0x5075:	add	rcx, rdi
0x5078:	or	eax, 2
0x507b:	mov	qword ptr [r15], rcx
0x507e:	cmp	byte ptr [rcx], 0
0x5081:	mov	qword ptr [r14], rbx
0x5084:	cmovne	ebp, eax
0x5087:	jmp	0x4f4d


0x5097:	mov	edx, 2
0x509c:	mov	rax, rdx
0x509f:	mul	rbx
0x50a2:	jo	0x513e


0x513e:	mov	ebp, 1
0x5143:	or	rbx, 0xffffffffffffffff
0x5147:	jmp	0x5070


0x50a8:	add	rbx, rbx
0x50ab:	jmp	0x5070


0x5070:	movsxd	rdi, edi
0x5073:	mov	eax, ebp
0x5075:	add	rcx, rdi
0x5078:	or	eax, 2
0x507b:	mov	qword ptr [r15], rcx
0x507e:	cmp	byte ptr [rcx], 0
0x5081:	mov	qword ptr [r14], rbx
0x5084:	cmovne	ebp, eax
0x5087:	jmp	0x4f4d


0x50ad:	mov	edx, 0x200
0x50b2:	mov	rax, rdx
0x50b5:	mul	rbx
0x50b8:	jo	0x513e


0x50be:	shl	rbx, 9
0x50c2:	jmp	0x5070


0x50c4:	mov	r8d, 7
0x50ca:	xor	r9d, r9d
0x50cd:	nop	dword ptr [rax]
0x50d0:	mov	rax, rbx
0x50d3:	mul	rsi
0x50d6:	mov	rbx, rax
0x50d9:	jo	0x526e


0x526e:	mov	r9d, 1
0x5274:	or	rbx, 0xffffffffffffffff
0x5278:	jmp	0x50df


0x50df:	sub	r8d, 1
0x50e3:	jne	0x50d0


0x50e5:	or	ebp, r9d
0x50e8:	jmp	0x5070


0x50d0:	mov	rax, rbx
0x50d3:	mul	rsi
0x50d6:	mov	rbx, rax
0x50d9:	jo	0x526e


0x50ea:	mov	r8d, 8
0x50f0:	xor	r9d, r9d
0x50f3:	nop	dword ptr [rax + rax]
0x50f8:	mov	rax, rbx
0x50fb:	mul	rsi
0x50fe:	mov	rbx, rax
0x5101:	jo	0x5250


0x5250:	mov	r9d, 1
0x5256:	or	rbx, 0xffffffffffffffff
0x525a:	jmp	0x5107


0x5107:	sub	r8d, 1
0x510b:	jne	0x50f8


0x510d:	jmp	0x50e5


0x50f8:	mov	rax, rbx
0x50fb:	mul	rsi
0x50fe:	mov	rbx, rax
0x5101:	jo	0x5250


0x510f:	mov	r8d, 4
0x5115:	xor	r9d, r9d
0x5118:	mov	rax, rbx
0x511b:	mul	rsi
0x511e:	mov	rbx, rax
0x5121:	jo	0x5223


0x5223:	mov	r9d, 1
0x5229:	or	rbx, 0xffffffffffffffff
0x522d:	jmp	0x5127


0x5127:	sub	r8d, 1
0x512b:	jne	0x5118


0x512d:	jmp	0x50e5


0x5118:	mov	rax, rbx
0x511b:	mul	rsi
0x511e:	mov	rbx, rax
0x5121:	jo	0x5223


0x512f:	mov	rax, rbx
0x5132:	mul	rsi
0x5135:	mov	rbx, rax
0x5138:	jno	0x5070


0x525f:	mov	r9d, 1
0x5265:	or	rbx, 0xffffffffffffffff
0x5269:	jmp	0x5168


0x5168:	sub	r8d, 1
0x516c:	jne	0x5159


0x516e:	jmp	0x50e5


0x5159:	mov	rax, rbx
0x515c:	mul	rsi
0x515f:	mov	rbx, rax
0x5162:	jo	0x525f


0x5173:	mov	r8d, 6
0x5179:	xor	r9d, r9d
0x517c:	mov	rax, rbx
0x517f:	mul	rsi
0x5182:	mov	rbx, rax
0x5185:	jo	0x5214


0x5214:	mov	r9d, 1
0x521a:	or	rbx, 0xffffffffffffffff
0x521e:	jmp	0x518b


0x518b:	sub	r8d, 1
0x518f:	jne	0x517c


0x5191:	jmp	0x50e5


0x517c:	mov	rax, rbx
0x517f:	mul	rsi
0x5182:	mov	rbx, rax
0x5185:	jo	0x5214


0x5196:	mov	edx, 0x400
0x519b:	mov	rax, rdx
0x519e:	mul	rbx
0x51a1:	jo	0x513e


0x51a3:	shl	rbx, 0xa
0x51a7:	jmp	0x5070


0x51ac:	mov	rax, rbx
0x51af:	mul	rsi
0x51b2:	jo	0x527d


0x527d:	mov	r8d, 1
0x5283:	or	rax, 0xffffffffffffffff
0x5287:	jmp	0x51bb


0x51b8:	xor	r8d, r8d
0x51bb:	mul	rsi
0x51be:	jno	0x5057


0x51bb:	mul	rsi
0x51be:	jno	0x5057


0x51c4:	mov	r8d, 1
0x51ca:	or	rax, 0xffffffffffffffff
0x51ce:	jmp	0x5057


0x528c:	nop	dword ptr [rax]


0x5341:	nop	word ptr cs:[rax + rax]
0x534b:	nop	dword ptr [rax + rax]


0x53d3:	nop	word ptr cs:[rax + rax]
0x53dd:	nop	dword ptr [rax]


0x545e:	nop	


0x547f:	nop	


0x549b:	nop	dword ptr [rax + rax]


0x56a8:	nop	dword ptr [rax + rax]


0x572d:	nop	dword ptr [rax]


0x57cc:	nop	dword ptr [rax]


0x584b:	nop	dword ptr [rax + rax]


0x58e7:	nop	word ptr [rax + rax]


0x6a0f:	nop	


0x6c0e:	nop	


0x6e57:	mov	r11d, 0x10
0x6e5d:	mov	ebx, 0x73
0x6e62:	nop	word ptr [rax + rax]
0x6e68:	cmp	r13, -1
0x6e6c:	je	0x7527


0x7527:	mov	rsi, qword ptr [rsp + 0x20]
0x752c:	cmp	rsi, -1
0x7530:	lea	rax, [rsi + 1]
0x7534:	mov	qword ptr [r12 + 0x50], rsi
0x7539:	je	0x745b


0x6e72:	mov	qword ptr [r12 + 0x50], r13
0x6e77:	cmp	r9, r13
0x6e7a:	mov	rcx, qword ptr [r15 + 8]
0x6e7e:	jbe	0x74a0


0x753f:	mov	r13, qword ptr [rsp + 0x20]
0x7544:	mov	qword ptr [rsp + 0x20], rax
0x7549:	jmp	0x6e77


0x74a0:	add	r9, r9
0x74a3:	lea	rax, [r13 + 1]
0x74a7:	cmp	r9, r13
0x74aa:	cmovbe	r9, rax
0x74ae:	movabs	rax, 0x7ffffffffffffff
0x74b8:	cmp	r9, rax
0x74bb:	ja	0x789b


0x6e84:	mov	rax, qword ptr [r15]
0x6e87:	mov	rdx, rax
0x6e8a:	shl	rdx, 5
0x6e8e:	add	rdx, rcx
0x6e91:	cmp	rax, r13
0x6e94:	ja	0x6eb6


0x6e77:	cmp	r9, r13
0x6e7a:	mov	rcx, qword ptr [r15 + 8]
0x6e7e:	jbe	0x74a0


0x74c1:	mov	rsi, r9
0x74c4:	mov	qword ptr [rsp + 0x48], r9
0x74c9:	mov	qword ptr [rsp + 0x40], r10
0x74ce:	shl	rsi, 5
0x74d2:	cmp	qword ptr [rsp + 8], rcx
0x74d7:	mov	qword ptr [rsp + 0x38], r8
0x74dc:	mov	dword ptr [rsp + 0x30], r11d
0x74e1:	je	0x7581


0x6eb6:	shl	r13, 5
0x6eba:	lea	rax, [rcx + r13]
0x6ebe:	mov	edx, dword ptr [rax]
0x6ec0:	test	edx, edx
0x6ec2:	jne	0x7493


0x7581:	mov	rdi, rsi
0x7584:	call	0x1750


0x74e7:	mov	rdi, rcx
0x74ea:	call	0x1790


0x6ea0:	add	rax, 1
0x6ea4:	mov	dword ptr [rdx], 0
0x6eaa:	add	rdx, 0x20
0x6eae:	cmp	rax, r13
0x6eb1:	jbe	0x6ea0


0x6eb3:	mov	qword ptr [r15], rax
0x6eb6:	shl	r13, 5
0x6eba:	lea	rax, [rcx + r13]
0x6ebe:	mov	edx, dword ptr [rax]
0x6ec0:	test	edx, edx
0x6ec2:	jne	0x7493


0x6ec8:	mov	dword ptr [rax], r11d
0x6ecb:	mov	byte ptr [r12 + 0x48], bl
0x6ed0:	mov	rax, qword ptr [r14]
0x6ed3:	mov	qword ptr [r12 + 8], rbp
0x6ed8:	lea	rbx, [rax + 1]
0x6edc:	cmp	r10, rbx
0x6edf:	mov	qword ptr [r14], rbx
0x6ee2:	ja	0x6f70


0x7493:	cmp	edx, r11d
0x7496:	je	0x6ecb


0x6ee8:	test	r10, r10
0x6eeb:	js	0x7897


0x6f70:	mov	rcx, qword ptr [r14 + 8]
0x6f74:	jmp	0x6c88


0x6ecb:	mov	byte ptr [r12 + 0x48], bl
0x6ed0:	mov	rax, qword ptr [r14]
0x6ed3:	mov	qword ptr [r12 + 8], rbp
0x6ed8:	lea	rbx, [rax + 1]
0x6edc:	cmp	r10, rbx
0x6edf:	mov	qword ptr [r14], rbx
0x6ee2:	ja	0x6f70


0x749c:	jmp	0x745f


0x7897:	mov	rcx, qword ptr [r15 + 8]
0x789b:	cmp	qword ptr [rsp + 8], rcx
0x78a0:	jne	0x7704


0x6ef1:	add	r10, r10
0x6ef4:	movabs	rax, 0x2e8ba2e8ba2e8ba
0x6efe:	cmp	r10, rax
0x6f01:	ja	0x7897


0x6f07:	lea	rax, [r10 + r10*4]
0x6f0b:	mov	rdi, qword ptr [r14 + 8]
0x6f0f:	cmp	qword ptr [rsp + 0x28], rdi
0x6f14:	mov	qword ptr [rsp + 0x40], r9
0x6f19:	mov	qword ptr [rsp + 0x38], r10
0x6f1e:	lea	rax, [r10 + rax*2]
0x6f22:	mov	qword ptr [rsp + 0x30], r8
0x6f27:	lea	rsi, [rax*8]
0x6f2f:	je	0x75ed


0x75ed:	mov	rdi, rsi
0x75f0:	call	0x1750


0x6f35:	call	0x1790


0x6f3a:	test	rax, rax
0x6f3d:	mov	rcx, rax
0x6f40:	mov	r8, qword ptr [rsp + 0x30]
0x6f45:	mov	r10, qword ptr [rsp + 0x38]
0x6f4a:	mov	r9, qword ptr [rsp + 0x40]
0x6f4f:	je	0x7897


0x6f55:	mov	rax, qword ptr [rsp + 0x28]
0x6f5a:	cmp	rax, qword ptr [r14 + 8]
0x6f5e:	mov	rbx, qword ptr [r14]
0x6f61:	je	0x7610


0x7610:	lea	rax, [rbx + rbx*4]
0x7614:	mov	rsi, qword ptr [rsp + 0x28]
0x7619:	mov	rdi, rcx
0x761c:	mov	qword ptr [rsp + 0x40], r9
0x7621:	mov	qword ptr [rsp + 0x38], r10
0x7626:	lea	rdx, [rbx + rax*2]
0x762a:	mov	qword ptr [rsp + 0x30], r8
0x762f:	shl	rdx, 3
0x7633:	call	0x1720


0x6f67:	mov	qword ptr [r14 + 8], rcx
0x6f6b:	jmp	0x6c88


0x7638:	mov	rbx, qword ptr [r14]
0x763b:	mov	rcx, rax
0x763e:	mov	r9, qword ptr [rsp + 0x40]
0x7643:	mov	r10, qword ptr [rsp + 0x38]
0x7648:	mov	r8, qword ptr [rsp + 0x30]
0x764d:	jmp	0x6f67


0x74ef:	test	rax, rax
0x74f2:	mov	rcx, rax
0x74f5:	mov	r11d, dword ptr [rsp + 0x30]
0x74fa:	mov	r8, qword ptr [rsp + 0x38]
0x74ff:	mov	r10, qword ptr [rsp + 0x40]
0x7504:	mov	r9, qword ptr [rsp + 0x48]
0x7509:	je	0x7897


0x750f:	mov	rax, qword ptr [rsp + 8]
0x7514:	cmp	rax, qword ptr [r15 + 8]
0x7518:	je	0x75a9


0x75a9:	mov	rdx, qword ptr [r15]
0x75ac:	mov	rsi, qword ptr [rsp + 8]
0x75b1:	mov	rdi, rcx
0x75b4:	mov	qword ptr [rsp + 0x48], r9
0x75b9:	mov	qword ptr [rsp + 0x40], r10
0x75be:	mov	qword ptr [rsp + 0x38], r8
0x75c3:	mov	dword ptr [rsp + 0x30], r11d
0x75c8:	shl	rdx, 5
0x75cc:	call	0x1720


0x751e:	mov	qword ptr [r15 + 8], rcx
0x7522:	jmp	0x6e84


0x75d1:	mov	r9, qword ptr [rsp + 0x48]
0x75d6:	mov	r10, qword ptr [rsp + 0x40]
0x75db:	mov	rcx, rax
0x75de:	mov	r8, qword ptr [rsp + 0x38]
0x75e3:	mov	r11d, dword ptr [rsp + 0x30]
0x75e8:	jmp	0x751e


0x75f5:	test	rax, rax
0x75f8:	mov	rcx, rax
0x75fb:	mov	r8, qword ptr [rsp + 0x30]
0x7600:	mov	r10, qword ptr [rsp + 0x38]
0x7605:	mov	r9, qword ptr [rsp + 0x40]
0x760a:	je	0x76f9


0x76f9:	mov	rcx, qword ptr [r15 + 8]
0x76fd:	cmp	qword ptr [rsp + 8], rcx
0x7702:	je	0x771c


0x7589:	test	rax, rax
0x758c:	mov	rcx, rax
0x758f:	mov	r11d, dword ptr [rsp + 0x30]
0x7594:	mov	r8, qword ptr [rsp + 0x38]
0x7599:	mov	r10, qword ptr [rsp + 0x40]
0x759e:	mov	r9, qword ptr [rsp + 0x48]
0x75a3:	je	0x770c


0x730c:	cmp	eax, 0xf
0x730f:	mov	r11d, 0x16
0x7315:	jg	0x6e68


0x731b:	test	al, 4
0x731d:	jne	0x6e68


0x6e68:	cmp	r13, -1
0x6e6c:	je	0x7527


0x7323:	cmp	eax, 7
0x7326:	mov	r11d, 0x15
0x732c:	jg	0x6e68


0x7332:	test	al, 2
0x7334:	mov	r11d, 0x12
0x733a:	jne	0x6e68


0x7340:	xor	r11d, r11d
0x7343:	test	al, 1
0x7345:	sete	r11b
0x7349:	add	r11d, 0x13
0x734d:	jmp	0x6e68


0x736b:	cmp	eax, 0xf
0x736e:	mov	r11d, 9
0x7374:	jg	0x6e68


0x737a:	test	al, 4
0x737c:	jne	0x6e68


0x7382:	cmp	eax, 7
0x7385:	mov	r11d, 7
0x738b:	jg	0x6e68


0x7391:	test	al, 2
0x7393:	mov	r11d, 1
0x7399:	jne	0x6e68


0x739f:	and	eax, 1
0x73a2:	cmp	eax, 1
0x73a5:	sbb	r11d, r11d
0x73a8:	and	r11d, 2
0x73ac:	add	r11d, 3
0x73b0:	jmp	0x6e68


0x73cb:	cmp	eax, 0xf
0x73ce:	mov	r11d, 0xc
0x73d4:	jg	0x6e68


0x73da:	xor	r11d, r11d
0x73dd:	test	al, 4
0x73df:	setne	r11b
0x73e3:	add	r11d, 0xb
0x73e7:	jmp	0x6e68


0x73ec:	mov	r11d, 0xe
0x73f2:	mov	ebx, 0x63
0x73f7:	jmp	0x6e68


0x73fc:	cmp	eax, 0xf
0x73ff:	mov	r11d, 0xa
0x7405:	jg	0x6e68


0x740b:	test	al, 4
0x740d:	jne	0x6e68


0x7413:	cmp	eax, 7
0x7416:	mov	r11d, 8
0x741c:	jg	0x6e68


0x7422:	test	al, 2
0x7424:	mov	r11d, 2
0x742a:	jne	0x6e68


0x7430:	and	eax, 1
0x7433:	cmp	eax, 1
0x7436:	sbb	r11d, r11d
0x7439:	and	r11d, 2
0x743d:	add	r11d, 4
0x7441:	jmp	0x6e68


0x78fc:	nop	dword ptr [rax]


0x7965:	nop	
0x7966:	nop	word ptr cs:[rax + rax]


0x7972:	nop	word ptr cs:[rax + rax]
0x797c:	nop	dword ptr [rax]


0x2cb0:	xor	r10d, r10d
0x2cb3:	mov	eax, dword ptr [rsp + 8]
0x2cb7:	cmp	eax, 2
0x2cba:	je	0x3278


0x2ce0:	xor	r10d, r10d
0x2ce3:	cmp	dword ptr [rsp + 8], 2
0x2ce8:	je	0x31f0


0x2d08:	mov	edx, 9
0x2d0d:	mov	ebx, 0x74
0x2d12:	cmp	dword ptr [rsp + 8], 2
0x2d17:	sete	al
0x2d1a:	and	al, byte ptr [rsp + 0xf]
0x2d1e:	jne	0x2e6e


0x2d48:	mov	edx, 8
0x2d4d:	mov	ebx, 0x62
0x2d52:	jmp	0x2d24


0x2d58:	cmp	dword ptr [rsp + 8], 2
0x2d5d:	je	0x3130


0x2e00:	cmp	byte ptr [rsp + 0xd], 0
0x2e05:	jne	0x2fd3


0x2e28:	cmp	dword ptr [rsp + 8], 2
0x2e2d:	sete	dl
0x2e30:	xor	eax, eax
0x2e32:	jmp	0x2c18


0x2e40:	mov	edx, 7
0x2e45:	mov	ebx, 0x61
0x2e4a:	jmp	0x2d24


0x2e50:	cmp	dword ptr [rsp + 8], 2
0x2e55:	sete	dl
0x2e58:	test	rbp, rbp
0x2e5b:	jne	0x2c0c


0x2e80:	cmp	dword ptr [rsp + 8], 2
0x2e85:	sete	dl
0x2e88:	xor	r12d, r12d
0x2e8b:	jmp	0x2e61


0x2e90:	cmp	dword ptr [rsp + 8], 2
0x2e95:	mov	ebx, 0x20
0x2e9a:	sete	dl
0x2e9d:	jmp	0x2e61


0x2ea0:	mov	edx, 0xd
0x2ea5:	mov	ebx, 0x72
0x2eaa:	jmp	0x2d12


0x2eb0:	mov	edx, 0xc
0x2eb5:	mov	ebx, 0x66
0x2eba:	jmp	0x2d24


0x2ec0:	mov	edx, 0xb
0x2ec5:	mov	ebx, 0x76
0x2eca:	jmp	0x2d24


0x2ed0:	mov	edx, 0xa
0x2ed5:	mov	ebx, 0x6e
0x2eda:	jmp	0x2d12


0x2f70:	xor	r10d, r10d
0x2f73:	cmp	byte ptr [rsp + 0xd], 0
0x2f78:	jne	0x2d6e


0x2f90:	mov	edx, 0xc
0x2f95:	xor	r10d, r10d
0x2f98:	mov	ebx, 0x66
0x2f9d:	jmp	0x2d24


0x2fa8:	mov	edx, 0xa
0x2fad:	xor	r10d, r10d
0x2fb0:	mov	ebx, 0x6e
0x2fb5:	jmp	0x2d12


0x2fc0:	mov	ebx, 0x61
0x2fc5:	jmp	0x2d90


0x2fd0:	xor	r10d, r10d
0x2fd3:	cmp	dword ptr [rsp + 8], 2
0x2fd8:	sete	dl
0x2fdb:	cmp	byte ptr [rsp + 0xf], 0
0x2fe0:	jne	0x3b7a


0x3070:	cmp	dword ptr [rsp + 8], 2
0x3075:	mov	r12d, r10d
0x3078:	sete	dl
0x307b:	xor	r10d, r10d
0x307e:	xor	eax, eax
0x3080:	jmp	0x2c18


0x3088:	cmp	dword ptr [rsp + 8], 2
0x308d:	sete	dl
0x3090:	xor	r10d, r10d
0x3093:	jmp	0x2e58


0x30a0:	cmp	dword ptr [rsp + 8], 2
0x30a5:	sete	dl
0x30a8:	xor	r10d, r10d
0x30ab:	xor	r12d, r12d
0x30ae:	jmp	0x2e61


0x30b8:	cmp	dword ptr [rsp + 8], 2
0x30bd:	mov	r12d, r10d
0x30c0:	mov	ebx, 0x20
0x30c5:	sete	dl
0x30c8:	xor	r10d, r10d
0x30cb:	jmp	0x2e61


0x30e8:	mov	ebx, 0x76
0x30ed:	jmp	0x2d90


0x30f8:	mov	edx, 9
0x30fd:	xor	r10d, r10d
0x3100:	mov	ebx, 0x74
0x3105:	jmp	0x2d12


0x3110:	mov	ebx, 0x62
0x3115:	jmp	0x2d90


0x36b0:	test	ebx, ebx
0x36b2:	jne	0x3aad


0x5150:	mov	r8d, 5
0x5156:	xor	r9d, r9d
0x5159:	mov	rax, rbx
0x515c:	mul	rsi
0x515f:	mov	rbx, rax
0x5162:	jo	0x525f


0x7358:	xor	r11d, r11d
0x735b:	cmp	eax, 7
0x735e:	setg	r11b
0x7362:	add	r11d, 0xd
0x7366:	jmp	0x6e68


0x73b8:	xor	r11d, r11d
0x73bb:	cmp	eax, 7
0x73be:	setg	r11b
0x73c2:	add	r11d, 0xf
0x73c6:	jmp	0x6e68


0x7450:	mov	r11d, 0x11
0x7456:	jmp	0x6e68


0x19e3:	nop	dword ptr [rax + rax]


0x2006:	nop	word ptr cs:[rax + rax]


0x2057:	nop	word ptr [rax + rax]


0x20a1:	nop	dword ptr [rax]


0x25fe:	nop	


0x261d:	nop	dword ptr [rax]


0x269b:	nop	dword ptr [rax + rax]


0x26b7:	nop	word ptr [rax + rax]


0x270c:	nop	dword ptr [rax]


0x272e:	nop	


0x27cc:	nop	dword ptr [rax]


0x2848:	nop	dword ptr [rax + rax]


0x293c:	nop	dword ptr [rax]


0x298d:	nop	dword ptr [rax]


0x2bb8:	nop	dword ptr [rax + rax]


0x2ca7:	nop	word ptr [rax + rax]


0x2cde:	nop	


0x2d01:	nop	dword ptr [rax]


0x2d42:	nop	word ptr [rax + rax]


0x2d54:	nop	dword ptr [rax]


0x2df8:	nop	dword ptr [rax + rax]


0x2e21:	nop	dword ptr [rax]


0x2e37:	nop	word ptr [rax + rax]


0x2e4f:	nop	


0x2e7e:	nop	


0x2e8d:	nop	dword ptr [rax]


0x2e9f:	nop	


0x2eaf:	nop	


0x2ebf:	nop	


0x2ecf:	nop	


0x2edf:	nop	


0x2f4c:	nop	dword ptr [rax]


0x2f6c:	nop	dword ptr [rax]


0x2f7e:	nop	


0x2f8f:	nop	


0x2fa2:	nop	word ptr [rax + rax]


0x2fba:	nop	word ptr [rax + rax]


0x2fca:	nop	word ptr [rax + rax]


0x306b:	nop	dword ptr [rax + rax]


0x3085:	nop	dword ptr [rax]


0x3098:	nop	dword ptr [rax + rax]


0x30b3:	nop	dword ptr [rax + rax]


0x30e2:	nop	word ptr [rax + rax]


0x30f2:	nop	word ptr [rax + rax]


0x310a:	nop	word ptr [rax + rax]


0x311a:	nop	word ptr [rax + rax]


0x3128:	nop	dword ptr [rax + rax]


0x314f:	nop	


0x31e9:	nop	dword ptr [rax]


0x3232:	nop	word ptr [rax + rax]


0x3258:	nop	dword ptr [rax + rax]


0x3271:	nop	dword ptr [rax]


0x3292:	nop	word ptr [rax + rax]


0x33f8:	nop	dword ptr [rax + rax]


0x350b:	nop	dword ptr [rax + rax]


0x352e:	nop	


0x35f5:	nop	dword ptr [rax]


0x36ad:	nop	dword ptr [rax]


0x38b6:	nop	word ptr cs:[rax + rax]


0x3949:	nop	dword ptr [rax]


0x39bd:	nop	dword ptr [rax]


0x3a9d:	nop	dword ptr [rax]


0x3dab:	nop	dword ptr [rax + rax]


0x4636:	nop	word ptr cs:[rax + rax]


0x46c5:	nop	dword ptr [rax]


0x46e6:	nop	word ptr cs:[rax + rax]


0x4745:	nop	dword ptr [rax]


0x4781:	nop	dword ptr [rax]


0x47c8:	nop	dword ptr [rax + rax]


0x4817:	nop	word ptr [rax + rax]


0x4874:	nop	dword ptr [rax]


0x48a2:	nop	word ptr [rax + rax]


0x4956:	nop	word ptr cs:[rax + rax]


0x49b9:	nop	dword ptr [rax]


0x4c32:	nop	word ptr [rax + rax]


0x4cb9:	nop	dword ptr [rax]


0x4ce4:	nop	dword ptr [rax]


0x4d3d:	nop	dword ptr [rax]


0x4e53:	nop	dword ptr [rax + rax]


0x4ed6:	nop	word ptr cs:[rax + rax]


0x4f33:	nop	dword ptr [rax + rax]


0x4f42:	nop	word ptr [rax + rax]


0x4f72:	nop	word ptr [rax + rax]


0x4f7c:	nop	dword ptr [rax]


0x501b:	nop	dword ptr [rax + rax]


0x514c:	nop	dword ptr [rax]


0x51d3:	nop	dword ptr [rax + rax]


0x54f7:	nop	word ptr [rax + rax]


0x55b9:	nop	dword ptr [rax]


0x560b:	nop	dword ptr [rax + rax]


0x5644:	nop	dword ptr [rax]


0x565b:	nop	dword ptr [rax + rax]


0x56e4:	nop	dword ptr [rax]


0x5701:	nop	dword ptr [rax]


0x5712:	nop	word ptr [rax + rax]


0x576a:	nop	word ptr [rax + rax]


0x57b6:	nop	word ptr cs:[rax + rax]


0x5815:	nop	dword ptr [rax]


0x5873:	nop	dword ptr [rax + rax]


0x589f:	nop	


0x5af4:	nop	dword ptr [rax]


0x5b23:	nop	dword ptr [rax + rax]


0x5e4d:	nop	dword ptr [rax]


0x5f82:	nop	word ptr [rax + rax]


0x60af:	nop	


0x6132:	nop	word ptr [rax + rax]


0x61b3:	nop	dword ptr [rax + rax]


0x61df:	nop	


0x61f4:	nop	dword ptr [rax]


0x6224:	nop	dword ptr [rax]


0x6276:	nop	word ptr cs:[rax + rax]


0x62ac:	nop	dword ptr [rax]


0x62dc:	nop	dword ptr [rax]


0x631b:	nop	dword ptr [rax + rax]


0x6331:	nop	dword ptr [rax]


0x6345:	nop	dword ptr [rax]


0x6351:	nop	dword ptr [rax]


0x63a9:	nop	dword ptr [rax]


0x63c9:	nop	dword ptr [rax]


0x63f2:	nop	word ptr [rax + rax]


0x644d:	nop	dword ptr [rax]


0x645f:	nop	


0x6492:	nop	word ptr [rax + rax]


0x6518:	nop	dword ptr [rax + rax]


0x6528:	nop	dword ptr [rax + rax]


0x655d:	nop	dword ptr [rax]


0x659a:	nop	word ptr [rax + rax]


0x65b3:	nop	dword ptr [rax + rax]


0x65ca:	nop	word ptr [rax + rax]


0x65f9:	nop	dword ptr [rax]


0x6648:	nop	dword ptr [rax + rax]


0x665c:	nop	dword ptr [rax]


0x666b:	nop	dword ptr [rax + rax]


0x667b:	nop	dword ptr [rax + rax]


0x668c:	nop	dword ptr [rax]


0x66d8:	nop	dword ptr [rax + rax]


0x66e8:	nop	dword ptr [rax + rax]


0x66ff:	nop	


0x6716:	nop	word ptr cs:[rax + rax]


0x673a:	nop	word ptr [rax + rax]


0x67b3:	nop	dword ptr [rax + rax]


0x67c8:	nop	dword ptr [rax + rax]


0x681b:	nop	dword ptr [rax + rax]


0x69cd:	nop	dword ptr [rax]


0x6a48:	nop	dword ptr [rax + rax]


0x6c7e:	nop	


0x6cc1:	nop	dword ptr [rax]


0x6d27:	nop	word ptr [rax + rax]


0x6d72:	nop	word ptr [rax + rax]


0x6d88:	nop	dword ptr [rax + rax]


0x6d98:	nop	dword ptr [rax + rax]


0x6da8:	nop	dword ptr [rax + rax]


0x6db8:	nop	dword ptr [rax + rax]


0x6de7:	nop	word ptr [rax + rax]


0x6e0e:	nop	


0x6e2d:	nop	dword ptr [rax]


0x6e35:	nop	dword ptr [rax]


0x6e96:	nop	word ptr cs:[rax + rax]


0x7066:	nop	word ptr cs:[rax + rax]


0x711c:	nop	dword ptr [rax]


0x71fd:	nop	dword ptr [rax]


0x7249:	nop	dword ptr [rax]


0x7352:	nop	word ptr [rax + rax]


0x73b5:	nop	dword ptr [rax]


0x7446:	nop	word ptr cs:[rax + rax]


0x749e:	nop	


0x78ab:	nop	dword ptr [rax + rax]


