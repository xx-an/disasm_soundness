0x11640:	sub	rsp, 8
0x11644:	add	rsp, 8
0x11648:	ret	


0x11630:	mov	rdx, qword ptr [rip + 0x2069d1]
0x11637:	xor	esi, esi
0x11639:	jmp	0x2ad0


0x11620:	ret	


0x115b0:	push	r15
0x115b2:	push	r14
0x115b4:	mov	r15, rdx
0x115b7:	push	r13
0x115b9:	push	r12
0x115bb:	lea	r12, [rip + 0x205a2e]
0x115c2:	push	rbp
0x115c3:	lea	rbp, [rip + 0x205a2e]
0x115ca:	push	rbx
0x115cb:	mov	r13d, edi
0x115ce:	mov	r14, rsi
0x115d1:	sub	rbp, r12
0x115d4:	sub	rsp, 8
0x115d8:	sar	rbp, 3
0x115dc:	call	0x26f0


0x108c0:	push	r15
0x108c2:	push	r14
0x108c4:	lea	rcx, [rsi + 0x20]
0x108c8:	push	r13
0x108ca:	push	r12
0x108cc:	lea	rax, [rdx + 0x10]
0x108d0:	push	rbp
0x108d1:	push	rbx
0x108d2:	mov	r14, rsi
0x108d5:	mov	r15, rdx
0x108d8:	xor	ebx, ebx
0x108da:	mov	r9d, 7
0x108e0:	sub	rsp, 0x58
0x108e4:	mov	r10d, 7
0x108ea:	mov	qword ptr [rsi], 0
0x108f1:	mov	qword ptr [rsi + 8], rcx
0x108f5:	mov	qword ptr [rsp + 0x28], rcx
0x108fa:	mov	r8, -1
0x10901:	mov	qword ptr [rdx], 0
0x10908:	mov	qword ptr [rsp + 8], rax
0x1090d:	mov	qword ptr [rdx + 8], rax
0x10911:	mov	qword ptr [rsp + 0x18], 0
0x1091a:	mov	qword ptr [rsp + 0x10], 0
0x10923:	mov	qword ptr [rsp + 0x20], 0
0x1092c:	jmp	0x1093b


0x106c0:	cmp	qword ptr [rsi], 0
0x106c4:	mov	rax, qword ptr [rsi + 8]
0x106c8:	je	0x1072d


0xf5a0:	push	rbp
0xf5a1:	mov	rbp, rsp
0xf5a4:	push	r15
0xf5a6:	push	r14
0xf5a8:	push	r13
0xf5aa:	push	r12
0xf5ac:	lea	r14, [rbp - 0x3b0]
0xf5b3:	push	rbx
0xf5b4:	mov	rbx, rdx
0xf5b7:	mov	r12, rcx
0xf5ba:	mov	rdx, r14
0xf5bd:	sub	rsp, 0x408
0xf5c4:	mov	qword ptr [rbp - 0x418], rsi
0xf5cb:	lea	rsi, [rbp - 0x2c0]
0xf5d2:	mov	qword ptr [rbp - 0x3e8], rdi
0xf5d9:	mov	rdi, rbx
0xf5dc:	mov	qword ptr [rbp - 0x410], r14
0xf5e3:	mov	rax, qword ptr fs:[0x28]
0xf5ec:	mov	qword ptr [rbp - 0x38], rax
0xf5f0:	xor	eax, eax
0xf5f2:	mov	qword ptr [rbp - 0x408], rsi
0xf5f9:	call	0x108c0


0xf590:	or	dword ptr [rdi], 0x20
0xf593:	ret	


0xf540:	sub	rsp, 0x18
0xf544:	mov	rax, qword ptr fs:[0x28]
0xf54d:	mov	qword ptr [rsp + 8], rax
0xf552:	xor	eax, eax
0xf554:	mov	byte ptr [rsp + 7], 0
0xf559:	push	r9
0xf55b:	xor	r9d, r9d
0xf55e:	push	r8
0xf560:	xor	r8d, r8d
0xf563:	lea	rax, [rsp + 0x17]
0xf568:	push	rax
0xf569:	push	-1
0xf56b:	call	0xda80


0xda80:	push	r15
0xda82:	push	r14
0xda84:	mov	r11, rdx
0xda87:	push	r13
0xda89:	push	r12
0xda8b:	mov	r13, rcx
0xda8e:	push	rbp
0xda8f:	push	rbx
0xda90:	mov	rbp, rdi
0xda93:	sub	rsp, 0x4c8
0xda9a:	mov	rdi, qword ptr [rcx + 0x30]
0xda9e:	mov	r15d, dword ptr [rcx + 8]
0xdaa2:	mov	rax, qword ptr [rsp + 0x508]
0xdaaa:	mov	qword ptr [rsp + 8], rsi
0xdaaf:	mov	dword ptr [rsp + 0x2c], r9d
0xdab4:	movsxd	r10, dword ptr [rsp + 0x500]
0xdabc:	mov	byte ptr [rsp + 0x2b], r8b
0xdac1:	mov	qword ptr [rsp + 0x18], rax
0xdac6:	mov	rax, qword ptr [rsp + 0x510]
0xdace:	mov	qword ptr [rsp + 0x10], rax
0xdad3:	mov	rax, qword ptr fs:[0x28]
0xdadc:	mov	qword ptr [rsp + 0x4b8], rax
0xdae4:	xor	eax, eax
0xdae6:	lea	rax, [rip + 0x57c2]
0xdaed:	test	rdi, rdi
0xdaf0:	cmovne	rax, rdi
0xdaf4:	cmp	r15d, 0xc
0xdaf8:	mov	qword ptr [rsp + 0x20], rax
0xdafd:	jle	0xdbf0


0xda30:	test	rdx, rdx
0xda33:	push	r12
0xda35:	push	rbp
0xda36:	mov	rbp, rdi
0xda39:	push	rbx
0xda3a:	je	0xda69


0xd9e0:	test	rdx, rdx
0xd9e3:	push	r12
0xd9e5:	push	rbp
0xd9e6:	mov	rbp, rdi
0xd9e9:	push	rbx
0xd9ea:	je	0xda19


0xd9a0:	sub	rsp, 8
0xd9a4:	mov	edi, 0xe
0xd9a9:	call	0x2a00


0xd940:	sub	rsp, 8
0xd944:	xor	esi, esi
0xd946:	call	0x2a50


0xd8c0:	push	r12
0xd8c2:	push	rbp
0xd8c3:	mov	rbp, rdi
0xd8c6:	push	rbx
0xd8c7:	call	0x27c0


0xd7c0:	push	r13
0xd7c2:	push	r12
0xd7c4:	mov	rax, rsi
0xd7c7:	push	rbp
0xd7c8:	push	rbx
0xd7c9:	mov	r13, rdi
0xd7cc:	sub	rsp, 0x7f8
0xd7d3:	lea	r12, [rsp + 0x10]
0xd7d8:	lea	rsi, [rsp + 8]
0xd7dd:	mov	qword ptr [rsp + 8], 0x7d0
0xd7e6:	mov	rcx, qword ptr fs:[0x28]
0xd7ef:	mov	qword ptr [rsp + 0x7e8], rcx
0xd7f7:	xor	ecx, ecx
0xd7f9:	mov	rdi, r12
0xd7fc:	mov	rcx, rdx
0xd7ff:	mov	rdx, rax
0xd802:	call	0xf5a0


0xd670:	push	r12
0xd672:	push	rbp
0xd673:	push	rbx
0xd674:	mov	rbx, rsi
0xd677:	sub	rsp, 0x50
0xd67b:	mov	rax, qword ptr fs:[0x28]
0xd684:	mov	qword ptr [rsp + 0x48], rax
0xd689:	xor	eax, eax
0xd68b:	test	rdi, rdi
0xd68e:	je	0xd790


0xd5c0:	push	r13
0xd5c2:	push	r12
0xd5c4:	push	rbp
0xd5c5:	push	rbx
0xd5c6:	mov	rbp, rsi
0xd5c9:	sub	rsp, 8
0xd5cd:	test	rdi, rdi
0xd5d0:	je	0xd640


0xd5b0:	cmp	rdi, 1
0xd5b4:	je	0xd5bb


0xd4d0:	push	r12
0xd4d2:	push	rbp
0xd4d3:	mov	rbp, rdi
0xd4d6:	push	rbx
0xd4d7:	lea	rdi, [rip + 0x42b0]
0xd4de:	sub	rsp, 0x10
0xd4e2:	call	0x2730


0xd390:	push	r15
0xd392:	push	r14
0xd394:	mov	eax, 1
0xd399:	push	r13
0xd39b:	push	r12
0xd39d:	push	rbp
0xd39e:	push	rbx
0xd39f:	sub	rsp, 8
0xd3a3:	mov	rbp, qword ptr [rsi + 0x30]
0xd3a7:	test	rbp, rbp
0xd3aa:	je	0xd440


0xd300:	test	rdi, rdi
0xd303:	push	r12
0xd305:	push	rbp
0xd306:	push	rbx
0xd307:	je	0xd368


0xd2a0:	push	r13
0xd2a2:	push	r12
0xd2a4:	push	rbp
0xd2a5:	push	rbx
0xd2a6:	mov	rbp, rdi
0xd2a9:	sub	rsp, 8
0xd2ad:	call	0x2780


0xd270:	test	rdi, rdi
0xd273:	je	0xd298


0xd240:	test	rdi, rdi
0xd243:	je	0xd260


0xd1b0:	push	r13
0xd1b2:	push	r12
0xd1b4:	mov	r13, rsi
0xd1b7:	push	rbp
0xd1b8:	push	rbx
0xd1b9:	mov	rbx, rdi
0xd1bc:	mov	r12, rdx
0xd1bf:	sub	rsp, 0x18
0xd1c3:	mov	rax, qword ptr fs:[0x28]
0xd1cc:	mov	qword ptr [rsp + 8], rax
0xd1d1:	xor	eax, eax
0xd1d3:	lea	rax, [rsp + 4]
0xd1d8:	test	rdi, rdi
0xd1db:	cmove	rbx, rax
0xd1df:	mov	rdi, rbx
0xd1e2:	call	0x2870


0xd150:	mov	rax, qword ptr [rdi + 8]
0xd154:	cmp	qword ptr [rdi + 0x10], rax
0xd158:	je	0xd160


0xd110:	test	rdi, rdi
0xd113:	push	rbx
0xd114:	mov	rbx, rdi
0xd117:	je	0xd12a


0xd090:	push	r12
0xd092:	push	rbp
0xd093:	push	rbx
0xd094:	mov	rbx, rdi
0xd097:	call	0x29a0


0xd050:	lea	rsi, [rip + 0x7c58]
0xd057:	sub	rsp, 8
0xd05b:	mov	edx, 5
0xd060:	xor	edi, edi
0xd062:	call	0x2820


0xd030:	push	rbx
0xd031:	mov	rbx, rdi
0xd034:	call	0x2840


0xd000:	push	rbp
0xd001:	push	rbx
0xd002:	mov	rbp, rdi
0xd005:	mov	rdi, rsi
0xd008:	mov	rbx, rsi
0xd00b:	sub	rsp, 8
0xd00f:	call	0xce00


0xcfd0:	mov	rax, rdi
0xcfd3:	sub	rsp, 8
0xcfd7:	mul	rsi
0xcfda:	seto	dl
0xcfdd:	test	rax, rax
0xcfe0:	js	0xcff9


0xcfb0:	push	rbx
0xcfb1:	mov	rbx, rdi
0xcfb4:	call	0xce00


0xcf60:	test	rdi, rdi
0xcf63:	mov	rax, qword ptr [rsi]
0xcf66:	je	0xcf90


0xced0:	test	rdi, rdi
0xced3:	mov	r9, rdx
0xced6:	mov	rcx, qword ptr [rsi]
0xced9:	je	0xcf10


0xcea0:	mov	rax, rsi
0xcea3:	mul	rdx
0xcea6:	mov	rsi, rax
0xcea9:	seto	al
0xceac:	test	rsi, rsi
0xceaf:	js	0xcebb


0xce60:	test	rsi, rsi
0xce63:	push	rbx
0xce64:	mov	rbx, rsi
0xce67:	jne	0xce6e


0xce50:	jmp	0xce00


0xce20:	mov	rax, rdi
0xce23:	mul	rsi
0xce26:	mov	rdi, rax
0xce29:	seto	al
0xce2c:	test	rdi, rdi
0xce2f:	js	0xce3b


0xce00:	push	rbx
0xce01:	mov	rbx, rdi
0xce04:	call	0x29e0


0xcd80:	push	rbx
0xcd81:	lea	rsi, [rip + 0x7c1a]
0xcd88:	mov	edx, 5
0xcd8d:	xor	edi, edi
0xcd8f:	call	0x2820


0xcca0:	push	rbp
0xcca1:	push	rbx
0xcca2:	mov	r10d, 0x20
0xcca8:	xor	r11d, r11d
0xccab:	sub	rsp, 0xb8
0xccb2:	mov	rax, qword ptr fs:[0x28]
0xccbb:	mov	qword ptr [rsp + 0x78], rax
0xccc0:	xor	eax, eax
0xccc2:	lea	rax, [rsp + 0xd0]
0xccca:	mov	qword ptr [rsp + 0xa0], r8
0xccd2:	lea	rbx, [rsp + 0xd0]
0xccda:	lea	r8, [rsp + 0x20]
0xccdf:	mov	qword ptr [rsp + 0xa8], r9
0xcce7:	mov	dword ptr [rsp + 8], 0x20
0xccef:	mov	qword ptr [rsp + 0x10], rax
0xccf4:	lea	rax, [rsp + 0x80]
0xccfc:	xor	r9d, r9d
0xccff:	mov	qword ptr [rsp + 0x18], rax
0xcd04:	mov	rbp, rax
0xcd07:	nop	word ptr [rax + rax]
0xcd10:	cmp	r10d, 0x2f
0xcd14:	ja	0xcd6c


0xcc20:	sub	rsp, 0x68
0xcc24:	mov	r10, r8
0xcc27:	xor	r9d, r9d
0xcc2a:	mov	rax, qword ptr fs:[0x28]
0xcc33:	mov	qword ptr [rsp + 0x58], rax
0xcc38:	xor	eax, eax
0xcc3a:	mov	r8, rsp
0xcc3d:	nop	dword ptr [rax]
0xcc40:	mov	eax, dword ptr [r10]
0xcc43:	cmp	eax, 0x2f
0xcc46:	ja	0xcc8a


0xcc00:	xor	r9d, r9d
0xcc03:	cmp	qword ptr [r8], 0
0xcc07:	je	0xcc1b


0xc7e0:	push	r15
0xc7e2:	push	r14
0xc7e4:	push	r13
0xc7e6:	push	r12
0xc7e8:	mov	r12, r9
0xc7eb:	push	rbp
0xc7ec:	push	rbx
0xc7ed:	mov	rbp, rdi
0xc7f0:	mov	rbx, r8
0xc7f3:	sub	rsp, 0x28
0xc7f7:	test	rsi, rsi
0xc7fa:	je	0xc918


0xc750:	push	rbp
0xc751:	push	rbx
0xc752:	mov	rsi, rdi
0xc755:	mov	rbp, rdi
0xc758:	xor	edi, edi
0xc75a:	sub	rsp, 0x28
0xc75e:	mov	rax, qword ptr fs:[0x28]
0xc767:	mov	qword ptr [rsp + 0x18], rax
0xc76c:	xor	eax, eax
0xc76e:	call	0x2a10


0xc730:	lea	rcx, [rip + 0x20b909]
0xc737:	mov	rsi, rdi
0xc73a:	mov	rdx, -1
0xc741:	xor	edi, edi
0xc743:	jmp	0xbdf0


0xc710:	lea	rcx, [rip + 0x20b929]
0xc717:	mov	rdx, -1
0xc71e:	jmp	0xbdf0


0xc6f0:	lea	rcx, [rip + 0x20b949]
0xc6f7:	mov	rdx, rsi
0xc6fa:	mov	rsi, rdi
0xc6fd:	xor	edi, edi
0xc6ff:	jmp	0xbdf0


0xc6e0:	lea	rcx, [rip + 0x20b959]
0xc6e7:	jmp	0xbdf0


0xc6c0:	mov	r8, rcx
0xc6c3:	mov	rcx, rdx
0xc6c6:	mov	rdx, rsi
0xc6c9:	mov	rsi, rdi
0xc6cc:	xor	edi, edi
0xc6ce:	jmp	0xc5f0


0xc6a0:	mov	rcx, rdx
0xc6a3:	mov	r8, -1
0xc6aa:	mov	rdx, rsi
0xc6ad:	mov	rsi, rdi
0xc6b0:	xor	edi, edi
0xc6b2:	jmp	0xc5f0


0xc690:	mov	r8, -1
0xc697:	jmp	0xc5f0


0xc5f0:	sub	rsp, 0x48
0xc5f4:	mov	r9, rcx
0xc5f7:	mov	rcx, qword ptr [rip + 0x20bc52]
0xc5fe:	movdqa	xmm0, xmmword ptr [rip + 0x20bc1a]
0xc606:	mov	rax, qword ptr fs:[0x28]
0xc60f:	mov	qword ptr [rsp + 0x38], rax
0xc614:	xor	eax, eax
0xc616:	movaps	xmmword ptr [rsp], xmm0
0xc61a:	test	rsi, rsi
0xc61d:	mov	qword ptr [rsp + 0x30], rcx
0xc622:	mov	dword ptr [rsp], 0xa
0xc629:	movdqa	xmm0, xmmword ptr [rip + 0x20bbff]
0xc631:	movaps	xmmword ptr [rsp + 0x10], xmm0
0xc636:	movdqa	xmm0, xmmword ptr [rip + 0x20bc02]
0xc63e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0xc643:	je	0xc677


0xc560:	sub	rsp, 0x48
0xc564:	mov	rax, rdx
0xc567:	mov	rdx, qword ptr fs:[0x28]
0xc570:	mov	qword ptr [rsp + 0x38], rdx
0xc575:	xor	edx, edx
0xc577:	cmp	esi, 0xa
0xc57a:	je	0xc5e4


0xc550:	mov	edx, 0x3a
0xc555:	jmp	0xc480


0xc530:	mov	edx, 0x3a
0xc535:	mov	rsi, -1
0xc53c:	jmp	0xc480


0xc520:	movsx	edx, sil
0xc524:	mov	rsi, -1
0xc52b:	jmp	0xc480


0xc480:	sub	rsp, 0x48
0xc484:	mov	ecx, edx
0xc486:	mov	rax, qword ptr fs:[0x28]
0xc48f:	mov	qword ptr [rsp + 0x38], rax
0xc494:	xor	eax, eax
0xc496:	mov	rax, qword ptr [rip + 0x20bdb3]
0xc49d:	mov	r8, rsp
0xc4a0:	and	ecx, 0x1f
0xc4a3:	movdqa	xmm0, xmmword ptr [rip + 0x20bd75]
0xc4ab:	mov	qword ptr [rsp + 0x30], rax
0xc4b0:	mov	eax, edx
0xc4b2:	movaps	xmmword ptr [rsp], xmm0
0xc4b6:	shr	al, 5
0xc4b9:	movzx	eax, al
0xc4bc:	lea	r9, [r8 + rax*4 + 8]
0xc4c1:	movdqa	xmm0, xmmword ptr [rip + 0x20bd67]
0xc4c9:	movaps	xmmword ptr [rsp + 0x10], xmm0
0xc4ce:	movdqa	xmm0, xmmword ptr [rip + 0x20bd6a]
0xc4d6:	movaps	xmmword ptr [rsp + 0x20], xmm0
0xc4db:	mov	edx, dword ptr [r9]
0xc4de:	mov	eax, edx
0xc4e0:	shr	eax, cl
0xc4e2:	not	eax
0xc4e4:	and	eax, 1
0xc4e7:	shl	eax, cl
0xc4e9:	mov	rcx, r8
0xc4ec:	xor	eax, edx
0xc4ee:	mov	rdx, rsi
0xc4f1:	mov	rsi, rdi
0xc4f4:	mov	dword ptr [r9], eax
0xc4f7:	xor	edi, edi
0xc4f9:	call	0xbdf0


0xc470:	mov	rcx, rdx
0xc473:	mov	rdx, rsi
0xc476:	mov	esi, edi
0xc478:	xor	edi, edi
0xc47a:	jmp	0xc3d0


0xc460:	mov	rdx, rsi
0xc463:	mov	esi, edi
0xc465:	xor	edi, edi
0xc467:	jmp	0xc340


0xc3d0:	sub	rsp, 0x48
0xc3d4:	mov	rax, rdx
0xc3d7:	mov	rdx, rcx
0xc3da:	mov	rcx, qword ptr fs:[0x28]
0xc3e3:	mov	qword ptr [rsp + 0x38], rcx
0xc3e8:	xor	ecx, ecx
0xc3ea:	cmp	esi, 0xa
0xc3ed:	je	0xc450


0xc340:	sub	rsp, 0x48
0xc344:	mov	rax, rdx
0xc347:	mov	rdx, qword ptr fs:[0x28]
0xc350:	mov	qword ptr [rsp + 0x38], rdx
0xc355:	xor	edx, edx
0xc357:	cmp	esi, 0xa
0xc35a:	je	0xc3c4


0xc320:	lea	rcx, [rip + 0x20bef9]
0xc327:	mov	rdx, rsi
0xc32a:	mov	rsi, rdi
0xc32d:	xor	edi, edi
0xc32f:	jmp	0xbdf0


0xc300:	lea	rcx, [rip + 0x20bf19]
0xc307:	mov	rsi, rdi
0xc30a:	mov	rdx, -1
0xc311:	xor	edi, edi
0xc313:	jmp	0xbdf0


0xc2f0:	lea	rcx, [rip + 0x20bf29]
0xc2f7:	jmp	0xbdf0


0xc2d0:	lea	rcx, [rip + 0x20bf49]
0xc2d7:	mov	rdx, -1
0xc2de:	jmp	0xbdf0


0xc230:	mov	eax, dword ptr [rip + 0x20be42]
0xc236:	push	r12
0xc238:	mov	r12, qword ptr [rip + 0x20be41]
0xc23f:	push	rbp
0xc240:	push	rbx
0xc241:	cmp	eax, 1
0xc244:	jle	0xc271


0xc220:	mov	rcx, rdx
0xc223:	xor	edx, edx
0xc225:	jmp	0xc130


0xc130:	push	r15
0xc132:	push	r14
0xc134:	lea	rax, [rip + 0x20c0e5]
0xc13b:	push	r13
0xc13d:	push	r12
0xc13f:	mov	r12, rdx
0xc142:	push	rbp
0xc143:	push	rbx
0xc144:	mov	rbx, rcx
0xc147:	mov	r14, rdi
0xc14a:	mov	r15, rsi
0xc14d:	sub	rsp, 0x38
0xc151:	test	rcx, rcx
0xc154:	cmove	rbx, rax
0xc158:	xor	ebp, ebp
0xc15a:	call	0x2780


0xc0b0:	push	r15
0xc0b2:	push	r14
0xc0b4:	lea	rax, [rip + 0x20c165]
0xc0bb:	push	r13
0xc0bd:	push	r12
0xc0bf:	mov	r13, rdi
0xc0c2:	push	rbp
0xc0c3:	push	rbx
0xc0c4:	mov	rbx, r8
0xc0c7:	mov	r14, rsi
0xc0ca:	mov	r15, rdx
0xc0cd:	sub	rsp, 0x18
0xc0d1:	test	r8, r8
0xc0d4:	cmove	rbx, rax
0xc0d8:	mov	qword ptr [rsp + 8], rcx
0xc0dd:	call	0x2780


0xc080:	lea	rax, [rip + 0x20c199]
0xc087:	test	rdi, rdi
0xc08a:	cmove	rdi, rax
0xc08e:	test	rsi, rsi
0xc091:	mov	dword ptr [rdi], 0xa
0xc097:	je	0xc0a7


0xc060:	lea	rax, [rip + 0x20c1b9]
0xc067:	test	rdi, rdi
0xc06a:	cmove	rdi, rax
0xc06e:	mov	eax, dword ptr [rdi + 4]
0xc071:	mov	dword ptr [rdi + 4], esi
0xc074:	ret	


0xc020:	lea	rax, [rip + 0x20c1f9]
0xc027:	test	rdi, rdi
0xc02a:	mov	ecx, esi
0xc02c:	cmove	rdi, rax
0xc030:	mov	eax, esi
0xc032:	and	ecx, 0x1f
0xc035:	shr	al, 5
0xc038:	movzx	eax, al
0xc03b:	lea	rdi, [rdi + rax*4 + 8]
0xc040:	mov	esi, dword ptr [rdi]
0xc042:	mov	eax, esi
0xc044:	shr	eax, cl
0xc046:	xor	edx, eax
0xc048:	and	eax, 1
0xc04b:	and	edx, 1
0xc04e:	shl	edx, cl
0xc050:	xor	edx, esi
0xc052:	mov	dword ptr [rdi], edx
0xc054:	ret	


0xc000:	lea	rax, [rip + 0x20c219]
0xc007:	test	rdi, rdi
0xc00a:	cmove	rdi, rax
0xc00e:	mov	dword ptr [rdi], esi
0xc010:	ret	


0xbfe0:	lea	rax, [rip + 0x20c239]
0xbfe7:	test	rdi, rdi
0xbfea:	cmove	rdi, rax
0xbfee:	mov	eax, dword ptr [rdi]
0xbff0:	ret	


0xbfa0:	push	r12
0xbfa2:	push	rbp
0xbfa3:	push	rbx
0xbfa4:	mov	rbx, rdi
0xbfa7:	call	0x2780


0xbdf0:	push	r15
0xbdf2:	push	r14
0xbdf4:	movsxd	r15, edi
0xbdf7:	push	r13
0xbdf9:	push	r12
0xbdfb:	mov	r14, rdx
0xbdfe:	push	rbp
0xbdff:	push	rbx
0xbe00:	mov	rbp, rcx
0xbe03:	sub	rsp, 0x28
0xbe07:	mov	qword ptr [rsp + 8], rsi
0xbe0c:	call	0x2780


0xabb0:	push	r15
0xabb2:	push	r14
0xabb4:	mov	r15d, r8d
0xabb7:	push	r13
0xabb9:	push	r12
0xabbb:	mov	r14, rdi
0xabbe:	push	rbp
0xabbf:	push	rbx
0xabc0:	mov	ebx, r9d
0xabc3:	mov	r13, rsi
0xabc6:	mov	rbp, rcx
0xabc9:	and	ebx, 2
0xabcc:	sub	rsp, 0xb8
0xabd3:	mov	rax, qword ptr [rsp + 0xf0]
0xabdb:	mov	qword ptr [rsp + 0x10], rdx
0xabe0:	mov	dword ptr [rsp + 8], r8d
0xabe5:	mov	dword ptr [rsp + 0x78], r9d
0xabea:	mov	qword ptr [rsp + 0x20], rax
0xabef:	mov	rax, qword ptr [rsp + 0xf8]
0xabf7:	mov	qword ptr [rsp + 0x68], rax
0xabfc:	mov	rax, qword ptr [rsp + 0x100]
0xac04:	mov	qword ptr [rsp + 0x60], rax
0xac09:	mov	rax, qword ptr fs:[0x28]
0xac12:	mov	qword ptr [rsp + 0xa8], rax
0xac1a:	xor	eax, eax
0xac1c:	call	0x2830


0xaac0:	push	rbp
0xaac1:	push	rbx
0xaac2:	mov	rbp, rdi
0xaac5:	mov	ebx, esi
0xaac7:	sub	rsp, 8
0xaacb:	call	0xd9a0


0xaa20:	test	rdi, rdi
0xaa23:	push	rbx
0xaa24:	je	0xaa9d


0xa730:	push	r15
0xa732:	push	r14
0xa734:	push	r13
0xa736:	push	r12
0xa738:	mov	r12, rdi
0xa73b:	push	rbp
0xa73c:	push	rbx
0xa73d:	mov	ebp, edx
0xa73f:	mov	rdi, rsi
0xa742:	mov	rbx, rsi
0xa745:	sub	rsp, 0xd8
0xa74c:	mov	rax, qword ptr fs:[0x28]
0xa755:	mov	qword ptr [rsp + 0xc8], rax
0xa75d:	xor	eax, eax
0xa75f:	call	0x2840


0xa670:	push	rbp
0xa671:	push	rbx
0xa672:	mov	rbx, rdi
0xa675:	sub	rsp, 0x18
0xa679:	mov	rax, qword ptr fs:[0x28]
0xa682:	mov	qword ptr [rsp + 8], rax
0xa687:	xor	eax, eax
0xa689:	cmp	rdx, 1
0xa68d:	je	0xa6e8


0xa600:	push	r14
0xa602:	push	r13
0xa604:	mov	r14, rdx
0xa607:	push	r12
0xa609:	push	rbp
0xa60a:	mov	r12, rdi
0xa60d:	push	rbx
0xa60e:	lea	rdi, [rip + 0x7179]
0xa615:	mov	r13, rsi
0xa618:	sub	rsp, 0x10
0xa61c:	call	0x2730


0x8890:	push	r15
0x8892:	push	r14
0x8894:	mov	r14, rdx
0x8897:	push	r13
0x8899:	push	r12
0x889b:	push	rbp
0x889c:	push	rbx
0x889d:	mov	rbp, rsi
0x88a0:	sub	rsp, 0x458
0x88a7:	mov	qword ptr [rsp + 0x28], rdi
0x88ac:	mov	rdi, rsi
0x88af:	mov	dword ptr [rsp + 0x20], ecx
0x88b3:	mov	rax, qword ptr fs:[0x28]
0x88bc:	mov	qword ptr [rsp + 0x448], rax
0x88c4:	xor	eax, eax
0x88c6:	mov	qword ptr [rsp], r8
0x88ca:	mov	qword ptr [rsp + 0x10], r9
0x88cf:	call	0x2840


0x6c80:	push	r15
0x6c82:	push	r14
0x6c84:	xor	edx, edx
0x6c86:	push	r13
0x6c88:	push	r12
0x6c8a:	mov	r11, rdi
0x6c8d:	push	rbp
0x6c8e:	push	rbx
0x6c8f:	mov	r14d, 0x26
0x6c95:	xor	ebx, ebx
0x6c97:	mov	r9d, 0xfffffffe
0x6c9d:	sub	rsp, 0x5c8
0x6ca4:	lea	r15, [rsp + 0x110]
0x6cac:	lea	r13, [rsp + 0x140]
0x6cb4:	mov	word ptr [rsp + 0x110], dx
0x6cbc:	mov	rax, qword ptr fs:[0x28]
0x6cc5:	mov	qword ptr [rsp + 0x5b8], rax
0x6ccd:	xor	eax, eax
0x6ccf:	mov	r12, r15
0x6cd2:	mov	dword ptr [rsp + 0x34], 0
0x6cda:	movsx	r8d, r14b
0x6cde:	cmp	r8d, -0x5d
0x6ce2:	je	0x6d20


0x68a0:	push	r13
0x68a2:	push	r12
0x68a4:	mov	edx, 5
0x68a9:	push	rbp
0x68aa:	push	rbx
0x68ab:	mov	rbx, rsi
0x68ae:	lea	rsi, [rip + 0xc770]
0x68b5:	mov	rbp, rdi
0x68b8:	xor	edi, edi
0x68ba:	sub	rsp, 0x78
0x68be:	mov	rax, qword ptr fs:[0x28]
0x68c7:	mov	qword ptr [rsp + 0x68], rax
0x68cc:	xor	eax, eax
0x68ce:	call	0x2820


0x67a0:	push	rbp
0x67a1:	push	rbx
0x67a2:	mov	rbp, rsi
0x67a5:	mov	rbx, rdi
0x67a8:	sub	rsp, 8
0x67ac:	cmp	byte ptr [rdi + 0xe0], 0
0x67b3:	je	0x6808


0x66e0:	push	r12
0x66e2:	push	rbp
0x66e3:	mov	rcx, rdi
0x66e6:	push	rbx
0x66e7:	mov	rbx, rdx
0x66ea:	lea	rdx, [rip + 0xc981]
0x66f1:	mov	r12, rsi
0x66f4:	xor	r9d, r9d
0x66f7:	xor	r8d, r8d
0x66fa:	sub	rsp, 0x30
0x66fe:	mov	esi, 0x64
0x6703:	mov	rdi, rbx
0x6706:	mov	rax, qword ptr fs:[0x28]
0x670f:	mov	qword ptr [rsp + 0x28], rax
0x6714:	xor	eax, eax
0x6716:	call	0xf540


0x64f0:	push	rbp
0x64f1:	push	rbx
0x64f2:	mov	rbx, rsi
0x64f5:	lea	rsi, [rip + 0xcb29]
0x64fc:	mov	rbp, rdi
0x64ff:	mov	edx, 5
0x6504:	sub	rsp, 8
0x6508:	xor	edi, edi
0x650a:	call	0x2820


0x6430:	push	r12
0x6432:	mov	r12, rdi
0x6435:	push	rbp
0x6436:	mov	rbp, rsi
0x6439:	push	rbx
0x643a:	lea	rsi, [rip + 0xcbdc]
0x6441:	lea	rbx, [rip + 0x211298]
0x6448:	jmp	0x645c


0x6400:	mov	eax, dword ptr [rdi]
0x6402:	mov	edx, dword ptr [rdi + 4]
0x6405:	xor	eax, dword ptr [rsi]
0x6407:	xor	edx, dword ptr [rsi + 4]
0x640a:	or	eax, edx
0x640c:	mov	edx, dword ptr [rdi + 8]
0x640f:	xor	edx, dword ptr [rsi + 8]
0x6412:	or	eax, edx
0x6414:	mov	edx, dword ptr [rdi + 0xc]
0x6417:	xor	edx, dword ptr [rsi + 0xc]
0x641a:	or	eax, edx
0x641c:	mov	edx, dword ptr [rdi + 0x10]
0x641f:	xor	edx, dword ptr [rsi + 0x10]
0x6422:	or	eax, edx
0x6424:	mov	edx, dword ptr [rdi + 0x14]
0x6427:	xor	edx, dword ptr [rsi + 0x14]
0x642a:	or	eax, edx
0x642c:	sete	al
0x642f:	ret	


0x6320:	cmp	rcx, 2
0x6324:	mov	r9, rdx
0x6327:	jg	0x6370


0x62e0:	mov	r8, rdx
0x62e3:	xor	edi, 1
0x62e6:	lea	rdx, [rip + 0xcd27]
0x62ed:	movzx	edi, dil
0x62f1:	sub	rsp, 8
0x62f5:	mov	rcx, rsi
0x62f8:	add	rdx, rdi
0x62fb:	mov	rdi, qword ptr [rip + 0x211dde]
0x6302:	mov	esi, 1
0x6307:	xor	eax, eax
0x6309:	call	0x2b00


0x61f0:	push	rbx
0x61f1:	mov	rbx, rdi
0x61f4:	sub	rsp, 0xd0
0x61fb:	test	al, al
0x61fd:	mov	qword ptr [rsp + 0x28], rsi
0x6202:	mov	qword ptr [rsp + 0x30], rdx
0x6207:	mov	qword ptr [rsp + 0x38], rcx
0x620c:	mov	qword ptr [rsp + 0x40], r8
0x6211:	mov	qword ptr [rsp + 0x48], r9
0x6216:	je	0x624f


0x60f0:	mov	eax, edi
0x60f2:	mov	edx, 0x91a2b3c5
0x60f7:	push	r12
0x60f9:	imul	edx
0x60fb:	push	rbp
0x60fc:	push	rbx
0x60fd:	mov	eax, edi
0x60ff:	mov	ecx, edi
0x6101:	mov	r12, rsi
0x6104:	sar	eax, 0x1f
0x6107:	sar	ecx, 0x1f
0x610a:	mov	ebp, edi
0x610c:	lea	ebx, [rdx + rdi]
0x610f:	and	ecx, 2
0x6112:	mov	rdx, -1
0x6119:	lea	r8d, [rcx + 0x2b]
0x611d:	lea	rcx, [rip + 0xced8]
0x6124:	mov	esi, 1
0x6129:	sar	ebx, 0xb
0x612c:	mov	rdi, r12
0x612f:	sub	ebx, eax
0x6131:	mov	eax, ebx
0x6133:	sar	eax, 0x1f
0x6136:	mov	r9d, eax
0x6139:	xor	r9d, ebx
0x613c:	imul	ebx, ebx, 0xe10
0x6142:	sub	r9d, eax
0x6145:	xor	eax, eax
0x6147:	call	0x2b50


0x5f70:	mov	rax, qword ptr [rdi + 0xa8]
0x5f77:	mov	r8, qword ptr [rsp + 0x10]
0x5f7c:	mov	r9, qword ptr [rsp + 0x18]
0x5f81:	test	rax, rax
0x5f84:	je	0x5fc8


0x5ed0:	test	rdi, rdi
0x5ed3:	lea	rcx, [rsi + 0x14]
0x5ed7:	mov	byte ptr [rsi + 0x14], 0
0x5edb:	movabs	r9, 0x6666666666666667
0x5ee5:	movabs	rsi, 0xcccccccccccccccd
0x5eef:	mov	r8d, 0x30
0x5ef5:	js	0x5f33


0x5e80:	sub	rsp, 0x28
0x5e84:	xor	edi, edi
0x5e86:	mov	rsi, rsp
0x5e89:	mov	rax, qword ptr fs:[0x28]
0x5e92:	mov	qword ptr [rsp + 0x18], rax
0x5e97:	xor	eax, eax
0x5e99:	call	0x27d0


0x5e70:	mov	rsi, rdi
0x5e73:	xor	edi, edi
0x5e75:	jmp	0x27d0


0x5e20:	sub	rsp, 0x20
0x5e24:	mov	r9d, 0xffffffff
0x5e2a:	mov	rax, qword ptr fs:[0x28]
0x5e33:	mov	qword ptr [rsp + 0x10], rax
0x5e38:	xor	eax, eax
0x5e3a:	mov	byte ptr [rsp + 0xf], 0
0x5e3f:	push	r8
0x5e41:	xor	r8d, r8d
0x5e44:	push	rcx
0x5e45:	xor	ecx, ecx
0x5e47:	lea	rax, [rsp + 0x1f]
0x5e4c:	push	rax
0x5e4d:	call	0x4200


0x4200:	push	r15
0x4202:	push	r14
0x4204:	mov	r10, rsi
0x4207:	push	r13
0x4209:	push	r12
0x420b:	mov	r12, rdi
0x420e:	push	rbp
0x420f:	push	rbx
0x4210:	mov	ebp, r9d
0x4213:	sub	rsp, 0x4b8
0x421a:	mov	r13, qword ptr [rdx + 0x30]
0x421e:	mov	r14d, dword ptr [rdx + 8]
0x4222:	mov	rax, qword ptr [rsp + 0x4f0]
0x422a:	mov	qword ptr [rsp], rdx
0x422e:	mov	dword ptr [rsp + 0x24], r8d
0x4233:	mov	byte ptr [rsp + 0x23], cl
0x4237:	mov	qword ptr [rsp + 0x18], rax
0x423c:	mov	rax, qword ptr [rsp + 0x4f8]
0x4244:	mov	qword ptr [rsp + 0x10], rax
0x4249:	mov	rax, qword ptr fs:[0x28]
0x4252:	mov	qword ptr [rsp + 0x4a8], rax
0x425a:	xor	eax, eax
0x425c:	lea	rax, [rip + 0xf04c]
0x4263:	test	r13, r13
0x4266:	cmove	r13, rax
0x426a:	cmp	r14d, 0xc
0x426e:	jle	0x43c8


0x41a0:	test	rdx, rdx
0x41a3:	je	0x41f0


0x4140:	test	rdx, rdx
0x4143:	je	0x4190


0x4090:	push	rbp
0x4091:	push	rbx
0x4092:	sub	rsp, 8
0x4096:	mov	rdi, qword ptr [rip + 0x21400b]
0x409d:	call	0xd8c0


0x4080:	mov	byte ptr [rip + 0x214069], dil
0x4087:	ret	


0x4070:	mov	qword ptr [rip + 0x214081], rdi
0x4077:	ret	


0x4020:	push	r14
0x4022:	push	r13
0x4024:	push	r12
0x4026:	push	rbp
0x4027:	push	rbx
0x4028:	mov	r14, qword ptr [rsi]
0x402b:	test	r14, r14
0x402e:	je	0x4061


0x3fb0:	push	r15
0x3fb2:	push	r14
0x3fb4:	mov	r14, rdi
0x3fb7:	push	r13
0x3fb9:	push	r12
0x3fbb:	mov	r12, rsi
0x3fbe:	push	rbp
0x3fbf:	push	rbx
0x3fc0:	mov	rbp, rcx
0x3fc3:	mov	rbx, rdx
0x3fc6:	mov	rcx, r8
0x3fc9:	mov	rdx, rbp
0x3fcc:	sub	rsp, 8
0x3fd0:	mov	rsi, rbx
0x3fd3:	mov	rdi, r12
0x3fd6:	mov	r15, r8
0x3fd9:	mov	r13, r9
0x3fdc:	call	0x3cf0


0x3e90:	push	r15
0x3e92:	push	r14
0x3e94:	mov	r14, rdi
0x3e97:	push	r13
0x3e99:	push	r12
0x3e9b:	xor	edi, edi
0x3e9d:	push	rbp
0x3e9e:	push	rbx
0x3e9f:	mov	rbp, rsi
0x3ea2:	lea	rsi, [rip + 0xef18]
0x3ea9:	mov	r12, rdx
0x3eac:	mov	edx, 5
0x3eb1:	sub	rsp, 8
0x3eb5:	mov	rbx, qword ptr [rip + 0x214224]
0x3ebc:	call	0x2820


0x3e10:	cmp	rdx, -1
0x3e14:	push	r12
0x3e16:	mov	edx, 5
0x3e1b:	push	rbp
0x3e1c:	mov	r12, rsi
0x3e1f:	push	rbx
0x3e20:	mov	rbp, rdi
0x3e23:	je	0x3e70


0x3cf0:	push	r15
0x3cf2:	push	r14
0x3cf4:	mov	r15, rsi
0x3cf7:	push	r13
0x3cf9:	push	r12
0x3cfb:	mov	r13, rcx
0x3cfe:	push	rbp
0x3cff:	push	rbx
0x3d00:	mov	rbp, rdx
0x3d03:	sub	rsp, 0x28
0x3d07:	mov	qword ptr [rsp + 8], rdi
0x3d0c:	mov	qword ptr [rsp + 0x18], rdx
0x3d11:	call	0x2840


0x3ce0:	mov	edi, 1
0x3ce5:	jmp	0x3640


0x3640:	push	r13
0x3642:	push	r12
0x3644:	mov	edx, 5
0x3649:	push	rbp
0x364a:	push	rbx
0x364b:	mov	ebp, edi
0x364d:	sub	rsp, 0x88
0x3654:	mov	rbx, qword ptr [rip + 0x214aa5]
0x365b:	mov	rax, qword ptr fs:[0x28]
0x3664:	mov	qword ptr [rsp + 0x78], rax
0x3669:	xor	eax, eax
0x366b:	test	edi, edi
0x366d:	je	0x369d


0x34e0:	push	r12
0x34e2:	push	rbp
0x34e3:	mov	r12, rdi
0x34e6:	push	rbx
0x34e7:	mov	rdi, rcx
0x34ea:	mov	rbp, rcx
0x34ed:	sub	rsp, 0x70
0x34f1:	lea	rbx, [rsp + 0x10]
0x34f6:	mov	qword ptr [rsp], rsi
0x34fa:	mov	qword ptr [rsp + 8], rdx
0x34ff:	mov	rsi, rsp
0x3502:	mov	rdx, rbx
0x3505:	mov	rax, qword ptr fs:[0x28]
0x350e:	mov	qword ptr [rsp + 0x68], rax
0x3513:	xor	eax, eax
0x3515:	call	0xd5c0


0x34d0:	push	rbp
0x34d1:	mov	rbp, rsp
0x34d4:	pop	rbp
0x34d5:	jmp	0x3440


0x3490:	cmp	byte ptr [rip + 0x214c51], 0
0x3497:	jne	0x34c8


0x3440:	lea	rdi, [rip + 0x214c59]
0x3447:	lea	rsi, [rip + 0x214c52]
0x344e:	push	rbp
0x344f:	sub	rsi, rdi
0x3452:	mov	rbp, rsp
0x3455:	sar	rsi, 3
0x3459:	mov	rax, rsi
0x345c:	shr	rax, 0x3f
0x3460:	add	rsi, rax
0x3463:	sar	rsi, 1
0x3466:	je	0x3480


0x3400:	lea	rdi, [rip + 0x214c99]
0x3407:	push	rbp
0x3408:	lea	rax, [rip + 0x214c91]
0x340f:	cmp	rax, rdi
0x3412:	mov	rbp, rsp
0x3415:	je	0x3430


0x33d0:	xor	ebp, ebp
0x33d2:	mov	r9, rdx
0x33d5:	pop	rsi
0x33d6:	mov	rdx, rsp
0x33d9:	and	rsp, 0xfffffffffffffff0
0x33dd:	push	rax
0x33de:	push	rsp
0x33df:	lea	r8, [rip + 0xe23a]
0x33e6:	lea	rcx, [rip + 0xe1c3]
0x33ed:	lea	rdi, [rip - 0x824]
0x33f4:	call	qword ptr [rip + 0x214bce]


0x2bd0:	push	r15
0x2bd2:	push	r14
0x2bd4:	mov	r15d, edi
0x2bd7:	push	r13
0x2bd9:	push	r12
0x2bdb:	mov	r14, rsi
0x2bde:	push	rbp
0x2bdf:	push	rbx
0x2be0:	lea	rbp, [rip + 0x10189]
0x2be7:	lea	r12, [rip + 0x100f2]
0x2bee:	lea	r13, [rip + 0x1004b]
0x2bf5:	xor	ebx, ebx
0x2bf7:	sub	rsp, 0xf8
0x2bfe:	mov	rdi, qword ptr [rsi]
0x2c01:	mov	rax, qword ptr fs:[0x28]
0x2c0a:	mov	qword ptr [rsp + 0xe8], rax
0x2c12:	xor	eax, eax
0x2c14:	call	0xaa20


0x2b70:	mov	eax, edi
0x2b72:	mov	ecx, 0x64
0x2b77:	push	rbx
0x2b78:	cdq	
0x2b79:	mov	rbx, rsi
0x2b7c:	idiv	ecx
0x2b7e:	xor	ecx, ecx
0x2b80:	lea	r8d, [rax + 0x13]
0x2b84:	mov	esi, edx
0x2b86:	sar	esi, 0x1f
0x2b89:	mov	eax, r8d
0x2b8c:	xor	edx, esi
0x2b8e:	sar	eax, 0x1f
0x2b91:	xor	r8d, eax
0x2b94:	cmp	edi, 0xfffff894
0x2b9a:	lea	rdi, [rip + 0x10462]
0x2ba1:	setge	cl
0x2ba4:	sub	edx, esi
0x2ba6:	sub	r8d, eax
0x2ba9:	add	rcx, rdi
0x2bac:	mov	r9d, edx
0x2baf:	mov	rdi, rbx
0x2bb2:	or	rdx, 0xffffffffffffffff
0x2bb6:	mov	esi, 1
0x2bbb:	xor	eax, eax
0x2bbd:	call	0x2b50


0x26f0:	sub	rsp, 8
0x26f4:	mov	rax, qword ptr [rip + 0x2158d5]
0x26fb:	test	rax, rax
0x26fe:	je	0x2702


0x2ad0:	jmp	qword ptr [rip + 0x2154a2]


0x1093b:	movzx	eax, byte ptr [rdi]
0x1093e:	test	al, al
0x10940:	jne	0x10930


0x1072d:	xor	eax, eax
0x1072f:	ret	


0x106ca:	lea	r8, [rip + 0x484f]
0x106d1:	lea	r10, [rip + 0x48a8]
0x106d8:	lea	r9, [rip + 0x4835]
0x106df:	xor	ecx, ecx
0x106e1:	nop	dword ptr [rax]
0x106e8:	cmp	dword ptr [rax], 0x16
0x106eb:	ja	0x10730


0xdbf0:	test	r15d, r15d
0xdbf3:	mov	eax, 0xc
0xdbf8:	cmove	r15d, eax
0xdbfc:	jmp	0xdb07


0xdb03:	sub	r15d, 0xc
0xdb07:	movzx	eax, byte ptr [r11]
0xdb0b:	xor	r14d, r14d
0xdb0e:	test	al, al
0xdb10:	je	0xdbcc


0xda69:	mov	rax, rbp
0xda6c:	pop	rbx
0xda6d:	pop	rbp
0xda6e:	pop	r12
0xda70:	ret	


0xda3c:	mov	r12, rsi
0xda3f:	lea	rbx, [rdx - 1]
0xda43:	call	0x2720


0xda19:	mov	rax, rbp
0xda1c:	pop	rbx
0xda1d:	pop	rbp
0xda1e:	pop	r12
0xda20:	ret	


0xd9ec:	mov	r12, rsi
0xd9ef:	lea	rbx, [rdx - 1]
0xd9f3:	call	0x2b30


0x2a00:	jmp	qword ptr [rip + 0x21550a]


0x2a50:	jmp	qword ptr [rip + 0x2154e2]


0x27c0:	jmp	qword ptr [rip + 0x21562a]


0xd790:	mov	rdi, rsi
0xd793:	call	0x2a70


0xd694:	mov	rbp, rdi
0xd697:	call	0xd4d0


0xd640:	add	rsp, 8
0xd644:	mov	rdi, rbp
0xd647:	mov	rsi, rdx
0xd64a:	pop	rbx
0xd64b:	pop	rbp
0xd64c:	pop	r12
0xd64e:	pop	r13
0xd650:	jmp	0x28c0


0xd5d2:	mov	r13, rdx
0xd5d5:	mov	rbx, rdi
0xd5d8:	call	0xd4d0


0xd5bb:	ret	


0xd5b6:	jmp	0xd270


0x2730:	jmp	qword ptr [rip + 0x215672]


0xd440:	add	rsp, 8
0xd444:	pop	rbx
0xd445:	pop	rbp
0xd446:	pop	r12
0xd448:	pop	r13
0xd44a:	pop	r14
0xd44c:	pop	r15
0xd44e:	ret	


0xd3b0:	cmp	rsi, rbp
0xd3b3:	mov	r12, rdi
0xd3b6:	mov	r13, rsi
0xd3b9:	ja	0xd3c4


0xd368:	mov	edi, 0x80
0xd36d:	call	0x29e0


0xd309:	mov	r12, rdi
0xd30c:	call	0x2840


0x2780:	jmp	qword ptr [rip + 0x21564a]


0xd298:	ret	


0xd275:	push	rbx
0xd276:	nop	word ptr cs:[rax + rax]
0xd280:	mov	rbx, qword ptr [rdi]
0xd283:	call	0x2750


0xd260:	lea	rdi, [rip + 0x4527]
0xd267:	jmp	0x2ac0


0xd245:	mov	rsi, rdi
0xd248:	lea	rdi, [rip + 0x453f]
0xd24f:	mov	edx, 1
0xd254:	jmp	0x27e0


0x2870:	jmp	qword ptr [rip + 0x2155d2]


0xd160:	mov	rax, qword ptr [rdi + 0x20]
0xd164:	cmp	qword ptr [rdi + 0x28], rax
0xd168:	jne	0xd15a


0xd15a:	jmp	0x2aa0


0xd12a:	mov	rdi, rbx
0xd12d:	pop	rbx
0xd12e:	jmp	0x29f0


0xd119:	call	0x2a30


0x29a0:	jmp	qword ptr [rip + 0x21553a]


0x2820:	jmp	qword ptr [rip + 0x2155fa]


0x2840:	jmp	qword ptr [rip + 0x2155ea]


0xcff9:	call	0xd050


0xcfe2:	movzx	edx, dl
0xcfe5:	test	rdx, rdx
0xcfe8:	jne	0xcff9


0xcf90:	test	rax, rax
0xcf93:	mov	edx, 0x80
0xcf98:	cmove	rax, rdx
0xcf9c:	test	rax, rax
0xcf9f:	jns	0xcf82


0xcf68:	movabs	rdx, 0x5555555555555553
0xcf72:	cmp	rax, rdx
0xcf75:	ja	0xcfa1


0xcf10:	test	rcx, rcx
0xcf13:	je	0xcf38


0xcedb:	xor	edx, edx
0xcedd:	movabs	rax, 0x5555555555555554
0xcee7:	div	r9
0xceea:	cmp	rax, rcx
0xceed:	jbe	0xcf2b


0xcebb:	sub	rsp, 8
0xcebf:	call	0xd050


0xceb1:	movzx	eax, al
0xceb4:	test	rax, rax
0xceb7:	jne	0xcebb


0xce69:	test	rdi, rdi
0xce6c:	jne	0xce88


0xce6e:	mov	rsi, rbx
0xce71:	call	0x2a40


0xce3b:	sub	rsp, 8
0xce3f:	call	0xd050


0xce31:	movzx	eax, al
0xce34:	test	rax, rax
0xce37:	jne	0xce3b


0x29e0:	jmp	qword ptr [rip + 0x21551a]


0xcd16:	mov	eax, r10d
0xcd19:	mov	r11d, 1
0xcd1f:	add	r10d, 8
0xcd23:	add	rax, rbp
0xcd26:	mov	rax, qword ptr [rax]
0xcd29:	test	rax, rax
0xcd2c:	mov	qword ptr [r8 + r9*8], rax
0xcd30:	je	0xcd3c


0xcd6c:	mov	rax, rbx
0xcd6f:	add	rbx, 8
0xcd73:	jmp	0xcd26


0xcc48:	mov	r11d, eax
0xcc4b:	add	r11, qword ptr [r10 + 0x10]
0xcc4f:	add	eax, 8
0xcc52:	mov	dword ptr [r10], eax
0xcc55:	mov	rax, qword ptr [r11]
0xcc58:	test	rax, rax
0xcc5b:	mov	qword ptr [r8 + r9*8], rax
0xcc5f:	je	0xcc6b


0xcc8a:	mov	r11, qword ptr [r10 + 8]
0xcc8e:	lea	rax, [r11 + 8]
0xcc92:	mov	qword ptr [r10 + 8], rax
0xcc96:	jmp	0xcc55


0xcc1b:	jmp	0xc7e0


0xc918:	mov	r8, rcx
0xc91b:	mov	rcx, rdx
0xc91e:	lea	rdx, [rip + 0x802f]
0xc925:	mov	esi, 1
0xc92a:	xor	eax, eax
0xc92c:	call	0x2b00


0xc800:	mov	r8, rdx
0xc803:	lea	rdx, [rip + 0x813e]
0xc80a:	mov	r9, rcx
0xc80d:	xor	eax, eax
0xc80f:	mov	rcx, rsi
0xc812:	mov	esi, 1
0xc817:	call	0x2b00


0x2a10:	jmp	qword ptr [rip + 0x215502]


0xc677:	call	0x2770


0xc645:	test	rdx, rdx
0xc648:	je	0xc677


0xc5e4:	call	0x2770


0xc57c:	mov	dword ptr [rsp], esi
0xc57f:	mov	rcx, rsp
0xc582:	mov	rdx, -1
0xc589:	mov	rsi, rax
0xc58c:	mov	qword ptr [rsp + 4], 0
0xc595:	mov	qword ptr [rsp + 0xc], 0x4000000
0xc59e:	mov	qword ptr [rsp + 0x14], 0
0xc5a7:	mov	qword ptr [rsp + 0x1c], 0
0xc5b0:	mov	qword ptr [rsp + 0x24], 0
0xc5b9:	mov	qword ptr [rsp + 0x2c], 0
0xc5c2:	mov	dword ptr [rsp + 0x34], 0
0xc5ca:	call	0xbdf0


0xc450:	call	0x2770


0xc3ef:	mov	dword ptr [rsp], esi
0xc3f2:	mov	rcx, rsp
0xc3f5:	mov	rsi, rax
0xc3f8:	mov	qword ptr [rsp + 4], 0
0xc401:	mov	qword ptr [rsp + 0xc], 0
0xc40a:	mov	qword ptr [rsp + 0x14], 0
0xc413:	mov	qword ptr [rsp + 0x1c], 0
0xc41c:	mov	qword ptr [rsp + 0x24], 0
0xc425:	mov	qword ptr [rsp + 0x2c], 0
0xc42e:	mov	dword ptr [rsp + 0x34], 0
0xc436:	call	0xbdf0


0xc3c4:	call	0x2770


0xc35c:	mov	dword ptr [rsp], esi
0xc35f:	mov	rcx, rsp
0xc362:	mov	rdx, -1
0xc369:	mov	rsi, rax
0xc36c:	mov	qword ptr [rsp + 4], 0
0xc375:	mov	qword ptr [rsp + 0xc], 0
0xc37e:	mov	qword ptr [rsp + 0x14], 0
0xc387:	mov	qword ptr [rsp + 0x1c], 0
0xc390:	mov	qword ptr [rsp + 0x24], 0
0xc399:	mov	qword ptr [rsp + 0x2c], 0
0xc3a2:	mov	dword ptr [rsp + 0x34], 0
0xc3aa:	call	0xbdf0


0xc271:	mov	rdi, qword ptr [r12 + 8]
0xc276:	lea	rbx, [rip + 0x20bea3]
0xc27d:	cmp	rdi, rbx
0xc280:	je	0xc299


0xc246:	sub	eax, 2
0xc249:	lea	rbx, [r12 + 0x18]
0xc24e:	shl	rax, 4
0xc252:	lea	rbp, [r12 + rax + 0x28]
0xc257:	nop	word ptr [rax + rax]
0xc260:	mov	rdi, qword ptr [rbx]
0xc263:	add	rbx, 0x10
0xc267:	call	0x2750


0xc0a7:	sub	rsp, 8
0xc0ab:	call	0x2770


0xc099:	test	rdx, rdx
0xc09c:	je	0xc0a7


0x2830:	jmp	qword ptr [rip + 0x2155f2]


0xaa9d:	mov	rcx, qword ptr [rip + 0x20d63c]
0xaaa4:	lea	rdi, [rip + 0x998d]
0xaaab:	mov	edx, 0x37
0xaab0:	mov	esi, 1
0xaab5:	call	0x2af0


0xaa26:	mov	esi, 0x2f
0xaa2b:	mov	rbx, rdi
0xaa2e:	call	0x28b0


0xa6e8:	mov	edx, dword ptr [rsi]
0xa6ea:	mov	eax, 1
0xa6ef:	mov	dword ptr [rdi], edx
0xa6f1:	cmp	dword ptr [rsi], 0x44
0xa6f4:	jg	0xa6ca


0xa68f:	jb	0xa6a8


0x6d20:	lea	rax, [rip + 0xd4f9]
0x6d27:	movzx	ebp, byte ptr [rax + rbx]
0x6d2b:	test	ebp, ebp
0x6d2d:	je	0x7048


0x6ce4:	cmp	r9d, -2
0x6ce8:	je	0x7370


0x6808:	mov	byte ptr [rsi], 0
0x680b:	movsxd	rdx, dword ptr [rdi + 0x10]
0x680f:	cmp	edx, 6
0x6812:	ja	0x67fb


0x67b5:	mov	r9, qword ptr [rdi + 8]
0x67b9:	lea	rax, [r9 + 1]
0x67bd:	cmp	rax, 0xd
0x67c1:	jbe	0x6858


0x645c:	mov	rdi, rbp
0x645f:	call	0x2960


0x6329:	test	r8, r8
0x632c:	js	0x63c0


0x6370:	test	r8, r8
0x6373:	jns	0x6332


0x2b00:	jmp	qword ptr [rip + 0x21548a]


0x624f:	lea	rdi, [rip + 0xcdb7]
0x6256:	mov	edx, 6
0x625b:	mov	esi, 1
0x6260:	mov	rax, qword ptr fs:[0x28]
0x6269:	mov	qword ptr [rsp + 0x18], rax
0x626e:	xor	eax, eax
0x6270:	mov	rcx, qword ptr [rip + 0x211e69]
0x6277:	call	0x2af0


0x6218:	movaps	xmmword ptr [rsp + 0x50], xmm0
0x621d:	movaps	xmmword ptr [rsp + 0x60], xmm1
0x6222:	movaps	xmmword ptr [rsp + 0x70], xmm2
0x6227:	movaps	xmmword ptr [rsp + 0x80], xmm3
0x622f:	movaps	xmmword ptr [rsp + 0x90], xmm4
0x6237:	movaps	xmmword ptr [rsp + 0xa0], xmm5
0x623f:	movaps	xmmword ptr [rsp + 0xb0], xmm6
0x6247:	movaps	xmmword ptr [rsp + 0xc0], xmm7
0x624f:	lea	rdi, [rip + 0xcdb7]
0x6256:	mov	edx, 6
0x625b:	mov	esi, 1
0x6260:	mov	rax, qword ptr fs:[0x28]
0x6269:	mov	qword ptr [rsp + 0x18], rax
0x626e:	xor	eax, eax
0x6270:	mov	rcx, qword ptr [rip + 0x211e69]
0x6277:	call	0x2af0


0x2b50:	jmp	qword ptr [rip + 0x215462]


0x5fc8:	cmp	r9, 4
0x5fcc:	jg	0x6030


0x5f86:	cmp	qword ptr [rdi + 0x30], 0
0x5f8b:	jne	0x5fc8


0x5f33:	mov	rax, rdi
0x5f36:	lea	rsi, [rcx - 1]
0x5f3a:	imul	r9
0x5f3d:	mov	rax, rdi
0x5f40:	sar	rax, 0x3f
0x5f44:	sar	rdx, 2
0x5f48:	sub	rdx, rax
0x5f4b:	lea	rax, [rdx + rdx*4]
0x5f4f:	lea	eax, [r8 + rax*2]
0x5f53:	sub	eax, edi
0x5f55:	test	rdx, rdx
0x5f58:	mov	rdi, rdx
0x5f5b:	mov	byte ptr [rcx - 1], al
0x5f5e:	jne	0x5f30


0x27d0:	jmp	qword ptr [rip + 0x215622]


0x43c8:	test	r14d, r14d
0x43cb:	mov	eax, 0xc
0x43d0:	cmove	r14d, eax
0x43d4:	jmp	0x4278


0x4274:	sub	r14d, 0xc
0x4278:	movzx	eax, byte ptr [r10]
0x427c:	xor	r15d, r15d
0x427f:	test	al, al
0x4281:	je	0x42c2


0x41f0:	ret	


0x41a5:	push	r13
0x41a7:	push	r12
0x41a9:	mov	r12, rdi
0x41ac:	push	rbp
0x41ad:	push	rbx
0x41ae:	mov	rbp, rdx
0x41b1:	mov	rbx, rsi
0x41b4:	sub	rsp, 8
0x41b8:	add	rbp, rbx
0x41bb:	call	0x2720


0x4190:	ret	


0x4145:	push	r13
0x4147:	push	r12
0x4149:	mov	r12, rdi
0x414c:	push	rbp
0x414d:	push	rbx
0x414e:	mov	rbp, rdx
0x4151:	mov	rbx, rsi
0x4154:	sub	rsp, 8
0x4158:	add	rbp, rbx
0x415b:	call	0x2b30


0x4061:	pop	rbx
0x4062:	mov	rax, r14
0x4065:	pop	rbp
0x4066:	pop	r12
0x4068:	pop	r13
0x406a:	pop	r14
0x406c:	ret	


0x4030:	mov	r12, rcx
0x4033:	mov	r13, rdi
0x4036:	mov	rbp, rdx
0x4039:	lea	rbx, [rsi + 8]
0x403d:	jmp	0x404f


0x3e70:	lea	rsi, [rip + 0xef12]
0x3e77:	xor	edi, edi
0x3e79:	call	0x2820


0x3e25:	lea	rsi, [rip + 0xef78]
0x3e2c:	xor	edi, edi
0x3e2e:	call	0x2820


0x369d:	lea	rsi, [rip + 0xe1ac]
0x36a4:	xor	edi, edi
0x36a6:	call	0x2820


0x366f:	lea	rsi, [rip + 0xe1b2]
0x3676:	xor	edi, edi
0x3678:	call	0x2820


0x3499:	cmp	qword ptr [rip + 0x214b3f], 0
0x34a1:	push	rbp
0x34a2:	mov	rbp, rsp
0x34a5:	je	0x34b3


0x34c8:	ret	


0x3480:	pop	rbp
0x3481:	ret	


0x3468:	mov	rax, qword ptr [rip + 0x214b69]
0x346f:	test	rax, rax
0x3472:	je	0x3480


0x3430:	pop	rbp
0x3431:	ret	


0x3417:	mov	rax, qword ptr [rip + 0x214ba2]
0x341e:	test	rax, rax
0x3421:	je	0x3430




0x2702:	add	rsp, 8
0x2706:	ret	


0x2700:	call	rax




0x10942:	lea	rax, [rbx + rbx*4]
0x10946:	lea	rax, [rbx + rax*2]
0x1094a:	mov	qword ptr [rcx + rax*8], rdi
0x1094e:	mov	rax, qword ptr [rsp + 0x10]
0x10953:	mov	qword ptr [r14 + 0x10], rax
0x10957:	mov	rax, qword ptr [rsp + 0x18]
0x1095c:	mov	qword ptr [r14 + 0x18], rax
0x10960:	xor	eax, eax
0x10962:	add	rsp, 0x58
0x10966:	pop	rbx
0x10967:	pop	rbp
0x10968:	pop	r12
0x1096a:	pop	r13
0x1096c:	pop	r14
0x1096e:	pop	r15
0x10970:	ret	


0x10930:	cmp	al, 0x25
0x10932:	lea	rbp, [rdi + 1]
0x10936:	je	0x10978


0x106ed:	mov	edx, dword ptr [rax]
0x106ef:	movsxd	rdx, dword ptr [r8 + rdx*4]
0x106f3:	add	rdx, r8
0x106f6:	jmp	rdx


0x10730:	mov	eax, 0xffffffff
0x10735:	ret	


0xdb07:	movzx	eax, byte ptr [r11]
0xdb0b:	xor	r14d, r14d
0xdb0e:	test	al, al
0xdb10:	je	0xdbcc


0xdbcc:	test	rbp, rbp
0xdbcf:	je	0xdb4f


0xdb16:	mov	dword ptr [rsp + 0x68], r15d
0xdb1b:	mov	rbx, r11
0xdb1e:	cmp	al, 0x25
0xdb20:	je	0xdc08


0x2720:	jmp	qword ptr [rip + 0x21567a]


0x2b30:	jmp	qword ptr [rip + 0x215472]








0x2a70:	jmp	qword ptr [rip + 0x2154d2]


0x28c0:	jmp	qword ptr [rip + 0x2155aa]




0xd3bb:	lea	rdx, [rsi + 0x38]
0xd3bf:	cmp	rbp, rdx
0xd3c2:	jb	0xd440


0xd3c4:	cmp	byte ptr [rbp], 0
0xd3c8:	lea	rbx, [r12 + 9]
0xd3cd:	je	0xd430




0x2750:	jmp	qword ptr [rip + 0x215662]


0x2ac0:	jmp	qword ptr [rip + 0x2154aa]


0x27e0:	jmp	qword ptr [rip + 0x21561a]




0xd16a:	cmp	qword ptr [rdi + 0x48], 0
0xd16f:	jne	0xd15a


0x2aa0:	jmp	qword ptr [rip + 0x2154ba]


0x29f0:	jmp	qword ptr [rip + 0x215512]


0x2a30:	jmp	qword ptr [rip + 0x2154f2]








0xcfea:	call	0x2930


0xcfa1:	sub	rsp, 8
0xcfa5:	call	0xd050


0xcf82:	mov	qword ptr [rsi], rax
0xcf85:	mov	rsi, rax
0xcf88:	jmp	0xce60


0xcf77:	mov	rdx, rax
0xcf7a:	shr	rdx, 1
0xcf7d:	lea	rax, [rdx + rax + 1]
0xcf82:	mov	qword ptr [rsi], rax
0xcf85:	mov	rsi, rax
0xcf88:	jmp	0xce60


0xcf38:	xor	edx, edx
0xcf3a:	mov	eax, 0x80
0xcf3f:	xor	r8d, r8d
0xcf42:	div	r9
0xcf45:	test	rax, rax
0xcf48:	sete	r8b
0xcf4c:	lea	rcx, [r8 + rax]
0xcf50:	jmp	0xcf15


0xcf15:	mov	rax, rcx
0xcf18:	mul	r9
0xcf1b:	seto	dl
0xcf1e:	test	rax, rax
0xcf21:	movzx	edx, dl
0xcf24:	js	0xcf2b


0xcf2b:	sub	rsp, 8
0xcf2f:	call	0xd050


0xceef:	mov	rax, rcx
0xcef2:	shr	rax, 1
0xcef5:	lea	rcx, [rax + rcx + 1]
0xcefa:	mov	qword ptr [rsi], rcx
0xcefd:	imul	rcx, r9
0xcf01:	mov	rsi, rcx
0xcf04:	jmp	0xce60


0xceb9:	jmp	0xce60


0xce88:	call	0x2750


0x2a40:	jmp	qword ptr [rip + 0x2154ea]


0xce39:	jmp	0xce00




0xcd3c:	test	r11b, r11b
0xcd3f:	jne	0xcd65


0xcd32:	add	r9, 1
0xcd36:	cmp	r9, 0xa
0xcd3a:	jne	0xcd10


0xcd26:	mov	rax, qword ptr [rax]
0xcd29:	test	rax, rax
0xcd2c:	mov	qword ptr [r8 + r9*8], rax
0xcd30:	je	0xcd3c


0xcc6b:	call	0xc7e0


0xcc61:	add	r9, 1
0xcc65:	cmp	r9, 0xa
0xcc69:	jne	0xcc40


0xcc55:	mov	rax, qword ptr [r11]
0xcc58:	test	rax, rax
0xcc5b:	mov	qword ptr [r8 + r9*8], rax
0xcc5f:	je	0xcc6b


0xcc10:	add	r9, 1
0xcc14:	cmp	qword ptr [r8 + r9*8], 0
0xcc19:	jne	0xcc10




0x2770:	jmp	qword ptr [rip + 0x215652]


0xc64a:	mov	qword ptr [rsp + 0x28], rsi
0xc64f:	mov	qword ptr [rsp + 0x30], rdx
0xc654:	mov	rcx, rsp
0xc657:	mov	rdx, r8
0xc65a:	mov	rsi, r9
0xc65d:	call	0xbdf0


0xc299:	lea	rbx, [rip + 0x20bdf0]
0xc2a0:	cmp	r12, rbx
0xc2a3:	je	0xc2b4


0xc282:	call	0x2750


0xc09e:	mov	qword ptr [rdi + 0x28], rsi
0xc0a2:	mov	qword ptr [rdi + 0x30], rdx
0xc0a6:	ret	




0x2af0:	jmp	qword ptr [rip + 0x215492]


0x28b0:	jmp	qword ptr [rip + 0x2155b2]


0xa6f6:	and	ecx, 8
0xa6f9:	jne	0xa6a0


0xa6ca:	mov	rdi, qword ptr [rsp + 8]
0xa6cf:	xor	rdi, qword ptr fs:[0x28]
0xa6d8:	jne	0xa71c


0xa6a8:	mov	rbp, rsp
0xa6ab:	mov	rdi, rbp
0xa6ae:	call	0x2990


0xa691:	cmp	rdx, 2
0xa695:	jne	0xa721


0x7048:	cmp	dword ptr [rsp + 0x34], 3
0x704d:	jne	0x705f


0x6d33:	lea	rdx, [rip + 0xd2e6]
0x6d3a:	movsxd	rax, ebp
0x6d3d:	movzx	eax, byte ptr [rdx + rax]
0x6d41:	mov	edx, 1
0x6d46:	sub	edx, eax
0x6d48:	mov	rbx, rax
0x6d4b:	movsxd	rdx, edx
0x6d4e:	lea	rax, [rdx*8]
0x6d56:	sub	rax, rdx
0x6d59:	shl	rax, 3
0x6d5d:	add	rax, r13
0x6d60:	mov	rdi, qword ptr [rax + 0x10]
0x6d64:	mov	rdx, qword ptr [rax + 0x30]
0x6d68:	movdqu	xmm0, xmmword ptr [rax]
0x6d6c:	mov	r14, qword ptr [rax]
0x6d6f:	mov	r10, qword ptr [rax + 8]
0x6d73:	mov	qword ptr [rsp + 0x10], rdi
0x6d78:	mov	rdi, qword ptr [rax + 0x18]
0x6d7c:	movaps	xmmword ptr [rsp + 0xd0], xmm0
0x6d84:	mov	qword ptr [rsp + 0x100], rdx
0x6d8c:	mov	qword ptr [rsp + 8], rdi
0x6d91:	mov	rdi, qword ptr [rax + 0x20]
0x6d95:	movdqu	xmm0, xmmword ptr [rax + 0x10]
0x6d9a:	mov	qword ptr [rsp + 0x28], rdi
0x6d9f:	mov	rdi, qword ptr [rax + 0x28]
0x6da3:	movaps	xmmword ptr [rsp + 0xe0], xmm0
0x6dab:	movdqu	xmm0, xmmword ptr [rax + 0x20]
0x6db0:	mov	eax, dword ptr [rax + 0x30]
0x6db3:	mov	qword ptr [rsp + 0x20], rdi
0x6db8:	movaps	xmmword ptr [rsp + 0xf0], xmm0
0x6dc0:	mov	dword ptr [rsp + 0x18], eax
0x6dc4:	lea	eax, [rbp - 4]
0x6dc7:	cmp	eax, 0x57
0x6dca:	ja	0x6f20


0x7370:	mov	rdi, qword ptr [r11]
0x7373:	mov	edx, 1
0x7378:	movabs	r10, 0x3ffffff03ffffff
0x7382:	movzx	ecx, byte ptr [rdi]
0x7385:	cmp	cl, 0x20
0x7388:	mov	esi, ecx
0x738a:	movzx	r9d, cl
0x738e:	ja	0x73df


0x6cee:	test	r9d, r9d
0x6cf1:	jle	0x72a0


0x6814:	mov	rdi, rsi
0x6817:	mov	ecx, 1
0x681c:	mov	esi, 0x64
0x6821:	lea	rax, [rip + 0xd738]
0x6828:	lea	r9, [rax + rdx*4]
0x682c:	lea	rax, [rip + 0xc5ac]
0x6833:	mov	edx, 1
0x6838:	lea	r8, [rax + rcx]
0x683c:	mov	rcx, -1
0x6843:	xor	eax, eax
0x6845:	call	0x2740


0x67fb:	add	rsp, 8
0x67ff:	mov	rax, rbp
0x6802:	pop	rbx
0x6803:	pop	rbp
0x6804:	ret	


0x6858:	lea	rdx, [rax + rax*4]
0x685c:	mov	esi, 0x64
0x6861:	mov	rdi, rbp
0x6864:	lea	rcx, [rax + rdx*2]
0x6868:	lea	rax, [rip + 0xd711]
0x686f:	lea	rdx, [rip + 0xc56a]
0x6876:	add	rcx, rax
0x6879:	xor	eax, eax
0x687b:	call	0x2890


0x67c7:	lea	r8, [rip + 0xc932]
0x67ce:	mov	rcx, -1
0x67d5:	mov	edx, 1
0x67da:	mov	esi, 0x64
0x67df:	mov	rdi, rbp
0x67e2:	xor	eax, eax
0x67e4:	call	0x2740


0x2960:	jmp	qword ptr [rip + 0x21555a]


0x63c0:	lea	rax, [rdx + rdx*4]
0x63c4:	xor	ecx, ecx
0x63c6:	lea	r9, [rax + rax*4]
0x63ca:	shl	r9, 2
0x63ce:	mov	rax, r9
0x63d1:	movabs	rdx, 0xa3d70a3d70a3d70b
0x63db:	imul	rdx
0x63de:	add	rdx, r9
0x63e1:	sar	r9, 0x3f
0x63e5:	sar	rdx, 6
0x63e9:	sub	rdx, r9
0x63ec:	mov	rax, rdx
0x63ef:	shl	rax, 4
0x63f3:	sub	rax, rdx
0x63f6:	lea	r9, [rcx + rax*4]
0x63fa:	jmp	0x634e


0x6332:	xor	ecx, ecx
0x6334:	imul	r9, r9, 0x3c
0x6338:	seto	cl
0x633b:	test	sil, sil
0x633e:	jne	0x63b0


0x6375:	mov	rax, r9
0x6378:	movabs	rdx, 0xa3d70a3d70a3d70b
0x6382:	imul	rdx
0x6385:	mov	rax, r9
0x6388:	sar	rax, 0x3f
0x638c:	lea	rcx, [rdx + r9]
0x6390:	sar	rcx, 6
0x6394:	sub	rcx, rax
0x6397:	lea	rax, [rcx + rcx*4]
0x639b:	mov	rcx, r9
0x639e:	lea	rax, [rax + rax*4]
0x63a2:	shl	rax, 2
0x63a6:	sub	rcx, rax
0x63a9:	jmp	0x63ce






0x5fce:	add	qword ptr [rdi + 0xc8], 1
0x5fd6:	cmp	r9, 2
0x5fda:	jle	0x60d8


0x6030:	add	rax, 1
0x6034:	movabs	rsi, 0xa3d70a3d70a3d70b
0x603e:	mov	r10, r8
0x6041:	mov	qword ptr [rdi + 0xa8], rax
0x6048:	mov	rax, r8
0x604b:	sar	r10, 0x3f
0x604f:	imul	rsi
0x6052:	sub	r9, 4
0x6056:	mov	qword ptr [rdi + 0x30], r9
0x605a:	lea	rcx, [rdx + r8]
0x605e:	mov	rdx, r8
0x6061:	sar	rcx, 6
0x6065:	sub	rcx, r10
0x6068:	lea	rax, [rcx + rcx*4]
0x606c:	lea	rax, [rax + rax*4]
0x6070:	shl	rax, 2
0x6074:	sub	rdx, rax
0x6077:	mov	rax, rcx
0x607a:	mov	qword ptr [rdi + 0x40], rdx
0x607e:	imul	rsi
0x6081:	mov	rax, rcx
0x6084:	sar	rax, 0x3f
0x6088:	lea	rsi, [rdx + rcx]
0x608c:	movabs	rdx, 0x346dc5d63886594b
0x6096:	sar	rsi, 6
0x609a:	sub	rsi, rax
0x609d:	lea	rax, [rsi + rsi*4]
0x60a1:	lea	rax, [rax + rax*4]
0x60a5:	shl	rax, 2
0x60a9:	sub	rcx, rax
0x60ac:	mov	rax, r8
0x60af:	imul	rdx
0x60b2:	mov	qword ptr [rdi + 0x38], rcx
0x60b6:	sar	rdx, 0xb
0x60ba:	sub	rdx, r10
0x60bd:	mov	qword ptr [rdi + 0x28], rdx
0x60c1:	ret	


0x5f8d:	cmp	byte ptr [rdi + 0xa1], 0
0x5f94:	jne	0x5fc8


0x5f60:	sub	rcx, 2
0x5f64:	mov	byte ptr [rsi - 1], 0x2d
0x5f68:	mov	rax, rcx
0x5f6b:	ret	


0x5f30:	mov	rcx, rsi
0x5f33:	mov	rax, rdi
0x5f36:	lea	rsi, [rcx - 1]
0x5f3a:	imul	r9
0x5f3d:	mov	rax, rdi
0x5f40:	sar	rax, 0x3f
0x5f44:	sar	rdx, 2
0x5f48:	sub	rdx, rax
0x5f4b:	lea	rax, [rdx + rdx*4]
0x5f4f:	lea	eax, [r8 + rax*2]
0x5f53:	sub	eax, edi
0x5f55:	test	rdx, rdx
0x5f58:	mov	rdi, rdx
0x5f5b:	mov	byte ptr [rcx - 1], al
0x5f5e:	jne	0x5f30


0x5f26:	mov	rax, rcx
0x5f29:	ret	


0x5f00:	mov	rax, rdi
0x5f03:	sub	rcx, 1
0x5f07:	mul	rsi
0x5f0a:	shr	rdx, 3
0x5f0e:	lea	rax, [rdx + rdx*4]
0x5f12:	add	rax, rax
0x5f15:	sub	rdi, rax
0x5f18:	add	edi, 0x30
0x5f1b:	test	rdx, rdx
0x5f1e:	mov	byte ptr [rcx], dil
0x5f21:	mov	rdi, rdx
0x5f24:	jne	0x5f00




0x4278:	movzx	eax, byte ptr [r10]
0x427c:	xor	r15d, r15d
0x427f:	test	al, al
0x4281:	je	0x42c2


0x42c2:	mov	rdi, qword ptr [rsp + 0x4a8]
0x42ca:	xor	rdi, qword ptr fs:[0x28]
0x42d3:	mov	rax, r15
0x42d6:	jne	0x5df8


0x4283:	cmp	al, 0x25
0x4285:	mov	rbx, r10
0x4288:	mov	dword ptr [rsp + 0x30], r14d
0x428d:	mov	qword ptr [rsp + 0x28], r13
0x4292:	movsxd	r10, ebp
0x4295:	je	0x432b


0x404f:	mov	rdx, r12
0x4052:	mov	rsi, rbp
0x4055:	mov	rdi, r13
0x4058:	call	0x2910


0x34b3:	call	0x3400


0x34a7:	mov	rdi, qword ptr [rip + 0x214b5a]
0x34ae:	call	0x2b60


0x3474:	pop	rbp
0x3475:	jmp	rax


0x3423:	pop	rbp
0x3424:	jmp	rax


0x10978:	lea	rax, [rbx + rbx*4]
0x1097c:	mov	r13, r8
0x1097f:	lea	rax, [rbx + rax*2]
0x10983:	lea	r12, [rcx + rax*8]
0x10987:	mov	qword ptr [r12], rdi
0x1098b:	mov	dword ptr [r12 + 0x10], 0
0x10994:	mov	qword ptr [r12 + 0x18], 0
0x1099d:	mov	qword ptr [r12 + 0x20], 0
0x109a6:	mov	qword ptr [r12 + 0x28], r8
0x109ab:	mov	qword ptr [r12 + 0x30], 0
0x109b4:	mov	qword ptr [r12 + 0x38], 0
0x109bd:	mov	qword ptr [r12 + 0x40], r8
0x109c2:	mov	qword ptr [r12 + 0x50], r8
0x109c7:	movzx	ebx, byte ptr [rdi + 1]
0x109cb:	lea	eax, [rbx - 0x30]
0x109ce:	cmp	al, 9
0x109d0:	ja	0x10a0e


0x10938:	mov	rdi, rbp
0x1093b:	movzx	eax, byte ptr [rdi]
0x1093e:	test	al, al
0x10940:	jne	0x10930


0xdb4f:	mov	rbx, qword ptr [rsp + 0x4b8]
0xdb57:	xor	rbx, qword ptr fs:[0x28]
0xdb60:	mov	rax, r14
0xdb63:	jne	0xf515


0xdbd5:	cmp	qword ptr [rsp + 8], 0
0xdbdb:	je	0xdb4f


0xdc08:	movzx	eax, byte ptr [rsp + 0x2b]
0xdc0d:	xor	r8d, r8d
0xdc10:	xor	r15d, r15d
0xdc13:	mov	edx, 1
0xdc18:	mov	byte ptr [rsp + 0x30], al
0xdc1c:	add	rbx, 1
0xdc20:	movsx	eax, byte ptr [rbx]
0xdc23:	lea	ecx, [rax - 0x23]
0xdc26:	mov	esi, eax
0xdc28:	mov	r9d, eax
0xdc2b:	cmp	cl, 0x3c
0xdc2e:	ja	0xdc5c


0xdb26:	test	r10d, r10d
0xdb29:	mov	r12d, 0
0xdb2f:	mov	eax, 1
0xdb34:	cmovns	r12, r10
0xdb38:	test	r12, r12
0xdb3b:	cmove	r12, rax
0xdb3f:	mov	rax, qword ptr [rsp + 8]
0xdb44:	sub	rax, r14
0xdb47:	cmp	rax, r12
0xdb4a:	ja	0xdb80










0xd430:	lea	rbx, [rip + 0x5e78]
0xd437:	mov	qword ptr [r13 + 0x30], rbx
0xd43b:	mov	eax, 1
0xd440:	add	rsp, 8
0xd444:	pop	rbx
0xd445:	pop	rbp
0xd446:	pop	r12
0xd448:	pop	r13
0xd44a:	pop	r14
0xd44c:	pop	r15
0xd44e:	ret	








0xd171:	push	r12
0xd173:	push	rbp
0xd174:	mov	r12d, edx
0xd177:	push	rbx
0xd178:	mov	rbp, rsi
0xd17b:	mov	rbx, rdi
0xd17e:	call	0x29a0








0x2930:	jmp	qword ptr [rip + 0x215572]


0xcf26:	test	rdx, rdx
0xcf29:	je	0xcefa




0xcd41:	call	0xc7e0


0xcd65:	mov	dword ptr [rsp + 8], r10d
0xcd6a:	jmp	0xcd41


0xcd10:	cmp	r10d, 0x2f
0xcd14:	ja	0xcd6c


0xcc40:	mov	eax, dword ptr [r10]
0xcc43:	cmp	eax, 0x2f
0xcc46:	ja	0xcc8a




0xc2b4:	pop	rbx
0xc2b5:	mov	dword ptr [rip + 0x20bdb9], 1
0xc2bf:	pop	rbp
0xc2c0:	pop	r12
0xc2c2:	ret	


0xc2a5:	mov	rdi, r12
0xc2a8:	call	0x2750






0xa6fb:	add	edx, 0x64
0xa6fe:	mov	dword ptr [rdi], edx
0xa700:	jmp	0xa6ca


0xa6a0:	xor	eax, eax
0xa6a2:	jmp	0xa6ca


0xa6da:	add	rsp, 0x18
0xa6de:	pop	rbx
0xa6df:	pop	rbp
0xa6e0:	ret	


0xa71c:	call	0x2850


0x2990:	jmp	qword ptr [rip + 0x215542]


0xa69b:	and	ecx, 2
0xa69e:	jne	0xa708


0xa721:	call	0x2770


0x704f:	cmp	r9d, 0
0x7053:	jle	0x74c0


0x705f:	lea	rdx, [rip + 0xd23a]
0x7066:	lea	rcx, [rip + 0xd073]
0x706d:	lea	rsi, [rip + 0xd0ec]
0x7074:	jmp	0x7096


0x6dd0:	lea	rdx, [rip + 0xd029]
0x6dd7:	movsxd	rax, dword ptr [rdx + rax*4]
0x6ddb:	add	rax, rdx
0x6dde:	jmp	rax


0x6f20:	mov	rdi, qword ptr [rsp + 0x10]
0x6f25:	lea	rax, [rbx*8]
0x6f2d:	mov	qword ptr [rsp + 0xd0], r14
0x6f35:	mov	qword ptr [rsp + 0xd8], r10
0x6f3d:	mov	rcx, r12
0x6f40:	sub	rax, rbx
0x6f43:	movdqa	xmm0, xmmword ptr [rsp + 0xd0]
0x6f4c:	mov	qword ptr [rsp + 0xe0], rdi
0x6f54:	mov	rdi, qword ptr [rsp + 8]
0x6f59:	shl	rax, 3
0x6f5d:	sub	r13, rax
0x6f60:	add	rbx, rbx
0x6f63:	mov	rax, r13
0x6f66:	sub	rcx, rbx
0x6f69:	lea	r13, [r13 + 0x38]
0x6f6d:	mov	qword ptr [rsp + 0xe8], rdi
0x6f75:	mov	rdi, qword ptr [rsp + 0x28]
0x6f7a:	movups	xmmword ptr [rax + 0x38], xmm0
0x6f7e:	mov	qword ptr [rsp + 0xf0], rdi
0x6f86:	mov	rdi, qword ptr [rsp + 0x20]
0x6f8b:	movdqa	xmm0, xmmword ptr [rsp + 0xe0]
0x6f94:	mov	qword ptr [rsp + 0xf8], rdi
0x6f9c:	mov	edi, dword ptr [rsp + 0x18]
0x6fa0:	movups	xmmword ptr [rax + 0x48], xmm0
0x6fa4:	mov	dword ptr [rsp + 0x100], edi
0x6fab:	mov	rdx, qword ptr [rsp + 0x100]
0x6fb3:	movdqa	xmm0, xmmword ptr [rsp + 0xf0]
0x6fbc:	movsx	edi, word ptr [rcx]
0x6fbf:	mov	qword ptr [rax + 0x68], rdx
0x6fc3:	lea	rdx, [rip + 0xd236]
0x6fca:	movups	xmmword ptr [rax + 0x58], xmm0
0x6fce:	lea	rax, [rip + 0xd0ab]
0x6fd5:	mov	esi, edi
0x6fd7:	movzx	eax, byte ptr [rax + rbp]
0x6fdb:	sub	eax, 0x1c
0x6fde:	cdqe	
0x6fe0:	movsx	edx, byte ptr [rdx + rax]
0x6fe4:	add	edx, edi
0x6fe6:	cmp	edx, 0x70
0x6fe9:	ja	0x7003


0x7390:	mov	rax, rdx
0x7393:	shl	rax, cl
0x7396:	movabs	rcx, 0x100003e00
0x73a0:	test	rax, rcx
0x73a3:	je	0x744a


0x73df:	lea	eax, [rsi - 0x2b]
0x73e2:	sub	ecx, 0x30
0x73e5:	and	eax, 0xfffffffd
0x73e8:	cmp	cl, 9
0x73eb:	ja	0x7450


0x72a0:	xor	eax, eax
0x72a2:	xor	r9d, r9d
0x72a5:	cmp	r8d, 0x70
0x72a9:	ja	0x6d20


0x6cf7:	cmp	r9d, 0x115
0x6cfe:	jle	0x7350


0x2740:	jmp	qword ptr [rip + 0x21566a]


0x2890:	jmp	qword ptr [rip + 0x2155c2]




0x634e:	lea	rdx, [r9 + 0x5a0]
0x6355:	xor	eax, eax
0x6357:	cmp	rdx, 0xb40
0x635e:	ja	0x636c


0x6340:	xor	edx, edx
0x6342:	add	r9, r8
0x6345:	seto	dl
0x6348:	xor	eax, eax
0x634a:	or	ecx, edx
0x634c:	jne	0x636c


0x63b0:	xor	edx, edx
0x63b2:	sub	r9, r8
0x63b5:	seto	dl
0x63b8:	jmp	0x6348


0x63ce:	mov	rax, r9
0x63d1:	movabs	rdx, 0xa3d70a3d70a3d70b
0x63db:	imul	rdx
0x63de:	add	rdx, r9
0x63e1:	sar	r9, 0x3f
0x63e5:	sar	rdx, 6
0x63e9:	sub	rdx, r9
0x63ec:	mov	rax, rdx
0x63ef:	shl	rax, 4
0x63f3:	sub	rax, rdx
0x63f6:	lea	r9, [rcx + rax*4]
0x63fa:	jmp	0x634e


0x60d8:	mov	qword ptr [rdi + 0x48], r8
0x60dc:	mov	qword ptr [rdi + 0x50], 0
0x60e4:	jmp	0x6018


0x5fe0:	mov	rax, r8
0x5fe3:	movabs	rdx, 0xa3d70a3d70a3d70b
0x5fed:	imul	rdx
0x5ff0:	mov	rax, r8
0x5ff3:	sar	rax, 0x3f
0x5ff7:	add	rdx, r8
0x5ffa:	sar	rdx, 6
0x5ffe:	sub	rdx, rax
0x6001:	lea	rax, [rdx + rdx*4]
0x6005:	mov	qword ptr [rdi + 0x48], rdx
0x6009:	lea	rax, [rax + rax*4]
0x600d:	shl	rax, 2
0x6011:	sub	r8, rax
0x6014:	mov	qword ptr [rdi + 0x50], r8
0x6018:	mov	qword ptr [rdi + 0x58], 0
0x6020:	mov	qword ptr [rdi + 0x60], 0
0x6028:	mov	dword ptr [rdi + 0x1c], 2
0x602f:	ret	


0x5f96:	cmp	qword ptr [rdi + 0xc8], 0
0x5f9e:	jne	0x5faa


0x42dc:	add	rsp, 0x4b8
0x42e3:	pop	rbx
0x42e4:	pop	rbp
0x42e5:	pop	r12
0x42e7:	pop	r13
0x42e9:	pop	r14
0x42eb:	pop	r15
0x42ed:	ret	


0x5df8:	call	0x2850


0x432b:	movzx	eax, byte ptr [rsp + 0x23]
0x4330:	xor	r14d, r14d
0x4333:	mov	dword ptr [rsp + 8], 0
0x433b:	mov	byte ptr [rsp + 0x34], al
0x433f:	mov	eax, 1
0x4344:	add	rbx, 1
0x4348:	movsx	r11d, byte ptr [rbx]
0x434c:	lea	ecx, [r11 - 0x23]
0x4350:	mov	r13d, r11d
0x4353:	mov	edi, r11d
0x4356:	cmp	cl, 0x3c
0x4359:	ja	0x438f


0x429b:	test	r10d, r10d
0x429e:	mov	r14d, 0
0x42a4:	mov	eax, 1
0x42a9:	cmovns	r14, r10
0x42ad:	test	r14, r14
0x42b0:	cmove	r14, rax
0x42b4:	mov	rax, r15
0x42b7:	not	rax
0x42ba:	cmp	rax, r14
0x42bd:	ja	0x42f0


0x2910:	jmp	qword ptr [rip + 0x215582]


0x2b60:	jmp	qword ptr [rip + 0x21547a]


0x109d2:	jmp	0x10e0a


0x10a0e:	lea	rax, [rbp + 1]
0x10a12:	cmp	bl, 0x27
0x10a15:	mov	rdx, rax
0x10a18:	jne	0x109e0


0xdb69:	add	rsp, 0x4c8
0xdb70:	pop	rbx
0xdb71:	pop	rbp
0xdb72:	pop	r12
0xdb74:	pop	r13
0xdb76:	pop	r14
0xdb78:	pop	r15
0xdb7a:	ret	


0xf515:	call	0x2850


0xdbe1:	mov	byte ptr [rbp], 0
0xdbe5:	jmp	0xdb4f


0xdc30:	mov	rdi, rdx
0xdc33:	movabs	r11, 0x1000000000002500
0xdc3d:	shl	rdi, cl
0xdc40:	test	rdi, r11
0xdc43:	jne	0xdcb0


0xdc5c:	lea	edx, [rax - 0x30]
0xdc5f:	cmp	edx, 9
0xdc62:	jbe	0xddc0


0xdb4c:	xor	r14d, r14d
0xdb4f:	mov	rbx, qword ptr [rsp + 0x4b8]
0xdb57:	xor	rbx, qword ptr fs:[0x28]
0xdb60:	mov	rax, r14
0xdb63:	jne	0xf515


0xdb80:	test	rbp, rbp
0xdb83:	je	0xdbac




0xcefa:	mov	qword ptr [rsi], rcx
0xcefd:	imul	rcx, r9
0xcf01:	mov	rsi, rcx
0xcf04:	jmp	0xce60


0x2850:	jmp	qword ptr [rip + 0x2155e2]




0xa708:	imul	eax, dword ptr [rsi], 0x64
0xa70b:	add	eax, dword ptr [rsi + 4]
0xa70e:	sub	eax, 0x76c
0xa713:	mov	dword ptr [rdi], eax
0xa715:	mov	eax, 1
0xa71a:	jmp	0xa6ca


0x74c0:	jne	0x705f


0x7059:	mov	r9d, 0xfffffffe
0x705f:	lea	rdx, [rip + 0xd23a]
0x7066:	lea	rcx, [rip + 0xd073]
0x706d:	lea	rsi, [rip + 0xd0ec]
0x7074:	jmp	0x7096


0x7096:	movsx	eax, byte ptr [rdx + rbx]
0x709a:	cmp	eax, -0x5d
0x709d:	je	0x7080


0x6feb:	lea	rdi, [rip + 0xd0ee]
0x6ff2:	movsxd	rdx, edx
0x6ff5:	movsx	di, byte ptr [rdi + rdx]
0x6ffa:	cmp	si, di
0x6ffd:	je	0x74b0


0x7003:	lea	rdx, [rip + 0xd1d6]
0x700a:	movsx	rbx, byte ptr [rdx + rax]
0x700f:	lea	r12, [rcx + 2]
0x7013:	lea	rax, [r15 + 0x26]
0x7017:	mov	word ptr [rcx + 2], bx
0x701b:	cmp	r12, rax
0x701e:	jae	0x83e9


0x744a:	lea	eax, [rsi - 0x2b]
0x744d:	and	eax, 0xfffffffd
0x7450:	test	al, al
0x7452:	je	0x75cc


0x73a9:	lea	rax, [rdi + 1]
0x73ad:	jmp	0x73c9


0x73ed:	cmp	sil, 0x2d
0x73f1:	sete	cl
0x73f4:	test	al, al
0x73f6:	jne	0x83fa


0x7450:	test	al, al
0x7452:	je	0x75cc


0x72af:	lea	rdx, [rip + 0xce2a]
0x72b6:	movsxd	r8, r8d
0x72b9:	movsx	edx, byte ptr [rdx + r8]
0x72be:	cmp	edx, eax
0x72c0:	jne	0x6d20


0x7350:	lea	rdx, [rip + 0xcfc9]
0x7357:	movsxd	rax, r9d
0x735a:	movzx	eax, byte ptr [rdx + rax]
0x735e:	add	r8d, eax
0x7361:	jmp	0x72a5


0x6d04:	add	r8d, 2
0x6d08:	mov	eax, 2
0x6d0d:	cmp	r8d, 0x70
0x6d11:	jbe	0x72af






0x6360:	imul	r9d, r9d, 0x3c
0x6364:	mov	eax, 1
0x6369:	mov	dword ptr [rdi], r9d
0x636c:	ret	


0x636c:	ret	


0x6348:	xor	eax, eax
0x634a:	or	ecx, edx
0x634c:	jne	0x636c


0x6018:	mov	qword ptr [rdi + 0x58], 0
0x6020:	mov	qword ptr [rdi + 0x60], 0
0x6028:	mov	dword ptr [rdi + 0x1c], 2
0x602f:	ret	


0x5fa0:	cmp	r9, 2
0x5fa4:	jle	0x60c8


0x5faa:	mov	rax, qword ptr [rsp + 0x18]
0x5faf:	mov	byte ptr [rdi + 0xd8], 1
0x5fb6:	movdqu	xmm0, xmmword ptr [rsp + 8]
0x5fbc:	mov	qword ptr [rdi + 0x30], rax
0x5fc0:	movups	xmmword ptr [rdi + 0x20], xmm0
0x5fc4:	ret	


0x435b:	mov	rdx, rax
0x435e:	movabs	rsi, 0x1000000000002500
0x4368:	shl	rdx, cl
0x436b:	test	rdx, rsi
0x436e:	jne	0x43f0


0x438f:	lea	eax, [r11 - 0x30]
0x4393:	cmp	eax, 9
0x4396:	jbe	0x4520


0x42bf:	xor	r15d, r15d
0x42c2:	mov	rdi, qword ptr [rsp + 0x4a8]
0x42ca:	xor	rdi, qword ptr fs:[0x28]
0x42d3:	mov	rax, r15
0x42d6:	jne	0x5df8


0x42f0:	test	r12, r12
0x42f3:	je	0x430a




0x10e0a:	mov	rax, rbp
0x10e0d:	nop	dword ptr [rax]
0x10e10:	add	rax, 1
0x10e14:	movzx	edx, byte ptr [rax]
0x10e17:	lea	ecx, [rdx - 0x30]
0x10e1a:	cmp	cl, 9
0x10e1d:	jbe	0x10e10


0x10a1a:	or	dword ptr [r12 + 0x10], 1
0x10a20:	jmp	0x10a08


0x109e0:	cmp	bl, 0x2d
0x109e3:	je	0x10a28


0xdc45:	test	cl, cl
0xdc47:	je	0xdcc0


0xdcb0:	mov	r15d, eax
0xdcb3:	jmp	0xdc1c


0xddc0:	xor	r10d, r10d
0xddc3:	movsx	eax, byte ptr [rbx + 1]
0xddc7:	cmp	r10d, 0xccccccc
0xddce:	lea	rcx, [rbx + 1]
0xddd2:	mov	esi, eax
0xddd4:	lea	edx, [rax - 0x30]
0xddd7:	jg	0xde06


0xdc68:	cmp	sil, 0x45
0xdc6c:	je	0xdc98


0xdbac:	add	r14, r12
0xdbaf:	mov	r12, rbx
0xdbb2:	movzx	eax, byte ptr [r12 + 1]
0xdbb8:	lea	rbx, [r12 + 1]
0xdbbd:	mov	r10, -1
0xdbc4:	test	al, al
0xdbc6:	jne	0xdb1e


0xdb85:	cmp	r10d, 1
0xdb89:	jle	0xdba2




0x74c6:	jmp	0x7258


0x7080:	cmp	r12, r15
0x7083:	je	0x7258


0x709f:	add	eax, 1
0x70a2:	cmp	eax, 0x70
0x70a5:	ja	0x7080


0x74b0:	lea	rax, [rip + 0xcca9]
0x74b7:	movzx	ebx, byte ptr [rax + rdx]
0x74bb:	jmp	0x700f


0x7024:	cmp	ebx, 0xc
0x7027:	je	0x83f3


0x83e9:	mov	eax, 2
0x83ee:	jmp	0x725d


0x75cc:	cmp	sil, 0x2d
0x75d0:	sete	cl
0x75d3:	jmp	0x73fc


0x7458:	lea	ecx, [r9 - 0x41]
0x745c:	cmp	ecx, 0x39
0x745f:	jbe	0x74d0


0x73c9:	mov	qword ptr [r11], rax
0x73cc:	movzx	r9d, byte ptr [rax]
0x73d0:	mov	rdi, rax
0x73d3:	cmp	r9b, 0x20
0x73d7:	mov	ecx, r9d
0x73da:	mov	esi, r9d
0x73dd:	jbe	0x73b0


0x73fc:	cmp	cl, 1
0x73ff:	mov	rax, qword ptr [r11]
0x7402:	sbb	r9d, r9d
0x7405:	and	r9d, 2
0x7409:	sub	r9d, 1
0x740d:	add	rax, 1
0x7411:	mov	qword ptr [r11], rax
0x7414:	movzx	ecx, byte ptr [rax]
0x7417:	mov	rdi, rax
0x741a:	cmp	cl, 0x20
0x741d:	mov	esi, ecx
0x741f:	ja	0x825c


0x83fa:	mov	rdi, qword ptr [r11]
0x83fd:	xor	r9d, r9d
0x8400:	jmp	0x8267


0x72c6:	lea	rax, [rip + 0xce93]
0x72cd:	movzx	ebp, byte ptr [rax + r8]
0x72d2:	test	ebp, ebp
0x72d4:	je	0x75c0


0x72a5:	cmp	r8d, 0x70
0x72a9:	ja	0x6d20


0x60c8:	mov	qword ptr [rdi + 0xc8], 1
0x60d3:	nop	dword ptr [rax + rax]
0x60d8:	mov	qword ptr [rdi + 0x48], r8
0x60dc:	mov	qword ptr [rdi + 0x50], 0
0x60e4:	jmp	0x6018


0x4374:	test	cl, cl
0x4376:	je	0x4400


0x43f0:	mov	dword ptr [rsp + 8], r11d
0x43f5:	jmp	0x4344


0x4520:	xor	r10d, r10d
0x4523:	movsx	r11d, byte ptr [rbx + 1]
0x4528:	cmp	r10d, 0xccccccc
0x452f:	lea	rcx, [rbx + 1]
0x4533:	mov	r13d, r11d
0x4536:	lea	eax, [r11 - 0x30]
0x453a:	jg	0x4565


0x439c:	cmp	r13b, 0x45
0x43a0:	je	0x43e0


0x430a:	add	r15, r14
0x430d:	mov	rbp, rbx
0x4310:	movzx	eax, byte ptr [rbp + 1]
0x4314:	lea	rbx, [rbp + 1]
0x4318:	mov	r10, -1
0x431f:	test	al, al
0x4321:	je	0x42c2


0x42f5:	cmp	r10d, 1
0x42f9:	jg	0x44e0


0x10e10:	add	rax, 1
0x10e14:	movzx	edx, byte ptr [rax]
0x10e17:	lea	ecx, [rdx - 0x30]
0x10e1a:	cmp	cl, 9
0x10e1d:	jbe	0x10e10


0x10e1f:	cmp	dl, 0x24
0x10e22:	mov	r13, r8
0x10e25:	jne	0x10a0e


0x10a08:	movzx	ebx, byte ptr [rax]
0x10a0b:	mov	rbp, rax
0x10a0e:	lea	rax, [rbp + 1]
0x10a12:	cmp	bl, 0x27
0x10a15:	mov	rdx, rax
0x10a18:	jne	0x109e0


0x10a28:	or	dword ptr [r12 + 0x10], 2
0x10a2e:	jmp	0x10a08


0x109e5:	cmp	bl, 0x2b
0x109e8:	je	0x10a30


0xdcc0:	mov	r8d, 1
0xdcc6:	jmp	0xdc1c


0xdc49:	movabs	rcx, 0x800000000000000
0xdc53:	test	rdi, rcx
0xdc56:	jne	0xddb0


0xdc1c:	add	rbx, 1
0xdc20:	movsx	eax, byte ptr [rbx]
0xdc23:	lea	ecx, [rax - 0x23]
0xdc26:	mov	esi, eax
0xdc28:	mov	r9d, eax
0xdc2b:	cmp	cl, 0x3c
0xdc2e:	ja	0xdc5c


0xddd9:	movsx	edi, byte ptr [rbx]
0xdddc:	je	0xde00


0xde06:	cmp	edx, 9
0xde09:	ja	0xde20


0xdc98:	movsx	r9d, byte ptr [rbx + 1]
0xdc9d:	mov	r11d, eax
0xdca0:	add	rbx, 1
0xdca4:	mov	esi, r9d
0xdca7:	jmp	0xdc77


0xdc6e:	xor	r11d, r11d
0xdc71:	cmp	sil, 0x4f
0xdc75:	je	0xdc98


0xdb1e:	cmp	al, 0x25
0xdb20:	je	0xdc08


0xdba2:	movzx	eax, byte ptr [rbx]
0xdba5:	add	rbp, 1
0xdba9:	mov	byte ptr [rbp - 1], al
0xdbac:	add	r14, r12
0xdbaf:	mov	r12, rbx
0xdbb2:	movzx	eax, byte ptr [r12 + 1]
0xdbb8:	lea	rbx, [r12 + 1]
0xdbbd:	mov	r10, -1
0xdbc4:	test	al, al
0xdbc6:	jne	0xdb1e


0xdb8b:	lea	r15, [r10 - 1]
0xdb8f:	mov	rdi, rbp
0xdb92:	mov	esi, 0x20
0xdb97:	mov	rdx, r15
0xdb9a:	add	rbp, r15
0xdb9d:	call	0x28f0


0x7258:	mov	eax, 1
0x725d:	mov	rdi, qword ptr [rsp + 0x5b8]
0x7265:	xor	rdi, qword ptr fs:[0x28]
0x726e:	jne	0x8760


0x7089:	sub	r12, 2
0x708d:	movsx	rbx, word ptr [r12]
0x7092:	sub	r13, 0x38
0x7096:	movsx	eax, byte ptr [rdx + rbx]
0x709a:	cmp	eax, -0x5d
0x709d:	je	0x7080


0x70a7:	cdqe	
0x70a9:	cmp	byte ptr [rcx + rax], 1
0x70ad:	jne	0x7080


0x700f:	lea	r12, [rcx + 2]
0x7013:	lea	rax, [r15 + 0x26]
0x7017:	mov	word ptr [rcx + 2], bx
0x701b:	cmp	r12, rax
0x701e:	jae	0x83e9


0x83f3:	xor	eax, eax
0x83f5:	jmp	0x725d


0x702d:	lea	rdx, [rip + 0xd26c]
0x7034:	movsxd	rax, ebx
0x7037:	movzx	r14d, byte ptr [rdx + rax]
0x703c:	jmp	0x6cda


0x725d:	mov	rdi, qword ptr [rsp + 0x5b8]
0x7265:	xor	rdi, qword ptr fs:[0x28]
0x726e:	jne	0x8760


0x74d0:	mov	rax, rdx
0x74d3:	shl	rax, cl
0x74d6:	test	rax, r10
0x74d9:	je	0x7461


0x7461:	cmp	sil, 0x28
0x7465:	jne	0x7286


0x73b0:	mov	rsi, rdx
0x73b3:	movabs	r14, 0x100003e00
0x73bd:	add	rax, 1
0x73c1:	shl	rsi, cl
0x73c4:	test	rsi, r14
0x73c7:	je	0x7448


0x7425:	mov	rsi, rdx
0x7428:	movabs	r14, 0x100003e00
0x7432:	add	rax, 1
0x7436:	shl	rsi, cl
0x7439:	test	rsi, r14
0x743c:	je	0x7385


0x825c:	lea	eax, [rcx - 0x30]
0x825f:	cmp	al, 9
0x8261:	ja	0x7385


0x8267:	xor	eax, eax
0x8269:	mov	rcx, rdi
0x826c:	mov	r14d, 0x30
0x8272:	mov	r10, rax
0x8275:	jmp	0x8293


0x75c0:	mov	eax, 0x38
0x75c5:	xor	ebx, ebx
0x75c7:	jmp	0x6d5d


0x72da:	mov	eax, dword ptr [rsp + 0x34]
0x72de:	mov	rcx, r12
0x72e1:	movsxd	rbx, ebp
0x72e4:	mov	r9d, 0xfffffffe
0x72ea:	cmp	eax, 1
0x72ed:	adc	eax, -1
0x72f0:	add	r13, 0x38
0x72f4:	mov	dword ptr [rsp + 0x34], eax
0x72f8:	mov	rax, qword ptr [rsp + 0x38]
0x72fd:	mov	qword ptr [rsp + 0x98], rax
0x7305:	mov	rax, qword ptr [rsp + 0x40]
0x730a:	movdqa	xmm0, xmmword ptr [rsp + 0x90]
0x7313:	mov	qword ptr [rsp + 0xa0], rax
0x731b:	mov	rax, qword ptr [rsp + 0xc0]
0x7323:	movups	xmmword ptr [r13], xmm0
0x7328:	movdqa	xmm0, xmmword ptr [rsp + 0xa0]
0x7331:	mov	qword ptr [r13 + 0x30], rax
0x7335:	movups	xmmword ptr [r13 + 0x10], xmm0
0x733a:	movdqa	xmm0, xmmword ptr [rsp + 0xb0]
0x7343:	movups	xmmword ptr [r13 + 0x20], xmm0
0x7348:	jmp	0x700f


0x4400:	mov	r14d, 1
0x4406:	jmp	0x4344


0x437c:	movabs	rsi, 0x800000000000000
0x4386:	test	rdx, rsi
0x4389:	jne	0x4510


0x4344:	add	rbx, 1
0x4348:	movsx	r11d, byte ptr [rbx]
0x434c:	lea	ecx, [r11 - 0x23]
0x4350:	mov	r13d, r11d
0x4353:	mov	edi, r11d
0x4356:	cmp	cl, 0x3c
0x4359:	ja	0x438f


0x453c:	movsx	edx, byte ptr [rbx]
0x453f:	je	0x4560


0x4565:	cmp	eax, 9
0x4568:	ja	0x4588


0x43e0:	movsx	edi, byte ptr [rbx + 1]
0x43e4:	add	rbx, 1
0x43e8:	mov	r13d, edi
0x43eb:	jmp	0x43ab


0x43a2:	cmp	r13b, 0x4f
0x43a6:	je	0x43e0


0x4323:	cmp	al, 0x25
0x4325:	jne	0x429b


0x42ff:	movsx	edi, byte ptr [rbx]
0x4302:	mov	rsi, r12
0x4305:	call	0x2900


0x44e0:	lea	r13, [r10 - 1]
0x44e4:	xor	ebp, ebp
0x44e6:	nop	word ptr cs:[rax + rax]
0x44f0:	mov	rsi, r12
0x44f3:	mov	edi, 0x20
0x44f8:	add	rbp, 1
0x44fc:	call	0x2900


0x10e2b:	xor	edx, edx
0x10e2d:	movsx	eax, bl
0x10e30:	movabs	rdi, 0x1999999999999999
0x10e3a:	mov	rsi, r8
0x10e3d:	sub	eax, 0x30
0x10e40:	cmp	rdx, rdi
0x10e43:	cdqe	
0x10e45:	ja	0x10e4e


0x10a30:	or	dword ptr [r12 + 0x10], 4
0x10a36:	jmp	0x10a08


0x109ea:	cmp	bl, 0x20
0x109ed:	je	0x10a40


0xddb0:	mov	byte ptr [rsp + 0x30], 1
0xddb5:	jmp	0xdc1c


0xde00:	cmp	dil, 0x37
0xde04:	jle	0xddde


0xddde:	lea	r9d, [r10 + r10*4]
0xdde2:	mov	rbx, rcx
0xdde5:	lea	r10d, [rdi + r9*2 - 0x30]
0xddea:	cmp	edx, 9
0xdded:	jbe	0xddc3


0xde0b:	movsx	eax, byte ptr [rbx + 2]
0xde0f:	mov	r10d, 0x7fffffff
0xde15:	add	rbx, 2
0xde19:	mov	esi, eax
0xde1b:	lea	edx, [rax - 0x30]
0xde1e:	jmp	0xddea


0xde20:	mov	r9d, eax
0xde23:	mov	rbx, rcx
0xde26:	mov	r10d, 0x7fffffff
0xde2c:	jmp	0xdc68


0xdc77:	cmp	sil, 0x7a
0xdc7b:	ja	0xdcd0


0x28f0:	jmp	qword ptr [rip + 0x215592]


0x7274:	add	rsp, 0x5c8
0x727b:	pop	rbx
0x727c:	pop	rbp
0x727d:	pop	r12
0x727f:	pop	r13
0x7281:	pop	r14
0x7283:	pop	r15
0x7285:	ret	


0x8760:	call	0x2850


0x70af:	movzx	ebx, byte ptr [rsi + rax]
0x70b3:	test	ebx, ebx
0x70b5:	je	0x7080


0x6cda:	movsx	r8d, r14b
0x6cde:	cmp	r8d, -0x5d
0x6ce2:	je	0x6d20


0x74db:	mov	rax, qword ptr [r11]
0x74de:	lea	r14, [rsp + 0x5a0]
0x74e6:	mov	r10d, 1
0x74ec:	movabs	r9, 0x3ffffff03ffffff
0x74f6:	mov	rdx, r14
0x74f9:	lea	rdi, [r14 + 0x13]
0x74fd:	add	rax, 1
0x7501:	jmp	0x7507


0x746b:	mov	rsi, qword ptr [r11]
0x746e:	xor	ecx, ecx
0x7470:	jmp	0x748f


0x7286:	lea	rax, [rdi + 1]
0x728a:	mov	qword ptr [r11], rax
0x728d:	movzx	r9d, byte ptr [rdi]
0x7291:	test	r9d, r9d
0x7294:	jg	0x7350


0x7448:	mov	esi, ecx
0x744a:	lea	eax, [rsi - 0x2b]
0x744d:	and	eax, 0xfffffffd
0x7450:	test	al, al
0x7452:	je	0x75cc


0x7385:	cmp	cl, 0x20
0x7388:	mov	esi, ecx
0x738a:	movzx	r9d, cl
0x738e:	ja	0x73df


0x7442:	jmp	0x7411


0x8293:	imul	r10, r10, 0xa
0x8297:	jo	0x82b7


0x6d5d:	add	rax, r13
0x6d60:	mov	rdi, qword ptr [rax + 0x10]
0x6d64:	mov	rdx, qword ptr [rax + 0x30]
0x6d68:	movdqu	xmm0, xmmword ptr [rax]
0x6d6c:	mov	r14, qword ptr [rax]
0x6d6f:	mov	r10, qword ptr [rax + 8]
0x6d73:	mov	qword ptr [rsp + 0x10], rdi
0x6d78:	mov	rdi, qword ptr [rax + 0x18]
0x6d7c:	movaps	xmmword ptr [rsp + 0xd0], xmm0
0x6d84:	mov	qword ptr [rsp + 0x100], rdx
0x6d8c:	mov	qword ptr [rsp + 8], rdi
0x6d91:	mov	rdi, qword ptr [rax + 0x20]
0x6d95:	movdqu	xmm0, xmmword ptr [rax + 0x10]
0x6d9a:	mov	qword ptr [rsp + 0x28], rdi
0x6d9f:	mov	rdi, qword ptr [rax + 0x28]
0x6da3:	movaps	xmmword ptr [rsp + 0xe0], xmm0
0x6dab:	movdqu	xmm0, xmmword ptr [rax + 0x20]
0x6db0:	mov	eax, dword ptr [rax + 0x30]
0x6db3:	mov	qword ptr [rsp + 0x20], rdi
0x6db8:	movaps	xmmword ptr [rsp + 0xf0], xmm0
0x6dc0:	mov	dword ptr [rsp + 0x18], eax
0x6dc4:	lea	eax, [rbp - 4]
0x6dc7:	cmp	eax, 0x57
0x6dca:	ja	0x6f20


0x4510:	mov	byte ptr [rsp + 0x34], 1
0x4515:	jmp	0x4344


0x4560:	cmp	dl, 0x37
0x4563:	jle	0x4541


0x4541:	lea	esi, [r10 + r10*4]
0x4545:	mov	rbx, rcx
0x4548:	lea	r10d, [rdx + rsi*2 - 0x30]
0x454d:	cmp	eax, 9
0x4550:	jbe	0x4523


0x456a:	movsx	r11d, byte ptr [rbx + 2]
0x456f:	mov	r10d, 0x7fffffff
0x4575:	add	rbx, 2
0x4579:	mov	r13d, r11d
0x457c:	lea	eax, [r11 - 0x30]
0x4580:	jmp	0x454d


0x4588:	mov	edi, r11d
0x458b:	mov	rbx, rcx
0x458e:	mov	r10d, 0x7fffffff
0x4594:	jmp	0x439c


0x43ab:	cmp	r13b, 0x7a
0x43af:	ja	0x4410


0x43a8:	xor	r11d, r11d
0x43ab:	cmp	r13b, 0x7a
0x43af:	ja	0x4410


0x2900:	jmp	qword ptr [rip + 0x21558a]


0x10e47:	lea	rsi, [rdx + rdx*4]
0x10e4b:	add	rsi, rsi
0x10e4e:	mov	rcx, rbp
0x10e51:	add	rax, rsi
0x10e54:	movzx	ebx, byte ptr [rbp + 1]
0x10e58:	setb	sil
0x10e5c:	add	rbp, 1
0x10e60:	mov	rdx, rax
0x10e63:	movzx	esi, sil
0x10e67:	test	rsi, rsi
0x10e6a:	lea	edi, [rbx - 0x30]
0x10e6d:	jne	0x111fe


0x10e4e:	mov	rcx, rbp
0x10e51:	add	rax, rsi
0x10e54:	movzx	ebx, byte ptr [rbp + 1]
0x10e58:	setb	sil
0x10e5c:	add	rbp, 1
0x10e60:	mov	rdx, rax
0x10e63:	movzx	esi, sil
0x10e67:	test	rsi, rsi
0x10e6a:	lea	edi, [rbx - 0x30]
0x10e6d:	jne	0x111fe


0x10a40:	or	dword ptr [r12 + 0x10], 8
0x10a46:	jmp	0x10a08


0x109ef:	cmp	bl, 0x23
0x109f2:	je	0x10a50


0xddc3:	movsx	eax, byte ptr [rbx + 1]
0xddc7:	cmp	r10d, 0xccccccc
0xddce:	lea	rcx, [rbx + 1]
0xddd2:	mov	esi, eax
0xddd4:	lea	edx, [rax - 0x30]
0xddd7:	jg	0xde06


0xddef:	mov	r9d, eax
0xddf2:	jmp	0xdc68


0xddea:	cmp	edx, 9
0xdded:	jbe	0xddc3


0xdc7d:	lea	rdx, [rip + 0x7048]
0xdc84:	movzx	eax, sil
0xdc88:	movsxd	rax, dword ptr [rdx + rax*4]
0xdc8c:	add	rax, rdx
0xdc8f:	jmp	rax


0xdcd0:	lea	rax, [rbx - 1]
0xdcd4:	mov	r8d, 1
0xdcda:	mov	r9, rax
0xdcdd:	lea	rax, [rax - 1]
0xdce1:	add	r8d, 1
0xdce5:	cmp	byte ptr [rax + 1], 0x25
0xdce9:	jne	0xdcda




0x70b7:	mov	rax, qword ptr [rsp + 0x38]
0x70bc:	add	r13, 0x38
0x70c0:	mov	rcx, r12
0x70c3:	mov	dword ptr [rsp + 0x34], 3
0x70cb:	mov	qword ptr [rsp + 0x98], rax
0x70d3:	mov	rax, qword ptr [rsp + 0x40]
0x70d8:	movdqa	xmm0, xmmword ptr [rsp + 0x90]
0x70e1:	mov	qword ptr [rsp + 0xa0], rax
0x70e9:	mov	rax, qword ptr [rsp + 0xc0]
0x70f1:	movups	xmmword ptr [r13], xmm0
0x70f6:	movdqa	xmm0, xmmword ptr [rsp + 0xa0]
0x70ff:	mov	qword ptr [r13 + 0x30], rax
0x7103:	movups	xmmword ptr [r13 + 0x10], xmm0
0x7108:	movdqa	xmm0, xmmword ptr [rsp + 0xb0]
0x7111:	movups	xmmword ptr [r13 + 0x20], xmm0
0x7116:	jmp	0x700f


0x7507:	cmp	rdx, rdi
0x750a:	jae	0x7513


0x748f:	lea	rdi, [rsi + 1]
0x7493:	mov	qword ptr [r11], rdi
0x7496:	movzx	eax, byte ptr [rdi - 1]
0x749a:	test	al, al
0x749c:	je	0x72a0


0x7411:	mov	qword ptr [r11], rax
0x7414:	movzx	ecx, byte ptr [rax]
0x7417:	mov	rdi, rax
0x741a:	cmp	cl, 0x20
0x741d:	mov	esi, ecx
0x741f:	ja	0x825c


0x82b7:	mov	eax, 2
0x82bc:	mov	r9d, 0x3f
0x82c2:	jmp	0x735e


0x8299:	movzx	edx, sil
0x829d:	mov	esi, r14d
0x82a0:	lea	eax, [rdx - 0x30]
0x82a3:	sub	esi, edx
0x82a5:	cmp	r9d, -1
0x82a9:	cmovne	esi, eax
0x82ac:	movsxd	rax, esi
0x82af:	add	rax, r10
0x82b2:	mov	r10, rax
0x82b5:	jno	0x8280


0x4523:	movsx	r11d, byte ptr [rbx + 1]
0x4528:	cmp	r10d, 0xccccccc
0x452f:	lea	rcx, [rbx + 1]
0x4533:	mov	r13d, r11d
0x4536:	lea	eax, [r11 - 0x30]
0x453a:	jg	0x4565


0x4552:	mov	edi, r11d
0x4555:	jmp	0x439c


0x454d:	cmp	eax, 9
0x4550:	jbe	0x4523


0x43b1:	lea	rsi, [rip + 0xea58]
0x43b8:	movzx	eax, r13b
0x43bc:	movsxd	rax, dword ptr [rsi + rax*4]
0x43c0:	add	rax, rsi
0x43c3:	jmp	rax


0x4410:	lea	rax, [rbx - 1]
0x4414:	mov	r13d, 1
0x441a:	mov	rdx, rax
0x441d:	lea	rax, [rax - 1]
0x4421:	add	r13d, 1
0x4425:	cmp	byte ptr [rax + 1], 0x25
0x4429:	jne	0x441a




0x10e73:	cmp	dil, 9
0x10e77:	jbe	0x10e2d


0x111fe:	cmp	dil, 9
0x11202:	ja	0x1110b


0x10a50:	or	dword ptr [r12 + 0x10], 0x10
0x10a56:	jmp	0x10a08


0x109f4:	cmp	bl, 0x30
0x109f7:	je	0x10a60


0xdceb:	mov	rdx, qword ptr [rsp + 8]
0xdcf0:	mov	eax, 0
0xdcf5:	movsxd	r8, r8d
0xdcf8:	mov	rcx, r8
0xdcfb:	mov	r12, rbx
0xdcfe:	sub	rdx, r14
0xdd01:	test	r10d, r10d
0xdd04:	cmovns	eax, r10d
0xdd08:	cdqe	
0xdd0a:	cmp	rax, r8
0xdd0d:	cmovae	rcx, rax
0xdd11:	cmp	rcx, rdx
0xdd14:	jae	0xdb4c


0xdcda:	mov	r9, rax
0xdcdd:	lea	rax, [rax - 1]
0xdce1:	add	r8d, 1
0xdce5:	cmp	byte ptr [rax + 1], 0x25
0xdce9:	jne	0xdcda


0x750c:	mov	byte ptr [rdx], sil
0x750f:	add	rdx, 1
0x7513:	mov	qword ptr [r11], rax
0x7516:	movzx	ecx, byte ptr [rax]
0x7519:	mov	esi, ecx
0x751b:	sub	ecx, 0x41
0x751e:	cmp	ecx, 0x39
0x7521:	ja	0x752e


0x7513:	mov	qword ptr [r11], rax
0x7516:	movzx	ecx, byte ptr [rax]
0x7519:	mov	esi, ecx
0x751b:	sub	ecx, 0x41
0x751e:	cmp	ecx, 0x39
0x7521:	ja	0x752e


0x74a2:	cmp	al, 0x28
0x74a4:	jne	0x7478


0x735e:	add	r8d, eax
0x7361:	jmp	0x72a5


0x8280:	movzx	esi, byte ptr [rcx + 1]
0x8284:	lea	rbp, [rcx + 1]
0x8288:	lea	edx, [rsi - 0x30]
0x828b:	cmp	dl, 9
0x828e:	ja	0x82c7


0x442b:	test	r10d, r10d
0x442e:	mov	eax, 0
0x4433:	movsxd	r13, r13d
0x4436:	cmovns	eax, r10d
0x443a:	mov	qword ptr [rsp + 0x38], rdx
0x443f:	mov	r14, r13
0x4442:	cdqe	
0x4444:	mov	rdx, r15
0x4447:	mov	rbp, rbx
0x444a:	cmp	rax, r13
0x444d:	not	rdx
0x4450:	cmovae	r14, rax
0x4454:	cmp	rdx, r14
0x4457:	jbe	0x42bf


0x441a:	mov	rdx, rax
0x441d:	lea	rax, [rax - 1]
0x4421:	add	r13d, 1
0x4425:	cmp	byte ptr [rax + 1], 0x25
0x4429:	jne	0x441a


0x10e2d:	movsx	eax, bl
0x10e30:	movabs	rdi, 0x1999999999999999
0x10e3a:	mov	rsi, r8
0x10e3d:	sub	eax, 0x30
0x10e40:	cmp	rdx, rdi
0x10e43:	cdqe	
0x10e45:	ja	0x10e4e


0x10e79:	mov	r13, rax
0x10e7c:	sub	r13, 1
0x10e80:	cmp	r13, -3
0x10e84:	ja	0x1110b


0x11208:	movsx	eax, bl
0x1120b:	mov	rsi, r8
0x1120e:	mov	rcx, rbp
0x11211:	sub	eax, 0x30
0x11214:	cdqe	
0x11216:	jmp	0x10e51


0x1110b:	mov	rcx, qword ptr [r15 + 8]
0x1110f:	cmp	qword ptr [rsp + 8], rcx
0x11114:	je	0x1111e


0x10a60:	or	dword ptr [r12 + 0x10], 0x20
0x10a66:	jmp	0x10a08


0x109f9:	cmp	bl, 0x49
0x109fc:	jne	0x10a70


0xdd1a:	test	rbp, rbp
0xdd1d:	je	0xdda5


0x7523:	mov	rbp, r10
0x7526:	shl	rbp, cl
0x7529:	test	rbp, r9
0x752c:	jne	0x7503


0x752e:	cmp	sil, 0x2e
0x7532:	je	0x7503


0x74a6:	add	rcx, 1
0x74aa:	jmp	0x7483


0x7478:	cmp	al, 0x29
0x747a:	sete	al
0x747d:	movzx	eax, al
0x7480:	sub	rcx, rax
0x7483:	test	rcx, rcx
0x7486:	je	0x75d8


0x8290:	mov	rcx, rbp
0x8293:	imul	r10, r10, 0xa
0x8297:	jo	0x82b7


0x82c7:	and	esi, 0xfffffffd
0x82ca:	mov	r10, rbp
0x82cd:	mov	rdx, rax
0x82d0:	cmp	sil, 0x2c
0x82d4:	jne	0x83a8


0x445d:	test	r12, r12
0x4460:	je	0x44ce


0x10e8a:	lea	rbp, [rcx + 2]
0x10e8e:	movzx	ebx, byte ptr [rcx + 2]
0x10e92:	jmp	0x10a0e


0x10e51:	add	rax, rsi
0x10e54:	movzx	ebx, byte ptr [rbp + 1]
0x10e58:	setb	sil
0x10e5c:	add	rbp, 1
0x10e60:	mov	rdx, rax
0x10e63:	movzx	esi, sil
0x10e67:	test	rsi, rsi
0x10e6a:	lea	edi, [rbx - 0x30]
0x10e6d:	jne	0x111fe


0x1111e:	mov	rdi, qword ptr [r14 + 8]
0x11122:	cmp	qword ptr [rsp + 0x28], rdi
0x11127:	je	0x1112e


0x11116:	mov	rdi, rcx
0x11119:	call	0x2750


0x109fe:	or	dword ptr [r12 + 0x10], 0x40
0x10a04:	nop	dword ptr [rax]
0x10a08:	movzx	ebx, byte ptr [rax]
0x10a0b:	mov	rbp, rax
0x10a0e:	lea	rax, [rbp + 1]
0x10a12:	cmp	bl, 0x27
0x10a15:	mov	rdx, rax
0x10a18:	jne	0x109e0


0x10a70:	cmp	bl, 0x2a
0x10a73:	je	0x10c29


0xdda5:	add	r14, rcx
0xdda8:	jmp	0xdbb2


0xdd23:	cmp	rax, r8
0xdd26:	jbe	0xdd75


0x7503:	add	rax, 1
0x7507:	cmp	rdx, rdi
0x750a:	jae	0x7513


0x7534:	mov	byte ptr [rdx], 0
0x7537:	movzx	eax, byte ptr [rsp + 0x5a0]
0x753f:	test	al, al
0x7541:	je	0x7562


0x7483:	test	rcx, rcx
0x7486:	je	0x75d8


0x75d8:	movzx	ecx, byte ptr [rsi + 1]
0x75dc:	jmp	0x7385


0x748c:	mov	rsi, rdi
0x748f:	lea	rdi, [rsi + 1]
0x7493:	mov	qword ptr [r11], rdi
0x7496:	movzx	eax, byte ptr [rdi - 1]
0x749a:	test	al, al
0x749c:	je	0x72a0


0x82da:	movsx	eax, byte ptr [rbp + 1]
0x82de:	lea	esi, [rax - 0x30]
0x82e1:	cmp	sil, 9
0x82e5:	ja	0x83a8


0x83a8:	mov	eax, r9d
0x83ab:	mov	qword ptr [r11], r10
0x83ae:	mov	qword ptr [rsp + 0x38], rdx
0x83b3:	shr	eax, 0x1f
0x83b6:	mov	byte ptr [rsp + 0x90], al
0x83bd:	mov	rax, r10
0x83c0:	sub	rax, rdi
0x83c3:	cmp	r9d, 1
0x83c7:	mov	qword ptr [rsp + 0x40], rax
0x83cc:	sbb	eax, eax
0x83ce:	not	eax
0x83d0:	add	eax, 0x14
0x83d3:	cmp	r9d, 1
0x83d7:	sbb	r9d, r9d
0x83da:	not	r9d
0x83dd:	add	r9d, 0x113
0x83e4:	jmp	0x735e


0x44ce:	add	r15, r14
0x44d1:	jmp	0x4310


0x4462:	cmp	r13, rax
0x4465:	jae	0x44b3


0x1112e:	call	0x2780


0x11129:	call	0x2750


0x10c29:	mov	rsi, qword ptr [rsp + 0x10]
0x10c2e:	mov	ecx, 1
0x10c33:	mov	qword ptr [r12 + 0x18], rbp
0x10c38:	mov	qword ptr [r12 + 0x20], rax
0x10c3d:	test	rsi, rsi
0x10c40:	cmovne	rcx, rsi
0x10c44:	mov	qword ptr [rsp + 0x10], rcx
0x10c49:	movzx	ecx, byte ptr [rbp + 1]
0x10c4d:	lea	esi, [rcx - 0x30]
0x10c50:	cmp	sil, 9
0x10c54:	jbe	0x10f35


0x10a79:	lea	ecx, [rbx - 0x30]
0x10a7c:	cmp	cl, 9
0x10a7f:	jbe	0x10e97


0xdbb2:	movzx	eax, byte ptr [r12 + 1]
0xdbb8:	lea	rbx, [r12 + 1]
0xdbbd:	mov	r10, -1
0xdbc4:	test	al, al
0xdbc6:	jne	0xdb1e


0xdd75:	cmp	byte ptr [rsp + 0x30], 0
0xdd7a:	mov	qword ptr [rsp + 0x38], rcx
0xdd7f:	mov	rdx, r8
0xdd82:	mov	qword ptr [rsp + 0x30], r8
0xdd87:	mov	rsi, r9
0xdd8a:	mov	rdi, rbp
0xdd8d:	je	0xef60


0xdd28:	movsxd	rdx, r10d
0xdd2b:	mov	qword ptr [rsp + 0x48], r8
0xdd30:	mov	qword ptr [rsp + 0x40], rcx
0xdd35:	sub	rdx, r8
0xdd38:	cmp	r15d, 0x30
0xdd3c:	mov	qword ptr [rsp + 0x38], r9
0xdd41:	lea	rbx, [rbp + rdx]
0xdd46:	je	0xefb6


0x7562:	lea	rcx, [rip + 0x210577]
0x7569:	lea	rsi, [rip + 0xbb94]
0x7570:	mov	rbp, rcx
0x7573:	jmp	0x7586


0x7543:	mov	rdx, r14
0x7546:	movzx	ecx, al
0x7549:	sub	eax, 0x61
0x754c:	lea	esi, [rcx - 0x20]
0x754f:	cmp	al, 0x1a
0x7551:	cmovb	ecx, esi
0x7554:	add	rdx, 1
0x7558:	mov	byte ptr [rdx - 1], cl
0x755b:	movzx	eax, byte ptr [rdx]
0x755e:	test	al, al
0x7560:	jne	0x7546


0x82eb:	lea	rdi, [rcx + 3]
0x82ef:	movsx	ecx, byte ptr [rcx + 3]
0x82f3:	sub	eax, 0x30
0x82f6:	mov	r10d, 8
0x82fc:	lea	eax, [rax + rax*4]
0x82ff:	lea	esi, [rcx - 0x30]
0x8302:	add	eax, eax
0x8304:	cmp	sil, 9
0x8308:	ja	0x8315


0x4310:	movzx	eax, byte ptr [rbp + 1]
0x4314:	lea	rbx, [rbp + 1]
0x4318:	mov	r10, -1
0x431f:	test	al, al
0x4321:	je	0x42c2


0x4467:	mov	eax, dword ptr [rsp + 8]
0x446b:	movsxd	rbx, r10d
0x446e:	sub	rbx, r13
0x4471:	cmp	eax, 0x30
0x4474:	je	0x56a3


0x44b3:	cmp	byte ptr [rsp + 0x34], 0
0x44b8:	je	0x55e8


0x10f35:	mov	rsi, rax
0x10f38:	add	rsi, 1
0x10f3c:	movzx	edi, byte ptr [rsi]
0x10f3f:	lea	r11d, [rdi - 0x30]
0x10f43:	cmp	r11b, 9
0x10f47:	jbe	0x10f38


0x10c5a:	mov	rsi, qword ptr [rsp + 0x20]
0x10c5f:	cmp	rsi, -1
0x10c63:	lea	rdx, [rsi + 1]
0x10c67:	mov	qword ptr [r12 + 0x28], rsi
0x10c6c:	je	0x1110b


0x10e97:	mov	qword ptr [r12 + 0x18], rbp
0x10e9c:	movzx	edi, byte ptr [rbp]
0x10ea0:	mov	rsi, rbp
0x10ea3:	lea	ecx, [rdi - 0x30]
0x10ea6:	cmp	cl, 9
0x10ea9:	jbe	0x10eb7


0x10a85:	cmp	bl, 0x2e
0x10a88:	je	0x10d5f


0xef60:	call	0x2970


0xdd93:	call	0xda30


0xefb6:	mov	rdi, rbp
0xefb9:	mov	esi, 0x30
0xefbe:	mov	rbp, rbx
0xefc1:	call	0x28f0


0xdd4c:	cmp	r15d, 0x2b
0xdd50:	je	0xefb6


0x7586:	mov	rdi, r14
0x7589:	mov	qword ptr [rsp + 0x10], r11
0x758e:	mov	dword ptr [rsp + 8], r8d
0x7593:	call	0x2960


0x7546:	movzx	ecx, al
0x7549:	sub	eax, 0x61
0x754c:	lea	esi, [rcx - 0x20]
0x754f:	cmp	al, 0x1a
0x7551:	cmovb	ecx, esi
0x7554:	add	rdx, 1
0x7558:	mov	byte ptr [rdx - 1], cl
0x755b:	movzx	eax, byte ptr [rdx]
0x755e:	test	al, al
0x7560:	jne	0x7546


0x830a:	lea	eax, [rax + rcx - 0x30]
0x830e:	add	rdi, 1
0x8312:	movsx	ecx, byte ptr [rdi]
0x8315:	sub	r10d, 1
0x8319:	jne	0x82fc


0x8315:	sub	r10d, 1
0x8319:	jne	0x82fc


0x56a3:	test	rbx, rbx
0x56a6:	je	0x44b3


0x447a:	cmp	eax, 0x2b
0x447d:	je	0x56a3


0x55e8:	mov	rdi, qword ptr [rsp + 0x38]
0x55ed:	mov	rcx, r12
0x55f0:	mov	edx, 1
0x55f5:	mov	rsi, r13
0x55f8:	call	0x2af0


0x44be:	mov	rsi, qword ptr [rsp + 0x38]
0x44c3:	mov	rdx, r13
0x44c6:	mov	rdi, r12
0x44c9:	call	0x41a0


0x10f38:	add	rsi, 1
0x10f3c:	movzx	edi, byte ptr [rsi]
0x10f3f:	lea	r11d, [rdi - 0x30]
0x10f43:	cmp	r11b, 9
0x10f47:	jbe	0x10f38


0x10f49:	cmp	dil, 0x24
0x10f4d:	jne	0x10c5a


0x10c72:	mov	rbx, qword ptr [rsp + 0x20]
0x10c77:	mov	rbp, rax
0x10c7a:	mov	qword ptr [rsp + 0x20], rdx
0x10c7f:	cmp	r9, rbx
0x10c82:	mov	rcx, qword ptr [r15 + 8]
0x10c86:	ja	0x11302


0x10eb7:	movzx	edi, byte ptr [rax]
0x10eba:	lea	edx, [rdi - 0x30]
0x10ebd:	cmp	dl, 9
0x10ec0:	jbe	0x10eb0


0x10eab:	jmp	0x10ee0


0x10d5f:	cmp	byte ptr [rbp + 1], 0x2a
0x10d63:	mov	qword ptr [r12 + 0x30], rbp
0x10d68:	jne	0x10eee


0x10a8e:	xor	eax, eax
0x10a90:	mov	esi, 1
0x10a95:	jmp	0x10ac7


0x2970:	jmp	qword ptr [rip + 0x215552]


0xdd56:	mov	rdi, rbp
0xdd59:	mov	esi, 0x20
0xdd5e:	mov	rbp, rbx
0xdd61:	call	0x28f0


0x831b:	cmp	r9d, -1
0x831f:	jne	0x832f


0x82fc:	lea	eax, [rax + rax*4]
0x82ff:	lea	esi, [rcx - 0x30]
0x8302:	add	eax, eax
0x8304:	cmp	sil, 9
0x8308:	ja	0x8315


0x56ac:	xor	edx, edx
0x56ae:	mov	qword ptr [rsp + 8], rbp
0x56b3:	mov	rbp, rdx
0x56b6:	nop	word ptr cs:[rax + rax]
0x56c0:	mov	rsi, r12
0x56c3:	mov	edi, 0x30
0x56c8:	add	rbp, 1
0x56cc:	call	0x2900


0x4483:	xor	edx, edx
0x4485:	test	rbx, rbx
0x4488:	je	0x44b3


0x10f53:	xor	esi, esi
0x10f55:	movsx	eax, cl
0x10f58:	movabs	rdi, 0x1999999999999999
0x10f62:	mov	rcx, r8
0x10f65:	sub	eax, 0x30
0x10f68:	cmp	rsi, rdi
0x10f6b:	cdqe	
0x10f6d:	ja	0x10f76


0x10c8c:	add	r9, r9
0x10c8f:	lea	rax, [rbx + 1]
0x10c93:	cmp	r9, rbx
0x10c96:	cmovbe	r9, rax
0x10c9a:	movabs	rax, 0x7ffffffffffffff
0x10ca4:	cmp	r9, rax
0x10ca7:	ja	0x1154b


0x11302:	mov	rax, qword ptr [r15]
0x11305:	jmp	0x10d07


0x10eb0:	mov	rbp, rax
0x10eb3:	add	rax, 1
0x10eb7:	movzx	edi, byte ptr [rax]
0x10eba:	lea	edx, [rdi - 0x30]
0x10ebd:	cmp	dl, 9
0x10ec0:	jbe	0x10eb0


0x10ec2:	mov	rcx, rax
0x10ec5:	lea	rdx, [rbp + 2]
0x10ec9:	mov	rbp, rax
0x10ecc:	sub	rcx, rsi
0x10ecf:	mov	rsi, qword ptr [rsp + 0x10]
0x10ed4:	cmp	rsi, rcx
0x10ed7:	cmovae	rcx, rsi
0x10edb:	mov	qword ptr [rsp + 0x10], rcx
0x10ee0:	mov	qword ptr [r12 + 0x20], rbp
0x10ee5:	movzx	ebx, byte ptr [rbp]
0x10ee9:	jmp	0x10a85


0x10ee0:	mov	qword ptr [r12 + 0x20], rbp
0x10ee5:	movzx	ebx, byte ptr [rbp]
0x10ee9:	jmp	0x10a85


0x10d6e:	mov	rsi, qword ptr [rsp + 0x18]
0x10d73:	lea	r11, [rbp + 2]
0x10d77:	mov	eax, 2
0x10d7c:	mov	qword ptr [r12 + 0x38], r11
0x10d81:	cmp	rsi, 2
0x10d85:	cmovae	rax, rsi
0x10d89:	mov	qword ptr [rsp + 0x18], rax
0x10d8e:	movsx	eax, byte ptr [rbp + 2]
0x10d92:	lea	edx, [rax - 0x30]
0x10d95:	cmp	dl, 9
0x10d98:	jbe	0x1142c


0x10eee:	movzx	eax, byte ptr [rbp + 1]
0x10ef2:	sub	eax, 0x30
0x10ef5:	cmp	al, 9
0x10ef7:	ja	0x10f0e


0x10ac7:	add	rbp, 1
0x10acb:	cmp	bl, 0x68
0x10ace:	jne	0x10aa0




0x8321:	jmp	0x8390


0x832f:	sub	ecx, 0x30
0x8332:	cmp	cl, 9
0x8335:	jbe	0x8328


0x448a:	mov	qword ptr [rsp + 8], rbp
0x448f:	mov	rbp, rdx
0x4492:	nop	word ptr [rax + rax]
0x4498:	mov	rsi, r12
0x449b:	mov	edi, 0x20
0x44a0:	add	rbp, 1
0x44a4:	call	0x2900


0x10f6f:	lea	rcx, [rsi + rsi*4]
0x10f73:	add	rcx, rcx
0x10f76:	mov	rbp, rdx
0x10f79:	xor	r11d, r11d
0x10f7c:	add	rax, rcx
0x10f7f:	movzx	ecx, byte ptr [rdx + 1]
0x10f83:	setb	r11b
0x10f87:	add	rdx, 1
0x10f8b:	mov	rsi, rax
0x10f8e:	test	r11, r11
0x10f91:	lea	edi, [rcx - 0x30]
0x10f94:	jne	0x1149e


0x10f76:	mov	rbp, rdx
0x10f79:	xor	r11d, r11d
0x10f7c:	add	rax, rcx
0x10f7f:	movzx	ecx, byte ptr [rdx + 1]
0x10f83:	setb	r11b
0x10f87:	add	rdx, 1
0x10f8b:	mov	rsi, rax
0x10f8e:	test	r11, r11
0x10f91:	lea	edi, [rcx - 0x30]
0x10f94:	jne	0x1149e


0x10cad:	mov	rsi, r9
0x10cb0:	mov	qword ptr [rsp + 0x40], r9
0x10cb5:	mov	qword ptr [rsp + 0x38], r10
0x10cba:	shl	rsi, 5
0x10cbe:	cmp	qword ptr [rsp + 8], rcx
0x10cc3:	mov	qword ptr [rsp + 0x30], r8
0x10cc8:	je	0x113e1


0x1154b:	cmp	qword ptr [rsp + 8], rcx
0x11550:	jne	0x113b4


0x10d07:	mov	rdx, rax
0x10d0a:	shl	rdx, 5
0x10d0e:	add	rdx, rcx
0x10d11:	cmp	rax, rbx
0x10d14:	ja	0x10d36


0x1142c:	mov	rdx, r11
0x1142f:	add	rdx, 1
0x11433:	movzx	ecx, byte ptr [rdx]
0x11436:	lea	esi, [rcx - 0x30]
0x11439:	cmp	sil, 9
0x1143d:	jbe	0x1142f


0x10d9e:	mov	rbx, qword ptr [r12 + 0x40]
0x10da3:	cmp	rbx, -1
0x10da7:	je	0x11405


0x10f0e:	mov	rsi, qword ptr [rsp + 0x18]
0x10f13:	mov	rax, rdx
0x10f16:	mov	qword ptr [r12 + 0x38], rdx
0x10f1b:	sub	rax, rbp
0x10f1e:	movzx	ebx, byte ptr [rdx]
0x10f21:	mov	rbp, rdx
0x10f24:	cmp	rsi, rax
0x10f27:	cmovae	rax, rsi
0x10f2b:	mov	qword ptr [rsp + 0x18], rax
0x10f30:	jmp	0x10a8e


0x10ad0:	mov	ecx, eax
0x10ad2:	mov	edx, esi
0x10ad4:	and	ecx, 1
0x10ad7:	shl	edx, cl
0x10ad9:	or	eax, edx
0x10adb:	jmp	0x10ac3


0x10aa0:	cmp	bl, 0x4c
0x10aa3:	je	0x10ae0


0x8390:	lea	esi, [rcx - 0x30]
0x8393:	cmp	sil, 9
0x8397:	ja	0x832f


0x8328:	add	rdi, 1
0x832c:	movzx	ecx, byte ptr [rdi]
0x832f:	sub	ecx, 0x30
0x8332:	cmp	cl, 9
0x8335:	jbe	0x8328


0x8337:	test	r9d, r9d
0x833a:	jns	0x8405


0x10f9a:	cmp	dil, 9
0x10f9e:	jbe	0x10f55


0x1149e:	cmp	dil, 9
0x114a2:	ja	0x1110b


0x113e1:	mov	rdi, rsi
0x113e4:	call	0x29e0


0x10cce:	mov	rdi, rcx
0x10cd1:	call	0x2a40


0x11556:	jmp	0x113bc


0x113b4:	mov	rdi, rcx
0x113b7:	call	0x2750


0x10d36:	shl	rbx, 5
0x10d3a:	lea	rax, [rcx + rbx]
0x10d3e:	mov	edx, dword ptr [rax]
0x10d40:	test	edx, edx
0x10d42:	jne	0x1121b


0x1142f:	add	rdx, 1
0x11433:	movzx	ecx, byte ptr [rdx]
0x11436:	lea	esi, [rcx - 0x30]
0x11439:	cmp	sil, 9
0x1143d:	jbe	0x1142f


0x1143f:	cmp	cl, 0x24
0x11442:	jne	0x10d9e


0x11405:	mov	rsi, qword ptr [rsp + 0x20]
0x1140a:	cmp	rsi, -1
0x1140e:	lea	rax, [rsi + 1]
0x11412:	mov	qword ptr [r12 + 0x40], rsi
0x11417:	je	0x1110b


0x10dad:	cmp	r9, rbx
0x10db0:	mov	rcx, qword ptr [r15 + 8]
0x10db4:	jbe	0x1131f


0x10f00:	add	rdx, 1
0x10f04:	movzx	eax, byte ptr [rdx]
0x10f07:	sub	eax, 0x30
0x10f0a:	cmp	al, 9
0x10f0c:	jbe	0x10f00


0x10ac3:	movzx	ebx, byte ptr [rbp]
0x10ac7:	add	rbp, 1
0x10acb:	cmp	bl, 0x68
0x10ace:	jne	0x10aa0


0x10ae0:	or	eax, 4
0x10ae3:	jmp	0x10ac3


0x10aa5:	cmp	bl, 0x6c
0x10aa8:	je	0x10ac0


0x8399:	cmp	cl, 0x30
0x839c:	je	0x8389


0x8340:	test	eax, eax
0x8342:	je	0x8405


0x8405:	cmp	r9d, 1
0x8409:	cdqe	
0x840b:	mov	qword ptr [rsp + 0x90], rdx
0x8413:	mov	qword ptr [rsp + 0x38], rax
0x8418:	sbb	eax, eax
0x841a:	mov	qword ptr [r11], rdi
0x841d:	not	eax
0x841f:	add	eax, 0x16
0x8422:	cmp	r9d, 1
0x8426:	sbb	r9d, r9d
0x8429:	not	r9d
0x842c:	add	r9d, 0x115
0x8433:	jmp	0x735e


0x10f55:	movsx	eax, cl
0x10f58:	movabs	rdi, 0x1999999999999999
0x10f62:	mov	rcx, r8
0x10f65:	sub	eax, 0x30
0x10f68:	cmp	rsi, rdi
0x10f6b:	cdqe	
0x10f6d:	ja	0x10f76


0x10fa0:	lea	rbx, [rax - 1]
0x10fa4:	cmp	rbx, -3
0x10fa8:	ja	0x1110b


0x114a8:	movsx	eax, cl
0x114ab:	mov	rbp, rdx
0x114ae:	mov	rcx, r8
0x114b1:	sub	eax, 0x30
0x114b4:	cdqe	
0x114b6:	jmp	0x10f79


0x113bc:	mov	rdi, qword ptr [r14 + 8]
0x113c0:	cmp	qword ptr [rsp + 0x28], rdi
0x113c5:	je	0x113cc


0x10d20:	add	rax, 1
0x10d24:	mov	dword ptr [rdx], 0
0x10d2a:	add	rdx, 0x20
0x10d2e:	cmp	rax, rbx
0x10d31:	jbe	0x10d20


0x10d33:	mov	qword ptr [r15], rax
0x10d36:	shl	rbx, 5
0x10d3a:	lea	rax, [rcx + rbx]
0x10d3e:	mov	edx, dword ptr [rax]
0x10d40:	test	edx, edx
0x10d42:	jne	0x1121b


0x10d48:	mov	dword ptr [rax], 5
0x10d4e:	movzx	ebx, byte ptr [rbp]
0x10d52:	lea	rdx, [rbp + 1]
0x10d56:	cmp	bl, 0x2e
0x10d59:	jne	0x10a8e


0x1121b:	cmp	edx, 5
0x1121e:	jne	0x1110f


0x11448:	xor	ecx, ecx
0x1144a:	movabs	rsi, 0x1999999999999999
0x11454:	sub	eax, 0x30
0x11457:	mov	rdx, r8
0x1145a:	cmp	rcx, rsi
0x1145d:	cdqe	
0x1145f:	ja	0x11468


0x1141d:	mov	rbx, qword ptr [rsp + 0x20]
0x11422:	mov	qword ptr [rsp + 0x20], rax
0x11427:	jmp	0x10dad


0x1131f:	add	r9, r9
0x11322:	lea	rax, [rbx + 1]
0x11326:	cmp	r9, rbx
0x11329:	cmovbe	r9, rax
0x1132d:	movabs	rax, 0x7ffffffffffffff
0x11337:	cmp	r9, rax
0x1133a:	ja	0x1154b


0x10dba:	mov	rax, qword ptr [r15]
0x10dbd:	mov	rdx, rax
0x10dc0:	shl	rdx, 5
0x10dc4:	add	rdx, rcx
0x10dc7:	cmp	rax, rbx
0x10dca:	ja	0x10de6


0x10ac0:	add	eax, 8
0x10ac3:	movzx	ebx, byte ptr [rbp]
0x10ac7:	add	rbp, 1
0x10acb:	cmp	bl, 0x68
0x10ace:	jne	0x10aa0


0x10aaa:	cmp	bl, 0x6a
0x10aad:	je	0x10ac0


0x8389:	add	rdi, 1
0x838d:	movzx	ecx, byte ptr [rdi]
0x8390:	lea	esi, [rcx - 0x30]
0x8393:	cmp	sil, 9
0x8397:	ja	0x832f


0x839e:	add	eax, 1
0x83a1:	jmp	0x832f


0x8348:	movabs	rcx, 0x8000000000000000
0x8352:	cmp	rdx, rcx
0x8355:	je	0x82b7


0x10fae:	mov	qword ptr [r12 + 0x28], rbx
0x10fb3:	add	rbp, 2
0x10fb7:	jmp	0x10c7f


0x10f79:	xor	r11d, r11d
0x10f7c:	add	rax, rcx
0x10f7f:	movzx	ecx, byte ptr [rdx + 1]
0x10f83:	setb	r11b
0x10f87:	add	rdx, 1
0x10f8b:	mov	rsi, rax
0x10f8e:	test	r11, r11
0x10f91:	lea	edi, [rcx - 0x30]
0x10f94:	jne	0x1149e


0x113cc:	call	0x2780


0x113c7:	call	0x2750


0x11224:	movzx	ebx, byte ptr [rbp]
0x11228:	lea	rdx, [rbp + 1]
0x1122c:	jmp	0x10a85


0x1110f:	cmp	qword ptr [rsp + 8], rcx
0x11114:	je	0x1111e


0x11461:	lea	rdx, [rcx + rcx*4]
0x11465:	add	rdx, rdx
0x11468:	mov	rsi, r11
0x1146b:	xor	ebx, ebx
0x1146d:	add	rdx, rax
0x11470:	movsx	eax, byte ptr [r11 + 1]
0x11475:	setb	bl
0x11478:	add	r11, 1
0x1147c:	mov	rcx, rdx
0x1147f:	test	rbx, rbx
0x11482:	lea	edi, [rax - 0x30]
0x11485:	je	0x114f8


0x11468:	mov	rsi, r11
0x1146b:	xor	ebx, ebx
0x1146d:	add	rdx, rax
0x11470:	movsx	eax, byte ptr [r11 + 1]
0x11475:	setb	bl
0x11478:	add	r11, 1
0x1147c:	mov	rcx, rdx
0x1147f:	test	rbx, rbx
0x11482:	lea	edi, [rax - 0x30]
0x11485:	je	0x114f8


0x11340:	mov	rsi, r9
0x11343:	mov	qword ptr [rsp + 0x48], r9
0x11348:	mov	qword ptr [rsp + 0x40], r10
0x1134d:	shl	rsi, 5
0x11351:	cmp	qword ptr [rsp + 8], rcx
0x11356:	mov	qword ptr [rsp + 0x38], r8
0x1135b:	mov	qword ptr [rsp + 0x30], r11
0x11360:	je	0x1151e


0x10de6:	shl	rbx, 5
0x10dea:	lea	rax, [rcx + rbx]
0x10dee:	mov	edx, dword ptr [rax]
0x10df0:	test	edx, edx
0x10df2:	jne	0x1130a


0x10aaf:	mov	edx, ebx
0x10ab1:	and	edx, 0xffffffdf
0x10ab4:	cmp	dl, 0x5a
0x10ab7:	je	0x10ac0


0x835b:	sub	rdx, 1
0x835f:	mov	qword ptr [r11], rdi
0x8362:	mov	r9d, 0x114
0x8368:	mov	qword ptr [rsp + 0x90], rdx
0x8370:	mov	edx, 0x3b9aca00
0x8375:	sub	edx, eax
0x8377:	movsxd	rax, edx
0x837a:	mov	qword ptr [rsp + 0x38], rax
0x837f:	mov	eax, 0x15
0x8384:	jmp	0x735e


0x10c7f:	cmp	r9, rbx
0x10c82:	mov	rcx, qword ptr [r15 + 8]
0x10c86:	ja	0x11302


0x114f8:	cmp	dil, 9
0x114fc:	jbe	0x1144a


0x11487:	cmp	dil, 9
0x1148b:	ja	0x1110b


0x1151e:	mov	rdi, rsi
0x11521:	call	0x29e0


0x11366:	mov	rdi, rcx
0x11369:	call	0x2a40


0x10dd0:	add	rax, 1
0x10dd4:	mov	dword ptr [rdx], 0
0x10dda:	add	rdx, 0x20
0x10dde:	cmp	rax, rbx
0x10de1:	jbe	0x10dd0


0x10de3:	mov	qword ptr [r15], rax
0x10de6:	shl	rbx, 5
0x10dea:	lea	rax, [rcx + rbx]
0x10dee:	mov	edx, dword ptr [rax]
0x10df0:	test	edx, edx
0x10df2:	jne	0x1130a


0x10df8:	mov	dword ptr [rax], 5
0x10dfe:	mov	rbp, r11
0x10e01:	movzx	ebx, byte ptr [r11]
0x10e05:	jmp	0x10a8e


0x1130a:	cmp	edx, 5
0x1130d:	jne	0x1110f


0x10ab9:	cmp	bl, 0x74
0x10abc:	jne	0x10ae8


0x1144a:	movabs	rsi, 0x1999999999999999
0x11454:	sub	eax, 0x30
0x11457:	mov	rdx, r8
0x1145a:	cmp	rcx, rsi
0x1145d:	cdqe	
0x1145f:	ja	0x11468


0x11502:	lea	rbx, [rdx - 1]
0x11506:	cmp	rbx, -3
0x1150a:	ja	0x1110b


0x11491:	sub	eax, 0x30
0x11494:	mov	rdx, r8
0x11497:	mov	rsi, r11
0x1149a:	cdqe	
0x1149c:	jmp	0x1146b


0x11313:	movzx	ebx, byte ptr [r11]
0x11317:	mov	rbp, r11
0x1131a:	jmp	0x10a8e


0x10ae8:	lea	edx, [rbx - 0x25]
0x10aeb:	cmp	dl, 0x53
0x10aee:	ja	0x1110b


0x11510:	mov	qword ptr [r12 + 0x40], rbx
0x11515:	lea	r11, [rsi + 2]
0x11519:	jmp	0x10dad


0x1146b:	xor	ebx, ebx
0x1146d:	add	rdx, rax
0x11470:	movsx	eax, byte ptr [r11 + 1]
0x11475:	setb	bl
0x11478:	add	r11, 1
0x1147c:	mov	rcx, rdx
0x1147f:	test	rbx, rbx
0x11482:	lea	edi, [rax - 0x30]
0x11485:	je	0x114f8


0x10af4:	lea	rcx, [rip + 0x44a1]
0x10afb:	movzx	edx, dl
0x10afe:	movsxd	rdx, dword ptr [rcx + rdx*4]
0x10b02:	add	rdx, rcx
0x10b05:	jmp	rdx


0xdd98:	mov	r8, qword ptr [rsp + 0x30]
0xdd9d:	mov	rcx, qword ptr [rsp + 0x38]
0xdda2:	add	rbp, r8
0xdda5:	add	r14, rcx
0xdda8:	jmp	0xdbb2


0x34b8:	mov	byte ptr [rip + 0x214c29], 1
0x34bf:	pop	rbp
0x34c0:	ret	


0x5e52:	add	rsp, 0x20
0x5e56:	mov	rdx, qword ptr [rsp + 8]
0x5e5b:	xor	rdx, qword ptr fs:[0x28]
0x5e64:	jne	0x5e6b


0x5e66:	add	rsp, 0x18
0x5e6a:	ret	


0x5e6b:	call	0x2850


0xf570:	add	rsp, 0x20
0xf574:	mov	rdx, qword ptr [rsp + 8]
0xf579:	xor	rdx, qword ptr fs:[0x28]
0xf582:	jne	0xf589


0xf584:	add	rsp, 0x18
0xf588:	ret	


0xf589:	call	0x2850


0x671b:	test	r12, r12
0x671e:	je	0x6733


0x6733:	mov	rdx, qword ptr [rsp + 0x28]
0x6738:	xor	rdx, qword ptr fs:[0x28]
0x6741:	mov	rax, rbx
0x6744:	jne	0x678c


0x6720:	cmp	eax, 0x63
0x6723:	mov	rbp, rax
0x6726:	jg	0x6733


0x6746:	add	rsp, 0x30
0x674a:	pop	rbx
0x674b:	pop	rbp
0x674c:	pop	r12
0x674e:	ret	


0x678c:	call	0x2850


0x6728:	cmp	qword ptr [r12 + 0xd0], 0
0x6731:	jne	0x6750


0x6750:	mov	edi, dword ptr [r12 + 0x18]
0x6755:	mov	rsi, rsp
0x6758:	call	0x60f0


0xf5fe:	test	eax, eax
0xf600:	js	0x10468


0x10468:	xor	r15d, r15d
0x1046b:	jmp	0xf77f


0xf606:	mov	rsi, r14
0xf609:	mov	rdi, r12
0xf60c:	call	0x106c0


0xf77f:	mov	rdi, qword ptr [rbp - 0x38]
0xf783:	xor	rdi, qword ptr fs:[0x28]
0xf78c:	mov	rax, r15
0xf78f:	jne	0x10697


0xf795:	lea	rsp, [rbp - 0x28]
0xf799:	pop	rbx
0xf79a:	pop	r12
0xf79c:	pop	r13
0xf79e:	pop	r14
0xf7a0:	pop	r15
0xf7a2:	pop	rbp
0xf7a3:	ret	


0x10697:	call	0x2850


0xf611:	test	eax, eax
0xf613:	js	0x104d0


0x104d0:	mov	rax, qword ptr [rbp - 0x408]
0x104d7:	mov	rdi, qword ptr [rbp - 0x2b8]
0x104de:	add	rax, 0x20
0x104e2:	cmp	rdi, rax
0x104e5:	je	0x104ec


0xf619:	mov	rax, qword ptr [rbp - 0x2b0]
0xf620:	mov	rdx, -1
0xf627:	add	rax, 7
0xf62b:	cmp	rax, 6
0xf62f:	cmovbe	rax, rdx
0xf633:	add	rax, qword ptr [rbp - 0x2a8]
0xf63a:	jb	0x10068


0x104ec:	mov	rax, qword ptr [rbp - 0x410]
0x104f3:	mov	rdi, qword ptr [rbp - 0x3a8]
0x104fa:	add	rax, 0x10
0x104fe:	cmp	rdi, rax
0x10501:	je	0x10508


0x104e7:	call	0x2750


0x10068:	call	0x2780


0xf640:	mov	rdi, rax
0xf643:	xor	r8d, r8d
0xf646:	add	rdi, 6
0xf64a:	setb	r8b
0xf64e:	jb	0x10068


0x10508:	call	0x2780


0x10503:	call	0x2750


0xf654:	cmp	rdi, 0xf9f
0xf65b:	jbe	0xf7a8


0xf7a8:	add	rax, 0x24
0xf7ac:	mov	qword ptr [rbp - 0x420], 0
0xf7b7:	and	rax, 0xfffffffffffffff0
0xf7bb:	sub	rsp, rax
0xf7be:	lea	rax, [rsp + 0xf]
0xf7c3:	and	rax, 0xfffffffffffffff0
0xf7c7:	mov	qword ptr [rbp - 0x3d8], rax
0xf7ce:	jmp	0xf695


0xf661:	cmp	rdi, -1
0xf665:	mov	qword ptr [rbp - 0x3c8], r8
0xf66c:	je	0x10068


0xf695:	xor	r12d, r12d
0xf698:	cmp	qword ptr [rbp - 0x3e8], 0
0xf6a0:	je	0xf6ac


0xf672:	call	0x29e0


0xf6ac:	mov	r13, qword ptr [rbp - 0x2b8]
0xf6b3:	lea	rax, [rbp - 0x3bc]
0xf6ba:	mov	r15, qword ptr [rbp - 0x3e8]
0xf6c1:	mov	qword ptr [rbp - 0x400], 0
0xf6cc:	mov	qword ptr [rbp - 0x3f0], rax
0xf6d3:	mov	rax, rbx
0xf6d6:	mov	rbx, r8
0xf6d9:	mov	rcx, qword ptr [r13]
0xf6dd:	mov	r8, rax
0xf6e0:	cmp	rcx, r8
0xf6e3:	je	0x10051


0xf6a2:	mov	rax, qword ptr [rbp - 0x418]
0xf6a9:	mov	r12, qword ptr [rax]
0xf6ac:	mov	r13, qword ptr [rbp - 0x2b8]
0xf6b3:	lea	rax, [rbp - 0x3bc]
0xf6ba:	mov	r15, qword ptr [rbp - 0x3e8]
0xf6c1:	mov	qword ptr [rbp - 0x400], 0
0xf6cc:	mov	qword ptr [rbp - 0x3f0], rax
0xf6d3:	mov	rax, rbx
0xf6d6:	mov	rbx, r8
0xf6d9:	mov	rcx, qword ptr [r13]
0xf6dd:	mov	r8, rax
0xf6e0:	cmp	rcx, r8
0xf6e3:	je	0x10051


0x10051:	mov	r14, rbx
0x10054:	jmp	0xf853


0xf6e9:	sub	rcx, r8
0xf6ec:	mov	rax, rbx
0xf6ef:	add	rax, rcx
0xf6f2:	mov	r14, rax
0xf6f5:	jae	0xf7d8


0xf853:	mov	rax, qword ptr [rbp - 0x400]
0xf85a:	cmp	qword ptr [rbp - 0x2c0], rax
0xf861:	je	0x1051b


0xf6fb:	cmp	r12, -1
0xf6ff:	je	0x101d0


0xf7d8:	cmp	r12, rax
0xf7db:	jae	0xf844


0x1051b:	mov	rbx, r14
0x1051e:	xor	eax, eax
0x10520:	add	rbx, 1
0x10524:	jb	0x10630


0xf867:	movzx	edx, byte ptr [r13 + 0x48]
0xf86c:	mov	rax, qword ptr [r13 + 0x50]
0xf870:	cmp	dl, 0x25
0xf873:	je	0x10008


0x101d0:	mov	r14, r12
0x101d3:	jmp	0xf844


0xf705:	call	0x2780


0xf7dd:	test	r12, r12
0xf7e0:	jne	0x10110


0xf844:	lea	rdi, [r15 + rbx]
0xf848:	mov	rdx, rcx
0xf84b:	mov	rsi, r8
0xf84e:	call	0x2970


0x10630:	cmp	r12, -1
0x10634:	mov	eax, 1
0x10639:	je	0x1057c


0x1052a:	cmp	r12, rbx
0x1052d:	jae	0x1057c


0x10008:	cmp	rax, -1
0x1000c:	jne	0x104c6


0xf879:	cmp	rax, -1
0xf87d:	je	0x104c6


0xf7e6:	cmp	rax, 0xc
0xf7ea:	ja	0x10122


0x10110:	js	0xf705


0x1057c:	cmp	r15, qword ptr [rbp - 0x3e8]
0x10583:	mov	byte ptr [r15 + r14], 0
0x10588:	je	0x105a1


0x1063f:	test	r12, r12
0x10642:	je	0xf705


0x1052f:	test	r12, r12
0x10532:	jne	0x10669


0x10012:	mov	rax, r14
0x10015:	add	rax, 1
0x10019:	mov	rbx, rax
0x1001c:	jae	0x100a8


0x104c6:	call	0x2770


0xf883:	mov	r8, qword ptr [rbp - 0x3a8]
0xf88a:	shl	rax, 5
0xf88e:	add	rax, r8
0xf891:	cmp	dl, 0x6e
0xf894:	mov	edi, dword ptr [rax]
0xf896:	mov	dword ptr [rbp - 0x3d0], edi
0xf89c:	je	0x10080


0xf7f0:	mov	r12d, 0xc
0xf7f6:	cmp	r15, qword ptr [rbp - 0x3e8]
0xf7fd:	sete	dl
0xf800:	test	r15, r15
0xf803:	je	0x10148


0x10122:	cmp	rax, -1
0x10126:	je	0xf705


0x10116:	add	r12, r12
0x10119:	cmp	r12, rax
0x1011c:	jae	0xf7f6


0x105a1:	mov	rax, qword ptr [rbp - 0x420]
0x105a8:	test	rax, rax
0x105ab:	je	0x105b5


0x1058a:	cmp	r12, rbx
0x1058d:	jbe	0x105a1


0x10648:	js	0xf705


0x10538:	cmp	rbx, 0xc
0x1053c:	ja	0x1064e


0x10669:	js	0xf705


0x10022:	cmp	r12, -1
0x10026:	jne	0xf705


0x100a8:	cmp	r12, rax
0x100ab:	jae	0x1002f


0x10080:	mov	edx, edi
0x10082:	sub	edx, 0x12
0x10085:	cmp	edx, 4
0x10088:	ja	0x104c6


0xf8a2:	mov	eax, dword ptr [r13 + 0x10]
0xf8a6:	mov	rdi, qword ptr [rbp - 0x3d8]
0xf8ad:	test	al, 1
0xf8af:	mov	byte ptr [rdi], 0x25
0xf8b2:	lea	rbx, [rdi + 1]
0xf8b6:	je	0xf8c7


0x10148:	mov	rdi, r12
0x1014b:	mov	qword ptr [rbp - 0x3e0], r8
0x10152:	mov	byte ptr [rbp - 0x3d0], dl
0x10158:	mov	qword ptr [rbp - 0x3c8], rcx
0x1015f:	call	0x29e0


0xf809:	test	dl, dl
0xf80b:	jne	0x10148


0x1012c:	cmp	r15, qword ptr [rbp - 0x3e8]
0x10133:	mov	r12, rax
0x10136:	sete	dl
0x10139:	test	r15, r15
0x1013c:	jne	0xf809


0xf7f6:	cmp	r15, qword ptr [rbp - 0x3e8]
0xf7fd:	sete	dl
0xf800:	test	r15, r15
0xf803:	je	0x10148


0x105b5:	mov	rax, qword ptr [rbp - 0x408]
0x105bc:	mov	rdi, qword ptr [rbp - 0x2b8]
0x105c3:	add	rax, 0x20
0x105c7:	cmp	rdi, rax
0x105ca:	je	0x105d1


0x105ad:	mov	rdi, rax
0x105b0:	call	0x2750


0x1058f:	mov	rdi, r15
0x10592:	mov	rsi, rbx
0x10595:	call	0x2a40


0x1064e:	test	rax, rax
0x10651:	jne	0xf705


0x10542:	mov	r12d, 0xc
0x10548:	cmp	r15, qword ptr [rbp - 0x3e8]
0x1054f:	sete	r13b
0x10553:	test	r15, r15
0x10556:	je	0x105fc


0x1066f:	add	r12, r12
0x10672:	cmp	r12, rbx
0x10675:	jae	0x10548


0x1002c:	mov	rbx, r12
0x1002f:	mov	byte ptr [r15 + r14], 0x25
0x10034:	mov	r8, qword ptr [r13 + 8]
0x10038:	add	r13, 0x58
0x1003c:	mov	rcx, qword ptr [r13]
0x10040:	add	qword ptr [rbp - 0x400], 1
0x10048:	cmp	rcx, r8
0x1004b:	jne	0xf6e9


0x100ad:	test	r12, r12
0x100b0:	jne	0x10480


0x1002f:	mov	byte ptr [r15 + r14], 0x25
0x10034:	mov	r8, qword ptr [r13 + 8]
0x10038:	add	r13, 0x58
0x1003c:	mov	rcx, qword ptr [r13]
0x10040:	add	qword ptr [rbp - 0x400], 1
0x10048:	cmp	rcx, r8
0x1004b:	jne	0xf6e9


0x1008e:	lea	rdi, [rip + 0x4e6b]
0x10095:	mov	rax, qword ptr [rax + 0x10]
0x10099:	movsxd	rdx, dword ptr [rdi + rdx*4]
0x1009d:	add	rdx, rdi
0x100a0:	jmp	rdx


0xf8c7:	test	al, 2
0xf8c9:	je	0xf8d2


0xf8b8:	mov	rdi, qword ptr [rbp - 0x3d8]
0xf8bf:	lea	rbx, [rdi + 2]
0xf8c3:	mov	byte ptr [rdi + 1], 0x27
0xf8c7:	test	al, 2
0xf8c9:	je	0xf8d2


0xf811:	mov	rsi, r12
0xf814:	mov	rdi, r15
0xf817:	mov	qword ptr [rbp - 0x3d0], r8
0xf81e:	mov	qword ptr [rbp - 0x3c8], rcx
0xf825:	call	0x2a40


0x105d1:	mov	rax, qword ptr [rbp - 0x410]
0x105d8:	mov	rdi, qword ptr [rbp - 0x3a8]
0x105df:	add	rax, 0x10
0x105e3:	cmp	rdi, rax
0x105e6:	je	0x105ed


0x105cc:	call	0x2750


0x10657:	cmp	rbx, -1
0x1065b:	je	0xf705


0x105fc:	mov	rdi, r12
0x105ff:	call	0x29e0


0x1055c:	test	r13b, r13b
0x1055f:	jne	0x105fc


0x1067b:	jmp	0x1064e


0x10548:	cmp	r15, qword ptr [rbp - 0x3e8]
0x1054f:	sete	r13b
0x10553:	test	r15, r15
0x10556:	je	0x105fc


0x100b6:	cmp	rax, 0xc
0x100ba:	ja	0x10492


0x10480:	js	0xf705


0xf8d2:	test	al, 4
0xf8d4:	je	0xf8dd


0xf8cb:	mov	byte ptr [rbx], 0x2d
0xf8ce:	add	rbx, 1
0xf8d2:	test	al, 4
0xf8d4:	je	0xf8dd


0x105ed:	mov	rax, qword ptr [rbp - 0x418]
0x105f4:	mov	qword ptr [rax], r14
0x105f7:	jmp	0xf77f


0x105e8:	call	0x2750


0x10661:	mov	r12, rbx
0x10664:	jmp	0x10548


0x10565:	mov	rsi, r12
0x10568:	mov	rdi, r15
0x1056b:	call	0x2a40


0x100c0:	mov	r12d, 0xc
0x100c6:	cmp	r15, qword ptr [rbp - 0x3e8]
0x100cd:	sete	dl
0x100d0:	test	r15, r15
0x100d3:	je	0x10340


0x10492:	cmp	rax, -1
0x10496:	je	0xf705


0x10486:	add	r12, r12
0x10489:	cmp	r12, rax
0x1048c:	jae	0x100c6


0xf8dd:	test	al, 8
0xf8df:	je	0xf8e8


0xf8d6:	mov	byte ptr [rbx], 0x2b
0xf8d9:	add	rbx, 1
0xf8dd:	test	al, 8
0xf8df:	je	0xf8e8


0x10340:	mov	rdi, r12
0x10343:	mov	byte ptr [rbp - 0x3c8], dl
0x10349:	call	0x29e0


0x100d9:	test	dl, dl
0x100db:	jne	0x10340


0x1049c:	mov	r12, rax
0x1049f:	jmp	0x100c6


0x100c6:	cmp	r15, qword ptr [rbp - 0x3e8]
0x100cd:	sete	dl
0x100d0:	test	r15, r15
0x100d3:	je	0x10340


0xf8e8:	test	al, 0x10
0xf8ea:	je	0xf8f3


0xf8e1:	mov	byte ptr [rbx], 0x20
0xf8e4:	add	rbx, 1
0xf8e8:	test	al, 0x10
0xf8ea:	je	0xf8f3


0x100e1:	mov	rsi, r12
0x100e4:	mov	rdi, r15
0x100e7:	call	0x2a40


0xf8f3:	test	al, 0x40
0xf8f5:	je	0xf8fe


0xf8ec:	mov	byte ptr [rbx], 0x23
0xf8ef:	add	rbx, 1
0xf8f3:	test	al, 0x40
0xf8f5:	je	0xf8fe


0xf8fe:	test	al, 0x20
0xf900:	je	0xf909


0xf8f7:	mov	byte ptr [rbx], 0x49
0xf8fa:	add	rbx, 1
0xf8fe:	test	al, 0x20
0xf900:	je	0xf909


0xf909:	mov	rsi, qword ptr [r13 + 0x18]
0xf90d:	mov	rdx, qword ptr [r13 + 0x20]
0xf911:	cmp	rsi, rdx
0xf914:	je	0xf946


0xf902:	mov	byte ptr [rbx], 0x30
0xf905:	add	rbx, 1
0xf909:	mov	rsi, qword ptr [r13 + 0x18]
0xf90d:	mov	rdx, qword ptr [r13 + 0x20]
0xf911:	cmp	rsi, rdx
0xf914:	je	0xf946


0xf946:	mov	rsi, qword ptr [r13 + 0x30]
0xf94a:	mov	rdx, qword ptr [r13 + 0x38]
0xf94e:	cmp	rsi, rdx
0xf951:	je	0xf983


0xf916:	mov	rcx, rdx
0xf919:	mov	rdi, rbx
0xf91c:	mov	qword ptr [rbp - 0x3e0], r8
0xf923:	sub	rcx, rsi
0xf926:	mov	rdx, rcx
0xf929:	mov	qword ptr [rbp - 0x3c8], rcx
0xf930:	call	0x2970


0xf983:	mov	edi, dword ptr [rbp - 0x3d0]
0xf989:	cmp	edi, 0x10
0xf98c:	ja	0xf9bb


0xf953:	mov	rcx, rdx
0xf956:	mov	rdi, rbx
0xf959:	mov	qword ptr [rbp - 0x3e0], r8
0xf960:	sub	rcx, rsi
0xf963:	mov	rdx, rcx
0xf966:	mov	qword ptr [rbp - 0x3c8], rcx
0xf96d:	call	0x2970


0xf98e:	mov	eax, 1
0xf993:	mov	ecx, edi
0xf995:	shl	rax, cl
0xf998:	test	eax, 0x14180
0xf99d:	jne	0xf9b4


0xf9bb:	movzx	eax, byte ptr [r13 + 0x48]
0xf9c0:	mov	byte ptr [rbx + 1], 0
0xf9c4:	mov	byte ptr [rbx], al
0xf9c6:	mov	rax, qword ptr [r13 + 0x28]
0xf9ca:	cmp	rax, -1
0xf9ce:	je	0x10100


0xf99f:	test	ah, 0x10
0xf9a2:	jne	0x10300


0xf9b4:	mov	byte ptr [rbx], 0x6c
0xf9b7:	add	rbx, 1
0xf9bb:	movzx	eax, byte ptr [r13 + 0x48]
0xf9c0:	mov	byte ptr [rbx + 1], 0
0xf9c4:	mov	byte ptr [rbx], al
0xf9c6:	mov	rax, qword ptr [r13 + 0x28]
0xf9ca:	cmp	rax, -1
0xf9ce:	je	0x10100


0x10100:	mov	dword ptr [rbp - 0x3e0], 0
0x1010a:	jmp	0xf9f7


0xf9d4:	shl	rax, 5
0xf9d8:	add	rax, r8
0xf9db:	cmp	dword ptr [rax], 5
0xf9de:	jne	0x104c6


0xf9a8:	test	ah, 6
0xf9ab:	je	0xf9bb


0x10300:	mov	byte ptr [rbx], 0x4c
0x10303:	add	rbx, 1
0x10307:	jmp	0xf9bb


0xf9f7:	mov	rax, qword ptr [r13 + 0x40]
0xf9fb:	cmp	rax, -1
0xf9ff:	je	0xfa2c


0xf9e4:	mov	eax, dword ptr [rax + 0x10]
0xf9e7:	mov	dword ptr [rbp - 0x3e0], 1
0xf9f1:	mov	dword ptr [rbp - 0x3b8], eax
0xf9f7:	mov	rax, qword ptr [r13 + 0x40]
0xf9fb:	cmp	rax, -1
0xf9ff:	je	0xfa2c


0xf9ad:	mov	byte ptr [rbx], 0x6c
0xf9b0:	add	rbx, 1
0xf9b4:	mov	byte ptr [rbx], 0x6c
0xf9b7:	add	rbx, 1
0xf9bb:	movzx	eax, byte ptr [r13 + 0x48]
0xf9c0:	mov	byte ptr [rbx + 1], 0
0xf9c4:	mov	byte ptr [rbx], al
0xf9c6:	mov	rax, qword ptr [r13 + 0x28]
0xf9ca:	cmp	rax, -1
0xf9ce:	je	0x10100


0xfa2c:	mov	rax, r14
0xfa2f:	xor	edx, edx
0xfa31:	add	rax, 2
0xfa35:	jb	0x1069c


0xfa01:	shl	rax, 5
0xfa05:	add	r8, rax
0xfa08:	cmp	dword ptr [r8], 5
0xfa0c:	jne	0x104c6


0x1069c:	cmp	r12, -1
0x106a0:	mov	edx, 1
0x106a5:	je	0xfa8b


0xfa3b:	cmp	r12, rax
0xfa3e:	jae	0xfa8b


0xfa12:	mov	eax, dword ptr [rbp - 0x3e0]
0xfa18:	mov	edx, dword ptr [r8 + 0x10]
0xfa1c:	mov	dword ptr [rbp + rax*4 - 0x3b8], edx
0xfa23:	lea	eax, [rax + 1]
0xfa26:	mov	dword ptr [rbp - 0x3e0], eax
0xfa2c:	mov	rax, r14
0xfa2f:	xor	edx, edx
0xfa31:	add	rax, 2
0xfa35:	jb	0x1069c


0xfa8b:	mov	byte ptr [r15 + r14], 0
0xfa90:	call	0x2780


0x106ab:	test	r12, r12
0x106ae:	je	0xf705


0xfa40:	test	r12, r12
0xfa43:	jne	0x10268


0x106b4:	jns	0x10280


0xfa49:	cmp	rax, 0xc
0xfa4d:	ja	0x10280


0x10268:	js	0xf705


0x106ba:	jmp	0xf705


0x10280:	test	rdx, rdx
0x10283:	jne	0xf705


0xfa53:	mov	r12d, 0xc
0xfa59:	cmp	r15, qword ptr [rbp - 0x3e8]
0xfa60:	sete	dl
0xfa63:	test	r15, r15
0xfa66:	je	0x102b0


0x1026e:	add	r12, r12
0x10271:	cmp	r12, rax
0x10274:	jae	0xfa59


0x10289:	cmp	rax, -1
0x1028d:	je	0xf705


0x102b0:	mov	rdi, r12
0x102b3:	mov	byte ptr [rbp - 0x3c8], dl
0x102b9:	call	0x29e0


0xfa6c:	test	dl, dl
0xfa6e:	jne	0x102b0


0xfa59:	cmp	r15, qword ptr [rbp - 0x3e8]
0xfa60:	sete	dl
0xfa63:	test	r15, r15
0xfa66:	je	0x102b0


0x10293:	cmp	r15, qword ptr [rbp - 0x3e8]
0x1029a:	mov	r12, rax
0x1029d:	sete	dl
0x102a0:	test	r15, r15
0x102a3:	jne	0xfa6c


0xfa74:	mov	rsi, r12
0xfa77:	mov	rdi, r15
0xfa7a:	call	0x2a40


0xd807:	test	rax, rax
0xd80a:	mov	rbx, qword ptr [rsp + 8]
0xd80f:	je	0xd89e


0xd89e:	mov	rdi, r13
0xd8a1:	mov	ebx, 0xffffffff
0xd8a6:	call	0xf590


0xd815:	mov	rcx, r13
0xd818:	mov	rdx, rbx
0xd81b:	mov	esi, 1
0xd820:	mov	rdi, rax
0xd823:	mov	rbp, rax
0xd826:	call	0x2af0


0xd8ab:	jmp	0xd846


0xd846:	mov	rcx, qword ptr [rsp + 0x7e8]
0xd84e:	xor	rcx, qword ptr fs:[0x28]
0xd857:	mov	eax, ebx
0xd859:	jne	0xd8ad


0xd85b:	add	rsp, 0x7f8
0xd862:	pop	rbx
0xd863:	pop	rbp
0xd864:	pop	r12
0xd866:	pop	r13
0xd868:	ret	


0xd8ad:	call	0x2850


0x115e1:	test	rbp, rbp
0x115e4:	je	0x11606


0x11606:	add	rsp, 8
0x1160a:	pop	rbx
0x1160b:	pop	rbp
0x1160c:	pop	r12
0x1160e:	pop	r13
0x11610:	pop	r14
0x11612:	pop	r15
0x11614:	ret	


0x115e6:	xor	ebx, ebx
0x115e8:	nop	dword ptr [rax + rax]
0x115f0:	mov	rdx, r15
0x115f3:	mov	rsi, r14
0x115f6:	mov	edi, r13d
0x115f9:	call	qword ptr [r12 + rbx*8]


0xf972:	mov	rcx, qword ptr [rbp - 0x3c8]
0xf979:	mov	r8, qword ptr [rbp - 0x3e0]
0xf980:	add	rbx, rcx
0xf983:	mov	edi, dword ptr [rbp - 0x3d0]
0xf989:	cmp	edi, 0x10
0xf98c:	ja	0xf9bb


0xf935:	mov	rcx, qword ptr [rbp - 0x3c8]
0xf93c:	mov	r8, qword ptr [rbp - 0x3e0]
0xf943:	add	rbx, rcx
0xf946:	mov	rsi, qword ptr [r13 + 0x30]
0xf94a:	mov	rdx, qword ptr [r13 + 0x38]
0xf94e:	cmp	rsi, rdx
0xf951:	je	0xf983


0xef65:	mov	rcx, qword ptr [rsp + 0x38]
0xef6a:	mov	r8, qword ptr [rsp + 0x30]
0xef6f:	jmp	0xdda2


0xdda2:	add	rbp, r8
0xdda5:	add	r14, rcx
0xdda8:	jmp	0xdbb2


0x44a9:	cmp	rbx, rbp
0x44ac:	jne	0x4498


0x44ae:	mov	rbp, qword ptr [rsp + 8]
0x44b3:	cmp	byte ptr [rsp + 0x34], 0
0x44b8:	je	0x55e8


0x4498:	mov	rsi, r12
0x449b:	mov	edi, 0x20
0x44a0:	add	rbp, 1
0x44a4:	call	0x2900


0x56d1:	cmp	rbx, rbp
0x56d4:	jne	0x56c0


0x56d6:	jmp	0x44ae


0x56c0:	mov	rsi, r12
0x56c3:	mov	edi, 0x30
0x56c8:	add	rbp, 1
0x56cc:	call	0x2900


0x4501:	cmp	r13, rbp
0x4504:	jne	0x44f0


0x4506:	jmp	0x42ff


0x44f0:	mov	rsi, r12
0x44f3:	mov	edi, 0x20
0x44f8:	add	rbp, 1
0x44fc:	call	0x2900


0xdd66:	mov	r8, qword ptr [rsp + 0x48]
0xdd6b:	mov	rcx, qword ptr [rsp + 0x40]
0xdd70:	mov	r9, qword ptr [rsp + 0x38]
0xdd75:	cmp	byte ptr [rsp + 0x30], 0
0xdd7a:	mov	qword ptr [rsp + 0x38], rcx
0xdd7f:	mov	rdx, r8
0xdd82:	mov	qword ptr [rsp + 0x30], r8
0xdd87:	mov	rsi, r9
0xdd8a:	mov	rdi, rbp
0xdd8d:	je	0xef60


0xefc6:	mov	r9, qword ptr [rsp + 0x38]
0xefcb:	mov	rcx, qword ptr [rsp + 0x40]
0xefd0:	mov	r8, qword ptr [rsp + 0x48]
0xefd5:	jmp	0xdd75


0x405d:	test	eax, eax
0x405f:	jne	0x4040


0x4040:	mov	r14, qword ptr [rbx]
0x4043:	add	rbp, r12
0x4046:	add	rbx, 8
0x404a:	test	r14, r14
0x404d:	je	0x4061


0x6880:	jmp	0x67e9


0x67e9:	movsxd	rdx, dword ptr [rbx + 0x10]
0x67ed:	cmp	edx, 6
0x67f0:	ja	0x67fb


0x67f2:	cmp	eax, 0x63
0x67f5:	jbe	0x6885


0x6885:	xor	ecx, ecx
0x6887:	mov	esi, 0x64
0x688c:	test	eax, eax
0x688e:	sete	cl
0x6891:	sub	esi, eax
0x6893:	cdqe	
0x6895:	movsxd	rsi, esi
0x6898:	lea	rdi, [rbp + rax]
0x689d:	jmp	0x6821


0x6821:	lea	rax, [rip + 0xd738]
0x6828:	lea	r9, [rax + rdx*4]
0x682c:	lea	rax, [rip + 0xc5ac]
0x6833:	mov	edx, 1
0x6838:	lea	r8, [rax + rcx]
0x683c:	mov	rcx, -1
0x6843:	xor	eax, eax
0x6845:	call	0x2740


0x684a:	add	rsp, 8
0x684e:	mov	rax, rbp
0x6851:	pop	rbx
0x6852:	pop	rbp
0x6853:	ret	


0xa6b3:	mov	rdi, rbp
0xa6b6:	call	0x2760


0x2760:	jmp	qword ptr [rip + 0x21565a]




0xcfef:	test	rax, rax
0xcff2:	je	0xcff9


0xcff4:	add	rsp, 8
0xcff8:	ret	


0x7598:	test	eax, eax
0x759a:	mov	r8d, dword ptr [rsp + 8]
0x759f:	mov	r11, qword ptr [rsp + 0x10]
0x75a4:	jne	0x7575


0x75a6:	mov	rcx, rbp
0x75a9:	movsxd	rax, dword ptr [rcx + 0xc]
0x75ad:	mov	r9d, dword ptr [rcx + 8]
0x75b1:	mov	qword ptr [rsp + 0x90], rax
0x75b9:	jmp	0x6cee


0x7575:	add	rbp, 0x10
0x7579:	mov	rsi, qword ptr [rbp]
0x757d:	test	rsi, rsi
0x7580:	je	0x8525


0x8525:	mov	rbp, r14
0x8528:	mov	edx, dword ptr [rbp]
0x852b:	add	rbp, 4
0x852f:	lea	eax, [rdx - 0x1010101]
0x8535:	not	edx
0x8537:	and	eax, edx
0x8539:	and	eax, 0x80808080
0x853e:	je	0x8528


0x8528:	mov	edx, dword ptr [rbp]
0x852b:	add	rbp, 4
0x852f:	lea	eax, [rdx - 0x1010101]
0x8535:	not	edx
0x8537:	and	eax, edx
0x8539:	and	eax, 0x80808080
0x853e:	je	0x8528


0x8540:	mov	edx, eax
0x8542:	mov	r9d, 1
0x8548:	shr	edx, 0x10
0x854b:	test	eax, 0x8080
0x8550:	cmove	eax, edx
0x8553:	lea	rdx, [rbp + 2]
0x8557:	mov	edi, eax
0x8559:	cmove	rbp, rdx
0x855d:	add	dil, al
0x8560:	sbb	rbp, 3
0x8564:	sub	rbp, r14
0x8567:	cmp	rbp, 3
0x856b:	je	0x857a


0x857a:	lea	rcx, [rip + 0x20f3bf]
0x8581:	lea	rsi, [rip + 0xab7f]
0x8588:	mov	dword ptr [rsp + 8], ebx
0x858c:	mov	qword ptr [rsp + 0x20], rbp
0x8591:	mov	dword ptr [rsp + 0x10], r8d
0x8596:	mov	ebx, r9d
0x8599:	mov	rbp, rcx
0x859c:	mov	qword ptr [rsp + 0x18], r11
0x85a1:	test	ebx, ebx
0x85a3:	je	0x8718


0x856d:	xor	r9d, r9d
0x8570:	cmp	rbp, 4
0x8574:	je	0x8741


0x8718:	mov	rdi, r14
0x871b:	call	0x2960


0x85a9:	mov	edx, 3
0x85ae:	mov	rdi, r14
0x85b1:	call	0x2790


0x8741:	xor	r9d, r9d
0x8744:	cmp	byte ptr [rsp + 0x5a3], 0x2e
0x874c:	sete	r9b
0x8750:	jmp	0x857a


0x2790:	jmp	qword ptr [rip + 0x215642]




0x8720:	test	eax, eax
0x8722:	sete	al
0x8725:	jmp	0x85bb


0x85bb:	test	al, al
0x85bd:	jne	0x872a


0x85c3:	add	rbp, 0x10
0x85c7:	mov	rsi, qword ptr [rbp]
0x85cb:	test	rsi, rsi
0x85ce:	jne	0x85a1


0x872a:	movsxd	rbx, dword ptr [rsp + 8]
0x872f:	mov	r8d, dword ptr [rsp + 0x10]
0x8734:	mov	rcx, rbp
0x8737:	mov	r11, qword ptr [rsp + 0x18]
0x873c:	jmp	0x75a9


0x85d0:	mov	r11, qword ptr [rsp + 0x18]
0x85d5:	mov	r8d, dword ptr [rsp + 0x10]
0x85da:	mov	rsi, r14
0x85dd:	movsxd	rbx, dword ptr [rsp + 8]
0x85e2:	mov	byte ptr [rsp + 8], al
0x85e6:	mov	rbp, qword ptr [rsp + 0x20]
0x85eb:	mov	rdi, r11
0x85ee:	mov	dword ptr [rsp + 0x28], r8d
0x85f3:	mov	qword ptr [rsp + 0x10], r11
0x85f8:	call	0x6430


0x85a1:	test	ebx, ebx
0x85a3:	je	0x8718


0x75a9:	movsxd	rax, dword ptr [rcx + 0xc]
0x75ad:	mov	r9d, dword ptr [rcx + 8]
0x75b1:	mov	qword ptr [rsp + 0x90], rax
0x75b9:	jmp	0x6cee


0xd3db:	test	eax, eax
0xd3dd:	je	0xd437


0xd437:	mov	qword ptr [r13 + 0x30], rbx
0xd43b:	mov	eax, 1
0xd440:	add	rsp, 8
0xd444:	pop	rbx
0xd445:	pop	rbp
0xd446:	pop	r12
0xd448:	pop	r13
0xd44a:	pop	r14
0xd44c:	pop	r15
0xd44e:	ret	


0xd3df:	cmp	byte ptr [rbx], 0
0xd3e2:	jne	0xd3f6


0xd3e4:	lea	r14, [r12 + 9]
0xd3e9:	cmp	r14, rbx
0xd3ec:	jne	0xd450


0xd3f6:	mov	rdi, rbx
0xd3f9:	call	0x2840


0xd3ee:	cmp	byte ptr [r12 + 8], 0
0xd3f4:	je	0xd450


0xd450:	mov	rdi, rbp
0xd453:	call	0x2840


0x6464:	test	eax, eax
0x6466:	jne	0x6450


0x6468:	mov	rax, rbx
0x646b:	pop	rbx
0x646c:	pop	rbp
0x646d:	pop	r12
0x646f:	ret	


0x6450:	add	rbx, 0x10
0x6454:	mov	rsi, qword ptr [rbx]
0x6457:	test	rsi, rsi
0x645a:	je	0x6470


0x6470:	mov	rsi, qword ptr [r12 + 0xe8]
0x6478:	lea	rbx, [r12 + 0xe8]
0x6480:	test	rsi, rsi
0x6483:	jne	0x64cc


0x64cc:	mov	rdi, rbp
0x64cf:	call	0x2960


0x64ac:	mov	rdi, rbp
0x64af:	call	0x2960


0x64b4:	test	eax, eax
0x64b6:	jne	0x64a0


0x64b8:	jmp	0x6468


0x64a0:	add	rbx, 0x10
0x64a4:	mov	rsi, qword ptr [rbx]
0x64a7:	test	rsi, rsi
0x64aa:	je	0x64e0


0x64e0:	xor	ebx, ebx
0x64e2:	mov	rax, rbx
0x64e5:	pop	rbx
0x64e6:	pop	rbp
0x64e7:	pop	r12
0x64e9:	ret	


0x64d4:	test	eax, eax
0x64d6:	jne	0x64c0


0x64d8:	mov	rax, rbx
0x64db:	pop	rbx
0x64dc:	pop	rbp
0x64dd:	pop	r12
0x64df:	ret	


0x64c0:	add	rbx, 0x10
0x64c4:	mov	rsi, qword ptr [rbx]
0x64c7:	test	rsi, rsi
0x64ca:	je	0x6488


0x6488:	lea	rbx, [rip + 0x210f51]
0x648f:	lea	rsi, [rip + 0xcb8b]
0x6496:	jmp	0x64ac


0x85fd:	test	rax, rax
0x8600:	mov	rcx, rax
0x8603:	mov	r11, qword ptr [rsp + 0x10]
0x8608:	mov	r8d, dword ptr [rsp + 0x28]
0x860d:	jne	0x75a9


0x8613:	lea	rsi, [rip + 0xaa7a]
0x861a:	mov	rdi, r14
0x861d:	mov	qword ptr [rsp + 0x18], r11
0x8622:	mov	dword ptr [rsp + 0x10], r8d
0x8627:	call	0x2960


0x862c:	test	eax, eax
0x862e:	mov	r8d, dword ptr [rsp + 0x10]
0x8633:	mov	r11, qword ptr [rsp + 0x18]
0x8638:	je	0x8765


0x8765:	lea	rcx, [rip + 0x20f364]
0x876c:	jmp	0x75a9


0x863e:	lea	rcx, [rip + 0x20f23b]
0x8645:	lea	rsi, [rip + 0xaac3]
0x864c:	mov	rdi, r14
0x864f:	mov	qword ptr [rsp + 0x20], r11
0x8654:	mov	qword ptr [rsp + 0x18], rcx
0x8659:	mov	dword ptr [rsp + 0x10], r8d
0x865e:	call	0x2960


0x8663:	test	eax, eax
0x8665:	mov	r8d, dword ptr [rsp + 0x10]
0x866a:	mov	rcx, qword ptr [rsp + 0x18]
0x866f:	mov	r11, qword ptr [rsp + 0x20]
0x8674:	je	0x75a9


0x867a:	add	rcx, 0x10
0x867e:	mov	rsi, qword ptr [rcx]
0x8681:	test	rsi, rsi
0x8684:	jne	0x864c


0x8686:	lea	rdx, [r14 + rbp - 1]
0x868b:	cmp	byte ptr [rdx], 0x53
0x868e:	je	0x8771


0x864c:	mov	rdi, r14
0x864f:	mov	qword ptr [rsp + 0x20], r11
0x8654:	mov	qword ptr [rsp + 0x18], rcx
0x8659:	mov	dword ptr [rsp + 0x10], r8d
0x865e:	call	0x2960


0x8771:	lea	rcx, [rip + 0x20f108]
0x8778:	lea	rsi, [rip + 0xa990]
0x877f:	mov	byte ptr [rdx], 0
0x8782:	mov	rdi, r14
0x8785:	mov	qword ptr [rsp + 0x28], r11
0x878a:	mov	qword ptr [rsp + 0x20], rcx
0x878f:	mov	dword ptr [rsp + 0x10], r8d
0x8794:	mov	qword ptr [rsp + 0x18], rdx
0x8799:	call	0x2960


0x8694:	lea	rcx, [rip + 0x20f085]
0x869b:	lea	rsi, [rip + 0xaa72]
0x86a2:	mov	rdi, r14
0x86a5:	mov	qword ptr [rsp + 0x20], r11
0x86aa:	mov	qword ptr [rsp + 0x18], rcx
0x86af:	mov	dword ptr [rsp + 0x10], r8d
0x86b4:	call	0x2960


0x86b9:	test	eax, eax
0x86bb:	mov	r8d, dword ptr [rsp + 0x10]
0x86c0:	mov	rcx, qword ptr [rsp + 0x18]
0x86c5:	mov	r11, qword ptr [rsp + 0x20]
0x86ca:	je	0x75a9


0x86d0:	add	rcx, 0x10
0x86d4:	mov	rsi, qword ptr [rcx]
0x86d7:	test	rsi, rsi
0x86da:	jne	0x86a2


0x86dc:	sub	rbp, 1
0x86e0:	movzx	edx, byte ptr [rsp + 0x5a0]
0x86e8:	je	0x885c


0x86a2:	mov	rdi, r14
0x86a5:	mov	qword ptr [rsp + 0x20], r11
0x86aa:	mov	qword ptr [rsp + 0x18], rcx
0x86af:	mov	dword ptr [rsp + 0x10], r8d
0x86b4:	call	0x2960


0x885c:	lea	rcx, [rip + 0x20e9dd]
0x8863:	lea	rax, [rip + 0xa8b3]
0x886a:	cmp	byte ptr [rax], dl
0x886c:	je	0x75a9


0x86ee:	mov	rax, r14
0x86f1:	mov	rdx, r14
0x86f4:	movzx	ecx, byte ptr [rax]
0x86f7:	test	cl, cl
0x86f9:	mov	byte ptr [rdx], cl
0x86fb:	je	0x87d8


0x8872:	add	rcx, 0x10
0x8876:	mov	rax, qword ptr [rcx]
0x8879:	test	rax, rax
0x887c:	jne	0x886a


0x87d8:	cmp	byte ptr [rsp + 8], 0
0x87dd:	je	0x880a


0x8701:	cmp	byte ptr [rax], 0x2e
0x8704:	je	0x87ce


0x887e:	jmp	0x86ee


0x886a:	cmp	byte ptr [rax], dl
0x886c:	je	0x75a9


0x880a:	cmp	byte ptr [r11 + 0xd9], 0
0x8812:	je	0x82b7


0x87df:	mov	rdi, r11
0x87e2:	mov	rsi, r14
0x87e5:	mov	dword ptr [rsp + 0x10], r8d
0x87ea:	mov	qword ptr [rsp + 8], r11
0x87ef:	call	0x6430


0x87ce:	mov	byte ptr [rsp + 8], 1
0x87d3:	jmp	0x870e


0x870a:	add	rdx, 1
0x870e:	add	rax, 1
0x8712:	jmp	0x86f4


0x8818:	lea	rsi, [rip + 0xa900]
0x881f:	mov	edx, 5
0x8824:	xor	edi, edi
0x8826:	mov	qword ptr [rsp + 0x10], r11
0x882b:	mov	dword ptr [rsp + 8], r8d
0x8830:	call	0x2820


0x870e:	add	rax, 1
0x8712:	jmp	0x86f4


0x86f4:	movzx	ecx, byte ptr [rax]
0x86f7:	test	cl, cl
0x86f9:	mov	byte ptr [rdx], cl
0x86fb:	je	0x87d8


0x87f4:	test	rax, rax
0x87f7:	mov	rcx, rax
0x87fa:	mov	r11, qword ptr [rsp + 8]
0x87ff:	mov	r8d, dword ptr [rsp + 0x10]
0x8804:	jne	0x75a9


0x879e:	test	eax, eax
0x87a0:	mov	r8d, dword ptr [rsp + 0x10]
0x87a5:	mov	rcx, qword ptr [rsp + 0x20]
0x87aa:	mov	r11, qword ptr [rsp + 0x28]
0x87af:	je	0x75a9


0x87b5:	add	rcx, 0x10
0x87b9:	mov	rsi, qword ptr [rcx]
0x87bc:	mov	rdx, qword ptr [rsp + 0x18]
0x87c1:	test	rsi, rsi
0x87c4:	jne	0x8782


0x87c6:	mov	byte ptr [rdx], 0x53
0x87c9:	jmp	0x8694


0x8782:	mov	rdi, r14
0x8785:	mov	qword ptr [rsp + 0x28], r11
0x878a:	mov	qword ptr [rsp + 0x20], rcx
0x878f:	mov	dword ptr [rsp + 0x10], r8d
0x8794:	mov	qword ptr [rsp + 0x18], rdx
0x8799:	call	0x2960


0xaa33:	test	rax, rax
0xaa36:	je	0xaa8d


0xaa8d:	mov	qword ptr [rip + 0x20d66c], rbx
0xaa94:	mov	qword ptr [rip + 0x20d62d], rbx
0xaa9b:	pop	rbx
0xaa9c:	ret	


0xaa38:	lea	r8, [rax + 1]
0xaa3c:	mov	rdx, r8
0xaa3f:	sub	rdx, rbx
0xaa42:	cmp	rdx, 6
0xaa46:	jle	0xaa8d


0xaa48:	lea	rsi, [rax - 6]
0xaa4c:	lea	rdi, [rip + 0x9a1d]
0xaa53:	mov	ecx, 7
0xaa58:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xaa58:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xaa5a:	seta	dl
0xaa5d:	sbb	dl, 0
0xaa60:	test	dl, dl
0xaa62:	jne	0xaa8d


0xaa64:	lea	rdi, [rip + 0x9a0d]
0xaa6b:	mov	ecx, 3
0xaa70:	mov	rsi, r8
0xaa73:	mov	rbx, r8
0xaa76:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xaa76:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xaa78:	seta	dl
0xaa7b:	sbb	dl, 0
0xaa7e:	test	dl, dl
0xaa80:	jne	0xaa8d


0xaa82:	lea	rbx, [rax + 4]
0xaa86:	mov	qword ptr [rip + 0x20d613], rbx
0xaa8d:	mov	qword ptr [rip + 0x20d66c], rbx
0xaa94:	mov	qword ptr [rip + 0x20d62d], rbx
0xaa9b:	pop	rbx
0xaa9c:	ret	


0xd82b:	cmp	rax, rbx
0xd82e:	jb	0xd870


0xd870:	cmp	rbp, r12
0xd873:	mov	ebx, 0xffffffff
0xd878:	je	0xd846


0xd830:	cmp	rbp, r12
0xd833:	je	0xd83d


0xd87a:	call	0x2780


0xd83d:	cmp	rbx, 0x7fffffff
0xd844:	ja	0xd893


0xd835:	mov	rdi, rbp
0xd838:	call	0x2750


0xd893:	call	0x2780


0x55fd:	jmp	0x44ce


0x627c:	lea	rax, [rsp + 0xe0]
0x6284:	mov	rdi, qword ptr [rip + 0x211e55]
0x628b:	mov	rdx, rsp
0x628e:	mov	rsi, rbx
0x6291:	mov	dword ptr [rsp], 8
0x6298:	mov	dword ptr [rsp + 4], 0x30
0x62a0:	mov	qword ptr [rsp + 8], rax
0x62a5:	lea	rax, [rsp + 0x20]
0x62aa:	mov	qword ptr [rsp + 0x10], rax
0x62af:	call	0xd7c0


0x62b4:	mov	rax, qword ptr [rsp + 0x18]
0x62b9:	xor	rax, qword ptr fs:[0x28]
0x62c2:	jne	0x62cd


0x62c4:	add	rsp, 0xd0
0x62cb:	pop	rbx
0x62cc:	ret	


0x62cd:	call	0x2850


0xaaba:	call	0x2770


0xfa7f:	test	rax, rax
0xfa82:	je	0xf705


0xfa88:	mov	r15, rax
0xfa8b:	mov	byte ptr [r15 + r14], 0
0xfa90:	call	0x2780


0x100ec:	test	rax, rax
0x100ef:	je	0x101eb


0x101eb:	call	0x2780


0x100f5:	mov	r15, rax
0x100f8:	jmp	0x1002f


0x10570:	test	rax, rax
0x10573:	je	0x101eb


0x10579:	mov	r15, rax
0x1057c:	cmp	r15, qword ptr [rbp - 0x3e8]
0x10583:	mov	byte ptr [r15 + r14], 0
0x10588:	je	0x105a1


0xf82a:	test	rax, rax
0xf82d:	mov	rcx, qword ptr [rbp - 0x3c8]
0xf834:	mov	r8, qword ptr [rbp - 0x3d0]
0xf83b:	je	0x101eb


0xf841:	mov	r15, rax
0xf844:	lea	rdi, [r15 + rbx]
0xf848:	mov	rdx, rcx
0xf84b:	mov	rsi, r8
0xf84e:	call	0x2970


0x1059a:	test	rax, rax
0x1059d:	cmovne	r15, rax
0x105a1:	mov	rax, qword ptr [rbp - 0x420]
0x105a8:	test	rax, rax
0x105ab:	je	0x105b5


0x1136e:	mov	rdx, qword ptr [r15 + 8]
0x11372:	mov	r11, qword ptr [rsp + 0x30]
0x11377:	mov	rcx, rax
0x1137a:	mov	r8, qword ptr [rsp + 0x38]
0x1137f:	mov	r10, qword ptr [rsp + 0x40]
0x11384:	mov	r9, qword ptr [rsp + 0x48]
0x11389:	test	rcx, rcx
0x1138c:	je	0x115a7


0x115a7:	mov	rcx, rdx
0x115aa:	jmp	0x1154b


0x11392:	cmp	qword ptr [rsp + 8], rdx
0x11397:	mov	rax, qword ptr [r15]
0x1139a:	je	0x11560


0x11560:	mov	rsi, qword ptr [rsp + 8]
0x11565:	shl	rax, 5
0x11569:	mov	rdi, rcx
0x1156c:	mov	rdx, rax
0x1156f:	mov	qword ptr [rsp + 0x48], r9
0x11574:	mov	qword ptr [rsp + 0x40], r10
0x11579:	mov	qword ptr [rsp + 0x38], r8
0x1157e:	mov	qword ptr [rsp + 0x30], r11
0x11583:	call	0x2970


0x113a0:	mov	qword ptr [r15 + 8], rcx
0x113a4:	jmp	0x10dbd


0x10dbd:	mov	rdx, rax
0x10dc0:	shl	rdx, 5
0x10dc4:	add	rdx, rcx
0x10dc7:	cmp	rax, rbx
0x10dca:	ja	0x10de6


0x11588:	mov	r9, qword ptr [rsp + 0x48]
0x1158d:	mov	rcx, rax
0x11590:	mov	r10, qword ptr [rsp + 0x40]
0x11595:	mov	rax, qword ptr [r15]
0x11598:	mov	r8, qword ptr [rsp + 0x38]
0x1159d:	mov	r11, qword ptr [rsp + 0x30]
0x115a2:	jmp	0x113a0


0x10cd6:	mov	rdx, qword ptr [r15 + 8]
0x10cda:	mov	r8, qword ptr [rsp + 0x30]
0x10cdf:	mov	rcx, rax
0x10ce2:	mov	r10, qword ptr [rsp + 0x38]
0x10ce7:	mov	r9, qword ptr [rsp + 0x40]
0x10cec:	test	rcx, rcx
0x10cef:	je	0x115a7


0x10cf5:	cmp	qword ptr [rsp + 8], rdx
0x10cfa:	mov	rax, qword ptr [r15]
0x10cfd:	je	0x114bb


0x114bb:	mov	rsi, qword ptr [rsp + 8]
0x114c0:	shl	rax, 5
0x114c4:	mov	rdi, rcx
0x114c7:	mov	rdx, rax
0x114ca:	mov	qword ptr [rsp + 0x40], r9
0x114cf:	mov	qword ptr [rsp + 0x38], r10
0x114d4:	mov	qword ptr [rsp + 0x30], r8
0x114d9:	call	0x2970


0x10d03:	mov	qword ptr [r15 + 8], rcx
0x10d07:	mov	rdx, rax
0x10d0a:	shl	rdx, 5
0x10d0e:	add	rdx, rcx
0x10d11:	cmp	rax, rbx
0x10d14:	ja	0x10d36


0x114de:	mov	r9, qword ptr [rsp + 0x40]
0x114e3:	mov	rcx, rax
0x114e6:	mov	r10, qword ptr [rsp + 0x38]
0x114eb:	mov	rax, qword ptr [r15]
0x114ee:	mov	r8, qword ptr [rsp + 0x30]
0x114f3:	jmp	0x10d03


0xce76:	test	rax, rax
0xce79:	jne	0xce80


0xce7b:	test	rbx, rbx
0xce7e:	jne	0xce91


0xce80:	pop	rbx
0xce81:	ret	


0xce91:	call	0xd050


0xd11e:	test	eax, eax
0xd120:	je	0xd12a


0xd122:	test	dword ptr [rbx], 0x100
0xd128:	jne	0xd138


0xd138:	mov	rdi, rbx
0xd13b:	mov	edx, 1
0xd140:	xor	esi, esi
0xd142:	call	0xd150


0xc2ad:	mov	qword ptr [rip + 0x20bdcc], rbx
0xc2b4:	pop	rbx
0xc2b5:	mov	dword ptr [rip + 0x20bdb9], 1
0xc2bf:	pop	rbp
0xc2c0:	pop	r12
0xc2c2:	ret	


0xc287:	mov	qword ptr [rip + 0x20bdfe], 0x100
0xc292:	mov	qword ptr [rip + 0x20bdff], rbx
0xc299:	lea	rbx, [rip + 0x20bdf0]
0xc2a0:	cmp	r12, rbx
0xc2a3:	je	0xc2b4


0xce8d:	xor	eax, eax
0xce8f:	pop	rbx
0xce90:	ret	


0xc26c:	cmp	rbx, rbp
0xc26f:	jne	0xc260


0xc260:	mov	rdi, qword ptr [rbx]
0xc263:	add	rbx, 0x10
0xc267:	call	0x2750


0xd288:	test	rbx, rbx
0xd28b:	mov	rdi, rbx
0xd28e:	jne	0xd280


0xd290:	pop	rbx
0xd291:	ret	


0xd280:	mov	rbx, qword ptr [rdi]
0xd283:	call	0x2750


0xd798:	jmp	0xd6ee


0xd6ee:	mov	rcx, qword ptr [rsp + 0x48]
0xd6f3:	xor	rcx, qword ptr fs:[0x28]
0xd6fc:	jne	0xd7ac


0xd702:	add	rsp, 0x50
0xd706:	pop	rbx
0xd707:	pop	rbp
0xd708:	pop	r12
0xd70a:	ret	


0xd7ac:	call	0x2850


0x4160:	mov	r13, rax
0x4163:	nop	dword ptr [rax + rax]
0x4168:	movzx	ecx, byte ptr [rbx]
0x416b:	mov	rax, qword ptr [r13]
0x416f:	mov	rsi, r12
0x4172:	add	rbx, 1
0x4176:	mov	edi, dword ptr [rax + rcx*4]
0x4179:	call	0x2900


0x417e:	cmp	rbx, rbp
0x4181:	jne	0x4168


0x4183:	add	rsp, 8
0x4187:	pop	rbx
0x4188:	pop	rbp
0x4189:	pop	r12
0x418b:	pop	r13
0x418d:	ret	


0x4168:	movzx	ecx, byte ptr [rbx]
0x416b:	mov	rax, qword ptr [r13]
0x416f:	mov	rsi, r12
0x4172:	add	rbx, 1
0x4176:	mov	edi, dword ptr [rax + rcx*4]
0x4179:	call	0x2900


0xda00:	movzx	ecx, byte ptr [r12 + rbx]
0xda05:	mov	rdx, qword ptr [rax]
0xda08:	mov	edx, dword ptr [rdx + rcx*4]
0xda0b:	mov	byte ptr [rbp + rbx], dl
0xda0f:	sub	rbx, 1
0xda13:	cmp	rbx, -1
0xda17:	jne	0xda00


0x41c0:	mov	r13, rax
0x41c3:	nop	dword ptr [rax + rax]
0x41c8:	movzx	ecx, byte ptr [rbx]
0x41cb:	mov	rax, qword ptr [r13]
0x41cf:	mov	rsi, r12
0x41d2:	add	rbx, 1
0x41d6:	mov	edi, dword ptr [rax + rcx*4]
0x41d9:	call	0x2900


0x41de:	cmp	rbx, rbp
0x41e1:	jne	0x41c8


0x41e3:	add	rsp, 8
0x41e7:	pop	rbx
0x41e8:	pop	rbp
0x41e9:	pop	r12
0x41eb:	pop	r13
0x41ed:	ret	


0x41c8:	movzx	ecx, byte ptr [rbx]
0x41cb:	mov	rax, qword ptr [r13]
0x41cf:	mov	rsi, r12
0x41d2:	add	rbx, 1
0x41d6:	mov	edi, dword ptr [rax + rcx*4]
0x41d9:	call	0x2900


0xda50:	movzx	ecx, byte ptr [r12 + rbx]
0xda55:	mov	rdx, qword ptr [rax]
0xda58:	mov	edx, dword ptr [rdx + rcx*4]
0xda5b:	mov	byte ptr [rbp + rbx], dl
0xda5f:	sub	rbx, 1
0xda63:	cmp	rbx, -1
0xda67:	jne	0xda50


0x2c19:	lea	rsi, [rip + 0x1068f]
0x2c20:	mov	edi, 6
0x2c25:	call	0x2a50


0x5e9e:	mov	rcx, qword ptr [rsp + 0x18]
0x5ea3:	xor	rcx, qword ptr fs:[0x28]
0x5eac:	mov	rax, qword ptr [rsp]
0x5eb0:	mov	rdx, qword ptr [rsp + 8]
0x5eb5:	jne	0x5ebc


0x5eb7:	add	rsp, 0x28
0x5ebb:	ret	


0x5ebc:	call	0x2850


0x2bc2:	mov	rax, rbx
0x2bc5:	pop	rbx
0x2bc6:	ret	


0x614c:	sub	ebp, ebx
0x614e:	je	0x61b2


0x61b2:	mov	rax, r12
0x61b5:	pop	rbx
0x61b6:	pop	rbp
0x61b7:	pop	r12
0x61b9:	ret	


0x6150:	cdqe	
0x6152:	mov	ecx, 0x88888889
0x6157:	mov	r8d, 0xcccccccd
0x615d:	lea	rsi, [r12 + rax]
0x6161:	mov	eax, ebp
0x6163:	sar	eax, 0x1f
0x6166:	xor	ebp, eax
0x6168:	mov	byte ptr [rsi], 0x3a
0x616b:	sub	ebp, eax
0x616d:	mov	eax, ebp
0x616f:	mul	ecx
0x6171:	mov	eax, ebp
0x6173:	mov	ecx, edx
0x6175:	mov	edi, edx
0x6177:	mov	edx, 0x1b4e81b5
0x617c:	mul	edx
0x617e:	shr	ecx, 5
0x6181:	shr	edi, 5
0x6184:	mov	eax, ecx
0x6186:	shr	edx, 6
0x6189:	add	edx, 0x30
0x618c:	mov	byte ptr [rsi + 1], dl
0x618f:	mul	r8d
0x6192:	imul	edi, edi, 0x3c
0x6195:	shr	edx, 3
0x6198:	lea	eax, [rdx + rdx*4]
0x619b:	add	eax, eax
0x619d:	sub	ecx, eax
0x619f:	lea	rax, [rsi + 3]
0x61a3:	add	ecx, 0x30
0x61a6:	sub	ebp, edi
0x61a8:	mov	byte ptr [rsi + 2], cl
0x61ab:	mov	edi, ebp
0x61ad:	jne	0x61c0


0x61af:	mov	byte ptr [rax], 0
0x61b2:	mov	rax, r12
0x61b5:	pop	rbx
0x61b6:	pop	rbp
0x61b7:	pop	r12
0x61b9:	ret	


0x61c0:	mov	eax, ebp
0x61c2:	mov	byte ptr [rsi + 3], 0x3a
0x61c6:	mul	r8d
0x61c9:	shr	edx, 3
0x61cc:	lea	eax, [rdx + 0x30]
0x61cf:	lea	edx, [rdx + rdx*4]
0x61d2:	add	edx, edx
0x61d4:	mov	byte ptr [rsi + 4], al
0x61d7:	lea	rax, [rsi + 6]
0x61db:	sub	edi, edx
0x61dd:	add	edi, 0x30
0x61e0:	mov	byte ptr [rsi + 5], dil
0x61e4:	jmp	0x61af


0x675d:	mov	esi, 0x64
0x6762:	movsxd	rdi, ebp
0x6765:	lea	r8, [rip + 0xc920]
0x676c:	sub	esi, ebp
0x676e:	mov	r9, rax
0x6771:	add	rdi, rbx
0x6774:	movsxd	rsi, esi
0x6777:	mov	rcx, -1
0x677e:	mov	edx, 1
0x6783:	xor	eax, eax
0x6785:	call	0x2740


0x678a:	jmp	0x6733


0xc81c:	lea	rsi, [rip + 0x8138]
0xc823:	xor	edi, edi
0xc825:	mov	edx, 5
0xc82a:	call	0x2820


0xc931:	jmp	0xc81c


0x630e:	mov	eax, 1
0x6313:	add	rsp, 8
0x6317:	ret	


0xac21:	cmp	r15d, 0xa
0xac25:	mov	qword ptr [rsp + 0x58], rax
0xac2a:	ja	0xbddf


0xac30:	lea	rcx, [rip + 0x98a9]
0xac37:	mov	edx, r15d
0xac3a:	movsxd	rax, dword ptr [rcx + rdx*4]
0xac3e:	add	rax, rcx
0xac41:	jmp	rax


0xbddf:	call	0x2770


0xc773:	test	eax, eax
0xc775:	mov	ebx, eax
0xc777:	je	0xc7bb


0xc7bb:	mov	rsi, qword ptr [rsp + 0x18]
0xc7c0:	xor	rsi, qword ptr fs:[0x28]
0xc7c9:	mov	eax, ebx
0xc7cb:	jne	0xc7d4


0xc779:	call	0x2780


0xc7cd:	add	rsp, 0x28
0xc7d1:	pop	rbx
0xc7d2:	pop	rbp
0xc7d3:	ret	


0xc7d4:	call	0x2850


0x102be:	test	rax, rax
0x102c1:	mov	rcx, rax
0x102c4:	movzx	edx, byte ptr [rbp - 0x3c8]
0x102cb:	je	0xf705


0x102d1:	test	r14, r14
0x102d4:	je	0x10470


0x10470:	mov	r15, rcx
0x10473:	jmp	0xfa8b


0x102da:	test	dl, dl
0x102dc:	je	0x10470


0x102e2:	mov	rsi, r15
0x102e5:	mov	rdx, r14
0x102e8:	mov	rdi, rax
0x102eb:	call	0x2970


0x102f0:	mov	r15, rax
0x102f3:	jmp	0xfa8b


0x1034e:	test	rax, rax
0x10351:	mov	rcx, rax
0x10354:	movzx	edx, byte ptr [rbp - 0x3c8]
0x1035b:	je	0xf705


0x10361:	test	r14, r14
0x10364:	je	0x104a4


0x104a4:	mov	r15, rcx
0x104a7:	jmp	0x1002f


0x1036a:	test	dl, dl
0x1036c:	je	0x104a4


0x10372:	mov	rsi, r15
0x10375:	mov	rdx, r14
0x10378:	mov	rdi, rax
0x1037b:	call	0x2970


0x10380:	mov	r15, rax
0x10383:	jmp	0x1002f


0x10604:	test	rax, rax
0x10607:	mov	rcx, rax
0x1060a:	je	0xf705


0x10610:	test	r14, r14
0x10613:	je	0x10680


0x10680:	mov	r15, rcx
0x10683:	jmp	0x1057c


0x10615:	test	r13b, r13b
0x10618:	je	0x10680


0x1061a:	mov	rsi, r15
0x1061d:	mov	rdx, r14
0x10620:	mov	rdi, rax
0x10623:	call	0x2970


0x10628:	mov	r15, rax
0x1062b:	jmp	0x1057c


0x10164:	test	rax, rax
0x10167:	mov	r9, rax
0x1016a:	mov	rcx, qword ptr [rbp - 0x3c8]
0x10171:	movzx	edx, byte ptr [rbp - 0x3d0]
0x10178:	mov	r8, qword ptr [rbp - 0x3e0]
0x1017f:	je	0xf705


0x10185:	test	rbx, rbx
0x10188:	je	0x10390


0x10390:	mov	r15, r9
0x10393:	jmp	0xf844


0x1018e:	test	dl, dl
0x10190:	je	0x10390


0x10196:	mov	rsi, r15
0x10199:	mov	rdx, rbx
0x1019c:	mov	rdi, rax
0x1019f:	mov	qword ptr [rbp - 0x3d0], r8
0x101a6:	mov	qword ptr [rbp - 0x3c8], rcx
0x101ad:	call	0x2970


0x101b2:	mov	rcx, qword ptr [rbp - 0x3c8]
0x101b9:	mov	r15, rax
0x101bc:	mov	r8, qword ptr [rbp - 0x3d0]
0x101c3:	jmp	0xf844


0xf677:	test	rax, rax
0xf67a:	mov	qword ptr [rbp - 0x3d8], rax
0xf681:	je	0x10068


0xf687:	mov	r8, qword ptr [rbp - 0x3c8]
0xf68e:	mov	qword ptr [rbp - 0x420], rax
0xf695:	xor	r12d, r12d
0xf698:	cmp	qword ptr [rbp - 0x3e8], 0
0xf6a0:	je	0xf6ac


0x11526:	mov	rdx, qword ptr [rsp + 8]
0x1152b:	mov	rcx, rax
0x1152e:	mov	r9, qword ptr [rsp + 0x48]
0x11533:	mov	r10, qword ptr [rsp + 0x40]
0x11538:	mov	r8, qword ptr [rsp + 0x38]
0x1153d:	mov	r11, qword ptr [rsp + 0x30]
0x11542:	jmp	0x11389


0x11389:	test	rcx, rcx
0x1138c:	je	0x115a7


0x113e9:	mov	rdx, qword ptr [rsp + 8]
0x113ee:	mov	rcx, rax
0x113f1:	mov	r9, qword ptr [rsp + 0x40]
0x113f6:	mov	r10, qword ptr [rsp + 0x38]
0x113fb:	mov	r8, qword ptr [rsp + 0x30]
0x11400:	jmp	0x10cec


0x10cec:	test	rcx, rcx
0x10cef:	je	0x115a7


0xd372:	test	rax, rax
0xd375:	mov	rbx, rax
0xd378:	je	0xd35b


0xd35b:	mov	rax, rbx
0xd35e:	pop	rbx
0xd35f:	pop	rbp
0xd360:	pop	r12
0xd362:	ret	


0xd37a:	xor	edx, edx
0xd37c:	mov	qword ptr [rbx], 0
0xd383:	mov	rax, rbx
0xd386:	mov	word ptr [rbx + 8], dx
0xd38a:	pop	rbx
0xd38b:	pop	rbp
0xd38c:	pop	r12
0xd38e:	ret	


0xce09:	test	rax, rax
0xce0c:	jne	0xce13


0xce0e:	test	rbx, rbx
0xce11:	jne	0xce15


0xce13:	pop	rbx
0xce14:	ret	


0xce15:	call	0xd050


0xcfb9:	mov	rdx, rbx
0xcfbc:	xor	esi, esi
0xcfbe:	mov	rdi, rax
0xcfc1:	pop	rbx
0xcfc2:	jmp	0x28f0


0xd014:	add	rsp, 8
0xd018:	mov	rdx, rbx
0xd01b:	mov	rsi, rbp
0xd01e:	pop	rbx
0xd01f:	pop	rbp
0xd020:	mov	rdi, rax
0xd023:	jmp	0x2970


0xd458:	lea	rdx, [rax + 1]
0xd45c:	mov	r15, rax
0xd45f:	mov	rax, rbx
0xd462:	sub	rax, r14
0xd465:	mov	rcx, rax
0xd468:	not	rcx
0xd46b:	cmp	rcx, rdx
0xd46e:	jb	0xd4a0


0xd4a0:	call	0x2780


0xd470:	add	rax, rdx
0xd473:	cmp	rax, 0x76
0xd477:	jbe	0xd4b0


0xd4b0:	mov	rsi, rbp
0xd4b3:	mov	rdi, rbx
0xd4b6:	call	0x2970


0xd479:	mov	rdi, rbp
0xd47c:	call	0xd300


0xd481:	mov	rbx, rax
0xd484:	mov	qword ptr [r12], rax
0xd488:	xor	eax, eax
0xd48a:	test	rbx, rbx
0xd48d:	je	0xd440


0xd48f:	mov	byte ptr [rbx + 8], 0
0xd493:	add	rbx, 9
0xd497:	jmp	0xd437


0xd4bb:	mov	byte ptr [rbx + r15 + 1], 0
0xd4c1:	jmp	0xd437


0xd3fe:	lea	rbx, [rbx + rax + 1]
0xd403:	cmp	byte ptr [rbx], 0
0xd406:	jne	0xd3d0


0xd408:	mov	rax, qword ptr [r12]
0xd40c:	test	rax, rax
0xd40f:	je	0xd3d0


0xd3d0:	mov	rsi, rbp
0xd3d3:	mov	rdi, rbx
0xd3d6:	call	0x2960


0xd411:	lea	rbx, [rax + 9]
0xd415:	mov	rsi, rbp
0xd418:	mov	r12, rax
0xd41b:	mov	rdi, rbx
0xd41e:	call	0x2960


0xd423:	test	eax, eax
0xd425:	jne	0xd3df


0xd427:	jmp	0xd437


0xd311:	lea	rbp, [rax + 1]
0xd315:	mov	edi, 0x76
0xd31a:	cmp	rbp, 0x76
0xd31e:	cmovae	rdi, rbp
0xd322:	add	rdi, 0x11
0xd326:	and	rdi, 0xfffffffffffffff8
0xd32a:	call	0x29e0


0xd32f:	test	rax, rax
0xd332:	mov	rbx, rax
0xd335:	je	0xd35b


0xd337:	mov	qword ptr [rax], 0
0xd33e:	lea	rdi, [rbx + 9]
0xd342:	mov	eax, 1
0xd347:	mov	word ptr [rbx + 8], ax
0xd34b:	mov	rdx, rbp
0xd34e:	mov	rsi, r12
0xd351:	call	0x2970


0xd356:	mov	byte ptr [rbx + rbp + 9], 0
0xd35b:	mov	rax, rbx
0xd35e:	pop	rbx
0xd35f:	pop	rbp
0xd360:	pop	r12
0xd362:	ret	


0x3d16:	mov	r14, qword ptr [r15]
0x3d19:	mov	qword ptr [rsp], -1
0x3d21:	test	r14, r14
0x3d24:	je	0x3ddd


0x3ddd:	mov	rax, qword ptr [rsp]
0x3de1:	add	rsp, 0x28
0x3de5:	pop	rbx
0x3de6:	pop	rbp
0x3de7:	pop	r12
0x3de9:	pop	r13
0x3deb:	pop	r14
0x3ded:	pop	r15
0x3def:	ret	


0x3d2a:	mov	r12, rax
0x3d2d:	mov	byte ptr [rsp + 0x17], 0
0x3d32:	xor	ebx, ebx
0x3d34:	jmp	0x3d87


0x3d87:	mov	rsi, qword ptr [rsp + 8]
0x3d8c:	mov	rdx, r12
0x3d8f:	mov	rdi, r14
0x3d92:	call	0x2790


0x3fe1:	test	rax, rax
0x3fe4:	js	0x3ff5


0x3ff5:	mov	rdx, rax
0x3ff8:	mov	rsi, r12
0x3ffb:	mov	rdi, r14
0x3ffe:	call	0x3e10


0x3fe6:	add	rsp, 8
0x3fea:	pop	rbx
0x3feb:	pop	rbp
0x3fec:	pop	r12
0x3fee:	pop	r13
0x3ff0:	pop	r14
0x3ff2:	pop	r15
0x3ff4:	ret	


0x88d4:	test	r14, r14
0x88d7:	mov	qword ptr [rsp + 0x30], rax
0x88dc:	je	0x8ea0


0x8ea0:	lea	r14, [rsp + 0x60]
0x8ea5:	mov	rdi, r14
0x8ea8:	call	0x5e70


0x88e2:	mov	rax, qword ptr [r14 + 8]
0x88e6:	mov	rbx, qword ptr [r14]
0x88e9:	mov	qword ptr [rsp + 0x18], rax
0x88ee:	movzx	eax, byte ptr [rbp]
0x88f2:	cmp	al, 0x20
0x88f4:	ja	0x9170


0x88fa:	movabs	rcx, 0x100003e00
0x8904:	mov	r13, rbp
0x8907:	mov	esi, 1
0x890c:	bt	rcx, rax
0x8910:	mov	rdx, rcx
0x8913:	jb	0x892b


0x9170:	mov	r13, rbp
0x9173:	jmp	0x8939


0x892b:	add	r13, 1
0x892f:	movzx	ecx, byte ptr [r13]
0x8934:	cmp	cl, 0x20
0x8937:	jbe	0x8920


0x8915:	jmp	0x8939


0x8939:	lea	rdi, [rip + 0xa842]
0x8940:	mov	ecx, 4
0x8945:	mov	rsi, r13
0x8948:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x8920:	mov	rax, rsi
0x8923:	shl	rax, cl
0x8926:	test	rax, rdx
0x8929:	je	0x8939


0x8948:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x894a:	seta	al
0x894d:	sbb	al, 0
0x894f:	test	al, al
0x8951:	jne	0x89a8


0x8953:	movzx	r12d, byte ptr [r13 + 4]
0x8958:	lea	rcx, [r13 + 4]
0x895c:	test	r12b, r12b
0x895f:	je	0x89a8


0x89a8:	mov	r15, qword ptr [rsp]
0x89ac:	lea	rdx, [rsp + 0xf0]
0x89b4:	mov	rsi, r14
0x89b7:	mov	rdi, r15
0x89ba:	call	0xd5c0


0x8961:	mov	rdx, rcx
0x8964:	mov	eax, r12d
0x8967:	mov	edi, 1
0x896c:	jmp	0x898b


0x898b:	cmp	al, 0x5c
0x898d:	jne	0x8970


0x898f:	lea	rax, [rdx + 1]
0x8993:	movzx	edx, byte ptr [rdx + 1]
0x8997:	cmp	dl, 0x5c
0x899a:	je	0x897b


0x8970:	cmp	al, 0x22
0x8972:	je	0x8d68


0x897b:	lea	rdx, [rax + 1]
0x897f:	movzx	eax, byte ptr [rax + 1]
0x8983:	add	rdi, 1
0x8987:	test	al, al
0x8989:	je	0x89a8


0x899c:	cmp	dl, 0x22
0x899f:	je	0x897b


0x8d68:	cmp	rdi, 0x64
0x8d6c:	jle	0x8da8


0x8978:	mov	rax, rdx
0x897b:	lea	rdx, [rax + 1]
0x897f:	movzx	eax, byte ptr [rax + 1]
0x8983:	add	rdi, 1
0x8987:	test	al, al
0x8989:	je	0x89a8


0x8da8:	lea	rax, [rsp + 0x370]
0x8db0:	mov	qword ptr [rsp + 8], 0
0x8db9:	mov	qword ptr [rsp + 0x10], rax
0x8dbe:	cmp	r12b, 0x22
0x8dc2:	mov	rdx, qword ptr [rsp + 0x10]
0x8dc7:	je	0x8df5


0x8d6e:	mov	qword ptr [rsp + 0x38], rcx
0x8d73:	call	0x29e0


0x8df5:	mov	rdi, qword ptr [rsp + 0x10]
0x8dfa:	mov	byte ptr [rdx], 0
0x8dfd:	xor	r12d, r12d
0x8e00:	mov	qword ptr [rsp + 0x38], rcx
0x8e05:	call	0xd300


0x8dd0:	xor	eax, eax
0x8dd2:	cmp	r12b, 0x5c
0x8dd6:	sete	al
0x8dd9:	add	rdx, 1
0x8ddd:	add	rax, rcx
0x8de0:	movzx	r12d, byte ptr [rax + 1]
0x8de5:	movzx	ecx, byte ptr [rax]
0x8de8:	cmp	r12b, 0x22
0x8dec:	mov	byte ptr [rdx - 1], cl
0x8def:	lea	rcx, [rax + 1]
0x8df3:	jne	0x8dd0


0x8e0a:	test	rax, rax
0x8e0d:	mov	r15, rax
0x8e10:	je	0x8cdc


0x8cdc:	mov	rdi, qword ptr [rsp + 8]
0x8ce1:	call	0x2750


0x8e16:	mov	rcx, qword ptr [rsp + 0x38]
0x8e1b:	movzx	eax, byte ptr [rcx + 1]
0x8e1f:	lea	r13, [rcx + 1]
0x8e23:	cmp	al, 0x20
0x8e25:	ja	0x8e61


0x8e27:	movabs	rcx, 0x100003e00
0x8e31:	mov	esi, 1
0x8e36:	bt	rcx, rax
0x8e3a:	mov	rdx, rcx
0x8e3d:	jb	0x8e53


0x8e61:	lea	rdx, [rsp + 0xf0]
0x8e69:	mov	rsi, r14
0x8e6c:	mov	rdi, r15
0x8e6f:	xor	r12d, r12d
0x8e72:	call	0xd5c0


0x8e53:	add	r13, 1
0x8e57:	movzx	ecx, byte ptr [r13]
0x8e5c:	cmp	cl, 0x20
0x8e5f:	jbe	0x8e48


0x8e3f:	jmp	0x8e61


0x8e48:	mov	rax, rsi
0x8e4b:	shl	rax, cl
0x8e4e:	test	rax, rdx
0x8e51:	je	0x8e61


0x8ce6:	mov	rbx, qword ptr [rsp + 0x448]
0x8cee:	xor	rbx, qword ptr fs:[0x28]
0x8cf7:	mov	eax, r12d
0x8cfa:	jne	0x9e00


0x8d00:	add	rsp, 0x458
0x8d07:	pop	rbx
0x8d08:	pop	rbp
0x8d09:	pop	r12
0x8d0b:	pop	r13
0x8d0d:	pop	r14
0x8d0f:	pop	r15
0x8d11:	ret	


0x9e00:	call	0x2850


0x8d78:	test	rax, rax
0x8d7b:	mov	qword ptr [rsp + 0x10], rax
0x8d80:	mov	qword ptr [rsp + 8], rax
0x8d85:	mov	rcx, qword ptr [rsp + 0x38]
0x8d8a:	jne	0x8dbe


0x8dbe:	cmp	r12b, 0x22
0x8dc2:	mov	rdx, qword ptr [rsp + 0x10]
0x8dc7:	je	0x8df5


0x8ead:	jmp	0x88e2


0xa764:	test	bpl, 4
0xa768:	mov	r13, rax
0xa76b:	je	0xa9a0


0xa9a0:	lea	rax, [r13 - 8]
0xa9a4:	xor	r14d, r14d
0xa9a7:	cmp	rax, 4
0xa9ab:	jbe	0xa7cd


0xa771:	mov	esi, 0x2e
0xa776:	mov	rdi, rbx
0xa779:	call	0x2880


0xa7cd:	test	r13b, 1
0xa7d1:	jne	0xa792


0xa9b1:	jmp	0xa792


0x2880:	jmp	qword ptr [rip + 0x2155ca]


0xa7d3:	lea	rcx, [r13 + rbx]
0xa7d8:	mov	rdx, rbx
0xa7db:	nop	dword ptr [rax + rax]
0xa7e0:	movsx	eax, byte ptr [rdx]
0xa7e3:	sub	eax, 0x30
0xa7e6:	cmp	eax, 9
0xa7e9:	ja	0xa792


0xa792:	xor	eax, eax
0xa794:	mov	rsi, qword ptr [rsp + 0xc8]
0xa79c:	xor	rsi, qword ptr fs:[0x28]
0xa7a5:	jne	0xaa0f




0xa7eb:	add	rdx, 1
0xa7ef:	cmp	rcx, rdx
0xa7f2:	jne	0xa7e0


0xa7ab:	add	rsp, 0xd8
0xa7b2:	pop	rbx
0xa7b3:	pop	rbp
0xa7b4:	pop	r12
0xa7b6:	pop	r13
0xa7b8:	pop	r14
0xa7ba:	pop	r15
0xa7bc:	ret	


0xaa0f:	call	0x2850


0xa7f4:	shr	r13, 1
0xa7f7:	xor	edx, edx
0xa7f9:	lea	r15, [rsp + 0x90]
0xa801:	jmp	0xa80b


0xa7e0:	movsx	eax, byte ptr [rdx]
0xa7e3:	sub	eax, 0x30
0xa7e6:	cmp	eax, 9
0xa7e9:	ja	0xa792


0xa80b:	movsx	eax, byte ptr [rbx + rdx*2]
0xa80f:	lea	ecx, [rax + rax*4 - 0xf0]
0xa816:	movsx	eax, byte ptr [rbx + rdx*2 + 1]
0xa81b:	lea	eax, [rax + rcx*2 - 0x30]
0xa81f:	mov	dword ptr [r15 + rdx*4], eax
0xa823:	lea	rax, [rdx + 1]
0xa827:	cmp	r13, rax
0xa82a:	jne	0xa808


0xa82c:	sub	rdx, 3
0xa830:	test	bpl, 1
0xa834:	je	0xa9c0


0xa808:	mov	rdx, rax
0xa80b:	movsx	eax, byte ptr [rbx + rdx*2]
0xa80f:	lea	ecx, [rax + rax*4 - 0xf0]
0xa816:	movsx	eax, byte ptr [rbx + rdx*2 + 1]
0xa81b:	lea	eax, [rax + rcx*2 - 0x30]
0xa81f:	mov	dword ptr [r15 + rdx*4], eax
0xa823:	lea	rax, [rdx + 1]
0xa827:	cmp	r13, rax
0xa82a:	jne	0xa808


0xa9c0:	lea	rdi, [rsp + 0x24]
0xa9c5:	mov	ecx, ebp
0xa9c7:	mov	rsi, r15
0xa9ca:	call	0xa670


0xa83a:	mov	eax, dword ptr [rsp + 0x90]
0xa841:	lea	rsi, [r15 + 0x10]
0xa845:	lea	rdi, [rsp + 0x24]
0xa84a:	mov	ecx, ebp
0xa84c:	sub	eax, 1
0xa84f:	mov	dword ptr [rsp + 0x20], eax
0xa853:	mov	eax, dword ptr [rsp + 0x94]
0xa85a:	mov	dword ptr [rsp + 0x1c], eax
0xa85e:	mov	eax, dword ptr [rsp + 0x98]
0xa865:	mov	dword ptr [rsp + 0x18], eax
0xa869:	mov	eax, dword ptr [rsp + 0x9c]
0xa870:	mov	dword ptr [rsp + 0x14], eax
0xa874:	call	0xa670


0xa879:	test	al, al
0xa87b:	je	0xa792


0xa881:	test	r14, r14
0xa884:	je	0xaa00


0xaa00:	mov	dword ptr [rsp + 0x10], 0
0xaa08:	xor	eax, eax
0xaa0a:	jmp	0xa8b7


0xa88a:	movsx	eax, byte ptr [r14 + 1]
0xa88f:	sub	eax, 0x30
0xa892:	cmp	eax, 9
0xa895:	ja	0xa792


0xa8b7:	mov	dword ptr [rsp + 0x50], eax
0xa8bb:	mov	eax, dword ptr [rsp + 0x14]
0xa8bf:	lea	rdi, [rsp + 0x50]
0xa8c4:	mov	dword ptr [rsp + 0x68], 0xffffffff
0xa8cc:	mov	dword ptr [rsp + 0x70], 0xffffffff
0xa8d4:	mov	dword ptr [rsp + 0x54], eax
0xa8d8:	mov	eax, dword ptr [rsp + 0x18]
0xa8dc:	mov	dword ptr [rsp + 0x58], eax
0xa8e0:	mov	eax, dword ptr [rsp + 0x1c]
0xa8e4:	mov	dword ptr [rsp + 0x5c], eax
0xa8e8:	mov	eax, dword ptr [rsp + 0x20]
0xa8ec:	mov	dword ptr [rsp + 0x60], eax
0xa8f0:	mov	eax, dword ptr [rsp + 0x24]
0xa8f4:	mov	dword ptr [rsp + 0x64], eax
0xa8f8:	call	0x2a20


0xa89b:	movsx	edx, byte ptr [r14 + 2]
0xa8a0:	lea	ecx, [rdx - 0x30]
0xa8a3:	cmp	ecx, 9
0xa8a6:	ja	0xa792


0x2a20:	jmp	qword ptr [rip + 0x2154fa]


0xa8ac:	lea	eax, [rax + rax*4]
0xa8af:	lea	eax, [rdx + rax*2 - 0x30]
0xa8b3:	mov	dword ptr [rsp + 0x10], eax
0xa8b7:	mov	dword ptr [rsp + 0x50], eax
0xa8bb:	mov	eax, dword ptr [rsp + 0x14]
0xa8bf:	lea	rdi, [rsp + 0x50]
0xa8c4:	mov	dword ptr [rsp + 0x68], 0xffffffff
0xa8cc:	mov	dword ptr [rsp + 0x70], 0xffffffff
0xa8d4:	mov	dword ptr [rsp + 0x54], eax
0xa8d8:	mov	eax, dword ptr [rsp + 0x18]
0xa8dc:	mov	dword ptr [rsp + 0x58], eax
0xa8e0:	mov	eax, dword ptr [rsp + 0x1c]
0xa8e4:	mov	dword ptr [rsp + 0x5c], eax
0xa8e8:	mov	eax, dword ptr [rsp + 0x20]
0xa8ec:	mov	dword ptr [rsp + 0x60], eax
0xa8f0:	mov	eax, dword ptr [rsp + 0x24]
0xa8f4:	mov	dword ptr [rsp + 0x64], eax
0xa8f8:	call	0x2a20




0xa9cf:	test	al, al
0xa9d1:	je	0xa792


0xa9d7:	lea	rax, [r15 + r13*4 - 0x10]
0xa9dc:	mov	esi, dword ptr [rax]
0xa9de:	lea	edx, [rsi - 1]
0xa9e1:	mov	dword ptr [rsp + 0x20], edx
0xa9e5:	mov	edx, dword ptr [rax + 4]
0xa9e8:	mov	dword ptr [rsp + 0x1c], edx
0xa9ec:	mov	edx, dword ptr [rax + 8]
0xa9ef:	mov	eax, dword ptr [rax + 0xc]
0xa9f2:	mov	dword ptr [rsp + 0x18], edx
0xa9f6:	mov	dword ptr [rsp + 0x14], eax
0xa9fa:	jmp	0xa881


0xd039:	mov	rdi, rbx
0xd03c:	lea	rsi, [rax + 1]
0xd040:	pop	rbx
0xd041:	jmp	0xd000


0xc82f:	lea	rdx, [rip + 0x844a]
0xc836:	mov	rcx, rax
0xc839:	mov	r8d, 0x7e3
0xc83f:	mov	esi, 1
0xc844:	mov	rdi, rbp
0xc847:	xor	eax, eax
0xc849:	call	0x2b00


0xc84e:	lea	rsi, [rip + 0x8193]
0xc855:	xor	edi, edi
0xc857:	mov	edx, 5
0xc85c:	call	0x2820


0xc861:	mov	rsi, rbp
0xc864:	mov	rdi, rax
0xc867:	call	0x2920


0x2920:	jmp	qword ptr [rip + 0x21557a]




0x8835:	mov	rsi, r14
0x8838:	mov	rdi, rax
0x883b:	xor	eax, eax
0x883d:	call	0x61f0


0x8842:	mov	eax, 2
0x8847:	mov	r9d, 0x3f
0x884d:	mov	r8d, dword ptr [rsp + 8]
0x8852:	mov	r11, qword ptr [rsp + 0x10]
0x8857:	jmp	0x735e


0x367d:	mov	rdi, qword ptr [rip + 0x214a5c]
0x3684:	mov	rdx, rax
0x3687:	mov	rcx, rbx
0x368a:	mov	esi, 1
0x368f:	xor	eax, eax
0x3691:	call	0x2b00


0x3696:	mov	edi, ebp
0x3698:	call	0x2ae0


0x2ae0:	jmp	qword ptr [rip + 0x21549a]




0x36ab:	mov	rcx, rbx
0x36ae:	mov	rdx, rbx
0x36b1:	mov	rsi, rax
0x36b4:	mov	edi, 1
0x36b9:	xor	eax, eax
0x36bb:	call	0x2a60


0x2a60:	jmp	qword ptr [rip + 0x2154da]




0x3e33:	mov	rbx, rax
0x3e36:	mov	rsi, rbp
0x3e39:	mov	edi, 1
0x3e3e:	call	0xc710


0x3e7e:	mov	rbx, rax
0x3e81:	jmp	0x3e36


0x3e36:	mov	rsi, rbp
0x3e39:	mov	edi, 1
0x3e3e:	call	0xc710


0x3ec1:	mov	rdi, rax
0x3ec4:	mov	rsi, rbx
0x3ec7:	call	0x2920


0x650f:	mov	rsi, rbp
0x6512:	mov	rdi, rax
0x6515:	xor	eax, eax
0x6517:	call	0x61f0


0x651c:	mov	rsi, qword ptr [rbx + 0x68]
0x6520:	test	rsi, rsi
0x6523:	jne	0x66b0


0x6529:	mov	rsi, qword ptr [rbx + 0x70]
0x652d:	test	rsi, rsi
0x6530:	je	0x65b0


0x66b0:	lea	rdx, [rip + 0xc98f]
0x66b7:	xor	edi, edi
0x66b9:	call	0x62e0


0x65b0:	mov	rsi, qword ptr [rbx + 0x78]
0x65b4:	xor	edi, edi
0x65b6:	test	rsi, rsi
0x65b9:	jne	0x6620


0x6532:	xor	edi, edi
0x6534:	lea	rdx, [rip + 0xcb13]
0x653b:	call	0x62e0


0x65bb:	cmp	qword ptr [rbx + 0x80], 0
0x65c3:	jne	0x6550


0x6620:	lea	rdx, [rip + 0xca30]
0x6627:	call	0x62e0


0x65c5:	cmp	qword ptr [rbx + 0x88], 0
0x65cd:	jne	0x6550


0x6550:	mov	rsi, qword ptr [rbx + 0x80]
0x6557:	test	rsi, rsi
0x655a:	jne	0x663f


0x65cf:	cmp	qword ptr [rbx + 0x90], 0
0x65d7:	jne	0x6550


0x6560:	mov	rsi, qword ptr [rbx + 0x88]
0x6567:	test	rsi, rsi
0x656a:	jne	0x665e


0x663f:	lea	rdx, [rip + 0xca18]
0x6646:	call	0x62e0


0x65dd:	mov	eax, dword ptr [rbx + 0x98]
0x65e3:	test	eax, eax
0x65e5:	jne	0x6550


0x6570:	mov	rsi, qword ptr [rbx + 0x90]
0x6577:	test	rsi, rsi
0x657a:	jne	0x667d


0x665e:	lea	rdx, [rip + 0xb1b4]
0x6665:	call	0x62e0


0x65eb:	mov	rbx, qword ptr [rip + 0x211aee]
0x65f2:	lea	rsi, [rip + 0xca3d]
0x65f9:	xor	edi, edi
0x65fb:	mov	edx, 5
0x6600:	call	0x2820


0x6580:	movsxd	rsi, dword ptr [rbx + 0x98]
0x6587:	test	rsi, rsi
0x658a:	jne	0x669c


0x667d:	lea	rdx, [rip + 0xcabf]
0x6684:	call	0x62e0


0x6590:	mov	rsi, qword ptr [rip + 0x211b49]
0x6597:	add	rsp, 8
0x659b:	mov	edi, 0xa
0x65a0:	pop	rbx
0x65a1:	pop	rbp
0x65a2:	jmp	0x2900


0x669c:	lea	rdx, [rip + 0xc9c3]
0x66a3:	call	0x62e0


0x66a8:	jmp	0x6590


0x6689:	movsxd	rsi, dword ptr [rbx + 0x98]
0x6690:	movzx	edi, al
0x6693:	test	rsi, rsi
0x6696:	je	0x6590


0x666a:	mov	rsi, qword ptr [rbx + 0x90]
0x6671:	movzx	edi, al
0x6674:	test	rsi, rsi
0x6677:	je	0x6580


0x664b:	mov	rsi, qword ptr [rbx + 0x88]
0x6652:	movzx	edi, al
0x6655:	test	rsi, rsi
0x6658:	je	0x6570


0x662c:	mov	rsi, qword ptr [rbx + 0x80]
0x6633:	movzx	edi, al
0x6636:	test	rsi, rsi
0x6639:	je	0x6560


0x6540:	mov	rsi, qword ptr [rbx + 0x78]
0x6544:	movzx	edi, al
0x6547:	test	rsi, rsi
0x654a:	jne	0x6620


0x66be:	mov	rsi, qword ptr [rbx + 0x70]
0x66c2:	movzx	edi, al
0x66c5:	test	rsi, rsi
0x66c8:	jne	0x6534


0x66ce:	mov	rsi, qword ptr [rbx + 0x78]
0x66d2:	jmp	0x6547


0x6534:	lea	rdx, [rip + 0xcb13]
0x653b:	call	0x62e0


0x6547:	test	rsi, rsi
0x654a:	jne	0x6620


0x6605:	add	rsp, 8
0x6609:	mov	rsi, rbx
0x660c:	mov	rdi, rax
0x660f:	pop	rbx
0x6610:	pop	rbp
0x6611:	jmp	0x28e0


0x28e0:	jmp	qword ptr [rip + 0x21559a]




0x68d3:	mov	rsi, rbp
0x68d6:	mov	rdi, rax
0x68d9:	xor	eax, eax
0x68db:	call	0x61f0


0x68e0:	cmp	qword ptr [rbx + 0xa8], 0
0x68e8:	je	0x68f7


0x68f7:	movzx	eax, byte ptr [rbx + 0xdf]
0x68fe:	cmp	byte ptr [rbx + 0xd8], al
0x6904:	je	0x6ae4


0x68ea:	cmp	byte ptr [rbx + 0xda], 0
0x68f1:	je	0x6af0


0x6ae4:	xor	edx, edx
0x6ae6:	jmp	0x694c


0x690a:	lea	rsi, [rip + 0xc7a8]
0x6911:	mov	rbp, qword ptr [rbx + 0x28]
0x6915:	mov	edx, 5
0x691a:	xor	edi, edi
0x691c:	call	0x2820


0x6af0:	mov	rcx, qword ptr [rbx + 0x28]
0x6af4:	mov	r9, qword ptr [rbx + 0x40]
0x6af8:	lea	rdx, [rip + 0xc5a0]
0x6aff:	mov	r8, qword ptr [rbx + 0x38]
0x6b03:	mov	rdi, qword ptr [rip + 0x2115d6]
0x6b0a:	xor	eax, eax
0x6b0c:	mov	esi, 1
0x6b11:	call	0x2b00


0x694c:	cmp	qword ptr [rbx + 0xc8], 0
0x6954:	je	0x6963


0x6963:	cmp	qword ptr [rbx + 0xb0], 0
0x696b:	je	0x69d2


0x6956:	cmp	byte ptr [rbx + 0xdd], 0
0x695d:	je	0x6b50


0x69d2:	cmp	qword ptr [rbx + 0xb8], 0
0x69da:	je	0x6a60


0x696d:	cmp	byte ptr [rbx + 0xdb], 0
0x6974:	jne	0x69d2


0x6b50:	mov	rcx, qword ptr [rbx + 0x48]
0x6b54:	xor	edx, 1
0x6b57:	lea	rax, [rip + 0xc567]
0x6b5e:	mov	r9, qword ptr [rbx + 0x58]
0x6b62:	mov	r8, qword ptr [rbx + 0x50]
0x6b66:	movzx	edx, dl
0x6b69:	mov	rdi, qword ptr [rip + 0x211570]
0x6b70:	add	rdx, rax
0x6b73:	mov	esi, 1
0x6b78:	xor	eax, eax
0x6b7a:	call	0x2b00


0x6a60:	cmp	qword ptr [rbx + 0xd0], 0
0x6a68:	je	0x6a77


0x69e0:	cmp	byte ptr [rbx + 0xdc], 0
0x69e7:	jne	0x6a60


0x6976:	test	dl, dl
0x6978:	jne	0x6bbf


0x6a77:	cmp	byte ptr [rbx + 0xa0], 0
0x6a7e:	je	0x6ab4


0x6a6a:	cmp	byte ptr [rbx + 0xde], 0
0x6a71:	je	0x6bf0


0x69e9:	cmp	qword ptr [rbx + 0xc0], 0
0x69f1:	lea	rax, [rip + 0xc69b]
0x69f8:	lea	r8, [rip + 0xc8b0]
0x69ff:	mov	ecx, dword ptr [rbx + 0x14]
0x6a02:	mov	rdi, qword ptr [rip + 0x2116d7]
0x6a09:	mov	esi, 1
0x6a0e:	cmovne	r8, rax
0x6a12:	xor	edx, 1
0x6a15:	lea	rax, [rip + 0xc6c5]
0x6a1c:	movzx	edx, dl
0x6a1f:	add	rdx, rax
0x6a22:	xor	eax, eax
0x6a24:	call	0x2b00


0x697e:	mov	rsi, rsp
0x6981:	mov	rdi, rbx
0x6984:	mov	r13d, dword ptr [rbx + 0x10]
0x6988:	mov	r12, qword ptr [rbx + 8]
0x698c:	call	0x67a0


0x6bbf:	mov	rsi, qword ptr [rip + 0x21151a]
0x6bc6:	mov	edi, 0x20
0x6bcb:	call	0x2900


0x6ab4:	mov	rsi, qword ptr [rip + 0x211625]
0x6abb:	mov	edi, 0xa
0x6ac0:	call	0x2900


0x6a80:	test	dl, dl
0x6a82:	mov	rbx, qword ptr [rbx + 0x58]
0x6a86:	jne	0x6a4b


0x6bf0:	xor	edx, 1
0x6bf3:	movzx	ebp, dl
0x6bf6:	lea	rdx, [rip + 0xc49b]
0x6bfd:	add	rbp, rdx
0x6c00:	mov	edi, dword ptr [rbx + 0x18]
0x6c03:	mov	rsi, rsp
0x6c06:	call	0x60f0


0x6a88:	lea	rsi, [rip + 0xc65e]
0x6a8f:	mov	edx, 5
0x6a94:	xor	edi, edi
0x6a96:	call	0x2820


0x6a4b:	mov	rsi, qword ptr [rip + 0x21168e]
0x6a52:	mov	edi, 0x20
0x6a57:	call	0x2900


0x6c0b:	mov	rdi, qword ptr [rip + 0x2114ce]
0x6c12:	mov	rcx, rax
0x6c15:	mov	rdx, rbp
0x6c18:	mov	esi, 1
0x6c1d:	xor	eax, eax
0x6c1f:	call	0x2b00


0x6a5c:	jmp	0x6a88


0x6ac5:	mov	rax, qword ptr [rsp + 0x68]
0x6aca:	xor	rax, qword ptr fs:[0x28]
0x6ad3:	jne	0x6c72


0x6ad9:	add	rsp, 0x78
0x6add:	pop	rbx
0x6ade:	pop	rbp
0x6adf:	pop	r12
0x6ae1:	pop	r13
0x6ae3:	ret	


0x6c72:	call	0x2850


0x6bd0:	jmp	0x697e


0x6991:	lea	rsi, [rip + 0xcc98]
0x6998:	mov	edx, 5
0x699d:	xor	edi, edi
0x699f:	mov	rbp, rax
0x69a2:	call	0x2820


0x6c24:	mov	byte ptr [rbx + 0xde], 1
0x6c2b:	jmp	0x6a3e


0x6a3e:	cmp	byte ptr [rbx + 0xa0], 0
0x6a45:	je	0x6ab4


0x6a47:	mov	rbx, qword ptr [rbx + 0x58]
0x6a4b:	mov	rsi, qword ptr [rip + 0x21168e]
0x6a52:	mov	edi, 0x20
0x6a57:	call	0x2900


0x6a29:	cmp	qword ptr [rbx + 0xd0], 0
0x6a31:	mov	byte ptr [rbx + 0xdc], 1
0x6a38:	jne	0x6bd8


0x6bd8:	cmp	byte ptr [rbx + 0xde], 0
0x6bdf:	jne	0x6a3e


0x6be5:	lea	rbp, [rip + 0xc4ac]
0x6bec:	jmp	0x6c00


0x6c00:	mov	edi, dword ptr [rbx + 0x18]
0x6c03:	mov	rsi, rsp
0x6c06:	call	0x60f0


0x6b7f:	mov	rcx, qword ptr [rbx + 0x60]
0x6b83:	test	rcx, rcx
0x6b86:	jne	0x6c30


0x6b8c:	cmp	dword ptr [rbx + 0x1c], 1
0x6b90:	je	0x6c50


0x6c30:	mov	rdi, qword ptr [rip + 0x2114a9]
0x6c37:	lea	rdx, [rip + 0xc49a]
0x6c3e:	mov	esi, 1
0x6c43:	xor	eax, eax
0x6c45:	call	0x2b00


0x6c50:	mov	rcx, qword ptr [rip + 0x211489]
0x6c57:	lea	rdi, [rip + 0xc480]
0x6c5e:	mov	edx, 2
0x6c63:	mov	esi, 1
0x6c68:	call	0x2af0


0x6b96:	cmp	qword ptr [rbx + 0xb0], 0
0x6b9e:	mov	byte ptr [rbx + 0xdd], 1
0x6ba5:	mov	edx, 1
0x6baa:	je	0x69d2


0x6bb0:	movzx	edx, byte ptr [rbx + 0xdb]
0x6bb7:	test	dl, dl
0x6bb9:	jne	0x69d2


0x6c6d:	jmp	0x6b96


0x6c4a:	jmp	0x6b8c


0x6b16:	movzx	eax, byte ptr [rbx + 0xdf]
0x6b1d:	mov	byte ptr [rbx + 0xda], 1
0x6b24:	mov	edx, 1
0x6b29:	cmp	byte ptr [rbx + 0xd8], al
0x6b2f:	je	0x694c


0x6b35:	mov	rsi, qword ptr [rip + 0x2115a4]
0x6b3c:	mov	edi, 0x20
0x6b41:	call	0x2900


0x6b46:	jmp	0x690a


0x69a7:	mov	rdi, qword ptr [rip + 0x211732]
0x69ae:	mov	rdx, rax
0x69b1:	mov	r9d, r13d
0x69b4:	mov	r8, r12
0x69b7:	mov	rcx, rbp
0x69ba:	mov	esi, 1
0x69bf:	xor	eax, eax
0x69c1:	call	0x2b00


0x69c6:	mov	byte ptr [rbx + 0xdb], 1
0x69cd:	mov	edx, 1
0x69d2:	cmp	qword ptr [rbx + 0xb8], 0
0x69da:	je	0x6a60


0x6a9b:	mov	rdi, qword ptr [rip + 0x21163e]
0x6aa2:	mov	rdx, rax
0x6aa5:	mov	rcx, rbx
0x6aa8:	mov	esi, 1
0x6aad:	xor	eax, eax
0x6aaf:	call	0x2b00


0x6921:	mov	rdi, qword ptr [rip + 0x2117b8]
0x6928:	mov	rdx, rax
0x692b:	mov	rcx, rbp
0x692e:	mov	esi, 1
0x6933:	xor	eax, eax
0x6935:	call	0x2b00


0x693a:	movzx	eax, byte ptr [rbx + 0xd8]
0x6941:	mov	edx, 1
0x6946:	mov	byte ptr [rbx + 0xdf], al
0x694c:	cmp	qword ptr [rbx + 0xc8], 0
0x6954:	je	0x6963


0xcd94:	lea	rdx, [rip + 0x7c1c]
0xcd9b:	mov	rsi, rax
0xcd9e:	mov	edi, 1
0xcda3:	xor	eax, eax
0xcda5:	call	0x2a60


0xd067:	mov	edi, dword ptr [rip + 0x20afb3]
0xd06d:	lea	rdx, [rip + 0x5d6c]
0xd074:	mov	rcx, rax
0xd077:	xor	esi, esi
0xd079:	xor	eax, eax
0xd07b:	call	0x2a90


0x2a90:	jmp	qword ptr [rip + 0x2154c2]




0xd183:	mov	edx, r12d
0xd186:	mov	rsi, rbp
0xd189:	mov	edi, eax
0xd18b:	call	0x28d0


0x28d0:	jmp	qword ptr [rip + 0x2155a2]




0xd09c:	test	eax, eax
0xd09e:	mov	rdi, rbx
0xd0a1:	js	0xd0f7


0xd0f7:	pop	rbx
0xd0f8:	pop	rbp
0xd0f9:	pop	r12
0xd0fb:	jmp	0x2800


0xd0a3:	call	0x2a30


0x2800:	jmp	qword ptr [rip + 0x21560a]




0xd0a8:	test	eax, eax
0xd0aa:	jne	0xd0d8


0xd0ac:	mov	rdi, rbx
0xd0af:	call	0xd110


0xd0d8:	mov	rdi, rbx
0xd0db:	call	0x29a0


0xd0e0:	xor	esi, esi
0xd0e2:	mov	edx, 1
0xd0e7:	mov	edi, eax
0xd0e9:	call	0x28d0


0xd1e7:	cmp	rax, -3
0xd1eb:	mov	rbp, rax
0xd1ee:	jbe	0xd210


0xd210:	mov	rdx, qword ptr [rsp + 8]
0xd215:	xor	rdx, qword ptr fs:[0x28]
0xd21e:	mov	rax, rbp
0xd221:	jne	0xd22e


0xd1f0:	test	r12, r12
0xd1f3:	je	0xd210


0xd223:	add	rsp, 0x18
0xd227:	pop	rbx
0xd228:	pop	rbp
0xd229:	pop	r12
0xd22b:	pop	r13
0xd22d:	ret	


0xd22e:	call	0x2850


0xd1f5:	xor	edi, edi
0xd1f7:	call	0xd940


0xd4a5:	mov	dword ptr [rax], 0xc
0xd4ab:	xor	eax, eax
0xd4ad:	jmp	0xd440


0xc77e:	cmp	dword ptr [rax], 1
0xc781:	je	0xc7bb


0xc783:	mov	rax, qword ptr [rbp]
0xc787:	mov	rcx, qword ptr [rbp + 8]
0xc78b:	movabs	rdx, 0x20c49ba5e353f7cf
0xc795:	mov	rdi, rsp
0xc798:	xor	esi, esi
0xc79a:	mov	qword ptr [rsp], rax
0xc79e:	mov	rax, rcx
0xc7a1:	sar	rcx, 0x3f
0xc7a5:	imul	rdx
0xc7a8:	sar	rdx, 7
0xc7ac:	sub	rdx, rcx
0xc7af:	mov	qword ptr [rsp + 8], rdx
0xc7b4:	call	0x29c0


0x29c0:	jmp	qword ptr [rip + 0x21552a]




0x101f0:	mov	qword ptr [rbp - 0x3c8], rax
0x101f7:	nop	word ptr [rax + rax]
0x10200:	mov	rdi, r15
0x10203:	call	0x2750


0x10208:	jmp	0xf723


0xf723:	mov	rax, qword ptr [rbp - 0x420]
0xf72a:	test	rax, rax
0xf72d:	je	0xf737


0xf737:	mov	rax, qword ptr [rbp - 0x408]
0xf73e:	mov	rdi, qword ptr [rbp - 0x2b8]
0xf745:	add	rax, 0x20
0xf749:	cmp	rdi, rax
0xf74c:	je	0xf753


0xf72f:	mov	rdi, rax
0xf732:	call	0x2750


0xf753:	mov	rax, qword ptr [rbp - 0x410]
0xf75a:	mov	rdi, qword ptr [rbp - 0x3a8]
0xf761:	add	rax, 0x10
0xf765:	cmp	rdi, rax
0xf768:	je	0xf76f


0xf74e:	call	0x2750


0xf76f:	mov	rax, qword ptr [rbp - 0x3c8]
0xf776:	xor	r15d, r15d
0xf779:	mov	dword ptr [rax], 0xc
0xf77f:	mov	rdi, qword ptr [rbp - 0x38]
0xf783:	xor	rdi, qword ptr fs:[0x28]
0xf78c:	mov	rax, r15
0xf78f:	jne	0x10697


0xf76a:	call	0x2750


0xfa95:	mov	qword ptr [rbp - 0x3c8], rax
0xfa9c:	mov	eax, dword ptr [rax]
0xfa9e:	mov	qword ptr [rbp - 0x3f8], rbx
0xfaa5:	mov	dword ptr [rbp - 0x424], eax
0xfaab:	nop	dword ptr [rax + rax]
0xfab0:	mov	rax, qword ptr [rbp - 0x3c8]
0xfab7:	mov	rbx, r12
0xfaba:	mov	r10d, 0x7fffffff
0xfac0:	sub	rbx, r14
0xfac3:	mov	dword ptr [rbp - 0x3bc], 0xffffffff
0xfacd:	cmp	rbx, 0x7fffffff
0xfad4:	mov	dword ptr [rax], 0
0xfada:	mov	eax, dword ptr [rbp - 0x3d0]
0xfae0:	cmovbe	r10, rbx
0xfae4:	cmp	eax, 0x11
0xfae7:	ja	0x104c6


0xfaed:	lea	rsi, [rip + 0x53c4]
0xfaf4:	movsxd	rax, dword ptr [rsi + rax*4]
0xfaf8:	add	rax, rsi
0xfafb:	jmp	rax


0xd898:	mov	dword ptr [rax], 0x4b
0xd89e:	mov	rdi, r13
0xd8a1:	mov	ebx, 0xffffffff
0xd8a6:	call	0xf590


0xd87f:	mov	r13d, dword ptr [rax]
0xd882:	mov	r12, rax
0xd885:	mov	rdi, rbp
0xd888:	call	0x2750


0xd88d:	mov	dword ptr [r12], r13d
0xd891:	jmp	0xd846


0xf70a:	mov	qword ptr [rbp - 0x3c8], rax
0xf711:	cmp	r15, qword ptr [rbp - 0x3e8]
0xf718:	je	0xf723


0xf71a:	test	r15, r15
0xf71d:	jne	0x10200


0x10200:	mov	rdi, r15
0x10203:	call	0x2750


0x1050d:	xor	r15d, r15d
0x10510:	mov	dword ptr [rax], 0x16
0x10516:	jmp	0xf77f


0x1006d:	mov	qword ptr [rbp - 0x3c8], rax
0x10074:	jmp	0xf737


0x113d1:	mov	dword ptr [rax], 0xc
0x113d7:	mov	eax, 0xffffffff
0x113dc:	jmp	0x10962


0x10962:	add	rsp, 0x58
0x10966:	pop	rbx
0x10967:	pop	rbp
0x10968:	pop	r12
0x1096a:	pop	r13
0x1096c:	pop	r14
0x1096e:	pop	r15
0x10970:	ret	


0x11133:	mov	dword ptr [rax], 0x16
0x11139:	mov	eax, 0xffffffff
0x1113e:	jmp	0x10962


0xbe11:	mov	r13, rax
0xbe14:	mov	eax, dword ptr [rax]
0xbe16:	test	r15d, r15d
0xbe19:	mov	rbx, qword ptr [rip + 0x20c260]
0xbe20:	mov	dword ptr [rsp + 0x18], eax
0xbe24:	js	0xbf91


0xbf91:	call	0x2770


0xbe2a:	cmp	dword ptr [rip + 0x20c247], r15d
0xbe31:	jg	0xbe95


0xbe33:	cmp	r15d, 0x7fffffff
0xbe3a:	je	0xbf96


0xbe95:	mov	eax, dword ptr [rbp + 4]
0xbe98:	shl	r15, 4
0xbe9c:	sub	rsp, 8
0xbea0:	add	rbx, r15
0xbea3:	lea	r15, [rbp + 8]
0xbea7:	mov	r8d, dword ptr [rbp]
0xbeab:	mov	r11, qword ptr [rbx]
0xbeae:	mov	r12, qword ptr [rbx + 8]
0xbeb2:	mov	rcx, r14
0xbeb5:	or	eax, 1
0xbeb8:	mov	dword ptr [rsp + 0x24], eax
0xbebc:	push	qword ptr [rbp + 0x30]
0xbebf:	mov	r9d, eax
0xbec2:	push	qword ptr [rbp + 0x28]
0xbec5:	push	r15
0xbec7:	mov	rsi, r11
0xbeca:	mov	rdx, qword ptr [rsp + 0x28]
0xbecf:	mov	rdi, r12
0xbed2:	mov	qword ptr [rsp + 0x30], r11
0xbed7:	call	0xabb0


0xbf96:	call	0xd050


0xbe40:	lea	r12d, [r15 + 1]
0xbe44:	lea	rax, [rip + 0x20c245]
0xbe4b:	movsxd	rsi, r12d
0xbe4e:	shl	rsi, 4
0xbe52:	cmp	rbx, rax
0xbe55:	je	0xbf70


0xbf70:	xor	edi, edi
0xbf72:	call	0xce60


0xbe5b:	mov	rdi, rbx
0xbe5e:	call	0xce60


0xbe63:	mov	rbx, rax
0xbe66:	mov	qword ptr [rip + 0x20c213], rax
0xbe6d:	movsxd	rdi, dword ptr [rip + 0x20c204]
0xbe74:	mov	edx, r12d
0xbe77:	xor	esi, esi
0xbe79:	sub	edx, edi
0xbe7b:	shl	rdi, 4
0xbe7f:	movsxd	rdx, edx
0xbe82:	add	rdi, rbx
0xbe85:	shl	rdx, 4
0xbe89:	call	0x28f0


0xbe8e:	mov	dword ptr [rip + 0x20c1e3], r12d
0xbe95:	mov	eax, dword ptr [rbp + 4]
0xbe98:	shl	r15, 4
0xbe9c:	sub	rsp, 8
0xbea0:	add	rbx, r15
0xbea3:	lea	r15, [rbp + 8]
0xbea7:	mov	r8d, dword ptr [rbp]
0xbeab:	mov	r11, qword ptr [rbx]
0xbeae:	mov	r12, qword ptr [rbx + 8]
0xbeb2:	mov	rcx, r14
0xbeb5:	or	eax, 1
0xbeb8:	mov	dword ptr [rsp + 0x24], eax
0xbebc:	push	qword ptr [rbp + 0x30]
0xbebf:	mov	r9d, eax
0xbec2:	push	qword ptr [rbp + 0x28]
0xbec5:	push	r15
0xbec7:	mov	rsi, r11
0xbeca:	mov	rdx, qword ptr [rsp + 0x28]
0xbecf:	mov	rdi, r12
0xbed2:	mov	qword ptr [rsp + 0x30], r11
0xbed7:	call	0xabb0


0xbf77:	movdqa	xmm0, xmmword ptr [rip + 0x20c111]
0xbf7f:	mov	rbx, rax
0xbf82:	mov	qword ptr [rip + 0x20c0f7], rax
0xbf89:	movups	xmmword ptr [rax], xmm0
0xbf8c:	jmp	0xbe6d


0xbe6d:	movsxd	rdi, dword ptr [rip + 0x20c204]
0xbe74:	mov	edx, r12d
0xbe77:	xor	esi, esi
0xbe79:	sub	edx, edi
0xbe7b:	shl	rdi, 4
0xbe7f:	movsxd	rdx, edx
0xbe82:	add	rdi, rbx
0xbe85:	shl	rdx, 4
0xbe89:	call	0x28f0


0xbfac:	mov	r12d, dword ptr [rax]
0xbfaf:	mov	rbp, rax
0xbfb2:	lea	rax, [rip + 0x20c267]
0xbfb9:	test	rbx, rbx
0xbfbc:	mov	esi, 0x38
0xbfc1:	cmove	rbx, rax
0xbfc5:	mov	rdi, rbx
0xbfc8:	call	0xd000


0xc0e2:	mov	r12d, dword ptr [rax]
0xc0e5:	mov	rbp, rax
0xc0e8:	lea	rax, [rbx + 8]
0xc0ec:	sub	rsp, 8
0xc0f0:	mov	r9d, dword ptr [rbx + 4]
0xc0f4:	push	qword ptr [rbx + 0x30]
0xc0f7:	mov	r8d, dword ptr [rbx]
0xc0fa:	push	qword ptr [rbx + 0x28]
0xc0fd:	mov	rdx, r15
0xc100:	push	rax
0xc101:	mov	rcx, qword ptr [rsp + 0x28]
0xc106:	mov	rsi, r14
0xc109:	mov	rdi, r13
0xc10c:	call	0xabb0


0xc15f:	test	r12, r12
0xc162:	mov	r13, rax
0xc165:	mov	eax, dword ptr [rax]
0xc167:	sete	bpl
0xc16b:	or	ebp, dword ptr [rbx + 4]
0xc16e:	lea	r10, [rbx + 8]
0xc172:	sub	rsp, 8
0xc176:	mov	r8d, dword ptr [rbx]
0xc179:	mov	rcx, r15
0xc17c:	mov	dword ptr [rsp + 0x14], eax
0xc180:	push	qword ptr [rbx + 0x30]
0xc183:	mov	rdx, r14
0xc186:	push	qword ptr [rbx + 0x28]
0xc189:	push	r10
0xc18b:	xor	esi, esi
0xc18d:	mov	r9d, ebp
0xc190:	xor	edi, edi
0xc192:	mov	qword ptr [rsp + 0x40], r10
0xc197:	call	0xabb0


0xd2b2:	cmp	byte ptr [rbp + 8], 0
0xd2b6:	mov	rbx, rax
0xd2b9:	mov	r12d, dword ptr [rax]
0xd2bc:	lea	rdi, [rbp + 9]
0xd2c0:	jne	0xd2c4


0xd2c2:	xor	edi, edi
0xd2c4:	call	0xd240


0xd2c4:	call	0xd240


0xd2c9:	test	eax, eax
0xd2cb:	je	0xd2f0


0xd2f0:	call	0x2980


0xd2cd:	mov	r12d, dword ptr [rbx]
0xd2d0:	xor	r13d, r13d
0xd2d3:	mov	rdi, rbp
0xd2d6:	call	0xd270


0x2980:	jmp	qword ptr [rip + 0x21554a]




0xd2db:	mov	dword ptr [rbx], r12d
0xd2de:	add	rsp, 8
0xd2e2:	mov	eax, r13d
0xd2e5:	pop	rbx
0xd2e6:	pop	rbp
0xd2e7:	pop	r12
0xd2e9:	pop	r13
0xd2eb:	ret	


0xa621:	mov	rdi, rax
0xa624:	mov	rbp, rax
0xa627:	call	0xd300


0xa62c:	mov	rbx, rax
0xa62f:	xor	eax, eax
0xa631:	test	rbx, rbx
0xa634:	je	0xa65d


0xa65d:	add	rsp, 0x10
0xa661:	pop	rbx
0xa662:	pop	rbp
0xa663:	pop	r12
0xa665:	pop	r13
0xa667:	pop	r14
0xa669:	ret	


0xa636:	mov	r9, rbp
0xa639:	mov	r8, rbx
0xa63c:	xor	ecx, ecx
0xa63e:	mov	rdx, r14
0xa641:	mov	rsi, r13
0xa644:	mov	rdi, r12
0xa647:	call	0x8890


0xa64c:	mov	rdi, rbx
0xa64f:	mov	byte ptr [rsp + 0xf], al
0xa653:	call	0xd5b0


0xa658:	movzx	eax, byte ptr [rsp + 0xf]
0xa65d:	add	rsp, 0x10
0xa661:	pop	rbx
0xa662:	pop	rbp
0xa663:	pop	r12
0xa665:	pop	r13
0xa667:	pop	r14
0xa669:	ret	


0xd4e7:	test	rax, rax
0xd4ea:	mov	rbx, rax
0xd4ed:	je	0xd588


0xd588:	cmp	byte ptr [rbp + 8], 0
0xd58c:	mov	r12d, 1
0xd592:	jne	0xd4f9


0xd4f3:	cmp	byte ptr [rbp + 8], 0
0xd4f7:	jne	0xd560


0xd598:	add	rsp, 0x10
0xd59c:	mov	rax, r12
0xd59f:	pop	rbx
0xd5a0:	pop	rbp
0xd5a1:	pop	r12
0xd5a3:	ret	


0xd4f9:	mov	rdi, rbx
0xd4fc:	call	0xd300


0xd560:	lea	rdi, [rbp + 9]
0xd564:	mov	rsi, rax
0xd567:	mov	r12d, 1
0xd56d:	call	0x2960


0xd572:	test	eax, eax
0xd574:	jne	0xd4f9


0xd576:	add	rsp, 0x10
0xd57a:	mov	rax, r12
0xd57d:	pop	rbx
0xd57e:	pop	rbp
0xd57f:	pop	r12
0xd581:	ret	


0xd501:	test	rax, rax
0xd504:	mov	r12, rax
0xd507:	je	0xd54d


0xd54d:	add	rsp, 0x10
0xd551:	mov	rax, r12
0xd554:	pop	rbx
0xd555:	pop	rbp
0xd556:	pop	r12
0xd558:	ret	


0xd509:	xor	edi, edi
0xd50b:	cmp	byte ptr [rbp + 8], 0
0xd50f:	je	0xd515


0xd515:	call	0xd240


0xd511:	lea	rdi, [rbp + 9]
0xd515:	call	0xd240


0xd51a:	test	eax, eax
0xd51c:	je	0xd5a8


0xd5a8:	call	0x2980


0xd522:	call	0x2780


0xd527:	cmp	r12, 1
0xd52b:	mov	ebx, dword ptr [rax]
0xd52d:	je	0xd548


0xd548:	mov	dword ptr [rax], ebx
0xd54a:	xor	r12d, r12d
0xd54d:	add	rsp, 0x10
0xd551:	mov	rax, r12
0xd554:	pop	rbx
0xd555:	pop	rbp
0xd556:	pop	r12
0xd558:	ret	


0xd52f:	mov	rdi, r12
0xd532:	mov	qword ptr [rsp + 8], rax
0xd537:	call	0xd270


0xd53c:	mov	rax, qword ptr [rsp + 8]
0xd541:	nop	dword ptr [rax]
0xd548:	mov	dword ptr [rax], ebx
0xd54a:	xor	r12d, r12d
0xd54d:	add	rsp, 0x10
0xd551:	mov	rax, r12
0xd554:	pop	rbx
0xd555:	pop	rbp
0xd556:	pop	r12
0xd558:	ret	


0xd5dd:	test	rax, rax
0xd5e0:	mov	r12, rax
0xd5e3:	je	0xd62e


0xd62e:	add	rsp, 8
0xd632:	xor	eax, eax
0xd634:	pop	rbx
0xd635:	pop	rbp
0xd636:	pop	r12
0xd638:	pop	r13
0xd63a:	ret	


0xd5e5:	mov	rsi, r13
0xd5e8:	mov	rdi, rbp
0xd5eb:	call	0x27a0


0x27a0:	jmp	qword ptr [rip + 0x21563a]




0xd69c:	test	rax, rax
0xd69f:	mov	r12, rax
0xd6a2:	je	0xd7a0


0xd7a0:	mov	rax, -1
0xd7a7:	jmp	0xd6ee


0xd6a8:	mov	rdi, rbx
0xd6ab:	call	0x2a20


0x8e77:	test	rax, rax
0x8e7a:	jne	0x89d1


0x8e80:	jmp	0x8cce


0x89d1:	cmp	byte ptr [r13], 0
0x89d6:	lea	rax, [rip + 0x8d8e]
0x89dd:	mov	qword ptr [rsp + 0x1e0], 0
0x89e9:	mov	dword ptr [rsp + 0x1cc], 2
0x89f4:	mov	qword ptr [rsp + 0x218], 0
0x8a00:	lea	r12, [rsp + 0x130]
0x8a08:	mov	qword ptr [rsp + 0x220], 0
0x8a14:	mov	qword ptr [rsp + 0x228], 0
0x8a20:	mov	r14d, 0x76a700
0x8a26:	mov	qword ptr [rsp + 0x230], 0
0x8a32:	mov	qword ptr [rsp + 0x238], 0
0x8a3e:	cmove	r13, rax
0x8a42:	movzx	eax, byte ptr [rsp + 0x20]
0x8a47:	mov	qword ptr [rsp + 0x240], 0
0x8a53:	mov	qword ptr [rsp + 0x1b0], r13
0x8a5b:	movsxd	r13, dword ptr [rsp + 0x18]
0x8a60:	mov	dword ptr [rsp + 0x248], 0
0x8a6b:	mov	byte ptr [rsp + 0x250], 0
0x8a73:	mov	byte ptr [rsp + 0x289], al
0x8a7a:	movsxd	rax, dword ptr [rsp + 0x104]
0x8a82:	mov	qword ptr [rsp + 0x210], r13
0x8a8a:	and	byte ptr [rsp + 0x289], 1
0x8a92:	lea	r13, [rsp + 0x170]
0x8a9a:	add	rax, 0x76c
0x8aa0:	mov	qword ptr [rsp + 0x1d8], rax
0x8aa8:	mov	eax, dword ptr [rsp + 0x100]
0x8aaf:	add	eax, 1
0x8ab2:	cdqe	
0x8ab4:	mov	qword ptr [rsp + 0x1e8], rax
0x8abc:	movsxd	rax, dword ptr [rsp + 0xfc]
0x8ac4:	mov	qword ptr [rsp + 0x1f0], rax
0x8acc:	movsxd	rax, dword ptr [rsp + 0xf8]
0x8ad4:	mov	qword ptr [rsp + 0x1f8], rax
0x8adc:	movsxd	rax, dword ptr [rsp + 0xf4]
0x8ae4:	mov	qword ptr [rsp + 0x200], rax
0x8aec:	movsxd	rax, dword ptr [rsp + 0xf0]
0x8af4:	mov	qword ptr [rsp + 0x208], rax
0x8afc:	mov	eax, dword ptr [rsp + 0x110]
0x8b03:	mov	dword ptr [rsp + 0x90], eax
0x8b0a:	mov	byte ptr [rsp + 0x251], 0
0x8b12:	mov	rdx, qword ptr [rsp + 0x120]
0x8b1a:	mov	qword ptr [rsp + 0x258], 0
0x8b26:	mov	qword ptr [rsp + 0x260], 0
0x8b32:	mov	qword ptr [rsp + 0x278], 0
0x8b3e:	mov	qword ptr [rsp + 0x268], 0
0x8b4a:	mov	qword ptr [rsp + 0x270], 0


0x8cce:	cmp	r15, qword ptr [rsp]
0x8cd2:	je	0x8cdc


0x8b56:	mov	qword ptr [rsp + 0x280], 0
0x8b62:	mov	byte ptr [rsp + 0x288], 0
0x8b6a:	mov	byte ptr [rsp + 0x28a], 0
0x8b72:	mov	byte ptr [rsp + 0x28b], 0
0x8b7a:	mov	byte ptr [rsp + 0x28d], 0
0x8b82:	mov	byte ptr [rsp + 0x28c], 0
0x8b8a:	mov	byte ptr [rsp + 0x28e], 0
0x8b92:	mov	byte ptr [rsp + 0x28f], 0
0x8b9a:	mov	byte ptr [rsp + 0x290], 0
0x8ba2:	mov	qword ptr [rsp + 0x298], rdx
0x8baa:	mov	dword ptr [rsp + 0x2a0], 0x10d
0x8bb5:	mov	dword ptr [rsp + 0x2a4], eax
0x8bbc:	mov	qword ptr [rsp + 0x2a8], 0
0x8bc8:	movsxd	rax, r14d
0x8bcb:	add	rax, rbx
0x8bce:	jo	0x8c1c


0x8cd4:	mov	rdi, r15
0x8cd7:	call	0xd5b0


0x8c1c:	mov	rdi, qword ptr [rsp + 0x298]
0x8c24:	test	rdi, rdi
0x8c27:	je	0x8c56


0x8bd0:	mov	rdx, r13
0x8bd3:	mov	rsi, r12
0x8bd6:	mov	rdi, r15
0x8bd9:	mov	qword ptr [rsp + 0x130], rax
0x8be1:	call	0xd5c0


0x8c56:	lea	r13, [rsp + 0x1b0]
0x8c5e:	mov	rdi, r13
0x8c61:	call	0x6c80


0x8c29:	mov	rsi, qword ptr [rsp + 0x2a8]
0x8c31:	test	rsi, rsi
0x8c34:	je	0x8c56


0x8c36:	call	0x2960


0x8c3b:	test	eax, eax
0x8c3d:	jne	0x8c56


0x8c3f:	mov	dword ptr [rsp + 0x2a4], 0xffffffff
0x8c4a:	mov	qword ptr [rsp + 0x2a8], 0
0x8c56:	lea	r13, [rsp + 0x1b0]
0x8c5e:	mov	rdi, r13
0x8c61:	call	0x6c80


0x8c66:	test	eax, eax
0x8c68:	jne	0x8d18


0x8c6e:	cmp	byte ptr [rsp + 0x289], 0
0x8c76:	jne	0x8eb8


0x8d18:	movzx	r12d, byte ptr [rsp + 0x289]
0x8d21:	test	r12b, r12b
0x8d24:	je	0x8cce


0x8c7c:	movzx	r12d, byte ptr [rsp + 0x250]
0x8c85:	test	r12b, r12b
0x8c88:	jne	0x8e88


0x8eb8:	lea	rsi, [rip + 0xa2df]
0x8ebf:	mov	edx, 5
0x8ec4:	xor	edi, edi
0x8ec6:	call	0x2820


0x8d26:	add	rbp, qword ptr [rsp + 0x30]
0x8d2b:	mov	rbx, qword ptr [rsp + 0x1b0]
0x8d33:	mov	edx, 5
0x8d38:	cmp	rbx, rbp
0x8d3b:	jb	0x9158


0x8c8e:	mov	rax, qword ptr [rsp + 0x258]
0x8c96:	or	rax, qword ptr [rsp + 0x278]
0x8c9e:	or	rax, qword ptr [rsp + 0x260]
0x8ca6:	mov	rdx, qword ptr [rsp + 0x268]
0x8cae:	or	rax, qword ptr [rsp + 0x270]
0x8cb6:	add	rdx, qword ptr [rsp + 0x280]
0x8cbe:	or	rax, rdx
0x8cc1:	cmp	rax, 1
0x8cc5:	jle	0x92f9


0x8e88:	mov	rax, qword ptr [rsp + 0x28]
0x8e8d:	movdqu	xmm0, xmmword ptr [rsp + 0x208]
0x8e96:	movups	xmmword ptr [rax], xmm0
0x8e99:	jmp	0x8cce


0x9158:	lea	rsi, [rip + 0xa571]
0x915f:	xor	edi, edi
0x9161:	call	0x2820


0x8d41:	lea	rsi, [rip + 0xa43f]
0x8d48:	xor	edi, edi
0x8d4a:	call	0x2820


0x92f9:	mov	rbp, qword ptr [rsp + 0x1d8]
0x9301:	test	rbp, rbp
0x9304:	js	0x9838


0x8ccb:	xor	r12d, r12d
0x8cce:	cmp	r15, qword ptr [rsp]
0x8cd2:	je	0x8cdc


0x9838:	mov	rax, -0x76c
0x983f:	xor	ebx, ebx
0x9841:	sub	rax, rbp
0x9844:	jno	0x9338


0x930a:	cmp	qword ptr [rsp + 0x1e0], 2
0x9313:	je	0x9868


0x984a:	mov	ebx, 1
0x984f:	jmp	0x9338


0x9338:	movsxd	rdx, eax
0x933b:	mov	dword ptr [rsp + 0x84], eax
0x9342:	cmp	rax, rdx
0x9345:	mov	edx, 1
0x934a:	cmovne	ebx, edx
0x934d:	and	ebx, 1
0x9350:	test	bl, bl
0x9352:	je	0x93f3


0x9868:	cmp	rbp, 0x44
0x986c:	mov	ebx, 0x76c
0x9871:	mov	eax, 0x7d0
0x9876:	cmovle	rbx, rax
0x987a:	add	rbx, rbp
0x987d:	test	r12b, r12b
0x9880:	jne	0x9a98


0x9319:	xor	ebx, ebx
0x931b:	cmp	rbp, 0x76c
0x9322:	lea	rax, [rbp - 0x76c]
0x9329:	jae	0x9858


0x93f3:	mov	rax, qword ptr [rsp + 0x1e8]
0x93fb:	xor	edx, edx
0x93fd:	add	rax, -1
0x9401:	jo	0xa45a


0x9358:	test	r12b, r12b
0x935b:	je	0x937d


0x9886:	mov	rbp, rbx
0x9889:	jmp	0x9319


0x9a98:	lea	rsi, [rip + 0x9d51]
0x9a9f:	mov	edx, 5
0x9aa4:	xor	edi, edi
0x9aa6:	call	0x2820


0x932f:	test	rax, rax
0x9332:	jns	0x984a


0x9858:	test	rax, rax
0x985b:	jns	0x9338


0xa45a:	mov	edx, 1
0xa45f:	jmp	0x9407


0x9407:	movsxd	rcx, eax
0x940a:	mov	dword ptr [rsp + 0x80], eax
0x9411:	cmp	rax, rcx
0x9414:	mov	ecx, 1
0x9419:	movzx	eax, byte ptr [rsp + 0x289]
0x9421:	cmovne	edx, ecx
0x9424:	test	edx, edx
0x9426:	jne	0x9385


0x937d:	movzx	eax, byte ptr [rsp + 0x289]
0x9385:	test	al, al
0x9387:	mov	edx, 5
0x938c:	lea	rsi, [rip + 0xa48d]
0x9393:	je	0x8ccb


0x935d:	lea	rsi, [rip + 0x9ec8]
0x9364:	xor	edi, edi
0x9366:	mov	edx, 5
0x936b:	call	0x2820


0x9861:	jmp	0x984a


0x942c:	mov	rdx, qword ptr [rsp + 0x1f0]
0x9434:	movsxd	rcx, edx
0x9437:	mov	dword ptr [rsp + 0x7c], edx
0x943b:	cmp	rdx, rcx
0x943e:	setne	r12b
0x9442:	movzx	r12d, r12b
0x9446:	jne	0x9385


0x9385:	test	al, al
0x9387:	mov	edx, 5
0x938c:	lea	rsi, [rip + 0xa48d]
0x9393:	je	0x8ccb


0x9399:	xor	edi, edi
0x939b:	call	0x2820


0x944c:	cmp	qword ptr [rsp + 0x278], 0
0x9455:	jne	0x9ac3


0x945b:	cmp	byte ptr [rsp + 0x251], 0
0x9463:	je	0x9b72


0x9ac3:	mov	r9d, dword ptr [rsp + 0x1cc]
0x9acb:	mov	rbp, qword ptr [rsp + 0x1f8]
0x9ad3:	test	r9d, r9d
0x9ad6:	je	0xa138


0x9b72:	test	al, al
0x9b74:	mov	qword ptr [rsp + 0x70], 0
0x9b7d:	mov	dword ptr [rsp + 0x78], 0
0x9b85:	mov	qword ptr [rsp + 0x210], 0
0x9b91:	je	0x9b28


0x9469:	cmp	qword ptr [rsp + 0x258], 0
0x9472:	jne	0x9b72


0xa138:	lea	rdx, [rbp - 1]
0xa13c:	cmp	rdx, 0xa
0xa140:	jbe	0x9b68


0x9adc:	cmp	r9d, 1
0x9ae0:	jne	0x9b5e


0x9b28:	mov	rax, qword ptr [rsp + 0x258]
0x9b30:	or	rax, qword ptr [rsp + 0x260]
0x9b38:	or	rax, qword ptr [rsp + 0x278]
0x9b40:	je	0x94b7


0x9b93:	lea	rdi, [rip + 0x9d0e]
0x9b9a:	xor	eax, eax
0x9b9c:	call	0x61f0


0x9478:	cmp	qword ptr [rsp + 0x260], 0
0x9481:	je	0x9ac3


0x9b68:	mov	r9d, ebp
0x9b6b:	mov	dword ptr [rsp + 0x78], r9d
0x9b70:	jmp	0x9b08


0xa146:	cmp	rbp, 0xc
0xa14a:	jne	0xa449


0x9ae2:	lea	rdx, [rbp - 1]
0x9ae6:	lea	r9d, [rbp + 0xc]
0x9aea:	cmp	rdx, 0xa
0x9aee:	jbe	0x9b6b


0x9b5e:	cmp	rbp, 0x17
0x9b62:	ja	0xa40a


0x94b7:	cmp	qword ptr [rsp + 0x268], 0
0x94c0:	jne	0x9b4b


0x9b46:	jmp	0x94ac


0x9487:	test	al, al
0x9489:	mov	qword ptr [rsp + 0x70], 0
0x9492:	mov	dword ptr [rsp + 0x78], 0
0x949a:	mov	qword ptr [rsp + 0x210], 0
0x94a6:	jne	0x9b93


0x9b08:	mov	rdx, qword ptr [rsp + 0x200]
0x9b10:	mov	rcx, qword ptr [rsp + 0x208]
0x9b18:	test	al, al
0x9b1a:	mov	dword ptr [rsp + 0x74], edx
0x9b1e:	mov	dword ptr [rsp + 0x70], ecx
0x9b22:	jne	0xa0d8


0xa150:	mov	dword ptr [rsp + 0x78], 0
0xa158:	jmp	0x9b08


0xa449:	mov	dword ptr [rsp + 0x78], 0xffffffff
0xa451:	lea	rbx, [rip + 0x8d22]
0xa458:	jmp	0xa419


0x9b6b:	mov	dword ptr [rsp + 0x78], r9d
0x9b70:	jmp	0x9b08


0x9af0:	cmp	rbp, 0xc
0x9af4:	jne	0xa592


0xa40a:	lea	rbx, [rip + 0x8e9e]
0xa411:	mov	dword ptr [rsp + 0x78], 0xffffffff
0xa419:	test	al, al
0xa41b:	je	0x8ccb


0x94c6:	mov	eax, dword ptr [rsp + 0x90]
0x94cd:	mov	edx, dword ptr [rsp + 0x70]
0x94d1:	mov	dword ptr [rsp + 0xd0], eax
0x94d8:	lea	rax, [rsp + 0x70]
0x94dd:	mov	rdi, r15
0x94e0:	mov	dword ptr [rsp + 0x88], 0xffffffff
0x94eb:	mov	rsi, rax
0x94ee:	mov	rbp, rax
0x94f1:	mov	qword ptr [rsp + 0x18], rax
0x94f6:	mov	dword ptr [rsp + 0xb0], edx
0x94fd:	mov	edx, dword ptr [rsp + 0x74]
0x9501:	mov	dword ptr [rsp + 0xb4], edx
0x9508:	mov	edx, dword ptr [rsp + 0x78]
0x950c:	mov	dword ptr [rsp + 0xb8], edx
0x9513:	mov	edx, dword ptr [rsp + 0x7c]
0x9517:	mov	dword ptr [rsp + 0xbc], edx
0x951e:	mov	edx, dword ptr [rsp + 0x80]
0x9525:	mov	dword ptr [rsp + 0xc0], edx
0x952c:	mov	edx, dword ptr [rsp + 0x84]
0x9533:	mov	dword ptr [rsp + 0xc4], edx
0x953a:	call	0xd670


0x9b4b:	mov	eax, dword ptr [rsp + 0x1c4]
0x9b52:	mov	dword ptr [rsp + 0x90], eax
0x9b59:	jmp	0x94cd


0x94ac:	mov	dword ptr [rsp + 0x90], 0xffffffff
0x94b7:	cmp	qword ptr [rsp + 0x268], 0
0x94c0:	jne	0x9b4b


0xa0d8:	lea	rbp, [rsp + 0x300]
0xa0e0:	lea	r8, [rip + 0x917e]
0xa0e7:	push	rcx
0xa0e8:	push	rdx
0xa0e9:	mov	esi, 0x64
0xa0ee:	mov	edx, 1
0xa0f3:	mov	rdi, rbp
0xa0f6:	xor	eax, eax
0xa0f8:	mov	ecx, 0x64
0xa0fd:	call	0x2740


0xa419:	test	al, al
0xa41b:	je	0x8ccb


0x9afa:	mov	dword ptr [rsp + 0x78], 0xc
0x9b02:	mov	r9d, 0xc
0x9b08:	mov	rdx, qword ptr [rsp + 0x200]
0x9b10:	mov	rcx, qword ptr [rsp + 0x208]
0x9b18:	test	al, al
0x9b1a:	mov	dword ptr [rsp + 0x74], edx
0x9b1e:	mov	dword ptr [rsp + 0x70], ecx
0x9b22:	jne	0xa0d8


0xa592:	mov	dword ptr [rsp + 0x78], 0xffffffff
0xa59a:	lea	rbx, [rip + 0x8b3d]
0xa5a1:	jmp	0xa419


0xa421:	lea	rsi, [rip + 0x8e22]
0xa428:	xor	edi, edi
0xa42a:	mov	edx, 5
0xa42f:	call	0x2820


0x94cd:	mov	edx, dword ptr [rsp + 0x70]
0x94d1:	mov	dword ptr [rsp + 0xd0], eax
0x94d8:	lea	rax, [rsp + 0x70]
0x94dd:	mov	rdi, r15
0x94e0:	mov	dword ptr [rsp + 0x88], 0xffffffff
0x94eb:	mov	rsi, rax
0x94ee:	mov	rbp, rax
0x94f1:	mov	qword ptr [rsp + 0x18], rax
0x94f6:	mov	dword ptr [rsp + 0xb0], edx
0x94fd:	mov	edx, dword ptr [rsp + 0x74]
0x9501:	mov	dword ptr [rsp + 0xb4], edx
0x9508:	mov	edx, dword ptr [rsp + 0x78]
0x950c:	mov	dword ptr [rsp + 0xb8], edx
0x9513:	mov	edx, dword ptr [rsp + 0x7c]
0x9517:	mov	dword ptr [rsp + 0xbc], edx
0x951e:	mov	edx, dword ptr [rsp + 0x80]
0x9525:	mov	dword ptr [rsp + 0xc0], edx
0x952c:	mov	edx, dword ptr [rsp + 0x84]
0x9533:	mov	dword ptr [rsp + 0xc4], edx
0x953a:	call	0xd670


0xa102:	pop	rsi
0xa103:	pop	rdi
0xa104:	cmp	qword ptr [rsp + 0x278], 0
0xa10d:	mov	edx, 5
0xa112:	je	0xa5a6


0xa5a6:	lea	rsi, [rip + 0x92cb]
0xa5ad:	xor	edi, edi
0xa5af:	call	0x2820


0xa118:	lea	rsi, [rip + 0x9729]
0xa11f:	xor	edi, edi
0xa121:	call	0x2820


0x953f:	mov	ecx, dword ptr [rsp + 0x88]
0x9546:	mov	r14, rax
0x9549:	test	ecx, ecx
0x954b:	js	0x9565


0x9565:	mov	rax, qword ptr [rsp + 0x280]
0x956d:	test	rax, rax
0x9570:	mov	qword ptr [rsp + 0x30], rax
0x9575:	jne	0x988e


0x954d:	lea	rdi, [rsp + 0xb0]
0x9555:	mov	rsi, rbp
0x9558:	call	0x6400


0x957b:	mov	r10d, dword ptr [rsp + 0xb0]
0x9583:	mov	r9d, dword ptr [rsp + 0x70]
0x9588:	mov	eax, dword ptr [rsp + 0x84]
0x958f:	mov	ebx, dword ptr [rsp + 0xb8]
0x9596:	mov	esi, dword ptr [rsp + 0x78]
0x959a:	mov	edi, dword ptr [rsp + 0xbc]
0x95a1:	mov	edx, dword ptr [rsp + 0x7c]
0x95a5:	mov	r11d, dword ptr [rsp + 0xc4]
0x95ad:	cmp	r10d, r9d
0x95b0:	mov	dword ptr [rsp + 0x28], eax
0x95b4:	mov	r8d, dword ptr [rsp + 0xb4]
0x95bc:	mov	ecx, dword ptr [rsp + 0x74]
0x95c0:	mov	dword ptr [rsp + 0x38], ebx
0x95c4:	mov	dword ptr [rsp + 0x40], esi
0x95c8:	mov	dword ptr [rsp + 0x10], edi
0x95cc:	mov	dword ptr [rsp + 0x20], edx
0x95d0:	mov	r14d, dword ptr [rsp + 0xc0]
0x95d8:	mov	ebp, dword ptr [rsp + 0x80]
0x95df:	mov	dword ptr [rsp + 0x44], r11d
0x95e4:	movzx	eax, byte ptr [rsp + 0x289]
0x95ec:	jne	0xa15d


0x988e:	mov	edi, dword ptr [rsp + 0x1c8]
0x9895:	lea	rsi, [rsp + 0x3e3]
0x989d:	lea	rbp, [rsp + 0x3e0]
0x98a5:	mov	word ptr [rsp + 0x3e0], 0x5858
0x98af:	mov	byte ptr [rsp + 0x3e2], 0x58
0x98b7:	call	0x60f0


0x95f2:	cmp	r8d, ecx
0x95f5:	jne	0xa15d


0xa15d:	test	al, al
0xa15f:	je	0x8ccb


0x95fb:	cmp	edi, edx
0x95fd:	jne	0xa15d


0xa165:	lea	rsi, [rip + 0x9774]
0xa16c:	mov	edx, 5
0xa171:	xor	edi, edi
0xa173:	mov	dword ptr [rsp + 0x5c], ecx
0xa177:	mov	dword ptr [rsp + 0x58], r8d
0xa17c:	lea	rbx, [rsp + 0x3e0]
0xa184:	mov	dword ptr [rsp + 0x54], r9d
0xa189:	mov	dword ptr [rsp + 0x50], r10d
0xa18e:	call	0x2820


0x9603:	cmp	ebx, esi
0x9605:	je	0xa15d


0x960b:	cmp	r14d, ebp
0x960e:	jne	0xa15d


0x9614:	mov	ebx, dword ptr [rsp + 0x28]
0x9618:	cmp	r11d, ebx
0x961b:	jne	0xa15d


0x9621:	test	al, al
0x9623:	je	0x8ccb


0x9629:	lea	rsi, [rip + 0xa2b0]
0x9630:	mov	edx, 5
0x9635:	xor	edi, edi
0x9637:	lea	rbx, [rsp + 0x3e0]
0x963f:	call	0x2820


0x98bc:	mov	rdi, rbp
0x98bf:	call	0xd300


0x98c4:	test	rax, rax
0x98c7:	mov	rdx, rax
0x98ca:	je	0xa3d7


0xa3d7:	cmp	byte ptr [rsp + 0x289], 0
0xa3df:	je	0x8ccb


0x98d0:	mov	eax, dword ptr [rsp + 0xb0]
0x98d7:	mov	rsi, qword ptr [rsp + 0x18]
0x98dc:	mov	rdi, rdx
0x98df:	mov	qword ptr [rsp + 0x20], rdx
0x98e4:	mov	dword ptr [rsp + 0x88], 0xffffffff
0x98ef:	mov	dword ptr [rsp + 0x70], eax
0x98f3:	mov	eax, dword ptr [rsp + 0xb4]
0x98fa:	mov	dword ptr [rsp + 0x74], eax
0x98fe:	mov	eax, dword ptr [rsp + 0xb8]
0x9905:	mov	dword ptr [rsp + 0x78], eax
0x9909:	mov	eax, dword ptr [rsp + 0xbc]
0x9910:	mov	dword ptr [rsp + 0x7c], eax
0x9914:	mov	eax, dword ptr [rsp + 0xc0]
0x991b:	mov	dword ptr [rsp + 0x80], eax
0x9922:	mov	eax, dword ptr [rsp + 0xc4]
0x9929:	mov	dword ptr [rsp + 0x84], eax
0x9930:	mov	eax, dword ptr [rsp + 0xd0]
0x9937:	mov	dword ptr [rsp + 0x90], eax
0x993e:	call	0xd670


0xa3e5:	lea	rsi, [rip + 0x8e88]
0xa3ec:	xor	edi, edi
0xa3ee:	mov	edx, 5
0xa3f3:	call	0x2820


0x955d:	test	al, al
0x955f:	jne	0x9988


0x9988:	cmp	qword ptr [rsp + 0x260], 0
0x9991:	je	0x9c27


0x9c27:	cmp	byte ptr [rsp + 0x289], 0
0x9c2f:	je	0x9d7e


0x9997:	cmp	qword ptr [rsp + 0x258], 0
0x99a0:	jne	0x9d6e


0x9d7e:	mov	rax, qword ptr [rsp + 0x218]
0x9d86:	mov	rdx, qword ptr [rsp + 0x220]
0x9d8e:	or	rdx, rax
0x9d91:	or	rdx, qword ptr [rsp + 0x228]
0x9d99:	jne	0x9e05


0x9c35:	cmp	qword ptr [rsp + 0x258], 0
0x9c3e:	mov	rax, qword ptr [rsp + 0x260]
0x9c46:	jne	0xa08f


0x99a6:	mov	rax, qword ptr [rsp + 0x1b8]
0x99ae:	test	rax, rax
0x99b1:	jle	0x99c8


0x9d6e:	movzx	ebx, byte ptr [rsp + 0x289]
0x9d76:	test	bl, bl
0x9d78:	jne	0xa098


0x9d9b:	cmp	qword ptr [rsp + 0x280], 0
0x9da4:	je	0xa241


0x9e05:	movsxd	rdx, dword ptr [rsp + 0x84]
0x9e0d:	add	rax, rdx
0x9e10:	seto	dl
0x9e13:	movsxd	rcx, eax
0x9e16:	mov	dword ptr [rsp + 0x20], eax
0x9e1a:	cmp	rax, rcx
0x9e1d:	movzx	edx, dl
0x9e20:	mov	ecx, 1
0x9e25:	cmovne	edx, ecx
0x9e28:	test	edx, edx
0x9e2a:	jne	0x8ccb


0x9c4c:	test	rax, rax
0x9c4f:	je	0xa4b1


0xa08f:	test	rax, rax
0xa092:	je	0x9c55


0x99c8:	sub	rax, r12
0x99cb:	imul	rcx, rax, 7
0x99cf:	jo	0x9a1a


0x99b3:	xor	r12d, r12d
0x99b6:	mov	esi, dword ptr [rsp + 0x1c0]
0x99bd:	cmp	dword ptr [rsp + 0x88], esi
0x99c4:	setne	r12b
0x99c8:	sub	rax, r12
0x99cb:	imul	rcx, rax, 7
0x99cf:	jo	0x9a1a


0xa098:	lea	rbp, [rsp + 0x300]
0xa0a0:	lea	rsi, [rsp + 0x3e0]
0xa0a8:	mov	rdi, r13
0xa0ab:	call	0x67a0


0xa241:	test	bl, bl
0xa243:	jne	0xa464


0x9daa:	movsxd	rax, dword ptr [rsp + 0x1c8]
0x9db2:	xor	edx, edx
0x9db4:	mov	rbp, rax
0x9db7:	sub	rax, qword ptr [rsp + 0x98]
0x9dbf:	seto	dl
0x9dc2:	sub	r14, rax
0x9dc5:	seto	al
0x9dc8:	movzx	eax, al
0x9dcb:	or	rdx, rax
0x9dce:	je	0xa241


0x9e30:	movsxd	r12, dword ptr [rsp + 0x80]
0x9e38:	xor	eax, eax
0x9e3a:	add	r12, qword ptr [rsp + 0x220]
0x9e42:	movsxd	rdx, r12d
0x9e45:	seto	al
0x9e48:	cmp	r12, rdx
0x9e4b:	jne	0x9d32


0xa4b1:	mov	eax, dword ptr [rsp + 0x80]
0xa4b8:	mov	edi, dword ptr [rsp + 0x84]
0xa4bf:	lea	rsi, [rsp + 0x2d3]
0xa4c7:	mov	r12d, dword ptr [rsp + 0x7c]
0xa4cc:	lea	rbp, [rsp + 0x300]
0xa4d4:	lea	ebx, [rax + 1]
0xa4d7:	call	0x2b70


0x9c55:	lea	rbp, [rsp + 0x300]
0x9c5d:	mov	rdi, qword ptr [rsp + 0x18]
0x9c62:	mov	rdx, rbp
0x9c65:	mov	rsi, r13
0x9c68:	call	0x66e0


0x9a1a:	cmp	byte ptr [rsp + 0x289], 0
0x9a22:	je	0x8ccb


0x99d1:	mov	eax, dword ptr [rsp + 0x1c0]
0x99d8:	sub	eax, dword ptr [rsp + 0x88]
0x99df:	mov	esi, 7
0x99e4:	add	eax, 7
0x99e7:	cdq	
0x99e8:	idiv	esi
0x99ea:	movsxd	rax, edx
0x99ed:	add	rax, rcx
0x99f0:	jo	0x9a1a


0xa249:	mov	rbp, qword ptr [rsp + 0x230]
0xa251:	movzx	r12d, byte ptr [rsp + 0x289]
0xa25a:	imul	r9, rbp, 0xe10
0xa261:	jo	0xa3bd


0xa464:	mov	rdi, qword ptr [rsp + 0x18]
0xa469:	lea	rdx, [rsp + 0x300]
0xa471:	mov	rsi, r13
0xa474:	call	0x66e0


0x9dd4:	test	bl, bl
0x9dd6:	je	0x8ccb


0x9e51:	test	eax, eax
0x9e53:	jne	0x9d32


0x9d32:	cmp	byte ptr [rsp + 0x289], 0
0x9d3a:	je	0x8ccb


0x9a28:	mov	rdi, qword ptr [rsp + 0x18]
0x9a2d:	lea	rdx, [rsp + 0x300]
0x9a35:	mov	rsi, r13
0x9a38:	call	0x66e0


0x99f2:	movsxd	rdx, dword ptr [rsp + 0x7c]
0x99f7:	add	rax, rdx
0x99fa:	seto	dl
0x99fd:	movsxd	rcx, eax
0x9a00:	mov	dword ptr [rsp + 0x7c], eax
0x9a04:	cmp	rax, rcx
0x9a07:	movzx	edx, dl
0x9a0a:	mov	ecx, 1
0x9a0f:	cmovne	edx, ecx
0x9a12:	test	edx, edx
0x9a14:	je	0x9ba3


0xa3bd:	test	r12b, r12b
0xa3c0:	je	0x8ccb


0xa267:	add	r9, r14
0xa26a:	jo	0xa3bd


0x9ddc:	lea	rsi, [rip + 0x9ead]
0x9de3:	xor	edi, edi
0x9de5:	mov	edx, 5
0x9dea:	call	0x2820


0x9e59:	movsxd	rbp, dword ptr [rsp + 0x7c]
0x9e5e:	xor	eax, eax
0x9e60:	add	rbp, qword ptr [rsp + 0x228]
0x9e68:	movsxd	rdx, ebp
0x9e6b:	seto	al
0x9e6e:	cmp	rbp, rdx
0x9e71:	jne	0x9d32


0x9d40:	lea	rsi, [rip + 0x961b]
0x9d47:	xor	edi, edi
0x9d49:	mov	edx, 5
0x9d4e:	call	0x2820


0x9ba3:	mov	rsi, qword ptr [rsp + 0x18]
0x9ba8:	mov	rdi, r15
0x9bab:	mov	dword ptr [rsp + 0x90], 0xffffffff
0x9bb6:	call	0xd670


0xa3c6:	mov	edx, 5
0xa3cb:	lea	rsi, [rip + 0x98ee]
0xa3d2:	jmp	0x9399


0xa270:	mov	r13, qword ptr [rsp + 0x238]
0xa278:	imul	rax, r13, 0x3c
0xa27c:	jo	0xa3bd


0x9e77:	test	eax, eax
0x9e79:	jne	0x9d32


0xa282:	add	r9, rax
0xa285:	jo	0xa3bd


0x9e7f:	mov	eax, dword ptr [rsp + 0x20]
0x9e83:	mov	rsi, qword ptr [rsp + 0x18]
0x9e88:	mov	rdi, r15
0x9e8b:	mov	dword ptr [rsp + 0x80], r12d
0x9e93:	mov	dword ptr [rsp + 0x7c], ebp
0x9e97:	mov	dword ptr [rsp + 0x84], eax
0x9e9e:	mov	eax, dword ptr [rsp + 0xb8]
0x9ea5:	mov	dword ptr [rsp + 0x78], eax
0x9ea9:	mov	eax, dword ptr [rsp + 0xb4]
0x9eb0:	mov	dword ptr [rsp + 0x74], eax
0x9eb4:	mov	eax, dword ptr [rsp + 0xb0]
0x9ebb:	mov	dword ptr [rsp + 0x70], eax
0x9ebf:	mov	eax, dword ptr [rsp + 0xd0]
0x9ec6:	mov	dword ptr [rsp + 0x90], eax
0x9ecd:	call	0xd670


0xa28b:	mov	r14, qword ptr [rsp + 0x240]
0xa293:	add	r9, r14
0xa296:	jo	0xa3bd


0xa29c:	movsxd	rsi, dword ptr [rsp + 0x248]
0xa2a4:	mov	rcx, qword ptr [rsp + 0x210]
0xa2ac:	mov	r8d, 0x3b9aca00
0xa2b2:	mov	rbx, r9
0xa2b5:	add	rcx, rsi
0xa2b8:	mov	rax, rcx
0xa2bb:	cqo	
0xa2bd:	idiv	r8
0xa2c0:	lea	rax, [rdx + 0x3b9aca00]
0xa2c7:	cqo	
0xa2c9:	idiv	r8
0xa2cc:	mov	rax, rcx
0xa2cf:	sub	rax, rdx
0xa2d2:	mov	rdi, rdx
0xa2d5:	cqo	
0xa2d7:	idiv	r8
0xa2da:	cdqe	
0xa2dc:	add	rbx, rax
0xa2df:	jo	0xa3bd


0xa2e5:	mov	rax, qword ptr [rsp + 0x28]
0xa2ea:	test	r12b, r12b
0xa2ed:	mov	qword ptr [rax], rbx
0xa2f0:	mov	qword ptr [rax + 8], rdi
0xa2f4:	je	0x9002


0x9002:	test	r12b, r12b
0x9005:	je	0x92c3


0xa2fa:	mov	rax, rbp
0xa2fd:	or	rax, r13
0xa300:	or	rax, r14
0xa303:	or	rax, rsi
0xa306:	je	0x9002


0x92c3:	mov	r12d, 1
0x92c9:	jmp	0x8cce


0x900b:	mov	edx, 5
0x9010:	lea	rsi, [rip + 0xa39e]
0x9017:	cmp	qword ptr [rsp + 0x10], 0
0x901d:	je	0x9222


0xa30c:	mov	dword ptr [rsp + 0x18], esi
0xa310:	lea	rsi, [rip + 0x99d9]
0xa317:	xor	edi, edi
0xa319:	mov	edx, 5
0xa31e:	call	0x2820


0x9222:	xor	edi, edi
0x9224:	call	0x2820


0x9023:	mov	rsi, qword ptr [rsp + 0x10]
0x9028:	lea	rdi, [rip + 0x8739]
0x902f:	mov	ecx, 5
0x9034:	mov	edx, 5
0x9039:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x9039:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x903b:	seta	al
0x903e:	sbb	al, 0
0x9040:	test	al, al
0x9042:	je	0x921b


0x921b:	lea	rsi, [rip + 0xa1ad]
0x9222:	xor	edi, edi
0x9224:	call	0x2820


0x9048:	lea	rsi, [rip + 0xad59]
0x904f:	xor	edi, edi
0x9051:	call	0x2820


0x9a3d:	lea	rsi, [rsp + 0x3e0]
0x9a45:	mov	r14d, dword ptr [rsp + 0x1c0]
0x9a4d:	mov	rbp, qword ptr [rsp + 0x1b8]
0x9a55:	mov	rdi, r13
0x9a58:	mov	r12, rax
0x9a5b:	call	0x67a0


0xa479:	lea	rsi, [rip + 0x8f1b]
0xa480:	mov	rbx, rax
0xa483:	xor	edi, edi
0xa485:	mov	edx, 5
0xa48a:	call	0x2820


0x9c6d:	lea	rsi, [rip + 0x96d4]
0x9c74:	mov	rbx, rax
0x9c77:	mov	edx, 5
0x9c7c:	xor	edi, edi
0x9c7e:	call	0x2820


0xa4dc:	push	r12
0xa4de:	lea	r8, [rip + 0x8e4e]
0xa4e5:	push	rbx
0xa4e6:	mov	r9, rax
0xa4e9:	mov	ecx, 0x64
0xa4ee:	mov	edx, 1
0xa4f3:	mov	esi, 0x64
0xa4f8:	mov	rdi, rbp
0xa4fb:	xor	eax, eax
0xa4fd:	call	0x2740


0xa502:	lea	rsi, [rip + 0x9517]
0xa509:	mov	edx, 5
0xa50e:	xor	edi, edi
0xa510:	call	0x2820


0x9a60:	lea	rsi, [rip + 0x9f69]
0x9a67:	mov	rbx, rax
0x9a6a:	xor	edi, edi
0x9a6c:	mov	edx, 5
0x9a71:	call	0x2820


0xa0b0:	lea	rsi, [rip + 0x9999]
0xa0b7:	mov	rbx, rax
0xa0ba:	xor	edi, edi
0xa0bc:	mov	edx, 5
0xa0c1:	call	0x2820


0x9ed2:	cmp	rax, -1
0x9ed6:	mov	r14, rax
0x9ed9:	je	0xa547


0xa547:	cmp	byte ptr [rsp + 0x289], 0
0xa54f:	je	0x8ccb


0x9edf:	movzx	ebx, byte ptr [rsp + 0x289]
0x9ee7:	test	bl, bl
0x9ee9:	je	0x9d9b


0xa555:	mov	rdi, qword ptr [rsp + 0x18]
0xa55a:	lea	rdx, [rsp + 0x300]
0xa562:	mov	rsi, r13
0xa565:	call	0x66e0


0x9eef:	mov	rcx, qword ptr [rsp + 0x228]
0x9ef7:	mov	rax, qword ptr [rsp + 0x218]
0x9eff:	lea	rsi, [rip + 0x9c7a]
0x9f06:	mov	rbx, qword ptr [rsp + 0x220]
0x9f0e:	xor	edi, edi
0x9f10:	mov	edx, 5
0x9f15:	mov	qword ptr [rsp + 0x38], rcx
0x9f1a:	mov	qword ptr [rsp + 0x30], rax
0x9f1f:	call	0x2820


0xa56a:	lea	rsi, [rip + 0x95cf]
0xa571:	mov	rbx, rax
0xa574:	xor	edi, edi
0xa576:	mov	edx, 5
0xa57b:	call	0x2820


0x9bbb:	cmp	rax, -1
0x9bbf:	mov	r14, rax
0x9bc2:	je	0x9a1a


0x9bc8:	cmp	byte ptr [rsp + 0x289], 0
0x9bd0:	je	0x9d7e


0x9bd6:	lea	rbp, [rsp + 0x300]
0x9bde:	mov	rdi, qword ptr [rsp + 0x18]
0x9be3:	mov	rsi, r13
0x9be6:	mov	rdx, rbp
0x9be9:	call	0x66e0


0x9bee:	lea	rsi, [rsp + 0x3e0]
0x9bf6:	mov	rdi, r13
0x9bf9:	mov	rbp, rax
0x9bfc:	call	0x67a0


0x9c01:	lea	rsi, [rip + 0x970d]
0x9c08:	mov	r12, rax
0x9c0b:	mov	edx, 5
0x9c10:	xor	edi, edi
0x9c12:	call	0x2820


0x9943:	cmp	dword ptr [rsp + 0x88], 0
0x994b:	mov	r14, rax
0x994e:	mov	rdx, qword ptr [rsp + 0x20]
0x9953:	js	0xa4a4


0xa4a4:	mov	rdi, rdx
0xa4a7:	call	0xd5b0


0x9959:	mov	rsi, qword ptr [rsp + 0x18]
0x995e:	lea	rdi, [rsp + 0xb0]
0x9966:	mov	qword ptr [rsp + 0x20], rdx
0x996b:	call	0x6400


0x9970:	mov	rdx, qword ptr [rsp + 0x20]
0x9975:	mov	ebp, eax
0x9977:	mov	rdi, rdx
0x997a:	call	0xd5b0


0x9ba1:	jmp	0x9b28


0x9c17:	mov	rdx, rbp
0x9c1a:	mov	rdi, rax
0x9c1d:	mov	rsi, r12
0x9c20:	xor	eax, eax
0x9c22:	call	0x61f0


0xa580:	mov	rsi, rbx
0xa583:	mov	rdi, rax
0xa586:	xor	eax, eax
0xa588:	call	0x61f0


0xa58d:	jmp	0x8ccb


0x9f24:	mov	rcx, qword ptr [rsp + 0x38]
0x9f29:	mov	rsi, qword ptr [rsp + 0x30]
0x9f2e:	mov	rdx, rbx
0x9f31:	mov	rdi, rax
0x9f34:	xor	eax, eax
0x9f36:	call	0x61f0


0x9f3b:	mov	rdi, qword ptr [rsp + 0x18]
0x9f40:	lea	rdx, [rsp + 0x300]
0x9f48:	mov	rsi, r13
0x9f4b:	call	0x66e0


0x9f50:	lea	rsi, [rip + 0x942a]
0x9f57:	xor	edi, edi
0x9f59:	mov	rbx, rax
0x9f5c:	mov	edx, 5
0x9f61:	call	0x2820


0x9f66:	mov	rsi, rbx
0x9f69:	mov	rdi, rax
0x9f6c:	xor	eax, eax
0x9f6e:	call	0x61f0


0x9f73:	mov	eax, dword ptr [rsp + 0xd0]
0x9f7a:	cmp	eax, -1
0x9f7d:	je	0x9fa5


0x9fa5:	cmp	qword ptr [rsp + 0x228], 0
0x9fae:	jne	0xa082


0x9f7f:	cmp	eax, dword ptr [rsp + 0x90]
0x9f86:	je	0x9fa5


0x9fb4:	cmp	ebp, dword ptr [rsp + 0x7c]
0x9fb8:	jne	0x9fd7


0xa082:	movzx	ebx, byte ptr [rsp + 0x289]
0xa08a:	jmp	0x9d9b


0x9f88:	lea	rsi, [rip + 0x9c31]
0x9f8f:	xor	edi, edi
0x9f91:	mov	edx, 5
0x9f96:	call	0x2820


0x9fba:	cmp	qword ptr [rsp + 0x220], 0
0x9fc3:	jne	0xa082


0x9fd7:	lea	rsi, [rip + 0x9c22]
0x9fde:	mov	edx, 5
0x9fe3:	xor	edi, edi
0x9fe5:	call	0x2820


0x9fc9:	cmp	r12d, dword ptr [rsp + 0x80]
0x9fd1:	je	0xa082


0x9fea:	mov	rdi, rax
0x9fed:	xor	eax, eax
0x9fef:	call	0x61f0


0x9ff4:	lea	r8, [rsp + 0x2d3]
0x9ffc:	mov	edi, dword ptr [rsp + 0x20]
0xa000:	mov	rsi, r8
0xa003:	mov	qword ptr [rsp + 0x30], r8
0xa008:	call	0x2b70


0xa00d:	lea	rsi, [rip + 0x9c2c]
0xa014:	mov	edx, 5
0xa019:	xor	edi, edi
0xa01b:	mov	rbx, rax
0xa01e:	call	0x2820


0xa023:	lea	edx, [r12 + 1]
0xa028:	mov	ecx, ebp
0xa02a:	mov	rsi, rbx
0xa02d:	mov	rdi, rax
0xa030:	xor	eax, eax
0xa032:	call	0x61f0


0xa037:	mov	r8, qword ptr [rsp + 0x30]
0xa03c:	mov	eax, dword ptr [rsp + 0x80]
0xa043:	mov	edi, dword ptr [rsp + 0x84]
0xa04a:	mov	r12d, dword ptr [rsp + 0x7c]
0xa04f:	mov	rsi, r8
0xa052:	lea	ebx, [rax + 1]
0xa055:	call	0x2b70


0xa05a:	lea	rsi, [rip + 0x9c07]
0xa061:	mov	rbp, rax
0xa064:	mov	edx, 5
0xa069:	xor	edi, edi
0xa06b:	call	0x2820


0xa070:	mov	ecx, r12d
0xa073:	mov	rdi, rax
0xa076:	mov	edx, ebx
0xa078:	mov	rsi, rbp
0xa07b:	xor	eax, eax
0xa07d:	call	0x61f0


0x9f9b:	mov	rdi, rax
0x9f9e:	xor	eax, eax
0x9fa0:	call	0x61f0


0xa0c6:	mov	rsi, rbx
0xa0c9:	mov	rdi, rax
0xa0cc:	xor	eax, eax
0xa0ce:	call	0x61f0


0xa0d3:	jmp	0x9c5d


0x9c5d:	mov	rdi, qword ptr [rsp + 0x18]
0x9c62:	mov	rdx, rbp
0x9c65:	mov	rsi, r13
0x9c68:	call	0x66e0


0x9a76:	mov	r8, r12
0x9a79:	mov	rdi, rax
0x9a7c:	mov	ecx, r14d
0x9a7f:	mov	rdx, rbp
0x9a82:	mov	rsi, rbx
0x9a85:	xor	eax, eax
0x9a87:	call	0x61f0


0x9a8c:	jmp	0x8ccb


0xa515:	mov	rsi, rbp
0xa518:	mov	rdi, rax
0xa51b:	xor	eax, eax
0xa51d:	call	0x61f0


0xa522:	pop	rax
0xa523:	pop	rdx
0xa524:	cmp	qword ptr [rsp + 0x260], 0
0xa52d:	je	0x9c5d


0xa533:	cmp	qword ptr [rsp + 0x258], 0
0xa53c:	jne	0xa0a0


0xa542:	jmp	0x9c5d


0xa0a0:	lea	rsi, [rsp + 0x3e0]
0xa0a8:	mov	rdi, r13
0xa0ab:	call	0x67a0


0x9c83:	mov	rsi, rbx
0x9c86:	mov	rdi, rax
0x9c89:	xor	eax, eax
0x9c8b:	call	0x61f0


0x9c90:	mov	rax, qword ptr [rsp + 0x218]
0x9c98:	mov	rdx, qword ptr [rsp + 0x220]
0x9ca0:	movzx	ebx, byte ptr [rsp + 0x289]
0x9ca8:	or	rdx, rax
0x9cab:	mov	rsi, rdx
0x9cae:	or	rsi, qword ptr [rsp + 0x228]
0x9cb6:	je	0x9d9b


0x9cbc:	test	bl, bl
0x9cbe:	je	0x9e05


0x9cc4:	test	rdx, rdx
0x9cc7:	je	0xa5b9


0xa5b9:	cmp	dword ptr [rsp + 0x78], 0xc
0xa5be:	je	0x9d00


0x9ccd:	cmp	dword ptr [rsp + 0x7c], 0xf
0x9cd2:	je	0x9cf1


0x9d00:	movsxd	rdx, dword ptr [rsp + 0x84]
0x9d08:	xor	eax, eax
0x9d0a:	mov	rcx, rdx
0x9d0d:	add	rcx, qword ptr [rsp + 0x218]
0x9d15:	movsxd	rdx, ecx
0x9d18:	seto	al
0x9d1b:	mov	dword ptr [rsp + 0x20], ecx
0x9d1f:	cmp	rcx, rdx
0x9d22:	mov	edx, 1
0x9d27:	cmovne	eax, edx
0x9d2a:	test	eax, eax
0x9d2c:	je	0x9e30


0xa5c4:	lea	rsi, [rip + 0x952d]
0xa5cb:	xor	edi, edi
0xa5cd:	mov	edx, 5
0xa5d2:	call	0x2820


0x9cf1:	cmp	qword ptr [rsp + 0x228], 0
0x9cfa:	jne	0xa5b9


0x9cd4:	lea	rsi, [rip + 0x9db5]
0x9cdb:	xor	edi, edi
0x9cdd:	mov	edx, 5
0x9ce2:	call	0x2820


0x9ce7:	mov	rdi, rax
0x9cea:	xor	eax, eax
0x9cec:	call	0x61f0


0xa5d7:	mov	rdi, rax
0xa5da:	xor	eax, eax
0xa5dc:	call	0x61f0


0xa5e1:	jmp	0x9d00


0xa48f:	mov	rdx, r14
0xa492:	mov	rdi, rax
0xa495:	mov	rsi, rbx
0xa498:	xor	eax, eax
0xa49a:	call	0x61f0


0xa49f:	jmp	0xa249


0x9056:	mov	rsi, qword ptr [rsp + 0x10]
0x905b:	mov	rdi, rax
0x905e:	xor	eax, eax
0x9060:	call	0x61f0


0x9065:	mov	r14, qword ptr [rsp + 0x28]
0x906a:	lea	rsi, [rip + 0xad5f]
0x9071:	xor	edi, edi
0x9073:	mov	edx, 5
0x9078:	mov	rbx, qword ptr [r14]
0x907b:	mov	rbp, qword ptr [r14 + 8]
0x907f:	call	0x2820


0x9084:	mov	rdi, rax
0x9087:	xor	eax, eax
0x9089:	mov	rsi, rbx
0x908c:	lea	rbx, [rsp + 0x130]
0x9094:	mov	edx, ebp
0x9096:	call	0x61f0


0x909b:	mov	rsi, rbx
0x909e:	mov	rdi, r14
0x90a1:	call	0x28c0


0x90a6:	test	rax, rax
0x90a9:	je	0x90e0


0x90e0:	lea	rbx, [rsp + 0x170]
0x90e8:	mov	rsi, qword ptr [rsp + 0x28]
0x90ed:	mov	rdi, r15
0x90f0:	mov	rdx, rbx
0x90f3:	call	0xd5c0


0x90ab:	lea	rdx, [rsp + 0x300]
0x90b3:	mov	rdi, rbx
0x90b6:	xor	esi, esi
0x90b8:	call	0x66e0


0x90bd:	lea	rsi, [rip + 0xa325]
0x90c4:	mov	rbx, rax
0x90c7:	xor	edi, edi
0x90c9:	mov	edx, 5
0x90ce:	call	0x2820


0x90d3:	mov	rsi, rbx
0x90d6:	mov	rdi, rax
0x90d9:	xor	eax, eax
0x90db:	call	0x61f0


0x9229:	mov	rdi, rax
0x922c:	xor	eax, eax
0x922e:	call	0x61f0


0x9233:	jmp	0x9065


0xa323:	mov	r10d, dword ptr [rsp + 0x18]
0xa328:	mov	rcx, r14
0xa32b:	mov	rdi, rax
0xa32e:	mov	rdx, r13
0xa331:	xor	eax, eax
0xa333:	mov	rsi, rbp
0xa336:	mov	r8d, r10d
0xa339:	call	0x61f0


0xa33e:	lea	rsi, [rip + 0x99fb]
0xa345:	xor	edi, edi
0xa347:	mov	edx, 5
0xa34c:	call	0x2820


0xa351:	mov	rsi, rbx
0xa354:	mov	rdi, rax
0xa357:	xor	eax, eax
0xa359:	call	0x61f0


0xa35e:	cmp	dword ptr [rsp + 0x90], -1
0xa366:	je	0xa3af


0xa3af:	movzx	r12d, byte ptr [rsp + 0x289]
0xa3b8:	jmp	0x9002


0xa368:	mov	rsi, qword ptr [rsp + 0x28]
0xa36d:	lea	rdx, [rsp + 0x170]
0xa375:	mov	rdi, r15
0xa378:	call	0xd5c0


0x9d53:	lea	rsi, [rip + 0x9616]
0x9d5a:	mov	rdi, rax
0x9d5d:	mov	edx, 0x877
0x9d62:	xor	eax, eax
0x9d64:	call	0x61f0


0x9d69:	jmp	0x8ccb


0x9def:	mov	esi, ebp
0x9df1:	mov	rdi, rax
0x9df4:	xor	eax, eax
0x9df6:	call	0x61f0


0x9dfb:	jmp	0x8ccb


0xa3f8:	mov	rsi, rbp
0xa3fb:	mov	rdi, rax
0xa3fe:	xor	eax, eax
0xa400:	call	0x61f0


0xa405:	jmp	0x8ccb


0x9644:	mov	rdi, rax
0x9647:	xor	eax, eax
0x9649:	call	0x61f0


0x964e:	lea	rdi, [rsp + 0xb0]
0x9656:	mov	rdx, rbx
0x9659:	mov	rsi, r13
0x965c:	call	0x66e0


0x9661:	lea	rsi, [rip + 0x9c2a]
0x9668:	mov	r12, rax
0x966b:	mov	edx, 5
0x9670:	xor	edi, edi
0x9672:	call	0x2820


0x9677:	mov	rsi, r12
0x967a:	mov	rdi, rax
0x967d:	xor	eax, eax
0x967f:	call	0x61f0


0x9684:	mov	rdi, qword ptr [rsp + 0x18]
0x9689:	mov	rdx, rbx
0x968c:	mov	rsi, r13
0x968f:	call	0x66e0


0x9694:	lea	rsi, [rip + 0x9c15]
0x969b:	mov	r12, rax
0x969e:	mov	edx, 5
0x96a3:	xor	edi, edi
0x96a5:	call	0x2820


0x96aa:	mov	rsi, r12
0x96ad:	mov	rdi, rax
0x96b0:	xor	eax, eax
0x96b2:	call	0x61f0


0x96b7:	lea	rsi, [rip + 0x9bf1]
0x96be:	mov	r12d, 1
0x96c4:	mov	rax, rsi
0x96c7:	mov	r11d, dword ptr [rsp + 0x40]
0x96cc:	cmp	dword ptr [rsp + 0x38], r11d
0x96d1:	lea	rcx, [rip + 0x9bd7]
0x96d8:	lea	rdx, [rip + 0x9aa0]
0x96df:	mov	r11d, dword ptr [rsp + 0x20]
0x96e4:	lea	r9, [rip + 0x9a92]
0x96eb:	mov	r8, rcx
0x96ee:	mov	rdi, rcx
0x96f1:	cmovne	r8, rdx
0x96f5:	cmp	dword ptr [rsp + 0x10], r11d
0x96fa:	mov	r11d, dword ptr [rsp + 0x28]
0x96ff:	cmovne	rdi, rdx
0x9703:	cmp	r14d, ebp
0x9706:	cmove	rdx, rcx
0x970a:	cmp	dword ptr [rsp + 0x44], r11d
0x970f:	cmove	r9, rcx
0x9713:	sub	rsp, 8
0x9717:	mov	ecx, 0x64
0x971c:	push	rsi
0x971d:	push	rax
0x971e:	mov	esi, 0x64
0x9723:	push	r8
0x9725:	lea	r8, [rip + 0xa1dc]
0x972c:	push	rdi
0x972d:	push	rdx
0x972e:	mov	rdi, rbx
0x9731:	mov	edx, 1
0x9736:	xor	eax, eax
0x9738:	call	0x2740


0x973d:	add	rsp, 0x30
0x9741:	mov	eax, 0x34
0x9746:	jmp	0x9752


0x9752:	test	eax, eax
0x9754:	mov	edx, eax
0x9756:	jne	0x9748


0x9758:	movsxd	rax, edx
0x975b:	lea	rdi, [rip + 0x9baf]
0x9762:	mov	rsi, rbx
0x9765:	mov	byte ptr [rsp + rax + 0x3e0], 0
0x976d:	xor	eax, eax
0x976f:	call	0x61f0


0x9748:	sub	rax, 1
0x974c:	cmp	byte ptr [rbx + rax], 0x20
0x9750:	jne	0x9758


0x9774:	lea	rsi, [rip + 0x9b53]
0x977b:	xor	edi, edi
0x977d:	mov	edx, 5
0x9782:	call	0x2820


0x9787:	mov	rdi, rax
0x978a:	xor	eax, eax
0x978c:	call	0x61f0


0x9791:	test	r12d, r12d
0x9794:	je	0x97b3


0x97b3:	mov	ebx, dword ptr [rsp + 0x20]
0x97b7:	cmp	dword ptr [rsp + 0x10], ebx
0x97bb:	je	0x97df


0x9796:	lea	rsi, [rip + 0xa1ab]
0x979d:	xor	edi, edi
0x979f:	mov	edx, 5
0x97a4:	call	0x2820


0x97df:	lea	rsi, [rip + 0xa1c2]
0x97e6:	mov	edx, 5
0x97eb:	xor	edi, edi
0x97ed:	call	0x2820


0x97bd:	cmp	r14d, ebp
0x97c0:	je	0x97df


0x97c2:	lea	rsi, [rip + 0xa1b7]
0x97c9:	xor	edi, edi
0x97cb:	mov	edx, 5
0x97d0:	call	0x2820


0x97d5:	mov	rdi, rax
0x97d8:	xor	eax, eax
0x97da:	call	0x61f0


0x97f2:	mov	rdi, rax
0x97f5:	xor	eax, eax
0x97f7:	call	0x61f0


0x97fc:	cmp	qword ptr [rsp + 0x30], 0
0x9802:	mov	edx, 5
0x9807:	je	0xa5e6


0xa5e6:	lea	rsi, [rip + 0x8d0c]
0xa5ed:	xor	edi, edi
0xa5ef:	call	0x2820


0x980d:	lea	rsi, [rip + 0x9ad2]
0x9814:	xor	edi, edi
0x9816:	call	0x2820


0x981b:	lea	rdi, [rip + 0x9ae8]
0x9822:	mov	rsi, rax
0x9825:	xor	eax, eax
0x9827:	call	0x61f0


0x982c:	jmp	0x8ccb


0xa5f4:	jmp	0x981b


0x97a9:	mov	rdi, rax
0x97ac:	xor	eax, eax
0x97ae:	call	0x61f0


0xa193:	mov	rdi, rax
0xa196:	xor	eax, eax
0xa198:	call	0x61f0


0xa19d:	lea	rdi, [rsp + 0xb0]
0xa1a5:	mov	rsi, r13
0xa1a8:	mov	rdx, rbx
0xa1ab:	call	0x66e0


0xa1b0:	lea	rsi, [rip + 0x90db]
0xa1b7:	mov	edx, 5
0xa1bc:	xor	edi, edi
0xa1be:	mov	qword ptr [rsp + 0x48], rax
0xa1c3:	call	0x2820


0xa1c8:	mov	rsi, qword ptr [rsp + 0x48]
0xa1cd:	mov	rdi, rax
0xa1d0:	xor	eax, eax
0xa1d2:	call	0x61f0


0xa1d7:	mov	rdi, qword ptr [rsp + 0x18]
0xa1dc:	mov	rsi, r13
0xa1df:	mov	rdx, rbx
0xa1e2:	call	0x66e0


0xa1e7:	lea	rsi, [rip + 0x90c2]
0xa1ee:	mov	edx, 5
0xa1f3:	xor	edi, edi
0xa1f5:	mov	r13, rax
0xa1f8:	call	0x2820


0xa1fd:	mov	rsi, r13
0xa200:	mov	rdi, rax
0xa203:	xor	eax, eax
0xa205:	call	0x61f0


0xa20a:	mov	r10d, dword ptr [rsp + 0x50]
0xa20f:	mov	r9d, dword ptr [rsp + 0x54]
0xa214:	lea	rdx, [rip + 0x9094]
0xa21b:	mov	r8d, dword ptr [rsp + 0x58]
0xa220:	mov	ecx, dword ptr [rsp + 0x5c]
0xa224:	lea	rax, [rip + 0x8f54]
0xa22b:	mov	rsi, rdx
0xa22e:	cmp	r10d, r9d
0xa231:	cmovne	rsi, rax
0xa235:	cmp	r8d, ecx
0xa238:	cmove	rax, rdx
0xa23c:	jmp	0x96c7


0x96c7:	mov	r11d, dword ptr [rsp + 0x40]
0x96cc:	cmp	dword ptr [rsp + 0x38], r11d
0x96d1:	lea	rcx, [rip + 0x9bd7]
0x96d8:	lea	rdx, [rip + 0x9aa0]
0x96df:	mov	r11d, dword ptr [rsp + 0x20]
0x96e4:	lea	r9, [rip + 0x9a92]
0x96eb:	mov	r8, rcx
0x96ee:	mov	rdi, rcx
0x96f1:	cmovne	r8, rdx
0x96f5:	cmp	dword ptr [rsp + 0x10], r11d
0x96fa:	mov	r11d, dword ptr [rsp + 0x28]
0x96ff:	cmovne	rdi, rdx
0x9703:	cmp	r14d, ebp
0x9706:	cmove	rdx, rcx
0x970a:	cmp	dword ptr [rsp + 0x44], r11d
0x970f:	cmove	r9, rcx
0x9713:	sub	rsp, 8
0x9717:	mov	ecx, 0x64
0x971c:	push	rsi
0x971d:	push	rax
0x971e:	mov	esi, 0x64
0x9723:	push	r8
0x9725:	lea	r8, [rip + 0xa1dc]
0x972c:	push	rdi
0x972d:	push	rdx
0x972e:	mov	rdi, rbx
0x9731:	mov	edx, 1
0x9736:	xor	eax, eax
0x9738:	call	0x2740


0xa126:	mov	rdi, rax
0xa129:	mov	rsi, rbp
0xa12c:	xor	eax, eax
0xa12e:	call	0x61f0


0xa133:	jmp	0x9b28


0xa5b4:	jmp	0xa126


0xa434:	mov	rdx, rbx
0xa437:	mov	rdi, rax
0xa43a:	mov	rsi, rbp
0xa43d:	xor	eax, eax
0xa43f:	call	0x61f0


0xa444:	jmp	0x8ccb


0x93a0:	mov	rdi, rax
0x93a3:	xor	eax, eax
0x93a5:	call	0x61f0


0x93aa:	jmp	0x8ccb


0x9370:	mov	rsi, rbp
0x9373:	mov	rdi, rax
0x9376:	xor	eax, eax
0x9378:	call	0x61f0


0x9aab:	mov	rsi, rbp
0x9aae:	mov	rdi, rax
0x9ab1:	mov	rdx, rbx
0x9ab4:	xor	eax, eax
0x9ab6:	mov	rbp, rbx
0x9ab9:	call	0x61f0


0x9abe:	jmp	0x9319


0x8d4f:	mov	rdi, rax
0x8d52:	mov	rsi, rbx
0x8d55:	xor	eax, eax
0x8d57:	xor	r12d, r12d
0x8d5a:	call	0x61f0


0x8d5f:	jmp	0x8cce


0x9166:	mov	rdi, rax
0x9169:	jmp	0x8d52


0x8d52:	mov	rsi, rbx
0x8d55:	xor	eax, eax
0x8d57:	xor	r12d, r12d
0x8d5a:	call	0x61f0


0x8ecb:	mov	rdi, rax
0x8ece:	xor	eax, eax
0x8ed0:	call	0x61f0


0x8ed5:	cmp	byte ptr [rsp + 0x250], 0
0x8edd:	mov	edx, 5
0x8ee2:	lea	rsi, [rip + 0xa2c6]
0x8ee9:	jne	0x8f50


0x8eeb:	cmp	qword ptr [rsp + 0x280], 0
0x8ef4:	mov	edx, 5
0x8ef9:	lea	rsi, [rip + 0xa2c8]
0x8f00:	jne	0x8f50


0x8f50:	xor	edi, edi
0x8f52:	call	0x2820


0x8f02:	mov	rbx, qword ptr [rsp + 0x10]
0x8f07:	test	rbx, rbx
0x8f0a:	je	0x8f44


0x8f44:	lea	rsi, [rip + 0xa2c6]
0x8f4b:	mov	edx, 5
0x8f50:	xor	edi, edi
0x8f52:	call	0x2820


0x8f0c:	cmp	qword ptr [rsp], r15
0x8f10:	je	0x93af


0x93af:	mov	rsi, qword ptr [rsp + 0x10]
0x93b4:	lea	rdi, [rip + 0x83ad]
0x93bb:	mov	ecx, 5
0x93c0:	mov	edx, 5
0x93c5:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x8f16:	lea	rsi, [rip + 0xa2c3]
0x8f1d:	mov	edx, 5
0x8f22:	xor	edi, edi
0x8f24:	call	0x2820


0x93c5:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x93c7:	lea	rsi, [rip + 0xa32a]
0x93ce:	seta	al
0x93d1:	sbb	al, 0
0x93d3:	test	al, al
0x93d5:	je	0x8f50


0x93db:	lea	rsi, [rip + 0x9e15]
0x93e2:	xor	edi, edi
0x93e4:	call	0x2820


0x93e9:	mov	rcx, qword ptr [rsp + 0x10]
0x93ee:	jmp	0x8f2c


0x8f2c:	mov	rdi, qword ptr [rip + 0x20f1ad]
0x8f33:	mov	rdx, rax
0x8f36:	mov	esi, 1
0x8f3b:	xor	eax, eax
0x8f3d:	call	0x2b00


0x8f42:	jmp	0x8f6d


0x8f6d:	cmp	qword ptr [rsp + 0x268], 0
0x8f76:	mov	rax, qword ptr [rsp + 0x280]
0x8f7e:	je	0x8fc0


0x8fc0:	test	rax, rax
0x8fc3:	jne	0x9286


0x8f80:	test	rax, rax
0x8f83:	jne	0x9286


0x8fc9:	mov	rsi, qword ptr [rip + 0x20f110]
0x8fd0:	mov	edi, 0xa
0x8fd5:	call	0x2900


0x9286:	mov	edi, dword ptr [rsp + 0x1c8]
0x928d:	lea	rsi, [rsp + 0x2e0]
0x9295:	call	0x60f0


0x8f89:	mov	r8d, dword ptr [rsp + 0x1c4]
0x8f91:	mov	rsi, qword ptr [rip + 0x20f148]
0x8f98:	test	r8d, r8d
0x8f9b:	jle	0x8fd0


0x8fd0:	mov	edi, 0xa
0x8fd5:	call	0x2900


0x8f9d:	lea	rdi, [rip + 0xa282]
0x8fa4:	mov	rcx, rsi
0x8fa7:	mov	edx, 5
0x8fac:	mov	esi, 1
0x8fb1:	call	0x2af0


0x8fb6:	mov	rax, qword ptr [rsp + 0x280]
0x8fbe:	nop	
0x8fc0:	test	rax, rax
0x8fc3:	jne	0x9286


0x929a:	mov	rdi, qword ptr [rip + 0x20ee3f]
0x92a1:	lea	rdx, [rip + 0x9f78]
0x92a8:	mov	rcx, rax
0x92ab:	mov	esi, 1
0x92b0:	xor	eax, eax
0x92b2:	call	0x2b00


0x92b7:	mov	rsi, qword ptr [rip + 0x20ee22]
0x92be:	jmp	0x8fd0


0x8fda:	cmp	byte ptr [rsp + 0x250], 0
0x8fe2:	movzx	r12d, byte ptr [rsp + 0x289]
0x8feb:	je	0x9178


0x9178:	mov	rsi, qword ptr [rsp + 0x278]
0x9180:	mov	rcx, qword ptr [rsp + 0x258]
0x9188:	mov	rdx, qword ptr [rsp + 0x280]
0x9190:	add	rdx, qword ptr [rsp + 0x268]
0x9198:	mov	rax, rsi
0x919b:	or	rax, rcx
0x919e:	or	rax, qword ptr [rsp + 0x260]
0x91a6:	or	rax, qword ptr [rsp + 0x270]
0x91ae:	or	rax, rdx
0x91b1:	cmp	rax, 1
0x91b5:	jle	0x92f9


0x8ff1:	mov	rax, qword ptr [rsp + 0x28]
0x8ff6:	movdqu	xmm0, xmmword ptr [rsp + 0x208]
0x8fff:	movups	xmmword ptr [rax], xmm0
0x9002:	test	r12b, r12b
0x9005:	je	0x92c3


0x91bb:	test	r12b, r12b
0x91be:	je	0x8ccb


0x91c4:	cmp	rsi, 1
0x91c8:	jg	0x926b


0x91ce:	cmp	rcx, 1
0x91d2:	jg	0x9258


0x926b:	lea	rdi, [rip + 0xa4ae]
0x9272:	xor	eax, eax
0x9274:	call	0x61f0


0x91d8:	cmp	qword ptr [rsp + 0x260], 1
0x91e1:	jg	0x9248


0x9258:	lea	rdi, [rip + 0xa4e9]
0x925f:	xor	eax, eax
0x9261:	call	0x61f0


0x91e3:	cmp	qword ptr [rsp + 0x270], 1
0x91ec:	jg	0x9238


0x9248:	lea	rdi, [rip + 0xa521]
0x924f:	xor	eax, eax
0x9251:	call	0x61f0


0x91ee:	mov	rax, qword ptr [rsp + 0x280]
0x91f6:	add	rax, qword ptr [rsp + 0x268]
0x91fe:	cmp	rax, 1
0x9202:	jle	0x8ccb


0x9238:	lea	rdi, [rip + 0xa559]
0x923f:	xor	eax, eax
0x9241:	call	0x61f0


0x9208:	lea	rdi, [rip + 0xa5b9]
0x920f:	xor	eax, eax
0x9211:	call	0x61f0


0x9216:	jmp	0x8ccb


0x9246:	jmp	0x91ee


0x9256:	jmp	0x91e3


0x9266:	jmp	0x91d8


0x9279:	mov	rcx, qword ptr [rsp + 0x258]
0x9281:	jmp	0x91ce


0x8f29:	mov	rcx, rbx
0x8f2c:	mov	rdi, qword ptr [rip + 0x20f1ad]
0x8f33:	mov	rdx, rax
0x8f36:	mov	esi, 1
0x8f3b:	xor	eax, eax
0x8f3d:	call	0x2b00


0x8f57:	mov	rdi, qword ptr [rip + 0x20f182]
0x8f5e:	mov	rdx, rax
0x8f61:	mov	esi, 1
0x8f66:	xor	eax, eax
0x8f68:	call	0x2b00


0x997f:	test	bpl, bpl
0x9982:	je	0x957b


0xa4ac:	jmp	0x957b


0xa37d:	test	rax, rax
0xa380:	je	0xa3af


0xa382:	mov	eax, dword ptr [rsp + 0x190]
0xa389:	cmp	dword ptr [rsp + 0x90], eax
0xa390:	je	0xa3af


0xa392:	lea	rsi, [rip + 0x99cf]
0xa399:	xor	edi, edi
0xa39b:	mov	edx, 5
0xa3a0:	call	0x2820


0xa3a5:	mov	rdi, rax
0xa3a8:	xor	eax, eax
0xa3aa:	call	0x61f0


0x90f8:	test	rax, rax
0x90fb:	je	0x8cce


0x9101:	mov	edi, dword ptr [rsp + 0x198]
0x9108:	lea	rsi, [rsp + 0x2e0]
0x9110:	call	0x60f0


0x9115:	lea	rdx, [rsp + 0x300]
0x911d:	xor	esi, esi
0x911f:	mov	rdi, rbx
0x9122:	mov	rbp, rax
0x9125:	call	0x66e0


0x912a:	lea	rsi, [rip + 0xa2c9]
0x9131:	mov	rbx, rax
0x9134:	xor	edi, edi
0x9136:	mov	edx, 5
0x913b:	call	0x2820


0x9140:	mov	rdx, rbp
0x9143:	mov	rdi, rax
0x9146:	mov	rsi, rbx
0x9149:	xor	eax, eax
0x914b:	call	0x61f0


0x9150:	jmp	0x8cce


0x8be6:	test	rax, rax
0x8be9:	je	0x8c0c


0x8c0c:	add	r14d, 0x76a700
0x8c13:	cmp	r14d, 0x1da9c00
0x8c1a:	jne	0x8bc8


0x8beb:	mov	rax, qword ptr [rsp + 0x1a0]
0x8bf3:	test	rax, rax
0x8bf6:	je	0x8c0c


0x8bc8:	movsxd	rax, r14d
0x8bcb:	add	rax, rbx
0x8bce:	jo	0x8c1c


0x8bf8:	mov	edx, dword ptr [rsp + 0x190]
0x8bff:	cmp	edx, dword ptr [rsp + 0x2a4]
0x8c06:	jne	0x92ce


0x92ce:	mov	qword ptr [rsp + 0x2a8], rax
0x92d6:	mov	dword ptr [rsp + 0x2b0], 0x10d
0x92e1:	mov	dword ptr [rsp + 0x2b4], edx
0x92e8:	mov	qword ptr [rsp + 0x2b8], 0
0x92f4:	jmp	0x8c1c


0x89bf:	test	rax, rax
0x89c2:	je	0x8d90


0x8d90:	mov	qword ptr [rsp + 8], 0
0x8d99:	xor	r12d, r12d
0x8d9c:	jmp	0x8cdc


0x89c8:	mov	qword ptr [rsp + 8], 0
0x89d1:	cmp	byte ptr [r13], 0
0x89d6:	lea	rax, [rip + 0x8d8e]
0x89dd:	mov	qword ptr [rsp + 0x1e0], 0
0x89e9:	mov	dword ptr [rsp + 0x1cc], 2
0x89f4:	mov	qword ptr [rsp + 0x218], 0
0x8a00:	lea	r12, [rsp + 0x130]
0x8a08:	mov	qword ptr [rsp + 0x220], 0
0x8a14:	mov	qword ptr [rsp + 0x228], 0
0x8a20:	mov	r14d, 0x76a700
0x8a26:	mov	qword ptr [rsp + 0x230], 0
0x8a32:	mov	qword ptr [rsp + 0x238], 0
0x8a3e:	cmove	r13, rax
0x8a42:	movzx	eax, byte ptr [rsp + 0x20]
0x8a47:	mov	qword ptr [rsp + 0x240], 0
0x8a53:	mov	qword ptr [rsp + 0x1b0], r13
0x8a5b:	movsxd	r13, dword ptr [rsp + 0x18]
0x8a60:	mov	dword ptr [rsp + 0x248], 0
0x8a6b:	mov	byte ptr [rsp + 0x250], 0
0x8a73:	mov	byte ptr [rsp + 0x289], al
0x8a7a:	movsxd	rax, dword ptr [rsp + 0x104]
0x8a82:	mov	qword ptr [rsp + 0x210], r13
0x8a8a:	and	byte ptr [rsp + 0x289], 1
0x8a92:	lea	r13, [rsp + 0x170]
0x8a9a:	add	rax, 0x76c
0x8aa0:	mov	qword ptr [rsp + 0x1d8], rax
0x8aa8:	mov	eax, dword ptr [rsp + 0x100]
0x8aaf:	add	eax, 1
0x8ab2:	cdqe	
0x8ab4:	mov	qword ptr [rsp + 0x1e8], rax
0x8abc:	movsxd	rax, dword ptr [rsp + 0xfc]
0x8ac4:	mov	qword ptr [rsp + 0x1f0], rax
0x8acc:	movsxd	rax, dword ptr [rsp + 0xf8]
0x8ad4:	mov	qword ptr [rsp + 0x1f8], rax
0x8adc:	movsxd	rax, dword ptr [rsp + 0xf4]
0x8ae4:	mov	qword ptr [rsp + 0x200], rax
0x8aec:	movsxd	rax, dword ptr [rsp + 0xf0]
0x8af4:	mov	qword ptr [rsp + 0x208], rax
0x8afc:	mov	eax, dword ptr [rsp + 0x110]
0x8b03:	mov	dword ptr [rsp + 0x90], eax
0x8b0a:	mov	byte ptr [rsp + 0x251], 0
0x8b12:	mov	rdx, qword ptr [rsp + 0x120]
0x8b1a:	mov	qword ptr [rsp + 0x258], 0
0x8b26:	mov	qword ptr [rsp + 0x260], 0
0x8b32:	mov	qword ptr [rsp + 0x278], 0
0x8b3e:	mov	qword ptr [rsp + 0x268], 0
0x8b4a:	mov	qword ptr [rsp + 0x270], 0


0x351a:	test	rax, rax
0x351d:	je	0x3590


0x3590:	mov	rdi, qword ptr [rsp]
0x3594:	lea	rsi, [rsp + 0x50]
0x3599:	call	0x5ed0


0x351f:	lea	rax, [rip + 0xf82a]
0x3526:	cmp	r12, rax
0x3529:	je	0x35d8


0x35d8:	lea	rsi, [rip + 0xff9b]
0x35df:	mov	edi, 2
0x35e4:	call	0x2a50


0x352f:	mov	r8d, dword ptr [rsp + 8]
0x3534:	mov	rdi, qword ptr [rip + 0x214b6d]
0x353b:	mov	rcx, rbp
0x353e:	mov	rdx, rbx
0x3541:	mov	rsi, r12
0x3544:	call	0x5e20


0x3549:	mov	rdi, qword ptr [rip + 0x214b58]
0x3550:	mov	rax, qword ptr [rdi + 0x28]
0x3554:	cmp	rax, qword ptr [rdi + 0x30]
0x3558:	jae	0x3620


0x355e:	lea	rdx, [rax + 1]
0x3562:	mov	qword ptr [rdi + 0x28], rdx
0x3566:	mov	byte ptr [rax], 0xa
0x3569:	mov	eax, 1
0x356e:	mov	rcx, qword ptr [rsp + 0x68]
0x3573:	xor	rcx, qword ptr fs:[0x28]
0x357c:	jne	0x3634


0x3620:	mov	esi, 0xa
0x3625:	call	0x28a0


0x3582:	add	rsp, 0x70
0x3586:	pop	rbx
0x3587:	pop	rbp
0x3588:	pop	r12
0x358a:	ret	


0x3634:	call	0x2850


0x28a0:	jmp	qword ptr [rip + 0x2155ba]




0x359e:	mov	rdi, rax
0x35a1:	call	0xc730


0xd8cc:	mov	ebx, dword ptr [rbp]
0xd8cf:	mov	rdi, rbp
0xd8d2:	mov	r12, rax
0xd8d5:	call	0xd090


0x35e9:	mov	r8d, dword ptr [rsp + 8]
0x35ee:	mov	rdi, qword ptr [rip + 0x214ab3]
0x35f5:	mov	rsi, r12
0x35f8:	mov	rcx, rbp
0x35fb:	mov	rdx, rbx
0x35fe:	call	0x5e20


0x3603:	lea	rsi, [rip + 0xfca5]
0x360a:	mov	edi, 2
0x360f:	call	0x2a50


0x3614:	jmp	0x3549


0x2c2a:	lea	rsi, [rip + 0xeb06]
0x2c31:	lea	rdi, [rip + 0xeabe]
0x2c38:	call	0x2810


0x2810:	jmp	qword ptr [rip + 0x215602]




0xd94b:	mov	rdx, rax
0xd94e:	mov	eax, 1
0xd953:	test	rdx, rdx
0xd956:	je	0xd975


0xd975:	add	rsp, 8
0xd979:	ret	


0xd958:	lea	rdi, [rip + 0x5c1b]
0xd95f:	mov	ecx, 2
0xd964:	mov	rsi, rdx
0xd967:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd967:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd969:	seta	cl
0xd96c:	sbb	cl, 0
0xd96f:	xor	eax, eax
0xd971:	test	cl, cl
0xd973:	jne	0xd980


0xd980:	lea	rdi, [rip + 0x7339]
0xd987:	mov	ecx, 6
0xd98c:	mov	rsi, rdx
0xd98f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd98f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xd991:	seta	al
0xd994:	sbb	al, 0
0xd996:	test	al, al
0xd998:	setne	al
0xd99b:	add	rsp, 8
0xd99f:	ret	


0xd1fc:	test	al, al
0xd1fe:	jne	0xd210


0xd200:	movzx	eax, byte ptr [r13]
0xd205:	mov	ebp, 1
0xd20a:	mov	dword ptr [rbx], eax
0xd20c:	nop	dword ptr [rax]
0xd210:	mov	rdx, qword ptr [rsp + 8]
0xd215:	xor	rdx, qword ptr fs:[0x28]
0xd21e:	mov	rax, rbp
0xd221:	jne	0xd22e


0xd9ae:	test	rax, rax
0xd9b1:	je	0xd9d0


0xd9d0:	lea	rax, [rip + 0x72ef]
0xd9d7:	add	rsp, 8
0xd9db:	ret	


0xd9b3:	cmp	byte ptr [rax], 0
0xd9b6:	lea	rdx, [rip + 0x7309]
0xd9bd:	cmove	rax, rdx
0xd9c1:	add	rsp, 8
0xd9c5:	ret	


0xaad0:	movzx	edx, byte ptr [rax]
0xaad3:	and	edx, 0xffffffdf
0xaad6:	cmp	dl, 0x55
0xaad9:	je	0xab50


0xab50:	movzx	edx, byte ptr [rax + 1]
0xab54:	and	edx, 0xffffffdf
0xab57:	cmp	dl, 0x54
0xab5a:	jne	0xaae0


0xaadb:	cmp	dl, 0x47
0xaade:	je	0xab00


0xab5c:	movzx	edx, byte ptr [rax + 2]
0xab60:	and	edx, 0xffffffdf
0xab63:	cmp	dl, 0x46
0xab66:	jne	0xaae0


0xaae0:	lea	rax, [rip + 0x869e]
0xaae7:	lea	rdx, [rip + 0x999d]
0xaaee:	cmp	ebx, 9
0xaaf1:	cmovne	rax, rdx
0xaaf5:	add	rsp, 8
0xaaf9:	pop	rbx
0xaafa:	pop	rbp
0xaafb:	ret	


0xab00:	movzx	edx, byte ptr [rax + 1]
0xab04:	and	edx, 0xffffffdf
0xab07:	cmp	dl, 0x42
0xab0a:	jne	0xaae0


0xab6c:	cmp	byte ptr [rax + 3], 0x2d
0xab70:	jne	0xaae0


0xab0c:	cmp	byte ptr [rax + 2], 0x31
0xab10:	jne	0xaae0


0xab76:	cmp	byte ptr [rax + 4], 0x38
0xab7a:	jne	0xaae0


0xab12:	cmp	byte ptr [rax + 3], 0x38
0xab16:	jne	0xaae0


0xab80:	cmp	byte ptr [rax + 5], 0
0xab84:	jne	0xaae0


0xab18:	cmp	byte ptr [rax + 4], 0x30
0xab1c:	jne	0xaae0


0xab8a:	cmp	byte ptr [rbp], 0x60
0xab8e:	lea	rax, [rip + 0x98e7]
0xab95:	lea	rdx, [rip + 0x98e4]
0xab9c:	cmovne	rax, rdx
0xaba0:	add	rsp, 8
0xaba4:	pop	rbx
0xaba5:	pop	rbp
0xaba6:	ret	


0xab1e:	cmp	byte ptr [rax + 5], 0x33
0xab22:	jne	0xaae0


0xab24:	cmp	byte ptr [rax + 6], 0x30
0xab28:	jne	0xaae0


0xab2a:	cmp	byte ptr [rax + 7], 0
0xab2e:	jne	0xaae0


0xab30:	cmp	byte ptr [rbp], 0x60
0xab34:	lea	rax, [rip + 0x9949]
0xab3b:	lea	rdx, [rip + 0x9946]
0xab42:	cmovne	rax, rdx
0xab46:	add	rsp, 8
0xab4a:	pop	rbx
0xab4b:	pop	rbp
0xab4c:	ret	


0x2c3d:	lea	rdi, [rip + 0xeab2]
0x2c44:	call	0x27f0


0x27f0:	jmp	qword ptr [rip + 0x215612]




0x362a:	mov	eax, 1
0x362f:	jmp	0x356e


0x356e:	mov	rcx, qword ptr [rsp + 0x68]
0x3573:	xor	rcx, qword ptr fs:[0x28]
0x357c:	jne	0x3634


0xd5f0:	test	rax, rax
0xd5f3:	je	0xd620


0xd620:	cmp	r12, 1
0xd624:	je	0xd62e


0xd5f5:	mov	rsi, r13
0xd5f8:	mov	rdi, rbx
0xd5fb:	call	0xd390


0xd626:	mov	rdi, r12
0xd629:	call	0xd2a0


0xd600:	test	al, al
0xd602:	je	0xd620


0xd604:	cmp	r12, 1
0xd608:	jne	0xd655


0xd60a:	add	rsp, 8
0xd60e:	mov	rax, r13
0xd611:	pop	rbx
0xd612:	pop	rbp
0xd613:	pop	r12
0xd615:	pop	r13
0xd617:	ret	


0xd655:	mov	rdi, r12
0xd658:	call	0xd2a0


0xd65d:	test	al, al
0xd65f:	jne	0xd60a


0xd661:	jmp	0xd62e


0xd5ad:	jmp	0xd54d


0xd2f5:	mov	r13d, 1
0xd2fb:	jmp	0xd2d3


0xd2d3:	mov	rdi, rbp
0xd2d6:	call	0xd270


0xbfcd:	mov	dword ptr [rbp], r12d
0xbfd1:	pop	rbx
0xbfd2:	pop	rbp
0xbfd3:	pop	r12
0xbfd5:	ret	


0xc7b9:	mov	ebx, eax
0xc7bb:	mov	rsi, qword ptr [rsp + 0x18]
0xc7c0:	xor	rsi, qword ptr fs:[0x28]
0xc7c9:	mov	eax, ebx
0xc7cb:	jne	0xc7d4


0xd0ee:	cmp	rax, -1
0xd0f2:	jne	0xd0ac


0xd0f4:	mov	rdi, rbx
0xd0f7:	pop	rbx
0xd0f8:	pop	rbp
0xd0f9:	pop	r12
0xd0fb:	jmp	0x2800


0xd190:	cmp	rax, -1
0xd194:	je	0xd1a2


0xd1a2:	pop	rbx
0xd1a3:	pop	rbp
0xd1a4:	pop	r12
0xd1a6:	ret	


0xd196:	and	dword ptr [rbx], 0xffffffef
0xd199:	mov	qword ptr [rbx + 0x90], rax
0xd1a0:	xor	eax, eax
0xd1a2:	pop	rbx
0xd1a3:	pop	rbp
0xd1a4:	pop	r12
0xd1a6:	ret	


0xd080:	call	0x2770


0xcdaa:	lea	rsi, [rip + 0x7c1c]
0xcdb1:	mov	edx, 5
0xcdb6:	xor	edi, edi
0xcdb8:	call	0x2820


0xcdbd:	lea	rcx, [rip + 0x5c8c]
0xcdc4:	lea	rdx, [rip + 0x4927]
0xcdcb:	mov	rsi, rax
0xcdce:	mov	edi, 1
0xcdd3:	xor	eax, eax
0xcdd5:	call	0x2a60


0xcdda:	mov	rbx, qword ptr [rip + 0x20b2c7]
0xcde1:	lea	rsi, [rip + 0x7e18]
0xcde8:	xor	edi, edi
0xcdea:	mov	edx, 5
0xcdef:	call	0x2820


0xcdf4:	mov	rsi, rbx
0xcdf7:	mov	rdi, rax
0xcdfa:	pop	rbx
0xcdfb:	jmp	0x2920


0x36c0:	mov	rbx, qword ptr [rip + 0x2149e1]
0x36c7:	lea	rsi, [rip + 0xe1e2]
0x36ce:	mov	edx, 5
0x36d3:	xor	edi, edi
0x36d5:	call	0x2820


0x36da:	mov	rsi, rbx
0x36dd:	mov	rdi, rax
0x36e0:	call	0x2920


0x36e5:	mov	rbx, qword ptr [rip + 0x2149bc]
0x36ec:	lea	rsi, [rip + 0xe205]
0x36f3:	mov	edx, 5
0x36f8:	xor	edi, edi
0x36fa:	call	0x2820


0x36ff:	mov	rsi, rbx
0x3702:	mov	rdi, rax
0x3705:	call	0x2920


0x370a:	mov	rbx, qword ptr [rip + 0x214997]
0x3711:	lea	rsi, [rip + 0xe230]
0x3718:	mov	edx, 5
0x371d:	xor	edi, edi
0x371f:	call	0x2820


0x3724:	mov	rsi, rbx
0x3727:	mov	rdi, rax
0x372a:	call	0x2920


0x372f:	mov	rbx, qword ptr [rip + 0x214972]
0x3736:	lea	rsi, [rip + 0xe25b]
0x373d:	mov	edx, 5
0x3742:	xor	edi, edi
0x3744:	call	0x2820


0x3749:	mov	rsi, rbx
0x374c:	mov	rdi, rax
0x374f:	call	0x2920


0x3754:	mov	rbx, qword ptr [rip + 0x21494d]
0x375b:	lea	rsi, [rip + 0xe2be]
0x3762:	mov	edx, 5
0x3767:	xor	edi, edi
0x3769:	call	0x2820


0x376e:	mov	rsi, rbx
0x3771:	mov	rdi, rax
0x3774:	call	0x2920


0x3779:	mov	rbx, qword ptr [rip + 0x214928]
0x3780:	lea	rsi, [rip + 0xe2e9]
0x3787:	mov	edx, 5
0x378c:	xor	edi, edi
0x378e:	call	0x2820


0x3793:	mov	rsi, rbx
0x3796:	mov	rdi, rax
0x3799:	call	0x2920


0x379e:	mov	rbx, qword ptr [rip + 0x214903]
0x37a5:	lea	rsi, [rip + 0xe424]
0x37ac:	mov	edx, 5
0x37b1:	xor	edi, edi
0x37b3:	call	0x2820


0x37b8:	mov	rsi, rbx
0x37bb:	mov	rdi, rax
0x37be:	call	0x2920


0x37c3:	mov	rbx, qword ptr [rip + 0x2148de]
0x37ca:	lea	rsi, [rip + 0xe48f]
0x37d1:	mov	edx, 5
0x37d6:	xor	edi, edi
0x37d8:	call	0x2820


0x37dd:	mov	rsi, rbx
0x37e0:	mov	rdi, rax
0x37e3:	call	0x2920


0x37e8:	mov	rbx, qword ptr [rip + 0x2148b9]
0x37ef:	lea	rsi, [rip + 0xe57a]
0x37f6:	mov	edx, 5
0x37fb:	xor	edi, edi
0x37fd:	call	0x2820


0x3802:	mov	rsi, rbx
0x3805:	mov	rdi, rax
0x3808:	call	0x2920


0x380d:	mov	rbx, qword ptr [rip + 0x214894]
0x3814:	lea	rsi, [rip + 0xe5a5]
0x381b:	mov	edx, 5
0x3820:	xor	edi, edi
0x3822:	call	0x2820


0x3827:	mov	rsi, rbx
0x382a:	mov	rdi, rax
0x382d:	call	0x2920


0x3832:	mov	rbx, qword ptr [rip + 0x21486f]
0x3839:	lea	rsi, [rip + 0xe608]
0x3840:	mov	edx, 5
0x3845:	xor	edi, edi
0x3847:	call	0x2820


0x384c:	mov	rsi, rbx
0x384f:	mov	rdi, rax
0x3852:	call	0x2920


0x3857:	mov	rbx, qword ptr [rip + 0x21484a]
0x385e:	lea	rsi, [rip + 0xe613]
0x3865:	mov	edx, 5
0x386a:	xor	edi, edi
0x386c:	call	0x2820


0x3871:	mov	rsi, rbx
0x3874:	mov	rdi, rax
0x3877:	call	0x2920


0x387c:	mov	rbx, qword ptr [rip + 0x214825]
0x3883:	lea	rsi, [rip + 0xe626]
0x388a:	mov	edx, 5
0x388f:	xor	edi, edi
0x3891:	call	0x2820


0x3896:	mov	rsi, rbx
0x3899:	mov	rdi, rax
0x389c:	call	0x2920


0x38a1:	mov	rbx, qword ptr [rip + 0x214800]
0x38a8:	lea	rsi, [rip + 0xe689]
0x38af:	mov	edx, 5
0x38b4:	xor	edi, edi
0x38b6:	call	0x2820


0x38bb:	mov	rsi, rbx
0x38be:	mov	rdi, rax
0x38c1:	call	0x2920


0x38c6:	mov	rbx, qword ptr [rip + 0x2147db]
0x38cd:	lea	rsi, [rip + 0xe73c]
0x38d4:	mov	edx, 5
0x38d9:	xor	edi, edi
0x38db:	call	0x2820


0x38e0:	mov	rsi, rbx
0x38e3:	mov	rdi, rax
0x38e6:	call	0x2920


0x38eb:	mov	rbx, qword ptr [rip + 0x2147b6]
0x38f2:	lea	rsi, [rip + 0xe7c7]
0x38f9:	mov	edx, 5
0x38fe:	xor	edi, edi
0x3900:	call	0x2820


0x3905:	mov	rsi, rbx
0x3908:	mov	rdi, rax
0x390b:	call	0x2920


0x3910:	mov	rbx, qword ptr [rip + 0x214791]
0x3917:	lea	rsi, [rip + 0xe84a]
0x391e:	mov	edx, 5
0x3923:	xor	edi, edi
0x3925:	call	0x2820


0x392a:	mov	rsi, rbx
0x392d:	mov	rdi, rax
0x3930:	call	0x2920


0x3935:	mov	rbx, qword ptr [rip + 0x21476c]
0x393c:	lea	rsi, [rip + 0xe885]
0x3943:	mov	edx, 5
0x3948:	xor	edi, edi
0x394a:	call	0x2820


0x394f:	mov	rsi, rbx
0x3952:	mov	rdi, rax
0x3955:	call	0x2920


0x395a:	mov	rbx, qword ptr [rip + 0x214747]
0x3961:	lea	rsi, [rip + 0xe8f0]
0x3968:	mov	edx, 5
0x396d:	xor	edi, edi
0x396f:	call	0x2820


0x3974:	mov	rsi, rbx
0x3977:	mov	rdi, rax
0x397a:	call	0x2920


0x397f:	mov	rbx, qword ptr [rip + 0x214722]
0x3986:	lea	rsi, [rip + 0xea1b]
0x398d:	mov	edx, 5
0x3992:	xor	edi, edi
0x3994:	call	0x2820


0x3999:	mov	rsi, rbx
0x399c:	mov	rdi, rax
0x399f:	call	0x2920


0x39a4:	mov	rbx, qword ptr [rip + 0x2146fd]
0x39ab:	lea	rsi, [rip + 0xea66]
0x39b2:	xor	edi, edi
0x39b4:	mov	edx, 5
0x39b9:	call	0x2820


0x39be:	mov	rsi, rbx
0x39c1:	mov	rdi, rax
0x39c4:	call	0x2920


0x39c9:	mov	rbx, qword ptr [rip + 0x2146d8]
0x39d0:	lea	rsi, [rip + 0xeb39]
0x39d7:	mov	edx, 5
0x39dc:	xor	edi, edi
0x39de:	call	0x2820


0x39e3:	mov	rsi, rbx
0x39e6:	mov	rdi, rax
0x39e9:	call	0x2920


0x39ee:	mov	rbx, qword ptr [rip + 0x2146b3]
0x39f5:	lea	rsi, [rip + 0xebb4]
0x39fc:	mov	edx, 5
0x3a01:	xor	edi, edi
0x3a03:	call	0x2820


0x3a08:	mov	rsi, rbx
0x3a0b:	mov	rdi, rax
0x3a0e:	call	0x2920


0x3a13:	mov	rbx, qword ptr [rip + 0x21468e]
0x3a1a:	lea	rsi, [rip + 0xecd7]
0x3a21:	mov	edx, 5
0x3a26:	xor	edi, edi
0x3a28:	call	0x2820


0x3a2d:	mov	rsi, rbx
0x3a30:	mov	rdi, rax
0x3a33:	call	0x2920


0x3a38:	mov	rbx, qword ptr [rip + 0x214669]
0x3a3f:	lea	rsi, [rip + 0xedca]
0x3a46:	mov	edx, 5
0x3a4b:	xor	edi, edi
0x3a4d:	call	0x2820


0x3a52:	mov	rsi, rbx
0x3a55:	mov	rdi, rax
0x3a58:	call	0x2920


0x3a5d:	mov	rbx, qword ptr [rip + 0x214644]
0x3a64:	lea	rsi, [rip + 0xee95]
0x3a6b:	mov	edx, 5
0x3a70:	xor	edi, edi
0x3a72:	call	0x2820


0x3a77:	mov	rsi, rbx
0x3a7a:	mov	rdi, rax
0x3a7d:	lea	rbx, [rip + 0xdd37]
0x3a84:	call	0x2920


0x3a89:	lea	rax, [rip + 0xdbec]
0x3a90:	lea	rcx, [rip + 0xdc26]
0x3a97:	mov	qword ptr [rsp + 0x60], 0
0x3aa0:	mov	qword ptr [rsp + 0x68], 0
0x3aa9:	mov	rdx, rsp
0x3aac:	mov	qword ptr [rsp], rax
0x3ab0:	lea	rax, [rip + 0xdbc7]
0x3ab7:	mov	qword ptr [rsp + 0x30], rcx
0x3abc:	lea	rcx, [rip + 0xdc04]
0x3ac3:	mov	qword ptr [rsp + 8], rax
0x3ac8:	lea	rax, [rip + 0xdc27]
0x3acf:	mov	qword ptr [rsp + 0x40], rcx
0x3ad4:	lea	rcx, [rip + 0xdbf6]
0x3adb:	mov	qword ptr [rsp + 0x10], rax
0x3ae0:	lea	rax, [rip + 0xdba7]
0x3ae7:	mov	qword ptr [rsp + 0x50], rcx
0x3aec:	mov	qword ptr [rsp + 0x18], rax
0x3af1:	lea	rax, [rip + 0xdbac]
0x3af8:	mov	qword ptr [rsp + 0x20], rax
0x3afd:	lea	rax, [rip + 0xdbaa]
0x3b04:	mov	qword ptr [rsp + 0x28], rax
0x3b09:	mov	qword ptr [rsp + 0x38], rax
0x3b0e:	mov	qword ptr [rsp + 0x48], rax
0x3b13:	mov	qword ptr [rsp + 0x58], rax
0x3b18:	nop	dword ptr [rax + rax]
0x3b20:	add	rdx, 0x10
0x3b24:	mov	rdi, qword ptr [rdx]
0x3b27:	test	rdi, rdi
0x3b2a:	je	0x3b3f


0x3b3f:	mov	r12, qword ptr [rdx + 8]
0x3b43:	xor	edi, edi
0x3b45:	mov	edx, 5
0x3b4a:	lea	rsi, [rip + 0xdb8a]
0x3b51:	test	r12, r12
0x3b54:	je	0x3c1b


0x3b2c:	mov	ecx, 5
0x3b31:	mov	rsi, rbx
0x3b34:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3c1b:	call	0x2820


0x3b5a:	call	0x2820


0x3b34:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3b36:	seta	al
0x3b39:	sbb	al, 0
0x3b3b:	test	al, al
0x3b3d:	jne	0x3b20


0x3b20:	add	rdx, 0x10
0x3b24:	mov	rdi, qword ptr [rdx]
0x3b27:	test	rdi, rdi
0x3b2a:	je	0x3b3f


0x3b5f:	lea	rcx, [rip + 0xeeea]
0x3b66:	lea	rdx, [rip + 0xdb85]
0x3b6d:	mov	rsi, rax
0x3b70:	mov	edi, 1
0x3b75:	xor	eax, eax
0x3b77:	call	0x2a60


0x3b7c:	xor	esi, esi
0x3b7e:	mov	edi, 5
0x3b83:	call	0x2a50


0x3b88:	test	rax, rax
0x3b8b:	je	0x3ba9


0x3ba9:	lea	rsi, [rip + 0xdb54]
0x3bb0:	xor	edi, edi
0x3bb2:	mov	edx, 5
0x3bb7:	call	0x2820


0x3b8d:	lea	rsi, [rip + 0xdb6c]
0x3b94:	mov	edx, 3
0x3b99:	mov	rdi, rax
0x3b9c:	call	0x2790


0x3bbc:	lea	rcx, [rip + 0xdbf8]
0x3bc3:	lea	rdx, [rip + 0xee86]
0x3bca:	mov	rsi, rax
0x3bcd:	mov	edi, 1
0x3bd2:	xor	eax, eax
0x3bd4:	call	0x2a60


0x3bd9:	cmp	r12, rbx
0x3bdc:	lea	rcx, [rip + 0xdab5]
0x3be3:	lea	rbx, [rip + 0xf6c5]
0x3bea:	cmove	rbx, rcx
0x3bee:	lea	rsi, [rip + 0xeecb]
0x3bf5:	xor	edi, edi
0x3bf7:	mov	edx, 5
0x3bfc:	call	0x2820


0x3c01:	mov	rcx, rbx
0x3c04:	mov	rsi, rax
0x3c07:	mov	rdx, r12
0x3c0a:	mov	edi, 1
0x3c0f:	xor	eax, eax
0x3c11:	call	0x2a60


0x3c16:	jmp	0x3696


0x3c20:	lea	rcx, [rip + 0xee29]
0x3c27:	lea	rdx, [rip + 0xdac4]
0x3c2e:	mov	rsi, rax
0x3c31:	mov	edi, 1
0x3c36:	xor	eax, eax
0x3c38:	call	0x2a60


0x3c3d:	xor	esi, esi
0x3c3f:	mov	edi, 5
0x3c44:	call	0x2a50


0x3c49:	test	rax, rax
0x3c4c:	je	0x3c66


0x3c66:	lea	rsi, [rip + 0xda97]
0x3c6d:	mov	edx, 5
0x3c72:	xor	edi, edi
0x3c74:	lea	r12, [rip + 0xdb40]
0x3c7b:	lea	rbx, [rip + 0xda16]
0x3c82:	call	0x2820


0x3c4e:	lea	rsi, [rip + 0xdaab]
0x3c55:	mov	edx, 3
0x3c5a:	mov	rdi, rax
0x3c5d:	call	0x2790


0x3c87:	lea	rcx, [rip + 0xdb2d]
0x3c8e:	lea	rdx, [rip + 0xedbb]
0x3c95:	mov	rsi, rax
0x3c98:	mov	edi, 1
0x3c9d:	xor	eax, eax
0x3c9f:	call	0x2a60


0x3ca4:	jmp	0x3bee


0x3bee:	lea	rsi, [rip + 0xeecb]
0x3bf5:	xor	edi, edi
0x3bf7:	mov	edx, 5
0x3bfc:	call	0x2820


0x3ecc:	mov	r15, qword ptr [r14]
0x3ecf:	test	r15, r15
0x3ed2:	je	0x3f68


0x3f68:	mov	rdi, qword ptr [rip + 0x214171]
0x3f6f:	mov	rax, qword ptr [rdi + 0x28]
0x3f73:	cmp	rax, qword ptr [rdi + 0x30]
0x3f77:	jae	0x3f98


0x3ed8:	xor	r13d, r13d
0x3edb:	xor	ebx, ebx
0x3edd:	jmp	0x3f18


0x3f79:	lea	rdx, [rax + 1]
0x3f7d:	mov	qword ptr [rdi + 0x28], rdx
0x3f81:	mov	byte ptr [rax], 0xa
0x3f84:	add	rsp, 8
0x3f88:	pop	rbx
0x3f89:	pop	rbp
0x3f8a:	pop	r12
0x3f8c:	pop	r13
0x3f8e:	pop	r14
0x3f90:	pop	r15
0x3f92:	ret	


0x3f98:	add	rsp, 8
0x3f9c:	mov	esi, 0xa
0x3fa1:	pop	rbx
0x3fa2:	pop	rbp
0x3fa3:	pop	r12
0x3fa5:	pop	r13
0x3fa7:	pop	r14
0x3fa9:	pop	r15
0x3fab:	jmp	0x28a0


0x3f18:	test	rbx, rbx
0x3f1b:	je	0x3ee0


0x3ee0:	mov	rdi, r15
0x3ee3:	add	rbx, 1
0x3ee7:	mov	r13, rbp
0x3eea:	call	0xc730


0x3f1d:	mov	rdx, r12
0x3f20:	mov	rsi, rbp
0x3f23:	mov	rdi, r13
0x3f26:	call	0x2910


0x3f2b:	test	eax, eax
0x3f2d:	jne	0x3ee0


0x3f2f:	mov	rdi, r15
0x3f32:	add	rbx, 1
0x3f36:	add	rbp, r12
0x3f39:	call	0xc730


0xc86c:	cmp	r12, 9
0xc870:	ja	0xcbb0


0xc876:	lea	rdx, [rip + 0x83cb]
0xc87d:	movsxd	rax, dword ptr [rdx + r12*4]
0xc881:	add	rax, rdx
0xc884:	jmp	rax


0xcbb0:	mov	r10, qword ptr [rbx + 0x40]
0xcbb4:	mov	r9, qword ptr [rbx + 0x38]
0xcbb8:	mov	edx, 5
0xcbbd:	mov	rax, qword ptr [rbx + 0x10]
0xcbc1:	mov	r8, qword ptr [rbx + 8]
0xcbc5:	lea	rsi, [rip + 0x7ff4]
0xcbcc:	mov	r13, qword ptr [rbx + 0x30]
0xcbd0:	mov	r12, qword ptr [rbx + 0x28]
0xcbd4:	mov	r15, qword ptr [rbx + 0x20]
0xcbd8:	mov	r14, qword ptr [rbx + 0x18]
0xcbdc:	mov	qword ptr [rsp + 0x18], r10
0xcbe1:	mov	qword ptr [rsp + 0x10], r9
0xcbe6:	mov	qword ptr [rsp], rax
0xcbea:	mov	qword ptr [rsp + 8], r8
0xcbef:	mov	rbx, qword ptr [rbx]
0xcbf2:	jmp	0xc982


0xc982:	xor	edi, edi
0xc984:	call	0x2820


0xc989:	mov	r10, qword ptr [rsp + 0x18]
0xc98e:	push	r10
0xc990:	jmp	0xc8d4


0xc8d4:	mov	r9, qword ptr [rsp + 0x18]
0xc8d9:	mov	rdx, rax
0xc8dc:	mov	rcx, rbx
0xc8df:	mov	esi, 1
0xc8e4:	mov	rdi, rbp
0xc8e7:	xor	eax, eax
0xc8e9:	push	r9
0xc8eb:	push	r13
0xc8ed:	push	r12
0xc8ef:	push	r15
0xc8f1:	push	r14
0xc8f3:	mov	r9, qword ptr [rsp + 0x30]
0xc8f8:	mov	r8, qword ptr [rsp + 0x38]
0xc8fd:	call	0x2b00


0xc902:	add	rsp, 0x30
0xc906:	add	rsp, 0x28
0xc90a:	pop	rbx
0xc90b:	pop	rbp
0xc90c:	pop	r12
0xc90e:	pop	r13
0xc910:	pop	r14
0xc912:	pop	r15
0xc914:	ret	


0xd6b0:	cmp	rax, -1
0xd6b4:	mov	qword ptr [rsp + 8], rax
0xd6b9:	je	0xd710


0xd710:	lea	rsi, [rsp + 0x10]
0xd715:	lea	rdi, [rsp + 8]
0xd71a:	call	0x27a0


0xd6bb:	mov	rsi, rbx
0xd6be:	mov	rdi, rbp
0xd6c1:	call	0xd390


0xd6c6:	test	al, al
0xd6c8:	jne	0xd6d3


0xd6ca:	mov	qword ptr [rsp + 8], -1
0xd6d3:	cmp	r12, 1
0xd6d7:	je	0xd6e9


0xd6d3:	cmp	r12, 1
0xd6d7:	je	0xd6e9


0xd6e9:	mov	rax, qword ptr [rsp + 8]
0xd6ee:	mov	rcx, qword ptr [rsp + 0x48]
0xd6f3:	xor	rcx, qword ptr fs:[0x28]
0xd6fc:	jne	0xd7ac


0xd6d9:	mov	rdi, r12
0xd6dc:	call	0xd2a0


0xd6e1:	test	al, al
0xd6e3:	je	0xd7a0


0xd71f:	test	rax, rax
0xd722:	je	0xd6d3


0xd724:	mov	eax, dword ptr [rbx]
0xd726:	mov	edx, dword ptr [rbx + 4]
0xd729:	xor	eax, dword ptr [rsp + 0x10]
0xd72d:	xor	edx, dword ptr [rsp + 0x14]
0xd731:	mov	ecx, dword ptr [rsp + 0x30]
0xd735:	or	eax, edx
0xd737:	mov	edx, dword ptr [rbx + 8]
0xd73a:	xor	edx, dword ptr [rsp + 0x18]
0xd73e:	or	eax, edx
0xd740:	mov	edx, dword ptr [rbx + 0xc]
0xd743:	xor	edx, dword ptr [rsp + 0x1c]
0xd747:	or	eax, edx
0xd749:	mov	edx, dword ptr [rbx + 0x10]
0xd74c:	xor	edx, dword ptr [rsp + 0x20]
0xd750:	or	eax, edx
0xd752:	mov	edx, dword ptr [rbx + 0x14]
0xd755:	xor	edx, dword ptr [rsp + 0x24]
0xd759:	or	eax, edx
0xd75b:	mov	edx, dword ptr [rbx + 0x20]
0xd75e:	test	edx, edx
0xd760:	sete	dil
0xd764:	test	ecx, ecx
0xd766:	sete	sil
0xd76a:	cmp	dil, sil
0xd76d:	je	0xd77b


0xd77b:	test	eax, eax
0xd77d:	je	0xd6bb


0xd76f:	test	edx, edx
0xd771:	js	0xd77b


0xd783:	jmp	0xd6d3


0xd773:	test	ecx, ecx
0xd775:	jns	0xd6d3


0xa8fd:	mov	ecx, dword ptr [rsp + 0x68]
0xa901:	mov	r13, rax
0xa904:	xor	eax, eax
0xa906:	test	ecx, ecx
0xa908:	js	0xa794


0xa794:	mov	rsi, qword ptr [rsp + 0xc8]
0xa79c:	xor	rsi, qword ptr fs:[0x28]
0xa7a5:	jne	0xaa0f


0xa90e:	mov	edx, dword ptr [rsp + 0x24]
0xa912:	mov	ecx, dword ptr [rsp + 0x20]
0xa916:	xor	edx, dword ptr [rsp + 0x64]
0xa91a:	xor	ecx, dword ptr [rsp + 0x60]
0xa91e:	mov	esi, dword ptr [rsp + 0x10]
0xa922:	or	edx, ecx
0xa924:	mov	ecx, dword ptr [rsp + 0x1c]
0xa928:	xor	ecx, dword ptr [rsp + 0x5c]
0xa92c:	or	edx, ecx
0xa92e:	mov	ecx, dword ptr [rsp + 0x18]
0xa932:	xor	ecx, dword ptr [rsp + 0x58]
0xa936:	or	edx, ecx
0xa938:	mov	ecx, dword ptr [rsp + 0x14]
0xa93c:	xor	ecx, dword ptr [rsp + 0x54]
0xa940:	or	edx, ecx
0xa942:	mov	ecx, dword ptr [rsp + 0x50]
0xa946:	xor	ecx, esi
0xa948:	or	edx, ecx
0xa94a:	je	0xa990


0xa990:	mov	qword ptr [r12], r13
0xa994:	mov	eax, 1
0xa999:	jmp	0xa794


0xa94c:	cmp	esi, 0x3c
0xa94f:	jne	0xa794


0xa955:	lea	r14, [rsp + 0xb0]
0xa95d:	mov	edx, 0x10
0xa962:	mov	rsi, rbx
0xa965:	mov	rdi, r14
0xa968:	call	0x29b0


0x29b0:	jmp	qword ptr [rip + 0x215532]




0xa77e:	test	rax, rax
0xa781:	mov	r14, rax
0xa784:	je	0xa7c3


0xa7c3:	lea	rax, [r13 - 8]
0xa7c7:	cmp	rax, 4
0xa7cb:	ja	0xa792


0xa786:	sub	rax, rbx
0xa789:	sub	r13, rax
0xa78c:	cmp	r13, 3
0xa790:	je	0xa7c0


0xa7c0:	mov	r13, rax
0xa7c3:	lea	rax, [r13 - 8]
0xa7c7:	cmp	rax, 4
0xa7cb:	ja	0xa792


0xd147:	mov	rdi, rbx
0xd14a:	pop	rbx
0xd14b:	jmp	0x29f0


0x3c62:	test	eax, eax
0x3c64:	jne	0x3ca9


0x3ca9:	lea	r12, [rip + 0xdb0b]
0x3cb0:	mov	r13, qword ptr [rip + 0x2143f1]
0x3cb7:	lea	rsi, [rip + 0xedba]
0x3cbe:	xor	edi, edi
0x3cc0:	mov	edx, 5
0x3cc5:	call	0x2820


0x3cca:	mov	rsi, r13
0x3ccd:	mov	rdi, rax
0x3cd0:	call	0x2920


0x3cd5:	jmp	0x3ba9


0x3ba1:	test	eax, eax
0x3ba3:	jne	0x3cb0


0x3cb0:	mov	r13, qword ptr [rip + 0x2143f1]
0x3cb7:	lea	rsi, [rip + 0xedba]
0x3cbe:	xor	edi, edi
0x3cc0:	mov	edx, 5
0x3cc5:	call	0x2820


0x3d97:	test	eax, eax
0x3d99:	jne	0x3d77


0x3d9b:	mov	rdi, r14
0x3d9e:	call	0x2840


0x3d77:	add	rbx, 1
0x3d7b:	add	rbp, r13
0x3d7e:	mov	r14, qword ptr [r15 + rbx*8]
0x3d82:	test	r14, r14
0x3d85:	je	0x3dc8


0x3dc8:	cmp	byte ptr [rsp + 0x17], 0
0x3dcd:	mov	rax, -2
0x3dd4:	cmove	rax, qword ptr [rsp]
0x3dd9:	mov	qword ptr [rsp], rax
0x3ddd:	mov	rax, qword ptr [rsp]
0x3de1:	add	rsp, 0x28
0x3de5:	pop	rbx
0x3de6:	pop	rbp
0x3de7:	pop	r12
0x3de9:	pop	r13
0x3deb:	pop	r14
0x3ded:	pop	r15
0x3def:	ret	


0x3da3:	cmp	rax, r12
0x3da6:	je	0x3e00


0x3e00:	mov	qword ptr [rsp], rbx
0x3e04:	jmp	0x3ddd


0x3da8:	cmp	qword ptr [rsp], -1
0x3dad:	jne	0x3d40


0x3daf:	mov	qword ptr [rsp], rbx
0x3db3:	add	rbx, 1
0x3db7:	add	rbp, r13
0x3dba:	mov	r14, qword ptr [r15 + rbx*8]
0x3dbe:	test	r14, r14
0x3dc1:	jne	0x3d87


0x3d40:	mov	rax, qword ptr [rsp + 0x18]
0x3d45:	test	rax, rax
0x3d48:	je	0x3df0


0x3df0:	mov	byte ptr [rsp + 0x17], 1
0x3df5:	jmp	0x3d77


0x3d4e:	mov	rdi, qword ptr [rsp]
0x3d52:	mov	rdx, r13
0x3d55:	mov	rsi, rbp
0x3d58:	imul	rdi, r13
0x3d5c:	add	rdi, rax
0x3d5f:	call	0x2910


0x3d64:	test	eax, eax
0x3d66:	movzx	eax, byte ptr [rsp + 0x17]
0x3d6b:	mov	ecx, 1
0x3d70:	cmovne	eax, ecx
0x3d73:	mov	byte ptr [rsp + 0x17], al
0x3d77:	add	rbx, 1
0x3d7b:	add	rbp, r13
0x3d7e:	mov	r14, qword ptr [r15 + rbx*8]
0x3d82:	test	r14, r14
0x3d85:	je	0x3dc8


0x85b6:	test	eax, eax
0x85b8:	sete	al
0x85bb:	test	al, al
0x85bd:	jne	0x872a


0xa6bb:	test	rax, rax
0xa6be:	je	0xa6ca


0xa6c0:	mov	eax, dword ptr [rax + 0x14]
0xa6c3:	mov	dword ptr [rbx], eax
0xa6c5:	mov	eax, 1
0xa6ca:	mov	rdi, qword ptr [rsp + 8]
0xa6cf:	xor	rdi, qword ptr fs:[0x28]
0xa6d8:	jne	0xa71c


0xcd46:	mov	rax, qword ptr [rsp + 0x78]
0xcd4b:	xor	rax, qword ptr fs:[0x28]
0xcd54:	jne	0xcd60


0xcd56:	add	rsp, 0xb8
0xcd5d:	pop	rbx
0xcd5e:	pop	rbp
0xcd5f:	ret	


0xcd60:	call	0x2850


0xcc70:	mov	rax, qword ptr [rsp + 0x58]
0xcc75:	xor	rax, qword ptr fs:[0x28]
0xcc7e:	jne	0xcc85


0xcc80:	add	rsp, 0x68
0xcc84:	ret	


0xcc85:	call	0x2850


0xa96d:	mov	edx, 0x3935
0xa972:	lea	rdi, [rsp + 8]
0xa977:	mov	byte ptr [rax], 0
0xa97a:	mov	word ptr [rax - 2], dx
0xa97e:	mov	rsi, r14
0xa981:	mov	edx, ebp
0xa983:	call	0xa730


0xa988:	test	al, al
0xa98a:	je	0xa794


0x2c49:	lea	rdi, [rip + 0x1440]
0x2c50:	call	0x11630


0x2c55:	mov	qword ptr [rsp + 0x18], 0
0x2c5e:	mov	qword ptr [rsp + 8], 0
0x2c67:	mov	byte ptr [rsp + 0x10], 0
0x2c6c:	mov	qword ptr [rsp + 0x28], 0
0x2c75:	mov	qword ptr [rsp + 0x20], 0
0x2c7e:	nop	
0x2c80:	lea	rcx, [rip + 0x214379]
0x2c87:	lea	rdx, [rip + 0x100b2]
0x2c8e:	xor	r8d, r8d
0x2c91:	mov	rsi, r14
0x2c94:	mov	edi, r15d
0x2c97:	call	0x2860


0x2860:	jmp	qword ptr [rip + 0x2155da]




0xd0b4:	test	eax, eax
0xd0b6:	je	0xd0f4


0xd0b8:	call	0x2780


0xd0bd:	mov	r12d, dword ptr [rax]
0xd0c0:	mov	rdi, rbx
0xd0c3:	mov	rbp, rax
0xd0c6:	call	0x2800


0xd0cb:	test	r12d, r12d
0xd0ce:	jne	0xd100


0xd0d0:	pop	rbx
0xd0d1:	pop	rbp
0xd0d2:	pop	r12
0xd0d4:	ret	


0xd100:	mov	dword ptr [rbp], r12d
0xd104:	mov	eax, 0xffffffff
0xd109:	jmp	0xd0d0


0xd8da:	and	ebx, 0x20
0xd8dd:	test	ebx, ebx
0xd8df:	jne	0xd8f8


0xd8e1:	test	eax, eax
0xd8e3:	je	0xd8ef


0xd8f8:	test	eax, eax
0xd8fa:	jne	0xd918


0xd8ef:	pop	rbx
0xd8f0:	pop	rbp
0xd8f1:	pop	r12
0xd8f3:	ret	


0xd8e5:	test	r12, r12
0xd8e8:	mov	eax, 0xffffffff
0xd8ed:	je	0xd928


0xd8fc:	call	0x2780


0xd918:	pop	rbx
0xd919:	mov	eax, 0xffffffff
0xd91e:	pop	rbp
0xd91f:	pop	r12
0xd921:	ret	


0xd928:	call	0x2780


0xd92d:	cmp	dword ptr [rax], 9
0xd930:	pop	rbx
0xd931:	pop	rbp
0xd932:	pop	r12
0xd934:	setne	al
0xd937:	movzx	eax, al
0xd93a:	neg	eax
0xd93c:	ret	


0xd901:	mov	dword ptr [rax], 0
0xd907:	mov	eax, 0xffffffff
0xd90c:	pop	rbx
0xd90d:	pop	rbp
0xd90e:	pop	r12
0xd910:	ret	


0x40a2:	test	eax, eax
0x40a4:	je	0x40bc


0x40bc:	mov	rdi, qword ptr [rip + 0x21401d]
0x40c3:	call	0xd8c0


0x40a6:	call	0x2780


0x40ab:	cmp	byte ptr [rip + 0x21403e], 0
0x40b2:	mov	rbx, rax
0x40b5:	je	0x40d3


0x40d3:	lea	rsi, [rip + 0xed09]
0x40da:	xor	edi, edi
0x40dc:	mov	edx, 5
0x40e1:	call	0x2820


0x40b7:	cmp	dword ptr [rax], 0x20
0x40ba:	jne	0x40d3


0x40e6:	mov	rdi, qword ptr [rip + 0x21400b]
0x40ed:	mov	rbp, rax
0x40f0:	test	rdi, rdi
0x40f3:	je	0x411d


0x411d:	mov	esi, dword ptr [rbx]
0x411f:	lea	rdx, [rip + 0xecba]
0x4126:	mov	rcx, rax
0x4129:	xor	edi, edi
0x412b:	xor	eax, eax
0x412d:	call	0x2a90


0x40f5:	call	0xc530


0x4132:	jmp	0x4112


0x4112:	mov	edi, dword ptr [rip + 0x213f08]
0x4118:	call	0x27b0


0x27b0:	jmp	qword ptr [rip + 0x215632]




0x40c8:	test	eax, eax
0x40ca:	jne	0x4112


0x40cc:	add	rsp, 8
0x40d0:	pop	rbx
0x40d1:	pop	rbp
0x40d2:	ret	


0x2c9c:	cmp	eax, -1
0x2c9f:	je	0x2e6e


0x2e6e:	xor	ebp, ebp
0x2e70:	cmp	qword ptr [rsp + 0x20], 0
0x2e76:	setne	bpl
0x2e7a:	xor	eax, eax
0x2e7c:	cmp	qword ptr [rsp + 8], 0
0x2e82:	setne	al
0x2e85:	add	ebp, eax
0x2e87:	xor	eax, eax
0x2e89:	cmp	qword ptr [rsp + 0x18], 0
0x2e8f:	setne	al
0x2e92:	add	ebp, eax
0x2e94:	cmp	ebp, 1
0x2e97:	jg	0x338f


0x2ca5:	cmp	eax, 0x66
0x2ca8:	je	0x2d98


0x2e9d:	mov	edx, ebp
0x2e9f:	and	edx, 1
0x2ea2:	test	byte ptr [rsp + 0x10], dl
0x2ea6:	jne	0x3369


0x338f:	mov	edx, 5
0x3394:	lea	rsi, [rip + 0xf785]
0x339b:	jmp	0x3375


0x2d98:	mov	rax, qword ptr [rip + 0x215321]
0x2d9f:	mov	qword ptr [rsp + 8], rax
0x2da4:	jmp	0x2c80


0x2cae:	jle	0x2ce0


0x2eac:	movsxd	rax, dword ptr [rip + 0x215205]
0x2eb3:	cmp	eax, r15d
0x2eb6:	jge	0x2ee4


0x3369:	lea	rsi, [rip + 0xf7f8]
0x3370:	mov	edx, 5
0x3375:	xor	edi, edi
0x3377:	call	0x2820


0x3375:	xor	edi, edi
0x3377:	call	0x2820


0x2c80:	lea	rcx, [rip + 0x214379]
0x2c87:	lea	rdx, [rip + 0x100b2]
0x2c8e:	xor	r8d, r8d
0x2c91:	mov	rsi, r14
0x2c94:	mov	edi, r15d
0x2c97:	call	0x2860


0x2ce0:	cmp	eax, 0x49
0x2ce3:	je	0x2df0


0x2cb0:	cmp	eax, 0x75
0x2cb3:	je	0x2db0


0x2eb8:	lea	ecx, [rax + 1]
0x2ebb:	cmp	ecx, r15d
0x2ebe:	jl	0x329a


0x2ee4:	test	rbx, rbx
0x2ee7:	je	0x31d7


0x2df0:	mov	rsi, qword ptr [rip + 0x2152c9]
0x2df7:	xor	eax, eax
0x2df9:	test	rsi, rsi
0x2dfc:	je	0x2e25


0x2ce9:	jle	0x2d38


0x2db0:	lea	rdi, [rip + 0xe9ae]
0x2db7:	call	0x2940


0x2cb9:	jg	0x2d10


0x329a:	mov	rdi, qword ptr [r14 + rax*8 + 8]
0x329f:	call	0xc730


0x2ec4:	mov	rdi, qword ptr [r14 + rax*8]
0x2ec8:	cmp	byte ptr [rdi], 0x2b
0x2ecb:	je	0x3278


0x31d7:	mov	edi, 0x2006c
0x31dc:	call	0x2a00


0x2eed:	lea	rdi, [rip + 0xe89a]
0x2ef4:	call	0x2730


0x2e25:	shl	rax, 5
0x2e29:	add	rax, r13
0x2e2c:	jmp	0x2dd7


0x2dfe:	mov	r9, qword ptr [rip + 0x215213]
0x2e05:	lea	rdx, [rip + 0x2143f4]
0x2e0c:	lea	rdi, [rip + 0xe947]
0x2e13:	mov	r8d, 4
0x2e19:	mov	rcx, rbp
0x2e1c:	call	0x3fb0


0x2d38:	cmp	eax, 0xffffff7d
0x2d3d:	jne	0x328c


0x2ceb:	cmp	eax, 0x52
0x2cee:	je	0x2dd0


0x2940:	jmp	qword ptr [rip + 0x21556a]


0x2cbb:	cmp	eax, 0x72
0x2cbe:	je	0x2d80


0x2d10:	cmp	eax, 0x80
0x2d15:	je	0x2e30


0x3278:	test	rbx, rbx
0x327b:	jne	0x32f9


0x2ed1:	test	dl, dl
0x2ed3:	jne	0x331d


0x2dd7:	test	rbx, rbx
0x2dda:	jne	0x32d5


0x2d43:	mov	rdi, qword ptr [rip + 0x21535e]
0x2d4a:	mov	rcx, qword ptr [rip + 0x2152bf]
0x2d51:	lea	r8, [rip + 0xea15]
0x2d58:	lea	rdx, [rip + 0xe993]
0x2d5f:	lea	rsi, [rip + 0xea55]
0x2d66:	xor	r9d, r9d
0x2d69:	xor	eax, eax
0x2d6b:	call	0xcca0


0x328c:	cmp	eax, 0xffffff7e
0x3291:	jne	0x32cb


0x2dd0:	lea	rax, [rip + 0xff79]
0x2dd7:	test	rbx, rbx
0x2dda:	jne	0x32d5


0x2cf4:	cmp	eax, 0x64
0x2cf7:	jne	0x32cb




0x2d80:	mov	rax, qword ptr [rip + 0x215339]
0x2d87:	mov	qword ptr [rsp + 0x18], rax
0x2d8c:	jmp	0x2c80


0x2cc4:	cmp	eax, 0x73
0x2cc7:	jne	0x32cb


0x2e30:	mov	r9, qword ptr [rip + 0x2151e1]
0x2e37:	mov	rsi, qword ptr [rip + 0x215282]
0x2e3e:	lea	rcx, [rip + 0xff33]
0x2e45:	lea	rdx, [rip + 0x2143c4]
0x2e4c:	lea	rdi, [rip + 0xe8fc]
0x2e53:	mov	r8d, 4
0x2e59:	call	0x3fb0


0x2d1b:	cmp	eax, 0x81
0x2d20:	jne	0x32cb


0x327d:	mov	dword ptr [rip + 0x214e35], ecx
0x3283:	lea	rbx, [rdi + 1]
0x3287:	jmp	0x2ee4


0x32f9:	lea	rsi, [rip + 0xf7f8]
0x3300:	mov	edx, 5
0x3305:	xor	edi, edi
0x3307:	call	0x2820


0x2ed9:	cmp	byte ptr [rsp + 0x10], 0
0x2ede:	jne	0x331d


0x331d:	call	0xc730


0x2de0:	mov	rbx, rax
0x2de3:	jmp	0x2c80


0x32d5:	lea	rsi, [rip + 0xf81c]
0x32dc:	mov	edx, 5
0x32e1:	xor	edi, edi
0x32e3:	call	0x2820


0x3293:	xor	edi, edi
0x3295:	call	0x3640


0x32cb:	mov	edi, 1
0x32d0:	call	0x3640


0x2cfd:	mov	rax, qword ptr [rip + 0x2153bc]
0x2d04:	mov	qword ptr [rsp + 0x20], rax
0x2d09:	jmp	0x2c80


0x2ccd:	mov	rax, qword ptr [rip + 0x2153ec]
0x2cd4:	mov	byte ptr [rsp + 0x10], 1
0x2cd9:	mov	qword ptr [rsp + 0x28], rax
0x2cde:	jmp	0x2c80


0x2d26:	or	dword ptr [rip + 0x2153bf], 1
0x2d2d:	jmp	0x2c80


0x2d70:	xor	edi, edi
0x2d72:	call	0x2ae0


0x2e5e:	mov	eax, dword ptr [rbp + rax*4 + 8]
0x2e62:	shl	rax, 5
0x2e66:	add	rax, r12
0x2e69:	jmp	0x2dd7


0x2e21:	mov	eax, dword ptr [rbp + rax*4]
0x2e25:	shl	rax, 5
0x2e29:	add	rax, r13
0x2e2c:	jmp	0x2dd7


0x2ef9:	mov	rdi, rax
0x2efc:	mov	r13, rax
0x2eff:	call	0xd300


0x2f04:	mov	rdi, qword ptr [rsp + 8]
0x2f09:	mov	r12, rax
0x2f0c:	test	rdi, rdi
0x2f0f:	jne	0x2fa8


0x2f15:	movzx	eax, byte ptr [rsp + 0x10]
0x2f1a:	xor	ebp, 1
0x2f1d:	xor	eax, 1
0x2f20:	and	bpl, al
0x2f23:	je	0x3117


0x2fa8:	lea	rsi, [rip + 0x101d1]
0x2faf:	call	0x2960


0x3117:	mov	rsi, qword ptr [rsp + 0x18]
0x311c:	test	rsi, rsi
0x311f:	je	0x3208


0x2f29:	movsxd	rax, dword ptr [rip + 0x215188]
0x2f30:	cmp	eax, r15d
0x2f33:	jge	0x31f9


0x3208:	mov	rcx, qword ptr [rsp + 0x28]
0x320d:	mov	rax, qword ptr [rsp + 0x20]
0x3212:	lea	rbp, [rsp + 0x40]
0x3217:	mov	r9, r13
0x321a:	mov	r8, r12
0x321d:	mov	rdi, rbp
0x3220:	test	rcx, rcx
0x3223:	cmovne	rax, rcx
0x3227:	mov	ecx, dword ptr [rip + 0x214ebf]
0x322d:	xor	edx, edx
0x322f:	mov	rsi, rax
0x3232:	mov	qword ptr [rsp + 0x28], rax
0x3237:	call	0x8890


0x3125:	lea	rdx, [rsp + 0x50]
0x312a:	mov	edi, 1
0x312f:	call	0x29d0


0x2f39:	mov	rax, qword ptr [r14 + rax*8]
0x2f3d:	lea	rbp, [rsp + 0x40]
0x2f42:	mov	edx, 7
0x2f47:	mov	rdi, rbp
0x2f4a:	mov	rsi, rax
0x2f4d:	mov	qword ptr [rsp + 0x28], rax
0x2f52:	call	0xa730


0x31f9:	lea	rdi, [rsp + 0x40]
0x31fe:	call	0x5e70


0x29d0:	jmp	qword ptr [rip + 0x215522]




0x3203:	jmp	0x316b


0x316b:	mov	rsi, qword ptr [rsp + 0x40]
0x3170:	mov	rdx, qword ptr [rsp + 0x48]
0x3175:	mov	rcx, r12
0x3178:	mov	rdi, rbx
0x317b:	call	0x34e0


0x3180:	and	ebp, eax
0x3182:	jmp	0x30e7


0x30e7:	xor	ebp, 1
0x30ea:	mov	rcx, qword ptr [rsp + 0xe8]
0x30f2:	xor	rcx, qword ptr fs:[0x28]
0x30fb:	movzx	eax, bpl
0x30ff:	jne	0x3333


0x3105:	add	rsp, 0xf8
0x310c:	pop	rbx
0x310d:	pop	rbp
0x310e:	pop	r12
0x3110:	pop	r13
0x3112:	pop	r14
0x3114:	pop	r15
0x3116:	ret	


0x3333:	call	0x2850


0x2f57:	test	al, al
0x2f59:	mov	qword ptr [rsp + 0x48], 0
0x2f62:	je	0x3244


0x3244:	mov	rdi, qword ptr [rsp + 0x28]
0x3249:	call	0xc730


0x2f68:	mov	rdi, rbp
0x2f6b:	call	0xc750


0x2f70:	test	eax, eax
0x2f72:	je	0x3166


0x3166:	mov	ebp, 1
0x316b:	mov	rsi, qword ptr [rsp + 0x40]
0x3170:	mov	rdx, qword ptr [rsp + 0x48]
0x3175:	mov	rcx, r12
0x3178:	mov	rdi, rbx
0x317b:	call	0x34e0


0x2f78:	lea	rsi, [rip + 0xe831]
0x2f7f:	mov	edx, 5
0x2f84:	xor	edi, edi
0x2f86:	call	0x2820


0x323c:	test	al, al
0x323e:	jne	0x3156


0x3156:	cmp	byte ptr [rsp + 0x10], 0
0x315b:	lea	rbp, [rsp + 0x40]
0x3160:	jne	0x2f68


0x2fb4:	test	eax, eax
0x2fb6:	jne	0x3187


0x2fbc:	lea	rsi, [rip + 0xe7ce]
0x2fc3:	mov	edx, 5
0x2fc8:	xor	edi, edi
0x2fca:	call	0x2820


0x3187:	mov	rdi, qword ptr [rsp + 8]
0x318c:	lea	rsi, [rip + 0xffde]
0x3193:	call	0x2ab0


0x2ab0:	jmp	qword ptr [rip + 0x2154b2]




0x31e1:	cmp	byte ptr [rax], 0
0x31e4:	mov	rbx, rax
0x31e7:	jne	0x2eed


0x31ed:	lea	rbx, [rip + 0xe52b]
0x31f4:	jmp	0x2eed


0x2fcf:	mov	qword ptr [rsp + 8], rax
0x2fd4:	mov	rax, qword ptr [rip + 0x2150d5]
0x2fdb:	mov	qword ptr [rsp + 0x10], rax
0x2fe0:	lea	rax, [rsp + 0x30]
0x2fe5:	lea	r15, [rsp + 0x38]
0x2fea:	mov	qword ptr [rsp + 0x30], 0
0x2ff3:	mov	qword ptr [rsp + 0x38], 0
0x2ffc:	mov	ebp, 1
0x3001:	mov	qword ptr [rsp + 0x28], rbx
0x3006:	mov	qword ptr [rsp + 0x18], rax
0x300b:	lea	rax, [rsp + 0x40]
0x3010:	mov	qword ptr [rsp + 0x20], rax
0x3015:	nop	dword ptr [rax]
0x3018:	mov	rcx, qword ptr [rsp + 0x10]
0x301d:	mov	rdi, qword ptr [rsp + 0x18]
0x3022:	mov	edx, 0xa
0x3027:	mov	rsi, r15
0x302a:	call	0x2950


0x2950:	jmp	qword ptr [rip + 0x215562]




0x2f8b:	mov	rbp, rax
0x2f8e:	call	0x2780


0x2f93:	mov	esi, dword ptr [rax]
0x2f95:	mov	rdx, rbp
0x2f98:	xor	edi, edi
0x2f9a:	xor	eax, eax
0x2f9c:	xor	ebp, ebp
0x2f9e:	call	0x2a90


0x2fa3:	jmp	0x316b


0x32e8:	xor	esi, esi
0x32ea:	mov	rdx, rax
0x32ed:	mov	edi, 1
0x32f2:	xor	eax, eax
0x32f4:	call	0x2a90


0x330c:	xor	esi, esi
0x330e:	mov	rdx, rax
0x3311:	mov	edi, 1
0x3316:	xor	eax, eax
0x3318:	call	0x2a90


0x337c:	xor	esi, esi
0x337e:	mov	rdx, rax
0x3381:	xor	edi, edi
0x3383:	xor	eax, eax
0x3385:	call	0x2a90


0x338a:	jmp	0x32cb


0x302f:	test	rax, rax
0x3032:	mov	r14, rax
0x3035:	js	0x30ca


0x30ca:	mov	rdi, qword ptr [rsp + 0x10]
0x30cf:	call	0xd090


0x303b:	mov	ecx, dword ptr [rip + 0x2150ab]
0x3041:	mov	rsi, qword ptr [rsp + 0x30]
0x3046:	xor	edx, edx
0x3048:	mov	rdi, qword ptr [rsp + 0x20]
0x304d:	mov	r9, r13
0x3050:	mov	r8, r12
0x3053:	call	0x8890


0x3058:	test	al, al
0x305a:	mov	ebx, eax
0x305c:	jne	0x30a8


0x305e:	mov	rdi, qword ptr [rsp + 0x30]
0x3063:	lea	rax, [rdi + r14 - 1]
0x3068:	cmp	byte ptr [rax], 0xa
0x306b:	jne	0x3075


0x30a8:	mov	rsi, qword ptr [rsp + 0x40]
0x30ad:	mov	rdx, qword ptr [rsp + 0x48]
0x30b2:	mov	rcx, r12
0x30b5:	mov	rdi, qword ptr [rsp + 0x28]
0x30ba:	call	0x34e0


0x306d:	mov	byte ptr [rax], 0
0x3070:	mov	rdi, qword ptr [rsp + 0x30]
0x3075:	call	0xc730


0x3075:	call	0xc730


0x30bf:	and	eax, ebp
0x30c1:	mov	ebx, eax
0x30c3:	mov	ebp, ebx
0x30c5:	jmp	0x3018


0x3018:	mov	rcx, qword ptr [rsp + 0x10]
0x301d:	mov	rdi, qword ptr [rsp + 0x18]
0x3022:	mov	edx, 0xa
0x3027:	mov	rsi, r15
0x302a:	call	0x2950


0x30d4:	add	eax, 1
0x30d7:	je	0x3338


0x3338:	mov	rdx, qword ptr [rsp + 8]
0x333d:	mov	esi, 3
0x3342:	xor	edi, edi
0x3344:	call	0xc560


0x30dd:	mov	rdi, qword ptr [rsp + 0x30]
0x30e2:	call	0x2750


0x3198:	test	rax, rax
0x319b:	mov	qword ptr [rsp + 0x10], rax
0x31a0:	jne	0x2fe0


0x31a6:	mov	rdx, qword ptr [rsp + 8]
0x31ab:	mov	esi, 3
0x31b0:	xor	edi, edi
0x31b2:	call	0xc560


0x2fe0:	lea	rax, [rsp + 0x30]
0x2fe5:	lea	r15, [rsp + 0x38]
0x2fea:	mov	qword ptr [rsp + 0x30], 0
0x2ff3:	mov	qword ptr [rsp + 0x38], 0
0x2ffc:	mov	ebp, 1
0x3001:	mov	qword ptr [rsp + 0x28], rbx
0x3006:	mov	qword ptr [rsp + 0x18], rax
0x300b:	lea	rax, [rsp + 0x40]
0x3010:	mov	qword ptr [rsp + 0x20], rax
0x3015:	nop	dword ptr [rax]
0x3018:	mov	rcx, qword ptr [rsp + 0x10]
0x301d:	mov	rdi, qword ptr [rsp + 0x18]
0x3022:	mov	edx, 0xa
0x3027:	mov	rsi, r15
0x302a:	call	0x2950


0x3134:	test	eax, eax
0x3136:	jne	0x339d


0x313c:	mov	rax, qword ptr [rsp + 0xa8]
0x3144:	mov	qword ptr [rsp + 0x40], rax
0x3149:	mov	rax, qword ptr [rsp + 0xb0]
0x3151:	mov	qword ptr [rsp + 0x48], rax
0x3156:	cmp	byte ptr [rsp + 0x10], 0
0x315b:	lea	rbp, [rsp + 0x40]
0x3160:	jne	0x2f68


0x339d:	mov	rdx, qword ptr [rsp + 0x18]
0x33a2:	mov	esi, 3
0x33a7:	xor	edi, edi
0x33a9:	call	0xc560


0x2dbc:	test	eax, eax
0x2dbe:	je	0x2c80


0x2dc4:	call	0xd050


0x33ae:	mov	rbx, rax
0x33b1:	call	0x2780


0x33b6:	mov	esi, dword ptr [rax]
0x33b8:	lea	rdx, [rip + 0xfa21]
0x33bf:	mov	rcx, rbx
0x33c2:	mov	edi, 1
0x33c7:	xor	eax, eax
0x33c9:	call	0x2a90


0x33ce:	nop	


0x31b7:	mov	rbx, rax
0x31ba:	call	0x2780


0x31bf:	mov	esi, dword ptr [rax]
0x31c1:	lea	rdx, [rip + 0xfc18]
0x31c8:	mov	rcx, rbx
0x31cb:	mov	edi, 1
0x31d0:	xor	eax, eax
0x31d2:	call	0x2a90


0x3349:	mov	rbx, rax
0x334c:	call	0x2780


0x3351:	mov	esi, dword ptr [rax]
0x3353:	lea	rdx, [rip + 0xfa86]
0x335a:	mov	rcx, rbx
0x335d:	mov	edi, 1
0x3362:	xor	eax, eax
0x3364:	call	0x2a90


0x40fa:	mov	esi, dword ptr [rbx]
0x40fc:	lea	rdx, [rip + 0xecec]
0x4103:	mov	rcx, rax
0x4106:	mov	r8, rbp
0x4109:	xor	edi, edi
0x410b:	xor	eax, eax
0x410d:	call	0x2a90


0x307a:	lea	rsi, [rip + 0xe71f]
0x3081:	mov	rbp, rax
0x3084:	mov	edx, 5
0x3089:	xor	edi, edi
0x308b:	call	0x2820


0x3090:	mov	rcx, rbp
0x3093:	mov	rdx, rax
0x3096:	xor	esi, esi
0x3098:	xor	edi, edi
0x309a:	xor	eax, eax
0x309c:	mov	ebp, ebx
0x309e:	call	0x2a90


0x30a3:	jmp	0x3018


0x324e:	lea	rsi, [rip + 0xe54b]
0x3255:	mov	rbx, rax
0x3258:	mov	edx, 5
0x325d:	xor	edi, edi
0x325f:	call	0x2820


0x3264:	mov	rcx, rbx
0x3267:	mov	rdx, rax
0x326a:	xor	esi, esi
0x326c:	mov	edi, 1
0x3271:	xor	eax, eax
0x3273:	call	0x2a90


0x3322:	mov	edx, 5
0x3327:	mov	rbx, rax
0x332a:	lea	rsi, [rip + 0xf877]
0x3331:	jmp	0x32b3


0x32b3:	xor	edi, edi
0x32b5:	call	0x2820


0x32ba:	mov	rcx, rbx
0x32bd:	mov	rdx, rax
0x32c0:	xor	esi, esi
0x32c2:	xor	edi, edi
0x32c4:	xor	eax, eax
0x32c6:	call	0x2a90


0x32a4:	lea	rsi, [rip + 0xe4d2]
0x32ab:	mov	rbx, rax
0x32ae:	mov	edx, 5
0x32b3:	xor	edi, edi
0x32b5:	call	0x2820


0x3f3e:	mov	rdi, qword ptr [rip + 0x21419b]
0x3f45:	lea	rdx, [rip + 0xee92]
0x3f4c:	mov	rcx, rax
0x3f4f:	mov	esi, 1
0x3f54:	xor	eax, eax
0x3f56:	call	0x2b00


0x3f5b:	mov	r15, qword ptr [r14 + rbx*8]
0x3f5f:	test	r15, r15
0x3f62:	jne	0x3f18


0x3eef:	mov	rdi, qword ptr [rip + 0x2141ea]
0x3ef6:	lea	rdx, [rip + 0xeed9]
0x3efd:	mov	rcx, rax
0x3f00:	mov	esi, 1
0x3f05:	xor	eax, eax
0x3f07:	add	rbp, r12
0x3f0a:	call	0x2b00


0x3f0f:	mov	r15, qword ptr [r14 + rbx*8]
0x3f13:	test	r15, r15
0x3f16:	je	0x3f68


0x35a6:	lea	rsi, [rip + 0xe0b7]
0x35ad:	mov	rbx, rax
0x35b0:	mov	edx, 5
0x35b5:	xor	edi, edi
0x35b7:	call	0x2820


0x35bc:	mov	rcx, rbx
0x35bf:	mov	rdx, rax
0x35c2:	xor	esi, esi
0x35c4:	xor	eax, eax
0x35c6:	xor	edi, edi
0x35c8:	call	0x2a90


0x35cd:	xor	eax, eax
0x35cf:	jmp	0x356e


0xc19c:	lea	rsi, [rax + 1]
0xc1a0:	mov	qword ptr [rsp + 0x48], rax
0xc1a5:	add	rsp, 0x20
0xc1a9:	mov	rdi, rsi
0xc1ac:	mov	qword ptr [rsp + 0x18], rsi
0xc1b1:	call	0xce00


0xc1b6:	mov	qword ptr [rsp + 0x10], rax
0xc1bb:	sub	rsp, 8
0xc1bf:	push	qword ptr [rbx + 0x30]
0xc1c2:	push	qword ptr [rbx + 0x28]
0xc1c5:	mov	r10, qword ptr [rsp + 0x38]
0xc1ca:	mov	r9d, ebp
0xc1cd:	mov	r8d, dword ptr [rbx]
0xc1d0:	mov	rcx, r15
0xc1d3:	mov	rdx, r14
0xc1d6:	mov	rdi, rax
0xc1d9:	push	r10
0xc1db:	mov	rsi, qword ptr [rsp + 0x38]
0xc1e0:	call	0xabb0


0xc1e5:	mov	eax, dword ptr [rsp + 0x2c]
0xc1e9:	add	rsp, 0x20
0xc1ed:	test	r12, r12
0xc1f0:	mov	dword ptr [r13], eax
0xc1f4:	je	0xc1ff


0xc1ff:	mov	rax, qword ptr [rsp + 0x10]
0xc204:	add	rsp, 0x38
0xc208:	pop	rbx
0xc209:	pop	rbp
0xc20a:	pop	r12
0xc20c:	pop	r13
0xc20e:	pop	r14
0xc210:	pop	r15
0xc212:	ret	


0xc1f6:	mov	r11, qword ptr [rsp + 0x28]
0xc1fb:	mov	qword ptr [r12], r11
0xc1ff:	mov	rax, qword ptr [rsp + 0x10]
0xc204:	add	rsp, 0x38
0xc208:	pop	rbx
0xc209:	pop	rbp
0xc20a:	pop	r12
0xc20c:	pop	r13
0xc20e:	pop	r14
0xc210:	pop	r15
0xc212:	ret	


0xc111:	mov	dword ptr [rbp], r12d
0xc115:	add	rsp, 0x38
0xc119:	pop	rbx
0xc11a:	pop	rbp
0xc11b:	pop	r12
0xc11d:	pop	r13
0xc11f:	pop	r14
0xc121:	pop	r15
0xc123:	ret	


0xbedc:	add	rsp, 0x20
0xbee0:	mov	r11, qword ptr [rsp + 0x10]
0xbee5:	cmp	r11, rax
0xbee8:	ja	0xbf51


0xbeea:	lea	rsi, [rax + 1]
0xbeee:	lea	rax, [rip + 0x20c22b]
0xbef5:	cmp	r12, rax
0xbef8:	mov	qword ptr [rbx], rsi
0xbefb:	je	0xbf0f


0xbf51:	mov	eax, dword ptr [rsp + 0x18]
0xbf55:	mov	dword ptr [r13], eax
0xbf59:	add	rsp, 0x28
0xbf5d:	mov	rax, r12
0xbf60:	pop	rbx
0xbf61:	pop	rbp
0xbf62:	pop	r12
0xbf64:	pop	r13
0xbf66:	pop	r14
0xbf68:	pop	r15
0xbf6a:	ret	


0xbf0f:	mov	rdi, rsi
0xbf12:	mov	qword ptr [rsp + 0x10], rsi
0xbf17:	call	0xce00


0xbefd:	mov	rdi, r12
0xbf00:	mov	qword ptr [rsp + 0x10], rsi
0xbf05:	call	0x2750


0xbf0a:	mov	rsi, qword ptr [rsp + 0x10]
0xbf0f:	mov	rdi, rsi
0xbf12:	mov	qword ptr [rsp + 0x10], rsi
0xbf17:	call	0xce00


0xbf1c:	sub	rsp, 8
0xbf20:	mov	qword ptr [rbx + 8], rax
0xbf24:	mov	r8d, dword ptr [rbp]
0xbf28:	push	qword ptr [rbp + 0x30]
0xbf2b:	push	qword ptr [rbp + 0x28]
0xbf2e:	mov	rcx, r14
0xbf31:	push	r15
0xbf33:	mov	r9d, dword ptr [rsp + 0x3c]
0xbf38:	mov	rdi, rax
0xbf3b:	mov	rdx, qword ptr [rsp + 0x28]
0xbf40:	mov	rsi, qword ptr [rsp + 0x30]
0xbf45:	mov	r12, rax
0xbf48:	call	0xabb0


0xc662:	mov	rdi, qword ptr [rsp + 0x38]
0xc667:	xor	rdi, qword ptr fs:[0x28]
0xc670:	jne	0xc67c


0xc672:	add	rsp, 0x48
0xc676:	ret	


0xc67c:	call	0x2850


0xc3af:	mov	rcx, qword ptr [rsp + 0x38]
0xc3b4:	xor	rcx, qword ptr fs:[0x28]
0xc3bd:	jne	0xc3c9


0xc3bf:	add	rsp, 0x48
0xc3c3:	ret	


0xc3c9:	call	0x2850


0xc43b:	mov	rdx, qword ptr [rsp + 0x38]
0xc440:	xor	rdx, qword ptr fs:[0x28]
0xc449:	jne	0xc455


0xc44b:	add	rsp, 0x48
0xc44f:	ret	


0xc455:	call	0x2850


0xc5cf:	mov	rcx, qword ptr [rsp + 0x38]
0xc5d4:	xor	rcx, qword ptr fs:[0x28]
0xc5dd:	jne	0xc5e9


0xc5df:	add	rsp, 0x48
0xc5e3:	ret	


0xc5e9:	call	0x2850


0xc4fe:	mov	rsi, qword ptr [rsp + 0x38]
0xc503:	xor	rsi, qword ptr fs:[0x28]
0xc50c:	jne	0xc513


0xc50e:	add	rsp, 0x48
0xc512:	ret	


0xc513:	call	0x2850


0xbf4d:	add	rsp, 0x20
0xbf51:	mov	eax, dword ptr [rsp + 0x18]
0xbf55:	mov	dword ptr [r13], eax
0xbf59:	add	rsp, 0x28
0xbf5d:	mov	rax, r12
0xbf60:	pop	rbx
0xbf61:	pop	rbp
0xbf62:	pop	r12
0xbf64:	pop	r13
0xbf66:	pop	r14
0xbf68:	pop	r15
0xbf6a:	ret	


0x3e43:	mov	rdx, r12
0x3e46:	mov	rbp, rax
0x3e49:	mov	esi, 8
0x3e4e:	xor	edi, edi
0x3e50:	call	0xc340


0x3e55:	mov	r8, rbp
0x3e58:	mov	rdx, rbx
0x3e5b:	mov	rcx, rax
0x3e5e:	pop	rbx
0x3e5f:	pop	rbp
0x3e60:	pop	r12
0x3e62:	xor	esi, esi
0x3e64:	xor	edi, edi
0x3e66:	xor	eax, eax
0x3e68:	jmp	0x2a90


0x4003:	mov	rdx, r15
0x4006:	mov	rsi, rbp
0x4009:	mov	rdi, rbx
0x400c:	call	0x3e90


0x4011:	call	r13


0x4014:	mov	rax, -1
0x401b:	jmp	0x3fe6


0x115fd:	add	rbx, 1
0x11601:	cmp	rbp, rbx
0x11604:	jne	0x115f0


0x115f0:	mov	rdx, r15
0x115f3:	mov	rsi, r14
0x115f6:	mov	edi, r13d
0x115f9:	call	qword ptr [r12 + rbx*8]






0x10700:	mov	rdx, qword ptr [rdi + 8]
0x10704:	add	rdx, 0xf
0x10708:	and	rdx, 0xfffffffffffffff0
0x1070c:	lea	r11, [rdx + 0x10]
0x10710:	mov	qword ptr [rdi + 8], r11
0x10714:	fld	xword ptr [rdx]
0x10716:	fstp	xword ptr [rax + 0x10]
0x10719:	nop	dword ptr [rax]
0x10720:	add	rcx, 1
0x10724:	add	rax, 0x20
0x10728:	cmp	qword ptr [rsi], rcx
0x1072b:	ja	0x106e8


0x10820:	mov	r11d, dword ptr [rdi]
0x10823:	cmp	r11d, 0x2f
0x10827:	ja	0x1086c


0x107c4:	mov	r11d, dword ptr [rdi]
0x107c7:	cmp	r11d, 0x2f
0x107cb:	ja	0x1085b


0x107f2:	mov	r11d, dword ptr [rdi + 4]
0x107f6:	cmp	r11d, 0xaf
0x107fd:	ja	0x108ad


0x10736:	mov	r11d, dword ptr [rdi]
0x10739:	cmp	r11d, 0x2f
0x1073d:	ja	0x1087a


0x1075a:	mov	r11d, dword ptr [rdi]
0x1075d:	cmp	r11d, 0x2f
0x10761:	ja	0x1089c


0x1077c:	mov	r11d, dword ptr [rdi]
0x1077f:	cmp	r11d, 0x2f
0x10783:	ja	0x1088b


0x1079e:	mov	r11d, dword ptr [rdi]
0x107a1:	cmp	r11d, 0x2f
0x107a5:	ja	0x1084a


0x8003:	mov	rax, qword ptr [r13 - 0x30]
0x8007:	mov	rdx, qword ptr [r13 - 0xa0]
0x800e:	mov	qword ptr [r11 + 0x58], 0
0x8016:	mov	qword ptr [r11 + 0x60], 0
0x801e:	mov	dword ptr [r11 + 0x1c], 2
0x8026:	mov	qword ptr [r11 + 0x48], rdx
0x802a:	mov	qword ptr [r11 + 0x50], rax
0x802e:	jmp	0x6f20


0x7e83:	mov	rax, qword ptr [r13]
0x7e87:	mov	qword ptr [r11 + 8], 0
0x7e8f:	mov	dword ptr [r11 + 0x10], eax
0x7e93:	jmp	0x6f20


0x7c85:	mov	dword ptr [rsp + 0x104], 0
0x7c90:	mov	dword ptr [rsp + 0x18], 0
0x7c98:	xor	r10d, r10d
0x7c9b:	mov	qword ptr [rsp + 0x20], 0
0x7ca4:	mov	qword ptr [rsp + 0x28], 0
0x7cad:	mov	r14d, 1
0x7cb3:	mov	qword ptr [rsp + 8], 0
0x7cbc:	mov	qword ptr [rsp + 0x10], 0
0x7cc5:	jmp	0x6f20


0x7d88:	mov	rax, qword ptr [r13 - 0x38]
0x7d8c:	mov	qword ptr [r11 + 0x38], rax
0x7d90:	mov	rax, qword ptr [r13 + 8]
0x7d94:	mov	qword ptr [r11 + 0x40], rax
0x7d98:	jmp	0x6f20


0x7989:	mov	dword ptr [rsp + 0x104], 0
0x7994:	mov	dword ptr [rsp + 0x18], 0
0x799c:	xor	r10d, r10d
0x799f:	mov	qword ptr [rsp + 0x20], 0
0x79a8:	mov	qword ptr [rsp + 0x28], 0
0x79b1:	xor	r14d, r14d
0x79b4:	mov	qword ptr [rsp + 8], 1
0x79bd:	mov	qword ptr [rsp + 0x10], 0
0x79c6:	jmp	0x6f20


0x778b:	mov	rax, qword ptr [r13 - 0x30]
0x778f:	mov	dword ptr [rsp + 0x104], 0
0x779a:	mov	qword ptr [rsp + 8], rax
0x779f:	mov	dword ptr [rsp + 0x18], 0
0x77a7:	xor	r10d, r10d
0x77aa:	mov	qword ptr [rsp + 0x20], 0
0x77b3:	mov	qword ptr [rsp + 0x28], 0
0x77bc:	xor	r14d, r14d
0x77bf:	mov	qword ptr [rsp + 0x10], 0
0x77c8:	jmp	0x6f20


0x820c:	mov	dword ptr [rsp + 0x58], r9d
0x8211:	mov	qword ptr [rsp + 0x50], r10
0x8216:	mov	edx, 5
0x821b:	add	qword ptr [r11 + 0xd0], 1
0x8223:	mov	qword ptr [rsp + 0x48], r11
0x8228:	lea	rsi, [rip + 0xaf2b]
0x822f:	jmp	0x79f9


0x780f:	mov	rax, qword ptr [r13 - 0x30]
0x7813:	mov	dword ptr [rsp + 0x104], 0
0x781e:	mov	qword ptr [rsp + 0x20], rax
0x7823:	mov	dword ptr [rsp + 0x18], 0
0x782b:	jmp	0x77e9


0x7b90:	mov	dword ptr [rsp + 0x104], 0
0x7b9b:	mov	rax, qword ptr [r13 - 0x38]
0x7b9f:	jmp	0x779a


0x7a91:	mov	dword ptr [rsp + 0x58], r9d
0x7a96:	mov	qword ptr [rsp + 0x50], r10
0x7a9b:	sub	rsp, 8
0x7a9f:	push	qword ptr [r13 + 0x10]
0x7aa3:	push	qword ptr [r13 + 8]
0x7aa7:	mov	rdi, r11
0x7aaa:	push	qword ptr [r13]
0x7aae:	mov	qword ptr [rsp + 0x68], r11
0x7ab3:	call	0x5f70


0x8093:	mov	rax, qword ptr [r13 - 0x30]
0x8097:	mov	rdx, qword ptr [r13 - 0xa0]
0x809e:	mov	qword ptr [r11 + 0x58], 0
0x80a6:	mov	qword ptr [r11 + 0x60], 0
0x80ae:	mov	qword ptr [r11 + 0x50], rax
0x80b2:	mov	rax, qword ptr [r13]
0x80b6:	mov	qword ptr [r11 + 0x48], rdx
0x80ba:	mov	dword ptr [r11 + 0x1c], eax
0x80be:	jmp	0x6f20


0x7e98:	mov	eax, dword ptr [r13 - 0x38]
0x7e9c:	add	eax, 0xe10
0x7ea1:	mov	dword ptr [r11 + 0x18], eax
0x7ea5:	jmp	0x6f20


0x711b:	mov	rax, qword ptr [r13 - 0x38]
0x711f:	mov	rsi, qword ptr [r13 - 0x18]
0x7123:	mov	rdi, qword ptr [r13 - 0x10]
0x7127:	mov	r8d, dword ptr [r13 - 8]
0x712b:	mov	ecx, dword ptr [r11 + 0x98]
0x7132:	mov	rdx, qword ptr [r11 + 0x90]
0x7139:	mov	qword ptr [rsp + 0x48], rax
0x713e:	mov	rax, qword ptr [r13 - 0x30]
0x7142:	mov	qword ptr [rsp + 0x50], rax
0x7147:	mov	rax, qword ptr [r13 - 0x28]
0x714b:	mov	qword ptr [rsp + 0x58], rax
0x7150:	mov	rax, qword ptr [r13 - 0x20]
0x7154:	mov	qword ptr [rsp + 0x60], rax
0x7159:	mov	rax, qword ptr [r11 + 0x88]
0x7160:	mov	qword ptr [rsp + 0x70], rax
0x7165:	mov	rax, qword ptr [r11 + 0x80]
0x716c:	mov	qword ptr [rsp + 0x80], rax
0x7174:	mov	rax, qword ptr [r11 + 0x78]
0x7178:	mov	qword ptr [rsp + 0x88], rax
0x7180:	mov	rax, qword ptr [r11 + 0x70]
0x7184:	mov	qword ptr [rsp + 0x68], rax
0x7189:	mov	rax, qword ptr [r11 + 0x68]
0x718d:	mov	qword ptr [rsp + 0x78], rax
0x7192:	mov	eax, dword ptr [r13]
0x7196:	test	eax, eax
0x7198:	js	0x8492


0x819c:	mov	qword ptr [rsp + 0x58], r11
0x81a1:	mov	dword ptr [rsp + 0x50], r9d
0x81a6:	mov	edx, 5
0x81ab:	mov	qword ptr [rsp + 0x48], r10
0x81b0:	lea	rsi, [rip + 0xafac]
0x81b7:	jmp	0x810b


0x7d9d:	mov	rax, qword ptr [r13 - 0x70]
0x7da1:	movabs	rdx, 0x8000000000000000
0x7dab:	mov	qword ptr [r11 + 0x38], rax
0x7daf:	mov	rax, qword ptr [r13 - 0x30]
0x7db3:	mov	rcx, rax
0x7db6:	neg	rcx
0x7db9:	cmp	rax, rdx
0x7dbc:	mov	qword ptr [r11 + 0x40], rcx
0x7dc0:	je	0x7258


0x7d20:	mov	rax, qword ptr [r13 - 0x30]
0x7d24:	mov	qword ptr [r11 + 0x40], rax
0x7d28:	mov	rax, qword ptr [r13]
0x7d2c:	mov	qword ptr [r11 + 0x38], rax
0x7d30:	jmp	0x6f20


0x7e20:	mov	dword ptr [rsp + 0x104], 0
0x7e2b:	mov	r14, qword ptr [r13 - 0x38]
0x7e2f:	jmp	0x7675


0x7c20:	mov	dword ptr [rsp + 0x104], 0
0x7c2b:	mov	dword ptr [rsp + 0x18], 0
0x7c33:	mov	r10d, 1
0x7c39:	mov	qword ptr [rsp + 0x20], 0
0x7c42:	mov	qword ptr [rsp + 0x28], 0
0x7c4b:	xor	r14d, r14d
0x7c4e:	mov	qword ptr [rsp + 8], 0
0x7c57:	mov	qword ptr [rsp + 0x10], 0
0x7c60:	jmp	0x6f20


0x7624:	mov	rax, qword ptr [r13 - 0x30]
0x7628:	mov	dword ptr [rsp + 0x104], 0
0x7633:	mov	qword ptr [rsp + 0x28], rax
0x7638:	mov	dword ptr [rsp + 0x18], 0
0x7640:	xor	r10d, r10d
0x7643:	mov	qword ptr [rsp + 0x20], 0
0x764c:	mov	qword ptr [rsp + 8], 0
0x7655:	xor	r14d, r14d
0x7658:	mov	qword ptr [rsp + 0x10], 0
0x7661:	jmp	0x6f20


0x7ba4:	mov	dword ptr [rsp + 0x68], r9d
0x7ba9:	mov	qword ptr [rsp + 0x60], r10
0x7bae:	sub	rsp, 8
0x7bb2:	push	qword ptr [r13 - 0x28]
0x7bb6:	push	qword ptr [r13 - 0x30]
0x7bba:	mov	rdi, r11
0x7bbd:	push	qword ptr [r13 - 0x38]
0x7bc1:	mov	qword ptr [rsp + 0x78], r11
0x7bc6:	call	0x5f70


0x76a9:	mov	rax, qword ptr [r13]
0x76ad:	xor	r8d, r8d
0x76b0:	mov	rdx, qword ptr [r13 + 0x10]
0x76b4:	mov	rcx, qword ptr [r13 + 0x18]
0x76b8:	mov	rsi, qword ptr [r13 + 0x20]
0x76bc:	mov	rdi, qword ptr [r13 + 0x28]
0x76c0:	mov	qword ptr [rsp + 0x48], rax
0x76c5:	mov	rax, qword ptr [r13 + 8]
0x76c9:	mov	qword ptr [rsp + 0x50], rax
0x76ce:	mov	eax, dword ptr [r13 + 0x30]
0x76d2:	add	eax, dword ptr [r11 + 0x98]
0x76d9:	jo	0x7c14


0x7eaa:	mov	eax, dword ptr [r13]
0x7eae:	add	eax, 0xe10
0x7eb3:	mov	dword ptr [r11 + 0x18], eax
0x7eb7:	jmp	0x6f20


0x782d:	mov	r14, qword ptr [r13 + 8]
0x7831:	xor	r10d, r10d
0x7834:	jmp	0x6f20


0x78ae:	mov	rax, qword ptr [r13]
0x78b2:	mov	dword ptr [rsp + 0x104], 0
0x78bd:	mov	qword ptr [rsp + 0x10], rax
0x78c2:	jmp	0x7880


0x7b2f:	mov	dword ptr [rsp + 0x104], 0
0x7b3a:	mov	rax, qword ptr [r13 - 0x38]
0x7b3e:	jmp	0x7633


0x7f30:	mov	rax, qword ptr [r13 - 0x38]
0x7f34:	mov	dword ptr [r11 + 0x18], eax
0x7f38:	jmp	0x6de8


0x8033:	mov	rax, qword ptr [r13 - 0x30]
0x8037:	mov	qword ptr [r11 + 0x50], 0
0x803f:	mov	qword ptr [r11 + 0x58], 0
0x8047:	mov	qword ptr [r11 + 0x60], 0
0x804f:	mov	dword ptr [r11 + 0x1c], 2
0x8057:	mov	qword ptr [r11 + 0x48], rax
0x805b:	jmp	0x6f20


0x8234:	mov	dword ptr [rsp + 0x58], r9d
0x8239:	mov	qword ptr [rsp + 0x50], r10
0x823e:	mov	edx, 5
0x8243:	add	qword ptr [r11 + 0xb8], 1
0x824b:	mov	qword ptr [rsp + 0x48], r11
0x8250:	lea	rsi, [rip + 0xaefd]
0x8257:	jmp	0x79f9


0x7e34:	mov	rax, qword ptr [r13 - 0x30]
0x7e38:	mov	byte ptr [r11 + 0xe0], 1
0x7e40:	mov	qword ptr [r11 + 8], rax
0x7e44:	mov	rax, qword ptr [r13]
0x7e48:	mov	dword ptr [r11 + 0x10], eax
0x7e4c:	jmp	0x6f20


0x7d35:	mov	rax, qword ptr [r13 - 0xa8]
0x7d3c:	movdqu	xmm0, xmmword ptr [r13]
0x7d42:	mov	qword ptr [r11 + 0x38], rax
0x7d46:	mov	rax, qword ptr [r13 - 0x68]
0x7d4a:	movups	xmmword ptr [r11 + 0x20], xmm0
0x7d4f:	mov	qword ptr [r11 + 0x40], rax
0x7d53:	mov	rax, qword ptr [r13 + 0x10]
0x7d57:	mov	qword ptr [r11 + 0x30], rax
0x7d5b:	jmp	0x6f20


0x7839:	xor	edx, edx
0x783b:	mov	rax, qword ptr [r13 - 0x30]
0x783f:	mov	qword ptr [rsp + 0x100], 0
0x784b:	imul	rax, qword ptr [r13]
0x7850:	pxor	xmm0, xmm0
0x7854:	movaps	xmmword ptr [rsp + 0xd0], xmm0
0x785c:	movaps	xmmword ptr [rsp + 0xe0], xmm0
0x7864:	movaps	xmmword ptr [rsp + 0xf0], xmm0
0x786c:	jo	0x7b7c


0x81bc:	mov	dword ptr [rsp + 0x58], r9d
0x81c1:	mov	qword ptr [rsp + 0x50], r10
0x81c6:	mov	edx, 5
0x81cb:	add	qword ptr [r11 + 0xb0], 1
0x81d3:	mov	qword ptr [rsp + 0x48], r11
0x81d8:	lea	rsi, [rip + 0xaf80]
0x81df:	jmp	0x79f9


0x7a3c:	mov	dword ptr [rsp + 0x58], r9d
0x7a41:	mov	qword ptr [rsp + 0x50], r10
0x7a46:	mov	edx, 5
0x7a4b:	add	qword ptr [r11 + 0xc8], 1
0x7a53:	mov	qword ptr [rsp + 0x48], r11
0x7a58:	lea	rsi, [rip + 0xb6f0]
0x7a5f:	jmp	0x79f9


0x7f3d:	mov	dword ptr [r11 + 0x18], 0x6270
0x7f45:	jmp	0x6f20


0x7ebc:	movzx	esi, byte ptr [r13 - 0x38]
0x7ec1:	mov	rcx, qword ptr [r13 - 0x28]
0x7ec5:	lea	rdi, [r11 + 0x18]
0x7ec9:	mov	rdx, qword ptr [r13 - 0x30]
0x7ecd:	mov	r8, qword ptr [r13]
0x7ed1:	mov	dword ptr [rsp + 0x58], r9d
0x7ed6:	mov	qword ptr [rsp + 0x50], r10
0x7edb:	mov	qword ptr [rsp + 0x48], r11
0x7ee0:	call	0x6320


0x80c3:	mov	rax, qword ptr [r13 - 0x30]
0x80c7:	mov	qword ptr [r11 + 0x50], 0
0x80cf:	mov	qword ptr [r11 + 0x58], 0
0x80d7:	mov	qword ptr [r11 + 0x60], 0
0x80df:	mov	qword ptr [r11 + 0x48], rax
0x80e3:	mov	rax, qword ptr [r13]
0x80e7:	mov	dword ptr [r11 + 0x1c], eax
0x80eb:	jmp	0x6f20


0x78c4:	mov	rcx, qword ptr [r13 - 0xd0]
0x78cb:	movzx	eax, byte ptr [r11 + 0xd9]
0x78d3:	cmp	rcx, 3
0x78d7:	jle	0x8438


0x7b43:	xor	edx, edx
0x7b45:	mov	rax, qword ptr [r13 - 0x38]
0x7b49:	mov	qword ptr [rsp + 0x100], 0
0x7b55:	imul	rax, qword ptr [r13]
0x7b5a:	pxor	xmm0, xmm0
0x7b5e:	movaps	xmmword ptr [rsp + 0xd0], xmm0
0x7b66:	movaps	xmmword ptr [rsp + 0xe0], xmm0
0x7b6e:	movaps	xmmword ptr [rsp + 0xf0], xmm0
0x7b76:	jno	0x7872


0x8146:	lea	rsi, [rip + 0xb01f]
0x814d:	xor	edi, edi
0x814f:	mov	edx, 5
0x8154:	mov	qword ptr [rsp + 0x58], r11
0x8159:	mov	dword ptr [rsp + 0x50], r9d
0x815e:	mov	qword ptr [rsp + 0x48], r10
0x8163:	call	0x2820


0x7f4a:	mov	rax, qword ptr [r13]
0x7f4e:	mov	dword ptr [r11 + 0x18], eax
0x7f52:	jmp	0x6f20


0x79cb:	movdqu	xmm0, xmmword ptr [r13]
0x79d1:	lea	rsi, [rip + 0xb761]
0x79d8:	mov	dword ptr [rsp + 0x58], r9d
0x79dd:	mov	qword ptr [rsp + 0x50], r10
0x79e2:	mov	edx, 5
0x79e7:	movups	xmmword ptr [r11 + 0x58], xmm0
0x79ec:	mov	byte ptr [r11 + 0xa0], 1
0x79f4:	mov	qword ptr [rsp + 0x48], r11
0x79f9:	xor	edi, edi
0x79fb:	call	0x2820


0x7cca:	mov	rax, qword ptr [r13 - 0x60]
0x7cce:	movabs	rdx, 0x8000000000000000
0x7cd8:	movdqu	xmm0, xmmword ptr [r13 - 0x70]
0x7cde:	mov	qword ptr [r11 + 0x30], rax
0x7ce2:	mov	rax, qword ptr [r13 - 0x30]
0x7ce6:	movups	xmmword ptr [r11 + 0x20], xmm0
0x7ceb:	mov	rcx, rax
0x7cee:	neg	rcx
0x7cf1:	cmp	rax, rdx
0x7cf4:	mov	qword ptr [r11 + 0x38], rcx
0x7cf8:	je	0x7258


0x77cd:	mov	rax, qword ptr [r13 - 0x38]
0x77d1:	mov	dword ptr [rsp + 0x104], 0
0x77dc:	mov	qword ptr [rsp + 0x20], rax
0x77e1:	mov	eax, dword ptr [r13 - 0x30]
0x77e5:	mov	dword ptr [rsp + 0x18], eax
0x77e9:	mov	qword ptr [rsp + 0x28], 0
0x77f2:	mov	qword ptr [rsp + 8], 0
0x77fb:	xor	r10d, r10d
0x77fe:	mov	qword ptr [rsp + 0x10], 0
0x7807:	xor	r14d, r14d
0x780a:	jmp	0x6f20


0x7fd0:	mov	rax, qword ptr [r13 - 0x38]
0x7fd4:	mov	rdx, qword ptr [r13 - 0xa0]
0x7fdb:	mov	rcx, qword ptr [r13 - 0x110]
0x7fe2:	mov	dword ptr [r11 + 0x1c], 2
0x7fea:	mov	qword ptr [r11 + 0x58], rax
0x7fee:	movsxd	rax, dword ptr [r13 - 0x30]
0x7ff2:	mov	qword ptr [r11 + 0x48], rcx
0x7ff6:	mov	qword ptr [r11 + 0x50], rdx
0x7ffa:	mov	qword ptr [r11 + 0x60], rax
0x7ffe:	jmp	0x6f20


0x7e51:	mov	rax, qword ptr [r13 - 0x38]
0x7e55:	mov	byte ptr [r11 + 0xe0], 1
0x7e5d:	mov	qword ptr [r11 + 8], rax
0x7e61:	mov	rax, qword ptr [r13]
0x7e65:	mov	dword ptr [r11 + 0x10], eax
0x7e69:	jmp	0x6f20


0x7ad0:	mov	r14, qword ptr [r13 + 8]
0x7ad4:	jmp	0x6f20


0x7953:	mov	rax, qword ptr [r13 - 0x68]
0x7957:	mov	qword ptr [r11 + 0x38], rax
0x795b:	mov	rax, qword ptr [r13 + 8]
0x795f:	mov	qword ptr [r11 + 0x40], rax
0x7963:	jmp	0x6f20


0x7f57:	mov	dword ptr [r11 + 0x14], 1
0x7f5f:	add	qword ptr [r11 + 0xc0], 1
0x7f67:	jmp	0x6f20


0x7ad9:	mov	dword ptr [rsp + 0x104], 0
0x7ae4:	mov	rax, qword ptr [r13 - 0x38]
0x7ae8:	jmp	0x781e


0x8060:	mov	rax, qword ptr [r13 - 0x38]
0x8064:	mov	rdx, qword ptr [r13 - 0xa0]
0x806b:	mov	rcx, qword ptr [r13 - 0x110]
0x8072:	mov	qword ptr [r11 + 0x58], rax
0x8076:	movsxd	rax, dword ptr [r13 - 0x30]
0x807a:	mov	qword ptr [r11 + 0x48], rcx
0x807e:	mov	qword ptr [r11 + 0x50], rdx
0x8082:	mov	qword ptr [r11 + 0x60], rax
0x8086:	mov	rax, qword ptr [r13]
0x808a:	mov	dword ptr [r11 + 0x1c], eax
0x808e:	jmp	0x6f20


0x7a61:	mov	dword ptr [rsp + 0x58], r9d
0x7a66:	mov	qword ptr [rsp + 0x50], r10
0x7a6b:	mov	edx, 5
0x7a70:	add	qword ptr [r11 + 0xc8], 1
0x7a78:	add	qword ptr [r11 + 0xa8], 1
0x7a80:	lea	rsi, [rip + 0xb6c4]
0x7a87:	mov	qword ptr [rsp + 0x48], r11
0x7a8c:	jmp	0x79f9


0x6de0:	mov	dword ptr [r11 + 0x18], 0x6270
0x6de8:	mov	rax, qword ptr [r13]
0x6dec:	xor	r8d, r8d
0x6def:	mov	rdx, qword ptr [r13 + 0x10]
0x6df3:	mov	rcx, qword ptr [r13 + 0x18]
0x6df7:	mov	rsi, qword ptr [r13 + 0x20]
0x6dfb:	mov	rdi, qword ptr [r13 + 0x28]
0x6dff:	mov	qword ptr [rsp + 0x48], rax
0x6e04:	mov	rax, qword ptr [r13 + 8]
0x6e08:	mov	qword ptr [rsp + 0x50], rax
0x6e0d:	mov	eax, dword ptr [r13 + 0x30]
0x6e11:	add	eax, dword ptr [r11 + 0x98]
0x6e18:	jo	0x8755


0x7d60:	mov	rax, qword ptr [r13 - 0x68]
0x7d64:	movdqu	xmm0, xmmword ptr [r13]
0x7d6a:	mov	qword ptr [r11 + 0x40], rax
0x7d6e:	mov	rax, qword ptr [r13 - 0x38]
0x7d72:	movups	xmmword ptr [r11 + 0x20], xmm0
0x7d77:	mov	qword ptr [r11 + 0x38], rax
0x7d7b:	mov	rax, qword ptr [r13 + 0x10]
0x7d7f:	mov	qword ptr [r11 + 0x30], rax
0x7d83:	jmp	0x6f20


0x81e4:	mov	dword ptr [rsp + 0x58], r9d
0x81e9:	mov	qword ptr [rsp + 0x50], r10
0x81ee:	mov	edx, 5
0x81f3:	add	qword ptr [r11 + 0xa8], 1
0x81fb:	mov	qword ptr [rsp + 0x48], r11
0x8200:	lea	rsi, [rip + 0x95b4]
0x8207:	jmp	0x79f9


0x75e1:	mov	r10, qword ptr [r13 - 0x30]
0x75e5:	mov	dword ptr [rsp + 0x104], 0
0x75f0:	mov	dword ptr [rsp + 0x18], 0
0x75f8:	mov	qword ptr [rsp + 0x20], 0
0x7601:	xor	r14d, r14d
0x7604:	mov	qword ptr [rsp + 0x28], 0
0x760d:	mov	qword ptr [rsp + 8], 0
0x7616:	mov	qword ptr [rsp + 0x10], 0
0x761f:	jmp	0x6f20


0x7666:	mov	r14, qword ptr [r13 - 0x30]
0x766a:	mov	dword ptr [rsp + 0x104], 0
0x7675:	mov	dword ptr [rsp + 0x18], 0
0x767d:	mov	qword ptr [rsp + 0x20], 0
0x7686:	xor	r10d, r10d
0x7689:	mov	qword ptr [rsp + 0x28], 0
0x7692:	mov	qword ptr [rsp + 8], 0
0x769b:	mov	qword ptr [rsp + 0x10], 0
0x76a4:	jmp	0x6f20


0x7c65:	mov	r14, -1
0x7c6c:	jmp	0x6f20


0x7de8:	mov	rax, qword ptr [r13 - 0x68]
0x7dec:	mov	qword ptr [r11 + 0x40], rax
0x7df0:	mov	rax, qword ptr [r13 - 0x38]
0x7df4:	mov	qword ptr [r11 + 0x38], rax
0x7df8:	mov	rax, qword ptr [r13 + 8]
0x7dfc:	mov	rdx, rax
0x7dff:	neg	rdx
0x7e02:	mov	qword ptr [r11 + 0x28], rdx
0x7e06:	movabs	rdx, 0x8000000000000000
0x7e10:	cmp	rax, rdx
0x7e13:	jne	0x7d53


0x7968:	mov	dword ptr [rsp + 0x104], 0
0x7973:	mov	dword ptr [rsp + 0x18], 0
0x797b:	mov	qword ptr [rsp + 0x20], 1
0x7984:	jmp	0x77e9


0x7f6c:	mov	rax, qword ptr [r13]
0x7f70:	mov	dword ptr [r11 + 0x14], eax
0x7f74:	jmp	0x6f20


0x7aed:	mov	dword ptr [rsp + 0x104], 0
0x7af8:	mov	dword ptr [rsp + 0x18], 0
0x7b00:	xor	r10d, r10d
0x7b03:	mov	qword ptr [rsp + 0x20], 0
0x7b0c:	mov	qword ptr [rsp + 0x28], 1
0x7b15:	xor	r14d, r14d
0x7b18:	mov	qword ptr [rsp + 8], 0
0x7b21:	mov	qword ptr [rsp + 0x10], 0
0x7b2a:	jmp	0x6f20


0x7e6e:	mov	rax, qword ptr [r13 - 0x38]
0x7e72:	mov	qword ptr [r11 + 8], 0
0x7e7a:	mov	dword ptr [r11 + 0x10], eax
0x7e7e:	jmp	0x6f20


0x80f0:	lea	rsi, [rip + 0xb07c]
0x80f7:	mov	qword ptr [rsp + 0x58], r11
0x80fc:	mov	dword ptr [rsp + 0x50], r9d
0x8101:	mov	qword ptr [rsp + 0x48], r10
0x8106:	mov	edx, 5
0x810b:	xor	edi, edi
0x810d:	call	0x2820


0x7c71:	mov	dword ptr [rsp + 0x104], 0
0x7c7c:	mov	r10, qword ptr [r13 - 0x38]
0x7c80:	jmp	0x75f0


0x7f79:	add	qword ptr [r11 + 0xd0], 1
0x7f81:	movzx	esi, byte ptr [r13 - 0x38]
0x7f86:	lea	rdi, [r11 + 0x18]
0x7f8a:	mov	rcx, qword ptr [r13 - 0x28]
0x7f8e:	mov	rdx, qword ptr [r13 - 0x30]
0x7f92:	mov	r8, qword ptr [r13]
0x7f96:	mov	dword ptr [rsp + 0x58], r9d
0x7f9b:	mov	qword ptr [rsp + 0x50], r10
0x7fa0:	mov	qword ptr [rsp + 0x48], r11
0x7fa5:	call	0x6320


0xca20:	mov	r13, qword ptr [rbx + 0x10]
0xca24:	mov	r12, qword ptr [rbx + 8]
0xca28:	lea	rsi, [rip + 0x7f57]
0xca2f:	mov	rbx, qword ptr [rbx]
0xca32:	mov	edx, 5
0xca37:	xor	edi, edi
0xca39:	call	0x2820


0xcb60:	mov	r9, qword ptr [rbx + 0x10]
0xcb64:	mov	r13, qword ptr [rbx + 0x30]
0xcb68:	lea	rsi, [rip + 0x7fb9]
0xcb6f:	mov	r12, qword ptr [rbx + 0x28]
0xcb73:	mov	r15, qword ptr [rbx + 0x20]
0xcb77:	mov	edx, 5
0xcb7c:	mov	r14, qword ptr [rbx + 0x18]
0xcb80:	mov	r8, qword ptr [rbx + 8]
0xcb84:	xor	edi, edi
0xcb86:	mov	qword ptr [rsp + 8], r9
0xcb8b:	mov	rbx, qword ptr [rbx]
0xcb8e:	mov	qword ptr [rsp], r8
0xcb92:	call	0x2820


0xc940:	mov	r10, qword ptr [rbx + 0x40]
0xc944:	mov	r9, qword ptr [rbx + 0x38]
0xc948:	lea	rsi, [rip + 0x8239]
0xc94f:	mov	rax, qword ptr [rbx + 0x10]
0xc953:	mov	r8, qword ptr [rbx + 8]
0xc957:	mov	edx, 5
0xc95c:	mov	r13, qword ptr [rbx + 0x30]
0xc960:	mov	r12, qword ptr [rbx + 0x28]
0xc964:	mov	r15, qword ptr [rbx + 0x20]
0xc968:	mov	r14, qword ptr [rbx + 0x18]
0xc96c:	mov	rbx, qword ptr [rbx]
0xc96f:	mov	qword ptr [rsp + 0x18], r10
0xc974:	mov	qword ptr [rsp + 0x10], r9
0xc979:	mov	qword ptr [rsp], rax
0xc97d:	mov	qword ptr [rsp + 8], r8
0xc982:	xor	edi, edi
0xc984:	call	0x2820


0xc906:	add	rsp, 0x28
0xc90a:	pop	rbx
0xc90b:	pop	rbp
0xc90c:	pop	r12
0xc90e:	pop	r13
0xc910:	pop	r14
0xc912:	pop	r15
0xc914:	ret	


0xc9d8:	mov	r12, qword ptr [rbx + 8]
0xc9dc:	lea	rsi, [rip + 0x7f8c]
0xc9e3:	mov	rbx, qword ptr [rbx]
0xc9e6:	mov	edx, 5
0xc9eb:	xor	edi, edi
0xc9ed:	call	0x2820


0xcac8:	mov	r15, qword ptr [rbx + 0x20]
0xcacc:	lea	rsi, [rip + 0x8005]
0xcad3:	mov	edx, 5
0xcad8:	xor	edi, edi
0xcada:	mov	r14, qword ptr [rbx + 0x18]
0xcade:	mov	r13, qword ptr [rbx + 0x10]
0xcae2:	mov	r12, qword ptr [rbx + 8]
0xcae6:	mov	rbx, qword ptr [rbx]
0xcae9:	call	0x2820


0xca70:	lea	rsi, [rip + 0x8041]
0xca77:	mov	edx, 5
0xca7c:	xor	edi, edi
0xca7e:	mov	r14, qword ptr [rbx + 0x18]
0xca82:	mov	r13, qword ptr [rbx + 0x10]
0xca86:	mov	r12, qword ptr [rbx + 8]
0xca8a:	mov	rbx, qword ptr [rbx]
0xca8d:	call	0x2820


0xcaf8:	mov	r8, qword ptr [rbx + 8]
0xcafc:	mov	r12, qword ptr [rbx + 0x28]
0xcb00:	lea	rsi, [rip + 0x7ff9]
0xcb07:	mov	r15, qword ptr [rbx + 0x20]
0xcb0b:	mov	r14, qword ptr [rbx + 0x18]
0xcb0f:	mov	edx, 5
0xcb14:	mov	r13, qword ptr [rbx + 0x10]
0xcb18:	xor	edi, edi
0xcb1a:	mov	rbx, qword ptr [rbx]
0xcb1d:	mov	qword ptr [rsp], r8
0xcb21:	call	0x2820


0xc890:	mov	r9, qword ptr [rbx + 0x38]
0xc894:	mov	rax, qword ptr [rbx + 0x10]
0xc898:	lea	rsi, [rip + 0x82b9]
0xc89f:	mov	r8, qword ptr [rbx + 8]
0xc8a3:	mov	edx, 5
0xc8a8:	xor	edi, edi
0xc8aa:	mov	r13, qword ptr [rbx + 0x30]
0xc8ae:	mov	r12, qword ptr [rbx + 0x28]
0xc8b2:	mov	qword ptr [rsp + 0x10], r9
0xc8b7:	mov	r15, qword ptr [rbx + 0x20]
0xc8bb:	mov	r14, qword ptr [rbx + 0x18]
0xc8bf:	mov	qword ptr [rsp], rax
0xc8c3:	mov	qword ptr [rsp + 8], r8
0xc8c8:	mov	rbx, qword ptr [rbx]
0xc8cb:	call	0x2820


0xc998:	mov	rbx, qword ptr [rbx]
0xc99b:	lea	rsi, [rip + 0x7fbd]
0xc9a2:	mov	edx, 5
0xc9a7:	xor	edi, edi
0xc9a9:	call	0x2820


0x10310:	mov	byte ptr [rax], r14b
0x10313:	mov	rbx, r14
0x10316:	jmp	0x10034


0x101e0:	mov	qword ptr [rax], r14
0x101e3:	mov	rbx, r14
0x101e6:	jmp	0x10034


0x10330:	mov	word ptr [rax], r14w
0x10334:	mov	rbx, r14
0x10337:	jmp	0x10034


0x10320:	mov	dword ptr [rax], r14d
0x10323:	mov	rbx, r14
0x10326:	jmp	0x10034


0xff60:	mov	rax, qword ptr [r13 + 0x50]
0xff64:	lea	rdi, [r15 + r14]
0xff68:	shl	rax, 5
0xff6c:	add	rax, qword ptr [rbp - 0x3a8]
0xff73:	movsx	r9d, byte ptr [rax + 0x10]
0xff78:	mov	eax, dword ptr [rbp - 0x3e0]
0xff7e:	cmp	eax, 1
0xff81:	jne	0xfc5e


0xfb00:	mov	rax, qword ptr [r13 + 0x50]
0xfb04:	lea	rdi, [r15 + r14]
0xfb08:	shl	rax, 5
0xfb0c:	add	rax, qword ptr [rbp - 0x3a8]
0xfb13:	mov	r9, qword ptr [rax + 0x10]
0xfb17:	mov	eax, dword ptr [rbp - 0x3e0]
0xfb1d:	cmp	eax, 1
0xfb20:	je	0xffe8


0xfd60:	mov	rax, qword ptr [r13 + 0x50]
0xfd64:	lea	rdi, [r15 + r14]
0xfd68:	shl	rax, 5
0xfd6c:	add	rax, qword ptr [rbp - 0x3a8]
0xfd73:	fld	xword ptr [rax + 0x10]
0xfd76:	mov	eax, dword ptr [rbp - 0x3e0]
0xfd7c:	cmp	eax, 1
0xfd7f:	je	0x103b0


0xfea8:	mov	rax, qword ptr [r13 + 0x50]
0xfeac:	lea	rdi, [r15 + r14]
0xfeb0:	shl	rax, 5
0xfeb4:	add	rax, qword ptr [rbp - 0x3a8]
0xfebb:	movsx	r9d, word ptr [rax + 0x10]
0xfec0:	mov	eax, dword ptr [rbp - 0x3e0]
0xfec6:	cmp	eax, 1
0xfec9:	je	0xfe90


0xfe68:	mov	rax, qword ptr [r13 + 0x50]
0xfe6c:	lea	rdi, [r15 + r14]
0xfe70:	shl	rax, 5
0xfe74:	add	rax, qword ptr [rbp - 0x3a8]
0xfe7b:	movzx	r9d, word ptr [rax + 0x10]
0xfe80:	mov	eax, dword ptr [rbp - 0x3e0]
0xfe86:	cmp	eax, 1
0xfe89:	jne	0xfc5e


0xfde8:	mov	rax, qword ptr [r13 + 0x50]
0xfdec:	lea	rdi, [r15 + r14]
0xfdf0:	shl	rax, 5
0xfdf4:	add	rax, qword ptr [rbp - 0x3a8]
0xfdfb:	movsd	xmm0, qword ptr [rax + 0x10]
0xfe00:	mov	eax, dword ptr [rbp - 0x3e0]
0xfe06:	cmp	eax, 1
0xfe09:	je	0x103a0


0xff30:	mov	rax, qword ptr [r13 + 0x50]
0xff34:	lea	rdi, [r15 + r14]
0xff38:	shl	rax, 5
0xff3c:	add	rax, qword ptr [rbp - 0x3a8]
0xff43:	movzx	r9d, byte ptr [rax + 0x10]
0xff48:	mov	eax, dword ptr [rbp - 0x3e0]
0xff4e:	cmp	eax, 1
0xff51:	jne	0xfc5e


0xfc38:	mov	rax, qword ptr [r13 + 0x50]
0xfc3c:	lea	rdi, [r15 + r14]
0xfc40:	shl	rax, 5
0xfc44:	add	rax, qword ptr [rbp - 0x3a8]
0xfc4b:	mov	r9d, dword ptr [rax + 0x10]
0xfc4f:	mov	eax, dword ptr [rbp - 0x3e0]
0xfc55:	cmp	eax, 1
0xfc58:	je	0xfe90


0x106e8:	cmp	dword ptr [rax], 0x16
0x106eb:	ja	0x10730


0x10829:	mov	edx, r11d
0x1082c:	add	rdx, qword ptr [rdi + 0x10]
0x10830:	add	r11d, 8
0x10834:	mov	dword ptr [rdi], r11d
0x10837:	mov	rdx, qword ptr [rdx]
0x1083a:	test	rdx, rdx
0x1083d:	cmove	rdx, r10
0x10841:	mov	qword ptr [rax + 0x10], rdx
0x10845:	jmp	0x10720


0x1086c:	mov	rdx, qword ptr [rdi + 8]
0x10870:	lea	r11, [rdx + 8]
0x10874:	mov	qword ptr [rdi + 8], r11
0x10878:	jmp	0x10837


0x107d1:	mov	edx, r11d
0x107d4:	add	rdx, qword ptr [rdi + 0x10]
0x107d8:	add	r11d, 8
0x107dc:	mov	dword ptr [rdi], r11d
0x107df:	mov	rdx, qword ptr [rdx]
0x107e2:	test	rdx, rdx
0x107e5:	cmove	rdx, r9
0x107e9:	mov	qword ptr [rax + 0x10], rdx
0x107ed:	jmp	0x10720


0x1085b:	mov	rdx, qword ptr [rdi + 8]
0x1085f:	lea	r11, [rdx + 8]
0x10863:	mov	qword ptr [rdi + 8], r11
0x10867:	jmp	0x107df


0x10803:	mov	edx, r11d
0x10806:	add	rdx, qword ptr [rdi + 0x10]
0x1080a:	add	r11d, 0x10
0x1080e:	mov	dword ptr [rdi + 4], r11d
0x10812:	movsd	xmm0, qword ptr [rdx]
0x10816:	movsd	qword ptr [rax + 0x10], xmm0
0x1081b:	jmp	0x10720


0x108ad:	mov	rdx, qword ptr [rdi + 8]
0x108b1:	lea	r11, [rdx + 8]
0x108b5:	mov	qword ptr [rdi + 8], r11
0x108b9:	jmp	0x10812


0x10743:	mov	edx, r11d
0x10746:	add	rdx, qword ptr [rdi + 0x10]
0x1074a:	add	r11d, 8
0x1074e:	mov	dword ptr [rdi], r11d
0x10751:	mov	rdx, qword ptr [rdx]
0x10754:	mov	qword ptr [rax + 0x10], rdx
0x10758:	jmp	0x10720


0x1087a:	mov	rdx, qword ptr [rdi + 8]
0x1087e:	lea	r11, [rdx + 8]
0x10882:	mov	qword ptr [rdi + 8], r11
0x10886:	jmp	0x10751


0x10767:	mov	edx, r11d
0x1076a:	add	rdx, qword ptr [rdi + 0x10]
0x1076e:	add	r11d, 8
0x10772:	mov	dword ptr [rdi], r11d
0x10775:	mov	edx, dword ptr [rdx]
0x10777:	mov	dword ptr [rax + 0x10], edx
0x1077a:	jmp	0x10720


0x1089c:	mov	rdx, qword ptr [rdi + 8]
0x108a0:	lea	r11, [rdx + 8]
0x108a4:	mov	qword ptr [rdi + 8], r11
0x108a8:	jmp	0x10775


0x10789:	mov	edx, r11d
0x1078c:	add	rdx, qword ptr [rdi + 0x10]
0x10790:	add	r11d, 8
0x10794:	mov	dword ptr [rdi], r11d
0x10797:	mov	edx, dword ptr [rdx]
0x10799:	mov	byte ptr [rax + 0x10], dl
0x1079c:	jmp	0x10720


0x1088b:	mov	rdx, qword ptr [rdi + 8]
0x1088f:	lea	r11, [rdx + 8]
0x10893:	mov	qword ptr [rdi + 8], r11
0x10897:	jmp	0x10797


0x107ab:	mov	edx, r11d
0x107ae:	add	rdx, qword ptr [rdi + 0x10]
0x107b2:	add	r11d, 8
0x107b6:	mov	dword ptr [rdi], r11d
0x107b9:	mov	edx, dword ptr [rdx]
0x107bb:	mov	word ptr [rax + 0x10], dx
0x107bf:	jmp	0x10720


0x1084a:	mov	rdx, qword ptr [rdi + 8]
0x1084e:	lea	r11, [rdx + 8]
0x10852:	mov	qword ptr [rdi + 8], r11
0x10856:	jmp	0x107b9


0x79f9:	xor	edi, edi
0x79fb:	call	0x2820


0x77e9:	mov	qword ptr [rsp + 0x28], 0
0x77f2:	mov	qword ptr [rsp + 8], 0
0x77fb:	xor	r10d, r10d
0x77fe:	mov	qword ptr [rsp + 0x10], 0
0x7807:	xor	r14d, r14d
0x780a:	jmp	0x6f20


0x779a:	mov	qword ptr [rsp + 8], rax
0x779f:	mov	dword ptr [rsp + 0x18], 0
0x77a7:	xor	r10d, r10d
0x77aa:	mov	qword ptr [rsp + 0x20], 0
0x77b3:	mov	qword ptr [rsp + 0x28], 0
0x77bc:	xor	r14d, r14d
0x77bf:	mov	qword ptr [rsp + 0x10], 0
0x77c8:	jmp	0x6f20


0x8492:	mov	rax, qword ptr [rsp + 0x70]
0x8497:	sub	ecx, r8d
0x849a:	seto	r8b
0x849e:	mov	dword ptr [r11 + 0x98], ecx
0x84a5:	xor	ecx, ecx
0x84a7:	sub	rdx, rdi
0x84aa:	movzx	r8d, r8b
0x84ae:	seto	cl
0x84b1:	xor	edi, edi
0x84b3:	sub	rax, rsi
0x84b6:	seto	dil
0x84ba:	mov	qword ptr [r11 + 0x88], rax
0x84c1:	xor	esi, esi
0x84c3:	mov	rax, qword ptr [rsp + 0x80]
0x84cb:	sub	rax, qword ptr [rsp + 0x60]
0x84d0:	mov	qword ptr [rsp + 0x70], rdi
0x84d5:	mov	qword ptr [r11 + 0x90], rdx
0x84dc:	seto	sil
0x84e0:	mov	qword ptr [r11 + 0x80], rax
0x84e7:	xor	edi, edi
0x84e9:	mov	rax, qword ptr [rsp + 0x88]
0x84f1:	sub	rax, qword ptr [rsp + 0x58]
0x84f6:	seto	dil
0x84fa:	mov	qword ptr [r11 + 0x78], rax
0x84fe:	xor	edx, edx
0x8500:	mov	rax, qword ptr [rsp + 0x68]
0x8505:	sub	rax, qword ptr [rsp + 0x50]
0x850a:	seto	dl
0x850d:	mov	qword ptr [r11 + 0x70], rax
0x8511:	mov	rax, qword ptr [rsp + 0x78]
0x8516:	mov	qword ptr [rsp + 0x50], rdx
0x851b:	sub	rax, qword ptr [rsp + 0x48]
0x8520:	jmp	0x722c


0x719e:	mov	rax, qword ptr [rsp + 0x70]
0x71a3:	add	ecx, r8d
0x71a6:	seto	r8b
0x71aa:	mov	dword ptr [r11 + 0x98], ecx
0x71b1:	xor	ecx, ecx
0x71b3:	add	rdx, rdi
0x71b6:	movzx	r8d, r8b
0x71ba:	seto	cl
0x71bd:	xor	edi, edi
0x71bf:	add	rax, rsi
0x71c2:	seto	dil
0x71c6:	mov	qword ptr [r11 + 0x88], rax
0x71cd:	xor	esi, esi
0x71cf:	mov	rax, qword ptr [rsp + 0x80]
0x71d7:	add	rax, qword ptr [rsp + 0x60]
0x71dc:	mov	qword ptr [rsp + 0x70], rdi
0x71e1:	mov	qword ptr [r11 + 0x90], rdx
0x71e8:	seto	sil
0x71ec:	mov	qword ptr [r11 + 0x80], rax
0x71f3:	xor	edi, edi
0x71f5:	mov	rax, qword ptr [rsp + 0x88]
0x71fd:	add	rax, qword ptr [rsp + 0x58]
0x7202:	seto	dil
0x7206:	mov	qword ptr [r11 + 0x78], rax
0x720a:	xor	edx, edx
0x720c:	mov	rax, qword ptr [rsp + 0x68]
0x7211:	add	rax, qword ptr [rsp + 0x50]
0x7216:	seto	dl
0x7219:	mov	qword ptr [r11 + 0x70], rax
0x721d:	mov	rax, qword ptr [rsp + 0x78]
0x7222:	add	rax, qword ptr [rsp + 0x48]
0x7227:	mov	qword ptr [rsp + 0x50], rdx
0x722c:	mov	qword ptr [r11 + 0x68], rax
0x7230:	mov	eax, ecx
0x7232:	seto	dl
0x7235:	or	eax, r8d
0x7238:	or	al, byte ptr [rsp + 0x70]
0x723c:	movzx	edx, dl
0x723f:	or	eax, esi
0x7241:	or	eax, edi
0x7243:	or	al, byte ptr [rsp + 0x50]
0x7247:	or	eax, edx
0x7249:	test	al, al
0x724b:	je	0x777e


0x810b:	xor	edi, edi
0x810d:	call	0x2820


0x7dc6:	mov	rax, qword ptr [r13 + 8]
0x7dca:	mov	rcx, rax
0x7dcd:	neg	rcx
0x7dd0:	cmp	rax, rdx
0x7dd3:	mov	qword ptr [r11 + 0x28], rcx
0x7dd7:	jne	0x7d53


0x7675:	mov	dword ptr [rsp + 0x18], 0
0x767d:	mov	qword ptr [rsp + 0x20], 0
0x7686:	xor	r10d, r10d
0x7689:	mov	qword ptr [rsp + 0x28], 0
0x7692:	mov	qword ptr [rsp + 8], 0
0x769b:	mov	qword ptr [rsp + 0x10], 0
0x76a4:	jmp	0x6f20


0x7c14:	mov	r8d, 1
0x7c1a:	jmp	0x76df


0x76df:	mov	dword ptr [r11 + 0x98], eax
0x76e6:	xor	eax, eax
0x76e8:	add	rdi, qword ptr [r11 + 0x90]
0x76ef:	seto	al
0x76f2:	mov	qword ptr [r11 + 0x90], rdi
0x76f9:	xor	edi, edi
0x76fb:	add	rsi, qword ptr [r11 + 0x88]
0x7702:	seto	dil
0x7706:	mov	qword ptr [r11 + 0x88], rsi
0x770d:	xor	esi, esi
0x770f:	add	rcx, qword ptr [r11 + 0x80]
0x7716:	seto	sil
0x771a:	mov	qword ptr [r11 + 0x80], rcx
0x7721:	xor	ecx, ecx
0x7723:	add	rdx, qword ptr [r11 + 0x78]
0x7727:	seto	cl
0x772a:	mov	qword ptr [r11 + 0x78], rdx
0x772e:	mov	rdx, qword ptr [rsp + 0x50]
0x7733:	mov	qword ptr [rsp + 0x58], rcx
0x7738:	xor	ecx, ecx
0x773a:	add	rdx, qword ptr [r11 + 0x70]
0x773e:	seto	cl
0x7741:	mov	qword ptr [r11 + 0x70], rdx
0x7745:	mov	rdx, qword ptr [rsp + 0x48]
0x774a:	mov	qword ptr [rsp + 0x50], rcx
0x774f:	xor	ecx, ecx
0x7751:	add	rdx, qword ptr [r11 + 0x68]
0x7755:	seto	cl
0x7758:	or	eax, r8d
0x775b:	mov	qword ptr [r11 + 0x68], rdx
0x775f:	or	eax, edi
0x7761:	movzx	edi, byte ptr [rsp + 0x50]
0x7766:	or	eax, esi
0x7768:	or	al, byte ptr [rsp + 0x58]
0x776c:	or	dil, al
0x776f:	jne	0x7258


0x7880:	mov	dword ptr [rsp + 0x18], 0
0x7888:	mov	qword ptr [rsp + 0x20], 0
0x7891:	xor	r10d, r10d
0x7894:	mov	qword ptr [rsp + 0x28], 0
0x789d:	mov	qword ptr [rsp + 8], 0
0x78a6:	xor	r14d, r14d
0x78a9:	jmp	0x6f20


0x7633:	mov	qword ptr [rsp + 0x28], rax
0x7638:	mov	dword ptr [rsp + 0x18], 0
0x7640:	xor	r10d, r10d
0x7643:	mov	qword ptr [rsp + 0x20], 0
0x764c:	mov	qword ptr [rsp + 8], 0
0x7655:	xor	r14d, r14d
0x7658:	mov	qword ptr [rsp + 0x10], 0
0x7661:	jmp	0x6f20


0x6de8:	mov	rax, qword ptr [r13]
0x6dec:	xor	r8d, r8d
0x6def:	mov	rdx, qword ptr [r13 + 0x10]
0x6df3:	mov	rcx, qword ptr [r13 + 0x18]
0x6df7:	mov	rsi, qword ptr [r13 + 0x20]
0x6dfb:	mov	rdi, qword ptr [r13 + 0x28]
0x6dff:	mov	qword ptr [rsp + 0x48], rax
0x6e04:	mov	rax, qword ptr [r13 + 8]
0x6e08:	mov	qword ptr [rsp + 0x50], rax
0x6e0d:	mov	eax, dword ptr [r13 + 0x30]
0x6e11:	add	eax, dword ptr [r11 + 0x98]
0x6e18:	jo	0x8755


0x7b7c:	mov	edx, 1
0x7b81:	jmp	0x7872


0x7872:	test	rdx, rdx
0x7875:	mov	qword ptr [rsp + 0x10], rax
0x787a:	jne	0x7258


0x8438:	mov	rdi, qword ptr [r13 - 0xd8]
0x843f:	test	al, al
0x8441:	mov	qword ptr [rsp + 0x48], rdi
0x8446:	je	0x8488


0x78dd:	test	al, al
0x78df:	je	0x793a


0x7cfe:	mov	rax, qword ptr [r13 + 8]
0x7d02:	mov	rcx, rax
0x7d05:	neg	rcx
0x7d08:	cmp	rax, rdx
0x7d0b:	mov	qword ptr [r11 + 0x40], rcx
0x7d0f:	jne	0x6f20


0x781e:	mov	qword ptr [rsp + 0x20], rax
0x7823:	mov	dword ptr [rsp + 0x18], 0
0x782b:	jmp	0x77e9


0x8755:	mov	r8d, 1
0x875b:	jmp	0x6e1e


0x6e1e:	mov	dword ptr [r11 + 0x98], eax
0x6e25:	xor	eax, eax
0x6e27:	add	rdi, qword ptr [r11 + 0x90]
0x6e2e:	mov	qword ptr [rsp + 0x58], r10
0x6e33:	mov	dword ptr [rsp + 0x60], r9d
0x6e38:	seto	al
0x6e3b:	mov	qword ptr [r11 + 0x90], rdi
0x6e42:	xor	edi, edi
0x6e44:	add	rsi, qword ptr [r11 + 0x88]
0x6e4b:	seto	dil
0x6e4f:	mov	qword ptr [r11 + 0x88], rsi
0x6e56:	xor	esi, esi
0x6e58:	add	rcx, qword ptr [r11 + 0x80]
0x6e5f:	seto	sil
0x6e63:	xor	r10d, r10d
0x6e66:	add	rdx, qword ptr [r11 + 0x78]
0x6e6a:	mov	qword ptr [r11 + 0x80], rcx
0x6e71:	seto	r10b
0x6e75:	mov	qword ptr [r11 + 0x78], rdx
0x6e79:	xor	r9d, r9d
0x6e7c:	mov	rdx, qword ptr [rsp + 0x50]
0x6e81:	add	rdx, qword ptr [r11 + 0x70]
0x6e85:	seto	r9b
0x6e89:	mov	qword ptr [r11 + 0x70], rdx
0x6e8d:	xor	ecx, ecx
0x6e8f:	mov	rdx, qword ptr [rsp + 0x48]
0x6e94:	add	rdx, qword ptr [r11 + 0x68]
0x6e98:	seto	cl
0x6e9b:	or	eax, r8d
0x6e9e:	mov	qword ptr [r11 + 0x68], rdx
0x6ea2:	or	eax, edi
0x6ea4:	mov	edi, r9d
0x6ea7:	or	eax, esi
0x6ea9:	or	eax, r10d
0x6eac:	or	dil, al
0x6eaf:	jne	0x7258


0x7e19:	jmp	0x7258


0x7d53:	mov	rax, qword ptr [r13 + 0x10]
0x7d57:	mov	qword ptr [r11 + 0x30], rax
0x7d5b:	jmp	0x6f20


0x75f0:	mov	dword ptr [rsp + 0x18], 0
0x75f8:	mov	qword ptr [rsp + 0x20], 0
0x7601:	xor	r14d, r14d
0x7604:	mov	qword ptr [rsp + 0x28], 0
0x760d:	mov	qword ptr [rsp + 8], 0
0x7616:	mov	qword ptr [rsp + 0x10], 0
0x761f:	jmp	0x6f20


0x10034:	mov	r8, qword ptr [r13 + 8]
0x10038:	add	r13, 0x58
0x1003c:	mov	rcx, qword ptr [r13]
0x10040:	add	qword ptr [rbp - 0x400], 1
0x10048:	cmp	rcx, r8
0x1004b:	jne	0xf6e9


0xff87:	jmp	0xfe90


0xfc5e:	cmp	eax, 2
0xfc61:	je	0xfed8


0xffe8:	push	qword ptr [rbp - 0x3f0]
0xffee:	push	r9
0xfff0:	jmp	0xfe98


0xfb26:	cmp	eax, 2
0xfb29:	je	0xffd0


0x103b0:	sub	rsp, 8
0x103b4:	push	qword ptr [rbp - 0x3f0]
0x103ba:	sub	rsp, 0x10
0x103be:	fstp	xword ptr [rsp]
0x103c1:	jmp	0xfeeb


0xfd85:	cmp	eax, 2
0xfd88:	jne	0x10250


0xfe90:	push	qword ptr [rbp - 0x3f0]
0xfe96:	push	r9
0xfe98:	mov	r9d, dword ptr [rbp - 0x3b8]
0xfe9f:	jmp	0xfc71


0xfecb:	cmp	eax, 2
0xfece:	jne	0xfc67


0x103a0:	sub	rsp, 8
0x103a4:	push	qword ptr [rbp - 0x3f0]
0x103aa:	jmp	0xfe25


0xfe0f:	cmp	eax, 2
0xfe12:	jne	0x10210


0xff57:	jmp	0xfe90


0x10720:	add	rcx, 1
0x10724:	add	rax, 0x20
0x10728:	cmp	qword ptr [rsi], rcx
0x1072b:	ja	0x106e8


0x10837:	mov	rdx, qword ptr [rdx]
0x1083a:	test	rdx, rdx
0x1083d:	cmove	rdx, r10
0x10841:	mov	qword ptr [rax + 0x10], rdx
0x10845:	jmp	0x10720


0x107df:	mov	rdx, qword ptr [rdx]
0x107e2:	test	rdx, rdx
0x107e5:	cmove	rdx, r9
0x107e9:	mov	qword ptr [rax + 0x10], rdx
0x107ed:	jmp	0x10720


0x10812:	movsd	xmm0, qword ptr [rdx]
0x10816:	movsd	qword ptr [rax + 0x10], xmm0
0x1081b:	jmp	0x10720


0x10751:	mov	rdx, qword ptr [rdx]
0x10754:	mov	qword ptr [rax + 0x10], rdx
0x10758:	jmp	0x10720


0x10775:	mov	edx, dword ptr [rdx]
0x10777:	mov	dword ptr [rax + 0x10], edx
0x1077a:	jmp	0x10720


0x10797:	mov	edx, dword ptr [rdx]
0x10799:	mov	byte ptr [rax + 0x10], dl
0x1079c:	jmp	0x10720


0x107b9:	mov	edx, dword ptr [rdx]
0x107bb:	mov	word ptr [rax + 0x10], dx
0x107bf:	jmp	0x10720


0x722c:	mov	qword ptr [r11 + 0x68], rax
0x7230:	mov	eax, ecx
0x7232:	seto	dl
0x7235:	or	eax, r8d
0x7238:	or	al, byte ptr [rsp + 0x70]
0x723c:	movzx	edx, dl
0x723f:	or	eax, esi
0x7241:	or	eax, edi
0x7243:	or	al, byte ptr [rsp + 0x50]
0x7247:	or	eax, edx
0x7249:	test	al, al
0x724b:	je	0x777e


0x777e:	mov	byte ptr [r11 + 0xa1], 1
0x7786:	jmp	0x6f20


0x7ddd:	jmp	0x7258


0x7775:	test	rcx, rcx
0x7778:	jne	0x7258


0x8488:	mov	rax, qword ptr [rsp + 0x48]
0x848d:	jmp	0x7d3c


0x8448:	lea	rsi, [rip + 0xb239]
0x844f:	mov	edx, 5
0x8454:	xor	edi, edi
0x8456:	mov	qword ptr [rsp + 0x60], r11
0x845b:	mov	dword ptr [rsp + 0x58], r9d
0x8460:	mov	qword ptr [rsp + 0x50], r10
0x8465:	call	0x2820


0x793a:	movdqu	xmm0, xmmword ptr [r13 - 0xe0]
0x7943:	mov	rax, qword ptr [r13 - 0xd0]
0x794a:	movups	xmmword ptr [r11 + 0x20], xmm0
0x794f:	mov	qword ptr [r11 + 0x30], rax
0x7953:	mov	rax, qword ptr [r13 - 0x68]
0x7957:	mov	qword ptr [r11 + 0x38], rax
0x795b:	mov	rax, qword ptr [r13 + 8]
0x795f:	mov	qword ptr [r11 + 0x40], rax
0x7963:	jmp	0x6f20


0x78e1:	mov	rax, qword ptr [r13 - 0xd8]
0x78e8:	lea	rsi, [rip + 0xbd61]
0x78ef:	mov	edx, 5
0x78f4:	xor	edi, edi
0x78f6:	mov	qword ptr [rsp + 0x68], r11
0x78fb:	mov	dword ptr [rsp + 0x60], r9d
0x7900:	mov	qword ptr [rsp + 0x58], r10
0x7905:	mov	qword ptr [rsp + 0x50], rcx
0x790a:	mov	qword ptr [rsp + 0x48], rax
0x790f:	call	0x2820


0x7d15:	jmp	0x7258


0x6eb5:	test	rcx, rcx
0x6eb8:	jne	0x7258


0xfed8:	sub	rsp, 8
0xfedc:	push	qword ptr [rbp - 0x3f0]
0xfee2:	push	r9
0xfee4:	mov	eax, dword ptr [rbp - 0x3b4]
0xfeea:	push	rax
0xfeeb:	mov	r9d, dword ptr [rbp - 0x3b8]
0xfef2:	mov	r8, qword ptr [rbp - 0x3d8]
0xfef9:	mov	rsi, r10
0xfefc:	mov	rcx, -1
0xff03:	mov	edx, 1
0xff08:	xor	eax, eax
0xff0a:	mov	qword ptr [rbp - 0x430], r10
0xff11:	call	0x2740


0xfc67:	sub	rsp, 8
0xfc6b:	push	qword ptr [rbp - 0x3f0]
0xfc71:	mov	r8, qword ptr [rbp - 0x3d8]
0xfc78:	mov	rcx, -1
0xfc7f:	mov	edx, 1
0xfc84:	mov	rsi, r10
0xfc87:	xor	eax, eax
0xfc89:	mov	qword ptr [rbp - 0x430], r10
0xfc90:	call	0x2740


0xfe98:	mov	r9d, dword ptr [rbp - 0x3b8]
0xfe9f:	jmp	0xfc71


0xffd0:	sub	rsp, 8
0xffd4:	push	qword ptr [rbp - 0x3f0]
0xffda:	push	r9
0xffdc:	jmp	0xfee4


0xfb2f:	sub	rsp, 8
0xfb33:	push	qword ptr [rbp - 0x3f0]
0xfb39:	mov	r8, qword ptr [rbp - 0x3d8]
0xfb40:	mov	rsi, r10
0xfb43:	mov	rcx, -1
0xfb4a:	mov	edx, 1
0xfb4f:	xor	eax, eax
0xfb51:	mov	qword ptr [rbp - 0x430], r10
0xfb58:	call	0x2740


0xfeeb:	mov	r9d, dword ptr [rbp - 0x3b8]
0xfef2:	mov	r8, qword ptr [rbp - 0x3d8]
0xfef9:	mov	rsi, r10
0xfefc:	mov	rcx, -1
0xff03:	mov	edx, 1
0xff08:	xor	eax, eax
0xff0a:	mov	qword ptr [rbp - 0x430], r10
0xff11:	call	0x2740


0xfd8e:	mov	eax, dword ptr [rbp - 0x3b4]
0xfd94:	sub	rsp, 8
0xfd98:	push	qword ptr [rbp - 0x3f0]
0xfd9e:	mov	r9d, dword ptr [rbp - 0x3b8]
0xfda5:	mov	r8, qword ptr [rbp - 0x3d8]
0xfdac:	mov	rsi, r10
0xfdaf:	sub	rsp, 0x18
0xfdb3:	mov	rcx, -1
0xfdba:	mov	edx, 1
0xfdbf:	fstp	xword ptr [rsp + 8]
0xfdc3:	push	rax
0xfdc4:	xor	eax, eax
0xfdc6:	mov	qword ptr [rbp - 0x430], r10
0xfdcd:	call	0x2740


0x10250:	sub	rsp, 0x10
0x10254:	mov	r9, qword ptr [rbp - 0x3f0]
0x1025b:	fstp	xword ptr [rsp]
0x1025e:	jmp	0xfb39


0xfc71:	mov	r8, qword ptr [rbp - 0x3d8]
0xfc78:	mov	rcx, -1
0xfc7f:	mov	edx, 1
0xfc84:	mov	rsi, r10
0xfc87:	xor	eax, eax
0xfc89:	mov	qword ptr [rbp - 0x430], r10
0xfc90:	call	0x2740


0xfe25:	mov	r9d, dword ptr [rbp - 0x3b8]
0xfe2c:	mov	r8, qword ptr [rbp - 0x3d8]
0xfe33:	mov	rsi, r10
0xfe36:	mov	rcx, -1
0xfe3d:	mov	edx, 1
0xfe42:	mov	eax, 1
0xfe47:	mov	qword ptr [rbp - 0x430], r10
0xfe4e:	call	0x2740


0xfe18:	mov	eax, dword ptr [rbp - 0x3b4]
0xfe1e:	push	qword ptr [rbp - 0x3f0]
0xfe24:	push	rax
0xfe25:	mov	r9d, dword ptr [rbp - 0x3b8]
0xfe2c:	mov	r8, qword ptr [rbp - 0x3d8]
0xfe33:	mov	rsi, r10
0xfe36:	mov	rcx, -1
0xfe3d:	mov	edx, 1
0xfe42:	mov	eax, 1
0xfe47:	mov	qword ptr [rbp - 0x430], r10
0xfe4e:	call	0x2740


0x10210:	mov	r9, qword ptr [rbp - 0x3f0]
0x10217:	mov	r8, qword ptr [rbp - 0x3d8]
0x1021e:	mov	rsi, r10
0x10221:	mov	rcx, -1
0x10228:	mov	edx, 1
0x1022d:	mov	eax, 1
0x10232:	mov	qword ptr [rbp - 0x430], r10
0x10239:	call	0x2740


0x7d3c:	movdqu	xmm0, xmmword ptr [r13]
0x7d42:	mov	qword ptr [r11 + 0x38], rax
0x7d46:	mov	rax, qword ptr [r13 - 0x68]
0x7d4a:	movups	xmmword ptr [r11 + 0x20], xmm0
0x7d4f:	mov	qword ptr [r11 + 0x40], rax
0x7d53:	mov	rax, qword ptr [r13 + 0x10]
0x7d57:	mov	qword ptr [r11 + 0x30], rax
0x7d5b:	jmp	0x6f20


0x6ebe:	lea	rsi, [rip + 0xc29e]
0x6ec5:	mov	byte ptr [r11 + 0xa1], 1
0x6ecd:	xor	edi, edi
0x6ecf:	mov	edx, 5
0x6ed4:	mov	qword ptr [rsp + 0x48], r11
0x6ed9:	call	0x2820


0xfee4:	mov	eax, dword ptr [rbp - 0x3b4]
0xfeea:	push	rax
0xfeeb:	mov	r9d, dword ptr [rbp - 0x3b8]
0xfef2:	mov	r8, qword ptr [rbp - 0x3d8]
0xfef9:	mov	rsi, r10
0xfefc:	mov	rcx, -1
0xff03:	mov	edx, 1
0xff08:	xor	eax, eax
0xff0a:	mov	qword ptr [rbp - 0x430], r10
0xff11:	call	0x2740


0xfb39:	mov	r8, qword ptr [rbp - 0x3d8]
0xfb40:	mov	rsi, r10
0xfb43:	mov	rcx, -1
0xfb4a:	mov	edx, 1
0xfb4f:	xor	eax, eax
0xfb51:	mov	qword ptr [rbp - 0x430], r10
0xfb58:	call	0x2740


0xfb5d:	pop	rsi
0xfb5e:	pop	rdi
0xfb5f:	mov	r10, qword ptr [rbp - 0x430]
0xfb66:	mov	ecx, dword ptr [rbp - 0x3bc]
0xfb6c:	test	ecx, ecx
0xfb6e:	js	0xfcac


0xfcac:	mov	rdi, qword ptr [rbp - 0x3f8]
0xfcb3:	cmp	byte ptr [rdi + 1], 0
0xfcb7:	jne	0xfff8


0xfb74:	movsxd	rdx, ecx
0xfb77:	cmp	rdx, r10
0xfb7a:	jae	0xfb8a


0xfcbd:	test	eax, eax
0xfcbf:	jns	0xfb8e


0xfff8:	mov	byte ptr [rdi + 1], 0
0xfffc:	jmp	0xfab0


0xfb7c:	add	rdx, r15
0xfb7f:	cmp	byte ptr [rdx + r14], 0
0xfb84:	jne	0x104c6


0xfb8a:	cmp	ecx, eax
0xfb8c:	jge	0xfb96


0xfcc5:	mov	rax, qword ptr [rbp - 0x3c8]
0xfccc:	mov	ebx, dword ptr [rax]
0xfcce:	test	ebx, ebx
0xfcd0:	jne	0xfcf0


0xfb8e:	mov	dword ptr [rbp - 0x3bc], eax
0xfb94:	mov	ecx, eax
0xfb96:	lea	eax, [rcx + 1]
0xfb99:	cmp	rax, r10
0xfb9c:	jb	0x103d0


0xfab0:	mov	rax, qword ptr [rbp - 0x3c8]
0xfab7:	mov	rbx, r12
0xfaba:	mov	r10d, 0x7fffffff
0xfac0:	sub	rbx, r14
0xfac3:	mov	dword ptr [rbp - 0x3bc], 0xffffffff
0xfacd:	cmp	rbx, 0x7fffffff
0xfad4:	mov	dword ptr [rax], 0
0xfada:	mov	eax, dword ptr [rbp - 0x3d0]
0xfae0:	cmovbe	r10, rbx
0xfae4:	cmp	eax, 0x11
0xfae7:	ja	0x104c6


0xfb96:	lea	eax, [rcx + 1]
0xfb99:	cmp	rax, r10
0xfb9c:	jb	0x103d0


0xfcd2:	movzx	eax, byte ptr [r13 + 0x48]
0xfcd7:	mov	ebx, 0x16
0xfcdc:	and	eax, 0xffffffef
0xfcdf:	cmp	al, 0x63
0xfce1:	mov	eax, 0x54
0xfce6:	cmove	ebx, eax
0xfce9:	nop	dword ptr [rax]
0xfcf0:	cmp	r15, qword ptr [rbp - 0x3e8]
0xfcf7:	je	0xfd02


0xfcf0:	cmp	r15, qword ptr [rbp - 0x3e8]
0xfcf7:	je	0xfd02


0x103d0:	mov	rax, qword ptr [rbp - 0x3c8]
0x103d7:	mov	edi, dword ptr [rbp - 0x424]
0x103dd:	movsxd	rbx, ecx
0x103e0:	add	rbx, r14
0x103e3:	mov	dword ptr [rax], edi
0x103e5:	jmp	0x10034


0xfba2:	cmp	rbx, 0x7ffffffe
0xfba9:	ja	0x103f0


0xfd02:	mov	rax, qword ptr [rbp - 0x420]
0xfd09:	test	rax, rax
0xfd0c:	je	0xfd16


0xfcf9:	test	r15, r15
0xfcfc:	jne	0x104ac


0xfbaf:	lea	rsi, [r12 + r12]
0xfbb3:	lea	edx, [rcx + 2]
0xfbb6:	test	r12, r12
0xfbb9:	mov	rax, -1
0xfbc0:	cmovns	rax, rsi
0xfbc4:	add	rdx, r14
0xfbc7:	jb	0x10688


0x103f0:	cmp	r15, qword ptr [rbp - 0x3e8]
0x103f7:	je	0x10402


0xfd16:	mov	rax, qword ptr [rbp - 0x408]
0xfd1d:	mov	rdi, qword ptr [rbp - 0x2b8]
0xfd24:	add	rax, 0x20
0xfd28:	cmp	rdi, rax
0xfd2b:	je	0xfd32


0xfd0e:	mov	rdi, rax
0xfd11:	call	0x2750


0x104ac:	mov	rdi, r15
0x104af:	call	0x2750


0x10688:	cmp	r12, -1
0x1068c:	je	0xfab0


0xfbcd:	cmp	rax, rdx
0xfbd0:	cmovb	rax, rdx
0xfbd4:	cmp	r12, rax
0xfbd7:	jae	0xfab0


0x10402:	mov	rax, qword ptr [rbp - 0x420]
0x10409:	test	rax, rax
0x1040c:	je	0x10416


0x103f9:	test	r15, r15
0x103fc:	jne	0x104b9


0xfd32:	mov	rax, qword ptr [rbp - 0x410]
0xfd39:	mov	rdi, qword ptr [rbp - 0x3a8]
0xfd40:	add	rax, 0x10
0xfd44:	cmp	rdi, rax
0xfd47:	je	0xfd4e


0xfd2d:	call	0x2750


0x10692:	jmp	0xf711


0xfbdd:	test	r12, r12
0xfbe0:	js	0xf711


0x10416:	mov	rax, qword ptr [rbp - 0x408]
0x1041d:	mov	rdi, qword ptr [rbp - 0x2b8]
0x10424:	add	rax, 0x20
0x10428:	cmp	rdi, rax
0x1042b:	je	0x10432


0x1040e:	mov	rdi, rax
0x10411:	call	0x2750


0x104b9:	mov	rdi, r15
0x104bc:	call	0x2750


0xfd4e:	mov	rax, qword ptr [rbp - 0x3c8]
0xfd55:	xor	r15d, r15d
0xfd58:	mov	dword ptr [rax], ebx
0xfd5a:	jmp	0xf77f


0xfd49:	call	0x2750


0xf711:	cmp	r15, qword ptr [rbp - 0x3e8]
0xf718:	je	0xf723


0xfbe6:	cmp	rsi, rax
0xfbe9:	mov	r12, rsi
0xfbec:	jae	0xfbfb


0x10432:	mov	rax, qword ptr [rbp - 0x410]
0x10439:	mov	rdi, qword ptr [rbp - 0x3a8]
0x10440:	add	rax, 0x10
0x10444:	cmp	rdi, rax
0x10447:	je	0x1044e


0x1042d:	call	0x2750


0xfbee:	cmp	rax, -1
0xfbf2:	je	0xf711


0xfbfb:	cmp	r15, qword ptr [rbp - 0x3e8]
0xfc02:	sete	bl
0xfc05:	test	r15, r15
0xfc08:	je	0xff90


0x1044e:	mov	rax, qword ptr [rbp - 0x3c8]
0x10455:	xor	r15d, r15d
0x10458:	mov	dword ptr [rax], 0x4b
0x1045e:	jmp	0xf77f


0x10449:	call	0x2750


0xfbf8:	mov	r12, rax
0xfbfb:	cmp	r15, qword ptr [rbp - 0x3e8]
0xfc02:	sete	bl
0xfc05:	test	r15, r15
0xfc08:	je	0xff90


0xff90:	mov	rdi, r12
0xff93:	call	0x29e0


0xfc0e:	test	bl, bl
0xfc10:	jne	0xff90


0xfc16:	mov	rsi, r12
0xfc19:	mov	rdi, r15
0xfc1c:	call	0x2a40


0xfc21:	test	rax, rax
0xfc24:	je	0xf711


0xfc2a:	mov	r15, rax
0xfc2d:	jmp	0xfab0


0xff98:	test	rax, rax
0xff9b:	mov	rcx, rax
0xff9e:	je	0xf711


0xffa4:	test	r14, r14
0xffa7:	je	0x10060


0x10060:	mov	r15, rcx
0x10063:	jmp	0xfab0


0xffad:	test	bl, bl
0xffaf:	je	0x10060


0xffb5:	mov	rsi, r15
0xffb8:	mov	rdx, r14
0xffbb:	mov	rdi, rax
0xffbe:	call	0x2970


0xffc3:	mov	r15, rax
0xffc6:	jmp	0xfab0


0x104c1:	jmp	0x10402


0x104b4:	jmp	0xfd02


0xff16:	add	rsp, 0x20
0xff1a:	mov	r10, qword ptr [rbp - 0x430]
0xff21:	jmp	0xfb66


0xfb66:	mov	ecx, dword ptr [rbp - 0x3bc]
0xfb6c:	test	ecx, ecx
0xfb6e:	js	0xfcac


0x1023e:	mov	r10, qword ptr [rbp - 0x430]
0x10245:	jmp	0xfb66


0xfe53:	pop	r8
0xfe55:	mov	r10, qword ptr [rbp - 0x430]
0xfe5c:	pop	r9
0xfe5e:	jmp	0xfb66


0xfc95:	pop	rdx
0xfc96:	pop	rcx
0xfc97:	mov	ecx, dword ptr [rbp - 0x3bc]
0xfc9d:	mov	r10, qword ptr [rbp - 0x430]
0xfca4:	test	ecx, ecx
0xfca6:	jns	0xfb74


0xfdd2:	add	rsp, 0x30
0xfdd6:	mov	r10, qword ptr [rbp - 0x430]
0xfddd:	jmp	0xfb66


0x6ede:	mov	r11, qword ptr [rsp + 0x48]
0x6ee3:	mov	r10, qword ptr [rsp + 0x58]
0x6ee8:	mov	r9d, dword ptr [rsp + 0x60]
0x6eed:	cmp	byte ptr [r11 + 0xd9], 0
0x6ef5:	je	0x6f20


0x6ef7:	mov	dword ptr [rsp + 0x58], r9d
0x6efc:	mov	qword ptr [rsp + 0x50], r10
0x6f01:	mov	rsi, r11
0x6f04:	mov	rdi, rax
0x6f07:	call	0x64f0


0x6f0c:	mov	r11, qword ptr [rsp + 0x48]
0x6f11:	mov	r10, qword ptr [rsp + 0x50]
0x6f16:	mov	r9d, dword ptr [rsp + 0x58]
0x6f1b:	nop	dword ptr [rax + rax]
0x6f20:	mov	rdi, qword ptr [rsp + 0x10]
0x6f25:	lea	rax, [rbx*8]
0x6f2d:	mov	qword ptr [rsp + 0xd0], r14
0x6f35:	mov	qword ptr [rsp + 0xd8], r10
0x6f3d:	mov	rcx, r12
0x6f40:	sub	rax, rbx
0x6f43:	movdqa	xmm0, xmmword ptr [rsp + 0xd0]
0x6f4c:	mov	qword ptr [rsp + 0xe0], rdi
0x6f54:	mov	rdi, qword ptr [rsp + 8]
0x6f59:	shl	rax, 3
0x6f5d:	sub	r13, rax
0x6f60:	add	rbx, rbx
0x6f63:	mov	rax, r13
0x6f66:	sub	rcx, rbx
0x6f69:	lea	r13, [r13 + 0x38]
0x6f6d:	mov	qword ptr [rsp + 0xe8], rdi
0x6f75:	mov	rdi, qword ptr [rsp + 0x28]
0x6f7a:	movups	xmmword ptr [rax + 0x38], xmm0
0x6f7e:	mov	qword ptr [rsp + 0xf0], rdi
0x6f86:	mov	rdi, qword ptr [rsp + 0x20]
0x6f8b:	movdqa	xmm0, xmmword ptr [rsp + 0xe0]
0x6f94:	mov	qword ptr [rsp + 0xf8], rdi
0x6f9c:	mov	edi, dword ptr [rsp + 0x18]
0x6fa0:	movups	xmmword ptr [rax + 0x48], xmm0
0x6fa4:	mov	dword ptr [rsp + 0x100], edi
0x6fab:	mov	rdx, qword ptr [rsp + 0x100]
0x6fb3:	movdqa	xmm0, xmmword ptr [rsp + 0xf0]
0x6fbc:	movsx	edi, word ptr [rcx]
0x6fbf:	mov	qword ptr [rax + 0x68], rdx
0x6fc3:	lea	rdx, [rip + 0xd236]
0x6fca:	movups	xmmword ptr [rax + 0x58], xmm0
0x6fce:	lea	rax, [rip + 0xd0ab]
0x6fd5:	mov	esi, edi
0x6fd7:	movzx	eax, byte ptr [rax + rbp]
0x6fdb:	sub	eax, 0x1c
0x6fde:	cdqe	
0x6fe0:	movsx	edx, byte ptr [rdx + rax]
0x6fe4:	add	edx, edi
0x6fe6:	cmp	edx, 0x70
0x6fe9:	ja	0x7003


0x7914:	mov	rcx, qword ptr [rsp + 0x50]
0x7919:	mov	rsi, qword ptr [rsp + 0x48]
0x791e:	mov	rdi, rax
0x7921:	xor	eax, eax
0x7923:	mov	rdx, rcx
0x7926:	call	0x61f0


0x792b:	mov	r11, qword ptr [rsp + 0x68]
0x7930:	mov	r9d, dword ptr [rsp + 0x60]
0x7935:	mov	r10, qword ptr [rsp + 0x58]
0x793a:	movdqu	xmm0, xmmword ptr [r13 - 0xe0]
0x7943:	mov	rax, qword ptr [r13 - 0xd0]
0x794a:	movups	xmmword ptr [r11 + 0x20], xmm0
0x794f:	mov	qword ptr [r11 + 0x30], rax
0x7953:	mov	rax, qword ptr [r13 - 0x68]
0x7957:	mov	qword ptr [r11 + 0x38], rax
0x795b:	mov	rax, qword ptr [r13 + 8]
0x795f:	mov	qword ptr [r11 + 0x40], rax
0x7963:	jmp	0x6f20


0x846a:	mov	rsi, qword ptr [rsp + 0x48]
0x846f:	mov	rdi, rax
0x8472:	xor	eax, eax
0x8474:	call	0x61f0


0x8479:	mov	r11, qword ptr [rsp + 0x60]
0x847e:	mov	r9d, dword ptr [rsp + 0x58]
0x8483:	mov	r10, qword ptr [rsp + 0x50]
0x8488:	mov	rax, qword ptr [rsp + 0x48]
0x848d:	jmp	0x7d3c


0x8112:	mov	r11, qword ptr [rsp + 0x58]
0x8117:	mov	r10, qword ptr [rsp + 0x48]
0x811c:	mov	r9d, dword ptr [rsp + 0x50]
0x8121:	cmp	byte ptr [r11 + 0xd9], 0
0x8129:	je	0x6f20


0x812f:	mov	dword ptr [rsp + 0x58], r9d
0x8134:	mov	qword ptr [rsp + 0x50], r10
0x8139:	mov	rsi, r11
0x813c:	mov	qword ptr [rsp + 0x48], r11
0x8141:	jmp	0x6f04


0x6f04:	mov	rdi, rax
0x6f07:	call	0x64f0


0x7a00:	mov	r11, qword ptr [rsp + 0x48]
0x7a05:	mov	r10, qword ptr [rsp + 0x50]
0x7a0a:	mov	r9d, dword ptr [rsp + 0x58]
0x7a0f:	cmp	byte ptr [r11 + 0xd9], 0
0x7a17:	mov	rsi, r11
0x7a1a:	je	0x6f20


0x7a20:	mov	rdi, rax
0x7a23:	call	0x68a0


0x7a28:	mov	r11, qword ptr [rsp + 0x48]
0x7a2d:	mov	r10, qword ptr [rsp + 0x50]
0x7a32:	mov	r9d, dword ptr [rsp + 0x58]
0x7a37:	jmp	0x6f20


0xc9ae:	add	rsp, 0x28
0xc9b2:	mov	rcx, rbx
0xc9b5:	mov	rdi, rbp
0xc9b8:	pop	rbx
0xc9b9:	pop	rbp
0xc9ba:	pop	r12
0xc9bc:	pop	r13
0xc9be:	pop	r14
0xc9c0:	pop	r15
0xc9c2:	mov	rdx, rax
0xc9c5:	mov	esi, 1
0xc9ca:	xor	eax, eax
0xc9cc:	jmp	0x2b00


0xc8d0:	sub	rsp, 8
0xc8d4:	mov	r9, qword ptr [rsp + 0x18]
0xc8d9:	mov	rdx, rax
0xc8dc:	mov	rcx, rbx
0xc8df:	mov	esi, 1
0xc8e4:	mov	rdi, rbp
0xc8e7:	xor	eax, eax
0xc8e9:	push	r9
0xc8eb:	push	r13
0xc8ed:	push	r12
0xc8ef:	push	r15
0xc8f1:	push	r14
0xc8f3:	mov	r9, qword ptr [rsp + 0x30]
0xc8f8:	mov	r8, qword ptr [rsp + 0x38]
0xc8fd:	call	0x2b00


0xcb26:	sub	rsp, 8
0xcb2a:	mov	r9, r13
0xcb2d:	push	r12
0xcb2f:	push	r15
0xcb31:	push	r14
0xcb33:	mov	r8, qword ptr [rsp + 0x20]
0xcb38:	mov	rcx, rbx
0xcb3b:	mov	rdx, rax
0xcb3e:	mov	rdi, rbp
0xcb41:	mov	esi, 1
0xcb46:	xor	eax, eax
0xcb48:	call	0x2b00


0xcb4d:	add	rsp, 0x20
0xcb51:	add	rsp, 0x28
0xcb55:	pop	rbx
0xcb56:	pop	rbp
0xcb57:	pop	r12
0xcb59:	pop	r13
0xcb5b:	pop	r14
0xcb5d:	pop	r15
0xcb5f:	ret	


0xca92:	sub	rsp, 8
0xca96:	push	r14
0xca98:	mov	rdx, rax
0xca9b:	mov	r9, r13
0xca9e:	mov	r8, r12
0xcaa1:	mov	rcx, rbx
0xcaa4:	mov	rdi, rbp
0xcaa7:	mov	esi, 1
0xcaac:	xor	eax, eax
0xcaae:	call	0x2b00


0xcab3:	pop	rax
0xcab4:	pop	rdx
0xcab5:	add	rsp, 0x28
0xcab9:	pop	rbx
0xcaba:	pop	rbp
0xcabb:	pop	r12
0xcabd:	pop	r13
0xcabf:	pop	r14
0xcac1:	pop	r15
0xcac3:	ret	


0xcaee:	push	r15
0xcaf0:	jmp	0xca96


0xca96:	push	r14
0xca98:	mov	rdx, rax
0xca9b:	mov	r9, r13
0xca9e:	mov	r8, r12
0xcaa1:	mov	rcx, rbx
0xcaa4:	mov	rdi, rbp
0xcaa7:	mov	esi, 1
0xcaac:	xor	eax, eax
0xcaae:	call	0x2b00


0xc9f2:	add	rsp, 0x28
0xc9f6:	mov	r8, r12
0xc9f9:	mov	rcx, rbx
0xc9fc:	mov	rdi, rbp
0xc9ff:	mov	rdx, rax
0xca02:	mov	esi, 1
0xca07:	pop	rbx
0xca08:	pop	rbp
0xca09:	pop	r12
0xca0b:	pop	r13
0xca0d:	pop	r14
0xca0f:	pop	r15
0xca11:	xor	eax, eax
0xca13:	jmp	0x2b00


0xcb97:	push	r13
0xcb99:	push	r12
0xcb9b:	push	r15
0xcb9d:	push	r14
0xcb9f:	mov	r9, qword ptr [rsp + 0x28]
0xcba4:	jmp	0xcb33


0xcb33:	mov	r8, qword ptr [rsp + 0x20]
0xcb38:	mov	rcx, rbx
0xcb3b:	mov	rdx, rax
0xcb3e:	mov	rdi, rbp
0xcb41:	mov	esi, 1
0xcb46:	xor	eax, eax
0xcb48:	call	0x2b00


0xca3e:	add	rsp, 0x28
0xca42:	mov	r9, r13
0xca45:	mov	r8, r12
0xca48:	mov	rcx, rbx
0xca4b:	mov	rdi, rbp
0xca4e:	mov	rdx, rax
0xca51:	pop	rbx
0xca52:	pop	rbp
0xca53:	pop	r12
0xca55:	pop	r13
0xca57:	pop	r14
0xca59:	pop	r15
0xca5b:	mov	esi, 1
0xca60:	xor	eax, eax
0xca62:	jmp	0x2b00


0x8168:	mov	r11, qword ptr [rsp + 0x58]
0x816d:	mov	r10, qword ptr [rsp + 0x48]
0x8172:	mov	r9d, dword ptr [rsp + 0x50]
0x8177:	cmp	byte ptr [r11 + 0xd9], 0
0x817f:	je	0x6f20


0x8185:	mov	dword ptr [rsp + 0x58], r9d
0x818a:	mov	qword ptr [rsp + 0x50], r10
0x818f:	mov	rsi, r11
0x8192:	mov	qword ptr [rsp + 0x48], r11
0x8197:	jmp	0x7a20


0x7faa:	test	al, al
0x7fac:	mov	r11, qword ptr [rsp + 0x48]
0x7fb1:	mov	r10, qword ptr [rsp + 0x50]
0x7fb6:	mov	r9d, dword ptr [rsp + 0x58]
0x7fbb:	jne	0x6f20


0x7fc1:	jmp	0x7258


0x7ee5:	test	al, al
0x7ee7:	je	0x7258


0x7eed:	mov	r11, qword ptr [rsp + 0x48]
0x7ef2:	xor	edx, edx
0x7ef4:	mov	r10, qword ptr [rsp + 0x50]
0x7ef9:	mov	r9d, dword ptr [rsp + 0x58]
0x7efe:	movsxd	rax, dword ptr [r11 + 0x18]
0x7f02:	add	rax, qword ptr [r13 - 0x70]
0x7f06:	movsxd	rcx, eax
0x7f09:	seto	dl
0x7f0c:	mov	dword ptr [r11 + 0x18], eax
0x7f10:	cmp	rax, rcx
0x7f13:	mov	ecx, 1
0x7f18:	cmovne	edx, ecx
0x7f1b:	test	edx, edx
0x7f1d:	je	0x6f20


0x7f23:	jmp	0x7258


0x7bcb:	mov	rax, qword ptr [r13]
0x7bcf:	xor	r8d, r8d
0x7bd2:	mov	rdx, qword ptr [r13 + 0x10]
0x7bd6:	mov	rcx, qword ptr [r13 + 0x18]
0x7bda:	mov	rsi, qword ptr [r13 + 0x20]
0x7bde:	mov	rdi, qword ptr [r13 + 0x28]
0x7be2:	mov	qword ptr [rsp + 0x68], rax
0x7be7:	mov	rax, qword ptr [r13 + 8]
0x7beb:	mov	qword ptr [rsp + 0x70], rax
0x7bf0:	add	rsp, 0x20
0x7bf4:	mov	r11, qword ptr [rsp + 0x58]
0x7bf9:	mov	eax, dword ptr [r13 + 0x30]
0x7bfd:	mov	r10, qword ptr [rsp + 0x60]
0x7c02:	mov	r9d, dword ptr [rsp + 0x68]
0x7c07:	add	eax, dword ptr [r11 + 0x98]
0x7c0e:	jno	0x76df


0x7ab8:	add	rsp, 0x20
0x7abc:	mov	r11, qword ptr [rsp + 0x48]
0x7ac1:	mov	r10, qword ptr [rsp + 0x50]
0x7ac6:	mov	r9d, dword ptr [rsp + 0x58]
0x7acb:	jmp	0x6f20


0x4879:	sub	rsp, 8
0x487d:	mov	eax, dword ptr [rsp + 0x508]
0x4884:	xor	edi, edi
0x4886:	mov	r9d, r14d
0x4889:	push	rax
0x488a:	push	qword ptr [rsp + 0x20]
0x488e:	mov	ecx, ebp
0x4890:	push	qword ptr [rsp + 0x30]
0x4894:	mov	rdx, qword ptr [rsp + 0x20]
0x4899:	mov	r8d, dword ptr [rsp + 0x28]
0x489e:	mov	rsi, qword ptr [rsp + 0x58]
0x48a3:	call	0x4200


0x48a8:	add	rsp, 0x20
0x48ac:	movsxd	r10, dword ptr [rsp + 0x40]
0x48b1:	mov	edx, 0
0x48b6:	mov	rcx, r15
0x48b9:	not	rcx
0x48bc:	test	r10d, r10d
0x48bf:	cmovns	rdx, r10
0x48c3:	cmp	rax, rdx
0x48c6:	mov	r13, rdx
0x48c9:	cmovae	r13, rax
0x48cd:	cmp	rcx, r13
0x48d0:	jbe	0x42bf


0x48d6:	test	r12, r12
0x48d9:	jne	0x56db


0x48df:	add	r15, r13
0x48e2:	mov	rbp, rbx
0x48e5:	jmp	0x4310


0x56db:	cmp	rax, rdx
0x56de:	jae	0x5737


0x56e0:	movsxd	rdx, r10d
0x56e3:	mov	rdi, rdx
0x56e6:	sub	rdi, rax
0x56e9:	mov	eax, dword ptr [rsp + 8]
0x56ed:	cmp	eax, 0x30
0x56f0:	je	0x5ada


0x5737:	sub	rsp, 8
0x573b:	mov	r9d, r14d
0x573e:	mov	ecx, ebp
0x5740:	mov	eax, dword ptr [rsp + 0x508]
0x5747:	mov	rdi, r12
0x574a:	push	rax
0x574b:	push	qword ptr [rsp + 0x20]
0x574f:	push	qword ptr [rsp + 0x30]
0x5753:	mov	r8d, dword ptr [rsp + 0x28]
0x5758:	mov	rdx, qword ptr [rsp + 0x20]
0x575d:	mov	rsi, qword ptr [rsp + 0x58]
0x5762:	call	0x4200


0x5ada:	test	rdi, rdi
0x5add:	je	0x5737


0x56f6:	cmp	eax, 0x2b
0x56f9:	je	0x5ada


0x5ae3:	xor	edx, edx
0x5ae5:	mov	dword ptr [rsp + 0x34], ebp
0x5ae9:	mov	qword ptr [rsp + 0x40], rbx
0x5aee:	mov	rbp, rdi
0x5af1:	mov	rbx, rdx
0x5af4:	nop	dword ptr [rax]
0x5af8:	mov	rsi, r12
0x5afb:	mov	edi, 0x30
0x5b00:	add	rbx, 1
0x5b04:	call	0x2900


0x56ff:	xor	edx, edx
0x5701:	test	rdi, rdi
0x5704:	je	0x5737


0x5706:	mov	dword ptr [rsp + 0x34], ebp
0x570a:	mov	qword ptr [rsp + 0x40], rbx
0x570f:	mov	rbp, rdi
0x5712:	mov	rbx, rdx
0x5715:	nop	dword ptr [rax]
0x5718:	mov	rsi, r12
0x571b:	mov	edi, 0x20
0x5720:	add	rbx, 1
0x5724:	call	0x2900


0x5729:	cmp	rbp, rbx
0x572c:	jne	0x5718


0x572e:	mov	ebp, dword ptr [rsp + 0x34]
0x5732:	mov	rbx, qword ptr [rsp + 0x40]
0x5737:	sub	rsp, 8
0x573b:	mov	r9d, r14d
0x573e:	mov	ecx, ebp
0x5740:	mov	eax, dword ptr [rsp + 0x508]
0x5747:	mov	rdi, r12
0x574a:	push	rax
0x574b:	push	qword ptr [rsp + 0x20]
0x574f:	push	qword ptr [rsp + 0x30]
0x5753:	mov	r8d, dword ptr [rsp + 0x28]
0x5758:	mov	rdx, qword ptr [rsp + 0x20]
0x575d:	mov	rsi, qword ptr [rsp + 0x58]
0x5762:	call	0x4200


0x5718:	mov	rsi, r12
0x571b:	mov	edi, 0x20
0x5720:	add	rbx, 1
0x5724:	call	0x2900


0x5b09:	cmp	rbp, rbx
0x5b0c:	jne	0x5af8


0x5b0e:	jmp	0x572e


0x5af8:	mov	rsi, r12
0x5afb:	mov	edi, 0x30
0x5b00:	add	rbx, 1
0x5b04:	call	0x2900


0x5767:	add	rsp, 0x20
0x576b:	jmp	0x48df


0xb750:	sub	rsp, 8
0xb754:	mov	rcx, rbp
0xb757:	mov	rsi, r13
0xb75a:	push	qword ptr [rsp + 0x68]
0xb75e:	push	qword ptr [rsp + 0x78]
0xb762:	mov	rdi, r14
0xb765:	push	0
0xb767:	mov	r9d, dword ptr [rsp + 0x98]
0xb76f:	mov	r8d, dword ptr [rsp + 0x28]
0xb774:	mov	rdx, qword ptr [rsp + 0x30]
0xb779:	and	r9d, 0xfffffffd
0xb77d:	call	0xabb0


0xb782:	add	rsp, 0x20
0xb786:	mov	r15, rax
0xb789:	mov	rbx, qword ptr [rsp + 0xa8]
0xb791:	xor	rbx, qword ptr fs:[0x28]
0xb79a:	mov	rax, r15
0xb79d:	jne	0xbda3


0xb7a3:	add	rsp, 0xb8
0xb7aa:	pop	rbx
0xb7ab:	pop	rbp
0xb7ac:	pop	r12
0xb7ae:	pop	r13
0xb7b0:	pop	r14
0xb7b2:	pop	r15
0xb7b4:	ret	


0xbda3:	call	0x2850


0xbd4d:	sub	rsp, 8
0xbd51:	mov	r8d, 5
0xbd57:	mov	rcx, r11
0xbd5a:	push	qword ptr [rsp + 0x68]
0xbd5e:	push	qword ptr [rsp + 0x78]
0xbd62:	mov	rdi, r14
0xbd65:	push	qword ptr [rsp + 0x38]
0xbd69:	mov	r9d, dword ptr [rsp + 0x98]
0xbd71:	mov	rdx, qword ptr [rsp + 0x30]
0xbd76:	mov	rsi, qword ptr [rsp + 0x70]
0xbd7b:	call	0xabb0


0xbd80:	add	rsp, 0x20
0xbd84:	mov	r15, rax
0xbd87:	jmp	0xb789


0xb789:	mov	rbx, qword ptr [rsp + 0xa8]
0xb791:	xor	rbx, qword ptr fs:[0x28]
0xb79a:	mov	rax, r15
0xb79d:	jne	0xbda3


0x2710:	push	qword ptr [rip + 0x21567a]
0x2716:	jmp	qword ptr [rip + 0x21567c]


0x271c:	nop	dword ptr [rax]


0x2726:	push	0
0x272b:	jmp	0x2710


0x2736:	push	1
0x273b:	jmp	0x2710


0x2746:	push	2
0x274b:	jmp	0x2710


0x2756:	push	3
0x275b:	jmp	0x2710


0x2766:	push	4
0x276b:	jmp	0x2710


0x2776:	push	5
0x277b:	jmp	0x2710


0x2786:	push	6
0x278b:	jmp	0x2710


0x2796:	push	7
0x279b:	jmp	0x2710


0x27a6:	push	8
0x27ab:	jmp	0x2710


0x27b6:	push	9
0x27bb:	jmp	0x2710


0x27c6:	push	0xa
0x27cb:	jmp	0x2710


0x27d6:	push	0xb
0x27db:	jmp	0x2710


0x27e6:	push	0xc
0x27eb:	jmp	0x2710


0x27f6:	push	0xd
0x27fb:	jmp	0x2710


0x2806:	push	0xe
0x280b:	jmp	0x2710


0x2816:	push	0xf
0x281b:	jmp	0x2710


0x2826:	push	0x10
0x282b:	jmp	0x2710


0x2836:	push	0x11
0x283b:	jmp	0x2710


0x2846:	push	0x12
0x284b:	jmp	0x2710


0x2856:	push	0x13
0x285b:	jmp	0x2710


0x2866:	push	0x14
0x286b:	jmp	0x2710


0x2876:	push	0x15
0x287b:	jmp	0x2710


0x2886:	push	0x16
0x288b:	jmp	0x2710


0x2896:	push	0x17
0x289b:	jmp	0x2710


0x28a6:	push	0x18
0x28ab:	jmp	0x2710


0x28b6:	push	0x19
0x28bb:	jmp	0x2710


0x28c6:	push	0x1a
0x28cb:	jmp	0x2710


0x28d6:	push	0x1b
0x28db:	jmp	0x2710


0x28e6:	push	0x1c
0x28eb:	jmp	0x2710


0x28f6:	push	0x1d
0x28fb:	jmp	0x2710


0x2906:	push	0x1e
0x290b:	jmp	0x2710


0x2916:	push	0x1f
0x291b:	jmp	0x2710


0x2926:	push	0x20
0x292b:	jmp	0x2710


0x2936:	push	0x21
0x293b:	jmp	0x2710


0x2946:	push	0x22
0x294b:	jmp	0x2710


0x2956:	push	0x23
0x295b:	jmp	0x2710


0x2966:	push	0x24
0x296b:	jmp	0x2710


0x2976:	push	0x25
0x297b:	jmp	0x2710


0x2986:	push	0x26
0x298b:	jmp	0x2710


0x2996:	push	0x27
0x299b:	jmp	0x2710


0x29a6:	push	0x28
0x29ab:	jmp	0x2710


0x29b6:	push	0x29
0x29bb:	jmp	0x2710


0x29c6:	push	0x2a
0x29cb:	jmp	0x2710


0x29d6:	push	0x2b
0x29db:	jmp	0x2710


0x29e6:	push	0x2c
0x29eb:	jmp	0x2710


0x29f6:	push	0x2d
0x29fb:	jmp	0x2710


0x2a06:	push	0x2e
0x2a0b:	jmp	0x2710


0x2a16:	push	0x2f
0x2a1b:	jmp	0x2710


0x2a26:	push	0x30
0x2a2b:	jmp	0x2710


0x2a36:	push	0x31
0x2a3b:	jmp	0x2710


0x2a46:	push	0x32
0x2a4b:	jmp	0x2710


0x2a56:	push	0x33
0x2a5b:	jmp	0x2710


0x2a66:	push	0x34
0x2a6b:	jmp	0x2710


0x2a76:	push	0x35
0x2a7b:	jmp	0x2710


0x2a80:	jmp	qword ptr [rip + 0x2154ca]




0x2a86:	push	0x36
0x2a8b:	jmp	0x2710


0x2a96:	push	0x37
0x2a9b:	jmp	0x2710


0x2aa6:	push	0x38
0x2aab:	jmp	0x2710


0x2ab6:	push	0x39
0x2abb:	jmp	0x2710


0x2ac6:	push	0x3a
0x2acb:	jmp	0x2710


0x2ad6:	push	0x3b
0x2adb:	jmp	0x2710


0x2ae6:	push	0x3c
0x2aeb:	jmp	0x2710


0x2af6:	push	0x3d
0x2afb:	jmp	0x2710


0x2b06:	push	0x3e
0x2b0b:	jmp	0x2710


0x2b10:	jmp	qword ptr [rip + 0x215482]




0x2b16:	push	0x3f
0x2b1b:	jmp	0x2710


0x2b20:	jmp	qword ptr [rip + 0x21547a]




0x2b26:	push	0x40
0x2b2b:	jmp	0x2710


0x2b36:	push	0x41
0x2b3b:	jmp	0x2710


0x2b40:	jmp	qword ptr [rip + 0x21546a]




0x2b46:	push	0x42
0x2b4b:	jmp	0x2710


0x2b56:	push	0x43
0x2b5b:	jmp	0x2710


0x2bc7:	nop	word ptr [rax + rax]


0x33fa:	hlt	


0x33fb:	nop	dword ptr [rax + rax]


0x3432:	nop	dword ptr [rax]
0x3436:	nop	word ptr cs:[rax + rax]


0x3482:	nop	dword ptr [rax]
0x3486:	nop	word ptr cs:[rax + rax]


0x34ca:	nop	word ptr [rax + rax]


0x34da:	nop	word ptr [rax + rax]


0x3639:	nop	dword ptr [rax]


0x3cda:	nop	word ptr [rax + rax]


0x3cea:	nop	word ptr [rax + rax]


0x3e06:	nop	word ptr cs:[rax + rax]


0x3e83:	nop	dword ptr [rax]
0x3e86:	nop	word ptr cs:[rax + rax]


0x401d:	nop	dword ptr [rax]


0x406d:	nop	dword ptr [rax]


0x4078:	nop	dword ptr [rax + rax]


0x4088:	nop	dword ptr [rax + rax]


0x4134:	nop	word ptr cs:[rax + rax]
0x413e:	nop	


0x4192:	nop	dword ptr [rax]
0x4196:	nop	word ptr cs:[rax + rax]


0x41f2:	nop	dword ptr [rax]
0x41f6:	nop	word ptr cs:[rax + rax]


0x440b:	mov	rbx, qword ptr [rsp + 0x38]
0x4410:	lea	rax, [rbx - 1]
0x4414:	mov	r13d, 1
0x441a:	mov	rdx, rax
0x441d:	lea	rax, [rax - 1]
0x4421:	add	r13d, 1
0x4425:	cmp	byte ptr [rax + 1], 0x25
0x4429:	jne	0x441a


0x45aa:	xor	r14d, r14d
0x45ad:	mov	ebp, 0x2520
0x45b2:	test	r11d, r11d
0x45b5:	mov	word ptr [rsp + 0x9b], bp
0x45bd:	jne	0x5e10


0x45c3:	lea	rdx, [rsp + 0x9b]
0x45cb:	mov	rbp, rbx
0x45ce:	lea	rax, [rdx + 2]
0x45d2:	mov	byte ptr [rax], r13b
0x45d5:	mov	byte ptr [rax + 1], 0
0x45d9:	lea	rax, [rsp + 0xa0]
0x45e1:	mov	rcx, qword ptr [rsp]
0x45e5:	mov	esi, 0x400
0x45ea:	mov	dword ptr [rsp + 0x40], r10d
0x45ef:	mov	rdi, rax
0x45f2:	mov	dword ptr [rsp + 0x58], r11d
0x45f7:	mov	qword ptr [rsp + 0x38], rax
0x45fc:	call	0x2a80


0x5e10:	xor	esi, esi
0x5e12:	jmp	0x480a


0x480a:	lea	rdx, [rsp + 0x9b]
0x4812:	mov	byte ptr [rsp + 0x9d], r11b
0x481a:	mov	rbp, rbx
0x481d:	mov	r11d, esi
0x4820:	lea	rax, [rdx + 3]
0x4824:	jmp	0x45d2


0x45d2:	mov	byte ptr [rax], r13b
0x45d5:	mov	byte ptr [rax + 1], 0
0x45d9:	lea	rax, [rsp + 0xa0]
0x45e1:	mov	rcx, qword ptr [rsp]
0x45e5:	mov	esi, 0x400
0x45ea:	mov	dword ptr [rsp + 0x40], r10d
0x45ef:	mov	rdi, rax
0x45f2:	mov	dword ptr [rsp + 0x58], r11d
0x45f7:	mov	qword ptr [rsp + 0x38], rax
0x45fc:	call	0x2a80


0x4601:	test	rax, rax
0x4604:	je	0x4310


0x460a:	movsxd	r10, dword ptr [rsp + 0x40]
0x460f:	lea	r13, [rax - 1]
0x4613:	mov	eax, 0
0x4618:	mov	rdx, r15
0x461b:	not	rdx
0x461e:	test	r10d, r10d
0x4621:	cmovns	rax, r10
0x4625:	cmp	r13, rax
0x4628:	mov	rdi, rax
0x462b:	cmovae	rdi, r13
0x462f:	cmp	rdx, rdi
0x4632:	mov	qword ptr [rsp + 0x40], rdi
0x4637:	jbe	0x42bf


0x463d:	test	r12, r12
0x4640:	je	0x46c3


0x46c3:	add	r15, qword ptr [rsp + 0x40]
0x46c8:	jmp	0x4310


0x4646:	mov	r11d, dword ptr [rsp + 0x58]
0x464b:	test	r11d, r11d
0x464e:	jne	0x469b


0x4650:	cmp	r13, rax
0x4653:	jae	0x469b


0x469b:	test	r14b, r14b
0x469e:	jne	0x5630


0x4655:	mov	eax, dword ptr [rsp + 8]
0x4659:	movsxd	rbx, r10d
0x465c:	sub	rbx, r13
0x465f:	cmp	eax, 0x30
0x4662:	je	0x5670


0x46a4:	cmp	byte ptr [rsp + 0x34], 0
0x46a9:	je	0x5608


0x5630:	mov	rsi, qword ptr [rsp + 0x38]
0x5635:	mov	rdx, r13
0x5638:	mov	rdi, r12
0x563b:	add	rsi, 1
0x563f:	call	0x4140


0x5670:	test	rbx, rbx
0x5673:	je	0x469b


0x4668:	cmp	eax, 0x2b
0x466b:	je	0x5670


0x5608:	mov	rdi, qword ptr [rsp + 0x38]
0x560d:	mov	rcx, r12
0x5610:	mov	edx, 1
0x5615:	mov	rsi, r13
0x5618:	add	rdi, 1
0x561c:	call	0x2af0


0x46af:	mov	rsi, qword ptr [rsp + 0x38]
0x46b4:	mov	rdx, r13
0x46b7:	mov	rdi, r12
0x46ba:	add	rsi, 1
0x46be:	call	0x41a0


0x5679:	xor	edx, edx
0x567b:	mov	qword ptr [rsp + 8], rbp
0x5680:	mov	rbp, rdx
0x5683:	nop	dword ptr [rax + rax]
0x5688:	mov	rsi, r12
0x568b:	mov	edi, 0x30
0x5690:	add	rbp, 1
0x5694:	call	0x2900


0x4671:	xor	edx, edx
0x4673:	test	rbx, rbx
0x4676:	je	0x469b


0x4678:	mov	qword ptr [rsp + 8], rbp
0x467d:	mov	rbp, rdx
0x4680:	mov	rsi, r12
0x4683:	mov	edi, 0x20
0x4688:	add	rbp, 1
0x468c:	call	0x2900


0x4691:	cmp	rbx, rbp
0x4694:	jne	0x4680


0x4696:	mov	rbp, qword ptr [rsp + 8]
0x469b:	test	r14b, r14b
0x469e:	jne	0x5630


0x4680:	mov	rsi, r12
0x4683:	mov	edi, 0x20
0x4688:	add	rbp, 1
0x468c:	call	0x2900


0x5699:	cmp	rbx, rbp
0x569c:	jne	0x5688


0x569e:	jmp	0x4696


0x5688:	mov	rsi, r12
0x568b:	mov	edi, 0x30
0x5690:	add	rbp, 1
0x5694:	call	0x2900


0x5621:	jmp	0x46c3


0x5644:	jmp	0x46c3


0x46d9:	movzx	eax, byte ptr [rsp + 0x34]
0x46de:	test	r14b, r14b
0x46e1:	lea	rdx, [rsp + 0x9b]
0x46e9:	mov	rbp, rbx
0x46ec:	cmovne	eax, r14d
0x46f0:	xor	r14d, r14d
0x46f3:	xor	r11d, r11d
0x46f6:	mov	byte ptr [rsp + 0x34], al
0x46fa:	mov	eax, 0x2520
0x46ff:	mov	word ptr [rsp + 0x9b], ax
0x4707:	lea	rax, [rdx + 2]
0x470b:	jmp	0x45d2


0x4710:	test	r10d, r10d
0x4713:	mov	r13d, 0
0x4719:	mov	eax, 1
0x471e:	cmovns	r13d, r10d
0x4722:	movsxd	r13, r13d
0x4725:	test	r13, r13
0x4728:	cmove	r13, rax
0x472c:	mov	rax, r15
0x472f:	not	rax
0x4732:	cmp	rax, r13
0x4735:	jbe	0x42bf


0x473b:	test	r12, r12
0x473e:	je	0x48df


0x4744:	cmp	r10d, 1
0x4748:	jle	0x477f


0x477f:	mov	rsi, r12
0x4782:	mov	edi, 9
0x4787:	call	0x2900


0x474a:	mov	eax, dword ptr [rsp + 8]
0x474e:	movsxd	r10, r10d
0x4751:	lea	r14, [r10 - 1]
0x4755:	cmp	eax, 0x30
0x4758:	je	0x5c2f


0x5c2f:	xor	ebp, ebp
0x5c31:	mov	rsi, r12
0x5c34:	mov	edi, 0x30
0x5c39:	add	rbp, 1
0x5c3d:	call	0x2900


0x475e:	xor	ebp, ebp
0x4760:	cmp	eax, 0x2b
0x4763:	je	0x5c2f


0x4769:	mov	rsi, r12
0x476c:	mov	edi, 0x20
0x4771:	add	rbp, 1
0x4775:	call	0x2900


0x477a:	cmp	r14, rbp
0x477d:	jne	0x4769


0x5c42:	cmp	r14, rbp
0x5c45:	jne	0x5c31


0x5c47:	jmp	0x477f


0x5c31:	mov	rsi, r12
0x5c34:	mov	edi, 0x30
0x5c39:	add	rbp, 1
0x5c3d:	call	0x2900


0x478c:	jmp	0x48df


0x4791:	mov	rax, qword ptr [rsp]
0x4795:	mov	edx, 0x92492493
0x479a:	mov	esi, 1
0x479f:	mov	eax, dword ptr [rax + 0x18]
0x47a2:	lea	ecx, [rax + 6]
0x47a5:	mov	dword ptr [rsp + 0x38], eax
0x47a9:	mov	eax, ecx
0x47ab:	imul	edx
0x47ad:	lea	eax, [rdx + rcx]
0x47b0:	mov	edx, ecx
0x47b2:	sar	edx, 0x1f
0x47b5:	sar	eax, 2
0x47b8:	sub	eax, edx
0x47ba:	lea	edx, [rax*8]
0x47c1:	sub	edx, eax
0x47c3:	sub	ecx, edx
0x47c5:	add	ecx, 1
0x47c8:	nop	dword ptr [rax + rax]
0x47d0:	mov	eax, ecx
0x47d2:	xor	r8d, r8d
0x47d5:	xor	r9d, r9d
0x47d8:	shr	eax, 0x1f
0x47db:	mov	r13d, eax
0x47de:	mov	eax, ecx
0x47e0:	not	eax
0x47e2:	shr	eax, 0x1f
0x47e5:	cmp	r11d, 0x4f
0x47e9:	jne	0x5500


0x47ef:	test	al, al
0x47f1:	je	0x5500


0x5500:	mov	eax, ecx
0x5502:	neg	eax
0x5504:	test	r13b, r13b
0x5507:	cmovne	ecx, eax
0x550a:	jmp	0x4ae8


0x47f7:	mov	r13d, edi
0x47fa:	mov	edx, 0x2520
0x47ff:	xor	r14d, r14d
0x4802:	mov	word ptr [rsp + 0x9b], dx
0x480a:	lea	rdx, [rsp + 0x9b]
0x4812:	mov	byte ptr [rsp + 0x9d], r11b
0x481a:	mov	rbp, rbx
0x481d:	mov	r11d, esi
0x4820:	lea	rax, [rdx + 3]
0x4824:	jmp	0x45d2


0x4ae8:	lea	rax, [rsp + 0xa0]
0x4af0:	lea	rdi, [rsp + 0xb7]
0x4af8:	mov	r11d, 0xcccccccd
0x4afe:	mov	qword ptr [rsp + 0x38], rax
0x4b03:	nop	dword ptr [rax + rax]
0x4b08:	test	r8b, 1
0x4b0c:	lea	r14, [rdi - 1]
0x4b10:	je	0x4b20


0x4b20:	mov	eax, ecx
0x4b22:	sar	r8d, 1
0x4b25:	mul	r11d
0x4b28:	shr	edx, 3
0x4b2b:	lea	eax, [rdx + rdx*4]
0x4b2e:	add	eax, eax
0x4b30:	sub	ecx, eax
0x4b32:	mov	eax, r8d
0x4b35:	add	ecx, 0x30
0x4b38:	or	eax, edx
0x4b3a:	mov	byte ptr [rdi - 1], cl
0x4b3d:	mov	ecx, edx
0x4b3f:	mov	rdi, r14
0x4b42:	jne	0x4b08


0x4b12:	lea	rax, [rdi - 2]
0x4b16:	mov	byte ptr [rdi - 1], 0x3a
0x4b1a:	mov	rdi, r14
0x4b1d:	mov	r14, rax
0x4b20:	mov	eax, ecx
0x4b22:	sar	r8d, 1
0x4b25:	mul	r11d
0x4b28:	shr	edx, 3
0x4b2b:	lea	eax, [rdx + rdx*4]
0x4b2e:	add	eax, eax
0x4b30:	sub	ecx, eax
0x4b32:	mov	eax, r8d
0x4b35:	add	ecx, 0x30
0x4b38:	or	eax, edx
0x4b3a:	mov	byte ptr [rdi - 1], cl
0x4b3d:	mov	ecx, edx
0x4b3f:	mov	rdi, r14
0x4b42:	jne	0x4b08


0x4b44:	cmp	r10d, esi
0x4b47:	cmovge	esi, r10d
0x4b4b:	test	r13b, r13b
0x4b4e:	mov	dword ptr [rsp + 0x58], esi
0x4b52:	jne	0x5510


0x4b08:	test	r8b, 1
0x4b0c:	lea	r14, [rdi - 1]
0x4b10:	je	0x4b20


0x4b58:	test	r9b, r9b
0x4b5b:	je	0x49d9


0x5510:	cmp	dword ptr [rsp + 8], 0x2d
0x5515:	mov	ebp, 0x2d
0x551a:	jne	0x4b71


0x49d9:	mov	rax, qword ptr [rsp + 0x38]
0x49de:	mov	rdx, r15
0x49e1:	not	rdx
0x49e4:	add	rax, 0x17
0x49e8:	sub	rax, r14
0x49eb:	cmp	dword ptr [rsp + 8], 0x2d
0x49f0:	mov	qword ptr [rsp + 0x40], rax
0x49f5:	je	0x4a0a


0x4b61:	cmp	dword ptr [rsp + 8], 0x2d
0x4b66:	mov	ebp, 0x2b
0x4b6b:	je	0x591d


0x5520:	mov	byte ptr [rsp + 0x40], 0x2d
0x5525:	test	r10d, r10d
0x5528:	mov	ecx, 0
0x552d:	mov	eax, 1
0x5532:	cmovns	ecx, r10d
0x5536:	movsxd	r13, ecx
0x5539:	test	r13, r13
0x553c:	cmovne	rax, r13
0x5540:	mov	rdi, rax
0x5543:	mov	qword ptr [rsp + 8], rax
0x5548:	mov	rax, r15
0x554b:	not	rax
0x554e:	cmp	rax, rdi
0x5551:	jbe	0x42bf


0x4b71:	mov	rax, qword ptr [rsp + 0x38]
0x4b76:	mov	rdx, r15
0x4b79:	not	rdx
0x4b7c:	add	rax, 0x17
0x4b80:	sub	rax, r14
0x4b83:	mov	rdi, rax
0x4b86:	mov	qword ptr [rsp + 0x40], rax
0x4b8b:	mov	eax, dword ptr [rsp + 0x58]
0x4b8f:	sub	eax, 1
0x4b92:	sub	eax, edi
0x4b94:	test	eax, eax
0x4b96:	mov	r13d, eax
0x4b99:	jle	0x5860


0x4a0a:	test	r10d, r10d
0x4a0d:	mov	ecx, 0
0x4a12:	mov	rbp, rbx
0x4a15:	cmovns	ecx, r10d
0x4a19:	movsxd	r13, ecx
0x4a1c:	mov	rax, qword ptr [rsp + 0x40]
0x4a21:	cmp	rax, r13
0x4a24:	mov	rbx, rax
0x4a27:	cmovb	rbx, r13
0x4a2b:	cmp	rbx, rdx
0x4a2e:	jae	0x42bf


0x49f7:	mov	r13d, dword ptr [rsp + 0x58]
0x49fc:	sub	r13d, dword ptr [rsp + 0x40]
0x4a01:	test	r13d, r13d
0x4a04:	jg	0x5b3e


0x591d:	mov	byte ptr [rsp + 0x40], 0x2b
0x5922:	jmp	0x5525


0x5557:	test	r12, r12
0x555a:	je	0x55b9


0x5860:	test	r10d, r10d
0x5863:	mov	ecx, 0
0x5868:	mov	eax, 1
0x586d:	cmovns	ecx, r10d
0x5871:	movsxd	r13, ecx
0x5874:	test	r13, r13
0x5877:	cmovne	rax, r13
0x587b:	cmp	rax, rdx
0x587e:	mov	qword ptr [rsp + 0x48], rax
0x5883:	jae	0x42bf


0x4b9f:	cmp	dword ptr [rsp + 8], 0x5f
0x4ba4:	je	0x57bc


0x4a34:	test	r12, r12
0x4a37:	je	0x4aae


0x5b3e:	cmp	dword ptr [rsp + 8], 0x5f
0x5b43:	je	0x57ba


0x5525:	test	r10d, r10d
0x5528:	mov	ecx, 0
0x552d:	mov	eax, 1
0x5532:	cmovns	ecx, r10d
0x5536:	movsxd	r13, ecx
0x5539:	test	r13, r13
0x553c:	cmovne	rax, r13
0x5540:	mov	rdi, rax
0x5543:	mov	qword ptr [rsp + 8], rax
0x5548:	mov	rax, r15
0x554b:	not	rax
0x554e:	cmp	rax, rdi
0x5551:	jbe	0x42bf


0x55b9:	add	r15, qword ptr [rsp + 8]
0x55be:	mov	rax, qword ptr [rsp + 0x38]
0x55c3:	mov	rbp, rbx
0x55c6:	mov	dword ptr [rsp + 8], 0x2d
0x55ce:	add	rax, 0x17
0x55d2:	sub	rax, r14
0x55d5:	mov	rdx, r15
0x55d8:	mov	qword ptr [rsp + 0x40], rax
0x55dd:	not	rdx
0x55e0:	jmp	0x4a1c


0x555c:	mov	edi, dword ptr [rsp + 0x58]
0x5560:	test	edi, edi
0x5562:	jne	0x55a2


0x5889:	test	r12, r12
0x588c:	je	0x590a


0x57bc:	movsxd	rax, r13d
0x57bf:	cmp	rax, rdx
0x57c2:	mov	qword ptr [rsp + 8], rax
0x57c7:	jae	0x42bf


0x4baa:	movsxd	rax, dword ptr [rsp + 0x58]
0x4baf:	cmp	rax, rdx
0x4bb2:	mov	rdi, rax
0x4bb5:	jae	0x42bf


0x4aae:	add	r15, rbx
0x4ab1:	jmp	0x4310


0x4a39:	mov	edx, dword ptr [rsp + 0x58]
0x4a3d:	test	edx, edx
0x4a3f:	jne	0x4a93


0x57ba:	xor	ebp, ebp
0x57bc:	movsxd	rax, r13d
0x57bf:	cmp	rax, rdx
0x57c2:	mov	qword ptr [rsp + 8], rax
0x57c7:	jae	0x42bf


0x5b49:	movsxd	rax, dword ptr [rsp + 0x58]
0x5b4e:	cmp	rax, rdx
0x5b51:	jb	0x4c51


0x4a1c:	mov	rax, qword ptr [rsp + 0x40]
0x4a21:	cmp	rax, r13
0x4a24:	mov	rbx, rax
0x4a27:	cmovb	rbx, r13
0x4a2b:	cmp	rbx, rdx
0x4a2e:	jae	0x42bf


0x5564:	cmp	r13, 1
0x5568:	jbe	0x55a2


0x55a2:	movsx	edi, byte ptr [rsp + 0x40]
0x55a7:	mov	rsi, r12
0x55aa:	mov	dword ptr [rsp + 0x48], r10d
0x55af:	call	0x2900


0x590a:	add	r15, qword ptr [rsp + 0x48]
0x590f:	mov	rbp, rbx
0x5912:	mov	rdx, r15
0x5915:	not	rdx
0x5918:	jmp	0x4a1c


0x588e:	mov	ecx, dword ptr [rsp + 0x58]
0x5892:	test	ecx, ecx
0x5894:	jne	0x58f4


0x57cd:	test	r12, r12
0x57d0:	je	0x5815


0x4bbb:	test	r10d, r10d
0x4bbe:	mov	eax, 0
0x4bc3:	mov	ecx, 1
0x4bc8:	cmovns	eax, r10d
0x4bcc:	cdqe	
0x4bce:	test	rax, rax
0x4bd1:	cmovne	rcx, rax
0x4bd5:	cmp	rcx, rdx
0x4bd8:	mov	qword ptr [rsp + 0x48], rcx
0x4bdd:	jae	0x42bf


0x4a41:	cmp	rax, r13
0x4a44:	jae	0x4a93


0x4a93:	cmp	byte ptr [rsp + 0x34], 0
0x4a98:	je	0x5650


0x4c51:	mov	rbp, rbx
0x4c54:	movsxd	rbx, r13d
0x4c57:	xor	r13d, r13d
0x4c5a:	test	r12, r12
0x4c5d:	je	0x4c76


0x5b57:	jmp	0x42bf


0x556a:	movsxd	rax, r10d
0x556d:	sub	rax, 1
0x5571:	je	0x55a2


0x5896:	cmp	r13, 1
0x589a:	jbe	0x58f4


0x58f4:	movsx	edi, bpl
0x58f8:	mov	rsi, r12
0x58fb:	mov	dword ptr [rsp + 0x38], r10d
0x5900:	call	0x2900


0x5815:	add	r15, qword ptr [rsp + 8]
0x581a:	mov	eax, r10d
0x581d:	sub	eax, r13d
0x5820:	cmp	r10d, r13d
0x5823:	mov	r10d, 0
0x5829:	cmovg	r10d, eax
0x582d:	test	bpl, bpl
0x5830:	mov	rdx, r15
0x5833:	not	rdx
0x5836:	jne	0x5963


0x57d2:	xor	edx, edx
0x57d4:	mov	byte ptr [rsp + 0x40], bpl
0x57d9:	mov	qword ptr [rsp + 0x48], rbx
0x57de:	mov	rbp, rdx
0x57e1:	mov	rbx, rax
0x57e4:	mov	dword ptr [rsp + 0x50], r10d
0x57e9:	nop	dword ptr [rax]
0x57f0:	mov	rsi, r12
0x57f3:	mov	edi, 0x20
0x57f8:	add	rbp, 1
0x57fc:	call	0x2900


0x4be3:	test	r12, r12
0x4be6:	je	0x4c4c


0x4a46:	movsxd	r13, r10d
0x4a49:	sub	r13, rax
0x4a4c:	mov	eax, dword ptr [rsp + 8]
0x4a50:	cmp	eax, 0x30
0x4a53:	je	0x5770


0x5650:	mov	rsi, qword ptr [rsp + 0x40]
0x5655:	mov	rcx, r12
0x5658:	mov	edx, 1
0x565d:	mov	rdi, r14
0x5660:	call	0x2af0


0x4a9e:	mov	rdx, qword ptr [rsp + 0x40]
0x4aa3:	mov	rsi, r14
0x4aa6:	mov	rdi, r12
0x4aa9:	call	0x41a0


0x4c76:	add	r15, rbx
0x4c79:	xor	r13d, r13d
0x4c7c:	xor	r10d, r10d
0x4c7f:	mov	rdx, r15
0x4c82:	not	rdx
0x4c85:	jmp	0x4a1c


0x5573:	mov	qword ptr [rsp + 0x48], rbx
0x5578:	xor	ebp, ebp
0x557a:	mov	rbx, rax
0x557d:	mov	dword ptr [rsp + 0x50], r10d
0x5582:	mov	rsi, r12
0x5585:	mov	edi, 0x20
0x558a:	add	rbp, 1
0x558e:	call	0x2900


0x589c:	mov	edi, dword ptr [rsp + 8]
0x58a0:	movsxd	rax, r10d
0x58a3:	sub	rax, 1
0x58a7:	mov	qword ptr [rsp + 0x38], rax
0x58ac:	cmp	edi, 0x30
0x58af:	je	0x5d76


0x583c:	mov	rax, qword ptr [rsp + 0x38]
0x5841:	movsxd	r13, r10d
0x5844:	mov	rbp, rbx
0x5847:	mov	dword ptr [rsp + 8], 0x5f
0x584f:	add	rax, 0x17
0x5853:	sub	rax, r14
0x5856:	mov	qword ptr [rsp + 0x40], rax
0x585b:	jmp	0x4a1c


0x5963:	movsxd	rcx, r10d
0x5966:	mov	r13d, 1
0x596c:	test	rcx, rcx
0x596f:	cmovne	r13, rcx
0x5973:	cmp	r13, rdx
0x5976:	mov	qword ptr [rsp + 8], r13
0x597b:	jae	0x42bf


0x4c4c:	add	r15, qword ptr [rsp + 0x48]
0x4c51:	mov	rbp, rbx
0x4c54:	movsxd	rbx, r13d
0x4c57:	xor	r13d, r13d
0x4c5a:	test	r12, r12
0x4c5d:	je	0x4c76


0x4be8:	test	edi, edi
0x4bea:	jne	0x4c40


0x5770:	test	r13, r13
0x5773:	je	0x4a93


0x4a59:	cmp	eax, 0x2b
0x4a5c:	je	0x5770


0x5d76:	cmp	qword ptr [rsp + 0x38], 0
0x5d7c:	je	0x58f4


0x58b5:	cmp	edi, 0x2b
0x58b8:	je	0x5d76


0x5981:	test	r12, r12
0x5984:	je	0x59f5


0x4bec:	cmp	rax, 1
0x4bf0:	jbe	0x4c40


0x4c40:	movsx	edi, bpl
0x4c44:	mov	rsi, r12
0x4c47:	call	0x2900


0x5779:	xor	edx, edx
0x577b:	mov	qword ptr [rsp + 8], rbx
0x5780:	mov	rbx, rdx
0x5783:	nop	dword ptr [rax + rax]
0x5788:	mov	rsi, r12
0x578b:	mov	edi, 0x30
0x5790:	add	rbx, 1
0x5794:	call	0x2900


0x4a62:	xor	edx, edx
0x4a64:	test	r13, r13
0x4a67:	je	0x4a93


0x5d82:	xor	edx, edx
0x5d84:	mov	qword ptr [rsp + 0x50], rbx
0x5d89:	mov	dword ptr [rsp + 0x5c], r10d
0x5d8e:	mov	rbx, rdx
0x5d91:	mov	rsi, r12
0x5d94:	mov	edi, 0x30
0x5d99:	add	rbx, 1
0x5d9d:	call	0x2900


0x58be:	xor	edx, edx
0x58c0:	test	rax, rax
0x58c3:	je	0x58f4


0x59f5:	add	r15, qword ptr [rsp + 8]
0x59fa:	mov	rax, qword ptr [rsp + 0x38]
0x59ff:	mov	r13, rcx
0x5a02:	mov	rbp, rbx
0x5a05:	mov	dword ptr [rsp + 8], 0x5f
0x5a0d:	add	rax, 0x17
0x5a11:	sub	rax, r14
0x5a14:	mov	rdx, r15
0x5a17:	mov	qword ptr [rsp + 0x40], rax
0x5a1c:	not	rdx
0x5a1f:	jmp	0x4a1c


0x5986:	mov	esi, dword ptr [rsp + 0x58]
0x598a:	test	esi, esi
0x598c:	jne	0x59d5


0x4bf2:	mov	edi, dword ptr [rsp + 8]
0x4bf6:	movsxd	r10, r10d
0x4bf9:	lea	rax, [r10 - 1]
0x4bfd:	cmp	edi, 0x30
0x4c00:	mov	qword ptr [rsp + 0x38], rax
0x4c05:	je	0x5d10


0x4a69:	mov	qword ptr [rsp + 8], rbx
0x4a6e:	mov	rbx, rdx
0x4a71:	nop	dword ptr [rax]
0x4a78:	mov	rsi, r12
0x4a7b:	mov	edi, 0x20
0x4a80:	add	rbx, 1
0x4a84:	call	0x2900


0x58c5:	mov	qword ptr [rsp + 0x50], rbx
0x58ca:	mov	dword ptr [rsp + 0x5c], r10d
0x58cf:	mov	rbx, rdx
0x58d2:	mov	rsi, r12
0x58d5:	mov	edi, 0x20
0x58da:	add	rbx, 1
0x58de:	call	0x2900


0x598e:	cmp	r10d, 1
0x5992:	jbe	0x59d5


0x59d5:	movsx	edi, bpl
0x59d9:	mov	rsi, r12
0x59dc:	mov	dword ptr [rsp + 0x48], r10d
0x59e1:	mov	qword ptr [rsp + 0x40], rcx
0x59e6:	call	0x2900


0x5d10:	cmp	qword ptr [rsp + 0x38], 0
0x5d16:	je	0x4c40


0x4c0b:	cmp	edi, 0x2b
0x4c0e:	je	0x5d10


0x5994:	lea	rax, [rcx - 1]
0x5998:	xor	r13d, r13d
0x599b:	mov	qword ptr [rsp + 0x48], rbx
0x59a0:	mov	dword ptr [rsp + 0x50], r10d
0x59a5:	mov	rbx, r13
0x59a8:	mov	r13, rcx
0x59ab:	mov	qword ptr [rsp + 0x40], rax
0x59b0:	mov	rsi, r12
0x59b3:	mov	edi, 0x20
0x59b8:	add	rbx, 1
0x59bc:	call	0x2900


0x5d1c:	xor	edx, edx
0x5d1e:	mov	qword ptr [rsp + 0x50], rbx
0x5d23:	mov	rbx, rdx
0x5d26:	mov	rsi, r12
0x5d29:	mov	edi, 0x30
0x5d2e:	add	rbx, 1
0x5d32:	call	0x2900


0x4c14:	xor	edx, edx
0x4c16:	test	rax, rax
0x4c19:	je	0x4c40


0x4c1b:	mov	qword ptr [rsp + 0x50], rbx
0x4c20:	mov	rbx, rdx
0x4c23:	mov	rsi, r12
0x4c26:	mov	edi, 0x20
0x4c2b:	add	rbx, 1
0x4c2f:	call	0x2900


0x5665:	jmp	0x4aae


0x4c34:	cmp	qword ptr [rsp + 0x38], rbx
0x4c39:	jne	0x4c23


0x4c3b:	mov	rbx, qword ptr [rsp + 0x50]
0x4c40:	movsx	edi, bpl
0x4c44:	mov	rsi, r12
0x4c47:	call	0x2900


0x4c23:	mov	rsi, r12
0x4c26:	mov	edi, 0x20
0x4c2b:	add	rbx, 1
0x4c2f:	call	0x2900


0x5d37:	cmp	qword ptr [rsp + 0x38], rbx
0x5d3c:	jne	0x5d26


0x5d3e:	jmp	0x4c3b


0x5d26:	mov	rsi, r12
0x5d29:	mov	edi, 0x30
0x5d2e:	add	rbx, 1
0x5d32:	call	0x2900


0x59c1:	cmp	qword ptr [rsp + 0x40], rbx
0x59c6:	jne	0x59b0


0x59c8:	mov	rbx, qword ptr [rsp + 0x48]
0x59cd:	mov	r10d, dword ptr [rsp + 0x50]
0x59d2:	mov	rcx, r13
0x59d5:	movsx	edi, bpl
0x59d9:	mov	rsi, r12
0x59dc:	mov	dword ptr [rsp + 0x48], r10d
0x59e1:	mov	qword ptr [rsp + 0x40], rcx
0x59e6:	call	0x2900


0x59b0:	mov	rsi, r12
0x59b3:	mov	edi, 0x20
0x59b8:	add	rbx, 1
0x59bc:	call	0x2900


0x59eb:	mov	r10d, dword ptr [rsp + 0x48]
0x59f0:	mov	rcx, qword ptr [rsp + 0x40]
0x59f5:	add	r15, qword ptr [rsp + 8]
0x59fa:	mov	rax, qword ptr [rsp + 0x38]
0x59ff:	mov	r13, rcx
0x5a02:	mov	rbp, rbx
0x5a05:	mov	dword ptr [rsp + 8], 0x5f
0x5a0d:	add	rax, 0x17
0x5a11:	sub	rax, r14
0x5a14:	mov	rdx, r15
0x5a17:	mov	qword ptr [rsp + 0x40], rax
0x5a1c:	not	rdx
0x5a1f:	jmp	0x4a1c


0x58e3:	cmp	qword ptr [rsp + 0x38], rbx
0x58e8:	jne	0x58d2


0x58ea:	mov	rbx, qword ptr [rsp + 0x50]
0x58ef:	mov	r10d, dword ptr [rsp + 0x5c]
0x58f4:	movsx	edi, bpl
0x58f8:	mov	rsi, r12
0x58fb:	mov	dword ptr [rsp + 0x38], r10d
0x5900:	call	0x2900


0x58d2:	mov	rsi, r12
0x58d5:	mov	edi, 0x20
0x58da:	add	rbx, 1
0x58de:	call	0x2900


0x5905:	mov	r10d, dword ptr [rsp + 0x38]
0x590a:	add	r15, qword ptr [rsp + 0x48]
0x590f:	mov	rbp, rbx
0x5912:	mov	rdx, r15
0x5915:	not	rdx
0x5918:	jmp	0x4a1c


0x4a89:	cmp	r13, rbx
0x4a8c:	jne	0x4a78


0x4a8e:	mov	rbx, qword ptr [rsp + 8]
0x4a93:	cmp	byte ptr [rsp + 0x34], 0
0x4a98:	je	0x5650


0x4a78:	mov	rsi, r12
0x4a7b:	mov	edi, 0x20
0x4a80:	add	rbx, 1
0x4a84:	call	0x2900


0x5da2:	cmp	qword ptr [rsp + 0x38], rbx
0x5da7:	jne	0x5d91


0x5da9:	jmp	0x58ea


0x5d91:	mov	rsi, r12
0x5d94:	mov	edi, 0x30
0x5d99:	add	rbx, 1
0x5d9d:	call	0x2900


0x5799:	cmp	r13, rbx
0x579c:	jne	0x5788


0x579e:	jmp	0x4a8e


0x5788:	mov	rsi, r12
0x578b:	mov	edi, 0x30
0x5790:	add	rbx, 1
0x5794:	call	0x2900


0x5593:	cmp	rbx, rbp
0x5596:	jne	0x5582


0x5598:	mov	rbx, qword ptr [rsp + 0x48]
0x559d:	mov	r10d, dword ptr [rsp + 0x50]
0x55a2:	movsx	edi, byte ptr [rsp + 0x40]
0x55a7:	mov	rsi, r12
0x55aa:	mov	dword ptr [rsp + 0x48], r10d
0x55af:	call	0x2900


0x5582:	mov	rsi, r12
0x5585:	mov	edi, 0x20
0x558a:	add	rbp, 1
0x558e:	call	0x2900


0x55b4:	mov	r10d, dword ptr [rsp + 0x48]
0x55b9:	add	r15, qword ptr [rsp + 8]
0x55be:	mov	rax, qword ptr [rsp + 0x38]
0x55c3:	mov	rbp, rbx
0x55c6:	mov	dword ptr [rsp + 8], 0x2d
0x55ce:	add	rax, 0x17
0x55d2:	sub	rax, r14
0x55d5:	mov	rdx, r15
0x55d8:	mov	qword ptr [rsp + 0x40], rax
0x55dd:	not	rdx
0x55e0:	jmp	0x4a1c


0x4c71:	cmp	r13, rbx
0x4c74:	jne	0x4c60


0x4c60:	mov	rsi, r12
0x4c63:	mov	edi, 0x30
0x4c68:	add	r13, 1
0x4c6c:	call	0x2900


0x5801:	cmp	rbx, rbp
0x5804:	ja	0x57f0


0x5806:	movzx	ebp, byte ptr [rsp + 0x40]
0x580b:	mov	rbx, qword ptr [rsp + 0x48]
0x5810:	mov	r10d, dword ptr [rsp + 0x50]
0x5815:	add	r15, qword ptr [rsp + 8]
0x581a:	mov	eax, r10d
0x581d:	sub	eax, r13d
0x5820:	cmp	r10d, r13d
0x5823:	mov	r10d, 0
0x5829:	cmovg	r10d, eax
0x582d:	test	bpl, bpl
0x5830:	mov	rdx, r15
0x5833:	not	rdx
0x5836:	jne	0x5963


0x57f0:	mov	rsi, r12
0x57f3:	mov	edi, 0x20
0x57f8:	add	rbp, 1
0x57fc:	call	0x2900


0x4829:	cmp	r11d, 0x45
0x482d:	je	0x4410


0x4833:	mov	rax, qword ptr [rsp]
0x4837:	mov	esi, 1
0x483c:	mov	ecx, dword ptr [rax + 0x18]
0x483f:	jmp	0x47d0


0x47d0:	mov	eax, ecx
0x47d2:	xor	r8d, r8d
0x47d5:	xor	r9d, r9d
0x47d8:	shr	eax, 0x1f
0x47db:	mov	r13d, eax
0x47de:	mov	eax, ecx
0x47e0:	not	eax
0x47e2:	shr	eax, 0x1f
0x47e5:	cmp	r11d, 0x4f
0x47e9:	jne	0x5500


0x4841:	mov	eax, 1
0x4846:	test	r14b, r14b
0x4849:	jne	0x57aa


0x484f:	mov	r14d, eax
0x4852:	mov	r13d, 0x70
0x4858:	jmp	0x45ad


0x57aa:	mov	r13d, 0x70
0x57b0:	mov	byte ptr [rsp + 0x34], 0
0x57b5:	jmp	0x45ad


0x45ad:	mov	ebp, 0x2520
0x45b2:	test	r11d, r11d
0x45b5:	mov	word ptr [rsp + 0x9b], bp
0x45bd:	jne	0x5e10


0x485d:	lea	rax, [rip + 0xe592]
0x4864:	mov	r14d, 0xffffffff
0x486a:	mov	qword ptr [rsp + 0x38], rax
0x486f:	movzx	ebp, byte ptr [rsp + 0x34]
0x4874:	mov	dword ptr [rsp + 0x40], r10d


0x48ea:	cmp	r11d, 0x45
0x48ee:	je	0x4410


0x48f4:	mov	rax, qword ptr [rsp]
0x48f8:	mov	esi, 2
0x48fd:	mov	ecx, dword ptr [rax]
0x48ff:	jmp	0x47d0


0x4904:	mov	rax, qword ptr [rsp]
0x4908:	mov	rdi, qword ptr [rsp + 0x10]
0x490d:	lea	rsi, [rsp + 0x60]
0x4912:	mov	dword ptr [rsp + 0x40], r10d
0x4917:	lea	r14, [rsp + 0xb7]
0x491f:	movdqu	xmm0, xmmword ptr [rax]
0x4923:	movaps	xmmword ptr [rsp + 0x60], xmm0
0x4928:	movdqu	xmm0, xmmword ptr [rax + 0x10]
0x492d:	movaps	xmmword ptr [rsp + 0x70], xmm0
0x4932:	movdqu	xmm0, xmmword ptr [rax + 0x20]
0x4937:	mov	rax, qword ptr [rax + 0x30]
0x493b:	movaps	xmmword ptr [rsp + 0x80], xmm0
0x4943:	mov	qword ptr [rsp + 0x90], rax
0x494b:	call	0xd670


0x4950:	mov	r10d, dword ptr [rsp + 0x40]
0x4955:	mov	rsi, rax
0x4958:	mov	rcx, rax
0x495b:	lea	rax, [rsp + 0xa0]
0x4963:	movabs	r8, 0x6666666666666667
0x496d:	mov	edi, 0x30
0x4972:	mov	qword ptr [rsp + 0x38], rax
0x4977:	nop	word ptr [rax + rax]
0x4980:	mov	rax, rcx
0x4983:	imul	r8
0x4986:	mov	rax, rcx
0x4989:	sar	rax, 0x3f
0x498d:	sar	rdx, 2
0x4991:	sub	rdx, rax
0x4994:	mov	rax, rdx
0x4997:	lea	rdx, [rdx + rdx*4]
0x499b:	add	rdx, rdx
0x499e:	sub	rcx, rdx
0x49a1:	mov	rdx, rcx
0x49a4:	mov	rcx, rax
0x49a7:	mov	eax, edi
0x49a9:	sub	eax, edx
0x49ab:	add	edx, 0x30
0x49ae:	test	rsi, rsi
0x49b1:	cmovs	edx, eax
0x49b4:	sub	r14, 1
0x49b8:	test	rcx, rcx
0x49bb:	mov	byte ptr [r14], dl
0x49be:	jne	0x4980


0x49c0:	test	r10d, r10d
0x49c3:	mov	eax, 1
0x49c8:	cmovg	eax, r10d
0x49cc:	test	rsi, rsi
0x49cf:	mov	dword ptr [rsp + 0x58], eax
0x49d3:	js	0x5510


0x4980:	mov	rax, rcx
0x4983:	imul	r8
0x4986:	mov	rax, rcx
0x4989:	sar	rax, 0x3f
0x498d:	sar	rdx, 2
0x4991:	sub	rdx, rax
0x4994:	mov	rax, rdx
0x4997:	lea	rdx, [rdx + rdx*4]
0x499b:	add	rdx, rdx
0x499e:	sub	rcx, rdx
0x49a1:	mov	rdx, rcx
0x49a4:	mov	rcx, rax
0x49a7:	mov	eax, edi
0x49a9:	sub	eax, edx
0x49ab:	add	edx, 0x30
0x49ae:	test	rsi, rsi
0x49b1:	cmovs	edx, eax
0x49b4:	sub	r14, 1
0x49b8:	test	rcx, rcx
0x49bb:	mov	byte ptr [r14], dl
0x49be:	jne	0x4980


0x4ab6:	mov	rax, qword ptr [rsp]
0x4aba:	cmp	r11d, 0x4f
0x4abe:	mov	esi, 1
0x4ac3:	mov	eax, dword ptr [rax + 0x10]
0x4ac6:	je	0x47fa


0x47fa:	mov	edx, 0x2520
0x47ff:	xor	r14d, r14d
0x4802:	mov	word ptr [rsp + 0x9b], dx
0x480a:	lea	rdx, [rsp + 0x9b]
0x4812:	mov	byte ptr [rsp + 0x9d], r11b
0x481a:	mov	rbp, rbx
0x481d:	mov	r11d, esi
0x4820:	lea	rax, [rdx + 3]
0x4824:	jmp	0x45d2


0x4acc:	lea	edx, [rax + rax*4]
0x4acf:	xor	r9d, r9d
0x4ad2:	xor	r13d, r13d
0x4ad5:	xor	r8d, r8d
0x4ad8:	lea	ecx, [rax + rdx*2]
0x4adb:	sar	ecx, 5
0x4ade:	add	ecx, 1
0x4ae1:	nop	dword ptr [rax]
0x4ae8:	lea	rax, [rsp + 0xa0]
0x4af0:	lea	rdi, [rsp + 0xb7]
0x4af8:	mov	r11d, 0xcccccccd
0x4afe:	mov	qword ptr [rsp + 0x38], rax
0x4b03:	nop	dword ptr [rax + rax]
0x4b08:	test	r8b, 1
0x4b0c:	lea	r14, [rdi - 1]
0x4b10:	je	0x4b20


0x4c8a:	lea	rax, [rip + 0xe3f2]
0x4c91:	mov	r14d, 0xffffffff
0x4c97:	mov	qword ptr [rsp + 0x38], rax
0x4c9c:	jmp	0x486f


0x486f:	movzx	ebp, byte ptr [rsp + 0x34]
0x4874:	mov	dword ptr [rsp + 0x40], r10d


0x4ca1:	cmp	r11d, 0x45
0x4ca5:	je	0x4410


0x4cab:	mov	rax, qword ptr [rsp]
0x4caf:	mov	edx, 0x92492493
0x4cb4:	mov	esi, dword ptr [rax + 0x1c]
0x4cb7:	sub	esi, dword ptr [rax + 0x18]
0x4cba:	add	esi, 7
0x4cbd:	mov	eax, esi
0x4cbf:	imul	edx
0x4cc1:	lea	ecx, [rdx + rsi]
0x4cc4:	sar	esi, 0x1f
0x4cc7:	sar	ecx, 2
0x4cca:	sub	ecx, esi
0x4ccc:	mov	esi, 2
0x4cd1:	jmp	0x47d0


0x4cd6:	cmp	r11d, 0x45
0x4cda:	je	0x4410


0x4ce0:	mov	rcx, qword ptr [rsp]
0x4ce4:	mov	edx, 0x92492493
0x4ce9:	mov	esi, dword ptr [rcx + 0x14]
0x4cec:	mov	r8d, dword ptr [rcx + 0x1c]
0x4cf0:	mov	r14d, dword ptr [rcx + 0x18]
0x4cf4:	mov	eax, esi
0x4cf6:	mov	ecx, r8d
0x4cf9:	sar	eax, 0x1f
0x4cfc:	sub	ecx, r14d
0x4cff:	add	ecx, 0x17e
0x4d05:	and	eax, 0x190
0x4d0a:	lea	r9d, [rsi + rax - 0x64]
0x4d0f:	mov	eax, ecx
0x4d11:	imul	edx
0x4d13:	lea	eax, [rdx + rcx]
0x4d16:	mov	edx, ecx
0x4d18:	sar	edx, 0x1f
0x4d1b:	sar	eax, 2
0x4d1e:	sub	eax, edx
0x4d20:	lea	edx, [rax*8]
0x4d27:	sub	edx, eax
0x4d29:	mov	eax, r8d
0x4d2c:	sub	eax, ecx
0x4d2e:	lea	ebp, [rax + rdx + 3]
0x4d32:	test	ebp, ebp
0x4d34:	js	0x5b60


0x5b60:	sub	r9d, 1
0x5b64:	mov	edx, 0x16d
0x5b69:	test	r9b, 3
0x5b6d:	jne	0x5ba9


0x4d3a:	test	r9b, 3
0x4d3e:	mov	eax, 0x16d
0x4d43:	jne	0x4d8a


0x5b6f:	mov	eax, r9d
0x5b72:	mov	edx, 0x51eb851f
0x5b77:	imul	edx
0x5b79:	mov	eax, r9d
0x5b7c:	sar	eax, 0x1f
0x5b7f:	sar	edx, 5
0x5b82:	sub	edx, eax
0x5b84:	imul	eax, edx, 0x64
0x5b87:	mov	edx, 0x16e
0x5b8c:	cmp	r9d, eax
0x5b8f:	jne	0x5ba9


0x5ba9:	add	r8d, edx
0x5bac:	mov	edx, 0x92492493
0x5bb1:	mov	ecx, r8d
0x5bb4:	sub	ecx, r14d
0x5bb7:	add	ecx, 0x17e
0x5bbd:	mov	eax, ecx
0x5bbf:	sub	r8d, ecx
0x5bc2:	imul	edx
0x5bc4:	lea	eax, [rdx + rcx]
0x5bc7:	mov	edx, ecx
0x5bc9:	sar	edx, 0x1f
0x5bcc:	sar	eax, 2
0x5bcf:	sub	eax, edx
0x5bd1:	lea	edx, [rax*8]
0x5bd8:	sub	edx, eax
0x5bda:	lea	ecx, [r8 + rdx + 3]
0x5bdf:	mov	r8d, 0xffffffff
0x5be5:	jmp	0x4dcf


0x4d45:	mov	eax, r9d
0x4d48:	mov	edx, 0x51eb851f
0x4d4d:	mov	ecx, r9d
0x4d50:	imul	edx
0x4d52:	sar	ecx, 0x1f
0x4d55:	mov	eax, 0x16e
0x4d5a:	mov	dword ptr [rsp + 0x38], edx
0x4d5e:	sar	edx, 5
0x4d61:	sub	edx, ecx
0x4d63:	imul	edx, edx, 0x64
0x4d66:	cmp	r9d, edx
0x4d69:	jne	0x4d8a


0x4d8a:	sub	r8d, eax
0x4d8d:	mov	edx, 0x92492493
0x4d92:	mov	ecx, r8d
0x4d95:	sub	ecx, r14d
0x4d98:	add	ecx, 0x17e
0x4d9e:	mov	eax, ecx
0x4da0:	sub	r8d, ecx
0x4da3:	imul	edx
0x4da5:	lea	eax, [rdx + rcx]
0x4da8:	mov	edx, ecx
0x4daa:	sar	edx, 0x1f
0x4dad:	sar	eax, 2
0x4db0:	sub	eax, edx
0x4db2:	lea	edx, [rax*8]
0x4db9:	sub	edx, eax
0x4dbb:	lea	ecx, [r8 + rdx + 3]
0x4dc0:	mov	r8d, 1
0x4dc6:	test	ecx, ecx
0x4dc8:	jns	0x4dcf


0x5b91:	mov	eax, r9d
0x5b94:	mov	ecx, 0x190
0x5b99:	cdq	
0x5b9a:	idiv	ecx
0x5b9c:	cmp	edx, 1
0x5b9f:	sbb	edx, edx
0x5ba1:	not	edx
0x5ba3:	add	edx, 0x16e
0x5ba9:	add	r8d, edx
0x5bac:	mov	edx, 0x92492493
0x5bb1:	mov	ecx, r8d
0x5bb4:	sub	ecx, r14d
0x5bb7:	add	ecx, 0x17e
0x5bbd:	mov	eax, ecx
0x5bbf:	sub	r8d, ecx
0x5bc2:	imul	edx
0x5bc4:	lea	eax, [rdx + rcx]
0x5bc7:	mov	edx, ecx
0x5bc9:	sar	edx, 0x1f
0x5bcc:	sar	eax, 2
0x5bcf:	sub	eax, edx
0x5bd1:	lea	edx, [rax*8]
0x5bd8:	sub	edx, eax
0x5bda:	lea	ecx, [r8 + rdx + 3]
0x5bdf:	mov	r8d, 0xffffffff
0x5be5:	jmp	0x4dcf


0x4dcf:	cmp	r13b, 0x47
0x4dd3:	je	0x5a67


0x4d6b:	mov	edx, dword ptr [rsp + 0x38]
0x4d6f:	sar	edx, 7
0x4d72:	mov	eax, edx
0x4d74:	sub	eax, ecx
0x4d76:	imul	eax, eax, 0x190
0x4d7c:	cmp	r9d, eax
0x4d7f:	sete	al
0x4d82:	movzx	eax, al
0x4d85:	add	eax, 0x16d
0x4d8a:	sub	r8d, eax
0x4d8d:	mov	edx, 0x92492493
0x4d92:	mov	ecx, r8d
0x4d95:	sub	ecx, r14d
0x4d98:	add	ecx, 0x17e
0x4d9e:	mov	eax, ecx
0x4da0:	sub	r8d, ecx
0x4da3:	imul	edx
0x4da5:	lea	eax, [rdx + rcx]
0x4da8:	mov	edx, ecx
0x4daa:	sar	edx, 0x1f
0x4dad:	sar	eax, 2
0x4db0:	sub	eax, edx
0x4db2:	lea	edx, [rax*8]
0x4db9:	sub	edx, eax
0x4dbb:	lea	ecx, [r8 + rdx + 3]
0x4dc0:	mov	r8d, 1
0x4dc6:	test	ecx, ecx
0x4dc8:	jns	0x4dcf


0x4dca:	mov	ecx, ebp
0x4dcc:	xor	r8d, r8d
0x4dcf:	cmp	r13b, 0x47
0x4dd3:	je	0x5a67


0x5a67:	mov	eax, 0xfffff894
0x5a6c:	mov	r9d, dword ptr [rsp + 8]
0x5a71:	lea	ecx, [rsi + r8 + 0x76c]
0x5a79:	sub	eax, r8d
0x5a7c:	cmp	esi, eax
0x5a7e:	setl	r13b
0x5a82:	setge	al
0x5a85:	test	r9d, r9d
0x5a88:	je	0x5235


0x4dd9:	cmp	r13b, 0x67
0x4ddd:	jne	0x5bea


0x5235:	mov	esi, dword ptr [rsp + 0x24]
0x5239:	cmp	esi, 0x2b
0x523c:	je	0x5927


0x5a8e:	cmp	dword ptr [rsp + 8], 0x2b
0x5a93:	je	0x5927


0x4de3:	mov	ecx, 0x51eb851f
0x4de8:	mov	eax, esi
0x4dea:	mov	r9d, esi
0x4ded:	imul	ecx
0x4def:	mov	eax, edx
0x4df1:	mov	edx, esi
0x4df3:	sar	edx, 0x1f
0x4df6:	sar	eax, 5
0x4df9:	sub	eax, edx
0x4dfb:	imul	eax, eax, 0x64
0x4dfe:	sub	r9d, eax
0x4e01:	add	r9d, r8d
0x4e04:	mov	eax, r9d
0x4e07:	imul	ecx
0x4e09:	mov	eax, r9d
0x4e0c:	sar	eax, 0x1f
0x4e0f:	mov	ecx, edx
0x4e11:	sar	ecx, 5
0x4e14:	sub	ecx, eax
0x4e16:	imul	ecx, ecx, 0x64
0x4e19:	sub	r9d, ecx
0x4e1c:	mov	ecx, r9d
0x4e1f:	js	0x5a24


0x5bea:	mov	eax, ecx
0x5bec:	mov	edx, 0x92492493
0x5bf1:	mov	esi, 2
0x5bf6:	imul	edx
0x5bf8:	lea	eax, [rdx + rcx]
0x5bfb:	sar	ecx, 0x1f
0x5bfe:	sar	eax, 2
0x5c01:	sub	eax, ecx
0x5c03:	mov	ecx, eax
0x5c05:	add	ecx, 1
0x5c08:	jmp	0x47d0


0x5927:	mov	esi, 4
0x592c:	mov	edx, 0x270f
0x5931:	cmp	edx, ecx
0x5933:	mov	r9d, 1
0x5939:	mov	dword ptr [rsp + 8], 0x2b
0x5941:	jb	0x4e4c


0x5242:	mov	dword ptr [rsp + 8], esi
0x5246:	xor	r9d, r9d
0x5249:	mov	esi, 4
0x524e:	jmp	0x4e4c


0x5a99:	xor	r9d, r9d
0x5a9c:	mov	esi, 4
0x5aa1:	jmp	0x4e4c


0x5a24:	mov	eax, 0xfffff894
0x5a29:	sub	eax, r8d
0x5a2c:	cmp	esi, eax
0x5a2e:	jge	0x5dfd


0x4e25:	mov	esi, dword ptr [rsp + 8]
0x4e29:	test	esi, esi
0x4e2b:	je	0x5a41


0x4e4c:	xor	r8d, r8d
0x4e4f:	jmp	0x47e5


0x5947:	cmp	r10d, esi
0x594a:	mov	dword ptr [rsp + 8], 0x2b
0x5952:	setg	r9b
0x5956:	jmp	0x4e4c


0x5a34:	neg	ecx
0x5a36:	cmp	dword ptr [rsp + 8], 0
0x5a3b:	jne	0x4e31


0x5dfd:	add	ecx, 0x64
0x5e00:	cmp	dword ptr [rsp + 8], 0
0x5e05:	je	0x5a41


0x5a41:	mov	eax, dword ptr [rsp + 0x24]
0x5a45:	cmp	eax, 0x2b
0x5a48:	je	0x5dcb


0x4e31:	mov	eax, 1
0x4e36:	xor	r13d, r13d
0x4e39:	cmp	dword ptr [rsp + 8], 0x2b
0x4e3e:	je	0x5ddd


0x47e5:	cmp	r11d, 0x4f
0x47e9:	jne	0x5500


0x5e0b:	jmp	0x4e31


0x5dcb:	mov	eax, 1
0x5dd0:	xor	r13d, r13d
0x5dd3:	mov	esi, 2
0x5dd8:	jmp	0x5947


0x5a4e:	mov	dword ptr [rsp + 8], eax
0x5a52:	xor	r9d, r9d
0x5a55:	mov	eax, 1
0x5a5a:	xor	r13d, r13d
0x5a5d:	mov	esi, 2
0x5a62:	jmp	0x4e4c


0x5ddd:	mov	esi, 2
0x5de2:	mov	edx, 0x63
0x5de7:	jmp	0x5931


0x4e44:	xor	r9d, r9d
0x4e47:	mov	esi, 2
0x4e4c:	xor	r8d, r8d
0x4e4f:	jmp	0x47e5


0x5931:	cmp	edx, ecx
0x5933:	mov	r9d, 1
0x5939:	mov	dword ptr [rsp + 8], 0x2b
0x5941:	jb	0x4e4c


0x4e54:	cmp	r11d, 0x45
0x4e58:	je	0x4410


0x4e5e:	mov	rax, qword ptr [rsp]
0x4e62:	mov	esi, 2
0x4e67:	mov	ecx, dword ptr [rax + 8]
0x4e6a:	jmp	0x47d0


0x4e6f:	cmp	r11d, 0x45
0x4e73:	je	0x4410


0x4e79:	mov	rax, qword ptr [rsp]
0x4e7d:	mov	esi, 2
0x4e82:	mov	ecx, dword ptr [rax + 4]
0x4e85:	jmp	0x47d0


0x4e8a:	cmp	r11d, 0x45
0x4e8e:	je	0x4410


0x4e94:	cmp	r10d, -1
0x4e98:	je	0x5ab0


0x5ab0:	mov	ecx, dword ptr [rsp + 0x500]
0x5ab7:	mov	esi, 9
0x5abc:	mov	r10d, 9
0x5ac2:	jmp	0x47d0


0x4e9e:	cmp	r10d, 8
0x4ea2:	jg	0x5dec


0x4ea8:	mov	ecx, dword ptr [rsp + 0x500]
0x4eaf:	mov	esi, r10d
0x4eb2:	mov	r8d, 0x66666667
0x4eb8:	nop	dword ptr [rax + rax]
0x4ec0:	mov	eax, ecx
0x4ec2:	add	esi, 1
0x4ec5:	sar	ecx, 0x1f
0x4ec8:	imul	r8d
0x4ecb:	sar	edx, 2
0x4ece:	sub	edx, ecx
0x4ed0:	cmp	esi, 9
0x4ed3:	mov	ecx, edx
0x4ed5:	jne	0x4ec0


0x5dec:	mov	ecx, dword ptr [rsp + 0x500]
0x5df3:	jmp	0x4ed7


0x4ed7:	mov	esi, r10d
0x4eda:	jmp	0x47d0


0x4ec0:	mov	eax, ecx
0x4ec2:	add	esi, 1
0x4ec5:	sar	ecx, 0x1f
0x4ec8:	imul	r8d
0x4ecb:	sar	edx, 2
0x4ece:	sub	edx, ecx
0x4ed0:	cmp	esi, 9
0x4ed3:	mov	ecx, edx
0x4ed5:	jne	0x4ec0


0x4edf:	cmp	r11d, 0x45
0x4ee3:	je	0x4410


0x4ee9:	mov	ecx, dword ptr [rsp + 0x30]
0x4eed:	mov	esi, 2
0x4ef2:	jmp	0x47d0


0x4ef7:	cmp	r11d, 0x45
0x4efb:	je	0x57a3


0x57a3:	xor	esi, esi
0x57a5:	jmp	0x47fa


0x4f01:	mov	rax, qword ptr [rsp]
0x4f05:	mov	edx, 0x51eb851f
0x4f0a:	mov	r9d, dword ptr [rsp + 8]
0x4f0f:	mov	esi, dword ptr [rax + 0x14]
0x4f12:	mov	eax, esi
0x4f14:	imul	edx
0x4f16:	mov	eax, edx
0x4f18:	mov	edx, esi
0x4f1a:	sar	edx, 0x1f
0x4f1d:	sar	eax, 5
0x4f20:	sub	eax, edx
0x4f22:	mov	edx, esi
0x4f24:	lea	ecx, [rax + 0x13]
0x4f27:	imul	eax, eax, 0x64
0x4f2a:	sub	edx, eax
0x4f2c:	mov	eax, edx
0x4f2e:	shr	eax, 0x1f
0x4f31:	test	ecx, ecx
0x4f33:	setg	dl
0x4f36:	and	eax, edx
0x4f38:	cmp	esi, 0xfffff894
0x4f3e:	setl	r13b
0x4f42:	sub	ecx, eax
0x4f44:	cmp	esi, 0xfffff894
0x4f4a:	setge	al
0x4f4d:	test	r9d, r9d
0x4f50:	jne	0x4e39


0x4f56:	cmp	dword ptr [rsp + 0x24], 0x2b
0x4f5b:	je	0x5ddd


0x4e39:	cmp	dword ptr [rsp + 8], 0x2b
0x4e3e:	je	0x5ddd


0x4f61:	mov	esi, dword ptr [rsp + 0x24]
0x4f65:	mov	dword ptr [rsp + 8], esi
0x4f69:	jmp	0x4e44


0x4f6e:	test	r11d, r11d
0x4f71:	jne	0x4410


0x4f77:	lea	rax, [rip + 0xde87]
0x4f7e:	mov	r14d, 0xffffffff
0x4f84:	mov	qword ptr [rsp + 0x38], rax
0x4f89:	jmp	0x486f


0x4f8e:	test	r11d, r11d
0x4f91:	jne	0x4410


0x4f97:	mov	r11d, dword ptr [rsp + 8]
0x4f9c:	test	r11d, r11d
0x4f9f:	jne	0x5cef


0x4fa5:	test	r10d, r10d
0x4fa8:	jns	0x5cef


0x5cef:	mov	r14d, r10d
0x5cf2:	mov	eax, 0
0x5cf7:	sub	r14d, 6
0x5cfb:	cmovs	r14d, eax
0x5cff:	lea	rax, [rip + 0xd0f6]
0x5d06:	mov	qword ptr [rsp + 0x38], rax
0x5d0b:	jmp	0x486f


0x4fae:	lea	rax, [rip + 0xde47]
0x4fb5:	mov	r14d, 4
0x4fbb:	mov	dword ptr [rsp + 8], 0x2b
0x4fc3:	mov	qword ptr [rsp + 0x38], rax
0x4fc8:	jmp	0x486f


0x4fcd:	movzx	ecx, byte ptr [rbx - 1]
0x4fd1:	lea	rax, [rbx - 1]
0x4fd5:	mov	qword ptr [rsp + 0x38], rax
0x4fda:	test	r10d, r10d
0x4fdd:	mov	eax, 0
0x4fe2:	mov	rdx, r15
0x4fe5:	cmovns	eax, r10d
0x4fe9:	cmp	cl, 0x25
0x4fec:	not	rdx
0x4fef:	cdqe	
0x4ff1:	jne	0x440b


0x4ff7:	test	rax, rax
0x4ffa:	mov	r14d, 1
0x5000:	mov	rbp, qword ptr [rsp + 0x38]
0x5005:	cmovne	r14, rax
0x5009:	mov	r13d, 1
0x500f:	jmp	0x4454


0x4454:	cmp	rdx, r14
0x4457:	jbe	0x42bf


0x5014:	cmp	r11d, 0x45
0x5018:	je	0x4410


0x501e:	test	r14b, r14b
0x5021:	je	0x45ad


0x5027:	mov	byte ptr [rsp + 0x34], r14b
0x502c:	jmp	0x45aa


0x5031:	test	r10d, r10d
0x5034:	mov	eax, 0
0x5039:	mov	r14d, 1
0x503f:	cmovns	eax, r10d
0x5043:	mov	rdx, r15
0x5046:	cdqe	
0x5048:	not	rdx
0x504b:	test	rax, rax
0x504e:	cmovne	r14, rax
0x5052:	test	r11d, r11d
0x5055:	jne	0x5ac7


0x505b:	cmp	rdx, r14
0x505e:	jbe	0x42bf


0x5ac7:	mov	rbp, rbx
0x5aca:	mov	qword ptr [rsp + 0x38], rbx
0x5acf:	mov	r13d, 1
0x5ad5:	jmp	0x4454


0x5064:	test	r12, r12
0x5067:	je	0x430a


0x506d:	cmp	r10d, 1
0x5071:	jle	0x4302


0x4302:	mov	rsi, r12
0x4305:	call	0x2900


0x5077:	mov	eax, dword ptr [rsp + 8]
0x507b:	movsxd	r10, r10d
0x507e:	lea	r13, [r10 - 1]
0x5082:	cmp	eax, 0x30
0x5085:	je	0x5dae


0x5dae:	xor	ebp, ebp
0x5db0:	mov	rsi, r12
0x5db3:	mov	edi, 0x30
0x5db8:	add	rbp, 1
0x5dbc:	call	0x2900


0x508b:	xor	ebp, ebp
0x508d:	cmp	eax, 0x2b
0x5090:	je	0x5dae


0x5096:	mov	rsi, r12
0x5099:	mov	edi, 0x20
0x509e:	add	rbp, 1
0x50a2:	call	0x2900


0x50a7:	cmp	r13, rbp
0x50aa:	jne	0x5096


0x50ac:	jmp	0x42ff


0x5dc1:	cmp	r13, rbp
0x5dc4:	jne	0x5db0


0x5dc6:	jmp	0x42ff


0x5db0:	mov	rsi, r12
0x5db3:	mov	edi, 0x30
0x5db8:	add	rbp, 1
0x5dbc:	call	0x2900


0x50b1:	movzx	eax, byte ptr [rbx + 1]
0x50b5:	lea	rdx, [rbx + 1]
0x50b9:	cmp	al, 0x3a
0x50bb:	je	0x5ca1


0x5ca1:	lea	rcx, [rbx + 2]
0x5ca5:	mov	r14d, 1
0x5cab:	mov	rdx, rcx
0x5cae:	add	rcx, 1
0x5cb2:	movzx	eax, byte ptr [rcx - 1]
0x5cb6:	add	r14, 1
0x5cba:	cmp	al, 0x3a
0x5cbc:	jne	0x50c7


0x50c1:	mov	r14d, 1
0x50c7:	cmp	al, 0x7a
0x50c9:	jne	0x4410


0x5cc2:	jmp	0x5cab


0x50c7:	cmp	al, 0x7a
0x50c9:	jne	0x4410


0x50cf:	mov	rbx, rdx
0x50d2:	mov	rax, qword ptr [rsp]
0x50d6:	mov	ecx, dword ptr [rax + 0x20]
0x50d9:	test	ecx, ecx
0x50db:	js	0x595b


0x5cab:	mov	rdx, rcx
0x5cae:	add	rcx, 1
0x5cb2:	movzx	eax, byte ptr [rcx - 1]
0x5cb6:	add	r14, 1
0x5cba:	cmp	al, 0x3a
0x5cbc:	jne	0x50c7


0x595b:	mov	rbp, rbx
0x595e:	jmp	0x4310


0x50e1:	mov	rcx, qword ptr [rax + 0x28]
0x50e5:	mov	r13d, 1
0x50eb:	test	ecx, ecx
0x50ed:	js	0x5103


0x5103:	mov	eax, ecx
0x5105:	mov	edx, 0x91a2b3c5
0x510a:	mov	r9d, ecx
0x510d:	imul	edx
0x510f:	sar	r9d, 0x1f
0x5113:	mov	r8d, 0x88888889
0x5119:	mov	eax, ecx
0x511b:	add	edx, ecx
0x511d:	sar	edx, 0xb
0x5120:	sub	edx, r9d
0x5123:	mov	ebp, edx
0x5125:	imul	r8d
0x5128:	lea	esi, [rdx + rcx]
0x512b:	sar	esi, 5
0x512e:	sub	esi, r9d
0x5131:	mov	eax, esi
0x5133:	imul	r8d
0x5136:	mov	eax, esi
0x5138:	sar	eax, 0x1f
0x513b:	lea	r8d, [rdx + rsi]
0x513f:	sar	r8d, 5
0x5143:	sub	r8d, eax
0x5146:	mov	eax, esi
0x5148:	imul	r8d, r8d, 0x3c
0x514c:	imul	esi, esi, 0x3c
0x514f:	sub	eax, r8d
0x5152:	sub	ecx, esi
0x5154:	cmp	r14, 1
0x5158:	mov	r8d, eax
0x515b:	je	0x5c0d


0x50ef:	mov	r13d, 0
0x50f5:	jne	0x5103


0x5c0d:	imul	ecx, ebp, 0x64
0x5c10:	mov	eax, r13d
0x5c13:	mov	r9d, 1
0x5c19:	xor	eax, 1
0x5c1c:	mov	esi, 6
0x5c21:	add	ecx, r8d
0x5c24:	mov	r8d, 4
0x5c2a:	jmp	0x47e5


0x5161:	jb	0x5cd1


0x50f7:	mov	rax, qword ptr [rsp + 0x28]
0x50fc:	cmp	byte ptr [rax], 0x2d
0x50ff:	sete	r13b
0x5103:	mov	eax, ecx
0x5105:	mov	edx, 0x91a2b3c5
0x510a:	mov	r9d, ecx
0x510d:	imul	edx
0x510f:	sar	r9d, 0x1f
0x5113:	mov	r8d, 0x88888889
0x5119:	mov	eax, ecx
0x511b:	add	edx, ecx
0x511d:	sar	edx, 0xb
0x5120:	sub	edx, r9d
0x5123:	mov	ebp, edx
0x5125:	imul	r8d
0x5128:	lea	esi, [rdx + rcx]
0x512b:	sar	esi, 5
0x512e:	sub	esi, r9d
0x5131:	mov	eax, esi
0x5133:	imul	r8d
0x5136:	mov	eax, esi
0x5138:	sar	eax, 0x1f
0x513b:	lea	r8d, [rdx + rsi]
0x513f:	sar	r8d, 5
0x5143:	sub	r8d, eax
0x5146:	mov	eax, esi
0x5148:	imul	r8d, r8d, 0x3c
0x514c:	imul	esi, esi, 0x3c
0x514f:	sub	eax, r8d
0x5152:	sub	ecx, esi
0x5154:	cmp	r14, 1
0x5158:	mov	r8d, eax
0x515b:	je	0x5c0d


0x5cd1:	imul	ecx, ebp, 0x64
0x5cd4:	xor	r8d, r8d
0x5cd7:	mov	r9d, 1
0x5cdd:	mov	esi, 5
0x5ce2:	add	ecx, eax
0x5ce4:	mov	eax, r13d
0x5ce7:	xor	eax, 1
0x5cea:	jmp	0x47e5


0x5167:	cmp	r14, 2
0x516b:	je	0x5b13


0x5b13:	imul	r8d, r8d, 0x64
0x5b17:	mov	r9d, 1
0x5b1d:	mov	esi, 9
0x5b22:	imul	eax, ebp, 0x2710
0x5b28:	add	eax, r8d
0x5b2b:	mov	r8d, 0x14
0x5b31:	add	ecx, eax
0x5b33:	mov	eax, r13d
0x5b36:	xor	eax, 1
0x5b39:	jmp	0x47e5


0x5171:	cmp	r14, 3
0x5175:	jne	0x5cc4


0x517b:	test	ecx, ecx
0x517d:	jne	0x5b13


0x5cc4:	movzx	ecx, byte ptr [rbx]
0x5cc7:	mov	qword ptr [rsp + 0x38], rbx
0x5ccc:	jmp	0x4fda


0x5183:	test	eax, eax
0x5185:	jne	0x5c0d


0x4fda:	test	r10d, r10d
0x4fdd:	mov	eax, 0
0x4fe2:	mov	rdx, r15
0x4fe5:	cmovns	eax, r10d
0x4fe9:	cmp	cl, 0x25
0x4fec:	not	rdx
0x4fef:	cdqe	
0x4ff1:	jne	0x440b


0x518b:	mov	eax, r13d
0x518e:	mov	ecx, ebp
0x5190:	mov	r9d, 1
0x5196:	xor	eax, 1
0x5199:	mov	esi, 3
0x519e:	jmp	0x47e5


0x51b2:	mov	r9, qword ptr [rsp]
0x51b6:	mov	ecx, 0x92492493
0x51bb:	mov	eax, dword ptr [r9 + 0x18]
0x51bf:	lea	esi, [rax + 6]
0x51c2:	mov	dword ptr [rsp + 0x38], eax
0x51c6:	mov	eax, esi
0x51c8:	imul	ecx
0x51ca:	lea	eax, [rdx + rsi]
0x51cd:	mov	edx, esi
0x51cf:	sar	edx, 0x1f
0x51d2:	sar	eax, 2
0x51d5:	sub	eax, edx
0x51d7:	lea	edx, [rax*8]
0x51de:	sub	edx, eax
0x51e0:	mov	eax, edx
0x51e2:	mov	edx, dword ptr [r9 + 0x1c]
0x51e6:	sub	eax, esi
0x51e8:	lea	esi, [rax + rdx + 7]
0x51ec:	mov	eax, esi
0x51ee:	imul	ecx
0x51f0:	jmp	0x4cc1


0x4cc1:	lea	ecx, [rdx + rsi]
0x4cc4:	sar	esi, 0x1f
0x4cc7:	sar	ecx, 2
0x4cca:	sub	ecx, esi
0x4ccc:	mov	esi, 2
0x4cd1:	jmp	0x47d0


0x51f5:	cmp	r11d, 0x45
0x51f9:	je	0x57a3


0x51ff:	cmp	r11d, 0x4f
0x5203:	je	0x4410


0x5209:	mov	rax, qword ptr [rsp]
0x520d:	mov	r8d, dword ptr [rsp + 8]
0x5212:	mov	eax, dword ptr [rax + 0x14]
0x5215:	cmp	eax, 0xfffff894
0x521a:	lea	ecx, [rax + 0x76c]
0x5220:	setl	r13b
0x5224:	cmp	eax, 0xfffff894
0x5229:	setge	al
0x522c:	test	r8d, r8d
0x522f:	jne	0x5a8e


0x5253:	movzx	edi, byte ptr [rsp + 0x34]
0x5258:	test	r14b, r14b
0x525b:	mov	eax, 0
0x5260:	mov	dword ptr [rsp + 0x38], r10d
0x5265:	cmovne	edi, eax
0x5268:	mov	byte ptr [rsp + 0x34], dil
0x526d:	mov	rdi, qword ptr [rsp + 0x28]
0x5272:	call	0x2840


0x5277:	movsxd	r10, dword ptr [rsp + 0x38]
0x527c:	mov	r13, rax
0x527f:	mov	eax, 0
0x5284:	mov	rdx, r15
0x5287:	not	rdx
0x528a:	test	r10d, r10d
0x528d:	cmovns	rax, r10
0x5291:	cmp	r13, rax
0x5294:	mov	rbp, rax
0x5297:	cmovae	rbp, r13
0x529b:	cmp	rdx, rbp
0x529e:	jbe	0x42bf


0x52a4:	test	r12, r12
0x52a7:	je	0x531f


0x531f:	add	r15, rbp
0x5322:	mov	rbp, rbx
0x5325:	jmp	0x4310


0x52a9:	cmp	r13, rax
0x52ac:	jae	0x52fb


0x52ae:	mov	edi, dword ptr [rsp + 8]
0x52b2:	mov	rax, r10
0x52b5:	sub	rax, r13
0x52b8:	mov	qword ptr [rsp + 0x38], rax
0x52bd:	cmp	edi, 0x30
0x52c0:	je	0x5d43


0x52fb:	test	r14b, r14b
0x52fe:	jne	0x5c83


0x5d43:	cmp	qword ptr [rsp + 0x38], 0
0x5d49:	je	0x52fb


0x52c6:	cmp	edi, 0x2b
0x52c9:	je	0x5d43


0x5304:	cmp	byte ptr [rsp + 0x34], 0
0x5309:	je	0x5c69


0x5c83:	mov	rsi, qword ptr [rsp + 0x28]
0x5c88:	mov	rdx, r13
0x5c8b:	mov	rdi, r12
0x5c8e:	call	0x4140


0x5d4f:	xor	edx, edx
0x5d51:	mov	qword ptr [rsp + 8], rbx
0x5d56:	mov	rbx, rdx
0x5d59:	mov	rsi, r12
0x5d5c:	mov	edi, 0x30
0x5d61:	add	rbx, 1
0x5d65:	call	0x2900


0x52cf:	xor	edx, edx
0x52d1:	test	rax, rax
0x52d4:	je	0x52fb


0x5c69:	mov	rdi, qword ptr [rsp + 0x28]
0x5c6e:	mov	rcx, r12
0x5c71:	mov	edx, 1
0x5c76:	mov	rsi, r13
0x5c79:	call	0x2af0


0x530f:	mov	rsi, qword ptr [rsp + 0x28]
0x5314:	mov	rdx, r13
0x5317:	mov	rdi, r12
0x531a:	call	0x41a0


0x52d6:	mov	qword ptr [rsp + 8], rbx
0x52db:	mov	rbx, rdx
0x52de:	mov	rsi, r12
0x52e1:	mov	edi, 0x20
0x52e6:	add	rbx, 1
0x52ea:	call	0x2900


0x5c7e:	jmp	0x531f


0x52ef:	cmp	qword ptr [rsp + 0x38], rbx
0x52f4:	jne	0x52de


0x52f6:	mov	rbx, qword ptr [rsp + 8]
0x52fb:	test	r14b, r14b
0x52fe:	jne	0x5c83


0x52de:	mov	rsi, r12
0x52e1:	mov	edi, 0x20
0x52e6:	add	rbx, 1
0x52ea:	call	0x2900


0x5d6a:	cmp	qword ptr [rsp + 0x38], rbx
0x5d6f:	jne	0x5d59


0x5d71:	jmp	0x52f6


0x5d59:	mov	rsi, r12
0x5d5c:	mov	edi, 0x30
0x5d61:	add	rbx, 1
0x5d65:	call	0x2900


0x5c93:	jmp	0x531f


0x532a:	cmp	r11d, 0x45
0x532e:	je	0x57a3


0x5334:	mov	rax, qword ptr [rsp]
0x5338:	mov	edx, 0x51eb851f
0x533d:	mov	esi, dword ptr [rax + 0x14]
0x5340:	mov	eax, esi
0x5342:	imul	edx
0x5344:	mov	eax, esi
0x5346:	sar	eax, 0x1f
0x5349:	mov	ecx, edx
0x534b:	sar	ecx, 5
0x534e:	sub	ecx, eax
0x5350:	mov	eax, esi
0x5352:	imul	ecx, ecx, 0x64
0x5355:	sub	eax, ecx
0x5357:	mov	ecx, eax
0x5359:	jns	0x4e25


0x535f:	neg	eax
0x5361:	add	ecx, 0x64
0x5364:	cmp	esi, 0xfffff893
0x536a:	cmovle	ecx, eax
0x536d:	jmp	0x4e25


0x5372:	cmp	r11d, 0x45
0x5376:	je	0x4410


0x537c:	mov	rax, qword ptr [rsp]
0x5380:	mov	esi, 2
0x5385:	mov	ecx, dword ptr [rax + 0xc]
0x5388:	jmp	0x47d0


0x538d:	cmp	r11d, 0x45
0x5391:	je	0x4410


0x5397:	mov	rax, qword ptr [rsp]
0x539b:	mov	ecx, dword ptr [rax + 0xc]
0x539e:	mov	r8d, dword ptr [rsp + 8]
0x53a3:	mov	esi, 2
0x53a8:	test	r8d, r8d
0x53ab:	jne	0x47d0


0x53b1:	mov	dword ptr [rsp + 8], 0x5f
0x53b9:	jmp	0x47d0


0x53be:	cmp	r11d, 0x45
0x53c2:	je	0x4410


0x53c8:	mov	rax, qword ptr [rsp]
0x53cc:	mov	esi, 3
0x53d1:	mov	eax, dword ptr [rax + 0x1c]
0x53d4:	cmp	eax, -1
0x53d7:	lea	ecx, [rax + 1]
0x53da:	setl	r13b
0x53de:	cmp	eax, -1
0x53e1:	setge	al
0x53e4:	xor	r8d, r8d
0x53e7:	xor	r9d, r9d
0x53ea:	jmp	0x47e5


0x53ef:	cmp	r11d, 0x45
0x53f3:	je	0x4410


0x53f9:	mov	rax, qword ptr [rsp]
0x53fd:	mov	ecx, dword ptr [rax + 8]
0x5400:	jmp	0x539e


0x539e:	mov	r8d, dword ptr [rsp + 8]
0x53a3:	mov	esi, 2
0x53a8:	test	r8d, r8d
0x53ab:	jne	0x47d0


0x5402:	cmp	r11d, 0x45
0x5406:	je	0x4410


0x540c:	mov	ecx, dword ptr [rsp + 0x30]
0x5410:	jmp	0x539e


0x5412:	cmp	r11d, 0x45
0x5416:	je	0x4410


0x541c:	mov	rax, qword ptr [rsp]
0x5420:	mov	esi, 2
0x5425:	mov	eax, dword ptr [rax + 0x10]
0x5428:	cmp	eax, -1
0x542b:	lea	ecx, [rax + 1]
0x542e:	setl	r13b
0x5432:	cmp	eax, -1
0x5435:	setge	al
0x5438:	xor	r8d, r8d
0x543b:	xor	r9d, r9d
0x543e:	jmp	0x47e5


0x5443:	test	r10d, r10d
0x5446:	mov	r13d, 0
0x544c:	mov	eax, 1
0x5451:	cmovns	r13d, r10d
0x5455:	movsxd	r13, r13d
0x5458:	test	r13, r13
0x545b:	cmove	r13, rax
0x545f:	mov	rax, r15
0x5462:	not	rax
0x5465:	cmp	rax, r13
0x5468:	jbe	0x42bf


0x546e:	test	r12, r12
0x5471:	je	0x48df


0x5477:	cmp	r10d, 1
0x547b:	jle	0x54b2


0x54b2:	mov	rsi, r12
0x54b5:	mov	edi, 0xa
0x54ba:	call	0x2900


0x547d:	mov	eax, dword ptr [rsp + 8]
0x5481:	movsxd	r10, r10d
0x5484:	lea	r14, [r10 - 1]
0x5488:	cmp	eax, 0x30
0x548b:	je	0x5c4c


0x5c4c:	xor	ebp, ebp
0x5c4e:	mov	rsi, r12
0x5c51:	mov	edi, 0x30
0x5c56:	add	rbp, 1
0x5c5a:	call	0x2900


0x5491:	xor	ebp, ebp
0x5493:	cmp	eax, 0x2b
0x5496:	je	0x5c4c


0x549c:	mov	rsi, r12
0x549f:	mov	edi, 0x20
0x54a4:	add	rbp, 1
0x54a8:	call	0x2900


0x54ad:	cmp	r14, rbp
0x54b0:	jne	0x549c


0x5c5f:	cmp	r14, rbp
0x5c62:	jne	0x5c4e


0x5c64:	jmp	0x54b2


0x5c4e:	mov	rsi, r12
0x5c51:	mov	edi, 0x30
0x5c56:	add	rbp, 1
0x5c5a:	call	0x2900


0x54bf:	jmp	0x48df


0x54c4:	xor	eax, eax
0x54c6:	jmp	0x4846


0x4846:	test	r14b, r14b
0x4849:	jne	0x57aa


0x54cb:	movzx	eax, byte ptr [rsp + 0x34]
0x54d0:	test	r14b, r14b
0x54d3:	cmovne	eax, r14d
0x54d7:	cmp	r11d, 0x45
0x54db:	je	0x5c98


0x5c98:	mov	byte ptr [rsp + 0x34], al
0x5c9c:	jmp	0x4410


0x54e1:	mov	r13d, edi
0x54e4:	mov	byte ptr [rsp + 0x34], al
0x54e8:	xor	r14d, r14d
0x54eb:	jmp	0x45ad


0x54f0:	xor	r14d, r14d
0x54f3:	jmp	0x50d2


0x50d2:	mov	rax, qword ptr [rsp]
0x50d6:	mov	ecx, dword ptr [rax + 0x20]
0x50d9:	test	ecx, ecx
0x50db:	js	0x595b


0x5e17:	nop	word ptr [rax + rax]


0x5e7a:	nop	word ptr [rax + rax]


0x5ec1:	nop	word ptr cs:[rax + rax]
0x5ecb:	nop	dword ptr [rax + rax]


0x5f6c:	nop	dword ptr [rax]


0x60e9:	nop	dword ptr [rax]


0x61e6:	nop	word ptr cs:[rax + rax]


0x62d2:	nop	dword ptr [rax]
0x62d6:	nop	word ptr cs:[rax + rax]


0x6318:	nop	dword ptr [rax + rax]


0x63ff:	nop	


0x64ea:	nop	word ptr [rax + rax]


0x66d7:	nop	word ptr [rax + rax]


0x6791:	nop	dword ptr [rax + rax]
0x6796:	nop	word ptr cs:[rax + rax]


0x689f:	nop	


0x6c77:	nop	word ptr [rax + rax]


0x8883:	nop	dword ptr [rax]
0x8886:	nop	word ptr cs:[rax + rax]


0xa5f9:	nop	dword ptr [rax]


0xa66a:	nop	word ptr [rax + rax]


0xa726:	nop	word ptr cs:[rax + rax]


0xaa14:	nop	word ptr cs:[rax + rax]
0xaa1e:	nop	


0xaabf:	nop	


0xaba7:	nop	word ptr [rax + rax]


0xac43:	mov	byte ptr [rsp + 0xe], 1
0xac48:	mov	byte ptr [rsp + 0x7c], 0
0xac4d:	xor	r12d, r12d
0xac50:	mov	qword ptr [rsp + 0x50], 0
0xac59:	mov	byte ptr [rsp + 0xf], 1
0xac5e:	mov	byte ptr [rsp + 0xd], 0
0xac63:	lea	rax, [rip + 0x9821]
0xac6a:	mov	qword ptr [rsp + 0x18], 1
0xac73:	xor	r15d, r15d
0xac76:	mov	dword ptr [rsp + 8], 2
0xac7e:	mov	qword ptr [rsp + 0x48], rax
0xac83:	xor	r11d, r11d
0xac86:	mov	rax, rbp
0xac89:	mov	r8d, r12d
0xac8c:	mov	rbp, r11
0xac8f:	mov	r11, rax
0xac92:	nop	word ptr [rax + rax]
0xac98:	cmp	r11, rbp
0xac9b:	setne	r12b
0xac9f:	cmp	r11, -1
0xaca3:	jne	0xacb2


0xaca5:	mov	rax, qword ptr [rsp + 0x10]
0xacaa:	cmp	byte ptr [rax + rbp], 0
0xacae:	setne	r12b
0xacb2:	test	r12b, r12b
0xacb5:	je	0xb310


0xacb2:	test	r12b, r12b
0xacb5:	je	0xb310


0xb310:	cmp	dword ptr [rsp + 8], 2
0xb315:	movzx	ebx, byte ptr [rsp + 0xf]
0xb31a:	mov	r12d, r8d
0xb31d:	mov	rbp, r11
0xb320:	sete	dl
0xb323:	mov	eax, ebx
0xb325:	test	r15, r15
0xb328:	sete	cl
0xb32b:	and	eax, edx
0xb32d:	and	al, cl
0xb32f:	jne	0xbd96


0xacbb:	cmp	dword ptr [rsp + 8], 2
0xacc0:	mov	rdi, qword ptr [rsp + 0x10]
0xacc5:	lea	r9, [rdi + rbp]
0xacc9:	setne	al
0xaccc:	and	al, byte ptr [rsp + 0xd]
0xacd0:	mov	r10d, eax
0xacd3:	je	0xad80


0xb335:	mov	eax, ebx
0xb337:	xor	eax, 1
0xb33a:	and	dl, al
0xb33c:	je	0xbcac


0xbd96:	mov	dword ptr [rsp + 8], 2
0xbd9e:	jmp	0xb739


0xad80:	movzx	ebx, byte ptr [r9]
0xad84:	cmp	bl, 0x7e
0xad87:	ja	0xb0a8


0xacd9:	mov	rax, qword ptr [rsp + 0x18]
0xacde:	test	rax, rax
0xace1:	je	0xb110


0xbcac:	mov	rbx, qword ptr [rsp + 0x48]
0xbcb1:	test	rbx, rbx
0xbcb4:	je	0xbce2


0xb342:	cmp	byte ptr [rsp + 0x7c], 0
0xb347:	je	0xbcaa


0xb739:	cmp	byte ptr [rsp + 0xd], 0
0xb73e:	je	0xb750


0xad8d:	lea	rcx, [rip + 0x9778]
0xad94:	movzx	edx, bl
0xad97:	movsxd	rax, dword ptr [rcx + rdx*4]
0xad9b:	add	rax, rcx
0xad9e:	jmp	rax


0xb0a8:	cmp	qword ptr [rsp + 0x58], 1
0xb0ae:	jne	0xb458


0xb110:	movzx	ebx, byte ptr [r9]
0xb114:	cmp	bl, 0x7e
0xb117:	ja	0xb0a0


0xace7:	cmp	r11, -1
0xaceb:	lea	rbx, [rbp + rax]
0xacf0:	jne	0xad20


0xbce2:	cmp	r13, r15
0xbce5:	jbe	0xb789


0xbcb6:	test	al, al
0xbcb8:	je	0xbce2


0xbcaa:	mov	eax, edx
0xbcac:	mov	rbx, qword ptr [rsp + 0x48]
0xbcb1:	test	rbx, rbx
0xbcb4:	je	0xbce2


0xb34d:	cmp	byte ptr [rsp + 0xe], 0
0xb352:	jne	0xbd4d


0xb740:	test	al, al
0xb742:	mov	eax, 4
0xb747:	cmove	eax, dword ptr [rsp + 8]
0xb74c:	mov	dword ptr [rsp + 8], eax


0xb0b4:	mov	qword ptr [rsp + 0x38], r11
0xb0b9:	mov	byte ptr [rsp + 0x30], r8b
0xb0be:	mov	byte ptr [rsp + 0x28], r10b
0xb0c3:	call	0x2b40


0xb458:	lea	rax, [rsp + 0xa0]
0xb460:	cmp	r11, -1
0xb464:	mov	qword ptr [rsp + 0xa0], 0
0xb470:	mov	qword ptr [rsp + 0x28], rax
0xb475:	jne	0xb4a4


0xb119:	lea	rcx, [rip + 0x95e8]
0xb120:	movzx	edx, bl
0xb123:	movsxd	rax, dword ptr [rcx + rdx*4]
0xb127:	add	rax, rcx
0xb12a:	jmp	rax


0xb0a0:	xor	r10d, r10d
0xb0a3:	nop	dword ptr [rax + rax]
0xb0a8:	cmp	qword ptr [rsp + 0x58], 1
0xb0ae:	jne	0xb458


0xacf2:	cmp	rax, 1
0xacf6:	jbe	0xad20


0xad20:	cmp	rbx, r11
0xad23:	mov	byte ptr [rsp + 0x28], r10b
0xad28:	ja	0xb2e0


0xbceb:	mov	byte ptr [r14 + r15], 0
0xbcf0:	jmp	0xb789


0xbcba:	movzx	ecx, byte ptr [rbx]
0xbcbd:	mov	rax, rbx
0xbcc0:	test	cl, cl
0xbcc2:	je	0xbce2


0xb358:	test	r13, r13
0xb35b:	sete	al
0xb35e:	cmp	qword ptr [rsp + 0x50], 0
0xb364:	setne	dl
0xb367:	and	al, dl
0xb369:	je	0xbd8c


0xb477:	mov	rdi, qword ptr [rsp + 0x10]
0xb47c:	mov	byte ptr [rsp + 0x40], r8b
0xb481:	mov	byte ptr [rsp + 0x38], r10b
0xb486:	mov	qword ptr [rsp + 0x30], r9
0xb48b:	call	0x2840


0xb4a4:	lea	rax, [rsp + 0x9c]
0xb4ac:	xor	ecx, ecx
0xb4ae:	mov	byte ptr [rsp + 0x7e], bl
0xb4b2:	mov	byte ptr [rsp + 0x7d], r8b
0xb4b7:	mov	rbx, rcx
0xb4ba:	mov	qword ptr [rsp + 0x88], r9
0xb4c2:	mov	qword ptr [rsp + 0x38], rax
0xb4c7:	mov	byte ptr [rsp + 0x7f], r10b
0xb4cc:	mov	qword ptr [rsp + 0x80], r15
0xb4d4:	mov	qword ptr [rsp + 0x40], r14
0xb4d9:	mov	qword ptr [rsp + 0x70], r13
0xb4de:	mov	qword ptr [rsp + 0x30], r11
0xb4e3:	mov	rax, qword ptr [rsp + 0x10]
0xb4e8:	lea	r14, [rbp + rbx]
0xb4ed:	mov	rdx, qword ptr [rsp + 0x30]
0xb4f2:	mov	rcx, qword ptr [rsp + 0x28]
0xb4f7:	mov	rdi, qword ptr [rsp + 0x38]
0xb4fc:	lea	r13, [rax + r14]
0xb500:	sub	rdx, r14
0xb503:	mov	rsi, r13
0xb506:	call	0xd1b0


0xacf8:	mov	byte ptr [rsp + 0x38], r8b
0xacfd:	mov	byte ptr [rsp + 0x30], r10b
0xad02:	mov	qword ptr [rsp + 0x28], r9
0xad07:	call	0x2840


0xad2e:	mov	rdx, qword ptr [rsp + 0x18]
0xad33:	mov	rsi, qword ptr [rsp + 0x48]
0xad38:	mov	rdi, r9
0xad3b:	mov	qword ptr [rsp + 0x40], r11
0xad40:	mov	byte ptr [rsp + 0x38], r8b
0xad45:	mov	qword ptr [rsp + 0x30], r9
0xad4a:	call	0x2910


0xb2e0:	xor	r10d, r10d
0xb2e3:	jmp	0xad80


0xbcc4:	mov	rdx, r15
0xbcc7:	sub	rax, r15
0xbcca:	cmp	r13, rdx
0xbccd:	jbe	0xbcd3


0xbd8c:	movzx	eax, byte ptr [rsp + 0x7c]
0xbd91:	jmp	0xbcac


0xb36f:	mov	r13, qword ptr [rsp + 0x50]
0xb374:	lea	rbx, [rip + 0x9110]
0xb37b:	mov	byte ptr [r14], 0x27
0xb37f:	mov	dword ptr [rsp + 8], 2
0xb387:	mov	r15d, 1
0xb38d:	mov	qword ptr [rsp + 0x18], 1
0xb396:	mov	byte ptr [rsp + 0xf], 0
0xb39b:	mov	qword ptr [rsp + 0x48], rbx
0xb3a0:	mov	byte ptr [rsp + 0x7c], al
0xb3a4:	jmp	0xac83


0xbcd3:	add	rdx, 1
0xbcd7:	movzx	ecx, byte ptr [rax + rdx]
0xbcdb:	test	cl, cl
0xbcdd:	jne	0xbcca


0xbccf:	mov	byte ptr [r14 + rdx], cl
0xbcd3:	add	rdx, 1
0xbcd7:	movzx	ecx, byte ptr [rax + rdx]
0xbcdb:	test	cl, cl
0xbcdd:	jne	0xbcca


0xac83:	xor	r11d, r11d
0xac86:	mov	rax, rbp
0xac89:	mov	r8d, r12d
0xac8c:	mov	rbp, r11
0xac8f:	mov	r11, rax
0xac92:	nop	word ptr [rax + rax]
0xac98:	cmp	r11, rbp
0xac9b:	setne	r12b
0xac9f:	cmp	r11, -1
0xaca3:	jne	0xacb2


0xbcdf:	mov	r15, rdx
0xbce2:	cmp	r13, r15
0xbce5:	jbe	0xb789


0xbcca:	cmp	r13, rdx
0xbccd:	jbe	0xbcd3


0xad4f:	test	eax, eax
0xad51:	mov	r9, qword ptr [rsp + 0x30]
0xad56:	movzx	r8d, byte ptr [rsp + 0x38]
0xad5c:	mov	r11, qword ptr [rsp + 0x40]
0xad61:	jne	0xb2e0


0xad67:	cmp	byte ptr [rsp + 0xf], 0
0xad6c:	movzx	r10d, byte ptr [rsp + 0x28]
0xad72:	jne	0xbcf5


0xbcf5:	cmp	dword ptr [rsp + 8], 2
0xbcfa:	movzx	ebx, byte ptr [rsp + 0xf]
0xbcff:	mov	rbp, r11
0xbd02:	sete	al
0xbd05:	mov	byte ptr [rsp + 0xd], bl
0xbd09:	jmp	0xb739


0xb50b:	test	rax, rax
0xb50e:	mov	r15, rax
0xb511:	je	0xb561


0xb561:	mov	edx, r12d
0xb564:	mov	rdi, rbx
0xb567:	movzx	r8d, byte ptr [rsp + 0x7d]
0xb56d:	xor	edx, 1
0xb570:	movzx	ebx, byte ptr [rsp + 0x7e]
0xb575:	movzx	r10d, byte ptr [rsp + 0x7f]
0xb57b:	and	dl, byte ptr [rsp + 0xd]
0xb57f:	mov	r15, qword ptr [rsp + 0x80]
0xb587:	mov	r14, qword ptr [rsp + 0x40]
0xb58c:	mov	r13, qword ptr [rsp + 0x70]
0xb591:	mov	r11, qword ptr [rsp + 0x30]
0xb596:	cmp	rdi, 1
0xb59a:	jbe	0xbb9b


0xb513:	cmp	rax, -1
0xb517:	je	0xbb35


0xbb9b:	mov	eax, edx
0xbb9d:	jmp	0xb0f7


0xb5a0:	mov	rcx, rdi
0xb5a3:	xor	esi, esi
0xb5a5:	movzx	r9d, byte ptr [rsp + 0xf]
0xb5ab:	add	rcx, rbp
0xb5ae:	mov	rdi, qword ptr [rsp + 0x10]
0xb5b3:	jmp	0xb66e


0xbb35:	mov	rdi, rbx
0xbb38:	movzx	r8d, byte ptr [rsp + 0x7d]
0xbb3e:	movzx	ebx, byte ptr [rsp + 0x7e]
0xbb43:	movzx	r10d, byte ptr [rsp + 0x7f]
0xbb49:	mov	r15, qword ptr [rsp + 0x80]
0xbb51:	xor	r12d, r12d
0xbb54:	mov	r14, qword ptr [rsp + 0x40]
0xbb59:	mov	r13, qword ptr [rsp + 0x70]
0xbb5e:	mov	r11, qword ptr [rsp + 0x30]
0xbb63:	movzx	edx, byte ptr [rsp + 0xd]
0xbb68:	jmp	0xb596


0xb51d:	cmp	rax, -2
0xb521:	je	0xbac1


0xb0f7:	test	al, al
0xb0f9:	jne	0xba91


0xb66e:	test	dl, dl
0xb670:	jne	0xb5c0


0xb596:	cmp	rdi, 1
0xb59a:	jbe	0xbb9b


0xbac1:	mov	r11, qword ptr [rsp + 0x30]
0xbac6:	mov	rsi, r14
0xbac9:	mov	rcx, r13
0xbacc:	mov	rax, rbx
0xbacf:	mov	rdi, rbx
0xbad2:	movzx	r8d, byte ptr [rsp + 0x7d]
0xbad8:	movzx	ebx, byte ptr [rsp + 0x7e]
0xbadd:	mov	r9, qword ptr [rsp + 0x88]
0xbae5:	cmp	rsi, r11
0xbae8:	movzx	r10d, byte ptr [rsp + 0x7f]
0xbaee:	mov	r15, qword ptr [rsp + 0x80]
0xbaf6:	mov	r14, qword ptr [rsp + 0x40]
0xbafb:	mov	r13, qword ptr [rsp + 0x70]
0xbb00:	jae	0xbb28


0xb527:	cmp	dword ptr [rsp + 8], 2
0xb52c:	sete	al
0xb52f:	and	al, byte ptr [rsp + 0xf]
0xb533:	jne	0xb6d0


0xb0ff:	cmp	dword ptr [rsp + 8], 2
0xb104:	sete	dl
0xb107:	jmp	0xadd8


0xba91:	movzx	edx, byte ptr [rsp + 0xd]
0xba96:	xor	r12d, r12d
0xba99:	jmp	0xb5a0


0xb676:	mov	eax, esi
0xb678:	xor	eax, 1
0xb67b:	and	eax, r8d
0xb67e:	test	r10b, r10b
0xb681:	je	0xb691


0xb5c0:	cmp	dword ptr [rsp + 8], 2
0xb5c5:	sete	al
0xb5c8:	test	r9b, r9b
0xb5cb:	jne	0xba80


0xbb02:	cmp	byte ptr [rcx], 0
0xbb05:	jne	0xbb17


0xbb28:	movzx	edx, byte ptr [rsp + 0xd]
0xbb2d:	xor	r12d, r12d
0xbb30:	jmp	0xb596


0xb539:	mov	edi, dword ptr [rsp + 0x9c]
0xb540:	call	0x2b20


0xb6d0:	cmp	r15, 1
0xb6d4:	je	0xb539


0xadd8:	cmp	byte ptr [rsp + 0xd], 1
0xaddd:	jne	0xaef2


0xb691:	add	rbp, 1
0xb695:	cmp	rbp, rcx
0xb698:	jae	0xae1c


0xb683:	cmp	r13, r15
0xb686:	jbe	0xb68d


0xb5d1:	mov	esi, r8d
0xb5d4:	xor	esi, 1
0xb5d7:	and	al, sil
0xb5da:	je	0xb60b


0xba80:	movzx	ebx, byte ptr [rsp + 0xf]
0xba85:	mov	rbp, r11
0xba88:	mov	byte ptr [rsp + 0xd], bl
0xba8c:	jmp	0xb739


0xbb07:	jmp	0xbb28


0xbb17:	add	rax, 1
0xbb1b:	lea	rdx, [rbp + rax]
0xbb20:	cmp	r11, rdx
0xbb23:	ja	0xbb10


0xb6da:	mov	rdi, qword ptr [rsp + 0x10]
0xb6df:	lea	rcx, [rdi + r15]
0xb6e3:	lea	rdx, [rdi + r14 + 1]
0xb6e8:	lea	r8, [rcx + r14]
0xb6ec:	jmp	0xb6fd


0xade3:	test	dl, dl
0xade5:	jne	0xaef2


0xaef2:	cmp	byte ptr [rsp + 0xf], 0
0xaef7:	jne	0xadeb


0xb69e:	test	al, al
0xb6a0:	je	0xba9e


0xae1c:	test	al, al
0xae1e:	je	0xae40


0xb68d:	add	r15, 1
0xb691:	add	rbp, 1
0xb695:	cmp	rbp, rcx
0xb698:	jae	0xae1c


0xb688:	mov	byte ptr [r14 + r15], 0x5c
0xb68d:	add	r15, 1
0xb691:	add	rbp, 1
0xb695:	cmp	rbp, rcx
0xb698:	jae	0xae1c


0xb60b:	cmp	r13, r15
0xb60e:	jbe	0xb615


0xb5dc:	cmp	r13, r15
0xb5df:	jbe	0xb5e6


0xbb25:	mov	rdi, rax
0xbb28:	movzx	edx, byte ptr [rsp + 0xd]
0xbb2d:	xor	r12d, r12d
0xbb30:	jmp	0xb596


0xbb10:	cmp	byte ptr [r9 + rax], 0
0xbb15:	je	0xbb25


0xb6fd:	movzx	ecx, byte ptr [rdx]
0xb700:	sub	ecx, 0x5b
0xb703:	cmp	cl, 0x21
0xb706:	ja	0xb6f0


0xadeb:	mov	rsi, qword ptr [rsp + 0x20]
0xadf0:	test	rsi, rsi
0xadf3:	je	0xae09


0xaefd:	jmp	0xae09


0xba9e:	xor	r10d, r10d
0xbaa1:	jmp	0xb65d


0xb6a6:	cmp	r13, r15
0xb6a9:	jbe	0xb6b0


0xae40:	cmp	r15, r13
0xae43:	jae	0xae49


0xae20:	cmp	r13, r15
0xae23:	jbe	0xae2a


0xb615:	lea	rax, [r15 + 1]
0xb619:	cmp	r13, rax
0xb61c:	jbe	0xb62b


0xb610:	mov	byte ptr [r14 + r15], 0x5c
0xb615:	lea	rax, [r15 + 1]
0xb619:	cmp	r13, rax
0xb61c:	jbe	0xb62b


0xb5e6:	lea	rsi, [r15 + 1]
0xb5ea:	cmp	r13, rsi
0xb5ed:	jbe	0xb5f5


0xb5e1:	mov	byte ptr [r14 + r15], 0x27
0xb5e6:	lea	rsi, [r15 + 1]
0xb5ea:	cmp	r13, rsi
0xb5ed:	jbe	0xb5f5


0xb708:	mov	esi, 1
0xb70d:	shl	rsi, cl
0xb710:	mov	rcx, rsi
0xb713:	movabs	rsi, 0x20000002b
0xb71d:	test	rcx, rsi
0xb720:	je	0xb6f0


0xb6f0:	add	rdx, 1
0xb6f4:	cmp	r8, rdx
0xb6f7:	je	0xb539


0xae09:	test	r10b, r10b
0xae0c:	jne	0xaf53


0xadf5:	mov	edx, ebx
0xadf7:	shr	dl, 5
0xadfa:	movzx	edx, dl
0xadfd:	mov	edx, dword ptr [rsi + rdx*4]
0xae00:	bt	edx, ebx
0xae03:	jb	0xaf53


0xb65d:	cmp	r13, r15
0xb660:	jbe	0xb666


0xb6b0:	lea	rax, [r15 + 1]
0xb6b4:	cmp	r13, rax
0xb6b7:	jbe	0xb6bf


0xb6ab:	mov	byte ptr [r14 + r15], 0x27
0xb6b0:	lea	rax, [r15 + 1]
0xb6b4:	cmp	r13, rax
0xb6b7:	jbe	0xb6bf


0xae45:	mov	byte ptr [r14 + r15], bl
0xae49:	movzx	edi, byte ptr [rsp + 0xe]
0xae4e:	add	r15, 1
0xae52:	mov	eax, 0
0xae57:	test	r12b, r12b
0xae5a:	cmove	edi, eax
0xae5d:	mov	byte ptr [rsp + 0xe], dil
0xae62:	jmp	0xac98


0xae49:	movzx	edi, byte ptr [rsp + 0xe]
0xae4e:	add	r15, 1
0xae52:	mov	eax, 0
0xae57:	test	r12b, r12b
0xae5a:	cmove	edi, eax
0xae5d:	mov	byte ptr [rsp + 0xe], dil
0xae62:	jmp	0xac98


0xae2a:	lea	rax, [r15 + 1]
0xae2e:	cmp	r13, rax
0xae31:	jbe	0xae39


0xae25:	mov	byte ptr [r14 + r15], 0x27
0xae2a:	lea	rax, [r15 + 1]
0xae2e:	cmp	r13, rax
0xae31:	jbe	0xae39


0xb62b:	lea	rax, [r15 + 2]
0xb62f:	cmp	r13, rax
0xb632:	jbe	0xb644


0xb61e:	mov	eax, ebx
0xb620:	shr	al, 6
0xb623:	add	eax, 0x30
0xb626:	mov	byte ptr [r14 + r15 + 1], al
0xb62b:	lea	rax, [r15 + 2]
0xb62f:	cmp	r13, rax
0xb632:	jbe	0xb644


0xb5f5:	lea	rsi, [r15 + 2]
0xb5f9:	cmp	r13, rsi
0xb5fc:	jbe	0xb604


0xb5ef:	mov	byte ptr [r14 + r15 + 1], 0x24
0xb5f5:	lea	rsi, [r15 + 2]
0xb5f9:	cmp	r13, rsi
0xb5fc:	jbe	0xb604


0xb722:	mov	r14, qword ptr [rsp + 0x40]
0xb727:	mov	r13, qword ptr [rsp + 0x70]
0xb72c:	mov	rbp, qword ptr [rsp + 0x30]
0xb731:	mov	dword ptr [rsp + 8], 2
0xb739:	cmp	byte ptr [rsp + 0xd], 0
0xb73e:	je	0xb750


0xae12:	xor	eax, 1
0xae15:	add	rbp, 1
0xae19:	and	eax, r8d
0xae1c:	test	al, al
0xae1e:	je	0xae40


0xaf53:	cmp	dword ptr [rsp + 8], 2
0xaf58:	sete	dl
0xaf5b:	cmp	byte ptr [rsp + 0xf], 0
0xaf60:	mov	eax, edx
0xaf62:	jne	0xb7b8


0xb666:	movzx	ebx, byte ptr [rdi + rbp]
0xb66a:	add	r15, 1
0xb66e:	test	dl, dl
0xb670:	jne	0xb5c0


0xb662:	mov	byte ptr [r14 + r15], bl
0xb666:	movzx	ebx, byte ptr [rdi + rbp]
0xb66a:	add	r15, 1
0xb66e:	test	dl, dl
0xb670:	jne	0xb5c0


0xb6bf:	add	r15, 2
0xb6c3:	xor	r10d, r10d
0xb6c6:	xor	r8d, r8d
0xb6c9:	jmp	0xb65d


0xb6b9:	mov	byte ptr [r14 + r15 + 1], 0x27
0xb6bf:	add	r15, 2
0xb6c3:	xor	r10d, r10d
0xb6c6:	xor	r8d, r8d
0xb6c9:	jmp	0xb65d


0xac98:	cmp	r11, rbp
0xac9b:	setne	r12b
0xac9f:	cmp	r11, -1
0xaca3:	jne	0xacb2


0xae39:	add	r15, 2
0xae3d:	xor	r8d, r8d
0xae40:	cmp	r15, r13
0xae43:	jae	0xae49


0xae33:	mov	byte ptr [r14 + r15 + 1], 0x27
0xae39:	add	r15, 2
0xae3d:	xor	r8d, r8d
0xae40:	cmp	r15, r13
0xae43:	jae	0xae49


0xb644:	and	ebx, 7
0xb647:	add	rbp, 1
0xb64b:	add	r15, 3
0xb64f:	add	ebx, 0x30
0xb652:	cmp	rbp, rcx
0xb655:	jae	0xae40


0xb634:	mov	eax, ebx
0xb636:	shr	al, 3
0xb639:	and	eax, 7
0xb63c:	add	eax, 0x30
0xb63f:	mov	byte ptr [r14 + r15 + 2], al
0xb644:	and	ebx, 7
0xb647:	add	rbp, 1
0xb64b:	add	r15, 3
0xb64f:	add	ebx, 0x30
0xb652:	cmp	rbp, rcx
0xb655:	jae	0xae40


0xb604:	add	r15, 3
0xb608:	mov	r8d, eax
0xb60b:	cmp	r13, r15
0xb60e:	jbe	0xb615


0xb5fe:	mov	byte ptr [r14 + r15 + 2], 0x27
0xb604:	add	r15, 3
0xb608:	mov	r8d, eax
0xb60b:	cmp	r13, r15
0xb60e:	jbe	0xb615


0xaf68:	mov	eax, r8d
0xaf6b:	xor	eax, 1
0xaf6e:	and	al, dl
0xaf70:	je	0xafa1


0xb7b8:	mov	rbp, r11
0xb7bb:	jmp	0xb739


0xb65b:	mov	esi, edx
0xb65d:	cmp	r13, r15
0xb660:	jbe	0xb666


0xafa1:	cmp	r13, r15
0xafa4:	jbe	0xafab


0xaf72:	cmp	r13, r15
0xaf75:	jbe	0xaf7c


0xafab:	add	r15, 1
0xafaf:	add	rbp, 1
0xafb3:	jmp	0xae40


0xafa6:	mov	byte ptr [r14 + r15], 0x5c
0xafab:	add	r15, 1
0xafaf:	add	rbp, 1
0xafb3:	jmp	0xae40


0xaf7c:	lea	rdx, [r15 + 1]
0xaf80:	cmp	r13, rdx
0xaf83:	jbe	0xaf8b


0xaf77:	mov	byte ptr [r14 + r15], 0x27
0xaf7c:	lea	rdx, [r15 + 1]
0xaf80:	cmp	r13, rdx
0xaf83:	jbe	0xaf8b


0xaf8b:	lea	rdx, [r15 + 2]
0xaf8f:	cmp	r13, rdx
0xaf92:	jbe	0xaf9a


0xaf85:	mov	byte ptr [r14 + r15 + 1], 0x24
0xaf8b:	lea	rdx, [r15 + 2]
0xaf8f:	cmp	r13, rdx
0xaf92:	jbe	0xaf9a


0xaf9a:	add	r15, 3
0xaf9e:	mov	r8d, eax
0xafa1:	cmp	r13, r15
0xafa4:	jbe	0xafab


0xaf94:	mov	byte ptr [r14 + r15 + 2], 0x27
0xaf9a:	add	r15, 3
0xaf9e:	mov	r8d, eax
0xafa1:	cmp	r13, r15
0xafa4:	jbe	0xafab


0xb545:	mov	rdi, qword ptr [rsp + 0x28]
0xb54a:	test	eax, eax
0xb54c:	mov	eax, 0
0xb551:	cmove	r12d, eax
0xb555:	add	rbx, r15
0xb558:	call	0x2b10


0xb55d:	test	eax, eax
0xb55f:	je	0xb4e3


0xb4e3:	mov	rax, qword ptr [rsp + 0x10]
0xb4e8:	lea	r14, [rbp + rbx]
0xb4ed:	mov	rdx, qword ptr [rsp + 0x30]
0xb4f2:	mov	rcx, qword ptr [rsp + 0x28]
0xb4f7:	mov	rdi, qword ptr [rsp + 0x38]
0xb4fc:	lea	r13, [rax + r14]
0xb500:	sub	rdx, r14
0xb503:	mov	rsi, r13
0xb506:	call	0xd1b0


0xad0c:	movzx	r8d, byte ptr [rsp + 0x38]
0xad12:	movzx	r10d, byte ptr [rsp + 0x30]
0xad18:	mov	r11, rax
0xad1b:	mov	r9, qword ptr [rsp + 0x28]
0xad20:	cmp	rbx, r11
0xad23:	mov	byte ptr [rsp + 0x28], r10b
0xad28:	ja	0xb2e0


0xb490:	movzx	r8d, byte ptr [rsp + 0x40]
0xb496:	movzx	r10d, byte ptr [rsp + 0x38]
0xb49c:	mov	r11, rax
0xb49f:	mov	r9, qword ptr [rsp + 0x30]
0xb4a4:	lea	rax, [rsp + 0x9c]
0xb4ac:	xor	ecx, ecx
0xb4ae:	mov	byte ptr [rsp + 0x7e], bl
0xb4b2:	mov	byte ptr [rsp + 0x7d], r8b
0xb4b7:	mov	rbx, rcx
0xb4ba:	mov	qword ptr [rsp + 0x88], r9
0xb4c2:	mov	qword ptr [rsp + 0x38], rax
0xb4c7:	mov	byte ptr [rsp + 0x7f], r10b
0xb4cc:	mov	qword ptr [rsp + 0x80], r15
0xb4d4:	mov	qword ptr [rsp + 0x40], r14
0xb4d9:	mov	qword ptr [rsp + 0x70], r13
0xb4de:	mov	qword ptr [rsp + 0x30], r11
0xb4e3:	mov	rax, qword ptr [rsp + 0x10]
0xb4e8:	lea	r14, [rbp + rbx]
0xb4ed:	mov	rdx, qword ptr [rsp + 0x30]
0xb4f2:	mov	rcx, qword ptr [rsp + 0x28]
0xb4f7:	mov	rdi, qword ptr [rsp + 0x38]
0xb4fc:	lea	r13, [rax + r14]
0xb500:	sub	rdx, r14
0xb503:	mov	rsi, r13
0xb506:	call	0xd1b0


0xb0c8:	mov	rcx, qword ptr [rax]
0xb0cb:	movzx	edx, bl
0xb0ce:	movzx	r10d, byte ptr [rsp + 0x28]
0xb0d4:	movzx	r8d, byte ptr [rsp + 0x30]
0xb0da:	mov	r11, qword ptr [rsp + 0x38]
0xb0df:	mov	edi, 1
0xb0e4:	movzx	eax, word ptr [rcx + rdx*2]
0xb0e8:	and	ax, 0x4000
0xb0ec:	setne	r12b
0xb0f0:	sete	al
0xb0f3:	and	al, byte ptr [rsp + 0xd]
0xb0f7:	test	al, al
0xb0f9:	jne	0xba91


0xada0:	xor	r10d, r10d
0xada3:	cmp	r11, 1
0xada7:	setne	al
0xadaa:	cmp	r11, -1
0xadae:	jne	0xadbc


0xadb0:	mov	rax, qword ptr [rsp + 0x10]
0xadb5:	cmp	byte ptr [rax + 1], 0
0xadb9:	setne	al
0xadbc:	cmp	dword ptr [rsp + 8], 2
0xadc1:	sete	dl
0xadc4:	test	al, al
0xadc6:	je	0xb018


0xadbc:	cmp	dword ptr [rsp + 8], 2
0xadc1:	sete	dl
0xadc4:	test	al, al
0xadc6:	je	0xb018


0xb018:	test	rbp, rbp
0xb01b:	jne	0xadcc


0xadcc:	xor	r12d, r12d
0xadcf:	xor	eax, eax
0xadd1:	nop	dword ptr [rax]
0xadd8:	cmp	byte ptr [rsp + 0xd], 1
0xaddd:	jne	0xaef2


0xb021:	movzx	eax, byte ptr [rsp + 0xf]
0xb026:	and	al, dl
0xb028:	je	0xadd8


0xb02e:	mov	rbp, r11
0xb031:	mov	dword ptr [rsp + 8], 2
0xb039:	jmp	0xb739


0xb438:	cmp	byte ptr [rsp + 0xf], 0
0xb43d:	jne	0xbc60


0xae80:	cmp	eax, 5
0xae83:	je	0xb3f8


0xb443:	xor	r12d, r12d
0xb446:	xor	eax, eax
0xb448:	mov	ebx, 0x3f
0xb44d:	jmp	0xae09


0xbc60:	mov	rbp, r11
0xbc63:	movzx	eax, byte ptr [rsp + 0xf]
0xbc68:	jmp	0xb739


0xb3f8:	test	byte ptr [rsp + 0x78], 4
0xb3fd:	je	0xb420


0xae89:	cmp	eax, 2
0xae8c:	mov	ebx, 0x3f
0xae91:	sete	dl
0xae94:	xor	r12d, r12d
0xae97:	xor	eax, eax
0xae99:	jmp	0xadd8


0xb420:	xor	edx, edx
0xb422:	xor	r12d, r12d
0xb425:	xor	eax, eax
0xb427:	mov	ebx, 0x3f
0xb42c:	jmp	0xadd8


0xb3ff:	lea	rcx, [rbp + 2]
0xb403:	cmp	rcx, r11
0xb406:	jae	0xb420


0xb408:	mov	rax, qword ptr [rsp + 0x10]
0xb40d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0xb412:	je	0xbba2


0xbba2:	movzx	ebx, byte ptr [rax + rcx]
0xbba6:	cmp	bl, 0x3e
0xbba9:	ja	0xb420


0xbbaf:	movabs	rax, 0x7000a38200000000
0xbbb9:	bt	rax, rbx
0xbbbd:	jae	0xb420


0xbbc3:	cmp	byte ptr [rsp + 0xf], 0
0xbbc8:	jne	0xbdb2


0xbbce:	cmp	r13, r15
0xbbd1:	jbe	0xbbd8


0xbdb2:	mov	rbp, r11
0xbdb5:	jmp	0xb750


0xbbd8:	lea	rax, [r15 + 1]
0xbbdc:	cmp	r13, rax
0xbbdf:	jbe	0xbbe7


0xbbd3:	mov	byte ptr [r14 + r15], 0x3f
0xbbd8:	lea	rax, [r15 + 1]
0xbbdc:	cmp	r13, rax
0xbbdf:	jbe	0xbbe7


0xbbe7:	lea	rax, [r15 + 2]
0xbbeb:	cmp	r13, rax
0xbbee:	jbe	0xbbf6


0xbbe1:	mov	byte ptr [r14 + r15 + 1], 0x22
0xbbe7:	lea	rax, [r15 + 2]
0xbbeb:	cmp	r13, rax
0xbbee:	jbe	0xbbf6


0xbbf6:	lea	rax, [r15 + 3]
0xbbfa:	cmp	r13, rax
0xbbfd:	jbe	0xbc05


0xbbf0:	mov	byte ptr [r14 + r15 + 2], 0x22
0xbbf6:	lea	rax, [r15 + 3]
0xbbfa:	cmp	r13, rax
0xbbfd:	jbe	0xbc05


0xbc05:	add	r15, 4
0xbc09:	xor	edx, edx
0xbc0b:	xor	r12d, r12d
0xbc0e:	xor	eax, eax
0xbc10:	mov	rbp, rcx
0xbc13:	jmp	0xadd8


0xbbff:	mov	byte ptr [r14 + r15 + 3], 0x3f
0xbc05:	add	r15, 4
0xbc09:	xor	edx, edx
0xbc0b:	xor	r12d, r12d
0xbc0e:	xor	eax, eax
0xbc10:	mov	rbp, rcx
0xbc13:	jmp	0xadd8


0xb3b0:	cmp	byte ptr [rsp + 0xf], 0
0xb3b5:	jne	0xbc60


0xaeae:	mov	byte ptr [rsp + 0x7c], r12b
0xaeb3:	xor	edx, edx
0xaeb5:	xor	eax, eax
0xaeb7:	mov	ebx, 0x27
0xaebc:	jmp	0xadd8


0xb3bb:	test	r13, r13
0xb3be:	je	0xb7c0


0xb7c0:	cmp	r13, r15
0xb7c3:	jbe	0xb7ca


0xb3c4:	xor	edx, edx
0xb3c6:	cmp	qword ptr [rsp + 0x50], 0
0xb3cc:	jne	0xb7c0


0xb7ca:	lea	rax, [r15 + 1]
0xb7ce:	cmp	r13, rax
0xb7d1:	jbe	0xb7d9


0xb7c5:	mov	byte ptr [r14 + r15], 0x27
0xb7ca:	lea	rax, [r15 + 1]
0xb7ce:	cmp	r13, rax
0xb7d1:	jbe	0xb7d9


0xb3d2:	mov	qword ptr [rsp + 0x50], r13
0xb3d7:	add	r15, 3
0xb3db:	xor	eax, eax
0xb3dd:	mov	byte ptr [rsp + 0x7c], r12b
0xb3e2:	xor	r8d, r8d
0xb3e5:	mov	r13, rdx
0xb3e8:	mov	ebx, 0x27
0xb3ed:	jmp	0xae09


0xb7d9:	lea	rax, [r15 + 2]
0xb7dd:	cmp	r13, rax
0xb7e0:	jbe	0xbdd2


0xb7d3:	mov	byte ptr [r14 + r15 + 1], 0x5c
0xb7d9:	lea	rax, [r15 + 2]
0xb7dd:	cmp	r13, rax
0xb7e0:	jbe	0xbdd2


0xbdd2:	mov	rdx, r13
0xbdd5:	mov	r13, qword ptr [rsp + 0x50]
0xbdda:	jmp	0xb3d2


0xb7e6:	mov	rdx, r13
0xb7e9:	mov	byte ptr [r14 + r15 + 2], 0x27
0xb7ef:	mov	r13, qword ptr [rsp + 0x50]
0xb7f4:	jmp	0xb3d2


0xaee4:	cmp	byte ptr [rsp + 0xd], 0
0xaee9:	jne	0xaf50


0xaeeb:	mov	ebx, edx
0xaeed:	xor	r12d, r12d
0xaef0:	xor	eax, eax
0xaef2:	cmp	byte ptr [rsp + 0xf], 0
0xaef7:	jne	0xadeb


0xaf50:	xor	r12d, r12d
0xaf53:	cmp	dword ptr [rsp + 8], 2
0xaf58:	sete	dl
0xaf5b:	cmp	byte ptr [rsp + 0xf], 0
0xaf60:	mov	eax, edx
0xaf62:	jne	0xb7b8


0xb2f0:	cmp	byte ptr [rsp + 0xf], 0
0xb2f5:	jne	0xbc60


0xaf23:	cmp	byte ptr [rsp + 0xd], 0
0xaf28:	je	0xb140


0xb2fb:	add	rbp, 1
0xb2ff:	mov	eax, r8d
0xb302:	xor	r12d, r12d
0xb305:	mov	ebx, 0x5c
0xb30a:	jmp	0xae1c


0xb140:	mov	edx, 0x5c
0xb145:	mov	ebx, 0x5c
0xb14a:	jmp	0xaee4


0xaf2e:	cmp	byte ptr [rsp + 0xf], 0
0xaf33:	je	0xb140


0xaf39:	cmp	qword ptr [rsp + 0x18], 0
0xaf3f:	jne	0xb2fb


0xaf45:	mov	ebx, 0x5c
0xaf4a:	nop	word ptr [rax + rax]
0xaf50:	xor	r12d, r12d
0xaf53:	cmp	dword ptr [rsp + 8], 2
0xaf58:	sete	dl
0xaf5b:	cmp	byte ptr [rsp + 0xf], 0
0xaf60:	mov	eax, edx
0xaf62:	jne	0xb7b8


0xafcb:	xor	edx, edx
0xafcd:	test	byte ptr [rsp + 0x78], 1
0xafd2:	je	0xaeeb


0xb193:	cmp	dword ptr [rsp + 8], 2
0xb198:	sete	dl
0xb19b:	cmp	byte ptr [rsp + 0xf], 0
0xb1a0:	jne	0xbd3a


0xafd8:	add	rbp, 1
0xafdc:	jmp	0xac98


0xb1a6:	mov	eax, r8d
0xb1a9:	mov	rcx, r15
0xb1ac:	xor	eax, 1
0xb1af:	and	al, dl
0xb1b1:	je	0xb1e0


0xbd3a:	movzx	ebx, byte ptr [rsp + 0xf]
0xbd3f:	mov	rbp, r11
0xbd42:	mov	eax, edx
0xbd44:	mov	byte ptr [rsp + 0xd], bl
0xbd48:	jmp	0xb739


0xb1e0:	cmp	r13, rcx
0xb1e3:	jbe	0xb1ea


0xb1b3:	cmp	r13, r15
0xb1b6:	jbe	0xb1bd


0xb1ea:	cmp	dword ptr [rsp + 8], 2
0xb1ef:	lea	r15, [rcx + 1]
0xb1f3:	je	0xb7f9


0xb1e5:	mov	byte ptr [r14 + rcx], 0x5c
0xb1ea:	cmp	dword ptr [rsp + 8], 2
0xb1ef:	lea	r15, [rcx + 1]
0xb1f3:	je	0xb7f9


0xb1bd:	lea	rcx, [r15 + 1]
0xb1c1:	cmp	r13, rcx
0xb1c4:	jbe	0xb1cc


0xb1b8:	mov	byte ptr [r14 + r15], 0x27
0xb1bd:	lea	rcx, [r15 + 1]
0xb1c1:	cmp	r13, rcx
0xb1c4:	jbe	0xb1cc


0xb7f9:	mov	eax, r12d
0xb7fc:	mov	ebx, 0x30
0xb801:	xor	r12d, r12d
0xb804:	jmp	0xae09


0xb1f9:	lea	rax, [rbp + 1]
0xb1fd:	cmp	rax, r11
0xb200:	jae	0xb21b


0xb1cc:	lea	rcx, [r15 + 2]
0xb1d0:	cmp	r13, rcx
0xb1d3:	ja	0xb809


0xb1c6:	mov	byte ptr [r14 + r15 + 1], 0x24
0xb1cc:	lea	rcx, [r15 + 2]
0xb1d0:	cmp	r13, rcx
0xb1d3:	ja	0xb809


0xb202:	mov	rax, qword ptr [rsp + 0x10]
0xb207:	movzx	eax, byte ptr [rax + rbp + 1]
0xb20c:	mov	byte ptr [rsp + 0x28], al
0xb210:	sub	eax, 0x30
0xb213:	cmp	al, 9
0xb215:	jbe	0xba49


0xb21b:	mov	eax, r12d
0xb21e:	mov	ebx, 0x30
0xb223:	xor	r12d, r12d
0xb226:	jmp	0xadd8


0xb1d9:	lea	rcx, [r15 + 3]
0xb1dd:	mov	r8d, eax
0xb1e0:	cmp	r13, rcx
0xb1e3:	jbe	0xb1ea


0xb809:	mov	byte ptr [r14 + r15 + 2], 0x27
0xb80f:	jmp	0xb1d9


0xba49:	cmp	r13, r15
0xba4c:	jbe	0xba53


0xba53:	lea	rax, [rcx + 2]
0xba57:	cmp	r13, rax
0xba5a:	jbe	0xba62


0xba4e:	mov	byte ptr [r14 + r15], 0x30
0xba53:	lea	rax, [rcx + 2]
0xba57:	cmp	r13, rax
0xba5a:	jbe	0xba62


0xba62:	mov	eax, r12d
0xba65:	lea	r15, [rcx + 3]
0xba69:	xor	r12d, r12d
0xba6c:	mov	ebx, 0x30
0xba71:	jmp	0xadd8


0xba5c:	mov	byte ptr [r14 + rcx + 2], 0x30
0xba62:	mov	eax, r12d
0xba65:	lea	r15, [rcx + 3]
0xba69:	xor	r12d, r12d
0xba6c:	mov	ebx, 0x30
0xba71:	jmp	0xadd8


0xaed2:	cmp	dword ptr [rsp + 8], 2
0xaed7:	sete	al
0xaeda:	and	al, byte ptr [rsp + 0xf]
0xaede:	jne	0xb02e


0xb290:	mov	edx, 0xd
0xb295:	xor	r10d, r10d
0xb298:	mov	ebx, 0x72
0xb29d:	jmp	0xaed2


0xb814:	test	ebx, ebx
0xb816:	jne	0xac43


0xb81c:	mov	byte ptr [rsp + 0xd], 1
0xb821:	test	r13, r13
0xb824:	jne	0xbdba


0xb82a:	lea	rax, [rip + 0x8c5a]
0xb831:	mov	qword ptr [rsp + 0x50], 0
0xb83a:	mov	byte ptr [rsp + 0xe], 1
0xb83f:	mov	byte ptr [rsp + 0x7c], 0
0xb844:	xor	r12d, r12d
0xb847:	mov	byte ptr [rsp + 0xf], 0
0xb84c:	mov	qword ptr [rsp + 0x18], 1
0xb855:	mov	qword ptr [rsp + 0x48], rax
0xb85a:	mov	r15d, 1
0xb860:	mov	dword ptr [rsp + 8], 2
0xb868:	jmp	0xac83


0xbdba:	mov	byte ptr [rsp + 0xe], 1
0xbdbf:	xor	eax, eax
0xbdc1:	xor	r12d, r12d
0xbdc4:	mov	qword ptr [rsp + 0x50], 0
0xbdcd:	jmp	0xb374


0xb374:	lea	rbx, [rip + 0x9110]
0xb37b:	mov	byte ptr [r14], 0x27
0xb37f:	mov	dword ptr [rsp + 8], 2
0xb387:	mov	r15d, 1
0xb38d:	mov	qword ptr [rsp + 0x18], 1
0xb396:	mov	byte ptr [rsp + 0xf], 0
0xb39b:	mov	qword ptr [rsp + 0x48], rbx
0xb3a0:	mov	byte ptr [rsp + 0x7c], al
0xb3a4:	jmp	0xac83


0xb878:	test	r13, r13
0xb87b:	je	0xbaa6


0xbc6d:	lea	rax, [rip + 0x7511]
0xbc74:	mov	byte ptr [rsp + 0xe], 1
0xbc79:	mov	byte ptr [rsp + 0x7c], 0
0xbc7e:	xor	r12d, r12d
0xbc81:	mov	qword ptr [rsp + 0x50], 0
0xbc8a:	mov	byte ptr [rsp + 0xf], 1
0xbc8f:	mov	byte ptr [rsp + 0xd], 1
0xbc94:	mov	qword ptr [rsp + 0x18], 1
0xbc9d:	xor	r15d, r15d
0xbca0:	mov	qword ptr [rsp + 0x48], rax
0xbca5:	jmp	0xac83


0xbaa6:	mov	qword ptr [rsp + 0x50], 0
0xbaaf:	mov	byte ptr [rsp + 0xe], 1
0xbab4:	xor	r12d, r12d
0xbab7:	mov	byte ptr [rsp + 0x7c], 0
0xbabc:	jmp	0xb89b


0xb881:	mov	byte ptr [r14], 0x22
0xb885:	mov	byte ptr [rsp + 0xe], 1
0xb88a:	xor	r12d, r12d
0xb88d:	mov	byte ptr [rsp + 0x7c], 0
0xb892:	mov	qword ptr [rsp + 0x50], 0
0xb89b:	lea	rax, [rip + 0x78e3]
0xb8a2:	mov	byte ptr [rsp + 0xf], 0
0xb8a7:	mov	byte ptr [rsp + 0xd], 1
0xb8ac:	mov	qword ptr [rsp + 0x18], 1
0xb8b5:	mov	r15d, 1
0xb8bb:	mov	qword ptr [rsp + 0x48], rax
0xb8c0:	jmp	0xac83


0xb89b:	lea	rax, [rip + 0x78e3]
0xb8a2:	mov	byte ptr [rsp + 0xf], 0
0xb8a7:	mov	byte ptr [rsp + 0xd], 1
0xb8ac:	mov	qword ptr [rsp + 0x18], 1
0xb8b5:	mov	r15d, 1
0xb8bb:	mov	qword ptr [rsp + 0x48], rax
0xb8c0:	jmp	0xac83


0xb8c5:	lea	rax, [rip + 0x78b9]
0xb8cc:	mov	byte ptr [rsp + 0xe], 1
0xb8d1:	mov	byte ptr [rsp + 0x7c], 0
0xb8d6:	xor	r12d, r12d
0xb8d9:	mov	qword ptr [rsp + 0x50], 0
0xb8e2:	mov	byte ptr [rsp + 0xf], 1
0xb8e7:	mov	byte ptr [rsp + 0xd], 1
0xb8ec:	mov	qword ptr [rsp + 0x18], 1
0xb8f5:	xor	r15d, r15d
0xb8f8:	mov	qword ptr [rsp + 0x48], rax
0xb8fd:	mov	dword ptr [rsp + 8], 5
0xb905:	jmp	0xac83


0xb90a:	mov	byte ptr [rsp + 0xe], 1
0xb90f:	mov	byte ptr [rsp + 0x7c], 0
0xb914:	xor	r12d, r12d
0xb917:	mov	qword ptr [rsp + 0x50], 0
0xb920:	mov	byte ptr [rsp + 0xf], 0
0xb925:	xor	r15d, r15d
0xb928:	mov	byte ptr [rsp + 0xd], 1
0xb92d:	mov	qword ptr [rsp + 0x18], 0
0xb936:	mov	qword ptr [rsp + 0x48], 0
0xb93f:	jmp	0xac83


0xb944:	cmp	dword ptr [rsp + 8], 0xa
0xb949:	je	0xb9a1


0xb9a1:	xor	r15d, r15d
0xb9a4:	test	ebx, ebx
0xb9a6:	je	0xbb6d


0xb94b:	lea	rsi, [rip + 0x8b3b]
0xb952:	xor	edi, edi
0xb954:	mov	edx, 5
0xb959:	call	0x2820


0xbb6d:	mov	rdx, qword ptr [rsp + 0x68]
0xbb72:	movzx	eax, byte ptr [rdx]
0xbb75:	test	al, al
0xbb77:	je	0xb9ac


0xb9ac:	test	ebx, ebx
0xb9ae:	mov	rbx, qword ptr [rsp + 0x60]
0xb9b3:	setne	byte ptr [rsp + 0xf]
0xb9b8:	xor	r12d, r12d
0xb9bb:	mov	rdi, rbx
0xb9be:	call	0x2840


0xbb89:	add	r15, 1
0xbb8d:	movzx	eax, byte ptr [rdx + r15]
0xbb92:	test	al, al
0xbb94:	jne	0xbb80


0xbb85:	mov	byte ptr [r14 + r15], al
0xbb89:	add	r15, 1
0xbb8d:	movzx	eax, byte ptr [rdx + r15]
0xbb92:	test	al, al
0xbb94:	jne	0xbb80


0xbb96:	jmp	0xb9ac


0xbb80:	cmp	r13, r15
0xbb83:	jbe	0xbb89


0xb9c3:	mov	qword ptr [rsp + 0x48], rbx
0xb9c8:	mov	qword ptr [rsp + 0x18], rax
0xb9cd:	mov	byte ptr [rsp + 0xe], 1
0xb9d2:	mov	byte ptr [rsp + 0x7c], 0
0xb9d7:	mov	qword ptr [rsp + 0x50], 0
0xb9e0:	mov	byte ptr [rsp + 0xd], 1
0xb9e5:	jmp	0xac83


0xb95e:	mov	rcx, rax
0xb961:	mov	qword ptr [rsp + 0x68], rax
0xb966:	lea	rax, [rip + 0x8b20]
0xb96d:	cmp	rcx, rax
0xb970:	je	0xbd0e


0xbd0e:	mov	esi, dword ptr [rsp + 8]
0xbd12:	mov	rdi, rcx
0xbd15:	call	0xaac0


0xb976:	lea	rsi, [rip + 0x8b0e]
0xb97d:	xor	edi, edi
0xb97f:	mov	edx, 5
0xb984:	call	0x2820


0xb989:	mov	rcx, rax
0xb98c:	mov	qword ptr [rsp + 0x60], rax
0xb991:	lea	rax, [rip + 0x8af3]
0xb998:	cmp	rcx, rax
0xb99b:	je	0xbd24


0xbd24:	mov	esi, dword ptr [rsp + 8]
0xbd28:	mov	rdi, rcx
0xbd2b:	call	0xaac0


0xbd30:	mov	qword ptr [rsp + 0x60], rax
0xbd35:	jmp	0xb9a1


0xbd1a:	mov	qword ptr [rsp + 0x68], rax
0xbd1f:	jmp	0xb976


0xb9ea:	mov	byte ptr [rsp + 0xe], 1
0xb9ef:	mov	byte ptr [rsp + 0x7c], 0
0xb9f4:	xor	r12d, r12d
0xb9f7:	mov	qword ptr [rsp + 0x50], 0
0xba00:	mov	byte ptr [rsp + 0xf], 0
0xba05:	xor	r15d, r15d
0xba08:	mov	byte ptr [rsp + 0xd], 0
0xba0d:	mov	qword ptr [rsp + 0x18], 0
0xba16:	mov	qword ptr [rsp + 0x48], 0
0xba1f:	jmp	0xac83


0xba24:	mov	byte ptr [rsp + 0xe], 1
0xba29:	mov	byte ptr [rsp + 0x7c], 0
0xba2e:	xor	r12d, r12d
0xba31:	mov	qword ptr [rsp + 0x50], 0
0xba3a:	mov	byte ptr [rsp + 0xf], 1
0xba3f:	mov	byte ptr [rsp + 0xd], 1
0xba44:	jmp	0xac63


0xac63:	lea	rax, [rip + 0x9821]
0xac6a:	mov	qword ptr [rsp + 0x18], 1
0xac73:	xor	r15d, r15d
0xac76:	mov	dword ptr [rsp + 8], 2
0xac7e:	mov	qword ptr [rsp + 0x48], rax
0xac83:	xor	r11d, r11d
0xac86:	mov	rax, rbp
0xac89:	mov	r8d, r12d
0xac8c:	mov	rbp, r11
0xac8f:	mov	r11, rax
0xac92:	nop	word ptr [rax + rax]
0xac98:	cmp	r11, rbp
0xac9b:	setne	r12b
0xac9f:	cmp	r11, -1
0xaca3:	jne	0xacb2


0xbc18:	test	ebx, ebx
0xbc1a:	je	0xbda8


0xbda8:	mov	byte ptr [rsp + 0xd], 0
0xbdad:	jmp	0xb821


0xbc20:	lea	rax, [rip + 0x8864]
0xbc27:	mov	byte ptr [rsp + 0xe], 1
0xbc2c:	mov	byte ptr [rsp + 0x7c], 0
0xbc31:	xor	r12d, r12d
0xbc34:	mov	qword ptr [rsp + 0x50], 0
0xbc3d:	mov	byte ptr [rsp + 0xf], 1
0xbc42:	mov	byte ptr [rsp + 0xd], 0
0xbc47:	mov	qword ptr [rsp + 0x18], 1
0xbc50:	xor	r15d, r15d
0xbc53:	mov	qword ptr [rsp + 0x48], rax
0xbc58:	jmp	0xac83


0xb821:	test	r13, r13
0xb824:	jne	0xbdba


0xbde4:	nop	
0xbde6:	nop	word ptr cs:[rax + rax]


0xbf9b:	nop	dword ptr [rax + rax]


0xbfd6:	nop	word ptr cs:[rax + rax]


0xbff1:	nop	dword ptr [rax + rax]
0xbff6:	nop	word ptr cs:[rax + rax]


0xc011:	nop	dword ptr [rax + rax]
0xc016:	nop	word ptr cs:[rax + rax]


0xc055:	nop	
0xc056:	nop	word ptr cs:[rax + rax]


0xc075:	nop	
0xc076:	nop	word ptr cs:[rax + rax]


0xc124:	nop	
0xc126:	nop	word ptr cs:[rax + rax]


0xc213:	nop	dword ptr [rax]
0xc216:	nop	word ptr cs:[rax + rax]


0xc22a:	nop	word ptr [rax + rax]


0xc2c3:	nop	dword ptr [rax]
0xc2c6:	nop	word ptr cs:[rax + rax]


0xc2e3:	nop	dword ptr [rax]
0xc2e6:	nop	word ptr cs:[rax + rax]


0xc2fc:	nop	dword ptr [rax]


0xc318:	nop	dword ptr [rax + rax]


0xc334:	nop	
0xc336:	nop	word ptr cs:[rax + rax]


0xc3ce:	nop	


0xc45a:	nop	word ptr [rax + rax]


0xc46c:	nop	dword ptr [rax]


0xc47f:	nop	


0xc518:	nop	dword ptr [rax + rax]


0xc541:	nop	dword ptr [rax + rax]
0xc546:	nop	word ptr cs:[rax + rax]


0xc55a:	nop	word ptr [rax + rax]


0xc5ee:	nop	


0xc681:	nop	dword ptr [rax + rax]
0xc686:	nop	word ptr cs:[rax + rax]


0xc69c:	nop	dword ptr [rax]


0xc6b7:	nop	word ptr [rax + rax]


0xc6d3:	nop	dword ptr [rax]
0xc6d6:	nop	word ptr cs:[rax + rax]


0xc6ec:	nop	dword ptr [rax]


0xc704:	nop	
0xc706:	nop	word ptr cs:[rax + rax]


0xc723:	nop	dword ptr [rax]
0xc726:	nop	word ptr cs:[rax + rax]


0xc748:	nop	dword ptr [rax + rax]


0xc7d9:	nop	dword ptr [rax]


0xcbf7:	nop	word ptr [rax + rax]


0xcc98:	nop	dword ptr [rax + rax]


0xcd75:	nop	
0xcd76:	nop	word ptr cs:[rax + rax]


0xce1a:	nop	word ptr [rax + rax]


0xce44:	nop	
0xce46:	nop	word ptr cs:[rax + rax]


0xce52:	nop	dword ptr [rax]
0xce56:	nop	word ptr cs:[rax + rax]


0xce96:	nop	word ptr cs:[rax + rax]


0xcec4:	nop	
0xcec6:	nop	word ptr cs:[rax + rax]


0xcf52:	nop	dword ptr [rax]
0xcf56:	nop	word ptr cs:[rax + rax]


0xcfaa:	nop	word ptr [rax + rax]


0xcfc7:	nop	word ptr [rax + rax]


0xcffe:	nop	


0xd028:	nop	dword ptr [rax + rax]


0xd043:	nop	word ptr cs:[rax + rax]
0xd04d:	nop	dword ptr [rax]


0xd085:	nop	word ptr cs:[rax + rax]
0xd08f:	nop	


0xd10b:	nop	dword ptr [rax + rax]


0xd1a7:	nop	word ptr [rax + rax]


0xd233:	nop	word ptr cs:[rax + rax]
0xd23d:	nop	dword ptr [rax]


0xd26c:	nop	dword ptr [rax]


0xd29a:	nop	word ptr [rax + rax]


0xd2fd:	nop	dword ptr [rax]


0xd38f:	nop	


0xd4c6:	nop	word ptr cs:[rax + rax]


0xd5af:	nop	


0xd5bc:	nop	dword ptr [rax]


0xd663:	nop	dword ptr [rax]
0xd666:	nop	word ptr cs:[rax + rax]


0xd7b1:	nop	word ptr cs:[rax + rax]
0xd7bb:	nop	dword ptr [rax + rax]


0xd8b2:	nop	word ptr cs:[rax + rax]
0xd8bc:	nop	dword ptr [rax]


0xd93d:	nop	dword ptr [rax]


0xd9dc:	nop	dword ptr [rax]


0xda21:	nop	dword ptr [rax + rax]
0xda26:	nop	word ptr cs:[rax + rax]


0xda71:	nop	dword ptr [rax + rax]
0xda76:	nop	word ptr cs:[rax + rax]


0xdccb:	mov	rbx, r9
0xdcce:	nop	
0xdcd0:	lea	rax, [rbx - 1]
0xdcd4:	mov	r8d, 1
0xdcda:	mov	r9, rax
0xdcdd:	lea	rax, [rax - 1]
0xdce1:	add	r8d, 1
0xdce5:	cmp	byte ptr [rax + 1], 0x25
0xdce9:	jne	0xdcda


0xde42:	xor	r8d, r8d
0xde45:	mov	eax, 0x2520
0xde4a:	test	r11d, r11d
0xde4d:	mov	word ptr [rsp + 0xab], ax
0xde55:	jne	0xf52b


0xde5b:	lea	rdx, [rsp + 0xab]
0xde63:	mov	r12, rbx
0xde66:	lea	rax, [rdx + 2]
0xde6a:	lea	r9, [rsp + 0xb0]
0xde72:	mov	byte ptr [rax], sil
0xde75:	mov	byte ptr [rax + 1], 0
0xde79:	mov	rcx, r13
0xde7c:	mov	esi, 0x400
0xde81:	mov	dword ptr [rsp + 0x38], r10d
0xde86:	mov	rdi, r9
0xde89:	mov	byte ptr [rsp + 0x50], r8b
0xde8e:	mov	dword ptr [rsp + 0x48], r11d
0xde93:	mov	qword ptr [rsp + 0x40], r9
0xde98:	call	0x2a80


0xf52b:	xor	edi, edi
0xf52d:	jmp	0xe01c


0xe01c:	lea	rdx, [rsp + 0xab]
0xe024:	mov	byte ptr [rsp + 0xad], r11b
0xe02c:	mov	r12, rbx
0xe02f:	mov	r11d, edi
0xe032:	lea	rax, [rdx + 3]
0xe036:	jmp	0xde6a


0xde6a:	lea	r9, [rsp + 0xb0]
0xde72:	mov	byte ptr [rax], sil
0xde75:	mov	byte ptr [rax + 1], 0
0xde79:	mov	rcx, r13
0xde7c:	mov	esi, 0x400
0xde81:	mov	dword ptr [rsp + 0x38], r10d
0xde86:	mov	rdi, r9
0xde89:	mov	byte ptr [rsp + 0x50], r8b
0xde8e:	mov	dword ptr [rsp + 0x48], r11d
0xde93:	mov	qword ptr [rsp + 0x40], r9
0xde98:	call	0x2a80


0xde9d:	test	rax, rax
0xdea0:	je	0xdbb2


0xdea6:	movsxd	r10, dword ptr [rsp + 0x38]
0xdeab:	lea	rcx, [rax - 1]
0xdeaf:	mov	rdx, qword ptr [rsp + 8]
0xdeb4:	mov	eax, 0
0xdeb9:	test	r10d, r10d
0xdebc:	cmovns	rax, r10
0xdec0:	cmp	rcx, rax
0xdec3:	mov	rbx, rax
0xdec6:	cmovae	rbx, rcx
0xdeca:	sub	rdx, r14
0xdecd:	cmp	rdx, rbx
0xded0:	jbe	0xdb4c


0xded6:	test	rbp, rbp
0xded9:	je	0xdf7e


0xdf7e:	add	r14, rbx
0xdf81:	jmp	0xdbb2


0xdedf:	mov	r11d, dword ptr [rsp + 0x48]
0xdee4:	mov	r9, qword ptr [rsp + 0x40]
0xdee9:	movzx	r8d, byte ptr [rsp + 0x50]
0xdeef:	test	r11d, r11d
0xdef2:	jne	0xdf4e


0xdef4:	cmp	rcx, rax
0xdef7:	jae	0xdf4e


0xdf4e:	test	r8b, r8b
0xdf51:	lea	rsi, [r9 + 1]
0xdf55:	mov	rdx, rcx
0xdf58:	jne	0xef78


0xdef9:	movsxd	rdx, r10d
0xdefc:	mov	qword ptr [rsp + 0x50], r9
0xdf01:	mov	qword ptr [rsp + 0x48], rcx
0xdf06:	sub	rdx, rcx
0xdf09:	cmp	r15d, 0x30
0xdf0d:	mov	byte ptr [rsp + 0x40], r8b
0xdf12:	lea	rax, [rbp + rdx]
0xdf17:	mov	qword ptr [rsp + 0x38], rax
0xdf1c:	je	0xef8f


0xdf5e:	cmp	byte ptr [rsp + 0x30], 0
0xdf63:	mov	rdi, rbp
0xdf66:	mov	qword ptr [rsp + 0x30], rcx
0xdf6b:	je	0xe7e1


0xef78:	mov	rdi, rbp
0xef7b:	mov	qword ptr [rsp + 0x30], rcx
0xef80:	call	0xd9e0


0xef8f:	mov	rdi, rbp
0xef92:	mov	esi, 0x30
0xef97:	call	0x28f0


0xdf22:	cmp	r15d, 0x2b
0xdf26:	je	0xef8f


0xe7e1:	call	0x2970


0xdf71:	call	0xda30


0xdf2c:	mov	rdi, rbp
0xdf2f:	mov	esi, 0x20
0xdf34:	call	0x28f0


0xdf76:	mov	rcx, qword ptr [rsp + 0x30]
0xdf7b:	add	rbp, rcx
0xdf7e:	add	r14, rbx
0xdf81:	jmp	0xdbb2


0xe7e6:	mov	rcx, qword ptr [rsp + 0x30]
0xe7eb:	jmp	0xdf7b


0xdf7b:	add	rbp, rcx
0xdf7e:	add	r14, rbx
0xdf81:	jmp	0xdbb2


0xdf39:	movzx	r8d, byte ptr [rsp + 0x40]
0xdf3f:	mov	rbp, qword ptr [rsp + 0x38]
0xdf44:	mov	r9, qword ptr [rsp + 0x50]
0xdf49:	mov	rcx, qword ptr [rsp + 0x48]
0xdf4e:	test	r8b, r8b
0xdf51:	lea	rsi, [r9 + 1]
0xdf55:	mov	rdx, rcx
0xdf58:	jne	0xef78


0xef9c:	mov	rbp, qword ptr [rsp + 0x38]
0xefa1:	movzx	r8d, byte ptr [rsp + 0x40]
0xefa7:	mov	rcx, qword ptr [rsp + 0x48]
0xefac:	mov	r9, qword ptr [rsp + 0x50]
0xefb1:	jmp	0xdf4e


0xef85:	mov	rcx, qword ptr [rsp + 0x30]
0xef8a:	jmp	0xdf7b


0xdf86:	test	r11d, r11d
0xdf89:	jne	0xdcd0


0xdf8f:	movzx	eax, byte ptr [rsp + 0x30]
0xdf94:	test	r8b, r8b
0xdf97:	lea	rdx, [rsp + 0xab]
0xdf9f:	mov	r12, rbx
0xdfa2:	cmovne	eax, r8d
0xdfa6:	xor	r8d, r8d
0xdfa9:	xor	r11d, r11d
0xdfac:	mov	byte ptr [rsp + 0x30], al
0xdfb0:	mov	eax, 0x2520
0xdfb5:	mov	word ptr [rsp + 0xab], ax
0xdfbd:	lea	rax, [rdx + 2]
0xdfc1:	jmp	0xde6a


0xdfc6:	cmp	r11d, 0x45
0xdfca:	je	0xdcd0


0xdfd0:	mov	ecx, dword ptr [r13]
0xdfd4:	mov	edi, 2
0xdfd9:	nop	dword ptr [rax]
0xdfe0:	mov	eax, ecx
0xdfe2:	xor	esi, esi
0xdfe4:	mov	byte ptr [rsp + 0x40], 0
0xdfe9:	shr	eax, 0x1f
0xdfec:	mov	dword ptr [rsp + 0x38], eax
0xdff0:	mov	eax, ecx
0xdff2:	not	eax
0xdff4:	shr	eax, 0x1f
0xdff7:	cmp	r11d, 0x4f
0xdffb:	jne	0xee80


0xe001:	test	al, al
0xe003:	je	0xee80


0xee80:	mov	eax, ecx
0xee82:	neg	eax
0xee84:	cmp	byte ptr [rsp + 0x38], 0
0xee89:	cmovne	ecx, eax
0xee8c:	jmp	0xe5b0


0xe009:	mov	esi, r9d
0xe00c:	mov	edx, 0x2520
0xe011:	xor	r8d, r8d
0xe014:	mov	word ptr [rsp + 0xab], dx
0xe01c:	lea	rdx, [rsp + 0xab]
0xe024:	mov	byte ptr [rsp + 0xad], r11b
0xe02c:	mov	r12, rbx
0xe02f:	mov	r11d, edi
0xe032:	lea	rax, [rdx + 3]
0xe036:	jmp	0xde6a


0xe5b0:	lea	r9, [rsp + 0xb0]
0xe5b8:	mov	r12d, 0xcccccccd
0xe5be:	lea	r11, [r9 + 0x17]
0xe5c2:	nop	word ptr [rax + rax]
0xe5c8:	test	sil, 1
0xe5cc:	lea	r8, [r11 - 1]
0xe5d0:	je	0xe5e1


0xe5e1:	mov	eax, ecx
0xe5e3:	sar	esi, 1
0xe5e5:	mul	r12d
0xe5e8:	shr	edx, 3
0xe5eb:	lea	eax, [rdx + rdx*4]
0xe5ee:	add	eax, eax
0xe5f0:	sub	ecx, eax
0xe5f2:	mov	eax, esi
0xe5f4:	add	ecx, 0x30
0xe5f7:	or	eax, edx
0xe5f9:	mov	byte ptr [r11 - 1], cl
0xe5fd:	mov	ecx, edx
0xe5ff:	mov	r11, r8
0xe602:	jne	0xe5c8


0xe5d2:	lea	rax, [r11 - 2]
0xe5d6:	mov	byte ptr [r11 - 1], 0x3a
0xe5db:	mov	r11, r8
0xe5de:	mov	r8, rax
0xe5e1:	mov	eax, ecx
0xe5e3:	sar	esi, 1
0xe5e5:	mul	r12d
0xe5e8:	shr	edx, 3
0xe5eb:	lea	eax, [rdx + rdx*4]
0xe5ee:	add	eax, eax
0xe5f0:	sub	ecx, eax
0xe5f2:	mov	eax, esi
0xe5f4:	add	ecx, 0x30
0xe5f7:	or	eax, edx
0xe5f9:	mov	byte ptr [r11 - 1], cl
0xe5fd:	mov	ecx, edx
0xe5ff:	mov	r11, r8
0xe602:	jne	0xe5c8


0xe604:	cmp	r10d, edi
0xe607:	cmovge	edi, r10d
0xe60b:	cmp	byte ptr [rsp + 0x38], 0
0xe610:	mov	dword ptr [rsp + 0x48], edi
0xe614:	jne	0xee98


0xe5c8:	test	sil, 1
0xe5cc:	lea	r8, [r11 - 1]
0xe5d0:	je	0xe5e1


0xe61a:	cmp	byte ptr [rsp + 0x40], 0
0xe61f:	je	0xe8b9


0xee98:	cmp	r15d, 0x2d
0xee9c:	mov	byte ptr [rsp + 0x38], 0x2d
0xeea1:	jne	0xe634


0xe8b9:	mov	rdx, qword ptr [rsp + 8]
0xe8be:	lea	rcx, [r9 + 0x17]
0xe8c2:	sub	rcx, r8
0xe8c5:	sub	rdx, r14
0xe8c8:	cmp	r15d, 0x2d
0xe8cc:	je	0xe8df


0xe625:	cmp	r15d, 0x2d
0xe629:	je	0xf153


0xeea7:	test	r10d, r10d
0xeeaa:	mov	r11d, 0
0xeeb0:	mov	rax, qword ptr [rsp + 8]
0xeeb5:	cmovns	r11d, r10d
0xeeb9:	mov	r12d, 1
0xeebf:	movsxd	r11, r11d
0xeec2:	test	r11, r11
0xeec5:	cmovne	r12, r11
0xeec9:	sub	rax, r14
0xeecc:	cmp	rax, r12
0xeecf:	jbe	0xdb4c


0xe634:	mov	eax, dword ptr [rsp + 0x48]
0xe638:	lea	rcx, [r9 + 0x17]
0xe63c:	mov	rdx, qword ptr [rsp + 8]
0xe641:	sub	rcx, r8
0xe644:	lea	r12d, [rax - 1]
0xe648:	sub	rdx, r14
0xe64b:	sub	r12d, ecx
0xe64e:	test	r12d, r12d
0xe651:	jle	0xf09c


0xe8df:	test	r10d, r10d
0xe8e2:	mov	r11d, 0
0xe8e8:	mov	r12, rbx
0xe8eb:	cmovns	r11d, r10d
0xe8ef:	movsxd	r11, r11d
0xe8f2:	jmp	0xe755


0xe8ce:	mov	r12d, dword ptr [rsp + 0x48]
0xe8d3:	sub	r12d, ecx
0xe8d6:	test	r12d, r12d
0xe8d9:	jg	0xf269


0xf153:	mov	r15d, 0x2b
0xf159:	jmp	0xeea7


0xe62f:	mov	byte ptr [rsp + 0x38], 0x2b
0xe634:	mov	eax, dword ptr [rsp + 0x48]
0xe638:	lea	rcx, [r9 + 0x17]
0xe63c:	mov	rdx, qword ptr [rsp + 8]
0xe641:	sub	rcx, r8
0xe644:	lea	r12d, [rax - 1]
0xe648:	sub	rdx, r14
0xe64b:	sub	r12d, ecx
0xe64e:	test	r12d, r12d
0xe651:	jle	0xf09c


0xeed5:	test	rbp, rbp
0xeed8:	je	0xef3c


0xf09c:	test	r10d, r10d
0xf09f:	mov	r11d, 0
0xf0a5:	mov	r12d, 1
0xf0ab:	cmovns	r11d, r10d
0xf0af:	movsxd	r11, r11d
0xf0b2:	test	r11, r11
0xf0b5:	cmovne	r12, r11
0xf0b9:	cmp	r12, rdx
0xf0bc:	jae	0xdb4c


0xe657:	cmp	r15d, 0x5f
0xe65b:	je	0xf016


0xe755:	cmp	rcx, r11
0xe758:	mov	rbx, r11
0xe75b:	cmovae	rbx, rcx
0xe75f:	cmp	rbx, rdx
0xe762:	jae	0xdb4c


0xf269:	cmp	r15d, 0x5f
0xf26d:	je	0xf011


0xef3c:	mov	rdx, qword ptr [rsp + 8]
0xef41:	lea	rcx, [r9 + 0x17]
0xef45:	add	r14, r12
0xef48:	mov	r15d, 0x2d
0xef4e:	mov	r12, rbx
0xef51:	sub	rcx, r8
0xef54:	sub	rdx, r14
0xef57:	jmp	0xe755


0xeeda:	mov	eax, dword ptr [rsp + 0x48]
0xeede:	test	eax, eax
0xeee0:	jne	0xef34


0xf0c2:	test	rbp, rbp
0xf0c5:	je	0xf140


0xf016:	movsxd	r15, r12d
0xf019:	cmp	r15, rdx
0xf01c:	jae	0xdb4c


0xe661:	movsxd	rax, dword ptr [rsp + 0x48]
0xe666:	cmp	rax, rdx
0xe669:	mov	rdi, rax
0xe66c:	jae	0xdb4c


0xe768:	test	rbp, rbp
0xe76b:	je	0xdf7e


0xf011:	mov	byte ptr [rsp + 0x38], 0
0xf016:	movsxd	r15, r12d
0xf019:	cmp	r15, rdx
0xf01c:	jae	0xdb4c


0xf273:	movsxd	rax, dword ptr [rsp + 0x48]
0xf278:	cmp	rax, rdx
0xf27b:	jae	0xdb4c


0xeee2:	cmp	r11, 1
0xeee6:	jbe	0xef34


0xef34:	mov	byte ptr [rbp], r15b
0xef38:	add	rbp, 1
0xef3c:	mov	rdx, qword ptr [rsp + 8]
0xef41:	lea	rcx, [r9 + 0x17]
0xef45:	add	r14, r12
0xef48:	mov	r15d, 0x2d
0xef4e:	mov	r12, rbx
0xef51:	sub	rcx, r8
0xef54:	sub	rdx, r14
0xef57:	jmp	0xe755


0xf140:	mov	rdx, qword ptr [rsp + 8]
0xf145:	add	r14, r12
0xf148:	mov	r12, rbx
0xf14b:	sub	rdx, r14
0xf14e:	jmp	0xe755


0xf0c7:	mov	edi, dword ptr [rsp + 0x48]
0xf0cb:	test	edi, edi
0xf0cd:	jne	0xf134


0xf022:	test	rbp, rbp
0xf025:	je	0xf058


0xe672:	test	r10d, r10d
0xe675:	mov	eax, 0
0xe67a:	mov	esi, 1
0xe67f:	cmovns	eax, r10d
0xe683:	cdqe	
0xe685:	test	rax, rax
0xe688:	cmovne	rsi, rax
0xe68c:	cmp	rsi, rdx
0xe68f:	jae	0xdb4c


0xe771:	mov	esi, dword ptr [rsp + 0x48]
0xe775:	test	esi, esi
0xe777:	jne	0xe7c8


0xf281:	movsxd	r9, r12d
0xf284:	mov	r12, rbx
0xf287:	jmp	0xe70e


0xeee8:	movsxd	rax, r10d
0xeeeb:	mov	rdi, rbp
0xeeee:	mov	esi, 0x20
0xeef3:	lea	rcx, [rax - 1]
0xeef7:	mov	qword ptr [rsp + 0x60], r9
0xeefc:	mov	qword ptr [rsp + 0x58], r8
0xef01:	mov	qword ptr [rsp + 0x50], r11
0xef06:	mov	dword ptr [rsp + 0x40], r10d
0xef0b:	mov	rdx, rcx
0xef0e:	mov	qword ptr [rsp + 0x38], rcx
0xef13:	call	0x28f0


0xf0cf:	cmp	r11, 1
0xf0d3:	jbe	0xf134


0xf134:	movzx	eax, byte ptr [rsp + 0x38]
0xf139:	add	rbp, 1
0xf13d:	mov	byte ptr [rbp - 1], al
0xf140:	mov	rdx, qword ptr [rsp + 8]
0xf145:	add	r14, r12
0xf148:	mov	r12, rbx
0xf14b:	sub	rdx, r14
0xf14e:	jmp	0xe755


0xf058:	mov	rdx, qword ptr [rsp + 8]
0xf05d:	mov	eax, r10d
0xf060:	add	r14, r15
0xf063:	sub	eax, r12d
0xf066:	cmp	r10d, r12d
0xf069:	mov	r10d, 0
0xf06f:	cmovg	r10d, eax
0xf073:	sub	rdx, r14
0xf076:	cmp	byte ptr [rsp + 0x38], 0
0xf07b:	jne	0xf1a2


0xf027:	mov	rdi, rbp
0xf02a:	mov	rdx, r15
0xf02d:	mov	esi, 0x20
0xf032:	mov	dword ptr [rsp + 0x58], r10d
0xf037:	mov	qword ptr [rsp + 0x50], r9
0xf03c:	add	rbp, r15
0xf03f:	mov	qword ptr [rsp + 0x40], r8
0xf044:	call	0x28f0


0xe695:	add	r14, rsi
0xe698:	test	rbp, rbp
0xe69b:	movsxd	r9, r12d
0xe69e:	mov	r12, rbx
0xe6a1:	je	0xe744


0xe779:	cmp	rcx, r11
0xe77c:	jae	0xe7c8


0xe7c8:	cmp	byte ptr [rsp + 0x30], 0
0xe7cd:	mov	rdx, rcx
0xe7d0:	mov	qword ptr [rsp + 0x30], rcx
0xe7d5:	mov	rsi, r8
0xe7d8:	mov	rdi, rbp
0xe7db:	jne	0xdf71


0xe70e:	test	rbp, rbp
0xe711:	je	0xe744


0xf0d5:	movsxd	rdx, r10d
0xf0d8:	mov	dword ptr [rsp + 0x6c], r10d
0xf0dd:	mov	qword ptr [rsp + 0x60], r8
0xf0e2:	sub	rdx, 1
0xf0e6:	cmp	r15d, 0x30
0xf0ea:	mov	qword ptr [rsp + 0x58], rcx
0xf0ef:	lea	rax, [rbp + rdx]
0xf0f4:	mov	qword ptr [rsp + 0x50], r11
0xf0f9:	mov	qword ptr [rsp + 0x40], rax
0xf0fe:	je	0xf4cf


0xf081:	add	r9, 0x17
0xf085:	movsxd	r11, r10d
0xf088:	mov	r12, rbx
0xf08b:	mov	rcx, r9
0xf08e:	mov	r15d, 0x5f
0xf094:	sub	rcx, r8
0xf097:	jmp	0xe755


0xf1a2:	movsxd	r15, r10d
0xf1a5:	mov	r12d, 1
0xf1ab:	test	r15, r15
0xf1ae:	cmovne	r12, r15
0xf1b2:	cmp	r12, rdx
0xf1b5:	jae	0xdb4c


0xe744:	mov	rdx, qword ptr [rsp + 8]
0xe749:	add	r14, r9
0xe74c:	xor	r11d, r11d
0xe74f:	xor	r10d, r10d
0xe752:	sub	rdx, r14
0xe755:	cmp	rcx, r11
0xe758:	mov	rbx, r11
0xe75b:	cmovae	rbx, rcx
0xe75f:	cmp	rbx, rdx
0xe762:	jae	0xdb4c


0xe6a7:	test	edi, edi
0xe6a9:	jne	0xe6ff


0xe77e:	movsxd	rdx, r10d
0xe781:	mov	qword ptr [rsp + 0x48], r8
0xe786:	mov	qword ptr [rsp + 0x40], rcx
0xe78b:	sub	rdx, rcx
0xe78e:	cmp	r15d, 0x30
0xe792:	lea	rax, [rbp + rdx]
0xe797:	mov	qword ptr [rsp + 0x38], rax
0xe79c:	je	0xefda


0xe713:	mov	rdx, r9
0xe716:	mov	rdi, rbp
0xe719:	mov	esi, 0x30
0xe71e:	mov	qword ptr [rsp + 0x50], r8
0xe723:	mov	qword ptr [rsp + 0x40], rcx
0xe728:	mov	qword ptr [rsp + 0x38], r9
0xe72d:	call	0x28f0


0xf4cf:	mov	rdi, rbp
0xf4d2:	mov	esi, 0x30
0xf4d7:	call	0x28f0


0xf104:	cmp	r15d, 0x2b
0xf108:	je	0xf4cf


0xf1bb:	test	rbp, rbp
0xf1be:	je	0xf21b


0xe6ab:	cmp	rax, 1
0xe6af:	jbe	0xe6ff


0xe6ff:	movzx	eax, byte ptr [rsp + 0x38]
0xe704:	add	rbp, 1
0xe708:	mov	r12, rbx
0xe70b:	mov	byte ptr [rbp - 1], al
0xe70e:	test	rbp, rbp
0xe711:	je	0xe744


0xefda:	mov	rdi, rbp
0xefdd:	mov	esi, 0x30
0xefe2:	call	0x28f0


0xe7a2:	cmp	r15d, 0x2b
0xe7a6:	je	0xefda


0xf10e:	mov	rdi, rbp
0xf111:	mov	esi, 0x20
0xf116:	call	0x28f0


0xf21b:	mov	rdx, qword ptr [rsp + 8]
0xf220:	add	r9, 0x17
0xf224:	add	r14, r12
0xf227:	mov	rcx, r9
0xf22a:	mov	r11, r15
0xf22d:	mov	r12, rbx
0xf230:	sub	rcx, r8
0xf233:	mov	r15d, 0x5f
0xf239:	sub	rdx, r14
0xf23c:	jmp	0xe755


0xf1c0:	mov	r11d, dword ptr [rsp + 0x48]
0xf1c5:	test	r11d, r11d
0xf1c8:	jne	0xf20f


0xe6b1:	movsxd	rdx, r10d
0xe6b4:	mov	qword ptr [rsp + 0x58], r8
0xe6b9:	mov	qword ptr [rsp + 0x50], r9
0xe6be:	sub	rdx, 1
0xe6c2:	cmp	r15d, 0x30
0xe6c6:	mov	qword ptr [rsp + 0x40], rcx
0xe6cb:	lea	r12, [rbp + rdx]
0xe6d0:	je	0xf4a1


0xe7ac:	mov	rdi, rbp
0xe7af:	mov	esi, 0x20
0xe7b4:	call	0x28f0


0xf1ca:	cmp	r15, 1
0xf1ce:	jbe	0xf20f


0xf20f:	movzx	eax, byte ptr [rsp + 0x38]
0xf214:	add	rbp, 1
0xf218:	mov	byte ptr [rbp - 1], al
0xf21b:	mov	rdx, qword ptr [rsp + 8]
0xf220:	add	r9, 0x17
0xf224:	add	r14, r12
0xf227:	mov	rcx, r9
0xf22a:	mov	r11, r15
0xf22d:	mov	r12, rbx
0xf230:	sub	rcx, r8
0xf233:	mov	r15d, 0x5f
0xf239:	sub	rdx, r14
0xf23c:	jmp	0xe755


0xf4a1:	mov	rdi, rbp
0xf4a4:	mov	esi, 0x30
0xf4a9:	mov	rbp, r12
0xf4ac:	call	0x28f0


0xe6d6:	cmp	r15d, 0x2b
0xe6da:	je	0xf4a1


0xf1d0:	lea	rcx, [r15 - 1]
0xf1d4:	mov	rdi, rbp
0xf1d7:	mov	esi, 0x20
0xf1dc:	mov	dword ptr [rsp + 0x60], r10d
0xf1e1:	mov	qword ptr [rsp + 0x58], r9
0xf1e6:	mov	rdx, rcx
0xf1e9:	mov	qword ptr [rsp + 0x50], r8
0xf1ee:	mov	qword ptr [rsp + 0x40], rcx
0xf1f3:	call	0x28f0


0xe6e0:	mov	rdi, rbp
0xe6e3:	mov	esi, 0x20
0xe6e8:	mov	rbp, r12
0xe6eb:	call	0x28f0


0xe6f0:	mov	r8, qword ptr [rsp + 0x58]
0xe6f5:	mov	r9, qword ptr [rsp + 0x50]
0xe6fa:	mov	rcx, qword ptr [rsp + 0x40]
0xe6ff:	movzx	eax, byte ptr [rsp + 0x38]
0xe704:	add	rbp, 1
0xe708:	mov	r12, rbx
0xe70b:	mov	byte ptr [rbp - 1], al
0xe70e:	test	rbp, rbp
0xe711:	je	0xe744


0xf1f8:	mov	rcx, qword ptr [rsp + 0x40]
0xf1fd:	mov	r10d, dword ptr [rsp + 0x60]
0xf202:	mov	r9, qword ptr [rsp + 0x58]
0xf207:	mov	r8, qword ptr [rsp + 0x50]
0xf20c:	add	rbp, rcx
0xf20f:	movzx	eax, byte ptr [rsp + 0x38]
0xf214:	add	rbp, 1
0xf218:	mov	byte ptr [rbp - 1], al
0xf21b:	mov	rdx, qword ptr [rsp + 8]
0xf220:	add	r9, 0x17
0xf224:	add	r14, r12
0xf227:	mov	rcx, r9
0xf22a:	mov	r11, r15
0xf22d:	mov	r12, rbx
0xf230:	sub	rcx, r8
0xf233:	mov	r15d, 0x5f
0xf239:	sub	rdx, r14
0xf23c:	jmp	0xe755


0xf4b1:	mov	rcx, qword ptr [rsp + 0x40]
0xf4b6:	mov	r9, qword ptr [rsp + 0x50]
0xf4bb:	mov	r8, qword ptr [rsp + 0x58]
0xf4c0:	jmp	0xe6ff


0xe7b9:	mov	rbp, qword ptr [rsp + 0x38]
0xe7be:	mov	r8, qword ptr [rsp + 0x48]
0xe7c3:	mov	rcx, qword ptr [rsp + 0x40]
0xe7c8:	cmp	byte ptr [rsp + 0x30], 0
0xe7cd:	mov	rdx, rcx
0xe7d0:	mov	qword ptr [rsp + 0x30], rcx
0xe7d5:	mov	rsi, r8
0xe7d8:	mov	rdi, rbp
0xe7db:	jne	0xdf71


0xf11b:	mov	rbp, qword ptr [rsp + 0x40]
0xf120:	mov	r10d, dword ptr [rsp + 0x6c]
0xf125:	mov	r8, qword ptr [rsp + 0x60]
0xf12a:	mov	rcx, qword ptr [rsp + 0x58]
0xf12f:	mov	r11, qword ptr [rsp + 0x50]
0xf134:	movzx	eax, byte ptr [rsp + 0x38]
0xf139:	add	rbp, 1
0xf13d:	mov	byte ptr [rbp - 1], al
0xf140:	mov	rdx, qword ptr [rsp + 8]
0xf145:	add	r14, r12
0xf148:	mov	r12, rbx
0xf14b:	sub	rdx, r14
0xf14e:	jmp	0xe755


0xefe7:	mov	rbp, qword ptr [rsp + 0x38]
0xefec:	mov	rcx, qword ptr [rsp + 0x40]
0xeff1:	mov	r8, qword ptr [rsp + 0x48]
0xeff6:	jmp	0xe7c8


0xf4dc:	mov	rbp, qword ptr [rsp + 0x40]
0xf4e1:	mov	r11, qword ptr [rsp + 0x50]
0xf4e6:	mov	rcx, qword ptr [rsp + 0x58]
0xf4eb:	mov	r8, qword ptr [rsp + 0x60]
0xf4f0:	mov	r10d, dword ptr [rsp + 0x6c]
0xf4f5:	jmp	0xf134


0xe732:	mov	r9, qword ptr [rsp + 0x38]
0xe737:	mov	r8, qword ptr [rsp + 0x50]
0xe73c:	mov	rcx, qword ptr [rsp + 0x40]
0xe741:	add	rbp, r9
0xe744:	mov	rdx, qword ptr [rsp + 8]
0xe749:	add	r14, r9
0xe74c:	xor	r11d, r11d
0xe74f:	xor	r10d, r10d
0xe752:	sub	rdx, r14
0xe755:	cmp	rcx, r11
0xe758:	mov	rbx, r11
0xe75b:	cmovae	rbx, rcx
0xe75f:	cmp	rbx, rdx
0xe762:	jae	0xdb4c


0xf049:	mov	r10d, dword ptr [rsp + 0x58]
0xf04e:	mov	r9, qword ptr [rsp + 0x50]
0xf053:	mov	r8, qword ptr [rsp + 0x40]
0xf058:	mov	rdx, qword ptr [rsp + 8]
0xf05d:	mov	eax, r10d
0xf060:	add	r14, r15
0xf063:	sub	eax, r12d
0xf066:	cmp	r10d, r12d
0xf069:	mov	r10d, 0
0xf06f:	cmovg	r10d, eax
0xf073:	sub	rdx, r14
0xf076:	cmp	byte ptr [rsp + 0x38], 0
0xf07b:	jne	0xf1a2


0xef18:	mov	rcx, qword ptr [rsp + 0x38]
0xef1d:	mov	r9, qword ptr [rsp + 0x60]
0xef22:	mov	r8, qword ptr [rsp + 0x58]
0xef27:	mov	r11, qword ptr [rsp + 0x50]
0xef2c:	mov	r10d, dword ptr [rsp + 0x40]
0xef31:	add	rbp, rcx
0xef34:	mov	byte ptr [rbp], r15b
0xef38:	add	rbp, 1
0xef3c:	mov	rdx, qword ptr [rsp + 8]
0xef41:	lea	rcx, [r9 + 0x17]
0xef45:	add	r14, r12
0xef48:	mov	r15d, 0x2d
0xef4e:	mov	r12, rbx
0xef51:	sub	rcx, r8
0xef54:	sub	rdx, r14
0xef57:	jmp	0xe755


0xe03b:	test	r10d, r10d
0xe03e:	mov	ecx, 0
0xe043:	mov	eax, 1
0xe048:	cmovns	ecx, r10d
0xe04c:	movsxd	rcx, ecx
0xe04f:	test	rcx, rcx
0xe052:	cmove	rcx, rax
0xe056:	mov	rax, qword ptr [rsp + 8]
0xe05b:	sub	rax, r14
0xe05e:	cmp	rax, rcx
0xe061:	jbe	0xdb4c


0xe067:	test	rbp, rbp
0xe06a:	je	0xe0b8


0xe0b8:	add	r14, rcx
0xe0bb:	mov	r12, rbx
0xe0be:	jmp	0xdbb2


0xe06c:	cmp	r10d, 1
0xe070:	jle	0xe0ac


0xe0ac:	mov	byte ptr [rbp], 9
0xe0b0:	add	rbp, 1
0xe0b4:	nop	dword ptr [rax]
0xe0b8:	add	r14, rcx
0xe0bb:	mov	r12, rbx
0xe0be:	jmp	0xdbb2


0xe072:	movsxd	rdx, r10d
0xe075:	mov	qword ptr [rsp + 0x30], rcx
0xe07a:	sub	rdx, 1
0xe07e:	cmp	r15d, 0x30
0xe082:	lea	r12, [rbp + rdx]
0xe087:	je	0xf3a4


0xf3a4:	mov	rdi, rbp
0xf3a7:	mov	esi, 0x30
0xf3ac:	mov	rbp, r12
0xf3af:	call	0x28f0


0xe08d:	cmp	r15d, 0x2b
0xe091:	je	0xf3a4


0xe097:	mov	rdi, rbp
0xe09a:	mov	esi, 0x20
0xe09f:	mov	rbp, r12
0xe0a2:	call	0x28f0


0xe0a7:	mov	rcx, qword ptr [rsp + 0x30]
0xe0ac:	mov	byte ptr [rbp], 9
0xe0b0:	add	rbp, 1
0xe0b4:	nop	dword ptr [rax]
0xe0b8:	add	r14, rcx
0xe0bb:	mov	r12, rbx
0xe0be:	jmp	0xdbb2


0xf3b4:	mov	rcx, qword ptr [rsp + 0x30]
0xf3b9:	jmp	0xe0ac


0xe0c3:	mov	eax, 1
0xe0c8:	test	r8b, r8b
0xe0cb:	jne	0xeffb


0xe0d1:	mov	r8d, eax
0xe0d4:	mov	esi, 0x70
0xe0d9:	jmp	0xde45


0xeffb:	mov	esi, 0x70
0xf000:	mov	byte ptr [rsp + 0x30], 0
0xf005:	jmp	0xde45


0xde45:	mov	eax, 0x2520
0xde4a:	test	r11d, r11d
0xde4d:	mov	word ptr [rsp + 0xab], ax
0xde55:	jne	0xf52b


0xe0de:	lea	rax, [rip + 0x4d11]
0xe0e5:	mov	dword ptr [rsp + 0x38], 0xffffffff
0xe0ed:	mov	qword ptr [rsp + 0x40], rax
0xe0f2:	movzx	r8d, byte ptr [rsp + 0x30]
0xe0f8:	mov	eax, dword ptr [rsp + 0x518]
0xe0ff:	mov	rsi, -1
0xe106:	mov	dword ptr [rsp + 0x48], r10d
0xe10b:	xor	edi, edi
0xe10d:	mov	r9d, r15d
0xe110:	mov	rcx, r13
0xe113:	mov	dword ptr [rsp + 0x30], r8d
0xe118:	push	rax
0xe119:	push	qword ptr [rsp + 0x18]
0xe11d:	push	qword ptr [rsp + 0x28]
0xe121:	mov	eax, dword ptr [rsp + 0x50]
0xe125:	push	rax
0xe126:	mov	rdx, qword ptr [rsp + 0x60]
0xe12b:	call	0xda80


0xe130:	add	rsp, 0x20
0xe134:	movsxd	r10, dword ptr [rsp + 0x48]
0xe139:	mov	r11, rax
0xe13c:	mov	rsi, qword ptr [rsp + 8]
0xe141:	mov	eax, 0
0xe146:	test	r10d, r10d
0xe149:	cmovns	rax, r10
0xe14d:	cmp	r11, rax
0xe150:	mov	r12, rax
0xe153:	cmovae	r12, r11
0xe157:	sub	rsi, r14
0xe15a:	cmp	rsi, r12
0xe15d:	mov	qword ptr [rsp + 0x48], rsi
0xe162:	jbe	0xdb4c


0xe168:	test	rbp, rbp
0xe16b:	je	0xdbac


0xe171:	cmp	r11, rax
0xe174:	jae	0xe1b6


0xe176:	movsxd	rdx, r10d
0xe179:	mov	qword ptr [rsp + 0x58], r11
0xe17e:	sub	rdx, r11
0xe181:	cmp	r15d, 0x30
0xe185:	lea	rax, [rbp + rdx]
0xe18a:	mov	qword ptr [rsp + 0x50], rax
0xe18f:	je	0xf28c


0xe1b6:	mov	eax, dword ptr [rsp + 0x518]
0xe1bd:	mov	qword ptr [rsp + 0x50], r11
0xe1c2:	mov	rdi, rbp
0xe1c5:	mov	r9d, r15d
0xe1c8:	mov	rcx, r13
0xe1cb:	push	rax
0xe1cc:	push	qword ptr [rsp + 0x18]
0xe1d0:	push	qword ptr [rsp + 0x28]
0xe1d4:	mov	eax, dword ptr [rsp + 0x50]
0xe1d8:	push	rax
0xe1d9:	mov	r8d, dword ptr [rsp + 0x50]
0xe1de:	mov	rdx, qword ptr [rsp + 0x60]
0xe1e3:	mov	rsi, qword ptr [rsp + 0x68]
0xe1e8:	call	0xda80


0xf28c:	mov	rdi, rbp
0xf28f:	mov	esi, 0x30
0xf294:	call	0x28f0


0xe195:	cmp	r15d, 0x2b
0xe199:	je	0xf28c


0xe19f:	mov	rdi, rbp
0xe1a2:	mov	esi, 0x20
0xe1a7:	call	0x28f0


0xe1ac:	mov	rbp, qword ptr [rsp + 0x50]
0xe1b1:	mov	r11, qword ptr [rsp + 0x58]
0xe1b6:	mov	eax, dword ptr [rsp + 0x518]
0xe1bd:	mov	qword ptr [rsp + 0x50], r11
0xe1c2:	mov	rdi, rbp
0xe1c5:	mov	r9d, r15d
0xe1c8:	mov	rcx, r13
0xe1cb:	push	rax
0xe1cc:	push	qword ptr [rsp + 0x18]
0xe1d0:	push	qword ptr [rsp + 0x28]
0xe1d4:	mov	eax, dword ptr [rsp + 0x50]
0xe1d8:	push	rax
0xe1d9:	mov	r8d, dword ptr [rsp + 0x50]
0xe1de:	mov	rdx, qword ptr [rsp + 0x60]
0xe1e3:	mov	rsi, qword ptr [rsp + 0x68]
0xe1e8:	call	0xda80


0xf299:	mov	rbp, qword ptr [rsp + 0x50]
0xf29e:	mov	r11, qword ptr [rsp + 0x58]
0xf2a3:	jmp	0xe1b6


0xe1ed:	mov	r11, qword ptr [rsp + 0x70]
0xe1f2:	add	rsp, 0x20
0xe1f6:	add	rbp, r11
0xe1f9:	jmp	0xdbac


0xe1fe:	mov	rdx, qword ptr [rsp + 8]
0xe203:	mov	eax, 0
0xe208:	mov	ecx, 1
0xe20d:	sub	rdx, r14
0xe210:	test	r10d, r10d
0xe213:	cmovns	eax, r10d
0xe217:	cdqe	
0xe219:	test	rax, rax
0xe21c:	cmovne	rcx, rax
0xe220:	test	r11d, r11d
0xe223:	jne	0xf258


0xe229:	cmp	rcx, rdx
0xe22c:	jae	0xdb4c


0xf258:	mov	r12, rbx
0xf25b:	mov	r9, rbx
0xf25e:	mov	r8d, 1
0xf264:	jmp	0xdd11


0xe232:	test	rbp, rbp
0xe235:	je	0xe0b8


0xdd11:	cmp	rcx, rdx
0xdd14:	jae	0xdb4c


0xe23b:	cmp	r10d, 1
0xe23f:	jle	0xe27e


0xe27e:	mov	byte ptr [rbp], sil
0xe282:	add	rbp, 1
0xe286:	jmp	0xe0b8


0xe241:	movsxd	rdx, r10d
0xe244:	mov	qword ptr [rsp + 0x30], rcx
0xe249:	sub	rdx, 1
0xe24d:	cmp	r15d, 0x30
0xe251:	lea	r12, [rbp + rdx]
0xe256:	je	0xf4c5


0xf4c5:	mov	esi, 0x30
0xf4ca:	jmp	0xe26b


0xe25c:	cmp	r15d, 0x2b
0xe260:	mov	esi, 0x20
0xe265:	je	0xf4c5


0xe26b:	mov	rdi, rbp
0xe26e:	mov	rbp, r12
0xe271:	call	0x28f0


0xe276:	movzx	esi, byte ptr [rbx]
0xe279:	mov	rcx, qword ptr [rsp + 0x30]
0xe27e:	mov	byte ptr [rbp], sil
0xe282:	add	rbp, 1
0xe286:	jmp	0xe0b8


0xe28b:	lea	rax, [rip + 0x4df1]
0xe292:	mov	dword ptr [rsp + 0x38], 0xffffffff
0xe29a:	mov	qword ptr [rsp + 0x40], rax
0xe29f:	jmp	0xe0f2


0xe0f2:	movzx	r8d, byte ptr [rsp + 0x30]
0xe0f8:	mov	eax, dword ptr [rsp + 0x518]
0xe0ff:	mov	rsi, -1
0xe106:	mov	dword ptr [rsp + 0x48], r10d
0xe10b:	xor	edi, edi
0xe10d:	mov	r9d, r15d
0xe110:	mov	rcx, r13
0xe113:	mov	dword ptr [rsp + 0x30], r8d
0xe118:	push	rax
0xe119:	push	qword ptr [rsp + 0x18]
0xe11d:	push	qword ptr [rsp + 0x28]
0xe121:	mov	eax, dword ptr [rsp + 0x50]
0xe125:	push	rax
0xe126:	mov	rdx, qword ptr [rsp + 0x60]
0xe12b:	call	0xda80


0xe2a4:	cmp	r11d, 0x45
0xe2a8:	je	0xdcd0


0xe2ae:	mov	esi, dword ptr [r13 + 0x1c]
0xe2b2:	sub	esi, dword ptr [r13 + 0x18]
0xe2b6:	mov	edx, 0x92492493
0xe2bb:	add	esi, 7
0xe2be:	mov	eax, esi
0xe2c0:	imul	edx
0xe2c2:	lea	ecx, [rdx + rsi]
0xe2c5:	sar	esi, 0x1f
0xe2c8:	mov	edi, 2
0xe2cd:	sar	ecx, 2
0xe2d0:	sub	ecx, esi
0xe2d2:	jmp	0xdfe0


0xdfe0:	mov	eax, ecx
0xdfe2:	xor	esi, esi
0xdfe4:	mov	byte ptr [rsp + 0x40], 0
0xdfe9:	shr	eax, 0x1f
0xdfec:	mov	dword ptr [rsp + 0x38], eax
0xdff0:	mov	eax, ecx
0xdff2:	not	eax
0xdff4:	shr	eax, 0x1f
0xdff7:	cmp	r11d, 0x4f
0xdffb:	jne	0xee80


0xe2d7:	cmp	r11d, 0x45
0xe2db:	je	0xf00a


0xf00a:	xor	edi, edi
0xf00c:	jmp	0xe00c


0xe2e1:	cmp	r11d, 0x4f
0xe2e5:	je	0xdcd0


0xe00c:	mov	edx, 0x2520
0xe011:	xor	r8d, r8d
0xe014:	mov	word ptr [rsp + 0xab], dx
0xe01c:	lea	rdx, [rsp + 0xab]
0xe024:	mov	byte ptr [rsp + 0xad], r11b
0xe02c:	mov	r12, rbx
0xe02f:	mov	r11d, edi
0xe032:	lea	rax, [rdx + 3]
0xe036:	jmp	0xde6a


0xe2eb:	mov	eax, dword ptr [r13 + 0x14]
0xe2ef:	cmp	eax, 0xfffff894
0xe2f4:	lea	ecx, [rax + 0x76c]
0xe2fa:	setl	byte ptr [rsp + 0x38]
0xe2ff:	cmp	eax, 0xfffff894
0xe304:	setge	al
0xe307:	test	r15d, r15d
0xe30a:	jne	0xf189


0xe310:	mov	r15d, dword ptr [rsp + 0x2c]
0xe315:	cmp	r15d, 0x2b
0xe319:	je	0xf193


0xf189:	cmp	r15d, 0x2b
0xf18d:	jne	0xe31f


0xf193:	mov	edi, 4
0xf198:	mov	edx, 0x270f
0xf19d:	jmp	0xebed


0xe31f:	mov	byte ptr [rsp + 0x40], 0
0xe324:	mov	edi, 4
0xe329:	xor	esi, esi
0xe32b:	jmp	0xdff7


0xebed:	cmp	edx, ecx
0xebef:	mov	byte ptr [rsp + 0x40], 1
0xebf4:	mov	r15d, 0x2b
0xebfa:	jb	0xe329


0xdff7:	cmp	r11d, 0x4f
0xdffb:	jne	0xee80


0xe329:	xor	esi, esi
0xe32b:	jmp	0xdff7


0xec00:	cmp	r10d, edi
0xec03:	mov	r15d, 0x2b
0xec09:	setg	byte ptr [rsp + 0x40]
0xec0e:	xor	esi, esi
0xec10:	jmp	0xdff7


0xe330:	movzx	esi, byte ptr [rsp + 0x30]
0xe335:	mov	rdi, qword ptr [rsp + 0x20]
0xe33a:	test	r8b, r8b
0xe33d:	mov	eax, 0
0xe342:	mov	dword ptr [rsp + 0x38], r10d
0xe347:	mov	byte ptr [rsp + 0x40], r8b
0xe34c:	cmovne	esi, eax
0xe34f:	mov	byte ptr [rsp + 0x30], sil
0xe354:	call	0x2840


0xe359:	movsxd	r10, dword ptr [rsp + 0x38]
0xe35e:	mov	r12, rax
0xe361:	mov	rdx, qword ptr [rsp + 8]
0xe366:	mov	eax, 0
0xe36b:	test	r10d, r10d
0xe36e:	cmovns	rax, r10
0xe372:	cmp	r12, rax
0xe375:	mov	rcx, rax
0xe378:	cmovae	rcx, r12
0xe37c:	sub	rdx, r14
0xe37f:	cmp	rdx, rcx
0xe382:	jbe	0xdb4c


0xe388:	test	rbp, rbp
0xe38b:	je	0xe0b8


0xe391:	cmp	r12, rax
0xe394:	movzx	r8d, byte ptr [rsp + 0x40]
0xe39a:	jae	0xe3e7


0xe39c:	movsxd	rdx, r10d
0xe39f:	mov	qword ptr [rsp + 0x48], rcx
0xe3a4:	mov	byte ptr [rsp + 0x40], r8b
0xe3a9:	sub	rdx, r12
0xe3ac:	cmp	r15d, 0x30
0xe3b0:	lea	rax, [rbp + rdx]
0xe3b5:	mov	qword ptr [rsp + 0x38], rax
0xe3ba:	je	0xf47f


0xe3e7:	test	r8b, r8b
0xe3ea:	jne	0xf3e7


0xf47f:	mov	rdi, rbp
0xf482:	mov	esi, 0x30
0xf487:	call	0x28f0


0xe3c0:	cmp	r15d, 0x2b
0xe3c4:	je	0xf47f


0xe3f0:	cmp	byte ptr [rsp + 0x30], 0
0xe3f5:	mov	rdx, r12
0xe3f8:	mov	qword ptr [rsp + 0x30], rcx
0xe3fd:	mov	rsi, qword ptr [rsp + 0x20]
0xe402:	mov	rdi, rbp
0xe405:	je	0xf3d8


0xf3e7:	mov	rsi, qword ptr [rsp + 0x20]
0xf3ec:	mov	rdx, r12
0xf3ef:	mov	rdi, rbp
0xf3f2:	mov	qword ptr [rsp + 0x30], rcx
0xf3f7:	call	0xd9e0


0xe3ca:	mov	rdi, rbp
0xe3cd:	mov	esi, 0x20
0xe3d2:	call	0x28f0


0xf3d8:	call	0x2970


0xe40b:	call	0xda30


0xe410:	mov	rcx, qword ptr [rsp + 0x30]
0xe415:	add	rbp, r12
0xe418:	jmp	0xe0b8


0xf3dd:	mov	rcx, qword ptr [rsp + 0x30]
0xf3e2:	jmp	0xe415


0xe415:	add	rbp, r12
0xe418:	jmp	0xe0b8


0xf3fc:	mov	rcx, qword ptr [rsp + 0x30]
0xf401:	jmp	0xe415


0xe3d7:	movzx	r8d, byte ptr [rsp + 0x40]
0xe3dd:	mov	rbp, qword ptr [rsp + 0x38]
0xe3e2:	mov	rcx, qword ptr [rsp + 0x48]
0xe3e7:	test	r8b, r8b
0xe3ea:	jne	0xf3e7


0xf48c:	mov	rbp, qword ptr [rsp + 0x38]
0xf491:	movzx	r8d, byte ptr [rsp + 0x40]
0xf497:	mov	rcx, qword ptr [rsp + 0x48]
0xf49c:	jmp	0xe3e7


0xe41d:	cmp	r11d, 0x45
0xe421:	je	0xf00a


0xe427:	mov	esi, dword ptr [r13 + 0x14]
0xe42b:	mov	edx, 0x51eb851f
0xe430:	mov	eax, esi
0xe432:	imul	edx
0xe434:	mov	eax, esi
0xe436:	sar	eax, 0x1f
0xe439:	mov	ecx, edx
0xe43b:	sar	ecx, 5
0xe43e:	sub	ecx, eax
0xe440:	mov	eax, esi
0xe442:	imul	ecx, ecx, 0x64
0xe445:	sub	eax, ecx
0xe447:	mov	ecx, eax
0xe449:	jns	0xe459


0xe44b:	neg	eax
0xe44d:	add	ecx, 0x64
0xe450:	cmp	esi, 0xfffff893
0xe456:	cmovle	ecx, eax
0xe459:	test	r15d, r15d
0xe45c:	je	0xea8a


0xe459:	test	r15d, r15d
0xe45c:	je	0xea8a


0xea8a:	mov	r15d, dword ptr [rsp + 0x2c]
0xea8f:	mov	eax, 1
0xea94:	cmp	r15d, 0x2b
0xea98:	je	0xf4fa


0xe462:	mov	eax, 1
0xe467:	mov	byte ptr [rsp + 0x38], 0
0xe46c:	cmp	r15d, 0x2b
0xe470:	je	0xebe3


0xf4fa:	mov	byte ptr [rsp + 0x38], 0
0xf4ff:	mov	edi, 2
0xf504:	jmp	0xec00


0xea9e:	mov	byte ptr [rsp + 0x40], 0
0xeaa3:	mov	byte ptr [rsp + 0x38], 0
0xeaa8:	mov	edi, 2
0xeaad:	xor	esi, esi
0xeaaf:	jmp	0xdff7


0xebe3:	mov	edi, 2
0xebe8:	mov	edx, 0x63
0xebed:	cmp	edx, ecx
0xebef:	mov	byte ptr [rsp + 0x40], 1
0xebf4:	mov	r15d, 0x2b
0xebfa:	jb	0xe329


0xe476:	mov	byte ptr [rsp + 0x40], 0
0xe47b:	mov	edi, 2
0xe480:	xor	esi, esi
0xe482:	jmp	0xdff7


0xe487:	movzx	eax, byte ptr [rsp + 0x30]
0xe48c:	test	r8b, r8b
0xe48f:	cmovne	eax, r8d
0xe493:	cmp	r11d, 0x45
0xe497:	je	0xf406


0xf406:	mov	byte ptr [rsp + 0x30], al
0xf40a:	jmp	0xdcd0


0xe49d:	mov	esi, r9d
0xe4a0:	mov	byte ptr [rsp + 0x30], al
0xe4a4:	xor	r8d, r8d
0xe4a7:	jmp	0xde45


0xe4ac:	xor	r8d, r8d
0xe4af:	mov	ecx, dword ptr [r13 + 0x20]
0xe4b3:	test	ecx, ecx
0xe4b5:	js	0xf15e


0xf15e:	mov	r12, rbx
0xf161:	jmp	0xdbb2


0xe4bb:	mov	rcx, qword ptr [r13 + 0x28]
0xe4bf:	mov	byte ptr [rsp + 0x38], 1
0xe4c4:	test	ecx, ecx
0xe4c6:	js	0xe4dc


0xe4dc:	mov	eax, ecx
0xe4de:	mov	edx, 0x91a2b3c5
0xe4e3:	mov	esi, 0x88888889
0xe4e8:	imul	edx
0xe4ea:	mov	eax, ecx
0xe4ec:	sar	eax, 0x1f
0xe4ef:	mov	dword ptr [rsp + 0x40], eax
0xe4f3:	lea	r12d, [rdx + rcx]
0xe4f7:	sar	r12d, 0xb
0xe4fb:	sub	r12d, eax
0xe4fe:	mov	eax, ecx
0xe500:	imul	esi
0xe502:	lea	edi, [rdx + rcx]
0xe505:	sar	edi, 5
0xe508:	sub	edi, dword ptr [rsp + 0x40]
0xe50c:	mov	eax, edi
0xe50e:	imul	esi
0xe510:	mov	eax, edi
0xe512:	sar	eax, 0x1f
0xe515:	lea	esi, [rdx + rdi]
0xe518:	sar	esi, 5
0xe51b:	sub	esi, eax
0xe51d:	mov	eax, edi
0xe51f:	imul	esi, esi, 0x3c
0xe522:	imul	edi, edi, 0x3c
0xe525:	sub	eax, esi
0xe527:	sub	ecx, edi
0xe529:	cmp	r8, 1
0xe52d:	mov	esi, eax
0xe52f:	je	0xf382


0xe4c8:	mov	byte ptr [rsp + 0x38], 0
0xe4cd:	jne	0xe4dc


0xf382:	movzx	eax, byte ptr [rsp + 0x38]
0xf387:	mov	byte ptr [rsp + 0x40], 1
0xf38c:	mov	edi, 6
0xf391:	imul	ecx, r12d, 0x64
0xf395:	xor	eax, 1
0xf398:	add	ecx, esi
0xf39a:	mov	esi, 4
0xf39f:	jmp	0xdff7


0xe535:	jb	0xf460


0xe4cf:	mov	rax, qword ptr [rsp + 0x20]
0xe4d4:	cmp	byte ptr [rax], 0x2d
0xe4d7:	sete	byte ptr [rsp + 0x38]
0xe4dc:	mov	eax, ecx
0xe4de:	mov	edx, 0x91a2b3c5
0xe4e3:	mov	esi, 0x88888889
0xe4e8:	imul	edx
0xe4ea:	mov	eax, ecx
0xe4ec:	sar	eax, 0x1f
0xe4ef:	mov	dword ptr [rsp + 0x40], eax
0xe4f3:	lea	r12d, [rdx + rcx]
0xe4f7:	sar	r12d, 0xb
0xe4fb:	sub	r12d, eax
0xe4fe:	mov	eax, ecx
0xe500:	imul	esi
0xe502:	lea	edi, [rdx + rcx]
0xe505:	sar	edi, 5
0xe508:	sub	edi, dword ptr [rsp + 0x40]
0xe50c:	mov	eax, edi
0xe50e:	imul	esi
0xe510:	mov	eax, edi
0xe512:	sar	eax, 0x1f
0xe515:	lea	esi, [rdx + rdi]
0xe518:	sar	esi, 5
0xe51b:	sub	esi, eax
0xe51d:	mov	eax, edi
0xe51f:	imul	esi, esi, 0x3c
0xe522:	imul	edi, edi, 0x3c
0xe525:	sub	eax, esi
0xe527:	sub	ecx, edi
0xe529:	cmp	r8, 1
0xe52d:	mov	esi, eax
0xe52f:	je	0xf382


0xf460:	imul	ecx, r12d, 0x64
0xf464:	xor	esi, esi
0xf466:	mov	byte ptr [rsp + 0x40], 1
0xf46b:	mov	edi, 5
0xf470:	add	ecx, eax
0xf472:	movzx	eax, byte ptr [rsp + 0x38]
0xf477:	xor	eax, 1
0xf47a:	jmp	0xdff7


0xe53b:	cmp	r8, 2
0xe53f:	je	0xf335


0xf335:	imul	esi, esi, 0x64
0xf338:	mov	byte ptr [rsp + 0x40], 1
0xf33d:	mov	edi, 9
0xf342:	imul	eax, r12d, 0x2710
0xf349:	add	eax, esi
0xf34b:	mov	esi, 0x14
0xf350:	add	ecx, eax
0xf352:	movzx	eax, byte ptr [rsp + 0x38]
0xf357:	xor	eax, 1
0xf35a:	jmp	0xdff7


0xe545:	cmp	r8, 3
0xe549:	jne	0xf40f


0xe54f:	test	ecx, ecx
0xe551:	jne	0xf335


0xf40f:	movzx	ecx, byte ptr [rbx]
0xf412:	mov	r9, rbx
0xf415:	jmp	0xec79


0xe557:	test	eax, eax
0xe559:	jne	0xf382


0xec79:	mov	rdx, qword ptr [rsp + 8]
0xec7e:	mov	eax, 0
0xec83:	sub	rdx, r14
0xec86:	test	r10d, r10d
0xec89:	cmovns	eax, r10d
0xec8d:	cmp	cl, 0x25
0xec90:	cdqe	
0xec92:	jne	0xdccb


0xe55f:	movzx	eax, byte ptr [rsp + 0x38]
0xe564:	mov	ecx, r12d
0xe567:	mov	byte ptr [rsp + 0x40], 1
0xe56c:	mov	edi, 3
0xe571:	xor	eax, 1
0xe574:	jmp	0xdff7


0xec98:	test	rax, rax
0xec9b:	mov	ecx, 1
0xeca0:	mov	r12, r9
0xeca3:	cmovne	rcx, rax
0xeca7:	mov	r8d, 1
0xecad:	jmp	0xdd11


0xe593:	lea	edx, [rax + rax*4]
0xe596:	mov	byte ptr [rsp + 0x40], 0
0xe59b:	mov	byte ptr [rsp + 0x38], 0
0xe5a0:	xor	esi, esi
0xe5a2:	lea	ecx, [rax + rdx*2]
0xe5a5:	sar	ecx, 5
0xe5a8:	add	ecx, 1
0xe5ab:	nop	dword ptr [rax + rax]
0xe5b0:	lea	r9, [rsp + 0xb0]
0xe5b8:	mov	r12d, 0xcccccccd
0xe5be:	lea	r11, [r9 + 0x17]
0xe5c2:	nop	word ptr [rax + rax]
0xe5c8:	test	sil, 1
0xe5cc:	lea	r8, [r11 - 1]
0xe5d0:	je	0xe5e1


0xe7f0:	movdqu	xmm0, xmmword ptr [r13]
0xe7f6:	lea	rsi, [rsp + 0x70]
0xe7fb:	mov	rax, qword ptr [r13 + 0x30]
0xe7ff:	mov	rdi, qword ptr [rsp + 0x10]
0xe804:	movaps	xmmword ptr [rsp + 0x70], xmm0
0xe809:	mov	dword ptr [rsp + 0x38], r10d
0xe80e:	movdqu	xmm0, xmmword ptr [r13 + 0x10]
0xe814:	mov	qword ptr [rsp + 0xa0], rax
0xe81c:	movaps	xmmword ptr [rsp + 0x80], xmm0
0xe824:	movdqu	xmm0, xmmword ptr [r13 + 0x20]
0xe82a:	movaps	xmmword ptr [rsp + 0x90], xmm0
0xe832:	call	0xd670


0xe837:	lea	r9, [rsp + 0xb0]
0xe83f:	mov	rsi, rax
0xe842:	mov	rcx, rax
0xe845:	movabs	r11, 0x6666666666666667
0xe84f:	mov	edi, 0x30
0xe854:	mov	r10d, dword ptr [rsp + 0x38]
0xe859:	lea	r8, [r9 + 0x17]
0xe85d:	nop	dword ptr [rax]
0xe860:	mov	rax, rcx
0xe863:	imul	r11
0xe866:	mov	rax, rcx
0xe869:	sar	rax, 0x3f
0xe86d:	sar	rdx, 2
0xe871:	sub	rdx, rax
0xe874:	mov	rax, rdx
0xe877:	lea	rdx, [rdx + rdx*4]
0xe87b:	add	rdx, rdx
0xe87e:	sub	rcx, rdx
0xe881:	mov	rdx, rcx
0xe884:	mov	rcx, rax
0xe887:	mov	eax, edi
0xe889:	sub	eax, edx
0xe88b:	add	edx, 0x30
0xe88e:	test	rsi, rsi
0xe891:	cmovs	edx, eax
0xe894:	sub	r8, 1
0xe898:	test	rcx, rcx
0xe89b:	mov	byte ptr [r8], dl
0xe89e:	jne	0xe860


0xe8a0:	test	r10d, r10d
0xe8a3:	mov	edi, 1
0xe8a8:	cmovg	edi, r10d
0xe8ac:	test	rsi, rsi
0xe8af:	mov	dword ptr [rsp + 0x48], edi
0xe8b3:	js	0xee98


0xe860:	mov	rax, rcx
0xe863:	imul	r11
0xe866:	mov	rax, rcx
0xe869:	sar	rax, 0x3f
0xe86d:	sar	rdx, 2
0xe871:	sub	rdx, rax
0xe874:	mov	rax, rdx
0xe877:	lea	rdx, [rdx + rdx*4]
0xe87b:	add	rdx, rdx
0xe87e:	sub	rcx, rdx
0xe881:	mov	rdx, rcx
0xe884:	mov	rcx, rax
0xe887:	mov	eax, edi
0xe889:	sub	eax, edx
0xe88b:	add	edx, 0x30
0xe88e:	test	rsi, rsi
0xe891:	cmovs	edx, eax
0xe894:	sub	r8, 1
0xe898:	test	rcx, rcx
0xe89b:	mov	byte ptr [r8], dl
0xe89e:	jne	0xe860


0xe8f7:	movzx	eax, byte ptr [rbx + 1]
0xe8fb:	lea	rdx, [rbx + 1]
0xe8ff:	cmp	al, 0x3a
0xe901:	je	0xf41a


0xf41a:	lea	rcx, [rbx + 2]
0xf41e:	mov	r8d, 1
0xf424:	mov	rdx, rcx
0xf427:	add	rcx, 1
0xf42b:	movzx	eax, byte ptr [rcx - 1]
0xf42f:	add	r8, 1
0xf433:	cmp	al, 0x3a
0xf435:	jne	0xe90d


0xe907:	mov	r8d, 1
0xe90d:	cmp	al, 0x7a
0xe90f:	jne	0xdcd0


0xf43b:	jmp	0xf424


0xe90d:	cmp	al, 0x7a
0xe90f:	jne	0xdcd0


0xe915:	mov	rbx, rdx
0xe918:	jmp	0xe4af


0xf424:	mov	rdx, rcx
0xf427:	add	rcx, 1
0xf42b:	movzx	eax, byte ptr [rcx - 1]
0xf42f:	add	r8, 1
0xf433:	cmp	al, 0x3a
0xf435:	jne	0xe90d


0xe4af:	mov	ecx, dword ptr [r13 + 0x20]
0xe4b3:	test	ecx, ecx
0xe4b5:	js	0xf15e


0xe91d:	cmp	r11d, 0x45
0xe921:	je	0xdcd0


0xe927:	mov	edi, dword ptr [r13 + 0x14]
0xe92b:	mov	r8d, dword ptr [r13 + 0x1c]
0xe92f:	mov	edx, 0x92492493
0xe934:	mov	eax, edi
0xe936:	mov	ecx, r8d
0xe939:	sar	eax, 0x1f
0xe93c:	and	eax, 0x190
0xe941:	lea	r12d, [rdi + rax - 0x64]
0xe946:	mov	eax, dword ptr [r13 + 0x18]
0xe94a:	sub	ecx, eax
0xe94c:	mov	dword ptr [rsp + 0x38], eax
0xe950:	add	ecx, 0x17e
0xe956:	mov	eax, ecx
0xe958:	imul	edx
0xe95a:	lea	eax, [rdx + rcx]
0xe95d:	mov	edx, ecx
0xe95f:	sar	edx, 0x1f
0xe962:	sar	eax, 2
0xe965:	sub	eax, edx
0xe967:	lea	edx, [rax*8]
0xe96e:	sub	edx, eax
0xe970:	mov	eax, edx
0xe972:	mov	edx, r8d
0xe975:	sub	edx, ecx
0xe977:	lea	eax, [rdx + rax + 3]
0xe97b:	test	eax, eax
0xe97d:	mov	dword ptr [rsp + 0x40], eax
0xe981:	js	0xf2a8


0xf2a8:	sub	r12d, 1
0xf2ac:	mov	edx, 0x16d
0xf2b1:	test	r12b, 3
0xf2b5:	jne	0xf2f3


0xe987:	test	r12b, 3
0xe98b:	mov	eax, 0x16d
0xe990:	jne	0xe9d7


0xf2b7:	mov	eax, r12d
0xf2ba:	mov	edx, 0x51eb851f
0xf2bf:	imul	edx
0xf2c1:	mov	eax, edx
0xf2c3:	mov	edx, r12d
0xf2c6:	sar	edx, 0x1f
0xf2c9:	sar	eax, 5
0xf2cc:	sub	eax, edx
0xf2ce:	mov	edx, 0x16e
0xf2d3:	imul	eax, eax, 0x64
0xf2d6:	cmp	r12d, eax
0xf2d9:	jne	0xf2f3


0xf2f3:	add	r8d, edx
0xf2f6:	mov	edx, 0x92492493
0xf2fb:	mov	ecx, r8d
0xf2fe:	sub	ecx, dword ptr [rsp + 0x38]
0xf302:	add	ecx, 0x17e
0xf308:	mov	eax, ecx
0xf30a:	sub	r8d, ecx
0xf30d:	imul	edx
0xf30f:	lea	eax, [rdx + rcx]
0xf312:	mov	edx, ecx
0xf314:	sar	edx, 0x1f
0xf317:	sar	eax, 2
0xf31a:	sub	eax, edx
0xf31c:	lea	edx, [rax*8]
0xf323:	sub	edx, eax
0xf325:	lea	ecx, [r8 + rdx + 3]
0xf32a:	mov	r8d, 0xffffffff
0xf330:	jmp	0xea1f


0xe992:	mov	ecx, 0x51eb851f
0xe997:	mov	eax, r12d
0xe99a:	imul	ecx
0xe99c:	mov	eax, r12d
0xe99f:	sar	eax, 0x1f
0xe9a2:	mov	dword ptr [rsp + 0x48], eax
0xe9a6:	mov	ecx, edx
0xe9a8:	sar	edx, 5
0xe9ab:	sub	edx, eax
0xe9ad:	mov	eax, 0x16e
0xe9b2:	imul	edx, edx, 0x64
0xe9b5:	cmp	r12d, edx
0xe9b8:	jne	0xe9d7


0xe9d7:	sub	r8d, eax
0xe9da:	mov	edx, 0x92492493
0xe9df:	mov	ecx, r8d
0xe9e2:	sub	ecx, dword ptr [rsp + 0x38]
0xe9e6:	add	ecx, 0x17e
0xe9ec:	mov	eax, ecx
0xe9ee:	sub	r8d, ecx
0xe9f1:	imul	edx
0xe9f3:	lea	eax, [rdx + rcx]
0xe9f6:	mov	edx, ecx
0xe9f8:	sar	edx, 0x1f
0xe9fb:	sar	eax, 2
0xe9fe:	sub	eax, edx
0xea00:	lea	edx, [rax*8]
0xea07:	sub	edx, eax
0xea09:	lea	ecx, [r8 + rdx + 3]
0xea0e:	mov	r8d, 1
0xea14:	test	ecx, ecx
0xea16:	jns	0xea1f


0xf2db:	mov	eax, r12d
0xf2de:	mov	ecx, 0x190
0xf2e3:	cdq	
0xf2e4:	idiv	ecx
0xf2e6:	cmp	edx, 1
0xf2e9:	sbb	edx, edx
0xf2eb:	not	edx
0xf2ed:	add	edx, 0x16e
0xf2f3:	add	r8d, edx
0xf2f6:	mov	edx, 0x92492493
0xf2fb:	mov	ecx, r8d
0xf2fe:	sub	ecx, dword ptr [rsp + 0x38]
0xf302:	add	ecx, 0x17e
0xf308:	mov	eax, ecx
0xf30a:	sub	r8d, ecx
0xf30d:	imul	edx
0xf30f:	lea	eax, [rdx + rcx]
0xf312:	mov	edx, ecx
0xf314:	sar	edx, 0x1f
0xf317:	sar	eax, 2
0xf31a:	sub	eax, edx
0xf31c:	lea	edx, [rax*8]
0xf323:	sub	edx, eax
0xf325:	lea	ecx, [r8 + rdx + 3]
0xf32a:	mov	r8d, 0xffffffff
0xf330:	jmp	0xea1f


0xea1f:	cmp	sil, 0x47
0xea23:	je	0xf166


0xe9ba:	sar	ecx, 7
0xe9bd:	mov	eax, ecx
0xe9bf:	sub	eax, dword ptr [rsp + 0x48]
0xe9c3:	imul	eax, eax, 0x190
0xe9c9:	cmp	r12d, eax
0xe9cc:	sete	al
0xe9cf:	movzx	eax, al
0xe9d2:	add	eax, 0x16d
0xe9d7:	sub	r8d, eax
0xe9da:	mov	edx, 0x92492493
0xe9df:	mov	ecx, r8d
0xe9e2:	sub	ecx, dword ptr [rsp + 0x38]
0xe9e6:	add	ecx, 0x17e
0xe9ec:	mov	eax, ecx
0xe9ee:	sub	r8d, ecx
0xe9f1:	imul	edx
0xe9f3:	lea	eax, [rdx + rcx]
0xe9f6:	mov	edx, ecx
0xe9f8:	sar	edx, 0x1f
0xe9fb:	sar	eax, 2
0xe9fe:	sub	eax, edx
0xea00:	lea	edx, [rax*8]
0xea07:	sub	edx, eax
0xea09:	lea	ecx, [r8 + rdx + 3]
0xea0e:	mov	r8d, 1
0xea14:	test	ecx, ecx
0xea16:	jns	0xea1f


0xea18:	mov	ecx, dword ptr [rsp + 0x40]
0xea1c:	xor	r8d, r8d
0xea1f:	cmp	sil, 0x47
0xea23:	je	0xf166


0xf166:	mov	eax, 0xfffff894
0xf16b:	lea	ecx, [rdi + r8 + 0x76c]
0xf173:	sub	eax, r8d
0xf176:	cmp	edi, eax
0xf178:	setl	byte ptr [rsp + 0x38]
0xf17d:	setge	al
0xf180:	test	r15d, r15d
0xf183:	je	0xe310


0xea29:	cmp	sil, 0x67
0xea2d:	jne	0xf35f


0xea33:	mov	ecx, 0x51eb851f
0xea38:	mov	eax, edi
0xea3a:	mov	esi, edi
0xea3c:	imul	ecx
0xea3e:	mov	eax, edx
0xea40:	mov	edx, edi
0xea42:	sar	edx, 0x1f
0xea45:	sar	eax, 5
0xea48:	sub	eax, edx
0xea4a:	imul	eax, eax, 0x64
0xea4d:	sub	esi, eax
0xea4f:	add	esi, r8d
0xea52:	mov	eax, esi
0xea54:	imul	ecx
0xea56:	mov	eax, esi
0xea58:	sar	eax, 0x1f
0xea5b:	mov	ecx, edx
0xea5d:	sar	ecx, 5
0xea60:	sub	ecx, eax
0xea62:	imul	ecx, ecx, 0x64
0xea65:	sub	esi, ecx
0xea67:	mov	ecx, esi
0xea69:	jns	0xe459


0xf35f:	mov	eax, ecx
0xf361:	mov	edx, 0x92492493
0xf366:	mov	edi, 2
0xf36b:	imul	edx
0xf36d:	lea	eax, [rdx + rcx]
0xf370:	sar	ecx, 0x1f
0xf373:	sar	eax, 2
0xf376:	sub	eax, ecx
0xf378:	mov	ecx, eax
0xf37a:	add	ecx, 1
0xf37d:	jmp	0xdfe0


0xea6f:	mov	eax, 0xfffff894
0xea74:	sub	eax, r8d
0xea77:	cmp	edi, eax
0xea79:	jge	0xf51a


0xea7f:	neg	ecx
0xea81:	test	r15d, r15d
0xea84:	jne	0xe462


0xf51a:	add	ecx, 0x64
0xf51d:	test	r15d, r15d
0xf520:	je	0xea8a


0xf526:	jmp	0xe462


0xeab4:	cmp	r11d, 0x45
0xeab8:	je	0xdcd0


0xeabe:	mov	ecx, dword ptr [r13 + 0xc]
0xeac2:	mov	edi, 2
0xeac7:	jmp	0xdfe0


0xeacc:	mov	eax, dword ptr [r13 + 0x18]
0xead0:	mov	edx, 0x92492493
0xead5:	mov	edi, 1
0xeada:	lea	ecx, [rax + 6]
0xeadd:	mov	eax, ecx
0xeadf:	imul	edx
0xeae1:	lea	eax, [rdx + rcx]
0xeae4:	mov	edx, ecx
0xeae6:	sar	edx, 0x1f
0xeae9:	sar	eax, 2
0xeaec:	sub	eax, edx
0xeaee:	lea	edx, [rax*8]
0xeaf5:	sub	edx, eax
0xeaf7:	sub	ecx, edx
0xeaf9:	add	ecx, 1
0xeafc:	jmp	0xdfe0


0xeb01:	cmp	r11d, 0x45
0xeb05:	je	0xdcd0


0xeb0b:	mov	ecx, dword ptr [r13 + 0x18]
0xeb0f:	mov	edi, 1
0xeb14:	jmp	0xdfe0


0xeb19:	cmp	r11d, 0x45
0xeb1d:	je	0xdcd0


0xeb23:	mov	eax, dword ptr [r13 + 0x18]
0xeb27:	mov	ecx, 0x92492493
0xeb2c:	lea	esi, [rax + 6]
0xeb2f:	mov	eax, esi
0xeb31:	imul	ecx
0xeb33:	lea	eax, [rdx + rsi]
0xeb36:	mov	edx, esi
0xeb38:	sar	edx, 0x1f
0xeb3b:	sar	eax, 2
0xeb3e:	sub	eax, edx
0xeb40:	lea	edx, [rax*8]
0xeb47:	sub	edx, eax
0xeb49:	mov	eax, edx
0xeb4b:	mov	edx, dword ptr [r13 + 0x1c]
0xeb4f:	sub	eax, esi
0xeb51:	lea	esi, [rax + rdx + 7]
0xeb55:	mov	eax, esi
0xeb57:	imul	ecx
0xeb59:	jmp	0xe2c2


0xe2c2:	lea	ecx, [rdx + rsi]
0xe2c5:	sar	esi, 0x1f
0xe2c8:	mov	edi, 2
0xe2cd:	sar	ecx, 2
0xe2d0:	sub	ecx, esi
0xe2d2:	jmp	0xdfe0


0xeb5e:	cmp	r11d, 0x45
0xeb62:	je	0xdcd0


0xeb68:	test	r8b, r8b
0xeb6b:	je	0xde45


0xeb71:	mov	byte ptr [rsp + 0x30], r8b
0xeb76:	jmp	0xde42


0xeb7b:	cmp	r11d, 0x45
0xeb7f:	je	0xf00a


0xeb85:	mov	esi, dword ptr [r13 + 0x14]
0xeb89:	mov	edx, 0x51eb851f
0xeb8e:	mov	eax, esi
0xeb90:	imul	edx
0xeb92:	mov	eax, edx
0xeb94:	mov	edx, esi
0xeb96:	sar	edx, 0x1f
0xeb99:	sar	eax, 5
0xeb9c:	sub	eax, edx
0xeb9e:	mov	edx, esi
0xeba0:	lea	ecx, [rax + 0x13]
0xeba3:	imul	eax, eax, 0x64
0xeba6:	sub	edx, eax
0xeba8:	mov	eax, edx
0xebaa:	shr	eax, 0x1f
0xebad:	test	ecx, ecx
0xebaf:	setg	dl
0xebb2:	and	eax, edx
0xebb4:	cmp	esi, 0xfffff894
0xebba:	setl	byte ptr [rsp + 0x38]
0xebbf:	sub	ecx, eax
0xebc1:	cmp	esi, 0xfffff894
0xebc7:	setge	al
0xebca:	test	r15d, r15d
0xebcd:	jne	0xe46c


0xebd3:	cmp	dword ptr [rsp + 0x2c], 0x2b
0xebd8:	mov	r15d, dword ptr [rsp + 0x2c]
0xebdd:	jne	0xe476


0xe46c:	cmp	r15d, 0x2b
0xe470:	je	0xebe3


0xec15:	test	r11d, r11d
0xec18:	jne	0xdcd0


0xec1e:	lea	rax, [rip + 0x41e0]
0xec25:	mov	dword ptr [rsp + 0x38], 0xffffffff
0xec2d:	mov	qword ptr [rsp + 0x40], rax
0xec32:	jmp	0xe0f2


0xec37:	test	r11d, r11d
0xec3a:	jne	0xdcd0


0xec40:	test	r15d, r15d
0xec43:	jne	0xf43d


0xec49:	test	r10d, r10d
0xec4c:	jns	0xf43d


0xf43d:	mov	esi, r10d
0xf440:	mov	eax, 0
0xf445:	sub	esi, 6
0xf448:	cmovns	eax, esi
0xf44b:	mov	dword ptr [rsp + 0x38], eax
0xf44f:	lea	rax, [rip + 0x39a6]
0xf456:	mov	qword ptr [rsp + 0x40], rax
0xf45b:	jmp	0xe0f2


0xec52:	lea	rax, [rip + 0x41a3]
0xec59:	mov	dword ptr [rsp + 0x38], 4
0xec61:	mov	r15d, 0x2b
0xec67:	mov	qword ptr [rsp + 0x40], rax
0xec6c:	jmp	0xe0f2


0xec71:	movzx	ecx, byte ptr [rbx - 1]
0xec75:	lea	r9, [rbx - 1]
0xec79:	mov	rdx, qword ptr [rsp + 8]
0xec7e:	mov	eax, 0
0xec83:	sub	rdx, r14
0xec86:	test	r10d, r10d
0xec89:	cmovns	eax, r10d
0xec8d:	cmp	cl, 0x25
0xec90:	cdqe	
0xec92:	jne	0xdccb


0xecb2:	cmp	r11d, 0x45
0xecb6:	je	0xdcd0


0xecbc:	mov	ecx, dword ptr [r13 + 8]
0xecc0:	mov	edi, 2
0xecc5:	jmp	0xdfe0


0xecca:	cmp	r11d, 0x45
0xecce:	je	0xdcd0


0xecd4:	mov	ecx, dword ptr [r13 + 4]
0xecd8:	mov	edi, 2
0xecdd:	jmp	0xdfe0


0xece2:	cmp	r11d, 0x45
0xece6:	je	0xdcd0


0xecec:	cmp	r10d, -1
0xecf0:	je	0xf241


0xf241:	mov	ecx, dword ptr [rsp + 0x518]
0xf248:	mov	edi, 9
0xf24d:	mov	r10d, 9
0xf253:	jmp	0xdfe0


0xecf6:	cmp	r10d, 8
0xecfa:	jg	0xf509


0xed00:	mov	ecx, dword ptr [rsp + 0x518]
0xed07:	mov	esi, r10d
0xed0a:	mov	edi, 0x66666667
0xed0f:	nop	
0xed10:	mov	eax, ecx
0xed12:	add	esi, 1
0xed15:	sar	ecx, 0x1f
0xed18:	imul	edi
0xed1a:	sar	edx, 2
0xed1d:	sub	edx, ecx
0xed1f:	cmp	esi, 9
0xed22:	mov	ecx, edx
0xed24:	jne	0xed10


0xf509:	mov	ecx, dword ptr [rsp + 0x518]
0xf510:	jmp	0xed26


0xed26:	mov	edi, r10d
0xed29:	jmp	0xdfe0


0xed10:	mov	eax, ecx
0xed12:	add	esi, 1
0xed15:	sar	ecx, 0x1f
0xed18:	imul	edi
0xed1a:	sar	edx, 2
0xed1d:	sub	edx, ecx
0xed1f:	cmp	esi, 9
0xed22:	mov	ecx, edx
0xed24:	jne	0xed10


0xed2e:	cmp	r11d, 0x45
0xed32:	je	0xdcd0


0xed38:	mov	ecx, dword ptr [rsp + 0x68]
0xed3c:	mov	edi, 2
0xed41:	jmp	0xdfe0


0xed46:	cmp	r11d, 0x45
0xed4a:	je	0xdcd0


0xed50:	mov	ecx, dword ptr [rsp + 0x68]
0xed54:	test	r15d, r15d
0xed57:	mov	edi, 2
0xed5c:	jne	0xdfe0


0xed62:	mov	r15d, 0x5f
0xed68:	jmp	0xdfe0


0xed6d:	cmp	r11d, 0x45
0xed71:	je	0xdcd0


0xed77:	mov	eax, dword ptr [r13 + 0x10]
0xed7b:	mov	byte ptr [rsp + 0x40], 0
0xed80:	mov	edi, 2
0xed85:	cmp	eax, -1
0xed88:	lea	ecx, [rax + 1]
0xed8b:	setl	byte ptr [rsp + 0x38]
0xed90:	cmp	eax, -1
0xed93:	setge	al
0xed96:	xor	esi, esi
0xed98:	jmp	0xdff7


0xed9d:	test	r10d, r10d
0xeda0:	mov	ecx, 0
0xeda5:	mov	eax, 1
0xedaa:	cmovns	ecx, r10d
0xedae:	movsxd	rcx, ecx
0xedb1:	test	rcx, rcx
0xedb4:	cmove	rcx, rax
0xedb8:	mov	rax, qword ptr [rsp + 8]
0xedbd:	sub	rax, r14
0xedc0:	cmp	rax, rcx
0xedc3:	jbe	0xdb4c


0xedc9:	test	rbp, rbp
0xedcc:	je	0xe0b8


0xedd2:	cmp	r10d, 1
0xedd6:	jle	0xee12


0xee12:	mov	byte ptr [rbp], 0xa
0xee16:	add	rbp, 1
0xee1a:	jmp	0xe0b8


0xedd8:	movsxd	rdx, r10d
0xeddb:	mov	qword ptr [rsp + 0x30], rcx
0xede0:	sub	rdx, 1
0xede4:	cmp	r15d, 0x30
0xede8:	lea	r12, [rbp + rdx]
0xeded:	je	0xf3be


0xf3be:	mov	rdi, rbp
0xf3c1:	mov	esi, 0x30
0xf3c6:	mov	rbp, r12
0xf3c9:	call	0x28f0


0xedf3:	cmp	r15d, 0x2b
0xedf7:	je	0xf3be


0xedfd:	mov	rdi, rbp
0xee00:	mov	esi, 0x20
0xee05:	mov	rbp, r12
0xee08:	call	0x28f0


0xee0d:	mov	rcx, qword ptr [rsp + 0x30]
0xee12:	mov	byte ptr [rbp], 0xa
0xee16:	add	rbp, 1
0xee1a:	jmp	0xe0b8


0xf3ce:	mov	rcx, qword ptr [rsp + 0x30]
0xf3d3:	jmp	0xee12


0xee1f:	xor	eax, eax
0xee21:	jmp	0xe0c8


0xe0c8:	test	r8b, r8b
0xe0cb:	jne	0xeffb


0xee26:	cmp	r11d, 0x45
0xee2a:	je	0xdcd0


0xee30:	mov	eax, dword ptr [r13 + 0x1c]
0xee34:	mov	byte ptr [rsp + 0x40], 0
0xee39:	mov	edi, 3
0xee3e:	cmp	eax, -1
0xee41:	lea	ecx, [rax + 1]
0xee44:	setl	byte ptr [rsp + 0x38]
0xee49:	cmp	eax, -1
0xee4c:	setge	al
0xee4f:	xor	esi, esi
0xee51:	jmp	0xdff7


0xee56:	cmp	r11d, 0x45
0xee5a:	je	0xdcd0


0xee60:	mov	ecx, dword ptr [r13 + 8]
0xee64:	jmp	0xed54


0xed54:	test	r15d, r15d
0xed57:	mov	edi, 2
0xed5c:	jne	0xdfe0


0xee69:	cmp	r11d, 0x45
0xee6d:	je	0xdcd0


0xee73:	mov	ecx, dword ptr [r13 + 0xc]
0xee77:	jmp	0xed54


0xf532:	nop	dword ptr [rax]
0xf536:	nop	word ptr cs:[rax + rax]


0xf58e:	nop	


0xf594:	nop	word ptr cs:[rax + rax]
0xf59e:	nop	


0x106bf:	nop	


0x108be:	nop	


0x10b07:	mov	r11d, 0x10
0x10b0d:	mov	ebx, 0x73
0x10b12:	nop	word ptr [rax + rax]
0x10b18:	cmp	r13, -1
0x10b1c:	je	0x111d7


0x111d7:	mov	rsi, qword ptr [rsp + 0x20]
0x111dc:	cmp	rsi, -1
0x111e0:	lea	rax, [rsi + 1]
0x111e4:	mov	qword ptr [r12 + 0x50], rsi
0x111e9:	je	0x1110b


0x10b22:	mov	qword ptr [r12 + 0x50], r13
0x10b27:	cmp	r9, r13
0x10b2a:	mov	rcx, qword ptr [r15 + 8]
0x10b2e:	jbe	0x11150


0x111ef:	mov	r13, qword ptr [rsp + 0x20]
0x111f4:	mov	qword ptr [rsp + 0x20], rax
0x111f9:	jmp	0x10b27


0x11150:	add	r9, r9
0x11153:	lea	rax, [r13 + 1]
0x11157:	cmp	r9, r13
0x1115a:	cmovbe	r9, rax
0x1115e:	movabs	rax, 0x7ffffffffffffff
0x11168:	cmp	r9, rax
0x1116b:	ja	0x1154b


0x10b34:	mov	rax, qword ptr [r15]
0x10b37:	mov	rdx, rax
0x10b3a:	shl	rdx, 5
0x10b3e:	add	rdx, rcx
0x10b41:	cmp	rax, r13
0x10b44:	ja	0x10b66


0x10b27:	cmp	r9, r13
0x10b2a:	mov	rcx, qword ptr [r15 + 8]
0x10b2e:	jbe	0x11150


0x11171:	mov	rsi, r9
0x11174:	mov	qword ptr [rsp + 0x48], r9
0x11179:	mov	qword ptr [rsp + 0x40], r10
0x1117e:	shl	rsi, 5
0x11182:	cmp	qword ptr [rsp + 8], rcx
0x11187:	mov	qword ptr [rsp + 0x38], r8
0x1118c:	mov	dword ptr [rsp + 0x30], r11d
0x11191:	je	0x11231


0x10b66:	shl	r13, 5
0x10b6a:	lea	rax, [rcx + r13]
0x10b6e:	mov	edx, dword ptr [rax]
0x10b70:	test	edx, edx
0x10b72:	jne	0x11143


0x11231:	mov	rdi, rsi
0x11234:	call	0x29e0


0x11197:	mov	rdi, rcx
0x1119a:	call	0x2a40


0x10b50:	add	rax, 1
0x10b54:	mov	dword ptr [rdx], 0
0x10b5a:	add	rdx, 0x20
0x10b5e:	cmp	rax, r13
0x10b61:	jbe	0x10b50


0x10b63:	mov	qword ptr [r15], rax
0x10b66:	shl	r13, 5
0x10b6a:	lea	rax, [rcx + r13]
0x10b6e:	mov	edx, dword ptr [rax]
0x10b70:	test	edx, edx
0x10b72:	jne	0x11143


0x10b78:	mov	dword ptr [rax], r11d
0x10b7b:	mov	byte ptr [r12 + 0x48], bl
0x10b80:	mov	rax, qword ptr [r14]
0x10b83:	mov	qword ptr [r12 + 8], rbp
0x10b88:	lea	rbx, [rax + 1]
0x10b8c:	cmp	r10, rbx
0x10b8f:	mov	qword ptr [r14], rbx
0x10b92:	ja	0x10c20


0x11143:	cmp	edx, r11d
0x11146:	je	0x10b7b


0x10b98:	test	r10, r10
0x10b9b:	js	0x11547


0x10c20:	mov	rcx, qword ptr [r14 + 8]
0x10c24:	jmp	0x10938


0x10b7b:	mov	byte ptr [r12 + 0x48], bl
0x10b80:	mov	rax, qword ptr [r14]
0x10b83:	mov	qword ptr [r12 + 8], rbp
0x10b88:	lea	rbx, [rax + 1]
0x10b8c:	cmp	r10, rbx
0x10b8f:	mov	qword ptr [r14], rbx
0x10b92:	ja	0x10c20


0x1114c:	jmp	0x1110f


0x11547:	mov	rcx, qword ptr [r15 + 8]
0x1154b:	cmp	qword ptr [rsp + 8], rcx
0x11550:	jne	0x113b4


0x10ba1:	add	r10, r10
0x10ba4:	movabs	rax, 0x2e8ba2e8ba2e8ba
0x10bae:	cmp	r10, rax
0x10bb1:	ja	0x11547


0x10bb7:	lea	rax, [r10 + r10*4]
0x10bbb:	mov	rdi, qword ptr [r14 + 8]
0x10bbf:	cmp	qword ptr [rsp + 0x28], rdi
0x10bc4:	mov	qword ptr [rsp + 0x40], r9
0x10bc9:	mov	qword ptr [rsp + 0x38], r10
0x10bce:	lea	rax, [r10 + rax*2]
0x10bd2:	mov	qword ptr [rsp + 0x30], r8
0x10bd7:	lea	rsi, [rax*8]
0x10bdf:	je	0x1129d


0x1129d:	mov	rdi, rsi
0x112a0:	call	0x29e0


0x10be5:	call	0x2a40


0x10bea:	test	rax, rax
0x10bed:	mov	rcx, rax
0x10bf0:	mov	r8, qword ptr [rsp + 0x30]
0x10bf5:	mov	r10, qword ptr [rsp + 0x38]
0x10bfa:	mov	r9, qword ptr [rsp + 0x40]
0x10bff:	je	0x11547


0x10c05:	mov	rax, qword ptr [rsp + 0x28]
0x10c0a:	cmp	rax, qword ptr [r14 + 8]
0x10c0e:	mov	rbx, qword ptr [r14]
0x10c11:	je	0x112c0


0x112c0:	lea	rax, [rbx + rbx*4]
0x112c4:	mov	rsi, qword ptr [rsp + 0x28]
0x112c9:	mov	rdi, rcx
0x112cc:	mov	qword ptr [rsp + 0x40], r9
0x112d1:	mov	qword ptr [rsp + 0x38], r10
0x112d6:	lea	rdx, [rbx + rax*2]
0x112da:	mov	qword ptr [rsp + 0x30], r8
0x112df:	shl	rdx, 3
0x112e3:	call	0x2970


0x10c17:	mov	qword ptr [r14 + 8], rcx
0x10c1b:	jmp	0x10938


0x112e8:	mov	rbx, qword ptr [r14]
0x112eb:	mov	rcx, rax
0x112ee:	mov	r9, qword ptr [rsp + 0x40]
0x112f3:	mov	r10, qword ptr [rsp + 0x38]
0x112f8:	mov	r8, qword ptr [rsp + 0x30]
0x112fd:	jmp	0x10c17


0x1119f:	test	rax, rax
0x111a2:	mov	rcx, rax
0x111a5:	mov	r11d, dword ptr [rsp + 0x30]
0x111aa:	mov	r8, qword ptr [rsp + 0x38]
0x111af:	mov	r10, qword ptr [rsp + 0x40]
0x111b4:	mov	r9, qword ptr [rsp + 0x48]
0x111b9:	je	0x11547


0x111bf:	mov	rax, qword ptr [rsp + 8]
0x111c4:	cmp	rax, qword ptr [r15 + 8]
0x111c8:	je	0x11259


0x11259:	mov	rdx, qword ptr [r15]
0x1125c:	mov	rsi, qword ptr [rsp + 8]
0x11261:	mov	rdi, rcx
0x11264:	mov	qword ptr [rsp + 0x48], r9
0x11269:	mov	qword ptr [rsp + 0x40], r10
0x1126e:	mov	qword ptr [rsp + 0x38], r8
0x11273:	mov	dword ptr [rsp + 0x30], r11d
0x11278:	shl	rdx, 5
0x1127c:	call	0x2970


0x111ce:	mov	qword ptr [r15 + 8], rcx
0x111d2:	jmp	0x10b34


0x11281:	mov	r9, qword ptr [rsp + 0x48]
0x11286:	mov	r10, qword ptr [rsp + 0x40]
0x1128b:	mov	rcx, rax
0x1128e:	mov	r8, qword ptr [rsp + 0x38]
0x11293:	mov	r11d, dword ptr [rsp + 0x30]
0x11298:	jmp	0x111ce


0x112a5:	test	rax, rax
0x112a8:	mov	rcx, rax
0x112ab:	mov	r8, qword ptr [rsp + 0x30]
0x112b0:	mov	r10, qword ptr [rsp + 0x38]
0x112b5:	mov	r9, qword ptr [rsp + 0x40]
0x112ba:	je	0x113a9


0x113a9:	mov	rcx, qword ptr [r15 + 8]
0x113ad:	cmp	qword ptr [rsp + 8], rcx
0x113b2:	je	0x113cc


0x11239:	test	rax, rax
0x1123c:	mov	rcx, rax
0x1123f:	mov	r11d, dword ptr [rsp + 0x30]
0x11244:	mov	r8, qword ptr [rsp + 0x38]
0x11249:	mov	r10, qword ptr [rsp + 0x40]
0x1124e:	mov	r9, qword ptr [rsp + 0x48]
0x11253:	je	0x113bc


0x10fbc:	cmp	eax, 0xf
0x10fbf:	mov	r11d, 0x16
0x10fc5:	jg	0x10b18


0x10fcb:	test	al, 4
0x10fcd:	jne	0x10b18


0x10b18:	cmp	r13, -1
0x10b1c:	je	0x111d7


0x10fd3:	cmp	eax, 7
0x10fd6:	mov	r11d, 0x15
0x10fdc:	jg	0x10b18


0x10fe2:	test	al, 2
0x10fe4:	mov	r11d, 0x12
0x10fea:	jne	0x10b18


0x10ff0:	xor	r11d, r11d
0x10ff3:	test	al, 1
0x10ff5:	sete	r11b
0x10ff9:	add	r11d, 0x13
0x10ffd:	jmp	0x10b18


0x1101b:	cmp	eax, 0xf
0x1101e:	mov	r11d, 9
0x11024:	jg	0x10b18


0x1102a:	test	al, 4
0x1102c:	jne	0x10b18


0x11032:	cmp	eax, 7
0x11035:	mov	r11d, 7
0x1103b:	jg	0x10b18


0x11041:	test	al, 2
0x11043:	mov	r11d, 1
0x11049:	jne	0x10b18


0x1104f:	and	eax, 1
0x11052:	cmp	eax, 1
0x11055:	sbb	r11d, r11d
0x11058:	and	r11d, 2
0x1105c:	add	r11d, 3
0x11060:	jmp	0x10b18


0x1107b:	cmp	eax, 0xf
0x1107e:	mov	r11d, 0xc
0x11084:	jg	0x10b18


0x1108a:	xor	r11d, r11d
0x1108d:	test	al, 4
0x1108f:	setne	r11b
0x11093:	add	r11d, 0xb
0x11097:	jmp	0x10b18


0x1109c:	mov	r11d, 0xe
0x110a2:	mov	ebx, 0x63
0x110a7:	jmp	0x10b18


0x110ac:	cmp	eax, 0xf
0x110af:	mov	r11d, 0xa
0x110b5:	jg	0x10b18


0x110bb:	test	al, 4
0x110bd:	jne	0x10b18


0x110c3:	cmp	eax, 7
0x110c6:	mov	r11d, 8
0x110cc:	jg	0x10b18


0x110d2:	test	al, 2
0x110d4:	mov	r11d, 2
0x110da:	jne	0x10b18


0x110e0:	and	eax, 1
0x110e3:	cmp	eax, 1
0x110e6:	sbb	r11d, r11d
0x110e9:	and	r11d, 2
0x110ed:	add	r11d, 4
0x110f1:	jmp	0x10b18


0x115ac:	nop	dword ptr [rax]


0x11615:	nop	
0x11616:	nop	word ptr cs:[rax + rax]


0x11622:	nop	word ptr cs:[rax + rax]
0x1162c:	nop	dword ptr [rax]


0x45a0:	cmp	r11d, 0x4f
0x45a4:	je	0x4410


0x46d0:	test	r11d, r11d
0x46d3:	jne	0x4410


0x51a8:	cmp	r11d, 0x45
0x51ac:	je	0x4410


0xae70:	xor	r10d, r10d
0xae73:	mov	eax, dword ptr [rsp + 8]
0xae77:	cmp	eax, 2
0xae7a:	je	0xb438


0xaea0:	xor	r10d, r10d
0xaea3:	cmp	dword ptr [rsp + 8], 2
0xaea8:	je	0xb3b0


0xaec8:	mov	edx, 9
0xaecd:	mov	ebx, 0x74
0xaed2:	cmp	dword ptr [rsp + 8], 2
0xaed7:	sete	al
0xaeda:	and	al, byte ptr [rsp + 0xf]
0xaede:	jne	0xb02e


0xaf08:	mov	edx, 8
0xaf0d:	mov	ebx, 0x62
0xaf12:	jmp	0xaee4


0xaf18:	cmp	dword ptr [rsp + 8], 2
0xaf1d:	je	0xb2f0


0xafc0:	cmp	byte ptr [rsp + 0xd], 0
0xafc5:	jne	0xb193


0xafe8:	cmp	dword ptr [rsp + 8], 2
0xafed:	sete	dl
0xaff0:	xor	eax, eax
0xaff2:	jmp	0xadd8


0xb000:	mov	edx, 7
0xb005:	mov	ebx, 0x61
0xb00a:	jmp	0xaee4


0xb010:	cmp	dword ptr [rsp + 8], 2
0xb015:	sete	dl
0xb018:	test	rbp, rbp
0xb01b:	jne	0xadcc


0xb040:	cmp	dword ptr [rsp + 8], 2
0xb045:	sete	dl
0xb048:	xor	r12d, r12d
0xb04b:	jmp	0xb021


0xb050:	cmp	dword ptr [rsp + 8], 2
0xb055:	mov	ebx, 0x20
0xb05a:	sete	dl
0xb05d:	jmp	0xb021


0xb060:	mov	edx, 0xd
0xb065:	mov	ebx, 0x72
0xb06a:	jmp	0xaed2


0xb070:	mov	edx, 0xc
0xb075:	mov	ebx, 0x66
0xb07a:	jmp	0xaee4


0xb080:	mov	edx, 0xb
0xb085:	mov	ebx, 0x76
0xb08a:	jmp	0xaee4


0xb090:	mov	edx, 0xa
0xb095:	mov	ebx, 0x6e
0xb09a:	jmp	0xaed2


0xb130:	xor	r10d, r10d
0xb133:	cmp	byte ptr [rsp + 0xd], 0
0xb138:	jne	0xaf2e


0xb150:	mov	edx, 0xc
0xb155:	xor	r10d, r10d
0xb158:	mov	ebx, 0x66
0xb15d:	jmp	0xaee4


0xb168:	mov	edx, 0xa
0xb16d:	xor	r10d, r10d
0xb170:	mov	ebx, 0x6e
0xb175:	jmp	0xaed2


0xb180:	mov	ebx, 0x61
0xb185:	jmp	0xaf50


0xb190:	xor	r10d, r10d
0xb193:	cmp	dword ptr [rsp + 8], 2
0xb198:	sete	dl
0xb19b:	cmp	byte ptr [rsp + 0xf], 0
0xb1a0:	jne	0xbd3a


0xb230:	cmp	dword ptr [rsp + 8], 2
0xb235:	mov	r12d, r10d
0xb238:	sete	dl
0xb23b:	xor	r10d, r10d
0xb23e:	xor	eax, eax
0xb240:	jmp	0xadd8


0xb248:	cmp	dword ptr [rsp + 8], 2
0xb24d:	sete	dl
0xb250:	xor	r10d, r10d
0xb253:	jmp	0xb018


0xb260:	cmp	dword ptr [rsp + 8], 2
0xb265:	sete	dl
0xb268:	xor	r10d, r10d
0xb26b:	xor	r12d, r12d
0xb26e:	jmp	0xb021


0xb278:	cmp	dword ptr [rsp + 8], 2
0xb27d:	mov	r12d, r10d
0xb280:	mov	ebx, 0x20
0xb285:	sete	dl
0xb288:	xor	r10d, r10d
0xb28b:	jmp	0xb021


0xb2a8:	mov	ebx, 0x76
0xb2ad:	jmp	0xaf50


0xb2b8:	mov	edx, 9
0xb2bd:	xor	r10d, r10d
0xb2c0:	mov	ebx, 0x74
0xb2c5:	jmp	0xaed2


0xb2d0:	mov	ebx, 0x62
0xb2d5:	jmp	0xaf50


0xb870:	test	ebx, ebx
0xb872:	jne	0xbc6d


0xde38:	cmp	r11d, 0x4f
0xde3c:	je	0xdcd0


0xe580:	cmp	r11d, 0x4f
0xe584:	mov	eax, dword ptr [r13 + 0x10]
0xe588:	mov	edi, 1
0xe58d:	je	0xe00c


0x11008:	xor	r11d, r11d
0x1100b:	cmp	eax, 7
0x1100e:	setg	r11b
0x11012:	add	r11d, 0xd
0x11016:	jmp	0x10b18


0x11068:	xor	r11d, r11d
0x1106b:	cmp	eax, 7
0x1106e:	setg	r11b
0x11072:	add	r11d, 0xf
0x11076:	jmp	0x10b18


0x11100:	mov	r11d, 0x11
0x11106:	jmp	0x10b18


0x2d0e:	nop	


0x2d32:	nop	word ptr [rax + rax]


0x2d77:	nop	word ptr [rax + rax]


0x2d91:	nop	dword ptr [rax]


0x2da9:	nop	dword ptr [rax]


0x2dc9:	nop	dword ptr [rax]


0x2de8:	nop	dword ptr [rax + rax]


0x2e2e:	nop	


0x3426:	nop	word ptr cs:[rax + rax]


0x3477:	nop	word ptr [rax + rax]


0x34c1:	nop	dword ptr [rax]


0x358b:	nop	dword ptr [rax + rax]


0x35d1:	nop	dword ptr [rax]


0x3619:	nop	dword ptr [rax]


0x3d36:	nop	word ptr cs:[rax + rax]


0x3dc3:	nop	dword ptr [rax + rax]


0x3df7:	nop	word ptr [rax + rax]


0x3e6d:	nop	dword ptr [rax]


0x3edf:	nop	


0x3f64:	nop	dword ptr [rax]


0x3f93:	nop	dword ptr [rax + rax]


0x403f:	nop	


0x418e:	nop	


0x41ee:	nop	


0x42ee:	nop	


0x43c5:	nop	dword ptr [rax]


0x43d9:	nop	dword ptr [rax]


0x43ed:	nop	dword ptr [rax]


0x43fa:	nop	word ptr [rax + rax]


0x44d6:	nop	word ptr cs:[rax + rax]


0x450b:	nop	dword ptr [rax + rax]


0x451a:	nop	word ptr [rax + rax]


0x455a:	nop	word ptr [rax + rax]


0x4582:	nop	word ptr [rax + rax]


0x4599:	nop	dword ptr [rax]


0x46cd:	nop	dword ptr [rax]


0x4c5f:	nop	


0x51a3:	nop	dword ptr [rax + rax]


0x54f8:	nop	dword ptr [rax + rax]


0x550f:	nop	


0x55e5:	nop	dword ptr [rax]


0x5602:	nop	word ptr [rax + rax]


0x5626:	nop	word ptr cs:[rax + rax]


0x5649:	nop	dword ptr [rax]


0x566a:	nop	word ptr [rax + rax]


0x5aa6:	nop	word ptr cs:[rax + rax]


0x5b5c:	nop	dword ptr [rax]


0x5ef7:	nop	word ptr [rax + rax]


0x5f2a:	nop	word ptr [rax + rax]


0x5fc5:	nop	dword ptr [rax]


0x60c2:	nop	word ptr [rax + rax]


0x61ba:	nop	word ptr [rax + rax]


0x636e:	nop	


0x63ab:	nop	dword ptr [rax + rax]


0x63ba:	nop	word ptr [rax + rax]


0x644a:	nop	word ptr [rax + rax]


0x6485:	nop	dword ptr [rax]


0x6498:	nop	dword ptr [rax + rax]


0x64ba:	nop	word ptr [rax + rax]


0x65a7:	nop	word ptr [rax + rax]


0x6616:	nop	word ptr cs:[rax + rax]


0x66ad:	nop	dword ptr [rax]


0x674f:	nop	


0x6805:	nop	dword ptr [rax]


0x6854:	nop	dword ptr [rax]


0x6a5e:	nop	


0x6aeb:	nop	dword ptr [rax + rax]


0x6b4b:	nop	dword ptr [rax + rax]


0x6bd5:	nop	dword ptr [rax]


0x6bee:	nop	


0x6c4f:	nop	


0x6d17:	nop	word ptr [rax + rax]


0x7041:	nop	dword ptr [rax]


0x7076:	nop	word ptr cs:[rax + rax]


0x7251:	nop	dword ptr [rax]


0x729a:	nop	word ptr [rax + rax]


0x734d:	nop	dword ptr [rax]


0x7366:	nop	word ptr cs:[rax + rax]


0x73af:	nop	


0x7444:	nop	dword ptr [rax]


0x7472:	nop	word ptr [rax + rax]


0x74ac:	nop	dword ptr [rax]


0x74cb:	nop	dword ptr [rax + rax]


0x75be:	nop	


0x7b86:	nop	word ptr cs:[rax + rax]


0x7c1f:	nop	


0x7d1a:	nop	word ptr [rax + rax]


0x7de2:	nop	word ptr [rax + rax]


0x7e1e:	nop	


0x7f28:	nop	dword ptr [rax + rax]


0x7fc6:	nop	word ptr cs:[rax + rax]


0x8277:	nop	word ptr [rax + rax]


0x8323:	nop	dword ptr [rax + rax]


0x83a3:	nop	dword ptr [rax + rax]


0x8714:	nop	dword ptr [rax]


0x8917:	nop	word ptr [rax + rax]


0x896e:	nop	


0x89a1:	nop	dword ptr [rax]


0x8d12:	nop	word ptr [rax + rax]


0x8d64:	nop	dword ptr [rax]


0x8d8c:	nop	dword ptr [rax]


0x8da1:	nop	dword ptr [rax]


0x8dc9:	nop	dword ptr [rax]


0x8e41:	nop	dword ptr [rax]


0x8e85:	nop	dword ptr [rax]


0x8e9e:	nop	


0x8eb2:	nop	word ptr [rax + rax]


0x9155:	nop	dword ptr [rax]


0x916e:	nop	


0x9831:	nop	dword ptr [rax]


0x9854:	nop	dword ptr [rax]


0x9863:	nop	dword ptr [rax + rax]


0x9a91:	nop	dword ptr [rax]


0xa6a4:	nop	dword ptr [rax]


0xa6e1:	nop	dword ptr [rax]


0xa702:	nop	word ptr [rax + rax]


0xa7bd:	nop	dword ptr [rax]


0xa803:	nop	dword ptr [rax + rax]


0xa99e:	nop	


0xa9b6:	nop	word ptr cs:[rax + rax]


0xa9ff:	nop	


0xaafc:	nop	dword ptr [rax]


0xab4d:	nop	dword ptr [rax]


0xad78:	nop	dword ptr [rax + rax]


0xae67:	nop	word ptr [rax + rax]


0xae9e:	nop	


0xaec1:	nop	dword ptr [rax]


0xaf02:	nop	word ptr [rax + rax]


0xaf14:	nop	dword ptr [rax]


0xafb8:	nop	dword ptr [rax + rax]


0xafe1:	nop	dword ptr [rax]


0xaff7:	nop	word ptr [rax + rax]


0xb00f:	nop	


0xb03e:	nop	


0xb04d:	nop	dword ptr [rax]


0xb05f:	nop	


0xb06f:	nop	


0xb07f:	nop	


0xb08f:	nop	


0xb09f:	nop	


0xb10c:	nop	dword ptr [rax]


0xb12c:	nop	dword ptr [rax]


0xb13e:	nop	


0xb14f:	nop	


0xb162:	nop	word ptr [rax + rax]


0xb17a:	nop	word ptr [rax + rax]


0xb18a:	nop	word ptr [rax + rax]


0xb22b:	nop	dword ptr [rax + rax]


0xb245:	nop	dword ptr [rax]


0xb258:	nop	dword ptr [rax + rax]


0xb273:	nop	dword ptr [rax + rax]


0xb2a2:	nop	word ptr [rax + rax]


0xb2b2:	nop	word ptr [rax + rax]


0xb2ca:	nop	word ptr [rax + rax]


0xb2da:	nop	word ptr [rax + rax]


0xb2e8:	nop	dword ptr [rax + rax]


0xb30f:	nop	


0xb3a9:	nop	dword ptr [rax]


0xb3f2:	nop	word ptr [rax + rax]


0xb418:	nop	dword ptr [rax + rax]


0xb431:	nop	dword ptr [rax]


0xb452:	nop	word ptr [rax + rax]


0xb5b8:	nop	dword ptr [rax + rax]


0xb6cb:	nop	dword ptr [rax + rax]


0xb6ee:	nop	


0xb7b5:	nop	dword ptr [rax]


0xb86d:	nop	dword ptr [rax]


0xba76:	nop	word ptr cs:[rax + rax]


0xbb09:	nop	dword ptr [rax]


0xbb7d:	nop	dword ptr [rax]


0xbc5d:	nop	dword ptr [rax]


0xbf6b:	nop	dword ptr [rax + rax]


0xc886:	nop	word ptr cs:[rax + rax]


0xc915:	nop	dword ptr [rax]


0xc936:	nop	word ptr cs:[rax + rax]


0xc995:	nop	dword ptr [rax]


0xc9d1:	nop	dword ptr [rax]


0xca18:	nop	dword ptr [rax + rax]


0xca67:	nop	word ptr [rax + rax]


0xcac4:	nop	dword ptr [rax]


0xcaf2:	nop	word ptr [rax + rax]


0xcba6:	nop	word ptr cs:[rax + rax]


0xcc09:	nop	dword ptr [rax]


0xce82:	nop	word ptr [rax + rax]


0xcf09:	nop	dword ptr [rax]


0xcf34:	nop	dword ptr [rax]


0xcf8d:	nop	dword ptr [rax]


0xd0d5:	nop	dword ptr [rax]


0xd133:	nop	dword ptr [rax + rax]


0xd15f:	nop	


0xd259:	nop	dword ptr [rax]


0xd292:	nop	word ptr [rax + rax]


0xd2ec:	nop	dword ptr [rax]


0xd363:	nop	dword ptr [rax + rax]


0xd3cf:	nop	


0xd429:	nop	dword ptr [rax]


0xd44f:	nop	


0xd499:	nop	dword ptr [rax]


0xd4af:	nop	


0xd559:	nop	dword ptr [rax]


0xd582:	nop	word ptr [rax + rax]


0xd5a4:	nop	dword ptr [rax]


0xd618:	nop	dword ptr [rax + rax]


0xd63b:	nop	dword ptr [rax + rax]


0xd70b:	nop	dword ptr [rax + rax]


0xd788:	nop	dword ptr [rax + rax]


0xd79d:	nop	dword ptr [rax]


0xd869:	nop	dword ptr [rax]


0xd8f4:	nop	dword ptr [rax]


0xd911:	nop	dword ptr [rax]


0xd922:	nop	word ptr [rax + rax]


0xd97a:	nop	word ptr [rax + rax]


0xd9c6:	nop	word ptr cs:[rax + rax]


0xd9f8:	nop	dword ptr [rax + rax]


0xda48:	nop	dword ptr [rax + rax]


0xdb7b:	nop	dword ptr [rax + rax]


0xdbea:	nop	word ptr [rax + rax]


0xdc01:	nop	dword ptr [rax]


0xdc91:	nop	dword ptr [rax]


0xdca9:	nop	dword ptr [rax]


0xdcb8:	nop	dword ptr [rax + rax]


0xddad:	nop	dword ptr [rax]


0xddba:	nop	word ptr [rax + rax]


0xddf7:	nop	word ptr [rax + rax]


0xde31:	nop	dword ptr [rax]


0xe579:	nop	dword ptr [rax]


0xee7c:	nop	dword ptr [rax]


0xee91:	nop	dword ptr [rax]


0xef5c:	nop	dword ptr [rax]


0xef74:	nop	dword ptr [rax]


0xf7a4:	nop	dword ptr [rax]


0xf7d3:	nop	dword ptr [rax + rax]


0xfafd:	nop	dword ptr [rax]


0xfc32:	nop	word ptr [rax + rax]


0xfd5f:	nop	


0xfde2:	nop	word ptr [rax + rax]


0xfe63:	nop	dword ptr [rax + rax]


0xfe8f:	nop	


0xfea4:	nop	dword ptr [rax]


0xfed4:	nop	dword ptr [rax]


0xff26:	nop	word ptr cs:[rax + rax]


0xff5c:	nop	dword ptr [rax]


0xff8c:	nop	dword ptr [rax]


0xffcb:	nop	dword ptr [rax + rax]


0xffe1:	nop	dword ptr [rax]


0xfff5:	nop	dword ptr [rax]


0x10001:	nop	dword ptr [rax]


0x10059:	nop	dword ptr [rax]


0x10079:	nop	dword ptr [rax]


0x100a2:	nop	word ptr [rax + rax]


0x100fd:	nop	dword ptr [rax]


0x1010f:	nop	


0x10142:	nop	word ptr [rax + rax]


0x101c8:	nop	dword ptr [rax + rax]


0x101d8:	nop	dword ptr [rax + rax]


0x1020d:	nop	dword ptr [rax]


0x1024a:	nop	word ptr [rax + rax]


0x10263:	nop	dword ptr [rax + rax]


0x1027a:	nop	word ptr [rax + rax]


0x102a9:	nop	dword ptr [rax]


0x102f8:	nop	dword ptr [rax + rax]


0x1030c:	nop	dword ptr [rax]


0x1031b:	nop	dword ptr [rax + rax]


0x1032b:	nop	dword ptr [rax + rax]


0x1033c:	nop	dword ptr [rax]


0x10388:	nop	dword ptr [rax + rax]


0x10398:	nop	dword ptr [rax + rax]


0x103af:	nop	


0x103c6:	nop	word ptr cs:[rax + rax]


0x103ea:	nop	word ptr [rax + rax]


0x10463:	nop	dword ptr [rax + rax]


0x10478:	nop	dword ptr [rax + rax]


0x104cb:	nop	dword ptr [rax + rax]


0x1067d:	nop	dword ptr [rax]


0x106f8:	nop	dword ptr [rax + rax]


0x1092e:	nop	


0x10971:	nop	dword ptr [rax]


0x109d7:	nop	word ptr [rax + rax]


0x10a22:	nop	word ptr [rax + rax]


0x10a38:	nop	dword ptr [rax + rax]


0x10a48:	nop	dword ptr [rax + rax]


0x10a58:	nop	dword ptr [rax + rax]


0x10a68:	nop	dword ptr [rax + rax]


0x10a97:	nop	word ptr [rax + rax]


0x10abe:	nop	


0x10add:	nop	dword ptr [rax]


0x10ae5:	nop	dword ptr [rax]


0x10b46:	nop	word ptr cs:[rax + rax]


0x10d16:	nop	word ptr cs:[rax + rax]


0x10dcc:	nop	dword ptr [rax]


0x10ead:	nop	dword ptr [rax]


0x10ef9:	nop	dword ptr [rax]


0x11002:	nop	word ptr [rax + rax]


0x11065:	nop	dword ptr [rax]


0x110f6:	nop	word ptr cs:[rax + rax]


0x1114e:	nop	


0x1155b:	nop	dword ptr [rax + rax]


