0x1aee0:	sub	rsp, 8
0x1aee4:	add	rsp, 8
0x1aee8:	ret	


0x1aed0:	mov	rdx, qword ptr [rip + 0x206131]
0x1aed7:	xor	esi, esi
0x1aed9:	jmp	0x2060


0x1aec0:	ret	


0x1ae50:	push	r15
0x1ae52:	push	r14
0x1ae54:	mov	r15, rdx
0x1ae57:	push	r13
0x1ae59:	push	r12
0x1ae5b:	lea	r12, [rip + 0x205a0e]
0x1ae62:	push	rbp
0x1ae63:	lea	rbp, [rip + 0x205a0e]
0x1ae6a:	push	rbx
0x1ae6b:	mov	r13d, edi
0x1ae6e:	mov	r14, rsi
0x1ae71:	sub	rbp, r12
0x1ae74:	sub	rsp, 8
0x1ae78:	sar	rbp, 3
0x1ae7c:	call	0x1c28


0x1ac20:	push	r14
0x1ac22:	push	r13
0x1ac24:	push	r12
0x1ac26:	push	rbp
0x1ac27:	push	rbx
0x1ac28:	mov	rbx, rdi
0x1ac2b:	sub	rsp, 0x50
0x1ac2f:	mov	rax, qword ptr fs:[0x28]
0x1ac38:	mov	qword ptr [rsp + 0x48], rax
0x1ac3d:	xor	eax, eax
0x1ac3f:	call	0x1d90


0x1abf0:	test	dil, 0xf
0x1abf4:	jne	0x1ac0c


0x1abb0:	add	rdi, 0x20
0x1abb4:	jb	0x1abe3


0x1aac0:	push	r13
0x1aac2:	push	r12
0x1aac4:	push	rbp
0x1aac5:	push	rbx
0x1aac6:	mov	rbx, rdi
0x1aac9:	sub	rsp, 8
0x1aacd:	cmp	byte ptr [rdi], 0
0x1aad0:	je	0x1aae7


0x1a870:	push	r15
0x1a872:	push	r14
0x1a874:	push	r13
0x1a876:	push	r12
0x1a878:	mov	r12, rsi
0x1a87b:	push	rbp
0x1a87c:	push	rbx
0x1a87d:	sub	rsp, 0x58
0x1a881:	mov	rax, qword ptr fs:[0x28]
0x1a88a:	mov	qword ptr [rsp + 0x48], rax
0x1a88f:	xor	eax, eax
0x1a891:	mov	qword ptr [rsp + 0x28], rdi
0x1a896:	call	0x1da0


0x1a5b0:	push	r15
0x1a5b2:	push	r14
0x1a5b4:	mov	r15, rdi
0x1a5b7:	push	r13
0x1a5b9:	push	r12
0x1a5bb:	mov	r13, rsi
0x1a5be:	push	rbp
0x1a5bf:	push	rbx
0x1a5c0:	mov	rbx, rdx
0x1a5c3:	xor	esi, esi
0x1a5c5:	xor	edx, edx
0x1a5c7:	sub	rsp, 0x1068
0x1a5ce:	mov	qword ptr [rsp + 0x28], rdi
0x1a5d3:	mov	qword ptr [rsp + 0x18], rcx
0x1a5d8:	mov	rdi, rbx
0x1a5db:	mov	qword ptr [rsp + 0x10], r8
0x1a5e0:	xor	ecx, ecx
0x1a5e2:	xor	r8d, r8d
0x1a5e5:	mov	rax, qword ptr fs:[0x28]
0x1a5ee:	mov	qword ptr [rsp + 0x1058], rax
0x1a5f6:	xor	eax, eax
0x1a5f8:	call	0x1cd0


0x194a0:	push	r15
0x194a2:	push	r14
0x194a4:	push	r13
0x194a6:	push	r12
0x194a8:	mov	r12, rdi
0x194ab:	push	rbp
0x194ac:	push	rbx
0x194ad:	mov	rbx, rsi
0x194b0:	sub	rsp, 0x198
0x194b7:	mov	rax, qword ptr fs:[0x28]
0x194c0:	mov	qword ptr [rsp + 0x188], rax
0x194c8:	xor	eax, eax
0x194ca:	mov	qword ptr [rsp + 8], rsi
0x194cf:	call	0x1d90


0x18a20:	push	rbp
0x18a21:	mov	rbp, rsp
0x18a24:	push	r15
0x18a26:	push	r14
0x18a28:	push	r13
0x18a2a:	push	r12
0x18a2c:	push	rbx
0x18a2d:	mov	rbx, rsi
0x18a30:	sub	rsp, 0x108
0x18a37:	mov	qword ptr [rbp - 0x118], rdi
0x18a3e:	mov	rdi, rsi
0x18a41:	mov	qword ptr [rbp - 0x128], rdx
0x18a48:	mov	rax, qword ptr fs:[0x28]
0x18a51:	mov	qword ptr [rbp - 0x38], rax
0x18a55:	xor	eax, eax
0x18a57:	call	0x1ac20


0x18870:	push	rbp
0x18871:	mov	rbp, rsp
0x18874:	push	r12
0x18876:	push	rbx
0x18877:	mov	r12, rdx
0x1887a:	mov	edx, 8
0x1887f:	mov	rbx, rdi
0x18882:	sub	rsp, 0x20
0x18886:	mov	rax, qword ptr fs:[0x28]
0x1888f:	mov	qword ptr [rbp - 0x18], rax
0x18893:	xor	eax, eax
0x18895:	mov	rax, rdx
0x18898:	mul	r12
0x1889b:	jo	0x18a0d


0x18850:	mov	eax, edi
0x18852:	lea	rdx, [rip + 0x4707]
0x18859:	mov	ecx, edi
0x1885b:	shr	al, 5
0x1885e:	and	ecx, 0x1f
0x18861:	and	eax, 7
0x18864:	mov	eax, dword ptr [rdx + rax*4]
0x18867:	shr	eax, cl
0x18869:	and	eax, 1
0x1886c:	ret	


0x187f0:	push	rbp
0x187f1:	push	rbx
0x187f2:	mov	rbx, rsi
0x187f5:	lea	rax, [rbx + 0x18]
0x187f9:	mov	rbp, rdi
0x187fc:	sub	rsp, 8
0x18800:	mov	rsi, qword ptr [rsi]
0x18803:	mov	rdx, qword ptr [rbx + 8]
0x18807:	cmp	rsi, rax
0x1880a:	je	0x18830


0x187c0:	push	rbx
0x187c1:	mov	ebx, edi
0x187c3:	call	0x1f00


0x18780:	sub	rsp, 8
0x18784:	mov	edi, 0xe
0x18789:	call	0x1f50


0x18720:	sub	rsp, 8
0x18724:	xor	esi, esi
0x18726:	call	0x1fa0


0x186a0:	push	r12
0x186a2:	push	rbp
0x186a3:	mov	rbp, rdi
0x186a6:	push	rbx
0x186a7:	call	0x1cc0


0x18650:	xor	eax, eax
0x18652:	cmp	rdi, rsi
0x18655:	jne	0x1866c


0x18600:	test	rdx, rdx
0x18603:	jne	0x18628


0x185e0:	sub	rsp, 8
0x185e4:	push	0
0x185e6:	push	qword ptr [rsp + 0x28]
0x185ea:	push	qword ptr [rsp + 0x28]
0x185ee:	push	qword ptr [rsp + 0x28]
0x185f2:	call	0x181d0


0x185c0:	sub	rsp, 8
0x185c4:	push	1
0x185c6:	push	qword ptr [rsp + 0x20]
0x185ca:	push	qword ptr [rsp + 0x20]
0x185ce:	push	0
0x185d0:	call	0x181d0


0x185a0:	sub	rsp, 8
0x185a4:	push	0
0x185a6:	push	r9
0x185a8:	mov	r9, rdx
0x185ab:	call	0x17d50


0x18580:	sub	rsp, 8
0x18584:	mov	r9, rdx
0x18587:	push	1
0x18589:	push	r8
0x1858b:	xor	r8d, r8d
0x1858e:	call	0x17d50


0x184e0:	test	r8d, 0xfffffff8
0x184e7:	jne	0x18578


0x18490:	push	rbx
0x18491:	mov	rbx, rdi
0x18494:	mov	rdi, qword ptr [rdi]
0x18497:	test	rdi, rdi
0x1849a:	je	0x184a1


0x18400:	push	r13
0x18402:	push	r12
0x18404:	push	rbp
0x18405:	push	rbx
0x18406:	sub	rsp, 8
0x1840a:	cmp	edi, 0x10
0x1840d:	ja	0x18470


0x182f0:	mov	eax, edx
0x182f2:	push	r14
0x182f4:	push	r13
0x182f6:	and	eax, 1
0x182f9:	push	r12
0x182fb:	push	rbp
0x182fc:	cmp	eax, 1
0x182ff:	push	rbx
0x18300:	mov	rbx, rdi
0x18303:	sbb	r14, r14
0x18306:	mov	qword ptr [rdi], 0
0x1830d:	mov	qword ptr [rdi + 8], 0
0x18315:	and	r14d, 0xfd4fca
0x1831c:	mov	qword ptr [rdi + 0x10], 0
0x18324:	mov	edi, 0x100
0x18329:	mov	r12, rsi
0x1832c:	mov	ebp, edx
0x1832e:	add	r14, 0x3b2fc
0x18335:	call	0x1f20


0x181d0:	push	r15
0x181d2:	push	r14
0x181d4:	push	r13
0x181d6:	push	r12
0x181d8:	mov	r12, rdi
0x181db:	push	rbp
0x181dc:	push	rbx
0x181dd:	mov	rbp, r8
0x181e0:	mov	rbx, rdx
0x181e3:	mov	rdx, rbp
0x181e6:	sub	rsp, 0x28
0x181ea:	shr	rdx, 0x3f
0x181ee:	mov	rax, qword ptr [rsp + 0x70]
0x181f3:	mov	edi, edx
0x181f5:	mov	r8d, dword ptr [rsp + 0x78]
0x181fa:	shr	rax, 0x3f
0x181fe:	or	dil, al
0x18201:	jne	0x182d0


0x17d50:	push	r15
0x17d52:	push	r14
0x17d54:	mov	rax, r8
0x17d57:	push	r13
0x17d59:	push	r12
0x17d5b:	add	r8, rcx
0x17d5e:	push	rbp
0x17d5f:	push	rbx
0x17d60:	sub	rsp, 0x38
0x17d64:	test	rcx, rcx
0x17d67:	mov	ebx, dword ptr [rsp + 0x78]
0x17d6b:	mov	r12, qword ptr [rsp + 0x70]
0x17d70:	mov	dword ptr [rsp + 0x28], ebx
0x17d74:	js	0x180b0


0x17c80:	push	r12
0x17c82:	push	rbp
0x17c83:	xor	eax, eax
0x17c85:	push	rbx
0x17c86:	mov	rbp, qword ptr [rdi + 0x20]
0x17c8a:	mov	rbx, rdi
0x17c8d:	mov	r12, qword ptr [rdi]
0x17c90:	lea	rdi, [rbp + 8]
0x17c94:	mov	rcx, rbp
0x17c97:	mov	qword ptr [rbp], 0
0x17c9f:	mov	qword ptr [rbp + 0xf8], 0
0x17caa:	and	rdi, 0xfffffffffffffff8
0x17cae:	sub	rcx, rdi
0x17cb1:	add	ecx, 0x100
0x17cb7:	shr	ecx, 3
0x17cba:	rep stosq	qword ptr [rdi], rax


0x17c70:	mov	rax, qword ptr [rip + 0x209d81]
0x17c77:	mov	qword ptr [rip + 0x209d7a], rdi
0x17c7e:	ret	


0x17c00:	sub	rsp, 8
0x17c04:	mov	rcx, qword ptr [rip + 0x209ded]
0x17c0b:	mov	r8, rdi
0x17c0e:	mov	rdi, rdx
0x17c11:	mov	rax, rcx
0x17c14:	shr	rax, 0x19
0x17c18:	and	eax, 1
0x17c1b:	shl	eax, 4
0x17c1e:	mov	edx, eax
0x17c20:	movzx	eax, byte ptr [rdi + 0x38]
0x17c24:	and	eax, 0xffffffef
0x17c27:	or	eax, edx
0x17c29:	mov	rdx, rsi
0x17c2c:	mov	rsi, r8
0x17c2f:	or	eax, 0xffffff80
0x17c32:	mov	byte ptr [rdi + 0x38], al
0x17c35:	call	0x16b00


0x16b00:	push	r15
0x16b02:	push	r14
0x16b04:	push	r13
0x16b06:	push	r12
0x16b08:	push	rbp
0x16b09:	push	rbx
0x16b0a:	sub	rsp, 0x128
0x16b11:	mov	qword ptr [rdi + 0x18], rcx
0x16b15:	mov	qword ptr [rdi + 0x10], 0
0x16b1d:	mov	rax, qword ptr fs:[0x28]
0x16b26:	mov	qword ptr [rsp + 0x118], rax
0x16b2e:	xor	eax, eax
0x16b30:	movzx	eax, byte ptr [rdi + 0x38]
0x16b34:	mov	qword ptr [rsp + 8], rdi
0x16b39:	mov	qword ptr [rsp + 0x10], rsi
0x16b3e:	mov	qword ptr [rsp], rdx
0x16b42:	mov	qword ptr [rsp + 0x18], rcx
0x16b47:	mov	dword ptr [rsp + 0x4c], 0
0x16b4f:	mov	qword ptr [rdi + 0x30], 0
0x16b57:	mov	rbx, qword ptr [rdi]
0x16b5a:	mov	byte ptr [rsp + 0x20], al
0x16b5e:	and	eax, 0xffffff90
0x16b61:	cmp	qword ptr [rdi + 8], 0xe7
0x16b69:	mov	byte ptr [rdi + 0x38], al
0x16b6c:	jbe	0x17966


0x16980:	push	r15
0x16982:	push	r14
0x16984:	mov	r14, rcx
0x16987:	push	r13
0x16989:	push	r12
0x1698b:	mov	r13, r9
0x1698e:	push	rbp
0x1698f:	push	rbx
0x16990:	mov	rbp, rdx
0x16993:	mov	r12, rdi
0x16996:	sub	rsp, 0x58
0x1699a:	mov	rbx, qword ptr [rsi]
0x1699d:	mov	rax, qword ptr fs:[0x28]
0x169a6:	mov	qword ptr [rsp + 0x48], rax
0x169ab:	xor	eax, eax
0x169ad:	mov	qword ptr [rsp + 0x28], rsi
0x169b2:	mov	qword ptr [rsp + 0x10], r8
0x169b7:	mov	rax, qword ptr [rbx + 0xa8]
0x169be:	mov	qword ptr [rsp + 0x20], rax
0x169c3:	call	0x167f0


0x167f0:	push	r15
0x167f2:	push	r14
0x167f4:	mov	r15, rcx
0x167f7:	push	r13
0x167f9:	push	r12
0x167fb:	mov	r13, rsi
0x167fe:	push	rbp
0x167ff:	push	rbx
0x16800:	mov	rbx, r9
0x16803:	mov	rbp, rdx
0x16806:	mov	r12, r8
0x16809:	sub	rsp, 0x48
0x1680d:	mov	rax, qword ptr fs:[0x28]
0x16816:	mov	qword ptr [rsp + 0x38], rax
0x1681b:	xor	eax, eax
0x1681d:	mov	rax, qword ptr [rsi]
0x16820:	mov	qword ptr [rsp], rdi
0x16824:	mov	qword ptr [rsp + 0x10], rax
0x16829:	call	0x15310


0x15310:	push	r15
0x15312:	push	r14
0x15314:	push	r13
0x15316:	push	r12
0x15318:	push	rbp
0x15319:	push	rbx
0x1531a:	sub	rsp, 0x128
0x15321:	mov	qword ptr [rsp + 0x20], rcx
0x15326:	movzx	ecx, byte ptr [rdx + 8]
0x1532a:	mov	rax, qword ptr fs:[0x28]
0x15333:	mov	qword ptr [rsp + 0x118], rax
0x1533b:	xor	eax, eax
0x1533d:	mov	rax, qword ptr [rsi]
0x15340:	mov	qword ptr [rsp + 0x18], rdx
0x15345:	mov	qword ptr [rsp + 0x40], r9
0x1534a:	cmp	cl, 0x24
0x1534d:	mov	qword ptr [rsp + 0x10], rax
0x15352:	ja	0x15410


0x15250:	push	r14
0x15252:	mov	r14, rdi
0x15255:	push	r13
0x15257:	mov	r13, rsi
0x1525a:	push	r12
0x1525c:	mov	r12, -2
0x15263:	push	rbp
0x15264:	mov	rbp, rdx
0x15267:	push	rbx
0x15268:	mov	rbx, -1
0x1526f:	nop	
0x15270:	mov	rdx, rbp
0x15273:	mov	rsi, r14
0x15276:	mov	rdi, r13
0x15279:	call	0x14b50


0x14b50:	push	r15
0x14b52:	push	r14
0x14b54:	push	r13
0x14b56:	push	r12
0x14b58:	push	rbp
0x14b59:	push	rbx
0x14b5a:	mov	rbp, rdi
0x14b5d:	sub	rsp, 0x38
0x14b61:	mov	r14, qword ptr [rsi + 0x48]
0x14b65:	mov	rax, qword ptr fs:[0x28]
0x14b6e:	mov	qword ptr [rsp + 0x28], rax
0x14b73:	xor	eax, eax
0x14b75:	cmp	qword ptr [rsi + 0x68], r14
0x14b79:	jle	0x14c10


0x148f0:	push	r14
0x148f2:	push	r13
0x148f4:	mov	r10, rsi
0x148f7:	push	r12
0x148f9:	push	rbp
0x148fa:	movsxd	r11, ecx
0x148fd:	push	rbx
0x148fe:	mov	rbp, rdx
0x14901:	mov	rbx, rdi
0x14904:	sub	rsp, 0x20
0x14908:	mov	r12, qword ptr [rsi + 0x48]
0x1490c:	mov	rax, qword ptr fs:[0x28]
0x14915:	mov	qword ptr [rsp + 0x18], rax
0x1491a:	xor	eax, eax
0x1491c:	cmp	dword ptr [rsi + 0x90], 1
0x14923:	je	0x14978


0x140a0:	push	r15
0x140a2:	push	r14
0x140a4:	mov	rax, rdi
0x140a7:	push	r13
0x140a9:	push	r12
0x140ab:	mov	r13, rsi
0x140ae:	push	rbp
0x140af:	push	rbx
0x140b0:	mov	rbp, rdx
0x140b3:	mov	rbx, rcx
0x140b6:	lea	rcx, [rdx*8]
0x140be:	sub	rsp, 0xa8
0x140c5:	mov	r12, qword ptr [rax + 0x98]
0x140cc:	mov	rax, qword ptr [rax + 0xb8]
0x140d3:	mov	qword ptr [rsp + 8], rdi
0x140d8:	mov	qword ptr [rsp + 0x18], rcx
0x140dd:	mov	rdi, qword ptr fs:[0x28]
0x140e6:	mov	qword ptr [rsp + 0x98], rdi
0x140ee:	xor	edi, edi
0x140f0:	mov	rdx, qword ptr [rax + rdx*8]
0x140f4:	mov	dword ptr [rsp + 0x5c], 0
0x140fc:	mov	rcx, qword ptr [rbx + 8]
0x14100:	test	rdx, rdx
0x14103:	je	0x14358


0x12970:	push	r15
0x12972:	push	r14
0x12974:	push	r13
0x12976:	push	r12
0x12978:	mov	r13, r9
0x1297b:	push	rbp
0x1297c:	push	rbx
0x1297d:	mov	rbp, rcx
0x12980:	mov	ecx, 0x20
0x12985:	mov	r12, r8
0x12988:	sub	rsp, 0x238
0x1298f:	mov	rbx, qword ptr [rdi]
0x12992:	mov	rax, qword ptr [rsp + 0x278]
0x1299a:	mov	qword ptr [rsp + 0x48], rdi
0x1299f:	mov	qword ptr [rsp + 0x78], rsi
0x129a4:	mov	rsi, rdi
0x129a7:	lea	rdi, [rsp + 0x120]
0x129af:	mov	qword ptr [rsp + 0x88], rdx
0x129b7:	mov	qword ptr [rsp + 0x38], rbx
0x129bc:	mov	qword ptr [rsp + 0xb8], rax
0x129c4:	mov	qword ptr [rsp], rdi
0x129c8:	mov	rax, qword ptr fs:[0x28]
0x129d1:	mov	qword ptr [rsp + 0x228], rax
0x129d9:	xor	eax, eax
0x129db:	rep stosq	qword ptr [rdi], rax


0x12630:	push	r15
0x12632:	push	r14
0x12634:	mov	r14, rdi
0x12637:	push	r13
0x12639:	push	r12
0x1263b:	mov	r13, rsi
0x1263e:	push	rbp
0x1263f:	push	rbx
0x12640:	sub	rsp, 0x68
0x12644:	mov	r15, qword ptr [rsi + 0x18]
0x12648:	mov	rbx, qword ptr [rsi + 0x10]
0x1264c:	mov	qword ptr [rsp], rdi
0x12650:	mov	edi, 8
0x12655:	mov	qword ptr [rsp + 0x40], 1
0x1265e:	mov	rax, qword ptr fs:[0x28]
0x12667:	mov	qword ptr [rsp + 0x58], rax
0x1266c:	xor	eax, eax
0x1266e:	mov	qword ptr [rsp + 0x48], 1
0x12677:	call	0x1f20


0x12440:	push	r15
0x12442:	push	r14
0x12444:	push	r13
0x12446:	push	r12
0x12448:	mov	r13, rdi
0x1244b:	push	rbp
0x1244c:	push	rbx
0x1244d:	mov	rbx, rsi
0x12450:	sub	rsp, 0x38
0x12454:	mov	r12, qword ptr [rsi + 0x48]
0x12458:	mov	r14, qword ptr [rsi + 0xb8]
0x1245f:	mov	rax, qword ptr fs:[0x28]
0x12468:	mov	qword ptr [rsp + 0x28], rax
0x1246d:	xor	eax, eax
0x1246f:	mov	r15, qword ptr [rsi + 0x98]
0x12476:	lea	rbp, [r12*8]
0x1247e:	add	r14, rbp
0x12481:	cmp	qword ptr [rsi + 0xc0], r12
0x12488:	jge	0x124d0


0x11b50:	push	r15
0x11b52:	push	r14
0x11b54:	push	r13
0x11b56:	push	r12
0x11b58:	push	rbp
0x11b59:	push	rbx
0x11b5a:	sub	rsp, 0xb8
0x11b61:	mov	r15, qword ptr [rdi + 0x48]
0x11b65:	mov	rax, qword ptr fs:[0x28]
0x11b6e:	mov	qword ptr [rsp + 0xa8], rax
0x11b76:	xor	eax, eax
0x11b78:	cmp	qword ptr [rsi], 0
0x11b7c:	mov	rax, qword ptr [rdi + 0x98]
0x11b83:	mov	qword ptr [rsp + 0x48], rsi
0x11b88:	mov	qword ptr [rsp + 0x40], rdx
0x11b8d:	mov	qword ptr [rsp + 0x38], rax
0x11b92:	jle	0x11ec0


0x119b0:	push	r15
0x119b2:	push	r14
0x119b4:	mov	r14, rcx
0x119b7:	push	r13
0x119b9:	push	r12
0x119bb:	mov	r13, rsi
0x119be:	push	rbp
0x119bf:	push	rbx
0x119c0:	lea	rsi, [rdx + 0x10]
0x119c4:	mov	rbp, rdx
0x119c7:	mov	r9, r8
0x119ca:	mov	r12, r8
0x119cd:	sub	rsp, 0x20
0x119d1:	mov	rcx, qword ptr [rdx + 8]
0x119d5:	mov	r8, r14
0x119d8:	push	8
0x119da:	mov	rdx, qword ptr [rdx]
0x119dd:	mov	rbx, rdi
0x119e0:	call	0x10960


0x110c0:	push	rbp
0x110c1:	mov	rbp, rsp
0x110c4:	push	r15
0x110c6:	push	r14
0x110c8:	push	r13
0x110ca:	push	r12
0x110cc:	mov	r13, rcx
0x110cf:	push	rbx
0x110d0:	mov	r12, rsi
0x110d3:	sub	rsp, 0xb8
0x110da:	mov	qword ptr [rbp - 0x98], rdx
0x110e1:	mov	qword ptr [rbp - 0x50], 0
0x110e9:	mov	rax, qword ptr fs:[0x28]
0x110f2:	mov	qword ptr [rbp - 0x38], rax
0x110f6:	xor	eax, eax
0x110f8:	mov	rax, qword ptr [rdi]
0x110fb:	test	r8b, r8b
0x110fe:	mov	qword ptr [rbp - 0x48], 2
0x11106:	mov	qword ptr [rbp - 0x40], 0
0x1110e:	mov	qword ptr [rbp - 0x90], rax
0x11115:	je	0x118bd


0x10960:	push	r15
0x10962:	push	r14
0x10964:	mov	r15, rdi
0x10967:	push	r13
0x10969:	push	r12
0x1096b:	push	rbp
0x1096c:	push	rbx
0x1096d:	mov	rbp, rcx
0x10970:	mov	rbx, rdx
0x10973:	sub	rsp, 0xd8
0x1097a:	mov	rcx, qword ptr [rdi + 0x98]
0x10981:	mov	r13, qword ptr [rsi + 8]
0x10985:	mov	rax, qword ptr fs:[0x28]
0x1098e:	mov	qword ptr [rsp + 0xc8], rax
0x10996:	xor	eax, eax
0x10998:	mov	rax, rdx
0x1099b:	mov	qword ptr [rsp + 0x60], rsi
0x109a0:	mov	qword ptr [rsp + 0x78], r8
0x109a5:	shl	rax, 4
0x109a9:	add	rax, qword ptr [rcx]
0x109ac:	mov	qword ptr [rsp + 0x40], r9
0x109b1:	mov	qword ptr [rsp + 0x30], rcx
0x109b6:	mov	dword ptr [rsp + 0x88], 0
0x109c1:	mov	rax, qword ptr [rax]
0x109c4:	mov	qword ptr [rsp + 0x48], rax
0x109c9:	movsxd	rax, dword ptr [rdi + 0xe0]
0x109d0:	add	rax, r9
0x109d3:	cmp	rax, r13
0x109d6:	jge	0x10ff6


0x10700:	shl	rdx, 4
0x10704:	push	r13
0x10706:	push	r12
0x10708:	lea	r9, [rdi + rdx]
0x1070c:	push	rbp
0x1070d:	push	rbx
0x1070e:	sub	rsp, 8
0x10712:	movzx	r11d, byte ptr [r9 + 8]
0x10717:	cmp	r11b, 7
0x1071b:	je	0x10830


0x101d0:	push	r15
0x101d2:	push	r14
0x101d4:	mov	rax, rdi
0x101d7:	push	r13
0x101d9:	push	r12
0x101db:	push	rbp
0x101dc:	push	rbx
0x101dd:	xor	ebx, ebx
0x101df:	mov	rbp, rcx
0x101e2:	sub	rsp, 0x178
0x101e9:	mov	rax, qword ptr [rax]
0x101ec:	mov	qword ptr [rsp + 0x30], rdi
0x101f1:	mov	qword ptr [rsp + 0x20], rsi
0x101f6:	mov	rdi, qword ptr fs:[0x28]
0x101ff:	mov	qword ptr [rsp + 0x168], rdi
0x10207:	xor	edi, edi
0x10209:	cmp	dword ptr [rax + 0xb4], 1
0x10210:	mov	qword ptr [rsp + 0x28], rdx
0x10215:	mov	qword ptr [rsp + 8], rax
0x1021a:	jne	0x10233


0xff60:	push	r15
0xff62:	push	r14
0xff64:	mov	r14, rdx
0xff67:	push	r13
0xff69:	push	r12
0xff6b:	mov	r13, rcx
0xff6e:	push	rbp
0xff6f:	push	rbx
0xff70:	mov	rbp, rdi
0xff73:	mov	edi, 0x20
0xff78:	mov	r12d, r8d
0xff7b:	sub	rsp, 0x58
0xff7f:	mov	qword ptr [rsp], rsi
0xff83:	mov	esi, 1
0xff88:	mov	qword ptr [rsp + 8], r9
0xff8d:	mov	rax, qword ptr fs:[0x28]
0xff96:	mov	qword ptr [rsp + 0x48], rax
0xff9b:	xor	eax, eax
0xff9d:	mov	qword ptr [rsp + 0x18], 0
0xffa6:	call	0x1ec0


0xf750:	push	r14
0xf752:	push	r13
0xf754:	mov	r13, rcx
0xf757:	push	r12
0xf759:	push	rbp
0xf75a:	mov	r12, r9
0xf75d:	push	rbx
0xf75e:	mov	rbp, rdi
0xf761:	mov	rbx, rsi
0xf764:	sub	rsp, 0x10
0xf768:	test	qword ptr [rsp + 0x40], 0x400000
0xf771:	je	0xf798


0xf700:	push	rbp
0xf701:	push	rbx
0xf702:	mov	rbp, rdi
0xf705:	mov	rdi, rsi
0xf708:	mov	rbx, rsi
0xf70b:	sub	rsp, 8
0xf70f:	call	0x1da0


0xf660:	push	r12
0xf662:	push	rbp
0xf663:	push	rbx
0xf664:	mov	rax, qword ptr [rdi]
0xf667:	sub	rax, 1
0xf66b:	test	rax, rax
0xf66e:	mov	qword ptr [rdi], rax
0xf671:	js	0xf6d5


0xf610:	push	r12
0xf612:	push	rbp
0xf613:	mov	rbp, rdi
0xf616:	push	rbx
0xf617:	cmp	qword ptr [rdi], 0
0xf61b:	jle	0xf652


0xf580:	cmp	byte ptr [rsi + 0x30], 0x10
0xf584:	je	0xf5e8


0xe9e0:	push	r15
0xe9e2:	push	r14
0xe9e4:	mov	r15, rdi
0xe9e7:	push	r13
0xe9e9:	push	r12
0xe9eb:	mov	edi, 0x3800
0xe9f0:	push	rbp
0xe9f1:	push	rbx
0xe9f2:	sub	rsp, 0x108
0xe9f9:	mov	rax, qword ptr fs:[0x28]
0xea02:	mov	qword ptr [rsp + 0xf8], rax
0xea0a:	xor	eax, eax
0xea0c:	mov	qword ptr [rsp + 8], rsi
0xea11:	call	0x1f20


0xe7a0:	push	r15
0xe7a2:	push	r14
0xe7a4:	mov	r14, rdx
0xe7a7:	push	r13
0xe7a9:	push	r12
0xe7ab:	lea	rdx, [rsi + rsi*2]
0xe7af:	push	rbp
0xe7b0:	push	rbx
0xe7b1:	pxor	xmm0, xmm0
0xe7b5:	sub	rsp, 0x48
0xe7b9:	mov	rax, qword ptr fs:[0x28]
0xe7c2:	mov	qword ptr [rsp + 0x38], rax
0xe7c7:	xor	eax, eax
0xe7c9:	mov	rax, qword ptr [rdi + 0x38]
0xe7cd:	mov	qword ptr [rsp + 0x30], 0
0xe7d6:	movaps	xmmword ptr [rsp + 0x20], xmm0
0xe7db:	mov	qword ptr [rsp + 0x10], rcx
0xe7e0:	lea	rbp, [rax + rdx*8]
0xe7e4:	mov	r10, qword ptr [rbp + 8]
0xe7e8:	test	r10, r10
0xe7eb:	jle	0xe9d2


0xe000:	push	r15
0xe002:	push	r14
0xe004:	mov	r15, rsi
0xe007:	push	r13
0xe009:	push	r12
0xe00b:	mov	r10d, edx
0xe00e:	push	rbp
0xe00f:	push	rbx
0xe010:	mov	rbp, rsi
0xe013:	mov	rbx, rdi
0xe016:	sub	rsp, 0x48
0xe01a:	mov	rax, qword ptr fs:[0x28]
0xe023:	mov	qword ptr [rsp + 0x38], rax
0xe028:	xor	eax, eax
0xe02a:	mov	rax, qword ptr [rdi + 0x28]
0xe02e:	sub	rbp, rax
0xe031:	cmp	rax, rsi
0xe034:	jle	0xe096


0xdf30:	push	r12
0xdf32:	mov	r12, rdx
0xdf35:	push	rbp
0xdf36:	push	rbx
0xdf37:	mov	edx, dword ptr [rdi + 0xa0]
0xdf3d:	mov	rbx, rsi
0xdf40:	mov	rsi, rcx
0xdf43:	mov	rbp, rdi
0xdf46:	call	0xdd30


0xde20:	mov	rax, qword ptr [rdi + 8]
0xde24:	movzx	ecx, byte ptr [rax + rdx]
0xde28:	movzx	eax, byte ptr [rsi + 8]
0xde2c:	cmp	al, 3
0xde2e:	je	0xdee8


0xdd30:	push	rbp
0xdd31:	push	rbx
0xdd32:	mov	rbp, rdi
0xdd35:	sub	rsp, 8
0xdd39:	test	rsi, rsi
0xdd3c:	js	0xdd90


0xdbe0:	push	r15
0xdbe2:	push	r14
0xdbe4:	push	r13
0xdbe6:	push	r12
0xdbe8:	push	rbp
0xdbe9:	push	rbx
0xdbea:	sub	rsp, 0x28
0xdbee:	cmp	qword ptr [rsi], 0
0xdbf2:	mov	r13, qword ptr [rdi + 0x98]
0xdbf9:	jle	0xdcc0


0xd840:	push	r15
0xd842:	push	r14
0xd844:	push	r13
0xd846:	push	r12
0xd848:	mov	r12, rdx
0xd84b:	push	rbp
0xd84c:	push	rbx
0xd84d:	mov	rbx, rdi
0xd850:	mov	rbp, rsi
0xd853:	xor	esi, esi
0xd855:	sub	rsp, 0x78
0xd859:	mov	rdi, qword ptr [rdi + 0xc8]
0xd860:	mov	rax, qword ptr fs:[0x28]
0xd869:	mov	qword ptr [rsp + 0x68], rax
0xd86e:	xor	eax, eax
0xd870:	mov	qword ptr [rsp + 0x20], rcx
0xd875:	mov	dword ptr [rsp + 0x2c], r8d
0xd87a:	mov	rdx, rdi
0xd87d:	cmp	rsi, rdx
0xd880:	jge	0xd8d7


0xd760:	push	r15
0xd762:	push	r14
0xd764:	push	r13
0xd766:	push	r12
0xd768:	push	rbp
0xd769:	push	rbx
0xd76a:	sub	rsp, 0x48
0xd76e:	mov	rax, qword ptr fs:[0x28]
0xd777:	mov	qword ptr [rsp + 0x38], rax
0xd77c:	xor	eax, eax
0xd77e:	test	rcx, rcx
0xd781:	jle	0xd816


0xd560:	push	r15
0xd562:	push	r14
0xd564:	push	r13
0xd566:	push	r12
0xd568:	push	rbp
0xd569:	push	rbx
0xd56a:	sub	rsp, 8
0xd56e:	mov	rbp, qword ptr [rdx + 8]
0xd572:	test	rbp, rbp
0xd575:	je	0xd750


0xd2a0:	push	r15
0xd2a2:	push	r14
0xd2a4:	push	r13
0xd2a6:	push	r12
0xd2a8:	push	rbp
0xd2a9:	push	rbx
0xd2aa:	sub	rsp, 0x28
0xd2ae:	mov	r10, qword ptr [rdx + 8]
0xd2b2:	test	r10, r10
0xd2b5:	je	0xd53f


0xd140:	test	rsi, rsi
0xd143:	push	r14
0xd145:	push	r13
0xd147:	push	r12
0xd149:	push	rbp
0xd14a:	push	rbx
0xd14b:	je	0xd1f5


0xd0b0:	push	r12
0xd0b2:	push	rbp
0xd0b3:	push	rbx
0xd0b4:	mov	rax, qword ptr [rsi + 8]
0xd0b8:	mov	qword ptr [rdi + 8], rax
0xd0bc:	mov	r12, qword ptr [rsi + 8]
0xd0c0:	test	r12, r12
0xd0c3:	jle	0xd100


0xd010:	push	rbp
0xd011:	push	rbx
0xd012:	mov	rbp, rdi
0xd015:	mov	rbx, rsi
0xd018:	sub	rsp, 0x18
0xd01c:	mov	rdx, qword ptr [rsi + 8]
0xd020:	mov	rax, qword ptr fs:[0x28]
0xd029:	mov	qword ptr [rsp + 8], rax
0xd02e:	xor	eax, eax
0xd030:	mov	dword ptr [rsp + 4], 0
0xd038:	test	rdx, rdx
0xd03b:	je	0xd043


0xcdd0:	push	r15
0xcdd2:	push	r14
0xcdd4:	push	r13
0xcdd6:	push	r12
0xcdd8:	mov	r13, rdx
0xcddb:	push	rbp
0xcddc:	push	rbx
0xcddd:	sub	rsp, 0x48
0xcde1:	mov	rbx, qword ptr [rsi]
0xcde4:	mov	rbp, qword ptr [rdx + 8]
0xcde8:	mov	rax, qword ptr fs:[0x28]
0xcdf1:	mov	qword ptr [rsp + 0x38], rax
0xcdf6:	xor	eax, eax
0xcdf8:	test	byte ptr [rsi + 0x38], 0x10
0xcdfc:	mov	qword ptr [rsp + 0x18], rdi
0xce01:	je	0xcf78


0xccf0:	push	r14
0xccf2:	push	r13
0xccf4:	lea	r13, [rsi + 0x70]
0xccf8:	push	r12
0xccfa:	push	rbp
0xccfb:	lea	r12, [rsi + 0x80]
0xcd02:	push	rbx
0xcd03:	mov	rbx, rdi
0xcd06:	sub	rsp, 0x10
0xcd0a:	mov	rbp, qword ptr [rdi]
0xcd0d:	mov	rax, qword ptr fs:[0x28]
0xcd16:	mov	qword ptr [rsp + 8], rax
0xcd1b:	xor	eax, eax
0xcd1d:	mov	r14, rsp
0xcd20:	lea	r8, [rbx + 0x28]
0xcd24:	xor	ecx, ecx
0xcd26:	xor	edx, edx
0xcd28:	mov	rsi, r12
0xcd2b:	mov	rdi, r13
0xcd2e:	call	0xcc10


0xcc10:	push	rbx
0xcc11:	mov	rbx, rdi
0xcc14:	sub	rsp, 0x20
0xcc18:	mov	eax, dword ptr [rsi]
0xcc1a:	cmp	eax, 0xf
0xcc1d:	je	0xcc98


0xca60:	mov	r9, qword ptr [rsi + 8]
0xca64:	xor	eax, eax
0xca66:	test	r9, r9
0xca69:	je	0xcb28


0xc900:	push	r15
0xc902:	push	r14
0xc904:	mov	r14, rdi
0xc907:	push	r13
0xc909:	push	r12
0xc90b:	mov	r15, rsi
0xc90e:	push	rbp
0xc90f:	push	rbx
0xc910:	mov	rbp, rdx
0xc913:	mov	ebx, ecx
0xc915:	sub	rsp, 0x38
0xc919:	mov	r12, qword ptr [rsi + 8]
0xc91d:	mov	rax, qword ptr fs:[0x28]
0xc926:	mov	qword ptr [rsp + 0x28], rax
0xc92b:	xor	eax, eax
0xc92d:	mov	qword ptr [rsp + 0x18], 0
0xc936:	lea	rdi, [r12*8]
0xc93e:	mov	qword ptr [rsp + 0x10], r12
0xc943:	call	0x1f20


0xc650:	push	r15
0xc652:	push	r14
0xc654:	mov	r15, rsi
0xc657:	push	r13
0xc659:	push	r12
0xc65b:	push	rbp
0xc65c:	push	rbx
0xc65d:	lea	rbx, [rdx + rdx*2]
0xc661:	mov	rbp, rdx
0xc664:	sub	rsp, 0x68
0xc668:	mov	r12, qword ptr [rsi + 0x28]
0xc66c:	shl	rbx, 3
0xc670:	mov	rax, qword ptr fs:[0x28]
0xc679:	mov	qword ptr [rsp + 0x58], rax
0xc67e:	xor	eax, eax
0xc680:	mov	qword ptr [rsp + 0x10], rdi
0xc685:	mov	dword ptr [rsp + 0x1c], ecx
0xc689:	add	r12, rbx
0xc68c:	mov	rax, qword ptr [r12 + 8]
0xc691:	mov	qword ptr [rsp + 0x28], 0
0xc69a:	lea	rdi, [rax + 1]
0xc69e:	mov	qword ptr [rsp + 0x20], rdi
0xc6a3:	shl	rdi, 3
0xc6a7:	call	0x1f20


0xc470:	test	rsi, rsi
0xc473:	je	0xc568


0xc200:	push	r15
0xc202:	push	r14
0xc204:	push	r13
0xc206:	push	r12
0xc208:	push	rbp
0xc209:	push	rbx
0xc20a:	xor	ebx, ebx
0xc20c:	sub	rsp, 0x48
0xc210:	mov	rax, qword ptr [rdi + 0x98]
0xc217:	mov	r15, qword ptr [rdi + 0xc8]
0xc21e:	mov	r12, qword ptr [rsp + 0x80]
0xc226:	mov	qword ptr [rsp + 8], rax
0xc22b:	mov	rbp, r15
0xc22e:	cmp	rbx, rbp
0xc231:	jge	0xc28b


0xc1a0:	movzx	eax, byte ptr [rsi + 0x30]
0xc1a4:	mov	rdx, qword ptr [rsi + 8]
0xc1a8:	cmp	al, 0xb
0xc1aa:	je	0xc1f0


0xc110:	movzx	eax, byte ptr [rsi + 0x30]
0xc114:	cmp	al, 4
0xc116:	je	0xc170


0xc0d0:	mov	rax, qword ptr [rdi]
0xc0d3:	cmp	rax, rdx
0xc0d6:	jle	0xc102


0xbfd0:	push	r15
0xbfd2:	push	r14
0xbfd4:	lea	r14, [rsi + 0x10]
0xbfd8:	push	r13
0xbfda:	push	r12
0xbfdc:	mov	r15, rcx
0xbfdf:	push	rbp
0xbfe0:	push	rbx
0xbfe1:	mov	r12, rdi
0xbfe4:	mov	rbp, rsi
0xbfe7:	mov	rbx, rdx
0xbfea:	mov	r13d, r8d
0xbfed:	sub	rsp, 8
0xbff1:	mov	rdi, qword ptr [rbp + 8]
0xbff5:	mov	rdx, rbx
0xbff8:	mov	rsi, r14
0xbffb:	call	0xbf50


0xbf50:	xor	eax, eax
0xbf52:	test	rdi, rdi
0xbf55:	jle	0xbf95


0xbef0:	mov	rdx, qword ptr [rdi + 8]
0xbef4:	xor	eax, eax
0xbef6:	cmp	rdx, qword ptr [rsi + 8]
0xbefa:	je	0xbf00


0xbea0:	mov	rcx, qword ptr [rdi + 0x30]
0xbea4:	lea	rax, [rsi + 1]
0xbea8:	cmp	rax, rcx
0xbeab:	jge	0xbee8


0xbde0:	push	r14
0xbde2:	push	r13
0xbde4:	mov	r14, rdi
0xbde7:	push	r12
0xbde9:	push	rbp
0xbdea:	push	rbx
0xbdeb:	cmp	qword ptr [rdi + 0xe8], 0
0xbdf3:	jle	0xbe79


0xbc80:	push	r14
0xbc82:	push	r13
0xbc84:	push	r12
0xbc86:	mov	r12, rdi
0xbc89:	push	rbp
0xbc8a:	push	rbx
0xbc8b:	mov	rdi, qword ptr [rdi]
0xbc8e:	test	rdi, rdi
0xbc91:	je	0xbcbe


0xbc40:	push	rbx
0xbc41:	mov	rbx, rdi
0xbc44:	mov	rdi, qword ptr [rdi + 0x10]
0xbc48:	call	0x1c60


0xbbe0:	push	rbx
0xbbe1:	mov	rbx, rdi
0xbbe4:	mov	rdi, qword ptr [rdi + 0x30]
0xbbe8:	call	0x1c60


0xb960:	push	r15
0xb962:	push	r14
0xb964:	mov	r9, rsi
0xb967:	push	r13
0xb969:	push	r12
0xb96b:	mov	r14, rdi
0xb96e:	push	rbp
0xb96f:	push	rbx
0xb970:	mov	r13, rdx
0xb973:	mov	ebp, r8d
0xb976:	sub	rsp, 0x18
0xb97a:	mov	qword ptr [rsp + 8], rcx
0xb97f:	mov	r8, qword ptr [r14]
0xb982:	mov	rax, r9
0xb985:	mov	rdi, qword ptr [r14 + 0x28]
0xb989:	shl	rax, 4
0xb98d:	mov	r12, r13
0xb990:	add	rax, r8
0xb993:	cmp	byte ptr [rax + 8], 4
0xb997:	je	0xbb50


0xb8c0:	push	r13
0xb8c2:	push	r12
0xb8c4:	mov	r13, rsi
0xb8c7:	push	rbp
0xb8c8:	push	rbx
0xb8c9:	shl	r13, 4
0xb8cd:	mov	rbp, rsi
0xb8d0:	mov	r12d, edx
0xb8d3:	mov	rbx, rdi
0xb8d6:	sub	rsp, 8
0xb8da:	mov	rax, qword ptr [rdi]
0xb8dd:	mov	rsi, qword ptr [rax + r13]
0xb8e1:	mov	rdx, qword ptr [rax + r13 + 8]
0xb8e6:	call	0xb6f0


0xb6f0:	push	r15
0xb6f2:	push	r14
0xb6f4:	mov	r14, rsi
0xb6f7:	push	r13
0xb6f9:	push	r12
0xb6fb:	push	rbp
0xb6fc:	push	rbx
0xb6fd:	mov	rbx, rdi
0xb700:	sub	rsp, 0x18
0xb704:	mov	rsi, qword ptr [rdi + 0x10]
0xb708:	mov	rbp, qword ptr [rdi + 8]
0xb70c:	cmp	rsi, rbp
0xb70f:	jae	0xb7c0


0xb6d0:	lea	rdi, [rsi + 0x28]
0xb6d4:	sub	rsp, 8
0xb6d8:	call	0xb6a0


0xb6a0:	mov	eax, dword ptr [rdi + 8]
0xb6a3:	and	eax, 0x400ff
0xb6a8:	cmp	eax, 6
0xb6ab:	je	0xb6c0


0xb670:	push	rbx
0xb671:	mov	rbx, rdi
0xb674:	mov	rdi, qword ptr [rdi]
0xb677:	call	0x1c60


0xb5e0:	push	r12
0xb5e2:	push	rbp
0xb5e3:	mov	rbp, rsi
0xb5e6:	push	rbx
0xb5e7:	mov	rax, qword ptr [rdi + 0x40]
0xb5eb:	mov	rbx, rdi
0xb5ee:	mov	r12, qword ptr [rdi + 0xc0]
0xb5f5:	cmp	rax, rsi
0xb5f8:	jg	0xb620


0xb490:	push	rbp
0xb491:	push	rbx
0xb492:	movabs	rdx, 0xffffffffffffffe
0xb49c:	sub	rsp, 8
0xb4a0:	mov	rax, qword ptr [rdi + 0x40]
0xb4a4:	cmp	rax, rdx
0xb4a7:	ja	0xb5b8


0xae70:	push	r15
0xae72:	push	r14
0xae74:	mov	r14, rdi
0xae77:	push	r13
0xae79:	push	r12
0xae7b:	push	rbp
0xae7c:	push	rbx
0xae7d:	sub	rsp, 0xa8
0xae84:	mov	rbx, qword ptr [rdi + 0x58]
0xae88:	mov	r15, qword ptr [rdi + 0x30]
0xae8c:	mov	rax, qword ptr fs:[0x28]
0xae95:	mov	qword ptr [rsp + 0x98], rax
0xae9d:	xor	eax, eax
0xae9f:	cmp	qword ptr [rdi + 0x40], rbx
0xaea3:	cmovle	rbx, qword ptr [rdi + 0x40]
0xaea8:	cmp	byte ptr [rdi + 0x8a], 0
0xaeaf:	jne	0xaebc


0xaca0:	push	r15
0xaca2:	push	r14
0xaca4:	push	r13
0xaca6:	push	r12
0xaca8:	push	rbp
0xaca9:	push	rbx
0xacaa:	mov	rbx, rdi
0xacad:	sub	rsp, 0x68
0xacb1:	mov	r12, qword ptr [rdi + 0x58]
0xacb5:	mov	rbp, qword ptr [rdi + 0x30]
0xacb9:	mov	rax, qword ptr fs:[0x28]
0xacc2:	mov	qword ptr [rsp + 0x58], rax
0xacc7:	xor	eax, eax
0xacc9:	cmp	qword ptr [rdi + 0x40], r12
0xaccd:	cmovle	r12, qword ptr [rdi + 0x40]
0xacd2:	cmp	r12, rbp
0xacd5:	jle	0xad64


0xac30:	push	r12
0xac32:	mov	r12, qword ptr [rdi + 0x58]
0xac36:	cmp	qword ptr [rdi + 0x40], r12
0xac3a:	push	rbp
0xac3b:	mov	rbp, rdi
0xac3e:	cmovle	r12, qword ptr [rdi + 0x40]
0xac43:	push	rbx
0xac44:	mov	rbx, qword ptr [rdi + 0x30]
0xac48:	cmp	r12, rbx
0xac4b:	jle	0xac85


0xab40:	push	r14
0xab42:	push	r13
0xab44:	mov	r14, rdi
0xab47:	push	r12
0xab49:	push	rbp
0xab4a:	mov	r12, rdx
0xab4d:	push	rbx
0xab4e:	mov	rbx, qword ptr [rsi + 0x10]
0xab52:	mov	rbp, rsi
0xab55:	mov	qword ptr [rsi], rdx
0xab58:	mov	qword ptr [rsi + 0x28], 0
0xab60:	lea	r13, [rsi + 0x20]
0xab64:	lea	rdi, [rbx*8]
0xab6c:	mov	qword ptr [rsi + 0x20], rbx
0xab70:	call	0x1f20


0xaa10:	push	rbp
0xaa11:	push	rbx
0xaa12:	mov	rbp, rsi
0xaa15:	mov	rbx, rdi
0xaa18:	sub	rsp, 8
0xaa1c:	mov	rdx, qword ptr [rdi]
0xaa1f:	test	rdx, rdx
0xaa22:	je	0xaa48


0xa9a0:	push	rbp
0xa9a1:	push	rbx
0xa9a2:	mov	rbp, rsi
0xa9a5:	mov	rbx, rdi
0xa9a8:	sub	rsp, 8
0xa9ac:	mov	rsi, qword ptr [rdi + 8]
0xa9b0:	cmp	qword ptr [rdi], rsi
0xa9b3:	mov	rax, qword ptr [rdi + 0x10]
0xa9b7:	je	0xa9d8


0xa900:	push	rbp
0xa901:	push	rbx
0xa902:	mov	rbp, rsi
0xa905:	mov	rbx, rdi
0xa908:	sub	rsp, 8
0xa90c:	cmp	dword ptr [rdi + 0x90], 1
0xa913:	jle	0xa95d


0xa8a0:	push	r12
0xa8a2:	mov	r12, rsi
0xa8a5:	push	rbp
0xa8a6:	mov	rbp, rdx
0xa8a9:	push	rbx
0xa8aa:	mov	rbx, rdi
0xa8ad:	jmp	0xa8b3


0xa830:	push	r12
0xa832:	mov	r12, rsi
0xa835:	push	rbp
0xa836:	mov	rbp, rdx
0xa839:	push	rbx
0xa83a:	mov	rbx, rdi
0xa83d:	jmp	0xa843


0xa7c0:	mov	rax, qword ptr [rdi + 0xd8]
0xa7c7:	lea	rsi, [rsi + rsi*4]
0xa7cb:	lea	rax, [rax + rsi*8]
0xa7cf:	mov	r10, qword ptr [rax + 0x10]
0xa7d3:	cmp	r10, r8
0xa7d6:	jg	0xa820


0xa590:	push	r15
0xa592:	push	r14
0xa594:	mov	r9, rdx
0xa597:	push	r13
0xa599:	push	r12
0xa59b:	lea	rdx, [rcx + rcx*2]
0xa59f:	push	rbp
0xa5a0:	push	rbx
0xa5a1:	mov	r15d, esi
0xa5a4:	sub	rsp, 0x48
0xa5a8:	mov	r14, qword ptr [rdi + 0x98]
0xa5af:	mov	qword ptr [rsp], rdi
0xa5b3:	mov	rax, qword ptr [r14 + 0x30]
0xa5b7:	lea	r12, [rax + rdx*8]
0xa5bb:	cmp	qword ptr [r12 + 8], 0
0xa5c1:	jle	0xa755


0xa570:	cmp	byte ptr [rsi + 0x30], 0x11
0xa574:	je	0xa580


0xa440:	mov	rax, qword ptr [rsi + 0x48]
0xa444:	cmp	qword ptr [rsi + 0x68], rax
0xa448:	jle	0xa4a0


0xa3b0:	push	r13
0xa3b2:	push	r12
0xa3b4:	mov	r13, rsi
0xa3b7:	push	rbp
0xa3b8:	push	rbx
0xa3b9:	mov	rbx, rdi
0xa3bc:	mov	r12, rdx
0xa3bf:	sub	rsp, 0x18
0xa3c3:	mov	rax, qword ptr fs:[0x28]
0xa3cc:	mov	qword ptr [rsp + 8], rax
0xa3d1:	xor	eax, eax
0xa3d3:	lea	rax, [rsp + 4]
0xa3d8:	test	rdi, rdi
0xa3db:	cmove	rbx, rax
0xa3df:	mov	rdi, rbx
0xa3e2:	call	0x1dd0


0xa350:	mov	rax, qword ptr [rdi + 8]
0xa354:	cmp	qword ptr [rdi + 0x10], rax
0xa358:	je	0xa360


0xa310:	test	rdi, rdi
0xa313:	push	rbx
0xa314:	mov	rbx, rdi
0xa317:	je	0xa32a


0xa290:	push	r12
0xa292:	push	rbp
0xa293:	push	rbx
0xa294:	mov	rbx, rdi
0xa297:	call	0x1ef0


0x9bd0:	push	r15
0x9bd2:	push	r14
0x9bd4:	push	r13
0x9bd6:	push	r12
0x9bd8:	push	rbp
0x9bd9:	push	rbx
0x9bda:	sub	rsp, 0x28
0x9bde:	mov	rax, qword ptr fs:[0x28]
0x9be7:	mov	qword ptr [rsp + 0x18], rax
0x9bec:	xor	eax, eax
0x9bee:	cmp	edx, 0x24
0x9bf1:	ja	0xa25f


0x9ba0:	push	rbx
0x9ba1:	call	0x1aac0


0x9b70:	push	rbx
0x9b71:	call	0x1a870


0x9b50:	push	rbx
0x9b51:	call	0x1a5b0


0x9b10:	lea	rsi, [rip + 0x12a78]
0x9b17:	sub	rsp, 8
0x9b1b:	mov	edx, 5
0x9b20:	xor	edi, edi
0x9b22:	call	0x1d80


0x9af0:	push	rbx
0x9af1:	mov	rbx, rdi
0x9af4:	call	0x1da0


0x9ac0:	push	rbp
0x9ac1:	push	rbx
0x9ac2:	mov	rbp, rdi
0x9ac5:	mov	rdi, rsi
0x9ac8:	mov	rbx, rsi
0x9acb:	sub	rsp, 8
0x9acf:	call	0x98c0


0x9a90:	mov	rax, rdi
0x9a93:	sub	rsp, 8
0x9a97:	mul	rsi
0x9a9a:	seto	dl
0x9a9d:	test	rax, rax
0x9aa0:	js	0x9ab9


0x9a70:	push	rbx
0x9a71:	mov	rbx, rdi
0x9a74:	call	0x98c0


0x9a20:	test	rdi, rdi
0x9a23:	mov	rax, qword ptr [rsi]
0x9a26:	je	0x9a50


0x9990:	test	rdi, rdi
0x9993:	mov	r9, rdx
0x9996:	mov	rcx, qword ptr [rsi]
0x9999:	je	0x99d0


0x9960:	mov	rax, rsi
0x9963:	mul	rdx
0x9966:	mov	rsi, rax
0x9969:	seto	al
0x996c:	test	rsi, rsi
0x996f:	js	0x997b


0x9920:	test	rsi, rsi
0x9923:	push	rbx
0x9924:	mov	rbx, rsi
0x9927:	jne	0x992e


0x9910:	jmp	0x98c0


0x98e0:	mov	rax, rdi
0x98e3:	mul	rsi
0x98e6:	mov	rdi, rax
0x98e9:	seto	al
0x98ec:	test	rdi, rdi
0x98ef:	js	0x98fb


0x98c0:	push	rbx
0x98c1:	mov	rbx, rdi
0x98c4:	call	0x1f20


0x9840:	push	rbx
0x9841:	lea	rsi, [rip + 0x12a34]
0x9848:	mov	edx, 5
0x984d:	xor	edi, edi
0x984f:	call	0x1d80


0x9760:	push	rbp
0x9761:	push	rbx
0x9762:	mov	r10d, 0x20
0x9768:	xor	r11d, r11d
0x976b:	sub	rsp, 0xb8
0x9772:	mov	rax, qword ptr fs:[0x28]
0x977b:	mov	qword ptr [rsp + 0x78], rax
0x9780:	xor	eax, eax
0x9782:	lea	rax, [rsp + 0xd0]
0x978a:	mov	qword ptr [rsp + 0xa0], r8
0x9792:	lea	rbx, [rsp + 0xd0]
0x979a:	lea	r8, [rsp + 0x20]
0x979f:	mov	qword ptr [rsp + 0xa8], r9
0x97a7:	mov	dword ptr [rsp + 8], 0x20
0x97af:	mov	qword ptr [rsp + 0x10], rax
0x97b4:	lea	rax, [rsp + 0x80]
0x97bc:	xor	r9d, r9d
0x97bf:	mov	qword ptr [rsp + 0x18], rax
0x97c4:	mov	rbp, rax
0x97c7:	nop	word ptr [rax + rax]
0x97d0:	cmp	r10d, 0x2f
0x97d4:	ja	0x982c


0x96e0:	sub	rsp, 0x68
0x96e4:	mov	r10, r8
0x96e7:	xor	r9d, r9d
0x96ea:	mov	rax, qword ptr fs:[0x28]
0x96f3:	mov	qword ptr [rsp + 0x58], rax
0x96f8:	xor	eax, eax
0x96fa:	mov	r8, rsp
0x96fd:	nop	dword ptr [rax]
0x9700:	mov	eax, dword ptr [r10]
0x9703:	cmp	eax, 0x2f
0x9706:	ja	0x974a


0x96c0:	xor	r9d, r9d
0x96c3:	cmp	qword ptr [r8], 0
0x96c7:	je	0x96db


0x92a0:	push	r15
0x92a2:	push	r14
0x92a4:	push	r13
0x92a6:	push	r12
0x92a8:	mov	r12, r9
0x92ab:	push	rbp
0x92ac:	push	rbx
0x92ad:	mov	rbp, rdi
0x92b0:	mov	rbx, r8
0x92b3:	sub	rsp, 0x28
0x92b7:	test	rsi, rsi
0x92ba:	je	0x93d8


0x8c70:	push	r15
0x8c72:	push	r14
0x8c74:	push	r13
0x8c76:	push	r12
0x8c78:	mov	r12d, esi
0x8c7b:	push	rbp
0x8c7c:	push	rbx
0x8c7d:	sub	rsp, 0x78
0x8c81:	mov	rax, qword ptr fs:[0x28]
0x8c8a:	mov	qword ptr [rsp + 0x68], rax
0x8c8f:	xor	eax, eax
0x8c91:	call	0x20a0


0x8c30:	push	rbp
0x8c31:	push	rbx
0x8c32:	mov	rdx, rsi
0x8c35:	mov	rbx, rsi
0x8c38:	xor	esi, esi
0x8c3a:	mov	rbp, rdi
0x8c3d:	sub	rsp, 8
0x8c41:	call	0x1e80


0x8c20:	lea	rdx, [rip + 0x135c1]
0x8c27:	jmp	0x8b90


0x8c10:	lea	rdx, [rip + 0x13b34]
0x8c17:	jmp	0x8b90


0x8b90:	push	r13
0x8b92:	push	r12
0x8b94:	push	rbp
0x8b95:	push	rbx
0x8b96:	mov	rbp, rsi
0x8b99:	mov	rsi, rdx
0x8b9c:	sub	rsp, 8
0x8ba0:	call	0x2030


0x89b0:	push	r15
0x89b2:	push	r14
0x89b4:	push	r13
0x89b6:	push	r12
0x89b8:	mov	r13, rdi
0x89bb:	push	rbp
0x89bc:	push	rbx
0x89bd:	sub	rsp, 0xb8
0x89c4:	mov	qword ptr [rsp + 8], rsi
0x89c9:	mov	rax, qword ptr fs:[0x28]
0x89d2:	mov	qword ptr [rsp + 0xa8], rax
0x89da:	xor	eax, eax
0x89dc:	call	0x1ef0


0x8990:	lea	rcx, [rip + 0x2186c9]
0x8997:	mov	rsi, rdi
0x899a:	mov	rdx, -1
0x89a1:	xor	edi, edi
0x89a3:	jmp	0x8050


0x8970:	lea	rcx, [rip + 0x2186e9]
0x8977:	mov	rdx, -1
0x897e:	jmp	0x8050


0x8950:	lea	rcx, [rip + 0x218709]
0x8957:	mov	rdx, rsi
0x895a:	mov	rsi, rdi
0x895d:	xor	edi, edi
0x895f:	jmp	0x8050


0x8940:	lea	rcx, [rip + 0x218719]
0x8947:	jmp	0x8050


0x8920:	mov	r8, rcx
0x8923:	mov	rcx, rdx
0x8926:	mov	rdx, rsi
0x8929:	mov	rsi, rdi
0x892c:	xor	edi, edi
0x892e:	jmp	0x8850


0x8900:	mov	rcx, rdx
0x8903:	mov	r8, -1
0x890a:	mov	rdx, rsi
0x890d:	mov	rsi, rdi
0x8910:	xor	edi, edi
0x8912:	jmp	0x8850


0x88f0:	mov	r8, -1
0x88f7:	jmp	0x8850


0x8850:	sub	rsp, 0x48
0x8854:	mov	r9, rcx
0x8857:	mov	rcx, qword ptr [rip + 0x219192]
0x885e:	movdqa	xmm0, xmmword ptr [rip + 0x21915a]
0x8866:	mov	rax, qword ptr fs:[0x28]
0x886f:	mov	qword ptr [rsp + 0x38], rax
0x8874:	xor	eax, eax
0x8876:	movaps	xmmword ptr [rsp], xmm0
0x887a:	test	rsi, rsi
0x887d:	mov	qword ptr [rsp + 0x30], rcx
0x8882:	mov	dword ptr [rsp], 0xa
0x8889:	movdqa	xmm0, xmmword ptr [rip + 0x21913f]
0x8891:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x8896:	movdqa	xmm0, xmmword ptr [rip + 0x219142]
0x889e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x88a3:	je	0x88d7


0x87c0:	sub	rsp, 0x48
0x87c4:	mov	rax, rdx
0x87c7:	mov	rdx, qword ptr fs:[0x28]
0x87d0:	mov	qword ptr [rsp + 0x38], rdx
0x87d5:	xor	edx, edx
0x87d7:	cmp	esi, 0xa
0x87da:	je	0x8844


0x87b0:	mov	edx, 0x3a
0x87b5:	jmp	0x86e0


0x8790:	mov	edx, 0x3a
0x8795:	mov	rsi, -1
0x879c:	jmp	0x86e0


0x8780:	movsx	edx, sil
0x8784:	mov	rsi, -1
0x878b:	jmp	0x86e0


0x86e0:	sub	rsp, 0x48
0x86e4:	mov	ecx, edx
0x86e6:	mov	rax, qword ptr fs:[0x28]
0x86ef:	mov	qword ptr [rsp + 0x38], rax
0x86f4:	xor	eax, eax
0x86f6:	mov	rax, qword ptr [rip + 0x2192f3]
0x86fd:	mov	r8, rsp
0x8700:	and	ecx, 0x1f
0x8703:	movdqa	xmm0, xmmword ptr [rip + 0x2192b5]
0x870b:	mov	qword ptr [rsp + 0x30], rax
0x8710:	mov	eax, edx
0x8712:	movaps	xmmword ptr [rsp], xmm0
0x8716:	shr	al, 5
0x8719:	movzx	eax, al
0x871c:	lea	r9, [r8 + rax*4 + 8]
0x8721:	movdqa	xmm0, xmmword ptr [rip + 0x2192a7]
0x8729:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x872e:	movdqa	xmm0, xmmword ptr [rip + 0x2192aa]
0x8736:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x873b:	mov	edx, dword ptr [r9]
0x873e:	mov	eax, edx
0x8740:	shr	eax, cl
0x8742:	not	eax
0x8744:	and	eax, 1
0x8747:	shl	eax, cl
0x8749:	mov	rcx, r8
0x874c:	xor	eax, edx
0x874e:	mov	rdx, rsi
0x8751:	mov	rsi, rdi
0x8754:	mov	dword ptr [r9], eax
0x8757:	xor	edi, edi
0x8759:	call	0x8050


0x86d0:	mov	rcx, rdx
0x86d3:	mov	rdx, rsi
0x86d6:	mov	esi, edi
0x86d8:	xor	edi, edi
0x86da:	jmp	0x8630


0x86c0:	mov	rdx, rsi
0x86c3:	mov	esi, edi
0x86c5:	xor	edi, edi
0x86c7:	jmp	0x85a0


0x8630:	sub	rsp, 0x48
0x8634:	mov	rax, rdx
0x8637:	mov	rdx, rcx
0x863a:	mov	rcx, qword ptr fs:[0x28]
0x8643:	mov	qword ptr [rsp + 0x38], rcx
0x8648:	xor	ecx, ecx
0x864a:	cmp	esi, 0xa
0x864d:	je	0x86b0


0x85a0:	sub	rsp, 0x48
0x85a4:	mov	rax, rdx
0x85a7:	mov	rdx, qword ptr fs:[0x28]
0x85b0:	mov	qword ptr [rsp + 0x38], rdx
0x85b5:	xor	edx, edx
0x85b7:	cmp	esi, 0xa
0x85ba:	je	0x8624


0x8580:	lea	rcx, [rip + 0x219439]
0x8587:	mov	rdx, rsi
0x858a:	mov	rsi, rdi
0x858d:	xor	edi, edi
0x858f:	jmp	0x8050


0x8560:	lea	rcx, [rip + 0x219459]
0x8567:	mov	rsi, rdi
0x856a:	mov	rdx, -1
0x8571:	xor	edi, edi
0x8573:	jmp	0x8050


0x8550:	lea	rcx, [rip + 0x219469]
0x8557:	jmp	0x8050


0x8530:	lea	rcx, [rip + 0x219489]
0x8537:	mov	rdx, -1
0x853e:	jmp	0x8050


0x8490:	mov	eax, dword ptr [rip + 0x218c02]
0x8496:	push	r12
0x8498:	mov	r12, qword ptr [rip + 0x218c01]
0x849f:	push	rbp
0x84a0:	push	rbx
0x84a1:	cmp	eax, 1
0x84a4:	jle	0x84d1


0x8480:	mov	rcx, rdx
0x8483:	xor	edx, edx
0x8485:	jmp	0x8390


0x8390:	push	r15
0x8392:	push	r14
0x8394:	lea	rax, [rip + 0x219625]
0x839b:	push	r13
0x839d:	push	r12
0x839f:	mov	r12, rdx
0x83a2:	push	rbp
0x83a3:	push	rbx
0x83a4:	mov	rbx, rcx
0x83a7:	mov	r14, rdi
0x83aa:	mov	r15, rsi
0x83ad:	sub	rsp, 0x38
0x83b1:	test	rcx, rcx
0x83b4:	cmove	rbx, rax
0x83b8:	xor	ebp, ebp
0x83ba:	call	0x1c80


0x8310:	push	r15
0x8312:	push	r14
0x8314:	lea	rax, [rip + 0x2196a5]
0x831b:	push	r13
0x831d:	push	r12
0x831f:	mov	r13, rdi
0x8322:	push	rbp
0x8323:	push	rbx
0x8324:	mov	rbx, r8
0x8327:	mov	r14, rsi
0x832a:	mov	r15, rdx
0x832d:	sub	rsp, 0x18
0x8331:	test	r8, r8
0x8334:	cmove	rbx, rax
0x8338:	mov	qword ptr [rsp + 8], rcx
0x833d:	call	0x1c80


0x82e0:	lea	rax, [rip + 0x2196d9]
0x82e7:	test	rdi, rdi
0x82ea:	cmove	rdi, rax
0x82ee:	test	rsi, rsi
0x82f1:	mov	dword ptr [rdi], 0xa
0x82f7:	je	0x8307


0x82c0:	lea	rax, [rip + 0x2196f9]
0x82c7:	test	rdi, rdi
0x82ca:	cmove	rdi, rax
0x82ce:	mov	eax, dword ptr [rdi + 4]
0x82d1:	mov	dword ptr [rdi + 4], esi
0x82d4:	ret	


0x8280:	lea	rax, [rip + 0x219739]
0x8287:	test	rdi, rdi
0x828a:	mov	ecx, esi
0x828c:	cmove	rdi, rax
0x8290:	mov	eax, esi
0x8292:	and	ecx, 0x1f
0x8295:	shr	al, 5
0x8298:	movzx	eax, al
0x829b:	lea	rdi, [rdi + rax*4 + 8]
0x82a0:	mov	esi, dword ptr [rdi]
0x82a2:	mov	eax, esi
0x82a4:	shr	eax, cl
0x82a6:	xor	edx, eax
0x82a8:	and	eax, 1
0x82ab:	and	edx, 1
0x82ae:	shl	edx, cl
0x82b0:	xor	edx, esi
0x82b2:	mov	dword ptr [rdi], edx
0x82b4:	ret	


0x8260:	lea	rax, [rip + 0x219759]
0x8267:	test	rdi, rdi
0x826a:	cmove	rdi, rax
0x826e:	mov	dword ptr [rdi], esi
0x8270:	ret	


0x8240:	lea	rax, [rip + 0x219779]
0x8247:	test	rdi, rdi
0x824a:	cmove	rdi, rax
0x824e:	mov	eax, dword ptr [rdi]
0x8250:	ret	


0x8200:	push	r12
0x8202:	push	rbp
0x8203:	push	rbx
0x8204:	mov	rbx, rdi
0x8207:	call	0x1c80


0x8050:	push	r15
0x8052:	push	r14
0x8054:	movsxd	r15, edi
0x8057:	push	r13
0x8059:	push	r12
0x805b:	mov	r14, rdx
0x805e:	push	rbp
0x805f:	push	rbx
0x8060:	mov	rbp, rcx
0x8063:	sub	rsp, 0x28
0x8067:	mov	qword ptr [rsp + 8], rsi
0x806c:	call	0x1c80


0x6e10:	push	r15
0x6e12:	push	r14
0x6e14:	mov	r15d, r8d
0x6e17:	push	r13
0x6e19:	push	r12
0x6e1b:	mov	r14, rdi
0x6e1e:	push	rbp
0x6e1f:	push	rbx
0x6e20:	mov	ebx, r9d
0x6e23:	mov	r13, rsi
0x6e26:	mov	rbp, rcx
0x6e29:	and	ebx, 2
0x6e2c:	sub	rsp, 0xb8
0x6e33:	mov	rax, qword ptr [rsp + 0xf0]
0x6e3b:	mov	qword ptr [rsp + 0x10], rdx
0x6e40:	mov	dword ptr [rsp + 8], r8d
0x6e45:	mov	dword ptr [rsp + 0x78], r9d
0x6e4a:	mov	qword ptr [rsp + 0x20], rax
0x6e4f:	mov	rax, qword ptr [rsp + 0xf8]
0x6e57:	mov	qword ptr [rsp + 0x68], rax
0x6e5c:	mov	rax, qword ptr [rsp + 0x100]
0x6e64:	mov	qword ptr [rsp + 0x60], rax
0x6e69:	mov	rax, qword ptr fs:[0x28]
0x6e72:	mov	qword ptr [rsp + 0xa8], rax
0x6e7a:	xor	eax, eax
0x6e7c:	call	0x1d90


0x6d20:	push	rbp
0x6d21:	push	rbx
0x6d22:	mov	rbp, rdi
0x6d25:	mov	ebx, esi
0x6d27:	sub	rsp, 8
0x6d2b:	call	0x18780


0x6a30:	push	r15
0x6a32:	push	r14
0x6a34:	mov	edx, 5
0x6a39:	push	r13
0x6a3b:	push	r12
0x6a3d:	mov	r13, rdi
0x6a40:	push	rbp
0x6a41:	push	rbx
0x6a42:	mov	rbp, rsi
0x6a45:	mov	rsi, rdi
0x6a48:	xor	edi, edi
0x6a4a:	sub	rsp, 0x18
0x6a4e:	call	0x1d80


0x69a0:	push	r12
0x69a2:	push	rbp
0x69a3:	mov	rsi, rdi
0x69a6:	push	rbx
0x69a7:	mov	rbp, rdi
0x69aa:	mov	edx, 5
0x69af:	xor	edi, edi
0x69b1:	call	0x1d80


0x6030:	push	r15
0x6032:	push	r14
0x6034:	mov	r15, rdi
0x6037:	push	r13
0x6039:	push	r12
0x603b:	mov	rdi, rsi
0x603e:	push	rbp
0x603f:	push	rbx
0x6040:	mov	esi, 2
0x6045:	lea	r13, [rip + 0x16f14]
0x604c:	sub	rsp, 0xb8
0x6053:	lea	rbx, [rsp + 0x20]
0x6058:	lea	r12, [rsp + 0x60]
0x605d:	mov	rax, qword ptr fs:[0x28]
0x6066:	mov	qword ptr [rsp + 0xa8], rax
0x606e:	xor	eax, eax
0x6070:	lea	r14, [rbx + 0x24]
0x6074:	call	0x8c70


0x5f90:	test	rdi, rdi
0x5f93:	push	rbx
0x5f94:	je	0x600d


0x5de0:	push	r15
0x5de2:	push	r14
0x5de4:	mov	r15, rsi
0x5de7:	push	r13
0x5de9:	push	r12
0x5deb:	mov	r12, rdx
0x5dee:	push	rbp
0x5def:	push	rbx
0x5df0:	sub	rsp, 0x18
0x5df4:	mov	qword ptr [rsp + 8], rdi
0x5df9:	mov	rdi, rdx
0x5dfc:	call	0x1ef0


0x5d90:	push	rbp
0x5d91:	push	rbx
0x5d92:	mov	ebp, edi
0x5d94:	lea	rdi, [rip + 0x15ea5]
0x5d9b:	xor	esi, esi
0x5d9d:	xor	eax, eax
0x5d9f:	sub	rsp, 8
0x5da3:	mov	ebx, 1
0x5da8:	call	0x2010


0x5ce0:	push	rbp
0x5ce1:	push	rbx
0x5ce2:	sub	rsp, 8
0x5ce6:	mov	rdi, qword ptr [rip + 0x21b3db]
0x5ced:	call	0x186a0


0x5cd0:	mov	byte ptr [rip + 0x21bbb9], dil
0x5cd7:	ret	


0x5cc0:	mov	qword ptr [rip + 0x21bbd1], rdi
0x5cc7:	ret	


0x5c70:	push	r14
0x5c72:	push	r13
0x5c74:	push	r12
0x5c76:	push	rbp
0x5c77:	push	rbx
0x5c78:	mov	r14, qword ptr [rsi]
0x5c7b:	test	r14, r14
0x5c7e:	je	0x5cb1


0x5c00:	push	r15
0x5c02:	push	r14
0x5c04:	mov	r14, rdi
0x5c07:	push	r13
0x5c09:	push	r12
0x5c0b:	mov	r12, rsi
0x5c0e:	push	rbp
0x5c0f:	push	rbx
0x5c10:	mov	rbp, rcx
0x5c13:	mov	rbx, rdx
0x5c16:	mov	rcx, r8
0x5c19:	mov	rdx, rbp
0x5c1c:	sub	rsp, 8
0x5c20:	mov	rsi, rbx
0x5c23:	mov	rdi, r12
0x5c26:	mov	r15, r8
0x5c29:	mov	r13, r9
0x5c2c:	call	0x5940


0x5ae0:	push	r15
0x5ae2:	push	r14
0x5ae4:	mov	r14, rdi
0x5ae7:	push	r13
0x5ae9:	push	r12
0x5aeb:	xor	edi, edi
0x5aed:	push	rbp
0x5aee:	push	rbx
0x5aef:	mov	rbp, rsi
0x5af2:	lea	rsi, [rip + 0x15efc]
0x5af9:	mov	r12, rdx
0x5afc:	mov	edx, 5
0x5b01:	sub	rsp, 8
0x5b05:	mov	rbx, qword ptr [rip + 0x21b5f4]
0x5b0c:	call	0x1d80


0x5a60:	cmp	rdx, -1
0x5a64:	push	r12
0x5a66:	mov	edx, 5
0x5a6b:	push	rbp
0x5a6c:	mov	r12, rsi
0x5a6f:	push	rbx
0x5a70:	mov	rbp, rdi
0x5a73:	je	0x5ac0


0x5940:	push	r15
0x5942:	push	r14
0x5944:	mov	r15, rsi
0x5947:	push	r13
0x5949:	push	r12
0x594b:	mov	r13, rcx
0x594e:	push	rbp
0x594f:	push	rbx
0x5950:	mov	rbp, rdx
0x5953:	sub	rsp, 0x28
0x5957:	mov	qword ptr [rsp + 8], rdi
0x595c:	mov	qword ptr [rsp + 0x18], rdx
0x5961:	call	0x1da0


0x5930:	mov	edi, 1
0x5935:	jmp	0x54e0


0x54e0:	push	r13
0x54e2:	push	r12
0x54e4:	mov	edx, 5
0x54e9:	push	rbp
0x54ea:	push	rbx
0x54eb:	mov	ebp, edi
0x54ed:	sub	rsp, 0x88
0x54f4:	mov	rbx, qword ptr [rip + 0x21c3a5]
0x54fb:	mov	rax, qword ptr fs:[0x28]
0x5504:	mov	qword ptr [rsp + 0x78], rax
0x5509:	xor	eax, eax
0x550b:	test	edi, edi
0x550d:	je	0x553d


0x5450:	sub	rdx, 1
0x5454:	js	0x54ce


0x5420:	push	rbp
0x5421:	push	rbx
0x5422:	mov	rbp, rdi
0x5425:	mov	rbx, rsi
0x5428:	call	0x4950


0x4fa0:	cmp	rsi, rdi
0x4fa3:	jbe	0x51c0


0x4f50:	test	rdi, rdi
0x4f53:	jle	0x4f98


0x4e30:	push	r13
0x4e32:	push	r12
0x4e34:	mov	r12, rsi
0x4e37:	push	rbp
0x4e38:	push	rbx
0x4e39:	lea	r13, [r12 + 8]
0x4e3e:	sub	rsp, 0x28
0x4e42:	mov	rsi, rsp
0x4e45:	mov	rax, qword ptr fs:[0x28]
0x4e4e:	mov	qword ptr [rsp + 0x18], rax
0x4e53:	xor	eax, eax
0x4e55:	call	0x4d50


0x4d50:	push	rbp
0x4d51:	push	rbx
0x4d52:	mov	rbp, rsi
0x4d55:	sub	rsp, 0x18
0x4d59:	mov	rax, qword ptr fs:[0x28]
0x4d62:	mov	qword ptr [rsp + 8], rax
0x4d67:	xor	eax, eax
0x4d69:	test	rdi, rdi
0x4d6c:	je	0x4d76


0x4cb0:	cmp	byte ptr [rip + 0x21cbc9], 0
0x4cb7:	lea	rax, [rdi + 0x48]
0x4cbb:	push	r12
0x4cbd:	push	rbp
0x4cbe:	push	rbx
0x4cbf:	mov	edx, 0
0x4cc4:	mov	rbx, qword ptr [rdi]
0x4cc7:	mov	qword ptr [rdi + 0x28], rax
0x4ccb:	lea	rax, [rip + 0x21c7ee]
0x4cd2:	lea	rbp, [rdi + 8]
0x4cd6:	mov	qword ptr [rdi + 8], 0
0x4cde:	mov	qword ptr [rdi + 0x10], 0
0x4ce6:	cmove	rax, rdx
0x4cea:	mov	qword ptr [rdi + 0x30], rax
0x4cee:	mov	rdi, rbx
0x4cf1:	call	0x1da0


0x4a30:	push	r12
0x4a32:	push	rbp
0x4a33:	push	rbx
0x4a34:	mov	rbx, rdi
0x4a37:	call	0x1da0


0x4a00:	push	rbx
0x4a01:	lea	rsi, [rip + 0x16500]
0x4a08:	mov	edx, 5
0x4a0d:	xor	edi, edi
0x4a0f:	call	0x1d80


0x4950:	mov	r10, qword ptr [rsi + 8]
0x4954:	mov	r9, qword ptr [rdi + 8]
0x4958:	cmp	r10, r9
0x495b:	mov	r8, r9
0x495e:	cmovle	r8, r10
0x4962:	cmp	byte ptr [rip + 0x21cf17], 0
0x4969:	jne	0x49b0


0x4940:	push	rbp
0x4941:	mov	rbp, rsp
0x4944:	pop	rbp
0x4945:	jmp	0x48b0


0x4900:	cmp	byte ptr [rip + 0x21c801], 0
0x4907:	jne	0x4938


0x48b0:	lea	rdi, [rip + 0x21c809]
0x48b7:	lea	rsi, [rip + 0x21c802]
0x48be:	push	rbp
0x48bf:	sub	rsi, rdi
0x48c2:	mov	rbp, rsp
0x48c5:	sar	rsi, 3
0x48c9:	mov	rax, rsi
0x48cc:	shr	rax, 0x3f
0x48d0:	add	rsi, rax
0x48d3:	sar	rsi, 1
0x48d6:	je	0x48f0


0x4870:	lea	rdi, [rip + 0x21c849]
0x4877:	push	rbp
0x4878:	lea	rax, [rip + 0x21c841]
0x487f:	cmp	rax, rdi
0x4882:	mov	rbp, rsp
0x4885:	je	0x48a0


0x4840:	xor	ebp, ebp
0x4842:	mov	r9, rdx
0x4845:	pop	rsi
0x4846:	mov	rdx, rsp
0x4849:	and	rsp, 0xfffffffffffffff0
0x484d:	push	rax
0x484e:	push	rsp
0x484f:	lea	r8, [rip + 0x1666a]
0x4856:	lea	rcx, [rip + 0x165f3]
0x485d:	lea	rdi, [rip - 0x26d4]
0x4864:	call	qword ptr [rip + 0x21c75e]


0x2190:	push	r15
0x2192:	push	r14
0x2194:	lea	r14, [rip + 0x19815]
0x219b:	push	r13
0x219d:	push	r12
0x219f:	lea	r13, [rip + 0x21e6fa]
0x21a6:	push	rbp
0x21a7:	push	rbx
0x21a8:	mov	ebx, edi
0x21aa:	mov	rbp, rsi
0x21ad:	lea	r12, [rip + 0x196bd]
0x21b4:	sub	rsp, 0x98
0x21bb:	mov	rdi, qword ptr [rsi]
0x21be:	mov	rax, qword ptr fs:[0x28]
0x21c7:	mov	qword ptr [rsp + 0x88], rax
0x21cf:	xor	eax, eax
0x21d1:	lea	r15, [rsp + 0x60]
0x21d6:	call	0x5f90


0x2166:	lea	rcx, [rip + 0x1ae13]
0x216d:	lea	rsi, [rip + 0x19b24]
0x2174:	lea	rdi, [rip + 0x19b3d]
0x217b:	sub	rsp, 8
0x217f:	mov	edx, 0xb3
0x2184:	call	0x1e30


0x2143:	lea	rcx, [rip + 0x1a0c6]
0x214a:	lea	rsi, [rip + 0x1a09f]
0x2151:	lea	rdi, [rip + 0x19b60]
0x2158:	sub	rsp, 8
0x215c:	mov	edx, 0xaa
0x2161:	call	0x1e30


0x2120:	lea	rcx, [rip + 0x19be9]
0x2127:	lea	rsi, [rip + 0x19b6a]
0x212e:	lea	rdi, [rip + 0x19b83]
0x2135:	sub	rsp, 8
0x2139:	mov	edx, 0xb3
0x213e:	call	0x1e30


0x1c28:	sub	rsp, 8
0x1c2c:	mov	rax, qword ptr [rip + 0x21f39d]
0x1c33:	test	rax, rax
0x1c36:	je	0x1c3a


0x2060:	jmp	qword ptr [rip + 0x21ef02]


0x1d90:	jmp	qword ptr [rip + 0x21f06a]


0x1abf6:	test	dil, 0x10
0x1abfa:	jne	0x1ac00


0x1ac0c:	sub	rsp, 8
0x1ac10:	call	0x1c70


0x1abe3:	xor	edx, edx
0x1abe5:	mov	rax, rdx
0x1abe8:	ret	


0x1abb6:	sub	rsp, 8
0x1abba:	call	0x1f20


0x1aae7:	mov	rdi, rbx
0x1aaea:	call	0x20a0


0x1aad2:	mov	r12, rsi
0x1aad5:	mov	rsi, rdx
0x1aad8:	mov	rbp, rdx
0x1aadb:	mov	rdi, r12
0x1aade:	call	0x18650


0x1da0:	jmp	qword ptr [rip + 0x21f062]


0x1cd0:	jmp	qword ptr [rip + 0x21f0ca]


0x18a0d:	mov	edi, 1
0x18a12:	jmp	0x188a3


0x188a1:	xor	edi, edi
0x188a3:	test	rax, rax
0x188a6:	js	0x18980


0x18830:	lea	rcx, [rdi + 0x18]
0x18834:	mov	rdi, rcx
0x18837:	call	0x1ee0


0x1880c:	mov	qword ptr [rdi], rsi
0x1880f:	movzx	eax, byte ptr [rbx + 0x10]
0x18813:	mov	qword ptr [rbp + 8], rdx
0x18817:	test	al, al
0x18819:	mov	byte ptr [rbp + 0x10], al
0x1881c:	je	0x18824


0x1f00:	jmp	qword ptr [rip + 0x21efb2]


0x1f50:	jmp	qword ptr [rip + 0x21ef8a]


0x1fa0:	jmp	qword ptr [rip + 0x21ef62]


0x1cc0:	jmp	qword ptr [rip + 0x21f0d2]


0x18657:	jmp	0x1869c


0x1866c:	movzx	eax, byte ptr [rdi]
0x1866f:	mov	edx, eax
0x18671:	lea	ecx, [rax + 0x20]
0x18674:	sub	edx, 0x41
0x18677:	cmp	dl, 0x1a
0x1867a:	movzx	edx, byte ptr [rsi]
0x1867d:	cmovb	eax, ecx
0x18680:	mov	ecx, edx
0x18682:	lea	r9d, [rdx + 0x20]
0x18686:	sub	ecx, 0x41
0x18689:	cmp	cl, 0x1a
0x1868c:	cmovb	edx, r9d
0x18690:	test	al, al
0x18692:	jne	0x18660


0x18605:	and	byte ptr [rdi + 0x38], 0xf9
0x18609:	mov	qword ptr [rsi], 0
0x18610:	mov	qword ptr [rsi + 0x10], 0
0x18618:	mov	qword ptr [rsi + 8], 0
0x18620:	ret	


0x18628:	movzx	eax, byte ptr [rdi + 0x38]
0x1862c:	and	eax, 0xfffffff9
0x1862f:	or	eax, 2
0x18632:	mov	byte ptr [rdi + 0x38], al
0x18635:	mov	qword ptr [rsi], rdx
0x18638:	mov	qword ptr [rsi + 8], rcx
0x1863c:	mov	qword ptr [rsi + 0x10], r8
0x18640:	ret	


0x184ed:	push	r13
0x184ef:	push	r12
0x184f1:	mov	r13, rdx
0x184f4:	push	rbp
0x184f5:	push	rbx
0x184f6:	mov	r12, rcx
0x184f9:	mov	ebx, r8d
0x184fc:	mov	rbp, rdi
0x184ff:	sub	rsp, 0x18
0x18503:	test	r8b, 4
0x18507:	jne	0x18558


0x18578:	mov	eax, 2
0x1857d:	ret	


0x184a1:	mov	rdi, qword ptr [rbx + 0x20]
0x184a5:	mov	qword ptr [rbx], 0
0x184ac:	mov	qword ptr [rbx + 8], 0
0x184b4:	call	0x1c60


0x1849c:	call	0xbc80


0x1840f:	lea	rax, [rip + 0x490a]
0x18416:	movsxd	rdi, edi
0x18419:	lea	rsi, [rip + 0x49a0]
0x18420:	mov	rbp, rdx
0x18423:	mov	edx, 5
0x18428:	mov	r12, rcx
0x1842b:	add	rsi, qword ptr [rax + rdi*8]
0x1842f:	xor	edi, edi
0x18431:	call	0x1d80


0x18470:	call	0x1c70


0x1f20:	jmp	qword ptr [rip + 0x21efa2]


0x18207:	test	rbx, rbx
0x1820a:	js	0x182d0


0x182d0:	mov	rbx, -2
0x182d7:	jmp	0x1826a


0x180b0:	mov	r12, -1
0x180b7:	jmp	0x17e82


0x17d7a:	cmp	rcx, rdx
0x17d7d:	jg	0x180b0


0x17cbd:	mov	rcx, rbp
0x17cc0:	mov	rdi, rbx
0x17cc3:	mov	rsi, qword ptr [r12 + 0x48]
0x17cc8:	lea	rdx, [rsi + 0x18]
0x17ccc:	add	rsi, 0x10
0x17cd0:	call	0x101d0


0x17cba:	rep stosq	qword ptr [rdi], rax


0x17966:	mov	rdi, rbx
0x17969:	mov	esi, 0xe8
0x1796e:	call	0x1f90


0x16b72:	lea	rdi, [rbx + 8]
0x16b76:	mov	rax, qword ptr [rsp + 8]
0x16b7b:	mov	rcx, rbx
0x16b7e:	and	rdi, 0xfffffffffffffff8
0x16b82:	sub	rcx, rdi
0x16b85:	mov	qword ptr [rax + 0x10], 0xe8
0x16b8d:	xor	eax, eax
0x16b8f:	add	ecx, 0xe8
0x16b95:	mov	qword ptr [rbx], 0
0x16b9c:	mov	qword ptr [rbx + 0xe0], 0
0x16ba7:	shr	ecx, 3
0x16baa:	rep stosq	qword ptr [rdi], rax


0x15358:	mov	rbp, rsi
0x1535b:	lea	rsi, [rip + 0x77fe]
0x15362:	movzx	edx, cl
0x15365:	mov	r14, rdi
0x15368:	movsxd	rax, dword ptr [rsi + rdx*4]
0x1536c:	add	rax, rsi
0x1536f:	jmp	rax


0x15410:	mov	qword ptr [rsp + 0x28], 0
0x15419:	nop	dword ptr [rax]
0x15420:	mov	rdi, qword ptr [rsp + 0x118]
0x15428:	xor	rdi, qword ptr fs:[0x28]
0x15431:	mov	rax, qword ptr [rsp + 0x28]
0x15436:	jne	0x167ae


0x14c10:	mov	byte ptr [rdi + 8], 2
0x14c14:	mov	rdi, qword ptr [rsp + 0x28]
0x14c19:	xor	rdi, qword ptr fs:[0x28]
0x14c22:	jne	0x15248


0x14b7f:	movzx	r13d, byte ptr [rdi + 0xa]
0x14b84:	mov	r15, rdx
0x14b87:	mov	rdx, qword ptr [rsi + 8]
0x14b8b:	mov	rbx, rsi
0x14b8e:	movzx	r12d, byte ptr [rdx + r14]
0x14b93:	and	r13d, 0xffffff9f
0x14b97:	mov	byte ptr [rdi + 0xa], r13b
0x14b9b:	mov	eax, dword ptr [rsi + 0x90]
0x14ba1:	mov	byte ptr [rdi], r12b
0x14ba4:	cmp	eax, 1
0x14ba7:	jle	0x14c40


0x14978:	movzx	eax, byte ptr [rbp + 8]
0x1497c:	add	r11, r12
0x1497f:	mov	qword ptr [r10 + 0x48], r11
0x14983:	mov	edx, eax
0x14985:	and	edx, 0xfffffffb
0x14988:	cmp	dl, 0x1a
0x1498b:	je	0x149b0


0x14925:	mov	rsi, r12
0x14928:	mov	rdi, r10
0x1492b:	call	0xbea0


0x14358:	lea	r14, [rbp*8]
0x14360:	add	r14, qword ptr [rsi]
0x14363:	test	rcx, rcx
0x14366:	jne	0x14420


0x14109:	lea	rdi, [rdx + 8]
0x1410d:	test	rcx, rcx
0x14110:	mov	qword ptr [rsp + 0x10], rdi
0x14115:	jne	0x14168


0x129db:	rep stosq	qword ptr [rdi], rax


0x1248a:	mov	qword ptr [r14], rdx
0x1248d:	mov	rbp, rdx
0x12490:	mov	qword ptr [rsi + 0xc0], r12
0x12497:	cmp	qword ptr [r15 + 0x98], 0
0x1249f:	jne	0x125c8


0x124d0:	mov	rax, qword ptr [r14]
0x124d3:	test	rax, rax
0x124d6:	je	0x125b8


0x11ec0:	xor	eax, eax
0x11ec2:	nop	word ptr [rax + rax]
0x11ec8:	mov	rbx, qword ptr [rsp + 0xa8]
0x11ed0:	xor	rbx, qword ptr fs:[0x28]
0x11ed9:	jne	0x1242c


0x11b98:	lea	rax, [r15*8]
0x11ba0:	mov	r14, rdi
0x11ba3:	mov	qword ptr [rsp], 0
0x11bab:	mov	qword ptr [rsp + 8], r15
0x11bb0:	mov	qword ptr [rsp + 0x60], rax
0x11bb5:	lea	rax, [rsp + 0x90]
0x11bbd:	mov	qword ptr [rsp + 0x68], rax
0x11bc2:	lea	rax, [rsp + 0x8c]
0x11bca:	mov	qword ptr [rsp + 0x78], rax
0x11bcf:	jmp	0x11c17


0x118bd:	mov	qword ptr [rbp - 0x88], 0
0x118c8:	jmp	0x1113d


0x1111b:	mov	edi, 0x60
0x11120:	call	0x1f20


0x109dc:	mov	rax, qword ptr [rsp + 0x60]
0x109e1:	mov	rdx, qword ptr [r15 + 0xb8]
0x109e8:	mov	rcx, qword ptr [r15 + 0x48]
0x109ec:	mov	r12, qword ptr [rax]
0x109ef:	mov	r14, qword ptr [rax + 0x10]
0x109f3:	mov	qword ptr [rsp + 0x68], rdx
0x109f8:	mov	qword ptr [rsp + 0x70], rcx
0x109fd:	mov	edx, dword ptr [r15 + 0xa0]
0x10a04:	test	r12, r12
0x10a07:	mov	qword ptr [r15 + 0xb8], r14
0x10a0e:	je	0x10df0


0x10ff6:	lea	r12, [rax + 1]
0x10ffa:	movabs	rax, 0x7fffffffffffffff
0x11004:	sub	rax, r13
0x11007:	cmp	rax, r12
0x1100a:	jl	0x1107b


0x10830:	mov	rdx, qword ptr [rcx + 8]
0x10834:	lea	rsi, [rdx + r8]
0x10838:	movzx	eax, byte ptr [rsi]
0x1083b:	cmp	al, 0xc1
0x1083d:	jbe	0x107f0


0x10721:	cmp	dword ptr [rcx + 0x90], 1
0x10728:	je	0x107f0


0x1021c:	mov	rax, qword ptr [rsp + 0x30]
0x10221:	mov	rax, qword ptr [rax + 0x18]
0x10225:	mov	rbx, rax
0x10228:	mov	qword ptr [rsp], rax
0x1022c:	shr	rbx, 0x16
0x10230:	and	ebx, 1
0x10233:	mov	rax, qword ptr [rsp + 0x20]
0x10238:	cmp	qword ptr [rax], 0
0x1023c:	jle	0x1064d


0x10233:	mov	rax, qword ptr [rsp + 0x20]
0x10238:	cmp	qword ptr [rax], 0
0x1023c:	jle	0x1064d


0x1ec0:	jmp	qword ptr [rip + 0x21efd2]


0xf798:	mov	rcx, qword ptr [r13]
0xf79c:	cmp	qword ptr [r8], rcx
0xf79f:	mov	rax, qword ptr [rdx]
0xf7a2:	je	0xf8b9


0xf773:	lea	rdi, [rip + 0xcfcd]
0xf77a:	mov	ecx, 6
0xf77f:	mov	rsi, r9
0xf782:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xf6d5:	lea	rcx, [rip + 0xd5c4]
0xf6dc:	lea	rsi, [rip + 0xcfed]
0xf6e3:	lea	rdi, [rip + 0xd04e]
0xf6ea:	mov	edx, 0x555
0xf6ef:	call	0x1e30


0xf673:	lea	rbx, [rax + rax*2]
0xf677:	mov	rax, qword ptr [rsi]
0xf67a:	mov	r12, rsi
0xf67d:	shl	rcx, 4
0xf681:	mov	rbp, r9
0xf684:	mov	rdi, r8
0xf687:	shl	rbx, 4
0xf68b:	add	rax, rbx
0xf68e:	mov	rsi, qword ptr [rax]
0xf691:	mov	qword ptr [rdx], rsi
0xf694:	mov	rsi, qword ptr [rax + 0x10]
0xf698:	mov	rdx, rcx
0xf69b:	call	0x1ee0


0xf652:	pop	rbx
0xf653:	mov	rdi, qword ptr [rbp + 0x10]
0xf657:	pop	rbp
0xf658:	pop	r12
0xf65a:	jmp	0x1c60


0xf61d:	xor	ebx, ebx
0xf61f:	xor	r12d, r12d
0xf622:	nop	word ptr [rax + rax]
0xf628:	mov	rax, qword ptr [rbp + 0x10]
0xf62c:	add	r12, 1
0xf630:	mov	rdi, qword ptr [rax + rbx + 0x28]
0xf635:	call	0x1c60


0xf5e8:	mov	rax, qword ptr [rsi + 8]
0xf5ec:	mov	rdx, qword ptr [rax + 0x18]
0xf5f0:	mov	rax, qword ptr [rax + 0x38]
0xf5f4:	mov	qword ptr [rsi + 0x18], rdx
0xf5f8:	mov	qword ptr [rsi + 0x38], rax
0xf5fc:	xor	eax, eax
0xf5fe:	ret	


0xf586:	push	rbp
0xf587:	push	rbx
0xf588:	mov	rbx, rsi
0xf58b:	mov	rbp, rdi
0xf58e:	sub	rsp, 8
0xf592:	mov	qword ptr [rbx + 0x18], rsi
0xf596:	mov	rdx, qword ptr [rbx + 0x30]
0xf59a:	mov	rsi, qword ptr [rsi + 0x28]
0xf59e:	call	0xb6f0


0xe9d2:	xor	edi, edi
0xe9d4:	jmp	0xe991


0xe7f1:	lea	rax, [rsp + 0x20]
0xe7f6:	mov	r12, rdi
0xe7f9:	mov	r13, rsi
0xe7fc:	xor	ebx, ebx
0xe7fe:	mov	qword ptr [rsp + 0x18], rax
0xe803:	jmp	0xe85d


0xe096:	test	rbp, rbp
0xe099:	je	0xe0fe


0xe036:	cmp	dword ptr [rdi + 0x90], 1
0xe03d:	jg	0xe170


0xdee8:	mov	r8, qword ptr [rsi]
0xdeeb:	movzx	eax, cl
0xdeee:	sar	rax, 6
0xdef2:	mov	r8, qword ptr [r8 + rax*8]
0xdef6:	xor	eax, eax
0xdef8:	bt	r8, rcx
0xdefc:	jb	0xde70


0xde34:	jbe	0xded0


0xdd90:	mov	eax, dword ptr [rbp + 0x70]
0xdd93:	add	rsp, 8
0xdd97:	pop	rbx
0xdd98:	pop	rbp
0xdd99:	ret	


0xdd3e:	cmp	qword ptr [rdi + 0x58], rsi
0xdd42:	je	0xdde8


0xdcc0:	xor	eax, eax
0xdcc2:	add	rsp, 0x28
0xdcc6:	pop	rbx
0xdcc7:	pop	rbp
0xdcc8:	pop	r12
0xdcca:	pop	r13
0xdccc:	pop	r14
0xdcce:	pop	r15
0xdcd0:	ret	


0xdbff:	mov	r14, rdx
0xdc02:	mov	r12, rsi
0xdc05:	mov	r15, rdi
0xdc08:	xor	ebx, ebx
0xdc0a:	jmp	0xdc1e


0xd882:	lea	rax, [rsi + rdx]
0xd886:	mov	r8, qword ptr [rbx + 0xd8]
0xd88d:	mov	rcx, rax
0xd890:	shr	rcx, 0x3f
0xd894:	add	rcx, rax
0xd897:	sar	rcx, 1
0xd89a:	lea	rax, [rcx + rcx*4]
0xd89e:	cmp	r12, qword ptr [r8 + rax*8 + 8]
0xd8a3:	jle	0xd8d2


0xd8d7:	cmp	rdi, rsi
0xd8da:	jle	0xd8fd


0xd816:	xor	eax, eax
0xd818:	mov	rcx, qword ptr [rsp + 0x38]
0xd81d:	xor	rcx, qword ptr fs:[0x28]
0xd826:	jne	0xd837


0xd787:	lea	rax, [rsp + 0x1c]
0xd78c:	mov	r14, rdi
0xd78f:	mov	rbx, rsi
0xd792:	mov	r12, rdx
0xd795:	mov	rbp, rcx
0xd798:	xor	r15d, r15d
0xd79b:	lea	r13, [rsp + 0x20]
0xd7a0:	mov	qword ptr [rsp + 8], rax
0xd7a5:	jmp	0xd7fc


0xd750:	mov	dword ptr [rdi], 0
0xd756:	xor	ebx, ebx
0xd758:	jmp	0xd6ef


0xd57b:	test	rbp, rbp
0xd57e:	jle	0xd59c


0xd53f:	mov	dword ptr [rdi], 0
0xd545:	xor	r14d, r14d
0xd548:	jmp	0xd34c


0xd2bb:	mov	r8d, ecx
0xd2be:	test	r10, r10
0xd2c1:	lea	r12, [r8 + r10]
0xd2c5:	jle	0xd2dc


0xd1f5:	test	rdx, rdx
0xd1f8:	je	0xd201


0xd151:	test	rdx, rdx
0xd154:	mov	r13, qword ptr [rsi + 8]
0xd158:	je	0xd1f0


0xd100:	pxor	xmm0, xmm0
0xd104:	mov	qword ptr [rdi + 0x10], 0
0xd10c:	xor	eax, eax
0xd10e:	movups	xmmword ptr [rdi], xmm0
0xd111:	pop	rbx
0xd112:	pop	rbp
0xd113:	pop	r12
0xd115:	ret	


0xd0c5:	mov	rbx, rdi
0xd0c8:	mov	qword ptr [rdi], rax
0xd0cb:	lea	rdi, [rax*8]
0xd0d3:	mov	rbp, rsi
0xd0d6:	call	0x1f20


0xd043:	mov	rdx, qword ptr [rbx + 0x10]
0xd047:	test	rdx, rdx
0xd04a:	je	0xd052


0xd03d:	cmp	byte ptr [rdx + 0x30], 0x11
0xd041:	je	0xd090


0xcf78:	lea	rax, [rbx + 0x70]
0xcf7c:	lea	r14, [rsp + 0x20]
0xcf81:	sub	rbx, -0x80
0xcf85:	xor	ecx, ecx
0xcf87:	xor	edx, edx
0xcf89:	mov	rsi, rbx
0xcf8c:	mov	r15, rax
0xcf8f:	mov	r8, r14
0xcf92:	mov	rdi, rax
0xcf95:	mov	byte ptr [rsp + 0x28], 8
0xcf9a:	mov	qword ptr [rsp + 8], rax
0xcf9f:	call	0xcc10


0xce07:	test	rbp, rbp
0xce0a:	je	0xce80


0xcc98:	mov	edi, 0x3c8
0xcc9d:	mov	qword ptr [rsp + 0x18], r8
0xcca2:	mov	qword ptr [rsp + 0x10], rcx
0xcca7:	mov	qword ptr [rsp + 8], rdx
0xccac:	mov	qword ptr [rsp], rsi
0xccb0:	call	0x1f20


0xcc1f:	movsxd	r9, eax
0xcc22:	lea	r10d, [rax + 1]
0xcc26:	mov	rdi, qword ptr [rdi]
0xcc29:	mov	rax, r9
0xcc2c:	shl	rax, 6
0xcc30:	add	rax, 8
0xcc34:	shl	r9, 6
0xcc38:	mov	dword ptr [rsi], r10d
0xcc3b:	add	rax, rdi
0xcc3e:	lea	rsi, [rdi + r9]
0xcc42:	mov	qword ptr [rsi + 8], 0
0xcc4a:	mov	qword ptr [rsi + 0x10], rdx
0xcc4e:	lea	rdi, [rsi + 0x20]
0xcc52:	mov	qword ptr [rsi + 0x18], rcx
0xcc56:	movdqu	xmm0, xmmword ptr [r8]
0xcc5b:	movups	xmmword ptr [rsi + 0x30], xmm0
0xcc5f:	and	byte ptr [rdi + 0x1a], 0xf3
0xcc63:	test	rdx, rdx
0xcc66:	mov	qword ptr [rsi + 0x20], 0
0xcc6e:	mov	qword ptr [rsi + 0x28], 0
0xcc76:	mov	qword ptr [rsi + 0x40], -1
0xcc7e:	je	0xcc83


0xcb28:	ret	


0xca6f:	mov	r11, qword ptr [rdx + 8]
0xca73:	test	r11, r11
0xca76:	je	0xcb28


0xc568:	xor	eax, eax
0xc56a:	ret	


0xc479:	mov	rdx, qword ptr [rsi + 8]
0xc47d:	test	rdx, rdx
0xc480:	je	0xc568


0xc233:	lea	rax, [rbx + rbp]
0xc237:	mov	r13, qword ptr [rdi + 0xd8]
0xc23e:	mov	r10, rax
0xc241:	shr	r10, 0x3f
0xc245:	add	r10, rax
0xc248:	sar	r10, 1
0xc24b:	lea	rax, [r10 + r10*4]
0xc24f:	cmp	r8, qword ptr [r13 + rax*8 + 8]
0xc254:	jle	0xc286


0xc28b:	cmp	r15, rbx
0xc28e:	jle	0xc430


0xc1f0:	mov	qword ptr [rdx + 0x20], rsi
0xc1f4:	xor	eax, eax
0xc1f6:	ret	


0xc1ac:	cmp	al, 0x10
0xc1ae:	je	0xc1d8


0xc170:	mov	rax, qword ptr [rdi + 0xe0]
0xc177:	test	rax, rax
0xc17a:	je	0xc11c


0xc118:	cmp	al, 0x11
0xc11a:	je	0xc120


0xc102:	ret	


0xc0d8:	sub	rax, 1
0xc0dc:	cmp	rdx, rax
0xc0df:	mov	qword ptr [rdi], rax
0xc0e2:	jge	0xc102


0xbf95:	ret	


0xbf57:	mov	r8, qword ptr [rsi]
0xbf5a:	sub	rdi, 1
0xbf5e:	xor	esi, esi
0xbf60:	cmp	rsi, rdi
0xbf63:	jae	0xbf8d


0xbf00:	lea	rax, [rdx - 1]
0xbf04:	lea	rdx, [rax*8]
0xbf0c:	jmp	0xbf2d


0xbefc:	ret	


0xbead:	mov	rdx, qword ptr [rdi + 0x10]
0xbeb1:	lea	rdi, [rax*4]
0xbeb9:	cmp	dword ptr [rdx + rax*4], -1
0xbebd:	jne	0xbee8


0xbee8:	mov	eax, 1
0xbeed:	ret	


0xbe79:	pop	rbx
0xbe7a:	mov	qword ptr [r14 + 0xe8], 0
0xbe85:	mov	qword ptr [r14 + 0xc8], 0
0xbe90:	pop	rbp
0xbe91:	pop	r12
0xbe93:	pop	r13
0xbe95:	pop	r14
0xbe97:	ret	


0xbdf9:	xor	r13d, r13d
0xbdfc:	nop	dword ptr [rax]
0xbe00:	mov	rax, qword ptr [r14 + 0xf8]
0xbe07:	mov	r12, qword ptr [rax + r13*8]
0xbe0b:	cmp	qword ptr [r12 + 0x20], 0
0xbe11:	jle	0xbe3d


0xbcbe:	mov	rdi, qword ptr [r12 + 0x18]
0xbcc3:	call	0x1c60


0xbc93:	cmp	qword ptr [r12 + 0x10], 0
0xbc99:	je	0xbcbe


0x1c60:	jmp	qword ptr [rip + 0x21f102]


0xbb50:	mov	rax, qword ptr [r14 + 0x18]
0xbb54:	lea	rbx, [r13 + r13*2]
0xbb59:	lea	r15, [r9*8]
0xbb61:	mov	edx, ebp
0xbb63:	shl	rbx, 3
0xbb67:	mov	r9, qword ptr [rax + r9*8]
0xbb6b:	mov	qword ptr [rdi + rbx + 8], 0
0xbb74:	mov	rdi, r14
0xbb77:	mov	rsi, r9
0xbb7a:	mov	qword ptr [rsp], r9
0xbb7e:	call	0xb8c0


0xb99d:	lea	r12, [r9 + r9*2]
0xb9a1:	shl	r12, 3
0xb9a5:	lea	rsi, [rdi + r12]
0xb9a9:	mov	rcx, qword ptr [rsi + 8]
0xb9ad:	test	rcx, rcx
0xb9b0:	je	0xbba9


0xb715:	mov	r12, qword ptr [rdi + 0x18]
0xb719:	mov	rbp, qword ptr [rdi + 0x28]
0xb71d:	mov	rax, rsi
0xb720:	mov	ecx, edx
0xb722:	shl	rax, 4
0xb726:	add	rax, qword ptr [rbx]
0xb729:	and	ecx, 0xfffc00ff
0xb72f:	mov	qword ptr [rax + 8], rdx
0xb733:	mov	dword ptr [rax + 8], ecx
0xb736:	xor	ecx, ecx
0xb738:	cmp	dl, 6
0xb73b:	mov	qword ptr [rax], r14
0xb73e:	sete	cl
0xb741:	cmp	dl, 5
0xb744:	jne	0xb752


0xb7c0:	lea	r13, [rbp + rbp]
0xb7c5:	movabs	rax, 0xaaaaaaaaaaaaaaa
0xb7cf:	cmp	r13, rax
0xb7d2:	ja	0xb8b2


0xb6c0:	mov	rdi, qword ptr [rdi]
0xb6c3:	jmp	0xb670


0xb6ad:	cmp	eax, 3
0xb6b0:	je	0xb6b8


0xb5fa:	cmp	rax, qword ptr [rdi + 0x58]
0xb5fe:	jge	0xb620


0xb620:	mov	rax, qword ptr [rbx + 0x30]
0xb624:	cmp	rax, rbp
0xb627:	jg	0xb60f


0xb4ad:	mov	rdx, qword ptr [rdi + 0x58]
0xb4b1:	add	rax, rax
0xb4b4:	movsxd	rsi, esi
0xb4b7:	mov	rbx, rdi
0xb4ba:	cmp	rax, rdx
0xb4bd:	cmovg	rax, rdx
0xb4c1:	cmp	rax, rsi
0xb4c4:	cmovge	rsi, rax
0xb4c8:	call	0xa900


0xb5b8:	mov	ebp, 0xc
0xb5bd:	add	rsp, 8
0xb5c1:	mov	eax, ebp
0xb5c3:	pop	rbx
0xb5c4:	pop	rbp
0xb5c5:	ret	


0xaeb1:	cmp	qword ptr [rdi + 0x78], 0
0xaeb6:	je	0xb040


0xaebc:	mov	r13, qword ptr [r14 + 0x38]
0xaec0:	cmp	r15, rbx
0xaec3:	jl	0xaf00


0xad64:	mov	rax, qword ptr [rsp + 0x58]
0xad69:	xor	rax, qword ptr fs:[0x28]
0xad72:	mov	qword ptr [rbx + 0x30], rbp
0xad76:	mov	qword ptr [rbx + 0x38], rbp
0xad7a:	jne	0xae5e


0xacdb:	lea	r14, [rdi + 0x20]
0xacdf:	lea	r13, [rsp + 0xc]
0xace4:	nop	dword ptr [rax]
0xace8:	mov	rdi, qword ptr [rbx + 0x78]
0xacec:	mov	rdx, r12
0xacef:	mov	r15, qword ptr [rbx + 0x20]
0xacf3:	sub	rdx, rbp
0xacf6:	test	rdi, rdi
0xacf9:	jne	0xade0


0xac85:	mov	qword ptr [rbp + 0x30], rbx
0xac89:	mov	qword ptr [rbp + 0x38], rbx
0xac8d:	pop	rbx
0xac8e:	pop	rbp
0xac8f:	pop	r12
0xac91:	ret	


0xac4d:	call	0x1c50


0xaa48:	mov	qword ptr [rdi], 1
0xaa4f:	mov	qword ptr [rdi + 8], 1
0xaa57:	mov	edi, 8
0xaa5c:	call	0x1f20


0xaa24:	mov	rsi, qword ptr [rdi + 8]
0xaa28:	mov	rax, qword ptr [rdi + 0x10]
0xaa2c:	test	rsi, rsi
0xaa2f:	jne	0xaa80


0xa9d8:	add	rsi, 1
0xa9dc:	lea	rdx, [rsi + rsi]
0xa9e0:	shl	rsi, 4
0xa9e4:	mov	qword ptr [rdi], rdx
0xa9e7:	mov	rdi, rax
0xa9ea:	call	0x1f90


0xa9b9:	lea	rdx, [rsi + 1]
0xa9bd:	mov	qword ptr [rbx + 8], rdx
0xa9c1:	mov	qword ptr [rax + rsi*8], rbp
0xa9c5:	mov	eax, 1
0xa9ca:	add	rsp, 8
0xa9ce:	pop	rbx
0xa9cf:	pop	rbp
0xa9d0:	ret	


0xa95d:	cmp	byte ptr [rbx + 0x8b], 0
0xa964:	jne	0xa978


0xa915:	movabs	rax, 0x1fffffffffffffff
0xa91f:	cmp	rsi, rax
0xa922:	ja	0xa990


0xa8b3:	mov	rsi, rbx
0xa8b6:	mov	rdi, rbp
0xa8b9:	call	r12


0xa843:	mov	rax, qword ptr [rbx + 8]
0xa847:	test	rax, rax
0xa84a:	jne	0xa840


0xa7d8:	mov	rax, qword ptr [rax + 0x18]
0xa7dc:	cmp	rax, r8
0xa7df:	jl	0xa800


0xa820:	mov	eax, 0xffffffff
0xa825:	ret	


0xa755:	add	rsp, 0x48
0xa759:	mov	eax, r15d
0xa75c:	pop	rbx
0xa75d:	sar	eax, 1
0xa75f:	pop	rbp
0xa760:	pop	r12
0xa762:	pop	r13
0xa764:	pop	r14
0xa766:	pop	r15
0xa768:	ret	


0xa5c7:	lea	rax, [r8 + r8*4]
0xa5cb:	mov	r11, rcx
0xa5ce:	mov	ecx, r9d
0xa5d1:	mov	r10, r8
0xa5d4:	xor	ebx, ebx
0xa5d6:	mov	dword ptr [rsp + 0x20], esi
0xa5da:	shl	rax, 3
0xa5de:	mov	r15, r9
0xa5e1:	mov	qword ptr [rsp + 0x10], r11
0xa5e6:	mov	qword ptr [rsp + 0x28], rax
0xa5eb:	mov	eax, 1
0xa5f0:	shl	rax, cl
0xa5f3:	mov	qword ptr [rsp + 0x18], rax
0xa5f8:	not	eax
0xa5fa:	mov	word ptr [rsp + 0x26], ax
0xa5ff:	mov	eax, esi
0xa601:	and	eax, 1
0xa604:	mov	dword ptr [rsp + 0xc], eax
0xa608:	mov	eax, esi
0xa60a:	and	eax, 2
0xa60d:	mov	dword ptr [rsp + 8], eax
0xa611:	jmp	0xa635


0xa580:	cmp	rdi, qword ptr [rsi + 0x28]
0xa584:	jne	0xa576


0xa576:	xor	eax, eax
0xa578:	ret	


0xa4a0:	mov	byte ptr [rdi + 8], 2
0xa4a4:	xor	eax, eax
0xa4a6:	ret	


0xa44a:	mov	r8, qword ptr [rsi + 8]
0xa44e:	cmp	dword ptr [rsi + 0x90], 1
0xa455:	movzx	ecx, byte ptr [r8 + rax]
0xa45a:	mov	byte ptr [rdi], cl
0xa45c:	jle	0xa473


0x1dd0:	jmp	qword ptr [rip + 0x21f04a]


0xa360:	mov	rax, qword ptr [rdi + 0x20]
0xa364:	cmp	qword ptr [rdi + 0x28], rax
0xa368:	jne	0xa35a


0xa35a:	jmp	0x2020


0xa32a:	mov	rdi, rbx
0xa32d:	pop	rbx
0xa32e:	jmp	0x1f40


0xa319:	call	0x1f70


0x1ef0:	jmp	qword ptr [rip + 0x21efba]


0x9bf7:	lea	rax, [rsp + 0x10]
0x9bfc:	test	rsi, rsi
0x9bff:	mov	rbx, rsi
0x9c02:	mov	r12, rdi
0x9c05:	mov	ebp, edx
0x9c07:	mov	r14, rcx
0x9c0a:	cmove	rbx, rax
0x9c0e:	mov	r15, r8
0x9c11:	call	0x1c80


0xa25f:	lea	rcx, [rip + 0x1245a]
0xa266:	lea	rsi, [rip + 0x12333]
0xa26d:	lea	rdi, [rip + 0x1234c]
0xa274:	mov	edx, 0x54
0xa279:	call	0x1e30


0x1d80:	jmp	qword ptr [rip + 0x21f072]


0x9ab9:	call	0x9b10


0x9aa2:	movzx	edx, dl
0x9aa5:	test	rdx, rdx
0x9aa8:	jne	0x9ab9


0x9a50:	test	rax, rax
0x9a53:	mov	edx, 0x80
0x9a58:	cmove	rax, rdx
0x9a5c:	test	rax, rax
0x9a5f:	jns	0x9a42


0x9a28:	movabs	rdx, 0x5555555555555553
0x9a32:	cmp	rax, rdx
0x9a35:	ja	0x9a61


0x99d0:	test	rcx, rcx
0x99d3:	je	0x99f8


0x999b:	xor	edx, edx
0x999d:	movabs	rax, 0x5555555555555554
0x99a7:	div	r9
0x99aa:	cmp	rax, rcx
0x99ad:	jbe	0x99eb


0x997b:	sub	rsp, 8
0x997f:	call	0x9b10


0x9971:	movzx	eax, al
0x9974:	test	rax, rax
0x9977:	jne	0x997b


0x9929:	test	rdi, rdi
0x992c:	jne	0x9948


0x992e:	mov	rsi, rbx
0x9931:	call	0x1f90


0x98fb:	sub	rsp, 8
0x98ff:	call	0x9b10


0x98f1:	movzx	eax, al
0x98f4:	test	rax, rax
0x98f7:	jne	0x98fb


0x97d6:	mov	eax, r10d
0x97d9:	mov	r11d, 1
0x97df:	add	r10d, 8
0x97e3:	add	rax, rbp
0x97e6:	mov	rax, qword ptr [rax]
0x97e9:	test	rax, rax
0x97ec:	mov	qword ptr [r8 + r9*8], rax
0x97f0:	je	0x97fc


0x982c:	mov	rax, rbx
0x982f:	add	rbx, 8
0x9833:	jmp	0x97e6


0x9708:	mov	r11d, eax
0x970b:	add	r11, qword ptr [r10 + 0x10]
0x970f:	add	eax, 8
0x9712:	mov	dword ptr [r10], eax
0x9715:	mov	rax, qword ptr [r11]
0x9718:	test	rax, rax
0x971b:	mov	qword ptr [r8 + r9*8], rax
0x971f:	je	0x972b


0x974a:	mov	r11, qword ptr [r10 + 8]
0x974e:	lea	rax, [r11 + 8]
0x9752:	mov	qword ptr [r10 + 8], rax
0x9756:	jmp	0x9715


0x96db:	jmp	0x92a0


0x93d8:	mov	r8, rcx
0x93db:	mov	rcx, rdx
0x93de:	lea	rdx, [rip + 0x12e49]
0x93e5:	mov	esi, 1
0x93ea:	xor	eax, eax
0x93ec:	call	0x2090


0x92c0:	mov	r8, rdx
0x92c3:	lea	rdx, [rip + 0x12f58]
0x92ca:	mov	r9, rcx
0x92cd:	xor	eax, eax
0x92cf:	mov	rcx, rsi
0x92d2:	mov	esi, 1
0x92d7:	call	0x2090


0x20a0:	jmp	qword ptr [rip + 0x21eee2]


0x1e80:	jmp	qword ptr [rip + 0x21eff2]


0x2030:	jmp	qword ptr [rip + 0x21ef1a]


0x88d7:	call	0x1c70


0x88a5:	test	rdx, rdx
0x88a8:	je	0x88d7


0x8844:	call	0x1c70


0x87dc:	mov	dword ptr [rsp], esi
0x87df:	mov	rcx, rsp
0x87e2:	mov	rdx, -1
0x87e9:	mov	rsi, rax
0x87ec:	mov	qword ptr [rsp + 4], 0
0x87f5:	mov	qword ptr [rsp + 0xc], 0x4000000
0x87fe:	mov	qword ptr [rsp + 0x14], 0
0x8807:	mov	qword ptr [rsp + 0x1c], 0
0x8810:	mov	qword ptr [rsp + 0x24], 0
0x8819:	mov	qword ptr [rsp + 0x2c], 0
0x8822:	mov	dword ptr [rsp + 0x34], 0
0x882a:	call	0x8050


0x86b0:	call	0x1c70


0x864f:	mov	dword ptr [rsp], esi
0x8652:	mov	rcx, rsp
0x8655:	mov	rsi, rax
0x8658:	mov	qword ptr [rsp + 4], 0
0x8661:	mov	qword ptr [rsp + 0xc], 0
0x866a:	mov	qword ptr [rsp + 0x14], 0
0x8673:	mov	qword ptr [rsp + 0x1c], 0
0x867c:	mov	qword ptr [rsp + 0x24], 0
0x8685:	mov	qword ptr [rsp + 0x2c], 0
0x868e:	mov	dword ptr [rsp + 0x34], 0
0x8696:	call	0x8050


0x8624:	call	0x1c70


0x85bc:	mov	dword ptr [rsp], esi
0x85bf:	mov	rcx, rsp
0x85c2:	mov	rdx, -1
0x85c9:	mov	rsi, rax
0x85cc:	mov	qword ptr [rsp + 4], 0
0x85d5:	mov	qword ptr [rsp + 0xc], 0
0x85de:	mov	qword ptr [rsp + 0x14], 0
0x85e7:	mov	qword ptr [rsp + 0x1c], 0
0x85f0:	mov	qword ptr [rsp + 0x24], 0
0x85f9:	mov	qword ptr [rsp + 0x2c], 0
0x8602:	mov	dword ptr [rsp + 0x34], 0
0x860a:	call	0x8050


0x84d1:	mov	rdi, qword ptr [r12 + 8]
0x84d6:	lea	rbx, [rip + 0x2193e3]
0x84dd:	cmp	rdi, rbx
0x84e0:	je	0x84f9


0x84a6:	sub	eax, 2
0x84a9:	lea	rbx, [r12 + 0x18]
0x84ae:	shl	rax, 4
0x84b2:	lea	rbp, [r12 + rax + 0x28]
0x84b7:	nop	word ptr [rax + rax]
0x84c0:	mov	rdi, qword ptr [rbx]
0x84c3:	add	rbx, 0x10
0x84c7:	call	0x1c60


0x1c80:	jmp	qword ptr [rip + 0x21f0f2]


0x8307:	sub	rsp, 8
0x830b:	call	0x1c70


0x82f9:	test	rdx, rdx
0x82fc:	je	0x8307


0x600d:	mov	rcx, qword ptr [rip + 0x21b0ec]
0x6014:	lea	rdi, [rip + 0x15c35]
0x601b:	mov	edx, 0x37
0x6020:	mov	esi, 1
0x6025:	call	0x2080


0x5f96:	mov	esi, 0x2f
0x5f9b:	mov	rbx, rdi
0x5f9e:	call	0x1e10


0x2010:	jmp	qword ptr [rip + 0x21ef2a]


0x5cb1:	pop	rbx
0x5cb2:	mov	rax, r14
0x5cb5:	pop	rbp
0x5cb6:	pop	r12
0x5cb8:	pop	r13
0x5cba:	pop	r14
0x5cbc:	ret	


0x5c80:	mov	r12, rcx
0x5c83:	mov	r13, rdi
0x5c86:	mov	rbp, rdx
0x5c89:	lea	rbx, [rsi + 8]
0x5c8d:	jmp	0x5c9f


0x5ac0:	lea	rsi, [rip + 0x15ef6]
0x5ac7:	xor	edi, edi
0x5ac9:	call	0x1d80


0x5a75:	lea	rsi, [rip + 0x15f5c]
0x5a7c:	xor	edi, edi
0x5a7e:	call	0x1d80


0x553d:	lea	rsi, [rip + 0x15a14]
0x5544:	xor	edi, edi
0x5546:	call	0x1d80


0x550f:	lea	rsi, [rip + 0x15a1a]
0x5516:	xor	edi, edi
0x5518:	call	0x1d80


0x54ce:	xor	eax, eax
0x54d0:	ret	


0x5456:	push	r14
0x5458:	xor	r14d, r14d
0x545b:	push	r13
0x545d:	mov	r13, rdx
0x5460:	push	r12
0x5462:	mov	r12, rsi
0x5465:	push	rbp
0x5466:	mov	rbp, rdi
0x5469:	push	rbx
0x546a:	jmp	0x547b


0x51c0:	ret	


0x4fa9:	push	r15
0x4fab:	push	r14
0x4fad:	lea	r14, [rip + 0x16a8c]
0x4fb4:	push	r13
0x4fb6:	push	r12
0x4fb8:	lea	r13, [rip + 0x21c221]
0x4fbf:	push	rbp
0x4fc0:	push	rbx
0x4fc1:	lea	r12, [rip + 0x169c0]
0x4fc8:	mov	rbx, rdi
0x4fcb:	mov	r15, rsi
0x4fce:	sub	rsp, 0x18
0x4fd2:	nop	word ptr [rax + rax]
0x4fd8:	movzx	edx, byte ptr [rbx]
0x4fdb:	movsxd	rax, edx
0x4fde:	mov	ebp, edx
0x4fe0:	cmp	byte ptr [r13 + rax], 0
0x4fe6:	je	0x50a0


0x4f98:	ret	


0x4f55:	push	rbx
0x4f56:	mov	rbx, rdi
0x4f59:	nop	dword ptr [rax]
0x4f60:	mov	rdi, qword ptr [rip + 0x21c161]
0x4f67:	mov	rax, qword ptr [rdi + 0x28]
0x4f6b:	cmp	rax, qword ptr [rdi + 0x30]
0x4f6f:	jae	0x4f88


0x4d76:	mov	rdi, qword ptr [rip + 0x21c353]
0x4d7d:	mov	rsi, rsp
0x4d80:	call	0x89b0


0x4d6e:	cmp	byte ptr [rdi], 0
0x4d71:	mov	rbx, rdi
0x4d74:	jne	0x4db8


0x496b:	test	r8, r8
0x496e:	jle	0x499d


0x49b0:	test	r8, r8
0x49b3:	jle	0x499d


0x4909:	cmp	qword ptr [rip + 0x21c6cf], 0
0x4911:	push	rbp
0x4912:	mov	rbp, rsp
0x4915:	je	0x4923


0x4938:	ret	


0x48f0:	pop	rbp
0x48f1:	ret	


0x48d8:	mov	rax, qword ptr [rip + 0x21c6f9]
0x48df:	test	rax, rax
0x48e2:	je	0x48f0


0x48a0:	pop	rbp
0x48a1:	ret	


0x4887:	mov	rax, qword ptr [rip + 0x21c732]
0x488e:	test	rax, rax
0x4891:	je	0x48a0




0x1e30:	jmp	qword ptr [rip + 0x21f01a]


0x1c3a:	add	rsp, 8
0x1c3e:	ret	


0x1c38:	call	rax






0x1abfc:	ret	


0x1ac00:	movzx	eax, byte ptr [rdi - 1]
0x1ac04:	sub	rdi, rax
0x1ac07:	jmp	0x1c60


0x1c70:	jmp	qword ptr [rip + 0x21f0fa]






0x188a3:	test	rax, rax
0x188a6:	js	0x18980


0x18980:	xor	eax, eax
0x18982:	mov	rcx, qword ptr [rbp - 0x18]
0x18986:	xor	rcx, qword ptr fs:[0x28]
0x1898f:	jne	0x18a17


0x188ac:	test	rdi, rdi
0x188af:	jne	0x18980


0x1ee0:	jmp	qword ptr [rip + 0x21efc2]


0x18824:	add	rsp, 8
0x18828:	pop	rbx
0x18829:	pop	rbp
0x1882a:	ret	


0x1881e:	mov	eax, dword ptr [rbx + 0x14]
0x18821:	mov	dword ptr [rbp + 0x14], eax
0x18824:	add	rsp, 8
0x18828:	pop	rbx
0x18829:	pop	rbp
0x1882a:	ret	










0x1869c:	ret	


0x18694:	movzx	eax, al
0x18697:	movzx	edx, dl
0x1869a:	sub	eax, edx
0x1869c:	ret	


0x18660:	add	rdi, 1
0x18664:	add	rsi, 1
0x18668:	cmp	al, dl
0x1866a:	jne	0x18694


0x18509:	mov	rdi, rsi
0x1850c:	mov	qword ptr [rsp + 8], rsi
0x18511:	call	0x1da0


0x18558:	test	byte ptr [rbp + 0x38], 0x10
0x1855c:	mov	rcx, qword ptr [rcx]
0x1855f:	mov	rdx, qword ptr [r12 + 8]
0x18564:	jne	0x18526




0x18210:	mov	r15, rbx
0x18213:	add	r15, rbp
0x18216:	jo	0x182d0


0x1826a:	add	rsp, 0x28
0x1826e:	mov	rax, rbx
0x18271:	pop	rbx
0x18272:	pop	rbp
0x18273:	pop	r12
0x18275:	pop	r13
0x18277:	pop	r14
0x18279:	pop	r15
0x1827b:	ret	


0x17e82:	add	rsp, 0x38
0x17e86:	mov	rax, r12
0x17e89:	pop	rbx
0x17e8a:	pop	rbp
0x17e8b:	pop	r12
0x17e8d:	pop	r13
0x17e8f:	pop	r14
0x17e91:	pop	r15
0x17e93:	ret	


0x17d83:	cmp	r8, rdx
0x17d86:	mov	rbx, rcx
0x17d89:	mov	r15, rdi
0x17d8c:	jg	0x18010


0x1f90:	jmp	qword ptr [rip + 0x21ef6a]


0x16bad:	movabs	rax, 0x555555555555554
0x16bb7:	mov	dword ptr [rbx + 0x80], 0xf
0x16bc1:	cmp	qword ptr [rsp], rax
0x16bc5:	ja	0x17206


0x16baa:	rep stosq	qword ptr [rdi], rax


0x1543c:	add	rsp, 0x128
0x15443:	pop	rbx
0x15444:	pop	rbp
0x15445:	pop	r12
0x15447:	pop	r13
0x15449:	pop	r14
0x1544b:	pop	r15
0x1544d:	ret	


0x167ae:	call	0x1db0


0x14c28:	add	rsp, 0x38
0x14c2c:	pop	rbx
0x14c2d:	pop	rbp
0x14c2e:	pop	r12
0x14c30:	pop	r13
0x14c32:	pop	r14
0x14c34:	pop	r15
0x14c36:	ret	


0x15248:	call	0x1db0


0x14c40:	cmp	r12b, 0x5c
0x14c44:	je	0x14cc0


0x14bad:	cmp	r14, qword ptr [rsi + 0x30]
0x14bb1:	je	0x14d50


0x149b0:	mov	r12, qword ptr [r10 + 0x68]
0x149b4:	cmp	r11, r12
0x149b7:	jge	0x14ad8


0x1498d:	cmp	al, 0x1c
0x1498f:	je	0x149b0


0x1436c:	mov	qword ptr [r14], 0
0x14373:	xor	eax, eax
0x14375:	jmp	0x14138


0x14420:	mov	qword ptr [rsp + 0x10], 0
0x14429:	jmp	0x141c8


0x14117:	mov	rdx, qword ptr [rsi]
0x1411a:	mov	qword ptr [rdx + rbp*8], 0
0x14122:	mov	rdx, qword ptr [rax + rbp*8]
0x14126:	xor	eax, eax
0x14128:	test	byte ptr [rdx + 0x68], 0x40
0x1412c:	jne	0x1420f


0x14168:	lea	rdi, [rsp + 0x60]
0x1416d:	mov	rdx, rbx
0x14170:	mov	rsi, r12
0x14173:	mov	dword ptr [rsp + 0x60], 0
0x1417b:	call	0xd560


0x129de:	mov	rdi, qword ptr [rsi + 0x20]
0x129e2:	mov	qword ptr [rsp + 0x1b8], rbx
0x129ea:	test	rdi, rdi
0x129ed:	mov	qword ptr [rsp + 0x68], rdi
0x129f2:	je	0x12a16


0x124a5:	mov	rcx, qword ptr [rsp + 0x28]
0x124aa:	xor	rcx, qword ptr fs:[0x28]
0x124b3:	mov	rax, rbp
0x124b6:	jne	0x12627


0x125c8:	test	rbp, rbp
0x125cb:	je	0x12620


0x125b8:	mov	qword ptr [r14], rdx
0x125bb:	mov	rbp, rdx
0x125be:	jmp	0x12497


0x124dc:	test	rdx, rdx
0x124df:	mov	rax, qword ptr [rax + 0x50]
0x124e3:	je	0x12570


0x11edf:	add	rsp, 0xb8
0x11ee6:	pop	rbx
0x11ee7:	pop	rbp
0x11ee8:	pop	r12
0x11eea:	pop	r13
0x11eec:	pop	r14
0x11eee:	pop	r15
0x11ef0:	ret	


0x1242c:	call	0x1db0


0x11c17:	mov	rax, qword ptr [rsp + 0x40]
0x11c1c:	mov	rdi, qword ptr [rsp]
0x11c20:	mov	rax, qword ptr [rax]
0x11c23:	mov	r13, qword ptr [rax + rdi*8]
0x11c27:	mov	rdi, qword ptr [rsp + 0x38]
0x11c2c:	mov	rax, qword ptr [rdi]
0x11c2f:	mov	rbx, r13
0x11c32:	shl	rbx, 4
0x11c36:	add	rax, rbx
0x11c39:	cmp	byte ptr [rax + 8], 4
0x11c3d:	jne	0x11c00


0x1113d:	mov	rax, qword ptr [rbp - 0x90]
0x11144:	pxor	xmm0, xmm0
0x11148:	mov	qword ptr [rbp - 0x60], 0
0x11150:	mov	rbx, qword ptr [rax + 0x90]
0x11157:	mov	rax, qword ptr [rbp - 0x98]
0x1115e:	movaps	xmmword ptr [rbp - 0x70], xmm0
0x11162:	shl	rax, 4
0x11166:	cmp	rax, 0xfbf
0x1116c:	mov	qword ptr [rbp - 0xb8], rax
0x11173:	ja	0x11866


0x10df0:	lea	rsi, [rbp - 1]
0x10df4:	mov	qword ptr [r15 + 0x48], rbp
0x10df8:	mov	rdi, r15
0x10dfb:	call	0xdd30


0x10a14:	lea	rsi, [r12 - 1]
0x10a19:	mov	qword ptr [r15 + 0x48], r12
0x10a1d:	mov	rdi, r15
0x10a20:	call	0xdd30


0x1107b:	mov	eax, 0xc
0x11080:	jmp	0x10ee4


0x1100c:	lea	r14, [r13 + r12]
0x11011:	movabs	rax, 0x1fffffffffffffff
0x1101b:	cmp	r14, rax
0x1101e:	ja	0x1107b


0x107f0:	xor	ebp, ebp
0x107f2:	add	rsp, 8
0x107f6:	mov	eax, ebp
0x107f8:	pop	rbx
0x107f9:	pop	rbp
0x107fa:	pop	r12
0x107fc:	pop	r13
0x107fe:	ret	


0x1083f:	mov	rcx, qword ptr [rcx + 0x58]
0x10843:	lea	rdi, [r8 + 1]
0x10847:	cmp	rdi, rcx
0x1084a:	jge	0x107f0


0x1072e:	mov	rbx, rsi
0x10731:	mov	rdi, rcx
0x10734:	mov	rsi, r8
0x10737:	mov	r10, rcx
0x1073a:	call	0xbea0


0x1064d:	mov	rax, qword ptr [rsp + 0x168]
0x10655:	xor	rax, qword ptr fs:[0x28]
0x1065e:	jne	0x106f2


0x10242:	lea	rax, [rsp + 0x58]
0x10247:	mov	qword ptr [rsp], 0
0x1024f:	mov	qword ptr [rsp + 0x40], rax
0x10254:	lea	rax, [rsp + 0x54]
0x10259:	mov	qword ptr [rsp + 0x48], rax
0x1025e:	lea	rax, [rsp + 0x60]
0x10263:	mov	qword ptr [rsp + 0x38], rax
0x10268:	jmp	0x102ae




0xf8b9:	lea	r14, [rcx + rcx + 1]
0xf8be:	mov	rdi, rax
0xf8c1:	mov	qword ptr [rsp + 8], r8
0xf8c6:	mov	qword ptr [rsp], rdx
0xf8ca:	lea	rsi, [r14*8]
0xf8d2:	call	0x1f90


0xf7a8:	lea	rdx, [rcx + 1]
0xf7ac:	mov	rdi, r12
0xf7af:	mov	qword ptr [r13], rdx
0xf7b3:	lea	r13, [rax + rcx*8]
0xf7b7:	call	0x1ea0


0xf782:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xf784:	seta	al
0xf787:	sbb	al, 0
0xf789:	test	al, al
0xf78b:	jne	0xf886


0xe991:	call	0x1c60


0xe85d:	mov	rax, qword ptr [rbp + 0x10]
0xe861:	mov	rax, qword ptr [rax + rbx*8]
0xe865:	cmp	r13, rax
0xe868:	je	0xe850


0xe0fe:	mov	rax, qword ptr [rbx + 0x58]
0xe102:	sub	qword ptr [rbx + 0x68], rbp
0xe106:	mov	qword ptr [rbx + 0x28], r15
0xe10a:	sub	rax, rbp
0xe10d:	cmp	dword ptr [rbx + 0x90], 1
0xe114:	mov	qword ptr [rbx + 0x58], rax
0xe118:	jle	0xe1b8


0xe09b:	mov	rax, qword ptr [rbx + 0x38]
0xe09f:	movzx	edx, byte ptr [rbx + 0x8c]
0xe0a6:	mov	r8, qword ptr [rbx + 0x30]
0xe0aa:	cmp	rax, rbp
0xe0ad:	jle	0xe1d0


0xe043:	mov	rax, qword ptr [rbx + 0x50]
0xe047:	mov	qword ptr [rbx + 0x30], 0
0xe04f:	mov	rbp, r15
0xe052:	mov	qword ptr [rbx + 0x28], 0
0xe05a:	mov	qword ptr [rbx + 0x38], 0
0xe062:	mov	byte ptr [rbx + 0x8c], 0
0xe069:	mov	qword ptr [rbx + 0x58], rax
0xe06d:	mov	rax, qword ptr [rbx + 0x60]
0xe071:	mov	qword ptr [rbx + 0x68], rax
0xe075:	mov	eax, r10d
0xe078:	and	eax, 1
0xe07b:	cmp	eax, 1
0xe07e:	sbb	eax, eax
0xe080:	and	eax, 2
0xe083:	add	eax, 4
0xe086:	cmp	byte ptr [rbx + 0x8b], 0
0xe08d:	mov	dword ptr [rbx + 0x70], eax
0xe090:	je	0xe160


0xe170:	mov	qword ptr [rdi + 0x20], 0
0xe178:	jmp	0xe043


0xde70:	push	rbx
0xde71:	mov	ebx, dword ptr [rsi + 8]
0xde74:	mov	eax, 1
0xde79:	test	ebx, 0x3ff00
0xde7f:	je	0xdecc


0xdf02:	ret	


0xded0:	cmp	al, 1
0xded2:	jne	0xdee0


0xde3a:	cmp	al, 5
0xde3c:	je	0xde50


0xdde8:	and	edx, 2
0xddeb:	cmp	edx, 1
0xddee:	sbb	eax, eax
0xddf0:	and	eax, 2
0xddf3:	add	eax, 8
0xddf6:	jmp	0xdd82


0xdd48:	cmp	dword ptr [rdi + 0x90], 1
0xdd4f:	jle	0xdda0


0xdc1e:	mov	rax, qword ptr [r14]
0xdc21:	mov	rbp, qword ptr [rax + rbx*8]
0xdc25:	mov	rax, rbp
0xdc28:	shl	rax, 4
0xdc2c:	add	rax, qword ptr [r13]
0xdc30:	cmp	byte ptr [rax + 8], 8
0xdc34:	jne	0xdc10


0xd8d2:	cmp	rsi, rcx
0xd8d5:	jl	0xd8b0


0xd8a5:	jmp	0xd928


0xd8fd:	xor	eax, eax
0xd8ff:	mov	rbx, qword ptr [rsp + 0x68]
0xd904:	xor	rbx, qword ptr fs:[0x28]
0xd90d:	jne	0xdbd9


0xd8dc:	mov	rcx, qword ptr [rbx + 0xd8]
0xd8e3:	lea	rax, [rsi + rsi*4]
0xd8e7:	shl	rax, 3
0xd8eb:	cmp	qword ptr [rcx + rax + 8], r12
0xd8f0:	mov	qword ptr [rsp + 0x30], rax
0xd8f5:	jne	0xd8fd


0xd828:	add	rsp, 0x48
0xd82c:	pop	rbx
0xd82d:	pop	rbp
0xd82e:	pop	r12
0xd830:	pop	r13
0xd832:	pop	r14
0xd834:	pop	r15
0xd836:	ret	


0xd837:	call	0x1db0


0xd7fc:	mov	rsi, qword ptr [rbx + r15*8]
0xd800:	mov	rdx, qword ptr [r12 + r15*8]
0xd804:	test	rsi, rsi
0xd807:	jne	0xd7b0


0xd6ef:	add	rsp, 8
0xd6f3:	mov	rax, rbx
0xd6f6:	pop	rbx
0xd6f7:	pop	rbp
0xd6f8:	pop	r12
0xd6fa:	pop	r13
0xd6fc:	pop	r14
0xd6fe:	pop	r15
0xd700:	ret	


0xd59c:	mov	rax, qword ptr [rsi + 0x88]
0xd5a3:	mov	r14, rdx
0xd5a6:	mov	r12, rsi
0xd5a9:	mov	r13, rdi
0xd5ac:	and	rax, rbp
0xd5af:	lea	rdx, [rax + rax*2]
0xd5b3:	mov	rax, qword ptr [rsi + 0x40]
0xd5b7:	lea	rax, [rax + rdx*8]
0xd5bb:	mov	r10, qword ptr [rax]
0xd5be:	test	r10, r10
0xd5c1:	jle	0xd5f6


0xd580:	mov	rax, qword ptr [rdx + 0x10]
0xd584:	lea	rcx, [rax + rbp*8]
0xd588:	nop	dword ptr [rax + rax]
0xd590:	add	rbp, qword ptr [rax]
0xd593:	add	rax, 8
0xd597:	cmp	rcx, rax
0xd59a:	jne	0xd590


0xd34c:	add	rsp, 0x28
0xd350:	mov	rax, r14
0xd353:	pop	rbx
0xd354:	pop	rbp
0xd355:	pop	r12
0xd357:	pop	r13
0xd359:	pop	r14
0xd35b:	pop	r15
0xd35d:	ret	


0xd2dc:	mov	rax, qword ptr [rsi + 0x88]
0xd2e3:	mov	rbp, rdx
0xd2e6:	mov	dword ptr [rsp + 4], ecx
0xd2ea:	mov	r13, rsi
0xd2ed:	mov	qword ptr [rsp + 0x18], rdi
0xd2f2:	and	rax, r12
0xd2f5:	lea	rdx, [rax + rax*2]
0xd2f9:	mov	rax, qword ptr [rsi + 0x40]
0xd2fd:	lea	rax, [rax + rdx*8]
0xd301:	mov	r11, qword ptr [rax]
0xd304:	test	r11, r11
0xd307:	jle	0xd360


0xd2c7:	mov	rax, qword ptr [rdx + 0x10]
0xd2cb:	lea	r10, [rax + r10*8]
0xd2cf:	nop	
0xd2d0:	add	r12, qword ptr [rax]
0xd2d3:	add	rax, 8
0xd2d7:	cmp	r10, rax
0xd2da:	jne	0xd2d0


0xd201:	pxor	xmm0, xmm0
0xd205:	mov	qword ptr [rdi + 0x10], 0
0xd20d:	xor	eax, eax
0xd20f:	movaps	xmmword ptr [rdi], xmm0
0xd212:	pop	rbx
0xd213:	pop	rbp
0xd214:	pop	r12
0xd216:	pop	r13
0xd218:	pop	r14
0xd21a:	ret	


0xd1fa:	cmp	qword ptr [rdx + 8], 0
0xd1ff:	jg	0xd220


0xd1f0:	test	r13, r13
0xd1f3:	jg	0xd223


0xd15e:	test	r13, r13
0xd161:	jle	0xd1f0


0xd052:	mov	rcx, qword ptr [rsp + 8]
0xd057:	xor	rcx, qword ptr fs:[0x28]
0xd060:	mov	eax, dword ptr [rsp + 4]
0xd064:	jne	0xd0ab


0xd04c:	cmp	byte ptr [rdx + 0x30], 0x11
0xd050:	je	0xd070


0xd090:	lea	rdi, [rsp + 4]
0xd095:	mov	rsi, rbp
0xd098:	call	0xcdd0


0xce80:	lea	rax, [rbx + 0x70]
0xce84:	lea	r14, [rsp + 0x20]
0xce89:	sub	rbx, -0x80
0xce8d:	xor	ecx, ecx
0xce8f:	xor	edx, edx
0xce91:	mov	rsi, rbx
0xce94:	mov	r15, rax
0xce97:	mov	r8, r14
0xce9a:	mov	rdi, rax
0xce9d:	mov	byte ptr [rsp + 0x28], 8
0xcea2:	mov	qword ptr [rsp + 8], rax
0xcea7:	call	0xcc10


0xce0c:	mov	rax, qword ptr [rdx + 0x28]
0xce10:	cmp	rax, 0x3f
0xce14:	jg	0xcf4d


0xcc83:	test	rcx, rcx
0xcc86:	je	0xcc8b


0xcc80:	mov	qword ptr [rdx], rax
0xcc83:	test	rcx, rcx
0xcc86:	je	0xcc8b


0xca7c:	push	r13
0xca7e:	push	r12
0xca80:	lea	rax, [r9 + r11]
0xca84:	push	rbp
0xca85:	push	rbx
0xca86:	mov	r12, rdx
0xca89:	mov	rbx, rdi
0xca8c:	mov	rbp, rsi
0xca8f:	sub	rsp, 8
0xca93:	mov	rcx, qword ptr [rdi + 8]
0xca97:	mov	r13, qword ptr [rdi]
0xca9a:	mov	rdi, qword ptr [rdi + 0x10]
0xca9e:	lea	rdx, [rax + rcx]
0xcaa2:	cmp	rdx, r13
0xcaa5:	jg	0xcbd0


0xc486:	push	r12
0xc488:	push	rbp
0xc489:	mov	r12, rsi
0xc48c:	push	rbx
0xc48d:	mov	rax, qword ptr [rdi + 8]
0xc491:	mov	rbx, rdi
0xc494:	mov	rsi, qword ptr [rdi]
0xc497:	lea	rcx, [rax + rdx*2]
0xc49b:	cmp	rsi, rcx
0xc49e:	jl	0xc5e8


0xc286:	cmp	rbx, r10
0xc289:	jl	0xc260


0xc256:	jmp	0xc3f0


0xc430:	mov	rbx, -1
0xc437:	jmp	0xc2b2


0xc294:	mov	r11, qword ptr [rdi + 0xd8]
0xc29b:	lea	rax, [rbx + rbx*4]
0xc29f:	lea	rax, [r11 + rax*8]
0xc2a3:	cmp	r8, qword ptr [rax + 8]
0xc2a7:	mov	rax, -1
0xc2ae:	cmovne	rbx, rax
0xc2b2:	mov	rax, r15
0xc2b5:	xor	ebp, ebp
0xc2b7:	cmp	rbp, rax
0xc2ba:	jge	0xc314


0xc1d8:	mov	rax, qword ptr [rsi + 0x10]
0xc1dc:	mov	rcx, qword ptr [rax + 0x18]
0xc1e0:	mov	qword ptr [rdx + 0x20], rcx
0xc1e4:	mov	rdx, qword ptr [rsi + 0x20]
0xc1e8:	mov	qword ptr [rax + 0x20], rdx
0xc1ec:	xor	eax, eax
0xc1ee:	ret	


0xc1b0:	test	rdx, rdx
0xc1b3:	je	0xc1bd


0xc11c:	xor	eax, eax
0xc11e:	ret	


0xc17c:	movsxd	rdx, dword ptr [rsi + 0x28]
0xc180:	mov	rcx, qword ptr [rax + rdx*8]
0xc184:	mov	eax, 1
0xc189:	shl	eax, cl
0xc18b:	mov	qword ptr [rsi + 0x28], rcx
0xc18f:	cdqe	
0xc191:	or	qword ptr [rdi + 0xa0], rax
0xc198:	xor	eax, eax
0xc19a:	ret	


0xc120:	mov	rax, qword ptr [rsi + 8]
0xc124:	test	rax, rax
0xc127:	je	0xc11c


0xc0e4:	mov	rax, qword ptr [rsi]
0xc0e7:	nop	word ptr [rax + rax]
0xc0f0:	mov	rcx, qword ptr [rax + rdx*8 + 8]
0xc0f5:	mov	qword ptr [rax + rdx*8], rcx
0xc0f9:	add	rdx, 1
0xc0fd:	cmp	rdx, qword ptr [rdi]
0xc100:	jl	0xc0f0


0xbf65:	lea	rcx, [rsi + rdi]
0xbf69:	shr	rcx, 1
0xbf6c:	cmp	rdx, qword ptr [r8 + rcx*8]
0xbf70:	jle	0xbf88


0xbf8d:	xor	eax, eax
0xbf8f:	cmp	rdx, qword ptr [r8 + rsi*8]
0xbf93:	je	0xbfc0


0xbf2d:	test	rax, rax
0xbf30:	jns	0xbf10


0xbebf:	sub	rcx, rsi
0xbec2:	lea	rsi, [rdx + rdi - 4]
0xbec7:	mov	edx, 2
0xbecc:	jmp	0xbedb


0xbe3d:	mov	rdi, qword ptr [r12 + 0x28]
0xbe42:	call	0x1c60


0xbe13:	xor	ebx, ebx
0xbe15:	nop	dword ptr [rax]
0xbe18:	mov	rax, qword ptr [r12 + 0x28]
0xbe1d:	mov	rbp, qword ptr [rax + rbx*8]
0xbe21:	add	rbx, 1
0xbe25:	mov	rdi, qword ptr [rbp + 0x20]
0xbe29:	call	0x1c60


0xbc9b:	xor	ebx, ebx
0xbc9d:	jmp	0xbca4




0xbba9:	mov	rax, qword ptr [r14 + 0x18]
0xbbad:	mov	rcx, qword ptr [rax + r9*8]
0xbbb1:	mov	qword ptr [rax + r13*8], rcx
0xbbb5:	xor	eax, eax
0xbbb7:	jmp	0xba90


0xb9b6:	lea	rbx, [r13 + r13*2]
0xb9bb:	mov	rsi, qword ptr [rsi + 0x10]
0xb9bf:	shl	rbx, 3
0xb9c3:	add	rdi, rbx
0xb9c6:	cmp	rcx, 1
0xb9ca:	mov	r15, qword ptr [rsi]
0xb9cd:	mov	qword ptr [rdi + 8], 0
0xb9d5:	je	0xbaf0


0xb746:	xor	ecx, ecx
0xb748:	cmp	dword ptr [rbx + 0xb4], 1
0xb74f:	setg	cl
0xb752:	movzx	edx, byte ptr [rax + 0xa]
0xb756:	shl	ecx, 4
0xb759:	pxor	xmm0, xmm0
0xb75d:	and	edx, 0xffffffef
0xb760:	or	edx, ecx
0xb762:	mov	byte ptr [rax + 0xa], dl
0xb765:	mov	qword ptr [r12 + rsi*8], -1
0xb76d:	mov	rax, qword ptr [rbx + 0x10]
0xb771:	lea	rax, [rax + rax*2]
0xb775:	lea	rax, [rbp + rax*8]
0xb77a:	movups	xmmword ptr [rax], xmm0
0xb77d:	mov	qword ptr [rax + 0x10], 0
0xb785:	mov	rax, qword ptr [rbx + 0x10]
0xb789:	lea	rdx, [rax + rax*2]
0xb78d:	mov	rax, qword ptr [rbx + 0x30]
0xb791:	lea	rax, [rax + rdx*8]
0xb795:	movups	xmmword ptr [rax], xmm0
0xb798:	mov	qword ptr [rax + 0x10], 0
0xb7a0:	mov	rax, qword ptr [rbx + 0x10]
0xb7a4:	lea	rdx, [rax + 1]
0xb7a8:	mov	qword ptr [rbx + 0x10], rdx
0xb7ac:	add	rsp, 0x18
0xb7b0:	pop	rbx
0xb7b1:	pop	rbp
0xb7b2:	pop	r12
0xb7b4:	pop	r13
0xb7b6:	pop	r14
0xb7b8:	pop	r15
0xb7ba:	ret	


0xb752:	movzx	edx, byte ptr [rax + 0xa]
0xb756:	shl	ecx, 4
0xb759:	pxor	xmm0, xmm0
0xb75d:	and	edx, 0xffffffef
0xb760:	or	edx, ecx
0xb762:	mov	byte ptr [rax + 0xa], dl
0xb765:	mov	qword ptr [r12 + rsi*8], -1
0xb76d:	mov	rax, qword ptr [rbx + 0x10]
0xb771:	lea	rax, [rax + rax*2]
0xb775:	lea	rax, [rbp + rax*8]
0xb77a:	movups	xmmword ptr [rax], xmm0
0xb77d:	mov	qword ptr [rax + 0x10], 0
0xb785:	mov	rax, qword ptr [rbx + 0x10]
0xb789:	lea	rdx, [rax + rax*2]
0xb78d:	mov	rax, qword ptr [rbx + 0x30]
0xb791:	lea	rax, [rax + rdx*8]
0xb795:	movups	xmmword ptr [rax], xmm0
0xb798:	mov	qword ptr [rax + 0x10], 0
0xb7a0:	mov	rax, qword ptr [rbx + 0x10]
0xb7a4:	lea	rdx, [rax + 1]
0xb7a8:	mov	qword ptr [rbx + 0x10], rdx
0xb7ac:	add	rsp, 0x18
0xb7b0:	pop	rbx
0xb7b1:	pop	rbp
0xb7b2:	pop	r12
0xb7b4:	pop	r13
0xb7b6:	pop	r14
0xb7b8:	pop	r15
0xb7ba:	ret	


0xb7d8:	mov	rdi, qword ptr [rdi]
0xb7db:	mov	rsi, rbp
0xb7de:	mov	qword ptr [rsp + 8], rdx
0xb7e3:	shl	rsi, 5
0xb7e7:	call	0x1f90


0xb8b2:	mov	rax, -1
0xb8b9:	jmp	0xb7ac


0xb6b8:	mov	rdi, qword ptr [rdi]
0xb6bb:	jmp	0x1c60


0xb6b2:	ret	


0xb600:	lea	esi, [rbp + 1]
0xb603:	mov	rdi, rbx
0xb606:	call	0xb490


0xb629:	cmp	rax, qword ptr [rbx + 0x58]
0xb62d:	jge	0xb60f


0xb60f:	cmp	r12, rbp
0xb612:	jl	0xb640


0xb040:	cmp	byte ptr [rdi + 0x8c], 0
0xb047:	jne	0xaebc


0xaf00:	lea	rax, [r14 + 0x20]
0xaf04:	mov	qword ptr [rsp + 8], rax
0xaf09:	mov	rax, rbx
0xaf0c:	sub	rax, r15
0xaf0f:	mov	qword ptr [rsp + 0x10], rax
0xaf14:	lea	rax, [rsp + 0x44]
0xaf19:	mov	qword ptr [rsp + 0x20], rax
0xaf1e:	mov	rdx, qword ptr [r14 + 0x78]
0xaf22:	mov	rax, qword ptr [r14 + 0x20]
0xaf26:	test	rdx, rdx
0xaf29:	mov	qword ptr [rsp + 0x48], rax
0xaf2e:	jne	0xb239


0xaec5:	mov	qword ptr [r14 + 0x30], r15
0xaec9:	mov	qword ptr [r14 + 0x38], r13
0xaecd:	xor	eax, eax
0xaecf:	mov	rcx, qword ptr [rsp + 0x98]
0xaed7:	xor	rcx, qword ptr fs:[0x28]
0xaee0:	jne	0xb46a


0xad80:	add	rsp, 0x68
0xad84:	pop	rbx
0xad85:	pop	rbp
0xad86:	pop	r12
0xad88:	pop	r13
0xad8a:	pop	r14
0xad8c:	pop	r15
0xad8e:	ret	


0xae5e:	call	0x1db0


0xacff:	mov	rsi, qword ptr [rbx + 0x28]
0xad03:	add	rsi, rbp
0xad06:	add	rsi, qword ptr [rbx]
0xad09:	mov	rcx, r14
0xad0c:	mov	rdi, r13
0xad0f:	call	0xa3b0


0xade0:	mov	ecx, dword ptr [rbx + 0x90]
0xade6:	xor	eax, eax
0xade8:	lea	rsi, [rsp + 0x10]
0xaded:	test	ecx, ecx
0xadef:	jg	0xae11


0x1c50:	jmp	qword ptr [rip + 0x21f10a]


0xaa31:	mov	qword ptr [rax], rbp
0xaa34:	add	qword ptr [rdi + 8], 1
0xaa39:	mov	eax, 1
0xaa3e:	add	rsp, 8
0xaa42:	pop	rbx
0xaa43:	pop	rbp
0xaa44:	ret	


0xaa80:	cmp	rdx, rsi
0xaa83:	je	0xab10


0xa966:	mov	qword ptr [rbx + 0x40], rbp
0xa96a:	add	rsp, 8
0xa96e:	xor	eax, eax
0xa970:	pop	rbx
0xa971:	pop	rbp
0xa972:	ret	


0xa978:	mov	rdi, qword ptr [rbx + 8]
0xa97c:	mov	rsi, rbp
0xa97f:	call	0x1f90


0xa924:	mov	rdi, qword ptr [rdi + 0x10]
0xa928:	lea	rsi, [rsi*4]
0xa930:	call	0x1f90


0xa990:	add	rsp, 8
0xa994:	mov	eax, 0xc
0xa999:	pop	rbx
0xa99a:	pop	rbp
0xa99b:	ret	


0xa84c:	mov	rax, qword ptr [rbx + 0x10]
0xa850:	test	rax, rax
0xa853:	jne	0xa840


0xa840:	mov	rbx, rax
0xa843:	mov	rax, qword ptr [rbx + 8]
0xa847:	test	rax, rax
0xa84a:	jne	0xa840


0xa800:	mov	eax, 1
0xa805:	ret	


0xa7e1:	xor	esi, esi
0xa7e3:	cmp	r10, r8
0xa7e6:	sete	sil
0xa7ea:	or	esi, 2
0xa7ed:	cmp	rax, r8
0xa7f0:	je	0xa815


0xa635:	mov	rax, qword ptr [r12 + 0x10]
0xa63a:	mov	rbp, qword ptr [rax + rbx*8]
0xa63e:	mov	rax, rbp
0xa641:	shl	rax, 4
0xa645:	add	rax, qword ptr [r14]
0xa648:	movzx	edx, byte ptr [rax + 8]
0xa64c:	cmp	dl, 8
0xa64f:	jne	0xa618


0xa586:	or	byte ptr [rsi + 0x32], 8
0xa58a:	xor	eax, eax
0xa58c:	ret	


0xa473:	cmp	cl, 0x5c
0xa476:	je	0xa4e0


0xa45e:	cmp	rax, qword ptr [rsi + 0x30]
0xa462:	je	0xa473




0xa36a:	cmp	qword ptr [rdi + 0x48], 0
0xa36f:	jne	0xa35a


0x2020:	jmp	qword ptr [rip + 0x21ef22]


0x1f40:	jmp	qword ptr [rip + 0x21ef92]


0x1f70:	jmp	qword ptr [rip + 0x21ef7a]






0x9aaa:	call	0x1ec0


0x9a61:	sub	rsp, 8
0x9a65:	call	0x9b10


0x9a42:	mov	qword ptr [rsi], rax
0x9a45:	mov	rsi, rax
0x9a48:	jmp	0x9920


0x9a37:	mov	rdx, rax
0x9a3a:	shr	rdx, 1
0x9a3d:	lea	rax, [rdx + rax + 1]
0x9a42:	mov	qword ptr [rsi], rax
0x9a45:	mov	rsi, rax
0x9a48:	jmp	0x9920


0x99f8:	xor	edx, edx
0x99fa:	mov	eax, 0x80
0x99ff:	xor	r8d, r8d
0x9a02:	div	r9
0x9a05:	test	rax, rax
0x9a08:	sete	r8b
0x9a0c:	lea	rcx, [r8 + rax]
0x9a10:	jmp	0x99d5


0x99d5:	mov	rax, rcx
0x99d8:	mul	r9
0x99db:	seto	dl
0x99de:	test	rax, rax
0x99e1:	movzx	edx, dl
0x99e4:	js	0x99eb


0x99eb:	sub	rsp, 8
0x99ef:	call	0x9b10


0x99af:	mov	rax, rcx
0x99b2:	shr	rax, 1
0x99b5:	lea	rcx, [rax + rcx + 1]
0x99ba:	mov	qword ptr [rsi], rcx
0x99bd:	imul	rcx, r9
0x99c1:	mov	rsi, rcx
0x99c4:	jmp	0x9920


0x9979:	jmp	0x9920


0x9948:	call	0x1c60


0x98f9:	jmp	0x98c0


0x97fc:	test	r11b, r11b
0x97ff:	jne	0x9825


0x97f2:	add	r9, 1
0x97f6:	cmp	r9, 0xa
0x97fa:	jne	0x97d0


0x97e6:	mov	rax, qword ptr [rax]
0x97e9:	test	rax, rax
0x97ec:	mov	qword ptr [r8 + r9*8], rax
0x97f0:	je	0x97fc


0x972b:	call	0x92a0


0x9721:	add	r9, 1
0x9725:	cmp	r9, 0xa
0x9729:	jne	0x9700


0x9715:	mov	rax, qword ptr [r11]
0x9718:	test	rax, rax
0x971b:	mov	qword ptr [r8 + r9*8], rax
0x971f:	je	0x972b


0x96d0:	add	r9, 1
0x96d4:	cmp	qword ptr [r8 + r9*8], 0
0x96d9:	jne	0x96d0


0x2090:	jmp	qword ptr [rip + 0x21eeea]








0x88aa:	mov	qword ptr [rsp + 0x28], rsi
0x88af:	mov	qword ptr [rsp + 0x30], rdx
0x88b4:	mov	rcx, rsp
0x88b7:	mov	rdx, r8
0x88ba:	mov	rsi, r9
0x88bd:	call	0x8050


0x84f9:	lea	rbx, [rip + 0x218bb0]
0x8500:	cmp	r12, rbx
0x8503:	je	0x8514


0x84e2:	call	0x1c60




0x82fe:	mov	qword ptr [rdi + 0x28], rsi
0x8302:	mov	qword ptr [rdi + 0x30], rdx
0x8306:	ret	


0x2080:	jmp	qword ptr [rip + 0x21eef2]


0x1e10:	jmp	qword ptr [rip + 0x21f02a]




0x5c9f:	mov	rdx, r12
0x5ca2:	mov	rsi, rbp
0x5ca5:	mov	rdi, r13
0x5ca8:	call	0x1e90


0x547b:	lea	rax, [r14 + r13]
0x547f:	mov	rdi, rbp
0x5482:	mov	rbx, rax
0x5485:	shr	rbx, 0x3f
0x5489:	add	rbx, rax
0x548c:	sar	rbx, 1
0x548f:	mov	rsi, rbx
0x5492:	shl	rsi, 4
0x5496:	add	rsi, r12
0x5499:	call	0x4950


0x50a0:	mov	rdi, qword ptr [rip + 0x21c021]
0x50a7:	mov	rax, qword ptr [rdi + 0x28]
0x50ab:	cmp	rax, qword ptr [rdi + 0x30]
0x50af:	jae	0x5180


0x4fec:	movzx	esi, byte ptr [r14 + rax]
0x4ff1:	test	sil, sil
0x4ff4:	je	0x5003


0x4f71:	lea	rdx, [rax + 1]
0x4f75:	mov	qword ptr [rdi + 0x28], rdx
0x4f79:	mov	byte ptr [rax], 0x20
0x4f7c:	sub	rbx, 1
0x4f80:	jne	0x4f60


0x4f88:	mov	esi, 0x20
0x4f8d:	call	0x1e00


0x4db8:	lea	rdi, [rip + 0x16ed3]
0x4dbf:	mov	ecx, 2
0x4dc4:	mov	rsi, rbx
0x4dc7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x499d:	cmp	r10, r9
0x49a0:	jg	0x49a9


0x4970:	mov	rdi, qword ptr [rdi]
0x4973:	mov	rsi, qword ptr [rsi]
0x4976:	movzx	eax, byte ptr [rdi]
0x4979:	movzx	edx, byte ptr [rsi]
0x497c:	sub	eax, edx
0x497e:	jne	0x49ae


0x49b5:	mov	r11, qword ptr [rsi]
0x49b8:	mov	rdi, qword ptr [rdi]
0x49bb:	lea	rsi, [rip + 0x21cafe]
0x49c2:	movzx	eax, byte ptr [rdi]
0x49c5:	movzx	edx, byte ptr [r11]
0x49c9:	movzx	eax, byte ptr [rsi + rax]
0x49cd:	movzx	edx, byte ptr [rsi + rdx]
0x49d1:	sub	eax, edx
0x49d3:	jne	0x49ae


0x4923:	call	0x4870


0x4917:	mov	rdi, qword ptr [rip + 0x21c6ea]
0x491e:	call	0x2110


0x48e4:	pop	rbp
0x48e5:	jmp	rax


0x4893:	pop	rbp
0x4894:	jmp	rax






0x18995:	lea	rsp, [rbp - 0x10]
0x18999:	pop	rbx
0x1899a:	pop	r12
0x1899c:	pop	rbp
0x1899d:	ret	


0x18a17:	call	0x1db0


0x188b5:	lea	rdi, [r12*8]
0x188bd:	cmp	rdi, 0xfa0
0x188c4:	ja	0x189e8




0x18566:	sub	rsp, 8
0x1856a:	push	rbx
0x1856b:	push	r12
0x1856d:	push	r13
0x1856f:	jmp	0x1852f


0x18526:	sub	rsp, 8
0x1852a:	push	rbx
0x1852b:	push	0
0x1852d:	push	0
0x1852f:	mov	rdi, rbp
0x18532:	mov	r9, rdx
0x18535:	mov	r8, rdx
0x18538:	call	0x12970


0x1821c:	test	rbp, rbp
0x1821f:	mov	r14, rcx
0x18222:	mov	rcx, r9
0x18225:	je	0x182e0


0x17d92:	test	rax, rax
0x17d95:	js	0x17da0


0x18010:	mov	r8, rdx
0x18013:	jmp	0x17db7




0x16bcb:	mov	r14, qword ptr [rsp]
0x16bcf:	lea	rax, [r14 + 1]
0x16bd3:	mov	rdi, rax
0x16bd6:	mov	qword ptr [rbx + 8], rax
0x16bda:	mov	qword ptr [rsp + 0x28], rax
0x16bdf:	shl	rdi, 4
0x16be3:	call	0x1f20


0x17206:	mov	dword ptr [rsp + 0x4c], 0xc
0x1720e:	jmp	0x16e7c


0x1db0:	jmp	qword ptr [rip + 0x21f05a]


0x14cc0:	lea	rsi, [r14 + 1]
0x14cc4:	cmp	rsi, qword ptr [rbx + 0x58]
0x14cc8:	jge	0x14d70


0x14c46:	mov	byte ptr [rbp + 8], 1
0x14c4a:	mov	qword ptr [rsp], rdx
0x14c4e:	call	0x20e0


0x14d50:	cmp	r12b, 0x5c
0x14d54:	je	0x14cc0


0x14bb7:	mov	rcx, qword ptr [rsi + 0x10]
0x14bbb:	mov	ecx, dword ptr [rcx + r14*4]
0x14bbf:	cmp	ecx, -1
0x14bc2:	je	0x14ca0


0x149bd:	movzx	r13d, byte ptr [rbp]
0x149c2:	xor	r8d, r8d
0x149c5:	jmp	0x149f2


0x14ad8:	mov	eax, 7
0x14add:	jmp	0x14951


0x14991:	cmp	al, 0x16
0x14993:	jne	0x1499e


0x14138:	mov	rdi, qword ptr [rsp + 0x98]
0x14140:	xor	rdi, qword ptr fs:[0x28]
0x14149:	jne	0x148eb


0x141c8:	lea	rdi, [rsp + 0x5c]
0x141cd:	mov	rdx, rbx
0x141d0:	mov	rsi, r12
0x141d3:	call	0xd560


0x1420f:	mov	rax, qword ptr [rsp + 8]
0x14214:	xor	ebx, ebx
0x14216:	mov	rsi, qword ptr [rax + 0xc8]
0x1421d:	mov	rdx, rsi
0x14220:	cmp	rbx, rdx
0x14223:	jge	0x14283


0x12a16:	mov	rax, qword ptr [rsp + 0x48]
0x12a1b:	mov	qword ptr [rsp + 0x98], 0
0x12a27:	mov	rax, qword ptr [rax + 0x30]
0x12a2b:	cmp	rax, qword ptr [rsp + 0x270]
0x12a33:	jae	0x12a54


0x129f4:	movzx	edx, byte ptr [rsi + 0x38]
0x129f8:	test	dl, 8
0x129fb:	je	0x12e90


0x124bc:	add	rsp, 0x38
0x124c0:	pop	rbx
0x124c1:	pop	rbp
0x124c2:	pop	r12
0x124c4:	pop	r13
0x124c6:	pop	r14
0x124c8:	pop	r15
0x124ca:	ret	


0x12627:	call	0x1db0


0x12620:	xor	ebp, ebp
0x12622:	jmp	0x124a5


0x125cd:	lea	r14, [rbp + 0x10]
0x125d1:	lea	r15, [rbp + 0x18]
0x125d5:	mov	rcx, r12
0x125d8:	mov	rdi, rbx
0x125db:	mov	rdx, r15
0x125de:	mov	rsi, r14
0x125e1:	call	0xdbe0


0x12497:	cmp	qword ptr [r15 + 0x98], 0
0x1249f:	jne	0x125c8


0x12570:	movdqu	xmm0, xmmword ptr [rax]
0x12574:	mov	rdi, rbx
0x12577:	mov	edx, dword ptr [rsi + 0xa0]
0x1257d:	lea	rsi, [r12 - 1]
0x12582:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x12587:	mov	rax, qword ptr [rax + 0x10]
0x1258b:	mov	qword ptr [rsp + 0x20], rax
0x12590:	call	0xdd30


0x124e9:	mov	r14, qword ptr [rdx + 0x50]
0x124ed:	lea	rdi, [rsp + 0x10]
0x124f2:	mov	rdx, rax
0x124f5:	mov	qword ptr [rsp], rdi
0x124f9:	mov	rsi, r14
0x124fc:	call	0xd140


0x11c3f:	mov	ebp, dword ptr [rax + 8]
0x11c42:	test	ebp, 0x3ff00
0x11c48:	je	0x11c90


0x11c00:	mov	rdi, qword ptr [rsp + 0x48]
0x11c05:	add	qword ptr [rsp], 1
0x11c0a:	mov	rax, qword ptr [rsp]
0x11c0e:	cmp	rax, qword ptr [rdi]
0x11c11:	jge	0x11ec0


0x11179:	add	rax, 0x10
0x1117d:	mov	byte ptr [rbp - 0xc9], 0
0x11184:	sub	rsp, rax
0x11187:	lea	rax, [rsp + 0xf]
0x1118c:	and	rax, 0xfffffffffffffff0
0x11190:	mov	qword ptr [rbp - 0xc0], rax
0x11197:	mov	rdx, qword ptr [rbp - 0xb8]
0x1119e:	mov	rdi, qword ptr [rbp - 0xc0]
0x111a5:	mov	rsi, r13
0x111a8:	call	0x1ee0


0x11866:	mov	rdi, qword ptr [rbp - 0xb8]
0x1186d:	call	0x1f20


0x10ee4:	mov	rbx, qword ptr [rsp + 0xc8]
0x10eec:	xor	rbx, qword ptr fs:[0x28]
0x10ef5:	jne	0x110ac


0x11020:	mov	rax, qword ptr [rsp + 0x60]
0x11025:	lea	rsi, [r14*8]
0x1102d:	mov	rdi, qword ptr [rax + 0x10]
0x11031:	call	0x1f90


0x1084c:	cmp	al, 0xdf
0x1084e:	movzx	edx, byte ptr [rdx + r8 + 1]
0x10854:	ja	0x108be


0x10664:	add	rsp, 0x178
0x1066b:	pop	rbx
0x1066c:	pop	rbp
0x1066d:	pop	r12
0x1066f:	pop	r13
0x10671:	pop	r14
0x10673:	pop	r15
0x10675:	ret	


0x106f2:	call	0x1db0


0x102ae:	mov	rax, qword ptr [rsp + 0x28]
0x102b3:	mov	rdi, qword ptr [rsp]
0x102b7:	mov	rax, qword ptr [rax]
0x102ba:	mov	r12, qword ptr [rax + rdi*8]
0x102be:	mov	rax, qword ptr [rsp + 8]
0x102c3:	mov	rcx, qword ptr [rax]
0x102c6:	mov	rax, r12
0x102c9:	shl	rax, 4
0x102cd:	mov	qword ptr [rsp + 0x10], rax
0x102d2:	lea	rsi, [rcx + rax]
0x102d6:	movzx	eax, byte ptr [rsi + 8]
0x102da:	cmp	eax, 1
0x102dd:	mov	edx, eax
0x102df:	jne	0x10270


0x1ea0:	jmp	qword ptr [rip + 0x21efe2]


0xf791:	lea	r12, [rip + 0xcfa9]
0xf798:	mov	rcx, qword ptr [r13]
0xf79c:	cmp	qword ptr [r8], rcx
0xf79f:	mov	rax, qword ptr [rdx]
0xf7a2:	je	0xf8b9


0xf886:	lea	rdi, [rip + 0xcec0]
0xf88d:	mov	ecx, 6
0xf892:	mov	rsi, r9
0xf895:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xe850:	add	rbx, 1
0xe854:	cmp	r10, rbx
0xe857:	jle	0xe930


0xe86a:	mov	rdx, rax
0xe86d:	shl	rdx, 4
0xe871:	add	rdx, qword ptr [r12]
0xe875:	test	byte ptr [rdx + 8], 8
0xe879:	je	0xe850


0xe1b8:	cmp	byte ptr [rbx + 0x8b], 0
0xe1bf:	jne	0xe570


0xe11e:	cmp	byte ptr [rbx + 0x88], 0
0xe125:	mov	rdi, rbx
0xe128:	je	0xe1a8


0xe1d0:	test	dl, dl
0xe1d2:	jne	0xe67d


0xe0b3:	test	dl, dl
0xe0b5:	jne	0xe2c8


0xe160:	mov	rax, qword ptr [rbx]
0xe163:	mov	qword ptr [rbx + 8], rax
0xe167:	jmp	0xe096


0xdecc:	pop	rbx
0xdecd:	ret	


0xde81:	mov	rsi, rdx
0xde84:	mov	edx, dword ptr [rdi + 0xa0]
0xde8a:	shr	ebx, 8
0xde8d:	call	0xdd30


0xded4:	xor	eax, eax
0xded6:	cmp	byte ptr [rsi], cl
0xded8:	je	0xde70


0xdee0:	xor	eax, eax
0xdee2:	ret	


0xde50:	cmp	cl, 0xa
0xde53:	je	0xdf18


0xde3e:	cmp	al, 7
0xde40:	jne	0xdee0


0xdd82:	add	rsp, 8
0xdd86:	pop	rbx
0xdd87:	pop	rbp
0xdd88:	ret	


0xdda0:	mov	rax, qword ptr [rdi + 8]
0xdda4:	mov	rcx, qword ptr [rdi + 0x80]
0xddab:	movzx	eax, byte ptr [rax + rsi]
0xddaf:	mov	rdx, rax
0xddb2:	sar	rax, 6
0xddb6:	mov	rcx, qword ptr [rcx + rax*8]
0xddba:	mov	eax, 1
0xddbf:	bt	rcx, rdx
0xddc3:	jb	0xdd82


0xdd51:	mov	rax, qword ptr [rdi + 0x10]
0xdd55:	jmp	0xdd6a


0xdc36:	mov	rax, qword ptr [rax]
0xdc39:	cmp	rax, 0x3f
0xdc3d:	jg	0xdc10


0xdc10:	add	rbx, 1
0xdc14:	cmp	rbx, qword ptr [r12]
0xdc18:	jge	0xdcc0


0xd8b0:	lea	rdx, [rsi + rcx]
0xd8b4:	mov	rax, rdx
0xd8b7:	shr	rax, 0x3f
0xd8bb:	add	rax, rdx
0xd8be:	sar	rax, 1
0xd8c1:	lea	rdx, [rax + rax*4]
0xd8c5:	mov	r9, rax
0xd8c8:	cmp	r12, qword ptr [r8 + rdx*8 + 8]
0xd8cd:	jg	0xd930


0xd928:	mov	r9, rcx
0xd92b:	mov	rcx, rdx
0xd92e:	nop	
0xd930:	lea	rsi, [r9 + 1]
0xd934:	mov	rdx, rcx
0xd937:	jmp	0xd87d


0xd913:	add	rsp, 0x78
0xd917:	pop	rbx
0xd918:	pop	rbp
0xd919:	pop	r12
0xd91b:	pop	r13
0xd91d:	pop	r14
0xd91f:	pop	r15
0xd921:	ret	


0xdbd9:	call	0x1db0


0xd8f7:	cmp	rsi, -1
0xd8fb:	jne	0xd940


0xd809:	mov	qword ptr [rbx + r15*8], rdx
0xd80d:	add	r15, 1
0xd811:	cmp	rbp, r15
0xd814:	jne	0xd7fc


0xd7b0:	test	rdx, rdx
0xd7b3:	je	0xd7f3


0xd5f6:	mov	esi, 1
0xd5fb:	mov	edi, 0x70
0xd600:	call	0x1ec0


0xd5c3:	mov	r11, qword ptr [rax + 0x10]
0xd5c7:	xor	r9d, r9d
0xd5ca:	nop	word ptr [rax + rax]
0xd5d0:	mov	rbx, qword ptr [r11 + r9*8]
0xd5d4:	cmp	qword ptr [rbx], rbp
0xd5d7:	jne	0xd5ed


0xd590:	add	rbp, qword ptr [rax]
0xd593:	add	rax, 8
0xd597:	cmp	rcx, rax
0xd59a:	jne	0xd590


0xd360:	mov	esi, 1
0xd365:	mov	edi, 0x70
0xd36a:	call	0x1ec0


0xd309:	mov	rbx, qword ptr [rax + 0x10]
0xd30d:	xor	r10d, r10d
0xd310:	mov	r9d, ecx
0xd313:	jmp	0xd321


0xd2d0:	add	r12, qword ptr [rax]
0xd2d3:	add	rax, 8
0xd2d7:	cmp	r10, rax
0xd2da:	jne	0xd2d0


0xd220:	mov	rsi, rdx
0xd223:	pop	rbx
0xd224:	pop	rbp
0xd225:	pop	r12
0xd227:	pop	r13
0xd229:	pop	r14
0xd22b:	jmp	0xd0b0


0xd223:	pop	rbx
0xd224:	pop	rbp
0xd225:	pop	r12
0xd227:	pop	r13
0xd229:	pop	r14
0xd22b:	jmp	0xd0b0


0xd167:	mov	r14, qword ptr [rdx + 8]
0xd16b:	test	r14, r14
0xd16e:	jle	0xd223


0xd066:	add	rsp, 0x18
0xd06a:	pop	rbx
0xd06b:	pop	rbp
0xd06c:	ret	


0xd0ab:	call	0x1db0


0xd070:	lea	rdi, [rsp + 4]
0xd075:	mov	rsi, rbp
0xd078:	call	0xcdd0


0xce1a:	mov	rdx, qword ptr [rbx + 0xa0]
0xce21:	bt	rdx, rax
0xce25:	jae	0xcf4d


0xcf4d:	mov	rdi, qword ptr [rsp + 0x38]
0xcf52:	xor	rdi, qword ptr fs:[0x28]
0xcf5b:	mov	rax, rbp
0xcf5e:	jne	0xd002


0xcc8b:	add	rsp, 0x20
0xcc8f:	pop	rbx
0xcc90:	ret	


0xcc88:	mov	qword ptr [rcx], rax
0xcc8b:	add	rsp, 0x20
0xcc8f:	pop	rbx
0xcc90:	ret	


0xcaab:	lea	rsi, [rcx + r9]
0xcaaf:	mov	r13, qword ptr [rbp + 0x10]
0xcab3:	mov	rdx, qword ptr [r12 + 0x10]
0xcab8:	sub	r9, 1
0xcabc:	sub	rcx, 1
0xcac0:	add	rsi, r11
0xcac3:	sub	r11, 1
0xcac7:	mov	rax, qword ptr [r13 + r9*8]
0xcacc:	mov	r8, qword ptr [rdx + r11*8]
0xcad0:	cmp	rax, r8
0xcad3:	je	0xcae6


0xcbd0:	add	r13, rax
0xcbd3:	lea	rsi, [r13*8]
0xcbdb:	call	0x1f90


0xc5e8:	add	rdx, rsi
0xc5eb:	mov	rdi, qword ptr [rdi + 0x10]
0xc5ef:	lea	rbp, [rdx + rdx]
0xc5f3:	shl	rdx, 4
0xc5f7:	mov	rsi, rdx
0xc5fa:	call	0x1f90


0xc4a4:	test	rax, rax
0xc4a7:	je	0xc620


0xc260:	lea	r11, [rbx + r10]
0xc264:	mov	rax, r11
0xc267:	shr	rax, 0x3f
0xc26b:	add	rax, r11
0xc26e:	sar	rax, 1
0xc271:	lea	r11, [rax + rax*4]
0xc275:	mov	r14, rax
0xc278:	cmp	qword ptr [r13 + r11*8 + 8], r8
0xc27d:	jl	0xc400


0xc3f0:	mov	r14, r10
0xc3f3:	mov	r10, rbp
0xc3f6:	nop	word ptr cs:[rax + rax]
0xc400:	lea	rbx, [r14 + 1]
0xc404:	mov	rbp, r10
0xc407:	jmp	0xc22e


0xc2b2:	mov	rax, r15
0xc2b5:	xor	ebp, ebp
0xc2b7:	cmp	rbp, rax
0xc2ba:	jge	0xc314


0xc2bc:	lea	r11, [rbp + rax]
0xc2c1:	mov	r10, r11
0xc2c4:	shr	r10, 0x3f
0xc2c8:	add	r10, r11
0xc2cb:	mov	r11, qword ptr [rdi + 0xd8]
0xc2d2:	sar	r10, 1
0xc2d5:	lea	r13, [r10 + r10*4]
0xc2d9:	cmp	r12, qword ptr [r11 + r13*8 + 8]
0xc2de:	jle	0xc30f


0xc314:	cmp	r15, rbp
0xc317:	jle	0xc440


0xc1bd:	mov	rax, qword ptr [rsi + 0x10]
0xc1c1:	test	rax, rax
0xc1c4:	je	0xc1ce


0xc1b5:	mov	rax, qword ptr [rsi + 0x20]
0xc1b9:	mov	qword ptr [rdx + 0x20], rax
0xc1bd:	mov	rax, qword ptr [rsi + 0x10]
0xc1c1:	test	rax, rax
0xc1c4:	je	0xc1ce


0xc129:	cmp	byte ptr [rax + 0x30], 0x11
0xc12d:	jne	0xc11c


0xc0f0:	mov	rcx, qword ptr [rax + rdx*8 + 8]
0xc0f5:	mov	qword ptr [rax + rdx*8], rcx
0xc0f9:	add	rdx, 1
0xc0fd:	cmp	rdx, qword ptr [rdi]
0xc100:	jl	0xc0f0


0xbf88:	cmp	rsi, rcx
0xbf8b:	jb	0xbf78


0xbf72:	jmp	0xbfa0


0xbfc0:	lea	rax, [rsi + 1]
0xbfc4:	ret	


0xbf32:	mov	eax, 1
0xbf37:	ret	


0xbf10:	mov	rcx, qword ptr [rdi + 0x10]
0xbf14:	mov	r8, qword ptr [rcx + rdx]
0xbf18:	mov	rcx, qword ptr [rsi + 0x10]
0xbf1c:	mov	rcx, qword ptr [rcx + rdx]
0xbf20:	sub	rdx, 8
0xbf24:	cmp	r8, rcx
0xbf27:	jne	0xbf40


0xbedb:	cmp	rdx, rcx
0xbede:	mov	eax, edx
0xbee0:	jne	0xbed0


0xbca4:	mov	rax, rbx
0xbca7:	add	rbx, 1
0xbcab:	shl	rax, 4
0xbcaf:	add	rdi, rax
0xbcb2:	call	0xb6a0


0xba90:	add	rsp, 0x18
0xba94:	pop	rbx
0xba95:	pop	rbp
0xba96:	pop	r12
0xba98:	pop	r13
0xba9a:	pop	r14
0xba9c:	pop	r15
0xba9e:	ret	


0xbaf0:	cmp	r9, qword ptr [rsp + 8]
0xbaf5:	jne	0xbb00


0xb9db:	mov	rdx, qword ptr [r14 + 0x10]
0xb9df:	lea	rsi, [rdx - 1]
0xb9e3:	mov	rax, rsi
0xb9e6:	shl	rax, 4
0xb9ea:	add	rax, r8
0xb9ed:	test	byte ptr [rax + 0xa], 4
0xb9f1:	je	0xbaa0


0xb7ac:	add	rsp, 0x18
0xb7b0:	pop	rbx
0xb7b1:	pop	rbp
0xb7b2:	pop	r12
0xb7b4:	pop	r13
0xb7b6:	pop	r14
0xb7b8:	pop	r15
0xb7ba:	ret	


0xb62f:	lea	esi, [rbp + 1]
0xb632:	mov	rdi, rbx
0xb635:	call	0xb490


0xb640:	mov	rax, qword ptr [rbx + 0xb8]
0xb647:	mov	rdx, rbp
0xb64a:	xor	esi, esi
0xb64c:	sub	rdx, r12
0xb64f:	shl	rdx, 3
0xb653:	lea	rdi, [rax + r12*8 + 8]
0xb658:	call	0x1e40


0xb614:	xor	eax, eax
0xb616:	pop	rbx
0xb617:	pop	rbp
0xb618:	pop	r12
0xb61a:	ret	


0xb04d:	cmp	r15, rbx
0xb050:	jge	0xb1e8


0xaf34:	mov	rbp, qword ptr [r14 + 0x28]
0xaf38:	add	rbp, r13
0xaf3b:	add	rbp, qword ptr [r14]
0xaf3e:	mov	qword ptr [rsp + 0x18], rbp
0xaf43:	mov	rcx, qword ptr [rsp + 8]
0xaf48:	mov	rdx, qword ptr [rsp + 0x10]
0xaf4d:	mov	rsi, qword ptr [rsp + 0x18]
0xaf52:	mov	rdi, qword ptr [rsp + 0x20]
0xaf57:	call	0xa3b0


0xb239:	mov	eax, dword ptr [r14 + 0x90]
0xb240:	test	eax, eax
0xb242:	jle	0xb460


0xaee6:	add	rsp, 0xa8
0xaeed:	pop	rbx
0xaeee:	pop	rbp
0xaeef:	pop	r12
0xaef1:	pop	r13
0xaef3:	pop	r14
0xaef5:	pop	r15
0xaef7:	ret	


0xb46a:	call	0x1db0


0xadf1:	jmp	0xad09


0xae11:	mov	rcx, qword ptr [rbx]
0xae14:	add	rcx, rbp
0xae17:	add	rcx, rax
0xae1a:	add	rcx, qword ptr [rbx + 0x28]
0xae1e:	movzx	ecx, byte ptr [rcx]
0xae21:	movzx	ecx, byte ptr [rdi + rcx]
0xae25:	mov	rdi, qword ptr [rbx + 8]
0xae29:	add	rdi, rbp
0xae2c:	mov	byte ptr [rdi + rax], cl
0xae2f:	mov	byte ptr [rsi + rax], cl
0xae32:	lea	ecx, [rax + 1]
0xae35:	cmp	ecx, dword ptr [rbx + 0x90]
0xae3b:	jl	0xae00




0xab10:	lea	rdx, [rsi + rsi]
0xab14:	shl	rsi, 4
0xab18:	mov	qword ptr [rdi], rdx
0xab1b:	mov	rdi, rax
0xab1e:	call	0x1f90


0xaa89:	cmp	qword ptr [rax], rbp
0xaa8c:	lea	rdx, [rsi*8]
0xaa94:	jle	0xaad0


0xa855:	mov	rsi, rbx
0xa858:	mov	rdi, rbp
0xa85b:	call	r12


0xa815:	mov	r8, r9
0xa818:	jmp	0xa590


0xa7f2:	xor	eax, eax
0xa7f4:	cmp	r10, r8
0xa7f7:	je	0xa810


0xa651:	mov	ecx, dword ptr [rsp + 0xc]
0xa655:	test	ecx, ecx
0xa657:	je	0xa626


0xa618:	cmp	dl, 9
0xa61b:	je	0xa770


0xa4e0:	and	edx, 1
0xa4e3:	je	0xa4ef


0xa478:	cmp	cl, 0x5b
0xa47b:	je	0xa4b0


0xa464:	mov	r9, qword ptr [rsi + 0x10]
0xa468:	cmp	dword ptr [r9 + rax*4], -1
0xa46d:	je	0xa4ef


0xa371:	push	r12
0xa373:	push	rbp
0xa374:	mov	r12d, edx
0xa377:	push	rbx
0xa378:	mov	rbp, rsi
0xa37b:	mov	rbx, rdi
0xa37e:	call	0x1ef0








0x99e6:	test	rdx, rdx
0x99e9:	je	0x99ba


0x9801:	call	0x92a0


0x9825:	mov	dword ptr [rsp + 8], r10d
0x982a:	jmp	0x9801


0x97d0:	cmp	r10d, 0x2f
0x97d4:	ja	0x982c


0x9700:	mov	eax, dword ptr [r10]
0x9703:	cmp	eax, 0x2f
0x9706:	ja	0x974a




0x8514:	pop	rbx
0x8515:	mov	dword ptr [rip + 0x218b79], 1
0x851f:	pop	rbp
0x8520:	pop	r12
0x8522:	ret	


0x8505:	mov	rdi, r12
0x8508:	call	0x1c60






0x1e90:	jmp	qword ptr [rip + 0x21efea]


0x50b5:	lea	rdx, [rax + 1]
0x50b9:	mov	qword ptr [rdi + 0x28], rdx
0x50bd:	mov	byte ptr [rax], bpl
0x50c0:	add	rbx, 1
0x50c4:	cmp	r15, rbx
0x50c7:	jne	0x4fd8


0x5180:	mov	esi, edx
0x5182:	call	0x1e00


0x5003:	cmp	bpl, 0x5c
0x5007:	je	0x5158


0x4ff6:	cmp	dword ptr [rip + 0x21c887], 3
0x4ffd:	je	0x5130


0x4f82:	pop	rbx
0x4f83:	ret	


0x4f60:	mov	rdi, qword ptr [rip + 0x21c161]
0x4f67:	mov	rax, qword ptr [rdi + 0x28]
0x4f6b:	cmp	rax, qword ptr [rdi + 0x30]
0x4f6f:	jae	0x4f88


0x1e00:	jmp	qword ptr [rip + 0x21f032]


0x4dc7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4dc9:	seta	al
0x4dcc:	sbb	al, 0
0x4dce:	test	al, al
0x4dd0:	je	0x4d76


0x49a2:	setl	al
0x49a5:	movzx	eax, al
0x49a8:	ret	


0x49a9:	mov	eax, 0xffffffff
0x49ae:	ret	


0x4980:	xor	edx, edx
0x4982:	jmp	0x4994


0x49ae:	ret	


0x49d5:	xor	edx, edx
0x49d7:	jmp	0x49f5


0x2110:	jmp	qword ptr [rip + 0x21eeca]


0x188ca:	add	rdi, 0x3d
0x188ce:	and	rdi, 0xfffffffffffffff0
0x188d2:	sub	rsp, rdi
0x188d5:	lea	rdi, [rsp + 0xf]
0x188da:	and	rdi, 0xfffffffffffffff0
0x188de:	add	rdi, 0x1f
0x188e2:	and	rdi, 0xffffffffffffffe0
0x188e6:	test	rdi, rdi
0x188e9:	je	0x18980


0x189e8:	mov	qword ptr [rbp - 0x30], rcx
0x189ec:	mov	qword ptr [rbp - 0x28], rsi
0x189f0:	call	0x1abb0


0x1852f:	mov	rdi, rbp
0x18532:	mov	r9, rdx
0x18535:	mov	r8, rdx
0x18538:	call	0x12970


0x182e0:	mov	r14, rsi
0x182e3:	xor	r13d, r13d
0x182e6:	jmp	0x18238


0x1822b:	xor	r13d, r13d
0x1822e:	test	rbx, rbx
0x18231:	mov	qword ptr [rsp + 8], rsi
0x18236:	jne	0x18280


0x17da0:	test	r8, r8
0x17da3:	js	0x18088


0x17d97:	cmp	rcx, r8
0x17d9a:	jg	0x18010


0x17db7:	movzx	eax, byte ptr [r15 + 0x38]
0x17dbc:	mov	r13d, eax
0x17dbf:	shr	r13b, 5
0x17dc3:	mov	edi, r13d
0x17dc6:	and	edi, 3
0x17dc9:	cmp	r8, rbx
0x17dcc:	mov	dword ptr [rsp + 0x2c], edi
0x17dd0:	jle	0x17de1


0x16e7c:	mov	rdi, rbx
0x16e7f:	call	0xbc80




0x14cce:	cmp	byte ptr [rbx + 0x8b], 0
0x14cd5:	jne	0x15160


0x14d70:	mov	byte ptr [rbp + 8], 0x24
0x14d74:	mov	eax, 1
0x14d79:	jmp	0x14c14


0x20e0:	jmp	qword ptr [rip + 0x21eec2]


0x14d5a:	mov	rax, qword ptr [rbx + 0x10]
0x14d5e:	mov	byte ptr [rbp + 8], 1
0x14d62:	mov	ecx, dword ptr [rax + r14*4]
0x14d66:	jmp	0x14bd6


0x14ca0:	or	r13d, 0x20
0x14ca4:	mov	byte ptr [rdi + 8], 1
0x14ca8:	mov	eax, 1
0x14cad:	mov	byte ptr [rdi + 0xa], r13b
0x14cb1:	jmp	0x14c14


0x14bc8:	cmp	r12b, 0x5c
0x14bcc:	je	0x14cc0


0x149f2:	cmp	al, 0x1e
0x149f4:	movsxd	r14, r8d
0x149f7:	je	0x14a60


0x14951:	mov	rcx, qword ptr [rsp + 0x18]
0x14956:	xor	rcx, qword ptr fs:[0x28]
0x1495f:	jne	0x14b48


0x14995:	test	r9b, r9b
0x14998:	je	0x14ae2


0x1499e:	movzx	eax, byte ptr [rbp]
0x149a2:	mov	dword ptr [rbx], 0
0x149a8:	mov	byte ptr [rbx + 8], al
0x149ab:	xor	eax, eax
0x149ad:	jmp	0x14951


0x1414f:	add	rsp, 0xa8
0x14156:	pop	rbx
0x14157:	pop	rbp
0x14158:	pop	r12
0x1415a:	pop	r13
0x1415c:	pop	r14
0x1415e:	pop	r15
0x14160:	ret	


0x148eb:	call	0x1db0


0x14225:	lea	rax, [rbx + rdx]
0x14229:	mov	rcx, rax
0x1422c:	shr	rcx, 0x3f
0x14230:	add	rcx, rax
0x14233:	mov	rax, qword ptr [rsp + 8]
0x14238:	sar	rcx, 1
0x1423b:	mov	rdi, qword ptr [rax + 0xd8]
0x14242:	lea	rax, [rcx + rcx*4]
0x14246:	cmp	rbp, qword ptr [rdi + rax*8 + 8]
0x1424b:	jle	0x1427e


0x14283:	cmp	rsi, rbx
0x14286:	jle	0x14380


0x12a35:	mov	rcx, qword ptr [rsp + 0x270]
0x12a3d:	lea	rdx, [rcx - 1]
0x12a41:	sub	rdx, rax
0x12a44:	sub	qword ptr [rsp + 0x270], rdx
0x12a4c:	mov	qword ptr [rsp + 0x98], rdx
0x12a54:	mov	rsi, qword ptr [rsp + 0x48]
0x12a59:	cmp	qword ptr [rsi + 0x10], 0
0x12a5e:	je	0x138f0


0x12a54:	mov	rsi, qword ptr [rsp + 0x48]
0x12a59:	cmp	qword ptr [rsi + 0x10], 0
0x12a5e:	je	0x138f0


0x12e90:	mov	qword ptr [rsp + 0x68], 0
0x12e99:	jmp	0x12a16


0x12a01:	cmp	rbp, r8
0x12a04:	je	0x12e90


0x11c90:	mov	rdi, qword ptr [r14 + 0xc8]
0x11c97:	mov	rax, qword ptr [r14 + 0x98]
0x11c9e:	xor	ecx, ecx
0x11ca0:	mov	r10, qword ptr [r14 + 8]
0x11ca4:	mov	r9, qword ptr [rsp + 8]
0x11ca9:	mov	qword ptr [rsp + 0x70], rdi
0x11cae:	mov	qword ptr [rsp + 0x50], rax
0x11cb3:	cmp	rcx, rdi
0x11cb6:	jge	0x11d0b


0x11c4a:	mov	edx, dword ptr [r14 + 0xa0]
0x11c51:	mov	rsi, qword ptr [rsp + 8]
0x11c56:	mov	rdi, r14
0x11c59:	call	0xdd30


0x10efb:	add	rsp, 0xd8
0x10f02:	pop	rbx
0x10f03:	pop	rbp
0x10f04:	pop	r12
0x10f06:	pop	r13
0x10f08:	pop	r14
0x10f0a:	pop	r15
0x10f0c:	ret	


0x110ac:	call	0x1db0


0x10856:	add	edx, -0x80
0x10859:	mov	ebp, 2
0x1085e:	cmp	dl, 0x3f
0x10861:	ja	0x107f0


0x108be:	cmp	al, 0xef
0x108c0:	ja	0x10908


0x102e1:	movzx	r13d, byte ptr [rsi]
0x102e5:	test	ebx, ebx
0x102e7:	mov	byte ptr [rbp + r13], 1
0x102ed:	je	0x10300


0x10270:	cmp	eax, 3
0x10273:	je	0x10566




0xf895:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xf897:	mov	rcx, qword ptr [r13]
0xf89b:	seta	al
0xf89e:	sbb	al, 0
0xf8a0:	test	al, al
0xf8a2:	lea	rax, [rip + 0xce98]
0xf8a9:	cmove	r12, rax
0xf8ad:	cmp	qword ptr [r8], rcx
0xf8b0:	mov	rax, qword ptr [rdx]
0xf8b3:	jne	0xf7a8


0xe930:	xor	r9d, r9d
0xe933:	test	r10, r10
0xe936:	lea	r11, [rsp + 0x30]
0xe93b:	jle	0xe98c


0xe87b:	lea	r9, [rax + rax*2]
0xe87f:	mov	rcx, qword ptr [r12 + 0x28]
0xe884:	lea	r11, [rbp + 0x10]
0xe888:	mov	rdi, r10
0xe88b:	shl	r9, 3
0xe88f:	mov	rsi, r11
0xe892:	add	rcx, r9
0xe895:	mov	r15, qword ptr [rcx + 0x10]
0xe899:	mov	qword ptr [rsp + 8], rcx
0xe89e:	mov	r8, qword ptr [r15]
0xe8a1:	mov	rdx, r8
0xe8a4:	mov	qword ptr [rsp], r8
0xe8a8:	call	0xbf50


0xe1c5:	mov	qword ptr [rbx + 0x30], rax
0xe1c9:	jmp	0xe133


0xe570:	cmp	byte ptr [rbx + 0x88], 0
0xe577:	jne	0xe670


0xe1a8:	call	0xaca0


0xe12a:	call	0xae70


0xe1d8:	movsxd	rdx, dword ptr [rbx + 0x90]
0xe1df:	mov	qword ptr [rbx + 0x30], 0
0xe1e7:	mov	r11, qword ptr [rbx + 0x28]
0xe1eb:	cmp	edx, 1
0xe1ee:	jle	0xe5d8


0xe67d:	mov	rdx, qword ptr [rbx + 0x50]
0xe681:	mov	byte ptr [rbx + 0x8c], 0
0xe688:	add	rdx, rbp
0xe68b:	sub	rdx, r15
0xe68e:	mov	qword ptr [rbx + 0x58], rdx
0xe692:	mov	rdx, qword ptr [rbx + 0x60]
0xe696:	add	rdx, rbp
0xe699:	sub	rdx, r15
0xe69c:	mov	qword ptr [rbx + 0x68], rdx
0xe6a0:	jmp	0xe1d8


0xe0bb:	lea	rsi, [rbp - 1]
0xe0bf:	mov	edx, r10d
0xe0c2:	mov	rdi, rbx
0xe0c5:	mov	qword ptr [rsp], r8
0xe0c9:	call	0xdd30


0xe2c8:	mov	r14, qword ptr [rbx + 0x18]
0xe2cc:	mov	rcx, r8
0xe2cf:	xor	esi, esi
0xe2d1:	jmp	0xe2e3


0xdeda:	ret	


0xdf18:	mov	rcx, qword ptr [rdi + 0x98]
0xdf1f:	xor	eax, eax
0xdf21:	test	byte ptr [rcx + 0xd8], 0x40
0xdf28:	jne	0xde70


0xde59:	test	cl, cl
0xde5b:	jne	0xde70


0xde46:	xor	eax, eax
0xde48:	test	cl, cl
0xde4a:	js	0xdeda


0xddc5:	xor	eax, eax
0xddc7:	cmp	dl, 0xa
0xddca:	jne	0xdd82


0xdd6a:	mov	ebx, dword ptr [rax + rsi*4]
0xdd6d:	cmp	ebx, -1
0xdd70:	je	0xdd60


0xdc3f:	mov	rsi, qword ptr [r13 + 0xa0]
0xdc46:	bt	rsi, rax
0xdc4a:	jae	0xdc10


0xd8cf:	mov	rcx, rax
0xd8d2:	cmp	rsi, rcx
0xd8d5:	jl	0xd8b0


0xd930:	lea	rsi, [r9 + 1]
0xd934:	mov	rdx, rcx
0xd937:	jmp	0xd87d


0xd87d:	cmp	rsi, rdx
0xd880:	jge	0xd8d7


0xd940:	lea	rax, [rbp + 0x10]
0xd944:	mov	r13, qword ptr [rbx + 0x98]
0xd94b:	mov	qword ptr [rsp], rax
0xd94f:	lea	rax, [rsp + 0x4c]
0xd954:	mov	qword ptr [rsp + 0x38], rax
0xd959:	lea	rax, [rsp + 0x50]
0xd95e:	mov	qword ptr [rsp + 0x10], rax
0xd963:	mov	rax, qword ptr [rsp + 0x30]
0xd968:	lea	r15, [rcx + rax]
0xd96c:	jmp	0xda48


0xd7f3:	add	r15, 1
0xd7f7:	cmp	rbp, r15
0xd7fa:	je	0xd816


0xd7b5:	add	rdx, 8
0xd7b9:	add	rsi, 8
0xd7bd:	mov	rdi, r13
0xd7c0:	call	0xd140


0xd5d9:	lea	rdi, [rbx + 8]
0xd5dd:	mov	rsi, r14
0xd5e0:	call	0xbef0


0xd5ed:	add	r9, 1
0xd5f1:	cmp	r10, r9
0xd5f4:	jne	0xd5d0


0xd321:	mov	r14, qword ptr [rbx + r10*8]
0xd325:	cmp	qword ptr [r14], r12
0xd328:	jne	0xd318


0xd174:	mov	r12, rdi
0xd177:	lea	rdi, [r13 + r14]
0xd17c:	mov	rbx, rdx
0xd17f:	mov	rbp, rsi
0xd182:	mov	qword ptr [r12], rdi
0xd186:	shl	rdi, 3
0xd18a:	call	0x1f20


0xce2b:	lea	rax, [rbx + 0x70]
0xce2f:	lea	r14, [rsp + 0x20]
0xce34:	sub	rbx, -0x80
0xce38:	xor	ecx, ecx
0xce3a:	xor	edx, edx
0xce3c:	mov	rsi, rbx
0xce3f:	mov	r15, rax
0xce42:	mov	r8, r14
0xce45:	mov	rdi, rax
0xce48:	mov	byte ptr [rsp + 0x28], 8
0xce4d:	mov	qword ptr [rsp + 8], rax
0xce52:	call	0xcc10


0xcf64:	add	rsp, 0x48
0xcf68:	pop	rbx
0xcf69:	pop	rbp
0xcf6a:	pop	r12
0xcf6c:	pop	r13
0xcf6e:	pop	r14
0xcf70:	pop	r15
0xcf72:	ret	


0xd002:	call	0x1db0


0xcae6:	test	rcx, rcx
0xcae9:	jns	0xcafa


0xcad5:	jge	0xcb30


0xc620:	mov	qword ptr [rbx + 8], rdx
0xc624:	mov	rax, qword ptr [r12 + 8]
0xc629:	mov	rdi, qword ptr [rbx + 0x10]
0xc62d:	mov	rsi, qword ptr [r12 + 0x10]
0xc632:	lea	rdx, [rax*8]
0xc63a:	call	0x1ee0


0xc4ad:	lea	rbp, [rax + rdx*2]
0xc4b1:	sub	rdx, 1
0xc4b5:	sub	rax, 1
0xc4b9:	mov	rdi, rdx
0xc4bc:	not	rdi
0xc4bf:	test	rdi, rdi
0xc4c2:	jns	0xc500


0xc400:	lea	rbx, [r14 + 1]
0xc404:	mov	rbp, r10
0xc407:	jmp	0xc22e


0xc283:	mov	r10, rax
0xc286:	cmp	rbx, r10
0xc289:	jl	0xc260


0xc22e:	cmp	rbx, rbp
0xc231:	jge	0xc28b


0xc30f:	cmp	rbp, r10
0xc312:	jl	0xc2e8


0xc2e0:	jmp	0xc410


0xc440:	mov	rbp, -1
0xc447:	jmp	0xc33c


0xc31d:	mov	r10, qword ptr [rdi + 0xd8]
0xc324:	lea	rax, [rbp + rbp*4]
0xc329:	lea	rax, [r10 + rax*8]
0xc32d:	cmp	r12, qword ptr [rax + 8]
0xc331:	mov	rax, -1
0xc338:	cmovne	rbp, rax
0xc33c:	cmp	qword ptr [rsi], 0
0xc340:	jle	0xc462


0xc1ce:	xor	eax, eax
0xc1d0:	ret	


0xc1c6:	mov	rdx, qword ptr [rsi + 0x20]
0xc1ca:	mov	qword ptr [rax + 0x20], rdx
0xc1ce:	xor	eax, eax
0xc1d0:	ret	


0xc12f:	mov	rcx, qword ptr [rax + 0x28]
0xc133:	mov	rax, qword ptr [rax + 8]
0xc137:	test	rax, rax
0xc13a:	mov	qword ptr [rsi + 8], rax
0xc13e:	je	0xc143


0xbf78:	lea	rax, [rsi + rcx]
0xbf7c:	shr	rax, 1
0xbf7f:	cmp	qword ptr [r8 + rax*8], rdx
0xbf83:	jl	0xbfb0


0xbfa0:	mov	rax, rcx
0xbfa3:	mov	rcx, rdi
0xbfa6:	nop	word ptr cs:[rax + rax]
0xbfb0:	lea	rsi, [rax + 1]
0xbfb4:	mov	rdi, rcx
0xbfb7:	jmp	0xbf60


0xbf29:	sub	rax, 1
0xbf2d:	test	rax, rax
0xbf30:	jns	0xbf10


0xbf40:	xor	eax, eax
0xbf42:	ret	


0xbee2:	ret	


0xbed0:	add	rdx, 1
0xbed4:	cmp	dword ptr [rsi + rdx*4 - 4], -1
0xbed9:	jne	0xbeed


0xbaf7:	cmp	r9, r13
0xbafa:	jne	0xbbbc


0xbb00:	mov	eax, dword ptr [rax + 8]
0xbb03:	mov	rsi, r15
0xbb06:	mov	rdi, r14
0xbb09:	shr	eax, 8
0xbb0c:	and	eax, 0x3ff
0xbb11:	or	ebp, eax
0xbb13:	mov	edx, ebp
0xbb15:	call	0xb8c0


0xbaa0:	mov	edx, ebp
0xbaa2:	mov	rsi, r15
0xbaa5:	mov	rdi, r14
0xbaa8:	call	0xb8c0


0xb9f7:	test	rsi, rsi
0xb9fa:	jle	0xbaa0


0x1e40:	jmp	qword ptr [rip + 0x21f012]


0xb056:	lea	rax, [rdi + 0x20]
0xb05a:	mov	qword ptr [rsp + 8], rax
0xb05f:	lea	rax, [rsp + 0x44]
0xb064:	mov	qword ptr [rsp + 0x30], rax
0xb069:	lea	rax, [rsp + 0x48]
0xb06e:	mov	qword ptr [rsp + 0x38], rax
0xb073:	lea	rax, [rsp + 0x50]
0xb078:	mov	qword ptr [rsp + 0x28], rax
0xb07d:	nop	dword ptr [rax]
0xb080:	mov	rbp, qword ptr [r14 + 0x28]
0xb084:	mov	r13, r15
0xb087:	add	rbp, r15
0xb08a:	add	rbp, qword ptr [r14]
0xb08d:	movzx	r12d, byte ptr [rbp]
0xb092:	test	r12b, 0x80
0xb096:	jne	0xb0aa


0xb1e8:	mov	qword ptr [r14 + 0x30], r15
0xb1ec:	mov	qword ptr [r14 + 0x38], r15
0xb1f0:	xor	eax, eax
0xb1f2:	jmp	0xaecf


0xb460:	lea	rcx, [rsp + 0x50]
0xb465:	jmp	0xb27b


0xb248:	mov	rdi, qword ptr [r14 + 0x28]
0xb24c:	lea	r11d, [rax - 1]
0xb250:	lea	rcx, [rsp + 0x50]
0xb255:	xor	eax, eax
0xb257:	add	rdi, r13
0xb25a:	add	rdi, qword ptr [r14]
0xb25d:	jmp	0xb26a


0xad09:	mov	rcx, r14
0xad0c:	mov	rdi, r13
0xad0f:	call	0xa3b0


0xae00:	add	rax, 1
0xae04:	cmp	rdx, rax
0xae07:	je	0xad09


0xae3d:	jmp	0xad09


0xaad0:	mov	rcx, qword ptr [rax + rdx - 8]
0xaad5:	cmp	rbp, rcx
0xaad8:	jge	0xaab3


0xaa96:	test	rsi, rsi
0xaa99:	jle	0xaab3


0xa810:	mov	esi, 1
0xa815:	mov	r8, r9
0xa818:	jmp	0xa590


0xa7f9:	ret	


0xa626:	add	rbx, 1
0xa62a:	cmp	qword ptr [r12 + 8], rbx
0xa62f:	jle	0xa750


0xa659:	cmp	qword ptr [rax], r15
0xa65c:	jne	0xa626


0xa770:	mov	edx, dword ptr [rsp + 8]
0xa774:	test	edx, edx
0xa776:	je	0xa626


0xa621:	cmp	dl, 4
0xa624:	je	0xa678


0xa4ef:	mov	byte ptr [rdi + 8], 1
0xa4f3:	mov	eax, 1
0xa4f8:	ret	


0xa4e5:	lea	rdx, [rax + 1]
0xa4e9:	cmp	rdx, qword ptr [rsi + 0x58]
0xa4ed:	jl	0xa530


0xa4b0:	lea	rcx, [rax + 1]
0xa4b4:	cmp	rcx, qword ptr [rsi + 0x58]
0xa4b8:	jge	0xa500


0xa47d:	cmp	cl, 0x5d
0xa480:	je	0xa520


0x99ba:	mov	qword ptr [rsi], rcx
0x99bd:	imul	rcx, r9
0x99c1:	mov	rsi, rcx
0x99c4:	jmp	0x9920




0x50cd:	add	rsp, 0x18
0x50d1:	pop	rbx
0x50d2:	pop	rbp
0x50d3:	pop	r12
0x50d5:	pop	r13
0x50d7:	pop	r14
0x50d9:	pop	r15
0x50db:	ret	


0x4fd8:	movzx	edx, byte ptr [rbx]
0x4fdb:	movsxd	rax, edx
0x4fde:	mov	ebp, edx
0x4fe0:	cmp	byte ptr [r13 + rax], 0
0x4fe6:	je	0x50a0


0x5158:	mov	rcx, qword ptr [rip + 0x21bf69]
0x515f:	lea	rdi, [rip + 0x165e5]
0x5166:	mov	edx, 0xc
0x516b:	mov	esi, 1
0x5170:	call	0x1f80


0x500d:	jg	0x50e0


0x5130:	lea	rcx, [rip + 0x16a09]
0x5137:	cmp	sil, 9
0x513b:	movsx	ecx, byte ptr [rcx + rax]
0x513f:	mov	r10d, ecx
0x5142:	ja	0x50c0




0x4dd2:	mov	rsi, rsp
0x4dd5:	mov	rdi, rbx
0x4dd8:	call	0x8c10


0x4994:	add	rdx, 1
0x4998:	cmp	r8, rdx
0x499b:	jne	0x4988


0x49f5:	add	rdx, 1
0x49f9:	cmp	r8, rdx
0x49fc:	jne	0x49e0


0x188ef:	cmp	r12, 2
0x188f3:	mov	qword ptr [rdi + 8], 1
0x188fb:	jbe	0x18941


0x18238:	movzx	r8d, r8b
0x1823c:	mov	rdx, r15
0x1823f:	mov	rsi, r14
0x18242:	push	r8
0x18244:	push	qword ptr [rsp + 0x70]
0x18248:	mov	rdi, r12
0x1824b:	mov	r9, qword ptr [rsp + 0x80]
0x18253:	mov	r8, qword ptr [rsp + 0x70]
0x18258:	call	0x17d50


0x18280:	mov	rdi, r15
0x18283:	mov	dword ptr [rsp + 0x1c], r8d
0x18288:	mov	qword ptr [rsp + 0x10], r9
0x1828d:	call	0x1f20


0x18088:	movzx	eax, byte ptr [r15 + 0x38]
0x1808d:	xor	r8d, r8d
0x18090:	mov	r13d, eax
0x18093:	shr	r13b, 5
0x18097:	mov	edi, r13d
0x1809a:	and	edi, 3
0x1809d:	mov	dword ptr [rsp + 0x2c], edi
0x180a1:	jmp	0x17de1


0x17da9:	test	rax, rax
0x17dac:	jns	0x17db7


0x17de1:	test	al, 0x10
0x17de3:	jne	0x17fb0


0x17dd2:	cmp	qword ptr [r15 + 0x20], 0
0x17dd7:	je	0x17de1


0x14cdb:	movzx	edi, byte ptr [rdx + r14 + 1]
0x14ce1:	mov	r12d, edi
0x14ce4:	mov	dword ptr [rsp + 8], edi
0x14ce8:	cmp	eax, 1
0x14ceb:	mov	byte ptr [rbp], r12b
0x14cef:	mov	byte ptr [rbp + 8], 1
0x14cf3:	jle	0x15140


0x15160:	cmp	eax, 1
0x15163:	jle	0x15194


0x14c14:	mov	rdi, qword ptr [rsp + 0x28]
0x14c19:	xor	rdi, qword ptr fs:[0x28]
0x14c22:	jne	0x15248




0x14bd6:	mov	edi, ecx
0x14bd8:	mov	qword ptr [rsp + 8], rdx
0x14bdd:	mov	dword ptr [rsp], ecx
0x14be0:	call	0x1f10


0x14bd2:	mov	byte ptr [rdi + 8], 1
0x14bd6:	mov	edi, ecx
0x14bd8:	mov	qword ptr [rsp + 8], rdx
0x14bdd:	mov	dword ptr [rsp], ecx
0x14be0:	call	0x1f10


0x14a60:	cmp	byte ptr [r10 + 0x8b], 0
0x14a68:	je	0x149f9


0x149f9:	mov	rdx, qword ptr [r10 + 8]
0x149fd:	lea	rax, [r11 + 1]
0x14a01:	mov	qword ptr [r10 + 0x48], rax
0x14a05:	movzx	r9d, byte ptr [rdx + r11]
0x14a0a:	cmp	rax, r12
0x14a0d:	jge	0x14ad8


0x14965:	add	rsp, 0x20
0x14969:	pop	rbx
0x1496a:	pop	rbp
0x1496b:	pop	r12
0x1496d:	pop	r13
0x1496f:	pop	r14
0x14971:	ret	


0x14b48:	call	0x1db0


0x14ae2:	mov	rdi, rsp
0x14ae5:	mov	rdx, r8
0x14ae8:	mov	rsi, r10
0x14aeb:	call	0xa440


0x1427e:	cmp	rbx, rcx
0x14281:	jl	0x14258


0x1424d:	jmp	0x14387


0x14380:	xor	eax, eax
0x14382:	jmp	0x14138


0x1428c:	lea	rax, [rbx + rbx*4]
0x14290:	lea	rsi, [rax*8]
0x14298:	mov	rax, qword ptr [rsp + 8]
0x1429d:	mov	qword ptr [rsp + 0x40], rsi
0x142a2:	mov	rax, qword ptr [rax + 0xd8]
0x142a9:	cmp	rbp, qword ptr [rax + rsi + 8]
0x142ae:	jne	0x14380


0x138f0:	mov	dword ptr [rsp + 0x5c], 1
0x138f8:	jmp	0x134e9


0x12a64:	mov	rdi, qword ptr [rsp + 0x38]
0x12a69:	mov	rax, qword ptr [rdi + 0x48]
0x12a6d:	test	rax, rax
0x12a70:	je	0x138f0


0x12a0a:	and	edx, 1
0x12a0d:	cmove	rax, rdi
0x12a11:	mov	qword ptr [rsp + 0x68], rax
0x12a16:	mov	rax, qword ptr [rsp + 0x48]
0x12a1b:	mov	qword ptr [rsp + 0x98], 0
0x12a27:	mov	rax, qword ptr [rax + 0x30]
0x12a2b:	cmp	rax, qword ptr [rsp + 0x270]
0x12a33:	jae	0x12a54


0x11cb8:	lea	rax, [rcx + rdi]
0x11cbc:	mov	r11, qword ptr [r14 + 0xd8]
0x11cc3:	mov	rsi, rax
0x11cc6:	shr	rsi, 0x3f
0x11cca:	add	rsi, rax
0x11ccd:	sar	rsi, 1
0x11cd0:	lea	rax, [rsi + rsi*4]
0x11cd4:	cmp	r9, qword ptr [r11 + rax*8 + 8]
0x11cd9:	jle	0x11d06


0x11d0b:	cmp	qword ptr [rsp + 0x70], rcx
0x11d10:	jle	0x11d36


0x10863:	jmp	0x107f2


0x108c2:	cmp	al, 0xe0
0x108c4:	jne	0x108cf


0x10908:	cmp	al, 0xf7
0x1090a:	ja	0x10920


0x10300:	mov	rax, qword ptr [rsp + 0x30]
0x10305:	test	byte ptr [rax + 0x1a], 0x40
0x10309:	je	0x10297


0x102ef:	call	0x20d0


0x10566:	mov	r13, rbp
0x10569:	xor	r12d, r12d
0x1056c:	mov	qword ptr [rsp + 0x18], 0
0x10575:	mov	rax, qword ptr [rsp + 0x10]
0x1057a:	mov	rsi, qword ptr [rsp + 0x18]
0x1057f:	xor	r14d, r14d
0x10582:	mov	rax, qword ptr [rcx + rax]
0x10586:	mov	r15, qword ptr [rax + rsi]
0x1058a:	nop	word ptr [rax + rax]
0x10590:	bt	r15, r14
0x10594:	jae	0x105b5


0x10279:	cmp	eax, 6
0x1027c:	je	0x10408


0xe98c:	mov	rdi, qword ptr [rsp + 0x30]
0xe991:	call	0x1c60


0xe133:	mov	qword ptr [rbx + 0x48], 0
0xe13b:	xor	eax, eax
0xe13d:	mov	rcx, qword ptr [rsp + 0x38]
0xe142:	xor	rcx, qword ptr fs:[0x28]
0xe14b:	jne	0xe79a


0xe57d:	mov	rcx, qword ptr [rbx + 0x78]
0xe581:	test	rcx, rcx
0xe584:	je	0xe133


0xe670:	mov	rdi, rbx
0xe673:	call	0xac30


0xe5d8:	mov	rax, qword ptr [rbx]
0xe5db:	mov	rdx, qword ptr [rbx + 0x78]
0xe5df:	add	rax, rbp
0xe5e2:	test	rdx, rdx
0xe5e5:	movzx	eax, byte ptr [r11 + rax - 1]
0xe5eb:	mov	qword ptr [rbx + 0x38], 0
0xe5f3:	je	0xe5f9


0xe1f4:	cmp	byte ptr [rbx + 0x89], 0
0xe1fb:	jne	0xe4b8


0xe2e3:	lea	rdx, [rsi + rcx]
0xe2e7:	mov	rax, rdx
0xe2ea:	shr	rax, 0x3f
0xe2ee:	add	rax, rdx
0xe2f1:	sar	rax, 1
0xe2f4:	mov	rdx, qword ptr [r14 + rax*8]
0xe2f8:	mov	r12, rax
0xe2fb:	cmp	rdx, rbp
0xe2fe:	jle	0xe2d8


0xdf2e:	ret	


0xde5d:	mov	rcx, qword ptr [rdi + 0x98]
0xde64:	xor	eax, eax
0xde66:	test	byte ptr [rcx + 0xd8], 0x80
0xde6d:	jne	0xdeda


0xddcc:	xor	eax, eax
0xddce:	cmp	byte ptr [rbp + 0x8d], 0
0xddd5:	setne	al
0xddd8:	add	rsp, 8
0xdddc:	add	eax, eax
0xddde:	pop	rbx
0xdddf:	pop	rbp
0xdde0:	ret	


0xdd60:	sub	rsi, 1
0xdd64:	cmp	rsi, -1
0xdd68:	je	0xdd90


0xdd72:	cmp	byte ptr [rbp + 0x8e], 0
0xdd79:	jne	0xddf8


0xdc4c:	mov	r8, qword ptr [r15 + 0xe8]
0xdc53:	cmp	r8, qword ptr [r15 + 0xf0]
0xdc5a:	mov	r9, qword ptr [r15 + 0xf8]
0xdc61:	je	0xdcd8


0xda48:	mov	r10, qword ptr [r15]
0xda4b:	mov	r9, qword ptr [rbp + 8]
0xda4f:	mov	rsi, qword ptr [rsp]
0xda53:	mov	rdx, r10
0xda56:	mov	rdi, r9
0xda59:	call	0xbf50


0xd5d0:	mov	rbx, qword ptr [r11 + r9*8]
0xd5d4:	cmp	qword ptr [rbx], rbp
0xd5d7:	jne	0xd5ed


0xd32a:	movzx	eax, byte ptr [r14 + 0x68]
0xd32f:	and	eax, 0xf
0xd332:	cmp	eax, r9d
0xd335:	jne	0xd318


0xd318:	add	r10, 1
0xd31c:	cmp	r10, r11
0xd31f:	je	0xd360


0xcaeb:	jmp	0xcb08


0xcafa:	mov	r10, qword ptr [rdi + rcx*8]
0xcafe:	cmp	r10, r8
0xcb01:	jg	0xcaf0


0xcad7:	sub	r11, 1
0xcadb:	js	0xcb40


0xcb30:	sub	r9, 1
0xcb34:	js	0xcb40


0xc4c4:	test	rax, rax
0xc4c7:	js	0xc500


0xc500:	test	rdx, rdx
0xc503:	jns	0xc598


0xc2e8:	lea	r13, [rbp + r10]
0xc2ed:	mov	rax, r13
0xc2f0:	shr	rax, 0x3f
0xc2f4:	add	rax, r13
0xc2f7:	sar	rax, 1
0xc2fa:	lea	r13, [rax + rax*4]
0xc2fe:	mov	r14, rax
0xc301:	cmp	qword ptr [r11 + r13*8 + 8], r12
0xc306:	jl	0xc420


0xc410:	mov	r14, r10
0xc413:	mov	r10, rax
0xc416:	nop	word ptr cs:[rax + rax]
0xc420:	lea	rbp, [r14 + 1]
0xc424:	mov	rax, r10
0xc427:	jmp	0xc2b7


0xc33c:	cmp	qword ptr [rsi], 0
0xc340:	jle	0xc462


0xc462:	xor	eax, eax
0xc464:	jmp	0xc3de


0xc346:	mov	qword ptr [rsp + 0x30], rbp
0xc34b:	mov	qword ptr [rsp + 0x20], r9
0xc350:	mov	r13, rdi
0xc353:	mov	qword ptr [rsp + 0x18], r8
0xc358:	mov	qword ptr [rsp + 0x10], rcx
0xc35d:	xor	r14d, r14d
0xc360:	mov	qword ptr [rsp + 0x38], rsi
0xc365:	mov	qword ptr [rsp + 0x28], rbx
0xc36a:	mov	rbp, rdx
0xc36d:	mov	r15, r12
0xc370:	mov	rax, qword ptr [rbp]
0xc374:	mov	rdx, qword ptr [r13 + 0xd8]
0xc37b:	mov	rdi, r13
0xc37e:	mov	r9, qword ptr [rsp + 0x28]
0xc383:	mov	r8, qword ptr [rsp + 0x18]
0xc388:	mov	rcx, qword ptr [rsp + 0x10]
0xc38d:	mov	rsi, qword ptr [rax + r14*8]
0xc391:	lea	rax, [rsi + rsi*4]
0xc395:	lea	rax, [rdx + rax*8]
0xc399:	mov	rdx, qword ptr [rsp + 8]
0xc39e:	mov	rax, qword ptr [rax]
0xc3a1:	shl	rax, 4
0xc3a5:	add	rax, qword ptr [rdx]
0xc3a8:	mov	r12, qword ptr [rax]
0xc3ab:	mov	rdx, r12
0xc3ae:	call	0xa7c0


0xc143:	mov	rax, qword ptr [rdi + 0xe0]
0xc14a:	mov	rdx, qword ptr [rsi + 0x28]
0xc14e:	cmp	rcx, 0x3f
0xc152:	mov	rdx, qword ptr [rax + rdx*8]
0xc156:	mov	qword ptr [rax + rcx*8], rdx
0xc15a:	jg	0xc11c


0xc140:	mov	qword ptr [rax], rsi
0xc143:	mov	rax, qword ptr [rdi + 0xe0]
0xc14a:	mov	rdx, qword ptr [rsi + 0x28]
0xc14e:	cmp	rcx, 0x3f
0xc152:	mov	rdx, qword ptr [rax + rdx*8]
0xc156:	mov	qword ptr [rax + rcx*8], rdx
0xc15a:	jg	0xc11c


0xbfb0:	lea	rsi, [rax + 1]
0xbfb4:	mov	rdi, rcx
0xbfb7:	jmp	0xbf60


0xbf85:	mov	rcx, rax
0xbf88:	cmp	rsi, rcx
0xbf8b:	jb	0xbf78


0xbf60:	cmp	rsi, rdi
0xbf63:	jae	0xbf8d


0xbeed:	ret	


0xbbbc:	mov	rsi, r15
0xbbbf:	call	0xaa10


0xba00:	shl	rdx, 4
0xba04:	sub	r8, rax
0xba07:	mov	rcx, qword ptr [r14 + 0x20]
0xba0b:	lea	r8, [r8 + rdx - 0x20]
0xba10:	jmp	0xba2a




0xb098:	mov	rdi, qword ptr [rsp + 8]
0xb09d:	call	0x20b0


0xb0aa:	mov	rax, qword ptr [r14 + 0x20]
0xb0ae:	mov	rdi, qword ptr [rsp + 0x30]
0xb0b3:	mov	rdx, rbx
0xb0b6:	mov	rcx, qword ptr [rsp + 8]
0xb0bb:	sub	rdx, r15
0xb0be:	mov	rsi, rbp
0xb0c1:	mov	qword ptr [rsp + 0x10], rdx
0xb0c6:	mov	qword ptr [rsp + 0x48], rax
0xb0cb:	mov	qword ptr [rsp + 0x20], rdi
0xb0d0:	call	0xa3b0


0xaecf:	mov	rcx, qword ptr [rsp + 0x98]
0xaed7:	xor	rcx, qword ptr fs:[0x28]
0xaee0:	jne	0xb46a


0xb27b:	mov	qword ptr [rsp + 0x18], rcx
0xb280:	jmp	0xaf43


0xb26a:	movzx	esi, byte ptr [rdi + rax]
0xb26e:	cmp	r11, rax
0xb271:	movzx	esi, byte ptr [rdx + rsi]
0xb275:	mov	byte ptr [rcx + rax], sil
0xb279:	jne	0xb25f


0xae0d:	mov	rdi, qword ptr [rbx + 0x78]
0xae11:	mov	rcx, qword ptr [rbx]
0xae14:	add	rcx, rbp
0xae17:	add	rcx, rax
0xae1a:	add	rcx, qword ptr [rbx + 0x28]
0xae1e:	movzx	ecx, byte ptr [rcx]
0xae21:	movzx	ecx, byte ptr [rdi + rcx]
0xae25:	mov	rdi, qword ptr [rbx + 8]
0xae29:	add	rdi, rbp
0xae2c:	mov	byte ptr [rdi + rax], cl
0xae2f:	mov	byte ptr [rsi + rax], cl
0xae32:	lea	ecx, [rax + 1]
0xae35:	cmp	ecx, dword ptr [rbx + 0x90]
0xae3b:	jl	0xae00


0xaab3:	mov	qword ptr [rax + rdx], rbp
0xaab7:	mov	eax, 1
0xaabc:	add	qword ptr [rbx + 8], 1
0xaac1:	jmp	0xaa3e


0xaa9b:	add	rdx, rax
0xaa9e:	nop	
0xaaa0:	mov	rcx, qword ptr [rdx - 8]
0xaaa4:	sub	rdx, 8
0xaaa8:	mov	qword ptr [rdx + 8], rcx
0xaaac:	cmp	rax, rdx
0xaaaf:	jne	0xaaa0


0xa750:	mov	r15d, dword ptr [rsp + 0x20]
0xa755:	add	rsp, 0x48
0xa759:	mov	eax, r15d
0xa75c:	pop	rbx
0xa75d:	sar	eax, 1
0xa75f:	pop	rbp
0xa760:	pop	r12
0xa762:	pop	r13
0xa764:	pop	r14
0xa766:	pop	r15
0xa768:	ret	


0xa65e:	add	rsp, 0x48
0xa662:	mov	eax, 0xffffffff
0xa667:	pop	rbx
0xa668:	pop	rbp
0xa669:	pop	r12
0xa66b:	pop	r13
0xa66d:	pop	r14
0xa66f:	pop	r15
0xa671:	ret	


0xa77c:	cmp	qword ptr [rax], r15
0xa77f:	jne	0xa626


0xa678:	cmp	r10, -1
0xa67c:	je	0xa626


0xa530:	mov	qword ptr [rsi + 0x48], rdx
0xa534:	movzx	eax, byte ptr [r8 + rax + 1]
0xa53a:	mov	byte ptr [rdi + 8], 1
0xa53e:	mov	byte ptr [rdi], al
0xa540:	mov	eax, 1
0xa545:	ret	


0xa4ba:	movzx	eax, byte ptr [r8 + rax + 1]
0xa4c0:	cmp	al, 0x3a
0xa4c2:	mov	byte ptr [rdi], al
0xa4c4:	je	0xa560


0xa500:	mov	byte ptr [rdi + 8], 1
0xa504:	mov	byte ptr [rdi], 0x5b
0xa507:	mov	eax, 1
0xa50c:	ret	


0xa520:	mov	byte ptr [rdi + 8], 0x15
0xa524:	mov	eax, 1
0xa529:	ret	


0xa486:	cmp	cl, 0x5e
0xa489:	je	0xa510


0x1f80:	jmp	qword ptr [rip + 0x21ef72]


0x5013:	cmp	bpl, 0x22
0x5017:	jne	0x5078


0x50e0:	cmp	bpl, 0x7b
0x50e4:	je	0x5118


0x5148:	movsxd	rax, dword ptr [r12 + rsi*4]
0x514c:	add	rax, r12
0x514f:	jmp	rax


0x50c0:	add	rbx, 1
0x50c4:	cmp	r15, rbx
0x50c7:	jne	0x4fd8


0x4988:	movzx	eax, byte ptr [rdi + rdx]
0x498c:	movzx	ecx, byte ptr [rsi + rdx]
0x4990:	sub	eax, ecx
0x4992:	jne	0x49ae


0x49fe:	jmp	0x499d


0x49e0:	movzx	eax, byte ptr [rdi + rdx]
0x49e4:	movzx	ecx, byte ptr [r11 + rdx]
0x49e9:	movzx	eax, byte ptr [rsi + rax]
0x49ed:	movzx	ecx, byte ptr [rsi + rcx]
0x49f1:	sub	eax, ecx
0x49f3:	jne	0x49ae


0x18941:	mov	qword ptr [rcx], 0
0x18948:	movzx	edx, byte ptr [rbx]
0x1894b:	mov	r8, rbx
0x1894e:	xor	eax, eax
0x18950:	test	dl, dl
0x18952:	je	0x1896c


0x188fd:	xor	edx, edx
0x188ff:	mov	r8d, 2
0x18905:	nop	dword ptr [rax]
0x18908:	movzx	eax, byte ptr [rsi + r8 - 1]
0x1890e:	cmp	al, byte ptr [rsi + rdx]
0x18911:	jne	0x1892d


0x17dae:	cmp	rbx, r8
0x17db1:	jle	0x18088


0x17de9:	test	r12, r12
0x17dec:	je	0x17fb0


0x17fb0:	mov	edi, 0x10
0x17fb5:	mov	r14d, 1
0x17fbb:	mov	r13d, 1
0x17fc1:	xor	r12d, r12d
0x17fc4:	jmp	0x17e0f


0x17dd9:	test	al, 8
0x17ddb:	je	0x17fd0


0x15140:	call	0x20e0


0x14cf9:	mov	rax, qword ptr [rbx + 0x10]
0x14cfd:	mov	r8d, dword ptr [rax + rsi*4]
0x14d01:	mov	edi, r8d
0x14d04:	mov	dword ptr [rsp], r8d
0x14d08:	call	0x1f10


0x15194:	cmp	byte ptr [rbx + 0x8c], 0
0x1519b:	mov	rcx, qword ptr [rbx]
0x1519e:	mov	rdi, qword ptr [rbx + 0x28]
0x151a2:	je	0x151e8


0x15165:	mov	rcx, qword ptr [rbx + 0x10]
0x15169:	lea	rdi, [rsi*4]
0x15171:	mov	r8d, dword ptr [rcx + rsi*4]
0x15175:	cmp	r8d, -1
0x15179:	je	0x1522f


0x1f10:	jmp	qword ptr [rip + 0x21efaa]


0x14a6a:	cmp	byte ptr [r10 + 0x8c], 0
0x14a72:	je	0x14b08


0x14a13:	cmp	r13b, r9b
0x14a16:	jne	0x149d0


0x14258:	lea	rdx, [rbx + rcx]
0x1425c:	mov	rax, rdx
0x1425f:	shr	rax, 0x3f
0x14263:	add	rax, rdx
0x14266:	sar	rax, 1
0x14269:	lea	rdx, [rax + rax*4]
0x1426d:	mov	r8, rax
0x14270:	cmp	rbp, qword ptr [rdi + rdx*8 + 8]
0x14275:	jg	0x14390


0x14387:	mov	r8, rcx
0x1438a:	mov	rcx, rdx
0x1438d:	nop	dword ptr [rax]
0x14390:	lea	rbx, [r8 + 1]
0x14394:	mov	rdx, rcx
0x14397:	jmp	0x14220


0x142b4:	cmp	rbx, -1
0x142b8:	je	0x14380


0x134e9:	mov	rsi, qword ptr [rsp + 0x228]
0x134f1:	xor	rsi, qword ptr fs:[0x28]
0x134fa:	mov	eax, dword ptr [rsp + 0x5c]
0x134fe:	jne	0x1409b


0x12a76:	mov	rdx, qword ptr [rdi + 0x50]
0x12a7a:	test	rdx, rdx
0x12a7d:	je	0x138f0


0x11d06:	cmp	rsi, rcx
0x11d09:	jg	0x11ce0


0x11cdb:	jmp	0x11ea8


0x11d36:	mov	rax, qword ptr [rsp + 0x50]
0x11d3b:	cmp	qword ptr [r14 + 0xe8], 0
0x11d43:	mov	rdx, qword ptr [rax]
0x11d46:	mov	rax, qword ptr [rdx + rbx]
0x11d4a:	mov	qword ptr [rsp + 0x58], rax
0x11d4f:	jle	0x11f0b


0x11d12:	mov	rdx, qword ptr [r14 + 0xd8]
0x11d19:	lea	rax, [rcx + rcx*4]
0x11d1d:	mov	rdi, qword ptr [rsp + 8]
0x11d22:	lea	rax, [rdx + rax*8]
0x11d26:	cmp	qword ptr [rax + 8], rdi
0x11d2a:	jne	0x11d36


0x107f2:	add	rsp, 8
0x107f6:	mov	eax, ebp
0x107f8:	pop	rbx
0x107f9:	pop	rbp
0x107fa:	pop	r12
0x107fc:	pop	r13
0x107fe:	ret	


0x108c6:	cmp	dl, 0x9f
0x108c9:	jbe	0x107f0


0x108cf:	mov	ebp, 3
0x108d4:	movsxd	rdi, ebp
0x108d7:	add	r8, rdi
0x108da:	cmp	rcx, r8
0x108dd:	jl	0x107f0


0x1090c:	cmp	al, 0xf0
0x1090e:	jne	0x10919


0x10920:	cmp	al, 0xfb
0x10922:	ja	0x10938


0x10297:	mov	rdi, qword ptr [rsp + 0x20]
0x1029c:	add	qword ptr [rsp], 1
0x102a1:	mov	rax, qword ptr [rsp]
0x102a5:	cmp	rax, qword ptr [rdi]
0x102a8:	jge	0x1064d


0x1030b:	mov	rsi, qword ptr [rsp + 8]
0x10310:	cmp	dword ptr [rsi + 0xb4], 1
0x10317:	jle	0x10297


0x20d0:	jmp	qword ptr [rip + 0x21eeca]


0x10596:	test	ebx, ebx
0x10598:	mov	byte ptr [r13 + r14], 1
0x1059e:	je	0x105b5


0x105b5:	add	r14, 1
0x105b9:	cmp	r14, 0x40
0x105bd:	jne	0x10590


0x10408:	mov	rax, qword ptr [rsp + 8]
0x1040d:	mov	r12, qword ptr [rsi]
0x10410:	cmp	dword ptr [rax + 0xb4], 1
0x10417:	jle	0x1043d


0x10282:	and	edx, 0xfffffffd
0x10285:	cmp	dl, 5
0x10288:	je	0x10684


0xe151:	add	rsp, 0x48
0xe155:	pop	rbx
0xe156:	pop	rbp
0xe157:	pop	r12
0xe159:	pop	r13
0xe15b:	pop	r14
0xe15d:	pop	r15
0xe15f:	ret	


0xe79a:	call	0x1db0


0xe58a:	cmp	qword ptr [rbx + 0x40], rax
0xe58e:	mov	rdx, qword ptr [rbx + 0x30]
0xe592:	cmovle	rax, qword ptr [rbx + 0x40]
0xe597:	cmp	rax, rdx
0xe59a:	jg	0xe5a8


0xe5f9:	mov	rcx, qword ptr [rbx + 0x80]
0xe600:	movzx	edx, al
0xe603:	sar	rdx, 6
0xe607:	mov	rcx, qword ptr [rcx + rdx*8]
0xe60b:	mov	edx, 1
0xe610:	bt	rcx, rax
0xe614:	jb	0xe630


0xe5f5:	movzx	eax, byte ptr [rdx + rax]
0xe5f9:	mov	rcx, qword ptr [rbx + 0x80]
0xe600:	movzx	edx, al
0xe603:	sar	rdx, 6
0xe607:	mov	rcx, qword ptr [rcx + rdx*8]
0xe60b:	mov	edx, 1
0xe610:	bt	rcx, rax
0xe614:	jb	0xe630


0xe201:	lea	r14, [r11 + rax]
0xe205:	cmp	r15, r14
0xe208:	jle	0xe64f


0xe4b8:	mov	rcx, qword ptr [rbx]
0xe4bb:	mov	rdi, rbp
0xe4be:	sub	rdi, rdx
0xe4c1:	mov	rdx, rdi
0xe4c4:	lea	r12, [rcx + r11]
0xe4c8:	add	rdx, r12
0xe4cb:	lea	rsi, [r12 + rbp - 1]
0xe4d0:	cmp	rcx, rdx
0xe4d3:	cmovb	rcx, rdx
0xe4d7:	cmp	rcx, rsi
0xe4da:	jbe	0xe4f5


0xe2d8:	jge	0xe313


0xe300:	mov	rcx, rax
0xe303:	jmp	0xe2de


0xdd7b:	xor	eax, eax
0xdd7d:	cmp	ebx, 0xa
0xdd80:	je	0xddcc


0xddf8:	mov	edi, ebx
0xddfa:	call	0x1f10


0xdcd8:	lea	rax, [r8 + r8]
0xdcdc:	mov	rsi, r8
0xdcdf:	mov	rdi, r9
0xdce2:	shl	rsi, 4
0xdce6:	mov	qword ptr [rsp + 8], rcx
0xdceb:	mov	qword ptr [rsp + 0x10], rax
0xdcf0:	call	0x1f90


0xdc63:	mov	esi, 0x30
0xdc68:	mov	edi, 1
0xdc6d:	mov	qword ptr [rsp + 0x10], r9
0xdc72:	mov	qword ptr [rsp + 8], r8
0xdc77:	mov	qword ptr [rsp + 0x18], rcx
0xdc7c:	call	0x1ec0


0xd337:	mov	rdi, qword ptr [r14 + 0x50]
0xd33b:	test	rdi, rdi
0xd33e:	je	0xd318


0xcb08:	sub	rsi, 1
0xcb0c:	mov	qword ptr [rdi + rsi*8], r8
0xcb10:	sub	r9, 1
0xcb14:	js	0xcb40


0xcb03:	cmp	r10, r8
0xcb06:	je	0xcb10


0xcaf0:	sub	rcx, 1
0xcaf4:	cmp	rcx, -1
0xcaf8:	je	0xcb08


0xcb40:	mov	rcx, qword ptr [rbx + 8]
0xcb44:	mov	rdx, qword ptr [rbp + 8]
0xcb48:	add	rdx, rcx
0xcb4b:	add	rdx, qword ptr [r12 + 8]
0xcb50:	lea	rax, [rcx - 1]
0xcb54:	lea	r9, [rdx - 1]
0xcb58:	sub	rdx, rsi
0xcb5b:	add	rcx, rdx
0xcb5e:	test	rdx, rdx
0xcb61:	mov	qword ptr [rbx + 8], rcx
0xcb65:	jle	0xcbad


0xcadd:	mov	r8, qword ptr [rdx + r11*8]
0xcae1:	cmp	rax, r8
0xcae4:	jne	0xcad5


0xcb36:	mov	rax, qword ptr [r13 + r9*8]
0xcb3b:	jmp	0xcad0


0xc4c9:	mov	rcx, qword ptr [rbx + 0x10]
0xc4cd:	mov	rsi, qword ptr [r12 + 0x10]
0xc4d2:	mov	rsi, qword ptr [rsi + rdx*8]
0xc4d6:	cmp	qword ptr [rcx + rax*8], rsi
0xc4da:	je	0xc570


0xc509:	mov	rcx, qword ptr [rbx + 8]
0xc50d:	mov	rax, qword ptr [r12 + 8]
0xc512:	lea	r8, [rcx + rax*2 - 1]
0xc517:	mov	rdx, r8
0xc51a:	sub	rdx, rbp
0xc51d:	add	rdx, 1
0xc521:	je	0xc55a


0xc598:	mov	rax, qword ptr [rbx + 0x10]
0xc59c:	add	rdx, 1
0xc5a0:	mov	rsi, qword ptr [r12 + 0x10]
0xc5a5:	sub	rbp, rdx
0xc5a8:	shl	rdx, 3
0xc5ac:	lea	rdi, [rax + rbp*8]
0xc5b0:	call	0x1ee0


0xc420:	lea	rbp, [r14 + 1]
0xc424:	mov	rax, r10
0xc427:	jmp	0xc2b7


0xc30c:	mov	r10, rax
0xc30f:	cmp	rbp, r10
0xc312:	jl	0xc2e8


0xc2b7:	cmp	rbp, rax
0xc2ba:	jge	0xc314


0xc3de:	add	rsp, 0x48
0xc3e2:	pop	rbx
0xc3e3:	pop	rbp
0xc3e4:	pop	r12
0xc3e6:	pop	r13
0xc3e8:	pop	r14
0xc3ea:	pop	r15
0xc3ec:	ret	


0xc15c:	mov	rax, -2
0xc163:	rol	rax, cl
0xc166:	and	qword ptr [rdi + 0xa0], rax
0xc16d:	jmp	0xc11c


0xba2a:	cmp	qword ptr [rcx + rsi*8], r15
0xba2e:	jne	0xba18


0x20b0:	jmp	qword ptr [rip + 0x21eeda]


0xaf43:	mov	rcx, qword ptr [rsp + 8]
0xaf48:	mov	rdx, qword ptr [rsp + 0x10]
0xaf4d:	mov	rsi, qword ptr [rsp + 0x18]
0xaf52:	mov	rdi, qword ptr [rsp + 0x20]
0xaf57:	call	0xa3b0


0xb25f:	add	rax, 1
0xb263:	cmp	qword ptr [rsp + 0x10], rax
0xb268:	je	0xb27b


0xaaf2:	jmp	0xaab3


0xaae0:	mov	qword ptr [rax + rdx], rcx
0xaae4:	sub	rdx, 8
0xaae8:	mov	rcx, qword ptr [rax + rdx - 8]
0xaaed:	cmp	rcx, rbp
0xaaf0:	jg	0xaae0


0xaa3e:	add	rsp, 8
0xaa42:	pop	rbx
0xaa43:	pop	rbp
0xaa44:	ret	


0xaab1:	xor	edx, edx
0xaab3:	mov	qword ptr [rax + rdx], rbp
0xaab7:	mov	eax, 1
0xaabc:	add	qword ptr [rbx + 8], 1
0xaac1:	jmp	0xaa3e


0xaaa0:	mov	rcx, qword ptr [rdx - 8]
0xaaa4:	sub	rdx, 8
0xaaa8:	mov	qword ptr [rdx + 8], rcx
0xaaac:	cmp	rax, rdx
0xaaaf:	jne	0xaaa0


0xa785:	add	rsp, 0x48
0xa789:	xor	eax, eax
0xa78b:	pop	rbx
0xa78c:	pop	rbp
0xa78d:	pop	r12
0xa78f:	pop	r13
0xa791:	pop	r14
0xa793:	pop	r15
0xa795:	ret	


0xa67e:	mov	rax, qword ptr [rsp]
0xa682:	mov	r13, qword ptr [rsp + 0x28]
0xa687:	mov	rdi, rbp
0xa68a:	mov	qword ptr [rsp + 0x30], r12
0xa68f:	mov	qword ptr [rsp + 0x38], rbx
0xa694:	mov	r12, r10
0xa697:	add	r13, qword ptr [rax + 0xd8]
0xa69e:	lea	rax, [rbp + rbp*2]
0xa6a3:	mov	rbp, r14
0xa6a6:	mov	r14, rdi
0xa6a9:	shl	rax, 3
0xa6ad:	mov	rbx, rax
0xa6b0:	cmp	qword ptr [r13], r14
0xa6b4:	jne	0xa720


0xa560:	and	edx, 4
0xa563:	je	0xa500


0xa4ca:	cmp	al, 0x3d
0xa4cc:	je	0xa550


0xa510:	mov	byte ptr [rdi + 8], 0x19
0xa514:	mov	eax, 1
0xa519:	ret	


0xa48f:	cmp	cl, 0x2d
0xa492:	jne	0xa4ef




0x5019:	mov	rdi, qword ptr [rip + 0x21c0a8]
0x5020:	mov	rax, qword ptr [rdi + 0x28]
0x5024:	cmp	rax, qword ptr [rdi + 0x30]
0x5028:	jae	0x5328


0x5078:	jl	0x50f2


0x5118:	lea	rsi, [rip + 0x16626]
0x511f:	mov	edi, 1
0x5124:	xor	eax, eax
0x5126:	call	0x1fb0


0x50e6:	cmp	bpl, 0x7d
0x50ea:	je	0x5118


0x1896c:	call	0x1abf0


0x18954:	cmp	byte ptr [rsi + rax], dl
0x18957:	je	0x189a0


0x18913:	jmp	0x189d0


0x1892d:	test	rdx, rdx
0x18930:	jne	0x18920


0x17df2:	and	eax, 6
0x17df5:	mov	rcx, qword ptr [r15 + 0x30]
0x17df9:	cmp	al, 4
0x17dfb:	je	0x17f90


0x17e0f:	mov	qword ptr [rsp + 0x20], r9
0x17e14:	mov	qword ptr [rsp + 0x18], rdx
0x17e19:	mov	qword ptr [rsp + 0x10], rsi
0x17e1e:	mov	qword ptr [rsp + 8], r8
0x17e23:	call	0x1f20


0x17fd0:	mov	rdi, r15
0x17fd3:	mov	qword ptr [rsp + 0x20], r9
0x17fd8:	mov	qword ptr [rsp + 0x18], rdx
0x17fdd:	mov	qword ptr [rsp + 0x10], rsi
0x17fe2:	mov	qword ptr [rsp + 8], r8
0x17fe7:	call	0x17c80


0x151e8:	add	rcx, rsi
0x151eb:	movzx	edi, byte ptr [rcx + rdi]
0x151ef:	mov	r12d, edi
0x151f2:	mov	dword ptr [rsp + 8], edi
0x151f6:	jmp	0x14ce8


0x151a4:	mov	r8, qword ptr [rbx + 0x18]
0x151a8:	add	rcx, rdi
0x151ab:	add	rcx, qword ptr [r8 + rsi*8]
0x151af:	movzx	edi, byte ptr [rcx]
0x151b2:	mov	r12d, edi
0x151b5:	mov	dword ptr [rsp + 8], edi
0x151b9:	and	edi, 0x80
0x151bf:	jne	0x14cdb


0x1522f:	movzx	eax, byte ptr [rdx + r14 + 1]
0x15235:	mov	byte ptr [rbp + 8], 1
0x15239:	mov	r12d, eax
0x1523c:	mov	byte ptr [rbp], al
0x1523f:	mov	dword ptr [rsp + 8], eax
0x15243:	jmp	0x14d01


0x1517f:	lea	r9, [r14 + 2]
0x15183:	cmp	qword ptr [rbx + 0x30], r9
0x15187:	je	0x15194




0x14b08:	lea	rax, [r11 + 1]
0x14b0c:	add	r11, qword ptr [r10]
0x14b0f:	mov	rdx, qword ptr [r10 + 0x28]
0x14b13:	mov	qword ptr [r10 + 0x48], rax
0x14b17:	movzx	r9d, byte ptr [r11 + rdx]
0x14b1c:	jmp	0x14a0a


0x14a78:	cmp	r11, qword ptr [r10 + 0x30]
0x14a7c:	je	0x14a8d


0x14a18:	mov	rdx, qword ptr [r10 + 8]
0x14a1c:	cmp	byte ptr [rdx + rax], 0x5d
0x14a20:	jne	0x149d0


0x149d0:	mov	rax, qword ptr [rbx + 8]
0x149d4:	mov	byte ptr [rax + r8], r9b
0x149d8:	add	r8, 1
0x149dc:	cmp	r8, 0x20
0x149e0:	je	0x14ad8


0x1427b:	mov	rcx, rax
0x1427e:	cmp	rbx, rcx
0x14281:	jl	0x14258


0x14390:	lea	rbx, [r8 + 1]
0x14394:	mov	rdx, rcx
0x14397:	jmp	0x14220


0x14220:	cmp	rbx, rdx
0x14223:	jge	0x14283


0x142be:	mov	rax, qword ptr [rsp + 8]
0x142c3:	mov	qword ptr [rsp + 0x60], 0
0x142cc:	mov	r12, qword ptr [rax + 0x98]
0x142d3:	mov	rax, qword ptr [rsp + 0x10]
0x142d8:	cmp	qword ptr [rax + 8], 0
0x142dd:	jle	0x14380


0x13504:	add	rsp, 0x238
0x1350b:	pop	rbx
0x1350c:	pop	rbp
0x1350d:	pop	r12
0x1350f:	pop	r13
0x13511:	pop	r14
0x13513:	pop	r15
0x13515:	ret	


0x1409b:	call	0x1db0


0x12a83:	mov	rcx, qword ptr [rdi + 0x58]
0x12a87:	test	rcx, rcx
0x12a8a:	je	0x138f0


0x11ce0:	lea	rdx, [rsi + rcx]
0x11ce4:	mov	rax, rdx
0x11ce7:	shr	rax, 0x3f
0x11ceb:	add	rax, rdx
0x11cee:	sar	rax, 1
0x11cf1:	lea	rdx, [rax + rax*4]
0x11cf5:	mov	r8, rax
0x11cf8:	cmp	r9, qword ptr [r11 + rdx*8 + 8]
0x11cfd:	jg	0x11eb0


0x11ea8:	mov	r8, rsi
0x11eab:	mov	rsi, rdi
0x11eae:	nop	
0x11eb0:	lea	rcx, [r8 + 1]
0x11eb4:	mov	rdi, rsi
0x11eb7:	jmp	0x11cb3


0x11f0b:	mov	rax, qword ptr [rsp + 0x70]
0x11f10:	cmp	qword ptr [rsp + 0x70], rax
0x11f15:	mov	dword ptr [rsp + 0x8c], 0
0x11f20:	jge	0x11c00


0x11d55:	mov	qword ptr [rsp + 0x30], r13
0x11d5a:	mov	qword ptr [rsp + 0x28], 0
0x11d63:	mov	r13, r10
0x11d66:	mov	rax, qword ptr [r14 + 0xf8]
0x11d6d:	mov	rbx, qword ptr [rsp + 0x28]
0x11d72:	mov	rdi, qword ptr [rsp + 0x58]
0x11d77:	mov	rbx, qword ptr [rax + rbx*8]
0x11d7b:	mov	rax, qword ptr [rbx + 8]
0x11d7f:	shl	rax, 4
0x11d83:	cmp	rdi, qword ptr [rdx + rax]
0x11d87:	je	0x11db0


0x11d2c:	cmp	rcx, -1
0x11d30:	jne	0x11f06


0x108e3:	mov	eax, 1
0x108e8:	jmp	0x108f7


0x10910:	cmp	dl, 0x8f
0x10913:	jbe	0x107f0


0x10919:	mov	ebp, 4
0x1091e:	jmp	0x108d4


0x10924:	cmp	al, 0xf8
0x10926:	jne	0x10931


0x10938:	cmp	al, 0xfd
0x1093a:	ja	0x107f0


0x1031d:	mov	rax, qword ptr [rsi]
0x10320:	mov	rdi, qword ptr [rsp + 0x10]
0x10325:	movzx	edx, byte ptr [rax + rdi]
0x10329:	mov	byte ptr [rsp + 0x60], dl
0x1032d:	lea	rdx, [r12 + 1]
0x10332:	cmp	qword ptr [rsi + 0x10], rdx
0x10336:	jbe	0x10676




0x105a0:	call	0x20d0


0x105bf:	add	r12, 0x40
0x105c3:	add	qword ptr [rsp + 0x18], 8
0x105c9:	add	r13, 0x40
0x105cd:	cmp	r12, 0x100
0x105d4:	je	0x10297


0x10590:	bt	r15, r14
0x10594:	jae	0x105b5


0x1043d:	xor	r13d, r13d
0x10440:	cmp	qword ptr [r12 + 0x28], 0
0x10446:	jle	0x10297


0x10419:	cmp	qword ptr [r12 + 0x48], 0
0x1041f:	jne	0x1051f


0x10684:	movdqa	xmm0, xmmword ptr [rip + 0xc8b4]
0x1068c:	cmp	eax, 2
0x1068f:	movups	xmmword ptr [rbp], xmm0
0x10693:	movups	xmmword ptr [rbp + 0x10], xmm0
0x10697:	movups	xmmword ptr [rbp + 0x20], xmm0
0x1069b:	movups	xmmword ptr [rbp + 0x30], xmm0
0x1069f:	movups	xmmword ptr [rbp + 0x40], xmm0
0x106a3:	movups	xmmword ptr [rbp + 0x50], xmm0
0x106a7:	movups	xmmword ptr [rbp + 0x60], xmm0
0x106ab:	movups	xmmword ptr [rbp + 0x70], xmm0
0x106af:	movups	xmmword ptr [rbp + 0x80], xmm0
0x106b6:	movups	xmmword ptr [rbp + 0x90], xmm0
0x106bd:	movups	xmmword ptr [rbp + 0xa0], xmm0
0x106c4:	movups	xmmword ptr [rbp + 0xb0], xmm0
0x106cb:	movups	xmmword ptr [rbp + 0xc0], xmm0
0x106d2:	movups	xmmword ptr [rbp + 0xd0], xmm0
0x106d9:	movups	xmmword ptr [rbp + 0xe0], xmm0
0x106e0:	movups	xmmword ptr [rbp + 0xf0], xmm0
0x106e7:	jne	0x1064d


0x1028e:	cmp	eax, 2
0x10291:	je	0x105e4


0xe59c:	jmp	0xe5c8


0xe5a8:	mov	rsi, qword ptr [rbx]
0xe5ab:	add	rsi, rdx
0xe5ae:	movzx	esi, byte ptr [rsi + r15]
0xe5b3:	movzx	esi, byte ptr [rcx + rsi]
0xe5b7:	mov	rcx, qword ptr [rbx + 8]
0xe5bb:	mov	byte ptr [rcx + rdx], sil
0xe5bf:	add	rdx, 1
0xe5c3:	cmp	rax, rdx
0xe5c6:	jne	0xe5a0


0xe630:	mov	dword ptr [rbx + 0x70], edx
0xe633:	jmp	0xe3a8


0xe616:	xor	edx, edx
0xe618:	cmp	al, 0xa
0xe61a:	jne	0xe630


0xe64f:	sub	r14, r15
0xe652:	mov	r12, r14
0xe655:	mov	qword ptr [rbx + 0x30], r14
0xe659:	lea	rsi, [r8 - 1]
0xe65d:	mov	edx, r10d
0xe660:	mov	rdi, rbx
0xe663:	call	0xdd30


0xe20e:	lea	rax, [rbx + 0x20]
0xe212:	lea	r13, [rsp + 0x24]
0xe217:	mov	qword ptr [rsp + 0x10], rax
0xe21c:	nop	dword ptr [rax]
0xe220:	mov	r12, qword ptr [rbx + 0x50]
0xe224:	mov	rsi, qword ptr [rbx]
0xe227:	mov	rdi, r13
0xe22a:	mov	rax, qword ptr [rbx + 0x20]
0xe22e:	mov	rcx, qword ptr [rsp + 0x10]
0xe233:	mov	dword ptr [rsp + 0xc], r10d
0xe238:	mov	qword ptr [rsp], r8
0xe23c:	sub	r12, r14
0xe23f:	add	rsi, r14
0xe242:	mov	rdx, r12
0xe245:	mov	qword ptr [rsp + 0x18], rax
0xe24a:	call	0xa3b0


0xe4f5:	movzx	edx, byte ptr [rsi]
0xe4f8:	and	edx, 0xffffffc0
0xe4fb:	cmp	dl, 0x80
0xe4fe:	je	0xe4e8


0xe4dc:	jmp	0xe201


0xe2da:	lea	rsi, [rax + 1]
0xe2de:	cmp	rsi, rcx
0xe2e1:	jge	0xe308


0xe313:	lea	r13, [r12 - 1]
0xe318:	mov	edx, r10d
0xe31b:	mov	rdi, rbx
0xe31e:	mov	qword ptr [rsp], r8
0xe322:	mov	rsi, r13
0xe325:	call	0xdd30


0xe2de:	cmp	rsi, rcx
0xe2e1:	jge	0xe308


0xd340:	mov	rsi, rbp
0xd343:	call	0xbef0


0xcb16:	sub	r11, 1
0xcb1a:	js	0xcb40


0xcb10:	sub	r9, 1
0xcb14:	js	0xcb40


0xcbad:	shl	rdx, 3
0xcbb1:	lea	rsi, [rdi + rsi*8]
0xcbb5:	call	0x1ee0


0xcb67:	test	rax, rax
0xcb6a:	js	0xcbad


0xcad0:	cmp	rax, r8
0xcad3:	je	0xcae6


0xc570:	sub	rdx, 1
0xc574:	sub	rax, 1
0xc578:	mov	rdi, rdx
0xc57b:	not	rdi
0xc57e:	jmp	0xc4bf


0xc4e0:	jge	0xc588


0xc55a:	xor	eax, eax
0xc55c:	pop	rbx
0xc55d:	pop	rbp
0xc55e:	pop	r12
0xc560:	ret	


0xc523:	mov	rdi, qword ptr [rbx + 0x10]
0xc527:	lea	rax, [rcx - 1]
0xc52b:	add	rcx, rdx
0xc52e:	mov	qword ptr [rbx + 8], rcx
0xc532:	nop	word ptr [rax + rax]
0xc538:	mov	rsi, qword ptr [rdi + r8*8]
0xc53c:	mov	rcx, qword ptr [rdi + rax*8]
0xc540:	lea	r9, [rax + rdx]
0xc544:	lea	r9, [rdi + r9*8]
0xc548:	cmp	rsi, rcx
0xc54b:	jle	0xc5c0


0xba30:	mov	edx, dword ptr [rax + 8]
0xba33:	shr	edx, 8
0xba36:	and	edx, 0x3ff
0xba3c:	cmp	ebp, edx
0xba3e:	jne	0xba18


0xba18:	add	rax, r8
0xba1b:	sub	rsi, 1
0xba1f:	test	byte ptr [rax + 0xa], 4
0xba23:	je	0xbaa0




0xa6b6:	cmp	r15, 0x3f
0xa6ba:	jg	0xa6c8


0xa720:	add	r13, 0x28
0xa724:	cmp	byte ptr [r13 - 8], 0
0xa729:	jne	0xa6b0


0xa565:	mov	byte ptr [rdi + 8], 0x1e
0xa569:	mov	eax, 2
0xa56e:	ret	


0xa550:	mov	byte ptr [rdi + 8], 0x1c
0xa554:	mov	eax, 2
0xa559:	ret	


0xa4d2:	cmp	al, 0x2e
0xa4d4:	jne	0xa500


0xa494:	mov	byte ptr [rdi + 8], 0x16
0xa498:	mov	eax, 1
0xa49d:	ret	


0x502e:	lea	rdx, [rax + 1]
0x5032:	mov	qword ptr [rdi + 0x28], rdx
0x5036:	mov	byte ptr [rax], 0x22
0x5039:	mov	rdi, qword ptr [rip + 0x21c088]
0x5040:	mov	rax, qword ptr [rdi + 0x28]
0x5044:	cmp	rax, qword ptr [rdi + 0x30]
0x5048:	jae	0x5337


0x5328:	mov	esi, 0x22
0x532d:	call	0x1e00


0x50f2:	mov	rdi, qword ptr [rip + 0x21bfcf]
0x50f9:	mov	rax, qword ptr [rdi + 0x28]
0x50fd:	cmp	rax, qword ptr [rdi + 0x30]
0x5101:	jae	0x5346


0x507a:	cmp	bpl, 0x26
0x507e:	jg	0x50f2


0x1fb0:	jmp	qword ptr [rip + 0x21ef5a]


0x50ec:	cmp	bpl, 0x5f
0x50f0:	je	0x5080


0x189a0:	add	rax, 1
0x189a4:	lea	r9, [r8 + 1]
0x189a8:	cmp	r12, rax
0x189ab:	je	0x18a05


0x18959:	test	rax, rax
0x1895c:	je	0x189c0


0x189d0:	add	rdx, 1
0x189d4:	mov	rax, r8
0x189d7:	sub	rax, rdx
0x189da:	mov	qword ptr [rdi + r8*8], rax
0x189de:	jmp	0x18938


0x18932:	mov	qword ptr [rdi + r8*8], r8
0x18936:	xor	edx, edx
0x18938:	add	r8, 1
0x1893c:	cmp	r12, r8
0x1893f:	jne	0x18908


0x18920:	sub	rdx, qword ptr [rdi + rdx*8]
0x18924:	cmp	byte ptr [rsi + rdx], al
0x18927:	je	0x189d0


0x17f90:	mov	r14, qword ptr [r12]
0x17f94:	cmp	r14, rcx
0x17f97:	ja	0x17e01


0x17e01:	lea	r14, [rcx + 1]
0x17e05:	mov	r13, r14
0x17e08:	mov	rdi, r14
0x17e0b:	shl	rdi, 4
0x17e0f:	mov	qword ptr [rsp + 0x20], r9
0x17e14:	mov	qword ptr [rsp + 0x18], rdx
0x17e19:	mov	qword ptr [rsp + 0x10], rsi
0x17e1e:	mov	qword ptr [rsp + 8], r8
0x17e23:	call	0x1f20


0x14ce8:	cmp	eax, 1
0x14ceb:	mov	byte ptr [rbp], r12b
0x14cef:	mov	byte ptr [rbp + 8], 1
0x14cf3:	jle	0x15140


0x151c5:	jmp	0x14ce8


0x14d01:	mov	edi, r8d
0x14d04:	mov	dword ptr [rsp], r8d
0x14d08:	call	0x1f10


0x15189:	cmp	dword ptr [rcx + rdi + 4], -1
0x1518e:	je	0x1522f


0x14a0a:	cmp	rax, r12
0x14a0d:	jge	0x14ad8


0x14a8d:	mov	rax, qword ptr [r10 + 0x18]
0x14a91:	mov	rax, qword ptr [rax + r11*8]
0x14a95:	add	rax, qword ptr [r10]
0x14a98:	add	rax, qword ptr [r10 + 0x28]
0x14a9c:	movzx	r9d, byte ptr [rax]
0x14aa0:	test	r9b, 0x80
0x14aa4:	jne	0x149f9


0x14a7e:	mov	rax, qword ptr [r10 + 0x10]
0x14a82:	cmp	dword ptr [rax + r11*4], -1
0x14a87:	je	0x149f9


0x14a22:	add	rax, 1
0x14a26:	mov	qword ptr [r10 + 0x48], rax
0x14a2a:	mov	rax, qword ptr [rbx + 8]
0x14a2e:	mov	byte ptr [rax + r14], 0
0x14a33:	movzx	eax, byte ptr [rbp + 8]
0x14a37:	cmp	al, 0x1c
0x14a39:	je	0x14b3b


0x149e6:	movzx	eax, byte ptr [rbp + 8]
0x149ea:	mov	r11, qword ptr [r10 + 0x48]
0x149ee:	mov	r12, qword ptr [r10 + 0x68]
0x149f2:	cmp	al, 0x1e
0x149f4:	movsxd	r14, r8d
0x149f7:	je	0x14a60


0x142e3:	lea	rax, [rsp + 0x60]
0x142e8:	mov	qword ptr [rsp + 0x20], 0
0x142f1:	mov	qword ptr [rsp + 0x48], rbx
0x142f6:	mov	r15, r13
0x142f9:	mov	qword ptr [rsp + 0x38], rax
0x142fe:	jmp	0x14322


0x12a90:	cmp	qword ptr [rdi + 0x60], 0
0x12a95:	je	0x138f0


0x11d03:	mov	rsi, rax
0x11d06:	cmp	rsi, rcx
0x11d09:	jg	0x11ce0


0x11eb0:	lea	rcx, [r8 + 1]
0x11eb4:	mov	rdi, rsi
0x11eb7:	jmp	0x11cb3


0x11cb3:	cmp	rcx, rdi
0x11cb6:	jge	0x11d0b


0x11f26:	lea	rax, [r13*8]
0x11f2e:	mov	r12, qword ptr [rsp + 0x70]
0x11f33:	mov	rbp, qword ptr [rsp + 0x38]
0x11f38:	mov	qword ptr [rsp + 0x50], rax
0x11f3d:	lea	rax, [r13 + r13*2]
0x11f42:	lea	r8, [r12 + r12*4]
0x11f46:	shl	rax, 3
0x11f4a:	mov	qword ptr [rsp + 0x58], rax
0x11f4f:	lea	r15, [r8*8]
0x11f57:	jmp	0x1208d


0x11db0:	cmp	qword ptr [rbx + 0x20], 0
0x11db5:	mov	r11, qword ptr [rbx]
0x11db8:	jle	0x12422


0x11d89:	add	qword ptr [rsp + 0x28], 1
0x11d8f:	mov	rax, qword ptr [rsp + 0x28]
0x11d94:	cmp	rax, qword ptr [r14 + 0xe8]
0x11d9b:	jge	0x12411


0x11f06:	cmp	r13, qword ptr [rax]
0x11f09:	jne	0x11ef8


0x108f7:	movzx	ebx, byte ptr [rsi + rax]
0x108fb:	lea	edx, [rbx - 0x80]
0x108fe:	cmp	dl, 0x3f
0x10901:	jbe	0x108ea


0x108d4:	movsxd	rdi, ebp
0x108d7:	add	r8, rdi
0x108da:	cmp	rcx, r8
0x108dd:	jl	0x107f0


0x10928:	cmp	dl, 0x87
0x1092b:	jbe	0x107f0


0x10931:	mov	ebp, 5
0x10936:	jmp	0x108d4


0x10940:	cmp	al, 0xfc
0x10942:	jne	0x1094d


0x10676:	mov	rax, qword ptr [rsp + 0x38]
0x1067b:	add	rax, 1
0x1067f:	jmp	0x103a4


0x1033c:	lea	rcx, [rax + rdi + 0x10]
0x10341:	mov	eax, dword ptr [rcx + 8]
0x10344:	and	eax, 0x2000ff
0x10349:	cmp	eax, 0x200001
0x1034e:	jne	0x10676


0x105da:	mov	rax, qword ptr [rsp + 8]
0x105df:	mov	rcx, qword ptr [rax]
0x105e2:	jmp	0x10575


0x1044c:	mov	r15, r12
0x1044f:	mov	r14, qword ptr [rsp + 0x40]
0x10454:	mov	r12, rbp
0x10457:	mov	rbp, r13
0x1045a:	mov	r13d, ebx
0x1045d:	jmp	0x1046d


0x10425:	test	byte ptr [r12 + 0x20], 1
0x1042b:	jne	0x1051f


0x1051f:	mov	r12, qword ptr [rsp + 0x40]
0x10524:	mov	r13, qword ptr [rsp + 0x48]
0x10529:	mov	byte ptr [rsp + 0x54], 0
0x1052e:	nop	
0x10530:	xor	edi, edi
0x10532:	mov	qword ptr [r12], 0
0x1053a:	mov	rcx, r12
0x1053d:	mov	edx, 1
0x10542:	mov	rsi, r13
0x10545:	call	0xa3b0


0x106ed:	jmp	0x10644


0x105e4:	movdqa	xmm0, xmmword ptr [rip + 0xc954]
0x105ec:	movups	xmmword ptr [rbp], xmm0
0x105f0:	movups	xmmword ptr [rbp + 0x10], xmm0
0x105f4:	movups	xmmword ptr [rbp + 0x20], xmm0
0x105f8:	movups	xmmword ptr [rbp + 0x30], xmm0
0x105fc:	movups	xmmword ptr [rbp + 0x40], xmm0
0x10600:	movups	xmmword ptr [rbp + 0x50], xmm0
0x10604:	movups	xmmword ptr [rbp + 0x60], xmm0
0x10608:	movups	xmmword ptr [rbp + 0x70], xmm0
0x1060c:	movups	xmmword ptr [rbp + 0x80], xmm0
0x10613:	movups	xmmword ptr [rbp + 0x90], xmm0
0x1061a:	movups	xmmword ptr [rbp + 0xa0], xmm0
0x10621:	movups	xmmword ptr [rbp + 0xb0], xmm0
0x10628:	movups	xmmword ptr [rbp + 0xc0], xmm0
0x1062f:	movups	xmmword ptr [rbp + 0xd0], xmm0
0x10636:	movups	xmmword ptr [rbp + 0xe0], xmm0
0x1063d:	movups	xmmword ptr [rbp + 0xf0], xmm0
0x10644:	mov	rax, qword ptr [rsp + 0x30]
0x10649:	or	byte ptr [rax + 0x38], 1
0x1064d:	mov	rax, qword ptr [rsp + 0x168]
0x10655:	xor	rax, qword ptr fs:[0x28]
0x1065e:	jne	0x106f2


0xe5c8:	mov	qword ptr [rbx + 0x30], rdx
0xe5cc:	mov	qword ptr [rbx + 0x38], rdx
0xe5d0:	jmp	0xe133


0xe5a0:	mov	r15, qword ptr [rbx + 0x28]
0xe5a4:	mov	rcx, qword ptr [rbx + 0x78]
0xe5a8:	mov	rsi, qword ptr [rbx]
0xe5ab:	add	rsi, rdx
0xe5ae:	movzx	esi, byte ptr [rsi + r15]
0xe5b3:	movzx	esi, byte ptr [rcx + rsi]
0xe5b7:	mov	rcx, qword ptr [rbx + 8]
0xe5bb:	mov	byte ptr [rcx + rdx], sil
0xe5bf:	add	rdx, 1
0xe5c3:	cmp	rax, rdx
0xe5c6:	jne	0xe5a0


0xe3a8:	movzx	eax, byte ptr [rbx + 0x8b]
0xe3af:	jmp	0xe47c


0xe61c:	xor	edx, edx
0xe61e:	cmp	byte ptr [rbx + 0x8d], 0
0xe625:	setne	dl
0xe628:	add	edx, edx
0xe62a:	nop	word ptr [rax + rax]
0xe630:	mov	dword ptr [rbx + 0x70], edx
0xe633:	jmp	0xe3a8


0xe4e8:	sub	rsi, 1
0xe4ec:	cmp	rcx, rsi
0xe4ef:	ja	0xe201


0xe500:	mov	rdx, qword ptr [rbx + 0x58]
0xe504:	mov	rcx, qword ptr [rbx + 0x78]
0xe508:	mov	r14, rsi
0xe50b:	add	rdx, r12
0xe50e:	sub	rdx, rsi
0xe511:	test	rcx, rcx
0xe514:	jne	0xe762


0xe308:	lea	r12, [rax + 1]
0xe30c:	cmp	rdx, rbp
0xe30f:	cmovge	r12, rax
0xe313:	lea	r13, [r12 - 1]
0xe318:	mov	edx, r10d
0xe31b:	mov	rdi, rbx
0xe31e:	mov	qword ptr [rsp], r8
0xe322:	mov	rsi, r13
0xe325:	call	0xdd30


0xcb1c:	mov	rax, qword ptr [r13 + r9*8]
0xcb21:	jmp	0xcadd


0xc4bf:	test	rdi, rdi
0xc4c2:	jns	0xc500


0xc4e6:	sub	rdx, 1
0xc4ea:	sub	rbp, 1
0xc4ee:	mov	rdi, rdx
0xc4f1:	mov	qword ptr [rcx + rbp*8], rsi
0xc4f5:	not	rdi
0xc4f8:	test	rdi, rdi
0xc4fb:	js	0xc4c4


0xc588:	sub	rax, 1
0xc58c:	jmp	0xc4bf


0xc5c0:	sub	rax, 1
0xc5c4:	mov	qword ptr [r9], rcx
0xc5c7:	jns	0xc538


0xc54d:	sub	r8, 1
0xc551:	sub	rdx, 1
0xc555:	mov	qword ptr [r9], rsi
0xc558:	jne	0xc538


0xba40:	call	0xaa10


0xba25:	test	rsi, rsi
0xba28:	jle	0xbaa0


0xa6bc:	movzx	eax, word ptr [r13 + 0x22]
0xa6c1:	test	qword ptr [rsp + 0x18], rax
0xa6c6:	je	0xa720


0xa6c8:	mov	rax, qword ptr [rbp + 0x28]
0xa6cc:	mov	rax, qword ptr [rax + rbx + 0x10]
0xa6d1:	mov	rcx, qword ptr [rax]
0xa6d4:	cmp	qword ptr [rsp + 0x10], rcx
0xa6d9:	je	0xa7a0


0xa72b:	mov	rbx, qword ptr [rsp + 0x38]
0xa730:	mov	r10, r12
0xa733:	mov	r12, qword ptr [rsp + 0x30]
0xa738:	mov	r14, rbp
0xa73b:	add	rbx, 1
0xa73f:	cmp	qword ptr [r12 + 8], rbx
0xa744:	jg	0xa635


0xa6b0:	cmp	qword ptr [r13], r14
0xa6b4:	jne	0xa720


0xa4d6:	mov	byte ptr [rdi + 8], 0x1a
0xa4da:	mov	eax, 2
0xa4df:	ret	


0x504e:	lea	rdx, [rax + 1]
0x5052:	add	rbx, 1
0x5056:	cmp	r15, rbx
0x5059:	mov	qword ptr [rdi + 0x28], rdx
0x505d:	mov	byte ptr [rax], 0x22
0x5060:	jne	0x4fd8


0x5337:	mov	esi, 0x22
0x533c:	call	0x1e00


0x5107:	lea	rdx, [rax + 1]
0x510b:	mov	qword ptr [rdi + 0x28], rdx
0x510f:	mov	byte ptr [rax], 0x20
0x5112:	jmp	0x50c0


0x5346:	mov	esi, 0x20
0x534b:	call	0x1e00


0x5080:	mov	rdi, qword ptr [rip + 0x21c041]
0x5087:	mov	rax, qword ptr [rdi + 0x28]
0x508b:	cmp	rax, qword ptr [rdi + 0x30]
0x508f:	jae	0x5311




0x18a05:	mov	qword ptr [rcx], rbx
0x18a08:	jmp	0x1896c


0x189ad:	movzx	edx, byte ptr [r8 + 1]
0x189b2:	mov	r8, r9
0x189b5:	jmp	0x18950


0x189c0:	movzx	edx, byte ptr [r8 + 1]
0x189c5:	add	rbx, 1
0x189c9:	add	r8, 1
0x189cd:	jmp	0x18950


0x1895e:	mov	r9, qword ptr [rdi + rax*8]
0x18962:	add	rbx, r9
0x18965:	sub	rax, r9
0x18968:	test	dl, dl
0x1896a:	jne	0x18954


0x18938:	add	r8, 1
0x1893c:	cmp	r12, r8
0x1893f:	jne	0x18908


0x18908:	movzx	eax, byte ptr [rsi + r8 - 1]
0x1890e:	cmp	al, byte ptr [rsi + rdx]
0x18911:	jne	0x1892d


0x17f9d:	test	r14, r14
0x17fa0:	mov	r13, r14
0x17fa3:	jg	0x17e08


0x14aaa:	cmp	dword ptr [r10 + 0x90], 1
0x14ab2:	mov	eax, 1
0x14ab7:	je	0x14ac6


0x14b3b:	mov	dword ptr [rbx], 2
0x14b41:	xor	eax, eax
0x14b43:	jmp	0x14951


0x14a3f:	cmp	al, 0x1e
0x14a41:	je	0x14b2e


0x14322:	mov	rax, qword ptr [rsp + 0x10]
0x14327:	mov	rdi, qword ptr [rsp + 0x20]
0x1432c:	mov	rax, qword ptr [rax + 0x10]
0x14330:	mov	r14, qword ptr [rax + rdi*8]
0x14334:	mov	rax, r14
0x14337:	shl	rax, 4
0x1433b:	add	rax, qword ptr [r12]
0x1433f:	cmp	r14, qword ptr [r15 + 0x10]
0x14343:	movzx	eax, byte ptr [rax + 8]
0x14347:	jne	0x14300


0x12a9b:	cmp	qword ptr [rax + 0x10], 0
0x12aa0:	jne	0x12ad8


0x1208d:	mov	rax, qword ptr [r14 + 0xd8]
0x12094:	add	rax, r15
0x12097:	cmp	r13, qword ptr [rax]
0x1209a:	jne	0x12078


0x12422:	mov	r12, qword ptr [rsp + 8]
0x12427:	jmp	0x120f2


0x11dbe:	mov	rcx, qword ptr [rsp + 8]
0x11dc3:	mov	r8, r13
0x11dc6:	xor	ebp, ebp
0x11dc8:	mov	r13, rbx
0x11dcb:	mov	rbx, rcx
0x11dce:	jmp	0x11e3c


0x11da1:	mov	rax, qword ptr [rsp + 0x50]
0x11da6:	mov	rdx, qword ptr [rax]
0x11da9:	jmp	0x11d66


0x12411:	mov	r13, qword ptr [rsp + 0x30]
0x12416:	mov	rax, qword ptr [r14 + 0xc8]
0x1241d:	jmp	0x11f10


0x11ef8:	add	rax, 0x28
0x11efc:	cmp	byte ptr [rax - 8], 0
0x11f00:	je	0x11d36


0x108ea:	add	rax, 1
0x108ee:	cmp	rdi, rax
0x108f1:	jle	0x107f2


0x10903:	jmp	0x107f0


0x10944:	cmp	dl, 0x83
0x10947:	jbe	0x107f0


0x1094d:	mov	ebp, 6
0x10952:	jmp	0x108d4


0x103a4:	mov	rsi, qword ptr [rsp + 0x38]
0x103a9:	mov	rcx, qword ptr [rsp + 0x40]
0x103ae:	mov	rdi, qword ptr [rsp + 0x48]
0x103b3:	sub	rax, rsi
0x103b6:	mov	qword ptr [rcx], 0
0x103bd:	mov	r12, rax
0x103c0:	mov	rdx, rax
0x103c3:	call	0xa3b0


0x10354:	add	rdi, 0x20
0x10358:	mov	r13, rdi
0x1035b:	mov	rdi, qword ptr [rsp + 0x38]
0x10360:	lea	rax, [rdi + 1]
0x10364:	jmp	0x1038b


0x10575:	mov	rax, qword ptr [rsp + 0x10]
0x1057a:	mov	rsi, qword ptr [rsp + 0x18]
0x1057f:	xor	r14d, r14d
0x10582:	mov	rax, qword ptr [rcx + rax]
0x10586:	mov	r15, qword ptr [rax + rsi]
0x1058a:	nop	word ptr [rax + rax]
0x10590:	bt	r15, r14
0x10594:	jae	0x105b5


0x1046d:	mov	qword ptr [r14], 0
0x10474:	mov	rax, qword ptr [r15]
0x10477:	mov	rdx, r14
0x1047a:	mov	rdi, qword ptr [rsp + 0x38]
0x1047f:	lea	rbx, [rbp*4]
0x10487:	mov	esi, dword ptr [rax + rbp*4]
0x1048a:	call	0x1f30


0x10431:	cmp	qword ptr [r12 + 0x40], 0
0x10437:	jne	0x1051f


0x10644:	mov	rax, qword ptr [rsp + 0x30]
0x10649:	or	byte ptr [rax + 0x38], 1
0x1064d:	mov	rax, qword ptr [rsp + 0x168]
0x10655:	xor	rax, qword ptr fs:[0x28]
0x1065e:	jne	0x106f2


0xe47c:	test	al, al
0xe47e:	je	0xe0fa


0xe51a:	lea	r13, [rsp + 0x24]
0xe51f:	add	r12, rbp
0xe522:	lea	rcx, [rsp + 0x28]
0xe527:	sub	r12, r14
0xe52a:	mov	dword ptr [rsp + 0xc], r10d
0xe52f:	mov	qword ptr [rsp], r8
0xe533:	mov	rdi, r13
0xe536:	mov	qword ptr [rsp + 0x28], 0
0xe53f:	call	0xa3b0


0xe762:	cmp	rdx, 6
0xe766:	mov	edi, 6
0xe76b:	lea	r11, [rsp + 0x32]
0xe770:	cmovle	rdi, rdx
0xe774:	sub	edi, 1
0xe777:	test	edi, edi
0xe779:	movsxd	rax, edi
0xe77c:	js	0xe792


0xcba0:	sub	rax, 1
0xcba4:	mov	qword ptr [r10], rcx
0xcba7:	cmp	rax, -1
0xcbab:	jne	0xcb70


0xcb85:	sub	r9, 1
0xcb89:	sub	rdx, 1
0xcb8d:	mov	qword ptr [r10], r8
0xcb90:	jne	0xcb70


0xc5cd:	lea	rsi, [rdi + rbp*8]
0xc5d1:	shl	rdx, 3
0xc5d5:	call	0x1ee0


0xc538:	mov	rsi, qword ptr [rdi + r8*8]
0xc53c:	mov	rcx, qword ptr [rdi + rax*8]
0xc540:	lea	r9, [rax + rdx]
0xc544:	lea	r9, [rdi + r9*8]
0xc548:	cmp	rsi, rcx
0xc54b:	jle	0xc5c0


0xa7a0:	mov	r15d, dword ptr [rsp + 0x20]
0xa7a5:	add	rsp, 0x48
0xa7a9:	pop	rbx
0xa7aa:	pop	rbp
0xa7ab:	mov	eax, r15d
0xa7ae:	and	eax, 1
0xa7b1:	pop	r12
0xa7b3:	neg	eax
0xa7b5:	pop	r13
0xa7b7:	pop	r14
0xa7b9:	pop	r15
0xa7bb:	ret	


0xa6df:	mov	esi, dword ptr [rsp + 0x20]
0xa6e3:	mov	rdi, qword ptr [rsp]
0xa6e7:	mov	r8, r12
0xa6ea:	mov	rdx, r15
0xa6ed:	call	0xa590


0x5066:	add	rsp, 0x18
0x506a:	pop	rbx
0x506b:	pop	rbp
0x506c:	pop	r12
0x506e:	pop	r13
0x5070:	pop	r14
0x5072:	pop	r15
0x5074:	ret	


0x5095:	lea	rcx, [rax + 1]
0x5099:	mov	qword ptr [rdi + 0x28], rcx
0x509d:	mov	byte ptr [rax], 0x5c
0x50a0:	mov	rdi, qword ptr [rip + 0x21c021]
0x50a7:	mov	rax, qword ptr [rdi + 0x28]
0x50ab:	cmp	rax, qword ptr [rdi + 0x30]
0x50af:	jae	0x5180


0x5311:	mov	esi, 0x5c
0x5316:	mov	dword ptr [rsp + 0xc], edx
0x531a:	call	0x1e00


0x18950:	test	dl, dl
0x18952:	je	0x1896c


0x17e08:	mov	rdi, r14
0x17e0b:	shl	rdi, 4
0x17e0f:	mov	qword ptr [rsp + 0x20], r9
0x17e14:	mov	qword ptr [rsp + 0x18], rdx
0x17e19:	mov	qword ptr [rsp + 0x10], rsi
0x17e1e:	mov	qword ptr [rsp + 8], r8
0x17e23:	call	0x1f20


0x14ac6:	add	rax, r11
0x14ac9:	mov	qword ptr [r10 + 0x48], rax
0x14acd:	jmp	0x14a0a


0x14ab9:	mov	rsi, r11
0x14abc:	mov	rdi, r10
0x14abf:	call	0xbea0


0x14b2e:	mov	dword ptr [rbx], 4
0x14b34:	xor	eax, eax
0x14b36:	jmp	0x14951


0x14a47:	cmp	al, 0x1a
0x14a49:	je	0x14b21


0x14349:	cmp	rbp, qword ptr [r15 + 0x18]
0x1434d:	jne	0x14300


0x14300:	cmp	al, 4
0x14302:	je	0x14688


0x12aa2:	cmp	qword ptr [rdx + 0x10], 0
0x12aa7:	jne	0x12ad8


0x12ad8:	cmp	qword ptr [rsp + 0x270], 0
0x12ae1:	mov	dword ptr [rsp + 0x58], 1
0x12ae9:	je	0x12e70


0x1209c:	mov	rdi, qword ptr [rsp + 8]
0x120a1:	cmp	rdi, qword ptr [rax + 8]
0x120a5:	jne	0x12078


0x12078:	add	r12, 1
0x1207c:	add	r15, 0x28
0x12080:	cmp	r12, qword ptr [r14 + 0xc8]
0x12087:	jge	0x11c00


0x120f2:	cmp	qword ptr [rsp + 8], r11
0x120f7:	jl	0x11d89


0x11e3c:	mov	rax, qword ptr [r13 + 0x28]
0x11e40:	mov	r9, qword ptr [rax + rbp*8]
0x11e44:	mov	r15, qword ptr [r9 + 8]
0x11e48:	mov	rdx, r15
0x11e4b:	sub	rdx, r11
0x11e4e:	test	rdx, rdx
0x11e51:	lea	r12, [rdx + rbx]
0x11e55:	jle	0x11e03


0x11d66:	mov	rax, qword ptr [r14 + 0xf8]
0x11d6d:	mov	rbx, qword ptr [rsp + 0x28]
0x11d72:	mov	rdi, qword ptr [rsp + 0x58]
0x11d77:	mov	rbx, qword ptr [rax + rbx*8]
0x11d7b:	mov	rax, qword ptr [rbx + 8]
0x11d7f:	shl	rax, 4
0x11d83:	cmp	rdi, qword ptr [rdx + rax]
0x11d87:	je	0x11db0


0x11f10:	cmp	qword ptr [rsp + 0x70], rax
0x11f15:	mov	dword ptr [rsp + 0x8c], 0
0x11f20:	jge	0x11c00


0x1038b:	movzx	edx, byte ptr [rcx]
0x1038e:	add	rax, 1
0x10392:	mov	byte ptr [rax - 1], dl
0x10395:	mov	rdx, rax
0x10398:	sub	rdx, rdi
0x1039b:	add	rdx, r12
0x1039e:	cmp	qword ptr [rsi + 0x10], rdx
0x103a2:	ja	0x10370


0x1f30:	jmp	qword ptr [rip + 0x21ef9a]


0xe0fa:	add	qword ptr [rbx + 8], rbp
0xe0fe:	mov	rax, qword ptr [rbx + 0x58]
0xe102:	sub	qword ptr [rbx + 0x68], rbp
0xe106:	mov	qword ptr [rbx + 0x28], r15
0xe10a:	sub	rax, rbp
0xe10d:	cmp	dword ptr [rbx + 0x90], 1
0xe114:	mov	qword ptr [rbx + 0x58], rax
0xe118:	jle	0xe1b8


0xe484:	jmp	0xe0fe


0xe792:	mov	rsi, r11
0xe795:	jmp	0xe51a


0xe77e:	movzx	edi, byte ptr [rsi + rax]
0xe782:	movzx	edi, byte ptr [rcx + rdi]
0xe786:	mov	byte ptr [r11 + rax], dil
0xe78a:	sub	rax, 1
0xe78e:	test	eax, eax
0xe790:	jns	0xe77e


0xcb70:	mov	r8, qword ptr [rdi + r9*8]
0xcb74:	mov	rcx, qword ptr [rdi + rax*8]
0xcb78:	lea	r10, [rax + rdx]
0xcb7c:	lea	r10, [rdi + r10*8]
0xcb80:	cmp	r8, rcx
0xcb83:	jle	0xcba0


0xcb92:	xor	edx, edx
0xcb94:	jmp	0xcbb1


0x14b21:	mov	dword ptr [rbx], 3
0x14b27:	xor	eax, eax
0x14b29:	jmp	0x14951


0x14a4f:	xor	eax, eax
0x14a51:	jmp	0x14951


0x1434f:	jmp	0x14308


0x14688:	mov	rax, qword ptr [rsp + 8]
0x1468d:	mov	r13, qword ptr [rsp + 0x40]
0x14692:	mov	rbx, qword ptr [rsp + 0x48]
0x14697:	add	r13, qword ptr [rax + 0xd8]
0x1469e:	lea	rax, [r14 + r14*2]
0x146a2:	shl	rax, 3
0x146a6:	mov	qword ptr [rsp + 0x30], rax
0x146ab:	lea	rax, [r14*8]
0x146b3:	mov	qword ptr [rsp + 0x28], rax
0x146b8:	mov	rax, r15
0x146bb:	mov	r15, r13
0x146be:	mov	r13, rbx
0x146c1:	mov	rbx, rax
0x146c4:	jmp	0x1482e


0x14308:	mov	rcx, qword ptr [rsp + 0x10]
0x1430d:	add	qword ptr [rsp + 0x20], 1
0x14313:	mov	rax, qword ptr [rsp + 0x20]
0x14318:	cmp	rax, qword ptr [rcx + 8]
0x1431c:	jge	0x148db


0x12aa9:	cmp	qword ptr [rcx + 0x10], 0
0x12aae:	je	0x12ab6


0x12e70:	mov	rax, qword ptr [rsp + 0x38]
0x12e75:	cmp	qword ptr [rax + 0x98], 0
0x12e7d:	setne	al
0x12e80:	movzx	eax, al
0x12e83:	mov	dword ptr [rsp + 0x58], eax
0x12e87:	jmp	0x12aef


0x12aef:	mov	r11, qword ptr [rsp + 0x38]
0x12af4:	mov	rax, qword ptr [rsp + 0x48]
0x12af9:	mov	rdi, qword ptr [rsp + 0x88]
0x12b01:	mov	rsi, qword ptr [r11 + 0x10]
0x12b05:	mov	rbx, qword ptr [rax + 0x28]
0x12b09:	mov	edx, dword ptr [r11 + 0xb4]
0x12b10:	mov	rax, qword ptr [rax + 0x18]
0x12b14:	mov	qword ptr [rsp + 0x178], rdi
0x12b1c:	mov	qword ptr [rsp + 0x170], rdi
0x12b24:	mov	qword ptr [rsp + 8], rsi
0x12b29:	lea	rsi, [rsi + 1]
0x12b2d:	mov	qword ptr [rsp + 0xb0], rbx
0x12b35:	movsxd	rcx, edx
0x12b38:	shr	rax, 0x16
0x12b3c:	mov	qword ptr [rsp + 0x198], rbx
0x12b44:	and	eax, 1
0x12b47:	cmp	rsi, rcx
0x12b4a:	mov	dword ptr [rsp + 0x1b0], edx
0x12b51:	cmovl	rsi, rcx
0x12b55:	lea	rcx, [rdi + 1]
0x12b59:	mov	byte ptr [rsp + 0x1a8], al
0x12b60:	mov	qword ptr [rsp + 0x188], rdi
0x12b68:	mov	qword ptr [rsp + 0x180], rdi
0x12b70:	cmp	rsi, rcx
0x12b73:	mov	rdi, qword ptr [rsp]
0x12b77:	cmovg	rsi, rcx
0x12b7b:	test	rbx, rbx
0x12b7e:	mov	rcx, qword ptr [rsp + 0x78]
0x12b83:	setne	bl
0x12b86:	or	eax, ebx
0x12b88:	mov	byte ptr [rsp + 0x1ab], al
0x12b8f:	movzx	eax, byte ptr [r11 + 0xb0]
0x12b97:	mov	qword ptr [rsp + 0x120], rcx
0x12b9f:	mov	edx, eax
0x12ba1:	shr	al, 3
0x12ba4:	shr	dl, 2
0x12ba7:	and	eax, 1
0x12baa:	and	edx, 1
0x12bad:	mov	byte ptr [rsp + 0x1aa], al
0x12bb4:	mov	byte ptr [rsp + 0x1a9], dl
0x12bbb:	call	0xa900


0x120a7:	mov	rbx, qword ptr [rax + 0x18]
0x120ab:	mov	rax, qword ptr [rax + 0x10]
0x120af:	mov	rdx, qword ptr [rbp + 0x30]
0x120b3:	mov	rcx, rbx
0x120b6:	sub	rcx, rax
0x120b9:	mov	qword ptr [rsp + 0x20], rcx
0x120be:	je	0x11f60


0x120fd:	mov	rax, r12
0x12100:	lea	r15, [r11*8]
0x12108:	mov	r12, rbx
0x1210b:	mov	rbx, r11
0x1210e:	mov	r11, r13
0x12111:	mov	r13, rax
0x12114:	nop	dword ptr [rax]
0x12118:	mov	rax, rbx
0x1211b:	sub	rax, qword ptr [r12]
0x1211f:	test	rax, rax
0x12122:	jle	0x12145


0x11e03:	mov	r8, qword ptr [rsp + 8]
0x11e08:	mov	rcx, qword ptr [rsp + 0x30]
0x11e0d:	mov	rdx, r9
0x11e10:	mov	rsi, r13
0x11e13:	mov	rdi, r14
0x11e16:	call	0x119b0


0x11e57:	cmp	qword ptr [r14 + 0x30], r12
0x11e5b:	jge	0x11dd0


0x10370:	mov	rcx, qword ptr [rsi]
0x10373:	add	rcx, r13
0x10376:	add	r13, 0x10
0x1037a:	mov	edx, dword ptr [rcx + 8]
0x1037d:	and	edx, 0x2000ff
0x10383:	cmp	edx, 0x200001
0x10389:	jne	0x103a4




0xcbb1:	lea	rsi, [rdi + rsi*8]
0xcbb5:	call	0x1ee0


0x1482e:	cmp	r14, qword ptr [r15]
0x14831:	je	0x146d0


0x148db:	cmp	qword ptr [rsp + 0x60], 0
0x148e1:	je	0x14380


0x12ab6:	test	rbp, rbp
0x12ab9:	je	0x12acc


0x12ab0:	cmp	byte ptr [rsi + 0x38], 0
0x12ab4:	js	0x12ad8


0x11f60:	mov	rcx, qword ptr [rbp + 0x28]
0x11f64:	mov	rdi, qword ptr [rsp + 0x58]
0x11f69:	mov	rcx, qword ptr [rcx + rdi + 0x10]
0x11f6e:	mov	rcx, qword ptr [rcx]
0x11f71:	lea	rcx, [rcx + rcx*2]
0x11f75:	lea	rcx, [rdx + rcx*8]
0x11f79:	mov	qword ptr [rsp + 0x18], rcx
0x11f7e:	add	rbx, qword ptr [rsp + 8]
0x11f83:	mov	edx, dword ptr [r14 + 0xa0]
0x11f8a:	mov	rdi, r14
0x11f8d:	sub	rbx, rax
0x11f90:	lea	rsi, [rbx - 1]
0x11f94:	call	0xdd30


0x120c4:	mov	rcx, qword ptr [rbp + 0x18]
0x120c8:	mov	rdi, qword ptr [rsp + 0x50]
0x120cd:	mov	rcx, qword ptr [rcx + rdi]
0x120d1:	lea	rcx, [rcx + rcx*2]
0x120d5:	lea	rcx, [rdx + rcx*8]
0x120d9:	mov	qword ptr [rsp + 0x18], rcx
0x120de:	jmp	0x11f7e


0x12145:	mov	rax, qword ptr [r14 + 0xb8]
0x1214c:	mov	rax, qword ptr [rax + r15]
0x12150:	test	rax, rax
0x12153:	je	0x1225f


0x12124:	cmp	qword ptr [r14 + 0x30], r13
0x12128:	jle	0x123b1


0x11e61:	cmp	qword ptr [r14 + 0x58], r12
0x11e65:	mov	qword ptr [rsp + 0x18], rdx
0x11e6a:	mov	qword ptr [rsp + 0x10], r9
0x11e6f:	jl	0x122c8


0x11dd0:	lea	rsi, [r8 + r11]
0x11dd4:	lea	rdi, [r8 + rbx]
0x11dd8:	mov	qword ptr [rsp + 0x20], r9
0x11ddd:	mov	qword ptr [rsp + 0x18], r11
0x11de2:	mov	qword ptr [rsp + 0x10], r8
0x11de7:	call	0x1e90


0x146d0:	mov	rax, qword ptr [r15 + 0x18]
0x146d4:	sub	rax, qword ptr [r15 + 0x10]
0x146d8:	test	rax, rax
0x146db:	lea	r9, [rbp + rax]
0x146e0:	je	0x14840


0x14837:	mov	rax, r15
0x1483a:	jmp	0x14820


0x148e7:	xor	eax, eax
0x148e9:	jmp	0x148ba


0x12acc:	xor	r12d, r12d
0x12acf:	xor	ebp, ebp
0x12ad1:	nop	dword ptr [rax]
0x12ad8:	cmp	qword ptr [rsp + 0x270], 0
0x12ae1:	mov	dword ptr [rsp + 0x58], 1
0x12ae9:	je	0x12e70


0x12abb:	test	r12, r12
0x12abe:	mov	dword ptr [rsp + 0x5c], 1
0x12ac6:	jne	0x134e9


0x11f7e:	add	rbx, qword ptr [rsp + 8]
0x11f83:	mov	edx, dword ptr [r14 + 0xa0]
0x11f8a:	mov	rdi, r14
0x11f8d:	sub	rbx, rax
0x11f90:	lea	rsi, [rbx - 1]
0x11f94:	call	0xdd30


0x1225f:	add	rbx, 1
0x12263:	add	r15, 8
0x12267:	cmp	qword ptr [rsp + 8], rbx
0x1226c:	jge	0x12118


0x12159:	mov	rcx, qword ptr [rax + 0x10]
0x1215d:	test	rcx, rcx
0x12160:	jle	0x1225f


0x123b1:	cmp	qword ptr [r14 + 0x58], r13
0x123b5:	jle	0x12272


0x1212e:	movzx	ecx, byte ptr [r11 + rbx - 1]
0x12134:	lea	rax, [r13 + 1]
0x12138:	cmp	byte ptr [r11 + r13], cl
0x1213c:	jne	0x12272


0x122c8:	mov	rcx, rbx
0x122cb:	mov	rbx, r13
0x122ce:	mov	r13, r8
0x122d1:	cmp	qword ptr [rbx + 0x20], rbp
0x122d5:	jg	0x11d89


0x11e75:	mov	rsi, r12
0x11e78:	mov	rdi, r14
0x11e7b:	mov	qword ptr [rsp + 0x20], r11
0x11e80:	call	0xb5e0


0x14840:	mov	rax, qword ptr [r12 + 0x28]
0x14845:	mov	rdi, qword ptr [rsp + 0x30]
0x1484a:	mov	rax, qword ptr [rax + rdi + 0x10]
0x1484f:	mov	r10, qword ptr [rax]
0x14852:	jmp	0x146f4


0x146e6:	mov	rax, qword ptr [r12 + 0x18]
0x146eb:	mov	rsi, qword ptr [rsp + 0x28]
0x146f0:	mov	r10, qword ptr [rax + rsi]
0x146f4:	cmp	r9, qword ptr [rbx + 0x18]
0x146f8:	jg	0x14837


0x14820:	add	r13, 1
0x14824:	cmp	byte ptr [rax + 0x20], 0
0x14828:	lea	r15, [rax + 0x28]
0x1482c:	je	0x14860


0x148ba:	mov	rdi, qword ptr [rsp + 0x90]
0x148c2:	mov	dword ptr [rsp + 8], eax
0x148c6:	call	0x1c60


0x12272:	mov	r13, r11
0x12275:	jmp	0x11d89


0x12118:	mov	rax, rbx
0x1211b:	sub	rax, qword ptr [r12]
0x1211f:	test	rax, rax
0x12122:	jle	0x12145


0x12166:	mov	rdi, qword ptr [rax + 0x18]
0x1216a:	mov	rax, qword ptr [rsp + 0x50]
0x1216f:	xor	edx, edx
0x12171:	mov	r8, qword ptr [rsp + 0x58]
0x12176:	mov	rsi, qword ptr [rax]
0x12179:	jmp	0x1218d


0x123bb:	lea	esi, [r13 + 1]
0x123bf:	mov	rdi, r14
0x123c2:	call	0xb490


0x12142:	mov	r13, rax
0x12145:	mov	rax, qword ptr [r14 + 0xb8]
0x1214c:	mov	rax, qword ptr [rax + r15]
0x12150:	test	rax, rax
0x12153:	je	0x1225f


0x122db:	test	rbp, rbp
0x122de:	mov	r12, rcx
0x122e1:	je	0x120f2


0x146f4:	cmp	r9, qword ptr [rbx + 0x18]
0x146f8:	jg	0x14837


0x146fe:	mov	rax, qword ptr [rbx]
0x14701:	mov	rax, qword ptr [rax + r9*8]
0x14705:	test	rax, rax
0x14708:	je	0x14837


0x14860:	mov	r15, rbx
0x14863:	jmp	0x14308


0x1218d:	mov	rbp, qword ptr [rdi + rdx*8]
0x12191:	mov	rax, rbp
0x12194:	shl	rax, 4
0x12198:	add	rax, rsi
0x1219b:	cmp	byte ptr [rax + 8], 9
0x1219f:	jne	0x12180


0x122e7:	mov	r15, r11
0x122ea:	jmp	0x120ee


0x1470e:	mov	rdi, qword ptr [rax + 0x10]
0x14712:	lea	rsi, [rax + 0x18]
0x14716:	mov	rdx, r10
0x14719:	call	0xbf50


0x121a1:	cmp	r8, qword ptr [rax]
0x121a4:	jne	0x12180


0x12180:	add	rdx, 1
0x12184:	cmp	rcx, rdx
0x12187:	je	0x1225f


0x120ee:	lea	r11, [r15 + 1]
0x120f2:	cmp	qword ptr [rsp + 8], r11
0x120f7:	jl	0x11d89


0x121a6:	cmp	rbp, -1
0x121aa:	je	0x1225f


0x121b0:	mov	rsi, qword ptr [r12 + 0x10]
0x121b5:	mov	rcx, qword ptr [r12]
0x121b9:	test	rsi, rsi
0x121bc:	je	0x12280


0x12280:	mov	rsi, rbx
0x12283:	mov	edi, 0x18
0x12288:	mov	qword ptr [rsp + 0x18], r11
0x1228d:	sub	rsi, rcx
0x12290:	mov	qword ptr [rsp + 0x10], rcx
0x12295:	add	rsi, 1
0x12299:	call	0x1ec0


0x121c2:	mov	qword ptr [rsp + 0x10], r11
0x121c7:	mov	rdx, qword ptr [r12 + 8]
0x121cc:	sub	rsp, 8
0x121d0:	push	9
0x121d2:	mov	r9, rbx
0x121d5:	mov	r8, rbp
0x121d8:	mov	rdi, r14
0x121db:	call	0x10960


0x11e85:	test	eax, eax
0x11e87:	jne	0x11ec8


0x11e89:	mov	r8, qword ptr [r14 + 8]
0x11e8d:	mov	rdx, qword ptr [rsp + 0x18]
0x11e92:	mov	r9, qword ptr [rsp + 0x10]
0x11e97:	mov	r11, qword ptr [rsp + 0x20]
0x11e9c:	jmp	0x11dd0


0x11ec8:	mov	rbx, qword ptr [rsp + 0xa8]
0x11ed0:	xor	rbx, qword ptr fs:[0x28]
0x11ed9:	jne	0x1242c


0xa6f2:	cmp	eax, -1
0xa6f5:	je	0xa65e


0xa6fb:	test	eax, eax
0xa6fd:	jne	0xa707


0xa6ff:	mov	esi, dword ptr [rsp + 8]
0xa703:	test	esi, esi
0xa705:	jne	0xa785


0xa707:	cmp	r15, 0x3f
0xa70b:	jg	0xa720


0xa70d:	movzx	eax, word ptr [rsp + 0x26]
0xa712:	and	word ptr [r13 + 0x22], ax
0xa717:	nop	word ptr [rax + rax]
0xa720:	add	r13, 0x28
0xa724:	cmp	byte ptr [r13 - 8], 0
0xa729:	jne	0xa6b0


0x18971:	mov	eax, 1
0x18976:	jmp	0x18982


0x18982:	mov	rcx, qword ptr [rbp - 0x18]
0x18986:	xor	rcx, qword ptr fs:[0x28]
0x1898f:	jne	0x18a17


0xba45:	test	al, al
0xba47:	je	0xba8b


0xba8b:	mov	eax, 0xc
0xba90:	add	rsp, 0x18
0xba94:	pop	rbx
0xba95:	pop	rbp
0xba96:	pop	r12
0xba98:	pop	r13
0xba9a:	pop	r14
0xba9c:	pop	r15
0xba9e:	ret	


0xba49:	mov	rax, qword ptr [r14 + 0x28]
0xba4d:	mov	edx, ebp
0xba4f:	mov	rdi, r14
0xba52:	mov	rax, qword ptr [rax + r12 + 0x10]
0xba57:	mov	r9, qword ptr [rax + 8]
0xba5b:	mov	rsi, r9
0xba5e:	mov	qword ptr [rsp], r9
0xba62:	call	0xb8c0


0xbbc4:	mov	edx, eax
0xbbc6:	xor	eax, eax
0xbbc8:	test	dl, dl
0xbbca:	jne	0xba90


0xbbd0:	jmp	0xba8b


0xc3b3:	mov	ebx, eax
0xc3b5:	mov	rax, qword ptr [rbp]
0xc3b9:	mov	r9, qword ptr [rsp + 0x30]
0xc3be:	mov	rcx, qword ptr [rsp + 0x20]
0xc3c3:	mov	r8, r15
0xc3c6:	mov	rdx, r12
0xc3c9:	mov	rdi, r13
0xc3cc:	mov	rsi, qword ptr [rax + r14*8]
0xc3d0:	call	0xa7c0


0xc3d5:	cmp	ebx, eax
0xc3d7:	je	0xc450


0xc450:	mov	rax, qword ptr [rsp + 0x38]
0xc455:	add	r14, 1
0xc459:	cmp	r14, qword ptr [rax]
0xc45c:	jl	0xc370


0xc3d9:	mov	eax, 1
0xc3de:	add	rsp, 0x48
0xc3e2:	pop	rbx
0xc3e3:	pop	rbp
0xc3e4:	pop	r12
0xc3e6:	pop	r13
0xc3e8:	pop	r14
0xc3ea:	pop	r15
0xc3ec:	ret	


0xc370:	mov	rax, qword ptr [rbp]
0xc374:	mov	rdx, qword ptr [r13 + 0xd8]
0xc37b:	mov	rdi, r13
0xc37e:	mov	r9, qword ptr [rsp + 0x28]
0xc383:	mov	r8, qword ptr [rsp + 0x18]
0xc388:	mov	rcx, qword ptr [rsp + 0x10]
0xc38d:	mov	rsi, qword ptr [rax + r14*8]
0xc391:	lea	rax, [rsi + rsi*4]
0xc395:	lea	rax, [rdx + rax*8]
0xc399:	mov	rdx, qword ptr [rsp + 8]
0xc39e:	mov	rax, qword ptr [rax]
0xc3a1:	shl	rax, 4
0xc3a5:	add	rax, qword ptr [rdx]
0xc3a8:	mov	r12, qword ptr [rax]
0xc3ab:	mov	rdx, r12
0xc3ae:	call	0xa7c0


0xe678:	jmp	0xe133


0x14af0:	cmp	byte ptr [rsp + 8], 0x15
0x14af5:	mov	eax, 0xb
0x14afa:	je	0x1499e


0x14b00:	jmp	0x14951


0xd348:	test	al, al
0xd34a:	je	0xd318


0xd5e5:	test	al, al
0xd5e7:	jne	0xd6ef


0xe12f:	test	eax, eax
0xe131:	jne	0xe13d


0xe13d:	mov	rcx, qword ptr [rsp + 0x38]
0xe142:	xor	rcx, qword ptr fs:[0x28]
0xe14b:	jne	0xe79a


0xe1ad:	jmp	0xe133


0x189f5:	mov	rcx, qword ptr [rbp - 0x30]
0x189f9:	mov	rdi, rax
0x189fc:	mov	rsi, qword ptr [rbp - 0x28]
0x18a00:	jmp	0x188e6


0x188e6:	test	rdi, rdi
0x188e9:	je	0x18980


0xd7c5:	test	eax, eax
0xd7c7:	mov	dword ptr [rsp + 0x1c], eax
0xd7cb:	jne	0xd818


0xd7cd:	mov	rdi, qword ptr [rsp + 8]
0xd7d2:	mov	rdx, r13
0xd7d5:	mov	rsi, r14
0xd7d8:	call	0xd560


0xd818:	mov	rcx, qword ptr [rsp + 0x38]
0xd81d:	xor	rcx, qword ptr fs:[0x28]
0xd826:	jne	0xd837


0x12501:	test	eax, eax
0x12503:	mov	dword ptr [r13], eax
0x12507:	jne	0x12620


0x1250d:	mov	rax, qword ptr [rbx + 0x48]
0x12511:	mov	edx, dword ptr [rbx + 0xa0]
0x12517:	mov	rdi, rbx
0x1251a:	lea	rsi, [rax - 1]
0x1251e:	call	0xdd30


0x125e6:	test	eax, eax
0x125e8:	mov	dword ptr [r13], eax
0x125ec:	jne	0x12620


0x125ee:	test	byte ptr [rbp + 0x68], 0x40
0x125f2:	je	0x124a5


0x125f8:	mov	rdx, r15
0x125fb:	mov	rsi, r14
0x125fe:	mov	rdi, rbx
0x12601:	call	0x11b50


0x12606:	test	eax, eax
0x12608:	mov	dword ptr [r13], eax
0x1260c:	jne	0x12620


0x1260e:	mov	rax, qword ptr [rbx + 0xb8]
0x12615:	mov	rbp, qword ptr [rax + r12*8]
0x12619:	jmp	0x124a5


0x1853d:	add	rsp, 0x20
0x18541:	test	eax, eax
0x18543:	setne	al
0x18546:	add	rsp, 0x18
0x1854a:	pop	rbx
0x1854b:	movzx	eax, al
0x1854e:	pop	rbp
0x1854f:	pop	r12
0x18551:	pop	r13
0x18553:	ret	


0x4928:	mov	byte ptr [rip + 0x21c7d9], 1
0x492f:	pop	rbp
0x4930:	ret	


0x123c7:	test	eax, eax
0x123c9:	jne	0x11ec8


0x123cf:	mov	r11, qword ptr [r14 + 8]
0x123d3:	jmp	0x1212e


0xb63a:	test	eax, eax
0xb63c:	je	0xb60f


0xb63e:	jmp	0xb616


0xb616:	pop	rbx
0xb617:	pop	rbp
0xb618:	pop	r12
0xb61a:	ret	


0xb60b:	test	eax, eax
0xb60d:	jne	0xb616


0xd07d:	test	rax, rax
0xd080:	mov	qword ptr [rbx + 0x10], rax
0xd084:	je	0xd052


0xd086:	mov	qword ptr [rax], rbx
0xd089:	jmp	0xd052


0xd09d:	test	rax, rax
0xd0a0:	mov	qword ptr [rbx + 8], rax
0xd0a4:	je	0xd043


0xd0a6:	mov	qword ptr [rax], rbx
0xd0a9:	jmp	0xd043


0xd7dd:	mov	rdi, qword ptr [rsp + 0x30]
0xd7e2:	mov	qword ptr [rbx + r15*8], rax
0xd7e6:	call	0x1c60


0x141d8:	mov	qword ptr [r14], rax
0x141db:	mov	eax, dword ptr [rsp + 0x5c]
0x141df:	test	eax, eax
0x141e1:	jne	0x14138


0x141e7:	cmp	qword ptr [rsp + 0x10], 0
0x141ed:	je	0x14138


0x141f3:	mov	rax, qword ptr [rsp + 8]
0x141f8:	mov	rax, qword ptr [rax + 0xb8]
0x141ff:	mov	rdx, qword ptr [rax + rbp*8]
0x14203:	xor	eax, eax
0x14205:	test	byte ptr [rdx + 0x68], 0x40
0x14209:	je	0x14138


0x14180:	mov	rdx, rax
0x14183:	mov	eax, dword ptr [rsp + 0x60]
0x14187:	test	eax, eax
0x14189:	jne	0x14138


0x1418b:	mov	r15, qword ptr [rdx + 0x38]
0x1418f:	lea	r14, [rdx + 0x38]
0x14193:	test	r15, r15
0x14196:	je	0x143a0


0x143a0:	mov	rdi, qword ptr [rbx + 8]
0x143a4:	mov	qword ptr [rdx + 0x40], 0
0x143ac:	mov	qword ptr [rsp + 0x20], rdx
0x143b1:	mov	qword ptr [rdx + 0x38], rdi
0x143b5:	shl	rdi, 3
0x143b9:	call	0x1f20


0x1419c:	mov	rsi, qword ptr [rsp + 0x10]
0x141a1:	mov	rdx, r14
0x141a4:	mov	rdi, rbx
0x141a7:	call	0xca60


0x141ac:	test	eax, eax
0x141ae:	mov	dword ptr [rsp + 0x5c], eax
0x141b2:	jne	0x14138


0x141b4:	cmp	qword ptr [r13 + 0x28], 0
0x141b9:	jne	0x14430


0x141bf:	mov	r14, qword ptr [rsp + 0x18]
0x141c4:	add	r14, qword ptr [r13]
0x141c8:	lea	rdi, [rsp + 0x5c]
0x141cd:	mov	rdx, rbx
0x141d0:	mov	rsi, r12
0x141d3:	call	0xd560


0x14430:	mov	rax, qword ptr [rsp + 8]
0x14435:	mov	rax, qword ptr [rax + 0xd8]
0x1443c:	mov	qword ptr [rsp + 0x20], rax
0x14441:	jle	0x1451b


0x1451b:	mov	dword ptr [rsp + 0x5c], 0
0x14523:	jmp	0x141bf


0x14447:	xor	r15d, r15d
0x1444a:	nop	word ptr [rax + rax]
0x14450:	mov	rax, qword ptr [r13 + 0x30]
0x14454:	mov	rdi, qword ptr [rsp + 0x20]
0x14459:	mov	rax, qword ptr [rax + r15*8]
0x1445d:	lea	rax, [rax + rax*4]
0x14461:	lea	rdx, [rdi + rax*8]
0x14465:	cmp	rbp, qword ptr [rdx + 0x10]
0x14469:	jle	0x1450d


0x1450d:	add	r15, 1
0x14511:	cmp	r15, qword ptr [r13 + 0x28]
0x14515:	jl	0x14450


0x1446f:	cmp	rbp, qword ptr [rdx + 8]
0x14473:	jg	0x1450d


0x14450:	mov	rax, qword ptr [r13 + 0x30]
0x14454:	mov	rdi, qword ptr [rsp + 0x20]
0x14459:	mov	rax, qword ptr [rax + r15*8]
0x1445d:	lea	rax, [rax + rax*4]
0x14461:	lea	rdx, [rdi + rax*8]
0x14465:	cmp	rbp, qword ptr [rdx + 0x10]
0x14469:	jle	0x1450d


0x14479:	mov	rcx, qword ptr [rdx]
0x1447c:	mov	rax, qword ptr [r12]
0x14480:	mov	rsi, qword ptr [rbx + 8]
0x14484:	shl	rcx, 4
0x14488:	cmp	rbp, qword ptr [rdx + 0x18]
0x1448c:	mov	r8, qword ptr [rax + rcx]
0x14490:	je	0x14530


0x14530:	test	rsi, rsi
0x14533:	jle	0x1450d


0x14496:	xor	r14d, r14d
0x14499:	test	rsi, rsi
0x1449c:	jle	0x1450d


0x14535:	mov	r10, qword ptr [rbx + 0x10]
0x14539:	mov	r9, -1
0x14540:	lea	r11, [r10 + rsi*8]
0x14544:	mov	rcx, r10
0x14547:	mov	rsi, r9
0x1454a:	jmp	0x14566


0x1449e:	mov	qword ptr [rsp + 0x28], rbp
0x144a3:	mov	rbp, r8
0x144a6:	jmp	0x144be


0x14566:	mov	rdi, qword ptr [rcx]
0x14569:	mov	rdx, rdi
0x1456c:	shl	rdx, 4
0x14570:	add	rdx, rax
0x14573:	movzx	r14d, byte ptr [rdx + 8]
0x14578:	cmp	r14d, 8
0x1457c:	jne	0x14550


0x144be:	mov	rdx, qword ptr [rbx + 0x10]
0x144c2:	mov	rsi, qword ptr [rdx + r14*8]
0x144c6:	mov	rdx, rsi
0x144c9:	shl	rdx, 4
0x144cd:	add	rax, rdx
0x144d0:	movzx	edx, byte ptr [rax + 8]
0x144d4:	sub	edx, 8
0x144d7:	cmp	edx, 1
0x144da:	ja	0x144b0


0x1457e:	cmp	r8, qword ptr [rdx]
0x14581:	cmove	rsi, rdi
0x14585:	add	rcx, 8
0x14589:	cmp	r11, rcx
0x1458c:	jne	0x14566


0x14550:	cmp	r14d, 9
0x14554:	jne	0x1455d


0x144dc:	cmp	rbp, qword ptr [rax]
0x144df:	jne	0x144b0


0x144b0:	add	r14, 1
0x144b4:	cmp	r14, qword ptr [rbx + 8]
0x144b8:	jge	0x14508


0x1458e:	test	rsi, rsi
0x14591:	mov	r14, r9
0x14594:	mov	qword ptr [rsp + 0x28], r9
0x14599:	js	0x14660


0x14556:	cmp	r8, qword ptr [rdx]
0x14559:	cmove	r9, rdi
0x1455d:	add	rcx, 8
0x14561:	cmp	r11, rcx
0x14564:	je	0x1458e


0x1455d:	add	rcx, 8
0x14561:	cmp	r11, rcx
0x14564:	je	0x1458e


0x144e1:	mov	rcx, qword ptr [rsp + 0x10]
0x144e6:	mov	rdx, rbx
0x144e9:	mov	rdi, r12
0x144ec:	call	0xe7a0


0x144ba:	mov	rax, qword ptr [r12]
0x144be:	mov	rdx, qword ptr [rbx + 0x10]
0x144c2:	mov	rsi, qword ptr [rdx + r14*8]
0x144c6:	mov	rdx, rsi
0x144c9:	shl	rdx, 4
0x144cd:	add	rax, rdx
0x144d0:	movzx	edx, byte ptr [rax + 8]
0x144d4:	sub	edx, 8
0x144d7:	cmp	edx, 1
0x144da:	ja	0x144b0


0x14508:	mov	rbp, qword ptr [rsp + 0x28]
0x1450d:	add	r15, 1
0x14511:	cmp	r15, qword ptr [r13 + 0x28]
0x14515:	jl	0x14450


0x14660:	cmp	qword ptr [rsp + 0x28], 0
0x14666:	jns	0x145cf


0x1459f:	mov	rcx, qword ptr [rsp + 0x10]
0x145a4:	mov	rdx, rbx
0x145a7:	mov	rdi, r12
0x145aa:	call	0xe7a0


0x1466c:	jmp	0x1450d


0x145cf:	xor	r14d, r14d
0x145d2:	mov	qword ptr [rsp + 0x30], rbp
0x145d7:	mov	rbp, r14
0x145da:	mov	r14, qword ptr [rsp + 0x28]
0x145df:	jmp	0x145fa


0x145fa:	mov	r10, qword ptr [r10 + rbp*8]
0x145fe:	mov	rax, qword ptr [r12 + 0x38]
0x14603:	mov	rdx, r14
0x14606:	lea	r9, [r10 + r10*2]
0x1460a:	shl	r9, 3
0x1460e:	add	rax, r9
0x14611:	mov	rdi, qword ptr [rax + 8]
0x14615:	lea	rsi, [rax + 0x10]
0x14619:	call	0xbf50


0x12bc0:	test	eax, eax
0x12bc2:	mov	dword ptr [rsp + 0x5c], eax
0x12bc6:	jne	0x134c0


0x12bcc:	mov	rdi, qword ptr [rsp + 0x38]
0x12bd1:	lea	rax, [rdi + 0xb8]
0x12bd8:	mov	qword ptr [rsp + 0x1a0], rax
0x12be0:	movzx	eax, byte ptr [rdi + 0xb0]
0x12be7:	mov	byte ptr [rsp + 8], al
0x12beb:	shr	al, 4
0x12bee:	and	eax, 1
0x12bf1:	cmp	byte ptr [rsp + 0x1ab], 0
0x12bf9:	mov	byte ptr [rsp + 0x1ae], al
0x12c00:	jne	0x12c25


0x134c0:	mov	rdi, qword ptr [rsp + 0x1d8]
0x134c8:	call	0x1c60


0x12c02:	mov	rsi, qword ptr [rsp + 0x38]
0x12c07:	mov	rax, qword ptr [rsp + 0x78]
0x12c0c:	cmp	dword ptr [rsi + 0xb4], 1
0x12c13:	mov	qword ptr [rsp + 0x128], rax
0x12c1b:	mov	rax, qword ptr [rsp + 0x88]
0x12c23:	jle	0x12c27


0x12c25:	xor	eax, eax
0x12c27:	mov	qword ptr [rsp + 0x150], rax
0x12c2f:	mov	qword ptr [rsp + 0x158], rax
0x12c37:	mov	rax, qword ptr [rsp + 0x48]
0x12c3c:	mov	qword ptr [rsp + 0x188], r13
0x12c44:	mov	qword ptr [rsp + 0x180], r13
0x12c4c:	movzx	eax, byte ptr [rax + 0x38]
0x12c50:	mov	byte ptr [rsp + 8], al
0x12c54:	shr	al, 7
0x12c57:	mov	byte ptr [rsp + 0x1ad], al
0x12c5e:	mov	rax, qword ptr [rsp + 0x38]
0x12c63:	mov	r14, qword ptr [rax + 0x98]
0x12c6a:	mov	eax, dword ptr [rsp + 0x280]
0x12c71:	mov	qword ptr [rsp + 0x1c8], -1
0x12c7d:	lea	r13, [r14 + r14]
0x12c81:	mov	dword ptr [rsp + 0x1c0], eax
0x12c88:	test	r13, r13
0x12c8b:	jle	0x12cdf


0x12c27:	mov	qword ptr [rsp + 0x150], rax
0x12c2f:	mov	qword ptr [rsp + 0x158], rax
0x12c37:	mov	rax, qword ptr [rsp + 0x48]
0x12c3c:	mov	qword ptr [rsp + 0x188], r13
0x12c44:	mov	qword ptr [rsp + 0x180], r13
0x12c4c:	movzx	eax, byte ptr [rax + 0x38]
0x12c50:	mov	byte ptr [rsp + 8], al
0x12c54:	shr	al, 7
0x12c57:	mov	byte ptr [rsp + 0x1ad], al
0x12c5e:	mov	rax, qword ptr [rsp + 0x38]
0x12c63:	mov	r14, qword ptr [rax + 0x98]
0x12c6a:	mov	eax, dword ptr [rsp + 0x280]
0x12c71:	mov	qword ptr [rsp + 0x1c8], -1
0x12c7d:	lea	r13, [r14 + r14]
0x12c81:	mov	dword ptr [rsp + 0x1c0], eax
0x12c88:	test	r13, r13
0x12c8b:	jle	0x12cdf


0x12cdf:	cmp	qword ptr [rsp + 0x270], 1
0x12ce8:	mov	qword ptr [rsp + 0x1f0], r13
0x12cf0:	mov	dword ptr [rsp + 0x200], 1
0x12cfb:	mov	qword ptr [rsp + 0x210], r13
0x12d03:	jbe	0x13e28


0x12c8d:	movabs	rax, 0x666666666666666
0x12c97:	cmp	r13, rax
0x12c9a:	jg	0x139e0


0x13e28:	mov	rax, qword ptr [rsp + 0x38]
0x13e2d:	test	byte ptr [rax + 0xb0], 2
0x13e34:	jne	0x12d09


0x12d09:	mov	rax, qword ptr [rsp + 0x160]
0x12d11:	movabs	rdx, 0x1ffffffffffffffe
0x12d1b:	cmp	rax, rdx
0x12d1e:	ja	0x139e0


0x12ca0:	lea	rdi, [r13 + r14*8]
0x12ca5:	shl	rdi, 3
0x12ca9:	call	0x1f20


0x139e0:	mov	rdi, qword ptr [rsp + 0x1d8]
0x139e8:	mov	dword ptr [rsp + 0x5c], 0xc
0x139f0:	jmp	0x134c8


0x13e3a:	mov	qword ptr [rsp + 0x1d8], 0
0x13e46:	jmp	0x12d45


0x12d24:	lea	rdi, [rax*8 + 8]
0x12d2c:	call	0x1f20


0x134c8:	call	0x1c60


0x12d45:	mov	eax, dword ptr [rsp + 0x280]
0x12d4c:	mov	qword ptr [rsp + 0xd8], rbp
0x12d54:	and	eax, 1
0x12d57:	cmp	eax, 1
0x12d5a:	sbb	eax, eax
0x12d5c:	and	eax, 2
0x12d5f:	add	eax, 4
0x12d62:	mov	dword ptr [rsp + 0x190], eax
0x12d69:	xor	eax, eax
0x12d6b:	cmp	rbp, r12
0x12d6e:	setle	al
0x12d71:	lea	eax, [rax + rax - 1]
0x12d75:	mov	dword ptr [rsp + 0xac], eax
0x12d7c:	mov	rax, r12
0x12d7f:	cmovle	rax, rbp
0x12d83:	mov	qword ptr [rsp + 0x90], rax
0x12d8b:	mov	rax, r12
0x12d8e:	cmovge	rax, rbp
0x12d92:	cmp	qword ptr [rsp + 0x68], 0
0x12d98:	mov	qword ptr [rsp + 0x70], rax
0x12d9d:	mov	rax, qword ptr [rsp + 0x38]
0x12da2:	mov	esi, dword ptr [rax + 0xb4]
0x12da8:	mov	eax, 8
0x12dad:	mov	dword ptr [rsp + 0xc8], esi
0x12db4:	je	0x12def


0x12def:	cmp	rbp, qword ptr [rsp + 0x70]
0x12df4:	setg	cl
0x12df7:	cmp	rbp, qword ptr [rsp + 0x90]
0x12dff:	setl	dl
0x12e02:	or	cl, dl
0x12e04:	jne	0x138d9


0x12db6:	cmp	esi, 1
0x12db9:	mov	ecx, 4
0x12dbe:	je	0x12dde


0x12e0a:	lea	rcx, [rsp + 0xd8]
0x12e12:	cmp	rbp, r12
0x12e15:	mov	edx, 0
0x12e1a:	cmovle	rdx, rcx
0x12e1e:	test	rdx, rdx
0x12e21:	mov	qword ptr [rsp + 0xc0], rdx
0x12e29:	setne	byte ptr [rsp + 0xcf]
0x12e31:	sub	eax, 4
0x12e34:	mov	dword ptr [rsp + 0xa8], eax
0x12e3b:	lea	rax, [rsp + 0xd0]
0x12e43:	mov	qword ptr [rsp + 0x28], rax
0x12e48:	mov	eax, dword ptr [rsp + 0xa8]
0x12e4f:	cmp	eax, 4
0x12e52:	ja	0x13a3d


0x138d9:	mov	rdi, qword ptr [rsp + 0x1d8]
0x138e1:	mov	dword ptr [rsp + 0x5c], 1
0x138e9:	jmp	0x134c8


0x12dde:	xor	edx, edx
0x12de0:	cmp	rbp, r12
0x12de3:	movzx	eax, bl
0x12de6:	setle	dl
0x12de9:	or	eax, ecx
0x12deb:	add	edx, edx
0x12ded:	or	eax, edx
0x12def:	cmp	rbp, qword ptr [rsp + 0x70]
0x12df4:	setg	cl
0x12df7:	cmp	rbp, qword ptr [rsp + 0x90]
0x12dff:	setl	dl
0x12e02:	or	cl, dl
0x12e04:	jne	0x138d9


0x12dc0:	mov	rax, qword ptr [rsp + 0x48]
0x12dc5:	test	byte ptr [rax + 0x1a], 0x40
0x12dc9:	jne	0x13b4e


0x12e58:	lea	rcx, [rip + 0x99c1]
0x12e5f:	movsxd	rax, dword ptr [rcx + rax*4]
0x12e63:	add	rax, rcx
0x12e66:	jmp	rax


0x13a3d:	mov	rbx, qword ptr [rsp + 0x68]
0x13a42:	mov	r13d, dword ptr [rsp + 0xac]
0x13a4a:	mov	r14, qword ptr [rsp + 0x90]
0x13a52:	mov	r15, qword ptr [rsp + 0x70]
0x13a57:	mov	r12, qword ptr [rsp + 0x88]
0x13a5f:	jmp	0x13aa8


0x12dcf:	cmp	qword ptr [rsp + 0xb0], 0
0x12dd8:	jne	0x13b4e


0x13b4e:	xor	ecx, ecx
0x13b50:	jmp	0x12dde


0x13aa8:	mov	rdx, rbp
0x13aab:	sub	rdx, qword ptr [rsp + 0x148]
0x13ab3:	cmp	qword ptr [rsp + 0x158], rdx
0x13abb:	ja	0x13a68


0x13abd:	mov	edx, dword ptr [rsp + 0x280]
0x13ac4:	mov	rdi, qword ptr [rsp]
0x13ac8:	mov	rsi, rbp
0x13acb:	call	0xe000


0x13a68:	cmp	r12, rbp
0x13a6b:	mov	rax, rbx
0x13a6e:	jle	0x13a7f


0x13a7f:	cmp	byte ptr [rax], 0
0x13a82:	jne	0x12f48


0x13a70:	mov	rax, qword ptr [rsp + 0x128]
0x13a78:	movzx	eax, byte ptr [rax + rdx]
0x13a7c:	add	rax, rbx
0x13a7f:	cmp	byte ptr [rax], 0
0x13a82:	jne	0x12f48


0x13a88:	movsxd	rax, r13d
0x13a8b:	add	rbp, rax
0x13a8e:	cmp	rbp, r14
0x13a91:	mov	qword ptr [rsp + 0xd8], rbp
0x13a99:	jl	0x138d9


0x12f48:	mov	edx, dword ptr [rsp + 0x280]
0x12f4f:	mov	rdi, qword ptr [rsp]
0x12f53:	mov	rsi, rbp
0x12f56:	call	0xe000


0x13a9f:	cmp	rbp, r15
0x13aa2:	jg	0x138d9


0x12f5b:	test	eax, eax
0x12f5d:	mov	dword ptr [rsp + 0x5c], eax
0x12f61:	jne	0x134c0


0x12f67:	cmp	dword ptr [rsp + 0xc8], 1
0x12f6f:	je	0x12f8d


0x12f8d:	mov	rbx, qword ptr [rsp + 0x1b8]
0x12f95:	movzx	eax, byte ptr [rsp + 0x58]
0x12f9a:	mov	dword ptr [rsp + 0x200], 0
0x12fa5:	mov	qword ptr [rsp + 0x1e8], 0
0x12fb1:	mov	qword ptr [rsp + 0x1e0], 0
0x12fbd:	mov	dword ptr [rsp + 0xd0], 0
0x12fc8:	mov	r14, qword ptr [rbx + 0x48]
0x12fcc:	and	eax, 1
0x12fcf:	mov	byte ptr [rsp + 0xce], al
0x12fd6:	mov	rax, qword ptr [rsp + 0x168]
0x12fde:	cmp	byte ptr [r14 + 0x68], 0
0x12fe3:	mov	qword ptr [rsp + 8], rax
0x12fe8:	js	0x13960


0x12f71:	cmp	qword ptr [rsp + 0x150], 0
0x12f7a:	je	0x12f8d


0x13960:	mov	edx, dword ptr [rsp + 0x1c0]
0x13967:	mov	rdi, qword ptr [rsp]
0x1396b:	lea	rsi, [rax - 1]
0x1396f:	call	0xdd30


0x12fee:	mov	rax, qword ptr [rsp + 0x1d8]
0x12ff6:	test	rax, rax
0x12ff9:	je	0x13012


0x12f7c:	mov	rax, qword ptr [rsp + 0x130]
0x12f84:	cmp	dword ptr [rax], -1
0x12f87:	je	0x138b1


0x13012:	movzx	eax, byte ptr [rsp + 0xcf]
0x1301a:	mov	byte ptr [rsp + 0x18], al
0x1301e:	movzx	eax, byte ptr [r14 + 0x68]
0x13023:	test	al, 0x10
0x13025:	mov	qword ptr [rsp + 0x20], -1
0x1302e:	mov	qword ptr [rsp + 0x30], 0
0x13037:	jne	0x13ec0


0x12ffb:	cmp	qword ptr [rbx + 0x98], 0
0x13003:	mov	rdi, qword ptr [rsp + 8]
0x13008:	mov	qword ptr [rax + rdi*8], r14
0x1300c:	jne	0x13efb


0x138b1:	movsxd	rax, dword ptr [rsp + 0xac]
0x138b9:	add	rbp, rax
0x138bc:	cmp	rbp, qword ptr [rsp + 0x90]
0x138c4:	mov	qword ptr [rsp + 0xd8], rbp
0x138cc:	jl	0x138d9


0x1303d:	mov	rax, qword ptr [rsp + 0xc0]
0x13045:	mov	r8, qword ptr [rsp + 0x168]
0x1304d:	mov	qword ptr [rsp + 0x50], rax
0x13052:	lea	rax, [rsp + 0xe0]
0x1305a:	mov	qword ptr [rsp + 0x60], rax
0x1305f:	lea	rax, [rsp + 0xd4]
0x13067:	mov	qword ptr [rsp + 0x80], rax
0x1306f:	jmp	0x130cc


0x13ec0:	cmp	byte ptr [r14 + 0x68], 0
0x13ec5:	js	0x13f36


0x13efb:	lea	rbx, [r14 + 0x10]
0x13eff:	lea	rbp, [r14 + 0x18]
0x13f03:	mov	rdi, qword ptr [rsp]
0x13f07:	xor	ecx, ecx
0x13f09:	mov	rdx, rbp
0x13f0c:	mov	rsi, rbx
0x13f0f:	call	0xdbe0


0x138ce:	cmp	rbp, qword ptr [rsp + 0x70]
0x138d3:	jle	0x12e48


0x130cc:	cmp	qword ptr [rsp + 0x188], r8
0x130d4:	jle	0x131c4


0x13f36:	mov	rsi, qword ptr [r14 + 0x10]
0x13f3a:	mov	rcx, qword ptr [rsp + 8]
0x13f3f:	lea	rdx, [r14 + 0x18]
0x13f43:	mov	rdi, qword ptr [rsp]
0x13f47:	call	0xdf30


0x13ec7:	mov	esi, dword ptr [rsp + 0x58]
0x13ecb:	mov	rax, qword ptr [rsp + 8]
0x13ed0:	test	esi, esi
0x13ed2:	mov	qword ptr [rsp + 0x20], rax
0x13ed7:	je	0x131d6


0x12e48:	mov	eax, dword ptr [rsp + 0xa8]
0x12e4f:	cmp	eax, 4
0x12e52:	ja	0x13a3d


0x131c4:	mov	rax, qword ptr [rsp + 0x50]
0x131c9:	test	rax, rax
0x131cc:	je	0x131d6


0x130da:	mov	rax, qword ptr [rsp + 0x160]
0x130e2:	lea	rbx, [r8 + 1]
0x130e6:	cmp	rbx, rax
0x130e9:	jge	0x13590


0x131d6:	mov	rax, qword ptr [rsp + 0x20]
0x131db:	cmp	rax, -1
0x131df:	je	0x138a0


0x13edd:	mov	qword ptr [rsp + 0x30], 1
0x13ee6:	jmp	0x1303d


0x131ce:	mov	rdi, qword ptr [rsp + 8]
0x131d3:	add	qword ptr [rax], rdi
0x131d6:	mov	rax, qword ptr [rsp + 0x20]
0x131db:	cmp	rax, -1
0x131df:	je	0x138a0


0x130ef:	mov	rax, qword ptr [rsp + 0x150]
0x130f7:	cmp	rbx, rax
0x130fa:	jge	0x13880


0x13590:	cmp	rax, qword ptr [rsp + 0x178]
0x13598:	jge	0x130ef


0x138a0:	mov	rdi, qword ptr [rsp]
0x138a4:	call	0xbde0


0x131e5:	cmp	rax, -2
0x131e9:	je	0x139e0


0x13100:	test	byte ptr [r14 + 0x68], 0x20
0x13105:	jne	0x135d0


0x13880:	cmp	rax, qword ptr [rsp + 0x178]
0x13888:	jge	0x13100


0x1359e:	mov	rdi, qword ptr [rsp]
0x135a2:	lea	esi, [rbx + 1]
0x135a5:	call	0xb490


0x131ef:	mov	rax, qword ptr [rsp + 0x20]
0x131f4:	mov	qword ptr [rsp + 0x1c8], rax
0x131fc:	mov	rax, qword ptr [rsp + 0x48]
0x13201:	test	byte ptr [rax + 0x38], 0x10
0x13205:	jne	0x139c0


0x1310b:	lea	rax, [r8 + 1]
0x1310f:	mov	qword ptr [rsp + 0x168], rax
0x13117:	mov	rax, qword ptr [rsp + 0x128]
0x1311f:	movzx	r13d, byte ptr [rax + r8]
0x13124:	mov	rax, qword ptr [r14 + 0x58]
0x13128:	test	rax, rax
0x1312b:	je	0x13840


0x135d0:	cmp	qword ptr [r14 + 0x10], 0
0x135d5:	mov	r13, qword ptr [rsp + 0x1b8]
0x135dd:	jle	0x1390b


0x1388e:	jmp	0x1359e


0x1320b:	cmp	qword ptr [rsp + 0x270], 1
0x13214:	jbe	0x13b0c


0x139c0:	mov	rax, qword ptr [rsp + 0x38]
0x139c5:	cmp	qword ptr [rax + 0x98], 0
0x139cd:	je	0x13bfc


0x13840:	mov	rbp, qword ptr [r14 + 0x60]
0x13844:	test	rbp, rbp
0x13847:	je	0x139f5


0x13131:	mov	r13, qword ptr [rax + r13*8]
0x13135:	cmp	qword ptr [rsp + 0x1d8], 0
0x1313e:	je	0x13154


0x1390b:	mov	dword ptr [rsp + 0xd0], 0
0x13916:	jmp	0x1310b


0x135e3:	lea	rax, [r13 + 0xd8]
0x135ea:	xor	r12d, r12d
0x135ed:	mov	qword ptr [rsp + 0xa0], rbx
0x135f5:	mov	rbx, r12
0x135f8:	mov	r12, r8
0x135fb:	mov	qword ptr [rsp + 0x40], rax
0x13600:	jmp	0x13758


0x13b0c:	mov	rax, qword ptr [rsp + 0x38]
0x13b11:	cmp	qword ptr [rax + 0x98], 0
0x13b19:	je	0x13bfc


0x1321a:	mov	rcx, qword ptr [rsp + 0x20]
0x1321f:	mov	rbx, qword ptr [rsp + 0x1d8]
0x13227:	mov	rdi, qword ptr [rsp]
0x1322b:	mov	rax, qword ptr [rbx + rcx*8]
0x1322f:	mov	rsi, qword ptr [rax + 0x10]
0x13233:	lea	rdx, [rax + 0x18]
0x13237:	call	0xdf30


0x13bfc:	cmp	qword ptr [rsp + 0x270], 0
0x13c05:	je	0x134c0


0x139d3:	jmp	0x13b1f


0x139f5:	mov	rdi, qword ptr [rsp + 0x1b8]
0x139fd:	mov	rsi, r14
0x13a00:	call	0xe9e0


0x1384d:	mov	rax, qword ptr [rsp + 0x168]
0x13855:	mov	edx, dword ptr [rsp + 0x1c0]
0x1385c:	mov	rdi, qword ptr [rsp]
0x13860:	lea	rsi, [rax - 1]
0x13864:	call	0xdd30


0x13154:	test	r13, r13
0x13157:	jne	0x13078


0x13140:	mov	rsi, qword ptr [rsp]
0x13144:	mov	rdi, qword ptr [rsp + 0x28]
0x13149:	mov	rdx, r13
0x1314c:	call	0x12440


0x13758:	mov	rax, qword ptr [r14 + 0x18]
0x1375c:	mov	rbp, qword ptr [r13]
0x13760:	mov	r15, qword ptr [rax + rbx*8]
0x13764:	mov	rax, r15
0x13767:	shl	rax, 4
0x1376b:	add	rax, rbp
0x1376e:	test	byte ptr [rax + 0xa], 0x10
0x13772:	je	0x1374a


0x13b1f:	mov	rcx, qword ptr [rsp + 0x20]
0x13b24:	mov	rbx, qword ptr [rsp + 0x1d8]
0x13b2c:	mov	rdi, qword ptr [rsp]
0x13b30:	mov	rax, qword ptr [rbx + rcx*8]
0x13b34:	mov	rsi, qword ptr [rax + 0x10]
0x13b38:	lea	rdx, [rax + 0x18]
0x13b3c:	call	0xdf30


0x13c0b:	cmp	qword ptr [rsp + 0x270], 1
0x13c14:	je	0x14038


0x1315d:	mov	ecx, dword ptr [rsp + 0xd0]
0x13164:	mov	rdi, qword ptr [rsp + 0x1d8]
0x1316c:	test	ecx, ecx
0x1316e:	jne	0x13a30


0x13078:	cmp	r14, r13
0x1307b:	mov	r8, qword ptr [rsp + 0x168]
0x13083:	sete	al
0x13086:	and	byte ptr [rsp + 0x18], al
0x1308a:	movzx	eax, byte ptr [r13 + 0x68]
0x1308f:	cmove	rbx, qword ptr [rsp + 8]
0x13095:	test	al, 0x10
0x13097:	mov	qword ptr [rsp + 8], rbx
0x1309c:	je	0x130c9


0x1374a:	add	rbx, 1
0x1374e:	cmp	rbx, qword ptr [r14 + 0x10]
0x13752:	jge	0x13900


0x13774:	mov	ecx, dword ptr [rax + 8]
0x13777:	test	ecx, 0x3ff00
0x1377d:	mov	dword ptr [rsp + 0x10], ecx
0x13781:	je	0x13640


0x14038:	mov	rsi, qword ptr [rsp + 0xb8]
0x14040:	mov	rax, qword ptr [rsp + 0x1c8]
0x14048:	mov	qword ptr [rsi], 0
0x1404f:	mov	qword ptr [rsi + 8], rax
0x14053:	xor	eax, eax
0x14055:	jmp	0x13cd1


0x13c1a:	mov	rsi, qword ptr [rsp + 0xb8]
0x13c22:	mov	rcx, qword ptr [rsp + 0x270]
0x13c2a:	mov	rdx, -1
0x13c31:	shl	rcx, 4
0x13c35:	lea	rax, [rsi + 0x10]
0x13c39:	add	rcx, rsi
0x13c3c:	mov	qword ptr [rax + 8], rdx
0x13c40:	mov	qword ptr [rax], rdx
0x13c43:	add	rax, 0x10
0x13c47:	cmp	rcx, rax
0x13c4a:	jne	0x13c3c


0x13174:	test	rdi, rdi
0x13177:	je	0x131c4


0x13a30:	mov	dword ptr [rsp + 0x5c], 0xc
0x13a38:	jmp	0x134c8


0x130c9:	mov	r14, r13
0x130cc:	cmp	qword ptr [rsp + 0x188], r8
0x130d4:	jle	0x131c4


0x1309e:	test	al, al
0x130a0:	js	0x13560


0x13900:	mov	rbx, qword ptr [rsp + 0xa0]
0x13908:	mov	r8, r12
0x1390b:	mov	dword ptr [rsp + 0xd0], 0
0x13916:	jmp	0x1310b


0x13640:	mov	rcx, qword ptr [rsp]
0x13644:	mov	rsi, qword ptr [rsp + 0x40]
0x13649:	mov	r8, r12
0x1364c:	mov	rdx, r15
0x1364f:	mov	rdi, rbp
0x13652:	call	0x10700


0x13787:	mov	edx, dword ptr [rsp + 0x1c0]
0x1378e:	mov	rdi, qword ptr [rsp]
0x13792:	mov	rsi, r12
0x13795:	call	0xdd30


0x13cd1:	movzx	r11d, byte ptr [rsp + 0x1ac]
0x13cda:	mov	r10, qword ptr [rsp + 0x150]
0x13ce2:	xor	ecx, ecx
0x13ce4:	mov	r9, qword ptr [rsp + 0x138]
0x13cec:	mov	r8, qword ptr [rsp + 0x158]
0x13cf4:	mov	rdi, qword ptr [rsp + 0xd8]
0x13cfc:	mov	rdx, qword ptr [rsp + 0xb8]
0x13d04:	jmp	0x13d09


0x13c4c:	mov	rdi, qword ptr [rsp + 0xb8]
0x13c54:	mov	rax, qword ptr [rsp + 0x1c8]
0x13c5c:	mov	qword ptr [rdi + 8], rax
0x13c60:	mov	rax, qword ptr [rsp + 0x48]
0x13c65:	mov	qword ptr [rdi], 0
0x13c6c:	test	byte ptr [rax + 0x38], 0x10
0x13c70:	jne	0x14053


0x13c3c:	mov	qword ptr [rax + 8], rdx
0x13c40:	mov	qword ptr [rax], rdx
0x13c43:	add	rax, 0x10
0x13c47:	cmp	rcx, rax
0x13c4a:	jne	0x13c3c


0x13179:	movzx	eax, byte ptr [rsp + 0xce]
0x13181:	xor	eax, 1
0x13184:	test	byte ptr [rsp + 0x30], al
0x13188:	jne	0x131c4


0x13560:	mov	rsi, qword ptr [r13 + 0x10]
0x13564:	mov	rdi, qword ptr [rsp]
0x13568:	lea	rdx, [r13 + 0x18]
0x1356c:	mov	rcx, r8
0x1356f:	mov	qword ptr [rsp + 0x10], r8
0x13574:	call	0xdf30


0x130a6:	mov	eax, dword ptr [rsp + 0x58]
0x130aa:	mov	qword ptr [rsp + 0x20], r8
0x130af:	test	eax, eax
0x130b1:	je	0x131d6


0x13d09:	cmp	rax, -1
0x13d0d:	je	0x13d29


0x13c76:	cmp	qword ptr [rsp + 0x270], 1
0x13c7f:	je	0x14053


0x14053:	xor	eax, eax
0x14055:	jmp	0x13cd1


0x1318a:	mov	rsi, qword ptr [rsp + 0x1e0]
0x13192:	mov	rax, qword ptr [rsp + 0x168]
0x1319a:	xor	ecx, ecx
0x1319c:	jmp	0x131b3


0x130b7:	mov	qword ptr [rsp + 0x30], 1
0x130c0:	mov	qword ptr [rsp + 0x50], 0
0x130c9:	mov	r14, r13
0x130cc:	cmp	qword ptr [rsp + 0x188], r8
0x130d4:	jle	0x131c4


0x13d29:	add	rcx, 1
0x13d2d:	add	rdx, 0x10
0x13d31:	cmp	rcx, qword ptr [rsp + 0x270]
0x13d39:	jne	0x13d06


0x13d0f:	test	r11b, r11b
0x13d12:	mov	rsi, qword ptr [rdx + 8]
0x13d16:	jne	0x1405a


0x13c85:	mov	rax, qword ptr [rsp + 0x38]
0x13c8a:	xor	r8d, r8d
0x13c8d:	test	byte ptr [rax + 0xb0], 1
0x13c94:	je	0x13ca5


0x131b3:	lea	rdx, [rax + 1]
0x131b7:	cmp	rsi, rdx
0x131ba:	jge	0x131a0


0x13d3b:	cmp	qword ptr [rsp + 0x98], 0
0x13d44:	jle	0x13d85


0x13d06:	mov	rax, qword ptr [rdx]
0x13d09:	cmp	rax, -1
0x13d0d:	je	0x13d29


0x13d1c:	add	rax, rdi
0x13d1f:	add	rsi, rdi
0x13d22:	mov	qword ptr [rdx], rax
0x13d25:	mov	qword ptr [rdx + 8], rsi
0x13d29:	add	rcx, 1
0x13d2d:	add	rdx, 0x10
0x13d31:	cmp	rcx, qword ptr [rsp + 0x270]
0x13d39:	jne	0x13d06


0x1405a:	cmp	r10, rax
0x1405d:	je	0x1407c


0x13ca5:	mov	rbx, qword ptr [rsp + 0xb8]
0x13cad:	mov	rdx, qword ptr [rsp + 0x270]
0x13cb5:	mov	rsi, qword ptr [rsp]
0x13cb9:	mov	rdi, qword ptr [rsp + 0x48]
0x13cbe:	mov	rcx, rbx
0x13cc1:	call	0x110c0


0x13c96:	xor	r8d, r8d
0x13c99:	cmp	qword ptr [rax + 0x98], 0
0x13ca1:	setg	r8b
0x13ca5:	mov	rbx, qword ptr [rsp + 0xb8]
0x13cad:	mov	rdx, qword ptr [rsp + 0x270]
0x13cb5:	mov	rsi, qword ptr [rsp]
0x13cb9:	mov	rdi, qword ptr [rsp + 0x48]
0x13cbe:	mov	rcx, rbx
0x13cc1:	call	0x110c0


0x131bc:	test	cl, cl
0x131be:	jne	0x1408e


0x131a0:	cmp	qword ptr [rdi + rdx*8], 0
0x131a5:	mov	rax, rdx
0x131a8:	mov	ecx, 1
0x131ad:	jne	0x13520


0x13d85:	mov	rax, qword ptr [rsp + 0x38]
0x13d8a:	mov	rdi, qword ptr [rsp + 0x1d8]
0x13d92:	mov	r9, qword ptr [rax + 0xe0]
0x13d99:	test	r9, r9
0x13d9c:	je	0x134c8


0x13d46:	mov	rdx, qword ptr [rsp + 0x98]
0x13d4e:	mov	rdi, qword ptr [rsp + 0xb8]
0x13d56:	mov	rax, rcx
0x13d59:	shl	rax, 4
0x13d5d:	add	rdx, rcx
0x13d60:	lea	rax, [rdi + rax + 8]
0x13d65:	shl	rdx, 4
0x13d69:	lea	rsi, [rdi + rdx + 8]
0x13d6e:	mov	rdx, -1
0x13d75:	mov	qword ptr [rax - 8], rdx
0x13d79:	mov	qword ptr [rax], rdx
0x13d7c:	add	rax, 0x10
0x13d80:	cmp	rsi, rax
0x13d83:	jne	0x13d75


0x1407c:	mov	rax, r8
0x1407f:	jmp	0x14063


0x1405f:	mov	rax, qword ptr [r9 + rax*8]
0x14063:	cmp	r10, rsi
0x14066:	mov	qword ptr [rdx], rax
0x14069:	je	0x14074


0x1408e:	mov	qword ptr [rsp + 0x168], rax
0x14096:	jmp	0x131c4


0x13520:	mov	rsi, qword ptr [rsp]
0x13524:	mov	rdi, qword ptr [rsp + 0x28]
0x13529:	mov	qword ptr [rsp + 0x168], rdx
0x13531:	xor	edx, edx
0x13533:	call	0x12440


0x13da2:	mov	r10, qword ptr [rsp + 0xb8]
0x13daa:	xor	r8d, r8d
0x13dad:	lea	rdx, [r10 + 0x10]
0x13db1:	jmp	0x13de9


0x13d75:	mov	qword ptr [rax - 8], rdx
0x13d79:	mov	qword ptr [rax], rdx
0x13d7c:	add	rax, 0x10
0x13d80:	cmp	rsi, rax
0x13d83:	jne	0x13d75


0x14063:	cmp	r10, rsi
0x14066:	mov	qword ptr [rdx], rax
0x14069:	je	0x14074


0x14074:	mov	rsi, r8
0x14077:	jmp	0x13d1c


0x1406b:	mov	rsi, qword ptr [r9 + rsi*8]
0x1406f:	jmp	0x13d1c


0x13de9:	lea	rsi, [r8 + 1]
0x13ded:	cmp	rsi, rcx
0x13df0:	jne	0x13db3


0x13df2:	jmp	0x134c8


0x13db3:	mov	rax, qword ptr [r9 + rsi*8 - 8]
0x13db8:	cmp	rax, r8
0x13dbb:	je	0x13de2


0x13de2:	add	rdx, 0x10
0x13de6:	mov	r8, rsi
0x13de9:	lea	rsi, [r8 + 1]
0x13ded:	cmp	rsi, rcx
0x13df0:	jne	0x13db3


0x13dbd:	add	rax, 1
0x13dc1:	shl	rax, 4
0x13dc5:	mov	rax, qword ptr [r10 + rax]
0x13dc9:	mov	qword ptr [rdx], rax
0x13dcc:	mov	rax, qword ptr [r9 + rsi*8 - 8]
0x13dd1:	add	rax, 1
0x13dd5:	shl	rax, 4
0x13dd9:	mov	rax, qword ptr [r10 + rax + 8]
0x13dde:	mov	qword ptr [rdx + 8], rax
0x13de2:	add	rdx, 0x10
0x13de6:	mov	r8, rsi
0x13de9:	lea	rsi, [r8 + 1]
0x13ded:	cmp	rsi, rcx
0x13df0:	jne	0x13db3


0x13657:	test	eax, eax
0x13659:	je	0x13742


0x13742:	mov	r12, qword ptr [rsp + 0x168]
0x1374a:	add	rbx, 1
0x1374e:	cmp	rbx, qword ptr [r14 + 0x10]
0x13752:	jge	0x13900


0x1365f:	movsxd	rbp, eax
0x13662:	add	rbp, qword ptr [rsp + 0x168]
0x1366a:	cmp	dword ptr [rsp + 0x200], eax
0x13671:	cmovge	eax, dword ptr [rsp + 0x200]
0x13679:	mov	rdi, qword ptr [rsp]
0x1367d:	mov	rsi, rbp
0x13680:	mov	dword ptr [rsp + 0x200], eax
0x13687:	call	0xb5e0


0x1368c:	test	eax, eax
0x1368e:	mov	dword ptr [rsp + 0xd4], eax
0x13695:	jne	0x13930


0x1369b:	mov	rax, qword ptr [r13 + 0x18]
0x1369f:	lea	r12, [rbp*8]
0x136a7:	mov	rax, qword ptr [rax + r15*8]
0x136ab:	mov	r15, qword ptr [rsp + 0x1d8]
0x136b3:	lea	rdx, [rax + rax*2]
0x136b7:	mov	rax, qword ptr [r13 + 0x30]
0x136bb:	add	r15, r12
0x136be:	lea	rdx, [rax + rdx*8]
0x136c2:	mov	rax, qword ptr [r15]
0x136c5:	test	rax, rax
0x136c8:	je	0x137c8


0x13930:	mov	rbx, qword ptr [rsp + 0xa0]
0x13938:	mov	rdi, qword ptr [rsp + 0x1d8]
0x13940:	test	rdi, rdi
0x13943:	mov	dword ptr [rsp + 0xd0], eax
0x1394a:	je	0x13a30


0x137c8:	movdqu	xmm0, xmmword ptr [rdx]
0x137cc:	lea	rsi, [rbp - 1]
0x137d0:	mov	rdi, qword ptr [rsp]
0x137d4:	movaps	xmmword ptr [rsp + 0xe0], xmm0
0x137dc:	mov	rax, qword ptr [rdx + 0x10]
0x137e0:	mov	edx, dword ptr [rsp + 0x1c0]
0x137e7:	mov	qword ptr [rsp + 0xf0], rax
0x137ef:	call	0xdd30


0x136ce:	mov	rsi, qword ptr [rax + 0x50]
0x136d2:	mov	rdi, qword ptr [rsp + 0x60]
0x136d7:	call	0xd140


0x13950:	xor	r13d, r13d
0x13953:	jmp	0x13140


0x136dc:	test	eax, eax
0x136de:	mov	dword ptr [rsp + 0xd4], eax
0x136e5:	jne	0x13930


0x136eb:	mov	edx, dword ptr [rsp + 0x1c0]
0x136f2:	mov	rdi, qword ptr [rsp]
0x136f6:	lea	rsi, [rbp - 1]
0x136fa:	call	0xdd30


0x13538:	mov	edx, dword ptr [rsp + 0xd0]
0x1353f:	test	edx, edx
0x13541:	jne	0x13e7d


0x13547:	test	rax, rax
0x1354a:	jne	0x13e90


0x13e7d:	test	rax, rax
0x13e80:	mov	r13, rax
0x13e83:	jne	0x13078


0x13550:	mov	rdi, qword ptr [rsp + 0x1d8]
0x13558:	jmp	0x1318a


0x13e90:	mov	r13, rax
0x13e93:	jmp	0x13078


0x13e89:	jmp	0x131c4


0x13151:	mov	r13, rax
0x13154:	test	r13, r13
0x13157:	jne	0x13078


0x135aa:	test	eax, eax
0x135ac:	mov	dword ptr [rsp + 0xd0], eax
0x135b3:	jne	0x13e98


0x135b9:	test	byte ptr [r14 + 0x68], 0x20
0x135be:	mov	r8, qword ptr [rsp + 0x168]
0x135c6:	je	0x1310b


0x13e98:	cmp	eax, 0xc
0x13e9b:	je	0x139e0


0x13ea1:	lea	rcx, [rip + 0x8e08]
0x13ea8:	lea	rsi, [rip + 0x8821]
0x13eaf:	lea	rdi, [rip + 0x88ce]
0x13eb6:	mov	edx, 0x46c
0x13ebb:	call	0x1e30


0x138a9:	mov	rbp, qword ptr [rsp + 0xd8]
0x138b1:	movsxd	rax, dword ptr [rsp + 0xac]
0x138b9:	add	rbp, rax
0x138bc:	cmp	rbp, qword ptr [rsp + 0x90]
0x138c4:	mov	qword ptr [rsp + 0xd8], rbp
0x138cc:	jl	0x138d9


0x13f14:	test	eax, eax
0x13f16:	mov	dword ptr [rsp + 0xd0], eax
0x13f1d:	jne	0x13f68


0x13f1f:	movzx	eax, byte ptr [r14 + 0x68]
0x13f24:	test	al, 0x40
0x13f26:	jne	0x14010


0x13f68:	cdqe	
0x13f6a:	mov	qword ptr [rsp + 0x20], rax
0x13f6f:	jmp	0x131d6


0x13f2c:	mov	byte ptr [rsp + 0x18], 0
0x13f31:	jmp	0x13023


0x14010:	mov	rdi, qword ptr [rsp]
0x14014:	mov	rdx, rbp
0x14017:	mov	rsi, rbx
0x1401a:	call	0x11b50


0x13023:	test	al, 0x10
0x13025:	mov	qword ptr [rsp + 0x20], -1
0x1302e:	mov	qword ptr [rsp + 0x30], 0
0x13037:	jne	0x13ec0


0x1401f:	test	eax, eax
0x14021:	mov	dword ptr [rsp + 0xd0], eax
0x14028:	jne	0x13f68


0x1402e:	movzx	eax, byte ptr [r14 + 0x68]
0x14033:	jmp	0x13f2c


0x13ad0:	test	eax, eax
0x13ad2:	jne	0x134b8


0x13ad8:	mov	rdx, rbp
0x13adb:	sub	rdx, qword ptr [rsp + 0x148]
0x13ae3:	jmp	0x13a68


0x134b8:	mov	dword ptr [rsp + 0x5c], eax
0x134bc:	nop	dword ptr [rax]
0x134c0:	mov	rdi, qword ptr [rsp + 0x1d8]
0x134c8:	call	0x1c60


0xb4cd:	test	eax, eax
0xb4cf:	mov	ebp, eax
0xb4d1:	jne	0xb58d


0xb4d7:	mov	rdi, qword ptr [rbx + 0xb8]
0xb4de:	test	rdi, rdi
0xb4e1:	je	0xb504


0xb58d:	add	rsp, 8
0xb591:	mov	eax, ebp
0xb593:	pop	rbx
0xb594:	pop	rbp
0xb595:	ret	


0xb504:	cmp	byte ptr [rbx + 0x88], 0
0xb50b:	mov	eax, dword ptr [rbx + 0x90]
0xb511:	je	0xb530


0xb4e3:	mov	rax, qword ptr [rbx + 0x40]
0xb4e7:	lea	rsi, [rax*8 + 8]
0xb4ef:	call	0x1f90


0xb530:	cmp	eax, 1
0xb533:	jg	0xb5a0


0xb513:	cmp	eax, 1
0xb516:	mov	rdi, rbx
0xb519:	jle	0xb5d0


0xb535:	mov	rcx, qword ptr [rbx + 0x78]
0xb539:	test	rcx, rcx
0xb53c:	je	0xb58d


0xb5a0:	mov	rdi, rbx
0xb5a3:	call	0xaca0


0xb5d0:	call	0xac30


0xb51f:	add	rsp, 8
0xb523:	pop	rbx
0xb524:	pop	rbp
0xb525:	jmp	0xae70


0xb53e:	mov	rsi, qword ptr [rbx + 0x58]
0xb542:	cmp	qword ptr [rbx + 0x40], rsi
0xb546:	cmovle	rsi, qword ptr [rbx + 0x40]
0xb54b:	mov	rax, qword ptr [rbx + 0x30]
0xb54f:	cmp	rsi, rax
0xb552:	jg	0xb564


0xb554:	jmp	0xb585


0xb564:	mov	rdx, qword ptr [rbx]
0xb567:	add	rdx, rax
0xb56a:	add	rdx, qword ptr [rbx + 0x28]
0xb56e:	movzx	edx, byte ptr [rdx]
0xb571:	movzx	ecx, byte ptr [rcx + rdx]
0xb575:	mov	rdx, qword ptr [rbx + 8]
0xb579:	mov	byte ptr [rdx + rax], cl
0xb57c:	add	rax, 1
0xb580:	cmp	rsi, rax
0xb583:	jne	0xb560


0xb585:	mov	qword ptr [rbx + 0x30], rax
0xb589:	mov	qword ptr [rbx + 0x38], rax
0xb58d:	add	rsp, 8
0xb591:	mov	eax, ebp
0xb593:	pop	rbx
0xb594:	pop	rbp
0xb595:	ret	


0xb560:	mov	rcx, qword ptr [rbx + 0x78]
0xb564:	mov	rdx, qword ptr [rbx]
0xb567:	add	rdx, rax
0xb56a:	add	rdx, qword ptr [rbx + 0x28]
0xb56e:	movzx	edx, byte ptr [rdx]
0xb571:	movzx	ecx, byte ptr [rcx + rdx]
0xb575:	mov	rdx, qword ptr [rbx + 8]
0xb579:	mov	byte ptr [rdx + rax], cl
0xb57c:	add	rax, 1
0xb580:	cmp	rsi, rax
0xb583:	jne	0xb560


0xb5d5:	add	rsp, 8
0xb5d9:	mov	eax, ebp
0xb5db:	pop	rbx
0xb5dc:	pop	rbp
0xb5dd:	ret	


0xb5a8:	add	rsp, 8
0xb5ac:	mov	eax, ebp
0xb5ae:	pop	rbx
0xb5af:	pop	rbp
0xb5b0:	ret	


0x14ac4:	cdqe	
0x14ac6:	add	rax, r11
0x14ac9:	mov	qword ptr [r10 + 0x48], rax
0x14acd:	jmp	0x14a0a


0x1073f:	cmp	r11b, 5
0x10743:	mov	ebp, eax
0x10745:	je	0x10800


0x10800:	cmp	eax, 1
0x10803:	jle	0x107f0


0x1074b:	cmp	r11b, 6
0x1074f:	jne	0x107f0


0x10805:	mov	rax, qword ptr [rbx]
0x10808:	test	al, 0x40
0x1080a:	je	0x10820


0x10755:	cmp	eax, 1
0x10758:	jle	0x107f0


0x10820:	mov	rdx, qword ptr [r10 + 8]
0x10824:	cmp	byte ptr [rdx + r8], 0xa
0x10829:	jne	0x1080c


0x1080c:	test	al, 0x80
0x1080e:	je	0x107f2


0x1075e:	mov	r13, qword ptr [r9]
0x10761:	mov	rsi, qword ptr [r13 + 0x40]
0x10765:	mov	rdx, qword ptr [r13 + 0x28]
0x10769:	test	rsi, rsi
0x1076c:	jne	0x10779


0x1082b:	jmp	0x107f0


0x10810:	mov	rax, qword ptr [r10 + 8]
0x10814:	cmp	byte ptr [rax + r8], 0
0x10819:	je	0x107f0


0x1076e:	cmp	qword ptr [r13 + 0x48], 0
0x10773:	je	0x10868


0x10779:	mov	rax, qword ptr [r10 + 0x10]
0x1077d:	test	rdx, rdx
0x10780:	mov	r12d, dword ptr [rax + r8*4]
0x10784:	jle	0x107a7


0x1081b:	jmp	0x107f2


0x10868:	test	rdx, rdx
0x1086b:	jne	0x10779


0x107a7:	mov	rax, qword ptr [r13 + 0x48]
0x107ab:	test	rax, rax
0x107ae:	jle	0x1088c


0x10786:	mov	rcx, qword ptr [r13]
0x1078a:	cmp	r12d, dword ptr [rcx]
0x1078d:	je	0x107e2


0x10871:	test	byte ptr [r13 + 0x20], 1
0x10876:	jne	0x107f2


0x1088c:	test	rsi, rsi
0x1088f:	jle	0x10871


0x107b4:	xor	ebx, ebx
0x107b6:	jmp	0x107ce


0x107e2:	test	byte ptr [r13 + 0x20], 1
0x107e7:	je	0x107f2


0x1078f:	xor	eax, eax
0x10791:	jmp	0x1079e


0x1087c:	jmp	0x107f0


0x10891:	mov	rdx, qword ptr [r13 + 8]
0x10895:	xor	eax, eax
0x10897:	jmp	0x108a9


0x107ce:	mov	rax, qword ptr [r13 + 0x18]
0x107d2:	mov	edi, r12d
0x107d5:	mov	rsi, qword ptr [rax + rbx*8]
0x107d9:	call	0x1d40


0x1079e:	add	rax, 1
0x107a2:	cmp	rax, rdx
0x107a5:	jne	0x10798


0x108a9:	cmp	r12d, dword ptr [rdx + rax*4]
0x108ad:	jl	0x108a0


0x1d40:	jmp	qword ptr [rip + 0x21f092]


0x10798:	cmp	r12d, dword ptr [rcx + rax*4]
0x1079c:	je	0x107e2


0x108a0:	add	rax, 1
0x108a4:	cmp	rax, rsi
0x108a7:	je	0x10871


0x108af:	mov	rcx, qword ptr [r13 + 0x10]
0x108b3:	cmp	r12d, dword ptr [rcx + rax*4]
0x108b7:	jg	0x108a0




0x108b9:	jmp	0x107e2


0x14930:	cmp	eax, 1
0x14933:	jle	0x14978


0x14935:	mov	rdx, qword ptr [r10 + 0x10]
0x14939:	cdqe	
0x1493b:	mov	dword ptr [rbx], 1
0x14941:	add	rax, r12
0x14944:	mov	edx, dword ptr [rdx + r12*4]
0x14948:	mov	dword ptr [rbx + 8], edx
0x1494b:	mov	qword ptr [r10 + 0x48], rax
0x1494f:	xor	eax, eax
0x14951:	mov	rcx, qword ptr [rsp + 0x18]
0x14956:	xor	rcx, qword ptr fs:[0x28]
0x1495f:	jne	0x14b48


0x17cd5:	mov	rax, qword ptr [r12 + 0x50]
0x17cda:	cmp	qword ptr [r12 + 0x48], rax
0x17cdf:	je	0x17cf9


0x17cf9:	mov	rsi, qword ptr [r12 + 0x58]
0x17cfe:	cmp	rsi, rax
0x17d01:	je	0x17d1b


0x17ce1:	lea	rdx, [rax + 0x18]
0x17ce5:	lea	rsi, [rax + 0x10]
0x17ce9:	mov	rcx, rbp
0x17cec:	mov	rdi, rbx
0x17cef:	call	0x101d0


0x17d1b:	mov	rsi, qword ptr [r12 + 0x60]
0x17d20:	cmp	rsi, rax
0x17d23:	je	0x17d38


0x17d03:	lea	rdx, [rsi + 0x18]
0x17d07:	mov	rcx, rbp
0x17d0a:	add	rsi, 0x10
0x17d0e:	mov	rdi, rbx
0x17d11:	call	0x101d0


0x17d38:	or	byte ptr [rbx + 0x38], 8
0x17d3c:	xor	eax, eax
0x17d3e:	pop	rbx
0x17d3f:	pop	rbp
0x17d40:	pop	r12
0x17d42:	ret	


0x17d25:	lea	rdx, [rsi + 0x18]
0x17d29:	mov	rcx, rbp
0x17d2c:	add	rsi, 0x10
0x17d30:	mov	rdi, rbx
0x17d33:	call	0x101d0


0x17d16:	mov	rax, qword ptr [r12 + 0x48]
0x17d1b:	mov	rsi, qword ptr [r12 + 0x60]
0x17d20:	cmp	rsi, rax
0x17d23:	je	0x17d38


0x17cf4:	mov	rax, qword ptr [r12 + 0x48]
0x17cf9:	mov	rsi, qword ptr [r12 + 0x58]
0x17cfe:	cmp	rsi, rax
0x17d01:	je	0x17d1b


0x17fec:	movzx	eax, byte ptr [r15 + 0x38]
0x17ff1:	mov	r9, qword ptr [rsp + 0x20]
0x17ff6:	mov	rdx, qword ptr [rsp + 0x18]
0x17ffb:	mov	rsi, qword ptr [rsp + 0x10]
0x18000:	mov	r8, qword ptr [rsp + 8]
0x18005:	jmp	0x17de1


0x1aae3:	test	eax, eax
0x1aae5:	jne	0x1ab08


0x1ab08:	mov	rdi, rbp
0x1ab0b:	mov	rsi, r12
0x1ab0e:	call	0x20f0


0x20f0:	jmp	qword ptr [rip + 0x21eeba]




0x549e:	test	eax, eax
0x54a0:	jns	0x5470


0x54a2:	lea	r13, [rbx - 1]
0x54a6:	cmp	r14, r13
0x54a9:	jle	0x547b


0x5470:	je	0x54c0


0x54ab:	pop	rbx
0x54ac:	xor	eax, eax
0x54ae:	pop	rbp
0x54af:	pop	r12
0x54b1:	pop	r13
0x54b3:	pop	r14
0x54b5:	ret	


0x54c0:	pop	rbx
0x54c1:	mov	eax, 1
0x54c6:	pop	rbp
0x54c7:	pop	r12
0x54c9:	pop	r13
0x54cb:	pop	r14
0x54cd:	ret	


0x5472:	lea	r14, [rbx + 1]
0x5476:	cmp	r14, r13
0x5479:	jg	0x54ab


0x542d:	test	eax, eax
0x542f:	jne	0x5440


0x5431:	mov	rax, qword ptr [rbx]
0x5434:	cmp	qword ptr [rbp], rax
0x5438:	jb	0x5448


0x5440:	pop	rbx
0x5441:	pop	rbp
0x5442:	ret	


0x5448:	mov	eax, 0xffffffff
0x544d:	jmp	0x5440


0x543a:	seta	al
0x543d:	movzx	eax, al
0x5440:	pop	rbx
0x5441:	pop	rbp
0x5442:	ret	


0xbcb7:	cmp	qword ptr [r12 + 0x10], rbx
0xbcbc:	ja	0xbca0


0xbca0:	mov	rdi, qword ptr [r12]
0xbca4:	mov	rax, rbx
0xbca7:	add	rbx, 1
0xbcab:	shl	rax, 4
0xbcaf:	add	rdi, rax
0xbcb2:	call	0xb6a0


0xb6dd:	xor	eax, eax
0xb6df:	add	rsp, 8
0xb6e3:	ret	


0xf5a3:	cmp	rax, -1
0xf5a7:	mov	rdx, rax
0xf5aa:	mov	qword ptr [rbx + 0x38], rax
0xf5ae:	je	0xf600


0xf600:	mov	eax, 0xc
0xf605:	jmp	0xf5dc


0xf5b0:	xor	eax, eax
0xf5b2:	cmp	byte ptr [rbx + 0x30], 0xc
0xf5b6:	jne	0xf5dc


0xf5dc:	add	rsp, 8
0xf5e0:	pop	rbx
0xf5e1:	pop	rbp
0xf5e2:	ret	


0xf5b8:	mov	ecx, dword ptr [rbx + 0x28]
0xf5bb:	shl	rdx, 4
0xf5bf:	add	rdx, qword ptr [rbp]
0xf5c3:	and	ecx, 0x3ff
0xf5c9:	shl	ecx, 8
0xf5cc:	mov	esi, ecx
0xf5ce:	mov	ecx, dword ptr [rdx + 8]
0xf5d1:	and	ecx, 0xfffc00ff
0xf5d7:	or	ecx, esi
0xf5d9:	mov	dword ptr [rdx + 8], ecx
0xf5dc:	add	rsp, 8
0xf5e0:	pop	rbx
0xf5e1:	pop	rbp
0xf5e2:	ret	


0xb8eb:	cmp	rax, -1
0xb8ef:	je	0xb954


0xb954:	add	rsp, 8
0xb958:	pop	rbx
0xb959:	pop	rbp
0xb95a:	pop	r12
0xb95c:	pop	r13
0xb95e:	ret	


0xb8f1:	mov	edi, r12d
0xb8f4:	mov	r8, qword ptr [rbx]
0xb8f7:	mov	rsi, rax
0xb8fa:	and	di, 0x3ff
0xb8ff:	shl	rsi, 4
0xb903:	mov	ecx, edi
0xb905:	and	ecx, 0x3ff
0xb90b:	add	rsi, r8
0xb90e:	shl	ecx, 8
0xb911:	mov	edx, ecx
0xb913:	mov	ecx, dword ptr [rsi + 8]
0xb916:	and	ecx, 0xfffc00ff
0xb91c:	or	ecx, edx
0xb91e:	mov	dword ptr [rsi + 8], ecx
0xb921:	mov	edx, dword ptr [r8 + r13 + 8]
0xb926:	and	ecx, 0xfffc00ff
0xb92c:	shr	edx, 8
0xb92f:	or	edx, edi
0xb931:	and	edx, 0x3ff
0xb937:	shl	edx, 8
0xb93a:	or	edx, ecx
0xb93c:	mov	ecx, edx
0xb93e:	mov	dword ptr [rsi + 8], edx
0xb941:	shr	ecx, 0x10
0xb944:	mov	edx, ecx
0xb946:	or	edx, 4
0xb949:	mov	byte ptr [rsi + 0xa], dl
0xb94c:	mov	rdx, qword ptr [rbx + 0x20]
0xb950:	mov	qword ptr [rdx + rax*8], rbp
0xb954:	add	rsp, 8
0xb958:	pop	rbx
0xb959:	pop	rbp
0xb95a:	pop	r12
0xb95c:	pop	r13
0xb95e:	ret	


0xba67:	cmp	rax, -1
0xba6b:	mov	r13, rax
0xba6e:	je	0xba8b


0xba70:	add	rbx, qword ptr [r14 + 0x28]
0xba74:	mov	rsi, r13
0xba77:	mov	rdi, rbx
0xba7a:	call	0xaa10


0xba7f:	test	al, al
0xba81:	mov	r9, qword ptr [rsp]
0xba85:	jne	0xb97f


0xb97f:	mov	r8, qword ptr [r14]
0xb982:	mov	rax, r9
0xb985:	mov	rdi, qword ptr [r14 + 0x28]
0xb989:	shl	rax, 4
0xb98d:	mov	r12, r13
0xb990:	add	rax, r8
0xb993:	cmp	byte ptr [rax + 8], 4
0xb997:	je	0xbb50


0xbaad:	cmp	rax, -1
0xbab1:	mov	r13, rax
0xbab4:	je	0xba8b


0xbab6:	mov	rdi, qword ptr [r14 + 0x28]
0xbaba:	mov	rsi, r13
0xbabd:	add	rdi, rbx
0xbac0:	call	0xaa10


0xbac5:	test	al, al
0xbac7:	je	0xba8b


0xbac9:	mov	rcx, qword ptr [rsp + 8]
0xbace:	mov	r8d, ebp
0xbad1:	mov	rdx, r13
0xbad4:	mov	rsi, r15
0xbad7:	mov	rdi, r14
0xbada:	call	0xb960


0xbadf:	test	eax, eax
0xbae1:	je	0xba49


0xbae7:	jmp	0xba90


0xbb1a:	cmp	rax, -1
0xbb1e:	mov	r13, rax
0xbb21:	je	0xba8b


0xbb27:	add	rbx, qword ptr [r14 + 0x28]
0xbb2b:	mov	rsi, rax
0xbb2e:	mov	rdi, rbx
0xbb31:	call	0xaa10


0xbb36:	test	al, al
0xbb38:	je	0xba8b


0xbb3e:	mov	r9, r15
0xbb41:	jmp	0xb97f


0xbb83:	cmp	rax, -1
0xbb87:	mov	r13, rax
0xbb8a:	mov	r9, qword ptr [rsp]
0xbb8e:	je	0xba8b


0xbb94:	mov	rax, qword ptr [r14 + 0x18]
0xbb98:	mov	qword ptr [rsp], r9
0xbb9c:	mov	rcx, qword ptr [rax + r15]
0xbba0:	mov	qword ptr [rax + r12*8], rcx
0xbba4:	jmp	0xba70


0x1461e:	test	rax, rax
0x14621:	jne	0x145e8


0x14623:	add	r9, qword ptr [r12 + 0x30]
0x14628:	mov	rdi, qword ptr [r9 + 8]
0x1462c:	lea	rsi, [r9 + 0x10]
0x14630:	call	0xbf50


0x145e8:	add	rbp, 1
0x145ec:	cmp	rbp, qword ptr [rbx + 8]
0x145f0:	jge	0x14678


0x145f6:	mov	r10, qword ptr [rbx + 0x10]
0x145fa:	mov	r10, qword ptr [r10 + rbp*8]
0x145fe:	mov	rax, qword ptr [r12 + 0x38]
0x14603:	mov	rdx, r14
0x14606:	lea	r9, [r10 + r10*2]
0x1460a:	shl	r9, 3
0x1460e:	add	rax, r9
0x14611:	mov	rdi, qword ptr [rax + 8]
0x14615:	lea	rsi, [rax + 0x10]
0x14619:	call	0xbf50


0x14678:	mov	rbp, qword ptr [rsp + 0x30]
0x1467d:	jmp	0x1450d


0x14635:	test	rax, rax
0x14638:	jne	0x145e8


0x1463a:	mov	rcx, qword ptr [rsp + 0x10]
0x1463f:	mov	rdx, rbx
0x14642:	mov	rsi, r10
0x14645:	mov	rdi, r12
0x14648:	call	0xe7a0


0x1471e:	test	rax, rax
0x14721:	je	0x14837


0x14727:	sub	rsp, 8
0x1472b:	lea	rdx, [rbx + 0x30]
0x1472f:	lea	rsi, [rbx + 0x28]
0x14733:	push	r9
0x14735:	mov	rdi, qword ptr [rsp + 0x18]
0x1473a:	mov	rcx, r14
0x1473d:	mov	r9, r10
0x14740:	mov	r8, rbp
0x14743:	call	0xc200


0x14748:	test	al, al
0x1474a:	pop	rdx
0x1474b:	pop	rcx
0x1474c:	jne	0x14837


0x14752:	cmp	qword ptr [rsp + 0x60], 0
0x14758:	je	0x14868


0x14868:	mov	rax, qword ptr [rbx + 0x30]
0x1486c:	lea	rsi, [rbx + 0x20]
0x14870:	movdqa	xmm0, xmmword ptr [rbx]
0x14874:	mov	qword ptr [rsp + 0x90], rax
0x1487c:	mov	rax, qword ptr [rsp + 0x38]
0x14881:	movaps	xmmword ptr [rsp + 0x60], xmm0
0x14886:	lea	rdi, [rax + 0x20]
0x1488a:	movdqa	xmm0, xmmword ptr [rbx + 0x10]
0x1488f:	movaps	xmmword ptr [rsp + 0x70], xmm0
0x14894:	movdqa	xmm0, xmmword ptr [rbx + 0x20]
0x14899:	movaps	xmmword ptr [rsp + 0x80], xmm0
0x148a1:	call	0xd0b0


0x1475e:	mov	rax, qword ptr [rsp + 0x38]
0x14763:	mov	rsi, r13
0x14766:	mov	qword ptr [rsp + 0x70], r14
0x1476b:	mov	qword ptr [rsp + 0x78], rbp
0x14770:	lea	rdi, [rax + 0x20]
0x14774:	call	0xaa10


0x14779:	test	al, al
0x1477b:	je	0x148d4


0x148d4:	mov	eax, 0xc
0x148d9:	jmp	0x148ae


0x14781:	mov	rdi, qword ptr [rsp + 0x18]
0x14786:	mov	rax, qword ptr [rsp + 0x60]
0x1478b:	mov	rsi, qword ptr [rsp + 0x38]
0x14790:	mov	r15, qword ptr [rax + rdi]
0x14794:	mov	rdi, qword ptr [rsp + 8]
0x14799:	call	0x12630


0x148ae:	cmp	qword ptr [rsp + 0x60], 0
0x148b4:	je	0x14138


0x148a6:	test	eax, eax
0x148a8:	je	0x1475e


0xda5e:	test	rax, rax
0xda61:	je	0xda39


0xda39:	add	r15, 0x28
0xda3d:	cmp	byte ptr [r15 - 8], 0
0xda42:	je	0xd8fd


0xda63:	mov	r8, qword ptr [r15 + 0x18]
0xda67:	add	r8, r12
0xda6a:	mov	r14, r8
0xda6d:	sub	r14, qword ptr [r15 + 0x10]
0xda71:	cmp	r12, r14
0xda74:	jne	0xd978


0xda7a:	mov	rcx, qword ptr [r13 + 0x28]
0xda7e:	lea	rax, [r10 + r10*2]
0xda82:	mov	rsi, qword ptr [rsp]
0xda86:	mov	rdi, r9
0xda89:	lea	rax, [rcx + rax*8]
0xda8d:	mov	rax, qword ptr [rax + 0x10]
0xda91:	mov	r14, qword ptr [rax]
0xda94:	mov	rdx, r14
0xda97:	call	0xbf50


0xd978:	mov	rax, qword ptr [r13 + 0x18]
0xd97c:	mov	rcx, qword ptr [rax + r10*8]
0xd980:	mov	r10, qword ptr [rbx + 0xb8]
0xd987:	lea	rax, [r14*8]
0xd98f:	mov	qword ptr [rsp + 0x18], rax
0xd994:	add	r10, rax
0xd997:	mov	qword ptr [rsp + 8], rcx
0xd99c:	mov	r9, qword ptr [r10]
0xd99f:	test	r9, r9
0xd9a2:	je	0xdb30


0xdb30:	mov	edi, 8
0xdb35:	mov	qword ptr [rsp + 0x18], r10
0xdb3a:	mov	qword ptr [rsp + 0x50], 1
0xdb43:	mov	qword ptr [rsp + 0x58], 1
0xdb4c:	call	0x1f20


0xd9a8:	mov	rdi, qword ptr [r9 + 0x10]
0xd9ac:	lea	rsi, [r9 + 0x18]
0xd9b0:	mov	rdx, rcx
0xd9b3:	call	0xbf50


0xd9b8:	test	rax, rax
0xd9bb:	jne	0xda39


0xd9bd:	mov	rdi, qword ptr [rsp + 0x10]
0xd9c2:	lea	rsi, [r9 + 8]
0xd9c6:	call	0xd0b0


0xd9cb:	mov	rsi, qword ptr [rsp + 8]
0xd9d0:	mov	rdi, qword ptr [rsp + 0x10]
0xd9d5:	mov	dword ptr [rsp + 0x4c], eax
0xd9d9:	call	0xaa10


0xd9de:	mov	edx, dword ptr [rsp + 0x4c]
0xd9e2:	test	edx, edx
0xd9e4:	jne	0xdb86


0xd9ea:	cmp	al, 1
0xd9ec:	jne	0xdb86


0xdb86:	mov	rdi, qword ptr [rsp + 0x60]
0xdb8b:	call	0x1c60


0xd9f2:	mov	r10, qword ptr [rsp + 0x18]
0xd9f7:	add	r10, qword ptr [rbx + 0xb8]
0xd9fe:	mov	rdx, qword ptr [rsp + 0x10]
0xda03:	mov	rdi, qword ptr [rsp + 0x38]
0xda08:	mov	rsi, r13
0xda0b:	mov	qword ptr [rsp + 8], r10
0xda10:	call	0xd560


0xda15:	mov	r10, qword ptr [rsp + 8]
0xda1a:	mov	rdi, qword ptr [rsp + 0x60]
0xda1f:	mov	qword ptr [r10], rax
0xda22:	call	0x1c60


0xda9c:	test	rax, rax
0xda9f:	jne	0xda39


0xdaa1:	mov	edi, 8
0xdaa6:	mov	qword ptr [rsp + 0x50], 1
0xdaaf:	mov	qword ptr [rsp + 0x58], 1
0xdab8:	call	0x1f20


0xe958:	test	rax, rax
0xe95b:	jne	0xe982


0xe95d:	lea	rbx, [r14 + 0x10]
0xe961:	mov	rdi, qword ptr [r14 + 8]
0xe965:	mov	rsi, rbx
0xe968:	call	0xbf50


0xe982:	add	r9, 1
0xe986:	cmp	qword ptr [rbp + 8], r9
0xe98a:	jg	0xe940


0xe940:	mov	rax, qword ptr [rbp + 0x10]
0xe944:	mov	rdi, qword ptr [rsp + 0x28]
0xe949:	mov	rsi, r11
0xe94c:	mov	r10, qword ptr [rax + r9*8]
0xe950:	mov	rdx, r10
0xe953:	call	0xbf50


0xe96d:	sub	rax, 1
0xe971:	mov	rdx, rax
0xe974:	js	0xe982


0xe976:	lea	rdi, [r14 + 8]
0xe97a:	mov	rsi, rbx
0xe97d:	call	0xc0d0


0xe8ad:	mov	rcx, qword ptr [rsp + 8]
0xe8b2:	mov	r8, qword ptr [rsp]
0xe8b6:	cmp	qword ptr [rcx + 8], 1
0xe8bb:	jg	0xe808


0xe8c1:	test	rax, rax
0xe8c4:	jne	0xe850


0xe808:	test	rax, rax
0xe80b:	jne	0xe8e8


0xe8c6:	mov	rdi, qword ptr [r14 + 8]
0xe8ca:	lea	rsi, [r14 + 0x10]
0xe8ce:	mov	rdx, r8
0xe8d1:	call	0xbf50


0xe811:	mov	rdi, qword ptr [r14 + 8]
0xe815:	lea	rsi, [r14 + 0x10]
0xe819:	mov	rdx, r8
0xe81c:	call	0xbf50


0xe8e8:	mov	r15, qword ptr [r15 + 8]
0xe8ec:	test	r15, r15
0xe8ef:	jle	0xe850


0xe8f5:	mov	rdx, r15
0xe8f8:	mov	rsi, r11
0xe8fb:	mov	rdi, r10
0xe8fe:	call	0xbf50


0xe903:	test	rax, rax
0xe906:	jne	0xe850


0xe90c:	mov	rdi, qword ptr [r14 + 8]
0xe910:	lea	rsi, [r14 + 0x10]
0xe914:	call	0xbf50


0xe919:	test	rax, rax
0xe91c:	je	0xe850


0xe922:	jmp	0xe82a


0xe82a:	mov	rdx, qword ptr [r12 + 0x38]
0xe82f:	mov	rsi, qword ptr [rsp + 0x10]
0xe834:	mov	rdi, qword ptr [rsp + 0x18]
0xe839:	add	rdx, r9
0xe83c:	call	0xca60


0xe841:	test	eax, eax
0xe843:	jne	0xe9c0


0xe849:	mov	r10, qword ptr [rbp + 8]
0xe84d:	nop	dword ptr [rax]
0xe850:	add	rbx, 1
0xe854:	cmp	r10, rbx
0xe857:	jle	0xe930


0xe9c0:	mov	rdi, qword ptr [rsp + 0x30]
0xe9c5:	mov	dword ptr [rsp], eax
0xe9c8:	call	0x1c60


0xe821:	test	rax, rax
0xe824:	je	0xe8e8


0xe8d6:	test	rax, rax
0xe8d9:	jne	0xe82a


0xe8df:	jmp	0xe850


0xc000:	test	rax, rax
0xc003:	jne	0xc070


0xc005:	mov	rax, rbx
0xc008:	shl	rax, 4
0xc00c:	add	rax, qword ptr [r12]
0xc010:	movzx	edx, byte ptr [rax + 8]
0xc014:	cmp	edx, r13d
0xc017:	jne	0xc01e


0xc070:	xor	eax, eax
0xc072:	add	rsp, 8
0xc076:	pop	rbx
0xc077:	pop	rbp
0xc078:	pop	r12
0xc07a:	pop	r13
0xc07c:	pop	r14
0xc07e:	pop	r15
0xc080:	ret	


0xc019:	cmp	qword ptr [rax], r15
0xc01c:	je	0xc058


0xc01e:	mov	rsi, rbx
0xc021:	mov	rdi, rbp
0xc024:	call	0xaa10


0xc058:	cmp	r13d, 9
0xc05c:	jne	0xc070


0xc05e:	mov	rsi, rbx
0xc061:	mov	rdi, rbp
0xc064:	call	0xaa10


0xc069:	test	al, al
0xc06b:	je	0xc088


0xc088:	add	rsp, 8
0xc08c:	mov	eax, 0xc
0xc091:	pop	rbx
0xc092:	pop	rbp
0xc093:	pop	r12
0xc095:	pop	r13
0xc097:	pop	r14
0xc099:	pop	r15
0xc09b:	ret	


0xc029:	test	al, al
0xc02b:	je	0xc088


0xc02d:	lea	rbx, [rbx + rbx*2]
0xc031:	mov	rdx, qword ptr [r12 + 0x28]
0xc036:	shl	rbx, 3
0xc03a:	add	rdx, rbx
0xc03d:	mov	rax, qword ptr [rdx + 8]
0xc041:	test	rax, rax
0xc044:	je	0xc070


0xc046:	cmp	rax, 2
0xc04a:	mov	rdx, qword ptr [rdx + 0x10]
0xc04e:	je	0xc0a0


0xc0a0:	mov	rdx, qword ptr [rdx + 8]
0xc0a4:	mov	r8d, r13d
0xc0a7:	mov	rcx, r15
0xc0aa:	mov	rsi, rbp
0xc0ad:	mov	rdi, r12
0xc0b0:	call	0xbfd0


0xc050:	mov	rbx, qword ptr [rdx]
0xc053:	jmp	0xbff1


0xbff1:	mov	rdi, qword ptr [rbp + 8]
0xbff5:	mov	rdx, rbx
0xbff8:	mov	rsi, r14
0xbffb:	call	0xbf50


0xc0b5:	test	eax, eax
0xc0b7:	jne	0xc072


0xc0b9:	mov	rax, qword ptr [r12 + 0x28]
0xc0be:	mov	rdx, qword ptr [rax + rbx + 0x10]
0xc0c3:	jmp	0xc050


0xc072:	add	rsp, 8
0xc076:	pop	rbx
0xc077:	pop	rbp
0xc078:	pop	r12
0xc07a:	pop	r13
0xc07c:	pop	r14
0xc07e:	pop	r15
0xc080:	ret	


0xce57:	mov	rdi, r15
0xce5a:	mov	r8, r14
0xce5d:	xor	ecx, ecx
0xce5f:	xor	edx, edx
0xce61:	mov	rsi, rbx
0xce64:	mov	r12, rax
0xce67:	mov	byte ptr [rsp + 0x28], 9
0xce6c:	call	0xcc10


0xce71:	mov	r15, rax
0xce74:	jmp	0xcfcd


0xcfcd:	mov	rdi, qword ptr [rsp + 8]
0xcfd2:	mov	r8, r14
0xcfd5:	mov	rcx, r15
0xcfd8:	mov	rdx, rbp
0xcfdb:	mov	rsi, rbx
0xcfde:	mov	byte ptr [rsp + 0x28], 0x10
0xcfe3:	call	0xcc10


0xcfe8:	mov	r11, rax
0xcfeb:	jmp	0xcecc


0xcecc:	mov	rdi, qword ptr [rsp + 8]
0xced1:	mov	r8, r14
0xced4:	mov	rcx, r11
0xced7:	mov	rdx, r12
0xceda:	mov	rsi, rbx
0xcedd:	mov	byte ptr [rsp + 0x28], 0x10
0xcee2:	mov	qword ptr [rsp + 0x10], r11
0xcee7:	call	0xcc10


0xceec:	test	rax, rax
0xceef:	mov	rbp, rax
0xcef2:	je	0xcff0


0xcff0:	mov	rax, qword ptr [rsp + 0x18]
0xcff5:	xor	ebp, ebp
0xcff7:	mov	dword ptr [rax], 0xc
0xcffd:	jmp	0xcf4d


0xcef8:	mov	r11, qword ptr [rsp + 0x10]
0xcefd:	test	r11, r11
0xcf00:	je	0xcff0


0xcf06:	test	r12, r12
0xcf09:	je	0xcff0


0xcf0f:	test	r15, r15
0xcf12:	je	0xcff0


0xcf18:	mov	rax, qword ptr [r13 + 0x28]
0xcf1c:	mov	qword ptr [r15 + 0x28], rax
0xcf20:	mov	qword ptr [r12 + 0x28], rax
0xcf25:	movzx	eax, byte ptr [r13 + 0x32]
0xcf2a:	movzx	edx, byte ptr [r15 + 0x32]
0xcf2f:	and	eax, 8
0xcf32:	and	edx, 0xfffffff7
0xcf35:	mov	ecx, eax
0xcf37:	or	edx, ecx
0xcf39:	mov	byte ptr [r15 + 0x32], dl
0xcf3d:	movzx	eax, byte ptr [r12 + 0x32]
0xcf43:	and	eax, 0xfffffff7
0xcf46:	or	eax, ecx
0xcf48:	mov	byte ptr [r12 + 0x32], al
0xcf4d:	mov	rdi, qword ptr [rsp + 0x38]
0xcf52:	xor	rdi, qword ptr fs:[0x28]
0xcf5b:	mov	rax, rbp
0xcf5e:	jne	0xd002


0xceac:	mov	rdi, r15
0xceaf:	mov	r8, r14
0xceb2:	xor	ecx, ecx
0xceb4:	xor	edx, edx
0xceb6:	mov	rsi, rbx
0xceb9:	mov	r12, rax
0xcebc:	mov	byte ptr [rsp + 0x28], 9
0xcec1:	call	0xcc10


0xcec6:	mov	r11, rax
0xcec9:	mov	r15, rax
0xcecc:	mov	rdi, qword ptr [rsp + 8]
0xced1:	mov	r8, r14
0xced4:	mov	rcx, r11
0xced7:	mov	rdx, r12
0xceda:	mov	rsi, rbx
0xcedd:	mov	byte ptr [rsp + 0x28], 0x10
0xcee2:	mov	qword ptr [rsp + 0x10], r11
0xcee7:	call	0xcc10


0xcfa4:	xor	ecx, ecx
0xcfa6:	xor	edx, edx
0xcfa8:	mov	rdi, r15
0xcfab:	mov	r8, r14
0xcfae:	mov	rsi, rbx
0xcfb1:	mov	r12, rax
0xcfb4:	mov	byte ptr [rsp + 0x28], 9
0xcfb9:	call	0xcc10


0xcfbe:	test	rbp, rbp
0xcfc1:	mov	r15, rax
0xcfc4:	mov	r11, rax
0xcfc7:	je	0xcecc


0xcd33:	test	rax, rax
0xcd36:	mov	qword ptr [r14], rax
0xcd39:	je	0xcd8c


0xcd8c:	mov	rcx, qword ptr [rsp + 8]
0xcd91:	xor	rcx, qword ptr fs:[0x28]
0xcd9a:	jne	0xcdbc


0xcd3b:	mov	qword ptr [rax], rbp
0xcd3e:	mov	rbp, qword ptr [r14]
0xcd41:	or	byte ptr [rbp + 0x32], 4
0xcd45:	mov	rax, qword ptr [rbx + 8]
0xcd49:	test	rax, rax
0xcd4c:	je	0xcd60


0xcd9c:	add	rsp, 0x10
0xcda0:	pop	rbx
0xcda1:	pop	rbp
0xcda2:	pop	r12
0xcda4:	pop	r13
0xcda6:	pop	r14
0xcda8:	ret	


0xcdbc:	call	0x1db0


0xcd60:	xor	edx, edx
0xcd62:	jmp	0xcd6b


0xcd4e:	lea	r14, [rbp + 8]
0xcd52:	mov	rbx, rax
0xcd55:	jmp	0xcd20


0xcd6b:	mov	rax, qword ptr [rbx + 0x10]
0xcd6f:	test	rax, rax
0xcd72:	je	0xcd79


0xcd20:	lea	r8, [rbx + 0x28]
0xcd24:	xor	ecx, ecx
0xcd26:	xor	edx, edx
0xcd28:	mov	rsi, r12
0xcd2b:	mov	rdi, r13
0xcd2e:	call	0xcc10


0xcd79:	mov	rax, qword ptr [rbx]
0xcd7c:	mov	rbp, qword ptr [rbp]
0xcd80:	mov	rdx, rbx
0xcd83:	test	rax, rax
0xcd86:	jne	0xcd68


0xcd74:	cmp	rax, rdx
0xcd77:	jne	0xcdb0


0xcd88:	mov	rax, qword ptr [rsp]
0xcd8c:	mov	rcx, qword ptr [rsp + 8]
0xcd91:	xor	rcx, qword ptr fs:[0x28]
0xcd9a:	jne	0xcdbc


0xcd68:	mov	rbx, rax
0xcd6b:	mov	rax, qword ptr [rbx + 0x10]
0xcd6f:	test	rax, rax
0xcd72:	je	0xcd79


0xcdb0:	lea	r14, [rbp + 0x10]
0xcdb4:	mov	rbx, rax
0xcdb7:	jmp	0xcd20


0x136ff:	mov	rdx, qword ptr [rsp + 0x60]
0x13704:	mov	rdi, qword ptr [rsp + 0x80]
0x1370c:	mov	ecx, eax
0x1370e:	add	r12, qword ptr [rsp + 0x1d8]
0x13716:	mov	rsi, r13
0x13719:	call	0xd2a0


0x1371e:	mov	rdi, qword ptr [rsp + 0xf0]
0x13726:	mov	qword ptr [r12], rax
0x1372a:	call	0x1c60


0x137f4:	mov	rdi, qword ptr [rsp + 0x80]
0x137fc:	mov	rdx, qword ptr [rsp + 0x60]
0x13801:	mov	ecx, eax
0x13803:	mov	rsi, r13
0x13806:	call	0xd2a0


0x1380b:	mov	rdi, qword ptr [rsp + 0x1d8]
0x13813:	mov	qword ptr [r15], rax
0x13816:	cmp	qword ptr [rdi + rbp*8], 0
0x1381b:	jne	0x13742


0x13821:	mov	eax, dword ptr [rsp + 0xd4]
0x13828:	test	eax, eax
0x1382a:	je	0x13742


0x13830:	mov	rbx, qword ptr [rsp + 0xa0]
0x13838:	jmp	0x13940


0x13940:	test	rdi, rdi
0x13943:	mov	dword ptr [rsp + 0xd0], eax
0x1394a:	je	0x13a30


0x1379a:	mov	ecx, dword ptr [rsp + 0x10]
0x1379e:	shr	ecx, 8
0x137a1:	mov	edx, ecx
0x137a3:	and	dx, 0x3ff
0x137a8:	test	cl, 4
0x137ab:	jne	0x13608


0x137b1:	and	ecx, 8
0x137b4:	je	0x13619


0x13608:	test	al, 1
0x1360a:	je	0x1374a


0x13619:	test	dl, 0x20
0x1361c:	je	0x13626


0x137ba:	test	al, 1
0x137bc:	je	0x13619


0x13610:	and	ecx, 8
0x13613:	jne	0x1374a


0x13626:	and	edx, 0x80
0x1362c:	je	0x13640


0x1361e:	test	al, 2
0x13620:	je	0x1374a


0x137c2:	jmp	0x1374a


0x1362e:	test	al, 8
0x13630:	je	0x1374a


0x13869:	test	al, 1
0x1386b:	je	0x13920


0x13920:	mov	r13, qword ptr [rbp + r13*8]
0x13925:	jmp	0x13135


0x13871:	mov	r13, qword ptr [rbp + r13*8 + 0x800]
0x13879:	jmp	0x13135


0x13135:	cmp	qword ptr [rsp + 0x1d8], 0
0x1313e:	je	0x13154


0x13974:	test	al, 1
0x13976:	je	0x13ae5


0x13ae5:	test	eax, eax
0x13ae7:	je	0x12fee


0x1397c:	mov	r14, qword ptr [rbx + 0x50]
0x13980:	test	r14, r14
0x13983:	jne	0x12fee


0x13aed:	mov	edx, eax
0x13aef:	and	edx, 6
0x13af2:	cmp	edx, 6
0x13af5:	je	0x13f5f


0x13989:	mov	eax, dword ptr [rsp + 0xd0]
0x13990:	cmp	eax, 0xc
0x13993:	mov	dword ptr [rsp + 0x5c], eax
0x13997:	je	0x134c0


0x13f5f:	mov	r14, qword ptr [rbx + 0x60]
0x13f63:	jmp	0x13980


0x13afb:	test	al, 2
0x13afd:	je	0x13fb0


0x1399d:	lea	rcx, [rip + 0x930c]
0x139a4:	lea	rsi, [rip + 0x8d25]
0x139ab:	lea	rdi, [rip + 0x8dd2]
0x139b2:	mov	edx, 0x435
0x139b7:	call	0x1e30


0x13980:	test	r14, r14
0x13983:	jne	0x12fee


0x13fb0:	test	al, 4
0x13fb2:	je	0x12fee


0x13b03:	mov	r14, qword ptr [rbx + 0x58]
0x13b07:	jmp	0x13980


0x13fb8:	mov	rdx, qword ptr [r14 + 0x50]
0x13fbc:	mov	rdi, qword ptr [rsp + 0x28]
0x13fc1:	mov	ecx, eax
0x13fc3:	mov	rsi, rbx
0x13fc6:	call	0xd2a0


0x13fcb:	mov	r14, rax
0x13fce:	jmp	0x13980


0x12523:	mov	r8, qword ptr [rbx + 0xb8]
0x1252a:	mov	rdx, qword ptr [rsp]
0x1252e:	mov	ecx, eax
0x12530:	mov	rsi, r15
0x12533:	mov	rdi, r13
0x12536:	add	r8, rbp
0x12539:	mov	qword ptr [rsp + 8], r8
0x1253e:	call	0xd2a0


0x12543:	mov	r8, qword ptr [rsp + 8]
0x12548:	test	r14, r14
0x1254b:	mov	rbp, rax
0x1254e:	mov	qword ptr [r8], rax
0x12551:	je	0x12497


0x12557:	mov	rdi, qword ptr [rsp + 0x20]
0x1255c:	call	0x1c60


0x11f99:	mov	rsi, qword ptr [rsp + 0x60]
0x11f9e:	mov	ecx, eax
0x11fa0:	mov	rax, qword ptr [r14 + 0xb8]
0x11fa7:	lea	r10, [rbx*8]
0x11faf:	mov	qword ptr [rsp + 0x10], 0
0x11fb8:	lea	r11, [rax + r10]
0x11fbc:	mov	rax, qword ptr [rax + rsi]
0x11fc0:	mov	rdx, qword ptr [r11]
0x11fc3:	test	rax, rax
0x11fc6:	je	0x11fd1


0x11fd1:	test	rdx, rdx
0x11fd4:	je	0x122f0


0x11fc8:	mov	rax, qword ptr [rax + 0x10]
0x11fcc:	mov	qword ptr [rsp + 0x10], rax
0x11fd1:	test	rdx, rdx
0x11fd4:	je	0x122f0


0x122f0:	mov	rdx, qword ptr [rsp + 0x18]
0x122f5:	mov	rdi, qword ptr [rsp + 0x78]
0x122fa:	mov	rsi, rbp
0x122fd:	mov	qword ptr [rsp + 0x28], r11
0x12302:	call	0xd2a0


0x11fda:	mov	rsi, qword ptr [rdx + 0x50]
0x11fde:	mov	rdi, qword ptr [rsp + 0x68]
0x11fe3:	mov	rdx, qword ptr [rsp + 0x18]
0x11fe8:	mov	qword ptr [rsp + 0x30], r10
0x11fed:	mov	dword ptr [rsp + 0x28], ecx
0x11ff1:	call	0xd140


0x11ff6:	test	eax, eax
0x11ff8:	mov	dword ptr [rsp + 0x8c], eax
0x11fff:	mov	ecx, dword ptr [rsp + 0x28]
0x12003:	mov	r10, qword ptr [rsp + 0x30]
0x12008:	jne	0x12398


0x1200e:	add	r10, qword ptr [r14 + 0xb8]
0x12015:	mov	rdx, qword ptr [rsp + 0x68]
0x1201a:	mov	rsi, rbp
0x1201d:	mov	rdi, qword ptr [rsp + 0x78]
0x12022:	mov	qword ptr [rsp + 0x28], r10
0x12027:	call	0xd2a0


0x12398:	mov	rdi, qword ptr [rsp + 0xa0]
0x123a0:	call	0x1c60


0x1202c:	mov	r10, qword ptr [rsp + 0x28]
0x12031:	mov	rdi, qword ptr [rsp + 0xa0]
0x12039:	mov	qword ptr [r10], rax
0x1203c:	call	0x1c60


0x12307:	mov	r11, qword ptr [rsp + 0x28]
0x1230c:	mov	rdx, qword ptr [r14 + 0xb8]
0x12313:	mov	qword ptr [r11], rax
0x12316:	cmp	qword ptr [rdx + rbx*8], 0
0x1231b:	jne	0x12053


0x12321:	mov	eax, dword ptr [rsp + 0x8c]
0x12328:	test	eax, eax
0x1232a:	je	0x12053


0x12053:	cmp	qword ptr [rsp + 0x20], 0
0x12059:	jne	0x12078


0x12330:	jmp	0x11ec8


0x1205b:	mov	rax, qword ptr [rsp + 0x60]
0x12060:	mov	rbx, qword ptr [rsp + 0x10]
0x12065:	mov	rax, qword ptr [rdx + rax]
0x12069:	cmp	qword ptr [rax + 0x10], rbx
0x1206d:	jg	0x12338


0x12338:	mov	rax, qword ptr [rsp + 0x18]
0x1233d:	mov	rcx, qword ptr [rsp + 8]
0x12342:	mov	rdi, r14
0x12345:	lea	r8, [rax + 0x10]
0x12349:	lea	rbx, [rax + 8]
0x1234d:	mov	rdx, r8
0x12350:	mov	rsi, rbx
0x12353:	mov	qword ptr [rsp + 0x10], r8
0x12358:	call	0xdbe0


0x1235d:	test	eax, eax
0x1235f:	mov	dword ptr [rsp + 0x8c], eax
0x12366:	jne	0x11ec8


0x1236c:	mov	r8, qword ptr [rsp + 0x10]
0x12371:	mov	rsi, rbx
0x12374:	mov	rdi, r14
0x12377:	mov	rdx, r8
0x1237a:	call	0x11b50


0x1237f:	test	eax, eax
0x12381:	mov	dword ptr [rsp + 0x8c], eax
0x12388:	je	0x12078


0x1238e:	jmp	0x11ec8


0xe32a:	cmp	rbp, r12
0xe32d:	mov	dword ptr [rbx + 0x70], eax
0xe330:	mov	r8, qword ptr [rsp]
0xe334:	jne	0xe3b8


0xe33a:	cmp	rbp, r8
0xe33d:	jge	0xe3b8


0xe3b8:	mov	rax, qword ptr [rbx + 0x50]
0xe3bc:	mov	byte ptr [rbx + 0x8c], 0
0xe3c3:	add	rax, rbp
0xe3c6:	sub	rax, r15
0xe3c9:	mov	qword ptr [rbx + 0x58], rax
0xe3cd:	mov	rax, qword ptr [rbx + 0x60]
0xe3d1:	add	rax, rbp
0xe3d4:	sub	rax, r15
0xe3d7:	test	r12, r12
0xe3da:	mov	qword ptr [rbx + 0x68], rax
0xe3de:	jle	0xe403


0xe33f:	cmp	qword ptr [r14 + r12*8], rbp
0xe343:	jne	0xe3b8


0xe403:	cmp	r12, r8
0xe406:	jge	0xe638


0xe3e0:	cmp	qword ptr [r14 + r12*8 - 8], rbp
0xe3e5:	je	0xe3fb


0xe345:	mov	rdi, qword ptr [rbx + 0x10]
0xe349:	sub	r8, rbp
0xe34c:	lea	rdx, [r8*4]
0xe354:	lea	rsi, [rdi + rbp*4]
0xe358:	call	0x1ff0


0xe40c:	mov	rax, qword ptr [rbx + 0x10]
0xe410:	jmp	0xe425


0xe638:	jne	0xe42c


0xe3fb:	test	r13, r13
0xe3fe:	mov	r12, r13
0xe401:	jne	0xe3f0


0xe3e7:	jmp	0xe403


0x1ff0:	jmp	qword ptr [rip + 0x21ef3a]


0xe425:	cmp	dword ptr [rax + r12*4], -1
0xe42a:	je	0xe418


0xe42c:	mov	rdx, qword ptr [r14 + r12*8]
0xe430:	sub	rdx, rbp
0xe433:	cmp	rdx, 0
0xe437:	mov	qword ptr [rbx + 0x30], rdx
0xe43b:	je	0xe471


0xe3f0:	cmp	qword ptr [r14 + r13*8 - 8], rbp
0xe3f5:	jne	0xe403




0xe418:	add	r12, 1
0xe41c:	cmp	r12, r8
0xe41f:	je	0xe640


0xe471:	movzx	eax, byte ptr [rbx + 0x8b]
0xe478:	mov	qword ptr [rbx + 0x38], rdx
0xe47c:	test	al, al
0xe47e:	je	0xe0fa


0xe43d:	jle	0xe45f


0xe3f7:	sub	r13, 1
0xe3fb:	test	r13, r13
0xe3fe:	mov	r12, r13
0xe401:	jne	0xe3f0


0xe640:	mov	qword ptr [rbx + 0x30], 0
0xe648:	xor	edx, edx
0xe64a:	jmp	0xe471


0xe45f:	mov	rdi, qword ptr [rbx + 8]
0xe463:	mov	esi, 0xff
0xe468:	call	0x1e40


0xe43f:	mov	rax, qword ptr [rbx + 0x10]
0xe443:	lea	rcx, [rax + rdx*4]
0xe447:	nop	word ptr [rax + rax]
0xe450:	mov	dword ptr [rax], 0xffffffff
0xe456:	add	rax, 4
0xe45a:	cmp	rcx, rax
0xe45d:	jne	0xe450


0xe450:	mov	dword ptr [rax], 0xffffffff
0xe456:	add	rax, 4
0xe45a:	cmp	rcx, rax
0xe45d:	jne	0xe450


0xe668:	mov	dword ptr [rbx + 0x70], eax
0xe66b:	jmp	0xe2aa


0xe2aa:	cmp	r12, 0
0xe2ae:	jne	0xe6ca


0xe2b4:	movzx	eax, byte ptr [rbx + 0x8b]
0xe2bb:	mov	qword ptr [rbx + 0x38], r12
0xe2bf:	jmp	0xe47c


0xe6ca:	jle	0xe6e7


0xe6e7:	cmp	byte ptr [rbx + 0x8b], 0
0xe6ee:	jne	0xe748


0xe6cc:	mov	rax, qword ptr [rbx + 0x10]
0xe6d0:	lea	rdx, [rax + r12*4]
0xe6d4:	nop	dword ptr [rax]
0xe6d8:	mov	dword ptr [rax], 0xffffffff
0xe6de:	add	rax, 4
0xe6e2:	cmp	rdx, rax
0xe6e5:	jne	0xe6d8


0xe6f0:	mov	qword ptr [rbx + 0x38], r12
0xe6f4:	jmp	0xe0fa


0xe748:	mov	rdi, qword ptr [rbx + 8]
0xe74c:	mov	rdx, r12
0xe74f:	mov	esi, 0xff
0xe754:	call	0x1e40


0xe6d8:	mov	dword ptr [rax], 0xffffffff
0xe6de:	add	rax, 4
0xe6e2:	cmp	rdx, rax
0xe6e5:	jne	0xe6d8


0xe0ce:	mov	r8, qword ptr [rsp]
0xe0d2:	mov	dword ptr [rbx + 0x70], eax
0xe0d5:	sub	r8, rbp
0xe0d8:	cmp	dword ptr [rbx + 0x90], 1
0xe0df:	jg	0xe180


0xe0e5:	cmp	byte ptr [rbx + 0x8b], 0
0xe0ec:	jne	0xe490


0xe180:	mov	rdi, qword ptr [rbx + 0x10]
0xe184:	lea	rdx, [r8*4]
0xe18c:	lea	rsi, [rdi + rbp*4]
0xe190:	call	0x1ff0


0xe0f2:	sub	qword ptr [rbx + 0x38], rbp
0xe0f6:	mov	qword ptr [rbx + 0x30], r8
0xe0fa:	add	qword ptr [rbx + 8], rbp
0xe0fe:	mov	rax, qword ptr [rbx + 0x58]
0xe102:	sub	qword ptr [rbx + 0x68], rbp
0xe106:	mov	qword ptr [rbx + 0x28], r15
0xe10a:	sub	rax, rbp
0xe10d:	cmp	dword ptr [rbx + 0x90], 1
0xe114:	mov	qword ptr [rbx + 0x58], rax
0xe118:	jle	0xe1b8


0xe490:	mov	rdi, qword ptr [rbx + 8]
0xe494:	mov	rdx, r8
0xe497:	lea	rsi, [rdi + rbp]
0xe49b:	call	0x1ff0


0x11c5e:	mov	edx, ebp
0x11c60:	shr	edx, 8
0x11c63:	mov	ecx, edx
0x11c65:	and	cx, 0x3ff
0x11c6a:	test	dl, 4
0x11c6d:	jne	0x11bd8


0x11c73:	and	edx, 8
0x11c76:	je	0x11be1


0x11bd8:	test	al, 1
0x11bda:	je	0x11c00


0x11be1:	test	cl, 0x20
0x11be4:	je	0x11bea


0x11c7c:	test	al, 1
0x11c7e:	je	0x11be1


0x11bdc:	and	edx, 8
0x11bdf:	jne	0x11c00


0x11bea:	and	ecx, 0x80
0x11bf0:	je	0x11c90


0x11be6:	test	al, 2
0x11be8:	je	0x11c00


0x11c84:	jmp	0x11c00


0x11bf6:	test	al, 8
0x11bf8:	jne	0x11c90


0xde92:	mov	ecx, ebx
0xde94:	mov	edx, eax
0xde96:	and	cx, 0x3ff
0xde9b:	test	bl, 4
0xde9e:	je	0xdf08


0xdf08:	and	ebx, 8
0xdf0b:	je	0xdeac


0xdea0:	xor	eax, eax
0xdea2:	test	dl, 1
0xdea5:	je	0xdecc


0xdeac:	test	cl, 0x20
0xdeaf:	je	0xdeb8


0xdf0d:	test	al, 1
0xdf0f:	je	0xdeac


0xdea7:	and	ebx, 8
0xdeaa:	jne	0xdecc


0xdeb8:	shr	edx, 3
0xdebb:	mov	eax, 1
0xdec0:	and	edx, 1
0xdec3:	and	ecx, 0x80
0xdec9:	cmovne	eax, edx
0xdecc:	pop	rbx
0xdecd:	ret	


0xdeb1:	xor	eax, eax
0xdeb3:	test	dl, 2
0xdeb6:	je	0xdecc


0xdf11:	xor	eax, eax
0xdf13:	pop	rbx
0xdf14:	ret	


0x12595:	lea	rdx, [rsp + 0x10]
0x1259a:	mov	ecx, eax
0x1259c:	mov	rsi, r15
0x1259f:	mov	rdi, r13
0x125a2:	call	0xd2a0


0x125a7:	mov	rbp, rax
0x125aa:	mov	qword ptr [r14], rax
0x125ad:	jmp	0x12497


0x10a25:	cmp	r12, rbp
0x10a28:	mov	r13d, eax
0x10a2b:	je	0x10e03


0x10e03:	mov	edi, 8
0x10e08:	mov	qword ptr [rsp + 0x90], 1
0x10e14:	mov	qword ptr [rsp + 0x98], 1
0x10e20:	call	0x1f20


0x10a31:	mov	rbp, qword ptr [r14 + r12*8]
0x10a35:	test	rbp, rbp
0x10a38:	je	0x10a44


0x10a44:	pxor	xmm0, xmm0
0x10a48:	mov	qword ptr [rsp + 0xa0], 0
0x10a54:	movaps	xmmword ptr [rsp + 0x90], xmm0
0x10a5c:	cmp	r12, qword ptr [rsp + 0x40]
0x10a61:	jge	0x10d88


0x10a3a:	test	byte ptr [rbp + 0x68], 0x40
0x10a3e:	jne	0x10f60


0x10a67:	mov	ecx, dword ptr [r15 + 0xe0]
0x10a6e:	test	ecx, ecx
0x10a70:	js	0x10d88


0x10d88:	mov	rdi, qword ptr [rsp + 0xa0]
0x10d90:	call	0x1c60


0x10f60:	lea	rbx, [rsp + 0x90]
0x10f68:	lea	rsi, [rbp + 8]
0x10f6c:	mov	rdi, rbx
0x10f6f:	call	0xd0b0


0x10a76:	lea	rbx, [rsp + 0x90]
0x10a7e:	lea	rax, [r12*8 + 8]
0x10a86:	mov	qword ptr [rsp], r12
0x10a8a:	mov	qword ptr [rsp + 0x20], 0
0x10a93:	mov	qword ptr [rsp + 8], rbx
0x10a98:	lea	rbx, [rsp + 0xb0]
0x10aa0:	mov	qword ptr [rsp + 0x10], rax
0x10aa5:	mov	rax, qword ptr [r15 + 0xb8]
0x10aac:	mov	qword ptr [rsp + 0x18], rbx
0x10ab1:	lea	rbx, [rsp + 0x8c]
0x10ab9:	mov	qword ptr [rsp + 0x58], rbx
0x10abe:	mov	rcx, qword ptr [rsp + 0x10]
0x10ac3:	mov	qword ptr [rsp + 0x98], 0
0x10acf:	mov	rsi, qword ptr [rax + rcx]
0x10ad3:	test	rsi, rsi
0x10ad6:	je	0x10e98


0x10e98:	test	rbp, rbp
0x10e9b:	jne	0x10b02


0x10adc:	mov	rdi, qword ptr [rsp + 8]
0x10ae1:	add	rsi, 8
0x10ae5:	call	0xc470


0x10ea1:	mov	rax, qword ptr [rsp]
0x10ea5:	lea	rbx, [rax + 1]
0x10ea9:	mov	r12, rbx
0x10eac:	jmp	0x10d14


0x10b02:	cmp	qword ptr [rbp + 0x28], 0
0x10b07:	mov	rax, qword ptr [rsp + 0x18]
0x10b0c:	pxor	xmm0, xmm0
0x10b10:	mov	r12, qword ptr [r15 + 0x98]
0x10b17:	mov	dword ptr [rsp + 0x8c], 0
0x10b22:	mov	qword ptr [rax + 0x10], 0
0x10b2a:	movaps	xmmword ptr [rax], xmm0
0x10b2d:	jle	0x11060


0x10d14:	mov	edx, dword ptr [r15 + 0xa0]
0x10d1b:	mov	rsi, qword ptr [rsp]
0x10d1f:	mov	rdi, r15
0x10d22:	call	0xdd30


0x11060:	xor	edi, edi
0x11062:	jmp	0x10f18


0x10b33:	lea	rax, [r12 + 0xd8]
0x10b3b:	xor	ebx, ebx
0x10b3d:	mov	qword ptr [rsp + 0x28], rax
0x10b42:	jmp	0x10b89


0x10f18:	call	0x1c60


0x10b89:	mov	rax, qword ptr [rbp + 0x30]
0x10b8d:	mov	rdi, qword ptr [r12]
0x10b91:	mov	r14, qword ptr [rax + rbx*8]
0x10b95:	mov	r13, r14
0x10b98:	shl	r13, 4
0x10b9c:	lea	rsi, [rdi + r13]
0x10ba0:	test	byte ptr [rsi + 0xa], 0x10
0x10ba4:	je	0x10b48


0x10b48:	mov	rdx, qword ptr [rsp]
0x10b4c:	mov	rdi, r15
0x10b4f:	call	0xde20


0x10ba6:	mov	r8, qword ptr [rsp]
0x10baa:	mov	rsi, qword ptr [rsp + 0x28]
0x10baf:	mov	rcx, r15
0x10bb2:	mov	rdx, r14
0x10bb5:	call	0x10700


0x10bba:	cmp	eax, 1
0x10bbd:	jle	0x10e80


0x10e80:	test	eax, eax
0x10e82:	jne	0x10b58


0x10bc3:	cdqe	
0x10bc5:	add	rax, qword ptr [rsp]
0x10bc9:	mov	rdx, qword ptr [r12 + 0x18]
0x10bce:	lea	r13, [r14*8]
0x10bd6:	mov	rdx, qword ptr [rdx + r14*8]
0x10bda:	mov	rcx, rax
0x10bdd:	mov	qword ptr [rsp + 0x38], rax
0x10be2:	lea	r14, [rax*8]
0x10bea:	mov	rax, qword ptr [r15 + 0xb8]
0x10bf1:	mov	rsi, qword ptr [rax + rcx*8]
0x10bf5:	mov	qword ptr [rsp + 0xb8], 0
0x10c01:	test	rsi, rsi
0x10c04:	je	0x10c29


0x10e88:	mov	rsi, qword ptr [r12]
0x10e8c:	add	rsi, r13
0x10e8f:	jmp	0x10b48


0x10b58:	lea	r13, [r14*8]
0x10b60:	mov	rax, qword ptr [r12 + 0x18]
0x10b65:	mov	rdi, qword ptr [rsp + 8]
0x10b6a:	mov	rsi, qword ptr [rax + r13]
0x10b6e:	call	0xaa10


0x10c29:	mov	rdi, qword ptr [rsp + 0x18]
0x10c2e:	mov	rsi, rdx
0x10c31:	call	0xaa10


0x10c06:	mov	rdi, qword ptr [rsp + 0x18]
0x10c0b:	add	rsi, 8
0x10c0f:	mov	qword ptr [rsp + 0x50], rdx
0x10c14:	call	0xc470


0x10c36:	test	al, al
0x10c38:	je	0x10eb8


0x10eb8:	mov	rdi, qword ptr [rsp + 0xc0]
0x10ec0:	call	0x1c60


0x10c3e:	add	r14, qword ptr [r15 + 0xb8]
0x10c45:	mov	rdx, qword ptr [rsp + 0x18]
0x10c4a:	mov	rsi, r12
0x10c4d:	mov	rdi, qword ptr [rsp + 0x58]
0x10c52:	call	0xd560


0x10c57:	mov	rdx, qword ptr [rsp + 0x38]
0x10c5c:	mov	qword ptr [r14], rax
0x10c5f:	mov	rax, qword ptr [r15 + 0xb8]
0x10c66:	cmp	qword ptr [rax + rdx*8], 0
0x10c6b:	jne	0x10b60


0x10c71:	mov	edx, dword ptr [rsp + 0x8c]
0x10c78:	test	edx, edx
0x10c7a:	je	0x10b60


0x10b60:	mov	rax, qword ptr [r12 + 0x18]
0x10b65:	mov	rdi, qword ptr [rsp + 8]
0x10b6a:	mov	rsi, qword ptr [rax + r13]
0x10b6e:	call	0xaa10


0x10c80:	mov	rdi, qword ptr [rsp + 0xc0]
0x10c88:	call	0x1c60


0x10b73:	test	al, al
0x10b75:	je	0x10eb8


0x10b7b:	add	rbx, 1
0x10b7f:	cmp	rbx, qword ptr [rbp + 0x28]
0x10b83:	jge	0x10f10


0x10f10:	mov	rdi, qword ptr [rsp + 0xc0]
0x10f18:	call	0x1c60


0x10b54:	test	al, al
0x10b56:	je	0x10b7b


0x10c19:	test	eax, eax
0x10c1b:	mov	dword ptr [rsp + 0x8c], eax
0x10c22:	mov	rdx, qword ptr [rsp + 0x50]
0x10c27:	jne	0x10c80


0x10aea:	test	eax, eax
0x10aec:	mov	dword ptr [rsp + 0x88], eax
0x10af3:	jne	0x10ed0


0x10af9:	test	rbp, rbp
0x10afc:	je	0x10ca8


0x10ed0:	mov	rdi, qword ptr [rsp + 0xa0]
0x10ed8:	call	0x1c60


0x10ca8:	mov	rax, qword ptr [rsp]
0x10cac:	cmp	qword ptr [rsp + 0x98], 0
0x10cb5:	lea	rbx, [rax + 1]
0x10cb9:	mov	r12, rbx
0x10cbc:	je	0x10d14


0x10cbe:	mov	ecx, dword ptr [rsp + 0x110]
0x10cc5:	mov	rdx, qword ptr [rsp + 0x48]
0x10cca:	mov	rsi, qword ptr [rsp + 8]
0x10ccf:	mov	rdi, qword ptr [rsp + 0x30]
0x10cd4:	call	0xc900


0x10f74:	test	eax, eax
0x10f76:	mov	dword ptr [rsp + 0x88], eax
0x10f7d:	jne	0x10ee4


0x10f83:	test	byte ptr [rbp + 0x68], 0x40
0x10f87:	je	0x10a5c


0x10a5c:	cmp	r12, qword ptr [rsp + 0x40]
0x10a61:	jge	0x10d88


0x10f8d:	cmp	qword ptr [rsp + 0x98], 0
0x10f96:	je	0x10fc2


0x10fc2:	mov	rsi, qword ptr [rsp + 0x30]
0x10fc7:	lea	rdi, [rsp + 0x88]
0x10fcf:	mov	ecx, r13d
0x10fd2:	mov	rdx, rbx
0x10fd5:	call	0xd2a0


0x10f98:	mov	r8d, dword ptr [rsp + 0x110]
0x10fa0:	mov	rcx, qword ptr [rsp + 0x48]
0x10fa5:	mov	rdx, r12
0x10fa8:	mov	rsi, rbx
0x10fab:	mov	rdi, r15
0x10fae:	call	0xd840


0x10fb3:	test	eax, eax
0x10fb5:	mov	dword ptr [rsp + 0x88], eax
0x10fbc:	jne	0x10ed0


0x10fda:	test	rax, rax
0x10fdd:	mov	rbp, rax
0x10fe0:	je	0x11067


0x11067:	mov	esi, dword ptr [rsp + 0x88]
0x1106e:	test	esi, esi
0x11070:	je	0x10fe6


0x10fe6:	mov	rax, qword ptr [r15 + 0xb8]
0x10fed:	mov	qword ptr [rax + r12*8], rbp
0x10ff1:	jmp	0x10a5c


0x11076:	jmp	0x10ed0


0x10d27:	mov	rdx, qword ptr [rsp + 8]
0x10d2c:	mov	rsi, qword ptr [rsp + 0x30]
0x10d31:	lea	rdi, [rsp + 0x88]
0x10d39:	mov	ecx, eax
0x10d3b:	call	0xd2a0


0x10d40:	test	rax, rax
0x10d43:	mov	rbp, rax
0x10d46:	je	0x10f30


0x10f30:	mov	eax, dword ptr [rsp + 0x88]
0x10f37:	test	eax, eax
0x10f39:	jne	0x10ed0


0x10d4c:	mov	rax, qword ptr [r15 + 0xb8]
0x10d53:	mov	rdx, qword ptr [rsp + 0x10]
0x10d58:	mov	qword ptr [rsp + 0x20], 0
0x10d61:	mov	qword ptr [rax + rdx], rbp
0x10d65:	cmp	qword ptr [rsp + 0x40], rbx
0x10d6a:	jle	0x10d88


0x10f3b:	mov	rax, qword ptr [r15 + 0xb8]
0x10f42:	mov	rdx, qword ptr [rsp + 0x10]
0x10f47:	add	qword ptr [rsp + 0x20], 1
0x10f4d:	mov	qword ptr [rax + rdx], 0
0x10f55:	jmp	0x10d65


0x10d6c:	movsxd	rdx, dword ptr [r15 + 0xe0]
0x10d73:	add	qword ptr [rsp + 0x10], 8
0x10d79:	cmp	rdx, qword ptr [rsp + 0x20]
0x10d7e:	mov	qword ptr [rsp], rbx
0x10d82:	jge	0x10abe


0x10d65:	cmp	qword ptr [rsp + 0x40], rbx
0x10d6a:	jle	0x10d88


0x10abe:	mov	rcx, qword ptr [rsp + 0x10]
0x10ac3:	mov	qword ptr [rsp + 0x98], 0
0x10acf:	mov	rsi, qword ptr [rax + rcx]
0x10ad3:	test	rsi, rsi
0x10ad6:	je	0x10e98


0x10e00:	mov	r13d, eax
0x10e03:	mov	edi, 8
0x10e08:	mov	qword ptr [rsp + 0x90], 1
0x10e14:	mov	qword ptr [rsp + 0x98], 1
0x10e20:	call	0x1f20


0xdf4b:	test	rbx, rbx
0xdf4e:	jle	0xdff8


0xdff8:	pop	rbx
0xdff9:	xor	eax, eax
0xdffb:	pop	rbp
0xdffc:	pop	r12
0xdffe:	ret	


0xdf54:	mov	rdx, qword ptr [rbp + 0x98]
0xdf5b:	mov	r11d, eax
0xdf5e:	mov	ebp, eax
0xdf60:	and	eax, 1
0xdf63:	mov	r9, qword ptr [r12]
0xdf67:	xor	esi, esi
0xdf69:	and	ebp, 8
0xdf6c:	and	r11d, 2
0xdf70:	mov	r10d, eax
0xdf73:	mov	r8, qword ptr [rdx]
0xdf76:	jmp	0xdf89


0xdf89:	mov	rax, qword ptr [r9 + rsi*8]
0xdf8d:	mov	rdx, rax
0xdf90:	shl	rdx, 4
0xdf94:	add	rdx, r8
0xdf97:	mov	ecx, dword ptr [rdx + 8]
0xdf9a:	shr	ecx, 8
0xdf9d:	mov	edi, ecx
0xdf9f:	and	di, 0x3ff
0xdfa4:	cmp	byte ptr [rdx + 8], 2
0xdfa8:	jne	0xdf80


0xdfaa:	test	di, di
0xdfad:	je	0xdfd5


0xdf80:	add	rsi, 1
0xdf84:	cmp	rsi, rbx
0xdf87:	je	0xdff8


0xdfd5:	pop	rbx
0xdfd6:	pop	rbp
0xdfd7:	pop	r12
0xdfd9:	ret	


0xdfaf:	test	cl, 4
0xdfb2:	je	0xdfe0


0xdfe0:	and	ecx, 8
0xdfe3:	je	0xdfbe


0xdfb4:	test	r10d, r10d
0xdfb7:	je	0xdf80


0xdfbe:	test	dil, 0x20
0xdfc2:	je	0xdfc9


0xdfe5:	test	r10d, r10d
0xdfe8:	jne	0xdf80


0xdfb9:	and	ecx, 8
0xdfbc:	jne	0xdf80


0xdfc9:	and	edi, 0x80
0xdfcf:	je	0xdfd5


0xdfc4:	test	r11d, r11d
0xdfc7:	je	0xdf80


0xdfea:	test	dil, 0x20
0xdfee:	je	0xdfc9


0xdfd1:	test	ebp, ebp
0xdfd3:	je	0xdf80


0xdff0:	jmp	0xdfc4


0x13579:	test	rax, rax
0x1357c:	mov	r8, qword ptr [rsp + 0x10]
0x13581:	je	0x130c9


0x13587:	jmp	0x130a6


0x13b41:	mov	qword ptr [rsp + 0x1d0], rax
0x13b49:	jmp	0x13268


0x13268:	mov	r13, qword ptr [rsp + 0x1d0]
0x13270:	movabs	rsi, 0x1ffffffffffffffe
0x1327a:	cmp	qword ptr [rsp + 0x20], rsi
0x1327f:	mov	r15, qword ptr [rsp + 0x1b8]
0x13287:	ja	0x13eeb


0x1328d:	mov	rax, qword ptr [rsp + 0x20]
0x13292:	add	rax, 1
0x13296:	lea	rbx, [rax*8]
0x1329e:	mov	qword ptr [rsp + 8], rax
0x132a3:	mov	rdi, rbx
0x132a6:	call	0x1f20


0x13eeb:	mov	rdi, rbx
0x13eee:	mov	dword ptr [rsp + 0x5c], 0xc
0x13ef6:	jmp	0x134c8


0x1323c:	mov	r13, rax
0x1323f:	mov	qword ptr [rsp + 0x1d0], rax
0x13247:	mov	rax, qword ptr [rsp + 0x38]
0x1324c:	test	byte ptr [rax + 0xb0], 1
0x13253:	jne	0x13270


0x13255:	mov	rax, qword ptr [rsp + 0x38]
0x1325a:	cmp	qword ptr [rax + 0x98], 0
0x13262:	je	0x13bfc


0x13270:	movabs	rsi, 0x1ffffffffffffffe
0x1327a:	cmp	qword ptr [rsp + 0x20], rsi
0x1327f:	mov	r15, qword ptr [rsp + 0x1b8]
0x13287:	ja	0x13eeb


0x13f4c:	test	rax, rax
0x13f4f:	mov	qword ptr [rsp + 0x30], rax
0x13f54:	je	0x1303d


0x13f5a:	jmp	0x13ec7


0x121e0:	pop	rdx
0x121e1:	cmp	eax, 1
0x121e4:	pop	rcx
0x121e5:	mov	r11, qword ptr [rsp + 0x10]
0x121ea:	je	0x1225f


0x121ec:	test	eax, eax
0x121ee:	jne	0x11ec8


0x121f4:	mov	rax, qword ptr [r12 + 0x20]
0x121f9:	cmp	rax, qword ptr [r12 + 0x18]
0x121fe:	je	0x123d8


0x123d8:	lea	rdx, [rax + rax + 1]
0x123dd:	mov	rdi, qword ptr [r12 + 0x28]
0x123e2:	lea	rsi, [rdx*8]
0x123ea:	mov	qword ptr [rsp + 0x10], rdx
0x123ef:	call	0x1f90


0x12204:	mov	esi, 0x28
0x12209:	mov	edi, 1
0x1220e:	call	0x1ec0


0x119e5:	test	eax, eax
0x119e7:	pop	rdx
0x119e8:	pop	rcx
0x119e9:	je	0x11a00


0x11a00:	mov	rax, qword ptr [rbx + 0xc8]
0x11a07:	mov	rdx, qword ptr [rbx + 0xd0]
0x11a0e:	mov	r15, qword ptr [rbp + 8]
0x11a12:	mov	rcx, qword ptr [r13]
0x11a16:	mov	rdi, qword ptr [rbx + 0xd8]
0x11a1d:	cmp	rax, rdx
0x11a20:	mov	rsi, r15
0x11a23:	jge	0x11ac0


0x119eb:	add	rsp, 0x18
0x119ef:	pop	rbx
0x119f0:	pop	rbp
0x119f1:	pop	r12
0x119f3:	pop	r13
0x119f5:	pop	r14
0x119f7:	pop	r15
0x119f9:	ret	


0x11a29:	lea	rdx, [rax + rax*4]
0x11a2d:	shl	rdx, 3
0x11a31:	test	rax, rax
0x11a34:	jle	0x11a41


0x11ac0:	lea	rsi, [rdx + rdx*4]
0x11ac4:	mov	qword ptr [rsp + 8], rcx
0x11ac9:	shl	rsi, 4
0x11acd:	call	0x1f90


0x11a41:	add	rdi, rdx
0x11a44:	xor	edx, edx
0x11a46:	cmp	r15, rcx
0x11a49:	sete	dl
0x11a4c:	add	rax, 1
0x11a50:	mov	qword ptr [rdi], r14
0x11a53:	neg	edx
0x11a55:	mov	qword ptr [rdi + 8], r12
0x11a59:	mov	qword ptr [rdi + 0x10], rcx
0x11a5d:	mov	word ptr [rdi + 0x22], dx
0x11a61:	mov	qword ptr [rdi + 0x18], r15
0x11a65:	mov	qword ptr [rbx + 0xc8], rax
0x11a6c:	mov	byte ptr [rdi + 0x20], 0
0x11a70:	mov	rax, r15
0x11a73:	movsxd	rdx, dword ptr [rbx + 0xe0]
0x11a7a:	sub	rax, rcx
0x11a7d:	cmp	rdx, rax
0x11a80:	jge	0x11a8c


0x11a36:	lea	r8, [rdi + rdx - 0x28]
0x11a3b:	cmp	r12, qword ptr [r8 + 8]
0x11a3f:	je	0x11ab0


0x11a82:	sub	r15d, ecx
0x11a85:	mov	dword ptr [rbx + 0xe0], r15d
0x11a8c:	add	rsi, r12
0x11a8f:	sub	rsi, qword ptr [r13]
0x11a93:	add	rsp, 0x18
0x11a97:	mov	rdi, rbx
0x11a9a:	pop	rbx
0x11a9b:	pop	rbp
0x11a9c:	pop	r12
0x11a9e:	pop	r13
0x11aa0:	pop	r14
0x11aa2:	pop	r15
0x11aa4:	jmp	0xb5e0


0x11a8c:	add	rsi, r12
0x11a8f:	sub	rsi, qword ptr [r13]
0x11a93:	add	rsp, 0x18
0x11a97:	mov	rdi, rbx
0x11a9a:	pop	rbx
0x11a9b:	pop	rbp
0x11a9c:	pop	r12
0x11a9e:	pop	r13
0x11aa0:	pop	r14
0x11aa2:	pop	r15
0x11aa4:	jmp	0xb5e0


0x11ab0:	mov	byte ptr [r8 + 0x20], 1
0x11ab5:	jmp	0x11a41


0x11e1b:	cmp	eax, 1
0x11e1e:	mov	r8, qword ptr [r14 + 8]
0x11e22:	ja	0x11ec8


0x11e28:	add	rbp, 1
0x11e2c:	cmp	rbp, qword ptr [r13 + 0x20]
0x11e30:	mov	r11, r15
0x11e33:	mov	rbx, r12
0x11e36:	jge	0x120e8


0x120e8:	mov	rbx, r13
0x120eb:	mov	r13, r8
0x120ee:	lea	r11, [r15 + 1]
0x120f2:	cmp	qword ptr [rsp + 8], r11
0x120f7:	jl	0x11d89


0x1527e:	cdqe	
0x15280:	add	qword ptr [r14 + 0x48], rax
0x15284:	movzx	eax, byte ptr [r13 + 8]
0x15289:	movzx	edx, byte ptr [r13]
0x1528e:	cmp	al, 2
0x15290:	je	0x152e0


0x152e0:	mov	rbx, -2
0x152e7:	mov	rax, rbx
0x152ea:	pop	rbx
0x152eb:	pop	rbp
0x152ec:	pop	r12
0x152ee:	pop	r13
0x152f0:	pop	r14
0x152f2:	ret	


0x15292:	cmp	al, 0x18
0x15294:	je	0x152e7


0x152e7:	mov	rax, rbx
0x152ea:	pop	rbx
0x152eb:	pop	rbp
0x152ec:	pop	r12
0x152ee:	pop	r13
0x152f0:	pop	r14
0x152f2:	ret	


0x15296:	cmp	dl, 0x2c
0x15299:	je	0x152e7


0x1529b:	cmp	al, 1
0x1529d:	je	0x152a8


0x152a8:	lea	eax, [rdx - 0x30]
0x152ab:	cmp	al, 9
0x152ad:	ja	0x1529f


0x1529f:	mov	rbx, r12
0x152a2:	jmp	0x15270


0x152af:	cmp	rbx, -2
0x152b3:	je	0x1529f


0x15270:	mov	rdx, rbp
0x15273:	mov	rsi, r14
0x15276:	mov	rdi, r13
0x15279:	call	0x14b50


0x152b5:	cmp	rbx, -1
0x152b9:	je	0x152f8


0x152f8:	movzx	ebx, dl
0x152fb:	sub	ebx, 0x30
0x152fe:	movsxd	rbx, ebx
0x15301:	jmp	0x15270


0x152bb:	lea	rax, [rbx + rbx*4]
0x152bf:	lea	rbx, [rdx + rax*2]
0x152c3:	mov	eax, 0x8030
0x152c8:	cmp	rbx, 0x8030
0x152cf:	cmovg	rbx, rax
0x152d3:	sub	rbx, 0x30
0x152d7:	jmp	0x15270


0x1682e:	mov	edx, dword ptr [rbx]
0x16830:	mov	r14, rax
0x16833:	test	edx, edx
0x16835:	je	0x16840


0x16840:	lea	rax, [rsp + 0x20]
0x16845:	mov	qword ptr [rsp + 0x18], rax
0x1684a:	nop	word ptr [rax + rax]
0x16850:	movzx	eax, byte ptr [rbp + 8]
0x16854:	mov	edx, eax
0x16856:	and	edx, 0xfffffff7
0x16859:	cmp	dl, 2
0x1685c:	je	0x168f0


0x16837:	test	rax, rax
0x1683a:	je	0x1693a


0x168f0:	mov	rcx, qword ptr [rsp + 0x38]
0x168f5:	xor	rcx, qword ptr fs:[0x28]
0x168fe:	mov	rax, r14
0x16901:	jne	0x1696d


0x16862:	cmp	al, 9
0x16864:	jne	0x1686f


0x1693a:	xor	r14d, r14d
0x1693d:	jmp	0x168f0


0x16903:	add	rsp, 0x48
0x16907:	pop	rbx
0x16908:	pop	rbp
0x16909:	pop	r12
0x1690b:	pop	r13
0x1690d:	pop	r14
0x1690f:	pop	r15
0x16911:	ret	


0x1696d:	call	0x1db0


0x16866:	test	r12, r12
0x16869:	jne	0x168f0


0x1686f:	mov	rdi, qword ptr [rsp]
0x16873:	mov	r9, rbx
0x16876:	mov	r8, r12
0x16879:	mov	rcx, r15
0x1687c:	mov	rdx, rbp
0x1687f:	mov	rsi, r13
0x16882:	call	0x15310


0x16887:	mov	r9, rax
0x1688a:	mov	eax, dword ptr [rbx]
0x1688c:	test	eax, eax
0x1688e:	je	0x16899


0x16899:	test	r14, r14
0x1689c:	je	0x16918


0x16890:	test	r9, r9
0x16893:	je	0x16924


0x16918:	test	r14, r14
0x1691b:	cmove	r14, r9
0x1691f:	jmp	0x16850


0x1689e:	test	r9, r9
0x168a1:	je	0x16918


0x16924:	test	r14, r14
0x16927:	je	0x1693a


0x16850:	movzx	eax, byte ptr [rbp + 8]
0x16854:	mov	edx, eax
0x16856:	and	edx, 0xfffffff7
0x16859:	cmp	dl, 2
0x1685c:	je	0x168f0


0x168a3:	mov	rax, qword ptr [rsp + 0x10]
0x168a8:	mov	r8, qword ptr [rsp + 0x18]
0x168ad:	mov	rcx, r9
0x168b0:	mov	rdx, r14
0x168b3:	mov	qword ptr [rsp + 8], r9
0x168b8:	mov	byte ptr [rsp + 0x28], 0x10
0x168bd:	lea	rsi, [rax + 0x80]
0x168c4:	lea	rdi, [rax + 0x70]
0x168c8:	call	0xcc10


0x16929:	lea	rsi, [rip - 0xb260]
0x16930:	xor	edx, edx
0x16932:	mov	rdi, r14
0x16935:	call	0xa830


0x168cd:	test	rax, rax
0x168d0:	mov	r9, qword ptr [rsp + 8]
0x168d5:	je	0x16940


0x16940:	lea	rsi, [rip - 0xb277]
0x16947:	mov	rdi, r9
0x1694a:	xor	edx, edx
0x1694c:	call	0xa830


0x168d7:	mov	r14, rax
0x168da:	movzx	eax, byte ptr [rbp + 8]
0x168de:	mov	edx, eax
0x168e0:	and	edx, 0xfffffff7
0x168e3:	cmp	dl, 2
0x168e6:	jne	0x16862


0x169c8:	mov	edx, dword ptr [r13]
0x169cc:	mov	r15, rax
0x169cf:	test	edx, edx
0x169d1:	je	0x169dc


0x169dc:	lea	rax, [rsp + 0x30]
0x169e1:	mov	qword ptr [rsp + 8], rax
0x169e6:	jmp	0x16a74


0x169d3:	test	rax, rax
0x169d6:	je	0x16ac2


0x16a74:	cmp	byte ptr [rbp + 8], 0xa
0x16a78:	jne	0x16ac8


0x16ac2:	xor	r15d, r15d
0x16ac5:	nop	dword ptr [rax]
0x16ac8:	mov	rcx, qword ptr [rsp + 0x48]
0x16acd:	xor	rcx, qword ptr fs:[0x28]
0x16ad6:	mov	rax, r15
0x16ad9:	jne	0x16afa


0x16a7a:	mov	rdx, r14
0x16a7d:	mov	rsi, r12
0x16a80:	mov	rdi, rbp
0x16a83:	or	rdx, 0x800000
0x16a8a:	call	0x14b50


0x16ac8:	mov	rcx, qword ptr [rsp + 0x48]
0x16acd:	xor	rcx, qword ptr fs:[0x28]
0x16ad6:	mov	rax, r15
0x16ad9:	jne	0x16afa


0x16adb:	add	rsp, 0x58
0x16adf:	pop	rbx
0x16ae0:	pop	rbp
0x16ae1:	pop	r12
0x16ae3:	pop	r13
0x16ae5:	pop	r14
0x16ae7:	pop	r15
0x16ae9:	ret	


0x16afa:	call	0x1db0


0x16a8f:	cdqe	
0x16a91:	add	qword ptr [r12 + 0x48], rax
0x16a96:	movzx	eax, byte ptr [rbp + 8]
0x16a9a:	mov	edx, eax
0x16a9c:	and	edx, 0xfffffff7
0x16a9f:	cmp	dl, 2
0x16aa2:	jne	0x169f0


0x16aa8:	xor	ecx, ecx
0x16aaa:	jmp	0x16a4f


0x169f0:	cmp	al, 9
0x169f2:	jne	0x16a00


0x16a4f:	mov	r8, qword ptr [rsp + 8]
0x16a54:	lea	rsi, [rbx + 0x80]
0x16a5b:	lea	rdi, [rbx + 0x70]
0x16a5f:	mov	rdx, r15
0x16a62:	mov	byte ptr [rsp + 0x38], 0xa
0x16a67:	call	0xcc10


0x169f4:	cmp	qword ptr [rsp + 0x10], 0
0x169fa:	jne	0x16aa8


0x16a00:	mov	rax, qword ptr [rbx + 0xa8]
0x16a07:	mov	r8, qword ptr [rsp + 0x10]
0x16a0c:	mov	rcx, r14
0x16a0f:	mov	rsi, qword ptr [rsp + 0x28]
0x16a14:	mov	r9, r13
0x16a17:	mov	rdx, rbp
0x16a1a:	mov	rdi, r12
0x16a1d:	mov	qword ptr [rsp + 0x18], rax
0x16a22:	mov	rax, qword ptr [rsp + 0x20]
0x16a27:	mov	qword ptr [rbx + 0xa8], rax
0x16a2e:	call	0x167f0


0x16a33:	mov	rcx, rax
0x16a36:	mov	eax, dword ptr [r13]
0x16a3a:	test	eax, eax
0x16a3c:	je	0x16a43


0x16a43:	mov	rax, qword ptr [rsp + 0x18]
0x16a48:	or	qword ptr [rbx + 0xa8], rax
0x16a4f:	mov	r8, qword ptr [rsp + 8]
0x16a54:	lea	rsi, [rbx + 0x80]
0x16a5b:	lea	rdi, [rbx + 0x70]
0x16a5f:	mov	rdx, r15
0x16a62:	mov	byte ptr [rsp + 0x38], 0xa
0x16a67:	call	0xcc10


0x16a3e:	test	rcx, rcx
0x16a41:	je	0x16aac


0x16aac:	test	r15, r15
0x16aaf:	je	0x16ac2


0x16ab1:	lea	rsi, [rip - 0xb3e8]
0x16ab8:	xor	edx, edx
0x16aba:	mov	rdi, r15
0x16abd:	call	0xa830


0x16a6c:	test	rax, rax
0x16a6f:	mov	r15, rax
0x16a72:	je	0x16af0


0x16af0:	mov	dword ptr [r13], 0xc
0x16af8:	jmp	0x16ac8


0x1825d:	mov	rdi, r13
0x18260:	mov	rbx, rax
0x18263:	call	0x1c60


0x18593:	add	rsp, 0x18
0x18597:	ret	


0x185b0:	add	rsp, 0x18
0x185b4:	ret	


0x185d5:	add	rsp, 0x28
0x185d9:	ret	


0x185f7:	add	rsp, 0x28
0x185fb:	ret	


0x1ae81:	test	rbp, rbp
0x1ae84:	je	0x1aea6


0x1aea6:	add	rsp, 8
0x1aeaa:	pop	rbx
0x1aeab:	pop	rbp
0x1aeac:	pop	r12
0x1aeae:	pop	r13
0x1aeb0:	pop	r14
0x1aeb2:	pop	r15
0x1aeb4:	ret	


0x1ae86:	xor	ebx, ebx
0x1ae88:	nop	dword ptr [rax + rax]
0x1ae90:	mov	rdx, r15
0x1ae93:	mov	rsi, r14
0x1ae96:	mov	edi, r13d
0x1ae99:	call	qword ptr [r12 + rbx*8]


0xe4a0:	movzx	eax, byte ptr [rbx + 0x8b]
0xe4a7:	sub	qword ptr [rbx + 0x30], rbp
0xe4ab:	sub	qword ptr [rbx + 0x38], rbp
0xe4af:	jmp	0xe47c


0xe195:	mov	r8, qword ptr [rbx + 0x30]
0xe199:	sub	r8, rbp
0xe19c:	jmp	0xe0e5


0xe35d:	mov	rdi, qword ptr [rbx + 8]
0xe361:	mov	rdx, qword ptr [rbx + 0x30]
0xe365:	lea	rsi, [rdi + rbp]
0xe369:	sub	rdx, rbp
0xe36c:	call	0x1ff0


0xe371:	mov	rax, qword ptr [rbx + 0x30]
0xe375:	sub	qword ptr [rbx + 0x38], rbp
0xe379:	sub	rax, rbp
0xe37c:	test	rax, rax
0xe37f:	mov	qword ptr [rbx + 0x30], rax
0xe383:	jle	0xe3a8


0xe385:	mov	rcx, qword ptr [rbx + 0x18]
0xe389:	xor	eax, eax
0xe38b:	lea	rsi, [rcx + rbp*8]
0xe38f:	nop	
0xe390:	mov	rdx, qword ptr [rsi + rax*8]
0xe394:	sub	rdx, rbp
0xe397:	mov	qword ptr [rcx + rax*8], rdx
0xe39b:	add	rax, 1
0xe39f:	cmp	qword ptr [rbx + 0x30], rax
0xe3a3:	jg	0xe390


0xe390:	mov	rdx, qword ptr [rsi + rax*8]
0xe394:	sub	rdx, rbp
0xe397:	mov	qword ptr [rcx + rax*8], rdx
0xe39b:	add	rax, 1
0xe39f:	cmp	qword ptr [rbx + 0x30], rax
0xe3a3:	jg	0xe390


0x1ab13:	cmp	rax, -1
0x1ab17:	mov	rbp, rax
0x1ab1a:	je	0x1aba0


0x1aba0:	xor	ebx, ebx
0x1aba2:	jmp	0x1aaf7


0x1ab20:	mov	rdi, rbx
0x1ab23:	mov	rsi, rax
0x1ab26:	call	0x1a870


0x1aaf7:	add	rsp, 8
0x1aafb:	mov	rax, rbx
0x1aafe:	pop	rbx
0x1aaff:	pop	rbp
0x1ab00:	pop	r12
0x1ab02:	pop	r13
0x1ab04:	ret	


0x107de:	test	eax, eax
0x107e0:	je	0x107c0


0x107c0:	add	rbx, 1
0x107c4:	cmp	rbx, qword ptr [r13 + 0x48]
0x107c8:	jge	0x10888


0x10888:	mov	rsi, qword ptr [r13 + 0x40]
0x1088c:	test	rsi, rsi
0x1088f:	jle	0x10871


0x1048f:	cmp	rax, -1
0x10493:	je	0x104bf


0x104bf:	mov	rax, qword ptr [rsp + 0x30]
0x104c4:	test	byte ptr [rax + 0x1a], 0x40
0x104c8:	je	0x1045f


0x10495:	movzx	edx, byte ptr [rsp + 0x60]
0x1049a:	test	r13d, r13d
0x1049d:	mov	byte ptr [r12 + rdx], 1
0x104a2:	mov	qword ptr [rsp + 0x10], rdx
0x104a7:	je	0x104bf


0x1045f:	add	rbp, 1
0x10463:	cmp	rbp, qword ptr [r15 + 0x28]
0x10467:	jge	0x10514


0x104ca:	mov	rax, qword ptr [rsp + 8]
0x104cf:	cmp	dword ptr [rax + 0xb4], 1
0x104d6:	jle	0x1045f


0x104a9:	call	0x20d0


0x10514:	mov	ebx, r13d
0x10517:	mov	rbp, r12
0x1051a:	jmp	0x10297


0x104d8:	mov	rax, qword ptr [r15]
0x104db:	mov	edi, dword ptr [rax + rbx]
0x104de:	call	0x2040


0x2040:	jmp	qword ptr [rip + 0x21ef12]




0x512b:	jmp	0x50c0


0xb0a2:	test	eax, eax
0xb0a4:	jne	0xb198


0xb198:	call	0x1c50


0x104ae:	mov	rdx, qword ptr [rsp + 0x10]
0x104b3:	mov	rax, qword ptr [rax]
0x104b6:	movsxd	rax, dword ptr [rax + rdx*4]
0x104ba:	mov	byte ptr [r12 + rax], 1
0x104bf:	mov	rax, qword ptr [rsp + 0x30]
0x104c4:	test	byte ptr [rax + 0x1a], 0x40
0x104c8:	je	0x1045f


0x105a5:	mov	rax, qword ptr [rax]
0x105a8:	lea	rdx, [r12 + r14]
0x105ac:	movsxd	rax, dword ptr [rax + rdx*4]
0x105b0:	mov	byte ptr [rbp + rax], 1
0x105b5:	add	r14, 1
0x105b9:	cmp	r14, 0x40
0x105bd:	jne	0x10590


0x102f4:	mov	rax, qword ptr [rax]
0x102f7:	movsxd	rax, dword ptr [rax + r13*4]
0x102fb:	mov	byte ptr [rbp + rax], 1
0x10300:	mov	rax, qword ptr [rsp + 0x30]
0x10305:	test	byte ptr [rax + 0x1a], 0x40
0x10309:	je	0x10297


0x14d0d:	mov	r8d, dword ptr [rsp]
0x14d11:	test	eax, eax
0x14d13:	setne	al
0x14d16:	cmp	r8d, 0x5f
0x14d1a:	sete	dl
0x14d1d:	lea	ecx, [r12 - 0x27]
0x14d22:	or	eax, edx
0x14d24:	shl	eax, 6
0x14d27:	or	r13d, eax
0x14d2a:	cmp	cl, 0x56
0x14d2d:	mov	byte ptr [rbp + 0xa], r13b
0x14d31:	ja	0x15135


0x14d37:	lea	rdx, [rip + 0x7cc6]
0x14d3e:	movzx	ecx, cl
0x14d41:	movsxd	rax, dword ptr [rdx + rcx*4]
0x14d45:	add	rax, rdx
0x14d48:	jmp	rax


0x15135:	mov	eax, 2
0x1513a:	jmp	0x14c14


0xddff:	test	eax, eax
0xde01:	jne	0xde0c


0xde03:	cmp	ebx, 0x5f
0xde06:	jne	0xdd7b


0xde0c:	mov	eax, 1
0xde11:	jmp	0xdd82


0x14be5:	mov	ecx, dword ptr [rsp]
0x14be8:	test	eax, eax
0x14bea:	setne	al
0x14bed:	cmp	ecx, 0x5f
0x14bf0:	sete	cl
0x14bf3:	or	eax, ecx
0x14bf5:	shl	eax, 6
0x14bf8:	or	r13d, eax
0x14bfb:	mov	byte ptr [rbp + 0xa], r13b
0x14bff:	mov	rdx, qword ptr [rsp + 8]
0x14c04:	jmp	0x14c7c


0x14c7c:	sub	r12d, 0xa
0x14c80:	cmp	r12b, 0x73
0x14c84:	ja	0x14dbc


0x14c8a:	lea	rcx, [rip + 0x7ba3]
0x14c91:	movzx	r12d, r12b
0x14c95:	movsxd	rax, dword ptr [rcx + r12*4]
0x14c99:	add	rax, rcx
0x14c9c:	jmp	rax


0x14dbc:	mov	eax, 1
0x14dc1:	jmp	0x14c14


0x5175:	jmp	0x50c0


0xe759:	mov	r12, qword ptr [rbx + 0x30]
0xe75d:	jmp	0xe2b4


0xe46d:	mov	rdx, qword ptr [rbx + 0x30]
0xe471:	movzx	eax, byte ptr [rbx + 0x8b]
0xe478:	mov	qword ptr [rbx + 0x38], rdx
0xe47c:	test	al, al
0xe47e:	je	0xe0fa


0xb65d:	mov	qword ptr [rbx + 0xc0], rbp
0xb664:	jmp	0xb614


0x15145:	mov	rsi, qword ptr [rax]
0x15148:	movzx	edx, r12b
0x1514c:	movzx	eax, word ptr [rsi + rdx*2]
0x15150:	shr	ax, 3
0x15154:	and	eax, 1
0x15157:	cmp	r12b, 0x5f
0x1515b:	jmp	0x14d1a


0x14d1a:	sete	dl
0x14d1d:	lea	ecx, [r12 - 0x27]
0x14d22:	or	eax, edx
0x14d24:	shl	eax, 6
0x14d27:	or	r13d, eax
0x14d2a:	cmp	cl, 0x56
0x14d2d:	mov	byte ptr [rbp + 0xa], r13b
0x14d31:	ja	0x15135


0x14c53:	mov	rsi, qword ptr [rax]
0x14c56:	movzx	ecx, r12b
0x14c5a:	movzx	eax, word ptr [rsi + rcx*2]
0x14c5e:	shr	ax, 3
0x14c62:	and	eax, 1
0x14c65:	cmp	r12b, 0x5f
0x14c69:	sete	cl
0x14c6c:	or	eax, ecx
0x14c6e:	shl	eax, 6
0x14c71:	or	r13d, eax
0x14c74:	mov	byte ptr [rbp + 0xa], r13b
0x14c78:	mov	rdx, qword ptr [rsp]
0x14c7c:	sub	r12d, 0xa
0x14c80:	cmp	r12b, 0x73
0x14c84:	ja	0x14dbc


0x531f:	mov	edx, dword ptr [rsp + 0xc]
0x5323:	jmp	0x50a0


0x5350:	jmp	0x50c0


0x5341:	jmp	0x50c0


0x5332:	jmp	0x5039


0x5039:	mov	rdi, qword ptr [rip + 0x21c088]
0x5040:	mov	rax, qword ptr [rdi + 0x28]
0x5044:	cmp	rax, qword ptr [rdi + 0x30]
0x5048:	jae	0x5337


0x5187:	jmp	0x50c0


0x4f92:	jmp	0x4f7c


0x4f7c:	sub	rbx, 1
0x4f80:	jne	0x4f60


0x11dec:	test	eax, eax
0x11dee:	mov	r8, qword ptr [rsp + 0x10]
0x11df3:	mov	r11, qword ptr [rsp + 0x18]
0x11df8:	mov	r9, qword ptr [rsp + 0x20]
0x11dfd:	jne	0x122c8


0x5cad:	test	eax, eax
0x5caf:	jne	0x5c90


0x5c90:	mov	r14, qword ptr [rbx]
0x5c93:	add	rbp, r12
0x5c96:	add	rbx, 8
0x5c9a:	test	r14, r14
0x5c9d:	je	0x5cb1


0xf7bc:	lea	rdi, [rip + 0xcf90]
0xf7c3:	mov	qword ptr [r13], rax
0xf7c7:	mov	ecx, 6
0xf7cc:	mov	rsi, r12
0xf7cf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xf7cf:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xf7d1:	seta	al
0xf7d4:	sbb	al, 0
0xf7d6:	test	al, al
0xf7d8:	je	0xf848


0xf848:	call	0x20e0


0xf7da:	lea	rdi, [rip + 0xcf78]
0xf7e1:	mov	ecx, 6
0xf7e6:	mov	rsi, r12
0xf7e9:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xf7e9:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xf7eb:	seta	al
0xf7ee:	sbb	al, 0
0xf7f0:	test	al, al
0xf7f2:	jne	0xf8f8


0xf7f8:	call	0x20e0


0xf8f8:	lea	rdi, [rip + 0xce4e]
0xf8ff:	mov	ecx, 6
0xf904:	mov	rsi, r12
0xf907:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xf907:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xf909:	seta	al
0xf90c:	sbb	al, 0
0xf90e:	test	al, al
0xf910:	je	0xf97a


0xf97a:	call	0x20e0


0xf912:	lea	rdi, [rip + 0xce46]
0xf919:	mov	ecx, 6
0xf91e:	mov	rsi, r12
0xf921:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xf921:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xf923:	seta	al
0xf926:	sbb	al, 0
0xf928:	test	al, al
0xf92a:	jne	0xf9c2


0xf930:	call	0x20e0


0xf9c2:	lea	rdi, [rip + 0xcd78]
0xf9c9:	mov	ecx, 6
0xf9ce:	mov	rsi, r12
0xf9d1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xf9d1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xf9d3:	seta	al
0xf9d6:	sbb	al, 0
0xf9d8:	test	al, al
0xf9da:	je	0xfa83


0xfa83:	call	0x20e0


0xf9e0:	lea	rdi, [rip + 0xcd97]
0xf9e7:	mov	ecx, 6
0xf9ec:	mov	rsi, r12
0xf9ef:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xf9ef:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xf9f1:	seta	al
0xf9f4:	sbb	al, 0
0xf9f6:	test	al, al
0xf9f8:	jne	0xfb03


0xf9fe:	call	0x20e0


0xfb03:	lea	rdi, [rip + 0xcc5b]
0xfb0a:	mov	ecx, 6
0xfb0f:	mov	rsi, r12
0xfb12:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xfb12:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xfb14:	seta	al
0xfb17:	sbb	al, 0
0xfb19:	test	al, al
0xfb1b:	jne	0xfb9c


0xfb1d:	call	0x20e0


0xfb9c:	lea	rdi, [rip + 0xcba4]
0xfba3:	mov	ecx, 6
0xfba8:	mov	rsi, r12
0xfbab:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xfbab:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xfbad:	seta	al
0xfbb0:	sbb	al, 0
0xfbb2:	test	al, al
0xfbb4:	jne	0xfc02


0xfbb6:	call	0x20e0


0xfc02:	lea	rdi, [rip + 0xcb62]
0xfc09:	mov	ecx, 6
0xfc0e:	mov	rsi, r12
0xfc11:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xfc11:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xfc13:	seta	al
0xfc16:	sbb	al, 0
0xfc18:	test	al, al
0xfc1a:	jne	0xfd0e


0xfc20:	call	0x20e0


0xfd0e:	lea	rsi, [rip + 0xca5c]
0xfd15:	mov	rdi, r12
0xfd18:	call	0x1ed0


0x1ed0:	jmp	qword ptr [rip + 0x21efca]




0xfc25:	xor	ecx, ecx
0xfc27:	test	rbp, rbp
0xfc2a:	mov	rdx, qword ptr [rax]
0xfc2d:	mov	esi, 1
0xfc32:	jne	0xfcd4


0xfc38:	test	byte ptr [rdx + rcx*2], 1
0xfc3c:	je	0xfc4f


0xfcd4:	xor	eax, eax
0xfcd6:	mov	edi, 1
0xfcdb:	test	byte ptr [rdx + rax*2], 1
0xfcdf:	je	0xfcfd


0xfc4f:	add	rcx, 1
0xfc53:	cmp	rcx, 0x100
0xfc5a:	jne	0xfc38


0xfc3e:	mov	rax, rcx
0xfc41:	mov	rdi, rsi
0xfc44:	sar	rax, 6
0xfc48:	shl	rdi, cl
0xfc4b:	or	qword ptr [rbx + rax*8], rdi
0xfc4f:	add	rcx, 1
0xfc53:	cmp	rcx, 0x100
0xfc5a:	jne	0xfc38


0xfcfd:	add	rax, 1
0xfd01:	cmp	rax, 0x100
0xfd07:	jne	0xfcdb


0xfce1:	movzx	ecx, byte ptr [rbp + rax]
0xfce6:	mov	r14, rdi
0xfce9:	mov	rsi, rcx
0xfcec:	and	ecx, 0x3f
0xfcef:	shr	rsi, 3
0xfcf3:	shl	r14, cl
0xfcf6:	and	esi, 0x18
0xfcf9:	or	qword ptr [rbx + rsi], r14
0xfcfd:	add	rax, 1
0xfd01:	cmp	rax, 0x100
0xfd07:	jne	0xfcdb


0xfc5c:	jmp	0xf834


0xfd09:	jmp	0xf834


0xfcdb:	test	byte ptr [rdx + rax*2], 1
0xfcdf:	je	0xfcfd


0xf834:	xor	eax, eax
0xf836:	add	rsp, 0x10
0xf83a:	pop	rbx
0xf83b:	pop	rbp
0xf83c:	pop	r12
0xf83e:	pop	r13
0xf840:	pop	r14
0xf842:	ret	


0xfbbb:	xor	ecx, ecx
0xfbbd:	test	rbp, rbp
0xfbc0:	mov	rax, qword ptr [rax]
0xfbc3:	mov	edi, 1
0xfbc8:	jne	0xfef0


0xfbce:	test	byte ptr [rax + rcx*2 + 1], 1
0xfbd3:	je	0xfbe6


0xfef0:	xor	edx, edx
0xfef2:	test	byte ptr [rax + rdx*2 + 1], 1
0xfef7:	je	0xff15


0xfbe6:	add	rcx, 1
0xfbea:	cmp	rcx, 0x100
0xfbf1:	jne	0xfbce


0xfbd5:	mov	rdx, rcx
0xfbd8:	mov	rsi, rdi
0xfbdb:	sar	rdx, 6
0xfbdf:	shl	rsi, cl
0xfbe2:	or	qword ptr [rbx + rdx*8], rsi
0xfbe6:	add	rcx, 1
0xfbea:	cmp	rcx, 0x100
0xfbf1:	jne	0xfbce


0xff15:	add	rdx, 1
0xff19:	cmp	rdx, 0x100
0xff20:	jne	0xfef2


0xfef9:	movzx	ecx, byte ptr [rbp + rdx]
0xfefe:	mov	r9, rdi
0xff01:	mov	rsi, rcx
0xff04:	and	ecx, 0x3f
0xff07:	shr	rsi, 3
0xff0b:	shl	r9, cl
0xff0e:	and	esi, 0x18
0xff11:	or	qword ptr [rbx + rsi], r9
0xff15:	add	rdx, 1
0xff19:	cmp	rdx, 0x100
0xff20:	jne	0xfef2


0xfbf3:	jmp	0xf834


0xff22:	jmp	0xf834


0xfef2:	test	byte ptr [rax + rdx*2 + 1], 1
0xfef7:	je	0xff15


0xfb22:	xor	ecx, ecx
0xfb24:	test	rbp, rbp
0xfb27:	mov	rdx, qword ptr [rax]
0xfb2a:	mov	edi, 1
0xfb2f:	jne	0xff27


0xff27:	xor	eax, eax
0xff29:	test	byte ptr [rdx + rax*2 + 1], 0x40
0xff2e:	je	0xff4c


0xfb50:	add	rcx, 1
0xfb54:	cmp	rcx, 0x100
0xfb5b:	jne	0xfb38


0xfb3f:	mov	rax, rcx
0xfb42:	mov	rsi, rdi
0xfb45:	sar	rax, 6
0xfb49:	shl	rsi, cl
0xfb4c:	or	qword ptr [rbx + rax*8], rsi
0xfb50:	add	rcx, 1
0xfb54:	cmp	rcx, 0x100
0xfb5b:	jne	0xfb38


0xff4c:	add	rax, 1
0xff50:	cmp	rax, 0x100
0xff56:	jne	0xff29


0xff30:	movzx	ecx, byte ptr [rbp + rax]
0xff35:	mov	r14, rdi
0xff38:	mov	rsi, rcx
0xff3b:	and	ecx, 0x3f
0xff3e:	shr	rsi, 3
0xff42:	shl	r14, cl
0xff45:	and	esi, 0x18
0xff48:	or	qword ptr [rbx + rsi], r14
0xff4c:	add	rax, 1
0xff50:	cmp	rax, 0x100
0xff56:	jne	0xff29


0xfb5d:	jmp	0xf834


0xfb38:	test	byte ptr [rdx + rcx*2 + 1], 0x40
0xfb3d:	je	0xfb50


0xff58:	jmp	0xf834


0xff29:	test	byte ptr [rdx + rax*2 + 1], 0x40
0xff2e:	je	0xff4c


0xfa03:	xor	ecx, ecx
0xfa05:	test	rbp, rbp
0xfa08:	mov	rdx, qword ptr [rax]
0xfa0b:	mov	edi, 1
0xfa10:	jne	0xfeba


0xfeba:	xor	eax, eax
0xfebc:	test	byte ptr [rdx + rax*2 + 1], 8
0xfec1:	je	0xfedf


0xfa38:	add	rcx, 1
0xfa3c:	cmp	rcx, 0x100
0xfa43:	jne	0xfa20


0xfa27:	mov	rax, rcx
0xfa2a:	mov	rsi, rdi
0xfa2d:	sar	rax, 6
0xfa31:	shl	rsi, cl
0xfa34:	or	qword ptr [rbx + rax*8], rsi
0xfa38:	add	rcx, 1
0xfa3c:	cmp	rcx, 0x100
0xfa43:	jne	0xfa20


0xfedf:	add	rax, 1
0xfee3:	cmp	rax, 0x100
0xfee9:	jne	0xfebc


0xfec3:	movzx	ecx, byte ptr [rbp + rax]
0xfec8:	mov	r14, rdi
0xfecb:	mov	rsi, rcx
0xfece:	and	ecx, 0x3f
0xfed1:	shr	rsi, 3
0xfed5:	shl	r14, cl
0xfed8:	and	esi, 0x18
0xfedb:	or	qword ptr [rbx + rsi], r14
0xfedf:	add	rax, 1
0xfee3:	cmp	rax, 0x100
0xfee9:	jne	0xfebc


0xfa45:	jmp	0xf834


0xfa20:	test	byte ptr [rdx + rcx*2 + 1], 8
0xfa25:	je	0xfa38


0xfeeb:	jmp	0xf834


0xfebc:	test	byte ptr [rdx + rax*2 + 1], 8
0xfec1:	je	0xfedf


0xfa88:	xor	ecx, ecx
0xfa8a:	test	rbp, rbp
0xfa8d:	mov	rdx, qword ptr [rax]
0xfa90:	mov	edi, 1
0xfa95:	jne	0xfc68


0xfc68:	xor	eax, eax
0xfc6a:	test	byte ptr [rdx + rax*2 + 1], 4
0xfc6f:	je	0xfc8d


0xfab8:	add	rcx, 1
0xfabc:	cmp	rcx, 0x100
0xfac3:	jne	0xfaa0


0xfaa7:	mov	rax, rcx
0xfaaa:	mov	rsi, rdi
0xfaad:	sar	rax, 6
0xfab1:	shl	rsi, cl
0xfab4:	or	qword ptr [rbx + rax*8], rsi
0xfab8:	add	rcx, 1
0xfabc:	cmp	rcx, 0x100
0xfac3:	jne	0xfaa0


0xfc8d:	add	rax, 1
0xfc91:	cmp	rax, 0x100
0xfc97:	jne	0xfc6a


0xfc71:	movzx	ecx, byte ptr [rbp + rax]
0xfc76:	mov	r9, rdi
0xfc79:	mov	rsi, rcx
0xfc7c:	and	ecx, 0x3f
0xfc7f:	shr	rsi, 3
0xfc83:	shl	r9, cl
0xfc86:	and	esi, 0x18
0xfc89:	or	qword ptr [rbx + rsi], r9
0xfc8d:	add	rax, 1
0xfc91:	cmp	rax, 0x100
0xfc97:	jne	0xfc6a


0xfac5:	jmp	0xf834


0xfaa0:	test	byte ptr [rdx + rcx*2 + 1], 4
0xfaa5:	je	0xfab8


0xfc99:	jmp	0xf834


0xfc6a:	test	byte ptr [rdx + rax*2 + 1], 4
0xfc6f:	je	0xfc8d


0xf935:	xor	ecx, ecx
0xf937:	test	rbp, rbp
0xf93a:	mov	rdx, qword ptr [rax]
0xf93d:	mov	edi, 1
0xf942:	jne	0xfc9e


0xfc9e:	xor	eax, eax
0xfca0:	test	byte ptr [rdx + rax*2 + 1], 0x20
0xfca5:	je	0xfcc3


0xf968:	add	rcx, 1
0xf96c:	cmp	rcx, 0x100
0xf973:	jne	0xf950


0xf957:	mov	rax, rcx
0xf95a:	mov	rsi, rdi
0xf95d:	sar	rax, 6
0xf961:	shl	rsi, cl
0xf964:	or	qword ptr [rbx + rax*8], rsi
0xf968:	add	rcx, 1
0xf96c:	cmp	rcx, 0x100
0xf973:	jne	0xf950


0xfcc3:	add	rax, 1
0xfcc7:	cmp	rax, 0x100
0xfccd:	jne	0xfca0


0xfca7:	movzx	ecx, byte ptr [rbp + rax]
0xfcac:	mov	r9, rdi
0xfcaf:	mov	rsi, rcx
0xfcb2:	and	ecx, 0x3f
0xfcb5:	shr	rsi, 3
0xfcb9:	shl	r9, cl
0xfcbc:	and	esi, 0x18
0xfcbf:	or	qword ptr [rbx + rsi], r9
0xfcc3:	add	rax, 1
0xfcc7:	cmp	rax, 0x100
0xfccd:	jne	0xfca0


0xf975:	jmp	0xf834


0xf950:	test	byte ptr [rdx + rcx*2 + 1], 0x20
0xf955:	je	0xf968


0xfccf:	jmp	0xf834


0xfca0:	test	byte ptr [rdx + rax*2 + 1], 0x20
0xfca5:	je	0xfcc3


0xf97f:	xor	ecx, ecx
0xf981:	test	rbp, rbp
0xf984:	mov	rdx, qword ptr [rax]
0xf987:	mov	edi, 1
0xf98c:	jne	0xfb62


0xfb62:	xor	eax, eax
0xfb64:	nop	dword ptr [rax]
0xfb68:	test	byte ptr [rdx + rax*2 + 1], 2
0xfb6d:	je	0xfb8b


0xf9b0:	add	rcx, 1
0xf9b4:	cmp	rcx, 0x100
0xf9bb:	jne	0xf998


0xf99f:	mov	rax, rcx
0xf9a2:	mov	rsi, rdi
0xf9a5:	sar	rax, 6
0xf9a9:	shl	rsi, cl
0xf9ac:	or	qword ptr [rbx + rax*8], rsi
0xf9b0:	add	rcx, 1
0xf9b4:	cmp	rcx, 0x100
0xf9bb:	jne	0xf998


0xfb8b:	add	rax, 1
0xfb8f:	cmp	rax, 0x100
0xfb95:	jne	0xfb68


0xfb6f:	movzx	ecx, byte ptr [rbp + rax]
0xfb74:	mov	r14, rdi
0xfb77:	mov	rsi, rcx
0xfb7a:	and	ecx, 0x3f
0xfb7d:	shr	rsi, 3
0xfb81:	shl	r14, cl
0xfb84:	and	esi, 0x18
0xfb87:	or	qword ptr [rbx + rsi], r14
0xfb8b:	add	rax, 1
0xfb8f:	cmp	rax, 0x100
0xfb95:	jne	0xfb68


0xf9bd:	jmp	0xf834


0xf998:	test	byte ptr [rdx + rcx*2 + 1], 2
0xf99d:	je	0xf9b0


0xfb97:	jmp	0xf834


0xfb68:	test	byte ptr [rdx + rax*2 + 1], 2
0xfb6d:	je	0xfb8b


0xf7fd:	xor	ecx, ecx
0xf7ff:	test	rbp, rbp
0xf802:	mov	rdx, qword ptr [rax]
0xf805:	mov	edi, 1
0xf80a:	jne	0xfaca


0xf810:	test	byte ptr [rdx + rcx*2], 2
0xf814:	je	0xf827


0xfaca:	xor	eax, eax
0xfacc:	nop	dword ptr [rax]
0xfad0:	test	byte ptr [rdx + rax*2], 2
0xfad4:	je	0xfaf2


0xf827:	add	rcx, 1
0xf82b:	cmp	rcx, 0x100
0xf832:	jne	0xf810


0xf816:	mov	rax, rcx
0xf819:	mov	rsi, rdi
0xf81c:	sar	rax, 6
0xf820:	shl	rsi, cl
0xf823:	or	qword ptr [rbx + rax*8], rsi
0xf827:	add	rcx, 1
0xf82b:	cmp	rcx, 0x100
0xf832:	jne	0xf810


0xfaf2:	add	rax, 1
0xfaf6:	cmp	rax, 0x100
0xfafc:	jne	0xfad0


0xfad6:	movzx	ecx, byte ptr [rbp + rax]
0xfadb:	mov	r11, rdi
0xfade:	mov	rsi, rcx
0xfae1:	and	ecx, 0x3f
0xfae4:	shr	rsi, 3
0xfae8:	shl	r11, cl
0xfaeb:	and	esi, 0x18
0xfaee:	or	qword ptr [rbx + rsi], r11
0xfaf2:	add	rax, 1
0xfaf6:	cmp	rax, 0x100
0xfafc:	jne	0xfad0


0xfafe:	jmp	0xf834


0xfad0:	test	byte ptr [rdx + rax*2], 2
0xfad4:	je	0xfaf2


0xf84d:	xor	ecx, ecx
0xf84f:	test	rbp, rbp
0xf852:	mov	rdx, qword ptr [rax]
0xf855:	mov	edi, 1
0xf85a:	jne	0xfa4a


0xf860:	test	byte ptr [rdx + rcx*2], 8
0xf864:	je	0xf877


0xfa4a:	xor	eax, eax
0xfa4c:	nop	dword ptr [rax]
0xfa50:	test	byte ptr [rdx + rax*2], 8
0xfa54:	je	0xfa72


0xf877:	add	rcx, 1
0xf87b:	cmp	rcx, 0x100
0xf882:	jne	0xf860


0xf866:	mov	rax, rcx
0xf869:	mov	rsi, rdi
0xf86c:	sar	rax, 6
0xf870:	shl	rsi, cl
0xf873:	or	qword ptr [rbx + rax*8], rsi
0xf877:	add	rcx, 1
0xf87b:	cmp	rcx, 0x100
0xf882:	jne	0xf860


0xfa72:	add	rax, 1
0xfa76:	cmp	rax, 0x100
0xfa7c:	jne	0xfa50


0xfa56:	movzx	ecx, byte ptr [rbp + rax]
0xfa5b:	mov	r10, rdi
0xfa5e:	mov	rsi, rcx
0xfa61:	and	ecx, 0x3f
0xfa64:	shr	rsi, 3
0xfa68:	shl	r10, cl
0xfa6b:	and	esi, 0x18
0xfa6e:	or	qword ptr [rbx + rsi], r10
0xfa72:	add	rax, 1
0xfa76:	cmp	rax, 0x100
0xfa7c:	jne	0xfa50


0xf884:	jmp	0xf834


0xfa7e:	jmp	0xf834


0xfa50:	test	byte ptr [rdx + rax*2], 8
0xfa54:	je	0xfa72


0x5fa3:	test	rax, rax
0x5fa6:	je	0x5ffd


0x5ffd:	mov	qword ptr [rip + 0x21b89c], rbx
0x6004:	mov	qword ptr [rip + 0x21b0dd], rbx
0x600b:	pop	rbx
0x600c:	ret	


0x5fa8:	lea	r8, [rax + 1]
0x5fac:	mov	rdx, r8
0x5faf:	sub	rdx, rbx
0x5fb2:	cmp	rdx, 6
0x5fb6:	jle	0x5ffd


0x5fb8:	lea	rsi, [rax - 6]
0x5fbc:	lea	rdi, [rip + 0x15cc5]
0x5fc3:	mov	ecx, 7
0x5fc8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5fc8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5fca:	seta	dl
0x5fcd:	sbb	dl, 0
0x5fd0:	test	dl, dl
0x5fd2:	jne	0x5ffd


0x5fd4:	lea	rdi, [rip + 0x15cb5]
0x5fdb:	mov	ecx, 3
0x5fe0:	mov	rsi, r8
0x5fe3:	mov	rbx, r8
0x5fe6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5fe6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5fe8:	seta	dl
0x5feb:	sbb	dl, 0
0x5fee:	test	dl, dl
0x5ff0:	jne	0x5ffd


0x5ff2:	lea	rbx, [rax + 4]
0x5ff6:	mov	qword ptr [rip + 0x21b0c3], rbx
0x5ffd:	mov	qword ptr [rip + 0x21b89c], rbx
0x6004:	mov	qword ptr [rip + 0x21b0dd], rbx
0x600b:	pop	rbx
0x600c:	ret	


0x602a:	call	0x1c70


0x92dc:	lea	rsi, [rip + 0x12f52]
0x92e3:	xor	edi, edi
0x92e5:	mov	edx, 5
0x92ea:	call	0x1d80


0x93f1:	jmp	0x92dc


0xa31e:	test	eax, eax
0xa320:	je	0xa32a


0xa322:	test	dword ptr [rbx], 0x100
0xa328:	jne	0xa338


0xa338:	mov	rdi, rbx
0xa33b:	mov	edx, 1
0xa340:	xor	esi, esi
0xa342:	call	0xa350


0xb19d:	mov	rax, qword ptr [rax]
0xb1a0:	mov	rdx, qword ptr [r14 + 8]
0xb1a4:	mov	eax, dword ptr [rax + r12*4]
0xb1a8:	mov	byte ptr [rdx + r15], al
0xb1ac:	mov	rdx, qword ptr [r14 + 8]
0xb1b0:	mov	rax, qword ptr [r14 + 0x10]
0xb1b4:	movzx	edx, byte ptr [rdx + r15]
0xb1b9:	mov	dword ptr [rax + r15*4], edx
0xb1bd:	add	r15, 1
0xb1c1:	jmp	0xb16a


0xb16a:	cmp	rbx, r15
0xb16d:	jg	0xb080


0xb173:	jmp	0xb1e8


0xb080:	mov	rbp, qword ptr [r14 + 0x28]
0xb084:	mov	r13, r15
0xb087:	add	rbp, r15
0xb08a:	add	rbp, qword ptr [r14]
0xb08d:	movzx	r12d, byte ptr [rbp]
0xb092:	test	r12b, 0x80
0xb096:	jne	0xb0aa


0xac6f:	mov	rsi, qword ptr [rax]
0xac72:	mov	rcx, qword ptr [rbp + 8]
0xac76:	mov	edx, dword ptr [rsi + rdx*4]
0xac79:	mov	byte ptr [rcx + rbx], dl
0xac7c:	add	rbx, 1
0xac80:	cmp	r12, rbx
0xac83:	jne	0xac58


0xac98:	movzx	edx, byte ptr [rcx + rdx]
0xac9c:	jmp	0xac6f


0xac58:	mov	rdx, qword ptr [rbp]
0xac5c:	mov	rcx, qword ptr [rbp + 0x78]
0xac60:	add	rdx, rbx
0xac63:	add	rdx, qword ptr [rbp + 0x28]
0xac67:	test	rcx, rcx
0xac6a:	movzx	edx, byte ptr [rdx]
0xac6d:	jne	0xac98


0x11ad2:	test	rax, rax
0x11ad5:	mov	rcx, qword ptr [rsp + 8]
0x11ada:	je	0x11b30


0x11b30:	mov	rdi, qword ptr [rbx + 0xd8]
0x11b37:	call	0x1c60


0x11adc:	mov	rsi, qword ptr [rbx + 0xc8]
0x11ae3:	mov	rdx, qword ptr [rbx + 0xd0]
0x11aea:	mov	qword ptr [rbx + 0xd8], rax
0x11af1:	mov	qword ptr [rsp + 8], rcx
0x11af6:	lea	rsi, [rsi + rsi*4]
0x11afa:	lea	rdx, [rdx + rdx*4]
0x11afe:	lea	rdi, [rax + rsi*8]
0x11b02:	shl	rdx, 3
0x11b06:	xor	esi, esi
0x11b08:	call	0x1e40


0x11b0d:	shl	qword ptr [rbx + 0xd0], 1
0x11b14:	mov	rax, qword ptr [rbx + 0xc8]
0x11b1b:	mov	rdi, qword ptr [rbx + 0xd8]
0x11b22:	mov	rsi, qword ptr [rbp + 8]
0x11b26:	mov	rcx, qword ptr [rsp + 8]
0x11b2b:	jmp	0x11a29


0x123f4:	test	rax, rax
0x123f7:	je	0x122b9


0x122b9:	mov	eax, 0xc
0x122be:	jmp	0x11ec8


0x123fd:	mov	rdx, qword ptr [rsp + 0x10]
0x12402:	mov	qword ptr [r12 + 0x28], rax
0x12407:	mov	qword ptr [r12 + 0x18], rdx
0x1240c:	jmp	0x12204


0xb4f4:	test	rax, rax
0xb4f7:	je	0xb5b8


0xb4fd:	mov	qword ptr [rbx + 0xb8], rax
0xb504:	cmp	byte ptr [rbx + 0x88], 0
0xb50b:	mov	eax, dword ptr [rbx + 0x90]
0xb511:	je	0xb530


0xdcf5:	test	rax, rax
0xdcf8:	mov	r9, rax
0xdcfb:	mov	rcx, qword ptr [rsp + 8]
0xdd00:	je	0xdcd1


0xdcd1:	mov	eax, 0xc
0xdcd6:	jmp	0xdcc2


0xdd02:	mov	qword ptr [r15 + 0xf8], rax
0xdd09:	mov	rax, qword ptr [rsp + 0x10]
0xdd0e:	mov	r8, qword ptr [r15 + 0xe8]
0xdd15:	mov	qword ptr [r15 + 0xf0], rax
0xdd1c:	jmp	0xdc63


0xdcc2:	add	rsp, 0x28
0xdcc6:	pop	rbx
0xdcc7:	pop	rbp
0xdcc8:	pop	r12
0xdcca:	pop	r13
0xdccc:	pop	r14
0xdcce:	pop	r15
0xdcd0:	ret	


0xab23:	test	rax, rax
0xab26:	je	0xab35


0xab35:	xor	eax, eax
0xab37:	jmp	0xaa3e


0xab28:	mov	qword ptr [rbx + 0x10], rax
0xab2c:	mov	rsi, qword ptr [rbx + 8]
0xab30:	jmp	0xaa89


0xc5ff:	test	rax, rax
0xc602:	je	0xc644


0xc644:	mov	eax, 0xc
0xc649:	jmp	0xc55c


0xc604:	mov	qword ptr [rbx + 0x10], rax
0xc608:	mov	qword ptr [rbx], rbp
0xc60b:	mov	rax, qword ptr [rbx + 8]
0xc60f:	mov	rdx, qword ptr [r12 + 8]
0xc614:	jmp	0xc4a4


0xc55c:	pop	rbx
0xc55d:	pop	rbp
0xc55e:	pop	r12
0xc560:	ret	


0xcbe0:	test	rax, rax
0xcbe3:	mov	rdi, rax
0xcbe6:	je	0xcc01


0xcc01:	mov	eax, 0xc
0xcc06:	jmp	0xcbbc


0xcbe8:	mov	qword ptr [rbx + 0x10], rax
0xcbec:	mov	qword ptr [rbx], r13
0xcbef:	mov	rcx, qword ptr [rbx + 8]
0xcbf3:	mov	r9, qword ptr [rbp + 8]
0xcbf7:	mov	r11, qword ptr [r12 + 8]
0xcbfc:	jmp	0xcaab


0xcbbc:	add	rsp, 8
0xcbc0:	pop	rbx
0xcbc1:	pop	rbp
0xcbc2:	pop	r12
0xcbc4:	pop	r13
0xcbc6:	ret	


0x11036:	test	rax, rax
0x11039:	je	0x1107b


0x1103b:	mov	rcx, qword ptr [rsp + 0x60]
0x11040:	lea	rdx, [r12*8]
0x11048:	lea	rdi, [rax + r13*8]
0x1104c:	xor	esi, esi
0x1104e:	mov	qword ptr [rcx + 0x10], rax
0x11052:	mov	qword ptr [rcx + 8], r14
0x11056:	call	0x1e40


0x1105b:	jmp	0x109dc


0xa935:	test	rax, rax
0xa938:	je	0xa990


0xa93a:	mov	rdi, qword ptr [rbx + 0x18]
0xa93e:	mov	qword ptr [rbx + 0x10], rax
0xa942:	test	rdi, rdi
0xa945:	je	0xa95d


0xa947:	lea	rsi, [rbp*8]
0xa94f:	call	0x1f90


0xa954:	test	rax, rax
0xa957:	je	0xa990


0xa959:	mov	qword ptr [rbx + 0x18], rax
0xa95d:	cmp	byte ptr [rbx + 0x8b], 0
0xa964:	jne	0xa978


0xa984:	test	rax, rax
0xa987:	je	0xa990


0xa989:	mov	qword ptr [rbx + 8], rax
0xa98d:	jmp	0xa966


0xb7ec:	test	rax, rax
0xb7ef:	je	0xb8b2


0xb7f5:	mov	r15, rbp
0xb7f8:	mov	rdi, qword ptr [rbx + 0x18]
0xb7fc:	mov	qword ptr [rbx], rax
0xb7ff:	shl	r15, 4
0xb803:	mov	rsi, r15
0xb806:	call	0x1f90


0xb80b:	mov	rdi, qword ptr [rbx + 0x20]
0xb80f:	mov	rsi, r15
0xb812:	lea	r15, [r13 + rbp*4]
0xb817:	mov	r12, rax
0xb81a:	shl	r15, 3
0xb81e:	call	0x1f90


0xb823:	mov	rdi, qword ptr [rbx + 0x28]
0xb827:	mov	rsi, r15
0xb82a:	mov	qword ptr [rsp], rax
0xb82e:	call	0x1f90


0xb833:	mov	rdi, qword ptr [rbx + 0x30]
0xb837:	mov	rsi, r15
0xb83a:	mov	rbp, rax
0xb83d:	call	0x1f90


0xb842:	test	r12, r12
0xb845:	mov	rcx, qword ptr [rsp]
0xb849:	je	0xb880


0xb880:	mov	rdi, r12
0xb883:	mov	qword ptr [rsp + 8], rax
0xb888:	mov	qword ptr [rsp], rcx
0xb88c:	call	0x1c60


0xb84b:	test	rcx, rcx
0xb84e:	je	0xb880


0xb850:	test	rbp, rbp
0xb853:	je	0xb880


0xb855:	test	rax, rax
0xb858:	mov	rdx, qword ptr [rsp + 8]
0xb85d:	je	0xb880


0xb85f:	mov	qword ptr [rbx + 0x18], r12
0xb863:	mov	qword ptr [rbx + 0x20], rcx
0xb867:	mov	qword ptr [rbx + 0x28], rbp
0xb86b:	mov	qword ptr [rbx + 0x30], rax
0xb86f:	mov	qword ptr [rbx + 8], r13
0xb873:	mov	rsi, qword ptr [rbx + 0x10]
0xb877:	jmp	0xb71d


0xb71d:	mov	rax, rsi
0xb720:	mov	ecx, edx
0xb722:	shl	rax, 4
0xb726:	add	rax, qword ptr [rbx]
0xb729:	and	ecx, 0xfffc00ff
0xb72f:	mov	qword ptr [rax + 8], rdx
0xb733:	mov	dword ptr [rax + 8], ecx
0xb736:	xor	ecx, ecx
0xb738:	cmp	dl, 6
0xb73b:	mov	qword ptr [rax], r14
0xb73e:	sete	cl
0xb741:	cmp	dl, 5
0xb744:	jne	0xb752


0xf8d7:	test	rax, rax
0xf8da:	je	0xfbf8


0xfbf8:	mov	eax, 0xc
0xfbfd:	jmp	0xf836


0xf8e0:	mov	rdx, qword ptr [rsp]
0xf8e4:	mov	r8, qword ptr [rsp + 8]
0xf8e9:	mov	qword ptr [rdx], rax
0xf8ec:	mov	qword ptr [r8], r14
0xf8ef:	mov	rcx, qword ptr [r13]
0xf8f3:	jmp	0xf7a8


0xf836:	add	rsp, 0x10
0xf83a:	pop	rbx
0xf83b:	pop	rbp
0xf83c:	pop	r12
0xf83e:	pop	r13
0xf840:	pop	r14
0xf842:	ret	


0x9936:	test	rax, rax
0x9939:	jne	0x9940


0x993b:	test	rbx, rbx
0x993e:	jne	0x9951


0x9940:	pop	rbx
0x9941:	ret	


0x9951:	call	0x9b10


0xa9ef:	test	rax, rax
0xa9f2:	je	0xaa00


0xaa00:	xor	eax, eax
0xaa02:	jmp	0xa9ca


0xa9f4:	mov	qword ptr [rbx + 0x10], rax
0xa9f8:	mov	rsi, qword ptr [rbx + 8]
0xa9fc:	jmp	0xa9b9


0xa9ca:	add	rsp, 8
0xa9ce:	pop	rbx
0xa9cf:	pop	rbp
0xa9d0:	ret	


0x17973:	test	rax, rax
0x17976:	mov	rbx, rax
0x17979:	je	0x17b11


0x17b11:	mov	eax, 0xc
0x17b16:	jmp	0x16e9c


0x1797f:	mov	rax, qword ptr [rsp + 8]
0x17984:	mov	qword ptr [rax + 8], 0xe8
0x1798c:	mov	qword ptr [rax], rbx
0x1798f:	jmp	0x16b72


0x16e9c:	mov	rbx, qword ptr [rsp + 0x118]
0x16ea4:	xor	rbx, qword ptr fs:[0x28]
0x16ead:	jne	0x17bf0


0x16eb3:	add	rsp, 0x128
0x16eba:	pop	rbx
0x16ebb:	pop	rbp
0x16ebc:	pop	r12
0x16ebe:	pop	r13
0x16ec0:	pop	r14
0x16ec2:	pop	r15
0x16ec4:	ret	


0x17bf0:	call	0x1db0


0xcbba:	xor	eax, eax
0xcbbc:	add	rsp, 8
0xcbc0:	pop	rbx
0xcbc1:	pop	rbp
0xcbc2:	pop	r12
0xcbc4:	pop	r13
0xcbc6:	ret	


0xc5da:	xor	eax, eax
0xc5dc:	jmp	0xc55c


0xc5b5:	jmp	0xc509


0xc63f:	jmp	0xc55a


0x111ad:	lea	rax, [rbp - 0x70]
0x111b1:	mov	rcx, qword ptr [r13]
0x111b5:	mov	qword ptr [rbp - 0xa8], rax
0x111bc:	add	rax, 0x10
0x111c0:	mov	qword ptr [rbp - 0x78], rcx
0x111c4:	mov	qword ptr [rbp - 0xc8], rax
0x111cb:	lea	rax, [rbp - 0x78]
0x111cf:	mov	qword ptr [rbp - 0xb0], rax
0x111d6:	jmp	0x112b9


0x112b9:	mov	rax, qword ptr [r13 + 8]
0x112bd:	cmp	rax, rcx
0x112c0:	jl	0x117b0


0x117b0:	mov	rdi, qword ptr [rbp - 0x60]
0x117b4:	call	0x1c60


0x112c6:	mov	rdi, qword ptr [rbp - 0x90]
0x112cd:	mov	r9, rbx
0x112d0:	mov	r15, rbx
0x112d3:	shl	r9, 4
0x112d7:	mov	rdx, qword ptr [rdi]
0x112da:	add	rdx, r9
0x112dd:	movzx	esi, byte ptr [rdx + 8]
0x112e1:	cmp	esi, 8
0x112e4:	jne	0x111e0


0x112ea:	mov	rdx, qword ptr [rdx]
0x112ed:	add	rdx, 1
0x112f1:	cmp	qword ptr [rbp - 0x98], rdx
0x112f8:	jle	0x111e9


0x111e0:	cmp	esi, 9
0x111e3:	je	0x113d0


0x111e9:	cmp	rax, rcx
0x111ec:	jne	0x111fc


0x112fe:	shl	rdx, 4
0x11302:	add	rdx, r13
0x11305:	mov	qword ptr [rdx + 8], -1
0x1130d:	mov	qword ptr [rdx], rcx
0x11310:	mov	rax, qword ptr [r13 + 8]
0x11314:	jmp	0x111e9


0x113d0:	mov	rdi, qword ptr [rdx]
0x113d3:	lea	rsi, [rdi + 1]
0x113d7:	cmp	qword ptr [rbp - 0x98], rsi
0x113de:	jle	0x111e9


0x111ee:	cmp	qword ptr [r12 + 0xb0], rbx
0x111f6:	je	0x115d0


0x111fc:	mov	r14, qword ptr [r12 + 0x98]
0x11204:	mov	rdi, qword ptr [r14]
0x11207:	lea	rsi, [rdi + r9]
0x1120b:	movzx	eax, byte ptr [rsi + 8]
0x1120f:	test	al, 8
0x11211:	jne	0x11320


0x113e4:	shl	rsi, 4
0x113e8:	lea	rax, [r13 + rsi]
0x113ed:	cmp	qword ptr [rax], rcx
0x113f0:	jl	0x11770


0x115d0:	cmp	qword ptr [rbp - 0x88], 0
0x115d8:	je	0x1190c


0x11217:	test	byte ptr [rsi + 0xa], 0x10
0x1121b:	jne	0x11420


0x11320:	mov	rax, qword ptr [r12 + 0xb8]
0x11328:	mov	rdx, qword ptr [rbp - 0x78]
0x1132c:	mov	rsi, rbx
0x1132f:	mov	rdi, qword ptr [rbp - 0xa8]
0x11336:	mov	r9, qword ptr [rax + rdx*8]
0x1133a:	mov	rax, qword ptr [r14 + 0x28]
0x1133e:	lea	rdx, [rbx + rbx*2]
0x11342:	mov	qword ptr [rbp - 0xa0], r9
0x11349:	lea	r15, [rax + rdx*8]
0x1134d:	call	0xaa10


0x11770:	mov	rdx, qword ptr [rbp - 0xb8]
0x11777:	mov	rdi, qword ptr [rbp - 0xc0]
0x1177e:	mov	rsi, r13
0x11781:	mov	qword ptr [rax + 8], rcx
0x11785:	mov	qword ptr [rbp - 0xd8], r9
0x1178c:	mov	qword ptr [rbp - 0xa0], rcx
0x11793:	call	0x1ee0


0x113f6:	test	byte ptr [rdx + 0xa], 8
0x113fa:	je	0x1140e


0x1190c:	mov	rdi, qword ptr [rbp - 0x60]
0x11910:	call	0x1c60


0x115de:	mov	rcx, qword ptr [rbp - 0x98]
0x115e5:	test	rcx, rcx
0x115e8:	je	0x1160a


0x11221:	cmp	al, 4
0x11223:	je	0x11460


0x11420:	mov	r8, qword ptr [rbp - 0x78]
0x11424:	lea	rsi, [r14 + 0xd8]
0x1142b:	mov	rcx, r12
0x1142e:	mov	rdx, rbx
0x11431:	mov	qword ptr [rbp - 0xa0], r9
0x11438:	call	0x10700


0x1140e:	mov	qword ptr [rax + 8], rcx
0x11412:	mov	rax, qword ptr [r13 + 8]
0x11416:	jmp	0x111e9


0x113fc:	mov	rdi, qword ptr [rbp - 0xc0]
0x11403:	cmp	qword ptr [rdi + rsi], -1
0x11408:	jne	0x117fb


0x1160a:	mov	rdi, qword ptr [rbp - 0x60]
0x1160e:	call	0x1c60


0x115ea:	mov	rax, r13
0x115ed:	xor	edx, edx
0x115ef:	nop	
0x115f0:	cmp	qword ptr [rax], 0
0x115f4:	js	0x115fd


0x11460:	mov	rax, qword ptr [rsi]
0x11463:	add	rax, 1
0x11467:	shl	rax, 4
0x1146b:	add	rax, r13
0x1146e:	mov	rdx, qword ptr [rax + 8]
0x11472:	mov	rdi, qword ptr [rax]
0x11475:	mov	rcx, rdx
0x11478:	sub	rcx, rdi
0x1147b:	cmp	qword ptr [rbp - 0x88], 0
0x11483:	je	0x11638


0x11229:	mov	rcx, qword ptr [rbp - 0x78]
0x1122d:	mov	rdx, rcx
0x11230:	mov	rdi, r12
0x11233:	mov	qword ptr [rbp - 0xa0], rcx
0x1123a:	call	0xde20


0x117fb:	mov	rdx, qword ptr [rbp - 0xb8]
0x11802:	mov	rsi, rdi
0x11805:	mov	rdi, r13
0x11808:	mov	qword ptr [rbp - 0xd8], rcx
0x1180f:	mov	qword ptr [rbp - 0xa0], r9
0x11816:	call	0x1ee0


0x115fd:	add	rdx, 1
0x11601:	add	rax, 0x10
0x11605:	cmp	rcx, rdx
0x11608:	jne	0x115f0


0x115f6:	cmp	qword ptr [rax + 8], -1
0x115fb:	je	0x11650


0x11638:	test	rcx, rcx
0x1163b:	je	0x116f0


0x11489:	cmp	rdi, -1
0x1148d:	je	0x116a6


0x115f0:	cmp	qword ptr [rax], 0
0x115f4:	js	0x115fd


0x11650:	mov	rdi, qword ptr [rbp - 0x88]
0x11657:	mov	r9, qword ptr [rbp - 0xa8]
0x1165e:	mov	r8, r13
0x11661:	mov	rcx, qword ptr [rbp - 0x98]
0x11668:	mov	rdx, qword ptr [rbp - 0xb0]
0x1166f:	lea	rsi, [rdi + 0x10]
0x11673:	call	0xf660


0x116f0:	mov	rdi, qword ptr [rbp - 0xa8]
0x116f7:	mov	rsi, rbx
0x116fa:	mov	qword ptr [rbp - 0xa0], r9
0x11701:	call	0xaa10


0x11641:	mov	r15, qword ptr [rbp - 0x78]
0x11645:	jmp	0x114e5


0x116a6:	mov	rdi, qword ptr [rbp - 0x88]
0x116ad:	mov	rcx, qword ptr [rbp - 0x98]
0x116b4:	lea	rdx, [rbp - 0x78]
0x116b8:	mov	r9, qword ptr [rbp - 0xa8]
0x116bf:	mov	r8, r13
0x116c2:	lea	rsi, [rdi + 0x10]
0x116c6:	call	0xf660


0x11493:	cmp	rdx, -1
0x11497:	je	0x116a6


0x114e5:	mov	rax, qword ptr [r14 + 0x18]
0x114e9:	lea	rdx, [r15 + rcx]
0x114ed:	mov	rbx, qword ptr [rax + rbx*8]
0x114f1:	jmp	0x1125a


0x1149d:	test	rcx, rcx
0x114a0:	je	0x116f0


0x1125a:	cmp	qword ptr [rbp - 0x88], 0
0x11262:	mov	qword ptr [rbp - 0x78], rdx
0x11266:	je	0x112a4


0x114a6:	mov	r15, qword ptr [rbp - 0x78]
0x114aa:	mov	rdx, qword ptr [r12 + 0x30]
0x114af:	mov	rax, qword ptr [r12 + 8]
0x114b4:	sub	rdx, r15
0x114b7:	cmp	rcx, rdx
0x114ba:	jg	0x116a6


0x112a4:	mov	qword ptr [rbp - 0x68], 0
0x112ac:	test	rbx, rbx
0x112af:	js	0x1168a


0x11268:	cmp	rdx, qword ptr [r12 + 0xa8]
0x11270:	jg	0x116a6


0x114c0:	lea	rsi, [rax + r15]
0x114c4:	add	rdi, rax
0x114c7:	mov	rdx, rcx
0x114ca:	mov	qword ptr [rbp - 0xa0], rcx
0x114d1:	call	0x1e90


0x1168a:	cmp	rbx, -2
0x1168e:	je	0x11838


0x112b5:	mov	rcx, qword ptr [rbp - 0x78]
0x112b9:	mov	rax, qword ptr [r13 + 8]
0x112bd:	cmp	rax, rcx
0x112c0:	jl	0x117b0


0x11276:	mov	rax, qword ptr [r12 + 0xb8]
0x1127e:	mov	rax, qword ptr [rax + rdx*8]
0x11282:	test	rax, rax
0x11285:	je	0x116a6


0x11838:	mov	rdi, qword ptr [rbp - 0x60]
0x1183c:	call	0x1c60


0x1128b:	mov	rdi, qword ptr [rax + 0x10]
0x1128f:	lea	rsi, [rax + 0x18]
0x11293:	mov	rdx, rbx
0x11296:	call	0xbf50


0x1195c:	mov	rdi, qword ptr [rbp - 0x60]
0x11960:	call	0x1c60


0x1129b:	test	rax, rax
0x1129e:	je	0x116a6


0x114d6:	test	eax, eax
0x114d8:	mov	rcx, qword ptr [rbp - 0xa0]
0x114df:	jne	0x116a6


0x1123f:	test	al, al
0x11241:	mov	rcx, qword ptr [rbp - 0xa0]
0x11248:	je	0x11698


0x11698:	cmp	qword ptr [rbp - 0x88], 0
0x116a0:	je	0x1195c


0x1124e:	mov	rax, qword ptr [r14 + 0x18]
0x11252:	lea	rdx, [rcx + 1]
0x11256:	mov	rbx, qword ptr [rax + r15*8]
0x1125a:	cmp	qword ptr [rbp - 0x88], 0
0x11262:	mov	qword ptr [rbp - 0x78], rdx
0x11266:	je	0x112a4


0x1143d:	movsxd	rcx, eax
0x11440:	test	rcx, rcx
0x11443:	jne	0x11641


0x11449:	mov	r9, qword ptr [rbp - 0xa0]
0x11450:	mov	rsi, qword ptr [r14]
0x11453:	mov	rcx, qword ptr [rbp - 0x78]
0x11457:	add	rsi, r9
0x1145a:	jmp	0x1122d


0x1122d:	mov	rdx, rcx
0x11230:	mov	rdi, r12
0x11233:	mov	qword ptr [rbp - 0xa0], rcx
0x1123a:	call	0xde20


0x11706:	test	al, al
0x11708:	je	0x11838


0x1170e:	mov	rdx, qword ptr [r14 + 0x28]
0x11712:	lea	rax, [rbx + rbx*2]
0x11716:	mov	rcx, qword ptr [rbp - 0x78]
0x1171a:	lea	rax, [rdx + rax*8]
0x1171e:	mov	qword ptr [rbp - 0xd8], rcx
0x11725:	mov	rax, qword ptr [rax + 0x10]
0x11729:	mov	rbx, qword ptr [rax]
0x1172c:	mov	rax, qword ptr [r12 + 0xb8]
0x11734:	mov	rax, qword ptr [rax + rcx*8]
0x11738:	mov	rdx, rbx
0x1173b:	mov	rdi, qword ptr [rax + 0x10]
0x1173f:	lea	rsi, [rax + 0x18]
0x11743:	call	0xbf50


0x11748:	test	rax, rax
0x1174b:	jne	0x112ac


0x11751:	mov	r9, qword ptr [rbp - 0xa0]
0x11758:	mov	rsi, qword ptr [r14]
0x1175b:	mov	rcx, qword ptr [rbp - 0xd8]
0x11762:	add	rsi, r9
0x11765:	jmp	0x1122d


0x112ac:	test	rbx, rbx
0x112af:	js	0x1168a


0x11352:	test	al, al
0x11354:	mov	r9, qword ptr [rbp - 0xa0]
0x1135b:	je	0x11838


0x11361:	mov	r10, qword ptr [r15 + 8]
0x11365:	test	r10, r10
0x11368:	jle	0x11698


0x1136e:	mov	r15, qword ptr [r15 + 0x10]
0x11372:	mov	r11, qword ptr [r9 + 0x10]
0x11376:	lea	r14, [r9 + 0x18]
0x1137a:	mov	rbx, -1
0x11381:	xor	r9d, r9d
0x11384:	mov	qword ptr [rbp - 0xa0], r12
0x1138b:	nop	dword ptr [rax + rax]
0x11390:	mov	r12, qword ptr [r15 + r9*8]
0x11394:	mov	rsi, r14
0x11397:	mov	rdi, r11
0x1139a:	mov	rdx, r12
0x1139d:	call	0xbf50


0x113a2:	test	rax, rax
0x113a5:	je	0x113b4


0x113b4:	add	r9, 1
0x113b8:	cmp	r10, r9
0x113bb:	jne	0x11390


0x113a7:	cmp	rbx, -1
0x113ab:	jne	0x11500


0x113bd:	mov	r12, qword ptr [rbp - 0xa0]
0x113c4:	jmp	0x112ac


0x11390:	mov	r12, qword ptr [r15 + r9*8]
0x11394:	mov	rsi, r14
0x11397:	mov	rdi, r11
0x1139a:	mov	rdx, r12
0x1139d:	call	0xbf50


0x113b1:	mov	rbx, r12
0x113b4:	add	r9, 1
0x113b8:	cmp	r10, r9
0x113bb:	jne	0x11390


0x11500:	mov	rsi, qword ptr [rbp - 0xc8]
0x11507:	mov	rdi, qword ptr [rbp - 0x68]
0x1150b:	mov	rdx, rbx
0x1150e:	mov	r14, r12
0x11511:	mov	r12, qword ptr [rbp - 0xa0]
0x11518:	call	0xbf50


0x1151d:	test	rax, rax
0x11520:	jne	0x116e0


0x11526:	mov	rcx, qword ptr [rbp - 0x88]
0x1152d:	test	rcx, rcx
0x11530:	je	0x112ac


0x116e0:	mov	rbx, r14
0x116e3:	jmp	0x112ac


0x11536:	mov	r15, qword ptr [rcx]
0x11539:	mov	rdx, qword ptr [rbp - 0x78]
0x1153d:	lea	rax, [r15 + 1]
0x11541:	cmp	rax, qword ptr [rcx + 8]
0x11545:	mov	qword ptr [rcx], rax
0x11548:	je	0x118cd


0x118cd:	lea	rsi, [rax + rax*2]
0x118d1:	mov	rax, qword ptr [rbp - 0x88]
0x118d8:	mov	qword ptr [rbp - 0xa0], rdx
0x118df:	shl	rsi, 5
0x118e3:	mov	rdi, qword ptr [rax + 0x10]
0x118e7:	call	0x1f90


0x1154e:	mov	rax, qword ptr [rcx + 0x10]
0x11552:	lea	r15, [r15 + r15*2]
0x11556:	shl	r15, 4
0x1155a:	add	r15, rax
0x1155d:	mov	qword ptr [r15 + 8], r14
0x11561:	mov	r14, qword ptr [rbp - 0xb8]
0x11568:	mov	qword ptr [r15], rdx
0x1156b:	mov	rdi, r14
0x1156e:	call	0x1f20


0x118ec:	test	rax, rax
0x118ef:	je	0x11935


0x11935:	mov	rdi, qword ptr [rbp - 0x60]
0x11939:	call	0x1c60


0x118f1:	mov	rcx, qword ptr [rbp - 0x88]
0x118f8:	mov	rdx, qword ptr [rbp - 0xa0]
0x118ff:	shl	qword ptr [rcx + 8], 1
0x11903:	mov	qword ptr [rcx + 0x10], rax
0x11907:	jmp	0x11552


0x11552:	lea	r15, [r15 + r15*2]
0x11556:	shl	r15, 4
0x1155a:	add	r15, rax
0x1155d:	mov	qword ptr [r15 + 8], r14
0x11561:	mov	r14, qword ptr [rbp - 0xb8]
0x11568:	mov	qword ptr [r15], rdx
0x1156b:	mov	rdi, r14
0x1156e:	call	0x1f20


0x1181b:	mov	rax, qword ptr [r13 + 8]
0x1181f:	mov	r9, qword ptr [rbp - 0xa0]
0x11826:	mov	rcx, qword ptr [rbp - 0xd8]
0x1182d:	jmp	0x111e9


0x11798:	mov	rax, qword ptr [r13 + 8]
0x1179c:	mov	rcx, qword ptr [rbp - 0xa0]
0x117a3:	mov	r9, qword ptr [rbp - 0xd8]
0x117aa:	jmp	0x111e9


0xf6a0:	mov	rdi, qword ptr [rbp + 0x10]
0xf6a4:	call	0x1c60


0x1883c:	mov	rdx, qword ptr [rbx + 8]
0x18840:	mov	qword ptr [rbp], rax
0x18844:	jmp	0x1880f


0x1880f:	movzx	eax, byte ptr [rbx + 0x10]
0x18813:	mov	qword ptr [rbp + 8], rdx
0x18817:	test	al, al
0x18819:	mov	byte ptr [rbp + 0x10], al
0x1881c:	je	0x18824


0x21db:	lea	rsi, [rip + 0x1a099]
0x21e2:	mov	edi, 6
0x21e7:	call	0x1fa0


0x5dad:	cmp	ebp, eax
0x5daf:	je	0x5dc9


0x5dc9:	add	rsp, 8
0x5dcd:	mov	eax, ebx
0x5dcf:	pop	rbx
0x5dd0:	pop	rbp
0x5dd1:	ret	


0x5db1:	xor	ebx, ebx
0x5db3:	test	eax, eax
0x5db5:	js	0x5dc9


0x5db7:	mov	edi, eax
0x5db9:	call	0x1e70


0x1e70:	jmp	qword ptr [rip + 0x21effa]




0x9c16:	xor	ecx, ecx
0x9c18:	mov	edx, ebp
0x9c1a:	mov	dword ptr [rax], 0
0x9c20:	mov	rsi, rbx
0x9c23:	mov	rdi, r12
0x9c26:	mov	r13, rax
0x9c29:	call	0x1d30


0x1d30:	jmp	qword ptr [rip + 0x21f09a]




0x8071:	mov	r13, rax
0x8074:	mov	eax, dword ptr [rax]
0x8076:	test	r15d, r15d
0x8079:	mov	rbx, qword ptr [rip + 0x219020]
0x8080:	mov	dword ptr [rsp + 0x18], eax
0x8084:	js	0x81f1


0x81f1:	call	0x1c70


0x808a:	cmp	dword ptr [rip + 0x219007], r15d
0x8091:	jg	0x80f5


0x8093:	cmp	r15d, 0x7fffffff
0x809a:	je	0x81f6


0x80f5:	mov	eax, dword ptr [rbp + 4]
0x80f8:	shl	r15, 4
0x80fc:	sub	rsp, 8
0x8100:	add	rbx, r15
0x8103:	lea	r15, [rbp + 8]
0x8107:	mov	r8d, dword ptr [rbp]
0x810b:	mov	r11, qword ptr [rbx]
0x810e:	mov	r12, qword ptr [rbx + 8]
0x8112:	mov	rcx, r14
0x8115:	or	eax, 1
0x8118:	mov	dword ptr [rsp + 0x24], eax
0x811c:	push	qword ptr [rbp + 0x30]
0x811f:	mov	r9d, eax
0x8122:	push	qword ptr [rbp + 0x28]
0x8125:	push	r15
0x8127:	mov	rsi, r11
0x812a:	mov	rdx, qword ptr [rsp + 0x28]
0x812f:	mov	rdi, r12
0x8132:	mov	qword ptr [rsp + 0x30], r11
0x8137:	call	0x6e10


0x81f6:	call	0x9b10


0x80a0:	lea	r12d, [r15 + 1]
0x80a4:	lea	rax, [rip + 0x219005]
0x80ab:	movsxd	rsi, r12d
0x80ae:	shl	rsi, 4
0x80b2:	cmp	rbx, rax
0x80b5:	je	0x81d0


0x81d0:	xor	edi, edi
0x81d2:	call	0x9920


0x80bb:	mov	rdi, rbx
0x80be:	call	0x9920


0x80c3:	mov	rbx, rax
0x80c6:	mov	qword ptr [rip + 0x218fd3], rax
0x80cd:	movsxd	rdi, dword ptr [rip + 0x218fc4]
0x80d4:	mov	edx, r12d
0x80d7:	xor	esi, esi
0x80d9:	sub	edx, edi
0x80db:	shl	rdi, 4
0x80df:	movsxd	rdx, edx
0x80e2:	add	rdi, rbx
0x80e5:	shl	rdx, 4
0x80e9:	call	0x1e40


0x80ee:	mov	dword ptr [rip + 0x218fa3], r12d
0x80f5:	mov	eax, dword ptr [rbp + 4]
0x80f8:	shl	r15, 4
0x80fc:	sub	rsp, 8
0x8100:	add	rbx, r15
0x8103:	lea	r15, [rbp + 8]
0x8107:	mov	r8d, dword ptr [rbp]
0x810b:	mov	r11, qword ptr [rbx]
0x810e:	mov	r12, qword ptr [rbx + 8]
0x8112:	mov	rcx, r14
0x8115:	or	eax, 1
0x8118:	mov	dword ptr [rsp + 0x24], eax
0x811c:	push	qword ptr [rbp + 0x30]
0x811f:	mov	r9d, eax
0x8122:	push	qword ptr [rbp + 0x28]
0x8125:	push	r15
0x8127:	mov	rsi, r11
0x812a:	mov	rdx, qword ptr [rsp + 0x28]
0x812f:	mov	rdi, r12
0x8132:	mov	qword ptr [rsp + 0x30], r11
0x8137:	call	0x6e10


0x81d7:	movdqa	xmm0, xmmword ptr [rip + 0x218ed1]
0x81df:	mov	rbx, rax
0x81e2:	mov	qword ptr [rip + 0x218eb7], rax
0x81e9:	movups	xmmword ptr [rax], xmm0
0x81ec:	jmp	0x80cd


0x80cd:	movsxd	rdi, dword ptr [rip + 0x218fc4]
0x80d4:	mov	edx, r12d
0x80d7:	xor	esi, esi
0x80d9:	sub	edx, edi
0x80db:	shl	rdi, 4
0x80df:	movsxd	rdx, edx
0x80e2:	add	rdi, rbx
0x80e5:	shl	rdx, 4
0x80e9:	call	0x1e40


0x820c:	mov	r12d, dword ptr [rax]
0x820f:	mov	rbp, rax
0x8212:	lea	rax, [rip + 0x2197a7]
0x8219:	test	rbx, rbx
0x821c:	mov	esi, 0x38
0x8221:	cmove	rbx, rax
0x8225:	mov	rdi, rbx
0x8228:	call	0x9ac0


0x8342:	mov	r12d, dword ptr [rax]
0x8345:	mov	rbp, rax
0x8348:	lea	rax, [rbx + 8]
0x834c:	sub	rsp, 8
0x8350:	mov	r9d, dword ptr [rbx + 4]
0x8354:	push	qword ptr [rbx + 0x30]
0x8357:	mov	r8d, dword ptr [rbx]
0x835a:	push	qword ptr [rbx + 0x28]
0x835d:	mov	rdx, r15
0x8360:	push	rax
0x8361:	mov	rcx, qword ptr [rsp + 0x28]
0x8366:	mov	rsi, r14
0x8369:	mov	rdi, r13
0x836c:	call	0x6e10


0x83bf:	test	r12, r12
0x83c2:	mov	r13, rax
0x83c5:	mov	eax, dword ptr [rax]
0x83c7:	sete	bpl
0x83cb:	or	ebp, dword ptr [rbx + 4]
0x83ce:	lea	r10, [rbx + 8]
0x83d2:	sub	rsp, 8
0x83d6:	mov	r8d, dword ptr [rbx]
0x83d9:	mov	rcx, r15
0x83dc:	mov	dword ptr [rsp + 0x14], eax
0x83e0:	push	qword ptr [rbx + 0x30]
0x83e3:	mov	rdx, r14
0x83e6:	push	qword ptr [rbx + 0x28]
0x83e9:	push	r10
0x83eb:	xor	esi, esi
0x83ed:	mov	r9d, ebp
0x83f0:	xor	edi, edi
0x83f2:	mov	qword ptr [rsp + 0x40], r10
0x83f7:	call	0x6e10


0x8ba5:	test	rax, rax
0x8ba8:	je	0x8c00


0x8c00:	xor	ebp, ebp
0x8c02:	jmp	0x8bd2


0x8baa:	mov	rsi, rbp
0x8bad:	mov	rdi, rax
0x8bb0:	mov	rbx, rax
0x8bb3:	call	0x89b0


0x8bd2:	add	rsp, 8
0x8bd6:	mov	rax, rbp
0x8bd9:	pop	rbx
0x8bda:	pop	rbp
0x8bdb:	pop	r12
0x8bdd:	pop	r13
0x8bdf:	ret	


0x8c46:	mov	rdx, rax
0x8c49:	sub	rdx, rbp
0x8c4c:	add	rdx, 1
0x8c50:	test	rax, rax
0x8c53:	mov	rax, rbx
0x8c56:	cmovne	rax, rdx
0x8c5a:	add	rsp, 8
0x8c5e:	pop	rbx
0x8c5f:	pop	rbp
0x8c60:	ret	


0x1aaef:	test	rax, rax
0x1aaf2:	mov	rbx, rax
0x1aaf5:	je	0x1ab60


0x1ab60:	call	0x1c80


0x1ab65:	mov	dword ptr [rax], 0xc
0x1ab6b:	add	rsp, 8
0x1ab6f:	mov	rax, rbx
0x1ab72:	pop	rbx
0x1ab73:	pop	rbp
0x1ab74:	pop	r12
0x1ab76:	pop	r13
0x1ab78:	ret	


0x8c96:	test	rax, rax
0x8c99:	je	0x9257


0x9257:	call	0x9b10


0x8c9f:	mov	rbx, rax
0x8ca2:	call	0x1d90


0x92ef:	lea	rdx, [rip + 0x1326a]
0x92f6:	mov	rcx, rax
0x92f9:	mov	r8d, 0x7e3
0x92ff:	mov	esi, 1
0x9304:	mov	rdi, rbp
0x9307:	xor	eax, eax
0x9309:	call	0x2090


0x930e:	lea	rsi, [rip + 0x12fab]
0x9315:	xor	edi, edi
0x9317:	mov	edx, 5
0x931c:	call	0x1d80


0x9321:	mov	rsi, rbp
0x9324:	mov	rdi, rax
0x9327:	call	0x1eb0


0x1eb0:	jmp	qword ptr [rip + 0x21efda]




0x551d:	mov	rdi, qword ptr [rip + 0x21bbdc]
0x5524:	mov	rdx, rax
0x5527:	mov	rcx, rbx
0x552a:	mov	esi, 1
0x552f:	xor	eax, eax
0x5531:	call	0x2090


0x5536:	mov	edi, ebp
0x5538:	call	0x2070


0x2070:	jmp	qword ptr [rip + 0x21eefa]




0x554b:	mov	rcx, rbx
0x554e:	mov	rdx, rbx
0x5551:	mov	rsi, rax
0x5554:	mov	edi, 1
0x5559:	xor	eax, eax
0x555b:	call	0x1fb0


0x5560:	mov	rbx, qword ptr [rip + 0x21bb61]
0x5567:	lea	rsi, [rip + 0x15a4a]
0x556e:	mov	edx, 5
0x5573:	xor	edi, edi
0x5575:	call	0x1d80


0x557a:	mov	rsi, rbx
0x557d:	mov	rdi, rax
0x5580:	call	0x1eb0


0x5a83:	mov	rbx, rax
0x5a86:	mov	rsi, rbp
0x5a89:	mov	edi, 1
0x5a8e:	call	0x8970


0x5ace:	mov	rbx, rax
0x5ad1:	jmp	0x5a86


0x5a86:	mov	rsi, rbp
0x5a89:	mov	edi, 1
0x5a8e:	call	0x8970


0x18436:	mov	rdi, rax
0x18439:	mov	r13, rax
0x1843c:	call	0x1da0


0x4a14:	mov	rbx, rax
0x4a17:	call	0x1c80


0x4a1c:	mov	esi, dword ptr [rax]
0x4a1e:	mov	rdx, rbx
0x4a21:	mov	edi, 1
0x4a26:	xor	eax, eax
0x4a28:	call	0x2000


0x2000:	jmp	qword ptr [rip + 0x21ef32]




0x5b11:	mov	rdi, rax
0x5b14:	mov	rsi, rbx
0x5b17:	call	0x1eb0


0x69b6:	cmp	rbp, rax
0x69b9:	mov	rbx, rax
0x69bc:	je	0x69cd


0x69cd:	mov	rax, rbx
0x69d0:	pop	rbx
0x69d1:	pop	rbp
0x69d2:	pop	r12
0x69d4:	ret	


0x69be:	mov	rsi, rbp
0x69c1:	mov	rdi, rax
0x69c4:	call	0x6030


0x6a53:	mov	r14, rax
0x6a56:	call	0x18780


0x9854:	lea	rdx, [rip + 0x12a36]
0x985b:	mov	rsi, rax
0x985e:	mov	edi, 1
0x9863:	xor	eax, eax
0x9865:	call	0x1fb0


0x986a:	lea	rsi, [rip + 0x12a36]
0x9871:	mov	edx, 5
0x9876:	xor	edi, edi
0x9878:	call	0x1d80


0x987d:	lea	rcx, [rip + 0x11d5c]
0x9884:	lea	rdx, [rip + 0x11f47]
0x988b:	mov	rsi, rax
0x988e:	mov	edi, 1
0x9893:	xor	eax, eax
0x9895:	call	0x1fb0


0x989a:	mov	rbx, qword ptr [rip + 0x217827]
0x98a1:	lea	rsi, [rip + 0x12c30]
0x98a8:	xor	edi, edi
0x98aa:	mov	edx, 5
0x98af:	call	0x1d80


0x98b4:	mov	rsi, rbx
0x98b7:	mov	rdi, rax
0x98ba:	pop	rbx
0x98bb:	jmp	0x1eb0


0x9b27:	mov	edi, dword ptr [rip + 0x21751b]
0x9b2d:	lea	rdx, [rip + 0x11ee0]
0x9b34:	mov	rcx, rax
0x9b37:	xor	esi, esi
0x9b39:	xor	eax, eax
0x9b3b:	call	0x2000


0x9ba6:	test	rax, rax
0x9ba9:	mov	rbx, rax
0x9bac:	je	0x9bb8


0x9bb8:	call	0x1c80


0x9bae:	mov	rax, rbx
0x9bb1:	pop	rbx
0x9bb2:	ret	


0x9bbd:	cmp	dword ptr [rax], 0xc
0x9bc0:	jne	0x9bae


0x9bc2:	call	0x9b10


0xa383:	mov	edx, r12d
0xa386:	mov	rsi, rbp
0xa389:	mov	edi, eax
0xa38b:	call	0x1e20


0x1e20:	jmp	qword ptr [rip + 0x21f022]




0x5e01:	mov	ebx, eax
0x5e03:	call	0x1c80


0x5e08:	cmp	ebx, 1
0x5e0b:	mov	r14, rax
0x5e0e:	je	0x5f70


0x5f70:	xor	ebx, ebx
0x5f72:	xor	ebp, ebp
0x5f74:	jmp	0x5e50


0x5e14:	cmp	ebx, 2
0x5e17:	je	0x5f60


0x5e50:	xor	esi, esi
0x5e52:	xor	edi, edi
0x5e54:	call	0x1de0


0x5f60:	xor	ebx, ebx
0x5f62:	jmp	0x5e3a


0x5e1d:	test	ebx, ebx
0x5e1f:	je	0x5ed8


0x1de0:	jmp	qword ptr [rip + 0x21f042]


0x5e3a:	mov	esi, 1
0x5e3f:	mov	edi, 1
0x5e44:	call	0x1de0


0x5ed8:	xor	ebx, ebx
0x5eda:	xor	ebp, ebp
0x5edc:	xor	r13d, r13d
0x5edf:	jmp	0x5e90


0x5e25:	mov	esi, 2
0x5e2a:	mov	edi, 2
0x5e2f:	call	0x1de0




0x5e90:	mov	rdi, qword ptr [rsp + 8]
0x5e95:	mov	rdx, r12
0x5e98:	mov	rsi, r15
0x5e9b:	call	0x1e50


0x1e50:	jmp	qword ptr [rip + 0x21f00a]




0x89e1:	lea	rdx, [rsp + 0x10]
0x89e6:	mov	esi, eax
0x89e8:	mov	edi, 1
0x89ed:	call	0x1f60


0x1f60:	jmp	qword ptr [rip + 0x21ef82]




0xa29c:	test	eax, eax
0xa29e:	mov	rdi, rbx
0xa2a1:	js	0xa2f7


0xa2f7:	pop	rbx
0xa2f8:	pop	rbp
0xa2f9:	pop	r12
0xa2fb:	jmp	0x1d50


0xa2a3:	call	0x1f70


0x1d50:	jmp	qword ptr [rip + 0x21f08a]




0xa2a8:	test	eax, eax
0xa2aa:	jne	0xa2d8


0xa2ac:	mov	rdi, rbx
0xa2af:	call	0xa310


0xa2d8:	mov	rdi, rbx
0xa2db:	call	0x1ef0


0xa2e0:	xor	esi, esi
0xa2e2:	mov	edx, 1
0xa2e7:	mov	edi, eax
0xa2e9:	call	0x1e20


0xa3e7:	cmp	rax, -3
0xa3eb:	mov	rbp, rax
0xa3ee:	jbe	0xa410


0xa410:	mov	rdx, qword ptr [rsp + 8]
0xa415:	xor	rdx, qword ptr fs:[0x28]
0xa41e:	mov	rax, rbp
0xa421:	jne	0xa42e


0xa3f0:	test	r12, r12
0xa3f3:	je	0xa410


0xa423:	add	rsp, 0x18
0xa427:	pop	rbx
0xa428:	pop	rbp
0xa429:	pop	r12
0xa42b:	pop	r13
0xa42d:	ret	


0xa42e:	call	0x1db0


0xa3f5:	xor	edi, edi
0xa3f7:	call	0x18720


0xe544:	cmp	r12, rax
0xe547:	mov	r8, qword ptr [rsp]
0xe54b:	mov	r10d, dword ptr [rsp + 0xc]
0xe550:	ja	0xe55c


0xe552:	cmp	rax, -3
0xe556:	jbe	0xe721


0xe55c:	mov	r11, qword ptr [rbx + 0x28]
0xe560:	mov	rax, qword ptr [rbx + 0x38]
0xe564:	jmp	0xe201


0xe721:	mov	edx, dword ptr [rsp + 0x24]
0xe725:	sub	rax, r12
0xe728:	mov	qword ptr [rbx + 0x20], 0
0xe730:	mov	r12, rax
0xe733:	mov	qword ptr [rbx + 0x30], rax
0xe737:	cmp	edx, -1
0xe73a:	jne	0xe285


0xe740:	jmp	0xe55c


0xe285:	cmp	byte ptr [rbx + 0x8e], 0
0xe28c:	jne	0xe6f9


0xe292:	xor	eax, eax
0xe294:	cmp	edx, 0xa
0xe297:	jne	0xe2a7


0xe6f9:	mov	edi, edx
0xe6fb:	mov	dword ptr [rsp], edx
0xe6fe:	call	0x1f10


0xe299:	xor	eax, eax
0xe29b:	cmp	byte ptr [rbx + 0x8d], 0
0xe2a2:	setne	al
0xe2a5:	add	eax, eax
0xe2a7:	mov	dword ptr [rbx + 0x70], eax
0xe2aa:	cmp	r12, 0
0xe2ae:	jne	0xe6ca


0xe2a7:	mov	dword ptr [rbx + 0x70], eax
0xe2aa:	cmp	r12, 0
0xe2ae:	jne	0xe6ca


0xe703:	test	eax, eax
0xe705:	jne	0xe713


0xe707:	mov	edx, dword ptr [rsp]
0xe70a:	cmp	edx, 0x5f
0xe70d:	jne	0xe292


0xe713:	mov	eax, 1
0xe718:	jmp	0xe2a7


0x103c8:	cmp	r12, rax
0x103cb:	jne	0x10297


0x103d1:	mov	edi, dword ptr [rsp + 0x54]
0x103d5:	call	0x2040


0x1054a:	cmp	rax, -2
0x1054e:	jne	0x1055a


0x10550:	movzx	eax, byte ptr [rsp + 0x54]
0x10555:	mov	byte ptr [rbp + rax], 1
0x1055a:	add	byte ptr [rsp + 0x54], 1
0x1055f:	jne	0x10530


0x1055a:	add	byte ptr [rsp + 0x54], 1
0x1055f:	jne	0x10530


0x10561:	jmp	0x10297


0x10530:	xor	edi, edi
0x10532:	mov	qword ptr [r12], 0
0x1053a:	mov	rcx, r12
0x1053d:	mov	edx, 1
0x10542:	mov	rsi, r13
0x10545:	call	0xa3b0


0xe24f:	lea	rcx, [rax - 1]
0xe253:	mov	edx, dword ptr [rsp + 0x24]
0xe257:	mov	r8, qword ptr [rsp]
0xe25b:	mov	r10d, dword ptr [rsp + 0xc]
0xe260:	cmp	rcx, -4
0xe264:	ja	0xe6a5


0xe26a:	add	r14, rax
0xe26d:	cmp	r15, r14
0xe270:	jg	0xe220


0xe6a5:	test	rax, rax
0xe6a8:	je	0xe71d


0xe272:	sub	r14, r15
0xe275:	cmp	edx, -1
0xe278:	mov	r12, r14
0xe27b:	mov	qword ptr [rbx + 0x30], r14
0xe27f:	je	0xe659


0xe220:	mov	r12, qword ptr [rbx + 0x50]
0xe224:	mov	rsi, qword ptr [rbx]
0xe227:	mov	rdi, r13
0xe22a:	mov	rax, qword ptr [rbx + 0x20]
0xe22e:	mov	rcx, qword ptr [rsp + 0x10]
0xe233:	mov	dword ptr [rsp + 0xc], r10d
0xe238:	mov	qword ptr [rsp], r8
0xe23c:	sub	r12, r14
0xe23f:	add	rsi, r14
0xe242:	mov	rdx, r12
0xe245:	mov	qword ptr [rsp + 0x18], rax
0xe24a:	call	0xa3b0


0xe71d:	xor	edx, edx
0xe71f:	jmp	0xe6b7


0xe6aa:	test	r12, r12
0xe6ad:	je	0xe71d


0xe659:	lea	rsi, [r8 - 1]
0xe65d:	mov	edx, r10d
0xe660:	mov	rdi, rbx
0xe663:	call	0xdd30


0xe6b7:	mov	rax, qword ptr [rsp + 0x18]
0xe6bc:	mov	qword ptr [rbx + 0x20], rax
0xe6c0:	mov	eax, 1
0xe6c5:	jmp	0xe26a


0xe6af:	mov	rax, qword ptr [rbx]
0xe6b2:	movzx	edx, byte ptr [rax + r14]
0xe6b7:	mov	rax, qword ptr [rsp + 0x18]
0xe6bc:	mov	qword ptr [rbx + 0x20], rax
0xe6c0:	mov	eax, 1
0xe6c5:	jmp	0xe26a


0xaf5c:	mov	rbp, rax
0xaf5f:	lea	rax, [rax - 1]
0xaf63:	cmp	rax, -4
0xaf67:	mov	qword ptr [rsp + 0x20], rax
0xaf6c:	ja	0xb2a9


0xaf72:	mov	edx, dword ptr [rsp + 0x44]
0xaf76:	mov	edi, edx
0xaf78:	mov	dword ptr [rsp + 0x10], edx
0xaf7c:	call	0x2050


0xb2a9:	cmp	qword ptr [rsp + 0x20], -3
0xb2af:	jne	0xb2bb


0x2050:	jmp	qword ptr [rip + 0x21ef0a]


0xb2b1:	mov	rax, qword ptr [r14 + 0x58]
0xb2b5:	cmp	qword ptr [r14 + 0x40], rax
0xb2b9:	jl	0xb338


0xb2bb:	mov	rax, qword ptr [r14]
0xb2be:	mov	rdx, qword ptr [r14 + 0x78]
0xb2c2:	add	rax, r13
0xb2c5:	add	rax, qword ptr [r14 + 0x28]
0xb2c9:	test	rdx, rdx
0xb2cc:	movzx	eax, byte ptr [rax]
0xb2cf:	jne	0xb47c




0xb338:	mov	rax, qword ptr [rsp + 0x48]
0xb33d:	mov	qword ptr [r14 + 0x20], rax
0xb341:	jmp	0xaec5


0xb2d5:	mov	rdx, qword ptr [r14 + 8]
0xb2d9:	mov	rcx, r15
0xb2dc:	mov	byte ptr [rdx + r15], al
0xb2e0:	cmp	byte ptr [r14 + 0x8c], 0
0xb2e8:	jne	0xb46f


0xb47c:	movzx	eax, byte ptr [rdx + rax]
0xb480:	jmp	0xb2d5


0xb2ee:	mov	rdx, qword ptr [r14 + 0x10]
0xb2f2:	add	r13, 1
0xb2f6:	add	r15, 1
0xb2fa:	cmp	rbp, -1
0xb2fe:	mov	dword ptr [rdx + rcx*4], eax
0xb301:	jne	0xaec0


0xb46f:	mov	rdx, qword ptr [r14 + 0x18]
0xb473:	mov	qword ptr [rdx + r15*8], r13
0xb477:	jmp	0xb2ee


0xb307:	mov	rax, qword ptr [rsp + 0x48]
0xb30c:	mov	qword ptr [r14 + 0x20], rax
0xb310:	jmp	0xaec0


0xaec0:	cmp	r15, rbx
0xaec3:	jl	0xaf00


0xb0d5:	mov	rbp, rax
0xb0d8:	lea	rax, [rax - 1]
0xb0dc:	cmp	rax, -4
0xb0e0:	ja	0xb1c8


0xb0e6:	mov	edx, dword ptr [rsp + 0x44]
0xb0ea:	mov	edi, edx
0xb0ec:	mov	dword ptr [rsp + 0x18], edx
0xb0f0:	call	0x2050


0xb1c8:	cmp	rax, -3
0xb1cc:	jne	0xb200


0xb1ce:	mov	rax, qword ptr [r14 + 0x58]
0xb1d2:	cmp	qword ptr [r14 + 0x40], rax
0xb1d6:	jge	0xb200


0xb200:	mov	rax, qword ptr [r14]
0xb203:	mov	rdx, qword ptr [r14 + 8]
0xb207:	add	rax, r15
0xb20a:	add	rax, qword ptr [r14 + 0x28]
0xb20e:	movzx	eax, byte ptr [rax]
0xb211:	mov	byte ptr [rdx + r15], al
0xb215:	mov	rdx, qword ptr [r14 + 0x10]
0xb219:	add	r15, 1
0xb21d:	cmp	rbp, -1
0xb221:	mov	dword ptr [rdx + r13*4], eax
0xb225:	jne	0xb16a


0xb1d8:	mov	rax, qword ptr [rsp + 0x48]
0xb1dd:	mov	qword ptr [r14 + 0x20], rax
0xb1e1:	nop	dword ptr [rax]
0xb1e8:	mov	qword ptr [r14 + 0x30], r15
0xb1ec:	mov	qword ptr [r14 + 0x38], r15
0xb1f0:	xor	eax, eax
0xb1f2:	jmp	0xaecf


0xb22b:	mov	rax, qword ptr [rsp + 0x48]
0xb230:	mov	qword ptr [r14 + 0x20], rax
0xb234:	jmp	0xb16a


0xad14:	lea	rdx, [rax - 1]
0xad18:	cmp	rdx, -3
0xad1c:	ja	0xadb0


0xad22:	cmp	rax, -2
0xad26:	mov	edx, dword ptr [rsp + 0xc]
0xad2a:	je	0xada0


0xadb0:	mov	rax, qword ptr [rbx]
0xadb3:	mov	rcx, qword ptr [rbx + 0x78]
0xadb7:	add	rax, rbp
0xadba:	add	rax, qword ptr [rbx + 0x28]
0xadbe:	test	rcx, rcx
0xadc1:	movzx	edx, byte ptr [rax]
0xadc4:	mov	dword ptr [rsp + 0xc], edx
0xadc8:	jne	0xae51


0xada0:	mov	rax, qword ptr [rbx + 0x58]
0xada4:	cmp	qword ptr [rbx + 0x40], rax
0xada8:	jl	0xae48


0xad2c:	mov	rcx, qword ptr [rbx + 0x10]
0xad30:	lea	rsi, [rbp + 1]
0xad34:	lea	rdi, [rbp*4]
0xad3c:	mov	dword ptr [rcx + rbp*4], edx
0xad3f:	add	rbp, rax
0xad42:	cmp	rsi, rbp
0xad45:	jge	0xad90


0xadce:	mov	qword ptr [rbx + 0x20], r15
0xadd2:	mov	eax, 1
0xadd7:	jmp	0xad2c


0xae51:	movzx	edx, byte ptr [rcx + rdx]
0xae55:	mov	dword ptr [rsp + 0xc], edx
0xae59:	jmp	0xadce


0xae48:	mov	qword ptr [rbx + 0x20], r15
0xae4c:	jmp	0xad64


0xad47:	lea	rdx, [rcx + rdi + 4]
0xad4c:	lea	rax, [rcx + rbp*4]
0xad50:	mov	dword ptr [rdx], 0xffffffff
0xad56:	add	rdx, 4
0xad5a:	cmp	rax, rdx
0xad5d:	jne	0xad50


0xad90:	mov	rbp, rsi
0xad93:	cmp	rbp, r12
0xad96:	jl	0xace8


0xad5f:	cmp	rbp, r12
0xad62:	jl	0xace8


0xad50:	mov	dword ptr [rdx], 0xffffffff
0xad56:	add	rdx, 4
0xad5a:	cmp	rax, rdx
0xad5d:	jne	0xad50


0xace8:	mov	rdi, qword ptr [rbx + 0x78]
0xacec:	mov	rdx, r12
0xacef:	mov	r15, qword ptr [rbx + 0x20]
0xacf3:	sub	rdx, rbp
0xacf6:	test	rdi, rdi
0xacf9:	jne	0xade0


0xad9c:	jmp	0xad64


0xf6a9:	mov	rax, qword ptr [r12]
0xf6ad:	mov	rdi, qword ptr [rax + rbx + 0x10]
0xf6b2:	call	0x1c60


0xf6b7:	add	rbx, qword ptr [r12]
0xf6bb:	movdqu	xmm0, xmmword ptr [rbx + 0x18]
0xf6c0:	movaps	xmmword ptr [rbp], xmm0
0xf6c4:	mov	rax, qword ptr [rbx + 0x28]
0xf6c8:	mov	qword ptr [rbp + 0x10], rax
0xf6cc:	mov	rax, qword ptr [rbx + 8]
0xf6d0:	pop	rbx
0xf6d1:	pop	rbp
0xf6d2:	pop	r12
0xf6d4:	ret	


0x116cb:	mov	rcx, qword ptr [rbp - 0x78]
0x116cf:	mov	rbx, rax
0x116d2:	jmp	0x111cb


0x111cb:	lea	rax, [rbp - 0x78]
0x111cf:	mov	qword ptr [rbp - 0xb0], rax
0x111d6:	jmp	0x112b9


0x11678:	mov	r9, rax
0x1167b:	mov	rbx, rax
0x1167e:	mov	r15, rax
0x11681:	shl	r9, 4
0x11685:	jmp	0x111fc


0x1193e:	cmp	byte ptr [rbp - 0xc9], 0
0x11945:	je	0x115b8


0x115b8:	mov	rdi, qword ptr [rbp - 0x88]
0x115bf:	call	0xf610


0x1194b:	mov	rdi, qword ptr [rbp - 0xc0]
0x11952:	call	0x1c60


0x11957:	jmp	0x1184e


0x1184e:	cmp	qword ptr [rbp - 0x88], 0
0x11856:	jne	0x115b8


0x1185c:	mov	eax, 0xc
0x11861:	jmp	0x117d9


0x117d9:	mov	rbx, qword ptr [rbp - 0x38]
0x117dd:	xor	rbx, qword ptr fs:[0x28]
0x117e6:	jne	0x119a5


0x117ec:	lea	rsp, [rbp - 0x28]
0x117f0:	pop	rbx
0x117f1:	pop	r12
0x117f3:	pop	r13
0x117f5:	pop	r14
0x117f7:	pop	r15
0x117f9:	pop	rbp
0x117fa:	ret	


0x119a5:	call	0x1db0


0x13cc6:	test	eax, eax
0x13cc8:	jne	0x13f9d


0x13cce:	mov	rax, qword ptr [rbx]
0x13cd1:	movzx	r11d, byte ptr [rsp + 0x1ac]
0x13cda:	mov	r10, qword ptr [rsp + 0x150]
0x13ce2:	xor	ecx, ecx
0x13ce4:	mov	r9, qword ptr [rsp + 0x138]
0x13cec:	mov	r8, qword ptr [rsp + 0x158]
0x13cf4:	mov	rdi, qword ptr [rsp + 0xd8]
0x13cfc:	mov	rdx, qword ptr [rsp + 0xb8]
0x13d04:	jmp	0x13d09


0x13f9d:	mov	rdi, qword ptr [rsp + 0x1d8]
0x13fa5:	mov	dword ptr [rsp + 0x5c], eax
0x13fa9:	jmp	0x134c8


0x11965:	cmp	byte ptr [rbp - 0xc9], 0
0x1196c:	mov	eax, 1
0x11971:	je	0x117d9


0x11977:	mov	rdi, qword ptr [rbp - 0xc0]
0x1197e:	mov	dword ptr [rbp - 0x88], eax
0x11984:	call	0x1c60


0x11989:	mov	eax, dword ptr [rbp - 0x88]
0x1198f:	jmp	0x117d9


0x11841:	cmp	byte ptr [rbp - 0xc9], 0
0x11848:	jne	0x1194b


0x11613:	cmp	byte ptr [rbp - 0xc9], 0
0x1161a:	jne	0x11994


0x11620:	mov	rdi, qword ptr [rbp - 0x88]
0x11627:	call	0xf610


0x11994:	mov	rdi, qword ptr [rbp - 0xc0]
0x1199b:	call	0x1c60


0x119a0:	jmp	0x11620


0x11915:	cmp	byte ptr [rbp - 0xc9], 0
0x1191c:	je	0x117d7


0x117d7:	xor	eax, eax
0x117d9:	mov	rbx, qword ptr [rbp - 0x38]
0x117dd:	xor	rbx, qword ptr fs:[0x28]
0x117e6:	jne	0x119a5


0x11922:	mov	rdi, qword ptr [rbp - 0xc0]
0x11929:	call	0x1c60


0x1192e:	xor	eax, eax
0x11930:	jmp	0x117d9


0x117b9:	cmp	byte ptr [rbp - 0xc9], 0
0x117c0:	jne	0x1189c


0x117c6:	mov	rdi, qword ptr [rbp - 0x88]
0x117cd:	test	rdi, rdi
0x117d0:	je	0x117d7


0x1189c:	mov	rdi, qword ptr [rbp - 0xc0]
0x118a3:	call	0x1c60


0x117d2:	call	0xf610


0x118a8:	mov	rdi, qword ptr [rbp - 0x88]
0x118af:	test	rdi, rdi
0x118b2:	jne	0x117d2


0x118b8:	jmp	0x117d7


0xb891:	mov	rcx, qword ptr [rsp]
0xb895:	mov	rdi, rcx
0xb898:	call	0x1c60


0xb89d:	mov	rdi, rbp
0xb8a0:	call	0x1c60


0xb8a5:	mov	rax, qword ptr [rsp + 8]
0xb8aa:	mov	rdi, rax
0xb8ad:	call	0x1c60


0x11b3c:	mov	eax, 0xc
0x11b41:	jmp	0x119eb


0x18268:	pop	rax
0x18269:	pop	rdx
0x1826a:	add	rsp, 0x28
0x1826e:	mov	rax, rbx
0x18271:	pop	rbx
0x18272:	pop	rbp
0x18273:	pop	r12
0x18275:	pop	r13
0x18277:	pop	r14
0x18279:	pop	r15
0x1827b:	ret	


0x10edd:	mov	eax, dword ptr [rsp + 0x88]
0x10ee4:	mov	rbx, qword ptr [rsp + 0xc8]
0x10eec:	xor	rbx, qword ptr fs:[0x28]
0x10ef5:	jne	0x110ac


0x10f1d:	mov	dword ptr [rsp + 0x88], 0
0x10f28:	jmp	0x10ca8


0x10c8d:	mov	eax, dword ptr [rsp + 0x8c]
0x10c94:	test	eax, eax
0x10c96:	mov	dword ptr [rsp + 0x88], eax
0x10c9d:	jne	0x10ed0


0x10ec5:	mov	dword ptr [rsp + 0x88], 0xc
0x10ed0:	mov	rdi, qword ptr [rsp + 0xa0]
0x10ed8:	call	0x1c60


0x10d95:	mov	rax, qword ptr [r15 + 0xb8]
0x10d9c:	mov	rbx, qword ptr [rsp + 0x40]
0x10da1:	mov	rax, qword ptr [rax + rbx*8]
0x10da5:	test	rax, rax
0x10da8:	je	0x11085


0x11085:	mov	rax, qword ptr [rsp + 0x60]
0x1108a:	mov	qword ptr [rax], r12
0x1108d:	mov	rax, qword ptr [rsp + 0x68]
0x11092:	mov	qword ptr [r15 + 0xb8], rax
0x11099:	mov	rax, qword ptr [rsp + 0x70]
0x1109e:	mov	qword ptr [r15 + 0x48], rax
0x110a2:	mov	eax, 1
0x110a7:	jmp	0x10ee4


0x10dae:	mov	rbx, qword ptr [rsp + 0x60]
0x10db3:	mov	rdx, qword ptr [rsp + 0x78]
0x10db8:	lea	rsi, [rax + 0x18]
0x10dbc:	mov	qword ptr [rbx], r12
0x10dbf:	mov	rbx, qword ptr [rsp + 0x68]
0x10dc4:	mov	qword ptr [r15 + 0xb8], rbx
0x10dcb:	mov	rbx, qword ptr [rsp + 0x70]
0x10dd0:	mov	qword ptr [r15 + 0x48], rbx
0x10dd4:	mov	rdi, qword ptr [rax + 0x10]
0x10dd8:	call	0xbf50


0x10ddd:	test	rax, rax
0x10de0:	sete	al
0x10de3:	movzx	eax, al
0x10de6:	jmp	0x10ee4


0x12041:	mov	rdx, qword ptr [r14 + 0xb8]
0x12048:	cmp	qword ptr [rdx + rbx*8], 0
0x1204d:	je	0x12321


0x123a5:	mov	eax, dword ptr [rsp + 0x8c]
0x123ac:	jmp	0x11ec8


0x12561:	jmp	0x12497


0x1372f:	mov	rdi, qword ptr [rsp + 0x1d8]
0x13737:	cmp	qword ptr [rdi + rbp*8], 0
0x1373c:	je	0x13821


0xe9cd:	mov	eax, dword ptr [rsp]
0xe9d0:	jmp	0xe998


0xe998:	mov	rsi, qword ptr [rsp + 0x38]
0xe99d:	xor	rsi, qword ptr fs:[0x28]
0xe9a6:	jne	0xe9d6


0xe9a8:	add	rsp, 0x48
0xe9ac:	pop	rbx
0xe9ad:	pop	rbp
0xe9ae:	pop	r12
0xe9b0:	pop	r13
0xe9b2:	pop	r14
0xe9b4:	pop	r15
0xe9b6:	ret	


0xe9d6:	call	0x1db0


0x1464d:	test	eax, eax
0x1464f:	jne	0x14138


0x14655:	sub	rbp, 1
0x14659:	jmp	0x145e8


0x145af:	test	eax, eax
0x145b1:	jne	0x14138


0x145b7:	test	r14, r14
0x145ba:	js	0x1450d


0x145c0:	cmp	qword ptr [rbx + 8], 0
0x145c5:	jle	0x1450d


0x145cb:	mov	r10, qword ptr [rbx + 0x10]
0x145cf:	xor	r14d, r14d
0x145d2:	mov	qword ptr [rsp + 0x30], rbp
0x145d7:	mov	rbp, r14
0x145da:	mov	r14, qword ptr [rsp + 0x28]
0x145df:	jmp	0x145fa


0x144f1:	test	eax, eax
0x144f3:	jne	0x14138


0x144f9:	add	r14, 1
0x144fd:	cmp	r14, qword ptr [rbx + 8]
0x14501:	jl	0x144ba


0xda27:	mov	rax, qword ptr [rbx + 0xb8]
0xda2e:	cmp	qword ptr [rax + r14*8], 0
0xda33:	je	0xdb75


0xdb75:	mov	eax, dword ptr [rsp + 0x4c]
0xdb79:	test	eax, eax
0xdb7b:	je	0xda39


0xdb81:	jmp	0xd8ff


0xd8ff:	mov	rbx, qword ptr [rsp + 0x68]
0xd904:	xor	rbx, qword ptr fs:[0x28]
0xd90d:	jne	0xdbd9


0xdb90:	mov	eax, dword ptr [rsp + 0x4c]
0xdb94:	test	eax, eax
0xdb96:	jne	0xd8ff


0xdb9c:	mov	eax, 0xc
0xdba1:	jmp	0xd8ff


0x134cd:	mov	rax, qword ptr [rsp + 0x38]
0x134d2:	cmp	qword ptr [rax + 0x98], 0
0x134da:	jne	0x13e00


0x134e0:	mov	rdi, qword ptr [rsp]
0x134e4:	call	0xbc40


0x13e00:	mov	rdi, qword ptr [rsp]
0x13e04:	call	0xbde0


0x13e09:	mov	rdi, qword ptr [rsp + 0x218]
0x13e11:	call	0x1c60


0x13e16:	mov	rdi, qword ptr [rsp + 0x1f8]
0x13e1e:	call	0x1c60


0x13e23:	jmp	0x134e0


0xd7eb:	mov	eax, dword ptr [rsp + 0x1c]
0xd7ef:	test	eax, eax
0xd7f1:	jne	0xd818


0x148cb:	mov	eax, dword ptr [rsp + 8]
0x148cf:	jmp	0x14138


0xe996:	xor	eax, eax
0xe998:	mov	rsi, qword ptr [rsp + 0x38]
0xe99d:	xor	rsi, qword ptr fs:[0x28]
0xe9a6:	jne	0xe9d6


0x850d:	mov	qword ptr [rip + 0x218b8c], rbx
0x8514:	pop	rbx
0x8515:	mov	dword ptr [rip + 0x218b79], 1
0x851f:	pop	rbp
0x8520:	pop	r12
0x8522:	ret	


0x84e7:	mov	qword ptr [rip + 0x218bbe], 0x100
0x84f2:	mov	qword ptr [rip + 0x218bbf], rbx
0x84f9:	lea	rbx, [rip + 0x218bb0]
0x8500:	cmp	r12, rbx
0x8503:	je	0x8514


0x994d:	xor	eax, eax
0x994f:	pop	rbx
0x9950:	ret	


0xbe2e:	mov	rdi, rbp
0xbe31:	call	0x1c60


0xbe36:	cmp	qword ptr [r12 + 0x20], rbx
0xbe3b:	jg	0xbe18


0xbe18:	mov	rax, qword ptr [r12 + 0x28]
0xbe1d:	mov	rbp, qword ptr [rax + rbx*8]
0xbe21:	add	rbx, 1
0xbe25:	mov	rdi, qword ptr [rbp + 0x20]
0xbe29:	call	0x1c60


0xbe47:	mov	rax, qword ptr [r12 + 0x10]
0xbe4c:	test	rax, rax
0xbe4f:	je	0xbe64


0xbe64:	mov	rdi, r12
0xbe67:	add	r13, 1
0xbe6b:	call	0x1c60


0xbe51:	mov	rdi, qword ptr [rax + 0x10]
0xbe55:	call	0x1c60


0xbe5a:	mov	rdi, qword ptr [r12 + 0x10]
0xbe5f:	call	0x1c60


0xbe70:	cmp	qword ptr [r14 + 0xe8], r13
0xbe77:	jg	0xbe00


0xbe00:	mov	rax, qword ptr [r14 + 0xf8]
0xbe07:	mov	r12, qword ptr [rax + r13*8]
0xbe0b:	cmp	qword ptr [r12 + 0x20], 0
0xbe11:	jle	0xbe3d


0x84cc:	cmp	rbx, rbp
0x84cf:	jne	0x84c0


0x84c0:	mov	rdi, qword ptr [rbx]
0x84c3:	add	rbx, 0x10
0x84c7:	call	0x1c60


0xbcc8:	cmp	qword ptr [r12 + 0x10], 0
0xbcce:	je	0xbd23


0xbd23:	mov	rdi, qword ptr [r12 + 0x28]
0xbd28:	call	0x1c60


0xbcd0:	xor	ebx, ebx
0xbcd2:	xor	ebp, ebp
0xbcd4:	nop	dword ptr [rax]
0xbcd8:	mov	rax, qword ptr [r12 + 0x30]
0xbcdd:	test	rax, rax
0xbce0:	je	0xbcec


0xbcec:	mov	rax, qword ptr [r12 + 0x38]
0xbcf1:	test	rax, rax
0xbcf4:	je	0xbd00


0xbce2:	mov	rdi, qword ptr [rax + rbx + 0x10]
0xbce7:	call	0x1c60


0xbd00:	mov	rax, qword ptr [r12 + 0x28]
0xbd05:	test	rax, rax
0xbd08:	je	0xbd14


0xbcf6:	mov	rdi, qword ptr [rax + rbx + 0x10]
0xbcfb:	call	0x1c60


0xbd14:	add	rbp, 1
0xbd18:	add	rbx, 0x18
0xbd1c:	cmp	qword ptr [r12 + 0x10], rbp
0xbd21:	ja	0xbcd8


0xbd0a:	mov	rdi, qword ptr [rax + rbx + 0x10]
0xbd0f:	call	0x1c60


0xbcd8:	mov	rax, qword ptr [r12 + 0x30]
0xbcdd:	test	rax, rax
0xbce0:	je	0xbcec


0xbd2d:	mov	rdi, qword ptr [r12 + 0x30]
0xbd32:	call	0x1c60


0xbd37:	mov	rdi, qword ptr [r12 + 0x38]
0xbd3c:	call	0x1c60


0xbd41:	mov	rdi, qword ptr [r12]
0xbd45:	call	0x1c60


0xbd4a:	mov	rdi, qword ptr [r12 + 0x40]
0xbd4f:	test	rdi, rdi
0xbd52:	je	0xbda7


0xbda7:	call	0x1c60


0xbd54:	xor	r14d, r14d
0xbd57:	xor	r13d, r13d
0xbd5a:	nop	word ptr [rax + rax]
0xbd60:	lea	rbp, [rdi + r14]
0xbd64:	cmp	qword ptr [rbp], 0
0xbd69:	jle	0xbd87


0xbd87:	mov	rdi, qword ptr [rbp + 0x10]
0xbd8b:	add	r13, 1
0xbd8f:	add	r14, 0x18
0xbd93:	call	0x1c60


0xbd6b:	xor	ebx, ebx
0xbd6d:	nop	dword ptr [rax]
0xbd70:	mov	rax, qword ptr [rbp + 0x10]
0xbd74:	mov	rdi, qword ptr [rax + rbx*8]
0xbd78:	add	rbx, 1
0xbd7c:	call	0xbbe0


0xbd98:	cmp	qword ptr [r12 + 0x88], r13
0xbda0:	mov	rdi, qword ptr [r12 + 0x40]
0xbda5:	jae	0xbd60


0xbd60:	lea	rbp, [rdi + r14]
0xbd64:	cmp	qword ptr [rbp], 0
0xbd69:	jle	0xbd87


0xbdac:	mov	rdi, qword ptr [r12 + 0x78]
0xbdb1:	lea	rax, [rip + 0x10f48]
0xbdb8:	cmp	rdi, rax
0xbdbb:	je	0xbdc2


0xbdc2:	mov	rdi, qword ptr [r12 + 0xe0]
0xbdca:	call	0x1c60


0xbdbd:	call	0x1c60


0xbdcf:	pop	rbx
0xbdd0:	mov	rdi, r12
0xbdd3:	pop	rbp
0xbdd4:	pop	r12
0xbdd6:	pop	r13
0xbdd8:	pop	r14
0xbdda:	jmp	0x1c60


0xf63a:	mov	rax, qword ptr [rbp + 0x10]
0xf63e:	mov	rdi, qword ptr [rax + rbx + 0x10]
0xf643:	add	rbx, 0x30
0xf647:	call	0x1c60


0xf64c:	cmp	r12, qword ptr [rbp]
0xf650:	jl	0xf628


0xf628:	mov	rax, qword ptr [rbp + 0x10]
0xf62c:	add	r12, 1
0xf630:	mov	rdi, qword ptr [rax + rbx + 0x28]
0xf635:	call	0x1c60


0x184b9:	mov	rdi, qword ptr [rbx + 0x28]
0x184bd:	mov	qword ptr [rbx + 0x20], 0
0x184c5:	call	0x1c60


0x184ca:	mov	qword ptr [rbx + 0x28], 0
0x184d2:	pop	rbx
0x184d3:	ret	


0xb67c:	mov	rdi, qword ptr [rbx + 8]
0xb680:	call	0x1c60


0xb685:	mov	rdi, qword ptr [rbx + 0x10]
0xb689:	call	0x1c60


0xb68e:	mov	rdi, qword ptr [rbx + 0x18]
0xb692:	call	0x1c60


0xb697:	mov	rdi, rbx
0xb69a:	pop	rbx
0xb69b:	jmp	0x1c60


0xbbed:	mov	rdi, qword ptr [rbx + 0x48]
0xbbf1:	call	0x1c60


0xbbf6:	mov	rax, qword ptr [rbx + 0x50]
0xbbfa:	lea	rdx, [rbx + 8]
0xbbfe:	cmp	rax, rdx
0xbc01:	je	0xbc15


0xbc15:	mov	rdi, qword ptr [rbx + 0x18]
0xbc19:	call	0x1c60


0xbc03:	mov	rdi, qword ptr [rax + 0x10]
0xbc07:	call	0x1c60


0xbc0c:	mov	rdi, qword ptr [rbx + 0x50]
0xbc10:	call	0x1c60


0xbc1e:	mov	rdi, qword ptr [rbx + 0x60]
0xbc22:	call	0x1c60


0xbc27:	mov	rdi, qword ptr [rbx + 0x58]
0xbc2b:	call	0x1c60


0xbc30:	mov	rdi, rbx
0xbc33:	pop	rbx
0xbc34:	jmp	0x1c60


0xbc4d:	mov	rdi, qword ptr [rbx + 0x18]
0xbc51:	call	0x1c60


0xbc56:	cmp	byte ptr [rbx + 0x8b], 0
0xbc5d:	jne	0xbc68


0xbc5f:	pop	rbx
0xbc60:	ret	


0xbc68:	mov	rdi, qword ptr [rbx + 8]
0xbc6c:	pop	rbx
0xbc6d:	jmp	0x1c60


0x12213:	test	rax, rax
0x12216:	je	0x122b9


0x1221c:	mov	rdx, qword ptr [r12 + 0x20]
0x12221:	mov	rcx, qword ptr [r12 + 0x28]
0x12226:	mov	rsi, r12
0x12229:	mov	r8, qword ptr [rsp + 8]
0x1222e:	mov	rdi, r14
0x12231:	mov	qword ptr [rcx + rdx*8], rax
0x12235:	mov	rcx, qword ptr [rsp + 0x30]
0x1223a:	add	rdx, 1
0x1223e:	mov	qword ptr [rax], rbp
0x12241:	mov	qword ptr [rax + 8], rbx
0x12245:	mov	qword ptr [r12 + 0x20], rdx
0x1224a:	mov	rdx, rax
0x1224d:	call	0x119b0


0x12252:	cmp	eax, 1
0x12255:	mov	r11, qword ptr [r14 + 8]
0x12259:	ja	0x11ec8


0x1229e:	test	rax, rax
0x122a1:	mov	rsi, rax
0x122a4:	mov	qword ptr [r12 + 0x10], rax
0x122a9:	mov	rcx, qword ptr [rsp + 0x10]
0x122ae:	mov	r11, qword ptr [rsp + 0x18]
0x122b3:	jne	0x121c2


0xdc81:	mov	r8, qword ptr [rsp + 8]
0xdc86:	mov	r9, qword ptr [rsp + 0x10]
0xdc8b:	test	rax, rax
0xdc8e:	mov	qword ptr [r9 + r8*8], rax
0xdc92:	je	0xdcd1


0xdc94:	add	r8, 1
0xdc98:	add	rbx, 1
0xdc9c:	mov	rcx, qword ptr [rsp + 0x18]
0xdca1:	mov	qword ptr [r15 + 0xe8], r8
0xdca8:	cmp	rbx, qword ptr [r12]
0xdcac:	mov	qword ptr [rax + 8], rbp
0xdcb0:	mov	qword ptr [rax], rcx
0xdcb3:	jl	0xdc1e


0xd36f:	test	rax, rax
0xd372:	mov	r14, rax
0xd375:	je	0xd4b6


0xd4b6:	mov	rax, qword ptr [rsp + 0x18]
0xd4bb:	xor	r14d, r14d
0xd4be:	mov	dword ptr [rax], 0xc
0xd4c4:	jmp	0xd34c


0xd37b:	lea	rax, [rax + 8]
0xd37f:	mov	rsi, rbp
0xd382:	mov	rdi, rax
0xd385:	mov	rbx, rax
0xd388:	call	0xd0b0


0xd38d:	test	eax, eax
0xd38f:	jne	0xd54d


0xd395:	movzx	eax, byte ptr [r14 + 0x68]
0xd39a:	movzx	edx, byte ptr [rsp + 4]
0xd39f:	mov	qword ptr [r14 + 0x50], rbx
0xd3a3:	and	edx, 0xf
0xd3a6:	and	eax, 0xfffffff0
0xd3a9:	or	eax, edx
0xd3ab:	cmp	qword ptr [rbp + 8], 0
0xd3b0:	mov	byte ptr [r14 + 0x68], al
0xd3b4:	jle	0xd498


0xd54d:	mov	rdi, r14
0xd550:	call	0x1c60


0xd498:	mov	rdx, r12
0xd49b:	mov	rsi, r14
0xd49e:	mov	rdi, r13
0xd4a1:	call	0xab40


0xd3ba:	lea	rcx, [r14 + 0x18]
0xd3be:	xor	r15d, r15d
0xd3c1:	mov	qword ptr [rsp + 0x10], r12
0xd3c6:	xor	r10d, r10d
0xd3c9:	mov	r12, r13
0xd3cc:	mov	r13, r15
0xd3cf:	mov	qword ptr [rsp + 8], rcx
0xd3d4:	mov	r15, rbx
0xd3d7:	nop	word ptr [rax + rax]
0xd3e0:	mov	rax, qword ptr [rbp + 0x10]
0xd3e4:	mov	rax, qword ptr [rax + r13*8]
0xd3e8:	shl	rax, 4
0xd3ec:	add	rax, qword ptr [r12]
0xd3f0:	movzx	esi, byte ptr [rax + 8]
0xd3f4:	mov	ebx, dword ptr [rax + 8]
0xd3f7:	shr	ebx, 8
0xd3fa:	and	bx, 0x3ff
0xd3ff:	cmp	esi, 1
0xd402:	movzx	edi, bx
0xd405:	jne	0xd40b


0xd407:	test	edi, edi
0xd409:	je	0xd482


0xd40b:	movzx	edx, byte ptr [r14 + 0x68]
0xd410:	movzx	eax, byte ptr [rax + 0xa]
0xd414:	mov	r9d, edx
0xd417:	shr	al, 4
0xd41a:	and	edx, 0xffffffdf
0xd41d:	shr	r9b, 5
0xd421:	or	eax, r9d
0xd424:	and	eax, 1
0xd427:	shl	eax, 5
0xd42a:	or	eax, edx
0xd42c:	cmp	esi, 2
0xd42f:	mov	byte ptr [r14 + 0x68], al
0xd433:	je	0xd500


0xd482:	add	r13, 1
0xd486:	cmp	r13, qword ptr [rbp + 8]
0xd48a:	jl	0xd3e0


0xd500:	or	eax, 0x10
0xd503:	mov	byte ptr [r14 + 0x68], al
0xd507:	jmp	0xd445


0xd439:	cmp	esi, 4
0xd43c:	jne	0xd445


0xd3e0:	mov	rax, qword ptr [rbp + 0x10]
0xd3e4:	mov	rax, qword ptr [rax + r13*8]
0xd3e8:	shl	rax, 4
0xd3ec:	add	rax, qword ptr [r12]
0xd3f0:	movzx	esi, byte ptr [rax + 8]
0xd3f4:	mov	ebx, dword ptr [rax + 8]
0xd3f7:	shr	ebx, 8
0xd3fa:	and	bx, 0x3ff
0xd3ff:	cmp	esi, 1
0xd402:	movzx	edi, bx
0xd405:	jne	0xd40b


0xd490:	mov	r13, r12
0xd493:	mov	r12, qword ptr [rsp + 0x10]
0xd498:	mov	rdx, r12
0xd49b:	mov	rsi, r14
0xd49e:	mov	rdi, r13
0xd4a1:	call	0xab40


0xd445:	test	edi, edi
0xd447:	je	0xd482


0xd43e:	or	eax, 0x40
0xd441:	mov	byte ptr [r14 + 0x68], al
0xd445:	test	edi, edi
0xd447:	je	0xd482


0xd449:	cmp	r15, qword ptr [r14 + 0x50]
0xd44d:	je	0xd510


0xd510:	mov	edi, 0x18
0xd515:	call	0x1f20


0xd453:	test	bl, 1
0xd456:	je	0xd4d0


0xd4d0:	test	bl, 2
0xd4d3:	je	0xd4dc


0xd458:	test	byte ptr [rsp + 4], 1
0xd45d:	je	0xd468


0xd4dc:	test	bl, 0x10
0xd4df:	je	0xd4e8


0xd4d5:	test	byte ptr [rsp + 4], 1
0xd4da:	jne	0xd468


0xd468:	mov	rdx, r13
0xd46b:	sub	rdx, r10
0xd46e:	js	0xd47e


0xd45f:	test	bl, 2
0xd462:	je	0xd4dc


0xd4e8:	and	ebx, 0x40
0xd4eb:	je	0xd482


0xd4e1:	test	byte ptr [rsp + 4], 2
0xd4e6:	je	0xd468


0xd47e:	add	r10, 1
0xd482:	add	r13, 1
0xd486:	cmp	r13, qword ptr [rbp + 8]
0xd48a:	jl	0xd3e0


0xd470:	mov	rsi, qword ptr [rsp + 8]
0xd475:	lea	rdi, [r14 + 0x10]
0xd479:	call	0xc0d0


0xd4ed:	test	byte ptr [rsp + 4], 4
0xd4f2:	jne	0xd482


0xd4f4:	jmp	0xd468


0xd555:	jmp	0xd4b6


0xd605:	test	rax, rax
0xd608:	mov	rbx, rax
0xd60b:	je	0xd738


0xd738:	mov	dword ptr [r13], 0xc
0xd740:	xor	ebx, ebx
0xd742:	jmp	0xd6ef


0xd611:	lea	r15, [rax + 8]
0xd615:	mov	rsi, r14
0xd618:	mov	rdi, r15
0xd61b:	call	0xd0b0


0xd620:	test	eax, eax
0xd622:	jne	0xd730


0xd628:	mov	rax, qword ptr [r14 + 8]
0xd62c:	mov	qword ptr [rbx + 0x50], r15
0xd630:	test	rax, rax
0xd633:	jle	0xd6dd


0xd730:	mov	rdi, rbx
0xd733:	call	0x1c60


0xd6dd:	mov	rdx, rbp
0xd6e0:	mov	rsi, rbx
0xd6e3:	mov	rdi, r12
0xd6e6:	call	0xab40


0xd639:	mov	rsi, qword ptr [r14 + 0x10]
0xd63d:	mov	r8, qword ptr [r12]
0xd641:	lea	r9, [rsi + rax*8]
0xd645:	jmp	0xd694


0xd694:	mov	rax, qword ptr [rsi]
0xd697:	shl	rax, 4
0xd69b:	add	rax, r8
0xd69e:	movzx	edi, byte ptr [rax + 8]
0xd6a2:	cmp	edi, 1
0xd6a5:	jne	0xd650


0xd6a7:	test	dword ptr [rax + 8], 0x3ff00
0xd6ae:	je	0xd68b


0xd650:	movzx	ecx, byte ptr [rbx + 0x68]
0xd654:	movzx	edx, byte ptr [rax + 0xa]
0xd658:	mov	r10d, ecx
0xd65b:	shr	dl, 4
0xd65e:	and	ecx, 0xffffffdf
0xd661:	shr	r10b, 5
0xd665:	or	edx, r10d
0xd668:	and	edx, 1
0xd66b:	shl	edx, 5
0xd66e:	or	edx, ecx
0xd670:	cmp	edi, 2
0xd673:	mov	byte ptr [rbx + 0x68], dl
0xd676:	je	0xd708


0xd68b:	add	rsi, 8
0xd68f:	cmp	r9, rsi
0xd692:	je	0xd6dd


0xd6b0:	movzx	edx, byte ptr [rbx + 0x68]
0xd6b4:	movzx	eax, byte ptr [rax + 0xa]
0xd6b8:	mov	ecx, edx
0xd6ba:	shr	al, 4
0xd6bd:	and	edx, 0xffffffdf
0xd6c0:	shr	cl, 5
0xd6c3:	or	eax, ecx
0xd6c5:	and	eax, 1
0xd6c8:	shl	eax, 5
0xd6cb:	or	eax, edx
0xd6cd:	mov	byte ptr [rbx + 0x68], al
0xd6d0:	add	rsi, 8
0xd6d4:	or	byte ptr [rbx + 0x68], 0x80
0xd6d8:	cmp	r9, rsi
0xd6db:	jne	0xd694


0xd708:	or	edx, 0x10
0xd70b:	mov	byte ptr [rbx + 0x68], dl
0xd70e:	jmp	0xd68b


0xd67c:	cmp	edi, 4
0xd67f:	jne	0xd718


0xd685:	or	edx, 0x40
0xd688:	mov	byte ptr [rbx + 0x68], dl
0xd68b:	add	rsi, 8
0xd68f:	cmp	r9, rsi
0xd692:	je	0xd6dd


0xd718:	cmp	edi, 0xc
0xd71b:	je	0xd6d0


0xd6d0:	add	rsi, 8
0xd6d4:	or	byte ptr [rbx + 0x68], 0x80
0xd6d8:	cmp	r9, rsi
0xd6db:	jne	0xd694


0xd71d:	test	dword ptr [rax + 8], 0x3ff00
0xd724:	je	0xd68b


0xd72a:	jmp	0xd6d0


0x9aaf:	test	rax, rax
0x9ab2:	je	0x9ab9


0x9ab4:	add	rsp, 8
0x9ab8:	ret	


0xffab:	test	rax, rax
0xffae:	je	0x10170


0x10170:	mov	rax, qword ptr [rsp + 8]
0x10175:	xor	r14d, r14d
0x10178:	mov	dword ptr [rax], 0xc
0x1017e:	jmp	0x10122


0xffb4:	mov	esi, 1
0xffb9:	mov	edi, 0x50
0xffbe:	mov	rbx, rax
0xffc1:	call	0x1ec0


0x10122:	mov	rdi, qword ptr [rsp + 0x48]
0x10127:	xor	rdi, qword ptr fs:[0x28]
0x10130:	mov	rax, r14
0x10133:	jne	0x101c5


0x10139:	add	rsp, 0x58
0x1013d:	pop	rbx
0x1013e:	pop	rbp
0x1013f:	pop	r12
0x10141:	pop	r13
0x10143:	pop	r14
0x10145:	pop	r15
0x10147:	ret	


0x101c5:	call	0x1db0


0xffc6:	test	rax, rax
0xffc9:	mov	r15, rax
0xffcc:	je	0x10180


0x10180:	mov	rdi, rbx
0x10183:	xor	r14d, r14d
0x10186:	call	0x1c60


0xffd2:	movzx	eax, byte ptr [rax + 0x20]
0xffd6:	sub	rsp, 8
0xffda:	mov	edx, r12d
0xffdd:	push	0
0xffdf:	and	edx, 1
0xffe2:	mov	rdi, qword ptr [rsp + 0x10]
0xffe7:	lea	rcx, [r15 + 0x48]
0xffeb:	mov	r9, r14
0xffee:	mov	rsi, rbx
0xfff1:	lea	r8, [rsp + 0x28]
0xfff6:	and	eax, 0xfffffffe
0xfff9:	or	eax, edx
0xfffb:	lea	rdx, [r15 + 0x18]
0xffff:	mov	byte ptr [r15 + 0x20], al
0x10003:	call	0xf750


0x10008:	test	eax, eax
0x1000a:	pop	rdx
0x1000b:	pop	rcx
0x1000c:	jne	0x101a0


0x10012:	movsx	rcx, byte ptr [r13]
0x10017:	mov	esi, 1
0x1001c:	test	cl, cl
0x1001e:	je	0x1005a


0x101a0:	mov	rdi, rbx
0x101a3:	mov	dword ptr [rsp], eax
0x101a6:	xor	r14d, r14d
0x101a9:	call	0x1c60


0x1005a:	test	r12b, r12b
0x1005d:	je	0x10072


0x10020:	lea	rax, [rcx + 0x3f]
0x10024:	test	rcx, rcx
0x10027:	mov	rdx, rcx
0x1002a:	cmovns	rax, rcx
0x1002e:	sar	rdx, 0x3f
0x10032:	add	r13, 1
0x10036:	shr	rdx, 0x3a
0x1003a:	sar	rax, 6
0x1003e:	add	rcx, rdx
0x10041:	and	ecx, 0x3f
0x10044:	sub	rcx, rdx
0x10047:	mov	rdx, rsi
0x1004a:	shl	rdx, cl
0x1004d:	movsx	rcx, byte ptr [r13]
0x10052:	or	qword ptr [rbx + rax*8], rdx
0x10056:	test	cl, cl
0x10058:	jne	0x10020


0x10072:	cmp	dword ptr [rbp + 0xb4], 1
0x10079:	jle	0x10093


0x1005f:	lea	rdx, [rbx + 0x20]
0x10063:	mov	rax, rbx
0x10066:	not	qword ptr [rax]
0x10069:	add	rax, 8
0x1006d:	cmp	rdx, rax
0x10070:	jne	0x10066


0x10093:	lea	r9, [rsp + 0x20]
0x10098:	lea	r12, [rbp + 0x70]
0x1009c:	lea	r13, [rbp + 0x80]
0x100a3:	xor	ecx, ecx
0x100a5:	xor	edx, edx
0x100a7:	mov	byte ptr [rsp + 0x28], 3
0x100ac:	mov	r8, r9
0x100af:	mov	rsi, r13
0x100b2:	mov	rdi, r12
0x100b5:	mov	qword ptr [rsp + 0x20], rbx
0x100ba:	mov	qword ptr [rsp], r9
0x100be:	call	0xcc10


0x1007b:	mov	rcx, qword ptr [rbp + 0x78]
0x1007f:	xor	eax, eax
0x10081:	mov	rdx, qword ptr [rcx + rax]
0x10085:	and	qword ptr [rbx + rax], rdx
0x10089:	add	rax, 8
0x1008d:	cmp	rax, 0x20
0x10091:	jne	0x10081


0x10066:	not	qword ptr [rax]
0x10069:	add	rax, 8
0x1006d:	cmp	rdx, rax
0x10070:	jne	0x10066


0x10081:	mov	rdx, qword ptr [rcx + rax]
0x10085:	and	qword ptr [rbx + rax], rdx
0x10089:	add	rax, 8
0x1008d:	cmp	rax, 0x20
0x10091:	jne	0x10081


0x100c3:	test	rax, rax
0x100c6:	mov	r14, rax
0x100c9:	je	0x10160


0x10160:	mov	rdi, rbx
0x10163:	call	0x1c60


0x100cf:	cmp	dword ptr [rbp + 0xb4], 1
0x100d6:	jle	0x10150


0x10150:	mov	rdi, r15
0x10153:	call	0xb670


0x100d8:	or	byte ptr [rbp + 0xb0], 2
0x100df:	mov	r9, qword ptr [rsp]
0x100e3:	xor	ecx, ecx
0x100e5:	xor	edx, edx
0x100e7:	mov	rsi, r13
0x100ea:	mov	rdi, r12
0x100ed:	mov	byte ptr [rsp + 0x28], 6
0x100f2:	mov	qword ptr [rsp + 0x20], r15
0x100f7:	mov	r8, r9
0x100fa:	call	0xcc10


0x100ff:	test	rax, rax
0x10102:	je	0x10160


0x10104:	lea	r8, [rsp + 0x30]
0x10109:	mov	rdx, r14
0x1010c:	mov	rcx, rax
0x1010f:	mov	rsi, r13
0x10112:	mov	rdi, r12
0x10115:	mov	byte ptr [rsp + 0x38], 0xa
0x1011a:	call	0xcc10


0x1011f:	mov	r14, rax
0x10122:	mov	rdi, qword ptr [rsp + 0x48]
0x10127:	xor	rdi, qword ptr fs:[0x28]
0x10130:	mov	rax, r14
0x10133:	jne	0x101c5


0x10168:	mov	rdi, r15
0x1016b:	call	0xb670


0x101ae:	mov	rdi, r15
0x101b1:	call	0xb670


0x1018b:	mov	rax, qword ptr [rsp + 8]
0x10190:	mov	dword ptr [rax], 0xc
0x10196:	jmp	0x10122


0x17c3a:	test	eax, eax
0x17c3c:	je	0x17c68


0x17c68:	xor	eax, eax
0x17c6a:	add	rsp, 8
0x17c6e:	ret	


0x17c3e:	lea	rdx, [rip + 0x50db]
0x17c45:	cdqe	
0x17c47:	lea	rsi, [rip + 0x5172]
0x17c4e:	xor	edi, edi
0x17c50:	add	rsi, qword ptr [rdx + rax*8]
0x17c54:	mov	edx, 5
0x17c59:	add	rsp, 8
0x17c5d:	jmp	0x1d80


0xd51a:	test	rax, rax
0xd51d:	mov	qword ptr [r14 + 0x50], rax
0xd521:	je	0xd4ae


0xd4ae:	mov	rdi, r14
0xd4b1:	call	0xbbe0


0xd523:	mov	rsi, rbp
0xd526:	mov	rdi, rax
0xd529:	call	0xd0b0


0xd52e:	test	eax, eax
0xd530:	jne	0xd4b6


0xd532:	or	byte ptr [r14 + 0x68], 0x80
0xd537:	xor	r10d, r10d
0xd53a:	jmp	0xd453


0x11573:	test	rax, rax
0x11576:	mov	qword ptr [r15 + 0x10], rax
0x1157a:	je	0x115a2


0x115a2:	mov	rdi, qword ptr [rbp - 0x60]
0x115a6:	call	0x1c60


0x1157c:	mov	rdx, r14
0x1157f:	mov	rsi, r13
0x11582:	mov	rdi, rax
0x11585:	call	0x1ee0


0x1158a:	mov	rsi, qword ptr [rbp - 0xa8]
0x11591:	lea	rdi, [r15 + 0x18]
0x11595:	call	0xd0b0


0x1159a:	test	eax, eax
0x1159c:	je	0x112ac


0x115ab:	cmp	byte ptr [rbp - 0xc9], 0
0x115b2:	jne	0x1194b


0x132ab:	test	rax, rax
0x132ae:	mov	r12, rax
0x132b1:	je	0x139e0


0x132b7:	cmp	qword ptr [r15 + 0x98], 0
0x132bf:	je	0x13b55


0x13b55:	pxor	xmm0, xmm0
0x13b59:	mov	qword ptr [rsp + 0xe0], rax
0x13b61:	mov	rdi, qword ptr [rsp]
0x13b65:	mov	rax, qword ptr [rsp + 0x20]
0x13b6a:	lea	rbx, [rsp + 0xe0]
0x13b72:	mov	qword ptr [rsp + 0xe8], 0
0x13b7e:	mov	qword ptr [rsp + 0xf0], r13
0x13b86:	mov	rsi, rbx
0x13b89:	mov	qword ptr [rsp + 0x110], 0
0x13b95:	movaps	xmmword ptr [rsp + 0x100], xmm0
0x13b9d:	mov	qword ptr [rsp + 0xf8], rax
0x13ba5:	call	0x12630


0x132c5:	mov	rdi, rbx
0x132c8:	call	0x1f20


0x132cd:	test	rax, rax
0x132d0:	mov	rbp, rax
0x132d3:	je	0x139d8


0x139d8:	mov	rdi, r12
0x139db:	call	0x1c60


0x132d9:	mov	r14, qword ptr [rsp + 0x20]
0x132de:	lea	rbx, [rsp + 0xe0]
0x132e6:	mov	qword ptr [rsp + 0x10], r15
0x132eb:	mov	qword ptr [rsp + 0x18], rax
0x132f0:	mov	rax, qword ptr [rsp + 8]
0x132f5:	xor	esi, esi
0x132f7:	mov	rdi, rbp
0x132fa:	lea	rdx, [rax*8]
0x13302:	call	0x1e40


0x13307:	pxor	xmm0, xmm0
0x1330b:	mov	qword ptr [rsp + 0xe0], r12
0x13313:	mov	qword ptr [rsp + 0xe8], rbp
0x1331b:	mov	qword ptr [rsp + 0xf0], r13
0x13323:	mov	rsi, rbx
0x13326:	mov	qword ptr [rsp + 0xf8], r14
0x1332e:	mov	rdi, qword ptr [rsp]
0x13332:	movaps	xmmword ptr [rbx + 0x20], xmm0
0x13336:	mov	qword ptr [rbx + 0x30], 0
0x1333e:	call	0x12630


0x10e25:	test	rax, rax
0x10e28:	mov	qword ptr [rsp + 0xa0], rax
0x10e30:	je	0x1107b


0x10e36:	mov	qword ptr [rax], rbx
0x10e39:	mov	ecx, dword ptr [rsp + 0x110]
0x10e40:	lea	rbx, [rsp + 0x90]
0x10e48:	mov	rdx, qword ptr [rsp + 0x48]
0x10e4d:	mov	rdi, qword ptr [rsp + 0x30]
0x10e52:	mov	r12, rbp
0x10e55:	mov	rsi, rbx
0x10e58:	mov	dword ptr [rsp + 0x88], 0
0x10e63:	call	0xc900


0xdabd:	test	rax, rax
0xdac0:	mov	qword ptr [rsp + 0x60], rax
0xdac5:	je	0xdbbd


0xdbbd:	mov	qword ptr [rsp + 0x58], 0
0xdbc6:	mov	qword ptr [rsp + 0x50], 0
0xdbcf:	mov	eax, 0xc
0xdbd4:	jmp	0xdad0


0xdacb:	mov	qword ptr [rax], r14
0xdace:	xor	eax, eax
0xdad0:	mov	r15, qword ptr [rsp + 0x10]
0xdad5:	mov	rdx, qword ptr [rsp + 0x20]
0xdada:	mov	rdi, r13
0xdadd:	mov	ecx, dword ptr [rsp + 0x2c]
0xdae1:	mov	dword ptr [rsp + 0x4c], eax
0xdae5:	mov	rsi, r15
0xdae8:	call	0xc900


0xdad0:	mov	r15, qword ptr [rsp + 0x10]
0xdad5:	mov	rdx, qword ptr [rsp + 0x20]
0xdada:	mov	rdi, r13
0xdadd:	mov	ecx, dword ptr [rsp + 0x2c]
0xdae1:	mov	dword ptr [rsp + 0x4c], eax
0xdae5:	mov	rsi, r15
0xdae8:	call	0xc900


0xdb51:	test	rax, rax
0xdb54:	mov	qword ptr [rsp + 0x60], rax
0xdb59:	je	0xdb9c


0xdb5b:	mov	rdi, qword ptr [rsp + 8]
0xdb60:	mov	dword ptr [rsp + 0x4c], 0
0xdb68:	mov	r10, qword ptr [rsp + 0x18]
0xdb6d:	mov	qword ptr [rax], rdi
0xdb70:	jmp	0xd9fe


0xd9fe:	mov	rdx, qword ptr [rsp + 0x10]
0xda03:	mov	rdi, qword ptr [rsp + 0x38]
0xda08:	mov	rsi, r13
0xda0b:	mov	qword ptr [rsp + 8], r10
0xda10:	call	0xd560


0x12d31:	test	rax, rax
0x12d34:	mov	rdi, rax
0x12d37:	mov	qword ptr [rsp + 0x1d8], rax
0x12d3f:	je	0x13a30


0x12cae:	mov	rdi, r14
0x12cb1:	mov	r15, rax
0x12cb4:	mov	qword ptr [rsp + 0x1f8], rax
0x12cbc:	shl	rdi, 4
0x12cc0:	call	0x1f20


0x12cc5:	test	rax, rax
0x12cc8:	mov	qword ptr [rsp + 0x218], rax
0x12cd0:	je	0x139e0


0x12cd6:	test	r15, r15
0x12cd9:	je	0x139e0


0x143be:	mov	rdx, qword ptr [rsp + 0x20]
0x143c3:	test	rax, rax
0x143c6:	mov	qword ptr [rdx + 0x48], rax
0x143ca:	je	0x14413


0x14413:	mov	eax, 0xc
0x14418:	jmp	0x14138


0x143cc:	cmp	qword ptr [rbx + 8], 0
0x143d1:	mov	dword ptr [rsp + 0x60], 0
0x143d9:	jg	0x143ee


0x143db:	jmp	0x1419c


0x143ee:	mov	rax, qword ptr [rbx + 0x10]
0x143f2:	mov	rdi, r14
0x143f5:	mov	rax, qword ptr [rax + r15*8]
0x143f9:	lea	rdx, [rax + rax*2]
0x143fd:	mov	rax, qword ptr [r12 + 0x38]
0x14402:	lea	rsi, [rax + rdx*8]
0x14406:	call	0xc470


0x1440b:	test	eax, eax
0x1440d:	mov	dword ptr [rsp + 0x60], eax
0x14411:	je	0x143e0


0x143e0:	add	r15, 1
0x143e4:	cmp	r15, qword ptr [rbx + 8]
0x143e8:	jge	0x1419c


0x17e28:	test	rax, rax
0x17e2b:	mov	rbp, rax
0x17e2e:	je	0x180c0


0x180c0:	mov	r12, -2
0x180c7:	jmp	0x17e82


0x17e34:	sub	rsp, 8
0x17e38:	mov	rcx, rbx
0x17e3b:	mov	rdi, r15
0x17e3e:	mov	eax, dword ptr [rsp + 0x34]
0x17e42:	push	rax
0x17e43:	push	rbp
0x17e44:	push	r14
0x17e46:	mov	r9, qword ptr [rsp + 0x40]
0x17e4b:	mov	r8, qword ptr [rsp + 0x28]
0x17e50:	mov	rdx, qword ptr [rsp + 0x38]
0x17e55:	mov	rsi, qword ptr [rsp + 0x30]
0x17e5a:	call	0x12970


0x17e5f:	add	rsp, 0x20
0x17e63:	test	eax, eax
0x17e65:	je	0x17e98


0x17e98:	test	r12, r12
0x17e9b:	je	0x17f68


0x17e67:	cmp	eax, 1
0x17e6a:	mov	r12, -1
0x17e71:	je	0x17e7a


0x17f68:	cmp	byte ptr [rsp + 0x28], 0
0x17f6d:	mov	r12, qword ptr [rbp]
0x17f71:	je	0x17e7a


0x17ea1:	movzx	eax, byte ptr [r15 + 0x38]
0x17ea6:	lea	rdx, [r13 + 1]
0x17eaa:	shr	al, 1
0x17eac:	and	eax, 3
0x17eaf:	je	0x18020


0x17e7a:	mov	rdi, rbp
0x17e7d:	call	0x1c60


0x17e73:	mov	r12, -2
0x17e7a:	mov	rdi, rbp
0x17e7d:	call	0x1c60


0x17f77:	cmp	r12, rbx
0x17f7a:	jne	0x18172


0x18020:	lea	r14, [rdx*8]
0x18028:	mov	qword ptr [rsp + 8], rdx
0x1802d:	mov	rdi, r14
0x18030:	call	0x1f20


0x17eb5:	cmp	eax, 1
0x17eb8:	je	0x180d0


0x17f80:	mov	r12, qword ptr [rbp + 8]
0x17f84:	sub	r12, rbx
0x17f87:	jmp	0x17e7a


0x18172:	lea	rcx, [rip + 0x4b17]
0x18179:	lea	rsi, [rip + 0x4550]
0x18180:	lea	rdi, [rip + 0x466c]
0x18187:	mov	edx, 0x1be
0x1818c:	call	0x1e30


0x180d0:	cmp	qword ptr [r12], rdx
0x180d4:	mov	r9d, 1
0x180da:	jae	0x17ed7


0x17ebe:	cmp	eax, 2
0x17ec1:	jne	0x181b0


0x180e0:	lea	rcx, [rdx*8]
0x180e8:	mov	rdi, qword ptr [r12 + 8]
0x180ed:	mov	byte ptr [rsp + 0x18], r9b
0x180f2:	mov	qword ptr [rsp + 0x10], rdx
0x180f7:	mov	rsi, rcx
0x180fa:	mov	qword ptr [rsp + 8], rcx
0x180ff:	call	0x1f90


0x17ed7:	test	r13, r13
0x17eda:	jle	0x18148


0x17ec7:	cmp	r14, qword ptr [r12]
0x17ecb:	ja	0x18191


0x181b0:	lea	rcx, [rip + 0x4ac9]
0x181b7:	lea	rsi, [rip + 0x4512]
0x181be:	lea	rdi, [rip + 0x45f9]
0x181c5:	mov	edx, 0x1f9
0x181ca:	call	0x1e30


0x18148:	xor	edx, edx
0x1814a:	xor	r13d, r13d
0x1814d:	jmp	0x17f1b


0x17ee0:	mov	r8, qword ptr [r12 + 8]
0x17ee5:	mov	rdi, qword ptr [r12 + 0x10]
0x17eea:	lea	rsi, [r13*8]
0x17ef2:	mov	rdx, r13
0x17ef5:	xor	eax, eax
0x17ef7:	nop	word ptr [rax + rax]
0x17f00:	mov	rcx, qword ptr [rbp + rax*2]
0x17f05:	mov	qword ptr [r8 + rax], rcx
0x17f09:	mov	rcx, qword ptr [rbp + rax*2 + 8]
0x17f0e:	mov	qword ptr [rdi + rax], rcx
0x17f12:	add	rax, 8
0x17f16:	cmp	rsi, rax
0x17f19:	jne	0x17f00


0x17ed1:	mov	r9d, 2
0x17ed7:	test	r13, r13
0x17eda:	jle	0x18148


0x18191:	lea	rcx, [rip + 0x4ae8]
0x18198:	lea	rsi, [rip + 0x4531]
0x1819f:	lea	rdi, [rip + 0x4635]
0x181a6:	mov	edx, 0x1fb
0x181ab:	call	0x1e30


0x17f1b:	cmp	qword ptr [r12], rdx
0x17f1f:	jbe	0x17f4d


0x17f00:	mov	rcx, qword ptr [rbp + rax*2]
0x17f05:	mov	qword ptr [r8 + rax], rcx
0x17f09:	mov	rcx, qword ptr [rbp + rax*2 + 8]
0x17f0e:	mov	qword ptr [rdi + rax], rcx
0x17f12:	add	rax, 8
0x17f16:	cmp	rsi, rax
0x17f19:	jne	0x17f00


0x17f4d:	movzx	eax, byte ptr [r15 + 0x38]
0x17f52:	lea	r13d, [r9 + r9]
0x17f56:	and	eax, 0xfffffff9
0x17f59:	or	eax, r13d
0x17f5c:	test	al, 6
0x17f5e:	mov	byte ptr [r15 + 0x38], al
0x17f62:	je	0x17e73


0x17f21:	mov	rsi, qword ptr [r12 + 0x10]
0x17f26:	mov	rcx, qword ptr [r12 + 8]
0x17f2b:	mov	rax, -1
0x17f32:	nop	word ptr [rax + rax]
0x17f38:	mov	qword ptr [rsi + rdx*8], rax
0x17f3c:	add	r13, 1
0x17f40:	mov	qword ptr [rcx + rdx*8], rax
0x17f44:	cmp	r13, qword ptr [r12]
0x17f48:	mov	rdx, r13
0x17f4b:	jb	0x17f38


0x17f38:	mov	qword ptr [rsi + rdx*8], rax
0x17f3c:	add	r13, 1
0x17f40:	mov	qword ptr [rcx + rdx*8], rax
0x17f44:	cmp	r13, qword ptr [r12]
0x17f48:	mov	rdx, r13
0x17f4b:	jb	0x17f38


0x18104:	test	rax, rax
0x18107:	mov	r14, rax
0x1810a:	je	0x1815a


0x1815a:	xor	r9d, r9d
0x1815d:	jmp	0x17f4d


0x1810c:	mov	rcx, qword ptr [rsp + 8]
0x18111:	mov	rdi, qword ptr [r12 + 0x10]
0x18116:	mov	rsi, rcx
0x18119:	call	0x1f90


0x1811e:	test	rax, rax
0x18121:	mov	rdx, qword ptr [rsp + 0x10]
0x18126:	movzx	r9d, byte ptr [rsp + 0x18]
0x1812c:	je	0x18162


0x18162:	mov	rdi, r14
0x18165:	call	0x1c60


0x1812e:	mov	qword ptr [r12 + 8], r14
0x18133:	mov	qword ptr [r12 + 0x10], rax
0x18138:	mov	qword ptr [r12], rdx
0x1813c:	jmp	0x17ed7


0x1816a:	xor	r9d, r9d
0x1816d:	jmp	0x17f4d


0x18035:	test	rax, rax
0x18038:	mov	qword ptr [r12 + 8], rax
0x1803d:	mov	rdx, qword ptr [rsp + 8]
0x18042:	je	0x1815a


0x18048:	mov	rdi, r14
0x1804b:	mov	qword ptr [rsp + 8], rdx
0x18050:	mov	qword ptr [rsp + 0x10], rax
0x18055:	call	0x1f20


0x1805a:	test	rax, rax
0x1805d:	mov	qword ptr [r12 + 0x10], rax
0x18062:	mov	rdx, qword ptr [rsp + 8]
0x18067:	mov	rcx, qword ptr [rsp + 0x10]
0x1806c:	je	0x18152


0x18152:	mov	rdi, rcx
0x18155:	call	0x1c60


0x18072:	mov	qword ptr [r12], rdx
0x18076:	mov	r9d, 1
0x1807c:	jmp	0x17ed7


0x18292:	test	rax, rax
0x18295:	mov	r13, rax
0x18298:	je	0x182d0


0x1829a:	mov	rsi, qword ptr [rsp + 8]
0x1829f:	mov	rdx, rbx
0x182a2:	mov	rdi, rax
0x182a5:	call	0x1ee0


0x182aa:	lea	rdi, [r13 + rbx]
0x182af:	mov	rsi, r14
0x182b2:	mov	rdx, rbp
0x182b5:	mov	r14, r13
0x182b8:	call	0x1ee0


0x182bd:	mov	rcx, qword ptr [rsp + 0x10]
0x182c2:	mov	r8d, dword ptr [rsp + 0x1c]
0x182c7:	jmp	0x18238


0xd18f:	test	rax, rax
0xd192:	mov	qword ptr [r12 + 0x10], rax
0xd197:	je	0xd288


0xd288:	mov	eax, 0xc
0xd28d:	jmp	0xd212


0xd19d:	mov	r9, qword ptr [rbx + 0x10]
0xd1a1:	mov	r8, qword ptr [rbp + 0x10]
0xd1a5:	xor	ebx, ebx
0xd1a7:	xor	ecx, ecx
0xd1a9:	xor	esi, esi
0xd1ab:	jmp	0xd1ce


0xd212:	pop	rbx
0xd213:	pop	rbp
0xd214:	pop	r12
0xd216:	pop	r13
0xd218:	pop	r14
0xd21a:	ret	


0xd1ce:	mov	rdx, qword ptr [r8 + rsi*8]
0xd1d2:	mov	rdi, qword ptr [r9 + rcx*8]
0xd1d6:	add	rbx, 1
0xd1da:	cmp	rdx, rdi
0xd1dd:	jle	0xd1b0


0xd1b0:	sete	dil
0xd1b4:	mov	qword ptr [rax + rbx*8 - 8], rdx
0xd1b9:	add	rsi, 1
0xd1bd:	movzx	edi, dil
0xd1c1:	add	rcx, rdi
0xd1c4:	cmp	r13, rsi
0xd1c7:	jle	0xd230


0xd1df:	add	rcx, 1
0xd1e3:	mov	qword ptr [rax + rbx*8 - 8], rdi
0xd1e8:	jmp	0xd1c4


0xd230:	cmp	r14, rcx
0xd233:	jg	0xd268


0xd1c9:	cmp	r14, rcx
0xd1cc:	jle	0xd248


0xd1c4:	cmp	r13, rsi
0xd1c7:	jle	0xd230


0xd235:	mov	qword ptr [r12 + 8], rbx
0xd23a:	xor	eax, eax
0xd23c:	pop	rbx
0xd23d:	pop	rbp
0xd23e:	pop	r12
0xd240:	pop	r13
0xd242:	pop	r14
0xd244:	ret	


0xd268:	sub	r14, rcx
0xd26b:	lea	rdi, [rax + rbx*8]
0xd26f:	lea	rsi, [r9 + rcx*8]
0xd273:	lea	rdx, [r14*8]
0xd27b:	add	rbx, r14
0xd27e:	call	0x1ee0


0xd248:	sub	r13, rsi
0xd24b:	lea	rdi, [rax + rbx*8]
0xd24f:	lea	rsi, [r8 + rsi*8]
0xd253:	lea	rdx, [r13*8]
0xd25b:	add	rbx, r13
0xd25e:	call	0x1ee0


0xd263:	jmp	0xd235


0xd283:	jmp	0xd235


0x11872:	test	rax, rax
0x11875:	mov	qword ptr [rbp - 0xc0], rax
0x1187c:	mov	byte ptr [rbp - 0xc9], 1
0x11883:	jne	0x11197


0x11889:	mov	rdi, qword ptr [rbp - 0x88]
0x11890:	test	rdi, rdi
0x11893:	je	0x1185c


0x11197:	mov	rdx, qword ptr [rbp - 0xb8]
0x1119e:	mov	rdi, qword ptr [rbp - 0xc0]
0x111a5:	mov	rsi, r13
0x111a8:	call	0x1ee0


0x11895:	call	0xf610


0x16be8:	test	r14, r14
0x16beb:	mov	qword ptr [rbx], rax
0x16bee:	je	0x178d5


0x178d5:	xor	ebp, ebp
0x178d7:	mov	esi, 1
0x178dc:	jmp	0x16c0d


0x16bf4:	mov	esi, 1
0x16bf9:	nop	dword ptr [rax]
0x16c00:	add	rsi, rsi
0x16c03:	cmp	qword ptr [rsp], rsi
0x16c07:	jae	0x16c00


0x16c0d:	mov	edi, 0x18
0x16c12:	call	0x1ec0


0x16c09:	lea	rbp, [rsi - 1]
0x16c0d:	mov	edi, 0x18
0x16c12:	call	0x1ec0


0x16c00:	add	rsi, rsi
0x16c03:	cmp	qword ptr [rsp], rsi
0x16c07:	jae	0x16c00


0x16c17:	mov	qword ptr [rbx + 0x88], rbp
0x16c1e:	mov	qword ptr [rbx + 0x40], rax
0x16c22:	call	0x1d90


0xaa61:	test	rax, rax
0xaa64:	mov	qword ptr [rbx + 0x10], rax
0xaa68:	je	0xaaf8


0xaaf8:	mov	qword ptr [rbx + 8], 0
0xab00:	mov	qword ptr [rbx], 0
0xab07:	jmp	0xaa3e


0xaa6e:	mov	qword ptr [rax], rbp
0xaa71:	add	rsp, 8
0xaa75:	mov	eax, 1
0xaa7a:	pop	rbx
0xaa7b:	pop	rbp
0xaa7c:	ret	


0xccb5:	test	rax, rax
0xccb8:	mov	rdi, rax
0xccbb:	je	0xccec


0xccec:	xor	eax, eax
0xccee:	jmp	0xcc8b


0xccbd:	mov	rax, qword ptr [rbx]
0xccc0:	mov	r10d, 1
0xccc6:	mov	qword ptr [rbx], rdi
0xccc9:	xor	r9d, r9d
0xcccc:	mov	r8, qword ptr [rsp + 0x18]
0xccd1:	mov	rcx, qword ptr [rsp + 0x10]
0xccd6:	mov	rdx, qword ptr [rsp + 8]
0xccdb:	mov	rsi, qword ptr [rsp]
0xccdf:	mov	qword ptr [rdi], rax
0xcce2:	mov	eax, 8
0xcce7:	jmp	0xcc34


0xcc34:	shl	r9, 6
0xcc38:	mov	dword ptr [rsi], r10d
0xcc3b:	add	rax, rdi
0xcc3e:	lea	rsi, [rdi + r9]
0xcc42:	mov	qword ptr [rsi + 8], 0
0xcc4a:	mov	qword ptr [rsi + 0x10], rdx
0xcc4e:	lea	rdi, [rsi + 0x20]
0xcc52:	mov	qword ptr [rsi + 0x18], rcx
0xcc56:	movdqu	xmm0, xmmword ptr [r8]
0xcc5b:	movups	xmmword ptr [rsi + 0x30], xmm0
0xcc5f:	and	byte ptr [rdi + 0x1a], 0xf3
0xcc63:	test	rdx, rdx
0xcc66:	mov	qword ptr [rsi + 0x20], 0
0xcc6e:	mov	qword ptr [rsi + 0x28], 0
0xcc76:	mov	qword ptr [rsi + 0x40], -1
0xcc7e:	je	0xcc83


0xd0db:	test	rax, rax
0xd0de:	mov	qword ptr [rbx + 0x10], rax
0xd0e2:	je	0xd120


0xd120:	mov	qword ptr [rbx + 8], 0
0xd128:	mov	qword ptr [rbx], 0
0xd12f:	mov	eax, 0xc
0xd134:	jmp	0xd0fa


0xd0e4:	mov	rsi, qword ptr [rbp + 0x10]
0xd0e8:	lea	rdx, [r12*8]
0xd0f0:	mov	rdi, rax
0xd0f3:	call	0x1ee0


0xd0fa:	pop	rbx
0xd0fb:	pop	rbp
0xd0fc:	pop	r12
0xd0fe:	ret	


0xd0f8:	xor	eax, eax
0xd0fa:	pop	rbx
0xd0fb:	pop	rbp
0xd0fc:	pop	r12
0xd0fe:	ret	


0x11125:	lea	rcx, [rbp - 0x50]
0x11129:	test	rax, rax
0x1112c:	mov	qword ptr [rbp - 0x40], rax
0x11130:	mov	qword ptr [rbp - 0x88], rcx
0x11137:	je	0x1185c


0x1abbf:	xor	edx, edx
0x1abc1:	test	rax, rax
0x1abc4:	je	0x1abdb


0x1abdb:	mov	rax, rdx
0x1abde:	add	rsp, 8
0x1abe2:	ret	


0x1abc6:	lea	rdx, [rax + 0x10]
0x1abca:	and	rdx, 0xffffffffffffffe0
0x1abce:	add	rdx, 0x10
0x1abd2:	mov	rcx, rdx
0x1abd5:	sub	rcx, rax
0x1abd8:	mov	byte ptr [rdx - 1], cl
0x1abdb:	mov	rax, rdx
0x1abde:	add	rsp, 8
0x1abe2:	ret	


0x98c9:	test	rax, rax
0x98cc:	jne	0x98d3


0x98ce:	test	rbx, rbx
0x98d1:	jne	0x98d5


0x98d3:	pop	rbx
0x98d4:	ret	


0x98d5:	call	0x9b10


0x9a79:	mov	rdx, rbx
0x9a7c:	xor	esi, esi
0x9a7e:	mov	rdi, rax
0x9a81:	pop	rbx
0x9a82:	jmp	0x1e40


0x9ad4:	add	rsp, 8
0x9ad8:	mov	rdx, rbx
0x9adb:	mov	rsi, rbp
0x9ade:	pop	rbx
0x9adf:	pop	rbp
0x9ae0:	mov	rdi, rax
0x9ae3:	jmp	0x1ee0


0xab75:	test	rax, rax
0xab78:	mov	qword ptr [rbp + 0x30], rax
0xab7c:	je	0xabbe


0xabbe:	pop	rbx
0xabbf:	mov	eax, 0xc
0xabc4:	pop	rbp
0xabc5:	pop	r12
0xabc7:	pop	r13
0xabc9:	pop	r14
0xabcb:	ret	


0xab7e:	test	rbx, rbx
0xab81:	jle	0xabd0


0xabd0:	and	r12, qword ptr [r14 + 0x88]
0xabd7:	mov	rax, qword ptr [r14 + 0x40]
0xabdb:	lea	rdx, [r12 + r12*2]
0xabdf:	lea	rbx, [rax + rdx*8]
0xabe3:	mov	rdx, qword ptr [rbx]
0xabe6:	cmp	qword ptr [rbx + 8], rdx
0xabea:	mov	rax, qword ptr [rbx + 0x10]
0xabee:	lea	rsi, [rdx + 1]
0xabf2:	jle	0xac06


0xab83:	xor	ebx, ebx
0xab85:	jmp	0xab9a


0xac06:	lea	r12, [rsi + rsi]
0xac0a:	mov	rdi, rax
0xac0d:	shl	rsi, 4
0xac11:	call	0x1f90


0xabf4:	mov	qword ptr [rbx], rsi
0xabf7:	mov	qword ptr [rax + rdx*8], rbp
0xabfb:	xor	eax, eax
0xabfd:	pop	rbx
0xabfe:	pop	rbp
0xabff:	pop	r12
0xac01:	pop	r13
0xac03:	pop	r14
0xac05:	ret	


0xab9a:	mov	rax, qword ptr [rbp + 0x18]
0xab9e:	mov	rsi, qword ptr [rax + rbx*8]
0xaba2:	mov	rax, rsi
0xaba5:	shl	rax, 4
0xaba9:	add	rax, qword ptr [r14]
0xabac:	test	byte ptr [rax + 8], 8
0xabb0:	jne	0xab90


0xabb2:	mov	rdi, r13
0xabb5:	call	0xa9a0


0xab90:	add	rbx, 1
0xab94:	cmp	qword ptr [rbp + 0x10], rbx
0xab98:	jle	0xabd0


0xabba:	test	al, al
0xabbc:	jne	0xab90


0xac16:	test	rax, rax
0xac19:	je	0xabbe


0xac1b:	mov	rdx, qword ptr [rbx]
0xac1e:	mov	qword ptr [rbx + 0x10], rax
0xac22:	mov	qword ptr [rbx + 8], r12
0xac26:	lea	rsi, [rdx + 1]
0xac2a:	jmp	0xabf4


0xd6eb:	test	eax, eax
0xd6ed:	jne	0xd744


0xd744:	mov	rdi, rbx
0xd747:	call	0xbbe0


0xd4a6:	test	eax, eax
0xd4a8:	je	0xd34c


0xc6ac:	test	rax, rax
0xc6af:	mov	qword ptr [rsp + 0x30], rax
0xc6b4:	je	0xc8f0


0xc8f0:	mov	eax, 0xc
0xc8f5:	jmp	0xc7f6


0xc6ba:	mov	rax, qword ptr [r15 + 0x30]
0xc6be:	mov	rdx, qword ptr [r15]
0xc6c1:	mov	r13, rbp
0xc6c4:	shl	r13, 4
0xc6c8:	mov	qword ptr [rax + rbx + 8], -1
0xc6d1:	lea	rax, [rdx + r13]
0xc6d5:	mov	r8d, dword ptr [rax + 8]
0xc6d9:	test	r8d, 0x3ff00
0xc6e0:	jne	0xc880


0xc7f6:	mov	rsi, qword ptr [rsp + 0x58]
0xc7fb:	xor	rsi, qword ptr fs:[0x28]
0xc804:	jne	0xc8fa


0xc6e6:	test	byte ptr [rax + 8], 8
0xc6ea:	je	0xc7b0


0xc880:	cmp	qword ptr [r12 + 8], 0
0xc886:	je	0xc7b0


0xc80a:	add	rsp, 0x68
0xc80e:	pop	rbx
0xc80f:	pop	rbp
0xc810:	pop	r12
0xc812:	pop	r13
0xc814:	pop	r14
0xc816:	pop	r15
0xc818:	ret	


0xc8fa:	call	0x1db0


0xc7b0:	lea	rdi, [rsp + 0x20]
0xc7b5:	mov	rsi, rbp
0xc7b8:	call	0xaa10


0xc6f0:	mov	rsi, qword ptr [r15 + 0x28]
0xc6f4:	lea	rax, [rsi + rbx]
0xc6f8:	cmp	qword ptr [rax + 8], 0
0xc6fd:	jle	0xc7b0


0xc88c:	mov	rcx, qword ptr [r12 + 0x10]
0xc891:	mov	rcx, qword ptr [rcx]
0xc894:	shl	rcx, 4
0xc898:	test	byte ptr [rdx + rcx + 0xa], 4
0xc89d:	jne	0xc6e6


0xc703:	lea	rdx, [rsp + 0x20]
0xc708:	mov	byte ptr [rsp + 0x1b], 0
0xc70d:	xor	r14d, r14d
0xc710:	lea	r12, [rsp + 0x40]
0xc715:	mov	qword ptr [rsp + 8], rdx
0xc71a:	jmp	0xc736


0xc8a3:	shr	r8d, 8
0xc8a7:	mov	rcx, rbp
0xc8aa:	mov	rdx, rbp
0xc8ad:	and	r8d, 0x3ff
0xc8b4:	mov	rsi, rbp
0xc8b7:	mov	rdi, r15
0xc8ba:	call	0xb960


0xc736:	mov	rax, qword ptr [rax + 0x10]
0xc73a:	mov	rdx, qword ptr [rax + r14*8]
0xc73e:	mov	rax, qword ptr [r15 + 0x30]
0xc742:	lea	r8, [rdx + rdx*2]
0xc746:	lea	r13, [r8*8]
0xc74e:	add	rax, r13
0xc751:	mov	rcx, qword ptr [rax + 8]
0xc755:	cmp	rcx, -1
0xc759:	je	0xc820


0xc820:	lea	rax, [rsi + rbx]
0xc824:	add	r14, 1
0xc828:	mov	byte ptr [rsp + 0x1b], 1
0xc82d:	cmp	qword ptr [rax + 8], r14
0xc831:	jg	0xc736


0xc75f:	test	rcx, rcx
0xc762:	je	0xc8d8


0xc837:	lea	rdi, [rsp + 0x20]
0xc83c:	mov	rsi, rbp
0xc83f:	call	0xaa10


0xc8d8:	mov	rsi, r15
0xc8db:	mov	rdi, r12
0xc8de:	call	0xc650


0xc768:	movdqu	xmm0, xmmword ptr [rax]
0xc76c:	movaps	xmmword ptr [rsp + 0x40], xmm0
0xc771:	mov	rax, qword ptr [rax + 0x10]
0xc775:	mov	qword ptr [rsp + 0x50], rax
0xc77a:	mov	rdi, qword ptr [rsp + 8]
0xc77f:	mov	rsi, r12
0xc782:	call	0xc470


0xc787:	test	eax, eax
0xc789:	jne	0xc7f6


0xc78b:	mov	rax, qword ptr [r15 + 0x30]
0xc78f:	cmp	qword ptr [rax + r13 + 8], 0
0xc795:	jne	0xc720


0xc797:	mov	rdi, qword ptr [rsp + 0x50]
0xc79c:	call	0x1c60


0xc720:	mov	rsi, qword ptr [r15 + 0x28]
0xc724:	add	r14, 1
0xc728:	lea	rax, [rsi + rbx]
0xc72c:	cmp	qword ptr [rax + 8], r14
0xc730:	jle	0xc837


0xc7a1:	mov	byte ptr [rsp + 0x1b], 1
0xc7a6:	jmp	0xc720


0xc8e3:	test	eax, eax
0xc8e5:	je	0xc77a


0xc77a:	mov	rdi, qword ptr [rsp + 8]
0xc77f:	mov	rsi, r12
0xc782:	call	0xc470


0xc8eb:	jmp	0xc7f6


0xc8bf:	test	eax, eax
0xc8c1:	jne	0xc7f6


0xc8c7:	mov	rax, qword ptr [r15]
0xc8ca:	add	rax, r13
0xc8cd:	jmp	0xc6e6


0xc844:	test	al, al
0xc846:	je	0xc8f0


0xc84c:	cmp	byte ptr [rsp + 0x1c], 1
0xc851:	mov	rax, qword ptr [r15 + 0x30]
0xc855:	lea	rdx, [rax + rbx]
0xc859:	je	0xc7c9


0xc7c9:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0xc7cf:	movups	xmmword ptr [rax + rbx], xmm0
0xc7d3:	mov	rdx, qword ptr [rsp + 0x30]
0xc7d8:	mov	qword ptr [rax + rbx + 0x10], rdx
0xc7dd:	mov	rbx, qword ptr [rsp + 0x10]
0xc7e2:	mov	rax, qword ptr [rsp + 0x30]
0xc7e7:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0xc7ed:	movaps	xmmword ptr [rbx], xmm0
0xc7f0:	mov	qword ptr [rbx + 0x10], rax
0xc7f4:	xor	eax, eax
0xc7f6:	mov	rsi, qword ptr [rsp + 0x58]
0xc7fb:	xor	rsi, qword ptr fs:[0x28]
0xc804:	jne	0xc8fa


0xc85f:	cmp	byte ptr [rsp + 0x1b], 0
0xc864:	je	0xc7c9


0xc86a:	mov	qword ptr [rdx + 8], 0
0xc872:	jmp	0xc7dd


0xc7dd:	mov	rbx, qword ptr [rsp + 0x10]
0xc7e2:	mov	rax, qword ptr [rsp + 0x30]
0xc7e7:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0xc7ed:	movaps	xmmword ptr [rbx], xmm0
0xc7f0:	mov	qword ptr [rbx + 0x10], rax
0xc7f4:	xor	eax, eax
0xc7f6:	mov	rsi, qword ptr [rsp + 0x58]
0xc7fb:	xor	rsi, qword ptr fs:[0x28]
0xc804:	jne	0xc8fa


0xc7bd:	test	al, al
0xc7bf:	je	0xc8f0


0xc7c5:	mov	rax, qword ptr [r15 + 0x30]
0xc7c9:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0xc7cf:	movups	xmmword ptr [rax + rbx], xmm0
0xc7d3:	mov	rdx, qword ptr [rsp + 0x30]
0xc7d8:	mov	qword ptr [rax + rbx + 0x10], rdx
0xc7dd:	mov	rbx, qword ptr [rsp + 0x10]
0xc7e2:	mov	rax, qword ptr [rsp + 0x30]
0xc7e7:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0xc7ed:	movaps	xmmword ptr [rbx], xmm0
0xc7f0:	mov	qword ptr [rbx + 0x10], rax
0xc7f4:	xor	eax, eax
0xc7f6:	mov	rsi, qword ptr [rsp + 0x58]
0xc7fb:	xor	rsi, qword ptr fs:[0x28]
0xc804:	jne	0xc8fa


0xc948:	test	rax, rax
0xc94b:	mov	qword ptr [rsp + 0x20], rax
0xc950:	je	0xca4d


0xca4d:	mov	eax, 0xc
0xca52:	jmp	0xca2e


0xc956:	test	r12, r12
0xc959:	jle	0xc9eb


0xca2e:	mov	rdx, qword ptr [rsp + 0x28]
0xca33:	xor	rdx, qword ptr fs:[0x28]
0xca3c:	jne	0xca54


0xc9eb:	mov	rdi, qword ptr [r15 + 0x10]
0xc9ef:	call	0x1c60


0xc95f:	lea	r12, [rsp + 0x10]
0xc964:	xor	r13d, r13d
0xc967:	nop	word ptr [rax + rax]
0xc970:	mov	rax, qword ptr [r15 + 0x10]
0xc974:	mov	rdx, qword ptr [rax + r13*8]
0xc978:	mov	rax, qword ptr [r14 + 0x30]
0xc97c:	lea	rcx, [rdx + rdx*2]
0xc980:	lea	rsi, [rax + rcx*8]
0xc984:	mov	r8, qword ptr [rsi + 8]
0xc988:	test	r8, r8
0xc98b:	jle	0xca10


0xca3e:	add	rsp, 0x38
0xca42:	pop	rbx
0xca43:	pop	rbp
0xca44:	pop	r12
0xca46:	pop	r13
0xca48:	pop	r14
0xca4a:	pop	r15
0xca4c:	ret	


0xca54:	call	0x1db0


0xca10:	mov	rdi, r12
0xca13:	call	0xc470


0xc991:	mov	r10, qword ptr [rsi + 0x10]
0xc995:	mov	r9, qword ptr [r14]
0xc998:	xor	ecx, ecx
0xc99a:	jmp	0xc9a9


0xc9a9:	mov	rdi, qword ptr [r10 + rcx*8]
0xc9ad:	mov	rax, rdi
0xc9b0:	shl	rax, 4
0xc9b4:	add	rax, r9
0xc9b7:	movzx	r11d, byte ptr [rax + 8]
0xc9bc:	cmp	ebx, r11d
0xc9bf:	jne	0xc9a0


0xc9c1:	cmp	rbp, qword ptr [rax]
0xc9c4:	jne	0xc9a0


0xc9a0:	add	rcx, 1
0xc9a4:	cmp	r8, rcx
0xc9a7:	je	0xca10


0xc9c6:	cmp	rdi, -1
0xc9ca:	je	0xca10


0xc9cc:	mov	r8d, ebx
0xc9cf:	mov	rcx, rbp
0xc9d2:	mov	rsi, r12
0xc9d5:	mov	rdi, r14
0xc9d8:	call	0xbfd0


0xc9dd:	test	eax, eax
0xc9df:	jne	0xca1c


0xc9e1:	add	r13, 1
0xc9e5:	cmp	qword ptr [r15 + 8], r13
0xc9e9:	jg	0xc970


0xca1c:	mov	rdi, qword ptr [rsp + 0x20]
0xca21:	mov	dword ptr [rsp + 0xc], eax
0xca25:	call	0x1c60


0xc970:	mov	rax, qword ptr [r15 + 0x10]
0xc974:	mov	rdx, qword ptr [rax + r13*8]
0xc978:	mov	rax, qword ptr [r14 + 0x30]
0xc97c:	lea	rcx, [rdx + rdx*2]
0xc980:	lea	rsi, [rax + rcx*8]
0xc984:	mov	r8, qword ptr [rsi + 8]
0xc988:	test	r8, r8
0xc98b:	jle	0xca10


0xca18:	test	eax, eax
0xca1a:	je	0xc9e1


0xca2a:	mov	eax, dword ptr [rsp + 0xc]
0xca2e:	mov	rdx, qword ptr [rsp + 0x28]
0xca33:	xor	rdx, qword ptr fs:[0x28]
0xca3c:	jne	0xca54


0xc9f4:	mov	rax, qword ptr [rsp + 0x20]
0xc9f9:	movdqa	xmm0, xmmword ptr [rsp + 0x10]
0xc9ff:	mov	qword ptr [r15 + 0x10], rax
0xca03:	xor	eax, eax
0xca05:	movaps	xmmword ptr [r15], xmm0
0xca09:	jmp	0xca2e


0xdaed:	mov	rsi, r15
0xdaf0:	mov	rdi, rbp
0xdaf3:	mov	r14d, eax
0xdaf6:	call	0xc470


0xdafb:	mov	rdi, qword ptr [rsp + 0x60]
0xdb00:	mov	r15d, eax
0xdb03:	call	0x1c60


0xdb08:	mov	eax, dword ptr [rsp + 0x4c]
0xdb0c:	mov	edx, r14d
0xdb0f:	or	edx, r15d
0xdb12:	or	edx, eax
0xdb14:	jne	0xdba6


0xdb1a:	mov	rcx, qword ptr [rbx + 0xd8]
0xdb21:	jmp	0xd963


0xdba6:	test	eax, eax
0xdba8:	jne	0xd8ff


0xd963:	mov	rax, qword ptr [rsp + 0x30]
0xd968:	lea	r15, [rcx + rax]
0xd96c:	jmp	0xda48


0xdbae:	test	r14d, r14d
0xdbb1:	mov	eax, r14d
0xdbb4:	cmove	eax, r15d
0xdbb8:	jmp	0xd8ff


0x10e68:	test	eax, eax
0x10e6a:	mov	dword ptr [rsp + 0x88], eax
0x10e71:	je	0x10f8d


0x10e77:	jmp	0x10ed0


0x10cd9:	test	eax, eax
0x10cdb:	mov	dword ptr [rsp + 0x88], eax
0x10ce2:	jne	0x10ed0


0x10ce8:	mov	r8d, dword ptr [rsp + 0x110]
0x10cf0:	mov	rcx, qword ptr [rsp + 0x48]
0x10cf5:	mov	rdx, rbx
0x10cf8:	mov	rsi, qword ptr [rsp + 8]
0x10cfd:	mov	rdi, r15
0x10d00:	call	0xd840


0x10d05:	test	eax, eax
0x10d07:	mov	dword ptr [rsp + 0x88], eax
0x10d0e:	jne	0x10ed0


0xea16:	test	rax, rax
0xea19:	mov	qword ptr [rsp + 0x18], rax
0xea1e:	je	0xedf0


0xedf0:	xor	eax, eax
0xedf2:	mov	rbx, qword ptr [rsp + 0xf8]
0xedfa:	xor	rbx, qword ptr fs:[0x28]
0xee03:	jne	0xf554


0xea24:	mov	rax, qword ptr [rsp + 0x18]
0xea29:	pxor	xmm0, xmm0
0xea2d:	lea	rbx, [rax + 0x1800]
0xea34:	mov	rax, qword ptr [rsp + 8]
0xea39:	movaps	xmmword ptr [rsp + 0x90], xmm0
0xea41:	mov	qword ptr [rsp + 0x40], rbx
0xea46:	movaps	xmmword ptr [rsp + 0xa0], xmm0
0xea4e:	cmp	qword ptr [rax + 0x10], 0
0xea53:	mov	qword ptr [rax + 0x58], 0
0xea5b:	mov	qword ptr [rax + 0x60], 0
0xea63:	jle	0xf4da


0xee09:	add	rsp, 0x108
0xee10:	pop	rbx
0xee11:	pop	rbp
0xee12:	pop	r12
0xee14:	pop	r13
0xee16:	pop	r14
0xee18:	pop	r15
0xee1a:	ret	


0xf554:	call	0x1db0


0xf4da:	mov	rdi, qword ptr [rsp + 0x18]
0xf4df:	call	0x1c60


0xea69:	mov	qword ptr [rsp + 0x30], r15
0xea6e:	xor	ebp, ebp
0xea70:	mov	qword ptr [rsp + 0x10], 0
0xea79:	mov	r15, rbx
0xea7c:	mov	rbx, qword ptr [rsp + 0x10]
0xea81:	lea	rax, [rbx*8]
0xea89:	mov	qword ptr [rsp + 0x20], rax
0xea8e:	mov	rax, qword ptr [rsp + 8]
0xea93:	mov	rax, qword ptr [rax + 0x18]
0xea97:	mov	r13, qword ptr [rax + rbx*8]
0xea9b:	mov	rax, qword ptr [rsp + 0x30]
0xeaa0:	shl	r13, 4
0xeaa4:	add	r13, qword ptr [rax]
0xeaa7:	movzx	r14d, byte ptr [r13 + 8]
0xeaac:	mov	eax, dword ptr [r13 + 8]
0xeab0:	shr	eax, 8
0xeab3:	and	ax, 0x3ff
0xeab7:	cmp	r14d, 1
0xeabb:	je	0xee20


0xee20:	movzx	ecx, byte ptr [r13]
0xee25:	lea	r12, [rsp + 0x90]
0xee2d:	mov	edi, 1
0xee32:	mov	rdx, rcx
0xee35:	and	ecx, 0x3f
0xee38:	shr	rdx, 3
0xee3c:	shl	rdi, cl
0xee3f:	and	edx, 0x18
0xee42:	or	qword ptr [r12 + rdx], rdi
0xee46:	test	ax, ax
0xee49:	je	0xef10


0xeac1:	cmp	r14d, 3
0xeac5:	je	0xf290


0xef10:	xor	ebx, ebx
0xef12:	test	rbp, rbp
0xef15:	jle	0xf07b


0xee4f:	test	al, 0x20
0xee51:	jne	0xf1c0


0xf290:	mov	rsi, qword ptr [r13]
0xf294:	lea	r12, [rsp + 0x90]
0xf29c:	xor	edx, edx
0xf29e:	mov	rcx, qword ptr [r12 + rdx]
0xf2a2:	or	rcx, qword ptr [rsi + rdx]
0xf2a6:	mov	qword ptr [r12 + rdx], rcx
0xf2aa:	add	rdx, 8
0xf2ae:	cmp	rdx, 0x20
0xf2b2:	jne	0xf29e


0xeacb:	cmp	r14d, 5
0xeacf:	je	0xf150


0xf07b:	cmp	rbp, rbx
0xf07e:	jne	0xeadf


0xef1b:	mov	qword ptr [rsp + 0x28], r13
0xef20:	mov	r13, r15
0xef23:	nop	dword ptr [rax + rax]
0xef28:	mov	r10, rbx
0xef2b:	shl	r10, 5
0xef2f:	cmp	r14d, 1
0xef33:	jne	0xef58


0xee57:	test	al, 0x80
0xee59:	jne	0xf0f4


0xf1c0:	mov	rdx, qword ptr [rsp + 0x90]
0xf1c8:	pxor	xmm0, xmm0
0xf1cc:	and	dh, 4
0xf1cf:	movaps	xmmword ptr [r12], xmm0
0xf1d4:	movaps	xmmword ptr [r12 + 0x10], xmm0
0xf1da:	je	0xeadf


0xf2b4:	jmp	0xee46


0xf29e:	mov	rcx, qword ptr [r12 + rdx]
0xf2a2:	or	rcx, qword ptr [rsi + rdx]
0xf2a6:	mov	qword ptr [r12 + rdx], rcx
0xf2aa:	add	rdx, 8
0xf2ae:	cmp	rdx, 0x20
0xf2b2:	jne	0xf29e


0xf150:	mov	rsi, qword ptr [rsp + 0x30]
0xf155:	cmp	dword ptr [rsi + 0xb4], 1
0xf15c:	jle	0xf265


0xead5:	cmp	r14d, 7
0xead9:	je	0xf2b9


0xf084:	mov	rax, rbp
0xf087:	movdqa	xmm0, xmmword ptr [rsp + 0x90]
0xf090:	shl	rax, 5
0xf094:	mov	rbx, qword ptr [rsp + 0x20]
0xf099:	mov	edi, 8
0xf09e:	add	rax, r15
0xf0a1:	movups	xmmword ptr [rax], xmm0
0xf0a4:	movdqa	xmm0, xmmword ptr [rsp + 0xa0]
0xf0ad:	movups	xmmword ptr [rax + 0x10], xmm0
0xf0b1:	mov	rax, qword ptr [rsp + 8]
0xf0b6:	mov	rax, qword ptr [rax + 0x18]
0xf0ba:	mov	r13, qword ptr [rax + rbx]
0xf0be:	mov	rbx, qword ptr [rsp + 0x18]
0xf0c3:	lea	rax, [rbp + rbp*2]
0xf0c8:	lea	rbx, [rbx + rax*8]
0xf0cc:	mov	qword ptr [rbx], 1
0xf0d3:	mov	qword ptr [rbx + 8], 1
0xf0db:	call	0x1f20


0xeadf:	mov	rbx, qword ptr [rsp + 8]
0xeae4:	add	qword ptr [rsp + 0x10], 1
0xeaea:	mov	rax, qword ptr [rsp + 0x10]
0xeaef:	cmp	rax, qword ptr [rbx + 0x10]
0xeaf3:	jl	0xea7c


0xef35:	mov	rax, qword ptr [rsp + 0x28]
0xef3a:	movzx	edx, byte ptr [rax]
0xef3d:	mov	rax, rdx
0xef40:	shr	rax, 3
0xef44:	and	eax, 0x18
0xef47:	add	rax, r13
0xef4a:	mov	rax, qword ptr [rax + r10]
0xef4e:	bt	rax, rdx
0xef52:	jae	0xf06b


0xef58:	lea	rdi, [r13 + r10]
0xef5d:	lea	rsi, [rsp + 0xb0]
0xef65:	xor	ecx, ecx
0xef67:	xor	eax, eax
0xef69:	mov	rdx, qword ptr [r12 + rax*8]
0xef6d:	and	rdx, qword ptr [rdi + rax*8]
0xef71:	mov	qword ptr [rsi + rax*8], rdx
0xef75:	add	rax, 1
0xef79:	or	rcx, rdx
0xef7c:	cmp	rax, 4
0xef80:	jne	0xef69


0xee5f:	test	al, 4
0xee61:	je	0xeeb5


0xf0f4:	pxor	xmm0, xmm0
0xf0f8:	movaps	xmmword ptr [r12], xmm0
0xf0fd:	movaps	xmmword ptr [r12 + 0x10], xmm0
0xf103:	jmp	0xeadf


0xf1e0:	mov	qword ptr [rsp + 0x90], 0x400
0xf1ec:	jmp	0xee57


0xee46:	test	ax, ax
0xee49:	je	0xef10


0xf265:	pcmpeqd	xmm0, xmm0
0xf269:	lea	r12, [rsp + 0x90]
0xf271:	movaps	xmmword ptr [rsp + 0x90], xmm0
0xf279:	movaps	xmmword ptr [rsp + 0xa0], xmm0
0xf281:	jmp	0xf186


0xf162:	mov	rsi, qword ptr [rsi + 0x78]
0xf166:	lea	r12, [rsp + 0x90]
0xf16e:	xor	edx, edx
0xf170:	mov	rcx, qword ptr [r12 + rdx]
0xf174:	or	rcx, qword ptr [rsi + rdx]
0xf178:	mov	qword ptr [r12 + rdx], rcx
0xf17c:	add	rdx, 8
0xf180:	cmp	rdx, 0x20
0xf184:	jne	0xf170


0xf2b9:	pcmpeqd	xmm0, xmm0
0xf2bd:	lea	r12, [rsp + 0x90]
0xf2c5:	movaps	xmmword ptr [rsp + 0x90], xmm0
0xf2cd:	jmp	0xf186


0xea7c:	mov	rbx, qword ptr [rsp + 0x10]
0xea81:	lea	rax, [rbx*8]
0xea89:	mov	qword ptr [rsp + 0x20], rax
0xea8e:	mov	rax, qword ptr [rsp + 8]
0xea93:	mov	rax, qword ptr [rax + 0x18]
0xea97:	mov	r13, qword ptr [rax + rbx*8]
0xea9b:	mov	rax, qword ptr [rsp + 0x30]
0xeaa0:	shl	r13, 4
0xeaa4:	add	r13, qword ptr [rax]
0xeaa7:	movzx	r14d, byte ptr [r13 + 8]
0xeaac:	mov	eax, dword ptr [r13 + 8]
0xeab0:	shr	eax, 8
0xeab3:	and	ax, 0x3ff
0xeab7:	cmp	r14d, 1
0xeabb:	je	0xee20


0xeaf5:	test	rbp, rbp
0xeaf8:	mov	r15, qword ptr [rsp + 0x30]
0xeafd:	jle	0xf559


0xf06b:	add	rbx, 1
0xf06f:	cmp	rbx, rbp
0xf072:	jl	0xef28


0xef82:	test	rcx, rcx
0xef85:	je	0xf06b


0xef69:	mov	rdx, qword ptr [r12 + rax*8]
0xef6d:	and	rdx, qword ptr [rdi + rax*8]
0xef71:	mov	qword ptr [rsi + rax*8], rdx
0xef75:	add	rax, 1
0xef79:	or	rcx, rdx
0xef7c:	cmp	rax, 4
0xef80:	jne	0xef69


0xeeb5:	test	al, 8
0xeeb7:	je	0xef10


0xee63:	cmp	r14d, 1
0xee67:	je	0xf245


0xf186:	mov	rbx, qword ptr [rsp + 0x30]
0xf18b:	mov	rdx, qword ptr [rbx + 0xd8]
0xf192:	test	dl, 0x40
0xf195:	jne	0xf1a3


0xf170:	mov	rcx, qword ptr [r12 + rdx]
0xf174:	or	rcx, qword ptr [rsi + rdx]
0xf178:	mov	qword ptr [r12 + rdx], rcx
0xf17c:	add	rdx, 8
0xf180:	cmp	rdx, 0x20
0xf184:	jne	0xf170


0xf559:	mov	rdi, qword ptr [rsp + 0x18]
0xf55e:	call	0x1c60


0xeb03:	lea	rbx, [rbp + 1]
0xeb07:	mov	qword ptr [rsp + 0x78], 0
0xeb10:	mov	qword ptr [rsp + 0x70], rbx
0xeb15:	shl	rbx, 3
0xeb19:	mov	rdi, rbx
0xeb1c:	call	0x1f20


0xef28:	mov	r10, rbx
0xef2b:	shl	r10, 5
0xef2f:	cmp	r14d, 1
0xef33:	jne	0xef58


0xf078:	mov	r15, r13
0xf07b:	cmp	rbp, rbx
0xf07e:	jne	0xeadf


0xef8b:	lea	r11, [rsp + 0xd0]
0xef93:	xor	r15d, r15d
0xef96:	xor	r9d, r9d
0xef99:	xor	ecx, ecx
0xef9b:	mov	rsi, qword ptr [r12 + rcx*8]
0xef9f:	mov	rax, qword ptr [rdi + rcx*8]
0xefa3:	mov	rdx, rsi
0xefa6:	not	rdx
0xefa9:	and	rdx, rax
0xefac:	not	rax
0xefaf:	and	rax, rsi
0xefb2:	mov	qword ptr [r11 + rcx*8], rdx
0xefb6:	or	r9, rdx
0xefb9:	mov	qword ptr [r12 + rcx*8], rax
0xefbd:	add	rcx, 1
0xefc1:	or	r15, rax
0xefc4:	cmp	rcx, 4
0xefc8:	jne	0xef9b


0xeeb9:	cmp	r14d, 1
0xeebd:	je	0xf1f1


0xf245:	test	byte ptr [r13 + 0xa], 0x40
0xf24a:	je	0xf0f4


0xee6d:	mov	r8, qword ptr [rsp + 0x30]
0xee72:	cmp	dword ptr [r8 + 0xb4], 1
0xee7a:	jle	0xf2d2


0xf197:	and	qword ptr [rsp + 0x90], 0xfffffffffffffbff
0xf1a3:	and	edx, 0x80
0xf1a9:	je	0xee46


0xf1a3:	and	edx, 0x80
0xf1a9:	je	0xee46


0xefca:	mov	rdi, qword ptr [rsp + 0x18]
0xefcf:	lea	rax, [rbx + rbx*2]
0xefd3:	test	r9, r9
0xefd6:	lea	rdx, [rdi + rax*8]
0xefda:	je	0xf044


0xef9b:	mov	rsi, qword ptr [r12 + rcx*8]
0xef9f:	mov	rax, qword ptr [rdi + rcx*8]
0xefa3:	mov	rdx, rsi
0xefa6:	not	rdx
0xefa9:	and	rdx, rax
0xefac:	not	rax
0xefaf:	and	rax, rsi
0xefb2:	mov	qword ptr [r11 + rcx*8], rdx
0xefb6:	or	r9, rdx
0xefb9:	mov	qword ptr [r12 + rcx*8], rax
0xefbd:	add	rcx, 1
0xefc1:	or	r15, rax
0xefc4:	cmp	rcx, 4
0xefc8:	jne	0xef9b


0xf1f1:	test	byte ptr [r13 + 0xa], 0x40
0xf1f6:	jne	0xf0f4


0xeec3:	mov	rdi, qword ptr [rsp + 0x30]
0xeec8:	cmp	dword ptr [rdi + 0xb4], 1
0xeecf:	jle	0xf20e


0xf250:	mov	r8, qword ptr [rsp + 0x30]
0xf255:	cmp	dword ptr [r8 + 0xb4], 1
0xf25d:	jg	0xee80


0xf2d2:	mov	rdi, qword ptr [rsp + 0x30]
0xf2d7:	xor	esi, esi
0xf2d9:	xor	edx, edx
0xf2db:	mov	rcx, qword ptr [r12 + rdx*8]
0xf2df:	and	rcx, qword ptr [rdi + rdx*8 + 0xb8]
0xf2e7:	mov	qword ptr [r12 + rdx*8], rcx
0xf2eb:	add	rdx, 1
0xf2ef:	or	rsi, rcx
0xf2f2:	cmp	rdx, 4
0xf2f6:	jne	0xf2db


0xee80:	mov	rdi, qword ptr [r8 + 0x78]
0xee84:	xor	esi, esi
0xee86:	xor	ecx, ecx
0xee88:	mov	rdx, qword ptr [rdi + rcx*8]
0xee8c:	not	rdx
0xee8f:	or	rdx, qword ptr [r8 + rcx*8 + 0xb8]
0xee97:	and	rdx, qword ptr [r12 + rcx*8]
0xee9b:	mov	qword ptr [r12 + rcx*8], rdx
0xee9f:	add	rcx, 1
0xeea3:	or	rsi, rdx
0xeea6:	cmp	rcx, 4
0xeeaa:	jne	0xee88


0xf1af:	and	qword ptr [rsp + 0x90], 0xfffffffffffffffe
0xf1b8:	jmp	0xee46


0xf044:	mov	rax, qword ptr [rsp + 8]
0xf049:	mov	rsi, qword ptr [rsp + 0x20]
0xf04e:	mov	rdi, rdx
0xf051:	mov	rax, qword ptr [rax + 0x18]
0xf055:	mov	rsi, qword ptr [rax + rsi]
0xf059:	call	0xaa10


0xefdc:	mov	rax, rbp
0xefdf:	movdqa	xmm0, xmmword ptr [rsp + 0xd0]
0xefe8:	shl	rax, 5
0xefec:	mov	rsi, rdx
0xefef:	mov	qword ptr [rsp + 0x38], rdx
0xeff4:	add	rax, r13
0xeff7:	movups	xmmword ptr [rax], xmm0
0xeffa:	movdqa	xmm0, xmmword ptr [rsp + 0xe0]
0xf003:	movups	xmmword ptr [rax + 0x10], xmm0
0xf007:	lea	rax, [rbp + rbp*2]
0xf00c:	lea	rdi, [rdi + rax*8]
0xf010:	movdqa	xmm0, xmmword ptr [rsp + 0xb0]
0xf019:	movups	xmmword ptr [r13 + r10], xmm0
0xf01f:	movdqa	xmm0, xmmword ptr [rsp + 0xc0]
0xf028:	movups	xmmword ptr [r13 + r10 + 0x10], xmm0
0xf02e:	call	0xd0b0


0xf1fc:	mov	rdi, qword ptr [rsp + 0x30]
0xf201:	cmp	dword ptr [rdi + 0xb4], 1
0xf208:	jg	0xeed5


0xf20e:	mov	rsi, qword ptr [rsp + 0x30]
0xf213:	xor	ecx, ecx
0xf215:	xor	edx, edx
0xf217:	mov	rax, qword ptr [rsi + rdx*8 + 0xb8]
0xf21f:	not	rax
0xf222:	and	rax, qword ptr [r12 + rdx*8]
0xf226:	mov	qword ptr [r12 + rdx*8], rax
0xf22a:	add	rdx, 1
0xf22e:	or	rcx, rax
0xf231:	cmp	rdx, 4
0xf235:	jne	0xf217


0xeed5:	mov	rsi, qword ptr [rdi + 0x78]
0xeed9:	xor	ecx, ecx
0xeedb:	xor	edx, edx
0xeedd:	mov	rax, qword ptr [rdi + rdx*8 + 0xb8]
0xeee5:	and	rax, qword ptr [rsi + rdx*8]
0xeee9:	not	rax
0xeeec:	and	rax, qword ptr [r12 + rdx*8]
0xeef0:	mov	qword ptr [r12 + rdx*8], rax
0xeef4:	add	rdx, 1
0xeef8:	or	rcx, rax
0xeefb:	cmp	rdx, 4
0xeeff:	jne	0xeedd


0xf263:	jmp	0xf2d2


0xf2f8:	test	rsi, rsi
0xf2fb:	jne	0xeeb5


0xf2db:	mov	rcx, qword ptr [r12 + rdx*8]
0xf2df:	and	rcx, qword ptr [rdi + rdx*8 + 0xb8]
0xf2e7:	mov	qword ptr [r12 + rdx*8], rcx
0xf2eb:	add	rdx, 1
0xf2ef:	or	rsi, rcx
0xf2f2:	cmp	rdx, 4
0xf2f6:	jne	0xf2db


0xeeac:	test	rsi, rsi
0xeeaf:	je	0xeadf


0xee88:	mov	rdx, qword ptr [rdi + rcx*8]
0xee8c:	not	rdx
0xee8f:	or	rdx, qword ptr [r8 + rcx*8 + 0xb8]
0xee97:	and	rdx, qword ptr [r12 + rcx*8]
0xee9b:	mov	qword ptr [r12 + rcx*8], rdx
0xee9f:	add	rcx, 1
0xeea3:	or	rsi, rdx
0xeea6:	cmp	rcx, 4
0xeeaa:	jne	0xee88


0xf237:	test	rcx, rcx
0xf23a:	jne	0xef10


0xf217:	mov	rax, qword ptr [rsi + rdx*8 + 0xb8]
0xf21f:	not	rax
0xf222:	and	rax, qword ptr [r12 + rdx*8]
0xf226:	mov	qword ptr [r12 + rdx*8], rax
0xf22a:	add	rdx, 1
0xf22e:	or	rcx, rax
0xf231:	cmp	rdx, 4
0xf235:	jne	0xf217


0xef01:	test	rcx, rcx
0xef04:	je	0xeadf


0xeedd:	mov	rax, qword ptr [rdi + rdx*8 + 0xb8]
0xeee5:	and	rax, qword ptr [rsi + rdx*8]
0xeee9:	not	rax
0xeeec:	and	rax, qword ptr [r12 + rdx*8]
0xeef0:	mov	qword ptr [r12 + rdx*8], rax
0xeef4:	add	rdx, 1
0xeef8:	or	rcx, rax
0xeefb:	cmp	rdx, 4
0xeeff:	jne	0xeedd


0xf301:	jmp	0xeadf


0xf240:	jmp	0xeadf


0xf033:	test	eax, eax
0xf035:	jne	0xf110


0xf03b:	mov	rdx, qword ptr [rsp + 0x38]
0xf040:	add	rbp, 1
0xf044:	mov	rax, qword ptr [rsp + 8]
0xf049:	mov	rsi, qword ptr [rsp + 0x20]
0xf04e:	mov	rdi, rdx
0xf051:	mov	rax, qword ptr [rax + 0x18]
0xf055:	mov	rsi, qword ptr [rax + rsi]
0xf059:	call	0xaa10


0xf110:	mov	rax, qword ptr [rsp + 0x18]
0xf115:	lea	rbx, [rax + 0x10]
0xf119:	lea	rax, [rbp + rbp*2]
0xf11e:	lea	rbp, [rbx + rax*8]
0xf122:	nop	word ptr [rax + rax]
0xf128:	mov	rdi, qword ptr [rbx]
0xf12b:	add	rbx, 0x18
0xf12f:	call	0x1c60


0xf05e:	test	al, al
0xf060:	je	0xf110


0xf066:	test	r15, r15
0xf069:	je	0xf078


0xf134:	cmp	rbp, rbx
0xf137:	jne	0xf128


0xf139:	mov	rdi, qword ptr [rsp + 0x18]
0xf13e:	call	0x1c60


0xf128:	mov	rdi, qword ptr [rbx]
0xf12b:	add	rbx, 0x18
0xf12f:	call	0x1c60


0xf143:	jmp	0xedf0


0xf563:	test	rbp, rbp
0xf566:	jne	0xedf0


0xf56c:	jmp	0xf4e4


0xf4e4:	mov	esi, 0x100
0xf4e9:	mov	edi, 8
0xf4ee:	call	0x1ec0


0xf4f3:	mov	rbx, qword ptr [rsp + 8]
0xf4f8:	test	rax, rax
0xf4fb:	mov	qword ptr [rbx + 0x58], rax
0xf4ff:	setne	al
0xf502:	jmp	0xedf2


0xedf2:	mov	rbx, qword ptr [rsp + 0xf8]
0xedfa:	xor	rbx, qword ptr fs:[0x28]
0xee03:	jne	0xf554


0x13a05:	test	al, al
0x13a07:	jne	0x13124


0x13a0d:	mov	rdi, qword ptr [rsp + 0x1d8]
0x13a15:	mov	dword ptr [rsp + 0xd0], 0xc
0x13a20:	test	rdi, rdi
0x13a23:	jne	0x13950


0x13124:	mov	rax, qword ptr [r14 + 0x58]
0x13128:	test	rax, rax
0x1312b:	je	0x13840


0xeb21:	test	rax, rax
0xeb24:	mov	r12, rax
0xeb27:	mov	qword ptr [rsp + 0x80], rax
0xeb2f:	je	0xf32f


0xf32f:	mov	rdi, r12
0xf332:	call	0x1c60


0xeb35:	movabs	rax, 0xaaaaaaaaaaaa855
0xeb3f:	mov	dword ptr [rsp + 0x6c], 0
0xeb47:	cmp	rbp, rax
0xeb4a:	jg	0xf32f


0xeb50:	lea	rax, [rbp + rbp*2]
0xeb55:	shl	rax, 3
0xeb59:	mov	rdi, rax
0xeb5c:	mov	qword ptr [rsp + 0x58], rax
0xeb61:	call	0x1f20


0xf337:	mov	rax, qword ptr [rsp + 0x18]
0xf33c:	lea	rbx, [rax + 0x10]
0xf340:	lea	rax, [rbp + rbp*2]
0xf345:	lea	rbp, [rbx + rax*8]
0xf349:	nop	dword ptr [rax]
0xf350:	mov	rdi, qword ptr [rbx]
0xf353:	add	rbx, 0x18
0xf357:	call	0x1c60


0xf35c:	cmp	rbp, rbx
0xf35f:	jne	0xf350


0xf361:	mov	rdi, qword ptr [rsp + 0x18]
0xf366:	call	0x1c60


0xf350:	mov	rdi, qword ptr [rbx]
0xf353:	add	rbx, 0x18
0xf357:	call	0x1c60


0xf36b:	jmp	0xedf0


0xeb66:	test	rax, rax
0xeb69:	mov	qword ptr [rsp + 0x10], rax
0xeb6e:	je	0xf32f


0xeb74:	mov	rax, qword ptr [rsp + 0x10]
0xeb79:	sub	rbx, 8
0xeb7d:	mov	r12, qword ptr [rsp + 0x40]
0xeb82:	pxor	xmm0, xmm0
0xeb86:	lea	r14, [rsp + 0x70]
0xeb8b:	mov	qword ptr [rsp + 0x20], rbp
0xeb90:	mov	byte ptr [rsp + 0x4f], 0
0xeb95:	mov	rbp, r15
0xeb98:	add	rax, rbx
0xeb9b:	mov	qword ptr [rsp + 0x50], r12
0xeba0:	add	rbx, rax
0xeba3:	mov	qword ptr [rsp + 0x30], rax
0xeba8:	mov	rax, qword ptr [rsp + 0x18]
0xebad:	movaps	xmmword ptr [rsp + 0xd0], xmm0
0xebb5:	mov	qword ptr [rsp + 0x38], rbx
0xebba:	xor	ebx, ebx
0xebbc:	lea	r13, [rax + 8]
0xebc0:	lea	rax, [rsp + 0x6c]
0xebc5:	movaps	xmmword ptr [rsp + 0xe0], xmm0
0xebcd:	mov	qword ptr [rsp + 0x28], rax
0xebd2:	mov	qword ptr [rsp + 0x78], 0
0xebdb:	cmp	qword ptr [r13], 0
0xebe0:	jle	0xec28


0xec28:	mov	rdi, qword ptr [rsp + 0x28]
0xec2d:	xor	ecx, ecx
0xec2f:	mov	rsi, rbp
0xec32:	mov	rdx, r14
0xec35:	call	0xd2a0


0xebe2:	xor	r15d, r15d
0xebe5:	nop	dword ptr [rax]
0xebe8:	mov	rax, qword ptr [r13 + 8]
0xebec:	mov	rdx, qword ptr [rax + r15*8]
0xebf0:	mov	rax, qword ptr [rbp + 0x18]
0xebf4:	mov	rax, qword ptr [rax + rdx*8]
0xebf8:	cmp	rax, -1
0xebfc:	je	0xec1e


0xec1e:	add	r15, 1
0xec22:	cmp	qword ptr [r13], r15
0xec26:	jg	0xebe8


0xebfe:	lea	rdx, [rax + rax*2]
0xec02:	mov	rax, qword ptr [rbp + 0x30]
0xec06:	mov	rdi, r14
0xec09:	lea	rsi, [rax + rdx*8]
0xec0d:	call	0xc470


0xebe8:	mov	rax, qword ptr [r13 + 8]
0xebec:	mov	rdx, qword ptr [rax + r15*8]
0xebf0:	mov	rax, qword ptr [rbp + 0x18]
0xebf4:	mov	rax, qword ptr [rax + rdx*8]
0xebf8:	cmp	rax, -1
0xebfc:	je	0xec1e


0xec12:	test	eax, eax
0xec14:	mov	dword ptr [rsp + 0x6c], eax
0xec18:	jne	0xf318


0xf318:	mov	rbp, qword ptr [rsp + 0x20]
0xf31d:	mov	rdi, qword ptr [rsp + 0x10]
0xf322:	call	0x1c60


0xf327:	mov	r12, qword ptr [rsp + 0x80]
0xf32f:	mov	rdi, r12
0xf332:	call	0x1c60


0xec3a:	mov	rsi, qword ptr [rsp + 0x10]
0xec3f:	test	rax, rax
0xec42:	mov	qword ptr [rsi + rbx*8], rax
0xec46:	je	0xf3f8


0xf3f8:	mov	ecx, dword ptr [rsp + 0x6c]
0xf3fc:	test	ecx, ecx
0xf3fe:	je	0xec4c


0xec4c:	cmp	byte ptr [rax + 0x68], 0
0xec50:	js	0xf370


0xf404:	jmp	0xf318


0xf370:	mov	rdi, qword ptr [rsp + 0x28]
0xf375:	mov	ecx, 1
0xf37a:	mov	rdx, r14
0xf37d:	mov	rsi, rbp
0xf380:	call	0xd2a0


0xec56:	mov	rdi, qword ptr [rsp + 0x30]
0xec5b:	mov	rsi, qword ptr [rsp + 0x38]
0xec60:	mov	qword ptr [rdi + rbx*8], rax
0xec64:	mov	rax, qword ptr [rsp + 0x10]
0xec69:	mov	rax, qword ptr [rax + rbx*8]
0xec6d:	mov	qword ptr [rsi + rbx*8], rax
0xec71:	lea	rdx, [rsp + 0xd0]
0xec79:	xor	eax, eax
0xec7b:	mov	rcx, qword ptr [rdx + rax]
0xec7f:	or	rcx, qword ptr [r12 + rax]
0xec83:	mov	qword ptr [rdx + rax], rcx
0xec87:	add	rax, 8
0xec8b:	cmp	rax, 0x20
0xec8f:	jne	0xec7b


0xec91:	add	rbx, 1
0xec95:	add	r13, 0x18
0xec99:	add	r12, 0x20
0xec9d:	cmp	rbx, qword ptr [rsp + 0x20]
0xeca2:	jne	0xebd2


0xec7b:	mov	rcx, qword ptr [rdx + rax]
0xec7f:	or	rcx, qword ptr [r12 + rax]
0xec83:	mov	qword ptr [rdx + rax], rcx
0xec87:	add	rax, 8
0xec8b:	cmp	rax, 0x20
0xec8f:	jne	0xec7b


0xeca8:	cmp	byte ptr [rsp + 0x4f], 0
0xecad:	mov	r15, rbp
0xecb0:	mov	rbp, qword ptr [rsp + 0x20]
0xecb5:	mov	qword ptr [rsp + 0x20], rdx
0xecba:	jne	0xf409


0xebd2:	mov	qword ptr [rsp + 0x78], 0
0xebdb:	cmp	qword ptr [r13], 0
0xebe0:	jle	0xec28


0xecc0:	mov	esi, 0x100
0xecc5:	mov	edi, 8
0xecca:	call	0x1ec0


0xf409:	mov	esi, 0x200
0xf40e:	mov	edi, 8
0xf413:	call	0x1ec0


0xf418:	mov	r11, rax
0xf41b:	mov	rax, qword ptr [rsp + 8]
0xf420:	test	r11, r11
0xf423:	mov	qword ptr [rax + 0x60], r11
0xf427:	je	0xf31d


0xf31d:	mov	rdi, qword ptr [rsp + 0x10]
0xf322:	call	0x1c60


0xf42d:	mov	r13, qword ptr [rsp + 0x40]
0xf432:	mov	r10, qword ptr [rsp + 0x10]
0xf437:	mov	r12, r11
0xf43a:	mov	r14, qword ptr [rsp + 0x30]
0xf43f:	mov	rdx, qword ptr [rsp + 0x20]
0xf444:	xor	ebx, ebx
0xf446:	add	r13, 0x20
0xf44a:	mov	rax, qword ptr [rdx + rbx]
0xf44e:	test	rax, rax
0xf451:	je	0xf46f


0xf46f:	add	rbx, 8
0xf473:	add	r12, 0x200
0xf47a:	cmp	rbx, 0x20
0xf47e:	jne	0xf44a


0xf453:	mov	rsi, r12
0xf456:	mov	ecx, 1
0xf45b:	test	al, 1
0xf45d:	jne	0xf50c


0xf480:	jmp	0xed3e


0xf44a:	mov	rax, qword ptr [rdx + rbx]
0xf44e:	test	rax, rax
0xf451:	je	0xf46f


0xf463:	add	rcx, rcx
0xf466:	add	rsi, 8
0xf46a:	shr	rax, 1
0xf46d:	jne	0xf45b


0xf50c:	mov	rdi, qword ptr [rsp + 0x18]
0xf511:	test	qword ptr [rdi + rbx + 0x1800], rcx
0xf519:	jne	0xf550


0xed3e:	test	byte ptr [rsp + 0xd1], 4
0xed46:	je	0xed82


0xf45b:	test	al, 1
0xf45d:	jne	0xf50c


0xf51b:	lea	r9, [r13 + rbx]
0xf520:	xor	r8d, r8d
0xf523:	mov	r15, qword ptr [r9]
0xf526:	add	r8, 1
0xf52a:	add	r9, 0x20
0xf52e:	mov	rdi, r8
0xf531:	and	r15, rcx
0xf534:	test	r15, r15
0xf537:	je	0xf523


0xf550:	xor	edi, edi
0xf552:	jmp	0xf539


0xed82:	mov	rdi, qword ptr [rsp + 0x10]
0xed87:	call	0x1c60


0xed48:	xor	eax, eax
0xed4a:	mov	rdx, qword ptr [rsp + 0x50]
0xed4f:	jmp	0xed5e


0xf523:	mov	r15, qword ptr [r9]
0xf526:	add	r8, 1
0xf52a:	add	r9, 0x20
0xf52e:	mov	rdi, r8
0xf531:	and	r15, rcx
0xf534:	test	r15, r15
0xf537:	je	0xf523


0xf539:	mov	r8, qword ptr [r10 + rdi*8]
0xf53d:	mov	qword ptr [rsi], r8
0xf540:	mov	rdi, qword ptr [r14 + rdi*8]
0xf544:	mov	qword ptr [rsi + 0x800], rdi
0xf54b:	jmp	0xf463


0xed5e:	test	qword ptr [rdx], 0x400
0xed65:	je	0xed51


0xed51:	add	rax, 1
0xed55:	add	rdx, 0x20
0xed59:	cmp	rax, rbp
0xed5c:	je	0xed82


0xed67:	mov	rbx, qword ptr [rsp + 0x38]
0xed6c:	cmp	byte ptr [rsp + 0x4f], 0
0xed71:	mov	rax, qword ptr [rbx + rax*8]
0xed75:	mov	qword ptr [r11 + 0x50], rax
0xed79:	je	0xed82


0xed7b:	mov	qword ptr [r11 + 0x850], rax
0xed82:	mov	rdi, qword ptr [rsp + 0x10]
0xed87:	call	0x1c60


0xed8c:	mov	rdi, qword ptr [rsp + 0x80]
0xed94:	call	0x1c60


0xed99:	mov	rax, qword ptr [rsp + 0x18]
0xed9e:	mov	rbx, qword ptr [rsp + 0x58]
0xeda3:	lea	rbp, [rax + 0x10]
0xeda7:	add	rbx, rbp
0xedaa:	mov	rdi, qword ptr [rbp]
0xedae:	add	rbp, 0x18
0xedb2:	call	0x1c60


0xedb7:	cmp	rbx, rbp
0xedba:	jne	0xedaa


0xedbc:	mov	rdi, qword ptr [rsp + 0x18]
0xedc1:	call	0x1c60


0xedaa:	mov	rdi, qword ptr [rbp]
0xedae:	add	rbp, 0x18
0xedb2:	call	0x1c60


0xedc6:	mov	eax, 1
0xedcb:	jmp	0xedf2


0xeccf:	mov	r11, rax
0xecd2:	mov	rax, qword ptr [rsp + 8]
0xecd7:	test	r11, r11
0xecda:	mov	qword ptr [rax + 0x58], r11
0xecde:	je	0xf31d


0xece4:	mov	rbx, qword ptr [rsp + 0x40]
0xece9:	mov	r12, qword ptr [rsp + 0x10]
0xecee:	xor	r9d, r9d
0xecf1:	mov	r13, qword ptr [rsp + 0x30]
0xecf6:	mov	rdx, qword ptr [rsp + 0x20]
0xecfb:	add	rbx, 0x20
0xecff:	mov	rax, qword ptr [rdx + r9]
0xed03:	test	rax, rax
0xed06:	je	0xed34


0xed34:	add	r9, 8
0xed38:	cmp	r9, 0x20
0xed3c:	jne	0xecff


0xed08:	mov	rsi, r9
0xed0b:	mov	ecx, 1
0xed10:	shl	rsi, 6
0xed14:	add	rsi, r11
0xed17:	nop	word ptr [rax + rax]
0xed20:	test	al, 1
0xed22:	jne	0xf488


0xecff:	mov	rax, qword ptr [rdx + r9]
0xed03:	test	rax, rax
0xed06:	je	0xed34


0xed28:	add	rcx, rcx
0xed2b:	add	rsi, 8
0xed2f:	shr	rax, 1
0xed32:	jne	0xed20


0xf488:	mov	rdi, qword ptr [rsp + 0x18]
0xf48d:	test	qword ptr [rdi + r9 + 0x1800], rcx
0xf495:	jne	0xf507


0xed20:	test	al, 1
0xed22:	jne	0xf488


0xf497:	lea	rdi, [rbx + r9]
0xf49b:	xor	r8d, r8d
0xf49e:	nop	
0xf4a0:	mov	r10, qword ptr [rdi]
0xf4a3:	add	r8, 1
0xf4a7:	add	rdi, 0x20
0xf4ab:	and	r10, rcx
0xf4ae:	test	r10, r10
0xf4b1:	je	0xf4a0


0xf507:	xor	r8d, r8d
0xf50a:	jmp	0xf4b7


0xf4a0:	mov	r10, qword ptr [rdi]
0xf4a3:	add	r8, 1
0xf4a7:	add	rdi, 0x20
0xf4ab:	and	r10, rcx
0xf4ae:	test	r10, r10
0xf4b1:	je	0xf4a0


0xf4b3:	shl	r8, 3
0xf4b7:	test	qword ptr [r15 + r9 + 0xb8], rcx
0xf4bf:	je	0xf4ce


0xf4b7:	test	qword ptr [r15 + r9 + 0xb8], rcx
0xf4bf:	je	0xf4ce


0xf4ce:	mov	rdi, qword ptr [r12 + r8]
0xf4d2:	mov	qword ptr [rsi], rdi
0xf4d5:	jmp	0xed28


0xf4c1:	mov	rdi, qword ptr [r13 + r8]
0xf4c6:	mov	qword ptr [rsi], rdi
0xf4c9:	jmp	0xed28


0xf385:	mov	rdi, qword ptr [rsp + 0x30]
0xf38a:	test	rax, rax
0xf38d:	mov	qword ptr [rdi + rbx*8], rax
0xf391:	je	0xf306


0xf306:	mov	edx, dword ptr [rsp + 0x6c]
0xf30a:	test	edx, edx
0xf30c:	je	0xf397


0xf397:	mov	rdi, qword ptr [rsp + 0x10]
0xf39c:	cmp	rax, qword ptr [rdi + rbx*8]
0xf3a0:	je	0xf3bb


0xf3bb:	mov	rdi, qword ptr [rsp + 0x28]
0xf3c0:	mov	rsi, rbp
0xf3c3:	mov	ecx, 2
0xf3c8:	mov	rdx, r14
0xf3cb:	call	0xd2a0


0xf3a2:	movzx	edi, byte ptr [rsp + 0x4f]
0xf3a7:	cmp	dword ptr [rbp + 0xb4], 2
0xf3ae:	mov	eax, 1
0xf3b3:	cmovge	edi, eax
0xf3b6:	mov	byte ptr [rsp + 0x4f], dil
0xf3bb:	mov	rdi, qword ptr [rsp + 0x28]
0xf3c0:	mov	rsi, rbp
0xf3c3:	mov	ecx, 2
0xf3c8:	mov	rdx, r14
0xf3cb:	call	0xd2a0


0xf3d0:	mov	rsi, qword ptr [rsp + 0x38]
0xf3d5:	test	rax, rax
0xf3d8:	mov	qword ptr [rsi + rbx*8], rax
0xf3dc:	jne	0xec71


0xf3e2:	mov	eax, dword ptr [rsp + 0x6c]
0xf3e6:	test	eax, eax
0xf3e8:	je	0xec71


0xec71:	lea	rdx, [rsp + 0xd0]
0xec79:	xor	eax, eax
0xec7b:	mov	rcx, qword ptr [rdx + rax]
0xec7f:	or	rcx, qword ptr [r12 + rax]
0xec83:	mov	qword ptr [rdx + rax], rcx
0xec87:	add	rax, 8
0xec8b:	cmp	rax, 0x20
0xec8f:	jne	0xec7b


0xf3ee:	jmp	0xf318


0xf0e0:	test	rax, rax
0xf0e3:	mov	qword ptr [rbx + 0x10], rax
0xf0e7:	je	0xedcd


0xedcd:	test	rbp, rbp
0xedd0:	mov	qword ptr [rbx + 8], 0
0xedd8:	mov	qword ptr [rbx], 0
0xeddf:	jne	0xf110


0xf0ed:	mov	qword ptr [rax], r13
0xf0f0:	add	rbp, 1
0xf0f4:	pxor	xmm0, xmm0
0xf0f8:	movaps	xmmword ptr [r12], xmm0
0xf0fd:	movaps	xmmword ptr [r12 + 0x10], xmm0
0xf103:	jmp	0xeadf


0xede5:	mov	rdi, qword ptr [rsp + 0x18]
0xedea:	call	0x1c60


0x1267c:	test	rax, rax
0x1267f:	mov	qword ptr [rsp + 0x50], rax
0x12684:	je	0x12964


0x12964:	mov	eax, 0xc
0x12969:	jmp	0x12945


0x1268a:	lea	rcx, [rsp + 0x40]
0x1268f:	mov	qword ptr [rax], rbx
0x12692:	mov	rdx, r15
0x12695:	mov	rsi, r13
0x12698:	mov	rdi, r14
0x1269b:	mov	qword ptr [rsp + 0x10], rcx
0x126a0:	call	0x140a0


0x12945:	mov	rdx, qword ptr [rsp + 0x58]
0x1294a:	xor	rdx, qword ptr fs:[0x28]
0x12953:	jne	0x1296b


0x12955:	add	rsp, 0x68
0x12959:	pop	rbx
0x1295a:	pop	rbp
0x1295b:	pop	r12
0x1295d:	pop	r13
0x1295f:	pop	r14
0x12961:	pop	r15
0x12963:	ret	


0x1296b:	call	0x1db0


0x126a5:	test	eax, eax
0x126a7:	jne	0x12935


0x126ad:	lea	rax, [r15*8]
0x126b5:	test	r15, r15
0x126b8:	mov	dword ptr [rsp + 0x2c], 0
0x126c0:	mov	qword ptr [rsp + 8], rax
0x126c5:	lea	rax, [r13 + 0x30]
0x126c9:	mov	qword ptr [rsp + 0x38], rax
0x126ce:	jle	0x128d7


0x12935:	mov	rdi, qword ptr [rsp + 0x50]
0x1293a:	mov	dword ptr [rsp], eax
0x1293d:	call	0x1c60


0x128d7:	xor	eax, eax
0x128d9:	jmp	0x12935


0x126d4:	mov	rdi, qword ptr [r13]
0x126d8:	mov	rax, qword ptr [rsp + 8]
0x126dd:	cmp	qword ptr [rdi + rax], 0
0x126e2:	je	0x128f8


0x128f8:	mov	rax, qword ptr [rsp]
0x128fc:	add	dword ptr [rsp + 0x2c], 1
0x12901:	mov	ecx, dword ptr [rsp + 0x2c]
0x12905:	cmp	dword ptr [rax + 0xe0], ecx
0x1290b:	jge	0x12704


0x126e8:	mov	rax, qword ptr [rsp]
0x126ec:	mov	dword ptr [rsp + 0x2c], 0
0x126f4:	mov	ecx, dword ptr [rsp + 0x2c]
0x126f8:	cmp	dword ptr [rax + 0xe0], ecx
0x126fe:	jl	0x12911


0x12911:	mov	rdx, qword ptr [rsp + 8]
0x12916:	xor	esi, esi
0x12918:	call	0x1e40


0x12704:	mov	rbx, qword ptr [rsp]
0x12708:	mov	rdi, qword ptr [rsp + 8]
0x1270d:	sub	r15, 1
0x12711:	mov	qword ptr [rsp + 0x48], 0
0x1271a:	mov	rax, qword ptr [rbx + 0xb8]
0x12721:	mov	r12, qword ptr [rax + rdi - 8]
0x12726:	test	r12, r12
0x12729:	je	0x128b0


0x128b0:	mov	rcx, qword ptr [rsp + 0x10]
0x128b5:	mov	rdi, qword ptr [rsp]
0x128b9:	mov	rdx, r15
0x128bc:	mov	rsi, r13
0x128bf:	call	0x140a0


0x1272f:	cmp	qword ptr [r12 + 0x28], 0
0x12735:	mov	r14, qword ptr [rbx + 0x98]
0x1273c:	jle	0x128b0


0x12742:	xor	ebx, ebx
0x12744:	jmp	0x127eb


0x127eb:	mov	rax, qword ptr [r12 + 0x30]
0x127f0:	mov	rsi, qword ptr [r14]
0x127f3:	mov	rbp, qword ptr [rax + rbx*8]
0x127f7:	mov	r9, rbp
0x127fa:	shl	r9, 4
0x127fe:	add	rsi, r9
0x12801:	test	byte ptr [rsi + 0xa], 0x10
0x12805:	je	0x12750


0x12750:	mov	rdi, qword ptr [rsp]
0x12754:	mov	rdx, r15
0x12757:	call	0xde20


0x1280b:	mov	rcx, qword ptr [rsp]
0x1280f:	mov	rax, qword ptr [r13 + 0x18]
0x12813:	mov	r8, r15
0x12816:	mov	rdx, rbp
0x12819:	mov	qword ptr [rsp + 0x18], r9
0x1281e:	mov	r11, qword ptr [rcx + 0x98]
0x12825:	mov	qword ptr [rsp + 0x20], rax
0x1282a:	mov	rdi, qword ptr [r11]
0x1282d:	lea	rsi, [r11 + 0xd8]
0x12834:	mov	qword ptr [rsp + 0x30], r11
0x12839:	call	0x10700


0x1283e:	movsxd	r10, eax
0x12841:	mov	r9, qword ptr [rsp + 0x18]
0x12846:	cmp	r10d, 0
0x1284a:	jle	0x128e0


0x128e0:	jne	0x12792


0x12850:	movsxd	rax, r10d
0x12853:	add	rax, r15
0x12856:	cmp	qword ptr [rsp + 0x20], rax
0x1285b:	jl	0x12792


0x128e6:	mov	rsi, qword ptr [r14]
0x128e9:	add	rsi, r9
0x128ec:	jmp	0x12750


0x12792:	cmp	qword ptr [r13 + 0x28], 0
0x12797:	je	0x127c7


0x12861:	mov	rdx, qword ptr [r13]
0x12865:	mov	r11, qword ptr [rsp + 0x30]
0x1286a:	mov	rax, qword ptr [rdx + rax*8]
0x1286e:	test	rax, rax
0x12871:	je	0x128e6


0x127c7:	mov	rdi, qword ptr [rsp + 0x10]
0x127cc:	mov	rsi, rbp
0x127cf:	call	0xaa10


0x12799:	mov	rax, qword ptr [r14 + 0x18]
0x1279d:	sub	rsp, 8
0x127a1:	lea	rsi, [r13 + 0x28]
0x127a5:	lea	r8, [r10 + r15]
0x127a9:	mov	r9, rbp
0x127ac:	mov	rcx, qword ptr [rax + rbp*8]
0x127b0:	push	r15
0x127b2:	mov	rdx, qword ptr [rsp + 0x48]
0x127b7:	mov	rdi, qword ptr [rsp + 0x10]
0x127bc:	call	0xc200


0x12873:	mov	rdx, qword ptr [r11 + 0x18]
0x12877:	mov	rdi, qword ptr [rax + 0x10]
0x1287b:	lea	rsi, [rax + 0x18]
0x1287f:	mov	qword ptr [rsp + 0x18], r9
0x12884:	mov	rdx, qword ptr [rdx + rbp*8]
0x12888:	call	0xbf50


0x1288d:	test	rax, rax
0x12890:	jne	0x12792


0x12896:	mov	r9, qword ptr [rsp + 0x18]
0x1289b:	mov	rsi, qword ptr [r14]
0x1289e:	add	rsi, r9
0x128a1:	jmp	0x12750


0x127c1:	test	al, al
0x127c3:	pop	rdx
0x127c4:	pop	rcx
0x127c5:	jne	0x127dc


0x127dc:	add	rbx, 1
0x127e0:	cmp	rbx, qword ptr [r12 + 0x28]
0x127e5:	jge	0x128b0


0x127d4:	test	al, al
0x127d6:	je	0x12930


0x12930:	mov	eax, 0xc
0x12935:	mov	rdi, qword ptr [rsp + 0x50]
0x1293a:	mov	dword ptr [rsp], eax
0x1293d:	call	0x1c60


0x1275c:	test	al, al
0x1275e:	je	0x127dc


0x12760:	mov	rax, qword ptr [r13]
0x12764:	mov	rcx, qword ptr [rsp + 8]
0x12769:	mov	rax, qword ptr [rax + rcx]
0x1276d:	test	rax, rax
0x12770:	je	0x127dc


0x12772:	mov	rdx, qword ptr [r14 + 0x18]
0x12776:	mov	rdi, qword ptr [rax + 0x10]
0x1277a:	lea	rsi, [rax + 0x18]
0x1277e:	mov	rdx, qword ptr [rdx + rbp*8]
0x12782:	call	0xbf50


0x12787:	test	rax, rax
0x1278a:	je	0x127dc


0x1278c:	mov	r10d, 1
0x12792:	cmp	qword ptr [r13 + 0x28], 0
0x12797:	je	0x127c7


0x128c4:	test	eax, eax
0x128c6:	jne	0x12935


0x128c8:	sub	qword ptr [rsp + 8], 8
0x128ce:	test	r15, r15
0x128d1:	jne	0x126d4


0x1291d:	mov	rdi, qword ptr [rsp + 0x50]
0x12922:	call	0x1c60


0x12927:	xor	eax, eax
0x12929:	jmp	0x12945


0x12942:	mov	eax, dword ptr [rsp]
0x12945:	mov	rdx, qword ptr [rsp + 0x58]
0x1294a:	xor	rdx, qword ptr fs:[0x28]
0x12953:	jne	0x1296b


0x13343:	mov	rdi, qword ptr [rsp + 0x110]
0x1334b:	mov	r15d, eax
0x1334e:	call	0x1c60


0x13353:	test	r15d, r15d
0x13356:	jne	0x13f74


0x1335c:	cmp	qword ptr [r12], 0
0x13361:	jne	0x13fd3


0x13f74:	mov	r14, qword ptr [rsp + 0x18]
0x13f79:	mov	eax, r15d
0x13f7c:	mov	rdi, r12
0x13f7f:	mov	dword ptr [rsp + 8], eax
0x13f83:	call	0x1c60


0x13367:	cmp	qword ptr [rbp], 0
0x1336c:	jne	0x13fd3


0x13fd3:	mov	r15, qword ptr [rsp + 0x10]
0x13fd8:	mov	rcx, qword ptr [rsp + 8]
0x13fdd:	mov	rdx, rbp
0x13fe0:	mov	rsi, r12
0x13fe3:	mov	qword ptr [rsp + 0x20], r14
0x13fe8:	mov	rdi, r15
0x13feb:	call	0xd760


0x13372:	mov	rdx, qword ptr [rsp + 0x1d8]
0x1337a:	nop	word ptr [rax + rax]
0x13380:	sub	r14, 1
0x13384:	cmp	r14, -1
0x13388:	je	0x13e4b


0x13e4b:	mov	rdi, r12
0x13e4e:	call	0x1c60


0x1338e:	mov	rax, qword ptr [rdx + r14*8]
0x13392:	test	rax, rax
0x13395:	je	0x13380


0x13380:	sub	r14, 1
0x13384:	cmp	r14, -1
0x13388:	je	0x13e4b


0x13397:	test	byte ptr [rax + 0x68], 0x10
0x1339b:	je	0x13380


0x1339d:	mov	rsi, qword ptr [rax + 0x10]
0x133a1:	mov	rdi, qword ptr [rsp]
0x133a5:	lea	rdx, [rax + 0x18]
0x133a9:	mov	rcx, r14
0x133ac:	call	0xdf30


0x133b1:	mov	r13, rax
0x133b4:	lea	rax, [r14 + 1]
0x133b8:	mov	qword ptr [rsp + 8], rax
0x133bd:	jmp	0x132f0


0x132f0:	mov	rax, qword ptr [rsp + 8]
0x132f5:	xor	esi, esi
0x132f7:	mov	rdi, rbp
0x132fa:	lea	rdx, [rax*8]
0x13302:	call	0x1e40


0x13ff0:	mov	rdi, rbp
0x13ff3:	mov	dword ptr [rsp + 8], eax
0x13ff7:	call	0x1c60


0x13ffc:	mov	eax, dword ptr [rsp + 8]
0x14000:	test	eax, eax
0x14002:	je	0x13bd2


0x13bd2:	mov	rdi, qword ptr [rsp + 0x1d8]
0x13bda:	call	0x1c60


0x14008:	xor	r14d, r14d
0x1400b:	jmp	0x13f7c


0x13f7c:	mov	rdi, r12
0x13f7f:	mov	dword ptr [rsp + 8], eax
0x13f83:	call	0x1c60


0x13f88:	mov	rdi, r14
0x13f8b:	call	0x1c60


0x13f90:	mov	eax, dword ptr [rsp + 8]
0x13f94:	cmp	eax, 1
0x13f97:	je	0x138a0


0x13bdf:	mov	rax, qword ptr [rsp + 0x20]
0x13be4:	mov	qword ptr [rsp + 0x1d8], r12
0x13bec:	mov	qword ptr [rsp + 0x1d0], r13
0x13bf4:	mov	qword ptr [rsp + 0x1c8], rax
0x13bfc:	cmp	qword ptr [rsp + 0x270], 0
0x13c05:	je	0x134c0


0x13e53:	mov	rdi, rbp
0x13e56:	call	0x1c60


0x13e5b:	jmp	0x138a0


0x13baa:	mov	rdi, qword ptr [rsp + 0x110]
0x13bb2:	mov	dword ptr [rsp + 8], eax
0x13bb6:	call	0x1c60


0x13bbb:	mov	eax, dword ptr [rsp + 8]
0x13bbf:	test	eax, eax
0x13bc1:	jne	0x14008


0x13bc7:	cmp	qword ptr [r12], 0
0x13bcc:	je	0x13893


0x13893:	mov	rdi, r12
0x13896:	call	0x1c60


0x1479e:	test	eax, eax
0x147a0:	jne	0x148ae


0x147a6:	mov	rsi, qword ptr [rbx + 8]
0x147aa:	mov	rdx, qword ptr [rsp + 0x60]
0x147af:	test	rsi, rsi
0x147b2:	je	0x147cd


0x147cd:	mov	r11, qword ptr [rsp + 0x38]
0x147d2:	mov	rax, qword ptr [rsp + 0x18]
0x147d7:	mov	rdi, qword ptr [rsp + 0x88]
0x147df:	lea	r9, [r11 + 0x30]
0x147e3:	mov	qword ptr [rdx + rax], r15
0x147e7:	mov	rdx, r13
0x147ea:	mov	rsi, r9
0x147ed:	call	0xbf50


0x147b4:	lea	rcx, [rbp + 1]
0x147b8:	mov	rdi, r12
0x147bb:	call	0xd760


0x147c0:	test	eax, eax
0x147c2:	jne	0x148ae


0x147c8:	mov	rdx, qword ptr [rsp + 0x60]
0x147cd:	mov	r11, qword ptr [rsp + 0x38]
0x147d2:	mov	rax, qword ptr [rsp + 0x18]
0x147d7:	mov	rdi, qword ptr [rsp + 0x88]
0x147df:	lea	r9, [r11 + 0x30]
0x147e3:	mov	qword ptr [rdx + rax], r15
0x147e7:	mov	rdx, r13
0x147ea:	mov	rsi, r9
0x147ed:	call	0xbf50


0x147f2:	sub	rax, 1
0x147f6:	mov	rdx, rax
0x147f9:	js	0x14807


0x14807:	mov	rcx, qword ptr [rsp + 8]
0x1480c:	lea	rax, [r13 + r13*4]
0x14811:	mov	rdx, qword ptr [rcx + 0xd8]
0x14818:	lea	rax, [rdx + rax*8]
0x1481c:	nop	dword ptr [rax]
0x14820:	add	r13, 1
0x14824:	cmp	byte ptr [rax + 0x20], 0
0x14828:	lea	r15, [rax + 0x28]
0x1482c:	je	0x14860


0x147fb:	lea	rdi, [r11 + 0x28]
0x147ff:	mov	rsi, r9
0x14802:	call	0xc0d0


0x1833a:	test	rax, rax
0x1833d:	mov	qword ptr [rbx + 0x20], rax
0x18341:	je	0x183f0


0x183f0:	mov	ebp, 0xc
0x183f5:	pop	rbx
0x183f6:	mov	eax, ebp
0x183f8:	pop	rbp
0x183f9:	pop	r12
0x183fb:	pop	r13
0x183fd:	pop	r14
0x183ff:	ret	


0x18347:	mov	r13, rbp
0x1834a:	shl	r13, 0x15
0x1834e:	and	r13d, 0x400000
0x18355:	or	r13, r14
0x18358:	test	bpl, 4
0x1835c:	jne	0x183c0


0x1835e:	and	byte ptr [rbx + 0x38], 0x7f
0x18362:	movzx	edx, byte ptr [rbx + 0x38]
0x18366:	shr	ebp, 3
0x18369:	mov	rdi, r12
0x1836c:	and	ebp, 1
0x1836f:	mov	qword ptr [rbx + 0x28], 0
0x18377:	shl	ebp, 4
0x1837a:	and	edx, 0xffffffef
0x1837d:	or	ebp, edx
0x1837f:	mov	byte ptr [rbx + 0x38], bpl
0x18383:	call	0x1da0


0x183c0:	and	r13, 0xffffffffffffffbf
0x183c4:	or	byte ptr [rbx + 0x38], 0x80
0x183c8:	or	r13, 0x100
0x183cf:	jmp	0x18362


0x18362:	movzx	edx, byte ptr [rbx + 0x38]
0x18366:	shr	ebp, 3
0x18369:	mov	rdi, r12
0x1836c:	and	ebp, 1
0x1836f:	mov	qword ptr [rbx + 0x28], 0
0x18377:	shl	ebp, 4
0x1837a:	and	edx, 0xffffffef
0x1837d:	or	ebp, edx
0x1837f:	mov	byte ptr [rbx + 0x38], bpl
0x18383:	call	0x1da0


0x186ac:	mov	ebx, dword ptr [rbp]
0x186af:	mov	rdi, rbp
0x186b2:	mov	r12, rax
0x186b5:	call	0xa290


0x21ec:	lea	rsi, [rip + 0x19615]
0x21f3:	lea	rdi, [rip + 0x195dc]
0x21fa:	call	0x1d60


0x1d60:	jmp	qword ptr [rip + 0x21f082]




0x1872b:	mov	rdx, rax
0x1872e:	mov	eax, 1
0x18733:	test	rdx, rdx
0x18736:	je	0x18755


0x18755:	add	rsp, 8
0x18759:	ret	


0x18738:	lea	rdi, [rip + 0x4811]
0x1873f:	mov	ecx, 2
0x18744:	mov	rsi, rdx
0x18747:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x18747:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x18749:	seta	cl
0x1874c:	sbb	cl, 0
0x1874f:	xor	eax, eax
0x18751:	test	cl, cl
0x18753:	jne	0x18760


0x18760:	lea	rdi, [rip + 0x47eb]
0x18767:	mov	ecx, 6
0x1876c:	mov	rsi, rdx
0x1876f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1876f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x18771:	seta	al
0x18774:	sbb	al, 0
0x18776:	test	al, al
0x18778:	setne	al
0x1877b:	add	rsp, 8
0x1877f:	ret	


0xa3fc:	test	al, al
0xa3fe:	jne	0xa410


0xa400:	movzx	eax, byte ptr [r13]
0xa405:	mov	ebp, 1
0xa40a:	mov	dword ptr [rbx], eax
0xa40c:	nop	dword ptr [rax]
0xa410:	mov	rdx, qword ptr [rsp + 8]
0xa415:	xor	rdx, qword ptr fs:[0x28]
0xa41e:	mov	rax, rbp
0xa421:	jne	0xa42e


0x1878e:	test	rax, rax
0x18791:	je	0x187b0


0x187b0:	lea	rax, [rip + 0x47a1]
0x187b7:	add	rsp, 8
0x187bb:	ret	


0x18793:	cmp	byte ptr [rax], 0
0x18796:	lea	rdx, [rip + 0x47bb]
0x1879d:	cmove	rax, rdx
0x187a1:	add	rsp, 8
0x187a5:	ret	


0x6a5b:	lea	rsi, [rip + 0x1529e]
0x6a62:	mov	rdi, rax
0x6a65:	mov	r12, rax
0x6a68:	call	0x18650


0x6a6d:	test	eax, eax
0x6a6f:	jne	0x6b58


0x6a75:	test	rbp, rbp
0x6a78:	je	0x6ad0


0x6b58:	lea	rsi, [rip + 0x151a1]
0x6b5f:	mov	rdx, r12
0x6b62:	mov	rdi, rbp
0x6b65:	call	0x9ba0


0x6ad0:	mov	rsi, r13
0x6ad3:	mov	rdi, r14
0x6ad6:	mov	qword ptr [rsp + 8], 0
0x6adf:	xor	r12d, r12d
0x6ae2:	xor	r15d, r15d
0x6ae5:	mov	rbx, r13
0x6ae8:	call	0x1ed0


0x6a7a:	mov	qword ptr [rsp + 8], rbp
0x6a7f:	mov	rbx, rbp
0x6a82:	xor	r12d, r12d
0x6a85:	xor	r15d, r15d
0x6a88:	mov	rsi, r13
0x6a8b:	mov	rdi, r14
0x6a8e:	call	0x1ed0


0x6b6a:	mov	rdi, r12
0x6b6d:	mov	rbx, rax
0x6b70:	call	0x1da0


0x6d30:	movzx	edx, byte ptr [rax]
0x6d33:	and	edx, 0xffffffdf
0x6d36:	cmp	dl, 0x55
0x6d39:	je	0x6db0


0x6db0:	movzx	edx, byte ptr [rax + 1]
0x6db4:	and	edx, 0xffffffdf
0x6db7:	cmp	dl, 0x54
0x6dba:	jne	0x6d40


0x6d3b:	cmp	dl, 0x47
0x6d3e:	je	0x6d60


0x6dbc:	movzx	edx, byte ptr [rax + 2]
0x6dc0:	and	edx, 0xffffffdf
0x6dc3:	cmp	dl, 0x46
0x6dc6:	jne	0x6d40


0x6d40:	lea	rax, [rip + 0x14b61]
0x6d47:	lea	rdx, [rip + 0x14fa8]
0x6d4e:	cmp	ebx, 9
0x6d51:	cmovne	rax, rdx
0x6d55:	add	rsp, 8
0x6d59:	pop	rbx
0x6d5a:	pop	rbp
0x6d5b:	ret	


0x6d60:	movzx	edx, byte ptr [rax + 1]
0x6d64:	and	edx, 0xffffffdf
0x6d67:	cmp	dl, 0x42
0x6d6a:	jne	0x6d40


0x6dcc:	cmp	byte ptr [rax + 3], 0x2d
0x6dd0:	jne	0x6d40


0x6d6c:	cmp	byte ptr [rax + 2], 0x31
0x6d70:	jne	0x6d40


0x6dd6:	cmp	byte ptr [rax + 4], 0x38
0x6dda:	jne	0x6d40


0x6d72:	cmp	byte ptr [rax + 3], 0x38
0x6d76:	jne	0x6d40


0x6de0:	cmp	byte ptr [rax + 5], 0
0x6de4:	jne	0x6d40


0x6d78:	cmp	byte ptr [rax + 4], 0x30
0x6d7c:	jne	0x6d40


0x6dea:	cmp	byte ptr [rbp], 0x60
0x6dee:	lea	rax, [rip + 0x14f2e]
0x6df5:	lea	rdx, [rip + 0x14f2b]
0x6dfc:	cmovne	rax, rdx
0x6e00:	add	rsp, 8
0x6e04:	pop	rbx
0x6e05:	pop	rbp
0x6e06:	ret	


0x6d7e:	cmp	byte ptr [rax + 5], 0x33
0x6d82:	jne	0x6d40


0x6d84:	cmp	byte ptr [rax + 6], 0x30
0x6d88:	jne	0x6d40


0x6d8a:	cmp	byte ptr [rax + 7], 0
0x6d8e:	jne	0x6d40


0x6d90:	cmp	byte ptr [rbp], 0x60
0x6d94:	lea	rax, [rip + 0x14f90]
0x6d9b:	lea	rdx, [rip + 0x14f8d]
0x6da2:	cmovne	rax, rdx
0x6da6:	add	rsp, 8
0x6daa:	pop	rbx
0x6dab:	pop	rbp
0x6dac:	ret	


0x187c8:	test	eax, eax
0x187ca:	js	0x187d0


0x187d0:	mov	edi, ebx
0x187d2:	call	0x1d10


0x187cc:	pop	rbx
0x187cd:	ret	


0x1d10:	jmp	qword ptr [rip + 0x21f0aa]




0x1a5fd:	mov	qword ptr [rsp + 0x30], r15
0x1a602:	xor	r15d, r15d
0x1a605:	test	r13, r13
0x1a608:	mov	qword ptr [rsp + 0x38], r13
0x1a60d:	lea	r14, [rsp + 0x50]
0x1a612:	lea	r12, [rsp + 0x48]
0x1a617:	lea	rbp, [rsp + 0x40]
0x1a61c:	je	0x1a69b


0x1a69b:	xor	edx, edx
0x1a69d:	xor	esi, esi
0x1a69f:	mov	r8, r12
0x1a6a2:	mov	rcx, rbp
0x1a6a5:	mov	rdi, rbx
0x1a6a8:	mov	qword ptr [rsp + 0x40], r14
0x1a6ad:	mov	qword ptr [rsp + 0x48], 0x1000
0x1a6b6:	call	0x1cd0


0x1a61e:	lea	rax, [rsp + 0x38]
0x1a623:	lea	rsi, [rsp + 0x30]
0x1a628:	mov	qword ptr [rsp + 0x20], r13
0x1a62d:	mov	qword ptr [rsp + 8], rsi
0x1a632:	mov	r13, rax
0x1a635:	jmp	0x1a657


0x1a657:	mov	rsi, qword ptr [rsp + 8]
0x1a65c:	mov	r8, r12
0x1a65f:	mov	rcx, rbp
0x1a662:	mov	rdx, r13
0x1a665:	mov	rdi, rbx
0x1a668:	mov	qword ptr [rsp + 0x40], r14
0x1a66d:	mov	qword ptr [rsp + 0x48], 0x1000
0x1a676:	call	0x1cd0


0x1a67b:	cmp	rax, -1
0x1a67f:	jne	0x1a640


0x1a681:	call	0x1c80


0x1a640:	mov	rax, qword ptr [rsp + 0x40]
0x1a645:	sub	rax, r14
0x1a648:	add	r15, rax
0x1a64b:	cmp	qword ptr [rsp + 0x38], 0
0x1a651:	je	0x1a7f0


0x1a7f0:	mov	r13, qword ptr [rsp + 0x20]
0x1a7f5:	jmp	0x1a69b


0x1a686:	mov	eax, dword ptr [rax]
0x1a688:	cmp	eax, 7
0x1a68b:	je	0x1a640


0x1a68d:	cmp	eax, 0x16
0x1a690:	mov	r13, qword ptr [rsp + 0x20]
0x1a695:	jne	0x1a859


0x1a859:	mov	ebx, 0xffffffff
0x1a85e:	jmp	0x1a7c4


0x1a7c4:	mov	rdx, qword ptr [rsp + 0x1058]
0x1a7cc:	xor	rdx, qword ptr fs:[0x28]
0x1a7d5:	mov	eax, ebx
0x1a7d7:	jne	0x1a868


0x1a7dd:	add	rsp, 0x1068
0x1a7e4:	pop	rbx
0x1a7e5:	pop	rbp
0x1a7e6:	pop	r12
0x1a7e8:	pop	r13
0x1a7ea:	pop	r14
0x1a7ec:	pop	r15
0x1a7ee:	ret	


0x1a868:	call	0x1db0


0x1a6bb:	cmp	rax, -1
0x1a6bf:	je	0x1a859


0x1a6c5:	mov	rax, qword ptr [rsp + 0x40]
0x1a6ca:	sub	rax, r14
0x1a6cd:	add	rax, r15
0x1a6d0:	mov	qword ptr [rsp + 8], rax
0x1a6d5:	je	0x1a800


0x1a800:	mov	rax, qword ptr [rsp + 0x10]
0x1a805:	xor	ebx, ebx
0x1a807:	mov	qword ptr [rax], 0
0x1a80e:	jmp	0x1a7c4


0x1a6db:	mov	rax, qword ptr [rsp + 0x18]
0x1a6e0:	mov	rax, qword ptr [rax]
0x1a6e3:	test	rax, rax
0x1a6e6:	mov	qword ptr [rsp + 0x20], rax
0x1a6eb:	je	0x1a6fc


0x1a6fc:	mov	rdi, qword ptr [rsp + 8]
0x1a701:	call	0x1f20


0x1a6ed:	mov	rax, qword ptr [rsp + 0x10]
0x1a6f2:	mov	rcx, qword ptr [rsp + 8]
0x1a6f7:	cmp	qword ptr [rax], rcx
0x1a6fa:	jae	0x1a714


0x1a714:	xor	r8d, r8d
0x1a717:	xor	ecx, ecx
0x1a719:	xor	edx, edx
0x1a71b:	xor	esi, esi
0x1a71d:	mov	rdi, rbx
0x1a720:	lea	r15, [rsp + 0x38]
0x1a725:	call	0x1cd0


0x1a72a:	mov	rax, qword ptr [rsp + 0x28]
0x1a72f:	mov	qword ptr [rsp + 0x38], r13
0x1a734:	lea	r14, [rsp + 0x30]
0x1a739:	mov	qword ptr [rsp + 0x30], rax
0x1a73e:	mov	rax, qword ptr [rsp + 0x20]
0x1a743:	mov	qword ptr [rsp + 0x40], rax
0x1a748:	mov	rax, qword ptr [rsp + 8]
0x1a74d:	mov	qword ptr [rsp + 0x48], rax
0x1a752:	jmp	0x1a77b


0x1a77b:	test	r13, r13
0x1a77e:	jne	0x1a758


0x1a780:	xor	edx, edx
0x1a782:	xor	esi, esi
0x1a784:	mov	r8, r12
0x1a787:	mov	rcx, rbp
0x1a78a:	mov	rdi, rbx
0x1a78d:	call	0x1cd0


0x1a758:	mov	r8, r12
0x1a75b:	mov	rcx, rbp
0x1a75e:	mov	rdx, r15
0x1a761:	mov	rsi, r14
0x1a764:	mov	rdi, rbx
0x1a767:	call	0x1cd0


0x1a76c:	cmp	rax, -1
0x1a770:	je	0x1a810


0x1a810:	call	0x1c80


0x1a776:	mov	r13, qword ptr [rsp + 0x38]
0x1a77b:	test	r13, r13
0x1a77e:	jne	0x1a758


0x1a815:	cmp	dword ptr [rax], 0x16
0x1a818:	je	0x1a780


0x1a81e:	mov	rax, qword ptr [rsp + 0x18]
0x1a823:	mov	r15, qword ptr [rsp + 0x20]
0x1a828:	mov	ebx, 0xffffffff
0x1a82d:	cmp	qword ptr [rax], r15
0x1a830:	je	0x1a7c4


0x1a832:	call	0x1c80


0x1a837:	mov	r12d, dword ptr [rax]
0x1a83a:	mov	rbp, rax
0x1a83d:	mov	rdi, r15
0x1a840:	call	0x1c60


0x1a845:	mov	dword ptr [rbp], r12d
0x1a849:	jmp	0x1a7c4


0x1a792:	cmp	rax, -1
0x1a796:	je	0x1a81e


0x1a79c:	cmp	qword ptr [rsp + 0x48], 0
0x1a7a2:	jne	0x1a863


0x1a7a8:	mov	rax, qword ptr [rsp + 0x18]
0x1a7ad:	mov	rsi, qword ptr [rsp + 0x20]
0x1a7b2:	xor	ebx, ebx
0x1a7b4:	mov	rdi, qword ptr [rsp + 8]
0x1a7b9:	mov	qword ptr [rax], rsi
0x1a7bc:	mov	rax, qword ptr [rsp + 0x10]
0x1a7c1:	mov	qword ptr [rax], rdi
0x1a7c4:	mov	rdx, qword ptr [rsp + 0x1058]
0x1a7cc:	xor	rdx, qword ptr fs:[0x28]
0x1a7d5:	mov	eax, ebx
0x1a7d7:	jne	0x1a868


0x1a863:	call	0x1c70


0x1a706:	test	rax, rax
0x1a709:	mov	qword ptr [rsp + 0x20], rax
0x1a70e:	je	0x1a84e


0x1a84e:	call	0x1c80


0x1a853:	mov	dword ptr [rax], 0xc
0x1a859:	mov	ebx, 0xffffffff
0x1a85e:	jmp	0x1a7c4


0x9b56:	test	eax, eax
0x9b58:	mov	ebx, eax
0x9b5a:	js	0x9b60


0x9b60:	call	0x1c80


0x9b5c:	mov	eax, ebx
0x9b5e:	pop	rbx
0x9b5f:	ret	


0x9b65:	cmp	dword ptr [rax], 0xc
0x9b68:	jne	0x9b5c


0x9b6a:	call	0x9b10


0x6b75:	lea	rdi, [rax + 0xb]
0x6b79:	mov	r15, rax
0x6b7c:	call	0x98c0


0x6b81:	mov	rdx, r15
0x6b84:	mov	rsi, r12
0x6b87:	mov	rdi, rax
0x6b8a:	call	0x1ee0


0x6b8f:	mov	rcx, rax
0x6b92:	add	r15, rax
0x6b95:	movabs	rax, 0x4c534e4152542f2f
0x6b9f:	mov	qword ptr [r15], rax
0x6ba2:	lea	rsi, [rip + 0x15157]
0x6ba9:	mov	eax, 0x5449
0x6bae:	mov	rdx, rcx
0x6bb1:	mov	rdi, rbp
0x6bb4:	mov	word ptr [r15 + 8], ax
0x6bb9:	mov	byte ptr [r15 + 0xa], 0
0x6bbe:	mov	qword ptr [rsp + 8], rcx
0x6bc3:	call	0x9ba0


0x6bc8:	mov	rcx, qword ptr [rsp + 8]
0x6bcd:	mov	r12, rax
0x6bd0:	mov	rdi, rcx
0x6bd3:	call	0x1c60


0x6bd8:	test	r12, r12
0x6bdb:	je	0x6bf7


0x6bf7:	test	rbx, rbx
0x6bfa:	je	0x6c70


0x6bdd:	mov	esi, 0x3f
0x6be2:	mov	rdi, r12
0x6be5:	call	0x1df0


0x6c70:	mov	rbx, r13
0x6c73:	mov	qword ptr [rsp + 8], 0
0x6c7c:	xor	ebp, ebp
0x6c7e:	xor	r12d, r12d
0x6c81:	xor	r15d, r15d
0x6c84:	jmp	0x6a88


0x6bfc:	mov	rsi, r13
0x6bff:	mov	rdi, r14
0x6c02:	call	0x1ed0


0x1df0:	jmp	qword ptr [rip + 0x21f03a]


0x6a88:	mov	rsi, r13
0x6a8b:	mov	rdi, r14
0x6a8e:	call	0x1ed0




0x18388:	mov	rcx, r13
0x1838b:	mov	rdx, rax
0x1838e:	mov	rsi, r12
0x18391:	mov	rdi, rbx
0x18394:	call	0x16b00


0x18399:	cmp	eax, 0x10
0x1839c:	mov	ebp, eax
0x1839e:	je	0x183d8


0x183d8:	mov	ebp, 8
0x183dd:	mov	rdi, qword ptr [rbx + 0x20]
0x183e1:	call	0x1c60


0x183a0:	test	eax, eax
0x183a2:	jne	0x183dd


0x183a4:	mov	rdi, rbx
0x183a7:	call	0x17c80


0x183dd:	mov	rdi, qword ptr [rbx + 0x20]
0x183e1:	call	0x1c60


0x183ac:	pop	rbx
0x183ad:	mov	eax, ebp
0x183af:	pop	rbp
0x183b0:	pop	r12
0x183b2:	pop	r13
0x183b4:	pop	r14
0x183b6:	ret	


0x183e6:	mov	qword ptr [rbx + 0x20], 0
0x183ee:	jmp	0x183ac


0x18441:	test	r12, r12
0x18444:	lea	rbx, [rax + 1]
0x18448:	je	0x1845d


0x1845d:	add	rsp, 8
0x18461:	mov	rax, rbx
0x18464:	pop	rbx
0x18465:	pop	rbp
0x18466:	pop	r12
0x18468:	pop	r13
0x1846a:	ret	


0x1844a:	cmp	rbx, r12
0x1844d:	mov	rdx, rbx
0x18450:	ja	0x18478


0x18452:	mov	rsi, r13
0x18455:	mov	rdi, rbp
0x18458:	call	0x1ee0


0x18478:	lea	rdx, [r12 - 1]
0x1847d:	mov	byte ptr [rbp + r12 - 1], 0
0x18483:	jmp	0x18452


0x18516:	xor	ecx, ecx
0x18518:	test	byte ptr [rbp + 0x38], 0x10
0x1851c:	mov	rdx, rax
0x1851f:	mov	rsi, qword ptr [rsp + 8]
0x18524:	je	0x18566


0x4a3c:	lea	rdi, [rax + 1]
0x4a40:	call	0x98c0


0x4a45:	mov	r12, rax
0x4a48:	movzx	eax, byte ptr [rbx]
0x4a4b:	mov	rbp, r12
0x4a4e:	test	al, al
0x4a50:	je	0x4a6e


0x4a6e:	mov	byte ptr [rbp], 0
0x4a72:	mov	rax, r12
0x4a75:	pop	rbx
0x4a76:	pop	rbp
0x4a77:	pop	r12
0x4a79:	ret	


0x4a52:	cmp	al, 0x5c
0x4a54:	movzx	edx, byte ptr [rbx + 1]
0x4a58:	lea	rcx, [rbx + 1]
0x4a5c:	je	0x4a80


0x4a80:	cmp	dl, 0x66
0x4a83:	je	0x4c20


0x4a5e:	mov	byte ptr [rbp], al
0x4a61:	mov	eax, edx
0x4a63:	add	rbp, 1
0x4a67:	test	al, al
0x4a69:	mov	rbx, rcx
0x4a6c:	jne	0x4a52


0x4c20:	mov	byte ptr [rbp], 0xc
0x4c24:	movzx	eax, byte ptr [rbx + 2]
0x4c28:	add	rbp, 1
0x4c2c:	add	rbx, 2
0x4c30:	jmp	0x4a4e


0x4a89:	jg	0x4ac8


0x4a4e:	test	al, al
0x4a50:	je	0x4a6e


0x4a8b:	cmp	dl, 0x61
0x4a8e:	je	0x4c38


0x4ac8:	cmp	dl, 0x74
0x4acb:	je	0x4c50


0x4c38:	mov	byte ptr [rbp], 7
0x4c3c:	movzx	eax, byte ptr [rbx + 2]
0x4c40:	add	rbp, 1
0x4c44:	add	rbx, 2
0x4c48:	jmp	0x4a4e


0x4a94:	jle	0x4b68


0x4c50:	mov	byte ptr [rbp], 9
0x4c54:	movzx	eax, byte ptr [rbx + 2]
0x4c58:	add	rbp, 1
0x4c5c:	add	rbx, 2
0x4c60:	jmp	0x4a4e


0x4ad1:	jle	0x4b40


0x4b68:	test	dl, dl
0x4b6a:	je	0x4a6e


0x4a9a:	cmp	dl, 0x62
0x4a9d:	je	0x4c68


0x4b40:	cmp	dl, 0x6e
0x4b43:	je	0x4c08


0x4ad3:	cmp	dl, 0x76
0x4ad6:	je	0x4bf0


0x4b70:	cmp	dl, 0x30
0x4b73:	jne	0x4bb8


0x4c68:	mov	byte ptr [rbp], 8
0x4c6c:	movzx	eax, byte ptr [rbx + 2]
0x4c70:	add	rbp, 1
0x4c74:	add	rbx, 2
0x4c78:	jmp	0x4a4e


0x4aa3:	cmp	dl, 0x63
0x4aa6:	jne	0x4bb8


0x4c08:	mov	byte ptr [rbp], 0xa
0x4c0c:	movzx	eax, byte ptr [rbx + 2]
0x4c10:	add	rbp, 1
0x4c14:	add	rbx, 2
0x4c18:	jmp	0x4a4e


0x4b49:	cmp	dl, 0x72
0x4b4c:	jne	0x4bb8


0x4bf0:	mov	byte ptr [rbp], 0xb
0x4bf4:	movzx	eax, byte ptr [rbx + 2]
0x4bf8:	add	rbp, 1
0x4bfc:	add	rbx, 2
0x4c00:	jmp	0x4a4e


0x4adc:	cmp	dl, 0x78
0x4adf:	jne	0x4bb8


0x4b75:	lea	rdx, [rbx + 2]
0x4b79:	movsx	eax, byte ptr [rdx]
0x4b7c:	xor	ecx, ecx
0x4b7e:	lea	rdi, [rbx + 5]
0x4b82:	lea	esi, [rax - 0x30]
0x4b85:	cmp	sil, 7
0x4b89:	ja	0x4bab


0x4bb8:	mov	byte ptr [rbp], 0x5c
0x4bbc:	mov	byte ptr [rbp + 1], dl
0x4bbf:	add	rbx, 2
0x4bc3:	movzx	eax, byte ptr [rbx]
0x4bc6:	add	rbp, 2
0x4bca:	jmp	0x4a4e


0x4b4e:	mov	byte ptr [rbp], 0xd
0x4b52:	movzx	eax, byte ptr [rbx + 2]
0x4b56:	add	rbp, 1
0x4b5a:	add	rbx, 2
0x4b5e:	jmp	0x4a4e


0x4ae5:	call	0x20e0


0x4b8b:	lea	rbx, [rdx + 1]
0x4b8f:	lea	ecx, [rax + rcx*8 - 0x30]
0x4b93:	cmp	rdi, rbx
0x4b96:	je	0x4c80


0x4bab:	mov	rbx, rdx
0x4bae:	jmp	0x4c84


0x4ab9:	add	rcx, 1
0x4abd:	cmp	byte ptr [rcx], 0
0x4ac0:	jne	0x4ab0


0x4c80:	movzx	eax, byte ptr [rdx + 1]
0x4c84:	mov	byte ptr [rbp], cl
0x4c87:	add	rbp, 1
0x4c8b:	jmp	0x4a4e


0x4b9c:	mov	rdx, rbx
0x4b9f:	movsx	eax, byte ptr [rdx]
0x4ba2:	lea	esi, [rax - 0x30]
0x4ba5:	cmp	sil, 7
0x4ba9:	jbe	0x4b8b


0x4c84:	mov	byte ptr [rbp], cl
0x4c87:	add	rbp, 1
0x4c8b:	jmp	0x4a4e


0x4ac2:	jmp	0x4a6e


0x4ab0:	add	rcx, 1
0x4ab4:	cmp	byte ptr [rcx], 0
0x4ab7:	je	0x4a6e


0x4aea:	mov	r8, qword ptr [rax]
0x4aed:	add	rbx, 2
0x4af1:	xor	edi, edi
0x4af3:	xor	ecx, ecx
0x4af5:	movsx	edx, byte ptr [rbx]
0x4af8:	movzx	esi, dl
0x4afb:	mov	eax, edx
0x4afd:	test	byte ptr [r8 + rsi*2 + 1], 0x10
0x4b03:	je	0x4c90


0x4c90:	test	edi, edi
0x4c92:	jne	0x4b2c


0x4b09:	mov	esi, ecx
0x4b0b:	lea	ecx, [rax - 0x61]
0x4b0e:	shl	esi, 4
0x4b11:	cmp	cl, 5
0x4b14:	ja	0x4bd0


0x4c98:	mov	edx, 0x785c
0x4c9d:	add	rbp, 2
0x4ca1:	mov	word ptr [rbp - 2], dx
0x4ca5:	jmp	0x4a4e


0x4b2c:	mov	byte ptr [rbp], cl
0x4b2f:	movzx	eax, byte ptr [rbx]
0x4b32:	add	rbp, 1
0x4b36:	jmp	0x4a4e


0x4b1a:	lea	eax, [rdx - 0x57]
0x4b1d:	add	edi, 1
0x4b20:	add	rbx, 1
0x4b24:	lea	ecx, [rsi + rax]
0x4b27:	cmp	edi, 3
0x4b2a:	jne	0x4af5


0x4bd0:	lea	r9d, [rax - 0x41]
0x4bd4:	lea	ecx, [rdx - 0x30]
0x4bd7:	lea	eax, [rdx - 0x37]
0x4bda:	cmp	r9b, 5
0x4bde:	cmova	eax, ecx
0x4be1:	jmp	0x4b1d


0x4af5:	movsx	edx, byte ptr [rbx]
0x4af8:	movzx	esi, dl
0x4afb:	mov	eax, edx
0x4afd:	test	byte ptr [r8 + rsi*2 + 1], 0x10
0x4b03:	je	0x4c90


0x4b1d:	add	edi, 1
0x4b20:	add	rbx, 1
0x4b24:	lea	ecx, [rsi + rax]
0x4b27:	cmp	edi, 3
0x4b2a:	jne	0x4af5


0x4cf6:	mov	rdx, rbp
0x4cf9:	mov	rsi, rax
0x4cfc:	mov	rdi, rbx
0x4cff:	call	0x17c00


0x4d04:	test	rax, rax
0x4d07:	jne	0x4d15


0x4d09:	pop	rbx
0x4d0a:	mov	rdi, rbp
0x4d0d:	pop	rbp
0x4d0e:	pop	r12
0x4d10:	jmp	0x17c80


0x4d15:	mov	rdi, rbx
0x4d18:	mov	r12, rax
0x4d1b:	call	0x8990


0x5966:	mov	r14, qword ptr [r15]
0x5969:	mov	qword ptr [rsp], -1
0x5971:	test	r14, r14
0x5974:	je	0x5a2d


0x5a2d:	mov	rax, qword ptr [rsp]
0x5a31:	add	rsp, 0x28
0x5a35:	pop	rbx
0x5a36:	pop	rbp
0x5a37:	pop	r12
0x5a39:	pop	r13
0x5a3b:	pop	r14
0x5a3d:	pop	r15
0x5a3f:	ret	


0x597a:	mov	r12, rax
0x597d:	mov	byte ptr [rsp + 0x17], 0
0x5982:	xor	ebx, ebx
0x5984:	jmp	0x59d7


0x59d7:	mov	rsi, qword ptr [rsp + 8]
0x59dc:	mov	rdx, r12
0x59df:	mov	rdi, r14
0x59e2:	call	0x1c90


0x1c90:	jmp	qword ptr [rip + 0x21f0ea]




0x5c31:	test	rax, rax
0x5c34:	js	0x5c45


0x5c45:	mov	rdx, rax
0x5c48:	mov	rsi, r12
0x5c4b:	mov	rdi, r14
0x5c4e:	call	0x5a60


0x5c36:	add	rsp, 8
0x5c3a:	pop	rbx
0x5c3b:	pop	rbp
0x5c3c:	pop	r12
0x5c3e:	pop	r13
0x5c40:	pop	r14
0x5c42:	pop	r15
0x5c44:	ret	


0x9af9:	mov	rdi, rbx
0x9afc:	lea	rsi, [rax + 1]
0x9b00:	pop	rbx
0x9b01:	jmp	0x9ac0


0xf714:	cmp	rax, 1
0xf718:	jne	0xf740


0xf71a:	movzx	ecx, byte ptr [rbx]
0xf71d:	mov	rdx, rcx
0xf720:	and	ecx, 0x3f
0xf723:	shr	rdx, 3
0xf727:	shl	rax, cl
0xf72a:	and	edx, 0x18
0xf72d:	or	qword ptr [rbp + rdx], rax
0xf732:	add	rsp, 8
0xf736:	xor	eax, eax
0xf738:	pop	rbx
0xf739:	pop	rbp
0xf73a:	ret	


0xf740:	add	rsp, 8
0xf744:	mov	eax, 3
0xf749:	pop	rbx
0xf74a:	pop	rbp
0xf74b:	ret	


0x1a89b:	mov	r13, rax
0x1a89e:	mov	qword ptr [rsp + 0x30], rax
0x1a8a3:	shl	r13, 4
0x1a8a7:	cmp	rax, 0x10000000
0x1a8ad:	cmovae	r13, rax
0x1a8b1:	lea	rbp, [r13 + 1]
0x1a8b5:	mov	rdi, rbp
0x1a8b8:	call	0x1f20


0x1a8bd:	test	rax, rax
0x1a8c0:	mov	rbx, rax
0x1a8c3:	je	0x1aaa0


0x1aaa0:	call	0x1c80


0x1a8c9:	xor	r8d, r8d
0x1a8cc:	xor	ecx, ecx
0x1a8ce:	xor	edx, edx
0x1a8d0:	xor	esi, esi
0x1a8d2:	mov	rdi, r12
0x1a8d5:	call	0x1cd0


0x1a8da:	lea	rax, [rsp + 0x40]
0x1a8df:	mov	qword ptr [rsp + 0x38], rbx
0x1a8e4:	mov	qword ptr [rsp + 0x40], r13
0x1a8e9:	mov	qword ptr [rsp + 8], rax
0x1a8ee:	lea	rax, [rsp + 0x38]
0x1a8f3:	mov	qword ptr [rsp], rax
0x1a8f7:	lea	rax, [rsp + 0x30]
0x1a8fc:	mov	qword ptr [rsp + 0x18], rax
0x1a901:	lea	rax, [rsp + 0x28]
0x1a906:	mov	qword ptr [rsp + 0x10], rax
0x1a90b:	jmp	0x1a974


0x1a974:	mov	r8, qword ptr [rsp + 8]
0x1a979:	mov	rcx, qword ptr [rsp]
0x1a97d:	mov	rdi, r12
0x1a980:	mov	rdx, qword ptr [rsp + 0x18]
0x1a985:	mov	rsi, qword ptr [rsp + 0x10]
0x1a98a:	call	0x1cd0


0x1a98f:	cmp	rax, -1
0x1a993:	je	0x1a910


0x1a910:	call	0x1c80


0x1a999:	jmp	0x1aa06


0x1aa06:	mov	r8, qword ptr [rsp + 8]
0x1aa0b:	mov	rcx, qword ptr [rsp]
0x1aa0f:	xor	edx, edx
0x1aa11:	xor	esi, esi
0x1aa13:	mov	rdi, r12
0x1aa16:	call	0x1cd0


0x1aa1b:	cmp	rax, -1
0x1aa1f:	je	0x1a9a0


0x1a9a0:	call	0x1c80


0x1aa25:	mov	rax, qword ptr [rsp + 0x38]
0x1aa2a:	lea	rdx, [rax + 1]
0x1aa2e:	mov	qword ptr [rsp + 0x38], rdx
0x1aa33:	mov	byte ptr [rax], 0
0x1aa36:	mov	rsi, qword ptr [rsp + 0x38]
0x1aa3b:	sub	rsi, rbx
0x1aa3e:	cmp	rbp, rsi
0x1aa41:	jbe	0x1aa68


0x1aa68:	mov	rdi, qword ptr [rsp + 0x48]
0x1aa6d:	xor	rdi, qword ptr fs:[0x28]
0x1aa76:	mov	rax, rbx
0x1aa79:	jne	0x1aaad


0x1aa43:	mov	rdi, rbx
0x1aa46:	call	0x1f90


0x1aa7b:	add	rsp, 0x58
0x1aa7f:	pop	rbx
0x1aa80:	pop	rbp
0x1aa81:	pop	r12
0x1aa83:	pop	r13
0x1aa85:	pop	r14
0x1aa87:	pop	r15
0x1aa89:	ret	


0x1aaad:	call	0x1db0


0x1aa4b:	test	rax, rax
0x1aa4e:	cmovne	rbx, rax
0x1aa52:	jmp	0x1aa68


0x1a9a5:	cmp	dword ptr [rax], 7
0x1a9a8:	mov	rcx, rax
0x1a9ab:	jne	0x1aa5e


0x1a9b1:	mov	r15, qword ptr [rsp + 0x38]
0x1a9b6:	lea	rdx, [rbp + rbp]
0x1a9bb:	sub	r15, rbx
0x1a9be:	cmp	rbp, rdx
0x1a9c1:	jae	0x1aa58


0x1aa5e:	mov	rdi, rbx
0x1aa61:	xor	ebx, ebx
0x1aa63:	call	0x1c60


0x1a9c7:	mov	rsi, rdx
0x1a9ca:	mov	rdi, rbx
0x1a9cd:	mov	qword ptr [rsp + 0x10], rdx
0x1a9d2:	mov	qword ptr [rsp + 0x18], rax
0x1a9d7:	call	0x1f90


0x1aa58:	mov	dword ptr [rcx], 0xc
0x1aa5e:	mov	rdi, rbx
0x1aa61:	xor	ebx, ebx
0x1aa63:	call	0x1c60


0x1a9dc:	test	rax, rax
0x1a9df:	mov	rdx, qword ptr [rsp + 0x10]
0x1a9e4:	mov	rcx, qword ptr [rsp + 0x18]
0x1a9e9:	je	0x1aa58


0x1a9eb:	lea	rcx, [rax + r15]
0x1a9ef:	mov	rbp, rdx
0x1a9f2:	mov	rbx, rax
0x1a9f5:	mov	qword ptr [rsp + 0x38], rcx
0x1a9fa:	lea	rcx, [rdx - 1]
0x1a9fe:	sub	rcx, r15
0x1aa01:	mov	qword ptr [rsp + 0x40], rcx
0x1aa06:	mov	r8, qword ptr [rsp + 8]
0x1aa0b:	mov	rcx, qword ptr [rsp]
0x1aa0f:	xor	edx, edx
0x1aa11:	xor	esi, esi
0x1aa13:	mov	rdi, r12
0x1aa16:	call	0x1cd0


0x1a915:	mov	r15, rax
0x1a918:	mov	eax, dword ptr [rax]
0x1a91a:	cmp	eax, 0x16
0x1a91d:	je	0x1aa06


0x1a923:	cmp	eax, 7
0x1a926:	jne	0x1aa5e


0x1a92c:	mov	r14, qword ptr [rsp + 0x38]
0x1a931:	lea	r13, [rbp + rbp]
0x1a936:	sub	r14, rbx
0x1a939:	cmp	rbp, r13
0x1a93c:	jae	0x1aa90


0x1a942:	mov	rsi, r13
0x1a945:	mov	rdi, rbx
0x1a948:	call	0x1f90


0x1aa90:	mov	dword ptr [r15], 0xc
0x1aa97:	jmp	0x1aa5e


0x1a94d:	test	rax, rax
0x1a950:	je	0x1aa90


0x1a956:	lea	rsi, [rax + r14]
0x1a95a:	mov	rbx, rax
0x1a95d:	mov	rbp, r13
0x1a960:	mov	qword ptr [rsp + 0x38], rsi
0x1a965:	lea	rsi, [r13 - 1]
0x1a969:	mov	rdx, rsi
0x1a96c:	sub	rdx, r14
0x1a96f:	mov	qword ptr [rsp + 0x40], rdx
0x1a974:	mov	r8, qword ptr [rsp + 8]
0x1a979:	mov	rcx, qword ptr [rsp]
0x1a97d:	mov	rdi, r12
0x1a980:	mov	rdx, qword ptr [rsp + 0x18]
0x1a985:	mov	rsi, qword ptr [rsp + 0x10]
0x1a98a:	call	0x1cd0


0x1aaa5:	mov	dword ptr [rax], 0xc
0x1aaab:	jmp	0x1aa68


0x1ab2b:	test	rax, rax
0x1ab2e:	mov	rbx, rax
0x1ab31:	je	0x1ab80


0x1ab80:	call	0x1c80


0x1ab33:	mov	rdi, rbp
0x1ab36:	call	0x1fc0


0x1fc0:	jmp	qword ptr [rip + 0x21ef52]




0x1ab85:	mov	r13d, dword ptr [rax]
0x1ab88:	mov	r12, rax
0x1ab8b:	mov	rdi, rbp
0x1ab8e:	call	0x1fc0


0x9b76:	test	rax, rax
0x9b79:	mov	rbx, rax
0x9b7c:	je	0x9b88


0x9b88:	call	0x1c80


0x9b7e:	mov	rax, rbx
0x9b81:	pop	rbx
0x9b82:	ret	


0x9b8d:	cmp	dword ptr [rax], 0xc
0x9b90:	jne	0x9b7e


0x9b92:	call	0x9b10


0x16c27:	mov	edi, 0xe
0x16c2c:	mov	dword ptr [rbx + 0xb4], eax
0x16c32:	call	0x1f50


0x16c37:	movzx	edx, byte ptr [rax]
0x16c3a:	and	edx, 0xffffffdf
0x16c3d:	cmp	dl, 0x55
0x16c40:	jne	0x16c90


0x16c42:	movzx	edx, byte ptr [rax + 1]
0x16c46:	and	edx, 0xffffffdf
0x16c49:	cmp	dl, 0x54
0x16c4c:	jne	0x16c90


0x16c90:	movzx	eax, byte ptr [rbx + 0xb0]
0x16c97:	mov	edx, eax
0x16c99:	and	edx, 0xfffffff7
0x16c9c:	cmp	dword ptr [rbx + 0xb4], 1
0x16ca3:	mov	byte ptr [rbx + 0xb0], dl
0x16ca9:	jle	0x16cbe


0x16c4e:	movzx	edx, byte ptr [rax + 2]
0x16c52:	and	edx, 0xffffffdf
0x16c55:	cmp	dl, 0x46
0x16c58:	jne	0x16c90


0x16cbe:	cmp	qword ptr [rbx], 0
0x16cc2:	je	0x17206


0x16cab:	test	al, 4
0x16cad:	je	0x17213


0x16c5a:	xor	edx, edx
0x16c5c:	cmp	byte ptr [rax + 3], 0x2d
0x16c60:	lea	rdi, [rip + 0x509d]
0x16c67:	mov	ecx, 2
0x16c6c:	sete	dl
0x16c6f:	lea	rsi, [rax + rdx + 3]
0x16c74:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x16cc8:	cmp	qword ptr [rbx + 0x40], 0
0x16ccd:	je	0x17206


0x17213:	mov	esi, 1
0x17218:	mov	edi, 0x20
0x1721d:	call	0x1ec0


0x16cb3:	lea	rax, [rip + 0x6046]
0x16cba:	mov	qword ptr [rbx + 0x78], rax
0x16cbe:	cmp	qword ptr [rbx], 0
0x16cc2:	je	0x17206


0x16c74:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x16c76:	seta	al
0x16c79:	sbb	al, 0
0x16c7b:	test	al, al
0x16c7d:	jne	0x16c90


0x16cd3:	mov	rax, qword ptr [rsp + 0x18]
0x16cd8:	lea	rbp, [rsp + 0x80]
0x16ce0:	mov	ecx, 0x12
0x16ce5:	mov	dword ptr [rsp + 0x4c], 0
0x16ced:	lea	r8, [rbp + 8]
0x16cf1:	and	eax, 0x400000
0x16cf6:	mov	qword ptr [rsp + 0x20], rax
0x16cfb:	mov	rax, qword ptr [rsp + 8]
0x16d00:	setne	dl
0x16d03:	mov	rdi, r8
0x16d06:	mov	rsi, qword ptr [rax + 0x28]
0x16d0a:	xor	eax, eax
0x16d0c:	rep stosq	qword ptr [rdi], rax


0x16c7f:	or	byte ptr [rbx + 0xb0], 4
0x16c86:	nop	word ptr cs:[rax + rax]
0x16c90:	movzx	eax, byte ptr [rbx + 0xb0]
0x16c97:	mov	edx, eax
0x16c99:	and	edx, 0xfffffff7
0x16c9c:	cmp	dword ptr [rbx + 0xb4], 1
0x16ca3:	mov	byte ptr [rbx + 0xb0], dl
0x16ca9:	jle	0x16cbe


0x16d0c:	rep stosq	qword ptr [rdi], rax


0x16d0f:	mov	rax, qword ptr [rsp + 0x10]
0x16d14:	mov	rdi, qword ptr [rsp]
0x16d18:	test	rsi, rsi
0x16d1b:	mov	byte ptr [rsp + 0x108], dl
0x16d22:	mov	ecx, dword ptr [rbx + 0xb4]
0x16d28:	setne	r12b
0x16d2c:	mov	qword ptr [rsp + 0xf8], rsi
0x16d34:	mov	qword ptr [rsp + 0x80], rax
0x16d3c:	movzx	eax, byte ptr [rbx + 0xb0]
0x16d43:	or	r12d, edx
0x16d46:	mov	qword ptr [rsp + 0xd8], rdi
0x16d4e:	mov	qword ptr [rsp + 0xd0], rdi
0x16d56:	mov	esi, r12d
0x16d59:	mov	byte ptr [rsp + 0x10b], r12b
0x16d61:	mov	dword ptr [rsp + 0x110], ecx
0x16d68:	mov	qword ptr [rsp + 0xe8], rdi
0x16d70:	mov	qword ptr [rsp + 0xe0], rdi
0x16d78:	mov	edx, eax
0x16d7a:	shr	al, 3
0x16d7d:	shr	dl, 2
0x16d80:	and	eax, 1
0x16d83:	and	edx, 1
0x16d86:	test	rdi, rdi
0x16d89:	mov	byte ptr [rsp + 0x10a], al
0x16d90:	mov	byte ptr [rsp + 0x109], dl
0x16d97:	jne	0x171d5


0x16d9d:	test	sil, sil
0x16da0:	je	0x16daf


0x171d5:	mov	rsi, qword ptr [rsp + 0x28]
0x171da:	mov	rdi, rbp
0x171dd:	call	0xa900


0x16daf:	cmp	qword ptr [rsp + 0x20], 0
0x16db5:	mov	rax, qword ptr [rsp + 0x10]
0x16dba:	mov	qword ptr [rsp + 0x88], rax
0x16dc2:	je	0x16ec5


0x16da2:	mov	rax, qword ptr [rsp + 0x88]
0x16daa:	mov	qword ptr [rsp + 0x10], rax
0x16daf:	cmp	qword ptr [rsp + 0x20], 0
0x16db5:	mov	rax, qword ptr [rsp + 0x10]
0x16dba:	mov	qword ptr [rsp + 0x88], rax
0x16dc2:	je	0x16ec5


0x16ec5:	cmp	ecx, 1
0x16ec8:	jg	0x1787a


0x16dc8:	cmp	ecx, 1
0x16dcb:	jle	0x179bd


0x16ece:	test	r12b, r12b
0x16ed1:	mov	rsi, qword ptr [rsp + 0xc0]
0x16ed9:	je	0x174f4


0x1787a:	mov	rdi, rbp
0x1787d:	call	0xaca0


0x179bd:	mov	rdi, rbp
0x179c0:	call	0xac30


0x16dd1:	mov	rdi, rbp
0x16dd4:	call	0xae70


0x174f4:	mov	qword ptr [rsp + 0xb0], rsi
0x174fc:	mov	qword ptr [rsp + 0xb8], rsi
0x17504:	mov	dword ptr [rsp + 0x4c], 0
0x1750c:	jmp	0x16f58


0x16edf:	cmp	qword ptr [rsp + 0xd8], rsi
0x16ee7:	mov	rax, qword ptr [rsp + 0xb0]
0x16eef:	cmovle	rsi, qword ptr [rsp + 0xd8]
0x16ef8:	cmp	rsi, rax
0x16efb:	jg	0x16f0d


0x16f58:	mov	r12, qword ptr [rsp + 8]
0x16f5d:	mov	r14, qword ptr [rsp + 0x18]
0x16f62:	lea	r13, [rsp + 0x50]
0x16f67:	mov	rsi, rbp
0x16f6a:	mov	rdi, r13
0x16f6d:	mov	qword ptr [rsp + 0x28], r13
0x16f72:	mov	r15, qword ptr [r12]
0x16f76:	mov	rdx, r14
0x16f79:	mov	qword ptr [r12 + 0x30], 0
0x16f82:	or	rdx, 0x800000
0x16f89:	mov	qword ptr [r15 + 0xd8], r14
0x16f90:	call	0x14b50


0x16efd:	jmp	0x16f40


0x16f0d:	mov	rdx, qword ptr [rsp + 0x80]
0x16f15:	mov	rcx, qword ptr [rsp + 0xf8]
0x16f1d:	add	rdx, rax
0x16f20:	add	rdx, qword ptr [rsp + 0xa8]
0x16f28:	movzx	edx, byte ptr [rdx]
0x16f2b:	movzx	edx, byte ptr [rcx + rdx]
0x16f2f:	mov	rcx, qword ptr [rsp + 0x10]
0x16f34:	mov	byte ptr [rcx + rax], dl
0x16f37:	add	rax, 1
0x16f3b:	cmp	rsi, rax
0x16f3e:	jne	0x16f00


0x16f40:	mov	qword ptr [rsp + 0xb0], rax
0x16f48:	mov	qword ptr [rsp + 0xb8], rax
0x16f50:	mov	dword ptr [rsp + 0x4c], 0
0x16f58:	mov	r12, qword ptr [rsp + 8]
0x16f5d:	mov	r14, qword ptr [rsp + 0x18]
0x16f62:	lea	r13, [rsp + 0x50]
0x16f67:	mov	rsi, rbp
0x16f6a:	mov	rdi, r13
0x16f6d:	mov	qword ptr [rsp + 0x28], r13
0x16f72:	mov	r15, qword ptr [r12]
0x16f76:	mov	rdx, r14
0x16f79:	mov	qword ptr [r12 + 0x30], 0
0x16f82:	or	rdx, 0x800000
0x16f89:	mov	qword ptr [r15 + 0xd8], r14
0x16f90:	call	0x14b50


0x16f00:	mov	rdx, qword ptr [rsp + 0x88]
0x16f08:	mov	qword ptr [rsp + 0x10], rdx
0x16f0d:	mov	rdx, qword ptr [rsp + 0x80]
0x16f15:	mov	rcx, qword ptr [rsp + 0xf8]
0x16f1d:	add	rdx, rax
0x16f20:	add	rdx, qword ptr [rsp + 0xa8]
0x16f28:	movzx	edx, byte ptr [rdx]
0x16f2b:	movzx	edx, byte ptr [rcx + rdx]
0x16f2f:	mov	rcx, qword ptr [rsp + 0x10]
0x16f34:	mov	byte ptr [rcx + rax], dl
0x16f37:	add	rax, 1
0x16f3b:	cmp	rsi, rax
0x16f3e:	jne	0x16f00


0x16f95:	lea	r9, [rsp + 0x4c]
0x16f9a:	xor	r8d, r8d
0x16f9d:	mov	rcx, r14
0x16fa0:	mov	rdx, r13
0x16fa3:	mov	rsi, r12
0x16fa6:	mov	rdi, rbp
0x16fa9:	cdqe	
0x16fab:	add	qword ptr [rsp + 0xc8], rax
0x16fb3:	call	0x16980


0x16fb8:	mov	ecx, dword ptr [rsp + 0x4c]
0x16fbc:	test	ecx, ecx
0x16fbe:	jne	0x179e7


0x16fc4:	lea	r13, [r15 + 0x70]
0x16fc8:	lea	r12, [rsp + 0x60]
0x16fcd:	sub	r15, -0x80
0x16fd1:	xor	edx, edx
0x16fd3:	xor	ecx, ecx
0x16fd5:	mov	rsi, r15
0x16fd8:	mov	r8, r12
0x16fdb:	mov	rdi, r13
0x16fde:	mov	qword ptr [rsp], rax
0x16fe2:	mov	byte ptr [rsp + 0x68], 2
0x16fe7:	call	0xcc10


0x179e7:	test	rax, rax
0x179ea:	je	0x17b1b


0x17b1b:	mov	rax, qword ptr [rsp + 8]
0x17b20:	mov	qword ptr [rbx + 0x68], 0
0x17b28:	mov	r13, qword ptr [rax]
0x17b2b:	jmp	0x16e2c


0x179f0:	lea	r13, [r15 + 0x70]
0x179f4:	lea	r12, [rsp + 0x60]
0x179f9:	sub	r15, -0x80
0x179fd:	xor	ecx, ecx
0x179ff:	xor	edx, edx
0x17a01:	mov	rsi, r15
0x17a04:	mov	r8, r12
0x17a07:	mov	rdi, r13
0x17a0a:	mov	qword ptr [rsp], rax
0x17a0e:	mov	byte ptr [rsp + 0x68], 2
0x17a13:	call	0xcc10


0x16e2c:	mov	rdi, qword ptr [r13 + 0x70]
0x16e30:	test	rdi, rdi
0x16e33:	je	0x16e48


0x16e48:	mov	rdi, qword ptr [r13 + 0x20]
0x16e4c:	mov	qword ptr [r13 + 0x70], 0
0x16e54:	mov	dword ptr [r13 + 0x80], 0xf
0x16e5f:	mov	qword ptr [r13 + 0x68], 0
0x16e67:	call	0x1c60


0x16e40:	test	r12, r12
0x16e43:	mov	rdi, r12
0x16e46:	jne	0x16e38


0x16e38:	mov	r12, qword ptr [rdi]
0x16e3b:	call	0x1c60


0x16e6c:	mov	qword ptr [r13 + 0x20], 0
0x16e74:	mov	rdi, rbp
0x16e77:	call	0xbc40


0x17a18:	mov	r9, qword ptr [rsp]
0x17a1c:	mov	r11, rax
0x17a1f:	jmp	0x16ffb


0x16ffb:	mov	rcx, r11
0x16ffe:	mov	rdx, r9
0x17001:	mov	r8, r12
0x17004:	mov	rsi, r15
0x17007:	mov	rdi, r13
0x1700a:	mov	qword ptr [rsp], r11
0x1700e:	mov	byte ptr [rsp + 0x68], 0x10
0x17013:	call	0xcc10


0x17018:	mov	r11, qword ptr [rsp]
0x1701c:	mov	rdx, r11
0x1701f:	mov	r11, rax
0x17022:	test	rdx, rdx
0x17025:	mov	rcx, qword ptr [rsp + 8]
0x1702a:	sete	dl
0x1702d:	test	r11, r11
0x17030:	sete	al
0x17033:	or	dl, al
0x17035:	mov	r13, qword ptr [rcx]
0x17038:	jne	0x179d2


0x1703e:	mov	r15, qword ptr [r13 + 8]
0x17042:	mov	qword ptr [rbx + 0x68], r11
0x17046:	lea	rcx, [r15*8]
0x1704e:	lea	r15, [r15 + r15*2]
0x17052:	mov	rdi, rcx
0x17055:	mov	qword ptr [rsp], rcx
0x17059:	shl	r15, 3
0x1705d:	call	0x1f20


0x179d2:	mov	dword ptr [rsp + 0x4c], 0xc
0x179da:	mov	qword ptr [rbx + 0x68], 0
0x179e2:	jmp	0x16e2c


0x17062:	mov	rcx, qword ptr [rsp]
0x17066:	mov	qword ptr [r13 + 0x18], rax
0x1706a:	mov	qword ptr [rsp + 0x18], rax
0x1706f:	mov	rdi, rcx
0x17072:	call	0x1f20


0x17077:	mov	rdi, r15
0x1707a:	mov	qword ptr [r13 + 0x20], rax
0x1707e:	mov	qword ptr [rsp + 0x10], rax
0x17083:	call	0x1f20


0x17088:	mov	rdi, r15
0x1708b:	mov	qword ptr [r13 + 0x28], rax
0x1708f:	mov	qword ptr [rsp], rax
0x17093:	call	0x1f20


0x17098:	mov	rdx, qword ptr [rsp + 0x18]
0x1709d:	mov	qword ptr [r13 + 0x30], rax
0x170a1:	mov	rsi, qword ptr [rsp]
0x170a5:	mov	rcx, qword ptr [rsp + 0x10]
0x170aa:	test	rdx, rdx
0x170ad:	je	0x1786d


0x1786d:	mov	dword ptr [rsp + 0x4c], 0xc
0x17875:	jmp	0x16e2c


0x170b3:	test	rcx, rcx
0x170b6:	je	0x1786d


0x170bc:	test	rsi, rsi
0x170bf:	je	0x1786d


0x170c5:	test	rax, rax
0x170c8:	je	0x1786d


0x170ce:	mov	rax, qword ptr [rsp + 8]
0x170d3:	mov	r15, qword ptr [rax + 0x30]
0x170d7:	lea	rdi, [r15*8]
0x170df:	call	0x1f20


0x170e4:	test	rax, rax
0x170e7:	mov	qword ptr [r13 + 0xe0], rax
0x170ee:	je	0x1715d


0x1715d:	mov	rdi, qword ptr [r13 + 0x68]
0x17161:	mov	rdx, qword ptr [rsp + 8]
0x17166:	lea	rsi, [rip - 0xa15d]
0x1716d:	call	0xa830


0x170f0:	test	r15, r15
0x170f3:	je	0x1710d


0x1710d:	mov	rdi, qword ptr [r13 + 0x68]
0x17111:	lea	rsi, [rip - 0xb008]
0x17118:	mov	rdx, r13
0x1711b:	call	0xa8a0


0x170f5:	xor	edx, edx
0x170f7:	nop	word ptr [rax + rax]
0x17100:	mov	qword ptr [rax + rdx*8], rdx
0x17104:	add	rdx, 1
0x17108:	cmp	rdx, r15
0x1710b:	jne	0x17100


0x17100:	mov	qword ptr [rax + rdx*8], rdx
0x17104:	add	rdx, 1
0x17108:	cmp	rdx, r15
0x1710b:	jne	0x17100


0x16fec:	mov	r9, qword ptr [rsp]
0x16ff0:	mov	r11, rax
0x16ff3:	mov	rdx, rax
0x16ff6:	test	r9, r9
0x16ff9:	je	0x17022


0x17022:	test	rdx, rdx
0x17025:	mov	rcx, qword ptr [rsp + 8]
0x1702a:	sete	dl
0x1702d:	test	r11, r11
0x17030:	sete	al
0x17033:	or	dl, al
0x17035:	mov	r13, qword ptr [rcx]
0x17038:	jne	0x179d2


0x16dd9:	test	eax, eax
0x16ddb:	jne	0x16e20


0x16ddd:	mov	rax, qword ptr [rsp]
0x16de1:	cmp	rax, qword ptr [rsp + 0xb8]
0x16de9:	jle	0x179a0


0x16e20:	mov	dword ptr [rsp + 0x4c], eax
0x16e24:	mov	rax, qword ptr [rsp + 8]
0x16e29:	mov	r13, qword ptr [rax]
0x16e2c:	mov	rdi, qword ptr [r13 + 0x70]
0x16e30:	test	rdi, rdi
0x16e33:	je	0x16e48


0x179a0:	mov	dword ptr [rsp + 0x4c], 0
0x179a8:	jmp	0x16f58


0x16def:	movsxd	rax, dword ptr [rbx + 0xb4]
0x16df6:	mov	rsi, qword ptr [rsp + 0xc0]
0x16dfe:	add	rax, qword ptr [rsp + 0xb0]
0x16e06:	cmp	rsi, rax
0x16e09:	jg	0x179a0


0x16e0f:	add	rsi, rsi
0x16e12:	mov	rdi, rbp
0x16e15:	call	0xa900


0x179c5:	mov	dword ptr [rsp + 0x4c], 0
0x179cd:	jmp	0x16f58


0x17882:	mov	dword ptr [rsp + 0x4c], 0
0x1788a:	jmp	0x16f58


0x16e1a:	test	eax, eax
0x16e1c:	je	0x16dd1


0x171e2:	test	eax, eax
0x171e4:	jne	0x16e20


0x171ea:	movzx	esi, byte ptr [rsp + 0x10b]
0x171f2:	mov	ecx, dword ptr [rbx + 0xb4]
0x171f8:	test	sil, sil
0x171fb:	je	0x16daf


0x17201:	jmp	0x16da2


0x17222:	test	rax, rax
0x17225:	mov	qword ptr [rbx + 0x78], rax
0x17229:	je	0x17206


0x1722b:	xor	r12d, r12d
0x1722e:	xor	ebp, ebp
0x17230:	mov	r13d, 1
0x17236:	xor	r15d, r15d
0x17239:	nop	dword ptr [rax]
0x17240:	lea	r14d, [rbp + r15]
0x17245:	mov	edi, r14d
0x17248:	call	0x1fe0


0x1fe0:	jmp	qword ptr [rip + 0x21ef42]




0x8ca7:	cmp	rax, 1
0x8cab:	jbe	0x8fb0


0x8fb0:	test	r12d, r12d
0x8fb3:	je	0x9006


0x8cb1:	test	r12d, r12d
0x8cb4:	jne	0x8e08


0x9006:	mov	rdx, rbx
0x9009:	mov	ecx, dword ptr [rdx]
0x900b:	add	rdx, 4
0x900f:	lea	eax, [rcx - 0x1010101]
0x9015:	not	ecx
0x9017:	and	eax, ecx
0x9019:	and	eax, 0x80808080
0x901e:	je	0x9009


0x8fb5:	movzx	ebp, byte ptr [rbx]
0x8fb8:	test	bpl, bpl
0x8fbb:	je	0x924a


0x8cba:	mov	qword ptr [rsp + 0x38], rbx
0x8cbf:	mov	rdx, rbx
0x8cc2:	mov	ecx, dword ptr [rdx]
0x8cc4:	add	rdx, 4
0x8cc8:	lea	eax, [rcx - 0x1010101]
0x8cce:	not	ecx
0x8cd0:	and	eax, ecx
0x8cd2:	and	eax, 0x80808080
0x8cd7:	je	0x8cc2


0x8e08:	mov	qword ptr [rsp + 0x38], rbx
0x8e0d:	mov	rdx, rbx
0x8e10:	mov	ecx, dword ptr [rdx]
0x8e12:	add	rdx, 4
0x8e16:	lea	eax, [rcx - 0x1010101]
0x8e1c:	not	ecx
0x8e1e:	and	eax, ecx
0x8e20:	and	eax, 0x80808080
0x8e25:	je	0x8e10


0x9009:	mov	ecx, dword ptr [rdx]
0x900b:	add	rdx, 4
0x900f:	lea	eax, [rcx - 0x1010101]
0x9015:	not	ecx
0x9017:	and	eax, ecx
0x9019:	and	eax, 0x80808080
0x901e:	je	0x9009


0x9020:	mov	ecx, eax
0x9022:	shr	ecx, 0x10
0x9025:	test	eax, 0x8080
0x902a:	cmove	eax, ecx
0x902d:	lea	rcx, [rdx + 2]
0x9031:	mov	esi, eax
0x9033:	cmove	rdx, rcx
0x9037:	add	sil, al
0x903a:	sbb	rdx, 3
0x903e:	lea	rbp, [rdx - 1]
0x9042:	cmp	rbx, rbp
0x9045:	ja	0x8f80


0x924a:	mov	r13, rbx
0x924d:	jmp	0x8fe5


0x8fc1:	call	0x20e0


0x8cc2:	mov	ecx, dword ptr [rdx]
0x8cc4:	add	rdx, 4
0x8cc8:	lea	eax, [rcx - 0x1010101]
0x8cce:	not	ecx
0x8cd0:	and	eax, ecx
0x8cd2:	and	eax, 0x80808080
0x8cd7:	je	0x8cc2


0x8cd9:	mov	ecx, eax
0x8cdb:	mov	byte ptr [rsp + 0x28], 0
0x8ce0:	mov	qword ptr [rsp + 0x2c], 0
0x8ce9:	shr	ecx, 0x10
0x8cec:	test	eax, 0x8080
0x8cf1:	mov	byte ptr [rsp + 0x34], 0
0x8cf6:	cmove	eax, ecx
0x8cf9:	lea	rcx, [rdx + 2]
0x8cfd:	mov	esi, eax
0x8cff:	cmove	rdx, rcx
0x8d03:	add	sil, al
0x8d06:	mov	rsi, rbx
0x8d09:	sbb	rdx, 3
0x8d0d:	xor	r15d, r15d
0x8d10:	cmp	rdx, rbx
0x8d13:	mov	r14, rdx
0x8d16:	mov	qword ptr [rsp + 0x20], rdx
0x8d1b:	jbe	0x8f80


0x8e10:	mov	ecx, dword ptr [rdx]
0x8e12:	add	rdx, 4
0x8e16:	lea	eax, [rcx - 0x1010101]
0x8e1c:	not	ecx
0x8e1e:	and	eax, ecx
0x8e20:	and	eax, 0x80808080
0x8e25:	je	0x8e10


0x8e27:	mov	ecx, eax
0x8e29:	mov	byte ptr [rsp + 0x28], 0
0x8e2e:	mov	qword ptr [rsp + 0x2c], 0
0x8e37:	shr	ecx, 0x10
0x8e3a:	test	eax, 0x8080
0x8e3f:	mov	byte ptr [rsp + 0x34], 0
0x8e44:	cmove	eax, ecx
0x8e47:	lea	rcx, [rdx + 2]
0x8e4b:	mov	r15, rbx
0x8e4e:	mov	esi, eax
0x8e50:	cmove	rdx, rcx
0x8e54:	add	sil, al
0x8e57:	sbb	rdx, 3
0x8e5b:	cmp	rdx, rbx
0x8e5e:	mov	qword ptr [rsp + 0x20], rdx
0x8e63:	jbe	0x91c0


0x904b:	call	0x20e0


0x8f80:	mov	rax, rbx
0x8f83:	mov	rbx, qword ptr [rsp + 0x68]
0x8f88:	xor	rbx, qword ptr fs:[0x28]
0x8f91:	jne	0x9252


0x8fe5:	mov	rdi, r13
0x8fe8:	call	0x1da0


0x8d21:	lea	rbp, [rsp + 0x20]
0x8d26:	lea	rax, [rbp + 0xc]
0x8d2a:	mov	qword ptr [rsp + 0x18], rax
0x8d2f:	jmp	0x8d6e


0x91c0:	mov	rdi, r15
0x91c3:	call	0x1da0


0x8e69:	lea	rbp, [rsp + 0x20]
0x8e6e:	lea	r14, [rip + 0x140eb]
0x8e75:	lea	r13, [rbp + 0xc]
0x8e79:	jmp	0x8ee7


0x8f97:	add	rsp, 0x78
0x8f9b:	pop	rbx
0x8f9c:	pop	rbp
0x8f9d:	pop	r12
0x8f9f:	pop	r13
0x8fa1:	pop	r14
0x8fa3:	pop	r15
0x8fa5:	ret	


0x9252:	call	0x1db0


0x8d6e:	cmp	byte ptr [rsp + 0x28], 0
0x8d73:	jne	0x90a1


0x8ee7:	cmp	byte ptr [rsp + 0x28], 0
0x8eec:	je	0x8e80


0x8d79:	movzx	ecx, byte ptr [rsi]
0x8d7c:	lea	rdi, [rip + 0x141dd]
0x8d83:	mov	eax, ecx
0x8d85:	shr	al, 5
0x8d88:	and	eax, 7
0x8d8b:	mov	eax, dword ptr [rdi + rax*4]
0x8d8e:	bt	eax, ecx
0x8d91:	jae	0x9080


0x90a1:	lea	rcx, [rbp + 0xc]
0x90a5:	mov	rdx, r14
0x90a8:	lea	rdi, [rbp + 0x2c]
0x90ac:	sub	rdx, rsi
0x90af:	call	0xa3b0


0x8e80:	movzx	ecx, byte ptr [r15]
0x8e84:	mov	eax, ecx
0x8e86:	shr	al, 5
0x8e89:	and	eax, 7
0x8e8c:	mov	eax, dword ptr [r14 + rax*4]
0x8e90:	bt	eax, ecx
0x8e93:	jae	0x9158


0x8eee:	lea	rcx, [rbp + 0xc]
0x8ef2:	lea	rdi, [rbp + 0x2c]
0x8ef6:	sub	rdx, r15
0x8ef9:	mov	rsi, r15
0x8efc:	call	0xa3b0


0x8d97:	mov	qword ptr [rsp + 0x40], 1
0x8da0:	movsx	eax, byte ptr [rsi]
0x8da3:	mov	r13d, 1
0x8da9:	mov	r12, qword ptr [rsp + 0x38]
0x8dae:	mov	r14, qword ptr [rsp + 0x20]
0x8db3:	mov	byte ptr [rsp + 0x48], 1
0x8db8:	mov	dword ptr [rsp + 0x4c], eax
0x8dbc:	test	r15d, r15d
0x8dbf:	mov	byte ptr [rsp + 0x34], 1
0x8dc4:	je	0x8d38


0x9080:	mov	rdi, qword ptr [rsp + 0x18]
0x9085:	mov	qword ptr [rsp + 0x10], rsi
0x908a:	call	0x20b0


0x8e99:	mov	qword ptr [rsp + 0x40], 1
0x8ea2:	movsx	eax, byte ptr [r15]
0x8ea6:	mov	r15, qword ptr [rsp + 0x38]
0x8eab:	mov	byte ptr [rsp + 0x48], 1
0x8eb0:	mov	byte ptr [rsp + 0x34], 1
0x8eb5:	mov	dword ptr [rsp + 0x4c], eax
0x8eb9:	mov	edi, dword ptr [rsp + 0x4c]
0x8ebd:	call	0x1fd0


0x9158:	mov	rdi, r13
0x915b:	mov	qword ptr [rsp + 0x10], rdx
0x9160:	call	0x20b0


0x8d38:	cmp	byte ptr [rsp + 0x48], 0
0x8d3d:	mov	r15d, 1
0x8d43:	je	0x8d57


0x8dca:	cmp	r15d, 1
0x8dce:	je	0x9120


0x1fd0:	jmp	qword ptr [rip + 0x21ef4a]


0x8d57:	lea	rsi, [r12 + r13]
0x8d5b:	mov	byte ptr [rsp + 0x34], 0
0x8d60:	cmp	rsi, r14
0x8d63:	mov	qword ptr [rsp + 0x38], rsi
0x8d68:	jae	0x8f70


0x8d45:	mov	edi, dword ptr [rsp + 0x4c]
0x8d49:	xor	r15d, r15d
0x8d4c:	call	0x1fd0


0x9120:	cmp	byte ptr [rsp + 0x48], 0
0x9125:	je	0x8d57


0x8dd4:	cmp	r15d, 2
0x8dd8:	jne	0x91f0




0x8f70:	cmp	r15d, 2
0x8f74:	jne	0x8f80


0x912b:	mov	edi, dword ptr [rsp + 0x4c]
0x912f:	call	0x1fd0


0x8dde:	cmp	byte ptr [rsp + 0x48], 0
0x8de3:	je	0x91f0


0x91f0:	mov	r15d, 1
0x91f6:	jmp	0x8d57


0x8f76:	mov	rax, qword ptr [rsp + 8]
0x8f7b:	mov	byte ptr [rax], 0
0x8f7e:	nop	
0x8f80:	mov	rax, rbx
0x8f83:	mov	rbx, qword ptr [rsp + 0x68]
0x8f88:	xor	rbx, qword ptr fs:[0x28]
0x8f91:	jne	0x9252


0x8de9:	mov	edi, dword ptr [rsp + 0x4c]
0x8ded:	call	0x1fd0


0x9165:	test	eax, eax
0x9167:	mov	rdx, qword ptr [rsp + 0x10]
0x916c:	je	0x925c


0x925c:	lea	rcx, [rip + 0x12fad]
0x9263:	lea	rsi, [rip + 0x12f86]
0x926a:	lea	rdi, [rip + 0x12a59]
0x9271:	mov	edx, 0x8e
0x9276:	call	0x1e30


0x9172:	mov	byte ptr [rsp + 0x28], 1
0x9177:	jmp	0x8eee


0x908f:	test	eax, eax
0x9091:	je	0x925c


0x9097:	mov	rsi, qword ptr [rsp + 0x10]
0x909c:	mov	byte ptr [rsp + 0x28], 1
0x90a1:	lea	rcx, [rbp + 0xc]
0x90a5:	mov	rdx, r14
0x90a8:	lea	rdi, [rbp + 0x2c]
0x90ac:	sub	rdx, rsi
0x90af:	call	0xa3b0


0x90b4:	cmp	rax, -1
0x90b8:	mov	qword ptr [rsp + 0x40], rax
0x90bd:	je	0x9180


0x9180:	mov	qword ptr [rsp + 0x40], 1
0x9189:	mov	byte ptr [rsp + 0x48], 0
0x918e:	mov	r13d, 1
0x9194:	mov	r12, qword ptr [rsp + 0x38]
0x9199:	mov	r14, qword ptr [rsp + 0x20]
0x919e:	jmp	0x8dbc


0x90c3:	cmp	rax, -2
0x90c7:	mov	r12, qword ptr [rsp + 0x38]
0x90cc:	je	0x9200


0x8dbc:	test	r15d, r15d
0x8dbf:	mov	byte ptr [rsp + 0x34], 1
0x8dc4:	je	0x8d38


0x9200:	mov	r14, qword ptr [rsp + 0x20]
0x9205:	mov	byte ptr [rsp + 0x48], 0
0x920a:	mov	r13, r14
0x920d:	sub	r13, r12
0x9210:	mov	qword ptr [rsp + 0x40], r13
0x9215:	jmp	0x8dbc


0x90d2:	test	rax, rax
0x90d5:	jne	0x90f7


0x90d7:	mov	qword ptr [rsp + 0x40], 1
0x90e0:	cmp	byte ptr [r12], 0
0x90e5:	jne	0x9280


0x90f7:	lea	rdi, [rbp + 0xc]
0x90fb:	mov	byte ptr [rsp + 0x48], 1
0x9100:	call	0x20b0


0x90eb:	mov	eax, dword ptr [rsp + 0x4c]
0x90ef:	test	eax, eax
0x90f1:	jne	0x927b


0x9280:	lea	rcx, [rip + 0x12f89]
0x9287:	lea	rsi, [rip + 0x12f62]
0x928e:	lea	rdi, [rip + 0x12a4c]
0x9295:	mov	edx, 0xa9
0x929a:	call	0x1e30


0x927b:	call	0x2143


0x9105:	test	eax, eax
0x9107:	mov	r14, qword ptr [rsp + 0x20]
0x910c:	je	0x9113


0x9113:	mov	r13, qword ptr [rsp + 0x40]
0x9118:	jmp	0x8dbc


0x910e:	mov	byte ptr [rsp + 0x28], 0
0x9113:	mov	r13, qword ptr [rsp + 0x40]
0x9118:	jmp	0x8dbc


0x8f01:	cmp	rax, -1
0x8f05:	mov	qword ptr [rsp + 0x40], rax
0x8f0a:	je	0x91a8


0x91a8:	mov	r15, qword ptr [rsp + 0x38]
0x91ad:	mov	qword ptr [rsp + 0x40], 1
0x91b6:	mov	byte ptr [rsp + 0x48], 0
0x91bb:	mov	byte ptr [rsp + 0x34], 1
0x91c0:	mov	rdi, r15
0x91c3:	call	0x1da0


0x8f10:	cmp	rax, -2
0x8f14:	mov	r15, qword ptr [rsp + 0x38]
0x8f19:	je	0x9220


0x9220:	mov	rax, qword ptr [rsp + 0x20]
0x9225:	mov	byte ptr [rsp + 0x48], 0
0x922a:	mov	byte ptr [rsp + 0x34], 1
0x922f:	sub	rax, r15
0x9232:	mov	qword ptr [rsp + 0x40], rax
0x9237:	jmp	0x91c0


0x8f1f:	test	rax, rax
0x8f22:	jne	0x8f43


0x8f24:	mov	qword ptr [rsp + 0x40], 1
0x8f2d:	cmp	byte ptr [r15], 0
0x8f31:	jne	0x9280


0x8f43:	lea	rdi, [rbp + 0xc]
0x8f47:	mov	byte ptr [rsp + 0x48], 1
0x8f4c:	call	0x20b0


0x8f37:	mov	edx, dword ptr [rsp + 0x4c]
0x8f3b:	test	edx, edx
0x8f3d:	jne	0x927b


0x8f51:	test	eax, eax
0x8f53:	je	0x9240


0x9240:	mov	byte ptr [rsp + 0x34], 1
0x9245:	jmp	0x8eb9


0x8f59:	mov	byte ptr [rsp + 0x28], 0
0x8f5e:	mov	byte ptr [rsp + 0x34], 1
0x8f63:	jmp	0x8eb9


0x8eb9:	mov	edi, dword ptr [rsp + 0x4c]
0x8ebd:	call	0x1fd0


0x91c8:	lea	rdx, [rax + 1]
0x91cc:	mov	rsi, r15
0x91cf:	mov	rdi, rbx
0x91d2:	call	0x1ff0


0x91d7:	cmp	r12d, 1
0x91db:	je	0x8f80


0x91e1:	jmp	0x8cba


0x8fed:	lea	rdx, [rax + 1]
0x8ff1:	mov	rsi, r13
0x8ff4:	mov	rdi, rbx
0x8ff7:	call	0x1ff0


0x8ffc:	cmp	r12d, 1
0x9000:	je	0x8f80


0x9050:	mov	rdx, qword ptr [rax]
0x9053:	jmp	0x9069


0x9069:	movzx	eax, byte ptr [rbp]
0x906d:	test	byte ptr [rdx + rax*2 + 1], 0x20
0x9072:	jne	0x9058


0x9074:	jmp	0x8f80


0x9058:	mov	byte ptr [rbp], 0
0x905c:	sub	rbp, 1
0x9060:	cmp	rbx, rbp
0x9063:	ja	0x8f80


0x8fc6:	mov	r13, rbx
0x8fc9:	mov	rax, qword ptr [rax]
0x8fcc:	jmp	0x8fde


0x8fde:	test	byte ptr [rax + rbp*2 + 1], 0x20
0x8fe3:	jne	0x8fd0


0x8fd0:	add	r13, 1
0x8fd4:	movzx	ebp, byte ptr [r13]
0x8fd9:	test	bpl, bpl
0x8fdc:	je	0x8fe5


0x6079:	mov	qword ptr [rsp + 8], rax
0x607e:	nop	
0x6080:	cmp	byte ptr [r15], 0
0x6084:	je	0x6105


0x6105:	mov	byte ptr [rsp + 0x10], 0
0x610a:	mov	rdi, qword ptr [rsp + 8]
0x610f:	call	0x1c60


0x6086:	mov	rsi, qword ptr [rsp + 8]
0x608b:	mov	rdi, r15
0x608e:	call	0x194a0


0x6114:	mov	rbx, qword ptr [rsp + 0xa8]
0x611c:	xor	rbx, qword ptr fs:[0x28]
0x6125:	movzx	eax, byte ptr [rsp + 0x10]
0x612a:	jne	0x6976


0x6130:	add	rsp, 0xb8
0x6137:	pop	rbx
0x6138:	pop	rbp
0x6139:	pop	r12
0x613b:	pop	r13
0x613d:	pop	r14
0x613f:	pop	r15
0x6141:	ret	


0x6976:	call	0x1db0


0x69c9:	test	al, al
0x69cb:	je	0x69d8


0x69d8:	mov	rdi, rbx
0x69db:	call	0x1da0


0x69e0:	mov	rdi, rbp
0x69e3:	mov	r12, rax
0x69e6:	call	0x1da0


0x69eb:	lea	rdi, [r12 + rax + 4]
0x69f0:	call	0x98c0


0x69f5:	lea	rcx, [rip + 0x152fc]
0x69fc:	mov	r12, rax
0x69ff:	mov	r9, rbp
0x6a02:	mov	r8, rbx
0x6a05:	mov	rdi, rax
0x6a08:	mov	rbx, r12
0x6a0b:	mov	rdx, -1
0x6a12:	mov	esi, 1
0x6a17:	xor	eax, eax
0x6a19:	call	0x2100


0x2100:	jmp	qword ptr [rip + 0x21eeb2]




0x6e81:	cmp	r15d, 0xa
0x6e85:	mov	qword ptr [rsp + 0x58], rax
0x6e8a:	ja	0x803f


0x6e90:	lea	rcx, [rip + 0x14ee9]
0x6e97:	mov	edx, r15d
0x6e9a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x6e9e:	add	rax, rcx
0x6ea1:	jmp	rax


0x803f:	call	0x1c70


0x194d4:	cmp	rax, 1
0x194d8:	ja	0x195c0


0x194de:	mov	rax, qword ptr [rsp + 8]
0x194e3:	movzx	r15d, byte ptr [rax]
0x194e7:	mov	rax, r12
0x194ea:	test	r15b, r15b
0x194ed:	je	0x19626


0x195c0:	mov	rax, rbx
0x195c3:	lea	r13, [rip + 0x3996]
0x195ca:	mov	qword ptr [rsp + 0x50], rbx
0x195cf:	movsx	edx, byte ptr [rax]
0x195d2:	lea	rbx, [rsp + 0x40]
0x195d7:	mov	byte ptr [rsp + 0x40], 0
0x195dc:	mov	qword ptr [rsp + 0x44], 0
0x195e5:	mov	byte ptr [rsp + 0x4c], 0
0x195ea:	lea	rbp, [rbx + 4]
0x195ee:	mov	eax, edx
0x195f0:	shr	al, 5
0x195f3:	and	eax, 7
0x195f6:	mov	eax, dword ptr [r13 + rax*4]
0x195fb:	bt	eax, edx
0x195fe:	jae	0x1a2a0


0x19626:	mov	rbx, qword ptr [rsp + 0x188]
0x1962e:	xor	rbx, qword ptr fs:[0x28]
0x19637:	jne	0x1a580


0x194f3:	movzx	esi, byte ptr [r12]
0x194f8:	test	sil, sil
0x194fb:	je	0x19ca0


0x19604:	mov	qword ptr [rsp + 0x58], 1
0x1960d:	mov	dword ptr [rsp + 0x64], edx
0x19611:	mov	byte ptr [rsp + 0x60], 1
0x19616:	mov	byte ptr [rsp + 0x4c], 1
0x1961b:	mov	eax, dword ptr [rsp + 0x64]
0x1961f:	test	eax, eax
0x19621:	jne	0x1967b


0x1a2a0:	mov	rdi, rbp
0x1a2a3:	call	0x20b0


0x1963d:	add	rsp, 0x198
0x19644:	pop	rbx
0x19645:	pop	rbp
0x19646:	pop	r12
0x19648:	pop	r13
0x1964a:	pop	r14
0x1964c:	pop	r15
0x1964e:	ret	


0x1a580:	call	0x1db0


0x19ca0:	xor	eax, eax
0x19ca2:	jmp	0x19626


0x19501:	lea	rbx, [rsp + 0x38]
0x19506:	mov	rbp, qword ptr [rsp + 8]
0x1950b:	xor	r13d, r13d
0x1950e:	xor	edx, edx
0x19510:	xor	r8d, r8d
0x19513:	mov	eax, 1
0x19518:	mov	qword ptr [rsp + 0x10], rbx
0x1951d:	nop	dword ptr [rax]
0x19520:	add	r13, 1
0x19524:	cmp	sil, r15b
0x19527:	lea	rbx, [rdx + 1]
0x1952b:	lea	r14, [r12 + 1]
0x19530:	je	0x19e10


0x19623:	mov	rax, r12
0x19626:	mov	rbx, qword ptr [rsp + 0x188]
0x1962e:	xor	rbx, qword ptr fs:[0x28]
0x19637:	jne	0x1a580


0x1967b:	mov	rax, qword ptr [rsp + 8]
0x19680:	mov	byte ptr [rsp + 0xc0], 0
0x19688:	xor	r14d, r14d
0x1968b:	xor	ebx, ebx
0x1968d:	cmp	byte ptr [rsp + 0xc0], 0
0x19695:	mov	byte ptr [rsp + 0x80], 0
0x1969d:	mov	qword ptr [rsp + 0x84], 0
0x196a9:	mov	byte ptr [rsp + 0x8c], 0
0x196b1:	lea	rbp, [rsp + 0x140]
0x196b9:	mov	qword ptr [rsp + 0x90], rax
0x196c1:	lea	rax, [rsp + 0x38]
0x196c6:	mov	qword ptr [rsp + 0xd0], r12
0x196ce:	mov	qword ptr [rsp + 0xc4], 0
0x196da:	mov	byte ptr [rsp + 0xcc], 0
0x196e2:	lea	r15, [rsp + 0x100]
0x196ea:	mov	qword ptr [rsp + 0x20], 0
0x196f3:	mov	byte ptr [rsp + 0x10], 1
0x196f8:	mov	qword ptr [rsp + 0x28], rax
0x196fd:	jne	0x19a13


0x19e10:	mov	rcx, qword ptr [rsp + 8]
0x19e15:	movzx	esi, byte ptr [rcx + 1]
0x19e19:	test	sil, sil
0x19e1c:	je	0x19623


0x19536:	cmp	byte ptr [r12 + 1], 0
0x1953c:	je	0x19ca0


0x19a13:	lea	rax, [rsp + 0xc0]
0x19a1b:	mov	qword ptr [rsp], rax
0x19a1f:	call	0x1d90


0x19e22:	movzx	edi, byte ptr [r14]
0x19e26:	test	dil, dil
0x19e29:	je	0x19ca0


0x19542:	cmp	r13, 9
0x19546:	seta	dl
0x19549:	and	dl, al
0x1954b:	je	0x19652


0x19729:	mov	qword ptr [rsp + 0xd8], 1
0x19735:	movsx	eax, byte ptr [rcx]
0x19738:	mov	byte ptr [rsp + 0xe0], 1
0x19740:	mov	byte ptr [rsp + 0xcc], 1
0x19748:	mov	dword ptr [rsp + 0xe4], eax
0x1974f:	mov	eax, dword ptr [rsp + 0xe4]
0x19756:	test	eax, eax
0x19758:	je	0x19ca0


0x19e80:	lea	rax, [rsp + 0xc0]
0x19e88:	lea	rdi, [rsp + 0xc4]
0x19e90:	mov	qword ptr [rsp], rax
0x19e94:	call	0x20b0


0x19e2f:	cmp	sil, dil
0x19e32:	lea	rbx, [rdx + 2]
0x19e36:	jne	0x19542


0x19652:	movzx	esi, byte ptr [r14]
0x19656:	mov	r12, r14
0x19659:	mov	rdx, rbx
0x1965c:	jmp	0x19520


0x19551:	lea	rax, [r13 + r13*4]
0x19556:	cmp	rax, rbx
0x19559:	ja	0x19650


0x1975e:	cmp	r14, 9
0x19762:	seta	al
0x19765:	and	al, byte ptr [rsp + 0x10]
0x19769:	je	0x1a577


0x19e3c:	neg	rdx
0x19e3f:	lea	r9, [rcx + rdx]
0x19e43:	add	rdx, r12
0x19e46:	jmp	0x19e6a


0x19520:	add	r13, 1
0x19524:	cmp	sil, r15b
0x19527:	lea	rbx, [rdx + 1]
0x1952b:	lea	r14, [r12 + 1]
0x19530:	je	0x19e10


0x1955f:	test	rbp, rbp
0x19562:	mov	byte ptr [rsp], dl
0x19565:	je	0x19589


0x19650:	mov	eax, edx
0x19652:	movzx	esi, byte ptr [r14]
0x19656:	mov	r12, r14
0x19659:	mov	rdx, rbx
0x1965c:	jmp	0x19520


0x1a577:	add	rbx, 1
0x1a57b:	jmp	0x19784


0x1976f:	lea	rdx, [r14 + r14*4]
0x19773:	cmp	rbx, rdx
0x19776:	jae	0x19eb0


0x19e6a:	movzx	esi, byte ptr [r9 + rbx]
0x19e6f:	test	sil, sil
0x19e72:	jne	0x19e50


0x19589:	mov	rbp, qword ptr [rsp + 8]
0x1958e:	mov	qword ptr [rsp], r8
0x19592:	mov	rdi, rbp
0x19595:	call	0x1da0


0x19567:	mov	rsi, rbx
0x1956a:	mov	rdi, rbp
0x1956d:	sub	rsi, r8
0x19570:	call	0x1e60


0x19784:	cmp	byte ptr [rsp + 0x60], 0
0x19789:	je	0x19d01


0x1977c:	add	rbx, 1
0x19780:	mov	byte ptr [rsp + 0x10], al
0x19784:	cmp	byte ptr [rsp + 0x60], 0
0x19789:	je	0x19d01


0x19eb0:	mov	rsi, rbx
0x19eb3:	sub	rsi, qword ptr [rsp + 0x20]
0x19eb8:	movzx	eax, byte ptr [rsp + 0x8c]
0x19ec0:	mov	qword ptr [rsp], rsi
0x19ec4:	je	0x1a517


0x19e74:	jmp	0x19623


0x19e50:	movzx	edi, byte ptr [rdx + rbx]
0x19e54:	test	dil, dil
0x19e57:	je	0x19ca0


0x1e60:	jmp	qword ptr [rip + 0x21f002]


0x19d01:	mov	rcx, qword ptr [rsp + 0xd8]
0x19d09:	cmp	rcx, qword ptr [rsp + 0x58]
0x19d0e:	jne	0x199f1


0x1978f:	mov	eax, dword ptr [rsp + 0x64]
0x19793:	cmp	dword ptr [rsp + 0xe4], eax
0x1979a:	jne	0x199e9


0x1a517:	test	al, al
0x1a519:	je	0x1a108


0x19eca:	test	al, al
0x19ecc:	je	0x19efb


0x19e5d:	add	rbx, 1
0x19e61:	cmp	sil, dil
0x19e64:	jne	0x19542




0x19d14:	mov	rsi, qword ptr [rsp + 0x50]
0x19d19:	mov	rdi, qword ptr [rsp + 0xd0]
0x19d21:	mov	rdx, rcx
0x19d24:	mov	qword ptr [rsp], rcx
0x19d28:	call	0x1e90


0x199f1:	add	qword ptr [rsp + 0xd0], rcx
0x199f9:	add	r14, 1
0x199fd:	cmp	byte ptr [rsp + 0xc0], 0
0x19a05:	mov	byte ptr [rsp + 0xcc], 0
0x19a0d:	je	0x19708


0x197a0:	movdqa	xmm0, xmmword ptr [rsp + 0xc0]
0x197a9:	lea	rcx, [rbp + 4]
0x197ad:	mov	byte ptr [rsp + 0x140], 0
0x197b5:	mov	qword ptr [rbp + 4], 0
0x197bd:	movaps	xmmword ptr [rsp + 0x100], xmm0
0x197c5:	mov	byte ptr [rsp + 0x14c], 0
0x197cd:	mov	byte ptr [rsp + 0x10c], 0
0x197d5:	movdqa	xmm0, xmmword ptr [rsp + 0xd0]
0x197de:	movaps	xmmword ptr [rsp + 0x110], xmm0
0x197e6:	mov	rax, qword ptr [rsp + 0x118]
0x197ee:	add	qword ptr [rsp + 0x110], rax
0x197f6:	mov	rax, qword ptr [rsp + 8]
0x197fb:	movdqa	xmm0, xmmword ptr [rsp + 0xe0]
0x19804:	movsx	edx, byte ptr [rax]
0x19807:	mov	qword ptr [rsp + 0x150], rax
0x1980f:	movaps	xmmword ptr [rsp + 0x120], xmm0
0x19817:	mov	eax, edx
0x19819:	shr	al, 5
0x1981c:	movdqa	xmm0, xmmword ptr [rsp + 0xf0]
0x19825:	and	eax, 7
0x19828:	mov	eax, dword ptr [r13 + rax*4]
0x1982d:	movaps	xmmword ptr [rsp + 0x130], xmm0
0x19835:	bt	eax, edx
0x19838:	jae	0x1a1c8


0x199e9:	mov	rcx, qword ptr [rsp + 0xd8]
0x199f1:	add	qword ptr [rsp + 0xd0], rcx
0x199f9:	add	r14, 1
0x199fd:	cmp	byte ptr [rsp + 0xc0], 0
0x19a05:	mov	byte ptr [rsp + 0xcc], 0
0x19a0d:	je	0x19708


0x1a108:	cmp	byte ptr [rsp + 0x80], 0
0x1a110:	jne	0x1a368


0x1a51f:	cmp	byte ptr [rsp + 0xa0], 0
0x1a527:	je	0x1a16e


0x19efb:	cmp	byte ptr [rsp + 0x80], 0
0x19f03:	jne	0x1a088


0x19ece:	cmp	byte ptr [rsp + 0xa0], 0
0x19ed6:	jne	0x19f4c


0x19708:	mov	rcx, qword ptr [rsp + 0xd0]
0x19710:	movzx	edx, byte ptr [rcx]
0x19713:	mov	eax, edx
0x19715:	shr	al, 5
0x19718:	and	eax, 7
0x1971b:	mov	eax, dword ptr [r13 + rax*4]
0x19720:	bt	eax, edx
0x19723:	jae	0x19e80


0x1983e:	mov	qword ptr [rsp + 0x158], 1
0x1984a:	mov	dword ptr [rsp + 0x164], edx
0x19851:	mov	byte ptr [rsp + 0x160], 1
0x19859:	mov	byte ptr [rsp + 0x14c], 1
0x19861:	mov	esi, dword ptr [rsp + 0x164]
0x19868:	test	esi, esi
0x1986a:	je	0x1a5a4


0x1a1c8:	mov	rdi, rcx
0x1a1cb:	mov	qword ptr [rsp + 0x18], rcx
0x1a1d0:	call	0x20b0


0x1a116:	mov	rcx, qword ptr [rsp + 0x90]
0x1a11e:	movzx	edx, byte ptr [rcx]
0x1a121:	mov	eax, edx
0x1a123:	shr	al, 5
0x1a126:	and	eax, 7
0x1a129:	mov	eax, dword ptr [r13 + rax*4]
0x1a12e:	bt	eax, edx
0x1a131:	jae	0x1a42f


0x1a368:	lea	rax, [rsp + 0x80]
0x1a370:	mov	qword ptr [rsp + 0x10], rax
0x1a375:	call	0x1d90


0x1a16e:	movzx	edx, byte ptr [rsp + 0xe0]
0x1a176:	mov	byte ptr [rsp + 0x10], 1
0x1a17b:	lea	rax, [rbx + 1]
0x1a17f:	test	dl, dl
0x1a181:	mov	qword ptr [rsp + 0x20], rbx
0x1a186:	mov	rbx, rax
0x1a189:	jne	0x19784


0x1a52d:	jmp	0x1a15d


0x19f09:	mov	rcx, qword ptr [rsp + 0x90]
0x19f11:	movzx	edx, byte ptr [rcx]
0x19f14:	mov	eax, edx
0x19f16:	shr	al, 5
0x19f19:	and	eax, 7
0x19f1c:	mov	eax, dword ptr [r13 + rax*4]
0x19f21:	bt	eax, edx
0x19f24:	jae	0x19fa0


0x1a088:	lea	rax, [rsp + 0x80]
0x1a090:	mov	qword ptr [rsp + 0x10], rax
0x1a095:	jmp	0x19fca


0x19ed8:	mov	rax, qword ptr [rsp + 0x98]
0x19ee0:	add	qword ptr [rsp + 0x90], rax
0x19ee8:	sub	qword ptr [rsp], 1
0x19eed:	mov	byte ptr [rsp + 0x8c], 0
0x19ef5:	je	0x1a108


0x19f4c:	mov	r10d, dword ptr [rsp + 0xa4]
0x19f54:	test	r10d, r10d
0x19f57:	jne	0x19ed8


0x1a5a4:	call	0x1c70


0x19870:	mov	rax, qword ptr [rsp + 0x158]
0x19878:	mov	byte ptr [rsp + 0x14c], 0
0x19880:	add	rbx, 1
0x19884:	add	qword ptr [rsp + 0x150], rax
0x1988c:	jmp	0x19953


0x1a137:	mov	qword ptr [rsp + 0x98], 1
0x1a143:	movsx	eax, byte ptr [rcx]
0x1a146:	mov	byte ptr [rsp + 0xa0], 1
0x1a14e:	mov	byte ptr [rsp + 0x8c], 1
0x1a156:	mov	dword ptr [rsp + 0xa4], eax
0x1a15d:	mov	r8d, dword ptr [rsp + 0xa4]
0x1a165:	test	r8d, r8d
0x1a168:	je	0x19f6b


0x1a42f:	lea	rax, [rsp + 0x80]
0x1a437:	lea	rdi, [rsp + 0x84]
0x1a43f:	mov	qword ptr [rsp + 0x10], rax
0x1a444:	call	0x20b0


0x1a18f:	jmp	0x19d01


0x1a15d:	mov	r8d, dword ptr [rsp + 0xa4]
0x1a165:	test	r8d, r8d
0x1a168:	je	0x19f6b


0x19f26:	mov	qword ptr [rsp + 0x98], 1
0x19f32:	movsx	eax, byte ptr [rcx]
0x19f35:	mov	byte ptr [rsp + 0xa0], 1
0x19f3d:	mov	byte ptr [rsp + 0x8c], 1
0x19f45:	mov	dword ptr [rsp + 0xa4], eax
0x19f4c:	mov	r10d, dword ptr [rsp + 0xa4]
0x19f54:	test	r10d, r10d
0x19f57:	jne	0x19ed8


0x19fa0:	lea	rax, [rsp + 0x80]
0x19fa8:	lea	rdi, [rsp + 0x84]
0x19fb0:	mov	qword ptr [rsp + 0x10], rax
0x19fb5:	call	0x20b0


0x19fca:	call	0x1d90


0x19f5d:	cmp	byte ptr [rsp + 0x8c], 0
0x19f65:	je	0x1a108


0x19953:	cmp	byte ptr [rsp + 0x140], 0
0x1995b:	jne	0x19af9


0x19f6b:	mov	rdx, qword ptr [rsp + 0x28]
0x19f70:	mov	rsi, qword ptr [rsp + 8]
0x19f75:	mov	rdi, r12
0x19f78:	call	0x18a20


0x19961:	mov	rcx, qword ptr [rsp + 0x150]
0x19969:	movzx	edx, byte ptr [rcx]
0x1996c:	mov	eax, edx
0x1996e:	shr	al, 5
0x19971:	and	eax, 7
0x19974:	mov	eax, dword ptr [r13 + rax*4]
0x19979:	bt	eax, edx
0x1997c:	jae	0x19ae0


0x19af9:	call	0x1d90


0x19982:	mov	qword ptr [rsp + 0x158], 1
0x1998e:	movsx	eax, byte ptr [rcx]
0x19991:	mov	byte ptr [rsp + 0x160], 1
0x19999:	mov	byte ptr [rsp + 0x14c], 1
0x199a1:	mov	dword ptr [rsp + 0x164], eax
0x199a8:	mov	edx, dword ptr [rsp + 0x164]
0x199af:	test	edx, edx
0x199b1:	je	0x19bb8


0x19ae0:	lea	rdi, [rbp + 4]
0x19ae4:	call	0x20b0


0x19bb8:	mov	rax, qword ptr [rsp + 0xd0]
0x19bc0:	jmp	0x19626


0x199b7:	cmp	byte ptr [rsp + 0x10c], 0
0x199bf:	je	0x19898


0x19898:	cmp	byte ptr [rsp + 0x100], 0
0x198a0:	jne	0x19be1


0x199c5:	cmp	byte ptr [rsp + 0x120], 0
0x199cd:	jne	0x198ed


0x198a6:	mov	rcx, qword ptr [rsp + 0x110]
0x198ae:	movzx	edx, byte ptr [rcx]
0x198b1:	mov	eax, edx
0x198b3:	shr	al, 5
0x198b6:	and	eax, 7
0x198b9:	mov	eax, dword ptr [r13 + rax*4]
0x198be:	bt	eax, edx
0x198c1:	jae	0x19bc8


0x19be1:	call	0x1d90


0x199d3:	mov	rdx, qword ptr [rsp + 0x118]
0x199db:	cmp	rdx, qword ptr [rsp + 0x158]
0x199e3:	je	0x19cb0


0x198ed:	mov	eax, dword ptr [rsp + 0x124]
0x198f4:	test	eax, eax
0x198f6:	je	0x19ca0


0x198c7:	mov	qword ptr [rsp + 0x118], 1
0x198d3:	movsx	eax, byte ptr [rcx]
0x198d6:	mov	byte ptr [rsp + 0x120], 1
0x198de:	mov	byte ptr [rsp + 0x10c], 1
0x198e6:	mov	dword ptr [rsp + 0x124], eax
0x198ed:	mov	eax, dword ptr [rsp + 0x124]
0x198f4:	test	eax, eax
0x198f6:	je	0x19ca0


0x19bc8:	lea	rdi, [r15 + 4]
0x19bcc:	call	0x20b0


0x19cb0:	mov	rsi, qword ptr [rsp + 0x150]
0x19cb8:	mov	rdi, qword ptr [rsp + 0x110]
0x19cc0:	call	0x1e90


0x198fc:	cmp	byte ptr [rsp + 0x160], 0
0x19904:	je	0x199d3


0x1990a:	cmp	dword ptr [rsp + 0x164], eax
0x19911:	setne	al
0x19914:	test	al, al
0x19916:	lea	rdx, [rbx + 1]
0x1991a:	jne	0x199e9


0x19920:	mov	rax, qword ptr [rsp + 0x118]
0x19928:	add	qword ptr [rsp + 0x110], rax
0x19930:	mov	rbx, rdx
0x19933:	mov	rax, qword ptr [rsp + 0x158]
0x1993b:	add	qword ptr [rsp + 0x150], rax
0x19943:	mov	byte ptr [rsp + 0x10c], 0
0x1994b:	mov	byte ptr [rsp + 0x14c], 0
0x19953:	cmp	byte ptr [rsp + 0x140], 0
0x1995b:	jne	0x19af9


0x19cc5:	test	eax, eax
0x19cc7:	setne	al
0x19cca:	jmp	0x19914


0x19914:	test	al, al
0x19916:	lea	rdx, [rbx + 1]
0x1991a:	jne	0x199e9


0x19d2d:	test	eax, eax
0x19d2f:	mov	rcx, qword ptr [rsp]
0x19d33:	jne	0x199f1


0x19d39:	jmp	0x197a0


0x1959a:	mov	rcx, qword ptr [rsp + 0x10]
0x1959f:	mov	rdx, rax
0x195a2:	mov	rsi, rbp
0x195a5:	mov	rdi, r14
0x195a8:	call	0x18870


0x195ad:	test	al, al
0x195af:	mov	r8, qword ptr [rsp]
0x195b3:	jne	0x1a49f


0x195b9:	xor	ebp, ebp
0x195bb:	jmp	0x19652


0x1a49f:	mov	rax, qword ptr [rsp + 0x38]
0x1a4a4:	jmp	0x19626


0x19bd1:	test	eax, eax
0x19bd3:	je	0x1a558


0x1a558:	lea	rcx, [rip + 0x2a21]
0x1a55f:	lea	rsi, [rip + 0x1732]
0x1a566:	lea	rdi, [rip + 0x175d]
0x1a56d:	mov	edx, 0x96
0x1a572:	call	0x1e30


0x19bd9:	mov	byte ptr [rsp + 0x100], 1
0x19be1:	call	0x1d90


0x19ae9:	test	eax, eax
0x19aeb:	je	0x1a558


0x19af1:	mov	byte ptr [rsp + 0x140], 1
0x19af9:	call	0x1d90


0x19fba:	test	eax, eax
0x19fbc:	je	0x1a558


0x19fc2:	mov	byte ptr [rsp + 0x80], 1
0x19fca:	call	0x1d90


0x1a449:	test	eax, eax
0x1a44b:	je	0x1a558


0x1a451:	mov	byte ptr [rsp + 0x80], 1
0x1a459:	jmp	0x1a375


0x1a375:	call	0x1d90


0x1a1d5:	test	eax, eax
0x1a1d7:	je	0x1a558


0x1a1dd:	mov	byte ptr [rsp + 0x140], 1
0x1a1e5:	call	0x1d90


0x19e99:	test	eax, eax
0x19e9b:	je	0x1a558


0x19ea1:	mov	byte ptr [rsp + 0xc0], 1
0x19ea9:	jmp	0x19a1f


0x19a1f:	call	0x1d90


0x1a2a8:	test	eax, eax
0x1a2aa:	je	0x1a558


0x1a2b0:	mov	byte ptr [rsp + 0x40], 1
0x1a2b5:	call	0x1d90


0x6093:	test	rax, rax
0x6096:	mov	rbp, rax
0x6099:	je	0x6105


0x609b:	call	0x1d90


0x60a0:	cmp	rax, 1
0x60a4:	ja	0x6148


0x60aa:	cmp	r15, rbp
0x60ad:	jae	0x6718


0x6148:	cmp	r15, rbp
0x614b:	mov	qword ptr [rsp + 0x30], r15
0x6150:	mov	byte ptr [rsp + 0x20], 0
0x6155:	mov	qword ptr [rbx + 4], 0
0x615d:	mov	byte ptr [rsp + 0x2c], 0
0x6162:	jb	0x61d7


0x60b3:	call	0x20e0


0x6718:	mov	rdi, qword ptr [rsp + 8]
0x671d:	call	0x1da0


0x61d7:	cmp	byte ptr [rsp + 0x20], 0
0x61dc:	je	0x6170


0x6164:	jmp	0x6708


0x6170:	mov	r15, qword ptr [rsp + 0x30]
0x6175:	movzx	edx, byte ptr [r15]
0x6179:	mov	eax, edx
0x617b:	shr	al, 5
0x617e:	and	eax, 7
0x6181:	mov	eax, dword ptr [r13 + rax*4]
0x6186:	bt	eax, edx
0x6189:	jae	0x6278


0x61de:	call	0x1d90


0x6708:	mov	byte ptr [rsp + 0x10], 1
0x670d:	jmp	0x6316


0x618f:	mov	qword ptr [rsp + 0x38], 1
0x6198:	movsx	edx, byte ptr [r15]
0x619c:	mov	byte ptr [rsp + 0x40], 1
0x61a1:	mov	byte ptr [rsp + 0x2c], 1
0x61a6:	mov	dword ptr [rsp + 0x44], edx
0x61aa:	test	edx, edx
0x61ac:	je	0x6952


0x6278:	lea	rdi, [rbx + 4]
0x627c:	call	0x20b0


0x6316:	mov	rax, qword ptr [rsp + 8]
0x631b:	mov	qword ptr [rsp + 0x30], rbp
0x6320:	mov	byte ptr [rsp + 0x20], 0
0x6325:	mov	qword ptr [rbx + 4], 0
0x632d:	mov	byte ptr [rsp + 0x2c], 0
0x6332:	mov	byte ptr [rsp + 0x60], 0
0x6337:	mov	qword ptr [rsp + 0x70], rax
0x633c:	mov	qword ptr [r12 + 4], 0
0x6345:	mov	byte ptr [rsp + 0x6c], 0
0x634a:	jmp	0x63bd


0x6952:	call	0x1c70


0x61b2:	mov	r15, qword ptr [rsp + 0x30]
0x61b7:	mov	rax, qword ptr [rsp + 0x38]
0x61bc:	movzx	ecx, byte ptr [rsp + 0x40]
0x61c1:	mov	byte ptr [rsp + 0x2c], 0
0x61c6:	add	rax, r15
0x61c9:	cmp	rax, rbp
0x61cc:	mov	qword ptr [rsp + 0x30], rax
0x61d1:	jae	0x6300


0x63bd:	cmp	byte ptr [rsp + 0x60], 0
0x63c2:	jne	0x643f


0x6300:	test	cl, cl
0x6302:	je	0x6708


0x63c4:	mov	rcx, qword ptr [rsp + 0x70]
0x63c9:	movzx	edx, byte ptr [rcx]
0x63cc:	mov	eax, edx
0x63ce:	shr	al, 5
0x63d1:	and	eax, 7
0x63d4:	mov	eax, dword ptr [r13 + rax*4]
0x63d9:	bt	eax, edx
0x63dc:	jae	0x6428


0x643f:	call	0x1d90


0x6308:	mov	edi, edx
0x630a:	call	0x1f10


0x63de:	mov	qword ptr [rsp + 0x78], 1
0x63e7:	movsx	eax, byte ptr [rcx]
0x63ea:	mov	byte ptr [rsp + 0x80], 1
0x63f2:	mov	byte ptr [rsp + 0x6c], 1
0x63f7:	mov	dword ptr [rsp + 0x84], eax
0x63fe:	mov	ecx, dword ptr [rsp + 0x84]
0x6405:	test	ecx, ecx
0x6407:	je	0x64e0


0x6428:	lea	rdi, [r12 + 4]
0x642d:	call	0x20b0


0x64e0:	cmp	byte ptr [rsp + 0x2c], 0
0x64e5:	jne	0x6758


0x640d:	cmp	byte ptr [rsp + 0x2c], 0
0x6412:	je	0x6350


0x64eb:	cmp	byte ptr [rsp + 0x20], 0
0x64f0:	jne	0x6782


0x6758:	cmp	byte ptr [rsp + 0x40], 0
0x675d:	mov	edx, dword ptr [rsp + 0x44]
0x6761:	je	0x6532


0x6350:	cmp	byte ptr [rsp + 0x20], 0
0x6355:	jne	0x65d6


0x6418:	cmp	byte ptr [rsp + 0x40], 0
0x641d:	je	0x639f


0x64f6:	mov	rcx, qword ptr [rsp + 0x30]
0x64fb:	movzx	edx, byte ptr [rcx]
0x64fe:	mov	eax, edx
0x6500:	shr	al, 5
0x6503:	and	eax, 7
0x6506:	mov	eax, dword ptr [r13 + rax*4]
0x650b:	bt	eax, edx
0x650e:	jae	0x676c


0x6782:	call	0x1d90


0x6532:	cmp	byte ptr [rsp + 0x40], 0
0x6537:	je	0x6544


0x6767:	jmp	0x652e


0x635b:	mov	rcx, qword ptr [rsp + 0x30]
0x6360:	movzx	edx, byte ptr [rcx]
0x6363:	mov	eax, edx
0x6365:	shr	al, 5
0x6368:	and	eax, 7
0x636b:	mov	eax, dword ptr [r13 + rax*4]
0x6370:	bt	eax, edx
0x6373:	jae	0x65c0


0x65d6:	call	0x1d90


0x639f:	mov	rax, qword ptr [rsp + 0x38]
0x63a4:	add	qword ptr [rsp + 0x30], rax
0x63a9:	mov	rax, qword ptr [rsp + 0x78]
0x63ae:	add	qword ptr [rsp + 0x70], rax
0x63b3:	mov	byte ptr [rsp + 0x2c], 0
0x63b8:	mov	byte ptr [rsp + 0x6c], 0
0x63bd:	cmp	byte ptr [rsp + 0x60], 0
0x63c2:	jne	0x643f


0x641f:	jmp	0x6393


0x6514:	mov	qword ptr [rsp + 0x38], 1
0x651d:	movsx	edx, byte ptr [rcx]
0x6520:	mov	byte ptr [rsp + 0x40], 1
0x6525:	mov	byte ptr [rsp + 0x2c], 1
0x652a:	mov	dword ptr [rsp + 0x44], edx
0x652e:	test	edx, edx
0x6530:	je	0x6544


0x676c:	lea	rdi, [rbx + 4]
0x6770:	call	0x20b0


0x6544:	cmp	byte ptr [rsp + 0x10], 0
0x6549:	jne	0x610a


0x6539:	mov	edi, edx
0x653b:	call	0x1f10


0x652e:	test	edx, edx
0x6530:	je	0x6544


0x6379:	mov	qword ptr [rsp + 0x38], 1
0x6382:	movsx	eax, byte ptr [rcx]
0x6385:	mov	byte ptr [rsp + 0x40], 1
0x638a:	mov	byte ptr [rsp + 0x2c], 1
0x638f:	mov	dword ptr [rsp + 0x44], eax
0x6393:	mov	edi, dword ptr [rsp + 0x44]
0x6397:	test	edi, edi
0x6399:	je	0x6952


0x65c0:	lea	rdi, [rbx + 4]
0x65c4:	call	0x20b0


0x6393:	mov	edi, dword ptr [rsp + 0x44]
0x6397:	test	edi, edi
0x6399:	je	0x6952


0x654f:	mov	qword ptr [rsp + 0x30], rbp
0x6554:	mov	byte ptr [rsp + 0x20], 0
0x6559:	lea	r15, [rbx + 4]
0x655d:	mov	qword ptr [rbx + 4], 0
0x6565:	mov	byte ptr [rsp + 0x2c], 0
0x656a:	movzx	edx, byte ptr [rbp]
0x656e:	mov	eax, edx
0x6570:	shr	al, 5
0x6573:	and	eax, 7
0x6576:	mov	eax, dword ptr [r13 + rax*4]
0x657b:	bt	eax, edx
0x657e:	jae	0x6810


0x610a:	mov	rdi, qword ptr [rsp + 8]
0x610f:	call	0x1c60


0x6584:	mov	qword ptr [rsp + 0x38], 1
0x658d:	movsx	eax, byte ptr [rbp]
0x6591:	mov	byte ptr [rsp + 0x40], 1
0x6596:	mov	byte ptr [rsp + 0x2c], 1
0x659b:	mov	dword ptr [rsp + 0x44], eax
0x659f:	mov	eax, dword ptr [rsp + 0x44]
0x65a3:	test	eax, eax
0x65a5:	je	0x6105


0x6810:	mov	rdi, r15
0x6813:	call	0x20b0


0x65ab:	mov	r15, qword ptr [rsp + 0x38]
0x65b0:	add	r15, rbp
0x65b3:	jmp	0x6080


0x6080:	cmp	byte ptr [r15], 0
0x6084:	je	0x6105


0x6540:	test	eax, eax
0x6542:	jne	0x654f


0x630f:	test	eax, eax
0x6311:	sete	byte ptr [rsp + 0x10]
0x6316:	mov	rax, qword ptr [rsp + 8]
0x631b:	mov	qword ptr [rsp + 0x30], rbp
0x6320:	mov	byte ptr [rsp + 0x20], 0
0x6325:	mov	qword ptr [rbx + 4], 0
0x632d:	mov	byte ptr [rsp + 0x2c], 0
0x6332:	mov	byte ptr [rsp + 0x60], 0
0x6337:	mov	qword ptr [rsp + 0x70], rax
0x633c:	mov	qword ptr [r12 + 4], 0
0x6345:	mov	byte ptr [rsp + 0x6c], 0
0x634a:	jmp	0x63bd


0x6818:	test	eax, eax
0x681a:	je	0x6957


0x6957:	lea	rcx, [rip + 0x153b2]
0x695e:	lea	rsi, [rip + 0x15333]
0x6965:	lea	rdi, [rip + 0x1535e]
0x696c:	mov	edx, 0x96
0x6971:	call	0x1e30


0x6820:	mov	byte ptr [rsp + 0x20], 1
0x6825:	call	0x1d90


0x65c9:	test	eax, eax
0x65cb:	je	0x6957


0x65d1:	mov	byte ptr [rsp + 0x20], 1
0x65d6:	call	0x1d90


0x6775:	test	eax, eax
0x6777:	je	0x6957


0x677d:	mov	byte ptr [rsp + 0x20], 1
0x6782:	call	0x1d90


0x6432:	test	eax, eax
0x6434:	je	0x6957


0x643a:	mov	byte ptr [rsp + 0x60], 1
0x643f:	call	0x1d90


0x6281:	test	eax, eax
0x6283:	je	0x6957


0x6289:	mov	byte ptr [rsp + 0x20], 1
0x628e:	jmp	0x61de


0x6722:	movzx	edx, byte ptr [rbp + rax]
0x6727:	mov	byte ptr [rsp + 0x10], 1
0x672c:	test	dl, dl
0x672e:	je	0x610a


0x6734:	mov	byte ptr [rsp + 0x18], dl
0x6738:	call	0x20e0


0x673d:	movzx	edx, byte ptr [rsp + 0x18]
0x6742:	mov	rax, qword ptr [rax]
0x6745:	test	byte ptr [rax + rdx*2], 8
0x6749:	jne	0x60f5


0x674f:	jmp	0x60ee


0x60f5:	cmp	byte ptr [rbp], 0
0x60f9:	je	0x6105


0x60ee:	cmp	byte ptr [rsp + 0x10], 0
0x60f3:	jne	0x610a


0x60fb:	lea	r15, [rbp + 1]
0x60ff:	cmp	byte ptr [r15], 0
0x6103:	jne	0x6086


0x60b8:	movzx	edx, byte ptr [rbp - 1]
0x60bc:	mov	rax, qword ptr [rax]
0x60bf:	mov	rdi, qword ptr [rsp + 8]
0x60c4:	movzx	r15d, word ptr [rax + rdx*2]
0x60c9:	shr	r15w, 3
0x60ce:	xor	r15d, 1
0x60d2:	mov	eax, r15d
0x60d5:	and	eax, 1
0x60d8:	mov	byte ptr [rsp + 0x10], al
0x60dc:	call	0x1da0


0x60e1:	movzx	edx, byte ptr [rbp + rax]
0x60e6:	test	dl, dl
0x60e8:	jne	0x6734


0x6444:	mov	r15, qword ptr [rsp + 0x70]
0x6449:	mov	rsi, rax
0x644c:	mov	rdi, r15
0x644f:	call	0x8c30


0x6454:	lea	rcx, [r12 + 4]
0x6459:	lea	rdi, [r12 + 0x24]
0x645e:	mov	rdx, rax
0x6461:	mov	rsi, r15
0x6464:	call	0xa3b0


0x6469:	cmp	rax, -1
0x646d:	mov	qword ptr [rsp + 0x78], rax
0x6472:	je	0x6668


0x6668:	mov	qword ptr [rsp + 0x78], 1
0x6671:	mov	byte ptr [rsp + 0x80], 0
0x6679:	mov	byte ptr [rsp + 0x6c], 1
0x667e:	jmp	0x640d


0x6478:	cmp	rax, -2
0x647c:	je	0x66a0


0x66a0:	mov	rdi, qword ptr [rsp + 0x70]
0x66a5:	call	0x1da0


0x6482:	test	rax, rax
0x6485:	jne	0x64ad


0x6487:	mov	rax, qword ptr [rsp + 0x70]
0x648c:	mov	qword ptr [rsp + 0x78], 1
0x6495:	cmp	byte ptr [rax], 0
0x6498:	jne	0x697b


0x64ad:	lea	rdi, [r12 + 4]
0x64b2:	mov	byte ptr [rsp + 0x80], 1
0x64ba:	call	0x20b0


0x649e:	mov	esi, dword ptr [rsp + 0x84]
0x64a5:	test	esi, esi
0x64a7:	jne	0x68fc


0x697b:	lea	rcx, [rip + 0x1538e]
0x6982:	lea	rsi, [rip + 0x1530f]
0x6989:	lea	rdi, [rip + 0x15351]
0x6990:	mov	edx, 0xb2
0x6995:	call	0x1e30


0x68fc:	call	0x2120


0x64bf:	test	eax, eax
0x64c1:	je	0x66c8


0x66c8:	mov	byte ptr [rsp + 0x6c], 1
0x66cd:	jmp	0x63fe


0x64c7:	mov	ecx, dword ptr [rsp + 0x84]
0x64ce:	mov	byte ptr [rsp + 0x60], 0
0x64d3:	mov	byte ptr [rsp + 0x6c], 1
0x64d8:	test	ecx, ecx
0x64da:	jne	0x640d


0x63fe:	mov	ecx, dword ptr [rsp + 0x84]
0x6405:	test	ecx, ecx
0x6407:	je	0x64e0


0x66aa:	mov	byte ptr [rsp + 0x80], 0
0x66b2:	mov	qword ptr [rsp + 0x78], rax
0x66b7:	mov	byte ptr [rsp + 0x6c], 1
0x66bc:	jmp	0x640d


0x6787:	mov	r8, qword ptr [rsp + 0x30]
0x678c:	mov	rsi, rax
0x678f:	mov	rdi, r8
0x6792:	mov	qword ptr [rsp + 0x18], r8
0x6797:	call	0x8c30


0x679c:	mov	r8, qword ptr [rsp + 0x18]
0x67a1:	lea	rcx, [rbx + 4]
0x67a5:	mov	rdx, rax
0x67a8:	mov	rdi, r14
0x67ab:	mov	rsi, r8
0x67ae:	call	0xa3b0


0x67b3:	cmp	rax, -1
0x67b7:	mov	qword ptr [rsp + 0x38], rax
0x67bc:	je	0x68af


0x68af:	mov	qword ptr [rsp + 0x38], 1
0x68b8:	mov	byte ptr [rsp + 0x40], 0
0x68bd:	mov	edx, dword ptr [rsp + 0x44]
0x68c1:	mov	byte ptr [rsp + 0x2c], 1
0x68c6:	jmp	0x6532


0x67c2:	cmp	rax, -2
0x67c6:	je	0x6930


0x6930:	mov	rdi, qword ptr [rsp + 0x30]
0x6935:	call	0x1da0


0x67cc:	test	rax, rax
0x67cf:	je	0x68d9


0x68d9:	mov	rax, qword ptr [rsp + 0x30]
0x68de:	mov	qword ptr [rsp + 0x38], 1
0x68e7:	cmp	byte ptr [rax], 0
0x68ea:	jne	0x697b


0x67d5:	mov	edx, dword ptr [rsp + 0x44]
0x67d9:	lea	rdi, [rbx + 4]
0x67dd:	mov	dword ptr [rsp + 0x18], edx
0x67e1:	mov	byte ptr [rsp + 0x40], 1
0x67e6:	call	0x20b0


0x68f0:	mov	edx, dword ptr [rsp + 0x44]
0x68f4:	test	edx, edx
0x68f6:	je	0x67d9


0x67d9:	lea	rdi, [rbx + 4]
0x67dd:	mov	dword ptr [rsp + 0x18], edx
0x67e1:	mov	byte ptr [rsp + 0x40], 1
0x67e6:	call	0x20b0


0x67eb:	test	eax, eax
0x67ed:	mov	edx, dword ptr [rsp + 0x18]
0x67f1:	je	0x6912


0x6912:	mov	byte ptr [rsp + 0x2c], 1
0x6917:	jmp	0x652e


0x67f7:	mov	byte ptr [rsp + 0x20], 0
0x67fc:	mov	byte ptr [rsp + 0x2c], 1
0x6801:	jmp	0x652e


0x693a:	mov	byte ptr [rsp + 0x40], 0
0x693f:	mov	qword ptr [rsp + 0x38], rax
0x6944:	mov	edx, dword ptr [rsp + 0x44]
0x6948:	mov	byte ptr [rsp + 0x2c], 1
0x694d:	jmp	0x6532


0x65db:	mov	r15, qword ptr [rsp + 0x30]
0x65e0:	mov	rsi, rax
0x65e3:	mov	rdi, r15
0x65e6:	call	0x8c30


0x65eb:	lea	rcx, [rbx + 4]
0x65ef:	mov	rdx, rax
0x65f2:	mov	rsi, r15
0x65f5:	mov	rdi, r14
0x65f8:	call	0xa3b0


0x65fd:	cmp	rax, -1
0x6601:	mov	qword ptr [rsp + 0x38], rax
0x6606:	je	0x6688


0x6688:	mov	qword ptr [rsp + 0x38], 1
0x6691:	mov	byte ptr [rsp + 0x40], 0
0x6696:	jmp	0x639f


0x660c:	cmp	rax, -2
0x6610:	je	0x66d8


0x66d8:	mov	rdi, qword ptr [rsp + 0x30]
0x66dd:	call	0x1da0


0x6616:	test	rax, rax
0x6619:	jne	0x6640


0x661b:	mov	rax, qword ptr [rsp + 0x30]
0x6620:	mov	qword ptr [rsp + 0x38], 1
0x6629:	cmp	byte ptr [rax], 0
0x662c:	jne	0x697b


0x6640:	lea	rdi, [rbx + 4]
0x6644:	mov	byte ptr [rsp + 0x40], 1
0x6649:	call	0x20b0


0x6632:	mov	r8d, dword ptr [rsp + 0x44]
0x6637:	test	r8d, r8d
0x663a:	jne	0x68fc


0x664e:	test	eax, eax
0x6650:	je	0x66f8


0x66f8:	mov	byte ptr [rsp + 0x2c], 1
0x66fd:	jmp	0x6393


0x6656:	mov	byte ptr [rsp + 0x20], 0
0x665b:	mov	byte ptr [rsp + 0x2c], 1
0x6660:	jmp	0x6393


0x66e2:	mov	byte ptr [rsp + 0x40], 0
0x66e7:	mov	qword ptr [rsp + 0x38], rax
0x66ec:	jmp	0x639f


0x682a:	mov	r8, qword ptr [rsp + 0x30]
0x682f:	mov	rsi, rax
0x6832:	mov	rdi, r8
0x6835:	mov	qword ptr [rsp + 0x10], r8
0x683a:	call	0x8c30


0x683f:	mov	r8, qword ptr [rsp + 0x10]
0x6844:	mov	rcx, r15
0x6847:	mov	rdx, rax
0x684a:	mov	rdi, r14
0x684d:	mov	rsi, r8
0x6850:	call	0xa3b0


0x6855:	cmp	rax, -1
0x6859:	mov	qword ptr [rsp + 0x38], rax
0x685e:	je	0x68cb


0x68cb:	mov	qword ptr [rsp + 0x38], 1
0x68d4:	jmp	0x65ab


0x6860:	cmp	rax, -2
0x6864:	je	0x691c


0x691c:	mov	rdi, qword ptr [rsp + 0x30]
0x6921:	call	0x1da0


0x686a:	test	rax, rax
0x686d:	jne	0x688e


0x686f:	mov	rax, qword ptr [rsp + 0x30]
0x6874:	mov	qword ptr [rsp + 0x38], 1
0x687d:	cmp	byte ptr [rax], 0
0x6880:	jne	0x697b


0x688e:	lea	rdi, [rbx + 4]
0x6892:	mov	byte ptr [rsp + 0x40], 1
0x6897:	call	0x20b0


0x6886:	mov	edx, dword ptr [rsp + 0x44]
0x688a:	test	edx, edx
0x688c:	jne	0x68fc


0x689c:	test	eax, eax
0x689e:	je	0x6908


0x6908:	mov	byte ptr [rsp + 0x2c], 1
0x690d:	jmp	0x659f


0x68a0:	mov	byte ptr [rsp + 0x20], 0
0x68a5:	mov	byte ptr [rsp + 0x2c], 1
0x68aa:	jmp	0x659f


0x659f:	mov	eax, dword ptr [rsp + 0x44]
0x65a3:	test	eax, eax
0x65a5:	je	0x6105


0x6926:	mov	qword ptr [rsp + 0x38], rax
0x692b:	jmp	0x65ab


0x61e3:	mov	r15, qword ptr [rsp + 0x30]
0x61e8:	mov	rsi, rax
0x61eb:	mov	rdi, r15
0x61ee:	call	0x8c30


0x61f3:	lea	rcx, [rbx + 4]
0x61f7:	mov	rdx, rax
0x61fa:	mov	rsi, r15
0x61fd:	mov	rdi, r14
0x6200:	call	0xa3b0


0x6205:	cmp	rax, -1
0x6209:	mov	qword ptr [rsp + 0x38], rax
0x620e:	je	0x6298


0x6298:	mov	qword ptr [rsp + 0x38], 1
0x62a1:	mov	byte ptr [rsp + 0x40], 0
0x62a6:	mov	edx, dword ptr [rsp + 0x44]
0x62aa:	mov	r15, qword ptr [rsp + 0x30]
0x62af:	jmp	0x61b7


0x6214:	cmp	rax, -2
0x6218:	je	0x62b8


0x61b7:	mov	rax, qword ptr [rsp + 0x38]
0x61bc:	movzx	ecx, byte ptr [rsp + 0x40]
0x61c1:	mov	byte ptr [rsp + 0x2c], 0
0x61c6:	add	rax, r15
0x61c9:	cmp	rax, rbp
0x61cc:	mov	qword ptr [rsp + 0x30], rax
0x61d1:	jae	0x6300


0x62b8:	mov	r15, qword ptr [rsp + 0x30]
0x62bd:	mov	rdi, r15
0x62c0:	call	0x1da0


0x621e:	test	rax, rax
0x6221:	jne	0x62f0


0x6227:	mov	r15, qword ptr [rsp + 0x30]
0x622c:	mov	qword ptr [rsp + 0x38], 1
0x6235:	cmp	byte ptr [r15], 0
0x6239:	jne	0x697b


0x62f0:	mov	edx, dword ptr [rsp + 0x44]
0x62f4:	jmp	0x624b


0x623f:	mov	edx, dword ptr [rsp + 0x44]
0x6243:	test	edx, edx
0x6245:	jne	0x68fc


0x624b:	lea	rdi, [rbx + 4]
0x624f:	mov	dword ptr [rsp + 0x10], edx
0x6253:	mov	byte ptr [rsp + 0x40], 1
0x6258:	call	0x20b0


0x625d:	test	eax, eax
0x625f:	mov	edx, dword ptr [rsp + 0x10]
0x6263:	je	0x62e0


0x62e0:	mov	byte ptr [rsp + 0x2c], 1
0x62e5:	jmp	0x61aa


0x6265:	mov	byte ptr [rsp + 0x20], 0
0x626a:	mov	byte ptr [rsp + 0x2c], 1
0x626f:	jmp	0x61aa


0x61aa:	test	edx, edx
0x61ac:	je	0x6952


0x62c5:	mov	byte ptr [rsp + 0x40], 0
0x62ca:	mov	qword ptr [rsp + 0x38], rax
0x62cf:	mov	edx, dword ptr [rsp + 0x44]
0x62d3:	jmp	0x61b7


0x1a2ba:	mov	r14, qword ptr [rsp + 0x50]
0x1a2bf:	mov	rsi, rax
0x1a2c2:	mov	rdi, r14
0x1a2c5:	call	0x8c30


0x1a2ca:	lea	rdi, [rbx + 0x24]
0x1a2ce:	mov	rcx, rbp
0x1a2d1:	mov	rdx, rax
0x1a2d4:	mov	rsi, r14
0x1a2d7:	call	0xa3b0


0x1a2dc:	cmp	rax, -1
0x1a2e0:	mov	qword ptr [rsp + 0x58], rax
0x1a2e5:	je	0x19668


0x19668:	mov	qword ptr [rsp + 0x58], 1
0x19671:	mov	byte ptr [rsp + 0x60], 0
0x19676:	mov	byte ptr [rsp + 0x4c], 1
0x1967b:	mov	rax, qword ptr [rsp + 8]
0x19680:	mov	byte ptr [rsp + 0xc0], 0
0x19688:	xor	r14d, r14d
0x1968b:	xor	ebx, ebx
0x1968d:	cmp	byte ptr [rsp + 0xc0], 0
0x19695:	mov	byte ptr [rsp + 0x80], 0
0x1969d:	mov	qword ptr [rsp + 0x84], 0
0x196a9:	mov	byte ptr [rsp + 0x8c], 0
0x196b1:	lea	rbp, [rsp + 0x140]
0x196b9:	mov	qword ptr [rsp + 0x90], rax
0x196c1:	lea	rax, [rsp + 0x38]
0x196c6:	mov	qword ptr [rsp + 0xd0], r12
0x196ce:	mov	qword ptr [rsp + 0xc4], 0
0x196da:	mov	byte ptr [rsp + 0xcc], 0
0x196e2:	lea	r15, [rsp + 0x100]
0x196ea:	mov	qword ptr [rsp + 0x20], 0
0x196f3:	mov	byte ptr [rsp + 0x10], 1
0x196f8:	mov	qword ptr [rsp + 0x28], rax
0x196fd:	jne	0x19a13


0x1a2eb:	cmp	rax, -2
0x1a2ef:	je	0x1a4cb


0x1a4cb:	mov	rdi, qword ptr [rsp + 0x50]
0x1a4d0:	call	0x1da0


0x1a2f5:	test	rax, rax
0x1a2f8:	jne	0x1a31d


0x1a2fa:	mov	rax, qword ptr [rsp + 0x50]
0x1a2ff:	mov	qword ptr [rsp + 0x58], 1
0x1a308:	cmp	byte ptr [rax], 0
0x1a30b:	jne	0x1a585


0x1a31d:	lea	rdi, [rbx + 4]
0x1a321:	mov	byte ptr [rsp + 0x60], 1
0x1a326:	call	0x20b0


0x1a311:	mov	eax, dword ptr [rsp + 0x64]
0x1a315:	test	eax, eax
0x1a317:	jne	0x1a262


0x1a585:	lea	rcx, [rip + 0x29f4]
0x1a58c:	lea	rsi, [rip + 0x1705]
0x1a593:	lea	rdi, [rip + 0x1747]
0x1a59a:	mov	edx, 0xb2
0x1a59f:	call	0x1e30


0x1a262:	call	0x2166


0x1a32b:	test	eax, eax
0x1a32d:	je	0x1a46b


0x1a46b:	mov	byte ptr [rsp + 0x4c], 1
0x1a470:	jmp	0x1961b


0x1a333:	mov	byte ptr [rsp + 0x40], 0
0x1a338:	mov	byte ptr [rsp + 0x4c], 1
0x1a33d:	jmp	0x1961b


0x1961b:	mov	eax, dword ptr [rsp + 0x64]
0x1961f:	test	eax, eax
0x19621:	jne	0x1967b


0x1a4d5:	mov	byte ptr [rsp + 0x60], 0
0x1a4da:	mov	qword ptr [rsp + 0x58], rax
0x1a4df:	mov	byte ptr [rsp + 0x4c], 1
0x1a4e4:	jmp	0x1967b


0x19a24:	mov	r8, qword ptr [rsp + 0xd0]
0x19a2c:	mov	rsi, rax
0x19a2f:	mov	rdi, r8
0x19a32:	mov	qword ptr [rsp + 0x18], r8
0x19a37:	call	0x8c30


0x19a3c:	mov	rsi, qword ptr [rsp]
0x19a40:	mov	r8, qword ptr [rsp + 0x18]
0x19a45:	mov	rdx, rax
0x19a48:	lea	rcx, [rsi + 4]
0x19a4c:	lea	rdi, [rsi + 0x24]
0x19a50:	mov	rsi, r8
0x19a53:	call	0xa3b0


0x19a58:	cmp	rax, -1
0x19a5c:	mov	qword ptr [rsp + 0xd8], rax
0x19a64:	je	0x19cd0


0x19cd0:	mov	qword ptr [rsp + 0xd8], 1
0x19cdc:	mov	byte ptr [rsp + 0xe0], 0
0x19ce4:	mov	byte ptr [rsp + 0xcc], 1
0x19cec:	cmp	r14, 9
0x19cf0:	seta	al
0x19cf3:	and	al, byte ptr [rsp + 0x10]
0x19cf7:	jne	0x1a538


0x19a6a:	cmp	rax, -2
0x19a6e:	je	0x1a198


0x19cfd:	add	rbx, 1
0x19d01:	mov	rcx, qword ptr [rsp + 0xd8]
0x19d09:	cmp	rcx, qword ptr [rsp + 0x58]
0x19d0e:	jne	0x199f1


0x1a538:	lea	rdx, [r14 + r14*4]
0x1a53c:	cmp	rbx, rdx
0x1a53f:	jae	0x19eb0


0x1a198:	mov	rdi, qword ptr [rsp + 0xd0]
0x1a1a0:	call	0x1da0


0x19a74:	test	rax, rax
0x19a77:	jne	0x19aa5


0x1a545:	add	rbx, 1
0x1a549:	mov	byte ptr [rsp + 0x10], al
0x1a54d:	jmp	0x19d01


0x19a79:	mov	rax, qword ptr [rsp + 0xd0]
0x19a81:	mov	qword ptr [rsp + 0xd8], 1
0x19a8d:	cmp	byte ptr [rax], 0
0x19a90:	jne	0x1a585


0x19aa5:	mov	rdi, qword ptr [rsp]
0x19aa9:	mov	byte ptr [rsp + 0xe0], 1
0x19ab1:	add	rdi, 4
0x19ab5:	call	0x20b0


0x19a96:	mov	eax, dword ptr [rsp + 0xe4]
0x19a9d:	test	eax, eax
0x19a9f:	jne	0x1a262


0x19aba:	test	eax, eax
0x19abc:	je	0x1a0d0


0x1a0d0:	mov	byte ptr [rsp + 0xcc], 1
0x1a0d8:	jmp	0x1974f


0x19ac2:	mov	byte ptr [rsp + 0xc0], 0
0x19aca:	mov	byte ptr [rsp + 0xcc], 1
0x19ad2:	jmp	0x1974f


0x1974f:	mov	eax, dword ptr [rsp + 0xe4]
0x19756:	test	eax, eax
0x19758:	je	0x19ca0


0x1a1a5:	mov	byte ptr [rsp + 0xe0], 0
0x1a1ad:	mov	qword ptr [rsp + 0xd8], rax
0x1a1b5:	mov	byte ptr [rsp + 0xcc], 1
0x1a1bd:	jmp	0x19cec


0x19cec:	cmp	r14, 9
0x19cf0:	seta	al
0x19cf3:	and	al, byte ptr [rsp + 0x10]
0x19cf7:	jne	0x1a538


0x1a1ea:	mov	r8, qword ptr [rsp + 0x150]
0x1a1f2:	mov	rsi, rax
0x1a1f5:	mov	rdi, r8
0x1a1f8:	mov	qword ptr [rsp], r8
0x1a1fc:	call	0x8c30


0x1a201:	mov	r8, qword ptr [rsp]
0x1a205:	mov	rcx, qword ptr [rsp + 0x18]
0x1a20a:	lea	rdi, [rbp + 0x24]
0x1a20e:	mov	rdx, rax
0x1a211:	mov	rsi, r8
0x1a214:	call	0xa3b0


0x1a219:	cmp	rax, -1
0x1a21d:	mov	qword ptr [rsp + 0x158], rax
0x1a225:	je	0x1a348


0x1a348:	mov	qword ptr [rsp + 0x158], 1
0x1a354:	mov	byte ptr [rsp + 0x160], 0
0x1a35c:	jmp	0x19870


0x1a22b:	cmp	rax, -2
0x1a22f:	je	0x1a4a9


0x1a4a9:	mov	rdi, qword ptr [rsp + 0x150]
0x1a4b1:	call	0x1da0


0x1a235:	test	rax, rax
0x1a238:	jne	0x1a270


0x1a23a:	mov	rax, qword ptr [rsp + 0x150]
0x1a242:	mov	qword ptr [rsp + 0x158], 1
0x1a24e:	cmp	byte ptr [rax], 0
0x1a251:	jne	0x1a585


0x1a270:	lea	rdi, [rbp + 4]
0x1a274:	mov	byte ptr [rsp + 0x160], 1
0x1a27c:	call	0x20b0


0x1a257:	mov	edi, dword ptr [rsp + 0x164]
0x1a25e:	test	edi, edi
0x1a260:	je	0x1a270


0x1a281:	test	eax, eax
0x1a283:	je	0x1a45e


0x1a45e:	mov	byte ptr [rsp + 0x14c], 1
0x1a466:	jmp	0x19861


0x1a289:	mov	byte ptr [rsp + 0x140], 0
0x1a291:	mov	byte ptr [rsp + 0x14c], 1
0x1a299:	jmp	0x19861


0x19861:	mov	esi, dword ptr [rsp + 0x164]
0x19868:	test	esi, esi
0x1986a:	je	0x1a5a4


0x1a4b6:	mov	byte ptr [rsp + 0x160], 0
0x1a4be:	mov	qword ptr [rsp + 0x158], rax
0x1a4c6:	jmp	0x19870


0x1a37a:	mov	r8, qword ptr [rsp + 0x90]
0x1a382:	mov	rsi, rax
0x1a385:	mov	rdi, r8
0x1a388:	mov	qword ptr [rsp], r8
0x1a38c:	call	0x8c30


0x1a391:	mov	rsi, qword ptr [rsp + 0x10]
0x1a396:	mov	r8, qword ptr [rsp]
0x1a39a:	mov	rdx, rax
0x1a39d:	lea	rcx, [rsi + 4]
0x1a3a1:	lea	rdi, [rsi + 0x24]
0x1a3a5:	mov	rsi, r8
0x1a3a8:	call	0xa3b0


0x1a3ad:	cmp	rax, -1
0x1a3b1:	mov	qword ptr [rsp + 0x98], rax
0x1a3b9:	je	0x1a4e9


0x1a4e9:	mov	qword ptr [rsp + 0x98], 1
0x1a4f5:	mov	byte ptr [rsp + 0xa0], 0
0x1a4fd:	mov	byte ptr [rsp + 0x8c], 1
0x1a505:	jmp	0x1a16e


0x1a3bf:	cmp	rax, -2
0x1a3c3:	je	0x1a475


0x1a475:	mov	rdi, qword ptr [rsp + 0x90]
0x1a47d:	call	0x1da0


0x1a3c9:	test	rax, rax
0x1a3cc:	jne	0x1a3fc


0x1a3ce:	mov	rax, qword ptr [rsp + 0x90]
0x1a3d6:	mov	qword ptr [rsp + 0x98], 1
0x1a3e2:	cmp	byte ptr [rax], 0
0x1a3e5:	jne	0x1a585


0x1a3fc:	mov	rdi, qword ptr [rsp + 0x10]
0x1a401:	mov	byte ptr [rsp + 0xa0], 1
0x1a409:	add	rdi, 4
0x1a40d:	call	0x20b0


0x1a3eb:	mov	r9d, dword ptr [rsp + 0xa4]
0x1a3f3:	test	r9d, r9d
0x1a3f6:	jne	0x1a262


0x1a412:	test	eax, eax
0x1a414:	je	0x1a50a


0x1a50a:	mov	byte ptr [rsp + 0x8c], 1
0x1a512:	jmp	0x1a15d


0x1a41a:	mov	byte ptr [rsp + 0x80], 0
0x1a422:	mov	byte ptr [rsp + 0x8c], 1
0x1a42a:	jmp	0x1a15d


0x1a482:	mov	byte ptr [rsp + 0xa0], 0
0x1a48a:	mov	qword ptr [rsp + 0x98], rax
0x1a492:	mov	byte ptr [rsp + 0x8c], 1
0x1a49a:	jmp	0x1a16e


0x19fcf:	mov	r8, qword ptr [rsp + 0x90]
0x19fd7:	mov	rsi, rax
0x19fda:	mov	rdi, r8
0x19fdd:	mov	qword ptr [rsp + 0x18], r8
0x19fe2:	call	0x8c30


0x19fe7:	mov	rsi, qword ptr [rsp + 0x10]
0x19fec:	mov	r8, qword ptr [rsp + 0x18]
0x19ff1:	mov	rdx, rax
0x19ff4:	lea	rcx, [rsi + 4]
0x19ff8:	lea	rdi, [rsi + 0x24]
0x19ffc:	mov	rsi, r8
0x19fff:	call	0xa3b0


0x1a004:	cmp	rax, -1
0x1a008:	mov	qword ptr [rsp + 0x98], rax
0x1a010:	je	0x1a0a0


0x1a0a0:	mov	qword ptr [rsp + 0x98], 1
0x1a0ac:	mov	byte ptr [rsp + 0xa0], 0
0x1a0b4:	jmp	0x19ed8


0x1a016:	cmp	rax, -2
0x1a01a:	je	0x1a0e0


0x1a0e0:	mov	rdi, qword ptr [rsp + 0x90]
0x1a0e8:	call	0x1da0


0x1a020:	test	rax, rax
0x1a023:	jne	0x1a053


0x1a025:	mov	rax, qword ptr [rsp + 0x90]
0x1a02d:	mov	qword ptr [rsp + 0x98], 1
0x1a039:	cmp	byte ptr [rax], 0
0x1a03c:	jne	0x1a585


0x1a053:	mov	rdi, qword ptr [rsp + 0x10]
0x1a058:	mov	byte ptr [rsp + 0xa0], 1
0x1a060:	add	rdi, 4
0x1a064:	call	0x20b0


0x1a042:	mov	r11d, dword ptr [rsp + 0xa4]
0x1a04a:	test	r11d, r11d
0x1a04d:	jne	0x1a262


0x1a069:	test	eax, eax
0x1a06b:	je	0x1a0c0


0x1a0c0:	mov	byte ptr [rsp + 0x8c], 1
0x1a0c8:	jmp	0x19f4c


0x1a06d:	mov	byte ptr [rsp + 0x80], 0
0x1a075:	mov	byte ptr [rsp + 0x8c], 1
0x1a07d:	jmp	0x19f4c


0x1a0ed:	mov	byte ptr [rsp + 0xa0], 0
0x1a0f5:	mov	qword ptr [rsp + 0x98], rax
0x1a0fd:	jmp	0x19ed8


0x19afe:	mov	r8, qword ptr [rsp + 0x150]
0x19b06:	mov	rsi, rax
0x19b09:	mov	rdi, r8
0x19b0c:	mov	qword ptr [rsp], r8
0x19b10:	call	0x8c30


0x19b15:	mov	r8, qword ptr [rsp]
0x19b19:	lea	rcx, [rbp + 4]
0x19b1d:	lea	rdi, [rbp + 0x24]
0x19b21:	mov	rdx, rax
0x19b24:	mov	rsi, r8
0x19b27:	call	0xa3b0


0x19b2c:	cmp	rax, -1
0x19b30:	mov	qword ptr [rsp + 0x158], rax
0x19b38:	je	0x19d40


0x19d40:	mov	qword ptr [rsp + 0x158], 1
0x19d4c:	mov	byte ptr [rsp + 0x160], 0
0x19d54:	mov	byte ptr [rsp + 0x14c], 1
0x19d5c:	jmp	0x199b7


0x19b3e:	cmp	rax, -2
0x19b42:	je	0x19d90


0x19d90:	mov	rdi, qword ptr [rsp + 0x150]
0x19d98:	call	0x1da0


0x19b48:	test	rax, rax
0x19b4b:	jne	0x19b79


0x19b4d:	mov	rax, qword ptr [rsp + 0x150]
0x19b55:	mov	qword ptr [rsp + 0x158], 1
0x19b61:	cmp	byte ptr [rax], 0
0x19b64:	jne	0x1a585


0x19b79:	lea	rdi, [rbp + 4]
0x19b7d:	mov	byte ptr [rsp + 0x160], 1
0x19b85:	call	0x20b0


0x19b6a:	mov	ecx, dword ptr [rsp + 0x164]
0x19b71:	test	ecx, ecx
0x19b73:	jne	0x1a262


0x19b8a:	test	eax, eax
0x19b8c:	je	0x19dc0


0x19dc0:	mov	byte ptr [rsp + 0x14c], 1
0x19dc8:	jmp	0x199a8


0x19b92:	mov	edx, dword ptr [rsp + 0x164]
0x19b99:	mov	byte ptr [rsp + 0x140], 0
0x19ba1:	mov	byte ptr [rsp + 0x14c], 1
0x19ba9:	test	edx, edx
0x19bab:	jne	0x199b7


0x199a8:	mov	edx, dword ptr [rsp + 0x164]
0x199af:	test	edx, edx
0x199b1:	je	0x19bb8


0x19d9d:	mov	byte ptr [rsp + 0x160], 0
0x19da5:	mov	qword ptr [rsp + 0x158], rax
0x19dad:	mov	byte ptr [rsp + 0x14c], 1
0x19db5:	jmp	0x199b7


0x19be6:	mov	r8, qword ptr [rsp + 0x110]
0x19bee:	mov	rsi, rax
0x19bf1:	mov	rdi, r8
0x19bf4:	mov	qword ptr [rsp], r8
0x19bf8:	call	0x8c30


0x19bfd:	mov	r8, qword ptr [rsp]
0x19c01:	lea	rcx, [r15 + 4]
0x19c05:	lea	rdi, [r15 + 0x24]
0x19c09:	mov	rdx, rax
0x19c0c:	mov	rsi, r8
0x19c0f:	call	0xa3b0


0x19c14:	cmp	rax, -1
0x19c18:	mov	qword ptr [rsp + 0x118], rax
0x19c20:	je	0x19d68


0x19d68:	mov	qword ptr [rsp + 0x118], 1
0x19d74:	mov	byte ptr [rsp + 0x120], 0
0x19d7c:	mov	byte ptr [rsp + 0x10c], 1
0x19d84:	jmp	0x199d3


0x19c26:	cmp	rax, -2
0x19c2a:	je	0x19dd0


0x19dd0:	mov	rdi, qword ptr [rsp + 0x110]
0x19dd8:	call	0x1da0


0x19c30:	test	rax, rax
0x19c33:	jne	0x19c61


0x19c35:	mov	rax, qword ptr [rsp + 0x110]
0x19c3d:	mov	qword ptr [rsp + 0x118], 1
0x19c49:	cmp	byte ptr [rax], 0
0x19c4c:	jne	0x1a585


0x19c61:	lea	rdi, [r15 + 4]
0x19c65:	mov	byte ptr [rsp + 0x120], 1
0x19c6d:	call	0x20b0


0x19c52:	mov	eax, dword ptr [rsp + 0x124]
0x19c59:	test	eax, eax
0x19c5b:	jne	0x1a262


0x19c72:	test	eax, eax
0x19c74:	je	0x19e00


0x19e00:	mov	byte ptr [rsp + 0x10c], 1
0x19e08:	jmp	0x198ed


0x19c7a:	mov	eax, dword ptr [rsp + 0x124]
0x19c81:	mov	byte ptr [rsp + 0x100], 0
0x19c89:	mov	byte ptr [rsp + 0x10c], 1
0x19c91:	test	eax, eax
0x19c93:	jne	0x198fc


0x19ddd:	mov	byte ptr [rsp + 0x120], 0
0x19de5:	mov	qword ptr [rsp + 0x118], rax
0x19ded:	mov	byte ptr [rsp + 0x10c], 1
0x19df5:	jmp	0x199d3


0x1ac44:	cmp	rax, 1
0x1ac48:	ja	0x1ac80


0x1ac4a:	mov	rdi, rbx
0x1ac4d:	call	0x1da0


0x1ac80:	mov	rbp, rsp
0x1ac83:	mov	qword ptr [rsp + 0x10], rbx
0x1ac88:	mov	byte ptr [rsp], 0
0x1ac8c:	mov	qword ptr [rsp + 4], 0
0x1ac95:	mov	byte ptr [rsp + 0xc], 0
0x1ac9a:	xor	ebx, ebx
0x1ac9c:	lea	r12, [rip + 0x22bd]
0x1aca3:	lea	r13, [rbp + 4]
0x1aca7:	jmp	0x1ad06


0x1ad06:	cmp	byte ptr [rsp], 0
0x1ad0a:	je	0x1acb0


0x1acb0:	mov	rcx, qword ptr [rsp + 0x10]
0x1acb5:	movzx	edx, byte ptr [rcx]
0x1acb8:	mov	eax, edx
0x1acba:	shr	al, 5
0x1acbd:	and	eax, 7
0x1acc0:	mov	eax, dword ptr [r12 + rax*4]
0x1acc4:	bt	eax, edx
0x1acc7:	jae	0x1ad90


0x1ad0c:	call	0x1d90


0x1accd:	mov	qword ptr [rsp + 0x18], 1
0x1acd6:	movsx	eax, byte ptr [rcx]
0x1acd9:	mov	byte ptr [rsp + 0x20], 1
0x1acde:	mov	byte ptr [rsp + 0xc], 1
0x1ace3:	mov	dword ptr [rsp + 0x24], eax
0x1ace7:	mov	eax, dword ptr [rsp + 0x24]
0x1aceb:	test	eax, eax
0x1aced:	je	0x1ac55


0x1ad90:	mov	rdi, r13
0x1ad93:	call	0x20b0


0x1ac55:	mov	rsi, qword ptr [rsp + 0x48]
0x1ac5a:	xor	rsi, qword ptr fs:[0x28]
0x1ac63:	mov	rax, rbx
0x1ac66:	jne	0x1ae09


0x1acf3:	mov	rax, qword ptr [rsp + 0x18]
0x1acf8:	add	qword ptr [rsp + 0x10], rax
0x1acfd:	add	rbx, 1
0x1ad01:	mov	byte ptr [rsp + 0xc], 0
0x1ad06:	cmp	byte ptr [rsp], 0
0x1ad0a:	je	0x1acb0


0x1ac6c:	add	rsp, 0x50
0x1ac70:	pop	rbx
0x1ac71:	pop	rbp
0x1ac72:	pop	r12
0x1ac74:	pop	r13
0x1ac76:	pop	r14
0x1ac78:	ret	


0x1ae09:	call	0x1db0


0x1ad98:	test	eax, eax
0x1ad9a:	je	0x1adea


0x1adea:	lea	rcx, [rip + 0x21af]
0x1adf1:	lea	rsi, [rip + 0xea0]
0x1adf8:	lea	rdi, [rip + 0xecb]
0x1adff:	mov	edx, 0x96
0x1ae04:	call	0x1e30


0x1ad9c:	mov	byte ptr [rsp], 1
0x1ada0:	jmp	0x1ad0c


0x1ad11:	mov	r14, qword ptr [rsp + 0x10]
0x1ad16:	mov	rsi, rax
0x1ad19:	mov	rdi, r14
0x1ad1c:	call	0x8c30


0x1ad21:	lea	rcx, [rbp + 4]
0x1ad25:	lea	rdi, [rbp + 0x24]
0x1ad29:	mov	rdx, rax
0x1ad2c:	mov	rsi, r14
0x1ad2f:	call	0xa3b0


0x1ad34:	cmp	rax, -1
0x1ad38:	mov	qword ptr [rsp + 0x18], rax
0x1ad3d:	je	0x1ada8


0x1ada8:	mov	qword ptr [rsp + 0x18], 1
0x1adb1:	mov	byte ptr [rsp + 0x20], 0
0x1adb6:	jmp	0x1acf3


0x1ad3f:	cmp	rax, -2
0x1ad43:	je	0x1adc0


0x1adc0:	mov	rdi, qword ptr [rsp + 0x10]
0x1adc5:	call	0x1da0


0x1ad45:	test	rax, rax
0x1ad48:	jne	0x1ad6d


0x1ad4a:	mov	rax, qword ptr [rsp + 0x10]
0x1ad4f:	mov	qword ptr [rsp + 0x18], 1
0x1ad58:	cmp	byte ptr [rax], 0
0x1ad5b:	jne	0x1ae0e


0x1ad6d:	lea	rdi, [rbp + 4]
0x1ad71:	mov	byte ptr [rsp + 0x20], 1
0x1ad76:	call	0x20b0


0x1ad61:	mov	edx, dword ptr [rsp + 0x24]
0x1ad65:	test	edx, edx
0x1ad67:	jne	0x1ae2d


0x1ae0e:	lea	rcx, [rip + 0x218b]
0x1ae15:	lea	rsi, [rip + 0xe7c]
0x1ae1c:	lea	rdi, [rip + 0xebe]
0x1ae23:	mov	edx, 0xb2
0x1ae28:	call	0x1e30


0x1ae2d:	lea	rcx, [rip + 0x216c]
0x1ae34:	lea	rsi, [rip + 0xe5d]
0x1ae3b:	lea	rdi, [rip + 0xe76]
0x1ae42:	mov	edx, 0xb3
0x1ae47:	call	0x1e30


0x1ad7b:	test	eax, eax
0x1ad7d:	je	0x1ade0


0x1ade0:	mov	byte ptr [rsp + 0xc], 1
0x1ade5:	jmp	0x1ace7


0x1ad7f:	mov	byte ptr [rsp], 0
0x1ad83:	mov	byte ptr [rsp + 0xc], 1
0x1ad88:	jmp	0x1ace7


0x1ace7:	mov	eax, dword ptr [rsp + 0x24]
0x1aceb:	test	eax, eax
0x1aced:	je	0x1ac55


0x1adca:	mov	byte ptr [rsp + 0x20], 0
0x1adcf:	mov	qword ptr [rsp + 0x18], rax
0x1add4:	jmp	0x1acf3


0x1ac52:	mov	rbx, rax
0x1ac55:	mov	rsi, qword ptr [rsp + 0x48]
0x1ac5a:	xor	rsi, qword ptr fs:[0x28]
0x1ac63:	mov	rax, rbx
0x1ac66:	jne	0x1ae09


0x18a5c:	mov	edx, 0x38
0x18a61:	mov	rsi, rax
0x18a64:	mov	qword ptr [rbp - 0x108], rax
0x18a6b:	mov	rax, rdx
0x18a6e:	mul	rsi
0x18a71:	jo	0x19487


0x19487:	mov	ecx, 1
0x1948c:	jmp	0x18a79


0x18a77:	xor	ecx, ecx
0x18a79:	test	rax, rax
0x18a7c:	js	0x18ea0


0x18a79:	test	rax, rax
0x18a7c:	js	0x18ea0


0x18ea0:	xor	eax, eax
0x18ea2:	mov	rbx, qword ptr [rbp - 0x38]
0x18ea6:	xor	rbx, qword ptr fs:[0x28]
0x18eaf:	jne	0x1945e


0x18a82:	test	rcx, rcx
0x18a85:	jne	0x18ea0


0x18eb5:	lea	rsp, [rbp - 0x28]
0x18eb9:	pop	rbx
0x18eba:	pop	r12
0x18ebc:	pop	r13
0x18ebe:	pop	r14
0x18ec0:	pop	r15
0x18ec2:	pop	rbp
0x18ec3:	ret	


0x1945e:	call	0x1db0


0x18a8b:	mov	rax, qword ptr [rbp - 0x108]
0x18a92:	lea	rdi, [rax*8]
0x18a9a:	sub	rdi, rax
0x18a9d:	shl	rdi, 3
0x18aa1:	cmp	rdi, 0xfa0
0x18aa8:	ja	0x193e4


0x18aae:	add	rdi, 0x3d
0x18ab2:	and	rdi, 0xfffffffffffffff0
0x18ab6:	sub	rsp, rdi
0x18ab9:	lea	r12, [rsp + 0xf]
0x18abe:	and	r12, 0xfffffffffffffff0
0x18ac2:	add	r12, 0x1f
0x18ac6:	and	r12, 0xffffffffffffffe0
0x18aca:	test	r12, r12
0x18acd:	je	0x18ea0


0x193e4:	call	0x1abb0


0x18ad3:	mov	rax, qword ptr [rbp - 0x108]
0x18ada:	mov	qword ptr [rbp - 0xf0], rbx
0x18ae1:	lea	rbx, [rbp - 0x100]
0x18ae8:	mov	byte ptr [rbp - 0x100], 0
0x18aef:	mov	qword ptr [rbp - 0xfc], 0
0x18afa:	mov	r15, r12
0x18afd:	mov	byte ptr [rbp - 0xf4], 0
0x18b04:	mov	r14d, 1
0x18b0a:	lea	r13, [rax + rax*2]
0x18b0e:	lea	rax, [rbx + 4]
0x18b12:	shl	r13, 4
0x18b16:	mov	qword ptr [rbp - 0x120], rax
0x18b1d:	add	r13, r12
0x18b20:	jmp	0x18bd1


0x18bd1:	cmp	byte ptr [rbp - 0x100], 0
0x18bd8:	je	0x18b28


0x18b28:	mov	rcx, qword ptr [rbp - 0xf0]
0x18b2f:	lea	rsi, [rip + 0x442a]
0x18b36:	movzx	edx, byte ptr [rcx]
0x18b39:	mov	eax, edx
0x18b3b:	shr	al, 5
0x18b3e:	and	eax, 7
0x18b41:	mov	eax, dword ptr [rsi + rax*4]
0x18b44:	bt	eax, edx
0x18b47:	jae	0x18ec8


0x18bde:	call	0x1d90


0x18b4d:	mov	qword ptr [rbp - 0xe8], 1
0x18b58:	movsx	eax, byte ptr [rcx]
0x18b5b:	mov	byte ptr [rbp - 0xe0], r14b
0x18b62:	mov	byte ptr [rbp - 0xf4], r14b
0x18b69:	mov	dword ptr [rbp - 0xdc], eax
0x18b6f:	mov	r8d, dword ptr [rbp - 0xdc]
0x18b76:	test	r8d, r8d
0x18b79:	je	0x18ca0


0x18ec8:	mov	rdi, qword ptr [rbp - 0x120]
0x18ecf:	call	0x20b0


0x18ca0:	cmp	qword ptr [rbp - 0x108], 2
0x18ca8:	mov	qword ptr [r13 + 8], 1
0x18cb0:	jbe	0x18d46


0x18b7f:	mov	eax, 1
0x18b84:	mov	rsi, qword ptr [rbp - 0xf0]
0x18b8b:	lea	rcx, [rbx + 0x28]
0x18b8f:	mov	rdx, qword ptr [rbp - 0xe8]
0x18b96:	cmp	rsi, rcx
0x18b99:	je	0x18ef0


0x18d46:	mov	rax, qword ptr [rbp - 0x128]
0x18d4d:	lea	rbx, [rbp - 0x80]
0x18d51:	mov	byte ptr [rbp - 0xc0], 0
0x18d58:	mov	qword ptr [rbp - 0xbc], 0
0x18d63:	mov	byte ptr [rbp - 0xb4], 0
0x18d6a:	xor	r15d, r15d
0x18d6d:	mov	byte ptr [rbp - 0x80], 0
0x18d71:	mov	qword ptr [rbp - 0x7c], 0
0x18d79:	mov	qword ptr [rax], 0
0x18d80:	mov	rax, qword ptr [rbp - 0x118]
0x18d87:	mov	qword ptr [rbp - 0x118], rbx
0x18d8e:	add	rbx, 4
0x18d92:	mov	byte ptr [rbp - 0x74], 0
0x18d96:	mov	qword ptr [rbp - 0x120], rbx
0x18d9d:	lea	rbx, [rbp - 0xc0]
0x18da4:	mov	qword ptr [rbp - 0xb0], rax
0x18dab:	mov	qword ptr [rbp - 0x70], rax
0x18daf:	xor	eax, eax
0x18db1:	nop	dword ptr [rax]
0x18db8:	test	al, al
0x18dba:	je	0x18f9c


0x18cb6:	lea	r14, [r12 + 0x30]
0x18cbb:	xor	ebx, ebx
0x18cbd:	mov	r15d, 2
0x18cc3:	nop	dword ptr [rax + rax]
0x18cc8:	movzx	ecx, byte ptr [r14 + 0x10]
0x18ccd:	jmp	0x18ced


0x18ef0:	lea	rcx, [r15 + 0x18]
0x18ef4:	mov	rdi, rcx
0x18ef7:	call	0x1ee0


0x18b9f:	mov	qword ptr [r15], rsi
0x18ba2:	test	al, al
0x18ba4:	mov	qword ptr [r15 + 8], rdx
0x18ba8:	mov	byte ptr [r15 + 0x10], al
0x18bac:	je	0x18bb8


0x18f9c:	cmp	byte ptr [rbp - 0x80], 0
0x18fa0:	jne	0x18fd8


0x18dc0:	cmp	byte ptr [rbp - 0x60], 0
0x18dc4:	jne	0x18f56


0x18ced:	lea	rax, [rbx + rbx*2]
0x18cf1:	shl	rax, 4
0x18cf5:	add	rax, r12
0x18cf8:	test	cl, cl
0x18cfa:	jne	0x18cd0


0x18bb8:	mov	rax, qword ptr [rbp - 0xe8]
0x18bbf:	add	qword ptr [rbp - 0xf0], rax
0x18bc6:	add	r15, 0x30
0x18bca:	mov	byte ptr [rbp - 0xf4], 0
0x18bd1:	cmp	byte ptr [rbp - 0x100], 0
0x18bd8:	je	0x18b28


0x18bae:	mov	eax, dword ptr [rbp - 0xdc]
0x18bb4:	mov	dword ptr [r15 + 0x14], eax
0x18bb8:	mov	rax, qword ptr [rbp - 0xe8]
0x18bbf:	add	qword ptr [rbp - 0xf0], rax
0x18bc6:	add	r15, 0x30
0x18bca:	mov	byte ptr [rbp - 0xf4], 0
0x18bd1:	cmp	byte ptr [rbp - 0x100], 0
0x18bd8:	je	0x18b28


0x18fa2:	mov	rcx, qword ptr [rbp - 0x70]
0x18fa6:	lea	rsi, [rip + 0x3fb3]
0x18fad:	movzx	edx, byte ptr [rcx]
0x18fb0:	mov	eax, edx
0x18fb2:	shr	al, 5
0x18fb5:	and	eax, 7
0x18fb8:	mov	eax, dword ptr [rsi + rax*4]
0x18fbb:	bt	eax, edx
0x18fbe:	jb	0x18f40


0x18fd8:	call	0x1d90


0x18dca:	lea	rax, [r15 + r15*2]
0x18dce:	shl	rax, 4
0x18dd2:	add	rax, r12
0x18dd5:	mov	rdx, qword ptr [rax + 8]
0x18dd9:	cmp	rdx, qword ptr [rbp - 0x68]
0x18ddd:	je	0x19170


0x18f56:	mov	edx, dword ptr [rbp - 0x5c]
0x18f59:	test	edx, edx
0x18f5b:	je	0x19080


0x18cfc:	mov	rdx, qword ptr [r14 + 8]
0x18d00:	cmp	rdx, qword ptr [rax + 8]
0x18d04:	jne	0x18cdf


0x18cd0:	cmp	byte ptr [rax + 0x10], 0
0x18cd4:	je	0x18cfc


0x18f40:	mov	qword ptr [rbp - 0x68], 1
0x18f48:	movsx	eax, byte ptr [rcx]
0x18f4b:	mov	byte ptr [rbp - 0x60], 1
0x18f4f:	mov	byte ptr [rbp - 0x74], 1
0x18f53:	mov	dword ptr [rbp - 0x5c], eax
0x18f56:	mov	edx, dword ptr [rbp - 0x5c]
0x18f59:	test	edx, edx
0x18f5b:	je	0x19080


0x18fc0:	mov	rdi, qword ptr [rbp - 0x120]
0x18fc7:	call	0x20b0


0x19170:	mov	rsi, qword ptr [rbp - 0x70]
0x19174:	mov	rdi, qword ptr [rax]
0x19177:	call	0x1e90


0x18de3:	test	r15, r15
0x18de6:	je	0x191c0


0x19080:	mov	rdi, r12
0x19083:	call	0x1abf0


0x18f61:	lea	rax, [r15 + r15*2]
0x18f65:	shl	rax, 4
0x18f69:	add	rax, r12
0x18f6c:	cmp	byte ptr [rax + 0x10], 0
0x18f70:	je	0x18dd5


0x18d06:	mov	rsi, qword ptr [rax]
0x18d09:	mov	rdi, qword ptr [r14]
0x18d0c:	mov	byte ptr [rbp - 0x110], cl
0x18d12:	call	0x1e90


0x18cdf:	test	rbx, rbx
0x18ce2:	je	0x19298


0x18cd6:	mov	eax, dword ptr [rax + 0x14]
0x18cd9:	cmp	dword ptr [r14 + 0x14], eax
0x18cdd:	je	0x18d22


0x191c0:	cmp	byte ptr [rbp - 0xb4], 0
0x191c7:	jne	0x19288


0x18dec:	mov	r14, qword ptr [r13 + r15*8]
0x18df1:	mov	rax, r15
0x18df4:	sub	rax, r14
0x18df7:	test	r14, r14
0x18dfa:	mov	qword ptr [rbp - 0x110], rax
0x18e01:	movzx	eax, byte ptr [rbp - 0x74]
0x18e05:	je	0x18db8


0x18dd5:	mov	rdx, qword ptr [rax + 8]
0x18dd9:	cmp	rdx, qword ptr [rbp - 0x68]
0x18ddd:	je	0x19170


0x18f76:	cmp	dword ptr [rax + 0x14], edx
0x18f79:	jne	0x18de3


0x19298:	mov	qword ptr [r13 + r15*8], r15
0x1929d:	jmp	0x18d31


0x18ce8:	sub	rbx, qword ptr [r13 + rbx*8]
0x18ced:	lea	rax, [rbx + rbx*2]
0x18cf1:	shl	rax, 4
0x18cf5:	add	rax, r12
0x18cf8:	test	cl, cl
0x18cfa:	jne	0x18cd0


0x18d22:	add	rbx, 1
0x18d26:	mov	rax, r15
0x18d29:	sub	rax, rbx
0x18d2c:	mov	qword ptr [r13 + r15*8], rax
0x18d31:	add	r15, 1
0x18d35:	add	r14, 0x30
0x18d39:	cmp	qword ptr [rbp - 0x108], r15
0x18d40:	jne	0x18cc8


0x191cd:	cmp	byte ptr [rbp - 0xc0], 0
0x191d4:	jne	0x192c0


0x19288:	cmp	byte ptr [rbp - 0xa0], 0
0x1928f:	je	0x1922f


0x18db8:	test	al, al
0x18dba:	je	0x18f9c


0x18e07:	cmp	byte ptr [rbp - 0xb4], 0
0x18e0e:	je	0x18e38


0x18f7f:	add	r15, 1
0x18f83:	mov	rax, qword ptr [rbp - 0x68]
0x18f87:	add	qword ptr [rbp - 0x70], rax
0x18f8b:	cmp	qword ptr [rbp - 0x108], r15
0x18f92:	mov	byte ptr [rbp - 0x74], 0
0x18f96:	je	0x1941c


0x18d31:	add	r15, 1
0x18d35:	add	r14, 0x30
0x18d39:	cmp	qword ptr [rbp - 0x108], r15
0x18d40:	jne	0x18cc8


0x18cc8:	movzx	ecx, byte ptr [r14 + 0x10]
0x18ccd:	jmp	0x18ced


0x191da:	mov	rcx, qword ptr [rbp - 0xb0]
0x191e1:	lea	rsi, [rip + 0x3d78]
0x191e8:	movzx	edx, byte ptr [rcx]
0x191eb:	mov	eax, edx
0x191ed:	shr	al, 5
0x191f0:	and	eax, 7
0x191f3:	mov	eax, dword ptr [rsi + rax*4]
0x191f6:	bt	eax, edx
0x191f9:	jae	0x192a8


0x192c0:	call	0x1d90


0x1922f:	mov	rax, qword ptr [rbp - 0xa8]
0x19236:	mov	byte ptr [rbp - 0xb4], 0
0x1923d:	add	qword ptr [rbp - 0xb0], rax
0x19244:	mov	byte ptr [rbp - 0x74], 0
0x19248:	mov	rax, qword ptr [rbp - 0x68]
0x1924c:	add	qword ptr [rbp - 0x70], rax
0x19250:	jmp	0x18f9c


0x19291:	jmp	0x19221


0x18e38:	cmp	byte ptr [rbp - 0xc0], 0
0x18e3f:	jne	0x190b0


0x18e10:	cmp	byte ptr [rbp - 0xa0], 0
0x18e17:	jne	0x18e8c


0x1941c:	mov	rax, qword ptr [rbp - 0xb0]
0x19423:	mov	rbx, qword ptr [rbp - 0x128]
0x1942a:	mov	rdi, r12
0x1942d:	mov	qword ptr [rbx], rax
0x19430:	call	0x1abf0


0x191ff:	mov	qword ptr [rbp - 0xa8], 1
0x1920a:	movsx	eax, byte ptr [rcx]
0x1920d:	mov	byte ptr [rbp - 0xa0], 1
0x19214:	mov	byte ptr [rbp - 0xb4], 1
0x1921b:	mov	dword ptr [rbp - 0x9c], eax
0x19221:	mov	edx, dword ptr [rbp - 0x9c]
0x19227:	test	edx, edx
0x19229:	je	0x18e96


0x192a8:	lea	rdi, [rbx + 4]
0x192ac:	call	0x20b0


0x19221:	mov	edx, dword ptr [rbp - 0x9c]
0x19227:	test	edx, edx
0x19229:	je	0x18e96


0x18e45:	mov	rcx, qword ptr [rbp - 0xb0]
0x18e4c:	lea	rsi, [rip + 0x410d]
0x18e53:	movzx	edx, byte ptr [rcx]
0x18e56:	mov	eax, edx
0x18e58:	shr	al, 5
0x18e5b:	and	eax, 7
0x18e5e:	mov	eax, dword ptr [rsi + rax*4]
0x18e61:	bt	eax, edx
0x18e64:	jae	0x19098


0x190b0:	call	0x1d90


0x18e19:	mov	rax, qword ptr [rbp - 0xa8]
0x18e20:	add	qword ptr [rbp - 0xb0], rax
0x18e27:	sub	r14, 1
0x18e2b:	mov	byte ptr [rbp - 0xb4], 0
0x18e32:	je	0x19258


0x18e8c:	mov	esi, dword ptr [rbp - 0x9c]
0x18e92:	test	esi, esi
0x18e94:	jne	0x18e19


0x18e96:	call	0x1c70


0x18e6a:	mov	qword ptr [rbp - 0xa8], 1
0x18e75:	movsx	eax, byte ptr [rcx]
0x18e78:	mov	byte ptr [rbp - 0xa0], 1
0x18e7f:	mov	byte ptr [rbp - 0xb4], 1
0x18e86:	mov	dword ptr [rbp - 0x9c], eax
0x18e8c:	mov	esi, dword ptr [rbp - 0x9c]
0x18e92:	test	esi, esi
0x18e94:	jne	0x18e19


0x19098:	lea	rdi, [rbx + 4]
0x1909c:	call	0x20b0


0x19258:	movzx	eax, byte ptr [rbp - 0x74]
0x1925c:	mov	r15, qword ptr [rbp - 0x110]
0x19263:	jmp	0x18db8


0x19435:	mov	eax, 1
0x1943a:	jmp	0x18ea2


0x18ea2:	mov	rbx, qword ptr [rbp - 0x38]
0x18ea6:	xor	rbx, qword ptr fs:[0x28]
0x18eaf:	jne	0x1945e


0x19088:	mov	eax, 1
0x1908d:	jmp	0x18ea2


0x18d17:	test	eax, eax
0x18d19:	movzx	ecx, byte ptr [rbp - 0x110]
0x18d20:	jne	0x18cdf


0x1917c:	test	eax, eax
0x1917e:	jne	0x18de3


0x19184:	jmp	0x18f7f


0x18efc:	mov	rdx, qword ptr [rbp - 0xe8]
0x18f03:	mov	qword ptr [r15], rax
0x18f06:	movzx	eax, byte ptr [rbp - 0xe0]
0x18f0d:	jmp	0x18ba2


0x18ba2:	test	al, al
0x18ba4:	mov	qword ptr [r15 + 8], rdx
0x18ba8:	mov	byte ptr [r15 + 0x10], al
0x18bac:	je	0x18bb8


0x190a1:	test	eax, eax
0x190a3:	je	0x1943f


0x1943f:	lea	rcx, [rip + 0x3b3a]
0x19446:	lea	rsi, [rip + 0x284b]
0x1944d:	lea	rdi, [rip + 0x2876]
0x19454:	mov	edx, 0x96
0x19459:	call	0x1e30


0x190a9:	mov	byte ptr [rbp - 0xc0], 1
0x190b0:	call	0x1d90


0x192b1:	test	eax, eax
0x192b3:	je	0x1943f


0x192b9:	mov	byte ptr [rbp - 0xc0], 1
0x192c0:	call	0x1d90


0x18fcc:	test	eax, eax
0x18fce:	je	0x1943f


0x18fd4:	mov	byte ptr [rbp - 0x80], 1
0x18fd8:	call	0x1d90


0x18ed4:	test	eax, eax
0x18ed6:	je	0x1943f


0x18edc:	mov	byte ptr [rbp - 0x100], r14b
0x18ee3:	jmp	0x18bde


0x18fdd:	mov	r8, qword ptr [rbp - 0x70]
0x18fe1:	mov	rsi, rax
0x18fe4:	mov	rdi, r8
0x18fe7:	mov	qword ptr [rbp - 0x110], r8
0x18fee:	call	0x8c30


0x18ff3:	mov	rsi, qword ptr [rbp - 0x118]
0x18ffa:	mov	r8, qword ptr [rbp - 0x110]
0x19001:	mov	rdx, rax
0x19004:	lea	rcx, [rsi + 4]
0x19008:	lea	rdi, [rsi + 0x24]
0x1900c:	mov	rsi, r8
0x1900f:	call	0xa3b0


0x19014:	cmp	rax, -1
0x19018:	mov	qword ptr [rbp - 0x68], rax
0x1901c:	je	0x19270


0x19270:	mov	qword ptr [rbp - 0x68], 1
0x19278:	mov	byte ptr [rbp - 0x60], 0
0x1927c:	mov	byte ptr [rbp - 0x74], 1
0x19280:	jmp	0x18dca


0x19022:	cmp	rax, -2
0x19026:	je	0x19370


0x19370:	mov	rdi, qword ptr [rbp - 0x70]
0x19374:	call	0x1da0


0x1902c:	test	rax, rax
0x1902f:	jne	0x19051


0x19031:	mov	rax, qword ptr [rbp - 0x70]
0x19035:	mov	qword ptr [rbp - 0x68], 1
0x1903d:	cmp	byte ptr [rax], 0
0x19040:	jne	0x19463


0x19051:	mov	rax, qword ptr [rbp - 0x118]
0x19058:	mov	byte ptr [rbp - 0x60], 1
0x1905c:	lea	rdi, [rax + 4]
0x19060:	call	0x20b0


0x19046:	mov	eax, dword ptr [rbp - 0x5c]
0x19049:	test	eax, eax
0x1904b:	jne	0x19482


0x19463:	lea	rcx, [rip + 0x3b16]
0x1946a:	lea	rsi, [rip + 0x2827]
0x19471:	lea	rdi, [rip + 0x2869]
0x19478:	mov	edx, 0xb2
0x1947d:	call	0x1e30


0x19482:	call	0x2166


0x19065:	test	eax, eax
0x19067:	je	0x19390


0x19390:	mov	byte ptr [rbp - 0x74], 1
0x19394:	jmp	0x18f56


0x1906d:	mov	edx, dword ptr [rbp - 0x5c]
0x19070:	mov	byte ptr [rbp - 0x80], 0
0x19074:	mov	byte ptr [rbp - 0x74], 1
0x19078:	test	edx, edx
0x1907a:	jne	0x18f61


0x19379:	mov	byte ptr [rbp - 0x60], 0
0x1937d:	mov	qword ptr [rbp - 0x68], rax
0x19381:	mov	byte ptr [rbp - 0x74], 1
0x19385:	jmp	0x18dca


0x192c5:	mov	r8, qword ptr [rbp - 0xb0]
0x192cc:	mov	rsi, rax
0x192cf:	mov	rdi, r8
0x192d2:	mov	qword ptr [rbp - 0x110], r8
0x192d9:	call	0x8c30


0x192de:	mov	r8, qword ptr [rbp - 0x110]
0x192e5:	lea	rcx, [rbx + 4]
0x192e9:	lea	rdi, [rbx + 0x24]
0x192ed:	mov	rdx, rax
0x192f0:	mov	rsi, r8
0x192f3:	call	0xa3b0


0x192f8:	cmp	rax, -1
0x192fc:	mov	qword ptr [rbp - 0xa8], rax
0x19303:	je	0x193cd


0x193cd:	mov	qword ptr [rbp - 0xa8], 1
0x193d8:	mov	byte ptr [rbp - 0xa0], 0
0x193df:	jmp	0x1922f


0x19309:	cmp	rax, -2
0x1930d:	je	0x193fd


0x193fd:	mov	rdi, qword ptr [rbp - 0xb0]
0x19404:	call	0x1da0


0x19313:	test	rax, rax
0x19316:	jne	0x19341


0x19318:	mov	rax, qword ptr [rbp - 0xb0]
0x1931f:	mov	qword ptr [rbp - 0xa8], 1
0x1932a:	cmp	byte ptr [rax], 0
0x1932d:	jne	0x19463


0x19341:	lea	rdi, [rbx + 4]
0x19345:	mov	byte ptr [rbp - 0xa0], 1
0x1934c:	call	0x20b0


0x19333:	mov	ecx, dword ptr [rbp - 0x9c]
0x19339:	test	ecx, ecx
0x1933b:	jne	0x19482


0x19351:	test	eax, eax
0x19353:	je	0x193f1


0x193f1:	mov	byte ptr [rbp - 0xb4], 1
0x193f8:	jmp	0x19221


0x19359:	mov	byte ptr [rbp - 0xc0], 0
0x19360:	mov	byte ptr [rbp - 0xb4], 1
0x19367:	jmp	0x19221


0x19409:	mov	byte ptr [rbp - 0xa0], 0
0x19410:	mov	qword ptr [rbp - 0xa8], rax
0x19417:	jmp	0x1922f


0x190b5:	mov	r15, qword ptr [rbp - 0xb0]
0x190bc:	mov	rsi, rax
0x190bf:	mov	rdi, r15
0x190c2:	call	0x8c30


0x190c7:	lea	rcx, [rbx + 4]
0x190cb:	lea	rdi, [rbx + 0x24]
0x190cf:	mov	rdx, rax
0x190d2:	mov	rsi, r15
0x190d5:	call	0xa3b0


0x190da:	cmp	rax, -1
0x190de:	mov	qword ptr [rbp - 0xa8], rax
0x190e5:	je	0x19150


0x19150:	mov	qword ptr [rbp - 0xa8], 1
0x1915b:	mov	byte ptr [rbp - 0xa0], 0
0x19162:	jmp	0x18e19


0x190e7:	cmp	rax, -2
0x190eb:	je	0x19190


0x19190:	mov	rdi, qword ptr [rbp - 0xb0]
0x19197:	call	0x1da0


0x190f1:	test	rax, rax
0x190f4:	jne	0x1911f


0x190f6:	mov	rax, qword ptr [rbp - 0xb0]
0x190fd:	mov	qword ptr [rbp - 0xa8], 1
0x19108:	cmp	byte ptr [rax], 0
0x1910b:	jne	0x19463


0x1911f:	lea	rdi, [rbx + 4]
0x19123:	mov	byte ptr [rbp - 0xa0], 1
0x1912a:	call	0x20b0


0x19111:	mov	edi, dword ptr [rbp - 0x9c]
0x19117:	test	edi, edi
0x19119:	jne	0x19482


0x1912f:	test	eax, eax
0x19131:	je	0x191b0


0x191b0:	mov	byte ptr [rbp - 0xb4], 1
0x191b7:	jmp	0x18e8c


0x19133:	mov	byte ptr [rbp - 0xc0], 0
0x1913a:	mov	byte ptr [rbp - 0xb4], 1
0x19141:	jmp	0x18e8c


0x1919c:	mov	byte ptr [rbp - 0xa0], 0
0x191a3:	mov	qword ptr [rbp - 0xa8], rax
0x191aa:	jmp	0x18e19


0x18be3:	mov	r9, qword ptr [rbp - 0xf0]
0x18bea:	mov	rsi, rax
0x18bed:	mov	rdi, r9
0x18bf0:	mov	qword ptr [rbp - 0x110], r9
0x18bf7:	call	0x8c30


0x18bfc:	mov	r9, qword ptr [rbp - 0x110]
0x18c03:	lea	rcx, [rbx + 4]
0x18c07:	lea	rdi, [rbx + 0x24]
0x18c0b:	mov	rdx, rax
0x18c0e:	mov	rsi, r9
0x18c11:	call	0xa3b0


0x18c16:	cmp	rax, -1
0x18c1a:	mov	qword ptr [rbp - 0xe8], rax
0x18c21:	je	0x18f18


0x18f18:	mov	qword ptr [rbp - 0xe8], 1
0x18f23:	mov	byte ptr [rbp - 0xe0], 0
0x18f2a:	xor	eax, eax
0x18f2c:	mov	byte ptr [rbp - 0xf4], r14b
0x18f33:	jmp	0x18b84


0x18c27:	cmp	rax, -2
0x18c2b:	je	0x19399


0x18b84:	mov	rsi, qword ptr [rbp - 0xf0]
0x18b8b:	lea	rcx, [rbx + 0x28]
0x18b8f:	mov	rdx, qword ptr [rbp - 0xe8]
0x18b96:	cmp	rsi, rcx
0x18b99:	je	0x18ef0


0x19399:	mov	rdi, qword ptr [rbp - 0xf0]
0x193a0:	call	0x1da0


0x18c31:	test	rax, rax
0x18c34:	jne	0x18c61


0x18c36:	mov	rax, qword ptr [rbp - 0xf0]
0x18c3d:	mov	qword ptr [rbp - 0xe8], 1
0x18c48:	cmp	byte ptr [rax], 0
0x18c4b:	jne	0x19463


0x18c61:	lea	rdi, [rbx + 4]
0x18c65:	mov	byte ptr [rbp - 0xe0], r14b
0x18c6c:	call	0x20b0


0x18c51:	mov	r9d, dword ptr [rbp - 0xdc]
0x18c58:	test	r9d, r9d
0x18c5b:	jne	0x19482


0x18c71:	test	eax, eax
0x18c73:	je	0x193c1


0x193c1:	mov	byte ptr [rbp - 0xf4], r14b
0x193c8:	jmp	0x18b6f


0x18c79:	mov	r8d, dword ptr [rbp - 0xdc]
0x18c80:	mov	byte ptr [rbp - 0x100], 0
0x18c87:	mov	byte ptr [rbp - 0xf4], r14b
0x18c8e:	test	r8d, r8d
0x18c91:	jne	0x18b7f


0x18b6f:	mov	r8d, dword ptr [rbp - 0xdc]
0x18b76:	test	r8d, r8d
0x18b79:	je	0x18ca0


0x193a5:	mov	byte ptr [rbp - 0xe0], 0
0x193ac:	mov	qword ptr [rbp - 0xe8], rax
0x193b3:	xor	eax, eax
0x193b5:	mov	byte ptr [rbp - 0xf4], r14b
0x193bc:	jmp	0x18b84


0x193e9:	mov	r12, rax
0x193ec:	jmp	0x18aca


0x18aca:	test	r12, r12
0x18acd:	je	0x18ea0


0x19f7d:	test	al, al
0x19f7f:	mov	byte ptr [rsp + 0x10], al
0x19f83:	jne	0x1a49f


0x19f89:	movzx	edx, byte ptr [rsp + 0xe0]
0x19f91:	jmp	0x1a17b


0x1a17b:	lea	rax, [rbx + 1]
0x1a17f:	test	dl, dl
0x1a181:	mov	qword ptr [rsp + 0x20], rbx
0x1a186:	mov	rbx, rax
0x1a189:	jne	0x19784


0x19575:	add	rbp, rax
0x19578:	mov	r8, rbx
0x1957b:	movzx	edx, byte ptr [rsp]
0x1957f:	cmp	byte ptr [rbp], 0
0x19583:	jne	0x19650


0x6a1e:	mov	rax, rbx
0x6a21:	pop	rbx
0x6a22:	pop	rbp
0x6a23:	pop	r12
0x6a25:	ret	


0x8ec2:	test	eax, eax
0x8ec4:	je	0x91c0


0x8eca:	add	r15, qword ptr [rsp + 0x40]
0x8ecf:	mov	rdx, qword ptr [rsp + 0x20]
0x8ed4:	mov	byte ptr [rsp + 0x34], 0
0x8ed9:	cmp	r15, rdx
0x8edc:	mov	qword ptr [rsp + 0x38], r15
0x8ee1:	jae	0x91c0


0x8df2:	test	eax, eax
0x8df4:	mov	eax, 1
0x8df9:	cmove	r15d, eax
0x8dfd:	jmp	0x8d57


0x9134:	mov	rsi, qword ptr [rsp + 8]
0x9139:	test	eax, eax
0x913b:	mov	eax, 2
0x9140:	cmovne	r15d, eax
0x9144:	cmovne	rsi, r12
0x9148:	mov	qword ptr [rsp + 8], rsi
0x914d:	jmp	0x8d57


0x8d51:	test	eax, eax
0x8d53:	sete	r15b
0x8d57:	lea	rsi, [r12 + r13]
0x8d5b:	mov	byte ptr [rsp + 0x34], 0
0x8d60:	cmp	rsi, r14
0x8d63:	mov	qword ptr [rsp + 0x38], rsi
0x8d68:	jae	0x8f70


0x1724d:	cmp	eax, -1
0x17250:	je	0x17265


0x17265:	test	r14d, 0xffffff80
0x1726c:	jne	0x1727a


0x17252:	mov	rsi, qword ptr [rbx + 0x78]
0x17256:	mov	rdi, r13
0x17259:	mov	ecx, r15d
0x1725c:	shl	rdi, cl
0x1725f:	add	rsi, r12
0x17262:	or	qword ptr [rsi], rdi
0x17265:	test	r14d, 0xffffff80
0x1726c:	jne	0x1727a


0x1726e:	cmp	eax, r14d
0x17271:	je	0x1727a


0x1727a:	add	r15, 1
0x1727e:	cmp	r15, 0x40
0x17282:	jne	0x17240


0x17273:	or	byte ptr [rbx + 0xb0], 8
0x1727a:	add	r15, 1
0x1727e:	cmp	r15, 0x40
0x17282:	jne	0x17240


0x17284:	add	ebp, 0x40
0x17287:	add	r12, 8
0x1728b:	cmp	ebp, 0x100
0x17291:	jne	0x17236


0x17240:	lea	r14d, [rbp + r15]
0x17245:	mov	edi, r14d
0x17248:	call	0x1fe0


0x17293:	jmp	0x16cbe


0x17236:	xor	r15d, r15d
0x17239:	nop	dword ptr [rax]
0x17240:	lea	r14d, [rbp + r15]
0x17245:	mov	edi, r14d
0x17248:	call	0x1fe0


0x1ab93:	mov	dword ptr [r12], r13d
0x1ab97:	jmp	0x1aaf7


0x1ab3b:	test	eax, eax
0x1ab3d:	jns	0x1aaf7


0x1ab3f:	call	0x1c80


0x1ab44:	mov	r12d, dword ptr [rax]
0x1ab47:	mov	rbp, rax
0x1ab4a:	mov	rdi, rbx
0x1ab4d:	call	0x1c60


0x1ab52:	xor	ebx, ebx
0x1ab54:	mov	dword ptr [rbp], r12d
0x1ab58:	jmp	0x1aaf7


0x59e7:	test	eax, eax
0x59e9:	jne	0x59c7


0x59eb:	mov	rdi, r14
0x59ee:	call	0x1da0


0x59c7:	add	rbx, 1
0x59cb:	add	rbp, r13
0x59ce:	mov	r14, qword ptr [r15 + rbx*8]
0x59d2:	test	r14, r14
0x59d5:	je	0x5a18


0x5a18:	cmp	byte ptr [rsp + 0x17], 0
0x5a1d:	mov	rax, -2
0x5a24:	cmove	rax, qword ptr [rsp]
0x5a29:	mov	qword ptr [rsp], rax
0x5a2d:	mov	rax, qword ptr [rsp]
0x5a31:	add	rsp, 0x28
0x5a35:	pop	rbx
0x5a36:	pop	rbp
0x5a37:	pop	r12
0x5a39:	pop	r13
0x5a3b:	pop	r14
0x5a3d:	pop	r15
0x5a3f:	ret	


0x59f3:	cmp	rax, r12
0x59f6:	je	0x5a50


0x5a50:	mov	qword ptr [rsp], rbx
0x5a54:	jmp	0x5a2d


0x59f8:	cmp	qword ptr [rsp], -1
0x59fd:	jne	0x5990


0x59ff:	mov	qword ptr [rsp], rbx
0x5a03:	add	rbx, 1
0x5a07:	add	rbp, r13
0x5a0a:	mov	r14, qword ptr [r15 + rbx*8]
0x5a0e:	test	r14, r14
0x5a11:	jne	0x59d7


0x5990:	mov	rax, qword ptr [rsp + 0x18]
0x5995:	test	rax, rax
0x5998:	je	0x5a40


0x5a40:	mov	byte ptr [rsp + 0x17], 1
0x5a45:	jmp	0x59c7


0x599e:	mov	rdi, qword ptr [rsp]
0x59a2:	mov	rdx, r13
0x59a5:	mov	rsi, rbp
0x59a8:	imul	rdi, r13
0x59ac:	add	rdi, rax
0x59af:	call	0x1e90


0x59b4:	test	eax, eax
0x59b6:	movzx	eax, byte ptr [rsp + 0x17]
0x59bb:	mov	ecx, 1
0x59c0:	cmovne	eax, ecx
0x59c3:	mov	byte ptr [rsp + 0x17], al
0x59c7:	add	rbx, 1
0x59cb:	add	rbp, r13
0x59ce:	mov	r14, qword ptr [r15 + rbx*8]
0x59d2:	test	r14, r14
0x59d5:	je	0x5a18


0x6bea:	test	rax, rax
0x6bed:	je	0x6c50


0x6c50:	test	rbx, rbx
0x6c53:	mov	qword ptr [rsp + 8], r12
0x6c58:	je	0x6d10


0x6bef:	mov	rdi, r12
0x6bf2:	call	0x1c60


0x6d10:	xor	ebp, ebp
0x6d12:	xor	r15d, r15d
0x6d15:	mov	rbx, r12
0x6d18:	jmp	0x6a88


0x6c5e:	mov	rbp, rbx
0x6c61:	mov	r15, rbx
0x6c64:	jmp	0x6a88


0x187d7:	test	eax, eax
0x187d9:	sete	al
0x187dc:	movzx	eax, al
0x187df:	pop	rbx
0x187e0:	ret	


0x21ff:	lea	rdi, [rip + 0x195d0]
0x2206:	call	0x1d20


0x1d20:	jmp	qword ptr [rip + 0x21f0a2]




0x101b6:	mov	rdi, qword ptr [rsp + 8]
0x101bb:	mov	eax, dword ptr [rsp]
0x101be:	mov	dword ptr [rdi], eax
0x101c0:	jmp	0x10122


0x10158:	jmp	0x10122


0xd74c:	jmp	0xd738


0xbd81:	cmp	qword ptr [rbp], rbx
0xbd85:	jg	0xbd70


0xbd70:	mov	rax, qword ptr [rbp + 0x10]
0xbd74:	mov	rdi, qword ptr [rax + rbx*8]
0xbd78:	add	rbx, 1
0xbd7c:	call	0xbbe0


0x1189a:	jmp	0x1185c


0x1162c:	xor	eax, eax
0x1162e:	jmp	0x117d9


0x115c4:	mov	eax, 0xc
0x115c9:	jmp	0x117d9


0xb0f5:	mov	edx, dword ptr [rsp + 0x18]
0xb0f9:	mov	r12d, eax
0xb0fc:	cmp	edx, eax
0xb0fe:	je	0xb178


0xb178:	mov	rsi, qword ptr [r14 + 0x28]
0xb17c:	mov	rdi, qword ptr [r14 + 8]
0xb180:	mov	rdx, rbp
0xb183:	add	rsi, r15
0xb186:	add	rsi, qword ptr [r14]
0xb189:	add	rdi, r15
0xb18c:	call	0x1ee0


0xb100:	mov	rdx, qword ptr [rsp + 0x38]
0xb105:	mov	rdi, qword ptr [rsp + 0x28]
0xb10a:	mov	esi, eax
0xb10c:	call	0x1f30


0xb111:	cmp	rbp, rax
0xb114:	jne	0xb288


0xb11a:	mov	rdi, qword ptr [r14 + 8]
0xb11e:	mov	rsi, qword ptr [rsp + 0x28]
0xb123:	mov	rdx, rbp
0xb126:	add	rdi, r15
0xb129:	call	0x1ee0


0xb288:	mov	r13, r15
0xb28b:	jmp	0xaf1e


0xaf1e:	mov	rdx, qword ptr [r14 + 0x78]
0xaf22:	mov	rax, qword ptr [r14 + 0x20]
0xaf26:	test	rdx, rdx
0xaf29:	mov	qword ptr [rsp + 0x48], rax
0xaf2e:	jne	0xb239


0xb12e:	add	r15, 1
0xb132:	mov	rdx, qword ptr [r14 + 0x10]
0xb136:	lea	rax, [r13*4]
0xb13e:	lea	rcx, [r15 + rbp - 1]
0xb143:	cmp	r15, rcx
0xb146:	mov	dword ptr [rdx + r13*4], r12d
0xb14a:	jge	0xb16a


0xb14c:	lea	rax, [rdx + rax + 4]
0xb151:	lea	rdx, [rdx + rcx*4]
0xb155:	nop	dword ptr [rax]
0xb158:	mov	dword ptr [rax], 0xffffffff
0xb15e:	add	rax, 4
0xb162:	cmp	rdx, rax
0xb165:	jne	0xb158


0xb167:	mov	r15, rcx
0xb16a:	cmp	rbx, r15
0xb16d:	jg	0xb080


0xb158:	mov	dword ptr [rax], 0xffffffff
0xb15e:	add	rax, 4
0xb162:	cmp	rdx, rax
0xb165:	jne	0xb158


0xb191:	jmp	0xb12e


0xaf81:	mov	edx, dword ptr [rsp + 0x10]
0xaf85:	mov	r12d, eax
0xaf88:	mov	qword ptr [rsp + 8], r15
0xaf8d:	cmp	edx, eax
0xaf8f:	je	0xb290


0xb290:	mov	rdi, qword ptr [r14 + 8]
0xb294:	mov	rsi, qword ptr [rsp + 0x18]
0xb299:	mov	rdx, rbp
0xb29c:	add	rdi, r15
0xb29f:	call	0x1ee0


0xaf95:	lea	rcx, [rsp + 0x50]
0xaf9a:	lea	rdx, [rsp + 0x48]
0xaf9f:	mov	esi, eax
0xafa1:	mov	rdi, rcx
0xafa4:	mov	qword ptr [rsp + 0x10], rcx
0xafa9:	call	0x1f30


0xafae:	cmp	rbp, rax
0xafb1:	mov	r11, rax
0xafb4:	mov	rcx, qword ptr [rsp + 0x10]
0xafb9:	jne	0xb346


0xafbf:	mov	rdi, qword ptr [r14 + 8]
0xafc3:	mov	rdx, rbp
0xafc6:	mov	rsi, rcx
0xafc9:	add	rdi, r15
0xafcc:	call	0x1ee0


0xb346:	cmp	rax, -1
0xb34a:	je	0xb290


0xb350:	lea	rax, [rax + r15]
0xb354:	mov	rsi, rax
0xb357:	mov	qword ptr [rsp + 8], rax
0xb35c:	mov	rax, qword ptr [r14 + 0x40]
0xb360:	cmp	rsi, rax
0xb363:	ja	0xb338


0xb365:	cmp	qword ptr [r14 + 0x18], 0
0xb36a:	je	0xb428


0xb428:	lea	rdi, [rax*8]
0xb430:	mov	qword ptr [rsp + 0x18], rcx
0xb435:	mov	qword ptr [rsp + 0x10], r11
0xb43a:	call	0x1f20


0xb370:	cmp	byte ptr [r14 + 0x8c], 0
0xb378:	jne	0xb39a


0xb37a:	test	r15, r15
0xb37d:	je	0xb392


0xb39a:	mov	rdi, qword ptr [r14 + 8]
0xb39e:	mov	rsi, rcx
0xb3a1:	mov	rdx, r11
0xb3a4:	mov	qword ptr [rsp + 0x10], r11
0xb3a9:	add	rdi, r15
0xb3ac:	call	0x1ee0


0xb392:	mov	byte ptr [r14 + 0x8c], 1
0xb39a:	mov	rdi, qword ptr [r14 + 8]
0xb39e:	mov	rsi, rcx
0xb3a1:	mov	rdx, r11
0xb3a4:	mov	qword ptr [rsp + 0x10], r11
0xb3a9:	add	rdi, r15
0xb3ac:	call	0x1ee0


0xb37f:	mov	rdx, qword ptr [r14 + 0x18]
0xb383:	xor	eax, eax
0xb385:	mov	qword ptr [rdx + rax*8], rax
0xb389:	add	rax, 1
0xb38d:	cmp	rax, r15
0xb390:	jne	0xb385


0xb385:	mov	qword ptr [rdx + rax*8], rax
0xb389:	add	rax, 1
0xb38d:	cmp	rax, r15
0xb390:	jne	0xb385


0xb43f:	test	rax, rax
0xb442:	mov	qword ptr [r14 + 0x18], rax
0xb446:	mov	r11, qword ptr [rsp + 0x10]
0xb44b:	mov	rcx, qword ptr [rsp + 0x18]
0xb450:	jne	0xb370


0xb456:	mov	eax, 0xc
0xb45b:	jmp	0xaecf


0xb3b1:	mov	rax, qword ptr [r14 + 0x10]
0xb3b5:	mov	r11, qword ptr [rsp + 0x10]
0xb3ba:	lea	rcx, [rax + r15*4]
0xb3be:	mov	rax, qword ptr [r14 + 0x18]
0xb3c2:	cmp	r11, 1
0xb3c6:	mov	dword ptr [rcx], r12d
0xb3c9:	lea	rsi, [rax + r15*8]
0xb3cd:	mov	qword ptr [rsi], r13
0xb3d0:	jbe	0xb3fa


0xb3fa:	mov	rbx, qword ptr [r14 + 0x58]
0xb3fe:	sub	r11, rbp
0xb401:	add	rbx, r11
0xb404:	cmp	r13, qword ptr [r14 + 0x60]
0xb408:	mov	qword ptr [r14 + 0x58], rbx
0xb40c:	jge	0xb412


0xb3d2:	mov	eax, 1
0xb3d7:	mov	rdx, qword ptr [rsp + 0x20]
0xb3dc:	cmp	rax, rbp
0xb3df:	cmovb	rdx, rax
0xb3e3:	add	rdx, r13
0xb3e6:	mov	qword ptr [rsi + rax*8], rdx
0xb3ea:	mov	dword ptr [rcx + rax*4], 0xffffffff
0xb3f1:	add	rax, 1
0xb3f5:	cmp	rax, r11
0xb3f8:	jne	0xb3d7


0xb40e:	add	qword ptr [r14 + 0x68], r11
0xb412:	cmp	qword ptr [r14 + 0x40], rbx
0xb416:	mov	r15, qword ptr [rsp + 8]
0xb41b:	cmovle	rbx, qword ptr [r14 + 0x40]
0xb420:	add	r13, rbp
0xb423:	jmp	0xaec0


0xb412:	cmp	qword ptr [r14 + 0x40], rbx
0xb416:	mov	r15, qword ptr [rsp + 8]
0xb41b:	cmovle	rbx, qword ptr [r14 + 0x40]
0xb420:	add	r13, rbp
0xb423:	jmp	0xaec0


0xb3d7:	mov	rdx, qword ptr [rsp + 0x20]
0xb3dc:	cmp	rax, rbp
0xb3df:	cmovb	rdx, rax
0xb3e3:	add	rdx, r13
0xb3e6:	mov	qword ptr [rsi + rax*8], rdx
0xb3ea:	mov	dword ptr [rcx + rax*4], 0xffffffff
0xb3f1:	add	rax, 1
0xb3f5:	cmp	rax, r11
0xb3f8:	jne	0xb3d7


0xafd1:	cmp	byte ptr [r14 + 0x8c], 0
0xafd9:	lea	rax, [rbp + r13]
0xafde:	jne	0xb315


0xafe4:	add	r15, 1
0xafe8:	mov	rsi, qword ptr [rsp + 8]
0xafed:	mov	rdx, qword ptr [r14 + 0x10]
0xaff1:	lea	rcx, [r15 + rbp - 1]
0xaff6:	mov	r13, rax
0xaff9:	cmp	r15, rcx
0xaffc:	lea	rax, [rsi*4]
0xb004:	mov	dword ptr [rdx + rsi*4], r12d
0xb008:	jge	0xaec0


0xb315:	mov	rdx, qword ptr [r14 + 0x18]
0xb319:	mov	rcx, r15
0xb31c:	mov	r10, r13
0xb31f:	sub	rcx, r13
0xb322:	lea	rdx, [rdx + rcx*8]
0xb326:	mov	qword ptr [rdx + r10*8], r10
0xb32a:	add	r10, 1
0xb32e:	cmp	rax, r10
0xb331:	jne	0xb326


0xb00e:	lea	rax, [rdx + rax + 4]
0xb013:	lea	rdx, [rdx + rcx*4]
0xb017:	nop	word ptr [rax + rax]
0xb020:	mov	dword ptr [rax], 0xffffffff
0xb026:	add	rax, 4
0xb02a:	cmp	rdx, rax
0xb02d:	jne	0xb020


0xb333:	jmp	0xafe4


0xb326:	mov	qword ptr [rdx + r10*8], r10
0xb32a:	add	r10, 1
0xb32e:	cmp	rax, r10
0xb331:	jne	0xb326


0xb02f:	mov	r15, rcx
0xb032:	jmp	0xaec0


0xb020:	mov	dword ptr [rax], 0xffffffff
0xb026:	add	rax, 4
0xb02a:	cmp	rdx, rax
0xb02d:	jne	0xb020


0xb2a4:	jmp	0xafd1


0x89f2:	test	eax, eax
0x89f4:	js	0x8a0a


0x8a0a:	mov	ebx, 0x2000
0x8a0f:	mov	rdi, rbx
0x8a12:	call	0x1f20


0x89f6:	mov	eax, dword ptr [rsp + 0x28]
0x89fa:	and	eax, 0xf000
0x89ff:	cmp	eax, 0x8000
0x8a04:	je	0x8b58


0x8b58:	mov	rdi, r13
0x8b5b:	call	0x1cb0


0x1cb0:	jmp	qword ptr [rip + 0x21f0da]




0x8a17:	test	rax, rax
0x8a1a:	mov	r12, rax
0x8a1d:	je	0x8ac0


0x8ac0:	mov	rcx, qword ptr [rsp + 0xa8]
0x8ac8:	xor	rcx, qword ptr fs:[0x28]
0x8ad1:	mov	rax, r12
0x8ad4:	jne	0x8b83


0x8a23:	xor	ebp, ebp
0x8a25:	mov	r15, -1
0x8a2c:	jmp	0x8a6a


0x8ada:	add	rsp, 0xb8
0x8ae1:	pop	rbx
0x8ae2:	pop	rbp
0x8ae3:	pop	r12
0x8ae5:	pop	r13
0x8ae7:	pop	r14
0x8ae9:	pop	r15
0x8aeb:	ret	


0x8b83:	call	0x1db0


0x8a6a:	mov	r14, rbx
0x8a6d:	lea	rdi, [r12 + rbp]
0x8a71:	mov	rcx, r13
0x8a74:	sub	r14, rbp
0x8a77:	mov	esi, 1
0x8a7c:	mov	rdx, r14
0x8a7f:	call	0x1d00


0x1d00:	jmp	qword ptr [rip + 0x21f0b2]




0x5ea0:	mov	r12, rax
0x5ea3:	test	bl, bl
0x5ea5:	mov	r15d, dword ptr [r14]
0x5ea8:	jne	0x5f50


0x5eae:	test	bpl, bpl
0x5eb1:	jne	0x5f20


0x5f50:	mov	edi, 2
0x5f55:	call	0x1e70


0x5eb3:	test	r13b, r13b
0x5eb6:	jne	0x5f2f


0x5f20:	mov	edi, 1
0x5f25:	call	0x1e70


0x5eb8:	test	r12, r12
0x5ebb:	jne	0x5ec0


0x5f2f:	xor	edi, edi
0x5f31:	call	0x1e70


0x5ebd:	mov	dword ptr [r14], r15d
0x5ec0:	add	rsp, 0x18
0x5ec4:	mov	rax, r12
0x5ec7:	pop	rbx
0x5ec8:	pop	rbp
0x5ec9:	pop	r12
0x5ecb:	pop	r13
0x5ecd:	pop	r14
0x5ecf:	pop	r15
0x5ed1:	ret	


0x5ec0:	add	rsp, 0x18
0x5ec4:	mov	rax, r12
0x5ec7:	pop	rbx
0x5ec8:	pop	rbp
0x5ec9:	pop	r12
0x5ecb:	pop	r13
0x5ecd:	pop	r14
0x5ecf:	pop	r15
0x5ed1:	ret	


0x5e34:	cmp	eax, 2
0x5e37:	setne	bl
0x5e3a:	mov	esi, 1
0x5e3f:	mov	edi, 1
0x5e44:	call	0x1de0


0x5e49:	cmp	eax, 1
0x5e4c:	setne	bpl
0x5e50:	xor	esi, esi
0x5e52:	xor	edi, edi
0x5e54:	call	0x1de0


0x5e59:	test	eax, eax
0x5e5b:	je	0x5ee8


0x5ee8:	xor	r13d, r13d
0x5eeb:	test	bpl, bpl
0x5eee:	je	0x5e78


0x5e61:	xor	edi, edi
0x5e63:	call	0x5d90


0x5e78:	test	bl, bl
0x5e7a:	je	0x5e90


0x5ef0:	mov	edi, 1
0x5ef5:	call	0x5d90


0x5e7c:	mov	edi, 2
0x5e81:	call	0x5d90


0x5e86:	test	al, al
0x5e88:	mov	ebx, eax
0x5e8a:	je	0x5f40


0x5f40:	mov	r15d, dword ptr [r14]
0x5f43:	xor	r12d, r12d
0x5f46:	nop	word ptr cs:[rax + rax]
0x5f50:	mov	edi, 2
0x5f55:	call	0x1e70


0x5efa:	test	al, al
0x5efc:	mov	ebp, eax
0x5efe:	jne	0x5e78


0x5f04:	xor	r12d, r12d
0x5f07:	test	bl, bl
0x5f09:	mov	r15d, dword ptr [r14]
0x5f0c:	je	0x5f20


0x5f0e:	mov	edi, 2
0x5f13:	call	0x1e70


0x5e68:	test	al, al
0x5e6a:	mov	r13d, eax
0x5e6d:	je	0x5f80


0x5f80:	mov	r13d, 1
0x5f86:	xor	r12d, r12d
0x5f89:	jmp	0x5ea3


0x5e73:	test	bpl, bpl
0x5e76:	jne	0x5ef0


0x5ea3:	test	bl, bl
0x5ea5:	mov	r15d, dword ptr [r14]
0x5ea8:	jne	0x5f50


0xa2ee:	cmp	rax, -1
0xa2f2:	jne	0xa2ac


0xa2f4:	mov	rdi, rbx
0xa2f7:	pop	rbx
0xa2f8:	pop	rbp
0xa2f9:	pop	r12
0xa2fb:	jmp	0x1d50


0xa390:	cmp	rax, -1
0xa394:	je	0xa3a2


0xa3a2:	pop	rbx
0xa3a3:	pop	rbp
0xa3a4:	pop	r12
0xa3a6:	ret	


0xa396:	and	dword ptr [rbx], 0xffffffef
0xa399:	mov	qword ptr [rbx + 0x90], rax
0xa3a0:	xor	eax, eax
0xa3a2:	pop	rbx
0xa3a3:	pop	rbp
0xa3a4:	pop	r12
0xa3a6:	ret	


0x9b40:	call	0x1c70


0x4a2d:	nop	dword ptr [rax]


0x5b1c:	mov	r15, qword ptr [r14]
0x5b1f:	test	r15, r15
0x5b22:	je	0x5bb8


0x5bb8:	mov	rdi, qword ptr [rip + 0x21b541]
0x5bbf:	mov	rax, qword ptr [rdi + 0x28]
0x5bc3:	cmp	rax, qword ptr [rdi + 0x30]
0x5bc7:	jae	0x5be8


0x5b28:	xor	r13d, r13d
0x5b2b:	xor	ebx, ebx
0x5b2d:	jmp	0x5b68


0x5bc9:	lea	rdx, [rax + 1]
0x5bcd:	mov	qword ptr [rdi + 0x28], rdx
0x5bd1:	mov	byte ptr [rax], 0xa
0x5bd4:	add	rsp, 8
0x5bd8:	pop	rbx
0x5bd9:	pop	rbp
0x5bda:	pop	r12
0x5bdc:	pop	r13
0x5bde:	pop	r14
0x5be0:	pop	r15
0x5be2:	ret	


0x5be8:	add	rsp, 8
0x5bec:	mov	esi, 0xa
0x5bf1:	pop	rbx
0x5bf2:	pop	rbp
0x5bf3:	pop	r12
0x5bf5:	pop	r13
0x5bf7:	pop	r14
0x5bf9:	pop	r15
0x5bfb:	jmp	0x1e00


0x5b68:	test	rbx, rbx
0x5b6b:	je	0x5b30


0x5b30:	mov	rdi, r15
0x5b33:	add	rbx, 1
0x5b37:	mov	r13, rbp
0x5b3a:	call	0x8990


0x5b6d:	mov	rdx, r12
0x5b70:	mov	rsi, rbp
0x5b73:	mov	rdi, r13
0x5b76:	call	0x1e90


0x5b7b:	test	eax, eax
0x5b7d:	jne	0x5b30


0x5b7f:	mov	rdi, r15
0x5b82:	add	rbx, 1
0x5b86:	add	rbp, r12
0x5b89:	call	0x8990


0x5585:	mov	rbx, qword ptr [rip + 0x21bb3c]
0x558c:	lea	rsi, [rip + 0x15a75]
0x5593:	mov	edx, 5
0x5598:	xor	edi, edi
0x559a:	call	0x1d80


0x559f:	mov	rsi, rbx
0x55a2:	mov	rdi, rax
0x55a5:	call	0x1eb0


0x55aa:	mov	rbx, qword ptr [rip + 0x21bb17]
0x55b1:	lea	rsi, [rip + 0x15a88]
0x55b8:	mov	edx, 5
0x55bd:	xor	edi, edi
0x55bf:	call	0x1d80


0x55c4:	mov	rsi, rbx
0x55c7:	mov	rdi, rax
0x55ca:	call	0x1eb0


0x55cf:	mov	rbx, qword ptr [rip + 0x21baf2]
0x55d6:	lea	rsi, [rip + 0x15ab3]
0x55dd:	mov	edx, 5
0x55e2:	xor	edi, edi
0x55e4:	call	0x1d80


0x55e9:	mov	rsi, rbx
0x55ec:	mov	rdi, rax
0x55ef:	call	0x1eb0


0x55f4:	mov	rbx, qword ptr [rip + 0x21bacd]
0x55fb:	lea	rsi, [rip + 0x15b1e]
0x5602:	mov	edx, 5
0x5607:	xor	edi, edi
0x5609:	call	0x1d80


0x560e:	mov	rsi, rbx
0x5611:	mov	rdi, rax
0x5614:	call	0x1eb0


0x5619:	mov	rbx, qword ptr [rip + 0x21baa8]
0x5620:	lea	rsi, [rip + 0x15b79]
0x5627:	mov	edx, 5
0x562c:	xor	edi, edi
0x562e:	call	0x1d80


0x5633:	mov	rsi, rbx
0x5636:	mov	rdi, rax
0x5639:	call	0x1eb0


0x563e:	mov	rbx, qword ptr [rip + 0x21ba83]
0x5645:	lea	rsi, [rip + 0x15cb4]
0x564c:	mov	edx, 5
0x5651:	xor	edi, edi
0x5653:	call	0x1d80


0x5658:	mov	rsi, rbx
0x565b:	mov	rdi, rax
0x565e:	call	0x1eb0


0x5663:	mov	rbx, qword ptr [rip + 0x21ba5e]
0x566a:	lea	rsi, [rip + 0x15e37]
0x5671:	mov	edx, 5
0x5676:	xor	edi, edi
0x5678:	call	0x1d80


0x567d:	mov	rsi, rbx
0x5680:	mov	rdi, rax
0x5683:	call	0x1eb0


0x5688:	mov	rbx, qword ptr [rip + 0x21ba39]
0x568f:	lea	rsi, [rip + 0x15ee2]
0x5696:	mov	edx, 5
0x569b:	xor	edi, edi
0x569d:	call	0x1d80


0x56a2:	mov	rsi, rbx
0x56a5:	mov	rdi, rax
0x56a8:	call	0x1eb0


0x56ad:	mov	rbx, qword ptr [rip + 0x21ba14]
0x56b4:	lea	rsi, [rip + 0x15eed]
0x56bb:	mov	edx, 5
0x56c0:	xor	edi, edi
0x56c2:	call	0x1d80


0x56c7:	mov	rsi, rbx
0x56ca:	mov	rdi, rax
0x56cd:	lea	rbx, [rip + 0x16084]
0x56d4:	call	0x1eb0


0x56d9:	lea	rax, [rip + 0x1607c]
0x56e0:	lea	rcx, [rip + 0x160b6]
0x56e7:	mov	qword ptr [rsp + 0x60], 0
0x56f0:	mov	qword ptr [rsp + 0x68], 0
0x56f9:	mov	rdx, rsp
0x56fc:	mov	qword ptr [rsp], rax
0x5700:	lea	rax, [rip + 0x16057]
0x5707:	mov	qword ptr [rsp + 0x30], rcx
0x570c:	lea	rcx, [rip + 0x16094]
0x5713:	mov	qword ptr [rsp + 8], rax
0x5718:	lea	rax, [rip + 0x160b7]
0x571f:	mov	qword ptr [rsp + 0x40], rcx
0x5724:	lea	rcx, [rip + 0x16086]
0x572b:	mov	qword ptr [rsp + 0x10], rax
0x5730:	lea	rax, [rip + 0x16037]
0x5737:	mov	qword ptr [rsp + 0x50], rcx
0x573c:	mov	qword ptr [rsp + 0x18], rax
0x5741:	lea	rax, [rip + 0x1603c]
0x5748:	mov	qword ptr [rsp + 0x20], rax
0x574d:	lea	rax, [rip + 0x1603a]
0x5754:	mov	qword ptr [rsp + 0x28], rax
0x5759:	mov	qword ptr [rsp + 0x38], rax
0x575e:	mov	qword ptr [rsp + 0x48], rax
0x5763:	mov	qword ptr [rsp + 0x58], rax
0x5768:	nop	dword ptr [rax + rax]
0x5770:	add	rdx, 0x10
0x5774:	mov	rdi, qword ptr [rdx]
0x5777:	test	rdi, rdi
0x577a:	je	0x578f


0x578f:	mov	r12, qword ptr [rdx + 8]
0x5793:	xor	edi, edi
0x5795:	mov	edx, 5
0x579a:	lea	rsi, [rip + 0x1601a]
0x57a1:	test	r12, r12
0x57a4:	je	0x586b


0x577c:	mov	ecx, 4
0x5781:	mov	rsi, rbx
0x5784:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x586b:	call	0x1d80


0x57aa:	call	0x1d80


0x5784:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5786:	seta	al
0x5789:	sbb	al, 0
0x578b:	test	al, al
0x578d:	jne	0x5770


0x5770:	add	rdx, 0x10
0x5774:	mov	rdi, qword ptr [rdx]
0x5777:	test	rdi, rdi
0x577a:	je	0x578f


0x57af:	lea	rcx, [rip + 0x15e2a]
0x57b6:	lea	rdx, [rip + 0x16015]
0x57bd:	mov	rsi, rax
0x57c0:	mov	edi, 1
0x57c5:	xor	eax, eax
0x57c7:	call	0x1fb0


0x57cc:	xor	esi, esi
0x57ce:	mov	edi, 5
0x57d3:	call	0x1fa0


0x57d8:	test	rax, rax
0x57db:	je	0x57f9


0x57f9:	lea	rsi, [rip + 0x15fe4]
0x5800:	xor	edi, edi
0x5802:	mov	edx, 5
0x5807:	call	0x1d80


0x57dd:	lea	rsi, [rip + 0x15ffc]
0x57e4:	mov	edx, 3
0x57e9:	mov	rdi, rax
0x57ec:	call	0x1c90


0x57f1:	test	eax, eax
0x57f3:	jne	0x5900


0x5900:	mov	r13, qword ptr [rip + 0x21b7c1]
0x5907:	lea	rsi, [rip + 0x15cfa]
0x590e:	xor	edi, edi
0x5910:	mov	edx, 5
0x5915:	call	0x1d80


0x591a:	mov	rsi, r13
0x591d:	mov	rdi, rax
0x5920:	call	0x1eb0


0x580c:	lea	rcx, [rip + 0x15f45]
0x5813:	lea	rdx, [rip + 0x15dc6]
0x581a:	mov	rsi, rax
0x581d:	mov	edi, 1
0x5822:	xor	eax, eax
0x5824:	call	0x1fb0


0x5829:	cmp	r12, rbx
0x582c:	lea	rcx, [rip + 0x15f45]
0x5833:	lea	rbx, [rip + 0x16a41]
0x583a:	cmove	rbx, rcx
0x583e:	lea	rsi, [rip + 0x15e0b]
0x5845:	xor	edi, edi
0x5847:	mov	edx, 5
0x584c:	call	0x1d80


0x5851:	mov	rcx, rbx
0x5854:	mov	rsi, rax
0x5857:	mov	rdx, r12
0x585a:	mov	edi, 1
0x585f:	xor	eax, eax
0x5861:	call	0x1fb0


0x5866:	jmp	0x5536


0x5870:	lea	rcx, [rip + 0x15d69]
0x5877:	lea	rdx, [rip + 0x15f54]
0x587e:	mov	rsi, rax
0x5881:	mov	edi, 1
0x5886:	xor	eax, eax
0x5888:	call	0x1fb0


0x588d:	xor	esi, esi
0x588f:	mov	edi, 5
0x5894:	call	0x1fa0


0x5899:	test	rax, rax
0x589c:	je	0x58b6


0x58b6:	lea	rsi, [rip + 0x15f27]
0x58bd:	mov	edx, 5
0x58c2:	xor	edi, edi
0x58c4:	lea	r12, [rip + 0x15e8d]
0x58cb:	lea	rbx, [rip + 0x15ea6]
0x58d2:	call	0x1d80


0x589e:	lea	rsi, [rip + 0x15f3b]
0x58a5:	mov	edx, 3
0x58aa:	mov	rdi, rax
0x58ad:	call	0x1c90


0x58b2:	test	eax, eax
0x58b4:	jne	0x58f9


0x58f9:	lea	r12, [rip + 0x15e58]
0x5900:	mov	r13, qword ptr [rip + 0x21b7c1]
0x5907:	lea	rsi, [rip + 0x15cfa]
0x590e:	xor	edi, edi
0x5910:	mov	edx, 5
0x5915:	call	0x1d80


0x58d7:	lea	rcx, [rip + 0x15e7a]
0x58de:	lea	rdx, [rip + 0x15cfb]
0x58e5:	mov	rsi, rax
0x58e8:	mov	edi, 1
0x58ed:	xor	eax, eax
0x58ef:	call	0x1fb0


0x58f4:	jmp	0x583e


0x583e:	lea	rsi, [rip + 0x15e0b]
0x5845:	xor	edi, edi
0x5847:	mov	edx, 5
0x584c:	call	0x1d80


0x5925:	jmp	0x57f9


0x932c:	cmp	r12, 9
0x9330:	ja	0x9670


0x9336:	lea	rdx, [rip + 0x131df]
0x933d:	movsxd	rax, dword ptr [rdx + r12*4]
0x9341:	add	rax, rdx
0x9344:	jmp	rax


0x9670:	mov	r10, qword ptr [rbx + 0x40]
0x9674:	mov	r9, qword ptr [rbx + 0x38]
0x9678:	mov	edx, 5
0x967d:	mov	rax, qword ptr [rbx + 0x10]
0x9681:	mov	r8, qword ptr [rbx + 8]
0x9685:	lea	rsi, [rip + 0x12e0c]
0x968c:	mov	r13, qword ptr [rbx + 0x30]
0x9690:	mov	r12, qword ptr [rbx + 0x28]
0x9694:	mov	r15, qword ptr [rbx + 0x20]
0x9698:	mov	r14, qword ptr [rbx + 0x18]
0x969c:	mov	qword ptr [rsp + 0x18], r10
0x96a1:	mov	qword ptr [rsp + 0x10], r9
0x96a6:	mov	qword ptr [rsp], rax
0x96aa:	mov	qword ptr [rsp + 8], r8
0x96af:	mov	rbx, qword ptr [rbx]
0x96b2:	jmp	0x9442


0x9442:	xor	edi, edi
0x9444:	call	0x1d80


0x9449:	mov	r10, qword ptr [rsp + 0x18]
0x944e:	push	r10
0x9450:	jmp	0x9394


0x9394:	mov	r9, qword ptr [rsp + 0x18]
0x9399:	mov	rdx, rax
0x939c:	mov	rcx, rbx
0x939f:	mov	esi, 1
0x93a4:	mov	rdi, rbp
0x93a7:	xor	eax, eax
0x93a9:	push	r9
0x93ab:	push	r13
0x93ad:	push	r12
0x93af:	push	r15
0x93b1:	push	r14
0x93b3:	mov	r9, qword ptr [rsp + 0x30]
0x93b8:	mov	r8, qword ptr [rsp + 0x38]
0x93bd:	call	0x2090


0x93c2:	add	rsp, 0x30
0x93c6:	add	rsp, 0x28
0x93ca:	pop	rbx
0x93cb:	pop	rbp
0x93cc:	pop	r12
0x93ce:	pop	r13
0x93d0:	pop	r14
0x93d2:	pop	r15
0x93d4:	ret	


0x822d:	mov	dword ptr [rbp], r12d
0x8231:	pop	rbx
0x8232:	pop	rbp
0x8233:	pop	r12
0x8235:	ret	


0x9c2e:	mov	rcx, qword ptr [rbx]
0x9c31:	mov	rbp, rax
0x9c34:	cmp	rcx, r12
0x9c37:	je	0x9c98


0x9c98:	test	r15, r15
0x9c9b:	je	0xa130


0x9c39:	mov	eax, dword ptr [r13]
0x9c3d:	test	eax, eax
0x9c3f:	jne	0x9c80


0xa130:	mov	r12d, 4
0xa136:	jmp	0x9c59


0x9ca1:	movzx	r13d, byte ptr [rcx]
0x9ca5:	mov	qword ptr [rsp + 8], rcx
0x9caa:	mov	r12d, 4
0x9cb0:	test	r13b, r13b
0x9cb3:	je	0x9c59


0x9c41:	xor	r12d, r12d
0x9c44:	test	r15, r15
0x9c47:	je	0x9c56


0x9c80:	cmp	eax, 0x22
0x9c83:	mov	r12d, 4
0x9c89:	jne	0x9c59


0x9c59:	mov	rdi, qword ptr [rsp + 0x18]
0x9c5e:	xor	rdi, qword ptr fs:[0x28]
0x9c67:	mov	eax, r12d
0x9c6a:	jne	0xa27e


0x9cb5:	movsx	esi, r13b
0x9cb9:	mov	rdi, r15
0x9cbc:	call	0x1df0


0x9c56:	mov	qword ptr [r14], rbp
0x9c59:	mov	rdi, qword ptr [rsp + 0x18]
0x9c5e:	xor	rdi, qword ptr fs:[0x28]
0x9c67:	mov	eax, r12d
0x9c6a:	jne	0xa27e


0x9c49:	movzx	r13d, byte ptr [rcx]
0x9c4d:	test	r13b, r13b
0x9c50:	jne	0x9cd3


0x9c8b:	mov	r12d, 1
0x9c91:	jmp	0x9c44


0x9c70:	add	rsp, 0x28
0x9c74:	pop	rbx
0x9c75:	pop	rbp
0x9c76:	pop	r12
0x9c78:	pop	r13
0x9c7a:	pop	r14
0x9c7c:	pop	r15
0x9c7e:	ret	


0xa27e:	call	0x1db0


0x9cd3:	movsx	esi, r13b
0x9cd7:	mov	rdi, r15
0x9cda:	mov	qword ptr [rsp + 8], rcx
0x9cdf:	call	0x1df0


0x9c44:	test	r15, r15
0x9c47:	je	0x9c56


0x9ce4:	test	rax, rax
0x9ce7:	mov	rcx, qword ptr [rsp + 8]
0x9cec:	je	0x9d48


0x9d48:	mov	qword ptr [r14], rbp
0x9d4b:	or	r12d, 2
0x9d4f:	jmp	0x9c59


0x9cee:	lea	eax, [r13 - 0x45]
0x9cf2:	cmp	al, 0x2f
0x9cf4:	ja	0x9d58


0x9cf6:	movabs	rdx, 0x814400308945
0x9d00:	bt	rdx, rax
0x9d04:	jae	0x9d58


0x9d58:	mov	edi, 1
0x9d5d:	mov	eax, 0x400
0x9d62:	sub	r13d, 0x42
0x9d66:	cmp	r13b, 0x35
0x9d6a:	ja	0x9d48


0x9d06:	mov	esi, 0x30
0x9d0b:	mov	rdi, r15
0x9d0e:	mov	qword ptr [rsp + 8], rcx
0x9d13:	call	0x1df0


0x9d6c:	lea	rsi, [rip + 0x12875]
0x9d73:	movzx	r13d, r13b
0x9d77:	movsxd	rdx, dword ptr [rsi + r13*4]
0x9d7b:	add	rdx, rsi
0x9d7e:	jmp	rdx


0x9d18:	test	rax, rax
0x9d1b:	mov	rcx, qword ptr [rsp + 8]
0x9d20:	je	0x9d58


0x9d22:	movzx	eax, byte ptr [rcx + 1]
0x9d26:	cmp	al, 0x44
0x9d28:	je	0x9d36


0x9d36:	mov	edi, 2
0x9d3b:	mov	eax, 0x3e8
0x9d40:	jmp	0x9d62


0x9d2a:	cmp	al, 0x69
0x9d2c:	je	0xa218


0x9d62:	sub	r13d, 0x42
0x9d66:	cmp	r13b, 0x35
0x9d6a:	ja	0x9d48


0xa218:	xor	edi, edi
0xa21a:	cmp	byte ptr [rcx + 2], 0x42
0xa21e:	mov	eax, 0x400
0xa223:	sete	dil
0xa227:	lea	edi, [rdi + rdi + 1]
0xa22b:	jmp	0x9d62


0x9d32:	cmp	al, 0x42
0x9d34:	jne	0x9d58


0x9cc1:	test	rax, rax
0x9cc4:	mov	rcx, qword ptr [rsp + 8]
0x9cc9:	je	0x9c59


0x9ccb:	mov	ebp, 1
0x9cd0:	xor	r12d, r12d
0x9cd3:	movsx	esi, r13b
0x9cd7:	mov	rdi, r15
0x9cda:	mov	qword ptr [rsp + 8], rcx
0x9cdf:	call	0x1df0


0x5f2a:	test	r13b, r13b
0x5f2d:	je	0x5eb8


0x5f5a:	jmp	0x5eae


0x5f36:	jmp	0x5eb8


0x5dbe:	call	0x1c80


0x5dc3:	mov	dword ptr [rax], 9
0x5dc9:	add	rsp, 8
0x5dcd:	mov	eax, ebx
0x5dcf:	pop	rbx
0x5dd0:	pop	rbp
0x5dd1:	ret	


0xa347:	mov	rdi, rbx
0xa34a:	pop	rbx
0xa34b:	jmp	0x1f40


0x6a93:	test	eax, eax
0x6a95:	jne	0x6af1


0x6a97:	test	r15, r15
0x6a9a:	je	0x6aa9


0x6af1:	mov	rsi, r13
0x6af4:	mov	rdi, r14
0x6af7:	call	0x6030


0x6aa9:	test	r12, r12
0x6aac:	je	0x6abb


0x6a9c:	cmp	rbx, r15
0x6a9f:	je	0x6aa9


0x6abb:	add	rsp, 0x18
0x6abf:	mov	rax, rbx
0x6ac2:	pop	rbx
0x6ac3:	pop	rbp
0x6ac4:	pop	r12
0x6ac6:	pop	r13
0x6ac8:	pop	r14
0x6aca:	pop	r15
0x6acc:	ret	


0x6aae:	cmp	rbx, r12
0x6ab1:	je	0x6abb


0x6aa1:	mov	rdi, r15
0x6aa4:	call	0x1c60


0x6ab3:	mov	rdi, r12
0x6ab6:	call	0x1c60


0x6afc:	test	al, al
0x6afe:	jne	0x6b38


0x6b00:	test	rbp, rbp
0x6b03:	je	0x6b14


0x6b38:	test	r15, r15
0x6b3b:	jne	0x6c30


0x6b14:	cmp	qword ptr [rsp + 8], 0
0x6b1a:	je	0x6c90


0x6b05:	mov	rsi, rbp
0x6b08:	mov	rdi, r14
0x6b0b:	call	0x6030


0x6b41:	test	r12, r12
0x6b44:	mov	rbx, r14
0x6b47:	jne	0x6ab3


0x6c30:	mov	rdi, r15
0x6c33:	mov	rbx, r14
0x6c36:	call	0x1c60


0x6c90:	mov	rdi, r14
0x6c93:	call	0x1da0


0x6b20:	mov	rsi, qword ptr [rsp + 8]
0x6b25:	mov	rdi, r14
0x6b28:	call	0x6030


0x6b4d:	jmp	0x6abb


0x6c98:	mov	rdi, rbx
0x6c9b:	mov	rbp, rax
0x6c9e:	call	0x1da0


0x6ca3:	lea	rdi, [rbp + rax + 4]
0x6ca8:	call	0x98c0


0x6cad:	lea	rcx, [rip + 0x15044]
0x6cb4:	mov	rdi, rax
0x6cb7:	mov	rbp, rax
0x6cba:	mov	r9, rbx
0x6cbd:	xor	eax, eax
0x6cbf:	mov	r8, r14
0x6cc2:	mov	rdx, -1
0x6cc9:	mov	esi, 1
0x6cce:	call	0x2100


0x6cd3:	test	r15, r15
0x6cd6:	je	0x6ce0


0x6ce0:	test	r12, r12
0x6ce3:	mov	rbx, rbp
0x6ce6:	jne	0x6ab3


0x6cd8:	mov	rdi, r15
0x6cdb:	call	0x1c60


0x6cec:	jmp	0x6abb


0x6c3b:	test	r12, r12
0x6c3e:	jne	0x6ab3


0x6c44:	jmp	0x6abb


0x6b2d:	test	al, al
0x6b2f:	je	0x6c90


0x6b10:	test	al, al
0x6b12:	jne	0x6b38


0x6c07:	test	eax, eax
0x6c09:	je	0x6abb


0x6c0f:	mov	rsi, r13
0x6c12:	mov	rdi, r14
0x6c15:	call	0x6030


0x6c1a:	test	al, al
0x6c1c:	je	0x6cf8


0x6cf8:	mov	rbp, rbx
0x6cfb:	mov	r15, rbx
0x6cfe:	mov	qword ptr [rsp + 8], 0
0x6d07:	xor	r12d, r12d
0x6d0a:	jmp	0x6b00


0x6c22:	mov	r15, rbx
0x6c25:	xor	r12d, r12d
0x6c28:	nop	dword ptr [rax + rax]
0x6c30:	mov	rdi, r15
0x6c33:	mov	rbx, r14
0x6c36:	call	0x1c60


0x6aed:	test	eax, eax
0x6aef:	je	0x6a97


0xfd1d:	test	eax, eax
0xfd1f:	jne	0xfd9a


0xfd21:	call	0x20e0


0xfd9a:	lea	rsi, [rip + 0xc9d6]
0xfda1:	mov	rdi, r12
0xfda4:	call	0x1ed0


0xfda9:	test	eax, eax
0xfdab:	jne	0xfe24


0xfdad:	call	0x20e0


0xfe24:	lea	rsi, [rip + 0xc952]
0xfe2b:	mov	rdi, r12
0xfe2e:	call	0x1ed0


0xfe33:	test	eax, eax
0xfe35:	jne	0xfeb0


0xfe37:	call	0x20e0


0xfeb0:	mov	eax, 4
0xfeb5:	jmp	0xf836


0xfe3c:	xor	ecx, ecx
0xfe3e:	test	rbp, rbp
0xfe41:	mov	rsi, qword ptr [rax]
0xfe44:	mov	edx, 1
0xfe49:	jne	0xfe75


0xfe4b:	test	byte ptr [rsi + rcx*2 + 1], 0x10
0xfe50:	je	0xfe63


0xfe75:	xor	eax, eax
0xfe77:	mov	edi, 1
0xfe7c:	test	byte ptr [rsi + rax*2 + 1], 0x10
0xfe81:	je	0xfe9f


0xfe63:	add	rcx, 1
0xfe67:	cmp	rcx, 0x100
0xfe6e:	jne	0xfe4b


0xfe52:	mov	rax, rcx
0xfe55:	mov	rdi, rdx
0xfe58:	sar	rax, 6
0xfe5c:	shl	rdi, cl
0xfe5f:	or	qword ptr [rbx + rax*8], rdi
0xfe63:	add	rcx, 1
0xfe67:	cmp	rcx, 0x100
0xfe6e:	jne	0xfe4b


0xfe9f:	add	rax, 1
0xfea3:	cmp	rax, 0x100
0xfea9:	jne	0xfe7c


0xfe83:	movzx	ecx, byte ptr [rbp + rax]
0xfe88:	mov	r9, rdi
0xfe8b:	mov	rdx, rcx
0xfe8e:	and	ecx, 0x3f
0xfe91:	shr	rdx, 3
0xfe95:	shl	r9, cl
0xfe98:	and	edx, 0x18
0xfe9b:	or	qword ptr [rbx + rdx], r9
0xfe9f:	add	rax, 1
0xfea3:	cmp	rax, 0x100
0xfea9:	jne	0xfe7c


0xfe70:	jmp	0xf834


0xfeab:	jmp	0xf834


0xfe7c:	test	byte ptr [rsi + rax*2 + 1], 0x10
0xfe81:	je	0xfe9f


0xfdb2:	xor	ecx, ecx
0xfdb4:	test	rbp, rbp
0xfdb7:	mov	rsi, qword ptr [rax]
0xfdba:	mov	edx, 1
0xfdbf:	jne	0xfdea


0xfdc1:	test	byte ptr [rsi + rcx*2], 4
0xfdc5:	je	0xfdd8


0xfdea:	xor	eax, eax
0xfdec:	mov	edi, 1
0xfdf1:	test	byte ptr [rsi + rax*2], 4
0xfdf5:	je	0xfe13


0xfdd8:	add	rcx, 1
0xfddc:	cmp	rcx, 0x100
0xfde3:	jne	0xfdc1


0xfdc7:	mov	rax, rcx
0xfdca:	mov	rdi, rdx
0xfdcd:	sar	rax, 6
0xfdd1:	shl	rdi, cl
0xfdd4:	or	qword ptr [rbx + rax*8], rdi
0xfdd8:	add	rcx, 1
0xfddc:	cmp	rcx, 0x100
0xfde3:	jne	0xfdc1


0xfe13:	add	rax, 1
0xfe17:	cmp	rax, 0x100
0xfe1d:	jne	0xfdf1


0xfdf7:	movzx	ecx, byte ptr [rbp + rax]
0xfdfc:	mov	r14, rdi
0xfdff:	mov	rdx, rcx
0xfe02:	and	ecx, 0x3f
0xfe05:	shr	rdx, 3
0xfe09:	shl	r14, cl
0xfe0c:	and	edx, 0x18
0xfe0f:	or	qword ptr [rbx + rdx], r14
0xfe13:	add	rax, 1
0xfe17:	cmp	rax, 0x100
0xfe1d:	jne	0xfdf1


0xfde5:	jmp	0xf834


0xfe1f:	jmp	0xf834


0xfdf1:	test	byte ptr [rsi + rax*2], 4
0xfdf5:	je	0xfe13


0xfd26:	xor	ecx, ecx
0xfd28:	test	rbp, rbp
0xfd2b:	mov	rsi, qword ptr [rax]
0xfd2e:	mov	edx, 1
0xfd33:	jne	0xfd5f


0xfd35:	cmp	word ptr [rsi + rcx*2], 0
0xfd3a:	jns	0xfd4d


0xfd5f:	xor	eax, eax
0xfd61:	mov	edi, 1
0xfd66:	cmp	word ptr [rsi + rax*2], 0
0xfd6b:	jns	0xfd89


0xfd3c:	mov	rax, rcx
0xfd3f:	mov	rdi, rdx
0xfd42:	sar	rax, 6
0xfd46:	shl	rdi, cl
0xfd49:	or	qword ptr [rbx + rax*8], rdi
0xfd4d:	add	rcx, 1
0xfd51:	cmp	rcx, 0x100
0xfd58:	jne	0xfd35


0xfd4d:	add	rcx, 1
0xfd51:	cmp	rcx, 0x100
0xfd58:	jne	0xfd35


0xfd6d:	movzx	ecx, byte ptr [rbp + rax]
0xfd72:	mov	r9, rdi
0xfd75:	mov	rdx, rcx
0xfd78:	and	ecx, 0x3f
0xfd7b:	shr	rdx, 3
0xfd7f:	shl	r9, cl
0xfd82:	and	edx, 0x18
0xfd85:	or	qword ptr [rbx + rdx], r9
0xfd89:	add	rax, 1
0xfd8d:	cmp	rax, 0x100
0xfd93:	jne	0xfd66


0xfd89:	add	rax, 1
0xfd8d:	cmp	rax, 0x100
0xfd93:	jne	0xfd66


0xfd5a:	jmp	0xf834


0xfd95:	jmp	0xf834


0xfd66:	cmp	word ptr [rsi + rax*2], 0
0xfd6b:	jns	0xfd89


0x103da:	mov	rdx, qword ptr [rsp + 0x40]
0x103df:	mov	rdi, qword ptr [rsp + 0x38]
0x103e4:	mov	esi, eax
0x103e6:	call	0x1f30


0x103eb:	cmp	rax, -1
0x103ef:	je	0x10297


0x103f5:	movzx	eax, byte ptr [rsp + 0x60]
0x103fa:	mov	byte ptr [rbp + rax], 1
0x103ff:	jmp	0x10297


0x104e3:	mov	rdi, qword ptr [rsp + 0x38]
0x104e8:	mov	rdx, r14
0x104eb:	mov	esi, eax
0x104ed:	call	0x1f30


0x104f2:	cmp	rax, -1
0x104f6:	je	0x1045f


0x104fc:	movzx	eax, byte ptr [rsp + 0x60]
0x10501:	add	rbp, 1
0x10505:	mov	byte ptr [r12 + rax], 1
0x1050a:	cmp	rbp, qword ptr [r15 + 0x28]
0x1050e:	jl	0x1046d


0x9806:	mov	rax, qword ptr [rsp + 0x78]
0x980b:	xor	rax, qword ptr fs:[0x28]
0x9814:	jne	0x9820


0x9816:	add	rsp, 0xb8
0x981d:	pop	rbx
0x981e:	pop	rbp
0x981f:	ret	


0x9820:	call	0x1db0


0x9730:	mov	rax, qword ptr [rsp + 0x58]
0x9735:	xor	rax, qword ptr fs:[0x28]
0x973e:	jne	0x9745


0x9740:	add	rsp, 0x68
0x9744:	ret	


0x9745:	call	0x1db0


0x8bb8:	mov	rbp, rax
0x8bbb:	call	0x1c80


0x8bc0:	mov	rdi, rbx
0x8bc3:	mov	r12, rax
0x8bc6:	mov	r13d, dword ptr [rax]
0x8bc9:	call	0xa290


0x4d85:	test	rax, rax
0x4d88:	mov	qword ptr [rbp], rax
0x4d8c:	je	0x4e1a


0x4e1a:	lea	rbx, [rip + 0x16e71]
0x4e21:	jmp	0x4de6


0x4d92:	add	rax, qword ptr [rsp]
0x4d96:	mov	qword ptr [rbp + 8], rax
0x4d9a:	mov	rax, qword ptr [rsp + 8]
0x4d9f:	xor	rax, qword ptr fs:[0x28]
0x4da8:	jne	0x4e15


0x4de6:	mov	rdx, rbx
0x4de9:	mov	esi, 3
0x4dee:	xor	edi, edi
0x4df0:	call	0x87c0


0x4daa:	add	rsp, 0x18
0x4dae:	pop	rbx
0x4daf:	pop	rbp
0x4db0:	ret	


0x4e15:	call	0x1db0


0x4e5a:	mov	rbp, qword ptr [rsp]
0x4e5e:	mov	rdx, qword ptr [rsp + 8]
0x4e63:	xor	esi, esi
0x4e65:	mov	qword ptr [r12], 0
0x4e6d:	mov	qword ptr [r12 + 8], 0
0x4e76:	xor	edi, edi
0x4e78:	mov	qword ptr [r12 + 0x10], 0
0x4e81:	cmp	rbp, rdx
0x4e84:	jae	0x4eb3


0x4e86:	cmp	byte ptr [rbp], 0xa
0x4e8a:	mov	rbx, rbp
0x4e8d:	jne	0x4e9d


0x4eb3:	lea	rcx, [rip - 0x56a]
0x4eba:	mov	edx, 0x10
0x4ebf:	call	0x1cf0


0x4e8f:	jmp	0x4f11


0x4e9d:	add	rbx, 1
0x4ea1:	cmp	rbx, rdx
0x4ea4:	jne	0x4e98


0x1cf0:	jmp	qword ptr [rip + 0x21f0ba]


0x4f11:	lea	rbp, [rbx + 1]
0x4f15:	jmp	0x4e81


0x4ea6:	cmp	rbp, rdx
0x4ea9:	jb	0x4ee5


0x4e98:	cmp	byte ptr [rbx], 0xa
0x4e9b:	je	0x4ee0




0x4e81:	cmp	rbp, rdx
0x4e84:	jae	0x4eb3


0x4ee5:	cmp	rsi, qword ptr [r12 + 8]
0x4eea:	je	0x4f1a


0x4eab:	mov	rbp, rdx
0x4eae:	cmp	rbp, rdx
0x4eb1:	jb	0x4e86


0x4ee0:	cmp	rbp, rbx
0x4ee3:	jae	0x4f11


0x4f1a:	mov	edx, 0x10
0x4f1f:	mov	rsi, r13
0x4f22:	call	0x9990


0x4eec:	mov	rcx, rsi
0x4eef:	mov	rax, rbx
0x4ef2:	add	rsi, 1
0x4ef6:	shl	rcx, 4
0x4efa:	sub	rax, rbp
0x4efd:	add	rcx, rdi
0x4f00:	cmp	rbx, rdx
0x4f03:	mov	qword ptr [rcx], rbp
0x4f06:	mov	qword ptr [rcx + 8], rax
0x4f0a:	mov	qword ptr [r12 + 0x10], rsi
0x4f0f:	jae	0x4f3a


0x4f3a:	mov	rbp, rbx
0x4f3d:	jmp	0x4e81


0x4ec4:	mov	rax, qword ptr [rsp + 0x18]
0x4ec9:	xor	rax, qword ptr fs:[0x28]
0x4ed2:	jne	0x4f42


0x4ed4:	add	rsp, 0x28
0x4ed8:	pop	rbx
0x4ed9:	pop	rbp
0x4eda:	pop	r12
0x4edc:	pop	r13
0x4ede:	ret	


0x4f42:	call	0x1db0


0x8a84:	add	rbp, rax
0x8a87:	cmp	r14, rax
0x8a8a:	je	0x8a30


0x8a30:	cmp	rbx, -1
0x8a34:	je	0x8b10


0x8a8c:	call	0x1c80


0x8b10:	call	0x1c80


0x8a3a:	mov	rax, rbx
0x8a3d:	mov	rdi, r12
0x8a40:	shr	rax, 1
0x8a43:	mov	rdx, rax
0x8a46:	add	rax, rbx
0x8a49:	not	rdx
0x8a4c:	cmp	rdx, rbx
0x8a4f:	cmovbe	rax, r15
0x8a53:	mov	rsi, rax
0x8a56:	mov	rbx, rax
0x8a59:	call	0x1f90


0x8a5e:	test	rax, rax
0x8a61:	je	0x8af0


0x8af0:	call	0x1c80


0x8a67:	mov	r12, rax
0x8a6a:	mov	r14, rbx
0x8a6d:	lea	rdi, [r12 + rbp]
0x8a71:	mov	rcx, r13
0x8a74:	sub	r14, rbp
0x8a77:	mov	esi, 1
0x8a7c:	mov	rdx, r14
0x8a7f:	call	0x1d00


0x8af5:	mov	r15d, dword ptr [rax]
0x8af8:	mov	r14, rax
0x8afb:	mov	rdi, r12
0x8afe:	xor	r12d, r12d
0x8b01:	call	0x1c60


0x8b06:	mov	dword ptr [r14], r15d
0x8b09:	jmp	0x8ac0


0x8b15:	mov	r15d, 0xc
0x8b1b:	mov	r14, rax
0x8b1e:	mov	rdi, r12
0x8b21:	call	0x1c60


0x8b26:	xor	r12d, r12d
0x8b29:	mov	dword ptr [r14], r15d
0x8b2c:	jmp	0x8ac0


0x8a91:	mov	rdi, r13
0x8a94:	mov	r14, rax
0x8a97:	mov	r15d, dword ptr [rax]
0x8a9a:	call	0x1ce0


0x1ce0:	jmp	qword ptr [rip + 0x21f0c2]




0x8b60:	test	rax, rax
0x8b63:	js	0x8a0a


0x8b69:	mov	rbx, qword ptr [rsp + 0x40]
0x8b6e:	cmp	rbx, rax
0x8b71:	jle	0x8a0a


0x8b77:	sub	rbx, rax
0x8b7a:	add	rbx, 1
0x8b7e:	jmp	0x8a0f


0x8a0f:	mov	rdi, rbx
0x8a12:	call	0x1f20


0x220b:	lea	rdi, [rip + 0x3ace]
0x2212:	call	0x1aed0


0x1dc0:	jmp	qword ptr [rip + 0x21f052]




0xa2b4:	test	eax, eax
0xa2b6:	je	0xa2f4


0xa2b8:	call	0x1c80


0xa2bd:	mov	r12d, dword ptr [rax]
0xa2c0:	mov	rdi, rbx
0xa2c3:	mov	rbp, rax
0xa2c6:	call	0x1d50


0xa2cb:	test	r12d, r12d
0xa2ce:	jne	0xa300


0xa2d0:	pop	rbx
0xa2d1:	pop	rbp
0xa2d2:	pop	r12
0xa2d4:	ret	


0xa300:	mov	dword ptr [rbp], r12d
0xa304:	mov	eax, 0xffffffff
0xa309:	jmp	0xa2d0


0x8bce:	test	eax, eax
0x8bd0:	jne	0x8be0


0x8be0:	test	rbp, rbp
0x8be3:	je	0x8bf1


0x8bf1:	mov	dword ptr [r12], r13d
0x8bf5:	xor	ebp, ebp
0x8bf7:	jmp	0x8bd2


0x8be5:	mov	rdi, rbp
0x8be8:	mov	r13d, dword ptr [r12]
0x8bec:	call	0x1c60


0x186ba:	and	ebx, 0x20
0x186bd:	test	ebx, ebx
0x186bf:	jne	0x186d8


0x186c1:	test	eax, eax
0x186c3:	je	0x186cf


0x186d8:	test	eax, eax
0x186da:	jne	0x186f8


0x186cf:	pop	rbx
0x186d0:	pop	rbp
0x186d1:	pop	r12
0x186d3:	ret	


0x186c5:	test	r12, r12
0x186c8:	mov	eax, 0xffffffff
0x186cd:	je	0x18708


0x186dc:	call	0x1c80


0x186f8:	pop	rbx
0x186f9:	mov	eax, 0xffffffff
0x186fe:	pop	rbp
0x186ff:	pop	r12
0x18701:	ret	


0x18708:	call	0x1c80


0x1870d:	cmp	dword ptr [rax], 9
0x18710:	pop	rbx
0x18711:	pop	rbp
0x18712:	pop	r12
0x18714:	setne	al
0x18717:	movzx	eax, al
0x1871a:	neg	eax
0x1871c:	ret	


0x186e1:	mov	dword ptr [rax], 0
0x186e7:	mov	eax, 0xffffffff
0x186ec:	pop	rbx
0x186ed:	pop	rbp
0x186ee:	pop	r12
0x186f0:	ret	


0x16e84:	mov	rax, qword ptr [rsp + 8]
0x16e89:	mov	qword ptr [rax], 0
0x16e90:	mov	qword ptr [rax + 8], 0
0x16e98:	mov	eax, dword ptr [rsp + 0x4c]
0x16e9c:	mov	rbx, qword ptr [rsp + 0x118]
0x16ea4:	xor	rbx, qword ptr fs:[0x28]
0x16ead:	jne	0x17bf0


0x5cf2:	test	eax, eax
0x5cf4:	je	0x5d0c


0x5d0c:	mov	rdi, qword ptr [rip + 0x21b3ed]
0x5d13:	call	0x186a0


0x5cf6:	call	0x1c80


0x5cfb:	cmp	byte ptr [rip + 0x21bb8e], 0
0x5d02:	mov	rbx, rax
0x5d05:	je	0x5d23


0x5d23:	lea	rsi, [rip + 0x15ced]
0x5d2a:	xor	edi, edi
0x5d2c:	mov	edx, 5
0x5d31:	call	0x1d80


0x5d07:	cmp	dword ptr [rax], 0x20
0x5d0a:	jne	0x5d23


0x5d36:	mov	rdi, qword ptr [rip + 0x21bb5b]
0x5d3d:	mov	rbp, rax
0x5d40:	test	rdi, rdi
0x5d43:	je	0x5d6d


0x5d6d:	mov	esi, dword ptr [rbx]
0x5d6f:	lea	rdx, [rip + 0x15c9e]
0x5d76:	mov	rcx, rax
0x5d79:	xor	edi, edi
0x5d7b:	xor	eax, eax
0x5d7d:	call	0x2000


0x5d45:	call	0x8790


0x5d82:	jmp	0x5d62


0x5d62:	mov	edi, dword ptr [rip + 0x21b2e0]
0x5d68:	call	0x1ca0


0x1ca0:	jmp	qword ptr [rip + 0x21f0e2]




0x5d18:	test	eax, eax
0x5d1a:	jne	0x5d62


0x5d1c:	add	rsp, 8
0x5d20:	pop	rbx
0x5d21:	pop	rbp
0x5d22:	ret	


0x2233:	cmp	eax, -1
0x2236:	je	0x24fd


0x24fd:	mov	eax, dword ptr [rip + 0x21ebd5]
0x2503:	cmp	eax, ebx
0x2505:	je	0x265b


0x223c:	cmp	eax, 0x53
0x223f:	je	0x24ba


0x265b:	mov	edi, 8
0x2660:	call	0x98c0


0x250b:	cmp	byte ptr [rip + 0x21eb0e], 0
0x2512:	je	0x43e9


0x24ba:	mov	rdi, qword ptr [rip + 0x21ec1f]
0x24c1:	call	0x4a30


0x2245:	jle	0x227a


0x43e9:	mov	edi, 8
0x43ee:	mov	dword ptr [rip + 0x21cf20], 1
0x43f8:	call	0x98c0


0x2518:	mov	ecx, ebx
0x251a:	mov	edx, 8
0x251f:	xor	esi, esi
0x2521:	sub	ecx, eax
0x2523:	mov	rax, rdx
0x2526:	mov	dword ptr [rip + 0x21edec], ecx
0x252c:	movsxd	rcx, ecx
0x252f:	mul	rcx
0x2532:	jo	0x45fc


0x227a:	cmp	eax, 0x46
0x227d:	je	0x24e5


0x2247:	cmp	eax, 0x67
0x224a:	je	0x2476


0x45fc:	mov	esi, 1
0x4601:	jmp	0x2538


0x2538:	test	rax, rax
0x253b:	js	0x31e5


0x24e5:	mov	rdi, qword ptr [rip + 0x21ebf4]
0x24ec:	call	0x4a30


0x2283:	jle	0x22d7


0x2476:	mov	rdi, qword ptr [rip + 0x21ec63]
0x247d:	xor	r8d, r8d
0x2480:	xor	edx, edx
0x2482:	xor	esi, esi
0x2484:	mov	rcx, r15
0x2487:	call	0x9bd0


0x2250:	jle	0x22ac


0x31e5:	call	0x9b10


0x2541:	test	rsi, rsi
0x2544:	jne	0x31e5


0x22d7:	cmp	eax, 0xffffff7e
0x22dc:	je	0x45f5


0x2285:	cmp	eax, 0x4d
0x2288:	je	0x24d2


0x22ac:	cmp	eax, 0x57
0x22af:	je	0x244a


0x2252:	cmp	eax, 0x72
0x2255:	je	0x24ae


0x254a:	lea	rdi, [rcx*8]
0x2552:	call	0x98c0


0x45f5:	xor	edi, edi
0x45f7:	call	0x54e0


0x22e2:	jle	0x23fc


0x24d2:	mov	rax, qword ptr [rip + 0x21ec07]
0x24d9:	mov	qword ptr [rip + 0x21eb48], rax
0x24e0:	jmp	0x2220


0x228e:	jle	0x2390


0x244a:	mov	rdi, qword ptr [rip + 0x21ec8f]
0x2451:	call	0x4a30


0x22b5:	jle	0x23ba


0x24ae:	mov	byte ptr [rip + 0x21f3d4], 1
0x24b5:	jmp	0x2220


0x225b:	jg	0x232a


0x23fc:	cmp	eax, 0xffffff7d
0x2401:	jne	0x44e8


0x22e8:	cmp	eax, 0xa
0x22eb:	jne	0x23e7


0x2220:	xor	r8d, r8d
0x2223:	mov	rcx, r13
0x2226:	mov	rdx, r12
0x2229:	mov	rsi, rbp
0x222c:	mov	edi, ebx
0x222e:	call	0x1dc0


0x2390:	cmp	eax, 0x47
0x2393:	jne	0x44e8


0x2294:	cmp	eax, 0x4f
0x2297:	jne	0x23d2


0x23ba:	cmp	eax, 0x54
0x23bd:	jne	0x44e8


0x22bb:	cmp	eax, 0x62
0x22be:	jne	0x23a5


0x2261:	cmp	eax, 0x69
0x2264:	jne	0x2374


0x232a:	cmp	eax, 0x74
0x232d:	je	0x2220


0x2407:	lea	rsi, [rip + 0x19448]
0x240e:	lea	rdi, [rip + 0x19452]
0x2415:	call	0x6a30


0x44e8:	mov	edi, 1
0x44ed:	call	0x54e0


0x22f1:	mov	r9, qword ptr [rip + 0x21ed48]
0x22f8:	mov	rsi, qword ptr [rip + 0x21ede1]
0x22ff:	lea	rdx, [rip + 0x21e57a]
0x2306:	lea	rdi, [rip + 0x19540]
0x230d:	mov	r8d, 4
0x2313:	mov	rcx, r14
0x2316:	call	0x5c00


0x23e7:	cmp	eax, 0x41
0x23ea:	jne	0x44e8


0x2399:	mov	byte ptr [rip + 0x21ec80], 0
0x23a0:	jmp	0x2220


0x229d:	mov	dword ptr [rip + 0x21f5dd], 2
0x22a7:	jmp	0x2220


0x23d2:	cmp	eax, 0x52
0x23d5:	jne	0x44e8


0x23c3:	mov	dword ptr [rip + 0x21f4b7], 3
0x23cd:	jmp	0x2220


0x22c4:	mov	rax, qword ptr [rip + 0x21ee15]
0x22cb:	mov	qword ptr [rip + 0x21f5a6], rax
0x22d2:	jmp	0x2220


0x23a5:	cmp	eax, 0x66
0x23a8:	jne	0x44e8


0x226a:	mov	rax, qword ptr [rip + 0x21ee6f]
0x2271:	mov	qword ptr [rip + 0x21f5f0], rax
0x2278:	jmp	0x2220


0x2374:	cmp	eax, 0x6f
0x2377:	jne	0x44e8


0x2333:	cmp	eax, 0x77
0x2336:	jne	0x44e8


0x23f0:	mov	byte ptr [rip + 0x21f493], 1
0x23f7:	jmp	0x2220


0x23db:	mov	byte ptr [rip + 0x21f4a6], 1
0x23e2:	jmp	0x2220


0x23ae:	mov	byte ptr [rip + 0x21f4cb], 1
0x23b5:	jmp	0x2220


0x237d:	mov	rax, qword ptr [rip + 0x21ed5c]
0x2384:	mov	qword ptr [rip + 0x21f4e5], rax
0x238b:	jmp	0x2220


0x233c:	mov	rdi, qword ptr [rip + 0x21ed9d]
0x2343:	xor	r8d, r8d
0x2346:	xor	edx, edx
0x2348:	xor	esi, esi
0x234a:	mov	rcx, r15
0x234d:	call	0x9bd0


0x231b:	mov	eax, dword ptr [r14 + rax*4]
0x231f:	mov	dword ptr [rip + 0x21f55f], eax
0x2325:	jmp	0x2220


0x241a:	mov	rdi, qword ptr [rip + 0x21eca7]
0x2421:	mov	rcx, qword ptr [rip + 0x21ec10]
0x2428:	lea	rdx, [rip + 0x193a3]
0x242f:	lea	rsi, [rip + 0x19322]
0x2436:	mov	r8, rax
0x2439:	xor	r9d, r9d
0x243c:	xor	eax, eax
0x243e:	call	0x9760


0x2443:	xor	edi, edi
0x2445:	call	0x2070


0x2352:	test	eax, eax
0x2354:	jne	0x463c


0x235a:	mov	rax, qword ptr [rsp + 0x60]
0x235f:	test	rax, rax
0x2362:	jle	0x463c


0x463c:	mov	rdi, qword ptr [rip + 0x21ca9d]
0x4643:	call	0x8990


0x2368:	mov	qword ptr [rip + 0x21eca9], rax
0x236f:	jmp	0x2220


0x248c:	test	eax, eax
0x248e:	jne	0x4606


0x2494:	mov	rax, qword ptr [rsp + 0x60]
0x2499:	test	rax, rax
0x249c:	jle	0x4606


0x4606:	mov	rdi, qword ptr [rip + 0x21cad3]
0x460d:	call	0x8990


0x24a2:	mov	qword ptr [rip + 0x21eb67], rax
0x24a9:	jmp	0x2220


0x2456:	mov	qword ptr [rip + 0x21f163], rax
0x245d:	cmp	byte ptr [rax], 0
0x2460:	jne	0x2220


0x2466:	mov	qword ptr [rip + 0x21f14f], 0
0x2471:	jmp	0x2220


0x24f1:	mov	qword ptr [rip + 0x21eb38], rax
0x24f8:	jmp	0x2220


0x24c6:	mov	qword ptr [rip + 0x21f253], rax
0x24cd:	jmp	0x2220


0x2557:	movsxd	rcx, dword ptr [rip + 0x21edba]
0x255e:	mov	edx, 8
0x2563:	mov	qword ptr [rip + 0x21ed9e], rax
0x256a:	mov	rax, rdx
0x256d:	xor	esi, esi
0x256f:	mul	rcx
0x2572:	jo	0x454c


0x454c:	mov	esi, 1
0x4551:	jmp	0x2578


0x2578:	test	rax, rax
0x257b:	js	0x31e5


0x2581:	test	rsi, rsi
0x2584:	jne	0x31e5


0x258a:	lea	rdi, [rcx*8]
0x2592:	call	0x98c0


0x2597:	movsxd	rcx, dword ptr [rip + 0x21ed7a]
0x259e:	mov	edx, 0x10
0x25a3:	mov	qword ptr [rip + 0x21ed56], rax
0x25aa:	mov	rax, rdx
0x25ad:	xor	esi, esi
0x25af:	mul	rcx
0x25b2:	jo	0x4542


0x4542:	mov	esi, 1
0x4547:	jmp	0x25b8


0x25b8:	test	rax, rax
0x25bb:	js	0x31e5


0x25c1:	test	rsi, rsi
0x25c4:	jne	0x31e5


0x25ca:	mov	rdi, rcx
0x25cd:	shl	rdi, 4
0x25d1:	call	0x98c0


0x25d6:	mov	edx, dword ptr [rip + 0x21ed3c]
0x25dc:	mov	qword ptr [rip + 0x21ed15], rax
0x25e3:	test	edx, edx
0x25e5:	jle	0x26a6


0x26a6:	cmp	dword ptr [rip + 0x21f1d7], 0
0x26ad:	jne	0x26c3


0x25eb:	mov	eax, dword ptr [rip + 0x21eae7]
0x25f1:	lea	r13d, [rdx - 1]
0x25f5:	lea	ebx, [rax + 1]
0x25f8:	movsxd	rdx, eax
0x25fb:	movsxd	rbx, ebx
0x25fe:	imul	rax, rbx, -8
0x2602:	lea	r12, [rbx + 1]
0x2606:	add	r13, r12
0x2609:	lea	r14, [rax + rdx*8]
0x260d:	add	rax, qword ptr [rip + 0x21ecf4]
0x2614:	add	r14, rbp
0x2617:	mov	rbp, rax
0x261a:	jmp	0x2646


0x26af:	cmp	byte ptr [rip + 0x21e96a], 1
0x26b6:	sbb	eax, eax
0x26b8:	not	eax
0x26ba:	add	eax, 2
0x26bd:	mov	dword ptr [rip + 0x21f1c1], eax
0x26c3:	cmp	byte ptr [rip + 0x21f1b6], 0
0x26ca:	je	0x26fb


0x26c3:	cmp	byte ptr [rip + 0x21f1b6], 0
0x26ca:	je	0x26fb


0x2646:	mov	r15, qword ptr [r14 + rbx*8]
0x264a:	cmp	byte ptr [r15], 0
0x264e:	jne	0x261c


0x26fb:	mov	rax, qword ptr [rip + 0x21f01e]
0x2702:	test	rax, rax
0x2705:	je	0x4505


0x26cc:	call	0x1c50


0x2650:	mov	qword ptr [rbp + rbx*8], 0
0x2659:	jmp	0x2634


0x261c:	lea	rsi, [rip + 0x1966f]
0x2623:	mov	rdi, r15
0x2626:	call	0x1ed0


0x4505:	cmp	byte ptr [rip + 0x21cb14], 0
0x450c:	je	0x452f


0x270b:	cmp	byte ptr [rax], 0
0x270e:	je	0x3392


0x2634:	cmp	r13, r12
0x2637:	mov	dword ptr [rip + 0x21ea9b], ebx
0x263d:	mov	rbx, r12
0x2640:	je	0x26a6


0x452f:	lea	rax, [rip + 0x17d44]
0x4536:	mov	qword ptr [rip + 0x21d1e3], rax
0x453d:	jmp	0x2714


0x450e:	cmp	byte ptr [rip + 0x21d374], 0
0x4515:	jne	0x452f


0x3392:	mov	qword ptr [rip + 0x21e383], 0
0x339d:	jmp	0x2720


0x2714:	lea	rdi, [rip + 0x21f005]
0x271b:	call	0x4cb0


0x2642:	add	r12, 1
0x2646:	mov	r15, qword ptr [r14 + rbx*8]
0x264a:	cmp	byte ptr [r15], 0
0x264e:	jne	0x261c


0x4517:	lea	rax, [rip + 0x1716a]
0x451e:	mov	qword ptr [rip + 0x21d1fb], rax
0x4525:	jmp	0x2714


0x2720:	cmp	qword ptr [rip + 0x21ee98], 0
0x2728:	jne	0x3226


0x272e:	mov	rdi, qword ptr [rip + 0x21f143]
0x2735:	test	rdi, rdi
0x2738:	je	0x3350


0x3226:	lea	rdi, [rip + 0x21e393]
0x322d:	call	0x4cb0


0x3350:	cmp	byte ptr [rip + 0x21dcc9], 0
0x3357:	je	0x4556


0x273e:	lea	rsi, [rsp + 0x60]
0x2743:	call	0x4d50


0x4556:	lea	rdx, [rip + 0x21ce23]
0x455d:	mov	ecx, 0x20
0x4562:	movabs	rax, 0x101010101010101
0x456c:	mov	rdi, rdx
0x456f:	rep stosq	qword ptr [rdi], rax


0x335d:	call	0x20e0


0x456f:	rep stosq	qword ptr [rdi], rax


0x4572:	mov	byte ptr [rip + 0x21ce27], 0
0x4579:	mov	word ptr [rip + 0x21ce07], 0
0x4582:	jmp	0x27a4


0x27a4:	mov	rdi, qword ptr [rip + 0x21f0bd]
0x27ab:	test	rdi, rdi
0x27ae:	je	0x27ca


0x27ca:	mov	rdi, qword ptr [rip + 0x21f09f]
0x27d1:	test	rdi, rdi
0x27d4:	je	0x27f0


0x27b0:	lea	rsi, [rip + 0x21eb89]
0x27b7:	call	0x4e30


0x27f0:	cmp	dword ptr [rip + 0x21eb21], 0
0x27f7:	mov	qword ptr [rip + 0x21eade], 0
0x2802:	mov	qword ptr [rip + 0x21eb03], 0
0x280d:	mov	qword ptr [rip + 0x21eb48], 0
0x2818:	mov	qword ptr [rip + 0x21eb35], 0
0x2823:	jle	0x2bdd


0x27d6:	lea	rsi, [rip + 0x21eb43]
0x27dd:	call	0x4e30


0x2bdd:	cmp	byte ptr [rip + 0x21eca6], 0
0x2be4:	jne	0x325d


0x2829:	lea	r15, [rip + 0x21eb50]
0x2830:	mov	qword ptr [rsp + 0x58], 0
0x2839:	mov	dword ptr [rsp + 0x38], 0
0x2841:	mov	rdi, qword ptr [rsp + 0x58]
0x2846:	mov	rax, qword ptr [rip + 0x21eabb]
0x284d:	mov	rsi, qword ptr [rip + 0x21eaa4]
0x2854:	lea	rbx, [rdi + rdi]
0x2858:	mov	rdi, qword ptr [rax + rdi]
0x285c:	add	rsi, rbx
0x285f:	call	0x4d50


0x2bea:	cmp	byte ptr [rip + 0x21ec98], 0
0x2bf1:	je	0x2c11


0x325d:	mov	qword ptr [rip + 0x21e0f0], 0
0x3268:	xor	r13d, r13d
0x326b:	lea	r12, [rsp + 0x70]
0x3270:	lea	rbp, [rip + 0x18629]
0x3277:	or	rbx, 0xffffffffffffffff
0x327b:	jmp	0x32f0


0x2c11:	cmp	qword ptr [rip + 0x21e3ff], 0
0x2c19:	jns	0x2c26


0x2bf3:	cmp	byte ptr [rip + 0x21ec8e], 0
0x2bfa:	jne	0x2c11


0x32f0:	movsxd	rax, dword ptr [rip + 0x21e021]
0x32f7:	cmp	r13, rax
0x32fa:	jb	0x327d


0x2c1b:	mov	qword ptr [rip + 0x21e3f2], 0
0x2c26:	mov	rax, qword ptr [rip + 0x21e3eb]
0x2c2d:	mov	ecx, 2
0x2c32:	mov	rdi, qword ptr [rip + 0x21e3f7]
0x2c39:	cqo	
0x2c3b:	idiv	rcx
0x2c3e:	mov	rdx, rax
0x2c41:	sub	rdx, qword ptr [rip + 0x21e3c8]
0x2c48:	test	rdi, rdi
0x2c4b:	mov	rsi, rax
0x2c4e:	mov	qword ptr [rip + 0x21e573], rax
0x2c55:	mov	qword ptr [rip + 0x21e55c], rax
0x2c5c:	mov	qword ptr [rip + 0x21e55d], rdx
0x2c63:	je	0x43d1


0x2c26:	mov	rax, qword ptr [rip + 0x21e3eb]
0x2c2d:	mov	ecx, 2
0x2c32:	mov	rdi, qword ptr [rip + 0x21e3f7]
0x2c39:	cqo	
0x2c3b:	idiv	rcx
0x2c3e:	mov	rdx, rax
0x2c41:	sub	rdx, qword ptr [rip + 0x21e3c8]
0x2c48:	test	rdi, rdi
0x2c4b:	mov	rsi, rax
0x2c4e:	mov	qword ptr [rip + 0x21e573], rax
0x2c55:	mov	qword ptr [rip + 0x21e55c], rax
0x2c5c:	mov	qword ptr [rip + 0x21e55d], rdx
0x2c63:	je	0x43d1


0x2bfc:	mov	rax, qword ptr [rip + 0x21e40d]
0x2c03:	add	rax, qword ptr [rip + 0x21e74e]
0x2c0a:	sub	qword ptr [rip + 0x21e407], rax
0x2c11:	cmp	qword ptr [rip + 0x21e3ff], 0
0x2c19:	jns	0x2c26


0x327d:	mov	rax, qword ptr [rip + 0x21e07c]
0x3284:	test	r13, r13
0x3287:	lea	r14, [r13*8]
0x328f:	mov	rsi, qword ptr [rax + r13*8]
0x3293:	lea	r8, [rsi + 1]
0x3297:	je	0x329e


0x32fc:	mov	rax, qword ptr [rip + 0x21e055]
0x3303:	lea	rdx, [rax + 1]
0x3307:	lea	rdi, [rax + 2]
0x330b:	mov	qword ptr [rip + 0x21e046], rdx
0x3312:	call	0x98c0


0x43d1:	mov	qword ptr [rip + 0x21cc54], 0
0x43dc:	jmp	0x2c8b


0x2c69:	cmp	byte ptr [rdi], 0
0x2c6c:	je	0x43d1


0x329e:	mov	edx, 0x15
0x32a3:	mov	rdi, r12
0x32a6:	xor	eax, eax
0x32a8:	mov	rcx, rbp
0x32ab:	mov	esi, 1
0x32b0:	call	0x2100


0x3299:	sub	r8, qword ptr [rax + r14 - 8]
0x329e:	mov	edx, 0x15
0x32a3:	mov	rdi, r12
0x32a6:	xor	eax, eax
0x32a8:	mov	rcx, rbp
0x32ab:	mov	esi, 1
0x32b0:	call	0x2100


0x2c8b:	mov	rax, qword ptr [rip + 0x21e51e]
0x2c92:	add	rax, rax
0x2c95:	cmp	byte ptr [rip + 0x21e384], 0
0x2c9c:	je	0x43c8


0x2c72:	xor	eax, eax
0x2c74:	or	rcx, 0xffffffffffffffff
0x2c78:	repne scasb	al, byte ptr [rdi]


0x43c8:	add	rax, 1
0x43cc:	jmp	0x2cb5


0x2ca2:	sub	rdx, rax
0x2ca5:	test	rdx, rdx
0x2ca8:	mov	qword ptr [rip + 0x21e511], rdx
0x2caf:	js	0x4744


0x2c78:	repne scasb	al, byte ptr [rdi]


0x2c7a:	mov	rax, rcx
0x2c7d:	not	rax
0x2c80:	sub	rax, 1
0x2c84:	mov	qword ptr [rip + 0x21e525], rax
0x2c8b:	mov	rax, qword ptr [rip + 0x21e51e]
0x2c92:	add	rax, rax
0x2c95:	cmp	byte ptr [rip + 0x21e384], 0
0x2c9c:	je	0x43c8


0x2cb5:	sub	rsi, rax
0x2cb8:	mov	qword ptr [rip + 0x21e4f9], rsi
0x2cbf:	call	0x20e0


0x4744:	mov	qword ptr [rip + 0x21ca71], 0
0x474f:	jmp	0x2cb5


0x32b5:	mov	edx, eax
0x32b7:	mov	rax, qword ptr [rip + 0x21e04a]
0x32be:	mov	rdi, qword ptr [rax + r14]
0x32c2:	movsxd	rax, edx
0x32c5:	test	rdi, rdi
0x32c8:	je	0x32dc


0x32dc:	cmp	qword ptr [rip + 0x21e075], rax
0x32e3:	jge	0x32ec


0x32ca:	xor	eax, eax
0x32cc:	mov	rcx, rbx
0x32cf:	repne scasb	al, byte ptr [rdi]


0x32e5:	mov	qword ptr [rip + 0x21e06c], rax
0x32ec:	add	r13, 1
0x32f0:	movsxd	rax, dword ptr [rip + 0x21e021]
0x32f7:	cmp	r13, rax
0x32fa:	jb	0x327d


0x32ec:	add	r13, 1
0x32f0:	movsxd	rax, dword ptr [rip + 0x21e021]
0x32f7:	cmp	r13, rax
0x32fa:	jb	0x327d


0x32d1:	movsxd	rax, edx
0x32d4:	not	rcx
0x32d7:	lea	rax, [rcx + rax - 1]
0x32dc:	cmp	qword ptr [rip + 0x21e075], rax
0x32e3:	jge	0x32ec


0x32cf:	repne scasb	al, byte ptr [rdi]


0x27e2:	cmp	qword ptr [rip + 0x21eb46], 0
0x27ea:	je	0x3330


0x3330:	mov	qword ptr [rip + 0x21e535], 0
0x333b:	jmp	0x27f0


0x27bc:	cmp	qword ptr [rip + 0x21eb8c], 0
0x27c4:	je	0x3340


0x3340:	mov	qword ptr [rip + 0x21e51d], 0
0x334b:	jmp	0x27ca


0x2cc4:	mov	rsi, qword ptr [rax]
0x2cc7:	lea	rcx, [rip + 0x21e512]
0x2cce:	mov	qword ptr [rsp], rax
0x2cd2:	xor	edx, edx
0x2cd4:	nop	dword ptr [rax]
0x2cd8:	movzx	eax, word ptr [rsi + rdx*2]
0x2cdc:	shr	ax, 0xd
0x2ce0:	and	eax, 1
0x2ce3:	mov	byte ptr [rcx + rdx], al
0x2ce6:	add	rdx, 1
0x2cea:	cmp	rdx, 0x100
0x2cf1:	jne	0x2cd8


0x2cf3:	mov	eax, dword ptr [rip + 0x21eb8b]
0x2cf9:	mov	byte ptr [rip + 0x21e4ec], 1
0x2d00:	cmp	eax, 2
0x2d03:	je	0x43bc


0x2cd8:	movzx	eax, word ptr [rsi + rdx*2]
0x2cdc:	shr	ax, 0xd
0x2ce0:	and	eax, 1
0x2ce3:	mov	byte ptr [rcx + rdx], al
0x2ce6:	add	rdx, 1
0x2cea:	cmp	rdx, 0x100
0x2cf1:	jne	0x2cd8


0x43bc:	mov	byte ptr [rip + 0x21ce3f], 1
0x43c3:	jmp	0x2d49


0x2d09:	cmp	eax, 3
0x2d0c:	jne	0x2d49


0x2d49:	cmp	qword ptr [rip + 0x21e58f], 0
0x2d51:	mov	qword ptr [rip + 0x21e444], 0
0x2d5c:	mov	qword ptr [rip + 0x21e441], 0
0x2d67:	mov	byte ptr [rip + 0x21e422], 0
0x2d6e:	mov	qword ptr [rip + 0x21e3c7], 0
0x2d79:	mov	qword ptr [rip + 0x21e3c4], 0
0x2d84:	mov	byte ptr [rip + 0x21e3a5], 0
0x2d8b:	mov	r12, qword ptr [rip + 0x21e55e]
0x2d92:	jle	0x3c39


0x2d0e:	lea	rdx, [rip + 0x18aea]
0x2d15:	mov	eax, 0x24
0x2d1a:	add	rdx, 1
0x2d1e:	mov	byte ptr [rcx + rax], 1
0x2d22:	movzx	eax, byte ptr [rdx]
0x2d25:	test	al, al
0x2d27:	jne	0x2d1a


0x3c39:	xor	eax, eax
0x3c3b:	mov	rsi, qword ptr [rsp + 0x88]
0x3c43:	xor	rsi, qword ptr fs:[0x28]
0x3c4c:	jne	0x473f


0x2d98:	mov	qword ptr [rsp + 0x10], 0
0x2da1:	mov	rdx, qword ptr [r12]
0x2da5:	mov	rcx, qword ptr [r12 + 0x10]
0x2daa:	lea	rax, [rip + 0x21e3af]
0x2db1:	mov	rbx, qword ptr [r12 + 8]
0x2db6:	mov	rbp, qword ptr [r12 + 0x18]
0x2dbb:	mov	qword ptr [rax], rdx
0x2dbe:	lea	rax, [rdx + rcx]
0x2dc2:	add	rbx, rdx
0x2dc5:	add	rbp, rdx
0x2dc8:	mov	qword ptr [rsp + 0x18], rax
0x2dcd:	movsxd	rax, dword ptr [r12 + 0x28]
0x2dd2:	mov	qword ptr [rip + 0x21e38f], rbx
0x2dd9:	shl	rax, 4
0x2ddd:	add	rax, qword ptr [rip + 0x21e514]
0x2de4:	mov	r13, qword ptr [rax]
0x2de7:	mov	r14, qword ptr [rax + 8]
0x2deb:	mov	rax, qword ptr [rip + 0x21e3c6]
0x2df2:	add	rdx, rax
0x2df5:	cmp	rbx, rbp
0x2df8:	jae	0x33f5


0x2d29:	lea	rdx, [rip + 0x18d10]
0x2d30:	mov	eax, 0x80
0x2d35:	cmp	byte ptr [rdx + rax], 0
0x2d39:	setne	byte ptr [rcx + rax]
0x2d3d:	add	rax, 1
0x2d41:	cmp	rax, 0x100
0x2d47:	jne	0x2d35


0x2d1a:	add	rdx, 1
0x2d1e:	mov	byte ptr [rcx + rax], 1
0x2d22:	movzx	eax, byte ptr [rdx]
0x2d25:	test	al, al
0x2d27:	jne	0x2d1a


0x3c52:	add	rsp, 0x98
0x3c59:	pop	rbx
0x3c5a:	pop	rbp
0x3c5b:	pop	r12
0x3c5d:	pop	r13
0x3c5f:	pop	r14
0x3c61:	pop	r15
0x3c63:	ret	


0x473f:	call	0x1db0


0x2dfe:	cmp	rbx, rdx
0x2e01:	jbe	0x2e6a


0x33f5:	lea	rsi, [rip + 0x21dd64]
0x33fc:	mov	rsi, qword ptr [rsi]
0x33ff:	add	rax, rsi
0x3402:	cmp	rbx, rax
0x3405:	ja	0x340e


0x2d35:	cmp	byte ptr [rdx + rax], 0
0x2d39:	setne	byte ptr [rcx + rax]
0x2d3d:	add	rax, 1
0x2d41:	cmp	rax, 0x100
0x2d47:	jne	0x2d35


0x2e6a:	lea	rsi, [rip + 0x21e74f]
0x2e71:	mov	qword ptr [rip + 0x21e2f0], rbx
0x2e78:	cmp	qword ptr [rsi], 0
0x2e7c:	jne	0x2e10


0x2e03:	jmp	0x3d58


0x3407:	mov	qword ptr [rip + 0x21dd5a], rbx
0x340e:	xor	edi, edi
0x3410:	cmp	qword ptr [rip + 0x21dc18], 0
0x3418:	mov	rdx, qword ptr [rip + 0x21dd49]
0x341f:	mov	rax, rdx
0x3422:	je	0x342d


0x340e:	xor	edi, edi
0x3410:	cmp	qword ptr [rip + 0x21dc18], 0
0x3418:	mov	rdx, qword ptr [rip + 0x21dd49]
0x341f:	mov	rax, rdx
0x3422:	je	0x342d


0x2e7e:	movzx	edx, byte ptr [rbx]
0x2e81:	lea	rsi, [rip + 0x21e4f8]
0x2e88:	cmp	byte ptr [rsi + rdx], 0
0x2e8c:	jne	0x33c0


0x2e10:	mov	rdx, rbp
0x2e13:	lea	rdi, [rip + 0x21e7ae]
0x2e1a:	xor	r8d, r8d
0x2e1d:	sub	rdx, rbx
0x2e20:	xor	ecx, ecx
0x2e22:	mov	rsi, rbx
0x2e25:	call	0x18580


0x3d58:	lea	rax, [rip + 0x21d401]
0x3d5f:	mov	rsi, qword ptr [rax]
0x3d62:	jmp	0x340e


0x342d:	mov	byte ptr [rip + 0x21dd1c], dil
0x3434:	and	byte ptr [rip + 0x21dd15], 1
0x343b:	cmp	rsi, rdx
0x343e:	jae	0x3472


0x3424:	xor	edi, edi
0x3426:	cmp	rbp, rdx
0x3429:	seta	dil
0x342d:	mov	byte ptr [rip + 0x21dd1c], dil
0x3434:	and	byte ptr [rip + 0x21dd15], 1
0x343b:	cmp	rsi, rdx
0x343e:	jae	0x3472


0x2e92:	add	rbx, 1
0x2e96:	jmp	0x2e4b


0x33c0:	cmp	rbp, rbx
0x33c3:	ja	0x33e4


0x3440:	mov	rdi, qword ptr [rsp]
0x3444:	mov	r8, qword ptr [rdi]
0x3447:	xor	edi, edi
0x3449:	jmp	0x345d


0x3472:	mov	rdx, qword ptr [rip + 0x21dee7]
0x3479:	add	rdx, qword ptr [rip + 0x21dd48]
0x3480:	mov	rax, rcx
0x3483:	neg	rax
0x3486:	cmp	rax, rdx
0x3489:	jle	0x3d4a


0x2e4b:	cmp	rbp, rbx
0x2e4e:	jbe	0x33f0


0x33c5:	jmp	0x33f0


0x33e4:	add	rbx, 1
0x33e8:	cmp	rbp, rbx
0x33eb:	jne	0x33d0


0x345d:	movzx	edx, byte ptr [rax - 1]
0x3461:	test	byte ptr [r8 + rdx*2 + 1], 0x20
0x3467:	jne	0x344b


0x3d4a:	lea	rbx, [rsi + rcx]
0x3d4e:	jmp	0x34cf


0x348f:	lea	rax, [rip + 0x21e12a]
0x3496:	mov	rbx, rsi
0x3499:	sub	rbx, rdx
0x349c:	cmp	qword ptr [rax], 0
0x34a0:	je	0x41ca


0x33f0:	mov	rcx, qword ptr [r12 + 0x10]
0x33f5:	lea	rsi, [rip + 0x21dd64]
0x33fc:	mov	rsi, qword ptr [rsi]
0x33ff:	add	rax, rsi
0x3402:	cmp	rbx, rax
0x3405:	ja	0x340e


0x2e54:	lea	rsi, [rip + 0x21e305]
0x2e5b:	mov	rdx, qword ptr [rsi]
0x2e5e:	add	rdx, rax
0x2e61:	cmp	rbx, rdx
0x2e64:	ja	0x3d53


0x33ed:	mov	rbx, rbp
0x33f0:	mov	rcx, qword ptr [r12 + 0x10]
0x33f5:	lea	rsi, [rip + 0x21dd64]
0x33fc:	mov	rsi, qword ptr [rsi]
0x33ff:	add	rax, rsi
0x3402:	cmp	rbx, rax
0x3405:	ja	0x340e


0x33d0:	movzx	edx, byte ptr [rbx]
0x33d3:	lea	rsi, [rip + 0x21dfa6]
0x33da:	cmp	byte ptr [rsi + rdx], 0
0x33de:	je	0x2e54


0x3469:	test	dil, dil
0x346c:	jne	0x47fa


0x344b:	sub	rax, 1
0x344f:	mov	edi, 1
0x3454:	cmp	rax, rsi
0x3457:	je	0x4815


0x34cf:	lea	rax, [rip + 0x21dc8a]
0x34d6:	lea	r15, [rip + 0x21dca3]
0x34dd:	mov	qword ptr [rip + 0x21dc9c], rbx
0x34e4:	mov	rax, qword ptr [rax]
0x34e7:	cmp	rbx, rax
0x34ea:	mov	qword ptr [rip + 0x21dc97], rax
0x34f1:	jae	0x3523


0x41ca:	movzx	eax, byte ptr [rbx]
0x41cd:	lea	rdi, [rip + 0x21d1ac]
0x41d4:	cmp	byte ptr [rdi + rax], 0
0x41d8:	je	0x4365


0x34a6:	lea	rdi, [rax + 8]
0x34aa:	xor	r8d, r8d
0x34ad:	xor	ecx, ecx
0x34af:	mov	rsi, rbx
0x34b2:	call	0x18580


0x3d53:	mov	rcx, qword ptr [r12 + 0x10]
0x3d58:	lea	rax, [rip + 0x21d401]
0x3d5f:	mov	rsi, qword ptr [rax]
0x3d62:	jmp	0x340e


0x47fa:	mov	qword ptr [rip + 0x21c967], rax
0x4801:	jmp	0x3472


0x4815:	mov	qword ptr [rip + 0x21c94c], rsi
0x481c:	jmp	0x3472


0x34f3:	mov	rsi, qword ptr [rsp]
0x34f7:	xor	ecx, ecx
0x34f9:	mov	rsi, qword ptr [rsi]
0x34fc:	jmp	0x3510


0x3523:	mov	rcx, qword ptr [rip + 0x21dc96]
0x352a:	mov	rdx, qword ptr [rip + 0x21dc57]
0x3531:	mov	rsi, rbx
0x3534:	lea	rax, [rbx + rcx]
0x3538:	cmp	rdx, rax
0x353b:	jbe	0x3596


0x4365:	add	rbx, 1
0x4369:	jmp	0x34cf


0x41de:	cmp	rbx, rsi
0x41e1:	jb	0x41fc


0x3510:	movzx	edx, byte ptr [rax - 1]
0x3514:	test	byte ptr [rsi + rdx*2 + 1], 0x20
0x3519:	jne	0x34fe


0x3596:	cmp	qword ptr [rip + 0x21da92], 0
0x359e:	je	0x3dbb


0x353d:	lea	rdi, [rip + 0x21e07c]
0x3544:	cmp	qword ptr [rdi], 0
0x3548:	je	0x3723


0x41fc:	add	rbx, 1
0x4200:	cmp	rbx, rsi
0x4203:	jne	0x41e8


0x41e3:	jmp	0x34cf


0x351b:	test	cl, cl
0x351d:	jne	0x4703


0x34fe:	sub	rax, 1
0x3502:	mov	ecx, 1
0x3507:	cmp	rbx, rax
0x350a:	je	0x47ee


0x3dbb:	mov	byte ptr [rip + 0x21d3ae], 0
0x3dc2:	jmp	0x35de


0x35a4:	cmp	r13, rsi
0x35a7:	jae	0x43e1


0x3723:	movzx	edi, byte ptr [rsi]
0x3726:	lea	r11, [rip + 0x21dc53]
0x372d:	cmp	byte ptr [r11 + rdi], 0
0x3732:	jne	0x3744


0x354e:	sub	rdx, rsi
0x3551:	xor	r8d, r8d
0x3554:	xor	ecx, ecx
0x3556:	add	rdi, 8
0x355a:	call	0x18580


0x4205:	jmp	0x34cf


0x41e8:	movzx	eax, byte ptr [rbx]
0x41eb:	lea	rdi, [rip + 0x21d18e]
0x41f2:	cmp	byte ptr [rdi + rax], 0
0x41f6:	je	0x34cf


0x4703:	mov	qword ptr [rip + 0x21ca7e], rax
0x470a:	jmp	0x3523


0x47ee:	mov	qword ptr [rip + 0x21c993], rbx
0x47f5:	jmp	0x3523


0x35de:	cmp	r14, rsi
0x35e1:	jbe	0x3614


0x35ad:	mov	rax, qword ptr [rsp]
0x35b1:	mov	r8, qword ptr [rax]
0x35b4:	mov	rax, rsi
0x35b7:	jmp	0x35c6


0x43e1:	mov	rax, rsi
0x43e4:	jmp	0x35d2


0x3734:	add	rsi, 1
0x3738:	mov	qword ptr [r15], rsi
0x373b:	lea	rax, [rsi + rcx]
0x373f:	jmp	0x3538


0x3744:	cmp	rsi, rdx
0x3747:	jae	0x3538


0x3614:	sub	rdx, rsi
0x3617:	sub	rcx, rdx
0x361a:	sub	rcx, qword ptr [rip + 0x21d9ef]
0x3621:	test	rcx, rcx
0x3624:	mov	r10, rcx
0x3627:	jle	0x3d73


0x35e3:	mov	rax, qword ptr [rsp]
0x35e7:	xor	edi, edi
0x35e9:	mov	r8, qword ptr [rax]
0x35ec:	jmp	0x3600


0x35c6:	movzx	edi, byte ptr [rax - 1]
0x35ca:	test	byte ptr [r8 + rdi*2 + 1], 0x20
0x35d0:	jne	0x35b9


0x35d2:	cmp	qword ptr [rsp + 0x18], rax
0x35d7:	setb	byte ptr [rip + 0x21db92]
0x35de:	cmp	r14, rsi
0x35e1:	jbe	0x3614


0x3538:	cmp	rdx, rax
0x353b:	jbe	0x3596


0x374d:	lea	rax, [rsi + 1]
0x3751:	jmp	0x3771


0x3d73:	mov	qword ptr [rip + 0x21d422], 0
0x3d7e:	mov	qword ptr [rip + 0x21d41f], 0
0x3d89:	mov	byte ptr [rip + 0x21d400], 0
0x3d90:	mov	rdx, qword ptr [rip + 0x21d3d1]
0x3d97:	jmp	0x3846


0x362d:	mov	rdx, qword ptr [rip + 0x21db34]
0x3634:	lea	r11, [rip + 0x21db65]
0x363b:	cmp	r14, rdx
0x363e:	mov	r9, rdx
0x3641:	mov	qword ptr [rip + 0x21db58], rdx
0x3648:	jbe	0x367a


0x3600:	movzx	eax, byte ptr [rsi]
0x3603:	test	byte ptr [r8 + rax*2 + 1], 0x20
0x3609:	jne	0x35ee


0x35b9:	sub	rax, 1
0x35bd:	cmp	r13, rax
0x35c0:	je	0x3dc7


0x3771:	cmp	rdx, rax
0x3774:	mov	rsi, rax
0x3777:	jne	0x3758


0x3846:	lea	rax, [rip + 0x21d913]
0x384d:	mov	r14, qword ptr [rip + 0x21d964]
0x3854:	sub	rdx, qword ptr [rax]
0x3857:	sub	r14, rdx
0x385a:	sub	r14, qword ptr [rip + 0x21d7af]
0x3861:	test	r14, r14
0x3864:	jle	0x3cbd


0x367a:	mov	rax, qword ptr [rip + 0x21db1f]
0x3681:	mov	qword ptr [rip + 0x21db20], r9
0x3688:	add	rax, r10
0x368b:	cmp	rbp, r9
0x368e:	jbe	0x37c3


0x364a:	mov	rax, qword ptr [rsp]
0x364e:	xor	ecx, ecx
0x3650:	mov	rsi, qword ptr [rax]
0x3653:	jmp	0x3667


0x360b:	test	dil, dil
0x360e:	jne	0x476c


0x35ee:	add	rsi, 1
0x35f2:	mov	edi, 1
0x35f7:	cmp	r14, rsi
0x35fa:	je	0x3d67


0x3dc7:	mov	rax, r13
0x3dca:	jmp	0x35d2


0x3779:	mov	qword ptr [r15], rdx
0x377c:	lea	rax, [rdx + rcx]
0x3780:	jmp	0x3538


0x3758:	movzx	edi, byte ptr [rsi]
0x375b:	lea	r11, [rip + 0x21dc1e]
0x3762:	lea	rax, [rax + 1]
0x3766:	cmp	byte ptr [r11 + rdi], 0
0x376b:	je	0x471b


0x3cbd:	mov	qword ptr [rip + 0x21d478], 0
0x3cc8:	mov	qword ptr [rip + 0x21d475], 0
0x3cd3:	mov	byte ptr [rip + 0x21d456], 0
0x3cda:	jmp	0x3984


0x386a:	mov	rax, qword ptr [rip + 0x21d90f]
0x3871:	cmp	r13, rax
0x3874:	mov	qword ptr [rip + 0x21d8cd], rax
0x387b:	jae	0x38ad


0x37c3:	mov	rcx, qword ptr [rip + 0x21d9d6]
0x37ca:	add	r10, rcx
0x37cd:	cmp	r9, r10
0x37d0:	jae	0x37d9


0x3694:	cmp	r9, rax
0x3697:	jae	0x3daf


0x3667:	movzx	eax, byte ptr [r9]
0x366b:	test	byte ptr [rsi + rax*2 + 1], 0x20
0x3670:	jne	0x3655


0x476c:	mov	qword ptr [rip + 0x21ca0d], rsi
0x4773:	jmp	0x3614


0x3d67:	mov	qword ptr [rip + 0x21d412], r14
0x3d6e:	jmp	0x3614


0x471b:	mov	qword ptr [r15], rsi
0x471e:	lea	rax, [rsi + rcx]
0x4722:	jmp	0x3538


0x3984:	movzx	edx, byte ptr [rip + 0x21deff]
0x398b:	test	dl, dl
0x398d:	je	0x3cdf


0x387d:	mov	rsi, qword ptr [rsp]
0x3881:	xor	ecx, ecx
0x3883:	mov	rsi, qword ptr [rsi]
0x3886:	jmp	0x389a


0x38ad:	mov	rdx, qword ptr [rip + 0x21d894]
0x38b4:	lea	r13, [rip + 0x21d885]
0x38bb:	lea	rax, [rbx + r14]
0x38bf:	mov	qword ptr [rip + 0x21d87a], rbx
0x38c6:	mov	rsi, rbx
0x38c9:	cmp	rdx, rax
0x38cc:	jbe	0x3922


0x37d2:	mov	qword ptr [rip + 0x21d9cf], r9
0x37d9:	mov	rax, qword ptr [rip + 0x21d9c8]
0x37e0:	cmp	rax, rcx
0x37e3:	jbe	0x3dcf


0x37d9:	mov	rax, qword ptr [rip + 0x21d9c8]
0x37e0:	cmp	rax, rcx
0x37e3:	jbe	0x3dcf


0x369d:	mov	r15, r10
0x36a0:	mov	r14, r9
0x36a3:	jmp	0x36f8


0x3daf:	mov	rcx, qword ptr [rip + 0x21d3ea]
0x3db6:	jmp	0x37d9


0x3672:	test	cl, cl
0x3674:	jne	0x3d9c


0x3655:	add	r9, 1
0x3659:	mov	ecx, 1
0x365e:	cmp	r14, r9
0x3661:	je	0x3d9c


0x3cdf:	movzx	ecx, byte ptr [rip + 0x21dba3]
0x3ce6:	test	cl, cl
0x3ce8:	je	0x3a0a


0x3993:	movsxd	rdx, dword ptr [r12 + 0x28]
0x3998:	mov	rsi, qword ptr [rip + 0x21d969]
0x399f:	lea	rdi, [rip + 0x188d5]
0x39a6:	mov	rsi, qword ptr [rsi + rdx*8]
0x39aa:	lea	rcx, [rdx*8]
0x39b2:	test	rsi, rsi
0x39b5:	cmove	rsi, rdi
0x39b9:	mov	rdi, qword ptr [r12 + 0x20]
0x39be:	test	edx, edx
0x39c0:	lea	rbx, [rdi + 1]
0x39c4:	jle	0x39d2


0x389a:	movzx	edx, byte ptr [rax - 1]
0x389e:	test	byte ptr [rsi + rdx*2 + 1], 0x20
0x38a3:	jne	0x3888


0x3922:	cmp	rdx, rsi
0x3925:	mov	rbx, rsi
0x3928:	jbe	0x3cd3


0x38ce:	lea	rdi, [rip + 0x21dceb]
0x38d5:	cmp	qword ptr [rdi], 0
0x38d9:	je	0x3c64


0x3dcf:	mov	byte ptr [rip + 0x21d3ba], 0
0x3dd6:	jmp	0x3846


0x37e9:	cmp	qword ptr [rip + 0x21d83f], 0
0x37f1:	mov	byte ptr [rip + 0x21d958], 0
0x37f8:	mov	r8, qword ptr [rip + 0x21d9a1]
0x37ff:	setne	cl
0x3802:	cmp	rbp, rax
0x3805:	seta	sil
0x3809:	and	ecx, esi
0x380b:	mov	rsi, qword ptr [rsp]
0x380f:	mov	byte ptr [rip + 0x21d97b], cl
0x3815:	mov	rdi, qword ptr [rsi]
0x3818:	xor	esi, esi
0x381a:	jmp	0x3832


0x36f8:	lea	rax, [rip + 0x21dec1]
0x36ff:	mov	qword ptr [rip + 0x21daa2], r14
0x3706:	cmp	qword ptr [rax], 0
0x370a:	jne	0x36a5


0x3d9c:	mov	qword ptr [rip + 0x21d3fd], r9
0x3da3:	jmp	0x367a


0x3a0a:	mov	eax, dword ptr [rip + 0x21de74]
0x3a10:	cmp	eax, 2
0x3a13:	je	0x3ddb


0x3cee:	lea	rsi, [rip + 0x21d46b]
0x3cf5:	mov	rax, qword ptr [r12 + 0x20]
0x3cfa:	add	rax, qword ptr [rsi]
0x3cfd:	cmp	rbp, rax
0x3d00:	mov	qword ptr [rip + 0x21d419], rax
0x3d07:	mov	qword ptr [rip + 0x21d41a], rax
0x3d0e:	jbe	0x3a0a


0x39d2:	mov	rdi, qword ptr [rip + 0x21d747]
0x39d9:	call	0x1d70


0x39c6:	mov	rax, qword ptr [rip + 0x21d933]
0x39cd:	sub	rbx, qword ptr [rax + rcx - 8]
0x39d2:	mov	rdi, qword ptr [rip + 0x21d747]
0x39d9:	call	0x1d70


0x38a5:	test	cl, cl
0x38a7:	jne	0x4760


0x3888:	sub	rax, 1
0x388c:	mov	ecx, 1
0x3891:	cmp	r13, rax
0x3894:	je	0x4727


0x3cd3:	mov	byte ptr [rip + 0x21d456], 0
0x3cda:	jmp	0x3984


0x392e:	cmp	qword ptr [rip + 0x21d6fa], 0
0x3936:	mov	byte ptr [rip + 0x21d833], 0
0x393d:	setne	al
0x3940:	cmp	qword ptr [rsp + 0x18], rsi
0x3945:	setb	cl
0x3948:	and	eax, ecx
0x394a:	xor	ecx, ecx
0x394c:	mov	byte ptr [rip + 0x21d7de], al
0x3952:	mov	rax, qword ptr [rsp]
0x3956:	mov	rsi, qword ptr [rax]
0x3959:	jmp	0x3972


0x3c64:	movzx	ecx, byte ptr [rsi]
0x3c67:	lea	rdi, [rip + 0x21d712]
0x3c6e:	cmp	byte ptr [rdi + rcx], 0
0x3c72:	jne	0x3c85


0x38df:	sub	rdx, rsi
0x38e2:	xor	r8d, r8d
0x38e5:	xor	ecx, ecx
0x38e7:	add	rdi, 8
0x38eb:	call	0x18580


0x3832:	movzx	ecx, byte ptr [rax - 1]
0x3836:	test	byte ptr [rdi + rcx*2 + 1], 0x20
0x383b:	jne	0x3820


0x370c:	movzx	eax, byte ptr [r14]
0x3710:	lea	rsi, [rip + 0x21dc69]
0x3717:	cmp	byte ptr [rsi + rax], 0
0x371b:	jne	0x3788


0x36a5:	mov	rdx, rbp
0x36a8:	lea	rdi, [rax + 8]
0x36ac:	xor	r8d, r8d
0x36af:	sub	rdx, r14
0x36b2:	xor	ecx, ecx
0x36b4:	mov	rsi, r14
0x36b7:	mov	qword ptr [rsp + 8], r11
0x36bc:	call	0x18580


0x3ddb:	mov	rdx, qword ptr [rip + 0x21d246]
0x3de2:	lea	rsi, [rip + 0x17abb]
0x3de9:	mov	edi, 1
0x3dee:	xor	eax, eax
0x3df0:	call	0x1fb0


0x3a19:	jb	0x3ff6


0x3d14:	mov	rsi, qword ptr [rsp]
0x3d18:	mov	rsi, qword ptr [rsi]
0x3d1b:	jmp	0x3d2c


0x1d70:	jmp	qword ptr [rip + 0x21f07a]


0x4760:	mov	qword ptr [rip + 0x21c9e1], rax
0x4767:	jmp	0x38ad


0x4727:	mov	qword ptr [rip + 0x21ca1a], r13
0x472e:	jmp	0x38ad


0x3972:	movzx	eax, byte ptr [rbx]
0x3975:	test	byte ptr [rsi + rax*2 + 1], 0x20
0x397a:	jne	0x3960


0x3c74:	add	rsi, 1
0x3c78:	mov	qword ptr [r13], rsi
0x3c7c:	lea	rax, [rsi + r14]
0x3c80:	jmp	0x38c9


0x3c85:	cmp	rdx, rsi
0x3c88:	jbe	0x38c9


0x383d:	test	sil, sil
0x3840:	jne	0x470f


0x3820:	sub	rax, 1
0x3824:	mov	esi, 1
0x3829:	cmp	r8, rax
0x382c:	jae	0x470f


0x371d:	add	r14, 1
0x3721:	jmp	0x36e0


0x3788:	cmp	rbp, r14
0x378b:	ja	0x37ad


0x3ff6:	cmp	byte ptr [rip + 0x21d88b], 0
0x3ffd:	jne	0x4067


0x3a1f:	cmp	eax, 3
0x3a22:	jne	0x3c1d


0x3d2c:	movzx	edi, byte ptr [rax]
0x3d2f:	test	byte ptr [rsi + rdi*2 + 1], 0x20
0x3d34:	je	0x3d1d




0x397c:	test	cl, cl
0x397e:	jne	0x4733


0x3960:	add	rbx, 1
0x3964:	mov	ecx, 1
0x3969:	cmp	rbx, rdx
0x396c:	je	0x4733


0x38c9:	cmp	rdx, rax
0x38cc:	jbe	0x3922


0x3c8e:	lea	rax, [rsi + 1]
0x3c92:	jmp	0x3ca8


0x470f:	mov	qword ptr [rip + 0x21ca92], rax
0x4716:	jmp	0x3846


0x36e0:	cmp	rbp, r14
0x36e3:	jbe	0x43aa


0x378d:	jmp	0x43aa


0x37ad:	add	r14, 1
0x37b1:	cmp	rbp, r14
0x37b4:	jne	0x3798


0x3fff:	cmp	byte ptr [rip + 0x21d884], 0
0x4006:	mov	rdi, qword ptr [rip + 0x21d113]
0x400d:	mov	rsi, qword ptr [rip + 0x21d114]
0x4014:	je	0x421c


0x4067:	mov	rdi, qword ptr [rip + 0x21d132]
0x406e:	cmp	rdi, qword ptr [rip + 0x21d133]
0x4075:	jb	0x42f3


0x3a28:	mov	rdx, qword ptr [rip + 0x21d5f9]
0x3a2f:	lea	rsi, [rip + 0x17e74]
0x3a36:	mov	edi, 1
0x3a3b:	xor	eax, eax
0x3a3d:	call	0x1fb0


0x3c1d:	add	qword ptr [rsp + 0x10], 1
0x3c23:	add	r12, 0x30
0x3c27:	mov	rax, qword ptr [rsp + 0x10]
0x3c2c:	cmp	rax, qword ptr [rip + 0x21d6ad]
0x3c33:	jl	0x2da1


0x3d1d:	add	rax, 1
0x3d21:	mov	edx, ecx
0x3d23:	cmp	rbp, rax
0x3d26:	je	0x4754


0x3d36:	test	dl, dl
0x3d38:	je	0x3a0a


0x4733:	mov	qword ptr [rip + 0x21ca06], rbx
0x473a:	jmp	0x3984


0x3ca8:	cmp	rdx, rax
0x3cab:	mov	rsi, rax
0x3cae:	jne	0x3c94


0x43aa:	mov	r10, r15
0x43ad:	mov	r9, r14
0x43b0:	mov	rdx, qword ptr [rip + 0x21cdb1]
0x43b7:	jmp	0x37c3


0x36e9:	mov	rax, qword ptr [r11]
0x36ec:	add	rax, r15
0x36ef:	cmp	r14, rax
0x36f2:	jae	0x3da8


0x37b6:	mov	rdx, qword ptr [rip + 0x21d9ab]
0x37bd:	mov	r10, r15
0x37c0:	mov	r9, rbp
0x37c3:	mov	rcx, qword ptr [rip + 0x21d9d6]
0x37ca:	add	r10, rcx
0x37cd:	cmp	r9, r10
0x37d0:	jae	0x37d9


0x3798:	movzx	eax, byte ptr [r14]
0x379c:	lea	rsi, [rip + 0x21dbdd]
0x37a3:	cmp	byte ptr [rsi + rax], 0
0x37a7:	je	0x36e9


0x421c:	call	0x4fa0


0x401a:	call	0x4fa0


0x42f3:	mov	rsi, qword ptr [rip + 0x21ceae]
0x42fa:	call	0x4fa0


0x407b:	mov	rdi, qword ptr [rip + 0x21d146]
0x4082:	mov	rax, qword ptr [rip + 0x21d0ff]
0x4089:	sub	rdi, qword ptr [rip + 0x21cf80]
0x4090:	sub	rax, qword ptr [rip + 0x21d0e9]
0x4097:	sub	rdi, rax
0x409a:	xor	eax, eax
0x409c:	cmp	byte ptr [rip + 0x21d0cd], 0
0x40a3:	je	0x40ac


0x2da1:	mov	rdx, qword ptr [r12]
0x2da5:	mov	rcx, qword ptr [r12 + 0x10]
0x2daa:	lea	rax, [rip + 0x21e3af]
0x2db1:	mov	rbx, qword ptr [r12 + 8]
0x2db6:	mov	rbp, qword ptr [r12 + 0x18]
0x2dbb:	mov	qword ptr [rax], rdx
0x2dbe:	lea	rax, [rdx + rcx]
0x2dc2:	add	rbx, rdx
0x2dc5:	add	rbp, rdx
0x2dc8:	mov	qword ptr [rsp + 0x18], rax
0x2dcd:	movsxd	rax, dword ptr [r12 + 0x28]
0x2dd2:	mov	qword ptr [rip + 0x21e38f], rbx
0x2dd9:	shl	rax, 4
0x2ddd:	add	rax, qword ptr [rip + 0x21e514]
0x2de4:	mov	r13, qword ptr [rax]
0x2de7:	mov	r14, qword ptr [rax + 8]
0x2deb:	mov	rax, qword ptr [rip + 0x21e3c6]
0x2df2:	add	rdx, rax
0x2df5:	cmp	rbx, rbp
0x2df8:	jae	0x33f5


0x4754:	mov	qword ptr [rip + 0x21c9cd], rbp
0x475b:	jmp	0x3a0a


0x3d3e:	mov	qword ptr [rip + 0x21d3e3], rax
0x3d45:	jmp	0x3a0a


0x3cb0:	mov	qword ptr [r13], rdx
0x3cb4:	lea	rax, [rdx + r14]
0x3cb8:	jmp	0x38c9


0x3c94:	movzx	ecx, byte ptr [rsi]
0x3c97:	lea	rdi, [rip + 0x21d6e2]
0x3c9e:	lea	rax, [rax + 1]
0x3ca2:	cmp	byte ptr [rdi + rcx], 0
0x3ca6:	je	0x3c78


0x3da8:	mov	rdx, qword ptr [rip + 0x21d3b9]
0x3daf:	mov	rcx, qword ptr [rip + 0x21d3ea]
0x3db6:	jmp	0x37d9


0x40ac:	sub	rdi, rax
0x40af:	call	0x4f50


0x40a5:	mov	rax, qword ptr [rip + 0x21d104]
0x40ac:	sub	rdi, rax
0x40af:	call	0x4f50


0x3c78:	mov	qword ptr [r13], rsi
0x3c7c:	lea	rax, [rsi + r14]
0x3c80:	jmp	0x38c9


0x40b4:	cmp	byte ptr [rip + 0x21d0b5], 0
0x40bb:	je	0x40d0


0x40d0:	mov	rsi, qword ptr [rip + 0x21d0b1]
0x40d7:	mov	rdi, qword ptr [rip + 0x21d0a2]
0x40de:	call	0x4fa0


0x40bd:	mov	rsi, qword ptr [rip + 0x21d004]
0x40c4:	mov	rdi, qword ptr [rip + 0x21cf65]
0x40cb:	call	0x1eb0


0x40e3:	mov	rdi, qword ptr [rip + 0x21cf26]
0x40ea:	call	0x4f50


0x40ef:	lea	rax, [rip + 0x21d06a]
0x40f6:	mov	rsi, qword ptr [rip + 0x21d06b]
0x40fd:	mov	rdi, qword ptr [rax]
0x4100:	call	0x4fa0


0x4105:	cmp	byte ptr [rip + 0x21d044], 0
0x410c:	jne	0x424a


0x4112:	mov	rcx, qword ptr [rip + 0x21d027]
0x4119:	mov	rdx, qword ptr [rip + 0x21d028]
0x4120:	lea	r13, [rip + 0x21d019]
0x4127:	cmp	rcx, rdx
0x412a:	jb	0x4790


0x424a:	mov	rsi, qword ptr [rip + 0x21ce77]
0x4251:	mov	rdi, qword ptr [rip + 0x21cdd8]
0x4258:	lea	r13, [rip + 0x21cee1]
0x425f:	call	0x1eb0


0x4790:	lea	rsi, [rip + 0x21c9c9]
0x4797:	mov	rax, qword ptr [rip + 0x21c9ca]
0x479e:	sub	rax, qword ptr [rsi]
0x47a1:	mov	rsi, qword ptr [rip + 0x21ca20]
0x47a8:	sub	rsi, rax
0x47ab:	mov	rax, rsi
0x47ae:	xor	esi, esi
0x47b0:	jmp	0x42ab


0x4130:	cmp	byte ptr [rip + 0x21d753], 0
0x4137:	jne	0x420a


0x42ab:	sub	rax, rsi
0x42ae:	sub	rdx, rcx
0x42b1:	mov	rdi, rax
0x42b4:	xor	eax, eax
0x42b6:	sub	rdi, rdx
0x42b9:	cmp	byte ptr [rip + 0x21ce70], 0
0x42c0:	je	0x42c9


0x413d:	cmp	byte ptr [rip + 0x21d745], 0
0x4144:	je	0x3bfd


0x420a:	cmp	byte ptr [rip + 0x21d677], 0
0x4211:	jne	0x4157


0x42c9:	sub	rdi, rax
0x42cc:	call	0x4f50


0x42c2:	mov	rax, qword ptr [rip + 0x21cee7]
0x42c9:	sub	rdi, rax
0x42cc:	call	0x4f50


0x3bfd:	mov	rdi, qword ptr [rip + 0x21d4c4]
0x3c04:	mov	rax, qword ptr [rdi + 0x28]
0x3c08:	cmp	rax, qword ptr [rdi + 0x30]
0x3c0c:	jae	0x4806


0x414a:	cmp	byte ptr [rip + 0x21d737], 0
0x4151:	je	0x47dc


0x4217:	jmp	0x3bfd


0x4157:	lea	rsi, [rip + 0x21d002]
0x415e:	mov	rax, qword ptr [rip + 0x21d003]
0x4165:	mov	rdi, qword ptr [rip + 0x21d05c]
0x416c:	sub	rax, qword ptr [rsi]
0x416f:	sub	rdi, rax
0x4172:	xor	eax, eax
0x4174:	cmp	byte ptr [rip + 0x21cfd5], 0
0x417b:	je	0x4184


0x3c12:	lea	rdx, [rax + 1]
0x3c16:	mov	qword ptr [rdi + 0x28], rdx
0x3c1a:	mov	byte ptr [rax], 0xa
0x3c1d:	add	qword ptr [rsp + 0x10], 1
0x3c23:	add	r12, 0x30
0x3c27:	mov	rax, qword ptr [rsp + 0x10]
0x3c2c:	cmp	rax, qword ptr [rip + 0x21d6ad]
0x3c33:	jl	0x2da1


0x4806:	mov	esi, 0xa
0x480b:	call	0x1e00


0x47dc:	cmp	byte ptr [rip + 0x21d0a6], 0
0x47e3:	jne	0x4199


0x4184:	sub	rdi, rax
0x4187:	call	0x4f50


0x417d:	mov	rax, qword ptr [rip + 0x21d02c]
0x4184:	sub	rdi, rax
0x4187:	call	0x4f50


0x47e9:	jmp	0x3bfd


0x4199:	cmp	byte ptr [rip + 0x21d6e8], 0
0x41a0:	je	0x3bfd


0x41a6:	mov	rdi, qword ptr [rip + 0x21ce63]
0x41ad:	call	0x4f50


0x4810:	jmp	0x3c1d


0x41b2:	mov	rdi, qword ptr [rip + 0x21cf67]
0x41b9:	mov	rsi, qword ptr [rip + 0x21cf68]
0x41c0:	call	0x4fa0


0x418c:	cmp	byte ptr [rip + 0x21d6f7], 0
0x4193:	je	0x47dc


0x42d1:	cmp	byte ptr [rip + 0x21ce58], 0
0x42d8:	jne	0x47c4


0x42de:	mov	rdi, qword ptr [r13]
0x42e2:	mov	rsi, qword ptr [rip + 0x21ce5f]
0x42e9:	call	0x4fa0


0x47c4:	mov	rsi, qword ptr [rip + 0x21c8fd]
0x47cb:	mov	rdi, qword ptr [rip + 0x21c85e]
0x47d2:	call	0x1eb0


0x47d7:	jmp	0x42de


0x4264:	mov	rcx, qword ptr [rip + 0x21ced5]
0x426b:	mov	rdx, qword ptr [rip + 0x21ced6]
0x4272:	cmp	rcx, rdx
0x4275:	jae	0x4130


0x427b:	lea	rsi, [rip + 0x21cede]
0x4282:	mov	rax, qword ptr [rip + 0x21cedf]
0x4289:	sub	rax, qword ptr [rsi]
0x428c:	mov	rsi, qword ptr [rip + 0x21cf35]
0x4293:	sub	rsi, rax
0x4296:	mov	rax, rsi
0x4299:	xor	esi, esi
0x429b:	cmp	byte ptr [rip + 0x21ceae], 0
0x42a2:	je	0x42ab


0x42a4:	mov	rsi, qword ptr [rip + 0x21cf05]
0x42ab:	sub	rax, rsi
0x42ae:	sub	rdx, rcx
0x42b1:	mov	rdi, rax
0x42b4:	xor	eax, eax
0x42b6:	sub	rdi, rdx
0x42b9:	cmp	byte ptr [rip + 0x21ce70], 0
0x42c0:	je	0x42c9


0x42ee:	jmp	0x418c


0x41c5:	jmp	0x3bfd


0x42ff:	cmp	byte ptr [rip + 0x21ce8a], 0
0x4306:	jne	0x4778


0x430c:	mov	rdi, qword ptr [rip + 0x21ceb5]
0x4313:	mov	rax, qword ptr [rip + 0x21ce6e]
0x431a:	sub	rdi, qword ptr [rip + 0x21ccef]
0x4321:	sub	rax, qword ptr [rip + 0x21ce58]
0x4328:	sub	rdi, rax
0x432b:	xor	eax, eax
0x432d:	cmp	byte ptr [rip + 0x21ce3c], 0
0x4334:	je	0x433d


0x4778:	mov	rsi, qword ptr [rip + 0x21c949]
0x477f:	mov	rdi, qword ptr [rip + 0x21c8aa]
0x4786:	call	0x1eb0


0x433d:	sub	rdi, rax
0x4340:	mov	rax, qword ptr [rip + 0x21ce61]
0x4347:	sub	rax, qword ptr [rip + 0x21ce52]
0x434e:	sub	rdi, rax
0x4351:	xor	eax, eax
0x4353:	cmp	byte ptr [rip + 0x21ce36], 0
0x435a:	je	0x40ac


0x4336:	mov	rax, qword ptr [rip + 0x21ce73]
0x433d:	sub	rdi, rax
0x4340:	mov	rax, qword ptr [rip + 0x21ce61]
0x4347:	sub	rax, qword ptr [rip + 0x21ce52]
0x434e:	sub	rdi, rax
0x4351:	xor	eax, eax
0x4353:	cmp	byte ptr [rip + 0x21ce36], 0
0x435a:	je	0x40ac


0x4360:	jmp	0x40a5


0x478b:	jmp	0x430c


0x401f:	mov	rdi, qword ptr [rip + 0x21d0a2]
0x4026:	mov	rax, qword ptr [rdi + 0x28]
0x402a:	cmp	rax, qword ptr [rdi + 0x30]
0x402e:	jae	0x47b5


0x4034:	lea	rdx, [rax + 1]
0x4038:	mov	qword ptr [rdi + 0x28], rdx
0x403c:	mov	byte ptr [rax], 0x3a
0x403f:	mov	rdi, qword ptr [rip + 0x21cfca]
0x4046:	mov	rax, qword ptr [rip + 0x21d0db]
0x404d:	add	rdi, qword ptr [rip + 0x21d304]
0x4054:	sub	rax, qword ptr [rip + 0x21d0c5]
0x405b:	sub	rdi, rax
0x405e:	sub	rdi, 1
0x4062:	call	0x4f50


0x47b5:	mov	esi, 0x3a
0x47ba:	call	0x1e00


0x47bf:	jmp	0x403f


0x403f:	mov	rdi, qword ptr [rip + 0x21cfca]
0x4046:	mov	rax, qword ptr [rip + 0x21d0db]
0x404d:	add	rdi, qword ptr [rip + 0x21d304]
0x4054:	sub	rax, qword ptr [rip + 0x21d0c5]
0x405b:	sub	rdi, rax
0x405e:	sub	rdi, 1
0x4062:	call	0x4f50


0x4221:	mov	rdi, qword ptr [rip + 0x21cde8]
0x4228:	mov	rax, qword ptr [rip + 0x21cef9]
0x422f:	add	rdi, qword ptr [rip + 0x21d122]
0x4236:	sub	rax, qword ptr [rip + 0x21cee3]
0x423d:	sub	rdi, rax
0x4240:	call	0x4f50


0x4245:	jmp	0x4067


0x3a42:	mov	rdi, qword ptr [rip + 0x21d67f]
0x3a49:	mov	rax, qword ptr [rdi + 0x28]
0x3a4d:	cmp	rax, qword ptr [rdi + 0x30]
0x3a51:	jae	0x4672


0x3a57:	lea	rdx, [rax + 1]
0x3a5b:	mov	qword ptr [rdi + 0x28], rdx
0x3a5f:	mov	byte ptr [rax], 0x7b
0x3a62:	mov	rdi, qword ptr [rip + 0x21d737]
0x3a69:	mov	rsi, qword ptr [rip + 0x21d738]
0x3a70:	call	0x4fa0


0x4672:	mov	esi, 0x7b
0x4677:	call	0x1e00


0x467c:	jmp	0x3a62


0x3a62:	mov	rdi, qword ptr [rip + 0x21d737]
0x3a69:	mov	rsi, qword ptr [rip + 0x21d738]
0x3a70:	call	0x4fa0


0x3a75:	mov	rcx, qword ptr [rip + 0x21d64c]
0x3a7c:	lea	rdi, [rip + 0x17e2c]
0x3a83:	mov	edx, 2
0x3a88:	mov	esi, 1
0x3a8d:	call	0x1f80


0x3a92:	mov	rdi, qword ptr [rip + 0x21d6e7]
0x3a99:	mov	rsi, qword ptr [rip + 0x21d6e8]
0x3aa0:	call	0x4fa0


0x3aa5:	mov	rcx, qword ptr [rip + 0x21d61c]
0x3aac:	lea	rdi, [rip + 0x17dfc]
0x3ab3:	mov	edx, 2
0x3ab8:	mov	esi, 1
0x3abd:	call	0x1f80


0x3ac2:	lea	rax, [rip + 0x21d697]
0x3ac9:	mov	rbp, qword ptr [rip + 0x21d698]
0x3ad0:	mov	rbx, qword ptr [rax]
0x3ad3:	lea	rax, [rip + 0x21dae6]
0x3ada:	cmp	qword ptr [rax], 0
0x3ade:	mov	r13, rbx
0x3ae1:	je	0x436e


0x436e:	movzx	eax, byte ptr [rbx]
0x4371:	lea	rsi, [rip + 0x21d008]
0x4378:	cmp	byte ptr [rsi + rax], 0
0x437c:	jne	0x4387


0x3ae7:	mov	rdx, rbp
0x3aea:	lea	rdi, [rax + 8]
0x3aee:	xor	r8d, r8d
0x3af1:	sub	rdx, rbx
0x3af4:	xor	ecx, ecx
0x3af6:	mov	rsi, rbx
0x3af9:	call	0x18580


0x437e:	add	rbx, 1
0x4382:	jmp	0x3b15


0x4387:	cmp	rbp, rbx
0x438a:	jbe	0x3b15


0x3b15:	mov	rdi, r13
0x3b18:	mov	rsi, rbx
0x3b1b:	call	0x4fa0


0x4390:	movzx	eax, byte ptr [rbx]
0x4393:	lea	rsi, [rip + 0x21cfe6]
0x439a:	cmp	byte ptr [rsi + rax], 0
0x439e:	je	0x3b15


0x43a4:	add	rbx, 1
0x43a8:	jmp	0x4387


0x3b20:	mov	rcx, qword ptr [rip + 0x21d5a1]
0x3b27:	lea	rdi, [rip + 0x17d81]
0x3b2e:	mov	edx, 2
0x3b33:	mov	esi, 1
0x3b38:	call	0x1f80


0x3b3d:	mov	rdi, rbx
0x3b40:	mov	rsi, rbp
0x3b43:	call	0x4fa0


0x3b48:	mov	rcx, qword ptr [rip + 0x21d579]
0x3b4f:	lea	rdi, [rip + 0x17d59]
0x3b56:	mov	edx, 2
0x3b5b:	mov	esi, 1
0x3b60:	call	0x1f80


0x3b65:	mov	rdi, qword ptr [rip + 0x21d5d4]
0x3b6c:	mov	rsi, qword ptr [rip + 0x21d5d5]
0x3b73:	call	0x4fa0


0x3b78:	mov	rdi, qword ptr [rip + 0x21d549]
0x3b7f:	mov	rax, qword ptr [rdi + 0x28]
0x3b83:	cmp	rax, qword ptr [rdi + 0x30]
0x3b87:	jae	0x46cc


0x3b8d:	lea	rdx, [rax + 1]
0x3b91:	mov	qword ptr [rdi + 0x28], rdx
0x3b95:	mov	byte ptr [rax], 0x7d
0x3b98:	cmp	byte ptr [rip + 0x21dceb], 0
0x3b9f:	jne	0x3baa


0x46cc:	mov	esi, 0x7d
0x46d1:	call	0x1e00


0x3ba1:	cmp	byte ptr [rip + 0x21dce1], 0
0x3ba8:	je	0x3bfd


0x3baa:	mov	rdi, qword ptr [rip + 0x21d517]
0x3bb1:	mov	rax, qword ptr [rdi + 0x28]
0x3bb5:	cmp	rax, qword ptr [rdi + 0x30]
0x3bb9:	jae	0x4681


0x3bbf:	lea	rdx, [rax + 1]
0x3bc3:	mov	qword ptr [rdi + 0x28], rdx
0x3bc7:	mov	byte ptr [rax], 0x7b
0x3bca:	mov	rdi, qword ptr [rip + 0x21d54f]
0x3bd1:	mov	rsi, qword ptr [rip + 0x21d550]
0x3bd8:	call	0x4fa0


0x4681:	mov	esi, 0x7b
0x4686:	call	0x1e00


0x468b:	jmp	0x3bca


0x3bca:	mov	rdi, qword ptr [rip + 0x21d54f]
0x3bd1:	mov	rsi, qword ptr [rip + 0x21d550]
0x3bd8:	call	0x4fa0


0x46d6:	jmp	0x3b98


0x3b98:	cmp	byte ptr [rip + 0x21dceb], 0
0x3b9f:	jne	0x3baa


0x3bdd:	mov	rdi, qword ptr [rip + 0x21d4e4]
0x3be4:	mov	rax, qword ptr [rdi + 0x28]
0x3be8:	cmp	rax, qword ptr [rdi + 0x30]
0x3bec:	jae	0x4690


0x3bf2:	lea	rdx, [rax + 1]
0x3bf6:	mov	qword ptr [rdi + 0x28], rdx
0x3bfa:	mov	byte ptr [rax], 0x7d
0x3bfd:	mov	rdi, qword ptr [rip + 0x21d4c4]
0x3c04:	mov	rax, qword ptr [rdi + 0x28]
0x3c08:	cmp	rax, qword ptr [rdi + 0x30]
0x3c0c:	jae	0x4806


0x4690:	mov	esi, 0x7d
0x4695:	call	0x1e00


0x469a:	jmp	0x3bfd


0x3df5:	mov	rdi, qword ptr [rip + 0x21d3a4]
0x3dfc:	mov	rsi, qword ptr [rip + 0x21d3a5]
0x3e03:	call	0x4fa0


0x3e08:	cmp	byte ptr [rip + 0x21d381], 0
0x3e0f:	je	0x3e24


0x3e24:	mov	rdi, qword ptr [rip + 0x21d29d]
0x3e2b:	mov	rax, qword ptr [rdi + 0x28]
0x3e2f:	cmp	rax, qword ptr [rdi + 0x30]
0x3e33:	jae	0x46f4


0x3e11:	mov	rsi, qword ptr [rip + 0x21d2b0]
0x3e18:	mov	rdi, qword ptr [rip + 0x21d211]
0x3e1f:	call	0x1eb0


0x3e39:	lea	rdx, [rax + 1]
0x3e3d:	mov	qword ptr [rdi + 0x28], rdx
0x3e41:	mov	byte ptr [rax], 0x22
0x3e44:	mov	rcx, qword ptr [rip + 0x21d27d]
0x3e4b:	lea	rdi, [rip + 0x17a55]
0x3e52:	mov	edx, 2
0x3e57:	mov	esi, 1
0x3e5c:	call	0x1f80


0x46f4:	mov	esi, 0x22
0x46f9:	call	0x1e00


0x46fe:	jmp	0x3e44


0x3e44:	mov	rcx, qword ptr [rip + 0x21d27d]
0x3e4b:	lea	rdi, [rip + 0x17a55]
0x3e52:	mov	edx, 2
0x3e57:	mov	esi, 1
0x3e5c:	call	0x1f80


0x3e61:	cmp	byte ptr [rip + 0x21d308], 0
0x3e68:	je	0x3e7d


0x3e7d:	mov	rdi, qword ptr [rip + 0x21d2fc]
0x3e84:	mov	rsi, qword ptr [rip + 0x21d2fd]
0x3e8b:	call	0x4fa0


0x3e6a:	mov	rsi, qword ptr [rip + 0x21d257]
0x3e71:	mov	rdi, qword ptr [rip + 0x21d1b8]
0x3e78:	call	0x1eb0


0x3e90:	mov	rdi, qword ptr [rip + 0x21d231]
0x3e97:	mov	rax, qword ptr [rdi + 0x28]
0x3e9b:	cmp	rax, qword ptr [rdi + 0x30]
0x3e9f:	jae	0x46e5


0x3ea5:	lea	rdx, [rax + 1]
0x3ea9:	mov	qword ptr [rdi + 0x28], rdx
0x3ead:	mov	byte ptr [rax], 0x22
0x3eb0:	mov	rcx, qword ptr [rip + 0x21d211]
0x3eb7:	lea	rdi, [rip + 0x179e9]
0x3ebe:	mov	edx, 2
0x3ec3:	mov	esi, 1
0x3ec8:	call	0x1f80


0x46e5:	mov	esi, 0x22
0x46ea:	call	0x1e00


0x46ef:	jmp	0x3eb0


0x3eb0:	mov	rcx, qword ptr [rip + 0x21d211]
0x3eb7:	lea	rdi, [rip + 0x179e9]
0x3ebe:	mov	edx, 2
0x3ec3:	mov	esi, 1
0x3ec8:	call	0x1f80


0x3ecd:	lea	rax, [rip + 0x21d28c]
0x3ed4:	mov	rsi, qword ptr [rip + 0x21d28d]
0x3edb:	mov	rdi, qword ptr [rax]
0x3ede:	call	0x4fa0


0x3ee3:	cmp	byte ptr [rip + 0x21d266], 0
0x3eea:	je	0x3eff


0x3eff:	mov	rdi, qword ptr [rip + 0x21d1c2]
0x3f06:	mov	rax, qword ptr [rdi + 0x28]
0x3f0a:	cmp	rax, qword ptr [rdi + 0x30]
0x3f0e:	jae	0x46bd


0x3eec:	mov	rsi, qword ptr [rip + 0x21d1d5]
0x3ef3:	mov	rdi, qword ptr [rip + 0x21d136]
0x3efa:	call	0x1eb0


0x3f14:	lea	rdx, [rax + 1]
0x3f18:	mov	qword ptr [rdi + 0x28], rdx
0x3f1c:	mov	byte ptr [rax], 0x22
0x3f1f:	mov	rcx, qword ptr [rip + 0x21d1a2]
0x3f26:	lea	rdi, [rip + 0x1797a]
0x3f2d:	mov	edx, 2
0x3f32:	mov	esi, 1
0x3f37:	call	0x1f80


0x46bd:	mov	esi, 0x22
0x46c2:	call	0x1e00


0x46c7:	jmp	0x3f1f


0x3f1f:	mov	rcx, qword ptr [rip + 0x21d1a2]
0x3f26:	lea	rdi, [rip + 0x1797a]
0x3f2d:	mov	edx, 2
0x3f32:	mov	esi, 1
0x3f37:	call	0x1f80


0x3f3c:	cmp	byte ptr [rip + 0x21d1ed], 0
0x3f43:	je	0x3f58


0x3f58:	mov	rdi, qword ptr [rip + 0x21d1e1]
0x3f5f:	mov	rsi, qword ptr [rip + 0x21d1e2]
0x3f66:	call	0x4fa0


0x3f45:	mov	rsi, qword ptr [rip + 0x21d17c]
0x3f4c:	mov	rdi, qword ptr [rip + 0x21d0dd]
0x3f53:	call	0x1eb0


0x3f6b:	mov	rdi, qword ptr [rip + 0x21d156]
0x3f72:	mov	rax, qword ptr [rdi + 0x28]
0x3f76:	cmp	rax, qword ptr [rdi + 0x30]
0x3f7a:	jae	0x46ae


0x3f80:	lea	rdx, [rax + 1]
0x3f84:	mov	qword ptr [rdi + 0x28], rdx
0x3f88:	mov	byte ptr [rax], 0x22
0x3f8b:	cmp	byte ptr [rip + 0x21d8f8], 0
0x3f92:	jne	0x3fa1


0x46ae:	mov	esi, 0x22
0x46b3:	call	0x1e00


0x3f94:	cmp	byte ptr [rip + 0x21d8ee], 0
0x3f9b:	je	0x3bfd


0x3fa1:	mov	rcx, qword ptr [rip + 0x21d120]
0x3fa8:	lea	rdi, [rip + 0x178f8]
0x3faf:	mov	edx, 2
0x3fb4:	mov	esi, 1
0x3fb9:	call	0x1f80


0x46b8:	jmp	0x3f8b


0x3f8b:	cmp	byte ptr [rip + 0x21d8f8], 0
0x3f92:	jne	0x3fa1


0x3fbe:	mov	rdi, qword ptr [rip + 0x21d15b]
0x3fc5:	mov	rsi, qword ptr [rip + 0x21d15c]
0x3fcc:	call	0x4fa0


0x3fd1:	mov	rdi, qword ptr [rip + 0x21d0f0]
0x3fd8:	mov	rax, qword ptr [rdi + 0x28]
0x3fdc:	cmp	rax, qword ptr [rdi + 0x30]
0x3fe0:	jae	0x469f


0x3fe6:	lea	rdx, [rax + 1]
0x3fea:	mov	qword ptr [rdi + 0x28], rdx
0x3fee:	mov	byte ptr [rax], 0x22
0x3ff1:	jmp	0x3bfd


0x469f:	mov	esi, 0x22
0x46a4:	call	0x1e00


0x46a9:	jmp	0x3bfd


0x3afe:	cmp	rax, -2
0x3b02:	je	0x452a


0x452a:	call	0x4a00


0x3b08:	cmp	rax, -1
0x3b0c:	je	0x46db


0x46db:	mov	eax, 1
0x46e0:	jmp	0x3b12


0x3b12:	add	rbx, rax
0x3b15:	mov	rdi, r13
0x3b18:	mov	rsi, rbx
0x3b1b:	call	0x4fa0


0x36c1:	cmp	rax, -2
0x36c5:	je	0x452a


0x36cb:	cmp	rax, -1
0x36cf:	mov	edx, 1
0x36d4:	mov	r11, qword ptr [rsp + 8]
0x36d9:	cmove	rax, rdx
0x36dd:	add	r14, rax
0x36e0:	cmp	rbp, r14
0x36e3:	jbe	0x43aa


0x38f0:	cmp	rax, -2
0x38f4:	je	0x452a


0x38fa:	cmp	rax, -1
0x38fe:	mov	edx, 1
0x3903:	cmove	rax, rdx
0x3907:	add	rax, qword ptr [r13]
0x390b:	mov	rdx, qword ptr [rip + 0x21d836]
0x3912:	mov	rsi, rax
0x3915:	mov	qword ptr [r13], rax
0x3919:	lea	rax, [rax + r14]
0x391d:	cmp	rdx, rax
0x3920:	ja	0x38ce


0x355f:	cmp	rax, -2
0x3563:	je	0x452a


0x3569:	cmp	rax, -1
0x356d:	mov	edx, 1
0x3572:	mov	rcx, qword ptr [rip + 0x21dc47]
0x3579:	cmove	rax, rdx
0x357d:	add	rax, qword ptr [r15]
0x3580:	mov	rdx, qword ptr [rip + 0x21dc01]
0x3587:	mov	rsi, rax
0x358a:	mov	qword ptr [r15], rax
0x358d:	lea	rax, [rax + rcx]
0x3591:	cmp	rdx, rax
0x3594:	ja	0x353d


0x34b7:	cmp	rax, -2
0x34bb:	je	0x452a


0x34c1:	cmp	rax, -1
0x34c5:	jne	0x34cc


0x34c7:	mov	eax, 1
0x34cc:	add	rbx, rax
0x34cf:	lea	rax, [rip + 0x21dc8a]
0x34d6:	lea	r15, [rip + 0x21dca3]
0x34dd:	mov	qword ptr [rip + 0x21dc9c], rbx
0x34e4:	mov	rax, qword ptr [rax]
0x34e7:	cmp	rbx, rax
0x34ea:	mov	qword ptr [rip + 0x21dc97], rax
0x34f1:	jae	0x3523


0x34cc:	add	rbx, rax
0x34cf:	lea	rax, [rip + 0x21dc8a]
0x34d6:	lea	r15, [rip + 0x21dca3]
0x34dd:	mov	qword ptr [rip + 0x21dc9c], rbx
0x34e4:	mov	rax, qword ptr [rax]
0x34e7:	cmp	rbx, rax
0x34ea:	mov	qword ptr [rip + 0x21dc97], rax
0x34f1:	jae	0x3523


0x2e2a:	cmp	rax, -2
0x2e2e:	je	0x452a


0x2e34:	cmp	rax, -1
0x2e38:	mov	edx, 1
0x2e3d:	cmove	rax, rdx
0x2e41:	add	rbx, rax
0x2e44:	mov	rax, qword ptr [rip + 0x21e36d]
0x2e4b:	cmp	rbp, rbx
0x2e4e:	jbe	0x33f0


0x3362:	lea	rsi, [rip + 0x21e017]
0x3369:	xor	ecx, ecx
0x336b:	mov	rdx, qword ptr [rax]
0x336e:	add	rsi, 1
0x3372:	movzx	edx, word ptr [rdx + rcx]
0x3376:	add	rcx, 2
0x337a:	shr	dx, 0xa
0x337e:	and	edx, 1
0x3381:	mov	byte ptr [rsi - 1], dl
0x3384:	cmp	rcx, 0x200
0x338b:	jne	0x336b


0x338d:	jmp	0x27a4


0x336b:	mov	rdx, qword ptr [rax]
0x336e:	add	rsi, 1
0x3372:	movzx	edx, word ptr [rdx + rcx]
0x3376:	add	rcx, 2
0x337a:	shr	dx, 0xa
0x337e:	and	edx, 1
0x3381:	mov	byte ptr [rsi - 1], dl
0x3384:	cmp	rcx, 0x200
0x338b:	jne	0x336b


0x2864:	mov	rax, qword ptr [rip + 0x21ea8d]
0x286b:	add	rax, rbx
0x286e:	cmp	byte ptr [rip + 0x21f014], 0
0x2875:	mov	qword ptr [rsp + 0x18], rax
0x287a:	mov	r12, qword ptr [rax]
0x287d:	je	0x320c


0x320c:	mov	rax, qword ptr [rsp + 0x18]
0x3211:	mov	r14, r12
0x3214:	mov	qword ptr [rsp + 0x20], 0
0x321d:	mov	rbp, qword ptr [rax + 8]
0x3221:	jmp	0x28e4


0x2883:	mov	rbp, qword ptr [rax + 8]
0x2887:	cmp	r12, rbp
0x288a:	mov	rbx, rbp
0x288d:	jae	0x3247


0x28e4:	lea	rax, [rsp + 0x60]
0x28e9:	cmp	rbp, r12
0x28ec:	mov	qword ptr [rsp], r12
0x28f0:	mov	qword ptr [rsp + 0x50], rbp
0x28f5:	mov	qword ptr [rsp + 8], rax
0x28fa:	jbe	0x2b8d


0x2893:	call	0x20e0


0x3247:	mov	rbx, r12
0x324a:	mov	rax, rbx
0x324d:	mov	r14, rbx
0x3250:	sub	rax, r12
0x3253:	mov	qword ptr [rsp + 0x20], rax
0x3258:	jmp	0x28e4


0x2b8d:	mov	rax, qword ptr [rip + 0x21e77c]
0x2b94:	mov	rsi, qword ptr [rsp + 0x58]
0x2b99:	mov	rdx, qword ptr [rip + 0x21e760]
0x2ba0:	add	dword ptr [rsp + 0x38], 1
0x2ba5:	add	rax, 1
0x2ba9:	mov	qword ptr [rdx + rsi], rax
0x2bad:	add	rsi, 8
0x2bb1:	mov	qword ptr [rip + 0x21e758], rax
0x2bb8:	mov	eax, dword ptr [rsp + 0x38]
0x2bbc:	cmp	dword ptr [rip + 0x21e756], eax
0x2bc2:	mov	qword ptr [rsp + 0x58], rsi
0x2bc7:	jg	0x2841


0x2900:	cmp	qword ptr [rip + 0x21ee18], 0
0x2908:	je	0x2964


0x2bcd:	mov	rsi, qword ptr [rip + 0x21e70c]
0x2bd4:	test	rsi, rsi
0x2bd7:	jne	0x33a2


0x2841:	mov	rdi, qword ptr [rsp + 0x58]
0x2846:	mov	rax, qword ptr [rip + 0x21eabb]
0x284d:	mov	rsi, qword ptr [rip + 0x21eaa4]
0x2854:	lea	rbx, [rdi + rdi]
0x2858:	mov	rdi, qword ptr [rax + rdi]
0x285c:	add	rsi, rbx
0x285f:	call	0x4d50


0x2964:	call	0x20e0


0x290a:	mov	rdx, qword ptr [rsp + 0x50]
0x290f:	lea	r9, [rip + 0x21eb8a]
0x2916:	lea	rdi, [rip + 0x21ee0b]
0x291d:	xor	ecx, ecx
0x291f:	mov	rsi, r12
0x2922:	sub	rdx, r12
0x2925:	mov	r8, rdx
0x2928:	call	0x185a0


0x33a2:	mov	rdi, qword ptr [rip + 0x21df47]
0x33a9:	lea	rcx, [rip + 0x2070]
0x33b0:	mov	edx, 0x30
0x33b5:	call	0x1cf0


0x33ba:	jmp	0x2bdd


0x292d:	cmp	rax, -1
0x2931:	je	0x2958


0x2958:	cmp	r12, qword ptr [rsp + 0x50]
0x295d:	mov	rbp, qword ptr [rsp + 0x50]
0x2962:	jae	0x298c


0x2933:	test	rax, rax
0x2936:	je	0x4587


0x298c:	lea	rax, [rip + 0x21ec2d]
0x2993:	mov	qword ptr [rsp + 0x10], r12
0x2998:	mov	rdx, qword ptr [rax]
0x299b:	nop	dword ptr [rax + rax]
0x29a0:	test	rdx, rdx
0x29a3:	je	0x2b3b


0x4587:	mov	rdi, qword ptr [rip + 0x21d192]
0x458e:	call	0x8990


0x293c:	cmp	rax, -2
0x2940:	je	0x452a


0x2b3b:	cmp	r12, rbp
0x2b3e:	jae	0x3128


0x29a9:	mov	rdx, rbp
0x29ac:	lea	r9, [rip + 0x21eacd]
0x29b3:	lea	rdi, [rip + 0x21ec0e]
0x29ba:	sub	rdx, r12
0x29bd:	xor	ecx, ecx
0x29bf:	mov	rsi, r12
0x29c2:	mov	r8, rdx
0x29c5:	call	0x185a0


0x2946:	mov	rax, qword ptr [rip + 0x21eb63]
0x294d:	mov	rsi, qword ptr [rax]
0x2950:	add	rsi, r12
0x2953:	mov	qword ptr [rsp + 0x50], rsi
0x2958:	cmp	r12, qword ptr [rsp + 0x50]
0x295d:	mov	rbp, qword ptr [rsp + 0x50]
0x2962:	jae	0x298c


0x2b44:	movzx	eax, byte ptr [r12]
0x2b49:	cmp	byte ptr [r15 + rax], 0
0x2b4e:	je	0x2b68


0x3128:	je	0x2b71


0x2b68:	add	r12, 1
0x2b6c:	cmp	r12, rbp
0x2b6f:	jne	0x2b58


0x2b50:	jmp	0x2ee9


0x2b71:	mov	rax, qword ptr [rsp + 0x18]
0x2b76:	mov	r12, qword ptr [rsp + 0x50]
0x2b7b:	mov	rbp, qword ptr [rax + 8]
0x2b7f:	cmp	rbp, r12
0x2b82:	mov	qword ptr [rsp + 0x50], rbp
0x2b87:	ja	0x2900


0x312e:	mov	rbx, r12
0x3131:	jmp	0x30aa


0x2b58:	movzx	eax, byte ptr [r12]
0x2b5d:	cmp	byte ptr [r15 + rax], 0
0x2b62:	jne	0x2ee0


0x2ee9:	movzx	eax, byte ptr [r12]
0x2eee:	cmp	byte ptr [r15 + rax], 0
0x2ef3:	je	0x312e


0x30aa:	lea	r12, [rbx + 1]
0x30ae:	jmp	0x29a0


0x2ee0:	cmp	r12, rbp
0x2ee3:	jae	0x312e


0x2ef9:	mov	rax, r12
0x2efc:	jmp	0x2f0e


0x29a0:	test	rdx, rdx
0x29a3:	je	0x2b3b


0x2f0e:	add	rax, 1
0x2f12:	cmp	rax, rbp
0x2f15:	jne	0x2f00


0x2f17:	mov	rbx, r12
0x2f1a:	mov	r12, rbp
0x2f1d:	jmp	0x29fe


0x2f00:	movzx	edx, byte ptr [rax]
0x2f03:	cmp	byte ptr [r15 + rdx], 0
0x2f08:	je	0x30b8


0x29fe:	mov	rax, r12
0x2a01:	mov	qword ptr [rsp + 0x60], rbx
0x2a06:	sub	rax, rbx
0x2a09:	cmp	rax, qword ptr [rip + 0x21e950]
0x2a10:	mov	qword ptr [rsp + 0x68], rax
0x2a15:	jle	0x2a1e


0x30b8:	mov	rbx, r12
0x30bb:	mov	r12, rax
0x30be:	jmp	0x29f5


0x2a1e:	movzx	r13d, byte ptr [rip + 0x21ee63]
0x2a26:	test	r13b, r13b
0x2a29:	jne	0x2f28


0x2a17:	mov	qword ptr [rip + 0x21e942], rax
0x2a1e:	movzx	r13d, byte ptr [rip + 0x21ee63]
0x2a26:	test	r13b, r13b
0x2a29:	jne	0x2f28


0x29f5:	cmp	rbx, r12
0x29f8:	je	0x30a0


0x2a2f:	cmp	qword ptr [rip + 0x21ee31], 0
0x2a37:	je	0x2a59


0x2f28:	cmp	r14, rbx
0x2f2b:	jae	0x2ec0


0x30a0:	lea	rax, [rip + 0x21e519]
0x30a7:	mov	rdx, qword ptr [rax]
0x30aa:	lea	r12, [rbx + 1]
0x30ae:	jmp	0x29a0


0x2a59:	cmp	qword ptr [rip + 0x21ee0f], 0
0x2a61:	je	0x2a83


0x2a39:	mov	rdx, qword ptr [rip + 0x21e910]
0x2a40:	mov	rsi, qword ptr [rip + 0x21e8f9]
0x2a47:	mov	rdi, qword ptr [rsp + 8]
0x2a4c:	call	0x5450


0x2f2d:	mov	rdi, qword ptr [rip + 0x21e3dc]
0x2f34:	mov	qword ptr [rsp + 0x28], rbp
0x2f39:	xor	edx, edx
0x2f3b:	mov	qword ptr [rsp + 0x30], r12
0x2f40:	mov	ebp, r13d
0x2f43:	mov	r13, rbx
0x2f46:	mov	r12, rdi
0x2f49:	jmp	0x2f59


0x2ec0:	cmp	r14, rbx
0x2ec3:	jbe	0x2a2f


0x2a83:	mov	rcx, qword ptr [rip + 0x21e856]
0x2a8a:	cmp	rcx, qword ptr [rip + 0x21e857]
0x2a91:	mov	r8, qword ptr [rip + 0x21e858]
0x2a98:	je	0x30c8


0x2a63:	mov	rdx, qword ptr [rip + 0x21e8c6]
0x2a6a:	mov	rsi, qword ptr [rip + 0x21e8af]
0x2a71:	mov	rdi, qword ptr [rsp + 8]
0x2a76:	call	0x5450


0x2f59:	movzx	eax, byte ptr [r14]
0x2f5d:	add	r14, 1
0x2f61:	cmp	al, 0xa
0x2f63:	jne	0x2f50


0x2ec9:	lea	rax, [rip + 0x21e6f0]
0x2ed0:	mov	rdx, qword ptr [rax]
0x2ed3:	jmp	0x29a0


0x30c8:	test	r8, r8
0x30cb:	je	0x31b8


0x2a9e:	lea	rdi, [rcx + rcx*2]
0x2aa2:	mov	rax, rdi
0x2aa5:	shl	rax, 4
0x2aa9:	lea	rdi, [r8 + rax]
0x2aad:	movzx	r8d, byte ptr [rip + 0x21edd5]
0x2ab5:	test	r8b, r8b
0x2ab8:	jne	0x2fc0


0x2f65:	mov	rax, qword ptr [rsp + 0x18]
0x2f6a:	add	r12, 1
0x2f6e:	mov	rbx, qword ptr [rax + 8]
0x2f72:	cmp	rbx, r14
0x2f75:	jbe	0x31f0


0x2f50:	cmp	r14, r13
0x2f53:	jae	0x2ea0


0x31b8:	test	rcx, rcx
0x31bb:	mov	eax, 2
0x31c0:	mov	edx, 0x30
0x31c5:	cmove	rcx, rax
0x31c9:	mov	rax, rdx
0x31cc:	xor	esi, esi
0x31ce:	mul	rcx
0x31d1:	jo	0x4821


0x30d1:	movabs	rax, 0x1c71c71c71c71c6
0x30db:	cmp	rcx, rax
0x30de:	ja	0x31e5


0x2abe:	test	r13b, r13b
0x2ac1:	je	0x2af7


0x2fc0:	cmp	r14, rbx
0x2fc3:	mov	r10, qword ptr [rip + 0x21e346]
0x2fca:	jae	0x3094


0x31f0:	mov	rax, r14
0x31f3:	mov	qword ptr [rsp + 0x20], 0
0x31fc:	jmp	0x2fae


0x2f7b:	call	0x20e0


0x2ea0:	test	dl, dl
0x2ea2:	mov	rbx, r13
0x2ea5:	mov	rdi, r12
0x2ea8:	mov	r13d, ebp
0x2eab:	mov	r12, qword ptr [rsp + 0x30]
0x2eb0:	mov	rbp, qword ptr [rsp + 0x28]
0x2eb5:	je	0x2ec0


0x4821:	mov	esi, 1
0x4826:	jmp	0x31d7


0x31d7:	test	rax, rax
0x31da:	js	0x31e5


0x30e4:	mov	rax, rcx
0x30e7:	shr	rax, 1
0x30ea:	lea	rcx, [rcx + rax + 1]
0x30ef:	lea	rsi, [rcx + rcx*2]
0x30f3:	mov	rdi, r8
0x30f6:	mov	qword ptr [rip + 0x21e1eb], rcx
0x30fd:	shl	rsi, 4
0x3101:	call	0x9920


0x2af7:	mov	rax, qword ptr [rsp + 0x10]
0x2afc:	add	rcx, 1
0x2b00:	movdqa	xmm0, xmmword ptr [rsp + 0x60]
0x2b06:	mov	qword ptr [rip + 0x21e7d3], rcx
0x2b0d:	sub	rax, rbx
0x2b10:	mov	qword ptr [rdi + 0x10], rax
0x2b14:	mov	rax, rbp
0x2b17:	sub	rax, rbx
0x2b1a:	mov	qword ptr [rdi + 0x18], rax
0x2b1e:	mov	eax, dword ptr [rsp + 0x38]
0x2b22:	movups	xmmword ptr [rdi], xmm0
0x2b25:	mov	dword ptr [rdi + 0x28], eax
0x2b28:	lea	rax, [rip + 0x21ea91]
0x2b2f:	mov	rdx, qword ptr [rax]
0x2b32:	test	rdx, rdx
0x2b35:	jne	0x29a9


0x2ac3:	mov	rax, qword ptr [rsp]
0x2ac7:	sub	rax, rbx
0x2aca:	mov	qword ptr [rdi + 0x20], rax
0x2ace:	mov	rax, qword ptr [rsp + 0x20]
0x2ad3:	cmp	qword ptr [rip + 0x21e87e], rax
0x2ada:	jge	0x2ae3


0x2fd0:	mov	qword ptr [rsp + 0x28], rbp
0x2fd5:	mov	qword ptr [rsp + 0x30], r12
0x2fda:	xor	esi, esi
0x2fdc:	mov	r12, r10
0x2fdf:	mov	qword ptr [rsp + 0x48], r10
0x2fe4:	mov	byte ptr [rsp + 0x3f], r13b
0x2fe9:	mov	r10, r14
0x2fec:	mov	qword ptr [rsp + 0x40], rcx
0x2ff1:	mov	ebp, r8d
0x2ff4:	mov	r14, rdi
0x2ff7:	jmp	0x3005


0x3094:	mov	qword ptr [rdi + 0x20], r10
0x3098:	jmp	0x2ae3


0x2fae:	mov	qword ptr [rsp], r14
0x2fb2:	mov	edx, ebp
0x2fb4:	mov	r14, rax
0x2fb7:	jmp	0x2f50


0x2eb7:	mov	qword ptr [rip + 0x21e452], rdi
0x2ebe:	nop	
0x2ec0:	cmp	r14, rbx
0x2ec3:	jbe	0x2a2f


0x31dc:	test	rsi, rsi
0x31df:	je	0x30ef


0x2adc:	mov	qword ptr [rip + 0x21e875], rax
0x2ae3:	mov	rsi, qword ptr [rsp + 0x10]
0x2ae8:	cmp	qword ptr [rsp], rsi
0x2aec:	jne	0x2af7


0x2ae3:	mov	rsi, qword ptr [rsp + 0x10]
0x2ae8:	cmp	qword ptr [rsp], rsi
0x2aec:	jne	0x2af7


0x3005:	movzx	eax, byte ptr [r10]
0x3009:	add	r10, 1
0x300d:	cmp	al, 0xa
0x300f:	jne	0x3000


0x30ef:	lea	rsi, [rcx + rcx*2]
0x30f3:	mov	rdi, r8
0x30f6:	mov	qword ptr [rip + 0x21e1eb], rcx
0x30fd:	shl	rsi, 4
0x3101:	call	0x9920


0x2aee:	test	r13b, r13b
0x2af1:	jne	0x3140


0x3011:	mov	rax, qword ptr [rsp + 0x18]
0x3016:	add	r12, 1
0x301a:	mov	r13, qword ptr [rax + 8]
0x301e:	cmp	r13, r10
0x3021:	jbe	0x3201


0x3000:	cmp	r10, rbx
0x3003:	jae	0x3068


0x3140:	cmp	rsi, rbp
0x3143:	mov	r13, rsi
0x3146:	jae	0x2af7


0x3201:	mov	esi, ebp
0x3203:	mov	qword ptr [rsp], r10
0x3207:	jmp	0x3000


0x3027:	mov	qword ptr [rsp], r10
0x302b:	call	0x20e0


0x3068:	test	sil, sil
0x306b:	mov	rdi, r14
0x306e:	mov	r9, r12
0x3071:	mov	r14, r10
0x3074:	mov	rbp, qword ptr [rsp + 0x28]
0x3079:	movzx	r13d, byte ptr [rsp + 0x3f]
0x307f:	mov	rcx, qword ptr [rsp + 0x40]
0x3084:	mov	r12, qword ptr [rsp + 0x30]
0x3089:	mov	r10, qword ptr [rsp + 0x48]
0x308e:	jne	0x482b


0x314c:	mov	qword ptr [rsp + 0x28], rdi
0x3151:	mov	qword ptr [rsp + 0x10], rcx
0x3156:	call	0x20e0


0x482b:	mov	qword ptr [rip + 0x21cade], r9
0x4832:	mov	r10, r9
0x4835:	jmp	0x3094


0x3106:	mov	rcx, qword ptr [rip + 0x21e1d3]
0x310d:	mov	r8, rax
0x3110:	mov	qword ptr [rip + 0x21e1d9], rax
0x3117:	movzx	r13d, byte ptr [rip + 0x21e76a]
0x311f:	jmp	0x2a9e


0x2a7b:	test	al, al
0x2a7d:	je	0x2ec9


0x2a51:	test	al, al
0x2a53:	jne	0x2ec9


0x29ca:	cmp	rax, -2
0x29ce:	je	0x452a


0x29d4:	cmp	rax, -1
0x29d8:	je	0x2b71


0x29de:	mov	rax, qword ptr [rip + 0x21eaa3]
0x29e5:	mov	rbx, qword ptr [rax]
0x29e8:	mov	rax, qword ptr [rip + 0x21eaa1]
0x29ef:	add	rbx, r12
0x29f2:	add	r12, qword ptr [rax]
0x29f5:	cmp	rbx, r12
0x29f8:	je	0x30a0


0x315b:	mov	rcx, qword ptr [rsp + 0x10]
0x3160:	mov	rax, qword ptr [rax]
0x3163:	mov	rdx, r13
0x3166:	mov	rdi, qword ptr [rsp + 0x28]
0x316b:	jmp	0x3179


0x3179:	movzx	esi, byte ptr [rdx]
0x317c:	test	byte ptr [rax + rsi*2 + 1], 0x20
0x3181:	je	0x3170


0x3170:	add	rdx, 1
0x3174:	cmp	rdx, rbp
0x3177:	je	0x31ab


0x3183:	cmp	rdx, rbp
0x3186:	mov	qword ptr [rsp + 0x10], rdx
0x318b:	jae	0x2af7


0x31ab:	mov	qword ptr [rsp + 0x10], rdx
0x31b0:	jmp	0x2af7


0x31a1:	movzx	esi, byte ptr [rdx]
0x31a4:	test	byte ptr [rax + rsi*2 + 1], 0x20
0x31a9:	jne	0x3198


0x3198:	add	rdx, 1
0x319c:	cmp	rdx, rbp
0x319f:	je	0x31ab


0x3030:	mov	r10, qword ptr [rsp]
0x3034:	mov	r8, qword ptr [rax]
0x3037:	mov	rax, r10
0x303a:	jmp	0x3049


0x3049:	movzx	edx, byte ptr [rax]
0x304c:	test	byte ptr [r8 + rdx*2 + 1], 0x20
0x3052:	je	0x3040


0x3040:	add	rax, 1
0x3044:	cmp	rax, r13
0x3047:	je	0x3054


0x3054:	mov	qword ptr [rsp], r10
0x3058:	mov	r10, rax
0x305b:	mov	esi, ebp
0x305d:	cmp	r10, rbx
0x3060:	jb	0x3005


0x2f80:	mov	rcx, qword ptr [rax]
0x2f83:	mov	rax, r14
0x2f86:	jmp	0x2f99


0x2f99:	movzx	edx, byte ptr [rax]
0x2f9c:	test	byte ptr [rcx + rdx*2 + 1], 0x20
0x2fa1:	je	0x2f90


0x2f90:	add	rax, 1
0x2f94:	cmp	rax, rbx
0x2f97:	je	0x2fa3


0x2fa3:	mov	rsi, rax
0x2fa6:	sub	rsi, r14
0x2fa9:	mov	qword ptr [rsp + 0x20], rsi
0x2fae:	mov	qword ptr [rsp], r14
0x2fb2:	mov	edx, ebp
0x2fb4:	mov	r14, rax
0x2fb7:	jmp	0x2f50


0x2969:	mov	rbp, qword ptr [rsp + 0x50]
0x296e:	mov	rdx, qword ptr [rax]
0x2971:	jmp	0x2981


0x2981:	movzx	eax, byte ptr [rbp - 1]
0x2985:	test	byte ptr [rdx + rax*2 + 1], 0x20
0x298a:	jne	0x2978


0x2978:	sub	rbp, 1
0x297c:	cmp	r12, rbp
0x297f:	jae	0x298c


0x2898:	mov	r14, r12
0x289b:	mov	rax, qword ptr [rax]
0x289e:	jmp	0x28ad


0x28ad:	movzx	edx, byte ptr [r14]
0x28b1:	test	byte ptr [rax + rdx*2 + 1], 0x20
0x28b6:	je	0x28a0


0x28a0:	add	r14, 1
0x28a4:	cmp	r14, rbp
0x28a7:	je	0x324a


0x28b8:	mov	rsi, r14
0x28bb:	sub	rsi, r12
0x28be:	cmp	r14, rbp
0x28c1:	mov	qword ptr [rsp + 0x20], rsi
0x28c6:	jb	0x28d9


0x324a:	mov	rax, rbx
0x324d:	mov	r14, rbx
0x3250:	sub	rax, r12
0x3253:	mov	qword ptr [rsp + 0x20], rax
0x3258:	jmp	0x28e4


0x28d9:	movzx	edx, byte ptr [r14]
0x28dd:	test	byte ptr [rax + rdx*2 + 1], 0x20
0x28e2:	jne	0x28d0


0x28c8:	jmp	0x28e4


0x28d0:	add	r14, 1
0x28d4:	cmp	r14, rbp
0x28d7:	je	0x28e4


0x2748:	lea	rdx, [rip + 0x21ec31]
0x274f:	mov	ecx, 0x20
0x2754:	movabs	rax, 0x101010101010101
0x275e:	mov	rdi, rdx
0x2761:	rep stosq	qword ptr [rdi], rax


0x2761:	rep stosq	qword ptr [rdi], rax


0x2764:	mov	rdi, qword ptr [rsp + 0x60]
0x2769:	mov	rcx, qword ptr [rsp + 0x68]
0x276e:	cmp	rdi, rcx
0x2771:	jae	0x2786


0x2773:	mov	rax, rdi
0x2776:	movzx	esi, byte ptr [rax]
0x2779:	add	rax, 1
0x277d:	cmp	rax, rcx
0x2780:	mov	byte ptr [rdx + rsi], 0
0x2784:	jne	0x2776


0x2786:	cmp	byte ptr [rip + 0x21e893], 0
0x278d:	jne	0x279f


0x2776:	movzx	esi, byte ptr [rax]
0x2779:	add	rax, 1
0x277d:	cmp	rax, rcx
0x2780:	mov	byte ptr [rdx + rsi], 0
0x2784:	jne	0x2776


0x278f:	mov	byte ptr [rip + 0x21ec0a], 0
0x2796:	mov	word ptr [rip + 0x21ebea], 0
0x279f:	call	0x1c60


0x279f:	call	0x1c60


0x262b:	test	eax, eax
0x262d:	je	0x2650


0x262f:	mov	qword ptr [rbp + rbx*8], r15
0x2634:	cmp	r13, r12
0x2637:	mov	dword ptr [rip + 0x21ea9b], ebx
0x263d:	mov	rbx, r12
0x2640:	je	0x26a6


0x26d1:	lea	rcx, [rip + 0x21ede8]
0x26d8:	xor	edx, edx
0x26da:	nop	word ptr [rax + rax]
0x26e0:	mov	rsi, qword ptr [rax]
0x26e3:	add	rcx, 1
0x26e7:	mov	esi, dword ptr [rsi + rdx]
0x26ea:	add	rdx, 4
0x26ee:	mov	byte ptr [rcx - 1], sil
0x26f2:	cmp	rdx, 0x400
0x26f9:	jne	0x26e0


0x26e0:	mov	rsi, qword ptr [rax]
0x26e3:	add	rcx, 1
0x26e7:	mov	esi, dword ptr [rsi + rdx]
0x26ea:	add	rdx, 4
0x26ee:	mov	byte ptr [rcx - 1], sil
0x26f2:	cmp	rdx, 0x400
0x26f9:	jne	0x26e0


0x3317:	cmp	byte ptr [rip + 0x21e56c], 0
0x331e:	mov	qword ptr [rip + 0x21ddfb], rax
0x3325:	jne	0x2bf3


0x332b:	jmp	0x2bea


0x43fd:	mov	edi, 8
0x4402:	mov	qword ptr [rip + 0x21ceff], rax
0x4409:	call	0x98c0


0x440e:	mov	edi, 0x10
0x4413:	mov	qword ptr [rip + 0x21cee6], rax
0x441a:	call	0x98c0


0x441f:	mov	qword ptr [rip + 0x21ced2], rax
0x4426:	movsxd	rax, dword ptr [rip + 0x21ccab]
0x442d:	mov	r13, qword ptr [rbp + rax*8]
0x4432:	mov	r12, rax
0x4435:	lea	r14, [rax*8]
0x443d:	cmp	byte ptr [r13], 0
0x4442:	je	0x44f2


0x44f2:	mov	rdx, qword ptr [rip + 0x21ce0f]
0x44f9:	mov	qword ptr [rdx], 0
0x4500:	jmp	0x4469


0x4448:	lea	rsi, [rip + 0x17843]
0x444f:	mov	rdi, r13
0x4452:	call	0x1ed0


0x4469:	add	r12d, 1
0x446d:	cmp	r12d, ebx
0x4470:	mov	dword ptr [rip + 0x21cc61], r12d
0x4477:	jge	0x26a6


0x447d:	mov	rdi, qword ptr [rbp + r14 + 8]
0x4482:	mov	rdx, qword ptr [rip + 0x21cc3f]
0x4489:	lea	rsi, [rip + 0x173fc]
0x4490:	call	0x5de0


0x4495:	test	rax, rax
0x4498:	je	0x45bd


0x45bd:	movsxd	rax, dword ptr [rip + 0x21cb14]
0x45c4:	mov	esi, 3
0x45c9:	xor	edi, edi
0x45cb:	mov	rdx, qword ptr [rbp + rax*8]
0x45d0:	call	0x87c0


0x449e:	mov	eax, dword ptr [rip + 0x21cc34]
0x44a4:	add	eax, 1
0x44a7:	cmp	eax, ebx
0x44a9:	mov	dword ptr [rip + 0x21cc29], eax
0x44af:	jge	0x26a6


0x44b5:	cdqe	
0x44b7:	mov	rdi, qword ptr [rbp + rax*8]
0x44bc:	call	0x8990


0x4457:	test	eax, eax
0x4459:	mov	rdx, qword ptr [rip + 0x21cea8]
0x4460:	je	0x44f9


0x44f9:	mov	qword ptr [rdx], 0
0x4500:	jmp	0x4469


0x4466:	mov	qword ptr [rdx], r13
0x4469:	add	r12d, 1
0x446d:	cmp	r12d, ebx
0x4470:	mov	dword ptr [rip + 0x21cc61], r12d
0x4477:	jge	0x26a6


0x2665:	mov	edi, 8
0x266a:	mov	qword ptr [rip + 0x21ec97], rax
0x2671:	call	0x98c0


0x2676:	mov	edi, 0x10
0x267b:	mov	qword ptr [rip + 0x21ec7e], rax
0x2682:	call	0x98c0


0x2687:	mov	qword ptr [rip + 0x21ec6a], rax
0x268e:	mov	rax, qword ptr [rip + 0x21ec73]
0x2695:	mov	dword ptr [rip + 0x21ec79], 1
0x269f:	mov	qword ptr [rax], 0
0x26a6:	cmp	dword ptr [rip + 0x21f1d7], 0
0x26ad:	jne	0x26c3


0x8a9f:	test	eax, eax
0x8aa1:	jne	0x8afb


0x8aa3:	sub	rbx, 1
0x8aa7:	cmp	rbx, rbp
0x8aaa:	ja	0x8b30


0x8afb:	mov	rdi, r12
0x8afe:	xor	r12d, r12d
0x8b01:	call	0x1c60


0x8ab0:	mov	rax, qword ptr [rsp + 8]
0x8ab5:	mov	byte ptr [r12 + rbp], 0
0x8aba:	mov	qword ptr [rax], rbp
0x8abd:	nop	dword ptr [rax]
0x8ac0:	mov	rcx, qword ptr [rsp + 0xa8]
0x8ac8:	xor	rcx, qword ptr fs:[0x28]
0x8ad1:	mov	rax, r12
0x8ad4:	jne	0x8b83


0x8b30:	lea	rsi, [rbp + 1]
0x8b34:	mov	rdi, r12
0x8b37:	call	0x1f90


0x8b3c:	test	rax, rax
0x8b3f:	cmovne	r12, rax
0x8b43:	mov	rax, qword ptr [rsp + 8]
0x8b48:	mov	byte ptr [r12 + rbp], 0
0x8b4d:	mov	qword ptr [rax], rbp
0x8b50:	jmp	0x8ac0


0x39de:	lea	rcx, [rip + 0x17eba]
0x39e5:	mov	rbp, rax
0x39e8:	mov	rdi, rax
0x39eb:	mov	r8, rbx
0x39ee:	or	rdx, 0xffffffffffffffff
0x39f2:	mov	esi, 1
0x39f7:	xor	eax, eax
0x39f9:	call	0x2100


0x39fe:	cdqe	
0x3a00:	add	rbp, rax
0x3a03:	mov	qword ptr [rip + 0x21d71e], rbp
0x3a0a:	mov	eax, dword ptr [rip + 0x21de74]
0x3a10:	cmp	eax, 2
0x3a13:	je	0x3ddb


0x3232:	mov	rdi, qword ptr [rip + 0x21e63f]
0x3239:	test	rdi, rdi
0x323c:	je	0x27a4


0x3242:	jmp	0x273e


0x5d4a:	mov	esi, dword ptr [rbx]
0x5d4c:	lea	rdx, [rip + 0x15cd0]
0x5d53:	mov	rcx, rax
0x5d56:	mov	r8, rbp
0x5d59:	xor	edi, edi
0x5d5b:	xor	eax, eax
0x5d5d:	call	0x2000


0x4f27:	mov	rsi, qword ptr [r12 + 0x10]
0x4f2c:	mov	rdi, rax
0x4f2f:	mov	qword ptr [r12], rax
0x4f33:	mov	rdx, qword ptr [rsp + 8]
0x4f38:	jmp	0x4eec


0x45d5:	mov	rbx, rax
0x45d8:	call	0x1c80


0x45dd:	mov	esi, dword ptr [rax]
0x45df:	lea	rdx, [rip + 0x1742e]
0x45e6:	mov	rcx, rbx
0x45e9:	mov	edi, 1
0x45ee:	xor	eax, eax
0x45f0:	call	0x2000


0x4df5:	mov	rbx, rax
0x4df8:	call	0x1c80


0x4dfd:	mov	esi, dword ptr [rax]
0x4dff:	lea	rdx, [rip + 0x16c0e]
0x4e06:	mov	rcx, rbx
0x4e09:	mov	edi, 1
0x4e0e:	xor	eax, eax
0x4e10:	call	0x2000


0x17120:	mov	rax, qword ptr [rsp + 8]
0x17125:	mov	rdi, qword ptr [r13 + 0xe0]
0x1712c:	mov	rdx, qword ptr [rax + 0x30]
0x17130:	test	rdx, rdx
0x17133:	je	0x17a24


0x17a24:	call	0x1c60


0x17139:	mov	rax, qword ptr [rdi]
0x1713c:	test	rax, rax
0x1713f:	je	0x1714e


0x1714e:	add	rax, 1
0x17152:	cmp	rdx, rax
0x17155:	ja	0x17148


0x17141:	jmp	0x1715d


0x17157:	je	0x17a24


0x17148:	cmp	qword ptr [rdi + rax*8], rax
0x1714c:	jne	0x1715d


0x17a29:	mov	qword ptr [r13 + 0xe0], 0
0x17a34:	jmp	0x1715d


0x5c53:	mov	rdx, r15
0x5c56:	mov	rsi, rbp
0x5c59:	mov	rdi, rbx
0x5c5c:	call	0x5ae0


0x5c61:	call	r13


0x44c1:	lea	rsi, [rip + 0x173c6]
0x44c8:	mov	rbx, rax
0x44cb:	mov	edx, 5
0x44d0:	xor	edi, edi
0x44d2:	call	0x1d80


0x44d7:	mov	rcx, rbx
0x44da:	mov	rdx, rax
0x44dd:	xor	esi, esi
0x44df:	xor	edi, edi
0x44e1:	xor	eax, eax
0x44e3:	call	0x2000


0x4593:	lea	rsi, [rip + 0x1710e]
0x459a:	mov	rbx, rax
0x459d:	mov	edx, 5
0x45a2:	xor	edi, edi
0x45a4:	call	0x1d80


0x45a9:	mov	rcx, rbx
0x45ac:	mov	rdx, rax
0x45af:	xor	esi, esi
0x45b1:	mov	edi, 1
0x45b6:	xor	eax, eax
0x45b8:	call	0x2000


0x4612:	lea	rsi, [rip + 0x17207]
0x4619:	mov	rbx, rax
0x461c:	mov	edx, 5
0x4621:	xor	edi, edi
0x4623:	call	0x1d80


0x4628:	mov	rcx, rbx
0x462b:	mov	rdx, rax
0x462e:	xor	esi, esi
0x4630:	mov	edi, 1
0x4635:	xor	eax, eax
0x4637:	call	0x2000


0x4648:	lea	rsi, [rip + 0x171e7]
0x464f:	mov	rbx, rax
0x4652:	mov	edx, 5
0x4657:	xor	edi, edi
0x4659:	call	0x1d80


0x465e:	mov	rcx, rbx
0x4661:	mov	rdx, rax
0x4664:	xor	esi, esi
0x4666:	mov	edi, 1
0x466b:	xor	eax, eax
0x466d:	call	0x2000


0x5b8e:	mov	rdi, qword ptr [rip + 0x21b56b]
0x5b95:	lea	rdx, [rip + 0x15e76]
0x5b9c:	mov	rcx, rax
0x5b9f:	mov	esi, 1
0x5ba4:	xor	eax, eax
0x5ba6:	call	0x2090


0x5bab:	mov	r15, qword ptr [r14 + rbx*8]
0x5baf:	test	r15, r15
0x5bb2:	jne	0x5b68


0x5b3f:	mov	rdi, qword ptr [rip + 0x21b5ba]
0x5b46:	lea	rdx, [rip + 0x15ebd]
0x5b4d:	mov	rcx, rax
0x5b50:	mov	esi, 1
0x5b55:	xor	eax, eax
0x5b57:	add	rbp, r12
0x5b5a:	call	0x2090


0x5b5f:	mov	r15, qword ptr [r14 + rbx*8]
0x5b63:	test	r15, r15
0x5b66:	je	0x5bb8


0x4d20:	lea	rsi, [rip + 0x169ba]
0x4d27:	mov	rbx, rax
0x4d2a:	mov	edx, 5
0x4d2f:	xor	edi, edi
0x4d31:	call	0x1d80


0x4d36:	mov	r8, rbx
0x4d39:	mov	rdx, rax
0x4d3c:	mov	rcx, r12
0x4d3f:	xor	esi, esi
0x4d41:	mov	edi, 1
0x4d46:	xor	eax, eax
0x4d48:	call	0x2000


0x4d4d:	nop	dword ptr [rax]


0x5a93:	mov	rdx, r12
0x5a96:	mov	rbp, rax
0x5a99:	mov	esi, 8
0x5a9e:	xor	edi, edi
0x5aa0:	call	0x85a0


0x5aa5:	mov	r8, rbp
0x5aa8:	mov	rdx, rbx
0x5aab:	mov	rcx, rax
0x5aae:	pop	rbx
0x5aaf:	pop	rbp
0x5ab0:	pop	r12
0x5ab2:	xor	esi, esi
0x5ab4:	xor	edi, edi
0x5ab6:	xor	eax, eax
0x5ab8:	jmp	0x2000


0x83fc:	lea	rsi, [rax + 1]
0x8400:	mov	qword ptr [rsp + 0x48], rax
0x8405:	add	rsp, 0x20
0x8409:	mov	rdi, rsi
0x840c:	mov	qword ptr [rsp + 0x18], rsi
0x8411:	call	0x98c0


0x8416:	mov	qword ptr [rsp + 0x10], rax
0x841b:	sub	rsp, 8
0x841f:	push	qword ptr [rbx + 0x30]
0x8422:	push	qword ptr [rbx + 0x28]
0x8425:	mov	r10, qword ptr [rsp + 0x38]
0x842a:	mov	r9d, ebp
0x842d:	mov	r8d, dword ptr [rbx]
0x8430:	mov	rcx, r15
0x8433:	mov	rdx, r14
0x8436:	mov	rdi, rax
0x8439:	push	r10
0x843b:	mov	rsi, qword ptr [rsp + 0x38]
0x8440:	call	0x6e10


0x8445:	mov	eax, dword ptr [rsp + 0x2c]
0x8449:	add	rsp, 0x20
0x844d:	test	r12, r12
0x8450:	mov	dword ptr [r13], eax
0x8454:	je	0x845f


0x845f:	mov	rax, qword ptr [rsp + 0x10]
0x8464:	add	rsp, 0x38
0x8468:	pop	rbx
0x8469:	pop	rbp
0x846a:	pop	r12
0x846c:	pop	r13
0x846e:	pop	r14
0x8470:	pop	r15
0x8472:	ret	


0x8456:	mov	r11, qword ptr [rsp + 0x28]
0x845b:	mov	qword ptr [r12], r11
0x845f:	mov	rax, qword ptr [rsp + 0x10]
0x8464:	add	rsp, 0x38
0x8468:	pop	rbx
0x8469:	pop	rbp
0x846a:	pop	r12
0x846c:	pop	r13
0x846e:	pop	r14
0x8470:	pop	r15
0x8472:	ret	


0x8371:	mov	dword ptr [rbp], r12d
0x8375:	add	rsp, 0x38
0x8379:	pop	rbx
0x837a:	pop	rbp
0x837b:	pop	r12
0x837d:	pop	r13
0x837f:	pop	r14
0x8381:	pop	r15
0x8383:	ret	


0x813c:	add	rsp, 0x20
0x8140:	mov	r11, qword ptr [rsp + 0x10]
0x8145:	cmp	r11, rax
0x8148:	ja	0x81b1


0x814a:	lea	rsi, [rax + 1]
0x814e:	lea	rax, [rip + 0x21976b]
0x8155:	cmp	r12, rax
0x8158:	mov	qword ptr [rbx], rsi
0x815b:	je	0x816f


0x81b1:	mov	eax, dword ptr [rsp + 0x18]
0x81b5:	mov	dword ptr [r13], eax
0x81b9:	add	rsp, 0x28
0x81bd:	mov	rax, r12
0x81c0:	pop	rbx
0x81c1:	pop	rbp
0x81c2:	pop	r12
0x81c4:	pop	r13
0x81c6:	pop	r14
0x81c8:	pop	r15
0x81ca:	ret	


0x816f:	mov	rdi, rsi
0x8172:	mov	qword ptr [rsp + 0x10], rsi
0x8177:	call	0x98c0


0x815d:	mov	rdi, r12
0x8160:	mov	qword ptr [rsp + 0x10], rsi
0x8165:	call	0x1c60


0x816a:	mov	rsi, qword ptr [rsp + 0x10]
0x816f:	mov	rdi, rsi
0x8172:	mov	qword ptr [rsp + 0x10], rsi
0x8177:	call	0x98c0


0x817c:	sub	rsp, 8
0x8180:	mov	qword ptr [rbx + 8], rax
0x8184:	mov	r8d, dword ptr [rbp]
0x8188:	push	qword ptr [rbp + 0x30]
0x818b:	push	qword ptr [rbp + 0x28]
0x818e:	mov	rcx, r14
0x8191:	push	r15
0x8193:	mov	r9d, dword ptr [rsp + 0x3c]
0x8198:	mov	rdi, rax
0x819b:	mov	rdx, qword ptr [rsp + 0x28]
0x81a0:	mov	rsi, qword ptr [rsp + 0x30]
0x81a5:	mov	r12, rax
0x81a8:	call	0x6e10


0x88c2:	mov	rdi, qword ptr [rsp + 0x38]
0x88c7:	xor	rdi, qword ptr fs:[0x28]
0x88d0:	jne	0x88dc


0x88d2:	add	rsp, 0x48
0x88d6:	ret	


0x88dc:	call	0x1db0


0x860f:	mov	rcx, qword ptr [rsp + 0x38]
0x8614:	xor	rcx, qword ptr fs:[0x28]
0x861d:	jne	0x8629


0x861f:	add	rsp, 0x48
0x8623:	ret	


0x8629:	call	0x1db0


0x869b:	mov	rdx, qword ptr [rsp + 0x38]
0x86a0:	xor	rdx, qword ptr fs:[0x28]
0x86a9:	jne	0x86b5


0x86ab:	add	rsp, 0x48
0x86af:	ret	


0x86b5:	call	0x1db0


0x882f:	mov	rcx, qword ptr [rsp + 0x38]
0x8834:	xor	rcx, qword ptr fs:[0x28]
0x883d:	jne	0x8849


0x883f:	add	rsp, 0x48
0x8843:	ret	


0x8849:	call	0x1db0


0x875e:	mov	rsi, qword ptr [rsp + 0x38]
0x8763:	xor	rsi, qword ptr fs:[0x28]
0x876c:	jne	0x8773


0x876e:	add	rsp, 0x48
0x8772:	ret	


0x8773:	call	0x1db0


0x81ad:	add	rsp, 0x20
0x81b1:	mov	eax, dword ptr [rsp + 0x18]
0x81b5:	mov	dword ptr [r13], eax
0x81b9:	add	rsp, 0x28
0x81bd:	mov	rax, r12
0x81c0:	pop	rbx
0x81c1:	pop	rbp
0x81c2:	pop	r12
0x81c4:	pop	r13
0x81c6:	pop	r14
0x81c8:	pop	r15
0x81ca:	ret	


0x17172:	test	eax, eax
0x17174:	jne	0x16e20


0x1717a:	mov	rdi, qword ptr [r13 + 0x68]
0x1717e:	lea	rsi, [rip - 0x7c05]
0x17185:	mov	rdx, r13
0x17188:	call	0xa830


0x1718d:	test	eax, eax
0x1718f:	jne	0x16e20


0x17195:	mov	rdi, qword ptr [r13 + 0x68]
0x17199:	lea	rsi, [rip - 0xb000]
0x171a0:	mov	rdx, r13
0x171a3:	call	0xa8a0


0x171a8:	mov	rdx, qword ptr [r13 + 0x68]
0x171ac:	lea	rsi, [rip + 0x5a55]
0x171b3:	nop	dword ptr [rax + rax]
0x171b8:	movzx	ecx, byte ptr [rdx + 0x30]
0x171bc:	mov	rdi, qword ptr [rdx + 0x38]
0x171c0:	cmp	cl, 0x10
0x171c3:	ja	0x17298


0x171c9:	movzx	eax, cl
0x171cc:	movsxd	rax, dword ptr [rsi + rax*4]
0x171d0:	add	rax, rsi
0x171d3:	jmp	rax


0x17298:	and	ecx, 8
0x1729b:	jne	0x17bb2


0x172a1:	mov	rax, qword ptr [rdx + 0x20]
0x172a5:	mov	rcx, qword ptr [rax + 0x38]
0x172a9:	mov	rax, qword ptr [r13 + 0x18]
0x172ad:	mov	qword ptr [rax + rdi*8], rcx
0x172b1:	mov	r15, qword ptr [rdx + 8]
0x172b5:	xor	edi, edi
0x172b7:	test	r15, r15
0x172ba:	je	0x172cb


0x17bb2:	lea	rcx, [rip + 0x5107]
0x17bb9:	lea	rsi, [rip + 0x4b30]
0x17bc0:	lea	rdi, [rip + 0x4b49]
0x17bc7:	mov	edx, 0x5c2
0x17bcc:	call	0x1e30


0x172cb:	mov	r15, qword ptr [rdx + 0x10]
0x172cf:	test	r15, r15
0x172d2:	sete	cl
0x172d5:	cmp	r15, rdi
0x172d8:	sete	al
0x172db:	or	cl, al
0x172dd:	mov	byte ptr [rsp + 0x10], cl
0x172e1:	je	0x172bc


0x172bc:	mov	rdx, r15
0x172bf:	jmp	0x171b8


0x172e3:	mov	rax, qword ptr [rdx]
0x172e6:	mov	rdi, rdx
0x172e9:	test	rax, rax
0x172ec:	jne	0x172c8


0x171b8:	movzx	ecx, byte ptr [rdx + 0x30]
0x171bc:	mov	rdi, qword ptr [rdx + 0x38]
0x171c0:	cmp	cl, 0x10
0x171c3:	ja	0x17298


0x172ee:	xor	r14d, r14d
0x172f1:	xor	r15d, r15d
0x172f4:	nop	dword ptr [rax]
0x172f8:	mov	rdx, qword ptr [r13 + 0x10]
0x172fc:	cmp	rdx, r15
0x172ff:	je	0x17326


0x172c8:	mov	rdx, rax
0x172cb:	mov	r15, qword ptr [rdx + 0x10]
0x172cf:	test	r15, r15
0x172d2:	sete	cl
0x172d5:	cmp	r15, rdi
0x172d8:	sete	al
0x172db:	or	cl, al
0x172dd:	mov	byte ptr [rsp + 0x10], cl
0x172e1:	je	0x172bc


0x17326:	test	r14b, r14b
0x17329:	je	0x1756e


0x17301:	lea	r10, [r15 + r15*2]
0x17305:	mov	rax, qword ptr [r13 + 0x30]
0x17309:	shl	r10, 3
0x1730d:	cmp	qword ptr [rax + r10 + 8], 0
0x17313:	je	0x17518


0x1756e:	mov	rax, qword ptr [rsp + 8]
0x17573:	test	byte ptr [rax + 0x38], 0x10
0x17577:	jne	0x1758a


0x1732f:	xor	r14d, r14d
0x17332:	xor	r15d, r15d
0x17335:	jmp	0x17301


0x17518:	mov	ecx, 1
0x1751d:	mov	rdx, r15
0x17520:	mov	rsi, r13
0x17523:	mov	rdi, r12
0x17526:	mov	qword ptr [rsp], r10
0x1752a:	call	0xc650


0x17319:	mov	rdx, qword ptr [r13 + 0x10]
0x1731d:	add	r15, 1
0x17321:	cmp	rdx, r15
0x17324:	jne	0x17301


0x17579:	cmp	qword ptr [rax + 0x30], 0
0x1757e:	je	0x1758a


0x1758a:	cmp	qword ptr [r13 + 0x98], 0
0x17592:	je	0x1768b


0x17580:	test	byte ptr [r13 + 0xb0], 1
0x17588:	jne	0x17598


0x1768b:	movzx	eax, byte ptr [rbx + 0xb0]
0x17692:	mov	dword ptr [rsp + 0x4c], 0
0x1769a:	shr	al, 2
0x1769d:	cmp	qword ptr [rsp + 0x20], 0
0x176a3:	sete	dl
0x176a6:	and	al, dl
0x176a8:	jne	0x1788f


0x17598:	lea	rdi, [rdx + rdx*2]
0x1759c:	mov	qword ptr [rsp], rdx
0x175a0:	shl	rdi, 3
0x175a4:	call	0x1f20


0x176ae:	mov	rax, qword ptr [rbx + 0x68]
0x176b2:	mov	rdi, r12
0x176b5:	mov	rax, qword ptr [rax + 0x18]
0x176b9:	mov	rax, qword ptr [rax + 0x38]
0x176bd:	lea	rdx, [rax + rax*2]
0x176c1:	mov	qword ptr [rbx + 0x90], rax
0x176c8:	mov	rax, qword ptr [rbx + 0x30]
0x176cc:	lea	rsi, [rax + rdx*8]
0x176d0:	call	0xd0b0


0x1788f:	mov	rcx, qword ptr [rsp + 8]
0x17894:	cmp	qword ptr [rcx + 0x28], 0
0x17899:	jne	0x176ae


0x1789f:	mov	r10, qword ptr [rbx + 0x10]
0x178a3:	test	r10, r10
0x178a6:	je	0x17b5a


0x17b5a:	cmp	qword ptr [rbx + 0x98], 0
0x17b62:	movzx	edx, byte ptr [rbx + 0xb0]
0x17b69:	mov	dword ptr [rbx + 0xb4], 1
0x17b73:	setg	al
0x17b76:	and	edx, 0xfffffff9
0x17b79:	or	eax, r14d
0x17b7c:	and	eax, 1
0x17b7f:	add	eax, eax
0x17b81:	or	eax, edx
0x17b83:	mov	byte ptr [rbx + 0xb0], al
0x17b89:	jmp	0x176ae


0x178ac:	mov	rsi, qword ptr [rbx]
0x178af:	lea	r9, [rip + 0x5396]
0x178b6:	xor	r8d, r8d
0x178b9:	xor	edx, edx
0x178bb:	mov	rcx, rsi
0x178be:	cmp	byte ptr [rcx + 8], 0xc
0x178c2:	ja	0x17b8e


0x178c8:	movzx	edi, byte ptr [rcx + 8]
0x178cc:	movsxd	rdi, dword ptr [r9 + rdi*4]
0x178d0:	add	rdi, r9
0x178d3:	jmp	rdi


0x17b8e:	call	0x1c70


0x176d5:	test	eax, eax
0x176d7:	mov	r15d, eax
0x176da:	mov	dword ptr [rsp + 0x50], eax
0x176de:	jne	0x177ff


0x176e4:	cmp	qword ptr [rbx + 0x98], 0
0x176ec:	jle	0x177c0


0x177ff:	mov	rax, qword ptr [rsp + 8]
0x17804:	mov	dword ptr [rsp + 0x4c], r15d
0x17809:	mov	r13, qword ptr [rax]
0x1780c:	mov	rdi, qword ptr [r13 + 0x70]
0x17810:	test	rdi, rdi
0x17813:	je	0x17828


0x177c0:	mov	rdi, qword ptr [rsp + 0x28]
0x177c5:	xor	ecx, ecx
0x177c7:	mov	rdx, r12
0x177ca:	mov	rsi, rbx
0x177cd:	call	0xd2a0


0x176f2:	mov	r9, qword ptr [rsp + 0x68]
0x176f7:	test	r9, r9
0x176fa:	jle	0x177c0


0x17828:	mov	rdi, qword ptr [r13 + 0x20]
0x1782c:	mov	qword ptr [r13 + 0x70], 0
0x17834:	mov	dword ptr [r13 + 0x80], 0xf
0x1783f:	mov	qword ptr [r13 + 0x68], 0
0x17847:	call	0x1c60


0x17700:	xor	r10d, r10d
0x17703:	lea	r13, [r12 + 0x10]
0x17708:	jmp	0x1771d


0x1771d:	mov	rcx, qword ptr [rsp + 0x70]
0x17722:	mov	rsi, qword ptr [rbx]
0x17725:	mov	r8, qword ptr [rcx + r10*8]
0x17729:	mov	rdi, r8
0x1772c:	shl	rdi, 4
0x17730:	add	rdi, rsi
0x17733:	cmp	byte ptr [rdi + 8], 4
0x17737:	jne	0x17710


0x17739:	xor	edx, edx
0x1773b:	jmp	0x17749


0x17710:	add	r10, 1
0x17714:	cmp	r9, r10
0x17717:	jle	0x177c0


0x17749:	mov	rax, qword ptr [rcx + rdx*8]
0x1774d:	shl	rax, 4
0x17751:	add	rax, rsi
0x17754:	cmp	byte ptr [rax + 8], 9
0x17758:	jne	0x17740


0x1775a:	mov	r11, qword ptr [rdi]
0x1775d:	cmp	qword ptr [rax], r11
0x17760:	jne	0x17740


0x17740:	add	rdx, 1
0x17744:	cmp	r9, rdx
0x17747:	je	0x17710


0x17762:	mov	rdx, qword ptr [rbx + 0x28]
0x17766:	lea	rax, [r8 + r8*2]
0x1776a:	mov	rsi, r13
0x1776d:	mov	rdi, r9
0x17770:	lea	rax, [rdx + rax*8]
0x17774:	mov	rax, qword ptr [rax + 0x10]
0x17778:	mov	r11, qword ptr [rax]
0x1777b:	mov	rdx, r11
0x1777e:	call	0xbf50


0x17783:	test	rax, rax
0x17786:	jne	0x17710


0x17788:	mov	rax, qword ptr [rbx + 0x30]
0x1778c:	lea	rdx, [r11 + r11*2]
0x17790:	mov	rdi, r12
0x17793:	lea	rsi, [rax + rdx*8]
0x17797:	call	0xc470


0x1779c:	test	eax, eax
0x1779e:	jne	0x17ae0


0x177a4:	mov	r9, qword ptr [rsp + 0x68]
0x177a9:	mov	r10d, 1
0x177af:	cmp	r9, r10
0x177b2:	jg	0x1771d


0x17ae0:	mov	r15d, eax
0x17ae3:	jmp	0x177ff


0x17820:	test	r12, r12
0x17823:	mov	rdi, r12
0x17826:	jne	0x17818


0x17818:	mov	r12, qword ptr [rdi]
0x1781b:	call	0x1c60


0x1784c:	mov	qword ptr [r13 + 0x20], 0
0x17854:	mov	rdi, rbp
0x17857:	call	0xbc40


0x1785c:	mov	eax, dword ptr [rsp + 0x4c]
0x17860:	test	eax, eax
0x17862:	je	0x16e9c


0x17868:	jmp	0x16e7c


0x177d2:	test	rax, rax
0x177d5:	mov	qword ptr [rbx + 0x48], rax
0x177d9:	je	0x17942


0x17942:	mov	r15d, dword ptr [rsp + 0x50]
0x17947:	jmp	0x177ff


0x177df:	cmp	byte ptr [rax + 0x68], 0
0x177e3:	js	0x178e1


0x178e1:	mov	r14, qword ptr [rsp + 0x28]
0x178e6:	mov	ecx, 1
0x178eb:	mov	rdx, r12
0x178ee:	mov	rsi, rbx
0x178f1:	mov	rdi, r14
0x178f4:	call	0xd2a0


0x177e9:	mov	qword ptr [rbx + 0x60], rax
0x177ed:	mov	qword ptr [rbx + 0x58], rax
0x177f1:	mov	qword ptr [rbx + 0x50], rax
0x177f5:	mov	rdi, qword ptr [rsp + 0x70]
0x177fa:	call	0x1c60


0x178f9:	mov	ecx, 2
0x178fe:	mov	rdx, r12
0x17901:	mov	rsi, rbx
0x17904:	mov	rdi, r14
0x17907:	mov	qword ptr [rbx + 0x50], rax
0x1790b:	call	0xd2a0


0x17910:	mov	ecx, 6
0x17915:	mov	qword ptr [rbx + 0x58], rax
0x17919:	mov	rdx, r12
0x1791c:	mov	rsi, rbx
0x1791f:	mov	rdi, r14
0x17922:	call	0xd2a0


0x17927:	cmp	qword ptr [rbx + 0x50], 0
0x1792c:	mov	qword ptr [rbx + 0x60], rax
0x17930:	je	0x17942


0x17932:	cmp	qword ptr [rbx + 0x58], 0
0x17937:	je	0x17942


0x17939:	test	rax, rax
0x1793c:	jne	0x177f5


0x177f5:	mov	rdi, qword ptr [rsp + 0x70]
0x177fa:	call	0x1c60


0x175a9:	test	rax, rax
0x175ac:	mov	qword ptr [r13 + 0x38], rax
0x175b0:	je	0x17afc


0x17afc:	mov	rax, qword ptr [rsp + 8]
0x17b01:	mov	dword ptr [rsp + 0x4c], 0xc
0x17b09:	mov	r13, qword ptr [rax]
0x17b0c:	jmp	0x16e2c


0x175b6:	mov	rdx, qword ptr [rsp]
0x175ba:	xor	esi, esi
0x175bc:	xor	ecx, ecx
0x175be:	test	rdx, rdx
0x175c1:	jne	0x175d4


0x175c3:	jmp	0x1768b


0x175d4:	pxor	xmm0, xmm0
0x175d8:	add	rax, rsi
0x175db:	add	rcx, 1
0x175df:	mov	qword ptr [rax + 0x10], 0
0x175e7:	add	rsi, 0x18
0x175eb:	movups	xmmword ptr [rax], xmm0
0x175ee:	mov	rax, qword ptr [r13 + 0x10]
0x175f2:	cmp	rcx, rax
0x175f5:	jb	0x175d0


0x175d0:	mov	rax, qword ptr [r13 + 0x38]
0x175d4:	pxor	xmm0, xmm0
0x175d8:	add	rax, rsi
0x175db:	add	rcx, 1
0x175df:	mov	qword ptr [rax + 0x10], 0
0x175e7:	add	rsi, 0x18
0x175eb:	movups	xmmword ptr [rax], xmm0
0x175ee:	mov	rax, qword ptr [r13 + 0x10]
0x175f2:	cmp	rcx, rax
0x175f5:	jb	0x175d0


0x175f7:	test	rax, rax
0x175fa:	je	0x1768b


0x17600:	mov	rax, qword ptr [r13 + 0x30]
0x17604:	mov	qword ptr [rsp + 0x18], 0
0x1760d:	mov	qword ptr [rsp + 0x10], 0
0x17616:	mov	rcx, qword ptr [rsp + 0x18]
0x1761b:	lea	rdx, [rax + rcx]
0x1761f:	cmp	qword ptr [rdx + 8], 0
0x17624:	mov	rcx, qword ptr [rdx + 0x10]
0x17628:	jle	0x17674


0x17674:	add	qword ptr [rsp + 0x10], 1
0x1767a:	add	qword ptr [rsp + 0x18], 0x18
0x17680:	mov	rdx, qword ptr [rsp + 0x10]
0x17685:	cmp	rdx, qword ptr [r13 + 0x10]
0x17689:	jb	0x17616


0x1762a:	xor	r15d, r15d
0x1762d:	jmp	0x17648


0x17616:	mov	rcx, qword ptr [rsp + 0x18]
0x1761b:	lea	rdx, [rax + rcx]
0x1761f:	cmp	qword ptr [rdx + 8], 0
0x17624:	mov	rcx, qword ptr [rdx + 0x10]
0x17628:	jle	0x17674


0x17648:	mov	rax, qword ptr [rcx + r15*8]
0x1764c:	mov	qword ptr [rsp], rcx
0x17650:	lea	rsi, [rax + rax*2]
0x17654:	mov	rax, qword ptr [r13 + 0x38]
0x17658:	lea	rdi, [rax + rsi*8]
0x1765c:	mov	rsi, qword ptr [rsp + 0x10]
0x17661:	call	0xa9a0


0x17666:	test	al, al
0x17668:	jne	0x17630


0x1766a:	mov	eax, 0xc
0x1766f:	jmp	0x16e20


0x17630:	mov	rax, qword ptr [r13 + 0x30]
0x17634:	mov	rdx, qword ptr [rsp + 0x18]
0x17639:	add	r15, 1
0x1763d:	mov	rcx, qword ptr [rsp]
0x17641:	cmp	r15, qword ptr [rax + rdx + 8]
0x17646:	jge	0x17674


0x1752f:	test	eax, eax
0x17531:	jne	0x16e20


0x17537:	mov	rax, qword ptr [r13 + 0x30]
0x1753b:	mov	r10, qword ptr [rsp]
0x1753f:	add	r15, 1
0x17543:	cmp	qword ptr [rax + r10 + 8], 0
0x17549:	jne	0x172f8


0x1754f:	mov	rdi, qword ptr [rsp + 0x70]
0x17554:	call	0x1c60


0x172f8:	mov	rdx, qword ptr [r13 + 0x10]
0x172fc:	cmp	rdx, r15
0x172ff:	je	0x17326


0x17559:	cmp	qword ptr [r13 + 0x10], r15
0x1755d:	je	0x1732f


0x17563:	movzx	r14d, byte ptr [rsp + 0x10]
0x17569:	jmp	0x17301


0x16951:	lea	rsi, [rip - 0xb288]
0x16958:	mov	rdi, r14
0x1695b:	xor	edx, edx
0x1695d:	xor	r14d, r14d
0x16960:	call	0xa830


0x16965:	mov	dword ptr [rbx], 0xc
0x1696b:	jmp	0x168f0


0x4ddd:	test	rax, rax
0x4de0:	mov	qword ptr [rbp], rax
0x4de4:	jne	0x4d92


0x5c64:	mov	rax, -1
0x5c6b:	jmp	0x5c36


0x1ae9d:	add	rbx, 1
0x1aea1:	cmp	rbp, rbx
0x1aea4:	jne	0x1ae90


0x1ae90:	mov	rdx, r15
0x1ae93:	mov	rsi, r14
0x1ae96:	mov	edi, r13d
0x1ae99:	call	qword ptr [r12 + rbx*8]


0xa85e:	test	eax, eax
0xa860:	jne	0xa896


0xa896:	pop	rbx
0xa897:	pop	rbp
0xa898:	pop	r12
0xa89a:	ret	


0xa870:	mov	rax, qword ptr [rdx + 0x10]
0xa874:	cmp	rax, rbx
0xa877:	mov	rbx, rdx
0xa87a:	sete	sil
0xa87e:	test	rax, rax
0xa881:	sete	cl
0xa884:	or	sil, cl
0xa887:	je	0xa840


0xa889:	mov	rsi, rbx
0xa88c:	mov	rdi, rbp
0xa88f:	call	r12


0xa892:	test	eax, eax
0xa894:	je	0xa868


0xa868:	mov	rdx, qword ptr [rbx]
0xa86b:	test	rdx, rdx
0xa86e:	je	0xa896


0xa8bc:	test	eax, eax
0xa8be:	jne	0xa8ec


0xa8c0:	mov	rdx, qword ptr [rbx + 8]
0xa8c4:	xor	ecx, ecx
0xa8c6:	test	rdx, rdx
0xa8c9:	jne	0xa8b0


0xa8ec:	pop	rbx
0xa8ed:	pop	rbp
0xa8ee:	pop	r12
0xa8f0:	ret	


0xa8cb:	jmp	0xa8d3


0xa8b0:	mov	rbx, rdx
0xa8b3:	mov	rsi, rbx
0xa8b6:	mov	rdi, rbp
0xa8b9:	call	r12


0xa8d3:	mov	rdx, qword ptr [rbx + 0x10]
0xa8d7:	cmp	rdx, rcx
0xa8da:	je	0xa8e1


0xa8e1:	mov	rdx, qword ptr [rbx]
0xa8e4:	mov	rcx, rbx
0xa8e7:	test	rdx, rdx
0xa8ea:	jne	0xa8d0


0xa8dc:	test	rdx, rdx
0xa8df:	jne	0xa8b0


0xa8d0:	mov	rbx, rdx
0xa8d3:	mov	rdx, qword ptr [rbx + 0x10]
0xa8d7:	cmp	rdx, rcx
0xa8da:	je	0xa8e1






0x133c2:	cmp	qword ptr [rsp + 0x70], rbp
0x133c7:	jle	0x12eff


0x13434:	cmp	qword ptr [rsp + 0x90], rbp
0x1343c:	jg	0x138d9


0x12e9e:	cmp	qword ptr [rsp + 0x70], rbp
0x12ea3:	jle	0x12eff


0x94e0:	mov	r13, qword ptr [rbx + 0x10]
0x94e4:	mov	r12, qword ptr [rbx + 8]
0x94e8:	lea	rsi, [rip + 0x12d71]
0x94ef:	mov	rbx, qword ptr [rbx]
0x94f2:	mov	edx, 5
0x94f7:	xor	edi, edi
0x94f9:	call	0x1d80


0x9620:	mov	r9, qword ptr [rbx + 0x10]
0x9624:	mov	r13, qword ptr [rbx + 0x30]
0x9628:	lea	rsi, [rip + 0x12dd1]
0x962f:	mov	r12, qword ptr [rbx + 0x28]
0x9633:	mov	r15, qword ptr [rbx + 0x20]
0x9637:	mov	edx, 5
0x963c:	mov	r14, qword ptr [rbx + 0x18]
0x9640:	mov	r8, qword ptr [rbx + 8]
0x9644:	xor	edi, edi
0x9646:	mov	qword ptr [rsp + 8], r9
0x964b:	mov	rbx, qword ptr [rbx]
0x964e:	mov	qword ptr [rsp], r8
0x9652:	call	0x1d80


0x9400:	mov	r10, qword ptr [rbx + 0x40]
0x9404:	mov	r9, qword ptr [rbx + 0x38]
0x9408:	lea	rsi, [rip + 0x13051]
0x940f:	mov	rax, qword ptr [rbx + 0x10]
0x9413:	mov	r8, qword ptr [rbx + 8]
0x9417:	mov	edx, 5
0x941c:	mov	r13, qword ptr [rbx + 0x30]
0x9420:	mov	r12, qword ptr [rbx + 0x28]
0x9424:	mov	r15, qword ptr [rbx + 0x20]
0x9428:	mov	r14, qword ptr [rbx + 0x18]
0x942c:	mov	rbx, qword ptr [rbx]
0x942f:	mov	qword ptr [rsp + 0x18], r10
0x9434:	mov	qword ptr [rsp + 0x10], r9
0x9439:	mov	qword ptr [rsp], rax
0x943d:	mov	qword ptr [rsp + 8], r8
0x9442:	xor	edi, edi
0x9444:	call	0x1d80


0x93c6:	add	rsp, 0x28
0x93ca:	pop	rbx
0x93cb:	pop	rbp
0x93cc:	pop	r12
0x93ce:	pop	r13
0x93d0:	pop	r14
0x93d2:	pop	r15
0x93d4:	ret	


0x95b8:	mov	r8, qword ptr [rbx + 8]
0x95bc:	mov	r12, qword ptr [rbx + 0x28]
0x95c0:	lea	rsi, [rip + 0x12e11]
0x95c7:	mov	r15, qword ptr [rbx + 0x20]
0x95cb:	mov	r14, qword ptr [rbx + 0x18]
0x95cf:	mov	edx, 5
0x95d4:	mov	r13, qword ptr [rbx + 0x10]
0x95d8:	xor	edi, edi
0x95da:	mov	rbx, qword ptr [rbx]
0x95dd:	mov	qword ptr [rsp], r8
0x95e1:	call	0x1d80


0x9588:	mov	r15, qword ptr [rbx + 0x20]
0x958c:	lea	rsi, [rip + 0x12e1d]
0x9593:	mov	edx, 5
0x9598:	xor	edi, edi
0x959a:	mov	r14, qword ptr [rbx + 0x18]
0x959e:	mov	r13, qword ptr [rbx + 0x10]
0x95a2:	mov	r12, qword ptr [rbx + 8]
0x95a6:	mov	rbx, qword ptr [rbx]
0x95a9:	call	0x1d80


0x9530:	lea	rsi, [rip + 0x12e59]
0x9537:	mov	edx, 5
0x953c:	xor	edi, edi
0x953e:	mov	r14, qword ptr [rbx + 0x18]
0x9542:	mov	r13, qword ptr [rbx + 0x10]
0x9546:	mov	r12, qword ptr [rbx + 8]
0x954a:	mov	rbx, qword ptr [rbx]
0x954d:	call	0x1d80


0x9350:	mov	r9, qword ptr [rbx + 0x38]
0x9354:	mov	rax, qword ptr [rbx + 0x10]
0x9358:	lea	rsi, [rip + 0x130d1]
0x935f:	mov	r8, qword ptr [rbx + 8]
0x9363:	mov	edx, 5
0x9368:	xor	edi, edi
0x936a:	mov	r13, qword ptr [rbx + 0x30]
0x936e:	mov	r12, qword ptr [rbx + 0x28]
0x9372:	mov	qword ptr [rsp + 0x10], r9
0x9377:	mov	r15, qword ptr [rbx + 0x20]
0x937b:	mov	r14, qword ptr [rbx + 0x18]
0x937f:	mov	qword ptr [rsp], rax
0x9383:	mov	qword ptr [rsp + 8], r8
0x9388:	mov	rbx, qword ptr [rbx]
0x938b:	call	0x1d80


0x9458:	mov	rbx, qword ptr [rbx]
0x945b:	lea	rsi, [rip + 0x12dd7]
0x9462:	mov	edx, 5
0x9467:	xor	edi, edi
0x9469:	call	0x1d80


0x9498:	mov	r12, qword ptr [rbx + 8]
0x949c:	lea	rsi, [rip + 0x12da6]
0x94a3:	mov	rbx, qword ptr [rbx]
0x94a6:	mov	edx, 5
0x94ab:	xor	edi, edi
0x94ad:	call	0x1d80


0x12eff:	cmp	qword ptr [rsp + 0x70], rbp
0x12f04:	jne	0x12f48


0x133cd:	mov	rax, qword ptr [rsp + 0x78]
0x133d2:	mov	rdi, qword ptr [rsp + 0xb0]
0x133da:	mov	rsi, qword ptr [rsp + 0x68]
0x133df:	movzx	eax, byte ptr [rax + rbp]
0x133e3:	movzx	edx, byte ptr [rdi + rax]
0x133e7:	lea	rax, [rbp + 1]
0x133eb:	cmp	byte ptr [rsi + rdx], 0
0x133ef:	jne	0x12f48


0x13442:	xor	ecx, ecx
0x13444:	mov	rax, rbp
0x13447:	mov	rdi, qword ptr [rsp + 0x68]
0x1344c:	mov	rsi, qword ptr [rsp + 0xb0]
0x13454:	mov	r9, qword ptr [rsp + 0x90]
0x1345c:	mov	r10, qword ptr [rsp + 0x78]
0x13461:	mov	r8, qword ptr [rsp + 0x88]
0x13469:	jmp	0x13482


0x12ea5:	mov	rax, qword ptr [rsp + 0x78]
0x12eaa:	mov	rdi, qword ptr [rsp + 0x68]
0x12eaf:	movzx	edx, byte ptr [rax + rbp]
0x12eb3:	lea	rax, [rbp + 1]
0x12eb7:	cmp	byte ptr [rdi + rdx], 0
0x12ebb:	jne	0x12f48


0x12f06:	xor	eax, eax
0x12f08:	mov	rsi, qword ptr [rsp + 0x70]
0x12f0d:	cmp	qword ptr [rsp + 0x88], rsi
0x12f15:	jle	0x12f20


0x133f5:	mov	rsi, qword ptr [rsp + 0x68]
0x133fa:	mov	rdi, qword ptr [rsp + 0xb0]
0x13402:	mov	rcx, qword ptr [rsp + 0x70]
0x13407:	mov	r8, qword ptr [rsp + 0x78]
0x1340c:	jmp	0x13427


0x13482:	xor	edx, edx
0x13484:	cmp	r8, rax
0x13487:	jle	0x1348e


0x12ec1:	mov	rsi, qword ptr [rsp + 0x68]
0x12ec6:	mov	rcx, qword ptr [rsp + 0x70]
0x12ecb:	mov	rdi, qword ptr [rsp + 0x78]
0x12ed0:	jmp	0x12eea


0x12f20:	mov	rsi, qword ptr [rsp + 0xb0]
0x12f28:	test	rsi, rsi
0x12f2b:	je	0x12f31


0x12f17:	mov	rax, qword ptr [rsp + 0x78]
0x12f1c:	movzx	eax, byte ptr [rax + rsi]
0x12f20:	mov	rsi, qword ptr [rsp + 0xb0]
0x12f28:	test	rsi, rsi
0x12f2b:	je	0x12f31


0x13427:	cmp	rcx, rax
0x1342a:	mov	rbp, rax
0x1342d:	jne	0x13410


0x1348e:	test	rsi, rsi
0x13491:	je	0x13497


0x13489:	movzx	edx, byte ptr [r10 + rax]
0x1348e:	test	rsi, rsi
0x13491:	je	0x13497


0x12eea:	cmp	rcx, rax
0x12eed:	mov	rbp, rax
0x12ef0:	jne	0x12ed8


0x12f31:	mov	rdi, qword ptr [rsp + 0x68]
0x12f36:	cmp	byte ptr [rdi + rax], 0
0x12f3a:	je	0x138d9


0x12f2d:	movzx	eax, byte ptr [rsi + rax]
0x12f31:	mov	rdi, qword ptr [rsp + 0x68]
0x12f36:	cmp	byte ptr [rdi + rax], 0
0x12f3a:	je	0x138d9


0x1342f:	jmp	0x12ef2


0x13410:	movzx	eax, byte ptr [r8 + rax]
0x13415:	movzx	edx, byte ptr [rdi + rax]
0x13419:	lea	rax, [rbp + 1]
0x1341d:	cmp	byte ptr [rsi + rdx], 0
0x13421:	jne	0x14081


0x13497:	cmp	byte ptr [rdi + rdx], 0
0x1349b:	je	0x13470


0x13493:	movzx	edx, byte ptr [rsi + rdx]
0x13497:	cmp	byte ptr [rdi + rdx], 0
0x1349b:	je	0x13470


0x12ef2:	mov	rax, qword ptr [rsp + 0x70]
0x12ef7:	mov	qword ptr [rsp + 0xd8], rax
0x12eff:	cmp	qword ptr [rsp + 0x70], rbp
0x12f04:	jne	0x12f48


0x12ed8:	movzx	edx, byte ptr [rdi + rax]
0x12edc:	lea	rax, [rax + 1]
0x12ee0:	cmp	byte ptr [rsi + rdx], 0
0x12ee4:	jne	0x14081


0x12f40:	mov	rbp, qword ptr [rsp + 0x70]
0x12f45:	nop	dword ptr [rax]
0x12f48:	mov	edx, dword ptr [rsp + 0x280]
0x12f4f:	mov	rdi, qword ptr [rsp]
0x12f53:	mov	rsi, rbp
0x12f56:	call	0xe000


0x14081:	mov	qword ptr [rsp + 0xd8], rbp
0x14089:	jmp	0x12f48


0x13470:	sub	rax, 1
0x13474:	mov	ecx, 1
0x13479:	cmp	rax, r9
0x1347c:	jl	0x13e60


0x1349d:	test	cl, cl
0x1349f:	je	0x12f48


0x13e60:	mov	qword ptr [rsp + 0xd8], rax
0x13e68:	mov	rdi, qword ptr [rsp + 0x1d8]
0x13e70:	mov	dword ptr [rsp + 0x5c], 1
0x13e78:	jmp	0x134c8


0x134a5:	mov	qword ptr [rsp + 0xd8], rax
0x134ad:	mov	rbp, rax
0x134b0:	jmp	0x12f48


0x94b2:	add	rsp, 0x28
0x94b6:	mov	r8, r12
0x94b9:	mov	rcx, rbx
0x94bc:	mov	rdi, rbp
0x94bf:	mov	rdx, rax
0x94c2:	mov	esi, 1
0x94c7:	pop	rbx
0x94c8:	pop	rbp
0x94c9:	pop	r12
0x94cb:	pop	r13
0x94cd:	pop	r14
0x94cf:	pop	r15
0x94d1:	xor	eax, eax
0x94d3:	jmp	0x2090


0x946e:	add	rsp, 0x28
0x9472:	mov	rcx, rbx
0x9475:	mov	rdi, rbp
0x9478:	pop	rbx
0x9479:	pop	rbp
0x947a:	pop	r12
0x947c:	pop	r13
0x947e:	pop	r14
0x9480:	pop	r15
0x9482:	mov	rdx, rax
0x9485:	mov	esi, 1
0x948a:	xor	eax, eax
0x948c:	jmp	0x2090


0x9390:	sub	rsp, 8
0x9394:	mov	r9, qword ptr [rsp + 0x18]
0x9399:	mov	rdx, rax
0x939c:	mov	rcx, rbx
0x939f:	mov	esi, 1
0x93a4:	mov	rdi, rbp
0x93a7:	xor	eax, eax
0x93a9:	push	r9
0x93ab:	push	r13
0x93ad:	push	r12
0x93af:	push	r15
0x93b1:	push	r14
0x93b3:	mov	r9, qword ptr [rsp + 0x30]
0x93b8:	mov	r8, qword ptr [rsp + 0x38]
0x93bd:	call	0x2090


0x9552:	sub	rsp, 8
0x9556:	push	r14
0x9558:	mov	rdx, rax
0x955b:	mov	r9, r13
0x955e:	mov	r8, r12
0x9561:	mov	rcx, rbx
0x9564:	mov	rdi, rbp
0x9567:	mov	esi, 1
0x956c:	xor	eax, eax
0x956e:	call	0x2090


0x9573:	pop	rax
0x9574:	pop	rdx
0x9575:	add	rsp, 0x28
0x9579:	pop	rbx
0x957a:	pop	rbp
0x957b:	pop	r12
0x957d:	pop	r13
0x957f:	pop	r14
0x9581:	pop	r15
0x9583:	ret	


0x95ae:	push	r15
0x95b0:	jmp	0x9556


0x9556:	push	r14
0x9558:	mov	rdx, rax
0x955b:	mov	r9, r13
0x955e:	mov	r8, r12
0x9561:	mov	rcx, rbx
0x9564:	mov	rdi, rbp
0x9567:	mov	esi, 1
0x956c:	xor	eax, eax
0x956e:	call	0x2090


0x95e6:	sub	rsp, 8
0x95ea:	mov	r9, r13
0x95ed:	push	r12
0x95ef:	push	r15
0x95f1:	push	r14
0x95f3:	mov	r8, qword ptr [rsp + 0x20]
0x95f8:	mov	rcx, rbx
0x95fb:	mov	rdx, rax
0x95fe:	mov	rdi, rbp
0x9601:	mov	esi, 1
0x9606:	xor	eax, eax
0x9608:	call	0x2090


0x960d:	add	rsp, 0x20
0x9611:	add	rsp, 0x28
0x9615:	pop	rbx
0x9616:	pop	rbp
0x9617:	pop	r12
0x9619:	pop	r13
0x961b:	pop	r14
0x961d:	pop	r15
0x961f:	ret	


0x9657:	push	r13
0x9659:	push	r12
0x965b:	push	r15
0x965d:	push	r14
0x965f:	mov	r9, qword ptr [rsp + 0x28]
0x9664:	jmp	0x95f3


0x95f3:	mov	r8, qword ptr [rsp + 0x20]
0x95f8:	mov	rcx, rbx
0x95fb:	mov	rdx, rax
0x95fe:	mov	rdi, rbp
0x9601:	mov	esi, 1
0x9606:	xor	eax, eax
0x9608:	call	0x2090


0x94fe:	add	rsp, 0x28
0x9502:	mov	r9, r13
0x9505:	mov	r8, r12
0x9508:	mov	rcx, rbx
0x950b:	mov	rdi, rbp
0x950e:	mov	rdx, rax
0x9511:	pop	rbx
0x9512:	pop	rbp
0x9513:	pop	r12
0x9515:	pop	r13
0x9517:	pop	r14
0x9519:	pop	r15
0x951b:	mov	esi, 1
0x9520:	xor	eax, eax
0x9522:	jmp	0x2090


0x79b0:	sub	rsp, 8
0x79b4:	mov	rcx, rbp
0x79b7:	mov	rsi, r13
0x79ba:	push	qword ptr [rsp + 0x68]
0x79be:	push	qword ptr [rsp + 0x78]
0x79c2:	mov	rdi, r14
0x79c5:	push	0
0x79c7:	mov	r9d, dword ptr [rsp + 0x98]
0x79cf:	mov	r8d, dword ptr [rsp + 0x28]
0x79d4:	mov	rdx, qword ptr [rsp + 0x30]
0x79d9:	and	r9d, 0xfffffffd
0x79dd:	call	0x6e10


0x79e2:	add	rsp, 0x20
0x79e6:	mov	r15, rax
0x79e9:	mov	rbx, qword ptr [rsp + 0xa8]
0x79f1:	xor	rbx, qword ptr fs:[0x28]
0x79fa:	mov	rax, r15
0x79fd:	jne	0x8003


0x7a03:	add	rsp, 0xb8
0x7a0a:	pop	rbx
0x7a0b:	pop	rbp
0x7a0c:	pop	r12
0x7a0e:	pop	r13
0x7a10:	pop	r14
0x7a12:	pop	r15
0x7a14:	ret	


0x8003:	call	0x1db0


0x7fad:	sub	rsp, 8
0x7fb1:	mov	r8d, 5
0x7fb7:	mov	rcx, r11
0x7fba:	push	qword ptr [rsp + 0x68]
0x7fbe:	push	qword ptr [rsp + 0x78]
0x7fc2:	mov	rdi, r14
0x7fc5:	push	qword ptr [rsp + 0x38]
0x7fc9:	mov	r9d, dword ptr [rsp + 0x98]
0x7fd1:	mov	rdx, qword ptr [rsp + 0x30]
0x7fd6:	mov	rsi, qword ptr [rsp + 0x70]
0x7fdb:	call	0x6e10


0x7fe0:	add	rsp, 0x20
0x7fe4:	mov	r15, rax
0x7fe7:	jmp	0x79e9


0x79e9:	mov	rbx, qword ptr [rsp + 0xa8]
0x79f1:	xor	rbx, qword ptr fs:[0x28]
0x79fa:	mov	rax, r15
0x79fd:	jne	0x8003


0x16009:	sub	rsp, 8
0x1600d:	mov	rdi, qword ptr [r14 + 0x78]
0x16011:	lea	rdx, [r13 + 0x18]
0x16015:	push	qword ptr [rsp + 0x28]
0x16019:	mov	r9, qword ptr [rsp + 0xb8]
0x16021:	lea	rcx, [r13 + 0x48]
0x16025:	mov	r8, qword ptr [rsp + 0x68]
0x1602a:	mov	rsi, r12
0x1602d:	call	0xf750


0x16032:	mov	rdx, qword ptr [rsp + 0x50]
0x16037:	test	eax, eax
0x16039:	mov	dword ptr [rdx], eax
0x1603b:	pop	r9
0x1603d:	pop	r10
0x1603f:	je	0x15f50


0x15f50:	movzx	eax, byte ptr [r15 + 8]
0x15f55:	cmp	al, 2
0x15f57:	je	0x160f1


0x16045:	jmp	0x15f88


0x160f1:	mov	rax, qword ptr [rsp + 0x40]
0x160f6:	mov	dword ptr [rax], 7
0x160fc:	jmp	0x15f88


0x15f5d:	cmp	al, 0x15
0x15f5f:	je	0x16372


0x15f88:	mov	rdi, r12
0x15f8b:	call	0x1c60


0x16372:	add	qword ptr [r14 + 0x48], rbx
0x16376:	cmp	byte ptr [rsp + 0x57], 0
0x1637b:	je	0x16391


0x15f65:	xor	r9d, r9d
0x15f68:	jmp	0x15bf2


0x16391:	mov	rax, qword ptr [rsp + 0x10]
0x16396:	mov	edx, dword ptr [rax + 0xb4]
0x1639c:	cmp	edx, 1
0x1639f:	jle	0x163b9


0x1637d:	lea	rdx, [r12 + 0x20]
0x16382:	mov	rax, r12
0x16385:	not	qword ptr [rax]
0x16388:	add	rax, 8
0x1638c:	cmp	rdx, rax
0x1638f:	jne	0x16385


0x15bf2:	mov	rax, qword ptr [rsp + 0x28]
0x15bf7:	mov	r8, qword ptr [rsp + 0x20]
0x15bfc:	and	r9d, 1
0x15c00:	mov	rdi, qword ptr [rsp]
0x15c04:	mov	ecx, ebx
0x15c06:	mov	rdx, r15
0x15c09:	mov	rsi, r14
0x15c0c:	mov	dword ptr [rsp + 0xa0], 3
0x15c17:	mov	qword ptr [rsp + 0xa8], rax
0x15c1f:	call	0x148f0


0x163b9:	cmp	qword ptr [r13 + 0x28], 0
0x163be:	jne	0x16448


0x163a1:	mov	rcx, qword ptr [rax + 0x78]
0x163a5:	xor	eax, eax
0x163a7:	mov	rsi, qword ptr [rcx + rax]
0x163ab:	and	qword ptr [r12 + rax], rsi
0x163af:	add	rax, 8
0x163b3:	cmp	rax, 0x20
0x163b7:	jne	0x163a7


0x16385:	not	qword ptr [rax]
0x16388:	add	rax, 8
0x1638c:	cmp	rdx, rax
0x1638f:	jne	0x16385


0x163c4:	cmp	qword ptr [r13 + 0x30], 0
0x163c9:	jne	0x16448


0x16448:	mov	rax, qword ptr [rsp + 0x10]
0x1644d:	lea	r15, [rsp + 0xb0]
0x16455:	xor	edx, edx
0x16457:	xor	ecx, ecx
0x16459:	mov	r8, r15
0x1645c:	or	byte ptr [rax + 0xb0], 2
0x16463:	lea	rbx, [rax + 0x70]
0x16467:	lea	rbp, [rax + 0x80]
0x1646e:	mov	byte ptr [rsp + 0xb8], 6
0x16476:	mov	qword ptr [rsp + 0xb0], r13
0x1647e:	mov	rdi, rbx
0x16481:	mov	rsi, rbp
0x16484:	call	0xcc10


0x163a7:	mov	rsi, qword ptr [rcx + rax]
0x163ab:	and	qword ptr [r12 + rax], rsi
0x163af:	add	rax, 8
0x163b3:	cmp	rax, 0x20
0x163b7:	jne	0x163a7


0x163cb:	cmp	qword ptr [r13 + 0x38], 0
0x163d0:	jne	0x16448


0x163d2:	cmp	qword ptr [r13 + 0x40], 0
0x163d7:	jne	0x16448


0x163d9:	sub	edx, 1
0x163dc:	jle	0x163ec


0x163ec:	mov	rdi, r13
0x163ef:	call	0xb670


0x163de:	cmp	qword ptr [r13 + 0x48], 0
0x163e3:	jne	0x16448


0x163e5:	test	byte ptr [r13 + 0x20], 1
0x163ea:	jne	0x16448


0x163f4:	mov	rax, qword ptr [rsp + 0x10]
0x163f9:	lea	r8, [rsp + 0xb0]
0x16401:	xor	ecx, ecx
0x16403:	xor	edx, edx
0x16405:	mov	byte ptr [rsp + 0xb8], 3
0x1640d:	mov	qword ptr [rsp + 0xb0], r12
0x16415:	lea	rsi, [rax + 0x80]
0x1641c:	lea	rdi, [rax + 0x70]
0x16420:	call	0xcc10


0x16425:	test	rax, rax
0x16428:	mov	qword ptr [rsp + 0x28], rax
0x1642d:	jne	0x154ac


0x16433:	mov	rax, qword ptr [rsp + 0x40]
0x16438:	mov	dword ptr [rax], 0xc
0x1643e:	jmp	0x15f88


0x154ac:	mov	rbx, qword ptr [rsp + 0x18]
0x154b1:	mov	rdx, qword ptr [rsp + 0x20]
0x154b6:	mov	rsi, r14
0x154b9:	lea	r15, [rsp + 0xc0]
0x154c1:	mov	rdi, rbx
0x154c4:	call	0x14b50


0x154c9:	cdqe	
0x154cb:	add	qword ptr [r14 + 0x48], rax
0x154cf:	movzx	eax, byte ptr [rbx + 8]
0x154d3:	nop	dword ptr [rax + rax]
0x154d8:	cmp	al, 0x17
0x154da:	ja	0x15420


0x154e0:	cmp	al, 0x12
0x154e2:	mov	ecx, 0x8c0800
0x154e7:	sete	bl
0x154ea:	bt	rcx, rax
0x154ee:	jae	0x15420


0x15420:	mov	rdi, qword ptr [rsp + 0x118]
0x15428:	xor	rdi, qword ptr fs:[0x28]
0x15431:	mov	rax, qword ptr [rsp + 0x28]
0x15436:	jne	0x167ae


0x154f4:	mov	rcx, qword ptr [rsp + 0x18]
0x154f9:	cmp	al, 0x17
0x154fb:	mov	rbp, qword ptr [r14 + 0x48]
0x154ff:	movdqa	xmm0, xmmword ptr [rcx]
0x15503:	je	0x15828


0x15828:	mov	rdx, qword ptr [rsp + 0x20]
0x1582d:	mov	rsi, rcx
0x15830:	mov	rdi, r14
0x15833:	movaps	xmmword ptr [rsp], xmm0
0x15837:	call	0x15250


0x15509:	cmp	al, 0x13
0x1550b:	movzx	ebx, bl
0x1550e:	je	0x157c0


0x157c0:	mov	qword ptr [rsp], 1
0x157c8:	mov	rdx, qword ptr [rsp + 0x20]
0x157cd:	mov	rdi, qword ptr [rsp + 0x18]
0x157d2:	mov	rsi, r14
0x157d5:	call	0x14b50


0x15514:	mov	rdx, qword ptr [rsp + 0x20]
0x15519:	mov	rdi, qword ptr [rsp + 0x18]
0x1551e:	mov	rsi, r14
0x15521:	call	0x14b50


0x15526:	cdqe	
0x15528:	add	qword ptr [r14 + 0x48], rax
0x1552c:	cmp	qword ptr [rsp + 0x28], 0
0x15532:	je	0x158c0


0x158c0:	mov	rax, qword ptr [rsp + 0x40]
0x158c5:	mov	ecx, dword ptr [rax]
0x158c7:	test	ecx, ecx
0x158c9:	je	0x15817


0x15538:	mov	qword ptr [rsp], -1
0x15540:	test	rbx, rbx
0x15543:	mov	rbp, qword ptr [rsp + 0x28]
0x15548:	mov	qword ptr [rsp + 0x30], 0
0x15551:	jg	0x156d0


0x15817:	mov	qword ptr [rsp + 0x28], 0
0x15820:	jmp	0x1566e


0x158cf:	jmp	0x15410


0x15557:	cmp	byte ptr [rbp + 0x30], 0x11
0x1555b:	je	0x158a0


0x156d0:	cmp	rbx, 1
0x156d4:	je	0x15f0c


0x1566e:	test	qword ptr [rsp + 0x20], 0x1000000
0x15677:	mov	rax, qword ptr [rsp + 0x18]
0x1567c:	movzx	eax, byte ptr [rax + 8]
0x15680:	je	0x154d8


0x158a0:	mov	rdx, qword ptr [rbp + 0x28]
0x158a4:	lea	rsi, [rip - 0xb33b]
0x158ab:	mov	rdi, rbp
0x158ae:	call	0xa830


0x15561:	cmp	qword ptr [rsp], -1
0x15566:	mov	rdx, rbp
0x15569:	mov	r8, r15
0x1556c:	sete	al
0x1556f:	xor	ecx, ecx
0x15571:	add	eax, 0xa
0x15574:	mov	byte ptr [rsp + 0xc8], al
0x1557b:	mov	rax, qword ptr [rsp + 0x10]
0x15580:	lea	r12, [rax + 0x70]
0x15584:	lea	r13, [rax + 0x80]
0x1558b:	mov	rdi, r12
0x1558e:	mov	rsi, r13
0x15591:	call	0xcc10


0x15f0c:	mov	r13, qword ptr [rsp + 0x28]
0x15f11:	mov	qword ptr [rsp + 0x30], r13
0x15f16:	jmp	0x15764


0x156da:	mov	rax, qword ptr [rsp + 0x10]
0x156df:	mov	r13, rbp
0x156e2:	mov	qword ptr [rsp + 0x48], r14
0x156e7:	lea	r12, [rax + 0x80]
0x156ee:	lea	rdi, [rax + 0x70]
0x156f2:	mov	rax, rbp
0x156f5:	mov	r14, rax
0x156f8:	mov	ebp, 2
0x156fd:	mov	rsi, r12
0x15700:	mov	qword ptr [rsp + 0x30], rdi
0x15705:	mov	r12, r13
0x15708:	mov	r13, rbx
0x1570b:	mov	rbx, rsi
0x1570e:	nop	
0x15710:	mov	rsi, qword ptr [rsp + 0x10]
0x15715:	mov	rdi, r12
0x15718:	call	0xccf0


0x154d8:	cmp	al, 0x17
0x154da:	ja	0x15420


0x15686:	cmp	al, 0xb
0x15688:	je	0x15692


0x15764:	cmp	qword ptr [rsp], rbx
0x15768:	je	0x158d4


0x15692:	mov	rax, qword ptr [rsp + 0x28]
0x15697:	test	rax, rax
0x1569a:	je	0x156ad


0x1568a:	cmp	al, 0x17
0x1568c:	jne	0x154d8


0x158d4:	mov	rdx, qword ptr [rsp + 0x30]
0x158d9:	nop	dword ptr [rax]
0x158e0:	mov	qword ptr [rsp + 0x28], rdx
0x158e5:	jmp	0x1566e


0x1576e:	mov	rsi, qword ptr [rsp + 0x10]
0x15773:	mov	rdi, r13
0x15776:	call	0xccf0


0x156ad:	mov	rax, qword ptr [rsp + 0x40]
0x156b2:	mov	qword ptr [rsp + 0x28], 0
0x156bb:	mov	dword ptr [rax], 0xd
0x156c1:	jmp	0x15420


0x1569c:	lea	rsi, [rip - 0x9fd3]
0x156a3:	xor	edx, edx
0x156a5:	mov	rdi, rax
0x156a8:	call	0xa830


0x1577b:	test	rax, rax
0x1577e:	mov	rbp, rax
0x15781:	jne	0x15557


0x1571d:	mov	rdi, qword ptr [rsp + 0x30]
0x15722:	mov	r12, rax
0x15725:	mov	rdx, r14
0x15728:	mov	r8, r15
0x1572b:	mov	rcx, rax
0x1572e:	mov	rsi, rbx
0x15731:	mov	byte ptr [rsp + 0xc8], 0x10
0x15739:	call	0xcc10


0x157ae:	mov	qword ptr [rsp + 0x28], 0
0x157b7:	jmp	0x15420


0x158b3:	jmp	0x15561


0x157da:	cdqe	
0x157dc:	add	qword ptr [r14 + 0x48], rax
0x157e0:	cmp	qword ptr [rsp + 0x28], 0
0x157e6:	je	0x158c0


0x157ec:	mov	rax, qword ptr [rsp]
0x157f0:	or	rax, rbx
0x157f3:	jne	0x15540


0x157f9:	mov	rdi, qword ptr [rsp + 0x28]
0x157fe:	lea	rsi, [rip - 0xa135]
0x15805:	xor	edx, edx
0x15807:	call	0xa830


0x15540:	test	rbx, rbx
0x15543:	mov	rbp, qword ptr [rsp + 0x28]
0x15548:	mov	qword ptr [rsp + 0x30], 0
0x15551:	jg	0x156d0


0x1580c:	mov	rax, qword ptr [rsp + 0x40]
0x15811:	mov	esi, dword ptr [rax]
0x15813:	test	esi, esi
0x15815:	jne	0x1579b


0x1579b:	mov	rdi, qword ptr [rsp + 0x28]
0x157a0:	lea	rsi, [rip - 0xa0d7]
0x157a7:	xor	edx, edx
0x157a9:	call	0xa830


0x1583c:	cmp	rax, -1
0x15840:	mov	rbx, rax
0x15843:	movdqa	xmm0, xmmword ptr [rsp]
0x15848:	je	0x158f0


0x158f0:	mov	rax, qword ptr [rsp + 0x18]
0x158f5:	cmp	byte ptr [rax + 8], 1
0x158f9:	jne	0x159b0


0x1584e:	cmp	rax, -2
0x15852:	je	0x1586d


0x158ff:	mov	rax, qword ptr [rsp + 0x18]
0x15904:	cmp	byte ptr [rax], 0x2c
0x15907:	jne	0x159b0


0x159b0:	mov	rax, qword ptr [rsp + 0x40]
0x159b5:	mov	dword ptr [rax], 0xa
0x159bb:	cmp	qword ptr [rsp + 0x28], 0
0x159c1:	jne	0x1579b


0x1586d:	test	qword ptr [rsp + 0x20], 0x200000
0x15876:	je	0x167b3


0x15854:	mov	rax, qword ptr [rsp + 0x18]
0x15859:	movzx	eax, byte ptr [rax + 8]
0x1585d:	cmp	al, 0x18
0x1585f:	je	0x15980


0x1590d:	xor	ebx, ebx
0x1590f:	mov	rdx, qword ptr [rsp + 0x20]
0x15914:	mov	rsi, qword ptr [rsp + 0x18]
0x15919:	mov	rdi, r14
0x1591c:	movaps	xmmword ptr [rsp + 0x30], xmm0
0x15921:	call	0x15250


0x159c7:	jmp	0x15410


0x167b3:	mov	rax, qword ptr [rsp + 0x18]
0x167b8:	cmp	byte ptr [rax + 8], 2
0x167bc:	jne	0x159b0


0x1587c:	mov	rax, qword ptr [rsp + 0x18]
0x15881:	mov	qword ptr [r14 + 0x48], rbp
0x15885:	movaps	xmmword ptr [rax], xmm0
0x15888:	mov	byte ptr [rax + 8], 1
0x1588c:	mov	rax, qword ptr [rsp + 0x28]
0x15891:	jmp	0x15655


0x15980:	mov	qword ptr [rsp], rbx
0x15984:	xor	eax, eax
0x15986:	cmp	qword ptr [rsp], 0x7fff
0x1598e:	setg	al
0x15991:	jmp	0x15967


0x15865:	cmp	al, 1
0x15867:	je	0x15993


0x167c2:	mov	rax, qword ptr [rsp + 0x40]
0x167c7:	mov	dword ptr [rax], 9
0x167cd:	jmp	0x159bb


0x15655:	mov	rdi, qword ptr [rsp + 0x40]
0x1565a:	mov	edx, dword ptr [rdi]
0x1565c:	test	edx, edx
0x1565e:	je	0x15669


0x15967:	test	rax, rax
0x1596a:	je	0x157c8


0x15993:	mov	rax, qword ptr [rsp + 0x18]
0x15998:	cmp	byte ptr [rax], 0x2c
0x1599b:	je	0x1590f


0x159bb:	cmp	qword ptr [rsp + 0x28], 0
0x159c1:	jne	0x1579b


0x15669:	mov	qword ptr [rsp + 0x28], rax
0x1566e:	test	qword ptr [rsp + 0x20], 0x1000000
0x15677:	mov	rax, qword ptr [rsp + 0x18]
0x1567c:	movzx	eax, byte ptr [rax + 8]
0x15680:	je	0x154d8


0x15660:	test	rax, rax
0x15663:	je	0x159bb


0x157c8:	mov	rdx, qword ptr [rsp + 0x20]
0x157cd:	mov	rdi, qword ptr [rsp + 0x18]
0x157d2:	mov	rsi, r14
0x157d5:	call	0x14b50


0x15970:	mov	rax, qword ptr [rsp + 0x40]
0x15975:	mov	dword ptr [rax], 0xf
0x1597b:	jmp	0x159bb


0x1590f:	mov	rdx, qword ptr [rsp + 0x20]
0x15914:	mov	rsi, qword ptr [rsp + 0x18]
0x15919:	mov	rdi, r14
0x1591c:	movaps	xmmword ptr [rsp + 0x30], xmm0
0x15921:	call	0x15250


0x159a1:	test	qword ptr [rsp + 0x20], 0x200000
0x159aa:	jne	0x1587c


0x15926:	cmp	rax, -2
0x1592a:	mov	qword ptr [rsp], rax
0x1592e:	movdqa	xmm0, xmmword ptr [rsp + 0x30]
0x15934:	je	0x1586d


0x1593a:	mov	rax, qword ptr [rsp]
0x1593e:	cmp	rax, -1
0x15942:	je	0x15949


0x15949:	mov	rax, qword ptr [rsp + 0x18]
0x1594e:	cmp	byte ptr [rax + 8], 0x18
0x15952:	jne	0x159b0


0x15944:	cmp	rax, rbx
0x15947:	jl	0x159b0


0x15954:	cmp	qword ptr [rsp], -1
0x15959:	jne	0x15984


0x1595b:	xor	eax, eax
0x1595d:	cmp	rbx, 0x7fff
0x15964:	setg	al
0x15967:	test	rax, rax
0x1596a:	je	0x157c8


0x15984:	xor	eax, eax
0x15986:	cmp	qword ptr [rsp], 0x7fff
0x1598e:	setg	al
0x15991:	jmp	0x15967


0x1573e:	test	r12, r12
0x15741:	mov	r14, rax
0x15744:	je	0x15790


0x15790:	mov	rax, qword ptr [rsp + 0x40]
0x15795:	mov	dword ptr [rax], 0xc
0x1579b:	mov	rdi, qword ptr [rsp + 0x28]
0x157a0:	lea	rsi, [rip - 0xa0d7]
0x157a7:	xor	edx, edx
0x157a9:	call	0xa830


0x15746:	test	rax, rax
0x15749:	je	0x15790


0x1574b:	add	rbp, 1
0x1574f:	cmp	rbp, r13
0x15752:	jle	0x15710


0x15710:	mov	rsi, qword ptr [rsp + 0x10]
0x15715:	mov	rdi, r12
0x15718:	call	0xccf0


0x15754:	mov	r14, qword ptr [rsp + 0x48]
0x15759:	mov	rbx, r13
0x1575c:	mov	qword ptr [rsp + 0x30], rax
0x15761:	mov	r13, r12
0x15764:	cmp	qword ptr [rsp], rbx
0x15768:	je	0x158d4


0x15596:	test	rax, rax
0x15599:	mov	rdx, rax
0x1559c:	je	0x15790


0x155a2:	add	rbx, 2
0x155a6:	cmp	rbx, qword ptr [rsp]
0x155aa:	jg	0x1562b


0x155ac:	mov	qword ptr [rsp + 0x48], r14
0x155b1:	mov	r14, rax
0x155b4:	mov	rsi, qword ptr [rsp + 0x10]
0x155b9:	mov	rdi, rbp
0x155bc:	call	0xccf0


0x1562b:	mov	rax, qword ptr [rsp + 0x30]
0x15630:	test	rax, rax
0x15633:	je	0x158e0


0x158e0:	mov	qword ptr [rsp + 0x28], rdx
0x158e5:	jmp	0x1566e


0x15639:	mov	rcx, rdx
0x1563c:	mov	r8, r15
0x1563f:	mov	rdx, rax
0x15642:	mov	rsi, r13
0x15645:	mov	rdi, r12
0x15648:	mov	byte ptr [rsp + 0xc8], 0x10
0x15650:	call	0xcc10


0x155c1:	mov	r8, r15
0x155c4:	mov	rbp, rax
0x155c7:	mov	rcx, rax
0x155ca:	mov	rdx, r14
0x155cd:	mov	rsi, r13
0x155d0:	mov	rdi, r12
0x155d3:	mov	byte ptr [rsp + 0xc8], 0x10
0x155db:	call	0xcc10


0x155e0:	test	rbp, rbp
0x155e3:	je	0x15790


0x155e9:	test	rax, rax
0x155ec:	je	0x15790


0x155f2:	xor	ecx, ecx
0x155f4:	mov	r8, r15
0x155f7:	mov	rdx, rax
0x155fa:	mov	rsi, r13
0x155fd:	mov	rdi, r12
0x15600:	mov	byte ptr [rsp + 0xc8], 0xa
0x15608:	call	0xcc10


0x1560d:	test	rax, rax
0x15610:	mov	r14, rax
0x15613:	je	0x15790


0x15619:	add	rbx, 1
0x1561d:	cmp	rbx, qword ptr [rsp]
0x15621:	jle	0x155b4


0x155b4:	mov	rsi, qword ptr [rsp + 0x10]
0x155b9:	mov	rdi, rbp
0x155bc:	call	0xccf0


0x15623:	mov	r14, qword ptr [rsp + 0x48]
0x15628:	mov	rdx, rax
0x1562b:	mov	rax, qword ptr [rsp + 0x30]
0x15630:	test	rax, rax
0x15633:	je	0x158e0


0x16489:	mov	rdi, rax
0x1648c:	mov	qword ptr [rsp + 0x28], rax
0x16491:	lea	rdx, [r12 + 0x20]
0x16496:	test	rdi, rdi
0x16499:	mov	rax, r12
0x1649c:	je	0x16433


0x1649e:	cmp	qword ptr [rax], 0
0x164a2:	jne	0x1674d


0x164a8:	add	rax, 8
0x164ac:	cmp	rdx, rax
0x164af:	jne	0x1649e


0x1674d:	xor	ecx, ecx
0x1674f:	xor	edx, edx
0x16751:	mov	r8, r15
0x16754:	mov	rsi, rbp
0x16757:	mov	rdi, rbx
0x1675a:	mov	byte ptr [rsp + 0xb8], 3
0x16762:	mov	qword ptr [rsp + 0xb0], r12
0x1676a:	call	0xcc10


0x164b1:	mov	rdi, r12
0x164b4:	call	0x1c60


0x1676f:	test	rax, rax
0x16772:	je	0x16433


0x16778:	mov	rcx, qword ptr [rsp + 0x28]
0x1677d:	lea	r8, [rsp + 0xc0]
0x16785:	mov	rdx, rax
0x16788:	mov	rsi, rbp
0x1678b:	mov	rdi, rbx
0x1678e:	mov	byte ptr [rsp + 0xc8], 0xa
0x16796:	call	0xcc10


0x1679b:	test	rax, rax
0x1679e:	mov	qword ptr [rsp + 0x28], rax
0x167a3:	jne	0x154ac


0x167a9:	jmp	0x16433


0x15c24:	test	eax, eax
0x15c26:	jne	0x1610b


0x15c2c:	mov	rdx, qword ptr [rsp + 0x20]
0x15c31:	mov	rsi, r14
0x15c34:	mov	rdi, r15
0x15c37:	call	0xa440


0x1610b:	mov	rdx, qword ptr [rsp + 0x40]
0x16110:	mov	dword ptr [rdx], eax
0x16112:	jmp	0x15f88


0x15c3c:	movsxd	rbx, eax
0x15c3f:	mov	eax, dword ptr [rsp + 0xa0]
0x15c46:	lea	edx, [rax - 2]
0x15c49:	and	edx, 0xfffffffd
0x15c4c:	je	0x15c65


0x15c65:	cmp	eax, 4
0x15c68:	ja	0x1660a


0x15c4e:	movzx	edx, byte ptr [r15 + 8]
0x15c53:	cmp	dl, 2
0x15c56:	je	0x160f1


0x15c6e:	movsxd	rax, dword ptr [rbp + rax*4]
0x15c73:	add	rax, rbp
0x15c76:	jmp	rax


0x1660a:	lea	rcx, [rip + 0x66bf]
0x16611:	lea	rsi, [rip + 0x60d8]
0x16618:	lea	rdi, [rip + 0x56a9]
0x1661f:	mov	edx, 0xced
0x16624:	call	0x1e30


0x15c5c:	cmp	dl, 0x16
0x15c5f:	je	0x16117


0x16117:	movsxd	rax, ebx
0x1611a:	mov	r11, qword ptr [rsp + 0x20]
0x1611f:	add	qword ptr [r14 + 0x48], rax
0x16123:	mov	r10, qword ptr [rsp + 0x60]
0x16128:	mov	rdx, r11
0x1612b:	mov	rdi, r10
0x1612e:	call	0xa440


0x16133:	movzx	edx, byte ptr [rsp + 0xc8]
0x1613b:	cmp	dl, 2
0x1613e:	je	0x160f1


0x16140:	cmp	dl, 0x15
0x16143:	je	0x16357


0x16357:	mov	eax, ebx
0x16359:	neg	eax
0x1635b:	cdqe	
0x1635d:	add	qword ptr [r14 + 0x48], rax
0x16361:	mov	byte ptr [r15 + 8], 1
0x16366:	mov	eax, dword ptr [rsp + 0xa0]
0x1636d:	jmp	0x15c65


0x16149:	mov	rdx, qword ptr [rsp + 0x68]
0x1614e:	lea	rdi, [rsp + 0xb0]
0x16156:	mov	r9d, 1
0x1615c:	mov	r8, r11
0x1615f:	mov	ecx, eax
0x16161:	mov	dword ptr [rsp + 0xb0], 3
0x1616c:	mov	qword ptr [rsp + 0xb8], rdx
0x16174:	mov	rdx, r10
0x16177:	call	0x148f0


0x1617c:	test	eax, eax
0x1617e:	jne	0x1610b


0x16180:	mov	rdx, qword ptr [rsp + 0x20]
0x16185:	mov	rsi, r14
0x16188:	mov	rdi, r15
0x1618b:	call	0xa440


0x16190:	movsxd	rbx, eax
0x16193:	mov	rax, qword ptr [rsp + 0x10]
0x16198:	mov	esi, dword ptr [rsp + 0xa0]
0x1619f:	mov	r9d, 0
0x161a5:	cmp	dword ptr [rax + 0xb4], 1
0x161ac:	lea	eax, [rsi - 2]
0x161af:	cmovg	r9, r13
0x161b3:	and	eax, 0xfffffffd
0x161b6:	je	0x16629


0x16629:	mov	rax, qword ptr [rsp + 0x40]
0x1662e:	mov	dword ptr [rax], 0xb
0x16634:	jmp	0x15f88


0x161bc:	mov	r10d, dword ptr [rsp + 0xb0]
0x161c4:	lea	eax, [r10 - 2]
0x161c8:	and	eax, 0xfffffffd
0x161cb:	je	0x16629


0x161d1:	cmp	esi, 3
0x161d4:	sete	r11b
0x161d8:	je	0x1666d


0x1666d:	mov	rdi, qword ptr [rsp + 0xa8]
0x16675:	xor	eax, eax
0x16677:	or	rcx, 0xffffffffffffffff
0x1667b:	repne scasb	al, byte ptr [rdi]


0x161de:	cmp	r10d, 3
0x161e2:	je	0x16639


0x1667b:	repne scasb	al, byte ptr [rdi]


0x1667d:	mov	rax, rcx
0x16680:	not	rax
0x16683:	sub	rax, 1
0x16687:	cmp	rax, 1
0x1668b:	jbe	0x161de


0x16639:	mov	rdi, qword ptr [rsp + 0xb8]
0x16641:	xor	eax, eax
0x16643:	or	rcx, 0xffffffffffffffff
0x16647:	repne scasb	al, byte ptr [rdi]


0x161e8:	test	esi, esi
0x161ea:	jne	0x16559


0x16691:	jmp	0x1665d


0x16647:	repne scasb	al, byte ptr [rdi]


0x16649:	mov	rax, rcx
0x1664c:	not	rax
0x1664f:	sub	rax, 1
0x16653:	cmp	rax, 1
0x16657:	jbe	0x161e8


0x161f0:	movzx	edx, byte ptr [rsp + 0xa8]
0x161f8:	test	r10d, r10d
0x161fb:	jne	0x1653d


0x16559:	xor	edx, edx
0x1655b:	cmp	esi, 3
0x1655e:	jne	0x161f8


0x1665d:	mov	rax, qword ptr [rsp + 0x40]
0x16662:	mov	dword ptr [rax], 3
0x16668:	jmp	0x15f88


0x16201:	movzx	r8d, byte ptr [rsp + 0xb8]
0x1620a:	test	esi, esi
0x1620c:	je	0x164f6


0x1653d:	cmp	r10d, 3
0x16541:	je	0x167d2


0x16564:	mov	rax, qword ptr [rsp + 0xa8]
0x1656c:	movzx	edx, byte ptr [rax]
0x1656f:	jmp	0x161f8


0x161f8:	test	r10d, r10d
0x161fb:	jne	0x1653d


0x164f6:	test	r9, r9
0x164f9:	je	0x16574


0x16212:	test	r11b, r11b
0x16215:	jne	0x164f6


0x167d2:	mov	rax, qword ptr [rsp + 0xb8]
0x167da:	movzx	r8d, byte ptr [rax]
0x167de:	jmp	0x1620a


0x16547:	test	esi, esi
0x16549:	je	0x164f3


0x16574:	test	r10d, r10d
0x16577:	je	0x16257


0x164fb:	mov	edi, edx
0x164fd:	mov	dword ptr [rsp + 0x78], r8d
0x16502:	mov	qword ptr [rsp + 0x70], r9
0x16507:	call	0x1fe0


0x1621b:	test	r9, r9
0x1621e:	mov	edx, dword ptr [rsp + 0xa8]
0x16225:	je	0x16244


0x1620a:	test	esi, esi
0x1620c:	je	0x164f6


0x164f3:	xor	r8d, r8d
0x164f6:	test	r9, r9
0x164f9:	je	0x16574


0x1654b:	test	r11b, r11b
0x1654e:	jne	0x164f3


0x16257:	test	qword ptr [rsp + 0x20], 0x10000
0x16260:	je	0x1626b


0x1657d:	cmp	r10d, 3
0x16581:	jne	0x16530


0x16244:	cmp	edx, -1
0x16247:	je	0x1665d


0x16227:	mov	edi, r8d
0x1622a:	mov	dword ptr [rsp + 0x78], edx
0x1622e:	mov	qword ptr [rsp + 0x70], r9
0x16233:	call	0x1fe0


0x16550:	mov	edx, dword ptr [rsp + 0xa8]
0x16557:	jmp	0x16530


0x1626b:	test	r9, r9
0x1626e:	je	0x16296


0x16262:	cmp	r8d, edx
0x16265:	jb	0x16629


0x16583:	jmp	0x16257


0x16530:	mov	r8d, dword ptr [rsp + 0xb8]
0x16538:	jmp	0x16244


0x1624d:	cmp	r8d, -1
0x16251:	je	0x1665d


0x16296:	xor	eax, eax
0x16298:	mov	edi, 1
0x1629d:	cmp	edx, eax
0x1629f:	mov	ecx, eax
0x162a1:	ja	0x162b9


0x16270:	mov	rax, qword ptr [r9 + 0x40]
0x16274:	cmp	rax, qword ptr [rsp + 0x48]
0x16279:	mov	rcx, qword ptr [r9 + 8]
0x1627d:	je	0x16693


0x162a3:	cmp	r8d, eax
0x162a6:	jb	0x162b9


0x162b9:	add	rax, 1
0x162bd:	cmp	rax, 0x100
0x162c3:	jne	0x1629d


0x16693:	mov	rax, qword ptr [rsp + 0x48]
0x16698:	mov	rdi, rcx
0x1669b:	mov	dword ptr [rsp + 0x8c], r8d
0x166a3:	mov	dword ptr [rsp + 0x88], edx
0x166aa:	mov	qword ptr [rsp + 0x70], r9
0x166af:	add	rax, rax
0x166b2:	add	rax, 1
0x166b6:	lea	r10, [rax*4]
0x166be:	mov	qword ptr [rsp + 0x48], rax
0x166c3:	mov	rsi, r10
0x166c6:	mov	qword ptr [rsp + 0x80], r10
0x166ce:	call	0x1f90


0x16283:	mov	dword ptr [rcx + rax*4], edx
0x16286:	mov	rcx, qword ptr [r9 + 0x10]
0x1628a:	lea	rsi, [rax + 1]
0x1628e:	mov	qword ptr [r9 + 0x40], rsi
0x16292:	mov	dword ptr [rcx + rax*4], r8d
0x16296:	xor	eax, eax
0x16298:	mov	edi, 1
0x1629d:	cmp	edx, eax
0x1629f:	mov	ecx, eax
0x162a1:	ja	0x162b9


0x162a8:	mov	rsi, rax
0x162ab:	mov	r11, rdi
0x162ae:	sar	rsi, 6
0x162b2:	shl	r11, cl
0x162b5:	or	qword ptr [r12 + rsi*8], r11
0x162b9:	add	rax, 1
0x162bd:	cmp	rax, 0x100
0x162c3:	jne	0x1629d


0x162c5:	mov	rax, qword ptr [rsp + 0x40]
0x162ca:	mov	dword ptr [rax], 0
0x162d0:	jmp	0x15f50


0x1629d:	cmp	edx, eax
0x1629f:	mov	ecx, eax
0x162a1:	ja	0x162b9


0x166d3:	mov	r9, qword ptr [rsp + 0x70]
0x166d8:	mov	r10, qword ptr [rsp + 0x80]
0x166e0:	mov	qword ptr [rsp + 0x78], rax
0x166e5:	mov	rdi, qword ptr [r9 + 0x10]
0x166e9:	mov	rsi, r10
0x166ec:	call	0x1f90


0x166f1:	mov	rcx, qword ptr [rsp + 0x78]
0x166f6:	test	rcx, rcx
0x166f9:	je	0x16725


0x16725:	mov	rdi, rcx
0x16728:	mov	qword ptr [rsp], rax
0x1672c:	call	0x1c60


0x166fb:	test	rax, rax
0x166fe:	mov	r9, qword ptr [rsp + 0x70]
0x16703:	mov	edx, dword ptr [rsp + 0x88]
0x1670a:	mov	r8d, dword ptr [rsp + 0x8c]
0x16712:	je	0x16725


0x16714:	mov	qword ptr [r9 + 0x10], rax
0x16718:	mov	qword ptr [r9 + 8], rcx
0x1671c:	mov	rax, qword ptr [r9 + 0x40]
0x16720:	jmp	0x16283


0x16238:	mov	r9, qword ptr [rsp + 0x70]
0x1623d:	mov	edx, dword ptr [rsp + 0x78]
0x16241:	mov	r8d, eax
0x16244:	cmp	edx, -1
0x16247:	je	0x1665d


0x1650c:	mov	edx, eax
0x1650e:	mov	eax, dword ptr [rsp + 0xb0]
0x16515:	mov	r9, qword ptr [rsp + 0x70]
0x1651a:	mov	r8d, dword ptr [rsp + 0x78]
0x1651f:	cmp	eax, 3
0x16522:	je	0x16227


0x16528:	test	eax, eax
0x1652a:	je	0x16227


0x16731:	mov	rax, qword ptr [rsp]
0x16735:	mov	rdi, rax
0x16738:	call	0x1c60


0x1673d:	mov	rax, qword ptr [rsp + 0x40]
0x16742:	mov	dword ptr [rax], 0xc
0x16748:	jmp	0x15f88


0x164b9:	jmp	0x154ac


0x15f90:	mov	rdi, r13
0x15f93:	call	0xb670


0x15f98:	mov	rax, qword ptr [rsp + 0x40]
0x15f9d:	mov	r8d, dword ptr [rax]
0x15fa0:	test	r8d, r8d
0x15fa3:	jne	0x15410


0x15fa9:	mov	qword ptr [rsp + 0x28], 0
0x15fb2:	jmp	0x154ac


0x1c40:	push	qword ptr [rip + 0x21f10a]
0x1c46:	jmp	qword ptr [rip + 0x21f10c]


0x1c4c:	nop	dword ptr [rax]


0x1c56:	push	0
0x1c5b:	jmp	0x1c40


0x1c66:	push	1
0x1c6b:	jmp	0x1c40


0x1c76:	push	2
0x1c7b:	jmp	0x1c40


0x1c86:	push	3
0x1c8b:	jmp	0x1c40


0x1c96:	push	4
0x1c9b:	jmp	0x1c40


0x1ca6:	push	5
0x1cab:	jmp	0x1c40


0x1cb6:	push	6
0x1cbb:	jmp	0x1c40


0x1cc6:	push	7
0x1ccb:	jmp	0x1c40


0x1cd6:	push	8
0x1cdb:	jmp	0x1c40


0x1ce6:	push	9
0x1ceb:	jmp	0x1c40


0x1cf6:	push	0xa
0x1cfb:	jmp	0x1c40


0x1d06:	push	0xb
0x1d0b:	jmp	0x1c40


0x1d16:	push	0xc
0x1d1b:	jmp	0x1c40


0x1d26:	push	0xd
0x1d2b:	jmp	0x1c40


0x1d36:	push	0xe
0x1d3b:	jmp	0x1c40


0x1d46:	push	0xf
0x1d4b:	jmp	0x1c40


0x1d56:	push	0x10
0x1d5b:	jmp	0x1c40


0x1d66:	push	0x11
0x1d6b:	jmp	0x1c40


0x1d76:	push	0x12
0x1d7b:	jmp	0x1c40


0x1d86:	push	0x13
0x1d8b:	jmp	0x1c40


0x1d96:	push	0x14
0x1d9b:	jmp	0x1c40


0x1da6:	push	0x15
0x1dab:	jmp	0x1c40


0x1db6:	push	0x16
0x1dbb:	jmp	0x1c40


0x1dc6:	push	0x17
0x1dcb:	jmp	0x1c40


0x1dd6:	push	0x18
0x1ddb:	jmp	0x1c40


0x1de6:	push	0x19
0x1deb:	jmp	0x1c40


0x1df6:	push	0x1a
0x1dfb:	jmp	0x1c40


0x1e06:	push	0x1b
0x1e0b:	jmp	0x1c40


0x1e16:	push	0x1c
0x1e1b:	jmp	0x1c40


0x1e26:	push	0x1d
0x1e2b:	jmp	0x1c40


0x1e36:	push	0x1e
0x1e3b:	jmp	0x1c40


0x1e46:	push	0x1f
0x1e4b:	jmp	0x1c40


0x1e56:	push	0x20
0x1e5b:	jmp	0x1c40


0x1e66:	push	0x21
0x1e6b:	jmp	0x1c40


0x1e76:	push	0x22
0x1e7b:	jmp	0x1c40


0x1e86:	push	0x23
0x1e8b:	jmp	0x1c40


0x1e96:	push	0x24
0x1e9b:	jmp	0x1c40


0x1ea6:	push	0x25
0x1eab:	jmp	0x1c40


0x1eb6:	push	0x26
0x1ebb:	jmp	0x1c40


0x1ec6:	push	0x27
0x1ecb:	jmp	0x1c40


0x1ed6:	push	0x28
0x1edb:	jmp	0x1c40


0x1ee6:	push	0x29
0x1eeb:	jmp	0x1c40


0x1ef6:	push	0x2a
0x1efb:	jmp	0x1c40


0x1f06:	push	0x2b
0x1f0b:	jmp	0x1c40


0x1f16:	push	0x2c
0x1f1b:	jmp	0x1c40


0x1f26:	push	0x2d
0x1f2b:	jmp	0x1c40


0x1f36:	push	0x2e
0x1f3b:	jmp	0x1c40


0x1f46:	push	0x2f
0x1f4b:	jmp	0x1c40


0x1f56:	push	0x30
0x1f5b:	jmp	0x1c40


0x1f66:	push	0x31
0x1f6b:	jmp	0x1c40


0x1f76:	push	0x32
0x1f7b:	jmp	0x1c40


0x1f86:	push	0x33
0x1f8b:	jmp	0x1c40


0x1f96:	push	0x34
0x1f9b:	jmp	0x1c40


0x1fa6:	push	0x35
0x1fab:	jmp	0x1c40


0x1fb6:	push	0x36
0x1fbb:	jmp	0x1c40


0x1fc6:	push	0x37
0x1fcb:	jmp	0x1c40


0x1fd6:	push	0x38
0x1fdb:	jmp	0x1c40


0x1fe6:	push	0x39
0x1feb:	jmp	0x1c40


0x1ff6:	push	0x3a
0x1ffb:	jmp	0x1c40


0x2006:	push	0x3b
0x200b:	jmp	0x1c40


0x2016:	push	0x3c
0x201b:	jmp	0x1c40


0x2026:	push	0x3d
0x202b:	jmp	0x1c40


0x2036:	push	0x3e
0x203b:	jmp	0x1c40


0x2046:	push	0x3f
0x204b:	jmp	0x1c40


0x2056:	push	0x40
0x205b:	jmp	0x1c40


0x2066:	push	0x41
0x206b:	jmp	0x1c40


0x2076:	push	0x42
0x207b:	jmp	0x1c40


0x2086:	push	0x43
0x208b:	jmp	0x1c40


0x2096:	push	0x44
0x209b:	jmp	0x1c40


0x20a6:	push	0x45
0x20ab:	jmp	0x1c40


0x20b6:	push	0x46
0x20bb:	jmp	0x1c40


0x20c0:	jmp	qword ptr [rip + 0x21eed2]




0x20c6:	push	0x47
0x20cb:	jmp	0x1c40


0x20d6:	push	0x48
0x20db:	jmp	0x1c40


0x20e6:	push	0x49
0x20eb:	jmp	0x1c40


0x20f6:	push	0x4a
0x20fb:	jmp	0x1c40


0x2106:	push	0x4b
0x210b:	jmp	0x1c40


0x2189:	nop	dword ptr [rax]


0x483a:	nop	word ptr [rax + rax]


0x486a:	hlt	


0x486b:	nop	dword ptr [rax + rax]


0x48a2:	nop	dword ptr [rax]
0x48a6:	nop	word ptr cs:[rax + rax]


0x48f2:	nop	dword ptr [rax]
0x48f6:	nop	word ptr cs:[rax + rax]


0x493a:	nop	word ptr [rax + rax]


0x494a:	nop	word ptr [rax + rax]


0x4caa:	nop	word ptr [rax + rax]


0x4e23:	nop	dword ptr [rax]
0x4e26:	nop	word ptr cs:[rax + rax]


0x4f47:	nop	word ptr [rax + rax]


0x4f9a:	nop	word ptr [rax + rax]


0x51b8:	jmp	0x50c0


0x51c2:	cmp	r10b, 0x4f
0x51c6:	mov	rcx, qword ptr [rip + 0x21befb]
0x51cd:	je	0x5373


0x5373:	lea	rdi, [rip + 0x163c6]
0x537a:	mov	edx, 4
0x537f:	mov	esi, 1
0x5384:	call	0x1f80


0x51d3:	cmp	r10b, 0x6f
0x51d7:	jne	0x5355


0x51dd:	lea	rdi, [rip + 0x16557]
0x51e4:	mov	edx, 4
0x51e9:	mov	esi, 1
0x51ee:	call	0x1f80


0x5355:	mov	rax, qword ptr [rcx + 0x28]
0x5359:	cmp	rax, qword ptr [rcx + 0x30]
0x535d:	jae	0x5400


0x5363:	lea	rdx, [rax + 1]
0x5367:	mov	qword ptr [rcx + 0x28], rdx
0x536b:	mov	byte ptr [rax], 0x20
0x536e:	jmp	0x50c0


0x5400:	mov	esi, 0x20
0x5405:	mov	rdi, rcx
0x5408:	call	0x1e00


0x540d:	jmp	0x50c0


0x51f3:	jmp	0x50c0


0x5389:	jmp	0x50c0


0x51f8:	lea	rax, [rip + 0x1707c]
0x51ff:	lea	rdx, [rip + 0x16600]
0x5206:	cmp	ecx, 0x69
0x5209:	lea	rsi, [rip + 0x16503]
0x5210:	mov	edi, 1
0x5215:	cmovne	rdx, rax
0x5219:	xor	eax, eax
0x521b:	call	0x1fb0


0x5220:	jmp	0x50c0


0x5225:	lea	rax, [rip + 0x1704f]
0x522c:	lea	rdx, [rip + 0x165d3]
0x5233:	cmp	ecx, 0x69
0x5236:	lea	rsi, [rip + 0x164dd]
0x523d:	mov	edi, 1
0x5242:	cmovne	rdx, rax
0x5246:	xor	eax, eax
0x5248:	call	0x1fb0


0x524d:	jmp	0x50c0


0x5252:	lea	rax, [rip + 0x17022]
0x5259:	lea	rdx, [rip + 0x165a6]
0x5260:	cmp	ecx, 0x69
0x5263:	lea	rsi, [rip + 0x164b7]
0x526a:	mov	edi, 1
0x526f:	cmovne	rdx, rax
0x5273:	xor	eax, eax
0x5275:	call	0x1fb0


0x527a:	jmp	0x50c0


0x527f:	lea	rsi, [rip + 0x164a2]
0x5286:	mov	edx, ecx
0x5288:	mov	edi, 1
0x528d:	xor	eax, eax
0x528f:	call	0x1fb0


0x5294:	jmp	0x50c0


0x5299:	cmp	r10b, 0x41
0x529d:	mov	rcx, qword ptr [rip + 0x21be24]
0x52a4:	je	0x538e


0x538e:	lea	rdi, [rip + 0x163a0]
0x5395:	mov	edx, 5
0x539a:	mov	esi, 1
0x539f:	call	0x1f80


0x52aa:	cmp	r10b, 0x61
0x52ae:	jne	0x5355


0x52b4:	lea	rdi, [rip + 0x16474]
0x52bb:	mov	edx, 5
0x52c0:	mov	esi, 1
0x52c5:	call	0x1f80


0x52ca:	jmp	0x50c0


0x53a4:	jmp	0x50c0


0x52cf:	cmp	r10b, 0x4f
0x52d3:	mov	rcx, qword ptr [rip + 0x21bdee]
0x52da:	je	0x53ca


0x53ca:	lea	rdi, [rip + 0x16329]
0x53d1:	mov	edx, 5
0x53d6:	mov	esi, 1
0x53db:	call	0x1f80


0x52e0:	jle	0x53a9


0x53a9:	cmp	r10b, 0x41
0x53ad:	jne	0x5355


0x52e6:	cmp	r10b, 0x61
0x52ea:	je	0x53e5


0x53af:	lea	rdi, [rip + 0x16350]
0x53b6:	mov	edx, 5
0x53bb:	mov	esi, 1
0x53c0:	call	0x1f80


0x53e5:	lea	rdi, [rip + 0x16314]
0x53ec:	mov	edx, 5
0x53f1:	mov	esi, 1
0x53f6:	call	0x1f80


0x52f0:	cmp	r10b, 0x6f
0x52f4:	jne	0x5355


0x52f6:	lea	rdi, [rip + 0x163f7]
0x52fd:	mov	edx, 5
0x5302:	mov	esi, 1
0x5307:	call	0x1f80


0x530c:	jmp	0x50c0


0x53fb:	jmp	0x50c0


0x53c5:	jmp	0x50c0


0x53e0:	jmp	0x50c0


0x5412:	nop	dword ptr [rax]
0x5416:	nop	word ptr cs:[rax + rax]


0x544f:	nop	


0x54d1:	nop	dword ptr [rax + rax]
0x54d6:	nop	word ptr cs:[rax + rax]


0x592a:	nop	word ptr [rax + rax]


0x593a:	nop	word ptr [rax + rax]


0x5a56:	nop	word ptr cs:[rax + rax]


0x5ad3:	nop	dword ptr [rax]
0x5ad6:	nop	word ptr cs:[rax + rax]


0x5c6d:	nop	dword ptr [rax]


0x5cbd:	nop	dword ptr [rax]


0x5cc8:	nop	dword ptr [rax + rax]


0x5cd8:	nop	dword ptr [rax + rax]


0x5d84:	nop	word ptr cs:[rax + rax]
0x5d8e:	nop	


0x5dd2:	nop	dword ptr [rax]
0x5dd6:	nop	word ptr cs:[rax + rax]


0x5f8e:	nop	


0x602f:	nop	


0x699a:	nop	word ptr [rax + rax]


0x6a26:	nop	word ptr cs:[rax + rax]


0x6d1d:	nop	dword ptr [rax]


0x6e07:	nop	word ptr [rax + rax]


0x6ea3:	mov	byte ptr [rsp + 0xe], 1
0x6ea8:	mov	byte ptr [rsp + 0x7c], 0
0x6ead:	xor	r12d, r12d
0x6eb0:	mov	qword ptr [rsp + 0x50], 0
0x6eb9:	mov	byte ptr [rsp + 0xf], 1
0x6ebe:	mov	byte ptr [rsp + 0xd], 0
0x6ec3:	lea	rax, [rip + 0x14e2c]
0x6eca:	mov	qword ptr [rsp + 0x18], 1
0x6ed3:	xor	r15d, r15d
0x6ed6:	mov	dword ptr [rsp + 8], 2
0x6ede:	mov	qword ptr [rsp + 0x48], rax
0x6ee3:	xor	r11d, r11d
0x6ee6:	mov	rax, rbp
0x6ee9:	mov	r8d, r12d
0x6eec:	mov	rbp, r11
0x6eef:	mov	r11, rax
0x6ef2:	nop	word ptr [rax + rax]
0x6ef8:	cmp	r11, rbp
0x6efb:	setne	r12b
0x6eff:	cmp	r11, -1
0x6f03:	jne	0x6f12


0x6f05:	mov	rax, qword ptr [rsp + 0x10]
0x6f0a:	cmp	byte ptr [rax + rbp], 0
0x6f0e:	setne	r12b
0x6f12:	test	r12b, r12b
0x6f15:	je	0x7570


0x6f12:	test	r12b, r12b
0x6f15:	je	0x7570


0x7570:	cmp	dword ptr [rsp + 8], 2
0x7575:	movzx	ebx, byte ptr [rsp + 0xf]
0x757a:	mov	r12d, r8d
0x757d:	mov	rbp, r11
0x7580:	sete	dl
0x7583:	mov	eax, ebx
0x7585:	test	r15, r15
0x7588:	sete	cl
0x758b:	and	eax, edx
0x758d:	and	al, cl
0x758f:	jne	0x7ff6


0x6f1b:	cmp	dword ptr [rsp + 8], 2
0x6f20:	mov	rdi, qword ptr [rsp + 0x10]
0x6f25:	lea	r9, [rdi + rbp]
0x6f29:	setne	al
0x6f2c:	and	al, byte ptr [rsp + 0xd]
0x6f30:	mov	r10d, eax
0x6f33:	je	0x6fe0


0x7595:	mov	eax, ebx
0x7597:	xor	eax, 1
0x759a:	and	dl, al
0x759c:	je	0x7f0c


0x7ff6:	mov	dword ptr [rsp + 8], 2
0x7ffe:	jmp	0x7999


0x6fe0:	movzx	ebx, byte ptr [r9]
0x6fe4:	cmp	bl, 0x7e
0x6fe7:	ja	0x7308


0x6f39:	mov	rax, qword ptr [rsp + 0x18]
0x6f3e:	test	rax, rax
0x6f41:	je	0x7370


0x7f0c:	mov	rbx, qword ptr [rsp + 0x48]
0x7f11:	test	rbx, rbx
0x7f14:	je	0x7f42


0x75a2:	cmp	byte ptr [rsp + 0x7c], 0
0x75a7:	je	0x7f0a


0x7999:	cmp	byte ptr [rsp + 0xd], 0
0x799e:	je	0x79b0


0x6fed:	lea	rcx, [rip + 0x14db8]
0x6ff4:	movzx	edx, bl
0x6ff7:	movsxd	rax, dword ptr [rcx + rdx*4]
0x6ffb:	add	rax, rcx
0x6ffe:	jmp	rax


0x7308:	cmp	qword ptr [rsp + 0x58], 1
0x730e:	jne	0x76b8


0x7370:	movzx	ebx, byte ptr [r9]
0x7374:	cmp	bl, 0x7e
0x7377:	ja	0x7300


0x6f47:	cmp	r11, -1
0x6f4b:	lea	rbx, [rbp + rax]
0x6f50:	jne	0x6f80


0x7f42:	cmp	r13, r15
0x7f45:	jbe	0x79e9


0x7f16:	test	al, al
0x7f18:	je	0x7f42


0x7f0a:	mov	eax, edx
0x7f0c:	mov	rbx, qword ptr [rsp + 0x48]
0x7f11:	test	rbx, rbx
0x7f14:	je	0x7f42


0x75ad:	cmp	byte ptr [rsp + 0xe], 0
0x75b2:	jne	0x7fad


0x79a0:	test	al, al
0x79a2:	mov	eax, 4
0x79a7:	cmove	eax, dword ptr [rsp + 8]
0x79ac:	mov	dword ptr [rsp + 8], eax


0x7314:	mov	qword ptr [rsp + 0x38], r11
0x7319:	mov	byte ptr [rsp + 0x30], r8b
0x731e:	mov	byte ptr [rsp + 0x28], r10b
0x7323:	call	0x20e0


0x76b8:	lea	rax, [rsp + 0xa0]
0x76c0:	cmp	r11, -1
0x76c4:	mov	qword ptr [rsp + 0xa0], 0
0x76d0:	mov	qword ptr [rsp + 0x28], rax
0x76d5:	jne	0x7704


0x7379:	lea	rcx, [rip + 0x14c28]
0x7380:	movzx	edx, bl
0x7383:	movsxd	rax, dword ptr [rcx + rdx*4]
0x7387:	add	rax, rcx
0x738a:	jmp	rax


0x7300:	xor	r10d, r10d
0x7303:	nop	dword ptr [rax + rax]
0x7308:	cmp	qword ptr [rsp + 0x58], 1
0x730e:	jne	0x76b8


0x6f52:	cmp	rax, 1
0x6f56:	jbe	0x6f80


0x6f80:	cmp	rbx, r11
0x6f83:	mov	byte ptr [rsp + 0x28], r10b
0x6f88:	ja	0x7540


0x7f4b:	mov	byte ptr [r14 + r15], 0
0x7f50:	jmp	0x79e9


0x7f1a:	movzx	ecx, byte ptr [rbx]
0x7f1d:	mov	rax, rbx
0x7f20:	test	cl, cl
0x7f22:	je	0x7f42


0x75b8:	test	r13, r13
0x75bb:	sete	al
0x75be:	cmp	qword ptr [rsp + 0x50], 0
0x75c4:	setne	dl
0x75c7:	and	al, dl
0x75c9:	je	0x7fec


0x76d7:	mov	rdi, qword ptr [rsp + 0x10]
0x76dc:	mov	byte ptr [rsp + 0x40], r8b
0x76e1:	mov	byte ptr [rsp + 0x38], r10b
0x76e6:	mov	qword ptr [rsp + 0x30], r9
0x76eb:	call	0x1da0


0x7704:	lea	rax, [rsp + 0x9c]
0x770c:	xor	ecx, ecx
0x770e:	mov	byte ptr [rsp + 0x7e], bl
0x7712:	mov	byte ptr [rsp + 0x7d], r8b
0x7717:	mov	rbx, rcx
0x771a:	mov	qword ptr [rsp + 0x88], r9
0x7722:	mov	qword ptr [rsp + 0x38], rax
0x7727:	mov	byte ptr [rsp + 0x7f], r10b
0x772c:	mov	qword ptr [rsp + 0x80], r15
0x7734:	mov	qword ptr [rsp + 0x40], r14
0x7739:	mov	qword ptr [rsp + 0x70], r13
0x773e:	mov	qword ptr [rsp + 0x30], r11
0x7743:	mov	rax, qword ptr [rsp + 0x10]
0x7748:	lea	r14, [rbp + rbx]
0x774d:	mov	rdx, qword ptr [rsp + 0x30]
0x7752:	mov	rcx, qword ptr [rsp + 0x28]
0x7757:	mov	rdi, qword ptr [rsp + 0x38]
0x775c:	lea	r13, [rax + r14]
0x7760:	sub	rdx, r14
0x7763:	mov	rsi, r13
0x7766:	call	0xa3b0


0x6f58:	mov	byte ptr [rsp + 0x38], r8b
0x6f5d:	mov	byte ptr [rsp + 0x30], r10b
0x6f62:	mov	qword ptr [rsp + 0x28], r9
0x6f67:	call	0x1da0


0x6f8e:	mov	rdx, qword ptr [rsp + 0x18]
0x6f93:	mov	rsi, qword ptr [rsp + 0x48]
0x6f98:	mov	rdi, r9
0x6f9b:	mov	qword ptr [rsp + 0x40], r11
0x6fa0:	mov	byte ptr [rsp + 0x38], r8b
0x6fa5:	mov	qword ptr [rsp + 0x30], r9
0x6faa:	call	0x1e90


0x7540:	xor	r10d, r10d
0x7543:	jmp	0x6fe0


0x7f24:	mov	rdx, r15
0x7f27:	sub	rax, r15
0x7f2a:	cmp	r13, rdx
0x7f2d:	jbe	0x7f33


0x7fec:	movzx	eax, byte ptr [rsp + 0x7c]
0x7ff1:	jmp	0x7f0c


0x75cf:	mov	r13, qword ptr [rsp + 0x50]
0x75d4:	lea	rbx, [rip + 0x1471b]
0x75db:	mov	byte ptr [r14], 0x27
0x75df:	mov	dword ptr [rsp + 8], 2
0x75e7:	mov	r15d, 1
0x75ed:	mov	qword ptr [rsp + 0x18], 1
0x75f6:	mov	byte ptr [rsp + 0xf], 0
0x75fb:	mov	qword ptr [rsp + 0x48], rbx
0x7600:	mov	byte ptr [rsp + 0x7c], al
0x7604:	jmp	0x6ee3


0x7f33:	add	rdx, 1
0x7f37:	movzx	ecx, byte ptr [rax + rdx]
0x7f3b:	test	cl, cl
0x7f3d:	jne	0x7f2a


0x7f2f:	mov	byte ptr [r14 + rdx], cl
0x7f33:	add	rdx, 1
0x7f37:	movzx	ecx, byte ptr [rax + rdx]
0x7f3b:	test	cl, cl
0x7f3d:	jne	0x7f2a


0x6ee3:	xor	r11d, r11d
0x6ee6:	mov	rax, rbp
0x6ee9:	mov	r8d, r12d
0x6eec:	mov	rbp, r11
0x6eef:	mov	r11, rax
0x6ef2:	nop	word ptr [rax + rax]
0x6ef8:	cmp	r11, rbp
0x6efb:	setne	r12b
0x6eff:	cmp	r11, -1
0x6f03:	jne	0x6f12


0x7f3f:	mov	r15, rdx
0x7f42:	cmp	r13, r15
0x7f45:	jbe	0x79e9


0x7f2a:	cmp	r13, rdx
0x7f2d:	jbe	0x7f33


0x6faf:	test	eax, eax
0x6fb1:	mov	r9, qword ptr [rsp + 0x30]
0x6fb6:	movzx	r8d, byte ptr [rsp + 0x38]
0x6fbc:	mov	r11, qword ptr [rsp + 0x40]
0x6fc1:	jne	0x7540


0x6fc7:	cmp	byte ptr [rsp + 0xf], 0
0x6fcc:	movzx	r10d, byte ptr [rsp + 0x28]
0x6fd2:	jne	0x7f55


0x7f55:	cmp	dword ptr [rsp + 8], 2
0x7f5a:	movzx	ebx, byte ptr [rsp + 0xf]
0x7f5f:	mov	rbp, r11
0x7f62:	sete	al
0x7f65:	mov	byte ptr [rsp + 0xd], bl
0x7f69:	jmp	0x7999


0x776b:	test	rax, rax
0x776e:	mov	r15, rax
0x7771:	je	0x77c1


0x77c1:	mov	edx, r12d
0x77c4:	mov	rdi, rbx
0x77c7:	movzx	r8d, byte ptr [rsp + 0x7d]
0x77cd:	xor	edx, 1
0x77d0:	movzx	ebx, byte ptr [rsp + 0x7e]
0x77d5:	movzx	r10d, byte ptr [rsp + 0x7f]
0x77db:	and	dl, byte ptr [rsp + 0xd]
0x77df:	mov	r15, qword ptr [rsp + 0x80]
0x77e7:	mov	r14, qword ptr [rsp + 0x40]
0x77ec:	mov	r13, qword ptr [rsp + 0x70]
0x77f1:	mov	r11, qword ptr [rsp + 0x30]
0x77f6:	cmp	rdi, 1
0x77fa:	jbe	0x7dfb


0x7773:	cmp	rax, -1
0x7777:	je	0x7d95


0x7dfb:	mov	eax, edx
0x7dfd:	jmp	0x7357


0x7800:	mov	rcx, rdi
0x7803:	xor	esi, esi
0x7805:	movzx	r9d, byte ptr [rsp + 0xf]
0x780b:	add	rcx, rbp
0x780e:	mov	rdi, qword ptr [rsp + 0x10]
0x7813:	jmp	0x78ce


0x7d95:	mov	rdi, rbx
0x7d98:	movzx	r8d, byte ptr [rsp + 0x7d]
0x7d9e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x7da3:	movzx	r10d, byte ptr [rsp + 0x7f]
0x7da9:	mov	r15, qword ptr [rsp + 0x80]
0x7db1:	xor	r12d, r12d
0x7db4:	mov	r14, qword ptr [rsp + 0x40]
0x7db9:	mov	r13, qword ptr [rsp + 0x70]
0x7dbe:	mov	r11, qword ptr [rsp + 0x30]
0x7dc3:	movzx	edx, byte ptr [rsp + 0xd]
0x7dc8:	jmp	0x77f6


0x777d:	cmp	rax, -2
0x7781:	je	0x7d21


0x7357:	test	al, al
0x7359:	jne	0x7cf1


0x78ce:	test	dl, dl
0x78d0:	jne	0x7820


0x77f6:	cmp	rdi, 1
0x77fa:	jbe	0x7dfb


0x7d21:	mov	r11, qword ptr [rsp + 0x30]
0x7d26:	mov	rsi, r14
0x7d29:	mov	rcx, r13
0x7d2c:	mov	rax, rbx
0x7d2f:	mov	rdi, rbx
0x7d32:	movzx	r8d, byte ptr [rsp + 0x7d]
0x7d38:	movzx	ebx, byte ptr [rsp + 0x7e]
0x7d3d:	mov	r9, qword ptr [rsp + 0x88]
0x7d45:	cmp	rsi, r11
0x7d48:	movzx	r10d, byte ptr [rsp + 0x7f]
0x7d4e:	mov	r15, qword ptr [rsp + 0x80]
0x7d56:	mov	r14, qword ptr [rsp + 0x40]
0x7d5b:	mov	r13, qword ptr [rsp + 0x70]
0x7d60:	jae	0x7d88


0x7787:	cmp	dword ptr [rsp + 8], 2
0x778c:	sete	al
0x778f:	and	al, byte ptr [rsp + 0xf]
0x7793:	jne	0x7930


0x735f:	cmp	dword ptr [rsp + 8], 2
0x7364:	sete	dl
0x7367:	jmp	0x7038


0x7cf1:	movzx	edx, byte ptr [rsp + 0xd]
0x7cf6:	xor	r12d, r12d
0x7cf9:	jmp	0x7800


0x78d6:	mov	eax, esi
0x78d8:	xor	eax, 1
0x78db:	and	eax, r8d
0x78de:	test	r10b, r10b
0x78e1:	je	0x78f1


0x7820:	cmp	dword ptr [rsp + 8], 2
0x7825:	sete	al
0x7828:	test	r9b, r9b
0x782b:	jne	0x7ce0


0x7d62:	cmp	byte ptr [rcx], 0
0x7d65:	jne	0x7d77


0x7d88:	movzx	edx, byte ptr [rsp + 0xd]
0x7d8d:	xor	r12d, r12d
0x7d90:	jmp	0x77f6


0x7799:	mov	edi, dword ptr [rsp + 0x9c]
0x77a0:	call	0x20c0


0x7930:	cmp	r15, 1
0x7934:	je	0x7799


0x7038:	cmp	byte ptr [rsp + 0xd], 1
0x703d:	jne	0x7152


0x78f1:	add	rbp, 1
0x78f5:	cmp	rbp, rcx
0x78f8:	jae	0x707c


0x78e3:	cmp	r13, r15
0x78e6:	jbe	0x78ed


0x7831:	mov	esi, r8d
0x7834:	xor	esi, 1
0x7837:	and	al, sil
0x783a:	je	0x786b


0x7ce0:	movzx	ebx, byte ptr [rsp + 0xf]
0x7ce5:	mov	rbp, r11
0x7ce8:	mov	byte ptr [rsp + 0xd], bl
0x7cec:	jmp	0x7999


0x7d67:	jmp	0x7d88


0x7d77:	add	rax, 1
0x7d7b:	lea	rdx, [rbp + rax]
0x7d80:	cmp	r11, rdx
0x7d83:	ja	0x7d70


0x793a:	mov	rdi, qword ptr [rsp + 0x10]
0x793f:	lea	rcx, [rdi + r15]
0x7943:	lea	rdx, [rdi + r14 + 1]
0x7948:	lea	r8, [rcx + r14]
0x794c:	jmp	0x795d


0x7043:	test	dl, dl
0x7045:	jne	0x7152


0x7152:	cmp	byte ptr [rsp + 0xf], 0
0x7157:	jne	0x704b


0x78fe:	test	al, al
0x7900:	je	0x7cfe


0x707c:	test	al, al
0x707e:	je	0x70a0


0x78ed:	add	r15, 1
0x78f1:	add	rbp, 1
0x78f5:	cmp	rbp, rcx
0x78f8:	jae	0x707c


0x78e8:	mov	byte ptr [r14 + r15], 0x5c
0x78ed:	add	r15, 1
0x78f1:	add	rbp, 1
0x78f5:	cmp	rbp, rcx
0x78f8:	jae	0x707c


0x786b:	cmp	r13, r15
0x786e:	jbe	0x7875


0x783c:	cmp	r13, r15
0x783f:	jbe	0x7846


0x7d85:	mov	rdi, rax
0x7d88:	movzx	edx, byte ptr [rsp + 0xd]
0x7d8d:	xor	r12d, r12d
0x7d90:	jmp	0x77f6


0x7d70:	cmp	byte ptr [r9 + rax], 0
0x7d75:	je	0x7d85


0x795d:	movzx	ecx, byte ptr [rdx]
0x7960:	sub	ecx, 0x5b
0x7963:	cmp	cl, 0x21
0x7966:	ja	0x7950


0x704b:	mov	rsi, qword ptr [rsp + 0x20]
0x7050:	test	rsi, rsi
0x7053:	je	0x7069


0x715d:	jmp	0x7069


0x7cfe:	xor	r10d, r10d
0x7d01:	jmp	0x78bd


0x7906:	cmp	r13, r15
0x7909:	jbe	0x7910


0x70a0:	cmp	r15, r13
0x70a3:	jae	0x70a9


0x7080:	cmp	r13, r15
0x7083:	jbe	0x708a


0x7875:	lea	rax, [r15 + 1]
0x7879:	cmp	r13, rax
0x787c:	jbe	0x788b


0x7870:	mov	byte ptr [r14 + r15], 0x5c
0x7875:	lea	rax, [r15 + 1]
0x7879:	cmp	r13, rax
0x787c:	jbe	0x788b


0x7846:	lea	rsi, [r15 + 1]
0x784a:	cmp	r13, rsi
0x784d:	jbe	0x7855


0x7841:	mov	byte ptr [r14 + r15], 0x27
0x7846:	lea	rsi, [r15 + 1]
0x784a:	cmp	r13, rsi
0x784d:	jbe	0x7855


0x7968:	mov	esi, 1
0x796d:	shl	rsi, cl
0x7970:	mov	rcx, rsi
0x7973:	movabs	rsi, 0x20000002b
0x797d:	test	rcx, rsi
0x7980:	je	0x7950


0x7950:	add	rdx, 1
0x7954:	cmp	r8, rdx
0x7957:	je	0x7799


0x7069:	test	r10b, r10b
0x706c:	jne	0x71b3


0x7055:	mov	edx, ebx
0x7057:	shr	dl, 5
0x705a:	movzx	edx, dl
0x705d:	mov	edx, dword ptr [rsi + rdx*4]
0x7060:	bt	edx, ebx
0x7063:	jb	0x71b3


0x78bd:	cmp	r13, r15
0x78c0:	jbe	0x78c6


0x7910:	lea	rax, [r15 + 1]
0x7914:	cmp	r13, rax
0x7917:	jbe	0x791f


0x790b:	mov	byte ptr [r14 + r15], 0x27
0x7910:	lea	rax, [r15 + 1]
0x7914:	cmp	r13, rax
0x7917:	jbe	0x791f


0x70a5:	mov	byte ptr [r14 + r15], bl
0x70a9:	movzx	edi, byte ptr [rsp + 0xe]
0x70ae:	add	r15, 1
0x70b2:	mov	eax, 0
0x70b7:	test	r12b, r12b
0x70ba:	cmove	edi, eax
0x70bd:	mov	byte ptr [rsp + 0xe], dil
0x70c2:	jmp	0x6ef8


0x70a9:	movzx	edi, byte ptr [rsp + 0xe]
0x70ae:	add	r15, 1
0x70b2:	mov	eax, 0
0x70b7:	test	r12b, r12b
0x70ba:	cmove	edi, eax
0x70bd:	mov	byte ptr [rsp + 0xe], dil
0x70c2:	jmp	0x6ef8


0x708a:	lea	rax, [r15 + 1]
0x708e:	cmp	r13, rax
0x7091:	jbe	0x7099


0x7085:	mov	byte ptr [r14 + r15], 0x27
0x708a:	lea	rax, [r15 + 1]
0x708e:	cmp	r13, rax
0x7091:	jbe	0x7099


0x788b:	lea	rax, [r15 + 2]
0x788f:	cmp	r13, rax
0x7892:	jbe	0x78a4


0x787e:	mov	eax, ebx
0x7880:	shr	al, 6
0x7883:	add	eax, 0x30
0x7886:	mov	byte ptr [r14 + r15 + 1], al
0x788b:	lea	rax, [r15 + 2]
0x788f:	cmp	r13, rax
0x7892:	jbe	0x78a4


0x7855:	lea	rsi, [r15 + 2]
0x7859:	cmp	r13, rsi
0x785c:	jbe	0x7864


0x784f:	mov	byte ptr [r14 + r15 + 1], 0x24
0x7855:	lea	rsi, [r15 + 2]
0x7859:	cmp	r13, rsi
0x785c:	jbe	0x7864


0x7982:	mov	r14, qword ptr [rsp + 0x40]
0x7987:	mov	r13, qword ptr [rsp + 0x70]
0x798c:	mov	rbp, qword ptr [rsp + 0x30]
0x7991:	mov	dword ptr [rsp + 8], 2
0x7999:	cmp	byte ptr [rsp + 0xd], 0
0x799e:	je	0x79b0


0x7072:	xor	eax, 1
0x7075:	add	rbp, 1
0x7079:	and	eax, r8d
0x707c:	test	al, al
0x707e:	je	0x70a0


0x71b3:	cmp	dword ptr [rsp + 8], 2
0x71b8:	sete	dl
0x71bb:	cmp	byte ptr [rsp + 0xf], 0
0x71c0:	mov	eax, edx
0x71c2:	jne	0x7a18


0x78c6:	movzx	ebx, byte ptr [rdi + rbp]
0x78ca:	add	r15, 1
0x78ce:	test	dl, dl
0x78d0:	jne	0x7820


0x78c2:	mov	byte ptr [r14 + r15], bl
0x78c6:	movzx	ebx, byte ptr [rdi + rbp]
0x78ca:	add	r15, 1
0x78ce:	test	dl, dl
0x78d0:	jne	0x7820


0x791f:	add	r15, 2
0x7923:	xor	r10d, r10d
0x7926:	xor	r8d, r8d
0x7929:	jmp	0x78bd


0x7919:	mov	byte ptr [r14 + r15 + 1], 0x27
0x791f:	add	r15, 2
0x7923:	xor	r10d, r10d
0x7926:	xor	r8d, r8d
0x7929:	jmp	0x78bd


0x6ef8:	cmp	r11, rbp
0x6efb:	setne	r12b
0x6eff:	cmp	r11, -1
0x6f03:	jne	0x6f12


0x7099:	add	r15, 2
0x709d:	xor	r8d, r8d
0x70a0:	cmp	r15, r13
0x70a3:	jae	0x70a9


0x7093:	mov	byte ptr [r14 + r15 + 1], 0x27
0x7099:	add	r15, 2
0x709d:	xor	r8d, r8d
0x70a0:	cmp	r15, r13
0x70a3:	jae	0x70a9


0x78a4:	and	ebx, 7
0x78a7:	add	rbp, 1
0x78ab:	add	r15, 3
0x78af:	add	ebx, 0x30
0x78b2:	cmp	rbp, rcx
0x78b5:	jae	0x70a0


0x7894:	mov	eax, ebx
0x7896:	shr	al, 3
0x7899:	and	eax, 7
0x789c:	add	eax, 0x30
0x789f:	mov	byte ptr [r14 + r15 + 2], al
0x78a4:	and	ebx, 7
0x78a7:	add	rbp, 1
0x78ab:	add	r15, 3
0x78af:	add	ebx, 0x30
0x78b2:	cmp	rbp, rcx
0x78b5:	jae	0x70a0


0x7864:	add	r15, 3
0x7868:	mov	r8d, eax
0x786b:	cmp	r13, r15
0x786e:	jbe	0x7875


0x785e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x7864:	add	r15, 3
0x7868:	mov	r8d, eax
0x786b:	cmp	r13, r15
0x786e:	jbe	0x7875


0x71c8:	mov	eax, r8d
0x71cb:	xor	eax, 1
0x71ce:	and	al, dl
0x71d0:	je	0x7201


0x7a18:	mov	rbp, r11
0x7a1b:	jmp	0x7999


0x78bb:	mov	esi, edx
0x78bd:	cmp	r13, r15
0x78c0:	jbe	0x78c6


0x7201:	cmp	r13, r15
0x7204:	jbe	0x720b


0x71d2:	cmp	r13, r15
0x71d5:	jbe	0x71dc


0x720b:	add	r15, 1
0x720f:	add	rbp, 1
0x7213:	jmp	0x70a0


0x7206:	mov	byte ptr [r14 + r15], 0x5c
0x720b:	add	r15, 1
0x720f:	add	rbp, 1
0x7213:	jmp	0x70a0


0x71dc:	lea	rdx, [r15 + 1]
0x71e0:	cmp	r13, rdx
0x71e3:	jbe	0x71eb


0x71d7:	mov	byte ptr [r14 + r15], 0x27
0x71dc:	lea	rdx, [r15 + 1]
0x71e0:	cmp	r13, rdx
0x71e3:	jbe	0x71eb


0x71eb:	lea	rdx, [r15 + 2]
0x71ef:	cmp	r13, rdx
0x71f2:	jbe	0x71fa


0x71e5:	mov	byte ptr [r14 + r15 + 1], 0x24
0x71eb:	lea	rdx, [r15 + 2]
0x71ef:	cmp	r13, rdx
0x71f2:	jbe	0x71fa


0x71fa:	add	r15, 3
0x71fe:	mov	r8d, eax
0x7201:	cmp	r13, r15
0x7204:	jbe	0x720b


0x71f4:	mov	byte ptr [r14 + r15 + 2], 0x27
0x71fa:	add	r15, 3
0x71fe:	mov	r8d, eax
0x7201:	cmp	r13, r15
0x7204:	jbe	0x720b


0x77a5:	mov	rdi, qword ptr [rsp + 0x28]
0x77aa:	test	eax, eax
0x77ac:	mov	eax, 0
0x77b1:	cmove	r12d, eax
0x77b5:	add	rbx, r15
0x77b8:	call	0x20b0


0x77bd:	test	eax, eax
0x77bf:	je	0x7743


0x7743:	mov	rax, qword ptr [rsp + 0x10]
0x7748:	lea	r14, [rbp + rbx]
0x774d:	mov	rdx, qword ptr [rsp + 0x30]
0x7752:	mov	rcx, qword ptr [rsp + 0x28]
0x7757:	mov	rdi, qword ptr [rsp + 0x38]
0x775c:	lea	r13, [rax + r14]
0x7760:	sub	rdx, r14
0x7763:	mov	rsi, r13
0x7766:	call	0xa3b0


0x6f6c:	movzx	r8d, byte ptr [rsp + 0x38]
0x6f72:	movzx	r10d, byte ptr [rsp + 0x30]
0x6f78:	mov	r11, rax
0x6f7b:	mov	r9, qword ptr [rsp + 0x28]
0x6f80:	cmp	rbx, r11
0x6f83:	mov	byte ptr [rsp + 0x28], r10b
0x6f88:	ja	0x7540


0x76f0:	movzx	r8d, byte ptr [rsp + 0x40]
0x76f6:	movzx	r10d, byte ptr [rsp + 0x38]
0x76fc:	mov	r11, rax
0x76ff:	mov	r9, qword ptr [rsp + 0x30]
0x7704:	lea	rax, [rsp + 0x9c]
0x770c:	xor	ecx, ecx
0x770e:	mov	byte ptr [rsp + 0x7e], bl
0x7712:	mov	byte ptr [rsp + 0x7d], r8b
0x7717:	mov	rbx, rcx
0x771a:	mov	qword ptr [rsp + 0x88], r9
0x7722:	mov	qword ptr [rsp + 0x38], rax
0x7727:	mov	byte ptr [rsp + 0x7f], r10b
0x772c:	mov	qword ptr [rsp + 0x80], r15
0x7734:	mov	qword ptr [rsp + 0x40], r14
0x7739:	mov	qword ptr [rsp + 0x70], r13
0x773e:	mov	qword ptr [rsp + 0x30], r11
0x7743:	mov	rax, qword ptr [rsp + 0x10]
0x7748:	lea	r14, [rbp + rbx]
0x774d:	mov	rdx, qword ptr [rsp + 0x30]
0x7752:	mov	rcx, qword ptr [rsp + 0x28]
0x7757:	mov	rdi, qword ptr [rsp + 0x38]
0x775c:	lea	r13, [rax + r14]
0x7760:	sub	rdx, r14
0x7763:	mov	rsi, r13
0x7766:	call	0xa3b0


0x7328:	mov	rcx, qword ptr [rax]
0x732b:	movzx	edx, bl
0x732e:	movzx	r10d, byte ptr [rsp + 0x28]
0x7334:	movzx	r8d, byte ptr [rsp + 0x30]
0x733a:	mov	r11, qword ptr [rsp + 0x38]
0x733f:	mov	edi, 1
0x7344:	movzx	eax, word ptr [rcx + rdx*2]
0x7348:	and	ax, 0x4000
0x734c:	setne	r12b
0x7350:	sete	al
0x7353:	and	al, byte ptr [rsp + 0xd]
0x7357:	test	al, al
0x7359:	jne	0x7cf1


0x7000:	xor	r10d, r10d
0x7003:	cmp	r11, 1
0x7007:	setne	al
0x700a:	cmp	r11, -1
0x700e:	jne	0x701c


0x7010:	mov	rax, qword ptr [rsp + 0x10]
0x7015:	cmp	byte ptr [rax + 1], 0
0x7019:	setne	al
0x701c:	cmp	dword ptr [rsp + 8], 2
0x7021:	sete	dl
0x7024:	test	al, al
0x7026:	je	0x7278


0x701c:	cmp	dword ptr [rsp + 8], 2
0x7021:	sete	dl
0x7024:	test	al, al
0x7026:	je	0x7278


0x7278:	test	rbp, rbp
0x727b:	jne	0x702c


0x702c:	xor	r12d, r12d
0x702f:	xor	eax, eax
0x7031:	nop	dword ptr [rax]
0x7038:	cmp	byte ptr [rsp + 0xd], 1
0x703d:	jne	0x7152


0x7281:	movzx	eax, byte ptr [rsp + 0xf]
0x7286:	and	al, dl
0x7288:	je	0x7038


0x728e:	mov	rbp, r11
0x7291:	mov	dword ptr [rsp + 8], 2
0x7299:	jmp	0x7999


0x7698:	cmp	byte ptr [rsp + 0xf], 0
0x769d:	jne	0x7ec0


0x70e0:	cmp	eax, 5
0x70e3:	je	0x7658


0x76a3:	xor	r12d, r12d
0x76a6:	xor	eax, eax
0x76a8:	mov	ebx, 0x3f
0x76ad:	jmp	0x7069


0x7ec0:	mov	rbp, r11
0x7ec3:	movzx	eax, byte ptr [rsp + 0xf]
0x7ec8:	jmp	0x7999


0x7658:	test	byte ptr [rsp + 0x78], 4
0x765d:	je	0x7680


0x70e9:	cmp	eax, 2
0x70ec:	mov	ebx, 0x3f
0x70f1:	sete	dl
0x70f4:	xor	r12d, r12d
0x70f7:	xor	eax, eax
0x70f9:	jmp	0x7038


0x7680:	xor	edx, edx
0x7682:	xor	r12d, r12d
0x7685:	xor	eax, eax
0x7687:	mov	ebx, 0x3f
0x768c:	jmp	0x7038


0x765f:	lea	rcx, [rbp + 2]
0x7663:	cmp	rcx, r11
0x7666:	jae	0x7680


0x7668:	mov	rax, qword ptr [rsp + 0x10]
0x766d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x7672:	je	0x7e02


0x7e02:	movzx	ebx, byte ptr [rax + rcx]
0x7e06:	cmp	bl, 0x3e
0x7e09:	ja	0x7680


0x7e0f:	movabs	rax, 0x7000a38200000000
0x7e19:	bt	rax, rbx
0x7e1d:	jae	0x7680


0x7e23:	cmp	byte ptr [rsp + 0xf], 0
0x7e28:	jne	0x8012


0x7e2e:	cmp	r13, r15
0x7e31:	jbe	0x7e38


0x8012:	mov	rbp, r11
0x8015:	jmp	0x79b0


0x7e38:	lea	rax, [r15 + 1]
0x7e3c:	cmp	r13, rax
0x7e3f:	jbe	0x7e47


0x7e33:	mov	byte ptr [r14 + r15], 0x3f
0x7e38:	lea	rax, [r15 + 1]
0x7e3c:	cmp	r13, rax
0x7e3f:	jbe	0x7e47


0x7e47:	lea	rax, [r15 + 2]
0x7e4b:	cmp	r13, rax
0x7e4e:	jbe	0x7e56


0x7e41:	mov	byte ptr [r14 + r15 + 1], 0x22
0x7e47:	lea	rax, [r15 + 2]
0x7e4b:	cmp	r13, rax
0x7e4e:	jbe	0x7e56


0x7e56:	lea	rax, [r15 + 3]
0x7e5a:	cmp	r13, rax
0x7e5d:	jbe	0x7e65


0x7e50:	mov	byte ptr [r14 + r15 + 2], 0x22
0x7e56:	lea	rax, [r15 + 3]
0x7e5a:	cmp	r13, rax
0x7e5d:	jbe	0x7e65


0x7e65:	add	r15, 4
0x7e69:	xor	edx, edx
0x7e6b:	xor	r12d, r12d
0x7e6e:	xor	eax, eax
0x7e70:	mov	rbp, rcx
0x7e73:	jmp	0x7038


0x7e5f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x7e65:	add	r15, 4
0x7e69:	xor	edx, edx
0x7e6b:	xor	r12d, r12d
0x7e6e:	xor	eax, eax
0x7e70:	mov	rbp, rcx
0x7e73:	jmp	0x7038


0x7610:	cmp	byte ptr [rsp + 0xf], 0
0x7615:	jne	0x7ec0


0x710e:	mov	byte ptr [rsp + 0x7c], r12b
0x7113:	xor	edx, edx
0x7115:	xor	eax, eax
0x7117:	mov	ebx, 0x27
0x711c:	jmp	0x7038


0x761b:	test	r13, r13
0x761e:	je	0x7a20


0x7a20:	cmp	r13, r15
0x7a23:	jbe	0x7a2a


0x7624:	xor	edx, edx
0x7626:	cmp	qword ptr [rsp + 0x50], 0
0x762c:	jne	0x7a20


0x7a2a:	lea	rax, [r15 + 1]
0x7a2e:	cmp	r13, rax
0x7a31:	jbe	0x7a39


0x7a25:	mov	byte ptr [r14 + r15], 0x27
0x7a2a:	lea	rax, [r15 + 1]
0x7a2e:	cmp	r13, rax
0x7a31:	jbe	0x7a39


0x7632:	mov	qword ptr [rsp + 0x50], r13
0x7637:	add	r15, 3
0x763b:	xor	eax, eax
0x763d:	mov	byte ptr [rsp + 0x7c], r12b
0x7642:	xor	r8d, r8d
0x7645:	mov	r13, rdx
0x7648:	mov	ebx, 0x27
0x764d:	jmp	0x7069


0x7a39:	lea	rax, [r15 + 2]
0x7a3d:	cmp	r13, rax
0x7a40:	jbe	0x8032


0x7a33:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x7a39:	lea	rax, [r15 + 2]
0x7a3d:	cmp	r13, rax
0x7a40:	jbe	0x8032


0x8032:	mov	rdx, r13
0x8035:	mov	r13, qword ptr [rsp + 0x50]
0x803a:	jmp	0x7632


0x7a46:	mov	rdx, r13
0x7a49:	mov	byte ptr [r14 + r15 + 2], 0x27
0x7a4f:	mov	r13, qword ptr [rsp + 0x50]
0x7a54:	jmp	0x7632


0x7144:	cmp	byte ptr [rsp + 0xd], 0
0x7149:	jne	0x71b0


0x714b:	mov	ebx, edx
0x714d:	xor	r12d, r12d
0x7150:	xor	eax, eax
0x7152:	cmp	byte ptr [rsp + 0xf], 0
0x7157:	jne	0x704b


0x71b0:	xor	r12d, r12d
0x71b3:	cmp	dword ptr [rsp + 8], 2
0x71b8:	sete	dl
0x71bb:	cmp	byte ptr [rsp + 0xf], 0
0x71c0:	mov	eax, edx
0x71c2:	jne	0x7a18


0x7550:	cmp	byte ptr [rsp + 0xf], 0
0x7555:	jne	0x7ec0


0x7183:	cmp	byte ptr [rsp + 0xd], 0
0x7188:	je	0x73a0


0x755b:	add	rbp, 1
0x755f:	mov	eax, r8d
0x7562:	xor	r12d, r12d
0x7565:	mov	ebx, 0x5c
0x756a:	jmp	0x707c


0x73a0:	mov	edx, 0x5c
0x73a5:	mov	ebx, 0x5c
0x73aa:	jmp	0x7144


0x718e:	cmp	byte ptr [rsp + 0xf], 0
0x7193:	je	0x73a0


0x7199:	cmp	qword ptr [rsp + 0x18], 0
0x719f:	jne	0x755b


0x71a5:	mov	ebx, 0x5c
0x71aa:	nop	word ptr [rax + rax]
0x71b0:	xor	r12d, r12d
0x71b3:	cmp	dword ptr [rsp + 8], 2
0x71b8:	sete	dl
0x71bb:	cmp	byte ptr [rsp + 0xf], 0
0x71c0:	mov	eax, edx
0x71c2:	jne	0x7a18


0x722b:	xor	edx, edx
0x722d:	test	byte ptr [rsp + 0x78], 1
0x7232:	je	0x714b


0x73f3:	cmp	dword ptr [rsp + 8], 2
0x73f8:	sete	dl
0x73fb:	cmp	byte ptr [rsp + 0xf], 0
0x7400:	jne	0x7f9a


0x7238:	add	rbp, 1
0x723c:	jmp	0x6ef8


0x7406:	mov	eax, r8d
0x7409:	mov	rcx, r15
0x740c:	xor	eax, 1
0x740f:	and	al, dl
0x7411:	je	0x7440


0x7f9a:	movzx	ebx, byte ptr [rsp + 0xf]
0x7f9f:	mov	rbp, r11
0x7fa2:	mov	eax, edx
0x7fa4:	mov	byte ptr [rsp + 0xd], bl
0x7fa8:	jmp	0x7999


0x7440:	cmp	r13, rcx
0x7443:	jbe	0x744a


0x7413:	cmp	r13, r15
0x7416:	jbe	0x741d


0x744a:	cmp	dword ptr [rsp + 8], 2
0x744f:	lea	r15, [rcx + 1]
0x7453:	je	0x7a59


0x7445:	mov	byte ptr [r14 + rcx], 0x5c
0x744a:	cmp	dword ptr [rsp + 8], 2
0x744f:	lea	r15, [rcx + 1]
0x7453:	je	0x7a59


0x741d:	lea	rcx, [r15 + 1]
0x7421:	cmp	r13, rcx
0x7424:	jbe	0x742c


0x7418:	mov	byte ptr [r14 + r15], 0x27
0x741d:	lea	rcx, [r15 + 1]
0x7421:	cmp	r13, rcx
0x7424:	jbe	0x742c


0x7a59:	mov	eax, r12d
0x7a5c:	mov	ebx, 0x30
0x7a61:	xor	r12d, r12d
0x7a64:	jmp	0x7069


0x7459:	lea	rax, [rbp + 1]
0x745d:	cmp	rax, r11
0x7460:	jae	0x747b


0x742c:	lea	rcx, [r15 + 2]
0x7430:	cmp	r13, rcx
0x7433:	ja	0x7a69


0x7426:	mov	byte ptr [r14 + r15 + 1], 0x24
0x742c:	lea	rcx, [r15 + 2]
0x7430:	cmp	r13, rcx
0x7433:	ja	0x7a69


0x7462:	mov	rax, qword ptr [rsp + 0x10]
0x7467:	movzx	eax, byte ptr [rax + rbp + 1]
0x746c:	mov	byte ptr [rsp + 0x28], al
0x7470:	sub	eax, 0x30
0x7473:	cmp	al, 9
0x7475:	jbe	0x7ca9


0x747b:	mov	eax, r12d
0x747e:	mov	ebx, 0x30
0x7483:	xor	r12d, r12d
0x7486:	jmp	0x7038


0x7439:	lea	rcx, [r15 + 3]
0x743d:	mov	r8d, eax
0x7440:	cmp	r13, rcx
0x7443:	jbe	0x744a


0x7a69:	mov	byte ptr [r14 + r15 + 2], 0x27
0x7a6f:	jmp	0x7439


0x7ca9:	cmp	r13, r15
0x7cac:	jbe	0x7cb3


0x7cb3:	lea	rax, [rcx + 2]
0x7cb7:	cmp	r13, rax
0x7cba:	jbe	0x7cc2


0x7cae:	mov	byte ptr [r14 + r15], 0x30
0x7cb3:	lea	rax, [rcx + 2]
0x7cb7:	cmp	r13, rax
0x7cba:	jbe	0x7cc2


0x7cc2:	mov	eax, r12d
0x7cc5:	lea	r15, [rcx + 3]
0x7cc9:	xor	r12d, r12d
0x7ccc:	mov	ebx, 0x30
0x7cd1:	jmp	0x7038


0x7cbc:	mov	byte ptr [r14 + rcx + 2], 0x30
0x7cc2:	mov	eax, r12d
0x7cc5:	lea	r15, [rcx + 3]
0x7cc9:	xor	r12d, r12d
0x7ccc:	mov	ebx, 0x30
0x7cd1:	jmp	0x7038


0x7132:	cmp	dword ptr [rsp + 8], 2
0x7137:	sete	al
0x713a:	and	al, byte ptr [rsp + 0xf]
0x713e:	jne	0x728e


0x74f0:	mov	edx, 0xd
0x74f5:	xor	r10d, r10d
0x74f8:	mov	ebx, 0x72
0x74fd:	jmp	0x7132


0x7a74:	test	ebx, ebx
0x7a76:	jne	0x6ea3


0x7a7c:	mov	byte ptr [rsp + 0xd], 1
0x7a81:	test	r13, r13
0x7a84:	jne	0x801a


0x7a8a:	lea	rax, [rip + 0x14265]
0x7a91:	mov	qword ptr [rsp + 0x50], 0
0x7a9a:	mov	byte ptr [rsp + 0xe], 1
0x7a9f:	mov	byte ptr [rsp + 0x7c], 0
0x7aa4:	xor	r12d, r12d
0x7aa7:	mov	byte ptr [rsp + 0xf], 0
0x7aac:	mov	qword ptr [rsp + 0x18], 1
0x7ab5:	mov	qword ptr [rsp + 0x48], rax
0x7aba:	mov	r15d, 1
0x7ac0:	mov	dword ptr [rsp + 8], 2
0x7ac8:	jmp	0x6ee3


0x801a:	mov	byte ptr [rsp + 0xe], 1
0x801f:	xor	eax, eax
0x8021:	xor	r12d, r12d
0x8024:	mov	qword ptr [rsp + 0x50], 0
0x802d:	jmp	0x75d4


0x75d4:	lea	rbx, [rip + 0x1471b]
0x75db:	mov	byte ptr [r14], 0x27
0x75df:	mov	dword ptr [rsp + 8], 2
0x75e7:	mov	r15d, 1
0x75ed:	mov	qword ptr [rsp + 0x18], 1
0x75f6:	mov	byte ptr [rsp + 0xf], 0
0x75fb:	mov	qword ptr [rsp + 0x48], rbx
0x7600:	mov	byte ptr [rsp + 0x7c], al
0x7604:	jmp	0x6ee3


0x7ad8:	test	r13, r13
0x7adb:	je	0x7d06


0x7ecd:	lea	rax, [rip + 0x139d4]
0x7ed4:	mov	byte ptr [rsp + 0xe], 1
0x7ed9:	mov	byte ptr [rsp + 0x7c], 0
0x7ede:	xor	r12d, r12d
0x7ee1:	mov	qword ptr [rsp + 0x50], 0
0x7eea:	mov	byte ptr [rsp + 0xf], 1
0x7eef:	mov	byte ptr [rsp + 0xd], 1
0x7ef4:	mov	qword ptr [rsp + 0x18], 1
0x7efd:	xor	r15d, r15d
0x7f00:	mov	qword ptr [rsp + 0x48], rax
0x7f05:	jmp	0x6ee3


0x7d06:	mov	qword ptr [rsp + 0x50], 0
0x7d0f:	mov	byte ptr [rsp + 0xe], 1
0x7d14:	xor	r12d, r12d
0x7d17:	mov	byte ptr [rsp + 0x7c], 0
0x7d1c:	jmp	0x7afb


0x7ae1:	mov	byte ptr [r14], 0x22
0x7ae5:	mov	byte ptr [rsp + 0xe], 1
0x7aea:	xor	r12d, r12d
0x7aed:	mov	byte ptr [rsp + 0x7c], 0
0x7af2:	mov	qword ptr [rsp + 0x50], 0
0x7afb:	lea	rax, [rip + 0x13da6]
0x7b02:	mov	byte ptr [rsp + 0xf], 0
0x7b07:	mov	byte ptr [rsp + 0xd], 1
0x7b0c:	mov	qword ptr [rsp + 0x18], 1
0x7b15:	mov	r15d, 1
0x7b1b:	mov	qword ptr [rsp + 0x48], rax
0x7b20:	jmp	0x6ee3


0x7afb:	lea	rax, [rip + 0x13da6]
0x7b02:	mov	byte ptr [rsp + 0xf], 0
0x7b07:	mov	byte ptr [rsp + 0xd], 1
0x7b0c:	mov	qword ptr [rsp + 0x18], 1
0x7b15:	mov	r15d, 1
0x7b1b:	mov	qword ptr [rsp + 0x48], rax
0x7b20:	jmp	0x6ee3


0x7b25:	lea	rax, [rip + 0x13d7c]
0x7b2c:	mov	byte ptr [rsp + 0xe], 1
0x7b31:	mov	byte ptr [rsp + 0x7c], 0
0x7b36:	xor	r12d, r12d
0x7b39:	mov	qword ptr [rsp + 0x50], 0
0x7b42:	mov	byte ptr [rsp + 0xf], 1
0x7b47:	mov	byte ptr [rsp + 0xd], 1
0x7b4c:	mov	qword ptr [rsp + 0x18], 1
0x7b55:	xor	r15d, r15d
0x7b58:	mov	qword ptr [rsp + 0x48], rax
0x7b5d:	mov	dword ptr [rsp + 8], 5
0x7b65:	jmp	0x6ee3


0x7b6a:	mov	byte ptr [rsp + 0xe], 1
0x7b6f:	mov	byte ptr [rsp + 0x7c], 0
0x7b74:	xor	r12d, r12d
0x7b77:	mov	qword ptr [rsp + 0x50], 0
0x7b80:	mov	byte ptr [rsp + 0xf], 0
0x7b85:	xor	r15d, r15d
0x7b88:	mov	byte ptr [rsp + 0xd], 1
0x7b8d:	mov	qword ptr [rsp + 0x18], 0
0x7b96:	mov	qword ptr [rsp + 0x48], 0
0x7b9f:	jmp	0x6ee3


0x7ba4:	cmp	dword ptr [rsp + 8], 0xa
0x7ba9:	je	0x7c01


0x7c01:	xor	r15d, r15d
0x7c04:	test	ebx, ebx
0x7c06:	je	0x7dcd


0x7bab:	lea	rsi, [rip + 0x14180]
0x7bb2:	xor	edi, edi
0x7bb4:	mov	edx, 5
0x7bb9:	call	0x1d80


0x7dcd:	mov	rdx, qword ptr [rsp + 0x68]
0x7dd2:	movzx	eax, byte ptr [rdx]
0x7dd5:	test	al, al
0x7dd7:	je	0x7c0c


0x7c0c:	test	ebx, ebx
0x7c0e:	mov	rbx, qword ptr [rsp + 0x60]
0x7c13:	setne	byte ptr [rsp + 0xf]
0x7c18:	xor	r12d, r12d
0x7c1b:	mov	rdi, rbx
0x7c1e:	call	0x1da0


0x7de9:	add	r15, 1
0x7ded:	movzx	eax, byte ptr [rdx + r15]
0x7df2:	test	al, al
0x7df4:	jne	0x7de0


0x7de5:	mov	byte ptr [r14 + r15], al
0x7de9:	add	r15, 1
0x7ded:	movzx	eax, byte ptr [rdx + r15]
0x7df2:	test	al, al
0x7df4:	jne	0x7de0


0x7df6:	jmp	0x7c0c


0x7de0:	cmp	r13, r15
0x7de3:	jbe	0x7de9


0x7c23:	mov	qword ptr [rsp + 0x48], rbx
0x7c28:	mov	qword ptr [rsp + 0x18], rax
0x7c2d:	mov	byte ptr [rsp + 0xe], 1
0x7c32:	mov	byte ptr [rsp + 0x7c], 0
0x7c37:	mov	qword ptr [rsp + 0x50], 0
0x7c40:	mov	byte ptr [rsp + 0xd], 1
0x7c45:	jmp	0x6ee3


0x7bbe:	mov	rcx, rax
0x7bc1:	mov	qword ptr [rsp + 0x68], rax
0x7bc6:	lea	rax, [rip + 0x14165]
0x7bcd:	cmp	rcx, rax
0x7bd0:	je	0x7f6e


0x7f6e:	mov	esi, dword ptr [rsp + 8]
0x7f72:	mov	rdi, rcx
0x7f75:	call	0x6d20


0x7bd6:	lea	rsi, [rip + 0x14119]
0x7bdd:	xor	edi, edi
0x7bdf:	mov	edx, 5
0x7be4:	call	0x1d80


0x7be9:	mov	rcx, rax
0x7bec:	mov	qword ptr [rsp + 0x60], rax
0x7bf1:	lea	rax, [rip + 0x140fe]
0x7bf8:	cmp	rcx, rax
0x7bfb:	je	0x7f84


0x7f84:	mov	esi, dword ptr [rsp + 8]
0x7f88:	mov	rdi, rcx
0x7f8b:	call	0x6d20


0x7f90:	mov	qword ptr [rsp + 0x60], rax
0x7f95:	jmp	0x7c01


0x7f7a:	mov	qword ptr [rsp + 0x68], rax
0x7f7f:	jmp	0x7bd6


0x7c4a:	mov	byte ptr [rsp + 0xe], 1
0x7c4f:	mov	byte ptr [rsp + 0x7c], 0
0x7c54:	xor	r12d, r12d
0x7c57:	mov	qword ptr [rsp + 0x50], 0
0x7c60:	mov	byte ptr [rsp + 0xf], 0
0x7c65:	xor	r15d, r15d
0x7c68:	mov	byte ptr [rsp + 0xd], 0
0x7c6d:	mov	qword ptr [rsp + 0x18], 0
0x7c76:	mov	qword ptr [rsp + 0x48], 0
0x7c7f:	jmp	0x6ee3


0x7c84:	mov	byte ptr [rsp + 0xe], 1
0x7c89:	mov	byte ptr [rsp + 0x7c], 0
0x7c8e:	xor	r12d, r12d
0x7c91:	mov	qword ptr [rsp + 0x50], 0
0x7c9a:	mov	byte ptr [rsp + 0xf], 1
0x7c9f:	mov	byte ptr [rsp + 0xd], 1
0x7ca4:	jmp	0x6ec3


0x6ec3:	lea	rax, [rip + 0x14e2c]
0x6eca:	mov	qword ptr [rsp + 0x18], 1
0x6ed3:	xor	r15d, r15d
0x6ed6:	mov	dword ptr [rsp + 8], 2
0x6ede:	mov	qword ptr [rsp + 0x48], rax
0x6ee3:	xor	r11d, r11d
0x6ee6:	mov	rax, rbp
0x6ee9:	mov	r8d, r12d
0x6eec:	mov	rbp, r11
0x6eef:	mov	r11, rax
0x6ef2:	nop	word ptr [rax + rax]
0x6ef8:	cmp	r11, rbp
0x6efb:	setne	r12b
0x6eff:	cmp	r11, -1
0x6f03:	jne	0x6f12


0x7e78:	test	ebx, ebx
0x7e7a:	je	0x8008


0x8008:	mov	byte ptr [rsp + 0xd], 0
0x800d:	jmp	0x7a81


0x7e80:	lea	rax, [rip + 0x13e6f]
0x7e87:	mov	byte ptr [rsp + 0xe], 1
0x7e8c:	mov	byte ptr [rsp + 0x7c], 0
0x7e91:	xor	r12d, r12d
0x7e94:	mov	qword ptr [rsp + 0x50], 0
0x7e9d:	mov	byte ptr [rsp + 0xf], 1
0x7ea2:	mov	byte ptr [rsp + 0xd], 0
0x7ea7:	mov	qword ptr [rsp + 0x18], 1
0x7eb0:	xor	r15d, r15d
0x7eb3:	mov	qword ptr [rsp + 0x48], rax
0x7eb8:	jmp	0x6ee3


0x7a81:	test	r13, r13
0x7a84:	jne	0x801a


0x8044:	nop	
0x8046:	nop	word ptr cs:[rax + rax]


0x81fb:	nop	dword ptr [rax + rax]


0x8236:	nop	word ptr cs:[rax + rax]


0x8251:	nop	dword ptr [rax + rax]
0x8256:	nop	word ptr cs:[rax + rax]


0x8271:	nop	dword ptr [rax + rax]
0x8276:	nop	word ptr cs:[rax + rax]


0x82b5:	nop	
0x82b6:	nop	word ptr cs:[rax + rax]


0x82d5:	nop	
0x82d6:	nop	word ptr cs:[rax + rax]


0x8384:	nop	
0x8386:	nop	word ptr cs:[rax + rax]


0x8473:	nop	dword ptr [rax]
0x8476:	nop	word ptr cs:[rax + rax]


0x848a:	nop	word ptr [rax + rax]


0x8523:	nop	dword ptr [rax]
0x8526:	nop	word ptr cs:[rax + rax]


0x8543:	nop	dword ptr [rax]
0x8546:	nop	word ptr cs:[rax + rax]


0x855c:	nop	dword ptr [rax]


0x8578:	nop	dword ptr [rax + rax]


0x8594:	nop	
0x8596:	nop	word ptr cs:[rax + rax]


0x862e:	nop	


0x86ba:	nop	word ptr [rax + rax]


0x86cc:	nop	dword ptr [rax]


0x86df:	nop	


0x8778:	nop	dword ptr [rax + rax]


0x87a1:	nop	dword ptr [rax + rax]
0x87a6:	nop	word ptr cs:[rax + rax]


0x87ba:	nop	word ptr [rax + rax]


0x884e:	nop	


0x88e1:	nop	dword ptr [rax + rax]
0x88e6:	nop	word ptr cs:[rax + rax]


0x88fc:	nop	dword ptr [rax]


0x8917:	nop	word ptr [rax + rax]


0x8933:	nop	dword ptr [rax]
0x8936:	nop	word ptr cs:[rax + rax]


0x894c:	nop	dword ptr [rax]


0x8964:	nop	
0x8966:	nop	word ptr cs:[rax + rax]


0x8983:	nop	dword ptr [rax]
0x8986:	nop	word ptr cs:[rax + rax]


0x89a8:	nop	dword ptr [rax + rax]


0x8b88:	nop	dword ptr [rax + rax]


0x8c04:	nop	
0x8c06:	nop	word ptr cs:[rax + rax]


0x8c1c:	nop	dword ptr [rax]


0x8c2c:	nop	dword ptr [rax]


0x8c61:	nop	word ptr cs:[rax + rax]
0x8c6b:	nop	dword ptr [rax + rax]


0x929f:	nop	


0x96b7:	nop	word ptr [rax + rax]


0x9758:	nop	dword ptr [rax + rax]


0x9835:	nop	
0x9836:	nop	word ptr cs:[rax + rax]


0x98da:	nop	word ptr [rax + rax]


0x9904:	nop	
0x9906:	nop	word ptr cs:[rax + rax]


0x9912:	nop	dword ptr [rax]
0x9916:	nop	word ptr cs:[rax + rax]


0x9956:	nop	word ptr cs:[rax + rax]


0x9984:	nop	
0x9986:	nop	word ptr cs:[rax + rax]


0x9a12:	nop	dword ptr [rax]
0x9a16:	nop	word ptr cs:[rax + rax]


0x9a6a:	nop	word ptr [rax + rax]


0x9a87:	nop	word ptr [rax + rax]


0x9abe:	nop	


0x9ae8:	nop	dword ptr [rax + rax]


0x9b03:	nop	word ptr cs:[rax + rax]
0x9b0d:	nop	dword ptr [rax]


0x9b45:	nop	word ptr cs:[rax + rax]
0x9b4f:	nop	


0x9b6f:	nop	


0x9b97:	nop	word ptr [rax + rax]


0x9bc7:	nop	word ptr [rax + rax]


0x9d80:	movabs	r8, 0x8000000000000000
0x9d8a:	movsxd	rsi, eax
0x9d8d:	mov	rax, r8
0x9d90:	cqo	
0x9d92:	idiv	rsi
0x9d95:	cmp	rbp, rax
0x9d98:	mov	r9, rax
0x9d9b:	jl	0xa245


0xa245:	mov	eax, 1
0xa24a:	mov	rbp, r8
0xa24d:	jmp	0x9dd8


0x9da1:	movabs	r10, 0x7fffffffffffffff
0x9dab:	mov	rax, r10
0x9dae:	cqo	
0x9db0:	idiv	rsi
0x9db3:	cmp	rbp, rax
0x9db6:	jg	0xa252


0x9dd8:	or	r12d, eax
0x9ddb:	nop	dword ptr [rax + rax]
0x9de0:	movsxd	rax, edi
0x9de3:	add	rcx, rax
0x9de6:	mov	eax, r12d
0x9de9:	or	eax, 2
0x9dec:	mov	qword ptr [rbx], rcx
0x9def:	cmp	byte ptr [rcx], 0
0x9df2:	cmovne	r12d, eax
0x9df6:	jmp	0x9c56


0x9dbc:	imul	rbp, rsi
0x9dc0:	cmp	r9, rbp
0x9dc3:	jg	0xa245


0xa252:	mov	eax, 1
0xa257:	mov	rbp, r10
0xa25a:	jmp	0x9dd8


0x9dc9:	cmp	rax, rbp
0x9dcc:	jl	0xa252


0x9dd2:	imul	rbp, rsi
0x9dd6:	xor	eax, eax
0x9dd8:	or	r12d, eax
0x9ddb:	nop	dword ptr [rax + rax]
0x9de0:	movsxd	rax, edi
0x9de3:	add	rcx, rax
0x9de6:	mov	eax, r12d
0x9de9:	or	eax, 2
0x9dec:	mov	qword ptr [rbx], rcx
0x9def:	cmp	byte ptr [rcx], 0
0x9df2:	cmovne	r12d, eax
0x9df6:	jmp	0x9c56


0xa140:	mov	r12d, 1
0xa146:	movabs	rbp, 0x8000000000000000
0xa150:	jmp	0x9de0


0x9e13:	movabs	rax, 0x3fffffffffffffff
0x9e1d:	cmp	rbp, rax
0x9e20:	jg	0xa200


0x9de0:	movsxd	rax, edi
0x9de3:	add	rcx, rax
0x9de6:	mov	eax, r12d
0x9de9:	or	eax, 2
0x9dec:	mov	qword ptr [rbx], rcx
0x9def:	cmp	byte ptr [rcx], 0
0x9df2:	cmovne	r12d, eax
0x9df6:	jmp	0x9c56


0x9e26:	add	rbp, rbp
0x9e29:	jmp	0x9de0


0xa200:	mov	r12d, 1
0xa206:	movabs	rbp, 0x7fffffffffffffff
0xa210:	jmp	0x9de0


0x9e43:	movabs	rax, 0x3fffffffffffff
0x9e4d:	cmp	rbp, rax
0x9e50:	jg	0xa200


0x9e56:	shl	rbp, 9
0x9e5a:	jmp	0x9de0


0x9eaf:	cmp	r10, rbp
0x9eb2:	jle	0x9e90


0x9e90:	mov	rax, r9
0x9e93:	cqo	
0x9e95:	idiv	rsi
0x9e98:	cmp	rax, rbp
0x9e9b:	jl	0xa188


0x9eb4:	mov	r11d, 1
0x9eba:	movabs	rbp, 0x8000000000000000
0x9ec4:	jmp	0x9ea5


0xa188:	mov	r11d, 1
0xa18e:	movabs	rbp, 0x7fffffffffffffff
0xa198:	jmp	0x9ea5


0x9ea1:	imul	rbp, rsi
0x9ea5:	sub	r8d, 1
0x9ea9:	je	0x9fd0


0x9ea5:	sub	r8d, 1
0x9ea9:	je	0x9fd0


0x9fd0:	or	r12d, r11d
0x9fd3:	jmp	0x9de0


0x9f1f:	cmp	r10, rbp
0x9f22:	jle	0x9f00


0x9f00:	mov	rax, r9
0x9f03:	cqo	
0x9f05:	idiv	rsi
0x9f08:	cmp	rax, rbp
0x9f0b:	jl	0xa158


0x9f24:	mov	r11d, 1
0x9f2a:	movabs	rbp, 0x8000000000000000
0x9f34:	jmp	0x9f15


0xa158:	mov	r11d, 1
0xa15e:	movabs	rbp, 0x7fffffffffffffff
0xa168:	jmp	0x9f15


0x9f11:	imul	rbp, rsi
0x9f15:	sub	r8d, 1
0x9f19:	je	0x9fd0


0x9f15:	sub	r8d, 1
0x9f19:	je	0x9fd0


0x9f5e:	sub	r8, 1
0x9f62:	mov	rax, r8
0x9f65:	cqo	
0x9f67:	idiv	rsi
0x9f6a:	cmp	rbp, rax
0x9f6d:	jg	0xa200


0x9f73:	imul	rbp, rsi
0x9f77:	jmp	0x9de0


0x9fb1:	mov	rax, r9
0x9fb4:	cqo	
0x9fb6:	idiv	rsi
0x9fb9:	cmp	rax, rbp
0x9fbc:	jl	0xa230


0xa1a0:	mov	r11d, 1
0xa1a6:	movabs	rbp, 0x8000000000000000
0xa1b0:	jmp	0x9fc6


0xa230:	mov	r11d, 1
0xa236:	movabs	rbp, 0x7fffffffffffffff
0xa240:	jmp	0x9fc6


0x9fc2:	imul	rbp, rsi
0x9fc6:	sub	r8d, 1
0x9fca:	jne	0x9fa8


0x9fc6:	sub	r8d, 1
0x9fca:	jne	0x9fa8


0x9fa8:	cmp	r10, rbp
0x9fab:	jg	0xa1a0


0xa02b:	cmp	r10, rbp
0xa02e:	jle	0xa010


0xa010:	mov	rax, r9
0xa013:	cqo	
0xa015:	idiv	rsi
0xa018:	cmp	rax, rbp
0xa01b:	jl	0xa1b8


0xa030:	mov	r11d, 1
0xa036:	movabs	rbp, 0x8000000000000000
0xa040:	jmp	0xa025


0xa1b8:	mov	r11d, 1
0xa1be:	movabs	rbp, 0x7fffffffffffffff
0xa1c8:	jmp	0xa025


0xa021:	imul	rbp, rsi
0xa025:	sub	r8d, 1
0xa029:	je	0x9fd0


0xa025:	sub	r8d, 1
0xa029:	je	0x9fd0


0xa097:	cmp	r10, rbp
0xa09a:	jle	0xa078


0xa078:	mov	rax, r9
0xa07b:	cqo	
0xa07d:	idiv	rsi
0xa080:	cmp	rax, rbp
0xa083:	jl	0xa1d0


0xa09c:	mov	r11d, 1
0xa0a2:	movabs	rbp, 0x8000000000000000
0xa0ac:	jmp	0xa08d


0xa1d0:	mov	r11d, 1
0xa1d6:	movabs	rbp, 0x7fffffffffffffff
0xa1e0:	jmp	0xa08d


0xa089:	imul	rbp, rsi
0xa08d:	sub	r8d, 1
0xa091:	je	0x9fd0


0xa08d:	sub	r8d, 1
0xa091:	je	0x9fd0


0xa0c3:	movabs	rax, 0x1fffffffffffff
0xa0cd:	cmp	rbp, rax
0xa0d0:	jg	0xa200


0xa0d6:	shl	rbp, 0xa
0xa0da:	jmp	0x9de0


0xa10d:	mov	rax, r9
0xa110:	cqo	
0xa112:	idiv	rsi
0xa115:	cmp	rax, rbp
0xa118:	jl	0xa1e8


0xa170:	mov	r11d, 1
0xa176:	movabs	rbp, 0x8000000000000000
0xa180:	jmp	0xa122


0xa1e8:	mov	r11d, 1
0xa1ee:	movabs	rbp, 0x7fffffffffffffff
0xa1f8:	jmp	0xa122


0xa11e:	imul	rbp, rsi
0xa122:	sub	r8d, 1
0xa126:	jne	0xa108


0xa122:	sub	r8d, 1
0xa126:	jne	0xa108


0xa128:	jmp	0x9fd0


0xa108:	cmp	r10, rbp
0xa10b:	jg	0xa170


0xa283:	nop	word ptr cs:[rax + rax]
0xa28d:	nop	dword ptr [rax]


0xa30b:	nop	dword ptr [rax + rax]


0xa3a7:	nop	word ptr [rax + rax]


0xa433:	nop	word ptr cs:[rax + rax]
0xa43d:	nop	dword ptr [rax]


0xa56f:	nop	


0xa58d:	nop	dword ptr [rax]


0xa7bc:	nop	dword ptr [rax]


0xa826:	nop	word ptr cs:[rax + rax]


0xa89b:	nop	dword ptr [rax + rax]


0xa8f1:	nop	dword ptr [rax + rax]
0xa8f6:	nop	word ptr cs:[rax + rax]


0xa99c:	nop	dword ptr [rax]


0xaa04:	nop	
0xaa06:	nop	word ptr cs:[rax + rax]


0xab3c:	nop	dword ptr [rax]


0xac2c:	nop	dword ptr [rax]


0xac9e:	nop	


0xae63:	nop	dword ptr [rax]
0xae66:	nop	word ptr cs:[rax + rax]


0xb485:	nop	
0xb486:	nop	word ptr cs:[rax + rax]


0xb5de:	nop	


0xb666:	nop	word ptr cs:[rax + rax]


0xb6c5:	nop	
0xb6c6:	nop	word ptr cs:[rax + rax]


0xb6e4:	nop	
0xb6e6:	nop	word ptr cs:[rax + rax]


0xb8be:	nop	


0xb95f:	nop	


0xbbd5:	nop	
0xbbd6:	nop	word ptr cs:[rax + rax]


0xbc39:	nop	dword ptr [rax]


0xbc72:	nop	dword ptr [rax]
0xbc76:	nop	word ptr cs:[rax + rax]


0xbddf:	nop	


0xbe98:	nop	dword ptr [rax + rax]


0xbeef:	nop	


0xbf43:	nop	dword ptr [rax]
0xbf46:	nop	word ptr cs:[rax + rax]


0xbfc5:	nop	
0xbfc6:	nop	word ptr cs:[rax + rax]


0xc0c5:	nop	
0xc0c6:	nop	word ptr cs:[rax + rax]


0xc104:	nop	
0xc106:	nop	word ptr cs:[rax + rax]


0xc19b:	nop	dword ptr [rax + rax]


0xc1f7:	nop	word ptr [rax + rax]


0xc469:	nop	dword ptr [rax]


0xc64e:	nop	


0xc8ff:	nop	


0xca59:	nop	dword ptr [rax]


0xcc08:	nop	dword ptr [rax + rax]


0xcdc1:	nop	dword ptr [rax + rax]
0xcdc6:	nop	word ptr cs:[rax + rax]


0xd007:	nop	word ptr [rax + rax]


0xd136:	nop	word ptr cs:[rax + rax]


0xd292:	nop	dword ptr [rax]
0xd296:	nop	word ptr cs:[rax + rax]


0xd55a:	nop	word ptr [rax + rax]


0xd75a:	nop	word ptr [rax + rax]


0xd83c:	nop	dword ptr [rax]


0xdbde:	nop	


0xdd21:	nop	dword ptr [rax + rax]
0xdd26:	nop	word ptr cs:[rax + rax]


0xde16:	nop	word ptr cs:[rax + rax]


0xdfff:	nop	


0xe79f:	nop	


0xe9db:	nop	dword ptr [rax + rax]


0xf571:	nop	dword ptr [rax + rax]
0xf576:	nop	word ptr cs:[rax + rax]


0xf607:	nop	word ptr [rax + rax]


0xf65f:	nop	


0xf6f4:	nop	
0xf6f6:	nop	word ptr cs:[rax + rax]


0xf74c:	nop	dword ptr [rax]


0xff5d:	nop	dword ptr [rax]


0x101ca:	nop	word ptr [rax + rax]


0x106f7:	nop	word ptr [rax + rax]


0x10954:	nop	
0x10956:	nop	word ptr cs:[rax + rax]


0x110b1:	nop	dword ptr [rax + rax]
0x110b6:	nop	word ptr cs:[rax + rax]


0x119aa:	nop	word ptr [rax + rax]


0x11b46:	nop	word ptr cs:[rax + rax]


0x12431:	nop	dword ptr [rax + rax]
0x12436:	nop	word ptr cs:[rax + rax]


0x1262c:	nop	dword ptr [rax]


0x14b4d:	nop	dword ptr [rax]


0x14d99:	mov	byte ptr [rbp + 8], 0x18
0x14d9d:	jmp	0x14c14


0x14e92:	mov	byte ptr [rbp + 8], 0xa
0x14e96:	mov	eax, 1
0x14e9b:	jmp	0x14c14


0x14de9:	mov	byte ptr [rbp + 8], 0x17
0x14ded:	jmp	0x14c14


0x14e01:	test	r14, r14
0x14e04:	jne	0x151ca


0x14e0a:	mov	byte ptr [rbp + 8], 0xc
0x14e0e:	mov	dword ptr [rbp], 0x10
0x14e15:	mov	eax, 1
0x14e1a:	jmp	0x14c14


0x151ca:	cmp	byte ptr [rdx + r14 - 1], 0xa
0x151d0:	jne	0x14dbc


0x151d6:	test	r15d, 0x800
0x151dd:	je	0x14dbc


0x151e3:	jmp	0x14e0a


0x14e42:	mov	byte ptr [rbp + 8], 0x13
0x14e46:	jmp	0x14c14


0x14e72:	mov	byte ptr [rbp + 8], 0x12
0x14e76:	jmp	0x14c14


0x14ea0:	mov	byte ptr [rbp + 8], 0xb
0x14ea4:	mov	eax, 1
0x14ea9:	jmp	0x14c14


0x14ec2:	mov	byte ptr [rbp + 8], 9
0x14ec6:	jmp	0x14c14


0x14ee2:	mov	byte ptr [rbp + 8], 8
0x14ee6:	jmp	0x14c14


0x14ef6:	add	r14, 1
0x14efa:	cmp	r14, qword ptr [rbx + 0x58]
0x14efe:	jne	0x151fb


0x14f04:	mov	byte ptr [rbp + 8], 0xc
0x14f08:	mov	dword ptr [rbp], 0x20
0x14f0f:	mov	eax, 1
0x14f14:	jmp	0x14c14


0x151fb:	lea	rdi, [rsp + 0x10]
0x15200:	mov	rdx, r15
0x15203:	mov	qword ptr [rbx + 0x48], r14
0x15207:	mov	rsi, rbx
0x1520a:	call	0x14b50


0x1520f:	movzx	eax, byte ptr [rsp + 0x18]
0x15214:	sub	qword ptr [rbx + 0x48], 1
0x15219:	lea	edx, [rax - 9]
0x1521c:	mov	eax, 1
0x15221:	cmp	dl, 1
0x15224:	ja	0x14c14


0x1522a:	jmp	0x14f04


0x14f19:	test	r15d, 0x8400
0x14f20:	mov	eax, 2
0x14f25:	jne	0x14c14


0x14f2b:	mov	byte ptr [rbp + 8], 0xa
0x14f2f:	jmp	0x14c14


0x14f34:	and	r15d, 0x1200
0x14f3b:	mov	eax, 2
0x14f40:	cmp	r15, 0x200
0x14f47:	jne	0x14c14


0x14f4d:	jmp	0x14de9


0x14f52:	test	r15d, 0x80000
0x14f59:	mov	eax, 2
0x14f5e:	jne	0x14c14


0x14f64:	mov	byte ptr [rbp + 8], 0x20
0x14f68:	jmp	0x14c14


0x14f6d:	test	r15d, 0x80000
0x14f74:	mov	eax, 2
0x14f79:	jne	0x14c14


0x14f7f:	mov	byte ptr [rbp + 8], 0x22
0x14f83:	jmp	0x14c14


0x14f88:	and	r15d, 0x1200
0x14f8f:	mov	eax, 2
0x14f94:	cmp	r15, 0x200
0x14f9b:	jne	0x14c14


0x14fa1:	jmp	0x14d99


0x14fa6:	test	r15d, 0x80000
0x14fad:	mov	eax, 2
0x14fb2:	jne	0x14c14


0x14fb8:	mov	byte ptr [rbp + 8], 0xc
0x14fbc:	mov	dword ptr [rbp], 0x100
0x14fc3:	jmp	0x14c14


0x14fc8:	test	r15d, 0x80000
0x14fcf:	mov	eax, 2
0x14fd4:	jne	0x14c14


0x14fda:	mov	byte ptr [rbp + 8], 0xc
0x14fde:	mov	dword ptr [rbp], 0x40
0x14fe5:	jmp	0x14c14


0x14fea:	test	r15d, 0x80000
0x14ff1:	mov	eax, 2
0x14ff6:	jne	0x14c14


0x14ffc:	mov	byte ptr [rbp + 8], 0x21
0x15000:	jmp	0x14c14


0x15005:	test	r15d, 0x80000
0x1500c:	mov	eax, 2
0x15011:	jne	0x14c14


0x15017:	mov	byte ptr [rbp + 8], 0x23
0x1501b:	jmp	0x14c14


0x15020:	test	r15d, 0x80000
0x15027:	mov	eax, 2
0x1502c:	jne	0x14c14


0x15032:	mov	byte ptr [rbp + 8], 0xc
0x15036:	mov	dword ptr [rbp], 0x200
0x1503d:	jmp	0x14c14


0x15042:	and	r15d, 0x402
0x15049:	mov	eax, 2
0x1504e:	cmp	r15, 2
0x15052:	jne	0x14c14


0x15058:	jmp	0x14e42


0x1505d:	test	r15d, 0x80000
0x15064:	mov	eax, 2
0x15069:	jne	0x14c14


0x1506f:	mov	byte ptr [rbp + 8], 0xc
0x15073:	mov	dword ptr [rbp], 9
0x1507a:	jmp	0x14c14


0x1507f:	test	r15d, 0x80000
0x15086:	mov	eax, 2
0x1508b:	jne	0x14c14


0x15091:	mov	byte ptr [rbp + 8], 0xc
0x15095:	mov	dword ptr [rbp], 6
0x1509c:	jmp	0x14c14


0x150a1:	test	r15d, 0x4000
0x150a8:	mov	eax, 2
0x150ad:	jne	0x14c14


0x150b3:	mov	edx, dword ptr [rsp + 8]
0x150b7:	mov	byte ptr [rbp + 8], 4
0x150bb:	sub	edx, 0x31
0x150be:	movsxd	rdx, edx
0x150c1:	mov	qword ptr [rbp], rdx
0x150c5:	jmp	0x14c14


0x150ca:	and	r15d, 0x402
0x150d1:	mov	eax, 2
0x150d6:	cmp	r15, 2
0x150da:	jne	0x14c14


0x150e0:	jmp	0x14e72


0x150e5:	test	r15d, 0x2000
0x150ec:	mov	eax, 2
0x150f1:	jne	0x14c14


0x150f7:	jmp	0x14ec2


0x150fc:	test	r15d, 0x2000
0x15103:	mov	eax, 2
0x15108:	jne	0x14c14


0x1510e:	jmp	0x14ee2


0x15113:	test	r15d, 0x80000
0x1511a:	mov	eax, 2
0x1511f:	jne	0x14c14


0x15125:	mov	byte ptr [rbp + 8], 0xc
0x15129:	mov	dword ptr [rbp], 0x80
0x15130:	jmp	0x14c14


0x1524d:	nop	dword ptr [rax]


0x15306:	nop	word ptr cs:[rax + rax]


0x15371:	mov	rbx, qword ptr [rbp + 0x30]
0x15375:	mov	r15, qword ptr [rsp + 0x20]
0x1537a:	mov	rsi, rdi
0x1537d:	mov	r13, qword ptr [rsp + 0x18]
0x15382:	mov	qword ptr [rsp], r8
0x15386:	lea	rax, [rbx + 1]
0x1538a:	mov	rdx, r15
0x1538d:	or	rdx, 0x800000
0x15394:	mov	rdi, r13
0x15397:	mov	qword ptr [rbp + 0x30], rax
0x1539b:	call	0x14b50


0x153a0:	cdqe	
0x153a2:	add	qword ptr [r14 + 0x48], rax
0x153a6:	xor	eax, eax
0x153a8:	cmp	byte ptr [r13 + 8], 9
0x153ad:	mov	rdx, r13
0x153b0:	je	0x15eb0


0x15eb0:	cmp	rbx, 8
0x15eb4:	jbe	0x15f1b


0x153b6:	mov	r13, qword ptr [rsp + 0x40]
0x153bb:	mov	r8, qword ptr [rsp]
0x153bf:	mov	rcx, r15
0x153c2:	mov	rsi, rbp
0x153c5:	mov	rdi, r14
0x153c8:	add	r8, 1
0x153cc:	mov	r9, r13
0x153cf:	call	0x16980


0x15f1b:	mov	rsi, qword ptr [rsp + 0x10]
0x15f20:	mov	edx, 1
0x15f25:	mov	ecx, ebx
0x15f27:	shl	edx, cl
0x15f29:	movsxd	rdx, edx
0x15f2c:	or	qword ptr [rsi + 0xa8], rdx
0x15f33:	jmp	0x15eb6


0x15eb6:	mov	rdi, qword ptr [rsp + 0x10]
0x15ebb:	lea	r8, [rsp + 0xc0]
0x15ec3:	xor	ecx, ecx
0x15ec5:	mov	rdx, rax
0x15ec8:	mov	byte ptr [rsp + 0xc8], 0x11
0x15ed0:	lea	rsi, [rdi + 0x80]
0x15ed7:	add	rdi, 0x70
0x15edb:	call	0xcc10


0x15ee0:	test	rax, rax
0x15ee3:	mov	qword ptr [rsp + 0x28], rax
0x15ee8:	je	0x15e78


0x15e78:	mov	rax, qword ptr [rsp + 0x40]
0x15e7d:	mov	dword ptr [rax], 0xc
0x15e83:	jmp	0x15410


0x15eea:	mov	qword ptr [rax + 0x28], rbx
0x15eee:	jmp	0x154ac


0x153d4:	mov	r11d, dword ptr [r13]
0x153d8:	test	r11d, r11d
0x153db:	jne	0x15410


0x153dd:	mov	rdx, qword ptr [rsp + 0x18]
0x153e2:	cmp	byte ptr [rdx + 8], 9
0x153e6:	je	0x15eb0


0x153ec:	test	rax, rax
0x153ef:	je	0x15402


0x15402:	mov	rax, qword ptr [rsp + 0x40]
0x15407:	mov	dword ptr [rax], 8
0x1540d:	nop	dword ptr [rax]
0x15410:	mov	qword ptr [rsp + 0x28], 0
0x15419:	nop	dword ptr [rax]
0x15420:	mov	rdi, qword ptr [rsp + 0x118]
0x15428:	xor	rdi, qword ptr fs:[0x28]
0x15431:	mov	rax, qword ptr [rsp + 0x28]
0x15436:	jne	0x167ae


0x153f1:	lea	rsi, [rip - 0x9d28]
0x153f8:	xor	edx, edx
0x153fa:	mov	rdi, rax
0x153fd:	call	0xa830


0x1544e:	test	qword ptr [rsp + 0x20], 0x1000000
0x15457:	jne	0x156ad


0x1545d:	mov	rax, qword ptr [rsp + 0x20]
0x15462:	test	al, 0x20
0x15464:	jne	0x156ad


0x1546a:	test	al, 0x10
0x1546c:	jne	0x162d5


0x15472:	cmp	cl, 9
0x15475:	je	0x15e88


0x162d5:	mov	rbx, qword ptr [rsp + 0x18]
0x162da:	mov	rdx, rax
0x162dd:	mov	rsi, r14
0x162e0:	mov	qword ptr [rsp], r8
0x162e4:	mov	r15, rax
0x162e7:	mov	rdi, rbx
0x162ea:	call	0x14b50


0x15e88:	test	qword ptr [rsp + 0x20], 0x20000
0x15e91:	jne	0x1547b


0x1547b:	mov	rax, qword ptr [rsp + 0x10]
0x15480:	mov	r8, qword ptr [rsp + 0x18]
0x15485:	xor	ecx, ecx
0x15487:	xor	edx, edx
0x15489:	lea	rsi, [rax + 0x80]
0x15490:	lea	rdi, [rax + 0x70]
0x15494:	mov	byte ptr [r8 + 8], 1
0x15499:	call	0xcc10


0x15e97:	mov	rax, qword ptr [rsp + 0x40]
0x15e9c:	mov	qword ptr [rsp + 0x28], 0
0x15ea5:	mov	dword ptr [rax], 0x10
0x15eab:	jmp	0x15420


0x1549e:	test	rax, rax
0x154a1:	mov	qword ptr [rsp + 0x28], rax
0x154a6:	je	0x15e78


0x162ef:	cdqe	
0x162f1:	add	qword ptr [r14 + 0x48], rax
0x162f5:	mov	r9, qword ptr [rsp + 0x40]
0x162fa:	mov	r8, qword ptr [rsp]
0x162fe:	mov	rcx, r15
0x16301:	mov	rdx, rbx
0x16304:	mov	rsi, rbp
0x16307:	mov	rdi, r14
0x1630a:	call	0x15310


0x1630f:	mov	qword ptr [rsp + 0x28], rax
0x16314:	jmp	0x15420


0x15a41:	mov	rax, qword ptr [rsp + 0x10]
0x15a46:	lea	rbx, [rax + 0x70]
0x15a4a:	lea	r12, [rax + 0x80]
0x15a51:	lea	eax, [rbp - 0x100]
0x15a57:	test	eax, 0xfffffeff
0x15a5c:	jne	0x160ca


0x159df:	mov	rax, qword ptr [rsp + 0x10]
0x159e4:	movzx	eax, byte ptr [rax + 0xb0]
0x159eb:	test	al, 0x10
0x159ed:	jne	0x15a41


0x15a62:	cmp	ebp, 0x100
0x15a68:	mov	r15, qword ptr [rsp + 0x18]
0x15a6d:	je	0x160a2


0x160ca:	mov	r8, qword ptr [rsp + 0x18]
0x160cf:	xor	ecx, ecx
0x160d1:	xor	edx, edx
0x160d3:	mov	rsi, r12
0x160d6:	mov	rdi, rbx
0x160d9:	call	0xcc10


0x159ef:	mov	rdi, qword ptr [rsp + 0x10]
0x159f4:	or	eax, 0x10
0x159f7:	test	al, 8
0x159f9:	mov	byte ptr [rdi + 0xb0], al
0x159ff:	jne	0x16603


0x160a2:	mov	dword ptr [r15], 6
0x160a9:	mov	r8, r15
0x160ac:	xor	ecx, ecx
0x160ae:	xor	edx, edx
0x160b0:	mov	rsi, r12
0x160b3:	mov	rdi, rbx
0x160b6:	call	0xcc10


0x15a73:	mov	dword ptr [r15], 5
0x15a7a:	mov	r8, r15
0x15a7d:	xor	ecx, ecx
0x15a7f:	xor	edx, edx
0x15a81:	mov	rsi, r12
0x15a84:	mov	rdi, rbx
0x15a87:	call	0xcc10


0x15a05:	movabs	rdx, 0x3ff000000000000
0x15a0f:	test	al, 4
0x15a11:	mov	qword ptr [rdi + 0xb8], rdx
0x15a18:	movabs	rdx, 0x7fffffe87fffffe
0x15a22:	mov	qword ptr [rdi + 0xc0], rdx
0x15a29:	je	0x16588


0x16603:	xor	ebx, ebx
0x16605:	xor	r12d, r12d
0x16608:	jmp	0x16593


0x16588:	mov	ebx, 0x80
0x1658d:	mov	r12d, 2
0x16593:	call	0x20e0


0x15a2f:	pxor	xmm0, xmm0
0x15a33:	mov	rax, qword ptr [rsp + 0x18]
0x15a38:	movups	xmmword ptr [rdi + 0xc8], xmm0
0x15a3f:	mov	ebp, dword ptr [rax]
0x15a41:	mov	rax, qword ptr [rsp + 0x10]
0x15a46:	lea	rbx, [rax + 0x70]
0x15a4a:	lea	r12, [rax + 0x80]
0x15a51:	lea	eax, [rbp - 0x100]
0x15a57:	test	eax, 0xfffffeff
0x15a5c:	jne	0x160ca


0x16593:	call	0x20e0


0x16598:	movsxd	rdx, ebx
0x1659b:	movsxd	r9, r12d
0x1659e:	mov	r8d, 1
0x165a4:	add	rdx, rdx
0x165a7:	add	rdx, qword ptr [rax]
0x165aa:	mov	rax, qword ptr [rsp + 0x10]
0x165af:	lea	rdi, [rax + r9*8]
0x165b3:	xor	eax, eax
0x165b5:	jmp	0x165d2


0x165d2:	test	byte ptr [rdx + rax*2], 8
0x165d6:	mov	ecx, eax
0x165d8:	je	0x165c0


0x165c0:	lea	esi, [rbx + rax]
0x165c3:	cmp	esi, 0x5f
0x165c6:	je	0x165da


0x165da:	mov	rsi, r8
0x165dd:	shl	rsi, cl
0x165e0:	or	qword ptr [rdi + 0xb8], rsi
0x165e7:	jmp	0x165c8


0x165c8:	add	rax, 1
0x165cc:	cmp	rax, 0x40
0x165d0:	je	0x165e9


0x165e9:	add	r9, 1
0x165ed:	add	ebx, 0x40
0x165f0:	sub	rdx, -0x80
0x165f4:	add	rdi, 8
0x165f8:	cmp	r9d, 3
0x165fc:	jle	0x165b3


0x165b3:	xor	eax, eax
0x165b5:	jmp	0x165d2


0x165fe:	jmp	0x15a41


0x15a8c:	mov	dword ptr [r15], 0xa
0x15a93:	mov	rbp, rax
0x15a96:	mov	r8, qword ptr [rsp + 0x18]
0x15a9b:	xor	ecx, ecx
0x15a9d:	xor	edx, edx
0x15a9f:	mov	rsi, r12
0x15aa2:	mov	rdi, rbx
0x15aa5:	call	0xcc10


0x15aaa:	lea	r8, [rsp + 0xc0]
0x15ab2:	mov	rdx, rbp
0x15ab5:	mov	rdi, rbx
0x15ab8:	mov	rcx, rax
0x15abb:	mov	rsi, r12
0x15abe:	mov	r13, rax
0x15ac1:	mov	byte ptr [rsp + 0xc8], 0xa
0x15ac9:	call	0xcc10


0x15ace:	test	rbp, rbp
0x15ad1:	mov	rdi, rax
0x15ad4:	mov	qword ptr [rsp + 0x28], rax
0x15ad9:	sete	dl
0x15adc:	test	r13, r13
0x15adf:	sete	al
0x15ae2:	or	dl, al
0x15ae4:	jne	0x15e78


0x15aea:	test	rdi, rdi
0x15aed:	je	0x15e78


0x15af3:	mov	rdx, qword ptr [rsp + 0x20]
0x15af8:	mov	rdi, qword ptr [rsp + 0x18]
0x15afd:	mov	rsi, r14
0x15b00:	call	0x14b50


0x15b05:	cdqe	
0x15b07:	add	qword ptr [r14 + 0x48], rax
0x15b0b:	jmp	0x15420


0x160bb:	mov	dword ptr [r15], 9
0x160c2:	mov	rbp, rax
0x160c5:	jmp	0x15a96


0x15a96:	mov	r8, qword ptr [rsp + 0x18]
0x15a9b:	xor	ecx, ecx
0x15a9d:	xor	edx, edx
0x15a9f:	mov	rsi, r12
0x15aa2:	mov	rdi, rbx
0x15aa5:	call	0xcc10


0x160de:	test	rax, rax
0x160e1:	mov	qword ptr [rsp + 0x28], rax
0x160e6:	jne	0x15af3


0x160ec:	jmp	0x15e78


0x15b10:	mov	esi, 1
0x15b15:	mov	edi, 0x20
0x15b1a:	mov	qword ptr [rsp + 0x98], 0
0x15b26:	call	0x1ec0


0x15b2b:	mov	esi, 1
0x15b30:	mov	r12, rax
0x15b33:	mov	edi, 0x50
0x15b38:	call	0x1ec0


0x15b3d:	test	r12, r12
0x15b40:	mov	r13, rax
0x15b43:	sete	dl
0x15b46:	test	rax, rax
0x15b49:	sete	al
0x15b4c:	or	dl, al
0x15b4e:	jne	0x16329


0x15b54:	mov	r10, qword ptr [rsp + 0x18]
0x15b59:	mov	rdx, qword ptr [rsp + 0x20]
0x15b5e:	mov	rsi, r14
0x15b61:	mov	rdi, r10
0x15b64:	call	0xa440


0x16329:	mov	rdi, r12
0x1632c:	call	0x1c60


0x16331:	mov	rdi, r13
0x16334:	call	0x1c60


0x16339:	jmp	0x15e78


0x15b69:	movsxd	rbx, eax
0x15b6c:	movzx	eax, byte ptr [r10 + 8]
0x15b71:	cmp	al, 2
0x15b73:	je	0x16319


0x16319:	mov	rax, qword ptr [rsp + 0x40]
0x1631e:	mov	dword ptr [rax], 2
0x16324:	jmp	0x15f88


0x15b79:	cmp	al, 0x19
0x15b7b:	mov	byte ptr [rsp + 0x57], 0
0x15b80:	je	0x1604a


0x1604a:	or	byte ptr [r13 + 0x20], 1
0x1604f:	test	qword ptr [rsp + 0x20], 0x100
0x16058:	je	0x16062


0x15b86:	cmp	al, 0x15
0x15b88:	je	0x16094


0x16062:	add	qword ptr [r14 + 0x48], rbx
0x16066:	mov	r11, qword ptr [rsp + 0x18]
0x1606b:	mov	rsi, r14
0x1606e:	mov	rdx, qword ptr [rsp + 0x20]
0x16073:	mov	rdi, r11
0x16076:	call	0xa440


0x1605a:	or	qword ptr [r12], 0x400
0x16062:	add	qword ptr [r14 + 0x48], rbx
0x16066:	mov	r11, qword ptr [rsp + 0x18]
0x1606b:	mov	rsi, r14
0x1606e:	mov	rdx, qword ptr [rsp + 0x20]
0x16073:	mov	rdi, r11
0x16076:	call	0xa440


0x16094:	mov	rax, qword ptr [rsp + 0x18]
0x16099:	mov	byte ptr [rax + 8], 1
0x1609d:	jmp	0x15b8e


0x15b8e:	lea	rax, [rsp + 0xd0]
0x15b96:	mov	r15, qword ptr [rsp + 0x18]
0x15b9b:	lea	rbp, [rip + 0x7052]
0x15ba2:	mov	qword ptr [rsp + 0x48], 0
0x15bab:	mov	r9d, 1
0x15bb1:	mov	qword ptr [rsp + 0x30], 0
0x15bba:	mov	qword ptr [rsp + 0x28], rax
0x15bbf:	lea	rax, [rsp + 0xa0]
0x15bc7:	mov	qword ptr [rsp], rax
0x15bcb:	lea	rax, [rsp + 0x98]
0x15bd3:	mov	qword ptr [rsp + 0x58], rax
0x15bd8:	lea	rax, [rsp + 0xc0]
0x15be0:	mov	qword ptr [rsp + 0x60], rax
0x15be5:	lea	rax, [rsp + 0xf0]
0x15bed:	mov	qword ptr [rsp + 0x68], rax
0x15bf2:	mov	rax, qword ptr [rsp + 0x28]
0x15bf7:	mov	r8, qword ptr [rsp + 0x20]
0x15bfc:	and	r9d, 1
0x15c00:	mov	rdi, qword ptr [rsp]
0x15c04:	mov	ecx, ebx
0x15c06:	mov	rdx, r15
0x15c09:	mov	rsi, r14
0x15c0c:	mov	dword ptr [rsp + 0xa0], 3
0x15c17:	mov	qword ptr [rsp + 0xa8], rax
0x15c1f:	call	0x148f0


0x1607b:	mov	ebx, eax
0x1607d:	movzx	eax, byte ptr [r11 + 8]
0x16082:	cmp	al, 2
0x16084:	je	0x16319


0x1608a:	mov	byte ptr [rsp + 0x57], 1
0x1608f:	jmp	0x15b86


0x15c78:	mov	rbx, qword ptr [rsp + 0x40]
0x15c7d:	cmp	cl, 0x23
0x15c80:	mov	rsi, qword ptr [rdi + 0x78]
0x15c84:	sete	r8b
0x15c88:	lea	rcx, [rip + 0x65ec]
0x15c8f:	lea	rdx, [rip + 0x6ac9]
0x15c96:	movzx	r8d, r8b
0x15c9a:	mov	r9, rbx
0x15c9d:	mov	rdi, qword ptr [rsp + 0x10]
0x15ca2:	call	0xff60


0x15ca7:	mov	edi, dword ptr [rbx]
0x15ca9:	mov	qword ptr [rsp + 0x28], rax
0x15cae:	test	edi, edi
0x15cb0:	je	0x154ac


0x15cb6:	test	rax, rax
0x15cb9:	jne	0x154ac


0x15cbf:	jmp	0x15410


0x15c9d:	mov	rdi, qword ptr [rsp + 0x10]
0x15ca2:	call	0xff60


0x15cef:	mov	rax, qword ptr [rsp + 0x18]
0x15cf4:	mov	rdi, qword ptr [rsp + 0x10]
0x15cf9:	mov	rcx, qword ptr [rax]
0x15cfc:	mov	eax, 1
0x15d01:	shl	eax, cl
0x15d03:	cdqe	
0x15d05:	test	qword ptr [rdi + 0xa8], rax
0x15d0c:	je	0x1633e


0x1633e:	mov	rax, qword ptr [rsp + 0x40]
0x16343:	mov	qword ptr [rsp + 0x28], 0
0x1634c:	mov	dword ptr [rax], 6
0x16352:	jmp	0x15420


0x15d12:	mov	rbx, qword ptr [rsp + 0x10]
0x15d17:	mov	r8, qword ptr [rsp + 0x18]
0x15d1c:	xor	ecx, ecx
0x15d1e:	xor	edx, edx
0x15d20:	or	qword ptr [rbx + 0xa0], rax
0x15d27:	lea	rsi, [rbx + 0x80]
0x15d2e:	lea	rdi, [rbx + 0x70]
0x15d32:	call	0xcc10


0x15d37:	test	rax, rax
0x15d3a:	mov	qword ptr [rsp + 0x28], rax
0x15d3f:	je	0x15e78


0x15d45:	add	qword ptr [rbx + 0x98], 1
0x15d4d:	or	byte ptr [rbx + 0xb0], 2
0x15d54:	jmp	0x154ac


0x15d59:	mov	rbx, qword ptr [rsp + 0x10]
0x15d5e:	mov	r8, qword ptr [rsp + 0x18]
0x15d63:	xor	ecx, ecx
0x15d65:	xor	edx, edx
0x15d67:	lea	rsi, [rbx + 0x80]
0x15d6e:	lea	rdi, [rbx + 0x70]
0x15d72:	call	0xcc10


0x15d77:	test	rax, rax
0x15d7a:	mov	qword ptr [rsp + 0x28], rax
0x15d7f:	je	0x15e78


0x15d85:	cmp	dword ptr [rbx + 0xb4], 1
0x15d8c:	jle	0x154ac


0x15d92:	or	byte ptr [rbx + 0xb0], 2
0x15d99:	jmp	0x154ac


0x15d9e:	mov	rax, qword ptr [rsp + 0x10]
0x15da3:	mov	r8, qword ptr [rsp + 0x18]
0x15da8:	xor	ecx, ecx
0x15daa:	xor	edx, edx
0x15dac:	lea	rbx, [rax + 0x70]
0x15db0:	lea	rbp, [rax + 0x80]
0x15db7:	mov	rdi, rbx
0x15dba:	mov	rsi, rbp
0x15dbd:	call	0xcc10


0x15dc2:	test	rax, rax
0x15dc5:	mov	qword ptr [rsp + 0x28], rax
0x15dca:	je	0x15e78


0x15dd0:	mov	rax, qword ptr [rsp + 0x10]
0x15dd5:	lea	r12, [rsp + 0xc0]
0x15ddd:	mov	r15, qword ptr [rsp + 0x28]
0x15de2:	cmp	dword ptr [rax + 0xb4], 1
0x15de9:	jle	0x154ac


0x15def:	mov	rax, qword ptr [r14 + 0x48]
0x15df3:	cmp	qword ptr [r14 + 0x68], rax
0x15df7:	jle	0x16101


0x16101:	mov	qword ptr [rsp + 0x28], r15
0x16106:	jmp	0x154ac


0x15dfd:	cmp	rax, qword ptr [r14 + 0x30]
0x15e01:	je	0x16101


0x15e07:	mov	rdx, qword ptr [r14 + 0x10]
0x15e0b:	cmp	dword ptr [rdx + rax*4], -1
0x15e0f:	jne	0x16101


0x15e15:	mov	r13, qword ptr [rsp + 0x18]
0x15e1a:	mov	rdx, qword ptr [rsp + 0x20]
0x15e1f:	mov	rsi, r14
0x15e22:	mov	rdi, r13
0x15e25:	call	0x14b50


0x15e2a:	cdqe	
0x15e2c:	add	qword ptr [r14 + 0x48], rax
0x15e30:	mov	r8, r13
0x15e33:	xor	ecx, ecx
0x15e35:	xor	edx, edx
0x15e37:	mov	rsi, rbp
0x15e3a:	mov	rdi, rbx
0x15e3d:	call	0xcc10


0x15e42:	mov	rdx, r15
0x15e45:	mov	r13, rax
0x15e48:	mov	r8, r12
0x15e4b:	mov	rcx, rax
0x15e4e:	mov	rsi, rbp
0x15e51:	mov	rdi, rbx
0x15e54:	mov	byte ptr [rsp + 0xc8], 0x10
0x15e5c:	call	0xcc10


0x15e61:	test	r13, r13
0x15e64:	mov	r15, rax
0x15e67:	sete	dl
0x15e6a:	test	rax, rax
0x15e6d:	sete	al
0x15e70:	or	dl, al
0x15e72:	je	0x15def


0x15ef3:	mov	rax, qword ptr [rsp + 0x40]
0x15ef8:	mov	qword ptr [rsp + 0x28], 0
0x15f01:	mov	dword ptr [rax], 5
0x15f07:	jmp	0x15420


0x15f35:	mov	rsi, qword ptr [rsp + 0xa8]
0x15f3d:	mov	rdi, r12
0x15f40:	call	0xf700


0x15f45:	mov	rdx, qword ptr [rsp + 0x40]
0x15f4a:	test	eax, eax
0x15f4c:	mov	dword ptr [rdx], eax
0x15f4e:	jne	0x15f88


0x15f6d:	mov	rsi, qword ptr [rsp + 0xa8]
0x15f75:	mov	rdi, r12
0x15f78:	call	0xf700


0x15f7d:	mov	rdx, qword ptr [rsp + 0x40]
0x15f82:	test	eax, eax
0x15f84:	mov	dword ptr [rdx], eax
0x15f86:	je	0x15f50


0x15fb7:	mov	rdx, qword ptr [r13 + 0x28]
0x15fbb:	cmp	rdx, qword ptr [rsp + 0x30]
0x15fc0:	mov	rax, qword ptr [r13]
0x15fc4:	je	0x164be


0x164be:	mov	rdx, qword ptr [rsp + 0x30]
0x164c3:	lea	rdi, [rdx + rdx + 1]
0x164c8:	lea	rsi, [rdi*4]
0x164d0:	mov	qword ptr [rsp + 0x30], rdi
0x164d5:	mov	rdi, rax
0x164d8:	call	0x1f90


0x15fca:	lea	rcx, [rdx + 1]
0x15fce:	mov	qword ptr [r13 + 0x28], rcx
0x15fd2:	mov	ecx, dword ptr [rsp + 0xa8]
0x15fd9:	mov	dword ptr [rax + rdx*4], ecx
0x15fdc:	jmp	0x15f50


0x164dd:	test	rax, rax
0x164e0:	je	0x16433


0x164e6:	mov	qword ptr [r13], rax
0x164ea:	mov	rdx, qword ptr [r13 + 0x28]
0x164ee:	jmp	0x15fca


0x15fe1:	movzx	edx, byte ptr [rsp + 0xa8]
0x15fe9:	mov	esi, 1
0x15fee:	mov	rax, rdx
0x15ff1:	and	edx, 0x3f
0x15ff4:	shr	rax, 3
0x15ff8:	mov	ecx, edx
0x15ffa:	and	eax, 0x18
0x15ffd:	shl	rsi, cl
0x16000:	or	qword ptr [r12 + rax], rsi
0x16004:	jmp	0x15f50


0x167e3:	nop	dword ptr [rax]
0x167e6:	nop	word ptr cs:[rax + rax]


0x16972:	nop	dword ptr [rax]
0x16976:	nop	word ptr cs:[rax + rax]


0x16aff:	nop	


0x17337:	or	byte ptr [r13 + 0xb0], 1
0x1733f:	mov	r15, qword ptr [rdx + 8]
0x17343:	test	r15, r15
0x17346:	je	0x17959


0x17959:	mov	rax, qword ptr [rdx + 0x20]
0x1795d:	mov	rcx, qword ptr [rax + 0x38]
0x17961:	jmp	0x17354


0x1734c:	mov	rax, qword ptr [r15 + 0x18]
0x17350:	mov	rcx, qword ptr [rax + 0x38]
0x17354:	mov	rax, qword ptr [rdx + 0x10]
0x17358:	test	rax, rax
0x1735b:	je	0x1794c


0x17354:	mov	rax, qword ptr [rdx + 0x10]
0x17358:	test	rax, rax
0x1735b:	je	0x1794c


0x1794c:	mov	rax, qword ptr [rdx + 0x20]
0x17950:	mov	r9, qword ptr [rax + 0x38]
0x17954:	jmp	0x17369


0x17361:	mov	rax, qword ptr [rax + 0x18]
0x17365:	mov	r9, qword ptr [rax + 0x38]
0x17369:	test	rcx, rcx
0x1736c:	js	0x17bd1


0x17369:	test	rcx, rcx
0x1736c:	js	0x17bd1


0x17bd1:	lea	rcx, [rip + 0x50e8]
0x17bd8:	lea	rsi, [rip + 0x4b11]
0x17bdf:	lea	rdi, [rip + 0x4bc3]
0x17be6:	mov	edx, 0x5af
0x17beb:	call	0x1e30


0x17372:	test	r9, r9
0x17375:	js	0x17b93


0x17b93:	lea	rcx, [rip + 0x5126]
0x17b9a:	lea	rsi, [rip + 0x4b4f]
0x17ba1:	lea	rdi, [rip + 0x4c0b]
0x17ba8:	mov	edx, 0x5b0
0x17bad:	call	0x1e30


0x1737b:	mov	rax, qword ptr [r13 + 0x28]
0x1737f:	lea	rdi, [rdi + rdi*2]
0x17383:	mov	qword ptr [rsp + 0x38], rsi
0x17388:	mov	qword ptr [rsp + 0x30], r9
0x1738d:	mov	qword ptr [rsp + 0x18], rcx
0x17392:	mov	qword ptr [rsp + 0x10], rdx
0x17397:	lea	r10, [rax + rdi*8]
0x1739b:	mov	edi, 0x10
0x173a0:	mov	qword ptr [r10], 2
0x173a7:	mov	qword ptr [rsp], r10
0x173ab:	call	0x1f20


0x173b0:	mov	r10, qword ptr [rsp]
0x173b4:	test	rax, rax
0x173b7:	mov	rdx, qword ptr [rsp + 0x10]
0x173bc:	mov	rcx, qword ptr [rsp + 0x18]
0x173c1:	mov	r9, qword ptr [rsp + 0x30]
0x173c6:	mov	rsi, qword ptr [rsp + 0x38]
0x173cb:	mov	qword ptr [r10 + 0x10], rax
0x173cf:	je	0x1766a


0x173d5:	cmp	rcx, r9
0x173d8:	je	0x179ad


0x179ad:	mov	qword ptr [r10 + 8], 1
0x179b5:	mov	qword ptr [rax], rcx
0x179b8:	jmp	0x172b5


0x173de:	mov	qword ptr [r10 + 8], 2
0x173e6:	jl	0x17994


0x172b5:	xor	edi, edi
0x172b7:	test	r15, r15
0x172ba:	je	0x172cb


0x17994:	mov	qword ptr [rax], rcx
0x17997:	mov	qword ptr [rax + 8], r9
0x1799b:	jmp	0x172b5


0x173ec:	mov	qword ptr [rax], r9
0x173ef:	mov	qword ptr [rax + 8], rcx
0x173f3:	jmp	0x172b5


0x173f8:	mov	rax, qword ptr [rdx + 0x20]
0x173fc:	lea	rcx, [rdi + rdi*2]
0x17400:	mov	edi, 8
0x17405:	mov	qword ptr [rsp + 0x10], rsi
0x1740a:	mov	qword ptr [rsp], rdx
0x1740e:	mov	r14, qword ptr [rax + 0x38]
0x17412:	mov	rax, qword ptr [r13 + 0x28]
0x17416:	lea	r15, [rax + rcx*8]
0x1741a:	mov	qword ptr [r15], 1
0x17421:	mov	qword ptr [r15 + 8], 1
0x17429:	call	0x1f20


0x1742e:	test	rax, rax
0x17431:	mov	qword ptr [r15 + 0x10], rax
0x17435:	mov	rdx, qword ptr [rsp]
0x17439:	mov	rsi, qword ptr [rsp + 0x10]
0x1743e:	je	0x17ae8


0x17ae8:	mov	qword ptr [r15 + 8], 0
0x17af0:	mov	qword ptr [r15], 0
0x17af7:	jmp	0x1766a


0x17444:	mov	qword ptr [rax], r14
0x17447:	mov	r15, qword ptr [rdx + 8]
0x1744b:	jmp	0x172b5


0x17450:	cmp	qword ptr [rdx + 0x20], 0
0x17455:	je	0x172b1


0x172b1:	mov	r15, qword ptr [rdx + 8]
0x172b5:	xor	edi, edi
0x172b7:	test	r15, r15
0x172ba:	je	0x172cb


0x1745b:	lea	rcx, [rip + 0x585e]
0x17462:	lea	rsi, [rip + 0x5287]
0x17469:	lea	rdi, [rip + 0x5326]
0x17470:	mov	edx, 0x59f
0x17475:	call	0x1e30


0x1749a:	mov	rax, qword ptr [r13 + 0x28]
0x1749e:	lea	rcx, [rdi + rdi*2]
0x174a2:	mov	edi, 8
0x174a7:	mov	qword ptr [rsp + 0x18], rsi
0x174ac:	mov	qword ptr [rsp + 0x10], rdx
0x174b1:	lea	rcx, [rax + rcx*8]
0x174b5:	mov	qword ptr [rcx], 1
0x174bc:	mov	qword ptr [rcx + 8], 1
0x174c4:	mov	qword ptr [rsp], rcx
0x174c8:	call	0x1f20


0x174cd:	mov	rcx, qword ptr [rsp]
0x174d1:	test	rax, rax
0x174d4:	mov	rdx, qword ptr [rsp + 0x10]
0x174d9:	mov	rsi, qword ptr [rsp + 0x18]
0x174de:	mov	qword ptr [rcx + 0x10], rax
0x174e2:	je	0x17b30


0x17b30:	mov	qword ptr [rcx + 8], 0
0x17b38:	mov	qword ptr [rcx], 0
0x17b3f:	mov	eax, 0xc
0x17b44:	jmp	0x16e20


0x174e8:	mov	qword ptr [rax], r15
0x174eb:	mov	r15, qword ptr [rdx + 8]
0x174ef:	jmp	0x172b5


0x17a39:	mov	r8d, eax
0x17a3c:	add	rdx, 1
0x17a40:	add	rcx, 0x10
0x17a44:	cmp	rdx, r10
0x17a47:	jne	0x178be


0x17a4d:	or	r14b, r8b
0x17a50:	je	0x17b5a


0x178be:	cmp	byte ptr [rcx + 8], 0xc
0x178c2:	ja	0x17b8e


0x17a56:	mov	rax, rdx
0x17a59:	shl	rax, 4
0x17a5d:	add	rax, rsi
0x17a60:	jmp	0x17a78


0x17a78:	movzx	edx, byte ptr [rsi + 8]
0x17a7c:	cmp	dl, 1
0x17a7f:	jne	0x17a62


0x17a81:	cmp	byte ptr [rsi], 0
0x17a84:	jns	0x17a6b


0x17a62:	cmp	dl, 5
0x17a65:	jne	0x17a6b


0x17a86:	and	byte ptr [rsi + 0xa], 0xdf
0x17a8a:	jmp	0x17a6b


0x17a6b:	add	rsi, 0x10
0x17a6f:	cmp	rax, rsi
0x17a72:	je	0x17b57


0x17a67:	mov	byte ptr [rsi + 8], 7
0x17a6b:	add	rsi, 0x10
0x17a6f:	cmp	rax, rsi
0x17a72:	je	0x17b57


0x17b57:	mov	r14d, r8d
0x17b5a:	cmp	qword ptr [rbx + 0x98], 0
0x17b62:	movzx	edx, byte ptr [rbx + 0xb0]
0x17b69:	mov	dword ptr [rbx + 0xb4], 1
0x17b73:	setg	al
0x17b76:	and	edx, 0xfffffff9
0x17b79:	or	eax, r14d
0x17b7c:	and	eax, 1
0x17b7f:	add	eax, eax
0x17b81:	or	eax, edx
0x17b83:	mov	byte ptr [rbx + 0xb0], al
0x17b89:	jmp	0x176ae


0x17a3c:	add	rdx, 1
0x17a40:	add	rcx, 0x10
0x17a44:	cmp	rdx, r10
0x17a47:	jne	0x178be


0x17a99:	mov	edi, dword ptr [rcx]
0x17a9b:	cmp	edi, 0x20
0x17a9e:	je	0x17a3c


0x17aa0:	jbe	0x17b49


0x17b49:	cmp	edi, 0x10
0x17b4c:	je	0x17a3c


0x17aa6:	cmp	edi, 0x40
0x17aa9:	je	0x17a3c


0x17b52:	jmp	0x176ae


0x17aab:	add	edi, -0x80
0x17aae:	je	0x17a3c


0x17ab0:	jmp	0x176ae


0x17ac6:	cmp	qword ptr [rdi + 0x18], 0
0x17acb:	je	0x17a3c


0x17ad1:	jmp	0x176ae


0x17bf5:	nop	
0x17bf6:	nop	word ptr cs:[rax + rax]


0x17c6f:	nop	


0x17c7f:	nop	


0x17d43:	nop	dword ptr [rax]
0x17d46:	nop	word ptr cs:[rax + rax]


0x181cf:	nop	


0x182eb:	nop	dword ptr [rax + rax]


0x18485:	nop	
0x18486:	nop	word ptr cs:[rax + rax]


0x184d4:	nop	
0x184d6:	nop	word ptr cs:[rax + rax]


0x1857e:	nop	


0x18598:	nop	dword ptr [rax + rax]


0x185b5:	nop	
0x185b6:	nop	word ptr cs:[rax + rax]


0x185da:	nop	word ptr [rax + rax]


0x185fc:	nop	dword ptr [rax]


0x18641:	nop	word ptr cs:[rax + rax]
0x1864b:	nop	dword ptr [rax + rax]


0x1869e:	nop	


0x1871d:	nop	dword ptr [rax]


0x187bc:	nop	dword ptr [rax]


0x187e1:	nop	dword ptr [rax + rax]
0x187e6:	nop	word ptr cs:[rax + rax]


0x18846:	nop	word ptr cs:[rax + rax]


0x1886d:	nop	dword ptr [rax]


0x18a1c:	nop	dword ptr [rax]


0x19491:	nop	dword ptr [rax + rax]
0x19496:	nop	word ptr cs:[rax + rax]


0x1a5a9:	nop	dword ptr [rax]


0x1a86d:	nop	dword ptr [rax]


0x1aab2:	nop	dword ptr [rax]
0x1aab6:	nop	word ptr cs:[rax + rax]


0x1aba7:	nop	word ptr [rax + rax]


0x1abe9:	nop	dword ptr [rax]


0x1ac15:	nop	word ptr cs:[rax + rax]
0x1ac1f:	nop	


0x1ae4c:	nop	dword ptr [rax]


0x1aeb5:	nop	
0x1aeb6:	nop	word ptr cs:[rax + rax]


0x1aec2:	nop	word ptr cs:[rax + rax]
0x1aecc:	nop	dword ptr [rax]


0x5190:	lea	rax, [rip + 0x170e4]
0x5197:	lea	rdx, [rip + 0x16668]
0x519e:	cmp	ecx, 0x69
0x51a1:	lea	rsi, [rip + 0x16564]
0x51a8:	mov	edi, 1
0x51ad:	cmovne	rdx, rax
0x51b1:	xor	eax, eax
0x51b3:	call	0x1fb0


0x70d0:	xor	r10d, r10d
0x70d3:	mov	eax, dword ptr [rsp + 8]
0x70d7:	cmp	eax, 2
0x70da:	je	0x7698


0x7100:	xor	r10d, r10d
0x7103:	cmp	dword ptr [rsp + 8], 2
0x7108:	je	0x7610


0x7128:	mov	edx, 9
0x712d:	mov	ebx, 0x74
0x7132:	cmp	dword ptr [rsp + 8], 2
0x7137:	sete	al
0x713a:	and	al, byte ptr [rsp + 0xf]
0x713e:	jne	0x728e


0x7168:	mov	edx, 8
0x716d:	mov	ebx, 0x62
0x7172:	jmp	0x7144


0x7178:	cmp	dword ptr [rsp + 8], 2
0x717d:	je	0x7550


0x7220:	cmp	byte ptr [rsp + 0xd], 0
0x7225:	jne	0x73f3


0x7248:	cmp	dword ptr [rsp + 8], 2
0x724d:	sete	dl
0x7250:	xor	eax, eax
0x7252:	jmp	0x7038


0x7260:	mov	edx, 7
0x7265:	mov	ebx, 0x61
0x726a:	jmp	0x7144


0x7270:	cmp	dword ptr [rsp + 8], 2
0x7275:	sete	dl
0x7278:	test	rbp, rbp
0x727b:	jne	0x702c


0x72a0:	cmp	dword ptr [rsp + 8], 2
0x72a5:	sete	dl
0x72a8:	xor	r12d, r12d
0x72ab:	jmp	0x7281


0x72b0:	cmp	dword ptr [rsp + 8], 2
0x72b5:	mov	ebx, 0x20
0x72ba:	sete	dl
0x72bd:	jmp	0x7281


0x72c0:	mov	edx, 0xd
0x72c5:	mov	ebx, 0x72
0x72ca:	jmp	0x7132


0x72d0:	mov	edx, 0xc
0x72d5:	mov	ebx, 0x66
0x72da:	jmp	0x7144


0x72e0:	mov	edx, 0xb
0x72e5:	mov	ebx, 0x76
0x72ea:	jmp	0x7144


0x72f0:	mov	edx, 0xa
0x72f5:	mov	ebx, 0x6e
0x72fa:	jmp	0x7132


0x7390:	xor	r10d, r10d
0x7393:	cmp	byte ptr [rsp + 0xd], 0
0x7398:	jne	0x718e


0x73b0:	mov	edx, 0xc
0x73b5:	xor	r10d, r10d
0x73b8:	mov	ebx, 0x66
0x73bd:	jmp	0x7144


0x73c8:	mov	edx, 0xa
0x73cd:	xor	r10d, r10d
0x73d0:	mov	ebx, 0x6e
0x73d5:	jmp	0x7132


0x73e0:	mov	ebx, 0x61
0x73e5:	jmp	0x71b0


0x73f0:	xor	r10d, r10d
0x73f3:	cmp	dword ptr [rsp + 8], 2
0x73f8:	sete	dl
0x73fb:	cmp	byte ptr [rsp + 0xf], 0
0x7400:	jne	0x7f9a


0x7490:	cmp	dword ptr [rsp + 8], 2
0x7495:	mov	r12d, r10d
0x7498:	sete	dl
0x749b:	xor	r10d, r10d
0x749e:	xor	eax, eax
0x74a0:	jmp	0x7038


0x74a8:	cmp	dword ptr [rsp + 8], 2
0x74ad:	sete	dl
0x74b0:	xor	r10d, r10d
0x74b3:	jmp	0x7278


0x74c0:	cmp	dword ptr [rsp + 8], 2
0x74c5:	sete	dl
0x74c8:	xor	r10d, r10d
0x74cb:	xor	r12d, r12d
0x74ce:	jmp	0x7281


0x74d8:	cmp	dword ptr [rsp + 8], 2
0x74dd:	mov	r12d, r10d
0x74e0:	mov	ebx, 0x20
0x74e5:	sete	dl
0x74e8:	xor	r10d, r10d
0x74eb:	jmp	0x7281


0x7508:	mov	ebx, 0x76
0x750d:	jmp	0x71b0


0x7518:	mov	edx, 9
0x751d:	xor	r10d, r10d
0x7520:	mov	ebx, 0x74
0x7525:	jmp	0x7132


0x7530:	mov	ebx, 0x62
0x7535:	jmp	0x71b0


0x7ad0:	test	ebx, ebx
0x7ad2:	jne	0x7ecd


0x9e00:	movabs	rax, 0xc000000000000000
0x9e0a:	cmp	rbp, rax
0x9e0d:	jl	0xa140


0x9e30:	movabs	rax, 0xffc0000000000000
0x9e3a:	cmp	rbp, rax
0x9e3d:	jl	0xa140


0x9e60:	movsxd	rsi, eax
0x9e63:	movabs	rax, 0x8000000000000000
0x9e6d:	mov	r8d, 7
0x9e73:	cqo	
0x9e75:	xor	r11d, r11d
0x9e78:	movabs	r9, 0x7fffffffffffffff
0x9e82:	idiv	rsi
0x9e85:	mov	r10, rax
0x9e88:	jmp	0x9eaf


0x9ed0:	movsxd	rsi, eax
0x9ed3:	movabs	rax, 0x8000000000000000
0x9edd:	mov	r8d, 8
0x9ee3:	cqo	
0x9ee5:	xor	r11d, r11d
0x9ee8:	movabs	r9, 0x7fffffffffffffff
0x9ef2:	idiv	rsi
0x9ef5:	mov	r10, rax
0x9ef8:	jmp	0x9f1f


0x9f40:	movabs	r8, 0x8000000000000000
0x9f4a:	movsxd	rsi, eax
0x9f4d:	mov	rax, r8
0x9f50:	cqo	
0x9f52:	idiv	rsi
0x9f55:	cmp	rbp, rax
0x9f58:	jl	0xa140


0x9f80:	movsxd	rsi, eax
0x9f83:	movabs	rax, 0x8000000000000000
0x9f8d:	mov	r8d, 3
0x9f93:	cqo	
0x9f95:	xor	r11d, r11d
0x9f98:	movabs	r9, 0x7fffffffffffffff
0x9fa2:	idiv	rsi
0x9fa5:	mov	r10, rax
0x9fa8:	cmp	r10, rbp
0x9fab:	jg	0xa1a0


0x9fe0:	movsxd	rsi, eax
0x9fe3:	movabs	rax, 0x8000000000000000
0x9fed:	mov	r8d, 6
0x9ff3:	cqo	
0x9ff5:	xor	r11d, r11d
0x9ff8:	movabs	r9, 0x7fffffffffffffff
0xa002:	idiv	rsi
0xa005:	mov	r10, rax
0xa008:	jmp	0xa02b


0xa048:	movsxd	rsi, eax
0xa04b:	movabs	rax, 0x8000000000000000
0xa055:	mov	r8d, 5
0xa05b:	cqo	
0xa05d:	xor	r11d, r11d
0xa060:	movabs	r9, 0x7fffffffffffffff
0xa06a:	idiv	rsi
0xa06d:	mov	r10, rax
0xa070:	jmp	0xa097


0xa0b0:	movabs	rax, 0xffe0000000000000
0xa0ba:	cmp	rbp, rax
0xa0bd:	jl	0xa140


0xa0e0:	movsxd	rsi, eax
0xa0e3:	movabs	rax, 0x8000000000000000
0xa0ed:	mov	r8d, 4
0xa0f3:	cqo	
0xa0f5:	xor	r11d, r11d
0xa0f8:	movabs	r9, 0x7fffffffffffffff
0xa102:	idiv	rsi
0xa105:	mov	r10, rax
0xa108:	cmp	r10, rbp
0xa10b:	jg	0xa170


0x14d80:	and	r15d, 0x1200
0x14d87:	mov	eax, 1
0x14d8c:	cmp	r15, 0x1200
0x14d93:	jne	0x14c14


0x14da8:	and	r15d, 0x8400
0x14daf:	cmp	r15, 0x8000
0x14db6:	je	0x14e92


0x14dd0:	and	r15d, 0x1200
0x14dd7:	mov	eax, 1
0x14ddc:	cmp	r15, 0x1200
0x14de3:	jne	0x14c14


0x14df8:	test	r15d, 0x800008
0x14dff:	jne	0x14e0a


0x14e20:	mov	byte ptr [rbp + 8], 0x14
0x14e24:	mov	eax, 1
0x14e29:	jmp	0x14c14


0x14e30:	test	r15d, 0x402
0x14e37:	mov	eax, 1
0x14e3c:	jne	0x14c14


0x14e50:	mov	byte ptr [rbp + 8], 5
0x14e54:	mov	eax, 1
0x14e59:	jmp	0x14c14


0x14e60:	test	r15d, 0x402
0x14e67:	mov	eax, 1
0x14e6c:	jne	0x14c14


0x14e80:	test	r15d, 0x800
0x14e87:	mov	eax, 1
0x14e8c:	je	0x14c14


0x14eb0:	test	r15d, 0x2000
0x14eb7:	mov	eax, 1
0x14ebc:	je	0x14c14


0x14ed0:	test	r15d, 0x2000
0x14ed7:	mov	eax, 1
0x14edc:	je	0x14c14


0x14ef0:	test	r15b, 8
0x14ef4:	jne	0x14f04


0x159d0:	mov	rax, qword ptr [rsp + 0x18]
0x159d5:	mov	ebp, dword ptr [rax]
0x159d7:	test	ebp, 0x30f
0x159dd:	je	0x15a41


0x15cc8:	mov	rbx, qword ptr [rsp + 0x40]
0x15ccd:	cmp	cl, 0x21
0x15cd0:	mov	rsi, qword ptr [rdi + 0x78]
0x15cd4:	sete	r8b
0x15cd8:	lea	rcx, [rip + 0x5b03]
0x15cdf:	lea	rdx, [rip + 0x6a6d]
0x15ce6:	movzx	r8d, r8b
0x15cea:	mov	r9, rbx
0x15ced:	jmp	0x15c9d


0x17480:	mov	rax, qword ptr [rdx + 0x20]
0x17484:	mov	r15, qword ptr [rax + 0x38]
0x17488:	mov	rax, qword ptr [r13 + 0x18]
0x1748c:	mov	qword ptr [rax + rdi*8], r15
0x17490:	cmp	byte ptr [rdx + 0x30], 4
0x17494:	jne	0x172b1


0x17a90:	cmp	byte ptr [rcx], 0
0x17a93:	cmovs	r14d, eax
0x17a97:	jmp	0x17a3c


0x17ab8:	mov	rdi, qword ptr [rcx]
0x17abb:	cmp	qword ptr [rdi + 0x10], 0
0x17ac0:	jne	0x176ae


0x2217:	nop	word ptr [rax + rax]


0x28ca:	nop	word ptr [rax + rax]


0x2973:	nop	dword ptr [rax + rax]


0x2b55:	nop	dword ptr [rax]


0x2e08:	nop	dword ptr [rax + rax]


0x2e98:	nop	dword ptr [rax + rax]


0x2ed8:	nop	dword ptr [rax + rax]


0x2efe:	nop	


0x2f22:	nop	word ptr [rax + rax]


0x2f4b:	nop	dword ptr [rax + rax]


0x2f88:	nop	dword ptr [rax + rax]


0x2fb9:	nop	dword ptr [rax]


0x2ff9:	nop	dword ptr [rax]


0x303c:	nop	dword ptr [rax]


0x3062:	nop	word ptr [rax + rax]


0x309d:	nop	dword ptr [rax]


0x30b3:	nop	dword ptr [rax + rax]


0x30c3:	nop	dword ptr [rax + rax]


0x3124:	nop	dword ptr [rax]


0x3136:	nop	word ptr cs:[rax + rax]


0x316d:	nop	dword ptr [rax]


0x3191:	nop	dword ptr [rax]


0x31b5:	nop	dword ptr [rax]


0x31ea:	nop	word ptr [rax + rax]


0x33bf:	nop	


0x33c7:	nop	word ptr [rax + rax]


0x3753:	nop	dword ptr [rax + rax]


0x3785:	nop	dword ptr [rax]


0x3792:	nop	word ptr [rax + rax]


0x381c:	nop	dword ptr [rax]


0x395b:	nop	dword ptr [rax + rax]


0x4896:	nop	word ptr cs:[rax + rax]


0x48e7:	nop	word ptr [rax + rax]


0x4931:	nop	dword ptr [rax]


0x4984:	nop	dword ptr [rax]


0x49d9:	nop	dword ptr [rax]


0x4a7a:	nop	word ptr [rax + rax]


0x4aac:	nop	dword ptr [rax]


0x4ac4:	nop	dword ptr [rax]


0x4b3b:	nop	dword ptr [rax + rax]


0x4b63:	nop	dword ptr [rax + rax]


0x4bb3:	nop	dword ptr [rax + rax]


0x4bcf:	nop	


0x4be6:	nop	word ptr cs:[rax + rax]


0x4c05:	nop	dword ptr [rax]


0x4c1d:	nop	dword ptr [rax]


0x4c35:	nop	dword ptr [rax]


0x4c4d:	nop	dword ptr [rax]


0x4c65:	nop	dword ptr [rax]


0x4c7d:	nop	dword ptr [rax]


0x4db1:	nop	dword ptr [rax]


0x4e94:	nop	dword ptr [rax]


0x4edf:	nop	


0x4f84:	nop	dword ptr [rax]


0x4f94:	nop	dword ptr [rax]


0x5075:	nop	dword ptr [rax]


0x50dc:	nop	dword ptr [rax]


0x5114:	nop	dword ptr [rax]


0x512d:	nop	dword ptr [rax]


0x5151:	nop	dword ptr [rax]


0x517a:	nop	word ptr [rax + rax]


0x518c:	nop	dword ptr [rax]


0x51bd:	nop	dword ptr [rax]


0x5443:	nop	dword ptr [rax + rax]


0x546c:	nop	dword ptr [rax]


0x54b6:	nop	word ptr cs:[rax + rax]


0x5986:	nop	word ptr cs:[rax + rax]


0x5a13:	nop	dword ptr [rax + rax]


0x5a47:	nop	word ptr [rax + rax]


0x5abd:	nop	dword ptr [rax]


0x5b2f:	nop	


0x5bb4:	nop	dword ptr [rax]


0x5be3:	nop	dword ptr [rax + rax]


0x5c8f:	nop	


0x5ed2:	nop	word ptr [rax + rax]


0x5ee1:	nop	dword ptr [rax]


0x5f18:	nop	dword ptr [rax + rax]


0x5f38:	nop	dword ptr [rax + rax]


0x5f5f:	nop	


0x5f67:	nop	word ptr [rax + rax]


0x5f79:	nop	dword ptr [rax]


0x6142:	nop	word ptr [rax + rax]


0x6169:	nop	dword ptr [rax]


0x6274:	nop	dword ptr [rax]


0x6293:	nop	dword ptr [rax + rax]


0x62b4:	nop	dword ptr [rax]


0x62d8:	nop	dword ptr [rax + rax]


0x62ea:	nop	word ptr [rax + rax]


0x62f9:	nop	dword ptr [rax]


0x634c:	nop	dword ptr [rax]


0x6424:	nop	dword ptr [rax]


0x65b8:	nop	dword ptr [rax + rax]


0x6665:	nop	dword ptr [rax]


0x6683:	nop	dword ptr [rax + rax]


0x669b:	nop	dword ptr [rax + rax]


0x66c1:	nop	dword ptr [rax]


0x66d2:	nop	word ptr [rax + rax]


0x66f1:	nop	dword ptr [rax]


0x6702:	nop	word ptr [rax + rax]


0x6712:	nop	word ptr [rax + rax]


0x6754:	nop	dword ptr [rax]


0x6806:	nop	word ptr cs:[rax + rax]


0x6901:	nop	dword ptr [rax]


0x69d5:	nop	dword ptr [rax]


0x6acd:	nop	dword ptr [rax]


0x6b35:	nop	dword ptr [rax]


0x6b52:	nop	word ptr [rax + rax]


0x6c49:	nop	dword ptr [rax]


0x6c69:	nop	dword ptr [rax]


0x6c89:	nop	dword ptr [rax]


0x6cf1:	nop	dword ptr [rax]


0x6d0f:	nop	


0x6d5c:	nop	dword ptr [rax]


0x6dad:	nop	dword ptr [rax]


0x6fd8:	nop	dword ptr [rax + rax]


0x70c7:	nop	word ptr [rax + rax]


0x70fe:	nop	


0x7121:	nop	dword ptr [rax]


0x7162:	nop	word ptr [rax + rax]


0x7174:	nop	dword ptr [rax]


0x7218:	nop	dword ptr [rax + rax]


0x7241:	nop	dword ptr [rax]


0x7257:	nop	word ptr [rax + rax]


0x726f:	nop	


0x729e:	nop	


0x72ad:	nop	dword ptr [rax]


0x72bf:	nop	


0x72cf:	nop	


0x72df:	nop	


0x72ef:	nop	


0x72ff:	nop	


0x736c:	nop	dword ptr [rax]


0x738c:	nop	dword ptr [rax]


0x739e:	nop	


0x73af:	nop	


0x73c2:	nop	word ptr [rax + rax]


0x73da:	nop	word ptr [rax + rax]


0x73ea:	nop	word ptr [rax + rax]


0x748b:	nop	dword ptr [rax + rax]


0x74a5:	nop	dword ptr [rax]


0x74b8:	nop	dword ptr [rax + rax]


0x74d3:	nop	dword ptr [rax + rax]


0x7502:	nop	word ptr [rax + rax]


0x7512:	nop	word ptr [rax + rax]


0x752a:	nop	word ptr [rax + rax]


0x753a:	nop	word ptr [rax + rax]


0x7548:	nop	dword ptr [rax + rax]


0x756f:	nop	


0x7609:	nop	dword ptr [rax]


0x7652:	nop	word ptr [rax + rax]


0x7678:	nop	dword ptr [rax + rax]


0x7691:	nop	dword ptr [rax]


0x76b2:	nop	word ptr [rax + rax]


0x7818:	nop	dword ptr [rax + rax]


0x792b:	nop	dword ptr [rax + rax]


0x794e:	nop	


0x7a15:	nop	dword ptr [rax]


0x7acd:	nop	dword ptr [rax]


0x7cd6:	nop	word ptr cs:[rax + rax]


0x7d69:	nop	dword ptr [rax]


0x7ddd:	nop	dword ptr [rax]


0x7ebd:	nop	dword ptr [rax]


0x81cb:	nop	dword ptr [rax + rax]


0x8a2e:	nop	


0x8aec:	nop	dword ptr [rax]


0x8b0b:	nop	dword ptr [rax + rax]


0x8b2e:	nop	


0x8b55:	nop	dword ptr [rax]


0x8bf9:	nop	dword ptr [rax]


0x8d31:	nop	dword ptr [rax]


0x8e02:	nop	word ptr [rax + rax]


0x8e7b:	nop	dword ptr [rax + rax]


0x8f68:	nop	dword ptr [rax + rax]


0x8fa6:	nop	word ptr cs:[rax + rax]


0x8fce:	nop	


0x9055:	nop	dword ptr [rax]


0x9079:	nop	dword ptr [rax]


0x911d:	nop	dword ptr [rax]


0x9152:	nop	word ptr [rax + rax]


0x917c:	nop	dword ptr [rax]


0x91a3:	nop	dword ptr [rax + rax]


0x91e6:	nop	word ptr cs:[rax + rax]


0x91fb:	nop	dword ptr [rax + rax]


0x921a:	nop	word ptr [rax + rax]


0x9239:	nop	dword ptr [rax]


0x9346:	nop	word ptr cs:[rax + rax]


0x93d5:	nop	dword ptr [rax]


0x93f6:	nop	word ptr cs:[rax + rax]


0x9455:	nop	dword ptr [rax]


0x9491:	nop	dword ptr [rax]


0x94d8:	nop	dword ptr [rax + rax]


0x9527:	nop	word ptr [rax + rax]


0x9584:	nop	dword ptr [rax]


0x95b2:	nop	word ptr [rax + rax]


0x9666:	nop	word ptr cs:[rax + rax]


0x96c9:	nop	dword ptr [rax]


0x9942:	nop	word ptr [rax + rax]


0x99c9:	nop	dword ptr [rax]


0x99f4:	nop	dword ptr [rax]


0x9a4d:	nop	dword ptr [rax]


0x9b83:	nop	dword ptr [rax + rax]


0x9bb3:	nop	dword ptr [rax + rax]


0x9c7f:	nop	


0x9c93:	nop	dword ptr [rax + rax]


0x9d42:	nop	word ptr [rax + rax]


0x9d54:	nop	dword ptr [rax]


0x9dfb:	nop	dword ptr [rax + rax]


0x9e2b:	nop	dword ptr [rax + rax]


0x9e5c:	nop	dword ptr [rax]


0x9e8a:	nop	word ptr [rax + rax]


0x9ec6:	nop	word ptr cs:[rax + rax]


0x9efa:	nop	word ptr [rax + rax]


0x9f36:	nop	word ptr cs:[rax + rax]


0x9f7c:	nop	dword ptr [rax]


0x9fcc:	nop	dword ptr [rax]


0x9fd8:	nop	dword ptr [rax + rax]


0xa00a:	nop	word ptr [rax + rax]


0xa042:	nop	word ptr [rax + rax]


0xa072:	nop	word ptr [rax + rax]


0xa0ae:	nop	


0xa0df:	nop	


0xa12d:	nop	dword ptr [rax]


0xa13b:	nop	dword ptr [rax + rax]


0xa155:	nop	dword ptr [rax]


0xa16d:	nop	dword ptr [rax]


0xa182:	nop	word ptr [rax + rax]


0xa19d:	nop	dword ptr [rax]


0xa1b5:	nop	dword ptr [rax]


0xa1cd:	nop	dword ptr [rax]


0xa1e5:	nop	dword ptr [rax]


0xa1fd:	nop	dword ptr [rax]


0xa215:	nop	dword ptr [rax]


0xa2d5:	nop	dword ptr [rax]


0xa333:	nop	dword ptr [rax + rax]


0xa35f:	nop	


0xa49e:	nop	


0xa4a7:	nop	word ptr [rax + rax]


0xa4f9:	nop	dword ptr [rax]


0xa50d:	nop	dword ptr [rax]


0xa51a:	nop	word ptr [rax + rax]


0xa52a:	nop	word ptr [rax + rax]


0xa546:	nop	word ptr cs:[rax + rax]


0xa55a:	nop	word ptr [rax + rax]


0xa579:	nop	dword ptr [rax]


0xa613:	nop	dword ptr [rax + rax]


0xa672:	nop	word ptr [rax + rax]


0xa74a:	nop	word ptr [rax + rax]


0xa769:	nop	dword ptr [rax]


0xa796:	nop	word ptr cs:[rax + rax]


0xa7fb:	nop	dword ptr [rax + rax]


0xa806:	nop	word ptr cs:[rax + rax]


0xa81d:	nop	dword ptr [rax]


0xa83f:	nop	


0xa862:	nop	word ptr [rax + rax]


0xa8af:	nop	


0xa8cd:	nop	dword ptr [rax]


0xa973:	nop	dword ptr [rax + rax]


0xa98f:	nop	


0xa9d1:	nop	dword ptr [rax]


0xa9fe:	nop	


0xaa45:	nop	dword ptr [rax]


0xaa7d:	nop	dword ptr [rax]


0xaac6:	nop	word ptr cs:[rax + rax]


0xaada:	nop	word ptr [rax + rax]


0xaaf4:	nop	dword ptr [rax]


0xab0c:	nop	dword ptr [rax]


0xab87:	nop	word ptr [rax + rax]


0xabcc:	nop	dword ptr [rax]


0xac52:	nop	word ptr [rax + rax]


0xac92:	nop	word ptr [rax + rax]


0xad8f:	nop	


0xad9e:	nop	


0xadae:	nop	


0xaddc:	nop	dword ptr [rax]


0xadf6:	nop	word ptr cs:[rax + rax]


0xae42:	nop	word ptr [rax + rax]


0xaef8:	nop	dword ptr [rax + rax]


0xb037:	nop	word ptr [rax + rax]


0xb175:	nop	dword ptr [rax]


0xb193:	nop	dword ptr [rax + rax]


0xb1c3:	nop	dword ptr [rax + rax]


0xb1f7:	nop	word ptr [rax + rax]


0xb285:	nop	dword ptr [rax]


0xb52a:	nop	word ptr [rax + rax]


0xb556:	nop	word ptr cs:[rax + rax]


0xb596:	nop	word ptr cs:[rax + rax]


0xb5b1:	nop	dword ptr [rax]


0xb5c6:	nop	word ptr cs:[rax + rax]


0xb61b:	nop	dword ptr [rax + rax]


0xb6b4:	nop	dword ptr [rax]


0xb7bb:	nop	dword ptr [rax + rax]


0xb87c:	nop	dword ptr [rax]


0xba12:	nop	word ptr [rax + rax]


0xba9f:	nop	


0xbae9:	nop	dword ptr [rax]


0xbb46:	nop	word ptr cs:[rax + rax]


0xbc61:	nop	dword ptr [rax]


0xbc9f:	nop	


0xbece:	nop	


0xbee4:	nop	dword ptr [rax]


0xbefe:	nop	


0xbf0e:	nop	


0xbf38:	nop	dword ptr [rax + rax]


0xbf74:	nop	dword ptr [rax]


0xbf97:	nop	word ptr [rax + rax]


0xbfb9:	nop	dword ptr [rax]


0xc055:	nop	dword ptr [rax]


0xc06d:	nop	dword ptr [rax]


0xc081:	nop	dword ptr [rax]


0xc09c:	nop	dword ptr [rax]


0xc11f:	nop	


0xc16f:	nop	


0xc1d1:	nop	dword ptr [rax]


0xc1ef:	nop	


0xc25b:	nop	dword ptr [rax + rax]


0xc2e5:	nop	dword ptr [rax]


0xc3ed:	nop	dword ptr [rax]


0xc40c:	nop	dword ptr [rax]


0xc42c:	nop	dword ptr [rax]


0xc43c:	nop	dword ptr [rax]


0xc44c:	nop	dword ptr [rax]


0xc4fd:	nop	dword ptr [rax]


0xc561:	nop	dword ptr [rax]


0xc56b:	nop	dword ptr [rax + rax]


0xc583:	nop	dword ptr [rax + rax]


0xc591:	nop	dword ptr [rax]


0xc5ba:	nop	word ptr [rax + rax]


0xc5e1:	nop	dword ptr [rax]


0xc619:	nop	dword ptr [rax]


0xc71c:	nop	dword ptr [rax]


0xc7ab:	nop	dword ptr [rax + rax]


0xc819:	nop	dword ptr [rax]


0xc877:	nop	word ptr [rax + rax]


0xc8d2:	nop	word ptr [rax + rax]


0xc99c:	nop	dword ptr [rax]


0xca0b:	nop	dword ptr [rax + rax]


0xcaed:	nop	dword ptr [rax]


0xcb23:	nop	dword ptr [rax + rax]


0xcb2a:	nop	word ptr [rax + rax]


0xcb3d:	nop	dword ptr [rax]


0xcb6c:	nop	dword ptr [rax]


0xcb96:	nop	word ptr cs:[rax + rax]


0xcbc7:	nop	word ptr [rax + rax]


0xcc91:	nop	dword ptr [rax]


0xcd57:	nop	word ptr [rax + rax]


0xcd64:	nop	dword ptr [rax]


0xcda9:	nop	dword ptr [rax]


0xce79:	nop	dword ptr [rax]


0xcf73:	nop	dword ptr [rax + rax]


0xd06d:	nop	dword ptr [rax]


0xd08b:	nop	dword ptr [rax + rax]


0xd0ff:	nop	


0xd116:	nop	word ptr cs:[rax + rax]


0xd1ad:	nop	dword ptr [rax]


0xd1ea:	nop	word ptr [rax + rax]


0xd21b:	nop	dword ptr [rax + rax]


0xd245:	nop	dword ptr [rax]


0xd265:	nop	dword ptr [rax]


0xd285:	nop	dword ptr [rax]


0xd315:	nop	dword ptr [rax]


0xd35e:	nop	


0xd464:	nop	dword ptr [rax]


0xd4c9:	nop	dword ptr [rax]


0xd4f9:	nop	dword ptr [rax]


0xd50c:	nop	dword ptr [rax]


0xd647:	nop	word ptr [rax + rax]


0xd701:	nop	dword ptr [rax]


0xd713:	nop	dword ptr [rax + rax]


0xd72c:	nop	dword ptr [rax]


0xd74e:	nop	


0xd7a7:	nop	word ptr [rax + rax]


0xd8aa:	nop	word ptr [rax + rax]


0xd922:	nop	word ptr [rax + rax]


0xd93c:	nop	dword ptr [rax]


0xd971:	nop	dword ptr [rax]


0xdb26:	nop	word ptr cs:[rax + rax]


0xdc0c:	nop	dword ptr [rax]


0xdcb9:	nop	dword ptr [rax]


0xdd57:	nop	word ptr [rax + rax]


0xdd89:	nop	dword ptr [rax]


0xdd9a:	nop	word ptr [rax + rax]


0xdde1:	nop	dword ptr [rax]


0xde6f:	nop	


0xdece:	nop	


0xdedc:	nop	dword ptr [rax]


0xdee3:	nop	dword ptr [rax + rax]


0xdf04:	nop	dword ptr [rax]


0xdf15:	nop	dword ptr [rax]


0xdf78:	nop	dword ptr [rax + rax]


0xdfda:	nop	word ptr [rax + rax]


0xdff2:	nop	word ptr [rax + rax]


0xe16c:	nop	dword ptr [rax]


0xe17d:	nop	dword ptr [rax]


0xe1a1:	nop	dword ptr [rax]


0xe1b2:	nop	word ptr [rax + rax]


0xe1ce:	nop	


0xe2c4:	nop	dword ptr [rax]


0xe2d3:	nop	dword ptr [rax + rax]


0xe305:	nop	dword ptr [rax]


0xe3a5:	nop	dword ptr [rax]


0xe3b4:	nop	dword ptr [rax]


0xe3e9:	nop	dword ptr [rax]


0xe412:	nop	word ptr [rax + rax]


0xe489:	nop	dword ptr [rax]


0xe4b1:	nop	dword ptr [rax]


0xe4e1:	nop	dword ptr [rax]


0xe569:	nop	dword ptr [rax]


0xe59e:	nop	


0xe5d5:	nop	dword ptr [rax]


0xe63e:	nop	


0xe745:	nop	dword ptr [rax]


0xe805:	nop	dword ptr [rax]


0xe8e4:	nop	dword ptr [rax]


0xe927:	nop	word ptr [rax + rax]


0xe93d:	nop	dword ptr [rax]


0xe9b7:	nop	word ptr [rax + rax]


0xedef:	nop	


0xee1b:	nop	dword ptr [rax + rax]


0xef0a:	nop	word ptr [rax + rax]


0xf108:	nop	dword ptr [rax + rax]


0xf148:	nop	dword ptr [rax + rax]


0xf1bd:	nop	dword ptr [rax]


0xf286:	nop	word ptr cs:[rax + rax]


0xf312:	nop	word ptr [rax + rax]


0xf3f3:	nop	dword ptr [rax + rax]


0xf485:	nop	dword ptr [rax]


0xf5e3:	nop	dword ptr [rax + rax]


0xf5ff:	nop	


0xf73b:	nop	dword ptr [rax + rax]


0xf843:	nop	dword ptr [rax + rax]


0xf948:	nop	dword ptr [rax + rax]


0xf992:	nop	word ptr [rax + rax]


0xfa16:	nop	word ptr cs:[rax + rax]


0xfa9b:	nop	dword ptr [rax + rax]


0xfb35:	nop	dword ptr [rax]


0xfc61:	nop	dword ptr [rax]


0x10148:	nop	dword ptr [rax + rax]


0x1015a:	nop	word ptr [rax + rax]


0x10198:	nop	dword ptr [rax + rax]


0x1026a:	nop	word ptr [rax + rax]


0x10366:	nop	word ptr cs:[rax + rax]


0x10404:	nop	dword ptr [rax]


0x10793:	nop	dword ptr [rax + rax]


0x107b8:	nop	dword ptr [rax + rax]


0x107e9:	nop	dword ptr [rax]


0x107ff:	nop	


0x1081d:	nop	dword ptr [rax]


0x1082d:	nop	dword ptr [rax]


0x10865:	nop	dword ptr [rax]


0x10881:	nop	dword ptr [rax]


0x10899:	nop	dword ptr [rax]


0x10b44:	nop	dword ptr [rax]


0x10ca3:	nop	dword ptr [rax + rax]


0x10deb:	nop	dword ptr [rax + rax]


0x10e79:	nop	dword ptr [rax]


0x10e94:	nop	dword ptr [rax]


0x10eb1:	nop	dword ptr [rax]


0x10f0d:	nop	dword ptr [rax]


0x10f2d:	nop	dword ptr [rax]


0x10f5a:	nop	word ptr [rax + rax]


0x111db:	nop	dword ptr [rax + rax]


0x11319:	nop	dword ptr [rax]


0x113c9:	nop	dword ptr [rax]


0x1141b:	nop	dword ptr [rax + rax]


0x1145f:	nop	


0x114f6:	nop	word ptr cs:[rax + rax]


0x115ce:	nop	


0x11633:	nop	dword ptr [rax + rax]


0x1164a:	nop	word ptr [rax + rax]


0x11694:	nop	dword ptr [rax]


0x116d7:	nop	word ptr [rax + rax]


0x116e8:	nop	dword ptr [rax + rax]


0x1176a:	nop	word ptr [rax + rax]


0x117af:	nop	


0x11832:	nop	word ptr [rax + rax]


0x119fa:	nop	word ptr [rax + rax]


0x11aa9:	nop	dword ptr [rax]


0x11ab7:	nop	word ptr [rax + rax]


0x11bd1:	nop	dword ptr [rax]


0x11bfe:	nop	


0x11c89:	nop	dword ptr [rax]


0x11dab:	nop	dword ptr [rax + rax]


0x11ea1:	nop	dword ptr [rax]


0x11ebc:	nop	dword ptr [rax]


0x11ef1:	nop	dword ptr [rax]


0x11f5c:	nop	dword ptr [rax]


0x12073:	nop	dword ptr [rax + rax]


0x120e3:	nop	dword ptr [rax + rax]


0x1217b:	nop	dword ptr [rax + rax]


0x1227a:	nop	word ptr [rax + rax]


0x122c3:	nop	dword ptr [rax + rax]


0x122ef:	nop	


0x12335:	nop	dword ptr [rax]


0x12393:	nop	dword ptr [rax + rax]


0x124cb:	nop	dword ptr [rax + rax]


0x12566:	nop	word ptr cs:[rax + rax]


0x125b2:	nop	word ptr [rax + rax]


0x125c3:	nop	dword ptr [rax + rax]


0x1261e:	nop	


0x12749:	nop	dword ptr [rax]


0x128a6:	nop	word ptr cs:[rax + rax]


0x128db:	nop	dword ptr [rax + rax]


0x128f1:	nop	dword ptr [rax]


0x1292b:	nop	dword ptr [rax + rax]


0x12e68:	nop	dword ptr [rax + rax]


0x12e8c:	nop	dword ptr [rax]


0x12ed2:	nop	word ptr [rax + rax]


0x13071:	nop	dword ptr [rax]


0x1319e:	nop	


0x1340e:	nop	


0x1346b:	nop	dword ptr [rax + rax]


0x134b5:	nop	dword ptr [rax]


0x13516:	nop	word ptr cs:[rax + rax]


0x1355d:	nop	dword ptr [rax]


0x1358c:	nop	dword ptr [rax]


0x135cc:	nop	dword ptr [rax]


0x13605:	nop	dword ptr [rax]


0x13636:	nop	word ptr cs:[rax + rax]


0x137c4:	nop	dword ptr [rax]


0x1383d:	nop	dword ptr [rax]


0x1387e:	nop	


0x1389b:	nop	dword ptr [rax + rax]


0x138ee:	nop	


0x138fd:	nop	dword ptr [rax]


0x1391b:	nop	dword ptr [rax + rax]


0x1392a:	nop	word ptr [rax + rax]


0x13958:	nop	dword ptr [rax + rax]


0x139bc:	nop	dword ptr [rax]


0x13a29:	nop	dword ptr [rax]


0x13a61:	nop	dword ptr [rax]


0x13df7:	nop	word ptr [rax + rax]


0x13e8e:	nop	


0x13fae:	nop	


0x14132:	nop	word ptr [rax + rax]


0x14161:	nop	dword ptr [rax]


0x14252:	nop	word ptr [rax + rax]


0x14351:	nop	dword ptr [rax]


0x1437a:	nop	word ptr [rax + rax]


0x1439c:	nop	dword ptr [rax]


0x1441d:	nop	dword ptr [rax]


0x1442e:	nop	


0x144a8:	nop	dword ptr [rax + rax]


0x14503:	nop	dword ptr [rax + rax]


0x14528:	nop	dword ptr [rax + rax]


0x1454c:	nop	dword ptr [rax]


0x145e1:	nop	dword ptr [rax]


0x1465b:	nop	dword ptr [rax + rax]


0x14671:	nop	dword ptr [rax]


0x14682:	nop	word ptr [rax + rax]


0x146c9:	nop	dword ptr [rax]


0x1483c:	nop	dword ptr [rax]


0x14857:	nop	word ptr [rax + rax]


0x14972:	nop	word ptr [rax + rax]


0x149af:	nop	


0x149c7:	nop	word ptr [rax + rax]


0x14a56:	nop	word ptr cs:[rax + rax]


0x14ad2:	nop	word ptr [rax + rax]


0x14b05:	nop	dword ptr [rax]


0x14c06:	nop	word ptr cs:[rax + rax]


0x14c37:	nop	word ptr [rax + rax]


0x14c9e:	nop	


0x14cb6:	nop	word ptr cs:[rax + rax]


0x14d4a:	nop	word ptr [rax + rax]


0x14d6b:	nop	dword ptr [rax + rax]


0x14d7e:	nop	


0x14da2:	nop	word ptr [rax + rax]


0x14dc6:	nop	word ptr cs:[rax + rax]


0x14df2:	nop	word ptr [rax + rax]


0x14e1f:	nop	


0x14e2e:	nop	


0x14e4b:	nop	dword ptr [rax + rax]


0x14e5e:	nop	


0x14e7b:	nop	dword ptr [rax + rax]


0x14eae:	nop	


0x14ecb:	nop	dword ptr [rax + rax]


0x14eeb:	nop	dword ptr [rax + rax]


0x1513f:	nop	


0x152a4:	nop	dword ptr [rax]


0x152d9:	nop	dword ptr [rax]


0x152f3:	nop	dword ptr [rax + rax]


0x156c6:	nop	word ptr cs:[rax + rax]


0x15787:	nop	word ptr [rax + rax]


0x157bc:	nop	dword ptr [rax]


0x15825:	nop	dword ptr [rax]


0x15896:	nop	word ptr cs:[rax + rax]


0x158b8:	nop	dword ptr [rax + rax]


0x158ea:	nop	word ptr [rax + rax]


0x1597d:	nop	dword ptr [rax]


0x159cc:	nop	dword ptr [rax]


0x15cc4:	nop	dword ptr [rax]


0x16443:	nop	dword ptr [rax + rax]


0x165b7:	nop	word ptr [rax + rax]


0x168ec:	nop	dword ptr [rax]


0x16912:	nop	word ptr [rax + rax]


0x1693f:	nop	


0x169eb:	nop	dword ptr [rax + rax]


0x16aea:	nop	word ptr [rax + rax]


0x16e1e:	nop	


0x16e35:	nop	dword ptr [rax]


0x16eff:	nop	


0x17143:	nop	dword ptr [rax + rax]


0x172c4:	nop	dword ptr [rax]


0x1747a:	nop	word ptr [rax + rax]


0x17511:	nop	dword ptr [rax]


0x175c8:	nop	dword ptr [rax + rax]


0x1762f:	nop	


0x1770a:	nop	word ptr [rax + rax]


0x1773d:	nop	dword ptr [rax]


0x177b8:	nop	dword ptr [rax + rax]


0x17815:	nop	dword ptr [rax]


0x17a8c:	nop	dword ptr [rax]


0x17ab5:	nop	dword ptr [rax]


0x17ad6:	nop	word ptr cs:[rax + rax]


0x17c62:	nop	word ptr [rax + rax]


0x17e94:	nop	dword ptr [rax]


0x17f8c:	nop	dword ptr [rax]


0x17fa9:	nop	dword ptr [rax]


0x17fc9:	nop	dword ptr [rax]


0x1800a:	nop	word ptr [rax + rax]


0x18018:	nop	dword ptr [rax + rax]


0x18081:	nop	dword ptr [rax]


0x180a6:	nop	word ptr cs:[rax + rax]


0x180bc:	nop	dword ptr [rax]


0x180cc:	nop	dword ptr [rax]


0x18141:	nop	dword ptr [rax]


0x1827c:	nop	dword ptr [rax]


0x182cc:	nop	dword ptr [rax]


0x182d9:	nop	dword ptr [rax]


0x183b7:	nop	word ptr [rax + rax]


0x183d1:	nop	dword ptr [rax]


0x1846b:	nop	dword ptr [rax + rax]


0x18475:	nop	dword ptr [rax]


0x18554:	nop	dword ptr [rax]


0x18571:	nop	dword ptr [rax]


0x18621:	nop	dword ptr [rax]


0x18659:	nop	dword ptr [rax]


0x186d4:	nop	dword ptr [rax]


0x186f1:	nop	dword ptr [rax]


0x18702:	nop	word ptr [rax + rax]


0x1875a:	nop	word ptr [rax + rax]


0x187a6:	nop	word ptr cs:[rax + rax]


0x187ce:	nop	


0x1882b:	nop	dword ptr [rax + rax]


0x18918:	nop	dword ptr [rax + rax]


0x18978:	nop	dword ptr [rax + rax]


0x1899e:	nop	


0x189b7:	nop	word ptr [rax + rax]


0x189cf:	nop	


0x189e3:	nop	dword ptr [rax + rax]


0x18b25:	nop	dword ptr [rax]


0x18c97:	nop	word ptr [rax + rax]


0x18ccf:	nop	


0x18e9b:	nop	dword ptr [rax + rax]


0x18ec4:	nop	dword ptr [rax]


0x18ee8:	nop	dword ptr [rax + rax]


0x18f12:	nop	word ptr [rax + rax]


0x18f38:	nop	dword ptr [rax + rax]


0x19092:	nop	word ptr [rax + rax]


0x19146:	nop	word ptr cs:[rax + rax]


0x19167:	nop	word ptr [rax + rax]


0x19189:	nop	dword ptr [rax]


0x191af:	nop	


0x191bc:	nop	dword ptr [rax]


0x19255:	nop	dword ptr [rax]


0x19268:	nop	dword ptr [rax + rax]


0x19285:	nop	dword ptr [rax]


0x19293:	nop	dword ptr [rax + rax]


0x192a2:	nop	word ptr [rax + rax]


0x1936c:	nop	dword ptr [rax]


0x1938a:	nop	word ptr [rax + rax]


0x1964f:	nop	


0x19661:	nop	dword ptr [rax]


0x19703:	nop	dword ptr [rax + rax]


0x19891:	nop	dword ptr [rax]


0x19ad7:	nop	word ptr [rax + rax]


0x19bb1:	nop	dword ptr [rax]


0x19bc5:	nop	dword ptr [rax]


0x19c99:	nop	dword ptr [rax]


0x19ca7:	nop	word ptr [rax + rax]


0x19ccf:	nop	


0x19d3e:	nop	


0x19d61:	nop	dword ptr [rax]


0x19d89:	nop	dword ptr [rax]


0x19dba:	nop	word ptr [rax + rax]


0x19dcd:	nop	dword ptr [rax]


0x19dfa:	nop	word ptr [rax + rax]


0x19e0d:	nop	dword ptr [rax]


0x19e48:	nop	dword ptr [rax + rax]


0x19e79:	nop	dword ptr [rax]


0x19eae:	nop	


0x19f96:	nop	word ptr cs:[rax + rax]


0x1a082:	nop	word ptr [rax + rax]


0x1a09a:	nop	word ptr [rax + rax]


0x1a0b9:	nop	dword ptr [rax]


0x1a0cd:	nop	dword ptr [rax]


0x1a0dd:	nop	dword ptr [rax]


0x1a102:	nop	word ptr [rax + rax]


0x1a194:	nop	dword ptr [rax]


0x1a1c2:	nop	word ptr [rax + rax]


0x1a267:	nop	word ptr [rax + rax]


0x1a29e:	nop	


0x1a342:	nop	word ptr [rax + rax]


0x1a361:	nop	dword ptr [rax]


0x1a532:	nop	word ptr [rax + rax]


0x1a552:	nop	word ptr [rax + rax]


0x1a637:	nop	word ptr [rax + rax]


0x1a754:	nop	dword ptr [rax]


0x1a7ef:	nop	


0x1a7fa:	nop	word ptr [rax + rax]


0x1a90d:	nop	dword ptr [rax]


0x1a99b:	nop	dword ptr [rax + rax]


0x1aa54:	nop	dword ptr [rax]


0x1aa8a:	nop	word ptr [rax + rax]


0x1aa99:	nop	dword ptr [rax]


0x1ab05:	nop	dword ptr [rax]


0x1ab5a:	nop	word ptr [rax + rax]


0x1ab79:	nop	dword ptr [rax]


0x1ab9c:	nop	dword ptr [rax]


0x1abfe:	nop	


0x1ac79:	nop	dword ptr [rax]


0x1aca9:	nop	dword ptr [rax]


0x1ad8d:	nop	dword ptr [rax]


0x1ada5:	nop	dword ptr [rax]


0x1adbb:	nop	dword ptr [rax + rax]


0x1add9:	nop	dword ptr [rax]


