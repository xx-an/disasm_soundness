0x4f70:	sub	rsp, 8
0x4f74:	add	rsp, 8
0x4f78:	ret	


0x4f60:	mov	rdx, qword ptr [rip + 0x2030a1]
0x4f67:	xor	esi, esi
0x4f69:	jmp	0x1590


0x4f50:	ret	


0x4ee0:	push	r15
0x4ee2:	push	r14
0x4ee4:	mov	r15, rdx
0x4ee7:	push	r13
0x4ee9:	push	r12
0x4eeb:	lea	r12, [rip + 0x202c7e]
0x4ef2:	push	rbp
0x4ef3:	lea	rbp, [rip + 0x202c7e]
0x4efa:	push	rbx
0x4efb:	mov	r13d, edi
0x4efe:	mov	r14, rsi
0x4f01:	sub	rbp, r12
0x4f04:	sub	rsp, 8
0x4f08:	sar	rbp, 3
0x4f0c:	call	0x1300


0x4e80:	mov	rax, qword ptr [rdi + 8]
0x4e84:	cmp	qword ptr [rdi + 0x10], rax
0x4e88:	je	0x4e90


0x4e40:	test	rdi, rdi
0x4e43:	push	rbx
0x4e44:	mov	rbx, rdi
0x4e47:	je	0x4e5a


0x4dc0:	push	r12
0x4dc2:	push	rbp
0x4dc3:	push	rbx
0x4dc4:	mov	rbx, rdi
0x4dc7:	call	0x14e0


0x4d80:	sub	rsp, 8
0x4d84:	mov	edi, 0xe
0x4d89:	call	0x1510


0x4d20:	sub	rsp, 8
0x4d24:	xor	esi, esi
0x4d26:	call	0x1540


0x4ca0:	push	r12
0x4ca2:	push	rbp
0x4ca3:	mov	rbp, rdi
0x4ca6:	push	rbx
0x4ca7:	call	0x1390


0x4c10:	push	r13
0x4c12:	push	r12
0x4c14:	mov	r13, rsi
0x4c17:	push	rbp
0x4c18:	push	rbx
0x4c19:	mov	rbx, rdi
0x4c1c:	mov	r12, rdx
0x4c1f:	sub	rsp, 0x18
0x4c23:	mov	rax, qword ptr fs:[0x28]
0x4c2c:	mov	qword ptr [rsp + 8], rax
0x4c31:	xor	eax, eax
0x4c33:	lea	rax, [rsp + 4]
0x4c38:	test	rdi, rdi
0x4c3b:	cmove	rbx, rax
0x4c3f:	mov	rdi, rbx
0x4c42:	call	0x1420


0x4550:	push	r15
0x4552:	push	r14
0x4554:	push	r13
0x4556:	push	r12
0x4558:	push	rbp
0x4559:	push	rbx
0x455a:	sub	rsp, 0x28
0x455e:	mov	rax, qword ptr fs:[0x28]
0x4567:	mov	qword ptr [rsp + 0x18], rax
0x456c:	xor	eax, eax
0x456e:	cmp	edx, 0x24
0x4571:	ja	0x4bdf


0x4510:	lea	rsi, [rip + 0x17f8]
0x4517:	sub	rsp, 8
0x451b:	mov	edx, 5
0x4520:	xor	edi, edi
0x4522:	call	0x13d0


0x44f0:	push	rbx
0x44f1:	mov	rbx, rdi
0x44f4:	call	0x13f0


0x44c0:	push	rbp
0x44c1:	push	rbx
0x44c2:	mov	rbp, rdi
0x44c5:	mov	rdi, rsi
0x44c8:	mov	rbx, rsi
0x44cb:	sub	rsp, 8
0x44cf:	call	0x42c0


0x4490:	mov	rax, rdi
0x4493:	sub	rsp, 8
0x4497:	mul	rsi
0x449a:	seto	dl
0x449d:	test	rax, rax
0x44a0:	js	0x44b9


0x4470:	push	rbx
0x4471:	mov	rbx, rdi
0x4474:	call	0x42c0


0x4420:	test	rdi, rdi
0x4423:	mov	rax, qword ptr [rsi]
0x4426:	je	0x4450


0x4390:	test	rdi, rdi
0x4393:	mov	r9, rdx
0x4396:	mov	rcx, qword ptr [rsi]
0x4399:	je	0x43d0


0x4360:	mov	rax, rsi
0x4363:	mul	rdx
0x4366:	mov	rsi, rax
0x4369:	seto	al
0x436c:	test	rsi, rsi
0x436f:	js	0x437b


0x4320:	test	rsi, rsi
0x4323:	push	rbx
0x4324:	mov	rbx, rsi
0x4327:	jne	0x432e


0x4310:	jmp	0x42c0


0x42e0:	mov	rax, rdi
0x42e3:	mul	rsi
0x42e6:	mov	rdi, rax
0x42e9:	seto	al
0x42ec:	test	rdi, rdi
0x42ef:	js	0x42fb


0x42c0:	push	rbx
0x42c1:	mov	rbx, rdi
0x42c4:	call	0x14f0


0x4240:	push	rbx
0x4241:	lea	rsi, [rip + 0x17ba]
0x4248:	mov	edx, 5
0x424d:	xor	edi, edi
0x424f:	call	0x13d0


0x4160:	push	rbp
0x4161:	push	rbx
0x4162:	mov	r10d, 0x20
0x4168:	xor	r11d, r11d
0x416b:	sub	rsp, 0xb8
0x4172:	mov	rax, qword ptr fs:[0x28]
0x417b:	mov	qword ptr [rsp + 0x78], rax
0x4180:	xor	eax, eax
0x4182:	lea	rax, [rsp + 0xd0]
0x418a:	mov	qword ptr [rsp + 0xa0], r8
0x4192:	lea	rbx, [rsp + 0xd0]
0x419a:	lea	r8, [rsp + 0x20]
0x419f:	mov	qword ptr [rsp + 0xa8], r9
0x41a7:	mov	dword ptr [rsp + 8], 0x20
0x41af:	mov	qword ptr [rsp + 0x10], rax
0x41b4:	lea	rax, [rsp + 0x80]
0x41bc:	xor	r9d, r9d
0x41bf:	mov	qword ptr [rsp + 0x18], rax
0x41c4:	mov	rbp, rax
0x41c7:	nop	word ptr [rax + rax]
0x41d0:	cmp	r10d, 0x2f
0x41d4:	ja	0x422c


0x40e0:	sub	rsp, 0x68
0x40e4:	mov	r10, r8
0x40e7:	xor	r9d, r9d
0x40ea:	mov	rax, qword ptr fs:[0x28]
0x40f3:	mov	qword ptr [rsp + 0x58], rax
0x40f8:	xor	eax, eax
0x40fa:	mov	r8, rsp
0x40fd:	nop	dword ptr [rax]
0x4100:	mov	eax, dword ptr [r10]
0x4103:	cmp	eax, 0x2f
0x4106:	ja	0x414a


0x40c0:	xor	r9d, r9d
0x40c3:	cmp	qword ptr [r8], 0
0x40c7:	je	0x40db


0x3ca0:	push	r15
0x3ca2:	push	r14
0x3ca4:	push	r13
0x3ca6:	push	r12
0x3ca8:	mov	r12, r9
0x3cab:	push	rbp
0x3cac:	push	rbx
0x3cad:	mov	rbp, rdi
0x3cb0:	mov	rbx, r8
0x3cb3:	sub	rsp, 0x28
0x3cb7:	test	rsi, rsi
0x3cba:	je	0x3dd8


0x3c80:	lea	rcx, [rip + 0x204399]
0x3c87:	mov	rsi, rdi
0x3c8a:	mov	rdx, -1
0x3c91:	xor	edi, edi
0x3c93:	jmp	0x3340


0x3c60:	lea	rcx, [rip + 0x2043b9]
0x3c67:	mov	rdx, -1
0x3c6e:	jmp	0x3340


0x3c40:	lea	rcx, [rip + 0x2043d9]
0x3c47:	mov	rdx, rsi
0x3c4a:	mov	rsi, rdi
0x3c4d:	xor	edi, edi
0x3c4f:	jmp	0x3340


0x3c30:	lea	rcx, [rip + 0x2043e9]
0x3c37:	jmp	0x3340


0x3c10:	mov	r8, rcx
0x3c13:	mov	rcx, rdx
0x3c16:	mov	rdx, rsi
0x3c19:	mov	rsi, rdi
0x3c1c:	xor	edi, edi
0x3c1e:	jmp	0x3b40


0x3bf0:	mov	rcx, rdx
0x3bf3:	mov	r8, -1
0x3bfa:	mov	rdx, rsi
0x3bfd:	mov	rsi, rdi
0x3c00:	xor	edi, edi
0x3c02:	jmp	0x3b40


0x3be0:	mov	r8, -1
0x3be7:	jmp	0x3b40


0x3b40:	sub	rsp, 0x48
0x3b44:	mov	r9, rcx
0x3b47:	mov	rcx, qword ptr [rip + 0x2046e2]
0x3b4e:	movdqa	xmm0, xmmword ptr [rip + 0x2046aa]
0x3b56:	mov	rax, qword ptr fs:[0x28]
0x3b5f:	mov	qword ptr [rsp + 0x38], rax
0x3b64:	xor	eax, eax
0x3b66:	movaps	xmmword ptr [rsp], xmm0
0x3b6a:	test	rsi, rsi
0x3b6d:	mov	qword ptr [rsp + 0x30], rcx
0x3b72:	mov	dword ptr [rsp], 0xa
0x3b79:	movdqa	xmm0, xmmword ptr [rip + 0x20468f]
0x3b81:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x3b86:	movdqa	xmm0, xmmword ptr [rip + 0x204692]
0x3b8e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x3b93:	je	0x3bc7


0x3ab0:	sub	rsp, 0x48
0x3ab4:	mov	rax, rdx
0x3ab7:	mov	rdx, qword ptr fs:[0x28]
0x3ac0:	mov	qword ptr [rsp + 0x38], rdx
0x3ac5:	xor	edx, edx
0x3ac7:	cmp	esi, 0xa
0x3aca:	je	0x3b34


0x3aa0:	mov	edx, 0x3a
0x3aa5:	jmp	0x39d0


0x3a80:	mov	edx, 0x3a
0x3a85:	mov	rsi, -1
0x3a8c:	jmp	0x39d0


0x3a70:	movsx	edx, sil
0x3a74:	mov	rsi, -1
0x3a7b:	jmp	0x39d0


0x39d0:	sub	rsp, 0x48
0x39d4:	mov	ecx, edx
0x39d6:	mov	rax, qword ptr fs:[0x28]
0x39df:	mov	qword ptr [rsp + 0x38], rax
0x39e4:	xor	eax, eax
0x39e6:	mov	rax, qword ptr [rip + 0x204843]
0x39ed:	mov	r8, rsp
0x39f0:	and	ecx, 0x1f
0x39f3:	movdqa	xmm0, xmmword ptr [rip + 0x204805]
0x39fb:	mov	qword ptr [rsp + 0x30], rax
0x3a00:	mov	eax, edx
0x3a02:	movaps	xmmword ptr [rsp], xmm0
0x3a06:	shr	al, 5
0x3a09:	movzx	eax, al
0x3a0c:	lea	r9, [r8 + rax*4 + 8]
0x3a11:	movdqa	xmm0, xmmword ptr [rip + 0x2047f7]
0x3a19:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x3a1e:	movdqa	xmm0, xmmword ptr [rip + 0x2047fa]
0x3a26:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x3a2b:	mov	edx, dword ptr [r9]
0x3a2e:	mov	eax, edx
0x3a30:	shr	eax, cl
0x3a32:	not	eax
0x3a34:	and	eax, 1
0x3a37:	shl	eax, cl
0x3a39:	mov	rcx, r8
0x3a3c:	xor	eax, edx
0x3a3e:	mov	rdx, rsi
0x3a41:	mov	rsi, rdi
0x3a44:	mov	dword ptr [r9], eax
0x3a47:	xor	edi, edi
0x3a49:	call	0x3340


0x39c0:	mov	rcx, rdx
0x39c3:	mov	rdx, rsi
0x39c6:	mov	esi, edi
0x39c8:	xor	edi, edi
0x39ca:	jmp	0x3920


0x39b0:	mov	rdx, rsi
0x39b3:	mov	esi, edi
0x39b5:	xor	edi, edi
0x39b7:	jmp	0x3890


0x3920:	sub	rsp, 0x48
0x3924:	mov	rax, rdx
0x3927:	mov	rdx, rcx
0x392a:	mov	rcx, qword ptr fs:[0x28]
0x3933:	mov	qword ptr [rsp + 0x38], rcx
0x3938:	xor	ecx, ecx
0x393a:	cmp	esi, 0xa
0x393d:	je	0x39a0


0x3890:	sub	rsp, 0x48
0x3894:	mov	rax, rdx
0x3897:	mov	rdx, qword ptr fs:[0x28]
0x38a0:	mov	qword ptr [rsp + 0x38], rdx
0x38a5:	xor	edx, edx
0x38a7:	cmp	esi, 0xa
0x38aa:	je	0x3914


0x3870:	lea	rcx, [rip + 0x204989]
0x3877:	mov	rdx, rsi
0x387a:	mov	rsi, rdi
0x387d:	xor	edi, edi
0x387f:	jmp	0x3340


0x3850:	lea	rcx, [rip + 0x2049a9]
0x3857:	mov	rsi, rdi
0x385a:	mov	rdx, -1
0x3861:	xor	edi, edi
0x3863:	jmp	0x3340


0x3840:	lea	rcx, [rip + 0x2049b9]
0x3847:	jmp	0x3340


0x3820:	lea	rcx, [rip + 0x2049d9]
0x3827:	mov	rdx, -1
0x382e:	jmp	0x3340


0x3780:	mov	eax, dword ptr [rip + 0x2048d2]
0x3786:	push	r12
0x3788:	mov	r12, qword ptr [rip + 0x2048d1]
0x378f:	push	rbp
0x3790:	push	rbx
0x3791:	cmp	eax, 1
0x3794:	jle	0x37c1


0x3770:	mov	rcx, rdx
0x3773:	xor	edx, edx
0x3775:	jmp	0x3680


0x3680:	push	r15
0x3682:	push	r14
0x3684:	lea	rax, [rip + 0x204b75]
0x368b:	push	r13
0x368d:	push	r12
0x368f:	mov	r12, rdx
0x3692:	push	rbp
0x3693:	push	rbx
0x3694:	mov	rbx, rcx
0x3697:	mov	r14, rdi
0x369a:	mov	r15, rsi
0x369d:	sub	rsp, 0x38
0x36a1:	test	rcx, rcx
0x36a4:	cmove	rbx, rax
0x36a8:	xor	ebp, ebp
0x36aa:	call	0x1350


0x3600:	push	r15
0x3602:	push	r14
0x3604:	lea	rax, [rip + 0x204bf5]
0x360b:	push	r13
0x360d:	push	r12
0x360f:	mov	r13, rdi
0x3612:	push	rbp
0x3613:	push	rbx
0x3614:	mov	rbx, r8
0x3617:	mov	r14, rsi
0x361a:	mov	r15, rdx
0x361d:	sub	rsp, 0x18
0x3621:	test	r8, r8
0x3624:	cmove	rbx, rax
0x3628:	mov	qword ptr [rsp + 8], rcx
0x362d:	call	0x1350


0x35d0:	lea	rax, [rip + 0x204c29]
0x35d7:	test	rdi, rdi
0x35da:	cmove	rdi, rax
0x35de:	test	rsi, rsi
0x35e1:	mov	dword ptr [rdi], 0xa
0x35e7:	je	0x35f7


0x35b0:	lea	rax, [rip + 0x204c49]
0x35b7:	test	rdi, rdi
0x35ba:	cmove	rdi, rax
0x35be:	mov	eax, dword ptr [rdi + 4]
0x35c1:	mov	dword ptr [rdi + 4], esi
0x35c4:	ret	


0x3570:	lea	rax, [rip + 0x204c89]
0x3577:	test	rdi, rdi
0x357a:	mov	ecx, esi
0x357c:	cmove	rdi, rax
0x3580:	mov	eax, esi
0x3582:	and	ecx, 0x1f
0x3585:	shr	al, 5
0x3588:	movzx	eax, al
0x358b:	lea	rdi, [rdi + rax*4 + 8]
0x3590:	mov	esi, dword ptr [rdi]
0x3592:	mov	eax, esi
0x3594:	shr	eax, cl
0x3596:	xor	edx, eax
0x3598:	and	eax, 1
0x359b:	and	edx, 1
0x359e:	shl	edx, cl
0x35a0:	xor	edx, esi
0x35a2:	mov	dword ptr [rdi], edx
0x35a4:	ret	


0x3550:	lea	rax, [rip + 0x204ca9]
0x3557:	test	rdi, rdi
0x355a:	cmove	rdi, rax
0x355e:	mov	dword ptr [rdi], esi
0x3560:	ret	


0x3530:	lea	rax, [rip + 0x204cc9]
0x3537:	test	rdi, rdi
0x353a:	cmove	rdi, rax
0x353e:	mov	eax, dword ptr [rdi]
0x3540:	ret	


0x34f0:	push	r12
0x34f2:	push	rbp
0x34f3:	push	rbx
0x34f4:	mov	rbx, rdi
0x34f7:	call	0x1350


0x3340:	push	r15
0x3342:	push	r14
0x3344:	movsxd	r15, edi
0x3347:	push	r13
0x3349:	push	r12
0x334b:	mov	r14, rdx
0x334e:	push	rbp
0x334f:	push	rbx
0x3350:	mov	rbp, rcx
0x3353:	sub	rsp, 0x28
0x3357:	mov	qword ptr [rsp + 8], rsi
0x335c:	call	0x1350


0x2100:	push	r15
0x2102:	push	r14
0x2104:	mov	r15d, r8d
0x2107:	push	r13
0x2109:	push	r12
0x210b:	mov	r14, rdi
0x210e:	push	rbp
0x210f:	push	rbx
0x2110:	mov	ebx, r9d
0x2113:	mov	r13, rsi
0x2116:	mov	rbp, rcx
0x2119:	and	ebx, 2
0x211c:	sub	rsp, 0xb8
0x2123:	mov	rax, qword ptr [rsp + 0xf0]
0x212b:	mov	qword ptr [rsp + 0x10], rdx
0x2130:	mov	dword ptr [rsp + 8], r8d
0x2135:	mov	dword ptr [rsp + 0x78], r9d
0x213a:	mov	qword ptr [rsp + 0x20], rax
0x213f:	mov	rax, qword ptr [rsp + 0xf8]
0x2147:	mov	qword ptr [rsp + 0x68], rax
0x214c:	mov	rax, qword ptr [rsp + 0x100]
0x2154:	mov	qword ptr [rsp + 0x60], rax
0x2159:	mov	rax, qword ptr fs:[0x28]
0x2162:	mov	qword ptr [rsp + 0xa8], rax
0x216a:	xor	eax, eax
0x216c:	call	0x13e0


0x2010:	push	rbp
0x2011:	push	rbx
0x2012:	mov	rbp, rdi
0x2015:	mov	ebx, esi
0x2017:	sub	rsp, 8
0x201b:	call	0x4d80


0x1f70:	test	rdi, rdi
0x1f73:	push	rbx
0x1f74:	je	0x1fed


0x1ec0:	push	rbp
0x1ec1:	push	rbx
0x1ec2:	sub	rsp, 8
0x1ec6:	mov	rdi, qword ptr [rip + 0x2061bb]
0x1ecd:	call	0x4ca0


0x1eb0:	mov	byte ptr [rip + 0x206219], dil
0x1eb7:	ret	


0x1ea0:	mov	qword ptr [rip + 0x206231], rdi
0x1ea7:	ret	


0x1ae0:	push	r13
0x1ae2:	push	r12
0x1ae4:	mov	edx, 5
0x1ae9:	push	rbp
0x1aea:	push	rbx
0x1aeb:	mov	ebp, edi
0x1aed:	sub	rsp, 0x88
0x1af4:	mov	rbx, qword ptr [rip + 0x2065e5]
0x1afb:	mov	rax, qword ptr fs:[0x28]
0x1b04:	mov	qword ptr [rsp + 0x78], rax
0x1b09:	xor	eax, eax
0x1b0b:	test	edi, edi
0x1b0d:	je	0x1b3d


0x1ad0:	push	rbp
0x1ad1:	mov	rbp, rsp
0x1ad4:	pop	rbp
0x1ad5:	jmp	0x1a40


0x1a90:	cmp	byte ptr [rip + 0x206631], 0
0x1a97:	jne	0x1ac8


0x1a40:	lea	rdi, [rip + 0x206639]
0x1a47:	lea	rsi, [rip + 0x206632]
0x1a4e:	push	rbp
0x1a4f:	sub	rsi, rdi
0x1a52:	mov	rbp, rsp
0x1a55:	sar	rsi, 3
0x1a59:	mov	rax, rsi
0x1a5c:	shr	rax, 0x3f
0x1a60:	add	rsi, rax
0x1a63:	sar	rsi, 1
0x1a66:	je	0x1a80


0x1a00:	lea	rdi, [rip + 0x206679]
0x1a07:	push	rbp
0x1a08:	lea	rax, [rip + 0x206671]
0x1a0f:	cmp	rax, rdi
0x1a12:	mov	rbp, rsp
0x1a15:	je	0x1a30


0x19d0:	xor	ebp, ebp
0x19d2:	mov	r9, rdx
0x19d5:	pop	rsi
0x19d6:	mov	rdx, rsp
0x19d9:	and	rsp, 0xfffffffffffffff0
0x19dd:	push	rax
0x19de:	push	rsp
0x19df:	lea	r8, [rip + 0x356a]
0x19e6:	lea	rcx, [rip + 0x34f3]
0x19ed:	lea	rdi, [rip - 0x3e4]
0x19f4:	call	qword ptr [rip + 0x2065d6]


0x1610:	push	r14
0x1612:	push	r13
0x1614:	push	r12
0x1616:	push	rbp
0x1617:	mov	r12d, edi
0x161a:	push	rbx
0x161b:	mov	rbp, rsi
0x161e:	mov	ebx, 1
0x1623:	sub	rsp, 0x10
0x1627:	mov	rdi, qword ptr [rsi]
0x162a:	mov	rax, qword ptr fs:[0x28]
0x1633:	mov	qword ptr [rsp + 8], rax
0x1638:	xor	eax, eax
0x163a:	call	0x1f70


0x1300:	sub	rsp, 8
0x1304:	mov	rax, qword ptr [rip + 0x206ccd]
0x130b:	test	rax, rax
0x130e:	je	0x1312


0x1590:	jmp	qword ptr [rip + 0x2069fa]


0x4e90:	mov	rax, qword ptr [rdi + 0x20]
0x4e94:	cmp	qword ptr [rdi + 0x28], rax
0x4e98:	jne	0x4e8a


0x4e8a:	jmp	0x1570


0x4e5a:	mov	rdi, rbx
0x4e5d:	pop	rbx
0x4e5e:	jmp	0x1500


0x4e49:	call	0x1520


0x14e0:	jmp	qword ptr [rip + 0x206a52]


0x1510:	jmp	qword ptr [rip + 0x206a3a]


0x1540:	jmp	qword ptr [rip + 0x206a22]


0x1390:	jmp	qword ptr [rip + 0x206afa]


0x1420:	jmp	qword ptr [rip + 0x206ab2]


0x4577:	lea	rax, [rsp + 0x10]
0x457c:	test	rsi, rsi
0x457f:	mov	rbx, rsi
0x4582:	mov	r12, rdi
0x4585:	mov	ebp, edx
0x4587:	mov	r14, rcx
0x458a:	cmove	rbx, rax
0x458e:	mov	r15, r8
0x4591:	call	0x1350


0x4bdf:	lea	rcx, [rip + 0x125a]
0x4be6:	lea	rsi, [rip + 0x1133]
0x4bed:	lea	rdi, [rip + 0x114c]
0x4bf4:	mov	edx, 0x54
0x4bf9:	call	0x1460


0x13d0:	jmp	qword ptr [rip + 0x206ada]


0x13f0:	jmp	qword ptr [rip + 0x206aca]


0x44b9:	call	0x4510


0x44a2:	movzx	edx, dl
0x44a5:	test	rdx, rdx
0x44a8:	jne	0x44b9


0x4450:	test	rax, rax
0x4453:	mov	edx, 0x80
0x4458:	cmove	rax, rdx
0x445c:	test	rax, rax
0x445f:	jns	0x4442


0x4428:	movabs	rdx, 0x5555555555555553
0x4432:	cmp	rax, rdx
0x4435:	ja	0x4461


0x43d0:	test	rcx, rcx
0x43d3:	je	0x43f8


0x439b:	xor	edx, edx
0x439d:	movabs	rax, 0x5555555555555554
0x43a7:	div	r9
0x43aa:	cmp	rax, rcx
0x43ad:	jbe	0x43eb


0x437b:	sub	rsp, 8
0x437f:	call	0x4510


0x4371:	movzx	eax, al
0x4374:	test	rax, rax
0x4377:	jne	0x437b


0x4329:	test	rdi, rdi
0x432c:	jne	0x4348


0x432e:	mov	rsi, rbx
0x4331:	call	0x1530


0x42fb:	sub	rsp, 8
0x42ff:	call	0x4510


0x42f1:	movzx	eax, al
0x42f4:	test	rax, rax
0x42f7:	jne	0x42fb


0x14f0:	jmp	qword ptr [rip + 0x206a4a]


0x41d6:	mov	eax, r10d
0x41d9:	mov	r11d, 1
0x41df:	add	r10d, 8
0x41e3:	add	rax, rbp
0x41e6:	mov	rax, qword ptr [rax]
0x41e9:	test	rax, rax
0x41ec:	mov	qword ptr [r8 + r9*8], rax
0x41f0:	je	0x41fc


0x422c:	mov	rax, rbx
0x422f:	add	rbx, 8
0x4233:	jmp	0x41e6


0x4108:	mov	r11d, eax
0x410b:	add	r11, qword ptr [r10 + 0x10]
0x410f:	add	eax, 8
0x4112:	mov	dword ptr [r10], eax
0x4115:	mov	rax, qword ptr [r11]
0x4118:	test	rax, rax
0x411b:	mov	qword ptr [r8 + r9*8], rax
0x411f:	je	0x412b


0x414a:	mov	r11, qword ptr [r10 + 8]
0x414e:	lea	rax, [r11 + 8]
0x4152:	mov	qword ptr [r10 + 8], rax
0x4156:	jmp	0x4115


0x40db:	jmp	0x3ca0


0x3dd8:	mov	r8, rcx
0x3ddb:	mov	rcx, rdx
0x3dde:	lea	rdx, [rip + 0x1bcf]
0x3de5:	mov	esi, 1
0x3dea:	xor	eax, eax
0x3dec:	call	0x15c0


0x3cc0:	mov	r8, rdx
0x3cc3:	lea	rdx, [rip + 0x1cde]
0x3cca:	mov	r9, rcx
0x3ccd:	xor	eax, eax
0x3ccf:	mov	rcx, rsi
0x3cd2:	mov	esi, 1
0x3cd7:	call	0x15c0


0x3bc7:	call	0x1340


0x3b95:	test	rdx, rdx
0x3b98:	je	0x3bc7


0x3b34:	call	0x1340


0x3acc:	mov	dword ptr [rsp], esi
0x3acf:	mov	rcx, rsp
0x3ad2:	mov	rdx, -1
0x3ad9:	mov	rsi, rax
0x3adc:	mov	qword ptr [rsp + 4], 0
0x3ae5:	mov	qword ptr [rsp + 0xc], 0x4000000
0x3aee:	mov	qword ptr [rsp + 0x14], 0
0x3af7:	mov	qword ptr [rsp + 0x1c], 0
0x3b00:	mov	qword ptr [rsp + 0x24], 0
0x3b09:	mov	qword ptr [rsp + 0x2c], 0
0x3b12:	mov	dword ptr [rsp + 0x34], 0
0x3b1a:	call	0x3340


0x39a0:	call	0x1340


0x393f:	mov	dword ptr [rsp], esi
0x3942:	mov	rcx, rsp
0x3945:	mov	rsi, rax
0x3948:	mov	qword ptr [rsp + 4], 0
0x3951:	mov	qword ptr [rsp + 0xc], 0
0x395a:	mov	qword ptr [rsp + 0x14], 0
0x3963:	mov	qword ptr [rsp + 0x1c], 0
0x396c:	mov	qword ptr [rsp + 0x24], 0
0x3975:	mov	qword ptr [rsp + 0x2c], 0
0x397e:	mov	dword ptr [rsp + 0x34], 0
0x3986:	call	0x3340


0x3914:	call	0x1340


0x38ac:	mov	dword ptr [rsp], esi
0x38af:	mov	rcx, rsp
0x38b2:	mov	rdx, -1
0x38b9:	mov	rsi, rax
0x38bc:	mov	qword ptr [rsp + 4], 0
0x38c5:	mov	qword ptr [rsp + 0xc], 0
0x38ce:	mov	qword ptr [rsp + 0x14], 0
0x38d7:	mov	qword ptr [rsp + 0x1c], 0
0x38e0:	mov	qword ptr [rsp + 0x24], 0
0x38e9:	mov	qword ptr [rsp + 0x2c], 0
0x38f2:	mov	dword ptr [rsp + 0x34], 0
0x38fa:	call	0x3340


0x37c1:	mov	rdi, qword ptr [r12 + 8]
0x37c6:	lea	rbx, [rip + 0x204933]
0x37cd:	cmp	rdi, rbx
0x37d0:	je	0x37e9


0x3796:	sub	eax, 2
0x3799:	lea	rbx, [r12 + 0x18]
0x379e:	shl	rax, 4
0x37a2:	lea	rbp, [r12 + rax + 0x28]
0x37a7:	nop	word ptr [rax + rax]
0x37b0:	mov	rdi, qword ptr [rbx]
0x37b3:	add	rbx, 0x10
0x37b7:	call	0x1330


0x1350:	jmp	qword ptr [rip + 0x206b1a]


0x35f7:	sub	rsp, 8
0x35fb:	call	0x1340


0x35e9:	test	rdx, rdx
0x35ec:	je	0x35f7


0x13e0:	jmp	qword ptr [rip + 0x206ad2]


0x1fed:	mov	rcx, qword ptr [rip + 0x2060cc]
0x1ff4:	lea	rdi, [rip + 0x349d]
0x1ffb:	mov	edx, 0x37
0x2000:	mov	esi, 1
0x2005:	call	0x15b0


0x1f76:	mov	esi, 0x2f
0x1f7b:	mov	rbx, rdi
0x1f7e:	call	0x1440


0x1b3d:	lea	rsi, [rip + 0x359c]
0x1b44:	xor	edi, edi
0x1b46:	call	0x13d0


0x1b0f:	lea	rsi, [rip + 0x35a2]
0x1b16:	xor	edi, edi
0x1b18:	call	0x13d0


0x1a99:	cmp	qword ptr [rip + 0x206547], 0
0x1aa1:	push	rbp
0x1aa2:	mov	rbp, rsp
0x1aa5:	je	0x1ab3


0x1ac8:	ret	


0x1a80:	pop	rbp
0x1a81:	ret	


0x1a68:	mov	rax, qword ptr [rip + 0x206571]
0x1a6f:	test	rax, rax
0x1a72:	je	0x1a80


0x1a30:	pop	rbp
0x1a31:	ret	


0x1a17:	mov	rax, qword ptr [rip + 0x2065aa]
0x1a1e:	test	rax, rax
0x1a21:	je	0x1a30




0x1312:	add	rsp, 8
0x1316:	ret	


0x1310:	call	rax




0x4e9a:	cmp	qword ptr [rdi + 0x48], 0
0x4e9f:	jne	0x4e8a


0x1570:	jmp	qword ptr [rip + 0x206a0a]


0x1500:	jmp	qword ptr [rip + 0x206a42]


0x1520:	jmp	qword ptr [rip + 0x206a32]












0x1460:	jmp	qword ptr [rip + 0x206a92]






0x44aa:	call	0x14b0


0x4461:	sub	rsp, 8
0x4465:	call	0x4510


0x4442:	mov	qword ptr [rsi], rax
0x4445:	mov	rsi, rax
0x4448:	jmp	0x4320


0x4437:	mov	rdx, rax
0x443a:	shr	rdx, 1
0x443d:	lea	rax, [rdx + rax + 1]
0x4442:	mov	qword ptr [rsi], rax
0x4445:	mov	rsi, rax
0x4448:	jmp	0x4320


0x43f8:	xor	edx, edx
0x43fa:	mov	eax, 0x80
0x43ff:	xor	r8d, r8d
0x4402:	div	r9
0x4405:	test	rax, rax
0x4408:	sete	r8b
0x440c:	lea	rcx, [r8 + rax]
0x4410:	jmp	0x43d5


0x43d5:	mov	rax, rcx
0x43d8:	mul	r9
0x43db:	seto	dl
0x43de:	test	rax, rax
0x43e1:	movzx	edx, dl
0x43e4:	js	0x43eb


0x43eb:	sub	rsp, 8
0x43ef:	call	0x4510


0x43af:	mov	rax, rcx
0x43b2:	shr	rax, 1
0x43b5:	lea	rcx, [rax + rcx + 1]
0x43ba:	mov	qword ptr [rsi], rcx
0x43bd:	imul	rcx, r9
0x43c1:	mov	rsi, rcx
0x43c4:	jmp	0x4320


0x4379:	jmp	0x4320


0x4348:	call	0x1330


0x1530:	jmp	qword ptr [rip + 0x206a2a]


0x42f9:	jmp	0x42c0




0x41fc:	test	r11b, r11b
0x41ff:	jne	0x4225


0x41f2:	add	r9, 1
0x41f6:	cmp	r9, 0xa
0x41fa:	jne	0x41d0


0x41e6:	mov	rax, qword ptr [rax]
0x41e9:	test	rax, rax
0x41ec:	mov	qword ptr [r8 + r9*8], rax
0x41f0:	je	0x41fc


0x412b:	call	0x3ca0


0x4121:	add	r9, 1
0x4125:	cmp	r9, 0xa
0x4129:	jne	0x4100


0x4115:	mov	rax, qword ptr [r11]
0x4118:	test	rax, rax
0x411b:	mov	qword ptr [r8 + r9*8], rax
0x411f:	je	0x412b


0x40d0:	add	r9, 1
0x40d4:	cmp	qword ptr [r8 + r9*8], 0
0x40d9:	jne	0x40d0


0x15c0:	jmp	qword ptr [rip + 0x2069e2]


0x1340:	jmp	qword ptr [rip + 0x206b22]


0x3b9a:	mov	qword ptr [rsp + 0x28], rsi
0x3b9f:	mov	qword ptr [rsp + 0x30], rdx
0x3ba4:	mov	rcx, rsp
0x3ba7:	mov	rdx, r8
0x3baa:	mov	rsi, r9
0x3bad:	call	0x3340


0x37e9:	lea	rbx, [rip + 0x204880]
0x37f0:	cmp	r12, rbx
0x37f3:	je	0x3804


0x37d2:	call	0x1330


0x1330:	jmp	qword ptr [rip + 0x206b2a]




0x35ee:	mov	qword ptr [rdi + 0x28], rsi
0x35f2:	mov	qword ptr [rdi + 0x30], rdx
0x35f6:	ret	




0x15b0:	jmp	qword ptr [rip + 0x2069ea]


0x1440:	jmp	qword ptr [rip + 0x206aa2]


0x1ab3:	call	0x1a00


0x1aa7:	mov	rdi, qword ptr [rip + 0x20655a]
0x1aae:	call	0x1600


0x1a74:	pop	rbp
0x1a75:	jmp	rax


0x1a23:	pop	rbp
0x1a24:	jmp	rax


0x4ea1:	push	r12
0x4ea3:	push	rbp
0x4ea4:	mov	r12d, edx
0x4ea7:	push	rbx
0x4ea8:	mov	rbp, rsi
0x4eab:	mov	rbx, rdi
0x4eae:	call	0x14e0










0x14b0:	jmp	qword ptr [rip + 0x206a6a]


0x43e6:	test	rdx, rdx
0x43e9:	je	0x43ba




0x4201:	call	0x3ca0


0x4225:	mov	dword ptr [rsp + 8], r10d
0x422a:	jmp	0x4201


0x41d0:	cmp	r10d, 0x2f
0x41d4:	ja	0x422c


0x4100:	mov	eax, dword ptr [r10]
0x4103:	cmp	eax, 0x2f
0x4106:	ja	0x414a






0x3804:	pop	rbx
0x3805:	mov	dword ptr [rip + 0x204849], 1
0x380f:	pop	rbp
0x3810:	pop	r12
0x3812:	ret	


0x37f5:	mov	rdi, r12
0x37f8:	call	0x1330








0x1600:	jmp	qword ptr [rip + 0x2069e2]




0x43ba:	mov	qword ptr [rsi], rcx
0x43bd:	imul	rcx, r9
0x43c1:	mov	rsi, rcx
0x43c4:	jmp	0x4320


0x1ab8:	mov	byte ptr [rip + 0x206609], 1
0x1abf:	pop	rbp
0x1ac0:	ret	


0x4f11:	test	rbp, rbp
0x4f14:	je	0x4f36


0x4f36:	add	rsp, 8
0x4f3a:	pop	rbx
0x4f3b:	pop	rbp
0x4f3c:	pop	r12
0x4f3e:	pop	r13
0x4f40:	pop	r14
0x4f42:	pop	r15
0x4f44:	ret	


0x4f16:	xor	ebx, ebx
0x4f18:	nop	dword ptr [rax + rax]
0x4f20:	mov	rdx, r15
0x4f23:	mov	rsi, r14
0x4f26:	mov	edi, r13d
0x4f29:	call	qword ptr [r12 + rbx*8]


0x44af:	test	rax, rax
0x44b2:	je	0x44b9


0x44b4:	add	rsp, 8
0x44b8:	ret	


0x1f83:	test	rax, rax
0x1f86:	je	0x1fdd


0x1fdd:	mov	qword ptr [rip + 0x2060fc], rbx
0x1fe4:	mov	qword ptr [rip + 0x2060b5], rbx
0x1feb:	pop	rbx
0x1fec:	ret	


0x1f88:	lea	r8, [rax + 1]
0x1f8c:	mov	rdx, r8
0x1f8f:	sub	rdx, rbx
0x1f92:	cmp	rdx, 6
0x1f96:	jle	0x1fdd


0x1f98:	lea	rsi, [rax - 6]
0x1f9c:	lea	rdi, [rip + 0x352d]
0x1fa3:	mov	ecx, 7
0x1fa8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1fa8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1faa:	seta	dl
0x1fad:	sbb	dl, 0
0x1fb0:	test	dl, dl
0x1fb2:	jne	0x1fdd


0x1fb4:	lea	rdi, [rip + 0x351d]
0x1fbb:	mov	ecx, 3
0x1fc0:	mov	rsi, r8
0x1fc3:	mov	rbx, r8
0x1fc6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1fc6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1fc8:	seta	dl
0x1fcb:	sbb	dl, 0
0x1fce:	test	dl, dl
0x1fd0:	jne	0x1fdd


0x1fd2:	lea	rbx, [rax + 4]
0x1fd6:	mov	qword ptr [rip + 0x2060a3], rbx
0x1fdd:	mov	qword ptr [rip + 0x2060fc], rbx
0x1fe4:	mov	qword ptr [rip + 0x2060b5], rbx
0x1feb:	pop	rbx
0x1fec:	ret	


0x200a:	call	0x1340


0x37fd:	mov	qword ptr [rip + 0x20485c], rbx
0x3804:	pop	rbx
0x3805:	mov	dword ptr [rip + 0x204849], 1
0x380f:	pop	rbp
0x3810:	pop	r12
0x3812:	ret	


0x37d7:	mov	qword ptr [rip + 0x20488e], 0x100
0x37e2:	mov	qword ptr [rip + 0x20488f], rbx
0x37e9:	lea	rbx, [rip + 0x204880]
0x37f0:	cmp	r12, rbx
0x37f3:	je	0x3804


0x434d:	xor	eax, eax
0x434f:	pop	rbx
0x4350:	ret	


0x37bc:	cmp	rbx, rbp
0x37bf:	jne	0x37b0


0x37b0:	mov	rdi, qword ptr [rbx]
0x37b3:	add	rbx, 0x10
0x37b7:	call	0x1330


0x3cdc:	lea	rsi, [rip + 0x1cd8]
0x3ce3:	xor	edi, edi
0x3ce5:	mov	edx, 5
0x3cea:	call	0x13d0


0x3df1:	jmp	0x3cdc


0x4336:	test	rax, rax
0x4339:	jne	0x4340


0x433b:	test	rbx, rbx
0x433e:	jne	0x4351


0x4340:	pop	rbx
0x4341:	ret	


0x4351:	call	0x4510


0x4e4e:	test	eax, eax
0x4e50:	je	0x4e5a


0x4e52:	test	dword ptr [rbx], 0x100
0x4e58:	jne	0x4e68


0x4e68:	mov	rdi, rbx
0x4e6b:	mov	edx, 1
0x4e70:	xor	esi, esi
0x4e72:	call	0x4e80


0x163f:	lea	rsi, [rip + 0x43bb]
0x1646:	mov	edi, 6
0x164b:	call	0x1540


0x2171:	cmp	r15d, 0xa
0x2175:	mov	qword ptr [rsp + 0x58], rax
0x217a:	ja	0x332f


0x2180:	lea	rcx, [rip + 0x33b9]
0x2187:	mov	edx, r15d
0x218a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x218e:	add	rax, rcx
0x2191:	jmp	rax


0x332f:	call	0x1340


0x4596:	mov	edx, ebp
0x4598:	mov	dword ptr [rax], 0
0x459e:	mov	rsi, rbx
0x45a1:	mov	rdi, r12
0x45a4:	mov	r13, rax
0x45a7:	call	0x14c0


0x14c0:	jmp	qword ptr [rip + 0x206a62]




0x3361:	mov	r13, rax
0x3364:	mov	eax, dword ptr [rax]
0x3366:	test	r15d, r15d
0x3369:	mov	rbx, qword ptr [rip + 0x204cf0]
0x3370:	mov	dword ptr [rsp + 0x18], eax
0x3374:	js	0x34e1


0x34e1:	call	0x1340


0x337a:	cmp	dword ptr [rip + 0x204cd7], r15d
0x3381:	jg	0x33e5


0x3383:	cmp	r15d, 0x7fffffff
0x338a:	je	0x34e6


0x33e5:	mov	eax, dword ptr [rbp + 4]
0x33e8:	shl	r15, 4
0x33ec:	sub	rsp, 8
0x33f0:	add	rbx, r15
0x33f3:	lea	r15, [rbp + 8]
0x33f7:	mov	r8d, dword ptr [rbp]
0x33fb:	mov	r11, qword ptr [rbx]
0x33fe:	mov	r12, qword ptr [rbx + 8]
0x3402:	mov	rcx, r14
0x3405:	or	eax, 1
0x3408:	mov	dword ptr [rsp + 0x24], eax
0x340c:	push	qword ptr [rbp + 0x30]
0x340f:	mov	r9d, eax
0x3412:	push	qword ptr [rbp + 0x28]
0x3415:	push	r15
0x3417:	mov	rsi, r11
0x341a:	mov	rdx, qword ptr [rsp + 0x28]
0x341f:	mov	rdi, r12
0x3422:	mov	qword ptr [rsp + 0x30], r11
0x3427:	call	0x2100


0x34e6:	call	0x4510


0x3390:	lea	r12d, [r15 + 1]
0x3394:	lea	rax, [rip + 0x204cd5]
0x339b:	movsxd	rsi, r12d
0x339e:	shl	rsi, 4
0x33a2:	cmp	rbx, rax
0x33a5:	je	0x34c0


0x34c0:	xor	edi, edi
0x34c2:	call	0x4320


0x33ab:	mov	rdi, rbx
0x33ae:	call	0x4320


0x33b3:	mov	rbx, rax
0x33b6:	mov	qword ptr [rip + 0x204ca3], rax
0x33bd:	movsxd	rdi, dword ptr [rip + 0x204c94]
0x33c4:	mov	edx, r12d
0x33c7:	xor	esi, esi
0x33c9:	sub	edx, edi
0x33cb:	shl	rdi, 4
0x33cf:	movsxd	rdx, edx
0x33d2:	add	rdi, rbx
0x33d5:	shl	rdx, 4
0x33d9:	call	0x1480


0x1480:	jmp	qword ptr [rip + 0x206a82]




0x34c7:	movdqa	xmm0, xmmword ptr [rip + 0x204ba1]
0x34cf:	mov	rbx, rax
0x34d2:	mov	qword ptr [rip + 0x204b87], rax
0x34d9:	movups	xmmword ptr [rax], xmm0
0x34dc:	jmp	0x33bd


0x33bd:	movsxd	rdi, dword ptr [rip + 0x204c94]
0x33c4:	mov	edx, r12d
0x33c7:	xor	esi, esi
0x33c9:	sub	edx, edi
0x33cb:	shl	rdi, 4
0x33cf:	movsxd	rdx, edx
0x33d2:	add	rdi, rbx
0x33d5:	shl	rdx, 4
0x33d9:	call	0x1480


0x34fc:	mov	r12d, dword ptr [rax]
0x34ff:	mov	rbp, rax
0x3502:	lea	rax, [rip + 0x204cf7]
0x3509:	test	rbx, rbx
0x350c:	mov	esi, 0x38
0x3511:	cmove	rbx, rax
0x3515:	mov	rdi, rbx
0x3518:	call	0x44c0


0x3632:	mov	r12d, dword ptr [rax]
0x3635:	mov	rbp, rax
0x3638:	lea	rax, [rbx + 8]
0x363c:	sub	rsp, 8
0x3640:	mov	r9d, dword ptr [rbx + 4]
0x3644:	push	qword ptr [rbx + 0x30]
0x3647:	mov	r8d, dword ptr [rbx]
0x364a:	push	qword ptr [rbx + 0x28]
0x364d:	mov	rdx, r15
0x3650:	push	rax
0x3651:	mov	rcx, qword ptr [rsp + 0x28]
0x3656:	mov	rsi, r14
0x3659:	mov	rdi, r13
0x365c:	call	0x2100


0x36af:	test	r12, r12
0x36b2:	mov	r13, rax
0x36b5:	mov	eax, dword ptr [rax]
0x36b7:	sete	bpl
0x36bb:	or	ebp, dword ptr [rbx + 4]
0x36be:	lea	r10, [rbx + 8]
0x36c2:	sub	rsp, 8
0x36c6:	mov	r8d, dword ptr [rbx]
0x36c9:	mov	rcx, r15
0x36cc:	mov	dword ptr [rsp + 0x14], eax
0x36d0:	push	qword ptr [rbx + 0x30]
0x36d3:	mov	rdx, r14
0x36d6:	push	qword ptr [rbx + 0x28]
0x36d9:	push	r10
0x36db:	xor	esi, esi
0x36dd:	mov	r9d, ebp
0x36e0:	xor	edi, edi
0x36e2:	mov	qword ptr [rsp + 0x40], r10
0x36e7:	call	0x2100


0x42c9:	test	rax, rax
0x42cc:	jne	0x42d3


0x42ce:	test	rbx, rbx
0x42d1:	jne	0x42d5


0x42d3:	pop	rbx
0x42d4:	ret	


0x42d5:	call	0x4510


0x4479:	mov	rdx, rbx
0x447c:	xor	esi, esi
0x447e:	mov	rdi, rax
0x4481:	pop	rbx
0x4482:	jmp	0x1480


0x44d4:	add	rsp, 8
0x44d8:	mov	rdx, rbx
0x44db:	mov	rsi, rbp
0x44de:	pop	rbx
0x44df:	pop	rbp
0x44e0:	mov	rdi, rax
0x44e3:	jmp	0x14d0


0x14d0:	jmp	qword ptr [rip + 0x206a5a]




0x44f9:	mov	rdi, rbx
0x44fc:	lea	rsi, [rax + 1]
0x4500:	pop	rbx
0x4501:	jmp	0x44c0


0x3cef:	lea	rdx, [rip + 0x1fea]
0x3cf6:	mov	rcx, rax
0x3cf9:	mov	r8d, 0x7e3
0x3cff:	mov	esi, 1
0x3d04:	mov	rdi, rbp
0x3d07:	xor	eax, eax
0x3d09:	call	0x15c0


0x3d0e:	lea	rsi, [rip + 0x1d33]
0x3d15:	xor	edi, edi
0x3d17:	mov	edx, 5
0x3d1c:	call	0x13d0


0x3d21:	mov	rsi, rbp
0x3d24:	mov	rdi, rax
0x3d27:	call	0x14a0


0x14a0:	jmp	qword ptr [rip + 0x206a72]




0x1b1d:	mov	rdi, qword ptr [rip + 0x20659c]
0x1b24:	mov	rdx, rax
0x1b27:	mov	rcx, rbx
0x1b2a:	mov	esi, 1
0x1b2f:	xor	eax, eax
0x1b31:	call	0x15c0


0x1b36:	mov	edi, ebp
0x1b38:	call	0x15a0


0x15a0:	jmp	qword ptr [rip + 0x2069f2]




0x1b4b:	mov	rdx, rbx
0x1b4e:	mov	rsi, rax
0x1b51:	mov	edi, 1
0x1b56:	xor	eax, eax
0x1b58:	call	0x1550


0x1550:	jmp	qword ptr [rip + 0x206a1a]




0x4254:	lea	rdx, [rip + 0x17bc]
0x425b:	mov	rsi, rax
0x425e:	mov	edi, 1
0x4263:	xor	eax, eax
0x4265:	call	0x1550


0x4527:	mov	edi, dword ptr [rip + 0x203aeb]
0x452d:	lea	rdx, [rip + 0xf5c]
0x4534:	mov	rcx, rax
0x4537:	xor	esi, esi
0x4539:	xor	eax, eax
0x453b:	call	0x1560


0x1560:	jmp	qword ptr [rip + 0x206a12]




0x4c47:	cmp	rax, -3
0x4c4b:	mov	rbp, rax
0x4c4e:	jbe	0x4c70


0x4c70:	mov	rdx, qword ptr [rsp + 8]
0x4c75:	xor	rdx, qword ptr fs:[0x28]
0x4c7e:	mov	rax, rbp
0x4c81:	jne	0x4c8e


0x4c50:	test	r12, r12
0x4c53:	je	0x4c70


0x4c83:	add	rsp, 0x18
0x4c87:	pop	rbx
0x4c88:	pop	rbp
0x4c89:	pop	r12
0x4c8b:	pop	r13
0x4c8d:	ret	


0x4c8e:	call	0x1400


0x4c55:	xor	edi, edi
0x4c57:	call	0x4d20


0x1400:	jmp	qword ptr [rip + 0x206ac2]




0x4cac:	mov	ebx, dword ptr [rbp]
0x4caf:	mov	rdi, rbp
0x4cb2:	mov	r12, rax
0x4cb5:	call	0x4dc0


0x1650:	lea	rsi, [rip + 0x39d5]
0x1657:	lea	rdi, [rip + 0x39a5]
0x165e:	call	0x13c0


0x13c0:	jmp	qword ptr [rip + 0x206ae2]




0x4d2b:	mov	rdx, rax
0x4d2e:	mov	eax, 1
0x4d33:	test	rdx, rdx
0x4d36:	je	0x4d55


0x4d55:	add	rsp, 8
0x4d59:	ret	


0x4d38:	lea	rdi, [rip + 0x1109]
0x4d3f:	mov	ecx, 2
0x4d44:	mov	rsi, rdx
0x4d47:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4d47:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4d49:	seta	cl
0x4d4c:	sbb	cl, 0
0x4d4f:	xor	eax, eax
0x4d51:	test	cl, cl
0x4d53:	jne	0x4d60


0x4d60:	lea	rdi, [rip + 0x10e3]
0x4d67:	mov	ecx, 6
0x4d6c:	mov	rsi, rdx
0x4d6f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4d6f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4d71:	seta	al
0x4d74:	sbb	al, 0
0x4d76:	test	al, al
0x4d78:	setne	al
0x4d7b:	add	rsp, 8
0x4d7f:	ret	


0x4c5c:	test	al, al
0x4c5e:	jne	0x4c70


0x4c60:	movzx	eax, byte ptr [r13]
0x4c65:	mov	ebp, 1
0x4c6a:	mov	dword ptr [rbx], eax
0x4c6c:	nop	dword ptr [rax]
0x4c70:	mov	rdx, qword ptr [rsp + 8]
0x4c75:	xor	rdx, qword ptr fs:[0x28]
0x4c7e:	mov	rax, rbp
0x4c81:	jne	0x4c8e


0x4d8e:	test	rax, rax
0x4d91:	je	0x4db0


0x4db0:	lea	rax, [rip + 0x1099]
0x4db7:	add	rsp, 8
0x4dbb:	ret	


0x4d93:	cmp	byte ptr [rax], 0
0x4d96:	lea	rdx, [rip + 0x10b3]
0x4d9d:	cmove	rax, rdx
0x4da1:	add	rsp, 8
0x4da5:	ret	


0x2020:	movzx	edx, byte ptr [rax]
0x2023:	and	edx, 0xffffffdf
0x2026:	cmp	dl, 0x55
0x2029:	je	0x20a0


0x20a0:	movzx	edx, byte ptr [rax + 1]
0x20a4:	and	edx, 0xffffffdf
0x20a7:	cmp	dl, 0x54
0x20aa:	jne	0x2030


0x202b:	cmp	dl, 0x47
0x202e:	je	0x2050


0x20ac:	movzx	edx, byte ptr [rax + 2]
0x20b0:	and	edx, 0xffffffdf
0x20b3:	cmp	dl, 0x46
0x20b6:	jne	0x2030


0x2030:	lea	rax, [rip + 0x34b4]
0x2037:	lea	rdx, [rip + 0x34af]
0x203e:	cmp	ebx, 9
0x2041:	cmovne	rax, rdx
0x2045:	add	rsp, 8
0x2049:	pop	rbx
0x204a:	pop	rbp
0x204b:	ret	


0x2050:	movzx	edx, byte ptr [rax + 1]
0x2054:	and	edx, 0xffffffdf
0x2057:	cmp	dl, 0x42
0x205a:	jne	0x2030


0x20bc:	cmp	byte ptr [rax + 3], 0x2d
0x20c0:	jne	0x2030


0x205c:	cmp	byte ptr [rax + 2], 0x31
0x2060:	jne	0x2030


0x20c6:	cmp	byte ptr [rax + 4], 0x38
0x20ca:	jne	0x2030


0x2062:	cmp	byte ptr [rax + 3], 0x38
0x2066:	jne	0x2030


0x20d0:	cmp	byte ptr [rax + 5], 0
0x20d4:	jne	0x2030


0x2068:	cmp	byte ptr [rax + 4], 0x30
0x206c:	jne	0x2030


0x20da:	cmp	byte ptr [rbp], 0x60
0x20de:	lea	rax, [rip + 0x33f7]
0x20e5:	lea	rdx, [rip + 0x33f4]
0x20ec:	cmovne	rax, rdx
0x20f0:	add	rsp, 8
0x20f4:	pop	rbx
0x20f5:	pop	rbp
0x20f6:	ret	


0x206e:	cmp	byte ptr [rax + 5], 0x33
0x2072:	jne	0x2030


0x2074:	cmp	byte ptr [rax + 6], 0x30
0x2078:	jne	0x2030


0x207a:	cmp	byte ptr [rax + 7], 0
0x207e:	jne	0x2030


0x2080:	cmp	byte ptr [rbp], 0x60
0x2084:	lea	rax, [rip + 0x3459]
0x208b:	lea	rdx, [rip + 0x3456]
0x2092:	cmovne	rax, rdx
0x2096:	add	rsp, 8
0x209a:	pop	rbx
0x209b:	pop	rbp
0x209c:	ret	


0x4eb3:	mov	edx, r12d
0x4eb6:	mov	rsi, rbp
0x4eb9:	mov	edi, eax
0x4ebb:	call	0x1450


0x1450:	jmp	qword ptr [rip + 0x206a9a]




0x4dcc:	test	eax, eax
0x4dce:	mov	rdi, rbx
0x4dd1:	js	0x4e27


0x4e27:	pop	rbx
0x4e28:	pop	rbp
0x4e29:	pop	r12
0x4e2b:	jmp	0x13b0


0x4dd3:	call	0x1520


0x13b0:	jmp	qword ptr [rip + 0x206aea]




0x4dd8:	test	eax, eax
0x4dda:	jne	0x4e08


0x4ddc:	mov	rdi, rbx
0x4ddf:	call	0x4e40


0x4e08:	mov	rdi, rbx
0x4e0b:	call	0x14e0


0x4e10:	xor	esi, esi
0x4e12:	mov	edx, 1
0x4e17:	mov	edi, eax
0x4e19:	call	0x1450


0x4e1e:	cmp	rax, -1
0x4e22:	jne	0x4ddc


0x4e24:	mov	rdi, rbx
0x4e27:	pop	rbx
0x4e28:	pop	rbp
0x4e29:	pop	r12
0x4e2b:	jmp	0x13b0


0x4ec0:	cmp	rax, -1
0x4ec4:	je	0x4ed2


0x4ed2:	pop	rbx
0x4ed3:	pop	rbp
0x4ed4:	pop	r12
0x4ed6:	ret	


0x4ec6:	and	dword ptr [rbx], 0xffffffef
0x4ec9:	mov	qword ptr [rbx + 0x90], rax
0x4ed0:	xor	eax, eax
0x4ed2:	pop	rbx
0x4ed3:	pop	rbp
0x4ed4:	pop	r12
0x4ed6:	ret	


0x1663:	lea	rdi, [rip + 0x3999]
0x166a:	call	0x13a0


0x13a0:	jmp	qword ptr [rip + 0x206af2]




0x4540:	call	0x1340


0x426a:	lea	rsi, [rip + 0x17bc]
0x4271:	mov	edx, 5
0x4276:	xor	edi, edi
0x4278:	call	0x13d0


0x427d:	lea	rcx, [rip + 0x1124]
0x4284:	lea	rdx, [rip + 0xd74]
0x428b:	mov	rsi, rax
0x428e:	mov	edi, 1
0x4293:	xor	eax, eax
0x4295:	call	0x1550


0x429a:	mov	rbx, qword ptr [rip + 0x203de7]
0x42a1:	lea	rsi, [rip + 0x19b8]
0x42a8:	xor	edi, edi
0x42aa:	mov	edx, 5
0x42af:	call	0x13d0


0x42b4:	mov	rsi, rbx
0x42b7:	mov	rdi, rax
0x42ba:	pop	rbx
0x42bb:	jmp	0x14a0


0x1b5d:	lea	rsi, [rip + 0x35a4]
0x1b64:	mov	edx, 5
0x1b69:	xor	edi, edi
0x1b6b:	call	0x13d0


0x1b70:	mov	ecx, 0x13
0x1b75:	mov	rsi, rax
0x1b78:	mov	edx, 0xffffffec
0x1b7d:	mov	edi, 1
0x1b82:	xor	eax, eax
0x1b84:	call	0x1550


0x1b89:	mov	rbx, qword ptr [rip + 0x2064f8]
0x1b90:	lea	rsi, [rip + 0x3651]
0x1b97:	mov	edx, 5
0x1b9c:	xor	edi, edi
0x1b9e:	call	0x13d0


0x1ba3:	mov	rsi, rbx
0x1ba6:	mov	rdi, rax
0x1ba9:	call	0x14a0


0x1bae:	mov	rbx, qword ptr [rip + 0x2064d3]
0x1bb5:	lea	rsi, [rip + 0x367c]
0x1bbc:	mov	edx, 5
0x1bc1:	xor	edi, edi
0x1bc3:	call	0x13d0


0x1bc8:	mov	rsi, rbx
0x1bcb:	mov	rdi, rax
0x1bce:	call	0x14a0


0x1bd3:	mov	rbx, qword ptr [rip + 0x2064ae]
0x1bda:	lea	rsi, [rip + 0x369f]
0x1be1:	mov	edx, 5
0x1be6:	xor	edi, edi
0x1be8:	call	0x13d0


0x1bed:	mov	rsi, rbx
0x1bf0:	mov	rdi, rax
0x1bf3:	call	0x14a0


0x1bf8:	mov	rbx, qword ptr [rip + 0x206489]
0x1bff:	lea	rsi, [rip + 0x36aa]
0x1c06:	mov	edx, 5
0x1c0b:	xor	edi, edi
0x1c0d:	call	0x13d0


0x1c12:	mov	rsi, rbx
0x1c15:	mov	rdi, rax
0x1c18:	lea	rbx, [rip + 0x3365]
0x1c1f:	call	0x14a0


0x1c24:	lea	rsi, [rip + 0x36bd]
0x1c2b:	mov	edx, 5
0x1c30:	xor	edi, edi
0x1c32:	call	0x13d0


0x1c37:	lea	rdx, [rip + 0x3346]
0x1c3e:	mov	rsi, rax
0x1c41:	mov	edi, 1
0x1c46:	xor	eax, eax
0x1c48:	call	0x1550


0x1c4d:	lea	rax, [rip + 0x3335]
0x1c54:	lea	rcx, [rip + 0x336f]
0x1c5b:	mov	qword ptr [rsp + 0x60], 0
0x1c64:	mov	qword ptr [rsp + 0x68], 0
0x1c6d:	mov	rdx, rsp
0x1c70:	mov	qword ptr [rsp], rax
0x1c74:	lea	rax, [rip + 0x3310]
0x1c7b:	mov	qword ptr [rsp + 0x30], rcx
0x1c80:	lea	rcx, [rip + 0x334d]
0x1c87:	mov	qword ptr [rsp + 8], rax
0x1c8c:	lea	rax, [rip + 0x3370]
0x1c93:	mov	qword ptr [rsp + 0x40], rcx
0x1c98:	lea	rcx, [rip + 0x333f]
0x1c9f:	mov	qword ptr [rsp + 0x10], rax
0x1ca4:	lea	rax, [rip + 0x32f0]
0x1cab:	mov	qword ptr [rsp + 0x50], rcx
0x1cb0:	mov	qword ptr [rsp + 0x18], rax
0x1cb5:	lea	rax, [rip + 0x32f5]
0x1cbc:	mov	qword ptr [rsp + 0x20], rax
0x1cc1:	lea	rax, [rip + 0x32f3]
0x1cc8:	mov	qword ptr [rsp + 0x28], rax
0x1ccd:	mov	qword ptr [rsp + 0x38], rax
0x1cd2:	mov	qword ptr [rsp + 0x48], rax
0x1cd7:	mov	qword ptr [rsp + 0x58], rax
0x1cdc:	nop	dword ptr [rax]
0x1ce0:	add	rdx, 0x10
0x1ce4:	mov	rdi, qword ptr [rdx]
0x1ce7:	test	rdi, rdi
0x1cea:	je	0x1cff


0x1cff:	mov	r12, qword ptr [rdx + 8]
0x1d03:	xor	edi, edi
0x1d05:	mov	edx, 5
0x1d0a:	lea	rsi, [rip + 0x32d7]
0x1d11:	test	r12, r12
0x1d14:	je	0x1ddb


0x1cec:	mov	ecx, 5
0x1cf1:	mov	rsi, rbx
0x1cf4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1ddb:	call	0x13d0


0x1d1a:	call	0x13d0


0x1cf4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1cf6:	seta	al
0x1cf9:	sbb	al, 0
0x1cfb:	test	al, al
0x1cfd:	jne	0x1ce0


0x1ce0:	add	rdx, 0x10
0x1ce4:	mov	rdi, qword ptr [rdx]
0x1ce7:	test	rdi, rdi
0x1cea:	je	0x1cff


0x1d1f:	lea	rcx, [rip + 0x3682]
0x1d26:	lea	rdx, [rip + 0x32d2]
0x1d2d:	mov	rsi, rax
0x1d30:	mov	edi, 1
0x1d35:	xor	eax, eax
0x1d37:	call	0x1550


0x1d3c:	xor	esi, esi
0x1d3e:	mov	edi, 5
0x1d43:	call	0x1540


0x1d48:	test	rax, rax
0x1d4b:	je	0x1d69


0x1d69:	lea	rsi, [rip + 0x32a1]
0x1d70:	xor	edi, edi
0x1d72:	mov	edx, 5
0x1d77:	call	0x13d0


0x1d4d:	lea	rsi, [rip + 0x32b9]
0x1d54:	mov	edx, 3
0x1d59:	mov	rdi, rax
0x1d5c:	call	0x1370


0x1370:	jmp	qword ptr [rip + 0x206b0a]




0x1d7c:	lea	rcx, [rip + 0x3201]
0x1d83:	lea	rdx, [rip + 0x361e]
0x1d8a:	mov	rsi, rax
0x1d8d:	mov	edi, 1
0x1d92:	xor	eax, eax
0x1d94:	call	0x1550


0x1d99:	cmp	r12, rbx
0x1d9c:	lea	rcx, [rip + 0x3202]
0x1da3:	lea	rbx, [rip + 0x3c57]
0x1daa:	cmove	rbx, rcx
0x1dae:	lea	rsi, [rip + 0x3663]
0x1db5:	xor	edi, edi
0x1db7:	mov	edx, 5
0x1dbc:	call	0x13d0


0x1dc1:	mov	rcx, rbx
0x1dc4:	mov	rsi, rax
0x1dc7:	mov	rdx, r12
0x1dca:	mov	edi, 1
0x1dcf:	xor	eax, eax
0x1dd1:	call	0x1550


0x1dd6:	jmp	0x1b36


0x1de0:	lea	rcx, [rip + 0x35c1]
0x1de7:	lea	rdx, [rip + 0x3211]
0x1dee:	mov	rsi, rax
0x1df1:	mov	edi, 1
0x1df6:	xor	eax, eax
0x1df8:	call	0x1550


0x1dfd:	xor	esi, esi
0x1dff:	mov	edi, 5
0x1e04:	call	0x1540


0x1e09:	test	rax, rax
0x1e0c:	je	0x1e26


0x1e26:	lea	rsi, [rip + 0x31e4]
0x1e2d:	mov	edx, 5
0x1e32:	xor	edi, edi
0x1e34:	lea	r12, [rip + 0x3149]
0x1e3b:	lea	rbx, [rip + 0x3163]
0x1e42:	call	0x13d0


0x1e0e:	lea	rsi, [rip + 0x31f8]
0x1e15:	mov	edx, 3
0x1e1a:	mov	rdi, rax
0x1e1d:	call	0x1370


0x1e47:	lea	rcx, [rip + 0x3136]
0x1e4e:	lea	rdx, [rip + 0x3553]
0x1e55:	mov	rsi, rax
0x1e58:	mov	edi, 1
0x1e5d:	xor	eax, eax
0x1e5f:	call	0x1550


0x1e64:	jmp	0x1dae


0x1dae:	lea	rsi, [rip + 0x3663]
0x1db5:	xor	edi, edi
0x1db7:	mov	edx, 5
0x1dbc:	call	0x13d0


0x3d2c:	cmp	r12, 9
0x3d30:	ja	0x4070


0x3d36:	lea	rdx, [rip + 0x1f67]
0x3d3d:	movsxd	rax, dword ptr [rdx + r12*4]
0x3d41:	add	rax, rdx
0x3d44:	jmp	rax


0x4070:	mov	r10, qword ptr [rbx + 0x40]
0x4074:	mov	r9, qword ptr [rbx + 0x38]
0x4078:	mov	edx, 5
0x407d:	mov	rax, qword ptr [rbx + 0x10]
0x4081:	mov	r8, qword ptr [rbx + 8]
0x4085:	lea	rsi, [rip + 0x1b94]
0x408c:	mov	r13, qword ptr [rbx + 0x30]
0x4090:	mov	r12, qword ptr [rbx + 0x28]
0x4094:	mov	r15, qword ptr [rbx + 0x20]
0x4098:	mov	r14, qword ptr [rbx + 0x18]
0x409c:	mov	qword ptr [rsp + 0x18], r10
0x40a1:	mov	qword ptr [rsp + 0x10], r9
0x40a6:	mov	qword ptr [rsp], rax
0x40aa:	mov	qword ptr [rsp + 8], r8
0x40af:	mov	rbx, qword ptr [rbx]
0x40b2:	jmp	0x3e42


0x3e42:	xor	edi, edi
0x3e44:	call	0x13d0


0x3e49:	mov	r10, qword ptr [rsp + 0x18]
0x3e4e:	push	r10
0x3e50:	jmp	0x3d94


0x3d94:	mov	r9, qword ptr [rsp + 0x18]
0x3d99:	mov	rdx, rax
0x3d9c:	mov	rcx, rbx
0x3d9f:	mov	esi, 1
0x3da4:	mov	rdi, rbp
0x3da7:	xor	eax, eax
0x3da9:	push	r9
0x3dab:	push	r13
0x3dad:	push	r12
0x3daf:	push	r15
0x3db1:	push	r14
0x3db3:	mov	r9, qword ptr [rsp + 0x30]
0x3db8:	mov	r8, qword ptr [rsp + 0x38]
0x3dbd:	call	0x15c0


0x3dc2:	add	rsp, 0x30
0x3dc6:	add	rsp, 0x28
0x3dca:	pop	rbx
0x3dcb:	pop	rbp
0x3dcc:	pop	r12
0x3dce:	pop	r13
0x3dd0:	pop	r14
0x3dd2:	pop	r15
0x3dd4:	ret	


0x351d:	mov	dword ptr [rbp], r12d
0x3521:	pop	rbx
0x3522:	pop	rbp
0x3523:	pop	r12
0x3525:	ret	


0x33de:	mov	dword ptr [rip + 0x204c73], r12d
0x33e5:	mov	eax, dword ptr [rbp + 4]
0x33e8:	shl	r15, 4
0x33ec:	sub	rsp, 8
0x33f0:	add	rbx, r15
0x33f3:	lea	r15, [rbp + 8]
0x33f7:	mov	r8d, dword ptr [rbp]
0x33fb:	mov	r11, qword ptr [rbx]
0x33fe:	mov	r12, qword ptr [rbx + 8]
0x3402:	mov	rcx, r14
0x3405:	or	eax, 1
0x3408:	mov	dword ptr [rsp + 0x24], eax
0x340c:	push	qword ptr [rbp + 0x30]
0x340f:	mov	r9d, eax
0x3412:	push	qword ptr [rbp + 0x28]
0x3415:	push	r15
0x3417:	mov	rsi, r11
0x341a:	mov	rdx, qword ptr [rsp + 0x28]
0x341f:	mov	rdi, r12
0x3422:	mov	qword ptr [rsp + 0x30], r11
0x3427:	call	0x2100


0x45ac:	mov	rcx, qword ptr [rbx]
0x45af:	mov	rbp, rax
0x45b2:	cmp	rcx, r12
0x45b5:	je	0x4618


0x4618:	test	r15, r15
0x461b:	je	0x4ab0


0x45b7:	mov	eax, dword ptr [r13]
0x45bb:	test	eax, eax
0x45bd:	jne	0x4600


0x4ab0:	mov	r12d, 4
0x4ab6:	jmp	0x45d7


0x4621:	movzx	r13d, byte ptr [rcx]
0x4625:	mov	qword ptr [rsp + 8], rcx
0x462a:	mov	r12d, 4
0x4630:	test	r13b, r13b
0x4633:	je	0x45d7


0x45bf:	xor	r12d, r12d
0x45c2:	test	r15, r15
0x45c5:	je	0x45d4


0x4600:	cmp	eax, 0x22
0x4603:	mov	r12d, 4
0x4609:	jne	0x45d7


0x45d7:	mov	rdi, qword ptr [rsp + 0x18]
0x45dc:	xor	rdi, qword ptr fs:[0x28]
0x45e5:	mov	eax, r12d
0x45e8:	jne	0x4bfe


0x4635:	movsx	esi, r13b
0x4639:	mov	rdi, r15
0x463c:	call	0x1430


0x45d4:	mov	qword ptr [r14], rbp
0x45d7:	mov	rdi, qword ptr [rsp + 0x18]
0x45dc:	xor	rdi, qword ptr fs:[0x28]
0x45e5:	mov	eax, r12d
0x45e8:	jne	0x4bfe


0x45c7:	movzx	r13d, byte ptr [rcx]
0x45cb:	test	r13b, r13b
0x45ce:	jne	0x4653


0x460b:	mov	r12d, 1
0x4611:	jmp	0x45c2


0x45ee:	add	rsp, 0x28
0x45f2:	pop	rbx
0x45f3:	pop	rbp
0x45f4:	pop	r12
0x45f6:	pop	r13
0x45f8:	pop	r14
0x45fa:	pop	r15
0x45fc:	ret	


0x4bfe:	call	0x1400


0x1430:	jmp	qword ptr [rip + 0x206aaa]


0x4653:	movsx	esi, r13b
0x4657:	mov	rdi, r15
0x465a:	mov	qword ptr [rsp + 8], rcx
0x465f:	call	0x1430


0x45c2:	test	r15, r15
0x45c5:	je	0x45d4




0x4e77:	mov	rdi, rbx
0x4e7a:	pop	rbx
0x4e7b:	jmp	0x1500


0x4206:	mov	rax, qword ptr [rsp + 0x78]
0x420b:	xor	rax, qword ptr fs:[0x28]
0x4214:	jne	0x4220


0x4216:	add	rsp, 0xb8
0x421d:	pop	rbx
0x421e:	pop	rbp
0x421f:	ret	


0x4220:	call	0x1400


0x4130:	mov	rax, qword ptr [rsp + 0x58]
0x4135:	xor	rax, qword ptr fs:[0x28]
0x413e:	jne	0x4145


0x4140:	add	rsp, 0x68
0x4144:	ret	


0x4145:	call	0x1400


0x4664:	test	rax, rax
0x4667:	mov	rcx, qword ptr [rsp + 8]
0x466c:	je	0x46c8


0x46c8:	mov	qword ptr [r14], rbp
0x46cb:	or	r12d, 2
0x46cf:	jmp	0x45d7


0x466e:	lea	eax, [r13 - 0x45]
0x4672:	cmp	al, 0x2f
0x4674:	ja	0x46d8


0x4676:	movabs	rdx, 0x814400308945
0x4680:	bt	rdx, rax
0x4684:	jae	0x46d8


0x46d8:	mov	edi, 1
0x46dd:	mov	eax, 0x400
0x46e2:	sub	r13d, 0x42
0x46e6:	cmp	r13b, 0x35
0x46ea:	ja	0x46c8


0x4686:	mov	esi, 0x30
0x468b:	mov	rdi, r15
0x468e:	mov	qword ptr [rsp + 8], rcx
0x4693:	call	0x1430


0x46ec:	lea	rsi, [rip + 0x1675]
0x46f3:	movzx	r13d, r13b
0x46f7:	movsxd	rdx, dword ptr [rsi + r13*4]
0x46fb:	add	rdx, rsi
0x46fe:	jmp	rdx


0x4698:	test	rax, rax
0x469b:	mov	rcx, qword ptr [rsp + 8]
0x46a0:	je	0x46d8


0x46a2:	movzx	eax, byte ptr [rcx + 1]
0x46a6:	cmp	al, 0x44
0x46a8:	je	0x46b6


0x46b6:	mov	edi, 2
0x46bb:	mov	eax, 0x3e8
0x46c0:	jmp	0x46e2


0x46aa:	cmp	al, 0x69
0x46ac:	je	0x4b98


0x46e2:	sub	r13d, 0x42
0x46e6:	cmp	r13b, 0x35
0x46ea:	ja	0x46c8


0x4b98:	xor	edi, edi
0x4b9a:	cmp	byte ptr [rcx + 2], 0x42
0x4b9e:	mov	eax, 0x400
0x4ba3:	sete	dil
0x4ba7:	lea	edi, [rdi + rdi + 1]
0x4bab:	jmp	0x46e2


0x46b2:	cmp	al, 0x42
0x46b4:	jne	0x46d8


0x4641:	test	rax, rax
0x4644:	mov	rcx, qword ptr [rsp + 8]
0x4649:	je	0x45d7


0x464b:	mov	ebp, 1
0x4650:	xor	r12d, r12d
0x4653:	movsx	esi, r13b
0x4657:	mov	rdi, r15
0x465a:	mov	qword ptr [rsp + 8], rcx
0x465f:	call	0x1430


0x1e22:	test	eax, eax
0x1e24:	jne	0x1e69


0x1e69:	lea	r12, [rip + 0x3114]
0x1e70:	mov	r13, qword ptr [rip + 0x206211]
0x1e77:	lea	rsi, [rip + 0x3552]
0x1e7e:	xor	edi, edi
0x1e80:	mov	edx, 5
0x1e85:	call	0x13d0


0x1e8a:	mov	rsi, r13
0x1e8d:	mov	rdi, rax
0x1e90:	call	0x14a0


0x1e95:	jmp	0x1d69


0x1d61:	test	eax, eax
0x1d63:	jne	0x1e70


0x1e70:	mov	r13, qword ptr [rip + 0x206211]
0x1e77:	lea	rsi, [rip + 0x3552]
0x1e7e:	xor	edi, edi
0x1e80:	mov	edx, 5
0x1e85:	call	0x13d0


0x166f:	lea	rdi, [rip + 0x84a]
0x1676:	mov	dword ptr [rip + 0x206998], 0x7d
0x1680:	call	0x4f60


0x1685:	cmp	r12d, 1
0x1689:	jle	0x1811


0x1811:	call	0x1350


0x168f:	lea	r13, [rip + 0x2064ea]
0x1696:	xor	r14d, r14d
0x1699:	movsxd	rax, ebx
0x169c:	lea	rcx, [rax*8]
0x16a4:	mov	rax, qword ptr [rbp + rax*8]
0x16a9:	cmp	byte ptr [rax], 0x2d
0x16ac:	jne	0x16e8


0x16ae:	movzx	esi, byte ptr [rax + 1]
0x16b2:	lea	edx, [rsi - 0x2b]
0x16b5:	and	edx, 0xfd
0x16bb:	sete	dl
0x16be:	movzx	edx, dl
0x16c1:	add	edx, 1
0x16c4:	movsxd	rdx, edx
0x16c7:	movsx	edx, byte ptr [rax + rdx]
0x16cb:	sub	edx, 0x30
0x16ce:	cmp	edx, 9
0x16d1:	ja	0x16e8


0x16e8:	mov	rax, qword ptr [rbp]
0x16ec:	lea	rsi, [rbp + rcx - 8]
0x16f1:	lea	rdx, [rip + 0x394c]
0x16f8:	mov	edi, r12d
0x16fb:	xor	r8d, r8d
0x16fe:	mov	rcx, r13
0x1701:	mov	qword ptr [rsi], rax
0x1704:	lea	eax, [rbx - 1]
0x1707:	mov	dword ptr [rip + 0x20697f], 0
0x1711:	sub	edi, eax
0x1713:	call	0x1410


0x16d3:	lea	r14, [rax + 1]
0x16d7:	add	ebx, 1
0x16da:	cmp	ebx, r12d
0x16dd:	jl	0x1699


0x1410:	jmp	qword ptr [rip + 0x206aba]


0x1699:	movsxd	rax, ebx
0x169c:	lea	rcx, [rax*8]
0x16a4:	mov	rax, qword ptr [rbp + rax*8]
0x16a9:	cmp	byte ptr [rax], 0x2d
0x16ac:	jne	0x16e8


0x16df:	jmp	0x173c




0x173c:	test	r14, r14
0x173f:	je	0x1811


0x1745:	lea	r8, [rip + 0x42b5]
0x174c:	xor	esi, esi
0x174e:	mov	rcx, rsp
0x1751:	mov	edx, 0xa
0x1756:	mov	rdi, r14
0x1759:	call	0x4550


0x175e:	cmp	eax, 1
0x1761:	ja	0x199c


0x1767:	mov	rax, qword ptr [rsp]
0x176b:	mov	r13d, 0xffffffd9
0x1771:	cmp	rax, -0x27
0x1775:	jl	0x1787


0x199c:	mov	rdi, r14
0x199f:	call	0x3c80


0x1787:	cmp	ebx, r12d
0x178a:	jne	0x1828


0x1777:	cmp	rax, 0x27
0x177b:	mov	edx, 0x27
0x1780:	cmovle	rdx, rax
0x1784:	mov	r13, rdx
0x1787:	cmp	ebx, r12d
0x178a:	jne	0x1828


0x1790:	lea	rsi, [rip + 0x3cb9]
0x1797:	mov	edx, 5
0x179c:	xor	edi, edi
0x179e:	call	0x13d0


0x1828:	call	0x1350


0x17a3:	xor	esi, esi
0x17a5:	mov	rdx, rax
0x17a8:	xor	edi, edi
0x17aa:	xor	eax, eax
0x17ac:	call	0x1560


0x17b1:	mov	edi, 0x7d
0x17b6:	call	0x1ae0


0x182d:	xor	esi, esi
0x182f:	xor	edi, edi
0x1831:	mov	dword ptr [rax], 0
0x1837:	mov	r12, rax
0x183a:	call	0x1360


0x1360:	jmp	qword ptr [rip + 0x206b12]




0x1816:	cmp	ebx, r12d
0x1819:	mov	r13, rax
0x181c:	je	0x192d


0x192d:	xor	esi, esi
0x192f:	xor	edi, edi
0x1931:	mov	dword ptr [r13], 0
0x1939:	call	0x1360


0x1822:	mov	r13d, 0xa
0x1828:	call	0x1350


0x4de4:	test	eax, eax
0x4de6:	je	0x4e24


0x4de8:	call	0x1350


0x4ded:	mov	r12d, dword ptr [rax]
0x4df0:	mov	rdi, rbx
0x4df3:	mov	rbp, rax
0x4df6:	call	0x13b0


0x4dfb:	test	r12d, r12d
0x4dfe:	jne	0x4e30


0x4e00:	pop	rbx
0x4e01:	pop	rbp
0x4e02:	pop	r12
0x4e04:	ret	


0x4e30:	mov	dword ptr [rbp], r12d
0x4e34:	mov	eax, 0xffffffff
0x4e39:	jmp	0x4e00


0x4cba:	and	ebx, 0x20
0x4cbd:	test	ebx, ebx
0x4cbf:	jne	0x4cd8


0x4cc1:	test	eax, eax
0x4cc3:	je	0x4ccf


0x4cd8:	test	eax, eax
0x4cda:	jne	0x4cf8


0x4ccf:	pop	rbx
0x4cd0:	pop	rbp
0x4cd1:	pop	r12
0x4cd3:	ret	


0x4cc5:	test	r12, r12
0x4cc8:	mov	eax, 0xffffffff
0x4ccd:	je	0x4d08


0x4cdc:	call	0x1350


0x4cf8:	pop	rbx
0x4cf9:	mov	eax, 0xffffffff
0x4cfe:	pop	rbp
0x4cff:	pop	r12
0x4d01:	ret	


0x4d08:	call	0x1350


0x4d0d:	cmp	dword ptr [rax], 9
0x4d10:	pop	rbx
0x4d11:	pop	rbp
0x4d12:	pop	r12
0x4d14:	setne	al
0x4d17:	movzx	eax, al
0x4d1a:	neg	eax
0x4d1c:	ret	


0x4ce1:	mov	dword ptr [rax], 0
0x4ce7:	mov	eax, 0xffffffff
0x4cec:	pop	rbx
0x4ced:	pop	rbp
0x4cee:	pop	r12
0x4cf0:	ret	


0x1ed2:	test	eax, eax
0x1ed4:	je	0x1eec


0x1eec:	mov	rdi, qword ptr [rip + 0x2061cd]
0x1ef3:	call	0x4ca0


0x1ed6:	call	0x1350


0x1edb:	cmp	byte ptr [rip + 0x2061ee], 0
0x1ee2:	mov	rbx, rax
0x1ee5:	je	0x1f03


0x1f03:	lea	rsi, [rip + 0x3576]
0x1f0a:	xor	edi, edi
0x1f0c:	mov	edx, 5
0x1f11:	call	0x13d0


0x1ee7:	cmp	dword ptr [rax], 0x20
0x1eea:	jne	0x1f03


0x1f16:	mov	rdi, qword ptr [rip + 0x2061bb]
0x1f1d:	mov	rbp, rax
0x1f20:	test	rdi, rdi
0x1f23:	je	0x1f4d


0x1f4d:	mov	esi, dword ptr [rbx]
0x1f4f:	lea	rdx, [rip + 0x353a]
0x1f56:	mov	rcx, rax
0x1f59:	xor	edi, edi
0x1f5b:	xor	eax, eax
0x1f5d:	call	0x1560


0x1f25:	call	0x3a80


0x1f62:	jmp	0x1f42


0x1f42:	mov	edi, dword ptr [rip + 0x2060d0]
0x1f48:	call	0x1380


0x1380:	jmp	qword ptr [rip + 0x206b02]




0x1ef8:	test	eax, eax
0x1efa:	jne	0x1f42


0x1efc:	add	rsp, 8
0x1f00:	pop	rbx
0x1f01:	pop	rbp
0x1f02:	ret	


0x193e:	cmp	eax, -1
0x1941:	jne	0x1970


0x1943:	cmp	dword ptr [r13], 0
0x1948:	je	0x1970


0x1970:	lea	rsi, [rip + 0x370b]
0x1977:	mov	edx, eax
0x1979:	mov	edi, 1
0x197e:	xor	eax, eax
0x1980:	xor	ebx, ebx
0x1982:	call	0x1550


0x194a:	lea	rsi, [rip + 0x371d]
0x1951:	mov	edx, 5
0x1956:	xor	edi, edi
0x1958:	call	0x13d0


0x195d:	mov	esi, dword ptr [r13]
0x1961:	mov	rdx, rax
0x1964:	mov	edi, 0x7d
0x1969:	xor	eax, eax
0x196b:	call	0x1560


0x1987:	jmp	0x190e


0x190e:	mov	rcx, qword ptr [rsp + 8]
0x1913:	xor	rcx, qword ptr fs:[0x28]
0x191c:	mov	eax, ebx
0x191e:	jne	0x1997


0x1920:	add	rsp, 0x10
0x1924:	pop	rbx
0x1925:	pop	rbp
0x1926:	pop	r12
0x1928:	pop	r13
0x192a:	pop	r14
0x192c:	ret	


0x1997:	call	0x1400


0x183f:	cmp	eax, -1
0x1842:	jne	0x1871


0x1844:	cmp	dword ptr [r12], 0
0x1849:	je	0x1871


0x1871:	lea	edx, [rax + r13]
0x1875:	xor	esi, esi
0x1877:	xor	edi, edi
0x1879:	call	0x1470


0x184b:	lea	rsi, [rip + 0x381c]
0x1852:	mov	edx, 5
0x1857:	xor	edi, edi
0x1859:	call	0x13d0


0x1470:	jmp	qword ptr [rip + 0x206a8a]




0x185e:	mov	esi, dword ptr [r12]
0x1862:	mov	rdx, rax
0x1865:	mov	edi, 0x7d
0x186a:	xor	eax, eax
0x186c:	call	0x1560


0x1718:	mov	edx, dword ptr [rip + 0x206972]
0x171e:	cmp	eax, 0xffffff7e
0x1723:	lea	ebx, [rbx + rdx - 1]
0x1727:	je	0x1990


0x1990:	xor	edi, edi
0x1992:	call	0x1ae0


0x172d:	jle	0x17c0


0x17c0:	cmp	eax, 0xffffff7d
0x17c5:	jne	0x17b1


0x1733:	cmp	eax, -1
0x1736:	jne	0x1800


0x17c7:	mov	rdi, qword ptr [rip + 0x2068ba]
0x17ce:	mov	rcx, qword ptr [rip + 0x20683b]
0x17d5:	lea	r8, [rip + 0x386c]
0x17dc:	lea	rdx, [rip + 0x381c]
0x17e3:	lea	rsi, [rip + 0x379a]
0x17ea:	xor	r9d, r9d
0x17ed:	xor	eax, eax
0x17ef:	call	0x4160


0x1800:	cmp	eax, 0x6e
0x1803:	jne	0x17b1


0x1805:	mov	r14, qword ptr [rip + 0x20688c]
0x180c:	jmp	0x16da


0x16da:	cmp	ebx, r12d
0x16dd:	jl	0x1699


0x17f4:	xor	edi, edi
0x17f6:	call	0x15a0


0x187e:	test	eax, eax
0x1880:	je	0x18cd


0x18cd:	movsxd	rbx, ebx
0x18d0:	lea	rbp, [rbp + rbx*8]
0x18d5:	xor	ebx, ebx
0x18d7:	mov	rdi, qword ptr [rbp]
0x18db:	mov	rsi, rbp
0x18de:	call	0x1580


0x1882:	lea	rsi, [rip + 0x37fd]
0x1889:	xor	edi, edi
0x188b:	mov	edx, 5
0x1890:	call	0x13d0


0x1580:	jmp	qword ptr [rip + 0x206a02]




0x1895:	mov	esi, dword ptr [r12]
0x1899:	cmp	esi, 0xd
0x189c:	je	0x1989


0x1989:	xor	edi, edi
0x198b:	jmp	0x18b0


0x18a2:	cmp	esi, 1
0x18a5:	mov	edi, 0x7d
0x18aa:	je	0x1989


0x18b0:	mov	rdx, rax
0x18b3:	xor	eax, eax
0x18b5:	call	0x1560


0x18ba:	mov	rax, qword ptr [rip + 0x2067ff]
0x18c1:	test	byte ptr [rax], 0x20
0x18c4:	je	0x18cd


0x18c6:	mov	ebx, 0x7d
0x18cb:	jmp	0x190e


0x18e3:	cmp	dword ptr [r12], 2
0x18e8:	mov	rdi, qword ptr [rbp]
0x18ec:	sete	bl
0x18ef:	call	0x3c80


0x1f2a:	mov	esi, dword ptr [rbx]
0x1f2c:	lea	rdx, [rip + 0x3559]
0x1f33:	mov	rcx, rax
0x1f36:	mov	r8, rbp
0x1f39:	xor	edi, edi
0x1f3b:	xor	eax, eax
0x1f3d:	call	0x1560


0x18f4:	mov	esi, dword ptr [r12]
0x18f8:	lea	rdx, [rip + 0x3b91]
0x18ff:	mov	rcx, rax
0x1902:	xor	edi, edi
0x1904:	xor	eax, eax
0x1906:	add	ebx, 0x7e
0x1909:	call	0x1560


0x19a4:	lea	rsi, [rip + 0x36ad]
0x19ab:	mov	rbx, rax
0x19ae:	mov	edx, 5
0x19b3:	xor	edi, edi
0x19b5:	call	0x13d0


0x19ba:	mov	rcx, rbx
0x19bd:	mov	rdx, rax
0x19c0:	xor	esi, esi
0x19c2:	mov	edi, 0x7d
0x19c7:	xor	eax, eax
0x19c9:	call	0x1560


0x19ce:	nop	


0x342c:	add	rsp, 0x20
0x3430:	mov	r11, qword ptr [rsp + 0x10]
0x3435:	cmp	r11, rax
0x3438:	ja	0x34a1


0x343a:	lea	rsi, [rax + 1]
0x343e:	lea	rax, [rip + 0x204cbb]
0x3445:	cmp	r12, rax
0x3448:	mov	qword ptr [rbx], rsi
0x344b:	je	0x345f


0x34a1:	mov	eax, dword ptr [rsp + 0x18]
0x34a5:	mov	dword ptr [r13], eax
0x34a9:	add	rsp, 0x28
0x34ad:	mov	rax, r12
0x34b0:	pop	rbx
0x34b1:	pop	rbp
0x34b2:	pop	r12
0x34b4:	pop	r13
0x34b6:	pop	r14
0x34b8:	pop	r15
0x34ba:	ret	


0x345f:	mov	rdi, rsi
0x3462:	mov	qword ptr [rsp + 0x10], rsi
0x3467:	call	0x42c0


0x344d:	mov	rdi, r12
0x3450:	mov	qword ptr [rsp + 0x10], rsi
0x3455:	call	0x1330


0x345a:	mov	rsi, qword ptr [rsp + 0x10]
0x345f:	mov	rdi, rsi
0x3462:	mov	qword ptr [rsp + 0x10], rsi
0x3467:	call	0x42c0


0x346c:	sub	rsp, 8
0x3470:	mov	qword ptr [rbx + 8], rax
0x3474:	mov	r8d, dword ptr [rbp]
0x3478:	push	qword ptr [rbp + 0x30]
0x347b:	push	qword ptr [rbp + 0x28]
0x347e:	mov	rcx, r14
0x3481:	push	r15
0x3483:	mov	r9d, dword ptr [rsp + 0x3c]
0x3488:	mov	rdi, rax
0x348b:	mov	rdx, qword ptr [rsp + 0x28]
0x3490:	mov	rsi, qword ptr [rsp + 0x30]
0x3495:	mov	r12, rax
0x3498:	call	0x2100


0x3bb2:	mov	rdi, qword ptr [rsp + 0x38]
0x3bb7:	xor	rdi, qword ptr fs:[0x28]
0x3bc0:	jne	0x3bcc


0x3bc2:	add	rsp, 0x48
0x3bc6:	ret	


0x3bcc:	call	0x1400


0x38ff:	mov	rcx, qword ptr [rsp + 0x38]
0x3904:	xor	rcx, qword ptr fs:[0x28]
0x390d:	jne	0x3919


0x390f:	add	rsp, 0x48
0x3913:	ret	


0x3919:	call	0x1400


0x398b:	mov	rdx, qword ptr [rsp + 0x38]
0x3990:	xor	rdx, qword ptr fs:[0x28]
0x3999:	jne	0x39a5


0x399b:	add	rsp, 0x48
0x399f:	ret	


0x39a5:	call	0x1400


0x3b1f:	mov	rcx, qword ptr [rsp + 0x38]
0x3b24:	xor	rcx, qword ptr fs:[0x28]
0x3b2d:	jne	0x3b39


0x3b2f:	add	rsp, 0x48
0x3b33:	ret	


0x3b39:	call	0x1400


0x3a4e:	mov	rsi, qword ptr [rsp + 0x38]
0x3a53:	xor	rsi, qword ptr fs:[0x28]
0x3a5c:	jne	0x3a63


0x3a5e:	add	rsp, 0x48
0x3a62:	ret	


0x3a63:	call	0x1400


0x349d:	add	rsp, 0x20
0x34a1:	mov	eax, dword ptr [rsp + 0x18]
0x34a5:	mov	dword ptr [r13], eax
0x34a9:	add	rsp, 0x28
0x34ad:	mov	rax, r12
0x34b0:	pop	rbx
0x34b1:	pop	rbp
0x34b2:	pop	r12
0x34b4:	pop	r13
0x34b6:	pop	r14
0x34b8:	pop	r15
0x34ba:	ret	


0x36ec:	lea	rsi, [rax + 1]
0x36f0:	mov	qword ptr [rsp + 0x48], rax
0x36f5:	add	rsp, 0x20
0x36f9:	mov	rdi, rsi
0x36fc:	mov	qword ptr [rsp + 0x18], rsi
0x3701:	call	0x42c0


0x3706:	mov	qword ptr [rsp + 0x10], rax
0x370b:	sub	rsp, 8
0x370f:	push	qword ptr [rbx + 0x30]
0x3712:	push	qword ptr [rbx + 0x28]
0x3715:	mov	r10, qword ptr [rsp + 0x38]
0x371a:	mov	r9d, ebp
0x371d:	mov	r8d, dword ptr [rbx]
0x3720:	mov	rcx, r15
0x3723:	mov	rdx, r14
0x3726:	mov	rdi, rax
0x3729:	push	r10
0x372b:	mov	rsi, qword ptr [rsp + 0x38]
0x3730:	call	0x2100


0x3735:	mov	eax, dword ptr [rsp + 0x2c]
0x3739:	add	rsp, 0x20
0x373d:	test	r12, r12
0x3740:	mov	dword ptr [r13], eax
0x3744:	je	0x374f


0x374f:	mov	rax, qword ptr [rsp + 0x10]
0x3754:	add	rsp, 0x38
0x3758:	pop	rbx
0x3759:	pop	rbp
0x375a:	pop	r12
0x375c:	pop	r13
0x375e:	pop	r14
0x3760:	pop	r15
0x3762:	ret	


0x3746:	mov	r11, qword ptr [rsp + 0x28]
0x374b:	mov	qword ptr [r12], r11
0x374f:	mov	rax, qword ptr [rsp + 0x10]
0x3754:	add	rsp, 0x38
0x3758:	pop	rbx
0x3759:	pop	rbp
0x375a:	pop	r12
0x375c:	pop	r13
0x375e:	pop	r14
0x3760:	pop	r15
0x3762:	ret	


0x3661:	mov	dword ptr [rbp], r12d
0x3665:	add	rsp, 0x38
0x3669:	pop	rbx
0x366a:	pop	rbp
0x366b:	pop	r12
0x366d:	pop	r13
0x366f:	pop	r14
0x3671:	pop	r15
0x3673:	ret	


0x4f2d:	add	rbx, 1
0x4f31:	cmp	rbp, rbx
0x4f34:	jne	0x4f20


0x4f20:	mov	rdx, r15
0x4f23:	mov	rsi, r14
0x4f26:	mov	edi, r13d
0x4f29:	call	qword ptr [r12 + rbx*8]






0x3ee0:	mov	r13, qword ptr [rbx + 0x10]
0x3ee4:	mov	r12, qword ptr [rbx + 8]
0x3ee8:	lea	rsi, [rip + 0x1af7]
0x3eef:	mov	rbx, qword ptr [rbx]
0x3ef2:	mov	edx, 5
0x3ef7:	xor	edi, edi
0x3ef9:	call	0x13d0


0x4020:	mov	r9, qword ptr [rbx + 0x10]
0x4024:	mov	r13, qword ptr [rbx + 0x30]
0x4028:	lea	rsi, [rip + 0x1b59]
0x402f:	mov	r12, qword ptr [rbx + 0x28]
0x4033:	mov	r15, qword ptr [rbx + 0x20]
0x4037:	mov	edx, 5
0x403c:	mov	r14, qword ptr [rbx + 0x18]
0x4040:	mov	r8, qword ptr [rbx + 8]
0x4044:	xor	edi, edi
0x4046:	mov	qword ptr [rsp + 8], r9
0x404b:	mov	rbx, qword ptr [rbx]
0x404e:	mov	qword ptr [rsp], r8
0x4052:	call	0x13d0


0x3e00:	mov	r10, qword ptr [rbx + 0x40]
0x3e04:	mov	r9, qword ptr [rbx + 0x38]
0x3e08:	lea	rsi, [rip + 0x1dd9]
0x3e0f:	mov	rax, qword ptr [rbx + 0x10]
0x3e13:	mov	r8, qword ptr [rbx + 8]
0x3e17:	mov	edx, 5
0x3e1c:	mov	r13, qword ptr [rbx + 0x30]
0x3e20:	mov	r12, qword ptr [rbx + 0x28]
0x3e24:	mov	r15, qword ptr [rbx + 0x20]
0x3e28:	mov	r14, qword ptr [rbx + 0x18]
0x3e2c:	mov	rbx, qword ptr [rbx]
0x3e2f:	mov	qword ptr [rsp + 0x18], r10
0x3e34:	mov	qword ptr [rsp + 0x10], r9
0x3e39:	mov	qword ptr [rsp], rax
0x3e3d:	mov	qword ptr [rsp + 8], r8
0x3e42:	xor	edi, edi
0x3e44:	call	0x13d0


0x3dc6:	add	rsp, 0x28
0x3dca:	pop	rbx
0x3dcb:	pop	rbp
0x3dcc:	pop	r12
0x3dce:	pop	r13
0x3dd0:	pop	r14
0x3dd2:	pop	r15
0x3dd4:	ret	


0x3f88:	mov	r15, qword ptr [rbx + 0x20]
0x3f8c:	lea	rsi, [rip + 0x1ba5]
0x3f93:	mov	edx, 5
0x3f98:	xor	edi, edi
0x3f9a:	mov	r14, qword ptr [rbx + 0x18]
0x3f9e:	mov	r13, qword ptr [rbx + 0x10]
0x3fa2:	mov	r12, qword ptr [rbx + 8]
0x3fa6:	mov	rbx, qword ptr [rbx]
0x3fa9:	call	0x13d0


0x3e98:	mov	r12, qword ptr [rbx + 8]
0x3e9c:	lea	rsi, [rip + 0x1b2c]
0x3ea3:	mov	rbx, qword ptr [rbx]
0x3ea6:	mov	edx, 5
0x3eab:	xor	edi, edi
0x3ead:	call	0x13d0


0x3f30:	lea	rsi, [rip + 0x1be1]
0x3f37:	mov	edx, 5
0x3f3c:	xor	edi, edi
0x3f3e:	mov	r14, qword ptr [rbx + 0x18]
0x3f42:	mov	r13, qword ptr [rbx + 0x10]
0x3f46:	mov	r12, qword ptr [rbx + 8]
0x3f4a:	mov	rbx, qword ptr [rbx]
0x3f4d:	call	0x13d0


0x3d50:	mov	r9, qword ptr [rbx + 0x38]
0x3d54:	mov	rax, qword ptr [rbx + 0x10]
0x3d58:	lea	rsi, [rip + 0x1e59]
0x3d5f:	mov	r8, qword ptr [rbx + 8]
0x3d63:	mov	edx, 5
0x3d68:	xor	edi, edi
0x3d6a:	mov	r13, qword ptr [rbx + 0x30]
0x3d6e:	mov	r12, qword ptr [rbx + 0x28]
0x3d72:	mov	qword ptr [rsp + 0x10], r9
0x3d77:	mov	r15, qword ptr [rbx + 0x20]
0x3d7b:	mov	r14, qword ptr [rbx + 0x18]
0x3d7f:	mov	qword ptr [rsp], rax
0x3d83:	mov	qword ptr [rsp + 8], r8
0x3d88:	mov	rbx, qword ptr [rbx]
0x3d8b:	call	0x13d0


0x3fb8:	mov	r8, qword ptr [rbx + 8]
0x3fbc:	mov	r12, qword ptr [rbx + 0x28]
0x3fc0:	lea	rsi, [rip + 0x1b99]
0x3fc7:	mov	r15, qword ptr [rbx + 0x20]
0x3fcb:	mov	r14, qword ptr [rbx + 0x18]
0x3fcf:	mov	edx, 5
0x3fd4:	mov	r13, qword ptr [rbx + 0x10]
0x3fd8:	xor	edi, edi
0x3fda:	mov	rbx, qword ptr [rbx]
0x3fdd:	mov	qword ptr [rsp], r8
0x3fe1:	call	0x13d0


0x3e58:	mov	rbx, qword ptr [rbx]
0x3e5b:	lea	rsi, [rip + 0x1b5d]
0x3e62:	mov	edx, 5
0x3e67:	xor	edi, edi
0x3e69:	call	0x13d0


0x3e6e:	add	rsp, 0x28
0x3e72:	mov	rcx, rbx
0x3e75:	mov	rdi, rbp
0x3e78:	pop	rbx
0x3e79:	pop	rbp
0x3e7a:	pop	r12
0x3e7c:	pop	r13
0x3e7e:	pop	r14
0x3e80:	pop	r15
0x3e82:	mov	rdx, rax
0x3e85:	mov	esi, 1
0x3e8a:	xor	eax, eax
0x3e8c:	jmp	0x15c0


0x3fe6:	sub	rsp, 8
0x3fea:	mov	r9, r13
0x3fed:	push	r12
0x3fef:	push	r15
0x3ff1:	push	r14
0x3ff3:	mov	r8, qword ptr [rsp + 0x20]
0x3ff8:	mov	rcx, rbx
0x3ffb:	mov	rdx, rax
0x3ffe:	mov	rdi, rbp
0x4001:	mov	esi, 1
0x4006:	xor	eax, eax
0x4008:	call	0x15c0


0x400d:	add	rsp, 0x20
0x4011:	add	rsp, 0x28
0x4015:	pop	rbx
0x4016:	pop	rbp
0x4017:	pop	r12
0x4019:	pop	r13
0x401b:	pop	r14
0x401d:	pop	r15
0x401f:	ret	


0x3d90:	sub	rsp, 8
0x3d94:	mov	r9, qword ptr [rsp + 0x18]
0x3d99:	mov	rdx, rax
0x3d9c:	mov	rcx, rbx
0x3d9f:	mov	esi, 1
0x3da4:	mov	rdi, rbp
0x3da7:	xor	eax, eax
0x3da9:	push	r9
0x3dab:	push	r13
0x3dad:	push	r12
0x3daf:	push	r15
0x3db1:	push	r14
0x3db3:	mov	r9, qword ptr [rsp + 0x30]
0x3db8:	mov	r8, qword ptr [rsp + 0x38]
0x3dbd:	call	0x15c0


0x3f52:	sub	rsp, 8
0x3f56:	push	r14
0x3f58:	mov	rdx, rax
0x3f5b:	mov	r9, r13
0x3f5e:	mov	r8, r12
0x3f61:	mov	rcx, rbx
0x3f64:	mov	rdi, rbp
0x3f67:	mov	esi, 1
0x3f6c:	xor	eax, eax
0x3f6e:	call	0x15c0


0x3f73:	pop	rax
0x3f74:	pop	rdx
0x3f75:	add	rsp, 0x28
0x3f79:	pop	rbx
0x3f7a:	pop	rbp
0x3f7b:	pop	r12
0x3f7d:	pop	r13
0x3f7f:	pop	r14
0x3f81:	pop	r15
0x3f83:	ret	


0x3eb2:	add	rsp, 0x28
0x3eb6:	mov	r8, r12
0x3eb9:	mov	rcx, rbx
0x3ebc:	mov	rdi, rbp
0x3ebf:	mov	rdx, rax
0x3ec2:	mov	esi, 1
0x3ec7:	pop	rbx
0x3ec8:	pop	rbp
0x3ec9:	pop	r12
0x3ecb:	pop	r13
0x3ecd:	pop	r14
0x3ecf:	pop	r15
0x3ed1:	xor	eax, eax
0x3ed3:	jmp	0x15c0


0x3fae:	push	r15
0x3fb0:	jmp	0x3f56


0x3f56:	push	r14
0x3f58:	mov	rdx, rax
0x3f5b:	mov	r9, r13
0x3f5e:	mov	r8, r12
0x3f61:	mov	rcx, rbx
0x3f64:	mov	rdi, rbp
0x3f67:	mov	esi, 1
0x3f6c:	xor	eax, eax
0x3f6e:	call	0x15c0


0x4057:	push	r13
0x4059:	push	r12
0x405b:	push	r15
0x405d:	push	r14
0x405f:	mov	r9, qword ptr [rsp + 0x28]
0x4064:	jmp	0x3ff3


0x3ff3:	mov	r8, qword ptr [rsp + 0x20]
0x3ff8:	mov	rcx, rbx
0x3ffb:	mov	rdx, rax
0x3ffe:	mov	rdi, rbp
0x4001:	mov	esi, 1
0x4006:	xor	eax, eax
0x4008:	call	0x15c0


0x3efe:	add	rsp, 0x28
0x3f02:	mov	r9, r13
0x3f05:	mov	r8, r12
0x3f08:	mov	rcx, rbx
0x3f0b:	mov	rdi, rbp
0x3f0e:	mov	rdx, rax
0x3f11:	pop	rbx
0x3f12:	pop	rbp
0x3f13:	pop	r12
0x3f15:	pop	r13
0x3f17:	pop	r14
0x3f19:	pop	r15
0x3f1b:	mov	esi, 1
0x3f20:	xor	eax, eax
0x3f22:	jmp	0x15c0


0x2ca0:	sub	rsp, 8
0x2ca4:	mov	rcx, rbp
0x2ca7:	mov	rsi, r13
0x2caa:	push	qword ptr [rsp + 0x68]
0x2cae:	push	qword ptr [rsp + 0x78]
0x2cb2:	mov	rdi, r14
0x2cb5:	push	0
0x2cb7:	mov	r9d, dword ptr [rsp + 0x98]
0x2cbf:	mov	r8d, dword ptr [rsp + 0x28]
0x2cc4:	mov	rdx, qword ptr [rsp + 0x30]
0x2cc9:	and	r9d, 0xfffffffd
0x2ccd:	call	0x2100


0x2cd2:	add	rsp, 0x20
0x2cd6:	mov	r15, rax
0x2cd9:	mov	rbx, qword ptr [rsp + 0xa8]
0x2ce1:	xor	rbx, qword ptr fs:[0x28]
0x2cea:	mov	rax, r15
0x2ced:	jne	0x32f3


0x2cf3:	add	rsp, 0xb8
0x2cfa:	pop	rbx
0x2cfb:	pop	rbp
0x2cfc:	pop	r12
0x2cfe:	pop	r13
0x2d00:	pop	r14
0x2d02:	pop	r15
0x2d04:	ret	


0x32f3:	call	0x1400


0x329d:	sub	rsp, 8
0x32a1:	mov	r8d, 5
0x32a7:	mov	rcx, r11
0x32aa:	push	qword ptr [rsp + 0x68]
0x32ae:	push	qword ptr [rsp + 0x78]
0x32b2:	mov	rdi, r14
0x32b5:	push	qword ptr [rsp + 0x38]
0x32b9:	mov	r9d, dword ptr [rsp + 0x98]
0x32c1:	mov	rdx, qword ptr [rsp + 0x30]
0x32c6:	mov	rsi, qword ptr [rsp + 0x70]
0x32cb:	call	0x2100


0x32d0:	add	rsp, 0x20
0x32d4:	mov	r15, rax
0x32d7:	jmp	0x2cd9


0x2cd9:	mov	rbx, qword ptr [rsp + 0xa8]
0x2ce1:	xor	rbx, qword ptr fs:[0x28]
0x2cea:	mov	rax, r15
0x2ced:	jne	0x32f3


0x1320:	push	qword ptr [rip + 0x206b2a]
0x1326:	jmp	qword ptr [rip + 0x206b2c]


0x132c:	nop	dword ptr [rax]


0x1336:	push	0
0x133b:	jmp	0x1320


0x1346:	push	1
0x134b:	jmp	0x1320


0x1356:	push	2
0x135b:	jmp	0x1320


0x1366:	push	3
0x136b:	jmp	0x1320


0x1376:	push	4
0x137b:	jmp	0x1320


0x1386:	push	5
0x138b:	jmp	0x1320


0x1396:	push	6
0x139b:	jmp	0x1320


0x13a6:	push	7
0x13ab:	jmp	0x1320


0x13b6:	push	8
0x13bb:	jmp	0x1320


0x13c6:	push	9
0x13cb:	jmp	0x1320


0x13d6:	push	0xa
0x13db:	jmp	0x1320


0x13e6:	push	0xb
0x13eb:	jmp	0x1320


0x13f6:	push	0xc
0x13fb:	jmp	0x1320


0x1406:	push	0xd
0x140b:	jmp	0x1320


0x1416:	push	0xe
0x141b:	jmp	0x1320


0x1426:	push	0xf
0x142b:	jmp	0x1320


0x1436:	push	0x10
0x143b:	jmp	0x1320


0x1446:	push	0x11
0x144b:	jmp	0x1320


0x1456:	push	0x12
0x145b:	jmp	0x1320


0x1466:	push	0x13
0x146b:	jmp	0x1320


0x1476:	push	0x14
0x147b:	jmp	0x1320


0x1486:	push	0x15
0x148b:	jmp	0x1320


0x1490:	jmp	qword ptr [rip + 0x206a7a]




0x1496:	push	0x16
0x149b:	jmp	0x1320


0x14a6:	push	0x17
0x14ab:	jmp	0x1320


0x14b6:	push	0x18
0x14bb:	jmp	0x1320


0x14c6:	push	0x19
0x14cb:	jmp	0x1320


0x14d6:	push	0x1a
0x14db:	jmp	0x1320


0x14e6:	push	0x1b
0x14eb:	jmp	0x1320


0x14f6:	push	0x1c
0x14fb:	jmp	0x1320


0x1506:	push	0x1d
0x150b:	jmp	0x1320


0x1516:	push	0x1e
0x151b:	jmp	0x1320


0x1526:	push	0x1f
0x152b:	jmp	0x1320


0x1536:	push	0x20
0x153b:	jmp	0x1320


0x1546:	push	0x21
0x154b:	jmp	0x1320


0x1556:	push	0x22
0x155b:	jmp	0x1320


0x1566:	push	0x23
0x156b:	jmp	0x1320


0x1576:	push	0x24
0x157b:	jmp	0x1320


0x1586:	push	0x25
0x158b:	jmp	0x1320


0x1596:	push	0x26
0x159b:	jmp	0x1320


0x15a6:	push	0x27
0x15ab:	jmp	0x1320


0x15b6:	push	0x28
0x15bb:	jmp	0x1320


0x15c6:	push	0x29
0x15cb:	jmp	0x1320


0x15d0:	jmp	qword ptr [rip + 0x2069da]




0x15d6:	push	0x2a
0x15db:	jmp	0x1320


0x15e0:	jmp	qword ptr [rip + 0x2069d2]




0x15e6:	push	0x2b
0x15eb:	jmp	0x1320


0x15f0:	jmp	qword ptr [rip + 0x2069ca]




0x15f6:	push	0x2c
0x15fb:	jmp	0x1320


0x19fa:	hlt	


0x19fb:	nop	dword ptr [rax + rax]


0x1a32:	nop	dword ptr [rax]
0x1a36:	nop	word ptr cs:[rax + rax]


0x1a82:	nop	dword ptr [rax]
0x1a86:	nop	word ptr cs:[rax + rax]


0x1aca:	nop	word ptr [rax + rax]


0x1ada:	nop	word ptr [rax + rax]


0x1e9a:	nop	word ptr [rax + rax]


0x1ea8:	nop	dword ptr [rax + rax]


0x1eb8:	nop	dword ptr [rax + rax]


0x1f64:	nop	word ptr cs:[rax + rax]
0x1f6e:	nop	


0x200f:	nop	


0x20f7:	nop	word ptr [rax + rax]


0x2193:	mov	byte ptr [rsp + 0xe], 1
0x2198:	mov	byte ptr [rsp + 0x7c], 0
0x219d:	xor	r12d, r12d
0x21a0:	mov	qword ptr [rsp + 0x50], 0
0x21a9:	mov	byte ptr [rsp + 0xf], 1
0x21ae:	mov	byte ptr [rsp + 0xd], 0
0x21b3:	lea	rax, [rip + 0x3333]
0x21ba:	mov	qword ptr [rsp + 0x18], 1
0x21c3:	xor	r15d, r15d
0x21c6:	mov	dword ptr [rsp + 8], 2
0x21ce:	mov	qword ptr [rsp + 0x48], rax
0x21d3:	xor	r11d, r11d
0x21d6:	mov	rax, rbp
0x21d9:	mov	r8d, r12d
0x21dc:	mov	rbp, r11
0x21df:	mov	r11, rax
0x21e2:	nop	word ptr [rax + rax]
0x21e8:	cmp	r11, rbp
0x21eb:	setne	r12b
0x21ef:	cmp	r11, -1
0x21f3:	jne	0x2202


0x21f5:	mov	rax, qword ptr [rsp + 0x10]
0x21fa:	cmp	byte ptr [rax + rbp], 0
0x21fe:	setne	r12b
0x2202:	test	r12b, r12b
0x2205:	je	0x2860


0x2202:	test	r12b, r12b
0x2205:	je	0x2860


0x2860:	cmp	dword ptr [rsp + 8], 2
0x2865:	movzx	ebx, byte ptr [rsp + 0xf]
0x286a:	mov	r12d, r8d
0x286d:	mov	rbp, r11
0x2870:	sete	dl
0x2873:	mov	eax, ebx
0x2875:	test	r15, r15
0x2878:	sete	cl
0x287b:	and	eax, edx
0x287d:	and	al, cl
0x287f:	jne	0x32e6


0x220b:	cmp	dword ptr [rsp + 8], 2
0x2210:	mov	rdi, qword ptr [rsp + 0x10]
0x2215:	lea	r9, [rdi + rbp]
0x2219:	setne	al
0x221c:	and	al, byte ptr [rsp + 0xd]
0x2220:	mov	r10d, eax
0x2223:	je	0x22d0


0x2885:	mov	eax, ebx
0x2887:	xor	eax, 1
0x288a:	and	dl, al
0x288c:	je	0x31fc


0x32e6:	mov	dword ptr [rsp + 8], 2
0x32ee:	jmp	0x2c89


0x22d0:	movzx	ebx, byte ptr [r9]
0x22d4:	cmp	bl, 0x7e
0x22d7:	ja	0x25f8


0x2229:	mov	rax, qword ptr [rsp + 0x18]
0x222e:	test	rax, rax
0x2231:	je	0x2660


0x31fc:	mov	rbx, qword ptr [rsp + 0x48]
0x3201:	test	rbx, rbx
0x3204:	je	0x3232


0x2892:	cmp	byte ptr [rsp + 0x7c], 0
0x2897:	je	0x31fa


0x2c89:	cmp	byte ptr [rsp + 0xd], 0
0x2c8e:	je	0x2ca0


0x22dd:	lea	rcx, [rip + 0x3288]
0x22e4:	movzx	edx, bl
0x22e7:	movsxd	rax, dword ptr [rcx + rdx*4]
0x22eb:	add	rax, rcx
0x22ee:	jmp	rax


0x25f8:	cmp	qword ptr [rsp + 0x58], 1
0x25fe:	jne	0x29a8


0x2660:	movzx	ebx, byte ptr [r9]
0x2664:	cmp	bl, 0x7e
0x2667:	ja	0x25f0


0x2237:	cmp	r11, -1
0x223b:	lea	rbx, [rbp + rax]
0x2240:	jne	0x2270


0x3232:	cmp	r13, r15
0x3235:	jbe	0x2cd9


0x3206:	test	al, al
0x3208:	je	0x3232


0x31fa:	mov	eax, edx
0x31fc:	mov	rbx, qword ptr [rsp + 0x48]
0x3201:	test	rbx, rbx
0x3204:	je	0x3232


0x289d:	cmp	byte ptr [rsp + 0xe], 0
0x28a2:	jne	0x329d


0x2c90:	test	al, al
0x2c92:	mov	eax, 4
0x2c97:	cmove	eax, dword ptr [rsp + 8]
0x2c9c:	mov	dword ptr [rsp + 8], eax


0x2604:	mov	qword ptr [rsp + 0x38], r11
0x2609:	mov	byte ptr [rsp + 0x30], r8b
0x260e:	mov	byte ptr [rsp + 0x28], r10b
0x2613:	call	0x15f0


0x29a8:	lea	rax, [rsp + 0xa0]
0x29b0:	cmp	r11, -1
0x29b4:	mov	qword ptr [rsp + 0xa0], 0
0x29c0:	mov	qword ptr [rsp + 0x28], rax
0x29c5:	jne	0x29f4


0x2669:	lea	rcx, [rip + 0x30f8]
0x2670:	movzx	edx, bl
0x2673:	movsxd	rax, dword ptr [rcx + rdx*4]
0x2677:	add	rax, rcx
0x267a:	jmp	rax


0x25f0:	xor	r10d, r10d
0x25f3:	nop	dword ptr [rax + rax]
0x25f8:	cmp	qword ptr [rsp + 0x58], 1
0x25fe:	jne	0x29a8


0x2242:	cmp	rax, 1
0x2246:	jbe	0x2270


0x2270:	cmp	rbx, r11
0x2273:	mov	byte ptr [rsp + 0x28], r10b
0x2278:	ja	0x2830


0x323b:	mov	byte ptr [r14 + r15], 0
0x3240:	jmp	0x2cd9


0x320a:	movzx	ecx, byte ptr [rbx]
0x320d:	mov	rax, rbx
0x3210:	test	cl, cl
0x3212:	je	0x3232


0x28a8:	test	r13, r13
0x28ab:	sete	al
0x28ae:	cmp	qword ptr [rsp + 0x50], 0
0x28b4:	setne	dl
0x28b7:	and	al, dl
0x28b9:	je	0x32dc


0x29c7:	mov	rdi, qword ptr [rsp + 0x10]
0x29cc:	mov	byte ptr [rsp + 0x40], r8b
0x29d1:	mov	byte ptr [rsp + 0x38], r10b
0x29d6:	mov	qword ptr [rsp + 0x30], r9
0x29db:	call	0x13f0


0x29f4:	lea	rax, [rsp + 0x9c]
0x29fc:	xor	ecx, ecx
0x29fe:	mov	byte ptr [rsp + 0x7e], bl
0x2a02:	mov	byte ptr [rsp + 0x7d], r8b
0x2a07:	mov	rbx, rcx
0x2a0a:	mov	qword ptr [rsp + 0x88], r9
0x2a12:	mov	qword ptr [rsp + 0x38], rax
0x2a17:	mov	byte ptr [rsp + 0x7f], r10b
0x2a1c:	mov	qword ptr [rsp + 0x80], r15
0x2a24:	mov	qword ptr [rsp + 0x40], r14
0x2a29:	mov	qword ptr [rsp + 0x70], r13
0x2a2e:	mov	qword ptr [rsp + 0x30], r11
0x2a33:	mov	rax, qword ptr [rsp + 0x10]
0x2a38:	lea	r14, [rbp + rbx]
0x2a3d:	mov	rdx, qword ptr [rsp + 0x30]
0x2a42:	mov	rcx, qword ptr [rsp + 0x28]
0x2a47:	mov	rdi, qword ptr [rsp + 0x38]
0x2a4c:	lea	r13, [rax + r14]
0x2a50:	sub	rdx, r14
0x2a53:	mov	rsi, r13
0x2a56:	call	0x4c10


0x2248:	mov	byte ptr [rsp + 0x38], r8b
0x224d:	mov	byte ptr [rsp + 0x30], r10b
0x2252:	mov	qword ptr [rsp + 0x28], r9
0x2257:	call	0x13f0


0x227e:	mov	rdx, qword ptr [rsp + 0x18]
0x2283:	mov	rsi, qword ptr [rsp + 0x48]
0x2288:	mov	rdi, r9
0x228b:	mov	qword ptr [rsp + 0x40], r11
0x2290:	mov	byte ptr [rsp + 0x38], r8b
0x2295:	mov	qword ptr [rsp + 0x30], r9
0x229a:	call	0x1490


0x2830:	xor	r10d, r10d
0x2833:	jmp	0x22d0


0x3214:	mov	rdx, r15
0x3217:	sub	rax, r15
0x321a:	cmp	r13, rdx
0x321d:	jbe	0x3223


0x32dc:	movzx	eax, byte ptr [rsp + 0x7c]
0x32e1:	jmp	0x31fc


0x28bf:	mov	r13, qword ptr [rsp + 0x50]
0x28c4:	lea	rbx, [rip + 0x2c22]
0x28cb:	mov	byte ptr [r14], 0x27
0x28cf:	mov	dword ptr [rsp + 8], 2
0x28d7:	mov	r15d, 1
0x28dd:	mov	qword ptr [rsp + 0x18], 1
0x28e6:	mov	byte ptr [rsp + 0xf], 0
0x28eb:	mov	qword ptr [rsp + 0x48], rbx
0x28f0:	mov	byte ptr [rsp + 0x7c], al
0x28f4:	jmp	0x21d3


0x3223:	add	rdx, 1
0x3227:	movzx	ecx, byte ptr [rax + rdx]
0x322b:	test	cl, cl
0x322d:	jne	0x321a


0x321f:	mov	byte ptr [r14 + rdx], cl
0x3223:	add	rdx, 1
0x3227:	movzx	ecx, byte ptr [rax + rdx]
0x322b:	test	cl, cl
0x322d:	jne	0x321a


0x21d3:	xor	r11d, r11d
0x21d6:	mov	rax, rbp
0x21d9:	mov	r8d, r12d
0x21dc:	mov	rbp, r11
0x21df:	mov	r11, rax
0x21e2:	nop	word ptr [rax + rax]
0x21e8:	cmp	r11, rbp
0x21eb:	setne	r12b
0x21ef:	cmp	r11, -1
0x21f3:	jne	0x2202


0x322f:	mov	r15, rdx
0x3232:	cmp	r13, r15
0x3235:	jbe	0x2cd9


0x321a:	cmp	r13, rdx
0x321d:	jbe	0x3223


0x229f:	test	eax, eax
0x22a1:	mov	r9, qword ptr [rsp + 0x30]
0x22a6:	movzx	r8d, byte ptr [rsp + 0x38]
0x22ac:	mov	r11, qword ptr [rsp + 0x40]
0x22b1:	jne	0x2830


0x22b7:	cmp	byte ptr [rsp + 0xf], 0
0x22bc:	movzx	r10d, byte ptr [rsp + 0x28]
0x22c2:	jne	0x3245


0x3245:	cmp	dword ptr [rsp + 8], 2
0x324a:	movzx	ebx, byte ptr [rsp + 0xf]
0x324f:	mov	rbp, r11
0x3252:	sete	al
0x3255:	mov	byte ptr [rsp + 0xd], bl
0x3259:	jmp	0x2c89


0x2a5b:	test	rax, rax
0x2a5e:	mov	r15, rax
0x2a61:	je	0x2ab1


0x2ab1:	mov	edx, r12d
0x2ab4:	mov	rdi, rbx
0x2ab7:	movzx	r8d, byte ptr [rsp + 0x7d]
0x2abd:	xor	edx, 1
0x2ac0:	movzx	ebx, byte ptr [rsp + 0x7e]
0x2ac5:	movzx	r10d, byte ptr [rsp + 0x7f]
0x2acb:	and	dl, byte ptr [rsp + 0xd]
0x2acf:	mov	r15, qword ptr [rsp + 0x80]
0x2ad7:	mov	r14, qword ptr [rsp + 0x40]
0x2adc:	mov	r13, qword ptr [rsp + 0x70]
0x2ae1:	mov	r11, qword ptr [rsp + 0x30]
0x2ae6:	cmp	rdi, 1
0x2aea:	jbe	0x30eb


0x2a63:	cmp	rax, -1
0x2a67:	je	0x3085


0x30eb:	mov	eax, edx
0x30ed:	jmp	0x2647


0x2af0:	mov	rcx, rdi
0x2af3:	xor	esi, esi
0x2af5:	movzx	r9d, byte ptr [rsp + 0xf]
0x2afb:	add	rcx, rbp
0x2afe:	mov	rdi, qword ptr [rsp + 0x10]
0x2b03:	jmp	0x2bbe


0x3085:	mov	rdi, rbx
0x3088:	movzx	r8d, byte ptr [rsp + 0x7d]
0x308e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x3093:	movzx	r10d, byte ptr [rsp + 0x7f]
0x3099:	mov	r15, qword ptr [rsp + 0x80]
0x30a1:	xor	r12d, r12d
0x30a4:	mov	r14, qword ptr [rsp + 0x40]
0x30a9:	mov	r13, qword ptr [rsp + 0x70]
0x30ae:	mov	r11, qword ptr [rsp + 0x30]
0x30b3:	movzx	edx, byte ptr [rsp + 0xd]
0x30b8:	jmp	0x2ae6


0x2a6d:	cmp	rax, -2
0x2a71:	je	0x3011


0x2647:	test	al, al
0x2649:	jne	0x2fe1


0x2bbe:	test	dl, dl
0x2bc0:	jne	0x2b10


0x2ae6:	cmp	rdi, 1
0x2aea:	jbe	0x30eb


0x3011:	mov	r11, qword ptr [rsp + 0x30]
0x3016:	mov	rsi, r14
0x3019:	mov	rcx, r13
0x301c:	mov	rax, rbx
0x301f:	mov	rdi, rbx
0x3022:	movzx	r8d, byte ptr [rsp + 0x7d]
0x3028:	movzx	ebx, byte ptr [rsp + 0x7e]
0x302d:	mov	r9, qword ptr [rsp + 0x88]
0x3035:	cmp	rsi, r11
0x3038:	movzx	r10d, byte ptr [rsp + 0x7f]
0x303e:	mov	r15, qword ptr [rsp + 0x80]
0x3046:	mov	r14, qword ptr [rsp + 0x40]
0x304b:	mov	r13, qword ptr [rsp + 0x70]
0x3050:	jae	0x3078


0x2a77:	cmp	dword ptr [rsp + 8], 2
0x2a7c:	sete	al
0x2a7f:	and	al, byte ptr [rsp + 0xf]
0x2a83:	jne	0x2c20


0x264f:	cmp	dword ptr [rsp + 8], 2
0x2654:	sete	dl
0x2657:	jmp	0x2328


0x2fe1:	movzx	edx, byte ptr [rsp + 0xd]
0x2fe6:	xor	r12d, r12d
0x2fe9:	jmp	0x2af0


0x2bc6:	mov	eax, esi
0x2bc8:	xor	eax, 1
0x2bcb:	and	eax, r8d
0x2bce:	test	r10b, r10b
0x2bd1:	je	0x2be1


0x2b10:	cmp	dword ptr [rsp + 8], 2
0x2b15:	sete	al
0x2b18:	test	r9b, r9b
0x2b1b:	jne	0x2fd0


0x3052:	cmp	byte ptr [rcx], 0
0x3055:	jne	0x3067


0x3078:	movzx	edx, byte ptr [rsp + 0xd]
0x307d:	xor	r12d, r12d
0x3080:	jmp	0x2ae6


0x2a89:	mov	edi, dword ptr [rsp + 0x9c]
0x2a90:	call	0x15e0


0x2c20:	cmp	r15, 1
0x2c24:	je	0x2a89


0x2328:	cmp	byte ptr [rsp + 0xd], 1
0x232d:	jne	0x2442


0x2be1:	add	rbp, 1
0x2be5:	cmp	rbp, rcx
0x2be8:	jae	0x236c


0x2bd3:	cmp	r13, r15
0x2bd6:	jbe	0x2bdd


0x2b21:	mov	esi, r8d
0x2b24:	xor	esi, 1
0x2b27:	and	al, sil
0x2b2a:	je	0x2b5b


0x2fd0:	movzx	ebx, byte ptr [rsp + 0xf]
0x2fd5:	mov	rbp, r11
0x2fd8:	mov	byte ptr [rsp + 0xd], bl
0x2fdc:	jmp	0x2c89


0x3057:	jmp	0x3078


0x3067:	add	rax, 1
0x306b:	lea	rdx, [rbp + rax]
0x3070:	cmp	r11, rdx
0x3073:	ja	0x3060


0x2c2a:	mov	rdi, qword ptr [rsp + 0x10]
0x2c2f:	lea	rcx, [rdi + r15]
0x2c33:	lea	rdx, [rdi + r14 + 1]
0x2c38:	lea	r8, [rcx + r14]
0x2c3c:	jmp	0x2c4d


0x2333:	test	dl, dl
0x2335:	jne	0x2442


0x2442:	cmp	byte ptr [rsp + 0xf], 0
0x2447:	jne	0x233b


0x2bee:	test	al, al
0x2bf0:	je	0x2fee


0x236c:	test	al, al
0x236e:	je	0x2390


0x2bdd:	add	r15, 1
0x2be1:	add	rbp, 1
0x2be5:	cmp	rbp, rcx
0x2be8:	jae	0x236c


0x2bd8:	mov	byte ptr [r14 + r15], 0x5c
0x2bdd:	add	r15, 1
0x2be1:	add	rbp, 1
0x2be5:	cmp	rbp, rcx
0x2be8:	jae	0x236c


0x2b5b:	cmp	r13, r15
0x2b5e:	jbe	0x2b65


0x2b2c:	cmp	r13, r15
0x2b2f:	jbe	0x2b36


0x3075:	mov	rdi, rax
0x3078:	movzx	edx, byte ptr [rsp + 0xd]
0x307d:	xor	r12d, r12d
0x3080:	jmp	0x2ae6


0x3060:	cmp	byte ptr [r9 + rax], 0
0x3065:	je	0x3075


0x2c4d:	movzx	ecx, byte ptr [rdx]
0x2c50:	sub	ecx, 0x5b
0x2c53:	cmp	cl, 0x21
0x2c56:	ja	0x2c40


0x233b:	mov	rsi, qword ptr [rsp + 0x20]
0x2340:	test	rsi, rsi
0x2343:	je	0x2359


0x244d:	jmp	0x2359


0x2fee:	xor	r10d, r10d
0x2ff1:	jmp	0x2bad


0x2bf6:	cmp	r13, r15
0x2bf9:	jbe	0x2c00


0x2390:	cmp	r15, r13
0x2393:	jae	0x2399


0x2370:	cmp	r13, r15
0x2373:	jbe	0x237a


0x2b65:	lea	rax, [r15 + 1]
0x2b69:	cmp	r13, rax
0x2b6c:	jbe	0x2b7b


0x2b60:	mov	byte ptr [r14 + r15], 0x5c
0x2b65:	lea	rax, [r15 + 1]
0x2b69:	cmp	r13, rax
0x2b6c:	jbe	0x2b7b


0x2b36:	lea	rsi, [r15 + 1]
0x2b3a:	cmp	r13, rsi
0x2b3d:	jbe	0x2b45


0x2b31:	mov	byte ptr [r14 + r15], 0x27
0x2b36:	lea	rsi, [r15 + 1]
0x2b3a:	cmp	r13, rsi
0x2b3d:	jbe	0x2b45


0x2c58:	mov	esi, 1
0x2c5d:	shl	rsi, cl
0x2c60:	mov	rcx, rsi
0x2c63:	movabs	rsi, 0x20000002b
0x2c6d:	test	rcx, rsi
0x2c70:	je	0x2c40


0x2c40:	add	rdx, 1
0x2c44:	cmp	r8, rdx
0x2c47:	je	0x2a89


0x2359:	test	r10b, r10b
0x235c:	jne	0x24a3


0x2345:	mov	edx, ebx
0x2347:	shr	dl, 5
0x234a:	movzx	edx, dl
0x234d:	mov	edx, dword ptr [rsi + rdx*4]
0x2350:	bt	edx, ebx
0x2353:	jb	0x24a3


0x2bad:	cmp	r13, r15
0x2bb0:	jbe	0x2bb6


0x2c00:	lea	rax, [r15 + 1]
0x2c04:	cmp	r13, rax
0x2c07:	jbe	0x2c0f


0x2bfb:	mov	byte ptr [r14 + r15], 0x27
0x2c00:	lea	rax, [r15 + 1]
0x2c04:	cmp	r13, rax
0x2c07:	jbe	0x2c0f


0x2395:	mov	byte ptr [r14 + r15], bl
0x2399:	movzx	edi, byte ptr [rsp + 0xe]
0x239e:	add	r15, 1
0x23a2:	mov	eax, 0
0x23a7:	test	r12b, r12b
0x23aa:	cmove	edi, eax
0x23ad:	mov	byte ptr [rsp + 0xe], dil
0x23b2:	jmp	0x21e8


0x2399:	movzx	edi, byte ptr [rsp + 0xe]
0x239e:	add	r15, 1
0x23a2:	mov	eax, 0
0x23a7:	test	r12b, r12b
0x23aa:	cmove	edi, eax
0x23ad:	mov	byte ptr [rsp + 0xe], dil
0x23b2:	jmp	0x21e8


0x237a:	lea	rax, [r15 + 1]
0x237e:	cmp	r13, rax
0x2381:	jbe	0x2389


0x2375:	mov	byte ptr [r14 + r15], 0x27
0x237a:	lea	rax, [r15 + 1]
0x237e:	cmp	r13, rax
0x2381:	jbe	0x2389


0x2b7b:	lea	rax, [r15 + 2]
0x2b7f:	cmp	r13, rax
0x2b82:	jbe	0x2b94


0x2b6e:	mov	eax, ebx
0x2b70:	shr	al, 6
0x2b73:	add	eax, 0x30
0x2b76:	mov	byte ptr [r14 + r15 + 1], al
0x2b7b:	lea	rax, [r15 + 2]
0x2b7f:	cmp	r13, rax
0x2b82:	jbe	0x2b94


0x2b45:	lea	rsi, [r15 + 2]
0x2b49:	cmp	r13, rsi
0x2b4c:	jbe	0x2b54


0x2b3f:	mov	byte ptr [r14 + r15 + 1], 0x24
0x2b45:	lea	rsi, [r15 + 2]
0x2b49:	cmp	r13, rsi
0x2b4c:	jbe	0x2b54


0x2c72:	mov	r14, qword ptr [rsp + 0x40]
0x2c77:	mov	r13, qword ptr [rsp + 0x70]
0x2c7c:	mov	rbp, qword ptr [rsp + 0x30]
0x2c81:	mov	dword ptr [rsp + 8], 2
0x2c89:	cmp	byte ptr [rsp + 0xd], 0
0x2c8e:	je	0x2ca0


0x2362:	xor	eax, 1
0x2365:	add	rbp, 1
0x2369:	and	eax, r8d
0x236c:	test	al, al
0x236e:	je	0x2390


0x24a3:	cmp	dword ptr [rsp + 8], 2
0x24a8:	sete	dl
0x24ab:	cmp	byte ptr [rsp + 0xf], 0
0x24b0:	mov	eax, edx
0x24b2:	jne	0x2d08


0x2bb6:	movzx	ebx, byte ptr [rdi + rbp]
0x2bba:	add	r15, 1
0x2bbe:	test	dl, dl
0x2bc0:	jne	0x2b10


0x2bb2:	mov	byte ptr [r14 + r15], bl
0x2bb6:	movzx	ebx, byte ptr [rdi + rbp]
0x2bba:	add	r15, 1
0x2bbe:	test	dl, dl
0x2bc0:	jne	0x2b10


0x2c0f:	add	r15, 2
0x2c13:	xor	r10d, r10d
0x2c16:	xor	r8d, r8d
0x2c19:	jmp	0x2bad


0x2c09:	mov	byte ptr [r14 + r15 + 1], 0x27
0x2c0f:	add	r15, 2
0x2c13:	xor	r10d, r10d
0x2c16:	xor	r8d, r8d
0x2c19:	jmp	0x2bad


0x21e8:	cmp	r11, rbp
0x21eb:	setne	r12b
0x21ef:	cmp	r11, -1
0x21f3:	jne	0x2202


0x2389:	add	r15, 2
0x238d:	xor	r8d, r8d
0x2390:	cmp	r15, r13
0x2393:	jae	0x2399


0x2383:	mov	byte ptr [r14 + r15 + 1], 0x27
0x2389:	add	r15, 2
0x238d:	xor	r8d, r8d
0x2390:	cmp	r15, r13
0x2393:	jae	0x2399


0x2b94:	and	ebx, 7
0x2b97:	add	rbp, 1
0x2b9b:	add	r15, 3
0x2b9f:	add	ebx, 0x30
0x2ba2:	cmp	rbp, rcx
0x2ba5:	jae	0x2390


0x2b84:	mov	eax, ebx
0x2b86:	shr	al, 3
0x2b89:	and	eax, 7
0x2b8c:	add	eax, 0x30
0x2b8f:	mov	byte ptr [r14 + r15 + 2], al
0x2b94:	and	ebx, 7
0x2b97:	add	rbp, 1
0x2b9b:	add	r15, 3
0x2b9f:	add	ebx, 0x30
0x2ba2:	cmp	rbp, rcx
0x2ba5:	jae	0x2390


0x2b54:	add	r15, 3
0x2b58:	mov	r8d, eax
0x2b5b:	cmp	r13, r15
0x2b5e:	jbe	0x2b65


0x2b4e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2b54:	add	r15, 3
0x2b58:	mov	r8d, eax
0x2b5b:	cmp	r13, r15
0x2b5e:	jbe	0x2b65


0x24b8:	mov	eax, r8d
0x24bb:	xor	eax, 1
0x24be:	and	al, dl
0x24c0:	je	0x24f1


0x2d08:	mov	rbp, r11
0x2d0b:	jmp	0x2c89


0x2bab:	mov	esi, edx
0x2bad:	cmp	r13, r15
0x2bb0:	jbe	0x2bb6


0x24f1:	cmp	r13, r15
0x24f4:	jbe	0x24fb


0x24c2:	cmp	r13, r15
0x24c5:	jbe	0x24cc


0x24fb:	add	r15, 1
0x24ff:	add	rbp, 1
0x2503:	jmp	0x2390


0x24f6:	mov	byte ptr [r14 + r15], 0x5c
0x24fb:	add	r15, 1
0x24ff:	add	rbp, 1
0x2503:	jmp	0x2390


0x24cc:	lea	rdx, [r15 + 1]
0x24d0:	cmp	r13, rdx
0x24d3:	jbe	0x24db


0x24c7:	mov	byte ptr [r14 + r15], 0x27
0x24cc:	lea	rdx, [r15 + 1]
0x24d0:	cmp	r13, rdx
0x24d3:	jbe	0x24db


0x24db:	lea	rdx, [r15 + 2]
0x24df:	cmp	r13, rdx
0x24e2:	jbe	0x24ea


0x24d5:	mov	byte ptr [r14 + r15 + 1], 0x24
0x24db:	lea	rdx, [r15 + 2]
0x24df:	cmp	r13, rdx
0x24e2:	jbe	0x24ea


0x24ea:	add	r15, 3
0x24ee:	mov	r8d, eax
0x24f1:	cmp	r13, r15
0x24f4:	jbe	0x24fb


0x24e4:	mov	byte ptr [r14 + r15 + 2], 0x27
0x24ea:	add	r15, 3
0x24ee:	mov	r8d, eax
0x24f1:	cmp	r13, r15
0x24f4:	jbe	0x24fb


0x2a95:	mov	rdi, qword ptr [rsp + 0x28]
0x2a9a:	test	eax, eax
0x2a9c:	mov	eax, 0
0x2aa1:	cmove	r12d, eax
0x2aa5:	add	rbx, r15
0x2aa8:	call	0x15d0


0x2aad:	test	eax, eax
0x2aaf:	je	0x2a33


0x2a33:	mov	rax, qword ptr [rsp + 0x10]
0x2a38:	lea	r14, [rbp + rbx]
0x2a3d:	mov	rdx, qword ptr [rsp + 0x30]
0x2a42:	mov	rcx, qword ptr [rsp + 0x28]
0x2a47:	mov	rdi, qword ptr [rsp + 0x38]
0x2a4c:	lea	r13, [rax + r14]
0x2a50:	sub	rdx, r14
0x2a53:	mov	rsi, r13
0x2a56:	call	0x4c10


0x225c:	movzx	r8d, byte ptr [rsp + 0x38]
0x2262:	movzx	r10d, byte ptr [rsp + 0x30]
0x2268:	mov	r11, rax
0x226b:	mov	r9, qword ptr [rsp + 0x28]
0x2270:	cmp	rbx, r11
0x2273:	mov	byte ptr [rsp + 0x28], r10b
0x2278:	ja	0x2830


0x29e0:	movzx	r8d, byte ptr [rsp + 0x40]
0x29e6:	movzx	r10d, byte ptr [rsp + 0x38]
0x29ec:	mov	r11, rax
0x29ef:	mov	r9, qword ptr [rsp + 0x30]
0x29f4:	lea	rax, [rsp + 0x9c]
0x29fc:	xor	ecx, ecx
0x29fe:	mov	byte ptr [rsp + 0x7e], bl
0x2a02:	mov	byte ptr [rsp + 0x7d], r8b
0x2a07:	mov	rbx, rcx
0x2a0a:	mov	qword ptr [rsp + 0x88], r9
0x2a12:	mov	qword ptr [rsp + 0x38], rax
0x2a17:	mov	byte ptr [rsp + 0x7f], r10b
0x2a1c:	mov	qword ptr [rsp + 0x80], r15
0x2a24:	mov	qword ptr [rsp + 0x40], r14
0x2a29:	mov	qword ptr [rsp + 0x70], r13
0x2a2e:	mov	qword ptr [rsp + 0x30], r11
0x2a33:	mov	rax, qword ptr [rsp + 0x10]
0x2a38:	lea	r14, [rbp + rbx]
0x2a3d:	mov	rdx, qword ptr [rsp + 0x30]
0x2a42:	mov	rcx, qword ptr [rsp + 0x28]
0x2a47:	mov	rdi, qword ptr [rsp + 0x38]
0x2a4c:	lea	r13, [rax + r14]
0x2a50:	sub	rdx, r14
0x2a53:	mov	rsi, r13
0x2a56:	call	0x4c10


0x2618:	mov	rcx, qword ptr [rax]
0x261b:	movzx	edx, bl
0x261e:	movzx	r10d, byte ptr [rsp + 0x28]
0x2624:	movzx	r8d, byte ptr [rsp + 0x30]
0x262a:	mov	r11, qword ptr [rsp + 0x38]
0x262f:	mov	edi, 1
0x2634:	movzx	eax, word ptr [rcx + rdx*2]
0x2638:	and	ax, 0x4000
0x263c:	setne	r12b
0x2640:	sete	al
0x2643:	and	al, byte ptr [rsp + 0xd]
0x2647:	test	al, al
0x2649:	jne	0x2fe1


0x22f0:	xor	r10d, r10d
0x22f3:	cmp	r11, 1
0x22f7:	setne	al
0x22fa:	cmp	r11, -1
0x22fe:	jne	0x230c


0x2300:	mov	rax, qword ptr [rsp + 0x10]
0x2305:	cmp	byte ptr [rax + 1], 0
0x2309:	setne	al
0x230c:	cmp	dword ptr [rsp + 8], 2
0x2311:	sete	dl
0x2314:	test	al, al
0x2316:	je	0x2568


0x230c:	cmp	dword ptr [rsp + 8], 2
0x2311:	sete	dl
0x2314:	test	al, al
0x2316:	je	0x2568


0x2568:	test	rbp, rbp
0x256b:	jne	0x231c


0x231c:	xor	r12d, r12d
0x231f:	xor	eax, eax
0x2321:	nop	dword ptr [rax]
0x2328:	cmp	byte ptr [rsp + 0xd], 1
0x232d:	jne	0x2442


0x2571:	movzx	eax, byte ptr [rsp + 0xf]
0x2576:	and	al, dl
0x2578:	je	0x2328


0x257e:	mov	rbp, r11
0x2581:	mov	dword ptr [rsp + 8], 2
0x2589:	jmp	0x2c89


0x2988:	cmp	byte ptr [rsp + 0xf], 0
0x298d:	jne	0x31b0


0x23d0:	cmp	eax, 5
0x23d3:	je	0x2948


0x2993:	xor	r12d, r12d
0x2996:	xor	eax, eax
0x2998:	mov	ebx, 0x3f
0x299d:	jmp	0x2359


0x31b0:	mov	rbp, r11
0x31b3:	movzx	eax, byte ptr [rsp + 0xf]
0x31b8:	jmp	0x2c89


0x2948:	test	byte ptr [rsp + 0x78], 4
0x294d:	je	0x2970


0x23d9:	cmp	eax, 2
0x23dc:	mov	ebx, 0x3f
0x23e1:	sete	dl
0x23e4:	xor	r12d, r12d
0x23e7:	xor	eax, eax
0x23e9:	jmp	0x2328


0x2970:	xor	edx, edx
0x2972:	xor	r12d, r12d
0x2975:	xor	eax, eax
0x2977:	mov	ebx, 0x3f
0x297c:	jmp	0x2328


0x294f:	lea	rcx, [rbp + 2]
0x2953:	cmp	rcx, r11
0x2956:	jae	0x2970


0x2958:	mov	rax, qword ptr [rsp + 0x10]
0x295d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x2962:	je	0x30f2


0x30f2:	movzx	ebx, byte ptr [rax + rcx]
0x30f6:	cmp	bl, 0x3e
0x30f9:	ja	0x2970


0x30ff:	movabs	rax, 0x7000a38200000000
0x3109:	bt	rax, rbx
0x310d:	jae	0x2970


0x3113:	cmp	byte ptr [rsp + 0xf], 0
0x3118:	jne	0x3302


0x311e:	cmp	r13, r15
0x3121:	jbe	0x3128


0x3302:	mov	rbp, r11
0x3305:	jmp	0x2ca0


0x3128:	lea	rax, [r15 + 1]
0x312c:	cmp	r13, rax
0x312f:	jbe	0x3137


0x3123:	mov	byte ptr [r14 + r15], 0x3f
0x3128:	lea	rax, [r15 + 1]
0x312c:	cmp	r13, rax
0x312f:	jbe	0x3137


0x3137:	lea	rax, [r15 + 2]
0x313b:	cmp	r13, rax
0x313e:	jbe	0x3146


0x3131:	mov	byte ptr [r14 + r15 + 1], 0x22
0x3137:	lea	rax, [r15 + 2]
0x313b:	cmp	r13, rax
0x313e:	jbe	0x3146


0x3146:	lea	rax, [r15 + 3]
0x314a:	cmp	r13, rax
0x314d:	jbe	0x3155


0x3140:	mov	byte ptr [r14 + r15 + 2], 0x22
0x3146:	lea	rax, [r15 + 3]
0x314a:	cmp	r13, rax
0x314d:	jbe	0x3155


0x3155:	add	r15, 4
0x3159:	xor	edx, edx
0x315b:	xor	r12d, r12d
0x315e:	xor	eax, eax
0x3160:	mov	rbp, rcx
0x3163:	jmp	0x2328


0x314f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x3155:	add	r15, 4
0x3159:	xor	edx, edx
0x315b:	xor	r12d, r12d
0x315e:	xor	eax, eax
0x3160:	mov	rbp, rcx
0x3163:	jmp	0x2328


0x2900:	cmp	byte ptr [rsp + 0xf], 0
0x2905:	jne	0x31b0


0x23fe:	mov	byte ptr [rsp + 0x7c], r12b
0x2403:	xor	edx, edx
0x2405:	xor	eax, eax
0x2407:	mov	ebx, 0x27
0x240c:	jmp	0x2328


0x290b:	test	r13, r13
0x290e:	je	0x2d10


0x2d10:	cmp	r13, r15
0x2d13:	jbe	0x2d1a


0x2914:	xor	edx, edx
0x2916:	cmp	qword ptr [rsp + 0x50], 0
0x291c:	jne	0x2d10


0x2d1a:	lea	rax, [r15 + 1]
0x2d1e:	cmp	r13, rax
0x2d21:	jbe	0x2d29


0x2d15:	mov	byte ptr [r14 + r15], 0x27
0x2d1a:	lea	rax, [r15 + 1]
0x2d1e:	cmp	r13, rax
0x2d21:	jbe	0x2d29


0x2922:	mov	qword ptr [rsp + 0x50], r13
0x2927:	add	r15, 3
0x292b:	xor	eax, eax
0x292d:	mov	byte ptr [rsp + 0x7c], r12b
0x2932:	xor	r8d, r8d
0x2935:	mov	r13, rdx
0x2938:	mov	ebx, 0x27
0x293d:	jmp	0x2359


0x2d29:	lea	rax, [r15 + 2]
0x2d2d:	cmp	r13, rax
0x2d30:	jbe	0x3322


0x2d23:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x2d29:	lea	rax, [r15 + 2]
0x2d2d:	cmp	r13, rax
0x2d30:	jbe	0x3322


0x3322:	mov	rdx, r13
0x3325:	mov	r13, qword ptr [rsp + 0x50]
0x332a:	jmp	0x2922


0x2d36:	mov	rdx, r13
0x2d39:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2d3f:	mov	r13, qword ptr [rsp + 0x50]
0x2d44:	jmp	0x2922


0x2434:	cmp	byte ptr [rsp + 0xd], 0
0x2439:	jne	0x24a0


0x243b:	mov	ebx, edx
0x243d:	xor	r12d, r12d
0x2440:	xor	eax, eax
0x2442:	cmp	byte ptr [rsp + 0xf], 0
0x2447:	jne	0x233b


0x24a0:	xor	r12d, r12d
0x24a3:	cmp	dword ptr [rsp + 8], 2
0x24a8:	sete	dl
0x24ab:	cmp	byte ptr [rsp + 0xf], 0
0x24b0:	mov	eax, edx
0x24b2:	jne	0x2d08


0x2840:	cmp	byte ptr [rsp + 0xf], 0
0x2845:	jne	0x31b0


0x2473:	cmp	byte ptr [rsp + 0xd], 0
0x2478:	je	0x2690


0x284b:	add	rbp, 1
0x284f:	mov	eax, r8d
0x2852:	xor	r12d, r12d
0x2855:	mov	ebx, 0x5c
0x285a:	jmp	0x236c


0x2690:	mov	edx, 0x5c
0x2695:	mov	ebx, 0x5c
0x269a:	jmp	0x2434


0x247e:	cmp	byte ptr [rsp + 0xf], 0
0x2483:	je	0x2690


0x2489:	cmp	qword ptr [rsp + 0x18], 0
0x248f:	jne	0x284b


0x2495:	mov	ebx, 0x5c
0x249a:	nop	word ptr [rax + rax]
0x24a0:	xor	r12d, r12d
0x24a3:	cmp	dword ptr [rsp + 8], 2
0x24a8:	sete	dl
0x24ab:	cmp	byte ptr [rsp + 0xf], 0
0x24b0:	mov	eax, edx
0x24b2:	jne	0x2d08


0x251b:	xor	edx, edx
0x251d:	test	byte ptr [rsp + 0x78], 1
0x2522:	je	0x243b


0x26e3:	cmp	dword ptr [rsp + 8], 2
0x26e8:	sete	dl
0x26eb:	cmp	byte ptr [rsp + 0xf], 0
0x26f0:	jne	0x328a


0x2528:	add	rbp, 1
0x252c:	jmp	0x21e8


0x26f6:	mov	eax, r8d
0x26f9:	mov	rcx, r15
0x26fc:	xor	eax, 1
0x26ff:	and	al, dl
0x2701:	je	0x2730


0x328a:	movzx	ebx, byte ptr [rsp + 0xf]
0x328f:	mov	rbp, r11
0x3292:	mov	eax, edx
0x3294:	mov	byte ptr [rsp + 0xd], bl
0x3298:	jmp	0x2c89


0x2730:	cmp	r13, rcx
0x2733:	jbe	0x273a


0x2703:	cmp	r13, r15
0x2706:	jbe	0x270d


0x273a:	cmp	dword ptr [rsp + 8], 2
0x273f:	lea	r15, [rcx + 1]
0x2743:	je	0x2d49


0x2735:	mov	byte ptr [r14 + rcx], 0x5c
0x273a:	cmp	dword ptr [rsp + 8], 2
0x273f:	lea	r15, [rcx + 1]
0x2743:	je	0x2d49


0x270d:	lea	rcx, [r15 + 1]
0x2711:	cmp	r13, rcx
0x2714:	jbe	0x271c


0x2708:	mov	byte ptr [r14 + r15], 0x27
0x270d:	lea	rcx, [r15 + 1]
0x2711:	cmp	r13, rcx
0x2714:	jbe	0x271c


0x2d49:	mov	eax, r12d
0x2d4c:	mov	ebx, 0x30
0x2d51:	xor	r12d, r12d
0x2d54:	jmp	0x2359


0x2749:	lea	rax, [rbp + 1]
0x274d:	cmp	rax, r11
0x2750:	jae	0x276b


0x271c:	lea	rcx, [r15 + 2]
0x2720:	cmp	r13, rcx
0x2723:	ja	0x2d59


0x2716:	mov	byte ptr [r14 + r15 + 1], 0x24
0x271c:	lea	rcx, [r15 + 2]
0x2720:	cmp	r13, rcx
0x2723:	ja	0x2d59


0x2752:	mov	rax, qword ptr [rsp + 0x10]
0x2757:	movzx	eax, byte ptr [rax + rbp + 1]
0x275c:	mov	byte ptr [rsp + 0x28], al
0x2760:	sub	eax, 0x30
0x2763:	cmp	al, 9
0x2765:	jbe	0x2f99


0x276b:	mov	eax, r12d
0x276e:	mov	ebx, 0x30
0x2773:	xor	r12d, r12d
0x2776:	jmp	0x2328


0x2729:	lea	rcx, [r15 + 3]
0x272d:	mov	r8d, eax
0x2730:	cmp	r13, rcx
0x2733:	jbe	0x273a


0x2d59:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2d5f:	jmp	0x2729


0x2f99:	cmp	r13, r15
0x2f9c:	jbe	0x2fa3


0x2fa3:	lea	rax, [rcx + 2]
0x2fa7:	cmp	r13, rax
0x2faa:	jbe	0x2fb2


0x2f9e:	mov	byte ptr [r14 + r15], 0x30
0x2fa3:	lea	rax, [rcx + 2]
0x2fa7:	cmp	r13, rax
0x2faa:	jbe	0x2fb2


0x2fb2:	mov	eax, r12d
0x2fb5:	lea	r15, [rcx + 3]
0x2fb9:	xor	r12d, r12d
0x2fbc:	mov	ebx, 0x30
0x2fc1:	jmp	0x2328


0x2fac:	mov	byte ptr [r14 + rcx + 2], 0x30
0x2fb2:	mov	eax, r12d
0x2fb5:	lea	r15, [rcx + 3]
0x2fb9:	xor	r12d, r12d
0x2fbc:	mov	ebx, 0x30
0x2fc1:	jmp	0x2328


0x2422:	cmp	dword ptr [rsp + 8], 2
0x2427:	sete	al
0x242a:	and	al, byte ptr [rsp + 0xf]
0x242e:	jne	0x257e


0x27e0:	mov	edx, 0xd
0x27e5:	xor	r10d, r10d
0x27e8:	mov	ebx, 0x72
0x27ed:	jmp	0x2422


0x2d64:	test	ebx, ebx
0x2d66:	jne	0x2193


0x2d6c:	mov	byte ptr [rsp + 0xd], 1
0x2d71:	test	r13, r13
0x2d74:	jne	0x330a


0x2d7a:	lea	rax, [rip + 0x276c]
0x2d81:	mov	qword ptr [rsp + 0x50], 0
0x2d8a:	mov	byte ptr [rsp + 0xe], 1
0x2d8f:	mov	byte ptr [rsp + 0x7c], 0
0x2d94:	xor	r12d, r12d
0x2d97:	mov	byte ptr [rsp + 0xf], 0
0x2d9c:	mov	qword ptr [rsp + 0x18], 1
0x2da5:	mov	qword ptr [rsp + 0x48], rax
0x2daa:	mov	r15d, 1
0x2db0:	mov	dword ptr [rsp + 8], 2
0x2db8:	jmp	0x21d3


0x330a:	mov	byte ptr [rsp + 0xe], 1
0x330f:	xor	eax, eax
0x3311:	xor	r12d, r12d
0x3314:	mov	qword ptr [rsp + 0x50], 0
0x331d:	jmp	0x28c4


0x28c4:	lea	rbx, [rip + 0x2c22]
0x28cb:	mov	byte ptr [r14], 0x27
0x28cf:	mov	dword ptr [rsp + 8], 2
0x28d7:	mov	r15d, 1
0x28dd:	mov	qword ptr [rsp + 0x18], 1
0x28e6:	mov	byte ptr [rsp + 0xf], 0
0x28eb:	mov	qword ptr [rsp + 0x48], rbx
0x28f0:	mov	byte ptr [rsp + 0x7c], al
0x28f4:	jmp	0x21d3


0x2dc8:	test	r13, r13
0x2dcb:	je	0x2ff6


0x31bd:	lea	rax, [rip + 0x2327]
0x31c4:	mov	byte ptr [rsp + 0xe], 1
0x31c9:	mov	byte ptr [rsp + 0x7c], 0
0x31ce:	xor	r12d, r12d
0x31d1:	mov	qword ptr [rsp + 0x50], 0
0x31da:	mov	byte ptr [rsp + 0xf], 1
0x31df:	mov	byte ptr [rsp + 0xd], 1
0x31e4:	mov	qword ptr [rsp + 0x18], 1
0x31ed:	xor	r15d, r15d
0x31f0:	mov	qword ptr [rsp + 0x48], rax
0x31f5:	jmp	0x21d3


0x2ff6:	mov	qword ptr [rsp + 0x50], 0
0x2fff:	mov	byte ptr [rsp + 0xe], 1
0x3004:	xor	r12d, r12d
0x3007:	mov	byte ptr [rsp + 0x7c], 0
0x300c:	jmp	0x2deb


0x2dd1:	mov	byte ptr [r14], 0x22
0x2dd5:	mov	byte ptr [rsp + 0xe], 1
0x2dda:	xor	r12d, r12d
0x2ddd:	mov	byte ptr [rsp + 0x7c], 0
0x2de2:	mov	qword ptr [rsp + 0x50], 0
0x2deb:	lea	rax, [rip + 0x26f9]
0x2df2:	mov	byte ptr [rsp + 0xf], 0
0x2df7:	mov	byte ptr [rsp + 0xd], 1
0x2dfc:	mov	qword ptr [rsp + 0x18], 1
0x2e05:	mov	r15d, 1
0x2e0b:	mov	qword ptr [rsp + 0x48], rax
0x2e10:	jmp	0x21d3


0x2deb:	lea	rax, [rip + 0x26f9]
0x2df2:	mov	byte ptr [rsp + 0xf], 0
0x2df7:	mov	byte ptr [rsp + 0xd], 1
0x2dfc:	mov	qword ptr [rsp + 0x18], 1
0x2e05:	mov	r15d, 1
0x2e0b:	mov	qword ptr [rsp + 0x48], rax
0x2e10:	jmp	0x21d3


0x2e15:	lea	rax, [rip + 0x26cf]
0x2e1c:	mov	byte ptr [rsp + 0xe], 1
0x2e21:	mov	byte ptr [rsp + 0x7c], 0
0x2e26:	xor	r12d, r12d
0x2e29:	mov	qword ptr [rsp + 0x50], 0
0x2e32:	mov	byte ptr [rsp + 0xf], 1
0x2e37:	mov	byte ptr [rsp + 0xd], 1
0x2e3c:	mov	qword ptr [rsp + 0x18], 1
0x2e45:	xor	r15d, r15d
0x2e48:	mov	qword ptr [rsp + 0x48], rax
0x2e4d:	mov	dword ptr [rsp + 8], 5
0x2e55:	jmp	0x21d3


0x2e5a:	mov	byte ptr [rsp + 0xe], 1
0x2e5f:	mov	byte ptr [rsp + 0x7c], 0
0x2e64:	xor	r12d, r12d
0x2e67:	mov	qword ptr [rsp + 0x50], 0
0x2e70:	mov	byte ptr [rsp + 0xf], 0
0x2e75:	xor	r15d, r15d
0x2e78:	mov	byte ptr [rsp + 0xd], 1
0x2e7d:	mov	qword ptr [rsp + 0x18], 0
0x2e86:	mov	qword ptr [rsp + 0x48], 0
0x2e8f:	jmp	0x21d3


0x2e94:	cmp	dword ptr [rsp + 8], 0xa
0x2e99:	je	0x2ef1


0x2ef1:	xor	r15d, r15d
0x2ef4:	test	ebx, ebx
0x2ef6:	je	0x30bd


0x2e9b:	lea	rsi, [rip + 0x264d]
0x2ea2:	xor	edi, edi
0x2ea4:	mov	edx, 5
0x2ea9:	call	0x13d0


0x30bd:	mov	rdx, qword ptr [rsp + 0x68]
0x30c2:	movzx	eax, byte ptr [rdx]
0x30c5:	test	al, al
0x30c7:	je	0x2efc


0x2efc:	test	ebx, ebx
0x2efe:	mov	rbx, qword ptr [rsp + 0x60]
0x2f03:	setne	byte ptr [rsp + 0xf]
0x2f08:	xor	r12d, r12d
0x2f0b:	mov	rdi, rbx
0x2f0e:	call	0x13f0


0x30d9:	add	r15, 1
0x30dd:	movzx	eax, byte ptr [rdx + r15]
0x30e2:	test	al, al
0x30e4:	jne	0x30d0


0x30d5:	mov	byte ptr [r14 + r15], al
0x30d9:	add	r15, 1
0x30dd:	movzx	eax, byte ptr [rdx + r15]
0x30e2:	test	al, al
0x30e4:	jne	0x30d0


0x30e6:	jmp	0x2efc


0x30d0:	cmp	r13, r15
0x30d3:	jbe	0x30d9


0x2f13:	mov	qword ptr [rsp + 0x48], rbx
0x2f18:	mov	qword ptr [rsp + 0x18], rax
0x2f1d:	mov	byte ptr [rsp + 0xe], 1
0x2f22:	mov	byte ptr [rsp + 0x7c], 0
0x2f27:	mov	qword ptr [rsp + 0x50], 0
0x2f30:	mov	byte ptr [rsp + 0xd], 1
0x2f35:	jmp	0x21d3


0x2eae:	mov	rcx, rax
0x2eb1:	mov	qword ptr [rsp + 0x68], rax
0x2eb6:	lea	rax, [rip + 0x2632]
0x2ebd:	cmp	rcx, rax
0x2ec0:	je	0x325e


0x325e:	mov	esi, dword ptr [rsp + 8]
0x3262:	mov	rdi, rcx
0x3265:	call	0x2010


0x2ec6:	lea	rsi, [rip + 0x2620]
0x2ecd:	xor	edi, edi
0x2ecf:	mov	edx, 5
0x2ed4:	call	0x13d0


0x2ed9:	mov	rcx, rax
0x2edc:	mov	qword ptr [rsp + 0x60], rax
0x2ee1:	lea	rax, [rip + 0x2605]
0x2ee8:	cmp	rcx, rax
0x2eeb:	je	0x3274


0x3274:	mov	esi, dword ptr [rsp + 8]
0x3278:	mov	rdi, rcx
0x327b:	call	0x2010


0x3280:	mov	qword ptr [rsp + 0x60], rax
0x3285:	jmp	0x2ef1


0x326a:	mov	qword ptr [rsp + 0x68], rax
0x326f:	jmp	0x2ec6


0x2f3a:	mov	byte ptr [rsp + 0xe], 1
0x2f3f:	mov	byte ptr [rsp + 0x7c], 0
0x2f44:	xor	r12d, r12d
0x2f47:	mov	qword ptr [rsp + 0x50], 0
0x2f50:	mov	byte ptr [rsp + 0xf], 0
0x2f55:	xor	r15d, r15d
0x2f58:	mov	byte ptr [rsp + 0xd], 0
0x2f5d:	mov	qword ptr [rsp + 0x18], 0
0x2f66:	mov	qword ptr [rsp + 0x48], 0
0x2f6f:	jmp	0x21d3


0x2f74:	mov	byte ptr [rsp + 0xe], 1
0x2f79:	mov	byte ptr [rsp + 0x7c], 0
0x2f7e:	xor	r12d, r12d
0x2f81:	mov	qword ptr [rsp + 0x50], 0
0x2f8a:	mov	byte ptr [rsp + 0xf], 1
0x2f8f:	mov	byte ptr [rsp + 0xd], 1
0x2f94:	jmp	0x21b3


0x21b3:	lea	rax, [rip + 0x3333]
0x21ba:	mov	qword ptr [rsp + 0x18], 1
0x21c3:	xor	r15d, r15d
0x21c6:	mov	dword ptr [rsp + 8], 2
0x21ce:	mov	qword ptr [rsp + 0x48], rax
0x21d3:	xor	r11d, r11d
0x21d6:	mov	rax, rbp
0x21d9:	mov	r8d, r12d
0x21dc:	mov	rbp, r11
0x21df:	mov	r11, rax
0x21e2:	nop	word ptr [rax + rax]
0x21e8:	cmp	r11, rbp
0x21eb:	setne	r12b
0x21ef:	cmp	r11, -1
0x21f3:	jne	0x2202


0x3168:	test	ebx, ebx
0x316a:	je	0x32f8


0x32f8:	mov	byte ptr [rsp + 0xd], 0
0x32fd:	jmp	0x2d71


0x3170:	lea	rax, [rip + 0x2376]
0x3177:	mov	byte ptr [rsp + 0xe], 1
0x317c:	mov	byte ptr [rsp + 0x7c], 0
0x3181:	xor	r12d, r12d
0x3184:	mov	qword ptr [rsp + 0x50], 0
0x318d:	mov	byte ptr [rsp + 0xf], 1
0x3192:	mov	byte ptr [rsp + 0xd], 0
0x3197:	mov	qword ptr [rsp + 0x18], 1
0x31a0:	xor	r15d, r15d
0x31a3:	mov	qword ptr [rsp + 0x48], rax
0x31a8:	jmp	0x21d3


0x2d71:	test	r13, r13
0x2d74:	jne	0x330a


0x3334:	nop	
0x3336:	nop	word ptr cs:[rax + rax]


0x34eb:	nop	dword ptr [rax + rax]


0x3526:	nop	word ptr cs:[rax + rax]


0x3541:	nop	dword ptr [rax + rax]
0x3546:	nop	word ptr cs:[rax + rax]


0x3561:	nop	dword ptr [rax + rax]
0x3566:	nop	word ptr cs:[rax + rax]


0x35a5:	nop	
0x35a6:	nop	word ptr cs:[rax + rax]


0x35c5:	nop	
0x35c6:	nop	word ptr cs:[rax + rax]


0x3674:	nop	
0x3676:	nop	word ptr cs:[rax + rax]


0x3763:	nop	dword ptr [rax]
0x3766:	nop	word ptr cs:[rax + rax]


0x377a:	nop	word ptr [rax + rax]


0x3813:	nop	dword ptr [rax]
0x3816:	nop	word ptr cs:[rax + rax]


0x3833:	nop	dword ptr [rax]
0x3836:	nop	word ptr cs:[rax + rax]


0x384c:	nop	dword ptr [rax]


0x3868:	nop	dword ptr [rax + rax]


0x3884:	nop	
0x3886:	nop	word ptr cs:[rax + rax]


0x391e:	nop	


0x39aa:	nop	word ptr [rax + rax]


0x39bc:	nop	dword ptr [rax]


0x39cf:	nop	


0x3a68:	nop	dword ptr [rax + rax]


0x3a91:	nop	dword ptr [rax + rax]
0x3a96:	nop	word ptr cs:[rax + rax]


0x3aaa:	nop	word ptr [rax + rax]


0x3b3e:	nop	


0x3bd1:	nop	dword ptr [rax + rax]
0x3bd6:	nop	word ptr cs:[rax + rax]


0x3bec:	nop	dword ptr [rax]


0x3c07:	nop	word ptr [rax + rax]


0x3c23:	nop	dword ptr [rax]
0x3c26:	nop	word ptr cs:[rax + rax]


0x3c3c:	nop	dword ptr [rax]


0x3c54:	nop	
0x3c56:	nop	word ptr cs:[rax + rax]


0x3c73:	nop	dword ptr [rax]
0x3c76:	nop	word ptr cs:[rax + rax]


0x3c98:	nop	dword ptr [rax + rax]


0x40b7:	nop	word ptr [rax + rax]


0x4158:	nop	dword ptr [rax + rax]


0x4235:	nop	
0x4236:	nop	word ptr cs:[rax + rax]


0x42da:	nop	word ptr [rax + rax]


0x4304:	nop	
0x4306:	nop	word ptr cs:[rax + rax]


0x4312:	nop	dword ptr [rax]
0x4316:	nop	word ptr cs:[rax + rax]


0x4356:	nop	word ptr cs:[rax + rax]


0x4384:	nop	
0x4386:	nop	word ptr cs:[rax + rax]


0x4412:	nop	dword ptr [rax]
0x4416:	nop	word ptr cs:[rax + rax]


0x446a:	nop	word ptr [rax + rax]


0x4487:	nop	word ptr [rax + rax]


0x44be:	nop	


0x44e8:	nop	dword ptr [rax + rax]


0x4503:	nop	word ptr cs:[rax + rax]
0x450d:	nop	dword ptr [rax]


0x4545:	nop	word ptr cs:[rax + rax]
0x454f:	nop	


0x4700:	movabs	r8, 0x8000000000000000
0x470a:	movsxd	rsi, eax
0x470d:	mov	rax, r8
0x4710:	cqo	
0x4712:	idiv	rsi
0x4715:	cmp	rbp, rax
0x4718:	mov	r9, rax
0x471b:	jl	0x4bc5


0x4bc5:	mov	eax, 1
0x4bca:	mov	rbp, r8
0x4bcd:	jmp	0x4758


0x4721:	movabs	r10, 0x7fffffffffffffff
0x472b:	mov	rax, r10
0x472e:	cqo	
0x4730:	idiv	rsi
0x4733:	cmp	rbp, rax
0x4736:	jg	0x4bd2


0x4758:	or	r12d, eax
0x475b:	nop	dword ptr [rax + rax]
0x4760:	movsxd	rax, edi
0x4763:	add	rcx, rax
0x4766:	mov	eax, r12d
0x4769:	or	eax, 2
0x476c:	mov	qword ptr [rbx], rcx
0x476f:	cmp	byte ptr [rcx], 0
0x4772:	cmovne	r12d, eax
0x4776:	jmp	0x45d4


0x473c:	imul	rbp, rsi
0x4740:	cmp	r9, rbp
0x4743:	jg	0x4bc5


0x4bd2:	mov	eax, 1
0x4bd7:	mov	rbp, r10
0x4bda:	jmp	0x4758


0x4749:	cmp	rax, rbp
0x474c:	jl	0x4bd2


0x4752:	imul	rbp, rsi
0x4756:	xor	eax, eax
0x4758:	or	r12d, eax
0x475b:	nop	dword ptr [rax + rax]
0x4760:	movsxd	rax, edi
0x4763:	add	rcx, rax
0x4766:	mov	eax, r12d
0x4769:	or	eax, 2
0x476c:	mov	qword ptr [rbx], rcx
0x476f:	cmp	byte ptr [rcx], 0
0x4772:	cmovne	r12d, eax
0x4776:	jmp	0x45d4


0x4ac0:	mov	r12d, 1
0x4ac6:	movabs	rbp, 0x8000000000000000
0x4ad0:	jmp	0x4760


0x4793:	movabs	rax, 0x3fffffffffffffff
0x479d:	cmp	rbp, rax
0x47a0:	jg	0x4b80


0x4760:	movsxd	rax, edi
0x4763:	add	rcx, rax
0x4766:	mov	eax, r12d
0x4769:	or	eax, 2
0x476c:	mov	qword ptr [rbx], rcx
0x476f:	cmp	byte ptr [rcx], 0
0x4772:	cmovne	r12d, eax
0x4776:	jmp	0x45d4


0x47a6:	add	rbp, rbp
0x47a9:	jmp	0x4760


0x4b80:	mov	r12d, 1
0x4b86:	movabs	rbp, 0x7fffffffffffffff
0x4b90:	jmp	0x4760


0x47c3:	movabs	rax, 0x3fffffffffffff
0x47cd:	cmp	rbp, rax
0x47d0:	jg	0x4b80


0x47d6:	shl	rbp, 9
0x47da:	jmp	0x4760


0x482f:	cmp	r10, rbp
0x4832:	jle	0x4810


0x4810:	mov	rax, r9
0x4813:	cqo	
0x4815:	idiv	rsi
0x4818:	cmp	rax, rbp
0x481b:	jl	0x4b08


0x4834:	mov	r11d, 1
0x483a:	movabs	rbp, 0x8000000000000000
0x4844:	jmp	0x4825


0x4b08:	mov	r11d, 1
0x4b0e:	movabs	rbp, 0x7fffffffffffffff
0x4b18:	jmp	0x4825


0x4821:	imul	rbp, rsi
0x4825:	sub	r8d, 1
0x4829:	je	0x4950


0x4825:	sub	r8d, 1
0x4829:	je	0x4950


0x4950:	or	r12d, r11d
0x4953:	jmp	0x4760


0x489f:	cmp	r10, rbp
0x48a2:	jle	0x4880


0x4880:	mov	rax, r9
0x4883:	cqo	
0x4885:	idiv	rsi
0x4888:	cmp	rax, rbp
0x488b:	jl	0x4ad8


0x48a4:	mov	r11d, 1
0x48aa:	movabs	rbp, 0x8000000000000000
0x48b4:	jmp	0x4895


0x4ad8:	mov	r11d, 1
0x4ade:	movabs	rbp, 0x7fffffffffffffff
0x4ae8:	jmp	0x4895


0x4891:	imul	rbp, rsi
0x4895:	sub	r8d, 1
0x4899:	je	0x4950


0x4895:	sub	r8d, 1
0x4899:	je	0x4950


0x48de:	sub	r8, 1
0x48e2:	mov	rax, r8
0x48e5:	cqo	
0x48e7:	idiv	rsi
0x48ea:	cmp	rbp, rax
0x48ed:	jg	0x4b80


0x48f3:	imul	rbp, rsi
0x48f7:	jmp	0x4760


0x4931:	mov	rax, r9
0x4934:	cqo	
0x4936:	idiv	rsi
0x4939:	cmp	rax, rbp
0x493c:	jl	0x4bb0


0x4b20:	mov	r11d, 1
0x4b26:	movabs	rbp, 0x8000000000000000
0x4b30:	jmp	0x4946


0x4bb0:	mov	r11d, 1
0x4bb6:	movabs	rbp, 0x7fffffffffffffff
0x4bc0:	jmp	0x4946


0x4942:	imul	rbp, rsi
0x4946:	sub	r8d, 1
0x494a:	jne	0x4928


0x4946:	sub	r8d, 1
0x494a:	jne	0x4928


0x4928:	cmp	r10, rbp
0x492b:	jg	0x4b20


0x49ab:	cmp	r10, rbp
0x49ae:	jle	0x4990


0x4990:	mov	rax, r9
0x4993:	cqo	
0x4995:	idiv	rsi
0x4998:	cmp	rax, rbp
0x499b:	jl	0x4b38


0x49b0:	mov	r11d, 1
0x49b6:	movabs	rbp, 0x8000000000000000
0x49c0:	jmp	0x49a5


0x4b38:	mov	r11d, 1
0x4b3e:	movabs	rbp, 0x7fffffffffffffff
0x4b48:	jmp	0x49a5


0x49a1:	imul	rbp, rsi
0x49a5:	sub	r8d, 1
0x49a9:	je	0x4950


0x49a5:	sub	r8d, 1
0x49a9:	je	0x4950


0x4a17:	cmp	r10, rbp
0x4a1a:	jle	0x49f8


0x49f8:	mov	rax, r9
0x49fb:	cqo	
0x49fd:	idiv	rsi
0x4a00:	cmp	rax, rbp
0x4a03:	jl	0x4b50


0x4a1c:	mov	r11d, 1
0x4a22:	movabs	rbp, 0x8000000000000000
0x4a2c:	jmp	0x4a0d


0x4b50:	mov	r11d, 1
0x4b56:	movabs	rbp, 0x7fffffffffffffff
0x4b60:	jmp	0x4a0d


0x4a09:	imul	rbp, rsi
0x4a0d:	sub	r8d, 1
0x4a11:	je	0x4950


0x4a0d:	sub	r8d, 1
0x4a11:	je	0x4950


0x4a43:	movabs	rax, 0x1fffffffffffff
0x4a4d:	cmp	rbp, rax
0x4a50:	jg	0x4b80


0x4a56:	shl	rbp, 0xa
0x4a5a:	jmp	0x4760


0x4a8d:	mov	rax, r9
0x4a90:	cqo	
0x4a92:	idiv	rsi
0x4a95:	cmp	rax, rbp
0x4a98:	jl	0x4b68


0x4af0:	mov	r11d, 1
0x4af6:	movabs	rbp, 0x8000000000000000
0x4b00:	jmp	0x4aa2


0x4b68:	mov	r11d, 1
0x4b6e:	movabs	rbp, 0x7fffffffffffffff
0x4b78:	jmp	0x4aa2


0x4a9e:	imul	rbp, rsi
0x4aa2:	sub	r8d, 1
0x4aa6:	jne	0x4a88


0x4aa2:	sub	r8d, 1
0x4aa6:	jne	0x4a88


0x4aa8:	jmp	0x4950


0x4a88:	cmp	r10, rbp
0x4a8b:	jg	0x4af0


0x4c03:	nop	word ptr cs:[rax + rax]
0x4c0d:	nop	dword ptr [rax]


0x4c93:	nop	word ptr cs:[rax + rax]
0x4c9d:	nop	dword ptr [rax]


0x4d1d:	nop	dword ptr [rax]


0x4dbc:	nop	dword ptr [rax]


0x4e3b:	nop	dword ptr [rax + rax]


0x4ed7:	nop	word ptr [rax + rax]


0x4f45:	nop	
0x4f46:	nop	word ptr cs:[rax + rax]


0x4f52:	nop	word ptr cs:[rax + rax]
0x4f5c:	nop	dword ptr [rax]


0x23c0:	xor	r10d, r10d
0x23c3:	mov	eax, dword ptr [rsp + 8]
0x23c7:	cmp	eax, 2
0x23ca:	je	0x2988


0x23f0:	xor	r10d, r10d
0x23f3:	cmp	dword ptr [rsp + 8], 2
0x23f8:	je	0x2900


0x2418:	mov	edx, 9
0x241d:	mov	ebx, 0x74
0x2422:	cmp	dword ptr [rsp + 8], 2
0x2427:	sete	al
0x242a:	and	al, byte ptr [rsp + 0xf]
0x242e:	jne	0x257e


0x2458:	mov	edx, 8
0x245d:	mov	ebx, 0x62
0x2462:	jmp	0x2434


0x2468:	cmp	dword ptr [rsp + 8], 2
0x246d:	je	0x2840


0x2510:	cmp	byte ptr [rsp + 0xd], 0
0x2515:	jne	0x26e3


0x2538:	cmp	dword ptr [rsp + 8], 2
0x253d:	sete	dl
0x2540:	xor	eax, eax
0x2542:	jmp	0x2328


0x2550:	mov	edx, 7
0x2555:	mov	ebx, 0x61
0x255a:	jmp	0x2434


0x2560:	cmp	dword ptr [rsp + 8], 2
0x2565:	sete	dl
0x2568:	test	rbp, rbp
0x256b:	jne	0x231c


0x2590:	cmp	dword ptr [rsp + 8], 2
0x2595:	sete	dl
0x2598:	xor	r12d, r12d
0x259b:	jmp	0x2571


0x25a0:	cmp	dword ptr [rsp + 8], 2
0x25a5:	mov	ebx, 0x20
0x25aa:	sete	dl
0x25ad:	jmp	0x2571


0x25b0:	mov	edx, 0xd
0x25b5:	mov	ebx, 0x72
0x25ba:	jmp	0x2422


0x25c0:	mov	edx, 0xc
0x25c5:	mov	ebx, 0x66
0x25ca:	jmp	0x2434


0x25d0:	mov	edx, 0xb
0x25d5:	mov	ebx, 0x76
0x25da:	jmp	0x2434


0x25e0:	mov	edx, 0xa
0x25e5:	mov	ebx, 0x6e
0x25ea:	jmp	0x2422


0x2680:	xor	r10d, r10d
0x2683:	cmp	byte ptr [rsp + 0xd], 0
0x2688:	jne	0x247e


0x26a0:	mov	edx, 0xc
0x26a5:	xor	r10d, r10d
0x26a8:	mov	ebx, 0x66
0x26ad:	jmp	0x2434


0x26b8:	mov	edx, 0xa
0x26bd:	xor	r10d, r10d
0x26c0:	mov	ebx, 0x6e
0x26c5:	jmp	0x2422


0x26d0:	mov	ebx, 0x61
0x26d5:	jmp	0x24a0


0x26e0:	xor	r10d, r10d
0x26e3:	cmp	dword ptr [rsp + 8], 2
0x26e8:	sete	dl
0x26eb:	cmp	byte ptr [rsp + 0xf], 0
0x26f0:	jne	0x328a


0x2780:	cmp	dword ptr [rsp + 8], 2
0x2785:	mov	r12d, r10d
0x2788:	sete	dl
0x278b:	xor	r10d, r10d
0x278e:	xor	eax, eax
0x2790:	jmp	0x2328


0x2798:	cmp	dword ptr [rsp + 8], 2
0x279d:	sete	dl
0x27a0:	xor	r10d, r10d
0x27a3:	jmp	0x2568


0x27b0:	cmp	dword ptr [rsp + 8], 2
0x27b5:	sete	dl
0x27b8:	xor	r10d, r10d
0x27bb:	xor	r12d, r12d
0x27be:	jmp	0x2571


0x27c8:	cmp	dword ptr [rsp + 8], 2
0x27cd:	mov	r12d, r10d
0x27d0:	mov	ebx, 0x20
0x27d5:	sete	dl
0x27d8:	xor	r10d, r10d
0x27db:	jmp	0x2571


0x27f8:	mov	ebx, 0x76
0x27fd:	jmp	0x24a0


0x2808:	mov	edx, 9
0x280d:	xor	r10d, r10d
0x2810:	mov	ebx, 0x74
0x2815:	jmp	0x2422


0x2820:	mov	ebx, 0x62
0x2825:	jmp	0x24a0


0x2dc0:	test	ebx, ebx
0x2dc2:	jne	0x31bd


0x4780:	movabs	rax, 0xc000000000000000
0x478a:	cmp	rbp, rax
0x478d:	jl	0x4ac0


0x47b0:	movabs	rax, 0xffc0000000000000
0x47ba:	cmp	rbp, rax
0x47bd:	jl	0x4ac0


0x47e0:	movsxd	rsi, eax
0x47e3:	movabs	rax, 0x8000000000000000
0x47ed:	mov	r8d, 7
0x47f3:	cqo	
0x47f5:	xor	r11d, r11d
0x47f8:	movabs	r9, 0x7fffffffffffffff
0x4802:	idiv	rsi
0x4805:	mov	r10, rax
0x4808:	jmp	0x482f


0x4850:	movsxd	rsi, eax
0x4853:	movabs	rax, 0x8000000000000000
0x485d:	mov	r8d, 8
0x4863:	cqo	
0x4865:	xor	r11d, r11d
0x4868:	movabs	r9, 0x7fffffffffffffff
0x4872:	idiv	rsi
0x4875:	mov	r10, rax
0x4878:	jmp	0x489f


0x48c0:	movabs	r8, 0x8000000000000000
0x48ca:	movsxd	rsi, eax
0x48cd:	mov	rax, r8
0x48d0:	cqo	
0x48d2:	idiv	rsi
0x48d5:	cmp	rbp, rax
0x48d8:	jl	0x4ac0


0x4900:	movsxd	rsi, eax
0x4903:	movabs	rax, 0x8000000000000000
0x490d:	mov	r8d, 3
0x4913:	cqo	
0x4915:	xor	r11d, r11d
0x4918:	movabs	r9, 0x7fffffffffffffff
0x4922:	idiv	rsi
0x4925:	mov	r10, rax
0x4928:	cmp	r10, rbp
0x492b:	jg	0x4b20


0x4960:	movsxd	rsi, eax
0x4963:	movabs	rax, 0x8000000000000000
0x496d:	mov	r8d, 6
0x4973:	cqo	
0x4975:	xor	r11d, r11d
0x4978:	movabs	r9, 0x7fffffffffffffff
0x4982:	idiv	rsi
0x4985:	mov	r10, rax
0x4988:	jmp	0x49ab


0x49c8:	movsxd	rsi, eax
0x49cb:	movabs	rax, 0x8000000000000000
0x49d5:	mov	r8d, 5
0x49db:	cqo	
0x49dd:	xor	r11d, r11d
0x49e0:	movabs	r9, 0x7fffffffffffffff
0x49ea:	idiv	rsi
0x49ed:	mov	r10, rax
0x49f0:	jmp	0x4a17


0x4a30:	movabs	rax, 0xffe0000000000000
0x4a3a:	cmp	rbp, rax
0x4a3d:	jl	0x4ac0


0x4a60:	movsxd	rsi, eax
0x4a63:	movabs	rax, 0x8000000000000000
0x4a6d:	mov	r8d, 4
0x4a73:	cqo	
0x4a75:	xor	r11d, r11d
0x4a78:	movabs	r9, 0x7fffffffffffffff
0x4a82:	idiv	rsi
0x4a85:	mov	r10, rax
0x4a88:	cmp	r10, rbp
0x4a8b:	jg	0x4af0


0x16e1:	nop	dword ptr [rax]


0x17bb:	nop	dword ptr [rax + rax]


0x17fb:	nop	dword ptr [rax + rax]


0x1a26:	nop	word ptr cs:[rax + rax]


0x1a77:	nop	word ptr [rax + rax]


0x1ac1:	nop	dword ptr [rax]


0x204c:	nop	dword ptr [rax]


0x209d:	nop	dword ptr [rax]


0x22c8:	nop	dword ptr [rax + rax]


0x23b7:	nop	word ptr [rax + rax]


0x23ee:	nop	


0x2411:	nop	dword ptr [rax]


0x2452:	nop	word ptr [rax + rax]


0x2464:	nop	dword ptr [rax]


0x2508:	nop	dword ptr [rax + rax]


0x2531:	nop	dword ptr [rax]


0x2547:	nop	word ptr [rax + rax]


0x255f:	nop	


0x258e:	nop	


0x259d:	nop	dword ptr [rax]


0x25af:	nop	


0x25bf:	nop	


0x25cf:	nop	


0x25df:	nop	


0x25ef:	nop	


0x265c:	nop	dword ptr [rax]


0x267c:	nop	dword ptr [rax]


0x268e:	nop	


0x269f:	nop	


0x26b2:	nop	word ptr [rax + rax]


0x26ca:	nop	word ptr [rax + rax]


0x26da:	nop	word ptr [rax + rax]


0x277b:	nop	dword ptr [rax + rax]


0x2795:	nop	dword ptr [rax]


0x27a8:	nop	dword ptr [rax + rax]


0x27c3:	nop	dword ptr [rax + rax]


0x27f2:	nop	word ptr [rax + rax]


0x2802:	nop	word ptr [rax + rax]


0x281a:	nop	word ptr [rax + rax]


0x282a:	nop	word ptr [rax + rax]


0x2838:	nop	dword ptr [rax + rax]


0x285f:	nop	


0x28f9:	nop	dword ptr [rax]


0x2942:	nop	word ptr [rax + rax]


0x2968:	nop	dword ptr [rax + rax]


0x2981:	nop	dword ptr [rax]


0x29a2:	nop	word ptr [rax + rax]


0x2b08:	nop	dword ptr [rax + rax]


0x2c1b:	nop	dword ptr [rax + rax]


0x2c3e:	nop	


0x2d05:	nop	dword ptr [rax]


0x2dbd:	nop	dword ptr [rax]


0x2fc6:	nop	word ptr cs:[rax + rax]


0x3059:	nop	dword ptr [rax]


0x30cd:	nop	dword ptr [rax]


0x31ad:	nop	dword ptr [rax]


0x34bb:	nop	dword ptr [rax + rax]


0x3d46:	nop	word ptr cs:[rax + rax]


0x3dd5:	nop	dword ptr [rax]


0x3df6:	nop	word ptr cs:[rax + rax]


0x3e55:	nop	dword ptr [rax]


0x3e91:	nop	dword ptr [rax]


0x3ed8:	nop	dword ptr [rax + rax]


0x3f27:	nop	word ptr [rax + rax]


0x3f84:	nop	dword ptr [rax]


0x3fb2:	nop	word ptr [rax + rax]


0x4066:	nop	word ptr cs:[rax + rax]


0x40c9:	nop	dword ptr [rax]


0x4342:	nop	word ptr [rax + rax]


0x43c9:	nop	dword ptr [rax]


0x43f4:	nop	dword ptr [rax]


0x444d:	nop	dword ptr [rax]


0x45fd:	nop	dword ptr [rax]


0x4613:	nop	dword ptr [rax + rax]


0x46c2:	nop	word ptr [rax + rax]


0x46d4:	nop	dword ptr [rax]


0x477b:	nop	dword ptr [rax + rax]


0x47ab:	nop	dword ptr [rax + rax]


0x47dc:	nop	dword ptr [rax]


0x480a:	nop	word ptr [rax + rax]


0x4846:	nop	word ptr cs:[rax + rax]


0x487a:	nop	word ptr [rax + rax]


0x48b6:	nop	word ptr cs:[rax + rax]


0x48fc:	nop	dword ptr [rax]


0x494c:	nop	dword ptr [rax]


0x4958:	nop	dword ptr [rax + rax]


0x498a:	nop	word ptr [rax + rax]


0x49c2:	nop	word ptr [rax + rax]


0x49f2:	nop	word ptr [rax + rax]


0x4a2e:	nop	


0x4a5f:	nop	


0x4aad:	nop	dword ptr [rax]


0x4abb:	nop	dword ptr [rax + rax]


0x4ad5:	nop	dword ptr [rax]


0x4aed:	nop	dword ptr [rax]


0x4b02:	nop	word ptr [rax + rax]


0x4b1d:	nop	dword ptr [rax]


0x4b35:	nop	dword ptr [rax]


0x4b4d:	nop	dword ptr [rax]


0x4b65:	nop	dword ptr [rax]


0x4b7d:	nop	dword ptr [rax]


0x4b95:	nop	dword ptr [rax]


0x4cd4:	nop	dword ptr [rax]


0x4cf1:	nop	dword ptr [rax]


0x4d02:	nop	word ptr [rax + rax]


0x4d5a:	nop	word ptr [rax + rax]


0x4da6:	nop	word ptr cs:[rax + rax]


0x4e05:	nop	dword ptr [rax]


0x4e63:	nop	dword ptr [rax + rax]


0x4e8f:	nop	


