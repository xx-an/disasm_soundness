0x5810:	sub	rsp, 8
0x5814:	add	rsp, 8
0x5818:	ret	


0x5800:	mov	rdx, qword ptr [rip + 0x202801]
0x5807:	xor	esi, esi
0x5809:	jmp	0x1660


0x57f0:	ret	


0x5780:	push	r15
0x5782:	push	r14
0x5784:	mov	r15, rdx
0x5787:	push	r13
0x5789:	push	r12
0x578b:	lea	r12, [rip + 0x20237e]
0x5792:	push	rbp
0x5793:	lea	rbp, [rip + 0x20237e]
0x579a:	push	rbx
0x579b:	mov	r13d, edi
0x579e:	mov	r14, rsi
0x57a1:	sub	rbp, r12
0x57a4:	sub	rsp, 8
0x57a8:	sar	rbp, 3
0x57ac:	call	0x13b8


0x5720:	mov	rax, qword ptr [rdi + 8]
0x5724:	cmp	qword ptr [rdi + 0x10], rax
0x5728:	je	0x5730


0x56e0:	test	rdi, rdi
0x56e3:	push	rbx
0x56e4:	mov	rbx, rdi
0x56e7:	je	0x56fa


0x5660:	push	r12
0x5662:	push	rbp
0x5663:	push	rbx
0x5664:	mov	rbx, rdi
0x5667:	call	0x1590


0x5620:	sub	rsp, 8
0x5624:	mov	edi, 0xe
0x5629:	call	0x15d0


0x55c0:	sub	rsp, 8
0x55c4:	xor	esi, esi
0x55c6:	call	0x1610


0x5540:	push	r12
0x5542:	push	rbp
0x5543:	mov	rbp, rdi
0x5546:	push	rbx
0x5547:	call	0x1430


0x54b0:	push	r13
0x54b2:	push	r12
0x54b4:	mov	r13, rsi
0x54b7:	push	rbp
0x54b8:	push	rbx
0x54b9:	mov	rbx, rdi
0x54bc:	mov	r12, rdx
0x54bf:	sub	rsp, 0x18
0x54c3:	mov	rax, qword ptr fs:[0x28]
0x54cc:	mov	qword ptr [rsp + 8], rax
0x54d1:	xor	eax, eax
0x54d3:	lea	rax, [rsp + 4]
0x54d8:	test	rdi, rdi
0x54db:	cmove	rbx, rax
0x54df:	mov	rdi, rbx
0x54e2:	call	0x14d0


0x4df0:	push	r15
0x4df2:	push	r14
0x4df4:	push	r13
0x4df6:	push	r12
0x4df8:	push	rbp
0x4df9:	push	rbx
0x4dfa:	sub	rsp, 0x28
0x4dfe:	mov	rax, qword ptr fs:[0x28]
0x4e07:	mov	qword ptr [rsp + 0x18], rax
0x4e0c:	xor	eax, eax
0x4e0e:	cmp	edx, 0x24
0x4e11:	ja	0x547f


0x4dc0:	sub	rsp, 0x10
0x4dc4:	push	r9
0x4dc6:	mov	r9, r8
0x4dc9:	mov	r8, rcx
0x4dcc:	mov	rcx, rdx
0x4dcf:	mov	rdx, rsi
0x4dd2:	mov	esi, 0xa
0x4dd7:	call	0x4ca0


0x4ca0:	push	r15
0x4ca2:	push	r14
0x4ca4:	mov	r15, rcx
0x4ca7:	push	r13
0x4ca9:	push	r12
0x4cab:	mov	r14, rdx
0x4cae:	push	rbp
0x4caf:	push	rbx
0x4cb0:	mov	edx, esi
0x4cb2:	xor	esi, esi
0x4cb4:	mov	r12, rdi
0x4cb7:	mov	r13, r9
0x4cba:	sub	rsp, 0x18
0x4cbe:	mov	rcx, rsp
0x4cc1:	mov	ebx, dword ptr [rsp + 0x50]
0x4cc5:	mov	rax, qword ptr fs:[0x28]
0x4cce:	mov	qword ptr [rsp + 8], rax
0x4cd3:	xor	eax, eax
0x4cd5:	call	0x4df0


0x4c60:	lea	rsi, [rip + 0x1cc8]
0x4c67:	sub	rsp, 8
0x4c6b:	mov	edx, 5
0x4c70:	xor	edi, edi
0x4c72:	call	0x1480


0x4c40:	push	rbx
0x4c41:	mov	rbx, rdi
0x4c44:	call	0x14a0


0x4c10:	push	rbp
0x4c11:	push	rbx
0x4c12:	mov	rbp, rdi
0x4c15:	mov	rdi, rsi
0x4c18:	mov	rbx, rsi
0x4c1b:	sub	rsp, 8
0x4c1f:	call	0x4a10


0x4be0:	mov	rax, rdi
0x4be3:	sub	rsp, 8
0x4be7:	mul	rsi
0x4bea:	seto	dl
0x4bed:	test	rax, rax
0x4bf0:	js	0x4c09


0x4bc0:	push	rbx
0x4bc1:	mov	rbx, rdi
0x4bc4:	call	0x4a10


0x4b70:	test	rdi, rdi
0x4b73:	mov	rax, qword ptr [rsi]
0x4b76:	je	0x4ba0


0x4ae0:	test	rdi, rdi
0x4ae3:	mov	r9, rdx
0x4ae6:	mov	rcx, qword ptr [rsi]
0x4ae9:	je	0x4b20


0x4ab0:	mov	rax, rsi
0x4ab3:	mul	rdx
0x4ab6:	mov	rsi, rax
0x4ab9:	seto	al
0x4abc:	test	rsi, rsi
0x4abf:	js	0x4acb


0x4a70:	test	rsi, rsi
0x4a73:	push	rbx
0x4a74:	mov	rbx, rsi
0x4a77:	jne	0x4a7e


0x4a60:	jmp	0x4a10


0x4a30:	mov	rax, rdi
0x4a33:	mul	rsi
0x4a36:	mov	rdi, rax
0x4a39:	seto	al
0x4a3c:	test	rdi, rdi
0x4a3f:	js	0x4a4b


0x4a10:	push	rbx
0x4a11:	mov	rbx, rdi
0x4a14:	call	0x15b0


0x4990:	push	rbx
0x4991:	lea	rsi, [rip + 0x1c8a]
0x4998:	mov	edx, 5
0x499d:	xor	edi, edi
0x499f:	call	0x1480


0x48b0:	push	rbp
0x48b1:	push	rbx
0x48b2:	mov	r10d, 0x20
0x48b8:	xor	r11d, r11d
0x48bb:	sub	rsp, 0xb8
0x48c2:	mov	rax, qword ptr fs:[0x28]
0x48cb:	mov	qword ptr [rsp + 0x78], rax
0x48d0:	xor	eax, eax
0x48d2:	lea	rax, [rsp + 0xd0]
0x48da:	mov	qword ptr [rsp + 0xa0], r8
0x48e2:	lea	rbx, [rsp + 0xd0]
0x48ea:	lea	r8, [rsp + 0x20]
0x48ef:	mov	qword ptr [rsp + 0xa8], r9
0x48f7:	mov	dword ptr [rsp + 8], 0x20
0x48ff:	mov	qword ptr [rsp + 0x10], rax
0x4904:	lea	rax, [rsp + 0x80]
0x490c:	xor	r9d, r9d
0x490f:	mov	qword ptr [rsp + 0x18], rax
0x4914:	mov	rbp, rax
0x4917:	nop	word ptr [rax + rax]
0x4920:	cmp	r10d, 0x2f
0x4924:	ja	0x497c


0x4830:	sub	rsp, 0x68
0x4834:	mov	r10, r8
0x4837:	xor	r9d, r9d
0x483a:	mov	rax, qword ptr fs:[0x28]
0x4843:	mov	qword ptr [rsp + 0x58], rax
0x4848:	xor	eax, eax
0x484a:	mov	r8, rsp
0x484d:	nop	dword ptr [rax]
0x4850:	mov	eax, dword ptr [r10]
0x4853:	cmp	eax, 0x2f
0x4856:	ja	0x489a


0x4810:	xor	r9d, r9d
0x4813:	cmp	qword ptr [r8], 0
0x4817:	je	0x482b


0x43f0:	push	r15
0x43f2:	push	r14
0x43f4:	push	r13
0x43f6:	push	r12
0x43f8:	mov	r12, r9
0x43fb:	push	rbp
0x43fc:	push	rbx
0x43fd:	mov	rbp, rdi
0x4400:	mov	rbx, r8
0x4403:	sub	rsp, 0x28
0x4407:	test	rsi, rsi
0x440a:	je	0x4528


0x43d0:	lea	rcx, [rip + 0x203c49]
0x43d7:	mov	rsi, rdi
0x43da:	mov	rdx, -1
0x43e1:	xor	edi, edi
0x43e3:	jmp	0x3a90


0x43b0:	lea	rcx, [rip + 0x203c69]
0x43b7:	mov	rdx, -1
0x43be:	jmp	0x3a90


0x4390:	lea	rcx, [rip + 0x203c89]
0x4397:	mov	rdx, rsi
0x439a:	mov	rsi, rdi
0x439d:	xor	edi, edi
0x439f:	jmp	0x3a90


0x4380:	lea	rcx, [rip + 0x203c99]
0x4387:	jmp	0x3a90


0x4360:	mov	r8, rcx
0x4363:	mov	rcx, rdx
0x4366:	mov	rdx, rsi
0x4369:	mov	rsi, rdi
0x436c:	xor	edi, edi
0x436e:	jmp	0x4290


0x4340:	mov	rcx, rdx
0x4343:	mov	r8, -1
0x434a:	mov	rdx, rsi
0x434d:	mov	rsi, rdi
0x4350:	xor	edi, edi
0x4352:	jmp	0x4290


0x4330:	mov	r8, -1
0x4337:	jmp	0x4290


0x4290:	sub	rsp, 0x48
0x4294:	mov	r9, rcx
0x4297:	mov	rcx, qword ptr [rip + 0x203f92]
0x429e:	movdqa	xmm0, xmmword ptr [rip + 0x203f5a]
0x42a6:	mov	rax, qword ptr fs:[0x28]
0x42af:	mov	qword ptr [rsp + 0x38], rax
0x42b4:	xor	eax, eax
0x42b6:	movaps	xmmword ptr [rsp], xmm0
0x42ba:	test	rsi, rsi
0x42bd:	mov	qword ptr [rsp + 0x30], rcx
0x42c2:	mov	dword ptr [rsp], 0xa
0x42c9:	movdqa	xmm0, xmmword ptr [rip + 0x203f3f]
0x42d1:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x42d6:	movdqa	xmm0, xmmword ptr [rip + 0x203f42]
0x42de:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x42e3:	je	0x4317


0x4200:	sub	rsp, 0x48
0x4204:	mov	rax, rdx
0x4207:	mov	rdx, qword ptr fs:[0x28]
0x4210:	mov	qword ptr [rsp + 0x38], rdx
0x4215:	xor	edx, edx
0x4217:	cmp	esi, 0xa
0x421a:	je	0x4284


0x41f0:	mov	edx, 0x3a
0x41f5:	jmp	0x4120


0x41d0:	mov	edx, 0x3a
0x41d5:	mov	rsi, -1
0x41dc:	jmp	0x4120


0x41c0:	movsx	edx, sil
0x41c4:	mov	rsi, -1
0x41cb:	jmp	0x4120


0x4120:	sub	rsp, 0x48
0x4124:	mov	ecx, edx
0x4126:	mov	rax, qword ptr fs:[0x28]
0x412f:	mov	qword ptr [rsp + 0x38], rax
0x4134:	xor	eax, eax
0x4136:	mov	rax, qword ptr [rip + 0x2040f3]
0x413d:	mov	r8, rsp
0x4140:	and	ecx, 0x1f
0x4143:	movdqa	xmm0, xmmword ptr [rip + 0x2040b5]
0x414b:	mov	qword ptr [rsp + 0x30], rax
0x4150:	mov	eax, edx
0x4152:	movaps	xmmword ptr [rsp], xmm0
0x4156:	shr	al, 5
0x4159:	movzx	eax, al
0x415c:	lea	r9, [r8 + rax*4 + 8]
0x4161:	movdqa	xmm0, xmmword ptr [rip + 0x2040a7]
0x4169:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x416e:	movdqa	xmm0, xmmword ptr [rip + 0x2040aa]
0x4176:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x417b:	mov	edx, dword ptr [r9]
0x417e:	mov	eax, edx
0x4180:	shr	eax, cl
0x4182:	not	eax
0x4184:	and	eax, 1
0x4187:	shl	eax, cl
0x4189:	mov	rcx, r8
0x418c:	xor	eax, edx
0x418e:	mov	rdx, rsi
0x4191:	mov	rsi, rdi
0x4194:	mov	dword ptr [r9], eax
0x4197:	xor	edi, edi
0x4199:	call	0x3a90


0x4110:	mov	rcx, rdx
0x4113:	mov	rdx, rsi
0x4116:	mov	esi, edi
0x4118:	xor	edi, edi
0x411a:	jmp	0x4070


0x4100:	mov	rdx, rsi
0x4103:	mov	esi, edi
0x4105:	xor	edi, edi
0x4107:	jmp	0x3fe0


0x4070:	sub	rsp, 0x48
0x4074:	mov	rax, rdx
0x4077:	mov	rdx, rcx
0x407a:	mov	rcx, qword ptr fs:[0x28]
0x4083:	mov	qword ptr [rsp + 0x38], rcx
0x4088:	xor	ecx, ecx
0x408a:	cmp	esi, 0xa
0x408d:	je	0x40f0


0x3fe0:	sub	rsp, 0x48
0x3fe4:	mov	rax, rdx
0x3fe7:	mov	rdx, qword ptr fs:[0x28]
0x3ff0:	mov	qword ptr [rsp + 0x38], rdx
0x3ff5:	xor	edx, edx
0x3ff7:	cmp	esi, 0xa
0x3ffa:	je	0x4064


0x3fc0:	lea	rcx, [rip + 0x204239]
0x3fc7:	mov	rdx, rsi
0x3fca:	mov	rsi, rdi
0x3fcd:	xor	edi, edi
0x3fcf:	jmp	0x3a90


0x3fa0:	lea	rcx, [rip + 0x204259]
0x3fa7:	mov	rsi, rdi
0x3faa:	mov	rdx, -1
0x3fb1:	xor	edi, edi
0x3fb3:	jmp	0x3a90


0x3f90:	lea	rcx, [rip + 0x204269]
0x3f97:	jmp	0x3a90


0x3f70:	lea	rcx, [rip + 0x204289]
0x3f77:	mov	rdx, -1
0x3f7e:	jmp	0x3a90


0x3ed0:	mov	eax, dword ptr [rip + 0x204182]
0x3ed6:	push	r12
0x3ed8:	mov	r12, qword ptr [rip + 0x204181]
0x3edf:	push	rbp
0x3ee0:	push	rbx
0x3ee1:	cmp	eax, 1
0x3ee4:	jle	0x3f11


0x3ec0:	mov	rcx, rdx
0x3ec3:	xor	edx, edx
0x3ec5:	jmp	0x3dd0


0x3dd0:	push	r15
0x3dd2:	push	r14
0x3dd4:	lea	rax, [rip + 0x204425]
0x3ddb:	push	r13
0x3ddd:	push	r12
0x3ddf:	mov	r12, rdx
0x3de2:	push	rbp
0x3de3:	push	rbx
0x3de4:	mov	rbx, rcx
0x3de7:	mov	r14, rdi
0x3dea:	mov	r15, rsi
0x3ded:	sub	rsp, 0x38
0x3df1:	test	rcx, rcx
0x3df4:	cmove	rbx, rax
0x3df8:	xor	ebp, ebp
0x3dfa:	call	0x1400


0x3d50:	push	r15
0x3d52:	push	r14
0x3d54:	lea	rax, [rip + 0x2044a5]
0x3d5b:	push	r13
0x3d5d:	push	r12
0x3d5f:	mov	r13, rdi
0x3d62:	push	rbp
0x3d63:	push	rbx
0x3d64:	mov	rbx, r8
0x3d67:	mov	r14, rsi
0x3d6a:	mov	r15, rdx
0x3d6d:	sub	rsp, 0x18
0x3d71:	test	r8, r8
0x3d74:	cmove	rbx, rax
0x3d78:	mov	qword ptr [rsp + 8], rcx
0x3d7d:	call	0x1400


0x3d20:	lea	rax, [rip + 0x2044d9]
0x3d27:	test	rdi, rdi
0x3d2a:	cmove	rdi, rax
0x3d2e:	test	rsi, rsi
0x3d31:	mov	dword ptr [rdi], 0xa
0x3d37:	je	0x3d47


0x3d00:	lea	rax, [rip + 0x2044f9]
0x3d07:	test	rdi, rdi
0x3d0a:	cmove	rdi, rax
0x3d0e:	mov	eax, dword ptr [rdi + 4]
0x3d11:	mov	dword ptr [rdi + 4], esi
0x3d14:	ret	


0x3cc0:	lea	rax, [rip + 0x204539]
0x3cc7:	test	rdi, rdi
0x3cca:	mov	ecx, esi
0x3ccc:	cmove	rdi, rax
0x3cd0:	mov	eax, esi
0x3cd2:	and	ecx, 0x1f
0x3cd5:	shr	al, 5
0x3cd8:	movzx	eax, al
0x3cdb:	lea	rdi, [rdi + rax*4 + 8]
0x3ce0:	mov	esi, dword ptr [rdi]
0x3ce2:	mov	eax, esi
0x3ce4:	shr	eax, cl
0x3ce6:	xor	edx, eax
0x3ce8:	and	eax, 1
0x3ceb:	and	edx, 1
0x3cee:	shl	edx, cl
0x3cf0:	xor	edx, esi
0x3cf2:	mov	dword ptr [rdi], edx
0x3cf4:	ret	


0x3ca0:	lea	rax, [rip + 0x204559]
0x3ca7:	test	rdi, rdi
0x3caa:	cmove	rdi, rax
0x3cae:	mov	dword ptr [rdi], esi
0x3cb0:	ret	


0x3c80:	lea	rax, [rip + 0x204579]
0x3c87:	test	rdi, rdi
0x3c8a:	cmove	rdi, rax
0x3c8e:	mov	eax, dword ptr [rdi]
0x3c90:	ret	


0x3c40:	push	r12
0x3c42:	push	rbp
0x3c43:	push	rbx
0x3c44:	mov	rbx, rdi
0x3c47:	call	0x1400


0x3a90:	push	r15
0x3a92:	push	r14
0x3a94:	movsxd	r15, edi
0x3a97:	push	r13
0x3a99:	push	r12
0x3a9b:	mov	r14, rdx
0x3a9e:	push	rbp
0x3a9f:	push	rbx
0x3aa0:	mov	rbp, rcx
0x3aa3:	sub	rsp, 0x28
0x3aa7:	mov	qword ptr [rsp + 8], rsi
0x3aac:	call	0x1400


0x2850:	push	r15
0x2852:	push	r14
0x2854:	mov	r15d, r8d
0x2857:	push	r13
0x2859:	push	r12
0x285b:	mov	r14, rdi
0x285e:	push	rbp
0x285f:	push	rbx
0x2860:	mov	ebx, r9d
0x2863:	mov	r13, rsi
0x2866:	mov	rbp, rcx
0x2869:	and	ebx, 2
0x286c:	sub	rsp, 0xb8
0x2873:	mov	rax, qword ptr [rsp + 0xf0]
0x287b:	mov	qword ptr [rsp + 0x10], rdx
0x2880:	mov	dword ptr [rsp + 8], r8d
0x2885:	mov	dword ptr [rsp + 0x78], r9d
0x288a:	mov	qword ptr [rsp + 0x20], rax
0x288f:	mov	rax, qword ptr [rsp + 0xf8]
0x2897:	mov	qword ptr [rsp + 0x68], rax
0x289c:	mov	rax, qword ptr [rsp + 0x100]
0x28a4:	mov	qword ptr [rsp + 0x60], rax
0x28a9:	mov	rax, qword ptr fs:[0x28]
0x28b2:	mov	qword ptr [rsp + 0xa8], rax
0x28ba:	xor	eax, eax
0x28bc:	call	0x1490


0x2760:	push	rbp
0x2761:	push	rbx
0x2762:	mov	rbp, rdi
0x2765:	mov	ebx, esi
0x2767:	sub	rsp, 8
0x276b:	call	0x5620


0x26c0:	test	rdi, rdi
0x26c3:	push	rbx
0x26c4:	je	0x273d


0x2610:	push	rbp
0x2611:	push	rbx
0x2612:	sub	rsp, 8
0x2616:	mov	rdi, qword ptr [rip + 0x205a6b]
0x261d:	call	0x5540


0x2600:	mov	byte ptr [rip + 0x205ad9], dil
0x2607:	ret	


0x25f0:	mov	qword ptr [rip + 0x205af1], rdi
0x25f7:	ret	


0x21d0:	push	r13
0x21d2:	push	r12
0x21d4:	mov	edx, 5
0x21d9:	push	rbp
0x21da:	push	rbx
0x21db:	mov	ebp, edi
0x21dd:	sub	rsp, 0x88
0x21e4:	mov	rbx, qword ptr [rip + 0x205f05]
0x21eb:	mov	rax, qword ptr fs:[0x28]
0x21f4:	mov	qword ptr [rsp + 0x78], rax
0x21f9:	xor	eax, eax
0x21fb:	test	edi, edi
0x21fd:	je	0x222d


0x21c0:	push	rbp
0x21c1:	mov	rbp, rsp
0x21c4:	pop	rbp
0x21c5:	jmp	0x2130


0x2180:	cmp	byte ptr [rip + 0x205f41], 0
0x2187:	jne	0x21b8


0x2130:	lea	rdi, [rip + 0x205f49]
0x2137:	lea	rsi, [rip + 0x205f42]
0x213e:	push	rbp
0x213f:	sub	rsi, rdi
0x2142:	mov	rbp, rsp
0x2145:	sar	rsi, 3
0x2149:	mov	rax, rsi
0x214c:	shr	rax, 0x3f
0x2150:	add	rsi, rax
0x2153:	sar	rsi, 1
0x2156:	je	0x2170


0x20f0:	lea	rdi, [rip + 0x205f89]
0x20f7:	push	rbp
0x20f8:	lea	rax, [rip + 0x205f81]
0x20ff:	cmp	rax, rdi
0x2102:	mov	rbp, rsp
0x2105:	je	0x2120


0x20c0:	xor	ebp, ebp
0x20c2:	mov	r9, rdx
0x20c5:	pop	rsi
0x20c6:	mov	rdx, rsp
0x20c9:	and	rsp, 0xfffffffffffffff0
0x20cd:	push	rax
0x20ce:	push	rsp
0x20cf:	lea	r8, [rip + 0x371a]
0x20d6:	lea	rcx, [rip + 0x36a3]
0x20dd:	lea	rdi, [rip - 0xa04]
0x20e4:	call	qword ptr [rip + 0x205ef6]


0x16e0:	push	r15
0x16e2:	push	r14
0x16e4:	push	r13
0x16e6:	push	r12
0x16e8:	mov	r13d, edi
0x16eb:	push	rbp
0x16ec:	push	rbx
0x16ed:	mov	rbp, rsi
0x16f0:	xor	ebx, ebx
0x16f2:	xor	r12d, r12d
0x16f5:	sub	rsp, 0xd8
0x16fc:	mov	rdi, qword ptr [rsi]
0x16ff:	mov	rax, qword ptr fs:[0x28]
0x1708:	mov	qword ptr [rsp + 0xc8], rax
0x1710:	xor	eax, eax
0x1712:	call	0x26c0


0x13b8:	sub	rsp, 8
0x13bc:	mov	rax, qword ptr [rip + 0x206c25]
0x13c3:	test	rax, rax
0x13c6:	je	0x13ca


0x1660:	jmp	qword ptr [rip + 0x20693a]


0x5730:	mov	rax, qword ptr [rdi + 0x20]
0x5734:	cmp	qword ptr [rdi + 0x28], rax
0x5738:	jne	0x572a


0x572a:	jmp	0x1650


0x56fa:	mov	rdi, rbx
0x56fd:	pop	rbx
0x56fe:	jmp	0x15c0


0x56e9:	call	0x15f0


0x1590:	jmp	qword ptr [rip + 0x2069a2]


0x15d0:	jmp	qword ptr [rip + 0x206982]


0x1610:	jmp	qword ptr [rip + 0x206962]


0x1430:	jmp	qword ptr [rip + 0x206a52]


0x14d0:	jmp	qword ptr [rip + 0x206a02]


0x4e17:	lea	rax, [rsp + 0x10]
0x4e1c:	test	rsi, rsi
0x4e1f:	mov	rbx, rsi
0x4e22:	mov	r12, rdi
0x4e25:	mov	ebp, edx
0x4e27:	mov	r14, rcx
0x4e2a:	cmove	rbx, rax
0x4e2e:	mov	r15, r8
0x4e31:	call	0x1400


0x547f:	lea	rcx, [rip + 0x15da]
0x5486:	lea	rsi, [rip + 0x14b3]
0x548d:	lea	rdi, [rip + 0x14cc]
0x5494:	mov	edx, 0x54
0x5499:	call	0x1520


0x1480:	jmp	qword ptr [rip + 0x206a2a]


0x14a0:	jmp	qword ptr [rip + 0x206a1a]


0x4c09:	call	0x4c60


0x4bf2:	movzx	edx, dl
0x4bf5:	test	rdx, rdx
0x4bf8:	jne	0x4c09


0x4ba0:	test	rax, rax
0x4ba3:	mov	edx, 0x80
0x4ba8:	cmove	rax, rdx
0x4bac:	test	rax, rax
0x4baf:	jns	0x4b92


0x4b78:	movabs	rdx, 0x5555555555555553
0x4b82:	cmp	rax, rdx
0x4b85:	ja	0x4bb1


0x4b20:	test	rcx, rcx
0x4b23:	je	0x4b48


0x4aeb:	xor	edx, edx
0x4aed:	movabs	rax, 0x5555555555555554
0x4af7:	div	r9
0x4afa:	cmp	rax, rcx
0x4afd:	jbe	0x4b3b


0x4acb:	sub	rsp, 8
0x4acf:	call	0x4c60


0x4ac1:	movzx	eax, al
0x4ac4:	test	rax, rax
0x4ac7:	jne	0x4acb


0x4a79:	test	rdi, rdi
0x4a7c:	jne	0x4a98


0x4a7e:	mov	rsi, rbx
0x4a81:	call	0x1600


0x4a4b:	sub	rsp, 8
0x4a4f:	call	0x4c60


0x4a41:	movzx	eax, al
0x4a44:	test	rax, rax
0x4a47:	jne	0x4a4b


0x15b0:	jmp	qword ptr [rip + 0x206992]


0x4926:	mov	eax, r10d
0x4929:	mov	r11d, 1
0x492f:	add	r10d, 8
0x4933:	add	rax, rbp
0x4936:	mov	rax, qword ptr [rax]
0x4939:	test	rax, rax
0x493c:	mov	qword ptr [r8 + r9*8], rax
0x4940:	je	0x494c


0x497c:	mov	rax, rbx
0x497f:	add	rbx, 8
0x4983:	jmp	0x4936


0x4858:	mov	r11d, eax
0x485b:	add	r11, qword ptr [r10 + 0x10]
0x485f:	add	eax, 8
0x4862:	mov	dword ptr [r10], eax
0x4865:	mov	rax, qword ptr [r11]
0x4868:	test	rax, rax
0x486b:	mov	qword ptr [r8 + r9*8], rax
0x486f:	je	0x487b


0x489a:	mov	r11, qword ptr [r10 + 8]
0x489e:	lea	rax, [r11 + 8]
0x48a2:	mov	qword ptr [r10 + 8], rax
0x48a6:	jmp	0x4865


0x482b:	jmp	0x43f0


0x4528:	mov	r8, rcx
0x452b:	mov	rcx, rdx
0x452e:	lea	rdx, [rip + 0x209f]
0x4535:	mov	esi, 1
0x453a:	xor	eax, eax
0x453c:	call	0x1690


0x4410:	mov	r8, rdx
0x4413:	lea	rdx, [rip + 0x21ae]
0x441a:	mov	r9, rcx
0x441d:	xor	eax, eax
0x441f:	mov	rcx, rsi
0x4422:	mov	esi, 1
0x4427:	call	0x1690


0x4317:	call	0x13f0


0x42e5:	test	rdx, rdx
0x42e8:	je	0x4317


0x4284:	call	0x13f0


0x421c:	mov	dword ptr [rsp], esi
0x421f:	mov	rcx, rsp
0x4222:	mov	rdx, -1
0x4229:	mov	rsi, rax
0x422c:	mov	qword ptr [rsp + 4], 0
0x4235:	mov	qword ptr [rsp + 0xc], 0x4000000
0x423e:	mov	qword ptr [rsp + 0x14], 0
0x4247:	mov	qword ptr [rsp + 0x1c], 0
0x4250:	mov	qword ptr [rsp + 0x24], 0
0x4259:	mov	qword ptr [rsp + 0x2c], 0
0x4262:	mov	dword ptr [rsp + 0x34], 0
0x426a:	call	0x3a90


0x40f0:	call	0x13f0


0x408f:	mov	dword ptr [rsp], esi
0x4092:	mov	rcx, rsp
0x4095:	mov	rsi, rax
0x4098:	mov	qword ptr [rsp + 4], 0
0x40a1:	mov	qword ptr [rsp + 0xc], 0
0x40aa:	mov	qword ptr [rsp + 0x14], 0
0x40b3:	mov	qword ptr [rsp + 0x1c], 0
0x40bc:	mov	qword ptr [rsp + 0x24], 0
0x40c5:	mov	qword ptr [rsp + 0x2c], 0
0x40ce:	mov	dword ptr [rsp + 0x34], 0
0x40d6:	call	0x3a90


0x4064:	call	0x13f0


0x3ffc:	mov	dword ptr [rsp], esi
0x3fff:	mov	rcx, rsp
0x4002:	mov	rdx, -1
0x4009:	mov	rsi, rax
0x400c:	mov	qword ptr [rsp + 4], 0
0x4015:	mov	qword ptr [rsp + 0xc], 0
0x401e:	mov	qword ptr [rsp + 0x14], 0
0x4027:	mov	qword ptr [rsp + 0x1c], 0
0x4030:	mov	qword ptr [rsp + 0x24], 0
0x4039:	mov	qword ptr [rsp + 0x2c], 0
0x4042:	mov	dword ptr [rsp + 0x34], 0
0x404a:	call	0x3a90


0x3f11:	mov	rdi, qword ptr [r12 + 8]
0x3f16:	lea	rbx, [rip + 0x2041e3]
0x3f1d:	cmp	rdi, rbx
0x3f20:	je	0x3f39


0x3ee6:	sub	eax, 2
0x3ee9:	lea	rbx, [r12 + 0x18]
0x3eee:	shl	rax, 4
0x3ef2:	lea	rbp, [r12 + rax + 0x28]
0x3ef7:	nop	word ptr [rax + rax]
0x3f00:	mov	rdi, qword ptr [rbx]
0x3f03:	add	rbx, 0x10
0x3f07:	call	0x13e0


0x1400:	jmp	qword ptr [rip + 0x206a6a]


0x3d47:	sub	rsp, 8
0x3d4b:	call	0x13f0


0x3d39:	test	rdx, rdx
0x3d3c:	je	0x3d47


0x1490:	jmp	qword ptr [rip + 0x206a22]


0x273d:	mov	rcx, qword ptr [rip + 0x20597c]
0x2744:	lea	rdi, [rip + 0x3965]
0x274b:	mov	edx, 0x37
0x2750:	mov	esi, 1
0x2755:	call	0x1680


0x26c6:	mov	esi, 0x2f
0x26cb:	mov	rbx, rdi
0x26ce:	call	0x14f0


0x222d:	lea	rsi, [rip + 0x35f9]
0x2234:	xor	edi, edi
0x2236:	call	0x1480


0x21ff:	lea	rsi, [rip + 0x37fa]
0x2206:	xor	edi, edi
0x2208:	call	0x1480


0x2189:	cmp	qword ptr [rip + 0x205e67], 0
0x2191:	push	rbp
0x2192:	mov	rbp, rsp
0x2195:	je	0x21a3


0x21b8:	ret	


0x2170:	pop	rbp
0x2171:	ret	


0x2158:	mov	rax, qword ptr [rip + 0x205e91]
0x215f:	test	rax, rax
0x2162:	je	0x2170


0x2120:	pop	rbp
0x2121:	ret	


0x2107:	mov	rax, qword ptr [rip + 0x205eca]
0x210e:	test	rax, rax
0x2111:	je	0x2120




0x13ca:	add	rsp, 8
0x13ce:	ret	


0x13c8:	call	rax




0x573a:	cmp	qword ptr [rdi + 0x48], 0
0x573f:	jne	0x572a


0x1650:	jmp	qword ptr [rip + 0x206942]


0x15c0:	jmp	qword ptr [rip + 0x20698a]


0x15f0:	jmp	qword ptr [rip + 0x206972]












0x1520:	jmp	qword ptr [rip + 0x2069da]






0x4bfa:	call	0x1570


0x4bb1:	sub	rsp, 8
0x4bb5:	call	0x4c60


0x4b92:	mov	qword ptr [rsi], rax
0x4b95:	mov	rsi, rax
0x4b98:	jmp	0x4a70


0x4b87:	mov	rdx, rax
0x4b8a:	shr	rdx, 1
0x4b8d:	lea	rax, [rdx + rax + 1]
0x4b92:	mov	qword ptr [rsi], rax
0x4b95:	mov	rsi, rax
0x4b98:	jmp	0x4a70


0x4b48:	xor	edx, edx
0x4b4a:	mov	eax, 0x80
0x4b4f:	xor	r8d, r8d
0x4b52:	div	r9
0x4b55:	test	rax, rax
0x4b58:	sete	r8b
0x4b5c:	lea	rcx, [r8 + rax]
0x4b60:	jmp	0x4b25


0x4b25:	mov	rax, rcx
0x4b28:	mul	r9
0x4b2b:	seto	dl
0x4b2e:	test	rax, rax
0x4b31:	movzx	edx, dl
0x4b34:	js	0x4b3b


0x4b3b:	sub	rsp, 8
0x4b3f:	call	0x4c60


0x4aff:	mov	rax, rcx
0x4b02:	shr	rax, 1
0x4b05:	lea	rcx, [rax + rcx + 1]
0x4b0a:	mov	qword ptr [rsi], rcx
0x4b0d:	imul	rcx, r9
0x4b11:	mov	rsi, rcx
0x4b14:	jmp	0x4a70


0x4ac9:	jmp	0x4a70


0x4a98:	call	0x13e0


0x1600:	jmp	qword ptr [rip + 0x20696a]


0x4a49:	jmp	0x4a10




0x494c:	test	r11b, r11b
0x494f:	jne	0x4975


0x4942:	add	r9, 1
0x4946:	cmp	r9, 0xa
0x494a:	jne	0x4920


0x4936:	mov	rax, qword ptr [rax]
0x4939:	test	rax, rax
0x493c:	mov	qword ptr [r8 + r9*8], rax
0x4940:	je	0x494c


0x487b:	call	0x43f0


0x4871:	add	r9, 1
0x4875:	cmp	r9, 0xa
0x4879:	jne	0x4850


0x4865:	mov	rax, qword ptr [r11]
0x4868:	test	rax, rax
0x486b:	mov	qword ptr [r8 + r9*8], rax
0x486f:	je	0x487b


0x4820:	add	r9, 1
0x4824:	cmp	qword ptr [r8 + r9*8], 0
0x4829:	jne	0x4820


0x1690:	jmp	qword ptr [rip + 0x206922]


0x13f0:	jmp	qword ptr [rip + 0x206a72]


0x42ea:	mov	qword ptr [rsp + 0x28], rsi
0x42ef:	mov	qword ptr [rsp + 0x30], rdx
0x42f4:	mov	rcx, rsp
0x42f7:	mov	rdx, r8
0x42fa:	mov	rsi, r9
0x42fd:	call	0x3a90


0x3f39:	lea	rbx, [rip + 0x204130]
0x3f40:	cmp	r12, rbx
0x3f43:	je	0x3f54


0x3f22:	call	0x13e0


0x13e0:	jmp	qword ptr [rip + 0x206a7a]




0x3d3e:	mov	qword ptr [rdi + 0x28], rsi
0x3d42:	mov	qword ptr [rdi + 0x30], rdx
0x3d46:	ret	




0x1680:	jmp	qword ptr [rip + 0x20692a]


0x14f0:	jmp	qword ptr [rip + 0x2069f2]


0x21a3:	call	0x20f0


0x2197:	mov	rdi, qword ptr [rip + 0x205e6a]
0x219e:	call	0x16d0


0x2164:	pop	rbp
0x2165:	jmp	rax


0x2113:	pop	rbp
0x2114:	jmp	rax


0x5741:	push	r12
0x5743:	push	rbp
0x5744:	mov	r12d, edx
0x5747:	push	rbx
0x5748:	mov	rbp, rsi
0x574b:	mov	rbx, rdi
0x574e:	call	0x1590










0x1570:	jmp	qword ptr [rip + 0x2069b2]


0x4b36:	test	rdx, rdx
0x4b39:	je	0x4b0a




0x4951:	call	0x43f0


0x4975:	mov	dword ptr [rsp + 8], r10d
0x497a:	jmp	0x4951


0x4920:	cmp	r10d, 0x2f
0x4924:	ja	0x497c


0x4850:	mov	eax, dword ptr [r10]
0x4853:	cmp	eax, 0x2f
0x4856:	ja	0x489a






0x3f54:	pop	rbx
0x3f55:	mov	dword ptr [rip + 0x2040f9], 1
0x3f5f:	pop	rbp
0x3f60:	pop	r12
0x3f62:	ret	


0x3f45:	mov	rdi, r12
0x3f48:	call	0x13e0








0x16d0:	jmp	qword ptr [rip + 0x206922]




0x4b0a:	mov	qword ptr [rsi], rcx
0x4b0d:	imul	rcx, r9
0x4b11:	mov	rsi, rcx
0x4b14:	jmp	0x4a70


0x21a8:	mov	byte ptr [rip + 0x205f19], 1
0x21af:	pop	rbp
0x21b0:	ret	


0x57b1:	test	rbp, rbp
0x57b4:	je	0x57d6


0x57d6:	add	rsp, 8
0x57da:	pop	rbx
0x57db:	pop	rbp
0x57dc:	pop	r12
0x57de:	pop	r13
0x57e0:	pop	r14
0x57e2:	pop	r15
0x57e4:	ret	


0x57b6:	xor	ebx, ebx
0x57b8:	nop	dword ptr [rax + rax]
0x57c0:	mov	rdx, r15
0x57c3:	mov	rsi, r14
0x57c6:	mov	edi, r13d
0x57c9:	call	qword ptr [r12 + rbx*8]


0x4bff:	test	rax, rax
0x4c02:	je	0x4c09


0x4c04:	add	rsp, 8
0x4c08:	ret	


0x26d3:	test	rax, rax
0x26d6:	je	0x272d


0x272d:	mov	qword ptr [rip + 0x2059bc], rbx
0x2734:	mov	qword ptr [rip + 0x205965], rbx
0x273b:	pop	rbx
0x273c:	ret	


0x26d8:	lea	r8, [rax + 1]
0x26dc:	mov	rdx, r8
0x26df:	sub	rdx, rbx
0x26e2:	cmp	rdx, 6
0x26e6:	jle	0x272d


0x26e8:	lea	rsi, [rax - 6]
0x26ec:	lea	rdi, [rip + 0x39f5]
0x26f3:	mov	ecx, 7
0x26f8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x26f8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x26fa:	seta	dl
0x26fd:	sbb	dl, 0
0x2700:	test	dl, dl
0x2702:	jne	0x272d


0x2704:	lea	rdi, [rip + 0x39e5]
0x270b:	mov	ecx, 3
0x2710:	mov	rsi, r8
0x2713:	mov	rbx, r8
0x2716:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2716:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2718:	seta	dl
0x271b:	sbb	dl, 0
0x271e:	test	dl, dl
0x2720:	jne	0x272d


0x2722:	lea	rbx, [rax + 4]
0x2726:	mov	qword ptr [rip + 0x205953], rbx
0x272d:	mov	qword ptr [rip + 0x2059bc], rbx
0x2734:	mov	qword ptr [rip + 0x205965], rbx
0x273b:	pop	rbx
0x273c:	ret	


0x275a:	call	0x13f0


0x3f4d:	mov	qword ptr [rip + 0x20410c], rbx
0x3f54:	pop	rbx
0x3f55:	mov	dword ptr [rip + 0x2040f9], 1
0x3f5f:	pop	rbp
0x3f60:	pop	r12
0x3f62:	ret	


0x3f27:	mov	qword ptr [rip + 0x20413e], 0x100
0x3f32:	mov	qword ptr [rip + 0x20413f], rbx
0x3f39:	lea	rbx, [rip + 0x204130]
0x3f40:	cmp	r12, rbx
0x3f43:	je	0x3f54


0x4a9d:	xor	eax, eax
0x4a9f:	pop	rbx
0x4aa0:	ret	


0x3f0c:	cmp	rbx, rbp
0x3f0f:	jne	0x3f00


0x3f00:	mov	rdi, qword ptr [rbx]
0x3f03:	add	rbx, 0x10
0x3f07:	call	0x13e0


0x442c:	lea	rsi, [rip + 0x21a8]
0x4433:	xor	edi, edi
0x4435:	mov	edx, 5
0x443a:	call	0x1480


0x4541:	jmp	0x442c


0x4a86:	test	rax, rax
0x4a89:	jne	0x4a90


0x4a8b:	test	rbx, rbx
0x4a8e:	jne	0x4aa1


0x4a90:	pop	rbx
0x4a91:	ret	


0x4aa1:	call	0x4c60


0x56ee:	test	eax, eax
0x56f0:	je	0x56fa


0x56f2:	test	dword ptr [rbx], 0x100
0x56f8:	jne	0x5708


0x5708:	mov	rdi, rbx
0x570b:	mov	edx, 1
0x5710:	xor	esi, esi
0x5712:	call	0x5720


0x1717:	lea	rsi, [rip + 0x412b]
0x171e:	mov	edi, 6
0x1723:	call	0x1610


0x28c1:	cmp	r15d, 0xa
0x28c5:	mov	qword ptr [rsp + 0x58], rax
0x28ca:	ja	0x3a7f


0x28d0:	lea	rcx, [rip + 0x3889]
0x28d7:	mov	edx, r15d
0x28da:	movsxd	rax, dword ptr [rcx + rdx*4]
0x28de:	add	rax, rcx
0x28e1:	jmp	rax


0x3a7f:	call	0x13f0


0x4e36:	xor	ecx, ecx
0x4e38:	mov	edx, ebp
0x4e3a:	mov	dword ptr [rax], 0
0x4e40:	mov	rsi, rbx
0x4e43:	mov	rdi, r12
0x4e46:	mov	r13, rax
0x4e49:	call	0x1450


0x1450:	jmp	qword ptr [rip + 0x206a42]




0x3ab1:	mov	r13, rax
0x3ab4:	mov	eax, dword ptr [rax]
0x3ab6:	test	r15d, r15d
0x3ab9:	mov	rbx, qword ptr [rip + 0x2045a0]
0x3ac0:	mov	dword ptr [rsp + 0x18], eax
0x3ac4:	js	0x3c31


0x3c31:	call	0x13f0


0x3aca:	cmp	dword ptr [rip + 0x204587], r15d
0x3ad1:	jg	0x3b35


0x3ad3:	cmp	r15d, 0x7fffffff
0x3ada:	je	0x3c36


0x3b35:	mov	eax, dword ptr [rbp + 4]
0x3b38:	shl	r15, 4
0x3b3c:	sub	rsp, 8
0x3b40:	add	rbx, r15
0x3b43:	lea	r15, [rbp + 8]
0x3b47:	mov	r8d, dword ptr [rbp]
0x3b4b:	mov	r11, qword ptr [rbx]
0x3b4e:	mov	r12, qword ptr [rbx + 8]
0x3b52:	mov	rcx, r14
0x3b55:	or	eax, 1
0x3b58:	mov	dword ptr [rsp + 0x24], eax
0x3b5c:	push	qword ptr [rbp + 0x30]
0x3b5f:	mov	r9d, eax
0x3b62:	push	qword ptr [rbp + 0x28]
0x3b65:	push	r15
0x3b67:	mov	rsi, r11
0x3b6a:	mov	rdx, qword ptr [rsp + 0x28]
0x3b6f:	mov	rdi, r12
0x3b72:	mov	qword ptr [rsp + 0x30], r11
0x3b77:	call	0x2850


0x3c36:	call	0x4c60


0x3ae0:	lea	r12d, [r15 + 1]
0x3ae4:	lea	rax, [rip + 0x204585]
0x3aeb:	movsxd	rsi, r12d
0x3aee:	shl	rsi, 4
0x3af2:	cmp	rbx, rax
0x3af5:	je	0x3c10


0x3c10:	xor	edi, edi
0x3c12:	call	0x4a70


0x3afb:	mov	rdi, rbx
0x3afe:	call	0x4a70


0x3b03:	mov	rbx, rax
0x3b06:	mov	qword ptr [rip + 0x204553], rax
0x3b0d:	movsxd	rdi, dword ptr [rip + 0x204544]
0x3b14:	mov	edx, r12d
0x3b17:	xor	esi, esi
0x3b19:	sub	edx, edi
0x3b1b:	shl	rdi, 4
0x3b1f:	movsxd	rdx, edx
0x3b22:	add	rdi, rbx
0x3b25:	shl	rdx, 4
0x3b29:	call	0x1530


0x1530:	jmp	qword ptr [rip + 0x2069d2]




0x3c17:	movdqa	xmm0, xmmword ptr [rip + 0x204451]
0x3c1f:	mov	rbx, rax
0x3c22:	mov	qword ptr [rip + 0x204437], rax
0x3c29:	movups	xmmword ptr [rax], xmm0
0x3c2c:	jmp	0x3b0d


0x3b0d:	movsxd	rdi, dword ptr [rip + 0x204544]
0x3b14:	mov	edx, r12d
0x3b17:	xor	esi, esi
0x3b19:	sub	edx, edi
0x3b1b:	shl	rdi, 4
0x3b1f:	movsxd	rdx, edx
0x3b22:	add	rdi, rbx
0x3b25:	shl	rdx, 4
0x3b29:	call	0x1530


0x3c4c:	mov	r12d, dword ptr [rax]
0x3c4f:	mov	rbp, rax
0x3c52:	lea	rax, [rip + 0x2045a7]
0x3c59:	test	rbx, rbx
0x3c5c:	mov	esi, 0x38
0x3c61:	cmove	rbx, rax
0x3c65:	mov	rdi, rbx
0x3c68:	call	0x4c10


0x3d82:	mov	r12d, dword ptr [rax]
0x3d85:	mov	rbp, rax
0x3d88:	lea	rax, [rbx + 8]
0x3d8c:	sub	rsp, 8
0x3d90:	mov	r9d, dword ptr [rbx + 4]
0x3d94:	push	qword ptr [rbx + 0x30]
0x3d97:	mov	r8d, dword ptr [rbx]
0x3d9a:	push	qword ptr [rbx + 0x28]
0x3d9d:	mov	rdx, r15
0x3da0:	push	rax
0x3da1:	mov	rcx, qword ptr [rsp + 0x28]
0x3da6:	mov	rsi, r14
0x3da9:	mov	rdi, r13
0x3dac:	call	0x2850


0x3dff:	test	r12, r12
0x3e02:	mov	r13, rax
0x3e05:	mov	eax, dword ptr [rax]
0x3e07:	sete	bpl
0x3e0b:	or	ebp, dword ptr [rbx + 4]
0x3e0e:	lea	r10, [rbx + 8]
0x3e12:	sub	rsp, 8
0x3e16:	mov	r8d, dword ptr [rbx]
0x3e19:	mov	rcx, r15
0x3e1c:	mov	dword ptr [rsp + 0x14], eax
0x3e20:	push	qword ptr [rbx + 0x30]
0x3e23:	mov	rdx, r14
0x3e26:	push	qword ptr [rbx + 0x28]
0x3e29:	push	r10
0x3e2b:	xor	esi, esi
0x3e2d:	mov	r9d, ebp
0x3e30:	xor	edi, edi
0x3e32:	mov	qword ptr [rsp + 0x40], r10
0x3e37:	call	0x2850


0x4a19:	test	rax, rax
0x4a1c:	jne	0x4a23


0x4a1e:	test	rbx, rbx
0x4a21:	jne	0x4a25


0x4a23:	pop	rbx
0x4a24:	ret	


0x4a25:	call	0x4c60


0x4bc9:	mov	rdx, rbx
0x4bcc:	xor	esi, esi
0x4bce:	mov	rdi, rax
0x4bd1:	pop	rbx
0x4bd2:	jmp	0x1530


0x4c24:	add	rsp, 8
0x4c28:	mov	rdx, rbx
0x4c2b:	mov	rsi, rbp
0x4c2e:	pop	rbx
0x4c2f:	pop	rbp
0x4c30:	mov	rdi, rax
0x4c33:	jmp	0x1580


0x1580:	jmp	qword ptr [rip + 0x2069aa]




0x4c49:	mov	rdi, rbx
0x4c4c:	lea	rsi, [rax + 1]
0x4c50:	pop	rbx
0x4c51:	jmp	0x4c10


0x443f:	lea	rdx, [rip + 0x24ba]
0x4446:	mov	rcx, rax
0x4449:	mov	r8d, 0x7e3
0x444f:	mov	esi, 1
0x4454:	mov	rdi, rbp
0x4457:	xor	eax, eax
0x4459:	call	0x1690


0x445e:	lea	rsi, [rip + 0x2203]
0x4465:	xor	edi, edi
0x4467:	mov	edx, 5
0x446c:	call	0x1480


0x4471:	mov	rsi, rbp
0x4474:	mov	rdi, rax
0x4477:	call	0x1560


0x1560:	jmp	qword ptr [rip + 0x2069ba]




0x220d:	mov	rdi, qword ptr [rip + 0x205eac]
0x2214:	mov	rdx, rax
0x2217:	mov	rcx, rbx
0x221a:	mov	esi, 1
0x221f:	xor	eax, eax
0x2221:	call	0x1690


0x2226:	mov	edi, ebp
0x2228:	call	0x1670


0x1670:	jmp	qword ptr [rip + 0x206932]




0x223b:	mov	rdx, rbx
0x223e:	mov	rsi, rax
0x2241:	mov	edi, 1
0x2246:	xor	eax, eax
0x2248:	call	0x1620


0x1620:	jmp	qword ptr [rip + 0x20695a]




0x49a4:	lea	rdx, [rip + 0x1c8c]
0x49ab:	mov	rsi, rax
0x49ae:	mov	edi, 1
0x49b3:	xor	eax, eax
0x49b5:	call	0x1620


0x4c77:	mov	edi, dword ptr [rip + 0x20339b]
0x4c7d:	lea	rdx, [rip + 0x1424]
0x4c84:	mov	rcx, rax
0x4c87:	xor	esi, esi
0x4c89:	xor	eax, eax
0x4c8b:	call	0x1630


0x1630:	jmp	qword ptr [rip + 0x206952]




0x54e7:	cmp	rax, -3
0x54eb:	mov	rbp, rax
0x54ee:	jbe	0x5510


0x5510:	mov	rdx, qword ptr [rsp + 8]
0x5515:	xor	rdx, qword ptr fs:[0x28]
0x551e:	mov	rax, rbp
0x5521:	jne	0x552e


0x54f0:	test	r12, r12
0x54f3:	je	0x5510


0x5523:	add	rsp, 0x18
0x5527:	pop	rbx
0x5528:	pop	rbp
0x5529:	pop	r12
0x552b:	pop	r13
0x552d:	ret	


0x552e:	call	0x14b0


0x54f5:	xor	edi, edi
0x54f7:	call	0x55c0


0x14b0:	jmp	qword ptr [rip + 0x206a12]




0x554c:	mov	ebx, dword ptr [rbp]
0x554f:	mov	rdi, rbp
0x5552:	mov	r12, rax
0x5555:	call	0x5660


0x1728:	lea	rsi, [rip + 0x41be]
0x172f:	lea	rdi, [rip + 0x418e]
0x1736:	call	0x1470


0x1470:	jmp	qword ptr [rip + 0x206a32]




0x55cb:	mov	rdx, rax
0x55ce:	mov	eax, 1
0x55d3:	test	rdx, rdx
0x55d6:	je	0x55f5


0x55f5:	add	rsp, 8
0x55f9:	ret	


0x55d8:	lea	rdi, [rip + 0x148c]
0x55df:	mov	ecx, 2
0x55e4:	mov	rsi, rdx
0x55e7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x55e7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x55e9:	seta	cl
0x55ec:	sbb	cl, 0
0x55ef:	xor	eax, eax
0x55f1:	test	cl, cl
0x55f3:	jne	0x5600


0x5600:	lea	rdi, [rip + 0x1466]
0x5607:	mov	ecx, 6
0x560c:	mov	rsi, rdx
0x560f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x560f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5611:	seta	al
0x5614:	sbb	al, 0
0x5616:	test	al, al
0x5618:	setne	al
0x561b:	add	rsp, 8
0x561f:	ret	


0x54fc:	test	al, al
0x54fe:	jne	0x5510


0x5500:	movzx	eax, byte ptr [r13]
0x5505:	mov	ebp, 1
0x550a:	mov	dword ptr [rbx], eax
0x550c:	nop	dword ptr [rax]
0x5510:	mov	rdx, qword ptr [rsp + 8]
0x5515:	xor	rdx, qword ptr fs:[0x28]
0x551e:	mov	rax, rbp
0x5521:	jne	0x552e


0x562e:	test	rax, rax
0x5631:	je	0x5650


0x5650:	lea	rax, [rip + 0x141c]
0x5657:	add	rsp, 8
0x565b:	ret	


0x5633:	cmp	byte ptr [rax], 0
0x5636:	lea	rdx, [rip + 0x1436]
0x563d:	cmove	rax, rdx
0x5641:	add	rsp, 8
0x5645:	ret	


0x2770:	movzx	edx, byte ptr [rax]
0x2773:	and	edx, 0xffffffdf
0x2776:	cmp	dl, 0x55
0x2779:	je	0x27f0


0x27f0:	movzx	edx, byte ptr [rax + 1]
0x27f4:	and	edx, 0xffffffdf
0x27f7:	cmp	dl, 0x54
0x27fa:	jne	0x2780


0x277b:	cmp	dl, 0x47
0x277e:	je	0x27a0


0x27fc:	movzx	edx, byte ptr [rax + 2]
0x2800:	and	edx, 0xffffffdf
0x2803:	cmp	dl, 0x46
0x2806:	jne	0x2780


0x2780:	lea	rax, [rip + 0x397c]
0x2787:	lea	rdx, [rip + 0x3977]
0x278e:	cmp	ebx, 9
0x2791:	cmovne	rax, rdx
0x2795:	add	rsp, 8
0x2799:	pop	rbx
0x279a:	pop	rbp
0x279b:	ret	


0x27a0:	movzx	edx, byte ptr [rax + 1]
0x27a4:	and	edx, 0xffffffdf
0x27a7:	cmp	dl, 0x42
0x27aa:	jne	0x2780


0x280c:	cmp	byte ptr [rax + 3], 0x2d
0x2810:	jne	0x2780


0x27ac:	cmp	byte ptr [rax + 2], 0x31
0x27b0:	jne	0x2780


0x2816:	cmp	byte ptr [rax + 4], 0x38
0x281a:	jne	0x2780


0x27b2:	cmp	byte ptr [rax + 3], 0x38
0x27b6:	jne	0x2780


0x2820:	cmp	byte ptr [rax + 5], 0
0x2824:	jne	0x2780


0x27b8:	cmp	byte ptr [rax + 4], 0x30
0x27bc:	jne	0x2780


0x282a:	cmp	byte ptr [rbp], 0x60
0x282e:	lea	rax, [rip + 0x38bf]
0x2835:	lea	rdx, [rip + 0x38bc]
0x283c:	cmovne	rax, rdx
0x2840:	add	rsp, 8
0x2844:	pop	rbx
0x2845:	pop	rbp
0x2846:	ret	


0x27be:	cmp	byte ptr [rax + 5], 0x33
0x27c2:	jne	0x2780


0x27c4:	cmp	byte ptr [rax + 6], 0x30
0x27c8:	jne	0x2780


0x27ca:	cmp	byte ptr [rax + 7], 0
0x27ce:	jne	0x2780


0x27d0:	cmp	byte ptr [rbp], 0x60
0x27d4:	lea	rax, [rip + 0x3921]
0x27db:	lea	rdx, [rip + 0x391e]
0x27e2:	cmovne	rax, rdx
0x27e6:	add	rsp, 8
0x27ea:	pop	rbx
0x27eb:	pop	rbp
0x27ec:	ret	


0x5753:	mov	edx, r12d
0x5756:	mov	rsi, rbp
0x5759:	mov	edi, eax
0x575b:	call	0x1510


0x1510:	jmp	qword ptr [rip + 0x2069e2]




0x566c:	test	eax, eax
0x566e:	mov	rdi, rbx
0x5671:	js	0x56c7


0x56c7:	pop	rbx
0x56c8:	pop	rbp
0x56c9:	pop	r12
0x56cb:	jmp	0x1460


0x5673:	call	0x15f0


0x1460:	jmp	qword ptr [rip + 0x206a3a]




0x5678:	test	eax, eax
0x567a:	jne	0x56a8


0x567c:	mov	rdi, rbx
0x567f:	call	0x56e0


0x56a8:	mov	rdi, rbx
0x56ab:	call	0x1590


0x56b0:	xor	esi, esi
0x56b2:	mov	edx, 1
0x56b7:	mov	edi, eax
0x56b9:	call	0x1510


0x56be:	cmp	rax, -1
0x56c2:	jne	0x567c


0x56c4:	mov	rdi, rbx
0x56c7:	pop	rbx
0x56c8:	pop	rbp
0x56c9:	pop	r12
0x56cb:	jmp	0x1460


0x5760:	cmp	rax, -1
0x5764:	je	0x5772


0x5772:	pop	rbx
0x5773:	pop	rbp
0x5774:	pop	r12
0x5776:	ret	


0x5766:	and	dword ptr [rbx], 0xffffffef
0x5769:	mov	qword ptr [rbx + 0x90], rax
0x5770:	xor	eax, eax
0x5772:	pop	rbx
0x5773:	pop	rbp
0x5774:	pop	r12
0x5776:	ret	


0x173b:	lea	rdi, [rip + 0x4182]
0x1742:	call	0x1440


0x1440:	jmp	qword ptr [rip + 0x206a4a]




0x4c90:	call	0x13f0


0x49ba:	lea	rsi, [rip + 0x1c8c]
0x49c1:	mov	edx, 5
0x49c6:	xor	edi, edi
0x49c8:	call	0x1480


0x49cd:	lea	rcx, [rip + 0x14ac]
0x49d4:	lea	rdx, [rip + 0xee5]
0x49db:	mov	rsi, rax
0x49de:	mov	edi, 1
0x49e3:	xor	eax, eax
0x49e5:	call	0x1620


0x49ea:	mov	rbx, qword ptr [rip + 0x203697]
0x49f1:	lea	rsi, [rip + 0x1e88]
0x49f8:	xor	edi, edi
0x49fa:	mov	edx, 5
0x49ff:	call	0x1480


0x4a04:	mov	rsi, rbx
0x4a07:	mov	rdi, rax
0x4a0a:	pop	rbx
0x4a0b:	jmp	0x1560


0x224d:	mov	rbx, qword ptr [rip + 0x205e34]
0x2254:	lea	rsi, [rip + 0x37cd]
0x225b:	mov	edx, 5
0x2260:	xor	edi, edi
0x2262:	call	0x1480


0x2267:	mov	rsi, rbx
0x226a:	mov	rdi, rax
0x226d:	call	0x1560


0x2272:	mov	rbx, qword ptr [rip + 0x205e0f]
0x2279:	lea	rsi, [rip + 0x38b8]
0x2280:	mov	edx, 5
0x2285:	xor	edi, edi
0x2287:	call	0x1480


0x228c:	mov	rsi, rbx
0x228f:	mov	rdi, rax
0x2292:	call	0x1560


0x2297:	mov	rbx, qword ptr [rip + 0x205dea]
0x229e:	lea	rsi, [rip + 0x38e3]
0x22a5:	mov	edx, 5
0x22aa:	xor	edi, edi
0x22ac:	call	0x1480


0x22b1:	mov	rsi, rbx
0x22b4:	mov	rdi, rax
0x22b7:	call	0x1560


0x22bc:	mov	rbx, qword ptr [rip + 0x205dc5]
0x22c3:	lea	rsi, [rip + 0x38f6]
0x22ca:	mov	edx, 5
0x22cf:	xor	edi, edi
0x22d1:	call	0x1480


0x22d6:	mov	rsi, rbx
0x22d9:	mov	rdi, rax
0x22dc:	call	0x1560


0x22e1:	mov	rbx, qword ptr [rip + 0x205da0]
0x22e8:	lea	rsi, [rip + 0x3921]
0x22ef:	mov	edx, 5
0x22f4:	xor	edi, edi
0x22f6:	call	0x1480


0x22fb:	mov	rsi, rbx
0x22fe:	mov	rdi, rax
0x2301:	call	0x1560


0x2306:	mov	rbx, qword ptr [rip + 0x205d7b]
0x230d:	lea	rsi, [rip + 0x396c]
0x2314:	mov	edx, 5
0x2319:	xor	edi, edi
0x231b:	call	0x1480


0x2320:	mov	rsi, rbx
0x2323:	mov	rdi, rax
0x2326:	call	0x1560


0x232b:	mov	rbx, qword ptr [rip + 0x205d56]
0x2332:	lea	rsi, [rip + 0x3977]
0x2339:	mov	edx, 5
0x233e:	xor	edi, edi
0x2340:	call	0x1480


0x2345:	mov	rsi, rbx
0x2348:	mov	rdi, rax
0x234b:	call	0x1560


0x2350:	mov	rbx, qword ptr [rip + 0x205d31]
0x2357:	lea	rsi, [rip + 0x398a]
0x235e:	mov	edx, 5
0x2363:	xor	edi, edi
0x2365:	call	0x1480


0x236a:	mov	rsi, rbx
0x236d:	mov	rdi, rax
0x2370:	call	0x1560


0x2375:	mov	rbx, qword ptr [rip + 0x205d0c]
0x237c:	lea	rsi, [rip + 0x3a3d]
0x2383:	mov	edx, 5
0x2388:	xor	edi, edi
0x238a:	call	0x1480


0x238f:	mov	rsi, rbx
0x2392:	mov	rdi, rax
0x2395:	lea	rbx, [rip + 0x3488]
0x239c:	call	0x1560


0x23a1:	lea	rax, [rip + 0x34a2]
0x23a8:	lea	rcx, [rip + 0x34dc]
0x23af:	mov	qword ptr [rsp + 0x60], 0
0x23b8:	mov	qword ptr [rsp + 0x68], 0
0x23c1:	mov	rdx, rsp
0x23c4:	mov	qword ptr [rsp], rax
0x23c8:	lea	rax, [rip + 0x347d]
0x23cf:	mov	qword ptr [rsp + 0x30], rcx
0x23d4:	lea	rcx, [rip + 0x34ba]
0x23db:	mov	qword ptr [rsp + 8], rax
0x23e0:	lea	rax, [rip + 0x34dd]
0x23e7:	mov	qword ptr [rsp + 0x40], rcx
0x23ec:	lea	rcx, [rip + 0x34ac]
0x23f3:	mov	qword ptr [rsp + 0x10], rax
0x23f8:	lea	rax, [rip + 0x345d]
0x23ff:	mov	qword ptr [rsp + 0x50], rcx
0x2404:	mov	qword ptr [rsp + 0x18], rax
0x2409:	lea	rax, [rip + 0x3462]
0x2410:	mov	qword ptr [rsp + 0x20], rax
0x2415:	lea	rax, [rip + 0x3460]
0x241c:	mov	qword ptr [rsp + 0x28], rax
0x2421:	mov	qword ptr [rsp + 0x38], rax
0x2426:	mov	qword ptr [rsp + 0x48], rax
0x242b:	mov	qword ptr [rsp + 0x58], rax
0x2430:	add	rdx, 0x10
0x2434:	mov	rdi, qword ptr [rdx]
0x2437:	test	rdi, rdi
0x243a:	je	0x244f


0x244f:	mov	r12, qword ptr [rdx + 8]
0x2453:	xor	edi, edi
0x2455:	mov	edx, 5
0x245a:	lea	rsi, [rip + 0x3448]
0x2461:	test	r12, r12
0x2464:	je	0x252b


0x243c:	mov	ecx, 9
0x2441:	mov	rsi, rbx
0x2444:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x252b:	call	0x1480


0x246a:	call	0x1480


0x2444:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2446:	seta	al
0x2449:	sbb	al, 0
0x244b:	test	al, al
0x244d:	jne	0x2430


0x2430:	add	rdx, 0x10
0x2434:	mov	rdi, qword ptr [rdx]
0x2437:	test	rdi, rdi
0x243a:	je	0x244f


0x246f:	lea	rcx, [rip + 0x3a0a]
0x2476:	lea	rdx, [rip + 0x3443]
0x247d:	mov	rsi, rax
0x2480:	mov	edi, 1
0x2485:	xor	eax, eax
0x2487:	call	0x1620


0x248c:	xor	esi, esi
0x248e:	mov	edi, 5
0x2493:	call	0x1610


0x2498:	test	rax, rax
0x249b:	je	0x24b9


0x24b9:	lea	rsi, [rip + 0x3412]
0x24c0:	xor	edi, edi
0x24c2:	mov	edx, 5
0x24c7:	call	0x1480


0x249d:	lea	rsi, [rip + 0x342a]
0x24a4:	mov	edx, 3
0x24a9:	mov	rdi, rax
0x24ac:	call	0x1410


0x1410:	jmp	qword ptr [rip + 0x206a62]




0x24cc:	lea	rcx, [rip + 0x3351]
0x24d3:	lea	rdx, [rip + 0x39a6]
0x24da:	mov	rsi, rax
0x24dd:	mov	edi, 1
0x24e2:	xor	eax, eax
0x24e4:	call	0x1620


0x24e9:	cmp	r12, rbx
0x24ec:	lea	rcx, [rip + 0x3373]
0x24f3:	lea	rbx, [rip + 0x334f]
0x24fa:	cmove	rbx, rcx
0x24fe:	lea	rsi, [rip + 0x39eb]
0x2505:	xor	edi, edi
0x2507:	mov	edx, 5
0x250c:	call	0x1480


0x2511:	mov	rcx, rbx
0x2514:	mov	rsi, rax
0x2517:	mov	rdx, r12
0x251a:	mov	edi, 1
0x251f:	xor	eax, eax
0x2521:	call	0x1620


0x2526:	jmp	0x2226


0x2530:	lea	rcx, [rip + 0x3949]
0x2537:	lea	rdx, [rip + 0x3382]
0x253e:	mov	rsi, rax
0x2541:	mov	edi, 1
0x2546:	xor	eax, eax
0x2548:	call	0x1620


0x254d:	xor	esi, esi
0x254f:	mov	edi, 5
0x2554:	call	0x1610


0x2559:	test	rax, rax
0x255c:	je	0x2576


0x2576:	lea	rsi, [rip + 0x3355]
0x257d:	mov	edx, 5
0x2582:	xor	edi, edi
0x2584:	lea	r12, [rip + 0x3299]
0x258b:	lea	rbx, [rip + 0x32d4]
0x2592:	call	0x1480


0x255e:	lea	rsi, [rip + 0x3369]
0x2565:	mov	edx, 3
0x256a:	mov	rdi, rax
0x256d:	call	0x1410


0x2597:	lea	rcx, [rip + 0x3286]
0x259e:	lea	rdx, [rip + 0x38db]
0x25a5:	mov	rsi, rax
0x25a8:	mov	edi, 1
0x25ad:	xor	eax, eax
0x25af:	call	0x1620


0x25b4:	jmp	0x24fe


0x24fe:	lea	rsi, [rip + 0x39eb]
0x2505:	xor	edi, edi
0x2507:	mov	edx, 5
0x250c:	call	0x1480


0x447c:	cmp	r12, 9
0x4480:	ja	0x47c0


0x4486:	lea	rdx, [rip + 0x2437]
0x448d:	movsxd	rax, dword ptr [rdx + r12*4]
0x4491:	add	rax, rdx
0x4494:	jmp	rax


0x47c0:	mov	r10, qword ptr [rbx + 0x40]
0x47c4:	mov	r9, qword ptr [rbx + 0x38]
0x47c8:	mov	edx, 5
0x47cd:	mov	rax, qword ptr [rbx + 0x10]
0x47d1:	mov	r8, qword ptr [rbx + 8]
0x47d5:	lea	rsi, [rip + 0x2064]
0x47dc:	mov	r13, qword ptr [rbx + 0x30]
0x47e0:	mov	r12, qword ptr [rbx + 0x28]
0x47e4:	mov	r15, qword ptr [rbx + 0x20]
0x47e8:	mov	r14, qword ptr [rbx + 0x18]
0x47ec:	mov	qword ptr [rsp + 0x18], r10
0x47f1:	mov	qword ptr [rsp + 0x10], r9
0x47f6:	mov	qword ptr [rsp], rax
0x47fa:	mov	qword ptr [rsp + 8], r8
0x47ff:	mov	rbx, qword ptr [rbx]
0x4802:	jmp	0x4592


0x4592:	xor	edi, edi
0x4594:	call	0x1480


0x4599:	mov	r10, qword ptr [rsp + 0x18]
0x459e:	push	r10
0x45a0:	jmp	0x44e4


0x44e4:	mov	r9, qword ptr [rsp + 0x18]
0x44e9:	mov	rdx, rax
0x44ec:	mov	rcx, rbx
0x44ef:	mov	esi, 1
0x44f4:	mov	rdi, rbp
0x44f7:	xor	eax, eax
0x44f9:	push	r9
0x44fb:	push	r13
0x44fd:	push	r12
0x44ff:	push	r15
0x4501:	push	r14
0x4503:	mov	r9, qword ptr [rsp + 0x30]
0x4508:	mov	r8, qword ptr [rsp + 0x38]
0x450d:	call	0x1690


0x4512:	add	rsp, 0x30
0x4516:	add	rsp, 0x28
0x451a:	pop	rbx
0x451b:	pop	rbp
0x451c:	pop	r12
0x451e:	pop	r13
0x4520:	pop	r14
0x4522:	pop	r15
0x4524:	ret	


0x3c6d:	mov	dword ptr [rbp], r12d
0x3c71:	pop	rbx
0x3c72:	pop	rbp
0x3c73:	pop	r12
0x3c75:	ret	


0x3b2e:	mov	dword ptr [rip + 0x204523], r12d
0x3b35:	mov	eax, dword ptr [rbp + 4]
0x3b38:	shl	r15, 4
0x3b3c:	sub	rsp, 8
0x3b40:	add	rbx, r15
0x3b43:	lea	r15, [rbp + 8]
0x3b47:	mov	r8d, dword ptr [rbp]
0x3b4b:	mov	r11, qword ptr [rbx]
0x3b4e:	mov	r12, qword ptr [rbx + 8]
0x3b52:	mov	rcx, r14
0x3b55:	or	eax, 1
0x3b58:	mov	dword ptr [rsp + 0x24], eax
0x3b5c:	push	qword ptr [rbp + 0x30]
0x3b5f:	mov	r9d, eax
0x3b62:	push	qword ptr [rbp + 0x28]
0x3b65:	push	r15
0x3b67:	mov	rsi, r11
0x3b6a:	mov	rdx, qword ptr [rsp + 0x28]
0x3b6f:	mov	rdi, r12
0x3b72:	mov	qword ptr [rsp + 0x30], r11
0x3b77:	call	0x2850


0x4e4e:	mov	rcx, qword ptr [rbx]
0x4e51:	mov	rbp, rax
0x4e54:	cmp	rcx, r12
0x4e57:	je	0x4eb8


0x4eb8:	test	r15, r15
0x4ebb:	je	0x5350


0x4e59:	mov	eax, dword ptr [r13]
0x4e5d:	test	eax, eax
0x4e5f:	jne	0x4ea0


0x5350:	mov	r12d, 4
0x5356:	jmp	0x4e79


0x4ec1:	movzx	r13d, byte ptr [rcx]
0x4ec5:	mov	qword ptr [rsp + 8], rcx
0x4eca:	mov	r12d, 4
0x4ed0:	test	r13b, r13b
0x4ed3:	je	0x4e79


0x4e61:	xor	r12d, r12d
0x4e64:	test	r15, r15
0x4e67:	je	0x4e76


0x4ea0:	cmp	eax, 0x22
0x4ea3:	mov	r12d, 4
0x4ea9:	jne	0x4e79


0x4e79:	mov	rdi, qword ptr [rsp + 0x18]
0x4e7e:	xor	rdi, qword ptr fs:[0x28]
0x4e87:	mov	eax, r12d
0x4e8a:	jne	0x549e


0x4ed5:	movsx	esi, r13b
0x4ed9:	mov	rdi, r15
0x4edc:	call	0x14e0


0x4e76:	mov	qword ptr [r14], rbp
0x4e79:	mov	rdi, qword ptr [rsp + 0x18]
0x4e7e:	xor	rdi, qword ptr fs:[0x28]
0x4e87:	mov	eax, r12d
0x4e8a:	jne	0x549e


0x4e69:	movzx	r13d, byte ptr [rcx]
0x4e6d:	test	r13b, r13b
0x4e70:	jne	0x4ef3


0x4eab:	mov	r12d, 1
0x4eb1:	jmp	0x4e64


0x4e90:	add	rsp, 0x28
0x4e94:	pop	rbx
0x4e95:	pop	rbp
0x4e96:	pop	r12
0x4e98:	pop	r13
0x4e9a:	pop	r14
0x4e9c:	pop	r15
0x4e9e:	ret	


0x549e:	call	0x14b0


0x14e0:	jmp	qword ptr [rip + 0x2069fa]


0x4ef3:	movsx	esi, r13b
0x4ef7:	mov	rdi, r15
0x4efa:	mov	qword ptr [rsp + 8], rcx
0x4eff:	call	0x14e0


0x4e64:	test	r15, r15
0x4e67:	je	0x4e76




0x5717:	mov	rdi, rbx
0x571a:	pop	rbx
0x571b:	jmp	0x15c0


0x4956:	mov	rax, qword ptr [rsp + 0x78]
0x495b:	xor	rax, qword ptr fs:[0x28]
0x4964:	jne	0x4970


0x4966:	add	rsp, 0xb8
0x496d:	pop	rbx
0x496e:	pop	rbp
0x496f:	ret	


0x4970:	call	0x14b0


0x4880:	mov	rax, qword ptr [rsp + 0x58]
0x4885:	xor	rax, qword ptr fs:[0x28]
0x488e:	jne	0x4895


0x4890:	add	rsp, 0x68
0x4894:	ret	


0x4895:	call	0x14b0


0x4cda:	test	eax, eax
0x4cdc:	jne	0x4d70


0x4ce2:	mov	rbp, qword ptr [rsp]
0x4ce6:	cmp	rbp, r14
0x4ce9:	jl	0x4cf0


0x4d70:	mov	ebp, eax
0x4d72:	call	0x1400


0x4cf0:	call	0x1400


0x4ceb:	cmp	rbp, r15
0x4cee:	jle	0x4d46


0x4d46:	mov	rdx, qword ptr [rsp + 8]
0x4d4b:	xor	rdx, qword ptr fs:[0x28]
0x4d54:	mov	rax, rbp
0x4d57:	jne	0x4dac


0x4d59:	add	rsp, 0x18
0x4d5d:	pop	rbx
0x4d5e:	pop	rbp
0x4d5f:	pop	r12
0x4d61:	pop	r13
0x4d63:	pop	r14
0x4d65:	pop	r15
0x4d67:	ret	


0x4dac:	call	0x14b0


0x4cf5:	cmp	rbp, 0x3fffffff
0x4cfc:	mov	r14, rax
0x4cff:	jle	0x4d90


0x4d90:	cmp	rbp, -0x40000001
0x4d97:	mov	eax, 0x22
0x4d9c:	mov	edx, 0x4b
0x4da1:	cmovle	eax, edx
0x4da4:	mov	dword ptr [r14], eax
0x4da7:	jmp	0x4d0c


0x4d05:	mov	dword ptr [r14], 0x4b
0x4d0c:	mov	rdi, r12
0x4d0f:	call	0x43d0


0x4d0c:	mov	rdi, r12
0x4d0f:	call	0x43d0


0x4d77:	cmp	ebp, 1
0x4d7a:	mov	r14, rax
0x4d7d:	je	0x4d05


0x4d7f:	cmp	ebp, 3
0x4d82:	jne	0x4d0c


0x4d84:	mov	dword ptr [rax], 0
0x4d8a:	jmp	0x4d0c


0x4ddc:	add	rsp, 0x18
0x4de0:	ret	


0x4f04:	test	rax, rax
0x4f07:	mov	rcx, qword ptr [rsp + 8]
0x4f0c:	je	0x4f68


0x4f68:	mov	qword ptr [r14], rbp
0x4f6b:	or	r12d, 2
0x4f6f:	jmp	0x4e79


0x4f0e:	lea	eax, [r13 - 0x45]
0x4f12:	cmp	al, 0x2f
0x4f14:	ja	0x4f78


0x4f16:	movabs	rdx, 0x814400308945
0x4f20:	bt	rdx, rax
0x4f24:	jae	0x4f78


0x4f78:	mov	edi, 1
0x4f7d:	mov	eax, 0x400
0x4f82:	sub	r13d, 0x42
0x4f86:	cmp	r13b, 0x35
0x4f8a:	ja	0x4f68


0x4f26:	mov	esi, 0x30
0x4f2b:	mov	rdi, r15
0x4f2e:	mov	qword ptr [rsp + 8], rcx
0x4f33:	call	0x14e0


0x4f8c:	lea	rsi, [rip + 0x19f5]
0x4f93:	movzx	r13d, r13b
0x4f97:	movsxd	rdx, dword ptr [rsi + r13*4]
0x4f9b:	add	rdx, rsi
0x4f9e:	jmp	rdx


0x4f38:	test	rax, rax
0x4f3b:	mov	rcx, qword ptr [rsp + 8]
0x4f40:	je	0x4f78


0x4f42:	movzx	eax, byte ptr [rcx + 1]
0x4f46:	cmp	al, 0x44
0x4f48:	je	0x4f56


0x4f56:	mov	edi, 2
0x4f5b:	mov	eax, 0x3e8
0x4f60:	jmp	0x4f82


0x4f4a:	cmp	al, 0x69
0x4f4c:	je	0x5438


0x4f82:	sub	r13d, 0x42
0x4f86:	cmp	r13b, 0x35
0x4f8a:	ja	0x4f68


0x5438:	xor	edi, edi
0x543a:	cmp	byte ptr [rcx + 2], 0x42
0x543e:	mov	eax, 0x400
0x5443:	sete	dil
0x5447:	lea	edi, [rdi + rdi + 1]
0x544b:	jmp	0x4f82


0x4f52:	cmp	al, 0x42
0x4f54:	jne	0x4f78


0x4ee1:	test	rax, rax
0x4ee4:	mov	rcx, qword ptr [rsp + 8]
0x4ee9:	je	0x4e79


0x4eeb:	mov	ebp, 1
0x4ef0:	xor	r12d, r12d
0x4ef3:	movsx	esi, r13b
0x4ef7:	mov	rdi, r15
0x4efa:	mov	qword ptr [rsp + 8], rcx
0x4eff:	call	0x14e0


0x2572:	test	eax, eax
0x2574:	jne	0x25b9


0x25b9:	lea	r12, [rip + 0x3264]
0x25c0:	mov	r13, qword ptr [rip + 0x205ac1]
0x25c7:	lea	rsi, [rip + 0x38da]
0x25ce:	xor	edi, edi
0x25d0:	mov	edx, 5
0x25d5:	call	0x1480


0x25da:	mov	rsi, r13
0x25dd:	mov	rdi, rax
0x25e0:	call	0x1560


0x25e5:	jmp	0x24b9


0x24b1:	test	eax, eax
0x24b3:	jne	0x25c0


0x25c0:	mov	r13, qword ptr [rip + 0x205ac1]
0x25c7:	lea	rsi, [rip + 0x38da]
0x25ce:	xor	edi, edi
0x25d0:	mov	edx, 5
0x25d5:	call	0x1480


0x1747:	lea	rdi, [rip + 0xec2]
0x174e:	call	0x5800


0x1753:	lea	rcx, [rip + 0x2063c6]
0x175a:	lea	rdx, [rip + 0x41e0]
0x1761:	xor	r8d, r8d
0x1764:	mov	rsi, rbp
0x1767:	mov	edi, r13d
0x176a:	call	0x14c0


0x14c0:	jmp	qword ptr [rip + 0x206a0a]




0x5684:	test	eax, eax
0x5686:	je	0x56c4


0x5688:	call	0x1400


0x568d:	mov	r12d, dword ptr [rax]
0x5690:	mov	rdi, rbx
0x5693:	mov	rbp, rax
0x5696:	call	0x1460


0x569b:	test	r12d, r12d
0x569e:	jne	0x56d0


0x56a0:	pop	rbx
0x56a1:	pop	rbp
0x56a2:	pop	r12
0x56a4:	ret	


0x56d0:	mov	dword ptr [rbp], r12d
0x56d4:	mov	eax, 0xffffffff
0x56d9:	jmp	0x56a0


0x555a:	and	ebx, 0x20
0x555d:	test	ebx, ebx
0x555f:	jne	0x5578


0x5561:	test	eax, eax
0x5563:	je	0x556f


0x5578:	test	eax, eax
0x557a:	jne	0x5598


0x556f:	pop	rbx
0x5570:	pop	rbp
0x5571:	pop	r12
0x5573:	ret	


0x5565:	test	r12, r12
0x5568:	mov	eax, 0xffffffff
0x556d:	je	0x55a8


0x557c:	call	0x1400


0x5598:	pop	rbx
0x5599:	mov	eax, 0xffffffff
0x559e:	pop	rbp
0x559f:	pop	r12
0x55a1:	ret	


0x55a8:	call	0x1400


0x55ad:	cmp	dword ptr [rax], 9
0x55b0:	pop	rbx
0x55b1:	pop	rbp
0x55b2:	pop	r12
0x55b4:	setne	al
0x55b7:	movzx	eax, al
0x55ba:	neg	eax
0x55bc:	ret	


0x5581:	mov	dword ptr [rax], 0
0x5587:	mov	eax, 0xffffffff
0x558c:	pop	rbx
0x558d:	pop	rbp
0x558e:	pop	r12
0x5590:	ret	


0x2622:	test	eax, eax
0x2624:	je	0x263c


0x263c:	mov	rdi, qword ptr [rip + 0x205a7d]
0x2643:	call	0x5540


0x2626:	call	0x1400


0x262b:	cmp	byte ptr [rip + 0x205aae], 0
0x2632:	mov	rbx, rax
0x2635:	je	0x2653


0x2653:	lea	rsi, [rip + 0x3a3e]
0x265a:	xor	edi, edi
0x265c:	mov	edx, 5
0x2661:	call	0x1480


0x2637:	cmp	dword ptr [rax], 0x20
0x263a:	jne	0x2653


0x2666:	mov	rdi, qword ptr [rip + 0x205a7b]
0x266d:	mov	rbp, rax
0x2670:	test	rdi, rdi
0x2673:	je	0x269d


0x269d:	mov	esi, dword ptr [rbx]
0x269f:	lea	rdx, [rip + 0x3a02]
0x26a6:	mov	rcx, rax
0x26a9:	xor	edi, edi
0x26ab:	xor	eax, eax
0x26ad:	call	0x1630


0x2675:	call	0x41d0


0x26b2:	jmp	0x2692


0x2692:	mov	edi, dword ptr [rip + 0x205980]
0x2698:	call	0x1420


0x1420:	jmp	qword ptr [rip + 0x206a5a]




0x2648:	test	eax, eax
0x264a:	jne	0x2692


0x264c:	add	rsp, 8
0x2650:	pop	rbx
0x2651:	pop	rbp
0x2652:	ret	


0x176f:	cmp	eax, -1
0x1772:	je	0x19ae


0x19ae:	movsxd	rdx, dword ptr [rip + 0x2066db]
0x19b5:	mov	r14, qword ptr [rip + 0x206714]
0x19bc:	sub	r13d, edx
0x19bf:	test	r14, r14
0x19c2:	lea	rbp, [rbp + rdx*8]
0x19c7:	je	0x1f14


0x1778:	cmp	eax, 0x63
0x177b:	je	0x17f0


0x1f14:	test	r12b, r12b
0x1f17:	je	0x2014


0x19cd:	test	ebx, ebx
0x19cf:	jne	0x1a27


0x17f0:	mov	byte ptr [rip + 0x2068e2], 1
0x17f7:	jmp	0x1753


0x177d:	jle	0x17b0


0x2014:	lea	rsi, [rip + 0x392d]
0x201b:	mov	edi, 1
0x2020:	call	0x43b0


0x1f1d:	test	r13d, r13d
0x1f20:	jg	0x1abc


0x19d1:	test	r12b, r12b
0x19d4:	je	0x1a27


0x1a27:	cmp	byte ptr [rip + 0x2066aa], 1
0x1a2e:	jne	0x1a68


0x17b0:	cmp	eax, 0xffffff7d
0x17b5:	jne	0x1ffd


0x177f:	cmp	eax, 0x72
0x1782:	je	0x18f8


0x1f26:	lea	rsi, [rip + 0x3a3a]
0x1f2d:	mov	edx, 5
0x1f32:	xor	edi, edi
0x1f34:	call	0x1480


0x1abc:	mov	qword ptr [rsp + 0x18], -1
0x1ac5:	cmp	byte ptr [rip + 0x20660d], 1
0x1acc:	mov	byte ptr [rsp + 0x10], 0
0x1ad1:	mov	qword ptr [rsp + 8], r15
0x1ad6:	sbb	eax, eax
0x1ad8:	and	eax, 0x40
0x1adb:	add	eax, 0x801
0x1ae0:	mov	dword ptr [rsp + 0x14], eax
0x1ae4:	lea	rax, [rsp + 0x30]
0x1ae9:	mov	qword ptr [rsp + 0x20], rax
0x1aee:	nop	
0x1af0:	add	rbp, 8
0x1af4:	mov	r13, qword ptr [rbp - 8]
0x1af8:	test	r13, r13
0x1afb:	je	0x1e38


0x19d6:	lea	rsi, [rip + 0x3f6b]
0x19dd:	mov	edi, 1
0x19e2:	call	0x43b0


0x1a30:	test	r12b, r12b
0x1a33:	jne	0x1a68


0x1a68:	test	r13d, r13d
0x1a6b:	jle	0x1f26


0x17bb:	mov	rdi, qword ptr [rip + 0x2068c6]
0x17c2:	mov	rcx, qword ptr [rip + 0x206847]
0x17c9:	lea	r8, [rip + 0x4163]
0x17d0:	lea	rdx, [rip + 0x40e9]
0x17d7:	lea	rsi, [rip + 0x4046]
0x17de:	xor	r9d, r9d
0x17e1:	xor	eax, eax
0x17e3:	call	0x48b0


0x1ffd:	cmp	eax, 0xffffff7e
0x2002:	jne	0x1792


0x18f8:	mov	rax, qword ptr [rip + 0x206799]
0x18ff:	mov	qword ptr [rip + 0x2067ca], rax
0x1906:	jmp	0x1753


0x1788:	cmp	eax, 0x73
0x178b:	je	0x1800


0x1e38:	mov	rbx, qword ptr [rsp + 0xc8]
0x1e40:	xor	rbx, qword ptr fs:[0x28]
0x1e49:	movzx	eax, byte ptr [rsp + 0x10]
0x1e4e:	jne	0x200f


0x1b01:	mov	esi, dword ptr [rsp + 0x14]
0x1b05:	xor	eax, eax
0x1b07:	mov	edx, 0x1b6
0x1b0c:	mov	rdi, r13
0x1b0f:	call	0x1640


0x1a35:	lea	rsi, [rip + 0x3f18]
0x1a3c:	mov	edi, 1
0x1a41:	call	0x43b0


0x1a71:	lea	rdx, [rsp + 0x30]
0x1a76:	mov	rsi, r14
0x1a79:	mov	edi, 1
0x1a7e:	call	0x15a0


0x2008:	xor	edi, edi
0x200a:	call	0x21d0


0x1792:	mov	edi, 1
0x1797:	call	0x21d0


0x1800:	call	0x16c0


0x178d:	cmp	eax, 0x6f
0x1790:	je	0x17a0


0x1e54:	add	rsp, 0xd8
0x1e5b:	pop	rbx
0x1e5c:	pop	rbp
0x1e5d:	pop	r12
0x1e5f:	pop	r13
0x1e61:	pop	r14
0x1e63:	pop	r15
0x1e65:	ret	


0x200f:	call	0x14b0


0x1640:	jmp	qword ptr [rip + 0x20694a]


0x15a0:	jmp	qword ptr [rip + 0x20699a]


0x16c0:	jmp	qword ptr [rip + 0x20690a]


0x17a0:	mov	byte ptr [rip + 0x206931], 1
0x17a7:	jmp	0x1753








0x17e8:	xor	edi, edi
0x17ea:	call	0x1670


0x1f39:	xor	edi, edi
0x1f3b:	mov	rdx, rax
0x1f3e:	xor	esi, esi
0x1f40:	xor	eax, eax
0x1f42:	call	0x1630


0x1f47:	mov	edi, 1
0x1f4c:	call	0x21d0


0x1805:	mov	rcx, qword ptr [rax]
0x1808:	mov	rax, qword ptr [rip + 0x206889]
0x180f:	jmp	0x181f


0x181f:	movzx	esi, byte ptr [rax]
0x1822:	mov	rdi, rax
0x1825:	add	rax, 1
0x1829:	test	byte ptr [rcx + rsi*2 + 1], 0x20
0x182e:	jne	0x1818


0x1830:	cmp	sil, 0x2f
0x1834:	je	0x1984


0x1818:	mov	qword ptr [rip + 0x206879], rax
0x181f:	movzx	esi, byte ptr [rax]
0x1822:	mov	rdi, rax
0x1825:	add	rax, 1
0x1829:	test	byte ptr [rcx + rsi*2 + 1], 0x20
0x182e:	jne	0x1818


0x1984:	add	rdi, 1
0x1988:	mov	ebx, 4
0x198d:	mov	qword ptr [rip + 0x206704], rdi
0x1994:	jmp	0x1860


0x183a:	jle	0x190b


0x1860:	mov	rax, qword ptr [rip + 0x206831]
0x1867:	jmp	0x1877


0x190b:	cmp	sil, 0x25
0x190f:	jne	0x1860


0x1840:	cmp	sil, 0x3c
0x1844:	je	0x1999


0x1877:	movzx	esi, byte ptr [rax]
0x187a:	add	rax, 1
0x187e:	test	byte ptr [rcx + rsi*2 + 1], 0x20
0x1883:	mov	rdx, rsi
0x1886:	jne	0x1870


0x1915:	add	rdi, 1
0x1919:	mov	ebx, 5
0x191e:	mov	qword ptr [rip + 0x206773], rdi
0x1925:	jmp	0x1860


0x1999:	add	rdi, 1
0x199d:	mov	ebx, 3
0x19a2:	mov	qword ptr [rip + 0x2066ef], rdi
0x19a9:	jmp	0x1860


0x184a:	cmp	sil, 0x3e
0x184e:	jne	0x1860


0x1888:	sub	edx, 0x2b
0x188b:	and	edx, 0xfd
0x1891:	mov	edx, 5
0x1896:	jne	0x192a


0x1870:	mov	qword ptr [rip + 0x206821], rax
0x1877:	movzx	esi, byte ptr [rax]
0x187a:	add	rax, 1
0x187e:	test	byte ptr [rcx + rsi*2 + 1], 0x20
0x1883:	mov	rdx, rsi
0x1886:	jne	0x1870


0x1850:	add	rdi, 1
0x1854:	mov	ebx, 2
0x1859:	mov	qword ptr [rip + 0x206838], rdi
0x1860:	mov	rax, qword ptr [rip + 0x206831]
0x1867:	jmp	0x1877


0x189c:	test	ebx, ebx
0x189e:	jne	0x20ad


0x192a:	lea	rsi, [rip + 0x3fd4]
0x1931:	xor	edi, edi
0x1933:	call	0x1480


0x18a4:	lea	rsi, [rip + 0x405a]
0x18ab:	xor	edi, edi
0x18ad:	mov	ebx, 1
0x18b2:	mov	r12d, 1
0x18b8:	call	0x1480


0x20ad:	lea	rsi, [rip + 0x3e74]
0x20b4:	jmp	0x1f32


0x1f32:	xor	edi, edi
0x1f34:	call	0x1480


0x18bd:	mov	rdi, qword ptr [rip + 0x2067d4]
0x18c4:	lea	rcx, [rip + 0x4049]
0x18cb:	mov	r8, rax
0x18ce:	xor	r9d, r9d
0x18d1:	movabs	rdx, 0x7fffffffffffffff
0x18db:	movabs	rsi, 0x8000000000000000
0x18e5:	call	0x4dc0


0x18ea:	mov	r15, rax
0x18ed:	jmp	0x1753


0x1938:	mov	rdi, qword ptr [rip + 0x206759]
0x193f:	lea	rcx, [rip + 0x3fce]
0x1946:	xor	r9d, r9d
0x1949:	mov	r8, rax
0x194c:	movabs	rdx, 0x7fffffffffffffff
0x1956:	movabs	rsi, 0x8000000000000000
0x1960:	call	0x4dc0


0x1965:	mov	r15, rax
0x1968:	lea	eax, [rbx - 4]
0x196b:	cmp	eax, 1
0x196e:	ja	0x1979


0x1970:	test	r15, r15
0x1973:	je	0x204a


0x1979:	mov	r12d, 1
0x197f:	jmp	0x1753


0x204a:	lea	rsi, [rip + 0x38d1]
0x2051:	mov	edx, 5
0x2056:	xor	edi, edi
0x2058:	call	0x1480


0x205d:	xor	esi, esi
0x205f:	mov	rdx, rax
0x2062:	mov	edi, 1
0x2067:	xor	eax, eax
0x2069:	call	0x1630


0x206e:	mov	rsi, r14
0x2071:	mov	edi, 4
0x2076:	call	0x4100


0x1a83:	test	eax, eax
0x1a85:	jne	0x206e


0x1a8b:	mov	eax, dword ptr [rsp + 0x48]
0x1a8f:	and	eax, 0xd000
0x1a94:	cmp	eax, 0x8000
0x1a99:	jne	0x1bb7


0x1a9f:	mov	rax, qword ptr [rsp + 0x60]
0x1aa4:	test	rax, rax
0x1aa7:	mov	qword ptr [rsp + 0x18], rax
0x1aac:	js	0x1c09


0x1bb7:	xor	esi, esi
0x1bb9:	mov	rdi, r14
0x1bbc:	xor	eax, eax
0x1bbe:	call	0x1640


0x1c09:	mov	rsi, qword ptr [rip + 0x2064c0]
0x1c10:	mov	edi, 4
0x1c15:	call	0x4100


0x1ab2:	test	r12b, r12b
0x1ab5:	jne	0x1ac5


0x1ab7:	mov	r15, qword ptr [rsp + 0x18]
0x1abc:	mov	qword ptr [rsp + 0x18], -1
0x1ac5:	cmp	byte ptr [rip + 0x20660d], 1
0x1acc:	mov	byte ptr [rsp + 0x10], 0
0x1ad1:	mov	qword ptr [rsp + 8], r15
0x1ad6:	sbb	eax, eax
0x1ad8:	and	eax, 0x40
0x1adb:	add	eax, 0x801
0x1ae0:	mov	dword ptr [rsp + 0x14], eax
0x1ae4:	lea	rax, [rsp + 0x30]
0x1ae9:	mov	qword ptr [rsp + 0x20], rax
0x1aee:	nop	
0x1af0:	add	rbp, 8
0x1af4:	mov	r13, qword ptr [rbp - 8]
0x1af8:	test	r13, r13
0x1afb:	je	0x1e38


0x1ac5:	cmp	byte ptr [rip + 0x20660d], 1
0x1acc:	mov	byte ptr [rsp + 0x10], 0
0x1ad1:	mov	qword ptr [rsp + 8], r15
0x1ad6:	sbb	eax, eax
0x1ad8:	and	eax, 0x40
0x1adb:	add	eax, 0x801
0x1ae0:	mov	dword ptr [rsp + 0x14], eax
0x1ae4:	lea	rax, [rsp + 0x30]
0x1ae9:	mov	qword ptr [rsp + 0x20], rax
0x1aee:	nop	
0x1af0:	add	rbp, 8
0x1af4:	mov	r13, qword ptr [rbp - 8]
0x1af8:	test	r13, r13
0x1afb:	je	0x1e38


0x1bc3:	mov	r13d, eax
0x1bc6:	call	0x1400


0x1bcb:	test	r13d, r13d
0x1bce:	mov	r14, rax
0x1bd1:	js	0x1c09


0x1bd3:	xor	esi, esi
0x1bd5:	mov	edx, 2
0x1bda:	mov	edi, r13d
0x1bdd:	call	0x1510


0x1be2:	mov	ecx, dword ptr [r14]
0x1be5:	mov	edi, r13d
0x1be8:	mov	qword ptr [rsp + 0x18], rax
0x1bed:	mov	dword ptr [rsp + 0x10], ecx
0x1bf1:	call	0x1540


0x1540:	jmp	qword ptr [rip + 0x2069ca]




0x1b14:	cmp	eax, -1
0x1b17:	mov	r15d, eax
0x1b1a:	je	0x1c4c


0x1c4c:	call	0x1400


0x1b20:	cmp	byte ptr [rip + 0x2065b1], 0
0x1b27:	jne	0x1d24


0x1b2d:	test	ebx, ebx
0x1b2f:	je	0x1ca6


0x1d24:	mov	rdx, qword ptr [rsp + 0x20]
0x1d29:	mov	esi, eax
0x1d2b:	mov	edi, 1
0x1d30:	call	0x15e0


0x1ca6:	mov	r12, qword ptr [rsp + 8]
0x1cab:	test	ebx, ebx
0x1cad:	jne	0x1de7


0x1b35:	cmp	qword ptr [rsp + 0x18], 0
0x1b3b:	jns	0x1ca6


0x15e0:	jmp	qword ptr [rip + 0x20697a]


0x1cb3:	test	r12, r12
0x1cb6:	mov	eax, 0
0x1cbb:	cmovs	r12, rax
0x1cbf:	mov	rsi, r12
0x1cc2:	mov	edi, r15d
0x1cc5:	mov	r14d, 1
0x1ccb:	call	0x1500


0x1de7:	mov	rax, qword ptr [rsp + 0x18]
0x1dec:	cmp	rax, -1
0x1df0:	je	0x1eaa


0x1b41:	mov	rdx, qword ptr [rsp + 0x20]
0x1b46:	mov	esi, eax
0x1b48:	mov	edi, 1
0x1b4d:	call	0x15e0




0x1500:	jmp	qword ptr [rip + 0x2069ea]


0x1eaa:	mov	eax, dword ptr [rsp + 0x48]
0x1eae:	and	eax, 0xd000
0x1eb3:	cmp	eax, 0x8000
0x1eb8:	jne	0x1f6b


0x1df6:	cmp	ebx, 2
0x1df9:	je	0x1f08




0x1ebe:	mov	rax, qword ptr [rsp + 0x60]
0x1ec3:	test	rax, rax
0x1ec6:	jns	0x1df6


0x1f6b:	xor	esi, esi
0x1f6d:	mov	edx, 2
0x1f72:	mov	edi, r15d
0x1f75:	call	0x1510


0x1f08:	cmp	r12, rax
0x1f0b:	cmovb	r12, rax
0x1f0f:	jmp	0x1cb3


0x1dff:	cmp	ebx, 3
0x1e02:	je	0x1f51


0x1ecc:	mov	rsi, r13
0x1ecf:	mov	edi, 4
0x1ed4:	call	0x4100


0x1f51:	cmp	r12, rax
0x1f54:	cmova	r12, rax
0x1f58:	jmp	0x1cbf


0x1e08:	cmp	ebx, 4
0x1e0b:	je	0x1f5d


0x1cbf:	mov	rsi, r12
0x1cc2:	mov	edi, r15d
0x1cc5:	mov	r14d, 1
0x1ccb:	call	0x1500


0x1f5d:	xor	edx, edx
0x1f5f:	div	r12
0x1f62:	imul	r12, rax
0x1f66:	jmp	0x1cb3


0x1e11:	cmp	ebx, 5
0x1e14:	je	0x1fa4


0x1fa4:	lea	rax, [r12 + rax - 1]
0x1fa9:	xor	edx, edx
0x1fab:	div	r12
0x1fae:	imul	r12, rax
0x1fb2:	test	r12, r12
0x1fb5:	jns	0x1cbf


0x1e1a:	movabs	rdx, 0x7fffffffffffffff
0x1e24:	sub	rdx, rax
0x1e27:	cmp	r12, rdx
0x1e2a:	jg	0x1fdc


0x1fbb:	mov	rsi, r13
0x1fbe:	mov	edi, 4
0x1fc3:	call	0x4100


0x1e30:	add	r12, rax
0x1e33:	jmp	0x1cb3


0x1fdc:	mov	rsi, r13
0x1fdf:	mov	edi, 4
0x1fe4:	call	0x4100


0x1f7a:	test	rax, rax
0x1f7d:	jns	0x1df6


0x1f83:	mov	rsi, r13
0x1f86:	mov	edi, 4
0x1f8b:	call	0x4100


0x1c51:	cmp	byte ptr [rip + 0x206481], 0
0x1c58:	mov	r12, rax
0x1c5b:	je	0x1c66


0x1c66:	mov	rsi, r13
0x1c69:	mov	edi, 4
0x1c6e:	call	0x4100


0x1c5d:	cmp	dword ptr [rax], 2
0x1c60:	je	0x1af0


0x1af0:	add	rbp, 8
0x1af4:	mov	r13, qword ptr [rbp - 8]
0x1af8:	test	r13, r13
0x1afb:	je	0x1e38


0x1cd0:	add	eax, 1
0x1cd3:	jne	0x1b99


0x1cd9:	mov	rsi, r13
0x1cdc:	mov	edi, 4
0x1ce1:	call	0x4100


0x1b99:	mov	edi, r15d
0x1b9c:	call	0x1540


0x1b52:	test	eax, eax
0x1b54:	je	0x1de2


0x1de2:	mov	r12, qword ptr [rsp + 8]
0x1de7:	mov	rax, qword ptr [rsp + 0x18]
0x1dec:	cmp	rax, -1
0x1df0:	je	0x1eaa


0x1b5a:	mov	rsi, r13
0x1b5d:	mov	edi, 4
0x1b62:	call	0x4100


0x1d35:	test	eax, eax
0x1d37:	jne	0x1b5a


0x1d3d:	mov	r12, qword ptr [rsp + 0x68]
0x1d42:	movabs	rcx, 0x1fffffffffffffff
0x1d4c:	lea	rax, [r12 - 1]
0x1d51:	cmp	rax, rcx
0x1d54:	mov	eax, 0x200
0x1d59:	cmova	r12, rax
0x1d5d:	movabs	rax, 0x8000000000000000
0x1d67:	cqo	
0x1d69:	idiv	r12
0x1d6c:	cmp	qword ptr [rsp + 8], rax
0x1d71:	jl	0x1e66


0x1e66:	mov	rsi, r13
0x1e69:	mov	edi, 4
0x1e6e:	call	0x4100


0x1d77:	movabs	rax, 0x7fffffffffffffff
0x1d81:	cqo	
0x1d83:	idiv	r12
0x1d86:	cmp	qword ptr [rsp + 8], rax
0x1d8b:	jg	0x1e66


0x1d91:	imul	r12, qword ptr [rsp + 8]
0x1d97:	jmp	0x1cab


0x1cab:	test	ebx, ebx
0x1cad:	jne	0x1de7


0x1ba1:	test	eax, eax
0x1ba3:	jne	0x1d9c


0x1ba9:	xor	r14d, 1
0x1bad:	or	byte ptr [rsp + 0x10], r14b
0x1bb2:	jmp	0x1af0


0x1d9c:	mov	rsi, r13
0x1d9f:	mov	edi, 4
0x1da4:	call	0x4100


0x1bf6:	cmp	qword ptr [rsp + 0x18], 0
0x1bfc:	jns	0x1ab2


0x1c02:	mov	eax, dword ptr [rsp + 0x10]
0x1c06:	mov	dword ptr [r14], eax
0x1c09:	mov	rsi, qword ptr [rip + 0x2064c0]
0x1c10:	mov	edi, 4
0x1c15:	call	0x4100


0x1c1a:	lea	rsi, [rip + 0x3d6a]
0x1c21:	mov	edx, 5
0x1c26:	xor	edi, edi
0x1c28:	mov	rbp, rax
0x1c2b:	call	0x1480


0x1c30:	mov	rbx, rax
0x1c33:	call	0x1400


0x1c38:	mov	esi, dword ptr [rax]
0x1c3a:	mov	rcx, rbp
0x1c3d:	mov	rdx, rbx
0x1c40:	mov	edi, 1
0x1c45:	xor	eax, eax
0x1c47:	call	0x1630


0x1da9:	lea	rsi, [rip + 0x3c20]
0x1db0:	mov	edx, 5
0x1db5:	xor	edi, edi
0x1db7:	mov	r13, rax
0x1dba:	call	0x1480


0x1dbf:	mov	r12, rax
0x1dc2:	call	0x1400


0x1dc7:	mov	esi, dword ptr [rax]
0x1dc9:	mov	rcx, r13
0x1dcc:	mov	rdx, r12
0x1dcf:	xor	edi, edi
0x1dd1:	xor	eax, eax
0x1dd3:	call	0x1630


0x1dd8:	mov	byte ptr [rsp + 0x10], 1
0x1ddd:	jmp	0x1af0


0x1e73:	lea	rsi, [rip + 0x4146]
0x1e7a:	mov	edx, 5
0x1e7f:	xor	edi, edi
0x1e81:	mov	r14, rax
0x1e84:	call	0x1480


0x1e89:	mov	rcx, qword ptr [rsp + 8]
0x1e8e:	mov	r9, r14
0x1e91:	mov	rdx, rax
0x1e94:	mov	r8, r12
0x1e97:	xor	esi, esi
0x1e99:	xor	edi, edi
0x1e9b:	xor	eax, eax
0x1e9d:	xor	r14d, r14d
0x1ea0:	call	0x1630


0x1ea5:	jmp	0x1b99


0x1b67:	lea	rsi, [rip + 0x3e52]
0x1b6e:	mov	r12, rax
0x1b71:	mov	edx, 5
0x1b76:	xor	edi, edi
0x1b78:	call	0x1480


0x1b7d:	mov	r14, rax
0x1b80:	call	0x1400


0x1b85:	mov	esi, dword ptr [rax]
0x1b87:	mov	rdx, r14
0x1b8a:	mov	rcx, r12
0x1b8d:	xor	edi, edi
0x1b8f:	xor	eax, eax
0x1b91:	xor	r14d, r14d
0x1b94:	call	0x1630


0x1ce6:	lea	rsi, [rip + 0x4383]
0x1ced:	mov	edx, 5
0x1cf2:	xor	edi, edi
0x1cf4:	mov	r14, rax
0x1cf7:	call	0x1480


0x1cfc:	mov	qword ptr [rsp + 0x28], rax
0x1d01:	call	0x1400


0x1d06:	mov	rdx, qword ptr [rsp + 0x28]
0x1d0b:	mov	esi, dword ptr [rax]
0x1d0d:	mov	rcx, r14
0x1d10:	mov	r8, r12
0x1d13:	xor	edi, edi
0x1d15:	xor	eax, eax
0x1d17:	xor	r14d, r14d
0x1d1a:	call	0x1630


0x1d1f:	jmp	0x1b99


0x1c73:	lea	rsi, [rip + 0x3d2b]
0x1c7a:	mov	edx, 5
0x1c7f:	xor	edi, edi
0x1c81:	mov	r13, rax
0x1c84:	call	0x1480


0x1c89:	mov	esi, dword ptr [r12]
0x1c8d:	mov	rdx, rax
0x1c90:	mov	rcx, r13
0x1c93:	xor	edi, edi
0x1c95:	xor	eax, eax
0x1c97:	call	0x1630


0x1c9c:	mov	byte ptr [rsp + 0x10], 1
0x1ca1:	jmp	0x1af0


0x1f90:	mov	edx, 5
0x1f95:	mov	r12, rax
0x1f98:	lea	rsi, [rip + 0x39ec]
0x1f9f:	jmp	0x1b76


0x1b76:	xor	edi, edi
0x1b78:	call	0x1480


0x1fe9:	mov	edx, 5
0x1fee:	mov	r12, rax
0x1ff1:	lea	rsi, [rip + 0x4050]
0x1ff8:	jmp	0x1ee8


0x1ee8:	xor	edi, edi
0x1eea:	xor	r14d, r14d
0x1eed:	call	0x1480


0x1ef2:	mov	rcx, r12
0x1ef5:	mov	rdx, rax
0x1ef8:	xor	esi, esi
0x1efa:	xor	edi, edi
0x1efc:	xor	eax, eax
0x1efe:	call	0x1630


0x1f03:	jmp	0x1b99


0x1fc8:	mov	edx, 5
0x1fcd:	mov	r12, rax
0x1fd0:	lea	rsi, [rip + 0x4049]
0x1fd7:	jmp	0x1ee8


0x1ed9:	lea	rsi, [rip + 0x4110]
0x1ee0:	mov	r12, rax
0x1ee3:	mov	edx, 5
0x1ee8:	xor	edi, edi
0x1eea:	xor	r14d, r14d
0x1eed:	call	0x1480


0x207b:	lea	rsi, [rip + 0x38fa]
0x2082:	mov	edx, 5
0x2087:	xor	edi, edi
0x2089:	mov	rbp, rax
0x208c:	call	0x1480


0x2091:	mov	rbx, rax
0x2094:	call	0x1400


0x2099:	mov	esi, dword ptr [rax]
0x209b:	mov	rcx, rbp
0x209e:	mov	rdx, rbx
0x20a1:	mov	edi, 1
0x20a6:	xor	eax, eax
0x20a8:	call	0x1630


0x1a46:	lea	rsi, [rip + 0x3f0e]
0x1a4d:	xor	edi, edi
0x1a4f:	mov	rbp, rax
0x1a52:	call	0x43b0


0x1a57:	mov	edx, 5
0x1a5c:	mov	rbx, rax
0x1a5f:	lea	rsi, [rip + 0x453a]
0x1a66:	jmp	0x1a07


0x1a07:	xor	edi, edi
0x1a09:	call	0x1480


0x1a0e:	mov	r8, rbp
0x1a11:	mov	rdx, rax
0x1a14:	mov	rcx, rbx
0x1a17:	xor	esi, esi
0x1a19:	xor	edi, edi
0x1a1b:	xor	eax, eax
0x1a1d:	call	0x1630


0x1a22:	jmp	0x1792


0x19e7:	lea	rsi, [rip + 0x3f66]
0x19ee:	xor	edi, edi
0x19f0:	mov	rbp, rax
0x19f3:	call	0x43b0


0x19f8:	lea	rsi, [rip + 0x4579]
0x19ff:	mov	rbx, rax
0x1a02:	mov	edx, 5
0x1a07:	xor	edi, edi
0x1a09:	call	0x1480


0x2025:	lea	rsi, [rip + 0x3928]
0x202c:	xor	edi, edi
0x202e:	mov	rbp, rax
0x2031:	call	0x43b0


0x2036:	mov	edx, 5
0x203b:	mov	rbx, rax
0x203e:	lea	rsi, [rip + 0x3f0b]
0x2045:	jmp	0x1a07


0x267a:	mov	esi, dword ptr [rbx]
0x267c:	lea	rdx, [rip + 0x3a21]
0x2683:	mov	rcx, rax
0x2686:	mov	r8, rbp
0x2689:	xor	edi, edi
0x268b:	xor	eax, eax
0x268d:	call	0x1630


0x4d14:	mov	esi, dword ptr [r14]
0x4d17:	mov	r8, rax
0x4d1a:	mov	eax, 0
0x4d1f:	lea	rdx, [rip + 0x137e]
0x4d26:	mov	rcx, r13
0x4d29:	cmp	esi, 0x16
0x4d2c:	cmove	esi, eax
0x4d2f:	test	ebx, ebx
0x4d31:	mov	eax, 1
0x4d36:	cmove	ebx, eax
0x4d39:	xor	eax, eax
0x4d3b:	mov	edi, ebx
0x4d3d:	call	0x1630


0x4d42:	mov	rbp, qword ptr [rsp]
0x4d46:	mov	rdx, qword ptr [rsp + 8]
0x4d4b:	xor	rdx, qword ptr fs:[0x28]
0x4d54:	mov	rax, rbp
0x4d57:	jne	0x4dac


0x3b7c:	add	rsp, 0x20
0x3b80:	mov	r11, qword ptr [rsp + 0x10]
0x3b85:	cmp	r11, rax
0x3b88:	ja	0x3bf1


0x3b8a:	lea	rsi, [rax + 1]
0x3b8e:	lea	rax, [rip + 0x20456b]
0x3b95:	cmp	r12, rax
0x3b98:	mov	qword ptr [rbx], rsi
0x3b9b:	je	0x3baf


0x3bf1:	mov	eax, dword ptr [rsp + 0x18]
0x3bf5:	mov	dword ptr [r13], eax
0x3bf9:	add	rsp, 0x28
0x3bfd:	mov	rax, r12
0x3c00:	pop	rbx
0x3c01:	pop	rbp
0x3c02:	pop	r12
0x3c04:	pop	r13
0x3c06:	pop	r14
0x3c08:	pop	r15
0x3c0a:	ret	


0x3baf:	mov	rdi, rsi
0x3bb2:	mov	qword ptr [rsp + 0x10], rsi
0x3bb7:	call	0x4a10


0x3b9d:	mov	rdi, r12
0x3ba0:	mov	qword ptr [rsp + 0x10], rsi
0x3ba5:	call	0x13e0


0x3baa:	mov	rsi, qword ptr [rsp + 0x10]
0x3baf:	mov	rdi, rsi
0x3bb2:	mov	qword ptr [rsp + 0x10], rsi
0x3bb7:	call	0x4a10


0x3bbc:	sub	rsp, 8
0x3bc0:	mov	qword ptr [rbx + 8], rax
0x3bc4:	mov	r8d, dword ptr [rbp]
0x3bc8:	push	qword ptr [rbp + 0x30]
0x3bcb:	push	qword ptr [rbp + 0x28]
0x3bce:	mov	rcx, r14
0x3bd1:	push	r15
0x3bd3:	mov	r9d, dword ptr [rsp + 0x3c]
0x3bd8:	mov	rdi, rax
0x3bdb:	mov	rdx, qword ptr [rsp + 0x28]
0x3be0:	mov	rsi, qword ptr [rsp + 0x30]
0x3be5:	mov	r12, rax
0x3be8:	call	0x2850


0x4302:	mov	rdi, qword ptr [rsp + 0x38]
0x4307:	xor	rdi, qword ptr fs:[0x28]
0x4310:	jne	0x431c


0x4312:	add	rsp, 0x48
0x4316:	ret	


0x431c:	call	0x14b0


0x404f:	mov	rcx, qword ptr [rsp + 0x38]
0x4054:	xor	rcx, qword ptr fs:[0x28]
0x405d:	jne	0x4069


0x405f:	add	rsp, 0x48
0x4063:	ret	


0x4069:	call	0x14b0


0x40db:	mov	rdx, qword ptr [rsp + 0x38]
0x40e0:	xor	rdx, qword ptr fs:[0x28]
0x40e9:	jne	0x40f5


0x40eb:	add	rsp, 0x48
0x40ef:	ret	


0x40f5:	call	0x14b0


0x426f:	mov	rcx, qword ptr [rsp + 0x38]
0x4274:	xor	rcx, qword ptr fs:[0x28]
0x427d:	jne	0x4289


0x427f:	add	rsp, 0x48
0x4283:	ret	


0x4289:	call	0x14b0


0x419e:	mov	rsi, qword ptr [rsp + 0x38]
0x41a3:	xor	rsi, qword ptr fs:[0x28]
0x41ac:	jne	0x41b3


0x41ae:	add	rsp, 0x48
0x41b2:	ret	


0x41b3:	call	0x14b0


0x3bed:	add	rsp, 0x20
0x3bf1:	mov	eax, dword ptr [rsp + 0x18]
0x3bf5:	mov	dword ptr [r13], eax
0x3bf9:	add	rsp, 0x28
0x3bfd:	mov	rax, r12
0x3c00:	pop	rbx
0x3c01:	pop	rbp
0x3c02:	pop	r12
0x3c04:	pop	r13
0x3c06:	pop	r14
0x3c08:	pop	r15
0x3c0a:	ret	


0x3e3c:	lea	rsi, [rax + 1]
0x3e40:	mov	qword ptr [rsp + 0x48], rax
0x3e45:	add	rsp, 0x20
0x3e49:	mov	rdi, rsi
0x3e4c:	mov	qword ptr [rsp + 0x18], rsi
0x3e51:	call	0x4a10


0x3e56:	mov	qword ptr [rsp + 0x10], rax
0x3e5b:	sub	rsp, 8
0x3e5f:	push	qword ptr [rbx + 0x30]
0x3e62:	push	qword ptr [rbx + 0x28]
0x3e65:	mov	r10, qword ptr [rsp + 0x38]
0x3e6a:	mov	r9d, ebp
0x3e6d:	mov	r8d, dword ptr [rbx]
0x3e70:	mov	rcx, r15
0x3e73:	mov	rdx, r14
0x3e76:	mov	rdi, rax
0x3e79:	push	r10
0x3e7b:	mov	rsi, qword ptr [rsp + 0x38]
0x3e80:	call	0x2850


0x3e85:	mov	eax, dword ptr [rsp + 0x2c]
0x3e89:	add	rsp, 0x20
0x3e8d:	test	r12, r12
0x3e90:	mov	dword ptr [r13], eax
0x3e94:	je	0x3e9f


0x3e9f:	mov	rax, qword ptr [rsp + 0x10]
0x3ea4:	add	rsp, 0x38
0x3ea8:	pop	rbx
0x3ea9:	pop	rbp
0x3eaa:	pop	r12
0x3eac:	pop	r13
0x3eae:	pop	r14
0x3eb0:	pop	r15
0x3eb2:	ret	


0x3e96:	mov	r11, qword ptr [rsp + 0x28]
0x3e9b:	mov	qword ptr [r12], r11
0x3e9f:	mov	rax, qword ptr [rsp + 0x10]
0x3ea4:	add	rsp, 0x38
0x3ea8:	pop	rbx
0x3ea9:	pop	rbp
0x3eaa:	pop	r12
0x3eac:	pop	r13
0x3eae:	pop	r14
0x3eb0:	pop	r15
0x3eb2:	ret	


0x3db1:	mov	dword ptr [rbp], r12d
0x3db5:	add	rsp, 0x38
0x3db9:	pop	rbx
0x3dba:	pop	rbp
0x3dbb:	pop	r12
0x3dbd:	pop	r13
0x3dbf:	pop	r14
0x3dc1:	pop	r15
0x3dc3:	ret	


0x57cd:	add	rbx, 1
0x57d1:	cmp	rbp, rbx
0x57d4:	jne	0x57c0


0x57c0:	mov	rdx, r15
0x57c3:	mov	rsi, r14
0x57c6:	mov	edi, r13d
0x57c9:	call	qword ptr [r12 + rbx*8]






0x4680:	lea	rsi, [rip + 0x20b1]
0x4687:	mov	edx, 5
0x468c:	xor	edi, edi
0x468e:	mov	r14, qword ptr [rbx + 0x18]
0x4692:	mov	r13, qword ptr [rbx + 0x10]
0x4696:	mov	r12, qword ptr [rbx + 8]
0x469a:	mov	rbx, qword ptr [rbx]
0x469d:	call	0x1480


0x44a0:	mov	r9, qword ptr [rbx + 0x38]
0x44a4:	mov	rax, qword ptr [rbx + 0x10]
0x44a8:	lea	rsi, [rip + 0x2329]
0x44af:	mov	r8, qword ptr [rbx + 8]
0x44b3:	mov	edx, 5
0x44b8:	xor	edi, edi
0x44ba:	mov	r13, qword ptr [rbx + 0x30]
0x44be:	mov	r12, qword ptr [rbx + 0x28]
0x44c2:	mov	qword ptr [rsp + 0x10], r9
0x44c7:	mov	r15, qword ptr [rbx + 0x20]
0x44cb:	mov	r14, qword ptr [rbx + 0x18]
0x44cf:	mov	qword ptr [rsp], rax
0x44d3:	mov	qword ptr [rsp + 8], r8
0x44d8:	mov	rbx, qword ptr [rbx]
0x44db:	call	0x1480


0x45a8:	mov	rbx, qword ptr [rbx]
0x45ab:	lea	rsi, [rip + 0x202d]
0x45b2:	mov	edx, 5
0x45b7:	xor	edi, edi
0x45b9:	call	0x1480


0x45e8:	mov	r12, qword ptr [rbx + 8]
0x45ec:	lea	rsi, [rip + 0x1ffc]
0x45f3:	mov	rbx, qword ptr [rbx]
0x45f6:	mov	edx, 5
0x45fb:	xor	edi, edi
0x45fd:	call	0x1480


0x4708:	mov	r8, qword ptr [rbx + 8]
0x470c:	mov	r12, qword ptr [rbx + 0x28]
0x4710:	lea	rsi, [rip + 0x2069]
0x4717:	mov	r15, qword ptr [rbx + 0x20]
0x471b:	mov	r14, qword ptr [rbx + 0x18]
0x471f:	mov	edx, 5
0x4724:	mov	r13, qword ptr [rbx + 0x10]
0x4728:	xor	edi, edi
0x472a:	mov	rbx, qword ptr [rbx]
0x472d:	mov	qword ptr [rsp], r8
0x4731:	call	0x1480


0x4630:	mov	r13, qword ptr [rbx + 0x10]
0x4634:	mov	r12, qword ptr [rbx + 8]
0x4638:	lea	rsi, [rip + 0x1fc7]
0x463f:	mov	rbx, qword ptr [rbx]
0x4642:	mov	edx, 5
0x4647:	xor	edi, edi
0x4649:	call	0x1480


0x4770:	mov	r9, qword ptr [rbx + 0x10]
0x4774:	mov	r13, qword ptr [rbx + 0x30]
0x4778:	lea	rsi, [rip + 0x2029]
0x477f:	mov	r12, qword ptr [rbx + 0x28]
0x4783:	mov	r15, qword ptr [rbx + 0x20]
0x4787:	mov	edx, 5
0x478c:	mov	r14, qword ptr [rbx + 0x18]
0x4790:	mov	r8, qword ptr [rbx + 8]
0x4794:	xor	edi, edi
0x4796:	mov	qword ptr [rsp + 8], r9
0x479b:	mov	rbx, qword ptr [rbx]
0x479e:	mov	qword ptr [rsp], r8
0x47a2:	call	0x1480


0x4550:	mov	r10, qword ptr [rbx + 0x40]
0x4554:	mov	r9, qword ptr [rbx + 0x38]
0x4558:	lea	rsi, [rip + 0x22a9]
0x455f:	mov	rax, qword ptr [rbx + 0x10]
0x4563:	mov	r8, qword ptr [rbx + 8]
0x4567:	mov	edx, 5
0x456c:	mov	r13, qword ptr [rbx + 0x30]
0x4570:	mov	r12, qword ptr [rbx + 0x28]
0x4574:	mov	r15, qword ptr [rbx + 0x20]
0x4578:	mov	r14, qword ptr [rbx + 0x18]
0x457c:	mov	rbx, qword ptr [rbx]
0x457f:	mov	qword ptr [rsp + 0x18], r10
0x4584:	mov	qword ptr [rsp + 0x10], r9
0x4589:	mov	qword ptr [rsp], rax
0x458d:	mov	qword ptr [rsp + 8], r8
0x4592:	xor	edi, edi
0x4594:	call	0x1480


0x4516:	add	rsp, 0x28
0x451a:	pop	rbx
0x451b:	pop	rbp
0x451c:	pop	r12
0x451e:	pop	r13
0x4520:	pop	r14
0x4522:	pop	r15
0x4524:	ret	


0x46d8:	mov	r15, qword ptr [rbx + 0x20]
0x46dc:	lea	rsi, [rip + 0x2075]
0x46e3:	mov	edx, 5
0x46e8:	xor	edi, edi
0x46ea:	mov	r14, qword ptr [rbx + 0x18]
0x46ee:	mov	r13, qword ptr [rbx + 0x10]
0x46f2:	mov	r12, qword ptr [rbx + 8]
0x46f6:	mov	rbx, qword ptr [rbx]
0x46f9:	call	0x1480


0x46fe:	push	r15
0x4700:	jmp	0x46a6


0x46a6:	push	r14
0x46a8:	mov	rdx, rax
0x46ab:	mov	r9, r13
0x46ae:	mov	r8, r12
0x46b1:	mov	rcx, rbx
0x46b4:	mov	rdi, rbp
0x46b7:	mov	esi, 1
0x46bc:	xor	eax, eax
0x46be:	call	0x1690


0x46c3:	pop	rax
0x46c4:	pop	rdx
0x46c5:	add	rsp, 0x28
0x46c9:	pop	rbx
0x46ca:	pop	rbp
0x46cb:	pop	r12
0x46cd:	pop	r13
0x46cf:	pop	r14
0x46d1:	pop	r15
0x46d3:	ret	


0x47a7:	push	r13
0x47a9:	push	r12
0x47ab:	push	r15
0x47ad:	push	r14
0x47af:	mov	r9, qword ptr [rsp + 0x28]
0x47b4:	jmp	0x4743


0x4743:	mov	r8, qword ptr [rsp + 0x20]
0x4748:	mov	rcx, rbx
0x474b:	mov	rdx, rax
0x474e:	mov	rdi, rbp
0x4751:	mov	esi, 1
0x4756:	xor	eax, eax
0x4758:	call	0x1690


0x475d:	add	rsp, 0x20
0x4761:	add	rsp, 0x28
0x4765:	pop	rbx
0x4766:	pop	rbp
0x4767:	pop	r12
0x4769:	pop	r13
0x476b:	pop	r14
0x476d:	pop	r15
0x476f:	ret	


0x464e:	add	rsp, 0x28
0x4652:	mov	r9, r13
0x4655:	mov	r8, r12
0x4658:	mov	rcx, rbx
0x465b:	mov	rdi, rbp
0x465e:	mov	rdx, rax
0x4661:	pop	rbx
0x4662:	pop	rbp
0x4663:	pop	r12
0x4665:	pop	r13
0x4667:	pop	r14
0x4669:	pop	r15
0x466b:	mov	esi, 1
0x4670:	xor	eax, eax
0x4672:	jmp	0x1690


0x4736:	sub	rsp, 8
0x473a:	mov	r9, r13
0x473d:	push	r12
0x473f:	push	r15
0x4741:	push	r14
0x4743:	mov	r8, qword ptr [rsp + 0x20]
0x4748:	mov	rcx, rbx
0x474b:	mov	rdx, rax
0x474e:	mov	rdi, rbp
0x4751:	mov	esi, 1
0x4756:	xor	eax, eax
0x4758:	call	0x1690


0x4602:	add	rsp, 0x28
0x4606:	mov	r8, r12
0x4609:	mov	rcx, rbx
0x460c:	mov	rdi, rbp
0x460f:	mov	rdx, rax
0x4612:	mov	esi, 1
0x4617:	pop	rbx
0x4618:	pop	rbp
0x4619:	pop	r12
0x461b:	pop	r13
0x461d:	pop	r14
0x461f:	pop	r15
0x4621:	xor	eax, eax
0x4623:	jmp	0x1690


0x45be:	add	rsp, 0x28
0x45c2:	mov	rcx, rbx
0x45c5:	mov	rdi, rbp
0x45c8:	pop	rbx
0x45c9:	pop	rbp
0x45ca:	pop	r12
0x45cc:	pop	r13
0x45ce:	pop	r14
0x45d0:	pop	r15
0x45d2:	mov	rdx, rax
0x45d5:	mov	esi, 1
0x45da:	xor	eax, eax
0x45dc:	jmp	0x1690


0x44e0:	sub	rsp, 8
0x44e4:	mov	r9, qword ptr [rsp + 0x18]
0x44e9:	mov	rdx, rax
0x44ec:	mov	rcx, rbx
0x44ef:	mov	esi, 1
0x44f4:	mov	rdi, rbp
0x44f7:	xor	eax, eax
0x44f9:	push	r9
0x44fb:	push	r13
0x44fd:	push	r12
0x44ff:	push	r15
0x4501:	push	r14
0x4503:	mov	r9, qword ptr [rsp + 0x30]
0x4508:	mov	r8, qword ptr [rsp + 0x38]
0x450d:	call	0x1690


0x46a2:	sub	rsp, 8
0x46a6:	push	r14
0x46a8:	mov	rdx, rax
0x46ab:	mov	r9, r13
0x46ae:	mov	r8, r12
0x46b1:	mov	rcx, rbx
0x46b4:	mov	rdi, rbp
0x46b7:	mov	esi, 1
0x46bc:	xor	eax, eax
0x46be:	call	0x1690


0x33f0:	sub	rsp, 8
0x33f4:	mov	rcx, rbp
0x33f7:	mov	rsi, r13
0x33fa:	push	qword ptr [rsp + 0x68]
0x33fe:	push	qword ptr [rsp + 0x78]
0x3402:	mov	rdi, r14
0x3405:	push	0
0x3407:	mov	r9d, dword ptr [rsp + 0x98]
0x340f:	mov	r8d, dword ptr [rsp + 0x28]
0x3414:	mov	rdx, qword ptr [rsp + 0x30]
0x3419:	and	r9d, 0xfffffffd
0x341d:	call	0x2850


0x3422:	add	rsp, 0x20
0x3426:	mov	r15, rax
0x3429:	mov	rbx, qword ptr [rsp + 0xa8]
0x3431:	xor	rbx, qword ptr fs:[0x28]
0x343a:	mov	rax, r15
0x343d:	jne	0x3a43


0x3443:	add	rsp, 0xb8
0x344a:	pop	rbx
0x344b:	pop	rbp
0x344c:	pop	r12
0x344e:	pop	r13
0x3450:	pop	r14
0x3452:	pop	r15
0x3454:	ret	


0x3a43:	call	0x14b0


0x39ed:	sub	rsp, 8
0x39f1:	mov	r8d, 5
0x39f7:	mov	rcx, r11
0x39fa:	push	qword ptr [rsp + 0x68]
0x39fe:	push	qword ptr [rsp + 0x78]
0x3a02:	mov	rdi, r14
0x3a05:	push	qword ptr [rsp + 0x38]
0x3a09:	mov	r9d, dword ptr [rsp + 0x98]
0x3a11:	mov	rdx, qword ptr [rsp + 0x30]
0x3a16:	mov	rsi, qword ptr [rsp + 0x70]
0x3a1b:	call	0x2850


0x3a20:	add	rsp, 0x20
0x3a24:	mov	r15, rax
0x3a27:	jmp	0x3429


0x3429:	mov	rbx, qword ptr [rsp + 0xa8]
0x3431:	xor	rbx, qword ptr fs:[0x28]
0x343a:	mov	rax, r15
0x343d:	jne	0x3a43


0x13d0:	push	qword ptr [rip + 0x206a7a]
0x13d6:	jmp	qword ptr [rip + 0x206a7c]


0x13dc:	nop	dword ptr [rax]


0x13e6:	push	0
0x13eb:	jmp	0x13d0


0x13f6:	push	1
0x13fb:	jmp	0x13d0


0x1406:	push	2
0x140b:	jmp	0x13d0


0x1416:	push	3
0x141b:	jmp	0x13d0


0x1426:	push	4
0x142b:	jmp	0x13d0


0x1436:	push	5
0x143b:	jmp	0x13d0


0x1446:	push	6
0x144b:	jmp	0x13d0


0x1456:	push	7
0x145b:	jmp	0x13d0


0x1466:	push	8
0x146b:	jmp	0x13d0


0x1476:	push	9
0x147b:	jmp	0x13d0


0x1486:	push	0xa
0x148b:	jmp	0x13d0


0x1496:	push	0xb
0x149b:	jmp	0x13d0


0x14a6:	push	0xc
0x14ab:	jmp	0x13d0


0x14b6:	push	0xd
0x14bb:	jmp	0x13d0


0x14c6:	push	0xe
0x14cb:	jmp	0x13d0


0x14d6:	push	0xf
0x14db:	jmp	0x13d0


0x14e6:	push	0x10
0x14eb:	jmp	0x13d0


0x14f6:	push	0x11
0x14fb:	jmp	0x13d0


0x1506:	push	0x12
0x150b:	jmp	0x13d0


0x1516:	push	0x13
0x151b:	jmp	0x13d0


0x1526:	push	0x14
0x152b:	jmp	0x13d0


0x1536:	push	0x15
0x153b:	jmp	0x13d0


0x1546:	push	0x16
0x154b:	jmp	0x13d0


0x1550:	jmp	qword ptr [rip + 0x2069c2]




0x1556:	push	0x17
0x155b:	jmp	0x13d0


0x1566:	push	0x18
0x156b:	jmp	0x13d0


0x1576:	push	0x19
0x157b:	jmp	0x13d0


0x1586:	push	0x1a
0x158b:	jmp	0x13d0


0x1596:	push	0x1b
0x159b:	jmp	0x13d0


0x15a6:	push	0x1c
0x15ab:	jmp	0x13d0


0x15b6:	push	0x1d
0x15bb:	jmp	0x13d0


0x15c6:	push	0x1e
0x15cb:	jmp	0x13d0


0x15d6:	push	0x1f
0x15db:	jmp	0x13d0


0x15e6:	push	0x20
0x15eb:	jmp	0x13d0


0x15f6:	push	0x21
0x15fb:	jmp	0x13d0


0x1606:	push	0x22
0x160b:	jmp	0x13d0


0x1616:	push	0x23
0x161b:	jmp	0x13d0


0x1626:	push	0x24
0x162b:	jmp	0x13d0


0x1636:	push	0x25
0x163b:	jmp	0x13d0


0x1646:	push	0x26
0x164b:	jmp	0x13d0


0x1656:	push	0x27
0x165b:	jmp	0x13d0


0x1666:	push	0x28
0x166b:	jmp	0x13d0


0x1676:	push	0x29
0x167b:	jmp	0x13d0


0x1686:	push	0x2a
0x168b:	jmp	0x13d0


0x1696:	push	0x2b
0x169b:	jmp	0x13d0


0x16a0:	jmp	qword ptr [rip + 0x20691a]




0x16a6:	push	0x2c
0x16ab:	jmp	0x13d0


0x16b0:	jmp	qword ptr [rip + 0x206912]




0x16b6:	push	0x2d
0x16bb:	jmp	0x13d0


0x16c6:	push	0x2e
0x16cb:	jmp	0x13d0


0x20b9:	nop	dword ptr [rax]


0x20ea:	hlt	


0x20eb:	nop	dword ptr [rax + rax]


0x2122:	nop	dword ptr [rax]
0x2126:	nop	word ptr cs:[rax + rax]


0x2172:	nop	dword ptr [rax]
0x2176:	nop	word ptr cs:[rax + rax]


0x21ba:	nop	word ptr [rax + rax]


0x21ca:	nop	word ptr [rax + rax]


0x25ea:	nop	word ptr [rax + rax]


0x25f8:	nop	dword ptr [rax + rax]


0x2608:	nop	dword ptr [rax + rax]


0x26b4:	nop	word ptr cs:[rax + rax]
0x26be:	nop	


0x275f:	nop	


0x2847:	nop	word ptr [rax + rax]


0x28e3:	mov	byte ptr [rsp + 0xe], 1
0x28e8:	mov	byte ptr [rsp + 0x7c], 0
0x28ed:	xor	r12d, r12d
0x28f0:	mov	qword ptr [rsp + 0x50], 0
0x28f9:	mov	byte ptr [rsp + 0xf], 1
0x28fe:	mov	byte ptr [rsp + 0xd], 0
0x2903:	lea	rax, [rip + 0x37fb]
0x290a:	mov	qword ptr [rsp + 0x18], 1
0x2913:	xor	r15d, r15d
0x2916:	mov	dword ptr [rsp + 8], 2
0x291e:	mov	qword ptr [rsp + 0x48], rax
0x2923:	xor	r11d, r11d
0x2926:	mov	rax, rbp
0x2929:	mov	r8d, r12d
0x292c:	mov	rbp, r11
0x292f:	mov	r11, rax
0x2932:	nop	word ptr [rax + rax]
0x2938:	cmp	r11, rbp
0x293b:	setne	r12b
0x293f:	cmp	r11, -1
0x2943:	jne	0x2952


0x2945:	mov	rax, qword ptr [rsp + 0x10]
0x294a:	cmp	byte ptr [rax + rbp], 0
0x294e:	setne	r12b
0x2952:	test	r12b, r12b
0x2955:	je	0x2fb0


0x2952:	test	r12b, r12b
0x2955:	je	0x2fb0


0x2fb0:	cmp	dword ptr [rsp + 8], 2
0x2fb5:	movzx	ebx, byte ptr [rsp + 0xf]
0x2fba:	mov	r12d, r8d
0x2fbd:	mov	rbp, r11
0x2fc0:	sete	dl
0x2fc3:	mov	eax, ebx
0x2fc5:	test	r15, r15
0x2fc8:	sete	cl
0x2fcb:	and	eax, edx
0x2fcd:	and	al, cl
0x2fcf:	jne	0x3a36


0x295b:	cmp	dword ptr [rsp + 8], 2
0x2960:	mov	rdi, qword ptr [rsp + 0x10]
0x2965:	lea	r9, [rdi + rbp]
0x2969:	setne	al
0x296c:	and	al, byte ptr [rsp + 0xd]
0x2970:	mov	r10d, eax
0x2973:	je	0x2a20


0x2fd5:	mov	eax, ebx
0x2fd7:	xor	eax, 1
0x2fda:	and	dl, al
0x2fdc:	je	0x394c


0x3a36:	mov	dword ptr [rsp + 8], 2
0x3a3e:	jmp	0x33d9


0x2a20:	movzx	ebx, byte ptr [r9]
0x2a24:	cmp	bl, 0x7e
0x2a27:	ja	0x2d48


0x2979:	mov	rax, qword ptr [rsp + 0x18]
0x297e:	test	rax, rax
0x2981:	je	0x2db0


0x394c:	mov	rbx, qword ptr [rsp + 0x48]
0x3951:	test	rbx, rbx
0x3954:	je	0x3982


0x2fe2:	cmp	byte ptr [rsp + 0x7c], 0
0x2fe7:	je	0x394a


0x33d9:	cmp	byte ptr [rsp + 0xd], 0
0x33de:	je	0x33f0


0x2a2d:	lea	rcx, [rip + 0x3758]
0x2a34:	movzx	edx, bl
0x2a37:	movsxd	rax, dword ptr [rcx + rdx*4]
0x2a3b:	add	rax, rcx
0x2a3e:	jmp	rax


0x2d48:	cmp	qword ptr [rsp + 0x58], 1
0x2d4e:	jne	0x30f8


0x2db0:	movzx	ebx, byte ptr [r9]
0x2db4:	cmp	bl, 0x7e
0x2db7:	ja	0x2d40


0x2987:	cmp	r11, -1
0x298b:	lea	rbx, [rbp + rax]
0x2990:	jne	0x29c0


0x3982:	cmp	r13, r15
0x3985:	jbe	0x3429


0x3956:	test	al, al
0x3958:	je	0x3982


0x394a:	mov	eax, edx
0x394c:	mov	rbx, qword ptr [rsp + 0x48]
0x3951:	test	rbx, rbx
0x3954:	je	0x3982


0x2fed:	cmp	byte ptr [rsp + 0xe], 0
0x2ff2:	jne	0x39ed


0x33e0:	test	al, al
0x33e2:	mov	eax, 4
0x33e7:	cmove	eax, dword ptr [rsp + 8]
0x33ec:	mov	dword ptr [rsp + 8], eax


0x2d54:	mov	qword ptr [rsp + 0x38], r11
0x2d59:	mov	byte ptr [rsp + 0x30], r8b
0x2d5e:	mov	byte ptr [rsp + 0x28], r10b
0x2d63:	call	0x16c0


0x30f8:	lea	rax, [rsp + 0xa0]
0x3100:	cmp	r11, -1
0x3104:	mov	qword ptr [rsp + 0xa0], 0
0x3110:	mov	qword ptr [rsp + 0x28], rax
0x3115:	jne	0x3144


0x2db9:	lea	rcx, [rip + 0x35c8]
0x2dc0:	movzx	edx, bl
0x2dc3:	movsxd	rax, dword ptr [rcx + rdx*4]
0x2dc7:	add	rax, rcx
0x2dca:	jmp	rax


0x2d40:	xor	r10d, r10d
0x2d43:	nop	dword ptr [rax + rax]
0x2d48:	cmp	qword ptr [rsp + 0x58], 1
0x2d4e:	jne	0x30f8


0x2992:	cmp	rax, 1
0x2996:	jbe	0x29c0


0x29c0:	cmp	rbx, r11
0x29c3:	mov	byte ptr [rsp + 0x28], r10b
0x29c8:	ja	0x2f80


0x398b:	mov	byte ptr [r14 + r15], 0
0x3990:	jmp	0x3429


0x395a:	movzx	ecx, byte ptr [rbx]
0x395d:	mov	rax, rbx
0x3960:	test	cl, cl
0x3962:	je	0x3982


0x2ff8:	test	r13, r13
0x2ffb:	sete	al
0x2ffe:	cmp	qword ptr [rsp + 0x50], 0
0x3004:	setne	dl
0x3007:	and	al, dl
0x3009:	je	0x3a2c


0x3117:	mov	rdi, qword ptr [rsp + 0x10]
0x311c:	mov	byte ptr [rsp + 0x40], r8b
0x3121:	mov	byte ptr [rsp + 0x38], r10b
0x3126:	mov	qword ptr [rsp + 0x30], r9
0x312b:	call	0x14a0


0x3144:	lea	rax, [rsp + 0x9c]
0x314c:	xor	ecx, ecx
0x314e:	mov	byte ptr [rsp + 0x7e], bl
0x3152:	mov	byte ptr [rsp + 0x7d], r8b
0x3157:	mov	rbx, rcx
0x315a:	mov	qword ptr [rsp + 0x88], r9
0x3162:	mov	qword ptr [rsp + 0x38], rax
0x3167:	mov	byte ptr [rsp + 0x7f], r10b
0x316c:	mov	qword ptr [rsp + 0x80], r15
0x3174:	mov	qword ptr [rsp + 0x40], r14
0x3179:	mov	qword ptr [rsp + 0x70], r13
0x317e:	mov	qword ptr [rsp + 0x30], r11
0x3183:	mov	rax, qword ptr [rsp + 0x10]
0x3188:	lea	r14, [rbp + rbx]
0x318d:	mov	rdx, qword ptr [rsp + 0x30]
0x3192:	mov	rcx, qword ptr [rsp + 0x28]
0x3197:	mov	rdi, qword ptr [rsp + 0x38]
0x319c:	lea	r13, [rax + r14]
0x31a0:	sub	rdx, r14
0x31a3:	mov	rsi, r13
0x31a6:	call	0x54b0


0x2998:	mov	byte ptr [rsp + 0x38], r8b
0x299d:	mov	byte ptr [rsp + 0x30], r10b
0x29a2:	mov	qword ptr [rsp + 0x28], r9
0x29a7:	call	0x14a0


0x29ce:	mov	rdx, qword ptr [rsp + 0x18]
0x29d3:	mov	rsi, qword ptr [rsp + 0x48]
0x29d8:	mov	rdi, r9
0x29db:	mov	qword ptr [rsp + 0x40], r11
0x29e0:	mov	byte ptr [rsp + 0x38], r8b
0x29e5:	mov	qword ptr [rsp + 0x30], r9
0x29ea:	call	0x1550


0x2f80:	xor	r10d, r10d
0x2f83:	jmp	0x2a20


0x3964:	mov	rdx, r15
0x3967:	sub	rax, r15
0x396a:	cmp	r13, rdx
0x396d:	jbe	0x3973


0x3a2c:	movzx	eax, byte ptr [rsp + 0x7c]
0x3a31:	jmp	0x394c


0x300f:	mov	r13, qword ptr [rsp + 0x50]
0x3014:	lea	rbx, [rip + 0x30ea]
0x301b:	mov	byte ptr [r14], 0x27
0x301f:	mov	dword ptr [rsp + 8], 2
0x3027:	mov	r15d, 1
0x302d:	mov	qword ptr [rsp + 0x18], 1
0x3036:	mov	byte ptr [rsp + 0xf], 0
0x303b:	mov	qword ptr [rsp + 0x48], rbx
0x3040:	mov	byte ptr [rsp + 0x7c], al
0x3044:	jmp	0x2923


0x3973:	add	rdx, 1
0x3977:	movzx	ecx, byte ptr [rax + rdx]
0x397b:	test	cl, cl
0x397d:	jne	0x396a


0x396f:	mov	byte ptr [r14 + rdx], cl
0x3973:	add	rdx, 1
0x3977:	movzx	ecx, byte ptr [rax + rdx]
0x397b:	test	cl, cl
0x397d:	jne	0x396a


0x2923:	xor	r11d, r11d
0x2926:	mov	rax, rbp
0x2929:	mov	r8d, r12d
0x292c:	mov	rbp, r11
0x292f:	mov	r11, rax
0x2932:	nop	word ptr [rax + rax]
0x2938:	cmp	r11, rbp
0x293b:	setne	r12b
0x293f:	cmp	r11, -1
0x2943:	jne	0x2952


0x397f:	mov	r15, rdx
0x3982:	cmp	r13, r15
0x3985:	jbe	0x3429


0x396a:	cmp	r13, rdx
0x396d:	jbe	0x3973


0x29ef:	test	eax, eax
0x29f1:	mov	r9, qword ptr [rsp + 0x30]
0x29f6:	movzx	r8d, byte ptr [rsp + 0x38]
0x29fc:	mov	r11, qword ptr [rsp + 0x40]
0x2a01:	jne	0x2f80


0x2a07:	cmp	byte ptr [rsp + 0xf], 0
0x2a0c:	movzx	r10d, byte ptr [rsp + 0x28]
0x2a12:	jne	0x3995


0x3995:	cmp	dword ptr [rsp + 8], 2
0x399a:	movzx	ebx, byte ptr [rsp + 0xf]
0x399f:	mov	rbp, r11
0x39a2:	sete	al
0x39a5:	mov	byte ptr [rsp + 0xd], bl
0x39a9:	jmp	0x33d9


0x31ab:	test	rax, rax
0x31ae:	mov	r15, rax
0x31b1:	je	0x3201


0x3201:	mov	edx, r12d
0x3204:	mov	rdi, rbx
0x3207:	movzx	r8d, byte ptr [rsp + 0x7d]
0x320d:	xor	edx, 1
0x3210:	movzx	ebx, byte ptr [rsp + 0x7e]
0x3215:	movzx	r10d, byte ptr [rsp + 0x7f]
0x321b:	and	dl, byte ptr [rsp + 0xd]
0x321f:	mov	r15, qword ptr [rsp + 0x80]
0x3227:	mov	r14, qword ptr [rsp + 0x40]
0x322c:	mov	r13, qword ptr [rsp + 0x70]
0x3231:	mov	r11, qword ptr [rsp + 0x30]
0x3236:	cmp	rdi, 1
0x323a:	jbe	0x383b


0x31b3:	cmp	rax, -1
0x31b7:	je	0x37d5


0x383b:	mov	eax, edx
0x383d:	jmp	0x2d97


0x3240:	mov	rcx, rdi
0x3243:	xor	esi, esi
0x3245:	movzx	r9d, byte ptr [rsp + 0xf]
0x324b:	add	rcx, rbp
0x324e:	mov	rdi, qword ptr [rsp + 0x10]
0x3253:	jmp	0x330e


0x37d5:	mov	rdi, rbx
0x37d8:	movzx	r8d, byte ptr [rsp + 0x7d]
0x37de:	movzx	ebx, byte ptr [rsp + 0x7e]
0x37e3:	movzx	r10d, byte ptr [rsp + 0x7f]
0x37e9:	mov	r15, qword ptr [rsp + 0x80]
0x37f1:	xor	r12d, r12d
0x37f4:	mov	r14, qword ptr [rsp + 0x40]
0x37f9:	mov	r13, qword ptr [rsp + 0x70]
0x37fe:	mov	r11, qword ptr [rsp + 0x30]
0x3803:	movzx	edx, byte ptr [rsp + 0xd]
0x3808:	jmp	0x3236


0x31bd:	cmp	rax, -2
0x31c1:	je	0x3761


0x2d97:	test	al, al
0x2d99:	jne	0x3731


0x330e:	test	dl, dl
0x3310:	jne	0x3260


0x3236:	cmp	rdi, 1
0x323a:	jbe	0x383b


0x3761:	mov	r11, qword ptr [rsp + 0x30]
0x3766:	mov	rsi, r14
0x3769:	mov	rcx, r13
0x376c:	mov	rax, rbx
0x376f:	mov	rdi, rbx
0x3772:	movzx	r8d, byte ptr [rsp + 0x7d]
0x3778:	movzx	ebx, byte ptr [rsp + 0x7e]
0x377d:	mov	r9, qword ptr [rsp + 0x88]
0x3785:	cmp	rsi, r11
0x3788:	movzx	r10d, byte ptr [rsp + 0x7f]
0x378e:	mov	r15, qword ptr [rsp + 0x80]
0x3796:	mov	r14, qword ptr [rsp + 0x40]
0x379b:	mov	r13, qword ptr [rsp + 0x70]
0x37a0:	jae	0x37c8


0x31c7:	cmp	dword ptr [rsp + 8], 2
0x31cc:	sete	al
0x31cf:	and	al, byte ptr [rsp + 0xf]
0x31d3:	jne	0x3370


0x2d9f:	cmp	dword ptr [rsp + 8], 2
0x2da4:	sete	dl
0x2da7:	jmp	0x2a78


0x3731:	movzx	edx, byte ptr [rsp + 0xd]
0x3736:	xor	r12d, r12d
0x3739:	jmp	0x3240


0x3316:	mov	eax, esi
0x3318:	xor	eax, 1
0x331b:	and	eax, r8d
0x331e:	test	r10b, r10b
0x3321:	je	0x3331


0x3260:	cmp	dword ptr [rsp + 8], 2
0x3265:	sete	al
0x3268:	test	r9b, r9b
0x326b:	jne	0x3720


0x37a2:	cmp	byte ptr [rcx], 0
0x37a5:	jne	0x37b7


0x37c8:	movzx	edx, byte ptr [rsp + 0xd]
0x37cd:	xor	r12d, r12d
0x37d0:	jmp	0x3236


0x31d9:	mov	edi, dword ptr [rsp + 0x9c]
0x31e0:	call	0x16b0


0x3370:	cmp	r15, 1
0x3374:	je	0x31d9


0x2a78:	cmp	byte ptr [rsp + 0xd], 1
0x2a7d:	jne	0x2b92


0x3331:	add	rbp, 1
0x3335:	cmp	rbp, rcx
0x3338:	jae	0x2abc


0x3323:	cmp	r13, r15
0x3326:	jbe	0x332d


0x3271:	mov	esi, r8d
0x3274:	xor	esi, 1
0x3277:	and	al, sil
0x327a:	je	0x32ab


0x3720:	movzx	ebx, byte ptr [rsp + 0xf]
0x3725:	mov	rbp, r11
0x3728:	mov	byte ptr [rsp + 0xd], bl
0x372c:	jmp	0x33d9


0x37a7:	jmp	0x37c8


0x37b7:	add	rax, 1
0x37bb:	lea	rdx, [rbp + rax]
0x37c0:	cmp	r11, rdx
0x37c3:	ja	0x37b0


0x337a:	mov	rdi, qword ptr [rsp + 0x10]
0x337f:	lea	rcx, [rdi + r15]
0x3383:	lea	rdx, [rdi + r14 + 1]
0x3388:	lea	r8, [rcx + r14]
0x338c:	jmp	0x339d


0x2a83:	test	dl, dl
0x2a85:	jne	0x2b92


0x2b92:	cmp	byte ptr [rsp + 0xf], 0
0x2b97:	jne	0x2a8b


0x333e:	test	al, al
0x3340:	je	0x373e


0x2abc:	test	al, al
0x2abe:	je	0x2ae0


0x332d:	add	r15, 1
0x3331:	add	rbp, 1
0x3335:	cmp	rbp, rcx
0x3338:	jae	0x2abc


0x3328:	mov	byte ptr [r14 + r15], 0x5c
0x332d:	add	r15, 1
0x3331:	add	rbp, 1
0x3335:	cmp	rbp, rcx
0x3338:	jae	0x2abc


0x32ab:	cmp	r13, r15
0x32ae:	jbe	0x32b5


0x327c:	cmp	r13, r15
0x327f:	jbe	0x3286


0x37c5:	mov	rdi, rax
0x37c8:	movzx	edx, byte ptr [rsp + 0xd]
0x37cd:	xor	r12d, r12d
0x37d0:	jmp	0x3236


0x37b0:	cmp	byte ptr [r9 + rax], 0
0x37b5:	je	0x37c5


0x339d:	movzx	ecx, byte ptr [rdx]
0x33a0:	sub	ecx, 0x5b
0x33a3:	cmp	cl, 0x21
0x33a6:	ja	0x3390


0x2a8b:	mov	rsi, qword ptr [rsp + 0x20]
0x2a90:	test	rsi, rsi
0x2a93:	je	0x2aa9


0x2b9d:	jmp	0x2aa9


0x373e:	xor	r10d, r10d
0x3741:	jmp	0x32fd


0x3346:	cmp	r13, r15
0x3349:	jbe	0x3350


0x2ae0:	cmp	r15, r13
0x2ae3:	jae	0x2ae9


0x2ac0:	cmp	r13, r15
0x2ac3:	jbe	0x2aca


0x32b5:	lea	rax, [r15 + 1]
0x32b9:	cmp	r13, rax
0x32bc:	jbe	0x32cb


0x32b0:	mov	byte ptr [r14 + r15], 0x5c
0x32b5:	lea	rax, [r15 + 1]
0x32b9:	cmp	r13, rax
0x32bc:	jbe	0x32cb


0x3286:	lea	rsi, [r15 + 1]
0x328a:	cmp	r13, rsi
0x328d:	jbe	0x3295


0x3281:	mov	byte ptr [r14 + r15], 0x27
0x3286:	lea	rsi, [r15 + 1]
0x328a:	cmp	r13, rsi
0x328d:	jbe	0x3295


0x33a8:	mov	esi, 1
0x33ad:	shl	rsi, cl
0x33b0:	mov	rcx, rsi
0x33b3:	movabs	rsi, 0x20000002b
0x33bd:	test	rcx, rsi
0x33c0:	je	0x3390


0x3390:	add	rdx, 1
0x3394:	cmp	r8, rdx
0x3397:	je	0x31d9


0x2aa9:	test	r10b, r10b
0x2aac:	jne	0x2bf3


0x2a95:	mov	edx, ebx
0x2a97:	shr	dl, 5
0x2a9a:	movzx	edx, dl
0x2a9d:	mov	edx, dword ptr [rsi + rdx*4]
0x2aa0:	bt	edx, ebx
0x2aa3:	jb	0x2bf3


0x32fd:	cmp	r13, r15
0x3300:	jbe	0x3306


0x3350:	lea	rax, [r15 + 1]
0x3354:	cmp	r13, rax
0x3357:	jbe	0x335f


0x334b:	mov	byte ptr [r14 + r15], 0x27
0x3350:	lea	rax, [r15 + 1]
0x3354:	cmp	r13, rax
0x3357:	jbe	0x335f


0x2ae5:	mov	byte ptr [r14 + r15], bl
0x2ae9:	movzx	edi, byte ptr [rsp + 0xe]
0x2aee:	add	r15, 1
0x2af2:	mov	eax, 0
0x2af7:	test	r12b, r12b
0x2afa:	cmove	edi, eax
0x2afd:	mov	byte ptr [rsp + 0xe], dil
0x2b02:	jmp	0x2938


0x2ae9:	movzx	edi, byte ptr [rsp + 0xe]
0x2aee:	add	r15, 1
0x2af2:	mov	eax, 0
0x2af7:	test	r12b, r12b
0x2afa:	cmove	edi, eax
0x2afd:	mov	byte ptr [rsp + 0xe], dil
0x2b02:	jmp	0x2938


0x2aca:	lea	rax, [r15 + 1]
0x2ace:	cmp	r13, rax
0x2ad1:	jbe	0x2ad9


0x2ac5:	mov	byte ptr [r14 + r15], 0x27
0x2aca:	lea	rax, [r15 + 1]
0x2ace:	cmp	r13, rax
0x2ad1:	jbe	0x2ad9


0x32cb:	lea	rax, [r15 + 2]
0x32cf:	cmp	r13, rax
0x32d2:	jbe	0x32e4


0x32be:	mov	eax, ebx
0x32c0:	shr	al, 6
0x32c3:	add	eax, 0x30
0x32c6:	mov	byte ptr [r14 + r15 + 1], al
0x32cb:	lea	rax, [r15 + 2]
0x32cf:	cmp	r13, rax
0x32d2:	jbe	0x32e4


0x3295:	lea	rsi, [r15 + 2]
0x3299:	cmp	r13, rsi
0x329c:	jbe	0x32a4


0x328f:	mov	byte ptr [r14 + r15 + 1], 0x24
0x3295:	lea	rsi, [r15 + 2]
0x3299:	cmp	r13, rsi
0x329c:	jbe	0x32a4


0x33c2:	mov	r14, qword ptr [rsp + 0x40]
0x33c7:	mov	r13, qword ptr [rsp + 0x70]
0x33cc:	mov	rbp, qword ptr [rsp + 0x30]
0x33d1:	mov	dword ptr [rsp + 8], 2
0x33d9:	cmp	byte ptr [rsp + 0xd], 0
0x33de:	je	0x33f0


0x2ab2:	xor	eax, 1
0x2ab5:	add	rbp, 1
0x2ab9:	and	eax, r8d
0x2abc:	test	al, al
0x2abe:	je	0x2ae0


0x2bf3:	cmp	dword ptr [rsp + 8], 2
0x2bf8:	sete	dl
0x2bfb:	cmp	byte ptr [rsp + 0xf], 0
0x2c00:	mov	eax, edx
0x2c02:	jne	0x3458


0x3306:	movzx	ebx, byte ptr [rdi + rbp]
0x330a:	add	r15, 1
0x330e:	test	dl, dl
0x3310:	jne	0x3260


0x3302:	mov	byte ptr [r14 + r15], bl
0x3306:	movzx	ebx, byte ptr [rdi + rbp]
0x330a:	add	r15, 1
0x330e:	test	dl, dl
0x3310:	jne	0x3260


0x335f:	add	r15, 2
0x3363:	xor	r10d, r10d
0x3366:	xor	r8d, r8d
0x3369:	jmp	0x32fd


0x3359:	mov	byte ptr [r14 + r15 + 1], 0x27
0x335f:	add	r15, 2
0x3363:	xor	r10d, r10d
0x3366:	xor	r8d, r8d
0x3369:	jmp	0x32fd


0x2938:	cmp	r11, rbp
0x293b:	setne	r12b
0x293f:	cmp	r11, -1
0x2943:	jne	0x2952


0x2ad9:	add	r15, 2
0x2add:	xor	r8d, r8d
0x2ae0:	cmp	r15, r13
0x2ae3:	jae	0x2ae9


0x2ad3:	mov	byte ptr [r14 + r15 + 1], 0x27
0x2ad9:	add	r15, 2
0x2add:	xor	r8d, r8d
0x2ae0:	cmp	r15, r13
0x2ae3:	jae	0x2ae9


0x32e4:	and	ebx, 7
0x32e7:	add	rbp, 1
0x32eb:	add	r15, 3
0x32ef:	add	ebx, 0x30
0x32f2:	cmp	rbp, rcx
0x32f5:	jae	0x2ae0


0x32d4:	mov	eax, ebx
0x32d6:	shr	al, 3
0x32d9:	and	eax, 7
0x32dc:	add	eax, 0x30
0x32df:	mov	byte ptr [r14 + r15 + 2], al
0x32e4:	and	ebx, 7
0x32e7:	add	rbp, 1
0x32eb:	add	r15, 3
0x32ef:	add	ebx, 0x30
0x32f2:	cmp	rbp, rcx
0x32f5:	jae	0x2ae0


0x32a4:	add	r15, 3
0x32a8:	mov	r8d, eax
0x32ab:	cmp	r13, r15
0x32ae:	jbe	0x32b5


0x329e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x32a4:	add	r15, 3
0x32a8:	mov	r8d, eax
0x32ab:	cmp	r13, r15
0x32ae:	jbe	0x32b5


0x2c08:	mov	eax, r8d
0x2c0b:	xor	eax, 1
0x2c0e:	and	al, dl
0x2c10:	je	0x2c41


0x3458:	mov	rbp, r11
0x345b:	jmp	0x33d9


0x32fb:	mov	esi, edx
0x32fd:	cmp	r13, r15
0x3300:	jbe	0x3306


0x2c41:	cmp	r13, r15
0x2c44:	jbe	0x2c4b


0x2c12:	cmp	r13, r15
0x2c15:	jbe	0x2c1c


0x2c4b:	add	r15, 1
0x2c4f:	add	rbp, 1
0x2c53:	jmp	0x2ae0


0x2c46:	mov	byte ptr [r14 + r15], 0x5c
0x2c4b:	add	r15, 1
0x2c4f:	add	rbp, 1
0x2c53:	jmp	0x2ae0


0x2c1c:	lea	rdx, [r15 + 1]
0x2c20:	cmp	r13, rdx
0x2c23:	jbe	0x2c2b


0x2c17:	mov	byte ptr [r14 + r15], 0x27
0x2c1c:	lea	rdx, [r15 + 1]
0x2c20:	cmp	r13, rdx
0x2c23:	jbe	0x2c2b


0x2c2b:	lea	rdx, [r15 + 2]
0x2c2f:	cmp	r13, rdx
0x2c32:	jbe	0x2c3a


0x2c25:	mov	byte ptr [r14 + r15 + 1], 0x24
0x2c2b:	lea	rdx, [r15 + 2]
0x2c2f:	cmp	r13, rdx
0x2c32:	jbe	0x2c3a


0x2c3a:	add	r15, 3
0x2c3e:	mov	r8d, eax
0x2c41:	cmp	r13, r15
0x2c44:	jbe	0x2c4b


0x2c34:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2c3a:	add	r15, 3
0x2c3e:	mov	r8d, eax
0x2c41:	cmp	r13, r15
0x2c44:	jbe	0x2c4b


0x31e5:	mov	rdi, qword ptr [rsp + 0x28]
0x31ea:	test	eax, eax
0x31ec:	mov	eax, 0
0x31f1:	cmove	r12d, eax
0x31f5:	add	rbx, r15
0x31f8:	call	0x16a0


0x31fd:	test	eax, eax
0x31ff:	je	0x3183


0x3183:	mov	rax, qword ptr [rsp + 0x10]
0x3188:	lea	r14, [rbp + rbx]
0x318d:	mov	rdx, qword ptr [rsp + 0x30]
0x3192:	mov	rcx, qword ptr [rsp + 0x28]
0x3197:	mov	rdi, qword ptr [rsp + 0x38]
0x319c:	lea	r13, [rax + r14]
0x31a0:	sub	rdx, r14
0x31a3:	mov	rsi, r13
0x31a6:	call	0x54b0


0x29ac:	movzx	r8d, byte ptr [rsp + 0x38]
0x29b2:	movzx	r10d, byte ptr [rsp + 0x30]
0x29b8:	mov	r11, rax
0x29bb:	mov	r9, qword ptr [rsp + 0x28]
0x29c0:	cmp	rbx, r11
0x29c3:	mov	byte ptr [rsp + 0x28], r10b
0x29c8:	ja	0x2f80


0x3130:	movzx	r8d, byte ptr [rsp + 0x40]
0x3136:	movzx	r10d, byte ptr [rsp + 0x38]
0x313c:	mov	r11, rax
0x313f:	mov	r9, qword ptr [rsp + 0x30]
0x3144:	lea	rax, [rsp + 0x9c]
0x314c:	xor	ecx, ecx
0x314e:	mov	byte ptr [rsp + 0x7e], bl
0x3152:	mov	byte ptr [rsp + 0x7d], r8b
0x3157:	mov	rbx, rcx
0x315a:	mov	qword ptr [rsp + 0x88], r9
0x3162:	mov	qword ptr [rsp + 0x38], rax
0x3167:	mov	byte ptr [rsp + 0x7f], r10b
0x316c:	mov	qword ptr [rsp + 0x80], r15
0x3174:	mov	qword ptr [rsp + 0x40], r14
0x3179:	mov	qword ptr [rsp + 0x70], r13
0x317e:	mov	qword ptr [rsp + 0x30], r11
0x3183:	mov	rax, qword ptr [rsp + 0x10]
0x3188:	lea	r14, [rbp + rbx]
0x318d:	mov	rdx, qword ptr [rsp + 0x30]
0x3192:	mov	rcx, qword ptr [rsp + 0x28]
0x3197:	mov	rdi, qword ptr [rsp + 0x38]
0x319c:	lea	r13, [rax + r14]
0x31a0:	sub	rdx, r14
0x31a3:	mov	rsi, r13
0x31a6:	call	0x54b0


0x2d68:	mov	rcx, qword ptr [rax]
0x2d6b:	movzx	edx, bl
0x2d6e:	movzx	r10d, byte ptr [rsp + 0x28]
0x2d74:	movzx	r8d, byte ptr [rsp + 0x30]
0x2d7a:	mov	r11, qword ptr [rsp + 0x38]
0x2d7f:	mov	edi, 1
0x2d84:	movzx	eax, word ptr [rcx + rdx*2]
0x2d88:	and	ax, 0x4000
0x2d8c:	setne	r12b
0x2d90:	sete	al
0x2d93:	and	al, byte ptr [rsp + 0xd]
0x2d97:	test	al, al
0x2d99:	jne	0x3731


0x2a40:	xor	r10d, r10d
0x2a43:	cmp	r11, 1
0x2a47:	setne	al
0x2a4a:	cmp	r11, -1
0x2a4e:	jne	0x2a5c


0x2a50:	mov	rax, qword ptr [rsp + 0x10]
0x2a55:	cmp	byte ptr [rax + 1], 0
0x2a59:	setne	al
0x2a5c:	cmp	dword ptr [rsp + 8], 2
0x2a61:	sete	dl
0x2a64:	test	al, al
0x2a66:	je	0x2cb8


0x2a5c:	cmp	dword ptr [rsp + 8], 2
0x2a61:	sete	dl
0x2a64:	test	al, al
0x2a66:	je	0x2cb8


0x2cb8:	test	rbp, rbp
0x2cbb:	jne	0x2a6c


0x2a6c:	xor	r12d, r12d
0x2a6f:	xor	eax, eax
0x2a71:	nop	dword ptr [rax]
0x2a78:	cmp	byte ptr [rsp + 0xd], 1
0x2a7d:	jne	0x2b92


0x2cc1:	movzx	eax, byte ptr [rsp + 0xf]
0x2cc6:	and	al, dl
0x2cc8:	je	0x2a78


0x2cce:	mov	rbp, r11
0x2cd1:	mov	dword ptr [rsp + 8], 2
0x2cd9:	jmp	0x33d9


0x30d8:	cmp	byte ptr [rsp + 0xf], 0
0x30dd:	jne	0x3900


0x2b20:	cmp	eax, 5
0x2b23:	je	0x3098


0x30e3:	xor	r12d, r12d
0x30e6:	xor	eax, eax
0x30e8:	mov	ebx, 0x3f
0x30ed:	jmp	0x2aa9


0x3900:	mov	rbp, r11
0x3903:	movzx	eax, byte ptr [rsp + 0xf]
0x3908:	jmp	0x33d9


0x3098:	test	byte ptr [rsp + 0x78], 4
0x309d:	je	0x30c0


0x2b29:	cmp	eax, 2
0x2b2c:	mov	ebx, 0x3f
0x2b31:	sete	dl
0x2b34:	xor	r12d, r12d
0x2b37:	xor	eax, eax
0x2b39:	jmp	0x2a78


0x30c0:	xor	edx, edx
0x30c2:	xor	r12d, r12d
0x30c5:	xor	eax, eax
0x30c7:	mov	ebx, 0x3f
0x30cc:	jmp	0x2a78


0x309f:	lea	rcx, [rbp + 2]
0x30a3:	cmp	rcx, r11
0x30a6:	jae	0x30c0


0x30a8:	mov	rax, qword ptr [rsp + 0x10]
0x30ad:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x30b2:	je	0x3842


0x3842:	movzx	ebx, byte ptr [rax + rcx]
0x3846:	cmp	bl, 0x3e
0x3849:	ja	0x30c0


0x384f:	movabs	rax, 0x7000a38200000000
0x3859:	bt	rax, rbx
0x385d:	jae	0x30c0


0x3863:	cmp	byte ptr [rsp + 0xf], 0
0x3868:	jne	0x3a52


0x386e:	cmp	r13, r15
0x3871:	jbe	0x3878


0x3a52:	mov	rbp, r11
0x3a55:	jmp	0x33f0


0x3878:	lea	rax, [r15 + 1]
0x387c:	cmp	r13, rax
0x387f:	jbe	0x3887


0x3873:	mov	byte ptr [r14 + r15], 0x3f
0x3878:	lea	rax, [r15 + 1]
0x387c:	cmp	r13, rax
0x387f:	jbe	0x3887


0x3887:	lea	rax, [r15 + 2]
0x388b:	cmp	r13, rax
0x388e:	jbe	0x3896


0x3881:	mov	byte ptr [r14 + r15 + 1], 0x22
0x3887:	lea	rax, [r15 + 2]
0x388b:	cmp	r13, rax
0x388e:	jbe	0x3896


0x3896:	lea	rax, [r15 + 3]
0x389a:	cmp	r13, rax
0x389d:	jbe	0x38a5


0x3890:	mov	byte ptr [r14 + r15 + 2], 0x22
0x3896:	lea	rax, [r15 + 3]
0x389a:	cmp	r13, rax
0x389d:	jbe	0x38a5


0x38a5:	add	r15, 4
0x38a9:	xor	edx, edx
0x38ab:	xor	r12d, r12d
0x38ae:	xor	eax, eax
0x38b0:	mov	rbp, rcx
0x38b3:	jmp	0x2a78


0x389f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x38a5:	add	r15, 4
0x38a9:	xor	edx, edx
0x38ab:	xor	r12d, r12d
0x38ae:	xor	eax, eax
0x38b0:	mov	rbp, rcx
0x38b3:	jmp	0x2a78


0x3050:	cmp	byte ptr [rsp + 0xf], 0
0x3055:	jne	0x3900


0x2b4e:	mov	byte ptr [rsp + 0x7c], r12b
0x2b53:	xor	edx, edx
0x2b55:	xor	eax, eax
0x2b57:	mov	ebx, 0x27
0x2b5c:	jmp	0x2a78


0x305b:	test	r13, r13
0x305e:	je	0x3460


0x3460:	cmp	r13, r15
0x3463:	jbe	0x346a


0x3064:	xor	edx, edx
0x3066:	cmp	qword ptr [rsp + 0x50], 0
0x306c:	jne	0x3460


0x346a:	lea	rax, [r15 + 1]
0x346e:	cmp	r13, rax
0x3471:	jbe	0x3479


0x3465:	mov	byte ptr [r14 + r15], 0x27
0x346a:	lea	rax, [r15 + 1]
0x346e:	cmp	r13, rax
0x3471:	jbe	0x3479


0x3072:	mov	qword ptr [rsp + 0x50], r13
0x3077:	add	r15, 3
0x307b:	xor	eax, eax
0x307d:	mov	byte ptr [rsp + 0x7c], r12b
0x3082:	xor	r8d, r8d
0x3085:	mov	r13, rdx
0x3088:	mov	ebx, 0x27
0x308d:	jmp	0x2aa9


0x3479:	lea	rax, [r15 + 2]
0x347d:	cmp	r13, rax
0x3480:	jbe	0x3a72


0x3473:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x3479:	lea	rax, [r15 + 2]
0x347d:	cmp	r13, rax
0x3480:	jbe	0x3a72


0x3a72:	mov	rdx, r13
0x3a75:	mov	r13, qword ptr [rsp + 0x50]
0x3a7a:	jmp	0x3072


0x3486:	mov	rdx, r13
0x3489:	mov	byte ptr [r14 + r15 + 2], 0x27
0x348f:	mov	r13, qword ptr [rsp + 0x50]
0x3494:	jmp	0x3072


0x2b84:	cmp	byte ptr [rsp + 0xd], 0
0x2b89:	jne	0x2bf0


0x2b8b:	mov	ebx, edx
0x2b8d:	xor	r12d, r12d
0x2b90:	xor	eax, eax
0x2b92:	cmp	byte ptr [rsp + 0xf], 0
0x2b97:	jne	0x2a8b


0x2bf0:	xor	r12d, r12d
0x2bf3:	cmp	dword ptr [rsp + 8], 2
0x2bf8:	sete	dl
0x2bfb:	cmp	byte ptr [rsp + 0xf], 0
0x2c00:	mov	eax, edx
0x2c02:	jne	0x3458


0x2f90:	cmp	byte ptr [rsp + 0xf], 0
0x2f95:	jne	0x3900


0x2bc3:	cmp	byte ptr [rsp + 0xd], 0
0x2bc8:	je	0x2de0


0x2f9b:	add	rbp, 1
0x2f9f:	mov	eax, r8d
0x2fa2:	xor	r12d, r12d
0x2fa5:	mov	ebx, 0x5c
0x2faa:	jmp	0x2abc


0x2de0:	mov	edx, 0x5c
0x2de5:	mov	ebx, 0x5c
0x2dea:	jmp	0x2b84


0x2bce:	cmp	byte ptr [rsp + 0xf], 0
0x2bd3:	je	0x2de0


0x2bd9:	cmp	qword ptr [rsp + 0x18], 0
0x2bdf:	jne	0x2f9b


0x2be5:	mov	ebx, 0x5c
0x2bea:	nop	word ptr [rax + rax]
0x2bf0:	xor	r12d, r12d
0x2bf3:	cmp	dword ptr [rsp + 8], 2
0x2bf8:	sete	dl
0x2bfb:	cmp	byte ptr [rsp + 0xf], 0
0x2c00:	mov	eax, edx
0x2c02:	jne	0x3458


0x2c6b:	xor	edx, edx
0x2c6d:	test	byte ptr [rsp + 0x78], 1
0x2c72:	je	0x2b8b


0x2e33:	cmp	dword ptr [rsp + 8], 2
0x2e38:	sete	dl
0x2e3b:	cmp	byte ptr [rsp + 0xf], 0
0x2e40:	jne	0x39da


0x2c78:	add	rbp, 1
0x2c7c:	jmp	0x2938


0x2e46:	mov	eax, r8d
0x2e49:	mov	rcx, r15
0x2e4c:	xor	eax, 1
0x2e4f:	and	al, dl
0x2e51:	je	0x2e80


0x39da:	movzx	ebx, byte ptr [rsp + 0xf]
0x39df:	mov	rbp, r11
0x39e2:	mov	eax, edx
0x39e4:	mov	byte ptr [rsp + 0xd], bl
0x39e8:	jmp	0x33d9


0x2e80:	cmp	r13, rcx
0x2e83:	jbe	0x2e8a


0x2e53:	cmp	r13, r15
0x2e56:	jbe	0x2e5d


0x2e8a:	cmp	dword ptr [rsp + 8], 2
0x2e8f:	lea	r15, [rcx + 1]
0x2e93:	je	0x3499


0x2e85:	mov	byte ptr [r14 + rcx], 0x5c
0x2e8a:	cmp	dword ptr [rsp + 8], 2
0x2e8f:	lea	r15, [rcx + 1]
0x2e93:	je	0x3499


0x2e5d:	lea	rcx, [r15 + 1]
0x2e61:	cmp	r13, rcx
0x2e64:	jbe	0x2e6c


0x2e58:	mov	byte ptr [r14 + r15], 0x27
0x2e5d:	lea	rcx, [r15 + 1]
0x2e61:	cmp	r13, rcx
0x2e64:	jbe	0x2e6c


0x3499:	mov	eax, r12d
0x349c:	mov	ebx, 0x30
0x34a1:	xor	r12d, r12d
0x34a4:	jmp	0x2aa9


0x2e99:	lea	rax, [rbp + 1]
0x2e9d:	cmp	rax, r11
0x2ea0:	jae	0x2ebb


0x2e6c:	lea	rcx, [r15 + 2]
0x2e70:	cmp	r13, rcx
0x2e73:	ja	0x34a9


0x2e66:	mov	byte ptr [r14 + r15 + 1], 0x24
0x2e6c:	lea	rcx, [r15 + 2]
0x2e70:	cmp	r13, rcx
0x2e73:	ja	0x34a9


0x2ea2:	mov	rax, qword ptr [rsp + 0x10]
0x2ea7:	movzx	eax, byte ptr [rax + rbp + 1]
0x2eac:	mov	byte ptr [rsp + 0x28], al
0x2eb0:	sub	eax, 0x30
0x2eb3:	cmp	al, 9
0x2eb5:	jbe	0x36e9


0x2ebb:	mov	eax, r12d
0x2ebe:	mov	ebx, 0x30
0x2ec3:	xor	r12d, r12d
0x2ec6:	jmp	0x2a78


0x2e79:	lea	rcx, [r15 + 3]
0x2e7d:	mov	r8d, eax
0x2e80:	cmp	r13, rcx
0x2e83:	jbe	0x2e8a


0x34a9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x34af:	jmp	0x2e79


0x36e9:	cmp	r13, r15
0x36ec:	jbe	0x36f3


0x36f3:	lea	rax, [rcx + 2]
0x36f7:	cmp	r13, rax
0x36fa:	jbe	0x3702


0x36ee:	mov	byte ptr [r14 + r15], 0x30
0x36f3:	lea	rax, [rcx + 2]
0x36f7:	cmp	r13, rax
0x36fa:	jbe	0x3702


0x3702:	mov	eax, r12d
0x3705:	lea	r15, [rcx + 3]
0x3709:	xor	r12d, r12d
0x370c:	mov	ebx, 0x30
0x3711:	jmp	0x2a78


0x36fc:	mov	byte ptr [r14 + rcx + 2], 0x30
0x3702:	mov	eax, r12d
0x3705:	lea	r15, [rcx + 3]
0x3709:	xor	r12d, r12d
0x370c:	mov	ebx, 0x30
0x3711:	jmp	0x2a78


0x2b72:	cmp	dword ptr [rsp + 8], 2
0x2b77:	sete	al
0x2b7a:	and	al, byte ptr [rsp + 0xf]
0x2b7e:	jne	0x2cce


0x2f30:	mov	edx, 0xd
0x2f35:	xor	r10d, r10d
0x2f38:	mov	ebx, 0x72
0x2f3d:	jmp	0x2b72


0x34b4:	test	ebx, ebx
0x34b6:	jne	0x28e3


0x34bc:	mov	byte ptr [rsp + 0xd], 1
0x34c1:	test	r13, r13
0x34c4:	jne	0x3a5a


0x34ca:	lea	rax, [rip + 0x2c34]
0x34d1:	mov	qword ptr [rsp + 0x50], 0
0x34da:	mov	byte ptr [rsp + 0xe], 1
0x34df:	mov	byte ptr [rsp + 0x7c], 0
0x34e4:	xor	r12d, r12d
0x34e7:	mov	byte ptr [rsp + 0xf], 0
0x34ec:	mov	qword ptr [rsp + 0x18], 1
0x34f5:	mov	qword ptr [rsp + 0x48], rax
0x34fa:	mov	r15d, 1
0x3500:	mov	dword ptr [rsp + 8], 2
0x3508:	jmp	0x2923


0x3a5a:	mov	byte ptr [rsp + 0xe], 1
0x3a5f:	xor	eax, eax
0x3a61:	xor	r12d, r12d
0x3a64:	mov	qword ptr [rsp + 0x50], 0
0x3a6d:	jmp	0x3014


0x3014:	lea	rbx, [rip + 0x30ea]
0x301b:	mov	byte ptr [r14], 0x27
0x301f:	mov	dword ptr [rsp + 8], 2
0x3027:	mov	r15d, 1
0x302d:	mov	qword ptr [rsp + 0x18], 1
0x3036:	mov	byte ptr [rsp + 0xf], 0
0x303b:	mov	qword ptr [rsp + 0x48], rbx
0x3040:	mov	byte ptr [rsp + 0x7c], al
0x3044:	jmp	0x2923


0x3518:	test	r13, r13
0x351b:	je	0x3746


0x390d:	lea	rax, [rip + 0x27ef]
0x3914:	mov	byte ptr [rsp + 0xe], 1
0x3919:	mov	byte ptr [rsp + 0x7c], 0
0x391e:	xor	r12d, r12d
0x3921:	mov	qword ptr [rsp + 0x50], 0
0x392a:	mov	byte ptr [rsp + 0xf], 1
0x392f:	mov	byte ptr [rsp + 0xd], 1
0x3934:	mov	qword ptr [rsp + 0x18], 1
0x393d:	xor	r15d, r15d
0x3940:	mov	qword ptr [rsp + 0x48], rax
0x3945:	jmp	0x2923


0x3746:	mov	qword ptr [rsp + 0x50], 0
0x374f:	mov	byte ptr [rsp + 0xe], 1
0x3754:	xor	r12d, r12d
0x3757:	mov	byte ptr [rsp + 0x7c], 0
0x375c:	jmp	0x353b


0x3521:	mov	byte ptr [r14], 0x22
0x3525:	mov	byte ptr [rsp + 0xe], 1
0x352a:	xor	r12d, r12d
0x352d:	mov	byte ptr [rsp + 0x7c], 0
0x3532:	mov	qword ptr [rsp + 0x50], 0
0x353b:	lea	rax, [rip + 0x2bc1]
0x3542:	mov	byte ptr [rsp + 0xf], 0
0x3547:	mov	byte ptr [rsp + 0xd], 1
0x354c:	mov	qword ptr [rsp + 0x18], 1
0x3555:	mov	r15d, 1
0x355b:	mov	qword ptr [rsp + 0x48], rax
0x3560:	jmp	0x2923


0x353b:	lea	rax, [rip + 0x2bc1]
0x3542:	mov	byte ptr [rsp + 0xf], 0
0x3547:	mov	byte ptr [rsp + 0xd], 1
0x354c:	mov	qword ptr [rsp + 0x18], 1
0x3555:	mov	r15d, 1
0x355b:	mov	qword ptr [rsp + 0x48], rax
0x3560:	jmp	0x2923


0x3565:	lea	rax, [rip + 0x2b97]
0x356c:	mov	byte ptr [rsp + 0xe], 1
0x3571:	mov	byte ptr [rsp + 0x7c], 0
0x3576:	xor	r12d, r12d
0x3579:	mov	qword ptr [rsp + 0x50], 0
0x3582:	mov	byte ptr [rsp + 0xf], 1
0x3587:	mov	byte ptr [rsp + 0xd], 1
0x358c:	mov	qword ptr [rsp + 0x18], 1
0x3595:	xor	r15d, r15d
0x3598:	mov	qword ptr [rsp + 0x48], rax
0x359d:	mov	dword ptr [rsp + 8], 5
0x35a5:	jmp	0x2923


0x35aa:	mov	byte ptr [rsp + 0xe], 1
0x35af:	mov	byte ptr [rsp + 0x7c], 0
0x35b4:	xor	r12d, r12d
0x35b7:	mov	qword ptr [rsp + 0x50], 0
0x35c0:	mov	byte ptr [rsp + 0xf], 0
0x35c5:	xor	r15d, r15d
0x35c8:	mov	byte ptr [rsp + 0xd], 1
0x35cd:	mov	qword ptr [rsp + 0x18], 0
0x35d6:	mov	qword ptr [rsp + 0x48], 0
0x35df:	jmp	0x2923


0x35e4:	cmp	dword ptr [rsp + 8], 0xa
0x35e9:	je	0x3641


0x3641:	xor	r15d, r15d
0x3644:	test	ebx, ebx
0x3646:	je	0x380d


0x35eb:	lea	rsi, [rip + 0x2b15]
0x35f2:	xor	edi, edi
0x35f4:	mov	edx, 5
0x35f9:	call	0x1480


0x380d:	mov	rdx, qword ptr [rsp + 0x68]
0x3812:	movzx	eax, byte ptr [rdx]
0x3815:	test	al, al
0x3817:	je	0x364c


0x364c:	test	ebx, ebx
0x364e:	mov	rbx, qword ptr [rsp + 0x60]
0x3653:	setne	byte ptr [rsp + 0xf]
0x3658:	xor	r12d, r12d
0x365b:	mov	rdi, rbx
0x365e:	call	0x14a0


0x3829:	add	r15, 1
0x382d:	movzx	eax, byte ptr [rdx + r15]
0x3832:	test	al, al
0x3834:	jne	0x3820


0x3825:	mov	byte ptr [r14 + r15], al
0x3829:	add	r15, 1
0x382d:	movzx	eax, byte ptr [rdx + r15]
0x3832:	test	al, al
0x3834:	jne	0x3820


0x3836:	jmp	0x364c


0x3820:	cmp	r13, r15
0x3823:	jbe	0x3829


0x3663:	mov	qword ptr [rsp + 0x48], rbx
0x3668:	mov	qword ptr [rsp + 0x18], rax
0x366d:	mov	byte ptr [rsp + 0xe], 1
0x3672:	mov	byte ptr [rsp + 0x7c], 0
0x3677:	mov	qword ptr [rsp + 0x50], 0
0x3680:	mov	byte ptr [rsp + 0xd], 1
0x3685:	jmp	0x2923


0x35fe:	mov	rcx, rax
0x3601:	mov	qword ptr [rsp + 0x68], rax
0x3606:	lea	rax, [rip + 0x2afa]
0x360d:	cmp	rcx, rax
0x3610:	je	0x39ae


0x39ae:	mov	esi, dword ptr [rsp + 8]
0x39b2:	mov	rdi, rcx
0x39b5:	call	0x2760


0x3616:	lea	rsi, [rip + 0x2ae8]
0x361d:	xor	edi, edi
0x361f:	mov	edx, 5
0x3624:	call	0x1480


0x3629:	mov	rcx, rax
0x362c:	mov	qword ptr [rsp + 0x60], rax
0x3631:	lea	rax, [rip + 0x2acd]
0x3638:	cmp	rcx, rax
0x363b:	je	0x39c4


0x39c4:	mov	esi, dword ptr [rsp + 8]
0x39c8:	mov	rdi, rcx
0x39cb:	call	0x2760


0x39d0:	mov	qword ptr [rsp + 0x60], rax
0x39d5:	jmp	0x3641


0x39ba:	mov	qword ptr [rsp + 0x68], rax
0x39bf:	jmp	0x3616


0x368a:	mov	byte ptr [rsp + 0xe], 1
0x368f:	mov	byte ptr [rsp + 0x7c], 0
0x3694:	xor	r12d, r12d
0x3697:	mov	qword ptr [rsp + 0x50], 0
0x36a0:	mov	byte ptr [rsp + 0xf], 0
0x36a5:	xor	r15d, r15d
0x36a8:	mov	byte ptr [rsp + 0xd], 0
0x36ad:	mov	qword ptr [rsp + 0x18], 0
0x36b6:	mov	qword ptr [rsp + 0x48], 0
0x36bf:	jmp	0x2923


0x36c4:	mov	byte ptr [rsp + 0xe], 1
0x36c9:	mov	byte ptr [rsp + 0x7c], 0
0x36ce:	xor	r12d, r12d
0x36d1:	mov	qword ptr [rsp + 0x50], 0
0x36da:	mov	byte ptr [rsp + 0xf], 1
0x36df:	mov	byte ptr [rsp + 0xd], 1
0x36e4:	jmp	0x2903


0x2903:	lea	rax, [rip + 0x37fb]
0x290a:	mov	qword ptr [rsp + 0x18], 1
0x2913:	xor	r15d, r15d
0x2916:	mov	dword ptr [rsp + 8], 2
0x291e:	mov	qword ptr [rsp + 0x48], rax
0x2923:	xor	r11d, r11d
0x2926:	mov	rax, rbp
0x2929:	mov	r8d, r12d
0x292c:	mov	rbp, r11
0x292f:	mov	r11, rax
0x2932:	nop	word ptr [rax + rax]
0x2938:	cmp	r11, rbp
0x293b:	setne	r12b
0x293f:	cmp	r11, -1
0x2943:	jne	0x2952


0x38b8:	test	ebx, ebx
0x38ba:	je	0x3a48


0x3a48:	mov	byte ptr [rsp + 0xd], 0
0x3a4d:	jmp	0x34c1


0x38c0:	lea	rax, [rip + 0x283e]
0x38c7:	mov	byte ptr [rsp + 0xe], 1
0x38cc:	mov	byte ptr [rsp + 0x7c], 0
0x38d1:	xor	r12d, r12d
0x38d4:	mov	qword ptr [rsp + 0x50], 0
0x38dd:	mov	byte ptr [rsp + 0xf], 1
0x38e2:	mov	byte ptr [rsp + 0xd], 0
0x38e7:	mov	qword ptr [rsp + 0x18], 1
0x38f0:	xor	r15d, r15d
0x38f3:	mov	qword ptr [rsp + 0x48], rax
0x38f8:	jmp	0x2923


0x34c1:	test	r13, r13
0x34c4:	jne	0x3a5a


0x3a84:	nop	
0x3a86:	nop	word ptr cs:[rax + rax]


0x3c3b:	nop	dword ptr [rax + rax]


0x3c76:	nop	word ptr cs:[rax + rax]


0x3c91:	nop	dword ptr [rax + rax]
0x3c96:	nop	word ptr cs:[rax + rax]


0x3cb1:	nop	dword ptr [rax + rax]
0x3cb6:	nop	word ptr cs:[rax + rax]


0x3cf5:	nop	
0x3cf6:	nop	word ptr cs:[rax + rax]


0x3d15:	nop	
0x3d16:	nop	word ptr cs:[rax + rax]


0x3dc4:	nop	
0x3dc6:	nop	word ptr cs:[rax + rax]


0x3eb3:	nop	dword ptr [rax]
0x3eb6:	nop	word ptr cs:[rax + rax]


0x3eca:	nop	word ptr [rax + rax]


0x3f63:	nop	dword ptr [rax]
0x3f66:	nop	word ptr cs:[rax + rax]


0x3f83:	nop	dword ptr [rax]
0x3f86:	nop	word ptr cs:[rax + rax]


0x3f9c:	nop	dword ptr [rax]


0x3fb8:	nop	dword ptr [rax + rax]


0x3fd4:	nop	
0x3fd6:	nop	word ptr cs:[rax + rax]


0x406e:	nop	


0x40fa:	nop	word ptr [rax + rax]


0x410c:	nop	dword ptr [rax]


0x411f:	nop	


0x41b8:	nop	dword ptr [rax + rax]


0x41e1:	nop	dword ptr [rax + rax]
0x41e6:	nop	word ptr cs:[rax + rax]


0x41fa:	nop	word ptr [rax + rax]


0x428e:	nop	


0x4321:	nop	dword ptr [rax + rax]
0x4326:	nop	word ptr cs:[rax + rax]


0x433c:	nop	dword ptr [rax]


0x4357:	nop	word ptr [rax + rax]


0x4373:	nop	dword ptr [rax]
0x4376:	nop	word ptr cs:[rax + rax]


0x438c:	nop	dword ptr [rax]


0x43a4:	nop	
0x43a6:	nop	word ptr cs:[rax + rax]


0x43c3:	nop	dword ptr [rax]
0x43c6:	nop	word ptr cs:[rax + rax]


0x43e8:	nop	dword ptr [rax + rax]


0x4807:	nop	word ptr [rax + rax]


0x48a8:	nop	dword ptr [rax + rax]


0x4985:	nop	
0x4986:	nop	word ptr cs:[rax + rax]


0x4a2a:	nop	word ptr [rax + rax]


0x4a54:	nop	
0x4a56:	nop	word ptr cs:[rax + rax]


0x4a62:	nop	dword ptr [rax]
0x4a66:	nop	word ptr cs:[rax + rax]


0x4aa6:	nop	word ptr cs:[rax + rax]


0x4ad4:	nop	
0x4ad6:	nop	word ptr cs:[rax + rax]


0x4b62:	nop	dword ptr [rax]
0x4b66:	nop	word ptr cs:[rax + rax]


0x4bba:	nop	word ptr [rax + rax]


0x4bd7:	nop	word ptr [rax + rax]


0x4c0e:	nop	


0x4c38:	nop	dword ptr [rax + rax]


0x4c53:	nop	word ptr cs:[rax + rax]
0x4c5d:	nop	dword ptr [rax]


0x4c95:	nop	word ptr cs:[rax + rax]
0x4c9f:	nop	


0x4db1:	nop	dword ptr [rax + rax]
0x4db6:	nop	word ptr cs:[rax + rax]


0x4de1:	nop	word ptr cs:[rax + rax]
0x4deb:	nop	dword ptr [rax + rax]


0x4fa0:	movabs	r8, 0x8000000000000000
0x4faa:	movsxd	rsi, eax
0x4fad:	mov	rax, r8
0x4fb0:	cqo	
0x4fb2:	idiv	rsi
0x4fb5:	cmp	rbp, rax
0x4fb8:	mov	r9, rax
0x4fbb:	jl	0x5465


0x5465:	mov	eax, 1
0x546a:	mov	rbp, r8
0x546d:	jmp	0x4ff8


0x4fc1:	movabs	r10, 0x7fffffffffffffff
0x4fcb:	mov	rax, r10
0x4fce:	cqo	
0x4fd0:	idiv	rsi
0x4fd3:	cmp	rbp, rax
0x4fd6:	jg	0x5472


0x4ff8:	or	r12d, eax
0x4ffb:	nop	dword ptr [rax + rax]
0x5000:	movsxd	rax, edi
0x5003:	add	rcx, rax
0x5006:	mov	eax, r12d
0x5009:	or	eax, 2
0x500c:	mov	qword ptr [rbx], rcx
0x500f:	cmp	byte ptr [rcx], 0
0x5012:	cmovne	r12d, eax
0x5016:	jmp	0x4e76


0x4fdc:	imul	rbp, rsi
0x4fe0:	cmp	r9, rbp
0x4fe3:	jg	0x5465


0x5472:	mov	eax, 1
0x5477:	mov	rbp, r10
0x547a:	jmp	0x4ff8


0x4fe9:	cmp	rax, rbp
0x4fec:	jl	0x5472


0x4ff2:	imul	rbp, rsi
0x4ff6:	xor	eax, eax
0x4ff8:	or	r12d, eax
0x4ffb:	nop	dword ptr [rax + rax]
0x5000:	movsxd	rax, edi
0x5003:	add	rcx, rax
0x5006:	mov	eax, r12d
0x5009:	or	eax, 2
0x500c:	mov	qword ptr [rbx], rcx
0x500f:	cmp	byte ptr [rcx], 0
0x5012:	cmovne	r12d, eax
0x5016:	jmp	0x4e76


0x5360:	mov	r12d, 1
0x5366:	movabs	rbp, 0x8000000000000000
0x5370:	jmp	0x5000


0x5033:	movabs	rax, 0x3fffffffffffffff
0x503d:	cmp	rbp, rax
0x5040:	jg	0x5420


0x5000:	movsxd	rax, edi
0x5003:	add	rcx, rax
0x5006:	mov	eax, r12d
0x5009:	or	eax, 2
0x500c:	mov	qword ptr [rbx], rcx
0x500f:	cmp	byte ptr [rcx], 0
0x5012:	cmovne	r12d, eax
0x5016:	jmp	0x4e76


0x5046:	add	rbp, rbp
0x5049:	jmp	0x5000


0x5420:	mov	r12d, 1
0x5426:	movabs	rbp, 0x7fffffffffffffff
0x5430:	jmp	0x5000


0x5063:	movabs	rax, 0x3fffffffffffff
0x506d:	cmp	rbp, rax
0x5070:	jg	0x5420


0x5076:	shl	rbp, 9
0x507a:	jmp	0x5000


0x50cf:	cmp	r10, rbp
0x50d2:	jle	0x50b0


0x50b0:	mov	rax, r9
0x50b3:	cqo	
0x50b5:	idiv	rsi
0x50b8:	cmp	rax, rbp
0x50bb:	jl	0x53a8


0x50d4:	mov	r11d, 1
0x50da:	movabs	rbp, 0x8000000000000000
0x50e4:	jmp	0x50c5


0x53a8:	mov	r11d, 1
0x53ae:	movabs	rbp, 0x7fffffffffffffff
0x53b8:	jmp	0x50c5


0x50c1:	imul	rbp, rsi
0x50c5:	sub	r8d, 1
0x50c9:	je	0x51f0


0x50c5:	sub	r8d, 1
0x50c9:	je	0x51f0


0x51f0:	or	r12d, r11d
0x51f3:	jmp	0x5000


0x513f:	cmp	r10, rbp
0x5142:	jle	0x5120


0x5120:	mov	rax, r9
0x5123:	cqo	
0x5125:	idiv	rsi
0x5128:	cmp	rax, rbp
0x512b:	jl	0x5378


0x5144:	mov	r11d, 1
0x514a:	movabs	rbp, 0x8000000000000000
0x5154:	jmp	0x5135


0x5378:	mov	r11d, 1
0x537e:	movabs	rbp, 0x7fffffffffffffff
0x5388:	jmp	0x5135


0x5131:	imul	rbp, rsi
0x5135:	sub	r8d, 1
0x5139:	je	0x51f0


0x5135:	sub	r8d, 1
0x5139:	je	0x51f0


0x517e:	sub	r8, 1
0x5182:	mov	rax, r8
0x5185:	cqo	
0x5187:	idiv	rsi
0x518a:	cmp	rbp, rax
0x518d:	jg	0x5420


0x5193:	imul	rbp, rsi
0x5197:	jmp	0x5000


0x51d1:	mov	rax, r9
0x51d4:	cqo	
0x51d6:	idiv	rsi
0x51d9:	cmp	rax, rbp
0x51dc:	jl	0x5450


0x53c0:	mov	r11d, 1
0x53c6:	movabs	rbp, 0x8000000000000000
0x53d0:	jmp	0x51e6


0x5450:	mov	r11d, 1
0x5456:	movabs	rbp, 0x7fffffffffffffff
0x5460:	jmp	0x51e6


0x51e2:	imul	rbp, rsi
0x51e6:	sub	r8d, 1
0x51ea:	jne	0x51c8


0x51e6:	sub	r8d, 1
0x51ea:	jne	0x51c8


0x51c8:	cmp	r10, rbp
0x51cb:	jg	0x53c0


0x524b:	cmp	r10, rbp
0x524e:	jle	0x5230


0x5230:	mov	rax, r9
0x5233:	cqo	
0x5235:	idiv	rsi
0x5238:	cmp	rax, rbp
0x523b:	jl	0x53d8


0x5250:	mov	r11d, 1
0x5256:	movabs	rbp, 0x8000000000000000
0x5260:	jmp	0x5245


0x53d8:	mov	r11d, 1
0x53de:	movabs	rbp, 0x7fffffffffffffff
0x53e8:	jmp	0x5245


0x5241:	imul	rbp, rsi
0x5245:	sub	r8d, 1
0x5249:	je	0x51f0


0x5245:	sub	r8d, 1
0x5249:	je	0x51f0


0x52b7:	cmp	r10, rbp
0x52ba:	jle	0x5298


0x5298:	mov	rax, r9
0x529b:	cqo	
0x529d:	idiv	rsi
0x52a0:	cmp	rax, rbp
0x52a3:	jl	0x53f0


0x52bc:	mov	r11d, 1
0x52c2:	movabs	rbp, 0x8000000000000000
0x52cc:	jmp	0x52ad


0x53f0:	mov	r11d, 1
0x53f6:	movabs	rbp, 0x7fffffffffffffff
0x5400:	jmp	0x52ad


0x52a9:	imul	rbp, rsi
0x52ad:	sub	r8d, 1
0x52b1:	je	0x51f0


0x52ad:	sub	r8d, 1
0x52b1:	je	0x51f0


0x52e3:	movabs	rax, 0x1fffffffffffff
0x52ed:	cmp	rbp, rax
0x52f0:	jg	0x5420


0x52f6:	shl	rbp, 0xa
0x52fa:	jmp	0x5000


0x532d:	mov	rax, r9
0x5330:	cqo	
0x5332:	idiv	rsi
0x5335:	cmp	rax, rbp
0x5338:	jl	0x5408


0x5390:	mov	r11d, 1
0x5396:	movabs	rbp, 0x8000000000000000
0x53a0:	jmp	0x5342


0x5408:	mov	r11d, 1
0x540e:	movabs	rbp, 0x7fffffffffffffff
0x5418:	jmp	0x5342


0x533e:	imul	rbp, rsi
0x5342:	sub	r8d, 1
0x5346:	jne	0x5328


0x5342:	sub	r8d, 1
0x5346:	jne	0x5328


0x5348:	jmp	0x51f0


0x5328:	cmp	r10, rbp
0x532b:	jg	0x5390


0x54a3:	nop	word ptr cs:[rax + rax]
0x54ad:	nop	dword ptr [rax]


0x5533:	nop	word ptr cs:[rax + rax]
0x553d:	nop	dword ptr [rax]


0x55bd:	nop	dword ptr [rax]


0x565c:	nop	dword ptr [rax]


0x56db:	nop	dword ptr [rax + rax]


0x5777:	nop	word ptr [rax + rax]


0x57e5:	nop	
0x57e6:	nop	word ptr cs:[rax + rax]


0x57f2:	nop	word ptr cs:[rax + rax]
0x57fc:	nop	dword ptr [rax]


0x2b10:	xor	r10d, r10d
0x2b13:	mov	eax, dword ptr [rsp + 8]
0x2b17:	cmp	eax, 2
0x2b1a:	je	0x30d8


0x2b40:	xor	r10d, r10d
0x2b43:	cmp	dword ptr [rsp + 8], 2
0x2b48:	je	0x3050


0x2b68:	mov	edx, 9
0x2b6d:	mov	ebx, 0x74
0x2b72:	cmp	dword ptr [rsp + 8], 2
0x2b77:	sete	al
0x2b7a:	and	al, byte ptr [rsp + 0xf]
0x2b7e:	jne	0x2cce


0x2ba8:	mov	edx, 8
0x2bad:	mov	ebx, 0x62
0x2bb2:	jmp	0x2b84


0x2bb8:	cmp	dword ptr [rsp + 8], 2
0x2bbd:	je	0x2f90


0x2c60:	cmp	byte ptr [rsp + 0xd], 0
0x2c65:	jne	0x2e33


0x2c88:	cmp	dword ptr [rsp + 8], 2
0x2c8d:	sete	dl
0x2c90:	xor	eax, eax
0x2c92:	jmp	0x2a78


0x2ca0:	mov	edx, 7
0x2ca5:	mov	ebx, 0x61
0x2caa:	jmp	0x2b84


0x2cb0:	cmp	dword ptr [rsp + 8], 2
0x2cb5:	sete	dl
0x2cb8:	test	rbp, rbp
0x2cbb:	jne	0x2a6c


0x2ce0:	cmp	dword ptr [rsp + 8], 2
0x2ce5:	sete	dl
0x2ce8:	xor	r12d, r12d
0x2ceb:	jmp	0x2cc1


0x2cf0:	cmp	dword ptr [rsp + 8], 2
0x2cf5:	mov	ebx, 0x20
0x2cfa:	sete	dl
0x2cfd:	jmp	0x2cc1


0x2d00:	mov	edx, 0xd
0x2d05:	mov	ebx, 0x72
0x2d0a:	jmp	0x2b72


0x2d10:	mov	edx, 0xc
0x2d15:	mov	ebx, 0x66
0x2d1a:	jmp	0x2b84


0x2d20:	mov	edx, 0xb
0x2d25:	mov	ebx, 0x76
0x2d2a:	jmp	0x2b84


0x2d30:	mov	edx, 0xa
0x2d35:	mov	ebx, 0x6e
0x2d3a:	jmp	0x2b72


0x2dd0:	xor	r10d, r10d
0x2dd3:	cmp	byte ptr [rsp + 0xd], 0
0x2dd8:	jne	0x2bce


0x2df0:	mov	edx, 0xc
0x2df5:	xor	r10d, r10d
0x2df8:	mov	ebx, 0x66
0x2dfd:	jmp	0x2b84


0x2e08:	mov	edx, 0xa
0x2e0d:	xor	r10d, r10d
0x2e10:	mov	ebx, 0x6e
0x2e15:	jmp	0x2b72


0x2e20:	mov	ebx, 0x61
0x2e25:	jmp	0x2bf0


0x2e30:	xor	r10d, r10d
0x2e33:	cmp	dword ptr [rsp + 8], 2
0x2e38:	sete	dl
0x2e3b:	cmp	byte ptr [rsp + 0xf], 0
0x2e40:	jne	0x39da


0x2ed0:	cmp	dword ptr [rsp + 8], 2
0x2ed5:	mov	r12d, r10d
0x2ed8:	sete	dl
0x2edb:	xor	r10d, r10d
0x2ede:	xor	eax, eax
0x2ee0:	jmp	0x2a78


0x2ee8:	cmp	dword ptr [rsp + 8], 2
0x2eed:	sete	dl
0x2ef0:	xor	r10d, r10d
0x2ef3:	jmp	0x2cb8


0x2f00:	cmp	dword ptr [rsp + 8], 2
0x2f05:	sete	dl
0x2f08:	xor	r10d, r10d
0x2f0b:	xor	r12d, r12d
0x2f0e:	jmp	0x2cc1


0x2f18:	cmp	dword ptr [rsp + 8], 2
0x2f1d:	mov	r12d, r10d
0x2f20:	mov	ebx, 0x20
0x2f25:	sete	dl
0x2f28:	xor	r10d, r10d
0x2f2b:	jmp	0x2cc1


0x2f48:	mov	ebx, 0x76
0x2f4d:	jmp	0x2bf0


0x2f58:	mov	edx, 9
0x2f5d:	xor	r10d, r10d
0x2f60:	mov	ebx, 0x74
0x2f65:	jmp	0x2b72


0x2f70:	mov	ebx, 0x62
0x2f75:	jmp	0x2bf0


0x3510:	test	ebx, ebx
0x3512:	jne	0x390d


0x5020:	movabs	rax, 0xc000000000000000
0x502a:	cmp	rbp, rax
0x502d:	jl	0x5360


0x5050:	movabs	rax, 0xffc0000000000000
0x505a:	cmp	rbp, rax
0x505d:	jl	0x5360


0x5080:	movsxd	rsi, eax
0x5083:	movabs	rax, 0x8000000000000000
0x508d:	mov	r8d, 7
0x5093:	cqo	
0x5095:	xor	r11d, r11d
0x5098:	movabs	r9, 0x7fffffffffffffff
0x50a2:	idiv	rsi
0x50a5:	mov	r10, rax
0x50a8:	jmp	0x50cf


0x50f0:	movsxd	rsi, eax
0x50f3:	movabs	rax, 0x8000000000000000
0x50fd:	mov	r8d, 8
0x5103:	cqo	
0x5105:	xor	r11d, r11d
0x5108:	movabs	r9, 0x7fffffffffffffff
0x5112:	idiv	rsi
0x5115:	mov	r10, rax
0x5118:	jmp	0x513f


0x5160:	movabs	r8, 0x8000000000000000
0x516a:	movsxd	rsi, eax
0x516d:	mov	rax, r8
0x5170:	cqo	
0x5172:	idiv	rsi
0x5175:	cmp	rbp, rax
0x5178:	jl	0x5360


0x51a0:	movsxd	rsi, eax
0x51a3:	movabs	rax, 0x8000000000000000
0x51ad:	mov	r8d, 3
0x51b3:	cqo	
0x51b5:	xor	r11d, r11d
0x51b8:	movabs	r9, 0x7fffffffffffffff
0x51c2:	idiv	rsi
0x51c5:	mov	r10, rax
0x51c8:	cmp	r10, rbp
0x51cb:	jg	0x53c0


0x5200:	movsxd	rsi, eax
0x5203:	movabs	rax, 0x8000000000000000
0x520d:	mov	r8d, 6
0x5213:	cqo	
0x5215:	xor	r11d, r11d
0x5218:	movabs	r9, 0x7fffffffffffffff
0x5222:	idiv	rsi
0x5225:	mov	r10, rax
0x5228:	jmp	0x524b


0x5268:	movsxd	rsi, eax
0x526b:	movabs	rax, 0x8000000000000000
0x5275:	mov	r8d, 5
0x527b:	cqo	
0x527d:	xor	r11d, r11d
0x5280:	movabs	r9, 0x7fffffffffffffff
0x528a:	idiv	rsi
0x528d:	mov	r10, rax
0x5290:	jmp	0x52b7


0x52d0:	movabs	rax, 0xffe0000000000000
0x52da:	cmp	rbp, rax
0x52dd:	jl	0x5360


0x5300:	movsxd	rsi, eax
0x5303:	movabs	rax, 0x8000000000000000
0x530d:	mov	r8d, 4
0x5313:	cqo	
0x5315:	xor	r11d, r11d
0x5318:	movabs	r9, 0x7fffffffffffffff
0x5322:	idiv	rsi
0x5325:	mov	r10, rax
0x5328:	cmp	r10, rbp
0x532b:	jg	0x5390


0x179c:	nop	dword ptr [rax]


0x17a9:	nop	dword ptr [rax]


0x17ef:	nop	


0x17fc:	nop	dword ptr [rax]


0x1811:	nop	dword ptr [rax]


0x1869:	nop	dword ptr [rax]


0x18f2:	nop	word ptr [rax + rax]


0x2116:	nop	word ptr cs:[rax + rax]


0x2167:	nop	word ptr [rax + rax]


0x21b1:	nop	dword ptr [rax]


0x279c:	nop	dword ptr [rax]


0x27ed:	nop	dword ptr [rax]


0x2a18:	nop	dword ptr [rax + rax]


0x2b07:	nop	word ptr [rax + rax]


0x2b3e:	nop	


0x2b61:	nop	dword ptr [rax]


0x2ba2:	nop	word ptr [rax + rax]


0x2bb4:	nop	dword ptr [rax]


0x2c58:	nop	dword ptr [rax + rax]


0x2c81:	nop	dword ptr [rax]


0x2c97:	nop	word ptr [rax + rax]


0x2caf:	nop	


0x2cde:	nop	


0x2ced:	nop	dword ptr [rax]


0x2cff:	nop	


0x2d0f:	nop	


0x2d1f:	nop	


0x2d2f:	nop	


0x2d3f:	nop	


0x2dac:	nop	dword ptr [rax]


0x2dcc:	nop	dword ptr [rax]


0x2dde:	nop	


0x2def:	nop	


0x2e02:	nop	word ptr [rax + rax]


0x2e1a:	nop	word ptr [rax + rax]


0x2e2a:	nop	word ptr [rax + rax]


0x2ecb:	nop	dword ptr [rax + rax]


0x2ee5:	nop	dword ptr [rax]


0x2ef8:	nop	dword ptr [rax + rax]


0x2f13:	nop	dword ptr [rax + rax]


0x2f42:	nop	word ptr [rax + rax]


0x2f52:	nop	word ptr [rax + rax]


0x2f6a:	nop	word ptr [rax + rax]


0x2f7a:	nop	word ptr [rax + rax]


0x2f88:	nop	dword ptr [rax + rax]


0x2faf:	nop	


0x3049:	nop	dword ptr [rax]


0x3092:	nop	word ptr [rax + rax]


0x30b8:	nop	dword ptr [rax + rax]


0x30d1:	nop	dword ptr [rax]


0x30f2:	nop	word ptr [rax + rax]


0x3258:	nop	dword ptr [rax + rax]


0x336b:	nop	dword ptr [rax + rax]


0x338e:	nop	


0x3455:	nop	dword ptr [rax]


0x350d:	nop	dword ptr [rax]


0x3716:	nop	word ptr cs:[rax + rax]


0x37a9:	nop	dword ptr [rax]


0x381d:	nop	dword ptr [rax]


0x38fd:	nop	dword ptr [rax]


0x3c0b:	nop	dword ptr [rax + rax]


0x4496:	nop	word ptr cs:[rax + rax]


0x4525:	nop	dword ptr [rax]


0x4546:	nop	word ptr cs:[rax + rax]


0x45a5:	nop	dword ptr [rax]


0x45e1:	nop	dword ptr [rax]


0x4628:	nop	dword ptr [rax + rax]


0x4677:	nop	word ptr [rax + rax]


0x46d4:	nop	dword ptr [rax]


0x4702:	nop	word ptr [rax + rax]


0x47b6:	nop	word ptr cs:[rax + rax]


0x4819:	nop	dword ptr [rax]


0x4a92:	nop	word ptr [rax + rax]


0x4b19:	nop	dword ptr [rax]


0x4b44:	nop	dword ptr [rax]


0x4b9d:	nop	dword ptr [rax]


0x4d68:	nop	dword ptr [rax + rax]


0x4d8c:	nop	dword ptr [rax]


0x4e9f:	nop	


0x4eb3:	nop	dword ptr [rax + rax]


0x4f62:	nop	word ptr [rax + rax]


0x4f74:	nop	dword ptr [rax]


0x501b:	nop	dword ptr [rax + rax]


0x504b:	nop	dword ptr [rax + rax]


0x507c:	nop	dword ptr [rax]


0x50aa:	nop	word ptr [rax + rax]


0x50e6:	nop	word ptr cs:[rax + rax]


0x511a:	nop	word ptr [rax + rax]


0x5156:	nop	word ptr cs:[rax + rax]


0x519c:	nop	dword ptr [rax]


0x51ec:	nop	dword ptr [rax]


0x51f8:	nop	dword ptr [rax + rax]


0x522a:	nop	word ptr [rax + rax]


0x5262:	nop	word ptr [rax + rax]


0x5292:	nop	word ptr [rax + rax]


0x52ce:	nop	


0x52ff:	nop	


0x534d:	nop	dword ptr [rax]


0x535b:	nop	dword ptr [rax + rax]


0x5375:	nop	dword ptr [rax]


0x538d:	nop	dword ptr [rax]


0x53a2:	nop	word ptr [rax + rax]


0x53bd:	nop	dword ptr [rax]


0x53d5:	nop	dword ptr [rax]


0x53ed:	nop	dword ptr [rax]


0x5405:	nop	dword ptr [rax]


0x541d:	nop	dword ptr [rax]


0x5435:	nop	dword ptr [rax]


0x5574:	nop	dword ptr [rax]


0x5591:	nop	dword ptr [rax]


0x55a2:	nop	word ptr [rax + rax]


0x55fa:	nop	word ptr [rax + rax]


0x5646:	nop	word ptr cs:[rax + rax]


0x56a5:	nop	dword ptr [rax]


0x5703:	nop	dword ptr [rax + rax]


0x572f:	nop	


