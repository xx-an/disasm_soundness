0xc5f0:	sub	rsp, 8
0xc5f4:	add	rsp, 8
0xc5f8:	ret	


0xc5e0:	mov	rdx, qword ptr [rip + 0x204a21]
0xc5e7:	xor	esi, esi
0xc5e9:	jmp	0x1de0


0xc5d0:	ret	


0xc560:	push	r15
0xc562:	push	r14
0xc564:	mov	r15, rdx
0xc567:	push	r13
0xc569:	push	r12
0xc56b:	lea	r12, [rip + 0x20451e]
0xc572:	push	rbp
0xc573:	lea	rbp, [rip + 0x20451e]
0xc57a:	push	rbx
0xc57b:	mov	r13d, edi
0xc57e:	mov	r14, rsi
0xc581:	sub	rbp, r12
0xc584:	sub	rsp, 8
0xc588:	sar	rbp, 3
0xc58c:	call	0x19e8


0xb870:	push	r15
0xb872:	push	r14
0xb874:	lea	rcx, [rsi + 0x20]
0xb878:	push	r13
0xb87a:	push	r12
0xb87c:	lea	rax, [rdx + 0x10]
0xb880:	push	rbp
0xb881:	push	rbx
0xb882:	mov	r14, rsi
0xb885:	mov	r15, rdx
0xb888:	xor	ebx, ebx
0xb88a:	mov	r9d, 7
0xb890:	sub	rsp, 0x58
0xb894:	mov	r10d, 7
0xb89a:	mov	qword ptr [rsi], 0
0xb8a1:	mov	qword ptr [rsi + 8], rcx
0xb8a5:	mov	qword ptr [rsp + 0x28], rcx
0xb8aa:	mov	r8, -1
0xb8b1:	mov	qword ptr [rdx], 0
0xb8b8:	mov	qword ptr [rsp + 8], rax
0xb8bd:	mov	qword ptr [rdx + 8], rax
0xb8c1:	mov	qword ptr [rsp + 0x18], 0
0xb8ca:	mov	qword ptr [rsp + 0x10], 0
0xb8d3:	mov	qword ptr [rsp + 0x20], 0
0xb8dc:	jmp	0xb8eb


0xb670:	cmp	qword ptr [rsi], 0
0xb674:	mov	rax, qword ptr [rsi + 8]
0xb678:	je	0xb6dd


0xa550:	push	rbp
0xa551:	mov	rbp, rsp
0xa554:	push	r15
0xa556:	push	r14
0xa558:	push	r13
0xa55a:	push	r12
0xa55c:	lea	r14, [rbp - 0x3b0]
0xa563:	push	rbx
0xa564:	mov	rbx, rdx
0xa567:	mov	r12, rcx
0xa56a:	mov	rdx, r14
0xa56d:	sub	rsp, 0x408
0xa574:	mov	qword ptr [rbp - 0x418], rsi
0xa57b:	lea	rsi, [rbp - 0x2c0]
0xa582:	mov	qword ptr [rbp - 0x3e8], rdi
0xa589:	mov	rdi, rbx
0xa58c:	mov	qword ptr [rbp - 0x410], r14
0xa593:	mov	rax, qword ptr fs:[0x28]
0xa59c:	mov	qword ptr [rbp - 0x38], rax
0xa5a0:	xor	eax, eax
0xa5a2:	mov	qword ptr [rbp - 0x408], rsi
0xa5a9:	call	0xb870


0xa510:	sub	rsp, 8
0xa514:	mov	edi, 0xe
0xa519:	call	0x1d20


0xa4b0:	sub	rsp, 8
0xa4b4:	xor	esi, esi
0xa4b6:	call	0x1d60


0xa460:	push	r14
0xa462:	push	r13
0xa464:	push	r12
0xa466:	push	rbp
0xa467:	push	rbx
0xa468:	mov	r14, qword ptr [rsi]
0xa46b:	test	r14, r14
0xa46e:	je	0xa4a1


0xa3f0:	push	r15
0xa3f2:	push	r14
0xa3f4:	mov	r14, rdi
0xa3f7:	push	r13
0xa3f9:	push	r12
0xa3fb:	mov	r12, rsi
0xa3fe:	push	rbp
0xa3ff:	push	rbx
0xa400:	mov	rbp, rcx
0xa403:	mov	rbx, rdx
0xa406:	mov	rcx, r8
0xa409:	mov	rdx, rbp
0xa40c:	sub	rsp, 8
0xa410:	mov	rsi, rbx
0xa413:	mov	rdi, r12
0xa416:	mov	r15, r8
0xa419:	mov	r13, r9
0xa41c:	call	0xa130


0xa2d0:	push	r15
0xa2d2:	push	r14
0xa2d4:	mov	r14, rdi
0xa2d7:	push	r13
0xa2d9:	push	r12
0xa2db:	xor	edi, edi
0xa2dd:	push	rbp
0xa2de:	push	rbx
0xa2df:	mov	rbp, rsi
0xa2e2:	lea	rsi, [rip + 0x493a]
0xa2e9:	mov	r12, rdx
0xa2ec:	mov	edx, 5
0xa2f1:	sub	rsp, 8
0xa2f5:	mov	rbx, qword ptr [rip + 0x206e04]
0xa2fc:	call	0x1b60


0xa250:	cmp	rdx, -1
0xa254:	push	r12
0xa256:	mov	edx, 5
0xa25b:	push	rbp
0xa25c:	mov	r12, rsi
0xa25f:	push	rbx
0xa260:	mov	rbp, rdi
0xa263:	je	0xa2b0


0xa130:	push	r15
0xa132:	push	r14
0xa134:	mov	r15, rsi
0xa137:	push	r13
0xa139:	push	r12
0xa13b:	mov	r13, rcx
0xa13e:	push	rbp
0xa13f:	push	rbx
0xa140:	mov	rbp, rdx
0xa143:	sub	rsp, 0x28
0xa147:	mov	qword ptr [rsp + 8], rdi
0xa14c:	mov	qword ptr [rsp + 0x18], rdx
0xa151:	call	0x1b80


0xa120:	mov	edi, 1
0xa125:	jmp	0x5030


0xa0a0:	push	rbx
0xa0a1:	mov	rax, rsi
0xa0a4:	mov	rbx, rdi
0xa0a7:	xor	edi, edi
0xa0a9:	sub	rsp, 0x10
0xa0ad:	mov	rcx, qword ptr fs:[0x28]
0xa0b6:	mov	qword ptr [rsp + 8], rcx
0xa0bb:	xor	ecx, ecx
0xa0bd:	mov	rsi, rsp
0xa0c0:	mov	rcx, rdx
0xa0c3:	mov	rdx, rax
0xa0c6:	call	0xa550


0xa010:	push	r13
0xa012:	push	r12
0xa014:	mov	r13, rsi
0xa017:	push	rbp
0xa018:	push	rbx
0xa019:	mov	rbx, rdi
0xa01c:	mov	r12, rdx
0xa01f:	sub	rsp, 0x18
0xa023:	mov	rax, qword ptr fs:[0x28]
0xa02c:	mov	qword ptr [rsp + 8], rax
0xa031:	xor	eax, eax
0xa033:	lea	rax, [rsp + 4]
0xa038:	test	rdi, rdi
0xa03b:	cmove	rbx, rax
0xa03f:	mov	rdi, rbx
0xa042:	call	0x1bb0


0x9fb0:	mov	rax, qword ptr [rdi + 8]
0x9fb4:	cmp	qword ptr [rdi + 0x10], rax
0x9fb8:	je	0x9fc0


0x9f70:	test	rdi, rdi
0x9f73:	push	rbx
0x9f74:	mov	rbx, rdi
0x9f77:	je	0x9f8a


0x9cf0:	push	r12
0x9cf2:	push	rbp
0x9cf3:	mov	ebp, edi
0x9cf5:	push	rbx
0x9cf6:	sub	rsp, 0x50
0x9cfa:	mov	rax, qword ptr fs:[0x28]
0x9d03:	mov	qword ptr [rsp + 0x18], rax
0x9d08:	xor	eax, eax
0x9d0a:	lea	rax, [rsp + 0x70]
0x9d0f:	test	esi, esi
0x9d11:	mov	qword ptr [rsp + 0x30], rdx
0x9d16:	mov	qword ptr [rsp + 0x38], rcx
0x9d1b:	mov	qword ptr [rsp + 0x40], r8
0x9d20:	mov	qword ptr [rsp + 8], rax
0x9d25:	lea	rax, [rsp + 0x20]
0x9d2a:	mov	qword ptr [rsp + 0x48], r9
0x9d2f:	mov	dword ptr [rsp], 0x10
0x9d36:	mov	qword ptr [rsp + 0x10], rax
0x9d3b:	je	0x9f42


0x9c70:	push	r12
0x9c72:	push	rbp
0x9c73:	push	rbx
0x9c74:	mov	rbx, rdi
0x9c77:	call	0x1cf0


0x9bc0:	sub	rsp, 0x18
0x9bc4:	mov	rax, qword ptr fs:[0x28]
0x9bcd:	mov	qword ptr [rsp + 8], rax
0x9bd2:	xor	eax, eax
0x9bd4:	movzx	eax, byte ptr [rdi]
0x9bd7:	test	al, al
0x9bd9:	je	0x9c56


0x9a70:	push	r15
0x9a72:	push	r14
0x9a74:	push	r13
0x9a76:	push	r12
0x9a78:	push	rbp
0x9a79:	push	rbx
0x9a7a:	sub	rsp, 0x28
0x9a7e:	mov	rax, qword ptr fs:[0x28]
0x9a87:	mov	qword ptr [rsp + 0x18], rax
0x9a8c:	xor	eax, eax
0x9a8e:	test	rdi, rdi
0x9a91:	movdqu	xmm0, xmmword ptr [rsi]
0x9a95:	movups	xmmword ptr [rsp], xmm0
0x9a99:	mov	r14, qword ptr [rsi + 0x10]
0x9a9d:	mov	qword ptr [rsp + 0x10], r14
0x9aa2:	je	0x9b50


0x9650:	push	r15
0x9652:	push	r14
0x9654:	push	r13
0x9656:	push	r12
0x9658:	push	rbp
0x9659:	push	rbx
0x965a:	sub	rsp, 0x28
0x965e:	mov	rax, qword ptr fs:[0x28]
0x9667:	mov	qword ptr [rsp + 0x18], rax
0x966c:	xor	eax, eax
0x966e:	cmp	edx, 0x24
0x9671:	ja	0x99d5


0x9610:	lea	rsi, [rip + 0x5498]
0x9617:	sub	rsp, 8
0x961b:	mov	edx, 5
0x9620:	xor	edi, edi
0x9622:	call	0x1b60


0x95f0:	push	rbx
0x95f1:	mov	rbx, rdi
0x95f4:	call	0x1b80


0x95c0:	push	rbp
0x95c1:	push	rbx
0x95c2:	mov	rbp, rdi
0x95c5:	mov	rdi, rsi
0x95c8:	mov	rbx, rsi
0x95cb:	sub	rsp, 8
0x95cf:	call	0x93c0


0x9590:	mov	rax, rdi
0x9593:	sub	rsp, 8
0x9597:	mul	rsi
0x959a:	seto	dl
0x959d:	test	rax, rax
0x95a0:	js	0x95b9


0x9570:	push	rbx
0x9571:	mov	rbx, rdi
0x9574:	call	0x93c0


0x9520:	test	rdi, rdi
0x9523:	mov	rax, qword ptr [rsi]
0x9526:	je	0x9550


0x9490:	test	rdi, rdi
0x9493:	mov	r9, rdx
0x9496:	mov	rcx, qword ptr [rsi]
0x9499:	je	0x94d0


0x9460:	mov	rax, rsi
0x9463:	mul	rdx
0x9466:	mov	rsi, rax
0x9469:	seto	al
0x946c:	test	rsi, rsi
0x946f:	js	0x947b


0x9420:	test	rsi, rsi
0x9423:	push	rbx
0x9424:	mov	rbx, rsi
0x9427:	jne	0x942e


0x9410:	jmp	0x93c0


0x93e0:	mov	rax, rdi
0x93e3:	mul	rsi
0x93e6:	mov	rdi, rax
0x93e9:	seto	al
0x93ec:	test	rdi, rdi
0x93ef:	js	0x93fb


0x93c0:	push	rbx
0x93c1:	mov	rbx, rdi
0x93c4:	call	0x1d00


0x9340:	push	rbx
0x9341:	lea	rsi, [rip + 0x545a]
0x9348:	mov	edx, 5
0x934d:	xor	edi, edi
0x934f:	call	0x1b60


0x9260:	push	rbp
0x9261:	push	rbx
0x9262:	mov	r10d, 0x20
0x9268:	xor	r11d, r11d
0x926b:	sub	rsp, 0xb8
0x9272:	mov	rax, qword ptr fs:[0x28]
0x927b:	mov	qword ptr [rsp + 0x78], rax
0x9280:	xor	eax, eax
0x9282:	lea	rax, [rsp + 0xd0]
0x928a:	mov	qword ptr [rsp + 0xa0], r8
0x9292:	lea	rbx, [rsp + 0xd0]
0x929a:	lea	r8, [rsp + 0x20]
0x929f:	mov	qword ptr [rsp + 0xa8], r9
0x92a7:	mov	dword ptr [rsp + 8], 0x20
0x92af:	mov	qword ptr [rsp + 0x10], rax
0x92b4:	lea	rax, [rsp + 0x80]
0x92bc:	xor	r9d, r9d
0x92bf:	mov	qword ptr [rsp + 0x18], rax
0x92c4:	mov	rbp, rax
0x92c7:	nop	word ptr [rax + rax]
0x92d0:	cmp	r10d, 0x2f
0x92d4:	ja	0x932c


0x91e0:	sub	rsp, 0x68
0x91e4:	mov	r10, r8
0x91e7:	xor	r9d, r9d
0x91ea:	mov	rax, qword ptr fs:[0x28]
0x91f3:	mov	qword ptr [rsp + 0x58], rax
0x91f8:	xor	eax, eax
0x91fa:	mov	r8, rsp
0x91fd:	nop	dword ptr [rax]
0x9200:	mov	eax, dword ptr [r10]
0x9203:	cmp	eax, 0x2f
0x9206:	ja	0x924a


0x91c0:	xor	r9d, r9d
0x91c3:	cmp	qword ptr [r8], 0
0x91c7:	je	0x91db


0x8da0:	push	r15
0x8da2:	push	r14
0x8da4:	push	r13
0x8da6:	push	r12
0x8da8:	mov	r12, r9
0x8dab:	push	rbp
0x8dac:	push	rbx
0x8dad:	mov	rbp, rdi
0x8db0:	mov	rbx, r8
0x8db3:	sub	rsp, 0x28
0x8db7:	test	rsi, rsi
0x8dba:	je	0x8ed8


0x8d90:	mov	r8, rdx
0x8d93:	mov	r9, rcx
0x8d96:	xor	edx, edx
0x8d98:	xor	ecx, ecx
0x8d9a:	jmp	0x8cd0


0x8cd0:	push	r14
0x8cd2:	push	r13
0x8cd4:	mov	r13d, esi
0x8cd7:	push	r12
0x8cd9:	push	rbp
0x8cda:	mov	r12d, edi
0x8cdd:	push	rbx
0x8cde:	mov	rsi, r9
0x8ce1:	mov	rdi, r8
0x8ce4:	mov	rbp, rdx
0x8ce7:	mov	r14d, ecx
0x8cea:	call	0x9bc0


0x8cb0:	lea	rcx, [rip + 0x208389]
0x8cb7:	mov	rsi, rdi
0x8cba:	mov	rdx, -1
0x8cc1:	xor	edi, edi
0x8cc3:	jmp	0x8370


0x8c90:	lea	rcx, [rip + 0x2083a9]
0x8c97:	mov	rdx, -1
0x8c9e:	jmp	0x8370


0x8c70:	lea	rcx, [rip + 0x2083c9]
0x8c77:	mov	rdx, rsi
0x8c7a:	mov	rsi, rdi
0x8c7d:	xor	edi, edi
0x8c7f:	jmp	0x8370


0x8c60:	lea	rcx, [rip + 0x2083d9]
0x8c67:	jmp	0x8370


0x8c40:	mov	r8, rcx
0x8c43:	mov	rcx, rdx
0x8c46:	mov	rdx, rsi
0x8c49:	mov	rsi, rdi
0x8c4c:	xor	edi, edi
0x8c4e:	jmp	0x8b70


0x8c20:	mov	rcx, rdx
0x8c23:	mov	r8, -1
0x8c2a:	mov	rdx, rsi
0x8c2d:	mov	rsi, rdi
0x8c30:	xor	edi, edi
0x8c32:	jmp	0x8b70


0x8c10:	mov	r8, -1
0x8c17:	jmp	0x8b70


0x8b70:	sub	rsp, 0x48
0x8b74:	mov	r9, rcx
0x8b77:	mov	rcx, qword ptr [rip + 0x2089d2]
0x8b7e:	movdqa	xmm0, xmmword ptr [rip + 0x20899a]
0x8b86:	mov	rax, qword ptr fs:[0x28]
0x8b8f:	mov	qword ptr [rsp + 0x38], rax
0x8b94:	xor	eax, eax
0x8b96:	movaps	xmmword ptr [rsp], xmm0
0x8b9a:	test	rsi, rsi
0x8b9d:	mov	qword ptr [rsp + 0x30], rcx
0x8ba2:	mov	dword ptr [rsp], 0xa
0x8ba9:	movdqa	xmm0, xmmword ptr [rip + 0x20897f]
0x8bb1:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x8bb6:	movdqa	xmm0, xmmword ptr [rip + 0x208982]
0x8bbe:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x8bc3:	je	0x8bf7


0x8ae0:	sub	rsp, 0x48
0x8ae4:	mov	rax, rdx
0x8ae7:	mov	rdx, qword ptr fs:[0x28]
0x8af0:	mov	qword ptr [rsp + 0x38], rdx
0x8af5:	xor	edx, edx
0x8af7:	cmp	esi, 0xa
0x8afa:	je	0x8b64


0x8ad0:	mov	edx, 0x3a
0x8ad5:	jmp	0x8a00


0x8ab0:	mov	edx, 0x3a
0x8ab5:	mov	rsi, -1
0x8abc:	jmp	0x8a00


0x8aa0:	movsx	edx, sil
0x8aa4:	mov	rsi, -1
0x8aab:	jmp	0x8a00


0x8a00:	sub	rsp, 0x48
0x8a04:	mov	ecx, edx
0x8a06:	mov	rax, qword ptr fs:[0x28]
0x8a0f:	mov	qword ptr [rsp + 0x38], rax
0x8a14:	xor	eax, eax
0x8a16:	mov	rax, qword ptr [rip + 0x208b33]
0x8a1d:	mov	r8, rsp
0x8a20:	and	ecx, 0x1f
0x8a23:	movdqa	xmm0, xmmword ptr [rip + 0x208af5]
0x8a2b:	mov	qword ptr [rsp + 0x30], rax
0x8a30:	mov	eax, edx
0x8a32:	movaps	xmmword ptr [rsp], xmm0
0x8a36:	shr	al, 5
0x8a39:	movzx	eax, al
0x8a3c:	lea	r9, [r8 + rax*4 + 8]
0x8a41:	movdqa	xmm0, xmmword ptr [rip + 0x208ae7]
0x8a49:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x8a4e:	movdqa	xmm0, xmmword ptr [rip + 0x208aea]
0x8a56:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x8a5b:	mov	edx, dword ptr [r9]
0x8a5e:	mov	eax, edx
0x8a60:	shr	eax, cl
0x8a62:	not	eax
0x8a64:	and	eax, 1
0x8a67:	shl	eax, cl
0x8a69:	mov	rcx, r8
0x8a6c:	xor	eax, edx
0x8a6e:	mov	rdx, rsi
0x8a71:	mov	rsi, rdi
0x8a74:	mov	dword ptr [r9], eax
0x8a77:	xor	edi, edi
0x8a79:	call	0x8370


0x89f0:	mov	rcx, rdx
0x89f3:	mov	rdx, rsi
0x89f6:	mov	esi, edi
0x89f8:	xor	edi, edi
0x89fa:	jmp	0x8950


0x89e0:	mov	rdx, rsi
0x89e3:	mov	esi, edi
0x89e5:	xor	edi, edi
0x89e7:	jmp	0x88c0


0x8950:	sub	rsp, 0x48
0x8954:	mov	rax, rdx
0x8957:	mov	rdx, rcx
0x895a:	mov	rcx, qword ptr fs:[0x28]
0x8963:	mov	qword ptr [rsp + 0x38], rcx
0x8968:	xor	ecx, ecx
0x896a:	cmp	esi, 0xa
0x896d:	je	0x89d0


0x88c0:	sub	rsp, 0x48
0x88c4:	mov	rax, rdx
0x88c7:	mov	rdx, qword ptr fs:[0x28]
0x88d0:	mov	qword ptr [rsp + 0x38], rdx
0x88d5:	xor	edx, edx
0x88d7:	cmp	esi, 0xa
0x88da:	je	0x8944


0x88a0:	lea	rcx, [rip + 0x208c79]
0x88a7:	mov	rdx, rsi
0x88aa:	mov	rsi, rdi
0x88ad:	xor	edi, edi
0x88af:	jmp	0x8370


0x8880:	lea	rcx, [rip + 0x208c99]
0x8887:	mov	rsi, rdi
0x888a:	mov	rdx, -1
0x8891:	xor	edi, edi
0x8893:	jmp	0x8370


0x8870:	lea	rcx, [rip + 0x208ca9]
0x8877:	jmp	0x8370


0x8850:	lea	rcx, [rip + 0x208cc9]
0x8857:	mov	rdx, -1
0x885e:	jmp	0x8370


0x87b0:	mov	eax, dword ptr [rip + 0x2088c2]
0x87b6:	push	r12
0x87b8:	mov	r12, qword ptr [rip + 0x2088c1]
0x87bf:	push	rbp
0x87c0:	push	rbx
0x87c1:	cmp	eax, 1
0x87c4:	jle	0x87f1


0x87a0:	mov	rcx, rdx
0x87a3:	xor	edx, edx
0x87a5:	jmp	0x86b0


0x86b0:	push	r15
0x86b2:	push	r14
0x86b4:	lea	rax, [rip + 0x208e65]
0x86bb:	push	r13
0x86bd:	push	r12
0x86bf:	mov	r12, rdx
0x86c2:	push	rbp
0x86c3:	push	rbx
0x86c4:	mov	rbx, rcx
0x86c7:	mov	r14, rdi
0x86ca:	mov	r15, rsi
0x86cd:	sub	rsp, 0x38
0x86d1:	test	rcx, rcx
0x86d4:	cmove	rbx, rax
0x86d8:	xor	ebp, ebp
0x86da:	call	0x1a80


0x8630:	push	r15
0x8632:	push	r14
0x8634:	lea	rax, [rip + 0x208ee5]
0x863b:	push	r13
0x863d:	push	r12
0x863f:	mov	r13, rdi
0x8642:	push	rbp
0x8643:	push	rbx
0x8644:	mov	rbx, r8
0x8647:	mov	r14, rsi
0x864a:	mov	r15, rdx
0x864d:	sub	rsp, 0x18
0x8651:	test	r8, r8
0x8654:	cmove	rbx, rax
0x8658:	mov	qword ptr [rsp + 8], rcx
0x865d:	call	0x1a80


0x8600:	lea	rax, [rip + 0x208f19]
0x8607:	test	rdi, rdi
0x860a:	cmove	rdi, rax
0x860e:	test	rsi, rsi
0x8611:	mov	dword ptr [rdi], 0xa
0x8617:	je	0x8627


0x85e0:	lea	rax, [rip + 0x208f39]
0x85e7:	test	rdi, rdi
0x85ea:	cmove	rdi, rax
0x85ee:	mov	eax, dword ptr [rdi + 4]
0x85f1:	mov	dword ptr [rdi + 4], esi
0x85f4:	ret	


0x85a0:	lea	rax, [rip + 0x208f79]
0x85a7:	test	rdi, rdi
0x85aa:	mov	ecx, esi
0x85ac:	cmove	rdi, rax
0x85b0:	mov	eax, esi
0x85b2:	and	ecx, 0x1f
0x85b5:	shr	al, 5
0x85b8:	movzx	eax, al
0x85bb:	lea	rdi, [rdi + rax*4 + 8]
0x85c0:	mov	esi, dword ptr [rdi]
0x85c2:	mov	eax, esi
0x85c4:	shr	eax, cl
0x85c6:	xor	edx, eax
0x85c8:	and	eax, 1
0x85cb:	and	edx, 1
0x85ce:	shl	edx, cl
0x85d0:	xor	edx, esi
0x85d2:	mov	dword ptr [rdi], edx
0x85d4:	ret	


0x8580:	lea	rax, [rip + 0x208f99]
0x8587:	test	rdi, rdi
0x858a:	cmove	rdi, rax
0x858e:	mov	dword ptr [rdi], esi
0x8590:	ret	


0x8560:	lea	rax, [rip + 0x208fb9]
0x8567:	test	rdi, rdi
0x856a:	cmove	rdi, rax
0x856e:	mov	eax, dword ptr [rdi]
0x8570:	ret	


0x8520:	push	r12
0x8522:	push	rbp
0x8523:	push	rbx
0x8524:	mov	rbx, rdi
0x8527:	call	0x1a80


0x8370:	push	r15
0x8372:	push	r14
0x8374:	movsxd	r15, edi
0x8377:	push	r13
0x8379:	push	r12
0x837b:	mov	r14, rdx
0x837e:	push	rbp
0x837f:	push	rbx
0x8380:	mov	rbp, rcx
0x8383:	sub	rsp, 0x28
0x8387:	mov	qword ptr [rsp + 8], rsi
0x838c:	call	0x1a80


0x7130:	push	r15
0x7132:	push	r14
0x7134:	mov	r15d, r8d
0x7137:	push	r13
0x7139:	push	r12
0x713b:	mov	r14, rdi
0x713e:	push	rbp
0x713f:	push	rbx
0x7140:	mov	ebx, r9d
0x7143:	mov	r13, rsi
0x7146:	mov	rbp, rcx
0x7149:	and	ebx, 2
0x714c:	sub	rsp, 0xb8
0x7153:	mov	rax, qword ptr [rsp + 0xf0]
0x715b:	mov	qword ptr [rsp + 0x10], rdx
0x7160:	mov	dword ptr [rsp + 8], r8d
0x7165:	mov	dword ptr [rsp + 0x78], r9d
0x716a:	mov	qword ptr [rsp + 0x20], rax
0x716f:	mov	rax, qword ptr [rsp + 0xf8]
0x7177:	mov	qword ptr [rsp + 0x68], rax
0x717c:	mov	rax, qword ptr [rsp + 0x100]
0x7184:	mov	qword ptr [rsp + 0x60], rax
0x7189:	mov	rax, qword ptr fs:[0x28]
0x7192:	mov	qword ptr [rsp + 0xa8], rax
0x719a:	xor	eax, eax
0x719c:	call	0x1b70


0x7040:	push	rbp
0x7041:	push	rbx
0x7042:	mov	rbp, rdi
0x7045:	mov	ebx, esi
0x7047:	sub	rsp, 8
0x704b:	call	0xa510


0x6fa0:	test	rdi, rdi
0x6fa3:	push	rbx
0x6fa4:	je	0x701d


0x6e60:	push	r14
0x6e62:	push	r13
0x6e64:	mov	r14, r8
0x6e67:	push	r12
0x6e69:	push	rbp
0x6e6a:	mov	r12, rdx
0x6e6d:	push	rbx
0x6e6e:	mov	r13, rcx
0x6e71:	sub	rsp, 0xd0
0x6e78:	test	al, al
0x6e7a:	mov	rbp, qword ptr [rsp + 0x100]
0x6e82:	je	0x6ebb


0x6d20:	push	r13
0x6d22:	push	r12
0x6d24:	mov	r13, r8
0x6d27:	push	rbp
0x6d28:	push	rbx
0x6d29:	mov	rbp, rdx
0x6d2c:	mov	r12, rcx
0x6d2f:	sub	rsp, 0xe8
0x6d36:	test	al, al
0x6d38:	je	0x6d74


0x6b30:	push	r13
0x6b32:	push	r12
0x6b34:	mov	r13, rsi
0x6b37:	push	rbp
0x6b38:	push	rbx
0x6b39:	mov	r12, rdx
0x6b3c:	mov	rbx, rdi
0x6b3f:	sub	rsp, 0x18
0x6b43:	mov	rax, qword ptr fs:[0x28]
0x6b4c:	mov	qword ptr [rsp + 8], rax
0x6b51:	xor	eax, eax
0x6b53:	test	rdi, rdi
0x6b56:	je	0x6c70


0x6120:	push	r15
0x6122:	push	r14
0x6124:	mov	eax, edx
0x6126:	push	r13
0x6128:	push	r12
0x612a:	mov	r15d, edx
0x612d:	push	rbp
0x612e:	push	rbx
0x612f:	and	eax, 0x20
0x6132:	and	r15d, 3
0x6136:	mov	r12d, edx
0x6139:	mov	rbx, rdi
0x613c:	sub	rsp, 0x98
0x6143:	mov	qword ptr [rsp + 0x18], rcx
0x6148:	mov	dword ptr [rsp + 0x30], eax
0x614c:	mov	rcx, qword ptr fs:[0x28]
0x6155:	mov	qword ptr [rsp + 0x88], rcx
0x615d:	xor	ecx, ecx
0x615f:	cmp	eax, 1
0x6162:	mov	qword ptr [rsp], rsi
0x6166:	mov	qword ptr [rsp + 0x10], r8
0x616b:	sbb	eax, eax
0x616d:	and	eax, 0xffffffe8
0x6170:	add	eax, 0x400
0x6175:	mov	dword ptr [rsp + 0x34], eax
0x6179:	call	0x1af0


0x6050:	fld	dword ptr [rip + 0x818e]
0x6056:	fld	xword ptr [rsp + 8]
0x605a:	fucomi	st(1)
0x605c:	jae	0x60d0


0x6000:	sub	rsp, 0x28
0x6004:	xor	edi, edi
0x6006:	mov	rsi, rsp
0x6009:	mov	rax, qword ptr fs:[0x28]
0x6012:	mov	qword ptr [rsp + 0x18], rax
0x6017:	xor	eax, eax
0x6019:	call	0x1b10


0x5ff0:	mov	rsi, rdi
0x5ff3:	xor	edi, edi
0x5ff5:	jmp	0x1b10


0x5f60:	push	rbx
0x5f61:	mov	edi, 1
0x5f66:	sub	rsp, 0x20
0x5f6a:	mov	rbx, rsp
0x5f6d:	mov	rsi, rbx
0x5f70:	mov	rax, qword ptr fs:[0x28]
0x5f79:	mov	qword ptr [rsp + 0x18], rax
0x5f7e:	xor	eax, eax
0x5f80:	call	0x1b10


0x5f00:	push	r13
0x5f02:	push	r12
0x5f04:	xor	eax, eax
0x5f06:	push	rbp
0x5f07:	push	rbx
0x5f08:	mov	ebp, edi
0x5f0a:	mov	rdi, rsi
0x5f0d:	mov	esi, edx
0x5f0f:	mov	edx, ecx
0x5f11:	sub	rsp, 8
0x5f15:	call	0x1db0


0x5e50:	push	rbp
0x5e51:	push	rbx
0x5e52:	sub	rsp, 8
0x5e56:	mov	rdi, qword ptr [rip + 0x20b26b]
0x5e5d:	call	0x5db0


0x5e40:	mov	byte ptr [rip + 0x20b5a9], dil
0x5e47:	ret	


0x5e30:	mov	qword ptr [rip + 0x20b5c1], rdi
0x5e37:	ret	


0x5db0:	push	r12
0x5db2:	push	rbp
0x5db3:	mov	rbp, rdi
0x5db6:	push	rbx
0x5db7:	call	0x1ad0


0x5c40:	test	rsi, rsi
0x5c43:	je	0x5da8


0x5b20:	test	rsi, rsi
0x5b23:	je	0x5c30


0x5a80:	mov	rsi, qword ptr [rip + 0x20b941]
0x5a87:	mov	rdi, qword ptr [rip + 0x20b882]
0x5a8e:	push	r12
0x5a90:	push	rbp
0x5a91:	push	rbx
0x5a92:	call	0x4e30


0x5730:	push	r15
0x5732:	push	r14
0x5734:	mov	r14, rdx
0x5737:	push	r13
0x5739:	push	r12
0x573b:	mov	r13, r8
0x573e:	push	rbp
0x573f:	push	rbx
0x5740:	mov	r12, rcx
0x5743:	mov	ebx, edi
0x5745:	sub	rsp, 0xb8
0x574c:	mov	rbp, qword ptr [r8]
0x574f:	mov	rax, qword ptr fs:[0x28]
0x5758:	mov	qword ptr [rsp + 0xa8], rax
0x5760:	xor	eax, eax
0x5762:	mov	qword ptr [rsp], rsi
0x5766:	call	0x1a80


0x5640:	push	r14
0x5642:	mov	r14, rdi
0x5645:	push	r13
0x5647:	mov	r13, rcx
0x564a:	push	r12
0x564c:	mov	r12, rsi
0x564f:	push	rbp
0x5650:	mov	ebp, edx
0x5652:	push	rbx
0x5653:	xor	ebx, ebx
0x5655:	mov	esi, 0x2c
0x565a:	mov	rdi, r14
0x565d:	call	0x1bd0


0x5030:	push	r13
0x5032:	push	r12
0x5034:	mov	edx, 5
0x5039:	push	rbp
0x503a:	push	rbx
0x503b:	mov	ebp, edi
0x503d:	sub	rsp, 0x88
0x5044:	mov	rbx, qword ptr [rip + 0x20c3b5]
0x504b:	mov	rax, qword ptr fs:[0x28]
0x5054:	mov	qword ptr [rsp + 0x78], rax
0x5059:	xor	eax, eax
0x505b:	test	edi, edi
0x505d:	je	0x508d


0x4e30:	push	r13
0x4e32:	push	r12
0x4e34:	mov	r12, rdi
0x4e37:	push	rbp
0x4e38:	push	rbx
0x4e39:	mov	rbp, rsi
0x4e3c:	sub	rsp, 8
0x4e40:	test	byte ptr [rip + 0x20c53e], 0x40
0x4e47:	je	0x4e56


0x4df0:	push	rbp
0x4df1:	push	rbx
0x4df2:	mov	rbp, rdi
0x4df5:	sub	rsp, 8
0x4df9:	jmp	0x4e0a


0x4da0:	cmp	qword ptr [rip + 0x20c568], 0
0x4da8:	je	0x4dac


0x4ce0:	push	rbp
0x4ce1:	push	rbx
0x4ce2:	sub	rsp, 0x2a8
0x4ce9:	mov	rbx, qword ptr [rip + 0x20c6e8]
0x4cf0:	mov	rbp, qword ptr [rip + 0x20c6d1]
0x4cf7:	mov	rax, qword ptr fs:[0x28]
0x4d00:	mov	qword ptr [rsp + 0x298], rax
0x4d08:	xor	eax, eax
0x4d0a:	lea	rdi, [rbx + rbp - 1]
0x4d0f:	call	0x1d00


0x4c20:	push	rbp
0x4c21:	push	rbx
0x4c22:	sub	rsp, 0x2a8
0x4c29:	mov	rbx, qword ptr [rip + 0x20c7a8]
0x4c30:	mov	rbp, qword ptr [rip + 0x20c799]
0x4c37:	mov	rax, qword ptr fs:[0x28]
0x4c40:	mov	qword ptr [rsp + 0x298], rax
0x4c48:	xor	eax, eax
0x4c4a:	lea	rdi, [rbp + rbx*2 + 3]
0x4c4f:	call	0x1d00


0x4c00:	sub	rsp, 8
0x4c04:	call	0x4890


0x4b90:	test	rdx, rdx
0x4b93:	je	0x4bee


0x4a70:	push	r13
0x4a72:	push	r12
0x4a74:	mov	r13d, edi
0x4a77:	push	rbp
0x4a78:	push	rbx
0x4a79:	mov	r12, rsi
0x4a7c:	mov	rbp, rdx
0x4a7f:	sub	rsp, 8
0x4a83:	jmp	0x4a9e


0x4a20:	push	r14
0x4a22:	mov	r14d, edi
0x4a25:	push	r13
0x4a27:	mov	r13, rsi
0x4a2a:	push	r12
0x4a2c:	mov	r12d, edx
0x4a2f:	push	rbp
0x4a30:	mov	ebp, ecx
0x4a32:	push	rbx
0x4a33:	jmp	0x4a42


0x4940:	push	rbp
0x4941:	push	rbx
0x4942:	sub	rsp, 0x98
0x4949:	mov	rax, qword ptr fs:[0x28]
0x4952:	mov	qword ptr [rsp + 0x88], rax
0x495a:	xor	eax, eax
0x495c:	mov	rbp, rsp
0x495f:	nop	
0x4960:	mov	eax, dword ptr [rip + 0x20c90a]
0x4966:	test	eax, eax
0x4968:	jne	0x4974


0x4890:	push	rbp
0x4891:	push	rbx
0x4892:	xor	edi, edi
0x4894:	sub	rsp, 8
0x4898:	call	0x1c60


0x4770:	push	r13
0x4772:	push	r12
0x4774:	push	rbp
0x4775:	push	rbx
0x4776:	sub	rsp, 8
0x477a:	mov	ecx, dword ptr [rip + 0x20cbc0]
0x4780:	test	ecx, ecx
0x4782:	jle	0x47ae


0x4730:	cmp	byte ptr [rip + 0x20c8e1], 0
0x4737:	jne	0x4758


0x45b0:	push	r15
0x45b2:	push	r14
0x45b4:	push	r13
0x45b6:	push	r12
0x45b8:	push	rbp
0x45b9:	push	rbx
0x45ba:	sub	rsp, 8
0x45be:	test	edi, edi
0x45c0:	jne	0x4650


0x44b0:	push	r14
0x44b2:	push	r13
0x44b4:	mov	r13, rdi
0x44b7:	push	r12
0x44b9:	push	rbp
0x44ba:	mov	r12d, ecx
0x44bd:	push	rbx
0x44be:	mov	ebx, esi
0x44c0:	mov	rbp, rdx
0x44c3:	mov	esi, 0x80306d02
0x44c8:	mov	edi, ebx
0x44ca:	sub	rsp, 0x70
0x44ce:	mov	rax, qword ptr fs:[0x28]
0x44d7:	mov	qword ptr [rsp + 0x68], rax
0x44dc:	xor	eax, eax
0x44de:	mov	rdx, rsp
0x44e1:	call	0x1c50


0x43a0:	push	r13
0x43a2:	push	r12
0x43a4:	push	rbp
0x43a5:	push	rbx
0x43a6:	mov	ebx, esi
0x43a8:	sub	rsp, 0xa8
0x43af:	mov	rax, qword ptr fs:[0x28]
0x43b8:	mov	qword ptr [rsp + 0x98], rax
0x43c0:	xor	eax, eax
0x43c2:	and	ebx, 0xfffdfeff
0x43c8:	jne	0x43ef


0x4250:	push	r13
0x4252:	push	r12
0x4254:	lea	r8, [rip + 0x8418]
0x425b:	push	rbp
0x425c:	push	rbx
0x425d:	mov	r12, rsi
0x4260:	mov	edx, 0xa
0x4265:	mov	rbp, rdi
0x4268:	sub	rsp, 0x28
0x426c:	lea	rcx, [rsp + 8]
0x4271:	lea	rsi, [rsp + 0x10]
0x4276:	mov	rax, qword ptr fs:[0x28]
0x427f:	mov	qword ptr [rsp + 0x18], rax
0x4284:	xor	eax, eax
0x4286:	call	0x9650


0x4140:	push	rbp
0x4141:	push	rbx
0x4142:	mov	ebp, esi
0x4144:	mov	ebx, edi
0x4146:	sub	rsp, 0xe8
0x414d:	test	al, al
0x414f:	mov	qword ptr [rsp + 0x48], rcx
0x4154:	mov	qword ptr [rsp + 0x50], r8
0x4159:	mov	qword ptr [rsp + 0x58], r9
0x415e:	je	0x419a


0x3db0:	push	r15
0x3db2:	push	r14
0x3db4:	mov	r14, rdi
0x3db7:	push	r13
0x3db9:	push	r12
0x3dbb:	push	rbp
0x3dbc:	push	rbx
0x3dbd:	mov	rbp, rdi
0x3dc0:	sub	rsp, 0x7e8
0x3dc7:	mov	rax, qword ptr fs:[0x28]
0x3dd0:	mov	qword ptr [rsp + 0x7d8], rax
0x3dd8:	xor	eax, eax
0x3dda:	test	rdi, rdi
0x3ddd:	je	0x4030


0x3da0:	mov	eax, dword ptr [rip + 0x20d4c6]
0x3da6:	add	eax, 1
0x3da9:	mov	dword ptr [rip + 0x20d4bd], eax
0x3daf:	ret	


0x3d90:	mov	dword ptr [rip + 0x20d4da], edi
0x3d96:	ret	


0x3d80:	push	rbp
0x3d81:	mov	rbp, rsp
0x3d84:	pop	rbp
0x3d85:	jmp	0x3cf0


0x3d40:	cmp	byte ptr [rip + 0x20d3c1], 0
0x3d47:	jne	0x3d78


0x3cf0:	lea	rdi, [rip + 0x20d3b1]
0x3cf7:	lea	rsi, [rip + 0x20d3aa]
0x3cfe:	push	rbp
0x3cff:	sub	rsi, rdi
0x3d02:	mov	rbp, rsp
0x3d05:	sar	rsi, 3
0x3d09:	mov	rax, rsi
0x3d0c:	shr	rax, 0x3f
0x3d10:	add	rsi, rax
0x3d13:	sar	rsi, 1
0x3d16:	je	0x3d30


0x3cb0:	lea	rdi, [rip + 0x20d3f1]
0x3cb7:	push	rbp
0x3cb8:	lea	rax, [rip + 0x20d3e9]
0x3cbf:	cmp	rax, rdi
0x3cc2:	mov	rbp, rsp
0x3cc5:	je	0x3ce0


0x3c80:	xor	ebp, ebp
0x3c82:	mov	r9, rdx
0x3c85:	pop	rsi
0x3c86:	mov	rdx, rsp
0x3c89:	and	rsp, 0xfffffffffffffff0
0x3c8d:	push	rax
0x3c8e:	push	rsp
0x3c8f:	lea	r8, [rip + 0x893a]
0x3c96:	lea	rcx, [rip + 0x88c3]
0x3c9d:	lea	rdi, [rip - 0x1df4]
0x3ca4:	call	qword ptr [rip + 0x20d326]


0x1eb0:	push	r15
0x1eb2:	push	r14
0x1eb4:	push	r13
0x1eb6:	push	r12
0x1eb8:	mov	r12d, edi
0x1ebb:	push	rbp
0x1ebc:	push	rbx
0x1ebd:	lea	rdi, [rip + 0xa978]
0x1ec4:	mov	rbp, rsi
0x1ec7:	sub	rsp, 0xe8
0x1ece:	mov	rax, qword ptr fs:[0x28]
0x1ed7:	mov	qword ptr [rsp + 0xd8], rax
0x1edf:	xor	eax, eax
0x1ee1:	call	0x1a20


0x19e8:	sub	rsp, 8
0x19ec:	mov	rax, qword ptr [rip + 0x20f5e5]
0x19f3:	test	rax, rax
0x19f6:	je	0x19fa


0x1de0:	jmp	qword ptr [rip + 0x20f182]


0xb8eb:	movzx	eax, byte ptr [rdi]
0xb8ee:	test	al, al
0xb8f0:	jne	0xb8e0


0xb6dd:	xor	eax, eax
0xb6df:	ret	


0xb67a:	lea	r8, [rip + 0x363f]
0xb681:	lea	r10, [rip + 0x3698]
0xb688:	lea	r9, [rip + 0x361d]
0xb68f:	xor	ecx, ecx
0xb691:	nop	dword ptr [rax]
0xb698:	cmp	dword ptr [rax], 0x16
0xb69b:	ja	0xb6e0


0x1d20:	jmp	qword ptr [rip + 0x20f1e2]


0x1d60:	jmp	qword ptr [rip + 0x20f1c2]


0xa4a1:	pop	rbx
0xa4a2:	mov	rax, r14
0xa4a5:	pop	rbp
0xa4a6:	pop	r12
0xa4a8:	pop	r13
0xa4aa:	pop	r14
0xa4ac:	ret	


0xa470:	mov	r12, rcx
0xa473:	mov	r13, rdi
0xa476:	mov	rbp, rdx
0xa479:	lea	rbx, [rsi + 8]
0xa47d:	jmp	0xa48f


0x1b60:	jmp	qword ptr [rip + 0x20f2c2]


0xa2b0:	lea	rsi, [rip + 0x4934]
0xa2b7:	xor	edi, edi
0xa2b9:	call	0x1b60


0xa265:	lea	rsi, [rip + 0x499a]
0xa26c:	xor	edi, edi
0xa26e:	call	0x1b60


0x1b80:	jmp	qword ptr [rip + 0x20f2b2]


0x1bb0:	jmp	qword ptr [rip + 0x20f29a]


0x9fc0:	mov	rax, qword ptr [rdi + 0x20]
0x9fc4:	cmp	qword ptr [rdi + 0x28], rax
0x9fc8:	jne	0x9fba


0x9fba:	jmp	0x1dc0


0x9f8a:	mov	rdi, rbx
0x9f8d:	pop	rbx
0x9f8e:	jmp	0x1d10


0x9f79:	call	0x1d40


0x9f42:	mov	rax, qword ptr [rsp + 0x10]
0x9f47:	xor	esi, esi
0x9f49:	mov	edx, dword ptr [rax + 0x10]
0x9f4c:	xor	eax, eax
0x9f4e:	call	0x1b00


0x9d41:	cmp	esi, 0x406
0x9d47:	jne	0x9d90


0x1cf0:	jmp	qword ptr [rip + 0x20f1fa]


0x9c56:	xor	edi, edi
0x9c58:	jmp	0x9c0a


0x9bdb:	cmp	al, 0x25
0x9bdd:	mov	r8, rdi
0x9be0:	jne	0x9c18


0x9b50:	mov	edi, 1
0x9b55:	call	0x93c0


0x9aa8:	mov	r12, rdi
0x9aab:	mov	r15, rsi
0x9aae:	mov	rbp, rdi
0x9ab1:	xor	ebx, ebx
0x9ab3:	mov	r13, -1
0x9aba:	mov	edx, dword ptr [rsp]
0x9abd:	cmp	edx, 0x2f
0x9ac0:	ja	0x9ba0


0x9677:	lea	rax, [rsp + 0x10]
0x967c:	mov	r15, rsi
0x967f:	test	rsi, rsi
0x9682:	mov	rbp, rdi
0x9685:	mov	dword ptr [rsp + 8], edx
0x9689:	mov	r14, rcx
0x968c:	mov	r13, r8
0x968f:	cmove	r15, rax
0x9693:	call	0x1a80


0x99d5:	lea	rcx, [rip + 0x5204]
0x99dc:	lea	rsi, [rip + 0x50dd]
0x99e3:	lea	rdi, [rip + 0x50f6]
0x99ea:	mov	edx, 0x54
0x99ef:	call	0x1c20


0x95b9:	call	0x9610


0x95a2:	movzx	edx, dl
0x95a5:	test	rdx, rdx
0x95a8:	jne	0x95b9


0x9550:	test	rax, rax
0x9553:	mov	edx, 0x80
0x9558:	cmove	rax, rdx
0x955c:	test	rax, rax
0x955f:	jns	0x9542


0x9528:	movabs	rdx, 0x5555555555555553
0x9532:	cmp	rax, rdx
0x9535:	ja	0x9561


0x94d0:	test	rcx, rcx
0x94d3:	je	0x94f8


0x949b:	xor	edx, edx
0x949d:	movabs	rax, 0x5555555555555554
0x94a7:	div	r9
0x94aa:	cmp	rax, rcx
0x94ad:	jbe	0x94eb


0x947b:	sub	rsp, 8
0x947f:	call	0x9610


0x9471:	movzx	eax, al
0x9474:	test	rax, rax
0x9477:	jne	0x947b


0x9429:	test	rdi, rdi
0x942c:	jne	0x9448


0x942e:	mov	rsi, rbx
0x9431:	call	0x1d50


0x93fb:	sub	rsp, 8
0x93ff:	call	0x9610


0x93f1:	movzx	eax, al
0x93f4:	test	rax, rax
0x93f7:	jne	0x93fb


0x1d00:	jmp	qword ptr [rip + 0x20f1f2]


0x92d6:	mov	eax, r10d
0x92d9:	mov	r11d, 1
0x92df:	add	r10d, 8
0x92e3:	add	rax, rbp
0x92e6:	mov	rax, qword ptr [rax]
0x92e9:	test	rax, rax
0x92ec:	mov	qword ptr [r8 + r9*8], rax
0x92f0:	je	0x92fc


0x932c:	mov	rax, rbx
0x932f:	add	rbx, 8
0x9333:	jmp	0x92e6


0x9208:	mov	r11d, eax
0x920b:	add	r11, qword ptr [r10 + 0x10]
0x920f:	add	eax, 8
0x9212:	mov	dword ptr [r10], eax
0x9215:	mov	rax, qword ptr [r11]
0x9218:	test	rax, rax
0x921b:	mov	qword ptr [r8 + r9*8], rax
0x921f:	je	0x922b


0x924a:	mov	r11, qword ptr [r10 + 8]
0x924e:	lea	rax, [r11 + 8]
0x9252:	mov	qword ptr [r10 + 8], rax
0x9256:	jmp	0x9215


0x91db:	jmp	0x8da0


0x8ed8:	mov	r8, rcx
0x8edb:	mov	rcx, rdx
0x8ede:	lea	rdx, [rip + 0x586f]
0x8ee5:	mov	esi, 1
0x8eea:	xor	eax, eax
0x8eec:	call	0x1e30


0x8dc0:	mov	r8, rdx
0x8dc3:	lea	rdx, [rip + 0x597e]
0x8dca:	mov	r9, rcx
0x8dcd:	xor	eax, eax
0x8dcf:	mov	rcx, rsi
0x8dd2:	mov	esi, 1
0x8dd7:	call	0x1e30


0x8bf7:	call	0x1a70


0x8bc5:	test	rdx, rdx
0x8bc8:	je	0x8bf7


0x8b64:	call	0x1a70


0x8afc:	mov	dword ptr [rsp], esi
0x8aff:	mov	rcx, rsp
0x8b02:	mov	rdx, -1
0x8b09:	mov	rsi, rax
0x8b0c:	mov	qword ptr [rsp + 4], 0
0x8b15:	mov	qword ptr [rsp + 0xc], 0x4000000
0x8b1e:	mov	qword ptr [rsp + 0x14], 0
0x8b27:	mov	qword ptr [rsp + 0x1c], 0
0x8b30:	mov	qword ptr [rsp + 0x24], 0
0x8b39:	mov	qword ptr [rsp + 0x2c], 0
0x8b42:	mov	dword ptr [rsp + 0x34], 0
0x8b4a:	call	0x8370


0x89d0:	call	0x1a70


0x896f:	mov	dword ptr [rsp], esi
0x8972:	mov	rcx, rsp
0x8975:	mov	rsi, rax
0x8978:	mov	qword ptr [rsp + 4], 0
0x8981:	mov	qword ptr [rsp + 0xc], 0
0x898a:	mov	qword ptr [rsp + 0x14], 0
0x8993:	mov	qword ptr [rsp + 0x1c], 0
0x899c:	mov	qword ptr [rsp + 0x24], 0
0x89a5:	mov	qword ptr [rsp + 0x2c], 0
0x89ae:	mov	dword ptr [rsp + 0x34], 0
0x89b6:	call	0x8370


0x8944:	call	0x1a70


0x88dc:	mov	dword ptr [rsp], esi
0x88df:	mov	rcx, rsp
0x88e2:	mov	rdx, -1
0x88e9:	mov	rsi, rax
0x88ec:	mov	qword ptr [rsp + 4], 0
0x88f5:	mov	qword ptr [rsp + 0xc], 0
0x88fe:	mov	qword ptr [rsp + 0x14], 0
0x8907:	mov	qword ptr [rsp + 0x1c], 0
0x8910:	mov	qword ptr [rsp + 0x24], 0
0x8919:	mov	qword ptr [rsp + 0x2c], 0
0x8922:	mov	dword ptr [rsp + 0x34], 0
0x892a:	call	0x8370


0x87f1:	mov	rdi, qword ptr [r12 + 8]
0x87f6:	lea	rbx, [rip + 0x208c23]
0x87fd:	cmp	rdi, rbx
0x8800:	je	0x8819


0x87c6:	sub	eax, 2
0x87c9:	lea	rbx, [r12 + 0x18]
0x87ce:	shl	rax, 4
0x87d2:	lea	rbp, [r12 + rax + 0x28]
0x87d7:	nop	word ptr [rax + rax]
0x87e0:	mov	rdi, qword ptr [rbx]
0x87e3:	add	rbx, 0x10
0x87e7:	call	0x1a60


0x1a80:	jmp	qword ptr [rip + 0x20f332]


0x8627:	sub	rsp, 8
0x862b:	call	0x1a70


0x8619:	test	rdx, rdx
0x861c:	je	0x8627


0x1b70:	jmp	qword ptr [rip + 0x20f2ba]


0x701d:	mov	rcx, qword ptr [rip + 0x20a0dc]
0x7024:	lea	rdi, [rip + 0x71dd]
0x702b:	mov	edx, 0x37
0x7030:	mov	esi, 1
0x7035:	call	0x1e20


0x6fa6:	mov	esi, 0x2f
0x6fab:	mov	rbx, rdi
0x6fae:	call	0x1bf0


0x6ebb:	mov	rax, qword ptr fs:[0x28]
0x6ec4:	mov	qword ptr [rsp + 0x18], rax
0x6ec9:	xor	eax, eax
0x6ecb:	lea	rdx, [rip + 0x78cf]
0x6ed2:	lea	rax, [rip + 0x7327]
0x6ed9:	test	r9b, r9b
0x6edc:	lea	rcx, [rip + 0x209bdd]
0x6ee3:	cmove	rdx, rax
0x6ee7:	xor	r8d, r8d
0x6eea:	mov	ebx, dword ptr [rip + 0x20a1f0]
0x6ef0:	mov	dword ptr [rip + 0x20a1e6], 1
0x6efa:	call	0x1ba0


0x6e84:	movaps	xmmword ptr [rsp + 0x50], xmm0
0x6e89:	movaps	xmmword ptr [rsp + 0x60], xmm1
0x6e8e:	movaps	xmmword ptr [rsp + 0x70], xmm2
0x6e93:	movaps	xmmword ptr [rsp + 0x80], xmm3
0x6e9b:	movaps	xmmword ptr [rsp + 0x90], xmm4
0x6ea3:	movaps	xmmword ptr [rsp + 0xa0], xmm5
0x6eab:	movaps	xmmword ptr [rsp + 0xb0], xmm6
0x6eb3:	movaps	xmmword ptr [rsp + 0xc0], xmm7
0x6ebb:	mov	rax, qword ptr fs:[0x28]
0x6ec4:	mov	qword ptr [rsp + 0x18], rax
0x6ec9:	xor	eax, eax
0x6ecb:	lea	rdx, [rip + 0x78cf]
0x6ed2:	lea	rax, [rip + 0x7327]
0x6ed9:	test	r9b, r9b
0x6edc:	lea	rcx, [rip + 0x209bdd]
0x6ee3:	cmove	rdx, rax
0x6ee7:	xor	r8d, r8d
0x6eea:	mov	ebx, dword ptr [rip + 0x20a1f0]
0x6ef0:	mov	dword ptr [rip + 0x20a1e6], 1
0x6efa:	call	0x1ba0


0x6d74:	mov	rax, qword ptr fs:[0x28]
0x6d7d:	mov	qword ptr [rsp + 0x28], rax
0x6d82:	xor	eax, eax
0x6d84:	cmp	edi, 2
0x6d87:	mov	ebx, dword ptr [rip + 0x20a353]
0x6d8d:	mov	dword ptr [rip + 0x20a349], 0
0x6d97:	je	0x6dd0


0x6d3a:	movaps	xmmword ptr [rsp + 0x60], xmm0
0x6d3f:	movaps	xmmword ptr [rsp + 0x70], xmm1
0x6d44:	movaps	xmmword ptr [rsp + 0x80], xmm2
0x6d4c:	movaps	xmmword ptr [rsp + 0x90], xmm3
0x6d54:	movaps	xmmword ptr [rsp + 0xa0], xmm4
0x6d5c:	movaps	xmmword ptr [rsp + 0xb0], xmm5
0x6d64:	movaps	xmmword ptr [rsp + 0xc0], xmm6
0x6d6c:	movaps	xmmword ptr [rsp + 0xd0], xmm7
0x6d74:	mov	rax, qword ptr fs:[0x28]
0x6d7d:	mov	qword ptr [rsp + 0x28], rax
0x6d82:	xor	eax, eax
0x6d84:	cmp	edi, 2
0x6d87:	mov	ebx, dword ptr [rip + 0x20a353]
0x6d8d:	mov	dword ptr [rip + 0x20a349], 0
0x6d97:	je	0x6dd0


0x6c70:	lea	rdi, [rip + 0x7520]
0x6c77:	call	0x1a20


0x6b5c:	xor	ebp, ebp
0x6b5e:	cmp	byte ptr [rbx], 0x27
0x6b61:	jne	0x6b6c


0x1af0:	jmp	qword ptr [rip + 0x20f2fa]


0x605e:	fstp	st(1)
0x6060:	fnstcw	word ptr [rsp - 0xa]
0x6064:	movzx	eax, word ptr [rsp - 0xa]
0x6069:	or	ah, 0xc
0x606c:	mov	word ptr [rsp - 0xc], ax
0x6071:	fld	st(0)
0x6073:	fldcw	word ptr [rsp - 0xc]
0x6077:	fistp	qword ptr [rsp - 0x18]
0x607b:	fldcw	word ptr [rsp - 0xa]
0x607f:	mov	rax, qword ptr [rsp - 0x18]
0x6084:	mov	qword ptr [rsp - 0x20], rax
0x6089:	test	rax, rax
0x608c:	fild	qword ptr [rsp - 0x20]
0x6090:	jns	0x6098


0x60d0:	fnstcw	word ptr [rsp - 0xa]
0x60d4:	movzx	eax, word ptr [rsp - 0xa]
0x60d9:	fsubr	st(1), st(0)
0x60db:	fxch	st(1)
0x60dd:	movabs	rdx, 0x8000000000000000
0x60e7:	or	ah, 0xc
0x60ea:	mov	word ptr [rsp - 0xc], ax
0x60ef:	fldcw	word ptr [rsp - 0xc]
0x60f3:	fistp	qword ptr [rsp - 0x18]
0x60f7:	fldcw	word ptr [rsp - 0xa]
0x60fb:	mov	rax, qword ptr [rsp - 0x18]
0x6100:	xor	rax, rdx
0x6103:	jmp	0x6084


0x1b10:	jmp	qword ptr [rip + 0x20f2ea]


0x1db0:	jmp	qword ptr [rip + 0x20f19a]


0x1ad0:	jmp	qword ptr [rip + 0x20f30a]


0x5da8:	ret	


0x5c49:	push	r13
0x5c4b:	push	r12
0x5c4d:	mov	r12, rdi
0x5c50:	push	rbp
0x5c51:	push	rbx
0x5c52:	mov	rbp, rsi
0x5c55:	xor	ebx, ebx
0x5c57:	sub	rsp, 8
0x5c5b:	jmp	0x5cb8


0x5c30:	ret	


0x5b29:	push	r12
0x5b2b:	lea	r12, [rdi + rsi]
0x5b2f:	push	rbp
0x5b30:	mov	rbp, rdi
0x5b33:	push	rbx
0x5b34:	jmp	0x5b88


0x1bd0:	jmp	qword ptr [rip + 0x20f28a]


0x508d:	lea	rsi, [rip + 0x7b3c]
0x5094:	xor	edi, edi
0x5096:	call	0x1b60


0x505f:	lea	rsi, [rip + 0x7b42]
0x5066:	xor	edi, edi
0x5068:	call	0x1b60


0x4e56:	xor	ebx, ebx
0x4e58:	test	rbp, rbp
0x4e5b:	jne	0x4e76


0x4e49:	cmp	qword ptr [rip + 0x20c578], rsi
0x4e50:	ja	0x4f90


0x4e0a:	call	0x4940


0x4dac:	test	byte ptr [rip + 0x20c5da], 8
0x4db3:	jne	0x4dce


0x4daa:	ret	


0x4bee:	xor	eax, eax
0x4bf0:	ret	


0x4b95:	push	r13
0x4b97:	push	r12
0x4b99:	mov	r13d, edi
0x4b9c:	push	rbp
0x4b9d:	push	rbx
0x4b9e:	mov	rbp, rsi
0x4ba1:	mov	rbx, rdx
0x4ba4:	xor	r12d, r12d
0x4ba7:	sub	rsp, 8
0x4bab:	jmp	0x4bbd


0x4a9e:	call	0x4940


0x4a42:	call	0x4940


0x496a:	mov	eax, dword ptr [rip + 0x20c8fc]
0x4970:	test	eax, eax
0x4972:	je	0x49f0


0x4974:	lea	rsi, [rip + 0x20c905]
0x497b:	xor	edi, edi
0x497d:	mov	rdx, rbp
0x4980:	call	0x1a30


0x1c60:	jmp	qword ptr [rip + 0x20f242]


0x47ae:	mov	r13, qword ptr [rip + 0x20cbc3]
0x47b5:	lea	rsi, [rip + 0x82ac]
0x47bc:	mov	rbx, qword ptr [rip + 0x20cb9d]
0x47c3:	xor	edi, edi
0x47c5:	mov	r12, qword ptr [rip + 0x20cba4]
0x47cc:	mov	rbp, qword ptr [rip + 0x20cb95]
0x47d3:	mov	edx, 5
0x47d8:	call	0x1b60


0x4784:	mov	rdi, qword ptr [rip + 0x20c975]
0x478b:	mov	rax, qword ptr [rdi + 0x28]
0x478f:	cmp	rax, qword ptr [rdi + 0x30]
0x4793:	jae	0x4880


0x4739:	sub	rsp, 8
0x473d:	mov	rdi, qword ptr [rip + 0x20c9bc]
0x4744:	call	0x5db0


0x4758:	jmp	0x5e50


0x45c6:	movzx	r15d, byte ptr [rip + 0x20cc9b]
0x45ce:	lea	rax, [rip + 0x20cb53]
0x45d5:	test	rsi, rsi
0x45d8:	mov	rbx, qword ptr [rax]
0x45db:	je	0x4610


0x4650:	movzx	r15d, byte ptr [rip + 0x20cc10]
0x4658:	lea	rax, [rip + 0x20cac1]
0x465f:	jmp	0x45d5


0x1c50:	jmp	qword ptr [rip + 0x20f24a]


0x43ca:	mov	rax, qword ptr [rsp + 0x98]
0x43d2:	xor	rax, qword ptr fs:[0x28]
0x43db:	jne	0x44ab


0x43ef:	mov	esi, 3
0x43f4:	mov	ebp, edi
0x43f6:	mov	r13, rdx
0x43f9:	call	0x9cf0


0x419a:	mov	rax, qword ptr fs:[0x28]
0x41a3:	mov	qword ptr [rsp + 0x28], rax
0x41a8:	xor	eax, eax
0x41aa:	mov	eax, dword ptr [rip + 0x20d190]
0x41b0:	test	eax, eax
0x41b2:	jle	0x41da


0x4160:	movaps	xmmword ptr [rsp + 0x60], xmm0
0x4165:	movaps	xmmword ptr [rsp + 0x70], xmm1
0x416a:	movaps	xmmword ptr [rsp + 0x80], xmm2
0x4172:	movaps	xmmword ptr [rsp + 0x90], xmm3
0x417a:	movaps	xmmword ptr [rsp + 0xa0], xmm4
0x4182:	movaps	xmmword ptr [rsp + 0xb0], xmm5
0x418a:	movaps	xmmword ptr [rsp + 0xc0], xmm6
0x4192:	movaps	xmmword ptr [rsp + 0xd0], xmm7
0x419a:	mov	rax, qword ptr fs:[0x28]
0x41a3:	mov	qword ptr [rsp + 0x28], rax
0x41a8:	xor	eax, eax
0x41aa:	mov	eax, dword ptr [rip + 0x20d190]
0x41b0:	test	eax, eax
0x41b2:	jle	0x41da


0x4030:	call	0x5f60


0x3de3:	lea	rbx, [rsp + 0x10]
0x3de8:	mov	rdi, qword ptr [rip + 0x20d569]
0x3def:	mov	r8d, 1
0x3df5:	mov	ecx, 1
0x3dfa:	mov	edx, 0x1d1
0x3dff:	mov	rsi, rbx
0x3e02:	call	0x6120


0x3d49:	cmp	qword ptr [rip + 0x20d297], 0
0x3d51:	push	rbp
0x3d52:	mov	rbp, rsp
0x3d55:	je	0x3d63


0x3d78:	ret	


0x3d30:	pop	rbp
0x3d31:	ret	


0x3d18:	mov	rax, qword ptr [rip + 0x20d2c1]
0x3d1f:	test	rax, rax
0x3d22:	je	0x3d30


0x3ce0:	pop	rbp
0x3ce1:	ret	


0x3cc7:	mov	rax, qword ptr [rip + 0x20d2fa]
0x3cce:	test	rax, rax
0x3cd1:	je	0x3ce0




0x1a20:	jmp	qword ptr [rip + 0x20f362]


0x19fa:	add	rsp, 8
0x19fe:	ret	


0x19f8:	call	rax




0xb8f2:	lea	rax, [rbx + rbx*4]
0xb8f6:	lea	rax, [rbx + rax*2]
0xb8fa:	mov	qword ptr [rcx + rax*8], rdi
0xb8fe:	mov	rax, qword ptr [rsp + 0x10]
0xb903:	mov	qword ptr [r14 + 0x10], rax
0xb907:	mov	rax, qword ptr [rsp + 0x18]
0xb90c:	mov	qword ptr [r14 + 0x18], rax
0xb910:	xor	eax, eax
0xb912:	add	rsp, 0x58
0xb916:	pop	rbx
0xb917:	pop	rbp
0xb918:	pop	r12
0xb91a:	pop	r13
0xb91c:	pop	r14
0xb91e:	pop	r15
0xb920:	ret	


0xb8e0:	cmp	al, 0x25
0xb8e2:	lea	rbp, [rdi + 1]
0xb8e6:	je	0xb928


0xb69d:	mov	edx, dword ptr [rax]
0xb69f:	movsxd	rdx, dword ptr [r8 + rdx*4]
0xb6a3:	add	rdx, r8
0xb6a6:	jmp	rdx


0xb6e0:	mov	eax, 0xffffffff
0xb6e5:	ret	






0xa48f:	mov	rdx, r12
0xa492:	mov	rsi, rbp
0xa495:	mov	rdi, r13
0xa498:	call	0x1c90








0x9fca:	cmp	qword ptr [rdi + 0x48], 0
0x9fcf:	jne	0x9fba


0x1dc0:	jmp	qword ptr [rip + 0x20f192]


0x1d10:	jmp	qword ptr [rip + 0x20f1ea]


0x1d40:	jmp	qword ptr [rip + 0x20f1d2]


0x1b00:	jmp	qword ptr [rip + 0x20f2f2]


0x9d49:	mov	rax, qword ptr [rsp + 0x10]
0x9d4e:	cmp	dword ptr [rip + 0x207803], 0
0x9d55:	mov	dword ptr [rsp], 0x18
0x9d5c:	mov	r12d, dword ptr [rax + 0x10]
0x9d60:	mov	edx, r12d
0x9d63:	js	0x9e93


0x9d90:	cmp	esi, 0xb
0x9d93:	je	0x9dc0




0x9c0a:	call	0x9a70


0x9be2:	cmp	byte ptr [rdi + 1], 0x73
0x9be6:	jne	0x9c18


0x9c18:	mov	rdx, rsi
0x9c1b:	mov	rdi, rsp
0x9c1e:	mov	rsi, r8
0x9c21:	call	0xa0a0


0x9ac6:	mov	eax, edx
0x9ac8:	add	edx, 8
0x9acb:	add	rax, r14
0x9ace:	mov	dword ptr [rsp], edx
0x9ad1:	mov	rdi, qword ptr [rax]
0x9ad4:	call	0x1b80


0x9ba0:	mov	rax, qword ptr [rsp + 8]
0x9ba5:	lea	rdx, [rax + 8]
0x9ba9:	mov	qword ptr [rsp + 8], rdx
0x9bae:	jmp	0x9ad1


0x1c20:	jmp	qword ptr [rip + 0x20f262]


0x95aa:	call	0x1cb0


0x9561:	sub	rsp, 8
0x9565:	call	0x9610


0x9542:	mov	qword ptr [rsi], rax
0x9545:	mov	rsi, rax
0x9548:	jmp	0x9420


0x9537:	mov	rdx, rax
0x953a:	shr	rdx, 1
0x953d:	lea	rax, [rdx + rax + 1]
0x9542:	mov	qword ptr [rsi], rax
0x9545:	mov	rsi, rax
0x9548:	jmp	0x9420


0x94f8:	xor	edx, edx
0x94fa:	mov	eax, 0x80
0x94ff:	xor	r8d, r8d
0x9502:	div	r9
0x9505:	test	rax, rax
0x9508:	sete	r8b
0x950c:	lea	rcx, [r8 + rax]
0x9510:	jmp	0x94d5


0x94d5:	mov	rax, rcx
0x94d8:	mul	r9
0x94db:	seto	dl
0x94de:	test	rax, rax
0x94e1:	movzx	edx, dl
0x94e4:	js	0x94eb


0x94eb:	sub	rsp, 8
0x94ef:	call	0x9610


0x94af:	mov	rax, rcx
0x94b2:	shr	rax, 1
0x94b5:	lea	rcx, [rax + rcx + 1]
0x94ba:	mov	qword ptr [rsi], rcx
0x94bd:	imul	rcx, r9
0x94c1:	mov	rsi, rcx
0x94c4:	jmp	0x9420


0x9479:	jmp	0x9420


0x9448:	call	0x1a60


0x1d50:	jmp	qword ptr [rip + 0x20f1ca]


0x93f9:	jmp	0x93c0




0x92fc:	test	r11b, r11b
0x92ff:	jne	0x9325


0x92f2:	add	r9, 1
0x92f6:	cmp	r9, 0xa
0x92fa:	jne	0x92d0


0x92e6:	mov	rax, qword ptr [rax]
0x92e9:	test	rax, rax
0x92ec:	mov	qword ptr [r8 + r9*8], rax
0x92f0:	je	0x92fc


0x922b:	call	0x8da0


0x9221:	add	r9, 1
0x9225:	cmp	r9, 0xa
0x9229:	jne	0x9200


0x9215:	mov	rax, qword ptr [r11]
0x9218:	test	rax, rax
0x921b:	mov	qword ptr [r8 + r9*8], rax
0x921f:	je	0x922b


0x91d0:	add	r9, 1
0x91d4:	cmp	qword ptr [r8 + r9*8], 0
0x91d9:	jne	0x91d0


0x1e30:	jmp	qword ptr [rip + 0x20f15a]


0x1a70:	jmp	qword ptr [rip + 0x20f33a]


0x8bca:	mov	qword ptr [rsp + 0x28], rsi
0x8bcf:	mov	qword ptr [rsp + 0x30], rdx
0x8bd4:	mov	rcx, rsp
0x8bd7:	mov	rdx, r8
0x8bda:	mov	rsi, r9
0x8bdd:	call	0x8370


0x8819:	lea	rbx, [rip + 0x208870]
0x8820:	cmp	r12, rbx
0x8823:	je	0x8834


0x8802:	call	0x1a60


0x1a60:	jmp	qword ptr [rip + 0x20f342]




0x861e:	mov	qword ptr [rdi + 0x28], rsi
0x8622:	mov	qword ptr [rdi + 0x30], rdx
0x8626:	ret	




0x1e20:	jmp	qword ptr [rip + 0x20f162]


0x1bf0:	jmp	qword ptr [rip + 0x20f27a]


0x1ba0:	jmp	qword ptr [rip + 0x20f2a2]


0x6dd0:	lea	rcx, [rip + 0x209ce9]
0x6dd7:	lea	rdx, [rip + 0x7422]
0x6dde:	xor	r8d, r8d
0x6de1:	mov	qword ptr [rsp + 8], r9
0x6de6:	call	0x1ba0


0x6d99:	mov	rax, qword ptr [rsp + 0x28]
0x6d9e:	xor	rax, qword ptr fs:[0x28]
0x6da7:	mov	dword ptr [rip + 0x20a333], ebx
0x6dad:	mov	dword ptr [rip + 0x20a319], 0
0x6db7:	jne	0x6e5a


0x6b63:	add	rbx, 1
0x6b67:	mov	ebp, 4
0x6b6c:	lea	rdx, [rip + 0x765d]
0x6b73:	lea	rsi, [rip + 0x209f26]
0x6b7a:	mov	ecx, 4
0x6b7f:	mov	rdi, rbx
0x6b82:	call	0xa130


0x6b6c:	lea	rdx, [rip + 0x765d]
0x6b73:	lea	rsi, [rip + 0x209f26]
0x6b7a:	mov	ecx, 4
0x6b7f:	mov	rdi, rbx
0x6b82:	call	0xa130




0x6092:	fadd	dword ptr [rip + 0x8150]
0x6098:	test	edi, edi
0x609a:	jne	0x60c8


0x6098:	test	edi, edi
0x609a:	jne	0x60c8


0x6084:	mov	qword ptr [rsp - 0x20], rax
0x6089:	test	rax, rax
0x608c:	fild	qword ptr [rsp - 0x20]
0x6090:	jns	0x6098








0x5cb8:	mov	rax, qword ptr [rip + 0x20b641]
0x5cbf:	cmp	rax, qword ptr [rip + 0x20b6fa]
0x5cc6:	movzx	r13d, byte ptr [r12 + rbx]
0x5ccb:	lea	rdx, [rax + 1]
0x5ccf:	mov	qword ptr [rip + 0x20b62a], rdx
0x5cd6:	jae	0x5c60


0x5b88:	movzx	eax, byte ptr [rbp]
0x5b8c:	mov	rbx, qword ptr [rip + 0x20b76d]
0x5b93:	cmp	al, byte ptr [rip + 0x20b481]
0x5b99:	mov	rdx, qword ptr [rip + 0x20b820]
0x5ba0:	jne	0x5b40




0x4e5d:	jmp	0x4ef2


0x4e76:	call	0x4940


0x4f90:	mov	esi, 3
0x4f95:	mov	edi, 1
0x4f9a:	xor	eax, eax
0x4f9c:	call	0x9cf0


0x4db5:	cmp	qword ptr [rip + 0x20c55b], 0
0x4dbd:	je	0x4dd3


0x4dce:	jmp	0x4ce0


0x4bbd:	mov	rdx, rbx
0x4bc0:	mov	rsi, rbp
0x4bc3:	mov	edi, r13d
0x4bc6:	call	0x4a70


0x49f0:	mov	rax, qword ptr [rsp + 0x88]
0x49f8:	xor	rax, qword ptr fs:[0x28]
0x4a01:	jne	0x4a0d


0x1a30:	jmp	qword ptr [rip + 0x20f35a]




0x4799:	lea	rdx, [rax + 1]
0x479d:	mov	qword ptr [rdi + 0x28], rdx
0x47a1:	mov	byte ptr [rax], 0xa
0x47a4:	mov	dword ptr [rip + 0x20cb92], 0
0x47ae:	mov	r13, qword ptr [rip + 0x20cbc3]
0x47b5:	lea	rsi, [rip + 0x82ac]
0x47bc:	mov	rbx, qword ptr [rip + 0x20cb9d]
0x47c3:	xor	edi, edi
0x47c5:	mov	r12, qword ptr [rip + 0x20cba4]
0x47cc:	mov	rbp, qword ptr [rip + 0x20cb95]
0x47d3:	mov	edx, 5
0x47d8:	call	0x1b60


0x4880:	mov	esi, 0xa
0x4885:	call	0x1be0


0x4610:	test	rbx, rbx
0x4613:	jne	0x461a


0x45dd:	add	rbx, rsi
0x45e0:	mov	r14, rbx
0x45e3:	and	r14d, 0x1ffff
0x45ea:	cmp	rbx, r14
0x45ed:	mov	qword ptr [rax], r14
0x45f0:	ja	0x4668


0x45d5:	test	rsi, rsi
0x45d8:	mov	rbx, qword ptr [rax]
0x45db:	je	0x4610




0x43e1:	add	rsp, 0xa8
0x43e8:	pop	rbx
0x43e9:	pop	rbp
0x43ea:	pop	r12
0x43ec:	pop	r13
0x43ee:	ret	


0x44ab:	call	0x1b90


0x41da:	lea	rax, [rsp + 0x100]
0x41e2:	lea	rcx, [rsp + 0x10]
0x41e7:	mov	esi, ebp
0x41e9:	mov	edi, ebx
0x41eb:	mov	dword ptr [rsp + 0x10], 0x18
0x41f3:	mov	dword ptr [rsp + 0x14], 0x30
0x41fb:	mov	qword ptr [rsp + 0x18], rax
0x4200:	lea	rax, [rsp + 0x30]
0x4205:	mov	qword ptr [rsp + 0x20], rax
0x420a:	call	0x8d90


0x41b4:	mov	rdi, qword ptr [rip + 0x20cf45]
0x41bb:	mov	rax, qword ptr [rdi + 0x28]
0x41bf:	cmp	rax, qword ptr [rdi + 0x30]
0x41c3:	jae	0x4230


0x3d63:	call	0x3cb0


0x3d57:	mov	rdi, qword ptr [rip + 0x20d2aa]
0x3d5e:	call	0x1ea0


0x3d24:	pop	rbp
0x3d25:	jmp	rax


0x3cd3:	pop	rbp
0x3cd4:	jmp	rax




0xb928:	lea	rax, [rbx + rbx*4]
0xb92c:	mov	r13, r8
0xb92f:	lea	rax, [rbx + rax*2]
0xb933:	lea	r12, [rcx + rax*8]
0xb937:	mov	qword ptr [r12], rdi
0xb93b:	mov	dword ptr [r12 + 0x10], 0
0xb944:	mov	qword ptr [r12 + 0x18], 0
0xb94d:	mov	qword ptr [r12 + 0x20], 0
0xb956:	mov	qword ptr [r12 + 0x28], r8
0xb95b:	mov	qword ptr [r12 + 0x30], 0
0xb964:	mov	qword ptr [r12 + 0x38], 0
0xb96d:	mov	qword ptr [r12 + 0x40], r8
0xb972:	mov	qword ptr [r12 + 0x50], r8
0xb977:	movzx	ebx, byte ptr [rdi + 1]
0xb97b:	lea	eax, [rbx - 0x30]
0xb97e:	cmp	al, 9
0xb980:	ja	0xb9be


0xb8e8:	mov	rdi, rbp
0xb8eb:	movzx	eax, byte ptr [rdi]
0xb8ee:	test	al, al
0xb8f0:	jne	0xb8e0


0x1c90:	jmp	qword ptr [rip + 0x20f22a]


0x9fd1:	push	r12
0x9fd3:	push	rbp
0x9fd4:	mov	r12d, edx
0x9fd7:	push	rbx
0x9fd8:	mov	rbp, rsi
0x9fdb:	mov	rbx, rdi
0x9fde:	call	0x1cf0










0x9e93:	xor	esi, esi
0x9e95:	xor	eax, eax
0x9e97:	call	0x1b00


0x9d69:	xor	eax, eax
0x9d6b:	mov	esi, 0x406
0x9d70:	call	0x1b00


0x9dc0:	mov	edi, ebp
0x9dc2:	xor	eax, eax
0x9dc4:	call	0x1b00


0x9d95:	jg	0x9df0


0x9be8:	xor	edi, edi
0x9bea:	jmp	0x9bfd


0x9ad1:	mov	rdi, qword ptr [rax]
0x9ad4:	call	0x1b80




0x1cb0:	jmp	qword ptr [rip + 0x20f21a]


0x94e6:	test	rdx, rdx
0x94e9:	je	0x94ba




0x9301:	call	0x8da0


0x9325:	mov	dword ptr [rsp + 8], r10d
0x932a:	jmp	0x9301


0x92d0:	cmp	r10d, 0x2f
0x92d4:	ja	0x932c


0x9200:	mov	eax, dword ptr [r10]
0x9203:	cmp	eax, 0x2f
0x9206:	ja	0x924a






0x8834:	pop	rbx
0x8835:	mov	dword ptr [rip + 0x208839], 1
0x883f:	pop	rbp
0x8840:	pop	r12
0x8842:	ret	


0x8825:	mov	rdi, r12
0x8828:	call	0x1a60










0x6dbd:	add	rsp, 0xe8
0x6dc4:	pop	rbx
0x6dc5:	pop	rbp
0x6dc6:	pop	r12
0x6dc8:	pop	r13
0x6dca:	ret	


0x6e5a:	call	0x1b90


0x609c:	fxch	st(1)
0x609e:	fucomip	st(1)
0x60a0:	jp	0x60a8


0x60c8:	fstp	st(1)
0x60ca:	ret	


0x5cd8:	movzx	ecx, byte ptr [rip + 0x20b33a]
0x5cdf:	mov	rdx, qword ptr [rip + 0x20b44a]
0x5ce6:	cmp	cl, r13b
0x5ce9:	je	0x5d90


0x5c60:	mov	rdx, qword ptr [rip + 0x20b6a1]
0x5c67:	sub	rbx, 1
0x5c6b:	movzx	esi, byte ptr [rip + 0x20b3a8]
0x5c72:	mov	rcx, qword ptr [rip + 0x20b697]
0x5c79:	mov	qword ptr [rip + 0x20b4ac], 0
0x5c84:	mov	qword ptr [rip + 0x20b671], 0
0x5c8f:	lea	rax, [rdx + 1]
0x5c93:	cmp	rax, qword ptr [rip + 0x20b72e]
0x5c9a:	mov	byte ptr [rcx + rdx], sil
0x5c9e:	mov	qword ptr [rip + 0x20b663], rax
0x5ca5:	jae	0x5d73


0x5ba2:	cmp	rdx, rbx
0x5ba5:	ja	0x5bd2


0x5b40:	cmp	rdx, rbx
0x5b43:	je	0x5c08


0x4ef2:	add	rsp, 8
0x4ef6:	mov	rax, rbx
0x4ef9:	pop	rbx
0x4efa:	pop	rbp
0x4efb:	pop	r12
0x4efd:	pop	r13
0x4eff:	ret	


0x4dd3:	sub	rsp, 8
0x4dd7:	call	0x4c20


0x4dbf:	mov	rax, qword ptr [rip + 0x20c552]
0x4dc6:	mov	qword ptr [rip + 0x20c543], rax
0x4dcd:	ret	


0x4a03:	add	rsp, 0x98
0x4a0a:	pop	rbx
0x4a0b:	pop	rbp
0x4a0c:	ret	


0x4a0d:	call	0x1b90




0x1be0:	jmp	qword ptr [rip + 0x20f282]


0x4615:	test	r15b, r15b
0x4618:	je	0x45f2


0x461a:	xor	r14d, r14d
0x461d:	test	edi, edi
0x461f:	mov	rbp, rsi
0x4622:	mov	r13d, edi
0x4625:	jne	0x4670


0x45f2:	mov	r12d, 1
0x45f8:	add	rsp, 8
0x45fc:	mov	eax, r12d
0x45ff:	pop	rbx
0x4600:	pop	rbp
0x4601:	pop	r12
0x4603:	pop	r13
0x4605:	pop	r14
0x4607:	pop	r15
0x4609:	ret	


0x4668:	sub	rbx, r14
0x466b:	je	0x45f2


0x1b90:	jmp	qword ptr [rip + 0x20f2aa]


0x41c5:	lea	rcx, [rax + 1]
0x41c9:	mov	qword ptr [rdi + 0x28], rcx
0x41cd:	mov	byte ptr [rax], 0xa
0x41d0:	mov	dword ptr [rip + 0x20d166], 0
0x41da:	lea	rax, [rsp + 0x100]
0x41e2:	lea	rcx, [rsp + 0x10]
0x41e7:	mov	esi, ebp
0x41e9:	mov	edi, ebx
0x41eb:	mov	dword ptr [rsp + 0x10], 0x18
0x41f3:	mov	dword ptr [rsp + 0x14], 0x30
0x41fb:	mov	qword ptr [rsp + 0x18], rax
0x4200:	lea	rax, [rsp + 0x30]
0x4205:	mov	qword ptr [rsp + 0x20], rax
0x420a:	call	0x8d90


0x4230:	mov	esi, 0xa
0x4235:	mov	qword ptr [rsp + 8], rdx
0x423a:	call	0x1be0


0x1ea0:	jmp	qword ptr [rip + 0x20f142]


0xb982:	jmp	0xbdba


0xb9be:	lea	rax, [rbp + 1]
0xb9c2:	cmp	bl, 0x27
0xb9c5:	mov	rdx, rax
0xb9c8:	jne	0xb990




0x9d97:	cmp	esi, 4
0x9d9a:	je	0x9e70


0x9df0:	cmp	esi, 0x407
0x9df6:	jg	0x9e40


0x9bfd:	add	rdi, 1
0x9c01:	movzx	ecx, byte ptr [r8 + rdi*2]
0x9c06:	test	cl, cl
0x9c08:	jne	0x9bf0




0x94ba:	mov	qword ptr [rsi], rcx
0x94bd:	imul	rcx, r9
0x94c1:	mov	rsi, rcx
0x94c4:	jmp	0x9420


0x60a8:	fstp	st(0)
0x60aa:	nop	word ptr [rax + rax]
0x60b0:	add	rax, 1
0x60b4:	mov	qword ptr [rsp - 0x20], rax
0x60b9:	test	rax, rax
0x60bc:	fild	qword ptr [rsp - 0x20]
0x60c0:	js	0x6110


0x60a2:	je	0x60ca


0x5d90:	add	rdx, 1
0x5d94:	mov	qword ptr [rip + 0x20b395], rdx
0x5d9b:	jmp	0x5cab


0x5cef:	test	rdx, rdx
0x5cf2:	mov	rdi, qword ptr [rip + 0x20b617]
0x5cf9:	mov	rax, qword ptr [rip + 0x20b608]
0x5d00:	mov	rsi, qword ptr [rip + 0x20b6c1]
0x5d07:	jne	0x5d24


0x5cab:	add	rbx, 1
0x5caf:	cmp	rbp, rbx
0x5cb2:	jbe	0x5d85


0x5d73:	add	rbx, 1
0x5d77:	call	0x5a80


0x5ba7:	add	rbp, 1
0x5bab:	mov	qword ptr [rip + 0x20b74a], 0
0x5bb6:	cmp	r12, rbp
0x5bb9:	jne	0x5b88


0x5bd2:	mov	rdx, qword ptr [rip + 0x20b72f]
0x5bd9:	movzx	esi, byte ptr [rip + 0x20b439]
0x5be0:	mov	rcx, qword ptr [rip + 0x20b729]
0x5be7:	lea	rax, [rdx + 1]
0x5beb:	cmp	rax, qword ptr [rip + 0x20b7d6]
0x5bf2:	mov	byte ptr [rcx + rdx], sil
0x5bf6:	mov	qword ptr [rip + 0x20b70b], rax
0x5bfd:	jb	0x5bc5


0x5c08:	add	qword ptr [rip + 0x20b710], 1
0x5c10:	jmp	0x5b74


0x5b49:	jbe	0x5b74




0x4627:	movzx	r12d, byte ptr [rip + 0x20cd0d]
0x462f:	mov	rsi, qword ptr [rip + 0x20ccfa]
0x4636:	test	r12b, r12b
0x4639:	jne	0x469c


0x4670:	mov	rsi, qword ptr [rip + 0x20c999]
0x4677:	xor	r12d, r12d
0x467a:	cmp	rsi, -1
0x467e:	je	0x45f8


0x466d:	jmp	0x461d




0xbdba:	mov	rax, rbp
0xbdbd:	nop	dword ptr [rax]
0xbdc0:	add	rax, 1
0xbdc4:	movzx	edx, byte ptr [rax]
0xbdc7:	lea	ecx, [rdx - 0x30]
0xbdca:	cmp	cl, 9
0xbdcd:	jbe	0xbdc0


0xb9ca:	or	dword ptr [r12 + 0x10], 1
0xb9d0:	jmp	0xb9b8


0xb990:	cmp	bl, 0x2d
0xb993:	je	0xb9d8


0x9e70:	mov	eax, dword ptr [rsp]
0x9e73:	cmp	eax, 0x2f
0x9e76:	ja	0x9f64


0x9da0:	jg	0x9e60


0x9df8:	cmp	esi, 0x406
0x9dfe:	jge	0x9e70


0x9e40:	cmp	esi, 0x409
0x9e46:	je	0x9e70


0x9bf0:	cmp	cl, 0x25
0x9bf3:	jne	0x9c18


0x6110:	fadd	dword ptr [rip + 0x80d2]
0x6116:	ret	


0x60c2:	jmp	0x60ca


0x60ca:	ret	


0x60a4:	fstp	st(0)
0x60a6:	jmp	0x60b0


0x5d09:	jmp	0x5da0


0x5d24:	lea	rdx, [rax + 1]
0x5d28:	mov	byte ptr [rdi + rax], cl
0x5d2b:	cmp	rdx, rsi
0x5d2e:	mov	qword ptr [rip + 0x20b5d3], rdx
0x5d35:	jb	0x5d10


0x5d85:	add	rsp, 8
0x5d89:	pop	rbx
0x5d8a:	pop	rbp
0x5d8b:	pop	r12
0x5d8d:	pop	r13
0x5d8f:	ret	


0x5bbb:	pop	rbx
0x5bbc:	pop	rbp
0x5bbd:	pop	r12
0x5bbf:	ret	


0x5bc5:	add	rbx, 1
0x5bc9:	cmp	qword ptr [rip + 0x20b7f0], rbx
0x5bd0:	jbe	0x5ba7


0x5bff:	jmp	0x5bc0


0x5b74:	add	rbp, 1
0x5b78:	add	rbx, 1
0x5b7c:	cmp	r12, rbp
0x5b7f:	mov	qword ptr [rip + 0x20b77a], rbx
0x5b86:	je	0x5bbb


0x5b4b:	mov	rcx, qword ptr [rip + 0x20b7b6]
0x5b52:	mov	rsi, qword ptr [rip + 0x20b7b7]
0x5b59:	lea	rdx, [rcx + 1]
0x5b5d:	cmp	rdx, qword ptr [rip + 0x20b864]
0x5b64:	mov	byte ptr [rsi + rcx], al
0x5b67:	mov	qword ptr [rip + 0x20b79a], rdx
0x5b6e:	jae	0x5c18


0x463b:	call	0x1a80


0x469c:	xor	r12d, r12d
0x469f:	test	rsi, rsi
0x46a2:	js	0x45f8


0x45f8:	add	rsp, 8
0x45fc:	mov	eax, r12d
0x45ff:	pop	rbx
0x4600:	pop	rbp
0x4601:	pop	r12
0x4603:	pop	r13
0x4605:	pop	r14
0x4607:	pop	r15
0x4609:	ret	


0x4684:	test	rsi, rsi
0x4687:	js	0x4708


0x461d:	test	edi, edi
0x461f:	mov	rbp, rsi
0x4622:	mov	r13d, edi
0x4625:	jne	0x4670


0xbdc0:	add	rax, 1
0xbdc4:	movzx	edx, byte ptr [rax]
0xbdc7:	lea	ecx, [rdx - 0x30]
0xbdca:	cmp	cl, 9
0xbdcd:	jbe	0xbdc0


0xbdcf:	cmp	dl, 0x24
0xbdd2:	mov	r13, r8
0xbdd5:	jne	0xb9be


0xb9b8:	movzx	ebx, byte ptr [rax]
0xb9bb:	mov	rbp, rax
0xb9be:	lea	rax, [rbp + 1]
0xb9c2:	cmp	bl, 0x27
0xb9c5:	mov	rdx, rax
0xb9c8:	jne	0xb990


0xb9d8:	or	dword ptr [r12 + 0x10], 2
0xb9de:	jmp	0xb9b8


0xb995:	cmp	bl, 0x2b
0xb998:	je	0xb9e0


0x9e7c:	add	rax, qword ptr [rsp + 0x10]
0x9e81:	mov	edx, dword ptr [rax]
0x9e83:	mov	edi, ebp
0x9e85:	xor	eax, eax
0x9e87:	call	0x1b00


0x9f64:	mov	rax, qword ptr [rsp + 8]
0x9f69:	jmp	0x9e81


0x9da6:	cmp	esi, 2
0x9da9:	je	0x9e70


0x9e60:	cmp	esi, 9
0x9e63:	je	0x9dc0


0x9e00:	cmp	esi, 0x401
0x9e06:	je	0x9dc0


0x9e48:	jl	0x9dc0


0x9bf5:	cmp	byte ptr [r8 + rdi*2 + 1], 0x73
0x9bfb:	jne	0x9c18


0x60b0:	add	rax, 1
0x60b4:	mov	qword ptr [rsp - 0x20], rax
0x60b9:	test	rax, rax
0x60bc:	fild	qword ptr [rsp - 0x20]
0x60c0:	js	0x6110


0x5da0:	mov	rdx, rax
0x5da3:	jmp	0x5d5b


0x5d10:	sub	qword ptr [rip + 0x20b418], 1
0x5d18:	je	0x5d5b


0x5d37:	call	0x5a80


0x5bc0:	call	0x5a80


0x5c18:	call	0x5a80


0x46a8:	sub	rsi, rbx
0x46ab:	test	rbp, rbp
0x46ae:	jne	0x46f0


0x4708:	xor	esi, esi
0x470a:	mov	edx, 1
0x470f:	mov	edi, 1
0x4714:	call	0x1c10


0x4689:	test	rbp, rbp
0x468c:	je	0x46a8


0xbddb:	xor	edx, edx
0xbddd:	movsx	eax, bl
0xbde0:	movabs	rdi, 0x1999999999999999
0xbdea:	mov	rsi, r8
0xbded:	sub	eax, 0x30
0xbdf0:	cmp	rdx, rdi
0xbdf3:	cdqe	
0xbdf5:	ja	0xbdfe


0xb9e0:	or	dword ptr [r12 + 0x10], 4
0xb9e6:	jmp	0xb9b8


0xb99a:	cmp	bl, 0x20
0xb99d:	je	0xb9f0


0x9e81:	mov	edx, dword ptr [rax]
0x9e83:	mov	edi, ebp
0x9e85:	xor	eax, eax
0x9e87:	call	0x1b00


0x9daf:	jg	0x9dc0


0x9e69:	jg	0x9e70


0x9e08:	cmp	esi, 0x402
0x9e0e:	je	0x9e70


0x9e4e:	cmp	esi, 0x40a
0x9e54:	jne	0x9e18


0x5d5b:	lea	rax, [rdx + 1]
0x5d5f:	mov	byte ptr [rdi + rdx], r13b
0x5d63:	cmp	rax, rsi
0x5d66:	mov	qword ptr [rip + 0x20b59b], rax
0x5d6d:	jb	0x5cab


0x5d1a:	movzx	ecx, byte ptr [rip + 0x20b2f8]
0x5d21:	mov	rax, rdx
0x5d24:	lea	rdx, [rax + 1]
0x5d28:	mov	byte ptr [rdi + rax], cl
0x5d2b:	cmp	rdx, rsi
0x5d2e:	mov	qword ptr [rip + 0x20b5d3], rdx
0x5d35:	jb	0x5d10


0x46b0:	test	rbx, rbx
0x46b3:	je	0x46f0


0x46f0:	sub	rsi, r14
0x46f3:	test	rbx, rbx
0x46f6:	jne	0x46cb


0x1c10:	jmp	qword ptr [rip + 0x20f26a]


0x468e:	lea	rax, [r14 + rbx]
0x4692:	add	rsi, rax
0x4695:	mov	qword ptr [rip + 0x20c974], rsi
0x469c:	xor	r12d, r12d
0x469f:	test	rsi, rsi
0x46a2:	js	0x45f8


0xbdf7:	lea	rsi, [rdx + rdx*4]
0xbdfb:	add	rsi, rsi
0xbdfe:	mov	rcx, rbp
0xbe01:	add	rax, rsi
0xbe04:	movzx	ebx, byte ptr [rbp + 1]
0xbe08:	setb	sil
0xbe0c:	add	rbp, 1
0xbe10:	mov	rdx, rax
0xbe13:	movzx	esi, sil
0xbe17:	test	rsi, rsi
0xbe1a:	lea	edi, [rbx - 0x30]
0xbe1d:	jne	0xc1ae


0xbdfe:	mov	rcx, rbp
0xbe01:	add	rax, rsi
0xbe04:	movzx	ebx, byte ptr [rbp + 1]
0xbe08:	setb	sil
0xbe0c:	add	rbp, 1
0xbe10:	mov	rdx, rax
0xbe13:	movzx	esi, sil
0xbe17:	test	rsi, rsi
0xbe1a:	lea	edi, [rbx - 0x30]
0xbe1d:	jne	0xc1ae


0xb9f0:	or	dword ptr [r12 + 0x10], 8
0xb9f6:	jmp	0xb9b8


0xb99f:	cmp	bl, 0x23
0xb9a2:	je	0xba00


0x9db1:	cmp	esi, 1
0x9db4:	jne	0x9e18


0x9e6b:	cmp	esi, 8
0x9e6e:	jne	0x9e18


0x9e10:	cmp	esi, 0x400
0x9e16:	je	0x9e70


0x9e56:	jmp	0x9dc0


0x9e18:	mov	eax, dword ptr [rsp]
0x9e1b:	cmp	eax, 0x2f
0x9e1e:	ja	0x9f5a


0x46b5:	test	r15b, r15b
0x46b8:	je	0x4700


0x46f8:	jmp	0x46ba


0x46cb:	mov	ecx, 4
0x46d0:	mov	rdx, rbx
0x46d3:	mov	edi, r13d
0x46d6:	call	0x1c70




0xbe23:	cmp	dil, 9
0xbe27:	jbe	0xbddd


0xc1ae:	cmp	dil, 9
0xc1b2:	ja	0xc0bb


0xba00:	or	dword ptr [r12 + 0x10], 0x10
0xba06:	jmp	0xb9b8


0xb9a4:	cmp	bl, 0x30
0xb9a7:	je	0xba10


0x9e24:	add	rax, qword ptr [rsp + 0x10]
0x9e29:	mov	rdx, qword ptr [rax]
0x9e2c:	mov	edi, ebp
0x9e2e:	xor	eax, eax
0x9e30:	call	0x1b00


0x9f5a:	mov	rax, qword ptr [rsp + 8]
0x9f5f:	jmp	0x9e29


0x4700:	sub	rsi, r14
0x4703:	jmp	0x46cb


0x46ba:	mov	rax, rsi
0x46bd:	xor	edx, edx
0x46bf:	xor	ebx, ebx
0x46c1:	div	qword ptr [rip + 0x20cd10]
0x46c8:	sub	rsi, rdx
0x46cb:	mov	ecx, 4
0x46d0:	mov	rdx, rbx
0x46d3:	mov	edi, r13d
0x46d6:	call	0x1c70


0x1c70:	jmp	qword ptr [rip + 0x20f23a]


0xbddd:	movsx	eax, bl
0xbde0:	movabs	rdi, 0x1999999999999999
0xbdea:	mov	rsi, r8
0xbded:	sub	eax, 0x30
0xbdf0:	cmp	rdx, rdi
0xbdf3:	cdqe	
0xbdf5:	ja	0xbdfe


0xbe29:	mov	r13, rax
0xbe2c:	sub	r13, 1
0xbe30:	cmp	r13, -3
0xbe34:	ja	0xc0bb


0xc1b8:	movsx	eax, bl
0xc1bb:	mov	rsi, r8
0xc1be:	mov	rcx, rbp
0xc1c1:	sub	eax, 0x30
0xc1c4:	cdqe	
0xc1c6:	jmp	0xbe01


0xc0bb:	mov	rcx, qword ptr [r15 + 8]
0xc0bf:	cmp	qword ptr [rsp + 8], rcx
0xc0c4:	je	0xc0ce


0xba10:	or	dword ptr [r12 + 0x10], 0x20
0xba16:	jmp	0xb9b8


0xb9a9:	cmp	bl, 0x49
0xb9ac:	jne	0xba20


0x9e29:	mov	rdx, qword ptr [rax]
0x9e2c:	mov	edi, ebp
0x9e2e:	xor	eax, eax
0x9e30:	call	0x1b00




0xbe3a:	lea	rbp, [rcx + 2]
0xbe3e:	movzx	ebx, byte ptr [rcx + 2]
0xbe42:	jmp	0xb9be


0xbe01:	add	rax, rsi
0xbe04:	movzx	ebx, byte ptr [rbp + 1]
0xbe08:	setb	sil
0xbe0c:	add	rbp, 1
0xbe10:	mov	rdx, rax
0xbe13:	movzx	esi, sil
0xbe17:	test	rsi, rsi
0xbe1a:	lea	edi, [rbx - 0x30]
0xbe1d:	jne	0xc1ae


0xc0ce:	mov	rdi, qword ptr [r14 + 8]
0xc0d2:	cmp	qword ptr [rsp + 0x28], rdi
0xc0d7:	je	0xc0de


0xc0c6:	mov	rdi, rcx
0xc0c9:	call	0x1a60


0xb9ae:	or	dword ptr [r12 + 0x10], 0x40
0xb9b4:	nop	dword ptr [rax]
0xb9b8:	movzx	ebx, byte ptr [rax]
0xb9bb:	mov	rbp, rax
0xb9be:	lea	rax, [rbp + 1]
0xb9c2:	cmp	bl, 0x27
0xb9c5:	mov	rdx, rax
0xb9c8:	jne	0xb990


0xba20:	cmp	bl, 0x2a
0xba23:	je	0xbbd9


0xc0de:	call	0x1a80


0xc0d9:	call	0x1a60


0xbbd9:	mov	rsi, qword ptr [rsp + 0x10]
0xbbde:	mov	ecx, 1
0xbbe3:	mov	qword ptr [r12 + 0x18], rbp
0xbbe8:	mov	qword ptr [r12 + 0x20], rax
0xbbed:	test	rsi, rsi
0xbbf0:	cmovne	rcx, rsi
0xbbf4:	mov	qword ptr [rsp + 0x10], rcx
0xbbf9:	movzx	ecx, byte ptr [rbp + 1]
0xbbfd:	lea	esi, [rcx - 0x30]
0xbc00:	cmp	sil, 9
0xbc04:	jbe	0xbee5


0xba29:	lea	ecx, [rbx - 0x30]
0xba2c:	cmp	cl, 9
0xba2f:	jbe	0xbe47


0xbee5:	mov	rsi, rax
0xbee8:	add	rsi, 1
0xbeec:	movzx	edi, byte ptr [rsi]
0xbeef:	lea	r11d, [rdi - 0x30]
0xbef3:	cmp	r11b, 9
0xbef7:	jbe	0xbee8


0xbc0a:	mov	rsi, qword ptr [rsp + 0x20]
0xbc0f:	cmp	rsi, -1
0xbc13:	lea	rdx, [rsi + 1]
0xbc17:	mov	qword ptr [r12 + 0x28], rsi
0xbc1c:	je	0xc0bb


0xbe47:	mov	qword ptr [r12 + 0x18], rbp
0xbe4c:	movzx	edi, byte ptr [rbp]
0xbe50:	mov	rsi, rbp
0xbe53:	lea	ecx, [rdi - 0x30]
0xbe56:	cmp	cl, 9
0xbe59:	jbe	0xbe67


0xba35:	cmp	bl, 0x2e
0xba38:	je	0xbd0f


0xbee8:	add	rsi, 1
0xbeec:	movzx	edi, byte ptr [rsi]
0xbeef:	lea	r11d, [rdi - 0x30]
0xbef3:	cmp	r11b, 9
0xbef7:	jbe	0xbee8


0xbef9:	cmp	dil, 0x24
0xbefd:	jne	0xbc0a


0xbc22:	mov	rbx, qword ptr [rsp + 0x20]
0xbc27:	mov	rbp, rax
0xbc2a:	mov	qword ptr [rsp + 0x20], rdx
0xbc2f:	cmp	r9, rbx
0xbc32:	mov	rcx, qword ptr [r15 + 8]
0xbc36:	ja	0xc2b2


0xbe67:	movzx	edi, byte ptr [rax]
0xbe6a:	lea	edx, [rdi - 0x30]
0xbe6d:	cmp	dl, 9
0xbe70:	jbe	0xbe60


0xbe5b:	jmp	0xbe90


0xbd0f:	cmp	byte ptr [rbp + 1], 0x2a
0xbd13:	mov	qword ptr [r12 + 0x30], rbp
0xbd18:	jne	0xbe9e


0xba3e:	xor	eax, eax
0xba40:	mov	esi, 1
0xba45:	jmp	0xba77


0xbf03:	xor	esi, esi
0xbf05:	movsx	eax, cl
0xbf08:	movabs	rdi, 0x1999999999999999
0xbf12:	mov	rcx, r8
0xbf15:	sub	eax, 0x30
0xbf18:	cmp	rsi, rdi
0xbf1b:	cdqe	
0xbf1d:	ja	0xbf26


0xbc3c:	add	r9, r9
0xbc3f:	lea	rax, [rbx + 1]
0xbc43:	cmp	r9, rbx
0xbc46:	cmovbe	r9, rax
0xbc4a:	movabs	rax, 0x7ffffffffffffff
0xbc54:	cmp	r9, rax
0xbc57:	ja	0xc4fb


0xc2b2:	mov	rax, qword ptr [r15]
0xc2b5:	jmp	0xbcb7


0xbe60:	mov	rbp, rax
0xbe63:	add	rax, 1
0xbe67:	movzx	edi, byte ptr [rax]
0xbe6a:	lea	edx, [rdi - 0x30]
0xbe6d:	cmp	dl, 9
0xbe70:	jbe	0xbe60


0xbe72:	mov	rcx, rax
0xbe75:	lea	rdx, [rbp + 2]
0xbe79:	mov	rbp, rax
0xbe7c:	sub	rcx, rsi
0xbe7f:	mov	rsi, qword ptr [rsp + 0x10]
0xbe84:	cmp	rsi, rcx
0xbe87:	cmovae	rcx, rsi
0xbe8b:	mov	qword ptr [rsp + 0x10], rcx
0xbe90:	mov	qword ptr [r12 + 0x20], rbp
0xbe95:	movzx	ebx, byte ptr [rbp]
0xbe99:	jmp	0xba35


0xbe90:	mov	qword ptr [r12 + 0x20], rbp
0xbe95:	movzx	ebx, byte ptr [rbp]
0xbe99:	jmp	0xba35


0xbd1e:	mov	rsi, qword ptr [rsp + 0x18]
0xbd23:	lea	r11, [rbp + 2]
0xbd27:	mov	eax, 2
0xbd2c:	mov	qword ptr [r12 + 0x38], r11
0xbd31:	cmp	rsi, 2
0xbd35:	cmovae	rax, rsi
0xbd39:	mov	qword ptr [rsp + 0x18], rax
0xbd3e:	movsx	eax, byte ptr [rbp + 2]
0xbd42:	lea	edx, [rax - 0x30]
0xbd45:	cmp	dl, 9
0xbd48:	jbe	0xc3dc


0xbe9e:	movzx	eax, byte ptr [rbp + 1]
0xbea2:	sub	eax, 0x30
0xbea5:	cmp	al, 9
0xbea7:	ja	0xbebe


0xba77:	add	rbp, 1
0xba7b:	cmp	bl, 0x68
0xba7e:	jne	0xba50


0xbf1f:	lea	rcx, [rsi + rsi*4]
0xbf23:	add	rcx, rcx
0xbf26:	mov	rbp, rdx
0xbf29:	xor	r11d, r11d
0xbf2c:	add	rax, rcx
0xbf2f:	movzx	ecx, byte ptr [rdx + 1]
0xbf33:	setb	r11b
0xbf37:	add	rdx, 1
0xbf3b:	mov	rsi, rax
0xbf3e:	test	r11, r11
0xbf41:	lea	edi, [rcx - 0x30]
0xbf44:	jne	0xc44e


0xbf26:	mov	rbp, rdx
0xbf29:	xor	r11d, r11d
0xbf2c:	add	rax, rcx
0xbf2f:	movzx	ecx, byte ptr [rdx + 1]
0xbf33:	setb	r11b
0xbf37:	add	rdx, 1
0xbf3b:	mov	rsi, rax
0xbf3e:	test	r11, r11
0xbf41:	lea	edi, [rcx - 0x30]
0xbf44:	jne	0xc44e


0xbc5d:	mov	rsi, r9
0xbc60:	mov	qword ptr [rsp + 0x40], r9
0xbc65:	mov	qword ptr [rsp + 0x38], r10
0xbc6a:	shl	rsi, 5
0xbc6e:	cmp	qword ptr [rsp + 8], rcx
0xbc73:	mov	qword ptr [rsp + 0x30], r8
0xbc78:	je	0xc391


0xc4fb:	cmp	qword ptr [rsp + 8], rcx
0xc500:	jne	0xc364


0xbcb7:	mov	rdx, rax
0xbcba:	shl	rdx, 5
0xbcbe:	add	rdx, rcx
0xbcc1:	cmp	rax, rbx
0xbcc4:	ja	0xbce6


0xc3dc:	mov	rdx, r11
0xc3df:	add	rdx, 1
0xc3e3:	movzx	ecx, byte ptr [rdx]
0xc3e6:	lea	esi, [rcx - 0x30]
0xc3e9:	cmp	sil, 9
0xc3ed:	jbe	0xc3df


0xbd4e:	mov	rbx, qword ptr [r12 + 0x40]
0xbd53:	cmp	rbx, -1
0xbd57:	je	0xc3b5


0xbebe:	mov	rsi, qword ptr [rsp + 0x18]
0xbec3:	mov	rax, rdx
0xbec6:	mov	qword ptr [r12 + 0x38], rdx
0xbecb:	sub	rax, rbp
0xbece:	movzx	ebx, byte ptr [rdx]
0xbed1:	mov	rbp, rdx
0xbed4:	cmp	rsi, rax
0xbed7:	cmovae	rax, rsi
0xbedb:	mov	qword ptr [rsp + 0x18], rax
0xbee0:	jmp	0xba3e


0xba80:	mov	ecx, eax
0xba82:	mov	edx, esi
0xba84:	and	ecx, 1
0xba87:	shl	edx, cl
0xba89:	or	eax, edx
0xba8b:	jmp	0xba73


0xba50:	cmp	bl, 0x4c
0xba53:	je	0xba90


0xbf4a:	cmp	dil, 9
0xbf4e:	jbe	0xbf05


0xc44e:	cmp	dil, 9
0xc452:	ja	0xc0bb


0xc391:	mov	rdi, rsi
0xc394:	call	0x1d00


0xbc7e:	mov	rdi, rcx
0xbc81:	call	0x1d50


0xc506:	jmp	0xc36c


0xc364:	mov	rdi, rcx
0xc367:	call	0x1a60


0xbce6:	shl	rbx, 5
0xbcea:	lea	rax, [rcx + rbx]
0xbcee:	mov	edx, dword ptr [rax]
0xbcf0:	test	edx, edx
0xbcf2:	jne	0xc1cb


0xc3df:	add	rdx, 1
0xc3e3:	movzx	ecx, byte ptr [rdx]
0xc3e6:	lea	esi, [rcx - 0x30]
0xc3e9:	cmp	sil, 9
0xc3ed:	jbe	0xc3df


0xc3ef:	cmp	cl, 0x24
0xc3f2:	jne	0xbd4e


0xc3b5:	mov	rsi, qword ptr [rsp + 0x20]
0xc3ba:	cmp	rsi, -1
0xc3be:	lea	rax, [rsi + 1]
0xc3c2:	mov	qword ptr [r12 + 0x40], rsi
0xc3c7:	je	0xc0bb


0xbd5d:	cmp	r9, rbx
0xbd60:	mov	rcx, qword ptr [r15 + 8]
0xbd64:	jbe	0xc2cf


0xbeb0:	add	rdx, 1
0xbeb4:	movzx	eax, byte ptr [rdx]
0xbeb7:	sub	eax, 0x30
0xbeba:	cmp	al, 9
0xbebc:	jbe	0xbeb0


0xba73:	movzx	ebx, byte ptr [rbp]
0xba77:	add	rbp, 1
0xba7b:	cmp	bl, 0x68
0xba7e:	jne	0xba50


0xba90:	or	eax, 4
0xba93:	jmp	0xba73


0xba55:	cmp	bl, 0x6c
0xba58:	je	0xba70


0xbf05:	movsx	eax, cl
0xbf08:	movabs	rdi, 0x1999999999999999
0xbf12:	mov	rcx, r8
0xbf15:	sub	eax, 0x30
0xbf18:	cmp	rsi, rdi
0xbf1b:	cdqe	
0xbf1d:	ja	0xbf26


0xbf50:	lea	rbx, [rax - 1]
0xbf54:	cmp	rbx, -3
0xbf58:	ja	0xc0bb


0xc458:	movsx	eax, cl
0xc45b:	mov	rbp, rdx
0xc45e:	mov	rcx, r8
0xc461:	sub	eax, 0x30
0xc464:	cdqe	
0xc466:	jmp	0xbf29


0xc36c:	mov	rdi, qword ptr [r14 + 8]
0xc370:	cmp	qword ptr [rsp + 0x28], rdi
0xc375:	je	0xc37c


0xbcd0:	add	rax, 1
0xbcd4:	mov	dword ptr [rdx], 0
0xbcda:	add	rdx, 0x20
0xbcde:	cmp	rax, rbx
0xbce1:	jbe	0xbcd0


0xbce3:	mov	qword ptr [r15], rax
0xbce6:	shl	rbx, 5
0xbcea:	lea	rax, [rcx + rbx]
0xbcee:	mov	edx, dword ptr [rax]
0xbcf0:	test	edx, edx
0xbcf2:	jne	0xc1cb


0xbcf8:	mov	dword ptr [rax], 5
0xbcfe:	movzx	ebx, byte ptr [rbp]
0xbd02:	lea	rdx, [rbp + 1]
0xbd06:	cmp	bl, 0x2e
0xbd09:	jne	0xba3e


0xc1cb:	cmp	edx, 5
0xc1ce:	jne	0xc0bf


0xc3f8:	xor	ecx, ecx
0xc3fa:	movabs	rsi, 0x1999999999999999
0xc404:	sub	eax, 0x30
0xc407:	mov	rdx, r8
0xc40a:	cmp	rcx, rsi
0xc40d:	cdqe	
0xc40f:	ja	0xc418


0xc3cd:	mov	rbx, qword ptr [rsp + 0x20]
0xc3d2:	mov	qword ptr [rsp + 0x20], rax
0xc3d7:	jmp	0xbd5d


0xc2cf:	add	r9, r9
0xc2d2:	lea	rax, [rbx + 1]
0xc2d6:	cmp	r9, rbx
0xc2d9:	cmovbe	r9, rax
0xc2dd:	movabs	rax, 0x7ffffffffffffff
0xc2e7:	cmp	r9, rax
0xc2ea:	ja	0xc4fb


0xbd6a:	mov	rax, qword ptr [r15]
0xbd6d:	mov	rdx, rax
0xbd70:	shl	rdx, 5
0xbd74:	add	rdx, rcx
0xbd77:	cmp	rax, rbx
0xbd7a:	ja	0xbd96


0xba70:	add	eax, 8
0xba73:	movzx	ebx, byte ptr [rbp]
0xba77:	add	rbp, 1
0xba7b:	cmp	bl, 0x68
0xba7e:	jne	0xba50


0xba5a:	cmp	bl, 0x6a
0xba5d:	je	0xba70


0xbf5e:	mov	qword ptr [r12 + 0x28], rbx
0xbf63:	add	rbp, 2
0xbf67:	jmp	0xbc2f


0xbf29:	xor	r11d, r11d
0xbf2c:	add	rax, rcx
0xbf2f:	movzx	ecx, byte ptr [rdx + 1]
0xbf33:	setb	r11b
0xbf37:	add	rdx, 1
0xbf3b:	mov	rsi, rax
0xbf3e:	test	r11, r11
0xbf41:	lea	edi, [rcx - 0x30]
0xbf44:	jne	0xc44e


0xc37c:	call	0x1a80


0xc377:	call	0x1a60


0xc1d4:	movzx	ebx, byte ptr [rbp]
0xc1d8:	lea	rdx, [rbp + 1]
0xc1dc:	jmp	0xba35


0xc0bf:	cmp	qword ptr [rsp + 8], rcx
0xc0c4:	je	0xc0ce


0xc411:	lea	rdx, [rcx + rcx*4]
0xc415:	add	rdx, rdx
0xc418:	mov	rsi, r11
0xc41b:	xor	ebx, ebx
0xc41d:	add	rdx, rax
0xc420:	movsx	eax, byte ptr [r11 + 1]
0xc425:	setb	bl
0xc428:	add	r11, 1
0xc42c:	mov	rcx, rdx
0xc42f:	test	rbx, rbx
0xc432:	lea	edi, [rax - 0x30]
0xc435:	je	0xc4a8


0xc418:	mov	rsi, r11
0xc41b:	xor	ebx, ebx
0xc41d:	add	rdx, rax
0xc420:	movsx	eax, byte ptr [r11 + 1]
0xc425:	setb	bl
0xc428:	add	r11, 1
0xc42c:	mov	rcx, rdx
0xc42f:	test	rbx, rbx
0xc432:	lea	edi, [rax - 0x30]
0xc435:	je	0xc4a8


0xc2f0:	mov	rsi, r9
0xc2f3:	mov	qword ptr [rsp + 0x48], r9
0xc2f8:	mov	qword ptr [rsp + 0x40], r10
0xc2fd:	shl	rsi, 5
0xc301:	cmp	qword ptr [rsp + 8], rcx
0xc306:	mov	qword ptr [rsp + 0x38], r8
0xc30b:	mov	qword ptr [rsp + 0x30], r11
0xc310:	je	0xc4ce


0xbd96:	shl	rbx, 5
0xbd9a:	lea	rax, [rcx + rbx]
0xbd9e:	mov	edx, dword ptr [rax]
0xbda0:	test	edx, edx
0xbda2:	jne	0xc2ba


0xba5f:	mov	edx, ebx
0xba61:	and	edx, 0xffffffdf
0xba64:	cmp	dl, 0x5a
0xba67:	je	0xba70


0xbc2f:	cmp	r9, rbx
0xbc32:	mov	rcx, qword ptr [r15 + 8]
0xbc36:	ja	0xc2b2


0xc4a8:	cmp	dil, 9
0xc4ac:	jbe	0xc3fa


0xc437:	cmp	dil, 9
0xc43b:	ja	0xc0bb


0xc4ce:	mov	rdi, rsi
0xc4d1:	call	0x1d00


0xc316:	mov	rdi, rcx
0xc319:	call	0x1d50


0xbd80:	add	rax, 1
0xbd84:	mov	dword ptr [rdx], 0
0xbd8a:	add	rdx, 0x20
0xbd8e:	cmp	rax, rbx
0xbd91:	jbe	0xbd80


0xbd93:	mov	qword ptr [r15], rax
0xbd96:	shl	rbx, 5
0xbd9a:	lea	rax, [rcx + rbx]
0xbd9e:	mov	edx, dword ptr [rax]
0xbda0:	test	edx, edx
0xbda2:	jne	0xc2ba


0xbda8:	mov	dword ptr [rax], 5
0xbdae:	mov	rbp, r11
0xbdb1:	movzx	ebx, byte ptr [r11]
0xbdb5:	jmp	0xba3e


0xc2ba:	cmp	edx, 5
0xc2bd:	jne	0xc0bf


0xba69:	cmp	bl, 0x74
0xba6c:	jne	0xba98


0xc3fa:	movabs	rsi, 0x1999999999999999
0xc404:	sub	eax, 0x30
0xc407:	mov	rdx, r8
0xc40a:	cmp	rcx, rsi
0xc40d:	cdqe	
0xc40f:	ja	0xc418


0xc4b2:	lea	rbx, [rdx - 1]
0xc4b6:	cmp	rbx, -3
0xc4ba:	ja	0xc0bb


0xc441:	sub	eax, 0x30
0xc444:	mov	rdx, r8
0xc447:	mov	rsi, r11
0xc44a:	cdqe	
0xc44c:	jmp	0xc41b


0xc2c3:	movzx	ebx, byte ptr [r11]
0xc2c7:	mov	rbp, r11
0xc2ca:	jmp	0xba3e


0xba98:	lea	edx, [rbx - 0x25]
0xba9b:	cmp	dl, 0x53
0xba9e:	ja	0xc0bb


0xc4c0:	mov	qword ptr [r12 + 0x40], rbx
0xc4c5:	lea	r11, [rsi + 2]
0xc4c9:	jmp	0xbd5d


0xc41b:	xor	ebx, ebx
0xc41d:	add	rdx, rax
0xc420:	movsx	eax, byte ptr [r11 + 1]
0xc425:	setb	bl
0xc428:	add	r11, 1
0xc42c:	mov	rcx, rdx
0xc42f:	test	rbx, rbx
0xc432:	lea	edi, [rax - 0x30]
0xc435:	je	0xc4a8


0xbaa4:	lea	rcx, [rip + 0x3291]
0xbaab:	movzx	edx, dl
0xbaae:	movsxd	rdx, dword ptr [rcx + rdx*4]
0xbab2:	add	rdx, rcx
0xbab5:	jmp	rdx


0x3d68:	mov	byte ptr [rip + 0x20d399], 1
0x3d6f:	pop	rbp
0x3d70:	ret	


0x4e7b:	mov	r13d, dword ptr [rip + 0x20c50a]
0x4e82:	mov	byte ptr [rip + 0x20c50f], 0
0x4e89:	test	r13d, 0x10000
0x4e90:	je	0x4eb8


0x4eb8:	mov	rdx, rbp
0x4ebb:	lea	rsi, [r12 + rbx]
0x4ebf:	mov	edi, 1
0x4ec4:	sub	rdx, rbx
0x4ec7:	call	0x1b20


0x4e92:	mov	rsi, r12
0x4e95:	mov	rdx, rbp
0x4e98:	cmp	byte ptr [rsi], 0
0x4e9b:	jne	0x4eb8


0x1b20:	jmp	qword ptr [rip + 0x20f2e2]


0x4e9d:	add	rsi, 1
0x4ea1:	sub	rdx, 1
0x4ea5:	je	0x4f00




0x4f00:	mov	edx, 1
0x4f05:	mov	rsi, rbp
0x4f08:	mov	edi, 1
0x4f0d:	call	0x1c10


0x4ea7:	test	dl, 0xf
0x4eaa:	jne	0x4e98


0x4eac:	mov	rdi, r12
0x4eaf:	call	0x1c90


0x4e98:	cmp	byte ptr [rsi], 0
0x4e9b:	jne	0x4eb8


0x4a47:	mov	ecx, ebp
0x4a49:	mov	edx, r12d
0x4a4c:	mov	rsi, r13
0x4a4f:	mov	edi, r14d
0x4a52:	call	0x5f00


0x4aa3:	mov	rdx, rbp
0x4aa6:	mov	rsi, r12
0x4aa9:	mov	edi, r13d
0x4aac:	call	0x1c80


0x1c80:	jmp	qword ptr [rip + 0x20f232]




0x4e0f:	mov	rsi, rbp
0x4e12:	mov	edi, 1
0x4e17:	call	0x1c00


0x1c00:	jmp	qword ptr [rip + 0x20f272]




0x5a97:	add	qword ptr [rip + 0x20b8ba], rax
0x5a9e:	cmp	qword ptr [rip + 0x20b923], rax
0x5aa5:	jne	0x5abf


0x5aa7:	pop	rbx
0x5aa8:	add	qword ptr [rip + 0x20b8c0], 1
0x5ab0:	mov	qword ptr [rip + 0x20b84d], 0
0x5abb:	pop	rbp
0x5abc:	pop	r12
0x5abe:	ret	


0x5abf:	mov	rsi, qword ptr [rip + 0x20b91a]
0x5ac6:	mov	edi, 4
0x5acb:	mov	rbx, rax
0x5ace:	call	0x89e0


0x5c1d:	mov	rbx, qword ptr [rip + 0x20b6dc]
0x5c24:	jmp	0x5b74


0x5d3c:	sub	qword ptr [rip + 0x20b3ec], 1
0x5d44:	mov	rdi, qword ptr [rip + 0x20b5c5]
0x5d4b:	mov	rdx, qword ptr [rip + 0x20b5b6]
0x5d52:	mov	rsi, qword ptr [rip + 0x20b66f]
0x5d59:	jne	0x5d1a


0x5d7c:	cmp	rbp, rbx
0x5d7f:	ja	0x5cb8


0xa5ae:	test	eax, eax
0xa5b0:	js	0xb418


0xb418:	xor	r15d, r15d
0xb41b:	jmp	0xa72f


0xa5b6:	mov	rsi, r14
0xa5b9:	mov	rdi, r12
0xa5bc:	call	0xb670


0xa72f:	mov	rdi, qword ptr [rbp - 0x38]
0xa733:	xor	rdi, qword ptr fs:[0x28]
0xa73c:	mov	rax, r15
0xa73f:	jne	0xb647


0xa745:	lea	rsp, [rbp - 0x28]
0xa749:	pop	rbx
0xa74a:	pop	r12
0xa74c:	pop	r13
0xa74e:	pop	r14
0xa750:	pop	r15
0xa752:	pop	rbp
0xa753:	ret	


0xb647:	call	0x1b90


0xa5c1:	test	eax, eax
0xa5c3:	js	0xb480


0xb480:	mov	rax, qword ptr [rbp - 0x408]
0xb487:	mov	rdi, qword ptr [rbp - 0x2b8]
0xb48e:	add	rax, 0x20
0xb492:	cmp	rdi, rax
0xb495:	je	0xb49c


0xa5c9:	mov	rax, qword ptr [rbp - 0x2b0]
0xa5d0:	mov	rdx, -1
0xa5d7:	add	rax, 7
0xa5db:	cmp	rax, 6
0xa5df:	cmovbe	rax, rdx
0xa5e3:	add	rax, qword ptr [rbp - 0x2a8]
0xa5ea:	jb	0xb018


0xb49c:	mov	rax, qword ptr [rbp - 0x410]
0xb4a3:	mov	rdi, qword ptr [rbp - 0x3a8]
0xb4aa:	add	rax, 0x10
0xb4ae:	cmp	rdi, rax
0xb4b1:	je	0xb4b8


0xb497:	call	0x1a60


0xb018:	call	0x1a80


0xa5f0:	mov	rdi, rax
0xa5f3:	xor	r8d, r8d
0xa5f6:	add	rdi, 6
0xa5fa:	setb	r8b
0xa5fe:	jb	0xb018


0xb4b8:	call	0x1a80


0xb4b3:	call	0x1a60


0xa604:	cmp	rdi, 0xf9f
0xa60b:	jbe	0xa758


0xa758:	add	rax, 0x24
0xa75c:	mov	qword ptr [rbp - 0x420], 0
0xa767:	and	rax, 0xfffffffffffffff0
0xa76b:	sub	rsp, rax
0xa76e:	lea	rax, [rsp + 0xf]
0xa773:	and	rax, 0xfffffffffffffff0
0xa777:	mov	qword ptr [rbp - 0x3d8], rax
0xa77e:	jmp	0xa645


0xa611:	cmp	rdi, -1
0xa615:	mov	qword ptr [rbp - 0x3c8], r8
0xa61c:	je	0xb018


0xa645:	xor	r12d, r12d
0xa648:	cmp	qword ptr [rbp - 0x3e8], 0
0xa650:	je	0xa65c


0xa622:	call	0x1d00


0xa65c:	mov	r13, qword ptr [rbp - 0x2b8]
0xa663:	lea	rax, [rbp - 0x3bc]
0xa66a:	mov	r15, qword ptr [rbp - 0x3e8]
0xa671:	mov	qword ptr [rbp - 0x400], 0
0xa67c:	mov	qword ptr [rbp - 0x3f0], rax
0xa683:	mov	rax, rbx
0xa686:	mov	rbx, r8
0xa689:	mov	rcx, qword ptr [r13]
0xa68d:	mov	r8, rax
0xa690:	cmp	rcx, r8
0xa693:	je	0xb001


0xa652:	mov	rax, qword ptr [rbp - 0x418]
0xa659:	mov	r12, qword ptr [rax]
0xa65c:	mov	r13, qword ptr [rbp - 0x2b8]
0xa663:	lea	rax, [rbp - 0x3bc]
0xa66a:	mov	r15, qword ptr [rbp - 0x3e8]
0xa671:	mov	qword ptr [rbp - 0x400], 0
0xa67c:	mov	qword ptr [rbp - 0x3f0], rax
0xa683:	mov	rax, rbx
0xa686:	mov	rbx, r8
0xa689:	mov	rcx, qword ptr [r13]
0xa68d:	mov	r8, rax
0xa690:	cmp	rcx, r8
0xa693:	je	0xb001


0xb001:	mov	r14, rbx
0xb004:	jmp	0xa803


0xa699:	sub	rcx, r8
0xa69c:	mov	rax, rbx
0xa69f:	add	rax, rcx
0xa6a2:	mov	r14, rax
0xa6a5:	jae	0xa788


0xa803:	mov	rax, qword ptr [rbp - 0x400]
0xa80a:	cmp	qword ptr [rbp - 0x2c0], rax
0xa811:	je	0xb4cb


0xa6ab:	cmp	r12, -1
0xa6af:	je	0xb180


0xa788:	cmp	r12, rax
0xa78b:	jae	0xa7f4


0xb4cb:	mov	rbx, r14
0xb4ce:	xor	eax, eax
0xb4d0:	add	rbx, 1
0xb4d4:	jb	0xb5e0


0xa817:	movzx	edx, byte ptr [r13 + 0x48]
0xa81c:	mov	rax, qword ptr [r13 + 0x50]
0xa820:	cmp	dl, 0x25
0xa823:	je	0xafb8


0xb180:	mov	r14, r12
0xb183:	jmp	0xa7f4


0xa6b5:	call	0x1a80


0xa78d:	test	r12, r12
0xa790:	jne	0xb0c0


0xa7f4:	lea	rdi, [r15 + rbx]
0xa7f8:	mov	rdx, rcx
0xa7fb:	mov	rsi, r8
0xa7fe:	call	0x1ce0


0xb5e0:	cmp	r12, -1
0xb5e4:	mov	eax, 1
0xb5e9:	je	0xb52c


0xb4da:	cmp	r12, rbx
0xb4dd:	jae	0xb52c


0xafb8:	cmp	rax, -1
0xafbc:	jne	0xb476


0xa829:	cmp	rax, -1
0xa82d:	je	0xb476


0xa796:	cmp	rax, 0xc
0xa79a:	ja	0xb0d2


0xb0c0:	js	0xa6b5


0x1ce0:	jmp	qword ptr [rip + 0x20f202]


0xb52c:	cmp	r15, qword ptr [rbp - 0x3e8]
0xb533:	mov	byte ptr [r15 + r14], 0
0xb538:	je	0xb551


0xb5ef:	test	r12, r12
0xb5f2:	je	0xa6b5


0xb4df:	test	r12, r12
0xb4e2:	jne	0xb619


0xafc2:	mov	rax, r14
0xafc5:	add	rax, 1
0xafc9:	mov	rbx, rax
0xafcc:	jae	0xb058


0xb476:	call	0x1a70


0xa833:	mov	r8, qword ptr [rbp - 0x3a8]
0xa83a:	shl	rax, 5
0xa83e:	add	rax, r8
0xa841:	cmp	dl, 0x6e
0xa844:	mov	edi, dword ptr [rax]
0xa846:	mov	dword ptr [rbp - 0x3d0], edi
0xa84c:	je	0xb030


0xa7a0:	mov	r12d, 0xc
0xa7a6:	cmp	r15, qword ptr [rbp - 0x3e8]
0xa7ad:	sete	dl
0xa7b0:	test	r15, r15
0xa7b3:	je	0xb0f8


0xb0d2:	cmp	rax, -1
0xb0d6:	je	0xa6b5


0xb0c6:	add	r12, r12
0xb0c9:	cmp	r12, rax
0xb0cc:	jae	0xa7a6




0xb551:	mov	rax, qword ptr [rbp - 0x420]
0xb558:	test	rax, rax
0xb55b:	je	0xb565


0xb53a:	cmp	r12, rbx
0xb53d:	jbe	0xb551


0xb5f8:	js	0xa6b5


0xb4e8:	cmp	rbx, 0xc
0xb4ec:	ja	0xb5fe


0xb619:	js	0xa6b5


0xafd2:	cmp	r12, -1
0xafd6:	jne	0xa6b5


0xb058:	cmp	r12, rax
0xb05b:	jae	0xafdf


0xb030:	mov	edx, edi
0xb032:	sub	edx, 0x12
0xb035:	cmp	edx, 4
0xb038:	ja	0xb476


0xa852:	mov	eax, dword ptr [r13 + 0x10]
0xa856:	mov	rdi, qword ptr [rbp - 0x3d8]
0xa85d:	test	al, 1
0xa85f:	mov	byte ptr [rdi], 0x25
0xa862:	lea	rbx, [rdi + 1]
0xa866:	je	0xa877


0xb0f8:	mov	rdi, r12
0xb0fb:	mov	qword ptr [rbp - 0x3e0], r8
0xb102:	mov	byte ptr [rbp - 0x3d0], dl
0xb108:	mov	qword ptr [rbp - 0x3c8], rcx
0xb10f:	call	0x1d00


0xa7b9:	test	dl, dl
0xa7bb:	jne	0xb0f8


0xb0dc:	cmp	r15, qword ptr [rbp - 0x3e8]
0xb0e3:	mov	r12, rax
0xb0e6:	sete	dl
0xb0e9:	test	r15, r15
0xb0ec:	jne	0xa7b9


0xa7a6:	cmp	r15, qword ptr [rbp - 0x3e8]
0xa7ad:	sete	dl
0xa7b0:	test	r15, r15
0xa7b3:	je	0xb0f8


0xb565:	mov	rax, qword ptr [rbp - 0x408]
0xb56c:	mov	rdi, qword ptr [rbp - 0x2b8]
0xb573:	add	rax, 0x20
0xb577:	cmp	rdi, rax
0xb57a:	je	0xb581


0xb55d:	mov	rdi, rax
0xb560:	call	0x1a60


0xb53f:	mov	rdi, r15
0xb542:	mov	rsi, rbx
0xb545:	call	0x1d50


0xb5fe:	test	rax, rax
0xb601:	jne	0xa6b5


0xb4f2:	mov	r12d, 0xc
0xb4f8:	cmp	r15, qword ptr [rbp - 0x3e8]
0xb4ff:	sete	r13b
0xb503:	test	r15, r15
0xb506:	je	0xb5ac


0xb61f:	add	r12, r12
0xb622:	cmp	r12, rbx
0xb625:	jae	0xb4f8


0xafdc:	mov	rbx, r12
0xafdf:	mov	byte ptr [r15 + r14], 0x25
0xafe4:	mov	r8, qword ptr [r13 + 8]
0xafe8:	add	r13, 0x58
0xafec:	mov	rcx, qword ptr [r13]
0xaff0:	add	qword ptr [rbp - 0x400], 1
0xaff8:	cmp	rcx, r8
0xaffb:	jne	0xa699


0xb05d:	test	r12, r12
0xb060:	jne	0xb430


0xafdf:	mov	byte ptr [r15 + r14], 0x25
0xafe4:	mov	r8, qword ptr [r13 + 8]
0xafe8:	add	r13, 0x58
0xafec:	mov	rcx, qword ptr [r13]
0xaff0:	add	qword ptr [rbp - 0x400], 1
0xaff8:	cmp	rcx, r8
0xaffb:	jne	0xa699


0xb03e:	lea	rdi, [rip + 0x3c53]
0xb045:	mov	rax, qword ptr [rax + 0x10]
0xb049:	movsxd	rdx, dword ptr [rdi + rdx*4]
0xb04d:	add	rdx, rdi
0xb050:	jmp	rdx


0xa877:	test	al, 2
0xa879:	je	0xa882


0xa868:	mov	rdi, qword ptr [rbp - 0x3d8]
0xa86f:	lea	rbx, [rdi + 2]
0xa873:	mov	byte ptr [rdi + 1], 0x27
0xa877:	test	al, 2
0xa879:	je	0xa882


0xa7c1:	mov	rsi, r12
0xa7c4:	mov	rdi, r15
0xa7c7:	mov	qword ptr [rbp - 0x3d0], r8
0xa7ce:	mov	qword ptr [rbp - 0x3c8], rcx
0xa7d5:	call	0x1d50


0xb581:	mov	rax, qword ptr [rbp - 0x410]
0xb588:	mov	rdi, qword ptr [rbp - 0x3a8]
0xb58f:	add	rax, 0x10
0xb593:	cmp	rdi, rax
0xb596:	je	0xb59d


0xb57c:	call	0x1a60


0xb607:	cmp	rbx, -1
0xb60b:	je	0xa6b5


0xb5ac:	mov	rdi, r12
0xb5af:	call	0x1d00


0xb50c:	test	r13b, r13b
0xb50f:	jne	0xb5ac


0xb62b:	jmp	0xb5fe


0xb4f8:	cmp	r15, qword ptr [rbp - 0x3e8]
0xb4ff:	sete	r13b
0xb503:	test	r15, r15
0xb506:	je	0xb5ac


0xb066:	cmp	rax, 0xc
0xb06a:	ja	0xb442


0xb430:	js	0xa6b5


0xa882:	test	al, 4
0xa884:	je	0xa88d


0xa87b:	mov	byte ptr [rbx], 0x2d
0xa87e:	add	rbx, 1
0xa882:	test	al, 4
0xa884:	je	0xa88d


0xb59d:	mov	rax, qword ptr [rbp - 0x418]
0xb5a4:	mov	qword ptr [rax], r14
0xb5a7:	jmp	0xa72f


0xb598:	call	0x1a60


0xb611:	mov	r12, rbx
0xb614:	jmp	0xb4f8


0xb515:	mov	rsi, r12
0xb518:	mov	rdi, r15
0xb51b:	call	0x1d50


0xb070:	mov	r12d, 0xc
0xb076:	cmp	r15, qword ptr [rbp - 0x3e8]
0xb07d:	sete	dl
0xb080:	test	r15, r15
0xb083:	je	0xb2f0


0xb442:	cmp	rax, -1
0xb446:	je	0xa6b5


0xb436:	add	r12, r12
0xb439:	cmp	r12, rax
0xb43c:	jae	0xb076


0xa88d:	test	al, 8
0xa88f:	je	0xa898


0xa886:	mov	byte ptr [rbx], 0x2b
0xa889:	add	rbx, 1
0xa88d:	test	al, 8
0xa88f:	je	0xa898


0xb2f0:	mov	rdi, r12
0xb2f3:	mov	byte ptr [rbp - 0x3c8], dl
0xb2f9:	call	0x1d00


0xb089:	test	dl, dl
0xb08b:	jne	0xb2f0


0xb44c:	mov	r12, rax
0xb44f:	jmp	0xb076


0xb076:	cmp	r15, qword ptr [rbp - 0x3e8]
0xb07d:	sete	dl
0xb080:	test	r15, r15
0xb083:	je	0xb2f0


0xa898:	test	al, 0x10
0xa89a:	je	0xa8a3


0xa891:	mov	byte ptr [rbx], 0x20
0xa894:	add	rbx, 1
0xa898:	test	al, 0x10
0xa89a:	je	0xa8a3


0xb091:	mov	rsi, r12
0xb094:	mov	rdi, r15
0xb097:	call	0x1d50


0xa8a3:	test	al, 0x40
0xa8a5:	je	0xa8ae


0xa89c:	mov	byte ptr [rbx], 0x23
0xa89f:	add	rbx, 1
0xa8a3:	test	al, 0x40
0xa8a5:	je	0xa8ae


0xa8ae:	test	al, 0x20
0xa8b0:	je	0xa8b9


0xa8a7:	mov	byte ptr [rbx], 0x49
0xa8aa:	add	rbx, 1
0xa8ae:	test	al, 0x20
0xa8b0:	je	0xa8b9


0xa8b9:	mov	rsi, qword ptr [r13 + 0x18]
0xa8bd:	mov	rdx, qword ptr [r13 + 0x20]
0xa8c1:	cmp	rsi, rdx
0xa8c4:	je	0xa8f6


0xa8b2:	mov	byte ptr [rbx], 0x30
0xa8b5:	add	rbx, 1
0xa8b9:	mov	rsi, qword ptr [r13 + 0x18]
0xa8bd:	mov	rdx, qword ptr [r13 + 0x20]
0xa8c1:	cmp	rsi, rdx
0xa8c4:	je	0xa8f6


0xa8f6:	mov	rsi, qword ptr [r13 + 0x30]
0xa8fa:	mov	rdx, qword ptr [r13 + 0x38]
0xa8fe:	cmp	rsi, rdx
0xa901:	je	0xa933


0xa8c6:	mov	rcx, rdx
0xa8c9:	mov	rdi, rbx
0xa8cc:	mov	qword ptr [rbp - 0x3e0], r8
0xa8d3:	sub	rcx, rsi
0xa8d6:	mov	rdx, rcx
0xa8d9:	mov	qword ptr [rbp - 0x3c8], rcx
0xa8e0:	call	0x1ce0


0xa933:	mov	edi, dword ptr [rbp - 0x3d0]
0xa939:	cmp	edi, 0x10
0xa93c:	ja	0xa96b


0xa903:	mov	rcx, rdx
0xa906:	mov	rdi, rbx
0xa909:	mov	qword ptr [rbp - 0x3e0], r8
0xa910:	sub	rcx, rsi
0xa913:	mov	rdx, rcx
0xa916:	mov	qword ptr [rbp - 0x3c8], rcx
0xa91d:	call	0x1ce0


0xa93e:	mov	eax, 1
0xa943:	mov	ecx, edi
0xa945:	shl	rax, cl
0xa948:	test	eax, 0x14180
0xa94d:	jne	0xa964


0xa96b:	movzx	eax, byte ptr [r13 + 0x48]
0xa970:	mov	byte ptr [rbx + 1], 0
0xa974:	mov	byte ptr [rbx], al
0xa976:	mov	rax, qword ptr [r13 + 0x28]
0xa97a:	cmp	rax, -1
0xa97e:	je	0xb0b0


0xa94f:	test	ah, 0x10
0xa952:	jne	0xb2b0


0xa964:	mov	byte ptr [rbx], 0x6c
0xa967:	add	rbx, 1
0xa96b:	movzx	eax, byte ptr [r13 + 0x48]
0xa970:	mov	byte ptr [rbx + 1], 0
0xa974:	mov	byte ptr [rbx], al
0xa976:	mov	rax, qword ptr [r13 + 0x28]
0xa97a:	cmp	rax, -1
0xa97e:	je	0xb0b0


0xb0b0:	mov	dword ptr [rbp - 0x3e0], 0
0xb0ba:	jmp	0xa9a7


0xa984:	shl	rax, 5
0xa988:	add	rax, r8
0xa98b:	cmp	dword ptr [rax], 5
0xa98e:	jne	0xb476


0xa958:	test	ah, 6
0xa95b:	je	0xa96b


0xb2b0:	mov	byte ptr [rbx], 0x4c
0xb2b3:	add	rbx, 1
0xb2b7:	jmp	0xa96b


0xa9a7:	mov	rax, qword ptr [r13 + 0x40]
0xa9ab:	cmp	rax, -1
0xa9af:	je	0xa9dc


0xa994:	mov	eax, dword ptr [rax + 0x10]
0xa997:	mov	dword ptr [rbp - 0x3e0], 1
0xa9a1:	mov	dword ptr [rbp - 0x3b8], eax
0xa9a7:	mov	rax, qword ptr [r13 + 0x40]
0xa9ab:	cmp	rax, -1
0xa9af:	je	0xa9dc


0xa95d:	mov	byte ptr [rbx], 0x6c
0xa960:	add	rbx, 1
0xa964:	mov	byte ptr [rbx], 0x6c
0xa967:	add	rbx, 1
0xa96b:	movzx	eax, byte ptr [r13 + 0x48]
0xa970:	mov	byte ptr [rbx + 1], 0
0xa974:	mov	byte ptr [rbx], al
0xa976:	mov	rax, qword ptr [r13 + 0x28]
0xa97a:	cmp	rax, -1
0xa97e:	je	0xb0b0


0xa9dc:	mov	rax, r14
0xa9df:	xor	edx, edx
0xa9e1:	add	rax, 2
0xa9e5:	jb	0xb64c


0xa9b1:	shl	rax, 5
0xa9b5:	add	r8, rax
0xa9b8:	cmp	dword ptr [r8], 5
0xa9bc:	jne	0xb476


0xb64c:	cmp	r12, -1
0xb650:	mov	edx, 1
0xb655:	je	0xaa3b


0xa9eb:	cmp	r12, rax
0xa9ee:	jae	0xaa3b


0xa9c2:	mov	eax, dword ptr [rbp - 0x3e0]
0xa9c8:	mov	edx, dword ptr [r8 + 0x10]
0xa9cc:	mov	dword ptr [rbp + rax*4 - 0x3b8], edx
0xa9d3:	lea	eax, [rax + 1]
0xa9d6:	mov	dword ptr [rbp - 0x3e0], eax
0xa9dc:	mov	rax, r14
0xa9df:	xor	edx, edx
0xa9e1:	add	rax, 2
0xa9e5:	jb	0xb64c


0xaa3b:	mov	byte ptr [r15 + r14], 0
0xaa40:	call	0x1a80


0xb65b:	test	r12, r12
0xb65e:	je	0xa6b5


0xa9f0:	test	r12, r12
0xa9f3:	jne	0xb218


0xb664:	jns	0xb230


0xa9f9:	cmp	rax, 0xc
0xa9fd:	ja	0xb230


0xb218:	js	0xa6b5


0xb66a:	jmp	0xa6b5


0xb230:	test	rdx, rdx
0xb233:	jne	0xa6b5


0xaa03:	mov	r12d, 0xc
0xaa09:	cmp	r15, qword ptr [rbp - 0x3e8]
0xaa10:	sete	dl
0xaa13:	test	r15, r15
0xaa16:	je	0xb260


0xb21e:	add	r12, r12
0xb221:	cmp	r12, rax
0xb224:	jae	0xaa09


0xb239:	cmp	rax, -1
0xb23d:	je	0xa6b5


0xb260:	mov	rdi, r12
0xb263:	mov	byte ptr [rbp - 0x3c8], dl
0xb269:	call	0x1d00


0xaa1c:	test	dl, dl
0xaa1e:	jne	0xb260


0xaa09:	cmp	r15, qword ptr [rbp - 0x3e8]
0xaa10:	sete	dl
0xaa13:	test	r15, r15
0xaa16:	je	0xb260


0xb243:	cmp	r15, qword ptr [rbp - 0x3e8]
0xb24a:	mov	r12, rax
0xb24d:	sete	dl
0xb250:	test	r15, r15
0xb253:	jne	0xaa1c


0xaa24:	mov	rsi, r12
0xaa27:	mov	rdi, r15
0xaa2a:	call	0x1d50


0xa0cb:	test	rax, rax
0xa0ce:	je	0xa112


0xa112:	mov	eax, 0xffffffff
0xa117:	jmp	0xa0e2


0xa0d0:	mov	rdx, qword ptr [rsp]
0xa0d4:	cmp	rdx, 0x7fffffff
0xa0db:	ja	0xa0f8


0xa0e2:	mov	rbx, qword ptr [rsp + 8]
0xa0e7:	xor	rbx, qword ptr fs:[0x28]
0xa0f0:	jne	0xa119


0xa0dd:	mov	qword ptr [rbx], rax
0xa0e0:	mov	eax, edx
0xa0e2:	mov	rbx, qword ptr [rsp + 8]
0xa0e7:	xor	rbx, qword ptr fs:[0x28]
0xa0f0:	jne	0xa119


0xa0f8:	mov	rdi, rax
0xa0fb:	call	0x1a60


0xa0f2:	add	rsp, 0x10
0xa0f6:	pop	rbx
0xa0f7:	ret	


0xa119:	call	0x1b90


0x9c26:	test	eax, eax
0x9c28:	js	0x9c48


0x9c48:	call	0x1a80


0x9c2a:	mov	rax, qword ptr [rsp]
0x9c2e:	mov	rdx, qword ptr [rsp + 8]
0x9c33:	xor	rdx, qword ptr fs:[0x28]
0x9c3c:	jne	0x9c5a


0x9c3e:	add	rsp, 0x18
0x9c42:	ret	


0x9c5a:	call	0x1b90


0x8cef:	test	rax, rax
0x8cf2:	je	0x8d57


0x8d57:	lea	rsi, [rip + 0x59ca]
0x8d5e:	mov	edx, 5
0x8d63:	xor	edi, edi
0x8d65:	call	0x1b60


0x8cf4:	test	rbp, rbp
0x8cf7:	mov	rbx, rax
0x8cfa:	je	0x8d30


0x8d30:	lea	rdx, [rip + 0x3935]
0x8d37:	mov	edi, r12d
0x8d3a:	mov	rcx, rax
0x8d3d:	mov	esi, r13d
0x8d40:	xor	eax, eax
0x8d42:	call	0x1d90


0x8cfc:	lea	r8, [rip + 0x3969]
0x8d03:	mov	edi, r12d
0x8d06:	mov	r9, rax
0x8d09:	mov	ecx, r14d
0x8d0c:	mov	rdx, rbp
0x8d0f:	mov	esi, r13d
0x8d12:	xor	eax, eax
0x8d14:	call	0x1aa0


0x1d90:	jmp	qword ptr [rip + 0x20f1aa]


0x1aa0:	jmp	qword ptr [rip + 0x20f322]






0xc591:	test	rbp, rbp
0xc594:	je	0xc5b6


0xc5b6:	add	rsp, 8
0xc5ba:	pop	rbx
0xc5bb:	pop	rbp
0xc5bc:	pop	r12
0xc5be:	pop	r13
0xc5c0:	pop	r14
0xc5c2:	pop	r15
0xc5c4:	ret	


0xc596:	xor	ebx, ebx
0xc598:	nop	dword ptr [rax + rax]
0xc5a0:	mov	rdx, r15
0xc5a3:	mov	rsi, r14
0xc5a6:	mov	edi, r13d
0xc5a9:	call	qword ptr [r12 + rbx*8]


0x8d19:	mov	rdi, rbx
0x8d1c:	pop	rbx
0x8d1d:	pop	rbp
0x8d1e:	pop	r12
0x8d20:	pop	r13
0x8d22:	pop	r14
0x8d24:	jmp	0x1a60


0x8d47:	mov	rdi, rbx
0x8d4a:	pop	rbx
0x8d4b:	pop	rbp
0x8d4c:	pop	r12
0x8d4e:	pop	r13
0x8d50:	pop	r14
0x8d52:	jmp	0x1a60


0xa922:	mov	rcx, qword ptr [rbp - 0x3c8]
0xa929:	mov	r8, qword ptr [rbp - 0x3e0]
0xa930:	add	rbx, rcx
0xa933:	mov	edi, dword ptr [rbp - 0x3d0]
0xa939:	cmp	edi, 0x10
0xa93c:	ja	0xa96b


0xa8e5:	mov	rcx, qword ptr [rbp - 0x3c8]
0xa8ec:	mov	r8, qword ptr [rbp - 0x3e0]
0xa8f3:	add	rbx, rcx
0xa8f6:	mov	rsi, qword ptr [r13 + 0x30]
0xa8fa:	mov	rdx, qword ptr [r13 + 0x38]
0xa8fe:	cmp	rsi, rdx
0xa901:	je	0xa933


0x4e1c:	test	eax, eax
0x4e1e:	mov	ebx, eax
0x4e20:	js	0x4e00


0x4e00:	call	0x1a80


0x4e22:	add	rsp, 8
0x4e26:	mov	eax, ebx
0x4e28:	pop	rbx
0x4e29:	pop	rbp
0x4e2a:	ret	


0x4ab1:	cmp	rax, -1
0x4ab5:	mov	rbx, rax
0x4ab8:	jne	0x4a88


0x4aba:	call	0x1a80


0x4a88:	cmp	rax, 0
0x4a8c:	jge	0x4b00


0x4a8e:	call	0x1a80


0x4b00:	jle	0x4b6a


0x4b6a:	test	rbx, rbx
0x4b6d:	jg	0x4b0c


0x4b02:	cmp	rax, rbp
0x4b05:	jae	0x4b6a


0x4b6f:	jmp	0x4ae4


0x4b0c:	cmp	byte ptr [rip + 0x20c815], 0
0x4b13:	je	0x4ae4


0x4b07:	call	0x4940


0x4ae4:	mov	qword ptr [rip + 0x20c64d], rbx
0x4aeb:	add	rsp, 8
0x4aef:	mov	rax, rbx
0x4af2:	pop	rbx
0x4af3:	pop	rbp
0x4af4:	pop	r12
0x4af6:	pop	r13
0x4af8:	ret	


0x4b15:	mov	r12, qword ptr [rip + 0x20c61c]
0x4b1c:	test	r12, r12
0x4b1f:	jle	0x4ae4


0x4b21:	cmp	r12, rbp
0x4b24:	jae	0x4ae4


0x4b26:	cmp	dword ptr [rip + 0x20c4ef], 1
0x4b2d:	je	0x4b5e


0x4b5e:	mov	byte ptr [rip + 0x20c7c3], 0
0x4b65:	jmp	0x4ae4


0x4b2f:	lea	rdx, [rip + 0x7f5a]
0x4b36:	lea	rsi, [rip + 0x7f93]
0x4b3d:	mov	rcx, r12
0x4b40:	xor	edi, edi
0x4b42:	mov	r8d, 5
0x4b48:	call	0x1dd0


0x1dd0:	jmp	qword ptr [rip + 0x20f18a]




0x4ecc:	test	rax, rax
0x4ecf:	jns	0x4e68


0x4ed1:	call	0x1a80


0x4e68:	je	0x4f58


0x4f58:	call	0x1a80


0x4e6e:	add	rbx, rax
0x4e71:	cmp	rbp, rbx
0x4e74:	jbe	0x4ee0


0x4ee0:	cmp	byte ptr [rip + 0x20c383], 0
0x4ee7:	je	0x4ef2


0x4ee9:	test	rbx, rbx
0x4eec:	jne	0x4f70


0x4f70:	mov	rsi, rbx
0x4f73:	mov	edi, 1
0x4f78:	call	0x45b0


0x4f7d:	add	rsp, 8
0x4f81:	mov	rax, rbx
0x4f84:	pop	rbx
0x4f85:	pop	rbp
0x4f86:	pop	r12
0x4f88:	pop	r13
0x4f8a:	ret	


0x46db:	cmp	eax, -1
0x46de:	setne	r12b
0x46e2:	jmp	0x45f8


0x4f12:	test	rax, rax
0x4f15:	js	0x4f40


0x4f40:	and	r13d, 0xfffeffff
0x4f47:	mov	dword ptr [rip + 0x20c43e], r13d
0x4f4e:	jmp	0x4eb8


0x4f17:	test	rbp, rbp
0x4f1a:	mov	byte ptr [rip + 0x20c477], 1
0x4f21:	mov	rax, rbp
0x4f24:	jns	0x4e6e


0x4f2a:	call	0x1a80


0x4719:	mov	rsi, rax
0x471c:	mov	qword ptr [rip + 0x20c8ed], rax
0x4723:	jmp	0x469c


0x423f:	mov	rdx, qword ptr [rsp + 8]
0x4244:	jmp	0x41d0


0x41d0:	mov	dword ptr [rip + 0x20d166], 0
0x41da:	lea	rax, [rsp + 0x100]
0x41e2:	lea	rcx, [rsp + 0x10]
0x41e7:	mov	esi, ebp
0x41e9:	mov	edi, ebx
0x41eb:	mov	dword ptr [rsp + 0x10], 0x18
0x41f3:	mov	dword ptr [rsp + 0x14], 0x30
0x41fb:	mov	qword ptr [rsp + 0x18], rax
0x4200:	lea	rax, [rsp + 0x30]
0x4205:	mov	qword ptr [rsp + 0x20], rax
0x420a:	call	0x8d90


0x488a:	jmp	0x47a4


0x47a4:	mov	dword ptr [rip + 0x20cb92], 0
0x47ae:	mov	r13, qword ptr [rip + 0x20cbc3]
0x47b5:	lea	rsi, [rip + 0x82ac]
0x47bc:	mov	rbx, qword ptr [rip + 0x20cb9d]
0x47c3:	xor	edi, edi
0x47c5:	mov	r12, qword ptr [rip + 0x20cba4]
0x47cc:	mov	rbp, qword ptr [rip + 0x20cb95]
0x47d3:	mov	edx, 5
0x47d8:	call	0x1b60


0x4bcb:	test	rax, rax
0x4bce:	jns	0x4bb0


0x4bd0:	add	rsp, 8
0x4bd4:	pop	rbx
0x4bd5:	pop	rbp
0x4bd6:	pop	r12
0x4bd8:	pop	r13
0x4bda:	ret	


0x4bb0:	je	0x4be0


0x4be0:	add	rsp, 8
0x4be4:	mov	rax, r12
0x4be7:	pop	rbx
0x4be8:	pop	rbp
0x4be9:	pop	r12
0x4beb:	pop	r13
0x4bed:	ret	


0x4bb2:	add	r12, rax
0x4bb5:	add	rbp, rax
0x4bb8:	sub	rbx, rax
0x4bbb:	je	0x4be0


0x95af:	test	rax, rax
0x95b2:	je	0x95b9


0x95b4:	add	rsp, 8
0x95b8:	ret	


0x4eb4:	test	eax, eax
0x4eb6:	je	0x4f00


0xa49d:	test	eax, eax
0xa49f:	jne	0xa480


0xa480:	mov	r14, qword ptr [rbx]
0xa483:	add	rbp, r12
0xa486:	add	rbx, 8
0xa48a:	test	r14, r14
0xa48d:	je	0xa4a1


0x4985:	mov	ebx, dword ptr [rip + 0x20c8e5]
0x498b:	mov	eax, dword ptr [rip + 0x20c8db]
0x4991:	test	eax, eax
0x4993:	je	0x499e


0x499e:	xor	edx, edx
0x49a0:	mov	rsi, rbp
0x49a3:	mov	edi, 2
0x49a8:	call	0x1a30


0x4995:	sub	eax, 1
0x4998:	mov	dword ptr [rip + 0x20c8ce], eax
0x499e:	xor	edx, edx
0x49a0:	mov	rsi, rbp
0x49a3:	mov	edi, 2
0x49a8:	call	0x1a30


0x49ad:	test	ebx, ebx
0x49af:	jne	0x49c8


0x49b1:	cmp	dword ptr [rip + 0x20c664], 1
0x49b8:	je	0x4960


0x49c8:	call	0x4890


0x4960:	mov	eax, dword ptr [rip + 0x20c90a]
0x4966:	test	eax, eax
0x4968:	jne	0x4974


0x49ba:	call	0x4770


0x6deb:	cmp	eax, -1
0x6dee:	je	0x6d99


0x6df0:	cmp	eax, 0x68
0x6df3:	mov	r9, qword ptr [rsp + 8]
0x6df8:	je	0x6e50


0x6e50:	xor	edi, edi
0x6e52:	call	r9


0x6dfa:	cmp	eax, 0x76
0x6dfd:	jne	0x6d99


0x6dff:	lea	rax, [rsp + 0x110]
0x6e07:	mov	rdi, qword ptr [rip + 0x20a2ba]
0x6e0e:	lea	r8, [rsp + 0x10]
0x6e13:	mov	rcx, r13
0x6e16:	mov	rdx, r12
0x6e19:	mov	rsi, rbp
0x6e1c:	mov	qword ptr [rsp + 0x18], rax
0x6e21:	lea	rax, [rsp + 0x30]
0x6e26:	mov	dword ptr [rsp + 0x10], 0x30
0x6e2e:	mov	dword ptr [rsp + 0x14], 0x30
0x6e36:	mov	qword ptr [rsp + 0x20], rax
0x6e3b:	call	0x91e0


0x6eff:	cmp	eax, -1
0x6f02:	je	0x6f68


0x6f68:	mov	rax, qword ptr [rsp + 0x18]
0x6f6d:	xor	rax, qword ptr fs:[0x28]
0x6f76:	mov	dword ptr [rip + 0x20a164], ebx
0x6f7c:	jne	0x6f96


0x6f04:	cmp	eax, 0x68
0x6f07:	je	0x6f90


0x6f7e:	add	rsp, 0xd0
0x6f85:	pop	rbx
0x6f86:	pop	rbp
0x6f87:	pop	r12
0x6f89:	pop	r13
0x6f8b:	pop	r14
0x6f8d:	ret	


0x6f96:	call	0x1b90


0x6f90:	xor	edi, edi
0x6f92:	call	rbp


0x6f0d:	cmp	eax, 0x76
0x6f10:	jne	0x6f60


0x6f12:	lea	rax, [rsp + 0x108]
0x6f1a:	mov	rdi, qword ptr [rip + 0x20a1a7]
0x6f21:	mov	r8, rsp
0x6f24:	mov	rcx, r14
0x6f27:	mov	rdx, r13
0x6f2a:	mov	rsi, r12
0x6f2d:	mov	qword ptr [rsp + 8], rax
0x6f32:	lea	rax, [rsp + 0x20]
0x6f37:	mov	dword ptr [rsp], 0x30
0x6f3e:	mov	dword ptr [rsp + 4], 0x30
0x6f46:	mov	qword ptr [rsp + 0x10], rax
0x6f4b:	call	0x91e0


0x6f60:	mov	edi, dword ptr [rip + 0x20a0ca]
0x6f66:	call	rbp


0x6fb3:	test	rax, rax
0x6fb6:	je	0x700d


0x700d:	mov	qword ptr [rip + 0x20a3ec], rbx
0x7014:	mov	qword ptr [rip + 0x20a0bd], rbx
0x701b:	pop	rbx
0x701c:	ret	


0x6fb8:	lea	r8, [rax + 1]
0x6fbc:	mov	rdx, r8
0x6fbf:	sub	rdx, rbx
0x6fc2:	cmp	rdx, 6
0x6fc6:	jle	0x700d


0x6fc8:	lea	rsi, [rax - 6]
0x6fcc:	lea	rdi, [rip + 0x726d]
0x6fd3:	mov	ecx, 7
0x6fd8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6fd8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6fda:	seta	dl
0x6fdd:	sbb	dl, 0
0x6fe0:	test	dl, dl
0x6fe2:	jne	0x700d


0x6fe4:	lea	rdi, [rip + 0x725d]
0x6feb:	mov	ecx, 3
0x6ff0:	mov	rsi, r8
0x6ff3:	mov	rbx, r8
0x6ff6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6ff6:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6ff8:	seta	dl
0x6ffb:	sbb	dl, 0
0x6ffe:	test	dl, dl
0x7000:	jne	0x700d


0x7002:	lea	rbx, [rax + 4]
0x7006:	mov	qword ptr [rip + 0x20a0b3], rbx
0x700d:	mov	qword ptr [rip + 0x20a3ec], rbx
0x7014:	mov	qword ptr [rip + 0x20a0bd], rbx
0x701b:	pop	rbx
0x701c:	ret	


0x703a:	call	0x1a70


0xa100:	call	0x1a80


0x882d:	mov	qword ptr [rip + 0x20884c], rbx
0x8834:	pop	rbx
0x8835:	mov	dword ptr [rip + 0x208839], 1
0x883f:	pop	rbp
0x8840:	pop	r12
0x8842:	ret	


0x8807:	mov	qword ptr [rip + 0x20887e], 0x100
0x8812:	mov	qword ptr [rip + 0x20887f], rbx
0x8819:	lea	rbx, [rip + 0x208870]
0x8820:	cmp	r12, rbx
0x8823:	je	0x8834


0x944d:	xor	eax, eax
0x944f:	pop	rbx
0x9450:	ret	


0x87ec:	cmp	rbx, rbp
0x87ef:	jne	0x87e0


0x87e0:	mov	rdi, qword ptr [rbx]
0x87e3:	add	rbx, 0x10
0x87e7:	call	0x1a60


0x8ddc:	lea	rsi, [rip + 0x5978]
0x8de3:	xor	edi, edi
0x8de5:	mov	edx, 5
0x8dea:	call	0x1b60


0x8ef1:	jmp	0x8ddc


0xaa2f:	test	rax, rax
0xaa32:	je	0xa6b5


0xaa38:	mov	r15, rax
0xaa3b:	mov	byte ptr [r15 + r14], 0
0xaa40:	call	0x1a80


0xb09c:	test	rax, rax
0xb09f:	je	0xb19b


0xb19b:	call	0x1a80


0xb0a5:	mov	r15, rax
0xb0a8:	jmp	0xafdf


0xb520:	test	rax, rax
0xb523:	je	0xb19b


0xb529:	mov	r15, rax
0xb52c:	cmp	r15, qword ptr [rbp - 0x3e8]
0xb533:	mov	byte ptr [r15 + r14], 0
0xb538:	je	0xb551


0xa7da:	test	rax, rax
0xa7dd:	mov	rcx, qword ptr [rbp - 0x3c8]
0xa7e4:	mov	r8, qword ptr [rbp - 0x3d0]
0xa7eb:	je	0xb19b


0xa7f1:	mov	r15, rax
0xa7f4:	lea	rdi, [r15 + rbx]
0xa7f8:	mov	rdx, rcx
0xa7fb:	mov	rsi, r8
0xa7fe:	call	0x1ce0


0xb54a:	test	rax, rax
0xb54d:	cmovne	r15, rax
0xb551:	mov	rax, qword ptr [rbp - 0x420]
0xb558:	test	rax, rax
0xb55b:	je	0xb565


0xc31e:	mov	rdx, qword ptr [r15 + 8]
0xc322:	mov	r11, qword ptr [rsp + 0x30]
0xc327:	mov	rcx, rax
0xc32a:	mov	r8, qword ptr [rsp + 0x38]
0xc32f:	mov	r10, qword ptr [rsp + 0x40]
0xc334:	mov	r9, qword ptr [rsp + 0x48]
0xc339:	test	rcx, rcx
0xc33c:	je	0xc557


0xc557:	mov	rcx, rdx
0xc55a:	jmp	0xc4fb


0xc342:	cmp	qword ptr [rsp + 8], rdx
0xc347:	mov	rax, qword ptr [r15]
0xc34a:	je	0xc510


0xc510:	mov	rsi, qword ptr [rsp + 8]
0xc515:	shl	rax, 5
0xc519:	mov	rdi, rcx
0xc51c:	mov	rdx, rax
0xc51f:	mov	qword ptr [rsp + 0x48], r9
0xc524:	mov	qword ptr [rsp + 0x40], r10
0xc529:	mov	qword ptr [rsp + 0x38], r8
0xc52e:	mov	qword ptr [rsp + 0x30], r11
0xc533:	call	0x1ce0


0xc350:	mov	qword ptr [r15 + 8], rcx
0xc354:	jmp	0xbd6d


0xbd6d:	mov	rdx, rax
0xbd70:	shl	rdx, 5
0xbd74:	add	rdx, rcx
0xbd77:	cmp	rax, rbx
0xbd7a:	ja	0xbd96


0xc538:	mov	r9, qword ptr [rsp + 0x48]
0xc53d:	mov	rcx, rax
0xc540:	mov	r10, qword ptr [rsp + 0x40]
0xc545:	mov	rax, qword ptr [r15]
0xc548:	mov	r8, qword ptr [rsp + 0x38]
0xc54d:	mov	r11, qword ptr [rsp + 0x30]
0xc552:	jmp	0xc350


0xbc86:	mov	rdx, qword ptr [r15 + 8]
0xbc8a:	mov	r8, qword ptr [rsp + 0x30]
0xbc8f:	mov	rcx, rax
0xbc92:	mov	r10, qword ptr [rsp + 0x38]
0xbc97:	mov	r9, qword ptr [rsp + 0x40]
0xbc9c:	test	rcx, rcx
0xbc9f:	je	0xc557


0xbca5:	cmp	qword ptr [rsp + 8], rdx
0xbcaa:	mov	rax, qword ptr [r15]
0xbcad:	je	0xc46b


0xc46b:	mov	rsi, qword ptr [rsp + 8]
0xc470:	shl	rax, 5
0xc474:	mov	rdi, rcx
0xc477:	mov	rdx, rax
0xc47a:	mov	qword ptr [rsp + 0x40], r9
0xc47f:	mov	qword ptr [rsp + 0x38], r10
0xc484:	mov	qword ptr [rsp + 0x30], r8
0xc489:	call	0x1ce0


0xbcb3:	mov	qword ptr [r15 + 8], rcx
0xbcb7:	mov	rdx, rax
0xbcba:	shl	rdx, 5
0xbcbe:	add	rdx, rcx
0xbcc1:	cmp	rax, rbx
0xbcc4:	ja	0xbce6


0xc48e:	mov	r9, qword ptr [rsp + 0x40]
0xc493:	mov	rcx, rax
0xc496:	mov	r10, qword ptr [rsp + 0x38]
0xc49b:	mov	rax, qword ptr [r15]
0xc49e:	mov	r8, qword ptr [rsp + 0x30]
0xc4a3:	jmp	0xbcb3


0x9436:	test	rax, rax
0x9439:	jne	0x9440


0x943b:	test	rbx, rbx
0x943e:	jne	0x9451


0x9440:	pop	rbx
0x9441:	ret	


0x9451:	call	0x9610


0x9e35:	mov	ebx, eax
0x9e37:	jmp	0x9dd0


0x9dd0:	mov	rcx, qword ptr [rsp + 0x18]
0x9dd5:	xor	rcx, qword ptr fs:[0x28]
0x9dde:	mov	eax, ebx
0x9de0:	jne	0x9f3d


0x9de6:	add	rsp, 0x50
0x9dea:	pop	rbx
0x9deb:	pop	rbp
0x9dec:	pop	r12
0x9dee:	ret	


0x9f3d:	call	0x1b90


0x4fa1:	and	ah, 0xbf
0x4fa4:	mov	esi, 4
0x4fa9:	mov	edi, 1
0x4fae:	mov	edx, eax
0x4fb0:	xor	eax, eax
0x4fb2:	call	0x9cf0


0x4fb7:	test	eax, eax
0x4fb9:	je	0x4fc4


0x4fc4:	xor	esi, esi
0x4fc6:	mov	edi, 1
0x4fcb:	mov	byte ptr [rip + 0x20c296], 1
0x4fd2:	call	0x45b0


0x4fbb:	cmp	dword ptr [rip + 0x20c05a], 1
0x4fc2:	jne	0x4fe6


0x4fe6:	mov	rdx, qword ptr [rip + 0x20c3f3]
0x4fed:	xor	edi, edi
0x4fef:	mov	esi, 3
0x4ff4:	call	0x8ae0


0x4fd7:	or	dword ptr [rip + 0x20c3ab], 0x8000
0x4fe1:	jmp	0x4e56


0x43fe:	or	ebx, eax
0x4400:	test	eax, eax
0x4402:	mov	r12d, eax
0x4405:	js	0x4458


0x4458:	mov	rsi, r13
0x445b:	mov	edi, 4
0x4460:	call	0x89e0


0x4407:	cmp	eax, ebx
0x4409:	je	0x43ca


0x440b:	test	ebx, 0x10000
0x4411:	jne	0x442a


0x4413:	xor	eax, eax
0x4415:	mov	edx, ebx
0x4417:	mov	esi, 4
0x441c:	mov	edi, ebp
0x441e:	call	0x9cf0


0x442a:	mov	rdx, rsp
0x442d:	mov	esi, ebp
0x442f:	mov	edi, 1
0x4434:	call	0x1d30


0x1d30:	jmp	qword ptr [rip + 0x20f1da]




0x4423:	add	eax, 1
0x4426:	jne	0x43ca


0x4428:	jmp	0x4458


0x9dc9:	mov	ebx, eax
0x9dcb:	nop	dword ptr [rax + rax]
0x9dd0:	mov	rcx, qword ptr [rsp + 0x18]
0x9dd5:	xor	rcx, qword ptr fs:[0x28]
0x9dde:	mov	eax, ebx
0x9de0:	jne	0x9f3d


0x9e8c:	mov	ebx, eax
0x9e8e:	jmp	0x9dd0


0x9d75:	test	eax, eax
0x9d77:	mov	ebx, eax
0x9d79:	js	0x9f08


0x9f08:	call	0x1a80


0x9d7f:	mov	dword ptr [rip + 0x2077cf], 1
0x9d89:	jmp	0x9dd0


0x9e9c:	test	eax, eax
0x9e9e:	mov	ebx, eax
0x9ea0:	js	0x9dd0


0x9ea6:	cmp	dword ptr [rip + 0x2076ab], -1
0x9ead:	jne	0x9dd0


0x9eb3:	xor	eax, eax
0x9eb5:	mov	esi, 1
0x9eba:	mov	edi, ebx
0x9ebc:	call	0x1b00


0x9ec1:	test	eax, eax
0x9ec3:	js	0x9ee1


0x9ee1:	call	0x1a80


0x9ec5:	or	eax, 1
0x9ec8:	mov	esi, 2
0x9ecd:	mov	edi, ebx
0x9ecf:	mov	edx, eax
0x9ed1:	xor	eax, eax
0x9ed3:	call	0x1b00


0x9ed8:	cmp	eax, -1
0x9edb:	jne	0x9dd0


0x9f53:	mov	ebx, eax
0x9f55:	jmp	0x9dd0


0x9f7e:	test	eax, eax
0x9f80:	je	0x9f8a


0x9f82:	test	dword ptr [rbx], 0x100
0x9f88:	jne	0x9f98


0x9f98:	mov	rdi, rbx
0x9f9b:	mov	edx, 1
0x9fa0:	xor	esi, esi
0x9fa2:	call	0x9fb0


0x6c7c:	test	rax, rax
0x6c7f:	mov	rbx, rax
0x6c82:	jne	0x6b5c


0x6c88:	lea	rdi, [rip + 0x7513]
0x6c8f:	call	0x1a20


0x6c94:	test	rax, rax
0x6c97:	mov	rbx, rax
0x6c9a:	jne	0x6b5c


0x6ca0:	lea	rdi, [rip + 0x5b95]
0x6ca7:	call	0x1a20


0x6cac:	test	rax, rax
0x6caf:	je	0x6cfa


0x6cfa:	mov	qword ptr [r12], 0x400
0x6d02:	xor	eax, eax
0x6d04:	mov	dword ptr [r13], 0
0x6d0c:	jmp	0x6ba5


0x6cb1:	mov	qword ptr [r12], 0x200
0x6cb9:	xor	eax, eax
0x6cbb:	mov	dword ptr [r13], 0
0x6cc3:	jmp	0x6ba5


0x6ba5:	mov	rcx, qword ptr [rsp + 8]
0x6baa:	xor	rcx, qword ptr fs:[0x28]
0x6bb3:	jne	0x6d11


0x6bb9:	add	rsp, 0x18
0x6bbd:	pop	rbx
0x6bbe:	pop	rbp
0x6bbf:	pop	r12
0x6bc1:	pop	r13
0x6bc3:	ret	


0x6d11:	call	0x1b90


0x1ee6:	lea	rdi, [rip + 0x20f393]
0x1eed:	mov	rbx, rax
0x1ef0:	call	0x1cd0


0x1cd0:	jmp	qword ptr [rip + 0x20f20a]




0x44e6:	mov	rsi, rbp
0x44e9:	mov	edx, r12d
0x44ec:	mov	edi, ebx
0x44ee:	mov	r14d, eax
0x44f1:	call	0x1c10


0x44f6:	test	rax, rax
0x44f9:	mov	rbp, rax
0x44fc:	js	0x4538


0x4538:	mov	rcx, qword ptr [rsp + 0x68]
0x453d:	xor	rcx, qword ptr fs:[0x28]
0x4546:	mov	rax, rbp
0x4549:	jne	0x459e


0x44fe:	test	r14d, r14d
0x4501:	jne	0x4538


0x454b:	add	rsp, 0x70
0x454f:	pop	rbx
0x4550:	pop	rbp
0x4551:	pop	r12
0x4553:	pop	r13
0x4555:	pop	r14
0x4557:	ret	


0x459e:	call	0x1b90


0x4503:	lea	rdx, [rsp + 0x30]
0x4508:	xor	eax, eax
0x450a:	mov	esi, 0x80306d02
0x450f:	mov	edi, ebx
0x4511:	call	0x1c50


0x4516:	test	eax, eax
0x4518:	jne	0x4538


0x451a:	mov	rax, qword ptr [rsp + 0x38]
0x451f:	cmp	qword ptr [rsp + 8], rax
0x4524:	jne	0x4538


0x4526:	mov	rax, qword ptr [rsp + 0x58]
0x452b:	cmp	qword ptr [rsp + 0x28], rax
0x4530:	je	0x4558


0x4558:	cmp	dword ptr [rip + 0x20cabd], 1
0x455f:	je	0x458d


0x458d:	call	0x1a80


0x4561:	mov	rbx, qword ptr [rsp + 0x30]
0x4566:	lea	rsi, [rip + 0x8483]
0x456d:	mov	edx, 5
0x4572:	xor	edi, edi
0x4574:	call	0x1b60


0x489d:	test	eax, eax
0x489f:	js	0x48b6


0x48b6:	mov	rsi, qword ptr [rip + 0x20cb2b]
0x48bd:	mov	edi, 4
0x48c2:	call	0x89e0


0x48a1:	mov	edi, 1
0x48a6:	call	0x1c60


0x48ab:	test	eax, eax
0x48ad:	js	0x48f9


0x48f9:	mov	rsi, qword ptr [rip + 0x20cae0]
0x4900:	mov	edi, 4
0x4905:	call	0x89e0


0x48af:	add	rsp, 8
0x48b3:	pop	rbx
0x48b4:	pop	rbp
0x48b5:	ret	


0x49cd:	cmp	dword ptr [rip + 0x20c648], 1
0x49d4:	je	0x49db


0x49db:	mov	edi, ebx
0x49dd:	call	0x1a50


0x49d6:	call	0x4770


0x1a50:	jmp	qword ptr [rip + 0x20f34a]




0x4c09:	cmp	dword ptr [rip + 0x20c40c], 1
0x4c10:	je	0x4c17


0x4c17:	add	rsp, 8
0x4c1b:	jmp	0x4940


0x4c12:	call	0x4770


0x5662:	mov	r8, r12
0x5665:	nop	dword ptr [rax]
0x5668:	mov	rcx, r8
0x566b:	mov	rdx, r14
0x566e:	jmp	0x567d


0x567d:	movzx	esi, byte ptr [rcx]
0x5680:	movzx	edi, byte ptr [rdx]
0x5683:	test	sil, sil
0x5686:	jne	0x5670


0x5688:	cmp	dil, 0x2c
0x568c:	je	0x5693


0x5670:	add	rdx, 1
0x5674:	add	rcx, 1
0x5678:	cmp	sil, dil
0x567b:	jne	0x569b


0x5693:	mov	edx, dword ptr [r8 + 0xc]
0x5697:	test	edx, edx
0x5699:	jne	0x56a7


0x568e:	test	dil, dil
0x5691:	jne	0x569b


0x569b:	cmp	byte ptr [r8], 0
0x569f:	je	0x56c7


0x56a7:	or	ebx, edx
0x56a9:	test	bpl, bpl
0x56ac:	cmove	edx, ebx
0x56af:	test	rax, rax
0x56b2:	je	0x56bc


0x56c7:	test	rax, rax
0x56ca:	je	0x5715


0x56a1:	add	r8, 0x10
0x56a5:	jmp	0x5668


0x56bc:	pop	rbx
0x56bd:	mov	eax, edx
0x56bf:	pop	rbp
0x56c0:	pop	r12
0x56c2:	pop	r13
0x56c4:	pop	r14
0x56c6:	ret	


0x56b4:	lea	r14, [rax + 1]
0x56b8:	mov	ebx, edx
0x56ba:	jmp	0x5655


0x5715:	xor	eax, eax
0x5717:	or	rcx, 0xffffffffffffffff
0x571b:	mov	rdi, r14
0x571e:	repne scasb	al, byte ptr [rdi]


0x56cc:	sub	rax, r14
0x56cf:	mov	rcx, rax
0x56d2:	mov	rdx, r14
0x56d5:	mov	esi, 8
0x56da:	xor	edi, edi
0x56dc:	call	0x8950


0x5668:	mov	rcx, r8
0x566b:	mov	rdx, r14
0x566e:	jmp	0x567d


0x5655:	mov	esi, 0x2c
0x565a:	mov	rdi, r14
0x565d:	call	0x1bd0


0x571e:	repne scasb	al, byte ptr [rdi]


0x5720:	mov	rax, rcx
0x5723:	not	rax
0x5726:	sub	rax, 1
0x572a:	jmp	0x56cf


0x56cf:	mov	rcx, rax
0x56d2:	mov	rdx, r14
0x56d5:	mov	esi, 8
0x56da:	xor	edi, edi
0x56dc:	call	0x8950


0x5dbc:	mov	ebx, dword ptr [rbp]
0x5dbf:	mov	rdi, rbp
0x5dc2:	mov	r12, rax
0x5dc5:	call	0x9c70


0x5f1a:	cmp	ebp, eax
0x5f1c:	mov	ebx, eax
0x5f1e:	je	0x5f49


0x5f49:	add	rsp, 8
0x5f4d:	mov	eax, ebx
0x5f4f:	pop	rbx
0x5f50:	pop	rbp
0x5f51:	pop	r12
0x5f53:	pop	r13
0x5f55:	ret	


0x5f20:	test	eax, eax
0x5f22:	js	0x5f49


0x5f24:	mov	esi, ebp
0x5f26:	mov	edi, eax
0x5f28:	call	0x1bc0


0x1bc0:	jmp	qword ptr [rip + 0x20f292]




0x4a57:	test	eax, eax
0x4a59:	mov	ebx, eax
0x4a5b:	js	0x4a38


0x4a38:	call	0x1a80


0x4a5d:	mov	eax, ebx
0x4a5f:	pop	rbx
0x4a60:	pop	rbp
0x4a61:	pop	r12
0x4a63:	pop	r13
0x4a65:	pop	r14
0x4a67:	ret	


0x5f85:	test	eax, eax
0x5f87:	je	0x5f91


0x5f91:	mov	rcx, qword ptr [rsp + 8]
0x5f96:	movabs	rdx, 0x112e0be826d694b3
0x5fa0:	mov	rax, rcx
0x5fa3:	imul	rdx
0x5fa6:	mov	rax, rcx
0x5fa9:	sar	rax, 0x3f
0x5fad:	sar	rdx, 0x1a
0x5fb1:	sub	rdx, rax
0x5fb4:	mov	rax, qword ptr [rsp]
0x5fb8:	add	rax, rdx
0x5fbb:	imul	rdx, rdx, 0x3b9aca00
0x5fc2:	imul	rax, rax, 0x3b9aca00
0x5fc9:	sub	rcx, rdx
0x5fcc:	add	rax, rcx
0x5fcf:	mov	rsi, qword ptr [rsp + 0x18]
0x5fd4:	xor	rsi, qword ptr fs:[0x28]
0x5fdd:	jne	0x5fe5


0x5f89:	mov	rdi, rbx
0x5f8c:	call	0x5ff0


0x5fdf:	add	rsp, 0x20
0x5fe3:	pop	rbx
0x5fe4:	ret	


0x5fe5:	call	0x1b90


0x4035:	mov	r14, rax
0x4038:	jmp	0x3de3


0x601e:	mov	rcx, qword ptr [rsp + 0x18]
0x6023:	xor	rcx, qword ptr fs:[0x28]
0x602c:	mov	rax, qword ptr [rsp]
0x6030:	mov	rdx, qword ptr [rsp + 8]
0x6035:	jne	0x603c


0x6037:	add	rsp, 0x28
0x603b:	ret	


0x603c:	call	0x1b90


0x617e:	mov	r14, qword ptr [rax]
0x6181:	mov	r13, rax
0x6184:	mov	rdi, r14
0x6187:	call	0x1b80


0x71a1:	cmp	r15d, 0xa
0x71a5:	mov	qword ptr [rsp + 0x58], rax
0x71aa:	ja	0x835f


0x71b0:	lea	rcx, [rip + 0x7109]
0x71b7:	mov	edx, r15d
0x71ba:	movsxd	rax, dword ptr [rcx + rdx*4]
0x71be:	add	rax, rcx
0x71c1:	jmp	rax


0x835f:	call	0x1a70


0x4a3d:	cmp	dword ptr [rax], 4
0x4a40:	jne	0x4a5d


0x4592:	or	rbp, 0xffffffffffffffff
0x4596:	mov	dword ptr [rax], 0
0x459c:	jmp	0x4538


0x9ee6:	mov	r12d, dword ptr [rax]
0x9ee9:	mov	rbp, rax
0x9eec:	mov	edi, ebx
0x9eee:	call	0x1c60


0x9ef3:	mov	ebx, 0xffffffff
0x9ef8:	mov	dword ptr [rbp], r12d
0x9efc:	jmp	0x9dd0


0x9f0d:	cmp	dword ptr [rax], 0x16
0x9f10:	jne	0x9d7f


0x9f16:	xor	esi, esi
0x9f18:	xor	eax, eax
0x9f1a:	mov	edx, r12d
0x9f1d:	mov	edi, ebp
0x9f1f:	call	0x1b00


0x9f24:	test	eax, eax
0x9f26:	mov	ebx, eax
0x9f28:	js	0x9dd0


0x9f2e:	mov	dword ptr [rip + 0x207620], 0xffffffff
0x9f38:	jmp	0x9eb3


0xb1a0:	mov	qword ptr [rbp - 0x3c8], rax
0xb1a7:	nop	word ptr [rax + rax]
0xb1b0:	mov	rdi, r15
0xb1b3:	call	0x1a60


0xb1b8:	jmp	0xa6d3


0xa6d3:	mov	rax, qword ptr [rbp - 0x420]
0xa6da:	test	rax, rax
0xa6dd:	je	0xa6e7


0xa6e7:	mov	rax, qword ptr [rbp - 0x408]
0xa6ee:	mov	rdi, qword ptr [rbp - 0x2b8]
0xa6f5:	add	rax, 0x20
0xa6f9:	cmp	rdi, rax
0xa6fc:	je	0xa703


0xa6df:	mov	rdi, rax
0xa6e2:	call	0x1a60


0xa703:	mov	rax, qword ptr [rbp - 0x410]
0xa70a:	mov	rdi, qword ptr [rbp - 0x3a8]
0xa711:	add	rax, 0x10
0xa715:	cmp	rdi, rax
0xa718:	je	0xa71f


0xa6fe:	call	0x1a60


0xa71f:	mov	rax, qword ptr [rbp - 0x3c8]
0xa726:	xor	r15d, r15d
0xa729:	mov	dword ptr [rax], 0xc
0xa72f:	mov	rdi, qword ptr [rbp - 0x38]
0xa733:	xor	rdi, qword ptr fs:[0x28]
0xa73c:	mov	rax, r15
0xa73f:	jne	0xb647


0xa71a:	call	0x1a60


0xaa45:	mov	qword ptr [rbp - 0x3c8], rax
0xaa4c:	mov	eax, dword ptr [rax]
0xaa4e:	mov	qword ptr [rbp - 0x3f8], rbx
0xaa55:	mov	dword ptr [rbp - 0x424], eax
0xaa5b:	nop	dword ptr [rax + rax]
0xaa60:	mov	rax, qword ptr [rbp - 0x3c8]
0xaa67:	mov	rbx, r12
0xaa6a:	mov	r10d, 0x7fffffff
0xaa70:	sub	rbx, r14
0xaa73:	mov	dword ptr [rbp - 0x3bc], 0xffffffff
0xaa7d:	cmp	rbx, 0x7fffffff
0xaa84:	mov	dword ptr [rax], 0
0xaa8a:	mov	eax, dword ptr [rbp - 0x3d0]
0xaa90:	cmovbe	r10, rbx
0xaa94:	cmp	eax, 0x11
0xaa97:	ja	0xb476


0xaa9d:	lea	rsi, [rip + 0x41ac]
0xaaa4:	movsxd	rax, dword ptr [rsi + rax*4]
0xaaa8:	add	rax, rsi
0xaaab:	jmp	rax


0xa105:	mov	dword ptr [rax], 0x4b
0xa10b:	mov	eax, 0xffffffff
0xa110:	jmp	0xa0e2


0x4f2f:	cmp	dword ptr [rax], 4
0x4f32:	je	0x4e71


0x4e71:	cmp	rbp, rbx
0x4e74:	jbe	0x4ee0


0x4f38:	jmp	0x4ee0


0x4f5d:	mov	dword ptr [rax], 0x1c
0x4f63:	jmp	0x4ee0


0x4ed6:	cmp	dword ptr [rax], 4
0x4ed9:	je	0x4e71


0x4a93:	mov	edx, dword ptr [rax]
0x4a95:	cmp	edx, 4
0x4a98:	jne	0x4b6a


0x4abf:	mov	edx, dword ptr [rax]
0x4ac1:	cmp	edx, 0x16
0x4ac4:	jne	0x4a95


0x4ac6:	mov	rdx, qword ptr [rip + 0x20c66b]
0x4acd:	test	rdx, rdx
0x4ad0:	jle	0x4ae4


0x4a95:	cmp	edx, 4
0x4a98:	jne	0x4b6a


0x4ad2:	cmp	rdx, rbp
0x4ad5:	jae	0x4ae4


0x4ad7:	test	byte ptr [rip + 0x20c8ab], 0x40
0x4ade:	jne	0x4b78


0x4b78:	mov	dword ptr [rax], 0
0x4b7e:	xor	ebx, ebx
0x4b80:	jmp	0x4ae4


0x4e05:	cmp	dword ptr [rax], 4
0x4e08:	jne	0x4e22


0x9c4d:	cmp	dword ptr [rax], 0xc
0x9c50:	je	0x9c5f


0x9c5f:	call	0x9610


0x9c52:	xor	eax, eax
0x9c54:	jmp	0x9c2e


0x9c2e:	mov	rdx, qword ptr [rsp + 8]
0x9c33:	xor	rdx, qword ptr fs:[0x28]
0x9c3c:	jne	0x9c5a


0xa6ba:	mov	qword ptr [rbp - 0x3c8], rax
0xa6c1:	cmp	r15, qword ptr [rbp - 0x3e8]
0xa6c8:	je	0xa6d3


0xa6ca:	test	r15, r15
0xa6cd:	jne	0xb1b0


0xb1b0:	mov	rdi, r15
0xb1b3:	call	0x1a60


0xb4bd:	xor	r15d, r15d
0xb4c0:	mov	dword ptr [rax], 0x16
0xb4c6:	jmp	0xa72f


0xb01d:	mov	qword ptr [rbp - 0x3c8], rax
0xb024:	jmp	0xa6e7


0xc381:	mov	dword ptr [rax], 0xc
0xc387:	mov	eax, 0xffffffff
0xc38c:	jmp	0xb912


0xb912:	add	rsp, 0x58
0xb916:	pop	rbx
0xb917:	pop	rbp
0xb918:	pop	r12
0xb91a:	pop	r13
0xb91c:	pop	r14
0xb91e:	pop	r15
0xb920:	ret	


0xc0e3:	mov	dword ptr [rax], 0x16
0xc0e9:	mov	eax, 0xffffffff
0xc0ee:	jmp	0xb912


0x4640:	mov	dword ptr [rax], 0x1d
0x4646:	jmp	0x45f8


0x9698:	mov	dword ptr [rax], 0
0x969e:	mov	r12, rax
0x96a1:	movzx	ebx, byte ptr [rbp]
0x96a5:	call	0x1e80


0x1e80:	jmp	qword ptr [rip + 0x20f132]




0x576b:	xor	edx, edx
0x576d:	mov	r15, rax
0x5770:	mov	dword ptr [rax], 0
0x5776:	movabs	rax, 0x7fffffffffffffff
0x5780:	div	r12
0x5783:	cmp	rax, r14
0x5786:	jb	0x57f3


0x57f3:	mov	rdi, qword ptr [rsp]
0x57f7:	xor	edx, edx
0x57f9:	mov	ecx, 2
0x57fe:	mov	esi, ebx
0x5800:	call	0x44b0


0x5788:	mov	rax, r14
0x578b:	mov	rdi, qword ptr [rsp]
0x578f:	mov	ecx, 1
0x5794:	imul	rax, r12
0x5798:	mov	esi, ebx
0x579a:	add	rbp, rax
0x579d:	mov	rdx, rbp
0x57a0:	call	0x44b0


0x57a5:	test	rax, rax
0x57a8:	js	0x58c5


0x58c5:	mov	eax, dword ptr [r15]
0x58c8:	mov	rdi, qword ptr [rsp]
0x58cc:	xor	edx, edx
0x58ce:	mov	ecx, 2
0x58d3:	mov	esi, ebx
0x58d5:	mov	dword ptr [rsp + 0xc], eax
0x58d9:	call	0x44b0


0x57ae:	test	ebx, ebx
0x57b0:	je	0x5922


0x5922:	lea	rdx, [rsp + 0x10]
0x5927:	xor	esi, esi
0x5929:	mov	edi, 1
0x592e:	call	0x1d30


0x57e1:	add	rsp, 0xb8
0x57e8:	pop	rbx
0x57e9:	pop	rbp
0x57ea:	pop	r12
0x57ec:	pop	r13
0x57ee:	pop	r14
0x57f0:	pop	r15
0x57f2:	ret	


0x5a40:	call	0x1b90


0x58de:	test	rax, rax
0x58e1:	js	0x5816


0x5816:	test	ebx, ebx
0x5818:	jne	0x5899


0x58e7:	cmp	dword ptr [rsp + 0xc], 0
0x58ec:	jne	0x58f6


0x581a:	cmp	qword ptr [rip + 0x20baf6], 0
0x5822:	je	0x5981


0x5899:	call	0x4da0


0x58ee:	mov	dword ptr [rsp + 0xc], 0x4b
0x58f6:	xor	edi, edi
0x58f8:	test	ebx, ebx
0x58fa:	mov	rdx, qword ptr [rsp]
0x58fe:	mov	esi, 3
0x5903:	jne	0x5a09


0x58f6:	xor	edi, edi
0x58f8:	test	ebx, ebx
0x58fa:	mov	rdx, qword ptr [rsp]
0x58fe:	mov	esi, 3
0x5903:	jne	0x5a09


0x5981:	call	0x4c20


0x5828:	mov	rbp, qword ptr [rip + 0x20bae9]
0x582f:	nop	
0x5830:	test	r14, r14
0x5833:	mov	rax, qword ptr [rip + 0x20ba26]
0x583a:	mov	rdx, r12
0x583d:	je	0x58b0


0x5909:	call	0x8ae0


0x5a09:	call	0x8ae0


0x58b0:	mov	rdx, qword ptr [r13]
0x58b4:	nop	dword ptr [rax]
0x58b8:	xor	r14d, r14d
0x58bb:	jmp	0x583f


0x583f:	mov	rsi, rbp
0x5842:	mov	edi, ebx
0x5844:	call	rax


0x589e:	mov	rbp, qword ptr [rip + 0x20ba6b]
0x58a5:	jmp	0x5830


0x5830:	test	r14, r14
0x5833:	mov	rax, qword ptr [rip + 0x20ba26]
0x583a:	mov	rdx, r12
0x583d:	je	0x58b0


0x5805:	test	rax, rax
0x5808:	jns	0x58ee


0x580e:	mov	dword ptr [rsp + 0xc], 0
0x5816:	test	ebx, ebx
0x5818:	jne	0x5899


0x8391:	mov	r13, rax
0x8394:	mov	eax, dword ptr [rax]
0x8396:	test	r15d, r15d
0x8399:	mov	rbx, qword ptr [rip + 0x208ce0]
0x83a0:	mov	dword ptr [rsp + 0x18], eax
0x83a4:	js	0x8511


0x8511:	call	0x1a70


0x83aa:	cmp	dword ptr [rip + 0x208cc7], r15d
0x83b1:	jg	0x8415


0x83b3:	cmp	r15d, 0x7fffffff
0x83ba:	je	0x8516


0x8415:	mov	eax, dword ptr [rbp + 4]
0x8418:	shl	r15, 4
0x841c:	sub	rsp, 8
0x8420:	add	rbx, r15
0x8423:	lea	r15, [rbp + 8]
0x8427:	mov	r8d, dword ptr [rbp]
0x842b:	mov	r11, qword ptr [rbx]
0x842e:	mov	r12, qword ptr [rbx + 8]
0x8432:	mov	rcx, r14
0x8435:	or	eax, 1
0x8438:	mov	dword ptr [rsp + 0x24], eax
0x843c:	push	qword ptr [rbp + 0x30]
0x843f:	mov	r9d, eax
0x8442:	push	qword ptr [rbp + 0x28]
0x8445:	push	r15
0x8447:	mov	rsi, r11
0x844a:	mov	rdx, qword ptr [rsp + 0x28]
0x844f:	mov	rdi, r12
0x8452:	mov	qword ptr [rsp + 0x30], r11
0x8457:	call	0x7130


0x8516:	call	0x9610


0x83c0:	lea	r12d, [r15 + 1]
0x83c4:	lea	rax, [rip + 0x208cc5]
0x83cb:	movsxd	rsi, r12d
0x83ce:	shl	rsi, 4
0x83d2:	cmp	rbx, rax
0x83d5:	je	0x84f0


0x84f0:	xor	edi, edi
0x84f2:	call	0x9420


0x83db:	mov	rdi, rbx
0x83de:	call	0x9420


0x83e3:	mov	rbx, rax
0x83e6:	mov	qword ptr [rip + 0x208c93], rax
0x83ed:	movsxd	rdi, dword ptr [rip + 0x208c84]
0x83f4:	mov	edx, r12d
0x83f7:	xor	esi, esi
0x83f9:	sub	edx, edi
0x83fb:	shl	rdi, 4
0x83ff:	movsxd	rdx, edx
0x8402:	add	rdi, rbx
0x8405:	shl	rdx, 4
0x8409:	call	0x1c40


0x1c40:	jmp	qword ptr [rip + 0x20f252]




0x84f7:	movdqa	xmm0, xmmword ptr [rip + 0x208b91]
0x84ff:	mov	rbx, rax
0x8502:	mov	qword ptr [rip + 0x208b77], rax
0x8509:	movups	xmmword ptr [rax], xmm0
0x850c:	jmp	0x83ed


0x83ed:	movsxd	rdi, dword ptr [rip + 0x208c84]
0x83f4:	mov	edx, r12d
0x83f7:	xor	esi, esi
0x83f9:	sub	edx, edi
0x83fb:	shl	rdi, 4
0x83ff:	movsxd	rdx, edx
0x8402:	add	rdi, rbx
0x8405:	shl	rdx, 4
0x8409:	call	0x1c40


0x852c:	mov	r12d, dword ptr [rax]
0x852f:	mov	rbp, rax
0x8532:	lea	rax, [rip + 0x208fe7]
0x8539:	test	rbx, rbx
0x853c:	mov	esi, 0x38
0x8541:	cmove	rbx, rax
0x8545:	mov	rdi, rbx
0x8548:	call	0x95c0


0x8662:	mov	r12d, dword ptr [rax]
0x8665:	mov	rbp, rax
0x8668:	lea	rax, [rbx + 8]
0x866c:	sub	rsp, 8
0x8670:	mov	r9d, dword ptr [rbx + 4]
0x8674:	push	qword ptr [rbx + 0x30]
0x8677:	mov	r8d, dword ptr [rbx]
0x867a:	push	qword ptr [rbx + 0x28]
0x867d:	mov	rdx, r15
0x8680:	push	rax
0x8681:	mov	rcx, qword ptr [rsp + 0x28]
0x8686:	mov	rsi, r14
0x8689:	mov	rdi, r13
0x868c:	call	0x7130


0x86df:	test	r12, r12
0x86e2:	mov	r13, rax
0x86e5:	mov	eax, dword ptr [rax]
0x86e7:	sete	bpl
0x86eb:	or	ebp, dword ptr [rbx + 4]
0x86ee:	lea	r10, [rbx + 8]
0x86f2:	sub	rsp, 8
0x86f6:	mov	r8d, dword ptr [rbx]
0x86f9:	mov	rcx, r15
0x86fc:	mov	dword ptr [rsp + 0x14], eax
0x8700:	push	qword ptr [rbx + 0x30]
0x8703:	mov	rdx, r14
0x8706:	push	qword ptr [rbx + 0x28]
0x8709:	push	r10
0x870b:	xor	esi, esi
0x870d:	mov	r9d, ebp
0x8710:	xor	edi, edi
0x8712:	mov	qword ptr [rsp + 0x40], r10
0x8717:	call	0x7130


0xb26e:	test	rax, rax
0xb271:	mov	rcx, rax
0xb274:	movzx	edx, byte ptr [rbp - 0x3c8]
0xb27b:	je	0xa6b5


0xb281:	test	r14, r14
0xb284:	je	0xb420


0xb420:	mov	r15, rcx
0xb423:	jmp	0xaa3b


0xb28a:	test	dl, dl
0xb28c:	je	0xb420


0xb292:	mov	rsi, r15
0xb295:	mov	rdx, r14
0xb298:	mov	rdi, rax
0xb29b:	call	0x1ce0


0xb2a0:	mov	r15, rax
0xb2a3:	jmp	0xaa3b


0xb2fe:	test	rax, rax
0xb301:	mov	rcx, rax
0xb304:	movzx	edx, byte ptr [rbp - 0x3c8]
0xb30b:	je	0xa6b5


0xb311:	test	r14, r14
0xb314:	je	0xb454


0xb454:	mov	r15, rcx
0xb457:	jmp	0xafdf


0xb31a:	test	dl, dl
0xb31c:	je	0xb454


0xb322:	mov	rsi, r15
0xb325:	mov	rdx, r14
0xb328:	mov	rdi, rax
0xb32b:	call	0x1ce0


0xb330:	mov	r15, rax
0xb333:	jmp	0xafdf


0xb5b4:	test	rax, rax
0xb5b7:	mov	rcx, rax
0xb5ba:	je	0xa6b5


0xb5c0:	test	r14, r14
0xb5c3:	je	0xb630


0xb630:	mov	r15, rcx
0xb633:	jmp	0xb52c


0xb5c5:	test	r13b, r13b
0xb5c8:	je	0xb630


0xb5ca:	mov	rsi, r15
0xb5cd:	mov	rdx, r14
0xb5d0:	mov	rdi, rax
0xb5d3:	call	0x1ce0


0xb5d8:	mov	r15, rax
0xb5db:	jmp	0xb52c


0xb114:	test	rax, rax
0xb117:	mov	r9, rax
0xb11a:	mov	rcx, qword ptr [rbp - 0x3c8]
0xb121:	movzx	edx, byte ptr [rbp - 0x3d0]
0xb128:	mov	r8, qword ptr [rbp - 0x3e0]
0xb12f:	je	0xa6b5


0xb135:	test	rbx, rbx
0xb138:	je	0xb340


0xb340:	mov	r15, r9
0xb343:	jmp	0xa7f4


0xb13e:	test	dl, dl
0xb140:	je	0xb340


0xb146:	mov	rsi, r15
0xb149:	mov	rdx, rbx
0xb14c:	mov	rdi, rax
0xb14f:	mov	qword ptr [rbp - 0x3d0], r8
0xb156:	mov	qword ptr [rbp - 0x3c8], rcx
0xb15d:	call	0x1ce0


0xb162:	mov	rcx, qword ptr [rbp - 0x3c8]
0xb169:	mov	r15, rax
0xb16c:	mov	r8, qword ptr [rbp - 0x3d0]
0xb173:	jmp	0xa7f4


0xa627:	test	rax, rax
0xa62a:	mov	qword ptr [rbp - 0x3d8], rax
0xa631:	je	0xb018


0xa637:	mov	r8, qword ptr [rbp - 0x3c8]
0xa63e:	mov	qword ptr [rbp - 0x420], rax
0xa645:	xor	r12d, r12d
0xa648:	cmp	qword ptr [rbp - 0x3e8], 0
0xa650:	je	0xa65c


0xc4d6:	mov	rdx, qword ptr [rsp + 8]
0xc4db:	mov	rcx, rax
0xc4de:	mov	r9, qword ptr [rsp + 0x48]
0xc4e3:	mov	r10, qword ptr [rsp + 0x40]
0xc4e8:	mov	r8, qword ptr [rsp + 0x38]
0xc4ed:	mov	r11, qword ptr [rsp + 0x30]
0xc4f2:	jmp	0xc339


0xc339:	test	rcx, rcx
0xc33c:	je	0xc557


0xc399:	mov	rdx, qword ptr [rsp + 8]
0xc39e:	mov	rcx, rax
0xc3a1:	mov	r9, qword ptr [rsp + 0x40]
0xc3a6:	mov	r10, qword ptr [rsp + 0x38]
0xc3ab:	mov	r8, qword ptr [rsp + 0x30]
0xc3b0:	jmp	0xbc9c


0xbc9c:	test	rcx, rcx
0xbc9f:	je	0xc557


0x4c54:	test	rax, rax
0x4c57:	je	0x4c8d


0x4c8d:	mov	r8d, 1
0x4c93:	mov	ecx, 1
0x4c98:	mov	rsi, rsp
0x4c9b:	mov	edx, 0x1f1
0x4ca0:	mov	rdi, rbp
0x4ca3:	call	0x6120


0x4c59:	lea	rcx, [rax + rbx + 1]
0x4c5e:	xor	edx, edx
0x4c60:	mov	rax, rcx
0x4c63:	div	rbx
0x4c66:	sub	rcx, rdx
0x4c69:	mov	rax, qword ptr [rsp + 0x298]
0x4c71:	xor	rax, qword ptr fs:[0x28]
0x4c7a:	mov	qword ptr [rip + 0x20c697], rcx
0x4c81:	jne	0x4cd5


0x4c83:	add	rsp, 0x2a8
0x4c8a:	pop	rbx
0x4c8b:	pop	rbp
0x4c8c:	ret	


0x4cd5:	call	0x1b90


0x5986:	jmp	0x5828


0x4ddc:	mov	rax, qword ptr [rip + 0x20c535]
0x4de3:	mov	qword ptr [rip + 0x20c526], rax
0x4dea:	pop	rax
0x4deb:	ret	


0x4d14:	test	rax, rax
0x4d17:	je	0x4d4d


0x4d4d:	mov	r8d, 1
0x4d53:	mov	ecx, 1
0x4d58:	mov	rsi, rsp
0x4d5b:	mov	edx, 0x1f1
0x4d60:	mov	rdi, rbp
0x4d63:	call	0x6120


0x4d19:	lea	rcx, [rax + rbx - 1]
0x4d1e:	xor	edx, edx
0x4d20:	mov	rax, rcx
0x4d23:	div	rbx
0x4d26:	sub	rcx, rdx
0x4d29:	mov	rax, qword ptr [rsp + 0x298]
0x4d31:	xor	rax, qword ptr fs:[0x28]
0x4d3a:	mov	qword ptr [rip + 0x20c5cf], rcx
0x4d41:	jne	0x4d95


0x4d43:	add	rsp, 0x2a8
0x4d4a:	pop	rbx
0x4d4b:	pop	rbp
0x4d4c:	ret	


0x4d95:	call	0x1b90


0x93c9:	test	rax, rax
0x93cc:	jne	0x93d3


0x93ce:	test	rbx, rbx
0x93d1:	jne	0x93d5


0x93d3:	pop	rbx
0x93d4:	ret	


0x93d5:	call	0x9610


0x9b5a:	mov	rbx, rax
0x9b5d:	mov	r14, rax
0x9b60:	mov	byte ptr [rbx], 0
0x9b63:	mov	rcx, qword ptr [rsp + 0x18]
0x9b68:	xor	rcx, qword ptr fs:[0x28]
0x9b71:	mov	rax, r14
0x9b74:	jne	0x9b85


0x9b76:	add	rsp, 0x28
0x9b7a:	pop	rbx
0x9b7b:	pop	rbp
0x9b7c:	pop	r12
0x9b7e:	pop	r13
0x9b80:	pop	r14
0x9b82:	pop	r15
0x9b84:	ret	


0x9b85:	call	0x1b90


0x9c0f:	jmp	0x9c2e


0x9579:	mov	rdx, rbx
0x957c:	xor	esi, esi
0x957e:	mov	rdi, rax
0x9581:	pop	rbx
0x9582:	jmp	0x1c40


0x95d4:	add	rsp, 8
0x95d8:	mov	rdx, rbx
0x95db:	mov	rsi, rbp
0x95de:	pop	rbx
0x95df:	pop	rbp
0x95e0:	mov	rdi, rax
0x95e3:	jmp	0x1ce0


0x9fe3:	mov	edx, r12d
0x9fe6:	mov	rsi, rbp
0x9fe9:	mov	edi, eax
0x9feb:	call	0x1c10


0x9ff0:	cmp	rax, -1
0x9ff4:	je	0xa002


0xa002:	pop	rbx
0xa003:	pop	rbp
0xa004:	pop	r12
0xa006:	ret	


0x9ff6:	and	dword ptr [rbx], 0xffffffef
0x9ff9:	mov	qword ptr [rbx + 0x90], rax
0xa000:	xor	eax, eax
0xa002:	pop	rbx
0xa003:	pop	rbp
0xa004:	pop	r12
0xa006:	ret	


0x9fa7:	mov	rdi, rbx
0x9faa:	pop	rbx
0x9fab:	jmp	0x1d10


0x9c7c:	test	eax, eax
0x9c7e:	mov	rdi, rbx
0x9c81:	js	0x9cd7


0x9cd7:	pop	rbx
0x9cd8:	pop	rbp
0x9cd9:	pop	r12
0x9cdb:	jmp	0x1b40


0x9c83:	call	0x1d40


0x1b40:	jmp	qword ptr [rip + 0x20f2d2]




0x9c88:	test	eax, eax
0x9c8a:	jne	0x9cb8


0x9c8c:	mov	rdi, rbx
0x9c8f:	call	0x9f70


0x9cb8:	mov	rdi, rbx
0x9cbb:	call	0x1cf0


0x9cc0:	xor	esi, esi
0x9cc2:	mov	edx, 1
0x9cc7:	mov	edi, eax
0x9cc9:	call	0x1c10


0x9cce:	cmp	rax, -1
0x9cd2:	jne	0x9c8c


0x9cd4:	mov	rdi, rbx
0x9cd7:	pop	rbx
0x9cd8:	pop	rbp
0x9cd9:	pop	r12
0x9cdb:	jmp	0x1b40


0xa047:	cmp	rax, -3
0xa04b:	mov	rbp, rax
0xa04e:	jbe	0xa070


0xa070:	mov	rdx, qword ptr [rsp + 8]
0xa075:	xor	rdx, qword ptr fs:[0x28]
0xa07e:	mov	rax, rbp
0xa081:	jne	0xa08e


0xa050:	test	r12, r12
0xa053:	je	0xa070


0xa083:	add	rsp, 0x18
0xa087:	pop	rbx
0xa088:	pop	rbp
0xa089:	pop	r12
0xa08b:	pop	r13
0xa08d:	ret	


0xa08e:	call	0x1b90


0xa055:	xor	edi, edi
0xa057:	call	0xa4b0


0x618c:	mov	rcx, qword ptr [r13 + 0x10]
0x6190:	mov	r13, qword ptr [r13 + 8]
0x6194:	mov	rbp, rax
0x6197:	sub	rax, 1
0x619b:	mov	edx, 1
0x61a0:	cmp	rax, 0x10
0x61a4:	lea	rax, [rip + 0x7fde]
0x61ab:	mov	rdi, r13
0x61ae:	cmovae	rbp, rdx
0x61b2:	mov	qword ptr [rsp + 0x38], rcx
0x61b7:	cmovae	r14, rax
0x61bb:	call	0x1b80


0x61c0:	cmp	rax, 0x11
0x61c4:	lea	rax, [rip + 0x85d6]
0x61cb:	mov	rdi, qword ptr [rsp + 0x10]
0x61d0:	mov	rcx, qword ptr [rsp + 0x18]
0x61d5:	cmovae	r13, rax
0x61d9:	mov	rax, qword ptr [rsp]
0x61dd:	add	rax, 0x287
0x61e3:	cmp	rdi, rcx
0x61e6:	mov	qword ptr [rsp + 8], rax
0x61eb:	ja	0x6338


0x61f1:	xor	edx, edx
0x61f3:	mov	rax, rcx
0x61f6:	div	rdi
0x61f9:	test	rdx, rdx
0x61fc:	mov	rdi, rax
0x61ff:	je	0x6560


0x6338:	test	rcx, rcx
0x633b:	je	0x6205


0x6560:	mov	rsi, rbx
0x6563:	xor	edx, edx
0x6565:	imul	rsi, rax
0x6569:	mov	rax, rsi
0x656c:	div	rdi
0x656f:	cmp	rax, rbx
0x6572:	jne	0x6205


0x6205:	mov	qword ptr [rsp + 0x18], rcx
0x620a:	test	rcx, rcx
0x620d:	fild	qword ptr [rsp + 0x18]
0x6211:	jns	0x6219


0x6341:	mov	rax, qword ptr [rsp + 0x10]
0x6346:	xor	edx, edx
0x6348:	div	rcx
0x634b:	test	rdx, rdx
0x634e:	mov	r8, rax
0x6351:	jne	0x6205


0x6578:	xor	edi, edi
0x657a:	xor	r9d, r9d
0x657d:	jmp	0x6389


0x6213:	fadd	dword ptr [rip + 0x7fcf]
0x6219:	mov	rax, qword ptr [rsp + 0x10]
0x621e:	mov	qword ptr [rsp + 0x18], rax
0x6223:	test	rax, rax
0x6226:	fild	qword ptr [rsp + 0x18]
0x622a:	jns	0x6232


0x6219:	mov	rax, qword ptr [rsp + 0x10]
0x621e:	mov	qword ptr [rsp + 0x18], rax
0x6223:	test	rax, rax
0x6226:	fild	qword ptr [rsp + 0x18]
0x622a:	jns	0x6232


0x6357:	mov	rax, rbx
0x635a:	xor	edx, edx
0x635c:	div	r8
0x635f:	mov	rbx, rax
0x6362:	lea	rax, [rdx + rdx*4]
0x6366:	xor	edx, edx
0x6368:	mov	rsi, rbx
0x636b:	add	rax, rax
0x636e:	div	r8
0x6371:	add	rdx, rdx
0x6374:	mov	r9d, eax
0x6377:	cmp	r8, rdx
0x637a:	jbe	0x6908


0x6389:	mov	ecx, r12d
0x638c:	mov	r8, qword ptr [rsp + 8]
0x6391:	mov	ebx, 0xffffffff
0x6396:	and	ecx, 0x10
0x6399:	je	0x6760


0x622c:	fadd	dword ptr [rip + 0x7fb6]
0x6232:	fdivp	st(1)
0x6234:	mov	qword ptr [rsp + 0x18], rbx
0x6239:	test	rbx, rbx
0x623c:	fild	qword ptr [rsp + 0x18]
0x6240:	jns	0x6248


0x6232:	fdivp	st(1)
0x6234:	mov	qword ptr [rsp + 0x18], rbx
0x6239:	test	rbx, rbx
0x623c:	fild	qword ptr [rsp + 0x18]
0x6240:	jns	0x6248


0x6908:	setb	dil
0x690c:	movzx	edi, dil
0x6910:	add	edi, 2
0x6913:	jmp	0x6389


0x6380:	xor	edi, edi
0x6382:	test	rdx, rdx
0x6385:	setne	dil
0x6389:	mov	ecx, r12d
0x638c:	mov	r8, qword ptr [rsp + 8]
0x6391:	mov	ebx, 0xffffffff
0x6396:	and	ecx, 0x10
0x6399:	je	0x6760


0x6760:	cmp	r15d, 1
0x6764:	je	0x68e0


0x639f:	mov	r8d, dword ptr [rsp + 0x34]
0x63a4:	cmp	r8, rsi
0x63a7:	mov	r11, r8
0x63aa:	ja	0x6920


0x6242:	fadd	dword ptr [rip + 0x7fa0]
0x6248:	test	r12b, 0x10
0x624c:	fmulp	st(1)
0x624e:	je	0x6418


0x6248:	test	r12b, 0x10
0x624c:	fmulp	st(1)
0x624e:	je	0x6418


0x68e0:	mov	rax, rsi
0x68e3:	movsxd	rdi, edi
0x68e6:	and	eax, 1
0x68e9:	add	rax, rdi
0x68ec:	setne	al
0x68ef:	movzx	eax, al
0x68f2:	add	r9d, eax
0x68f5:	cmp	r9d, 5
0x68f9:	jg	0x6776


0x676a:	test	r15d, r15d
0x676d:	jne	0x6790


0x63b0:	xor	ebx, ebx
0x63b2:	jmp	0x63d7


0x6920:	mov	r8, qword ptr [rsp + 8]
0x6925:	xor	ebx, ebx
0x6927:	jmp	0x6760


0x6418:	cmp	r15d, 1
0x641c:	je	0x642c


0x6254:	fild	dword ptr [rsp + 0x34]
0x6258:	xor	ebx, ebx
0x625a:	fld	st(0)
0x625c:	jmp	0x6264


0x68ff:	jmp	0x6790


0x6776:	add	rsi, 1
0x677a:	test	ecx, ecx
0x677c:	je	0x6790


0x676f:	add	edi, r9d
0x6772:	test	edi, edi
0x6774:	jle	0x6790


0x6790:	mov	r15, r8
0x6793:	movabs	rcx, 0xcccccccccccccccd
0x679d:	nop	dword ptr [rax]
0x67a0:	mov	rax, rsi
0x67a3:	sub	r15, 1
0x67a7:	mul	rcx
0x67aa:	shr	rdx, 3
0x67ae:	lea	rax, [rdx + rdx*4]
0x67b2:	add	rax, rax
0x67b5:	sub	rsi, rax
0x67b8:	add	esi, 0x30
0x67bb:	test	rdx, rdx
0x67be:	mov	byte ptr [r15], sil
0x67c1:	mov	rsi, rdx
0x67c4:	jne	0x67a0


0x63d7:	mov	rax, rsi
0x63da:	xor	edx, edx
0x63dc:	mov	esi, edi
0x63de:	div	r8
0x63e1:	sar	esi, 1
0x63e3:	mov	r10, rax
0x63e6:	lea	eax, [rdx + rdx*4]
0x63e9:	xor	edx, edx
0x63eb:	lea	eax, [r9 + rax*2]
0x63ef:	div	r11d
0x63f2:	lea	edx, [rsi + rdx*2]
0x63f5:	mov	r9d, eax
0x63f8:	mov	rsi, r10
0x63fb:	add	edi, edx
0x63fd:	cmp	r11d, edx
0x6400:	ja	0x63b8


0x642c:	sub	rsp, 0x10
0x6430:	lea	rcx, [rip + 0x7d54]
0x6437:	mov	esi, 1
0x643c:	mov	rbx, qword ptr [rsp + 0x10]
0x6441:	mov	rdx, -1
0x6448:	xor	eax, eax
0x644a:	fstp	xword ptr [rsp]
0x644d:	xor	ebp, ebp
0x644f:	mov	rdi, rbx
0x6452:	call	0x1e90


0x641e:	fld	xword ptr [rip + 0x7dcc]
0x6424:	fucomip	st(1)
0x6426:	ja	0x66b0


0x6264:	fld	st(0)
0x6266:	add	ebx, 1
0x6269:	fmul	st(2)
0x626b:	fxch	st(3)
0x626d:	fucomi	st(3)
0x626f:	jb	0x6280


0x677e:	mov	eax, dword ptr [rsp + 0x34]
0x6782:	cmp	rax, rsi
0x6785:	je	0x6950


0x67c6:	jmp	0x64a0


0x67a0:	mov	rax, rsi
0x67a3:	sub	r15, 1
0x67a7:	mul	rcx
0x67aa:	shr	rdx, 3
0x67ae:	lea	rax, [rdx + rdx*4]
0x67b2:	add	rax, rax
0x67b5:	sub	rsi, rax
0x67b8:	add	esi, 0x30
0x67bb:	test	rdx, rdx
0x67be:	mov	byte ptr [r15], sil
0x67c1:	mov	rsi, rdx
0x67c4:	jne	0x67a0


0x6402:	cmp	r11d, edi
0x6405:	setb	dil
0x6409:	movzx	edi, dil
0x640d:	add	edi, 2
0x6410:	jmp	0x63c2


0x63b8:	test	edi, edi
0x63ba:	setne	dil
0x63be:	movzx	edi, dil
0x63c2:	add	ebx, 1
0x63c5:	cmp	r8, r10
0x63c8:	ja	0x66dd


0x1e90:	jmp	qword ptr [rip + 0x20f12a]


0x66b0:	sub	rsp, 0x10
0x66b4:	mov	edi, r15d
0x66b7:	fstp	xword ptr [rsp]
0x66ba:	call	0x6050


0x6280:	fstp	st(2)
0x6282:	fstp	st(2)
0x6284:	mov	ecx, dword ptr [rsp + 0x30]
0x6288:	add	rbp, 1
0x628c:	xor	eax, eax
0x628e:	fdivrp	st(1)
0x6290:	test	ecx, ecx
0x6292:	sete	al
0x6295:	cmp	r15d, 1
0x6299:	lea	rax, [rbp + rax + 1]
0x629e:	mov	qword ptr [rsp + 0x18], rax
0x62a3:	je	0x6810


0x6271:	cmp	ebx, 8
0x6274:	jne	0x6260


0x6950:	cmp	ebx, 8
0x6953:	je	0x6790


0x64a0:	test	r12b, 4
0x64a4:	jne	0x6588


0x63c2:	add	ebx, 1
0x63c5:	cmp	r8, r10
0x63c8:	ja	0x66dd


0x63ce:	cmp	ebx, 8
0x63d1:	je	0x6978


0x66dd:	cmp	r10, 9
0x66e1:	ja	0x6978




0x6810:	sub	rsp, 0x10
0x6814:	lea	rcx, [rip + 0x7976]
0x681b:	mov	rdx, -1
0x6822:	fld	st(0)
0x6824:	fstp	xword ptr [rsp]
0x6827:	mov	r14, qword ptr [rsp + 0x10]
0x682c:	mov	esi, 1
0x6831:	xor	eax, eax
0x6833:	mov	rdi, r14
0x6836:	fstp	xword ptr [rsp + 0x30]
0x683a:	call	0x1e90


0x62a9:	fld	xword ptr [rip + 0x7f41]
0x62af:	fucomip	st(1)
0x62b1:	ja	0x6688


0x6276:	fstp	st(2)
0x6278:	fstp	st(2)
0x627a:	jmp	0x6284


0x6260:	fstp	st(1)
0x6262:	fxch	st(2)
0x6264:	fld	st(0)
0x6266:	add	ebx, 1
0x6269:	fmul	st(2)
0x626b:	fxch	st(3)
0x626d:	fucomi	st(3)
0x626f:	jb	0x6280


0x6959:	add	ebx, 1
0x695c:	test	r12b, 8
0x6960:	je	0x6a22


0x64aa:	test	r12b, 0x80
0x64ae:	je	0x6527


0x6588:	mov	r14, r8
0x658b:	mov	rdi, r13
0x658e:	mov	qword ptr [rsp + 0x48], r8
0x6593:	sub	r14, r15
0x6596:	mov	rbp, -1
0x659d:	call	0x1b80


0x6978:	mov	r8, qword ptr [rsp + 8]
0x697d:	jmp	0x6760


0x66e7:	cmp	r15d, 1
0x66eb:	je	0x69a2


0x62b7:	fld	st(0)
0x62b9:	fstp	xword ptr [rsp + 0x20]
0x62bd:	sub	rsp, 0x10
0x62c1:	lea	rcx, [rip + 0x7ec9]
0x62c8:	mov	esi, 1
0x62cd:	mov	rdx, -1
0x62d4:	xor	eax, eax
0x62d6:	mov	r14, qword ptr [rsp + 0x10]
0x62db:	mov	rdi, r14
0x62de:	fstp	xword ptr [rsp]
0x62e1:	call	0x1e90


0x6688:	sub	rsp, 0x10
0x668c:	mov	edi, r15d
0x668f:	fld	st(0)
0x6691:	fstp	xword ptr [rsp]
0x6694:	fstp	xword ptr [rsp + 0x30]
0x6698:	call	0x6050


0x6284:	mov	ecx, dword ptr [rsp + 0x30]
0x6288:	add	rbp, 1
0x628c:	xor	eax, eax
0x628e:	fdivrp	st(1)
0x6290:	test	ecx, ecx
0x6292:	sete	al
0x6295:	cmp	r15d, 1
0x6299:	lea	rax, [rbp + rax + 1]
0x629e:	mov	qword ptr [rsp + 0x18], rax
0x62a3:	je	0x6810


0x6a22:	mov	rax, rbp
0x6a25:	mov	byte ptr [r8 - 1], 0x30
0x6a2a:	not	rax
0x6a2d:	add	r8, rax
0x6a30:	cmp	ebp, 8
0x6a33:	mov	eax, ebp
0x6a35:	jae	0x6a7a


0x6966:	lea	r15, [r8 - 1]
0x696a:	mov	byte ptr [r8 - 1], 0x31
0x696f:	jmp	0x64a0


0x6527:	mov	rax, qword ptr [rsp + 8]
0x652c:	mov	rcx, qword ptr [rsp + 0x88]
0x6534:	xor	rcx, qword ptr fs:[0x28]
0x653d:	mov	byte ptr [rax], 0
0x6540:	mov	rax, r15
0x6543:	jne	0x6adb


0x64b0:	cmp	ebx, -1
0x64b3:	je	0x67d0


0x69a2:	mov	edx, eax
0x69a4:	and	edx, 1
0x69a7:	add	edx, edi
0x69a9:	cmp	edx, 2
0x69ac:	setg	dl
0x69af:	jmp	0x6700


0x66f1:	test	r15d, r15d
0x66f4:	sete	dl
0x66f7:	test	edi, edi
0x66f9:	setg	r8b
0x66fd:	and	edx, r8d
0x6700:	test	dl, dl
0x6702:	je	0x6989


0x6a37:	and	ebp, 4
0x6a3a:	jne	0x6af1


0x6a7a:	mov	rax, qword ptr [r14]
0x6a7d:	lea	rcx, [r8 + 8]
0x6a81:	and	rcx, 0xfffffffffffffff8
0x6a85:	mov	qword ptr [r8], rax
0x6a88:	mov	eax, ebp
0x6a8a:	mov	rdx, qword ptr [r14 + rax - 8]
0x6a8f:	mov	qword ptr [r8 + rax - 8], rdx
0x6a94:	mov	rax, r8
0x6a97:	sub	rax, rcx
0x6a9a:	sub	r14, rax
0x6a9d:	add	eax, ebp
0x6a9f:	and	eax, 0xfffffff8
0x6aa2:	cmp	eax, 8
0x6aa5:	jb	0x6966


0x6549:	add	rsp, 0x98
0x6550:	pop	rbx
0x6551:	pop	rbp
0x6552:	pop	r12
0x6554:	pop	r13
0x6556:	pop	r14
0x6558:	pop	r15
0x655a:	ret	


0x6adb:	call	0x1b90


0x67d0:	mov	rcx, qword ptr [rsp + 0x10]
0x67d5:	cmp	rcx, 1
0x67d9:	jbe	0x6982


0x64b9:	mov	eax, r12d
0x64bc:	and	eax, 0x100
0x64c1:	mov	ecx, eax
0x64c3:	or	ecx, ebx
0x64c5:	je	0x6527


0x6700:	test	dl, dl
0x6702:	je	0x6989


0x6989:	test	eax, eax
0x698b:	jne	0x6716


0x6708:	lea	r9d, [rax + 1]
0x670c:	cmp	r9d, 0xa
0x6710:	je	0x6a11


0x6a40:	test	eax, eax
0x6a42:	je	0x6966


0x6af1:	mov	edx, dword ptr [r14]
0x6af4:	mov	dword ptr [r8], edx
0x6af7:	mov	edx, dword ptr [r14 + rax - 4]
0x6afc:	mov	dword ptr [r8 + rax - 4], edx
0x6b01:	jmp	0x6966


0x6aab:	and	eax, 0xfffffff8
0x6aae:	xor	edx, edx
0x6ab0:	mov	esi, edx
0x6ab2:	add	edx, 8
0x6ab5:	mov	rdi, qword ptr [r14 + rsi]
0x6ab9:	cmp	edx, eax
0x6abb:	mov	qword ptr [rcx + rsi], rdi
0x6abf:	jb	0x6ab0


0x6982:	xor	ebx, ebx
0x6984:	jmp	0x64b9


0x67df:	mov	edx, dword ptr [rsp + 0x34]
0x67e3:	mov	ebx, 1
0x67e8:	mov	eax, 1
0x67ed:	imul	rax, rdx
0x67f1:	cmp	rcx, rax
0x67f4:	jbe	0x64b9


0x64c7:	and	r12d, 0x40
0x64cb:	jne	0x6668


0x6991:	test	r12b, 8
0x6995:	jne	0x69b4


0x6716:	add	r9d, 0x30
0x671a:	mov	rax, qword ptr [rsp]
0x671e:	lea	r8, [rax + 0x286]
0x6725:	mov	byte ptr [rax + 0x286], r9b
0x672c:	mov	eax, ebp
0x672e:	sub	r8, rbp
0x6731:	cmp	ebp, 8
0x6734:	jae	0x69c1


0x6a11:	lea	rsi, [r10 + 1]
0x6a15:	cmp	rsi, 0xa
0x6a19:	je	0x6a70


0x6a48:	movzx	edx, byte ptr [r14]
0x6a4c:	test	al, 2
0x6a4e:	mov	byte ptr [r8], dl
0x6a51:	je	0x6966


0x6ab0:	mov	esi, edx
0x6ab2:	add	edx, 8
0x6ab5:	mov	rdi, qword ptr [r14 + rsi]
0x6ab9:	cmp	edx, eax
0x6abb:	mov	qword ptr [rcx + rsi], rdi
0x6abf:	jb	0x6ab0


0x6ac1:	jmp	0x6966


0x67fa:	add	ebx, 1
0x67fd:	cmp	ebx, 8
0x6800:	jne	0x67ed


0x64d1:	test	ebx, ebx
0x64d3:	je	0x6b06


0x6668:	mov	rcx, qword ptr [rsp]
0x666c:	lea	rdi, [rcx + 0x288]
0x6673:	mov	byte ptr [rcx + 0x287], 0x20
0x667a:	mov	qword ptr [rsp + 8], rdi
0x667f:	jmp	0x64d1


0x6997:	mov	r9d, 0x30
0x699d:	jmp	0x671a


0x69b4:	mov	r8, qword ptr [rsp + 8]
0x69b9:	xor	r9d, r9d
0x69bc:	jmp	0x6760


0x673a:	test	bpl, 4
0x673e:	jne	0x6ac6


0x69c1:	mov	rax, qword ptr [r14]
0x69c4:	mov	r9, r14
0x69c7:	mov	qword ptr [r8], rax
0x69ca:	mov	eax, ebp
0x69cc:	mov	rdx, qword ptr [r14 + rax - 8]
0x69d1:	mov	qword ptr [r8 + rax - 8], rdx
0x69d6:	lea	rdx, [r8 + 8]
0x69da:	mov	rax, r8
0x69dd:	and	rdx, 0xfffffffffffffff8
0x69e1:	sub	rax, rdx
0x69e4:	sub	r9, rax
0x69e7:	add	eax, ebp
0x69e9:	and	eax, 0xfffffff8
0x69ec:	cmp	eax, 8
0x69ef:	jb	0x6757


0x6a70:	mov	r8, qword ptr [rsp + 8]
0x6a75:	jmp	0x6757


0x6a1b:	xor	edi, edi
0x6a1d:	jmp	0x6991


0x6a57:	movzx	edx, word ptr [r14 + rax - 2]
0x6a5d:	mov	word ptr [r8 + rax - 2], dx
0x6a63:	jmp	0x6966


0x6802:	jmp	0x64b9


0x67ed:	imul	rax, rdx
0x67f1:	cmp	rcx, rax
0x67f4:	jbe	0x64b9


0x6b06:	test	eax, eax
0x6b08:	mov	rdx, qword ptr [rsp + 8]
0x6b0d:	jne	0x651b


0x64d9:	cmp	ebx, 1
0x64dc:	jne	0x64ec


0x671a:	mov	rax, qword ptr [rsp]
0x671e:	lea	r8, [rax + 0x286]
0x6725:	mov	byte ptr [rax + 0x286], r9b
0x672c:	mov	eax, ebp
0x672e:	sub	r8, rbp
0x6731:	cmp	ebp, 8
0x6734:	jae	0x69c1


0x6744:	test	eax, eax
0x6746:	je	0x6757


0x6ac6:	mov	edx, dword ptr [r14]
0x6ac9:	mov	dword ptr [r8], edx
0x6acc:	mov	edx, dword ptr [r14 + rax - 4]
0x6ad1:	mov	dword ptr [r8 + rax - 4], edx
0x6ad6:	jmp	0x6757


0x6757:	xor	edi, edi
0x6759:	xor	r9d, r9d
0x675c:	nop	dword ptr [rax]
0x6760:	cmp	r15d, 1
0x6764:	je	0x68e0


0x69f5:	and	eax, 0xfffffff8
0x69f8:	xor	edi, edi
0x69fa:	mov	r10d, edi
0x69fd:	add	edi, 8
0x6a00:	mov	r11, qword ptr [r9 + r10]
0x6a04:	cmp	edi, eax
0x6a06:	mov	qword ptr [rdx + r10], r11
0x6a0a:	jb	0x69fa


0x6b13:	jmp	0x6527


0x651b:	lea	rax, [rdx + 1]
0x651f:	mov	byte ptr [rdx], 0x42
0x6522:	mov	qword ptr [rsp + 8], rax
0x6527:	mov	rax, qword ptr [rsp + 8]
0x652c:	mov	rcx, qword ptr [rsp + 0x88]
0x6534:	xor	rcx, qword ptr fs:[0x28]
0x653d:	mov	byte ptr [rax], 0
0x6540:	mov	rax, r15
0x6543:	jne	0x6adb


0x64de:	mov	r9d, dword ptr [rsp + 0x30]
0x64e3:	test	r9d, r9d
0x64e6:	je	0x6930


0x64ec:	lea	rcx, [rip + 0x7ce5]
0x64f3:	movsxd	rbx, ebx
0x64f6:	mov	rdi, qword ptr [rsp + 8]
0x64fb:	test	eax, eax
0x64fd:	movzx	ecx, byte ptr [rcx + rbx]
0x6501:	lea	rdx, [rdi + 1]
0x6505:	mov	byte ptr [rdi], cl
0x6507:	je	0x6944


0x6748:	movzx	edx, byte ptr [r14]
0x674c:	test	al, 2
0x674e:	mov	byte ptr [r8], dl
0x6751:	jne	0x6ae0


0x69fa:	mov	r10d, edi
0x69fd:	add	edi, 8
0x6a00:	mov	r11, qword ptr [r9 + r10]
0x6a04:	cmp	edi, eax
0x6a06:	mov	qword ptr [rdx + r10], r11
0x6a0a:	jb	0x69fa


0x6a0c:	jmp	0x6757


0x6930:	mov	rbx, qword ptr [rsp + 8]
0x6935:	test	eax, eax
0x6937:	lea	rdx, [rbx + 1]
0x693b:	mov	byte ptr [rbx], 0x6b
0x693e:	jne	0x651b


0x6944:	mov	qword ptr [rsp + 8], rdx
0x6949:	jmp	0x6527


0x650d:	mov	r8d, dword ptr [rsp + 0x30]
0x6512:	test	r8d, r8d
0x6515:	jne	0x66d0


0x6ae0:	movzx	edx, word ptr [r14 + rax - 2]
0x6ae6:	mov	word ptr [r8 + rax - 2], dx
0x6aec:	jmp	0x6757


0x66d0:	lea	rdx, [rdi + 2]
0x66d4:	mov	byte ptr [rdi + 1], 0x69
0x66d8:	jmp	0x651b


0x669d:	pop	rax
0x669e:	pop	rdx
0x669f:	fld	xword ptr [rsp + 0x20]
0x66a3:	jmp	0x62b9


0x62b9:	fstp	xword ptr [rsp + 0x20]
0x62bd:	sub	rsp, 0x10
0x62c1:	lea	rcx, [rip + 0x7ec9]
0x62c8:	mov	esi, 1
0x62cd:	mov	rdx, -1
0x62d4:	xor	eax, eax
0x62d6:	mov	r14, qword ptr [rsp + 0x10]
0x62db:	mov	rdi, r14
0x62de:	fstp	xword ptr [rsp]
0x62e1:	call	0x1e90


0x66bf:	pop	r8
0x66c1:	pop	r9
0x66c3:	jmp	0x642c


0x4d68:	lea	rsi, [rip + 0x7dd9]
0x4d6f:	mov	rbx, rax
0x4d72:	mov	edx, 5
0x4d77:	xor	edi, edi
0x4d79:	call	0x1b60


0x4ca8:	lea	rsi, [rip + 0x7e61]
0x4caf:	mov	rbx, rax
0x4cb2:	mov	edx, 5
0x4cb7:	xor	edi, edi
0x4cb9:	call	0x1b60


0x3e07:	mov	rdi, qword ptr [rip + 0x20d54a]
0x3e0e:	lea	rsi, [rbx + 0x28e]
0x3e15:	mov	r8d, 1
0x3e1b:	mov	ecx, 1
0x3e20:	mov	edx, 0x1f1
0x3e25:	mov	r12, rax
0x3e28:	call	0x6120


0x3e2d:	mov	r13, rax
0x3e30:	mov	rax, qword ptr [rip + 0x20d519]
0x3e37:	cmp	rax, r14
0x3e3a:	jge	0x3f88


0x3e40:	sub	r14, rax
0x3e43:	mov	r8, r14
0x3e46:	js	0x40b0


0x3f88:	lea	rsi, [rip + 0x8681]
0x3f8f:	xor	edi, edi
0x3f91:	mov	edx, 5
0x3f96:	add	rbx, 0x51c
0x3f9d:	call	0x1b60


0x40b0:	mov	rax, r14
0x40b3:	mov	rdx, r14
0x40b6:	pxor	xmm0, xmm0
0x40ba:	shr	rax, 1
0x40bd:	and	edx, 1
0x40c0:	or	rax, rdx
0x40c3:	cvtsi2sd	xmm0, rax
0x40c8:	addsd	xmm0, xmm0
0x40cc:	jmp	0x3e55


0x3e4c:	pxor	xmm0, xmm0
0x3e50:	cvtsi2sd	xmm0, r14
0x3e55:	divsd	xmm0, qword ptr [rip + 0xa313]
0x3e5d:	mov	rdi, qword ptr [rip + 0x20d4f4]
0x3e64:	lea	rsi, [rbx + 0x51c]
0x3e6b:	mov	ecx, 0x3b9aca00
0x3e70:	mov	edx, 0x1d1
0x3e75:	movsd	qword ptr [rsp + 8], xmm0
0x3e7b:	call	0x6120


0x3e55:	divsd	xmm0, qword ptr [rip + 0xa313]
0x3e5d:	mov	rdi, qword ptr [rip + 0x20d4f4]
0x3e64:	lea	rsi, [rbx + 0x51c]
0x3e6b:	mov	ecx, 0x3b9aca00
0x3e70:	mov	edx, 0x1d1
0x3e75:	movsd	qword ptr [rsp + 8], xmm0
0x3e7b:	call	0x6120


0x3e80:	mov	rdi, rax
0x3e83:	mov	rbx, rax
0x3e86:	call	0x1b80


0x3e8b:	mov	ecx, 0x732f
0x3e90:	test	rbp, rbp
0x3e93:	mov	byte ptr [rbx + rax + 2], 0
0x3e98:	mov	word ptr [rbx + rax], cx
0x3e9c:	movsd	xmm0, qword ptr [rsp + 8]
0x3ea2:	lea	r8, [rip + 0x8762]
0x3ea9:	jne	0x3fd9


0x3eaf:	lea	r14, [rsp + 0x7c0]
0x3eb7:	mov	ecx, 0x18
0x3ebc:	mov	edx, 1
0x3ec1:	mov	esi, 0x18
0x3ec6:	mov	eax, 1
0x3ecb:	mov	rdi, r14
0x3ece:	call	0x1a40


0x3fd9:	mov	rdi, qword ptr [rip + 0x20d120]
0x3fe0:	mov	rax, qword ptr [rdi + 0x28]
0x3fe4:	cmp	rax, qword ptr [rdi + 0x30]
0x3fe8:	jae	0x4110


0x1a40:	jmp	qword ptr [rip + 0x20f352]


0x3fee:	lea	rdx, [rax + 1]
0x3ff2:	lea	r8, [rip + 0x860b]
0x3ff9:	mov	qword ptr [rdi + 0x28], rdx
0x3ffd:	mov	byte ptr [rax], 0xd
0x4000:	jmp	0x3eaf


0x4110:	mov	esi, 0xd
0x4115:	movsd	qword ptr [rsp + 8], xmm0
0x411b:	call	0x1be0




0x4120:	lea	r8, [rip + 0x84dd]
0x4127:	movsd	xmm0, qword ptr [rsp + 8]
0x412d:	jmp	0x3eaf


0x65a2:	lea	rdi, [rsp + 0x50]
0x65a7:	mov	ecx, 0x29
0x65ac:	mov	rdx, r14
0x65af:	mov	rsi, r15
0x65b2:	mov	qword ptr [rsp + 0x40], rax
0x65b7:	mov	qword ptr [rsp + 0x18], rdi
0x65bc:	call	0x1cc0


0x1cc0:	jmp	qword ptr [rip + 0x20f212]




0x9ad9:	add	rbx, rax
0x9adc:	cmovb	rbx, r13
0x9ae0:	sub	rbp, 1
0x9ae4:	jne	0x9aba


0x9ae6:	cmp	rbx, 0x7fffffff
0x9aed:	ja	0x9b90


0x9aba:	mov	edx, dword ptr [rsp]
0x9abd:	cmp	edx, 0x2f
0x9ac0:	ja	0x9ba0


0x9af3:	lea	rdi, [rbx + 1]
0x9af7:	call	0x93c0


0x9b90:	call	0x1a80


0x9b95:	xor	r14d, r14d
0x9b98:	mov	dword ptr [rax], 0x4b
0x9b9e:	jmp	0x9b63


0x9b63:	mov	rcx, qword ptr [rsp + 0x18]
0x9b68:	xor	rcx, qword ptr fs:[0x28]
0x9b71:	mov	rax, r14
0x9b74:	jne	0x9b85


0x9afc:	mov	r14, rax
0x9aff:	mov	rbx, rax
0x9b02:	jmp	0x9b35


0x9b35:	mov	edx, dword ptr [r15]
0x9b38:	cmp	edx, 0x2f
0x9b3b:	jbe	0x9b04


0x9b04:	mov	eax, edx
0x9b06:	add	rax, qword ptr [r15 + 0x10]
0x9b0a:	add	edx, 8
0x9b0d:	mov	dword ptr [r15], edx
0x9b10:	mov	r13, qword ptr [rax]
0x9b13:	mov	rdi, r13
0x9b16:	call	0x1b80


0x9b3d:	mov	rax, qword ptr [r15 + 8]
0x9b41:	lea	rdx, [rax + 8]
0x9b45:	mov	qword ptr [r15 + 8], rdx
0x9b49:	jmp	0x9b10


0x9b10:	mov	r13, qword ptr [rax]
0x9b13:	mov	rdi, r13
0x9b16:	call	0x1b80


0x9b1b:	mov	rdi, rbx
0x9b1e:	mov	rbp, rax
0x9b21:	mov	rdx, rax
0x9b24:	mov	rsi, r13
0x9b27:	add	rbx, rbp
0x9b2a:	call	0x1ce0


0x9b2f:	sub	r12, 1
0x9b33:	je	0x9b60


0x9b60:	mov	byte ptr [rbx], 0
0x9b63:	mov	rcx, qword ptr [rsp + 0x18]
0x9b68:	xor	rcx, qword ptr fs:[0x28]
0x9b71:	mov	rax, r14
0x9b74:	jne	0x9b85


0x95f9:	mov	rdi, rbx
0x95fc:	lea	rsi, [rax + 1]
0x9600:	pop	rbx
0x9601:	jmp	0x95c0


0xa156:	mov	r14, qword ptr [r15]
0xa159:	mov	qword ptr [rsp], -1
0xa161:	test	r14, r14
0xa164:	je	0xa21d


0xa21d:	mov	rax, qword ptr [rsp]
0xa221:	add	rsp, 0x28
0xa225:	pop	rbx
0xa226:	pop	rbp
0xa227:	pop	r12
0xa229:	pop	r13
0xa22b:	pop	r14
0xa22d:	pop	r15
0xa22f:	ret	


0xa16a:	mov	r12, rax
0xa16d:	mov	byte ptr [rsp + 0x17], 0
0xa172:	xor	ebx, ebx
0xa174:	jmp	0xa1c7


0xa1c7:	mov	rsi, qword ptr [rsp + 8]
0xa1cc:	mov	rdx, r12
0xa1cf:	mov	rdi, r14
0xa1d2:	call	0x1ab0


0x1ab0:	jmp	qword ptr [rip + 0x20f31a]




0x3fa2:	lea	r8, [rip + 0x8670]
0x3fa9:	mov	r9, rax
0x3fac:	mov	ecx, 0x28e
0x3fb1:	xor	eax, eax
0x3fb3:	mov	edx, 1
0x3fb8:	mov	esi, 0x28e
0x3fbd:	mov	rdi, rbx
0x3fc0:	call	0x1a40


0x4cbe:	mov	r8, rbx
0x4cc1:	mov	rdx, rax
0x4cc4:	mov	rcx, rbp
0x4cc7:	xor	esi, esi
0x4cc9:	mov	edi, 1
0x4cce:	xor	eax, eax
0x4cd0:	call	0x4140


0x4d7e:	mov	r8, rbx
0x4d81:	mov	rdx, rax
0x4d84:	mov	rcx, rbp
0x4d87:	xor	esi, esi
0x4d89:	mov	edi, 1
0x4d8e:	xor	eax, eax
0x4d90:	call	0x4140


0x4579:	mov	r8, rbx
0x457c:	mov	rdx, rax
0x457f:	mov	rcx, r13
0x4582:	xor	esi, esi
0x4584:	xor	edi, edi
0x4586:	xor	eax, eax
0x4588:	call	0x4140


0x8def:	lea	rdx, [rip + 0x5c8a]
0x8df6:	mov	rcx, rax
0x8df9:	mov	r8d, 0x7e3
0x8dff:	mov	esi, 1
0x8e04:	mov	rdi, rbp
0x8e07:	xor	eax, eax
0x8e09:	call	0x1e30


0x8e0e:	lea	rsi, [rip + 0x59d3]
0x8e15:	xor	edi, edi
0x8e17:	mov	edx, 5
0x8e1c:	call	0x1b60


0x8e21:	mov	rsi, rbp
0x8e24:	mov	rdi, rax
0x8e27:	call	0x1ca0


0x1ca0:	jmp	qword ptr [rip + 0x20f222]




0x47dd:	sub	rsp, 8
0x47e1:	mov	rdi, qword ptr [rip + 0x20c918]
0x47e8:	mov	rdx, rax
0x47eb:	push	r13
0x47ed:	mov	rcx, rbx
0x47f0:	xor	eax, eax
0x47f2:	mov	r9, r12
0x47f5:	mov	r8, rbp
0x47f8:	mov	esi, 1
0x47fd:	call	0x1e30


0x4802:	mov	rbx, qword ptr [rip + 0x20cb17]
0x4809:	pop	rax
0x480a:	pop	rdx
0x480b:	test	rbx, rbx
0x480e:	jne	0x4840


0x4810:	cmp	dword ptr [rip + 0x20c805], 2
0x4817:	je	0x4830


0x4840:	lea	rdx, [rip + 0x7e53]
0x4847:	lea	rsi, [rip + 0x7e63]
0x484e:	mov	rcx, rbx
0x4851:	xor	edi, edi
0x4853:	mov	r8d, 5
0x4859:	call	0x1dd0


0x4830:	add	rsp, 8
0x4834:	pop	rbx
0x4835:	pop	rbp
0x4836:	pop	r12
0x4838:	pop	r13
0x483a:	ret	


0x4819:	add	rsp, 8
0x481d:	xor	edi, edi
0x481f:	pop	rbx
0x4820:	pop	rbp
0x4821:	pop	r12
0x4823:	pop	r13
0x4825:	jmp	0x3db0


0x49bf:	jmp	0x4960


0x8d6a:	mov	rbx, rax
0x8d6d:	call	0x1a80


0x8d72:	mov	esi, dword ptr [rax]
0x8d74:	mov	rdx, rbx
0x8d77:	xor	edi, edi
0x8d79:	xor	eax, eax
0x8d7b:	call	0x1d90


0x8d80:	call	0x1a70


0x506d:	mov	rdi, qword ptr [rip + 0x20c08c]
0x5074:	mov	rdx, rax
0x5077:	mov	rcx, rbx
0x507a:	mov	esi, 1
0x507f:	xor	eax, eax
0x5081:	call	0x1e30


0x5086:	mov	edi, ebp
0x5088:	call	0x1e10


0x1e10:	jmp	qword ptr [rip + 0x20f16a]




0x509b:	mov	rcx, rbx
0x509e:	mov	rdx, rbx
0x50a1:	mov	rsi, rax
0x50a4:	mov	edi, 1
0x50a9:	xor	eax, eax
0x50ab:	call	0x1d70


0x1d70:	jmp	qword ptr [rip + 0x20f1ba]




0xa273:	mov	rbx, rax
0xa276:	mov	rsi, rbp
0xa279:	mov	edi, 1
0xa27e:	call	0x8c90


0xa2be:	mov	rbx, rax
0xa2c1:	jmp	0xa276


0xa276:	mov	rsi, rbp
0xa279:	mov	edi, 1
0xa27e:	call	0x8c90


0x9354:	lea	rdx, [rip + 0x545c]
0x935b:	mov	rsi, rax
0x935e:	mov	edi, 1
0x9363:	xor	eax, eax
0x9365:	call	0x1d70


0x9627:	mov	edi, dword ptr [rip + 0x207a03]
0x962d:	lea	rdx, [rip + 0x3038]
0x9634:	mov	rcx, rax
0x9637:	xor	esi, esi
0x9639:	xor	eax, eax
0x963b:	call	0x1d90


0x9640:	call	0x1a70


0xa301:	mov	rdi, rax
0xa304:	mov	rsi, rbx
0xa307:	call	0x1ca0


0x6b87:	test	eax, eax
0x6b89:	js	0x6bc8


0x6bc8:	lea	r8, [rip + 0x75dd]
0x6bcf:	xor	edx, edx
0x6bd1:	mov	rsi, rsp
0x6bd4:	mov	rcx, r12
0x6bd7:	mov	rdi, rbx
0x6bda:	call	0x9650


0x6b8b:	lea	rdx, [rip + 0x763e]
0x6b92:	cdqe	
0x6b94:	mov	qword ptr [r12], 1
0x6b9c:	or	ebp, dword ptr [rdx + rax*4]
0x6b9f:	xor	eax, eax
0x6ba1:	mov	dword ptr [r13], ebp
0x6ba5:	mov	rcx, qword ptr [rsp + 8]
0x6baa:	xor	rcx, qword ptr fs:[0x28]
0x6bb3:	jne	0x6d11


0xa421:	test	rax, rax
0xa424:	js	0xa435


0xa435:	mov	rdx, rax
0xa438:	mov	rsi, r12
0xa43b:	mov	rdi, r14
0xa43e:	call	0xa250


0xa426:	add	rsp, 8
0xa42a:	pop	rbx
0xa42b:	pop	rbp
0xa42c:	pop	r12
0xa42e:	pop	r13
0xa430:	pop	r14
0xa432:	pop	r15
0xa434:	ret	


0xa4bb:	mov	rdx, rax
0xa4be:	mov	eax, 1
0xa4c3:	test	rdx, rdx
0xa4c6:	je	0xa4e5


0xa4e5:	add	rsp, 8
0xa4e9:	ret	


0xa4c8:	lea	rdi, [rip + 0x4771]
0xa4cf:	mov	ecx, 2
0xa4d4:	mov	rsi, rdx
0xa4d7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xa4d7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xa4d9:	seta	cl
0xa4dc:	sbb	cl, 0
0xa4df:	xor	eax, eax
0xa4e1:	test	cl, cl
0xa4e3:	jne	0xa4f0


0xa4f0:	lea	rdi, [rip + 0x474b]
0xa4f7:	mov	ecx, 6
0xa4fc:	mov	rsi, rdx
0xa4ff:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xa4ff:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xa501:	seta	al
0xa504:	sbb	al, 0
0xa506:	test	al, al
0xa508:	setne	al
0xa50b:	add	rsp, 8
0xa50f:	ret	


0xa05c:	test	al, al
0xa05e:	jne	0xa070


0xa060:	movzx	eax, byte ptr [r13]
0xa065:	mov	ebp, 1
0xa06a:	mov	dword ptr [rbx], eax
0xa06c:	nop	dword ptr [rax]
0xa070:	mov	rdx, qword ptr [rsp + 8]
0xa075:	xor	rdx, qword ptr fs:[0x28]
0xa07e:	mov	rax, rbp
0xa081:	jne	0xa08e


0xa51e:	test	rax, rax
0xa521:	je	0xa540


0xa540:	lea	rax, [rip + 0x4701]
0xa547:	add	rsp, 8
0xa54b:	ret	


0xa523:	cmp	byte ptr [rax], 0
0xa526:	lea	rdx, [rip + 0x471b]
0xa52d:	cmove	rax, rdx
0xa531:	add	rsp, 8
0xa535:	ret	


0x7050:	movzx	edx, byte ptr [rax]
0x7053:	and	edx, 0xffffffdf
0x7056:	cmp	dl, 0x55
0x7059:	je	0x70d0


0x70d0:	movzx	edx, byte ptr [rax + 1]
0x70d4:	and	edx, 0xffffffdf
0x70d7:	cmp	dl, 0x54
0x70da:	jne	0x7060


0x705b:	cmp	dl, 0x47
0x705e:	je	0x7080


0x70dc:	movzx	edx, byte ptr [rax + 2]
0x70e0:	and	edx, 0xffffffdf
0x70e3:	cmp	dl, 0x46
0x70e6:	jne	0x7060


0x7060:	lea	rax, [rip + 0x71f4]
0x7067:	lea	rdx, [rip + 0x71ef]
0x706e:	cmp	ebx, 9
0x7071:	cmovne	rax, rdx
0x7075:	add	rsp, 8
0x7079:	pop	rbx
0x707a:	pop	rbp
0x707b:	ret	


0x7080:	movzx	edx, byte ptr [rax + 1]
0x7084:	and	edx, 0xffffffdf
0x7087:	cmp	dl, 0x42
0x708a:	jne	0x7060


0x70ec:	cmp	byte ptr [rax + 3], 0x2d
0x70f0:	jne	0x7060


0x708c:	cmp	byte ptr [rax + 2], 0x31
0x7090:	jne	0x7060


0x70f6:	cmp	byte ptr [rax + 4], 0x38
0x70fa:	jne	0x7060


0x7092:	cmp	byte ptr [rax + 3], 0x38
0x7096:	jne	0x7060


0x7100:	cmp	byte ptr [rax + 5], 0
0x7104:	jne	0x7060


0x7098:	cmp	byte ptr [rax + 4], 0x30
0x709c:	jne	0x7060


0x710a:	cmp	byte ptr [rbp], 0x60
0x710e:	lea	rax, [rip + 0x7137]
0x7115:	lea	rdx, [rip + 0x7134]
0x711c:	cmovne	rax, rdx
0x7120:	add	rsp, 8
0x7124:	pop	rbx
0x7125:	pop	rbp
0x7126:	ret	


0x709e:	cmp	byte ptr [rax + 5], 0x33
0x70a2:	jne	0x7060


0x70a4:	cmp	byte ptr [rax + 6], 0x30
0x70a8:	jne	0x7060


0x70aa:	cmp	byte ptr [rax + 7], 0
0x70ae:	jne	0x7060


0x70b0:	cmp	byte ptr [rbp], 0x60
0x70b4:	lea	rax, [rip + 0x7199]
0x70bb:	lea	rdx, [rip + 0x7196]
0x70c2:	cmovne	rax, rdx
0x70c6:	add	rsp, 8
0x70ca:	pop	rbx
0x70cb:	pop	rbp
0x70cc:	ret	


0x936a:	lea	rsi, [rip + 0x545c]
0x9371:	mov	edx, 5
0x9376:	xor	edi, edi
0x9378:	call	0x1b60


0x937d:	lea	rcx, [rip + 0x455c]
0x9384:	lea	rdx, [rip + 0x33e7]
0x938b:	mov	rsi, rax
0x938e:	mov	edi, 1
0x9393:	xor	eax, eax
0x9395:	call	0x1d70


0x939a:	mov	rbx, qword ptr [rip + 0x207d27]
0x93a1:	lea	rsi, [rip + 0x5658]
0x93a8:	xor	edi, edi
0x93aa:	mov	edx, 5
0x93af:	call	0x1b60


0x93b4:	mov	rsi, rbx
0x93b7:	mov	rdi, rax
0x93ba:	pop	rbx
0x93bb:	jmp	0x1ca0


0x50b0:	mov	rbx, qword ptr [rip + 0x20c011]
0x50b7:	lea	rsi, [rip + 0x7b42]
0x50be:	mov	edx, 5
0x50c3:	xor	edi, edi
0x50c5:	call	0x1b60


0x50ca:	mov	rsi, rbx
0x50cd:	mov	rdi, rax
0x50d0:	call	0x1ca0


0x50d5:	mov	rbx, qword ptr [rip + 0x20bfec]
0x50dc:	lea	rsi, [rip + 0x7cbd]
0x50e3:	mov	edx, 5
0x50e8:	xor	edi, edi
0x50ea:	call	0x1b60


0x50ef:	mov	rsi, rbx
0x50f2:	mov	rdi, rax
0x50f5:	call	0x1ca0


0x50fa:	mov	rbx, qword ptr [rip + 0x20bfc7]
0x5101:	lea	rsi, [rip + 0x7f38]
0x5108:	mov	edx, 5
0x510d:	xor	edi, edi
0x510f:	call	0x1b60


0x5114:	mov	rsi, rbx
0x5117:	mov	rdi, rax
0x511a:	call	0x1ca0


0x511f:	mov	rbx, qword ptr [rip + 0x20bfa2]
0x5126:	lea	rsi, [rip + 0x803b]
0x512d:	mov	edx, 5
0x5132:	xor	edi, edi
0x5134:	call	0x1b60


0x5139:	mov	rsi, rbx
0x513c:	mov	rdi, rax
0x513f:	call	0x1ca0


0x5144:	mov	rbx, qword ptr [rip + 0x20bf7d]
0x514b:	lea	rsi, [rip + 0x8266]
0x5152:	mov	edx, 5
0x5157:	xor	edi, edi
0x5159:	call	0x1b60


0x515e:	mov	rsi, rbx
0x5161:	mov	rdi, rax
0x5164:	call	0x1ca0


0x5169:	mov	rbx, qword ptr [rip + 0x20bf58]
0x5170:	lea	rsi, [rip + 0x8361]
0x5177:	mov	edx, 5
0x517c:	xor	edi, edi
0x517e:	call	0x1b60


0x5183:	mov	rsi, rbx
0x5186:	mov	rdi, rax
0x5189:	call	0x1ca0


0x518e:	mov	rbx, qword ptr [rip + 0x20bf33]
0x5195:	lea	rsi, [rip + 0x83ac]
0x519c:	mov	edx, 5
0x51a1:	xor	edi, edi
0x51a3:	call	0x1b60


0x51a8:	mov	rsi, rbx
0x51ab:	mov	rdi, rax
0x51ae:	call	0x1ca0


0x51b3:	mov	rbx, qword ptr [rip + 0x20bf0e]
0x51ba:	lea	rsi, [rip + 0x83af]
0x51c1:	mov	edx, 5
0x51c6:	xor	edi, edi
0x51c8:	call	0x1b60


0x51cd:	mov	rsi, rbx
0x51d0:	mov	rdi, rax
0x51d3:	call	0x1ca0


0x51d8:	mov	rbx, qword ptr [rip + 0x20bee9]
0x51df:	lea	rsi, [rip + 0x83b2]
0x51e6:	mov	edx, 5
0x51eb:	xor	edi, edi
0x51ed:	call	0x1b60


0x51f2:	mov	rsi, rbx
0x51f5:	mov	rdi, rax
0x51f8:	call	0x1ca0


0x51fd:	mov	rbx, qword ptr [rip + 0x20bec4]
0x5204:	lea	rsi, [rip + 0x83bd]
0x520b:	mov	edx, 5
0x5210:	xor	edi, edi
0x5212:	call	0x1b60


0x5217:	mov	rsi, rbx
0x521a:	mov	rdi, rax
0x521d:	call	0x1ca0


0x5222:	mov	rbx, qword ptr [rip + 0x20be9f]
0x5229:	lea	rsi, [rip + 0x83c8]
0x5230:	mov	edx, 5
0x5235:	xor	edi, edi
0x5237:	call	0x1b60


0x523c:	mov	rsi, rbx
0x523f:	mov	rdi, rax
0x5242:	call	0x1ca0


0x5247:	mov	rbx, qword ptr [rip + 0x20be7a]
0x524e:	lea	rsi, [rip + 0x83e3]
0x5255:	mov	edx, 5
0x525a:	xor	edi, edi
0x525c:	call	0x1b60


0x5261:	mov	rsi, rbx
0x5264:	mov	rdi, rax
0x5267:	call	0x1ca0


0x526c:	mov	rbx, qword ptr [rip + 0x20be55]
0x5273:	lea	rsi, [rip + 0x83e6]
0x527a:	mov	edx, 5
0x527f:	xor	edi, edi
0x5281:	call	0x1b60


0x5286:	mov	rsi, rbx
0x5289:	mov	rdi, rax
0x528c:	call	0x1ca0


0x5291:	mov	rbx, qword ptr [rip + 0x20be30]
0x5298:	lea	rsi, [rip + 0x83e9]
0x529f:	mov	edx, 5
0x52a4:	xor	edi, edi
0x52a6:	call	0x1b60


0x52ab:	mov	rsi, rbx
0x52ae:	mov	rdi, rax
0x52b1:	call	0x1ca0


0x52b6:	mov	rbx, qword ptr [rip + 0x20be0b]
0x52bd:	lea	rsi, [rip + 0x8404]
0x52c4:	mov	edx, 5
0x52c9:	xor	edi, edi
0x52cb:	call	0x1b60


0x52d0:	mov	rsi, rbx
0x52d3:	mov	rdi, rax
0x52d6:	call	0x1ca0


0x52db:	mov	rbx, qword ptr [rip + 0x20bde6]
0x52e2:	lea	rsi, [rip + 0x841f]
0x52e9:	mov	edx, 5
0x52ee:	xor	edi, edi
0x52f0:	call	0x1b60


0x52f5:	mov	rsi, rbx
0x52f8:	mov	rdi, rax
0x52fb:	call	0x1ca0


0x5300:	mov	rbx, qword ptr [rip + 0x20bdc1]
0x5307:	lea	rsi, [rip + 0x8422]
0x530e:	mov	edx, 5
0x5313:	xor	edi, edi
0x5315:	call	0x1b60


0x531a:	mov	rsi, rbx
0x531d:	mov	rdi, rax
0x5320:	call	0x1ca0


0x5325:	mov	rbx, qword ptr [rip + 0x20bd9c]
0x532c:	lea	rsi, [rip + 0x843d]
0x5333:	mov	edx, 5
0x5338:	xor	edi, edi
0x533a:	call	0x1b60


0x533f:	mov	rsi, rbx
0x5342:	mov	rdi, rax
0x5345:	call	0x1ca0


0x534a:	mov	rbx, qword ptr [rip + 0x20bd77]
0x5351:	lea	rsi, [rip + 0x8458]
0x5358:	mov	edx, 5
0x535d:	xor	edi, edi
0x535f:	call	0x1b60


0x5364:	mov	rsi, rbx
0x5367:	mov	rdi, rax
0x536a:	call	0x1ca0


0x536f:	lea	rsi, [rip + 0x847a]
0x5376:	xor	edi, edi
0x5378:	mov	edx, 5
0x537d:	call	0x1b60


0x5382:	lea	rdx, [rip + 0x736e]
0x5389:	mov	rsi, rax
0x538c:	mov	edi, 1
0x5391:	xor	eax, eax
0x5393:	call	0x1d70


0x5398:	mov	rbx, qword ptr [rip + 0x20bd29]
0x539f:	lea	rsi, [rip + 0x84d2]
0x53a6:	mov	edx, 5
0x53ab:	xor	edi, edi
0x53ad:	call	0x1b60


0x53b2:	mov	rsi, rbx
0x53b5:	mov	rdi, rax
0x53b8:	call	0x1ca0


0x53bd:	mov	rbx, qword ptr [rip + 0x20bd04]
0x53c4:	lea	rsi, [rip + 0x84dd]
0x53cb:	mov	edx, 5
0x53d0:	xor	edi, edi
0x53d2:	call	0x1b60


0x53d7:	mov	rsi, rbx
0x53da:	mov	rdi, rax
0x53dd:	lea	rbx, [rip + 0x7310]
0x53e4:	call	0x1ca0


0x53e9:	lea	rax, [rip + 0x730c]
0x53f0:	lea	rcx, [rip + 0x7346]
0x53f7:	mov	qword ptr [rsp + 0x60], 0
0x5400:	mov	qword ptr [rsp + 0x68], 0
0x5409:	mov	rdx, rsp
0x540c:	mov	qword ptr [rsp], rax
0x5410:	lea	rax, [rip + 0x72e7]
0x5417:	mov	qword ptr [rsp + 0x30], rcx
0x541c:	lea	rcx, [rip + 0x7324]
0x5423:	mov	qword ptr [rsp + 8], rax
0x5428:	lea	rax, [rip + 0x7347]
0x542f:	mov	qword ptr [rsp + 0x40], rcx
0x5434:	lea	rcx, [rip + 0x7316]
0x543b:	mov	qword ptr [rsp + 0x10], rax
0x5440:	lea	rax, [rip + 0x72c7]
0x5447:	mov	qword ptr [rsp + 0x50], rcx
0x544c:	mov	qword ptr [rsp + 0x18], rax
0x5451:	lea	rax, [rip + 0x72cc]
0x5458:	mov	qword ptr [rsp + 0x20], rax
0x545d:	lea	rax, [rip + 0x72ca]
0x5464:	mov	qword ptr [rsp + 0x28], rax
0x5469:	mov	qword ptr [rsp + 0x38], rax
0x546e:	mov	qword ptr [rsp + 0x48], rax
0x5473:	mov	qword ptr [rsp + 0x58], rax
0x5478:	nop	dword ptr [rax + rax]
0x5480:	add	rdx, 0x10
0x5484:	mov	rdi, qword ptr [rdx]
0x5487:	test	rdi, rdi
0x548a:	je	0x549f


0x549f:	mov	r12, qword ptr [rdx + 8]
0x54a3:	xor	edi, edi
0x54a5:	mov	edx, 5
0x54aa:	lea	rsi, [rip + 0x72aa]
0x54b1:	test	r12, r12
0x54b4:	je	0x557b


0x548c:	mov	ecx, 3
0x5491:	mov	rsi, rbx
0x5494:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x557b:	call	0x1b60


0x54ba:	call	0x1b60


0x5494:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5496:	seta	al
0x5499:	sbb	al, 0
0x549b:	test	al, al
0x549d:	jne	0x5480


0x5480:	add	rdx, 0x10
0x5484:	mov	rdi, qword ptr [rdx]
0x5487:	test	rdi, rdi
0x548a:	je	0x549f


0x54bf:	lea	rcx, [rip + 0x841a]
0x54c6:	lea	rdx, [rip + 0x72a5]
0x54cd:	mov	rsi, rax
0x54d0:	mov	edi, 1
0x54d5:	xor	eax, eax
0x54d7:	call	0x1d70


0x54dc:	xor	esi, esi
0x54de:	mov	edi, 5
0x54e3:	call	0x1d60


0x54e8:	test	rax, rax
0x54eb:	je	0x5509


0x5509:	lea	rsi, [rip + 0x7274]
0x5510:	xor	edi, edi
0x5512:	mov	edx, 5
0x5517:	call	0x1b60


0x54ed:	lea	rsi, [rip + 0x728c]
0x54f4:	mov	edx, 3
0x54f9:	mov	rdi, rax
0x54fc:	call	0x1ab0


0x551c:	lea	rcx, [rip + 0x71d1]
0x5523:	lea	rdx, [rip + 0x83b6]
0x552a:	mov	rsi, rax
0x552d:	mov	edi, 1
0x5532:	xor	eax, eax
0x5534:	call	0x1d70


0x5539:	cmp	r12, rbx
0x553c:	lea	rcx, [rip + 0x71d5]
0x5543:	lea	rbx, [rip + 0x9257]
0x554a:	cmove	rbx, rcx
0x554e:	lea	rsi, [rip + 0x83fb]
0x5555:	xor	edi, edi
0x5557:	mov	edx, 5
0x555c:	call	0x1b60


0x5561:	mov	rcx, rbx
0x5564:	mov	rsi, rax
0x5567:	mov	rdx, r12
0x556a:	mov	edi, 1
0x556f:	xor	eax, eax
0x5571:	call	0x1d70


0x5576:	jmp	0x5086


0x5580:	lea	rcx, [rip + 0x8359]
0x5587:	lea	rdx, [rip + 0x71e4]
0x558e:	mov	rsi, rax
0x5591:	mov	edi, 1
0x5596:	xor	eax, eax
0x5598:	call	0x1d70


0x559d:	xor	esi, esi
0x559f:	mov	edi, 5
0x55a4:	call	0x1d60


0x55a9:	test	rax, rax
0x55ac:	je	0x55c6


0x55c6:	lea	rsi, [rip + 0x71b7]
0x55cd:	mov	edx, 5
0x55d2:	xor	edi, edi
0x55d4:	lea	r12, [rip + 0x7119]
0x55db:	lea	rbx, [rip + 0x7136]
0x55e2:	call	0x1b60


0x55ae:	lea	rsi, [rip + 0x71cb]
0x55b5:	mov	edx, 3
0x55ba:	mov	rdi, rax
0x55bd:	call	0x1ab0


0x55e7:	lea	rcx, [rip + 0x7106]
0x55ee:	lea	rdx, [rip + 0x82eb]
0x55f5:	mov	rsi, rax
0x55f8:	mov	edi, 1
0x55fd:	xor	eax, eax
0x55ff:	call	0x1d70


0x5604:	jmp	0x554e


0x554e:	lea	rsi, [rip + 0x83fb]
0x5555:	xor	edi, edi
0x5557:	mov	edx, 5
0x555c:	call	0x1b60


0xa30c:	mov	r15, qword ptr [r14]
0xa30f:	test	r15, r15
0xa312:	je	0xa3a8


0xa3a8:	mov	rdi, qword ptr [rip + 0x206d51]
0xa3af:	mov	rax, qword ptr [rdi + 0x28]
0xa3b3:	cmp	rax, qword ptr [rdi + 0x30]
0xa3b7:	jae	0xa3d8


0xa318:	xor	r13d, r13d
0xa31b:	xor	ebx, ebx
0xa31d:	jmp	0xa358


0xa3b9:	lea	rdx, [rax + 1]
0xa3bd:	mov	qword ptr [rdi + 0x28], rdx
0xa3c1:	mov	byte ptr [rax], 0xa
0xa3c4:	add	rsp, 8
0xa3c8:	pop	rbx
0xa3c9:	pop	rbp
0xa3ca:	pop	r12
0xa3cc:	pop	r13
0xa3ce:	pop	r14
0xa3d0:	pop	r15
0xa3d2:	ret	


0xa3d8:	add	rsp, 8
0xa3dc:	mov	esi, 0xa
0xa3e1:	pop	rbx
0xa3e2:	pop	rbp
0xa3e3:	pop	r12
0xa3e5:	pop	r13
0xa3e7:	pop	r14
0xa3e9:	pop	r15
0xa3eb:	jmp	0x1be0


0xa358:	test	rbx, rbx
0xa35b:	je	0xa320


0xa320:	mov	rdi, r15
0xa323:	add	rbx, 1
0xa327:	mov	r13, rbp
0xa32a:	call	0x8cb0


0xa35d:	mov	rdx, r12
0xa360:	mov	rsi, rbp
0xa363:	mov	rdi, r13
0xa366:	call	0x1c90


0xa36b:	test	eax, eax
0xa36d:	jne	0xa320


0xa36f:	mov	rdi, r15
0xa372:	add	rbx, 1
0xa376:	add	rbp, r12
0xa379:	call	0x8cb0


0x8e2c:	cmp	r12, 9
0x8e30:	ja	0x9170


0x8e36:	lea	rdx, [rip + 0x5c07]
0x8e3d:	movsxd	rax, dword ptr [rdx + r12*4]
0x8e41:	add	rax, rdx
0x8e44:	jmp	rax


0x9170:	mov	r10, qword ptr [rbx + 0x40]
0x9174:	mov	r9, qword ptr [rbx + 0x38]
0x9178:	mov	edx, 5
0x917d:	mov	rax, qword ptr [rbx + 0x10]
0x9181:	mov	r8, qword ptr [rbx + 8]
0x9185:	lea	rsi, [rip + 0x5834]
0x918c:	mov	r13, qword ptr [rbx + 0x30]
0x9190:	mov	r12, qword ptr [rbx + 0x28]
0x9194:	mov	r15, qword ptr [rbx + 0x20]
0x9198:	mov	r14, qword ptr [rbx + 0x18]
0x919c:	mov	qword ptr [rsp + 0x18], r10
0x91a1:	mov	qword ptr [rsp + 0x10], r9
0x91a6:	mov	qword ptr [rsp], rax
0x91aa:	mov	qword ptr [rsp + 8], r8
0x91af:	mov	rbx, qword ptr [rbx]
0x91b2:	jmp	0x8f42


0x8f42:	xor	edi, edi
0x8f44:	call	0x1b60


0x8f49:	mov	r10, qword ptr [rsp + 0x18]
0x8f4e:	push	r10
0x8f50:	jmp	0x8e94


0x8e94:	mov	r9, qword ptr [rsp + 0x18]
0x8e99:	mov	rdx, rax
0x8e9c:	mov	rcx, rbx
0x8e9f:	mov	esi, 1
0x8ea4:	mov	rdi, rbp
0x8ea7:	xor	eax, eax
0x8ea9:	push	r9
0x8eab:	push	r13
0x8ead:	push	r12
0x8eaf:	push	r15
0x8eb1:	push	r14
0x8eb3:	mov	r9, qword ptr [rsp + 0x30]
0x8eb8:	mov	r8, qword ptr [rsp + 0x38]
0x8ebd:	call	0x1e30


0x8ec2:	add	rsp, 0x30
0x8ec6:	add	rsp, 0x28
0x8eca:	pop	rbx
0x8ecb:	pop	rbp
0x8ecc:	pop	r12
0x8ece:	pop	r13
0x8ed0:	pop	r14
0x8ed2:	pop	r15
0x8ed4:	ret	


0x55c2:	test	eax, eax
0x55c4:	jne	0x5609


0x5609:	lea	r12, [rip + 0x70e4]
0x5610:	mov	r13, qword ptr [rip + 0x20bab1]
0x5617:	lea	rsi, [rip + 0x82ea]
0x561e:	xor	edi, edi
0x5620:	mov	edx, 5
0x5625:	call	0x1b60


0x562a:	mov	rsi, r13
0x562d:	mov	rdi, rax
0x5630:	call	0x1ca0


0x5635:	jmp	0x5509


0x5501:	test	eax, eax
0x5503:	jne	0x5610


0x5610:	mov	r13, qword ptr [rip + 0x20bab1]
0x5617:	lea	rsi, [rip + 0x82ea]
0x561e:	xor	edi, edi
0x5620:	mov	edx, 5
0x5625:	call	0x1b60


0xa1d7:	test	eax, eax
0xa1d9:	jne	0xa1b7


0xa1db:	mov	rdi, r14
0xa1de:	call	0x1b80


0xa1b7:	add	rbx, 1
0xa1bb:	add	rbp, r13
0xa1be:	mov	r14, qword ptr [r15 + rbx*8]
0xa1c2:	test	r14, r14
0xa1c5:	je	0xa208


0xa208:	cmp	byte ptr [rsp + 0x17], 0
0xa20d:	mov	rax, -2
0xa214:	cmove	rax, qword ptr [rsp]
0xa219:	mov	qword ptr [rsp], rax
0xa21d:	mov	rax, qword ptr [rsp]
0xa221:	add	rsp, 0x28
0xa225:	pop	rbx
0xa226:	pop	rbp
0xa227:	pop	r12
0xa229:	pop	r13
0xa22b:	pop	r14
0xa22d:	pop	r15
0xa22f:	ret	


0xa1e3:	cmp	rax, r12
0xa1e6:	je	0xa240


0xa240:	mov	qword ptr [rsp], rbx
0xa244:	jmp	0xa21d


0xa1e8:	cmp	qword ptr [rsp], -1
0xa1ed:	jne	0xa180


0xa1ef:	mov	qword ptr [rsp], rbx
0xa1f3:	add	rbx, 1
0xa1f7:	add	rbp, r13
0xa1fa:	mov	r14, qword ptr [r15 + rbx*8]
0xa1fe:	test	r14, r14
0xa201:	jne	0xa1c7


0xa180:	mov	rax, qword ptr [rsp + 0x18]
0xa185:	test	rax, rax
0xa188:	je	0xa230


0xa230:	mov	byte ptr [rsp + 0x17], 1
0xa235:	jmp	0xa1b7


0xa18e:	mov	rdi, qword ptr [rsp]
0xa192:	mov	rdx, r13
0xa195:	mov	rsi, rbp
0xa198:	imul	rdi, r13
0xa19c:	add	rdi, rax
0xa19f:	call	0x1c90


0xa1a4:	test	eax, eax
0xa1a6:	movzx	eax, byte ptr [rsp + 0x17]
0xa1ab:	mov	ecx, 1
0xa1b0:	cmovne	eax, ecx
0xa1b3:	mov	byte ptr [rsp + 0x17], al
0xa1b7:	add	rbx, 1
0xa1bb:	add	rbp, r13
0xa1be:	mov	r14, qword ptr [r15 + rbx*8]
0xa1c2:	test	r14, r14
0xa1c5:	je	0xa208


0x65c1:	mov	ecx, r12d
0x65c4:	mov	dword ptr [rsp + 0x20], ebx
0x65c8:	mov	r12, r14
0x65cb:	mov	rbx, r13
0x65ce:	mov	r8, qword ptr [rsp + 0x48]
0x65d3:	mov	r15, qword ptr [rsp + 0x38]
0x65d8:	mov	r13, qword ptr [rsp + 0x40]
0x65dd:	mov	r14d, ecx
0x65e0:	jmp	0x6622


0x6622:	movzx	eax, byte ptr [r15]
0x6626:	test	al, al
0x6628:	je	0x6637


0x6637:	cmp	rbp, r12
0x663a:	jbe	0x65e8


0x662a:	cmp	al, 0x7f
0x662c:	movzx	ebp, al
0x662f:	cmovae	rbp, r12
0x6633:	add	r15, 1
0x6637:	cmp	rbp, r12
0x663a:	jbe	0x65e8


0x65e8:	mov	rax, qword ptr [rsp + 0x18]
0x65ed:	sub	r12, rbp
0x65f0:	sub	r8, rbp
0x65f3:	mov	rdi, r8
0x65f6:	mov	rdx, rbp
0x65f9:	lea	rsi, [rax + r12]
0x65fd:	call	0x1ce0


0x663c:	mov	eax, r14d
0x663f:	mov	r15, r8
0x6642:	mov	r14, r12
0x6645:	mov	rsi, qword ptr [rsp + 0x18]
0x664a:	sub	r15, r14
0x664d:	mov	rdx, r14
0x6650:	mov	rdi, r15
0x6653:	mov	ebx, dword ptr [rsp + 0x20]
0x6657:	mov	r12d, eax
0x665a:	call	0x1ce0


0x665f:	jmp	0x64aa


0x6602:	test	r12, r12
0x6605:	mov	r8, rax
0x6608:	je	0x6b18


0x6b18:	mov	ebx, dword ptr [rsp + 0x20]
0x6b1c:	mov	r15, rax
0x6b1f:	mov	r12d, r14d
0x6b22:	jmp	0x64aa


0x660e:	sub	r8, r13
0x6611:	mov	rdx, r13
0x6614:	mov	rsi, rbx
0x6617:	mov	rdi, r8
0x661a:	call	0x1ce0


0x661f:	mov	r8, rax
0x6622:	movzx	eax, byte ptr [r15]
0x6626:	test	al, al
0x6628:	je	0x6637


0x3fc5:	test	rbp, rbp
0x3fc8:	pxor	xmm0, xmm0
0x3fcc:	lea	r8, [rip + 0x8638]
0x3fd3:	je	0x3eaf


0x3ed3:	mov	rdi, r12
0x3ed6:	call	0x1b80


0x3edb:	cmp	byte ptr [r12 + rax - 2], 0x20
0x3ee1:	je	0x4060


0x4060:	mov	r12, qword ptr [rip + 0x20d2f1]
0x4067:	lea	rdx, [rip + 0x85b2]
0x406e:	lea	rsi, [rip + 0x85c4]
0x4075:	mov	r8d, 5
0x407b:	xor	edi, edi
0x407d:	mov	rcx, r12
0x4080:	call	0x1dd0


0x3ee7:	mov	rdi, r13
0x3eea:	call	0x1b80


0x3eef:	cmp	byte ptr [r13 + rax - 2], 0x20
0x3ef5:	mov	r15, qword ptr [rip + 0x20d45c]
0x3efc:	mov	edx, 5
0x3f01:	je	0x4040


0x4040:	lea	rsi, [rip + 0x860a]
0x4047:	xor	edi, edi
0x4049:	call	0x1b60


0x3f07:	lea	rsi, [rip + 0x8a7a]
0x3f0e:	xor	edi, edi
0x3f10:	call	0x1b60


0x3f15:	push	rbx
0x3f16:	push	r14
0x3f18:	mov	r9, r13
0x3f1b:	mov	rdi, qword ptr [rip + 0x20d1de]
0x3f22:	mov	rdx, rax
0x3f25:	mov	r8, r12
0x3f28:	mov	rcx, r15
0x3f2b:	mov	esi, 1
0x3f30:	xor	eax, eax
0x3f32:	call	0x1e30


0x3f37:	mov	ebx, eax
0x3f39:	pop	rax
0x3f3a:	pop	rdx
0x3f3b:	test	rbp, rbp
0x3f3e:	je	0x4008


0x4008:	mov	rdi, qword ptr [rip + 0x20d0f1]
0x400f:	mov	rax, qword ptr [rdi + 0x28]
0x4013:	cmp	rax, qword ptr [rdi + 0x30]
0x4017:	jae	0x4100


0x3f44:	test	ebx, ebx
0x3f46:	js	0x3f56


0x401d:	lea	rdx, [rax + 1]
0x4021:	mov	qword ptr [rdi + 0x28], rdx
0x4025:	mov	byte ptr [rax], 0xa
0x4028:	jmp	0x3f5c


0x4100:	mov	esi, 0xa
0x4105:	call	0x1be0


0x3f56:	mov	dword ptr [rip + 0x20d3e4], ebx
0x3f5c:	mov	rax, qword ptr [rsp + 0x7d8]
0x3f64:	xor	rax, qword ptr fs:[0x28]
0x3f6d:	jne	0x4132


0x3f48:	mov	ecx, dword ptr [rip + 0x20d3f2]
0x3f4e:	cmp	ecx, ebx
0x3f50:	jg	0x40d8


0x3f5c:	mov	rax, qword ptr [rsp + 0x7d8]
0x3f64:	xor	rax, qword ptr fs:[0x28]
0x3f6d:	jne	0x4132


0x3f73:	add	rsp, 0x7e8
0x3f7a:	pop	rbx
0x3f7b:	pop	rbp
0x3f7c:	pop	r12
0x3f7e:	pop	r13
0x3f80:	pop	r14
0x3f82:	pop	r15
0x3f84:	ret	


0x4132:	call	0x1b90


0x40d8:	mov	rdi, qword ptr [rip + 0x20d021]
0x40df:	lea	r8, [rip + 0xa6bb]
0x40e6:	lea	rdx, [rip + 0x8582]
0x40ed:	sub	ecx, ebx
0x40ef:	mov	esi, 1
0x40f4:	xor	eax, eax
0x40f6:	call	0x1e30


0x40fb:	jmp	0x3f56


0x410a:	jmp	0x3f5c


0x404e:	sub	rsp, 8
0x4052:	mov	r9, r14
0x4055:	push	rbx
0x4056:	jmp	0x3f1b


0x3f1b:	mov	rdi, qword ptr [rip + 0x20d1de]
0x3f22:	mov	rdx, rax
0x3f25:	mov	r8, r12
0x3f28:	mov	rcx, r15
0x3f2b:	mov	esi, 1
0x3f30:	xor	eax, eax
0x3f32:	call	0x1e30


0x62e6:	mov	rdi, r14
0x62e9:	call	0x1b80


0x62ee:	pop	rcx
0x62ef:	pop	rsi
0x62f0:	cmp	rax, qword ptr [rsp + 0x18]
0x62f5:	mov	r14, rax
0x62f8:	fld	xword ptr [rsp + 0x20]
0x62fc:	ja	0x68a8


0x6302:	test	r12b, 8
0x6306:	je	0x6470


0x68a8:	fld	dword ptr [rip + 0x793e]
0x68ae:	fmul	st(1), st(0)
0x68b0:	fld	xword ptr [rip + 0x793a]
0x68b6:	fucomip	st(2)
0x68b8:	jbe	0x6863


0x6470:	fstp	st(0)
0x6472:	jmp	0x6480


0x630c:	mov	rax, qword ptr [rsp]
0x6310:	cmp	byte ptr [rax + r14 - 1], 0x30
0x6316:	jne	0x6478


0x6863:	fdivp	st(1)
0x6865:	sub	rsp, 0x10
0x6869:	lea	rcx, [rip + 0x791b]
0x6870:	mov	r14, qword ptr [rsp + 0x10]
0x6875:	mov	rdx, -1
0x687c:	mov	esi, 1
0x6881:	xor	eax, eax
0x6883:	xor	ebp, ebp
0x6885:	mov	rdi, r14
0x6888:	fstp	xword ptr [rsp]
0x688b:	call	0x1e90


0x68ba:	fstp	dword ptr [rsp + 0x18]
0x68be:	sub	rsp, 0x10
0x68c2:	mov	edi, r15d
0x68c5:	fstp	xword ptr [rsp]
0x68c8:	call	0x6050


0x6480:	mov	r15, qword ptr [rsp + 8]
0x6485:	mov	rsi, qword ptr [rsp]
0x6489:	mov	rdx, r14
0x648c:	sub	r15, r14
0x648f:	sub	r14, rbp
0x6492:	mov	rdi, r15
0x6495:	call	0x1d80


0x631c:	fld	dword ptr [rip + 0x7eca]
0x6322:	cmp	r15d, 1
0x6326:	fmul	st(1), st(0)
0x6328:	jne	0x68b0


0x6478:	fstp	st(0)
0x647a:	nop	word ptr [rax + rax]
0x6480:	mov	r15, qword ptr [rsp + 8]
0x6485:	mov	rsi, qword ptr [rsp]
0x6489:	mov	rdx, r14
0x648c:	sub	r15, r14
0x648f:	sub	r14, rbp
0x6492:	mov	rdi, r15
0x6495:	call	0x1d80


0x1d80:	jmp	qword ptr [rip + 0x20f1b2]


0x632e:	jmp	0x6863


0x68b0:	fld	xword ptr [rip + 0x793a]
0x68b6:	fucomip	st(2)
0x68b8:	jbe	0x6863




0x68cd:	pop	rbp
0x68ce:	pop	r14
0x68d0:	fld	dword ptr [rsp + 0x18]
0x68d4:	jmp	0x6863


0x6890:	mov	rdi, r14
0x6893:	call	0x1b80


0x6898:	pop	r10
0x689a:	mov	r14, rax
0x689d:	pop	r11
0x689f:	jmp	0x6480


0x683f:	mov	rdi, r14
0x6842:	call	0x1b80


0x6847:	mov	r14, rax
0x684a:	pop	rax
0x684b:	pop	rdx
0x684c:	cmp	r14, qword ptr [rsp + 0x18]
0x6851:	fld	xword ptr [rsp + 0x20]
0x6855:	jbe	0x6302


0x685b:	fld	dword ptr [rip + 0x798b]
0x6861:	fmul	st(1), st(0)
0x6863:	fdivp	st(1)
0x6865:	sub	rsp, 0x10
0x6869:	lea	rcx, [rip + 0x791b]
0x6870:	mov	r14, qword ptr [rsp + 0x10]
0x6875:	mov	rdx, -1
0x687c:	mov	esi, 1
0x6881:	xor	eax, eax
0x6883:	xor	ebp, ebp
0x6885:	mov	rdi, r14
0x6888:	fstp	xword ptr [rsp]
0x688b:	call	0x1e90


0x6457:	mov	rdi, rbx
0x645a:	mov	ebx, 0xffffffff
0x645f:	call	0x1b80


0x6464:	pop	rsi
0x6465:	pop	rdi
0x6466:	mov	r14, rax
0x6469:	jmp	0x6480


0x9c94:	test	eax, eax
0x9c96:	je	0x9cd4


0x9c98:	call	0x1a80


0x9c9d:	mov	r12d, dword ptr [rax]
0x9ca0:	mov	rdi, rbx
0x9ca3:	mov	rbp, rax
0x9ca6:	call	0x1b40


0x9cab:	test	r12d, r12d
0x9cae:	jne	0x9ce0


0x9cb0:	pop	rbx
0x9cb1:	pop	rbp
0x9cb2:	pop	r12
0x9cb4:	ret	


0x9ce0:	mov	dword ptr [rbp], r12d
0x9ce4:	mov	eax, 0xffffffff
0x9ce9:	jmp	0x9cb0


0x854d:	mov	dword ptr [rbp], r12d
0x8551:	pop	rbx
0x8552:	pop	rbp
0x8553:	pop	r12
0x8555:	ret	


0x840e:	mov	dword ptr [rip + 0x208c63], r12d
0x8415:	mov	eax, dword ptr [rbp + 4]
0x8418:	shl	r15, 4
0x841c:	sub	rsp, 8
0x8420:	add	rbx, r15
0x8423:	lea	r15, [rbp + 8]
0x8427:	mov	r8d, dword ptr [rbp]
0x842b:	mov	r11, qword ptr [rbx]
0x842e:	mov	r12, qword ptr [rbx + 8]
0x8432:	mov	rcx, r14
0x8435:	or	eax, 1
0x8438:	mov	dword ptr [rsp + 0x24], eax
0x843c:	push	qword ptr [rbp + 0x30]
0x843f:	mov	r9d, eax
0x8442:	push	qword ptr [rbp + 0x28]
0x8445:	push	r15
0x8447:	mov	rsi, r11
0x844a:	mov	rdx, qword ptr [rsp + 0x28]
0x844f:	mov	rdi, r12
0x8452:	mov	qword ptr [rsp + 0x30], r11
0x8457:	call	0x7130


0x96aa:	mov	edx, dword ptr [rsp + 8]
0x96ae:	mov	rsi, qword ptr [rax]
0x96b1:	mov	rax, rbp
0x96b4:	jmp	0x96c7


0x96c7:	movzx	ecx, bl
0x96ca:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0x96cf:	jne	0x96c0


0x96d1:	cmp	bl, 0x2d
0x96d4:	je	0x9728


0x96c0:	add	rax, 1
0x96c4:	movzx	ebx, byte ptr [rax]
0x96c7:	movzx	ecx, bl
0x96ca:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0x96cf:	jne	0x96c0


0x9728:	mov	ebp, 4
0x972d:	mov	rdi, qword ptr [rsp + 0x18]
0x9732:	xor	rdi, qword ptr fs:[0x28]
0x973b:	mov	eax, ebp
0x973d:	jne	0x99d0


0x96d6:	xor	ecx, ecx
0x96d8:	mov	rsi, r15
0x96db:	mov	rdi, rbp
0x96de:	call	0x1c30


0x9743:	add	rsp, 0x28
0x9747:	pop	rbx
0x9748:	pop	rbp
0x9749:	pop	r12
0x974b:	pop	r13
0x974d:	pop	r14
0x974f:	pop	r15
0x9751:	ret	


0x99d0:	call	0x1b90


0x1c30:	jmp	qword ptr [rip + 0x20f25a]




0x5f2d:	mov	r12d, eax
0x5f30:	call	0x1a80


0x5f35:	mov	r13d, dword ptr [rax]
0x5f38:	mov	rbp, rax
0x5f3b:	mov	edi, ebx
0x5f3d:	call	0x1c60


0x5f42:	mov	ebx, r12d
0x5f45:	mov	dword ptr [rbp], r13d
0x5f49:	add	rsp, 8
0x5f4d:	mov	eax, ebx
0x5f4f:	pop	rbx
0x5f50:	pop	rbp
0x5f51:	pop	r12
0x5f53:	pop	r13
0x5f55:	ret	


0x5dca:	and	ebx, 0x20
0x5dcd:	test	ebx, ebx
0x5dcf:	jne	0x5de8


0x5dd1:	test	eax, eax
0x5dd3:	je	0x5ddf


0x5de8:	test	eax, eax
0x5dea:	jne	0x5e08


0x5ddf:	pop	rbx
0x5de0:	pop	rbp
0x5de1:	pop	r12
0x5de3:	ret	


0x5dd5:	test	r12, r12
0x5dd8:	mov	eax, 0xffffffff
0x5ddd:	je	0x5e18


0x5dec:	call	0x1a80


0x5e08:	pop	rbx
0x5e09:	mov	eax, 0xffffffff
0x5e0e:	pop	rbp
0x5e0f:	pop	r12
0x5e11:	ret	


0x5e18:	call	0x1a80


0x5e1d:	cmp	dword ptr [rax], 9
0x5e20:	pop	rbx
0x5e21:	pop	rbp
0x5e22:	pop	r12
0x5e24:	setne	al
0x5e27:	movzx	eax, al
0x5e2a:	neg	eax
0x5e2c:	ret	


0x5df1:	mov	dword ptr [rax], 0
0x5df7:	mov	eax, 0xffffffff
0x5dfc:	pop	rbx
0x5dfd:	pop	rbp
0x5dfe:	pop	r12
0x5e00:	ret	


0x49e2:	jmp	0x4960


0x1ef5:	test	rbx, rbx
0x1ef8:	je	0x357a


0x357a:	lea	rdi, [rip + 0x20dcff]
0x3581:	mov	esi, 0xa
0x3586:	call	0x1e60


0x1efe:	lea	rax, [rsp + 0x40]
0x1f03:	xor	esi, esi
0x1f05:	mov	edi, 2
0x1f0a:	mov	rdx, rax
0x1f0d:	mov	qword ptr [rsp + 0x20], rax
0x1f12:	call	0x1ae0


0x1e60:	jmp	qword ptr [rip + 0x20f142]


0x1ae0:	jmp	qword ptr [rip + 0x20f302]






0x5933:	test	eax, eax
0x5935:	jne	0x5a45


0x593b:	mov	edx, dword ptr [rsp + 0x28]
0x593f:	xor	eax, eax
0x5941:	mov	rcx, qword ptr [rip + 0x20b9e8]
0x5948:	and	edx, 0xd000
0x594e:	cmp	edx, 0x8000
0x5954:	jne	0x5965


0x5a45:	mov	rsi, qword ptr [rsp]
0x5a49:	mov	edi, 4
0x5a4e:	call	0x89e0


0x5956:	mov	rsi, qword ptr [rsp + 0x40]
0x595b:	lea	rdx, [rbp + rcx]
0x5960:	cmp	rsi, rdx
0x5963:	jb	0x598b


0x5965:	add	rbp, rcx
0x5968:	mov	qword ptr [rip + 0x20b9c1], rbp
0x596f:	jae	0x57ca


0x598b:	mov	rax, rbp
0x598e:	xor	edx, edx
0x5990:	sub	rax, rsi
0x5993:	sub	rsi, rcx
0x5996:	div	r12
0x5999:	mov	rbp, rsi
0x599c:	jmp	0x5965


0x5975:	mov	byte ptr [rip + 0x20b9ad], 1
0x597c:	jmp	0x57ca


0x57ca:	mov	rcx, qword ptr [rsp + 0xa8]
0x57d2:	xor	rcx, qword ptr fs:[0x28]
0x57db:	jne	0x5a40


0x4439:	test	eax, eax
0x443b:	jne	0x4458


0x443d:	mov	eax, dword ptr [rsp + 0x18]
0x4441:	and	eax, 0xf000
0x4446:	cmp	eax, 0x4000
0x444b:	je	0x4497


0x4497:	and	ebx, 0xfffeffff
0x449d:	cmp	ebx, r12d
0x44a0:	jne	0x4413


0x444d:	call	0x1a80


0x44a6:	jmp	0x43ca


0x4452:	mov	dword ptr [rax], 0x14
0x4458:	mov	rsi, r13
0x445b:	mov	edi, 4
0x4460:	call	0x89e0


0x4085:	mov	rdi, qword ptr [rip + 0x20d074]
0x408c:	mov	r9, rbx
0x408f:	mov	rdx, rax
0x4092:	mov	r8, r14
0x4095:	mov	rcx, r12
0x4098:	mov	esi, 1
0x409d:	xor	eax, eax
0x409f:	call	0x1e30


0x40a4:	mov	ebx, eax
0x40a6:	jmp	0x3f3b


0x3f3b:	test	rbp, rbp
0x3f3e:	je	0x4008


0x485e:	mov	rdi, qword ptr [rip + 0x20c89b]
0x4865:	mov	rdx, rax
0x4868:	mov	rcx, rbx
0x486b:	mov	esi, 1
0x4870:	xor	eax, eax
0x4872:	call	0x1e30


0x4877:	jmp	0x4810


0x4b4d:	mov	rcx, r12
0x4b50:	mov	rdx, rax
0x4b53:	xor	esi, esi
0x4b55:	xor	edi, edi
0x4b57:	xor	eax, eax
0x4b59:	call	0x4140


0x420f:	mov	rax, qword ptr [rsp + 0x28]
0x4214:	xor	rax, qword ptr fs:[0x28]
0x421d:	jne	0x4246


0x421f:	add	rsp, 0xe8
0x4226:	pop	rbx
0x4227:	pop	rbp
0x4228:	ret	


0x4246:	call	0x1b90


0x9306:	mov	rax, qword ptr [rsp + 0x78]
0x930b:	xor	rax, qword ptr fs:[0x28]
0x9314:	jne	0x9320


0x9316:	add	rsp, 0xb8
0x931d:	pop	rbx
0x931e:	pop	rbp
0x931f:	ret	


0x9320:	call	0x1b90


0x9230:	mov	rax, qword ptr [rsp + 0x58]
0x9235:	xor	rax, qword ptr fs:[0x28]
0x923e:	jne	0x9245


0x9240:	add	rsp, 0x68
0x9244:	ret	


0x9245:	call	0x1b90


0x6f50:	xor	edi, edi
0x6f52:	call	0x1e10


0x6e40:	xor	edi, edi
0x6e42:	call	0x1e10


0x6bdf:	test	eax, eax
0x6be1:	jne	0x6c28


0x6be3:	movzx	esi, byte ptr [rbx]
0x6be6:	lea	edx, [rsi - 0x30]
0x6be9:	cmp	dl, 9
0x6bec:	jbe	0x6c18


0x6c28:	mov	rdx, qword ptr [r12]
0x6c2c:	mov	dword ptr [r13], 0
0x6c34:	test	rdx, rdx
0x6c37:	jne	0x6ba5


0x6c18:	mov	rdx, qword ptr [r12]
0x6c1c:	mov	dword ptr [r13], ebp
0x6c20:	jmp	0x6c34


0x6bee:	mov	rcx, qword ptr [rsp]
0x6bf2:	cmp	rbx, rcx
0x6bf5:	jne	0x6c09


0x6c3d:	lea	rdi, [rip + 0x5bf8]
0x6c44:	call	0x1a20


0x6c34:	test	rdx, rdx
0x6c37:	jne	0x6ba5


0x6bf7:	jmp	0x6cd0


0x6c09:	add	rbx, 1
0x6c0d:	movzx	edi, byte ptr [rbx]
0x6c10:	lea	edx, [rdi - 0x30]
0x6c13:	cmp	dl, 9
0x6c16:	ja	0x6c00


0x6cd0:	cmp	byte ptr [rcx - 1], 0x42
0x6cd4:	je	0x6ce8


0x6c00:	cmp	rbx, rcx
0x6c03:	je	0x6cd0


0x6ce8:	or	ebp, 0x180
0x6cee:	cmp	byte ptr [rcx - 2], 0x69
0x6cf2:	jne	0x6c18


0x6cd6:	or	bpl, 0x80
0x6cda:	or	ebp, 0x20
0x6cdd:	jmp	0x6c18


0x6cf8:	jmp	0x6cda


0x6cda:	or	ebp, 0x20
0x6cdd:	jmp	0x6c18


0x6c49:	cmp	rax, 1
0x6c4d:	sbb	rax, rax
0x6c50:	and	eax, 0x200
0x6c55:	add	rax, 0x200
0x6c5b:	mov	qword ptr [r12], rax
0x6c5f:	mov	eax, 4
0x6c64:	jmp	0x6ba5


0x428b:	cmp	eax, 2
0x428e:	mov	edx, eax
0x4290:	je	0x42c0


0x42c0:	mov	rdi, qword ptr [rsp + 0x10]
0x42c5:	cmp	byte ptr [rdi], 0x78
0x42c8:	je	0x42d8


0x4292:	test	edx, edx
0x4294:	mov	rax, qword ptr [rsp + 8]
0x4299:	jne	0x42ca


0x42d8:	add	rdi, 1
0x42dc:	mov	rsi, r12
0x42df:	call	0x4250


0x42ca:	mov	dword ptr [r12], edx
0x42ce:	xor	eax, eax
0x42d0:	jmp	0x429b


0x429b:	mov	rbx, qword ptr [rsp + 0x18]
0x42a0:	xor	rbx, qword ptr fs:[0x28]
0x42a9:	jne	0x4390


0x42af:	add	rsp, 0x28
0x42b3:	pop	rbx
0x42b4:	pop	rbp
0x42b5:	pop	r12
0x42b7:	pop	r13
0x42b9:	ret	


0x4390:	call	0x1b90


0x42e4:	test	rax, rax
0x42e7:	mov	rbx, rax
0x42ea:	je	0x4310


0x4310:	mov	rax, qword ptr [rsp + 8]
0x4315:	test	rax, rax
0x4318:	jne	0x4338


0x42ec:	mov	rcx, qword ptr [rsp + 8]
0x42f1:	xor	edx, edx
0x42f3:	mov	rax, rcx
0x42f6:	imul	rax, rbx
0x42fa:	div	rbx
0x42fd:	cmp	rcx, rax
0x4300:	je	0x4315


0x431a:	lea	r12, [rip + 0x8361]
0x4321:	mov	ecx, 2
0x4326:	mov	rsi, rbp
0x4329:	mov	rdi, r12
0x432c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x4338:	imul	rax, rbx
0x433c:	jmp	0x429b


0x4315:	test	rax, rax
0x4318:	jne	0x4338


0x4302:	mov	dword ptr [r12], 1
0x430a:	xor	eax, eax
0x430c:	jmp	0x429b


0x432c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x432e:	seta	dl
0x4331:	sbb	dl, 0
0x4334:	test	dl, dl
0x4336:	je	0x4341


0x4341:	lea	rsi, [rip + 0x8339]
0x4348:	mov	edi, 1
0x434d:	call	0x8c90


0x4749:	test	eax, eax
0x474b:	jne	0x475d


0x474d:	add	rsp, 8
0x4751:	ret	


0x475d:	mov	edi, 1
0x4762:	call	0x1ac0


0x1ac0:	jmp	qword ptr [rip + 0x20f312]




0x5e62:	test	eax, eax
0x5e64:	je	0x5e7c


0x5e7c:	mov	rdi, qword ptr [rip + 0x20b27d]
0x5e83:	call	0x5db0


0x5e66:	call	0x1a80


0x5e6b:	cmp	byte ptr [rip + 0x20b57e], 0
0x5e72:	mov	rbx, rax
0x5e75:	je	0x5e93


0x5e93:	lea	rsi, [rip + 0x82e3]
0x5e9a:	xor	edi, edi
0x5e9c:	mov	edx, 5
0x5ea1:	call	0x1b60


0x5e77:	cmp	dword ptr [rax], 0x20
0x5e7a:	jne	0x5e93


0x5ea6:	mov	rdi, qword ptr [rip + 0x20b54b]
0x5ead:	mov	rbp, rax
0x5eb0:	test	rdi, rdi
0x5eb3:	je	0x5edd


0x5edd:	mov	esi, dword ptr [rbx]
0x5edf:	lea	rdx, [rip + 0x6786]
0x5ee6:	mov	rcx, rax
0x5ee9:	xor	edi, edi
0x5eeb:	xor	eax, eax
0x5eed:	call	0x1d90


0x5eb5:	call	0x8ab0


0x5ef2:	jmp	0x5ed2


0x5ed2:	mov	edi, dword ptr [rip + 0x20b158]
0x5ed8:	call	0x1ac0


0x5e88:	test	eax, eax
0x5e8a:	jne	0x5ed2


0x5e8c:	add	rsp, 8
0x5e90:	pop	rbx
0x5e91:	pop	rbp
0x5e92:	ret	


0x4767:	nop	word ptr [rax + rax]


0x1f17:	cmp	qword ptr [rsp + 0x40], 1
0x1f1d:	je	0x1f30


0x1f30:	movdqa	xmm0, xmmword ptr [rip + 0x20f348]
0x1f38:	lea	rdi, [rip + 0x20f341]
0x1f3f:	mov	esi, 0xa
0x1f44:	movups	xmmword ptr [rsp + 0x48], xmm0
0x1f49:	movdqa	xmm0, xmmword ptr [rip + 0x20f33f]
0x1f51:	movups	xmmword ptr [rsp + 0x58], xmm0
0x1f56:	movdqa	xmm0, xmmword ptr [rip + 0x20f342]
0x1f5e:	movups	xmmword ptr [rsp + 0x68], xmm0
0x1f63:	movdqa	xmm0, xmmword ptr [rip + 0x20f345]
0x1f6b:	movups	xmmword ptr [rsp + 0x78], xmm0
0x1f70:	movdqa	xmm0, xmmword ptr [rip + 0x20f348]
0x1f78:	movups	xmmword ptr [rsp + 0x88], xmm0
0x1f80:	movdqa	xmm0, xmmword ptr [rip + 0x20f348]
0x1f88:	movups	xmmword ptr [rsp + 0x98], xmm0
0x1f90:	movdqa	xmm0, xmmword ptr [rip + 0x20f348]
0x1f98:	movups	xmmword ptr [rsp + 0xa8], xmm0
0x1fa0:	movdqa	xmm0, xmmword ptr [rip + 0x20f348]
0x1fa8:	movups	xmmword ptr [rsp + 0xb8], xmm0
0x1fb0:	call	0x1e00


0x1f1f:	lea	rdi, [rip + 0x20f35a]
0x1f26:	mov	esi, 2
0x1f2b:	call	0x1e60


0x1e00:	jmp	qword ptr [rip + 0x20f172]




0x358b:	jmp	0x1efe


0x96e3:	mov	rcx, qword ptr [r15]
0x96e6:	mov	rbx, rax
0x96e9:	cmp	rcx, rbp
0x96ec:	je	0x9718


0x9718:	test	r13, r13
0x971b:	mov	qword ptr [rsp + 8], rcx
0x9720:	jne	0x9760


0x96ee:	mov	eax, dword ptr [r12]
0x96f2:	test	eax, eax
0x96f4:	je	0x9758


0x9760:	movzx	r12d, byte ptr [rbp]
0x9765:	test	r12b, r12b
0x9768:	je	0x9728


0x9758:	xor	ebp, ebp
0x975a:	jmp	0x9700


0x96f6:	cmp	eax, 0x22
0x96f9:	mov	ebp, 1
0x96fe:	jne	0x9728


0x976a:	movsx	esi, r12b
0x976e:	mov	rdi, r13
0x9771:	xor	ebp, ebp
0x9773:	call	0x1bd0


0x9700:	test	r13, r13
0x9703:	je	0x970e


0x970e:	mov	qword ptr [r14], rbx
0x9711:	jmp	0x972d


0x9705:	movzx	r12d, byte ptr [rcx]
0x9709:	test	r12b, r12b
0x970c:	jne	0x9787


0x972d:	mov	rdi, qword ptr [rsp + 0x18]
0x9732:	xor	rdi, qword ptr fs:[0x28]
0x973b:	mov	eax, ebp
0x973d:	jne	0x99d0


0x9787:	movsx	esi, r12b
0x978b:	mov	rdi, r13
0x978e:	mov	qword ptr [rsp + 8], rcx
0x9793:	call	0x1bd0


0x9798:	test	rax, rax
0x979b:	mov	rcx, qword ptr [rsp + 8]
0x97a0:	je	0x986c


0x986c:	mov	qword ptr [r14], rbx
0x986f:	or	ebp, 2
0x9872:	jmp	0x972d


0x97a6:	lea	eax, [r12 - 0x45]
0x97ab:	cmp	al, 0x2f
0x97ad:	ja	0x9800


0x97af:	movabs	rdx, 0x814400308945
0x97b9:	bt	rdx, rax
0x97bd:	jae	0x9800


0x9800:	mov	edi, 1
0x9805:	mov	esi, 0x400
0x980a:	sub	r12d, 0x42
0x980e:	cmp	r12b, 0x35
0x9812:	ja	0x986c


0x97bf:	mov	esi, 0x30
0x97c4:	mov	rdi, r13
0x97c7:	mov	qword ptr [rsp + 8], rcx
0x97cc:	call	0x1bd0


0x9814:	lea	rdx, [rip + 0x52ed]
0x981b:	movzx	r12d, r12b
0x981f:	movsxd	rax, dword ptr [rdx + r12*4]
0x9823:	add	rax, rdx
0x9826:	jmp	rax


0x97d1:	test	rax, rax
0x97d4:	mov	rcx, qword ptr [rsp + 8]
0x97d9:	je	0x9800


0x97db:	movzx	eax, byte ptr [rcx + 1]
0x97df:	cmp	al, 0x44
0x97e1:	je	0x97ef


0x97ef:	mov	edi, 2
0x97f4:	mov	esi, 0x3e8
0x97f9:	jmp	0x980a


0x97e3:	cmp	al, 0x69
0x97e5:	je	0x99b8


0x980a:	sub	r12d, 0x42
0x980e:	cmp	r12b, 0x35
0x9812:	ja	0x986c


0x99b8:	xor	edi, edi
0x99ba:	cmp	byte ptr [rcx + 2], 0x42
0x99be:	mov	esi, 0x400
0x99c3:	sete	dil
0x99c7:	lea	edi, [rdi + rdi + 1]
0x99cb:	jmp	0x980a


0x97eb:	cmp	al, 0x42
0x97ed:	jne	0x9800


0x9778:	test	rax, rax
0x977b:	mov	ebx, 1
0x9780:	mov	rcx, qword ptr [rsp + 8]
0x9785:	je	0x9728


0x649a:	mov	r8, r14
0x649d:	add	r8, r15
0x64a0:	test	r12b, 4
0x64a4:	jne	0x6588


0x1fb5:	test	eax, eax
0x1fb7:	je	0x1fe1


0x1fe1:	lea	rdi, [rip + 0x20f298]
0x1fe8:	mov	esi, 2
0x1fed:	call	0x1e00


0x1fb9:	mov	rsi, qword ptr [rsp + 0x20]
0x1fbe:	lea	rax, [rip + 0x1ddb]
0x1fc5:	xor	edx, edx
0x1fc7:	mov	edi, 0xa
0x1fcc:	mov	dword ptr [rsp + 0xc8], 0
0x1fd7:	mov	qword ptr [rsp + 0x40], rax
0x1fdc:	call	0x1ae0


0x1ff2:	test	eax, eax
0x1ff4:	je	0x201e


0x201e:	mov	rdi, qword ptr [rbp]
0x2022:	lea	rbx, [rip + 0x20f137]
0x2029:	call	0x6fa0


0x1ff6:	mov	rsi, qword ptr [rsp + 0x20]
0x1ffb:	lea	rax, [rip + 0x1d8e]
0x2002:	xor	edx, edx
0x2004:	mov	edi, 2
0x2009:	mov	dword ptr [rsp + 0xc8], 0xc0000000
0x2014:	mov	qword ptr [rsp + 0x40], rax
0x2019:	call	0x1ae0


0x202e:	lea	rsi, [rip + 0xc76c]
0x2035:	mov	edi, 6
0x203a:	call	0x1d60


0x203f:	lea	rsi, [rip + 0xa806]
0x2046:	lea	rdi, [rip + 0xa729]
0x204d:	call	0x1b50


0x1b50:	jmp	qword ptr [rip + 0x20f2ca]




0x2052:	lea	rdi, [rip + 0xa71d]
0x2059:	call	0x1b30


0x1b30:	jmp	qword ptr [rip + 0x20f2da]




0x205e:	lea	rdi, [rip + 0x26cb]
0x2065:	call	0xc5e0


0x206a:	call	0x1df0


0x1df0:	jmp	qword ptr [rip + 0x20f17a]




0x206f:	cdqe	
0x2071:	sub	rsp, 8
0x2075:	mov	r8, qword ptr [rip + 0x20efac]
0x207c:	mov	qword ptr [rip + 0x20f355], rax
0x2083:	lea	rax, [rip + 0xa7da]
0x208a:	push	0
0x208c:	lea	rcx, [rip + 0xa6e3]
0x2093:	lea	rdx, [rip + 0xa65a]
0x209a:	mov	r9d, 1
0x20a0:	push	rax
0x20a1:	lea	rax, [rip + 0xa7c8]
0x20a8:	mov	rsi, rbp
0x20ab:	mov	edi, r12d
0x20ae:	push	rax
0x20af:	lea	rax, [rip + 0xa7ca]
0x20b6:	push	rax
0x20b7:	lea	rax, [rip + 0x2f72]
0x20be:	push	rax
0x20bf:	xor	eax, eax
0x20c1:	call	0x6e60


0x20c6:	mov	byte ptr [rip + 0x20ef4b], 0
0x20cd:	add	rsp, 0x30
0x20d1:	xor	eax, eax
0x20d3:	nop	dword ptr [rax + rax]
0x20d8:	mov	byte ptr [rbx + rax], al
0x20db:	add	rax, 1
0x20df:	cmp	rax, 0x100
0x20e5:	jne	0x20d8


0x20e7:	mov	eax, dword ptr [rip + 0x20efe3]
0x20ed:	cmp	r12d, eax
0x20f0:	jle	0x2a32


0x20d8:	mov	byte ptr [rbx + rax], al
0x20db:	add	rax, 1
0x20df:	cmp	rax, 0x100
0x20e5:	jne	0x20d8


0x2a32:	mov	qword ptr [rsp + 0x10], -1
0x2a3b:	mov	qword ptr [rsp + 8], 0
0x2a44:	xor	r12d, r12d
0x2a47:	or	dword ptr [rip + 0x20e93b], 0x800
0x2a51:	cmp	qword ptr [rip + 0x20e977], 0
0x2a59:	jne	0x2a66


0x20f6:	movsxd	rdx, eax
0x20f9:	not	eax
0x20fb:	mov	qword ptr [rsp + 8], 0
0x2104:	add	eax, r12d
0x2107:	lea	r14, [rbp + rdx*8]
0x210c:	xor	r12d, r12d
0x210f:	add	rax, rdx
0x2112:	mov	qword ptr [rsp + 0x10], -1
0x211b:	xor	r15d, r15d
0x211e:	lea	rbp, [rbp + rax*8 + 8]
0x2123:	lea	rax, [rsp + 0x38]
0x2128:	mov	qword ptr [rsp + 0x18], rax
0x212d:	nop	dword ptr [rax]
0x2130:	mov	r13, qword ptr [r14]
0x2133:	mov	esi, 0x3d
0x2138:	mov	rdi, r13
0x213b:	call	0x1bd0


0x2a5b:	mov	qword ptr [rip + 0x20e96a], 0x200
0x2a66:	cmp	qword ptr [rip + 0x20e95a], 0
0x2a6e:	jne	0x21b0


0x2a66:	cmp	qword ptr [rip + 0x20e95a], 0
0x2a6e:	jne	0x21b0


0x2a74:	mov	qword ptr [rip + 0x20e949], 0x200
0x2a7f:	jmp	0x21b0


0x21b0:	cmp	qword ptr [rip + 0x20f208], 0
0x21b8:	jne	0x21c1


0x21ba:	and	dword ptr [rip + 0x20f1cb], 0xffffffe7
0x21c1:	mov	eax, dword ptr [rip + 0x20f1c1]
0x21c7:	test	eax, 0x101000
0x21cc:	je	0x21d9


0x21c1:	mov	eax, dword ptr [rip + 0x20f1c1]
0x21c7:	test	eax, 0x101000
0x21cc:	je	0x21d9


0x21d9:	mov	esi, dword ptr [rip + 0x20f1a5]
0x21df:	test	sil, 1
0x21e3:	jne	0x3b83


0x21ce:	or	eax, 0x101000
0x21d3:	mov	dword ptr [rip + 0x20f1af], eax
0x21d9:	mov	esi, dword ptr [rip + 0x20f1a5]
0x21df:	test	sil, 1
0x21e3:	jne	0x3b83


0x21e9:	mov	ecx, dword ptr [rip + 0x20f199]
0x21ef:	test	cl, 0x10
0x21f2:	jne	0x3c5f


0x3b83:	lea	rdi, [rip + 0x8d68]
0x3b8a:	call	0x8cb0


0x21f8:	test	sil, 0xc
0x21fc:	jne	0x3c30


0x3c5f:	lea	rdi, [rip + 0x8c96]
0x3c66:	call	0x8cb0


0x2202:	test	cl, 8
0x2205:	mov	rax, qword ptr [rsp + 8]
0x220a:	je	0x2a1d


0x3c30:	lea	rax, [rip + 0x8bee]
0x3c37:	lea	rdi, [rip + 0x8bf3]
0x3c3e:	and	sil, 4
0x3c42:	cmovne	rdi, rax
0x3c46:	call	0x8cb0


0x2a1d:	test	rax, rax
0x2a20:	je	0x2219


0x2210:	test	rax, rax
0x2213:	jne	0x2a84


0x2219:	test	cl, 4
0x221c:	mov	rax, qword ptr [rsp + 0x10]
0x2221:	je	0x2a07


0x2a26:	mov	qword ptr [rip + 0x20e98b], rax
0x2a2d:	jmp	0x2219


0x2a84:	xor	edx, edx
0x2a86:	div	qword ptr [rip + 0x20e943]
0x2a8d:	mov	qword ptr [rip + 0x20e924], rax
0x2a94:	mov	qword ptr [rip + 0x20e915], rdx
0x2a9b:	jmp	0x2219


0x2a07:	cmp	rax, -1
0x2a0b:	je	0x2244


0x2227:	cmp	rax, -1
0x222b:	je	0x2244


0x2244:	test	sil, 0x10
0x2248:	je	0x29f2


0x2a11:	mov	qword ptr [rip + 0x20e608], rax
0x2a18:	jmp	0x2244


0x222d:	xor	edx, edx
0x222f:	div	qword ptr [rip + 0x20f19a]
0x2236:	mov	qword ptr [rip + 0x20ede3], rax
0x223d:	mov	qword ptr [rip + 0x20f14c], rdx
0x2244:	test	sil, 0x10
0x2248:	je	0x29f2


0x29f2:	test	r12, r12
0x29f5:	je	0x2257


0x224e:	test	r12, r12
0x2251:	jne	0x2ad7


0x2257:	mov	ebp, dword ptr [rip + 0x20f12f]
0x225d:	mov	eax, ecx
0x225f:	and	eax, 1
0x2262:	test	ebp, 0x800
0x2268:	jne	0x3004


0x29fb:	mov	qword ptr [rip + 0x20e9a6], r12
0x2a02:	jmp	0x2257


0x2ad7:	mov	rax, r12
0x2ada:	xor	edx, edx
0x2adc:	div	qword ptr [rip + 0x20e8e5]
0x2ae3:	mov	qword ptr [rip + 0x20e8be], rax
0x2aea:	mov	qword ptr [rip + 0x20e8af], rdx
0x2af1:	jmp	0x2257


0x226e:	test	eax, eax
0x2270:	je	0x2aa0


0x3004:	test	eax, eax
0x3006:	lea	rdx, [rip + 0x1b83]
0x300d:	lea	rax, [rip + 0x1a5c]
0x3014:	mov	byte ptr [rip + 0x20e30d], 0
0x301b:	cmovne	rax, rdx
0x301f:	jmp	0x2284


0x2aa0:	cmp	qword ptr [rip + 0x20e910], 0
0x2aa8:	jne	0x2af6


0x2276:	lea	rax, [rip + 0x2913]
0x227d:	mov	byte ptr [rip + 0x20f0a4], 0
0x2284:	mov	qword ptr [rip + 0x20efd5], rax
0x228b:	mov	eax, ecx
0x228d:	and	eax, 0xfffffffe
0x2290:	mov	dword ptr [rip + 0x20f0f2], eax
0x2296:	mov	eax, ebp
0x2298:	and	eax, 7
0x229b:	lea	edx, [rax - 1]
0x229e:	test	edx, eax
0x22a0:	jne	0x3c0c


0x2284:	mov	qword ptr [rip + 0x20efd5], rax
0x228b:	mov	eax, ecx
0x228d:	and	eax, 0xfffffffe
0x2290:	mov	dword ptr [rip + 0x20f0f2], eax
0x2296:	mov	eax, ebp
0x2298:	and	eax, 7
0x229b:	lea	edx, [rax - 1]
0x229e:	test	edx, eax
0x22a0:	jne	0x3c0c


0x2aaa:	mov	rax, qword ptr [rip + 0x20e56f]
0x2ab1:	sub	rax, 1
0x2ab5:	cmp	rax, -3
0x2ab9:	jbe	0x2af6


0x2af6:	mov	byte ptr [rip + 0x20e82b], 1
0x2afd:	lea	rax, [rip + 0x1f6c]
0x2b04:	jmp	0x2284


0x22a6:	mov	eax, ebp
0x22a8:	and	eax, 0x18
0x22ab:	lea	edx, [rax - 1]
0x22ae:	test	edx, eax
0x22b0:	jne	0x3a37


0x3c0c:	lea	rsi, [rip + 0x9d75]
0x3c13:	mov	edx, 5
0x3c18:	xor	edi, edi
0x3c1a:	call	0x1b60


0x2abb:	mov	eax, esi
0x2abd:	or	eax, ecx
0x2abf:	test	ah, 0x40
0x2ac2:	jne	0x2af6


0x22b6:	mov	eax, ebp
0x22b8:	and	eax, 0x60
0x22bb:	lea	edx, [rax - 1]
0x22be:	test	edx, eax
0x22c0:	jne	0x3a5b


0x3a37:	lea	rsi, [rip + 0x9f7a]
0x3a3e:	mov	edx, 5
0x3a43:	xor	edi, edi
0x3a45:	call	0x1b60


0x2ac4:	mov	byte ptr [rip + 0x20e85d], 0
0x2acb:	lea	rax, [rip + 0x1f9e]
0x2ad2:	jmp	0x2284


0x22c6:	mov	eax, ebp
0x22c8:	and	eax, 0x3000
0x22cd:	lea	edx, [rax - 1]
0x22d0:	test	edx, eax
0x22d2:	jne	0x3a91


0x3a5b:	lea	rsi, [rip + 0x9f7e]
0x3a62:	mov	edx, 5
0x3a67:	xor	edi, edi
0x3a69:	call	0x1b60


0x22d8:	mov	eax, ecx
0x22da:	and	eax, 0x4002
0x22df:	lea	edx, [rax - 1]
0x22e2:	test	edx, eax
0x22e4:	jne	0x3ab5


0x3a91:	lea	rsi, [rip + 0x9f68]
0x3a98:	mov	edx, 5
0x3a9d:	xor	edi, edi
0x3a9f:	call	0x1b60


0x22ea:	mov	eax, esi
0x22ec:	and	eax, 0x4002
0x22f1:	lea	edx, [rax - 1]
0x22f4:	and	edx, eax
0x22f6:	mov	dword ptr [rsp + 0x28], edx
0x22fa:	jne	0x3ab5


0x3ab5:	lea	rsi, [rip + 0x9f64]
0x3abc:	mov	edx, 5
0x3ac1:	xor	edi, edi
0x3ac3:	call	0x1b60


0x2300:	test	cl, 2
0x2303:	je	0x233b


0x233b:	test	sil, 2
0x233f:	je	0x2377


0x2305:	xor	eax, eax
0x2307:	cmp	qword ptr [rip + 0x20ed11], 0
0x230f:	mov	byte ptr [rip + 0x20ef55], 1
0x2316:	jne	0x2325


0x2377:	test	bpl, 1
0x237b:	je	0x23b2


0x2341:	xor	eax, eax
0x2343:	cmp	qword ptr [rip + 0x20ecd5], 0
0x234b:	mov	byte ptr [rip + 0x20ef18], 1
0x2352:	jne	0x2361


0x2318:	xor	eax, eax
0x231a:	cmp	qword ptr [rip + 0x20f06e], 0
0x2322:	sete	al
0x2325:	mov	byte ptr [rip + 0x20ef3e], al
0x232b:	and	byte ptr [rip + 0x20ef37], 1
0x2332:	and	ecx, 0xfffffffc
0x2335:	mov	dword ptr [rip + 0x20f04d], ecx
0x233b:	test	sil, 2
0x233f:	je	0x2377


0x2325:	mov	byte ptr [rip + 0x20ef3e], al
0x232b:	and	byte ptr [rip + 0x20ef37], 1
0x2332:	and	ecx, 0xfffffffc
0x2335:	mov	dword ptr [rip + 0x20f04d], ecx
0x233b:	test	sil, 2
0x233f:	je	0x2377


0x23b2:	test	bpl, 0x40
0x23b6:	je	0x2fb8


0x237d:	lea	rax, [rip + 0x20eddc]
0x2384:	lea	rcx, [rip + 0xb855]
0x238b:	lea	rsi, [rax + 0x100]
0x2392:	nop	word ptr [rax + rax]
0x2398:	movzx	edx, byte ptr [rax]
0x239b:	add	rax, 1
0x239f:	movzx	edx, byte ptr [rcx + rdx]
0x23a3:	mov	byte ptr [rax - 1], dl
0x23a6:	cmp	rsi, rax
0x23a9:	jne	0x2398


0x2354:	xor	eax, eax
0x2356:	cmp	qword ptr [rip + 0x20f032], 0
0x235e:	sete	al
0x2361:	mov	byte ptr [rip + 0x20ef01], al
0x2367:	and	byte ptr [rip + 0x20eefa], 1
0x236e:	and	esi, 0xfffffffd
0x2371:	mov	dword ptr [rip + 0x20f00d], esi
0x2377:	test	bpl, 1
0x237b:	je	0x23b2


0x2361:	mov	byte ptr [rip + 0x20ef01], al
0x2367:	and	byte ptr [rip + 0x20eefa], 1
0x236e:	and	esi, 0xfffffffd
0x2371:	mov	dword ptr [rip + 0x20f00d], esi
0x2377:	test	bpl, 1
0x237b:	je	0x23b2


0x2fb8:	test	bpl, 0x20
0x2fbc:	je	0x23f1


0x23bc:	call	0x1a10


0x23ab:	mov	byte ptr [rip + 0x20efce], 1
0x23b2:	test	bpl, 0x40
0x23b6:	je	0x2fb8


0x2398:	movzx	edx, byte ptr [rax]
0x239b:	add	rax, 1
0x239f:	movzx	edx, byte ptr [rcx + rdx]
0x23a3:	mov	byte ptr [rax - 1], dl
0x23a6:	cmp	rsi, rax
0x23a9:	jne	0x2398


0x23f1:	test	bpl, 2
0x23f5:	je	0x2f80


0x2fc2:	call	0x1e70


0x1a10:	jmp	qword ptr [rip + 0x20f36a]


0x2f80:	and	bpl, 4
0x2f84:	je	0x2438


0x23fb:	lea	rax, [rip + 0x20ed5e]
0x2402:	lea	rcx, [rip + 0xb9d7]
0x2409:	lea	rsi, [rax + 0x100]
0x2410:	movzx	edx, byte ptr [rax]
0x2413:	add	rax, 1
0x2417:	movzx	edx, byte ptr [rcx + rdx]
0x241b:	mov	byte ptr [rax - 1], dl
0x241e:	cmp	rsi, rax
0x2421:	jne	0x2410


0x1e70:	jmp	qword ptr [rip + 0x20f13a]




0x2438:	mov	rbp, qword ptr [rip + 0x20efa9]
0x243f:	mov	r12d, dword ptr [rip + 0x20ef42]
0x2446:	call	0x1a80


0x2f8a:	lea	rax, [rip + 0x20e1cf]
0x2f91:	lea	rcx, [rip + 0xad48]
0x2f98:	lea	rsi, [rax + 0x100]
0x2f9f:	nop	
0x2fa0:	movzx	edx, byte ptr [rax]
0x2fa3:	add	rax, 1
0x2fa7:	movzx	edx, byte ptr [rcx + rdx]
0x2fab:	mov	byte ptr [rax - 1], dl
0x2fae:	cmp	rsi, rax
0x2fb1:	jne	0x2fa0


0x2423:	mov	byte ptr [rip + 0x20ef56], 1
0x242a:	mov	byte ptr [rip + 0x20ebe9], 0x25
0x2431:	mov	byte ptr [rip + 0x20ebe1], 0x40
0x2438:	mov	rbp, qword ptr [rip + 0x20efa9]
0x243f:	mov	r12d, dword ptr [rip + 0x20ef42]
0x2446:	call	0x1a80


0x2410:	movzx	edx, byte ptr [rax]
0x2413:	add	rax, 1
0x2417:	movzx	edx, byte ptr [rcx + rdx]
0x241b:	mov	byte ptr [rax - 1], dl
0x241e:	cmp	rsi, rax
0x2421:	jne	0x2410




0x2fb3:	jmp	0x2423


0x2fa0:	movzx	edx, byte ptr [rax]
0x2fa3:	add	rax, 1
0x2fa7:	movzx	edx, byte ptr [rcx + rdx]
0x2fab:	mov	byte ptr [rax - 1], dl
0x2fae:	cmp	rsi, rax
0x2fb1:	jne	0x2fa0


0x244b:	mov	qword ptr [rsp + 0x10], rax
0x2450:	test	rbp, rbp
0x2453:	je	0x3235


0x3235:	lea	rsi, [rip + 0x96cb]
0x323c:	xor	edi, edi
0x323e:	mov	edx, 5
0x3243:	call	0x1b60


0x2459:	xor	ecx, ecx
0x245b:	xor	edi, edi
0x245d:	mov	edx, r12d
0x2460:	mov	rsi, rbp
0x2463:	call	0x4a20


0x2468:	test	eax, eax
0x246a:	js	0x3bcc


0x3bcc:	mov	rsi, qword ptr [rip + 0x20d815]
0x3bd3:	mov	edi, 4
0x3bd8:	call	0x89e0


0x2470:	xor	esi, esi
0x2472:	mov	edx, 1
0x2477:	xor	edi, edi
0x2479:	call	0x1c10


0x247e:	mov	rdx, rax
0x2481:	mov	rsi, qword ptr [rip + 0x20ef58]
0x2488:	mov	r12d, dword ptr [rip + 0x20eef5]
0x248f:	not	rdx
0x2492:	shr	rdx, 0x3f
0x2496:	test	rax, rax
0x2499:	mov	byte ptr [rip + 0x20ee9d], dl
0x249f:	mov	edx, 0
0x24a4:	cmovs	rax, rdx
0x24a8:	test	rsi, rsi
0x24ab:	mov	qword ptr [rip + 0x20ee7e], rax
0x24b2:	mov	rax, qword ptr [rsp + 0x10]
0x24b7:	mov	eax, dword ptr [rax]
0x24b9:	mov	dword ptr [rip + 0x20ee79], eax
0x24bf:	je	0x3590


0x3590:	lea	rsi, [rip + 0x9391]
0x3597:	xor	edi, edi
0x3599:	mov	edx, 5
0x359e:	call	0x1b60


0x24c5:	mov	eax, dword ptr [rip + 0x20eec1]
0x24cb:	xor	edx, edx
0x24cd:	mov	ebp, eax
0x24cf:	test	ah, 0x10
0x24d2:	sete	dl
0x24d5:	sar	ebp, 6
0x24d8:	and	ebp, 0x80
0x24de:	shl	edx, 6
0x24e1:	or	ebp, r12d
0x24e4:	or	ebp, edx
0x24e6:	cmp	qword ptr [rip + 0x20eeba], 0
0x24ee:	jne	0x30bc


0x24f4:	and	eax, 0x200
0x24f9:	cmp	eax, 1
0x24fc:	sbb	eax, eax
0x24fe:	and	eax, 0x200
0x2503:	or	ebp, eax
0x2505:	mov	edx, ebp
0x2507:	mov	ecx, 0x1b6
0x250c:	mov	edi, 1
0x2511:	or	edx, 1
0x2514:	call	0x4a20


0x30bc:	mov	edx, ebp
0x30be:	mov	ecx, 0x1b6
0x30c3:	mov	edi, 1
0x30c8:	or	edx, 2
0x30cb:	call	0x4a20


0x30d0:	test	eax, eax
0x30d2:	jns	0x2521


0x30d8:	mov	rsi, qword ptr [rip + 0x20e301]
0x30df:	jmp	0x2505


0x2521:	mov	rbp, qword ptr [rip + 0x20ee80]
0x2528:	test	rbp, rbp
0x252b:	je	0x2573


0x2505:	mov	edx, ebp
0x2507:	mov	ecx, 0x1b6
0x250c:	mov	edi, 1
0x2511:	or	edx, 1
0x2514:	call	0x4a20


0x2573:	call	0x5f60


0x252d:	test	byte ptr [rip + 0x20ee59], 2
0x2534:	jne	0x2573


0x2536:	mov	r14, qword ptr [rip + 0x20ee8b]
0x253d:	xor	edx, edx
0x253f:	movabs	rax, 0x7fffffffffffffff
0x2549:	mov	r12, rbp
0x254c:	div	r14
0x254f:	imul	r12, r14
0x2553:	add	r12, qword ptr [rip + 0x20ee46]
0x255a:	cmp	rbp, rax
0x255d:	ja	0x3b19


0x2563:	mov	rdi, r12
0x2566:	call	0x4df0


0x3b19:	lea	rsi, [rip + 0x9f28]
0x3b20:	mov	edx, 5
0x3b25:	xor	edi, edi
0x3b27:	call	0x1b60


0x256b:	test	eax, eax
0x256d:	jne	0x34cd


0x34cd:	mov	rax, qword ptr [rsp + 0x10]
0x34d2:	mov	rdx, qword ptr [rsp + 0x20]
0x34d7:	mov	esi, 1
0x34dc:	mov	edi, 1
0x34e1:	mov	ebp, dword ptr [rax]
0x34e3:	call	0x1d30


0x34e8:	test	eax, eax
0x34ea:	jne	0x3b43


0x34f0:	mov	eax, dword ptr [rsp + 0x58]
0x34f4:	and	eax, 0xf000
0x34f9:	sub	eax, 0x4000
0x34fe:	test	eax, 0xffffb000
0x3503:	jne	0x2573


0x3b43:	mov	rsi, qword ptr [rip + 0x20d896]
0x3b4a:	mov	edi, 4
0x3b4f:	call	0x89e0


0x3509:	mov	rsi, qword ptr [rip + 0x20ded0]
0x3510:	mov	edi, 4
0x3515:	call	0x89e0


0x2578:	mov	r14, qword ptr [rip + 0x20ee39]
0x257f:	mov	qword ptr [rip + 0x20edca], rax
0x2586:	add	rax, 0x3b9aca00
0x258c:	mov	qword ptr [rip + 0x20edb5], rax
0x2593:	test	r14, r14
0x2596:	jne	0x25a2


0x2598:	cmp	qword ptr [rip + 0x20ee10], 0
0x25a0:	je	0x25fe


0x25a2:	mov	r15, qword ptr [rip + 0x20ee27]
0x25a9:	mov	rsi, qword ptr [rip + 0x20ee38]
0x25b0:	lea	r8, [rip + 0x20edf9]
0x25b7:	xor	edi, edi
0x25b9:	mov	rdx, r14
0x25bc:	mov	rbp, qword ptr [rip + 0x20ed6d]
0x25c3:	mov	r12, qword ptr [rip + 0x20ede6]
0x25ca:	mov	rcx, r15
0x25cd:	call	0x5730


0x25fe:	mov	rdx, qword ptr [rip + 0x20eda3]
0x2605:	mov	rax, qword ptr [rip + 0x20ed94]
0x260c:	test	rdx, rdx
0x260f:	jne	0x261a


0x2611:	test	rax, rax
0x2614:	je	0x26aa


0x261a:	mov	rcx, qword ptr [rip + 0x20eda7]
0x2621:	mov	rsi, qword ptr [rip + 0x20edb8]
0x2628:	lea	r8, [rsp + 0x38]
0x262d:	mov	edi, 1
0x2632:	mov	qword ptr [rsp + 0x38], rax
0x2637:	call	0x5730


0x26aa:	cmp	qword ptr [rip + 0x20e96e], 0
0x26b2:	jne	0x26c2


0x26b4:	cmp	qword ptr [rip + 0x20ecd4], 0
0x26bc:	je	0x3303


0x26c2:	cmp	qword ptr [rip + 0x20ec4e], 0
0x26ca:	je	0x3644


0x3303:	mov	dword ptr [rsp + 0x18], 0
0x330b:	jmp	0x326f


0x3644:	call	0x4c20


0x26d0:	call	0x4da0


0x326f:	cmp	byte ptr [rip + 0x20dff5], 0
0x3276:	jne	0x3463


0x327c:	cmp	byte ptr [rip + 0x20dfe7], 0
0x3283:	je	0x2f4e


0x3463:	xor	esi, esi
0x3465:	xor	edi, edi
0x3467:	call	0x45b0


0x2f4e:	call	0x4c00


0x3289:	xor	esi, esi
0x328b:	mov	edi, 1
0x3290:	call	0x45b0


0x2f53:	mov	rbx, qword ptr [rsp + 0xd8]
0x2f5b:	xor	rbx, qword ptr fs:[0x28]
0x2f64:	mov	eax, dword ptr [rsp + 0x18]
0x2f68:	jne	0x3bc7


0x2f6e:	add	rsp, 0xe8
0x2f75:	pop	rbx
0x2f76:	pop	rbp
0x2f77:	pop	r12
0x2f79:	pop	r13
0x2f7b:	pop	r14
0x2f7d:	pop	r15
0x2f7f:	ret	


0x3bc7:	call	0x1b90


0x3295:	test	al, al
0x3297:	jne	0x2f4e


0x329d:	mov	rdx, qword ptr [rip + 0x20e13c]
0x32a4:	mov	esi, 3
0x32a9:	xor	edi, edi
0x32ab:	call	0x8ae0


0x346c:	test	al, al
0x346e:	jne	0x327c


0x3474:	mov	rdx, qword ptr [rip + 0x20df6d]
0x347b:	mov	esi, 3
0x3480:	xor	edi, edi
0x3482:	call	0x8ae0


0x26d5:	mov	dword ptr [rsp + 0x18], 0
0x26dd:	mov	qword ptr [rsp + 8], 0
0x26e6:	nop	word ptr cs:[rax + rax]
0x26f0:	cmp	dword ptr [rip + 0x20e925], 4
0x26f7:	je	0x287d


0x287d:	call	0x5f60


0x26fd:	mov	r13, qword ptr [rip + 0x20ec8c]
0x2704:	mov	rbp, qword ptr [rip + 0x20ec55]
0x270b:	xor	eax, eax
0x270d:	add	rbp, qword ptr [rip + 0x20ec54]
0x2714:	mov	r12, qword ptr [rip + 0x20e905]
0x271b:	mov	esi, dword ptr [rip + 0x20ec6b]
0x2721:	test	r13, r13
0x2724:	setne	al
0x2727:	add	rax, r12
0x272a:	cmp	rbp, rax
0x272d:	jae	0x3142


0x2733:	mov	eax, esi
0x2735:	mov	rcx, qword ptr [rip + 0x20ebdc]
0x273c:	and	eax, 0x500
0x2741:	cmp	eax, 0x500
0x2746:	jne	0x2765


0x3142:	cmp	byte ptr [rip + 0x20dff8], 0
0x3149:	je	0x320f


0x2748:	mov	rdx, qword ptr [rip + 0x20ec81]
0x274f:	and	esi, 0x18
0x2752:	mov	eax, 0x20
0x2757:	mov	rdi, rcx
0x275a:	cmovne	esi, eax
0x275d:	call	0x1c40


0x2765:	cmp	rbp, r12
0x2768:	mov	rax, qword ptr [rip + 0x20eaf1]
0x276f:	jb	0x2c10


0x320f:	and	sil, 8
0x3213:	je	0x3350


0x314f:	test	sil, 8
0x3153:	jne	0x37df


0x2c10:	xor	edi, edi
0x2c12:	mov	rdx, qword ptr [rip + 0x20e7b7]
0x2c19:	mov	rsi, rcx
0x2c1c:	call	rax


0x2775:	xor	edi, edi
0x2777:	mov	rdx, r13
0x277a:	mov	rsi, rcx
0x277d:	call	rax


0x3350:	mov	rsi, qword ptr [rip + 0x20dfb1]
0x3357:	cmp	qword ptr [rip + 0x20dfa1], 0
0x335f:	je	0x318f


0x3219:	mov	rbx, qword ptr [rip + 0x20e0e0]
0x3220:	test	rbx, rbx
0x3223:	jne	0x333e


0x3159:	and	sil, 0x10
0x315d:	jne	0x37fb


0x37df:	lea	rdi, [rip + 0x20d95a]
0x37e6:	mov	esi, 1
0x37eb:	call	0x5b20


0x318f:	test	rsi, rsi
0x3192:	jne	0x364e


0x3365:	test	byte ptr [rip + 0x20e020], 0x10
0x336c:	je	0x318f


0x3229:	mov	rsi, qword ptr [rip + 0x20e0d8]
0x3230:	jmp	0x318f


0x333e:	cmp	rbx, qword ptr [rip + 0x20e07b]
0x3345:	mov	rsi, qword ptr [rip + 0x20dfbc]
0x334c:	jb	0x3310


0x3163:	mov	rax, qword ptr [rip + 0x20e19e]
0x316a:	movzx	ecx, byte ptr [rip + 0x20dfcf]
0x3171:	mov	rdx, qword ptr [rip + 0x20e198]
0x3178:	lea	rsi, [rax + 1]
0x317c:	cmp	rsi, qword ptr [rip + 0x20e245]
0x3183:	mov	byte ptr [rdx + rax], cl
0x3186:	mov	qword ptr [rip + 0x20e17b], rsi
0x318d:	jae	0x3204


0x37fb:	lea	rdi, [rip + 0x20d93e]
0x3802:	mov	esi, 1
0x3807:	call	0x5c40


0x3198:	cmp	byte ptr [rip + 0x20e1f9], 0
0x319f:	jne	0x36ba


0x364e:	mov	rdi, qword ptr [rip + 0x20dcbb]
0x3655:	call	0x4e30


0x3372:	lea	rax, [rsi + 1]
0x3376:	movzx	ecx, byte ptr [rip + 0x20dc9d]
0x337d:	cmp	rax, qword ptr [rip + 0x20e044]
0x3384:	mov	rdx, qword ptr [rip + 0x20df85]
0x338b:	mov	qword ptr [rip + 0x20df76], rax
0x3392:	mov	byte ptr [rdx + rsi], cl
0x3395:	mov	rsi, rax
0x3398:	jb	0x318f


0x3310:	lea	rax, [rsi + 1]
0x3314:	movzx	ecx, byte ptr [rip + 0x20dcfe]
0x331b:	cmp	rax, qword ptr [rip + 0x20e0a6]
0x3322:	mov	rdx, qword ptr [rip + 0x20dfe7]
0x3329:	mov	qword ptr [rip + 0x20dfd8], rax
0x3330:	mov	byte ptr [rdx + rsi], cl
0x3333:	jb	0x333a


0x334e:	jmp	0x3357


0x3204:	call	0x5a80


0x31a5:	mov	esi, dword ptr [rip + 0x20e1e1]
0x31ab:	test	esi, 0x4000
0x31b1:	jne	0x3680


0x36ba:	mov	rdx, qword ptr [rsp + 0x20]
0x36bf:	mov	esi, 1
0x36c4:	mov	edi, 1
0x36c9:	call	0x1d30


0x339e:	call	0x5a80


0x333a:	add	rbx, 1
0x333e:	cmp	rbx, qword ptr [rip + 0x20e07b]
0x3345:	mov	rsi, qword ptr [rip + 0x20dfbc]
0x334c:	jb	0x3310


0x3335:	call	0x5a80


0x3357:	cmp	qword ptr [rip + 0x20dfa1], 0
0x335f:	je	0x318f


0x31b7:	and	esi, 0x8000
0x31bd:	je	0x2f07


0x3680:	mov	edi, 1
0x3685:	call	0x1a90


0x2f07:	cmp	qword ptr [rip + 0x20e111], 0
0x2f0f:	je	0x3261


0x31c3:	mov	rbx, qword ptr [rsp + 0x10]
0x31c8:	mov	edi, 1
0x31cd:	call	0x1da0


0x1a90:	jmp	qword ptr [rip + 0x20f32a]


0x3261:	cmp	qword ptr [rip + 0x20e127], 0
0x3269:	jne	0x2f15


0x2f15:	cmp	byte ptr [rip + 0x20e34f], 0
0x2f1c:	jne	0x2f27


0x1da0:	jmp	qword ptr [rip + 0x20f1a2]




0x2f1e:	cmp	byte ptr [rip + 0x20e344], 0
0x2f25:	je	0x2f30


0x2f27:	xor	esi, esi
0x2f29:	xor	edi, edi
0x2f2b:	call	0x45b0




0x2f30:	cmp	byte ptr [rip + 0x20e333], 0
0x2f37:	jne	0x2f42


0x2f39:	cmp	byte ptr [rip + 0x20e328], 0
0x2f40:	je	0x2f4e


0x2f42:	xor	esi, esi
0x2f44:	mov	edi, 1
0x2f49:	call	0x45b0


0x36ce:	test	eax, eax
0x36d0:	jne	0x38b2


0x36d6:	mov	eax, dword ptr [rsp + 0x58]
0x36da:	and	eax, 0xf000
0x36df:	cmp	eax, 0x8000
0x36e4:	jne	0x31a5


0x38b2:	mov	rsi, qword ptr [rip + 0x20db27]
0x38b9:	mov	edi, 4
0x38be:	call	0x89e0


0x36ea:	xor	esi, esi
0x36ec:	mov	edx, 1
0x36f1:	mov	edi, 1
0x36f6:	call	0x1c10


0x36fb:	test	rax, rax
0x36fe:	mov	rbx, rax
0x3701:	js	0x31a5


0x3707:	cmp	rax, qword ptr [rsp + 0x70]
0x370c:	jle	0x31a5


0x3712:	mov	rdi, rax
0x3715:	call	0x4df0


0x371a:	test	eax, eax
0x371c:	je	0x31a5


0x3722:	mov	rsi, qword ptr [rip + 0x20dcb7]
0x3729:	mov	edi, 4
0x372e:	call	0x89e0


0x33a3:	jmp	0x3229


0x3209:	mov	esi, dword ptr [rip + 0x20e17d]
0x320f:	and	sil, 8
0x3213:	je	0x3350


0x365a:	add	qword ptr [rip + 0x20dcf7], rax
0x3661:	test	rax, rax
0x3664:	je	0x366e


0x366e:	cmp	rax, qword ptr [rip + 0x20dc93]
0x3675:	je	0x3198


0x3666:	add	qword ptr [rip + 0x20dd0a], 1
0x366e:	cmp	rax, qword ptr [rip + 0x20dc93]
0x3675:	je	0x3198


0x367b:	jmp	0x2ec2


0x2ec2:	mov	rsi, qword ptr [rip + 0x20e517]
0x2ec9:	mov	edi, 4
0x2ece:	call	0x89e0


0x380c:	mov	esi, dword ptr [rip + 0x20db7a]
0x3812:	jmp	0x320f


0x37f0:	mov	esi, dword ptr [rip + 0x20db96]
0x37f6:	jmp	0x320f


0x2762:	mov	rcx, rax
0x2765:	cmp	rbp, r12
0x2768:	mov	rax, qword ptr [rip + 0x20eaf1]
0x276f:	jb	0x2c10


0x2882:	cmp	rax, qword ptr [rip + 0x20eabf]
0x2889:	jl	0x26fd


0x288f:	mov	rdi, rax
0x2892:	call	0x3db0


0x2897:	add	qword ptr [rip + 0x20eaa6], 0x3b9aca00
0x28a2:	jmp	0x26fd


0x3649:	jmp	0x26d0


0x263c:	test	rax, rax
0x263f:	mov	r12, rax
0x2642:	je	0x30e4


0x30e4:	mov	rdx, qword ptr [rsp + 0x38]
0x30e9:	test	rdx, rdx
0x30ec:	je	0x26aa


0x2648:	mov	rdx, qword ptr [rip + 0x20ed79]
0x264f:	mov	rdi, qword ptr [rip + 0x20ecba]
0x2656:	xor	esi, esi
0x2658:	call	0x1c40


0x30f2:	mov	rdi, qword ptr [rip + 0x20e217]
0x30f9:	xor	esi, esi
0x30fb:	call	0x1c40


0x3100:	jmp	0x268d


0x268d:	mov	rbp, qword ptr [rsp + 0x38]
0x2692:	mov	rdi, qword ptr [rip + 0x20ec77]
0x2699:	mov	rsi, rbp
0x269c:	call	0x4e30


0x26a1:	cmp	rbp, rax
0x26a4:	jne	0x395a


0x395a:	mov	rsi, qword ptr [rip + 0x20da7f]
0x3961:	mov	edi, 4
0x3966:	call	0x89e0


0x2676:	cmp	rbp, rax
0x2679:	jne	0x395a


0x267f:	sub	r12, 1
0x2683:	jne	0x2660


0x2685:	cmp	qword ptr [rsp + 0x38], 0
0x268b:	je	0x26aa


0x2660:	mov	rbp, qword ptr [rip + 0x20ed61]
0x2667:	mov	rdi, qword ptr [rip + 0x20eca2]
0x266e:	mov	rsi, rbp
0x2671:	call	0x4e30


0x25d2:	test	rax, rax
0x25d5:	jne	0x2b09


0x25db:	mov	rax, r14
0x25de:	add	rbp, r12
0x25e1:	imul	rax, r15
0x25e5:	add	rax, rbp
0x25e8:	cmp	rax, qword ptr [rip + 0x20ed41]
0x25ef:	je	0x25fe


0x2b09:	cmp	dword ptr [rip + 0x20e50c], 1
0x2b10:	je	0x25fe


0x25f1:	cmp	byte ptr [rip + 0x20ed31], 1
0x25f8:	jne	0x2b09


0x2b16:	mov	rdx, qword ptr [rip + 0x20e8cb]
0x2b1d:	xor	edi, edi
0x2b1f:	mov	esi, 3
0x2b24:	call	0x8ae0


0x2519:	test	eax, eax
0x251b:	js	0x3ad9


0x3ad9:	mov	rsi, qword ptr [rip + 0x20d900]
0x3ae0:	mov	edi, 4
0x3ae5:	call	0x89e0


0x3b2c:	mov	r8, r14
0x3b2f:	mov	rdx, rax
0x3b32:	mov	rcx, rbp
0x3b35:	xor	esi, esi
0x3b37:	mov	edi, 1
0x3b3c:	xor	eax, eax
0x3b3e:	call	0x4140


0x35a3:	mov	esi, r12d
0x35a6:	mov	rdx, rax
0x35a9:	mov	edi, 1
0x35ae:	mov	qword ptr [rip + 0x20de2b], rax
0x35b5:	call	0x43a0


0x35ba:	jmp	0x2573


0x3248:	mov	esi, r12d
0x324b:	mov	rdx, rax
0x324e:	xor	edi, edi
0x3250:	mov	qword ptr [rip + 0x20e191], rax
0x3257:	call	0x43a0


0x325c:	jmp	0x2470


0x3ac8:	xor	esi, esi
0x3aca:	mov	rdx, rax
0x3acd:	mov	edi, 1
0x3ad2:	xor	eax, eax
0x3ad4:	call	0x4140


0x3aa4:	xor	esi, esi
0x3aa6:	mov	rdx, rax
0x3aa9:	mov	edi, 1
0x3aae:	xor	eax, eax
0x3ab0:	call	0x4140


0x3a6e:	xor	esi, esi
0x3a70:	mov	rdx, rax
0x3a73:	mov	edi, 1
0x3a78:	xor	eax, eax
0x3a7a:	call	0x4140


0x3a7f:	mov	qword ptr [rsp + 8], rax
0x3a84:	jmp	0x38a2


0x38a2:	cmp	dword ptr [rsp + 0x38], 0
0x38a7:	je	0x2190


0x2190:	add	r14, 8
0x2194:	cmp	rbp, r14
0x2197:	jne	0x2130


0x38ad:	jmp	0x35fb


0x2199:	test	r15, r15
0x219c:	je	0x2a47


0x2130:	mov	r13, qword ptr [r14]
0x2133:	mov	esi, 0x3d
0x2138:	mov	rdi, r13
0x213b:	call	0x1bd0


0x35fb:	mov	rdi, r8
0x35fe:	call	0x8cb0


0x2a47:	or	dword ptr [rip + 0x20e93b], 0x800
0x2a51:	cmp	qword ptr [rip + 0x20e977], 0
0x2a59:	jne	0x2a66


0x21a2:	mov	qword ptr [rip + 0x20f21f], r15
0x21a9:	mov	qword ptr [rip + 0x20f220], r15
0x21b0:	cmp	qword ptr [rip + 0x20f208], 0
0x21b8:	jne	0x21c1


0x3a4a:	xor	esi, esi
0x3a4c:	mov	rdx, rax
0x3a4f:	mov	edi, 1
0x3a54:	xor	eax, eax
0x3a56:	call	0x4140


0x3c1f:	xor	esi, esi
0x3c21:	mov	rdx, rax
0x3c24:	mov	edi, 1
0x3c29:	xor	eax, eax
0x3c2b:	call	0x4140


0x2140:	test	rax, rax
0x2143:	je	0x3921


0x3921:	mov	rdi, r13
0x3924:	call	0x8cb0


0x2149:	lea	r8, [rax + 1]
0x214d:	lea	rcx, [rip + 0xa6a1]
0x2154:	mov	rdx, r13
0x2157:	mov	esi, 0x69
0x215c:	nop	dword ptr [rax]
0x2160:	add	rdx, 1
0x2164:	add	rcx, 1
0x2168:	cmp	byte ptr [rdx - 1], sil
0x216c:	jne	0x28b0


0x2172:	movzx	esi, byte ptr [rcx]
0x2175:	test	sil, sil
0x2178:	jne	0x2160


0x28b0:	lea	rax, [rip + 0x9f41]
0x28b7:	mov	rdx, r13
0x28ba:	mov	ecx, 0x6f
0x28bf:	add	rdx, 1
0x28c3:	add	rax, 1
0x28c7:	cmp	byte ptr [rdx - 1], cl
0x28ca:	jne	0x28f0


0x217a:	movzx	eax, byte ptr [rdx]
0x217d:	cmp	al, 0x3d
0x217f:	je	0x2189


0x2160:	add	rdx, 1
0x2164:	add	rcx, 1
0x2168:	cmp	byte ptr [rdx - 1], sil
0x216c:	jne	0x28b0


0x28cc:	movzx	ecx, byte ptr [rax]
0x28cf:	test	cl, cl
0x28d1:	jne	0x28bf


0x28f0:	lea	rdx, [rip + 0x9f04]
0x28f7:	mov	rax, r13
0x28fa:	mov	ecx, 0x63
0x28ff:	add	rax, 1
0x2903:	add	rdx, 1
0x2907:	cmp	byte ptr [rax - 1], cl
0x290a:	jne	0x2941


0x2189:	mov	qword ptr [rip + 0x20f258], r8
0x2190:	add	r14, 8
0x2194:	cmp	rbp, r14
0x2197:	jne	0x2130


0x2181:	test	al, al
0x2183:	jne	0x28b0


0x28d3:	movzx	eax, byte ptr [rdx]
0x28d6:	cmp	al, 0x3d
0x28d8:	je	0x28de


0x28bf:	add	rdx, 1
0x28c3:	add	rax, 1
0x28c7:	cmp	byte ptr [rdx - 1], cl
0x28ca:	jne	0x28f0


0x290c:	movzx	ecx, byte ptr [rdx]
0x290f:	test	cl, cl
0x2911:	jne	0x28ff


0x2941:	lea	rdx, [rip + 0x9eb8]
0x2948:	mov	rax, r13
0x294b:	mov	ecx, 0x69
0x2950:	add	rax, 1
0x2954:	add	rdx, 1
0x2958:	cmp	byte ptr [rax - 1], cl
0x295b:	jne	0x2992


0x28de:	mov	qword ptr [rip + 0x20eafb], r8
0x28e5:	jmp	0x2190


0x28da:	test	al, al
0x28dc:	jne	0x28f0


0x2913:	movzx	eax, byte ptr [rax]
0x2916:	test	al, al
0x2918:	je	0x291e


0x28ff:	add	rax, 1
0x2903:	add	rdx, 1
0x2907:	cmp	byte ptr [rax - 1], cl
0x290a:	jne	0x2941


0x295d:	movzx	ecx, byte ptr [rdx]
0x2960:	test	cl, cl
0x2962:	jne	0x2950


0x2992:	lea	rdx, [rip + 0x9e6d]
0x2999:	mov	rax, r13
0x299c:	mov	ecx, 0x6f
0x29a1:	nop	dword ptr [rax]
0x29a8:	add	rax, 1
0x29ac:	add	rdx, 1
0x29b0:	cmp	byte ptr [rax - 1], cl
0x29b3:	jne	0x2b55


0x291e:	lea	rcx, [rip + 0x9f7e]
0x2925:	lea	rsi, [rip + 0xb734]
0x292c:	xor	edx, edx
0x292e:	mov	rdi, r8
0x2931:	call	0x5640


0x291a:	cmp	al, 0x3d
0x291c:	jne	0x2941


0x2964:	movzx	eax, byte ptr [rax]
0x2967:	cmp	al, 0x3d
0x2969:	je	0x296f


0x2950:	add	rax, 1
0x2954:	add	rdx, 1
0x2958:	cmp	byte ptr [rax - 1], cl
0x295b:	jne	0x2992


0x29b9:	movzx	ecx, byte ptr [rdx]
0x29bc:	test	cl, cl
0x29be:	jne	0x29a8


0x2b55:	lea	rdx, [rip + 0x9cb0]
0x2b5c:	mov	rax, r13
0x2b5f:	mov	ecx, 0x73
0x2b64:	nop	dword ptr [rax]
0x2b68:	add	rax, 1
0x2b6c:	add	rdx, 1
0x2b70:	cmp	byte ptr [rax - 1], cl
0x2b73:	jne	0x33b0


0x296f:	lea	rcx, [rip + 0x9f40]
0x2976:	lea	rsi, [rip + 0xb5a3]
0x297d:	xor	edx, edx
0x297f:	mov	rdi, r8
0x2982:	call	0x5640


0x296b:	test	al, al
0x296d:	jne	0x2992


0x29c0:	movzx	eax, byte ptr [rax]
0x29c3:	cmp	al, 0x3d
0x29c5:	je	0x29cf


0x29a8:	add	rax, 1
0x29ac:	add	rdx, 1
0x29b0:	cmp	byte ptr [rax - 1], cl
0x29b3:	jne	0x2b55


0x2b79:	movzx	ecx, byte ptr [rdx]
0x2b7c:	test	cl, cl
0x2b7e:	jne	0x2b68


0x33b0:	mov	rsi, qword ptr [rsp + 0x18]
0x33b5:	mov	rdi, r8
0x33b8:	mov	qword ptr [rsp + 0x28], r8
0x33bd:	mov	dword ptr [rsp + 0x38], 0
0x33c5:	call	0x4250


0x29cf:	lea	rcx, [rip + 0x9ef3]
0x29d6:	lea	rsi, [rip + 0xb543]
0x29dd:	xor	edx, edx
0x29df:	mov	rdi, r8
0x29e2:	call	0x5640


0x29c7:	test	al, al
0x29c9:	jne	0x2b55


0x2b80:	movzx	eax, byte ptr [rax]
0x2b83:	test	al, al
0x2b85:	jne	0x33a8


0x2b68:	add	rax, 1
0x2b6c:	add	rdx, 1
0x2b70:	cmp	byte ptr [rax - 1], cl
0x2b73:	jne	0x33b0


0x2b8b:	lea	rcx, [rip + 0x9d4b]
0x2b92:	lea	rsi, [rip + 0xb347]
0x2b99:	mov	edx, 1
0x2b9e:	mov	rdi, r8
0x2ba1:	call	0x5640


0x33a8:	cmp	al, 0x3d
0x33aa:	je	0x2b8b


0x33ca:	mov	rdx, r13
0x33cd:	mov	esi, 0x69
0x33d2:	lea	rcx, [rip + 0x943a]
0x33d9:	mov	r8, qword ptr [rsp + 0x28]
0x33de:	jmp	0x33ec


0x33ec:	add	rdx, 1
0x33f0:	add	rcx, 1
0x33f4:	cmp	byte ptr [rdx - 1], sil
0x33f8:	je	0x33e0


0x33e0:	movzx	esi, byte ptr [rcx]
0x33e3:	test	sil, sil
0x33e6:	je	0x3767


0x33fa:	lea	rcx, [rip + 0x9416]
0x3401:	mov	rdx, r13
0x3404:	mov	esi, 0x6f
0x3409:	add	rdx, 1
0x340d:	add	rcx, 1
0x3411:	cmp	byte ptr [rdx - 1], sil
0x3415:	jne	0x3433


0x3767:	movzx	edx, byte ptr [rdx]
0x376a:	test	dl, dl
0x376c:	je	0x3777


0x3417:	movzx	esi, byte ptr [rcx]
0x341a:	test	sil, sil
0x341d:	jne	0x3409


0x3433:	mov	rdx, r13
0x3436:	mov	esi, 0x62
0x343b:	lea	rcx, [rip + 0x93da]
0x3442:	jmp	0x3450


0x3777:	mov	rdi, qword ptr [rip + 0x20dc5a]
0x377e:	mov	qword ptr [rip + 0x20dc4b], rax
0x3785:	lea	rdx, [rdi + 2]
0x3789:	movabs	rdi, 0x7fffffffffffffff
0x3793:	add	rdx, rdx
0x3796:	neg	rdx
0x3799:	cmp	rdx, rdi
0x379c:	cmova	rdx, rdi
0x37a0:	jmp	0x35e1


0x376e:	cmp	dl, 0x3d
0x3771:	jne	0x33fa


0x341f:	movzx	edx, byte ptr [rdx]
0x3422:	test	dl, dl
0x3424:	je	0x35bf


0x3409:	add	rdx, 1
0x340d:	add	rcx, 1
0x3411:	cmp	byte ptr [rdx - 1], sil
0x3415:	jne	0x3433


0x3450:	add	rdx, 1
0x3454:	add	rcx, 1
0x3458:	cmp	byte ptr [rdx - 1], sil
0x345c:	je	0x3444


0x35e1:	test	rax, rax
0x35e4:	je	0x37d2


0x35bf:	mov	rdx, qword ptr [rip + 0x20de12]
0x35c6:	movabs	rdi, 0x7fffffffffffffff
0x35d0:	mov	qword ptr [rip + 0x20ddf1], rax
0x35d7:	neg	rdx
0x35da:	cmp	rdx, rdi
0x35dd:	cmova	rdx, rdi
0x35e1:	test	rax, rax
0x35e4:	je	0x37d2


0x342a:	cmp	dl, 0x3d
0x342d:	je	0x35bf


0x3444:	movzx	esi, byte ptr [rcx]
0x3447:	test	sil, sil
0x344a:	je	0x39a6


0x345e:	jmp	0x39b2


0x37d2:	mov	dword ptr [rsp + 0x38], 4
0x37da:	jmp	0x35fb


0x35ea:	cmp	rax, rdx
0x35ed:	jbe	0x38a2


0x39a6:	movzx	edx, byte ptr [rdx]
0x39a9:	test	dl, dl
0x39ab:	je	0x3a0d


0x39b2:	mov	rdx, r13
0x39b5:	mov	esi, 0x63
0x39ba:	lea	rcx, [rip + 0x8e5a]
0x39c1:	jmp	0x39cf


0x35f3:	mov	dword ptr [rsp + 0x38], 1
0x35fb:	mov	rdi, r8
0x35fe:	call	0x8cb0


0x3a0d:	mov	rdi, qword ptr [rip + 0x20d9c4]
0x3a14:	mov	r15, rax
0x3a17:	lea	rdx, [rdi + 2]
0x3a1b:	movabs	rdi, 0x7fffffffffffffff
0x3a25:	add	rdx, rdx
0x3a28:	neg	rdx
0x3a2b:	cmp	rdx, rdi
0x3a2e:	cmova	rdx, rdi
0x3a32:	jmp	0x35e1


0x39ad:	cmp	dl, 0x3d
0x39b0:	je	0x3a0d


0x39cf:	add	rdx, 1
0x39d3:	add	rcx, 1
0x39d7:	cmp	byte ptr [rdx - 1], sil
0x39db:	je	0x39c3


0x39c3:	movzx	esi, byte ptr [rcx]
0x39c6:	test	sil, sil
0x39c9:	je	0x37b2


0x39dd:	mov	rdx, r13
0x39e0:	mov	esi, 0x73
0x39e5:	lea	rcx, [rip + 0x8dd5]
0x39ec:	jmp	0x39fa


0x37b2:	movzx	edx, byte ptr [rdx]
0x37b5:	test	dl, dl
0x37b7:	je	0x37c2


0x39fa:	add	rdx, 1
0x39fe:	add	rcx, 1
0x3a02:	cmp	byte ptr [rdx - 1], sil
0x3a06:	je	0x39ee


0x37c2:	test	rax, rax
0x37c5:	mov	qword ptr [rip + 0x20dbf4], rax
0x37cc:	jne	0x38a2


0x37b9:	cmp	dl, 0x3d
0x37bc:	jne	0x39dd


0x39ee:	movzx	esi, byte ptr [rcx]
0x39f1:	test	sil, sil
0x39f4:	je	0x3817


0x3a08:	jmp	0x382b


0x3817:	movzx	edx, byte ptr [rdx]
0x381a:	cmp	dl, 0x3d
0x381d:	je	0x3a7f


0x382b:	lea	rcx, [rip + 0x8f9f]
0x3832:	mov	rdx, r13
0x3835:	mov	esi, 0x73
0x383a:	add	rdx, 1
0x383e:	add	rcx, 1
0x3842:	cmp	byte ptr [rdx - 1], sil
0x3846:	jne	0x3864


0x3823:	test	dl, dl
0x3825:	je	0x3a7f


0x3848:	movzx	esi, byte ptr [rcx]
0x384b:	test	sil, sil
0x384e:	jne	0x383a


0x3864:	lea	rcx, [rip + 0x8fb4]
0x386b:	mov	rdx, r13
0x386e:	mov	esi, 0x63
0x3873:	add	rdx, 1
0x3877:	add	rcx, 1
0x387b:	cmp	byte ptr [rdx - 1], sil
0x387f:	jne	0x3921


0x3850:	movzx	edx, byte ptr [rdx]
0x3853:	cmp	dl, 0x3d
0x3856:	je	0x3a89


0x383a:	add	rdx, 1
0x383e:	add	rcx, 1
0x3842:	cmp	byte ptr [rdx - 1], sil
0x3846:	jne	0x3864


0x3885:	movzx	esi, byte ptr [rcx]
0x3888:	test	sil, sil
0x388b:	jne	0x3873


0x3a89:	mov	r12, rax
0x3a8c:	jmp	0x38a2


0x385c:	test	dl, dl
0x385e:	je	0x3a89


0x388d:	movzx	edx, byte ptr [rdx]
0x3890:	cmp	dl, 0x3d
0x3893:	je	0x389d


0x3873:	add	rdx, 1
0x3877:	add	rcx, 1
0x387b:	cmp	byte ptr [rdx - 1], sil
0x387f:	jne	0x3921


0x389d:	mov	qword ptr [rsp + 0x10], rax
0x38a2:	cmp	dword ptr [rsp + 0x38], 0
0x38a7:	je	0x2190


0x3895:	test	dl, dl
0x3897:	jne	0x3921


0x2ba6:	mov	dword ptr [rip + 0x20e470], eax
0x2bac:	jmp	0x2190


0x29e7:	or	dword ptr [rip + 0x20e997], eax
0x29ed:	jmp	0x2190


0x2987:	or	dword ptr [rip + 0x20e9fb], eax
0x298d:	jmp	0x2190


0x2936:	or	dword ptr [rip + 0x20ea50], eax
0x293c:	jmp	0x2190


0x31d2:	test	eax, eax
0x31d4:	je	0x2f07


0x31da:	cmp	dword ptr [rbx], 4
0x31dd:	je	0x31c8


0x31c8:	mov	edi, 1
0x31cd:	call	0x1da0


0x31df:	mov	rsi, qword ptr [rip + 0x20e1fa]
0x31e6:	mov	edi, 4
0x31eb:	call	0x89e0


0x368a:	test	eax, eax
0x368c:	je	0x36af


0x36af:	mov	esi, dword ptr [rip + 0x20dcd7]
0x36b5:	jmp	0x31b7


0x368e:	mov	rax, qword ptr [rsp + 0x10]
0x3693:	mov	eax, dword ptr [rax]
0x3695:	mov	dword ptr [rsp + 8], eax
0x3699:	sub	eax, 0x16
0x369c:	and	eax, 0xffffffef
0x369f:	jne	0x38d7


0x36a5:	or	dword ptr [rip + 0x20dcdd], 0x8000
0x36af:	mov	esi, dword ptr [rip + 0x20dcd7]
0x36b5:	jmp	0x31b7


0x38d7:	mov	rsi, qword ptr [rip + 0x20db02]
0x38de:	mov	edi, 4
0x38e3:	call	0x89e0


0x2fc7:	mov	rsi, qword ptr [rax]
0x2fca:	lea	rax, [rip + 0x20e18f]
0x2fd1:	lea	rcx, [rax + 0x100]
0x2fd8:	nop	dword ptr [rax + rax]
0x2fe0:	movzx	edx, byte ptr [rax]
0x2fe3:	add	rax, 1
0x2fe7:	mov	edx, dword ptr [rsi + rdx*4]
0x2fea:	mov	byte ptr [rax - 1], dl
0x2fed:	cmp	rcx, rax
0x2ff0:	jne	0x2fe0


0x2ff2:	jmp	0x23ea


0x2fe0:	movzx	edx, byte ptr [rax]
0x2fe3:	add	rax, 1
0x2fe7:	mov	edx, dword ptr [rsi + rdx*4]
0x2fea:	mov	byte ptr [rax - 1], dl
0x2fed:	cmp	rcx, rax
0x2ff0:	jne	0x2fe0


0x23ea:	mov	byte ptr [rip + 0x20ef8f], 1
0x23f1:	test	bpl, 2
0x23f5:	je	0x2f80


0x23c1:	mov	rsi, qword ptr [rax]
0x23c4:	lea	rax, [rip + 0x20ed95]
0x23cb:	lea	rcx, [rax + 0x100]
0x23d2:	nop	word ptr [rax + rax]
0x23d8:	movzx	edx, byte ptr [rax]
0x23db:	add	rax, 1
0x23df:	mov	edx, dword ptr [rsi + rdx*4]
0x23e2:	mov	byte ptr [rax - 1], dl
0x23e5:	cmp	rcx, rax
0x23e8:	jne	0x23d8


0x23d8:	movzx	edx, byte ptr [rax]
0x23db:	add	rax, 1
0x23df:	mov	edx, dword ptr [rsi + rdx*4]
0x23e2:	mov	byte ptr [rax - 1], dl
0x23e5:	cmp	rcx, rax
0x23e8:	jne	0x23d8


0x5eba:	mov	esi, dword ptr [rbx]
0x5ebc:	lea	rdx, [rip + 0x68dc]
0x5ec3:	mov	rcx, rax
0x5ec6:	mov	r8, rbp
0x5ec9:	xor	edi, edi
0x5ecb:	xor	eax, eax
0x5ecd:	call	0x1d90


0x3603:	lea	rsi, [rip + 0x936b]
0x360a:	xor	edi, edi
0x360c:	mov	edx, 5
0x3611:	mov	rbx, rax
0x3614:	call	0x1b60


0x3619:	cmp	dword ptr [rsp + 0x38], 1
0x361e:	mov	edx, 0
0x3623:	mov	esi, 0x4b
0x3628:	mov	rcx, rax
0x362b:	mov	r8, rbx
0x362e:	mov	edi, 1
0x3633:	cmovne	esi, edx
0x3636:	lea	rdx, [rip + 0x9162]
0x363d:	xor	eax, eax
0x363f:	call	0x4140


0x3929:	lea	rsi, [rip + 0x8f5b]
0x3930:	mov	rbx, rax
0x3933:	mov	edx, 5
0x3938:	xor	edi, edi
0x393a:	call	0x1b60


0x393f:	xor	edi, edi
0x3941:	mov	rdx, rax
0x3944:	mov	rcx, rbx
0x3947:	xor	esi, esi
0x3949:	xor	eax, eax
0x394b:	call	0x4140


0x3950:	mov	edi, 1
0x3955:	call	0x5030


0x3c4b:	mov	edx, 5
0x3c50:	mov	rbx, rax
0x3c53:	lea	rsi, [rip + 0x8c6f]
0x3c5a:	jmp	0x3b9e


0x3b9e:	xor	edi, edi
0x3ba0:	call	0x1b60


0x3ba5:	lea	rdx, [rip + 0x8bf3]
0x3bac:	mov	rcx, rax
0x3baf:	xor	edi, edi
0x3bb1:	mov	r8, rbx
0x3bb4:	xor	esi, esi
0x3bb6:	xor	eax, eax
0x3bb8:	call	0x4140


0x3bbd:	mov	edi, 1
0x3bc2:	call	0x5030


0x3c6b:	mov	edx, 5
0x3c70:	mov	rbx, rax
0x3c73:	lea	rsi, [rip + 0x8c3c]
0x3c7a:	jmp	0x3b9e


0x3b8f:	lea	rsi, [rip + 0x8d33]
0x3b96:	mov	rbx, rax
0x3b99:	mov	edx, 5
0x3b9e:	xor	edi, edi
0x3ba0:	call	0x1b60


0xa37e:	mov	rdi, qword ptr [rip + 0x206d7b]
0xa385:	lea	rdx, [rip + 0x22de]
0xa38c:	mov	rcx, rax
0xa38f:	mov	esi, 1
0xa394:	xor	eax, eax
0xa396:	call	0x1e30


0xa39b:	mov	r15, qword ptr [r14 + rbx*8]
0xa39f:	test	r15, r15
0xa3a2:	jne	0xa358


0xa32f:	mov	rdi, qword ptr [rip + 0x206dca]
0xa336:	lea	rdx, [rip + 0x48fb]
0xa33d:	mov	rcx, rax
0xa340:	mov	esi, 1
0xa345:	xor	eax, eax
0xa347:	add	rbp, r12
0xa34a:	call	0x1e30


0xa34f:	mov	r15, qword ptr [r14 + rbx*8]
0xa353:	test	r15, r15
0xa356:	je	0xa3a8


0xa443:	mov	rdx, r15
0xa446:	mov	rsi, rbp
0xa449:	mov	rdi, rbx
0xa44c:	call	0xa2d0


0xa451:	call	r13


0x4352:	mov	rsi, r12
0x4355:	xor	edi, edi
0x4357:	mov	r13, rax
0x435a:	call	0x8c90


0x435f:	lea	rsi, [rip + 0x864a]
0x4366:	mov	rbp, rax
0x4369:	mov	edx, 5
0x436e:	xor	edi, edi
0x4370:	call	0x1b60


0x4375:	mov	r8, r13
0x4378:	mov	rdx, rax
0x437b:	mov	rcx, rbp
0x437e:	xor	eax, eax
0x4380:	xor	esi, esi
0x4382:	xor	edi, edi
0x4384:	call	0x4140


0x4389:	mov	rax, qword ptr [rsp + 8]
0x438e:	jmp	0x4338


0xa283:	mov	rdx, r12
0xa286:	mov	rbp, rax
0xa289:	mov	esi, 8
0xa28e:	xor	edi, edi
0xa290:	call	0x88c0


0xa295:	mov	r8, rbp
0xa298:	mov	rdx, rbx
0xa29b:	mov	rcx, rax
0xa29e:	pop	rbx
0xa29f:	pop	rbp
0xa2a0:	pop	r12
0xa2a2:	xor	esi, esi
0xa2a4:	xor	edi, edi
0xa2a6:	xor	eax, eax
0xa2a8:	jmp	0x1d90


0x845c:	add	rsp, 0x20
0x8460:	mov	r11, qword ptr [rsp + 0x10]
0x8465:	cmp	r11, rax
0x8468:	ja	0x84d1


0x846a:	lea	rsi, [rax + 1]
0x846e:	lea	rax, [rip + 0x208fab]
0x8475:	cmp	r12, rax
0x8478:	mov	qword ptr [rbx], rsi
0x847b:	je	0x848f


0x84d1:	mov	eax, dword ptr [rsp + 0x18]
0x84d5:	mov	dword ptr [r13], eax
0x84d9:	add	rsp, 0x28
0x84dd:	mov	rax, r12
0x84e0:	pop	rbx
0x84e1:	pop	rbp
0x84e2:	pop	r12
0x84e4:	pop	r13
0x84e6:	pop	r14
0x84e8:	pop	r15
0x84ea:	ret	


0x848f:	mov	rdi, rsi
0x8492:	mov	qword ptr [rsp + 0x10], rsi
0x8497:	call	0x93c0


0x847d:	mov	rdi, r12
0x8480:	mov	qword ptr [rsp + 0x10], rsi
0x8485:	call	0x1a60


0x848a:	mov	rsi, qword ptr [rsp + 0x10]
0x848f:	mov	rdi, rsi
0x8492:	mov	qword ptr [rsp + 0x10], rsi
0x8497:	call	0x93c0


0x849c:	sub	rsp, 8
0x84a0:	mov	qword ptr [rbx + 8], rax
0x84a4:	mov	r8d, dword ptr [rbp]
0x84a8:	push	qword ptr [rbp + 0x30]
0x84ab:	push	qword ptr [rbp + 0x28]
0x84ae:	mov	rcx, r14
0x84b1:	push	r15
0x84b3:	mov	r9d, dword ptr [rsp + 0x3c]
0x84b8:	mov	rdi, rax
0x84bb:	mov	rdx, qword ptr [rsp + 0x28]
0x84c0:	mov	rsi, qword ptr [rsp + 0x30]
0x84c5:	mov	r12, rax
0x84c8:	call	0x7130


0x8be2:	mov	rdi, qword ptr [rsp + 0x38]
0x8be7:	xor	rdi, qword ptr fs:[0x28]
0x8bf0:	jne	0x8bfc


0x8bf2:	add	rsp, 0x48
0x8bf6:	ret	


0x8bfc:	call	0x1b90


0x892f:	mov	rcx, qword ptr [rsp + 0x38]
0x8934:	xor	rcx, qword ptr fs:[0x28]
0x893d:	jne	0x8949


0x893f:	add	rsp, 0x48
0x8943:	ret	


0x8949:	call	0x1b90


0x89bb:	mov	rdx, qword ptr [rsp + 0x38]
0x89c0:	xor	rdx, qword ptr fs:[0x28]
0x89c9:	jne	0x89d5


0x89cb:	add	rsp, 0x48
0x89cf:	ret	


0x89d5:	call	0x1b90


0x56e1:	mov	edx, 5
0x56e6:	mov	rsi, r13
0x56e9:	xor	edi, edi
0x56eb:	mov	rbx, rax
0x56ee:	call	0x1b60


0x56f3:	lea	rdx, [rip + 0x70a5]
0x56fa:	mov	rcx, rax
0x56fd:	xor	edi, edi
0x56ff:	mov	r8, rbx
0x5702:	xor	esi, esi
0x5704:	xor	eax, eax
0x5706:	call	0x4140


0x570b:	mov	edi, 1
0x5710:	call	0x5030


0x8b4f:	mov	rcx, qword ptr [rsp + 0x38]
0x8b54:	xor	rcx, qword ptr fs:[0x28]
0x8b5d:	jne	0x8b69


0x8b5f:	add	rsp, 0x48
0x8b63:	ret	


0x8b69:	call	0x1b90


0x2b29:	lea	rsi, [rip + 0xafa0]
0x2b30:	mov	rbp, rax
0x2b33:	xor	edi, edi
0x2b35:	mov	edx, 5
0x2b3a:	call	0x1b60


0x2b3f:	mov	rcx, rbp
0x2b42:	mov	rdx, rax
0x2b45:	xor	esi, esi
0x2b47:	xor	edi, edi
0x2b49:	xor	eax, eax
0x2b4b:	call	0x4140


0x2b50:	jmp	0x25fe


0x3487:	lea	rsi, [rip + 0xa722]
0x348e:	mov	edx, 5
0x3493:	xor	edi, edi
0x3495:	mov	rbx, rax
0x3498:	call	0x1b60


0x349d:	mov	rdx, rax
0x34a0:	mov	rax, qword ptr [rsp + 0x10]
0x34a5:	mov	rcx, rbx
0x34a8:	xor	edi, edi
0x34aa:	mov	esi, dword ptr [rax]
0x34ac:	xor	eax, eax
0x34ae:	call	0x4140


0x34b3:	mov	dword ptr [rsp + 0x18], 1
0x34bb:	jmp	0x327c


0x32b0:	lea	rsi, [rip + 0xa8f9]
0x32b7:	mov	edx, 5
0x32bc:	xor	edi, edi
0x32be:	mov	rbx, rax
0x32c1:	call	0x1b60


0x32c6:	mov	rdx, rax
0x32c9:	mov	rax, qword ptr [rsp + 0x10]
0x32ce:	mov	rcx, rbx
0x32d1:	xor	edi, edi
0x32d3:	mov	esi, dword ptr [rax]
0x32d5:	xor	eax, eax
0x32d7:	call	0x4140


0x32dc:	mov	dword ptr [rsp + 0x18], 1
0x32e4:	jmp	0x2f4e


0x5a0e:	lea	rsi, [rip + 0x6db1]
0x5a15:	mov	rbx, rax
0x5a18:	mov	edx, 5
0x5a1d:	xor	edi, edi
0x5a1f:	call	0x1b60


0x5a24:	mov	esi, dword ptr [rsp + 0xc]
0x5a28:	mov	rdx, rax
0x5a2b:	mov	rcx, rbx
0x5a2e:	xor	edi, edi
0x5a30:	xor	eax, eax
0x5a32:	call	0x4140


0x5a37:	jmp	0x59ef


0x59ef:	call	0x4c00


0x59f4:	mov	edi, 1
0x59f9:	call	0x1e10


0x590e:	mov	edx, 5
0x5913:	mov	rbx, rax
0x5916:	lea	rsi, [rip + 0x6e99]
0x591d:	jmp	0x5a1d


0x5a1d:	xor	edi, edi
0x5a1f:	call	0x1b60


0x4ff9:	lea	rsi, [rip + 0x7b88]
0x5000:	xor	edi, edi
0x5002:	mov	edx, 5
0x5007:	mov	r13, rax
0x500a:	call	0x1b60


0x500f:	mov	rbx, rax
0x5012:	call	0x1a80


0x5017:	mov	esi, dword ptr [rax]
0x5019:	mov	rcx, r13
0x501c:	mov	rdx, rbx
0x501f:	xor	edi, edi
0x5021:	xor	eax, eax
0x5023:	call	0x4140


0x5028:	jmp	0x4fc4


0x8a7e:	mov	rsi, qword ptr [rsp + 0x38]
0x8a83:	xor	rsi, qword ptr fs:[0x28]
0x8a8c:	jne	0x8a93


0x8a8e:	add	rsp, 0x48
0x8a92:	ret	


0x8a93:	call	0x1b90


0x84cd:	add	rsp, 0x20
0x84d1:	mov	eax, dword ptr [rsp + 0x18]
0x84d5:	mov	dword ptr [r13], eax
0x84d9:	add	rsp, 0x28
0x84dd:	mov	rax, r12
0x84e0:	pop	rbx
0x84e1:	pop	rbp
0x84e2:	pop	r12
0x84e4:	pop	r13
0x84e6:	pop	r14
0x84e8:	pop	r15
0x84ea:	ret	


0x871c:	lea	rsi, [rax + 1]
0x8720:	mov	qword ptr [rsp + 0x48], rax
0x8725:	add	rsp, 0x20
0x8729:	mov	rdi, rsi
0x872c:	mov	qword ptr [rsp + 0x18], rsi
0x8731:	call	0x93c0


0x8736:	mov	qword ptr [rsp + 0x10], rax
0x873b:	sub	rsp, 8
0x873f:	push	qword ptr [rbx + 0x30]
0x8742:	push	qword ptr [rbx + 0x28]
0x8745:	mov	r10, qword ptr [rsp + 0x38]
0x874a:	mov	r9d, ebp
0x874d:	mov	r8d, dword ptr [rbx]
0x8750:	mov	rcx, r15
0x8753:	mov	rdx, r14
0x8756:	mov	rdi, rax
0x8759:	push	r10
0x875b:	mov	rsi, qword ptr [rsp + 0x38]
0x8760:	call	0x7130


0x8765:	mov	eax, dword ptr [rsp + 0x2c]
0x8769:	add	rsp, 0x20
0x876d:	test	r12, r12
0x8770:	mov	dword ptr [r13], eax
0x8774:	je	0x877f


0x877f:	mov	rax, qword ptr [rsp + 0x10]
0x8784:	add	rsp, 0x38
0x8788:	pop	rbx
0x8789:	pop	rbp
0x878a:	pop	r12
0x878c:	pop	r13
0x878e:	pop	r14
0x8790:	pop	r15
0x8792:	ret	


0x8776:	mov	r11, qword ptr [rsp + 0x28]
0x877b:	mov	qword ptr [r12], r11
0x877f:	mov	rax, qword ptr [rsp + 0x10]
0x8784:	add	rsp, 0x38
0x8788:	pop	rbx
0x8789:	pop	rbp
0x878a:	pop	r12
0x878c:	pop	r13
0x878e:	pop	r14
0x8790:	pop	r15
0x8792:	ret	


0x8691:	mov	dword ptr [rbp], r12d
0x8695:	add	rsp, 0x38
0x8699:	pop	rbx
0x869a:	pop	rbp
0x869b:	pop	r12
0x869d:	pop	r13
0x869f:	pop	r14
0x86a1:	pop	r15
0x86a3:	ret	


0x38e8:	lea	rsi, [rip + 0x905a]
0x38ef:	mov	edx, 5
0x38f4:	xor	edi, edi
0x38f6:	mov	rbx, rax
0x38f9:	call	0x1b60


0x38fe:	mov	rdx, rax
0x3901:	mov	rax, qword ptr [rsp + 0x10]
0x3906:	mov	rcx, rbx
0x3909:	xor	edi, edi
0x390b:	mov	esi, dword ptr [rax]
0x390d:	xor	eax, eax
0x390f:	call	0x4140


0x3914:	mov	dword ptr [rsp + 0x18], 1
0x391c:	jmp	0x36a5


0x31f0:	mov	edx, 5
0x31f5:	mov	rbx, rax
0x31f8:	lea	rsi, [rip + 0x9762]
0x31ff:	jmp	0x2ee2


0x2ee2:	xor	edi, edi
0x2ee4:	call	0x1b60


0x2ee9:	mov	rdx, rax
0x2eec:	mov	rax, qword ptr [rsp + 0x10]
0x2ef1:	mov	rcx, rbx
0x2ef4:	xor	edi, edi
0x2ef6:	mov	esi, dword ptr [rax]
0x2ef8:	xor	eax, eax
0x2efa:	call	0x4140


0x2eff:	mov	dword ptr [rsp + 0x18], 1
0x2f07:	cmp	qword ptr [rip + 0x20e111], 0
0x2f0f:	je	0x3261


0x3aea:	lea	rsi, [rip + 0x8e25]
0x3af1:	mov	edx, 5
0x3af6:	xor	edi, edi
0x3af8:	mov	rbx, rax
0x3afb:	call	0x1b60


0x3b00:	mov	rdx, rax
0x3b03:	mov	rax, qword ptr [rsp + 0x10]
0x3b08:	mov	rcx, rbx
0x3b0b:	mov	edi, 1
0x3b10:	mov	esi, dword ptr [rax]
0x3b12:	xor	eax, eax
0x3b14:	call	0x4140


0x396b:	lea	rsi, [rip + 0x8e75]
0x3972:	mov	edx, 5
0x3977:	xor	edi, edi
0x3979:	mov	rbx, rax
0x397c:	call	0x1b60


0x3981:	mov	rdx, rax
0x3984:	mov	rax, qword ptr [rsp + 0x10]
0x3989:	xor	edi, edi
0x398b:	mov	rcx, rbx
0x398e:	mov	esi, dword ptr [rax]
0x3990:	xor	eax, eax
0x3992:	call	0x4140


0x3997:	call	0x4c00


0x399c:	mov	edi, 1
0x39a1:	call	0x1e10


0x2ed3:	lea	rsi, [rip + 0x9a5e]
0x2eda:	mov	rbx, rax
0x2edd:	mov	edx, 5
0x2ee2:	xor	edi, edi
0x2ee4:	call	0x1b60


0x3733:	lea	rsi, [rip + 0xa43e]
0x373a:	xor	edi, edi
0x373c:	mov	edx, 5
0x3741:	mov	rbp, rax
0x3744:	call	0x1b60


0x3749:	mov	rdx, rax
0x374c:	mov	rax, qword ptr [rsp + 0x10]
0x3751:	mov	r8, rbp
0x3754:	mov	rcx, rbx
0x3757:	xor	edi, edi
0x3759:	mov	esi, dword ptr [rax]
0x375b:	xor	eax, eax
0x375d:	call	0x4140


0x3762:	jmp	0x2eff


0x38c3:	mov	edx, 5
0x38c8:	mov	rbx, rax
0x38cb:	lea	rsi, [rip + 0x8ed4]
0x38d2:	jmp	0x2ee2


0x351a:	lea	rsi, [rip + 0xa577]
0x3521:	mov	rbx, rax
0x3524:	mov	edx, 5
0x3529:	xor	edi, edi
0x352b:	call	0x1b60


0x3530:	mov	r8, rbx
0x3533:	mov	rdx, rax
0x3536:	mov	rcx, r12
0x3539:	mov	esi, ebp
0x353b:	mov	edi, 1
0x3540:	xor	eax, eax
0x3542:	call	0x4140


0x3547:	cmp	dword ptr [rip + 0x20dace], 1
0x354e:	je	0x3069


0x3069:	mov	rdi, qword ptr [rip + 0x20e378]
0x3070:	xor	esi, esi
0x3072:	mov	ecx, 1
0x3077:	mov	rdx, r12
0x307a:	call	0x44b0


0x3554:	lea	rsi, [rip + 0xa5c5]
0x355b:	xor	edi, edi
0x355d:	mov	edx, 5
0x3562:	call	0x1b60


0x3567:	xor	esi, esi
0x3569:	mov	rdx, rax
0x356c:	xor	edi, edi
0x356e:	xor	eax, eax
0x3570:	call	0x4140


0x3575:	jmp	0x3069


0x307f:	test	rax, rax
0x3082:	jns	0x2d2f


0x3088:	mov	rax, qword ptr [rsp + 0x10]
0x308d:	cmp	dword ptr [rax], 0
0x3090:	jne	0x2cd7


0x2d2f:	test	byte ptr [rip + 0x20e657], 4
0x2d36:	je	0x26f0


0x3096:	lea	rsi, [rip + 0xaab3]
0x309d:	xor	edi, edi
0x309f:	mov	edx, 5
0x30a4:	call	0x1b60


0x2cd7:	mov	rdx, qword ptr [rip + 0x20e70a]
0x2cde:	mov	esi, 3
0x2ce3:	xor	edi, edi
0x2ce5:	call	0x8ae0


0x26f0:	cmp	dword ptr [rip + 0x20e925], 4
0x26f7:	je	0x287d


0x2d3c:	cmp	qword ptr [rsp + 8], 0
0x2d42:	jne	0x26f0


0x2d48:	mov	r12, qword ptr [rip + 0x20e681]
0x2d4f:	xor	ebp, ebp
0x2d51:	cmp	r12, rbp
0x2d54:	ja	0x27cb


0x27cb:	mov	esi, dword ptr [rip + 0x20ebbb]
0x27d1:	add	qword ptr [rip + 0x20eb8f], 1
0x27d9:	mov	qword ptr [rsp + 8], rbp
0x27de:	test	esi, 0x400
0x27e4:	je	0x2820


0x2820:	mov	r15, qword ptr [rip + 0x20eaf1]
0x2827:	mov	rdi, qword ptr [rip + 0x20eae2]
0x282e:	cmp	r15, rdi
0x2831:	je	0x2ea7


0x27e6:	test	esi, 0x100
0x27ec:	jne	0x2ff7


0x2ea7:	mov	rsi, rbp
0x2eaa:	mov	rdi, r15
0x2ead:	call	0x4e30


0x2837:	cmp	byte ptr [rip + 0x20eb42], 0
0x283e:	jne	0x2d76


0x27f2:	mov	rdx, r12
0x27f5:	sub	rdx, rbp
0x27f8:	and	esi, 0x18
0x27fb:	je	0x2802


0x2ff7:	mov	qword ptr [rsp + 8], rbp
0x2ffc:	mov	rbp, r12
0x2fff:	jmp	0x2820


0x2844:	mov	ecx, dword ptr [rip + 0x20eb42]
0x284a:	test	cl, 0x80
0x284d:	jne	0x2db2


0x2d76:	test	rbp, rbp
0x2d79:	je	0x2844


0x2802:	mov	rdi, qword ptr [rip + 0x20eb0f]
0x2809:	add	rdi, rbp
0x280c:	call	0x1c40


0x27fd:	mov	esi, 0x20
0x2802:	mov	rdi, qword ptr [rip + 0x20eb0f]
0x2809:	add	rdi, rbp
0x280c:	call	0x1c40


0x2853:	test	cl, 8
0x2856:	jne	0x2e25


0x2db2:	cmp	byte ptr [rip + 0x20e388], 0
0x2db9:	je	0x2dd4


0x2d7f:	lea	rcx, [r15 + rbp]
0x2d83:	mov	rax, r15
0x2d86:	nop	word ptr cs:[rax + rax]
0x2d90:	movzx	edx, byte ptr [rax]
0x2d93:	add	rax, 1
0x2d97:	movzx	edx, byte ptr [rbx + rdx]
0x2d9b:	mov	byte ptr [rax - 1], dl
0x2d9e:	cmp	rax, rcx
0x2da1:	jne	0x2d90


0x285c:	and	ecx, 0x10
0x285f:	je	0x2bcd


0x2e25:	mov	rsi, rbp
0x2e28:	mov	rdi, r15
0x2e2b:	call	0x5b20


0x2dd4:	test	bpl, 1
0x2dd8:	je	0x2df0


0x2dbb:	movzx	eax, byte ptr [rip + 0x20e37e]
0x2dc2:	add	rbp, 1
0x2dc6:	mov	byte ptr [rip + 0x20e374], 0
0x2dcd:	sub	r15, 1
0x2dd1:	mov	byte ptr [r15], al
0x2dd4:	test	bpl, 1
0x2dd8:	je	0x2df0


0x2da3:	mov	ecx, dword ptr [rip + 0x20e5e3]
0x2da9:	test	cl, 0x80
0x2dac:	je	0x2853


0x2d90:	movzx	edx, byte ptr [rax]
0x2d93:	add	rax, 1
0x2d97:	movzx	edx, byte ptr [rbx + rdx]
0x2d9b:	mov	byte ptr [rax - 1], dl
0x2d9e:	cmp	rax, rcx
0x2da1:	jne	0x2d90


0x2bcd:	mov	r14, qword ptr [rip + 0x20e7f4]
0x2bd4:	mov	r13, qword ptr [rip + 0x20e72d]
0x2bdb:	mov	rsi, r15
0x2bde:	mov	r12, r14
0x2be1:	sub	r12, r13
0x2be4:	cmp	r12, rbp
0x2be7:	cmova	r12, rbp
0x2beb:	add	rdi, r13
0x2bee:	mov	rdx, r12
0x2bf1:	sub	rbp, r12
0x2bf4:	add	r15, r12
0x2bf7:	add	r12, r13
0x2bfa:	call	0x1ce0


0x2865:	mov	rsi, rbp
0x2868:	mov	rdi, r15
0x286b:	call	0x5c40


0x2df0:	mov	rdx, rbp
0x2df3:	lea	rax, [r15 + rbp]
0x2df7:	shr	rdx, 1
0x2dfa:	je	0x2e18


0x2dda:	sub	rbp, 1
0x2dde:	mov	byte ptr [rip + 0x20e35c], 1
0x2de5:	movzx	eax, byte ptr [r15 + rbp]
0x2dea:	mov	byte ptr [rip + 0x20e350], al
0x2df0:	mov	rdx, rbp
0x2df3:	lea	rax, [r15 + rbp]
0x2df7:	shr	rdx, 1
0x2dfa:	je	0x2e18


0x2e18:	add	r15, 1
0x2e1c:	test	cl, 8
0x2e1f:	je	0x285c


0x2dfc:	neg	rdx
0x2dff:	lea	rsi, [rax + rdx*2]
0x2e03:	nop	dword ptr [rax + rax]
0x2e08:	movzx	edx, byte ptr [rax - 2]
0x2e0c:	sub	rax, 2
0x2e10:	mov	byte ptr [rax + 2], dl
0x2e13:	cmp	rax, rsi
0x2e16:	jne	0x2e08


0x2e08:	movzx	edx, byte ptr [rax - 2]
0x2e0c:	sub	rax, 2
0x2e10:	mov	byte ptr [rax + 2], dl
0x2e13:	cmp	rax, rsi
0x2e16:	jne	0x2e08


0x2870:	cmp	dword ptr [rip + 0x20e7a5], 4
0x2877:	jne	0x26fd


0x2bff:	cmp	r14, r12
0x2c02:	mov	qword ptr [rip + 0x20e6ff], r12
0x2c09:	ja	0x2bbd


0x2c0b:	jmp	0x2bb8


0x2bbd:	test	rbp, rbp
0x2bc0:	je	0x26f0


0x2bb8:	call	0x5a80


0x2bc6:	mov	rdi, qword ptr [rip + 0x20e743]
0x2bcd:	mov	r14, qword ptr [rip + 0x20e7f4]
0x2bd4:	mov	r13, qword ptr [rip + 0x20e72d]
0x2bdb:	mov	rsi, r15
0x2bde:	mov	r12, r14
0x2be1:	sub	r12, r13
0x2be4:	cmp	r12, rbp
0x2be7:	cmova	r12, rbp
0x2beb:	add	rdi, r13
0x2bee:	mov	rdx, r12
0x2bf1:	sub	rbp, r12
0x2bf4:	add	r15, r12
0x2bf7:	add	r12, r13
0x2bfa:	call	0x1ce0


0x2e30:	jmp	0x26f0


0x2811:	mov	qword ptr [rsp + 8], rbp
0x2816:	mov	rbp, r12
0x2819:	nop	dword ptr [rax]
0x2820:	mov	r15, qword ptr [rip + 0x20eaf1]
0x2827:	mov	rdi, qword ptr [rip + 0x20eae2]
0x282e:	cmp	r15, rdi
0x2831:	je	0x2ea7


0x2eb2:	add	qword ptr [rip + 0x20e49f], rax
0x2eb9:	cmp	rax, rbp
0x2ebc:	je	0x32e9


0x32e9:	cmp	qword ptr [rip + 0x20e0e0], rbp
0x32f0:	je	0x34c0


0x34c0:	add	qword ptr [rip + 0x20dea8], 1
0x34c8:	jmp	0x26f0


0x32f6:	add	qword ptr [rip + 0x20e07a], 1
0x32fe:	jmp	0x26f0


0x2cea:	lea	rsi, [rip + 0x9ad5]
0x2cf1:	mov	edx, 5
0x2cf6:	xor	edi, edi
0x2cf8:	mov	rbp, rax
0x2cfb:	call	0x1b60


0x2d00:	mov	rdx, rax
0x2d03:	mov	rax, qword ptr [rsp + 0x10]
0x2d08:	mov	rcx, rbp
0x2d0b:	xor	edi, edi
0x2d0d:	mov	esi, dword ptr [rax]
0x2d0f:	xor	eax, eax
0x2d11:	call	0x4140


0x2d16:	mov	byte ptr [rip + 0x20e61f], 0
0x2d1d:	mov	dword ptr [rip + 0x20e611], 0x1d
0x2d27:	mov	dword ptr [rsp + 0x18], 1
0x2d2f:	test	byte ptr [rip + 0x20e657], 4
0x2d36:	je	0x26f0


0x30a9:	xor	esi, esi
0x30ab:	mov	rdx, rax
0x30ae:	xor	edi, edi
0x30b0:	xor	eax, eax
0x30b2:	call	0x4140


0x30b7:	jmp	0x2cd7


0x3b54:	lea	rsi, [rip + 0x8c4b]
0x3b5b:	mov	edx, 5
0x3b60:	xor	edi, edi
0x3b62:	mov	rbx, rax
0x3b65:	call	0x1b60


0x3b6a:	mov	rdx, rax
0x3b6d:	mov	rax, qword ptr [rsp + 0x10]
0x3b72:	mov	rcx, rbx
0x3b75:	mov	edi, 1
0x3b7a:	mov	esi, dword ptr [rax]
0x3b7c:	xor	eax, eax
0x3b7e:	call	0x4140


0x3bdd:	lea	rsi, [rip + 0x8d32]
0x3be4:	mov	edx, 5
0x3be9:	xor	edi, edi
0x3beb:	mov	rbx, rax
0x3bee:	call	0x1b60


0x3bf3:	mov	rdx, rax
0x3bf6:	mov	rax, qword ptr [rsp + 0x10]
0x3bfb:	mov	rcx, rbx
0x3bfe:	mov	edi, 1
0x3c03:	mov	esi, dword ptr [rax]
0x3c05:	xor	eax, eax
0x3c07:	call	0x4140


0x4465:	lea	rsi, [rip + 0x8219]
0x446c:	mov	edx, 5
0x4471:	xor	edi, edi
0x4473:	mov	rbp, rax
0x4476:	call	0x1b60


0x447b:	mov	rbx, rax
0x447e:	call	0x1a80


0x4483:	mov	esi, dword ptr [rax]
0x4485:	mov	rcx, rbp
0x4488:	mov	rdx, rbx
0x448b:	mov	edi, 1
0x4490:	xor	eax, eax
0x4492:	call	0x4140


0x5a53:	lea	rsi, [rip + 0x6d4c]
0x5a5a:	mov	edx, 5
0x5a5f:	xor	edi, edi
0x5a61:	mov	rbx, rax
0x5a64:	call	0x1b60


0x5a69:	mov	esi, dword ptr [r15]
0x5a6c:	mov	rdx, rax
0x5a6f:	mov	rcx, rbx
0x5a72:	mov	edi, 1
0x5a77:	xor	eax, eax
0x5a79:	call	0x4140


0x5a7e:	nop	


0x490a:	lea	rsi, [rip + 0x7dcc]
0x4911:	mov	edx, 5
0x4916:	xor	edi, edi
0x4918:	mov	rbp, rax
0x491b:	call	0x1b60


0x4920:	mov	rbx, rax
0x4923:	call	0x1a80


0x4928:	mov	esi, dword ptr [rax]
0x492a:	mov	rcx, rbp
0x492d:	mov	rdx, rbx
0x4930:	mov	edi, 1
0x4935:	xor	eax, eax
0x4937:	call	0x4140


0x493c:	nop	dword ptr [rax]


0x48c7:	lea	rsi, [rip + 0x7df9]
0x48ce:	mov	edx, 5
0x48d3:	xor	edi, edi
0x48d5:	mov	rbp, rax
0x48d8:	call	0x1b60


0x48dd:	mov	rbx, rax
0x48e0:	call	0x1a80


0x48e5:	mov	esi, dword ptr [rax]
0x48e7:	mov	rcx, rbp
0x48ea:	mov	rdx, rbx
0x48ed:	mov	edi, 1
0x48f2:	xor	eax, eax
0x48f4:	call	0x4140


0x5ad3:	lea	rsi, [rip + 0x6d0d]
0x5ada:	xor	edi, edi
0x5adc:	mov	edx, 5
0x5ae1:	mov	r12, rax
0x5ae4:	call	0x1b60


0x5ae9:	mov	rbp, rax
0x5aec:	call	0x1a80


0x5af1:	mov	esi, dword ptr [rax]
0x5af3:	xor	edi, edi
0x5af5:	xor	eax, eax
0x5af7:	mov	rcx, r12
0x5afa:	mov	rdx, rbp
0x5afd:	call	0x4140


0x5b02:	test	rbx, rbx
0x5b05:	je	0x5b0f


0x5b0f:	call	0x4c00


0x5b07:	add	qword ptr [rip + 0x20b869], 1
0x5b0f:	call	0x4c00


0x5b14:	mov	edi, 1
0x5b19:	call	0x1e10


0xa454:	mov	rax, -1
0xa45b:	jmp	0xa426


0x277f:	cmp	rax, 0
0x2783:	jle	0x2c28


0x2c28:	mov	esi, dword ptr [rip + 0x20e75e]
0x2c2e:	je	0x3105


0x2789:	xor	edx, edx
0x278b:	mov	rcx, rax
0x278e:	add	rcx, qword ptr [rip + 0x20eb9b]
0x2795:	mov	rbp, rax
0x2798:	setb	dl
0x279b:	mov	qword ptr [rip + 0x20eb8e], rcx
0x27a2:	test	rdx, rdx
0x27a5:	je	0x27ae


0x3105:	movzx	eax, byte ptr [rip + 0x20e15f]
0x310c:	or	byte ptr [rip + 0x20e157], al
0x3112:	cmp	byte ptr [rip + 0x20e151], 0
0x3119:	movzx	eax, byte ptr [rip + 0x20e148]
0x3120:	je	0x3131


0x2c34:	and	esi, 0x100
0x2c3a:	je	0x2c45


0x27ae:	cmp	byte ptr [rip + 0x20eab6], 0
0x27b5:	jne	0x2e35


0x27a7:	mov	byte ptr [rip + 0x20eb7b], 1
0x27ae:	cmp	byte ptr [rip + 0x20eab6], 0
0x27b5:	jne	0x2e35


0x3131:	or	eax, dword ptr [rsp + 0x28]
0x3135:	mov	byte ptr [rip + 0x20e12d], al
0x313b:	and	byte ptr [rip + 0x20e126], 1
0x3142:	cmp	byte ptr [rip + 0x20dff8], 0
0x3149:	je	0x320f


0x3122:	xor	ebx, ebx
0x3124:	test	esi, 0x200
0x312a:	sete	bl
0x312d:	mov	dword ptr [rsp + 0x28], ebx
0x3131:	or	eax, dword ptr [rsp + 0x28]
0x3135:	mov	byte ptr [rip + 0x20e12d], al
0x313b:	and	byte ptr [rip + 0x20e126], 1
0x3142:	cmp	byte ptr [rip + 0x20dff8], 0
0x3149:	je	0x320f


0x2c45:	mov	rsi, qword ptr [rip + 0x20e79c]
0x2c4c:	mov	edi, 4
0x2c51:	call	0x89e0


0x2c3c:	cmp	dword ptr [rip + 0x20e3d9], 1
0x2c43:	je	0x2ca2


0x27bb:	mov	r12, qword ptr [rip + 0x20ec0e]
0x27c2:	cmp	r12, rbp
0x27c5:	jbe	0x2d60


0x2e35:	mov	rsi, rax
0x2e38:	xor	edi, edi
0x2e3a:	call	0x45b0


0x2ca2:	mov	rbp, qword ptr [rip + 0x20e727]
0x2ca9:	sub	rbp, qword ptr [rsp + 8]
0x2cae:	xor	edi, edi
0x2cb0:	mov	rsi, rbp
0x2cb3:	call	0x45b0


0x2d60:	add	qword ptr [rip + 0x20e5f8], 1
0x2d68:	mov	qword ptr [rsp + 8], 0
0x2d71:	jmp	0x2820


0x2cb8:	cmp	byte ptr [rip + 0x20e67d], 0
0x2cbf:	jne	0x2e44


0x2cc5:	mov	eax, dword ptr [rip + 0x20e66d]
0x2ccb:	cmp	eax, 0x1d
0x2cce:	je	0x2d2f


0x2e44:	xor	eax, eax
0x2e46:	mov	r12, rbp
0x2e49:	add	r12, qword ptr [rip + 0x20e4e0]
0x2e50:	setb	al
0x2e53:	mov	qword ptr [rip + 0x20e4d6], r12
0x2e5a:	test	rax, rax
0x2e5d:	je	0x3024


0x2cd0:	mov	rdi, qword ptr [rsp + 0x10]
0x2cd5:	mov	dword ptr [rdi], eax
0x2cd7:	mov	rdx, qword ptr [rip + 0x20e70a]
0x2cde:	mov	esi, 3
0x2ce3:	xor	edi, edi
0x2ce5:	call	0x8ae0


0x3024:	mov	rax, r12
0x3027:	shr	rax, 0x3f
0x302b:	or	byte ptr [rip + 0x20e2f8], al
0x3031:	jne	0x2e6a


0x2e63:	mov	byte ptr [rip + 0x20e4bf], 1
0x2e6a:	mov	rsi, qword ptr [rip + 0x20e577]
0x2e71:	mov	edi, 4
0x2e76:	call	0x89e0


0x3037:	xor	esi, esi
0x3039:	xor	edi, edi
0x303b:	mov	edx, 1
0x3040:	call	0x1c10


0x2e6a:	mov	rsi, qword ptr [rip + 0x20e577]
0x2e71:	mov	edi, 4
0x2e76:	call	0x89e0


0x3045:	test	rax, rax
0x3048:	js	0x2cd7


0x304e:	cmp	r12, rax
0x3051:	je	0x2d2f


0x3057:	sub	r12, rax
0x305a:	js	0x3547


0x3060:	cmp	rbp, r12
0x3063:	jb	0x3547


0x2e3f:	jmp	0x27bb


0x2e7b:	lea	rsi, [rip + 0xac76]
0x2e82:	mov	rbp, rax
0x2e85:	xor	edi, edi
0x2e87:	mov	edx, 5
0x2e8c:	call	0x1b60


0x2e91:	mov	rcx, rbp
0x2e94:	mov	rdx, rax
0x2e97:	xor	esi, esi
0x2e99:	xor	edi, edi
0x2e9b:	xor	eax, eax
0x2e9d:	call	0x4140


0x2ea2:	jmp	0x2d16


0x2c56:	lea	rsi, [rip + 0x9b79]
0x2c5d:	xor	edi, edi
0x2c5f:	mov	edx, 5
0x2c64:	mov	rbp, rax
0x2c67:	call	0x1b60


0x2c6c:	mov	rdx, rax
0x2c6f:	mov	rax, qword ptr [rsp + 0x10]
0x2c74:	xor	edi, edi
0x2c76:	mov	rcx, rbp
0x2c79:	mov	esi, dword ptr [rax]
0x2c7b:	xor	eax, eax
0x2c7d:	call	0x4140


0x2c82:	mov	esi, dword ptr [rip + 0x20e704]
0x2c88:	test	esi, 0x100
0x2c8e:	je	0x37a5


0x37a5:	mov	dword ptr [rsp + 0x18], 1
0x37ad:	jmp	0x3142


0x2c94:	cmp	dword ptr [rip + 0x20e381], 1
0x2c9b:	je	0x2ca2


0x2c9d:	call	0x4770


0x2c1e:	cmp	rax, 0
0x2c22:	jg	0x2789


0x5846:	test	rax, rax
0x5849:	js	0x599e


0x599e:	test	ebx, ebx
0x59a0:	jne	0x59fe


0x584f:	je	0x58bd


0x59a2:	mov	rsi, qword ptr [rsp]
0x59a6:	mov	edi, 4
0x59ab:	call	0x89e0


0x59fe:	mov	rdx, qword ptr [rsp]
0x5a02:	mov	esi, 3
0x5a07:	xor	edi, edi
0x5a09:	call	0x8ae0


0x58bd:	mov	rax, r14
0x58c0:	jmp	0x57ca


0x5851:	test	ebx, ebx
0x5853:	jne	0x5874


0x5855:	xor	edx, edx
0x5857:	add	rax, qword ptr [rip + 0x20bad2]
0x585e:	setb	dl
0x5861:	mov	qword ptr [rip + 0x20bac8], rax
0x5868:	test	rdx, rdx
0x586b:	je	0x5874


0x5874:	test	r14, r14
0x5877:	je	0x57c0


0x586d:	mov	byte ptr [rip + 0x20bab5], 1
0x5874:	test	r14, r14
0x5877:	je	0x57c0


0x57c0:	mov	qword ptr [r13], 0
0x57c8:	xor	eax, eax
0x57ca:	mov	rcx, qword ptr [rsp + 0xa8]
0x57d2:	xor	rcx, qword ptr fs:[0x28]
0x57db:	jne	0x5a40


0x587d:	sub	r14, 1
0x5881:	jne	0x5830


0x5883:	mov	rdx, qword ptr [r13]
0x5887:	test	rdx, rdx
0x588a:	je	0x5a39


0x5a39:	xor	eax, eax
0x5a3b:	jmp	0x57ca


0x5890:	mov	rax, qword ptr [rip + 0x20b9c9]
0x5897:	jmp	0x58b8


0x58b8:	xor	r14d, r14d
0x58bb:	jmp	0x583f


0x59b0:	lea	rsi, [rip + 0x6e1f]
0x59b7:	xor	edi, edi
0x59b9:	mov	edx, 5
0x59be:	mov	rbx, rax
0x59c1:	call	0x1b60


0x59c6:	mov	esi, dword ptr [r15]
0x59c9:	mov	rdx, rax
0x59cc:	xor	edi, edi
0x59ce:	xor	eax, eax
0x59d0:	mov	rcx, rbx
0x59d3:	call	0x4140


0x59d8:	test	byte ptr [rip + 0x20b9ae], 1
0x59df:	je	0x59ef


0x59e1:	cmp	dword ptr [rip + 0x20b634], 1
0x59e8:	je	0x59ef


0x59ea:	call	0x4770


0x6f94:	jmp	0x6f68


0x6e55:	jmp	0x6d99


0xc5ad:	add	rbx, 1
0xc5b1:	cmp	rbp, rbx
0xc5b4:	jne	0xc5a0


0xc5a0:	mov	rdx, r15
0xc5a3:	mov	rsi, r14
0xc5a6:	mov	edi, r13d
0xc5a9:	call	qword ptr [r12 + rbx*8]






0xb7a2:	mov	r11d, dword ptr [rdi + 4]
0xb7a6:	cmp	r11d, 0xaf
0xb7ad:	ja	0xb85d


0xb6e6:	mov	r11d, dword ptr [rdi]
0xb6e9:	cmp	r11d, 0x2f
0xb6ed:	ja	0xb82a


0xb70a:	mov	r11d, dword ptr [rdi]
0xb70d:	cmp	r11d, 0x2f
0xb711:	ja	0xb84c


0xb72c:	mov	r11d, dword ptr [rdi]
0xb72f:	cmp	r11d, 0x2f
0xb733:	ja	0xb83b


0xb74e:	mov	r11d, dword ptr [rdi]
0xb751:	cmp	r11d, 0x2f
0xb755:	ja	0xb7fa


0xb6b0:	mov	rdx, qword ptr [rdi + 8]
0xb6b4:	add	rdx, 0xf
0xb6b8:	and	rdx, 0xfffffffffffffff0
0xb6bc:	lea	r11, [rdx + 0x10]
0xb6c0:	mov	qword ptr [rdi + 8], r11
0xb6c4:	fld	xword ptr [rdx]
0xb6c6:	fstp	xword ptr [rax + 0x10]
0xb6c9:	nop	dword ptr [rax]
0xb6d0:	add	rcx, 1
0xb6d4:	add	rax, 0x20
0xb6d8:	cmp	qword ptr [rsi], rcx
0xb6db:	ja	0xb698


0xb7d0:	mov	r11d, dword ptr [rdi]
0xb7d3:	cmp	r11d, 0x2f
0xb7d7:	ja	0xb81c


0xb774:	mov	r11d, dword ptr [rdi]
0xb777:	cmp	r11d, 0x2f
0xb77b:	ja	0xb80b


0x8fe0:	mov	r13, qword ptr [rbx + 0x10]
0x8fe4:	mov	r12, qword ptr [rbx + 8]
0x8fe8:	lea	rsi, [rip + 0x5797]
0x8fef:	mov	rbx, qword ptr [rbx]
0x8ff2:	mov	edx, 5
0x8ff7:	xor	edi, edi
0x8ff9:	call	0x1b60


0x9120:	mov	r9, qword ptr [rbx + 0x10]
0x9124:	mov	r13, qword ptr [rbx + 0x30]
0x9128:	lea	rsi, [rip + 0x57f9]
0x912f:	mov	r12, qword ptr [rbx + 0x28]
0x9133:	mov	r15, qword ptr [rbx + 0x20]
0x9137:	mov	edx, 5
0x913c:	mov	r14, qword ptr [rbx + 0x18]
0x9140:	mov	r8, qword ptr [rbx + 8]
0x9144:	xor	edi, edi
0x9146:	mov	qword ptr [rsp + 8], r9
0x914b:	mov	rbx, qword ptr [rbx]
0x914e:	mov	qword ptr [rsp], r8
0x9152:	call	0x1b60


0x8f00:	mov	r10, qword ptr [rbx + 0x40]
0x8f04:	mov	r9, qword ptr [rbx + 0x38]
0x8f08:	lea	rsi, [rip + 0x5a79]
0x8f0f:	mov	rax, qword ptr [rbx + 0x10]
0x8f13:	mov	r8, qword ptr [rbx + 8]
0x8f17:	mov	edx, 5
0x8f1c:	mov	r13, qword ptr [rbx + 0x30]
0x8f20:	mov	r12, qword ptr [rbx + 0x28]
0x8f24:	mov	r15, qword ptr [rbx + 0x20]
0x8f28:	mov	r14, qword ptr [rbx + 0x18]
0x8f2c:	mov	rbx, qword ptr [rbx]
0x8f2f:	mov	qword ptr [rsp + 0x18], r10
0x8f34:	mov	qword ptr [rsp + 0x10], r9
0x8f39:	mov	qword ptr [rsp], rax
0x8f3d:	mov	qword ptr [rsp + 8], r8
0x8f42:	xor	edi, edi
0x8f44:	call	0x1b60


0x8ec6:	add	rsp, 0x28
0x8eca:	pop	rbx
0x8ecb:	pop	rbp
0x8ecc:	pop	r12
0x8ece:	pop	r13
0x8ed0:	pop	r14
0x8ed2:	pop	r15
0x8ed4:	ret	


0x9088:	mov	r15, qword ptr [rbx + 0x20]
0x908c:	lea	rsi, [rip + 0x5845]
0x9093:	mov	edx, 5
0x9098:	xor	edi, edi
0x909a:	mov	r14, qword ptr [rbx + 0x18]
0x909e:	mov	r13, qword ptr [rbx + 0x10]
0x90a2:	mov	r12, qword ptr [rbx + 8]
0x90a6:	mov	rbx, qword ptr [rbx]
0x90a9:	call	0x1b60


0x9030:	lea	rsi, [rip + 0x5881]
0x9037:	mov	edx, 5
0x903c:	xor	edi, edi
0x903e:	mov	r14, qword ptr [rbx + 0x18]
0x9042:	mov	r13, qword ptr [rbx + 0x10]
0x9046:	mov	r12, qword ptr [rbx + 8]
0x904a:	mov	rbx, qword ptr [rbx]
0x904d:	call	0x1b60


0x8e50:	mov	r9, qword ptr [rbx + 0x38]
0x8e54:	mov	rax, qword ptr [rbx + 0x10]
0x8e58:	lea	rsi, [rip + 0x5af9]
0x8e5f:	mov	r8, qword ptr [rbx + 8]
0x8e63:	mov	edx, 5
0x8e68:	xor	edi, edi
0x8e6a:	mov	r13, qword ptr [rbx + 0x30]
0x8e6e:	mov	r12, qword ptr [rbx + 0x28]
0x8e72:	mov	qword ptr [rsp + 0x10], r9
0x8e77:	mov	r15, qword ptr [rbx + 0x20]
0x8e7b:	mov	r14, qword ptr [rbx + 0x18]
0x8e7f:	mov	qword ptr [rsp], rax
0x8e83:	mov	qword ptr [rsp + 8], r8
0x8e88:	mov	rbx, qword ptr [rbx]
0x8e8b:	call	0x1b60


0x8f98:	mov	r12, qword ptr [rbx + 8]
0x8f9c:	lea	rsi, [rip + 0x57cc]
0x8fa3:	mov	rbx, qword ptr [rbx]
0x8fa6:	mov	edx, 5
0x8fab:	xor	edi, edi
0x8fad:	call	0x1b60


0x8f58:	mov	rbx, qword ptr [rbx]
0x8f5b:	lea	rsi, [rip + 0x57fd]
0x8f62:	mov	edx, 5
0x8f67:	xor	edi, edi
0x8f69:	call	0x1b60


0x90b8:	mov	r8, qword ptr [rbx + 8]
0x90bc:	mov	r12, qword ptr [rbx + 0x28]
0x90c0:	lea	rsi, [rip + 0x5839]
0x90c7:	mov	r15, qword ptr [rbx + 0x20]
0x90cb:	mov	r14, qword ptr [rbx + 0x18]
0x90cf:	mov	edx, 5
0x90d4:	mov	r13, qword ptr [rbx + 0x10]
0x90d8:	xor	edi, edi
0x90da:	mov	rbx, qword ptr [rbx]
0x90dd:	mov	qword ptr [rsp], r8
0x90e1:	call	0x1b60


0xb2c0:	mov	byte ptr [rax], r14b
0xb2c3:	mov	rbx, r14
0xb2c6:	jmp	0xafe4


0xb2e0:	mov	word ptr [rax], r14w
0xb2e4:	mov	rbx, r14
0xb2e7:	jmp	0xafe4


0xb190:	mov	qword ptr [rax], r14
0xb193:	mov	rbx, r14
0xb196:	jmp	0xafe4


0xb2d0:	mov	dword ptr [rax], r14d
0xb2d3:	mov	rbx, r14
0xb2d6:	jmp	0xafe4


0xaee0:	mov	rax, qword ptr [r13 + 0x50]
0xaee4:	lea	rdi, [r15 + r14]
0xaee8:	shl	rax, 5
0xaeec:	add	rax, qword ptr [rbp - 0x3a8]
0xaef3:	movzx	r9d, byte ptr [rax + 0x10]
0xaef8:	mov	eax, dword ptr [rbp - 0x3e0]
0xaefe:	cmp	eax, 1
0xaf01:	jne	0xac0e


0xad98:	mov	rax, qword ptr [r13 + 0x50]
0xad9c:	lea	rdi, [r15 + r14]
0xada0:	shl	rax, 5
0xada4:	add	rax, qword ptr [rbp - 0x3a8]
0xadab:	movsd	xmm0, qword ptr [rax + 0x10]
0xadb0:	mov	eax, dword ptr [rbp - 0x3e0]
0xadb6:	cmp	eax, 1
0xadb9:	je	0xb350


0xabe8:	mov	rax, qword ptr [r13 + 0x50]
0xabec:	lea	rdi, [r15 + r14]
0xabf0:	shl	rax, 5
0xabf4:	add	rax, qword ptr [rbp - 0x3a8]
0xabfb:	mov	r9d, dword ptr [rax + 0x10]
0xabff:	mov	eax, dword ptr [rbp - 0x3e0]
0xac05:	cmp	eax, 1
0xac08:	je	0xae40


0xae58:	mov	rax, qword ptr [r13 + 0x50]
0xae5c:	lea	rdi, [r15 + r14]
0xae60:	shl	rax, 5
0xae64:	add	rax, qword ptr [rbp - 0x3a8]
0xae6b:	movsx	r9d, word ptr [rax + 0x10]
0xae70:	mov	eax, dword ptr [rbp - 0x3e0]
0xae76:	cmp	eax, 1
0xae79:	je	0xae40


0xaf10:	mov	rax, qword ptr [r13 + 0x50]
0xaf14:	lea	rdi, [r15 + r14]
0xaf18:	shl	rax, 5
0xaf1c:	add	rax, qword ptr [rbp - 0x3a8]
0xaf23:	movsx	r9d, byte ptr [rax + 0x10]
0xaf28:	mov	eax, dword ptr [rbp - 0x3e0]
0xaf2e:	cmp	eax, 1
0xaf31:	jne	0xac0e


0xaab0:	mov	rax, qword ptr [r13 + 0x50]
0xaab4:	lea	rdi, [r15 + r14]
0xaab8:	shl	rax, 5
0xaabc:	add	rax, qword ptr [rbp - 0x3a8]
0xaac3:	mov	r9, qword ptr [rax + 0x10]
0xaac7:	mov	eax, dword ptr [rbp - 0x3e0]
0xaacd:	cmp	eax, 1
0xaad0:	je	0xaf98


0xad10:	mov	rax, qword ptr [r13 + 0x50]
0xad14:	lea	rdi, [r15 + r14]
0xad18:	shl	rax, 5
0xad1c:	add	rax, qword ptr [rbp - 0x3a8]
0xad23:	fld	xword ptr [rax + 0x10]
0xad26:	mov	eax, dword ptr [rbp - 0x3e0]
0xad2c:	cmp	eax, 1
0xad2f:	je	0xb360


0xae18:	mov	rax, qword ptr [r13 + 0x50]
0xae1c:	lea	rdi, [r15 + r14]
0xae20:	shl	rax, 5
0xae24:	add	rax, qword ptr [rbp - 0x3a8]
0xae2b:	movzx	r9d, word ptr [rax + 0x10]
0xae30:	mov	eax, dword ptr [rbp - 0x3e0]
0xae36:	cmp	eax, 1
0xae39:	jne	0xac0e


0xb7b3:	mov	edx, r11d
0xb7b6:	add	rdx, qword ptr [rdi + 0x10]
0xb7ba:	add	r11d, 0x10
0xb7be:	mov	dword ptr [rdi + 4], r11d
0xb7c2:	movsd	xmm0, qword ptr [rdx]
0xb7c6:	movsd	qword ptr [rax + 0x10], xmm0
0xb7cb:	jmp	0xb6d0


0xb85d:	mov	rdx, qword ptr [rdi + 8]
0xb861:	lea	r11, [rdx + 8]
0xb865:	mov	qword ptr [rdi + 8], r11
0xb869:	jmp	0xb7c2


0xb6f3:	mov	edx, r11d
0xb6f6:	add	rdx, qword ptr [rdi + 0x10]
0xb6fa:	add	r11d, 8
0xb6fe:	mov	dword ptr [rdi], r11d
0xb701:	mov	rdx, qword ptr [rdx]
0xb704:	mov	qword ptr [rax + 0x10], rdx
0xb708:	jmp	0xb6d0


0xb82a:	mov	rdx, qword ptr [rdi + 8]
0xb82e:	lea	r11, [rdx + 8]
0xb832:	mov	qword ptr [rdi + 8], r11
0xb836:	jmp	0xb701


0xb717:	mov	edx, r11d
0xb71a:	add	rdx, qword ptr [rdi + 0x10]
0xb71e:	add	r11d, 8
0xb722:	mov	dword ptr [rdi], r11d
0xb725:	mov	edx, dword ptr [rdx]
0xb727:	mov	dword ptr [rax + 0x10], edx
0xb72a:	jmp	0xb6d0


0xb84c:	mov	rdx, qword ptr [rdi + 8]
0xb850:	lea	r11, [rdx + 8]
0xb854:	mov	qword ptr [rdi + 8], r11
0xb858:	jmp	0xb725


0xb739:	mov	edx, r11d
0xb73c:	add	rdx, qword ptr [rdi + 0x10]
0xb740:	add	r11d, 8
0xb744:	mov	dword ptr [rdi], r11d
0xb747:	mov	edx, dword ptr [rdx]
0xb749:	mov	byte ptr [rax + 0x10], dl
0xb74c:	jmp	0xb6d0


0xb83b:	mov	rdx, qword ptr [rdi + 8]
0xb83f:	lea	r11, [rdx + 8]
0xb843:	mov	qword ptr [rdi + 8], r11
0xb847:	jmp	0xb747


0xb75b:	mov	edx, r11d
0xb75e:	add	rdx, qword ptr [rdi + 0x10]
0xb762:	add	r11d, 8
0xb766:	mov	dword ptr [rdi], r11d
0xb769:	mov	edx, dword ptr [rdx]
0xb76b:	mov	word ptr [rax + 0x10], dx
0xb76f:	jmp	0xb6d0


0xb7fa:	mov	rdx, qword ptr [rdi + 8]
0xb7fe:	lea	r11, [rdx + 8]
0xb802:	mov	qword ptr [rdi + 8], r11
0xb806:	jmp	0xb769


0xb698:	cmp	dword ptr [rax], 0x16
0xb69b:	ja	0xb6e0


0xb7d9:	mov	edx, r11d
0xb7dc:	add	rdx, qword ptr [rdi + 0x10]
0xb7e0:	add	r11d, 8
0xb7e4:	mov	dword ptr [rdi], r11d
0xb7e7:	mov	rdx, qword ptr [rdx]
0xb7ea:	test	rdx, rdx
0xb7ed:	cmove	rdx, r10
0xb7f1:	mov	qword ptr [rax + 0x10], rdx
0xb7f5:	jmp	0xb6d0


0xb81c:	mov	rdx, qword ptr [rdi + 8]
0xb820:	lea	r11, [rdx + 8]
0xb824:	mov	qword ptr [rdi + 8], r11
0xb828:	jmp	0xb7e7


0xb781:	mov	edx, r11d
0xb784:	add	rdx, qword ptr [rdi + 0x10]
0xb788:	add	r11d, 8
0xb78c:	mov	dword ptr [rdi], r11d
0xb78f:	mov	rdx, qword ptr [rdx]
0xb792:	test	rdx, rdx
0xb795:	cmove	rdx, r9
0xb799:	mov	qword ptr [rax + 0x10], rdx
0xb79d:	jmp	0xb6d0


0xb80b:	mov	rdx, qword ptr [rdi + 8]
0xb80f:	lea	r11, [rdx + 8]
0xb813:	mov	qword ptr [rdi + 8], r11
0xb817:	jmp	0xb78f


0xafe4:	mov	r8, qword ptr [r13 + 8]
0xafe8:	add	r13, 0x58
0xafec:	mov	rcx, qword ptr [r13]
0xaff0:	add	qword ptr [rbp - 0x400], 1
0xaff8:	cmp	rcx, r8
0xaffb:	jne	0xa699


0xaf07:	jmp	0xae40


0xac0e:	cmp	eax, 2
0xac11:	je	0xae88


0xb350:	sub	rsp, 8
0xb354:	push	qword ptr [rbp - 0x3f0]
0xb35a:	jmp	0xadd5


0xadbf:	cmp	eax, 2
0xadc2:	jne	0xb1c0


0xae40:	push	qword ptr [rbp - 0x3f0]
0xae46:	push	r9
0xae48:	mov	r9d, dword ptr [rbp - 0x3b8]
0xae4f:	jmp	0xac21


0xae7b:	cmp	eax, 2
0xae7e:	jne	0xac17


0xaf37:	jmp	0xae40


0xaf98:	push	qword ptr [rbp - 0x3f0]
0xaf9e:	push	r9
0xafa0:	jmp	0xae48


0xaad6:	cmp	eax, 2
0xaad9:	je	0xaf80


0xb360:	sub	rsp, 8
0xb364:	push	qword ptr [rbp - 0x3f0]
0xb36a:	sub	rsp, 0x10
0xb36e:	fstp	xword ptr [rsp]
0xb371:	jmp	0xae9b


0xad35:	cmp	eax, 2
0xad38:	jne	0xb200


0xb6d0:	add	rcx, 1
0xb6d4:	add	rax, 0x20
0xb6d8:	cmp	qword ptr [rsi], rcx
0xb6db:	ja	0xb698


0xb7c2:	movsd	xmm0, qword ptr [rdx]
0xb7c6:	movsd	qword ptr [rax + 0x10], xmm0
0xb7cb:	jmp	0xb6d0


0xb701:	mov	rdx, qword ptr [rdx]
0xb704:	mov	qword ptr [rax + 0x10], rdx
0xb708:	jmp	0xb6d0


0xb725:	mov	edx, dword ptr [rdx]
0xb727:	mov	dword ptr [rax + 0x10], edx
0xb72a:	jmp	0xb6d0


0xb747:	mov	edx, dword ptr [rdx]
0xb749:	mov	byte ptr [rax + 0x10], dl
0xb74c:	jmp	0xb6d0


0xb769:	mov	edx, dword ptr [rdx]
0xb76b:	mov	word ptr [rax + 0x10], dx
0xb76f:	jmp	0xb6d0


0xb7e7:	mov	rdx, qword ptr [rdx]
0xb7ea:	test	rdx, rdx
0xb7ed:	cmove	rdx, r10
0xb7f1:	mov	qword ptr [rax + 0x10], rdx
0xb7f5:	jmp	0xb6d0


0xb78f:	mov	rdx, qword ptr [rdx]
0xb792:	test	rdx, rdx
0xb795:	cmove	rdx, r9
0xb799:	mov	qword ptr [rax + 0x10], rdx
0xb79d:	jmp	0xb6d0


0xae88:	sub	rsp, 8
0xae8c:	push	qword ptr [rbp - 0x3f0]
0xae92:	push	r9
0xae94:	mov	eax, dword ptr [rbp - 0x3b4]
0xae9a:	push	rax
0xae9b:	mov	r9d, dword ptr [rbp - 0x3b8]
0xaea2:	mov	r8, qword ptr [rbp - 0x3d8]
0xaea9:	mov	rsi, r10
0xaeac:	mov	rcx, -1
0xaeb3:	mov	edx, 1
0xaeb8:	xor	eax, eax
0xaeba:	mov	qword ptr [rbp - 0x430], r10
0xaec1:	call	0x1a40


0xac17:	sub	rsp, 8
0xac1b:	push	qword ptr [rbp - 0x3f0]
0xac21:	mov	r8, qword ptr [rbp - 0x3d8]
0xac28:	mov	rcx, -1
0xac2f:	mov	edx, 1
0xac34:	mov	rsi, r10
0xac37:	xor	eax, eax
0xac39:	mov	qword ptr [rbp - 0x430], r10
0xac40:	call	0x1a40


0xadd5:	mov	r9d, dword ptr [rbp - 0x3b8]
0xaddc:	mov	r8, qword ptr [rbp - 0x3d8]
0xade3:	mov	rsi, r10
0xade6:	mov	rcx, -1
0xaded:	mov	edx, 1
0xadf2:	mov	eax, 1
0xadf7:	mov	qword ptr [rbp - 0x430], r10
0xadfe:	call	0x1a40


0xadc8:	mov	eax, dword ptr [rbp - 0x3b4]
0xadce:	push	qword ptr [rbp - 0x3f0]
0xadd4:	push	rax
0xadd5:	mov	r9d, dword ptr [rbp - 0x3b8]
0xaddc:	mov	r8, qword ptr [rbp - 0x3d8]
0xade3:	mov	rsi, r10
0xade6:	mov	rcx, -1
0xaded:	mov	edx, 1
0xadf2:	mov	eax, 1
0xadf7:	mov	qword ptr [rbp - 0x430], r10
0xadfe:	call	0x1a40


0xb1c0:	mov	r9, qword ptr [rbp - 0x3f0]
0xb1c7:	mov	r8, qword ptr [rbp - 0x3d8]
0xb1ce:	mov	rsi, r10
0xb1d1:	mov	rcx, -1
0xb1d8:	mov	edx, 1
0xb1dd:	mov	eax, 1
0xb1e2:	mov	qword ptr [rbp - 0x430], r10
0xb1e9:	call	0x1a40


0xac21:	mov	r8, qword ptr [rbp - 0x3d8]
0xac28:	mov	rcx, -1
0xac2f:	mov	edx, 1
0xac34:	mov	rsi, r10
0xac37:	xor	eax, eax
0xac39:	mov	qword ptr [rbp - 0x430], r10
0xac40:	call	0x1a40


0xae48:	mov	r9d, dword ptr [rbp - 0x3b8]
0xae4f:	jmp	0xac21


0xaf80:	sub	rsp, 8
0xaf84:	push	qword ptr [rbp - 0x3f0]
0xaf8a:	push	r9
0xaf8c:	jmp	0xae94


0xaadf:	sub	rsp, 8
0xaae3:	push	qword ptr [rbp - 0x3f0]
0xaae9:	mov	r8, qword ptr [rbp - 0x3d8]
0xaaf0:	mov	rsi, r10
0xaaf3:	mov	rcx, -1
0xaafa:	mov	edx, 1
0xaaff:	xor	eax, eax
0xab01:	mov	qword ptr [rbp - 0x430], r10
0xab08:	call	0x1a40


0xae9b:	mov	r9d, dword ptr [rbp - 0x3b8]
0xaea2:	mov	r8, qword ptr [rbp - 0x3d8]
0xaea9:	mov	rsi, r10
0xaeac:	mov	rcx, -1
0xaeb3:	mov	edx, 1
0xaeb8:	xor	eax, eax
0xaeba:	mov	qword ptr [rbp - 0x430], r10
0xaec1:	call	0x1a40


0xad3e:	mov	eax, dword ptr [rbp - 0x3b4]
0xad44:	sub	rsp, 8
0xad48:	push	qword ptr [rbp - 0x3f0]
0xad4e:	mov	r9d, dword ptr [rbp - 0x3b8]
0xad55:	mov	r8, qword ptr [rbp - 0x3d8]
0xad5c:	mov	rsi, r10
0xad5f:	sub	rsp, 0x18
0xad63:	mov	rcx, -1
0xad6a:	mov	edx, 1
0xad6f:	fstp	xword ptr [rsp + 8]
0xad73:	push	rax
0xad74:	xor	eax, eax
0xad76:	mov	qword ptr [rbp - 0x430], r10
0xad7d:	call	0x1a40


0xb200:	sub	rsp, 0x10
0xb204:	mov	r9, qword ptr [rbp - 0x3f0]
0xb20b:	fstp	xword ptr [rsp]
0xb20e:	jmp	0xaae9


0xae94:	mov	eax, dword ptr [rbp - 0x3b4]
0xae9a:	push	rax
0xae9b:	mov	r9d, dword ptr [rbp - 0x3b8]
0xaea2:	mov	r8, qword ptr [rbp - 0x3d8]
0xaea9:	mov	rsi, r10
0xaeac:	mov	rcx, -1
0xaeb3:	mov	edx, 1
0xaeb8:	xor	eax, eax
0xaeba:	mov	qword ptr [rbp - 0x430], r10
0xaec1:	call	0x1a40


0xaae9:	mov	r8, qword ptr [rbp - 0x3d8]
0xaaf0:	mov	rsi, r10
0xaaf3:	mov	rcx, -1
0xaafa:	mov	edx, 1
0xaaff:	xor	eax, eax
0xab01:	mov	qword ptr [rbp - 0x430], r10
0xab08:	call	0x1a40


0xab0d:	pop	rsi
0xab0e:	pop	rdi
0xab0f:	mov	r10, qword ptr [rbp - 0x430]
0xab16:	mov	ecx, dword ptr [rbp - 0x3bc]
0xab1c:	test	ecx, ecx
0xab1e:	js	0xac5c


0xac5c:	mov	rdi, qword ptr [rbp - 0x3f8]
0xac63:	cmp	byte ptr [rdi + 1], 0
0xac67:	jne	0xafa8


0xab24:	movsxd	rdx, ecx
0xab27:	cmp	rdx, r10
0xab2a:	jae	0xab3a


0xac6d:	test	eax, eax
0xac6f:	jns	0xab3e


0xafa8:	mov	byte ptr [rdi + 1], 0
0xafac:	jmp	0xaa60


0xab2c:	add	rdx, r15
0xab2f:	cmp	byte ptr [rdx + r14], 0
0xab34:	jne	0xb476


0xab3a:	cmp	ecx, eax
0xab3c:	jge	0xab46


0xac75:	mov	rax, qword ptr [rbp - 0x3c8]
0xac7c:	mov	ebx, dword ptr [rax]
0xac7e:	test	ebx, ebx
0xac80:	jne	0xaca0


0xab3e:	mov	dword ptr [rbp - 0x3bc], eax
0xab44:	mov	ecx, eax
0xab46:	lea	eax, [rcx + 1]
0xab49:	cmp	rax, r10
0xab4c:	jb	0xb380


0xaa60:	mov	rax, qword ptr [rbp - 0x3c8]
0xaa67:	mov	rbx, r12
0xaa6a:	mov	r10d, 0x7fffffff
0xaa70:	sub	rbx, r14
0xaa73:	mov	dword ptr [rbp - 0x3bc], 0xffffffff
0xaa7d:	cmp	rbx, 0x7fffffff
0xaa84:	mov	dword ptr [rax], 0
0xaa8a:	mov	eax, dword ptr [rbp - 0x3d0]
0xaa90:	cmovbe	r10, rbx
0xaa94:	cmp	eax, 0x11
0xaa97:	ja	0xb476


0xab46:	lea	eax, [rcx + 1]
0xab49:	cmp	rax, r10
0xab4c:	jb	0xb380


0xac82:	movzx	eax, byte ptr [r13 + 0x48]
0xac87:	mov	ebx, 0x16
0xac8c:	and	eax, 0xffffffef
0xac8f:	cmp	al, 0x63
0xac91:	mov	eax, 0x54
0xac96:	cmove	ebx, eax
0xac99:	nop	dword ptr [rax]
0xaca0:	cmp	r15, qword ptr [rbp - 0x3e8]
0xaca7:	je	0xacb2


0xaca0:	cmp	r15, qword ptr [rbp - 0x3e8]
0xaca7:	je	0xacb2


0xb380:	mov	rax, qword ptr [rbp - 0x3c8]
0xb387:	mov	edi, dword ptr [rbp - 0x424]
0xb38d:	movsxd	rbx, ecx
0xb390:	add	rbx, r14
0xb393:	mov	dword ptr [rax], edi
0xb395:	jmp	0xafe4


0xab52:	cmp	rbx, 0x7ffffffe
0xab59:	ja	0xb3a0


0xacb2:	mov	rax, qword ptr [rbp - 0x420]
0xacb9:	test	rax, rax
0xacbc:	je	0xacc6


0xaca9:	test	r15, r15
0xacac:	jne	0xb45c


0xab5f:	lea	rsi, [r12 + r12]
0xab63:	lea	edx, [rcx + 2]
0xab66:	test	r12, r12
0xab69:	mov	rax, -1
0xab70:	cmovns	rax, rsi
0xab74:	add	rdx, r14
0xab77:	jb	0xb638


0xb3a0:	cmp	r15, qword ptr [rbp - 0x3e8]
0xb3a7:	je	0xb3b2


0xacc6:	mov	rax, qword ptr [rbp - 0x408]
0xaccd:	mov	rdi, qword ptr [rbp - 0x2b8]
0xacd4:	add	rax, 0x20
0xacd8:	cmp	rdi, rax
0xacdb:	je	0xace2


0xacbe:	mov	rdi, rax
0xacc1:	call	0x1a60


0xb45c:	mov	rdi, r15
0xb45f:	call	0x1a60


0xb638:	cmp	r12, -1
0xb63c:	je	0xaa60


0xab7d:	cmp	rax, rdx
0xab80:	cmovb	rax, rdx
0xab84:	cmp	r12, rax
0xab87:	jae	0xaa60


0xb3b2:	mov	rax, qword ptr [rbp - 0x420]
0xb3b9:	test	rax, rax
0xb3bc:	je	0xb3c6


0xb3a9:	test	r15, r15
0xb3ac:	jne	0xb469


0xace2:	mov	rax, qword ptr [rbp - 0x410]
0xace9:	mov	rdi, qword ptr [rbp - 0x3a8]
0xacf0:	add	rax, 0x10
0xacf4:	cmp	rdi, rax
0xacf7:	je	0xacfe


0xacdd:	call	0x1a60


0xb642:	jmp	0xa6c1


0xab8d:	test	r12, r12
0xab90:	js	0xa6c1


0xb3c6:	mov	rax, qword ptr [rbp - 0x408]
0xb3cd:	mov	rdi, qword ptr [rbp - 0x2b8]
0xb3d4:	add	rax, 0x20
0xb3d8:	cmp	rdi, rax
0xb3db:	je	0xb3e2


0xb3be:	mov	rdi, rax
0xb3c1:	call	0x1a60


0xb469:	mov	rdi, r15
0xb46c:	call	0x1a60


0xacfe:	mov	rax, qword ptr [rbp - 0x3c8]
0xad05:	xor	r15d, r15d
0xad08:	mov	dword ptr [rax], ebx
0xad0a:	jmp	0xa72f


0xacf9:	call	0x1a60


0xa6c1:	cmp	r15, qword ptr [rbp - 0x3e8]
0xa6c8:	je	0xa6d3


0xab96:	cmp	rsi, rax
0xab99:	mov	r12, rsi
0xab9c:	jae	0xabab


0xb3e2:	mov	rax, qword ptr [rbp - 0x410]
0xb3e9:	mov	rdi, qword ptr [rbp - 0x3a8]
0xb3f0:	add	rax, 0x10
0xb3f4:	cmp	rdi, rax
0xb3f7:	je	0xb3fe


0xb3dd:	call	0x1a60


0xab9e:	cmp	rax, -1
0xaba2:	je	0xa6c1


0xabab:	cmp	r15, qword ptr [rbp - 0x3e8]
0xabb2:	sete	bl
0xabb5:	test	r15, r15
0xabb8:	je	0xaf40


0xb3fe:	mov	rax, qword ptr [rbp - 0x3c8]
0xb405:	xor	r15d, r15d
0xb408:	mov	dword ptr [rax], 0x4b
0xb40e:	jmp	0xa72f


0xb3f9:	call	0x1a60


0xaba8:	mov	r12, rax
0xabab:	cmp	r15, qword ptr [rbp - 0x3e8]
0xabb2:	sete	bl
0xabb5:	test	r15, r15
0xabb8:	je	0xaf40


0xaf40:	mov	rdi, r12
0xaf43:	call	0x1d00


0xabbe:	test	bl, bl
0xabc0:	jne	0xaf40


0xabc6:	mov	rsi, r12
0xabc9:	mov	rdi, r15
0xabcc:	call	0x1d50


0xabd1:	test	rax, rax
0xabd4:	je	0xa6c1


0xabda:	mov	r15, rax
0xabdd:	jmp	0xaa60


0xaf48:	test	rax, rax
0xaf4b:	mov	rcx, rax
0xaf4e:	je	0xa6c1


0xaf54:	test	r14, r14
0xaf57:	je	0xb010


0xb010:	mov	r15, rcx
0xb013:	jmp	0xaa60


0xaf5d:	test	bl, bl
0xaf5f:	je	0xb010


0xaf65:	mov	rsi, r15
0xaf68:	mov	rdx, r14
0xaf6b:	mov	rdi, rax
0xaf6e:	call	0x1ce0


0xaf73:	mov	r15, rax
0xaf76:	jmp	0xaa60


0xb471:	jmp	0xb3b2


0xb464:	jmp	0xacb2


0xaec6:	add	rsp, 0x20
0xaeca:	mov	r10, qword ptr [rbp - 0x430]
0xaed1:	jmp	0xab16


0xab16:	mov	ecx, dword ptr [rbp - 0x3bc]
0xab1c:	test	ecx, ecx
0xab1e:	js	0xac5c


0xad82:	add	rsp, 0x30
0xad86:	mov	r10, qword ptr [rbp - 0x430]
0xad8d:	jmp	0xab16


0xac45:	pop	rdx
0xac46:	pop	rcx
0xac47:	mov	ecx, dword ptr [rbp - 0x3bc]
0xac4d:	mov	r10, qword ptr [rbp - 0x430]
0xac54:	test	ecx, ecx
0xac56:	jns	0xab24


0xb1ee:	mov	r10, qword ptr [rbp - 0x430]
0xb1f5:	jmp	0xab16


0xae03:	pop	r8
0xae05:	mov	r10, qword ptr [rbp - 0x430]
0xae0c:	pop	r9
0xae0e:	jmp	0xab16


0x90e6:	sub	rsp, 8
0x90ea:	mov	r9, r13
0x90ed:	push	r12
0x90ef:	push	r15
0x90f1:	push	r14
0x90f3:	mov	r8, qword ptr [rsp + 0x20]
0x90f8:	mov	rcx, rbx
0x90fb:	mov	rdx, rax
0x90fe:	mov	rdi, rbp
0x9101:	mov	esi, 1
0x9106:	xor	eax, eax
0x9108:	call	0x1e30


0x910d:	add	rsp, 0x20
0x9111:	add	rsp, 0x28
0x9115:	pop	rbx
0x9116:	pop	rbp
0x9117:	pop	r12
0x9119:	pop	r13
0x911b:	pop	r14
0x911d:	pop	r15
0x911f:	ret	


0x8f6e:	add	rsp, 0x28
0x8f72:	mov	rcx, rbx
0x8f75:	mov	rdi, rbp
0x8f78:	pop	rbx
0x8f79:	pop	rbp
0x8f7a:	pop	r12
0x8f7c:	pop	r13
0x8f7e:	pop	r14
0x8f80:	pop	r15
0x8f82:	mov	rdx, rax
0x8f85:	mov	esi, 1
0x8f8a:	xor	eax, eax
0x8f8c:	jmp	0x1e30


0x8fb2:	add	rsp, 0x28
0x8fb6:	mov	r8, r12
0x8fb9:	mov	rcx, rbx
0x8fbc:	mov	rdi, rbp
0x8fbf:	mov	rdx, rax
0x8fc2:	mov	esi, 1
0x8fc7:	pop	rbx
0x8fc8:	pop	rbp
0x8fc9:	pop	r12
0x8fcb:	pop	r13
0x8fcd:	pop	r14
0x8fcf:	pop	r15
0x8fd1:	xor	eax, eax
0x8fd3:	jmp	0x1e30


0x8e90:	sub	rsp, 8
0x8e94:	mov	r9, qword ptr [rsp + 0x18]
0x8e99:	mov	rdx, rax
0x8e9c:	mov	rcx, rbx
0x8e9f:	mov	esi, 1
0x8ea4:	mov	rdi, rbp
0x8ea7:	xor	eax, eax
0x8ea9:	push	r9
0x8eab:	push	r13
0x8ead:	push	r12
0x8eaf:	push	r15
0x8eb1:	push	r14
0x8eb3:	mov	r9, qword ptr [rsp + 0x30]
0x8eb8:	mov	r8, qword ptr [rsp + 0x38]
0x8ebd:	call	0x1e30


0x9052:	sub	rsp, 8
0x9056:	push	r14
0x9058:	mov	rdx, rax
0x905b:	mov	r9, r13
0x905e:	mov	r8, r12
0x9061:	mov	rcx, rbx
0x9064:	mov	rdi, rbp
0x9067:	mov	esi, 1
0x906c:	xor	eax, eax
0x906e:	call	0x1e30


0x9073:	pop	rax
0x9074:	pop	rdx
0x9075:	add	rsp, 0x28
0x9079:	pop	rbx
0x907a:	pop	rbp
0x907b:	pop	r12
0x907d:	pop	r13
0x907f:	pop	r14
0x9081:	pop	r15
0x9083:	ret	


0x90ae:	push	r15
0x90b0:	jmp	0x9056


0x9056:	push	r14
0x9058:	mov	rdx, rax
0x905b:	mov	r9, r13
0x905e:	mov	r8, r12
0x9061:	mov	rcx, rbx
0x9064:	mov	rdi, rbp
0x9067:	mov	esi, 1
0x906c:	xor	eax, eax
0x906e:	call	0x1e30


0x9157:	push	r13
0x9159:	push	r12
0x915b:	push	r15
0x915d:	push	r14
0x915f:	mov	r9, qword ptr [rsp + 0x28]
0x9164:	jmp	0x90f3


0x90f3:	mov	r8, qword ptr [rsp + 0x20]
0x90f8:	mov	rcx, rbx
0x90fb:	mov	rdx, rax
0x90fe:	mov	rdi, rbp
0x9101:	mov	esi, 1
0x9106:	xor	eax, eax
0x9108:	call	0x1e30


0x8ffe:	add	rsp, 0x28
0x9002:	mov	r9, r13
0x9005:	mov	r8, r12
0x9008:	mov	rcx, rbx
0x900b:	mov	rdi, rbp
0x900e:	mov	rdx, rax
0x9011:	pop	rbx
0x9012:	pop	rbp
0x9013:	pop	r12
0x9015:	pop	r13
0x9017:	pop	r14
0x9019:	pop	r15
0x901b:	mov	esi, 1
0x9020:	xor	eax, eax
0x9022:	jmp	0x1e30


0x7cd0:	sub	rsp, 8
0x7cd4:	mov	rcx, rbp
0x7cd7:	mov	rsi, r13
0x7cda:	push	qword ptr [rsp + 0x68]
0x7cde:	push	qword ptr [rsp + 0x78]
0x7ce2:	mov	rdi, r14
0x7ce5:	push	0
0x7ce7:	mov	r9d, dword ptr [rsp + 0x98]
0x7cef:	mov	r8d, dword ptr [rsp + 0x28]
0x7cf4:	mov	rdx, qword ptr [rsp + 0x30]
0x7cf9:	and	r9d, 0xfffffffd
0x7cfd:	call	0x7130


0x7d02:	add	rsp, 0x20
0x7d06:	mov	r15, rax
0x7d09:	mov	rbx, qword ptr [rsp + 0xa8]
0x7d11:	xor	rbx, qword ptr fs:[0x28]
0x7d1a:	mov	rax, r15
0x7d1d:	jne	0x8323


0x7d23:	add	rsp, 0xb8
0x7d2a:	pop	rbx
0x7d2b:	pop	rbp
0x7d2c:	pop	r12
0x7d2e:	pop	r13
0x7d30:	pop	r14
0x7d32:	pop	r15
0x7d34:	ret	


0x8323:	call	0x1b90


0x82cd:	sub	rsp, 8
0x82d1:	mov	r8d, 5
0x82d7:	mov	rcx, r11
0x82da:	push	qword ptr [rsp + 0x68]
0x82de:	push	qword ptr [rsp + 0x78]
0x82e2:	mov	rdi, r14
0x82e5:	push	qword ptr [rsp + 0x38]
0x82e9:	mov	r9d, dword ptr [rsp + 0x98]
0x82f1:	mov	rdx, qword ptr [rsp + 0x30]
0x82f6:	mov	rsi, qword ptr [rsp + 0x70]
0x82fb:	call	0x7130


0x8300:	add	rsp, 0x20
0x8304:	mov	r15, rax
0x8307:	jmp	0x7d09


0x7d09:	mov	rbx, qword ptr [rsp + 0xa8]
0x7d11:	xor	rbx, qword ptr fs:[0x28]
0x7d1a:	mov	rax, r15
0x7d1d:	jne	0x8323


0x1a00:	push	qword ptr [rip + 0x20f36a]
0x1a06:	jmp	qword ptr [rip + 0x20f36c]


0x1a0c:	nop	dword ptr [rax]


0x1a16:	push	0
0x1a1b:	jmp	0x1a00


0x1a26:	push	1
0x1a2b:	jmp	0x1a00


0x1a36:	push	2
0x1a3b:	jmp	0x1a00


0x1a46:	push	3
0x1a4b:	jmp	0x1a00


0x1a56:	push	4
0x1a5b:	jmp	0x1a00


0x1a66:	push	5
0x1a6b:	jmp	0x1a00


0x1a76:	push	6
0x1a7b:	jmp	0x1a00


0x1a86:	push	7
0x1a8b:	jmp	0x1a00


0x1a96:	push	8
0x1a9b:	jmp	0x1a00


0x1aa6:	push	9
0x1aab:	jmp	0x1a00


0x1ab6:	push	0xa
0x1abb:	jmp	0x1a00


0x1ac6:	push	0xb
0x1acb:	jmp	0x1a00


0x1ad6:	push	0xc
0x1adb:	jmp	0x1a00


0x1ae6:	push	0xd
0x1aeb:	jmp	0x1a00


0x1af6:	push	0xe
0x1afb:	jmp	0x1a00


0x1b06:	push	0xf
0x1b0b:	jmp	0x1a00


0x1b16:	push	0x10
0x1b1b:	jmp	0x1a00


0x1b26:	push	0x11
0x1b2b:	jmp	0x1a00


0x1b36:	push	0x12
0x1b3b:	jmp	0x1a00


0x1b46:	push	0x13
0x1b4b:	jmp	0x1a00


0x1b56:	push	0x14
0x1b5b:	jmp	0x1a00


0x1b66:	push	0x15
0x1b6b:	jmp	0x1a00


0x1b76:	push	0x16
0x1b7b:	jmp	0x1a00


0x1b86:	push	0x17
0x1b8b:	jmp	0x1a00


0x1b96:	push	0x18
0x1b9b:	jmp	0x1a00


0x1ba6:	push	0x19
0x1bab:	jmp	0x1a00


0x1bb6:	push	0x1a
0x1bbb:	jmp	0x1a00


0x1bc6:	push	0x1b
0x1bcb:	jmp	0x1a00


0x1bd6:	push	0x1c
0x1bdb:	jmp	0x1a00


0x1be6:	push	0x1d
0x1beb:	jmp	0x1a00


0x1bf6:	push	0x1e
0x1bfb:	jmp	0x1a00


0x1c06:	push	0x1f
0x1c0b:	jmp	0x1a00


0x1c16:	push	0x20
0x1c1b:	jmp	0x1a00


0x1c26:	push	0x21
0x1c2b:	jmp	0x1a00


0x1c36:	push	0x22
0x1c3b:	jmp	0x1a00


0x1c46:	push	0x23
0x1c4b:	jmp	0x1a00


0x1c56:	push	0x24
0x1c5b:	jmp	0x1a00


0x1c66:	push	0x25
0x1c6b:	jmp	0x1a00


0x1c76:	push	0x26
0x1c7b:	jmp	0x1a00


0x1c86:	push	0x27
0x1c8b:	jmp	0x1a00


0x1c96:	push	0x28
0x1c9b:	jmp	0x1a00


0x1ca6:	push	0x29
0x1cab:	jmp	0x1a00


0x1cb6:	push	0x2a
0x1cbb:	jmp	0x1a00


0x1cc6:	push	0x2b
0x1ccb:	jmp	0x1a00


0x1cd6:	push	0x2c
0x1cdb:	jmp	0x1a00


0x1ce6:	push	0x2d
0x1ceb:	jmp	0x1a00


0x1cf6:	push	0x2e
0x1cfb:	jmp	0x1a00


0x1d06:	push	0x2f
0x1d0b:	jmp	0x1a00


0x1d16:	push	0x30
0x1d1b:	jmp	0x1a00


0x1d26:	push	0x31
0x1d2b:	jmp	0x1a00


0x1d36:	push	0x32
0x1d3b:	jmp	0x1a00


0x1d46:	push	0x33
0x1d4b:	jmp	0x1a00


0x1d56:	push	0x34
0x1d5b:	jmp	0x1a00


0x1d66:	push	0x35
0x1d6b:	jmp	0x1a00


0x1d76:	push	0x36
0x1d7b:	jmp	0x1a00


0x1d86:	push	0x37
0x1d8b:	jmp	0x1a00


0x1d96:	push	0x38
0x1d9b:	jmp	0x1a00


0x1da6:	push	0x39
0x1dab:	jmp	0x1a00


0x1db6:	push	0x3a
0x1dbb:	jmp	0x1a00


0x1dc6:	push	0x3b
0x1dcb:	jmp	0x1a00


0x1dd6:	push	0x3c
0x1ddb:	jmp	0x1a00


0x1de6:	push	0x3d
0x1deb:	jmp	0x1a00


0x1df6:	push	0x3e
0x1dfb:	jmp	0x1a00


0x1e06:	push	0x3f
0x1e0b:	jmp	0x1a00


0x1e16:	push	0x40
0x1e1b:	jmp	0x1a00


0x1e26:	push	0x41
0x1e2b:	jmp	0x1a00


0x1e36:	push	0x42
0x1e3b:	jmp	0x1a00


0x1e40:	jmp	qword ptr [rip + 0x20f152]




0x1e46:	push	0x43
0x1e4b:	jmp	0x1a00


0x1e50:	jmp	qword ptr [rip + 0x20f14a]




0x1e56:	push	0x44
0x1e5b:	jmp	0x1a00


0x1e66:	push	0x45
0x1e6b:	jmp	0x1a00


0x1e76:	push	0x46
0x1e7b:	jmp	0x1a00


0x1e86:	push	0x47
0x1e8b:	jmp	0x1a00


0x1e96:	push	0x48
0x1e9b:	jmp	0x1a00


0x3c7f:	nop	


0x3caa:	hlt	


0x3cab:	nop	dword ptr [rax + rax]


0x3ce2:	nop	dword ptr [rax]
0x3ce6:	nop	word ptr cs:[rax + rax]


0x3d32:	nop	dword ptr [rax]
0x3d36:	nop	word ptr cs:[rax + rax]


0x3d7a:	nop	word ptr [rax + rax]


0x3d8a:	nop	word ptr [rax + rax]


0x3d97:	nop	word ptr [rax + rax]


0x4137:	nop	word ptr [rax + rax]


0x424b:	nop	dword ptr [rax + rax]


0x4395:	nop	
0x4396:	nop	word ptr cs:[rax + rax]


0x45a3:	nop	dword ptr [rax]
0x45a6:	nop	word ptr cs:[rax + rax]


0x4728:	nop	dword ptr [rax + rax]


0x488f:	nop	


0x4a12:	nop	dword ptr [rax]
0x4a16:	nop	word ptr cs:[rax + rax]


0x4a68:	nop	dword ptr [rax + rax]


0x4b85:	nop	
0x4b86:	nop	word ptr cs:[rax + rax]


0x4bf1:	nop	dword ptr [rax + rax]
0x4bf6:	nop	word ptr cs:[rax + rax]


0x4cda:	nop	word ptr [rax + rax]


0x4d9a:	nop	word ptr [rax + rax]


0x4dec:	nop	dword ptr [rax]


0x4e2b:	nop	dword ptr [rax + rax]


0x502a:	nop	word ptr [rax + rax]


0x563a:	nop	word ptr [rax + rax]


0x572c:	nop	dword ptr [rax]


0x5b1e:	nop	


0x5c32:	nop	dword ptr [rax]
0x5c36:	nop	word ptr cs:[rax + rax]


0x5daa:	nop	word ptr [rax + rax]


0x5e2d:	nop	dword ptr [rax]


0x5e38:	nop	dword ptr [rax + rax]


0x5e48:	nop	dword ptr [rax + rax]


0x5ef4:	nop	word ptr cs:[rax + rax]
0x5efe:	nop	


0x5f56:	nop	word ptr cs:[rax + rax]


0x5fea:	nop	word ptr [rax + rax]


0x5ffa:	nop	word ptr [rax + rax]


0x6041:	nop	word ptr cs:[rax + rax]
0x604b:	nop	dword ptr [rax + rax]


0x6117:	nop	word ptr [rax + rax]


0x6b27:	nop	word ptr [rax + rax]


0x6d16:	nop	word ptr cs:[rax + rax]


0x6e5f:	nop	


0x6f9b:	nop	dword ptr [rax + rax]


0x703f:	nop	


0x7127:	nop	word ptr [rax + rax]


0x71c3:	mov	byte ptr [rsp + 0xe], 1
0x71c8:	mov	byte ptr [rsp + 0x7c], 0
0x71cd:	xor	r12d, r12d
0x71d0:	mov	qword ptr [rsp + 0x50], 0
0x71d9:	mov	byte ptr [rsp + 0xf], 1
0x71de:	mov	byte ptr [rsp + 0xd], 0
0x71e3:	lea	rax, [rip + 0x7073]
0x71ea:	mov	qword ptr [rsp + 0x18], 1
0x71f3:	xor	r15d, r15d
0x71f6:	mov	dword ptr [rsp + 8], 2
0x71fe:	mov	qword ptr [rsp + 0x48], rax
0x7203:	xor	r11d, r11d
0x7206:	mov	rax, rbp
0x7209:	mov	r8d, r12d
0x720c:	mov	rbp, r11
0x720f:	mov	r11, rax
0x7212:	nop	word ptr [rax + rax]
0x7218:	cmp	r11, rbp
0x721b:	setne	r12b
0x721f:	cmp	r11, -1
0x7223:	jne	0x7232


0x7225:	mov	rax, qword ptr [rsp + 0x10]
0x722a:	cmp	byte ptr [rax + rbp], 0
0x722e:	setne	r12b
0x7232:	test	r12b, r12b
0x7235:	je	0x7890


0x7232:	test	r12b, r12b
0x7235:	je	0x7890


0x7890:	cmp	dword ptr [rsp + 8], 2
0x7895:	movzx	ebx, byte ptr [rsp + 0xf]
0x789a:	mov	r12d, r8d
0x789d:	mov	rbp, r11
0x78a0:	sete	dl
0x78a3:	mov	eax, ebx
0x78a5:	test	r15, r15
0x78a8:	sete	cl
0x78ab:	and	eax, edx
0x78ad:	and	al, cl
0x78af:	jne	0x8316


0x723b:	cmp	dword ptr [rsp + 8], 2
0x7240:	mov	rdi, qword ptr [rsp + 0x10]
0x7245:	lea	r9, [rdi + rbp]
0x7249:	setne	al
0x724c:	and	al, byte ptr [rsp + 0xd]
0x7250:	mov	r10d, eax
0x7253:	je	0x7300


0x78b5:	mov	eax, ebx
0x78b7:	xor	eax, 1
0x78ba:	and	dl, al
0x78bc:	je	0x822c


0x8316:	mov	dword ptr [rsp + 8], 2
0x831e:	jmp	0x7cb9


0x7300:	movzx	ebx, byte ptr [r9]
0x7304:	cmp	bl, 0x7e
0x7307:	ja	0x7628


0x7259:	mov	rax, qword ptr [rsp + 0x18]
0x725e:	test	rax, rax
0x7261:	je	0x7690


0x822c:	mov	rbx, qword ptr [rsp + 0x48]
0x8231:	test	rbx, rbx
0x8234:	je	0x8262


0x78c2:	cmp	byte ptr [rsp + 0x7c], 0
0x78c7:	je	0x822a


0x7cb9:	cmp	byte ptr [rsp + 0xd], 0
0x7cbe:	je	0x7cd0


0x730d:	lea	rcx, [rip + 0x6fd8]
0x7314:	movzx	edx, bl
0x7317:	movsxd	rax, dword ptr [rcx + rdx*4]
0x731b:	add	rax, rcx
0x731e:	jmp	rax


0x7628:	cmp	qword ptr [rsp + 0x58], 1
0x762e:	jne	0x79d8


0x7690:	movzx	ebx, byte ptr [r9]
0x7694:	cmp	bl, 0x7e
0x7697:	ja	0x7620


0x7267:	cmp	r11, -1
0x726b:	lea	rbx, [rbp + rax]
0x7270:	jne	0x72a0


0x8262:	cmp	r13, r15
0x8265:	jbe	0x7d09


0x8236:	test	al, al
0x8238:	je	0x8262


0x822a:	mov	eax, edx
0x822c:	mov	rbx, qword ptr [rsp + 0x48]
0x8231:	test	rbx, rbx
0x8234:	je	0x8262


0x78cd:	cmp	byte ptr [rsp + 0xe], 0
0x78d2:	jne	0x82cd


0x7cc0:	test	al, al
0x7cc2:	mov	eax, 4
0x7cc7:	cmove	eax, dword ptr [rsp + 8]
0x7ccc:	mov	dword ptr [rsp + 8], eax


0x7634:	mov	qword ptr [rsp + 0x38], r11
0x7639:	mov	byte ptr [rsp + 0x30], r8b
0x763e:	mov	byte ptr [rsp + 0x28], r10b
0x7643:	call	0x1e80


0x79d8:	lea	rax, [rsp + 0xa0]
0x79e0:	cmp	r11, -1
0x79e4:	mov	qword ptr [rsp + 0xa0], 0
0x79f0:	mov	qword ptr [rsp + 0x28], rax
0x79f5:	jne	0x7a24


0x7699:	lea	rcx, [rip + 0x6e48]
0x76a0:	movzx	edx, bl
0x76a3:	movsxd	rax, dword ptr [rcx + rdx*4]
0x76a7:	add	rax, rcx
0x76aa:	jmp	rax


0x7620:	xor	r10d, r10d
0x7623:	nop	dword ptr [rax + rax]
0x7628:	cmp	qword ptr [rsp + 0x58], 1
0x762e:	jne	0x79d8


0x7272:	cmp	rax, 1
0x7276:	jbe	0x72a0


0x72a0:	cmp	rbx, r11
0x72a3:	mov	byte ptr [rsp + 0x28], r10b
0x72a8:	ja	0x7860


0x826b:	mov	byte ptr [r14 + r15], 0
0x8270:	jmp	0x7d09


0x823a:	movzx	ecx, byte ptr [rbx]
0x823d:	mov	rax, rbx
0x8240:	test	cl, cl
0x8242:	je	0x8262


0x78d8:	test	r13, r13
0x78db:	sete	al
0x78de:	cmp	qword ptr [rsp + 0x50], 0
0x78e4:	setne	dl
0x78e7:	and	al, dl
0x78e9:	je	0x830c


0x79f7:	mov	rdi, qword ptr [rsp + 0x10]
0x79fc:	mov	byte ptr [rsp + 0x40], r8b
0x7a01:	mov	byte ptr [rsp + 0x38], r10b
0x7a06:	mov	qword ptr [rsp + 0x30], r9
0x7a0b:	call	0x1b80


0x7a24:	lea	rax, [rsp + 0x9c]
0x7a2c:	xor	ecx, ecx
0x7a2e:	mov	byte ptr [rsp + 0x7e], bl
0x7a32:	mov	byte ptr [rsp + 0x7d], r8b
0x7a37:	mov	rbx, rcx
0x7a3a:	mov	qword ptr [rsp + 0x88], r9
0x7a42:	mov	qword ptr [rsp + 0x38], rax
0x7a47:	mov	byte ptr [rsp + 0x7f], r10b
0x7a4c:	mov	qword ptr [rsp + 0x80], r15
0x7a54:	mov	qword ptr [rsp + 0x40], r14
0x7a59:	mov	qword ptr [rsp + 0x70], r13
0x7a5e:	mov	qword ptr [rsp + 0x30], r11
0x7a63:	mov	rax, qword ptr [rsp + 0x10]
0x7a68:	lea	r14, [rbp + rbx]
0x7a6d:	mov	rdx, qword ptr [rsp + 0x30]
0x7a72:	mov	rcx, qword ptr [rsp + 0x28]
0x7a77:	mov	rdi, qword ptr [rsp + 0x38]
0x7a7c:	lea	r13, [rax + r14]
0x7a80:	sub	rdx, r14
0x7a83:	mov	rsi, r13
0x7a86:	call	0xa010


0x7278:	mov	byte ptr [rsp + 0x38], r8b
0x727d:	mov	byte ptr [rsp + 0x30], r10b
0x7282:	mov	qword ptr [rsp + 0x28], r9
0x7287:	call	0x1b80


0x72ae:	mov	rdx, qword ptr [rsp + 0x18]
0x72b3:	mov	rsi, qword ptr [rsp + 0x48]
0x72b8:	mov	rdi, r9
0x72bb:	mov	qword ptr [rsp + 0x40], r11
0x72c0:	mov	byte ptr [rsp + 0x38], r8b
0x72c5:	mov	qword ptr [rsp + 0x30], r9
0x72ca:	call	0x1c90


0x7860:	xor	r10d, r10d
0x7863:	jmp	0x7300


0x8244:	mov	rdx, r15
0x8247:	sub	rax, r15
0x824a:	cmp	r13, rdx
0x824d:	jbe	0x8253


0x830c:	movzx	eax, byte ptr [rsp + 0x7c]
0x8311:	jmp	0x822c


0x78ef:	mov	r13, qword ptr [rsp + 0x50]
0x78f4:	lea	rbx, [rip + 0x6962]
0x78fb:	mov	byte ptr [r14], 0x27
0x78ff:	mov	dword ptr [rsp + 8], 2
0x7907:	mov	r15d, 1
0x790d:	mov	qword ptr [rsp + 0x18], 1
0x7916:	mov	byte ptr [rsp + 0xf], 0
0x791b:	mov	qword ptr [rsp + 0x48], rbx
0x7920:	mov	byte ptr [rsp + 0x7c], al
0x7924:	jmp	0x7203


0x8253:	add	rdx, 1
0x8257:	movzx	ecx, byte ptr [rax + rdx]
0x825b:	test	cl, cl
0x825d:	jne	0x824a


0x824f:	mov	byte ptr [r14 + rdx], cl
0x8253:	add	rdx, 1
0x8257:	movzx	ecx, byte ptr [rax + rdx]
0x825b:	test	cl, cl
0x825d:	jne	0x824a


0x7203:	xor	r11d, r11d
0x7206:	mov	rax, rbp
0x7209:	mov	r8d, r12d
0x720c:	mov	rbp, r11
0x720f:	mov	r11, rax
0x7212:	nop	word ptr [rax + rax]
0x7218:	cmp	r11, rbp
0x721b:	setne	r12b
0x721f:	cmp	r11, -1
0x7223:	jne	0x7232


0x825f:	mov	r15, rdx
0x8262:	cmp	r13, r15
0x8265:	jbe	0x7d09


0x824a:	cmp	r13, rdx
0x824d:	jbe	0x8253


0x72cf:	test	eax, eax
0x72d1:	mov	r9, qword ptr [rsp + 0x30]
0x72d6:	movzx	r8d, byte ptr [rsp + 0x38]
0x72dc:	mov	r11, qword ptr [rsp + 0x40]
0x72e1:	jne	0x7860


0x72e7:	cmp	byte ptr [rsp + 0xf], 0
0x72ec:	movzx	r10d, byte ptr [rsp + 0x28]
0x72f2:	jne	0x8275


0x8275:	cmp	dword ptr [rsp + 8], 2
0x827a:	movzx	ebx, byte ptr [rsp + 0xf]
0x827f:	mov	rbp, r11
0x8282:	sete	al
0x8285:	mov	byte ptr [rsp + 0xd], bl
0x8289:	jmp	0x7cb9


0x7a8b:	test	rax, rax
0x7a8e:	mov	r15, rax
0x7a91:	je	0x7ae1


0x7ae1:	mov	edx, r12d
0x7ae4:	mov	rdi, rbx
0x7ae7:	movzx	r8d, byte ptr [rsp + 0x7d]
0x7aed:	xor	edx, 1
0x7af0:	movzx	ebx, byte ptr [rsp + 0x7e]
0x7af5:	movzx	r10d, byte ptr [rsp + 0x7f]
0x7afb:	and	dl, byte ptr [rsp + 0xd]
0x7aff:	mov	r15, qword ptr [rsp + 0x80]
0x7b07:	mov	r14, qword ptr [rsp + 0x40]
0x7b0c:	mov	r13, qword ptr [rsp + 0x70]
0x7b11:	mov	r11, qword ptr [rsp + 0x30]
0x7b16:	cmp	rdi, 1
0x7b1a:	jbe	0x811b


0x7a93:	cmp	rax, -1
0x7a97:	je	0x80b5


0x811b:	mov	eax, edx
0x811d:	jmp	0x7677


0x7b20:	mov	rcx, rdi
0x7b23:	xor	esi, esi
0x7b25:	movzx	r9d, byte ptr [rsp + 0xf]
0x7b2b:	add	rcx, rbp
0x7b2e:	mov	rdi, qword ptr [rsp + 0x10]
0x7b33:	jmp	0x7bee


0x80b5:	mov	rdi, rbx
0x80b8:	movzx	r8d, byte ptr [rsp + 0x7d]
0x80be:	movzx	ebx, byte ptr [rsp + 0x7e]
0x80c3:	movzx	r10d, byte ptr [rsp + 0x7f]
0x80c9:	mov	r15, qword ptr [rsp + 0x80]
0x80d1:	xor	r12d, r12d
0x80d4:	mov	r14, qword ptr [rsp + 0x40]
0x80d9:	mov	r13, qword ptr [rsp + 0x70]
0x80de:	mov	r11, qword ptr [rsp + 0x30]
0x80e3:	movzx	edx, byte ptr [rsp + 0xd]
0x80e8:	jmp	0x7b16


0x7a9d:	cmp	rax, -2
0x7aa1:	je	0x8041


0x7677:	test	al, al
0x7679:	jne	0x8011


0x7bee:	test	dl, dl
0x7bf0:	jne	0x7b40


0x7b16:	cmp	rdi, 1
0x7b1a:	jbe	0x811b


0x8041:	mov	r11, qword ptr [rsp + 0x30]
0x8046:	mov	rsi, r14
0x8049:	mov	rcx, r13
0x804c:	mov	rax, rbx
0x804f:	mov	rdi, rbx
0x8052:	movzx	r8d, byte ptr [rsp + 0x7d]
0x8058:	movzx	ebx, byte ptr [rsp + 0x7e]
0x805d:	mov	r9, qword ptr [rsp + 0x88]
0x8065:	cmp	rsi, r11
0x8068:	movzx	r10d, byte ptr [rsp + 0x7f]
0x806e:	mov	r15, qword ptr [rsp + 0x80]
0x8076:	mov	r14, qword ptr [rsp + 0x40]
0x807b:	mov	r13, qword ptr [rsp + 0x70]
0x8080:	jae	0x80a8


0x7aa7:	cmp	dword ptr [rsp + 8], 2
0x7aac:	sete	al
0x7aaf:	and	al, byte ptr [rsp + 0xf]
0x7ab3:	jne	0x7c50


0x767f:	cmp	dword ptr [rsp + 8], 2
0x7684:	sete	dl
0x7687:	jmp	0x7358


0x8011:	movzx	edx, byte ptr [rsp + 0xd]
0x8016:	xor	r12d, r12d
0x8019:	jmp	0x7b20


0x7bf6:	mov	eax, esi
0x7bf8:	xor	eax, 1
0x7bfb:	and	eax, r8d
0x7bfe:	test	r10b, r10b
0x7c01:	je	0x7c11


0x7b40:	cmp	dword ptr [rsp + 8], 2
0x7b45:	sete	al
0x7b48:	test	r9b, r9b
0x7b4b:	jne	0x8000


0x8082:	cmp	byte ptr [rcx], 0
0x8085:	jne	0x8097


0x80a8:	movzx	edx, byte ptr [rsp + 0xd]
0x80ad:	xor	r12d, r12d
0x80b0:	jmp	0x7b16


0x7ab9:	mov	edi, dword ptr [rsp + 0x9c]
0x7ac0:	call	0x1e50


0x7c50:	cmp	r15, 1
0x7c54:	je	0x7ab9


0x7358:	cmp	byte ptr [rsp + 0xd], 1
0x735d:	jne	0x7472


0x7c11:	add	rbp, 1
0x7c15:	cmp	rbp, rcx
0x7c18:	jae	0x739c


0x7c03:	cmp	r13, r15
0x7c06:	jbe	0x7c0d


0x7b51:	mov	esi, r8d
0x7b54:	xor	esi, 1
0x7b57:	and	al, sil
0x7b5a:	je	0x7b8b


0x8000:	movzx	ebx, byte ptr [rsp + 0xf]
0x8005:	mov	rbp, r11
0x8008:	mov	byte ptr [rsp + 0xd], bl
0x800c:	jmp	0x7cb9


0x8087:	jmp	0x80a8


0x8097:	add	rax, 1
0x809b:	lea	rdx, [rbp + rax]
0x80a0:	cmp	r11, rdx
0x80a3:	ja	0x8090


0x7c5a:	mov	rdi, qword ptr [rsp + 0x10]
0x7c5f:	lea	rcx, [rdi + r15]
0x7c63:	lea	rdx, [rdi + r14 + 1]
0x7c68:	lea	r8, [rcx + r14]
0x7c6c:	jmp	0x7c7d


0x7363:	test	dl, dl
0x7365:	jne	0x7472


0x7472:	cmp	byte ptr [rsp + 0xf], 0
0x7477:	jne	0x736b


0x7c1e:	test	al, al
0x7c20:	je	0x801e


0x739c:	test	al, al
0x739e:	je	0x73c0


0x7c0d:	add	r15, 1
0x7c11:	add	rbp, 1
0x7c15:	cmp	rbp, rcx
0x7c18:	jae	0x739c


0x7c08:	mov	byte ptr [r14 + r15], 0x5c
0x7c0d:	add	r15, 1
0x7c11:	add	rbp, 1
0x7c15:	cmp	rbp, rcx
0x7c18:	jae	0x739c


0x7b8b:	cmp	r13, r15
0x7b8e:	jbe	0x7b95


0x7b5c:	cmp	r13, r15
0x7b5f:	jbe	0x7b66


0x80a5:	mov	rdi, rax
0x80a8:	movzx	edx, byte ptr [rsp + 0xd]
0x80ad:	xor	r12d, r12d
0x80b0:	jmp	0x7b16


0x8090:	cmp	byte ptr [r9 + rax], 0
0x8095:	je	0x80a5


0x7c7d:	movzx	ecx, byte ptr [rdx]
0x7c80:	sub	ecx, 0x5b
0x7c83:	cmp	cl, 0x21
0x7c86:	ja	0x7c70


0x736b:	mov	rsi, qword ptr [rsp + 0x20]
0x7370:	test	rsi, rsi
0x7373:	je	0x7389


0x747d:	jmp	0x7389


0x801e:	xor	r10d, r10d
0x8021:	jmp	0x7bdd


0x7c26:	cmp	r13, r15
0x7c29:	jbe	0x7c30


0x73c0:	cmp	r15, r13
0x73c3:	jae	0x73c9


0x73a0:	cmp	r13, r15
0x73a3:	jbe	0x73aa


0x7b95:	lea	rax, [r15 + 1]
0x7b99:	cmp	r13, rax
0x7b9c:	jbe	0x7bab


0x7b90:	mov	byte ptr [r14 + r15], 0x5c
0x7b95:	lea	rax, [r15 + 1]
0x7b99:	cmp	r13, rax
0x7b9c:	jbe	0x7bab


0x7b66:	lea	rsi, [r15 + 1]
0x7b6a:	cmp	r13, rsi
0x7b6d:	jbe	0x7b75


0x7b61:	mov	byte ptr [r14 + r15], 0x27
0x7b66:	lea	rsi, [r15 + 1]
0x7b6a:	cmp	r13, rsi
0x7b6d:	jbe	0x7b75


0x7c88:	mov	esi, 1
0x7c8d:	shl	rsi, cl
0x7c90:	mov	rcx, rsi
0x7c93:	movabs	rsi, 0x20000002b
0x7c9d:	test	rcx, rsi
0x7ca0:	je	0x7c70


0x7c70:	add	rdx, 1
0x7c74:	cmp	r8, rdx
0x7c77:	je	0x7ab9


0x7389:	test	r10b, r10b
0x738c:	jne	0x74d3


0x7375:	mov	edx, ebx
0x7377:	shr	dl, 5
0x737a:	movzx	edx, dl
0x737d:	mov	edx, dword ptr [rsi + rdx*4]
0x7380:	bt	edx, ebx
0x7383:	jb	0x74d3


0x7bdd:	cmp	r13, r15
0x7be0:	jbe	0x7be6


0x7c30:	lea	rax, [r15 + 1]
0x7c34:	cmp	r13, rax
0x7c37:	jbe	0x7c3f


0x7c2b:	mov	byte ptr [r14 + r15], 0x27
0x7c30:	lea	rax, [r15 + 1]
0x7c34:	cmp	r13, rax
0x7c37:	jbe	0x7c3f


0x73c5:	mov	byte ptr [r14 + r15], bl
0x73c9:	movzx	edi, byte ptr [rsp + 0xe]
0x73ce:	add	r15, 1
0x73d2:	mov	eax, 0
0x73d7:	test	r12b, r12b
0x73da:	cmove	edi, eax
0x73dd:	mov	byte ptr [rsp + 0xe], dil
0x73e2:	jmp	0x7218


0x73c9:	movzx	edi, byte ptr [rsp + 0xe]
0x73ce:	add	r15, 1
0x73d2:	mov	eax, 0
0x73d7:	test	r12b, r12b
0x73da:	cmove	edi, eax
0x73dd:	mov	byte ptr [rsp + 0xe], dil
0x73e2:	jmp	0x7218


0x73aa:	lea	rax, [r15 + 1]
0x73ae:	cmp	r13, rax
0x73b1:	jbe	0x73b9


0x73a5:	mov	byte ptr [r14 + r15], 0x27
0x73aa:	lea	rax, [r15 + 1]
0x73ae:	cmp	r13, rax
0x73b1:	jbe	0x73b9


0x7bab:	lea	rax, [r15 + 2]
0x7baf:	cmp	r13, rax
0x7bb2:	jbe	0x7bc4


0x7b9e:	mov	eax, ebx
0x7ba0:	shr	al, 6
0x7ba3:	add	eax, 0x30
0x7ba6:	mov	byte ptr [r14 + r15 + 1], al
0x7bab:	lea	rax, [r15 + 2]
0x7baf:	cmp	r13, rax
0x7bb2:	jbe	0x7bc4


0x7b75:	lea	rsi, [r15 + 2]
0x7b79:	cmp	r13, rsi
0x7b7c:	jbe	0x7b84


0x7b6f:	mov	byte ptr [r14 + r15 + 1], 0x24
0x7b75:	lea	rsi, [r15 + 2]
0x7b79:	cmp	r13, rsi
0x7b7c:	jbe	0x7b84


0x7ca2:	mov	r14, qword ptr [rsp + 0x40]
0x7ca7:	mov	r13, qword ptr [rsp + 0x70]
0x7cac:	mov	rbp, qword ptr [rsp + 0x30]
0x7cb1:	mov	dword ptr [rsp + 8], 2
0x7cb9:	cmp	byte ptr [rsp + 0xd], 0
0x7cbe:	je	0x7cd0


0x7392:	xor	eax, 1
0x7395:	add	rbp, 1
0x7399:	and	eax, r8d
0x739c:	test	al, al
0x739e:	je	0x73c0


0x74d3:	cmp	dword ptr [rsp + 8], 2
0x74d8:	sete	dl
0x74db:	cmp	byte ptr [rsp + 0xf], 0
0x74e0:	mov	eax, edx
0x74e2:	jne	0x7d38


0x7be6:	movzx	ebx, byte ptr [rdi + rbp]
0x7bea:	add	r15, 1
0x7bee:	test	dl, dl
0x7bf0:	jne	0x7b40


0x7be2:	mov	byte ptr [r14 + r15], bl
0x7be6:	movzx	ebx, byte ptr [rdi + rbp]
0x7bea:	add	r15, 1
0x7bee:	test	dl, dl
0x7bf0:	jne	0x7b40


0x7c3f:	add	r15, 2
0x7c43:	xor	r10d, r10d
0x7c46:	xor	r8d, r8d
0x7c49:	jmp	0x7bdd


0x7c39:	mov	byte ptr [r14 + r15 + 1], 0x27
0x7c3f:	add	r15, 2
0x7c43:	xor	r10d, r10d
0x7c46:	xor	r8d, r8d
0x7c49:	jmp	0x7bdd


0x7218:	cmp	r11, rbp
0x721b:	setne	r12b
0x721f:	cmp	r11, -1
0x7223:	jne	0x7232


0x73b9:	add	r15, 2
0x73bd:	xor	r8d, r8d
0x73c0:	cmp	r15, r13
0x73c3:	jae	0x73c9


0x73b3:	mov	byte ptr [r14 + r15 + 1], 0x27
0x73b9:	add	r15, 2
0x73bd:	xor	r8d, r8d
0x73c0:	cmp	r15, r13
0x73c3:	jae	0x73c9


0x7bc4:	and	ebx, 7
0x7bc7:	add	rbp, 1
0x7bcb:	add	r15, 3
0x7bcf:	add	ebx, 0x30
0x7bd2:	cmp	rbp, rcx
0x7bd5:	jae	0x73c0


0x7bb4:	mov	eax, ebx
0x7bb6:	shr	al, 3
0x7bb9:	and	eax, 7
0x7bbc:	add	eax, 0x30
0x7bbf:	mov	byte ptr [r14 + r15 + 2], al
0x7bc4:	and	ebx, 7
0x7bc7:	add	rbp, 1
0x7bcb:	add	r15, 3
0x7bcf:	add	ebx, 0x30
0x7bd2:	cmp	rbp, rcx
0x7bd5:	jae	0x73c0


0x7b84:	add	r15, 3
0x7b88:	mov	r8d, eax
0x7b8b:	cmp	r13, r15
0x7b8e:	jbe	0x7b95


0x7b7e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x7b84:	add	r15, 3
0x7b88:	mov	r8d, eax
0x7b8b:	cmp	r13, r15
0x7b8e:	jbe	0x7b95


0x74e8:	mov	eax, r8d
0x74eb:	xor	eax, 1
0x74ee:	and	al, dl
0x74f0:	je	0x7521


0x7d38:	mov	rbp, r11
0x7d3b:	jmp	0x7cb9


0x7bdb:	mov	esi, edx
0x7bdd:	cmp	r13, r15
0x7be0:	jbe	0x7be6


0x7521:	cmp	r13, r15
0x7524:	jbe	0x752b


0x74f2:	cmp	r13, r15
0x74f5:	jbe	0x74fc


0x752b:	add	r15, 1
0x752f:	add	rbp, 1
0x7533:	jmp	0x73c0


0x7526:	mov	byte ptr [r14 + r15], 0x5c
0x752b:	add	r15, 1
0x752f:	add	rbp, 1
0x7533:	jmp	0x73c0


0x74fc:	lea	rdx, [r15 + 1]
0x7500:	cmp	r13, rdx
0x7503:	jbe	0x750b


0x74f7:	mov	byte ptr [r14 + r15], 0x27
0x74fc:	lea	rdx, [r15 + 1]
0x7500:	cmp	r13, rdx
0x7503:	jbe	0x750b


0x750b:	lea	rdx, [r15 + 2]
0x750f:	cmp	r13, rdx
0x7512:	jbe	0x751a


0x7505:	mov	byte ptr [r14 + r15 + 1], 0x24
0x750b:	lea	rdx, [r15 + 2]
0x750f:	cmp	r13, rdx
0x7512:	jbe	0x751a


0x751a:	add	r15, 3
0x751e:	mov	r8d, eax
0x7521:	cmp	r13, r15
0x7524:	jbe	0x752b


0x7514:	mov	byte ptr [r14 + r15 + 2], 0x27
0x751a:	add	r15, 3
0x751e:	mov	r8d, eax
0x7521:	cmp	r13, r15
0x7524:	jbe	0x752b


0x7ac5:	mov	rdi, qword ptr [rsp + 0x28]
0x7aca:	test	eax, eax
0x7acc:	mov	eax, 0
0x7ad1:	cmove	r12d, eax
0x7ad5:	add	rbx, r15
0x7ad8:	call	0x1e40


0x7add:	test	eax, eax
0x7adf:	je	0x7a63


0x7a63:	mov	rax, qword ptr [rsp + 0x10]
0x7a68:	lea	r14, [rbp + rbx]
0x7a6d:	mov	rdx, qword ptr [rsp + 0x30]
0x7a72:	mov	rcx, qword ptr [rsp + 0x28]
0x7a77:	mov	rdi, qword ptr [rsp + 0x38]
0x7a7c:	lea	r13, [rax + r14]
0x7a80:	sub	rdx, r14
0x7a83:	mov	rsi, r13
0x7a86:	call	0xa010


0x728c:	movzx	r8d, byte ptr [rsp + 0x38]
0x7292:	movzx	r10d, byte ptr [rsp + 0x30]
0x7298:	mov	r11, rax
0x729b:	mov	r9, qword ptr [rsp + 0x28]
0x72a0:	cmp	rbx, r11
0x72a3:	mov	byte ptr [rsp + 0x28], r10b
0x72a8:	ja	0x7860


0x7a10:	movzx	r8d, byte ptr [rsp + 0x40]
0x7a16:	movzx	r10d, byte ptr [rsp + 0x38]
0x7a1c:	mov	r11, rax
0x7a1f:	mov	r9, qword ptr [rsp + 0x30]
0x7a24:	lea	rax, [rsp + 0x9c]
0x7a2c:	xor	ecx, ecx
0x7a2e:	mov	byte ptr [rsp + 0x7e], bl
0x7a32:	mov	byte ptr [rsp + 0x7d], r8b
0x7a37:	mov	rbx, rcx
0x7a3a:	mov	qword ptr [rsp + 0x88], r9
0x7a42:	mov	qword ptr [rsp + 0x38], rax
0x7a47:	mov	byte ptr [rsp + 0x7f], r10b
0x7a4c:	mov	qword ptr [rsp + 0x80], r15
0x7a54:	mov	qword ptr [rsp + 0x40], r14
0x7a59:	mov	qword ptr [rsp + 0x70], r13
0x7a5e:	mov	qword ptr [rsp + 0x30], r11
0x7a63:	mov	rax, qword ptr [rsp + 0x10]
0x7a68:	lea	r14, [rbp + rbx]
0x7a6d:	mov	rdx, qword ptr [rsp + 0x30]
0x7a72:	mov	rcx, qword ptr [rsp + 0x28]
0x7a77:	mov	rdi, qword ptr [rsp + 0x38]
0x7a7c:	lea	r13, [rax + r14]
0x7a80:	sub	rdx, r14
0x7a83:	mov	rsi, r13
0x7a86:	call	0xa010


0x7648:	mov	rcx, qword ptr [rax]
0x764b:	movzx	edx, bl
0x764e:	movzx	r10d, byte ptr [rsp + 0x28]
0x7654:	movzx	r8d, byte ptr [rsp + 0x30]
0x765a:	mov	r11, qword ptr [rsp + 0x38]
0x765f:	mov	edi, 1
0x7664:	movzx	eax, word ptr [rcx + rdx*2]
0x7668:	and	ax, 0x4000
0x766c:	setne	r12b
0x7670:	sete	al
0x7673:	and	al, byte ptr [rsp + 0xd]
0x7677:	test	al, al
0x7679:	jne	0x8011


0x7320:	xor	r10d, r10d
0x7323:	cmp	r11, 1
0x7327:	setne	al
0x732a:	cmp	r11, -1
0x732e:	jne	0x733c


0x7330:	mov	rax, qword ptr [rsp + 0x10]
0x7335:	cmp	byte ptr [rax + 1], 0
0x7339:	setne	al
0x733c:	cmp	dword ptr [rsp + 8], 2
0x7341:	sete	dl
0x7344:	test	al, al
0x7346:	je	0x7598


0x733c:	cmp	dword ptr [rsp + 8], 2
0x7341:	sete	dl
0x7344:	test	al, al
0x7346:	je	0x7598


0x7598:	test	rbp, rbp
0x759b:	jne	0x734c


0x734c:	xor	r12d, r12d
0x734f:	xor	eax, eax
0x7351:	nop	dword ptr [rax]
0x7358:	cmp	byte ptr [rsp + 0xd], 1
0x735d:	jne	0x7472


0x75a1:	movzx	eax, byte ptr [rsp + 0xf]
0x75a6:	and	al, dl
0x75a8:	je	0x7358


0x75ae:	mov	rbp, r11
0x75b1:	mov	dword ptr [rsp + 8], 2
0x75b9:	jmp	0x7cb9


0x79b8:	cmp	byte ptr [rsp + 0xf], 0
0x79bd:	jne	0x81e0


0x7400:	cmp	eax, 5
0x7403:	je	0x7978


0x79c3:	xor	r12d, r12d
0x79c6:	xor	eax, eax
0x79c8:	mov	ebx, 0x3f
0x79cd:	jmp	0x7389


0x81e0:	mov	rbp, r11
0x81e3:	movzx	eax, byte ptr [rsp + 0xf]
0x81e8:	jmp	0x7cb9


0x7978:	test	byte ptr [rsp + 0x78], 4
0x797d:	je	0x79a0


0x7409:	cmp	eax, 2
0x740c:	mov	ebx, 0x3f
0x7411:	sete	dl
0x7414:	xor	r12d, r12d
0x7417:	xor	eax, eax
0x7419:	jmp	0x7358


0x79a0:	xor	edx, edx
0x79a2:	xor	r12d, r12d
0x79a5:	xor	eax, eax
0x79a7:	mov	ebx, 0x3f
0x79ac:	jmp	0x7358


0x797f:	lea	rcx, [rbp + 2]
0x7983:	cmp	rcx, r11
0x7986:	jae	0x79a0


0x7988:	mov	rax, qword ptr [rsp + 0x10]
0x798d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x7992:	je	0x8122


0x8122:	movzx	ebx, byte ptr [rax + rcx]
0x8126:	cmp	bl, 0x3e
0x8129:	ja	0x79a0


0x812f:	movabs	rax, 0x7000a38200000000
0x8139:	bt	rax, rbx
0x813d:	jae	0x79a0


0x8143:	cmp	byte ptr [rsp + 0xf], 0
0x8148:	jne	0x8332


0x814e:	cmp	r13, r15
0x8151:	jbe	0x8158


0x8332:	mov	rbp, r11
0x8335:	jmp	0x7cd0


0x8158:	lea	rax, [r15 + 1]
0x815c:	cmp	r13, rax
0x815f:	jbe	0x8167


0x8153:	mov	byte ptr [r14 + r15], 0x3f
0x8158:	lea	rax, [r15 + 1]
0x815c:	cmp	r13, rax
0x815f:	jbe	0x8167


0x8167:	lea	rax, [r15 + 2]
0x816b:	cmp	r13, rax
0x816e:	jbe	0x8176


0x8161:	mov	byte ptr [r14 + r15 + 1], 0x22
0x8167:	lea	rax, [r15 + 2]
0x816b:	cmp	r13, rax
0x816e:	jbe	0x8176


0x8176:	lea	rax, [r15 + 3]
0x817a:	cmp	r13, rax
0x817d:	jbe	0x8185


0x8170:	mov	byte ptr [r14 + r15 + 2], 0x22
0x8176:	lea	rax, [r15 + 3]
0x817a:	cmp	r13, rax
0x817d:	jbe	0x8185


0x8185:	add	r15, 4
0x8189:	xor	edx, edx
0x818b:	xor	r12d, r12d
0x818e:	xor	eax, eax
0x8190:	mov	rbp, rcx
0x8193:	jmp	0x7358


0x817f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x8185:	add	r15, 4
0x8189:	xor	edx, edx
0x818b:	xor	r12d, r12d
0x818e:	xor	eax, eax
0x8190:	mov	rbp, rcx
0x8193:	jmp	0x7358


0x7930:	cmp	byte ptr [rsp + 0xf], 0
0x7935:	jne	0x81e0


0x742e:	mov	byte ptr [rsp + 0x7c], r12b
0x7433:	xor	edx, edx
0x7435:	xor	eax, eax
0x7437:	mov	ebx, 0x27
0x743c:	jmp	0x7358


0x793b:	test	r13, r13
0x793e:	je	0x7d40


0x7d40:	cmp	r13, r15
0x7d43:	jbe	0x7d4a


0x7944:	xor	edx, edx
0x7946:	cmp	qword ptr [rsp + 0x50], 0
0x794c:	jne	0x7d40


0x7d4a:	lea	rax, [r15 + 1]
0x7d4e:	cmp	r13, rax
0x7d51:	jbe	0x7d59


0x7d45:	mov	byte ptr [r14 + r15], 0x27
0x7d4a:	lea	rax, [r15 + 1]
0x7d4e:	cmp	r13, rax
0x7d51:	jbe	0x7d59


0x7952:	mov	qword ptr [rsp + 0x50], r13
0x7957:	add	r15, 3
0x795b:	xor	eax, eax
0x795d:	mov	byte ptr [rsp + 0x7c], r12b
0x7962:	xor	r8d, r8d
0x7965:	mov	r13, rdx
0x7968:	mov	ebx, 0x27
0x796d:	jmp	0x7389


0x7d59:	lea	rax, [r15 + 2]
0x7d5d:	cmp	r13, rax
0x7d60:	jbe	0x8352


0x7d53:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x7d59:	lea	rax, [r15 + 2]
0x7d5d:	cmp	r13, rax
0x7d60:	jbe	0x8352


0x8352:	mov	rdx, r13
0x8355:	mov	r13, qword ptr [rsp + 0x50]
0x835a:	jmp	0x7952


0x7d66:	mov	rdx, r13
0x7d69:	mov	byte ptr [r14 + r15 + 2], 0x27
0x7d6f:	mov	r13, qword ptr [rsp + 0x50]
0x7d74:	jmp	0x7952


0x7464:	cmp	byte ptr [rsp + 0xd], 0
0x7469:	jne	0x74d0


0x746b:	mov	ebx, edx
0x746d:	xor	r12d, r12d
0x7470:	xor	eax, eax
0x7472:	cmp	byte ptr [rsp + 0xf], 0
0x7477:	jne	0x736b


0x74d0:	xor	r12d, r12d
0x74d3:	cmp	dword ptr [rsp + 8], 2
0x74d8:	sete	dl
0x74db:	cmp	byte ptr [rsp + 0xf], 0
0x74e0:	mov	eax, edx
0x74e2:	jne	0x7d38


0x7870:	cmp	byte ptr [rsp + 0xf], 0
0x7875:	jne	0x81e0


0x74a3:	cmp	byte ptr [rsp + 0xd], 0
0x74a8:	je	0x76c0


0x787b:	add	rbp, 1
0x787f:	mov	eax, r8d
0x7882:	xor	r12d, r12d
0x7885:	mov	ebx, 0x5c
0x788a:	jmp	0x739c


0x76c0:	mov	edx, 0x5c
0x76c5:	mov	ebx, 0x5c
0x76ca:	jmp	0x7464


0x74ae:	cmp	byte ptr [rsp + 0xf], 0
0x74b3:	je	0x76c0


0x74b9:	cmp	qword ptr [rsp + 0x18], 0
0x74bf:	jne	0x787b


0x74c5:	mov	ebx, 0x5c
0x74ca:	nop	word ptr [rax + rax]
0x74d0:	xor	r12d, r12d
0x74d3:	cmp	dword ptr [rsp + 8], 2
0x74d8:	sete	dl
0x74db:	cmp	byte ptr [rsp + 0xf], 0
0x74e0:	mov	eax, edx
0x74e2:	jne	0x7d38


0x754b:	xor	edx, edx
0x754d:	test	byte ptr [rsp + 0x78], 1
0x7552:	je	0x746b


0x7713:	cmp	dword ptr [rsp + 8], 2
0x7718:	sete	dl
0x771b:	cmp	byte ptr [rsp + 0xf], 0
0x7720:	jne	0x82ba


0x7558:	add	rbp, 1
0x755c:	jmp	0x7218


0x7726:	mov	eax, r8d
0x7729:	mov	rcx, r15
0x772c:	xor	eax, 1
0x772f:	and	al, dl
0x7731:	je	0x7760


0x82ba:	movzx	ebx, byte ptr [rsp + 0xf]
0x82bf:	mov	rbp, r11
0x82c2:	mov	eax, edx
0x82c4:	mov	byte ptr [rsp + 0xd], bl
0x82c8:	jmp	0x7cb9


0x7760:	cmp	r13, rcx
0x7763:	jbe	0x776a


0x7733:	cmp	r13, r15
0x7736:	jbe	0x773d


0x776a:	cmp	dword ptr [rsp + 8], 2
0x776f:	lea	r15, [rcx + 1]
0x7773:	je	0x7d79


0x7765:	mov	byte ptr [r14 + rcx], 0x5c
0x776a:	cmp	dword ptr [rsp + 8], 2
0x776f:	lea	r15, [rcx + 1]
0x7773:	je	0x7d79


0x773d:	lea	rcx, [r15 + 1]
0x7741:	cmp	r13, rcx
0x7744:	jbe	0x774c


0x7738:	mov	byte ptr [r14 + r15], 0x27
0x773d:	lea	rcx, [r15 + 1]
0x7741:	cmp	r13, rcx
0x7744:	jbe	0x774c


0x7d79:	mov	eax, r12d
0x7d7c:	mov	ebx, 0x30
0x7d81:	xor	r12d, r12d
0x7d84:	jmp	0x7389


0x7779:	lea	rax, [rbp + 1]
0x777d:	cmp	rax, r11
0x7780:	jae	0x779b


0x774c:	lea	rcx, [r15 + 2]
0x7750:	cmp	r13, rcx
0x7753:	ja	0x7d89


0x7746:	mov	byte ptr [r14 + r15 + 1], 0x24
0x774c:	lea	rcx, [r15 + 2]
0x7750:	cmp	r13, rcx
0x7753:	ja	0x7d89


0x7782:	mov	rax, qword ptr [rsp + 0x10]
0x7787:	movzx	eax, byte ptr [rax + rbp + 1]
0x778c:	mov	byte ptr [rsp + 0x28], al
0x7790:	sub	eax, 0x30
0x7793:	cmp	al, 9
0x7795:	jbe	0x7fc9


0x779b:	mov	eax, r12d
0x779e:	mov	ebx, 0x30
0x77a3:	xor	r12d, r12d
0x77a6:	jmp	0x7358


0x7759:	lea	rcx, [r15 + 3]
0x775d:	mov	r8d, eax
0x7760:	cmp	r13, rcx
0x7763:	jbe	0x776a


0x7d89:	mov	byte ptr [r14 + r15 + 2], 0x27
0x7d8f:	jmp	0x7759


0x7fc9:	cmp	r13, r15
0x7fcc:	jbe	0x7fd3


0x7fd3:	lea	rax, [rcx + 2]
0x7fd7:	cmp	r13, rax
0x7fda:	jbe	0x7fe2


0x7fce:	mov	byte ptr [r14 + r15], 0x30
0x7fd3:	lea	rax, [rcx + 2]
0x7fd7:	cmp	r13, rax
0x7fda:	jbe	0x7fe2


0x7fe2:	mov	eax, r12d
0x7fe5:	lea	r15, [rcx + 3]
0x7fe9:	xor	r12d, r12d
0x7fec:	mov	ebx, 0x30
0x7ff1:	jmp	0x7358


0x7fdc:	mov	byte ptr [r14 + rcx + 2], 0x30
0x7fe2:	mov	eax, r12d
0x7fe5:	lea	r15, [rcx + 3]
0x7fe9:	xor	r12d, r12d
0x7fec:	mov	ebx, 0x30
0x7ff1:	jmp	0x7358


0x7452:	cmp	dword ptr [rsp + 8], 2
0x7457:	sete	al
0x745a:	and	al, byte ptr [rsp + 0xf]
0x745e:	jne	0x75ae


0x7810:	mov	edx, 0xd
0x7815:	xor	r10d, r10d
0x7818:	mov	ebx, 0x72
0x781d:	jmp	0x7452


0x7d94:	test	ebx, ebx
0x7d96:	jne	0x71c3


0x7d9c:	mov	byte ptr [rsp + 0xd], 1
0x7da1:	test	r13, r13
0x7da4:	jne	0x833a


0x7daa:	lea	rax, [rip + 0x64ac]
0x7db1:	mov	qword ptr [rsp + 0x50], 0
0x7dba:	mov	byte ptr [rsp + 0xe], 1
0x7dbf:	mov	byte ptr [rsp + 0x7c], 0
0x7dc4:	xor	r12d, r12d
0x7dc7:	mov	byte ptr [rsp + 0xf], 0
0x7dcc:	mov	qword ptr [rsp + 0x18], 1
0x7dd5:	mov	qword ptr [rsp + 0x48], rax
0x7dda:	mov	r15d, 1
0x7de0:	mov	dword ptr [rsp + 8], 2
0x7de8:	jmp	0x7203


0x833a:	mov	byte ptr [rsp + 0xe], 1
0x833f:	xor	eax, eax
0x8341:	xor	r12d, r12d
0x8344:	mov	qword ptr [rsp + 0x50], 0
0x834d:	jmp	0x78f4


0x78f4:	lea	rbx, [rip + 0x6962]
0x78fb:	mov	byte ptr [r14], 0x27
0x78ff:	mov	dword ptr [rsp + 8], 2
0x7907:	mov	r15d, 1
0x790d:	mov	qword ptr [rsp + 0x18], 1
0x7916:	mov	byte ptr [rsp + 0xf], 0
0x791b:	mov	qword ptr [rsp + 0x48], rbx
0x7920:	mov	byte ptr [rsp + 0x7c], al
0x7924:	jmp	0x7203


0x7df8:	test	r13, r13
0x7dfb:	je	0x8026


0x81ed:	lea	rax, [rip + 0x6067]
0x81f4:	mov	byte ptr [rsp + 0xe], 1
0x81f9:	mov	byte ptr [rsp + 0x7c], 0
0x81fe:	xor	r12d, r12d
0x8201:	mov	qword ptr [rsp + 0x50], 0
0x820a:	mov	byte ptr [rsp + 0xf], 1
0x820f:	mov	byte ptr [rsp + 0xd], 1
0x8214:	mov	qword ptr [rsp + 0x18], 1
0x821d:	xor	r15d, r15d
0x8220:	mov	qword ptr [rsp + 0x48], rax
0x8225:	jmp	0x7203


0x8026:	mov	qword ptr [rsp + 0x50], 0
0x802f:	mov	byte ptr [rsp + 0xe], 1
0x8034:	xor	r12d, r12d
0x8037:	mov	byte ptr [rsp + 0x7c], 0
0x803c:	jmp	0x7e1b


0x7e01:	mov	byte ptr [r14], 0x22
0x7e05:	mov	byte ptr [rsp + 0xe], 1
0x7e0a:	xor	r12d, r12d
0x7e0d:	mov	byte ptr [rsp + 0x7c], 0
0x7e12:	mov	qword ptr [rsp + 0x50], 0
0x7e1b:	lea	rax, [rip + 0x6439]
0x7e22:	mov	byte ptr [rsp + 0xf], 0
0x7e27:	mov	byte ptr [rsp + 0xd], 1
0x7e2c:	mov	qword ptr [rsp + 0x18], 1
0x7e35:	mov	r15d, 1
0x7e3b:	mov	qword ptr [rsp + 0x48], rax
0x7e40:	jmp	0x7203


0x7e1b:	lea	rax, [rip + 0x6439]
0x7e22:	mov	byte ptr [rsp + 0xf], 0
0x7e27:	mov	byte ptr [rsp + 0xd], 1
0x7e2c:	mov	qword ptr [rsp + 0x18], 1
0x7e35:	mov	r15d, 1
0x7e3b:	mov	qword ptr [rsp + 0x48], rax
0x7e40:	jmp	0x7203


0x7e45:	lea	rax, [rip + 0x640f]
0x7e4c:	mov	byte ptr [rsp + 0xe], 1
0x7e51:	mov	byte ptr [rsp + 0x7c], 0
0x7e56:	xor	r12d, r12d
0x7e59:	mov	qword ptr [rsp + 0x50], 0
0x7e62:	mov	byte ptr [rsp + 0xf], 1
0x7e67:	mov	byte ptr [rsp + 0xd], 1
0x7e6c:	mov	qword ptr [rsp + 0x18], 1
0x7e75:	xor	r15d, r15d
0x7e78:	mov	qword ptr [rsp + 0x48], rax
0x7e7d:	mov	dword ptr [rsp + 8], 5
0x7e85:	jmp	0x7203


0x7e8a:	mov	byte ptr [rsp + 0xe], 1
0x7e8f:	mov	byte ptr [rsp + 0x7c], 0
0x7e94:	xor	r12d, r12d
0x7e97:	mov	qword ptr [rsp + 0x50], 0
0x7ea0:	mov	byte ptr [rsp + 0xf], 0
0x7ea5:	xor	r15d, r15d
0x7ea8:	mov	byte ptr [rsp + 0xd], 1
0x7ead:	mov	qword ptr [rsp + 0x18], 0
0x7eb6:	mov	qword ptr [rsp + 0x48], 0
0x7ebf:	jmp	0x7203


0x7ec4:	cmp	dword ptr [rsp + 8], 0xa
0x7ec9:	je	0x7f21


0x7f21:	xor	r15d, r15d
0x7f24:	test	ebx, ebx
0x7f26:	je	0x80ed


0x7ecb:	lea	rsi, [rip + 0x638d]
0x7ed2:	xor	edi, edi
0x7ed4:	mov	edx, 5
0x7ed9:	call	0x1b60


0x80ed:	mov	rdx, qword ptr [rsp + 0x68]
0x80f2:	movzx	eax, byte ptr [rdx]
0x80f5:	test	al, al
0x80f7:	je	0x7f2c


0x7f2c:	test	ebx, ebx
0x7f2e:	mov	rbx, qword ptr [rsp + 0x60]
0x7f33:	setne	byte ptr [rsp + 0xf]
0x7f38:	xor	r12d, r12d
0x7f3b:	mov	rdi, rbx
0x7f3e:	call	0x1b80


0x8109:	add	r15, 1
0x810d:	movzx	eax, byte ptr [rdx + r15]
0x8112:	test	al, al
0x8114:	jne	0x8100


0x8105:	mov	byte ptr [r14 + r15], al
0x8109:	add	r15, 1
0x810d:	movzx	eax, byte ptr [rdx + r15]
0x8112:	test	al, al
0x8114:	jne	0x8100


0x8116:	jmp	0x7f2c


0x8100:	cmp	r13, r15
0x8103:	jbe	0x8109


0x7f43:	mov	qword ptr [rsp + 0x48], rbx
0x7f48:	mov	qword ptr [rsp + 0x18], rax
0x7f4d:	mov	byte ptr [rsp + 0xe], 1
0x7f52:	mov	byte ptr [rsp + 0x7c], 0
0x7f57:	mov	qword ptr [rsp + 0x50], 0
0x7f60:	mov	byte ptr [rsp + 0xd], 1
0x7f65:	jmp	0x7203


0x7ede:	mov	rcx, rax
0x7ee1:	mov	qword ptr [rsp + 0x68], rax
0x7ee6:	lea	rax, [rip + 0x6372]
0x7eed:	cmp	rcx, rax
0x7ef0:	je	0x828e


0x828e:	mov	esi, dword ptr [rsp + 8]
0x8292:	mov	rdi, rcx
0x8295:	call	0x7040


0x7ef6:	lea	rsi, [rip + 0x6360]
0x7efd:	xor	edi, edi
0x7eff:	mov	edx, 5
0x7f04:	call	0x1b60


0x7f09:	mov	rcx, rax
0x7f0c:	mov	qword ptr [rsp + 0x60], rax
0x7f11:	lea	rax, [rip + 0x6345]
0x7f18:	cmp	rcx, rax
0x7f1b:	je	0x82a4


0x82a4:	mov	esi, dword ptr [rsp + 8]
0x82a8:	mov	rdi, rcx
0x82ab:	call	0x7040


0x82b0:	mov	qword ptr [rsp + 0x60], rax
0x82b5:	jmp	0x7f21


0x829a:	mov	qword ptr [rsp + 0x68], rax
0x829f:	jmp	0x7ef6


0x7f6a:	mov	byte ptr [rsp + 0xe], 1
0x7f6f:	mov	byte ptr [rsp + 0x7c], 0
0x7f74:	xor	r12d, r12d
0x7f77:	mov	qword ptr [rsp + 0x50], 0
0x7f80:	mov	byte ptr [rsp + 0xf], 0
0x7f85:	xor	r15d, r15d
0x7f88:	mov	byte ptr [rsp + 0xd], 0
0x7f8d:	mov	qword ptr [rsp + 0x18], 0
0x7f96:	mov	qword ptr [rsp + 0x48], 0
0x7f9f:	jmp	0x7203


0x7fa4:	mov	byte ptr [rsp + 0xe], 1
0x7fa9:	mov	byte ptr [rsp + 0x7c], 0
0x7fae:	xor	r12d, r12d
0x7fb1:	mov	qword ptr [rsp + 0x50], 0
0x7fba:	mov	byte ptr [rsp + 0xf], 1
0x7fbf:	mov	byte ptr [rsp + 0xd], 1
0x7fc4:	jmp	0x71e3


0x71e3:	lea	rax, [rip + 0x7073]
0x71ea:	mov	qword ptr [rsp + 0x18], 1
0x71f3:	xor	r15d, r15d
0x71f6:	mov	dword ptr [rsp + 8], 2
0x71fe:	mov	qword ptr [rsp + 0x48], rax
0x7203:	xor	r11d, r11d
0x7206:	mov	rax, rbp
0x7209:	mov	r8d, r12d
0x720c:	mov	rbp, r11
0x720f:	mov	r11, rax
0x7212:	nop	word ptr [rax + rax]
0x7218:	cmp	r11, rbp
0x721b:	setne	r12b
0x721f:	cmp	r11, -1
0x7223:	jne	0x7232


0x8198:	test	ebx, ebx
0x819a:	je	0x8328


0x8328:	mov	byte ptr [rsp + 0xd], 0
0x832d:	jmp	0x7da1


0x81a0:	lea	rax, [rip + 0x60b6]
0x81a7:	mov	byte ptr [rsp + 0xe], 1
0x81ac:	mov	byte ptr [rsp + 0x7c], 0
0x81b1:	xor	r12d, r12d
0x81b4:	mov	qword ptr [rsp + 0x50], 0
0x81bd:	mov	byte ptr [rsp + 0xf], 1
0x81c2:	mov	byte ptr [rsp + 0xd], 0
0x81c7:	mov	qword ptr [rsp + 0x18], 1
0x81d0:	xor	r15d, r15d
0x81d3:	mov	qword ptr [rsp + 0x48], rax
0x81d8:	jmp	0x7203


0x7da1:	test	r13, r13
0x7da4:	jne	0x833a


0x8364:	nop	
0x8366:	nop	word ptr cs:[rax + rax]


0x851b:	nop	dword ptr [rax + rax]


0x8556:	nop	word ptr cs:[rax + rax]


0x8571:	nop	dword ptr [rax + rax]
0x8576:	nop	word ptr cs:[rax + rax]


0x8591:	nop	dword ptr [rax + rax]
0x8596:	nop	word ptr cs:[rax + rax]


0x85d5:	nop	
0x85d6:	nop	word ptr cs:[rax + rax]


0x85f5:	nop	
0x85f6:	nop	word ptr cs:[rax + rax]


0x86a4:	nop	
0x86a6:	nop	word ptr cs:[rax + rax]


0x8793:	nop	dword ptr [rax]
0x8796:	nop	word ptr cs:[rax + rax]


0x87aa:	nop	word ptr [rax + rax]


0x8843:	nop	dword ptr [rax]
0x8846:	nop	word ptr cs:[rax + rax]


0x8863:	nop	dword ptr [rax]
0x8866:	nop	word ptr cs:[rax + rax]


0x887c:	nop	dword ptr [rax]


0x8898:	nop	dword ptr [rax + rax]


0x88b4:	nop	
0x88b6:	nop	word ptr cs:[rax + rax]


0x894e:	nop	


0x89da:	nop	word ptr [rax + rax]


0x89ec:	nop	dword ptr [rax]


0x89ff:	nop	


0x8a98:	nop	dword ptr [rax + rax]


0x8ac1:	nop	dword ptr [rax + rax]
0x8ac6:	nop	word ptr cs:[rax + rax]


0x8ada:	nop	word ptr [rax + rax]


0x8b6e:	nop	


0x8c01:	nop	dword ptr [rax + rax]
0x8c06:	nop	word ptr cs:[rax + rax]


0x8c1c:	nop	dword ptr [rax]


0x8c37:	nop	word ptr [rax + rax]


0x8c53:	nop	dword ptr [rax]
0x8c56:	nop	word ptr cs:[rax + rax]


0x8c6c:	nop	dword ptr [rax]


0x8c84:	nop	
0x8c86:	nop	word ptr cs:[rax + rax]


0x8ca3:	nop	dword ptr [rax]
0x8ca6:	nop	word ptr cs:[rax + rax]


0x8cc8:	nop	dword ptr [rax + rax]


0x8d85:	nop	
0x8d86:	nop	word ptr cs:[rax + rax]


0x8d9f:	nop	


0x91b7:	nop	word ptr [rax + rax]


0x9258:	nop	dword ptr [rax + rax]


0x9335:	nop	
0x9336:	nop	word ptr cs:[rax + rax]


0x93da:	nop	word ptr [rax + rax]


0x9404:	nop	
0x9406:	nop	word ptr cs:[rax + rax]


0x9412:	nop	dword ptr [rax]
0x9416:	nop	word ptr cs:[rax + rax]


0x9456:	nop	word ptr cs:[rax + rax]


0x9484:	nop	
0x9486:	nop	word ptr cs:[rax + rax]


0x9512:	nop	dword ptr [rax]
0x9516:	nop	word ptr cs:[rax + rax]


0x956a:	nop	word ptr [rax + rax]


0x9587:	nop	word ptr [rax + rax]


0x95be:	nop	


0x95e8:	nop	dword ptr [rax + rax]


0x9603:	nop	word ptr cs:[rax + rax]
0x960d:	nop	dword ptr [rax]


0x9645:	nop	word ptr cs:[rax + rax]
0x964f:	nop	


0x9828:	mov	rax, rbx
0x982b:	mul	rsi
0x982e:	jo	0x9a21


0x9a21:	or	rax, 0xffffffffffffffff
0x9a25:	mov	r8d, 1
0x9a2b:	jmp	0x9837


0x9834:	xor	r8d, r8d
0x9837:	mul	rsi
0x983a:	jo	0x9a12


0x9837:	mul	rsi
0x983a:	jo	0x9a12


0x9a12:	mov	r8d, 1
0x9a18:	or	rbx, 0xffffffffffffffff
0x9a1c:	jmp	0x9843


0x9840:	mov	rbx, rax
0x9843:	or	ebp, r8d
0x9846:	nop	word ptr cs:[rax + rax]
0x9850:	movsxd	rdi, edi
0x9853:	mov	eax, ebp
0x9855:	add	rcx, rdi
0x9858:	or	eax, 2
0x985b:	mov	qword ptr [r15], rcx
0x985e:	cmp	byte ptr [rcx], 0
0x9861:	mov	qword ptr [r14], rbx
0x9864:	cmovne	ebp, eax
0x9867:	jmp	0x972d


0x9843:	or	ebp, r8d
0x9846:	nop	word ptr cs:[rax + rax]
0x9850:	movsxd	rdi, edi
0x9853:	mov	eax, ebp
0x9855:	add	rcx, rdi
0x9858:	or	eax, 2
0x985b:	mov	qword ptr [r15], rcx
0x985e:	cmp	byte ptr [rcx], 0
0x9861:	mov	qword ptr [r14], rbx
0x9864:	cmovne	ebp, eax
0x9867:	jmp	0x972d


0x9877:	mov	edx, 2
0x987c:	mov	rax, rdx
0x987f:	mul	rbx
0x9882:	jo	0x991e


0x991e:	mov	ebp, 1
0x9923:	or	rbx, 0xffffffffffffffff
0x9927:	jmp	0x9850


0x9888:	add	rbx, rbx
0x988b:	jmp	0x9850


0x9850:	movsxd	rdi, edi
0x9853:	mov	eax, ebp
0x9855:	add	rcx, rdi
0x9858:	or	eax, 2
0x985b:	mov	qword ptr [r15], rcx
0x985e:	cmp	byte ptr [rcx], 0
0x9861:	mov	qword ptr [r14], rbx
0x9864:	cmovne	ebp, eax
0x9867:	jmp	0x972d


0x988d:	mov	edx, 0x200
0x9892:	mov	rax, rdx
0x9895:	mul	rbx
0x9898:	jo	0x991e


0x989e:	shl	rbx, 9
0x98a2:	jmp	0x9850


0x98a4:	mov	r8d, 7
0x98aa:	xor	r9d, r9d
0x98ad:	nop	dword ptr [rax]
0x98b0:	mov	rax, rbx
0x98b3:	mul	rsi
0x98b6:	mov	rbx, rax
0x98b9:	jo	0x9a4e


0x9a4e:	mov	r9d, 1
0x9a54:	or	rbx, 0xffffffffffffffff
0x9a58:	jmp	0x98bf


0x98bf:	sub	r8d, 1
0x98c3:	jne	0x98b0


0x98c5:	or	ebp, r9d
0x98c8:	jmp	0x9850


0x98b0:	mov	rax, rbx
0x98b3:	mul	rsi
0x98b6:	mov	rbx, rax
0x98b9:	jo	0x9a4e


0x98ca:	mov	r8d, 8
0x98d0:	xor	r9d, r9d
0x98d3:	nop	dword ptr [rax + rax]
0x98d8:	mov	rax, rbx
0x98db:	mul	rsi
0x98de:	mov	rbx, rax
0x98e1:	jo	0x9a30


0x9a30:	mov	r9d, 1
0x9a36:	or	rbx, 0xffffffffffffffff
0x9a3a:	jmp	0x98e7


0x98e7:	sub	r8d, 1
0x98eb:	jne	0x98d8


0x98ed:	jmp	0x98c5


0x98d8:	mov	rax, rbx
0x98db:	mul	rsi
0x98de:	mov	rbx, rax
0x98e1:	jo	0x9a30


0x98ef:	mov	r8d, 4
0x98f5:	xor	r9d, r9d
0x98f8:	mov	rax, rbx
0x98fb:	mul	rsi
0x98fe:	mov	rbx, rax
0x9901:	jo	0x9a03


0x9a03:	mov	r9d, 1
0x9a09:	or	rbx, 0xffffffffffffffff
0x9a0d:	jmp	0x9907


0x9907:	sub	r8d, 1
0x990b:	jne	0x98f8


0x990d:	jmp	0x98c5


0x98f8:	mov	rax, rbx
0x98fb:	mul	rsi
0x98fe:	mov	rbx, rax
0x9901:	jo	0x9a03


0x990f:	mov	rax, rbx
0x9912:	mul	rsi
0x9915:	mov	rbx, rax
0x9918:	jno	0x9850


0x9a3f:	mov	r9d, 1
0x9a45:	or	rbx, 0xffffffffffffffff
0x9a49:	jmp	0x9948


0x9948:	sub	r8d, 1
0x994c:	jne	0x9939


0x994e:	jmp	0x98c5


0x9939:	mov	rax, rbx
0x993c:	mul	rsi
0x993f:	mov	rbx, rax
0x9942:	jo	0x9a3f


0x9953:	mov	r8d, 6
0x9959:	xor	r9d, r9d
0x995c:	mov	rax, rbx
0x995f:	mul	rsi
0x9962:	mov	rbx, rax
0x9965:	jo	0x99f4


0x99f4:	mov	r9d, 1
0x99fa:	or	rbx, 0xffffffffffffffff
0x99fe:	jmp	0x996b


0x996b:	sub	r8d, 1
0x996f:	jne	0x995c


0x9971:	jmp	0x98c5


0x995c:	mov	rax, rbx
0x995f:	mul	rsi
0x9962:	mov	rbx, rax
0x9965:	jo	0x99f4


0x9976:	mov	edx, 0x400
0x997b:	mov	rax, rdx
0x997e:	mul	rbx
0x9981:	jo	0x991e


0x9983:	shl	rbx, 0xa
0x9987:	jmp	0x9850


0x998c:	mov	rax, rbx
0x998f:	mul	rsi
0x9992:	jo	0x9a5d


0x9a5d:	mov	r8d, 1
0x9a63:	or	rax, 0xffffffffffffffff
0x9a67:	jmp	0x999b


0x9998:	xor	r8d, r8d
0x999b:	mul	rsi
0x999e:	jno	0x9837


0x999b:	mul	rsi
0x999e:	jno	0x9837


0x99a4:	mov	r8d, 1
0x99aa:	or	rax, 0xffffffffffffffff
0x99ae:	jmp	0x9837


0x9a6c:	nop	dword ptr [rax]


0x9bb3:	nop	dword ptr [rax]
0x9bb6:	nop	word ptr cs:[rax + rax]


0x9c64:	nop	word ptr cs:[rax + rax]
0x9c6e:	nop	


0x9ceb:	nop	dword ptr [rax + rax]


0x9f6e:	nop	


0xa007:	nop	word ptr [rax + rax]


0xa093:	nop	word ptr cs:[rax + rax]
0xa09d:	nop	dword ptr [rax]


0xa11e:	nop	


0xa12a:	nop	word ptr [rax + rax]


0xa246:	nop	word ptr cs:[rax + rax]


0xa2c3:	nop	dword ptr [rax]
0xa2c6:	nop	word ptr cs:[rax + rax]


0xa45d:	nop	dword ptr [rax]


0xa4ad:	nop	dword ptr [rax]


0xa54c:	nop	dword ptr [rax]


0xb66f:	nop	


0xb86e:	nop	


0xbab7:	mov	r11d, 0x10
0xbabd:	mov	ebx, 0x73
0xbac2:	nop	word ptr [rax + rax]
0xbac8:	cmp	r13, -1
0xbacc:	je	0xc187


0xc187:	mov	rsi, qword ptr [rsp + 0x20]
0xc18c:	cmp	rsi, -1
0xc190:	lea	rax, [rsi + 1]
0xc194:	mov	qword ptr [r12 + 0x50], rsi
0xc199:	je	0xc0bb


0xbad2:	mov	qword ptr [r12 + 0x50], r13
0xbad7:	cmp	r9, r13
0xbada:	mov	rcx, qword ptr [r15 + 8]
0xbade:	jbe	0xc100


0xc19f:	mov	r13, qword ptr [rsp + 0x20]
0xc1a4:	mov	qword ptr [rsp + 0x20], rax
0xc1a9:	jmp	0xbad7


0xc100:	add	r9, r9
0xc103:	lea	rax, [r13 + 1]
0xc107:	cmp	r9, r13
0xc10a:	cmovbe	r9, rax
0xc10e:	movabs	rax, 0x7ffffffffffffff
0xc118:	cmp	r9, rax
0xc11b:	ja	0xc4fb


0xbae4:	mov	rax, qword ptr [r15]
0xbae7:	mov	rdx, rax
0xbaea:	shl	rdx, 5
0xbaee:	add	rdx, rcx
0xbaf1:	cmp	rax, r13
0xbaf4:	ja	0xbb16


0xbad7:	cmp	r9, r13
0xbada:	mov	rcx, qword ptr [r15 + 8]
0xbade:	jbe	0xc100


0xc121:	mov	rsi, r9
0xc124:	mov	qword ptr [rsp + 0x48], r9
0xc129:	mov	qword ptr [rsp + 0x40], r10
0xc12e:	shl	rsi, 5
0xc132:	cmp	qword ptr [rsp + 8], rcx
0xc137:	mov	qword ptr [rsp + 0x38], r8
0xc13c:	mov	dword ptr [rsp + 0x30], r11d
0xc141:	je	0xc1e1


0xbb16:	shl	r13, 5
0xbb1a:	lea	rax, [rcx + r13]
0xbb1e:	mov	edx, dword ptr [rax]
0xbb20:	test	edx, edx
0xbb22:	jne	0xc0f3


0xc1e1:	mov	rdi, rsi
0xc1e4:	call	0x1d00


0xc147:	mov	rdi, rcx
0xc14a:	call	0x1d50


0xbb00:	add	rax, 1
0xbb04:	mov	dword ptr [rdx], 0
0xbb0a:	add	rdx, 0x20
0xbb0e:	cmp	rax, r13
0xbb11:	jbe	0xbb00


0xbb13:	mov	qword ptr [r15], rax
0xbb16:	shl	r13, 5
0xbb1a:	lea	rax, [rcx + r13]
0xbb1e:	mov	edx, dword ptr [rax]
0xbb20:	test	edx, edx
0xbb22:	jne	0xc0f3


0xbb28:	mov	dword ptr [rax], r11d
0xbb2b:	mov	byte ptr [r12 + 0x48], bl
0xbb30:	mov	rax, qword ptr [r14]
0xbb33:	mov	qword ptr [r12 + 8], rbp
0xbb38:	lea	rbx, [rax + 1]
0xbb3c:	cmp	r10, rbx
0xbb3f:	mov	qword ptr [r14], rbx
0xbb42:	ja	0xbbd0


0xc0f3:	cmp	edx, r11d
0xc0f6:	je	0xbb2b


0xbb48:	test	r10, r10
0xbb4b:	js	0xc4f7


0xbbd0:	mov	rcx, qword ptr [r14 + 8]
0xbbd4:	jmp	0xb8e8


0xbb2b:	mov	byte ptr [r12 + 0x48], bl
0xbb30:	mov	rax, qword ptr [r14]
0xbb33:	mov	qword ptr [r12 + 8], rbp
0xbb38:	lea	rbx, [rax + 1]
0xbb3c:	cmp	r10, rbx
0xbb3f:	mov	qword ptr [r14], rbx
0xbb42:	ja	0xbbd0


0xc0fc:	jmp	0xc0bf


0xc4f7:	mov	rcx, qword ptr [r15 + 8]
0xc4fb:	cmp	qword ptr [rsp + 8], rcx
0xc500:	jne	0xc364


0xbb51:	add	r10, r10
0xbb54:	movabs	rax, 0x2e8ba2e8ba2e8ba
0xbb5e:	cmp	r10, rax
0xbb61:	ja	0xc4f7


0xbb67:	lea	rax, [r10 + r10*4]
0xbb6b:	mov	rdi, qword ptr [r14 + 8]
0xbb6f:	cmp	qword ptr [rsp + 0x28], rdi
0xbb74:	mov	qword ptr [rsp + 0x40], r9
0xbb79:	mov	qword ptr [rsp + 0x38], r10
0xbb7e:	lea	rax, [r10 + rax*2]
0xbb82:	mov	qword ptr [rsp + 0x30], r8
0xbb87:	lea	rsi, [rax*8]
0xbb8f:	je	0xc24d


0xc24d:	mov	rdi, rsi
0xc250:	call	0x1d00


0xbb95:	call	0x1d50


0xbb9a:	test	rax, rax
0xbb9d:	mov	rcx, rax
0xbba0:	mov	r8, qword ptr [rsp + 0x30]
0xbba5:	mov	r10, qword ptr [rsp + 0x38]
0xbbaa:	mov	r9, qword ptr [rsp + 0x40]
0xbbaf:	je	0xc4f7


0xbbb5:	mov	rax, qword ptr [rsp + 0x28]
0xbbba:	cmp	rax, qword ptr [r14 + 8]
0xbbbe:	mov	rbx, qword ptr [r14]
0xbbc1:	je	0xc270


0xc270:	lea	rax, [rbx + rbx*4]
0xc274:	mov	rsi, qword ptr [rsp + 0x28]
0xc279:	mov	rdi, rcx
0xc27c:	mov	qword ptr [rsp + 0x40], r9
0xc281:	mov	qword ptr [rsp + 0x38], r10
0xc286:	lea	rdx, [rbx + rax*2]
0xc28a:	mov	qword ptr [rsp + 0x30], r8
0xc28f:	shl	rdx, 3
0xc293:	call	0x1ce0


0xbbc7:	mov	qword ptr [r14 + 8], rcx
0xbbcb:	jmp	0xb8e8


0xc298:	mov	rbx, qword ptr [r14]
0xc29b:	mov	rcx, rax
0xc29e:	mov	r9, qword ptr [rsp + 0x40]
0xc2a3:	mov	r10, qword ptr [rsp + 0x38]
0xc2a8:	mov	r8, qword ptr [rsp + 0x30]
0xc2ad:	jmp	0xbbc7


0xc14f:	test	rax, rax
0xc152:	mov	rcx, rax
0xc155:	mov	r11d, dword ptr [rsp + 0x30]
0xc15a:	mov	r8, qword ptr [rsp + 0x38]
0xc15f:	mov	r10, qword ptr [rsp + 0x40]
0xc164:	mov	r9, qword ptr [rsp + 0x48]
0xc169:	je	0xc4f7


0xc16f:	mov	rax, qword ptr [rsp + 8]
0xc174:	cmp	rax, qword ptr [r15 + 8]
0xc178:	je	0xc209


0xc209:	mov	rdx, qword ptr [r15]
0xc20c:	mov	rsi, qword ptr [rsp + 8]
0xc211:	mov	rdi, rcx
0xc214:	mov	qword ptr [rsp + 0x48], r9
0xc219:	mov	qword ptr [rsp + 0x40], r10
0xc21e:	mov	qword ptr [rsp + 0x38], r8
0xc223:	mov	dword ptr [rsp + 0x30], r11d
0xc228:	shl	rdx, 5
0xc22c:	call	0x1ce0


0xc17e:	mov	qword ptr [r15 + 8], rcx
0xc182:	jmp	0xbae4


0xc231:	mov	r9, qword ptr [rsp + 0x48]
0xc236:	mov	r10, qword ptr [rsp + 0x40]
0xc23b:	mov	rcx, rax
0xc23e:	mov	r8, qword ptr [rsp + 0x38]
0xc243:	mov	r11d, dword ptr [rsp + 0x30]
0xc248:	jmp	0xc17e


0xc255:	test	rax, rax
0xc258:	mov	rcx, rax
0xc25b:	mov	r8, qword ptr [rsp + 0x30]
0xc260:	mov	r10, qword ptr [rsp + 0x38]
0xc265:	mov	r9, qword ptr [rsp + 0x40]
0xc26a:	je	0xc359


0xc359:	mov	rcx, qword ptr [r15 + 8]
0xc35d:	cmp	qword ptr [rsp + 8], rcx
0xc362:	je	0xc37c


0xc1e9:	test	rax, rax
0xc1ec:	mov	rcx, rax
0xc1ef:	mov	r11d, dword ptr [rsp + 0x30]
0xc1f4:	mov	r8, qword ptr [rsp + 0x38]
0xc1f9:	mov	r10, qword ptr [rsp + 0x40]
0xc1fe:	mov	r9, qword ptr [rsp + 0x48]
0xc203:	je	0xc36c


0xbf6c:	cmp	eax, 0xf
0xbf6f:	mov	r11d, 0x16
0xbf75:	jg	0xbac8


0xbf7b:	test	al, 4
0xbf7d:	jne	0xbac8


0xbac8:	cmp	r13, -1
0xbacc:	je	0xc187


0xbf83:	cmp	eax, 7
0xbf86:	mov	r11d, 0x15
0xbf8c:	jg	0xbac8


0xbf92:	test	al, 2
0xbf94:	mov	r11d, 0x12
0xbf9a:	jne	0xbac8


0xbfa0:	xor	r11d, r11d
0xbfa3:	test	al, 1
0xbfa5:	sete	r11b
0xbfa9:	add	r11d, 0x13
0xbfad:	jmp	0xbac8


0xbfcb:	cmp	eax, 0xf
0xbfce:	mov	r11d, 9
0xbfd4:	jg	0xbac8


0xbfda:	test	al, 4
0xbfdc:	jne	0xbac8


0xbfe2:	cmp	eax, 7
0xbfe5:	mov	r11d, 7
0xbfeb:	jg	0xbac8


0xbff1:	test	al, 2
0xbff3:	mov	r11d, 1
0xbff9:	jne	0xbac8


0xbfff:	and	eax, 1
0xc002:	cmp	eax, 1
0xc005:	sbb	r11d, r11d
0xc008:	and	r11d, 2
0xc00c:	add	r11d, 3
0xc010:	jmp	0xbac8


0xc02b:	cmp	eax, 0xf
0xc02e:	mov	r11d, 0xc
0xc034:	jg	0xbac8


0xc03a:	xor	r11d, r11d
0xc03d:	test	al, 4
0xc03f:	setne	r11b
0xc043:	add	r11d, 0xb
0xc047:	jmp	0xbac8


0xc04c:	mov	r11d, 0xe
0xc052:	mov	ebx, 0x63
0xc057:	jmp	0xbac8


0xc05c:	cmp	eax, 0xf
0xc05f:	mov	r11d, 0xa
0xc065:	jg	0xbac8


0xc06b:	test	al, 4
0xc06d:	jne	0xbac8


0xc073:	cmp	eax, 7
0xc076:	mov	r11d, 8
0xc07c:	jg	0xbac8


0xc082:	test	al, 2
0xc084:	mov	r11d, 2
0xc08a:	jne	0xbac8


0xc090:	and	eax, 1
0xc093:	cmp	eax, 1
0xc096:	sbb	r11d, r11d
0xc099:	and	r11d, 2
0xc09d:	add	r11d, 4
0xc0a1:	jmp	0xbac8


0xc55c:	nop	dword ptr [rax]


0xc5c5:	nop	
0xc5c6:	nop	word ptr cs:[rax + rax]


0xc5d2:	nop	word ptr cs:[rax + rax]
0xc5dc:	nop	dword ptr [rax]


0x73f0:	xor	r10d, r10d
0x73f3:	mov	eax, dword ptr [rsp + 8]
0x73f7:	cmp	eax, 2
0x73fa:	je	0x79b8


0x7420:	xor	r10d, r10d
0x7423:	cmp	dword ptr [rsp + 8], 2
0x7428:	je	0x7930


0x7448:	mov	edx, 9
0x744d:	mov	ebx, 0x74
0x7452:	cmp	dword ptr [rsp + 8], 2
0x7457:	sete	al
0x745a:	and	al, byte ptr [rsp + 0xf]
0x745e:	jne	0x75ae


0x7488:	mov	edx, 8
0x748d:	mov	ebx, 0x62
0x7492:	jmp	0x7464


0x7498:	cmp	dword ptr [rsp + 8], 2
0x749d:	je	0x7870


0x7540:	cmp	byte ptr [rsp + 0xd], 0
0x7545:	jne	0x7713


0x7568:	cmp	dword ptr [rsp + 8], 2
0x756d:	sete	dl
0x7570:	xor	eax, eax
0x7572:	jmp	0x7358


0x7580:	mov	edx, 7
0x7585:	mov	ebx, 0x61
0x758a:	jmp	0x7464


0x7590:	cmp	dword ptr [rsp + 8], 2
0x7595:	sete	dl
0x7598:	test	rbp, rbp
0x759b:	jne	0x734c


0x75c0:	cmp	dword ptr [rsp + 8], 2
0x75c5:	sete	dl
0x75c8:	xor	r12d, r12d
0x75cb:	jmp	0x75a1


0x75d0:	cmp	dword ptr [rsp + 8], 2
0x75d5:	mov	ebx, 0x20
0x75da:	sete	dl
0x75dd:	jmp	0x75a1


0x75e0:	mov	edx, 0xd
0x75e5:	mov	ebx, 0x72
0x75ea:	jmp	0x7452


0x75f0:	mov	edx, 0xc
0x75f5:	mov	ebx, 0x66
0x75fa:	jmp	0x7464


0x7600:	mov	edx, 0xb
0x7605:	mov	ebx, 0x76
0x760a:	jmp	0x7464


0x7610:	mov	edx, 0xa
0x7615:	mov	ebx, 0x6e
0x761a:	jmp	0x7452


0x76b0:	xor	r10d, r10d
0x76b3:	cmp	byte ptr [rsp + 0xd], 0
0x76b8:	jne	0x74ae


0x76d0:	mov	edx, 0xc
0x76d5:	xor	r10d, r10d
0x76d8:	mov	ebx, 0x66
0x76dd:	jmp	0x7464


0x76e8:	mov	edx, 0xa
0x76ed:	xor	r10d, r10d
0x76f0:	mov	ebx, 0x6e
0x76f5:	jmp	0x7452


0x7700:	mov	ebx, 0x61
0x7705:	jmp	0x74d0


0x7710:	xor	r10d, r10d
0x7713:	cmp	dword ptr [rsp + 8], 2
0x7718:	sete	dl
0x771b:	cmp	byte ptr [rsp + 0xf], 0
0x7720:	jne	0x82ba


0x77b0:	cmp	dword ptr [rsp + 8], 2
0x77b5:	mov	r12d, r10d
0x77b8:	sete	dl
0x77bb:	xor	r10d, r10d
0x77be:	xor	eax, eax
0x77c0:	jmp	0x7358


0x77c8:	cmp	dword ptr [rsp + 8], 2
0x77cd:	sete	dl
0x77d0:	xor	r10d, r10d
0x77d3:	jmp	0x7598


0x77e0:	cmp	dword ptr [rsp + 8], 2
0x77e5:	sete	dl
0x77e8:	xor	r10d, r10d
0x77eb:	xor	r12d, r12d
0x77ee:	jmp	0x75a1


0x77f8:	cmp	dword ptr [rsp + 8], 2
0x77fd:	mov	r12d, r10d
0x7800:	mov	ebx, 0x20
0x7805:	sete	dl
0x7808:	xor	r10d, r10d
0x780b:	jmp	0x75a1


0x7828:	mov	ebx, 0x76
0x782d:	jmp	0x74d0


0x7838:	mov	edx, 9
0x783d:	xor	r10d, r10d
0x7840:	mov	ebx, 0x74
0x7845:	jmp	0x7452


0x7850:	mov	ebx, 0x62
0x7855:	jmp	0x74d0


0x7df0:	test	ebx, ebx
0x7df2:	jne	0x81ed


0x9930:	mov	r8d, 5
0x9936:	xor	r9d, r9d
0x9939:	mov	rax, rbx
0x993c:	mul	rsi
0x993f:	mov	rbx, rax
0x9942:	jo	0x9a3f


0xbfb8:	xor	r11d, r11d
0xbfbb:	cmp	eax, 7
0xbfbe:	setg	r11b
0xbfc2:	add	r11d, 0xd
0xbfc6:	jmp	0xbac8


0xc018:	xor	r11d, r11d
0xc01b:	cmp	eax, 7
0xc01e:	setg	r11b
0xc022:	add	r11d, 0xf
0xc026:	jmp	0xbac8


0xc0b0:	mov	r11d, 0x11
0xc0b6:	jmp	0xbac8


0x265d:	nop	dword ptr [rax]


0x28a7:	nop	word ptr [rax + rax]


0x28ea:	nop	word ptr [rax + rax]


0x2bb1:	nop	dword ptr [rax]


0x2c0d:	nop	dword ptr [rax]


0x2d5a:	nop	word ptr [rax + rax]


0x3cd6:	nop	word ptr cs:[rax + rax]


0x3d27:	nop	word ptr [rax + rax]


0x3d71:	nop	dword ptr [rax]


0x3f85:	nop	dword ptr [rax]


0x4005:	nop	dword ptr [rax]


0x402d:	nop	dword ptr [rax]


0x403d:	nop	dword ptr [rax]


0x405b:	nop	dword ptr [rax + rax]


0x40ab:	nop	dword ptr [rax + rax]


0x40d1:	nop	dword ptr [rax]


0x410f:	nop	


0x4229:	nop	dword ptr [rax]


0x42ba:	nop	word ptr [rax + rax]


0x42d2:	nop	word ptr [rax + rax]


0x430e:	nop	


0x4532:	nop	word ptr [rax + rax]


0x460a:	nop	word ptr [rax + rax]


0x4648:	nop	dword ptr [rax + rax]


0x4664:	nop	dword ptr [rax]


0x466f:	nop	


0x46e7:	nop	word ptr [rax + rax]


0x46fa:	nop	word ptr [rax + rax]


0x4705:	nop	dword ptr [rax]


0x4752:	nop	word ptr [rax + rax]


0x482a:	nop	word ptr [rax + rax]


0x483b:	nop	dword ptr [rax + rax]


0x4879:	nop	dword ptr [rax]


0x49c1:	nop	dword ptr [rax]


0x49e7:	nop	word ptr [rax + rax]


0x4a35:	nop	dword ptr [rax]


0x4a85:	nop	dword ptr [rax]


0x4af9:	nop	dword ptr [rax]


0x4b74:	nop	dword ptr [rax]


0x4bad:	nop	dword ptr [rax]


0x4bdb:	nop	dword ptr [rax + rax]


0x4dfb:	nop	dword ptr [rax + rax]


0x4e62:	nop	word ptr [rax + rax]


0x4edb:	nop	dword ptr [rax + rax]


0x4f3a:	nop	word ptr [rax + rax]


0x4f53:	nop	dword ptr [rax + rax]


0x4f68:	nop	dword ptr [rax + rax]


0x4f8b:	nop	dword ptr [rax + rax]


0x57b6:	nop	word ptr cs:[rax + rax]


0x58a7:	nop	word ptr [rax + rax]


0x5b36:	nop	word ptr cs:[rax + rax]


0x5c01:	nop	dword ptr [rax]


0x5c15:	nop	dword ptr [rax]


0x5c29:	nop	dword ptr [rax]


0x5c5d:	nop	dword ptr [rax]


0x5d0e:	nop	


0x5da5:	nop	dword ptr [rax]


0x5de4:	nop	dword ptr [rax]


0x5e01:	nop	dword ptr [rax]


0x5e12:	nop	word ptr [rax + rax]


0x60c4:	nop	dword ptr [rax]


0x60cc:	nop	dword ptr [rax]


0x6108:	nop	dword ptr [rax + rax]


0x625e:	nop	


0x627c:	nop	dword ptr [rax]


0x6333:	nop	dword ptr [rax + rax]


0x63b4:	nop	dword ptr [rax]


0x6412:	nop	word ptr [rax + rax]


0x646b:	nop	dword ptr [rax + rax]


0x6474:	nop	dword ptr [rax]


0x655b:	nop	dword ptr [rax + rax]


0x6582:	nop	word ptr [rax + rax]


0x65e2:	nop	word ptr [rax + rax]


0x6664:	nop	dword ptr [rax]


0x6684:	nop	dword ptr [rax]


0x66a8:	nop	dword ptr [rax + rax]


0x66c8:	nop	dword ptr [rax + rax]


0x678b:	nop	dword ptr [rax + rax]


0x67cb:	nop	dword ptr [rax + rax]


0x6807:	nop	word ptr [rax + rax]


0x68a4:	nop	dword ptr [rax]


0x68d6:	nop	word ptr cs:[rax + rax]


0x6904:	nop	dword ptr [rax]


0x6918:	nop	dword ptr [rax + rax]


0x692c:	nop	dword ptr [rax]


0x694e:	nop	


0x6974:	nop	dword ptr [rax]


0x6a68:	nop	dword ptr [rax + rax]


0x6bc4:	nop	dword ptr [rax]


0x6bfc:	nop	dword ptr [rax]


0x6c22:	nop	word ptr [rax + rax]


0x6c69:	nop	dword ptr [rax]


0x6cc8:	nop	dword ptr [rax + rax]


0x6ce2:	nop	word ptr [rax + rax]


0x6dcb:	nop	dword ptr [rax + rax]


0x6e47:	nop	word ptr [rax + rax]


0x6f57:	nop	word ptr [rax + rax]


0x6f8e:	nop	


0x707c:	nop	dword ptr [rax]


0x70cd:	nop	dword ptr [rax]


0x72f8:	nop	dword ptr [rax + rax]


0x73e7:	nop	word ptr [rax + rax]


0x741e:	nop	


0x7441:	nop	dword ptr [rax]


0x7482:	nop	word ptr [rax + rax]


0x7494:	nop	dword ptr [rax]


0x7538:	nop	dword ptr [rax + rax]


0x7561:	nop	dword ptr [rax]


0x7577:	nop	word ptr [rax + rax]


0x758f:	nop	


0x75be:	nop	


0x75cd:	nop	dword ptr [rax]


0x75df:	nop	


0x75ef:	nop	


0x75ff:	nop	


0x760f:	nop	


0x761f:	nop	


0x768c:	nop	dword ptr [rax]


0x76ac:	nop	dword ptr [rax]


0x76be:	nop	


0x76cf:	nop	


0x76e2:	nop	word ptr [rax + rax]


0x76fa:	nop	word ptr [rax + rax]


0x770a:	nop	word ptr [rax + rax]


0x77ab:	nop	dword ptr [rax + rax]


0x77c5:	nop	dword ptr [rax]


0x77d8:	nop	dword ptr [rax + rax]


0x77f3:	nop	dword ptr [rax + rax]


0x7822:	nop	word ptr [rax + rax]


0x7832:	nop	word ptr [rax + rax]


0x784a:	nop	word ptr [rax + rax]


0x785a:	nop	word ptr [rax + rax]


0x7868:	nop	dword ptr [rax + rax]


0x788f:	nop	


0x7929:	nop	dword ptr [rax]


0x7972:	nop	word ptr [rax + rax]


0x7998:	nop	dword ptr [rax + rax]


0x79b1:	nop	dword ptr [rax]


0x79d2:	nop	word ptr [rax + rax]


0x7b38:	nop	dword ptr [rax + rax]


0x7c4b:	nop	dword ptr [rax + rax]


0x7c6e:	nop	


0x7d35:	nop	dword ptr [rax]


0x7ded:	nop	dword ptr [rax]


0x7ff6:	nop	word ptr cs:[rax + rax]


0x8089:	nop	dword ptr [rax]


0x80fd:	nop	dword ptr [rax]


0x81dd:	nop	dword ptr [rax]


0x84eb:	nop	dword ptr [rax + rax]


0x8d29:	nop	dword ptr [rax]


0x8e46:	nop	word ptr cs:[rax + rax]


0x8ed5:	nop	dword ptr [rax]


0x8ef6:	nop	word ptr cs:[rax + rax]


0x8f55:	nop	dword ptr [rax]


0x8f91:	nop	dword ptr [rax]


0x8fd8:	nop	dword ptr [rax + rax]


0x9027:	nop	word ptr [rax + rax]


0x9084:	nop	dword ptr [rax]


0x90b2:	nop	word ptr [rax + rax]


0x9166:	nop	word ptr cs:[rax + rax]


0x91c9:	nop	dword ptr [rax]


0x9442:	nop	word ptr [rax + rax]


0x94c9:	nop	dword ptr [rax]


0x94f4:	nop	dword ptr [rax]


0x954d:	nop	dword ptr [rax]


0x96b6:	nop	word ptr cs:[rax + rax]


0x9713:	nop	dword ptr [rax + rax]


0x9722:	nop	word ptr [rax + rax]


0x9752:	nop	word ptr [rax + rax]


0x975c:	nop	dword ptr [rax]


0x97fb:	nop	dword ptr [rax + rax]


0x992c:	nop	dword ptr [rax]


0x99b3:	nop	dword ptr [rax + rax]


0x9b4b:	nop	dword ptr [rax + rax]


0x9b8a:	nop	word ptr [rax + rax]


0x9bec:	nop	dword ptr [rax]


0x9c11:	nop	dword ptr [rax]


0x9c43:	nop	dword ptr [rax + rax]


0x9cb5:	nop	dword ptr [rax]


0x9d8b:	nop	dword ptr [rax + rax]


0x9db6:	nop	word ptr cs:[rax + rax]


0x9def:	nop	


0x9e39:	nop	dword ptr [rax]


0x9e5b:	nop	dword ptr [rax + rax]


0x9f01:	nop	dword ptr [rax]


0x9f93:	nop	dword ptr [rax + rax]


0x9fbf:	nop	


0xa176:	nop	word ptr cs:[rax + rax]


0xa203:	nop	dword ptr [rax + rax]


0xa237:	nop	word ptr [rax + rax]


0xa2ad:	nop	dword ptr [rax]


0xa31f:	nop	


0xa3a4:	nop	dword ptr [rax]


0xa3d3:	nop	dword ptr [rax + rax]


0xa47f:	nop	


0xa4ea:	nop	word ptr [rax + rax]


0xa536:	nop	word ptr cs:[rax + rax]


0xa754:	nop	dword ptr [rax]


0xa783:	nop	dword ptr [rax + rax]


0xaaad:	nop	dword ptr [rax]


0xabe2:	nop	word ptr [rax + rax]


0xad0f:	nop	


0xad92:	nop	word ptr [rax + rax]


0xae13:	nop	dword ptr [rax + rax]


0xae3f:	nop	


0xae54:	nop	dword ptr [rax]


0xae84:	nop	dword ptr [rax]


0xaed6:	nop	word ptr cs:[rax + rax]


0xaf0c:	nop	dword ptr [rax]


0xaf3c:	nop	dword ptr [rax]


0xaf7b:	nop	dword ptr [rax + rax]


0xaf91:	nop	dword ptr [rax]


0xafa5:	nop	dword ptr [rax]


0xafb1:	nop	dword ptr [rax]


0xb009:	nop	dword ptr [rax]


0xb029:	nop	dword ptr [rax]


0xb052:	nop	word ptr [rax + rax]


0xb0ad:	nop	dword ptr [rax]


0xb0bf:	nop	


0xb0f2:	nop	word ptr [rax + rax]


0xb178:	nop	dword ptr [rax + rax]


0xb188:	nop	dword ptr [rax + rax]


0xb1bd:	nop	dword ptr [rax]


0xb1fa:	nop	word ptr [rax + rax]


0xb213:	nop	dword ptr [rax + rax]


0xb22a:	nop	word ptr [rax + rax]


0xb259:	nop	dword ptr [rax]


0xb2a8:	nop	dword ptr [rax + rax]


0xb2bc:	nop	dword ptr [rax]


0xb2cb:	nop	dword ptr [rax + rax]


0xb2db:	nop	dword ptr [rax + rax]


0xb2ec:	nop	dword ptr [rax]


0xb338:	nop	dword ptr [rax + rax]


0xb348:	nop	dword ptr [rax + rax]


0xb35f:	nop	


0xb376:	nop	word ptr cs:[rax + rax]


0xb39a:	nop	word ptr [rax + rax]


0xb413:	nop	dword ptr [rax + rax]


0xb428:	nop	dword ptr [rax + rax]


0xb47b:	nop	dword ptr [rax + rax]


0xb62d:	nop	dword ptr [rax]


0xb6a8:	nop	dword ptr [rax + rax]


0xb8de:	nop	


0xb921:	nop	dword ptr [rax]


0xb987:	nop	word ptr [rax + rax]


0xb9d2:	nop	word ptr [rax + rax]


0xb9e8:	nop	dword ptr [rax + rax]


0xb9f8:	nop	dword ptr [rax + rax]


0xba08:	nop	dword ptr [rax + rax]


0xba18:	nop	dword ptr [rax + rax]


0xba47:	nop	word ptr [rax + rax]


0xba6e:	nop	


0xba8d:	nop	dword ptr [rax]


0xba95:	nop	dword ptr [rax]


0xbaf6:	nop	word ptr cs:[rax + rax]


0xbcc6:	nop	word ptr cs:[rax + rax]


0xbd7c:	nop	dword ptr [rax]


0xbe5d:	nop	dword ptr [rax]


0xbea9:	nop	dword ptr [rax]


0xbfb2:	nop	word ptr [rax + rax]


0xc015:	nop	dword ptr [rax]


0xc0a6:	nop	word ptr cs:[rax + rax]


0xc0fe:	nop	


0xc50b:	nop	dword ptr [rax + rax]


