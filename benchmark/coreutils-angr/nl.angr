0x14390:	sub	rsp, 8
0x14394:	add	rsp, 8
0x14398:	ret	


0x14380:	mov	rdx, qword ptr [rip + 0x204c81]
0x14387:	xor	esi, esi
0x14389:	jmp	0x1c00


0x14370:	ret	


0x14300:	push	r15
0x14302:	push	r14
0x14304:	mov	r15, rdx
0x14307:	push	r13
0x14309:	push	r12
0x1430b:	lea	r12, [rip + 0x20469e]
0x14312:	push	rbp
0x14313:	lea	rbp, [rip + 0x20469e]
0x1431a:	push	rbx
0x1431b:	mov	r13d, edi
0x1431e:	mov	r14, rsi
0x14321:	sub	rbp, r12
0x14324:	sub	rsp, 8
0x14328:	sar	rbp, 3
0x1432c:	call	0x1888


0x142c0:	sub	rsp, 8
0x142c4:	mov	edi, 0xe
0x142c9:	call	0x1b30


0x14260:	sub	rsp, 8
0x14264:	xor	esi, esi
0x14266:	call	0x1b70


0x141e0:	push	r12
0x141e2:	push	rbp
0x141e3:	mov	rbp, rdi
0x141e6:	push	rbx
0x141e7:	call	0x1930


0x14190:	test	rdx, rdx
0x14193:	jne	0x141b8


0x14170:	sub	rsp, 8
0x14174:	push	0
0x14176:	push	qword ptr [rsp + 0x28]
0x1417a:	push	qword ptr [rsp + 0x28]
0x1417e:	push	qword ptr [rsp + 0x28]
0x14182:	call	0x13d60


0x14150:	sub	rsp, 8
0x14154:	push	1
0x14156:	push	qword ptr [rsp + 0x20]
0x1415a:	push	qword ptr [rsp + 0x20]
0x1415e:	push	0
0x14160:	call	0x13d60


0x14130:	sub	rsp, 8
0x14134:	push	0
0x14136:	push	r9
0x14138:	mov	r9, rdx
0x1413b:	call	0x138e0


0x14110:	sub	rsp, 8
0x14114:	mov	r9, rdx
0x14117:	push	1
0x14119:	push	r8
0x1411b:	xor	r8d, r8d
0x1411e:	call	0x138e0


0x14070:	test	r8d, 0xfffffff8
0x14077:	jne	0x14108


0x14020:	push	rbx
0x14021:	mov	rbx, rdi
0x14024:	mov	rdi, qword ptr [rdi]
0x14027:	test	rdi, rdi
0x1402a:	je	0x14031


0x13f90:	push	r13
0x13f92:	push	r12
0x13f94:	push	rbp
0x13f95:	push	rbx
0x13f96:	sub	rsp, 8
0x13f9a:	cmp	edi, 0x10
0x13f9d:	ja	0x14000


0x13e80:	mov	eax, edx
0x13e82:	push	r14
0x13e84:	push	r13
0x13e86:	and	eax, 1
0x13e89:	push	r12
0x13e8b:	push	rbp
0x13e8c:	cmp	eax, 1
0x13e8f:	push	rbx
0x13e90:	mov	rbx, rdi
0x13e93:	sbb	r14, r14
0x13e96:	mov	qword ptr [rdi], 0
0x13e9d:	mov	qword ptr [rdi + 8], 0
0x13ea5:	and	r14d, 0xfd4fca
0x13eac:	mov	qword ptr [rdi + 0x10], 0
0x13eb4:	mov	edi, 0x100
0x13eb9:	mov	r12, rsi
0x13ebc:	mov	ebp, edx
0x13ebe:	add	r14, 0x3b2fc
0x13ec5:	call	0x1b00


0x13d60:	push	r15
0x13d62:	push	r14
0x13d64:	push	r13
0x13d66:	push	r12
0x13d68:	mov	r12, rdi
0x13d6b:	push	rbp
0x13d6c:	push	rbx
0x13d6d:	mov	rbp, r8
0x13d70:	mov	rbx, rdx
0x13d73:	mov	rdx, rbp
0x13d76:	sub	rsp, 0x28
0x13d7a:	shr	rdx, 0x3f
0x13d7e:	mov	rax, qword ptr [rsp + 0x70]
0x13d83:	mov	edi, edx
0x13d85:	mov	r8d, dword ptr [rsp + 0x78]
0x13d8a:	shr	rax, 0x3f
0x13d8e:	or	dil, al
0x13d91:	jne	0x13e60


0x138e0:	push	r15
0x138e2:	push	r14
0x138e4:	mov	rax, r8
0x138e7:	push	r13
0x138e9:	push	r12
0x138eb:	add	r8, rcx
0x138ee:	push	rbp
0x138ef:	push	rbx
0x138f0:	sub	rsp, 0x38
0x138f4:	test	rcx, rcx
0x138f7:	mov	ebx, dword ptr [rsp + 0x78]
0x138fb:	mov	r12, qword ptr [rsp + 0x70]
0x13900:	mov	dword ptr [rsp + 0x28], ebx
0x13904:	js	0x13c40


0x13810:	push	r12
0x13812:	push	rbp
0x13813:	xor	eax, eax
0x13815:	push	rbx
0x13816:	mov	rbp, qword ptr [rdi + 0x20]
0x1381a:	mov	rbx, rdi
0x1381d:	mov	r12, qword ptr [rdi]
0x13820:	lea	rdi, [rbp + 8]
0x13824:	mov	rcx, rbp
0x13827:	mov	qword ptr [rbp], 0
0x1382f:	mov	qword ptr [rbp + 0xf8], 0
0x1383a:	and	rdi, 0xfffffffffffffff8
0x1383e:	sub	rcx, rdi
0x13841:	add	ecx, 0x100
0x13847:	shr	ecx, 3
0x1384a:	rep stosq	qword ptr [rdi], rax


0x13800:	mov	rax, qword ptr [rip + 0x205ed1]
0x13807:	mov	qword ptr [rip + 0x205eca], rdi
0x1380e:	ret	


0x13790:	sub	rsp, 8
0x13794:	mov	rcx, qword ptr [rip + 0x205f3d]
0x1379b:	mov	r8, rdi
0x1379e:	mov	rdi, rdx
0x137a1:	mov	rax, rcx
0x137a4:	shr	rax, 0x19
0x137a8:	and	eax, 1
0x137ab:	shl	eax, 4
0x137ae:	mov	edx, eax
0x137b0:	movzx	eax, byte ptr [rdi + 0x38]
0x137b4:	and	eax, 0xffffffef
0x137b7:	or	eax, edx
0x137b9:	mov	rdx, rsi
0x137bc:	mov	rsi, r8
0x137bf:	or	eax, 0xffffff80
0x137c2:	mov	byte ptr [rdi + 0x38], al
0x137c5:	call	0x12690


0x12690:	push	r15
0x12692:	push	r14
0x12694:	push	r13
0x12696:	push	r12
0x12698:	push	rbp
0x12699:	push	rbx
0x1269a:	sub	rsp, 0x128
0x126a1:	mov	qword ptr [rdi + 0x18], rcx
0x126a5:	mov	qword ptr [rdi + 0x10], 0
0x126ad:	mov	rax, qword ptr fs:[0x28]
0x126b6:	mov	qword ptr [rsp + 0x118], rax
0x126be:	xor	eax, eax
0x126c0:	movzx	eax, byte ptr [rdi + 0x38]
0x126c4:	mov	qword ptr [rsp + 8], rdi
0x126c9:	mov	qword ptr [rsp + 0x10], rsi
0x126ce:	mov	qword ptr [rsp], rdx
0x126d2:	mov	qword ptr [rsp + 0x18], rcx
0x126d7:	mov	dword ptr [rsp + 0x4c], 0
0x126df:	mov	qword ptr [rdi + 0x30], 0
0x126e7:	mov	rbx, qword ptr [rdi]
0x126ea:	mov	byte ptr [rsp + 0x20], al
0x126ee:	and	eax, 0xffffff90
0x126f1:	cmp	qword ptr [rdi + 8], 0xe7
0x126f9:	mov	byte ptr [rdi + 0x38], al
0x126fc:	jbe	0x134f6


0x12510:	push	r15
0x12512:	push	r14
0x12514:	mov	r14, rcx
0x12517:	push	r13
0x12519:	push	r12
0x1251b:	mov	r13, r9
0x1251e:	push	rbp
0x1251f:	push	rbx
0x12520:	mov	rbp, rdx
0x12523:	mov	r12, rdi
0x12526:	sub	rsp, 0x58
0x1252a:	mov	rbx, qword ptr [rsi]
0x1252d:	mov	rax, qword ptr fs:[0x28]
0x12536:	mov	qword ptr [rsp + 0x48], rax
0x1253b:	xor	eax, eax
0x1253d:	mov	qword ptr [rsp + 0x28], rsi
0x12542:	mov	qword ptr [rsp + 0x10], r8
0x12547:	mov	rax, qword ptr [rbx + 0xa8]
0x1254e:	mov	qword ptr [rsp + 0x20], rax
0x12553:	call	0x12380


0x12380:	push	r15
0x12382:	push	r14
0x12384:	mov	r15, rcx
0x12387:	push	r13
0x12389:	push	r12
0x1238b:	mov	r13, rsi
0x1238e:	push	rbp
0x1238f:	push	rbx
0x12390:	mov	rbx, r9
0x12393:	mov	rbp, rdx
0x12396:	mov	r12, r8
0x12399:	sub	rsp, 0x48
0x1239d:	mov	rax, qword ptr fs:[0x28]
0x123a6:	mov	qword ptr [rsp + 0x38], rax
0x123ab:	xor	eax, eax
0x123ad:	mov	rax, qword ptr [rsi]
0x123b0:	mov	qword ptr [rsp], rdi
0x123b4:	mov	qword ptr [rsp + 0x10], rax
0x123b9:	call	0x10ea0


0x10ea0:	push	r15
0x10ea2:	push	r14
0x10ea4:	push	r13
0x10ea6:	push	r12
0x10ea8:	push	rbp
0x10ea9:	push	rbx
0x10eaa:	sub	rsp, 0x128
0x10eb1:	mov	qword ptr [rsp + 0x20], rcx
0x10eb6:	movzx	ecx, byte ptr [rdx + 8]
0x10eba:	mov	rax, qword ptr fs:[0x28]
0x10ec3:	mov	qword ptr [rsp + 0x118], rax
0x10ecb:	xor	eax, eax
0x10ecd:	mov	rax, qword ptr [rsi]
0x10ed0:	mov	qword ptr [rsp + 0x18], rdx
0x10ed5:	mov	qword ptr [rsp + 0x40], r9
0x10eda:	cmp	cl, 0x24
0x10edd:	mov	qword ptr [rsp + 0x10], rax
0x10ee2:	ja	0x10fa0


0x10de0:	push	r14
0x10de2:	mov	r14, rdi
0x10de5:	push	r13
0x10de7:	mov	r13, rsi
0x10dea:	push	r12
0x10dec:	mov	r12, -2
0x10df3:	push	rbp
0x10df4:	mov	rbp, rdx
0x10df7:	push	rbx
0x10df8:	mov	rbx, -1
0x10dff:	nop	
0x10e00:	mov	rdx, rbp
0x10e03:	mov	rsi, r14
0x10e06:	mov	rdi, r13
0x10e09:	call	0x106e0


0x106e0:	push	r15
0x106e2:	push	r14
0x106e4:	push	r13
0x106e6:	push	r12
0x106e8:	push	rbp
0x106e9:	push	rbx
0x106ea:	mov	rbp, rdi
0x106ed:	sub	rsp, 0x38
0x106f1:	mov	r14, qword ptr [rsi + 0x48]
0x106f5:	mov	rax, qword ptr fs:[0x28]
0x106fe:	mov	qword ptr [rsp + 0x28], rax
0x10703:	xor	eax, eax
0x10705:	cmp	qword ptr [rsi + 0x68], r14
0x10709:	jle	0x107a0


0x10480:	push	r14
0x10482:	push	r13
0x10484:	mov	r10, rsi
0x10487:	push	r12
0x10489:	push	rbp
0x1048a:	movsxd	r11, ecx
0x1048d:	push	rbx
0x1048e:	mov	rbp, rdx
0x10491:	mov	rbx, rdi
0x10494:	sub	rsp, 0x20
0x10498:	mov	r12, qword ptr [rsi + 0x48]
0x1049c:	mov	rax, qword ptr fs:[0x28]
0x104a5:	mov	qword ptr [rsp + 0x18], rax
0x104aa:	xor	eax, eax
0x104ac:	cmp	dword ptr [rsi + 0x90], 1
0x104b3:	je	0x10508


0xfc30:	push	r15
0xfc32:	push	r14
0xfc34:	mov	rax, rdi
0xfc37:	push	r13
0xfc39:	push	r12
0xfc3b:	mov	r13, rsi
0xfc3e:	push	rbp
0xfc3f:	push	rbx
0xfc40:	mov	rbp, rdx
0xfc43:	mov	rbx, rcx
0xfc46:	lea	rcx, [rdx*8]
0xfc4e:	sub	rsp, 0xa8
0xfc55:	mov	r12, qword ptr [rax + 0x98]
0xfc5c:	mov	rax, qword ptr [rax + 0xb8]
0xfc63:	mov	qword ptr [rsp + 8], rdi
0xfc68:	mov	qword ptr [rsp + 0x18], rcx
0xfc6d:	mov	rdi, qword ptr fs:[0x28]
0xfc76:	mov	qword ptr [rsp + 0x98], rdi
0xfc7e:	xor	edi, edi
0xfc80:	mov	rdx, qword ptr [rax + rdx*8]
0xfc84:	mov	dword ptr [rsp + 0x5c], 0
0xfc8c:	mov	rcx, qword ptr [rbx + 8]
0xfc90:	test	rdx, rdx
0xfc93:	je	0xfee8


0xe500:	push	r15
0xe502:	push	r14
0xe504:	push	r13
0xe506:	push	r12
0xe508:	mov	r13, r9
0xe50b:	push	rbp
0xe50c:	push	rbx
0xe50d:	mov	rbp, rcx
0xe510:	mov	ecx, 0x20
0xe515:	mov	r12, r8
0xe518:	sub	rsp, 0x238
0xe51f:	mov	rbx, qword ptr [rdi]
0xe522:	mov	rax, qword ptr [rsp + 0x278]
0xe52a:	mov	qword ptr [rsp + 0x48], rdi
0xe52f:	mov	qword ptr [rsp + 0x78], rsi
0xe534:	mov	rsi, rdi
0xe537:	lea	rdi, [rsp + 0x120]
0xe53f:	mov	qword ptr [rsp + 0x88], rdx
0xe547:	mov	qword ptr [rsp + 0x38], rbx
0xe54c:	mov	qword ptr [rsp + 0xb8], rax
0xe554:	mov	qword ptr [rsp], rdi
0xe558:	mov	rax, qword ptr fs:[0x28]
0xe561:	mov	qword ptr [rsp + 0x228], rax
0xe569:	xor	eax, eax
0xe56b:	rep stosq	qword ptr [rdi], rax


0xe1c0:	push	r15
0xe1c2:	push	r14
0xe1c4:	mov	r14, rdi
0xe1c7:	push	r13
0xe1c9:	push	r12
0xe1cb:	mov	r13, rsi
0xe1ce:	push	rbp
0xe1cf:	push	rbx
0xe1d0:	sub	rsp, 0x68
0xe1d4:	mov	r15, qword ptr [rsi + 0x18]
0xe1d8:	mov	rbx, qword ptr [rsi + 0x10]
0xe1dc:	mov	qword ptr [rsp], rdi
0xe1e0:	mov	edi, 8
0xe1e5:	mov	qword ptr [rsp + 0x40], 1
0xe1ee:	mov	rax, qword ptr fs:[0x28]
0xe1f7:	mov	qword ptr [rsp + 0x58], rax
0xe1fc:	xor	eax, eax
0xe1fe:	mov	qword ptr [rsp + 0x48], 1
0xe207:	call	0x1b00


0xdfd0:	push	r15
0xdfd2:	push	r14
0xdfd4:	push	r13
0xdfd6:	push	r12
0xdfd8:	mov	r13, rdi
0xdfdb:	push	rbp
0xdfdc:	push	rbx
0xdfdd:	mov	rbx, rsi
0xdfe0:	sub	rsp, 0x38
0xdfe4:	mov	r12, qword ptr [rsi + 0x48]
0xdfe8:	mov	r14, qword ptr [rsi + 0xb8]
0xdfef:	mov	rax, qword ptr fs:[0x28]
0xdff8:	mov	qword ptr [rsp + 0x28], rax
0xdffd:	xor	eax, eax
0xdfff:	mov	r15, qword ptr [rsi + 0x98]
0xe006:	lea	rbp, [r12*8]
0xe00e:	add	r14, rbp
0xe011:	cmp	qword ptr [rsi + 0xc0], r12
0xe018:	jge	0xe060


0xd6e0:	push	r15
0xd6e2:	push	r14
0xd6e4:	push	r13
0xd6e6:	push	r12
0xd6e8:	push	rbp
0xd6e9:	push	rbx
0xd6ea:	sub	rsp, 0xb8
0xd6f1:	mov	r15, qword ptr [rdi + 0x48]
0xd6f5:	mov	rax, qword ptr fs:[0x28]
0xd6fe:	mov	qword ptr [rsp + 0xa8], rax
0xd706:	xor	eax, eax
0xd708:	cmp	qword ptr [rsi], 0
0xd70c:	mov	rax, qword ptr [rdi + 0x98]
0xd713:	mov	qword ptr [rsp + 0x48], rsi
0xd718:	mov	qword ptr [rsp + 0x40], rdx
0xd71d:	mov	qword ptr [rsp + 0x38], rax
0xd722:	jle	0xda50


0xd540:	push	r15
0xd542:	push	r14
0xd544:	mov	r14, rcx
0xd547:	push	r13
0xd549:	push	r12
0xd54b:	mov	r13, rsi
0xd54e:	push	rbp
0xd54f:	push	rbx
0xd550:	lea	rsi, [rdx + 0x10]
0xd554:	mov	rbp, rdx
0xd557:	mov	r9, r8
0xd55a:	mov	r12, r8
0xd55d:	sub	rsp, 0x20
0xd561:	mov	rcx, qword ptr [rdx + 8]
0xd565:	mov	r8, r14
0xd568:	push	8
0xd56a:	mov	rdx, qword ptr [rdx]
0xd56d:	mov	rbx, rdi
0xd570:	call	0xc4f0


0xcc50:	push	rbp
0xcc51:	mov	rbp, rsp
0xcc54:	push	r15
0xcc56:	push	r14
0xcc58:	push	r13
0xcc5a:	push	r12
0xcc5c:	mov	r13, rcx
0xcc5f:	push	rbx
0xcc60:	mov	r12, rsi
0xcc63:	sub	rsp, 0xb8
0xcc6a:	mov	qword ptr [rbp - 0x98], rdx
0xcc71:	mov	qword ptr [rbp - 0x50], 0
0xcc79:	mov	rax, qword ptr fs:[0x28]
0xcc82:	mov	qword ptr [rbp - 0x38], rax
0xcc86:	xor	eax, eax
0xcc88:	mov	rax, qword ptr [rdi]
0xcc8b:	test	r8b, r8b
0xcc8e:	mov	qword ptr [rbp - 0x48], 2
0xcc96:	mov	qword ptr [rbp - 0x40], 0
0xcc9e:	mov	qword ptr [rbp - 0x90], rax
0xcca5:	je	0xd44d


0xc4f0:	push	r15
0xc4f2:	push	r14
0xc4f4:	mov	r15, rdi
0xc4f7:	push	r13
0xc4f9:	push	r12
0xc4fb:	push	rbp
0xc4fc:	push	rbx
0xc4fd:	mov	rbp, rcx
0xc500:	mov	rbx, rdx
0xc503:	sub	rsp, 0xd8
0xc50a:	mov	rcx, qword ptr [rdi + 0x98]
0xc511:	mov	r13, qword ptr [rsi + 8]
0xc515:	mov	rax, qword ptr fs:[0x28]
0xc51e:	mov	qword ptr [rsp + 0xc8], rax
0xc526:	xor	eax, eax
0xc528:	mov	rax, rdx
0xc52b:	mov	qword ptr [rsp + 0x60], rsi
0xc530:	mov	qword ptr [rsp + 0x78], r8
0xc535:	shl	rax, 4
0xc539:	add	rax, qword ptr [rcx]
0xc53c:	mov	qword ptr [rsp + 0x40], r9
0xc541:	mov	qword ptr [rsp + 0x30], rcx
0xc546:	mov	dword ptr [rsp + 0x88], 0
0xc551:	mov	rax, qword ptr [rax]
0xc554:	mov	qword ptr [rsp + 0x48], rax
0xc559:	movsxd	rax, dword ptr [rdi + 0xe0]
0xc560:	add	rax, r9
0xc563:	cmp	rax, r13
0xc566:	jge	0xcb86


0xc290:	shl	rdx, 4
0xc294:	push	r13
0xc296:	push	r12
0xc298:	lea	r9, [rdi + rdx]
0xc29c:	push	rbp
0xc29d:	push	rbx
0xc29e:	sub	rsp, 8
0xc2a2:	movzx	r11d, byte ptr [r9 + 8]
0xc2a7:	cmp	r11b, 7
0xc2ab:	je	0xc3c0


0xbd60:	push	r15
0xbd62:	push	r14
0xbd64:	mov	rax, rdi
0xbd67:	push	r13
0xbd69:	push	r12
0xbd6b:	push	rbp
0xbd6c:	push	rbx
0xbd6d:	xor	ebx, ebx
0xbd6f:	mov	rbp, rcx
0xbd72:	sub	rsp, 0x178
0xbd79:	mov	rax, qword ptr [rax]
0xbd7c:	mov	qword ptr [rsp + 0x30], rdi
0xbd81:	mov	qword ptr [rsp + 0x20], rsi
0xbd86:	mov	rdi, qword ptr fs:[0x28]
0xbd8f:	mov	qword ptr [rsp + 0x168], rdi
0xbd97:	xor	edi, edi
0xbd99:	cmp	dword ptr [rax + 0xb4], 1
0xbda0:	mov	qword ptr [rsp + 0x28], rdx
0xbda5:	mov	qword ptr [rsp + 8], rax
0xbdaa:	jne	0xbdc3


0xbaf0:	push	r15
0xbaf2:	push	r14
0xbaf4:	mov	r14, rdx
0xbaf7:	push	r13
0xbaf9:	push	r12
0xbafb:	mov	r13, rcx
0xbafe:	push	rbp
0xbaff:	push	rbx
0xbb00:	mov	rbp, rdi
0xbb03:	mov	edi, 0x20
0xbb08:	mov	r12d, r8d
0xbb0b:	sub	rsp, 0x58
0xbb0f:	mov	qword ptr [rsp], rsi
0xbb13:	mov	esi, 1
0xbb18:	mov	qword ptr [rsp + 8], r9
0xbb1d:	mov	rax, qword ptr fs:[0x28]
0xbb26:	mov	qword ptr [rsp + 0x48], rax
0xbb2b:	xor	eax, eax
0xbb2d:	mov	qword ptr [rsp + 0x18], 0
0xbb36:	call	0x1ab0


0xb2e0:	push	r14
0xb2e2:	push	r13
0xb2e4:	mov	r13, rcx
0xb2e7:	push	r12
0xb2e9:	push	rbp
0xb2ea:	mov	r12, r9
0xb2ed:	push	rbx
0xb2ee:	mov	rbp, rdi
0xb2f1:	mov	rbx, rsi
0xb2f4:	sub	rsp, 0x10
0xb2f8:	test	qword ptr [rsp + 0x40], 0x400000
0xb301:	je	0xb328


0xb290:	push	rbp
0xb291:	push	rbx
0xb292:	mov	rbp, rdi
0xb295:	mov	rdi, rsi
0xb298:	mov	rbx, rsi
0xb29b:	sub	rsp, 8
0xb29f:	call	0x19d0


0xb1f0:	push	r12
0xb1f2:	push	rbp
0xb1f3:	push	rbx
0xb1f4:	mov	rax, qword ptr [rdi]
0xb1f7:	sub	rax, 1
0xb1fb:	test	rax, rax
0xb1fe:	mov	qword ptr [rdi], rax
0xb201:	js	0xb265


0xb1a0:	push	r12
0xb1a2:	push	rbp
0xb1a3:	mov	rbp, rdi
0xb1a6:	push	rbx
0xb1a7:	cmp	qword ptr [rdi], 0
0xb1ab:	jle	0xb1e2


0xb110:	cmp	byte ptr [rsi + 0x30], 0x10
0xb114:	je	0xb178


0xa570:	push	r15
0xa572:	push	r14
0xa574:	mov	r15, rdi
0xa577:	push	r13
0xa579:	push	r12
0xa57b:	mov	edi, 0x3800
0xa580:	push	rbp
0xa581:	push	rbx
0xa582:	sub	rsp, 0x108
0xa589:	mov	rax, qword ptr fs:[0x28]
0xa592:	mov	qword ptr [rsp + 0xf8], rax
0xa59a:	xor	eax, eax
0xa59c:	mov	qword ptr [rsp + 8], rsi
0xa5a1:	call	0x1b00


0xa330:	push	r15
0xa332:	push	r14
0xa334:	mov	r14, rdx
0xa337:	push	r13
0xa339:	push	r12
0xa33b:	lea	rdx, [rsi + rsi*2]
0xa33f:	push	rbp
0xa340:	push	rbx
0xa341:	pxor	xmm0, xmm0
0xa345:	sub	rsp, 0x48
0xa349:	mov	rax, qword ptr fs:[0x28]
0xa352:	mov	qword ptr [rsp + 0x38], rax
0xa357:	xor	eax, eax
0xa359:	mov	rax, qword ptr [rdi + 0x38]
0xa35d:	mov	qword ptr [rsp + 0x30], 0
0xa366:	movaps	xmmword ptr [rsp + 0x20], xmm0
0xa36b:	mov	qword ptr [rsp + 0x10], rcx
0xa370:	lea	rbp, [rax + rdx*8]
0xa374:	mov	r10, qword ptr [rbp + 8]
0xa378:	test	r10, r10
0xa37b:	jle	0xa562


0x9b90:	push	r15
0x9b92:	push	r14
0x9b94:	mov	r15, rsi
0x9b97:	push	r13
0x9b99:	push	r12
0x9b9b:	mov	r10d, edx
0x9b9e:	push	rbp
0x9b9f:	push	rbx
0x9ba0:	mov	rbp, rsi
0x9ba3:	mov	rbx, rdi
0x9ba6:	sub	rsp, 0x48
0x9baa:	mov	rax, qword ptr fs:[0x28]
0x9bb3:	mov	qword ptr [rsp + 0x38], rax
0x9bb8:	xor	eax, eax
0x9bba:	mov	rax, qword ptr [rdi + 0x28]
0x9bbe:	sub	rbp, rax
0x9bc1:	cmp	rax, rsi
0x9bc4:	jle	0x9c26


0x9ac0:	push	r12
0x9ac2:	mov	r12, rdx
0x9ac5:	push	rbp
0x9ac6:	push	rbx
0x9ac7:	mov	edx, dword ptr [rdi + 0xa0]
0x9acd:	mov	rbx, rsi
0x9ad0:	mov	rsi, rcx
0x9ad3:	mov	rbp, rdi
0x9ad6:	call	0x98c0


0x99b0:	mov	rax, qword ptr [rdi + 8]
0x99b4:	movzx	ecx, byte ptr [rax + rdx]
0x99b8:	movzx	eax, byte ptr [rsi + 8]
0x99bc:	cmp	al, 3
0x99be:	je	0x9a78


0x98c0:	push	rbp
0x98c1:	push	rbx
0x98c2:	mov	rbp, rdi
0x98c5:	sub	rsp, 8
0x98c9:	test	rsi, rsi
0x98cc:	js	0x9920


0x9770:	push	r15
0x9772:	push	r14
0x9774:	push	r13
0x9776:	push	r12
0x9778:	push	rbp
0x9779:	push	rbx
0x977a:	sub	rsp, 0x28
0x977e:	cmp	qword ptr [rsi], 0
0x9782:	mov	r13, qword ptr [rdi + 0x98]
0x9789:	jle	0x9850


0x93d0:	push	r15
0x93d2:	push	r14
0x93d4:	push	r13
0x93d6:	push	r12
0x93d8:	mov	r12, rdx
0x93db:	push	rbp
0x93dc:	push	rbx
0x93dd:	mov	rbx, rdi
0x93e0:	mov	rbp, rsi
0x93e3:	xor	esi, esi
0x93e5:	sub	rsp, 0x78
0x93e9:	mov	rdi, qword ptr [rdi + 0xc8]
0x93f0:	mov	rax, qword ptr fs:[0x28]
0x93f9:	mov	qword ptr [rsp + 0x68], rax
0x93fe:	xor	eax, eax
0x9400:	mov	qword ptr [rsp + 0x20], rcx
0x9405:	mov	dword ptr [rsp + 0x2c], r8d
0x940a:	mov	rdx, rdi
0x940d:	cmp	rsi, rdx
0x9410:	jge	0x9467


0x92f0:	push	r15
0x92f2:	push	r14
0x92f4:	push	r13
0x92f6:	push	r12
0x92f8:	push	rbp
0x92f9:	push	rbx
0x92fa:	sub	rsp, 0x48
0x92fe:	mov	rax, qword ptr fs:[0x28]
0x9307:	mov	qword ptr [rsp + 0x38], rax
0x930c:	xor	eax, eax
0x930e:	test	rcx, rcx
0x9311:	jle	0x93a6


0x90f0:	push	r15
0x90f2:	push	r14
0x90f4:	push	r13
0x90f6:	push	r12
0x90f8:	push	rbp
0x90f9:	push	rbx
0x90fa:	sub	rsp, 8
0x90fe:	mov	rbp, qword ptr [rdx + 8]
0x9102:	test	rbp, rbp
0x9105:	je	0x92e0


0x8e30:	push	r15
0x8e32:	push	r14
0x8e34:	push	r13
0x8e36:	push	r12
0x8e38:	push	rbp
0x8e39:	push	rbx
0x8e3a:	sub	rsp, 0x28
0x8e3e:	mov	r10, qword ptr [rdx + 8]
0x8e42:	test	r10, r10
0x8e45:	je	0x90cf


0x8cd0:	test	rsi, rsi
0x8cd3:	push	r14
0x8cd5:	push	r13
0x8cd7:	push	r12
0x8cd9:	push	rbp
0x8cda:	push	rbx
0x8cdb:	je	0x8d85


0x8c40:	push	r12
0x8c42:	push	rbp
0x8c43:	push	rbx
0x8c44:	mov	rax, qword ptr [rsi + 8]
0x8c48:	mov	qword ptr [rdi + 8], rax
0x8c4c:	mov	r12, qword ptr [rsi + 8]
0x8c50:	test	r12, r12
0x8c53:	jle	0x8c90


0x8ba0:	push	rbp
0x8ba1:	push	rbx
0x8ba2:	mov	rbp, rdi
0x8ba5:	mov	rbx, rsi
0x8ba8:	sub	rsp, 0x18
0x8bac:	mov	rdx, qword ptr [rsi + 8]
0x8bb0:	mov	rax, qword ptr fs:[0x28]
0x8bb9:	mov	qword ptr [rsp + 8], rax
0x8bbe:	xor	eax, eax
0x8bc0:	mov	dword ptr [rsp + 4], 0
0x8bc8:	test	rdx, rdx
0x8bcb:	je	0x8bd3


0x8960:	push	r15
0x8962:	push	r14
0x8964:	push	r13
0x8966:	push	r12
0x8968:	mov	r13, rdx
0x896b:	push	rbp
0x896c:	push	rbx
0x896d:	sub	rsp, 0x48
0x8971:	mov	rbx, qword ptr [rsi]
0x8974:	mov	rbp, qword ptr [rdx + 8]
0x8978:	mov	rax, qword ptr fs:[0x28]
0x8981:	mov	qword ptr [rsp + 0x38], rax
0x8986:	xor	eax, eax
0x8988:	test	byte ptr [rsi + 0x38], 0x10
0x898c:	mov	qword ptr [rsp + 0x18], rdi
0x8991:	je	0x8b08


0x8880:	push	r14
0x8882:	push	r13
0x8884:	lea	r13, [rsi + 0x70]
0x8888:	push	r12
0x888a:	push	rbp
0x888b:	lea	r12, [rsi + 0x80]
0x8892:	push	rbx
0x8893:	mov	rbx, rdi
0x8896:	sub	rsp, 0x10
0x889a:	mov	rbp, qword ptr [rdi]
0x889d:	mov	rax, qword ptr fs:[0x28]
0x88a6:	mov	qword ptr [rsp + 8], rax
0x88ab:	xor	eax, eax
0x88ad:	mov	r14, rsp
0x88b0:	lea	r8, [rbx + 0x28]
0x88b4:	xor	ecx, ecx
0x88b6:	xor	edx, edx
0x88b8:	mov	rsi, r12
0x88bb:	mov	rdi, r13
0x88be:	call	0x87a0


0x87a0:	push	rbx
0x87a1:	mov	rbx, rdi
0x87a4:	sub	rsp, 0x20
0x87a8:	mov	eax, dword ptr [rsi]
0x87aa:	cmp	eax, 0xf
0x87ad:	je	0x8828


0x85f0:	mov	r9, qword ptr [rsi + 8]
0x85f4:	xor	eax, eax
0x85f6:	test	r9, r9
0x85f9:	je	0x86b8


0x8490:	push	r15
0x8492:	push	r14
0x8494:	mov	r14, rdi
0x8497:	push	r13
0x8499:	push	r12
0x849b:	mov	r15, rsi
0x849e:	push	rbp
0x849f:	push	rbx
0x84a0:	mov	rbp, rdx
0x84a3:	mov	ebx, ecx
0x84a5:	sub	rsp, 0x38
0x84a9:	mov	r12, qword ptr [rsi + 8]
0x84ad:	mov	rax, qword ptr fs:[0x28]
0x84b6:	mov	qword ptr [rsp + 0x28], rax
0x84bb:	xor	eax, eax
0x84bd:	mov	qword ptr [rsp + 0x18], 0
0x84c6:	lea	rdi, [r12*8]
0x84ce:	mov	qword ptr [rsp + 0x10], r12
0x84d3:	call	0x1b00


0x81e0:	push	r15
0x81e2:	push	r14
0x81e4:	mov	r15, rsi
0x81e7:	push	r13
0x81e9:	push	r12
0x81eb:	push	rbp
0x81ec:	push	rbx
0x81ed:	lea	rbx, [rdx + rdx*2]
0x81f1:	mov	rbp, rdx
0x81f4:	sub	rsp, 0x68
0x81f8:	mov	r12, qword ptr [rsi + 0x28]
0x81fc:	shl	rbx, 3
0x8200:	mov	rax, qword ptr fs:[0x28]
0x8209:	mov	qword ptr [rsp + 0x58], rax
0x820e:	xor	eax, eax
0x8210:	mov	qword ptr [rsp + 0x10], rdi
0x8215:	mov	dword ptr [rsp + 0x1c], ecx
0x8219:	add	r12, rbx
0x821c:	mov	rax, qword ptr [r12 + 8]
0x8221:	mov	qword ptr [rsp + 0x28], 0
0x822a:	lea	rdi, [rax + 1]
0x822e:	mov	qword ptr [rsp + 0x20], rdi
0x8233:	shl	rdi, 3
0x8237:	call	0x1b00


0x8000:	test	rsi, rsi
0x8003:	je	0x80f8


0x7d90:	push	r15
0x7d92:	push	r14
0x7d94:	push	r13
0x7d96:	push	r12
0x7d98:	push	rbp
0x7d99:	push	rbx
0x7d9a:	xor	ebx, ebx
0x7d9c:	sub	rsp, 0x48
0x7da0:	mov	rax, qword ptr [rdi + 0x98]
0x7da7:	mov	r15, qword ptr [rdi + 0xc8]
0x7dae:	mov	r12, qword ptr [rsp + 0x80]
0x7db6:	mov	qword ptr [rsp + 8], rax
0x7dbb:	mov	rbp, r15
0x7dbe:	cmp	rbx, rbp
0x7dc1:	jge	0x7e1b


0x7d30:	movzx	eax, byte ptr [rsi + 0x30]
0x7d34:	mov	rdx, qword ptr [rsi + 8]
0x7d38:	cmp	al, 0xb
0x7d3a:	je	0x7d80


0x7ca0:	movzx	eax, byte ptr [rsi + 0x30]
0x7ca4:	cmp	al, 4
0x7ca6:	je	0x7d00


0x7c60:	mov	rax, qword ptr [rdi]
0x7c63:	cmp	rax, rdx
0x7c66:	jle	0x7c92


0x7b60:	push	r15
0x7b62:	push	r14
0x7b64:	lea	r14, [rsi + 0x10]
0x7b68:	push	r13
0x7b6a:	push	r12
0x7b6c:	mov	r15, rcx
0x7b6f:	push	rbp
0x7b70:	push	rbx
0x7b71:	mov	r12, rdi
0x7b74:	mov	rbp, rsi
0x7b77:	mov	rbx, rdx
0x7b7a:	mov	r13d, r8d
0x7b7d:	sub	rsp, 8
0x7b81:	mov	rdi, qword ptr [rbp + 8]
0x7b85:	mov	rdx, rbx
0x7b88:	mov	rsi, r14
0x7b8b:	call	0x7ae0


0x7ae0:	xor	eax, eax
0x7ae2:	test	rdi, rdi
0x7ae5:	jle	0x7b25


0x7a80:	mov	rdx, qword ptr [rdi + 8]
0x7a84:	xor	eax, eax
0x7a86:	cmp	rdx, qword ptr [rsi + 8]
0x7a8a:	je	0x7a90


0x7a30:	mov	rcx, qword ptr [rdi + 0x30]
0x7a34:	lea	rax, [rsi + 1]
0x7a38:	cmp	rax, rcx
0x7a3b:	jge	0x7a78


0x7970:	push	r14
0x7972:	push	r13
0x7974:	mov	r14, rdi
0x7977:	push	r12
0x7979:	push	rbp
0x797a:	push	rbx
0x797b:	cmp	qword ptr [rdi + 0xe8], 0
0x7983:	jle	0x7a09


0x7810:	push	r14
0x7812:	push	r13
0x7814:	push	r12
0x7816:	mov	r12, rdi
0x7819:	push	rbp
0x781a:	push	rbx
0x781b:	mov	rdi, qword ptr [rdi]
0x781e:	test	rdi, rdi
0x7821:	je	0x784e


0x77d0:	push	rbx
0x77d1:	mov	rbx, rdi
0x77d4:	mov	rdi, qword ptr [rdi + 0x10]
0x77d8:	call	0x18d0


0x7770:	push	rbx
0x7771:	mov	rbx, rdi
0x7774:	mov	rdi, qword ptr [rdi + 0x30]
0x7778:	call	0x18d0


0x74f0:	push	r15
0x74f2:	push	r14
0x74f4:	mov	r9, rsi
0x74f7:	push	r13
0x74f9:	push	r12
0x74fb:	mov	r14, rdi
0x74fe:	push	rbp
0x74ff:	push	rbx
0x7500:	mov	r13, rdx
0x7503:	mov	ebp, r8d
0x7506:	sub	rsp, 0x18
0x750a:	mov	qword ptr [rsp + 8], rcx
0x750f:	mov	r8, qword ptr [r14]
0x7512:	mov	rax, r9
0x7515:	mov	rdi, qword ptr [r14 + 0x28]
0x7519:	shl	rax, 4
0x751d:	mov	r12, r13
0x7520:	add	rax, r8
0x7523:	cmp	byte ptr [rax + 8], 4
0x7527:	je	0x76e0


0x7450:	push	r13
0x7452:	push	r12
0x7454:	mov	r13, rsi
0x7457:	push	rbp
0x7458:	push	rbx
0x7459:	shl	r13, 4
0x745d:	mov	rbp, rsi
0x7460:	mov	r12d, edx
0x7463:	mov	rbx, rdi
0x7466:	sub	rsp, 8
0x746a:	mov	rax, qword ptr [rdi]
0x746d:	mov	rsi, qword ptr [rax + r13]
0x7471:	mov	rdx, qword ptr [rax + r13 + 8]
0x7476:	call	0x7280


0x7280:	push	r15
0x7282:	push	r14
0x7284:	mov	r14, rsi
0x7287:	push	r13
0x7289:	push	r12
0x728b:	push	rbp
0x728c:	push	rbx
0x728d:	mov	rbx, rdi
0x7290:	sub	rsp, 0x18
0x7294:	mov	rsi, qword ptr [rdi + 0x10]
0x7298:	mov	rbp, qword ptr [rdi + 8]
0x729c:	cmp	rsi, rbp
0x729f:	jae	0x7350


0x7260:	lea	rdi, [rsi + 0x28]
0x7264:	sub	rsp, 8
0x7268:	call	0x7230


0x7230:	mov	eax, dword ptr [rdi + 8]
0x7233:	and	eax, 0x400ff
0x7238:	cmp	eax, 6
0x723b:	je	0x7250


0x7200:	push	rbx
0x7201:	mov	rbx, rdi
0x7204:	mov	rdi, qword ptr [rdi]
0x7207:	call	0x18d0


0x7170:	push	r12
0x7172:	push	rbp
0x7173:	mov	rbp, rsi
0x7176:	push	rbx
0x7177:	mov	rax, qword ptr [rdi + 0x40]
0x717b:	mov	rbx, rdi
0x717e:	mov	r12, qword ptr [rdi + 0xc0]
0x7185:	cmp	rax, rsi
0x7188:	jg	0x71b0


0x7020:	push	rbp
0x7021:	push	rbx
0x7022:	movabs	rdx, 0xffffffffffffffe
0x702c:	sub	rsp, 8
0x7030:	mov	rax, qword ptr [rdi + 0x40]
0x7034:	cmp	rax, rdx
0x7037:	ja	0x7148


0x6a00:	push	r15
0x6a02:	push	r14
0x6a04:	mov	r14, rdi
0x6a07:	push	r13
0x6a09:	push	r12
0x6a0b:	push	rbp
0x6a0c:	push	rbx
0x6a0d:	sub	rsp, 0xa8
0x6a14:	mov	rbx, qword ptr [rdi + 0x58]
0x6a18:	mov	r15, qword ptr [rdi + 0x30]
0x6a1c:	mov	rax, qword ptr fs:[0x28]
0x6a25:	mov	qword ptr [rsp + 0x98], rax
0x6a2d:	xor	eax, eax
0x6a2f:	cmp	qword ptr [rdi + 0x40], rbx
0x6a33:	cmovle	rbx, qword ptr [rdi + 0x40]
0x6a38:	cmp	byte ptr [rdi + 0x8a], 0
0x6a3f:	jne	0x6a4c


0x6830:	push	r15
0x6832:	push	r14
0x6834:	push	r13
0x6836:	push	r12
0x6838:	push	rbp
0x6839:	push	rbx
0x683a:	mov	rbx, rdi
0x683d:	sub	rsp, 0x68
0x6841:	mov	r12, qword ptr [rdi + 0x58]
0x6845:	mov	rbp, qword ptr [rdi + 0x30]
0x6849:	mov	rax, qword ptr fs:[0x28]
0x6852:	mov	qword ptr [rsp + 0x58], rax
0x6857:	xor	eax, eax
0x6859:	cmp	qword ptr [rdi + 0x40], r12
0x685d:	cmovle	r12, qword ptr [rdi + 0x40]
0x6862:	cmp	r12, rbp
0x6865:	jle	0x68f4


0x67c0:	push	r12
0x67c2:	mov	r12, qword ptr [rdi + 0x58]
0x67c6:	cmp	qword ptr [rdi + 0x40], r12
0x67ca:	push	rbp
0x67cb:	mov	rbp, rdi
0x67ce:	cmovle	r12, qword ptr [rdi + 0x40]
0x67d3:	push	rbx
0x67d4:	mov	rbx, qword ptr [rdi + 0x30]
0x67d8:	cmp	r12, rbx
0x67db:	jle	0x6815


0x66d0:	push	r14
0x66d2:	push	r13
0x66d4:	mov	r14, rdi
0x66d7:	push	r12
0x66d9:	push	rbp
0x66da:	mov	r12, rdx
0x66dd:	push	rbx
0x66de:	mov	rbx, qword ptr [rsi + 0x10]
0x66e2:	mov	rbp, rsi
0x66e5:	mov	qword ptr [rsi], rdx
0x66e8:	mov	qword ptr [rsi + 0x28], 0
0x66f0:	lea	r13, [rsi + 0x20]
0x66f4:	lea	rdi, [rbx*8]
0x66fc:	mov	qword ptr [rsi + 0x20], rbx
0x6700:	call	0x1b00


0x65a0:	push	rbp
0x65a1:	push	rbx
0x65a2:	mov	rbp, rsi
0x65a5:	mov	rbx, rdi
0x65a8:	sub	rsp, 8
0x65ac:	mov	rdx, qword ptr [rdi]
0x65af:	test	rdx, rdx
0x65b2:	je	0x65d8


0x6530:	push	rbp
0x6531:	push	rbx
0x6532:	mov	rbp, rsi
0x6535:	mov	rbx, rdi
0x6538:	sub	rsp, 8
0x653c:	mov	rsi, qword ptr [rdi + 8]
0x6540:	cmp	qword ptr [rdi], rsi
0x6543:	mov	rax, qword ptr [rdi + 0x10]
0x6547:	je	0x6568


0x6490:	push	rbp
0x6491:	push	rbx
0x6492:	mov	rbp, rsi
0x6495:	mov	rbx, rdi
0x6498:	sub	rsp, 8
0x649c:	cmp	dword ptr [rdi + 0x90], 1
0x64a3:	jle	0x64ed


0x6430:	push	r12
0x6432:	mov	r12, rsi
0x6435:	push	rbp
0x6436:	mov	rbp, rdx
0x6439:	push	rbx
0x643a:	mov	rbx, rdi
0x643d:	jmp	0x6443


0x63c0:	push	r12
0x63c2:	mov	r12, rsi
0x63c5:	push	rbp
0x63c6:	mov	rbp, rdx
0x63c9:	push	rbx
0x63ca:	mov	rbx, rdi
0x63cd:	jmp	0x63d3


0x6350:	mov	rax, qword ptr [rdi + 0xd8]
0x6357:	lea	rsi, [rsi + rsi*4]
0x635b:	lea	rax, [rax + rsi*8]
0x635f:	mov	r10, qword ptr [rax + 0x10]
0x6363:	cmp	r10, r8
0x6366:	jg	0x63b0


0x6120:	push	r15
0x6122:	push	r14
0x6124:	mov	r9, rdx
0x6127:	push	r13
0x6129:	push	r12
0x612b:	lea	rdx, [rcx + rcx*2]
0x612f:	push	rbp
0x6130:	push	rbx
0x6131:	mov	r15d, esi
0x6134:	sub	rsp, 0x48
0x6138:	mov	r14, qword ptr [rdi + 0x98]
0x613f:	mov	qword ptr [rsp], rdi
0x6143:	mov	rax, qword ptr [r14 + 0x30]
0x6147:	lea	r12, [rax + rdx*8]
0x614b:	cmp	qword ptr [r12 + 8], 0
0x6151:	jle	0x62e5


0x6100:	cmp	byte ptr [rsi + 0x30], 0x11
0x6104:	je	0x6110


0x5fd0:	mov	rax, qword ptr [rsi + 0x48]
0x5fd4:	cmp	qword ptr [rsi + 0x68], rax
0x5fd8:	jle	0x6030


0x5f40:	push	r13
0x5f42:	push	r12
0x5f44:	mov	r13, rsi
0x5f47:	push	rbp
0x5f48:	push	rbx
0x5f49:	mov	rbx, rdi
0x5f4c:	mov	r12, rdx
0x5f4f:	sub	rsp, 0x18
0x5f53:	mov	rax, qword ptr fs:[0x28]
0x5f5c:	mov	qword ptr [rsp + 8], rax
0x5f61:	xor	eax, eax
0x5f63:	lea	rax, [rsp + 4]
0x5f68:	test	rdi, rdi
0x5f6b:	cmove	rbx, rax
0x5f6f:	mov	rdi, rbx
0x5f72:	call	0x1a00


0x5ee0:	mov	rax, qword ptr [rdi + 8]
0x5ee4:	cmp	qword ptr [rdi + 0x10], rax
0x5ee8:	je	0x5ef0


0x5ea0:	test	rdi, rdi
0x5ea3:	push	rbx
0x5ea4:	mov	rbx, rdi
0x5ea7:	je	0x5eba


0x5e20:	push	r12
0x5e22:	push	rbp
0x5e23:	push	rbx
0x5e24:	mov	rbx, rdi
0x5e27:	call	0x1ae0


0x5760:	push	r15
0x5762:	push	r14
0x5764:	push	r13
0x5766:	push	r12
0x5768:	push	rbp
0x5769:	push	rbx
0x576a:	sub	rsp, 0x28
0x576e:	mov	rax, qword ptr fs:[0x28]
0x5777:	mov	qword ptr [rsp + 0x18], rax
0x577c:	xor	eax, eax
0x577e:	cmp	edx, 0x24
0x5781:	ja	0x5def


0x5730:	sub	rsp, 0x10
0x5734:	push	r9
0x5736:	mov	r9, r8
0x5739:	mov	r8, rcx
0x573c:	mov	rcx, rdx
0x573f:	mov	rdx, rsi
0x5742:	mov	esi, 0xa
0x5747:	call	0x5610


0x5610:	push	r15
0x5612:	push	r14
0x5614:	mov	r15, rcx
0x5617:	push	r13
0x5619:	push	r12
0x561b:	mov	r14, rdx
0x561e:	push	rbp
0x561f:	push	rbx
0x5620:	mov	edx, esi
0x5622:	xor	esi, esi
0x5624:	mov	r12, rdi
0x5627:	mov	r13, r9
0x562a:	sub	rsp, 0x18
0x562e:	mov	rcx, rsp
0x5631:	mov	ebx, dword ptr [rsp + 0x50]
0x5635:	mov	rax, qword ptr fs:[0x28]
0x563e:	mov	qword ptr [rsp + 8], rax
0x5643:	xor	eax, eax
0x5645:	call	0x5760


0x55d0:	lea	rsi, [rip + 0x10118]
0x55d7:	sub	rsp, 8
0x55db:	mov	edx, 5
0x55e0:	xor	edi, edi
0x55e2:	call	0x19b0


0x55b0:	push	rbx
0x55b1:	mov	rbx, rdi
0x55b4:	call	0x19d0


0x5580:	push	rbp
0x5581:	push	rbx
0x5582:	mov	rbp, rdi
0x5585:	mov	rdi, rsi
0x5588:	mov	rbx, rsi
0x558b:	sub	rsp, 8
0x558f:	call	0x5380


0x5550:	mov	rax, rdi
0x5553:	sub	rsp, 8
0x5557:	mul	rsi
0x555a:	seto	dl
0x555d:	test	rax, rax
0x5560:	js	0x5579


0x5530:	push	rbx
0x5531:	mov	rbx, rdi
0x5534:	call	0x5380


0x54e0:	test	rdi, rdi
0x54e3:	mov	rax, qword ptr [rsi]
0x54e6:	je	0x5510


0x5450:	test	rdi, rdi
0x5453:	mov	r9, rdx
0x5456:	mov	rcx, qword ptr [rsi]
0x5459:	je	0x5490


0x5420:	mov	rax, rsi
0x5423:	mul	rdx
0x5426:	mov	rsi, rax
0x5429:	seto	al
0x542c:	test	rsi, rsi
0x542f:	js	0x543b


0x53e0:	test	rsi, rsi
0x53e3:	push	rbx
0x53e4:	mov	rbx, rsi
0x53e7:	jne	0x53ee


0x53d0:	jmp	0x5380


0x53a0:	mov	rax, rdi
0x53a3:	mul	rsi
0x53a6:	mov	rdi, rax
0x53a9:	seto	al
0x53ac:	test	rdi, rdi
0x53af:	js	0x53bb


0x5380:	push	rbx
0x5381:	mov	rbx, rdi
0x5384:	call	0x1b00


0x5300:	push	rbx
0x5301:	lea	rsi, [rip + 0x100da]
0x5308:	mov	edx, 5
0x530d:	xor	edi, edi
0x530f:	call	0x19b0


0x5220:	push	rbp
0x5221:	push	rbx
0x5222:	mov	r10d, 0x20
0x5228:	xor	r11d, r11d
0x522b:	sub	rsp, 0xb8
0x5232:	mov	rax, qword ptr fs:[0x28]
0x523b:	mov	qword ptr [rsp + 0x78], rax
0x5240:	xor	eax, eax
0x5242:	lea	rax, [rsp + 0xd0]
0x524a:	mov	qword ptr [rsp + 0xa0], r8
0x5252:	lea	rbx, [rsp + 0xd0]
0x525a:	lea	r8, [rsp + 0x20]
0x525f:	mov	qword ptr [rsp + 0xa8], r9
0x5267:	mov	dword ptr [rsp + 8], 0x20
0x526f:	mov	qword ptr [rsp + 0x10], rax
0x5274:	lea	rax, [rsp + 0x80]
0x527c:	xor	r9d, r9d
0x527f:	mov	qword ptr [rsp + 0x18], rax
0x5284:	mov	rbp, rax
0x5287:	nop	word ptr [rax + rax]
0x5290:	cmp	r10d, 0x2f
0x5294:	ja	0x52ec


0x51a0:	sub	rsp, 0x68
0x51a4:	mov	r10, r8
0x51a7:	xor	r9d, r9d
0x51aa:	mov	rax, qword ptr fs:[0x28]
0x51b3:	mov	qword ptr [rsp + 0x58], rax
0x51b8:	xor	eax, eax
0x51ba:	mov	r8, rsp
0x51bd:	nop	dword ptr [rax]
0x51c0:	mov	eax, dword ptr [r10]
0x51c3:	cmp	eax, 0x2f
0x51c6:	ja	0x520a


0x5180:	xor	r9d, r9d
0x5183:	cmp	qword ptr [r8], 0
0x5187:	je	0x519b


0x4d60:	push	r15
0x4d62:	push	r14
0x4d64:	push	r13
0x4d66:	push	r12
0x4d68:	mov	r12, r9
0x4d6b:	push	rbp
0x4d6c:	push	rbx
0x4d6d:	mov	rbp, rdi
0x4d70:	mov	rbx, r8
0x4d73:	sub	rsp, 0x28
0x4d77:	test	rsi, rsi
0x4d7a:	je	0x4e98


0x4d40:	lea	rcx, [rip + 0x214339]
0x4d47:	mov	rsi, rdi
0x4d4a:	mov	rdx, -1
0x4d51:	xor	edi, edi
0x4d53:	jmp	0x4400


0x4d20:	lea	rcx, [rip + 0x214359]
0x4d27:	mov	rdx, -1
0x4d2e:	jmp	0x4400


0x4d00:	lea	rcx, [rip + 0x214379]
0x4d07:	mov	rdx, rsi
0x4d0a:	mov	rsi, rdi
0x4d0d:	xor	edi, edi
0x4d0f:	jmp	0x4400


0x4cf0:	lea	rcx, [rip + 0x214389]
0x4cf7:	jmp	0x4400


0x4cd0:	mov	r8, rcx
0x4cd3:	mov	rcx, rdx
0x4cd6:	mov	rdx, rsi
0x4cd9:	mov	rsi, rdi
0x4cdc:	xor	edi, edi
0x4cde:	jmp	0x4c00


0x4cb0:	mov	rcx, rdx
0x4cb3:	mov	r8, -1
0x4cba:	mov	rdx, rsi
0x4cbd:	mov	rsi, rdi
0x4cc0:	xor	edi, edi
0x4cc2:	jmp	0x4c00


0x4ca0:	mov	r8, -1
0x4ca7:	jmp	0x4c00


0x4c00:	sub	rsp, 0x48
0x4c04:	mov	r9, rcx
0x4c07:	mov	rcx, qword ptr [rip + 0x214ac2]
0x4c0e:	movdqa	xmm0, xmmword ptr [rip + 0x214a8a]
0x4c16:	mov	rax, qword ptr fs:[0x28]
0x4c1f:	mov	qword ptr [rsp + 0x38], rax
0x4c24:	xor	eax, eax
0x4c26:	movaps	xmmword ptr [rsp], xmm0
0x4c2a:	test	rsi, rsi
0x4c2d:	mov	qword ptr [rsp + 0x30], rcx
0x4c32:	mov	dword ptr [rsp], 0xa
0x4c39:	movdqa	xmm0, xmmword ptr [rip + 0x214a6f]
0x4c41:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x4c46:	movdqa	xmm0, xmmword ptr [rip + 0x214a72]
0x4c4e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x4c53:	je	0x4c87


0x4b70:	sub	rsp, 0x48
0x4b74:	mov	rax, rdx
0x4b77:	mov	rdx, qword ptr fs:[0x28]
0x4b80:	mov	qword ptr [rsp + 0x38], rdx
0x4b85:	xor	edx, edx
0x4b87:	cmp	esi, 0xa
0x4b8a:	je	0x4bf4


0x4b60:	mov	edx, 0x3a
0x4b65:	jmp	0x4a90


0x4b40:	mov	edx, 0x3a
0x4b45:	mov	rsi, -1
0x4b4c:	jmp	0x4a90


0x4b30:	movsx	edx, sil
0x4b34:	mov	rsi, -1
0x4b3b:	jmp	0x4a90


0x4a90:	sub	rsp, 0x48
0x4a94:	mov	ecx, edx
0x4a96:	mov	rax, qword ptr fs:[0x28]
0x4a9f:	mov	qword ptr [rsp + 0x38], rax
0x4aa4:	xor	eax, eax
0x4aa6:	mov	rax, qword ptr [rip + 0x214c23]
0x4aad:	mov	r8, rsp
0x4ab0:	and	ecx, 0x1f
0x4ab3:	movdqa	xmm0, xmmword ptr [rip + 0x214be5]
0x4abb:	mov	qword ptr [rsp + 0x30], rax
0x4ac0:	mov	eax, edx
0x4ac2:	movaps	xmmword ptr [rsp], xmm0
0x4ac6:	shr	al, 5
0x4ac9:	movzx	eax, al
0x4acc:	lea	r9, [r8 + rax*4 + 8]
0x4ad1:	movdqa	xmm0, xmmword ptr [rip + 0x214bd7]
0x4ad9:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x4ade:	movdqa	xmm0, xmmword ptr [rip + 0x214bda]
0x4ae6:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x4aeb:	mov	edx, dword ptr [r9]
0x4aee:	mov	eax, edx
0x4af0:	shr	eax, cl
0x4af2:	not	eax
0x4af4:	and	eax, 1
0x4af7:	shl	eax, cl
0x4af9:	mov	rcx, r8
0x4afc:	xor	eax, edx
0x4afe:	mov	rdx, rsi
0x4b01:	mov	rsi, rdi
0x4b04:	mov	dword ptr [r9], eax
0x4b07:	xor	edi, edi
0x4b09:	call	0x4400


0x4a80:	mov	rcx, rdx
0x4a83:	mov	rdx, rsi
0x4a86:	mov	esi, edi
0x4a88:	xor	edi, edi
0x4a8a:	jmp	0x49e0


0x4a70:	mov	rdx, rsi
0x4a73:	mov	esi, edi
0x4a75:	xor	edi, edi
0x4a77:	jmp	0x4950


0x49e0:	sub	rsp, 0x48
0x49e4:	mov	rax, rdx
0x49e7:	mov	rdx, rcx
0x49ea:	mov	rcx, qword ptr fs:[0x28]
0x49f3:	mov	qword ptr [rsp + 0x38], rcx
0x49f8:	xor	ecx, ecx
0x49fa:	cmp	esi, 0xa
0x49fd:	je	0x4a60


0x4950:	sub	rsp, 0x48
0x4954:	mov	rax, rdx
0x4957:	mov	rdx, qword ptr fs:[0x28]
0x4960:	mov	qword ptr [rsp + 0x38], rdx
0x4965:	xor	edx, edx
0x4967:	cmp	esi, 0xa
0x496a:	je	0x49d4


0x4930:	lea	rcx, [rip + 0x214d69]
0x4937:	mov	rdx, rsi
0x493a:	mov	rsi, rdi
0x493d:	xor	edi, edi
0x493f:	jmp	0x4400


0x4910:	lea	rcx, [rip + 0x214d89]
0x4917:	mov	rsi, rdi
0x491a:	mov	rdx, -1
0x4921:	xor	edi, edi
0x4923:	jmp	0x4400


0x4900:	lea	rcx, [rip + 0x214d99]
0x4907:	jmp	0x4400


0x48e0:	lea	rcx, [rip + 0x214db9]
0x48e7:	mov	rdx, -1
0x48ee:	jmp	0x4400


0x4840:	mov	eax, dword ptr [rip + 0x214872]
0x4846:	push	r12
0x4848:	mov	r12, qword ptr [rip + 0x214871]
0x484f:	push	rbp
0x4850:	push	rbx
0x4851:	cmp	eax, 1
0x4854:	jle	0x4881


0x4830:	mov	rcx, rdx
0x4833:	xor	edx, edx
0x4835:	jmp	0x4740


0x4740:	push	r15
0x4742:	push	r14
0x4744:	lea	rax, [rip + 0x214f55]
0x474b:	push	r13
0x474d:	push	r12
0x474f:	mov	r12, rdx
0x4752:	push	rbp
0x4753:	push	rbx
0x4754:	mov	rbx, rcx
0x4757:	mov	r14, rdi
0x475a:	mov	r15, rsi
0x475d:	sub	rsp, 0x38
0x4761:	test	rcx, rcx
0x4764:	cmove	rbx, rax
0x4768:	xor	ebp, ebp
0x476a:	call	0x18f0


0x46c0:	push	r15
0x46c2:	push	r14
0x46c4:	lea	rax, [rip + 0x214fd5]
0x46cb:	push	r13
0x46cd:	push	r12
0x46cf:	mov	r13, rdi
0x46d2:	push	rbp
0x46d3:	push	rbx
0x46d4:	mov	rbx, r8
0x46d7:	mov	r14, rsi
0x46da:	mov	r15, rdx
0x46dd:	sub	rsp, 0x18
0x46e1:	test	r8, r8
0x46e4:	cmove	rbx, rax
0x46e8:	mov	qword ptr [rsp + 8], rcx
0x46ed:	call	0x18f0


0x4690:	lea	rax, [rip + 0x215009]
0x4697:	test	rdi, rdi
0x469a:	cmove	rdi, rax
0x469e:	test	rsi, rsi
0x46a1:	mov	dword ptr [rdi], 0xa
0x46a7:	je	0x46b7


0x4670:	lea	rax, [rip + 0x215029]
0x4677:	test	rdi, rdi
0x467a:	cmove	rdi, rax
0x467e:	mov	eax, dword ptr [rdi + 4]
0x4681:	mov	dword ptr [rdi + 4], esi
0x4684:	ret	


0x4630:	lea	rax, [rip + 0x215069]
0x4637:	test	rdi, rdi
0x463a:	mov	ecx, esi
0x463c:	cmove	rdi, rax
0x4640:	mov	eax, esi
0x4642:	and	ecx, 0x1f
0x4645:	shr	al, 5
0x4648:	movzx	eax, al
0x464b:	lea	rdi, [rdi + rax*4 + 8]
0x4650:	mov	esi, dword ptr [rdi]
0x4652:	mov	eax, esi
0x4654:	shr	eax, cl
0x4656:	xor	edx, eax
0x4658:	and	eax, 1
0x465b:	and	edx, 1
0x465e:	shl	edx, cl
0x4660:	xor	edx, esi
0x4662:	mov	dword ptr [rdi], edx
0x4664:	ret	


0x4610:	lea	rax, [rip + 0x215089]
0x4617:	test	rdi, rdi
0x461a:	cmove	rdi, rax
0x461e:	mov	dword ptr [rdi], esi
0x4620:	ret	


0x45f0:	lea	rax, [rip + 0x2150a9]
0x45f7:	test	rdi, rdi
0x45fa:	cmove	rdi, rax
0x45fe:	mov	eax, dword ptr [rdi]
0x4600:	ret	


0x45b0:	push	r12
0x45b2:	push	rbp
0x45b3:	push	rbx
0x45b4:	mov	rbx, rdi
0x45b7:	call	0x18f0


0x4400:	push	r15
0x4402:	push	r14
0x4404:	movsxd	r15, edi
0x4407:	push	r13
0x4409:	push	r12
0x440b:	mov	r14, rdx
0x440e:	push	rbp
0x440f:	push	rbx
0x4410:	mov	rbp, rcx
0x4413:	sub	rsp, 0x28
0x4417:	mov	qword ptr [rsp + 8], rsi
0x441c:	call	0x18f0


0x31c0:	push	r15
0x31c2:	push	r14
0x31c4:	mov	r15d, r8d
0x31c7:	push	r13
0x31c9:	push	r12
0x31cb:	mov	r14, rdi
0x31ce:	push	rbp
0x31cf:	push	rbx
0x31d0:	mov	ebx, r9d
0x31d3:	mov	r13, rsi
0x31d6:	mov	rbp, rcx
0x31d9:	and	ebx, 2
0x31dc:	sub	rsp, 0xb8
0x31e3:	mov	rax, qword ptr [rsp + 0xf0]
0x31eb:	mov	qword ptr [rsp + 0x10], rdx
0x31f0:	mov	dword ptr [rsp + 8], r8d
0x31f5:	mov	dword ptr [rsp + 0x78], r9d
0x31fa:	mov	qword ptr [rsp + 0x20], rax
0x31ff:	mov	rax, qword ptr [rsp + 0xf8]
0x3207:	mov	qword ptr [rsp + 0x68], rax
0x320c:	mov	rax, qword ptr [rsp + 0x100]
0x3214:	mov	qword ptr [rsp + 0x60], rax
0x3219:	mov	rax, qword ptr fs:[0x28]
0x3222:	mov	qword ptr [rsp + 0xa8], rax
0x322a:	xor	eax, eax
0x322c:	call	0x19c0


0x30d0:	push	rbp
0x30d1:	push	rbx
0x30d2:	mov	rbp, rdi
0x30d5:	mov	ebx, esi
0x30d7:	sub	rsp, 8
0x30db:	call	0x142c0


0x3030:	test	rdi, rdi
0x3033:	push	rbx
0x3034:	je	0x30ad


0x3020:	mov	rdi, qword ptr [rdi + 0x10]
0x3024:	jmp	0x18d0


0x3010:	mov	edx, 0xa
0x3015:	jmp	0x2f00


0x2f00:	push	r15
0x2f02:	push	r14
0x2f04:	push	r13
0x2f06:	push	r12
0x2f08:	push	rbp
0x2f09:	push	rbx
0x2f0a:	sub	rsp, 0x18
0x2f0e:	mov	r13, qword ptr [rdi + 0x10]
0x2f12:	mov	r8, qword ptr [rdi]
0x2f15:	add	r8, r13
0x2f18:	test	byte ptr [rsi], 0x10
0x2f1b:	jne	0x2ff0


0x2ef0:	pxor	xmm0, xmm0
0x2ef4:	mov	qword ptr [rdi + 0x10], 0
0x2efc:	movups	xmmword ptr [rdi], xmm0
0x2eff:	ret	


0x2ec0:	test	rdi, rdi
0x2ec3:	je	0x2ee0


0x2eb0:	jmp	0x1a70


0x2e00:	push	rbp
0x2e01:	push	rbx
0x2e02:	sub	rsp, 8
0x2e06:	mov	rdi, qword ptr [rip + 0x2162db]
0x2e0d:	call	0x141e0


0x2df0:	mov	byte ptr [rip + 0x216791], dil
0x2df7:	ret	


0x2de0:	mov	qword ptr [rip + 0x2167a9], rdi
0x2de7:	ret	


0x2970:	push	r13
0x2972:	push	r12
0x2974:	mov	edx, 5
0x2979:	push	rbp
0x297a:	push	rbx
0x297b:	mov	ebp, edi
0x297d:	sub	rsp, 0x88
0x2984:	mov	rbx, qword ptr [rip + 0x216c0d]
0x298b:	mov	rax, qword ptr fs:[0x28]
0x2994:	mov	qword ptr [rsp + 0x78], rax
0x2999:	xor	eax, eax
0x299b:	test	edi, edi
0x299d:	je	0x29cd


0x2560:	push	r15
0x2562:	push	r14
0x2564:	mov	rsi, rdi
0x2567:	push	r13
0x2569:	push	r12
0x256b:	mov	ecx, 2
0x2570:	push	rbp
0x2571:	push	rbx
0x2572:	sub	rsp, 0x18
0x2576:	mov	qword ptr [rsp + 8], rdi
0x257b:	lea	rdi, [rip + 0x12930]
0x2582:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x24e0:	sub	rsp, 8
0x24e4:	mov	edx, dword ptr [rip + 0x216b26]
0x24ea:	mov	r8, qword ptr [rip + 0x216b57]
0x24f1:	mov	rcx, qword ptr [rip + 0x216c58]
0x24f8:	mov	rsi, qword ptr [rip + 0x216b39]
0x24ff:	xor	eax, eax
0x2501:	mov	edi, 1
0x2506:	call	0x1b80


0x2420:	mov	rcx, qword ptr [rip + 0x216cd9]
0x2427:	movzx	eax, byte ptr [rcx]
0x242a:	cmp	al, 0x6e
0x242c:	je	0x24b4


0x2410:	push	rbp
0x2411:	mov	rbp, rsp
0x2414:	pop	rbp
0x2415:	jmp	0x2380


0x23d0:	cmp	byte ptr [rip + 0x216d51], 0
0x23d7:	jne	0x2408


0x2380:	lea	rdi, [rip + 0x216d59]
0x2387:	lea	rsi, [rip + 0x216d52]
0x238e:	push	rbp
0x238f:	sub	rsi, rdi
0x2392:	mov	rbp, rsp
0x2395:	sar	rsi, 3
0x2399:	mov	rax, rsi
0x239c:	shr	rax, 0x3f
0x23a0:	add	rsi, rax
0x23a3:	sar	rsi, 1
0x23a6:	je	0x23c0


0x2340:	lea	rdi, [rip + 0x216d99]
0x2347:	push	rbp
0x2348:	lea	rax, [rip + 0x216d91]
0x234f:	cmp	rax, rdi
0x2352:	mov	rbp, rsp
0x2355:	je	0x2370


0x2310:	xor	ebp, ebp
0x2312:	mov	r9, rdx
0x2315:	pop	rsi
0x2316:	mov	rdx, rsp
0x2319:	and	rsp, 0xfffffffffffffff0
0x231d:	push	rax
0x231e:	push	rsp
0x231f:	lea	r8, [rip + 0x1204a]
0x2326:	lea	rcx, [rip + 0x11fd3]
0x232d:	lea	rdi, [rip - 0x6a4]
0x2334:	call	qword ptr [rip + 0x216c96]


0x1c90:	push	r15
0x1c92:	push	r14
0x1c94:	lea	r15, [rip + 0x131b5]
0x1c9b:	push	r13
0x1c9d:	push	r12
0x1c9f:	lea	r14, [rip + 0x1280c]
0x1ca6:	push	rbp
0x1ca7:	push	rbx
0x1ca8:	mov	ebp, edi
0x1caa:	mov	rbx, rsi
0x1cad:	lea	r12, [rip + 0x216d0c]
0x1cb4:	mov	r13d, 1
0x1cba:	sub	rsp, 0x18
0x1cbe:	mov	rdi, qword ptr [rsi]
0x1cc1:	call	0x3030


0x1888:	sub	rsp, 8
0x188c:	mov	rax, qword ptr [rip + 0x217745]
0x1893:	test	rax, rax
0x1896:	je	0x189a


0x1c00:	jmp	qword ptr [rip + 0x217382]


0x1b30:	jmp	qword ptr [rip + 0x2173ea]


0x1b70:	jmp	qword ptr [rip + 0x2173ca]


0x1930:	jmp	qword ptr [rip + 0x2174ea]


0x14195:	and	byte ptr [rdi + 0x38], 0xf9
0x14199:	mov	qword ptr [rsi], 0
0x141a0:	mov	qword ptr [rsi + 0x10], 0
0x141a8:	mov	qword ptr [rsi + 8], 0
0x141b0:	ret	


0x141b8:	movzx	eax, byte ptr [rdi + 0x38]
0x141bc:	and	eax, 0xfffffff9
0x141bf:	or	eax, 2
0x141c2:	mov	byte ptr [rdi + 0x38], al
0x141c5:	mov	qword ptr [rsi], rdx
0x141c8:	mov	qword ptr [rsi + 8], rcx
0x141cc:	mov	qword ptr [rsi + 0x10], r8
0x141d0:	ret	


0x1407d:	push	r13
0x1407f:	push	r12
0x14081:	mov	r13, rdx
0x14084:	push	rbp
0x14085:	push	rbx
0x14086:	mov	r12, rcx
0x14089:	mov	ebx, r8d
0x1408c:	mov	rbp, rdi
0x1408f:	sub	rsp, 0x18
0x14093:	test	r8b, 4
0x14097:	jne	0x140e8


0x14108:	mov	eax, 2
0x1410d:	ret	


0x14031:	mov	rdi, qword ptr [rbx + 0x20]
0x14035:	mov	qword ptr [rbx], 0
0x1403c:	mov	qword ptr [rbx + 8], 0
0x14044:	call	0x18d0


0x1402c:	call	0x7810


0x13f9f:	lea	rax, [rip + 0x1eda]
0x13fa6:	movsxd	rdi, edi
0x13fa9:	lea	rsi, [rip + 0x1f70]
0x13fb0:	mov	rbp, rdx
0x13fb3:	mov	edx, 5
0x13fb8:	mov	r12, rcx
0x13fbb:	add	rsi, qword ptr [rax + rdi*8]
0x13fbf:	xor	edi, edi
0x13fc1:	call	0x19b0


0x14000:	call	0x18e0


0x1b00:	jmp	qword ptr [rip + 0x217402]


0x13d97:	test	rbx, rbx
0x13d9a:	js	0x13e60


0x13e60:	mov	rbx, -2
0x13e67:	jmp	0x13dfa


0x13c40:	mov	r12, -1
0x13c47:	jmp	0x13a12


0x1390a:	cmp	rcx, rdx
0x1390d:	jg	0x13c40


0x1384d:	mov	rcx, rbp
0x13850:	mov	rdi, rbx
0x13853:	mov	rsi, qword ptr [r12 + 0x48]
0x13858:	lea	rdx, [rsi + 0x18]
0x1385c:	add	rsi, 0x10
0x13860:	call	0xbd60


0x1384a:	rep stosq	qword ptr [rdi], rax


0x134f6:	mov	rdi, rbx
0x134f9:	mov	esi, 0xe8
0x134fe:	call	0x1b60


0x12702:	lea	rdi, [rbx + 8]
0x12706:	mov	rax, qword ptr [rsp + 8]
0x1270b:	mov	rcx, rbx
0x1270e:	and	rdi, 0xfffffffffffffff8
0x12712:	sub	rcx, rdi
0x12715:	mov	qword ptr [rax + 0x10], 0xe8
0x1271d:	xor	eax, eax
0x1271f:	add	ecx, 0xe8
0x12725:	mov	qword ptr [rbx], 0
0x1272c:	mov	qword ptr [rbx + 0xe0], 0
0x12737:	shr	ecx, 3
0x1273a:	rep stosq	qword ptr [rdi], rax


0x10ee8:	mov	rbp, rsi
0x10eeb:	lea	rsi, [rip + 0x4dce]
0x10ef2:	movzx	edx, cl
0x10ef5:	mov	r14, rdi
0x10ef8:	movsxd	rax, dword ptr [rsi + rdx*4]
0x10efc:	add	rax, rsi
0x10eff:	jmp	rax


0x10fa0:	mov	qword ptr [rsp + 0x28], 0
0x10fa9:	nop	dword ptr [rax]
0x10fb0:	mov	rdi, qword ptr [rsp + 0x118]
0x10fb8:	xor	rdi, qword ptr fs:[0x28]
0x10fc1:	mov	rax, qword ptr [rsp + 0x28]
0x10fc6:	jne	0x1233e


0x107a0:	mov	byte ptr [rdi + 8], 2
0x107a4:	mov	rdi, qword ptr [rsp + 0x28]
0x107a9:	xor	rdi, qword ptr fs:[0x28]
0x107b2:	jne	0x10dd8


0x1070f:	movzx	r13d, byte ptr [rdi + 0xa]
0x10714:	mov	r15, rdx
0x10717:	mov	rdx, qword ptr [rsi + 8]
0x1071b:	mov	rbx, rsi
0x1071e:	movzx	r12d, byte ptr [rdx + r14]
0x10723:	and	r13d, 0xffffff9f
0x10727:	mov	byte ptr [rdi + 0xa], r13b
0x1072b:	mov	eax, dword ptr [rsi + 0x90]
0x10731:	mov	byte ptr [rdi], r12b
0x10734:	cmp	eax, 1
0x10737:	jle	0x107d0


0x10508:	movzx	eax, byte ptr [rbp + 8]
0x1050c:	add	r11, r12
0x1050f:	mov	qword ptr [r10 + 0x48], r11
0x10513:	mov	edx, eax
0x10515:	and	edx, 0xfffffffb
0x10518:	cmp	dl, 0x1a
0x1051b:	je	0x10540


0x104b5:	mov	rsi, r12
0x104b8:	mov	rdi, r10
0x104bb:	call	0x7a30


0xfee8:	lea	r14, [rbp*8]
0xfef0:	add	r14, qword ptr [rsi]
0xfef3:	test	rcx, rcx
0xfef6:	jne	0xffb0


0xfc99:	lea	rdi, [rdx + 8]
0xfc9d:	test	rcx, rcx
0xfca0:	mov	qword ptr [rsp + 0x10], rdi
0xfca5:	jne	0xfcf8


0xe56b:	rep stosq	qword ptr [rdi], rax


0xe01a:	mov	qword ptr [r14], rdx
0xe01d:	mov	rbp, rdx
0xe020:	mov	qword ptr [rsi + 0xc0], r12
0xe027:	cmp	qword ptr [r15 + 0x98], 0
0xe02f:	jne	0xe158


0xe060:	mov	rax, qword ptr [r14]
0xe063:	test	rax, rax
0xe066:	je	0xe148


0xda50:	xor	eax, eax
0xda52:	nop	word ptr [rax + rax]
0xda58:	mov	rbx, qword ptr [rsp + 0xa8]
0xda60:	xor	rbx, qword ptr fs:[0x28]
0xda69:	jne	0xdfbc


0xd728:	lea	rax, [r15*8]
0xd730:	mov	r14, rdi
0xd733:	mov	qword ptr [rsp], 0
0xd73b:	mov	qword ptr [rsp + 8], r15
0xd740:	mov	qword ptr [rsp + 0x60], rax
0xd745:	lea	rax, [rsp + 0x90]
0xd74d:	mov	qword ptr [rsp + 0x68], rax
0xd752:	lea	rax, [rsp + 0x8c]
0xd75a:	mov	qword ptr [rsp + 0x78], rax
0xd75f:	jmp	0xd7a7


0xd44d:	mov	qword ptr [rbp - 0x88], 0
0xd458:	jmp	0xcccd


0xccab:	mov	edi, 0x60
0xccb0:	call	0x1b00


0xc56c:	mov	rax, qword ptr [rsp + 0x60]
0xc571:	mov	rdx, qword ptr [r15 + 0xb8]
0xc578:	mov	rcx, qword ptr [r15 + 0x48]
0xc57c:	mov	r12, qword ptr [rax]
0xc57f:	mov	r14, qword ptr [rax + 0x10]
0xc583:	mov	qword ptr [rsp + 0x68], rdx
0xc588:	mov	qword ptr [rsp + 0x70], rcx
0xc58d:	mov	edx, dword ptr [r15 + 0xa0]
0xc594:	test	r12, r12
0xc597:	mov	qword ptr [r15 + 0xb8], r14
0xc59e:	je	0xc980


0xcb86:	lea	r12, [rax + 1]
0xcb8a:	movabs	rax, 0x7fffffffffffffff
0xcb94:	sub	rax, r13
0xcb97:	cmp	rax, r12
0xcb9a:	jl	0xcc0b


0xc3c0:	mov	rdx, qword ptr [rcx + 8]
0xc3c4:	lea	rsi, [rdx + r8]
0xc3c8:	movzx	eax, byte ptr [rsi]
0xc3cb:	cmp	al, 0xc1
0xc3cd:	jbe	0xc380


0xc2b1:	cmp	dword ptr [rcx + 0x90], 1
0xc2b8:	je	0xc380


0xbdac:	mov	rax, qword ptr [rsp + 0x30]
0xbdb1:	mov	rax, qword ptr [rax + 0x18]
0xbdb5:	mov	rbx, rax
0xbdb8:	mov	qword ptr [rsp], rax
0xbdbc:	shr	rbx, 0x16
0xbdc0:	and	ebx, 1
0xbdc3:	mov	rax, qword ptr [rsp + 0x20]
0xbdc8:	cmp	qword ptr [rax], 0
0xbdcc:	jle	0xc1dd


0xbdc3:	mov	rax, qword ptr [rsp + 0x20]
0xbdc8:	cmp	qword ptr [rax], 0
0xbdcc:	jle	0xc1dd


0x1ab0:	jmp	qword ptr [rip + 0x21742a]


0xb328:	mov	rcx, qword ptr [r13]
0xb32c:	cmp	qword ptr [r8], rcx
0xb32f:	mov	rax, qword ptr [rdx]
0xb332:	je	0xb449


0xb303:	lea	rdi, [rip + 0xa59d]
0xb30a:	mov	ecx, 6
0xb30f:	mov	rsi, r9
0xb312:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x19d0:	jmp	qword ptr [rip + 0x21749a]


0xb265:	lea	rcx, [rip + 0xab94]
0xb26c:	lea	rsi, [rip + 0xa5bd]
0xb273:	lea	rdi, [rip + 0xa61e]
0xb27a:	mov	edx, 0x555
0xb27f:	call	0x1a50


0xb203:	lea	rbx, [rax + rax*2]
0xb207:	mov	rax, qword ptr [rsi]
0xb20a:	mov	r12, rsi
0xb20d:	shl	rcx, 4
0xb211:	mov	rbp, r9
0xb214:	mov	rdi, r8
0xb217:	shl	rbx, 4
0xb21b:	add	rax, rbx
0xb21e:	mov	rsi, qword ptr [rax]
0xb221:	mov	qword ptr [rdx], rsi
0xb224:	mov	rsi, qword ptr [rax + 0x10]
0xb228:	mov	rdx, rcx
0xb22b:	call	0x1ad0


0xb1e2:	pop	rbx
0xb1e3:	mov	rdi, qword ptr [rbp + 0x10]
0xb1e7:	pop	rbp
0xb1e8:	pop	r12
0xb1ea:	jmp	0x18d0


0xb1ad:	xor	ebx, ebx
0xb1af:	xor	r12d, r12d
0xb1b2:	nop	word ptr [rax + rax]
0xb1b8:	mov	rax, qword ptr [rbp + 0x10]
0xb1bc:	add	r12, 1
0xb1c0:	mov	rdi, qword ptr [rax + rbx + 0x28]
0xb1c5:	call	0x18d0


0xb178:	mov	rax, qword ptr [rsi + 8]
0xb17c:	mov	rdx, qword ptr [rax + 0x18]
0xb180:	mov	rax, qword ptr [rax + 0x38]
0xb184:	mov	qword ptr [rsi + 0x18], rdx
0xb188:	mov	qword ptr [rsi + 0x38], rax
0xb18c:	xor	eax, eax
0xb18e:	ret	


0xb116:	push	rbp
0xb117:	push	rbx
0xb118:	mov	rbx, rsi
0xb11b:	mov	rbp, rdi
0xb11e:	sub	rsp, 8
0xb122:	mov	qword ptr [rbx + 0x18], rsi
0xb126:	mov	rdx, qword ptr [rbx + 0x30]
0xb12a:	mov	rsi, qword ptr [rsi + 0x28]
0xb12e:	call	0x7280


0xa562:	xor	edi, edi
0xa564:	jmp	0xa521


0xa381:	lea	rax, [rsp + 0x20]
0xa386:	mov	r12, rdi
0xa389:	mov	r13, rsi
0xa38c:	xor	ebx, ebx
0xa38e:	mov	qword ptr [rsp + 0x18], rax
0xa393:	jmp	0xa3ed


0x9c26:	test	rbp, rbp
0x9c29:	je	0x9c8e


0x9bc6:	cmp	dword ptr [rdi + 0x90], 1
0x9bcd:	jg	0x9d00


0x9a78:	mov	r8, qword ptr [rsi]
0x9a7b:	movzx	eax, cl
0x9a7e:	sar	rax, 6
0x9a82:	mov	r8, qword ptr [r8 + rax*8]
0x9a86:	xor	eax, eax
0x9a88:	bt	r8, rcx
0x9a8c:	jb	0x9a00


0x99c4:	jbe	0x9a60


0x9920:	mov	eax, dword ptr [rbp + 0x70]
0x9923:	add	rsp, 8
0x9927:	pop	rbx
0x9928:	pop	rbp
0x9929:	ret	


0x98ce:	cmp	qword ptr [rdi + 0x58], rsi
0x98d2:	je	0x9978


0x9850:	xor	eax, eax
0x9852:	add	rsp, 0x28
0x9856:	pop	rbx
0x9857:	pop	rbp
0x9858:	pop	r12
0x985a:	pop	r13
0x985c:	pop	r14
0x985e:	pop	r15
0x9860:	ret	


0x978f:	mov	r14, rdx
0x9792:	mov	r12, rsi
0x9795:	mov	r15, rdi
0x9798:	xor	ebx, ebx
0x979a:	jmp	0x97ae


0x9412:	lea	rax, [rsi + rdx]
0x9416:	mov	r8, qword ptr [rbx + 0xd8]
0x941d:	mov	rcx, rax
0x9420:	shr	rcx, 0x3f
0x9424:	add	rcx, rax
0x9427:	sar	rcx, 1
0x942a:	lea	rax, [rcx + rcx*4]
0x942e:	cmp	r12, qword ptr [r8 + rax*8 + 8]
0x9433:	jle	0x9462


0x9467:	cmp	rdi, rsi
0x946a:	jle	0x948d


0x93a6:	xor	eax, eax
0x93a8:	mov	rcx, qword ptr [rsp + 0x38]
0x93ad:	xor	rcx, qword ptr fs:[0x28]
0x93b6:	jne	0x93c7


0x9317:	lea	rax, [rsp + 0x1c]
0x931c:	mov	r14, rdi
0x931f:	mov	rbx, rsi
0x9322:	mov	r12, rdx
0x9325:	mov	rbp, rcx
0x9328:	xor	r15d, r15d
0x932b:	lea	r13, [rsp + 0x20]
0x9330:	mov	qword ptr [rsp + 8], rax
0x9335:	jmp	0x938c


0x92e0:	mov	dword ptr [rdi], 0
0x92e6:	xor	ebx, ebx
0x92e8:	jmp	0x927f


0x910b:	test	rbp, rbp
0x910e:	jle	0x912c


0x90cf:	mov	dword ptr [rdi], 0
0x90d5:	xor	r14d, r14d
0x90d8:	jmp	0x8edc


0x8e4b:	mov	r8d, ecx
0x8e4e:	test	r10, r10
0x8e51:	lea	r12, [r8 + r10]
0x8e55:	jle	0x8e6c


0x8d85:	test	rdx, rdx
0x8d88:	je	0x8d91


0x8ce1:	test	rdx, rdx
0x8ce4:	mov	r13, qword ptr [rsi + 8]
0x8ce8:	je	0x8d80


0x8c90:	pxor	xmm0, xmm0
0x8c94:	mov	qword ptr [rdi + 0x10], 0
0x8c9c:	xor	eax, eax
0x8c9e:	movups	xmmword ptr [rdi], xmm0
0x8ca1:	pop	rbx
0x8ca2:	pop	rbp
0x8ca3:	pop	r12
0x8ca5:	ret	


0x8c55:	mov	rbx, rdi
0x8c58:	mov	qword ptr [rdi], rax
0x8c5b:	lea	rdi, [rax*8]
0x8c63:	mov	rbp, rsi
0x8c66:	call	0x1b00


0x8bd3:	mov	rdx, qword ptr [rbx + 0x10]
0x8bd7:	test	rdx, rdx
0x8bda:	je	0x8be2


0x8bcd:	cmp	byte ptr [rdx + 0x30], 0x11
0x8bd1:	je	0x8c20


0x8b08:	lea	rax, [rbx + 0x70]
0x8b0c:	lea	r14, [rsp + 0x20]
0x8b11:	sub	rbx, -0x80
0x8b15:	xor	ecx, ecx
0x8b17:	xor	edx, edx
0x8b19:	mov	rsi, rbx
0x8b1c:	mov	r15, rax
0x8b1f:	mov	r8, r14
0x8b22:	mov	rdi, rax
0x8b25:	mov	byte ptr [rsp + 0x28], 8
0x8b2a:	mov	qword ptr [rsp + 8], rax
0x8b2f:	call	0x87a0


0x8997:	test	rbp, rbp
0x899a:	je	0x8a10


0x8828:	mov	edi, 0x3c8
0x882d:	mov	qword ptr [rsp + 0x18], r8
0x8832:	mov	qword ptr [rsp + 0x10], rcx
0x8837:	mov	qword ptr [rsp + 8], rdx
0x883c:	mov	qword ptr [rsp], rsi
0x8840:	call	0x1b00


0x87af:	movsxd	r9, eax
0x87b2:	lea	r10d, [rax + 1]
0x87b6:	mov	rdi, qword ptr [rdi]
0x87b9:	mov	rax, r9
0x87bc:	shl	rax, 6
0x87c0:	add	rax, 8
0x87c4:	shl	r9, 6
0x87c8:	mov	dword ptr [rsi], r10d
0x87cb:	add	rax, rdi
0x87ce:	lea	rsi, [rdi + r9]
0x87d2:	mov	qword ptr [rsi + 8], 0
0x87da:	mov	qword ptr [rsi + 0x10], rdx
0x87de:	lea	rdi, [rsi + 0x20]
0x87e2:	mov	qword ptr [rsi + 0x18], rcx
0x87e6:	movdqu	xmm0, xmmword ptr [r8]
0x87eb:	movups	xmmword ptr [rsi + 0x30], xmm0
0x87ef:	and	byte ptr [rdi + 0x1a], 0xf3
0x87f3:	test	rdx, rdx
0x87f6:	mov	qword ptr [rsi + 0x20], 0
0x87fe:	mov	qword ptr [rsi + 0x28], 0
0x8806:	mov	qword ptr [rsi + 0x40], -1
0x880e:	je	0x8813


0x86b8:	ret	


0x85ff:	mov	r11, qword ptr [rdx + 8]
0x8603:	test	r11, r11
0x8606:	je	0x86b8


0x80f8:	xor	eax, eax
0x80fa:	ret	


0x8009:	mov	rdx, qword ptr [rsi + 8]
0x800d:	test	rdx, rdx
0x8010:	je	0x80f8


0x7dc3:	lea	rax, [rbx + rbp]
0x7dc7:	mov	r13, qword ptr [rdi + 0xd8]
0x7dce:	mov	r10, rax
0x7dd1:	shr	r10, 0x3f
0x7dd5:	add	r10, rax
0x7dd8:	sar	r10, 1
0x7ddb:	lea	rax, [r10 + r10*4]
0x7ddf:	cmp	r8, qword ptr [r13 + rax*8 + 8]
0x7de4:	jle	0x7e16


0x7e1b:	cmp	r15, rbx
0x7e1e:	jle	0x7fc0


0x7d80:	mov	qword ptr [rdx + 0x20], rsi
0x7d84:	xor	eax, eax
0x7d86:	ret	


0x7d3c:	cmp	al, 0x10
0x7d3e:	je	0x7d68


0x7d00:	mov	rax, qword ptr [rdi + 0xe0]
0x7d07:	test	rax, rax
0x7d0a:	je	0x7cac


0x7ca8:	cmp	al, 0x11
0x7caa:	je	0x7cb0


0x7c92:	ret	


0x7c68:	sub	rax, 1
0x7c6c:	cmp	rdx, rax
0x7c6f:	mov	qword ptr [rdi], rax
0x7c72:	jge	0x7c92


0x7b25:	ret	


0x7ae7:	mov	r8, qword ptr [rsi]
0x7aea:	sub	rdi, 1
0x7aee:	xor	esi, esi
0x7af0:	cmp	rsi, rdi
0x7af3:	jae	0x7b1d


0x7a90:	lea	rax, [rdx - 1]
0x7a94:	lea	rdx, [rax*8]
0x7a9c:	jmp	0x7abd


0x7a8c:	ret	


0x7a3d:	mov	rdx, qword ptr [rdi + 0x10]
0x7a41:	lea	rdi, [rax*4]
0x7a49:	cmp	dword ptr [rdx + rax*4], -1
0x7a4d:	jne	0x7a78


0x7a78:	mov	eax, 1
0x7a7d:	ret	


0x7a09:	pop	rbx
0x7a0a:	mov	qword ptr [r14 + 0xe8], 0
0x7a15:	mov	qword ptr [r14 + 0xc8], 0
0x7a20:	pop	rbp
0x7a21:	pop	r12
0x7a23:	pop	r13
0x7a25:	pop	r14
0x7a27:	ret	


0x7989:	xor	r13d, r13d
0x798c:	nop	dword ptr [rax]
0x7990:	mov	rax, qword ptr [r14 + 0xf8]
0x7997:	mov	r12, qword ptr [rax + r13*8]
0x799b:	cmp	qword ptr [r12 + 0x20], 0
0x79a1:	jle	0x79cd


0x784e:	mov	rdi, qword ptr [r12 + 0x18]
0x7853:	call	0x18d0


0x7823:	cmp	qword ptr [r12 + 0x10], 0
0x7829:	je	0x784e


0x18d0:	jmp	qword ptr [rip + 0x21751a]


0x76e0:	mov	rax, qword ptr [r14 + 0x18]
0x76e4:	lea	rbx, [r13 + r13*2]
0x76e9:	lea	r15, [r9*8]
0x76f1:	mov	edx, ebp
0x76f3:	shl	rbx, 3
0x76f7:	mov	r9, qword ptr [rax + r9*8]
0x76fb:	mov	qword ptr [rdi + rbx + 8], 0
0x7704:	mov	rdi, r14
0x7707:	mov	rsi, r9
0x770a:	mov	qword ptr [rsp], r9
0x770e:	call	0x7450


0x752d:	lea	r12, [r9 + r9*2]
0x7531:	shl	r12, 3
0x7535:	lea	rsi, [rdi + r12]
0x7539:	mov	rcx, qword ptr [rsi + 8]
0x753d:	test	rcx, rcx
0x7540:	je	0x7739


0x72a5:	mov	r12, qword ptr [rdi + 0x18]
0x72a9:	mov	rbp, qword ptr [rdi + 0x28]
0x72ad:	mov	rax, rsi
0x72b0:	mov	ecx, edx
0x72b2:	shl	rax, 4
0x72b6:	add	rax, qword ptr [rbx]
0x72b9:	and	ecx, 0xfffc00ff
0x72bf:	mov	qword ptr [rax + 8], rdx
0x72c3:	mov	dword ptr [rax + 8], ecx
0x72c6:	xor	ecx, ecx
0x72c8:	cmp	dl, 6
0x72cb:	mov	qword ptr [rax], r14
0x72ce:	sete	cl
0x72d1:	cmp	dl, 5
0x72d4:	jne	0x72e2


0x7350:	lea	r13, [rbp + rbp]
0x7355:	movabs	rax, 0xaaaaaaaaaaaaaaa
0x735f:	cmp	r13, rax
0x7362:	ja	0x7442


0x7250:	mov	rdi, qword ptr [rdi]
0x7253:	jmp	0x7200


0x723d:	cmp	eax, 3
0x7240:	je	0x7248


0x718a:	cmp	rax, qword ptr [rdi + 0x58]
0x718e:	jge	0x71b0


0x71b0:	mov	rax, qword ptr [rbx + 0x30]
0x71b4:	cmp	rax, rbp
0x71b7:	jg	0x719f


0x703d:	mov	rdx, qword ptr [rdi + 0x58]
0x7041:	add	rax, rax
0x7044:	movsxd	rsi, esi
0x7047:	mov	rbx, rdi
0x704a:	cmp	rax, rdx
0x704d:	cmovg	rax, rdx
0x7051:	cmp	rax, rsi
0x7054:	cmovge	rsi, rax
0x7058:	call	0x6490


0x7148:	mov	ebp, 0xc
0x714d:	add	rsp, 8
0x7151:	mov	eax, ebp
0x7153:	pop	rbx
0x7154:	pop	rbp
0x7155:	ret	


0x6a41:	cmp	qword ptr [rdi + 0x78], 0
0x6a46:	je	0x6bd0


0x6a4c:	mov	r13, qword ptr [r14 + 0x38]
0x6a50:	cmp	r15, rbx
0x6a53:	jl	0x6a90


0x68f4:	mov	rax, qword ptr [rsp + 0x58]
0x68f9:	xor	rax, qword ptr fs:[0x28]
0x6902:	mov	qword ptr [rbx + 0x30], rbp
0x6906:	mov	qword ptr [rbx + 0x38], rbp
0x690a:	jne	0x69ee


0x686b:	lea	r14, [rdi + 0x20]
0x686f:	lea	r13, [rsp + 0xc]
0x6874:	nop	dword ptr [rax]
0x6878:	mov	rdi, qword ptr [rbx + 0x78]
0x687c:	mov	rdx, r12
0x687f:	mov	r15, qword ptr [rbx + 0x20]
0x6883:	sub	rdx, rbp
0x6886:	test	rdi, rdi
0x6889:	jne	0x6970


0x6815:	mov	qword ptr [rbp + 0x30], rbx
0x6819:	mov	qword ptr [rbp + 0x38], rbx
0x681d:	pop	rbx
0x681e:	pop	rbp
0x681f:	pop	r12
0x6821:	ret	


0x67dd:	call	0x18b0


0x65d8:	mov	qword ptr [rdi], 1
0x65df:	mov	qword ptr [rdi + 8], 1
0x65e7:	mov	edi, 8
0x65ec:	call	0x1b00


0x65b4:	mov	rsi, qword ptr [rdi + 8]
0x65b8:	mov	rax, qword ptr [rdi + 0x10]
0x65bc:	test	rsi, rsi
0x65bf:	jne	0x6610


0x6568:	add	rsi, 1
0x656c:	lea	rdx, [rsi + rsi]
0x6570:	shl	rsi, 4
0x6574:	mov	qword ptr [rdi], rdx
0x6577:	mov	rdi, rax
0x657a:	call	0x1b60


0x6549:	lea	rdx, [rsi + 1]
0x654d:	mov	qword ptr [rbx + 8], rdx
0x6551:	mov	qword ptr [rax + rsi*8], rbp
0x6555:	mov	eax, 1
0x655a:	add	rsp, 8
0x655e:	pop	rbx
0x655f:	pop	rbp
0x6560:	ret	


0x64ed:	cmp	byte ptr [rbx + 0x8b], 0
0x64f4:	jne	0x6508


0x64a5:	movabs	rax, 0x1fffffffffffffff
0x64af:	cmp	rsi, rax
0x64b2:	ja	0x6520


0x6443:	mov	rsi, rbx
0x6446:	mov	rdi, rbp
0x6449:	call	r12


0x63d3:	mov	rax, qword ptr [rbx + 8]
0x63d7:	test	rax, rax
0x63da:	jne	0x63d0


0x6368:	mov	rax, qword ptr [rax + 0x18]
0x636c:	cmp	rax, r8
0x636f:	jl	0x6390


0x63b0:	mov	eax, 0xffffffff
0x63b5:	ret	


0x62e5:	add	rsp, 0x48
0x62e9:	mov	eax, r15d
0x62ec:	pop	rbx
0x62ed:	sar	eax, 1
0x62ef:	pop	rbp
0x62f0:	pop	r12
0x62f2:	pop	r13
0x62f4:	pop	r14
0x62f6:	pop	r15
0x62f8:	ret	


0x6157:	lea	rax, [r8 + r8*4]
0x615b:	mov	r11, rcx
0x615e:	mov	ecx, r9d
0x6161:	mov	r10, r8
0x6164:	xor	ebx, ebx
0x6166:	mov	dword ptr [rsp + 0x20], esi
0x616a:	shl	rax, 3
0x616e:	mov	r15, r9
0x6171:	mov	qword ptr [rsp + 0x10], r11
0x6176:	mov	qword ptr [rsp + 0x28], rax
0x617b:	mov	eax, 1
0x6180:	shl	rax, cl
0x6183:	mov	qword ptr [rsp + 0x18], rax
0x6188:	not	eax
0x618a:	mov	word ptr [rsp + 0x26], ax
0x618f:	mov	eax, esi
0x6191:	and	eax, 1
0x6194:	mov	dword ptr [rsp + 0xc], eax
0x6198:	mov	eax, esi
0x619a:	and	eax, 2
0x619d:	mov	dword ptr [rsp + 8], eax
0x61a1:	jmp	0x61c5


0x6110:	cmp	rdi, qword ptr [rsi + 0x28]
0x6114:	jne	0x6106


0x6106:	xor	eax, eax
0x6108:	ret	


0x6030:	mov	byte ptr [rdi + 8], 2
0x6034:	xor	eax, eax
0x6036:	ret	


0x5fda:	mov	r8, qword ptr [rsi + 8]
0x5fde:	cmp	dword ptr [rsi + 0x90], 1
0x5fe5:	movzx	ecx, byte ptr [r8 + rax]
0x5fea:	mov	byte ptr [rdi], cl
0x5fec:	jle	0x6003


0x1a00:	jmp	qword ptr [rip + 0x217482]


0x5ef0:	mov	rax, qword ptr [rdi + 0x20]
0x5ef4:	cmp	qword ptr [rdi + 0x28], rax
0x5ef8:	jne	0x5eea


0x5eea:	jmp	0x1bc0


0x5eba:	mov	rdi, rbx
0x5ebd:	pop	rbx
0x5ebe:	jmp	0x1b20


0x5ea9:	call	0x1b40


0x1ae0:	jmp	qword ptr [rip + 0x217412]


0x5787:	lea	rax, [rsp + 0x10]
0x578c:	test	rsi, rsi
0x578f:	mov	rbx, rsi
0x5792:	mov	r12, rdi
0x5795:	mov	ebp, edx
0x5797:	mov	r14, rcx
0x579a:	cmove	rbx, rax
0x579e:	mov	r15, r8
0x57a1:	call	0x18f0


0x5def:	lea	rcx, [rip + 0xfa2a]
0x5df6:	lea	rsi, [rip + 0xf903]
0x5dfd:	lea	rdi, [rip + 0xf91c]
0x5e04:	mov	edx, 0x54
0x5e09:	call	0x1a50


0x19b0:	jmp	qword ptr [rip + 0x2174aa]


0x5579:	call	0x55d0


0x5562:	movzx	edx, dl
0x5565:	test	rdx, rdx
0x5568:	jne	0x5579


0x5510:	test	rax, rax
0x5513:	mov	edx, 0x80
0x5518:	cmove	rax, rdx
0x551c:	test	rax, rax
0x551f:	jns	0x5502


0x54e8:	movabs	rdx, 0x5555555555555553
0x54f2:	cmp	rax, rdx
0x54f5:	ja	0x5521


0x5490:	test	rcx, rcx
0x5493:	je	0x54b8


0x545b:	xor	edx, edx
0x545d:	movabs	rax, 0x5555555555555554
0x5467:	div	r9
0x546a:	cmp	rax, rcx
0x546d:	jbe	0x54ab


0x543b:	sub	rsp, 8
0x543f:	call	0x55d0


0x5431:	movzx	eax, al
0x5434:	test	rax, rax
0x5437:	jne	0x543b


0x53e9:	test	rdi, rdi
0x53ec:	jne	0x5408


0x53ee:	mov	rsi, rbx
0x53f1:	call	0x1b60


0x53bb:	sub	rsp, 8
0x53bf:	call	0x55d0


0x53b1:	movzx	eax, al
0x53b4:	test	rax, rax
0x53b7:	jne	0x53bb


0x5296:	mov	eax, r10d
0x5299:	mov	r11d, 1
0x529f:	add	r10d, 8
0x52a3:	add	rax, rbp
0x52a6:	mov	rax, qword ptr [rax]
0x52a9:	test	rax, rax
0x52ac:	mov	qword ptr [r8 + r9*8], rax
0x52b0:	je	0x52bc


0x52ec:	mov	rax, rbx
0x52ef:	add	rbx, 8
0x52f3:	jmp	0x52a6


0x51c8:	mov	r11d, eax
0x51cb:	add	r11, qword ptr [r10 + 0x10]
0x51cf:	add	eax, 8
0x51d2:	mov	dword ptr [r10], eax
0x51d5:	mov	rax, qword ptr [r11]
0x51d8:	test	rax, rax
0x51db:	mov	qword ptr [r8 + r9*8], rax
0x51df:	je	0x51eb


0x520a:	mov	r11, qword ptr [r10 + 8]
0x520e:	lea	rax, [r11 + 8]
0x5212:	mov	qword ptr [r10 + 8], rax
0x5216:	jmp	0x51d5


0x519b:	jmp	0x4d60


0x4e98:	mov	r8, rcx
0x4e9b:	mov	rcx, rdx
0x4e9e:	lea	rdx, [rip + 0x104ef]
0x4ea5:	mov	esi, 1
0x4eaa:	xor	eax, eax
0x4eac:	call	0x1c30


0x4d80:	mov	r8, rdx
0x4d83:	lea	rdx, [rip + 0x105fe]
0x4d8a:	mov	r9, rcx
0x4d8d:	xor	eax, eax
0x4d8f:	mov	rcx, rsi
0x4d92:	mov	esi, 1
0x4d97:	call	0x1c30


0x4c87:	call	0x18e0


0x4c55:	test	rdx, rdx
0x4c58:	je	0x4c87


0x4bf4:	call	0x18e0


0x4b8c:	mov	dword ptr [rsp], esi
0x4b8f:	mov	rcx, rsp
0x4b92:	mov	rdx, -1
0x4b99:	mov	rsi, rax
0x4b9c:	mov	qword ptr [rsp + 4], 0
0x4ba5:	mov	qword ptr [rsp + 0xc], 0x4000000
0x4bae:	mov	qword ptr [rsp + 0x14], 0
0x4bb7:	mov	qword ptr [rsp + 0x1c], 0
0x4bc0:	mov	qword ptr [rsp + 0x24], 0
0x4bc9:	mov	qword ptr [rsp + 0x2c], 0
0x4bd2:	mov	dword ptr [rsp + 0x34], 0
0x4bda:	call	0x4400


0x4a60:	call	0x18e0


0x49ff:	mov	dword ptr [rsp], esi
0x4a02:	mov	rcx, rsp
0x4a05:	mov	rsi, rax
0x4a08:	mov	qword ptr [rsp + 4], 0
0x4a11:	mov	qword ptr [rsp + 0xc], 0
0x4a1a:	mov	qword ptr [rsp + 0x14], 0
0x4a23:	mov	qword ptr [rsp + 0x1c], 0
0x4a2c:	mov	qword ptr [rsp + 0x24], 0
0x4a35:	mov	qword ptr [rsp + 0x2c], 0
0x4a3e:	mov	dword ptr [rsp + 0x34], 0
0x4a46:	call	0x4400


0x49d4:	call	0x18e0


0x496c:	mov	dword ptr [rsp], esi
0x496f:	mov	rcx, rsp
0x4972:	mov	rdx, -1
0x4979:	mov	rsi, rax
0x497c:	mov	qword ptr [rsp + 4], 0
0x4985:	mov	qword ptr [rsp + 0xc], 0
0x498e:	mov	qword ptr [rsp + 0x14], 0
0x4997:	mov	qword ptr [rsp + 0x1c], 0
0x49a0:	mov	qword ptr [rsp + 0x24], 0
0x49a9:	mov	qword ptr [rsp + 0x2c], 0
0x49b2:	mov	dword ptr [rsp + 0x34], 0
0x49ba:	call	0x4400


0x4881:	mov	rdi, qword ptr [r12 + 8]
0x4886:	lea	rbx, [rip + 0x214d13]
0x488d:	cmp	rdi, rbx
0x4890:	je	0x48a9


0x4856:	sub	eax, 2
0x4859:	lea	rbx, [r12 + 0x18]
0x485e:	shl	rax, 4
0x4862:	lea	rbp, [r12 + rax + 0x28]
0x4867:	nop	word ptr [rax + rax]
0x4870:	mov	rdi, qword ptr [rbx]
0x4873:	add	rbx, 0x10
0x4877:	call	0x18d0


0x18f0:	jmp	qword ptr [rip + 0x21750a]


0x46b7:	sub	rsp, 8
0x46bb:	call	0x18e0


0x46a9:	test	rdx, rdx
0x46ac:	je	0x46b7


0x19c0:	jmp	qword ptr [rip + 0x2174a2]


0x30ad:	mov	rcx, qword ptr [rip + 0x21606c]
0x30b4:	lea	rdi, [rip + 0x11db5]
0x30bb:	mov	edx, 0x37
0x30c0:	mov	esi, 1
0x30c5:	call	0x1c20


0x3036:	mov	esi, 0x2f
0x303b:	mov	rbx, rdi
0x303e:	call	0x1a30


0x2f21:	mov	r14, rdi
0x2f24:	mov	rbp, rsi
0x2f27:	mov	rbx, r13
0x2f2a:	movsx	r15d, dl
0x2f2e:	jmp	0x2f3b


0x2ff0:	add	rsp, 0x18
0x2ff4:	xor	eax, eax
0x2ff6:	pop	rbx
0x2ff7:	pop	rbp
0x2ff8:	pop	r12
0x2ffa:	pop	r13
0x2ffc:	pop	r14
0x2ffe:	pop	r15
0x3000:	ret	


0x2ee0:	ret	


0x2ec5:	push	rbx
0x2ec6:	mov	ebx, esi
0x2ec8:	call	0x1ae0


0x1a70:	jmp	qword ptr [rip + 0x21744a]


0x29cd:	lea	rsi, [rip + 0x11c2c]
0x29d4:	xor	edi, edi
0x29d6:	call	0x19b0


0x299f:	lea	rsi, [rip + 0x11c32]
0x29a6:	xor	edi, edi
0x29a8:	call	0x19b0


0x2582:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2584:	seta	al
0x2587:	sbb	al, 0
0x2589:	test	al, al
0x258b:	jne	0x28e0


0x1b80:	jmp	qword ptr [rip + 0x2173c2]


0x24b4:	mov	qword ptr [rdi], rcx
0x24b7:	mov	eax, 1
0x24bc:	ret	


0x2432:	jle	0x24b0


0x23d9:	cmp	qword ptr [rip + 0x216c07], 0
0x23e1:	push	rbp
0x23e2:	mov	rbp, rsp
0x23e5:	je	0x23f3


0x2408:	ret	


0x23c0:	pop	rbp
0x23c1:	ret	


0x23a8:	mov	rax, qword ptr [rip + 0x216c31]
0x23af:	test	rax, rax
0x23b2:	je	0x23c0


0x2370:	pop	rbp
0x2371:	ret	


0x2357:	mov	rax, qword ptr [rip + 0x216c6a]
0x235e:	test	rax, rax
0x2361:	je	0x2370




0x189a:	add	rsp, 8
0x189e:	ret	


0x1898:	call	rax










0x14099:	mov	rdi, rsi
0x1409c:	mov	qword ptr [rsp + 8], rsi
0x140a1:	call	0x19d0


0x140e8:	test	byte ptr [rbp + 0x38], 0x10
0x140ec:	mov	rcx, qword ptr [rcx]
0x140ef:	mov	rdx, qword ptr [r12 + 8]
0x140f4:	jne	0x140b6


0x18e0:	jmp	qword ptr [rip + 0x217512]




0x13da0:	mov	r15, rbx
0x13da3:	add	r15, rbp
0x13da6:	jo	0x13e60


0x13dfa:	add	rsp, 0x28
0x13dfe:	mov	rax, rbx
0x13e01:	pop	rbx
0x13e02:	pop	rbp
0x13e03:	pop	r12
0x13e05:	pop	r13
0x13e07:	pop	r14
0x13e09:	pop	r15
0x13e0b:	ret	


0x13a12:	add	rsp, 0x38
0x13a16:	mov	rax, r12
0x13a19:	pop	rbx
0x13a1a:	pop	rbp
0x13a1b:	pop	r12
0x13a1d:	pop	r13
0x13a1f:	pop	r14
0x13a21:	pop	r15
0x13a23:	ret	


0x13913:	cmp	r8, rdx
0x13916:	mov	rbx, rcx
0x13919:	mov	r15, rdi
0x1391c:	jg	0x13ba0


0x1b60:	jmp	qword ptr [rip + 0x2173d2]


0x1273d:	movabs	rax, 0x555555555555554
0x12747:	mov	dword ptr [rbx + 0x80], 0xf
0x12751:	cmp	qword ptr [rsp], rax
0x12755:	ja	0x12d96


0x1273a:	rep stosq	qword ptr [rdi], rax


0x10fcc:	add	rsp, 0x128
0x10fd3:	pop	rbx
0x10fd4:	pop	rbp
0x10fd5:	pop	r12
0x10fd7:	pop	r13
0x10fd9:	pop	r14
0x10fdb:	pop	r15
0x10fdd:	ret	


0x1233e:	call	0x19e0


0x107b8:	add	rsp, 0x38
0x107bc:	pop	rbx
0x107bd:	pop	rbp
0x107be:	pop	r12
0x107c0:	pop	r13
0x107c2:	pop	r14
0x107c4:	pop	r15
0x107c6:	ret	


0x10dd8:	call	0x19e0


0x107d0:	cmp	r12b, 0x5c
0x107d4:	je	0x10850


0x1073d:	cmp	r14, qword ptr [rsi + 0x30]
0x10741:	je	0x108e0


0x10540:	mov	r12, qword ptr [r10 + 0x68]
0x10544:	cmp	r11, r12
0x10547:	jge	0x10668


0x1051d:	cmp	al, 0x1c
0x1051f:	je	0x10540


0xfefc:	mov	qword ptr [r14], 0
0xff03:	xor	eax, eax
0xff05:	jmp	0xfcc8


0xffb0:	mov	qword ptr [rsp + 0x10], 0
0xffb9:	jmp	0xfd58


0xfca7:	mov	rdx, qword ptr [rsi]
0xfcaa:	mov	qword ptr [rdx + rbp*8], 0
0xfcb2:	mov	rdx, qword ptr [rax + rbp*8]
0xfcb6:	xor	eax, eax
0xfcb8:	test	byte ptr [rdx + 0x68], 0x40
0xfcbc:	jne	0xfd9f


0xfcf8:	lea	rdi, [rsp + 0x60]
0xfcfd:	mov	rdx, rbx
0xfd00:	mov	rsi, r12
0xfd03:	mov	dword ptr [rsp + 0x60], 0
0xfd0b:	call	0x90f0


0xe56e:	mov	rdi, qword ptr [rsi + 0x20]
0xe572:	mov	qword ptr [rsp + 0x1b8], rbx
0xe57a:	test	rdi, rdi
0xe57d:	mov	qword ptr [rsp + 0x68], rdi
0xe582:	je	0xe5a6


0xe035:	mov	rcx, qword ptr [rsp + 0x28]
0xe03a:	xor	rcx, qword ptr fs:[0x28]
0xe043:	mov	rax, rbp
0xe046:	jne	0xe1b7


0xe158:	test	rbp, rbp
0xe15b:	je	0xe1b0


0xe148:	mov	qword ptr [r14], rdx
0xe14b:	mov	rbp, rdx
0xe14e:	jmp	0xe027


0xe06c:	test	rdx, rdx
0xe06f:	mov	rax, qword ptr [rax + 0x50]
0xe073:	je	0xe100


0xda6f:	add	rsp, 0xb8
0xda76:	pop	rbx
0xda77:	pop	rbp
0xda78:	pop	r12
0xda7a:	pop	r13
0xda7c:	pop	r14
0xda7e:	pop	r15
0xda80:	ret	


0xdfbc:	call	0x19e0


0xd7a7:	mov	rax, qword ptr [rsp + 0x40]
0xd7ac:	mov	rdi, qword ptr [rsp]
0xd7b0:	mov	rax, qword ptr [rax]
0xd7b3:	mov	r13, qword ptr [rax + rdi*8]
0xd7b7:	mov	rdi, qword ptr [rsp + 0x38]
0xd7bc:	mov	rax, qword ptr [rdi]
0xd7bf:	mov	rbx, r13
0xd7c2:	shl	rbx, 4
0xd7c6:	add	rax, rbx
0xd7c9:	cmp	byte ptr [rax + 8], 4
0xd7cd:	jne	0xd790


0xcccd:	mov	rax, qword ptr [rbp - 0x90]
0xccd4:	pxor	xmm0, xmm0
0xccd8:	mov	qword ptr [rbp - 0x60], 0
0xcce0:	mov	rbx, qword ptr [rax + 0x90]
0xcce7:	mov	rax, qword ptr [rbp - 0x98]
0xccee:	movaps	xmmword ptr [rbp - 0x70], xmm0
0xccf2:	shl	rax, 4
0xccf6:	cmp	rax, 0xfbf
0xccfc:	mov	qword ptr [rbp - 0xb8], rax
0xcd03:	ja	0xd3f6


0xc980:	lea	rsi, [rbp - 1]
0xc984:	mov	qword ptr [r15 + 0x48], rbp
0xc988:	mov	rdi, r15
0xc98b:	call	0x98c0


0xc5a4:	lea	rsi, [r12 - 1]
0xc5a9:	mov	qword ptr [r15 + 0x48], r12
0xc5ad:	mov	rdi, r15
0xc5b0:	call	0x98c0


0xcc0b:	mov	eax, 0xc
0xcc10:	jmp	0xca74


0xcb9c:	lea	r14, [r13 + r12]
0xcba1:	movabs	rax, 0x1fffffffffffffff
0xcbab:	cmp	r14, rax
0xcbae:	ja	0xcc0b


0xc380:	xor	ebp, ebp
0xc382:	add	rsp, 8
0xc386:	mov	eax, ebp
0xc388:	pop	rbx
0xc389:	pop	rbp
0xc38a:	pop	r12
0xc38c:	pop	r13
0xc38e:	ret	


0xc3cf:	mov	rcx, qword ptr [rcx + 0x58]
0xc3d3:	lea	rdi, [r8 + 1]
0xc3d7:	cmp	rdi, rcx
0xc3da:	jge	0xc380


0xc2be:	mov	rbx, rsi
0xc2c1:	mov	rdi, rcx
0xc2c4:	mov	rsi, r8
0xc2c7:	mov	r10, rcx
0xc2ca:	call	0x7a30


0xc1dd:	mov	rax, qword ptr [rsp + 0x168]
0xc1e5:	xor	rax, qword ptr fs:[0x28]
0xc1ee:	jne	0xc282


0xbdd2:	lea	rax, [rsp + 0x58]
0xbdd7:	mov	qword ptr [rsp], 0
0xbddf:	mov	qword ptr [rsp + 0x40], rax
0xbde4:	lea	rax, [rsp + 0x54]
0xbde9:	mov	qword ptr [rsp + 0x48], rax
0xbdee:	lea	rax, [rsp + 0x60]
0xbdf3:	mov	qword ptr [rsp + 0x38], rax
0xbdf8:	jmp	0xbe3e




0xb449:	lea	r14, [rcx + rcx + 1]
0xb44e:	mov	rdi, rax
0xb451:	mov	qword ptr [rsp + 8], r8
0xb456:	mov	qword ptr [rsp], rdx
0xb45a:	lea	rsi, [r14*8]
0xb462:	call	0x1b60


0xb338:	lea	rdx, [rcx + 1]
0xb33c:	mov	rdi, r12
0xb33f:	mov	qword ptr [r13], rdx
0xb343:	lea	r13, [rax + rcx*8]
0xb347:	call	0x1a90


0xb312:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb314:	seta	al
0xb317:	sbb	al, 0
0xb319:	test	al, al
0xb31b:	jne	0xb416




0x1a50:	jmp	qword ptr [rip + 0x21745a]


0x1ad0:	jmp	qword ptr [rip + 0x21741a]


0xa521:	call	0x18d0


0xa3ed:	mov	rax, qword ptr [rbp + 0x10]
0xa3f1:	mov	rax, qword ptr [rax + rbx*8]
0xa3f5:	cmp	r13, rax
0xa3f8:	je	0xa3e0


0x9c8e:	mov	rax, qword ptr [rbx + 0x58]
0x9c92:	sub	qword ptr [rbx + 0x68], rbp
0x9c96:	mov	qword ptr [rbx + 0x28], r15
0x9c9a:	sub	rax, rbp
0x9c9d:	cmp	dword ptr [rbx + 0x90], 1
0x9ca4:	mov	qword ptr [rbx + 0x58], rax
0x9ca8:	jle	0x9d48


0x9c2b:	mov	rax, qword ptr [rbx + 0x38]
0x9c2f:	movzx	edx, byte ptr [rbx + 0x8c]
0x9c36:	mov	r8, qword ptr [rbx + 0x30]
0x9c3a:	cmp	rax, rbp
0x9c3d:	jle	0x9d60


0x9bd3:	mov	rax, qword ptr [rbx + 0x50]
0x9bd7:	mov	qword ptr [rbx + 0x30], 0
0x9bdf:	mov	rbp, r15
0x9be2:	mov	qword ptr [rbx + 0x28], 0
0x9bea:	mov	qword ptr [rbx + 0x38], 0
0x9bf2:	mov	byte ptr [rbx + 0x8c], 0
0x9bf9:	mov	qword ptr [rbx + 0x58], rax
0x9bfd:	mov	rax, qword ptr [rbx + 0x60]
0x9c01:	mov	qword ptr [rbx + 0x68], rax
0x9c05:	mov	eax, r10d
0x9c08:	and	eax, 1
0x9c0b:	cmp	eax, 1
0x9c0e:	sbb	eax, eax
0x9c10:	and	eax, 2
0x9c13:	add	eax, 4
0x9c16:	cmp	byte ptr [rbx + 0x8b], 0
0x9c1d:	mov	dword ptr [rbx + 0x70], eax
0x9c20:	je	0x9cf0


0x9d00:	mov	qword ptr [rdi + 0x20], 0
0x9d08:	jmp	0x9bd3


0x9a00:	push	rbx
0x9a01:	mov	ebx, dword ptr [rsi + 8]
0x9a04:	mov	eax, 1
0x9a09:	test	ebx, 0x3ff00
0x9a0f:	je	0x9a5c


0x9a92:	ret	


0x9a60:	cmp	al, 1
0x9a62:	jne	0x9a70


0x99ca:	cmp	al, 5
0x99cc:	je	0x99e0


0x9978:	and	edx, 2
0x997b:	cmp	edx, 1
0x997e:	sbb	eax, eax
0x9980:	and	eax, 2
0x9983:	add	eax, 8
0x9986:	jmp	0x9912


0x98d8:	cmp	dword ptr [rdi + 0x90], 1
0x98df:	jle	0x9930


0x97ae:	mov	rax, qword ptr [r14]
0x97b1:	mov	rbp, qword ptr [rax + rbx*8]
0x97b5:	mov	rax, rbp
0x97b8:	shl	rax, 4
0x97bc:	add	rax, qword ptr [r13]
0x97c0:	cmp	byte ptr [rax + 8], 8
0x97c4:	jne	0x97a0


0x9462:	cmp	rsi, rcx
0x9465:	jl	0x9440


0x9435:	jmp	0x94b8


0x948d:	xor	eax, eax
0x948f:	mov	rbx, qword ptr [rsp + 0x68]
0x9494:	xor	rbx, qword ptr fs:[0x28]
0x949d:	jne	0x9769


0x946c:	mov	rcx, qword ptr [rbx + 0xd8]
0x9473:	lea	rax, [rsi + rsi*4]
0x9477:	shl	rax, 3
0x947b:	cmp	qword ptr [rcx + rax + 8], r12
0x9480:	mov	qword ptr [rsp + 0x30], rax
0x9485:	jne	0x948d


0x93b8:	add	rsp, 0x48
0x93bc:	pop	rbx
0x93bd:	pop	rbp
0x93be:	pop	r12
0x93c0:	pop	r13
0x93c2:	pop	r14
0x93c4:	pop	r15
0x93c6:	ret	


0x93c7:	call	0x19e0


0x938c:	mov	rsi, qword ptr [rbx + r15*8]
0x9390:	mov	rdx, qword ptr [r12 + r15*8]
0x9394:	test	rsi, rsi
0x9397:	jne	0x9340


0x927f:	add	rsp, 8
0x9283:	mov	rax, rbx
0x9286:	pop	rbx
0x9287:	pop	rbp
0x9288:	pop	r12
0x928a:	pop	r13
0x928c:	pop	r14
0x928e:	pop	r15
0x9290:	ret	


0x912c:	mov	rax, qword ptr [rsi + 0x88]
0x9133:	mov	r14, rdx
0x9136:	mov	r12, rsi
0x9139:	mov	r13, rdi
0x913c:	and	rax, rbp
0x913f:	lea	rdx, [rax + rax*2]
0x9143:	mov	rax, qword ptr [rsi + 0x40]
0x9147:	lea	rax, [rax + rdx*8]
0x914b:	mov	r10, qword ptr [rax]
0x914e:	test	r10, r10
0x9151:	jle	0x9186


0x9110:	mov	rax, qword ptr [rdx + 0x10]
0x9114:	lea	rcx, [rax + rbp*8]
0x9118:	nop	dword ptr [rax + rax]
0x9120:	add	rbp, qword ptr [rax]
0x9123:	add	rax, 8
0x9127:	cmp	rcx, rax
0x912a:	jne	0x9120


0x8edc:	add	rsp, 0x28
0x8ee0:	mov	rax, r14
0x8ee3:	pop	rbx
0x8ee4:	pop	rbp
0x8ee5:	pop	r12
0x8ee7:	pop	r13
0x8ee9:	pop	r14
0x8eeb:	pop	r15
0x8eed:	ret	


0x8e6c:	mov	rax, qword ptr [rsi + 0x88]
0x8e73:	mov	rbp, rdx
0x8e76:	mov	dword ptr [rsp + 4], ecx
0x8e7a:	mov	r13, rsi
0x8e7d:	mov	qword ptr [rsp + 0x18], rdi
0x8e82:	and	rax, r12
0x8e85:	lea	rdx, [rax + rax*2]
0x8e89:	mov	rax, qword ptr [rsi + 0x40]
0x8e8d:	lea	rax, [rax + rdx*8]
0x8e91:	mov	r11, qword ptr [rax]
0x8e94:	test	r11, r11
0x8e97:	jle	0x8ef0


0x8e57:	mov	rax, qword ptr [rdx + 0x10]
0x8e5b:	lea	r10, [rax + r10*8]
0x8e5f:	nop	
0x8e60:	add	r12, qword ptr [rax]
0x8e63:	add	rax, 8
0x8e67:	cmp	r10, rax
0x8e6a:	jne	0x8e60


0x8d91:	pxor	xmm0, xmm0
0x8d95:	mov	qword ptr [rdi + 0x10], 0
0x8d9d:	xor	eax, eax
0x8d9f:	movaps	xmmword ptr [rdi], xmm0
0x8da2:	pop	rbx
0x8da3:	pop	rbp
0x8da4:	pop	r12
0x8da6:	pop	r13
0x8da8:	pop	r14
0x8daa:	ret	


0x8d8a:	cmp	qword ptr [rdx + 8], 0
0x8d8f:	jg	0x8db0


0x8d80:	test	r13, r13
0x8d83:	jg	0x8db3


0x8cee:	test	r13, r13
0x8cf1:	jle	0x8d80


0x8be2:	mov	rcx, qword ptr [rsp + 8]
0x8be7:	xor	rcx, qword ptr fs:[0x28]
0x8bf0:	mov	eax, dword ptr [rsp + 4]
0x8bf4:	jne	0x8c3b


0x8bdc:	cmp	byte ptr [rdx + 0x30], 0x11
0x8be0:	je	0x8c00


0x8c20:	lea	rdi, [rsp + 4]
0x8c25:	mov	rsi, rbp
0x8c28:	call	0x8960


0x8a10:	lea	rax, [rbx + 0x70]
0x8a14:	lea	r14, [rsp + 0x20]
0x8a19:	sub	rbx, -0x80
0x8a1d:	xor	ecx, ecx
0x8a1f:	xor	edx, edx
0x8a21:	mov	rsi, rbx
0x8a24:	mov	r15, rax
0x8a27:	mov	r8, r14
0x8a2a:	mov	rdi, rax
0x8a2d:	mov	byte ptr [rsp + 0x28], 8
0x8a32:	mov	qword ptr [rsp + 8], rax
0x8a37:	call	0x87a0


0x899c:	mov	rax, qword ptr [rdx + 0x28]
0x89a0:	cmp	rax, 0x3f
0x89a4:	jg	0x8add


0x8813:	test	rcx, rcx
0x8816:	je	0x881b


0x8810:	mov	qword ptr [rdx], rax
0x8813:	test	rcx, rcx
0x8816:	je	0x881b


0x860c:	push	r13
0x860e:	push	r12
0x8610:	lea	rax, [r9 + r11]
0x8614:	push	rbp
0x8615:	push	rbx
0x8616:	mov	r12, rdx
0x8619:	mov	rbx, rdi
0x861c:	mov	rbp, rsi
0x861f:	sub	rsp, 8
0x8623:	mov	rcx, qword ptr [rdi + 8]
0x8627:	mov	r13, qword ptr [rdi]
0x862a:	mov	rdi, qword ptr [rdi + 0x10]
0x862e:	lea	rdx, [rax + rcx]
0x8632:	cmp	rdx, r13
0x8635:	jg	0x8760


0x8016:	push	r12
0x8018:	push	rbp
0x8019:	mov	r12, rsi
0x801c:	push	rbx
0x801d:	mov	rax, qword ptr [rdi + 8]
0x8021:	mov	rbx, rdi
0x8024:	mov	rsi, qword ptr [rdi]
0x8027:	lea	rcx, [rax + rdx*2]
0x802b:	cmp	rsi, rcx
0x802e:	jl	0x8178


0x7e16:	cmp	rbx, r10
0x7e19:	jl	0x7df0


0x7de6:	jmp	0x7f80


0x7fc0:	mov	rbx, -1
0x7fc7:	jmp	0x7e42


0x7e24:	mov	r11, qword ptr [rdi + 0xd8]
0x7e2b:	lea	rax, [rbx + rbx*4]
0x7e2f:	lea	rax, [r11 + rax*8]
0x7e33:	cmp	r8, qword ptr [rax + 8]
0x7e37:	mov	rax, -1
0x7e3e:	cmovne	rbx, rax
0x7e42:	mov	rax, r15
0x7e45:	xor	ebp, ebp
0x7e47:	cmp	rbp, rax
0x7e4a:	jge	0x7ea4


0x7d68:	mov	rax, qword ptr [rsi + 0x10]
0x7d6c:	mov	rcx, qword ptr [rax + 0x18]
0x7d70:	mov	qword ptr [rdx + 0x20], rcx
0x7d74:	mov	rdx, qword ptr [rsi + 0x20]
0x7d78:	mov	qword ptr [rax + 0x20], rdx
0x7d7c:	xor	eax, eax
0x7d7e:	ret	


0x7d40:	test	rdx, rdx
0x7d43:	je	0x7d4d


0x7cac:	xor	eax, eax
0x7cae:	ret	


0x7d0c:	movsxd	rdx, dword ptr [rsi + 0x28]
0x7d10:	mov	rcx, qword ptr [rax + rdx*8]
0x7d14:	mov	eax, 1
0x7d19:	shl	eax, cl
0x7d1b:	mov	qword ptr [rsi + 0x28], rcx
0x7d1f:	cdqe	
0x7d21:	or	qword ptr [rdi + 0xa0], rax
0x7d28:	xor	eax, eax
0x7d2a:	ret	


0x7cb0:	mov	rax, qword ptr [rsi + 8]
0x7cb4:	test	rax, rax
0x7cb7:	je	0x7cac


0x7c74:	mov	rax, qword ptr [rsi]
0x7c77:	nop	word ptr [rax + rax]
0x7c80:	mov	rcx, qword ptr [rax + rdx*8 + 8]
0x7c85:	mov	qword ptr [rax + rdx*8], rcx
0x7c89:	add	rdx, 1
0x7c8d:	cmp	rdx, qword ptr [rdi]
0x7c90:	jl	0x7c80


0x7af5:	lea	rcx, [rsi + rdi]
0x7af9:	shr	rcx, 1
0x7afc:	cmp	rdx, qword ptr [r8 + rcx*8]
0x7b00:	jle	0x7b18


0x7b1d:	xor	eax, eax
0x7b1f:	cmp	rdx, qword ptr [r8 + rsi*8]
0x7b23:	je	0x7b50


0x7abd:	test	rax, rax
0x7ac0:	jns	0x7aa0


0x7a4f:	sub	rcx, rsi
0x7a52:	lea	rsi, [rdx + rdi - 4]
0x7a57:	mov	edx, 2
0x7a5c:	jmp	0x7a6b


0x79cd:	mov	rdi, qword ptr [r12 + 0x28]
0x79d2:	call	0x18d0


0x79a3:	xor	ebx, ebx
0x79a5:	nop	dword ptr [rax]
0x79a8:	mov	rax, qword ptr [r12 + 0x28]
0x79ad:	mov	rbp, qword ptr [rax + rbx*8]
0x79b1:	add	rbx, 1
0x79b5:	mov	rdi, qword ptr [rbp + 0x20]
0x79b9:	call	0x18d0


0x782b:	xor	ebx, ebx
0x782d:	jmp	0x7834




0x7739:	mov	rax, qword ptr [r14 + 0x18]
0x773d:	mov	rcx, qword ptr [rax + r9*8]
0x7741:	mov	qword ptr [rax + r13*8], rcx
0x7745:	xor	eax, eax
0x7747:	jmp	0x7620


0x7546:	lea	rbx, [r13 + r13*2]
0x754b:	mov	rsi, qword ptr [rsi + 0x10]
0x754f:	shl	rbx, 3
0x7553:	add	rdi, rbx
0x7556:	cmp	rcx, 1
0x755a:	mov	r15, qword ptr [rsi]
0x755d:	mov	qword ptr [rdi + 8], 0
0x7565:	je	0x7680


0x72d6:	xor	ecx, ecx
0x72d8:	cmp	dword ptr [rbx + 0xb4], 1
0x72df:	setg	cl
0x72e2:	movzx	edx, byte ptr [rax + 0xa]
0x72e6:	shl	ecx, 4
0x72e9:	pxor	xmm0, xmm0
0x72ed:	and	edx, 0xffffffef
0x72f0:	or	edx, ecx
0x72f2:	mov	byte ptr [rax + 0xa], dl
0x72f5:	mov	qword ptr [r12 + rsi*8], -1
0x72fd:	mov	rax, qword ptr [rbx + 0x10]
0x7301:	lea	rax, [rax + rax*2]
0x7305:	lea	rax, [rbp + rax*8]
0x730a:	movups	xmmword ptr [rax], xmm0
0x730d:	mov	qword ptr [rax + 0x10], 0
0x7315:	mov	rax, qword ptr [rbx + 0x10]
0x7319:	lea	rdx, [rax + rax*2]
0x731d:	mov	rax, qword ptr [rbx + 0x30]
0x7321:	lea	rax, [rax + rdx*8]
0x7325:	movups	xmmword ptr [rax], xmm0
0x7328:	mov	qword ptr [rax + 0x10], 0
0x7330:	mov	rax, qword ptr [rbx + 0x10]
0x7334:	lea	rdx, [rax + 1]
0x7338:	mov	qword ptr [rbx + 0x10], rdx
0x733c:	add	rsp, 0x18
0x7340:	pop	rbx
0x7341:	pop	rbp
0x7342:	pop	r12
0x7344:	pop	r13
0x7346:	pop	r14
0x7348:	pop	r15
0x734a:	ret	


0x72e2:	movzx	edx, byte ptr [rax + 0xa]
0x72e6:	shl	ecx, 4
0x72e9:	pxor	xmm0, xmm0
0x72ed:	and	edx, 0xffffffef
0x72f0:	or	edx, ecx
0x72f2:	mov	byte ptr [rax + 0xa], dl
0x72f5:	mov	qword ptr [r12 + rsi*8], -1
0x72fd:	mov	rax, qword ptr [rbx + 0x10]
0x7301:	lea	rax, [rax + rax*2]
0x7305:	lea	rax, [rbp + rax*8]
0x730a:	movups	xmmword ptr [rax], xmm0
0x730d:	mov	qword ptr [rax + 0x10], 0
0x7315:	mov	rax, qword ptr [rbx + 0x10]
0x7319:	lea	rdx, [rax + rax*2]
0x731d:	mov	rax, qword ptr [rbx + 0x30]
0x7321:	lea	rax, [rax + rdx*8]
0x7325:	movups	xmmword ptr [rax], xmm0
0x7328:	mov	qword ptr [rax + 0x10], 0
0x7330:	mov	rax, qword ptr [rbx + 0x10]
0x7334:	lea	rdx, [rax + 1]
0x7338:	mov	qword ptr [rbx + 0x10], rdx
0x733c:	add	rsp, 0x18
0x7340:	pop	rbx
0x7341:	pop	rbp
0x7342:	pop	r12
0x7344:	pop	r13
0x7346:	pop	r14
0x7348:	pop	r15
0x734a:	ret	


0x7368:	mov	rdi, qword ptr [rdi]
0x736b:	mov	rsi, rbp
0x736e:	mov	qword ptr [rsp + 8], rdx
0x7373:	shl	rsi, 5
0x7377:	call	0x1b60


0x7442:	mov	rax, -1
0x7449:	jmp	0x733c


0x7248:	mov	rdi, qword ptr [rdi]
0x724b:	jmp	0x18d0


0x7242:	ret	


0x7190:	lea	esi, [rbp + 1]
0x7193:	mov	rdi, rbx
0x7196:	call	0x7020


0x71b9:	cmp	rax, qword ptr [rbx + 0x58]
0x71bd:	jge	0x719f


0x719f:	cmp	r12, rbp
0x71a2:	jl	0x71d0


0x6bd0:	cmp	byte ptr [rdi + 0x8c], 0
0x6bd7:	jne	0x6a4c


0x6a90:	lea	rax, [r14 + 0x20]
0x6a94:	mov	qword ptr [rsp + 8], rax
0x6a99:	mov	rax, rbx
0x6a9c:	sub	rax, r15
0x6a9f:	mov	qword ptr [rsp + 0x10], rax
0x6aa4:	lea	rax, [rsp + 0x44]
0x6aa9:	mov	qword ptr [rsp + 0x20], rax
0x6aae:	mov	rdx, qword ptr [r14 + 0x78]
0x6ab2:	mov	rax, qword ptr [r14 + 0x20]
0x6ab6:	test	rdx, rdx
0x6ab9:	mov	qword ptr [rsp + 0x48], rax
0x6abe:	jne	0x6dc9


0x6a55:	mov	qword ptr [r14 + 0x30], r15
0x6a59:	mov	qword ptr [r14 + 0x38], r13
0x6a5d:	xor	eax, eax
0x6a5f:	mov	rcx, qword ptr [rsp + 0x98]
0x6a67:	xor	rcx, qword ptr fs:[0x28]
0x6a70:	jne	0x6ffa


0x6910:	add	rsp, 0x68
0x6914:	pop	rbx
0x6915:	pop	rbp
0x6916:	pop	r12
0x6918:	pop	r13
0x691a:	pop	r14
0x691c:	pop	r15
0x691e:	ret	


0x69ee:	call	0x19e0


0x688f:	mov	rsi, qword ptr [rbx + 0x28]
0x6893:	add	rsi, rbp
0x6896:	add	rsi, qword ptr [rbx]
0x6899:	mov	rcx, r14
0x689c:	mov	rdi, r13
0x689f:	call	0x5f40


0x6970:	mov	ecx, dword ptr [rbx + 0x90]
0x6976:	xor	eax, eax
0x6978:	lea	rsi, [rsp + 0x10]
0x697d:	test	ecx, ecx
0x697f:	jg	0x69a1


0x18b0:	jmp	qword ptr [rip + 0x21752a]


0x65c1:	mov	qword ptr [rax], rbp
0x65c4:	add	qword ptr [rdi + 8], 1
0x65c9:	mov	eax, 1
0x65ce:	add	rsp, 8
0x65d2:	pop	rbx
0x65d3:	pop	rbp
0x65d4:	ret	


0x6610:	cmp	rdx, rsi
0x6613:	je	0x66a0


0x64f6:	mov	qword ptr [rbx + 0x40], rbp
0x64fa:	add	rsp, 8
0x64fe:	xor	eax, eax
0x6500:	pop	rbx
0x6501:	pop	rbp
0x6502:	ret	


0x6508:	mov	rdi, qword ptr [rbx + 8]
0x650c:	mov	rsi, rbp
0x650f:	call	0x1b60


0x64b4:	mov	rdi, qword ptr [rdi + 0x10]
0x64b8:	lea	rsi, [rsi*4]
0x64c0:	call	0x1b60


0x6520:	add	rsp, 8
0x6524:	mov	eax, 0xc
0x6529:	pop	rbx
0x652a:	pop	rbp
0x652b:	ret	


0x63dc:	mov	rax, qword ptr [rbx + 0x10]
0x63e0:	test	rax, rax
0x63e3:	jne	0x63d0


0x63d0:	mov	rbx, rax
0x63d3:	mov	rax, qword ptr [rbx + 8]
0x63d7:	test	rax, rax
0x63da:	jne	0x63d0


0x6390:	mov	eax, 1
0x6395:	ret	


0x6371:	xor	esi, esi
0x6373:	cmp	r10, r8
0x6376:	sete	sil
0x637a:	or	esi, 2
0x637d:	cmp	rax, r8
0x6380:	je	0x63a5


0x61c5:	mov	rax, qword ptr [r12 + 0x10]
0x61ca:	mov	rbp, qword ptr [rax + rbx*8]
0x61ce:	mov	rax, rbp
0x61d1:	shl	rax, 4
0x61d5:	add	rax, qword ptr [r14]
0x61d8:	movzx	edx, byte ptr [rax + 8]
0x61dc:	cmp	dl, 8
0x61df:	jne	0x61a8


0x6116:	or	byte ptr [rsi + 0x32], 8
0x611a:	xor	eax, eax
0x611c:	ret	


0x6003:	cmp	cl, 0x5c
0x6006:	je	0x6070


0x5fee:	cmp	rax, qword ptr [rsi + 0x30]
0x5ff2:	je	0x6003




0x5efa:	cmp	qword ptr [rdi + 0x48], 0
0x5eff:	jne	0x5eea


0x1bc0:	jmp	qword ptr [rip + 0x2173a2]


0x1b20:	jmp	qword ptr [rip + 0x2173f2]


0x1b40:	jmp	qword ptr [rip + 0x2173e2]






0x556a:	call	0x1ab0


0x5521:	sub	rsp, 8
0x5525:	call	0x55d0


0x5502:	mov	qword ptr [rsi], rax
0x5505:	mov	rsi, rax
0x5508:	jmp	0x53e0


0x54f7:	mov	rdx, rax
0x54fa:	shr	rdx, 1
0x54fd:	lea	rax, [rdx + rax + 1]
0x5502:	mov	qword ptr [rsi], rax
0x5505:	mov	rsi, rax
0x5508:	jmp	0x53e0


0x54b8:	xor	edx, edx
0x54ba:	mov	eax, 0x80
0x54bf:	xor	r8d, r8d
0x54c2:	div	r9
0x54c5:	test	rax, rax
0x54c8:	sete	r8b
0x54cc:	lea	rcx, [r8 + rax]
0x54d0:	jmp	0x5495


0x5495:	mov	rax, rcx
0x5498:	mul	r9
0x549b:	seto	dl
0x549e:	test	rax, rax
0x54a1:	movzx	edx, dl
0x54a4:	js	0x54ab


0x54ab:	sub	rsp, 8
0x54af:	call	0x55d0


0x546f:	mov	rax, rcx
0x5472:	shr	rax, 1
0x5475:	lea	rcx, [rax + rcx + 1]
0x547a:	mov	qword ptr [rsi], rcx
0x547d:	imul	rcx, r9
0x5481:	mov	rsi, rcx
0x5484:	jmp	0x53e0


0x5439:	jmp	0x53e0


0x5408:	call	0x18d0


0x53b9:	jmp	0x5380


0x52bc:	test	r11b, r11b
0x52bf:	jne	0x52e5


0x52b2:	add	r9, 1
0x52b6:	cmp	r9, 0xa
0x52ba:	jne	0x5290


0x52a6:	mov	rax, qword ptr [rax]
0x52a9:	test	rax, rax
0x52ac:	mov	qword ptr [r8 + r9*8], rax
0x52b0:	je	0x52bc


0x51eb:	call	0x4d60


0x51e1:	add	r9, 1
0x51e5:	cmp	r9, 0xa
0x51e9:	jne	0x51c0


0x51d5:	mov	rax, qword ptr [r11]
0x51d8:	test	rax, rax
0x51db:	mov	qword ptr [r8 + r9*8], rax
0x51df:	je	0x51eb


0x5190:	add	r9, 1
0x5194:	cmp	qword ptr [r8 + r9*8], 0
0x5199:	jne	0x5190


0x1c30:	jmp	qword ptr [rip + 0x21736a]


0x4c5a:	mov	qword ptr [rsp + 0x28], rsi
0x4c5f:	mov	qword ptr [rsp + 0x30], rdx
0x4c64:	mov	rcx, rsp
0x4c67:	mov	rdx, r8
0x4c6a:	mov	rsi, r9
0x4c6d:	call	0x4400


0x48a9:	lea	rbx, [rip + 0x214820]
0x48b0:	cmp	r12, rbx
0x48b3:	je	0x48c4


0x4892:	call	0x18d0




0x46ae:	mov	qword ptr [rdi + 0x28], rsi
0x46b2:	mov	qword ptr [rdi + 0x30], rdx
0x46b6:	ret	




0x1c20:	jmp	qword ptr [rip + 0x217372]


0x1a30:	jmp	qword ptr [rip + 0x21746a]


0x2f3b:	mov	rcx, qword ptr [rbp + 8]
0x2f3f:	cmp	rcx, qword ptr [rbp + 0x10]
0x2f43:	jae	0x2fb0




0x2591:	mov	rbx, qword ptr [rip + 0x216b58]
0x2598:	mov	byte ptr [rip + 0x216ba9], 1
0x259f:	lea	rbp, [rip + 0x216bba]
0x25a6:	lea	r12, [rip + 0x216f13]
0x25ad:	mov	esi, 2
0x25b2:	mov	rdi, rbx
0x25b5:	call	0x2ec0


0x28e0:	mov	rdi, qword ptr [rsp + 8]
0x28e5:	lea	rsi, [rip + 0x11ba6]
0x28ec:	call	0x1bd0




0x24b0:	cmp	al, 0x61
0x24b2:	jne	0x24ac


0x2434:	cmp	al, 0x70
0x2436:	jne	0x24a8


0x23f3:	call	0x2340


0x23e7:	mov	rdi, qword ptr [rip + 0x216c1a]
0x23ee:	call	0x1c80


0x23b4:	pop	rbp
0x23b5:	jmp	rax


0x2363:	pop	rbp
0x2364:	jmp	rax


0x140f6:	sub	rsp, 8
0x140fa:	push	rbx
0x140fb:	push	r12
0x140fd:	push	r13
0x140ff:	jmp	0x140bf


0x140b6:	sub	rsp, 8
0x140ba:	push	rbx
0x140bb:	push	0
0x140bd:	push	0
0x140bf:	mov	rdi, rbp
0x140c2:	mov	r9, rdx
0x140c5:	mov	r8, rdx
0x140c8:	call	0xe500




0x13dac:	test	rbp, rbp
0x13daf:	mov	r14, rcx
0x13db2:	mov	rcx, r9
0x13db5:	je	0x13e70


0x13922:	test	rax, rax
0x13925:	js	0x13930


0x13ba0:	mov	r8, rdx
0x13ba3:	jmp	0x13947




0x1275b:	mov	r14, qword ptr [rsp]
0x1275f:	lea	rax, [r14 + 1]
0x12763:	mov	rdi, rax
0x12766:	mov	qword ptr [rbx + 8], rax
0x1276a:	mov	qword ptr [rsp + 0x28], rax
0x1276f:	shl	rdi, 4
0x12773:	call	0x1b00


0x12d96:	mov	dword ptr [rsp + 0x4c], 0xc
0x12d9e:	jmp	0x12a0c


0x19e0:	jmp	qword ptr [rip + 0x217492]


0x10850:	lea	rsi, [r14 + 1]
0x10854:	cmp	rsi, qword ptr [rbx + 0x58]
0x10858:	jge	0x10900


0x107d6:	mov	byte ptr [rbp + 8], 1
0x107da:	mov	qword ptr [rsp], rdx
0x107de:	call	0x1c70


0x108e0:	cmp	r12b, 0x5c
0x108e4:	je	0x10850


0x10747:	mov	rcx, qword ptr [rsi + 0x10]
0x1074b:	mov	ecx, dword ptr [rcx + r14*4]
0x1074f:	cmp	ecx, -1
0x10752:	je	0x10830


0x1054d:	movzx	r13d, byte ptr [rbp]
0x10552:	xor	r8d, r8d
0x10555:	jmp	0x10582


0x10668:	mov	eax, 7
0x1066d:	jmp	0x104e1


0x10521:	cmp	al, 0x16
0x10523:	jne	0x1052e


0xfcc8:	mov	rdi, qword ptr [rsp + 0x98]
0xfcd0:	xor	rdi, qword ptr fs:[0x28]
0xfcd9:	jne	0x1047b


0xfd58:	lea	rdi, [rsp + 0x5c]
0xfd5d:	mov	rdx, rbx
0xfd60:	mov	rsi, r12
0xfd63:	call	0x90f0


0xfd9f:	mov	rax, qword ptr [rsp + 8]
0xfda4:	xor	ebx, ebx
0xfda6:	mov	rsi, qword ptr [rax + 0xc8]
0xfdad:	mov	rdx, rsi
0xfdb0:	cmp	rbx, rdx
0xfdb3:	jge	0xfe13


0xe5a6:	mov	rax, qword ptr [rsp + 0x48]
0xe5ab:	mov	qword ptr [rsp + 0x98], 0
0xe5b7:	mov	rax, qword ptr [rax + 0x30]
0xe5bb:	cmp	rax, qword ptr [rsp + 0x270]
0xe5c3:	jae	0xe5e4


0xe584:	movzx	edx, byte ptr [rsi + 0x38]
0xe588:	test	dl, 8
0xe58b:	je	0xea20


0xe04c:	add	rsp, 0x38
0xe050:	pop	rbx
0xe051:	pop	rbp
0xe052:	pop	r12
0xe054:	pop	r13
0xe056:	pop	r14
0xe058:	pop	r15
0xe05a:	ret	


0xe1b7:	call	0x19e0


0xe1b0:	xor	ebp, ebp
0xe1b2:	jmp	0xe035


0xe15d:	lea	r14, [rbp + 0x10]
0xe161:	lea	r15, [rbp + 0x18]
0xe165:	mov	rcx, r12
0xe168:	mov	rdi, rbx
0xe16b:	mov	rdx, r15
0xe16e:	mov	rsi, r14
0xe171:	call	0x9770


0xe027:	cmp	qword ptr [r15 + 0x98], 0
0xe02f:	jne	0xe158


0xe100:	movdqu	xmm0, xmmword ptr [rax]
0xe104:	mov	rdi, rbx
0xe107:	mov	edx, dword ptr [rsi + 0xa0]
0xe10d:	lea	rsi, [r12 - 1]
0xe112:	movaps	xmmword ptr [rsp + 0x10], xmm0
0xe117:	mov	rax, qword ptr [rax + 0x10]
0xe11b:	mov	qword ptr [rsp + 0x20], rax
0xe120:	call	0x98c0


0xe079:	mov	r14, qword ptr [rdx + 0x50]
0xe07d:	lea	rdi, [rsp + 0x10]
0xe082:	mov	rdx, rax
0xe085:	mov	qword ptr [rsp], rdi
0xe089:	mov	rsi, r14
0xe08c:	call	0x8cd0


0xd7cf:	mov	ebp, dword ptr [rax + 8]
0xd7d2:	test	ebp, 0x3ff00
0xd7d8:	je	0xd820


0xd790:	mov	rdi, qword ptr [rsp + 0x48]
0xd795:	add	qword ptr [rsp], 1
0xd79a:	mov	rax, qword ptr [rsp]
0xd79e:	cmp	rax, qword ptr [rdi]
0xd7a1:	jge	0xda50


0xcd09:	add	rax, 0x10
0xcd0d:	mov	byte ptr [rbp - 0xc9], 0
0xcd14:	sub	rsp, rax
0xcd17:	lea	rax, [rsp + 0xf]
0xcd1c:	and	rax, 0xfffffffffffffff0
0xcd20:	mov	qword ptr [rbp - 0xc0], rax
0xcd27:	mov	rdx, qword ptr [rbp - 0xb8]
0xcd2e:	mov	rdi, qword ptr [rbp - 0xc0]
0xcd35:	mov	rsi, r13
0xcd38:	call	0x1ad0


0xd3f6:	mov	rdi, qword ptr [rbp - 0xb8]
0xd3fd:	call	0x1b00


0xca74:	mov	rbx, qword ptr [rsp + 0xc8]
0xca7c:	xor	rbx, qword ptr fs:[0x28]
0xca85:	jne	0xcc3c


0xcbb0:	mov	rax, qword ptr [rsp + 0x60]
0xcbb5:	lea	rsi, [r14*8]
0xcbbd:	mov	rdi, qword ptr [rax + 0x10]
0xcbc1:	call	0x1b60


0xc3dc:	cmp	al, 0xdf
0xc3de:	movzx	edx, byte ptr [rdx + r8 + 1]
0xc3e4:	ja	0xc44e


0xc1f4:	add	rsp, 0x178
0xc1fb:	pop	rbx
0xc1fc:	pop	rbp
0xc1fd:	pop	r12
0xc1ff:	pop	r13
0xc201:	pop	r14
0xc203:	pop	r15
0xc205:	ret	


0xc282:	call	0x19e0


0xbe3e:	mov	rax, qword ptr [rsp + 0x28]
0xbe43:	mov	rdi, qword ptr [rsp]
0xbe47:	mov	rax, qword ptr [rax]
0xbe4a:	mov	r12, qword ptr [rax + rdi*8]
0xbe4e:	mov	rax, qword ptr [rsp + 8]
0xbe53:	mov	rcx, qword ptr [rax]
0xbe56:	mov	rax, r12
0xbe59:	shl	rax, 4
0xbe5d:	mov	qword ptr [rsp + 0x10], rax
0xbe62:	lea	rsi, [rcx + rax]
0xbe66:	movzx	eax, byte ptr [rsi + 8]
0xbe6a:	cmp	eax, 1
0xbe6d:	mov	edx, eax
0xbe6f:	jne	0xbe00


0x1a90:	jmp	qword ptr [rip + 0x21743a]


0xb321:	lea	r12, [rip + 0xa579]
0xb328:	mov	rcx, qword ptr [r13]
0xb32c:	cmp	qword ptr [r8], rcx
0xb32f:	mov	rax, qword ptr [rdx]
0xb332:	je	0xb449


0xb416:	lea	rdi, [rip + 0xa490]
0xb41d:	mov	ecx, 6
0xb422:	mov	rsi, r9
0xb425:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]






0xa3e0:	add	rbx, 1
0xa3e4:	cmp	r10, rbx
0xa3e7:	jle	0xa4c0


0xa3fa:	mov	rdx, rax
0xa3fd:	shl	rdx, 4
0xa401:	add	rdx, qword ptr [r12]
0xa405:	test	byte ptr [rdx + 8], 8
0xa409:	je	0xa3e0


0x9d48:	cmp	byte ptr [rbx + 0x8b], 0
0x9d4f:	jne	0xa100


0x9cae:	cmp	byte ptr [rbx + 0x88], 0
0x9cb5:	mov	rdi, rbx
0x9cb8:	je	0x9d38


0x9d60:	test	dl, dl
0x9d62:	jne	0xa20d


0x9c43:	test	dl, dl
0x9c45:	jne	0x9e58


0x9cf0:	mov	rax, qword ptr [rbx]
0x9cf3:	mov	qword ptr [rbx + 8], rax
0x9cf7:	jmp	0x9c26


0x9a5c:	pop	rbx
0x9a5d:	ret	


0x9a11:	mov	rsi, rdx
0x9a14:	mov	edx, dword ptr [rdi + 0xa0]
0x9a1a:	shr	ebx, 8
0x9a1d:	call	0x98c0


0x9a64:	xor	eax, eax
0x9a66:	cmp	byte ptr [rsi], cl
0x9a68:	je	0x9a00


0x9a70:	xor	eax, eax
0x9a72:	ret	


0x99e0:	cmp	cl, 0xa
0x99e3:	je	0x9aa8


0x99ce:	cmp	al, 7
0x99d0:	jne	0x9a70


0x9912:	add	rsp, 8
0x9916:	pop	rbx
0x9917:	pop	rbp
0x9918:	ret	


0x9930:	mov	rax, qword ptr [rdi + 8]
0x9934:	mov	rcx, qword ptr [rdi + 0x80]
0x993b:	movzx	eax, byte ptr [rax + rsi]
0x993f:	mov	rdx, rax
0x9942:	sar	rax, 6
0x9946:	mov	rcx, qword ptr [rcx + rax*8]
0x994a:	mov	eax, 1
0x994f:	bt	rcx, rdx
0x9953:	jb	0x9912


0x98e1:	mov	rax, qword ptr [rdi + 0x10]
0x98e5:	jmp	0x98fa


0x97c6:	mov	rax, qword ptr [rax]
0x97c9:	cmp	rax, 0x3f
0x97cd:	jg	0x97a0


0x97a0:	add	rbx, 1
0x97a4:	cmp	rbx, qword ptr [r12]
0x97a8:	jge	0x9850


0x9440:	lea	rdx, [rsi + rcx]
0x9444:	mov	rax, rdx
0x9447:	shr	rax, 0x3f
0x944b:	add	rax, rdx
0x944e:	sar	rax, 1
0x9451:	lea	rdx, [rax + rax*4]
0x9455:	mov	r9, rax
0x9458:	cmp	r12, qword ptr [r8 + rdx*8 + 8]
0x945d:	jg	0x94c0


0x94b8:	mov	r9, rcx
0x94bb:	mov	rcx, rdx
0x94be:	nop	
0x94c0:	lea	rsi, [r9 + 1]
0x94c4:	mov	rdx, rcx
0x94c7:	jmp	0x940d


0x94a3:	add	rsp, 0x78
0x94a7:	pop	rbx
0x94a8:	pop	rbp
0x94a9:	pop	r12
0x94ab:	pop	r13
0x94ad:	pop	r14
0x94af:	pop	r15
0x94b1:	ret	


0x9769:	call	0x19e0


0x9487:	cmp	rsi, -1
0x948b:	jne	0x94d0


0x9399:	mov	qword ptr [rbx + r15*8], rdx
0x939d:	add	r15, 1
0x93a1:	cmp	rbp, r15
0x93a4:	jne	0x938c


0x9340:	test	rdx, rdx
0x9343:	je	0x9383


0x9186:	mov	esi, 1
0x918b:	mov	edi, 0x70
0x9190:	call	0x1ab0


0x9153:	mov	r11, qword ptr [rax + 0x10]
0x9157:	xor	r9d, r9d
0x915a:	nop	word ptr [rax + rax]
0x9160:	mov	rbx, qword ptr [r11 + r9*8]
0x9164:	cmp	qword ptr [rbx], rbp
0x9167:	jne	0x917d


0x9120:	add	rbp, qword ptr [rax]
0x9123:	add	rax, 8
0x9127:	cmp	rcx, rax
0x912a:	jne	0x9120


0x8ef0:	mov	esi, 1
0x8ef5:	mov	edi, 0x70
0x8efa:	call	0x1ab0


0x8e99:	mov	rbx, qword ptr [rax + 0x10]
0x8e9d:	xor	r10d, r10d
0x8ea0:	mov	r9d, ecx
0x8ea3:	jmp	0x8eb1


0x8e60:	add	r12, qword ptr [rax]
0x8e63:	add	rax, 8
0x8e67:	cmp	r10, rax
0x8e6a:	jne	0x8e60


0x8db0:	mov	rsi, rdx
0x8db3:	pop	rbx
0x8db4:	pop	rbp
0x8db5:	pop	r12
0x8db7:	pop	r13
0x8db9:	pop	r14
0x8dbb:	jmp	0x8c40


0x8db3:	pop	rbx
0x8db4:	pop	rbp
0x8db5:	pop	r12
0x8db7:	pop	r13
0x8db9:	pop	r14
0x8dbb:	jmp	0x8c40


0x8cf7:	mov	r14, qword ptr [rdx + 8]
0x8cfb:	test	r14, r14
0x8cfe:	jle	0x8db3


0x8bf6:	add	rsp, 0x18
0x8bfa:	pop	rbx
0x8bfb:	pop	rbp
0x8bfc:	ret	


0x8c3b:	call	0x19e0


0x8c00:	lea	rdi, [rsp + 4]
0x8c05:	mov	rsi, rbp
0x8c08:	call	0x8960


0x89aa:	mov	rdx, qword ptr [rbx + 0xa0]
0x89b1:	bt	rdx, rax
0x89b5:	jae	0x8add


0x8add:	mov	rdi, qword ptr [rsp + 0x38]
0x8ae2:	xor	rdi, qword ptr fs:[0x28]
0x8aeb:	mov	rax, rbp
0x8aee:	jne	0x8b92


0x881b:	add	rsp, 0x20
0x881f:	pop	rbx
0x8820:	ret	


0x8818:	mov	qword ptr [rcx], rax
0x881b:	add	rsp, 0x20
0x881f:	pop	rbx
0x8820:	ret	


0x863b:	lea	rsi, [rcx + r9]
0x863f:	mov	r13, qword ptr [rbp + 0x10]
0x8643:	mov	rdx, qword ptr [r12 + 0x10]
0x8648:	sub	r9, 1
0x864c:	sub	rcx, 1
0x8650:	add	rsi, r11
0x8653:	sub	r11, 1
0x8657:	mov	rax, qword ptr [r13 + r9*8]
0x865c:	mov	r8, qword ptr [rdx + r11*8]
0x8660:	cmp	rax, r8
0x8663:	je	0x8676


0x8760:	add	r13, rax
0x8763:	lea	rsi, [r13*8]
0x876b:	call	0x1b60


0x8178:	add	rdx, rsi
0x817b:	mov	rdi, qword ptr [rdi + 0x10]
0x817f:	lea	rbp, [rdx + rdx]
0x8183:	shl	rdx, 4
0x8187:	mov	rsi, rdx
0x818a:	call	0x1b60


0x8034:	test	rax, rax
0x8037:	je	0x81b0


0x7df0:	lea	r11, [rbx + r10]
0x7df4:	mov	rax, r11
0x7df7:	shr	rax, 0x3f
0x7dfb:	add	rax, r11
0x7dfe:	sar	rax, 1
0x7e01:	lea	r11, [rax + rax*4]
0x7e05:	mov	r14, rax
0x7e08:	cmp	qword ptr [r13 + r11*8 + 8], r8
0x7e0d:	jl	0x7f90


0x7f80:	mov	r14, r10
0x7f83:	mov	r10, rbp
0x7f86:	nop	word ptr cs:[rax + rax]
0x7f90:	lea	rbx, [r14 + 1]
0x7f94:	mov	rbp, r10
0x7f97:	jmp	0x7dbe


0x7e42:	mov	rax, r15
0x7e45:	xor	ebp, ebp
0x7e47:	cmp	rbp, rax
0x7e4a:	jge	0x7ea4


0x7e4c:	lea	r11, [rbp + rax]
0x7e51:	mov	r10, r11
0x7e54:	shr	r10, 0x3f
0x7e58:	add	r10, r11
0x7e5b:	mov	r11, qword ptr [rdi + 0xd8]
0x7e62:	sar	r10, 1
0x7e65:	lea	r13, [r10 + r10*4]
0x7e69:	cmp	r12, qword ptr [r11 + r13*8 + 8]
0x7e6e:	jle	0x7e9f


0x7ea4:	cmp	r15, rbp
0x7ea7:	jle	0x7fd0


0x7d4d:	mov	rax, qword ptr [rsi + 0x10]
0x7d51:	test	rax, rax
0x7d54:	je	0x7d5e


0x7d45:	mov	rax, qword ptr [rsi + 0x20]
0x7d49:	mov	qword ptr [rdx + 0x20], rax
0x7d4d:	mov	rax, qword ptr [rsi + 0x10]
0x7d51:	test	rax, rax
0x7d54:	je	0x7d5e


0x7cb9:	cmp	byte ptr [rax + 0x30], 0x11
0x7cbd:	jne	0x7cac


0x7c80:	mov	rcx, qword ptr [rax + rdx*8 + 8]
0x7c85:	mov	qword ptr [rax + rdx*8], rcx
0x7c89:	add	rdx, 1
0x7c8d:	cmp	rdx, qword ptr [rdi]
0x7c90:	jl	0x7c80


0x7b18:	cmp	rsi, rcx
0x7b1b:	jb	0x7b08


0x7b02:	jmp	0x7b30


0x7b50:	lea	rax, [rsi + 1]
0x7b54:	ret	


0x7ac2:	mov	eax, 1
0x7ac7:	ret	


0x7aa0:	mov	rcx, qword ptr [rdi + 0x10]
0x7aa4:	mov	r8, qword ptr [rcx + rdx]
0x7aa8:	mov	rcx, qword ptr [rsi + 0x10]
0x7aac:	mov	rcx, qword ptr [rcx + rdx]
0x7ab0:	sub	rdx, 8
0x7ab4:	cmp	r8, rcx
0x7ab7:	jne	0x7ad0


0x7a6b:	cmp	rdx, rcx
0x7a6e:	mov	eax, edx
0x7a70:	jne	0x7a60


0x7834:	mov	rax, rbx
0x7837:	add	rbx, 1
0x783b:	shl	rax, 4
0x783f:	add	rdi, rax
0x7842:	call	0x7230


0x7620:	add	rsp, 0x18
0x7624:	pop	rbx
0x7625:	pop	rbp
0x7626:	pop	r12
0x7628:	pop	r13
0x762a:	pop	r14
0x762c:	pop	r15
0x762e:	ret	


0x7680:	cmp	r9, qword ptr [rsp + 8]
0x7685:	jne	0x7690


0x756b:	mov	rdx, qword ptr [r14 + 0x10]
0x756f:	lea	rsi, [rdx - 1]
0x7573:	mov	rax, rsi
0x7576:	shl	rax, 4
0x757a:	add	rax, r8
0x757d:	test	byte ptr [rax + 0xa], 4
0x7581:	je	0x7630


0x733c:	add	rsp, 0x18
0x7340:	pop	rbx
0x7341:	pop	rbp
0x7342:	pop	r12
0x7344:	pop	r13
0x7346:	pop	r14
0x7348:	pop	r15
0x734a:	ret	


0x71bf:	lea	esi, [rbp + 1]
0x71c2:	mov	rdi, rbx
0x71c5:	call	0x7020


0x71d0:	mov	rax, qword ptr [rbx + 0xb8]
0x71d7:	mov	rdx, rbp
0x71da:	xor	esi, esi
0x71dc:	sub	rdx, r12
0x71df:	shl	rdx, 3
0x71e3:	lea	rdi, [rax + r12*8 + 8]
0x71e8:	call	0x1a60


0x71a4:	xor	eax, eax
0x71a6:	pop	rbx
0x71a7:	pop	rbp
0x71a8:	pop	r12
0x71aa:	ret	


0x6bdd:	cmp	r15, rbx
0x6be0:	jge	0x6d78


0x6ac4:	mov	rbp, qword ptr [r14 + 0x28]
0x6ac8:	add	rbp, r13
0x6acb:	add	rbp, qword ptr [r14]
0x6ace:	mov	qword ptr [rsp + 0x18], rbp
0x6ad3:	mov	rcx, qword ptr [rsp + 8]
0x6ad8:	mov	rdx, qword ptr [rsp + 0x10]
0x6add:	mov	rsi, qword ptr [rsp + 0x18]
0x6ae2:	mov	rdi, qword ptr [rsp + 0x20]
0x6ae7:	call	0x5f40


0x6dc9:	mov	eax, dword ptr [r14 + 0x90]
0x6dd0:	test	eax, eax
0x6dd2:	jle	0x6ff0


0x6a76:	add	rsp, 0xa8
0x6a7d:	pop	rbx
0x6a7e:	pop	rbp
0x6a7f:	pop	r12
0x6a81:	pop	r13
0x6a83:	pop	r14
0x6a85:	pop	r15
0x6a87:	ret	


0x6ffa:	call	0x19e0


0x6981:	jmp	0x6899


0x69a1:	mov	rcx, qword ptr [rbx]
0x69a4:	add	rcx, rbp
0x69a7:	add	rcx, rax
0x69aa:	add	rcx, qword ptr [rbx + 0x28]
0x69ae:	movzx	ecx, byte ptr [rcx]
0x69b1:	movzx	ecx, byte ptr [rdi + rcx]
0x69b5:	mov	rdi, qword ptr [rbx + 8]
0x69b9:	add	rdi, rbp
0x69bc:	mov	byte ptr [rdi + rax], cl
0x69bf:	mov	byte ptr [rsi + rax], cl
0x69c2:	lea	ecx, [rax + 1]
0x69c5:	cmp	ecx, dword ptr [rbx + 0x90]
0x69cb:	jl	0x6990




0x66a0:	lea	rdx, [rsi + rsi]
0x66a4:	shl	rsi, 4
0x66a8:	mov	qword ptr [rdi], rdx
0x66ab:	mov	rdi, rax
0x66ae:	call	0x1b60


0x6619:	cmp	qword ptr [rax], rbp
0x661c:	lea	rdx, [rsi*8]
0x6624:	jle	0x6660


0x63e5:	mov	rsi, rbx
0x63e8:	mov	rdi, rbp
0x63eb:	call	r12


0x63a5:	mov	r8, r9
0x63a8:	jmp	0x6120


0x6382:	xor	eax, eax
0x6384:	cmp	r10, r8
0x6387:	je	0x63a0


0x61e1:	mov	ecx, dword ptr [rsp + 0xc]
0x61e5:	test	ecx, ecx
0x61e7:	je	0x61b6


0x61a8:	cmp	dl, 9
0x61ab:	je	0x6300


0x6070:	and	edx, 1
0x6073:	je	0x607f


0x6008:	cmp	cl, 0x5b
0x600b:	je	0x6040


0x5ff4:	mov	r9, qword ptr [rsi + 0x10]
0x5ff8:	cmp	dword ptr [r9 + rax*4], -1
0x5ffd:	je	0x607f


0x5f01:	push	r12
0x5f03:	push	rbp
0x5f04:	mov	r12d, edx
0x5f07:	push	rbx
0x5f08:	mov	rbp, rsi
0x5f0b:	mov	rbx, rdi
0x5f0e:	call	0x1ae0








0x54a6:	test	rdx, rdx
0x54a9:	je	0x547a


0x52c1:	call	0x4d60


0x52e5:	mov	dword ptr [rsp + 8], r10d
0x52ea:	jmp	0x52c1


0x5290:	cmp	r10d, 0x2f
0x5294:	ja	0x52ec


0x51c0:	mov	eax, dword ptr [r10]
0x51c3:	cmp	eax, 0x2f
0x51c6:	ja	0x520a




0x48c4:	pop	rbx
0x48c5:	mov	dword ptr [rip + 0x2147e9], 1
0x48cf:	pop	rbp
0x48d0:	pop	r12
0x48d2:	ret	


0x48b5:	mov	rdi, r12
0x48b8:	call	0x18d0






0x2f45:	lea	rax, [rcx + 1]
0x2f49:	mov	qword ptr [rbp + 8], rax
0x2f4d:	movzx	r12d, byte ptr [rcx]
0x2f51:	mov	ecx, r12d
0x2f54:	cmp	rbx, r8
0x2f57:	mov	rsi, rbx
0x2f5a:	jne	0x2f30


0x2fb0:	mov	rdi, rbp
0x2fb3:	mov	byte ptr [rsp + 0xf], dl
0x2fb7:	mov	qword ptr [rsp], r8
0x2fbb:	call	0x18c0


0x1bd0:	jmp	qword ptr [rip + 0x21739a]


0x24ac:	xor	eax, eax
0x24ae:	ret	


0x2438:	push	rbp
0x2439:	lea	rax, [rcx + 1]
0x243d:	push	rbx
0x243e:	mov	rbx, rsi
0x2441:	sub	rsp, 8
0x2445:	mov	qword ptr [rip + 0x216cb4], rax
0x244c:	mov	qword ptr [rdi], rcx
0x244f:	mov	rbp, qword ptr [rip + 0x216caa]
0x2456:	mov	qword ptr [rsi], 0
0x245d:	mov	qword ptr [rsi + 0x20], rdx
0x2461:	mov	qword ptr [rsi + 8], 0
0x2469:	mov	qword ptr [rsi + 0x28], 0
0x2471:	mov	qword ptr [rip + 0x21725c], 0x2c6
0x247c:	mov	rdi, rbp
0x247f:	call	0x19d0


0x24a8:	cmp	al, 0x74
0x24aa:	je	0x24b4


0x1c80:	jmp	qword ptr [rip + 0x217362]


0x140bf:	mov	rdi, rbp
0x140c2:	mov	r9, rdx
0x140c5:	mov	r8, rdx
0x140c8:	call	0xe500


0x13e70:	mov	r14, rsi
0x13e73:	xor	r13d, r13d
0x13e76:	jmp	0x13dc8


0x13dbb:	xor	r13d, r13d
0x13dbe:	test	rbx, rbx
0x13dc1:	mov	qword ptr [rsp + 8], rsi
0x13dc6:	jne	0x13e10


0x13930:	test	r8, r8
0x13933:	js	0x13c18


0x13927:	cmp	rcx, r8
0x1392a:	jg	0x13ba0


0x13947:	movzx	eax, byte ptr [r15 + 0x38]
0x1394c:	mov	r13d, eax
0x1394f:	shr	r13b, 5
0x13953:	mov	edi, r13d
0x13956:	and	edi, 3
0x13959:	cmp	r8, rbx
0x1395c:	mov	dword ptr [rsp + 0x2c], edi
0x13960:	jle	0x13971


0x12a0c:	mov	rdi, rbx
0x12a0f:	call	0x7810




0x1085e:	cmp	byte ptr [rbx + 0x8b], 0
0x10865:	jne	0x10cf0


0x10900:	mov	byte ptr [rbp + 8], 0x24
0x10904:	mov	eax, 1
0x10909:	jmp	0x107a4


0x1c70:	jmp	qword ptr [rip + 0x21734a]


0x108ea:	mov	rax, qword ptr [rbx + 0x10]
0x108ee:	mov	byte ptr [rbp + 8], 1
0x108f2:	mov	ecx, dword ptr [rax + r14*4]
0x108f6:	jmp	0x10766


0x10830:	or	r13d, 0x20
0x10834:	mov	byte ptr [rdi + 8], 1
0x10838:	mov	eax, 1
0x1083d:	mov	byte ptr [rdi + 0xa], r13b
0x10841:	jmp	0x107a4


0x10758:	cmp	r12b, 0x5c
0x1075c:	je	0x10850


0x10582:	cmp	al, 0x1e
0x10584:	movsxd	r14, r8d
0x10587:	je	0x105f0


0x104e1:	mov	rcx, qword ptr [rsp + 0x18]
0x104e6:	xor	rcx, qword ptr fs:[0x28]
0x104ef:	jne	0x106d8


0x10525:	test	r9b, r9b
0x10528:	je	0x10672


0x1052e:	movzx	eax, byte ptr [rbp]
0x10532:	mov	dword ptr [rbx], 0
0x10538:	mov	byte ptr [rbx + 8], al
0x1053b:	xor	eax, eax
0x1053d:	jmp	0x104e1


0xfcdf:	add	rsp, 0xa8
0xfce6:	pop	rbx
0xfce7:	pop	rbp
0xfce8:	pop	r12
0xfcea:	pop	r13
0xfcec:	pop	r14
0xfcee:	pop	r15
0xfcf0:	ret	


0x1047b:	call	0x19e0


0xfdb5:	lea	rax, [rbx + rdx]
0xfdb9:	mov	rcx, rax
0xfdbc:	shr	rcx, 0x3f
0xfdc0:	add	rcx, rax
0xfdc3:	mov	rax, qword ptr [rsp + 8]
0xfdc8:	sar	rcx, 1
0xfdcb:	mov	rdi, qword ptr [rax + 0xd8]
0xfdd2:	lea	rax, [rcx + rcx*4]
0xfdd6:	cmp	rbp, qword ptr [rdi + rax*8 + 8]
0xfddb:	jle	0xfe0e


0xfe13:	cmp	rsi, rbx
0xfe16:	jle	0xff10


0xe5c5:	mov	rcx, qword ptr [rsp + 0x270]
0xe5cd:	lea	rdx, [rcx - 1]
0xe5d1:	sub	rdx, rax
0xe5d4:	sub	qword ptr [rsp + 0x270], rdx
0xe5dc:	mov	qword ptr [rsp + 0x98], rdx
0xe5e4:	mov	rsi, qword ptr [rsp + 0x48]
0xe5e9:	cmp	qword ptr [rsi + 0x10], 0
0xe5ee:	je	0xf480


0xe5e4:	mov	rsi, qword ptr [rsp + 0x48]
0xe5e9:	cmp	qword ptr [rsi + 0x10], 0
0xe5ee:	je	0xf480


0xea20:	mov	qword ptr [rsp + 0x68], 0
0xea29:	jmp	0xe5a6


0xe591:	cmp	rbp, r8
0xe594:	je	0xea20


0xd820:	mov	rdi, qword ptr [r14 + 0xc8]
0xd827:	mov	rax, qword ptr [r14 + 0x98]
0xd82e:	xor	ecx, ecx
0xd830:	mov	r10, qword ptr [r14 + 8]
0xd834:	mov	r9, qword ptr [rsp + 8]
0xd839:	mov	qword ptr [rsp + 0x70], rdi
0xd83e:	mov	qword ptr [rsp + 0x50], rax
0xd843:	cmp	rcx, rdi
0xd846:	jge	0xd89b


0xd7da:	mov	edx, dword ptr [r14 + 0xa0]
0xd7e1:	mov	rsi, qword ptr [rsp + 8]
0xd7e6:	mov	rdi, r14
0xd7e9:	call	0x98c0


0xca8b:	add	rsp, 0xd8
0xca92:	pop	rbx
0xca93:	pop	rbp
0xca94:	pop	r12
0xca96:	pop	r13
0xca98:	pop	r14
0xca9a:	pop	r15
0xca9c:	ret	


0xcc3c:	call	0x19e0


0xc3e6:	add	edx, -0x80
0xc3e9:	mov	ebp, 2
0xc3ee:	cmp	dl, 0x3f
0xc3f1:	ja	0xc380


0xc44e:	cmp	al, 0xef
0xc450:	ja	0xc498


0xbe71:	movzx	r13d, byte ptr [rsi]
0xbe75:	test	ebx, ebx
0xbe77:	mov	byte ptr [rbp + r13], 1
0xbe7d:	je	0xbe90


0xbe00:	cmp	eax, 3
0xbe03:	je	0xc0f6




0xb425:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb427:	mov	rcx, qword ptr [r13]
0xb42b:	seta	al
0xb42e:	sbb	al, 0
0xb430:	test	al, al
0xb432:	lea	rax, [rip + 0xa468]
0xb439:	cmove	r12, rax
0xb43d:	cmp	qword ptr [r8], rcx
0xb440:	mov	rax, qword ptr [rdx]
0xb443:	jne	0xb338


0xa4c0:	xor	r9d, r9d
0xa4c3:	test	r10, r10
0xa4c6:	lea	r11, [rsp + 0x30]
0xa4cb:	jle	0xa51c


0xa40b:	lea	r9, [rax + rax*2]
0xa40f:	mov	rcx, qword ptr [r12 + 0x28]
0xa414:	lea	r11, [rbp + 0x10]
0xa418:	mov	rdi, r10
0xa41b:	shl	r9, 3
0xa41f:	mov	rsi, r11
0xa422:	add	rcx, r9
0xa425:	mov	r15, qword ptr [rcx + 0x10]
0xa429:	mov	qword ptr [rsp + 8], rcx
0xa42e:	mov	r8, qword ptr [r15]
0xa431:	mov	rdx, r8
0xa434:	mov	qword ptr [rsp], r8
0xa438:	call	0x7ae0


0x9d55:	mov	qword ptr [rbx + 0x30], rax
0x9d59:	jmp	0x9cc3


0xa100:	cmp	byte ptr [rbx + 0x88], 0
0xa107:	jne	0xa200


0x9d38:	call	0x6830


0x9cba:	call	0x6a00


0x9d68:	movsxd	rdx, dword ptr [rbx + 0x90]
0x9d6f:	mov	qword ptr [rbx + 0x30], 0
0x9d77:	mov	r11, qword ptr [rbx + 0x28]
0x9d7b:	cmp	edx, 1
0x9d7e:	jle	0xa168


0xa20d:	mov	rdx, qword ptr [rbx + 0x50]
0xa211:	mov	byte ptr [rbx + 0x8c], 0
0xa218:	add	rdx, rbp
0xa21b:	sub	rdx, r15
0xa21e:	mov	qword ptr [rbx + 0x58], rdx
0xa222:	mov	rdx, qword ptr [rbx + 0x60]
0xa226:	add	rdx, rbp
0xa229:	sub	rdx, r15
0xa22c:	mov	qword ptr [rbx + 0x68], rdx
0xa230:	jmp	0x9d68


0x9c4b:	lea	rsi, [rbp - 1]
0x9c4f:	mov	edx, r10d
0x9c52:	mov	rdi, rbx
0x9c55:	mov	qword ptr [rsp], r8
0x9c59:	call	0x98c0


0x9e58:	mov	r14, qword ptr [rbx + 0x18]
0x9e5c:	mov	rcx, r8
0x9e5f:	xor	esi, esi
0x9e61:	jmp	0x9e73


0x9a6a:	ret	


0x9aa8:	mov	rcx, qword ptr [rdi + 0x98]
0x9aaf:	xor	eax, eax
0x9ab1:	test	byte ptr [rcx + 0xd8], 0x40
0x9ab8:	jne	0x9a00


0x99e9:	test	cl, cl
0x99eb:	jne	0x9a00


0x99d6:	xor	eax, eax
0x99d8:	test	cl, cl
0x99da:	js	0x9a6a


0x9955:	xor	eax, eax
0x9957:	cmp	dl, 0xa
0x995a:	jne	0x9912


0x98fa:	mov	ebx, dword ptr [rax + rsi*4]
0x98fd:	cmp	ebx, -1
0x9900:	je	0x98f0


0x97cf:	mov	rsi, qword ptr [r13 + 0xa0]
0x97d6:	bt	rsi, rax
0x97da:	jae	0x97a0


0x945f:	mov	rcx, rax
0x9462:	cmp	rsi, rcx
0x9465:	jl	0x9440


0x94c0:	lea	rsi, [r9 + 1]
0x94c4:	mov	rdx, rcx
0x94c7:	jmp	0x940d


0x940d:	cmp	rsi, rdx
0x9410:	jge	0x9467


0x94d0:	lea	rax, [rbp + 0x10]
0x94d4:	mov	r13, qword ptr [rbx + 0x98]
0x94db:	mov	qword ptr [rsp], rax
0x94df:	lea	rax, [rsp + 0x4c]
0x94e4:	mov	qword ptr [rsp + 0x38], rax
0x94e9:	lea	rax, [rsp + 0x50]
0x94ee:	mov	qword ptr [rsp + 0x10], rax
0x94f3:	mov	rax, qword ptr [rsp + 0x30]
0x94f8:	lea	r15, [rcx + rax]
0x94fc:	jmp	0x95d8


0x9383:	add	r15, 1
0x9387:	cmp	rbp, r15
0x938a:	je	0x93a6


0x9345:	add	rdx, 8
0x9349:	add	rsi, 8
0x934d:	mov	rdi, r13
0x9350:	call	0x8cd0


0x9169:	lea	rdi, [rbx + 8]
0x916d:	mov	rsi, r14
0x9170:	call	0x7a80


0x917d:	add	r9, 1
0x9181:	cmp	r10, r9
0x9184:	jne	0x9160


0x8eb1:	mov	r14, qword ptr [rbx + r10*8]
0x8eb5:	cmp	qword ptr [r14], r12
0x8eb8:	jne	0x8ea8


0x8d04:	mov	r12, rdi
0x8d07:	lea	rdi, [r13 + r14]
0x8d0c:	mov	rbx, rdx
0x8d0f:	mov	rbp, rsi
0x8d12:	mov	qword ptr [r12], rdi
0x8d16:	shl	rdi, 3
0x8d1a:	call	0x1b00


0x89bb:	lea	rax, [rbx + 0x70]
0x89bf:	lea	r14, [rsp + 0x20]
0x89c4:	sub	rbx, -0x80
0x89c8:	xor	ecx, ecx
0x89ca:	xor	edx, edx
0x89cc:	mov	rsi, rbx
0x89cf:	mov	r15, rax
0x89d2:	mov	r8, r14
0x89d5:	mov	rdi, rax
0x89d8:	mov	byte ptr [rsp + 0x28], 8
0x89dd:	mov	qword ptr [rsp + 8], rax
0x89e2:	call	0x87a0


0x8af4:	add	rsp, 0x48
0x8af8:	pop	rbx
0x8af9:	pop	rbp
0x8afa:	pop	r12
0x8afc:	pop	r13
0x8afe:	pop	r14
0x8b00:	pop	r15
0x8b02:	ret	


0x8b92:	call	0x19e0


0x8676:	test	rcx, rcx
0x8679:	jns	0x868a


0x8665:	jge	0x86c0


0x81b0:	mov	qword ptr [rbx + 8], rdx
0x81b4:	mov	rax, qword ptr [r12 + 8]
0x81b9:	mov	rdi, qword ptr [rbx + 0x10]
0x81bd:	mov	rsi, qword ptr [r12 + 0x10]
0x81c2:	lea	rdx, [rax*8]
0x81ca:	call	0x1ad0


0x803d:	lea	rbp, [rax + rdx*2]
0x8041:	sub	rdx, 1
0x8045:	sub	rax, 1
0x8049:	mov	rdi, rdx
0x804c:	not	rdi
0x804f:	test	rdi, rdi
0x8052:	jns	0x8090


0x7f90:	lea	rbx, [r14 + 1]
0x7f94:	mov	rbp, r10
0x7f97:	jmp	0x7dbe


0x7e13:	mov	r10, rax
0x7e16:	cmp	rbx, r10
0x7e19:	jl	0x7df0


0x7dbe:	cmp	rbx, rbp
0x7dc1:	jge	0x7e1b


0x7e9f:	cmp	rbp, r10
0x7ea2:	jl	0x7e78


0x7e70:	jmp	0x7fa0


0x7fd0:	mov	rbp, -1
0x7fd7:	jmp	0x7ecc


0x7ead:	mov	r10, qword ptr [rdi + 0xd8]
0x7eb4:	lea	rax, [rbp + rbp*4]
0x7eb9:	lea	rax, [r10 + rax*8]
0x7ebd:	cmp	r12, qword ptr [rax + 8]
0x7ec1:	mov	rax, -1
0x7ec8:	cmovne	rbp, rax
0x7ecc:	cmp	qword ptr [rsi], 0
0x7ed0:	jle	0x7ff2


0x7d5e:	xor	eax, eax
0x7d60:	ret	


0x7d56:	mov	rdx, qword ptr [rsi + 0x20]
0x7d5a:	mov	qword ptr [rax + 0x20], rdx
0x7d5e:	xor	eax, eax
0x7d60:	ret	


0x7cbf:	mov	rcx, qword ptr [rax + 0x28]
0x7cc3:	mov	rax, qword ptr [rax + 8]
0x7cc7:	test	rax, rax
0x7cca:	mov	qword ptr [rsi + 8], rax
0x7cce:	je	0x7cd3


0x7b08:	lea	rax, [rsi + rcx]
0x7b0c:	shr	rax, 1
0x7b0f:	cmp	qword ptr [r8 + rax*8], rdx
0x7b13:	jl	0x7b40


0x7b30:	mov	rax, rcx
0x7b33:	mov	rcx, rdi
0x7b36:	nop	word ptr cs:[rax + rax]
0x7b40:	lea	rsi, [rax + 1]
0x7b44:	mov	rdi, rcx
0x7b47:	jmp	0x7af0


0x7ab9:	sub	rax, 1
0x7abd:	test	rax, rax
0x7ac0:	jns	0x7aa0


0x7ad0:	xor	eax, eax
0x7ad2:	ret	


0x7a72:	ret	


0x7a60:	add	rdx, 1
0x7a64:	cmp	dword ptr [rsi + rdx*4 - 4], -1
0x7a69:	jne	0x7a7d


0x7687:	cmp	r9, r13
0x768a:	jne	0x774c


0x7690:	mov	eax, dword ptr [rax + 8]
0x7693:	mov	rsi, r15
0x7696:	mov	rdi, r14
0x7699:	shr	eax, 8
0x769c:	and	eax, 0x3ff
0x76a1:	or	ebp, eax
0x76a3:	mov	edx, ebp
0x76a5:	call	0x7450


0x7630:	mov	edx, ebp
0x7632:	mov	rsi, r15
0x7635:	mov	rdi, r14
0x7638:	call	0x7450


0x7587:	test	rsi, rsi
0x758a:	jle	0x7630


0x1a60:	jmp	qword ptr [rip + 0x217452]


0x6be6:	lea	rax, [rdi + 0x20]
0x6bea:	mov	qword ptr [rsp + 8], rax
0x6bef:	lea	rax, [rsp + 0x44]
0x6bf4:	mov	qword ptr [rsp + 0x30], rax
0x6bf9:	lea	rax, [rsp + 0x48]
0x6bfe:	mov	qword ptr [rsp + 0x38], rax
0x6c03:	lea	rax, [rsp + 0x50]
0x6c08:	mov	qword ptr [rsp + 0x28], rax
0x6c0d:	nop	dword ptr [rax]
0x6c10:	mov	rbp, qword ptr [r14 + 0x28]
0x6c14:	mov	r13, r15
0x6c17:	add	rbp, r15
0x6c1a:	add	rbp, qword ptr [r14]
0x6c1d:	movzx	r12d, byte ptr [rbp]
0x6c22:	test	r12b, 0x80
0x6c26:	jne	0x6c3a


0x6d78:	mov	qword ptr [r14 + 0x30], r15
0x6d7c:	mov	qword ptr [r14 + 0x38], r15
0x6d80:	xor	eax, eax
0x6d82:	jmp	0x6a5f


0x6ff0:	lea	rcx, [rsp + 0x50]
0x6ff5:	jmp	0x6e0b


0x6dd8:	mov	rdi, qword ptr [r14 + 0x28]
0x6ddc:	lea	r11d, [rax - 1]
0x6de0:	lea	rcx, [rsp + 0x50]
0x6de5:	xor	eax, eax
0x6de7:	add	rdi, r13
0x6dea:	add	rdi, qword ptr [r14]
0x6ded:	jmp	0x6dfa


0x6899:	mov	rcx, r14
0x689c:	mov	rdi, r13
0x689f:	call	0x5f40


0x6990:	add	rax, 1
0x6994:	cmp	rdx, rax
0x6997:	je	0x6899


0x69cd:	jmp	0x6899


0x6660:	mov	rcx, qword ptr [rax + rdx - 8]
0x6665:	cmp	rbp, rcx
0x6668:	jge	0x6643


0x6626:	test	rsi, rsi
0x6629:	jle	0x6643


0x63a0:	mov	esi, 1
0x63a5:	mov	r8, r9
0x63a8:	jmp	0x6120


0x6389:	ret	


0x61b6:	add	rbx, 1
0x61ba:	cmp	qword ptr [r12 + 8], rbx
0x61bf:	jle	0x62e0


0x61e9:	cmp	qword ptr [rax], r15
0x61ec:	jne	0x61b6


0x6300:	mov	edx, dword ptr [rsp + 8]
0x6304:	test	edx, edx
0x6306:	je	0x61b6


0x61b1:	cmp	dl, 4
0x61b4:	je	0x6208


0x607f:	mov	byte ptr [rdi + 8], 1
0x6083:	mov	eax, 1
0x6088:	ret	


0x6075:	lea	rdx, [rax + 1]
0x6079:	cmp	rdx, qword ptr [rsi + 0x58]
0x607d:	jl	0x60c0


0x6040:	lea	rcx, [rax + 1]
0x6044:	cmp	rcx, qword ptr [rsi + 0x58]
0x6048:	jge	0x6090


0x600d:	cmp	cl, 0x5d
0x6010:	je	0x60b0


0x547a:	mov	qword ptr [rsi], rcx
0x547d:	imul	rcx, r9
0x5481:	mov	rsi, rcx
0x5484:	jmp	0x53e0


0x2f5c:	mov	rbx, qword ptr [r14]
0x2f5f:	mov	rsi, r14
0x2f62:	mov	rdi, r13
0x2f65:	mov	byte ptr [rsp + 0xf], dl
0x2f69:	mov	byte ptr [rsp], cl
0x2f6c:	call	0x54e0


0x2f30:	cmp	r12d, r15d
0x2f33:	lea	rbx, [rsi + 1]
0x2f37:	mov	byte ptr [rsi], cl
0x2f39:	je	0x2f96


0x18c0:	jmp	qword ptr [rip + 0x217522]




0x13dc8:	movzx	r8d, r8b
0x13dcc:	mov	rdx, r15
0x13dcf:	mov	rsi, r14
0x13dd2:	push	r8
0x13dd4:	push	qword ptr [rsp + 0x70]
0x13dd8:	mov	rdi, r12
0x13ddb:	mov	r9, qword ptr [rsp + 0x80]
0x13de3:	mov	r8, qword ptr [rsp + 0x70]
0x13de8:	call	0x138e0


0x13e10:	mov	rdi, r15
0x13e13:	mov	dword ptr [rsp + 0x1c], r8d
0x13e18:	mov	qword ptr [rsp + 0x10], r9
0x13e1d:	call	0x1b00


0x13c18:	movzx	eax, byte ptr [r15 + 0x38]
0x13c1d:	xor	r8d, r8d
0x13c20:	mov	r13d, eax
0x13c23:	shr	r13b, 5
0x13c27:	mov	edi, r13d
0x13c2a:	and	edi, 3
0x13c2d:	mov	dword ptr [rsp + 0x2c], edi
0x13c31:	jmp	0x13971


0x13939:	test	rax, rax
0x1393c:	jns	0x13947


0x13971:	test	al, 0x10
0x13973:	jne	0x13b40


0x13962:	cmp	qword ptr [r15 + 0x20], 0
0x13967:	je	0x13971


0x1086b:	movzx	edi, byte ptr [rdx + r14 + 1]
0x10871:	mov	r12d, edi
0x10874:	mov	dword ptr [rsp + 8], edi
0x10878:	cmp	eax, 1
0x1087b:	mov	byte ptr [rbp], r12b
0x1087f:	mov	byte ptr [rbp + 8], 1
0x10883:	jle	0x10cd0


0x10cf0:	cmp	eax, 1
0x10cf3:	jle	0x10d24


0x107a4:	mov	rdi, qword ptr [rsp + 0x28]
0x107a9:	xor	rdi, qword ptr fs:[0x28]
0x107b2:	jne	0x10dd8




0x10766:	mov	edi, ecx
0x10768:	mov	qword ptr [rsp + 8], rdx
0x1076d:	mov	dword ptr [rsp], ecx
0x10770:	call	0x1af0


0x10762:	mov	byte ptr [rdi + 8], 1
0x10766:	mov	edi, ecx
0x10768:	mov	qword ptr [rsp + 8], rdx
0x1076d:	mov	dword ptr [rsp], ecx
0x10770:	call	0x1af0


0x105f0:	cmp	byte ptr [r10 + 0x8b], 0
0x105f8:	je	0x10589


0x10589:	mov	rdx, qword ptr [r10 + 8]
0x1058d:	lea	rax, [r11 + 1]
0x10591:	mov	qword ptr [r10 + 0x48], rax
0x10595:	movzx	r9d, byte ptr [rdx + r11]
0x1059a:	cmp	rax, r12
0x1059d:	jge	0x10668


0x104f5:	add	rsp, 0x20
0x104f9:	pop	rbx
0x104fa:	pop	rbp
0x104fb:	pop	r12
0x104fd:	pop	r13
0x104ff:	pop	r14
0x10501:	ret	


0x106d8:	call	0x19e0


0x10672:	mov	rdi, rsp
0x10675:	mov	rdx, r8
0x10678:	mov	rsi, r10
0x1067b:	call	0x5fd0


0xfe0e:	cmp	rbx, rcx
0xfe11:	jl	0xfde8


0xfddd:	jmp	0xff17


0xff10:	xor	eax, eax
0xff12:	jmp	0xfcc8


0xfe1c:	lea	rax, [rbx + rbx*4]
0xfe20:	lea	rsi, [rax*8]
0xfe28:	mov	rax, qword ptr [rsp + 8]
0xfe2d:	mov	qword ptr [rsp + 0x40], rsi
0xfe32:	mov	rax, qword ptr [rax + 0xd8]
0xfe39:	cmp	rbp, qword ptr [rax + rsi + 8]
0xfe3e:	jne	0xff10


0xf480:	mov	dword ptr [rsp + 0x5c], 1
0xf488:	jmp	0xf079


0xe5f4:	mov	rdi, qword ptr [rsp + 0x38]
0xe5f9:	mov	rax, qword ptr [rdi + 0x48]
0xe5fd:	test	rax, rax
0xe600:	je	0xf480


0xe59a:	and	edx, 1
0xe59d:	cmove	rax, rdi
0xe5a1:	mov	qword ptr [rsp + 0x68], rax
0xe5a6:	mov	rax, qword ptr [rsp + 0x48]
0xe5ab:	mov	qword ptr [rsp + 0x98], 0
0xe5b7:	mov	rax, qword ptr [rax + 0x30]
0xe5bb:	cmp	rax, qword ptr [rsp + 0x270]
0xe5c3:	jae	0xe5e4


0xd848:	lea	rax, [rcx + rdi]
0xd84c:	mov	r11, qword ptr [r14 + 0xd8]
0xd853:	mov	rsi, rax
0xd856:	shr	rsi, 0x3f
0xd85a:	add	rsi, rax
0xd85d:	sar	rsi, 1
0xd860:	lea	rax, [rsi + rsi*4]
0xd864:	cmp	r9, qword ptr [r11 + rax*8 + 8]
0xd869:	jle	0xd896


0xd89b:	cmp	qword ptr [rsp + 0x70], rcx
0xd8a0:	jle	0xd8c6


0xc3f3:	jmp	0xc382


0xc452:	cmp	al, 0xe0
0xc454:	jne	0xc45f


0xc498:	cmp	al, 0xf7
0xc49a:	ja	0xc4b0


0xbe90:	mov	rax, qword ptr [rsp + 0x30]
0xbe95:	test	byte ptr [rax + 0x1a], 0x40
0xbe99:	je	0xbe27


0xbe7f:	call	0x1c60


0xc0f6:	mov	r13, rbp
0xc0f9:	xor	r12d, r12d
0xc0fc:	mov	qword ptr [rsp + 0x18], 0
0xc105:	mov	rax, qword ptr [rsp + 0x10]
0xc10a:	mov	rsi, qword ptr [rsp + 0x18]
0xc10f:	xor	r14d, r14d
0xc112:	mov	rax, qword ptr [rcx + rax]
0xc116:	mov	r15, qword ptr [rax + rsi]
0xc11a:	nop	word ptr [rax + rax]
0xc120:	bt	r15, r14
0xc124:	jae	0xc145


0xbe09:	cmp	eax, 6
0xbe0c:	je	0xbf98


0xa51c:	mov	rdi, qword ptr [rsp + 0x30]
0xa521:	call	0x18d0


0x9cc3:	mov	qword ptr [rbx + 0x48], 0
0x9ccb:	xor	eax, eax
0x9ccd:	mov	rcx, qword ptr [rsp + 0x38]
0x9cd2:	xor	rcx, qword ptr fs:[0x28]
0x9cdb:	jne	0xa32a


0xa10d:	mov	rcx, qword ptr [rbx + 0x78]
0xa111:	test	rcx, rcx
0xa114:	je	0x9cc3


0xa200:	mov	rdi, rbx
0xa203:	call	0x67c0


0xa168:	mov	rax, qword ptr [rbx]
0xa16b:	mov	rdx, qword ptr [rbx + 0x78]
0xa16f:	add	rax, rbp
0xa172:	test	rdx, rdx
0xa175:	movzx	eax, byte ptr [r11 + rax - 1]
0xa17b:	mov	qword ptr [rbx + 0x38], 0
0xa183:	je	0xa189


0x9d84:	cmp	byte ptr [rbx + 0x89], 0
0x9d8b:	jne	0xa048


0x9e73:	lea	rdx, [rsi + rcx]
0x9e77:	mov	rax, rdx
0x9e7a:	shr	rax, 0x3f
0x9e7e:	add	rax, rdx
0x9e81:	sar	rax, 1
0x9e84:	mov	rdx, qword ptr [r14 + rax*8]
0x9e88:	mov	r12, rax
0x9e8b:	cmp	rdx, rbp
0x9e8e:	jle	0x9e68


0x9abe:	ret	


0x99ed:	mov	rcx, qword ptr [rdi + 0x98]
0x99f4:	xor	eax, eax
0x99f6:	test	byte ptr [rcx + 0xd8], 0x80
0x99fd:	jne	0x9a6a


0x995c:	xor	eax, eax
0x995e:	cmp	byte ptr [rbp + 0x8d], 0
0x9965:	setne	al
0x9968:	add	rsp, 8
0x996c:	add	eax, eax
0x996e:	pop	rbx
0x996f:	pop	rbp
0x9970:	ret	


0x98f0:	sub	rsi, 1
0x98f4:	cmp	rsi, -1
0x98f8:	je	0x9920


0x9902:	cmp	byte ptr [rbp + 0x8e], 0
0x9909:	jne	0x9988


0x97dc:	mov	r8, qword ptr [r15 + 0xe8]
0x97e3:	cmp	r8, qword ptr [r15 + 0xf0]
0x97ea:	mov	r9, qword ptr [r15 + 0xf8]
0x97f1:	je	0x9868


0x95d8:	mov	r10, qword ptr [r15]
0x95db:	mov	r9, qword ptr [rbp + 8]
0x95df:	mov	rsi, qword ptr [rsp]
0x95e3:	mov	rdx, r10
0x95e6:	mov	rdi, r9
0x95e9:	call	0x7ae0


0x9160:	mov	rbx, qword ptr [r11 + r9*8]
0x9164:	cmp	qword ptr [rbx], rbp
0x9167:	jne	0x917d


0x8eba:	movzx	eax, byte ptr [r14 + 0x68]
0x8ebf:	and	eax, 0xf
0x8ec2:	cmp	eax, r9d
0x8ec5:	jne	0x8ea8


0x8ea8:	add	r10, 1
0x8eac:	cmp	r10, r11
0x8eaf:	je	0x8ef0


0x867b:	jmp	0x8698


0x868a:	mov	r10, qword ptr [rdi + rcx*8]
0x868e:	cmp	r10, r8
0x8691:	jg	0x8680


0x8667:	sub	r11, 1
0x866b:	js	0x86d0


0x86c0:	sub	r9, 1
0x86c4:	js	0x86d0


0x8054:	test	rax, rax
0x8057:	js	0x8090


0x8090:	test	rdx, rdx
0x8093:	jns	0x8128


0x7e78:	lea	r13, [rbp + r10]
0x7e7d:	mov	rax, r13
0x7e80:	shr	rax, 0x3f
0x7e84:	add	rax, r13
0x7e87:	sar	rax, 1
0x7e8a:	lea	r13, [rax + rax*4]
0x7e8e:	mov	r14, rax
0x7e91:	cmp	qword ptr [r11 + r13*8 + 8], r12
0x7e96:	jl	0x7fb0


0x7fa0:	mov	r14, r10
0x7fa3:	mov	r10, rax
0x7fa6:	nop	word ptr cs:[rax + rax]
0x7fb0:	lea	rbp, [r14 + 1]
0x7fb4:	mov	rax, r10
0x7fb7:	jmp	0x7e47


0x7ecc:	cmp	qword ptr [rsi], 0
0x7ed0:	jle	0x7ff2


0x7ff2:	xor	eax, eax
0x7ff4:	jmp	0x7f6e


0x7ed6:	mov	qword ptr [rsp + 0x30], rbp
0x7edb:	mov	qword ptr [rsp + 0x20], r9
0x7ee0:	mov	r13, rdi
0x7ee3:	mov	qword ptr [rsp + 0x18], r8
0x7ee8:	mov	qword ptr [rsp + 0x10], rcx
0x7eed:	xor	r14d, r14d
0x7ef0:	mov	qword ptr [rsp + 0x38], rsi
0x7ef5:	mov	qword ptr [rsp + 0x28], rbx
0x7efa:	mov	rbp, rdx
0x7efd:	mov	r15, r12
0x7f00:	mov	rax, qword ptr [rbp]
0x7f04:	mov	rdx, qword ptr [r13 + 0xd8]
0x7f0b:	mov	rdi, r13
0x7f0e:	mov	r9, qword ptr [rsp + 0x28]
0x7f13:	mov	r8, qword ptr [rsp + 0x18]
0x7f18:	mov	rcx, qword ptr [rsp + 0x10]
0x7f1d:	mov	rsi, qword ptr [rax + r14*8]
0x7f21:	lea	rax, [rsi + rsi*4]
0x7f25:	lea	rax, [rdx + rax*8]
0x7f29:	mov	rdx, qword ptr [rsp + 8]
0x7f2e:	mov	rax, qword ptr [rax]
0x7f31:	shl	rax, 4
0x7f35:	add	rax, qword ptr [rdx]
0x7f38:	mov	r12, qword ptr [rax]
0x7f3b:	mov	rdx, r12
0x7f3e:	call	0x6350


0x7cd3:	mov	rax, qword ptr [rdi + 0xe0]
0x7cda:	mov	rdx, qword ptr [rsi + 0x28]
0x7cde:	cmp	rcx, 0x3f
0x7ce2:	mov	rdx, qword ptr [rax + rdx*8]
0x7ce6:	mov	qword ptr [rax + rcx*8], rdx
0x7cea:	jg	0x7cac


0x7cd0:	mov	qword ptr [rax], rsi
0x7cd3:	mov	rax, qword ptr [rdi + 0xe0]
0x7cda:	mov	rdx, qword ptr [rsi + 0x28]
0x7cde:	cmp	rcx, 0x3f
0x7ce2:	mov	rdx, qword ptr [rax + rdx*8]
0x7ce6:	mov	qword ptr [rax + rcx*8], rdx
0x7cea:	jg	0x7cac


0x7b40:	lea	rsi, [rax + 1]
0x7b44:	mov	rdi, rcx
0x7b47:	jmp	0x7af0


0x7b15:	mov	rcx, rax
0x7b18:	cmp	rsi, rcx
0x7b1b:	jb	0x7b08


0x7af0:	cmp	rsi, rdi
0x7af3:	jae	0x7b1d


0x7a7d:	ret	


0x774c:	mov	rsi, r15
0x774f:	call	0x65a0


0x7590:	shl	rdx, 4
0x7594:	sub	r8, rax
0x7597:	mov	rcx, qword ptr [r14 + 0x20]
0x759b:	lea	r8, [r8 + rdx - 0x20]
0x75a0:	jmp	0x75ba




0x6c28:	mov	rdi, qword ptr [rsp + 8]
0x6c2d:	call	0x1c40


0x6c3a:	mov	rax, qword ptr [r14 + 0x20]
0x6c3e:	mov	rdi, qword ptr [rsp + 0x30]
0x6c43:	mov	rdx, rbx
0x6c46:	mov	rcx, qword ptr [rsp + 8]
0x6c4b:	sub	rdx, r15
0x6c4e:	mov	rsi, rbp
0x6c51:	mov	qword ptr [rsp + 0x10], rdx
0x6c56:	mov	qword ptr [rsp + 0x48], rax
0x6c5b:	mov	qword ptr [rsp + 0x20], rdi
0x6c60:	call	0x5f40


0x6a5f:	mov	rcx, qword ptr [rsp + 0x98]
0x6a67:	xor	rcx, qword ptr fs:[0x28]
0x6a70:	jne	0x6ffa


0x6e0b:	mov	qword ptr [rsp + 0x18], rcx
0x6e10:	jmp	0x6ad3


0x6dfa:	movzx	esi, byte ptr [rdi + rax]
0x6dfe:	cmp	r11, rax
0x6e01:	movzx	esi, byte ptr [rdx + rsi]
0x6e05:	mov	byte ptr [rcx + rax], sil
0x6e09:	jne	0x6def


0x699d:	mov	rdi, qword ptr [rbx + 0x78]
0x69a1:	mov	rcx, qword ptr [rbx]
0x69a4:	add	rcx, rbp
0x69a7:	add	rcx, rax
0x69aa:	add	rcx, qword ptr [rbx + 0x28]
0x69ae:	movzx	ecx, byte ptr [rcx]
0x69b1:	movzx	ecx, byte ptr [rdi + rcx]
0x69b5:	mov	rdi, qword ptr [rbx + 8]
0x69b9:	add	rdi, rbp
0x69bc:	mov	byte ptr [rdi + rax], cl
0x69bf:	mov	byte ptr [rsi + rax], cl
0x69c2:	lea	ecx, [rax + 1]
0x69c5:	cmp	ecx, dword ptr [rbx + 0x90]
0x69cb:	jl	0x6990


0x6643:	mov	qword ptr [rax + rdx], rbp
0x6647:	mov	eax, 1
0x664c:	add	qword ptr [rbx + 8], 1
0x6651:	jmp	0x65ce


0x662b:	add	rdx, rax
0x662e:	nop	
0x6630:	mov	rcx, qword ptr [rdx - 8]
0x6634:	sub	rdx, 8
0x6638:	mov	qword ptr [rdx + 8], rcx
0x663c:	cmp	rax, rdx
0x663f:	jne	0x6630


0x62e0:	mov	r15d, dword ptr [rsp + 0x20]
0x62e5:	add	rsp, 0x48
0x62e9:	mov	eax, r15d
0x62ec:	pop	rbx
0x62ed:	sar	eax, 1
0x62ef:	pop	rbp
0x62f0:	pop	r12
0x62f2:	pop	r13
0x62f4:	pop	r14
0x62f6:	pop	r15
0x62f8:	ret	


0x61ee:	add	rsp, 0x48
0x61f2:	mov	eax, 0xffffffff
0x61f7:	pop	rbx
0x61f8:	pop	rbp
0x61f9:	pop	r12
0x61fb:	pop	r13
0x61fd:	pop	r14
0x61ff:	pop	r15
0x6201:	ret	


0x630c:	cmp	qword ptr [rax], r15
0x630f:	jne	0x61b6


0x6208:	cmp	r10, -1
0x620c:	je	0x61b6


0x60c0:	mov	qword ptr [rsi + 0x48], rdx
0x60c4:	movzx	eax, byte ptr [r8 + rax + 1]
0x60ca:	mov	byte ptr [rdi + 8], 1
0x60ce:	mov	byte ptr [rdi], al
0x60d0:	mov	eax, 1
0x60d5:	ret	


0x604a:	movzx	eax, byte ptr [r8 + rax + 1]
0x6050:	cmp	al, 0x3a
0x6052:	mov	byte ptr [rdi], al
0x6054:	je	0x60f0


0x6090:	mov	byte ptr [rdi + 8], 1
0x6094:	mov	byte ptr [rdi], 0x5b
0x6097:	mov	eax, 1
0x609c:	ret	


0x60b0:	mov	byte ptr [rdi + 8], 0x15
0x60b4:	mov	eax, 1
0x60b9:	ret	


0x6016:	cmp	cl, 0x5e
0x6019:	je	0x60a0


0x2f96:	sub	rbx, r13
0x2f99:	mov	rax, r14
0x2f9c:	mov	qword ptr [r14 + 8], rbx
0x2fa0:	add	rsp, 0x18
0x2fa4:	pop	rbx
0x2fa5:	pop	rbp
0x2fa6:	pop	r12
0x2fa8:	pop	r13
0x2faa:	pop	r14
0x2fac:	pop	r15
0x2fae:	ret	




0x1393e:	cmp	rbx, r8
0x13941:	jle	0x13c18


0x13979:	test	r12, r12
0x1397c:	je	0x13b40


0x13b40:	mov	edi, 0x10
0x13b45:	mov	r14d, 1
0x13b4b:	mov	r13d, 1
0x13b51:	xor	r12d, r12d
0x13b54:	jmp	0x1399f


0x13969:	test	al, 8
0x1396b:	je	0x13b60


0x10cd0:	call	0x1c70


0x10889:	mov	rax, qword ptr [rbx + 0x10]
0x1088d:	mov	r8d, dword ptr [rax + rsi*4]
0x10891:	mov	edi, r8d
0x10894:	mov	dword ptr [rsp], r8d
0x10898:	call	0x1af0


0x10d24:	cmp	byte ptr [rbx + 0x8c], 0
0x10d2b:	mov	rcx, qword ptr [rbx]
0x10d2e:	mov	rdi, qword ptr [rbx + 0x28]
0x10d32:	je	0x10d78


0x10cf5:	mov	rcx, qword ptr [rbx + 0x10]
0x10cf9:	lea	rdi, [rsi*4]
0x10d01:	mov	r8d, dword ptr [rcx + rsi*4]
0x10d05:	cmp	r8d, -1
0x10d09:	je	0x10dbf


0x1af0:	jmp	qword ptr [rip + 0x21740a]


0x105fa:	cmp	byte ptr [r10 + 0x8c], 0
0x10602:	je	0x10698


0x105a3:	cmp	r13b, r9b
0x105a6:	jne	0x10560


0xfde8:	lea	rdx, [rbx + rcx]
0xfdec:	mov	rax, rdx
0xfdef:	shr	rax, 0x3f
0xfdf3:	add	rax, rdx
0xfdf6:	sar	rax, 1
0xfdf9:	lea	rdx, [rax + rax*4]
0xfdfd:	mov	r8, rax
0xfe00:	cmp	rbp, qword ptr [rdi + rdx*8 + 8]
0xfe05:	jg	0xff20


0xff17:	mov	r8, rcx
0xff1a:	mov	rcx, rdx
0xff1d:	nop	dword ptr [rax]
0xff20:	lea	rbx, [r8 + 1]
0xff24:	mov	rdx, rcx
0xff27:	jmp	0xfdb0


0xfe44:	cmp	rbx, -1
0xfe48:	je	0xff10


0xf079:	mov	rsi, qword ptr [rsp + 0x228]
0xf081:	xor	rsi, qword ptr fs:[0x28]
0xf08a:	mov	eax, dword ptr [rsp + 0x5c]
0xf08e:	jne	0xfc2b


0xe606:	mov	rdx, qword ptr [rdi + 0x50]
0xe60a:	test	rdx, rdx
0xe60d:	je	0xf480


0xd896:	cmp	rsi, rcx
0xd899:	jg	0xd870


0xd86b:	jmp	0xda38


0xd8c6:	mov	rax, qword ptr [rsp + 0x50]
0xd8cb:	cmp	qword ptr [r14 + 0xe8], 0
0xd8d3:	mov	rdx, qword ptr [rax]
0xd8d6:	mov	rax, qword ptr [rdx + rbx]
0xd8da:	mov	qword ptr [rsp + 0x58], rax
0xd8df:	jle	0xda9b


0xd8a2:	mov	rdx, qword ptr [r14 + 0xd8]
0xd8a9:	lea	rax, [rcx + rcx*4]
0xd8ad:	mov	rdi, qword ptr [rsp + 8]
0xd8b2:	lea	rax, [rdx + rax*8]
0xd8b6:	cmp	qword ptr [rax + 8], rdi
0xd8ba:	jne	0xd8c6


0xc382:	add	rsp, 8
0xc386:	mov	eax, ebp
0xc388:	pop	rbx
0xc389:	pop	rbp
0xc38a:	pop	r12
0xc38c:	pop	r13
0xc38e:	ret	


0xc456:	cmp	dl, 0x9f
0xc459:	jbe	0xc380


0xc45f:	mov	ebp, 3
0xc464:	movsxd	rdi, ebp
0xc467:	add	r8, rdi
0xc46a:	cmp	rcx, r8
0xc46d:	jl	0xc380


0xc49c:	cmp	al, 0xf0
0xc49e:	jne	0xc4a9


0xc4b0:	cmp	al, 0xfb
0xc4b2:	ja	0xc4c8


0xbe27:	mov	rdi, qword ptr [rsp + 0x20]
0xbe2c:	add	qword ptr [rsp], 1
0xbe31:	mov	rax, qword ptr [rsp]
0xbe35:	cmp	rax, qword ptr [rdi]
0xbe38:	jge	0xc1dd


0xbe9b:	mov	rsi, qword ptr [rsp + 8]
0xbea0:	cmp	dword ptr [rsi + 0xb4], 1
0xbea7:	jle	0xbe27


0x1c60:	jmp	qword ptr [rip + 0x217352]


0xc126:	test	ebx, ebx
0xc128:	mov	byte ptr [r13 + r14], 1
0xc12e:	je	0xc145


0xc145:	add	r14, 1
0xc149:	cmp	r14, 0x40
0xc14d:	jne	0xc120


0xbf98:	mov	rax, qword ptr [rsp + 8]
0xbf9d:	mov	r12, qword ptr [rsi]
0xbfa0:	cmp	dword ptr [rax + 0xb4], 1
0xbfa7:	jle	0xbfcd


0xbe12:	and	edx, 0xfffffffd
0xbe15:	cmp	dl, 5
0xbe18:	je	0xc214


0x9ce1:	add	rsp, 0x48
0x9ce5:	pop	rbx
0x9ce6:	pop	rbp
0x9ce7:	pop	r12
0x9ce9:	pop	r13
0x9ceb:	pop	r14
0x9ced:	pop	r15
0x9cef:	ret	


0xa32a:	call	0x19e0


0xa11a:	cmp	qword ptr [rbx + 0x40], rax
0xa11e:	mov	rdx, qword ptr [rbx + 0x30]
0xa122:	cmovle	rax, qword ptr [rbx + 0x40]
0xa127:	cmp	rax, rdx
0xa12a:	jg	0xa138


0xa189:	mov	rcx, qword ptr [rbx + 0x80]
0xa190:	movzx	edx, al
0xa193:	sar	rdx, 6
0xa197:	mov	rcx, qword ptr [rcx + rdx*8]
0xa19b:	mov	edx, 1
0xa1a0:	bt	rcx, rax
0xa1a4:	jb	0xa1c0


0xa185:	movzx	eax, byte ptr [rdx + rax]
0xa189:	mov	rcx, qword ptr [rbx + 0x80]
0xa190:	movzx	edx, al
0xa193:	sar	rdx, 6
0xa197:	mov	rcx, qword ptr [rcx + rdx*8]
0xa19b:	mov	edx, 1
0xa1a0:	bt	rcx, rax
0xa1a4:	jb	0xa1c0


0x9d91:	lea	r14, [r11 + rax]
0x9d95:	cmp	r15, r14
0x9d98:	jle	0xa1df


0xa048:	mov	rcx, qword ptr [rbx]
0xa04b:	mov	rdi, rbp
0xa04e:	sub	rdi, rdx
0xa051:	mov	rdx, rdi
0xa054:	lea	r12, [rcx + r11]
0xa058:	add	rdx, r12
0xa05b:	lea	rsi, [r12 + rbp - 1]
0xa060:	cmp	rcx, rdx
0xa063:	cmovb	rcx, rdx
0xa067:	cmp	rcx, rsi
0xa06a:	jbe	0xa085


0x9e68:	jge	0x9ea3


0x9e90:	mov	rcx, rax
0x9e93:	jmp	0x9e6e


0x990b:	xor	eax, eax
0x990d:	cmp	ebx, 0xa
0x9910:	je	0x995c


0x9988:	mov	edi, ebx
0x998a:	call	0x1af0


0x9868:	lea	rax, [r8 + r8]
0x986c:	mov	rsi, r8
0x986f:	mov	rdi, r9
0x9872:	shl	rsi, 4
0x9876:	mov	qword ptr [rsp + 8], rcx
0x987b:	mov	qword ptr [rsp + 0x10], rax
0x9880:	call	0x1b60


0x97f3:	mov	esi, 0x30
0x97f8:	mov	edi, 1
0x97fd:	mov	qword ptr [rsp + 0x10], r9
0x9802:	mov	qword ptr [rsp + 8], r8
0x9807:	mov	qword ptr [rsp + 0x18], rcx
0x980c:	call	0x1ab0


0x8ec7:	mov	rdi, qword ptr [r14 + 0x50]
0x8ecb:	test	rdi, rdi
0x8ece:	je	0x8ea8


0x8698:	sub	rsi, 1
0x869c:	mov	qword ptr [rdi + rsi*8], r8
0x86a0:	sub	r9, 1
0x86a4:	js	0x86d0


0x8693:	cmp	r10, r8
0x8696:	je	0x86a0


0x8680:	sub	rcx, 1
0x8684:	cmp	rcx, -1
0x8688:	je	0x8698


0x86d0:	mov	rcx, qword ptr [rbx + 8]
0x86d4:	mov	rdx, qword ptr [rbp + 8]
0x86d8:	add	rdx, rcx
0x86db:	add	rdx, qword ptr [r12 + 8]
0x86e0:	lea	rax, [rcx - 1]
0x86e4:	lea	r9, [rdx - 1]
0x86e8:	sub	rdx, rsi
0x86eb:	add	rcx, rdx
0x86ee:	test	rdx, rdx
0x86f1:	mov	qword ptr [rbx + 8], rcx
0x86f5:	jle	0x873d


0x866d:	mov	r8, qword ptr [rdx + r11*8]
0x8671:	cmp	rax, r8
0x8674:	jne	0x8665


0x86c6:	mov	rax, qword ptr [r13 + r9*8]
0x86cb:	jmp	0x8660


0x8059:	mov	rcx, qword ptr [rbx + 0x10]
0x805d:	mov	rsi, qword ptr [r12 + 0x10]
0x8062:	mov	rsi, qword ptr [rsi + rdx*8]
0x8066:	cmp	qword ptr [rcx + rax*8], rsi
0x806a:	je	0x8100


0x8099:	mov	rcx, qword ptr [rbx + 8]
0x809d:	mov	rax, qword ptr [r12 + 8]
0x80a2:	lea	r8, [rcx + rax*2 - 1]
0x80a7:	mov	rdx, r8
0x80aa:	sub	rdx, rbp
0x80ad:	add	rdx, 1
0x80b1:	je	0x80ea


0x8128:	mov	rax, qword ptr [rbx + 0x10]
0x812c:	add	rdx, 1
0x8130:	mov	rsi, qword ptr [r12 + 0x10]
0x8135:	sub	rbp, rdx
0x8138:	shl	rdx, 3
0x813c:	lea	rdi, [rax + rbp*8]
0x8140:	call	0x1ad0


0x7fb0:	lea	rbp, [r14 + 1]
0x7fb4:	mov	rax, r10
0x7fb7:	jmp	0x7e47


0x7e9c:	mov	r10, rax
0x7e9f:	cmp	rbp, r10
0x7ea2:	jl	0x7e78


0x7e47:	cmp	rbp, rax
0x7e4a:	jge	0x7ea4


0x7f6e:	add	rsp, 0x48
0x7f72:	pop	rbx
0x7f73:	pop	rbp
0x7f74:	pop	r12
0x7f76:	pop	r13
0x7f78:	pop	r14
0x7f7a:	pop	r15
0x7f7c:	ret	


0x7cec:	mov	rax, -2
0x7cf3:	rol	rax, cl
0x7cf6:	and	qword ptr [rdi + 0xa0], rax
0x7cfd:	jmp	0x7cac


0x75ba:	cmp	qword ptr [rcx + rsi*8], r15
0x75be:	jne	0x75a8


0x1c40:	jmp	qword ptr [rip + 0x217362]


0x6ad3:	mov	rcx, qword ptr [rsp + 8]
0x6ad8:	mov	rdx, qword ptr [rsp + 0x10]
0x6add:	mov	rsi, qword ptr [rsp + 0x18]
0x6ae2:	mov	rdi, qword ptr [rsp + 0x20]
0x6ae7:	call	0x5f40


0x6def:	add	rax, 1
0x6df3:	cmp	qword ptr [rsp + 0x10], rax
0x6df8:	je	0x6e0b


0x6682:	jmp	0x6643


0x6670:	mov	qword ptr [rax + rdx], rcx
0x6674:	sub	rdx, 8
0x6678:	mov	rcx, qword ptr [rax + rdx - 8]
0x667d:	cmp	rcx, rbp
0x6680:	jg	0x6670


0x65ce:	add	rsp, 8
0x65d2:	pop	rbx
0x65d3:	pop	rbp
0x65d4:	ret	


0x6641:	xor	edx, edx
0x6643:	mov	qword ptr [rax + rdx], rbp
0x6647:	mov	eax, 1
0x664c:	add	qword ptr [rbx + 8], 1
0x6651:	jmp	0x65ce


0x6630:	mov	rcx, qword ptr [rdx - 8]
0x6634:	sub	rdx, 8
0x6638:	mov	qword ptr [rdx + 8], rcx
0x663c:	cmp	rax, rdx
0x663f:	jne	0x6630


0x6315:	add	rsp, 0x48
0x6319:	xor	eax, eax
0x631b:	pop	rbx
0x631c:	pop	rbp
0x631d:	pop	r12
0x631f:	pop	r13
0x6321:	pop	r14
0x6323:	pop	r15
0x6325:	ret	


0x620e:	mov	rax, qword ptr [rsp]
0x6212:	mov	r13, qword ptr [rsp + 0x28]
0x6217:	mov	rdi, rbp
0x621a:	mov	qword ptr [rsp + 0x30], r12
0x621f:	mov	qword ptr [rsp + 0x38], rbx
0x6224:	mov	r12, r10
0x6227:	add	r13, qword ptr [rax + 0xd8]
0x622e:	lea	rax, [rbp + rbp*2]
0x6233:	mov	rbp, r14
0x6236:	mov	r14, rdi
0x6239:	shl	rax, 3
0x623d:	mov	rbx, rax
0x6240:	cmp	qword ptr [r13], r14
0x6244:	jne	0x62b0


0x60f0:	and	edx, 4
0x60f3:	je	0x6090


0x605a:	cmp	al, 0x3d
0x605c:	je	0x60e0


0x60a0:	mov	byte ptr [rdi + 8], 0x19
0x60a4:	mov	eax, 1
0x60a9:	ret	


0x601f:	cmp	cl, 0x2d
0x6022:	jne	0x607f


0x13982:	and	eax, 6
0x13985:	mov	rcx, qword ptr [r15 + 0x30]
0x13989:	cmp	al, 4
0x1398b:	je	0x13b20


0x1399f:	mov	qword ptr [rsp + 0x20], r9
0x139a4:	mov	qword ptr [rsp + 0x18], rdx
0x139a9:	mov	qword ptr [rsp + 0x10], rsi
0x139ae:	mov	qword ptr [rsp + 8], r8
0x139b3:	call	0x1b00


0x13b60:	mov	rdi, r15
0x13b63:	mov	qword ptr [rsp + 0x20], r9
0x13b68:	mov	qword ptr [rsp + 0x18], rdx
0x13b6d:	mov	qword ptr [rsp + 0x10], rsi
0x13b72:	mov	qword ptr [rsp + 8], r8
0x13b77:	call	0x13810


0x10d78:	add	rcx, rsi
0x10d7b:	movzx	edi, byte ptr [rcx + rdi]
0x10d7f:	mov	r12d, edi
0x10d82:	mov	dword ptr [rsp + 8], edi
0x10d86:	jmp	0x10878


0x10d34:	mov	r8, qword ptr [rbx + 0x18]
0x10d38:	add	rcx, rdi
0x10d3b:	add	rcx, qword ptr [r8 + rsi*8]
0x10d3f:	movzx	edi, byte ptr [rcx]
0x10d42:	mov	r12d, edi
0x10d45:	mov	dword ptr [rsp + 8], edi
0x10d49:	and	edi, 0x80
0x10d4f:	jne	0x1086b


0x10dbf:	movzx	eax, byte ptr [rdx + r14 + 1]
0x10dc5:	mov	byte ptr [rbp + 8], 1
0x10dc9:	mov	r12d, eax
0x10dcc:	mov	byte ptr [rbp], al
0x10dcf:	mov	dword ptr [rsp + 8], eax
0x10dd3:	jmp	0x10891


0x10d0f:	lea	r9, [r14 + 2]
0x10d13:	cmp	qword ptr [rbx + 0x30], r9
0x10d17:	je	0x10d24




0x10698:	lea	rax, [r11 + 1]
0x1069c:	add	r11, qword ptr [r10]
0x1069f:	mov	rdx, qword ptr [r10 + 0x28]
0x106a3:	mov	qword ptr [r10 + 0x48], rax
0x106a7:	movzx	r9d, byte ptr [r11 + rdx]
0x106ac:	jmp	0x1059a


0x10608:	cmp	r11, qword ptr [r10 + 0x30]
0x1060c:	je	0x1061d


0x105a8:	mov	rdx, qword ptr [r10 + 8]
0x105ac:	cmp	byte ptr [rdx + rax], 0x5d
0x105b0:	jne	0x10560


0x10560:	mov	rax, qword ptr [rbx + 8]
0x10564:	mov	byte ptr [rax + r8], r9b
0x10568:	add	r8, 1
0x1056c:	cmp	r8, 0x20
0x10570:	je	0x10668


0xfe0b:	mov	rcx, rax
0xfe0e:	cmp	rbx, rcx
0xfe11:	jl	0xfde8


0xff20:	lea	rbx, [r8 + 1]
0xff24:	mov	rdx, rcx
0xff27:	jmp	0xfdb0


0xfdb0:	cmp	rbx, rdx
0xfdb3:	jge	0xfe13


0xfe4e:	mov	rax, qword ptr [rsp + 8]
0xfe53:	mov	qword ptr [rsp + 0x60], 0
0xfe5c:	mov	r12, qword ptr [rax + 0x98]
0xfe63:	mov	rax, qword ptr [rsp + 0x10]
0xfe68:	cmp	qword ptr [rax + 8], 0
0xfe6d:	jle	0xff10


0xf094:	add	rsp, 0x238
0xf09b:	pop	rbx
0xf09c:	pop	rbp
0xf09d:	pop	r12
0xf09f:	pop	r13
0xf0a1:	pop	r14
0xf0a3:	pop	r15
0xf0a5:	ret	


0xfc2b:	call	0x19e0


0xe613:	mov	rcx, qword ptr [rdi + 0x58]
0xe617:	test	rcx, rcx
0xe61a:	je	0xf480


0xd870:	lea	rdx, [rsi + rcx]
0xd874:	mov	rax, rdx
0xd877:	shr	rax, 0x3f
0xd87b:	add	rax, rdx
0xd87e:	sar	rax, 1
0xd881:	lea	rdx, [rax + rax*4]
0xd885:	mov	r8, rax
0xd888:	cmp	r9, qword ptr [r11 + rdx*8 + 8]
0xd88d:	jg	0xda40


0xda38:	mov	r8, rsi
0xda3b:	mov	rsi, rdi
0xda3e:	nop	
0xda40:	lea	rcx, [r8 + 1]
0xda44:	mov	rdi, rsi
0xda47:	jmp	0xd843


0xda9b:	mov	rax, qword ptr [rsp + 0x70]
0xdaa0:	cmp	qword ptr [rsp + 0x70], rax
0xdaa5:	mov	dword ptr [rsp + 0x8c], 0
0xdab0:	jge	0xd790


0xd8e5:	mov	qword ptr [rsp + 0x30], r13
0xd8ea:	mov	qword ptr [rsp + 0x28], 0
0xd8f3:	mov	r13, r10
0xd8f6:	mov	rax, qword ptr [r14 + 0xf8]
0xd8fd:	mov	rbx, qword ptr [rsp + 0x28]
0xd902:	mov	rdi, qword ptr [rsp + 0x58]
0xd907:	mov	rbx, qword ptr [rax + rbx*8]
0xd90b:	mov	rax, qword ptr [rbx + 8]
0xd90f:	shl	rax, 4
0xd913:	cmp	rdi, qword ptr [rdx + rax]
0xd917:	je	0xd940


0xd8bc:	cmp	rcx, -1
0xd8c0:	jne	0xda96


0xc473:	mov	eax, 1
0xc478:	jmp	0xc487


0xc4a0:	cmp	dl, 0x8f
0xc4a3:	jbe	0xc380


0xc4a9:	mov	ebp, 4
0xc4ae:	jmp	0xc464


0xc4b4:	cmp	al, 0xf8
0xc4b6:	jne	0xc4c1


0xc4c8:	cmp	al, 0xfd
0xc4ca:	ja	0xc380


0xbead:	mov	rax, qword ptr [rsi]
0xbeb0:	mov	rdi, qword ptr [rsp + 0x10]
0xbeb5:	movzx	edx, byte ptr [rax + rdi]
0xbeb9:	mov	byte ptr [rsp + 0x60], dl
0xbebd:	lea	rdx, [r12 + 1]
0xbec2:	cmp	qword ptr [rsi + 0x10], rdx
0xbec6:	jbe	0xc206




0xc130:	call	0x1c60


0xc14f:	add	r12, 0x40
0xc153:	add	qword ptr [rsp + 0x18], 8
0xc159:	add	r13, 0x40
0xc15d:	cmp	r12, 0x100
0xc164:	je	0xbe27


0xc120:	bt	r15, r14
0xc124:	jae	0xc145


0xbfcd:	xor	r13d, r13d
0xbfd0:	cmp	qword ptr [r12 + 0x28], 0
0xbfd6:	jle	0xbe27


0xbfa9:	cmp	qword ptr [r12 + 0x48], 0
0xbfaf:	jne	0xc0af


0xc214:	movdqa	xmm0, xmmword ptr [rip + 0x9e84]
0xc21c:	cmp	eax, 2
0xc21f:	movups	xmmword ptr [rbp], xmm0
0xc223:	movups	xmmword ptr [rbp + 0x10], xmm0
0xc227:	movups	xmmword ptr [rbp + 0x20], xmm0
0xc22b:	movups	xmmword ptr [rbp + 0x30], xmm0
0xc22f:	movups	xmmword ptr [rbp + 0x40], xmm0
0xc233:	movups	xmmword ptr [rbp + 0x50], xmm0
0xc237:	movups	xmmword ptr [rbp + 0x60], xmm0
0xc23b:	movups	xmmword ptr [rbp + 0x70], xmm0
0xc23f:	movups	xmmword ptr [rbp + 0x80], xmm0
0xc246:	movups	xmmword ptr [rbp + 0x90], xmm0
0xc24d:	movups	xmmword ptr [rbp + 0xa0], xmm0
0xc254:	movups	xmmword ptr [rbp + 0xb0], xmm0
0xc25b:	movups	xmmword ptr [rbp + 0xc0], xmm0
0xc262:	movups	xmmword ptr [rbp + 0xd0], xmm0
0xc269:	movups	xmmword ptr [rbp + 0xe0], xmm0
0xc270:	movups	xmmword ptr [rbp + 0xf0], xmm0
0xc277:	jne	0xc1dd


0xbe1e:	cmp	eax, 2
0xbe21:	je	0xc174


0xa12c:	jmp	0xa158


0xa138:	mov	rsi, qword ptr [rbx]
0xa13b:	add	rsi, rdx
0xa13e:	movzx	esi, byte ptr [rsi + r15]
0xa143:	movzx	esi, byte ptr [rcx + rsi]
0xa147:	mov	rcx, qword ptr [rbx + 8]
0xa14b:	mov	byte ptr [rcx + rdx], sil
0xa14f:	add	rdx, 1
0xa153:	cmp	rax, rdx
0xa156:	jne	0xa130


0xa1c0:	mov	dword ptr [rbx + 0x70], edx
0xa1c3:	jmp	0x9f38


0xa1a6:	xor	edx, edx
0xa1a8:	cmp	al, 0xa
0xa1aa:	jne	0xa1c0


0xa1df:	sub	r14, r15
0xa1e2:	mov	r12, r14
0xa1e5:	mov	qword ptr [rbx + 0x30], r14
0xa1e9:	lea	rsi, [r8 - 1]
0xa1ed:	mov	edx, r10d
0xa1f0:	mov	rdi, rbx
0xa1f3:	call	0x98c0


0x9d9e:	lea	rax, [rbx + 0x20]
0x9da2:	lea	r13, [rsp + 0x24]
0x9da7:	mov	qword ptr [rsp + 0x10], rax
0x9dac:	nop	dword ptr [rax]
0x9db0:	mov	r12, qword ptr [rbx + 0x50]
0x9db4:	mov	rsi, qword ptr [rbx]
0x9db7:	mov	rdi, r13
0x9dba:	mov	rax, qword ptr [rbx + 0x20]
0x9dbe:	mov	rcx, qword ptr [rsp + 0x10]
0x9dc3:	mov	dword ptr [rsp + 0xc], r10d
0x9dc8:	mov	qword ptr [rsp], r8
0x9dcc:	sub	r12, r14
0x9dcf:	add	rsi, r14
0x9dd2:	mov	rdx, r12
0x9dd5:	mov	qword ptr [rsp + 0x18], rax
0x9dda:	call	0x5f40


0xa085:	movzx	edx, byte ptr [rsi]
0xa088:	and	edx, 0xffffffc0
0xa08b:	cmp	dl, 0x80
0xa08e:	je	0xa078


0xa06c:	jmp	0x9d91


0x9e6a:	lea	rsi, [rax + 1]
0x9e6e:	cmp	rsi, rcx
0x9e71:	jge	0x9e98


0x9ea3:	lea	r13, [r12 - 1]
0x9ea8:	mov	edx, r10d
0x9eab:	mov	rdi, rbx
0x9eae:	mov	qword ptr [rsp], r8
0x9eb2:	mov	rsi, r13
0x9eb5:	call	0x98c0


0x9e6e:	cmp	rsi, rcx
0x9e71:	jge	0x9e98


0x8ed0:	mov	rsi, rbp
0x8ed3:	call	0x7a80


0x86a6:	sub	r11, 1
0x86aa:	js	0x86d0


0x86a0:	sub	r9, 1
0x86a4:	js	0x86d0


0x873d:	shl	rdx, 3
0x8741:	lea	rsi, [rdi + rsi*8]
0x8745:	call	0x1ad0


0x86f7:	test	rax, rax
0x86fa:	js	0x873d


0x8660:	cmp	rax, r8
0x8663:	je	0x8676


0x8100:	sub	rdx, 1
0x8104:	sub	rax, 1
0x8108:	mov	rdi, rdx
0x810b:	not	rdi
0x810e:	jmp	0x804f


0x8070:	jge	0x8118


0x80ea:	xor	eax, eax
0x80ec:	pop	rbx
0x80ed:	pop	rbp
0x80ee:	pop	r12
0x80f0:	ret	


0x80b3:	mov	rdi, qword ptr [rbx + 0x10]
0x80b7:	lea	rax, [rcx - 1]
0x80bb:	add	rcx, rdx
0x80be:	mov	qword ptr [rbx + 8], rcx
0x80c2:	nop	word ptr [rax + rax]
0x80c8:	mov	rsi, qword ptr [rdi + r8*8]
0x80cc:	mov	rcx, qword ptr [rdi + rax*8]
0x80d0:	lea	r9, [rax + rdx]
0x80d4:	lea	r9, [rdi + r9*8]
0x80d8:	cmp	rsi, rcx
0x80db:	jle	0x8150


0x75c0:	mov	edx, dword ptr [rax + 8]
0x75c3:	shr	edx, 8
0x75c6:	and	edx, 0x3ff
0x75cc:	cmp	ebp, edx
0x75ce:	jne	0x75a8


0x75a8:	add	rax, r8
0x75ab:	sub	rsi, 1
0x75af:	test	byte ptr [rax + 0xa], 4
0x75b3:	je	0x7630




0x6246:	cmp	r15, 0x3f
0x624a:	jg	0x6258


0x62b0:	add	r13, 0x28
0x62b4:	cmp	byte ptr [r13 - 8], 0
0x62b9:	jne	0x6240


0x60f5:	mov	byte ptr [rdi + 8], 0x1e
0x60f9:	mov	eax, 2
0x60fe:	ret	


0x60e0:	mov	byte ptr [rdi + 8], 0x1c
0x60e4:	mov	eax, 2
0x60e9:	ret	


0x6062:	cmp	al, 0x2e
0x6064:	jne	0x6090


0x6024:	mov	byte ptr [rdi + 8], 0x16
0x6028:	mov	eax, 1
0x602d:	ret	


0x13b20:	mov	r14, qword ptr [r12]
0x13b24:	cmp	r14, rcx
0x13b27:	ja	0x13991


0x13991:	lea	r14, [rcx + 1]
0x13995:	mov	r13, r14
0x13998:	mov	rdi, r14
0x1399b:	shl	rdi, 4
0x1399f:	mov	qword ptr [rsp + 0x20], r9
0x139a4:	mov	qword ptr [rsp + 0x18], rdx
0x139a9:	mov	qword ptr [rsp + 0x10], rsi
0x139ae:	mov	qword ptr [rsp + 8], r8
0x139b3:	call	0x1b00


0x10878:	cmp	eax, 1
0x1087b:	mov	byte ptr [rbp], r12b
0x1087f:	mov	byte ptr [rbp + 8], 1
0x10883:	jle	0x10cd0


0x10d55:	jmp	0x10878


0x10891:	mov	edi, r8d
0x10894:	mov	dword ptr [rsp], r8d
0x10898:	call	0x1af0


0x10d19:	cmp	dword ptr [rcx + rdi + 4], -1
0x10d1e:	je	0x10dbf


0x1059a:	cmp	rax, r12
0x1059d:	jge	0x10668


0x1061d:	mov	rax, qword ptr [r10 + 0x18]
0x10621:	mov	rax, qword ptr [rax + r11*8]
0x10625:	add	rax, qword ptr [r10]
0x10628:	add	rax, qword ptr [r10 + 0x28]
0x1062c:	movzx	r9d, byte ptr [rax]
0x10630:	test	r9b, 0x80
0x10634:	jne	0x10589


0x1060e:	mov	rax, qword ptr [r10 + 0x10]
0x10612:	cmp	dword ptr [rax + r11*4], -1
0x10617:	je	0x10589


0x105b2:	add	rax, 1
0x105b6:	mov	qword ptr [r10 + 0x48], rax
0x105ba:	mov	rax, qword ptr [rbx + 8]
0x105be:	mov	byte ptr [rax + r14], 0
0x105c3:	movzx	eax, byte ptr [rbp + 8]
0x105c7:	cmp	al, 0x1c
0x105c9:	je	0x106cb


0x10576:	movzx	eax, byte ptr [rbp + 8]
0x1057a:	mov	r11, qword ptr [r10 + 0x48]
0x1057e:	mov	r12, qword ptr [r10 + 0x68]
0x10582:	cmp	al, 0x1e
0x10584:	movsxd	r14, r8d
0x10587:	je	0x105f0


0xfe73:	lea	rax, [rsp + 0x60]
0xfe78:	mov	qword ptr [rsp + 0x20], 0
0xfe81:	mov	qword ptr [rsp + 0x48], rbx
0xfe86:	mov	r15, r13
0xfe89:	mov	qword ptr [rsp + 0x38], rax
0xfe8e:	jmp	0xfeb2


0xe620:	cmp	qword ptr [rdi + 0x60], 0
0xe625:	je	0xf480


0xd893:	mov	rsi, rax
0xd896:	cmp	rsi, rcx
0xd899:	jg	0xd870


0xda40:	lea	rcx, [r8 + 1]
0xda44:	mov	rdi, rsi
0xda47:	jmp	0xd843


0xd843:	cmp	rcx, rdi
0xd846:	jge	0xd89b


0xdab6:	lea	rax, [r13*8]
0xdabe:	mov	r12, qword ptr [rsp + 0x70]
0xdac3:	mov	rbp, qword ptr [rsp + 0x38]
0xdac8:	mov	qword ptr [rsp + 0x50], rax
0xdacd:	lea	rax, [r13 + r13*2]
0xdad2:	lea	r8, [r12 + r12*4]
0xdad6:	shl	rax, 3
0xdada:	mov	qword ptr [rsp + 0x58], rax
0xdadf:	lea	r15, [r8*8]
0xdae7:	jmp	0xdc1d


0xd940:	cmp	qword ptr [rbx + 0x20], 0
0xd945:	mov	r11, qword ptr [rbx]
0xd948:	jle	0xdfb2


0xd919:	add	qword ptr [rsp + 0x28], 1
0xd91f:	mov	rax, qword ptr [rsp + 0x28]
0xd924:	cmp	rax, qword ptr [r14 + 0xe8]
0xd92b:	jge	0xdfa1


0xda96:	cmp	r13, qword ptr [rax]
0xda99:	jne	0xda88


0xc487:	movzx	ebx, byte ptr [rsi + rax]
0xc48b:	lea	edx, [rbx - 0x80]
0xc48e:	cmp	dl, 0x3f
0xc491:	jbe	0xc47a


0xc464:	movsxd	rdi, ebp
0xc467:	add	r8, rdi
0xc46a:	cmp	rcx, r8
0xc46d:	jl	0xc380


0xc4b8:	cmp	dl, 0x87
0xc4bb:	jbe	0xc380


0xc4c1:	mov	ebp, 5
0xc4c6:	jmp	0xc464


0xc4d0:	cmp	al, 0xfc
0xc4d2:	jne	0xc4dd


0xc206:	mov	rax, qword ptr [rsp + 0x38]
0xc20b:	add	rax, 1
0xc20f:	jmp	0xbf34


0xbecc:	lea	rcx, [rax + rdi + 0x10]
0xbed1:	mov	eax, dword ptr [rcx + 8]
0xbed4:	and	eax, 0x2000ff
0xbed9:	cmp	eax, 0x200001
0xbede:	jne	0xc206


0xc16a:	mov	rax, qword ptr [rsp + 8]
0xc16f:	mov	rcx, qword ptr [rax]
0xc172:	jmp	0xc105


0xbfdc:	mov	r15, r12
0xbfdf:	mov	r14, qword ptr [rsp + 0x40]
0xbfe4:	mov	r12, rbp
0xbfe7:	mov	rbp, r13
0xbfea:	mov	r13d, ebx
0xbfed:	jmp	0xbffd


0xbfb5:	test	byte ptr [r12 + 0x20], 1
0xbfbb:	jne	0xc0af


0xc0af:	mov	r12, qword ptr [rsp + 0x40]
0xc0b4:	mov	r13, qword ptr [rsp + 0x48]
0xc0b9:	mov	byte ptr [rsp + 0x54], 0
0xc0be:	nop	
0xc0c0:	xor	edi, edi
0xc0c2:	mov	qword ptr [r12], 0
0xc0ca:	mov	rcx, r12
0xc0cd:	mov	edx, 1
0xc0d2:	mov	rsi, r13
0xc0d5:	call	0x5f40


0xc27d:	jmp	0xc1d4


0xc174:	movdqa	xmm0, xmmword ptr [rip + 0x9f24]
0xc17c:	movups	xmmword ptr [rbp], xmm0
0xc180:	movups	xmmword ptr [rbp + 0x10], xmm0
0xc184:	movups	xmmword ptr [rbp + 0x20], xmm0
0xc188:	movups	xmmword ptr [rbp + 0x30], xmm0
0xc18c:	movups	xmmword ptr [rbp + 0x40], xmm0
0xc190:	movups	xmmword ptr [rbp + 0x50], xmm0
0xc194:	movups	xmmword ptr [rbp + 0x60], xmm0
0xc198:	movups	xmmword ptr [rbp + 0x70], xmm0
0xc19c:	movups	xmmword ptr [rbp + 0x80], xmm0
0xc1a3:	movups	xmmword ptr [rbp + 0x90], xmm0
0xc1aa:	movups	xmmword ptr [rbp + 0xa0], xmm0
0xc1b1:	movups	xmmword ptr [rbp + 0xb0], xmm0
0xc1b8:	movups	xmmword ptr [rbp + 0xc0], xmm0
0xc1bf:	movups	xmmword ptr [rbp + 0xd0], xmm0
0xc1c6:	movups	xmmword ptr [rbp + 0xe0], xmm0
0xc1cd:	movups	xmmword ptr [rbp + 0xf0], xmm0
0xc1d4:	mov	rax, qword ptr [rsp + 0x30]
0xc1d9:	or	byte ptr [rax + 0x38], 1
0xc1dd:	mov	rax, qword ptr [rsp + 0x168]
0xc1e5:	xor	rax, qword ptr fs:[0x28]
0xc1ee:	jne	0xc282


0xa158:	mov	qword ptr [rbx + 0x30], rdx
0xa15c:	mov	qword ptr [rbx + 0x38], rdx
0xa160:	jmp	0x9cc3


0xa130:	mov	r15, qword ptr [rbx + 0x28]
0xa134:	mov	rcx, qword ptr [rbx + 0x78]
0xa138:	mov	rsi, qword ptr [rbx]
0xa13b:	add	rsi, rdx
0xa13e:	movzx	esi, byte ptr [rsi + r15]
0xa143:	movzx	esi, byte ptr [rcx + rsi]
0xa147:	mov	rcx, qword ptr [rbx + 8]
0xa14b:	mov	byte ptr [rcx + rdx], sil
0xa14f:	add	rdx, 1
0xa153:	cmp	rax, rdx
0xa156:	jne	0xa130


0x9f38:	movzx	eax, byte ptr [rbx + 0x8b]
0x9f3f:	jmp	0xa00c


0xa1ac:	xor	edx, edx
0xa1ae:	cmp	byte ptr [rbx + 0x8d], 0
0xa1b5:	setne	dl
0xa1b8:	add	edx, edx
0xa1ba:	nop	word ptr [rax + rax]
0xa1c0:	mov	dword ptr [rbx + 0x70], edx
0xa1c3:	jmp	0x9f38


0xa078:	sub	rsi, 1
0xa07c:	cmp	rcx, rsi
0xa07f:	ja	0x9d91


0xa090:	mov	rdx, qword ptr [rbx + 0x58]
0xa094:	mov	rcx, qword ptr [rbx + 0x78]
0xa098:	mov	r14, rsi
0xa09b:	add	rdx, r12
0xa09e:	sub	rdx, rsi
0xa0a1:	test	rcx, rcx
0xa0a4:	jne	0xa2f2


0x9e98:	lea	r12, [rax + 1]
0x9e9c:	cmp	rdx, rbp
0x9e9f:	cmovge	r12, rax
0x9ea3:	lea	r13, [r12 - 1]
0x9ea8:	mov	edx, r10d
0x9eab:	mov	rdi, rbx
0x9eae:	mov	qword ptr [rsp], r8
0x9eb2:	mov	rsi, r13
0x9eb5:	call	0x98c0


0x86ac:	mov	rax, qword ptr [r13 + r9*8]
0x86b1:	jmp	0x866d


0x804f:	test	rdi, rdi
0x8052:	jns	0x8090


0x8076:	sub	rdx, 1
0x807a:	sub	rbp, 1
0x807e:	mov	rdi, rdx
0x8081:	mov	qword ptr [rcx + rbp*8], rsi
0x8085:	not	rdi
0x8088:	test	rdi, rdi
0x808b:	js	0x8054


0x8118:	sub	rax, 1
0x811c:	jmp	0x804f


0x8150:	sub	rax, 1
0x8154:	mov	qword ptr [r9], rcx
0x8157:	jns	0x80c8


0x80dd:	sub	r8, 1
0x80e1:	sub	rdx, 1
0x80e5:	mov	qword ptr [r9], rsi
0x80e8:	jne	0x80c8


0x75d0:	call	0x65a0


0x75b5:	test	rsi, rsi
0x75b8:	jle	0x7630


0x624c:	movzx	eax, word ptr [r13 + 0x22]
0x6251:	test	qword ptr [rsp + 0x18], rax
0x6256:	je	0x62b0


0x6258:	mov	rax, qword ptr [rbp + 0x28]
0x625c:	mov	rax, qword ptr [rax + rbx + 0x10]
0x6261:	mov	rcx, qword ptr [rax]
0x6264:	cmp	qword ptr [rsp + 0x10], rcx
0x6269:	je	0x6330


0x62bb:	mov	rbx, qword ptr [rsp + 0x38]
0x62c0:	mov	r10, r12
0x62c3:	mov	r12, qword ptr [rsp + 0x30]
0x62c8:	mov	r14, rbp
0x62cb:	add	rbx, 1
0x62cf:	cmp	qword ptr [r12 + 8], rbx
0x62d4:	jg	0x61c5


0x6240:	cmp	qword ptr [r13], r14
0x6244:	jne	0x62b0


0x6066:	mov	byte ptr [rdi + 8], 0x1a
0x606a:	mov	eax, 2
0x606f:	ret	


0x13b2d:	test	r14, r14
0x13b30:	mov	r13, r14
0x13b33:	jg	0x13998


0x1063a:	cmp	dword ptr [r10 + 0x90], 1
0x10642:	mov	eax, 1
0x10647:	je	0x10656


0x106cb:	mov	dword ptr [rbx], 2
0x106d1:	xor	eax, eax
0x106d3:	jmp	0x104e1


0x105cf:	cmp	al, 0x1e
0x105d1:	je	0x106be


0xfeb2:	mov	rax, qword ptr [rsp + 0x10]
0xfeb7:	mov	rdi, qword ptr [rsp + 0x20]
0xfebc:	mov	rax, qword ptr [rax + 0x10]
0xfec0:	mov	r14, qword ptr [rax + rdi*8]
0xfec4:	mov	rax, r14
0xfec7:	shl	rax, 4
0xfecb:	add	rax, qword ptr [r12]
0xfecf:	cmp	r14, qword ptr [r15 + 0x10]
0xfed3:	movzx	eax, byte ptr [rax + 8]
0xfed7:	jne	0xfe90


0xe62b:	cmp	qword ptr [rax + 0x10], 0
0xe630:	jne	0xe668


0xdc1d:	mov	rax, qword ptr [r14 + 0xd8]
0xdc24:	add	rax, r15
0xdc27:	cmp	r13, qword ptr [rax]
0xdc2a:	jne	0xdc08


0xdfb2:	mov	r12, qword ptr [rsp + 8]
0xdfb7:	jmp	0xdc82


0xd94e:	mov	rcx, qword ptr [rsp + 8]
0xd953:	mov	r8, r13
0xd956:	xor	ebp, ebp
0xd958:	mov	r13, rbx
0xd95b:	mov	rbx, rcx
0xd95e:	jmp	0xd9cc


0xd931:	mov	rax, qword ptr [rsp + 0x50]
0xd936:	mov	rdx, qword ptr [rax]
0xd939:	jmp	0xd8f6


0xdfa1:	mov	r13, qword ptr [rsp + 0x30]
0xdfa6:	mov	rax, qword ptr [r14 + 0xc8]
0xdfad:	jmp	0xdaa0


0xda88:	add	rax, 0x28
0xda8c:	cmp	byte ptr [rax - 8], 0
0xda90:	je	0xd8c6


0xc47a:	add	rax, 1
0xc47e:	cmp	rdi, rax
0xc481:	jle	0xc382


0xc493:	jmp	0xc380


0xc4d4:	cmp	dl, 0x83
0xc4d7:	jbe	0xc380


0xc4dd:	mov	ebp, 6
0xc4e2:	jmp	0xc464


0xbf34:	mov	rsi, qword ptr [rsp + 0x38]
0xbf39:	mov	rcx, qword ptr [rsp + 0x40]
0xbf3e:	mov	rdi, qword ptr [rsp + 0x48]
0xbf43:	sub	rax, rsi
0xbf46:	mov	qword ptr [rcx], 0
0xbf4d:	mov	r12, rax
0xbf50:	mov	rdx, rax
0xbf53:	call	0x5f40


0xbee4:	add	rdi, 0x20
0xbee8:	mov	r13, rdi
0xbeeb:	mov	rdi, qword ptr [rsp + 0x38]
0xbef0:	lea	rax, [rdi + 1]
0xbef4:	jmp	0xbf1b


0xc105:	mov	rax, qword ptr [rsp + 0x10]
0xc10a:	mov	rsi, qword ptr [rsp + 0x18]
0xc10f:	xor	r14d, r14d
0xc112:	mov	rax, qword ptr [rcx + rax]
0xc116:	mov	r15, qword ptr [rax + rsi]
0xc11a:	nop	word ptr [rax + rax]
0xc120:	bt	r15, r14
0xc124:	jae	0xc145


0xbffd:	mov	qword ptr [r14], 0
0xc004:	mov	rax, qword ptr [r15]
0xc007:	mov	rdx, r14
0xc00a:	mov	rdi, qword ptr [rsp + 0x38]
0xc00f:	lea	rbx, [rbp*4]
0xc017:	mov	esi, dword ptr [rax + rbp*4]
0xc01a:	call	0x1b10


0xbfc1:	cmp	qword ptr [r12 + 0x40], 0
0xbfc7:	jne	0xc0af


0xc1d4:	mov	rax, qword ptr [rsp + 0x30]
0xc1d9:	or	byte ptr [rax + 0x38], 1
0xc1dd:	mov	rax, qword ptr [rsp + 0x168]
0xc1e5:	xor	rax, qword ptr fs:[0x28]
0xc1ee:	jne	0xc282


0xa00c:	test	al, al
0xa00e:	je	0x9c8a


0xa0aa:	lea	r13, [rsp + 0x24]
0xa0af:	add	r12, rbp
0xa0b2:	lea	rcx, [rsp + 0x28]
0xa0b7:	sub	r12, r14
0xa0ba:	mov	dword ptr [rsp + 0xc], r10d
0xa0bf:	mov	qword ptr [rsp], r8
0xa0c3:	mov	rdi, r13
0xa0c6:	mov	qword ptr [rsp + 0x28], 0
0xa0cf:	call	0x5f40


0xa2f2:	cmp	rdx, 6
0xa2f6:	mov	edi, 6
0xa2fb:	lea	r11, [rsp + 0x32]
0xa300:	cmovle	rdi, rdx
0xa304:	sub	edi, 1
0xa307:	test	edi, edi
0xa309:	movsxd	rax, edi
0xa30c:	js	0xa322


0x8730:	sub	rax, 1
0x8734:	mov	qword ptr [r10], rcx
0x8737:	cmp	rax, -1
0x873b:	jne	0x8700


0x8715:	sub	r9, 1
0x8719:	sub	rdx, 1
0x871d:	mov	qword ptr [r10], r8
0x8720:	jne	0x8700


0x815d:	lea	rsi, [rdi + rbp*8]
0x8161:	shl	rdx, 3
0x8165:	call	0x1ad0


0x80c8:	mov	rsi, qword ptr [rdi + r8*8]
0x80cc:	mov	rcx, qword ptr [rdi + rax*8]
0x80d0:	lea	r9, [rax + rdx]
0x80d4:	lea	r9, [rdi + r9*8]
0x80d8:	cmp	rsi, rcx
0x80db:	jle	0x8150


0x6330:	mov	r15d, dword ptr [rsp + 0x20]
0x6335:	add	rsp, 0x48
0x6339:	pop	rbx
0x633a:	pop	rbp
0x633b:	mov	eax, r15d
0x633e:	and	eax, 1
0x6341:	pop	r12
0x6343:	neg	eax
0x6345:	pop	r13
0x6347:	pop	r14
0x6349:	pop	r15
0x634b:	ret	


0x626f:	mov	esi, dword ptr [rsp + 0x20]
0x6273:	mov	rdi, qword ptr [rsp]
0x6277:	mov	r8, r12
0x627a:	mov	rdx, r15
0x627d:	call	0x6120


0x13998:	mov	rdi, r14
0x1399b:	shl	rdi, 4
0x1399f:	mov	qword ptr [rsp + 0x20], r9
0x139a4:	mov	qword ptr [rsp + 0x18], rdx
0x139a9:	mov	qword ptr [rsp + 0x10], rsi
0x139ae:	mov	qword ptr [rsp + 8], r8
0x139b3:	call	0x1b00


0x10656:	add	rax, r11
0x10659:	mov	qword ptr [r10 + 0x48], rax
0x1065d:	jmp	0x1059a


0x10649:	mov	rsi, r11
0x1064c:	mov	rdi, r10
0x1064f:	call	0x7a30


0x106be:	mov	dword ptr [rbx], 4
0x106c4:	xor	eax, eax
0x106c6:	jmp	0x104e1


0x105d7:	cmp	al, 0x1a
0x105d9:	je	0x106b1


0xfed9:	cmp	rbp, qword ptr [r15 + 0x18]
0xfedd:	jne	0xfe90


0xfe90:	cmp	al, 4
0xfe92:	je	0x10218


0xe632:	cmp	qword ptr [rdx + 0x10], 0
0xe637:	jne	0xe668


0xe668:	cmp	qword ptr [rsp + 0x270], 0
0xe671:	mov	dword ptr [rsp + 0x58], 1
0xe679:	je	0xea00


0xdc2c:	mov	rdi, qword ptr [rsp + 8]
0xdc31:	cmp	rdi, qword ptr [rax + 8]
0xdc35:	jne	0xdc08


0xdc08:	add	r12, 1
0xdc0c:	add	r15, 0x28
0xdc10:	cmp	r12, qword ptr [r14 + 0xc8]
0xdc17:	jge	0xd790


0xdc82:	cmp	qword ptr [rsp + 8], r11
0xdc87:	jl	0xd919


0xd9cc:	mov	rax, qword ptr [r13 + 0x28]
0xd9d0:	mov	r9, qword ptr [rax + rbp*8]
0xd9d4:	mov	r15, qword ptr [r9 + 8]
0xd9d8:	mov	rdx, r15
0xd9db:	sub	rdx, r11
0xd9de:	test	rdx, rdx
0xd9e1:	lea	r12, [rdx + rbx]
0xd9e5:	jle	0xd993


0xd8f6:	mov	rax, qword ptr [r14 + 0xf8]
0xd8fd:	mov	rbx, qword ptr [rsp + 0x28]
0xd902:	mov	rdi, qword ptr [rsp + 0x58]
0xd907:	mov	rbx, qword ptr [rax + rbx*8]
0xd90b:	mov	rax, qword ptr [rbx + 8]
0xd90f:	shl	rax, 4
0xd913:	cmp	rdi, qword ptr [rdx + rax]
0xd917:	je	0xd940


0xdaa0:	cmp	qword ptr [rsp + 0x70], rax
0xdaa5:	mov	dword ptr [rsp + 0x8c], 0
0xdab0:	jge	0xd790


0xbf1b:	movzx	edx, byte ptr [rcx]
0xbf1e:	add	rax, 1
0xbf22:	mov	byte ptr [rax - 1], dl
0xbf25:	mov	rdx, rax
0xbf28:	sub	rdx, rdi
0xbf2b:	add	rdx, r12
0xbf2e:	cmp	qword ptr [rsi + 0x10], rdx
0xbf32:	ja	0xbf00


0x1b10:	jmp	qword ptr [rip + 0x2173fa]


0x9c8a:	add	qword ptr [rbx + 8], rbp
0x9c8e:	mov	rax, qword ptr [rbx + 0x58]
0x9c92:	sub	qword ptr [rbx + 0x68], rbp
0x9c96:	mov	qword ptr [rbx + 0x28], r15
0x9c9a:	sub	rax, rbp
0x9c9d:	cmp	dword ptr [rbx + 0x90], 1
0x9ca4:	mov	qword ptr [rbx + 0x58], rax
0x9ca8:	jle	0x9d48


0xa014:	jmp	0x9c8e


0xa322:	mov	rsi, r11
0xa325:	jmp	0xa0aa


0xa30e:	movzx	edi, byte ptr [rsi + rax]
0xa312:	movzx	edi, byte ptr [rcx + rdi]
0xa316:	mov	byte ptr [r11 + rax], dil
0xa31a:	sub	rax, 1
0xa31e:	test	eax, eax
0xa320:	jns	0xa30e


0x8700:	mov	r8, qword ptr [rdi + r9*8]
0x8704:	mov	rcx, qword ptr [rdi + rax*8]
0x8708:	lea	r10, [rax + rdx]
0x870c:	lea	r10, [rdi + r10*8]
0x8710:	cmp	r8, rcx
0x8713:	jle	0x8730


0x8722:	xor	edx, edx
0x8724:	jmp	0x8741


0x106b1:	mov	dword ptr [rbx], 3
0x106b7:	xor	eax, eax
0x106b9:	jmp	0x104e1


0x105df:	xor	eax, eax
0x105e1:	jmp	0x104e1


0xfedf:	jmp	0xfe98


0x10218:	mov	rax, qword ptr [rsp + 8]
0x1021d:	mov	r13, qword ptr [rsp + 0x40]
0x10222:	mov	rbx, qword ptr [rsp + 0x48]
0x10227:	add	r13, qword ptr [rax + 0xd8]
0x1022e:	lea	rax, [r14 + r14*2]
0x10232:	shl	rax, 3
0x10236:	mov	qword ptr [rsp + 0x30], rax
0x1023b:	lea	rax, [r14*8]
0x10243:	mov	qword ptr [rsp + 0x28], rax
0x10248:	mov	rax, r15
0x1024b:	mov	r15, r13
0x1024e:	mov	r13, rbx
0x10251:	mov	rbx, rax
0x10254:	jmp	0x103be


0xfe98:	mov	rcx, qword ptr [rsp + 0x10]
0xfe9d:	add	qword ptr [rsp + 0x20], 1
0xfea3:	mov	rax, qword ptr [rsp + 0x20]
0xfea8:	cmp	rax, qword ptr [rcx + 8]
0xfeac:	jge	0x1046b


0xe639:	cmp	qword ptr [rcx + 0x10], 0
0xe63e:	je	0xe646


0xea00:	mov	rax, qword ptr [rsp + 0x38]
0xea05:	cmp	qword ptr [rax + 0x98], 0
0xea0d:	setne	al
0xea10:	movzx	eax, al
0xea13:	mov	dword ptr [rsp + 0x58], eax
0xea17:	jmp	0xe67f


0xe67f:	mov	r11, qword ptr [rsp + 0x38]
0xe684:	mov	rax, qword ptr [rsp + 0x48]
0xe689:	mov	rdi, qword ptr [rsp + 0x88]
0xe691:	mov	rsi, qword ptr [r11 + 0x10]
0xe695:	mov	rbx, qword ptr [rax + 0x28]
0xe699:	mov	edx, dword ptr [r11 + 0xb4]
0xe6a0:	mov	rax, qword ptr [rax + 0x18]
0xe6a4:	mov	qword ptr [rsp + 0x178], rdi
0xe6ac:	mov	qword ptr [rsp + 0x170], rdi
0xe6b4:	mov	qword ptr [rsp + 8], rsi
0xe6b9:	lea	rsi, [rsi + 1]
0xe6bd:	mov	qword ptr [rsp + 0xb0], rbx
0xe6c5:	movsxd	rcx, edx
0xe6c8:	shr	rax, 0x16
0xe6cc:	mov	qword ptr [rsp + 0x198], rbx
0xe6d4:	and	eax, 1
0xe6d7:	cmp	rsi, rcx
0xe6da:	mov	dword ptr [rsp + 0x1b0], edx
0xe6e1:	cmovl	rsi, rcx
0xe6e5:	lea	rcx, [rdi + 1]
0xe6e9:	mov	byte ptr [rsp + 0x1a8], al
0xe6f0:	mov	qword ptr [rsp + 0x188], rdi
0xe6f8:	mov	qword ptr [rsp + 0x180], rdi
0xe700:	cmp	rsi, rcx
0xe703:	mov	rdi, qword ptr [rsp]
0xe707:	cmovg	rsi, rcx
0xe70b:	test	rbx, rbx
0xe70e:	mov	rcx, qword ptr [rsp + 0x78]
0xe713:	setne	bl
0xe716:	or	eax, ebx
0xe718:	mov	byte ptr [rsp + 0x1ab], al
0xe71f:	movzx	eax, byte ptr [r11 + 0xb0]
0xe727:	mov	qword ptr [rsp + 0x120], rcx
0xe72f:	mov	edx, eax
0xe731:	shr	al, 3
0xe734:	shr	dl, 2
0xe737:	and	eax, 1
0xe73a:	and	edx, 1
0xe73d:	mov	byte ptr [rsp + 0x1aa], al
0xe744:	mov	byte ptr [rsp + 0x1a9], dl
0xe74b:	call	0x6490


0xdc37:	mov	rbx, qword ptr [rax + 0x18]
0xdc3b:	mov	rax, qword ptr [rax + 0x10]
0xdc3f:	mov	rdx, qword ptr [rbp + 0x30]
0xdc43:	mov	rcx, rbx
0xdc46:	sub	rcx, rax
0xdc49:	mov	qword ptr [rsp + 0x20], rcx
0xdc4e:	je	0xdaf0


0xdc8d:	mov	rax, r12
0xdc90:	lea	r15, [r11*8]
0xdc98:	mov	r12, rbx
0xdc9b:	mov	rbx, r11
0xdc9e:	mov	r11, r13
0xdca1:	mov	r13, rax
0xdca4:	nop	dword ptr [rax]
0xdca8:	mov	rax, rbx
0xdcab:	sub	rax, qword ptr [r12]
0xdcaf:	test	rax, rax
0xdcb2:	jle	0xdcd5


0xd993:	mov	r8, qword ptr [rsp + 8]
0xd998:	mov	rcx, qword ptr [rsp + 0x30]
0xd99d:	mov	rdx, r9
0xd9a0:	mov	rsi, r13
0xd9a3:	mov	rdi, r14
0xd9a6:	call	0xd540


0xd9e7:	cmp	qword ptr [r14 + 0x30], r12
0xd9eb:	jge	0xd960


0xbf00:	mov	rcx, qword ptr [rsi]
0xbf03:	add	rcx, r13
0xbf06:	add	r13, 0x10
0xbf0a:	mov	edx, dword ptr [rcx + 8]
0xbf0d:	and	edx, 0x2000ff
0xbf13:	cmp	edx, 0x200001
0xbf19:	jne	0xbf34




0x8741:	lea	rsi, [rdi + rsi*8]
0x8745:	call	0x1ad0


0x103be:	cmp	r14, qword ptr [r15]
0x103c1:	je	0x10260


0x1046b:	cmp	qword ptr [rsp + 0x60], 0
0x10471:	je	0xff10


0xe646:	test	rbp, rbp
0xe649:	je	0xe65c


0xe640:	cmp	byte ptr [rsi + 0x38], 0
0xe644:	js	0xe668


0xdaf0:	mov	rcx, qword ptr [rbp + 0x28]
0xdaf4:	mov	rdi, qword ptr [rsp + 0x58]
0xdaf9:	mov	rcx, qword ptr [rcx + rdi + 0x10]
0xdafe:	mov	rcx, qword ptr [rcx]
0xdb01:	lea	rcx, [rcx + rcx*2]
0xdb05:	lea	rcx, [rdx + rcx*8]
0xdb09:	mov	qword ptr [rsp + 0x18], rcx
0xdb0e:	add	rbx, qword ptr [rsp + 8]
0xdb13:	mov	edx, dword ptr [r14 + 0xa0]
0xdb1a:	mov	rdi, r14
0xdb1d:	sub	rbx, rax
0xdb20:	lea	rsi, [rbx - 1]
0xdb24:	call	0x98c0


0xdc54:	mov	rcx, qword ptr [rbp + 0x18]
0xdc58:	mov	rdi, qword ptr [rsp + 0x50]
0xdc5d:	mov	rcx, qword ptr [rcx + rdi]
0xdc61:	lea	rcx, [rcx + rcx*2]
0xdc65:	lea	rcx, [rdx + rcx*8]
0xdc69:	mov	qword ptr [rsp + 0x18], rcx
0xdc6e:	jmp	0xdb0e


0xdcd5:	mov	rax, qword ptr [r14 + 0xb8]
0xdcdc:	mov	rax, qword ptr [rax + r15]
0xdce0:	test	rax, rax
0xdce3:	je	0xddef


0xdcb4:	cmp	qword ptr [r14 + 0x30], r13
0xdcb8:	jle	0xdf41


0xd9f1:	cmp	qword ptr [r14 + 0x58], r12
0xd9f5:	mov	qword ptr [rsp + 0x18], rdx
0xd9fa:	mov	qword ptr [rsp + 0x10], r9
0xd9ff:	jl	0xde58


0xd960:	lea	rsi, [r8 + r11]
0xd964:	lea	rdi, [r8 + rbx]
0xd968:	mov	qword ptr [rsp + 0x20], r9
0xd96d:	mov	qword ptr [rsp + 0x18], r11
0xd972:	mov	qword ptr [rsp + 0x10], r8
0xd977:	call	0x1a80


0x10260:	mov	rax, qword ptr [r15 + 0x18]
0x10264:	sub	rax, qword ptr [r15 + 0x10]
0x10268:	test	rax, rax
0x1026b:	lea	r9, [rbp + rax]
0x10270:	je	0x103d0


0x103c7:	mov	rax, r15
0x103ca:	jmp	0x103b0


0x10477:	xor	eax, eax
0x10479:	jmp	0x1044a


0xe65c:	xor	r12d, r12d
0xe65f:	xor	ebp, ebp
0xe661:	nop	dword ptr [rax]
0xe668:	cmp	qword ptr [rsp + 0x270], 0
0xe671:	mov	dword ptr [rsp + 0x58], 1
0xe679:	je	0xea00


0xe64b:	test	r12, r12
0xe64e:	mov	dword ptr [rsp + 0x5c], 1
0xe656:	jne	0xf079


0xdb0e:	add	rbx, qword ptr [rsp + 8]
0xdb13:	mov	edx, dword ptr [r14 + 0xa0]
0xdb1a:	mov	rdi, r14
0xdb1d:	sub	rbx, rax
0xdb20:	lea	rsi, [rbx - 1]
0xdb24:	call	0x98c0


0xddef:	add	rbx, 1
0xddf3:	add	r15, 8
0xddf7:	cmp	qword ptr [rsp + 8], rbx
0xddfc:	jge	0xdca8


0xdce9:	mov	rcx, qword ptr [rax + 0x10]
0xdced:	test	rcx, rcx
0xdcf0:	jle	0xddef


0xdf41:	cmp	qword ptr [r14 + 0x58], r13
0xdf45:	jle	0xde02


0xdcbe:	movzx	ecx, byte ptr [r11 + rbx - 1]
0xdcc4:	lea	rax, [r13 + 1]
0xdcc8:	cmp	byte ptr [r11 + r13], cl
0xdccc:	jne	0xde02


0xde58:	mov	rcx, rbx
0xde5b:	mov	rbx, r13
0xde5e:	mov	r13, r8
0xde61:	cmp	qword ptr [rbx + 0x20], rbp
0xde65:	jg	0xd919


0xda05:	mov	rsi, r12
0xda08:	mov	rdi, r14
0xda0b:	mov	qword ptr [rsp + 0x20], r11
0xda10:	call	0x7170


0x1a80:	jmp	qword ptr [rip + 0x217442]


0x103d0:	mov	rax, qword ptr [r12 + 0x28]
0x103d5:	mov	rdi, qword ptr [rsp + 0x30]
0x103da:	mov	rax, qword ptr [rax + rdi + 0x10]
0x103df:	mov	r10, qword ptr [rax]
0x103e2:	jmp	0x10284


0x10276:	mov	rax, qword ptr [r12 + 0x18]
0x1027b:	mov	rsi, qword ptr [rsp + 0x28]
0x10280:	mov	r10, qword ptr [rax + rsi]
0x10284:	cmp	r9, qword ptr [rbx + 0x18]
0x10288:	jg	0x103c7


0x103b0:	add	r13, 1
0x103b4:	cmp	byte ptr [rax + 0x20], 0
0x103b8:	lea	r15, [rax + 0x28]
0x103bc:	je	0x103f0


0x1044a:	mov	rdi, qword ptr [rsp + 0x90]
0x10452:	mov	dword ptr [rsp + 8], eax
0x10456:	call	0x18d0


0xde02:	mov	r13, r11
0xde05:	jmp	0xd919


0xdca8:	mov	rax, rbx
0xdcab:	sub	rax, qword ptr [r12]
0xdcaf:	test	rax, rax
0xdcb2:	jle	0xdcd5


0xdcf6:	mov	rdi, qword ptr [rax + 0x18]
0xdcfa:	mov	rax, qword ptr [rsp + 0x50]
0xdcff:	xor	edx, edx
0xdd01:	mov	r8, qword ptr [rsp + 0x58]
0xdd06:	mov	rsi, qword ptr [rax]
0xdd09:	jmp	0xdd1d


0xdf4b:	lea	esi, [r13 + 1]
0xdf4f:	mov	rdi, r14
0xdf52:	call	0x7020


0xdcd2:	mov	r13, rax
0xdcd5:	mov	rax, qword ptr [r14 + 0xb8]
0xdcdc:	mov	rax, qword ptr [rax + r15]
0xdce0:	test	rax, rax
0xdce3:	je	0xddef


0xde6b:	test	rbp, rbp
0xde6e:	mov	r12, rcx
0xde71:	je	0xdc82




0x10284:	cmp	r9, qword ptr [rbx + 0x18]
0x10288:	jg	0x103c7


0x1028e:	mov	rax, qword ptr [rbx]
0x10291:	mov	rax, qword ptr [rax + r9*8]
0x10295:	test	rax, rax
0x10298:	je	0x103c7


0x103f0:	mov	r15, rbx
0x103f3:	jmp	0xfe98


0xdd1d:	mov	rbp, qword ptr [rdi + rdx*8]
0xdd21:	mov	rax, rbp
0xdd24:	shl	rax, 4
0xdd28:	add	rax, rsi
0xdd2b:	cmp	byte ptr [rax + 8], 9
0xdd2f:	jne	0xdd10


0xde77:	mov	r15, r11
0xde7a:	jmp	0xdc7e


0x1029e:	mov	rdi, qword ptr [rax + 0x10]
0x102a2:	lea	rsi, [rax + 0x18]
0x102a6:	mov	rdx, r10
0x102a9:	call	0x7ae0


0xdd31:	cmp	r8, qword ptr [rax]
0xdd34:	jne	0xdd10


0xdd10:	add	rdx, 1
0xdd14:	cmp	rcx, rdx
0xdd17:	je	0xddef


0xdc7e:	lea	r11, [r15 + 1]
0xdc82:	cmp	qword ptr [rsp + 8], r11
0xdc87:	jl	0xd919


0xdd36:	cmp	rbp, -1
0xdd3a:	je	0xddef


0xdd40:	mov	rsi, qword ptr [r12 + 0x10]
0xdd45:	mov	rcx, qword ptr [r12]
0xdd49:	test	rsi, rsi
0xdd4c:	je	0xde10


0xde10:	mov	rsi, rbx
0xde13:	mov	edi, 0x18
0xde18:	mov	qword ptr [rsp + 0x18], r11
0xde1d:	sub	rsi, rcx
0xde20:	mov	qword ptr [rsp + 0x10], rcx
0xde25:	add	rsi, 1
0xde29:	call	0x1ab0


0xdd52:	mov	qword ptr [rsp + 0x10], r11
0xdd57:	mov	rdx, qword ptr [r12 + 8]
0xdd5c:	sub	rsp, 8
0xdd60:	push	9
0xdd62:	mov	r9, rbx
0xdd65:	mov	r8, rbp
0xdd68:	mov	rdi, r14
0xdd6b:	call	0xc4f0


0xda15:	test	eax, eax
0xda17:	jne	0xda58


0xda19:	mov	r8, qword ptr [r14 + 8]
0xda1d:	mov	rdx, qword ptr [rsp + 0x18]
0xda22:	mov	r9, qword ptr [rsp + 0x10]
0xda27:	mov	r11, qword ptr [rsp + 0x20]
0xda2c:	jmp	0xd960


0xda58:	mov	rbx, qword ptr [rsp + 0xa8]
0xda60:	xor	rbx, qword ptr fs:[0x28]
0xda69:	jne	0xdfbc


0x6282:	cmp	eax, -1
0x6285:	je	0x61ee


0x628b:	test	eax, eax
0x628d:	jne	0x6297


0x628f:	mov	esi, dword ptr [rsp + 8]
0x6293:	test	esi, esi
0x6295:	jne	0x6315


0x6297:	cmp	r15, 0x3f
0x629b:	jg	0x62b0


0x629d:	movzx	eax, word ptr [rsp + 0x26]
0x62a2:	and	word ptr [r13 + 0x22], ax
0x62a7:	nop	word ptr [rax + rax]
0x62b0:	add	r13, 0x28
0x62b4:	cmp	byte ptr [r13 - 8], 0
0x62b9:	jne	0x6240


0x75d5:	test	al, al
0x75d7:	je	0x761b


0x761b:	mov	eax, 0xc
0x7620:	add	rsp, 0x18
0x7624:	pop	rbx
0x7625:	pop	rbp
0x7626:	pop	r12
0x7628:	pop	r13
0x762a:	pop	r14
0x762c:	pop	r15
0x762e:	ret	


0x75d9:	mov	rax, qword ptr [r14 + 0x28]
0x75dd:	mov	edx, ebp
0x75df:	mov	rdi, r14
0x75e2:	mov	rax, qword ptr [rax + r12 + 0x10]
0x75e7:	mov	r9, qword ptr [rax + 8]
0x75eb:	mov	rsi, r9
0x75ee:	mov	qword ptr [rsp], r9
0x75f2:	call	0x7450


0x7754:	mov	edx, eax
0x7756:	xor	eax, eax
0x7758:	test	dl, dl
0x775a:	jne	0x7620


0x7760:	jmp	0x761b


0x7f43:	mov	ebx, eax
0x7f45:	mov	rax, qword ptr [rbp]
0x7f49:	mov	r9, qword ptr [rsp + 0x30]
0x7f4e:	mov	rcx, qword ptr [rsp + 0x20]
0x7f53:	mov	r8, r15
0x7f56:	mov	rdx, r12
0x7f59:	mov	rdi, r13
0x7f5c:	mov	rsi, qword ptr [rax + r14*8]
0x7f60:	call	0x6350


0x7f65:	cmp	ebx, eax
0x7f67:	je	0x7fe0


0x7fe0:	mov	rax, qword ptr [rsp + 0x38]
0x7fe5:	add	r14, 1
0x7fe9:	cmp	r14, qword ptr [rax]
0x7fec:	jl	0x7f00


0x7f69:	mov	eax, 1
0x7f6e:	add	rsp, 0x48
0x7f72:	pop	rbx
0x7f73:	pop	rbp
0x7f74:	pop	r12
0x7f76:	pop	r13
0x7f78:	pop	r14
0x7f7a:	pop	r15
0x7f7c:	ret	


0x7f00:	mov	rax, qword ptr [rbp]
0x7f04:	mov	rdx, qword ptr [r13 + 0xd8]
0x7f0b:	mov	rdi, r13
0x7f0e:	mov	r9, qword ptr [rsp + 0x28]
0x7f13:	mov	r8, qword ptr [rsp + 0x18]
0x7f18:	mov	rcx, qword ptr [rsp + 0x10]
0x7f1d:	mov	rsi, qword ptr [rax + r14*8]
0x7f21:	lea	rax, [rsi + rsi*4]
0x7f25:	lea	rax, [rdx + rax*8]
0x7f29:	mov	rdx, qword ptr [rsp + 8]
0x7f2e:	mov	rax, qword ptr [rax]
0x7f31:	shl	rax, 4
0x7f35:	add	rax, qword ptr [rdx]
0x7f38:	mov	r12, qword ptr [rax]
0x7f3b:	mov	rdx, r12
0x7f3e:	call	0x6350


0xa208:	jmp	0x9cc3


0x10680:	cmp	byte ptr [rsp + 8], 0x15
0x10685:	mov	eax, 0xb
0x1068a:	je	0x1052e


0x10690:	jmp	0x104e1


0x8ed8:	test	al, al
0x8eda:	je	0x8ea8


0x9175:	test	al, al
0x9177:	jne	0x927f


0x9cbf:	test	eax, eax
0x9cc1:	jne	0x9ccd


0x9ccd:	mov	rcx, qword ptr [rsp + 0x38]
0x9cd2:	xor	rcx, qword ptr fs:[0x28]
0x9cdb:	jne	0xa32a


0x9d3d:	jmp	0x9cc3


0x9355:	test	eax, eax
0x9357:	mov	dword ptr [rsp + 0x1c], eax
0x935b:	jne	0x93a8


0x935d:	mov	rdi, qword ptr [rsp + 8]
0x9362:	mov	rdx, r13
0x9365:	mov	rsi, r14
0x9368:	call	0x90f0


0x93a8:	mov	rcx, qword ptr [rsp + 0x38]
0x93ad:	xor	rcx, qword ptr fs:[0x28]
0x93b6:	jne	0x93c7


0xe091:	test	eax, eax
0xe093:	mov	dword ptr [r13], eax
0xe097:	jne	0xe1b0


0xe09d:	mov	rax, qword ptr [rbx + 0x48]
0xe0a1:	mov	edx, dword ptr [rbx + 0xa0]
0xe0a7:	mov	rdi, rbx
0xe0aa:	lea	rsi, [rax - 1]
0xe0ae:	call	0x98c0


0xe176:	test	eax, eax
0xe178:	mov	dword ptr [r13], eax
0xe17c:	jne	0xe1b0


0xe17e:	test	byte ptr [rbp + 0x68], 0x40
0xe182:	je	0xe035


0xe188:	mov	rdx, r15
0xe18b:	mov	rsi, r14
0xe18e:	mov	rdi, rbx
0xe191:	call	0xd6e0


0xe196:	test	eax, eax
0xe198:	mov	dword ptr [r13], eax
0xe19c:	jne	0xe1b0


0xe19e:	mov	rax, qword ptr [rbx + 0xb8]
0xe1a5:	mov	rbp, qword ptr [rax + r12*8]
0xe1a9:	jmp	0xe035


0x140cd:	add	rsp, 0x20
0x140d1:	test	eax, eax
0x140d3:	setne	al
0x140d6:	add	rsp, 0x18
0x140da:	pop	rbx
0x140db:	movzx	eax, al
0x140de:	pop	rbp
0x140df:	pop	r12
0x140e1:	pop	r13
0x140e3:	ret	


0x23f8:	mov	byte ptr [rip + 0x216d29], 1
0x23ff:	pop	rbp
0x2400:	ret	


0xdf57:	test	eax, eax
0xdf59:	jne	0xda58


0xdf5f:	mov	r11, qword ptr [r14 + 8]
0xdf63:	jmp	0xdcbe


0x71ca:	test	eax, eax
0x71cc:	je	0x719f


0x71ce:	jmp	0x71a6


0x71a6:	pop	rbx
0x71a7:	pop	rbp
0x71a8:	pop	r12
0x71aa:	ret	


0x719b:	test	eax, eax
0x719d:	jne	0x71a6


0x8c0d:	test	rax, rax
0x8c10:	mov	qword ptr [rbx + 0x10], rax
0x8c14:	je	0x8be2


0x8c16:	mov	qword ptr [rax], rbx
0x8c19:	jmp	0x8be2


0x8c2d:	test	rax, rax
0x8c30:	mov	qword ptr [rbx + 8], rax
0x8c34:	je	0x8bd3


0x8c36:	mov	qword ptr [rax], rbx
0x8c39:	jmp	0x8bd3


0x936d:	mov	rdi, qword ptr [rsp + 0x30]
0x9372:	mov	qword ptr [rbx + r15*8], rax
0x9376:	call	0x18d0


0xfd68:	mov	qword ptr [r14], rax
0xfd6b:	mov	eax, dword ptr [rsp + 0x5c]
0xfd6f:	test	eax, eax
0xfd71:	jne	0xfcc8


0xfd77:	cmp	qword ptr [rsp + 0x10], 0
0xfd7d:	je	0xfcc8


0xfd83:	mov	rax, qword ptr [rsp + 8]
0xfd88:	mov	rax, qword ptr [rax + 0xb8]
0xfd8f:	mov	rdx, qword ptr [rax + rbp*8]
0xfd93:	xor	eax, eax
0xfd95:	test	byte ptr [rdx + 0x68], 0x40
0xfd99:	je	0xfcc8


0xfd10:	mov	rdx, rax
0xfd13:	mov	eax, dword ptr [rsp + 0x60]
0xfd17:	test	eax, eax
0xfd19:	jne	0xfcc8


0xfd1b:	mov	r15, qword ptr [rdx + 0x38]
0xfd1f:	lea	r14, [rdx + 0x38]
0xfd23:	test	r15, r15
0xfd26:	je	0xff30


0xff30:	mov	rdi, qword ptr [rbx + 8]
0xff34:	mov	qword ptr [rdx + 0x40], 0
0xff3c:	mov	qword ptr [rsp + 0x20], rdx
0xff41:	mov	qword ptr [rdx + 0x38], rdi
0xff45:	shl	rdi, 3
0xff49:	call	0x1b00


0xfd2c:	mov	rsi, qword ptr [rsp + 0x10]
0xfd31:	mov	rdx, r14
0xfd34:	mov	rdi, rbx
0xfd37:	call	0x85f0


0xfd3c:	test	eax, eax
0xfd3e:	mov	dword ptr [rsp + 0x5c], eax
0xfd42:	jne	0xfcc8


0xfd44:	cmp	qword ptr [r13 + 0x28], 0
0xfd49:	jne	0xffc0


0xfd4f:	mov	r14, qword ptr [rsp + 0x18]
0xfd54:	add	r14, qword ptr [r13]
0xfd58:	lea	rdi, [rsp + 0x5c]
0xfd5d:	mov	rdx, rbx
0xfd60:	mov	rsi, r12
0xfd63:	call	0x90f0


0xffc0:	mov	rax, qword ptr [rsp + 8]
0xffc5:	mov	rax, qword ptr [rax + 0xd8]
0xffcc:	mov	qword ptr [rsp + 0x20], rax
0xffd1:	jle	0x100ab


0x100ab:	mov	dword ptr [rsp + 0x5c], 0
0x100b3:	jmp	0xfd4f


0xffd7:	xor	r15d, r15d
0xffda:	nop	word ptr [rax + rax]
0xffe0:	mov	rax, qword ptr [r13 + 0x30]
0xffe4:	mov	rdi, qword ptr [rsp + 0x20]
0xffe9:	mov	rax, qword ptr [rax + r15*8]
0xffed:	lea	rax, [rax + rax*4]
0xfff1:	lea	rdx, [rdi + rax*8]
0xfff5:	cmp	rbp, qword ptr [rdx + 0x10]
0xfff9:	jle	0x1009d


0x1009d:	add	r15, 1
0x100a1:	cmp	r15, qword ptr [r13 + 0x28]
0x100a5:	jl	0xffe0


0xffff:	cmp	rbp, qword ptr [rdx + 8]
0x10003:	jg	0x1009d


0xffe0:	mov	rax, qword ptr [r13 + 0x30]
0xffe4:	mov	rdi, qword ptr [rsp + 0x20]
0xffe9:	mov	rax, qword ptr [rax + r15*8]
0xffed:	lea	rax, [rax + rax*4]
0xfff1:	lea	rdx, [rdi + rax*8]
0xfff5:	cmp	rbp, qword ptr [rdx + 0x10]
0xfff9:	jle	0x1009d


0x10009:	mov	rcx, qword ptr [rdx]
0x1000c:	mov	rax, qword ptr [r12]
0x10010:	mov	rsi, qword ptr [rbx + 8]
0x10014:	shl	rcx, 4
0x10018:	cmp	rbp, qword ptr [rdx + 0x18]
0x1001c:	mov	r8, qword ptr [rax + rcx]
0x10020:	je	0x100c0


0x100c0:	test	rsi, rsi
0x100c3:	jle	0x1009d


0x10026:	xor	r14d, r14d
0x10029:	test	rsi, rsi
0x1002c:	jle	0x1009d


0x100c5:	mov	r10, qword ptr [rbx + 0x10]
0x100c9:	mov	r9, -1
0x100d0:	lea	r11, [r10 + rsi*8]
0x100d4:	mov	rcx, r10
0x100d7:	mov	rsi, r9
0x100da:	jmp	0x100f6


0x1002e:	mov	qword ptr [rsp + 0x28], rbp
0x10033:	mov	rbp, r8
0x10036:	jmp	0x1004e


0x100f6:	mov	rdi, qword ptr [rcx]
0x100f9:	mov	rdx, rdi
0x100fc:	shl	rdx, 4
0x10100:	add	rdx, rax
0x10103:	movzx	r14d, byte ptr [rdx + 8]
0x10108:	cmp	r14d, 8
0x1010c:	jne	0x100e0


0x1004e:	mov	rdx, qword ptr [rbx + 0x10]
0x10052:	mov	rsi, qword ptr [rdx + r14*8]
0x10056:	mov	rdx, rsi
0x10059:	shl	rdx, 4
0x1005d:	add	rax, rdx
0x10060:	movzx	edx, byte ptr [rax + 8]
0x10064:	sub	edx, 8
0x10067:	cmp	edx, 1
0x1006a:	ja	0x10040


0x1010e:	cmp	r8, qword ptr [rdx]
0x10111:	cmove	rsi, rdi
0x10115:	add	rcx, 8
0x10119:	cmp	r11, rcx
0x1011c:	jne	0x100f6


0x100e0:	cmp	r14d, 9
0x100e4:	jne	0x100ed


0x1006c:	cmp	rbp, qword ptr [rax]
0x1006f:	jne	0x10040


0x10040:	add	r14, 1
0x10044:	cmp	r14, qword ptr [rbx + 8]
0x10048:	jge	0x10098


0x1011e:	test	rsi, rsi
0x10121:	mov	r14, r9
0x10124:	mov	qword ptr [rsp + 0x28], r9
0x10129:	js	0x101f0


0x100e6:	cmp	r8, qword ptr [rdx]
0x100e9:	cmove	r9, rdi
0x100ed:	add	rcx, 8
0x100f1:	cmp	r11, rcx
0x100f4:	je	0x1011e


0x100ed:	add	rcx, 8
0x100f1:	cmp	r11, rcx
0x100f4:	je	0x1011e


0x10071:	mov	rcx, qword ptr [rsp + 0x10]
0x10076:	mov	rdx, rbx
0x10079:	mov	rdi, r12
0x1007c:	call	0xa330


0x1004a:	mov	rax, qword ptr [r12]
0x1004e:	mov	rdx, qword ptr [rbx + 0x10]
0x10052:	mov	rsi, qword ptr [rdx + r14*8]
0x10056:	mov	rdx, rsi
0x10059:	shl	rdx, 4
0x1005d:	add	rax, rdx
0x10060:	movzx	edx, byte ptr [rax + 8]
0x10064:	sub	edx, 8
0x10067:	cmp	edx, 1
0x1006a:	ja	0x10040


0x10098:	mov	rbp, qword ptr [rsp + 0x28]
0x1009d:	add	r15, 1
0x100a1:	cmp	r15, qword ptr [r13 + 0x28]
0x100a5:	jl	0xffe0


0x101f0:	cmp	qword ptr [rsp + 0x28], 0
0x101f6:	jns	0x1015f


0x1012f:	mov	rcx, qword ptr [rsp + 0x10]
0x10134:	mov	rdx, rbx
0x10137:	mov	rdi, r12
0x1013a:	call	0xa330


0x101fc:	jmp	0x1009d


0x1015f:	xor	r14d, r14d
0x10162:	mov	qword ptr [rsp + 0x30], rbp
0x10167:	mov	rbp, r14
0x1016a:	mov	r14, qword ptr [rsp + 0x28]
0x1016f:	jmp	0x1018a


0x1018a:	mov	r10, qword ptr [r10 + rbp*8]
0x1018e:	mov	rax, qword ptr [r12 + 0x38]
0x10193:	mov	rdx, r14
0x10196:	lea	r9, [r10 + r10*2]
0x1019a:	shl	r9, 3
0x1019e:	add	rax, r9
0x101a1:	mov	rdi, qword ptr [rax + 8]
0x101a5:	lea	rsi, [rax + 0x10]
0x101a9:	call	0x7ae0


0xe750:	test	eax, eax
0xe752:	mov	dword ptr [rsp + 0x5c], eax
0xe756:	jne	0xf050


0xe75c:	mov	rdi, qword ptr [rsp + 0x38]
0xe761:	lea	rax, [rdi + 0xb8]
0xe768:	mov	qword ptr [rsp + 0x1a0], rax
0xe770:	movzx	eax, byte ptr [rdi + 0xb0]
0xe777:	mov	byte ptr [rsp + 8], al
0xe77b:	shr	al, 4
0xe77e:	and	eax, 1
0xe781:	cmp	byte ptr [rsp + 0x1ab], 0
0xe789:	mov	byte ptr [rsp + 0x1ae], al
0xe790:	jne	0xe7b5


0xf050:	mov	rdi, qword ptr [rsp + 0x1d8]
0xf058:	call	0x18d0


0xe792:	mov	rsi, qword ptr [rsp + 0x38]
0xe797:	mov	rax, qword ptr [rsp + 0x78]
0xe79c:	cmp	dword ptr [rsi + 0xb4], 1
0xe7a3:	mov	qword ptr [rsp + 0x128], rax
0xe7ab:	mov	rax, qword ptr [rsp + 0x88]
0xe7b3:	jle	0xe7b7


0xe7b5:	xor	eax, eax
0xe7b7:	mov	qword ptr [rsp + 0x150], rax
0xe7bf:	mov	qword ptr [rsp + 0x158], rax
0xe7c7:	mov	rax, qword ptr [rsp + 0x48]
0xe7cc:	mov	qword ptr [rsp + 0x188], r13
0xe7d4:	mov	qword ptr [rsp + 0x180], r13
0xe7dc:	movzx	eax, byte ptr [rax + 0x38]
0xe7e0:	mov	byte ptr [rsp + 8], al
0xe7e4:	shr	al, 7
0xe7e7:	mov	byte ptr [rsp + 0x1ad], al
0xe7ee:	mov	rax, qword ptr [rsp + 0x38]
0xe7f3:	mov	r14, qword ptr [rax + 0x98]
0xe7fa:	mov	eax, dword ptr [rsp + 0x280]
0xe801:	mov	qword ptr [rsp + 0x1c8], -1
0xe80d:	lea	r13, [r14 + r14]
0xe811:	mov	dword ptr [rsp + 0x1c0], eax
0xe818:	test	r13, r13
0xe81b:	jle	0xe86f


0xe7b7:	mov	qword ptr [rsp + 0x150], rax
0xe7bf:	mov	qword ptr [rsp + 0x158], rax
0xe7c7:	mov	rax, qword ptr [rsp + 0x48]
0xe7cc:	mov	qword ptr [rsp + 0x188], r13
0xe7d4:	mov	qword ptr [rsp + 0x180], r13
0xe7dc:	movzx	eax, byte ptr [rax + 0x38]
0xe7e0:	mov	byte ptr [rsp + 8], al
0xe7e4:	shr	al, 7
0xe7e7:	mov	byte ptr [rsp + 0x1ad], al
0xe7ee:	mov	rax, qword ptr [rsp + 0x38]
0xe7f3:	mov	r14, qword ptr [rax + 0x98]
0xe7fa:	mov	eax, dword ptr [rsp + 0x280]
0xe801:	mov	qword ptr [rsp + 0x1c8], -1
0xe80d:	lea	r13, [r14 + r14]
0xe811:	mov	dword ptr [rsp + 0x1c0], eax
0xe818:	test	r13, r13
0xe81b:	jle	0xe86f


0xe86f:	cmp	qword ptr [rsp + 0x270], 1
0xe878:	mov	qword ptr [rsp + 0x1f0], r13
0xe880:	mov	dword ptr [rsp + 0x200], 1
0xe88b:	mov	qword ptr [rsp + 0x210], r13
0xe893:	jbe	0xf9b8


0xe81d:	movabs	rax, 0x666666666666666
0xe827:	cmp	r13, rax
0xe82a:	jg	0xf570


0xf9b8:	mov	rax, qword ptr [rsp + 0x38]
0xf9bd:	test	byte ptr [rax + 0xb0], 2
0xf9c4:	jne	0xe899


0xe899:	mov	rax, qword ptr [rsp + 0x160]
0xe8a1:	movabs	rdx, 0x1ffffffffffffffe
0xe8ab:	cmp	rax, rdx
0xe8ae:	ja	0xf570


0xe830:	lea	rdi, [r13 + r14*8]
0xe835:	shl	rdi, 3
0xe839:	call	0x1b00


0xf570:	mov	rdi, qword ptr [rsp + 0x1d8]
0xf578:	mov	dword ptr [rsp + 0x5c], 0xc
0xf580:	jmp	0xf058


0xf9ca:	mov	qword ptr [rsp + 0x1d8], 0
0xf9d6:	jmp	0xe8d5


0xe8b4:	lea	rdi, [rax*8 + 8]
0xe8bc:	call	0x1b00


0xf058:	call	0x18d0


0xe8d5:	mov	eax, dword ptr [rsp + 0x280]
0xe8dc:	mov	qword ptr [rsp + 0xd8], rbp
0xe8e4:	and	eax, 1
0xe8e7:	cmp	eax, 1
0xe8ea:	sbb	eax, eax
0xe8ec:	and	eax, 2
0xe8ef:	add	eax, 4
0xe8f2:	mov	dword ptr [rsp + 0x190], eax
0xe8f9:	xor	eax, eax
0xe8fb:	cmp	rbp, r12
0xe8fe:	setle	al
0xe901:	lea	eax, [rax + rax - 1]
0xe905:	mov	dword ptr [rsp + 0xac], eax
0xe90c:	mov	rax, r12
0xe90f:	cmovle	rax, rbp
0xe913:	mov	qword ptr [rsp + 0x90], rax
0xe91b:	mov	rax, r12
0xe91e:	cmovge	rax, rbp
0xe922:	cmp	qword ptr [rsp + 0x68], 0
0xe928:	mov	qword ptr [rsp + 0x70], rax
0xe92d:	mov	rax, qword ptr [rsp + 0x38]
0xe932:	mov	esi, dword ptr [rax + 0xb4]
0xe938:	mov	eax, 8
0xe93d:	mov	dword ptr [rsp + 0xc8], esi
0xe944:	je	0xe97f


0xe97f:	cmp	rbp, qword ptr [rsp + 0x70]
0xe984:	setg	cl
0xe987:	cmp	rbp, qword ptr [rsp + 0x90]
0xe98f:	setl	dl
0xe992:	or	cl, dl
0xe994:	jne	0xf469


0xe946:	cmp	esi, 1
0xe949:	mov	ecx, 4
0xe94e:	je	0xe96e


0xe99a:	lea	rcx, [rsp + 0xd8]
0xe9a2:	cmp	rbp, r12
0xe9a5:	mov	edx, 0
0xe9aa:	cmovle	rdx, rcx
0xe9ae:	test	rdx, rdx
0xe9b1:	mov	qword ptr [rsp + 0xc0], rdx
0xe9b9:	setne	byte ptr [rsp + 0xcf]
0xe9c1:	sub	eax, 4
0xe9c4:	mov	dword ptr [rsp + 0xa8], eax
0xe9cb:	lea	rax, [rsp + 0xd0]
0xe9d3:	mov	qword ptr [rsp + 0x28], rax
0xe9d8:	mov	eax, dword ptr [rsp + 0xa8]
0xe9df:	cmp	eax, 4
0xe9e2:	ja	0xf5cd


0xf469:	mov	rdi, qword ptr [rsp + 0x1d8]
0xf471:	mov	dword ptr [rsp + 0x5c], 1
0xf479:	jmp	0xf058


0xe96e:	xor	edx, edx
0xe970:	cmp	rbp, r12
0xe973:	movzx	eax, bl
0xe976:	setle	dl
0xe979:	or	eax, ecx
0xe97b:	add	edx, edx
0xe97d:	or	eax, edx
0xe97f:	cmp	rbp, qword ptr [rsp + 0x70]
0xe984:	setg	cl
0xe987:	cmp	rbp, qword ptr [rsp + 0x90]
0xe98f:	setl	dl
0xe992:	or	cl, dl
0xe994:	jne	0xf469


0xe950:	mov	rax, qword ptr [rsp + 0x48]
0xe955:	test	byte ptr [rax + 0x1a], 0x40
0xe959:	jne	0xf6de


0xe9e8:	lea	rcx, [rip + 0x6f91]
0xe9ef:	movsxd	rax, dword ptr [rcx + rax*4]
0xe9f3:	add	rax, rcx
0xe9f6:	jmp	rax


0xf5cd:	mov	rbx, qword ptr [rsp + 0x68]
0xf5d2:	mov	r13d, dword ptr [rsp + 0xac]
0xf5da:	mov	r14, qword ptr [rsp + 0x90]
0xf5e2:	mov	r15, qword ptr [rsp + 0x70]
0xf5e7:	mov	r12, qword ptr [rsp + 0x88]
0xf5ef:	jmp	0xf638


0xe95f:	cmp	qword ptr [rsp + 0xb0], 0
0xe968:	jne	0xf6de


0xf6de:	xor	ecx, ecx
0xf6e0:	jmp	0xe96e


0xf638:	mov	rdx, rbp
0xf63b:	sub	rdx, qword ptr [rsp + 0x148]
0xf643:	cmp	qword ptr [rsp + 0x158], rdx
0xf64b:	ja	0xf5f8


0xf64d:	mov	edx, dword ptr [rsp + 0x280]
0xf654:	mov	rdi, qword ptr [rsp]
0xf658:	mov	rsi, rbp
0xf65b:	call	0x9b90


0xf5f8:	cmp	r12, rbp
0xf5fb:	mov	rax, rbx
0xf5fe:	jle	0xf60f


0xf60f:	cmp	byte ptr [rax], 0
0xf612:	jne	0xead8


0xf600:	mov	rax, qword ptr [rsp + 0x128]
0xf608:	movzx	eax, byte ptr [rax + rdx]
0xf60c:	add	rax, rbx
0xf60f:	cmp	byte ptr [rax], 0
0xf612:	jne	0xead8


0xf618:	movsxd	rax, r13d
0xf61b:	add	rbp, rax
0xf61e:	cmp	rbp, r14
0xf621:	mov	qword ptr [rsp + 0xd8], rbp
0xf629:	jl	0xf469


0xead8:	mov	edx, dword ptr [rsp + 0x280]
0xeadf:	mov	rdi, qword ptr [rsp]
0xeae3:	mov	rsi, rbp
0xeae6:	call	0x9b90


0xf62f:	cmp	rbp, r15
0xf632:	jg	0xf469


0xeaeb:	test	eax, eax
0xeaed:	mov	dword ptr [rsp + 0x5c], eax
0xeaf1:	jne	0xf050


0xeaf7:	cmp	dword ptr [rsp + 0xc8], 1
0xeaff:	je	0xeb1d


0xeb1d:	mov	rbx, qword ptr [rsp + 0x1b8]
0xeb25:	movzx	eax, byte ptr [rsp + 0x58]
0xeb2a:	mov	dword ptr [rsp + 0x200], 0
0xeb35:	mov	qword ptr [rsp + 0x1e8], 0
0xeb41:	mov	qword ptr [rsp + 0x1e0], 0
0xeb4d:	mov	dword ptr [rsp + 0xd0], 0
0xeb58:	mov	r14, qword ptr [rbx + 0x48]
0xeb5c:	and	eax, 1
0xeb5f:	mov	byte ptr [rsp + 0xce], al
0xeb66:	mov	rax, qword ptr [rsp + 0x168]
0xeb6e:	cmp	byte ptr [r14 + 0x68], 0
0xeb73:	mov	qword ptr [rsp + 8], rax
0xeb78:	js	0xf4f0


0xeb01:	cmp	qword ptr [rsp + 0x150], 0
0xeb0a:	je	0xeb1d


0xf4f0:	mov	edx, dword ptr [rsp + 0x1c0]
0xf4f7:	mov	rdi, qword ptr [rsp]
0xf4fb:	lea	rsi, [rax - 1]
0xf4ff:	call	0x98c0


0xeb7e:	mov	rax, qword ptr [rsp + 0x1d8]
0xeb86:	test	rax, rax
0xeb89:	je	0xeba2


0xeb0c:	mov	rax, qword ptr [rsp + 0x130]
0xeb14:	cmp	dword ptr [rax], -1
0xeb17:	je	0xf441


0xeba2:	movzx	eax, byte ptr [rsp + 0xcf]
0xebaa:	mov	byte ptr [rsp + 0x18], al
0xebae:	movzx	eax, byte ptr [r14 + 0x68]
0xebb3:	test	al, 0x10
0xebb5:	mov	qword ptr [rsp + 0x20], -1
0xebbe:	mov	qword ptr [rsp + 0x30], 0
0xebc7:	jne	0xfa50


0xeb8b:	cmp	qword ptr [rbx + 0x98], 0
0xeb93:	mov	rdi, qword ptr [rsp + 8]
0xeb98:	mov	qword ptr [rax + rdi*8], r14
0xeb9c:	jne	0xfa8b


0xf441:	movsxd	rax, dword ptr [rsp + 0xac]
0xf449:	add	rbp, rax
0xf44c:	cmp	rbp, qword ptr [rsp + 0x90]
0xf454:	mov	qword ptr [rsp + 0xd8], rbp
0xf45c:	jl	0xf469


0xebcd:	mov	rax, qword ptr [rsp + 0xc0]
0xebd5:	mov	r8, qword ptr [rsp + 0x168]
0xebdd:	mov	qword ptr [rsp + 0x50], rax
0xebe2:	lea	rax, [rsp + 0xe0]
0xebea:	mov	qword ptr [rsp + 0x60], rax
0xebef:	lea	rax, [rsp + 0xd4]
0xebf7:	mov	qword ptr [rsp + 0x80], rax
0xebff:	jmp	0xec5c


0xfa50:	cmp	byte ptr [r14 + 0x68], 0
0xfa55:	js	0xfac6


0xfa8b:	lea	rbx, [r14 + 0x10]
0xfa8f:	lea	rbp, [r14 + 0x18]
0xfa93:	mov	rdi, qword ptr [rsp]
0xfa97:	xor	ecx, ecx
0xfa99:	mov	rdx, rbp
0xfa9c:	mov	rsi, rbx
0xfa9f:	call	0x9770


0xf45e:	cmp	rbp, qword ptr [rsp + 0x70]
0xf463:	jle	0xe9d8


0xec5c:	cmp	qword ptr [rsp + 0x188], r8
0xec64:	jle	0xed54


0xfac6:	mov	rsi, qword ptr [r14 + 0x10]
0xfaca:	mov	rcx, qword ptr [rsp + 8]
0xfacf:	lea	rdx, [r14 + 0x18]
0xfad3:	mov	rdi, qword ptr [rsp]
0xfad7:	call	0x9ac0


0xfa57:	mov	esi, dword ptr [rsp + 0x58]
0xfa5b:	mov	rax, qword ptr [rsp + 8]
0xfa60:	test	esi, esi
0xfa62:	mov	qword ptr [rsp + 0x20], rax
0xfa67:	je	0xed66


0xe9d8:	mov	eax, dword ptr [rsp + 0xa8]
0xe9df:	cmp	eax, 4
0xe9e2:	ja	0xf5cd


0xed54:	mov	rax, qword ptr [rsp + 0x50]
0xed59:	test	rax, rax
0xed5c:	je	0xed66


0xec6a:	mov	rax, qword ptr [rsp + 0x160]
0xec72:	lea	rbx, [r8 + 1]
0xec76:	cmp	rbx, rax
0xec79:	jge	0xf120


0xed66:	mov	rax, qword ptr [rsp + 0x20]
0xed6b:	cmp	rax, -1
0xed6f:	je	0xf430


0xfa6d:	mov	qword ptr [rsp + 0x30], 1
0xfa76:	jmp	0xebcd


0xed5e:	mov	rdi, qword ptr [rsp + 8]
0xed63:	add	qword ptr [rax], rdi
0xed66:	mov	rax, qword ptr [rsp + 0x20]
0xed6b:	cmp	rax, -1
0xed6f:	je	0xf430


0xec7f:	mov	rax, qword ptr [rsp + 0x150]
0xec87:	cmp	rbx, rax
0xec8a:	jge	0xf410


0xf120:	cmp	rax, qword ptr [rsp + 0x178]
0xf128:	jge	0xec7f


0xf430:	mov	rdi, qword ptr [rsp]
0xf434:	call	0x7970


0xed75:	cmp	rax, -2
0xed79:	je	0xf570


0xec90:	test	byte ptr [r14 + 0x68], 0x20
0xec95:	jne	0xf160


0xf410:	cmp	rax, qword ptr [rsp + 0x178]
0xf418:	jge	0xec90


0xf12e:	mov	rdi, qword ptr [rsp]
0xf132:	lea	esi, [rbx + 1]
0xf135:	call	0x7020


0xed7f:	mov	rax, qword ptr [rsp + 0x20]
0xed84:	mov	qword ptr [rsp + 0x1c8], rax
0xed8c:	mov	rax, qword ptr [rsp + 0x48]
0xed91:	test	byte ptr [rax + 0x38], 0x10
0xed95:	jne	0xf550


0xec9b:	lea	rax, [r8 + 1]
0xec9f:	mov	qword ptr [rsp + 0x168], rax
0xeca7:	mov	rax, qword ptr [rsp + 0x128]
0xecaf:	movzx	r13d, byte ptr [rax + r8]
0xecb4:	mov	rax, qword ptr [r14 + 0x58]
0xecb8:	test	rax, rax
0xecbb:	je	0xf3d0


0xf160:	cmp	qword ptr [r14 + 0x10], 0
0xf165:	mov	r13, qword ptr [rsp + 0x1b8]
0xf16d:	jle	0xf49b


0xf41e:	jmp	0xf12e


0xed9b:	cmp	qword ptr [rsp + 0x270], 1
0xeda4:	jbe	0xf69c


0xf550:	mov	rax, qword ptr [rsp + 0x38]
0xf555:	cmp	qword ptr [rax + 0x98], 0
0xf55d:	je	0xf78c


0xf3d0:	mov	rbp, qword ptr [r14 + 0x60]
0xf3d4:	test	rbp, rbp
0xf3d7:	je	0xf585


0xecc1:	mov	r13, qword ptr [rax + r13*8]
0xecc5:	cmp	qword ptr [rsp + 0x1d8], 0
0xecce:	je	0xece4


0xf49b:	mov	dword ptr [rsp + 0xd0], 0
0xf4a6:	jmp	0xec9b


0xf173:	lea	rax, [r13 + 0xd8]
0xf17a:	xor	r12d, r12d
0xf17d:	mov	qword ptr [rsp + 0xa0], rbx
0xf185:	mov	rbx, r12
0xf188:	mov	r12, r8
0xf18b:	mov	qword ptr [rsp + 0x40], rax
0xf190:	jmp	0xf2e8


0xf69c:	mov	rax, qword ptr [rsp + 0x38]
0xf6a1:	cmp	qword ptr [rax + 0x98], 0
0xf6a9:	je	0xf78c


0xedaa:	mov	rcx, qword ptr [rsp + 0x20]
0xedaf:	mov	rbx, qword ptr [rsp + 0x1d8]
0xedb7:	mov	rdi, qword ptr [rsp]
0xedbb:	mov	rax, qword ptr [rbx + rcx*8]
0xedbf:	mov	rsi, qword ptr [rax + 0x10]
0xedc3:	lea	rdx, [rax + 0x18]
0xedc7:	call	0x9ac0


0xf78c:	cmp	qword ptr [rsp + 0x270], 0
0xf795:	je	0xf050


0xf563:	jmp	0xf6af


0xf585:	mov	rdi, qword ptr [rsp + 0x1b8]
0xf58d:	mov	rsi, r14
0xf590:	call	0xa570


0xf3dd:	mov	rax, qword ptr [rsp + 0x168]
0xf3e5:	mov	edx, dword ptr [rsp + 0x1c0]
0xf3ec:	mov	rdi, qword ptr [rsp]
0xf3f0:	lea	rsi, [rax - 1]
0xf3f4:	call	0x98c0


0xece4:	test	r13, r13
0xece7:	jne	0xec08


0xecd0:	mov	rsi, qword ptr [rsp]
0xecd4:	mov	rdi, qword ptr [rsp + 0x28]
0xecd9:	mov	rdx, r13
0xecdc:	call	0xdfd0


0xf2e8:	mov	rax, qword ptr [r14 + 0x18]
0xf2ec:	mov	rbp, qword ptr [r13]
0xf2f0:	mov	r15, qword ptr [rax + rbx*8]
0xf2f4:	mov	rax, r15
0xf2f7:	shl	rax, 4
0xf2fb:	add	rax, rbp
0xf2fe:	test	byte ptr [rax + 0xa], 0x10
0xf302:	je	0xf2da


0xf6af:	mov	rcx, qword ptr [rsp + 0x20]
0xf6b4:	mov	rbx, qword ptr [rsp + 0x1d8]
0xf6bc:	mov	rdi, qword ptr [rsp]
0xf6c0:	mov	rax, qword ptr [rbx + rcx*8]
0xf6c4:	mov	rsi, qword ptr [rax + 0x10]
0xf6c8:	lea	rdx, [rax + 0x18]
0xf6cc:	call	0x9ac0


0xf79b:	cmp	qword ptr [rsp + 0x270], 1
0xf7a4:	je	0xfbc8


0xeced:	mov	ecx, dword ptr [rsp + 0xd0]
0xecf4:	mov	rdi, qword ptr [rsp + 0x1d8]
0xecfc:	test	ecx, ecx
0xecfe:	jne	0xf5c0


0xec08:	cmp	r14, r13
0xec0b:	mov	r8, qword ptr [rsp + 0x168]
0xec13:	sete	al
0xec16:	and	byte ptr [rsp + 0x18], al
0xec1a:	movzx	eax, byte ptr [r13 + 0x68]
0xec1f:	cmove	rbx, qword ptr [rsp + 8]
0xec25:	test	al, 0x10
0xec27:	mov	qword ptr [rsp + 8], rbx
0xec2c:	je	0xec59


0xf2da:	add	rbx, 1
0xf2de:	cmp	rbx, qword ptr [r14 + 0x10]
0xf2e2:	jge	0xf490


0xf304:	mov	ecx, dword ptr [rax + 8]
0xf307:	test	ecx, 0x3ff00
0xf30d:	mov	dword ptr [rsp + 0x10], ecx
0xf311:	je	0xf1d0


0xfbc8:	mov	rsi, qword ptr [rsp + 0xb8]
0xfbd0:	mov	rax, qword ptr [rsp + 0x1c8]
0xfbd8:	mov	qword ptr [rsi], 0
0xfbdf:	mov	qword ptr [rsi + 8], rax
0xfbe3:	xor	eax, eax
0xfbe5:	jmp	0xf861


0xf7aa:	mov	rsi, qword ptr [rsp + 0xb8]
0xf7b2:	mov	rcx, qword ptr [rsp + 0x270]
0xf7ba:	mov	rdx, -1
0xf7c1:	shl	rcx, 4
0xf7c5:	lea	rax, [rsi + 0x10]
0xf7c9:	add	rcx, rsi
0xf7cc:	mov	qword ptr [rax + 8], rdx
0xf7d0:	mov	qword ptr [rax], rdx
0xf7d3:	add	rax, 0x10
0xf7d7:	cmp	rcx, rax
0xf7da:	jne	0xf7cc


0xed04:	test	rdi, rdi
0xed07:	je	0xed54


0xf5c0:	mov	dword ptr [rsp + 0x5c], 0xc
0xf5c8:	jmp	0xf058


0xec59:	mov	r14, r13
0xec5c:	cmp	qword ptr [rsp + 0x188], r8
0xec64:	jle	0xed54


0xec2e:	test	al, al
0xec30:	js	0xf0f0


0xf490:	mov	rbx, qword ptr [rsp + 0xa0]
0xf498:	mov	r8, r12
0xf49b:	mov	dword ptr [rsp + 0xd0], 0
0xf4a6:	jmp	0xec9b


0xf1d0:	mov	rcx, qword ptr [rsp]
0xf1d4:	mov	rsi, qword ptr [rsp + 0x40]
0xf1d9:	mov	r8, r12
0xf1dc:	mov	rdx, r15
0xf1df:	mov	rdi, rbp
0xf1e2:	call	0xc290


0xf317:	mov	edx, dword ptr [rsp + 0x1c0]
0xf31e:	mov	rdi, qword ptr [rsp]
0xf322:	mov	rsi, r12
0xf325:	call	0x98c0


0xf861:	movzx	r11d, byte ptr [rsp + 0x1ac]
0xf86a:	mov	r10, qword ptr [rsp + 0x150]
0xf872:	xor	ecx, ecx
0xf874:	mov	r9, qword ptr [rsp + 0x138]
0xf87c:	mov	r8, qword ptr [rsp + 0x158]
0xf884:	mov	rdi, qword ptr [rsp + 0xd8]
0xf88c:	mov	rdx, qword ptr [rsp + 0xb8]
0xf894:	jmp	0xf899


0xf7dc:	mov	rdi, qword ptr [rsp + 0xb8]
0xf7e4:	mov	rax, qword ptr [rsp + 0x1c8]
0xf7ec:	mov	qword ptr [rdi + 8], rax
0xf7f0:	mov	rax, qword ptr [rsp + 0x48]
0xf7f5:	mov	qword ptr [rdi], 0
0xf7fc:	test	byte ptr [rax + 0x38], 0x10
0xf800:	jne	0xfbe3


0xf7cc:	mov	qword ptr [rax + 8], rdx
0xf7d0:	mov	qword ptr [rax], rdx
0xf7d3:	add	rax, 0x10
0xf7d7:	cmp	rcx, rax
0xf7da:	jne	0xf7cc


0xed09:	movzx	eax, byte ptr [rsp + 0xce]
0xed11:	xor	eax, 1
0xed14:	test	byte ptr [rsp + 0x30], al
0xed18:	jne	0xed54


0xf0f0:	mov	rsi, qword ptr [r13 + 0x10]
0xf0f4:	mov	rdi, qword ptr [rsp]
0xf0f8:	lea	rdx, [r13 + 0x18]
0xf0fc:	mov	rcx, r8
0xf0ff:	mov	qword ptr [rsp + 0x10], r8
0xf104:	call	0x9ac0


0xec36:	mov	eax, dword ptr [rsp + 0x58]
0xec3a:	mov	qword ptr [rsp + 0x20], r8
0xec3f:	test	eax, eax
0xec41:	je	0xed66


0xf899:	cmp	rax, -1
0xf89d:	je	0xf8b9


0xf806:	cmp	qword ptr [rsp + 0x270], 1
0xf80f:	je	0xfbe3


0xfbe3:	xor	eax, eax
0xfbe5:	jmp	0xf861


0xed1a:	mov	rsi, qword ptr [rsp + 0x1e0]
0xed22:	mov	rax, qword ptr [rsp + 0x168]
0xed2a:	xor	ecx, ecx
0xed2c:	jmp	0xed43


0xec47:	mov	qword ptr [rsp + 0x30], 1
0xec50:	mov	qword ptr [rsp + 0x50], 0
0xec59:	mov	r14, r13
0xec5c:	cmp	qword ptr [rsp + 0x188], r8
0xec64:	jle	0xed54


0xf8b9:	add	rcx, 1
0xf8bd:	add	rdx, 0x10
0xf8c1:	cmp	rcx, qword ptr [rsp + 0x270]
0xf8c9:	jne	0xf896


0xf89f:	test	r11b, r11b
0xf8a2:	mov	rsi, qword ptr [rdx + 8]
0xf8a6:	jne	0xfbea


0xf815:	mov	rax, qword ptr [rsp + 0x38]
0xf81a:	xor	r8d, r8d
0xf81d:	test	byte ptr [rax + 0xb0], 1
0xf824:	je	0xf835


0xed43:	lea	rdx, [rax + 1]
0xed47:	cmp	rsi, rdx
0xed4a:	jge	0xed30


0xf8cb:	cmp	qword ptr [rsp + 0x98], 0
0xf8d4:	jle	0xf915


0xf896:	mov	rax, qword ptr [rdx]
0xf899:	cmp	rax, -1
0xf89d:	je	0xf8b9


0xf8ac:	add	rax, rdi
0xf8af:	add	rsi, rdi
0xf8b2:	mov	qword ptr [rdx], rax
0xf8b5:	mov	qword ptr [rdx + 8], rsi
0xf8b9:	add	rcx, 1
0xf8bd:	add	rdx, 0x10
0xf8c1:	cmp	rcx, qword ptr [rsp + 0x270]
0xf8c9:	jne	0xf896


0xfbea:	cmp	r10, rax
0xfbed:	je	0xfc0c


0xf835:	mov	rbx, qword ptr [rsp + 0xb8]
0xf83d:	mov	rdx, qword ptr [rsp + 0x270]
0xf845:	mov	rsi, qword ptr [rsp]
0xf849:	mov	rdi, qword ptr [rsp + 0x48]
0xf84e:	mov	rcx, rbx
0xf851:	call	0xcc50


0xf826:	xor	r8d, r8d
0xf829:	cmp	qword ptr [rax + 0x98], 0
0xf831:	setg	r8b
0xf835:	mov	rbx, qword ptr [rsp + 0xb8]
0xf83d:	mov	rdx, qword ptr [rsp + 0x270]
0xf845:	mov	rsi, qword ptr [rsp]
0xf849:	mov	rdi, qword ptr [rsp + 0x48]
0xf84e:	mov	rcx, rbx
0xf851:	call	0xcc50


0xed4c:	test	cl, cl
0xed4e:	jne	0xfc1e


0xed30:	cmp	qword ptr [rdi + rdx*8], 0
0xed35:	mov	rax, rdx
0xed38:	mov	ecx, 1
0xed3d:	jne	0xf0b0


0xf915:	mov	rax, qword ptr [rsp + 0x38]
0xf91a:	mov	rdi, qword ptr [rsp + 0x1d8]
0xf922:	mov	r9, qword ptr [rax + 0xe0]
0xf929:	test	r9, r9
0xf92c:	je	0xf058


0xf8d6:	mov	rdx, qword ptr [rsp + 0x98]
0xf8de:	mov	rdi, qword ptr [rsp + 0xb8]
0xf8e6:	mov	rax, rcx
0xf8e9:	shl	rax, 4
0xf8ed:	add	rdx, rcx
0xf8f0:	lea	rax, [rdi + rax + 8]
0xf8f5:	shl	rdx, 4
0xf8f9:	lea	rsi, [rdi + rdx + 8]
0xf8fe:	mov	rdx, -1
0xf905:	mov	qword ptr [rax - 8], rdx
0xf909:	mov	qword ptr [rax], rdx
0xf90c:	add	rax, 0x10
0xf910:	cmp	rsi, rax
0xf913:	jne	0xf905


0xfc0c:	mov	rax, r8
0xfc0f:	jmp	0xfbf3


0xfbef:	mov	rax, qword ptr [r9 + rax*8]
0xfbf3:	cmp	r10, rsi
0xfbf6:	mov	qword ptr [rdx], rax
0xfbf9:	je	0xfc04


0xfc1e:	mov	qword ptr [rsp + 0x168], rax
0xfc26:	jmp	0xed54


0xf0b0:	mov	rsi, qword ptr [rsp]
0xf0b4:	mov	rdi, qword ptr [rsp + 0x28]
0xf0b9:	mov	qword ptr [rsp + 0x168], rdx
0xf0c1:	xor	edx, edx
0xf0c3:	call	0xdfd0


0xf932:	mov	r10, qword ptr [rsp + 0xb8]
0xf93a:	xor	r8d, r8d
0xf93d:	lea	rdx, [r10 + 0x10]
0xf941:	jmp	0xf979


0xf905:	mov	qword ptr [rax - 8], rdx
0xf909:	mov	qword ptr [rax], rdx
0xf90c:	add	rax, 0x10
0xf910:	cmp	rsi, rax
0xf913:	jne	0xf905


0xfbf3:	cmp	r10, rsi
0xfbf6:	mov	qword ptr [rdx], rax
0xfbf9:	je	0xfc04


0xfc04:	mov	rsi, r8
0xfc07:	jmp	0xf8ac


0xfbfb:	mov	rsi, qword ptr [r9 + rsi*8]
0xfbff:	jmp	0xf8ac


0xf979:	lea	rsi, [r8 + 1]
0xf97d:	cmp	rsi, rcx
0xf980:	jne	0xf943


0xf982:	jmp	0xf058


0xf943:	mov	rax, qword ptr [r9 + rsi*8 - 8]
0xf948:	cmp	rax, r8
0xf94b:	je	0xf972


0xf972:	add	rdx, 0x10
0xf976:	mov	r8, rsi
0xf979:	lea	rsi, [r8 + 1]
0xf97d:	cmp	rsi, rcx
0xf980:	jne	0xf943


0xf94d:	add	rax, 1
0xf951:	shl	rax, 4
0xf955:	mov	rax, qword ptr [r10 + rax]
0xf959:	mov	qword ptr [rdx], rax
0xf95c:	mov	rax, qword ptr [r9 + rsi*8 - 8]
0xf961:	add	rax, 1
0xf965:	shl	rax, 4
0xf969:	mov	rax, qword ptr [r10 + rax + 8]
0xf96e:	mov	qword ptr [rdx + 8], rax
0xf972:	add	rdx, 0x10
0xf976:	mov	r8, rsi
0xf979:	lea	rsi, [r8 + 1]
0xf97d:	cmp	rsi, rcx
0xf980:	jne	0xf943


0xf1e7:	test	eax, eax
0xf1e9:	je	0xf2d2


0xf2d2:	mov	r12, qword ptr [rsp + 0x168]
0xf2da:	add	rbx, 1
0xf2de:	cmp	rbx, qword ptr [r14 + 0x10]
0xf2e2:	jge	0xf490


0xf1ef:	movsxd	rbp, eax
0xf1f2:	add	rbp, qword ptr [rsp + 0x168]
0xf1fa:	cmp	dword ptr [rsp + 0x200], eax
0xf201:	cmovge	eax, dword ptr [rsp + 0x200]
0xf209:	mov	rdi, qword ptr [rsp]
0xf20d:	mov	rsi, rbp
0xf210:	mov	dword ptr [rsp + 0x200], eax
0xf217:	call	0x7170


0xf21c:	test	eax, eax
0xf21e:	mov	dword ptr [rsp + 0xd4], eax
0xf225:	jne	0xf4c0


0xf22b:	mov	rax, qword ptr [r13 + 0x18]
0xf22f:	lea	r12, [rbp*8]
0xf237:	mov	rax, qword ptr [rax + r15*8]
0xf23b:	mov	r15, qword ptr [rsp + 0x1d8]
0xf243:	lea	rdx, [rax + rax*2]
0xf247:	mov	rax, qword ptr [r13 + 0x30]
0xf24b:	add	r15, r12
0xf24e:	lea	rdx, [rax + rdx*8]
0xf252:	mov	rax, qword ptr [r15]
0xf255:	test	rax, rax
0xf258:	je	0xf358


0xf4c0:	mov	rbx, qword ptr [rsp + 0xa0]
0xf4c8:	mov	rdi, qword ptr [rsp + 0x1d8]
0xf4d0:	test	rdi, rdi
0xf4d3:	mov	dword ptr [rsp + 0xd0], eax
0xf4da:	je	0xf5c0


0xf358:	movdqu	xmm0, xmmword ptr [rdx]
0xf35c:	lea	rsi, [rbp - 1]
0xf360:	mov	rdi, qword ptr [rsp]
0xf364:	movaps	xmmword ptr [rsp + 0xe0], xmm0
0xf36c:	mov	rax, qword ptr [rdx + 0x10]
0xf370:	mov	edx, dword ptr [rsp + 0x1c0]
0xf377:	mov	qword ptr [rsp + 0xf0], rax
0xf37f:	call	0x98c0


0xf25e:	mov	rsi, qword ptr [rax + 0x50]
0xf262:	mov	rdi, qword ptr [rsp + 0x60]
0xf267:	call	0x8cd0


0xf4e0:	xor	r13d, r13d
0xf4e3:	jmp	0xecd0


0xf26c:	test	eax, eax
0xf26e:	mov	dword ptr [rsp + 0xd4], eax
0xf275:	jne	0xf4c0


0xf27b:	mov	edx, dword ptr [rsp + 0x1c0]
0xf282:	mov	rdi, qword ptr [rsp]
0xf286:	lea	rsi, [rbp - 1]
0xf28a:	call	0x98c0


0xf0c8:	mov	edx, dword ptr [rsp + 0xd0]
0xf0cf:	test	edx, edx
0xf0d1:	jne	0xfa0d


0xf0d7:	test	rax, rax
0xf0da:	jne	0xfa20


0xfa0d:	test	rax, rax
0xfa10:	mov	r13, rax
0xfa13:	jne	0xec08


0xf0e0:	mov	rdi, qword ptr [rsp + 0x1d8]
0xf0e8:	jmp	0xed1a


0xfa20:	mov	r13, rax
0xfa23:	jmp	0xec08


0xfa19:	jmp	0xed54


0xece1:	mov	r13, rax
0xece4:	test	r13, r13
0xece7:	jne	0xec08


0xf13a:	test	eax, eax
0xf13c:	mov	dword ptr [rsp + 0xd0], eax
0xf143:	jne	0xfa28


0xf149:	test	byte ptr [r14 + 0x68], 0x20
0xf14e:	mov	r8, qword ptr [rsp + 0x168]
0xf156:	je	0xec9b


0xfa28:	cmp	eax, 0xc
0xfa2b:	je	0xf570


0xfa31:	lea	rcx, [rip + 0x63d8]
0xfa38:	lea	rsi, [rip + 0x5df1]
0xfa3f:	lea	rdi, [rip + 0x5e9e]
0xfa46:	mov	edx, 0x46c
0xfa4b:	call	0x1a50


0xf439:	mov	rbp, qword ptr [rsp + 0xd8]
0xf441:	movsxd	rax, dword ptr [rsp + 0xac]
0xf449:	add	rbp, rax
0xf44c:	cmp	rbp, qword ptr [rsp + 0x90]
0xf454:	mov	qword ptr [rsp + 0xd8], rbp
0xf45c:	jl	0xf469


0xfaa4:	test	eax, eax
0xfaa6:	mov	dword ptr [rsp + 0xd0], eax
0xfaad:	jne	0xfaf8


0xfaaf:	movzx	eax, byte ptr [r14 + 0x68]
0xfab4:	test	al, 0x40
0xfab6:	jne	0xfba0


0xfaf8:	cdqe	
0xfafa:	mov	qword ptr [rsp + 0x20], rax
0xfaff:	jmp	0xed66


0xfabc:	mov	byte ptr [rsp + 0x18], 0
0xfac1:	jmp	0xebb3


0xfba0:	mov	rdi, qword ptr [rsp]
0xfba4:	mov	rdx, rbp
0xfba7:	mov	rsi, rbx
0xfbaa:	call	0xd6e0


0xebb3:	test	al, 0x10
0xebb5:	mov	qword ptr [rsp + 0x20], -1
0xebbe:	mov	qword ptr [rsp + 0x30], 0
0xebc7:	jne	0xfa50


0xfbaf:	test	eax, eax
0xfbb1:	mov	dword ptr [rsp + 0xd0], eax
0xfbb8:	jne	0xfaf8


0xfbbe:	movzx	eax, byte ptr [r14 + 0x68]
0xfbc3:	jmp	0xfabc


0xf660:	test	eax, eax
0xf662:	jne	0xf048


0xf668:	mov	rdx, rbp
0xf66b:	sub	rdx, qword ptr [rsp + 0x148]
0xf673:	jmp	0xf5f8


0xf048:	mov	dword ptr [rsp + 0x5c], eax
0xf04c:	nop	dword ptr [rax]
0xf050:	mov	rdi, qword ptr [rsp + 0x1d8]
0xf058:	call	0x18d0


0x705d:	test	eax, eax
0x705f:	mov	ebp, eax
0x7061:	jne	0x711d


0x7067:	mov	rdi, qword ptr [rbx + 0xb8]
0x706e:	test	rdi, rdi
0x7071:	je	0x7094


0x711d:	add	rsp, 8
0x7121:	mov	eax, ebp
0x7123:	pop	rbx
0x7124:	pop	rbp
0x7125:	ret	


0x7094:	cmp	byte ptr [rbx + 0x88], 0
0x709b:	mov	eax, dword ptr [rbx + 0x90]
0x70a1:	je	0x70c0


0x7073:	mov	rax, qword ptr [rbx + 0x40]
0x7077:	lea	rsi, [rax*8 + 8]
0x707f:	call	0x1b60


0x70c0:	cmp	eax, 1
0x70c3:	jg	0x7130


0x70a3:	cmp	eax, 1
0x70a6:	mov	rdi, rbx
0x70a9:	jle	0x7160


0x70c5:	mov	rcx, qword ptr [rbx + 0x78]
0x70c9:	test	rcx, rcx
0x70cc:	je	0x711d


0x7130:	mov	rdi, rbx
0x7133:	call	0x6830


0x7160:	call	0x67c0


0x70af:	add	rsp, 8
0x70b3:	pop	rbx
0x70b4:	pop	rbp
0x70b5:	jmp	0x6a00


0x70ce:	mov	rsi, qword ptr [rbx + 0x58]
0x70d2:	cmp	qword ptr [rbx + 0x40], rsi
0x70d6:	cmovle	rsi, qword ptr [rbx + 0x40]
0x70db:	mov	rax, qword ptr [rbx + 0x30]
0x70df:	cmp	rsi, rax
0x70e2:	jg	0x70f4


0x70e4:	jmp	0x7115


0x70f4:	mov	rdx, qword ptr [rbx]
0x70f7:	add	rdx, rax
0x70fa:	add	rdx, qword ptr [rbx + 0x28]
0x70fe:	movzx	edx, byte ptr [rdx]
0x7101:	movzx	ecx, byte ptr [rcx + rdx]
0x7105:	mov	rdx, qword ptr [rbx + 8]
0x7109:	mov	byte ptr [rdx + rax], cl
0x710c:	add	rax, 1
0x7110:	cmp	rsi, rax
0x7113:	jne	0x70f0


0x7115:	mov	qword ptr [rbx + 0x30], rax
0x7119:	mov	qword ptr [rbx + 0x38], rax
0x711d:	add	rsp, 8
0x7121:	mov	eax, ebp
0x7123:	pop	rbx
0x7124:	pop	rbp
0x7125:	ret	


0x70f0:	mov	rcx, qword ptr [rbx + 0x78]
0x70f4:	mov	rdx, qword ptr [rbx]
0x70f7:	add	rdx, rax
0x70fa:	add	rdx, qword ptr [rbx + 0x28]
0x70fe:	movzx	edx, byte ptr [rdx]
0x7101:	movzx	ecx, byte ptr [rcx + rdx]
0x7105:	mov	rdx, qword ptr [rbx + 8]
0x7109:	mov	byte ptr [rdx + rax], cl
0x710c:	add	rax, 1
0x7110:	cmp	rsi, rax
0x7113:	jne	0x70f0


0x7165:	add	rsp, 8
0x7169:	mov	eax, ebp
0x716b:	pop	rbx
0x716c:	pop	rbp
0x716d:	ret	


0x7138:	add	rsp, 8
0x713c:	mov	eax, ebp
0x713e:	pop	rbx
0x713f:	pop	rbp
0x7140:	ret	


0x10654:	cdqe	
0x10656:	add	rax, r11
0x10659:	mov	qword ptr [r10 + 0x48], rax
0x1065d:	jmp	0x1059a


0xc2cf:	cmp	r11b, 5
0xc2d3:	mov	ebp, eax
0xc2d5:	je	0xc390


0xc390:	cmp	eax, 1
0xc393:	jle	0xc380


0xc2db:	cmp	r11b, 6
0xc2df:	jne	0xc380


0xc395:	mov	rax, qword ptr [rbx]
0xc398:	test	al, 0x40
0xc39a:	je	0xc3b0


0xc2e5:	cmp	eax, 1
0xc2e8:	jle	0xc380


0xc3b0:	mov	rdx, qword ptr [r10 + 8]
0xc3b4:	cmp	byte ptr [rdx + r8], 0xa
0xc3b9:	jne	0xc39c


0xc39c:	test	al, 0x80
0xc39e:	je	0xc382


0xc2ee:	mov	r13, qword ptr [r9]
0xc2f1:	mov	rsi, qword ptr [r13 + 0x40]
0xc2f5:	mov	rdx, qword ptr [r13 + 0x28]
0xc2f9:	test	rsi, rsi
0xc2fc:	jne	0xc309


0xc3bb:	jmp	0xc380


0xc3a0:	mov	rax, qword ptr [r10 + 8]
0xc3a4:	cmp	byte ptr [rax + r8], 0
0xc3a9:	je	0xc380


0xc2fe:	cmp	qword ptr [r13 + 0x48], 0
0xc303:	je	0xc3f8


0xc309:	mov	rax, qword ptr [r10 + 0x10]
0xc30d:	test	rdx, rdx
0xc310:	mov	r12d, dword ptr [rax + r8*4]
0xc314:	jle	0xc337


0xc3ab:	jmp	0xc382


0xc3f8:	test	rdx, rdx
0xc3fb:	jne	0xc309


0xc337:	mov	rax, qword ptr [r13 + 0x48]
0xc33b:	test	rax, rax
0xc33e:	jle	0xc41c


0xc316:	mov	rcx, qword ptr [r13]
0xc31a:	cmp	r12d, dword ptr [rcx]
0xc31d:	je	0xc372


0xc401:	test	byte ptr [r13 + 0x20], 1
0xc406:	jne	0xc382


0xc41c:	test	rsi, rsi
0xc41f:	jle	0xc401


0xc344:	xor	ebx, ebx
0xc346:	jmp	0xc35e


0xc372:	test	byte ptr [r13 + 0x20], 1
0xc377:	je	0xc382


0xc31f:	xor	eax, eax
0xc321:	jmp	0xc32e


0xc40c:	jmp	0xc380


0xc421:	mov	rdx, qword ptr [r13 + 8]
0xc425:	xor	eax, eax
0xc427:	jmp	0xc439


0xc35e:	mov	rax, qword ptr [r13 + 0x18]
0xc362:	mov	edi, r12d
0xc365:	mov	rsi, qword ptr [rax + rbx*8]
0xc369:	call	0x1970


0xc32e:	add	rax, 1
0xc332:	cmp	rax, rdx
0xc335:	jne	0xc328


0xc439:	cmp	r12d, dword ptr [rdx + rax*4]
0xc43d:	jl	0xc430


0x1970:	jmp	qword ptr [rip + 0x2174ca]


0xc328:	cmp	r12d, dword ptr [rcx + rax*4]
0xc32c:	je	0xc372


0xc430:	add	rax, 1
0xc434:	cmp	rax, rsi
0xc437:	je	0xc401


0xc43f:	mov	rcx, qword ptr [r13 + 0x10]
0xc443:	cmp	r12d, dword ptr [rcx + rax*4]
0xc447:	jg	0xc430




0xc449:	jmp	0xc372


0x104c0:	cmp	eax, 1
0x104c3:	jle	0x10508


0x104c5:	mov	rdx, qword ptr [r10 + 0x10]
0x104c9:	cdqe	
0x104cb:	mov	dword ptr [rbx], 1
0x104d1:	add	rax, r12
0x104d4:	mov	edx, dword ptr [rdx + r12*4]
0x104d8:	mov	dword ptr [rbx + 8], edx
0x104db:	mov	qword ptr [r10 + 0x48], rax
0x104df:	xor	eax, eax
0x104e1:	mov	rcx, qword ptr [rsp + 0x18]
0x104e6:	xor	rcx, qword ptr fs:[0x28]
0x104ef:	jne	0x106d8


0x13865:	mov	rax, qword ptr [r12 + 0x50]
0x1386a:	cmp	qword ptr [r12 + 0x48], rax
0x1386f:	je	0x13889


0x13889:	mov	rsi, qword ptr [r12 + 0x58]
0x1388e:	cmp	rsi, rax
0x13891:	je	0x138ab


0x13871:	lea	rdx, [rax + 0x18]
0x13875:	lea	rsi, [rax + 0x10]
0x13879:	mov	rcx, rbp
0x1387c:	mov	rdi, rbx
0x1387f:	call	0xbd60


0x138ab:	mov	rsi, qword ptr [r12 + 0x60]
0x138b0:	cmp	rsi, rax
0x138b3:	je	0x138c8


0x13893:	lea	rdx, [rsi + 0x18]
0x13897:	mov	rcx, rbp
0x1389a:	add	rsi, 0x10
0x1389e:	mov	rdi, rbx
0x138a1:	call	0xbd60


0x138c8:	or	byte ptr [rbx + 0x38], 8
0x138cc:	xor	eax, eax
0x138ce:	pop	rbx
0x138cf:	pop	rbp
0x138d0:	pop	r12
0x138d2:	ret	


0x138b5:	lea	rdx, [rsi + 0x18]
0x138b9:	mov	rcx, rbp
0x138bc:	add	rsi, 0x10
0x138c0:	mov	rdi, rbx
0x138c3:	call	0xbd60


0x138a6:	mov	rax, qword ptr [r12 + 0x48]
0x138ab:	mov	rsi, qword ptr [r12 + 0x60]
0x138b0:	cmp	rsi, rax
0x138b3:	je	0x138c8


0x13884:	mov	rax, qword ptr [r12 + 0x48]
0x13889:	mov	rsi, qword ptr [r12 + 0x58]
0x1388e:	cmp	rsi, rax
0x13891:	je	0x138ab


0x13b7c:	movzx	eax, byte ptr [r15 + 0x38]
0x13b81:	mov	r9, qword ptr [rsp + 0x20]
0x13b86:	mov	rdx, qword ptr [rsp + 0x18]
0x13b8b:	mov	rsi, qword ptr [rsp + 0x10]
0x13b90:	mov	r8, qword ptr [rsp + 8]
0x13b95:	jmp	0x13971


0x7847:	cmp	qword ptr [r12 + 0x10], rbx
0x784c:	ja	0x7830


0x7830:	mov	rdi, qword ptr [r12]
0x7834:	mov	rax, rbx
0x7837:	add	rbx, 1
0x783b:	shl	rax, 4
0x783f:	add	rdi, rax
0x7842:	call	0x7230


0x726d:	xor	eax, eax
0x726f:	add	rsp, 8
0x7273:	ret	


0xb133:	cmp	rax, -1
0xb137:	mov	rdx, rax
0xb13a:	mov	qword ptr [rbx + 0x38], rax
0xb13e:	je	0xb190


0xb190:	mov	eax, 0xc
0xb195:	jmp	0xb16c


0xb140:	xor	eax, eax
0xb142:	cmp	byte ptr [rbx + 0x30], 0xc
0xb146:	jne	0xb16c


0xb16c:	add	rsp, 8
0xb170:	pop	rbx
0xb171:	pop	rbp
0xb172:	ret	


0xb148:	mov	ecx, dword ptr [rbx + 0x28]
0xb14b:	shl	rdx, 4
0xb14f:	add	rdx, qword ptr [rbp]
0xb153:	and	ecx, 0x3ff
0xb159:	shl	ecx, 8
0xb15c:	mov	esi, ecx
0xb15e:	mov	ecx, dword ptr [rdx + 8]
0xb161:	and	ecx, 0xfffc00ff
0xb167:	or	ecx, esi
0xb169:	mov	dword ptr [rdx + 8], ecx
0xb16c:	add	rsp, 8
0xb170:	pop	rbx
0xb171:	pop	rbp
0xb172:	ret	


0x747b:	cmp	rax, -1
0x747f:	je	0x74e4


0x74e4:	add	rsp, 8
0x74e8:	pop	rbx
0x74e9:	pop	rbp
0x74ea:	pop	r12
0x74ec:	pop	r13
0x74ee:	ret	


0x7481:	mov	edi, r12d
0x7484:	mov	r8, qword ptr [rbx]
0x7487:	mov	rsi, rax
0x748a:	and	di, 0x3ff
0x748f:	shl	rsi, 4
0x7493:	mov	ecx, edi
0x7495:	and	ecx, 0x3ff
0x749b:	add	rsi, r8
0x749e:	shl	ecx, 8
0x74a1:	mov	edx, ecx
0x74a3:	mov	ecx, dword ptr [rsi + 8]
0x74a6:	and	ecx, 0xfffc00ff
0x74ac:	or	ecx, edx
0x74ae:	mov	dword ptr [rsi + 8], ecx
0x74b1:	mov	edx, dword ptr [r8 + r13 + 8]
0x74b6:	and	ecx, 0xfffc00ff
0x74bc:	shr	edx, 8
0x74bf:	or	edx, edi
0x74c1:	and	edx, 0x3ff
0x74c7:	shl	edx, 8
0x74ca:	or	edx, ecx
0x74cc:	mov	ecx, edx
0x74ce:	mov	dword ptr [rsi + 8], edx
0x74d1:	shr	ecx, 0x10
0x74d4:	mov	edx, ecx
0x74d6:	or	edx, 4
0x74d9:	mov	byte ptr [rsi + 0xa], dl
0x74dc:	mov	rdx, qword ptr [rbx + 0x20]
0x74e0:	mov	qword ptr [rdx + rax*8], rbp
0x74e4:	add	rsp, 8
0x74e8:	pop	rbx
0x74e9:	pop	rbp
0x74ea:	pop	r12
0x74ec:	pop	r13
0x74ee:	ret	


0x75f7:	cmp	rax, -1
0x75fb:	mov	r13, rax
0x75fe:	je	0x761b


0x7600:	add	rbx, qword ptr [r14 + 0x28]
0x7604:	mov	rsi, r13
0x7607:	mov	rdi, rbx
0x760a:	call	0x65a0


0x760f:	test	al, al
0x7611:	mov	r9, qword ptr [rsp]
0x7615:	jne	0x750f


0x750f:	mov	r8, qword ptr [r14]
0x7512:	mov	rax, r9
0x7515:	mov	rdi, qword ptr [r14 + 0x28]
0x7519:	shl	rax, 4
0x751d:	mov	r12, r13
0x7520:	add	rax, r8
0x7523:	cmp	byte ptr [rax + 8], 4
0x7527:	je	0x76e0


0x763d:	cmp	rax, -1
0x7641:	mov	r13, rax
0x7644:	je	0x761b


0x7646:	mov	rdi, qword ptr [r14 + 0x28]
0x764a:	mov	rsi, r13
0x764d:	add	rdi, rbx
0x7650:	call	0x65a0


0x7655:	test	al, al
0x7657:	je	0x761b


0x7659:	mov	rcx, qword ptr [rsp + 8]
0x765e:	mov	r8d, ebp
0x7661:	mov	rdx, r13
0x7664:	mov	rsi, r15
0x7667:	mov	rdi, r14
0x766a:	call	0x74f0


0x766f:	test	eax, eax
0x7671:	je	0x75d9


0x7677:	jmp	0x7620


0x76aa:	cmp	rax, -1
0x76ae:	mov	r13, rax
0x76b1:	je	0x761b


0x76b7:	add	rbx, qword ptr [r14 + 0x28]
0x76bb:	mov	rsi, rax
0x76be:	mov	rdi, rbx
0x76c1:	call	0x65a0


0x76c6:	test	al, al
0x76c8:	je	0x761b


0x76ce:	mov	r9, r15
0x76d1:	jmp	0x750f


0x7713:	cmp	rax, -1
0x7717:	mov	r13, rax
0x771a:	mov	r9, qword ptr [rsp]
0x771e:	je	0x761b


0x7724:	mov	rax, qword ptr [r14 + 0x18]
0x7728:	mov	qword ptr [rsp], r9
0x772c:	mov	rcx, qword ptr [rax + r15]
0x7730:	mov	qword ptr [rax + r12*8], rcx
0x7734:	jmp	0x7600


0x101ae:	test	rax, rax
0x101b1:	jne	0x10178


0x101b3:	add	r9, qword ptr [r12 + 0x30]
0x101b8:	mov	rdi, qword ptr [r9 + 8]
0x101bc:	lea	rsi, [r9 + 0x10]
0x101c0:	call	0x7ae0


0x10178:	add	rbp, 1
0x1017c:	cmp	rbp, qword ptr [rbx + 8]
0x10180:	jge	0x10208


0x10186:	mov	r10, qword ptr [rbx + 0x10]
0x1018a:	mov	r10, qword ptr [r10 + rbp*8]
0x1018e:	mov	rax, qword ptr [r12 + 0x38]
0x10193:	mov	rdx, r14
0x10196:	lea	r9, [r10 + r10*2]
0x1019a:	shl	r9, 3
0x1019e:	add	rax, r9
0x101a1:	mov	rdi, qword ptr [rax + 8]
0x101a5:	lea	rsi, [rax + 0x10]
0x101a9:	call	0x7ae0


0x10208:	mov	rbp, qword ptr [rsp + 0x30]
0x1020d:	jmp	0x1009d


0x101c5:	test	rax, rax
0x101c8:	jne	0x10178


0x101ca:	mov	rcx, qword ptr [rsp + 0x10]
0x101cf:	mov	rdx, rbx
0x101d2:	mov	rsi, r10
0x101d5:	mov	rdi, r12
0x101d8:	call	0xa330


0x102ae:	test	rax, rax
0x102b1:	je	0x103c7


0x102b7:	sub	rsp, 8
0x102bb:	lea	rdx, [rbx + 0x30]
0x102bf:	lea	rsi, [rbx + 0x28]
0x102c3:	push	r9
0x102c5:	mov	rdi, qword ptr [rsp + 0x18]
0x102ca:	mov	rcx, r14
0x102cd:	mov	r9, r10
0x102d0:	mov	r8, rbp
0x102d3:	call	0x7d90


0x102d8:	test	al, al
0x102da:	pop	rdx
0x102db:	pop	rcx
0x102dc:	jne	0x103c7


0x102e2:	cmp	qword ptr [rsp + 0x60], 0
0x102e8:	je	0x103f8


0x103f8:	mov	rax, qword ptr [rbx + 0x30]
0x103fc:	lea	rsi, [rbx + 0x20]
0x10400:	movdqa	xmm0, xmmword ptr [rbx]
0x10404:	mov	qword ptr [rsp + 0x90], rax
0x1040c:	mov	rax, qword ptr [rsp + 0x38]
0x10411:	movaps	xmmword ptr [rsp + 0x60], xmm0
0x10416:	lea	rdi, [rax + 0x20]
0x1041a:	movdqa	xmm0, xmmword ptr [rbx + 0x10]
0x1041f:	movaps	xmmword ptr [rsp + 0x70], xmm0
0x10424:	movdqa	xmm0, xmmword ptr [rbx + 0x20]
0x10429:	movaps	xmmword ptr [rsp + 0x80], xmm0
0x10431:	call	0x8c40


0x102ee:	mov	rax, qword ptr [rsp + 0x38]
0x102f3:	mov	rsi, r13
0x102f6:	mov	qword ptr [rsp + 0x70], r14
0x102fb:	mov	qword ptr [rsp + 0x78], rbp
0x10300:	lea	rdi, [rax + 0x20]
0x10304:	call	0x65a0


0x10309:	test	al, al
0x1030b:	je	0x10464


0x10464:	mov	eax, 0xc
0x10469:	jmp	0x1043e


0x10311:	mov	rdi, qword ptr [rsp + 0x18]
0x10316:	mov	rax, qword ptr [rsp + 0x60]
0x1031b:	mov	rsi, qword ptr [rsp + 0x38]
0x10320:	mov	r15, qword ptr [rax + rdi]
0x10324:	mov	rdi, qword ptr [rsp + 8]
0x10329:	call	0xe1c0


0x1043e:	cmp	qword ptr [rsp + 0x60], 0
0x10444:	je	0xfcc8


0x10436:	test	eax, eax
0x10438:	je	0x102ee


0x95ee:	test	rax, rax
0x95f1:	je	0x95c9


0x95c9:	add	r15, 0x28
0x95cd:	cmp	byte ptr [r15 - 8], 0
0x95d2:	je	0x948d


0x95f3:	mov	r8, qword ptr [r15 + 0x18]
0x95f7:	add	r8, r12
0x95fa:	mov	r14, r8
0x95fd:	sub	r14, qword ptr [r15 + 0x10]
0x9601:	cmp	r12, r14
0x9604:	jne	0x9508


0x960a:	mov	rcx, qword ptr [r13 + 0x28]
0x960e:	lea	rax, [r10 + r10*2]
0x9612:	mov	rsi, qword ptr [rsp]
0x9616:	mov	rdi, r9
0x9619:	lea	rax, [rcx + rax*8]
0x961d:	mov	rax, qword ptr [rax + 0x10]
0x9621:	mov	r14, qword ptr [rax]
0x9624:	mov	rdx, r14
0x9627:	call	0x7ae0


0x9508:	mov	rax, qword ptr [r13 + 0x18]
0x950c:	mov	rcx, qword ptr [rax + r10*8]
0x9510:	mov	r10, qword ptr [rbx + 0xb8]
0x9517:	lea	rax, [r14*8]
0x951f:	mov	qword ptr [rsp + 0x18], rax
0x9524:	add	r10, rax
0x9527:	mov	qword ptr [rsp + 8], rcx
0x952c:	mov	r9, qword ptr [r10]
0x952f:	test	r9, r9
0x9532:	je	0x96c0


0x96c0:	mov	edi, 8
0x96c5:	mov	qword ptr [rsp + 0x18], r10
0x96ca:	mov	qword ptr [rsp + 0x50], 1
0x96d3:	mov	qword ptr [rsp + 0x58], 1
0x96dc:	call	0x1b00


0x9538:	mov	rdi, qword ptr [r9 + 0x10]
0x953c:	lea	rsi, [r9 + 0x18]
0x9540:	mov	rdx, rcx
0x9543:	call	0x7ae0


0x9548:	test	rax, rax
0x954b:	jne	0x95c9


0x954d:	mov	rdi, qword ptr [rsp + 0x10]
0x9552:	lea	rsi, [r9 + 8]
0x9556:	call	0x8c40


0x955b:	mov	rsi, qword ptr [rsp + 8]
0x9560:	mov	rdi, qword ptr [rsp + 0x10]
0x9565:	mov	dword ptr [rsp + 0x4c], eax
0x9569:	call	0x65a0


0x956e:	mov	edx, dword ptr [rsp + 0x4c]
0x9572:	test	edx, edx
0x9574:	jne	0x9716


0x957a:	cmp	al, 1
0x957c:	jne	0x9716


0x9716:	mov	rdi, qword ptr [rsp + 0x60]
0x971b:	call	0x18d0


0x9582:	mov	r10, qword ptr [rsp + 0x18]
0x9587:	add	r10, qword ptr [rbx + 0xb8]
0x958e:	mov	rdx, qword ptr [rsp + 0x10]
0x9593:	mov	rdi, qword ptr [rsp + 0x38]
0x9598:	mov	rsi, r13
0x959b:	mov	qword ptr [rsp + 8], r10
0x95a0:	call	0x90f0


0x95a5:	mov	r10, qword ptr [rsp + 8]
0x95aa:	mov	rdi, qword ptr [rsp + 0x60]
0x95af:	mov	qword ptr [r10], rax
0x95b2:	call	0x18d0


0x962c:	test	rax, rax
0x962f:	jne	0x95c9


0x9631:	mov	edi, 8
0x9636:	mov	qword ptr [rsp + 0x50], 1
0x963f:	mov	qword ptr [rsp + 0x58], 1
0x9648:	call	0x1b00


0xa4e8:	test	rax, rax
0xa4eb:	jne	0xa512


0xa4ed:	lea	rbx, [r14 + 0x10]
0xa4f1:	mov	rdi, qword ptr [r14 + 8]
0xa4f5:	mov	rsi, rbx
0xa4f8:	call	0x7ae0


0xa512:	add	r9, 1
0xa516:	cmp	qword ptr [rbp + 8], r9
0xa51a:	jg	0xa4d0


0xa4d0:	mov	rax, qword ptr [rbp + 0x10]
0xa4d4:	mov	rdi, qword ptr [rsp + 0x28]
0xa4d9:	mov	rsi, r11
0xa4dc:	mov	r10, qword ptr [rax + r9*8]
0xa4e0:	mov	rdx, r10
0xa4e3:	call	0x7ae0


0xa4fd:	sub	rax, 1
0xa501:	mov	rdx, rax
0xa504:	js	0xa512


0xa506:	lea	rdi, [r14 + 8]
0xa50a:	mov	rsi, rbx
0xa50d:	call	0x7c60


0xa43d:	mov	rcx, qword ptr [rsp + 8]
0xa442:	mov	r8, qword ptr [rsp]
0xa446:	cmp	qword ptr [rcx + 8], 1
0xa44b:	jg	0xa398


0xa451:	test	rax, rax
0xa454:	jne	0xa3e0


0xa398:	test	rax, rax
0xa39b:	jne	0xa478


0xa456:	mov	rdi, qword ptr [r14 + 8]
0xa45a:	lea	rsi, [r14 + 0x10]
0xa45e:	mov	rdx, r8
0xa461:	call	0x7ae0


0xa3a1:	mov	rdi, qword ptr [r14 + 8]
0xa3a5:	lea	rsi, [r14 + 0x10]
0xa3a9:	mov	rdx, r8
0xa3ac:	call	0x7ae0


0xa478:	mov	r15, qword ptr [r15 + 8]
0xa47c:	test	r15, r15
0xa47f:	jle	0xa3e0


0xa485:	mov	rdx, r15
0xa488:	mov	rsi, r11
0xa48b:	mov	rdi, r10
0xa48e:	call	0x7ae0


0xa493:	test	rax, rax
0xa496:	jne	0xa3e0


0xa49c:	mov	rdi, qword ptr [r14 + 8]
0xa4a0:	lea	rsi, [r14 + 0x10]
0xa4a4:	call	0x7ae0


0xa4a9:	test	rax, rax
0xa4ac:	je	0xa3e0


0xa4b2:	jmp	0xa3ba


0xa3ba:	mov	rdx, qword ptr [r12 + 0x38]
0xa3bf:	mov	rsi, qword ptr [rsp + 0x10]
0xa3c4:	mov	rdi, qword ptr [rsp + 0x18]
0xa3c9:	add	rdx, r9
0xa3cc:	call	0x85f0


0xa3d1:	test	eax, eax
0xa3d3:	jne	0xa550


0xa3d9:	mov	r10, qword ptr [rbp + 8]
0xa3dd:	nop	dword ptr [rax]
0xa3e0:	add	rbx, 1
0xa3e4:	cmp	r10, rbx
0xa3e7:	jle	0xa4c0


0xa550:	mov	rdi, qword ptr [rsp + 0x30]
0xa555:	mov	dword ptr [rsp], eax
0xa558:	call	0x18d0


0xa3b1:	test	rax, rax
0xa3b4:	je	0xa478


0xa466:	test	rax, rax
0xa469:	jne	0xa3ba


0xa46f:	jmp	0xa3e0


0x7b90:	test	rax, rax
0x7b93:	jne	0x7c00


0x7b95:	mov	rax, rbx
0x7b98:	shl	rax, 4
0x7b9c:	add	rax, qword ptr [r12]
0x7ba0:	movzx	edx, byte ptr [rax + 8]
0x7ba4:	cmp	edx, r13d
0x7ba7:	jne	0x7bae


0x7c00:	xor	eax, eax
0x7c02:	add	rsp, 8
0x7c06:	pop	rbx
0x7c07:	pop	rbp
0x7c08:	pop	r12
0x7c0a:	pop	r13
0x7c0c:	pop	r14
0x7c0e:	pop	r15
0x7c10:	ret	


0x7ba9:	cmp	qword ptr [rax], r15
0x7bac:	je	0x7be8


0x7bae:	mov	rsi, rbx
0x7bb1:	mov	rdi, rbp
0x7bb4:	call	0x65a0


0x7be8:	cmp	r13d, 9
0x7bec:	jne	0x7c00


0x7bee:	mov	rsi, rbx
0x7bf1:	mov	rdi, rbp
0x7bf4:	call	0x65a0


0x7bf9:	test	al, al
0x7bfb:	je	0x7c18


0x7c18:	add	rsp, 8
0x7c1c:	mov	eax, 0xc
0x7c21:	pop	rbx
0x7c22:	pop	rbp
0x7c23:	pop	r12
0x7c25:	pop	r13
0x7c27:	pop	r14
0x7c29:	pop	r15
0x7c2b:	ret	


0x7bb9:	test	al, al
0x7bbb:	je	0x7c18


0x7bbd:	lea	rbx, [rbx + rbx*2]
0x7bc1:	mov	rdx, qword ptr [r12 + 0x28]
0x7bc6:	shl	rbx, 3
0x7bca:	add	rdx, rbx
0x7bcd:	mov	rax, qword ptr [rdx + 8]
0x7bd1:	test	rax, rax
0x7bd4:	je	0x7c00


0x7bd6:	cmp	rax, 2
0x7bda:	mov	rdx, qword ptr [rdx + 0x10]
0x7bde:	je	0x7c30


0x7c30:	mov	rdx, qword ptr [rdx + 8]
0x7c34:	mov	r8d, r13d
0x7c37:	mov	rcx, r15
0x7c3a:	mov	rsi, rbp
0x7c3d:	mov	rdi, r12
0x7c40:	call	0x7b60


0x7be0:	mov	rbx, qword ptr [rdx]
0x7be3:	jmp	0x7b81


0x7b81:	mov	rdi, qword ptr [rbp + 8]
0x7b85:	mov	rdx, rbx
0x7b88:	mov	rsi, r14
0x7b8b:	call	0x7ae0


0x7c45:	test	eax, eax
0x7c47:	jne	0x7c02


0x7c49:	mov	rax, qword ptr [r12 + 0x28]
0x7c4e:	mov	rdx, qword ptr [rax + rbx + 0x10]
0x7c53:	jmp	0x7be0


0x7c02:	add	rsp, 8
0x7c06:	pop	rbx
0x7c07:	pop	rbp
0x7c08:	pop	r12
0x7c0a:	pop	r13
0x7c0c:	pop	r14
0x7c0e:	pop	r15
0x7c10:	ret	


0x89e7:	mov	rdi, r15
0x89ea:	mov	r8, r14
0x89ed:	xor	ecx, ecx
0x89ef:	xor	edx, edx
0x89f1:	mov	rsi, rbx
0x89f4:	mov	r12, rax
0x89f7:	mov	byte ptr [rsp + 0x28], 9
0x89fc:	call	0x87a0


0x8a01:	mov	r15, rax
0x8a04:	jmp	0x8b5d


0x8b5d:	mov	rdi, qword ptr [rsp + 8]
0x8b62:	mov	r8, r14
0x8b65:	mov	rcx, r15
0x8b68:	mov	rdx, rbp
0x8b6b:	mov	rsi, rbx
0x8b6e:	mov	byte ptr [rsp + 0x28], 0x10
0x8b73:	call	0x87a0


0x8b78:	mov	r11, rax
0x8b7b:	jmp	0x8a5c


0x8a5c:	mov	rdi, qword ptr [rsp + 8]
0x8a61:	mov	r8, r14
0x8a64:	mov	rcx, r11
0x8a67:	mov	rdx, r12
0x8a6a:	mov	rsi, rbx
0x8a6d:	mov	byte ptr [rsp + 0x28], 0x10
0x8a72:	mov	qword ptr [rsp + 0x10], r11
0x8a77:	call	0x87a0


0x8a7c:	test	rax, rax
0x8a7f:	mov	rbp, rax
0x8a82:	je	0x8b80


0x8b80:	mov	rax, qword ptr [rsp + 0x18]
0x8b85:	xor	ebp, ebp
0x8b87:	mov	dword ptr [rax], 0xc
0x8b8d:	jmp	0x8add


0x8a88:	mov	r11, qword ptr [rsp + 0x10]
0x8a8d:	test	r11, r11
0x8a90:	je	0x8b80


0x8a96:	test	r12, r12
0x8a99:	je	0x8b80


0x8a9f:	test	r15, r15
0x8aa2:	je	0x8b80


0x8aa8:	mov	rax, qword ptr [r13 + 0x28]
0x8aac:	mov	qword ptr [r15 + 0x28], rax
0x8ab0:	mov	qword ptr [r12 + 0x28], rax
0x8ab5:	movzx	eax, byte ptr [r13 + 0x32]
0x8aba:	movzx	edx, byte ptr [r15 + 0x32]
0x8abf:	and	eax, 8
0x8ac2:	and	edx, 0xfffffff7
0x8ac5:	mov	ecx, eax
0x8ac7:	or	edx, ecx
0x8ac9:	mov	byte ptr [r15 + 0x32], dl
0x8acd:	movzx	eax, byte ptr [r12 + 0x32]
0x8ad3:	and	eax, 0xfffffff7
0x8ad6:	or	eax, ecx
0x8ad8:	mov	byte ptr [r12 + 0x32], al
0x8add:	mov	rdi, qword ptr [rsp + 0x38]
0x8ae2:	xor	rdi, qword ptr fs:[0x28]
0x8aeb:	mov	rax, rbp
0x8aee:	jne	0x8b92


0x8a3c:	mov	rdi, r15
0x8a3f:	mov	r8, r14
0x8a42:	xor	ecx, ecx
0x8a44:	xor	edx, edx
0x8a46:	mov	rsi, rbx
0x8a49:	mov	r12, rax
0x8a4c:	mov	byte ptr [rsp + 0x28], 9
0x8a51:	call	0x87a0


0x8a56:	mov	r11, rax
0x8a59:	mov	r15, rax
0x8a5c:	mov	rdi, qword ptr [rsp + 8]
0x8a61:	mov	r8, r14
0x8a64:	mov	rcx, r11
0x8a67:	mov	rdx, r12
0x8a6a:	mov	rsi, rbx
0x8a6d:	mov	byte ptr [rsp + 0x28], 0x10
0x8a72:	mov	qword ptr [rsp + 0x10], r11
0x8a77:	call	0x87a0


0x8b34:	xor	ecx, ecx
0x8b36:	xor	edx, edx
0x8b38:	mov	rdi, r15
0x8b3b:	mov	r8, r14
0x8b3e:	mov	rsi, rbx
0x8b41:	mov	r12, rax
0x8b44:	mov	byte ptr [rsp + 0x28], 9
0x8b49:	call	0x87a0


0x8b4e:	test	rbp, rbp
0x8b51:	mov	r15, rax
0x8b54:	mov	r11, rax
0x8b57:	je	0x8a5c


0x88c3:	test	rax, rax
0x88c6:	mov	qword ptr [r14], rax
0x88c9:	je	0x891c


0x891c:	mov	rcx, qword ptr [rsp + 8]
0x8921:	xor	rcx, qword ptr fs:[0x28]
0x892a:	jne	0x894c


0x88cb:	mov	qword ptr [rax], rbp
0x88ce:	mov	rbp, qword ptr [r14]
0x88d1:	or	byte ptr [rbp + 0x32], 4
0x88d5:	mov	rax, qword ptr [rbx + 8]
0x88d9:	test	rax, rax
0x88dc:	je	0x88f0


0x892c:	add	rsp, 0x10
0x8930:	pop	rbx
0x8931:	pop	rbp
0x8932:	pop	r12
0x8934:	pop	r13
0x8936:	pop	r14
0x8938:	ret	


0x894c:	call	0x19e0


0x88f0:	xor	edx, edx
0x88f2:	jmp	0x88fb


0x88de:	lea	r14, [rbp + 8]
0x88e2:	mov	rbx, rax
0x88e5:	jmp	0x88b0


0x88fb:	mov	rax, qword ptr [rbx + 0x10]
0x88ff:	test	rax, rax
0x8902:	je	0x8909


0x88b0:	lea	r8, [rbx + 0x28]
0x88b4:	xor	ecx, ecx
0x88b6:	xor	edx, edx
0x88b8:	mov	rsi, r12
0x88bb:	mov	rdi, r13
0x88be:	call	0x87a0


0x8909:	mov	rax, qword ptr [rbx]
0x890c:	mov	rbp, qword ptr [rbp]
0x8910:	mov	rdx, rbx
0x8913:	test	rax, rax
0x8916:	jne	0x88f8


0x8904:	cmp	rax, rdx
0x8907:	jne	0x8940


0x8918:	mov	rax, qword ptr [rsp]
0x891c:	mov	rcx, qword ptr [rsp + 8]
0x8921:	xor	rcx, qword ptr fs:[0x28]
0x892a:	jne	0x894c


0x88f8:	mov	rbx, rax
0x88fb:	mov	rax, qword ptr [rbx + 0x10]
0x88ff:	test	rax, rax
0x8902:	je	0x8909


0x8940:	lea	r14, [rbp + 0x10]
0x8944:	mov	rbx, rax
0x8947:	jmp	0x88b0


0xf28f:	mov	rdx, qword ptr [rsp + 0x60]
0xf294:	mov	rdi, qword ptr [rsp + 0x80]
0xf29c:	mov	ecx, eax
0xf29e:	add	r12, qword ptr [rsp + 0x1d8]
0xf2a6:	mov	rsi, r13
0xf2a9:	call	0x8e30


0xf2ae:	mov	rdi, qword ptr [rsp + 0xf0]
0xf2b6:	mov	qword ptr [r12], rax
0xf2ba:	call	0x18d0


0xf384:	mov	rdi, qword ptr [rsp + 0x80]
0xf38c:	mov	rdx, qword ptr [rsp + 0x60]
0xf391:	mov	ecx, eax
0xf393:	mov	rsi, r13
0xf396:	call	0x8e30


0xf39b:	mov	rdi, qword ptr [rsp + 0x1d8]
0xf3a3:	mov	qword ptr [r15], rax
0xf3a6:	cmp	qword ptr [rdi + rbp*8], 0
0xf3ab:	jne	0xf2d2


0xf3b1:	mov	eax, dword ptr [rsp + 0xd4]
0xf3b8:	test	eax, eax
0xf3ba:	je	0xf2d2


0xf3c0:	mov	rbx, qword ptr [rsp + 0xa0]
0xf3c8:	jmp	0xf4d0


0xf4d0:	test	rdi, rdi
0xf4d3:	mov	dword ptr [rsp + 0xd0], eax
0xf4da:	je	0xf5c0


0xf32a:	mov	ecx, dword ptr [rsp + 0x10]
0xf32e:	shr	ecx, 8
0xf331:	mov	edx, ecx
0xf333:	and	dx, 0x3ff
0xf338:	test	cl, 4
0xf33b:	jne	0xf198


0xf341:	and	ecx, 8
0xf344:	je	0xf1a9


0xf198:	test	al, 1
0xf19a:	je	0xf2da


0xf1a9:	test	dl, 0x20
0xf1ac:	je	0xf1b6


0xf34a:	test	al, 1
0xf34c:	je	0xf1a9


0xf1a0:	and	ecx, 8
0xf1a3:	jne	0xf2da


0xf1b6:	and	edx, 0x80
0xf1bc:	je	0xf1d0


0xf1ae:	test	al, 2
0xf1b0:	je	0xf2da


0xf352:	jmp	0xf2da


0xf1be:	test	al, 8
0xf1c0:	je	0xf2da


0xf3f9:	test	al, 1
0xf3fb:	je	0xf4b0


0xf4b0:	mov	r13, qword ptr [rbp + r13*8]
0xf4b5:	jmp	0xecc5


0xf401:	mov	r13, qword ptr [rbp + r13*8 + 0x800]
0xf409:	jmp	0xecc5


0xecc5:	cmp	qword ptr [rsp + 0x1d8], 0
0xecce:	je	0xece4


0xf504:	test	al, 1
0xf506:	je	0xf675


0xf675:	test	eax, eax
0xf677:	je	0xeb7e


0xf50c:	mov	r14, qword ptr [rbx + 0x50]
0xf510:	test	r14, r14
0xf513:	jne	0xeb7e


0xf67d:	mov	edx, eax
0xf67f:	and	edx, 6
0xf682:	cmp	edx, 6
0xf685:	je	0xfaef


0xf519:	mov	eax, dword ptr [rsp + 0xd0]
0xf520:	cmp	eax, 0xc
0xf523:	mov	dword ptr [rsp + 0x5c], eax
0xf527:	je	0xf050


0xfaef:	mov	r14, qword ptr [rbx + 0x60]
0xfaf3:	jmp	0xf510


0xf68b:	test	al, 2
0xf68d:	je	0xfb40


0xf52d:	lea	rcx, [rip + 0x68dc]
0xf534:	lea	rsi, [rip + 0x62f5]
0xf53b:	lea	rdi, [rip + 0x63a2]
0xf542:	mov	edx, 0x435
0xf547:	call	0x1a50


0xf510:	test	r14, r14
0xf513:	jne	0xeb7e


0xfb40:	test	al, 4
0xfb42:	je	0xeb7e


0xf693:	mov	r14, qword ptr [rbx + 0x58]
0xf697:	jmp	0xf510


0xfb48:	mov	rdx, qword ptr [r14 + 0x50]
0xfb4c:	mov	rdi, qword ptr [rsp + 0x28]
0xfb51:	mov	ecx, eax
0xfb53:	mov	rsi, rbx
0xfb56:	call	0x8e30


0xfb5b:	mov	r14, rax
0xfb5e:	jmp	0xf510


0xe0b3:	mov	r8, qword ptr [rbx + 0xb8]
0xe0ba:	mov	rdx, qword ptr [rsp]
0xe0be:	mov	ecx, eax
0xe0c0:	mov	rsi, r15
0xe0c3:	mov	rdi, r13
0xe0c6:	add	r8, rbp
0xe0c9:	mov	qword ptr [rsp + 8], r8
0xe0ce:	call	0x8e30


0xe0d3:	mov	r8, qword ptr [rsp + 8]
0xe0d8:	test	r14, r14
0xe0db:	mov	rbp, rax
0xe0de:	mov	qword ptr [r8], rax
0xe0e1:	je	0xe027


0xe0e7:	mov	rdi, qword ptr [rsp + 0x20]
0xe0ec:	call	0x18d0


0xdb29:	mov	rsi, qword ptr [rsp + 0x60]
0xdb2e:	mov	ecx, eax
0xdb30:	mov	rax, qword ptr [r14 + 0xb8]
0xdb37:	lea	r10, [rbx*8]
0xdb3f:	mov	qword ptr [rsp + 0x10], 0
0xdb48:	lea	r11, [rax + r10]
0xdb4c:	mov	rax, qword ptr [rax + rsi]
0xdb50:	mov	rdx, qword ptr [r11]
0xdb53:	test	rax, rax
0xdb56:	je	0xdb61


0xdb61:	test	rdx, rdx
0xdb64:	je	0xde80


0xdb58:	mov	rax, qword ptr [rax + 0x10]
0xdb5c:	mov	qword ptr [rsp + 0x10], rax
0xdb61:	test	rdx, rdx
0xdb64:	je	0xde80


0xde80:	mov	rdx, qword ptr [rsp + 0x18]
0xde85:	mov	rdi, qword ptr [rsp + 0x78]
0xde8a:	mov	rsi, rbp
0xde8d:	mov	qword ptr [rsp + 0x28], r11
0xde92:	call	0x8e30


0xdb6a:	mov	rsi, qword ptr [rdx + 0x50]
0xdb6e:	mov	rdi, qword ptr [rsp + 0x68]
0xdb73:	mov	rdx, qword ptr [rsp + 0x18]
0xdb78:	mov	qword ptr [rsp + 0x30], r10
0xdb7d:	mov	dword ptr [rsp + 0x28], ecx
0xdb81:	call	0x8cd0


0xdb86:	test	eax, eax
0xdb88:	mov	dword ptr [rsp + 0x8c], eax
0xdb8f:	mov	ecx, dword ptr [rsp + 0x28]
0xdb93:	mov	r10, qword ptr [rsp + 0x30]
0xdb98:	jne	0xdf28


0xdb9e:	add	r10, qword ptr [r14 + 0xb8]
0xdba5:	mov	rdx, qword ptr [rsp + 0x68]
0xdbaa:	mov	rsi, rbp
0xdbad:	mov	rdi, qword ptr [rsp + 0x78]
0xdbb2:	mov	qword ptr [rsp + 0x28], r10
0xdbb7:	call	0x8e30


0xdf28:	mov	rdi, qword ptr [rsp + 0xa0]
0xdf30:	call	0x18d0


0xdbbc:	mov	r10, qword ptr [rsp + 0x28]
0xdbc1:	mov	rdi, qword ptr [rsp + 0xa0]
0xdbc9:	mov	qword ptr [r10], rax
0xdbcc:	call	0x18d0


0xde97:	mov	r11, qword ptr [rsp + 0x28]
0xde9c:	mov	rdx, qword ptr [r14 + 0xb8]
0xdea3:	mov	qword ptr [r11], rax
0xdea6:	cmp	qword ptr [rdx + rbx*8], 0
0xdeab:	jne	0xdbe3


0xdeb1:	mov	eax, dword ptr [rsp + 0x8c]
0xdeb8:	test	eax, eax
0xdeba:	je	0xdbe3


0xdbe3:	cmp	qword ptr [rsp + 0x20], 0
0xdbe9:	jne	0xdc08


0xdec0:	jmp	0xda58


0xdbeb:	mov	rax, qword ptr [rsp + 0x60]
0xdbf0:	mov	rbx, qword ptr [rsp + 0x10]
0xdbf5:	mov	rax, qword ptr [rdx + rax]
0xdbf9:	cmp	qword ptr [rax + 0x10], rbx
0xdbfd:	jg	0xdec8


0xdec8:	mov	rax, qword ptr [rsp + 0x18]
0xdecd:	mov	rcx, qword ptr [rsp + 8]
0xded2:	mov	rdi, r14
0xded5:	lea	r8, [rax + 0x10]
0xded9:	lea	rbx, [rax + 8]
0xdedd:	mov	rdx, r8
0xdee0:	mov	rsi, rbx
0xdee3:	mov	qword ptr [rsp + 0x10], r8
0xdee8:	call	0x9770


0xdeed:	test	eax, eax
0xdeef:	mov	dword ptr [rsp + 0x8c], eax
0xdef6:	jne	0xda58


0xdefc:	mov	r8, qword ptr [rsp + 0x10]
0xdf01:	mov	rsi, rbx
0xdf04:	mov	rdi, r14
0xdf07:	mov	rdx, r8
0xdf0a:	call	0xd6e0


0xdf0f:	test	eax, eax
0xdf11:	mov	dword ptr [rsp + 0x8c], eax
0xdf18:	je	0xdc08


0xdf1e:	jmp	0xda58


0x9eba:	cmp	rbp, r12
0x9ebd:	mov	dword ptr [rbx + 0x70], eax
0x9ec0:	mov	r8, qword ptr [rsp]
0x9ec4:	jne	0x9f48


0x9eca:	cmp	rbp, r8
0x9ecd:	jge	0x9f48


0x9f48:	mov	rax, qword ptr [rbx + 0x50]
0x9f4c:	mov	byte ptr [rbx + 0x8c], 0
0x9f53:	add	rax, rbp
0x9f56:	sub	rax, r15
0x9f59:	mov	qword ptr [rbx + 0x58], rax
0x9f5d:	mov	rax, qword ptr [rbx + 0x60]
0x9f61:	add	rax, rbp
0x9f64:	sub	rax, r15
0x9f67:	test	r12, r12
0x9f6a:	mov	qword ptr [rbx + 0x68], rax
0x9f6e:	jle	0x9f93


0x9ecf:	cmp	qword ptr [r14 + r12*8], rbp
0x9ed3:	jne	0x9f48


0x9f93:	cmp	r12, r8
0x9f96:	jge	0xa1c8


0x9f70:	cmp	qword ptr [r14 + r12*8 - 8], rbp
0x9f75:	je	0x9f8b


0x9ed5:	mov	rdi, qword ptr [rbx + 0x10]
0x9ed9:	sub	r8, rbp
0x9edc:	lea	rdx, [r8*4]
0x9ee4:	lea	rsi, [rdi + rbp*4]
0x9ee8:	call	0x1ba0


0x9f9c:	mov	rax, qword ptr [rbx + 0x10]
0x9fa0:	jmp	0x9fb5


0xa1c8:	jne	0x9fbc


0x9f8b:	test	r13, r13
0x9f8e:	mov	r12, r13
0x9f91:	jne	0x9f80


0x9f77:	jmp	0x9f93


0x1ba0:	jmp	qword ptr [rip + 0x2173b2]


0x9fb5:	cmp	dword ptr [rax + r12*4], -1
0x9fba:	je	0x9fa8


0x9fbc:	mov	rdx, qword ptr [r14 + r12*8]
0x9fc0:	sub	rdx, rbp
0x9fc3:	cmp	rdx, 0
0x9fc7:	mov	qword ptr [rbx + 0x30], rdx
0x9fcb:	je	0xa001


0x9f80:	cmp	qword ptr [r14 + r13*8 - 8], rbp
0x9f85:	jne	0x9f93




0x9fa8:	add	r12, 1
0x9fac:	cmp	r12, r8
0x9faf:	je	0xa1d0


0xa001:	movzx	eax, byte ptr [rbx + 0x8b]
0xa008:	mov	qword ptr [rbx + 0x38], rdx
0xa00c:	test	al, al
0xa00e:	je	0x9c8a


0x9fcd:	jle	0x9fef


0x9f87:	sub	r13, 1
0x9f8b:	test	r13, r13
0x9f8e:	mov	r12, r13
0x9f91:	jne	0x9f80


0xa1d0:	mov	qword ptr [rbx + 0x30], 0
0xa1d8:	xor	edx, edx
0xa1da:	jmp	0xa001


0x9fef:	mov	rdi, qword ptr [rbx + 8]
0x9ff3:	mov	esi, 0xff
0x9ff8:	call	0x1a60


0x9fcf:	mov	rax, qword ptr [rbx + 0x10]
0x9fd3:	lea	rcx, [rax + rdx*4]
0x9fd7:	nop	word ptr [rax + rax]
0x9fe0:	mov	dword ptr [rax], 0xffffffff
0x9fe6:	add	rax, 4
0x9fea:	cmp	rcx, rax
0x9fed:	jne	0x9fe0


0x9fe0:	mov	dword ptr [rax], 0xffffffff
0x9fe6:	add	rax, 4
0x9fea:	cmp	rcx, rax
0x9fed:	jne	0x9fe0


0xa1f8:	mov	dword ptr [rbx + 0x70], eax
0xa1fb:	jmp	0x9e3a


0x9e3a:	cmp	r12, 0
0x9e3e:	jne	0xa25a


0x9e44:	movzx	eax, byte ptr [rbx + 0x8b]
0x9e4b:	mov	qword ptr [rbx + 0x38], r12
0x9e4f:	jmp	0xa00c


0xa25a:	jle	0xa277


0xa277:	cmp	byte ptr [rbx + 0x8b], 0
0xa27e:	jne	0xa2d8


0xa25c:	mov	rax, qword ptr [rbx + 0x10]
0xa260:	lea	rdx, [rax + r12*4]
0xa264:	nop	dword ptr [rax]
0xa268:	mov	dword ptr [rax], 0xffffffff
0xa26e:	add	rax, 4
0xa272:	cmp	rdx, rax
0xa275:	jne	0xa268


0xa280:	mov	qword ptr [rbx + 0x38], r12
0xa284:	jmp	0x9c8a


0xa2d8:	mov	rdi, qword ptr [rbx + 8]
0xa2dc:	mov	rdx, r12
0xa2df:	mov	esi, 0xff
0xa2e4:	call	0x1a60


0xa268:	mov	dword ptr [rax], 0xffffffff
0xa26e:	add	rax, 4
0xa272:	cmp	rdx, rax
0xa275:	jne	0xa268


0x9c5e:	mov	r8, qword ptr [rsp]
0x9c62:	mov	dword ptr [rbx + 0x70], eax
0x9c65:	sub	r8, rbp
0x9c68:	cmp	dword ptr [rbx + 0x90], 1
0x9c6f:	jg	0x9d10


0x9c75:	cmp	byte ptr [rbx + 0x8b], 0
0x9c7c:	jne	0xa020


0x9d10:	mov	rdi, qword ptr [rbx + 0x10]
0x9d14:	lea	rdx, [r8*4]
0x9d1c:	lea	rsi, [rdi + rbp*4]
0x9d20:	call	0x1ba0


0x9c82:	sub	qword ptr [rbx + 0x38], rbp
0x9c86:	mov	qword ptr [rbx + 0x30], r8
0x9c8a:	add	qword ptr [rbx + 8], rbp
0x9c8e:	mov	rax, qword ptr [rbx + 0x58]
0x9c92:	sub	qword ptr [rbx + 0x68], rbp
0x9c96:	mov	qword ptr [rbx + 0x28], r15
0x9c9a:	sub	rax, rbp
0x9c9d:	cmp	dword ptr [rbx + 0x90], 1
0x9ca4:	mov	qword ptr [rbx + 0x58], rax
0x9ca8:	jle	0x9d48


0xa020:	mov	rdi, qword ptr [rbx + 8]
0xa024:	mov	rdx, r8
0xa027:	lea	rsi, [rdi + rbp]
0xa02b:	call	0x1ba0


0xd7ee:	mov	edx, ebp
0xd7f0:	shr	edx, 8
0xd7f3:	mov	ecx, edx
0xd7f5:	and	cx, 0x3ff
0xd7fa:	test	dl, 4
0xd7fd:	jne	0xd768


0xd803:	and	edx, 8
0xd806:	je	0xd771


0xd768:	test	al, 1
0xd76a:	je	0xd790


0xd771:	test	cl, 0x20
0xd774:	je	0xd77a


0xd80c:	test	al, 1
0xd80e:	je	0xd771


0xd76c:	and	edx, 8
0xd76f:	jne	0xd790


0xd77a:	and	ecx, 0x80
0xd780:	je	0xd820


0xd776:	test	al, 2
0xd778:	je	0xd790


0xd814:	jmp	0xd790


0xd786:	test	al, 8
0xd788:	jne	0xd820


0x9a22:	mov	ecx, ebx
0x9a24:	mov	edx, eax
0x9a26:	and	cx, 0x3ff
0x9a2b:	test	bl, 4
0x9a2e:	je	0x9a98


0x9a98:	and	ebx, 8
0x9a9b:	je	0x9a3c


0x9a30:	xor	eax, eax
0x9a32:	test	dl, 1
0x9a35:	je	0x9a5c


0x9a3c:	test	cl, 0x20
0x9a3f:	je	0x9a48


0x9a9d:	test	al, 1
0x9a9f:	je	0x9a3c


0x9a37:	and	ebx, 8
0x9a3a:	jne	0x9a5c


0x9a48:	shr	edx, 3
0x9a4b:	mov	eax, 1
0x9a50:	and	edx, 1
0x9a53:	and	ecx, 0x80
0x9a59:	cmovne	eax, edx
0x9a5c:	pop	rbx
0x9a5d:	ret	


0x9a41:	xor	eax, eax
0x9a43:	test	dl, 2
0x9a46:	je	0x9a5c


0x9aa1:	xor	eax, eax
0x9aa3:	pop	rbx
0x9aa4:	ret	


0xe125:	lea	rdx, [rsp + 0x10]
0xe12a:	mov	ecx, eax
0xe12c:	mov	rsi, r15
0xe12f:	mov	rdi, r13
0xe132:	call	0x8e30


0xe137:	mov	rbp, rax
0xe13a:	mov	qword ptr [r14], rax
0xe13d:	jmp	0xe027


0xc5b5:	cmp	r12, rbp
0xc5b8:	mov	r13d, eax
0xc5bb:	je	0xc993


0xc993:	mov	edi, 8
0xc998:	mov	qword ptr [rsp + 0x90], 1
0xc9a4:	mov	qword ptr [rsp + 0x98], 1
0xc9b0:	call	0x1b00


0xc5c1:	mov	rbp, qword ptr [r14 + r12*8]
0xc5c5:	test	rbp, rbp
0xc5c8:	je	0xc5d4


0xc5d4:	pxor	xmm0, xmm0
0xc5d8:	mov	qword ptr [rsp + 0xa0], 0
0xc5e4:	movaps	xmmword ptr [rsp + 0x90], xmm0
0xc5ec:	cmp	r12, qword ptr [rsp + 0x40]
0xc5f1:	jge	0xc918


0xc5ca:	test	byte ptr [rbp + 0x68], 0x40
0xc5ce:	jne	0xcaf0


0xc5f7:	mov	ecx, dword ptr [r15 + 0xe0]
0xc5fe:	test	ecx, ecx
0xc600:	js	0xc918


0xc918:	mov	rdi, qword ptr [rsp + 0xa0]
0xc920:	call	0x18d0


0xcaf0:	lea	rbx, [rsp + 0x90]
0xcaf8:	lea	rsi, [rbp + 8]
0xcafc:	mov	rdi, rbx
0xcaff:	call	0x8c40


0xc606:	lea	rbx, [rsp + 0x90]
0xc60e:	lea	rax, [r12*8 + 8]
0xc616:	mov	qword ptr [rsp], r12
0xc61a:	mov	qword ptr [rsp + 0x20], 0
0xc623:	mov	qword ptr [rsp + 8], rbx
0xc628:	lea	rbx, [rsp + 0xb0]
0xc630:	mov	qword ptr [rsp + 0x10], rax
0xc635:	mov	rax, qword ptr [r15 + 0xb8]
0xc63c:	mov	qword ptr [rsp + 0x18], rbx
0xc641:	lea	rbx, [rsp + 0x8c]
0xc649:	mov	qword ptr [rsp + 0x58], rbx
0xc64e:	mov	rcx, qword ptr [rsp + 0x10]
0xc653:	mov	qword ptr [rsp + 0x98], 0
0xc65f:	mov	rsi, qword ptr [rax + rcx]
0xc663:	test	rsi, rsi
0xc666:	je	0xca28


0xca28:	test	rbp, rbp
0xca2b:	jne	0xc692


0xc66c:	mov	rdi, qword ptr [rsp + 8]
0xc671:	add	rsi, 8
0xc675:	call	0x8000


0xca31:	mov	rax, qword ptr [rsp]
0xca35:	lea	rbx, [rax + 1]
0xca39:	mov	r12, rbx
0xca3c:	jmp	0xc8a4


0xc692:	cmp	qword ptr [rbp + 0x28], 0
0xc697:	mov	rax, qword ptr [rsp + 0x18]
0xc69c:	pxor	xmm0, xmm0
0xc6a0:	mov	r12, qword ptr [r15 + 0x98]
0xc6a7:	mov	dword ptr [rsp + 0x8c], 0
0xc6b2:	mov	qword ptr [rax + 0x10], 0
0xc6ba:	movaps	xmmword ptr [rax], xmm0
0xc6bd:	jle	0xcbf0


0xc8a4:	mov	edx, dword ptr [r15 + 0xa0]
0xc8ab:	mov	rsi, qword ptr [rsp]
0xc8af:	mov	rdi, r15
0xc8b2:	call	0x98c0


0xcbf0:	xor	edi, edi
0xcbf2:	jmp	0xcaa8


0xc6c3:	lea	rax, [r12 + 0xd8]
0xc6cb:	xor	ebx, ebx
0xc6cd:	mov	qword ptr [rsp + 0x28], rax
0xc6d2:	jmp	0xc719


0xcaa8:	call	0x18d0


0xc719:	mov	rax, qword ptr [rbp + 0x30]
0xc71d:	mov	rdi, qword ptr [r12]
0xc721:	mov	r14, qword ptr [rax + rbx*8]
0xc725:	mov	r13, r14
0xc728:	shl	r13, 4
0xc72c:	lea	rsi, [rdi + r13]
0xc730:	test	byte ptr [rsi + 0xa], 0x10
0xc734:	je	0xc6d8


0xc6d8:	mov	rdx, qword ptr [rsp]
0xc6dc:	mov	rdi, r15
0xc6df:	call	0x99b0


0xc736:	mov	r8, qword ptr [rsp]
0xc73a:	mov	rsi, qword ptr [rsp + 0x28]
0xc73f:	mov	rcx, r15
0xc742:	mov	rdx, r14
0xc745:	call	0xc290


0xc74a:	cmp	eax, 1
0xc74d:	jle	0xca10


0xca10:	test	eax, eax
0xca12:	jne	0xc6e8


0xc753:	cdqe	
0xc755:	add	rax, qword ptr [rsp]
0xc759:	mov	rdx, qword ptr [r12 + 0x18]
0xc75e:	lea	r13, [r14*8]
0xc766:	mov	rdx, qword ptr [rdx + r14*8]
0xc76a:	mov	rcx, rax
0xc76d:	mov	qword ptr [rsp + 0x38], rax
0xc772:	lea	r14, [rax*8]
0xc77a:	mov	rax, qword ptr [r15 + 0xb8]
0xc781:	mov	rsi, qword ptr [rax + rcx*8]
0xc785:	mov	qword ptr [rsp + 0xb8], 0
0xc791:	test	rsi, rsi
0xc794:	je	0xc7b9


0xca18:	mov	rsi, qword ptr [r12]
0xca1c:	add	rsi, r13
0xca1f:	jmp	0xc6d8


0xc6e8:	lea	r13, [r14*8]
0xc6f0:	mov	rax, qword ptr [r12 + 0x18]
0xc6f5:	mov	rdi, qword ptr [rsp + 8]
0xc6fa:	mov	rsi, qword ptr [rax + r13]
0xc6fe:	call	0x65a0


0xc7b9:	mov	rdi, qword ptr [rsp + 0x18]
0xc7be:	mov	rsi, rdx
0xc7c1:	call	0x65a0


0xc796:	mov	rdi, qword ptr [rsp + 0x18]
0xc79b:	add	rsi, 8
0xc79f:	mov	qword ptr [rsp + 0x50], rdx
0xc7a4:	call	0x8000


0xc7c6:	test	al, al
0xc7c8:	je	0xca48


0xca48:	mov	rdi, qword ptr [rsp + 0xc0]
0xca50:	call	0x18d0


0xc7ce:	add	r14, qword ptr [r15 + 0xb8]
0xc7d5:	mov	rdx, qword ptr [rsp + 0x18]
0xc7da:	mov	rsi, r12
0xc7dd:	mov	rdi, qword ptr [rsp + 0x58]
0xc7e2:	call	0x90f0


0xc7e7:	mov	rdx, qword ptr [rsp + 0x38]
0xc7ec:	mov	qword ptr [r14], rax
0xc7ef:	mov	rax, qword ptr [r15 + 0xb8]
0xc7f6:	cmp	qword ptr [rax + rdx*8], 0
0xc7fb:	jne	0xc6f0


0xc801:	mov	edx, dword ptr [rsp + 0x8c]
0xc808:	test	edx, edx
0xc80a:	je	0xc6f0


0xc6f0:	mov	rax, qword ptr [r12 + 0x18]
0xc6f5:	mov	rdi, qword ptr [rsp + 8]
0xc6fa:	mov	rsi, qword ptr [rax + r13]
0xc6fe:	call	0x65a0


0xc810:	mov	rdi, qword ptr [rsp + 0xc0]
0xc818:	call	0x18d0


0xc703:	test	al, al
0xc705:	je	0xca48


0xc70b:	add	rbx, 1
0xc70f:	cmp	rbx, qword ptr [rbp + 0x28]
0xc713:	jge	0xcaa0


0xcaa0:	mov	rdi, qword ptr [rsp + 0xc0]
0xcaa8:	call	0x18d0


0xc6e4:	test	al, al
0xc6e6:	je	0xc70b


0xc7a9:	test	eax, eax
0xc7ab:	mov	dword ptr [rsp + 0x8c], eax
0xc7b2:	mov	rdx, qword ptr [rsp + 0x50]
0xc7b7:	jne	0xc810


0xc67a:	test	eax, eax
0xc67c:	mov	dword ptr [rsp + 0x88], eax
0xc683:	jne	0xca60


0xc689:	test	rbp, rbp
0xc68c:	je	0xc838


0xca60:	mov	rdi, qword ptr [rsp + 0xa0]
0xca68:	call	0x18d0


0xc838:	mov	rax, qword ptr [rsp]
0xc83c:	cmp	qword ptr [rsp + 0x98], 0
0xc845:	lea	rbx, [rax + 1]
0xc849:	mov	r12, rbx
0xc84c:	je	0xc8a4


0xc84e:	mov	ecx, dword ptr [rsp + 0x110]
0xc855:	mov	rdx, qword ptr [rsp + 0x48]
0xc85a:	mov	rsi, qword ptr [rsp + 8]
0xc85f:	mov	rdi, qword ptr [rsp + 0x30]
0xc864:	call	0x8490


0xcb04:	test	eax, eax
0xcb06:	mov	dword ptr [rsp + 0x88], eax
0xcb0d:	jne	0xca74


0xcb13:	test	byte ptr [rbp + 0x68], 0x40
0xcb17:	je	0xc5ec


0xc5ec:	cmp	r12, qword ptr [rsp + 0x40]
0xc5f1:	jge	0xc918


0xcb1d:	cmp	qword ptr [rsp + 0x98], 0
0xcb26:	je	0xcb52


0xcb52:	mov	rsi, qword ptr [rsp + 0x30]
0xcb57:	lea	rdi, [rsp + 0x88]
0xcb5f:	mov	ecx, r13d
0xcb62:	mov	rdx, rbx
0xcb65:	call	0x8e30


0xcb28:	mov	r8d, dword ptr [rsp + 0x110]
0xcb30:	mov	rcx, qword ptr [rsp + 0x48]
0xcb35:	mov	rdx, r12
0xcb38:	mov	rsi, rbx
0xcb3b:	mov	rdi, r15
0xcb3e:	call	0x93d0


0xcb43:	test	eax, eax
0xcb45:	mov	dword ptr [rsp + 0x88], eax
0xcb4c:	jne	0xca60


0xcb6a:	test	rax, rax
0xcb6d:	mov	rbp, rax
0xcb70:	je	0xcbf7


0xcbf7:	mov	esi, dword ptr [rsp + 0x88]
0xcbfe:	test	esi, esi
0xcc00:	je	0xcb76


0xcb76:	mov	rax, qword ptr [r15 + 0xb8]
0xcb7d:	mov	qword ptr [rax + r12*8], rbp
0xcb81:	jmp	0xc5ec


0xcc06:	jmp	0xca60


0xc8b7:	mov	rdx, qword ptr [rsp + 8]
0xc8bc:	mov	rsi, qword ptr [rsp + 0x30]
0xc8c1:	lea	rdi, [rsp + 0x88]
0xc8c9:	mov	ecx, eax
0xc8cb:	call	0x8e30


0xc8d0:	test	rax, rax
0xc8d3:	mov	rbp, rax
0xc8d6:	je	0xcac0


0xcac0:	mov	eax, dword ptr [rsp + 0x88]
0xcac7:	test	eax, eax
0xcac9:	jne	0xca60


0xc8dc:	mov	rax, qword ptr [r15 + 0xb8]
0xc8e3:	mov	rdx, qword ptr [rsp + 0x10]
0xc8e8:	mov	qword ptr [rsp + 0x20], 0
0xc8f1:	mov	qword ptr [rax + rdx], rbp
0xc8f5:	cmp	qword ptr [rsp + 0x40], rbx
0xc8fa:	jle	0xc918


0xcacb:	mov	rax, qword ptr [r15 + 0xb8]
0xcad2:	mov	rdx, qword ptr [rsp + 0x10]
0xcad7:	add	qword ptr [rsp + 0x20], 1
0xcadd:	mov	qword ptr [rax + rdx], 0
0xcae5:	jmp	0xc8f5


0xc8fc:	movsxd	rdx, dword ptr [r15 + 0xe0]
0xc903:	add	qword ptr [rsp + 0x10], 8
0xc909:	cmp	rdx, qword ptr [rsp + 0x20]
0xc90e:	mov	qword ptr [rsp], rbx
0xc912:	jge	0xc64e


0xc8f5:	cmp	qword ptr [rsp + 0x40], rbx
0xc8fa:	jle	0xc918


0xc64e:	mov	rcx, qword ptr [rsp + 0x10]
0xc653:	mov	qword ptr [rsp + 0x98], 0
0xc65f:	mov	rsi, qword ptr [rax + rcx]
0xc663:	test	rsi, rsi
0xc666:	je	0xca28


0xc990:	mov	r13d, eax
0xc993:	mov	edi, 8
0xc998:	mov	qword ptr [rsp + 0x90], 1
0xc9a4:	mov	qword ptr [rsp + 0x98], 1
0xc9b0:	call	0x1b00


0x9adb:	test	rbx, rbx
0x9ade:	jle	0x9b88


0x9b88:	pop	rbx
0x9b89:	xor	eax, eax
0x9b8b:	pop	rbp
0x9b8c:	pop	r12
0x9b8e:	ret	


0x9ae4:	mov	rdx, qword ptr [rbp + 0x98]
0x9aeb:	mov	r11d, eax
0x9aee:	mov	ebp, eax
0x9af0:	and	eax, 1
0x9af3:	mov	r9, qword ptr [r12]
0x9af7:	xor	esi, esi
0x9af9:	and	ebp, 8
0x9afc:	and	r11d, 2
0x9b00:	mov	r10d, eax
0x9b03:	mov	r8, qword ptr [rdx]
0x9b06:	jmp	0x9b19


0x9b19:	mov	rax, qword ptr [r9 + rsi*8]
0x9b1d:	mov	rdx, rax
0x9b20:	shl	rdx, 4
0x9b24:	add	rdx, r8
0x9b27:	mov	ecx, dword ptr [rdx + 8]
0x9b2a:	shr	ecx, 8
0x9b2d:	mov	edi, ecx
0x9b2f:	and	di, 0x3ff
0x9b34:	cmp	byte ptr [rdx + 8], 2
0x9b38:	jne	0x9b10


0x9b3a:	test	di, di
0x9b3d:	je	0x9b65


0x9b10:	add	rsi, 1
0x9b14:	cmp	rsi, rbx
0x9b17:	je	0x9b88


0x9b65:	pop	rbx
0x9b66:	pop	rbp
0x9b67:	pop	r12
0x9b69:	ret	


0x9b3f:	test	cl, 4
0x9b42:	je	0x9b70


0x9b70:	and	ecx, 8
0x9b73:	je	0x9b4e


0x9b44:	test	r10d, r10d
0x9b47:	je	0x9b10


0x9b4e:	test	dil, 0x20
0x9b52:	je	0x9b59


0x9b75:	test	r10d, r10d
0x9b78:	jne	0x9b10


0x9b49:	and	ecx, 8
0x9b4c:	jne	0x9b10


0x9b59:	and	edi, 0x80
0x9b5f:	je	0x9b65


0x9b54:	test	r11d, r11d
0x9b57:	je	0x9b10


0x9b7a:	test	dil, 0x20
0x9b7e:	je	0x9b59


0x9b61:	test	ebp, ebp
0x9b63:	je	0x9b10


0x9b80:	jmp	0x9b54


0xf109:	test	rax, rax
0xf10c:	mov	r8, qword ptr [rsp + 0x10]
0xf111:	je	0xec59


0xf117:	jmp	0xec36


0xf6d1:	mov	qword ptr [rsp + 0x1d0], rax
0xf6d9:	jmp	0xedf8


0xedf8:	mov	r13, qword ptr [rsp + 0x1d0]
0xee00:	movabs	rsi, 0x1ffffffffffffffe
0xee0a:	cmp	qword ptr [rsp + 0x20], rsi
0xee0f:	mov	r15, qword ptr [rsp + 0x1b8]
0xee17:	ja	0xfa7b


0xee1d:	mov	rax, qword ptr [rsp + 0x20]
0xee22:	add	rax, 1
0xee26:	lea	rbx, [rax*8]
0xee2e:	mov	qword ptr [rsp + 8], rax
0xee33:	mov	rdi, rbx
0xee36:	call	0x1b00


0xfa7b:	mov	rdi, rbx
0xfa7e:	mov	dword ptr [rsp + 0x5c], 0xc
0xfa86:	jmp	0xf058


0xedcc:	mov	r13, rax
0xedcf:	mov	qword ptr [rsp + 0x1d0], rax
0xedd7:	mov	rax, qword ptr [rsp + 0x38]
0xeddc:	test	byte ptr [rax + 0xb0], 1
0xede3:	jne	0xee00


0xede5:	mov	rax, qword ptr [rsp + 0x38]
0xedea:	cmp	qword ptr [rax + 0x98], 0
0xedf2:	je	0xf78c


0xee00:	movabs	rsi, 0x1ffffffffffffffe
0xee0a:	cmp	qword ptr [rsp + 0x20], rsi
0xee0f:	mov	r15, qword ptr [rsp + 0x1b8]
0xee17:	ja	0xfa7b


0xfadc:	test	rax, rax
0xfadf:	mov	qword ptr [rsp + 0x30], rax
0xfae4:	je	0xebcd


0xfaea:	jmp	0xfa57


0xdd70:	pop	rdx
0xdd71:	cmp	eax, 1
0xdd74:	pop	rcx
0xdd75:	mov	r11, qword ptr [rsp + 0x10]
0xdd7a:	je	0xddef


0xdd7c:	test	eax, eax
0xdd7e:	jne	0xda58


0xdd84:	mov	rax, qword ptr [r12 + 0x20]
0xdd89:	cmp	rax, qword ptr [r12 + 0x18]
0xdd8e:	je	0xdf68


0xdf68:	lea	rdx, [rax + rax + 1]
0xdf6d:	mov	rdi, qword ptr [r12 + 0x28]
0xdf72:	lea	rsi, [rdx*8]
0xdf7a:	mov	qword ptr [rsp + 0x10], rdx
0xdf7f:	call	0x1b60


0xdd94:	mov	esi, 0x28
0xdd99:	mov	edi, 1
0xdd9e:	call	0x1ab0


0xd575:	test	eax, eax
0xd577:	pop	rdx
0xd578:	pop	rcx
0xd579:	je	0xd590


0xd590:	mov	rax, qword ptr [rbx + 0xc8]
0xd597:	mov	rdx, qword ptr [rbx + 0xd0]
0xd59e:	mov	r15, qword ptr [rbp + 8]
0xd5a2:	mov	rcx, qword ptr [r13]
0xd5a6:	mov	rdi, qword ptr [rbx + 0xd8]
0xd5ad:	cmp	rax, rdx
0xd5b0:	mov	rsi, r15
0xd5b3:	jge	0xd650


0xd57b:	add	rsp, 0x18
0xd57f:	pop	rbx
0xd580:	pop	rbp
0xd581:	pop	r12
0xd583:	pop	r13
0xd585:	pop	r14
0xd587:	pop	r15
0xd589:	ret	


0xd5b9:	lea	rdx, [rax + rax*4]
0xd5bd:	shl	rdx, 3
0xd5c1:	test	rax, rax
0xd5c4:	jle	0xd5d1


0xd650:	lea	rsi, [rdx + rdx*4]
0xd654:	mov	qword ptr [rsp + 8], rcx
0xd659:	shl	rsi, 4
0xd65d:	call	0x1b60


0xd5d1:	add	rdi, rdx
0xd5d4:	xor	edx, edx
0xd5d6:	cmp	r15, rcx
0xd5d9:	sete	dl
0xd5dc:	add	rax, 1
0xd5e0:	mov	qword ptr [rdi], r14
0xd5e3:	neg	edx
0xd5e5:	mov	qword ptr [rdi + 8], r12
0xd5e9:	mov	qword ptr [rdi + 0x10], rcx
0xd5ed:	mov	word ptr [rdi + 0x22], dx
0xd5f1:	mov	qword ptr [rdi + 0x18], r15
0xd5f5:	mov	qword ptr [rbx + 0xc8], rax
0xd5fc:	mov	byte ptr [rdi + 0x20], 0
0xd600:	mov	rax, r15
0xd603:	movsxd	rdx, dword ptr [rbx + 0xe0]
0xd60a:	sub	rax, rcx
0xd60d:	cmp	rdx, rax
0xd610:	jge	0xd61c


0xd5c6:	lea	r8, [rdi + rdx - 0x28]
0xd5cb:	cmp	r12, qword ptr [r8 + 8]
0xd5cf:	je	0xd640


0xd612:	sub	r15d, ecx
0xd615:	mov	dword ptr [rbx + 0xe0], r15d
0xd61c:	add	rsi, r12
0xd61f:	sub	rsi, qword ptr [r13]
0xd623:	add	rsp, 0x18
0xd627:	mov	rdi, rbx
0xd62a:	pop	rbx
0xd62b:	pop	rbp
0xd62c:	pop	r12
0xd62e:	pop	r13
0xd630:	pop	r14
0xd632:	pop	r15
0xd634:	jmp	0x7170


0xd61c:	add	rsi, r12
0xd61f:	sub	rsi, qword ptr [r13]
0xd623:	add	rsp, 0x18
0xd627:	mov	rdi, rbx
0xd62a:	pop	rbx
0xd62b:	pop	rbp
0xd62c:	pop	r12
0xd62e:	pop	r13
0xd630:	pop	r14
0xd632:	pop	r15
0xd634:	jmp	0x7170


0xd640:	mov	byte ptr [r8 + 0x20], 1
0xd645:	jmp	0xd5d1


0xd9ab:	cmp	eax, 1
0xd9ae:	mov	r8, qword ptr [r14 + 8]
0xd9b2:	ja	0xda58


0xd9b8:	add	rbp, 1
0xd9bc:	cmp	rbp, qword ptr [r13 + 0x20]
0xd9c0:	mov	r11, r15
0xd9c3:	mov	rbx, r12
0xd9c6:	jge	0xdc78


0xdc78:	mov	rbx, r13
0xdc7b:	mov	r13, r8
0xdc7e:	lea	r11, [r15 + 1]
0xdc82:	cmp	qword ptr [rsp + 8], r11
0xdc87:	jl	0xd919


0x10e0e:	cdqe	
0x10e10:	add	qword ptr [r14 + 0x48], rax
0x10e14:	movzx	eax, byte ptr [r13 + 8]
0x10e19:	movzx	edx, byte ptr [r13]
0x10e1e:	cmp	al, 2
0x10e20:	je	0x10e70


0x10e70:	mov	rbx, -2
0x10e77:	mov	rax, rbx
0x10e7a:	pop	rbx
0x10e7b:	pop	rbp
0x10e7c:	pop	r12
0x10e7e:	pop	r13
0x10e80:	pop	r14
0x10e82:	ret	


0x10e22:	cmp	al, 0x18
0x10e24:	je	0x10e77


0x10e77:	mov	rax, rbx
0x10e7a:	pop	rbx
0x10e7b:	pop	rbp
0x10e7c:	pop	r12
0x10e7e:	pop	r13
0x10e80:	pop	r14
0x10e82:	ret	


0x10e26:	cmp	dl, 0x2c
0x10e29:	je	0x10e77


0x10e2b:	cmp	al, 1
0x10e2d:	je	0x10e38


0x10e38:	lea	eax, [rdx - 0x30]
0x10e3b:	cmp	al, 9
0x10e3d:	ja	0x10e2f


0x10e2f:	mov	rbx, r12
0x10e32:	jmp	0x10e00


0x10e3f:	cmp	rbx, -2
0x10e43:	je	0x10e2f


0x10e00:	mov	rdx, rbp
0x10e03:	mov	rsi, r14
0x10e06:	mov	rdi, r13
0x10e09:	call	0x106e0


0x10e45:	cmp	rbx, -1
0x10e49:	je	0x10e88


0x10e88:	movzx	ebx, dl
0x10e8b:	sub	ebx, 0x30
0x10e8e:	movsxd	rbx, ebx
0x10e91:	jmp	0x10e00


0x10e4b:	lea	rax, [rbx + rbx*4]
0x10e4f:	lea	rbx, [rdx + rax*2]
0x10e53:	mov	eax, 0x8030
0x10e58:	cmp	rbx, 0x8030
0x10e5f:	cmovg	rbx, rax
0x10e63:	sub	rbx, 0x30
0x10e67:	jmp	0x10e00


0x123be:	mov	edx, dword ptr [rbx]
0x123c0:	mov	r14, rax
0x123c3:	test	edx, edx
0x123c5:	je	0x123d0


0x123d0:	lea	rax, [rsp + 0x20]
0x123d5:	mov	qword ptr [rsp + 0x18], rax
0x123da:	nop	word ptr [rax + rax]
0x123e0:	movzx	eax, byte ptr [rbp + 8]
0x123e4:	mov	edx, eax
0x123e6:	and	edx, 0xfffffff7
0x123e9:	cmp	dl, 2
0x123ec:	je	0x12480


0x123c7:	test	rax, rax
0x123ca:	je	0x124ca


0x12480:	mov	rcx, qword ptr [rsp + 0x38]
0x12485:	xor	rcx, qword ptr fs:[0x28]
0x1248e:	mov	rax, r14
0x12491:	jne	0x124fd


0x123f2:	cmp	al, 9
0x123f4:	jne	0x123ff


0x124ca:	xor	r14d, r14d
0x124cd:	jmp	0x12480


0x12493:	add	rsp, 0x48
0x12497:	pop	rbx
0x12498:	pop	rbp
0x12499:	pop	r12
0x1249b:	pop	r13
0x1249d:	pop	r14
0x1249f:	pop	r15
0x124a1:	ret	


0x124fd:	call	0x19e0


0x123f6:	test	r12, r12
0x123f9:	jne	0x12480


0x123ff:	mov	rdi, qword ptr [rsp]
0x12403:	mov	r9, rbx
0x12406:	mov	r8, r12
0x12409:	mov	rcx, r15
0x1240c:	mov	rdx, rbp
0x1240f:	mov	rsi, r13
0x12412:	call	0x10ea0


0x12417:	mov	r9, rax
0x1241a:	mov	eax, dword ptr [rbx]
0x1241c:	test	eax, eax
0x1241e:	je	0x12429


0x12429:	test	r14, r14
0x1242c:	je	0x124a8


0x12420:	test	r9, r9
0x12423:	je	0x124b4


0x124a8:	test	r14, r14
0x124ab:	cmove	r14, r9
0x124af:	jmp	0x123e0


0x1242e:	test	r9, r9
0x12431:	je	0x124a8


0x124b4:	test	r14, r14
0x124b7:	je	0x124ca


0x123e0:	movzx	eax, byte ptr [rbp + 8]
0x123e4:	mov	edx, eax
0x123e6:	and	edx, 0xfffffff7
0x123e9:	cmp	dl, 2
0x123ec:	je	0x12480


0x12433:	mov	rax, qword ptr [rsp + 0x10]
0x12438:	mov	r8, qword ptr [rsp + 0x18]
0x1243d:	mov	rcx, r9
0x12440:	mov	rdx, r14
0x12443:	mov	qword ptr [rsp + 8], r9
0x12448:	mov	byte ptr [rsp + 0x28], 0x10
0x1244d:	lea	rsi, [rax + 0x80]
0x12454:	lea	rdi, [rax + 0x70]
0x12458:	call	0x87a0


0x124b9:	lea	rsi, [rip - 0xb260]
0x124c0:	xor	edx, edx
0x124c2:	mov	rdi, r14
0x124c5:	call	0x63c0


0x1245d:	test	rax, rax
0x12460:	mov	r9, qword ptr [rsp + 8]
0x12465:	je	0x124d0


0x124d0:	lea	rsi, [rip - 0xb277]
0x124d7:	mov	rdi, r9
0x124da:	xor	edx, edx
0x124dc:	call	0x63c0


0x12467:	mov	r14, rax
0x1246a:	movzx	eax, byte ptr [rbp + 8]
0x1246e:	mov	edx, eax
0x12470:	and	edx, 0xfffffff7
0x12473:	cmp	dl, 2
0x12476:	jne	0x123f2


0x12558:	mov	edx, dword ptr [r13]
0x1255c:	mov	r15, rax
0x1255f:	test	edx, edx
0x12561:	je	0x1256c


0x1256c:	lea	rax, [rsp + 0x30]
0x12571:	mov	qword ptr [rsp + 8], rax
0x12576:	jmp	0x12604


0x12563:	test	rax, rax
0x12566:	je	0x12652


0x12604:	cmp	byte ptr [rbp + 8], 0xa
0x12608:	jne	0x12658


0x12652:	xor	r15d, r15d
0x12655:	nop	dword ptr [rax]
0x12658:	mov	rcx, qword ptr [rsp + 0x48]
0x1265d:	xor	rcx, qword ptr fs:[0x28]
0x12666:	mov	rax, r15
0x12669:	jne	0x1268a


0x1260a:	mov	rdx, r14
0x1260d:	mov	rsi, r12
0x12610:	mov	rdi, rbp
0x12613:	or	rdx, 0x800000
0x1261a:	call	0x106e0


0x12658:	mov	rcx, qword ptr [rsp + 0x48]
0x1265d:	xor	rcx, qword ptr fs:[0x28]
0x12666:	mov	rax, r15
0x12669:	jne	0x1268a


0x1266b:	add	rsp, 0x58
0x1266f:	pop	rbx
0x12670:	pop	rbp
0x12671:	pop	r12
0x12673:	pop	r13
0x12675:	pop	r14
0x12677:	pop	r15
0x12679:	ret	


0x1268a:	call	0x19e0


0x1261f:	cdqe	
0x12621:	add	qword ptr [r12 + 0x48], rax
0x12626:	movzx	eax, byte ptr [rbp + 8]
0x1262a:	mov	edx, eax
0x1262c:	and	edx, 0xfffffff7
0x1262f:	cmp	dl, 2
0x12632:	jne	0x12580


0x12638:	xor	ecx, ecx
0x1263a:	jmp	0x125df


0x12580:	cmp	al, 9
0x12582:	jne	0x12590


0x125df:	mov	r8, qword ptr [rsp + 8]
0x125e4:	lea	rsi, [rbx + 0x80]
0x125eb:	lea	rdi, [rbx + 0x70]
0x125ef:	mov	rdx, r15
0x125f2:	mov	byte ptr [rsp + 0x38], 0xa
0x125f7:	call	0x87a0


0x12584:	cmp	qword ptr [rsp + 0x10], 0
0x1258a:	jne	0x12638


0x12590:	mov	rax, qword ptr [rbx + 0xa8]
0x12597:	mov	r8, qword ptr [rsp + 0x10]
0x1259c:	mov	rcx, r14
0x1259f:	mov	rsi, qword ptr [rsp + 0x28]
0x125a4:	mov	r9, r13
0x125a7:	mov	rdx, rbp
0x125aa:	mov	rdi, r12
0x125ad:	mov	qword ptr [rsp + 0x18], rax
0x125b2:	mov	rax, qword ptr [rsp + 0x20]
0x125b7:	mov	qword ptr [rbx + 0xa8], rax
0x125be:	call	0x12380


0x125c3:	mov	rcx, rax
0x125c6:	mov	eax, dword ptr [r13]
0x125ca:	test	eax, eax
0x125cc:	je	0x125d3


0x125d3:	mov	rax, qword ptr [rsp + 0x18]
0x125d8:	or	qword ptr [rbx + 0xa8], rax
0x125df:	mov	r8, qword ptr [rsp + 8]
0x125e4:	lea	rsi, [rbx + 0x80]
0x125eb:	lea	rdi, [rbx + 0x70]
0x125ef:	mov	rdx, r15
0x125f2:	mov	byte ptr [rsp + 0x38], 0xa
0x125f7:	call	0x87a0


0x125ce:	test	rcx, rcx
0x125d1:	je	0x1263c


0x1263c:	test	r15, r15
0x1263f:	je	0x12652


0x12641:	lea	rsi, [rip - 0xb3e8]
0x12648:	xor	edx, edx
0x1264a:	mov	rdi, r15
0x1264d:	call	0x63c0


0x125fc:	test	rax, rax
0x125ff:	mov	r15, rax
0x12602:	je	0x12680


0x12680:	mov	dword ptr [r13], 0xc
0x12688:	jmp	0x12658


0x13ded:	mov	rdi, r13
0x13df0:	mov	rbx, rax
0x13df3:	call	0x18d0


0x14123:	add	rsp, 0x18
0x14127:	ret	


0x14140:	add	rsp, 0x18
0x14144:	ret	


0x14165:	add	rsp, 0x28
0x14169:	ret	


0x14187:	add	rsp, 0x28
0x1418b:	ret	


0x14331:	test	rbp, rbp
0x14334:	je	0x14356


0x14356:	add	rsp, 8
0x1435a:	pop	rbx
0x1435b:	pop	rbp
0x1435c:	pop	r12
0x1435e:	pop	r13
0x14360:	pop	r14
0x14362:	pop	r15
0x14364:	ret	


0x14336:	xor	ebx, ebx
0x14338:	nop	dword ptr [rax + rax]
0x14340:	mov	rdx, r15
0x14343:	mov	rsi, r14
0x14346:	mov	edi, r13d
0x14349:	call	qword ptr [r12 + rbx*8]


0xa030:	movzx	eax, byte ptr [rbx + 0x8b]
0xa037:	sub	qword ptr [rbx + 0x30], rbp
0xa03b:	sub	qword ptr [rbx + 0x38], rbp
0xa03f:	jmp	0xa00c


0x9d25:	mov	r8, qword ptr [rbx + 0x30]
0x9d29:	sub	r8, rbp
0x9d2c:	jmp	0x9c75


0x9eed:	mov	rdi, qword ptr [rbx + 8]
0x9ef1:	mov	rdx, qword ptr [rbx + 0x30]
0x9ef5:	lea	rsi, [rdi + rbp]
0x9ef9:	sub	rdx, rbp
0x9efc:	call	0x1ba0


0x9f01:	mov	rax, qword ptr [rbx + 0x30]
0x9f05:	sub	qword ptr [rbx + 0x38], rbp
0x9f09:	sub	rax, rbp
0x9f0c:	test	rax, rax
0x9f0f:	mov	qword ptr [rbx + 0x30], rax
0x9f13:	jle	0x9f38


0x9f15:	mov	rcx, qword ptr [rbx + 0x18]
0x9f19:	xor	eax, eax
0x9f1b:	lea	rsi, [rcx + rbp*8]
0x9f1f:	nop	
0x9f20:	mov	rdx, qword ptr [rsi + rax*8]
0x9f24:	sub	rdx, rbp
0x9f27:	mov	qword ptr [rcx + rax*8], rdx
0x9f2b:	add	rax, 1
0x9f2f:	cmp	qword ptr [rbx + 0x30], rax
0x9f33:	jg	0x9f20


0x9f20:	mov	rdx, qword ptr [rsi + rax*8]
0x9f24:	sub	rdx, rbp
0x9f27:	mov	qword ptr [rcx + rax*8], rdx
0x9f2b:	add	rax, 1
0x9f2f:	cmp	qword ptr [rbx + 0x30], rax
0x9f33:	jg	0x9f20


0xc36e:	test	eax, eax
0xc370:	je	0xc350


0xc350:	add	rbx, 1
0xc354:	cmp	rbx, qword ptr [r13 + 0x48]
0xc358:	jge	0xc418


0xc418:	mov	rsi, qword ptr [r13 + 0x40]
0xc41c:	test	rsi, rsi
0xc41f:	jle	0xc401


0x25cb:	test	rax, rax
0x25ce:	je	0x26a6


0x26a6:	test	byte ptr [rbx], 0x20
0x26a9:	jne	0x28fd


0x25d4:	mov	r14, qword ptr [rip + 0x216b8d]
0x25db:	lea	r15, [r14 - 1]
0x25df:	cmp	r15, 1
0x25e3:	jbe	0x2700


0x26af:	mov	rsi, qword ptr [rsp + 8]
0x26b4:	lea	rdi, [rip + 0x127f7]
0x26bb:	mov	ecx, 2
0x26c0:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x28fd:	mov	rdx, qword ptr [rsp + 8]
0x2902:	mov	esi, 3
0x2907:	xor	edi, edi
0x2909:	call	0x4b70


0x2700:	mov	rax, qword ptr [rip + 0x216e79]
0x2707:	movzx	eax, byte ptr [rax]
0x270a:	cmp	al, 0x6e
0x270c:	je	0x2832


0x25e9:	mov	rax, qword ptr [rip + 0x216a50]
0x25f0:	mov	r13, qword ptr [rip + 0x216b79]
0x25f7:	movzx	eax, word ptr [rax]
0x25fa:	cmp	word ptr [r13], ax
0x25ff:	jne	0x2700


0x26c0:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x26c2:	mov	rdi, rbx
0x26c5:	seta	al
0x26c8:	sbb	al, 0
0x26ca:	test	al, al
0x26cc:	je	0x28c2


0x2832:	mov	rsi, qword ptr [rip + 0x2168af]
0x2839:	mov	rdi, qword ptr [rip + 0x216918]
0x2840:	call	0x1aa0


0x2712:	jle	0x2870


0x2605:	cmp	r15, qword ptr [rip + 0x216b8c]
0x260c:	je	0x2760


0x28c2:	call	0x1940


0x26d2:	call	0x5e20


0x1aa0:	jmp	qword ptr [rip + 0x217432]


0x2870:	cmp	al, 0x61
0x2872:	jne	0x273a


0x2718:	cmp	al, 0x70
0x271a:	je	0x2800


0x2760:	mov	rsi, qword ptr [rip + 0x216a39]
0x2767:	mov	rdx, r15
0x276a:	mov	rdi, r13
0x276d:	call	0x1a80


0x2612:	cmp	r15, qword ptr [rip + 0x216b6f]
0x2619:	je	0x27b0


0x1940:	jmp	qword ptr [rip + 0x2174e2]




0x2878:	mov	rax, qword ptr [rip + 0x216799]
0x287f:	cmp	rax, 1
0x2883:	jle	0x272e


0x273a:	mov	rcx, qword ptr [rip + 0x2169a7]
0x2741:	mov	rdi, qword ptr [rip + 0x216a28]
0x2748:	mov	rdx, r14
0x274b:	mov	esi, 1
0x2750:	call	0x1b50


0x2800:	mov	rsi, qword ptr [rip + 0x216969]
0x2807:	mov	rdi, qword ptr [rip + 0x21699a]
0x280e:	xor	r9d, r9d
0x2811:	xor	ecx, ecx
0x2813:	mov	r8, r15
0x2816:	mov	rdx, r15
0x2819:	call	0x14130


0x2720:	cmp	al, 0x74
0x2722:	jne	0x273a


0x27b0:	mov	rsi, qword ptr [rip + 0x2169d9]
0x27b7:	mov	rdx, r15
0x27ba:	mov	rdi, r13
0x27bd:	call	0x1a80


0x261f:	cmp	r15, qword ptr [rip + 0x216b52]
0x2626:	jne	0x2700




0x272e:	call	0x24e0


0x2889:	cmp	r14, 1
0x288d:	ja	0x28a6


0x1b50:	jmp	qword ptr [rip + 0x2173da]


0x2724:	cmp	r14, 1
0x2728:	jbe	0x2832


0x262c:	mov	rsi, qword ptr [rip + 0x216b4d]
0x2633:	mov	rdx, r15
0x2636:	mov	rdi, r13
0x2639:	call	0x1a80


0x288f:	mov	rcx, qword ptr [rip + 0x2168aa]
0x2896:	lea	rdx, [rcx + 1]
0x289a:	cmp	rax, rdx
0x289d:	mov	qword ptr [rip + 0x21689c], rdx
0x28a4:	jne	0x2832


0x28a6:	call	0x24e0




0x281e:	cmp	rax, -2
0x2822:	je	0x293c


0x293c:	lea	rsi, [rip + 0x11c6d]
0x2943:	mov	edx, 5
0x2948:	xor	edi, edi
0x294a:	call	0x19b0


0x2828:	cmp	rax, -1
0x282c:	jne	0x272e


0x263e:	test	eax, eax
0x2640:	jne	0x2700


0x2646:	cmp	byte ptr [rip + 0x2169d3], 0
0x264d:	mov	rax, qword ptr [rip + 0x2169fc]
0x2654:	mov	qword ptr [rip + 0x216b4d], r12
0x265b:	mov	qword ptr [rip + 0x216f1e], rax
0x2662:	je	0x2672


0x2672:	mov	rdi, qword ptr [rip + 0x216a6f]
0x2679:	mov	rax, qword ptr [rdi + 0x28]
0x267d:	cmp	rax, qword ptr [rdi + 0x30]
0x2681:	jae	0x2858


0x2664:	mov	rax, qword ptr [rip + 0x2169c5]
0x266b:	mov	qword ptr [rip + 0x216ade], rax
0x2672:	mov	rdi, qword ptr [rip + 0x216a6f]
0x2679:	mov	rax, qword ptr [rdi + 0x28]
0x267d:	cmp	rax, qword ptr [rdi + 0x30]
0x2681:	jae	0x2858


0x2687:	lea	rdx, [rax + 1]
0x268b:	mov	rsi, rbx
0x268e:	mov	qword ptr [rdi + 0x28], rdx
0x2692:	mov	byte ptr [rax], 0xa
0x2695:	mov	rdi, rbp
0x2698:	call	0x3010


0x2858:	mov	esi, 0xa
0x285d:	call	0x1a20


0x1a20:	jmp	qword ptr [rip + 0x217472]




0x269d:	test	rax, rax
0x26a0:	jne	0x25d4


0x27c2:	test	eax, eax
0x27c4:	jne	0x261f


0x27ca:	mov	rax, qword ptr [rip + 0x21688f]
0x27d1:	cmp	byte ptr [rip + 0x216848], 0
0x27d8:	mov	qword ptr [rip + 0x216da1], rax
0x27df:	lea	rax, [rip + 0x216d5a]
0x27e6:	mov	qword ptr [rip + 0x2169bb], rax
0x27ed:	jne	0x2664


0x27f3:	jmp	0x2672


0x2772:	test	eax, eax
0x2774:	jne	0x2612


0x277a:	mov	rax, qword ptr [rip + 0x2168d7]
0x2781:	cmp	byte ptr [rip + 0x216898], 0
0x2788:	mov	qword ptr [rip + 0x216df1], rax
0x278f:	lea	rax, [rip + 0x216d6a]
0x2796:	mov	qword ptr [rip + 0x216a0b], rax
0x279d:	je	0x2672


0x27a3:	jmp	0x2664


0xd97c:	test	eax, eax
0xd97e:	mov	r8, qword ptr [rsp + 0x10]
0xd983:	mov	r11, qword ptr [rsp + 0x18]
0xd988:	mov	r9, qword ptr [rsp + 0x20]
0xd98d:	jne	0xde58


0xc01f:	cmp	rax, -1
0xc023:	je	0xc04f


0xc04f:	mov	rax, qword ptr [rsp + 0x30]
0xc054:	test	byte ptr [rax + 0x1a], 0x40
0xc058:	je	0xbfef


0xc025:	movzx	edx, byte ptr [rsp + 0x60]
0xc02a:	test	r13d, r13d
0xc02d:	mov	byte ptr [r12 + rdx], 1
0xc032:	mov	qword ptr [rsp + 0x10], rdx
0xc037:	je	0xc04f


0xbfef:	add	rbp, 1
0xbff3:	cmp	rbp, qword ptr [r15 + 0x28]
0xbff7:	jge	0xc0a4


0xc05a:	mov	rax, qword ptr [rsp + 8]
0xc05f:	cmp	dword ptr [rax + 0xb4], 1
0xc066:	jle	0xbfef


0xc039:	call	0x1c60


0xc0a4:	mov	ebx, r13d
0xc0a7:	mov	rbp, r12
0xc0aa:	jmp	0xbe27


0xc068:	mov	rax, qword ptr [r15]
0xc06b:	mov	edi, dword ptr [rax + rbx]
0xc06e:	call	0x1be0


0x1be0:	jmp	qword ptr [rip + 0x217392]




0x6c32:	test	eax, eax
0x6c34:	jne	0x6d28


0x6d28:	call	0x18b0


0xc03e:	mov	rdx, qword ptr [rsp + 0x10]
0xc043:	mov	rax, qword ptr [rax]
0xc046:	movsxd	rax, dword ptr [rax + rdx*4]
0xc04a:	mov	byte ptr [r12 + rax], 1
0xc04f:	mov	rax, qword ptr [rsp + 0x30]
0xc054:	test	byte ptr [rax + 0x1a], 0x40
0xc058:	je	0xbfef


0xc135:	mov	rax, qword ptr [rax]
0xc138:	lea	rdx, [r12 + r14]
0xc13c:	movsxd	rax, dword ptr [rax + rdx*4]
0xc140:	mov	byte ptr [rbp + rax], 1
0xc145:	add	r14, 1
0xc149:	cmp	r14, 0x40
0xc14d:	jne	0xc120


0xbe84:	mov	rax, qword ptr [rax]
0xbe87:	movsxd	rax, dword ptr [rax + r13*4]
0xbe8b:	mov	byte ptr [rbp + rax], 1
0xbe90:	mov	rax, qword ptr [rsp + 0x30]
0xbe95:	test	byte ptr [rax + 0x1a], 0x40
0xbe99:	je	0xbe27


0x1089d:	mov	r8d, dword ptr [rsp]
0x108a1:	test	eax, eax
0x108a3:	setne	al
0x108a6:	cmp	r8d, 0x5f
0x108aa:	sete	dl
0x108ad:	lea	ecx, [r12 - 0x27]
0x108b2:	or	eax, edx
0x108b4:	shl	eax, 6
0x108b7:	or	r13d, eax
0x108ba:	cmp	cl, 0x56
0x108bd:	mov	byte ptr [rbp + 0xa], r13b
0x108c1:	ja	0x10cc5


0x108c7:	lea	rdx, [rip + 0x5296]
0x108ce:	movzx	ecx, cl
0x108d1:	movsxd	rax, dword ptr [rdx + rcx*4]
0x108d5:	add	rax, rdx
0x108d8:	jmp	rax


0x10cc5:	mov	eax, 2
0x10cca:	jmp	0x107a4


0x998f:	test	eax, eax
0x9991:	jne	0x999c


0x9993:	cmp	ebx, 0x5f
0x9996:	jne	0x990b


0x999c:	mov	eax, 1
0x99a1:	jmp	0x9912


0x10775:	mov	ecx, dword ptr [rsp]
0x10778:	test	eax, eax
0x1077a:	setne	al
0x1077d:	cmp	ecx, 0x5f
0x10780:	sete	cl
0x10783:	or	eax, ecx
0x10785:	shl	eax, 6
0x10788:	or	r13d, eax
0x1078b:	mov	byte ptr [rbp + 0xa], r13b
0x1078f:	mov	rdx, qword ptr [rsp + 8]
0x10794:	jmp	0x1080c


0x1080c:	sub	r12d, 0xa
0x10810:	cmp	r12b, 0x73
0x10814:	ja	0x1094c


0x1081a:	lea	rcx, [rip + 0x5173]
0x10821:	movzx	r12d, r12b
0x10825:	movsxd	rax, dword ptr [rcx + r12*4]
0x10829:	add	rax, rcx
0x1082c:	jmp	rax


0x1094c:	mov	eax, 1
0x10951:	jmp	0x107a4


0x2fc0:	cmp	eax, -1
0x2fc3:	mov	r12d, eax
0x2fc6:	mov	r8, qword ptr [rsp]
0x2fca:	movzx	edx, byte ptr [rsp + 0xf]
0x2fcf:	jne	0x3001


0x2fd1:	cmp	r13, rbx
0x2fd4:	je	0x2ff0


0x3001:	mov	ecx, eax
0x3003:	jmp	0x2f54


0x2fd6:	test	byte ptr [rbp], 0x20
0x2fda:	jne	0x2ff0


0x2f54:	cmp	rbx, r8
0x2f57:	mov	rsi, rbx
0x2f5a:	jne	0x2f30


0x2fdc:	cmp	byte ptr [rbx - 1], dl
0x2fdf:	je	0x2f96


0x2fe1:	mov	r12d, r15d
0x2fe4:	mov	ecx, edx
0x2fe6:	jmp	0x2f54


0xa2e9:	mov	r12, qword ptr [rbx + 0x30]
0xa2ed:	jmp	0x9e44


0x9ffd:	mov	rdx, qword ptr [rbx + 0x30]
0xa001:	movzx	eax, byte ptr [rbx + 0x8b]
0xa008:	mov	qword ptr [rbx + 0x38], rdx
0xa00c:	test	al, al
0xa00e:	je	0x9c8a


0x71ed:	mov	qword ptr [rbx + 0xc0], rbp
0x71f4:	jmp	0x71a4


0x10cd5:	mov	rsi, qword ptr [rax]
0x10cd8:	movzx	edx, r12b
0x10cdc:	movzx	eax, word ptr [rsi + rdx*2]
0x10ce0:	shr	ax, 3
0x10ce4:	and	eax, 1
0x10ce7:	cmp	r12b, 0x5f
0x10ceb:	jmp	0x108aa


0x108aa:	sete	dl
0x108ad:	lea	ecx, [r12 - 0x27]
0x108b2:	or	eax, edx
0x108b4:	shl	eax, 6
0x108b7:	or	r13d, eax
0x108ba:	cmp	cl, 0x56
0x108bd:	mov	byte ptr [rbp + 0xa], r13b
0x108c1:	ja	0x10cc5


0x107e3:	mov	rsi, qword ptr [rax]
0x107e6:	movzx	ecx, r12b
0x107ea:	movzx	eax, word ptr [rsi + rcx*2]
0x107ee:	shr	ax, 3
0x107f2:	and	eax, 1
0x107f5:	cmp	r12b, 0x5f
0x107f9:	sete	cl
0x107fc:	or	eax, ecx
0x107fe:	shl	eax, 6
0x10801:	or	r13d, eax
0x10804:	mov	byte ptr [rbp + 0xa], r13b
0x10808:	mov	rdx, qword ptr [rsp]
0x1080c:	sub	r12d, 0xa
0x10810:	cmp	r12b, 0x73
0x10814:	ja	0x1094c


0x28f1:	test	rax, rax
0x28f4:	mov	rbx, rax
0x28f7:	jne	0x259f


0x259f:	lea	rbp, [rip + 0x216bba]
0x25a6:	lea	r12, [rip + 0x216f13]
0x25ad:	mov	esi, 2
0x25b2:	mov	rdi, rbx
0x25b5:	call	0x2ec0


0xb34c:	lea	rdi, [rip + 0xa560]
0xb353:	mov	qword ptr [r13], rax
0xb357:	mov	ecx, 6
0xb35c:	mov	rsi, r12
0xb35f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb35f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb361:	seta	al
0xb364:	sbb	al, 0
0xb366:	test	al, al
0xb368:	je	0xb3d8


0xb3d8:	call	0x1c70


0xb36a:	lea	rdi, [rip + 0xa548]
0xb371:	mov	ecx, 6
0xb376:	mov	rsi, r12
0xb379:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb379:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb37b:	seta	al
0xb37e:	sbb	al, 0
0xb380:	test	al, al
0xb382:	jne	0xb488


0xb388:	call	0x1c70


0xb488:	lea	rdi, [rip + 0xa41e]
0xb48f:	mov	ecx, 6
0xb494:	mov	rsi, r12
0xb497:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb497:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb499:	seta	al
0xb49c:	sbb	al, 0
0xb49e:	test	al, al
0xb4a0:	je	0xb50a


0xb50a:	call	0x1c70


0xb4a2:	lea	rdi, [rip + 0xa416]
0xb4a9:	mov	ecx, 6
0xb4ae:	mov	rsi, r12
0xb4b1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb4b1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb4b3:	seta	al
0xb4b6:	sbb	al, 0
0xb4b8:	test	al, al
0xb4ba:	jne	0xb552


0xb4c0:	call	0x1c70


0xb552:	lea	rdi, [rip + 0xa348]
0xb559:	mov	ecx, 6
0xb55e:	mov	rsi, r12
0xb561:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb561:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb563:	seta	al
0xb566:	sbb	al, 0
0xb568:	test	al, al
0xb56a:	je	0xb613


0xb613:	call	0x1c70


0xb570:	lea	rdi, [rip + 0xa367]
0xb577:	mov	ecx, 6
0xb57c:	mov	rsi, r12
0xb57f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb57f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb581:	seta	al
0xb584:	sbb	al, 0
0xb586:	test	al, al
0xb588:	jne	0xb693


0xb58e:	call	0x1c70


0xb693:	lea	rdi, [rip + 0xa22b]
0xb69a:	mov	ecx, 6
0xb69f:	mov	rsi, r12
0xb6a2:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb6a2:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb6a4:	seta	al
0xb6a7:	sbb	al, 0
0xb6a9:	test	al, al
0xb6ab:	jne	0xb72c


0xb6ad:	call	0x1c70


0xb72c:	lea	rdi, [rip + 0xa174]
0xb733:	mov	ecx, 6
0xb738:	mov	rsi, r12
0xb73b:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb73b:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb73d:	seta	al
0xb740:	sbb	al, 0
0xb742:	test	al, al
0xb744:	jne	0xb792


0xb746:	call	0x1c70


0xb792:	lea	rdi, [rip + 0xa132]
0xb799:	mov	ecx, 6
0xb79e:	mov	rsi, r12
0xb7a1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb7a1:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb7a3:	seta	al
0xb7a6:	sbb	al, 0
0xb7a8:	test	al, al
0xb7aa:	jne	0xb89e


0xb7b0:	call	0x1c70


0xb89e:	lea	rsi, [rip + 0xa02c]
0xb8a5:	mov	rdi, r12
0xb8a8:	call	0x1ac0


0x1ac0:	jmp	qword ptr [rip + 0x217422]




0xb7b5:	xor	ecx, ecx
0xb7b7:	test	rbp, rbp
0xb7ba:	mov	rdx, qword ptr [rax]
0xb7bd:	mov	esi, 1
0xb7c2:	jne	0xb864


0xb7c8:	test	byte ptr [rdx + rcx*2], 1
0xb7cc:	je	0xb7df


0xb864:	xor	eax, eax
0xb866:	mov	edi, 1
0xb86b:	test	byte ptr [rdx + rax*2], 1
0xb86f:	je	0xb88d


0xb7df:	add	rcx, 1
0xb7e3:	cmp	rcx, 0x100
0xb7ea:	jne	0xb7c8


0xb7ce:	mov	rax, rcx
0xb7d1:	mov	rdi, rsi
0xb7d4:	sar	rax, 6
0xb7d8:	shl	rdi, cl
0xb7db:	or	qword ptr [rbx + rax*8], rdi
0xb7df:	add	rcx, 1
0xb7e3:	cmp	rcx, 0x100
0xb7ea:	jne	0xb7c8


0xb88d:	add	rax, 1
0xb891:	cmp	rax, 0x100
0xb897:	jne	0xb86b


0xb871:	movzx	ecx, byte ptr [rbp + rax]
0xb876:	mov	r14, rdi
0xb879:	mov	rsi, rcx
0xb87c:	and	ecx, 0x3f
0xb87f:	shr	rsi, 3
0xb883:	shl	r14, cl
0xb886:	and	esi, 0x18
0xb889:	or	qword ptr [rbx + rsi], r14
0xb88d:	add	rax, 1
0xb891:	cmp	rax, 0x100
0xb897:	jne	0xb86b


0xb7ec:	jmp	0xb3c4


0xb899:	jmp	0xb3c4


0xb86b:	test	byte ptr [rdx + rax*2], 1
0xb86f:	je	0xb88d


0xb3c4:	xor	eax, eax
0xb3c6:	add	rsp, 0x10
0xb3ca:	pop	rbx
0xb3cb:	pop	rbp
0xb3cc:	pop	r12
0xb3ce:	pop	r13
0xb3d0:	pop	r14
0xb3d2:	ret	


0xb74b:	xor	ecx, ecx
0xb74d:	test	rbp, rbp
0xb750:	mov	rax, qword ptr [rax]
0xb753:	mov	edi, 1
0xb758:	jne	0xba80


0xb75e:	test	byte ptr [rax + rcx*2 + 1], 1
0xb763:	je	0xb776


0xba80:	xor	edx, edx
0xba82:	test	byte ptr [rax + rdx*2 + 1], 1
0xba87:	je	0xbaa5


0xb776:	add	rcx, 1
0xb77a:	cmp	rcx, 0x100
0xb781:	jne	0xb75e


0xb765:	mov	rdx, rcx
0xb768:	mov	rsi, rdi
0xb76b:	sar	rdx, 6
0xb76f:	shl	rsi, cl
0xb772:	or	qword ptr [rbx + rdx*8], rsi
0xb776:	add	rcx, 1
0xb77a:	cmp	rcx, 0x100
0xb781:	jne	0xb75e


0xbaa5:	add	rdx, 1
0xbaa9:	cmp	rdx, 0x100
0xbab0:	jne	0xba82


0xba89:	movzx	ecx, byte ptr [rbp + rdx]
0xba8e:	mov	r9, rdi
0xba91:	mov	rsi, rcx
0xba94:	and	ecx, 0x3f
0xba97:	shr	rsi, 3
0xba9b:	shl	r9, cl
0xba9e:	and	esi, 0x18
0xbaa1:	or	qword ptr [rbx + rsi], r9
0xbaa5:	add	rdx, 1
0xbaa9:	cmp	rdx, 0x100
0xbab0:	jne	0xba82


0xb783:	jmp	0xb3c4


0xbab2:	jmp	0xb3c4


0xba82:	test	byte ptr [rax + rdx*2 + 1], 1
0xba87:	je	0xbaa5


0xb6b2:	xor	ecx, ecx
0xb6b4:	test	rbp, rbp
0xb6b7:	mov	rdx, qword ptr [rax]
0xb6ba:	mov	edi, 1
0xb6bf:	jne	0xbab7


0xbab7:	xor	eax, eax
0xbab9:	test	byte ptr [rdx + rax*2 + 1], 0x40
0xbabe:	je	0xbadc


0xb6e0:	add	rcx, 1
0xb6e4:	cmp	rcx, 0x100
0xb6eb:	jne	0xb6c8


0xb6cf:	mov	rax, rcx
0xb6d2:	mov	rsi, rdi
0xb6d5:	sar	rax, 6
0xb6d9:	shl	rsi, cl
0xb6dc:	or	qword ptr [rbx + rax*8], rsi
0xb6e0:	add	rcx, 1
0xb6e4:	cmp	rcx, 0x100
0xb6eb:	jne	0xb6c8


0xbadc:	add	rax, 1
0xbae0:	cmp	rax, 0x100
0xbae6:	jne	0xbab9


0xbac0:	movzx	ecx, byte ptr [rbp + rax]
0xbac5:	mov	r14, rdi
0xbac8:	mov	rsi, rcx
0xbacb:	and	ecx, 0x3f
0xbace:	shr	rsi, 3
0xbad2:	shl	r14, cl
0xbad5:	and	esi, 0x18
0xbad8:	or	qword ptr [rbx + rsi], r14
0xbadc:	add	rax, 1
0xbae0:	cmp	rax, 0x100
0xbae6:	jne	0xbab9


0xb6ed:	jmp	0xb3c4


0xb6c8:	test	byte ptr [rdx + rcx*2 + 1], 0x40
0xb6cd:	je	0xb6e0


0xbae8:	jmp	0xb3c4


0xbab9:	test	byte ptr [rdx + rax*2 + 1], 0x40
0xbabe:	je	0xbadc


0xb593:	xor	ecx, ecx
0xb595:	test	rbp, rbp
0xb598:	mov	rdx, qword ptr [rax]
0xb59b:	mov	edi, 1
0xb5a0:	jne	0xba4a


0xba4a:	xor	eax, eax
0xba4c:	test	byte ptr [rdx + rax*2 + 1], 8
0xba51:	je	0xba6f


0xb5c8:	add	rcx, 1
0xb5cc:	cmp	rcx, 0x100
0xb5d3:	jne	0xb5b0


0xb5b7:	mov	rax, rcx
0xb5ba:	mov	rsi, rdi
0xb5bd:	sar	rax, 6
0xb5c1:	shl	rsi, cl
0xb5c4:	or	qword ptr [rbx + rax*8], rsi
0xb5c8:	add	rcx, 1
0xb5cc:	cmp	rcx, 0x100
0xb5d3:	jne	0xb5b0


0xba6f:	add	rax, 1
0xba73:	cmp	rax, 0x100
0xba79:	jne	0xba4c


0xba53:	movzx	ecx, byte ptr [rbp + rax]
0xba58:	mov	r14, rdi
0xba5b:	mov	rsi, rcx
0xba5e:	and	ecx, 0x3f
0xba61:	shr	rsi, 3
0xba65:	shl	r14, cl
0xba68:	and	esi, 0x18
0xba6b:	or	qword ptr [rbx + rsi], r14
0xba6f:	add	rax, 1
0xba73:	cmp	rax, 0x100
0xba79:	jne	0xba4c


0xb5d5:	jmp	0xb3c4


0xb5b0:	test	byte ptr [rdx + rcx*2 + 1], 8
0xb5b5:	je	0xb5c8


0xba7b:	jmp	0xb3c4


0xba4c:	test	byte ptr [rdx + rax*2 + 1], 8
0xba51:	je	0xba6f


0xb618:	xor	ecx, ecx
0xb61a:	test	rbp, rbp
0xb61d:	mov	rdx, qword ptr [rax]
0xb620:	mov	edi, 1
0xb625:	jne	0xb7f8


0xb7f8:	xor	eax, eax
0xb7fa:	test	byte ptr [rdx + rax*2 + 1], 4
0xb7ff:	je	0xb81d


0xb648:	add	rcx, 1
0xb64c:	cmp	rcx, 0x100
0xb653:	jne	0xb630


0xb637:	mov	rax, rcx
0xb63a:	mov	rsi, rdi
0xb63d:	sar	rax, 6
0xb641:	shl	rsi, cl
0xb644:	or	qword ptr [rbx + rax*8], rsi
0xb648:	add	rcx, 1
0xb64c:	cmp	rcx, 0x100
0xb653:	jne	0xb630


0xb81d:	add	rax, 1
0xb821:	cmp	rax, 0x100
0xb827:	jne	0xb7fa


0xb801:	movzx	ecx, byte ptr [rbp + rax]
0xb806:	mov	r9, rdi
0xb809:	mov	rsi, rcx
0xb80c:	and	ecx, 0x3f
0xb80f:	shr	rsi, 3
0xb813:	shl	r9, cl
0xb816:	and	esi, 0x18
0xb819:	or	qword ptr [rbx + rsi], r9
0xb81d:	add	rax, 1
0xb821:	cmp	rax, 0x100
0xb827:	jne	0xb7fa


0xb655:	jmp	0xb3c4


0xb630:	test	byte ptr [rdx + rcx*2 + 1], 4
0xb635:	je	0xb648


0xb829:	jmp	0xb3c4


0xb7fa:	test	byte ptr [rdx + rax*2 + 1], 4
0xb7ff:	je	0xb81d


0xb4c5:	xor	ecx, ecx
0xb4c7:	test	rbp, rbp
0xb4ca:	mov	rdx, qword ptr [rax]
0xb4cd:	mov	edi, 1
0xb4d2:	jne	0xb82e


0xb82e:	xor	eax, eax
0xb830:	test	byte ptr [rdx + rax*2 + 1], 0x20
0xb835:	je	0xb853


0xb4f8:	add	rcx, 1
0xb4fc:	cmp	rcx, 0x100
0xb503:	jne	0xb4e0


0xb4e7:	mov	rax, rcx
0xb4ea:	mov	rsi, rdi
0xb4ed:	sar	rax, 6
0xb4f1:	shl	rsi, cl
0xb4f4:	or	qword ptr [rbx + rax*8], rsi
0xb4f8:	add	rcx, 1
0xb4fc:	cmp	rcx, 0x100
0xb503:	jne	0xb4e0


0xb853:	add	rax, 1
0xb857:	cmp	rax, 0x100
0xb85d:	jne	0xb830


0xb837:	movzx	ecx, byte ptr [rbp + rax]
0xb83c:	mov	r9, rdi
0xb83f:	mov	rsi, rcx
0xb842:	and	ecx, 0x3f
0xb845:	shr	rsi, 3
0xb849:	shl	r9, cl
0xb84c:	and	esi, 0x18
0xb84f:	or	qword ptr [rbx + rsi], r9
0xb853:	add	rax, 1
0xb857:	cmp	rax, 0x100
0xb85d:	jne	0xb830


0xb505:	jmp	0xb3c4


0xb4e0:	test	byte ptr [rdx + rcx*2 + 1], 0x20
0xb4e5:	je	0xb4f8


0xb85f:	jmp	0xb3c4


0xb830:	test	byte ptr [rdx + rax*2 + 1], 0x20
0xb835:	je	0xb853


0xb50f:	xor	ecx, ecx
0xb511:	test	rbp, rbp
0xb514:	mov	rdx, qword ptr [rax]
0xb517:	mov	edi, 1
0xb51c:	jne	0xb6f2


0xb6f2:	xor	eax, eax
0xb6f4:	nop	dword ptr [rax]
0xb6f8:	test	byte ptr [rdx + rax*2 + 1], 2
0xb6fd:	je	0xb71b


0xb540:	add	rcx, 1
0xb544:	cmp	rcx, 0x100
0xb54b:	jne	0xb528


0xb52f:	mov	rax, rcx
0xb532:	mov	rsi, rdi
0xb535:	sar	rax, 6
0xb539:	shl	rsi, cl
0xb53c:	or	qword ptr [rbx + rax*8], rsi
0xb540:	add	rcx, 1
0xb544:	cmp	rcx, 0x100
0xb54b:	jne	0xb528


0xb71b:	add	rax, 1
0xb71f:	cmp	rax, 0x100
0xb725:	jne	0xb6f8


0xb6ff:	movzx	ecx, byte ptr [rbp + rax]
0xb704:	mov	r14, rdi
0xb707:	mov	rsi, rcx
0xb70a:	and	ecx, 0x3f
0xb70d:	shr	rsi, 3
0xb711:	shl	r14, cl
0xb714:	and	esi, 0x18
0xb717:	or	qword ptr [rbx + rsi], r14
0xb71b:	add	rax, 1
0xb71f:	cmp	rax, 0x100
0xb725:	jne	0xb6f8


0xb54d:	jmp	0xb3c4


0xb528:	test	byte ptr [rdx + rcx*2 + 1], 2
0xb52d:	je	0xb540


0xb727:	jmp	0xb3c4


0xb6f8:	test	byte ptr [rdx + rax*2 + 1], 2
0xb6fd:	je	0xb71b


0xb38d:	xor	ecx, ecx
0xb38f:	test	rbp, rbp
0xb392:	mov	rdx, qword ptr [rax]
0xb395:	mov	edi, 1
0xb39a:	jne	0xb65a


0xb3a0:	test	byte ptr [rdx + rcx*2], 2
0xb3a4:	je	0xb3b7


0xb65a:	xor	eax, eax
0xb65c:	nop	dword ptr [rax]
0xb660:	test	byte ptr [rdx + rax*2], 2
0xb664:	je	0xb682


0xb3b7:	add	rcx, 1
0xb3bb:	cmp	rcx, 0x100
0xb3c2:	jne	0xb3a0


0xb3a6:	mov	rax, rcx
0xb3a9:	mov	rsi, rdi
0xb3ac:	sar	rax, 6
0xb3b0:	shl	rsi, cl
0xb3b3:	or	qword ptr [rbx + rax*8], rsi
0xb3b7:	add	rcx, 1
0xb3bb:	cmp	rcx, 0x100
0xb3c2:	jne	0xb3a0


0xb682:	add	rax, 1
0xb686:	cmp	rax, 0x100
0xb68c:	jne	0xb660


0xb666:	movzx	ecx, byte ptr [rbp + rax]
0xb66b:	mov	r11, rdi
0xb66e:	mov	rsi, rcx
0xb671:	and	ecx, 0x3f
0xb674:	shr	rsi, 3
0xb678:	shl	r11, cl
0xb67b:	and	esi, 0x18
0xb67e:	or	qword ptr [rbx + rsi], r11
0xb682:	add	rax, 1
0xb686:	cmp	rax, 0x100
0xb68c:	jne	0xb660


0xb68e:	jmp	0xb3c4


0xb660:	test	byte ptr [rdx + rax*2], 2
0xb664:	je	0xb682


0xb3dd:	xor	ecx, ecx
0xb3df:	test	rbp, rbp
0xb3e2:	mov	rdx, qword ptr [rax]
0xb3e5:	mov	edi, 1
0xb3ea:	jne	0xb5da


0xb3f0:	test	byte ptr [rdx + rcx*2], 8
0xb3f4:	je	0xb407


0xb5da:	xor	eax, eax
0xb5dc:	nop	dword ptr [rax]
0xb5e0:	test	byte ptr [rdx + rax*2], 8
0xb5e4:	je	0xb602


0xb407:	add	rcx, 1
0xb40b:	cmp	rcx, 0x100
0xb412:	jne	0xb3f0


0xb3f6:	mov	rax, rcx
0xb3f9:	mov	rsi, rdi
0xb3fc:	sar	rax, 6
0xb400:	shl	rsi, cl
0xb403:	or	qword ptr [rbx + rax*8], rsi
0xb407:	add	rcx, 1
0xb40b:	cmp	rcx, 0x100
0xb412:	jne	0xb3f0


0xb602:	add	rax, 1
0xb606:	cmp	rax, 0x100
0xb60c:	jne	0xb5e0


0xb5e6:	movzx	ecx, byte ptr [rbp + rax]
0xb5eb:	mov	r10, rdi
0xb5ee:	mov	rsi, rcx
0xb5f1:	and	ecx, 0x3f
0xb5f4:	shr	rsi, 3
0xb5f8:	shl	r10, cl
0xb5fb:	and	esi, 0x18
0xb5fe:	or	qword ptr [rbx + rsi], r10
0xb602:	add	rax, 1
0xb606:	cmp	rax, 0x100
0xb60c:	jne	0xb5e0


0xb414:	jmp	0xb3c4


0xb60e:	jmp	0xb3c4


0xb5e0:	test	byte ptr [rdx + rax*2], 8
0xb5e4:	je	0xb602


0x3043:	test	rax, rax
0x3046:	je	0x309d


0x309d:	mov	qword ptr [rip + 0x2164f4], rbx
0x30a4:	mov	qword ptr [rip + 0x21605d], rbx
0x30ab:	pop	rbx
0x30ac:	ret	


0x3048:	lea	r8, [rax + 1]
0x304c:	mov	rdx, r8
0x304f:	sub	rdx, rbx
0x3052:	cmp	rdx, 6
0x3056:	jle	0x309d


0x3058:	lea	rsi, [rax - 6]
0x305c:	lea	rdi, [rip + 0x11e45]
0x3063:	mov	ecx, 7
0x3068:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3068:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x306a:	seta	dl
0x306d:	sbb	dl, 0
0x3070:	test	dl, dl
0x3072:	jne	0x309d


0x3074:	lea	rdi, [rip + 0x11e35]
0x307b:	mov	ecx, 3
0x3080:	mov	rsi, r8
0x3083:	mov	rbx, r8
0x3086:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3086:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3088:	seta	dl
0x308b:	sbb	dl, 0
0x308e:	test	dl, dl
0x3090:	jne	0x309d


0x3092:	lea	rbx, [rax + 4]
0x3096:	mov	qword ptr [rip + 0x216043], rbx
0x309d:	mov	qword ptr [rip + 0x2164f4], rbx
0x30a4:	mov	qword ptr [rip + 0x21605d], rbx
0x30ab:	pop	rbx
0x30ac:	ret	


0x30ca:	call	0x18e0


0x4d9c:	lea	rsi, [rip + 0x105f8]
0x4da3:	xor	edi, edi
0x4da5:	mov	edx, 5
0x4daa:	call	0x19b0


0x4eb1:	jmp	0x4d9c


0x5eae:	test	eax, eax
0x5eb0:	je	0x5eba


0x5eb2:	test	dword ptr [rbx], 0x100
0x5eb8:	jne	0x5ec8


0x5ec8:	mov	rdi, rbx
0x5ecb:	mov	edx, 1
0x5ed0:	xor	esi, esi
0x5ed2:	call	0x5ee0


0x6d2d:	mov	rax, qword ptr [rax]
0x6d30:	mov	rdx, qword ptr [r14 + 8]
0x6d34:	mov	eax, dword ptr [rax + r12*4]
0x6d38:	mov	byte ptr [rdx + r15], al
0x6d3c:	mov	rdx, qword ptr [r14 + 8]
0x6d40:	mov	rax, qword ptr [r14 + 0x10]
0x6d44:	movzx	edx, byte ptr [rdx + r15]
0x6d49:	mov	dword ptr [rax + r15*4], edx
0x6d4d:	add	r15, 1
0x6d51:	jmp	0x6cfa


0x6cfa:	cmp	rbx, r15
0x6cfd:	jg	0x6c10


0x6d03:	jmp	0x6d78


0x6c10:	mov	rbp, qword ptr [r14 + 0x28]
0x6c14:	mov	r13, r15
0x6c17:	add	rbp, r15
0x6c1a:	add	rbp, qword ptr [r14]
0x6c1d:	movzx	r12d, byte ptr [rbp]
0x6c22:	test	r12b, 0x80
0x6c26:	jne	0x6c3a


0x67ff:	mov	rsi, qword ptr [rax]
0x6802:	mov	rcx, qword ptr [rbp + 8]
0x6806:	mov	edx, dword ptr [rsi + rdx*4]
0x6809:	mov	byte ptr [rcx + rbx], dl
0x680c:	add	rbx, 1
0x6810:	cmp	r12, rbx
0x6813:	jne	0x67e8


0x6828:	movzx	edx, byte ptr [rcx + rdx]
0x682c:	jmp	0x67ff


0x67e8:	mov	rdx, qword ptr [rbp]
0x67ec:	mov	rcx, qword ptr [rbp + 0x78]
0x67f0:	add	rdx, rbx
0x67f3:	add	rdx, qword ptr [rbp + 0x28]
0x67f7:	test	rcx, rcx
0x67fa:	movzx	edx, byte ptr [rdx]
0x67fd:	jne	0x6828


0x874a:	xor	eax, eax
0x874c:	add	rsp, 8
0x8750:	pop	rbx
0x8751:	pop	rbp
0x8752:	pop	r12
0x8754:	pop	r13
0x8756:	ret	


0x816a:	xor	eax, eax
0x816c:	jmp	0x80ec


0x80ec:	pop	rbx
0x80ed:	pop	rbp
0x80ee:	pop	r12
0x80f0:	ret	


0x8145:	jmp	0x8099


0x81cf:	jmp	0x80ea


0xcd3d:	lea	rax, [rbp - 0x70]
0xcd41:	mov	rcx, qword ptr [r13]
0xcd45:	mov	qword ptr [rbp - 0xa8], rax
0xcd4c:	add	rax, 0x10
0xcd50:	mov	qword ptr [rbp - 0x78], rcx
0xcd54:	mov	qword ptr [rbp - 0xc8], rax
0xcd5b:	lea	rax, [rbp - 0x78]
0xcd5f:	mov	qword ptr [rbp - 0xb0], rax
0xcd66:	jmp	0xce49


0xce49:	mov	rax, qword ptr [r13 + 8]
0xce4d:	cmp	rax, rcx
0xce50:	jl	0xd340


0xd340:	mov	rdi, qword ptr [rbp - 0x60]
0xd344:	call	0x18d0


0xce56:	mov	rdi, qword ptr [rbp - 0x90]
0xce5d:	mov	r9, rbx
0xce60:	mov	r15, rbx
0xce63:	shl	r9, 4
0xce67:	mov	rdx, qword ptr [rdi]
0xce6a:	add	rdx, r9
0xce6d:	movzx	esi, byte ptr [rdx + 8]
0xce71:	cmp	esi, 8
0xce74:	jne	0xcd70


0xce7a:	mov	rdx, qword ptr [rdx]
0xce7d:	add	rdx, 1
0xce81:	cmp	qword ptr [rbp - 0x98], rdx
0xce88:	jle	0xcd79


0xcd70:	cmp	esi, 9
0xcd73:	je	0xcf60


0xcd79:	cmp	rax, rcx
0xcd7c:	jne	0xcd8c


0xce8e:	shl	rdx, 4
0xce92:	add	rdx, r13
0xce95:	mov	qword ptr [rdx + 8], -1
0xce9d:	mov	qword ptr [rdx], rcx
0xcea0:	mov	rax, qword ptr [r13 + 8]
0xcea4:	jmp	0xcd79


0xcf60:	mov	rdi, qword ptr [rdx]
0xcf63:	lea	rsi, [rdi + 1]
0xcf67:	cmp	qword ptr [rbp - 0x98], rsi
0xcf6e:	jle	0xcd79


0xcd7e:	cmp	qword ptr [r12 + 0xb0], rbx
0xcd86:	je	0xd160


0xcd8c:	mov	r14, qword ptr [r12 + 0x98]
0xcd94:	mov	rdi, qword ptr [r14]
0xcd97:	lea	rsi, [rdi + r9]
0xcd9b:	movzx	eax, byte ptr [rsi + 8]
0xcd9f:	test	al, 8
0xcda1:	jne	0xceb0


0xcf74:	shl	rsi, 4
0xcf78:	lea	rax, [r13 + rsi]
0xcf7d:	cmp	qword ptr [rax], rcx
0xcf80:	jl	0xd300


0xd160:	cmp	qword ptr [rbp - 0x88], 0
0xd168:	je	0xd49c


0xcda7:	test	byte ptr [rsi + 0xa], 0x10
0xcdab:	jne	0xcfb0


0xceb0:	mov	rax, qword ptr [r12 + 0xb8]
0xceb8:	mov	rdx, qword ptr [rbp - 0x78]
0xcebc:	mov	rsi, rbx
0xcebf:	mov	rdi, qword ptr [rbp - 0xa8]
0xcec6:	mov	r9, qword ptr [rax + rdx*8]
0xceca:	mov	rax, qword ptr [r14 + 0x28]
0xcece:	lea	rdx, [rbx + rbx*2]
0xced2:	mov	qword ptr [rbp - 0xa0], r9
0xced9:	lea	r15, [rax + rdx*8]
0xcedd:	call	0x65a0


0xd300:	mov	rdx, qword ptr [rbp - 0xb8]
0xd307:	mov	rdi, qword ptr [rbp - 0xc0]
0xd30e:	mov	rsi, r13
0xd311:	mov	qword ptr [rax + 8], rcx
0xd315:	mov	qword ptr [rbp - 0xd8], r9
0xd31c:	mov	qword ptr [rbp - 0xa0], rcx
0xd323:	call	0x1ad0


0xcf86:	test	byte ptr [rdx + 0xa], 8
0xcf8a:	je	0xcf9e


0xd49c:	mov	rdi, qword ptr [rbp - 0x60]
0xd4a0:	call	0x18d0


0xd16e:	mov	rcx, qword ptr [rbp - 0x98]
0xd175:	test	rcx, rcx
0xd178:	je	0xd19a


0xcdb1:	cmp	al, 4
0xcdb3:	je	0xcff0


0xcfb0:	mov	r8, qword ptr [rbp - 0x78]
0xcfb4:	lea	rsi, [r14 + 0xd8]
0xcfbb:	mov	rcx, r12
0xcfbe:	mov	rdx, rbx
0xcfc1:	mov	qword ptr [rbp - 0xa0], r9
0xcfc8:	call	0xc290


0xcf9e:	mov	qword ptr [rax + 8], rcx
0xcfa2:	mov	rax, qword ptr [r13 + 8]
0xcfa6:	jmp	0xcd79


0xcf8c:	mov	rdi, qword ptr [rbp - 0xc0]
0xcf93:	cmp	qword ptr [rdi + rsi], -1
0xcf98:	jne	0xd38b


0xd19a:	mov	rdi, qword ptr [rbp - 0x60]
0xd19e:	call	0x18d0


0xd17a:	mov	rax, r13
0xd17d:	xor	edx, edx
0xd17f:	nop	
0xd180:	cmp	qword ptr [rax], 0
0xd184:	js	0xd18d


0xcff0:	mov	rax, qword ptr [rsi]
0xcff3:	add	rax, 1
0xcff7:	shl	rax, 4
0xcffb:	add	rax, r13
0xcffe:	mov	rdx, qword ptr [rax + 8]
0xd002:	mov	rdi, qword ptr [rax]
0xd005:	mov	rcx, rdx
0xd008:	sub	rcx, rdi
0xd00b:	cmp	qword ptr [rbp - 0x88], 0
0xd013:	je	0xd1c8


0xcdb9:	mov	rcx, qword ptr [rbp - 0x78]
0xcdbd:	mov	rdx, rcx
0xcdc0:	mov	rdi, r12
0xcdc3:	mov	qword ptr [rbp - 0xa0], rcx
0xcdca:	call	0x99b0


0xd38b:	mov	rdx, qword ptr [rbp - 0xb8]
0xd392:	mov	rsi, rdi
0xd395:	mov	rdi, r13
0xd398:	mov	qword ptr [rbp - 0xd8], rcx
0xd39f:	mov	qword ptr [rbp - 0xa0], r9
0xd3a6:	call	0x1ad0


0xd18d:	add	rdx, 1
0xd191:	add	rax, 0x10
0xd195:	cmp	rcx, rdx
0xd198:	jne	0xd180


0xd186:	cmp	qword ptr [rax + 8], -1
0xd18b:	je	0xd1e0


0xd1c8:	test	rcx, rcx
0xd1cb:	je	0xd280


0xd019:	cmp	rdi, -1
0xd01d:	je	0xd236


0xd180:	cmp	qword ptr [rax], 0
0xd184:	js	0xd18d


0xd1e0:	mov	rdi, qword ptr [rbp - 0x88]
0xd1e7:	mov	r9, qword ptr [rbp - 0xa8]
0xd1ee:	mov	r8, r13
0xd1f1:	mov	rcx, qword ptr [rbp - 0x98]
0xd1f8:	mov	rdx, qword ptr [rbp - 0xb0]
0xd1ff:	lea	rsi, [rdi + 0x10]
0xd203:	call	0xb1f0


0xd280:	mov	rdi, qword ptr [rbp - 0xa8]
0xd287:	mov	rsi, rbx
0xd28a:	mov	qword ptr [rbp - 0xa0], r9
0xd291:	call	0x65a0


0xd1d1:	mov	r15, qword ptr [rbp - 0x78]
0xd1d5:	jmp	0xd075


0xd236:	mov	rdi, qword ptr [rbp - 0x88]
0xd23d:	mov	rcx, qword ptr [rbp - 0x98]
0xd244:	lea	rdx, [rbp - 0x78]
0xd248:	mov	r9, qword ptr [rbp - 0xa8]
0xd24f:	mov	r8, r13
0xd252:	lea	rsi, [rdi + 0x10]
0xd256:	call	0xb1f0


0xd023:	cmp	rdx, -1
0xd027:	je	0xd236


0xd075:	mov	rax, qword ptr [r14 + 0x18]
0xd079:	lea	rdx, [r15 + rcx]
0xd07d:	mov	rbx, qword ptr [rax + rbx*8]
0xd081:	jmp	0xcdea


0xd02d:	test	rcx, rcx
0xd030:	je	0xd280


0xcdea:	cmp	qword ptr [rbp - 0x88], 0
0xcdf2:	mov	qword ptr [rbp - 0x78], rdx
0xcdf6:	je	0xce34


0xd036:	mov	r15, qword ptr [rbp - 0x78]
0xd03a:	mov	rdx, qword ptr [r12 + 0x30]
0xd03f:	mov	rax, qword ptr [r12 + 8]
0xd044:	sub	rdx, r15
0xd047:	cmp	rcx, rdx
0xd04a:	jg	0xd236


0xce34:	mov	qword ptr [rbp - 0x68], 0
0xce3c:	test	rbx, rbx
0xce3f:	js	0xd21a


0xcdf8:	cmp	rdx, qword ptr [r12 + 0xa8]
0xce00:	jg	0xd236


0xd050:	lea	rsi, [rax + r15]
0xd054:	add	rdi, rax
0xd057:	mov	rdx, rcx
0xd05a:	mov	qword ptr [rbp - 0xa0], rcx
0xd061:	call	0x1a80


0xd21a:	cmp	rbx, -2
0xd21e:	je	0xd3c8


0xce45:	mov	rcx, qword ptr [rbp - 0x78]
0xce49:	mov	rax, qword ptr [r13 + 8]
0xce4d:	cmp	rax, rcx
0xce50:	jl	0xd340


0xce06:	mov	rax, qword ptr [r12 + 0xb8]
0xce0e:	mov	rax, qword ptr [rax + rdx*8]
0xce12:	test	rax, rax
0xce15:	je	0xd236


0xd3c8:	mov	rdi, qword ptr [rbp - 0x60]
0xd3cc:	call	0x18d0


0xce1b:	mov	rdi, qword ptr [rax + 0x10]
0xce1f:	lea	rsi, [rax + 0x18]
0xce23:	mov	rdx, rbx
0xce26:	call	0x7ae0


0xd4ec:	mov	rdi, qword ptr [rbp - 0x60]
0xd4f0:	call	0x18d0


0xce2b:	test	rax, rax
0xce2e:	je	0xd236


0xd066:	test	eax, eax
0xd068:	mov	rcx, qword ptr [rbp - 0xa0]
0xd06f:	jne	0xd236


0xcdcf:	test	al, al
0xcdd1:	mov	rcx, qword ptr [rbp - 0xa0]
0xcdd8:	je	0xd228


0xd228:	cmp	qword ptr [rbp - 0x88], 0
0xd230:	je	0xd4ec


0xcdde:	mov	rax, qword ptr [r14 + 0x18]
0xcde2:	lea	rdx, [rcx + 1]
0xcde6:	mov	rbx, qword ptr [rax + r15*8]
0xcdea:	cmp	qword ptr [rbp - 0x88], 0
0xcdf2:	mov	qword ptr [rbp - 0x78], rdx
0xcdf6:	je	0xce34


0xcfcd:	movsxd	rcx, eax
0xcfd0:	test	rcx, rcx
0xcfd3:	jne	0xd1d1


0xcfd9:	mov	r9, qword ptr [rbp - 0xa0]
0xcfe0:	mov	rsi, qword ptr [r14]
0xcfe3:	mov	rcx, qword ptr [rbp - 0x78]
0xcfe7:	add	rsi, r9
0xcfea:	jmp	0xcdbd


0xcdbd:	mov	rdx, rcx
0xcdc0:	mov	rdi, r12
0xcdc3:	mov	qword ptr [rbp - 0xa0], rcx
0xcdca:	call	0x99b0


0xd296:	test	al, al
0xd298:	je	0xd3c8


0xd29e:	mov	rdx, qword ptr [r14 + 0x28]
0xd2a2:	lea	rax, [rbx + rbx*2]
0xd2a6:	mov	rcx, qword ptr [rbp - 0x78]
0xd2aa:	lea	rax, [rdx + rax*8]
0xd2ae:	mov	qword ptr [rbp - 0xd8], rcx
0xd2b5:	mov	rax, qword ptr [rax + 0x10]
0xd2b9:	mov	rbx, qword ptr [rax]
0xd2bc:	mov	rax, qword ptr [r12 + 0xb8]
0xd2c4:	mov	rax, qword ptr [rax + rcx*8]
0xd2c8:	mov	rdx, rbx
0xd2cb:	mov	rdi, qword ptr [rax + 0x10]
0xd2cf:	lea	rsi, [rax + 0x18]
0xd2d3:	call	0x7ae0


0xd2d8:	test	rax, rax
0xd2db:	jne	0xce3c


0xd2e1:	mov	r9, qword ptr [rbp - 0xa0]
0xd2e8:	mov	rsi, qword ptr [r14]
0xd2eb:	mov	rcx, qword ptr [rbp - 0xd8]
0xd2f2:	add	rsi, r9
0xd2f5:	jmp	0xcdbd


0xce3c:	test	rbx, rbx
0xce3f:	js	0xd21a


0xcee2:	test	al, al
0xcee4:	mov	r9, qword ptr [rbp - 0xa0]
0xceeb:	je	0xd3c8


0xcef1:	mov	r10, qword ptr [r15 + 8]
0xcef5:	test	r10, r10
0xcef8:	jle	0xd228


0xcefe:	mov	r15, qword ptr [r15 + 0x10]
0xcf02:	mov	r11, qword ptr [r9 + 0x10]
0xcf06:	lea	r14, [r9 + 0x18]
0xcf0a:	mov	rbx, -1
0xcf11:	xor	r9d, r9d
0xcf14:	mov	qword ptr [rbp - 0xa0], r12
0xcf1b:	nop	dword ptr [rax + rax]
0xcf20:	mov	r12, qword ptr [r15 + r9*8]
0xcf24:	mov	rsi, r14
0xcf27:	mov	rdi, r11
0xcf2a:	mov	rdx, r12
0xcf2d:	call	0x7ae0


0xcf32:	test	rax, rax
0xcf35:	je	0xcf44


0xcf44:	add	r9, 1
0xcf48:	cmp	r10, r9
0xcf4b:	jne	0xcf20


0xcf37:	cmp	rbx, -1
0xcf3b:	jne	0xd090


0xcf4d:	mov	r12, qword ptr [rbp - 0xa0]
0xcf54:	jmp	0xce3c


0xcf20:	mov	r12, qword ptr [r15 + r9*8]
0xcf24:	mov	rsi, r14
0xcf27:	mov	rdi, r11
0xcf2a:	mov	rdx, r12
0xcf2d:	call	0x7ae0


0xcf41:	mov	rbx, r12
0xcf44:	add	r9, 1
0xcf48:	cmp	r10, r9
0xcf4b:	jne	0xcf20


0xd090:	mov	rsi, qword ptr [rbp - 0xc8]
0xd097:	mov	rdi, qword ptr [rbp - 0x68]
0xd09b:	mov	rdx, rbx
0xd09e:	mov	r14, r12
0xd0a1:	mov	r12, qword ptr [rbp - 0xa0]
0xd0a8:	call	0x7ae0


0xd0ad:	test	rax, rax
0xd0b0:	jne	0xd270


0xd0b6:	mov	rcx, qword ptr [rbp - 0x88]
0xd0bd:	test	rcx, rcx
0xd0c0:	je	0xce3c


0xd270:	mov	rbx, r14
0xd273:	jmp	0xce3c


0xd0c6:	mov	r15, qword ptr [rcx]
0xd0c9:	mov	rdx, qword ptr [rbp - 0x78]
0xd0cd:	lea	rax, [r15 + 1]
0xd0d1:	cmp	rax, qword ptr [rcx + 8]
0xd0d5:	mov	qword ptr [rcx], rax
0xd0d8:	je	0xd45d


0xd45d:	lea	rsi, [rax + rax*2]
0xd461:	mov	rax, qword ptr [rbp - 0x88]
0xd468:	mov	qword ptr [rbp - 0xa0], rdx
0xd46f:	shl	rsi, 5
0xd473:	mov	rdi, qword ptr [rax + 0x10]
0xd477:	call	0x1b60


0xd0de:	mov	rax, qword ptr [rcx + 0x10]
0xd0e2:	lea	r15, [r15 + r15*2]
0xd0e6:	shl	r15, 4
0xd0ea:	add	r15, rax
0xd0ed:	mov	qword ptr [r15 + 8], r14
0xd0f1:	mov	r14, qword ptr [rbp - 0xb8]
0xd0f8:	mov	qword ptr [r15], rdx
0xd0fb:	mov	rdi, r14
0xd0fe:	call	0x1b00


0xd3ab:	mov	rax, qword ptr [r13 + 8]
0xd3af:	mov	r9, qword ptr [rbp - 0xa0]
0xd3b6:	mov	rcx, qword ptr [rbp - 0xd8]
0xd3bd:	jmp	0xcd79


0xd328:	mov	rax, qword ptr [r13 + 8]
0xd32c:	mov	rcx, qword ptr [rbp - 0xa0]
0xd333:	mov	r9, qword ptr [rbp - 0xd8]
0xd33a:	jmp	0xcd79


0xb230:	mov	rdi, qword ptr [rbp + 0x10]
0xb234:	call	0x18d0


0xd47c:	test	rax, rax
0xd47f:	je	0xd4c5


0xd4c5:	mov	rdi, qword ptr [rbp - 0x60]
0xd4c9:	call	0x18d0


0xd481:	mov	rcx, qword ptr [rbp - 0x88]
0xd488:	mov	rdx, qword ptr [rbp - 0xa0]
0xd48f:	shl	qword ptr [rcx + 8], 1
0xd493:	mov	qword ptr [rcx + 0x10], rax
0xd497:	jmp	0xd0e2


0xd0e2:	lea	r15, [r15 + r15*2]
0xd0e6:	shl	r15, 4
0xd0ea:	add	r15, rax
0xd0ed:	mov	qword ptr [r15 + 8], r14
0xd0f1:	mov	r14, qword ptr [rbp - 0xb8]
0xd0f8:	mov	qword ptr [r15], rdx
0xd0fb:	mov	rdi, r14
0xd0fe:	call	0x1b00


0xd662:	test	rax, rax
0xd665:	mov	rcx, qword ptr [rsp + 8]
0xd66a:	je	0xd6c0


0xd6c0:	mov	rdi, qword ptr [rbx + 0xd8]
0xd6c7:	call	0x18d0


0xd66c:	mov	rsi, qword ptr [rbx + 0xc8]
0xd673:	mov	rdx, qword ptr [rbx + 0xd0]
0xd67a:	mov	qword ptr [rbx + 0xd8], rax
0xd681:	mov	qword ptr [rsp + 8], rcx
0xd686:	lea	rsi, [rsi + rsi*4]
0xd68a:	lea	rdx, [rdx + rdx*4]
0xd68e:	lea	rdi, [rax + rsi*8]
0xd692:	shl	rdx, 3
0xd696:	xor	esi, esi
0xd698:	call	0x1a60


0xd69d:	shl	qword ptr [rbx + 0xd0], 1
0xd6a4:	mov	rax, qword ptr [rbx + 0xc8]
0xd6ab:	mov	rdi, qword ptr [rbx + 0xd8]
0xd6b2:	mov	rsi, qword ptr [rbp + 8]
0xd6b6:	mov	rcx, qword ptr [rsp + 8]
0xd6bb:	jmp	0xd5b9


0xdf84:	test	rax, rax
0xdf87:	je	0xde49


0xde49:	mov	eax, 0xc
0xde4e:	jmp	0xda58


0xdf8d:	mov	rdx, qword ptr [rsp + 0x10]
0xdf92:	mov	qword ptr [r12 + 0x28], rax
0xdf97:	mov	qword ptr [r12 + 0x18], rdx
0xdf9c:	jmp	0xdd94


0x7084:	test	rax, rax
0x7087:	je	0x7148


0x708d:	mov	qword ptr [rbx + 0xb8], rax
0x7094:	cmp	byte ptr [rbx + 0x88], 0
0x709b:	mov	eax, dword ptr [rbx + 0x90]
0x70a1:	je	0x70c0


0x9885:	test	rax, rax
0x9888:	mov	r9, rax
0x988b:	mov	rcx, qword ptr [rsp + 8]
0x9890:	je	0x9861


0x9861:	mov	eax, 0xc
0x9866:	jmp	0x9852


0x9892:	mov	qword ptr [r15 + 0xf8], rax
0x9899:	mov	rax, qword ptr [rsp + 0x10]
0x989e:	mov	r8, qword ptr [r15 + 0xe8]
0x98a5:	mov	qword ptr [r15 + 0xf0], rax
0x98ac:	jmp	0x97f3


0x9852:	add	rsp, 0x28
0x9856:	pop	rbx
0x9857:	pop	rbp
0x9858:	pop	r12
0x985a:	pop	r13
0x985c:	pop	r14
0x985e:	pop	r15
0x9860:	ret	


0x66b3:	test	rax, rax
0x66b6:	je	0x66c5


0x66c5:	xor	eax, eax
0x66c7:	jmp	0x65ce


0x66b8:	mov	qword ptr [rbx + 0x10], rax
0x66bc:	mov	rsi, qword ptr [rbx + 8]
0x66c0:	jmp	0x6619


0x818f:	test	rax, rax
0x8192:	je	0x81d4


0x81d4:	mov	eax, 0xc
0x81d9:	jmp	0x80ec


0x8194:	mov	qword ptr [rbx + 0x10], rax
0x8198:	mov	qword ptr [rbx], rbp
0x819b:	mov	rax, qword ptr [rbx + 8]
0x819f:	mov	rdx, qword ptr [r12 + 8]
0x81a4:	jmp	0x8034


0x8770:	test	rax, rax
0x8773:	mov	rdi, rax
0x8776:	je	0x8791


0x8791:	mov	eax, 0xc
0x8796:	jmp	0x874c


0x8778:	mov	qword ptr [rbx + 0x10], rax
0x877c:	mov	qword ptr [rbx], r13
0x877f:	mov	rcx, qword ptr [rbx + 8]
0x8783:	mov	r9, qword ptr [rbp + 8]
0x8787:	mov	r11, qword ptr [r12 + 8]
0x878c:	jmp	0x863b


0x874c:	add	rsp, 8
0x8750:	pop	rbx
0x8751:	pop	rbp
0x8752:	pop	r12
0x8754:	pop	r13
0x8756:	ret	


0xcbc6:	test	rax, rax
0xcbc9:	je	0xcc0b


0xcbcb:	mov	rcx, qword ptr [rsp + 0x60]
0xcbd0:	lea	rdx, [r12*8]
0xcbd8:	lea	rdi, [rax + r13*8]
0xcbdc:	xor	esi, esi
0xcbde:	mov	qword ptr [rcx + 0x10], rax
0xcbe2:	mov	qword ptr [rcx + 8], r14
0xcbe6:	call	0x1a60


0xcbeb:	jmp	0xc56c


0x64c5:	test	rax, rax
0x64c8:	je	0x6520


0x64ca:	mov	rdi, qword ptr [rbx + 0x18]
0x64ce:	mov	qword ptr [rbx + 0x10], rax
0x64d2:	test	rdi, rdi
0x64d5:	je	0x64ed


0x64d7:	lea	rsi, [rbp*8]
0x64df:	call	0x1b60


0x64e4:	test	rax, rax
0x64e7:	je	0x6520


0x64e9:	mov	qword ptr [rbx + 0x18], rax
0x64ed:	cmp	byte ptr [rbx + 0x8b], 0
0x64f4:	jne	0x6508


0x6514:	test	rax, rax
0x6517:	je	0x6520


0x6519:	mov	qword ptr [rbx + 8], rax
0x651d:	jmp	0x64f6


0x737c:	test	rax, rax
0x737f:	je	0x7442


0x7385:	mov	r15, rbp
0x7388:	mov	rdi, qword ptr [rbx + 0x18]
0x738c:	mov	qword ptr [rbx], rax
0x738f:	shl	r15, 4
0x7393:	mov	rsi, r15
0x7396:	call	0x1b60


0x739b:	mov	rdi, qword ptr [rbx + 0x20]
0x739f:	mov	rsi, r15
0x73a2:	lea	r15, [r13 + rbp*4]
0x73a7:	mov	r12, rax
0x73aa:	shl	r15, 3
0x73ae:	call	0x1b60


0x73b3:	mov	rdi, qword ptr [rbx + 0x28]
0x73b7:	mov	rsi, r15
0x73ba:	mov	qword ptr [rsp], rax
0x73be:	call	0x1b60


0x73c3:	mov	rdi, qword ptr [rbx + 0x30]
0x73c7:	mov	rsi, r15
0x73ca:	mov	rbp, rax
0x73cd:	call	0x1b60


0x73d2:	test	r12, r12
0x73d5:	mov	rcx, qword ptr [rsp]
0x73d9:	je	0x7410


0x7410:	mov	rdi, r12
0x7413:	mov	qword ptr [rsp + 8], rax
0x7418:	mov	qword ptr [rsp], rcx
0x741c:	call	0x18d0


0x73db:	test	rcx, rcx
0x73de:	je	0x7410


0x73e0:	test	rbp, rbp
0x73e3:	je	0x7410


0x73e5:	test	rax, rax
0x73e8:	mov	rdx, qword ptr [rsp + 8]
0x73ed:	je	0x7410


0x73ef:	mov	qword ptr [rbx + 0x18], r12
0x73f3:	mov	qword ptr [rbx + 0x20], rcx
0x73f7:	mov	qword ptr [rbx + 0x28], rbp
0x73fb:	mov	qword ptr [rbx + 0x30], rax
0x73ff:	mov	qword ptr [rbx + 8], r13
0x7403:	mov	rsi, qword ptr [rbx + 0x10]
0x7407:	jmp	0x72ad


0x72ad:	mov	rax, rsi
0x72b0:	mov	ecx, edx
0x72b2:	shl	rax, 4
0x72b6:	add	rax, qword ptr [rbx]
0x72b9:	and	ecx, 0xfffc00ff
0x72bf:	mov	qword ptr [rax + 8], rdx
0x72c3:	mov	dword ptr [rax + 8], ecx
0x72c6:	xor	ecx, ecx
0x72c8:	cmp	dl, 6
0x72cb:	mov	qword ptr [rax], r14
0x72ce:	sete	cl
0x72d1:	cmp	dl, 5
0x72d4:	jne	0x72e2


0xb467:	test	rax, rax
0xb46a:	je	0xb788


0xb788:	mov	eax, 0xc
0xb78d:	jmp	0xb3c6


0xb470:	mov	rdx, qword ptr [rsp]
0xb474:	mov	r8, qword ptr [rsp + 8]
0xb479:	mov	qword ptr [rdx], rax
0xb47c:	mov	qword ptr [r8], r14
0xb47f:	mov	rcx, qword ptr [r13]
0xb483:	jmp	0xb338


0xb3c6:	add	rsp, 0x10
0xb3ca:	pop	rbx
0xb3cb:	pop	rbp
0xb3cc:	pop	r12
0xb3ce:	pop	r13
0xb3d0:	pop	r14
0xb3d2:	ret	


0x53f6:	test	rax, rax
0x53f9:	jne	0x5400


0x53fb:	test	rbx, rbx
0x53fe:	jne	0x5411


0x5400:	pop	rbx
0x5401:	ret	


0x5411:	call	0x55d0


0x657f:	test	rax, rax
0x6582:	je	0x6590


0x6590:	xor	eax, eax
0x6592:	jmp	0x655a


0x6584:	mov	qword ptr [rbx + 0x10], rax
0x6588:	mov	rsi, qword ptr [rbx + 8]
0x658c:	jmp	0x6549


0x655a:	add	rsp, 8
0x655e:	pop	rbx
0x655f:	pop	rbp
0x6560:	ret	


0x13503:	test	rax, rax
0x13506:	mov	rbx, rax
0x13509:	je	0x136a1


0x136a1:	mov	eax, 0xc
0x136a6:	jmp	0x12a2c


0x1350f:	mov	rax, qword ptr [rsp + 8]
0x13514:	mov	qword ptr [rax + 8], 0xe8
0x1351c:	mov	qword ptr [rax], rbx
0x1351f:	jmp	0x12702


0x12a2c:	mov	rbx, qword ptr [rsp + 0x118]
0x12a34:	xor	rbx, qword ptr fs:[0x28]
0x12a3d:	jne	0x13780


0x12a43:	add	rsp, 0x128
0x12a4a:	pop	rbx
0x12a4b:	pop	rbp
0x12a4c:	pop	r12
0x12a4e:	pop	r13
0x12a50:	pop	r14
0x12a52:	pop	r15
0x12a54:	ret	


0x13780:	call	0x19e0


0x1cc6:	lea	rsi, [rip + 0x128e0]
0x1ccd:	mov	edi, 6
0x1cd2:	call	0x1b70


0x250b:	mov	rax, qword ptr [rip + 0x216c3e]
0x2512:	mov	rdx, qword ptr [rip + 0x216b0f]
0x2519:	add	rdx, rax
0x251c:	cmp	rax, rdx
0x251f:	jg	0x252d


0x2521:	mov	qword ptr [rip + 0x216c28], rdx
0x2528:	add	rsp, 8
0x252c:	ret	


0x252d:	lea	rsi, [rip + 0x11e70]
0x2534:	mov	edx, 5
0x2539:	xor	edi, edi
0x253b:	call	0x19b0


0x28ab:	mov	qword ptr [rip + 0x21688a], 0
0x28b6:	mov	r14, qword ptr [rip + 0x2168ab]
0x28bd:	jmp	0x273a


0x2733:	mov	r14, qword ptr [rip + 0x216a2e]
0x273a:	mov	rcx, qword ptr [rip + 0x2169a7]
0x2741:	mov	rdi, qword ptr [rip + 0x216a28]
0x2748:	mov	rdx, r14
0x274b:	mov	esi, 1
0x2750:	call	0x1b50


0x3231:	cmp	r15d, 0xa
0x3235:	mov	qword ptr [rsp + 0x58], rax
0x323a:	ja	0x43ef


0x3240:	lea	rcx, [rip + 0x11cd9]
0x3247:	mov	edx, r15d
0x324a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x324e:	add	rax, rcx
0x3251:	jmp	rax


0x43ef:	call	0x18e0


0x57a6:	xor	ecx, ecx
0x57a8:	mov	edx, ebp
0x57aa:	mov	dword ptr [rax], 0
0x57b0:	mov	rsi, rbx
0x57b3:	mov	rdi, r12
0x57b6:	mov	r13, rax
0x57b9:	call	0x1960


0x1960:	jmp	qword ptr [rip + 0x2174d2]




0x4421:	mov	r13, rax
0x4424:	mov	eax, dword ptr [rax]
0x4426:	test	r15d, r15d
0x4429:	mov	rbx, qword ptr [rip + 0x214c90]
0x4430:	mov	dword ptr [rsp + 0x18], eax
0x4434:	js	0x45a1


0x45a1:	call	0x18e0


0x443a:	cmp	dword ptr [rip + 0x214c77], r15d
0x4441:	jg	0x44a5


0x4443:	cmp	r15d, 0x7fffffff
0x444a:	je	0x45a6


0x44a5:	mov	eax, dword ptr [rbp + 4]
0x44a8:	shl	r15, 4
0x44ac:	sub	rsp, 8
0x44b0:	add	rbx, r15
0x44b3:	lea	r15, [rbp + 8]
0x44b7:	mov	r8d, dword ptr [rbp]
0x44bb:	mov	r11, qword ptr [rbx]
0x44be:	mov	r12, qword ptr [rbx + 8]
0x44c2:	mov	rcx, r14
0x44c5:	or	eax, 1
0x44c8:	mov	dword ptr [rsp + 0x24], eax
0x44cc:	push	qword ptr [rbp + 0x30]
0x44cf:	mov	r9d, eax
0x44d2:	push	qword ptr [rbp + 0x28]
0x44d5:	push	r15
0x44d7:	mov	rsi, r11
0x44da:	mov	rdx, qword ptr [rsp + 0x28]
0x44df:	mov	rdi, r12
0x44e2:	mov	qword ptr [rsp + 0x30], r11
0x44e7:	call	0x31c0


0x45a6:	call	0x55d0


0x4450:	lea	r12d, [r15 + 1]
0x4454:	lea	rax, [rip + 0x214c75]
0x445b:	movsxd	rsi, r12d
0x445e:	shl	rsi, 4
0x4462:	cmp	rbx, rax
0x4465:	je	0x4580


0x4580:	xor	edi, edi
0x4582:	call	0x53e0


0x446b:	mov	rdi, rbx
0x446e:	call	0x53e0


0x4473:	mov	rbx, rax
0x4476:	mov	qword ptr [rip + 0x214c43], rax
0x447d:	movsxd	rdi, dword ptr [rip + 0x214c34]
0x4484:	mov	edx, r12d
0x4487:	xor	esi, esi
0x4489:	sub	edx, edi
0x448b:	shl	rdi, 4
0x448f:	movsxd	rdx, edx
0x4492:	add	rdi, rbx
0x4495:	shl	rdx, 4
0x4499:	call	0x1a60


0x449e:	mov	dword ptr [rip + 0x214c13], r12d
0x44a5:	mov	eax, dword ptr [rbp + 4]
0x44a8:	shl	r15, 4
0x44ac:	sub	rsp, 8
0x44b0:	add	rbx, r15
0x44b3:	lea	r15, [rbp + 8]
0x44b7:	mov	r8d, dword ptr [rbp]
0x44bb:	mov	r11, qword ptr [rbx]
0x44be:	mov	r12, qword ptr [rbx + 8]
0x44c2:	mov	rcx, r14
0x44c5:	or	eax, 1
0x44c8:	mov	dword ptr [rsp + 0x24], eax
0x44cc:	push	qword ptr [rbp + 0x30]
0x44cf:	mov	r9d, eax
0x44d2:	push	qword ptr [rbp + 0x28]
0x44d5:	push	r15
0x44d7:	mov	rsi, r11
0x44da:	mov	rdx, qword ptr [rsp + 0x28]
0x44df:	mov	rdi, r12
0x44e2:	mov	qword ptr [rsp + 0x30], r11
0x44e7:	call	0x31c0


0x4587:	movdqa	xmm0, xmmword ptr [rip + 0x214b41]
0x458f:	mov	rbx, rax
0x4592:	mov	qword ptr [rip + 0x214b27], rax
0x4599:	movups	xmmword ptr [rax], xmm0
0x459c:	jmp	0x447d


0x447d:	movsxd	rdi, dword ptr [rip + 0x214c34]
0x4484:	mov	edx, r12d
0x4487:	xor	esi, esi
0x4489:	sub	edx, edi
0x448b:	shl	rdi, 4
0x448f:	movsxd	rdx, edx
0x4492:	add	rdi, rbx
0x4495:	shl	rdx, 4
0x4499:	call	0x1a60


0x45bc:	mov	r12d, dword ptr [rax]
0x45bf:	mov	rbp, rax
0x45c2:	lea	rax, [rip + 0x2150d7]
0x45c9:	test	rbx, rbx
0x45cc:	mov	esi, 0x38
0x45d1:	cmove	rbx, rax
0x45d5:	mov	rdi, rbx
0x45d8:	call	0x5580


0x46f2:	mov	r12d, dword ptr [rax]
0x46f5:	mov	rbp, rax
0x46f8:	lea	rax, [rbx + 8]
0x46fc:	sub	rsp, 8
0x4700:	mov	r9d, dword ptr [rbx + 4]
0x4704:	push	qword ptr [rbx + 0x30]
0x4707:	mov	r8d, dword ptr [rbx]
0x470a:	push	qword ptr [rbx + 0x28]
0x470d:	mov	rdx, r15
0x4710:	push	rax
0x4711:	mov	rcx, qword ptr [rsp + 0x28]
0x4716:	mov	rsi, r14
0x4719:	mov	rdi, r13
0x471c:	call	0x31c0


0x476f:	test	r12, r12
0x4772:	mov	r13, rax
0x4775:	mov	eax, dword ptr [rax]
0x4777:	sete	bpl
0x477b:	or	ebp, dword ptr [rbx + 4]
0x477e:	lea	r10, [rbx + 8]
0x4782:	sub	rsp, 8
0x4786:	mov	r8d, dword ptr [rbx]
0x4789:	mov	rcx, r15
0x478c:	mov	dword ptr [rsp + 0x14], eax
0x4790:	push	qword ptr [rbx + 0x30]
0x4793:	mov	rdx, r14
0x4796:	push	qword ptr [rbx + 0x28]
0x4799:	push	r10
0x479b:	xor	esi, esi
0x479d:	mov	r9d, ebp
0x47a0:	xor	edi, edi
0x47a2:	mov	qword ptr [rsp + 0x40], r10
0x47a7:	call	0x31c0


0x2540:	xor	esi, esi
0x2542:	mov	rdx, rax
0x2545:	mov	edi, 1
0x254a:	xor	eax, eax
0x254c:	call	0x1bb0


0x1bb0:	jmp	qword ptr [rip + 0x2173aa]




0x4daf:	lea	rdx, [rip + 0x1090a]
0x4db6:	mov	rcx, rax
0x4db9:	mov	r8d, 0x7e3
0x4dbf:	mov	esi, 1
0x4dc4:	mov	rdi, rbp
0x4dc7:	xor	eax, eax
0x4dc9:	call	0x1c30


0x4dce:	lea	rsi, [rip + 0x10653]
0x4dd5:	xor	edi, edi
0x4dd7:	mov	edx, 5
0x4ddc:	call	0x19b0


0x4de1:	mov	rsi, rbp
0x4de4:	mov	rdi, rax
0x4de7:	call	0x1aa0


0x294f:	mov	rbx, rax
0x2952:	call	0x18f0


0x2957:	mov	esi, dword ptr [rax]
0x2959:	mov	rdx, rbx
0x295c:	mov	edi, 1
0x2961:	xor	eax, eax
0x2963:	call	0x1bb0


0x29ad:	mov	rdi, qword ptr [rip + 0x21676c]
0x29b4:	mov	rdx, rax
0x29b7:	mov	rcx, rbx
0x29ba:	mov	esi, 1
0x29bf:	xor	eax, eax
0x29c1:	call	0x1c30


0x29c6:	mov	edi, ebp
0x29c8:	call	0x1c10


0x1c10:	jmp	qword ptr [rip + 0x21737a]




0x29db:	mov	rdx, rbx
0x29de:	mov	rsi, rax
0x29e1:	mov	edi, 1
0x29e6:	xor	eax, eax
0x29e8:	call	0x1b80


0x29ed:	mov	rbx, qword ptr [rip + 0x2166f4]
0x29f4:	lea	rsi, [rip + 0x11c2d]
0x29fb:	mov	edx, 5
0x2a00:	xor	edi, edi
0x2a02:	call	0x19b0


0x2a07:	mov	rsi, rbx
0x2a0a:	mov	rdi, rax
0x2a0d:	call	0x1aa0


0x13fc6:	mov	rdi, rax
0x13fc9:	mov	r13, rax
0x13fcc:	call	0x19d0


0x5314:	lea	rdx, [rip + 0x100dc]
0x531b:	mov	rsi, rax
0x531e:	mov	edi, 1
0x5323:	xor	eax, eax
0x5325:	call	0x1b80


0x532a:	lea	rsi, [rip + 0x100dc]
0x5331:	mov	edx, 5
0x5336:	xor	edi, edi
0x5338:	call	0x19b0


0x533d:	lea	rcx, [rip + 0xf964]
0x5344:	lea	rdx, [rip + 0xf0e7]
0x534b:	mov	rsi, rax
0x534e:	mov	edi, 1
0x5353:	xor	eax, eax
0x5355:	call	0x1b80


0x535a:	mov	rbx, qword ptr [rip + 0x213d87]
0x5361:	lea	rsi, [rip + 0x102d8]
0x5368:	xor	edi, edi
0x536a:	mov	edx, 5
0x536f:	call	0x19b0


0x5374:	mov	rsi, rbx
0x5377:	mov	rdi, rax
0x537a:	pop	rbx
0x537b:	jmp	0x1aa0


0x55e7:	mov	edi, dword ptr [rip + 0x213a83]
0x55ed:	lea	rdx, [rip + 0xf878]
0x55f4:	mov	rcx, rax
0x55f7:	xor	esi, esi
0x55f9:	xor	eax, eax
0x55fb:	call	0x1bb0


0x5f13:	mov	edx, r12d
0x5f16:	mov	rsi, rbp
0x5f19:	mov	edi, eax
0x5f1b:	call	0x1a40


0x1a40:	jmp	qword ptr [rip + 0x217462]




0x2ecd:	mov	ecx, ebx
0x2ecf:	xor	edx, edx
0x2ed1:	xor	esi, esi
0x2ed3:	pop	rbx
0x2ed4:	mov	edi, eax
0x2ed6:	jmp	0x1a70


0x5e2c:	test	eax, eax
0x5e2e:	mov	rdi, rbx
0x5e31:	js	0x5e87


0x5e87:	pop	rbx
0x5e88:	pop	rbp
0x5e89:	pop	r12
0x5e8b:	jmp	0x1980


0x5e33:	call	0x1b40


0x1980:	jmp	qword ptr [rip + 0x2174c2]




0x5e38:	test	eax, eax
0x5e3a:	jne	0x5e68


0x5e3c:	mov	rdi, rbx
0x5e3f:	call	0x5ea0


0x5e68:	mov	rdi, rbx
0x5e6b:	call	0x1ae0


0x5e70:	xor	esi, esi
0x5e72:	mov	edx, 1
0x5e77:	mov	edi, eax
0x5e79:	call	0x1a40


0x5f77:	cmp	rax, -3
0x5f7b:	mov	rbp, rax
0x5f7e:	jbe	0x5fa0


0x5fa0:	mov	rdx, qword ptr [rsp + 8]
0x5fa5:	xor	rdx, qword ptr fs:[0x28]
0x5fae:	mov	rax, rbp
0x5fb1:	jne	0x5fbe


0x5f80:	test	r12, r12
0x5f83:	je	0x5fa0


0x5fb3:	add	rsp, 0x18
0x5fb7:	pop	rbx
0x5fb8:	pop	rbp
0x5fb9:	pop	r12
0x5fbb:	pop	r13
0x5fbd:	ret	


0x5fbe:	call	0x19e0


0x5f85:	xor	edi, edi
0x5f87:	call	0x14260


0xa0d4:	cmp	r12, rax
0xa0d7:	mov	r8, qword ptr [rsp]
0xa0db:	mov	r10d, dword ptr [rsp + 0xc]
0xa0e0:	ja	0xa0ec


0xa0e2:	cmp	rax, -3
0xa0e6:	jbe	0xa2b1


0xa0ec:	mov	r11, qword ptr [rbx + 0x28]
0xa0f0:	mov	rax, qword ptr [rbx + 0x38]
0xa0f4:	jmp	0x9d91


0xa2b1:	mov	edx, dword ptr [rsp + 0x24]
0xa2b5:	sub	rax, r12
0xa2b8:	mov	qword ptr [rbx + 0x20], 0
0xa2c0:	mov	r12, rax
0xa2c3:	mov	qword ptr [rbx + 0x30], rax
0xa2c7:	cmp	edx, -1
0xa2ca:	jne	0x9e15


0xa2d0:	jmp	0xa0ec


0x9e15:	cmp	byte ptr [rbx + 0x8e], 0
0x9e1c:	jne	0xa289


0x9e22:	xor	eax, eax
0x9e24:	cmp	edx, 0xa
0x9e27:	jne	0x9e37


0xa289:	mov	edi, edx
0xa28b:	mov	dword ptr [rsp], edx
0xa28e:	call	0x1af0


0x9e29:	xor	eax, eax
0x9e2b:	cmp	byte ptr [rbx + 0x8d], 0
0x9e32:	setne	al
0x9e35:	add	eax, eax
0x9e37:	mov	dword ptr [rbx + 0x70], eax
0x9e3a:	cmp	r12, 0
0x9e3e:	jne	0xa25a


0x9e37:	mov	dword ptr [rbx + 0x70], eax
0x9e3a:	cmp	r12, 0
0x9e3e:	jne	0xa25a


0xa293:	test	eax, eax
0xa295:	jne	0xa2a3


0xa297:	mov	edx, dword ptr [rsp]
0xa29a:	cmp	edx, 0x5f
0xa29d:	jne	0x9e22


0xa2a3:	mov	eax, 1
0xa2a8:	jmp	0x9e37


0xbf58:	cmp	r12, rax
0xbf5b:	jne	0xbe27


0xbf61:	mov	edi, dword ptr [rsp + 0x54]
0xbf65:	call	0x1be0


0xc0da:	cmp	rax, -2
0xc0de:	jne	0xc0ea


0xc0e0:	movzx	eax, byte ptr [rsp + 0x54]
0xc0e5:	mov	byte ptr [rbp + rax], 1
0xc0ea:	add	byte ptr [rsp + 0x54], 1
0xc0ef:	jne	0xc0c0


0xc0ea:	add	byte ptr [rsp + 0x54], 1
0xc0ef:	jne	0xc0c0


0xc0f1:	jmp	0xbe27


0xc0c0:	xor	edi, edi
0xc0c2:	mov	qword ptr [r12], 0
0xc0ca:	mov	rcx, r12
0xc0cd:	mov	edx, 1
0xc0d2:	mov	rsi, r13
0xc0d5:	call	0x5f40


0x9ddf:	lea	rcx, [rax - 1]
0x9de3:	mov	edx, dword ptr [rsp + 0x24]
0x9de7:	mov	r8, qword ptr [rsp]
0x9deb:	mov	r10d, dword ptr [rsp + 0xc]
0x9df0:	cmp	rcx, -4
0x9df4:	ja	0xa235


0x9dfa:	add	r14, rax
0x9dfd:	cmp	r15, r14
0x9e00:	jg	0x9db0


0xa235:	test	rax, rax
0xa238:	je	0xa2ad


0x9e02:	sub	r14, r15
0x9e05:	cmp	edx, -1
0x9e08:	mov	r12, r14
0x9e0b:	mov	qword ptr [rbx + 0x30], r14
0x9e0f:	je	0xa1e9


0x9db0:	mov	r12, qword ptr [rbx + 0x50]
0x9db4:	mov	rsi, qword ptr [rbx]
0x9db7:	mov	rdi, r13
0x9dba:	mov	rax, qword ptr [rbx + 0x20]
0x9dbe:	mov	rcx, qword ptr [rsp + 0x10]
0x9dc3:	mov	dword ptr [rsp + 0xc], r10d
0x9dc8:	mov	qword ptr [rsp], r8
0x9dcc:	sub	r12, r14
0x9dcf:	add	rsi, r14
0x9dd2:	mov	rdx, r12
0x9dd5:	mov	qword ptr [rsp + 0x18], rax
0x9dda:	call	0x5f40


0xa2ad:	xor	edx, edx
0xa2af:	jmp	0xa247


0xa23a:	test	r12, r12
0xa23d:	je	0xa2ad


0xa1e9:	lea	rsi, [r8 - 1]
0xa1ed:	mov	edx, r10d
0xa1f0:	mov	rdi, rbx
0xa1f3:	call	0x98c0


0xa247:	mov	rax, qword ptr [rsp + 0x18]
0xa24c:	mov	qword ptr [rbx + 0x20], rax
0xa250:	mov	eax, 1
0xa255:	jmp	0x9dfa


0xa23f:	mov	rax, qword ptr [rbx]
0xa242:	movzx	edx, byte ptr [rax + r14]
0xa247:	mov	rax, qword ptr [rsp + 0x18]
0xa24c:	mov	qword ptr [rbx + 0x20], rax
0xa250:	mov	eax, 1
0xa255:	jmp	0x9dfa


0x6aec:	mov	rbp, rax
0x6aef:	lea	rax, [rax - 1]
0x6af3:	cmp	rax, -4
0x6af7:	mov	qword ptr [rsp + 0x20], rax
0x6afc:	ja	0x6e39


0x6b02:	mov	edx, dword ptr [rsp + 0x44]
0x6b06:	mov	edi, edx
0x6b08:	mov	dword ptr [rsp + 0x10], edx
0x6b0c:	call	0x1bf0


0x6e39:	cmp	qword ptr [rsp + 0x20], -3
0x6e3f:	jne	0x6e4b


0x1bf0:	jmp	qword ptr [rip + 0x21738a]


0x6e41:	mov	rax, qword ptr [r14 + 0x58]
0x6e45:	cmp	qword ptr [r14 + 0x40], rax
0x6e49:	jl	0x6ec8


0x6e4b:	mov	rax, qword ptr [r14]
0x6e4e:	mov	rdx, qword ptr [r14 + 0x78]
0x6e52:	add	rax, r13
0x6e55:	add	rax, qword ptr [r14 + 0x28]
0x6e59:	test	rdx, rdx
0x6e5c:	movzx	eax, byte ptr [rax]
0x6e5f:	jne	0x700c




0x6ec8:	mov	rax, qword ptr [rsp + 0x48]
0x6ecd:	mov	qword ptr [r14 + 0x20], rax
0x6ed1:	jmp	0x6a55


0x6e65:	mov	rdx, qword ptr [r14 + 8]
0x6e69:	mov	rcx, r15
0x6e6c:	mov	byte ptr [rdx + r15], al
0x6e70:	cmp	byte ptr [r14 + 0x8c], 0
0x6e78:	jne	0x6fff


0x700c:	movzx	eax, byte ptr [rdx + rax]
0x7010:	jmp	0x6e65


0x6e7e:	mov	rdx, qword ptr [r14 + 0x10]
0x6e82:	add	r13, 1
0x6e86:	add	r15, 1
0x6e8a:	cmp	rbp, -1
0x6e8e:	mov	dword ptr [rdx + rcx*4], eax
0x6e91:	jne	0x6a50


0x6fff:	mov	rdx, qword ptr [r14 + 0x18]
0x7003:	mov	qword ptr [rdx + r15*8], r13
0x7007:	jmp	0x6e7e


0x6e97:	mov	rax, qword ptr [rsp + 0x48]
0x6e9c:	mov	qword ptr [r14 + 0x20], rax
0x6ea0:	jmp	0x6a50


0x6a50:	cmp	r15, rbx
0x6a53:	jl	0x6a90


0x6c65:	mov	rbp, rax
0x6c68:	lea	rax, [rax - 1]
0x6c6c:	cmp	rax, -4
0x6c70:	ja	0x6d58


0x6c76:	mov	edx, dword ptr [rsp + 0x44]
0x6c7a:	mov	edi, edx
0x6c7c:	mov	dword ptr [rsp + 0x18], edx
0x6c80:	call	0x1bf0


0x6d58:	cmp	rax, -3
0x6d5c:	jne	0x6d90


0x6d5e:	mov	rax, qword ptr [r14 + 0x58]
0x6d62:	cmp	qword ptr [r14 + 0x40], rax
0x6d66:	jge	0x6d90


0x6d90:	mov	rax, qword ptr [r14]
0x6d93:	mov	rdx, qword ptr [r14 + 8]
0x6d97:	add	rax, r15
0x6d9a:	add	rax, qword ptr [r14 + 0x28]
0x6d9e:	movzx	eax, byte ptr [rax]
0x6da1:	mov	byte ptr [rdx + r15], al
0x6da5:	mov	rdx, qword ptr [r14 + 0x10]
0x6da9:	add	r15, 1
0x6dad:	cmp	rbp, -1
0x6db1:	mov	dword ptr [rdx + r13*4], eax
0x6db5:	jne	0x6cfa


0x6d68:	mov	rax, qword ptr [rsp + 0x48]
0x6d6d:	mov	qword ptr [r14 + 0x20], rax
0x6d71:	nop	dword ptr [rax]
0x6d78:	mov	qword ptr [r14 + 0x30], r15
0x6d7c:	mov	qword ptr [r14 + 0x38], r15
0x6d80:	xor	eax, eax
0x6d82:	jmp	0x6a5f


0x6dbb:	mov	rax, qword ptr [rsp + 0x48]
0x6dc0:	mov	qword ptr [r14 + 0x20], rax
0x6dc4:	jmp	0x6cfa


0x68a4:	lea	rdx, [rax - 1]
0x68a8:	cmp	rdx, -3
0x68ac:	ja	0x6940


0x68b2:	cmp	rax, -2
0x68b6:	mov	edx, dword ptr [rsp + 0xc]
0x68ba:	je	0x6930


0x6940:	mov	rax, qword ptr [rbx]
0x6943:	mov	rcx, qword ptr [rbx + 0x78]
0x6947:	add	rax, rbp
0x694a:	add	rax, qword ptr [rbx + 0x28]
0x694e:	test	rcx, rcx
0x6951:	movzx	edx, byte ptr [rax]
0x6954:	mov	dword ptr [rsp + 0xc], edx
0x6958:	jne	0x69e1


0x6930:	mov	rax, qword ptr [rbx + 0x58]
0x6934:	cmp	qword ptr [rbx + 0x40], rax
0x6938:	jl	0x69d8


0x68bc:	mov	rcx, qword ptr [rbx + 0x10]
0x68c0:	lea	rsi, [rbp + 1]
0x68c4:	lea	rdi, [rbp*4]
0x68cc:	mov	dword ptr [rcx + rbp*4], edx
0x68cf:	add	rbp, rax
0x68d2:	cmp	rsi, rbp
0x68d5:	jge	0x6920


0x695e:	mov	qword ptr [rbx + 0x20], r15
0x6962:	mov	eax, 1
0x6967:	jmp	0x68bc


0x69e1:	movzx	edx, byte ptr [rcx + rdx]
0x69e5:	mov	dword ptr [rsp + 0xc], edx
0x69e9:	jmp	0x695e


0x69d8:	mov	qword ptr [rbx + 0x20], r15
0x69dc:	jmp	0x68f4


0x68d7:	lea	rdx, [rcx + rdi + 4]
0x68dc:	lea	rax, [rcx + rbp*4]
0x68e0:	mov	dword ptr [rdx], 0xffffffff
0x68e6:	add	rdx, 4
0x68ea:	cmp	rax, rdx
0x68ed:	jne	0x68e0


0x6920:	mov	rbp, rsi
0x6923:	cmp	rbp, r12
0x6926:	jl	0x6878


0x68ef:	cmp	rbp, r12
0x68f2:	jl	0x6878


0x68e0:	mov	dword ptr [rdx], 0xffffffff
0x68e6:	add	rdx, 4
0x68ea:	cmp	rax, rdx
0x68ed:	jne	0x68e0


0x6878:	mov	rdi, qword ptr [rbx + 0x78]
0x687c:	mov	rdx, r12
0x687f:	mov	r15, qword ptr [rbx + 0x20]
0x6883:	sub	rdx, rbp
0x6886:	test	rdi, rdi
0x6889:	jne	0x6970


0x692c:	jmp	0x68f4


0x7421:	mov	rcx, qword ptr [rsp]
0x7425:	mov	rdi, rcx
0x7428:	call	0x18d0


0x742d:	mov	rdi, rbp
0x7430:	call	0x18d0


0x7435:	mov	rax, qword ptr [rsp + 8]
0x743a:	mov	rdi, rax
0x743d:	call	0x18d0


0xd6cc:	mov	eax, 0xc
0xd6d1:	jmp	0xd57b


0xd4ce:	cmp	byte ptr [rbp - 0xc9], 0
0xd4d5:	je	0xd148


0xd148:	mov	rdi, qword ptr [rbp - 0x88]
0xd14f:	call	0xb1a0


0xd4db:	mov	rdi, qword ptr [rbp - 0xc0]
0xd4e2:	call	0x18d0


0xd4e7:	jmp	0xd3de


0xd3de:	cmp	qword ptr [rbp - 0x88], 0
0xd3e6:	jne	0xd148


0xd3ec:	mov	eax, 0xc
0xd3f1:	jmp	0xd369


0xd369:	mov	rbx, qword ptr [rbp - 0x38]
0xd36d:	xor	rbx, qword ptr fs:[0x28]
0xd376:	jne	0xd535


0xd37c:	lea	rsp, [rbp - 0x28]
0xd380:	pop	rbx
0xd381:	pop	r12
0xd383:	pop	r13
0xd385:	pop	r14
0xd387:	pop	r15
0xd389:	pop	rbp
0xd38a:	ret	


0xd535:	call	0x19e0


0xf856:	test	eax, eax
0xf858:	jne	0xfb2d


0xf85e:	mov	rax, qword ptr [rbx]
0xf861:	movzx	r11d, byte ptr [rsp + 0x1ac]
0xf86a:	mov	r10, qword ptr [rsp + 0x150]
0xf872:	xor	ecx, ecx
0xf874:	mov	r9, qword ptr [rsp + 0x138]
0xf87c:	mov	r8, qword ptr [rsp + 0x158]
0xf884:	mov	rdi, qword ptr [rsp + 0xd8]
0xf88c:	mov	rdx, qword ptr [rsp + 0xb8]
0xf894:	jmp	0xf899


0xfb2d:	mov	rdi, qword ptr [rsp + 0x1d8]
0xfb35:	mov	dword ptr [rsp + 0x5c], eax
0xfb39:	jmp	0xf058


0xb239:	mov	rax, qword ptr [r12]
0xb23d:	mov	rdi, qword ptr [rax + rbx + 0x10]
0xb242:	call	0x18d0


0xb247:	add	rbx, qword ptr [r12]
0xb24b:	movdqu	xmm0, xmmword ptr [rbx + 0x18]
0xb250:	movaps	xmmword ptr [rbp], xmm0
0xb254:	mov	rax, qword ptr [rbx + 0x28]
0xb258:	mov	qword ptr [rbp + 0x10], rax
0xb25c:	mov	rax, qword ptr [rbx + 8]
0xb260:	pop	rbx
0xb261:	pop	rbp
0xb262:	pop	r12
0xb264:	ret	


0xd25b:	mov	rcx, qword ptr [rbp - 0x78]
0xd25f:	mov	rbx, rax
0xd262:	jmp	0xcd5b


0xcd5b:	lea	rax, [rbp - 0x78]
0xcd5f:	mov	qword ptr [rbp - 0xb0], rax
0xcd66:	jmp	0xce49


0xd208:	mov	r9, rax
0xd20b:	mov	rbx, rax
0xd20e:	mov	r15, rax
0xd211:	shl	r9, 4
0xd215:	jmp	0xcd8c


0xd4f5:	cmp	byte ptr [rbp - 0xc9], 0
0xd4fc:	mov	eax, 1
0xd501:	je	0xd369


0xd507:	mov	rdi, qword ptr [rbp - 0xc0]
0xd50e:	mov	dword ptr [rbp - 0x88], eax
0xd514:	call	0x18d0


0xd519:	mov	eax, dword ptr [rbp - 0x88]
0xd51f:	jmp	0xd369


0xd3d1:	cmp	byte ptr [rbp - 0xc9], 0
0xd3d8:	jne	0xd4db


0xd1a3:	cmp	byte ptr [rbp - 0xc9], 0
0xd1aa:	jne	0xd524


0xd1b0:	mov	rdi, qword ptr [rbp - 0x88]
0xd1b7:	call	0xb1a0


0xd524:	mov	rdi, qword ptr [rbp - 0xc0]
0xd52b:	call	0x18d0


0xd530:	jmp	0xd1b0


0xd4a5:	cmp	byte ptr [rbp - 0xc9], 0
0xd4ac:	je	0xd367


0xd367:	xor	eax, eax
0xd369:	mov	rbx, qword ptr [rbp - 0x38]
0xd36d:	xor	rbx, qword ptr fs:[0x28]
0xd376:	jne	0xd535


0xd4b2:	mov	rdi, qword ptr [rbp - 0xc0]
0xd4b9:	call	0x18d0


0xd4be:	xor	eax, eax
0xd4c0:	jmp	0xd369


0xd349:	cmp	byte ptr [rbp - 0xc9], 0
0xd350:	jne	0xd42c


0xd356:	mov	rdi, qword ptr [rbp - 0x88]
0xd35d:	test	rdi, rdi
0xd360:	je	0xd367


0xd42c:	mov	rdi, qword ptr [rbp - 0xc0]
0xd433:	call	0x18d0


0xd362:	call	0xb1a0


0xd438:	mov	rdi, qword ptr [rbp - 0x88]
0xd43f:	test	rdi, rdi
0xd442:	jne	0xd362


0xd448:	jmp	0xd367


0x13df8:	pop	rax
0x13df9:	pop	rdx
0x13dfa:	add	rsp, 0x28
0x13dfe:	mov	rax, rbx
0x13e01:	pop	rbx
0x13e02:	pop	rbp
0x13e03:	pop	r12
0x13e05:	pop	r13
0x13e07:	pop	r14
0x13e09:	pop	r15
0x13e0b:	ret	


0xca6d:	mov	eax, dword ptr [rsp + 0x88]
0xca74:	mov	rbx, qword ptr [rsp + 0xc8]
0xca7c:	xor	rbx, qword ptr fs:[0x28]
0xca85:	jne	0xcc3c


0xcaad:	mov	dword ptr [rsp + 0x88], 0
0xcab8:	jmp	0xc838


0xc81d:	mov	eax, dword ptr [rsp + 0x8c]
0xc824:	test	eax, eax
0xc826:	mov	dword ptr [rsp + 0x88], eax
0xc82d:	jne	0xca60


0xca55:	mov	dword ptr [rsp + 0x88], 0xc
0xca60:	mov	rdi, qword ptr [rsp + 0xa0]
0xca68:	call	0x18d0


0xc925:	mov	rax, qword ptr [r15 + 0xb8]
0xc92c:	mov	rbx, qword ptr [rsp + 0x40]
0xc931:	mov	rax, qword ptr [rax + rbx*8]
0xc935:	test	rax, rax
0xc938:	je	0xcc15


0xcc15:	mov	rax, qword ptr [rsp + 0x60]
0xcc1a:	mov	qword ptr [rax], r12
0xcc1d:	mov	rax, qword ptr [rsp + 0x68]
0xcc22:	mov	qword ptr [r15 + 0xb8], rax
0xcc29:	mov	rax, qword ptr [rsp + 0x70]
0xcc2e:	mov	qword ptr [r15 + 0x48], rax
0xcc32:	mov	eax, 1
0xcc37:	jmp	0xca74


0xc93e:	mov	rbx, qword ptr [rsp + 0x60]
0xc943:	mov	rdx, qword ptr [rsp + 0x78]
0xc948:	lea	rsi, [rax + 0x18]
0xc94c:	mov	qword ptr [rbx], r12
0xc94f:	mov	rbx, qword ptr [rsp + 0x68]
0xc954:	mov	qword ptr [r15 + 0xb8], rbx
0xc95b:	mov	rbx, qword ptr [rsp + 0x70]
0xc960:	mov	qword ptr [r15 + 0x48], rbx
0xc964:	mov	rdi, qword ptr [rax + 0x10]
0xc968:	call	0x7ae0


0xc96d:	test	rax, rax
0xc970:	sete	al
0xc973:	movzx	eax, al
0xc976:	jmp	0xca74


0xdbd1:	mov	rdx, qword ptr [r14 + 0xb8]
0xdbd8:	cmp	qword ptr [rdx + rbx*8], 0
0xdbdd:	je	0xdeb1


0xdf35:	mov	eax, dword ptr [rsp + 0x8c]
0xdf3c:	jmp	0xda58


0xe0f1:	jmp	0xe027


0xf2bf:	mov	rdi, qword ptr [rsp + 0x1d8]
0xf2c7:	cmp	qword ptr [rdi + rbp*8], 0
0xf2cc:	je	0xf3b1


0xa55d:	mov	eax, dword ptr [rsp]
0xa560:	jmp	0xa528


0xa528:	mov	rsi, qword ptr [rsp + 0x38]
0xa52d:	xor	rsi, qword ptr fs:[0x28]
0xa536:	jne	0xa566


0xa538:	add	rsp, 0x48
0xa53c:	pop	rbx
0xa53d:	pop	rbp
0xa53e:	pop	r12
0xa540:	pop	r13
0xa542:	pop	r14
0xa544:	pop	r15
0xa546:	ret	


0xa566:	call	0x19e0


0x101dd:	test	eax, eax
0x101df:	jne	0xfcc8


0x101e5:	sub	rbp, 1
0x101e9:	jmp	0x10178


0x1013f:	test	eax, eax
0x10141:	jne	0xfcc8


0x10147:	test	r14, r14
0x1014a:	js	0x1009d


0x10150:	cmp	qword ptr [rbx + 8], 0
0x10155:	jle	0x1009d


0x1015b:	mov	r10, qword ptr [rbx + 0x10]
0x1015f:	xor	r14d, r14d
0x10162:	mov	qword ptr [rsp + 0x30], rbp
0x10167:	mov	rbp, r14
0x1016a:	mov	r14, qword ptr [rsp + 0x28]
0x1016f:	jmp	0x1018a


0x10081:	test	eax, eax
0x10083:	jne	0xfcc8


0x10089:	add	r14, 1
0x1008d:	cmp	r14, qword ptr [rbx + 8]
0x10091:	jl	0x1004a


0x95b7:	mov	rax, qword ptr [rbx + 0xb8]
0x95be:	cmp	qword ptr [rax + r14*8], 0
0x95c3:	je	0x9705


0x9705:	mov	eax, dword ptr [rsp + 0x4c]
0x9709:	test	eax, eax
0x970b:	je	0x95c9


0x9711:	jmp	0x948f


0x948f:	mov	rbx, qword ptr [rsp + 0x68]
0x9494:	xor	rbx, qword ptr fs:[0x28]
0x949d:	jne	0x9769


0x9720:	mov	eax, dword ptr [rsp + 0x4c]
0x9724:	test	eax, eax
0x9726:	jne	0x948f


0x972c:	mov	eax, 0xc
0x9731:	jmp	0x948f


0xf05d:	mov	rax, qword ptr [rsp + 0x38]
0xf062:	cmp	qword ptr [rax + 0x98], 0
0xf06a:	jne	0xf990


0xf070:	mov	rdi, qword ptr [rsp]
0xf074:	call	0x77d0


0xf990:	mov	rdi, qword ptr [rsp]
0xf994:	call	0x7970


0xf999:	mov	rdi, qword ptr [rsp + 0x218]
0xf9a1:	call	0x18d0


0xf9a6:	mov	rdi, qword ptr [rsp + 0x1f8]
0xf9ae:	call	0x18d0


0xf9b3:	jmp	0xf070


0x937b:	mov	eax, dword ptr [rsp + 0x1c]
0x937f:	test	eax, eax
0x9381:	jne	0x93a8


0x1045b:	mov	eax, dword ptr [rsp + 8]
0x1045f:	jmp	0xfcc8


0xa526:	xor	eax, eax
0xa528:	mov	rsi, qword ptr [rsp + 0x38]
0xa52d:	xor	rsi, qword ptr fs:[0x28]
0xa536:	jne	0xa566


0x48bd:	mov	qword ptr [rip + 0x2147fc], rbx
0x48c4:	pop	rbx
0x48c5:	mov	dword ptr [rip + 0x2147e9], 1
0x48cf:	pop	rbp
0x48d0:	pop	r12
0x48d2:	ret	


0x4897:	mov	qword ptr [rip + 0x21482e], 0x100
0x48a2:	mov	qword ptr [rip + 0x21482f], rbx
0x48a9:	lea	rbx, [rip + 0x214820]
0x48b0:	cmp	r12, rbx
0x48b3:	je	0x48c4


0x540d:	xor	eax, eax
0x540f:	pop	rbx
0x5410:	ret	


0x79be:	mov	rdi, rbp
0x79c1:	call	0x18d0


0x79c6:	cmp	qword ptr [r12 + 0x20], rbx
0x79cb:	jg	0x79a8


0x79a8:	mov	rax, qword ptr [r12 + 0x28]
0x79ad:	mov	rbp, qword ptr [rax + rbx*8]
0x79b1:	add	rbx, 1
0x79b5:	mov	rdi, qword ptr [rbp + 0x20]
0x79b9:	call	0x18d0


0x79d7:	mov	rax, qword ptr [r12 + 0x10]
0x79dc:	test	rax, rax
0x79df:	je	0x79f4


0x79f4:	mov	rdi, r12
0x79f7:	add	r13, 1
0x79fb:	call	0x18d0


0x79e1:	mov	rdi, qword ptr [rax + 0x10]
0x79e5:	call	0x18d0


0x79ea:	mov	rdi, qword ptr [r12 + 0x10]
0x79ef:	call	0x18d0


0x7a00:	cmp	qword ptr [r14 + 0xe8], r13
0x7a07:	jg	0x7990


0x7990:	mov	rax, qword ptr [r14 + 0xf8]
0x7997:	mov	r12, qword ptr [rax + r13*8]
0x799b:	cmp	qword ptr [r12 + 0x20], 0
0x79a1:	jle	0x79cd


0x487c:	cmp	rbx, rbp
0x487f:	jne	0x4870


0x4870:	mov	rdi, qword ptr [rbx]
0x4873:	add	rbx, 0x10
0x4877:	call	0x18d0


0x7858:	cmp	qword ptr [r12 + 0x10], 0
0x785e:	je	0x78b3


0x78b3:	mov	rdi, qword ptr [r12 + 0x28]
0x78b8:	call	0x18d0


0x7860:	xor	ebx, ebx
0x7862:	xor	ebp, ebp
0x7864:	nop	dword ptr [rax]
0x7868:	mov	rax, qword ptr [r12 + 0x30]
0x786d:	test	rax, rax
0x7870:	je	0x787c


0x787c:	mov	rax, qword ptr [r12 + 0x38]
0x7881:	test	rax, rax
0x7884:	je	0x7890


0x7872:	mov	rdi, qword ptr [rax + rbx + 0x10]
0x7877:	call	0x18d0


0x7890:	mov	rax, qword ptr [r12 + 0x28]
0x7895:	test	rax, rax
0x7898:	je	0x78a4


0x7886:	mov	rdi, qword ptr [rax + rbx + 0x10]
0x788b:	call	0x18d0


0x78a4:	add	rbp, 1
0x78a8:	add	rbx, 0x18
0x78ac:	cmp	qword ptr [r12 + 0x10], rbp
0x78b1:	ja	0x7868


0x789a:	mov	rdi, qword ptr [rax + rbx + 0x10]
0x789f:	call	0x18d0


0x7868:	mov	rax, qword ptr [r12 + 0x30]
0x786d:	test	rax, rax
0x7870:	je	0x787c


0x78bd:	mov	rdi, qword ptr [r12 + 0x30]
0x78c2:	call	0x18d0


0x78c7:	mov	rdi, qword ptr [r12 + 0x38]
0x78cc:	call	0x18d0


0x78d1:	mov	rdi, qword ptr [r12]
0x78d5:	call	0x18d0


0x78da:	mov	rdi, qword ptr [r12 + 0x40]
0x78df:	test	rdi, rdi
0x78e2:	je	0x7937


0x7937:	call	0x18d0


0x78e4:	xor	r14d, r14d
0x78e7:	xor	r13d, r13d
0x78ea:	nop	word ptr [rax + rax]
0x78f0:	lea	rbp, [rdi + r14]
0x78f4:	cmp	qword ptr [rbp], 0
0x78f9:	jle	0x7917


0x7917:	mov	rdi, qword ptr [rbp + 0x10]
0x791b:	add	r13, 1
0x791f:	add	r14, 0x18
0x7923:	call	0x18d0


0x78fb:	xor	ebx, ebx
0x78fd:	nop	dword ptr [rax]
0x7900:	mov	rax, qword ptr [rbp + 0x10]
0x7904:	mov	rdi, qword ptr [rax + rbx*8]
0x7908:	add	rbx, 1
0x790c:	call	0x7770


0x7928:	cmp	qword ptr [r12 + 0x88], r13
0x7930:	mov	rdi, qword ptr [r12 + 0x40]
0x7935:	jae	0x78f0


0x78f0:	lea	rbp, [rdi + r14]
0x78f4:	cmp	qword ptr [rbp], 0
0x78f9:	jle	0x7917


0x793c:	mov	rdi, qword ptr [r12 + 0x78]
0x7941:	lea	rax, [rip + 0xe518]
0x7948:	cmp	rdi, rax
0x794b:	je	0x7952


0x7952:	mov	rdi, qword ptr [r12 + 0xe0]
0x795a:	call	0x18d0


0x794d:	call	0x18d0


0x795f:	pop	rbx
0x7960:	mov	rdi, r12
0x7963:	pop	rbp
0x7964:	pop	r12
0x7966:	pop	r13
0x7968:	pop	r14
0x796a:	jmp	0x18d0


0xb1ca:	mov	rax, qword ptr [rbp + 0x10]
0xb1ce:	mov	rdi, qword ptr [rax + rbx + 0x10]
0xb1d3:	add	rbx, 0x30
0xb1d7:	call	0x18d0


0xb1dc:	cmp	r12, qword ptr [rbp]
0xb1e0:	jl	0xb1b8


0xb1b8:	mov	rax, qword ptr [rbp + 0x10]
0xb1bc:	add	r12, 1
0xb1c0:	mov	rdi, qword ptr [rax + rbx + 0x28]
0xb1c5:	call	0x18d0


0x14049:	mov	rdi, qword ptr [rbx + 0x28]
0x1404d:	mov	qword ptr [rbx + 0x20], 0
0x14055:	call	0x18d0


0x1405a:	mov	qword ptr [rbx + 0x28], 0
0x14062:	pop	rbx
0x14063:	ret	


0x720c:	mov	rdi, qword ptr [rbx + 8]
0x7210:	call	0x18d0


0x7215:	mov	rdi, qword ptr [rbx + 0x10]
0x7219:	call	0x18d0


0x721e:	mov	rdi, qword ptr [rbx + 0x18]
0x7222:	call	0x18d0


0x7227:	mov	rdi, rbx
0x722a:	pop	rbx
0x722b:	jmp	0x18d0


0x777d:	mov	rdi, qword ptr [rbx + 0x48]
0x7781:	call	0x18d0


0x7786:	mov	rax, qword ptr [rbx + 0x50]
0x778a:	lea	rdx, [rbx + 8]
0x778e:	cmp	rax, rdx
0x7791:	je	0x77a5


0x77a5:	mov	rdi, qword ptr [rbx + 0x18]
0x77a9:	call	0x18d0


0x7793:	mov	rdi, qword ptr [rax + 0x10]
0x7797:	call	0x18d0


0x779c:	mov	rdi, qword ptr [rbx + 0x50]
0x77a0:	call	0x18d0


0x77ae:	mov	rdi, qword ptr [rbx + 0x60]
0x77b2:	call	0x18d0


0x77b7:	mov	rdi, qword ptr [rbx + 0x58]
0x77bb:	call	0x18d0


0x77c0:	mov	rdi, rbx
0x77c3:	pop	rbx
0x77c4:	jmp	0x18d0


0x77dd:	mov	rdi, qword ptr [rbx + 0x18]
0x77e1:	call	0x18d0


0x77e6:	cmp	byte ptr [rbx + 0x8b], 0
0x77ed:	jne	0x77f8


0x77ef:	pop	rbx
0x77f0:	ret	


0x77f8:	mov	rdi, qword ptr [rbx + 8]
0x77fc:	pop	rbx
0x77fd:	jmp	0x18d0


0x13fd1:	test	r12, r12
0x13fd4:	lea	rbx, [rax + 1]
0x13fd8:	je	0x13fed


0x13fed:	add	rsp, 8
0x13ff1:	mov	rax, rbx
0x13ff4:	pop	rbx
0x13ff5:	pop	rbp
0x13ff6:	pop	r12
0x13ff8:	pop	r13
0x13ffa:	ret	


0x13fda:	cmp	rbx, r12
0x13fdd:	mov	rdx, rbx
0x13fe0:	ja	0x14008


0x13fe2:	mov	rsi, r13
0x13fe5:	mov	rdi, rbp
0x13fe8:	call	0x1ad0


0x14008:	lea	rdx, [r12 - 1]
0x1400d:	mov	byte ptr [rbp + r12 - 1], 0
0x14013:	jmp	0x13fe2


0x2484:	mov	rdx, rbx
0x2487:	mov	rsi, rax
0x248a:	mov	rdi, rbp
0x248d:	call	0x13790


0x140a6:	xor	ecx, ecx
0x140a8:	test	byte ptr [rbp + 0x38], 0x10
0x140ac:	mov	rdx, rax
0x140af:	mov	rsi, qword ptr [rsp + 8]
0x140b4:	je	0x140f6


0x55b9:	mov	rdi, rbx
0x55bc:	lea	rsi, [rax + 1]
0x55c0:	pop	rbx
0x55c1:	jmp	0x5580


0xb2a4:	cmp	rax, 1
0xb2a8:	jne	0xb2d0


0xb2aa:	movzx	ecx, byte ptr [rbx]
0xb2ad:	mov	rdx, rcx
0xb2b0:	and	ecx, 0x3f
0xb2b3:	shr	rdx, 3
0xb2b7:	shl	rax, cl
0xb2ba:	and	edx, 0x18
0xb2bd:	or	qword ptr [rbp + rdx], rax
0xb2c2:	add	rsp, 8
0xb2c6:	xor	eax, eax
0xb2c8:	pop	rbx
0xb2c9:	pop	rbp
0xb2ca:	ret	


0xb2d0:	add	rsp, 8
0xb2d4:	mov	eax, 3
0xb2d9:	pop	rbx
0xb2da:	pop	rbp
0xb2db:	ret	


0xdda3:	test	rax, rax
0xdda6:	je	0xde49


0xddac:	mov	rdx, qword ptr [r12 + 0x20]
0xddb1:	mov	rcx, qword ptr [r12 + 0x28]
0xddb6:	mov	rsi, r12
0xddb9:	mov	r8, qword ptr [rsp + 8]
0xddbe:	mov	rdi, r14
0xddc1:	mov	qword ptr [rcx + rdx*8], rax
0xddc5:	mov	rcx, qword ptr [rsp + 0x30]
0xddca:	add	rdx, 1
0xddce:	mov	qword ptr [rax], rbp
0xddd1:	mov	qword ptr [rax + 8], rbx
0xddd5:	mov	qword ptr [r12 + 0x20], rdx
0xddda:	mov	rdx, rax
0xdddd:	call	0xd540


0xdde2:	cmp	eax, 1
0xdde5:	mov	r11, qword ptr [r14 + 8]
0xdde9:	ja	0xda58


0xde2e:	test	rax, rax
0xde31:	mov	rsi, rax
0xde34:	mov	qword ptr [r12 + 0x10], rax
0xde39:	mov	rcx, qword ptr [rsp + 0x10]
0xde3e:	mov	r11, qword ptr [rsp + 0x18]
0xde43:	jne	0xdd52


0x9811:	mov	r8, qword ptr [rsp + 8]
0x9816:	mov	r9, qword ptr [rsp + 0x10]
0x981b:	test	rax, rax
0x981e:	mov	qword ptr [r9 + r8*8], rax
0x9822:	je	0x9861


0x9824:	add	r8, 1
0x9828:	add	rbx, 1
0x982c:	mov	rcx, qword ptr [rsp + 0x18]
0x9831:	mov	qword ptr [r15 + 0xe8], r8
0x9838:	cmp	rbx, qword ptr [r12]
0x983c:	mov	qword ptr [rax + 8], rbp
0x9840:	mov	qword ptr [rax], rcx
0x9843:	jl	0x97ae


0x8eff:	test	rax, rax
0x8f02:	mov	r14, rax
0x8f05:	je	0x9046


0x9046:	mov	rax, qword ptr [rsp + 0x18]
0x904b:	xor	r14d, r14d
0x904e:	mov	dword ptr [rax], 0xc
0x9054:	jmp	0x8edc


0x8f0b:	lea	rax, [rax + 8]
0x8f0f:	mov	rsi, rbp
0x8f12:	mov	rdi, rax
0x8f15:	mov	rbx, rax
0x8f18:	call	0x8c40


0x8f1d:	test	eax, eax
0x8f1f:	jne	0x90dd


0x8f25:	movzx	eax, byte ptr [r14 + 0x68]
0x8f2a:	movzx	edx, byte ptr [rsp + 4]
0x8f2f:	mov	qword ptr [r14 + 0x50], rbx
0x8f33:	and	edx, 0xf
0x8f36:	and	eax, 0xfffffff0
0x8f39:	or	eax, edx
0x8f3b:	cmp	qword ptr [rbp + 8], 0
0x8f40:	mov	byte ptr [r14 + 0x68], al
0x8f44:	jle	0x9028


0x90dd:	mov	rdi, r14
0x90e0:	call	0x18d0


0x9028:	mov	rdx, r12
0x902b:	mov	rsi, r14
0x902e:	mov	rdi, r13
0x9031:	call	0x66d0


0x8f4a:	lea	rcx, [r14 + 0x18]
0x8f4e:	xor	r15d, r15d
0x8f51:	mov	qword ptr [rsp + 0x10], r12
0x8f56:	xor	r10d, r10d
0x8f59:	mov	r12, r13
0x8f5c:	mov	r13, r15
0x8f5f:	mov	qword ptr [rsp + 8], rcx
0x8f64:	mov	r15, rbx
0x8f67:	nop	word ptr [rax + rax]
0x8f70:	mov	rax, qword ptr [rbp + 0x10]
0x8f74:	mov	rax, qword ptr [rax + r13*8]
0x8f78:	shl	rax, 4
0x8f7c:	add	rax, qword ptr [r12]
0x8f80:	movzx	esi, byte ptr [rax + 8]
0x8f84:	mov	ebx, dword ptr [rax + 8]
0x8f87:	shr	ebx, 8
0x8f8a:	and	bx, 0x3ff
0x8f8f:	cmp	esi, 1
0x8f92:	movzx	edi, bx
0x8f95:	jne	0x8f9b


0x8f97:	test	edi, edi
0x8f99:	je	0x9012


0x8f9b:	movzx	edx, byte ptr [r14 + 0x68]
0x8fa0:	movzx	eax, byte ptr [rax + 0xa]
0x8fa4:	mov	r9d, edx
0x8fa7:	shr	al, 4
0x8faa:	and	edx, 0xffffffdf
0x8fad:	shr	r9b, 5
0x8fb1:	or	eax, r9d
0x8fb4:	and	eax, 1
0x8fb7:	shl	eax, 5
0x8fba:	or	eax, edx
0x8fbc:	cmp	esi, 2
0x8fbf:	mov	byte ptr [r14 + 0x68], al
0x8fc3:	je	0x9090


0x9012:	add	r13, 1
0x9016:	cmp	r13, qword ptr [rbp + 8]
0x901a:	jl	0x8f70


0x9090:	or	eax, 0x10
0x9093:	mov	byte ptr [r14 + 0x68], al
0x9097:	jmp	0x8fd5


0x8fc9:	cmp	esi, 4
0x8fcc:	jne	0x8fd5


0x8f70:	mov	rax, qword ptr [rbp + 0x10]
0x8f74:	mov	rax, qword ptr [rax + r13*8]
0x8f78:	shl	rax, 4
0x8f7c:	add	rax, qword ptr [r12]
0x8f80:	movzx	esi, byte ptr [rax + 8]
0x8f84:	mov	ebx, dword ptr [rax + 8]
0x8f87:	shr	ebx, 8
0x8f8a:	and	bx, 0x3ff
0x8f8f:	cmp	esi, 1
0x8f92:	movzx	edi, bx
0x8f95:	jne	0x8f9b


0x9020:	mov	r13, r12
0x9023:	mov	r12, qword ptr [rsp + 0x10]
0x9028:	mov	rdx, r12
0x902b:	mov	rsi, r14
0x902e:	mov	rdi, r13
0x9031:	call	0x66d0


0x8fd5:	test	edi, edi
0x8fd7:	je	0x9012


0x8fce:	or	eax, 0x40
0x8fd1:	mov	byte ptr [r14 + 0x68], al
0x8fd5:	test	edi, edi
0x8fd7:	je	0x9012


0x8fd9:	cmp	r15, qword ptr [r14 + 0x50]
0x8fdd:	je	0x90a0


0x90a0:	mov	edi, 0x18
0x90a5:	call	0x1b00


0x8fe3:	test	bl, 1
0x8fe6:	je	0x9060


0x9060:	test	bl, 2
0x9063:	je	0x906c


0x8fe8:	test	byte ptr [rsp + 4], 1
0x8fed:	je	0x8ff8


0x906c:	test	bl, 0x10
0x906f:	je	0x9078


0x9065:	test	byte ptr [rsp + 4], 1
0x906a:	jne	0x8ff8


0x8ff8:	mov	rdx, r13
0x8ffb:	sub	rdx, r10
0x8ffe:	js	0x900e


0x8fef:	test	bl, 2
0x8ff2:	je	0x906c


0x9078:	and	ebx, 0x40
0x907b:	je	0x9012


0x9071:	test	byte ptr [rsp + 4], 2
0x9076:	je	0x8ff8


0x900e:	add	r10, 1
0x9012:	add	r13, 1
0x9016:	cmp	r13, qword ptr [rbp + 8]
0x901a:	jl	0x8f70


0x9000:	mov	rsi, qword ptr [rsp + 8]
0x9005:	lea	rdi, [r14 + 0x10]
0x9009:	call	0x7c60


0x907d:	test	byte ptr [rsp + 4], 4
0x9082:	jne	0x9012


0x9084:	jmp	0x8ff8


0x90e5:	jmp	0x9046


0x9195:	test	rax, rax
0x9198:	mov	rbx, rax
0x919b:	je	0x92c8


0x92c8:	mov	dword ptr [r13], 0xc
0x92d0:	xor	ebx, ebx
0x92d2:	jmp	0x927f


0x91a1:	lea	r15, [rax + 8]
0x91a5:	mov	rsi, r14
0x91a8:	mov	rdi, r15
0x91ab:	call	0x8c40


0x91b0:	test	eax, eax
0x91b2:	jne	0x92c0


0x91b8:	mov	rax, qword ptr [r14 + 8]
0x91bc:	mov	qword ptr [rbx + 0x50], r15
0x91c0:	test	rax, rax
0x91c3:	jle	0x926d


0x92c0:	mov	rdi, rbx
0x92c3:	call	0x18d0


0x926d:	mov	rdx, rbp
0x9270:	mov	rsi, rbx
0x9273:	mov	rdi, r12
0x9276:	call	0x66d0


0x91c9:	mov	rsi, qword ptr [r14 + 0x10]
0x91cd:	mov	r8, qword ptr [r12]
0x91d1:	lea	r9, [rsi + rax*8]
0x91d5:	jmp	0x9224


0x9224:	mov	rax, qword ptr [rsi]
0x9227:	shl	rax, 4
0x922b:	add	rax, r8
0x922e:	movzx	edi, byte ptr [rax + 8]
0x9232:	cmp	edi, 1
0x9235:	jne	0x91e0


0x9237:	test	dword ptr [rax + 8], 0x3ff00
0x923e:	je	0x921b


0x91e0:	movzx	ecx, byte ptr [rbx + 0x68]
0x91e4:	movzx	edx, byte ptr [rax + 0xa]
0x91e8:	mov	r10d, ecx
0x91eb:	shr	dl, 4
0x91ee:	and	ecx, 0xffffffdf
0x91f1:	shr	r10b, 5
0x91f5:	or	edx, r10d
0x91f8:	and	edx, 1
0x91fb:	shl	edx, 5
0x91fe:	or	edx, ecx
0x9200:	cmp	edi, 2
0x9203:	mov	byte ptr [rbx + 0x68], dl
0x9206:	je	0x9298


0x921b:	add	rsi, 8
0x921f:	cmp	r9, rsi
0x9222:	je	0x926d


0x9240:	movzx	edx, byte ptr [rbx + 0x68]
0x9244:	movzx	eax, byte ptr [rax + 0xa]
0x9248:	mov	ecx, edx
0x924a:	shr	al, 4
0x924d:	and	edx, 0xffffffdf
0x9250:	shr	cl, 5
0x9253:	or	eax, ecx
0x9255:	and	eax, 1
0x9258:	shl	eax, 5
0x925b:	or	eax, edx
0x925d:	mov	byte ptr [rbx + 0x68], al
0x9260:	add	rsi, 8
0x9264:	or	byte ptr [rbx + 0x68], 0x80
0x9268:	cmp	r9, rsi
0x926b:	jne	0x9224


0x9298:	or	edx, 0x10
0x929b:	mov	byte ptr [rbx + 0x68], dl
0x929e:	jmp	0x921b


0x920c:	cmp	edi, 4
0x920f:	jne	0x92a8


0x9215:	or	edx, 0x40
0x9218:	mov	byte ptr [rbx + 0x68], dl
0x921b:	add	rsi, 8
0x921f:	cmp	r9, rsi
0x9222:	je	0x926d


0x92a8:	cmp	edi, 0xc
0x92ab:	je	0x9260


0x9260:	add	rsi, 8
0x9264:	or	byte ptr [rbx + 0x68], 0x80
0x9268:	cmp	r9, rsi
0x926b:	jne	0x9224


0x92ad:	test	dword ptr [rax + 8], 0x3ff00
0x92b4:	je	0x921b


0x92ba:	jmp	0x9260


0x556f:	test	rax, rax
0x5572:	je	0x5579


0x5574:	add	rsp, 8
0x5578:	ret	


0xbb3b:	test	rax, rax
0xbb3e:	je	0xbd00


0xbd00:	mov	rax, qword ptr [rsp + 8]
0xbd05:	xor	r14d, r14d
0xbd08:	mov	dword ptr [rax], 0xc
0xbd0e:	jmp	0xbcb2


0xbb44:	mov	esi, 1
0xbb49:	mov	edi, 0x50
0xbb4e:	mov	rbx, rax
0xbb51:	call	0x1ab0


0xbcb2:	mov	rdi, qword ptr [rsp + 0x48]
0xbcb7:	xor	rdi, qword ptr fs:[0x28]
0xbcc0:	mov	rax, r14
0xbcc3:	jne	0xbd55


0xbcc9:	add	rsp, 0x58
0xbccd:	pop	rbx
0xbcce:	pop	rbp
0xbccf:	pop	r12
0xbcd1:	pop	r13
0xbcd3:	pop	r14
0xbcd5:	pop	r15
0xbcd7:	ret	


0xbd55:	call	0x19e0


0xbb56:	test	rax, rax
0xbb59:	mov	r15, rax
0xbb5c:	je	0xbd10


0xbd10:	mov	rdi, rbx
0xbd13:	xor	r14d, r14d
0xbd16:	call	0x18d0


0xbb62:	movzx	eax, byte ptr [rax + 0x20]
0xbb66:	sub	rsp, 8
0xbb6a:	mov	edx, r12d
0xbb6d:	push	0
0xbb6f:	and	edx, 1
0xbb72:	mov	rdi, qword ptr [rsp + 0x10]
0xbb77:	lea	rcx, [r15 + 0x48]
0xbb7b:	mov	r9, r14
0xbb7e:	mov	rsi, rbx
0xbb81:	lea	r8, [rsp + 0x28]
0xbb86:	and	eax, 0xfffffffe
0xbb89:	or	eax, edx
0xbb8b:	lea	rdx, [r15 + 0x18]
0xbb8f:	mov	byte ptr [r15 + 0x20], al
0xbb93:	call	0xb2e0


0xbb98:	test	eax, eax
0xbb9a:	pop	rdx
0xbb9b:	pop	rcx
0xbb9c:	jne	0xbd30


0xbba2:	movsx	rcx, byte ptr [r13]
0xbba7:	mov	esi, 1
0xbbac:	test	cl, cl
0xbbae:	je	0xbbea


0xbd30:	mov	rdi, rbx
0xbd33:	mov	dword ptr [rsp], eax
0xbd36:	xor	r14d, r14d
0xbd39:	call	0x18d0


0xbbea:	test	r12b, r12b
0xbbed:	je	0xbc02


0xbbb0:	lea	rax, [rcx + 0x3f]
0xbbb4:	test	rcx, rcx
0xbbb7:	mov	rdx, rcx
0xbbba:	cmovns	rax, rcx
0xbbbe:	sar	rdx, 0x3f
0xbbc2:	add	r13, 1
0xbbc6:	shr	rdx, 0x3a
0xbbca:	sar	rax, 6
0xbbce:	add	rcx, rdx
0xbbd1:	and	ecx, 0x3f
0xbbd4:	sub	rcx, rdx
0xbbd7:	mov	rdx, rsi
0xbbda:	shl	rdx, cl
0xbbdd:	movsx	rcx, byte ptr [r13]
0xbbe2:	or	qword ptr [rbx + rax*8], rdx
0xbbe6:	test	cl, cl
0xbbe8:	jne	0xbbb0


0xbc02:	cmp	dword ptr [rbp + 0xb4], 1
0xbc09:	jle	0xbc23


0xbbef:	lea	rdx, [rbx + 0x20]
0xbbf3:	mov	rax, rbx
0xbbf6:	not	qword ptr [rax]
0xbbf9:	add	rax, 8
0xbbfd:	cmp	rdx, rax
0xbc00:	jne	0xbbf6


0xbc23:	lea	r9, [rsp + 0x20]
0xbc28:	lea	r12, [rbp + 0x70]
0xbc2c:	lea	r13, [rbp + 0x80]
0xbc33:	xor	ecx, ecx
0xbc35:	xor	edx, edx
0xbc37:	mov	byte ptr [rsp + 0x28], 3
0xbc3c:	mov	r8, r9
0xbc3f:	mov	rsi, r13
0xbc42:	mov	rdi, r12
0xbc45:	mov	qword ptr [rsp + 0x20], rbx
0xbc4a:	mov	qword ptr [rsp], r9
0xbc4e:	call	0x87a0


0xbc0b:	mov	rcx, qword ptr [rbp + 0x78]
0xbc0f:	xor	eax, eax
0xbc11:	mov	rdx, qword ptr [rcx + rax]
0xbc15:	and	qword ptr [rbx + rax], rdx
0xbc19:	add	rax, 8
0xbc1d:	cmp	rax, 0x20
0xbc21:	jne	0xbc11


0xbbf6:	not	qword ptr [rax]
0xbbf9:	add	rax, 8
0xbbfd:	cmp	rdx, rax
0xbc00:	jne	0xbbf6


0xbc11:	mov	rdx, qword ptr [rcx + rax]
0xbc15:	and	qword ptr [rbx + rax], rdx
0xbc19:	add	rax, 8
0xbc1d:	cmp	rax, 0x20
0xbc21:	jne	0xbc11


0xbc53:	test	rax, rax
0xbc56:	mov	r14, rax
0xbc59:	je	0xbcf0


0xbcf0:	mov	rdi, rbx
0xbcf3:	call	0x18d0


0xbc5f:	cmp	dword ptr [rbp + 0xb4], 1
0xbc66:	jle	0xbce0


0xbce0:	mov	rdi, r15
0xbce3:	call	0x7200


0xbc68:	or	byte ptr [rbp + 0xb0], 2
0xbc6f:	mov	r9, qword ptr [rsp]
0xbc73:	xor	ecx, ecx
0xbc75:	xor	edx, edx
0xbc77:	mov	rsi, r13
0xbc7a:	mov	rdi, r12
0xbc7d:	mov	byte ptr [rsp + 0x28], 6
0xbc82:	mov	qword ptr [rsp + 0x20], r15
0xbc87:	mov	r8, r9
0xbc8a:	call	0x87a0


0xbc8f:	test	rax, rax
0xbc92:	je	0xbcf0


0xbc94:	lea	r8, [rsp + 0x30]
0xbc99:	mov	rdx, r14
0xbc9c:	mov	rcx, rax
0xbc9f:	mov	rsi, r13
0xbca2:	mov	rdi, r12
0xbca5:	mov	byte ptr [rsp + 0x38], 0xa
0xbcaa:	call	0x87a0


0xbcaf:	mov	r14, rax
0xbcb2:	mov	rdi, qword ptr [rsp + 0x48]
0xbcb7:	xor	rdi, qword ptr fs:[0x28]
0xbcc0:	mov	rax, r14
0xbcc3:	jne	0xbd55


0xbcf8:	mov	rdi, r15
0xbcfb:	call	0x7200


0xbd3e:	mov	rdi, r15
0xbd41:	call	0x7200


0xbd1b:	mov	rax, qword ptr [rsp + 8]
0xbd20:	mov	dword ptr [rax], 0xc
0xbd26:	jmp	0xbcb2


0x137ca:	test	eax, eax
0x137cc:	je	0x137f8


0x137f8:	xor	eax, eax
0x137fa:	add	rsp, 8
0x137fe:	ret	


0x137ce:	lea	rdx, [rip + 0x26ab]
0x137d5:	cdqe	
0x137d7:	lea	rsi, [rip + 0x2742]
0x137de:	xor	edi, edi
0x137e0:	add	rsi, qword ptr [rdx + rax*8]
0x137e4:	mov	edx, 5
0x137e9:	add	rsp, 8
0x137ed:	jmp	0x19b0


0x2492:	test	rax, rax
0x2495:	jne	0x24bd


0x2497:	add	rsp, 8
0x249b:	mov	eax, 1
0x24a0:	pop	rbx
0x24a1:	pop	rbp
0x24a2:	ret	


0x24bd:	lea	rdx, [rip + 0x129a8]
0x24c4:	mov	rcx, rax
0x24c7:	xor	esi, esi
0x24c9:	mov	edi, 1
0x24ce:	xor	eax, eax
0x24d0:	call	0x1bb0


0x90aa:	test	rax, rax
0x90ad:	mov	qword ptr [r14 + 0x50], rax
0x90b1:	je	0x903e


0x903e:	mov	rdi, r14
0x9041:	call	0x7770


0x90b3:	mov	rsi, rbp
0x90b6:	mov	rdi, rax
0x90b9:	call	0x8c40


0x90be:	test	eax, eax
0x90c0:	jne	0x9046


0x90c2:	or	byte ptr [r14 + 0x68], 0x80
0x90c7:	xor	r10d, r10d
0x90ca:	jmp	0x8fe3


0xd103:	test	rax, rax
0xd106:	mov	qword ptr [r15 + 0x10], rax
0xd10a:	je	0xd132


0xd132:	mov	rdi, qword ptr [rbp - 0x60]
0xd136:	call	0x18d0


0xd10c:	mov	rdx, r14
0xd10f:	mov	rsi, r13
0xd112:	mov	rdi, rax
0xd115:	call	0x1ad0


0xd11a:	mov	rsi, qword ptr [rbp - 0xa8]
0xd121:	lea	rdi, [r15 + 0x18]
0xd125:	call	0x8c40


0xd12a:	test	eax, eax
0xd12c:	je	0xce3c


0xd13b:	cmp	byte ptr [rbp - 0xc9], 0
0xd142:	jne	0xd4db


0xee3b:	test	rax, rax
0xee3e:	mov	r12, rax
0xee41:	je	0xf570


0xee47:	cmp	qword ptr [r15 + 0x98], 0
0xee4f:	je	0xf6e5


0xf6e5:	pxor	xmm0, xmm0
0xf6e9:	mov	qword ptr [rsp + 0xe0], rax
0xf6f1:	mov	rdi, qword ptr [rsp]
0xf6f5:	mov	rax, qword ptr [rsp + 0x20]
0xf6fa:	lea	rbx, [rsp + 0xe0]
0xf702:	mov	qword ptr [rsp + 0xe8], 0
0xf70e:	mov	qword ptr [rsp + 0xf0], r13
0xf716:	mov	rsi, rbx
0xf719:	mov	qword ptr [rsp + 0x110], 0
0xf725:	movaps	xmmword ptr [rsp + 0x100], xmm0
0xf72d:	mov	qword ptr [rsp + 0xf8], rax
0xf735:	call	0xe1c0


0xee55:	mov	rdi, rbx
0xee58:	call	0x1b00


0xee5d:	test	rax, rax
0xee60:	mov	rbp, rax
0xee63:	je	0xf568


0xf568:	mov	rdi, r12
0xf56b:	call	0x18d0


0xee69:	mov	r14, qword ptr [rsp + 0x20]
0xee6e:	lea	rbx, [rsp + 0xe0]
0xee76:	mov	qword ptr [rsp + 0x10], r15
0xee7b:	mov	qword ptr [rsp + 0x18], rax
0xee80:	mov	rax, qword ptr [rsp + 8]
0xee85:	xor	esi, esi
0xee87:	mov	rdi, rbp
0xee8a:	lea	rdx, [rax*8]
0xee92:	call	0x1a60


0xee97:	pxor	xmm0, xmm0
0xee9b:	mov	qword ptr [rsp + 0xe0], r12
0xeea3:	mov	qword ptr [rsp + 0xe8], rbp
0xeeab:	mov	qword ptr [rsp + 0xf0], r13
0xeeb3:	mov	rsi, rbx
0xeeb6:	mov	qword ptr [rsp + 0xf8], r14
0xeebe:	mov	rdi, qword ptr [rsp]
0xeec2:	movaps	xmmword ptr [rbx + 0x20], xmm0
0xeec6:	mov	qword ptr [rbx + 0x30], 0
0xeece:	call	0xe1c0


0xc9b5:	test	rax, rax
0xc9b8:	mov	qword ptr [rsp + 0xa0], rax
0xc9c0:	je	0xcc0b


0xc9c6:	mov	qword ptr [rax], rbx
0xc9c9:	mov	ecx, dword ptr [rsp + 0x110]
0xc9d0:	lea	rbx, [rsp + 0x90]
0xc9d8:	mov	rdx, qword ptr [rsp + 0x48]
0xc9dd:	mov	rdi, qword ptr [rsp + 0x30]
0xc9e2:	mov	r12, rbp
0xc9e5:	mov	rsi, rbx
0xc9e8:	mov	dword ptr [rsp + 0x88], 0
0xc9f3:	call	0x8490


0x964d:	test	rax, rax
0x9650:	mov	qword ptr [rsp + 0x60], rax
0x9655:	je	0x974d


0x974d:	mov	qword ptr [rsp + 0x58], 0
0x9756:	mov	qword ptr [rsp + 0x50], 0
0x975f:	mov	eax, 0xc
0x9764:	jmp	0x9660


0x965b:	mov	qword ptr [rax], r14
0x965e:	xor	eax, eax
0x9660:	mov	r15, qword ptr [rsp + 0x10]
0x9665:	mov	rdx, qword ptr [rsp + 0x20]
0x966a:	mov	rdi, r13
0x966d:	mov	ecx, dword ptr [rsp + 0x2c]
0x9671:	mov	dword ptr [rsp + 0x4c], eax
0x9675:	mov	rsi, r15
0x9678:	call	0x8490


0x9660:	mov	r15, qword ptr [rsp + 0x10]
0x9665:	mov	rdx, qword ptr [rsp + 0x20]
0x966a:	mov	rdi, r13
0x966d:	mov	ecx, dword ptr [rsp + 0x2c]
0x9671:	mov	dword ptr [rsp + 0x4c], eax
0x9675:	mov	rsi, r15
0x9678:	call	0x8490


0x96e1:	test	rax, rax
0x96e4:	mov	qword ptr [rsp + 0x60], rax
0x96e9:	je	0x972c


0x96eb:	mov	rdi, qword ptr [rsp + 8]
0x96f0:	mov	dword ptr [rsp + 0x4c], 0
0x96f8:	mov	r10, qword ptr [rsp + 0x18]
0x96fd:	mov	qword ptr [rax], rdi
0x9700:	jmp	0x958e


0x958e:	mov	rdx, qword ptr [rsp + 0x10]
0x9593:	mov	rdi, qword ptr [rsp + 0x38]
0x9598:	mov	rsi, r13
0x959b:	mov	qword ptr [rsp + 8], r10
0x95a0:	call	0x90f0


0xe8c1:	test	rax, rax
0xe8c4:	mov	rdi, rax
0xe8c7:	mov	qword ptr [rsp + 0x1d8], rax
0xe8cf:	je	0xf5c0


0xe83e:	mov	rdi, r14
0xe841:	mov	r15, rax
0xe844:	mov	qword ptr [rsp + 0x1f8], rax
0xe84c:	shl	rdi, 4
0xe850:	call	0x1b00


0xe855:	test	rax, rax
0xe858:	mov	qword ptr [rsp + 0x218], rax
0xe860:	je	0xf570


0xe866:	test	r15, r15
0xe869:	je	0xf570


0xff4e:	mov	rdx, qword ptr [rsp + 0x20]
0xff53:	test	rax, rax
0xff56:	mov	qword ptr [rdx + 0x48], rax
0xff5a:	je	0xffa3


0xffa3:	mov	eax, 0xc
0xffa8:	jmp	0xfcc8


0xff5c:	cmp	qword ptr [rbx + 8], 0
0xff61:	mov	dword ptr [rsp + 0x60], 0
0xff69:	jg	0xff7e


0xff6b:	jmp	0xfd2c


0xff7e:	mov	rax, qword ptr [rbx + 0x10]
0xff82:	mov	rdi, r14
0xff85:	mov	rax, qword ptr [rax + r15*8]
0xff89:	lea	rdx, [rax + rax*2]
0xff8d:	mov	rax, qword ptr [r12 + 0x38]
0xff92:	lea	rsi, [rax + rdx*8]
0xff96:	call	0x8000


0xff9b:	test	eax, eax
0xff9d:	mov	dword ptr [rsp + 0x60], eax
0xffa1:	je	0xff70


0xff70:	add	r15, 1
0xff74:	cmp	r15, qword ptr [rbx + 8]
0xff78:	jge	0xfd2c


0x139b8:	test	rax, rax
0x139bb:	mov	rbp, rax
0x139be:	je	0x13c50


0x13c50:	mov	r12, -2
0x13c57:	jmp	0x13a12


0x139c4:	sub	rsp, 8
0x139c8:	mov	rcx, rbx
0x139cb:	mov	rdi, r15
0x139ce:	mov	eax, dword ptr [rsp + 0x34]
0x139d2:	push	rax
0x139d3:	push	rbp
0x139d4:	push	r14
0x139d6:	mov	r9, qword ptr [rsp + 0x40]
0x139db:	mov	r8, qword ptr [rsp + 0x28]
0x139e0:	mov	rdx, qword ptr [rsp + 0x38]
0x139e5:	mov	rsi, qword ptr [rsp + 0x30]
0x139ea:	call	0xe500


0x139ef:	add	rsp, 0x20
0x139f3:	test	eax, eax
0x139f5:	je	0x13a28


0x13a28:	test	r12, r12
0x13a2b:	je	0x13af8


0x139f7:	cmp	eax, 1
0x139fa:	mov	r12, -1
0x13a01:	je	0x13a0a


0x13af8:	cmp	byte ptr [rsp + 0x28], 0
0x13afd:	mov	r12, qword ptr [rbp]
0x13b01:	je	0x13a0a


0x13a31:	movzx	eax, byte ptr [r15 + 0x38]
0x13a36:	lea	rdx, [r13 + 1]
0x13a3a:	shr	al, 1
0x13a3c:	and	eax, 3
0x13a3f:	je	0x13bb0


0x13a0a:	mov	rdi, rbp
0x13a0d:	call	0x18d0


0x13a03:	mov	r12, -2
0x13a0a:	mov	rdi, rbp
0x13a0d:	call	0x18d0


0x13b07:	cmp	r12, rbx
0x13b0a:	jne	0x13d02


0x13bb0:	lea	r14, [rdx*8]
0x13bb8:	mov	qword ptr [rsp + 8], rdx
0x13bbd:	mov	rdi, r14
0x13bc0:	call	0x1b00


0x13a45:	cmp	eax, 1
0x13a48:	je	0x13c60


0x13b10:	mov	r12, qword ptr [rbp + 8]
0x13b14:	sub	r12, rbx
0x13b17:	jmp	0x13a0a


0x13d02:	lea	rcx, [rip + 0x20e7]
0x13d09:	lea	rsi, [rip + 0x1b20]
0x13d10:	lea	rdi, [rip + 0x1c3e]
0x13d17:	mov	edx, 0x1be
0x13d1c:	call	0x1a50


0x13c60:	cmp	qword ptr [r12], rdx
0x13c64:	mov	r9d, 1
0x13c6a:	jae	0x13a67


0x13a4e:	cmp	eax, 2
0x13a51:	jne	0x13d40


0x13c70:	lea	rcx, [rdx*8]
0x13c78:	mov	rdi, qword ptr [r12 + 8]
0x13c7d:	mov	byte ptr [rsp + 0x18], r9b
0x13c82:	mov	qword ptr [rsp + 0x10], rdx
0x13c87:	mov	rsi, rcx
0x13c8a:	mov	qword ptr [rsp + 8], rcx
0x13c8f:	call	0x1b60


0x13a67:	test	r13, r13
0x13a6a:	jle	0x13cd8


0x13a57:	cmp	r14, qword ptr [r12]
0x13a5b:	ja	0x13d21


0x13d40:	lea	rcx, [rip + 0x2099]
0x13d47:	lea	rsi, [rip + 0x1ae2]
0x13d4e:	lea	rdi, [rip + 0x1bcb]
0x13d55:	mov	edx, 0x1f9
0x13d5a:	call	0x1a50


0x13cd8:	xor	edx, edx
0x13cda:	xor	r13d, r13d
0x13cdd:	jmp	0x13aab


0x13a70:	mov	r8, qword ptr [r12 + 8]
0x13a75:	mov	rdi, qword ptr [r12 + 0x10]
0x13a7a:	lea	rsi, [r13*8]
0x13a82:	mov	rdx, r13
0x13a85:	xor	eax, eax
0x13a87:	nop	word ptr [rax + rax]
0x13a90:	mov	rcx, qword ptr [rbp + rax*2]
0x13a95:	mov	qword ptr [r8 + rax], rcx
0x13a99:	mov	rcx, qword ptr [rbp + rax*2 + 8]
0x13a9e:	mov	qword ptr [rdi + rax], rcx
0x13aa2:	add	rax, 8
0x13aa6:	cmp	rsi, rax
0x13aa9:	jne	0x13a90


0x13a61:	mov	r9d, 2
0x13a67:	test	r13, r13
0x13a6a:	jle	0x13cd8


0x13d21:	lea	rcx, [rip + 0x20b8]
0x13d28:	lea	rsi, [rip + 0x1b01]
0x13d2f:	lea	rdi, [rip + 0x1c07]
0x13d36:	mov	edx, 0x1fb
0x13d3b:	call	0x1a50


0x13aab:	cmp	qword ptr [r12], rdx
0x13aaf:	jbe	0x13add


0x13a90:	mov	rcx, qword ptr [rbp + rax*2]
0x13a95:	mov	qword ptr [r8 + rax], rcx
0x13a99:	mov	rcx, qword ptr [rbp + rax*2 + 8]
0x13a9e:	mov	qword ptr [rdi + rax], rcx
0x13aa2:	add	rax, 8
0x13aa6:	cmp	rsi, rax
0x13aa9:	jne	0x13a90


0x13add:	movzx	eax, byte ptr [r15 + 0x38]
0x13ae2:	lea	r13d, [r9 + r9]
0x13ae6:	and	eax, 0xfffffff9
0x13ae9:	or	eax, r13d
0x13aec:	test	al, 6
0x13aee:	mov	byte ptr [r15 + 0x38], al
0x13af2:	je	0x13a03


0x13ab1:	mov	rsi, qword ptr [r12 + 0x10]
0x13ab6:	mov	rcx, qword ptr [r12 + 8]
0x13abb:	mov	rax, -1
0x13ac2:	nop	word ptr [rax + rax]
0x13ac8:	mov	qword ptr [rsi + rdx*8], rax
0x13acc:	add	r13, 1
0x13ad0:	mov	qword ptr [rcx + rdx*8], rax
0x13ad4:	cmp	r13, qword ptr [r12]
0x13ad8:	mov	rdx, r13
0x13adb:	jb	0x13ac8


0x13ac8:	mov	qword ptr [rsi + rdx*8], rax
0x13acc:	add	r13, 1
0x13ad0:	mov	qword ptr [rcx + rdx*8], rax
0x13ad4:	cmp	r13, qword ptr [r12]
0x13ad8:	mov	rdx, r13
0x13adb:	jb	0x13ac8


0x13c94:	test	rax, rax
0x13c97:	mov	r14, rax
0x13c9a:	je	0x13cea


0x13cea:	xor	r9d, r9d
0x13ced:	jmp	0x13add


0x13c9c:	mov	rcx, qword ptr [rsp + 8]
0x13ca1:	mov	rdi, qword ptr [r12 + 0x10]
0x13ca6:	mov	rsi, rcx
0x13ca9:	call	0x1b60


0x13cae:	test	rax, rax
0x13cb1:	mov	rdx, qword ptr [rsp + 0x10]
0x13cb6:	movzx	r9d, byte ptr [rsp + 0x18]
0x13cbc:	je	0x13cf2


0x13cf2:	mov	rdi, r14
0x13cf5:	call	0x18d0


0x13cbe:	mov	qword ptr [r12 + 8], r14
0x13cc3:	mov	qword ptr [r12 + 0x10], rax
0x13cc8:	mov	qword ptr [r12], rdx
0x13ccc:	jmp	0x13a67


0x13cfa:	xor	r9d, r9d
0x13cfd:	jmp	0x13add


0x13bc5:	test	rax, rax
0x13bc8:	mov	qword ptr [r12 + 8], rax
0x13bcd:	mov	rdx, qword ptr [rsp + 8]
0x13bd2:	je	0x13cea


0x13bd8:	mov	rdi, r14
0x13bdb:	mov	qword ptr [rsp + 8], rdx
0x13be0:	mov	qword ptr [rsp + 0x10], rax
0x13be5:	call	0x1b00


0x13bea:	test	rax, rax
0x13bed:	mov	qword ptr [r12 + 0x10], rax
0x13bf2:	mov	rdx, qword ptr [rsp + 8]
0x13bf7:	mov	rcx, qword ptr [rsp + 0x10]
0x13bfc:	je	0x13ce2


0x13ce2:	mov	rdi, rcx
0x13ce5:	call	0x18d0


0x13c02:	mov	qword ptr [r12], rdx
0x13c06:	mov	r9d, 1
0x13c0c:	jmp	0x13a67


0x13e22:	test	rax, rax
0x13e25:	mov	r13, rax
0x13e28:	je	0x13e60


0x13e2a:	mov	rsi, qword ptr [rsp + 8]
0x13e2f:	mov	rdx, rbx
0x13e32:	mov	rdi, rax
0x13e35:	call	0x1ad0


0x13e3a:	lea	rdi, [r13 + rbx]
0x13e3f:	mov	rsi, r14
0x13e42:	mov	rdx, rbp
0x13e45:	mov	r14, r13
0x13e48:	call	0x1ad0


0x13e4d:	mov	rcx, qword ptr [rsp + 0x10]
0x13e52:	mov	r8d, dword ptr [rsp + 0x1c]
0x13e57:	jmp	0x13dc8


0x8d1f:	test	rax, rax
0x8d22:	mov	qword ptr [r12 + 0x10], rax
0x8d27:	je	0x8e18


0x8e18:	mov	eax, 0xc
0x8e1d:	jmp	0x8da2


0x8d2d:	mov	r9, qword ptr [rbx + 0x10]
0x8d31:	mov	r8, qword ptr [rbp + 0x10]
0x8d35:	xor	ebx, ebx
0x8d37:	xor	ecx, ecx
0x8d39:	xor	esi, esi
0x8d3b:	jmp	0x8d5e


0x8da2:	pop	rbx
0x8da3:	pop	rbp
0x8da4:	pop	r12
0x8da6:	pop	r13
0x8da8:	pop	r14
0x8daa:	ret	


0x8d5e:	mov	rdx, qword ptr [r8 + rsi*8]
0x8d62:	mov	rdi, qword ptr [r9 + rcx*8]
0x8d66:	add	rbx, 1
0x8d6a:	cmp	rdx, rdi
0x8d6d:	jle	0x8d40


0x8d40:	sete	dil
0x8d44:	mov	qword ptr [rax + rbx*8 - 8], rdx
0x8d49:	add	rsi, 1
0x8d4d:	movzx	edi, dil
0x8d51:	add	rcx, rdi
0x8d54:	cmp	r13, rsi
0x8d57:	jle	0x8dc0


0x8d6f:	add	rcx, 1
0x8d73:	mov	qword ptr [rax + rbx*8 - 8], rdi
0x8d78:	jmp	0x8d54


0x8dc0:	cmp	r14, rcx
0x8dc3:	jg	0x8df8


0x8d59:	cmp	r14, rcx
0x8d5c:	jle	0x8dd8


0x8d54:	cmp	r13, rsi
0x8d57:	jle	0x8dc0


0x8dc5:	mov	qword ptr [r12 + 8], rbx
0x8dca:	xor	eax, eax
0x8dcc:	pop	rbx
0x8dcd:	pop	rbp
0x8dce:	pop	r12
0x8dd0:	pop	r13
0x8dd2:	pop	r14
0x8dd4:	ret	


0x8df8:	sub	r14, rcx
0x8dfb:	lea	rdi, [rax + rbx*8]
0x8dff:	lea	rsi, [r9 + rcx*8]
0x8e03:	lea	rdx, [r14*8]
0x8e0b:	add	rbx, r14
0x8e0e:	call	0x1ad0


0x8dd8:	sub	r13, rsi
0x8ddb:	lea	rdi, [rax + rbx*8]
0x8ddf:	lea	rsi, [r8 + rsi*8]
0x8de3:	lea	rdx, [r13*8]
0x8deb:	add	rbx, r13
0x8dee:	call	0x1ad0


0x8df3:	jmp	0x8dc5


0x8e13:	jmp	0x8dc5


0xd402:	test	rax, rax
0xd405:	mov	qword ptr [rbp - 0xc0], rax
0xd40c:	mov	byte ptr [rbp - 0xc9], 1
0xd413:	jne	0xcd27


0xd419:	mov	rdi, qword ptr [rbp - 0x88]
0xd420:	test	rdi, rdi
0xd423:	je	0xd3ec


0xcd27:	mov	rdx, qword ptr [rbp - 0xb8]
0xcd2e:	mov	rdi, qword ptr [rbp - 0xc0]
0xcd35:	mov	rsi, r13
0xcd38:	call	0x1ad0


0xd425:	call	0xb1a0


0x12778:	test	r14, r14
0x1277b:	mov	qword ptr [rbx], rax
0x1277e:	je	0x13465


0x13465:	xor	ebp, ebp
0x13467:	mov	esi, 1
0x1346c:	jmp	0x1279d


0x12784:	mov	esi, 1
0x12789:	nop	dword ptr [rax]
0x12790:	add	rsi, rsi
0x12793:	cmp	qword ptr [rsp], rsi
0x12797:	jae	0x12790


0x1279d:	mov	edi, 0x18
0x127a2:	call	0x1ab0


0x12799:	lea	rbp, [rsi - 1]
0x1279d:	mov	edi, 0x18
0x127a2:	call	0x1ab0


0x12790:	add	rsi, rsi
0x12793:	cmp	qword ptr [rsp], rsi
0x12797:	jae	0x12790


0x127a7:	mov	qword ptr [rbx + 0x88], rbp
0x127ae:	mov	qword ptr [rbx + 0x40], rax
0x127b2:	call	0x19c0


0x127b7:	mov	edi, 0xe
0x127bc:	mov	dword ptr [rbx + 0xb4], eax
0x127c2:	call	0x1b30


0x65f1:	test	rax, rax
0x65f4:	mov	qword ptr [rbx + 0x10], rax
0x65f8:	je	0x6688


0x6688:	mov	qword ptr [rbx + 8], 0
0x6690:	mov	qword ptr [rbx], 0
0x6697:	jmp	0x65ce


0x65fe:	mov	qword ptr [rax], rbp
0x6601:	add	rsp, 8
0x6605:	mov	eax, 1
0x660a:	pop	rbx
0x660b:	pop	rbp
0x660c:	ret	


0x8845:	test	rax, rax
0x8848:	mov	rdi, rax
0x884b:	je	0x887c


0x887c:	xor	eax, eax
0x887e:	jmp	0x881b


0x884d:	mov	rax, qword ptr [rbx]
0x8850:	mov	r10d, 1
0x8856:	mov	qword ptr [rbx], rdi
0x8859:	xor	r9d, r9d
0x885c:	mov	r8, qword ptr [rsp + 0x18]
0x8861:	mov	rcx, qword ptr [rsp + 0x10]
0x8866:	mov	rdx, qword ptr [rsp + 8]
0x886b:	mov	rsi, qword ptr [rsp]
0x886f:	mov	qword ptr [rdi], rax
0x8872:	mov	eax, 8
0x8877:	jmp	0x87c4


0x87c4:	shl	r9, 6
0x87c8:	mov	dword ptr [rsi], r10d
0x87cb:	add	rax, rdi
0x87ce:	lea	rsi, [rdi + r9]
0x87d2:	mov	qword ptr [rsi + 8], 0
0x87da:	mov	qword ptr [rsi + 0x10], rdx
0x87de:	lea	rdi, [rsi + 0x20]
0x87e2:	mov	qword ptr [rsi + 0x18], rcx
0x87e6:	movdqu	xmm0, xmmword ptr [r8]
0x87eb:	movups	xmmword ptr [rsi + 0x30], xmm0
0x87ef:	and	byte ptr [rdi + 0x1a], 0xf3
0x87f3:	test	rdx, rdx
0x87f6:	mov	qword ptr [rsi + 0x20], 0
0x87fe:	mov	qword ptr [rsi + 0x28], 0
0x8806:	mov	qword ptr [rsi + 0x40], -1
0x880e:	je	0x8813


0x8c6b:	test	rax, rax
0x8c6e:	mov	qword ptr [rbx + 0x10], rax
0x8c72:	je	0x8cb0


0x8cb0:	mov	qword ptr [rbx + 8], 0
0x8cb8:	mov	qword ptr [rbx], 0
0x8cbf:	mov	eax, 0xc
0x8cc4:	jmp	0x8c8a


0x8c74:	mov	rsi, qword ptr [rbp + 0x10]
0x8c78:	lea	rdx, [r12*8]
0x8c80:	mov	rdi, rax
0x8c83:	call	0x1ad0


0x8c8a:	pop	rbx
0x8c8b:	pop	rbp
0x8c8c:	pop	r12
0x8c8e:	ret	


0x8c88:	xor	eax, eax
0x8c8a:	pop	rbx
0x8c8b:	pop	rbp
0x8c8c:	pop	r12
0x8c8e:	ret	


0xccb5:	lea	rcx, [rbp - 0x50]
0xccb9:	test	rax, rax
0xccbc:	mov	qword ptr [rbp - 0x40], rax
0xccc0:	mov	qword ptr [rbp - 0x88], rcx
0xccc7:	je	0xd3ec


0x5389:	test	rax, rax
0x538c:	jne	0x5393


0x538e:	test	rbx, rbx
0x5391:	jne	0x5395


0x5393:	pop	rbx
0x5394:	ret	


0x5395:	call	0x55d0


0x5539:	mov	rdx, rbx
0x553c:	xor	esi, esi
0x553e:	mov	rdi, rax
0x5541:	pop	rbx
0x5542:	jmp	0x1a60


0x5594:	add	rsp, 8
0x5598:	mov	rdx, rbx
0x559b:	mov	rsi, rbp
0x559e:	pop	rbx
0x559f:	pop	rbp
0x55a0:	mov	rdi, rax
0x55a3:	jmp	0x1ad0


0x6705:	test	rax, rax
0x6708:	mov	qword ptr [rbp + 0x30], rax
0x670c:	je	0x674e


0x674e:	pop	rbx
0x674f:	mov	eax, 0xc
0x6754:	pop	rbp
0x6755:	pop	r12
0x6757:	pop	r13
0x6759:	pop	r14
0x675b:	ret	


0x670e:	test	rbx, rbx
0x6711:	jle	0x6760


0x6760:	and	r12, qword ptr [r14 + 0x88]
0x6767:	mov	rax, qword ptr [r14 + 0x40]
0x676b:	lea	rdx, [r12 + r12*2]
0x676f:	lea	rbx, [rax + rdx*8]
0x6773:	mov	rdx, qword ptr [rbx]
0x6776:	cmp	qword ptr [rbx + 8], rdx
0x677a:	mov	rax, qword ptr [rbx + 0x10]
0x677e:	lea	rsi, [rdx + 1]
0x6782:	jle	0x6796


0x6713:	xor	ebx, ebx
0x6715:	jmp	0x672a


0x6796:	lea	r12, [rsi + rsi]
0x679a:	mov	rdi, rax
0x679d:	shl	rsi, 4
0x67a1:	call	0x1b60


0x6784:	mov	qword ptr [rbx], rsi
0x6787:	mov	qword ptr [rax + rdx*8], rbp
0x678b:	xor	eax, eax
0x678d:	pop	rbx
0x678e:	pop	rbp
0x678f:	pop	r12
0x6791:	pop	r13
0x6793:	pop	r14
0x6795:	ret	


0x672a:	mov	rax, qword ptr [rbp + 0x18]
0x672e:	mov	rsi, qword ptr [rax + rbx*8]
0x6732:	mov	rax, rsi
0x6735:	shl	rax, 4
0x6739:	add	rax, qword ptr [r14]
0x673c:	test	byte ptr [rax + 8], 8
0x6740:	jne	0x6720


0x6742:	mov	rdi, r13
0x6745:	call	0x6530


0x6720:	add	rbx, 1
0x6724:	cmp	qword ptr [rbp + 0x10], rbx
0x6728:	jle	0x6760


0x674a:	test	al, al
0x674c:	jne	0x6720


0x67a6:	test	rax, rax
0x67a9:	je	0x674e


0x67ab:	mov	rdx, qword ptr [rbx]
0x67ae:	mov	qword ptr [rbx + 0x10], rax
0x67b2:	mov	qword ptr [rbx + 8], r12
0x67b6:	lea	rsi, [rdx + 1]
0x67ba:	jmp	0x6784


0x927b:	test	eax, eax
0x927d:	jne	0x92d4


0x92d4:	mov	rdi, rbx
0x92d7:	call	0x7770


0x9036:	test	eax, eax
0x9038:	je	0x8edc


0x823c:	test	rax, rax
0x823f:	mov	qword ptr [rsp + 0x30], rax
0x8244:	je	0x8480


0x8480:	mov	eax, 0xc
0x8485:	jmp	0x8386


0x824a:	mov	rax, qword ptr [r15 + 0x30]
0x824e:	mov	rdx, qword ptr [r15]
0x8251:	mov	r13, rbp
0x8254:	shl	r13, 4
0x8258:	mov	qword ptr [rax + rbx + 8], -1
0x8261:	lea	rax, [rdx + r13]
0x8265:	mov	r8d, dword ptr [rax + 8]
0x8269:	test	r8d, 0x3ff00
0x8270:	jne	0x8410


0x8386:	mov	rsi, qword ptr [rsp + 0x58]
0x838b:	xor	rsi, qword ptr fs:[0x28]
0x8394:	jne	0x848a


0x8276:	test	byte ptr [rax + 8], 8
0x827a:	je	0x8340


0x8410:	cmp	qword ptr [r12 + 8], 0
0x8416:	je	0x8340


0x839a:	add	rsp, 0x68
0x839e:	pop	rbx
0x839f:	pop	rbp
0x83a0:	pop	r12
0x83a2:	pop	r13
0x83a4:	pop	r14
0x83a6:	pop	r15
0x83a8:	ret	


0x848a:	call	0x19e0


0x8340:	lea	rdi, [rsp + 0x20]
0x8345:	mov	rsi, rbp
0x8348:	call	0x65a0


0x8280:	mov	rsi, qword ptr [r15 + 0x28]
0x8284:	lea	rax, [rsi + rbx]
0x8288:	cmp	qword ptr [rax + 8], 0
0x828d:	jle	0x8340


0x841c:	mov	rcx, qword ptr [r12 + 0x10]
0x8421:	mov	rcx, qword ptr [rcx]
0x8424:	shl	rcx, 4
0x8428:	test	byte ptr [rdx + rcx + 0xa], 4
0x842d:	jne	0x8276


0x8293:	lea	rdx, [rsp + 0x20]
0x8298:	mov	byte ptr [rsp + 0x1b], 0
0x829d:	xor	r14d, r14d
0x82a0:	lea	r12, [rsp + 0x40]
0x82a5:	mov	qword ptr [rsp + 8], rdx
0x82aa:	jmp	0x82c6


0x8433:	shr	r8d, 8
0x8437:	mov	rcx, rbp
0x843a:	mov	rdx, rbp
0x843d:	and	r8d, 0x3ff
0x8444:	mov	rsi, rbp
0x8447:	mov	rdi, r15
0x844a:	call	0x74f0


0x82c6:	mov	rax, qword ptr [rax + 0x10]
0x82ca:	mov	rdx, qword ptr [rax + r14*8]
0x82ce:	mov	rax, qword ptr [r15 + 0x30]
0x82d2:	lea	r8, [rdx + rdx*2]
0x82d6:	lea	r13, [r8*8]
0x82de:	add	rax, r13
0x82e1:	mov	rcx, qword ptr [rax + 8]
0x82e5:	cmp	rcx, -1
0x82e9:	je	0x83b0


0x83b0:	lea	rax, [rsi + rbx]
0x83b4:	add	r14, 1
0x83b8:	mov	byte ptr [rsp + 0x1b], 1
0x83bd:	cmp	qword ptr [rax + 8], r14
0x83c1:	jg	0x82c6


0x82ef:	test	rcx, rcx
0x82f2:	je	0x8468


0x83c7:	lea	rdi, [rsp + 0x20]
0x83cc:	mov	rsi, rbp
0x83cf:	call	0x65a0


0x8468:	mov	rsi, r15
0x846b:	mov	rdi, r12
0x846e:	call	0x81e0


0x82f8:	movdqu	xmm0, xmmword ptr [rax]
0x82fc:	movaps	xmmword ptr [rsp + 0x40], xmm0
0x8301:	mov	rax, qword ptr [rax + 0x10]
0x8305:	mov	qword ptr [rsp + 0x50], rax
0x830a:	mov	rdi, qword ptr [rsp + 8]
0x830f:	mov	rsi, r12
0x8312:	call	0x8000


0x8317:	test	eax, eax
0x8319:	jne	0x8386


0x831b:	mov	rax, qword ptr [r15 + 0x30]
0x831f:	cmp	qword ptr [rax + r13 + 8], 0
0x8325:	jne	0x82b0


0x8327:	mov	rdi, qword ptr [rsp + 0x50]
0x832c:	call	0x18d0


0x82b0:	mov	rsi, qword ptr [r15 + 0x28]
0x82b4:	add	r14, 1
0x82b8:	lea	rax, [rsi + rbx]
0x82bc:	cmp	qword ptr [rax + 8], r14
0x82c0:	jle	0x83c7


0x8331:	mov	byte ptr [rsp + 0x1b], 1
0x8336:	jmp	0x82b0


0x8473:	test	eax, eax
0x8475:	je	0x830a


0x830a:	mov	rdi, qword ptr [rsp + 8]
0x830f:	mov	rsi, r12
0x8312:	call	0x8000


0x847b:	jmp	0x8386


0x844f:	test	eax, eax
0x8451:	jne	0x8386


0x8457:	mov	rax, qword ptr [r15]
0x845a:	add	rax, r13
0x845d:	jmp	0x8276


0x83d4:	test	al, al
0x83d6:	je	0x8480


0x83dc:	cmp	byte ptr [rsp + 0x1c], 1
0x83e1:	mov	rax, qword ptr [r15 + 0x30]
0x83e5:	lea	rdx, [rax + rbx]
0x83e9:	je	0x8359


0x8359:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x835f:	movups	xmmword ptr [rax + rbx], xmm0
0x8363:	mov	rdx, qword ptr [rsp + 0x30]
0x8368:	mov	qword ptr [rax + rbx + 0x10], rdx
0x836d:	mov	rbx, qword ptr [rsp + 0x10]
0x8372:	mov	rax, qword ptr [rsp + 0x30]
0x8377:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x837d:	movaps	xmmword ptr [rbx], xmm0
0x8380:	mov	qword ptr [rbx + 0x10], rax
0x8384:	xor	eax, eax
0x8386:	mov	rsi, qword ptr [rsp + 0x58]
0x838b:	xor	rsi, qword ptr fs:[0x28]
0x8394:	jne	0x848a


0x83ef:	cmp	byte ptr [rsp + 0x1b], 0
0x83f4:	je	0x8359


0x83fa:	mov	qword ptr [rdx + 8], 0
0x8402:	jmp	0x836d


0x836d:	mov	rbx, qword ptr [rsp + 0x10]
0x8372:	mov	rax, qword ptr [rsp + 0x30]
0x8377:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x837d:	movaps	xmmword ptr [rbx], xmm0
0x8380:	mov	qword ptr [rbx + 0x10], rax
0x8384:	xor	eax, eax
0x8386:	mov	rsi, qword ptr [rsp + 0x58]
0x838b:	xor	rsi, qword ptr fs:[0x28]
0x8394:	jne	0x848a


0x834d:	test	al, al
0x834f:	je	0x8480


0x8355:	mov	rax, qword ptr [r15 + 0x30]
0x8359:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x835f:	movups	xmmword ptr [rax + rbx], xmm0
0x8363:	mov	rdx, qword ptr [rsp + 0x30]
0x8368:	mov	qword ptr [rax + rbx + 0x10], rdx
0x836d:	mov	rbx, qword ptr [rsp + 0x10]
0x8372:	mov	rax, qword ptr [rsp + 0x30]
0x8377:	movdqa	xmm0, xmmword ptr [rsp + 0x20]
0x837d:	movaps	xmmword ptr [rbx], xmm0
0x8380:	mov	qword ptr [rbx + 0x10], rax
0x8384:	xor	eax, eax
0x8386:	mov	rsi, qword ptr [rsp + 0x58]
0x838b:	xor	rsi, qword ptr fs:[0x28]
0x8394:	jne	0x848a


0x84d8:	test	rax, rax
0x84db:	mov	qword ptr [rsp + 0x20], rax
0x84e0:	je	0x85dd


0x85dd:	mov	eax, 0xc
0x85e2:	jmp	0x85be


0x84e6:	test	r12, r12
0x84e9:	jle	0x857b


0x85be:	mov	rdx, qword ptr [rsp + 0x28]
0x85c3:	xor	rdx, qword ptr fs:[0x28]
0x85cc:	jne	0x85e4


0x857b:	mov	rdi, qword ptr [r15 + 0x10]
0x857f:	call	0x18d0


0x84ef:	lea	r12, [rsp + 0x10]
0x84f4:	xor	r13d, r13d
0x84f7:	nop	word ptr [rax + rax]
0x8500:	mov	rax, qword ptr [r15 + 0x10]
0x8504:	mov	rdx, qword ptr [rax + r13*8]
0x8508:	mov	rax, qword ptr [r14 + 0x30]
0x850c:	lea	rcx, [rdx + rdx*2]
0x8510:	lea	rsi, [rax + rcx*8]
0x8514:	mov	r8, qword ptr [rsi + 8]
0x8518:	test	r8, r8
0x851b:	jle	0x85a0


0x85ce:	add	rsp, 0x38
0x85d2:	pop	rbx
0x85d3:	pop	rbp
0x85d4:	pop	r12
0x85d6:	pop	r13
0x85d8:	pop	r14
0x85da:	pop	r15
0x85dc:	ret	


0x85e4:	call	0x19e0


0x85a0:	mov	rdi, r12
0x85a3:	call	0x8000


0x8521:	mov	r10, qword ptr [rsi + 0x10]
0x8525:	mov	r9, qword ptr [r14]
0x8528:	xor	ecx, ecx
0x852a:	jmp	0x8539


0x8539:	mov	rdi, qword ptr [r10 + rcx*8]
0x853d:	mov	rax, rdi
0x8540:	shl	rax, 4
0x8544:	add	rax, r9
0x8547:	movzx	r11d, byte ptr [rax + 8]
0x854c:	cmp	ebx, r11d
0x854f:	jne	0x8530


0x8551:	cmp	rbp, qword ptr [rax]
0x8554:	jne	0x8530


0x8530:	add	rcx, 1
0x8534:	cmp	r8, rcx
0x8537:	je	0x85a0


0x8556:	cmp	rdi, -1
0x855a:	je	0x85a0


0x855c:	mov	r8d, ebx
0x855f:	mov	rcx, rbp
0x8562:	mov	rsi, r12
0x8565:	mov	rdi, r14
0x8568:	call	0x7b60


0x856d:	test	eax, eax
0x856f:	jne	0x85ac


0x8571:	add	r13, 1
0x8575:	cmp	qword ptr [r15 + 8], r13
0x8579:	jg	0x8500


0x85ac:	mov	rdi, qword ptr [rsp + 0x20]
0x85b1:	mov	dword ptr [rsp + 0xc], eax
0x85b5:	call	0x18d0


0x8500:	mov	rax, qword ptr [r15 + 0x10]
0x8504:	mov	rdx, qword ptr [rax + r13*8]
0x8508:	mov	rax, qword ptr [r14 + 0x30]
0x850c:	lea	rcx, [rdx + rdx*2]
0x8510:	lea	rsi, [rax + rcx*8]
0x8514:	mov	r8, qword ptr [rsi + 8]
0x8518:	test	r8, r8
0x851b:	jle	0x85a0


0x85a8:	test	eax, eax
0x85aa:	je	0x8571


0x85ba:	mov	eax, dword ptr [rsp + 0xc]
0x85be:	mov	rdx, qword ptr [rsp + 0x28]
0x85c3:	xor	rdx, qword ptr fs:[0x28]
0x85cc:	jne	0x85e4


0x8584:	mov	rax, qword ptr [rsp + 0x20]
0x8589:	movdqa	xmm0, xmmword ptr [rsp + 0x10]
0x858f:	mov	qword ptr [r15 + 0x10], rax
0x8593:	xor	eax, eax
0x8595:	movaps	xmmword ptr [r15], xmm0
0x8599:	jmp	0x85be


0x967d:	mov	rsi, r15
0x9680:	mov	rdi, rbp
0x9683:	mov	r14d, eax
0x9686:	call	0x8000


0x968b:	mov	rdi, qword ptr [rsp + 0x60]
0x9690:	mov	r15d, eax
0x9693:	call	0x18d0


0x9698:	mov	eax, dword ptr [rsp + 0x4c]
0x969c:	mov	edx, r14d
0x969f:	or	edx, r15d
0x96a2:	or	edx, eax
0x96a4:	jne	0x9736


0x96aa:	mov	rcx, qword ptr [rbx + 0xd8]
0x96b1:	jmp	0x94f3


0x9736:	test	eax, eax
0x9738:	jne	0x948f


0x94f3:	mov	rax, qword ptr [rsp + 0x30]
0x94f8:	lea	r15, [rcx + rax]
0x94fc:	jmp	0x95d8


0x973e:	test	r14d, r14d
0x9741:	mov	eax, r14d
0x9744:	cmove	eax, r15d
0x9748:	jmp	0x948f


0xc9f8:	test	eax, eax
0xc9fa:	mov	dword ptr [rsp + 0x88], eax
0xca01:	je	0xcb1d


0xca07:	jmp	0xca60


0xc869:	test	eax, eax
0xc86b:	mov	dword ptr [rsp + 0x88], eax
0xc872:	jne	0xca60


0xc878:	mov	r8d, dword ptr [rsp + 0x110]
0xc880:	mov	rcx, qword ptr [rsp + 0x48]
0xc885:	mov	rdx, rbx
0xc888:	mov	rsi, qword ptr [rsp + 8]
0xc88d:	mov	rdi, r15
0xc890:	call	0x93d0


0xc895:	test	eax, eax
0xc897:	mov	dword ptr [rsp + 0x88], eax
0xc89e:	jne	0xca60


0xa5a6:	test	rax, rax
0xa5a9:	mov	qword ptr [rsp + 0x18], rax
0xa5ae:	je	0xa980


0xa980:	xor	eax, eax
0xa982:	mov	rbx, qword ptr [rsp + 0xf8]
0xa98a:	xor	rbx, qword ptr fs:[0x28]
0xa993:	jne	0xb0e4


0xa5b4:	mov	rax, qword ptr [rsp + 0x18]
0xa5b9:	pxor	xmm0, xmm0
0xa5bd:	lea	rbx, [rax + 0x1800]
0xa5c4:	mov	rax, qword ptr [rsp + 8]
0xa5c9:	movaps	xmmword ptr [rsp + 0x90], xmm0
0xa5d1:	mov	qword ptr [rsp + 0x40], rbx
0xa5d6:	movaps	xmmword ptr [rsp + 0xa0], xmm0
0xa5de:	cmp	qword ptr [rax + 0x10], 0
0xa5e3:	mov	qword ptr [rax + 0x58], 0
0xa5eb:	mov	qword ptr [rax + 0x60], 0
0xa5f3:	jle	0xb06a


0xa999:	add	rsp, 0x108
0xa9a0:	pop	rbx
0xa9a1:	pop	rbp
0xa9a2:	pop	r12
0xa9a4:	pop	r13
0xa9a6:	pop	r14
0xa9a8:	pop	r15
0xa9aa:	ret	


0xb0e4:	call	0x19e0


0xb06a:	mov	rdi, qword ptr [rsp + 0x18]
0xb06f:	call	0x18d0


0xa5f9:	mov	qword ptr [rsp + 0x30], r15
0xa5fe:	xor	ebp, ebp
0xa600:	mov	qword ptr [rsp + 0x10], 0
0xa609:	mov	r15, rbx
0xa60c:	mov	rbx, qword ptr [rsp + 0x10]
0xa611:	lea	rax, [rbx*8]
0xa619:	mov	qword ptr [rsp + 0x20], rax
0xa61e:	mov	rax, qword ptr [rsp + 8]
0xa623:	mov	rax, qword ptr [rax + 0x18]
0xa627:	mov	r13, qword ptr [rax + rbx*8]
0xa62b:	mov	rax, qword ptr [rsp + 0x30]
0xa630:	shl	r13, 4
0xa634:	add	r13, qword ptr [rax]
0xa637:	movzx	r14d, byte ptr [r13 + 8]
0xa63c:	mov	eax, dword ptr [r13 + 8]
0xa640:	shr	eax, 8
0xa643:	and	ax, 0x3ff
0xa647:	cmp	r14d, 1
0xa64b:	je	0xa9b0


0xa9b0:	movzx	ecx, byte ptr [r13]
0xa9b5:	lea	r12, [rsp + 0x90]
0xa9bd:	mov	edi, 1
0xa9c2:	mov	rdx, rcx
0xa9c5:	and	ecx, 0x3f
0xa9c8:	shr	rdx, 3
0xa9cc:	shl	rdi, cl
0xa9cf:	and	edx, 0x18
0xa9d2:	or	qword ptr [r12 + rdx], rdi
0xa9d6:	test	ax, ax
0xa9d9:	je	0xaaa0


0xa651:	cmp	r14d, 3
0xa655:	je	0xae20


0xaaa0:	xor	ebx, ebx
0xaaa2:	test	rbp, rbp
0xaaa5:	jle	0xac0b


0xa9df:	test	al, 0x20
0xa9e1:	jne	0xad50


0xae20:	mov	rsi, qword ptr [r13]
0xae24:	lea	r12, [rsp + 0x90]
0xae2c:	xor	edx, edx
0xae2e:	mov	rcx, qword ptr [r12 + rdx]
0xae32:	or	rcx, qword ptr [rsi + rdx]
0xae36:	mov	qword ptr [r12 + rdx], rcx
0xae3a:	add	rdx, 8
0xae3e:	cmp	rdx, 0x20
0xae42:	jne	0xae2e


0xa65b:	cmp	r14d, 5
0xa65f:	je	0xace0


0xac0b:	cmp	rbp, rbx
0xac0e:	jne	0xa66f


0xaaab:	mov	qword ptr [rsp + 0x28], r13
0xaab0:	mov	r13, r15
0xaab3:	nop	dword ptr [rax + rax]
0xaab8:	mov	r10, rbx
0xaabb:	shl	r10, 5
0xaabf:	cmp	r14d, 1
0xaac3:	jne	0xaae8


0xa9e7:	test	al, 0x80
0xa9e9:	jne	0xac84


0xad50:	mov	rdx, qword ptr [rsp + 0x90]
0xad58:	pxor	xmm0, xmm0
0xad5c:	and	dh, 4
0xad5f:	movaps	xmmword ptr [r12], xmm0
0xad64:	movaps	xmmword ptr [r12 + 0x10], xmm0
0xad6a:	je	0xa66f


0xae44:	jmp	0xa9d6


0xae2e:	mov	rcx, qword ptr [r12 + rdx]
0xae32:	or	rcx, qword ptr [rsi + rdx]
0xae36:	mov	qword ptr [r12 + rdx], rcx
0xae3a:	add	rdx, 8
0xae3e:	cmp	rdx, 0x20
0xae42:	jne	0xae2e


0xace0:	mov	rsi, qword ptr [rsp + 0x30]
0xace5:	cmp	dword ptr [rsi + 0xb4], 1
0xacec:	jle	0xadf5


0xa665:	cmp	r14d, 7
0xa669:	je	0xae49


0xac14:	mov	rax, rbp
0xac17:	movdqa	xmm0, xmmword ptr [rsp + 0x90]
0xac20:	shl	rax, 5
0xac24:	mov	rbx, qword ptr [rsp + 0x20]
0xac29:	mov	edi, 8
0xac2e:	add	rax, r15
0xac31:	movups	xmmword ptr [rax], xmm0
0xac34:	movdqa	xmm0, xmmword ptr [rsp + 0xa0]
0xac3d:	movups	xmmword ptr [rax + 0x10], xmm0
0xac41:	mov	rax, qword ptr [rsp + 8]
0xac46:	mov	rax, qword ptr [rax + 0x18]
0xac4a:	mov	r13, qword ptr [rax + rbx]
0xac4e:	mov	rbx, qword ptr [rsp + 0x18]
0xac53:	lea	rax, [rbp + rbp*2]
0xac58:	lea	rbx, [rbx + rax*8]
0xac5c:	mov	qword ptr [rbx], 1
0xac63:	mov	qword ptr [rbx + 8], 1
0xac6b:	call	0x1b00


0xa66f:	mov	rbx, qword ptr [rsp + 8]
0xa674:	add	qword ptr [rsp + 0x10], 1
0xa67a:	mov	rax, qword ptr [rsp + 0x10]
0xa67f:	cmp	rax, qword ptr [rbx + 0x10]
0xa683:	jl	0xa60c


0xaac5:	mov	rax, qword ptr [rsp + 0x28]
0xaaca:	movzx	edx, byte ptr [rax]
0xaacd:	mov	rax, rdx
0xaad0:	shr	rax, 3
0xaad4:	and	eax, 0x18
0xaad7:	add	rax, r13
0xaada:	mov	rax, qword ptr [rax + r10]
0xaade:	bt	rax, rdx
0xaae2:	jae	0xabfb


0xaae8:	lea	rdi, [r13 + r10]
0xaaed:	lea	rsi, [rsp + 0xb0]
0xaaf5:	xor	ecx, ecx
0xaaf7:	xor	eax, eax
0xaaf9:	mov	rdx, qword ptr [r12 + rax*8]
0xaafd:	and	rdx, qword ptr [rdi + rax*8]
0xab01:	mov	qword ptr [rsi + rax*8], rdx
0xab05:	add	rax, 1
0xab09:	or	rcx, rdx
0xab0c:	cmp	rax, 4
0xab10:	jne	0xaaf9


0xa9ef:	test	al, 4
0xa9f1:	je	0xaa45


0xac84:	pxor	xmm0, xmm0
0xac88:	movaps	xmmword ptr [r12], xmm0
0xac8d:	movaps	xmmword ptr [r12 + 0x10], xmm0
0xac93:	jmp	0xa66f


0xad70:	mov	qword ptr [rsp + 0x90], 0x400
0xad7c:	jmp	0xa9e7


0xa9d6:	test	ax, ax
0xa9d9:	je	0xaaa0


0xadf5:	pcmpeqd	xmm0, xmm0
0xadf9:	lea	r12, [rsp + 0x90]
0xae01:	movaps	xmmword ptr [rsp + 0x90], xmm0
0xae09:	movaps	xmmword ptr [rsp + 0xa0], xmm0
0xae11:	jmp	0xad16


0xacf2:	mov	rsi, qword ptr [rsi + 0x78]
0xacf6:	lea	r12, [rsp + 0x90]
0xacfe:	xor	edx, edx
0xad00:	mov	rcx, qword ptr [r12 + rdx]
0xad04:	or	rcx, qword ptr [rsi + rdx]
0xad08:	mov	qword ptr [r12 + rdx], rcx
0xad0c:	add	rdx, 8
0xad10:	cmp	rdx, 0x20
0xad14:	jne	0xad00


0xae49:	pcmpeqd	xmm0, xmm0
0xae4d:	lea	r12, [rsp + 0x90]
0xae55:	movaps	xmmword ptr [rsp + 0x90], xmm0
0xae5d:	jmp	0xad16


0xa60c:	mov	rbx, qword ptr [rsp + 0x10]
0xa611:	lea	rax, [rbx*8]
0xa619:	mov	qword ptr [rsp + 0x20], rax
0xa61e:	mov	rax, qword ptr [rsp + 8]
0xa623:	mov	rax, qword ptr [rax + 0x18]
0xa627:	mov	r13, qword ptr [rax + rbx*8]
0xa62b:	mov	rax, qword ptr [rsp + 0x30]
0xa630:	shl	r13, 4
0xa634:	add	r13, qword ptr [rax]
0xa637:	movzx	r14d, byte ptr [r13 + 8]
0xa63c:	mov	eax, dword ptr [r13 + 8]
0xa640:	shr	eax, 8
0xa643:	and	ax, 0x3ff
0xa647:	cmp	r14d, 1
0xa64b:	je	0xa9b0


0xa685:	test	rbp, rbp
0xa688:	mov	r15, qword ptr [rsp + 0x30]
0xa68d:	jle	0xb0e9


0xabfb:	add	rbx, 1
0xabff:	cmp	rbx, rbp
0xac02:	jl	0xaab8


0xab12:	test	rcx, rcx
0xab15:	je	0xabfb


0xaaf9:	mov	rdx, qword ptr [r12 + rax*8]
0xaafd:	and	rdx, qword ptr [rdi + rax*8]
0xab01:	mov	qword ptr [rsi + rax*8], rdx
0xab05:	add	rax, 1
0xab09:	or	rcx, rdx
0xab0c:	cmp	rax, 4
0xab10:	jne	0xaaf9


0xaa45:	test	al, 8
0xaa47:	je	0xaaa0


0xa9f3:	cmp	r14d, 1
0xa9f7:	je	0xadd5


0xad16:	mov	rbx, qword ptr [rsp + 0x30]
0xad1b:	mov	rdx, qword ptr [rbx + 0xd8]
0xad22:	test	dl, 0x40
0xad25:	jne	0xad33


0xad00:	mov	rcx, qword ptr [r12 + rdx]
0xad04:	or	rcx, qword ptr [rsi + rdx]
0xad08:	mov	qword ptr [r12 + rdx], rcx
0xad0c:	add	rdx, 8
0xad10:	cmp	rdx, 0x20
0xad14:	jne	0xad00


0xb0e9:	mov	rdi, qword ptr [rsp + 0x18]
0xb0ee:	call	0x18d0


0xa693:	lea	rbx, [rbp + 1]
0xa697:	mov	qword ptr [rsp + 0x78], 0
0xa6a0:	mov	qword ptr [rsp + 0x70], rbx
0xa6a5:	shl	rbx, 3
0xa6a9:	mov	rdi, rbx
0xa6ac:	call	0x1b00


0xaab8:	mov	r10, rbx
0xaabb:	shl	r10, 5
0xaabf:	cmp	r14d, 1
0xaac3:	jne	0xaae8


0xac08:	mov	r15, r13
0xac0b:	cmp	rbp, rbx
0xac0e:	jne	0xa66f


0xab1b:	lea	r11, [rsp + 0xd0]
0xab23:	xor	r15d, r15d
0xab26:	xor	r9d, r9d
0xab29:	xor	ecx, ecx
0xab2b:	mov	rsi, qword ptr [r12 + rcx*8]
0xab2f:	mov	rax, qword ptr [rdi + rcx*8]
0xab33:	mov	rdx, rsi
0xab36:	not	rdx
0xab39:	and	rdx, rax
0xab3c:	not	rax
0xab3f:	and	rax, rsi
0xab42:	mov	qword ptr [r11 + rcx*8], rdx
0xab46:	or	r9, rdx
0xab49:	mov	qword ptr [r12 + rcx*8], rax
0xab4d:	add	rcx, 1
0xab51:	or	r15, rax
0xab54:	cmp	rcx, 4
0xab58:	jne	0xab2b


0xaa49:	cmp	r14d, 1
0xaa4d:	je	0xad81


0xadd5:	test	byte ptr [r13 + 0xa], 0x40
0xadda:	je	0xac84


0xa9fd:	mov	r8, qword ptr [rsp + 0x30]
0xaa02:	cmp	dword ptr [r8 + 0xb4], 1
0xaa0a:	jle	0xae62


0xad27:	and	qword ptr [rsp + 0x90], 0xfffffffffffffbff
0xad33:	and	edx, 0x80
0xad39:	je	0xa9d6


0xad33:	and	edx, 0x80
0xad39:	je	0xa9d6


0xab5a:	mov	rdi, qword ptr [rsp + 0x18]
0xab5f:	lea	rax, [rbx + rbx*2]
0xab63:	test	r9, r9
0xab66:	lea	rdx, [rdi + rax*8]
0xab6a:	je	0xabd4


0xab2b:	mov	rsi, qword ptr [r12 + rcx*8]
0xab2f:	mov	rax, qword ptr [rdi + rcx*8]
0xab33:	mov	rdx, rsi
0xab36:	not	rdx
0xab39:	and	rdx, rax
0xab3c:	not	rax
0xab3f:	and	rax, rsi
0xab42:	mov	qword ptr [r11 + rcx*8], rdx
0xab46:	or	r9, rdx
0xab49:	mov	qword ptr [r12 + rcx*8], rax
0xab4d:	add	rcx, 1
0xab51:	or	r15, rax
0xab54:	cmp	rcx, 4
0xab58:	jne	0xab2b


0xad81:	test	byte ptr [r13 + 0xa], 0x40
0xad86:	jne	0xac84


0xaa53:	mov	rdi, qword ptr [rsp + 0x30]
0xaa58:	cmp	dword ptr [rdi + 0xb4], 1
0xaa5f:	jle	0xad9e


0xade0:	mov	r8, qword ptr [rsp + 0x30]
0xade5:	cmp	dword ptr [r8 + 0xb4], 1
0xaded:	jg	0xaa10


0xae62:	mov	rdi, qword ptr [rsp + 0x30]
0xae67:	xor	esi, esi
0xae69:	xor	edx, edx
0xae6b:	mov	rcx, qword ptr [r12 + rdx*8]
0xae6f:	and	rcx, qword ptr [rdi + rdx*8 + 0xb8]
0xae77:	mov	qword ptr [r12 + rdx*8], rcx
0xae7b:	add	rdx, 1
0xae7f:	or	rsi, rcx
0xae82:	cmp	rdx, 4
0xae86:	jne	0xae6b


0xaa10:	mov	rdi, qword ptr [r8 + 0x78]
0xaa14:	xor	esi, esi
0xaa16:	xor	ecx, ecx
0xaa18:	mov	rdx, qword ptr [rdi + rcx*8]
0xaa1c:	not	rdx
0xaa1f:	or	rdx, qword ptr [r8 + rcx*8 + 0xb8]
0xaa27:	and	rdx, qword ptr [r12 + rcx*8]
0xaa2b:	mov	qword ptr [r12 + rcx*8], rdx
0xaa2f:	add	rcx, 1
0xaa33:	or	rsi, rdx
0xaa36:	cmp	rcx, 4
0xaa3a:	jne	0xaa18


0xad3f:	and	qword ptr [rsp + 0x90], 0xfffffffffffffffe
0xad48:	jmp	0xa9d6


0xabd4:	mov	rax, qword ptr [rsp + 8]
0xabd9:	mov	rsi, qword ptr [rsp + 0x20]
0xabde:	mov	rdi, rdx
0xabe1:	mov	rax, qword ptr [rax + 0x18]
0xabe5:	mov	rsi, qword ptr [rax + rsi]
0xabe9:	call	0x65a0


0xab6c:	mov	rax, rbp
0xab6f:	movdqa	xmm0, xmmword ptr [rsp + 0xd0]
0xab78:	shl	rax, 5
0xab7c:	mov	rsi, rdx
0xab7f:	mov	qword ptr [rsp + 0x38], rdx
0xab84:	add	rax, r13
0xab87:	movups	xmmword ptr [rax], xmm0
0xab8a:	movdqa	xmm0, xmmword ptr [rsp + 0xe0]
0xab93:	movups	xmmword ptr [rax + 0x10], xmm0
0xab97:	lea	rax, [rbp + rbp*2]
0xab9c:	lea	rdi, [rdi + rax*8]
0xaba0:	movdqa	xmm0, xmmword ptr [rsp + 0xb0]
0xaba9:	movups	xmmword ptr [r13 + r10], xmm0
0xabaf:	movdqa	xmm0, xmmword ptr [rsp + 0xc0]
0xabb8:	movups	xmmword ptr [r13 + r10 + 0x10], xmm0
0xabbe:	call	0x8c40


0xad8c:	mov	rdi, qword ptr [rsp + 0x30]
0xad91:	cmp	dword ptr [rdi + 0xb4], 1
0xad98:	jg	0xaa65


0xad9e:	mov	rsi, qword ptr [rsp + 0x30]
0xada3:	xor	ecx, ecx
0xada5:	xor	edx, edx
0xada7:	mov	rax, qword ptr [rsi + rdx*8 + 0xb8]
0xadaf:	not	rax
0xadb2:	and	rax, qword ptr [r12 + rdx*8]
0xadb6:	mov	qword ptr [r12 + rdx*8], rax
0xadba:	add	rdx, 1
0xadbe:	or	rcx, rax
0xadc1:	cmp	rdx, 4
0xadc5:	jne	0xada7


0xaa65:	mov	rsi, qword ptr [rdi + 0x78]
0xaa69:	xor	ecx, ecx
0xaa6b:	xor	edx, edx
0xaa6d:	mov	rax, qword ptr [rdi + rdx*8 + 0xb8]
0xaa75:	and	rax, qword ptr [rsi + rdx*8]
0xaa79:	not	rax
0xaa7c:	and	rax, qword ptr [r12 + rdx*8]
0xaa80:	mov	qword ptr [r12 + rdx*8], rax
0xaa84:	add	rdx, 1
0xaa88:	or	rcx, rax
0xaa8b:	cmp	rdx, 4
0xaa8f:	jne	0xaa6d


0xadf3:	jmp	0xae62


0xae88:	test	rsi, rsi
0xae8b:	jne	0xaa45


0xae6b:	mov	rcx, qword ptr [r12 + rdx*8]
0xae6f:	and	rcx, qword ptr [rdi + rdx*8 + 0xb8]
0xae77:	mov	qword ptr [r12 + rdx*8], rcx
0xae7b:	add	rdx, 1
0xae7f:	or	rsi, rcx
0xae82:	cmp	rdx, 4
0xae86:	jne	0xae6b


0xaa3c:	test	rsi, rsi
0xaa3f:	je	0xa66f


0xaa18:	mov	rdx, qword ptr [rdi + rcx*8]
0xaa1c:	not	rdx
0xaa1f:	or	rdx, qword ptr [r8 + rcx*8 + 0xb8]
0xaa27:	and	rdx, qword ptr [r12 + rcx*8]
0xaa2b:	mov	qword ptr [r12 + rcx*8], rdx
0xaa2f:	add	rcx, 1
0xaa33:	or	rsi, rdx
0xaa36:	cmp	rcx, 4
0xaa3a:	jne	0xaa18


0xadc7:	test	rcx, rcx
0xadca:	jne	0xaaa0


0xada7:	mov	rax, qword ptr [rsi + rdx*8 + 0xb8]
0xadaf:	not	rax
0xadb2:	and	rax, qword ptr [r12 + rdx*8]
0xadb6:	mov	qword ptr [r12 + rdx*8], rax
0xadba:	add	rdx, 1
0xadbe:	or	rcx, rax
0xadc1:	cmp	rdx, 4
0xadc5:	jne	0xada7


0xaa91:	test	rcx, rcx
0xaa94:	je	0xa66f


0xaa6d:	mov	rax, qword ptr [rdi + rdx*8 + 0xb8]
0xaa75:	and	rax, qword ptr [rsi + rdx*8]
0xaa79:	not	rax
0xaa7c:	and	rax, qword ptr [r12 + rdx*8]
0xaa80:	mov	qword ptr [r12 + rdx*8], rax
0xaa84:	add	rdx, 1
0xaa88:	or	rcx, rax
0xaa8b:	cmp	rdx, 4
0xaa8f:	jne	0xaa6d


0xae91:	jmp	0xa66f


0xadd0:	jmp	0xa66f


0xabc3:	test	eax, eax
0xabc5:	jne	0xaca0


0xabcb:	mov	rdx, qword ptr [rsp + 0x38]
0xabd0:	add	rbp, 1
0xabd4:	mov	rax, qword ptr [rsp + 8]
0xabd9:	mov	rsi, qword ptr [rsp + 0x20]
0xabde:	mov	rdi, rdx
0xabe1:	mov	rax, qword ptr [rax + 0x18]
0xabe5:	mov	rsi, qword ptr [rax + rsi]
0xabe9:	call	0x65a0


0xaca0:	mov	rax, qword ptr [rsp + 0x18]
0xaca5:	lea	rbx, [rax + 0x10]
0xaca9:	lea	rax, [rbp + rbp*2]
0xacae:	lea	rbp, [rbx + rax*8]
0xacb2:	nop	word ptr [rax + rax]
0xacb8:	mov	rdi, qword ptr [rbx]
0xacbb:	add	rbx, 0x18
0xacbf:	call	0x18d0


0xabee:	test	al, al
0xabf0:	je	0xaca0


0xabf6:	test	r15, r15
0xabf9:	je	0xac08


0xacc4:	cmp	rbp, rbx
0xacc7:	jne	0xacb8


0xacc9:	mov	rdi, qword ptr [rsp + 0x18]
0xacce:	call	0x18d0


0xacb8:	mov	rdi, qword ptr [rbx]
0xacbb:	add	rbx, 0x18
0xacbf:	call	0x18d0


0xacd3:	jmp	0xa980


0xb0f3:	test	rbp, rbp
0xb0f6:	jne	0xa980


0xb0fc:	jmp	0xb074


0xb074:	mov	esi, 0x100
0xb079:	mov	edi, 8
0xb07e:	call	0x1ab0


0xb083:	mov	rbx, qword ptr [rsp + 8]
0xb088:	test	rax, rax
0xb08b:	mov	qword ptr [rbx + 0x58], rax
0xb08f:	setne	al
0xb092:	jmp	0xa982


0xa982:	mov	rbx, qword ptr [rsp + 0xf8]
0xa98a:	xor	rbx, qword ptr fs:[0x28]
0xa993:	jne	0xb0e4


0xf595:	test	al, al
0xf597:	jne	0xecb4


0xf59d:	mov	rdi, qword ptr [rsp + 0x1d8]
0xf5a5:	mov	dword ptr [rsp + 0xd0], 0xc
0xf5b0:	test	rdi, rdi
0xf5b3:	jne	0xf4e0


0xecb4:	mov	rax, qword ptr [r14 + 0x58]
0xecb8:	test	rax, rax
0xecbb:	je	0xf3d0


0xa6b1:	test	rax, rax
0xa6b4:	mov	r12, rax
0xa6b7:	mov	qword ptr [rsp + 0x80], rax
0xa6bf:	je	0xaebf


0xaebf:	mov	rdi, r12
0xaec2:	call	0x18d0


0xa6c5:	movabs	rax, 0xaaaaaaaaaaaa855
0xa6cf:	mov	dword ptr [rsp + 0x6c], 0
0xa6d7:	cmp	rbp, rax
0xa6da:	jg	0xaebf


0xa6e0:	lea	rax, [rbp + rbp*2]
0xa6e5:	shl	rax, 3
0xa6e9:	mov	rdi, rax
0xa6ec:	mov	qword ptr [rsp + 0x58], rax
0xa6f1:	call	0x1b00


0xaec7:	mov	rax, qword ptr [rsp + 0x18]
0xaecc:	lea	rbx, [rax + 0x10]
0xaed0:	lea	rax, [rbp + rbp*2]
0xaed5:	lea	rbp, [rbx + rax*8]
0xaed9:	nop	dword ptr [rax]
0xaee0:	mov	rdi, qword ptr [rbx]
0xaee3:	add	rbx, 0x18
0xaee7:	call	0x18d0


0xaeec:	cmp	rbp, rbx
0xaeef:	jne	0xaee0


0xaef1:	mov	rdi, qword ptr [rsp + 0x18]
0xaef6:	call	0x18d0


0xaee0:	mov	rdi, qword ptr [rbx]
0xaee3:	add	rbx, 0x18
0xaee7:	call	0x18d0


0xaefb:	jmp	0xa980


0xa6f6:	test	rax, rax
0xa6f9:	mov	qword ptr [rsp + 0x10], rax
0xa6fe:	je	0xaebf


0xa704:	mov	rax, qword ptr [rsp + 0x10]
0xa709:	sub	rbx, 8
0xa70d:	mov	r12, qword ptr [rsp + 0x40]
0xa712:	pxor	xmm0, xmm0
0xa716:	lea	r14, [rsp + 0x70]
0xa71b:	mov	qword ptr [rsp + 0x20], rbp
0xa720:	mov	byte ptr [rsp + 0x4f], 0
0xa725:	mov	rbp, r15
0xa728:	add	rax, rbx
0xa72b:	mov	qword ptr [rsp + 0x50], r12
0xa730:	add	rbx, rax
0xa733:	mov	qword ptr [rsp + 0x30], rax
0xa738:	mov	rax, qword ptr [rsp + 0x18]
0xa73d:	movaps	xmmword ptr [rsp + 0xd0], xmm0
0xa745:	mov	qword ptr [rsp + 0x38], rbx
0xa74a:	xor	ebx, ebx
0xa74c:	lea	r13, [rax + 8]
0xa750:	lea	rax, [rsp + 0x6c]
0xa755:	movaps	xmmword ptr [rsp + 0xe0], xmm0
0xa75d:	mov	qword ptr [rsp + 0x28], rax
0xa762:	mov	qword ptr [rsp + 0x78], 0
0xa76b:	cmp	qword ptr [r13], 0
0xa770:	jle	0xa7b8


0xa7b8:	mov	rdi, qword ptr [rsp + 0x28]
0xa7bd:	xor	ecx, ecx
0xa7bf:	mov	rsi, rbp
0xa7c2:	mov	rdx, r14
0xa7c5:	call	0x8e30


0xa772:	xor	r15d, r15d
0xa775:	nop	dword ptr [rax]
0xa778:	mov	rax, qword ptr [r13 + 8]
0xa77c:	mov	rdx, qword ptr [rax + r15*8]
0xa780:	mov	rax, qword ptr [rbp + 0x18]
0xa784:	mov	rax, qword ptr [rax + rdx*8]
0xa788:	cmp	rax, -1
0xa78c:	je	0xa7ae


0xa7ae:	add	r15, 1
0xa7b2:	cmp	qword ptr [r13], r15
0xa7b6:	jg	0xa778


0xa78e:	lea	rdx, [rax + rax*2]
0xa792:	mov	rax, qword ptr [rbp + 0x30]
0xa796:	mov	rdi, r14
0xa799:	lea	rsi, [rax + rdx*8]
0xa79d:	call	0x8000


0xa778:	mov	rax, qword ptr [r13 + 8]
0xa77c:	mov	rdx, qword ptr [rax + r15*8]
0xa780:	mov	rax, qword ptr [rbp + 0x18]
0xa784:	mov	rax, qword ptr [rax + rdx*8]
0xa788:	cmp	rax, -1
0xa78c:	je	0xa7ae


0xa7a2:	test	eax, eax
0xa7a4:	mov	dword ptr [rsp + 0x6c], eax
0xa7a8:	jne	0xaea8


0xaea8:	mov	rbp, qword ptr [rsp + 0x20]
0xaead:	mov	rdi, qword ptr [rsp + 0x10]
0xaeb2:	call	0x18d0


0xaeb7:	mov	r12, qword ptr [rsp + 0x80]
0xaebf:	mov	rdi, r12
0xaec2:	call	0x18d0


0xa7ca:	mov	rsi, qword ptr [rsp + 0x10]
0xa7cf:	test	rax, rax
0xa7d2:	mov	qword ptr [rsi + rbx*8], rax
0xa7d6:	je	0xaf88


0xaf88:	mov	ecx, dword ptr [rsp + 0x6c]
0xaf8c:	test	ecx, ecx
0xaf8e:	je	0xa7dc


0xa7dc:	cmp	byte ptr [rax + 0x68], 0
0xa7e0:	js	0xaf00


0xaf94:	jmp	0xaea8


0xaf00:	mov	rdi, qword ptr [rsp + 0x28]
0xaf05:	mov	ecx, 1
0xaf0a:	mov	rdx, r14
0xaf0d:	mov	rsi, rbp
0xaf10:	call	0x8e30


0xa7e6:	mov	rdi, qword ptr [rsp + 0x30]
0xa7eb:	mov	rsi, qword ptr [rsp + 0x38]
0xa7f0:	mov	qword ptr [rdi + rbx*8], rax
0xa7f4:	mov	rax, qword ptr [rsp + 0x10]
0xa7f9:	mov	rax, qword ptr [rax + rbx*8]
0xa7fd:	mov	qword ptr [rsi + rbx*8], rax
0xa801:	lea	rdx, [rsp + 0xd0]
0xa809:	xor	eax, eax
0xa80b:	mov	rcx, qword ptr [rdx + rax]
0xa80f:	or	rcx, qword ptr [r12 + rax]
0xa813:	mov	qword ptr [rdx + rax], rcx
0xa817:	add	rax, 8
0xa81b:	cmp	rax, 0x20
0xa81f:	jne	0xa80b


0xa821:	add	rbx, 1
0xa825:	add	r13, 0x18
0xa829:	add	r12, 0x20
0xa82d:	cmp	rbx, qword ptr [rsp + 0x20]
0xa832:	jne	0xa762


0xa80b:	mov	rcx, qword ptr [rdx + rax]
0xa80f:	or	rcx, qword ptr [r12 + rax]
0xa813:	mov	qword ptr [rdx + rax], rcx
0xa817:	add	rax, 8
0xa81b:	cmp	rax, 0x20
0xa81f:	jne	0xa80b


0xa838:	cmp	byte ptr [rsp + 0x4f], 0
0xa83d:	mov	r15, rbp
0xa840:	mov	rbp, qword ptr [rsp + 0x20]
0xa845:	mov	qword ptr [rsp + 0x20], rdx
0xa84a:	jne	0xaf99


0xa762:	mov	qword ptr [rsp + 0x78], 0
0xa76b:	cmp	qword ptr [r13], 0
0xa770:	jle	0xa7b8


0xa850:	mov	esi, 0x100
0xa855:	mov	edi, 8
0xa85a:	call	0x1ab0


0xaf99:	mov	esi, 0x200
0xaf9e:	mov	edi, 8
0xafa3:	call	0x1ab0


0xafa8:	mov	r11, rax
0xafab:	mov	rax, qword ptr [rsp + 8]
0xafb0:	test	r11, r11
0xafb3:	mov	qword ptr [rax + 0x60], r11
0xafb7:	je	0xaead


0xaead:	mov	rdi, qword ptr [rsp + 0x10]
0xaeb2:	call	0x18d0


0xafbd:	mov	r13, qword ptr [rsp + 0x40]
0xafc2:	mov	r10, qword ptr [rsp + 0x10]
0xafc7:	mov	r12, r11
0xafca:	mov	r14, qword ptr [rsp + 0x30]
0xafcf:	mov	rdx, qword ptr [rsp + 0x20]
0xafd4:	xor	ebx, ebx
0xafd6:	add	r13, 0x20
0xafda:	mov	rax, qword ptr [rdx + rbx]
0xafde:	test	rax, rax
0xafe1:	je	0xafff


0xafff:	add	rbx, 8
0xb003:	add	r12, 0x200
0xb00a:	cmp	rbx, 0x20
0xb00e:	jne	0xafda


0xafe3:	mov	rsi, r12
0xafe6:	mov	ecx, 1
0xafeb:	test	al, 1
0xafed:	jne	0xb09c


0xb010:	jmp	0xa8ce


0xafda:	mov	rax, qword ptr [rdx + rbx]
0xafde:	test	rax, rax
0xafe1:	je	0xafff


0xaff3:	add	rcx, rcx
0xaff6:	add	rsi, 8
0xaffa:	shr	rax, 1
0xaffd:	jne	0xafeb


0xb09c:	mov	rdi, qword ptr [rsp + 0x18]
0xb0a1:	test	qword ptr [rdi + rbx + 0x1800], rcx
0xb0a9:	jne	0xb0e0


0xa8ce:	test	byte ptr [rsp + 0xd1], 4
0xa8d6:	je	0xa912


0xafeb:	test	al, 1
0xafed:	jne	0xb09c


0xb0ab:	lea	r9, [r13 + rbx]
0xb0b0:	xor	r8d, r8d
0xb0b3:	mov	r15, qword ptr [r9]
0xb0b6:	add	r8, 1
0xb0ba:	add	r9, 0x20
0xb0be:	mov	rdi, r8
0xb0c1:	and	r15, rcx
0xb0c4:	test	r15, r15
0xb0c7:	je	0xb0b3


0xb0e0:	xor	edi, edi
0xb0e2:	jmp	0xb0c9


0xa912:	mov	rdi, qword ptr [rsp + 0x10]
0xa917:	call	0x18d0


0xa8d8:	xor	eax, eax
0xa8da:	mov	rdx, qword ptr [rsp + 0x50]
0xa8df:	jmp	0xa8ee


0xb0b3:	mov	r15, qword ptr [r9]
0xb0b6:	add	r8, 1
0xb0ba:	add	r9, 0x20
0xb0be:	mov	rdi, r8
0xb0c1:	and	r15, rcx
0xb0c4:	test	r15, r15
0xb0c7:	je	0xb0b3


0xb0c9:	mov	r8, qword ptr [r10 + rdi*8]
0xb0cd:	mov	qword ptr [rsi], r8
0xb0d0:	mov	rdi, qword ptr [r14 + rdi*8]
0xb0d4:	mov	qword ptr [rsi + 0x800], rdi
0xb0db:	jmp	0xaff3


0xa8ee:	test	qword ptr [rdx], 0x400
0xa8f5:	je	0xa8e1


0xa8e1:	add	rax, 1
0xa8e5:	add	rdx, 0x20
0xa8e9:	cmp	rax, rbp
0xa8ec:	je	0xa912


0xa8f7:	mov	rbx, qword ptr [rsp + 0x38]
0xa8fc:	cmp	byte ptr [rsp + 0x4f], 0
0xa901:	mov	rax, qword ptr [rbx + rax*8]
0xa905:	mov	qword ptr [r11 + 0x50], rax
0xa909:	je	0xa912


0xa90b:	mov	qword ptr [r11 + 0x850], rax
0xa912:	mov	rdi, qword ptr [rsp + 0x10]
0xa917:	call	0x18d0


0xa91c:	mov	rdi, qword ptr [rsp + 0x80]
0xa924:	call	0x18d0


0xa929:	mov	rax, qword ptr [rsp + 0x18]
0xa92e:	mov	rbx, qword ptr [rsp + 0x58]
0xa933:	lea	rbp, [rax + 0x10]
0xa937:	add	rbx, rbp
0xa93a:	mov	rdi, qword ptr [rbp]
0xa93e:	add	rbp, 0x18
0xa942:	call	0x18d0


0xa947:	cmp	rbx, rbp
0xa94a:	jne	0xa93a


0xa94c:	mov	rdi, qword ptr [rsp + 0x18]
0xa951:	call	0x18d0


0xa93a:	mov	rdi, qword ptr [rbp]
0xa93e:	add	rbp, 0x18
0xa942:	call	0x18d0


0xa956:	mov	eax, 1
0xa95b:	jmp	0xa982


0xa85f:	mov	r11, rax
0xa862:	mov	rax, qword ptr [rsp + 8]
0xa867:	test	r11, r11
0xa86a:	mov	qword ptr [rax + 0x58], r11
0xa86e:	je	0xaead


0xa874:	mov	rbx, qword ptr [rsp + 0x40]
0xa879:	mov	r12, qword ptr [rsp + 0x10]
0xa87e:	xor	r9d, r9d
0xa881:	mov	r13, qword ptr [rsp + 0x30]
0xa886:	mov	rdx, qword ptr [rsp + 0x20]
0xa88b:	add	rbx, 0x20
0xa88f:	mov	rax, qword ptr [rdx + r9]
0xa893:	test	rax, rax
0xa896:	je	0xa8c4


0xa8c4:	add	r9, 8
0xa8c8:	cmp	r9, 0x20
0xa8cc:	jne	0xa88f


0xa898:	mov	rsi, r9
0xa89b:	mov	ecx, 1
0xa8a0:	shl	rsi, 6
0xa8a4:	add	rsi, r11
0xa8a7:	nop	word ptr [rax + rax]
0xa8b0:	test	al, 1
0xa8b2:	jne	0xb018


0xa88f:	mov	rax, qword ptr [rdx + r9]
0xa893:	test	rax, rax
0xa896:	je	0xa8c4


0xa8b8:	add	rcx, rcx
0xa8bb:	add	rsi, 8
0xa8bf:	shr	rax, 1
0xa8c2:	jne	0xa8b0


0xb018:	mov	rdi, qword ptr [rsp + 0x18]
0xb01d:	test	qword ptr [rdi + r9 + 0x1800], rcx
0xb025:	jne	0xb097


0xa8b0:	test	al, 1
0xa8b2:	jne	0xb018


0xb027:	lea	rdi, [rbx + r9]
0xb02b:	xor	r8d, r8d
0xb02e:	nop	
0xb030:	mov	r10, qword ptr [rdi]
0xb033:	add	r8, 1
0xb037:	add	rdi, 0x20
0xb03b:	and	r10, rcx
0xb03e:	test	r10, r10
0xb041:	je	0xb030


0xb097:	xor	r8d, r8d
0xb09a:	jmp	0xb047


0xb030:	mov	r10, qword ptr [rdi]
0xb033:	add	r8, 1
0xb037:	add	rdi, 0x20
0xb03b:	and	r10, rcx
0xb03e:	test	r10, r10
0xb041:	je	0xb030


0xb043:	shl	r8, 3
0xb047:	test	qword ptr [r15 + r9 + 0xb8], rcx
0xb04f:	je	0xb05e


0xb047:	test	qword ptr [r15 + r9 + 0xb8], rcx
0xb04f:	je	0xb05e


0xb05e:	mov	rdi, qword ptr [r12 + r8]
0xb062:	mov	qword ptr [rsi], rdi
0xb065:	jmp	0xa8b8


0xb051:	mov	rdi, qword ptr [r13 + r8]
0xb056:	mov	qword ptr [rsi], rdi
0xb059:	jmp	0xa8b8


0xaf15:	mov	rdi, qword ptr [rsp + 0x30]
0xaf1a:	test	rax, rax
0xaf1d:	mov	qword ptr [rdi + rbx*8], rax
0xaf21:	je	0xae96


0xae96:	mov	edx, dword ptr [rsp + 0x6c]
0xae9a:	test	edx, edx
0xae9c:	je	0xaf27


0xaf27:	mov	rdi, qword ptr [rsp + 0x10]
0xaf2c:	cmp	rax, qword ptr [rdi + rbx*8]
0xaf30:	je	0xaf4b


0xaf4b:	mov	rdi, qword ptr [rsp + 0x28]
0xaf50:	mov	rsi, rbp
0xaf53:	mov	ecx, 2
0xaf58:	mov	rdx, r14
0xaf5b:	call	0x8e30


0xaf32:	movzx	edi, byte ptr [rsp + 0x4f]
0xaf37:	cmp	dword ptr [rbp + 0xb4], 2
0xaf3e:	mov	eax, 1
0xaf43:	cmovge	edi, eax
0xaf46:	mov	byte ptr [rsp + 0x4f], dil
0xaf4b:	mov	rdi, qword ptr [rsp + 0x28]
0xaf50:	mov	rsi, rbp
0xaf53:	mov	ecx, 2
0xaf58:	mov	rdx, r14
0xaf5b:	call	0x8e30


0xaf60:	mov	rsi, qword ptr [rsp + 0x38]
0xaf65:	test	rax, rax
0xaf68:	mov	qword ptr [rsi + rbx*8], rax
0xaf6c:	jne	0xa801


0xaf72:	mov	eax, dword ptr [rsp + 0x6c]
0xaf76:	test	eax, eax
0xaf78:	je	0xa801


0xa801:	lea	rdx, [rsp + 0xd0]
0xa809:	xor	eax, eax
0xa80b:	mov	rcx, qword ptr [rdx + rax]
0xa80f:	or	rcx, qword ptr [r12 + rax]
0xa813:	mov	qword ptr [rdx + rax], rcx
0xa817:	add	rax, 8
0xa81b:	cmp	rax, 0x20
0xa81f:	jne	0xa80b


0xaf7e:	jmp	0xaea8


0xac70:	test	rax, rax
0xac73:	mov	qword ptr [rbx + 0x10], rax
0xac77:	je	0xa95d


0xa95d:	test	rbp, rbp
0xa960:	mov	qword ptr [rbx + 8], 0
0xa968:	mov	qword ptr [rbx], 0
0xa96f:	jne	0xaca0


0xac7d:	mov	qword ptr [rax], r13
0xac80:	add	rbp, 1
0xac84:	pxor	xmm0, xmm0
0xac88:	movaps	xmmword ptr [r12], xmm0
0xac8d:	movaps	xmmword ptr [r12 + 0x10], xmm0
0xac93:	jmp	0xa66f


0xa975:	mov	rdi, qword ptr [rsp + 0x18]
0xa97a:	call	0x18d0


0xe20c:	test	rax, rax
0xe20f:	mov	qword ptr [rsp + 0x50], rax
0xe214:	je	0xe4f4


0xe4f4:	mov	eax, 0xc
0xe4f9:	jmp	0xe4d5


0xe21a:	lea	rcx, [rsp + 0x40]
0xe21f:	mov	qword ptr [rax], rbx
0xe222:	mov	rdx, r15
0xe225:	mov	rsi, r13
0xe228:	mov	rdi, r14
0xe22b:	mov	qword ptr [rsp + 0x10], rcx
0xe230:	call	0xfc30


0xe4d5:	mov	rdx, qword ptr [rsp + 0x58]
0xe4da:	xor	rdx, qword ptr fs:[0x28]
0xe4e3:	jne	0xe4fb


0xe4e5:	add	rsp, 0x68
0xe4e9:	pop	rbx
0xe4ea:	pop	rbp
0xe4eb:	pop	r12
0xe4ed:	pop	r13
0xe4ef:	pop	r14
0xe4f1:	pop	r15
0xe4f3:	ret	


0xe4fb:	call	0x19e0


0xe235:	test	eax, eax
0xe237:	jne	0xe4c5


0xe23d:	lea	rax, [r15*8]
0xe245:	test	r15, r15
0xe248:	mov	dword ptr [rsp + 0x2c], 0
0xe250:	mov	qword ptr [rsp + 8], rax
0xe255:	lea	rax, [r13 + 0x30]
0xe259:	mov	qword ptr [rsp + 0x38], rax
0xe25e:	jle	0xe467


0xe4c5:	mov	rdi, qword ptr [rsp + 0x50]
0xe4ca:	mov	dword ptr [rsp], eax
0xe4cd:	call	0x18d0


0xe467:	xor	eax, eax
0xe469:	jmp	0xe4c5


0xe264:	mov	rdi, qword ptr [r13]
0xe268:	mov	rax, qword ptr [rsp + 8]
0xe26d:	cmp	qword ptr [rdi + rax], 0
0xe272:	je	0xe488


0xe488:	mov	rax, qword ptr [rsp]
0xe48c:	add	dword ptr [rsp + 0x2c], 1
0xe491:	mov	ecx, dword ptr [rsp + 0x2c]
0xe495:	cmp	dword ptr [rax + 0xe0], ecx
0xe49b:	jge	0xe294


0xe278:	mov	rax, qword ptr [rsp]
0xe27c:	mov	dword ptr [rsp + 0x2c], 0
0xe284:	mov	ecx, dword ptr [rsp + 0x2c]
0xe288:	cmp	dword ptr [rax + 0xe0], ecx
0xe28e:	jl	0xe4a1


0xe4a1:	mov	rdx, qword ptr [rsp + 8]
0xe4a6:	xor	esi, esi
0xe4a8:	call	0x1a60


0xe294:	mov	rbx, qword ptr [rsp]
0xe298:	mov	rdi, qword ptr [rsp + 8]
0xe29d:	sub	r15, 1
0xe2a1:	mov	qword ptr [rsp + 0x48], 0
0xe2aa:	mov	rax, qword ptr [rbx + 0xb8]
0xe2b1:	mov	r12, qword ptr [rax + rdi - 8]
0xe2b6:	test	r12, r12
0xe2b9:	je	0xe440


0xe440:	mov	rcx, qword ptr [rsp + 0x10]
0xe445:	mov	rdi, qword ptr [rsp]
0xe449:	mov	rdx, r15
0xe44c:	mov	rsi, r13
0xe44f:	call	0xfc30


0xe2bf:	cmp	qword ptr [r12 + 0x28], 0
0xe2c5:	mov	r14, qword ptr [rbx + 0x98]
0xe2cc:	jle	0xe440


0xe2d2:	xor	ebx, ebx
0xe2d4:	jmp	0xe37b


0xe37b:	mov	rax, qword ptr [r12 + 0x30]
0xe380:	mov	rsi, qword ptr [r14]
0xe383:	mov	rbp, qword ptr [rax + rbx*8]
0xe387:	mov	r9, rbp
0xe38a:	shl	r9, 4
0xe38e:	add	rsi, r9
0xe391:	test	byte ptr [rsi + 0xa], 0x10
0xe395:	je	0xe2e0


0xe2e0:	mov	rdi, qword ptr [rsp]
0xe2e4:	mov	rdx, r15
0xe2e7:	call	0x99b0


0xe39b:	mov	rcx, qword ptr [rsp]
0xe39f:	mov	rax, qword ptr [r13 + 0x18]
0xe3a3:	mov	r8, r15
0xe3a6:	mov	rdx, rbp
0xe3a9:	mov	qword ptr [rsp + 0x18], r9
0xe3ae:	mov	r11, qword ptr [rcx + 0x98]
0xe3b5:	mov	qword ptr [rsp + 0x20], rax
0xe3ba:	mov	rdi, qword ptr [r11]
0xe3bd:	lea	rsi, [r11 + 0xd8]
0xe3c4:	mov	qword ptr [rsp + 0x30], r11
0xe3c9:	call	0xc290


0xe3ce:	movsxd	r10, eax
0xe3d1:	mov	r9, qword ptr [rsp + 0x18]
0xe3d6:	cmp	r10d, 0
0xe3da:	jle	0xe470


0xe470:	jne	0xe322


0xe3e0:	movsxd	rax, r10d
0xe3e3:	add	rax, r15
0xe3e6:	cmp	qword ptr [rsp + 0x20], rax
0xe3eb:	jl	0xe322


0xe476:	mov	rsi, qword ptr [r14]
0xe479:	add	rsi, r9
0xe47c:	jmp	0xe2e0


0xe322:	cmp	qword ptr [r13 + 0x28], 0
0xe327:	je	0xe357


0xe3f1:	mov	rdx, qword ptr [r13]
0xe3f5:	mov	r11, qword ptr [rsp + 0x30]
0xe3fa:	mov	rax, qword ptr [rdx + rax*8]
0xe3fe:	test	rax, rax
0xe401:	je	0xe476


0xe357:	mov	rdi, qword ptr [rsp + 0x10]
0xe35c:	mov	rsi, rbp
0xe35f:	call	0x65a0


0xe329:	mov	rax, qword ptr [r14 + 0x18]
0xe32d:	sub	rsp, 8
0xe331:	lea	rsi, [r13 + 0x28]
0xe335:	lea	r8, [r10 + r15]
0xe339:	mov	r9, rbp
0xe33c:	mov	rcx, qword ptr [rax + rbp*8]
0xe340:	push	r15
0xe342:	mov	rdx, qword ptr [rsp + 0x48]
0xe347:	mov	rdi, qword ptr [rsp + 0x10]
0xe34c:	call	0x7d90


0xe403:	mov	rdx, qword ptr [r11 + 0x18]
0xe407:	mov	rdi, qword ptr [rax + 0x10]
0xe40b:	lea	rsi, [rax + 0x18]
0xe40f:	mov	qword ptr [rsp + 0x18], r9
0xe414:	mov	rdx, qword ptr [rdx + rbp*8]
0xe418:	call	0x7ae0


0xe41d:	test	rax, rax
0xe420:	jne	0xe322


0xe426:	mov	r9, qword ptr [rsp + 0x18]
0xe42b:	mov	rsi, qword ptr [r14]
0xe42e:	add	rsi, r9
0xe431:	jmp	0xe2e0


0xe351:	test	al, al
0xe353:	pop	rdx
0xe354:	pop	rcx
0xe355:	jne	0xe36c


0xe36c:	add	rbx, 1
0xe370:	cmp	rbx, qword ptr [r12 + 0x28]
0xe375:	jge	0xe440


0xe364:	test	al, al
0xe366:	je	0xe4c0


0xe4c0:	mov	eax, 0xc
0xe4c5:	mov	rdi, qword ptr [rsp + 0x50]
0xe4ca:	mov	dword ptr [rsp], eax
0xe4cd:	call	0x18d0


0xe2ec:	test	al, al
0xe2ee:	je	0xe36c


0xe2f0:	mov	rax, qword ptr [r13]
0xe2f4:	mov	rcx, qword ptr [rsp + 8]
0xe2f9:	mov	rax, qword ptr [rax + rcx]
0xe2fd:	test	rax, rax
0xe300:	je	0xe36c


0xe302:	mov	rdx, qword ptr [r14 + 0x18]
0xe306:	mov	rdi, qword ptr [rax + 0x10]
0xe30a:	lea	rsi, [rax + 0x18]
0xe30e:	mov	rdx, qword ptr [rdx + rbp*8]
0xe312:	call	0x7ae0


0xe317:	test	rax, rax
0xe31a:	je	0xe36c


0xe31c:	mov	r10d, 1
0xe322:	cmp	qword ptr [r13 + 0x28], 0
0xe327:	je	0xe357


0xe454:	test	eax, eax
0xe456:	jne	0xe4c5


0xe458:	sub	qword ptr [rsp + 8], 8
0xe45e:	test	r15, r15
0xe461:	jne	0xe264


0xe4ad:	mov	rdi, qword ptr [rsp + 0x50]
0xe4b2:	call	0x18d0


0xe4b7:	xor	eax, eax
0xe4b9:	jmp	0xe4d5


0xe4d2:	mov	eax, dword ptr [rsp]
0xe4d5:	mov	rdx, qword ptr [rsp + 0x58]
0xe4da:	xor	rdx, qword ptr fs:[0x28]
0xe4e3:	jne	0xe4fb


0xeed3:	mov	rdi, qword ptr [rsp + 0x110]
0xeedb:	mov	r15d, eax
0xeede:	call	0x18d0


0xeee3:	test	r15d, r15d
0xeee6:	jne	0xfb04


0xeeec:	cmp	qword ptr [r12], 0
0xeef1:	jne	0xfb63


0xfb04:	mov	r14, qword ptr [rsp + 0x18]
0xfb09:	mov	eax, r15d
0xfb0c:	mov	rdi, r12
0xfb0f:	mov	dword ptr [rsp + 8], eax
0xfb13:	call	0x18d0


0xeef7:	cmp	qword ptr [rbp], 0
0xeefc:	jne	0xfb63


0xfb63:	mov	r15, qword ptr [rsp + 0x10]
0xfb68:	mov	rcx, qword ptr [rsp + 8]
0xfb6d:	mov	rdx, rbp
0xfb70:	mov	rsi, r12
0xfb73:	mov	qword ptr [rsp + 0x20], r14
0xfb78:	mov	rdi, r15
0xfb7b:	call	0x92f0


0xef02:	mov	rdx, qword ptr [rsp + 0x1d8]
0xef0a:	nop	word ptr [rax + rax]
0xef10:	sub	r14, 1
0xef14:	cmp	r14, -1
0xef18:	je	0xf9db


0xf9db:	mov	rdi, r12
0xf9de:	call	0x18d0


0xef1e:	mov	rax, qword ptr [rdx + r14*8]
0xef22:	test	rax, rax
0xef25:	je	0xef10


0xef10:	sub	r14, 1
0xef14:	cmp	r14, -1
0xef18:	je	0xf9db


0xef27:	test	byte ptr [rax + 0x68], 0x10
0xef2b:	je	0xef10


0xef2d:	mov	rsi, qword ptr [rax + 0x10]
0xef31:	mov	rdi, qword ptr [rsp]
0xef35:	lea	rdx, [rax + 0x18]
0xef39:	mov	rcx, r14
0xef3c:	call	0x9ac0


0xef41:	mov	r13, rax
0xef44:	lea	rax, [r14 + 1]
0xef48:	mov	qword ptr [rsp + 8], rax
0xef4d:	jmp	0xee80


0xee80:	mov	rax, qword ptr [rsp + 8]
0xee85:	xor	esi, esi
0xee87:	mov	rdi, rbp
0xee8a:	lea	rdx, [rax*8]
0xee92:	call	0x1a60


0xfb80:	mov	rdi, rbp
0xfb83:	mov	dword ptr [rsp + 8], eax
0xfb87:	call	0x18d0


0xfb8c:	mov	eax, dword ptr [rsp + 8]
0xfb90:	test	eax, eax
0xfb92:	je	0xf762


0xf762:	mov	rdi, qword ptr [rsp + 0x1d8]
0xf76a:	call	0x18d0


0xfb98:	xor	r14d, r14d
0xfb9b:	jmp	0xfb0c


0xfb0c:	mov	rdi, r12
0xfb0f:	mov	dword ptr [rsp + 8], eax
0xfb13:	call	0x18d0


0xfb18:	mov	rdi, r14
0xfb1b:	call	0x18d0


0xfb20:	mov	eax, dword ptr [rsp + 8]
0xfb24:	cmp	eax, 1
0xfb27:	je	0xf430


0xf76f:	mov	rax, qword ptr [rsp + 0x20]
0xf774:	mov	qword ptr [rsp + 0x1d8], r12
0xf77c:	mov	qword ptr [rsp + 0x1d0], r13
0xf784:	mov	qword ptr [rsp + 0x1c8], rax
0xf78c:	cmp	qword ptr [rsp + 0x270], 0
0xf795:	je	0xf050


0xf9e3:	mov	rdi, rbp
0xf9e6:	call	0x18d0


0xf9eb:	jmp	0xf430


0xf73a:	mov	rdi, qword ptr [rsp + 0x110]
0xf742:	mov	dword ptr [rsp + 8], eax
0xf746:	call	0x18d0


0xf74b:	mov	eax, dword ptr [rsp + 8]
0xf74f:	test	eax, eax
0xf751:	jne	0xfb98


0xf757:	cmp	qword ptr [r12], 0
0xf75c:	je	0xf423


0xf423:	mov	rdi, r12
0xf426:	call	0x18d0


0x1032e:	test	eax, eax
0x10330:	jne	0x1043e


0x10336:	mov	rsi, qword ptr [rbx + 8]
0x1033a:	mov	rdx, qword ptr [rsp + 0x60]
0x1033f:	test	rsi, rsi
0x10342:	je	0x1035d


0x1035d:	mov	r11, qword ptr [rsp + 0x38]
0x10362:	mov	rax, qword ptr [rsp + 0x18]
0x10367:	mov	rdi, qword ptr [rsp + 0x88]
0x1036f:	lea	r9, [r11 + 0x30]
0x10373:	mov	qword ptr [rdx + rax], r15
0x10377:	mov	rdx, r13
0x1037a:	mov	rsi, r9
0x1037d:	call	0x7ae0


0x10344:	lea	rcx, [rbp + 1]
0x10348:	mov	rdi, r12
0x1034b:	call	0x92f0


0x10350:	test	eax, eax
0x10352:	jne	0x1043e


0x10358:	mov	rdx, qword ptr [rsp + 0x60]
0x1035d:	mov	r11, qword ptr [rsp + 0x38]
0x10362:	mov	rax, qword ptr [rsp + 0x18]
0x10367:	mov	rdi, qword ptr [rsp + 0x88]
0x1036f:	lea	r9, [r11 + 0x30]
0x10373:	mov	qword ptr [rdx + rax], r15
0x10377:	mov	rdx, r13
0x1037a:	mov	rsi, r9
0x1037d:	call	0x7ae0


0x10382:	sub	rax, 1
0x10386:	mov	rdx, rax
0x10389:	js	0x10397


0x10397:	mov	rcx, qword ptr [rsp + 8]
0x1039c:	lea	rax, [r13 + r13*4]
0x103a1:	mov	rdx, qword ptr [rcx + 0xd8]
0x103a8:	lea	rax, [rdx + rax*8]
0x103ac:	nop	dword ptr [rax]
0x103b0:	add	r13, 1
0x103b4:	cmp	byte ptr [rax + 0x20], 0
0x103b8:	lea	r15, [rax + 0x28]
0x103bc:	je	0x103f0


0x1038b:	lea	rdi, [r11 + 0x28]
0x1038f:	mov	rsi, r9
0x10392:	call	0x7c60


0x13eca:	test	rax, rax
0x13ecd:	mov	qword ptr [rbx + 0x20], rax
0x13ed1:	je	0x13f80


0x13f80:	mov	ebp, 0xc
0x13f85:	pop	rbx
0x13f86:	mov	eax, ebp
0x13f88:	pop	rbp
0x13f89:	pop	r12
0x13f8b:	pop	r13
0x13f8d:	pop	r14
0x13f8f:	ret	


0x13ed7:	mov	r13, rbp
0x13eda:	shl	r13, 0x15
0x13ede:	and	r13d, 0x400000
0x13ee5:	or	r13, r14
0x13ee8:	test	bpl, 4
0x13eec:	jne	0x13f50


0x13eee:	and	byte ptr [rbx + 0x38], 0x7f
0x13ef2:	movzx	edx, byte ptr [rbx + 0x38]
0x13ef6:	shr	ebp, 3
0x13ef9:	mov	rdi, r12
0x13efc:	and	ebp, 1
0x13eff:	mov	qword ptr [rbx + 0x28], 0
0x13f07:	shl	ebp, 4
0x13f0a:	and	edx, 0xffffffef
0x13f0d:	or	ebp, edx
0x13f0f:	mov	byte ptr [rbx + 0x38], bpl
0x13f13:	call	0x19d0


0x13f50:	and	r13, 0xffffffffffffffbf
0x13f54:	or	byte ptr [rbx + 0x38], 0x80
0x13f58:	or	r13, 0x100
0x13f5f:	jmp	0x13ef2


0x13ef2:	movzx	edx, byte ptr [rbx + 0x38]
0x13ef6:	shr	ebp, 3
0x13ef9:	mov	rdi, r12
0x13efc:	and	ebp, 1
0x13eff:	mov	qword ptr [rbx + 0x28], 0
0x13f07:	shl	ebp, 4
0x13f0a:	and	edx, 0xffffffef
0x13f0d:	or	ebp, edx
0x13f0f:	mov	byte ptr [rbx + 0x38], bpl
0x13f13:	call	0x19d0


0x13f18:	mov	rcx, r13
0x13f1b:	mov	rdx, rax
0x13f1e:	mov	rsi, r12
0x13f21:	mov	rdi, rbx
0x13f24:	call	0x12690


0x13f29:	cmp	eax, 0x10
0x13f2c:	mov	ebp, eax
0x13f2e:	je	0x13f68


0x13f68:	mov	ebp, 8
0x13f6d:	mov	rdi, qword ptr [rbx + 0x20]
0x13f71:	call	0x18d0


0x13f30:	test	eax, eax
0x13f32:	jne	0x13f6d


0x13f34:	mov	rdi, rbx
0x13f37:	call	0x13810


0x13f6d:	mov	rdi, qword ptr [rbx + 0x20]
0x13f71:	call	0x18d0


0x13f3c:	pop	rbx
0x13f3d:	mov	eax, ebp
0x13f3f:	pop	rbp
0x13f40:	pop	r12
0x13f42:	pop	r13
0x13f44:	pop	r14
0x13f46:	ret	


0x13f76:	mov	qword ptr [rbx + 0x20], 0
0x13f7e:	jmp	0x13f3c


0x141ec:	mov	ebx, dword ptr [rbp]
0x141ef:	mov	rdi, rbp
0x141f2:	mov	r12, rax
0x141f5:	call	0x5e20


0x1cd7:	lea	rsi, [rip + 0x12781]
0x1cde:	lea	rdi, [rip + 0x12751]
0x1ce5:	call	0x1990


0x1990:	jmp	qword ptr [rip + 0x2174ba]




0x1426b:	mov	rdx, rax
0x1426e:	mov	eax, 1
0x14273:	test	rdx, rdx
0x14276:	je	0x14295


0x14295:	add	rsp, 8
0x14299:	ret	


0x14278:	lea	rdi, [rip + 0x1e31]
0x1427f:	mov	ecx, 2
0x14284:	mov	rsi, rdx
0x14287:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x14287:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x14289:	seta	cl
0x1428c:	sbb	cl, 0
0x1428f:	xor	eax, eax
0x14291:	test	cl, cl
0x14293:	jne	0x142a0


0x142a0:	lea	rdi, [rip + 0x1e0b]
0x142a7:	mov	ecx, 6
0x142ac:	mov	rsi, rdx
0x142af:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x142af:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x142b1:	seta	al
0x142b4:	sbb	al, 0
0x142b6:	test	al, al
0x142b8:	setne	al
0x142bb:	add	rsp, 8
0x142bf:	ret	


0x5f8c:	test	al, al
0x5f8e:	jne	0x5fa0


0x5f90:	movzx	eax, byte ptr [r13]
0x5f95:	mov	ebp, 1
0x5f9a:	mov	dword ptr [rbx], eax
0x5f9c:	nop	dword ptr [rax]
0x5fa0:	mov	rdx, qword ptr [rsp + 8]
0x5fa5:	xor	rdx, qword ptr fs:[0x28]
0x5fae:	mov	rax, rbp
0x5fb1:	jne	0x5fbe


0x127c7:	movzx	edx, byte ptr [rax]
0x127ca:	and	edx, 0xffffffdf
0x127cd:	cmp	dl, 0x55
0x127d0:	jne	0x12820


0x127d2:	movzx	edx, byte ptr [rax + 1]
0x127d6:	and	edx, 0xffffffdf
0x127d9:	cmp	dl, 0x54
0x127dc:	jne	0x12820


0x12820:	movzx	eax, byte ptr [rbx + 0xb0]
0x12827:	mov	edx, eax
0x12829:	and	edx, 0xfffffff7
0x1282c:	cmp	dword ptr [rbx + 0xb4], 1
0x12833:	mov	byte ptr [rbx + 0xb0], dl
0x12839:	jle	0x1284e


0x127de:	movzx	edx, byte ptr [rax + 2]
0x127e2:	and	edx, 0xffffffdf
0x127e5:	cmp	dl, 0x46
0x127e8:	jne	0x12820


0x1284e:	cmp	qword ptr [rbx], 0
0x12852:	je	0x12d96


0x1283b:	test	al, 4
0x1283d:	je	0x12da3


0x127ea:	xor	edx, edx
0x127ec:	cmp	byte ptr [rax + 3], 0x2d
0x127f0:	lea	rdi, [rip + 0x30ff]
0x127f7:	mov	ecx, 2
0x127fc:	sete	dl
0x127ff:	lea	rsi, [rax + rdx + 3]
0x12804:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x12858:	cmp	qword ptr [rbx + 0x40], 0
0x1285d:	je	0x12d96


0x12da3:	mov	esi, 1
0x12da8:	mov	edi, 0x20
0x12dad:	call	0x1ab0


0x12843:	lea	rax, [rip + 0x3616]
0x1284a:	mov	qword ptr [rbx + 0x78], rax
0x1284e:	cmp	qword ptr [rbx], 0
0x12852:	je	0x12d96


0x12804:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x12806:	seta	al
0x12809:	sbb	al, 0
0x1280b:	test	al, al
0x1280d:	jne	0x12820


0x12863:	mov	rax, qword ptr [rsp + 0x18]
0x12868:	lea	rbp, [rsp + 0x80]
0x12870:	mov	ecx, 0x12
0x12875:	mov	dword ptr [rsp + 0x4c], 0
0x1287d:	lea	r8, [rbp + 8]
0x12881:	and	eax, 0x400000
0x12886:	mov	qword ptr [rsp + 0x20], rax
0x1288b:	mov	rax, qword ptr [rsp + 8]
0x12890:	setne	dl
0x12893:	mov	rdi, r8
0x12896:	mov	rsi, qword ptr [rax + 0x28]
0x1289a:	xor	eax, eax
0x1289c:	rep stosq	qword ptr [rdi], rax


0x1280f:	or	byte ptr [rbx + 0xb0], 4
0x12816:	nop	word ptr cs:[rax + rax]
0x12820:	movzx	eax, byte ptr [rbx + 0xb0]
0x12827:	mov	edx, eax
0x12829:	and	edx, 0xfffffff7
0x1282c:	cmp	dword ptr [rbx + 0xb4], 1
0x12833:	mov	byte ptr [rbx + 0xb0], dl
0x12839:	jle	0x1284e


0x1289c:	rep stosq	qword ptr [rdi], rax


0x1289f:	mov	rax, qword ptr [rsp + 0x10]
0x128a4:	mov	rdi, qword ptr [rsp]
0x128a8:	test	rsi, rsi
0x128ab:	mov	byte ptr [rsp + 0x108], dl
0x128b2:	mov	ecx, dword ptr [rbx + 0xb4]
0x128b8:	setne	r12b
0x128bc:	mov	qword ptr [rsp + 0xf8], rsi
0x128c4:	mov	qword ptr [rsp + 0x80], rax
0x128cc:	movzx	eax, byte ptr [rbx + 0xb0]
0x128d3:	or	r12d, edx
0x128d6:	mov	qword ptr [rsp + 0xd8], rdi
0x128de:	mov	qword ptr [rsp + 0xd0], rdi
0x128e6:	mov	esi, r12d
0x128e9:	mov	byte ptr [rsp + 0x10b], r12b
0x128f1:	mov	dword ptr [rsp + 0x110], ecx
0x128f8:	mov	qword ptr [rsp + 0xe8], rdi
0x12900:	mov	qword ptr [rsp + 0xe0], rdi
0x12908:	mov	edx, eax
0x1290a:	shr	al, 3
0x1290d:	shr	dl, 2
0x12910:	and	eax, 1
0x12913:	and	edx, 1
0x12916:	test	rdi, rdi
0x12919:	mov	byte ptr [rsp + 0x10a], al
0x12920:	mov	byte ptr [rsp + 0x109], dl
0x12927:	jne	0x12d65


0x1292d:	test	sil, sil
0x12930:	je	0x1293f


0x12d65:	mov	rsi, qword ptr [rsp + 0x28]
0x12d6a:	mov	rdi, rbp
0x12d6d:	call	0x6490


0x1293f:	cmp	qword ptr [rsp + 0x20], 0
0x12945:	mov	rax, qword ptr [rsp + 0x10]
0x1294a:	mov	qword ptr [rsp + 0x88], rax
0x12952:	je	0x12a55


0x12932:	mov	rax, qword ptr [rsp + 0x88]
0x1293a:	mov	qword ptr [rsp + 0x10], rax
0x1293f:	cmp	qword ptr [rsp + 0x20], 0
0x12945:	mov	rax, qword ptr [rsp + 0x10]
0x1294a:	mov	qword ptr [rsp + 0x88], rax
0x12952:	je	0x12a55


0x12a55:	cmp	ecx, 1
0x12a58:	jg	0x1340a


0x12958:	cmp	ecx, 1
0x1295b:	jle	0x1354d


0x12a5e:	test	r12b, r12b
0x12a61:	mov	rsi, qword ptr [rsp + 0xc0]
0x12a69:	je	0x13084


0x1340a:	mov	rdi, rbp
0x1340d:	call	0x6830


0x1354d:	mov	rdi, rbp
0x13550:	call	0x67c0


0x12961:	mov	rdi, rbp
0x12964:	call	0x6a00


0x13084:	mov	qword ptr [rsp + 0xb0], rsi
0x1308c:	mov	qword ptr [rsp + 0xb8], rsi
0x13094:	mov	dword ptr [rsp + 0x4c], 0
0x1309c:	jmp	0x12ae8


0x12a6f:	cmp	qword ptr [rsp + 0xd8], rsi
0x12a77:	mov	rax, qword ptr [rsp + 0xb0]
0x12a7f:	cmovle	rsi, qword ptr [rsp + 0xd8]
0x12a88:	cmp	rsi, rax
0x12a8b:	jg	0x12a9d


0x12ae8:	mov	r12, qword ptr [rsp + 8]
0x12aed:	mov	r14, qword ptr [rsp + 0x18]
0x12af2:	lea	r13, [rsp + 0x50]
0x12af7:	mov	rsi, rbp
0x12afa:	mov	rdi, r13
0x12afd:	mov	qword ptr [rsp + 0x28], r13
0x12b02:	mov	r15, qword ptr [r12]
0x12b06:	mov	rdx, r14
0x12b09:	mov	qword ptr [r12 + 0x30], 0
0x12b12:	or	rdx, 0x800000
0x12b19:	mov	qword ptr [r15 + 0xd8], r14
0x12b20:	call	0x106e0


0x12a8d:	jmp	0x12ad0


0x12a9d:	mov	rdx, qword ptr [rsp + 0x80]
0x12aa5:	mov	rcx, qword ptr [rsp + 0xf8]
0x12aad:	add	rdx, rax
0x12ab0:	add	rdx, qword ptr [rsp + 0xa8]
0x12ab8:	movzx	edx, byte ptr [rdx]
0x12abb:	movzx	edx, byte ptr [rcx + rdx]
0x12abf:	mov	rcx, qword ptr [rsp + 0x10]
0x12ac4:	mov	byte ptr [rcx + rax], dl
0x12ac7:	add	rax, 1
0x12acb:	cmp	rsi, rax
0x12ace:	jne	0x12a90


0x12ad0:	mov	qword ptr [rsp + 0xb0], rax
0x12ad8:	mov	qword ptr [rsp + 0xb8], rax
0x12ae0:	mov	dword ptr [rsp + 0x4c], 0
0x12ae8:	mov	r12, qword ptr [rsp + 8]
0x12aed:	mov	r14, qword ptr [rsp + 0x18]
0x12af2:	lea	r13, [rsp + 0x50]
0x12af7:	mov	rsi, rbp
0x12afa:	mov	rdi, r13
0x12afd:	mov	qword ptr [rsp + 0x28], r13
0x12b02:	mov	r15, qword ptr [r12]
0x12b06:	mov	rdx, r14
0x12b09:	mov	qword ptr [r12 + 0x30], 0
0x12b12:	or	rdx, 0x800000
0x12b19:	mov	qword ptr [r15 + 0xd8], r14
0x12b20:	call	0x106e0


0x12a90:	mov	rdx, qword ptr [rsp + 0x88]
0x12a98:	mov	qword ptr [rsp + 0x10], rdx
0x12a9d:	mov	rdx, qword ptr [rsp + 0x80]
0x12aa5:	mov	rcx, qword ptr [rsp + 0xf8]
0x12aad:	add	rdx, rax
0x12ab0:	add	rdx, qword ptr [rsp + 0xa8]
0x12ab8:	movzx	edx, byte ptr [rdx]
0x12abb:	movzx	edx, byte ptr [rcx + rdx]
0x12abf:	mov	rcx, qword ptr [rsp + 0x10]
0x12ac4:	mov	byte ptr [rcx + rax], dl
0x12ac7:	add	rax, 1
0x12acb:	cmp	rsi, rax
0x12ace:	jne	0x12a90


0x12b25:	lea	r9, [rsp + 0x4c]
0x12b2a:	xor	r8d, r8d
0x12b2d:	mov	rcx, r14
0x12b30:	mov	rdx, r13
0x12b33:	mov	rsi, r12
0x12b36:	mov	rdi, rbp
0x12b39:	cdqe	
0x12b3b:	add	qword ptr [rsp + 0xc8], rax
0x12b43:	call	0x12510


0x12b48:	mov	ecx, dword ptr [rsp + 0x4c]
0x12b4c:	test	ecx, ecx
0x12b4e:	jne	0x13577


0x12b54:	lea	r13, [r15 + 0x70]
0x12b58:	lea	r12, [rsp + 0x60]
0x12b5d:	sub	r15, -0x80
0x12b61:	xor	edx, edx
0x12b63:	xor	ecx, ecx
0x12b65:	mov	rsi, r15
0x12b68:	mov	r8, r12
0x12b6b:	mov	rdi, r13
0x12b6e:	mov	qword ptr [rsp], rax
0x12b72:	mov	byte ptr [rsp + 0x68], 2
0x12b77:	call	0x87a0


0x13577:	test	rax, rax
0x1357a:	je	0x136ab


0x136ab:	mov	rax, qword ptr [rsp + 8]
0x136b0:	mov	qword ptr [rbx + 0x68], 0
0x136b8:	mov	r13, qword ptr [rax]
0x136bb:	jmp	0x129bc


0x13580:	lea	r13, [r15 + 0x70]
0x13584:	lea	r12, [rsp + 0x60]
0x13589:	sub	r15, -0x80
0x1358d:	xor	ecx, ecx
0x1358f:	xor	edx, edx
0x13591:	mov	rsi, r15
0x13594:	mov	r8, r12
0x13597:	mov	rdi, r13
0x1359a:	mov	qword ptr [rsp], rax
0x1359e:	mov	byte ptr [rsp + 0x68], 2
0x135a3:	call	0x87a0


0x129bc:	mov	rdi, qword ptr [r13 + 0x70]
0x129c0:	test	rdi, rdi
0x129c3:	je	0x129d8


0x129d8:	mov	rdi, qword ptr [r13 + 0x20]
0x129dc:	mov	qword ptr [r13 + 0x70], 0
0x129e4:	mov	dword ptr [r13 + 0x80], 0xf
0x129ef:	mov	qword ptr [r13 + 0x68], 0
0x129f7:	call	0x18d0


0x129d0:	test	r12, r12
0x129d3:	mov	rdi, r12
0x129d6:	jne	0x129c8


0x129c8:	mov	r12, qword ptr [rdi]
0x129cb:	call	0x18d0


0x129fc:	mov	qword ptr [r13 + 0x20], 0
0x12a04:	mov	rdi, rbp
0x12a07:	call	0x77d0


0x135a8:	mov	r9, qword ptr [rsp]
0x135ac:	mov	r11, rax
0x135af:	jmp	0x12b8b


0x12b8b:	mov	rcx, r11
0x12b8e:	mov	rdx, r9
0x12b91:	mov	r8, r12
0x12b94:	mov	rsi, r15
0x12b97:	mov	rdi, r13
0x12b9a:	mov	qword ptr [rsp], r11
0x12b9e:	mov	byte ptr [rsp + 0x68], 0x10
0x12ba3:	call	0x87a0


0x12ba8:	mov	r11, qword ptr [rsp]
0x12bac:	mov	rdx, r11
0x12baf:	mov	r11, rax
0x12bb2:	test	rdx, rdx
0x12bb5:	mov	rcx, qword ptr [rsp + 8]
0x12bba:	sete	dl
0x12bbd:	test	r11, r11
0x12bc0:	sete	al
0x12bc3:	or	dl, al
0x12bc5:	mov	r13, qword ptr [rcx]
0x12bc8:	jne	0x13562


0x12bce:	mov	r15, qword ptr [r13 + 8]
0x12bd2:	mov	qword ptr [rbx + 0x68], r11
0x12bd6:	lea	rcx, [r15*8]
0x12bde:	lea	r15, [r15 + r15*2]
0x12be2:	mov	rdi, rcx
0x12be5:	mov	qword ptr [rsp], rcx
0x12be9:	shl	r15, 3
0x12bed:	call	0x1b00


0x13562:	mov	dword ptr [rsp + 0x4c], 0xc
0x1356a:	mov	qword ptr [rbx + 0x68], 0
0x13572:	jmp	0x129bc


0x12bf2:	mov	rcx, qword ptr [rsp]
0x12bf6:	mov	qword ptr [r13 + 0x18], rax
0x12bfa:	mov	qword ptr [rsp + 0x18], rax
0x12bff:	mov	rdi, rcx
0x12c02:	call	0x1b00


0x12c07:	mov	rdi, r15
0x12c0a:	mov	qword ptr [r13 + 0x20], rax
0x12c0e:	mov	qword ptr [rsp + 0x10], rax
0x12c13:	call	0x1b00


0x12c18:	mov	rdi, r15
0x12c1b:	mov	qword ptr [r13 + 0x28], rax
0x12c1f:	mov	qword ptr [rsp], rax
0x12c23:	call	0x1b00


0x12c28:	mov	rdx, qword ptr [rsp + 0x18]
0x12c2d:	mov	qword ptr [r13 + 0x30], rax
0x12c31:	mov	rsi, qword ptr [rsp]
0x12c35:	mov	rcx, qword ptr [rsp + 0x10]
0x12c3a:	test	rdx, rdx
0x12c3d:	je	0x133fd


0x133fd:	mov	dword ptr [rsp + 0x4c], 0xc
0x13405:	jmp	0x129bc


0x12c43:	test	rcx, rcx
0x12c46:	je	0x133fd


0x12c4c:	test	rsi, rsi
0x12c4f:	je	0x133fd


0x12c55:	test	rax, rax
0x12c58:	je	0x133fd


0x12c5e:	mov	rax, qword ptr [rsp + 8]
0x12c63:	mov	r15, qword ptr [rax + 0x30]
0x12c67:	lea	rdi, [r15*8]
0x12c6f:	call	0x1b00


0x12c74:	test	rax, rax
0x12c77:	mov	qword ptr [r13 + 0xe0], rax
0x12c7e:	je	0x12ced


0x12ced:	mov	rdi, qword ptr [r13 + 0x68]
0x12cf1:	mov	rdx, qword ptr [rsp + 8]
0x12cf6:	lea	rsi, [rip - 0xa15d]
0x12cfd:	call	0x63c0


0x12c80:	test	r15, r15
0x12c83:	je	0x12c9d


0x12c9d:	mov	rdi, qword ptr [r13 + 0x68]
0x12ca1:	lea	rsi, [rip - 0xb008]
0x12ca8:	mov	rdx, r13
0x12cab:	call	0x6430


0x12c85:	xor	edx, edx
0x12c87:	nop	word ptr [rax + rax]
0x12c90:	mov	qword ptr [rax + rdx*8], rdx
0x12c94:	add	rdx, 1
0x12c98:	cmp	rdx, r15
0x12c9b:	jne	0x12c90


0x12c90:	mov	qword ptr [rax + rdx*8], rdx
0x12c94:	add	rdx, 1
0x12c98:	cmp	rdx, r15
0x12c9b:	jne	0x12c90


0x12b7c:	mov	r9, qword ptr [rsp]
0x12b80:	mov	r11, rax
0x12b83:	mov	rdx, rax
0x12b86:	test	r9, r9
0x12b89:	je	0x12bb2


0x12bb2:	test	rdx, rdx
0x12bb5:	mov	rcx, qword ptr [rsp + 8]
0x12bba:	sete	dl
0x12bbd:	test	r11, r11
0x12bc0:	sete	al
0x12bc3:	or	dl, al
0x12bc5:	mov	r13, qword ptr [rcx]
0x12bc8:	jne	0x13562


0x12969:	test	eax, eax
0x1296b:	jne	0x129b0


0x1296d:	mov	rax, qword ptr [rsp]
0x12971:	cmp	rax, qword ptr [rsp + 0xb8]
0x12979:	jle	0x13530


0x129b0:	mov	dword ptr [rsp + 0x4c], eax
0x129b4:	mov	rax, qword ptr [rsp + 8]
0x129b9:	mov	r13, qword ptr [rax]
0x129bc:	mov	rdi, qword ptr [r13 + 0x70]
0x129c0:	test	rdi, rdi
0x129c3:	je	0x129d8


0x13530:	mov	dword ptr [rsp + 0x4c], 0
0x13538:	jmp	0x12ae8


0x1297f:	movsxd	rax, dword ptr [rbx + 0xb4]
0x12986:	mov	rsi, qword ptr [rsp + 0xc0]
0x1298e:	add	rax, qword ptr [rsp + 0xb0]
0x12996:	cmp	rsi, rax
0x12999:	jg	0x13530


0x1299f:	add	rsi, rsi
0x129a2:	mov	rdi, rbp
0x129a5:	call	0x6490


0x13555:	mov	dword ptr [rsp + 0x4c], 0
0x1355d:	jmp	0x12ae8


0x13412:	mov	dword ptr [rsp + 0x4c], 0
0x1341a:	jmp	0x12ae8


0x129aa:	test	eax, eax
0x129ac:	je	0x12961


0x12d72:	test	eax, eax
0x12d74:	jne	0x129b0


0x12d7a:	movzx	esi, byte ptr [rsp + 0x10b]
0x12d82:	mov	ecx, dword ptr [rbx + 0xb4]
0x12d88:	test	sil, sil
0x12d8b:	je	0x1293f


0x12d91:	jmp	0x12932


0x12db2:	test	rax, rax
0x12db5:	mov	qword ptr [rbx + 0x78], rax
0x12db9:	je	0x12d96


0x12dbb:	xor	r12d, r12d
0x12dbe:	xor	ebp, ebp
0x12dc0:	mov	r13d, 1
0x12dc6:	xor	r15d, r15d
0x12dc9:	nop	dword ptr [rax]
0x12dd0:	lea	r14d, [rbp + r15]
0x12dd5:	mov	edi, r14d
0x12dd8:	call	0x1b90


0x1b90:	jmp	qword ptr [rip + 0x2173ba]




0x142ce:	test	rax, rax
0x142d1:	je	0x142f0


0x142f0:	lea	rax, [rip + 0x1dc1]
0x142f7:	add	rsp, 8
0x142fb:	ret	


0x142d3:	cmp	byte ptr [rax], 0
0x142d6:	lea	rdx, [rip + 0x1ddb]
0x142dd:	cmove	rax, rdx
0x142e1:	add	rsp, 8
0x142e5:	ret	


0x30e0:	movzx	edx, byte ptr [rax]
0x30e3:	and	edx, 0xffffffdf
0x30e6:	cmp	dl, 0x55
0x30e9:	je	0x3160


0x3160:	movzx	edx, byte ptr [rax + 1]
0x3164:	and	edx, 0xffffffdf
0x3167:	cmp	dl, 0x54
0x316a:	jne	0x30f0


0x30eb:	cmp	dl, 0x47
0x30ee:	je	0x3110


0x316c:	movzx	edx, byte ptr [rax + 2]
0x3170:	and	edx, 0xffffffdf
0x3173:	cmp	dl, 0x46
0x3176:	jne	0x30f0


0x30f0:	lea	rax, [rip + 0x11dcc]
0x30f7:	lea	rdx, [rip + 0x11dc7]
0x30fe:	cmp	ebx, 9
0x3101:	cmovne	rax, rdx
0x3105:	add	rsp, 8
0x3109:	pop	rbx
0x310a:	pop	rbp
0x310b:	ret	


0x3110:	movzx	edx, byte ptr [rax + 1]
0x3114:	and	edx, 0xffffffdf
0x3117:	cmp	dl, 0x42
0x311a:	jne	0x30f0


0x317c:	cmp	byte ptr [rax + 3], 0x2d
0x3180:	jne	0x30f0


0x311c:	cmp	byte ptr [rax + 2], 0x31
0x3120:	jne	0x30f0


0x3186:	cmp	byte ptr [rax + 4], 0x38
0x318a:	jne	0x30f0


0x3122:	cmp	byte ptr [rax + 3], 0x38
0x3126:	jne	0x30f0


0x3190:	cmp	byte ptr [rax + 5], 0
0x3194:	jne	0x30f0


0x3128:	cmp	byte ptr [rax + 4], 0x30
0x312c:	jne	0x30f0


0x319a:	cmp	byte ptr [rbp], 0x60
0x319e:	lea	rax, [rip + 0x11d0f]
0x31a5:	lea	rdx, [rip + 0x11d0c]
0x31ac:	cmovne	rax, rdx
0x31b0:	add	rsp, 8
0x31b4:	pop	rbx
0x31b5:	pop	rbp
0x31b6:	ret	


0x312e:	cmp	byte ptr [rax + 5], 0x33
0x3132:	jne	0x30f0


0x3134:	cmp	byte ptr [rax + 6], 0x30
0x3138:	jne	0x30f0


0x313a:	cmp	byte ptr [rax + 7], 0
0x313e:	jne	0x30f0


0x3140:	cmp	byte ptr [rbp], 0x60
0x3144:	lea	rax, [rip + 0x11d71]
0x314b:	lea	rdx, [rip + 0x11d6e]
0x3152:	cmovne	rax, rdx
0x3156:	add	rsp, 8
0x315a:	pop	rbx
0x315b:	pop	rbp
0x315c:	ret	


0x12ddd:	cmp	eax, -1
0x12de0:	je	0x12df5


0x12df5:	test	r14d, 0xffffff80
0x12dfc:	jne	0x12e0a


0x12de2:	mov	rsi, qword ptr [rbx + 0x78]
0x12de6:	mov	rdi, r13
0x12de9:	mov	ecx, r15d
0x12dec:	shl	rdi, cl
0x12def:	add	rsi, r12
0x12df2:	or	qword ptr [rsi], rdi
0x12df5:	test	r14d, 0xffffff80
0x12dfc:	jne	0x12e0a


0x12dfe:	cmp	eax, r14d
0x12e01:	je	0x12e0a


0x12e0a:	add	r15, 1
0x12e0e:	cmp	r15, 0x40
0x12e12:	jne	0x12dd0


0x12e03:	or	byte ptr [rbx + 0xb0], 8
0x12e0a:	add	r15, 1
0x12e0e:	cmp	r15, 0x40
0x12e12:	jne	0x12dd0


0x12e14:	add	ebp, 0x40
0x12e17:	add	r12, 8
0x12e1b:	cmp	ebp, 0x100
0x12e21:	jne	0x12dc6


0x12dd0:	lea	r14d, [rbp + r15]
0x12dd5:	mov	edi, r14d
0x12dd8:	call	0x1b90


0x12e23:	jmp	0x1284e


0x12dc6:	xor	r15d, r15d
0x12dc9:	nop	dword ptr [rax]
0x12dd0:	lea	r14d, [rbp + r15]
0x12dd5:	mov	edi, r14d
0x12dd8:	call	0x1b90


0x1cea:	lea	rdi, [rip + 0x12745]
0x1cf1:	call	0x1950


0x1950:	jmp	qword ptr [rip + 0x2174da]




0xbd46:	mov	rdi, qword ptr [rsp + 8]
0xbd4b:	mov	eax, dword ptr [rsp]
0xbd4e:	mov	dword ptr [rdi], eax
0xbd50:	jmp	0xbcb2


0xbce8:	jmp	0xbcb2


0x92dc:	jmp	0x92c8


0x7911:	cmp	qword ptr [rbp], rbx
0x7915:	jg	0x7900


0x7900:	mov	rax, qword ptr [rbp + 0x10]
0x7904:	mov	rdi, qword ptr [rax + rbx*8]
0x7908:	add	rbx, 1
0x790c:	call	0x7770


0xd42a:	jmp	0xd3ec


0xd1bc:	xor	eax, eax
0xd1be:	jmp	0xd369


0xd154:	mov	eax, 0xc
0xd159:	jmp	0xd369


0x6c85:	mov	edx, dword ptr [rsp + 0x18]
0x6c89:	mov	r12d, eax
0x6c8c:	cmp	edx, eax
0x6c8e:	je	0x6d08


0x6d08:	mov	rsi, qword ptr [r14 + 0x28]
0x6d0c:	mov	rdi, qword ptr [r14 + 8]
0x6d10:	mov	rdx, rbp
0x6d13:	add	rsi, r15
0x6d16:	add	rsi, qword ptr [r14]
0x6d19:	add	rdi, r15
0x6d1c:	call	0x1ad0


0x6c90:	mov	rdx, qword ptr [rsp + 0x38]
0x6c95:	mov	rdi, qword ptr [rsp + 0x28]
0x6c9a:	mov	esi, eax
0x6c9c:	call	0x1b10


0x6ca1:	cmp	rbp, rax
0x6ca4:	jne	0x6e18


0x6caa:	mov	rdi, qword ptr [r14 + 8]
0x6cae:	mov	rsi, qword ptr [rsp + 0x28]
0x6cb3:	mov	rdx, rbp
0x6cb6:	add	rdi, r15
0x6cb9:	call	0x1ad0


0x6e18:	mov	r13, r15
0x6e1b:	jmp	0x6aae


0x6aae:	mov	rdx, qword ptr [r14 + 0x78]
0x6ab2:	mov	rax, qword ptr [r14 + 0x20]
0x6ab6:	test	rdx, rdx
0x6ab9:	mov	qword ptr [rsp + 0x48], rax
0x6abe:	jne	0x6dc9


0x6cbe:	add	r15, 1
0x6cc2:	mov	rdx, qword ptr [r14 + 0x10]
0x6cc6:	lea	rax, [r13*4]
0x6cce:	lea	rcx, [r15 + rbp - 1]
0x6cd3:	cmp	r15, rcx
0x6cd6:	mov	dword ptr [rdx + r13*4], r12d
0x6cda:	jge	0x6cfa


0x6cdc:	lea	rax, [rdx + rax + 4]
0x6ce1:	lea	rdx, [rdx + rcx*4]
0x6ce5:	nop	dword ptr [rax]
0x6ce8:	mov	dword ptr [rax], 0xffffffff
0x6cee:	add	rax, 4
0x6cf2:	cmp	rdx, rax
0x6cf5:	jne	0x6ce8


0x6cf7:	mov	r15, rcx
0x6cfa:	cmp	rbx, r15
0x6cfd:	jg	0x6c10


0x6ce8:	mov	dword ptr [rax], 0xffffffff
0x6cee:	add	rax, 4
0x6cf2:	cmp	rdx, rax
0x6cf5:	jne	0x6ce8


0x6d21:	jmp	0x6cbe


0x6b11:	mov	edx, dword ptr [rsp + 0x10]
0x6b15:	mov	r12d, eax
0x6b18:	mov	qword ptr [rsp + 8], r15
0x6b1d:	cmp	edx, eax
0x6b1f:	je	0x6e20


0x6e20:	mov	rdi, qword ptr [r14 + 8]
0x6e24:	mov	rsi, qword ptr [rsp + 0x18]
0x6e29:	mov	rdx, rbp
0x6e2c:	add	rdi, r15
0x6e2f:	call	0x1ad0


0x6b25:	lea	rcx, [rsp + 0x50]
0x6b2a:	lea	rdx, [rsp + 0x48]
0x6b2f:	mov	esi, eax
0x6b31:	mov	rdi, rcx
0x6b34:	mov	qword ptr [rsp + 0x10], rcx
0x6b39:	call	0x1b10


0x6b3e:	cmp	rbp, rax
0x6b41:	mov	r11, rax
0x6b44:	mov	rcx, qword ptr [rsp + 0x10]
0x6b49:	jne	0x6ed6


0x6b4f:	mov	rdi, qword ptr [r14 + 8]
0x6b53:	mov	rdx, rbp
0x6b56:	mov	rsi, rcx
0x6b59:	add	rdi, r15
0x6b5c:	call	0x1ad0


0x6ed6:	cmp	rax, -1
0x6eda:	je	0x6e20


0x6ee0:	lea	rax, [rax + r15]
0x6ee4:	mov	rsi, rax
0x6ee7:	mov	qword ptr [rsp + 8], rax
0x6eec:	mov	rax, qword ptr [r14 + 0x40]
0x6ef0:	cmp	rsi, rax
0x6ef3:	ja	0x6ec8


0x6ef5:	cmp	qword ptr [r14 + 0x18], 0
0x6efa:	je	0x6fb8


0x6fb8:	lea	rdi, [rax*8]
0x6fc0:	mov	qword ptr [rsp + 0x18], rcx
0x6fc5:	mov	qword ptr [rsp + 0x10], r11
0x6fca:	call	0x1b00


0x6f00:	cmp	byte ptr [r14 + 0x8c], 0
0x6f08:	jne	0x6f2a


0x6f0a:	test	r15, r15
0x6f0d:	je	0x6f22


0x6f2a:	mov	rdi, qword ptr [r14 + 8]
0x6f2e:	mov	rsi, rcx
0x6f31:	mov	rdx, r11
0x6f34:	mov	qword ptr [rsp + 0x10], r11
0x6f39:	add	rdi, r15
0x6f3c:	call	0x1ad0


0x6f22:	mov	byte ptr [r14 + 0x8c], 1
0x6f2a:	mov	rdi, qword ptr [r14 + 8]
0x6f2e:	mov	rsi, rcx
0x6f31:	mov	rdx, r11
0x6f34:	mov	qword ptr [rsp + 0x10], r11
0x6f39:	add	rdi, r15
0x6f3c:	call	0x1ad0


0x6f0f:	mov	rdx, qword ptr [r14 + 0x18]
0x6f13:	xor	eax, eax
0x6f15:	mov	qword ptr [rdx + rax*8], rax
0x6f19:	add	rax, 1
0x6f1d:	cmp	rax, r15
0x6f20:	jne	0x6f15


0x6f15:	mov	qword ptr [rdx + rax*8], rax
0x6f19:	add	rax, 1
0x6f1d:	cmp	rax, r15
0x6f20:	jne	0x6f15


0x6fcf:	test	rax, rax
0x6fd2:	mov	qword ptr [r14 + 0x18], rax
0x6fd6:	mov	r11, qword ptr [rsp + 0x10]
0x6fdb:	mov	rcx, qword ptr [rsp + 0x18]
0x6fe0:	jne	0x6f00


0x6fe6:	mov	eax, 0xc
0x6feb:	jmp	0x6a5f


0x6f41:	mov	rax, qword ptr [r14 + 0x10]
0x6f45:	mov	r11, qword ptr [rsp + 0x10]
0x6f4a:	lea	rcx, [rax + r15*4]
0x6f4e:	mov	rax, qword ptr [r14 + 0x18]
0x6f52:	cmp	r11, 1
0x6f56:	mov	dword ptr [rcx], r12d
0x6f59:	lea	rsi, [rax + r15*8]
0x6f5d:	mov	qword ptr [rsi], r13
0x6f60:	jbe	0x6f8a


0x6f8a:	mov	rbx, qword ptr [r14 + 0x58]
0x6f8e:	sub	r11, rbp
0x6f91:	add	rbx, r11
0x6f94:	cmp	r13, qword ptr [r14 + 0x60]
0x6f98:	mov	qword ptr [r14 + 0x58], rbx
0x6f9c:	jge	0x6fa2


0x6f62:	mov	eax, 1
0x6f67:	mov	rdx, qword ptr [rsp + 0x20]
0x6f6c:	cmp	rax, rbp
0x6f6f:	cmovb	rdx, rax
0x6f73:	add	rdx, r13
0x6f76:	mov	qword ptr [rsi + rax*8], rdx
0x6f7a:	mov	dword ptr [rcx + rax*4], 0xffffffff
0x6f81:	add	rax, 1
0x6f85:	cmp	rax, r11
0x6f88:	jne	0x6f67


0x6f9e:	add	qword ptr [r14 + 0x68], r11
0x6fa2:	cmp	qword ptr [r14 + 0x40], rbx
0x6fa6:	mov	r15, qword ptr [rsp + 8]
0x6fab:	cmovle	rbx, qword ptr [r14 + 0x40]
0x6fb0:	add	r13, rbp
0x6fb3:	jmp	0x6a50


0x6fa2:	cmp	qword ptr [r14 + 0x40], rbx
0x6fa6:	mov	r15, qword ptr [rsp + 8]
0x6fab:	cmovle	rbx, qword ptr [r14 + 0x40]
0x6fb0:	add	r13, rbp
0x6fb3:	jmp	0x6a50


0x6f67:	mov	rdx, qword ptr [rsp + 0x20]
0x6f6c:	cmp	rax, rbp
0x6f6f:	cmovb	rdx, rax
0x6f73:	add	rdx, r13
0x6f76:	mov	qword ptr [rsi + rax*8], rdx
0x6f7a:	mov	dword ptr [rcx + rax*4], 0xffffffff
0x6f81:	add	rax, 1
0x6f85:	cmp	rax, r11
0x6f88:	jne	0x6f67


0x6b61:	cmp	byte ptr [r14 + 0x8c], 0
0x6b69:	lea	rax, [rbp + r13]
0x6b6e:	jne	0x6ea5


0x6b74:	add	r15, 1
0x6b78:	mov	rsi, qword ptr [rsp + 8]
0x6b7d:	mov	rdx, qword ptr [r14 + 0x10]
0x6b81:	lea	rcx, [r15 + rbp - 1]
0x6b86:	mov	r13, rax
0x6b89:	cmp	r15, rcx
0x6b8c:	lea	rax, [rsi*4]
0x6b94:	mov	dword ptr [rdx + rsi*4], r12d
0x6b98:	jge	0x6a50


0x6ea5:	mov	rdx, qword ptr [r14 + 0x18]
0x6ea9:	mov	rcx, r15
0x6eac:	mov	r10, r13
0x6eaf:	sub	rcx, r13
0x6eb2:	lea	rdx, [rdx + rcx*8]
0x6eb6:	mov	qword ptr [rdx + r10*8], r10
0x6eba:	add	r10, 1
0x6ebe:	cmp	rax, r10
0x6ec1:	jne	0x6eb6


0x6b9e:	lea	rax, [rdx + rax + 4]
0x6ba3:	lea	rdx, [rdx + rcx*4]
0x6ba7:	nop	word ptr [rax + rax]
0x6bb0:	mov	dword ptr [rax], 0xffffffff
0x6bb6:	add	rax, 4
0x6bba:	cmp	rdx, rax
0x6bbd:	jne	0x6bb0


0x6ec3:	jmp	0x6b74


0x6eb6:	mov	qword ptr [rdx + r10*8], r10
0x6eba:	add	r10, 1
0x6ebe:	cmp	rax, r10
0x6ec1:	jne	0x6eb6


0x6bbf:	mov	r15, rcx
0x6bc2:	jmp	0x6a50


0x6bb0:	mov	dword ptr [rax], 0xffffffff
0x6bb6:	add	rax, 4
0x6bba:	cmp	rdx, rax
0x6bbd:	jne	0x6bb0


0x6e34:	jmp	0x6b61


0x5e7e:	cmp	rax, -1
0x5e82:	jne	0x5e3c


0x5e84:	mov	rdi, rbx
0x5e87:	pop	rbx
0x5e88:	pop	rbp
0x5e89:	pop	r12
0x5e8b:	jmp	0x1980


0x5f20:	cmp	rax, -1
0x5f24:	je	0x5f32


0x5f32:	pop	rbx
0x5f33:	pop	rbp
0x5f34:	pop	r12
0x5f36:	ret	


0x5f26:	and	dword ptr [rbx], 0xffffffef
0x5f29:	mov	qword ptr [rbx + 0x90], rax
0x5f30:	xor	eax, eax
0x5f32:	pop	rbx
0x5f33:	pop	rbp
0x5f34:	pop	r12
0x5f36:	ret	


0x24d5:	nop	
0x24d6:	nop	word ptr cs:[rax + rax]


0x5600:	call	0x18e0


0x2968:	nop	dword ptr [rax + rax]


0x2551:	nop	dword ptr [rax + rax]
0x2556:	nop	word ptr cs:[rax + rax]


0x45dd:	mov	dword ptr [rbp], r12d
0x45e1:	pop	rbx
0x45e2:	pop	rbp
0x45e3:	pop	r12
0x45e5:	ret	


0x57be:	mov	rcx, qword ptr [rbx]
0x57c1:	mov	rbp, rax
0x57c4:	cmp	rcx, r12
0x57c7:	je	0x5828


0x5828:	test	r15, r15
0x582b:	je	0x5cc0


0x57c9:	mov	eax, dword ptr [r13]
0x57cd:	test	eax, eax
0x57cf:	jne	0x5810


0x5cc0:	mov	r12d, 4
0x5cc6:	jmp	0x57e9


0x5831:	movzx	r13d, byte ptr [rcx]
0x5835:	mov	qword ptr [rsp + 8], rcx
0x583a:	mov	r12d, 4
0x5840:	test	r13b, r13b
0x5843:	je	0x57e9


0x57d1:	xor	r12d, r12d
0x57d4:	test	r15, r15
0x57d7:	je	0x57e6


0x5810:	cmp	eax, 0x22
0x5813:	mov	r12d, 4
0x5819:	jne	0x57e9


0x57e9:	mov	rdi, qword ptr [rsp + 0x18]
0x57ee:	xor	rdi, qword ptr fs:[0x28]
0x57f7:	mov	eax, r12d
0x57fa:	jne	0x5e0e


0x5845:	movsx	esi, r13b
0x5849:	mov	rdi, r15
0x584c:	call	0x1a10


0x57e6:	mov	qword ptr [r14], rbp
0x57e9:	mov	rdi, qword ptr [rsp + 0x18]
0x57ee:	xor	rdi, qword ptr fs:[0x28]
0x57f7:	mov	eax, r12d
0x57fa:	jne	0x5e0e


0x57d9:	movzx	r13d, byte ptr [rcx]
0x57dd:	test	r13b, r13b
0x57e0:	jne	0x5863


0x581b:	mov	r12d, 1
0x5821:	jmp	0x57d4


0x5800:	add	rsp, 0x28
0x5804:	pop	rbx
0x5805:	pop	rbp
0x5806:	pop	r12
0x5808:	pop	r13
0x580a:	pop	r14
0x580c:	pop	r15
0x580e:	ret	


0x5e0e:	call	0x19e0


0x1a10:	jmp	qword ptr [rip + 0x21747a]


0x5863:	movsx	esi, r13b
0x5867:	mov	rdi, r15
0x586a:	mov	qword ptr [rsp + 8], rcx
0x586f:	call	0x1a10


0x57d4:	test	r15, r15
0x57d7:	je	0x57e6




0x5ed7:	mov	rdi, rbx
0x5eda:	pop	rbx
0x5edb:	jmp	0x1b20


0xb8ad:	test	eax, eax
0xb8af:	jne	0xb92a


0xb8b1:	call	0x1c70


0xb92a:	lea	rsi, [rip + 0x9fa6]
0xb931:	mov	rdi, r12
0xb934:	call	0x1ac0


0xb939:	test	eax, eax
0xb93b:	jne	0xb9b4


0xb93d:	call	0x1c70


0xb9b4:	lea	rsi, [rip + 0x9f22]
0xb9bb:	mov	rdi, r12
0xb9be:	call	0x1ac0


0xb9c3:	test	eax, eax
0xb9c5:	jne	0xba40


0xb9c7:	call	0x1c70


0xba40:	mov	eax, 4
0xba45:	jmp	0xb3c6


0xb9cc:	xor	ecx, ecx
0xb9ce:	test	rbp, rbp
0xb9d1:	mov	rsi, qword ptr [rax]
0xb9d4:	mov	edx, 1
0xb9d9:	jne	0xba05


0xb9db:	test	byte ptr [rsi + rcx*2 + 1], 0x10
0xb9e0:	je	0xb9f3


0xba05:	xor	eax, eax
0xba07:	mov	edi, 1
0xba0c:	test	byte ptr [rsi + rax*2 + 1], 0x10
0xba11:	je	0xba2f


0xb9f3:	add	rcx, 1
0xb9f7:	cmp	rcx, 0x100
0xb9fe:	jne	0xb9db


0xb9e2:	mov	rax, rcx
0xb9e5:	mov	rdi, rdx
0xb9e8:	sar	rax, 6
0xb9ec:	shl	rdi, cl
0xb9ef:	or	qword ptr [rbx + rax*8], rdi
0xb9f3:	add	rcx, 1
0xb9f7:	cmp	rcx, 0x100
0xb9fe:	jne	0xb9db


0xba2f:	add	rax, 1
0xba33:	cmp	rax, 0x100
0xba39:	jne	0xba0c


0xba13:	movzx	ecx, byte ptr [rbp + rax]
0xba18:	mov	r9, rdi
0xba1b:	mov	rdx, rcx
0xba1e:	and	ecx, 0x3f
0xba21:	shr	rdx, 3
0xba25:	shl	r9, cl
0xba28:	and	edx, 0x18
0xba2b:	or	qword ptr [rbx + rdx], r9
0xba2f:	add	rax, 1
0xba33:	cmp	rax, 0x100
0xba39:	jne	0xba0c


0xba00:	jmp	0xb3c4


0xba3b:	jmp	0xb3c4


0xba0c:	test	byte ptr [rsi + rax*2 + 1], 0x10
0xba11:	je	0xba2f


0xb942:	xor	ecx, ecx
0xb944:	test	rbp, rbp
0xb947:	mov	rsi, qword ptr [rax]
0xb94a:	mov	edx, 1
0xb94f:	jne	0xb97a


0xb951:	test	byte ptr [rsi + rcx*2], 4
0xb955:	je	0xb968


0xb97a:	xor	eax, eax
0xb97c:	mov	edi, 1
0xb981:	test	byte ptr [rsi + rax*2], 4
0xb985:	je	0xb9a3


0xb968:	add	rcx, 1
0xb96c:	cmp	rcx, 0x100
0xb973:	jne	0xb951


0xb957:	mov	rax, rcx
0xb95a:	mov	rdi, rdx
0xb95d:	sar	rax, 6
0xb961:	shl	rdi, cl
0xb964:	or	qword ptr [rbx + rax*8], rdi
0xb968:	add	rcx, 1
0xb96c:	cmp	rcx, 0x100
0xb973:	jne	0xb951


0xb9a3:	add	rax, 1
0xb9a7:	cmp	rax, 0x100
0xb9ad:	jne	0xb981


0xb987:	movzx	ecx, byte ptr [rbp + rax]
0xb98c:	mov	r14, rdi
0xb98f:	mov	rdx, rcx
0xb992:	and	ecx, 0x3f
0xb995:	shr	rdx, 3
0xb999:	shl	r14, cl
0xb99c:	and	edx, 0x18
0xb99f:	or	qword ptr [rbx + rdx], r14
0xb9a3:	add	rax, 1
0xb9a7:	cmp	rax, 0x100
0xb9ad:	jne	0xb981


0xb975:	jmp	0xb3c4


0xb9af:	jmp	0xb3c4


0xb981:	test	byte ptr [rsi + rax*2], 4
0xb985:	je	0xb9a3


0xb8b6:	xor	ecx, ecx
0xb8b8:	test	rbp, rbp
0xb8bb:	mov	rsi, qword ptr [rax]
0xb8be:	mov	edx, 1
0xb8c3:	jne	0xb8ef


0xb8c5:	cmp	word ptr [rsi + rcx*2], 0
0xb8ca:	jns	0xb8dd


0xb8ef:	xor	eax, eax
0xb8f1:	mov	edi, 1
0xb8f6:	cmp	word ptr [rsi + rax*2], 0
0xb8fb:	jns	0xb919


0xb8cc:	mov	rax, rcx
0xb8cf:	mov	rdi, rdx
0xb8d2:	sar	rax, 6
0xb8d6:	shl	rdi, cl
0xb8d9:	or	qword ptr [rbx + rax*8], rdi
0xb8dd:	add	rcx, 1
0xb8e1:	cmp	rcx, 0x100
0xb8e8:	jne	0xb8c5


0xb8dd:	add	rcx, 1
0xb8e1:	cmp	rcx, 0x100
0xb8e8:	jne	0xb8c5


0xb8fd:	movzx	ecx, byte ptr [rbp + rax]
0xb902:	mov	r9, rdi
0xb905:	mov	rdx, rcx
0xb908:	and	ecx, 0x3f
0xb90b:	shr	rdx, 3
0xb90f:	shl	r9, cl
0xb912:	and	edx, 0x18
0xb915:	or	qword ptr [rbx + rdx], r9
0xb919:	add	rax, 1
0xb91d:	cmp	rax, 0x100
0xb923:	jne	0xb8f6


0xb919:	add	rax, 1
0xb91d:	cmp	rax, 0x100
0xb923:	jne	0xb8f6


0xb8ea:	jmp	0xb3c4


0xb925:	jmp	0xb3c4


0xb8f6:	cmp	word ptr [rsi + rax*2], 0
0xb8fb:	jns	0xb919


0xbf6a:	mov	rdx, qword ptr [rsp + 0x40]
0xbf6f:	mov	rdi, qword ptr [rsp + 0x38]
0xbf74:	mov	esi, eax
0xbf76:	call	0x1b10


0xbf7b:	cmp	rax, -1
0xbf7f:	je	0xbe27


0xbf85:	movzx	eax, byte ptr [rsp + 0x60]
0xbf8a:	mov	byte ptr [rbp + rax], 1
0xbf8f:	jmp	0xbe27


0xc073:	mov	rdi, qword ptr [rsp + 0x38]
0xc078:	mov	rdx, r14
0xc07b:	mov	esi, eax
0xc07d:	call	0x1b10


0xc082:	cmp	rax, -1
0xc086:	je	0xbfef


0xc08c:	movzx	eax, byte ptr [rsp + 0x60]
0xc091:	add	rbp, 1
0xc095:	mov	byte ptr [r12 + rax], 1
0xc09a:	cmp	rbp, qword ptr [r15 + 0x28]
0xc09e:	jl	0xbffd


0x2862:	jmp	0x25c0


0x25c0:	mov	rsi, rbx
0x25c3:	mov	rdi, rbp
0x25c6:	call	0x3010


0x2755:	jmp	0x25c0


0x28c7:	add	rsp, 0x18
0x28cb:	mov	eax, 1
0x28d0:	pop	rbx
0x28d1:	pop	rbp
0x28d2:	pop	r12
0x28d4:	pop	r13
0x28d6:	pop	r14
0x28d8:	pop	r15
0x28da:	ret	


0x2a12:	mov	rbx, qword ptr [rip + 0x2166cf]
0x2a19:	lea	rsi, [rip + 0x11c48]
0x2a20:	mov	edx, 5
0x2a25:	xor	edi, edi
0x2a27:	call	0x19b0


0x2a2c:	mov	rsi, rbx
0x2a2f:	mov	rdi, rax
0x2a32:	call	0x1aa0


0x2a37:	mov	rbx, qword ptr [rip + 0x2166aa]
0x2a3e:	lea	rsi, [rip + 0x11c5b]
0x2a45:	mov	edx, 5
0x2a4a:	xor	edi, edi
0x2a4c:	call	0x19b0


0x2a51:	mov	rsi, rbx
0x2a54:	mov	rdi, rax
0x2a57:	call	0x1aa0


0x2a5c:	mov	rbx, qword ptr [rip + 0x216685]
0x2a63:	lea	rsi, [rip + 0x11c86]
0x2a6a:	mov	edx, 5
0x2a6f:	xor	edi, edi
0x2a71:	call	0x19b0


0x2a76:	mov	rsi, rbx
0x2a79:	mov	rdi, rax
0x2a7c:	call	0x1aa0


0x2a81:	mov	rbx, qword ptr [rip + 0x216660]
0x2a88:	lea	rsi, [rip + 0x11d39]
0x2a8f:	mov	edx, 5
0x2a94:	xor	edi, edi
0x2a96:	call	0x19b0


0x2a9b:	mov	rsi, rbx
0x2a9e:	mov	rdi, rax
0x2aa1:	call	0x1aa0


0x2aa6:	mov	rbx, qword ptr [rip + 0x21663b]
0x2aad:	lea	rsi, [rip + 0x11ed4]
0x2ab4:	mov	edx, 5
0x2ab9:	xor	edi, edi
0x2abb:	call	0x19b0


0x2ac0:	mov	rsi, rbx
0x2ac3:	mov	rdi, rax
0x2ac6:	call	0x1aa0


0x2acb:	mov	rbx, qword ptr [rip + 0x216616]
0x2ad2:	lea	rsi, [rip + 0x11f3f]
0x2ad9:	mov	edx, 5
0x2ade:	xor	edi, edi
0x2ae0:	call	0x19b0


0x2ae5:	mov	rsi, rbx
0x2ae8:	mov	rdi, rax
0x2aeb:	call	0x1aa0


0x2af0:	mov	rbx, qword ptr [rip + 0x2165f1]
0x2af7:	lea	rsi, [rip + 0x11f4a]
0x2afe:	mov	edx, 5
0x2b03:	xor	edi, edi
0x2b05:	call	0x19b0


0x2b0a:	mov	rsi, rbx
0x2b0d:	mov	rdi, rax
0x2b10:	call	0x1aa0


0x2b15:	mov	rbx, qword ptr [rip + 0x2165cc]
0x2b1c:	lea	rsi, [rip + 0x11f5d]
0x2b23:	mov	edx, 5
0x2b28:	xor	edi, edi
0x2b2a:	call	0x19b0


0x2b2f:	mov	rsi, rbx
0x2b32:	mov	rdi, rax
0x2b35:	call	0x1aa0


0x2b3a:	mov	rbx, qword ptr [rip + 0x2165a7]
0x2b41:	lea	rsi, [rip + 0x11ff8]
0x2b48:	mov	edx, 5
0x2b4d:	xor	edi, edi
0x2b4f:	call	0x19b0


0x2b54:	mov	rsi, rbx
0x2b57:	mov	rdi, rax
0x2b5a:	call	0x1aa0


0x2b5f:	mov	rbx, qword ptr [rip + 0x216582]
0x2b66:	lea	rsi, [rip + 0x120a3]
0x2b6d:	mov	edx, 5
0x2b72:	xor	edi, edi
0x2b74:	call	0x19b0


0x2b79:	mov	rsi, rbx
0x2b7c:	mov	rdi, rax
0x2b7f:	lea	rbx, [rip + 0x11833]
0x2b86:	call	0x1aa0


0x2b8b:	lea	rax, [rip + 0x1182a]
0x2b92:	lea	rcx, [rip + 0x11864]
0x2b99:	mov	qword ptr [rsp + 0x60], 0
0x2ba2:	mov	qword ptr [rsp + 0x68], 0
0x2bab:	mov	rdx, rsp
0x2bae:	mov	qword ptr [rsp], rax
0x2bb2:	lea	rax, [rip + 0x11805]
0x2bb9:	mov	qword ptr [rsp + 0x30], rcx
0x2bbe:	lea	rcx, [rip + 0x11842]
0x2bc5:	mov	qword ptr [rsp + 8], rax
0x2bca:	lea	rax, [rip + 0x11865]
0x2bd1:	mov	qword ptr [rsp + 0x40], rcx
0x2bd6:	lea	rcx, [rip + 0x11834]
0x2bdd:	mov	qword ptr [rsp + 0x10], rax
0x2be2:	lea	rax, [rip + 0x117e5]
0x2be9:	mov	qword ptr [rsp + 0x50], rcx
0x2bee:	mov	qword ptr [rsp + 0x18], rax
0x2bf3:	lea	rax, [rip + 0x117ea]
0x2bfa:	mov	qword ptr [rsp + 0x20], rax
0x2bff:	lea	rax, [rip + 0x117e8]
0x2c06:	mov	qword ptr [rsp + 0x28], rax
0x2c0b:	mov	qword ptr [rsp + 0x38], rax
0x2c10:	mov	qword ptr [rsp + 0x48], rax
0x2c15:	mov	qword ptr [rsp + 0x58], rax
0x2c1a:	nop	word ptr [rax + rax]
0x2c20:	add	rdx, 0x10
0x2c24:	mov	rdi, qword ptr [rdx]
0x2c27:	test	rdi, rdi
0x2c2a:	je	0x2c3f


0x2c3f:	mov	r12, qword ptr [rdx + 8]
0x2c43:	xor	edi, edi
0x2c45:	mov	edx, 5
0x2c4a:	lea	rsi, [rip + 0x117ca]
0x2c51:	test	r12, r12
0x2c54:	je	0x2d1b


0x2c2c:	mov	ecx, 3
0x2c31:	mov	rsi, rbx
0x2c34:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2d1b:	call	0x19b0


0x2c5a:	call	0x19b0


0x2c34:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2c36:	seta	al
0x2c39:	sbb	al, 0
0x2c3b:	test	al, al
0x2c3d:	jne	0x2c20


0x2c20:	add	rdx, 0x10
0x2c24:	mov	rdi, qword ptr [rdx]
0x2c27:	test	rdi, rdi
0x2c2a:	je	0x2c3f


0x2c5f:	lea	rcx, [rip + 0x12042]
0x2c66:	lea	rdx, [rip + 0x117c5]
0x2c6d:	mov	rsi, rax
0x2c70:	mov	edi, 1
0x2c75:	xor	eax, eax
0x2c77:	call	0x1b80


0x2c7c:	xor	esi, esi
0x2c7e:	mov	edi, 5
0x2c83:	call	0x1b70


0x2c88:	test	rax, rax
0x2c8b:	je	0x2ca9


0x2ca9:	lea	rsi, [rip + 0x11794]
0x2cb0:	xor	edi, edi
0x2cb2:	mov	edx, 5
0x2cb7:	call	0x19b0


0x2c8d:	lea	rsi, [rip + 0x117ac]
0x2c94:	mov	edx, 3
0x2c99:	mov	rdi, rax
0x2c9c:	call	0x1900


0x1900:	jmp	qword ptr [rip + 0x217502]




0x2cbc:	lea	rcx, [rip + 0x116f6]
0x2cc3:	lea	rdx, [rip + 0x11fde]
0x2cca:	mov	rsi, rax
0x2ccd:	mov	edi, 1
0x2cd2:	xor	eax, eax
0x2cd4:	call	0x1b80


0x2cd9:	cmp	r12, rbx
0x2cdc:	lea	rcx, [rip + 0x116f5]
0x2ce3:	lea	rbx, [rip + 0x118c3]
0x2cea:	cmove	rbx, rcx
0x2cee:	lea	rsi, [rip + 0x12023]
0x2cf5:	xor	edi, edi
0x2cf7:	mov	edx, 5
0x2cfc:	call	0x19b0


0x2d01:	mov	rcx, rbx
0x2d04:	mov	rsi, rax
0x2d07:	mov	rdx, r12
0x2d0a:	mov	edi, 1
0x2d0f:	xor	eax, eax
0x2d11:	call	0x1b80


0x2d16:	jmp	0x29c6


0x2d20:	lea	rcx, [rip + 0x11f81]
0x2d27:	lea	rdx, [rip + 0x11704]
0x2d2e:	mov	rsi, rax
0x2d31:	mov	edi, 1
0x2d36:	xor	eax, eax
0x2d38:	call	0x1b80


0x2d3d:	xor	esi, esi
0x2d3f:	mov	edi, 5
0x2d44:	call	0x1b70


0x2d49:	test	rax, rax
0x2d4c:	je	0x2d66


0x2d66:	lea	rsi, [rip + 0x116d7]
0x2d6d:	mov	edx, 5
0x2d72:	xor	edi, edi
0x2d74:	lea	r12, [rip + 0x1163e]
0x2d7b:	lea	rbx, [rip + 0x11656]
0x2d82:	call	0x19b0


0x2d4e:	lea	rsi, [rip + 0x116eb]
0x2d55:	mov	edx, 3
0x2d5a:	mov	rdi, rax
0x2d5d:	call	0x1900


0x2d87:	lea	rcx, [rip + 0x1162b]
0x2d8e:	lea	rdx, [rip + 0x11f13]
0x2d95:	mov	rsi, rax
0x2d98:	mov	edi, 1
0x2d9d:	xor	eax, eax
0x2d9f:	call	0x1b80


0x2da4:	jmp	0x2cee


0x2cee:	lea	rsi, [rip + 0x12023]
0x2cf5:	xor	edi, edi
0x2cf7:	mov	edx, 5
0x2cfc:	call	0x19b0


0x4dec:	cmp	r12, 9
0x4df0:	ja	0x5130


0x4df6:	lea	rdx, [rip + 0x10887]
0x4dfd:	movsxd	rax, dword ptr [rdx + r12*4]
0x4e01:	add	rax, rdx
0x4e04:	jmp	rax


0x5130:	mov	r10, qword ptr [rbx + 0x40]
0x5134:	mov	r9, qword ptr [rbx + 0x38]
0x5138:	mov	edx, 5
0x513d:	mov	rax, qword ptr [rbx + 0x10]
0x5141:	mov	r8, qword ptr [rbx + 8]
0x5145:	lea	rsi, [rip + 0x104b4]
0x514c:	mov	r13, qword ptr [rbx + 0x30]
0x5150:	mov	r12, qword ptr [rbx + 0x28]
0x5154:	mov	r15, qword ptr [rbx + 0x20]
0x5158:	mov	r14, qword ptr [rbx + 0x18]
0x515c:	mov	qword ptr [rsp + 0x18], r10
0x5161:	mov	qword ptr [rsp + 0x10], r9
0x5166:	mov	qword ptr [rsp], rax
0x516a:	mov	qword ptr [rsp + 8], r8
0x516f:	mov	rbx, qword ptr [rbx]
0x5172:	jmp	0x4f02


0x4f02:	xor	edi, edi
0x4f04:	call	0x19b0


0x4f09:	mov	r10, qword ptr [rsp + 0x18]
0x4f0e:	push	r10
0x4f10:	jmp	0x4e54


0x4e54:	mov	r9, qword ptr [rsp + 0x18]
0x4e59:	mov	rdx, rax
0x4e5c:	mov	rcx, rbx
0x4e5f:	mov	esi, 1
0x4e64:	mov	rdi, rbp
0x4e67:	xor	eax, eax
0x4e69:	push	r9
0x4e6b:	push	r13
0x4e6d:	push	r12
0x4e6f:	push	r15
0x4e71:	push	r14
0x4e73:	mov	r9, qword ptr [rsp + 0x30]
0x4e78:	mov	r8, qword ptr [rsp + 0x38]
0x4e7d:	call	0x1c30


0x4e82:	add	rsp, 0x30
0x4e86:	add	rsp, 0x28
0x4e8a:	pop	rbx
0x4e8b:	pop	rbp
0x4e8c:	pop	r12
0x4e8e:	pop	r13
0x4e90:	pop	r14
0x4e92:	pop	r15
0x4e94:	ret	


0x2845:	mov	r14, qword ptr [rip + 0x21691c]
0x284c:	jmp	0x273a


0x52c6:	mov	rax, qword ptr [rsp + 0x78]
0x52cb:	xor	rax, qword ptr fs:[0x28]
0x52d4:	jne	0x52e0


0x52d6:	add	rsp, 0xb8
0x52dd:	pop	rbx
0x52de:	pop	rbp
0x52df:	ret	


0x52e0:	call	0x19e0


0x51f0:	mov	rax, qword ptr [rsp + 0x58]
0x51f5:	xor	rax, qword ptr fs:[0x28]
0x51fe:	jne	0x5205


0x5200:	add	rsp, 0x68
0x5204:	ret	


0x5205:	call	0x19e0


0x564a:	test	eax, eax
0x564c:	jne	0x56e0


0x5652:	mov	rbp, qword ptr [rsp]
0x5656:	cmp	rbp, r14
0x5659:	jl	0x5660


0x56e0:	mov	ebp, eax
0x56e2:	call	0x18f0


0x5660:	call	0x18f0


0x565b:	cmp	rbp, r15
0x565e:	jle	0x56b6


0x56b6:	mov	rdx, qword ptr [rsp + 8]
0x56bb:	xor	rdx, qword ptr fs:[0x28]
0x56c4:	mov	rax, rbp
0x56c7:	jne	0x571c


0x56c9:	add	rsp, 0x18
0x56cd:	pop	rbx
0x56ce:	pop	rbp
0x56cf:	pop	r12
0x56d1:	pop	r13
0x56d3:	pop	r14
0x56d5:	pop	r15
0x56d7:	ret	


0x571c:	call	0x19e0


0x5665:	cmp	rbp, 0x3fffffff
0x566c:	mov	r14, rax
0x566f:	jle	0x5700


0x5700:	cmp	rbp, -0x40000001
0x5707:	mov	eax, 0x22
0x570c:	mov	edx, 0x4b
0x5711:	cmovle	eax, edx
0x5714:	mov	dword ptr [r14], eax
0x5717:	jmp	0x567c


0x5675:	mov	dword ptr [r14], 0x4b
0x567c:	mov	rdi, r12
0x567f:	call	0x4d40


0x567c:	mov	rdi, r12
0x567f:	call	0x4d40


0x56e7:	cmp	ebp, 1
0x56ea:	mov	r14, rax
0x56ed:	je	0x5675


0x56ef:	cmp	ebp, 3
0x56f2:	jne	0x567c


0x56f4:	mov	dword ptr [rax], 0
0x56fa:	jmp	0x567c


0x574c:	add	rsp, 0x18
0x5750:	ret	


0x2d62:	test	eax, eax
0x2d64:	jne	0x2da9


0x2da9:	lea	r12, [rip + 0x11609]
0x2db0:	mov	r13, qword ptr [rip + 0x216331]
0x2db7:	lea	rsi, [rip + 0x11f12]
0x2dbe:	xor	edi, edi
0x2dc0:	mov	edx, 5
0x2dc5:	call	0x19b0


0x2dca:	mov	rsi, r13
0x2dcd:	mov	rdi, rax
0x2dd0:	call	0x1aa0


0x2dd5:	jmp	0x2ca9


0x2ca1:	test	eax, eax
0x2ca3:	jne	0x2db0


0x2db0:	mov	r13, qword ptr [rip + 0x216331]
0x2db7:	lea	rsi, [rip + 0x11f12]
0x2dbe:	xor	edi, edi
0x2dc0:	mov	edx, 5
0x2dc5:	call	0x19b0


0x5874:	test	rax, rax
0x5877:	mov	rcx, qword ptr [rsp + 8]
0x587c:	je	0x58d8


0x58d8:	mov	qword ptr [r14], rbp
0x58db:	or	r12d, 2
0x58df:	jmp	0x57e9


0x587e:	lea	eax, [r13 - 0x45]
0x5882:	cmp	al, 0x2f
0x5884:	ja	0x58e8


0x5886:	movabs	rdx, 0x814400308945
0x5890:	bt	rdx, rax
0x5894:	jae	0x58e8


0x58e8:	mov	edi, 1
0x58ed:	mov	eax, 0x400
0x58f2:	sub	r13d, 0x42
0x58f6:	cmp	r13b, 0x35
0x58fa:	ja	0x58d8


0x5896:	mov	esi, 0x30
0x589b:	mov	rdi, r15
0x589e:	mov	qword ptr [rsp + 8], rcx
0x58a3:	call	0x1a10


0x58fc:	lea	rsi, [rip + 0xfe45]
0x5903:	movzx	r13d, r13b
0x5907:	movsxd	rdx, dword ptr [rsi + r13*4]
0x590b:	add	rdx, rsi
0x590e:	jmp	rdx


0x58a8:	test	rax, rax
0x58ab:	mov	rcx, qword ptr [rsp + 8]
0x58b0:	je	0x58e8


0x58b2:	movzx	eax, byte ptr [rcx + 1]
0x58b6:	cmp	al, 0x44
0x58b8:	je	0x58c6


0x58c6:	mov	edi, 2
0x58cb:	mov	eax, 0x3e8
0x58d0:	jmp	0x58f2


0x58ba:	cmp	al, 0x69
0x58bc:	je	0x5da8


0x58f2:	sub	r13d, 0x42
0x58f6:	cmp	r13b, 0x35
0x58fa:	ja	0x58d8


0x5da8:	xor	edi, edi
0x5daa:	cmp	byte ptr [rcx + 2], 0x42
0x5dae:	mov	eax, 0x400
0x5db3:	sete	dil
0x5db7:	lea	edi, [rdi + rdi + 1]
0x5dbb:	jmp	0x58f2


0x58c2:	cmp	al, 0x42
0x58c4:	jne	0x58e8


0x5851:	test	rax, rax
0x5854:	mov	rcx, qword ptr [rsp + 8]
0x5859:	je	0x57e9


0x585b:	mov	ebp, 1
0x5860:	xor	r12d, r12d
0x5863:	movsx	esi, r13b
0x5867:	mov	rdi, r15
0x586a:	mov	qword ptr [rsp + 8], rcx
0x586f:	call	0x1a10


0x1cf6:	lea	rdi, [rip + 0x1103]
0x1cfd:	call	0x14380


0x1d02:	mov	byte ptr [rip + 0x21743f], 0
0x1d09:	nop	dword ptr [rax]
0x1d10:	lea	rdx, [rip + 0x127c2]
0x1d17:	xor	r8d, r8d
0x1d1a:	mov	rcx, r12
0x1d1d:	mov	rsi, rbx
0x1d20:	mov	edi, ebp
0x1d22:	call	0x19f0


0x19f0:	jmp	qword ptr [rip + 0x21748a]




0x5e44:	test	eax, eax
0x5e46:	je	0x5e84


0x5e48:	call	0x18f0


0x5e4d:	mov	r12d, dword ptr [rax]
0x5e50:	mov	rdi, rbx
0x5e53:	mov	rbp, rax
0x5e56:	call	0x1980


0x5e5b:	test	r12d, r12d
0x5e5e:	jne	0x5e90


0x5e60:	pop	rbx
0x5e61:	pop	rbp
0x5e62:	pop	r12
0x5e64:	ret	


0x5e90:	mov	dword ptr [rbp], r12d
0x5e94:	mov	eax, 0xffffffff
0x5e99:	jmp	0x5e60


0x141fa:	and	ebx, 0x20
0x141fd:	test	ebx, ebx
0x141ff:	jne	0x14218


0x14201:	test	eax, eax
0x14203:	je	0x1420f


0x14218:	test	eax, eax
0x1421a:	jne	0x14238


0x1420f:	pop	rbx
0x14210:	pop	rbp
0x14211:	pop	r12
0x14213:	ret	


0x14205:	test	r12, r12
0x14208:	mov	eax, 0xffffffff
0x1420d:	je	0x14248


0x1421c:	call	0x18f0


0x14238:	pop	rbx
0x14239:	mov	eax, 0xffffffff
0x1423e:	pop	rbp
0x1423f:	pop	r12
0x14241:	ret	


0x14248:	call	0x18f0


0x1424d:	cmp	dword ptr [rax], 9
0x14250:	pop	rbx
0x14251:	pop	rbp
0x14252:	pop	r12
0x14254:	setne	al
0x14257:	movzx	eax, al
0x1425a:	neg	eax
0x1425c:	ret	


0x14221:	mov	dword ptr [rax], 0
0x14227:	mov	eax, 0xffffffff
0x1422c:	pop	rbx
0x1422d:	pop	rbp
0x1422e:	pop	r12
0x14230:	ret	


0x26d7:	mov	edx, eax
0x26d9:	mov	eax, 1
0x26de:	cmp	edx, -1
0x26e1:	je	0x28fd


0x26e7:	add	rsp, 0x18
0x26eb:	pop	rbx
0x26ec:	pop	rbp
0x26ed:	pop	r12
0x26ef:	pop	r13
0x26f1:	pop	r14
0x26f3:	pop	r15
0x26f5:	ret	


0x12a14:	mov	rax, qword ptr [rsp + 8]
0x12a19:	mov	qword ptr [rax], 0
0x12a20:	mov	qword ptr [rax + 8], 0
0x12a28:	mov	eax, dword ptr [rsp + 0x4c]
0x12a2c:	mov	rbx, qword ptr [rsp + 0x118]
0x12a34:	xor	rbx, qword ptr fs:[0x28]
0x12a3d:	jne	0x13780


0x2e12:	test	eax, eax
0x2e14:	je	0x2e2c


0x2e2c:	mov	rdi, qword ptr [rip + 0x2162ed]
0x2e33:	call	0x141e0


0x2e16:	call	0x18f0


0x2e1b:	cmp	byte ptr [rip + 0x216766], 0
0x2e22:	mov	rbx, rax
0x2e25:	je	0x2e43


0x2e43:	lea	rsi, [rip + 0x12012]
0x2e4a:	xor	edi, edi
0x2e4c:	mov	edx, 5
0x2e51:	call	0x19b0


0x2e27:	cmp	dword ptr [rax], 0x20
0x2e2a:	jne	0x2e43


0x2e56:	mov	rdi, qword ptr [rip + 0x216733]
0x2e5d:	mov	rbp, rax
0x2e60:	test	rdi, rdi
0x2e63:	je	0x2e8d


0x2e8d:	mov	esi, dword ptr [rbx]
0x2e8f:	lea	rdx, [rip + 0x11fd6]
0x2e96:	mov	rcx, rax
0x2e99:	xor	edi, edi
0x2e9b:	xor	eax, eax
0x2e9d:	call	0x1bb0


0x2e65:	call	0x4b40


0x2ea2:	jmp	0x2e82


0x2e82:	mov	edi, dword ptr [rip + 0x2161e8]
0x2e88:	call	0x1910


0x1910:	jmp	qword ptr [rip + 0x2174fa]




0x2e38:	test	eax, eax
0x2e3a:	jne	0x2e82


0x2e3c:	add	rsp, 8
0x2e40:	pop	rbx
0x2e41:	pop	rbp
0x2e42:	ret	


0x1d27:	cmp	eax, -1
0x1d2a:	je	0x20d0


0x20d0:	test	r13b, r13b
0x20d3:	je	0x22fa


0x1d30:	cmp	eax, 0x69
0x1d33:	je	0x1f78


0x22fa:	mov	edi, 1
0x22ff:	call	0x2970


0x20d9:	mov	rdi, qword ptr [rip + 0x216f60]
0x20e0:	or	r8, 0xffffffffffffffff
0x20e4:	xor	edx, edx
0x20e6:	mov	rcx, r8
0x20e9:	mov	qword ptr [rsp + 8], r8
0x20ee:	mov	eax, edx
0x20f0:	mov	byte ptr [rsp], dl
0x20f3:	repne scasb	al, byte ptr [rdi]


0x1f78:	lea	rsi, [rip + 0x12515]
0x1f7f:	mov	edx, 5
0x1f84:	xor	edi, edi
0x1f86:	call	0x19b0


0x1d39:	jle	0x1d70


0x20f3:	repne scasb	al, byte ptr [rdi]


0x20f5:	not	rcx
0x20f8:	lea	r12, [rcx + r8]
0x20fc:	mov	r14, rcx
0x20ff:	lea	rdi, [r12 + r12*2]
0x2103:	mov	qword ptr [rip + 0x21708e], rdi
0x210a:	add	rdi, 1
0x210e:	call	0x5380


0x1d70:	cmp	eax, 0x62
0x1d73:	je	0x1fd8


0x1d3b:	cmp	eax, 0x70
0x1d3e:	je	0x1e40


0x1fd8:	lea	rdx, [rip + 0x2173e1]
0x1fdf:	lea	rsi, [rip + 0x21755a]
0x1fe6:	lea	rdi, [rip + 0x217073]
0x1fed:	call	0x2420


0x1d79:	jle	0x1df0


0x1e40:	mov	byte ptr [rip + 0x2171d9], 0
0x1e47:	jmp	0x1d10


0x1d44:	jle	0x1da8


0x1df0:	cmp	eax, 0xffffff7d
0x1df5:	jne	0x2281


0x1d7b:	cmp	eax, 0x66
0x1d7e:	je	0x1e98


0x1d10:	lea	rdx, [rip + 0x127c2]
0x1d17:	xor	r8d, r8d
0x1d1a:	mov	rcx, r12
0x1d1d:	mov	rsi, rbx
0x1d20:	mov	edi, ebp
0x1d22:	call	0x19f0


0x1da8:	cmp	eax, 0x6c
0x1dab:	je	0x2038


0x1d46:	cmp	eax, 0x76
0x1d49:	je	0x1f28


0x1dfb:	sub	rsp, 8
0x1dff:	mov	rdi, qword ptr [rip + 0x2172e2]
0x1e06:	mov	rcx, qword ptr [rip + 0x21725b]
0x1e0d:	push	0
0x1e0f:	lea	r9, [rip + 0x126a5]
0x1e16:	lea	r8, [rip + 0x126ae]
0x1e1d:	lea	rdx, [rip + 0x1260e]
0x1e24:	lea	rsi, [rip + 0x1258e]
0x1e2b:	xor	eax, eax
0x1e2d:	call	0x5220


0x2281:	cmp	eax, 0xffffff7e
0x2286:	jne	0x1d61


0x1e98:	lea	rdx, [rip + 0x217321]
0x1e9f:	lea	rsi, [rip + 0x21761a]
0x1ea6:	lea	rdi, [rip + 0x2171a3]
0x1ead:	call	0x2420


0x1d84:	cmp	eax, 0x68
0x1d87:	je	0x1e50


0x2038:	lea	rsi, [rip + 0x12d89]
0x203f:	mov	edx, 5
0x2044:	xor	edi, edi
0x2046:	call	0x19b0


0x1db1:	cmp	eax, 0x6e
0x1db4:	jne	0x1d61


0x1f28:	lea	rsi, [rip + 0x12548]
0x1f2f:	mov	edx, 5
0x1f34:	xor	edi, edi
0x1f36:	call	0x19b0


0x1d4f:	cmp	eax, 0x77
0x1d52:	je	0x1ee0


0x228c:	xor	edi, edi
0x228e:	call	0x2970


0x1d61:	xor	r13d, r13d
0x1d64:	jmp	0x1d10


0x1e50:	lea	rdx, [rip + 0x217469]
0x1e57:	lea	rsi, [rip + 0x2176a2]
0x1e5e:	lea	rdi, [rip + 0x2171f3]
0x1e65:	call	0x2420


0x1d8d:	cmp	eax, 0x64
0x1d90:	jne	0x1d61


0x1db6:	mov	rdx, qword ptr [rip + 0x217343]
0x1dbd:	mov	ecx, 3
0x1dc2:	mov	rdi, r14
0x1dc5:	mov	rsi, rdx
0x1dc8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1ee0:	lea	rsi, [rip + 0x12f09]
0x1ee7:	mov	edx, 5
0x1eec:	xor	edi, edi
0x1eee:	call	0x19b0


0x1d58:	cmp	eax, 0x73
0x1d5b:	je	0x1fc0


0x1d92:	mov	rax, qword ptr [rip + 0x217367]
0x1d99:	mov	qword ptr [rip + 0x2172a0], rax
0x1da0:	jmp	0x1d10


0x1dc8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1dca:	seta	al
0x1dcd:	sbb	al, 0
0x1dcf:	test	al, al
0x1dd1:	jne	0x207f


0x1fc0:	mov	rax, qword ptr [rip + 0x217139]
0x1fc7:	mov	qword ptr [rip + 0x21707a], rax
0x1fce:	jmp	0x1d10


0x1dd7:	lea	rax, [rip + 0x13062]
0x1dde:	mov	qword ptr [rip + 0x217253], rax
0x1de5:	jmp	0x1d10


0x207f:	lea	rsi, [rip + 0x1242f]
0x2086:	mov	rdi, rdx
0x2089:	mov	qword ptr [rsp], rdx
0x208d:	call	0x1ac0


0x2092:	test	eax, eax
0x2094:	mov	rdx, qword ptr [rsp]
0x2098:	je	0x2293


0x2293:	mov	qword ptr [rip + 0x216d9e], r15
0x229a:	jmp	0x1d10


0x209e:	lea	rsi, [rip + 0x12413]
0x20a5:	mov	rdi, rdx
0x20a8:	mov	qword ptr [rsp], rdx
0x20ac:	call	0x1ac0


0x20b1:	test	eax, eax
0x20b3:	mov	rdx, qword ptr [rsp]
0x20b7:	jne	0x22ca


0x20bd:	lea	rax, [rip + 0x12d84]
0x20c4:	mov	qword ptr [rip + 0x216f6d], rax
0x20cb:	jmp	0x1d10


0x22ca:	mov	rdi, rdx
0x22cd:	call	0x4d40


0x1e32:	xor	edi, edi
0x1e34:	call	0x1c10


0x1e6a:	test	al, al
0x1e6c:	jne	0x1d10


0x1e72:	mov	rdi, qword ptr [rip + 0x217287]
0x1e79:	call	0x4d40


0x1eb2:	test	al, al
0x1eb4:	jne	0x1d10


0x1eba:	mov	rdi, qword ptr [rip + 0x21723f]
0x1ec1:	call	0x4d40


0x1ff2:	test	al, al
0x1ff4:	jne	0x1d10


0x1ffa:	mov	rdi, qword ptr [rip + 0x2170ff]
0x2001:	call	0x4d40


0x2113:	mov	r15, qword ptr [rip + 0x216f26]
0x211a:	mov	rdi, rax
0x211d:	mov	qword ptr [rip + 0x21707c], rax
0x2124:	mov	rsi, r15
0x2127:	call	0x19a0


0x19a0:	jmp	qword ptr [rip + 0x2174b2]




0x1ef3:	mov	rdi, qword ptr [rip + 0x217206]
0x1efa:	lea	rcx, [rip + 0x126ac]
0x1f01:	mov	r8, rax
0x1f04:	xor	r9d, r9d
0x1f07:	mov	edx, 0x7fffffff
0x1f0c:	mov	esi, 1
0x1f11:	call	0x5730


0x1f16:	mov	dword ptr [rip + 0x2170f4], eax
0x1f1c:	jmp	0x1d10


0x1f3b:	mov	rdi, qword ptr [rip + 0x2171be]
0x1f42:	lea	rcx, [rip + 0x12664]
0x1f49:	mov	r8, rax
0x1f4c:	xor	r9d, r9d
0x1f4f:	movabs	rdx, 0x7fffffffffffffff
0x1f59:	movabs	rsi, 0x8000000000000000
0x1f63:	call	0x5730


0x1f68:	mov	qword ptr [rip + 0x2170c1], rax
0x1f6f:	jmp	0x1d10


0x204b:	mov	rdi, qword ptr [rip + 0x2170ae]
0x2052:	lea	rcx, [rip + 0x12554]
0x2059:	mov	r8, rax
0x205c:	xor	r9d, r9d
0x205f:	movabs	rdx, 0x7fffffffffffffff
0x2069:	mov	esi, 1
0x206e:	call	0x5730


0x2073:	mov	qword ptr [rip + 0x216f9e], rax
0x207a:	jmp	0x1d10


0x1f8b:	mov	rdi, qword ptr [rip + 0x21716e]
0x1f92:	lea	rcx, [rip + 0x12614]
0x1f99:	mov	r8, rax
0x1f9c:	xor	r9d, r9d
0x1f9f:	movabs	rdx, 0x7fffffffffffffff
0x1fa9:	mov	esi, 1
0x1fae:	call	0x5730


0x1fb3:	mov	qword ptr [rip + 0x21706e], rax
0x1fba:	jmp	0x1d10


0x212c:	mov	rsi, r15
0x212f:	mov	rdi, rax
0x2132:	call	0x19a0


0x2137:	mov	rsi, r15
0x213a:	mov	rdi, rax
0x213d:	call	0x1920


0x1920:	jmp	qword ptr [rip + 0x2174f2]




0x2142:	lea	rdi, [r12 + r12]
0x2146:	mov	qword ptr [rip + 0x21703b], rdi
0x214d:	add	rdi, 1
0x2151:	call	0x5380


0x2156:	mov	r15, qword ptr [rip + 0x216ee3]
0x215d:	mov	rdi, rax
0x2160:	mov	qword ptr [rip + 0x217029], rax
0x2167:	mov	rsi, r15
0x216a:	call	0x19a0


0x216f:	mov	rsi, r15
0x2172:	mov	rdi, rax
0x2175:	call	0x1920


0x217a:	mov	rdi, r14
0x217d:	mov	qword ptr [rip + 0x216ff4], r12
0x2184:	call	0x5380


0x2189:	mov	rsi, qword ptr [rip + 0x216eb0]
0x2190:	mov	rdi, rax
0x2193:	mov	qword ptr [rip + 0x216fe6], rax
0x219a:	call	0x1920


0x219f:	lea	rdi, [rip + 0x216fba]
0x21a6:	call	0x2ef0


0x21ab:	movzx	edx, byte ptr [rsp]
0x21af:	mov	r8, qword ptr [rsp + 8]
0x21b4:	mov	rdi, qword ptr [rip + 0x216e8d]
0x21bb:	mov	rcx, r8
0x21be:	mov	eax, edx
0x21c0:	repne scasb	al, byte ptr [rdi]


0x21c2:	movsxd	rax, dword ptr [rip + 0x216e47]
0x21c9:	mov	r12, rcx
0x21cc:	not	r12
0x21cf:	sub	r12, 1
0x21d3:	lea	rdi, [r12 + rax + 1]
0x21d8:	call	0x5380


0x21c0:	repne scasb	al, byte ptr [rdi]


0x21dd:	mov	rcx, rax
0x21e0:	mov	qword ptr [rip + 0x216f71], rax
0x21e7:	movsxd	rax, dword ptr [rip + 0x216e22]
0x21ee:	mov	esi, 0x20
0x21f3:	mov	rdi, rcx
0x21f6:	add	r12, rax
0x21f9:	mov	rdx, r12
0x21fc:	call	0x1a60


0x2201:	mov	byte ptr [rax + r12], 0
0x2206:	mov	rax, qword ptr [rip + 0x216e23]
0x220d:	mov	qword ptr [rip + 0x216f3c], rax
0x2214:	mov	rax, qword ptr [rip + 0x216e45]
0x221b:	mov	qword ptr [rip + 0x21735e], rax
0x2222:	lea	rax, [rip + 0x217317]
0x2229:	mov	qword ptr [rip + 0x216f78], rax
0x2230:	mov	eax, dword ptr [rip + 0x216ec2]
0x2236:	cmp	eax, ebp
0x2238:	je	0x22e6


0x22e6:	lea	rdi, [rip + 0x12bc5]
0x22ed:	call	0x2560


0x223e:	jge	0x2261


0x2240:	cdqe	
0x2242:	mov	rdi, qword ptr [rbx + rax*8]
0x2246:	call	0x2560


0x2261:	cmp	byte ptr [rip + 0x216ee0], 0
0x2268:	jne	0x229f


0x226a:	add	rsp, 0x18
0x226e:	xor	r13d, 1
0x2272:	pop	rbx
0x2273:	movzx	eax, r13b
0x2277:	pop	rbp
0x2278:	pop	r12
0x227a:	pop	r13
0x227c:	pop	r14
0x227e:	pop	r15
0x2280:	ret	


0x229f:	mov	rdi, qword ptr [rip + 0x216e4a]
0x22a6:	call	0x5e20


0x22ab:	add	eax, 1
0x22ae:	jne	0x226a


0x22b0:	call	0x18f0


0x22b5:	mov	esi, dword ptr [rax]
0x22b7:	lea	rdx, [rip + 0x12bf4]
0x22be:	mov	edi, 1
0x22c3:	xor	eax, eax
0x22c5:	call	0x1bb0


0x224b:	and	r13d, eax
0x224e:	mov	eax, dword ptr [rip + 0x216ea4]
0x2254:	add	eax, 1
0x2257:	cmp	eax, ebp
0x2259:	mov	dword ptr [rip + 0x216e99], eax
0x225f:	jl	0x2240


0x22f2:	mov	r13d, eax
0x22f5:	jmp	0x2261


0x2e6a:	mov	esi, dword ptr [rbx]
0x2e6c:	lea	rdx, [rip + 0x11ff5]
0x2e73:	mov	rcx, rax
0x2e76:	mov	r8, rbp
0x2e79:	xor	edi, edi
0x2e7b:	xor	eax, eax
0x2e7d:	call	0x1bb0


0x2006:	lea	rsi, [rip + 0x12d6b]
0x200d:	mov	r13, rax
0x2010:	mov	edx, 5
0x2015:	xor	edi, edi
0x2017:	call	0x19b0


0x201c:	mov	rcx, r13
0x201f:	mov	rdx, rax
0x2022:	xor	esi, esi
0x2024:	xor	edi, edi
0x2026:	xor	eax, eax
0x2028:	xor	r13d, r13d
0x202b:	call	0x1bb0


0x2030:	jmp	0x1d10


0x1ec6:	mov	edx, 5
0x1ecb:	mov	r13, rax
0x1ece:	lea	rsi, [rip + 0x12ecb]
0x1ed5:	jmp	0x2015


0x2015:	xor	edi, edi
0x2017:	call	0x19b0


0x1e7e:	mov	edx, 5
0x1e83:	mov	r13, rax
0x1e86:	lea	rsi, [rip + 0x12ec3]
0x1e8d:	jmp	0x2015


0x22d2:	mov	edx, 5
0x22d7:	mov	r13, rax
0x22da:	lea	rsi, [rip + 0x12b2f]
0x22e1:	jmp	0x2015


0x5684:	mov	esi, dword ptr [r14]
0x5687:	mov	r8, rax
0x568a:	mov	eax, 0
0x568f:	lea	rdx, [rip + 0xf7d2]
0x5696:	mov	rcx, r13
0x5699:	cmp	esi, 0x16
0x569c:	cmove	esi, eax
0x569f:	test	ebx, ebx
0x56a1:	mov	eax, 1
0x56a6:	cmove	ebx, eax
0x56a9:	xor	eax, eax
0x56ab:	mov	edi, ebx
0x56ad:	call	0x1bb0


0x56b2:	mov	rbp, qword ptr [rsp]
0x56b6:	mov	rdx, qword ptr [rsp + 8]
0x56bb:	xor	rdx, qword ptr fs:[0x28]
0x56c4:	mov	rax, rbp
0x56c7:	jne	0x571c


0x12cb0:	mov	rax, qword ptr [rsp + 8]
0x12cb5:	mov	rdi, qword ptr [r13 + 0xe0]
0x12cbc:	mov	rdx, qword ptr [rax + 0x30]
0x12cc0:	test	rdx, rdx
0x12cc3:	je	0x135b4


0x135b4:	call	0x18d0


0x12cc9:	mov	rax, qword ptr [rdi]
0x12ccc:	test	rax, rax
0x12ccf:	je	0x12cde


0x12cde:	add	rax, 1
0x12ce2:	cmp	rdx, rax
0x12ce5:	ja	0x12cd8


0x12cd1:	jmp	0x12ced


0x12ce7:	je	0x135b4


0x12cd8:	cmp	qword ptr [rdi + rax*8], rax
0x12cdc:	jne	0x12ced


0x135b9:	mov	qword ptr [r13 + 0xe0], 0
0x135c4:	jmp	0x12ced


0x47ac:	lea	rsi, [rax + 1]
0x47b0:	mov	qword ptr [rsp + 0x48], rax
0x47b5:	add	rsp, 0x20
0x47b9:	mov	rdi, rsi
0x47bc:	mov	qword ptr [rsp + 0x18], rsi
0x47c1:	call	0x5380


0x47c6:	mov	qword ptr [rsp + 0x10], rax
0x47cb:	sub	rsp, 8
0x47cf:	push	qword ptr [rbx + 0x30]
0x47d2:	push	qword ptr [rbx + 0x28]
0x47d5:	mov	r10, qword ptr [rsp + 0x38]
0x47da:	mov	r9d, ebp
0x47dd:	mov	r8d, dword ptr [rbx]
0x47e0:	mov	rcx, r15
0x47e3:	mov	rdx, r14
0x47e6:	mov	rdi, rax
0x47e9:	push	r10
0x47eb:	mov	rsi, qword ptr [rsp + 0x38]
0x47f0:	call	0x31c0


0x47f5:	mov	eax, dword ptr [rsp + 0x2c]
0x47f9:	add	rsp, 0x20
0x47fd:	test	r12, r12
0x4800:	mov	dword ptr [r13], eax
0x4804:	je	0x480f


0x480f:	mov	rax, qword ptr [rsp + 0x10]
0x4814:	add	rsp, 0x38
0x4818:	pop	rbx
0x4819:	pop	rbp
0x481a:	pop	r12
0x481c:	pop	r13
0x481e:	pop	r14
0x4820:	pop	r15
0x4822:	ret	


0x4806:	mov	r11, qword ptr [rsp + 0x28]
0x480b:	mov	qword ptr [r12], r11
0x480f:	mov	rax, qword ptr [rsp + 0x10]
0x4814:	add	rsp, 0x38
0x4818:	pop	rbx
0x4819:	pop	rbp
0x481a:	pop	r12
0x481c:	pop	r13
0x481e:	pop	r14
0x4820:	pop	r15
0x4822:	ret	


0x4721:	mov	dword ptr [rbp], r12d
0x4725:	add	rsp, 0x38
0x4729:	pop	rbx
0x472a:	pop	rbp
0x472b:	pop	r12
0x472d:	pop	r13
0x472f:	pop	r14
0x4731:	pop	r15
0x4733:	ret	


0x44ec:	add	rsp, 0x20
0x44f0:	mov	r11, qword ptr [rsp + 0x10]
0x44f5:	cmp	r11, rax
0x44f8:	ja	0x4561


0x44fa:	lea	rsi, [rax + 1]
0x44fe:	lea	rax, [rip + 0x21509b]
0x4505:	cmp	r12, rax
0x4508:	mov	qword ptr [rbx], rsi
0x450b:	je	0x451f


0x4561:	mov	eax, dword ptr [rsp + 0x18]
0x4565:	mov	dword ptr [r13], eax
0x4569:	add	rsp, 0x28
0x456d:	mov	rax, r12
0x4570:	pop	rbx
0x4571:	pop	rbp
0x4572:	pop	r12
0x4574:	pop	r13
0x4576:	pop	r14
0x4578:	pop	r15
0x457a:	ret	


0x451f:	mov	rdi, rsi
0x4522:	mov	qword ptr [rsp + 0x10], rsi
0x4527:	call	0x5380


0x450d:	mov	rdi, r12
0x4510:	mov	qword ptr [rsp + 0x10], rsi
0x4515:	call	0x18d0


0x451a:	mov	rsi, qword ptr [rsp + 0x10]
0x451f:	mov	rdi, rsi
0x4522:	mov	qword ptr [rsp + 0x10], rsi
0x4527:	call	0x5380


0x452c:	sub	rsp, 8
0x4530:	mov	qword ptr [rbx + 8], rax
0x4534:	mov	r8d, dword ptr [rbp]
0x4538:	push	qword ptr [rbp + 0x30]
0x453b:	push	qword ptr [rbp + 0x28]
0x453e:	mov	rcx, r14
0x4541:	push	r15
0x4543:	mov	r9d, dword ptr [rsp + 0x3c]
0x4548:	mov	rdi, rax
0x454b:	mov	rdx, qword ptr [rsp + 0x28]
0x4550:	mov	rsi, qword ptr [rsp + 0x30]
0x4555:	mov	r12, rax
0x4558:	call	0x31c0


0x4c72:	mov	rdi, qword ptr [rsp + 0x38]
0x4c77:	xor	rdi, qword ptr fs:[0x28]
0x4c80:	jne	0x4c8c


0x4c82:	add	rsp, 0x48
0x4c86:	ret	


0x4c8c:	call	0x19e0


0x49bf:	mov	rcx, qword ptr [rsp + 0x38]
0x49c4:	xor	rcx, qword ptr fs:[0x28]
0x49cd:	jne	0x49d9


0x49cf:	add	rsp, 0x48
0x49d3:	ret	


0x49d9:	call	0x19e0


0x4a4b:	mov	rdx, qword ptr [rsp + 0x38]
0x4a50:	xor	rdx, qword ptr fs:[0x28]
0x4a59:	jne	0x4a65


0x4a5b:	add	rsp, 0x48
0x4a5f:	ret	


0x4a65:	call	0x19e0


0x4bdf:	mov	rcx, qword ptr [rsp + 0x38]
0x4be4:	xor	rcx, qword ptr fs:[0x28]
0x4bed:	jne	0x4bf9


0x4bef:	add	rsp, 0x48
0x4bf3:	ret	


0x4bf9:	call	0x19e0


0x290e:	mov	rbx, rax
0x2911:	call	0x18f0


0x2916:	mov	esi, dword ptr [rax]
0x2918:	lea	rdx, [rip + 0x1254d]
0x291f:	mov	rcx, rbx
0x2922:	xor	eax, eax
0x2924:	xor	edi, edi
0x2926:	call	0x1bb0


0x292b:	add	rsp, 0x18
0x292f:	xor	eax, eax
0x2931:	pop	rbx
0x2932:	pop	rbp
0x2933:	pop	r12
0x2935:	pop	r13
0x2937:	pop	r14
0x2939:	pop	r15
0x293b:	ret	


0x4b0e:	mov	rsi, qword ptr [rsp + 0x38]
0x4b13:	xor	rsi, qword ptr fs:[0x28]
0x4b1c:	jne	0x4b23


0x4b1e:	add	rsp, 0x48
0x4b22:	ret	


0x4b23:	call	0x19e0


0x455d:	add	rsp, 0x20
0x4561:	mov	eax, dword ptr [rsp + 0x18]
0x4565:	mov	dword ptr [r13], eax
0x4569:	add	rsp, 0x28
0x456d:	mov	rax, r12
0x4570:	pop	rbx
0x4571:	pop	rbp
0x4572:	pop	r12
0x4574:	pop	r13
0x4576:	pop	r14
0x4578:	pop	r15
0x457a:	ret	


0x12d02:	test	eax, eax
0x12d04:	jne	0x129b0


0x12d0a:	mov	rdi, qword ptr [r13 + 0x68]
0x12d0e:	lea	rsi, [rip - 0x7c05]
0x12d15:	mov	rdx, r13
0x12d18:	call	0x63c0


0x12d1d:	test	eax, eax
0x12d1f:	jne	0x129b0


0x12d25:	mov	rdi, qword ptr [r13 + 0x68]
0x12d29:	lea	rsi, [rip - 0xb000]
0x12d30:	mov	rdx, r13
0x12d33:	call	0x6430


0x12d38:	mov	rdx, qword ptr [r13 + 0x68]
0x12d3c:	lea	rsi, [rip + 0x3025]
0x12d43:	nop	dword ptr [rax + rax]
0x12d48:	movzx	ecx, byte ptr [rdx + 0x30]
0x12d4c:	mov	rdi, qword ptr [rdx + 0x38]
0x12d50:	cmp	cl, 0x10
0x12d53:	ja	0x12e28


0x12d59:	movzx	eax, cl
0x12d5c:	movsxd	rax, dword ptr [rsi + rax*4]
0x12d60:	add	rax, rsi
0x12d63:	jmp	rax


0x12e28:	and	ecx, 8
0x12e2b:	jne	0x13742


0x12e31:	mov	rax, qword ptr [rdx + 0x20]
0x12e35:	mov	rcx, qword ptr [rax + 0x38]
0x12e39:	mov	rax, qword ptr [r13 + 0x18]
0x12e3d:	mov	qword ptr [rax + rdi*8], rcx
0x12e41:	mov	r15, qword ptr [rdx + 8]
0x12e45:	xor	edi, edi
0x12e47:	test	r15, r15
0x12e4a:	je	0x12e5b


0x13742:	lea	rcx, [rip + 0x26d7]
0x13749:	lea	rsi, [rip + 0x2100]
0x13750:	lea	rdi, [rip + 0x2119]
0x13757:	mov	edx, 0x5c2
0x1375c:	call	0x1a50


0x12e5b:	mov	r15, qword ptr [rdx + 0x10]
0x12e5f:	test	r15, r15
0x12e62:	sete	cl
0x12e65:	cmp	r15, rdi
0x12e68:	sete	al
0x12e6b:	or	cl, al
0x12e6d:	mov	byte ptr [rsp + 0x10], cl
0x12e71:	je	0x12e4c


0x12e4c:	mov	rdx, r15
0x12e4f:	jmp	0x12d48


0x12e73:	mov	rax, qword ptr [rdx]
0x12e76:	mov	rdi, rdx
0x12e79:	test	rax, rax
0x12e7c:	jne	0x12e58


0x12d48:	movzx	ecx, byte ptr [rdx + 0x30]
0x12d4c:	mov	rdi, qword ptr [rdx + 0x38]
0x12d50:	cmp	cl, 0x10
0x12d53:	ja	0x12e28


0x12e7e:	xor	r14d, r14d
0x12e81:	xor	r15d, r15d
0x12e84:	nop	dword ptr [rax]
0x12e88:	mov	rdx, qword ptr [r13 + 0x10]
0x12e8c:	cmp	rdx, r15
0x12e8f:	je	0x12eb6


0x12e58:	mov	rdx, rax
0x12e5b:	mov	r15, qword ptr [rdx + 0x10]
0x12e5f:	test	r15, r15
0x12e62:	sete	cl
0x12e65:	cmp	r15, rdi
0x12e68:	sete	al
0x12e6b:	or	cl, al
0x12e6d:	mov	byte ptr [rsp + 0x10], cl
0x12e71:	je	0x12e4c


0x12eb6:	test	r14b, r14b
0x12eb9:	je	0x130fe


0x12e91:	lea	r10, [r15 + r15*2]
0x12e95:	mov	rax, qword ptr [r13 + 0x30]
0x12e99:	shl	r10, 3
0x12e9d:	cmp	qword ptr [rax + r10 + 8], 0
0x12ea3:	je	0x130a8


0x130fe:	mov	rax, qword ptr [rsp + 8]
0x13103:	test	byte ptr [rax + 0x38], 0x10
0x13107:	jne	0x1311a


0x12ebf:	xor	r14d, r14d
0x12ec2:	xor	r15d, r15d
0x12ec5:	jmp	0x12e91


0x130a8:	mov	ecx, 1
0x130ad:	mov	rdx, r15
0x130b0:	mov	rsi, r13
0x130b3:	mov	rdi, r12
0x130b6:	mov	qword ptr [rsp], r10
0x130ba:	call	0x81e0


0x12ea9:	mov	rdx, qword ptr [r13 + 0x10]
0x12ead:	add	r15, 1
0x12eb1:	cmp	rdx, r15
0x12eb4:	jne	0x12e91


0x13109:	cmp	qword ptr [rax + 0x30], 0
0x1310e:	je	0x1311a


0x1311a:	cmp	qword ptr [r13 + 0x98], 0
0x13122:	je	0x1321b


0x13110:	test	byte ptr [r13 + 0xb0], 1
0x13118:	jne	0x13128


0x1321b:	movzx	eax, byte ptr [rbx + 0xb0]
0x13222:	mov	dword ptr [rsp + 0x4c], 0
0x1322a:	shr	al, 2
0x1322d:	cmp	qword ptr [rsp + 0x20], 0
0x13233:	sete	dl
0x13236:	and	al, dl
0x13238:	jne	0x1341f


0x13128:	lea	rdi, [rdx + rdx*2]
0x1312c:	mov	qword ptr [rsp], rdx
0x13130:	shl	rdi, 3
0x13134:	call	0x1b00


0x1323e:	mov	rax, qword ptr [rbx + 0x68]
0x13242:	mov	rdi, r12
0x13245:	mov	rax, qword ptr [rax + 0x18]
0x13249:	mov	rax, qword ptr [rax + 0x38]
0x1324d:	lea	rdx, [rax + rax*2]
0x13251:	mov	qword ptr [rbx + 0x90], rax
0x13258:	mov	rax, qword ptr [rbx + 0x30]
0x1325c:	lea	rsi, [rax + rdx*8]
0x13260:	call	0x8c40


0x1341f:	mov	rcx, qword ptr [rsp + 8]
0x13424:	cmp	qword ptr [rcx + 0x28], 0
0x13429:	jne	0x1323e


0x1342f:	mov	r10, qword ptr [rbx + 0x10]
0x13433:	test	r10, r10
0x13436:	je	0x136ea


0x136ea:	cmp	qword ptr [rbx + 0x98], 0
0x136f2:	movzx	edx, byte ptr [rbx + 0xb0]
0x136f9:	mov	dword ptr [rbx + 0xb4], 1
0x13703:	setg	al
0x13706:	and	edx, 0xfffffff9
0x13709:	or	eax, r14d
0x1370c:	and	eax, 1
0x1370f:	add	eax, eax
0x13711:	or	eax, edx
0x13713:	mov	byte ptr [rbx + 0xb0], al
0x13719:	jmp	0x1323e


0x1343c:	mov	rsi, qword ptr [rbx]
0x1343f:	lea	r9, [rip + 0x2966]
0x13446:	xor	r8d, r8d
0x13449:	xor	edx, edx
0x1344b:	mov	rcx, rsi
0x1344e:	cmp	byte ptr [rcx + 8], 0xc
0x13452:	ja	0x1371e


0x13458:	movzx	edi, byte ptr [rcx + 8]
0x1345c:	movsxd	rdi, dword ptr [r9 + rdi*4]
0x13460:	add	rdi, r9
0x13463:	jmp	rdi


0x1371e:	call	0x18e0


0x13265:	test	eax, eax
0x13267:	mov	r15d, eax
0x1326a:	mov	dword ptr [rsp + 0x50], eax
0x1326e:	jne	0x1338f


0x13274:	cmp	qword ptr [rbx + 0x98], 0
0x1327c:	jle	0x13350


0x1338f:	mov	rax, qword ptr [rsp + 8]
0x13394:	mov	dword ptr [rsp + 0x4c], r15d
0x13399:	mov	r13, qword ptr [rax]
0x1339c:	mov	rdi, qword ptr [r13 + 0x70]
0x133a0:	test	rdi, rdi
0x133a3:	je	0x133b8


0x13350:	mov	rdi, qword ptr [rsp + 0x28]
0x13355:	xor	ecx, ecx
0x13357:	mov	rdx, r12
0x1335a:	mov	rsi, rbx
0x1335d:	call	0x8e30


0x13282:	mov	r9, qword ptr [rsp + 0x68]
0x13287:	test	r9, r9
0x1328a:	jle	0x13350


0x133b8:	mov	rdi, qword ptr [r13 + 0x20]
0x133bc:	mov	qword ptr [r13 + 0x70], 0
0x133c4:	mov	dword ptr [r13 + 0x80], 0xf
0x133cf:	mov	qword ptr [r13 + 0x68], 0
0x133d7:	call	0x18d0


0x13290:	xor	r10d, r10d
0x13293:	lea	r13, [r12 + 0x10]
0x13298:	jmp	0x132ad


0x132ad:	mov	rcx, qword ptr [rsp + 0x70]
0x132b2:	mov	rsi, qword ptr [rbx]
0x132b5:	mov	r8, qword ptr [rcx + r10*8]
0x132b9:	mov	rdi, r8
0x132bc:	shl	rdi, 4
0x132c0:	add	rdi, rsi
0x132c3:	cmp	byte ptr [rdi + 8], 4
0x132c7:	jne	0x132a0


0x132c9:	xor	edx, edx
0x132cb:	jmp	0x132d9


0x132a0:	add	r10, 1
0x132a4:	cmp	r9, r10
0x132a7:	jle	0x13350


0x132d9:	mov	rax, qword ptr [rcx + rdx*8]
0x132dd:	shl	rax, 4
0x132e1:	add	rax, rsi
0x132e4:	cmp	byte ptr [rax + 8], 9
0x132e8:	jne	0x132d0


0x132ea:	mov	r11, qword ptr [rdi]
0x132ed:	cmp	qword ptr [rax], r11
0x132f0:	jne	0x132d0


0x132d0:	add	rdx, 1
0x132d4:	cmp	r9, rdx
0x132d7:	je	0x132a0


0x132f2:	mov	rdx, qword ptr [rbx + 0x28]
0x132f6:	lea	rax, [r8 + r8*2]
0x132fa:	mov	rsi, r13
0x132fd:	mov	rdi, r9
0x13300:	lea	rax, [rdx + rax*8]
0x13304:	mov	rax, qword ptr [rax + 0x10]
0x13308:	mov	r11, qword ptr [rax]
0x1330b:	mov	rdx, r11
0x1330e:	call	0x7ae0


0x13313:	test	rax, rax
0x13316:	jne	0x132a0


0x13318:	mov	rax, qword ptr [rbx + 0x30]
0x1331c:	lea	rdx, [r11 + r11*2]
0x13320:	mov	rdi, r12
0x13323:	lea	rsi, [rax + rdx*8]
0x13327:	call	0x8000


0x1332c:	test	eax, eax
0x1332e:	jne	0x13670


0x13334:	mov	r9, qword ptr [rsp + 0x68]
0x13339:	mov	r10d, 1
0x1333f:	cmp	r9, r10
0x13342:	jg	0x132ad


0x13670:	mov	r15d, eax
0x13673:	jmp	0x1338f


0x133b0:	test	r12, r12
0x133b3:	mov	rdi, r12
0x133b6:	jne	0x133a8


0x133a8:	mov	r12, qword ptr [rdi]
0x133ab:	call	0x18d0


0x133dc:	mov	qword ptr [r13 + 0x20], 0
0x133e4:	mov	rdi, rbp
0x133e7:	call	0x77d0


0x133ec:	mov	eax, dword ptr [rsp + 0x4c]
0x133f0:	test	eax, eax
0x133f2:	je	0x12a2c


0x133f8:	jmp	0x12a0c


0x13362:	test	rax, rax
0x13365:	mov	qword ptr [rbx + 0x48], rax
0x13369:	je	0x134d2


0x134d2:	mov	r15d, dword ptr [rsp + 0x50]
0x134d7:	jmp	0x1338f


0x1336f:	cmp	byte ptr [rax + 0x68], 0
0x13373:	js	0x13471


0x13471:	mov	r14, qword ptr [rsp + 0x28]
0x13476:	mov	ecx, 1
0x1347b:	mov	rdx, r12
0x1347e:	mov	rsi, rbx
0x13481:	mov	rdi, r14
0x13484:	call	0x8e30


0x13379:	mov	qword ptr [rbx + 0x60], rax
0x1337d:	mov	qword ptr [rbx + 0x58], rax
0x13381:	mov	qword ptr [rbx + 0x50], rax
0x13385:	mov	rdi, qword ptr [rsp + 0x70]
0x1338a:	call	0x18d0


0x13489:	mov	ecx, 2
0x1348e:	mov	rdx, r12
0x13491:	mov	rsi, rbx
0x13494:	mov	rdi, r14
0x13497:	mov	qword ptr [rbx + 0x50], rax
0x1349b:	call	0x8e30


0x134a0:	mov	ecx, 6
0x134a5:	mov	qword ptr [rbx + 0x58], rax
0x134a9:	mov	rdx, r12
0x134ac:	mov	rsi, rbx
0x134af:	mov	rdi, r14
0x134b2:	call	0x8e30


0x134b7:	cmp	qword ptr [rbx + 0x50], 0
0x134bc:	mov	qword ptr [rbx + 0x60], rax
0x134c0:	je	0x134d2


0x134c2:	cmp	qword ptr [rbx + 0x58], 0
0x134c7:	je	0x134d2


0x134c9:	test	rax, rax
0x134cc:	jne	0x13385


0x13385:	mov	rdi, qword ptr [rsp + 0x70]
0x1338a:	call	0x18d0


0x13139:	test	rax, rax
0x1313c:	mov	qword ptr [r13 + 0x38], rax
0x13140:	je	0x1368c


0x1368c:	mov	rax, qword ptr [rsp + 8]
0x13691:	mov	dword ptr [rsp + 0x4c], 0xc
0x13699:	mov	r13, qword ptr [rax]
0x1369c:	jmp	0x129bc


0x13146:	mov	rdx, qword ptr [rsp]
0x1314a:	xor	esi, esi
0x1314c:	xor	ecx, ecx
0x1314e:	test	rdx, rdx
0x13151:	jne	0x13164


0x13153:	jmp	0x1321b


0x13164:	pxor	xmm0, xmm0
0x13168:	add	rax, rsi
0x1316b:	add	rcx, 1
0x1316f:	mov	qword ptr [rax + 0x10], 0
0x13177:	add	rsi, 0x18
0x1317b:	movups	xmmword ptr [rax], xmm0
0x1317e:	mov	rax, qword ptr [r13 + 0x10]
0x13182:	cmp	rcx, rax
0x13185:	jb	0x13160


0x13160:	mov	rax, qword ptr [r13 + 0x38]
0x13164:	pxor	xmm0, xmm0
0x13168:	add	rax, rsi
0x1316b:	add	rcx, 1
0x1316f:	mov	qword ptr [rax + 0x10], 0
0x13177:	add	rsi, 0x18
0x1317b:	movups	xmmword ptr [rax], xmm0
0x1317e:	mov	rax, qword ptr [r13 + 0x10]
0x13182:	cmp	rcx, rax
0x13185:	jb	0x13160


0x13187:	test	rax, rax
0x1318a:	je	0x1321b


0x13190:	mov	rax, qword ptr [r13 + 0x30]
0x13194:	mov	qword ptr [rsp + 0x18], 0
0x1319d:	mov	qword ptr [rsp + 0x10], 0
0x131a6:	mov	rcx, qword ptr [rsp + 0x18]
0x131ab:	lea	rdx, [rax + rcx]
0x131af:	cmp	qword ptr [rdx + 8], 0
0x131b4:	mov	rcx, qword ptr [rdx + 0x10]
0x131b8:	jle	0x13204


0x13204:	add	qword ptr [rsp + 0x10], 1
0x1320a:	add	qword ptr [rsp + 0x18], 0x18
0x13210:	mov	rdx, qword ptr [rsp + 0x10]
0x13215:	cmp	rdx, qword ptr [r13 + 0x10]
0x13219:	jb	0x131a6


0x131ba:	xor	r15d, r15d
0x131bd:	jmp	0x131d8


0x131a6:	mov	rcx, qword ptr [rsp + 0x18]
0x131ab:	lea	rdx, [rax + rcx]
0x131af:	cmp	qword ptr [rdx + 8], 0
0x131b4:	mov	rcx, qword ptr [rdx + 0x10]
0x131b8:	jle	0x13204


0x131d8:	mov	rax, qword ptr [rcx + r15*8]
0x131dc:	mov	qword ptr [rsp], rcx
0x131e0:	lea	rsi, [rax + rax*2]
0x131e4:	mov	rax, qword ptr [r13 + 0x38]
0x131e8:	lea	rdi, [rax + rsi*8]
0x131ec:	mov	rsi, qword ptr [rsp + 0x10]
0x131f1:	call	0x6530


0x131f6:	test	al, al
0x131f8:	jne	0x131c0


0x131fa:	mov	eax, 0xc
0x131ff:	jmp	0x129b0


0x131c0:	mov	rax, qword ptr [r13 + 0x30]
0x131c4:	mov	rdx, qword ptr [rsp + 0x18]
0x131c9:	add	r15, 1
0x131cd:	mov	rcx, qword ptr [rsp]
0x131d1:	cmp	r15, qword ptr [rax + rdx + 8]
0x131d6:	jge	0x13204


0x130bf:	test	eax, eax
0x130c1:	jne	0x129b0


0x130c7:	mov	rax, qword ptr [r13 + 0x30]
0x130cb:	mov	r10, qword ptr [rsp]
0x130cf:	add	r15, 1
0x130d3:	cmp	qword ptr [rax + r10 + 8], 0
0x130d9:	jne	0x12e88


0x130df:	mov	rdi, qword ptr [rsp + 0x70]
0x130e4:	call	0x18d0


0x12e88:	mov	rdx, qword ptr [r13 + 0x10]
0x12e8c:	cmp	rdx, r15
0x12e8f:	je	0x12eb6


0x130e9:	cmp	qword ptr [r13 + 0x10], r15
0x130ed:	je	0x12ebf


0x130f3:	movzx	r14d, byte ptr [rsp + 0x10]
0x130f9:	jmp	0x12e91


0x124e1:	lea	rsi, [rip - 0xb288]
0x124e8:	mov	rdi, r14
0x124eb:	xor	edx, edx
0x124ed:	xor	r14d, r14d
0x124f0:	call	0x63c0


0x124f5:	mov	dword ptr [rbx], 0xc
0x124fb:	jmp	0x12480


0x2f71:	mov	r8, qword ptr [r14]
0x2f74:	movzx	ecx, byte ptr [rsp]
0x2f78:	lea	rsi, [rax + rbx]
0x2f7c:	mov	qword ptr [r14 + 0x10], rax
0x2f80:	mov	r13, rax
0x2f83:	movzx	edx, byte ptr [rsp + 0xf]
0x2f88:	lea	rbx, [rsi + 1]
0x2f8c:	add	r8, rax
0x2f8f:	cmp	r12d, r15d
0x2f92:	mov	byte ptr [rsi], cl
0x2f94:	jne	0x2f3b


0x1434d:	add	rbx, 1
0x14351:	cmp	rbp, rbx
0x14354:	jne	0x14340


0x14340:	mov	rdx, r15
0x14343:	mov	rsi, r14
0x14346:	mov	edi, r13d
0x14349:	call	qword ptr [r12 + rbx*8]


0x63ee:	test	eax, eax
0x63f0:	jne	0x6426


0x6426:	pop	rbx
0x6427:	pop	rbp
0x6428:	pop	r12
0x642a:	ret	


0x6400:	mov	rax, qword ptr [rdx + 0x10]
0x6404:	cmp	rax, rbx
0x6407:	mov	rbx, rdx
0x640a:	sete	sil
0x640e:	test	rax, rax
0x6411:	sete	cl
0x6414:	or	sil, cl
0x6417:	je	0x63d0


0x6419:	mov	rsi, rbx
0x641c:	mov	rdi, rbp
0x641f:	call	r12


0x6422:	test	eax, eax
0x6424:	je	0x63f8


0x63f8:	mov	rdx, qword ptr [rbx]
0x63fb:	test	rdx, rdx
0x63fe:	je	0x6426


0x644c:	test	eax, eax
0x644e:	jne	0x647c


0x6450:	mov	rdx, qword ptr [rbx + 8]
0x6454:	xor	ecx, ecx
0x6456:	test	rdx, rdx
0x6459:	jne	0x6440


0x647c:	pop	rbx
0x647d:	pop	rbp
0x647e:	pop	r12
0x6480:	ret	


0x645b:	jmp	0x6463


0x6440:	mov	rbx, rdx
0x6443:	mov	rsi, rbx
0x6446:	mov	rdi, rbp
0x6449:	call	r12


0x6463:	mov	rdx, qword ptr [rbx + 0x10]
0x6467:	cmp	rdx, rcx
0x646a:	je	0x6471


0x6471:	mov	rdx, qword ptr [rbx]
0x6474:	mov	rcx, rbx
0x6477:	test	rdx, rdx
0x647a:	jne	0x6460


0x646c:	test	rdx, rdx
0x646f:	jne	0x6440


0x6460:	mov	rbx, rdx
0x6463:	mov	rdx, qword ptr [rbx + 0x10]
0x6467:	cmp	rdx, rcx
0x646a:	je	0x6471






0xef52:	cmp	qword ptr [rsp + 0x70], rbp
0xef57:	jle	0xea8f


0xefc4:	cmp	qword ptr [rsp + 0x90], rbp
0xefcc:	jg	0xf469


0xea2e:	cmp	qword ptr [rsp + 0x70], rbp
0xea33:	jle	0xea8f


0x4fa0:	mov	r13, qword ptr [rbx + 0x10]
0x4fa4:	mov	r12, qword ptr [rbx + 8]
0x4fa8:	lea	rsi, [rip + 0x10417]
0x4faf:	mov	rbx, qword ptr [rbx]
0x4fb2:	mov	edx, 5
0x4fb7:	xor	edi, edi
0x4fb9:	call	0x19b0


0x50e0:	mov	r9, qword ptr [rbx + 0x10]
0x50e4:	mov	r13, qword ptr [rbx + 0x30]
0x50e8:	lea	rsi, [rip + 0x10479]
0x50ef:	mov	r12, qword ptr [rbx + 0x28]
0x50f3:	mov	r15, qword ptr [rbx + 0x20]
0x50f7:	mov	edx, 5
0x50fc:	mov	r14, qword ptr [rbx + 0x18]
0x5100:	mov	r8, qword ptr [rbx + 8]
0x5104:	xor	edi, edi
0x5106:	mov	qword ptr [rsp + 8], r9
0x510b:	mov	rbx, qword ptr [rbx]
0x510e:	mov	qword ptr [rsp], r8
0x5112:	call	0x19b0


0x4ec0:	mov	r10, qword ptr [rbx + 0x40]
0x4ec4:	mov	r9, qword ptr [rbx + 0x38]
0x4ec8:	lea	rsi, [rip + 0x106f9]
0x4ecf:	mov	rax, qword ptr [rbx + 0x10]
0x4ed3:	mov	r8, qword ptr [rbx + 8]
0x4ed7:	mov	edx, 5
0x4edc:	mov	r13, qword ptr [rbx + 0x30]
0x4ee0:	mov	r12, qword ptr [rbx + 0x28]
0x4ee4:	mov	r15, qword ptr [rbx + 0x20]
0x4ee8:	mov	r14, qword ptr [rbx + 0x18]
0x4eec:	mov	rbx, qword ptr [rbx]
0x4eef:	mov	qword ptr [rsp + 0x18], r10
0x4ef4:	mov	qword ptr [rsp + 0x10], r9
0x4ef9:	mov	qword ptr [rsp], rax
0x4efd:	mov	qword ptr [rsp + 8], r8
0x4f02:	xor	edi, edi
0x4f04:	call	0x19b0


0x4e86:	add	rsp, 0x28
0x4e8a:	pop	rbx
0x4e8b:	pop	rbp
0x4e8c:	pop	r12
0x4e8e:	pop	r13
0x4e90:	pop	r14
0x4e92:	pop	r15
0x4e94:	ret	


0x5048:	mov	r15, qword ptr [rbx + 0x20]
0x504c:	lea	rsi, [rip + 0x104c5]
0x5053:	mov	edx, 5
0x5058:	xor	edi, edi
0x505a:	mov	r14, qword ptr [rbx + 0x18]
0x505e:	mov	r13, qword ptr [rbx + 0x10]
0x5062:	mov	r12, qword ptr [rbx + 8]
0x5066:	mov	rbx, qword ptr [rbx]
0x5069:	call	0x19b0


0x4ff0:	lea	rsi, [rip + 0x10501]
0x4ff7:	mov	edx, 5
0x4ffc:	xor	edi, edi
0x4ffe:	mov	r14, qword ptr [rbx + 0x18]
0x5002:	mov	r13, qword ptr [rbx + 0x10]
0x5006:	mov	r12, qword ptr [rbx + 8]
0x500a:	mov	rbx, qword ptr [rbx]
0x500d:	call	0x19b0


0x4e10:	mov	r9, qword ptr [rbx + 0x38]
0x4e14:	mov	rax, qword ptr [rbx + 0x10]
0x4e18:	lea	rsi, [rip + 0x10779]
0x4e1f:	mov	r8, qword ptr [rbx + 8]
0x4e23:	mov	edx, 5
0x4e28:	xor	edi, edi
0x4e2a:	mov	r13, qword ptr [rbx + 0x30]
0x4e2e:	mov	r12, qword ptr [rbx + 0x28]
0x4e32:	mov	qword ptr [rsp + 0x10], r9
0x4e37:	mov	r15, qword ptr [rbx + 0x20]
0x4e3b:	mov	r14, qword ptr [rbx + 0x18]
0x4e3f:	mov	qword ptr [rsp], rax
0x4e43:	mov	qword ptr [rsp + 8], r8
0x4e48:	mov	rbx, qword ptr [rbx]
0x4e4b:	call	0x19b0


0x4f58:	mov	r12, qword ptr [rbx + 8]
0x4f5c:	lea	rsi, [rip + 0x1044c]
0x4f63:	mov	rbx, qword ptr [rbx]
0x4f66:	mov	edx, 5
0x4f6b:	xor	edi, edi
0x4f6d:	call	0x19b0


0x4f18:	mov	rbx, qword ptr [rbx]
0x4f1b:	lea	rsi, [rip + 0x1047d]
0x4f22:	mov	edx, 5
0x4f27:	xor	edi, edi
0x4f29:	call	0x19b0


0x5078:	mov	r8, qword ptr [rbx + 8]
0x507c:	mov	r12, qword ptr [rbx + 0x28]
0x5080:	lea	rsi, [rip + 0x104b9]
0x5087:	mov	r15, qword ptr [rbx + 0x20]
0x508b:	mov	r14, qword ptr [rbx + 0x18]
0x508f:	mov	edx, 5
0x5094:	mov	r13, qword ptr [rbx + 0x10]
0x5098:	xor	edi, edi
0x509a:	mov	rbx, qword ptr [rbx]
0x509d:	mov	qword ptr [rsp], r8
0x50a1:	call	0x19b0


0xea8f:	cmp	qword ptr [rsp + 0x70], rbp
0xea94:	jne	0xead8


0xef5d:	mov	rax, qword ptr [rsp + 0x78]
0xef62:	mov	rdi, qword ptr [rsp + 0xb0]
0xef6a:	mov	rsi, qword ptr [rsp + 0x68]
0xef6f:	movzx	eax, byte ptr [rax + rbp]
0xef73:	movzx	edx, byte ptr [rdi + rax]
0xef77:	lea	rax, [rbp + 1]
0xef7b:	cmp	byte ptr [rsi + rdx], 0
0xef7f:	jne	0xead8


0xefd2:	xor	ecx, ecx
0xefd4:	mov	rax, rbp
0xefd7:	mov	rdi, qword ptr [rsp + 0x68]
0xefdc:	mov	rsi, qword ptr [rsp + 0xb0]
0xefe4:	mov	r9, qword ptr [rsp + 0x90]
0xefec:	mov	r10, qword ptr [rsp + 0x78]
0xeff1:	mov	r8, qword ptr [rsp + 0x88]
0xeff9:	jmp	0xf012


0xea35:	mov	rax, qword ptr [rsp + 0x78]
0xea3a:	mov	rdi, qword ptr [rsp + 0x68]
0xea3f:	movzx	edx, byte ptr [rax + rbp]
0xea43:	lea	rax, [rbp + 1]
0xea47:	cmp	byte ptr [rdi + rdx], 0
0xea4b:	jne	0xead8


0xea96:	xor	eax, eax
0xea98:	mov	rsi, qword ptr [rsp + 0x70]
0xea9d:	cmp	qword ptr [rsp + 0x88], rsi
0xeaa5:	jle	0xeab0


0xef85:	mov	rsi, qword ptr [rsp + 0x68]
0xef8a:	mov	rdi, qword ptr [rsp + 0xb0]
0xef92:	mov	rcx, qword ptr [rsp + 0x70]
0xef97:	mov	r8, qword ptr [rsp + 0x78]
0xef9c:	jmp	0xefb7


0xf012:	xor	edx, edx
0xf014:	cmp	r8, rax
0xf017:	jle	0xf01e


0xea51:	mov	rsi, qword ptr [rsp + 0x68]
0xea56:	mov	rcx, qword ptr [rsp + 0x70]
0xea5b:	mov	rdi, qword ptr [rsp + 0x78]
0xea60:	jmp	0xea7a


0xeab0:	mov	rsi, qword ptr [rsp + 0xb0]
0xeab8:	test	rsi, rsi
0xeabb:	je	0xeac1


0xeaa7:	mov	rax, qword ptr [rsp + 0x78]
0xeaac:	movzx	eax, byte ptr [rax + rsi]
0xeab0:	mov	rsi, qword ptr [rsp + 0xb0]
0xeab8:	test	rsi, rsi
0xeabb:	je	0xeac1


0xefb7:	cmp	rcx, rax
0xefba:	mov	rbp, rax
0xefbd:	jne	0xefa0


0xf01e:	test	rsi, rsi
0xf021:	je	0xf027


0xf019:	movzx	edx, byte ptr [r10 + rax]
0xf01e:	test	rsi, rsi
0xf021:	je	0xf027


0xea7a:	cmp	rcx, rax
0xea7d:	mov	rbp, rax
0xea80:	jne	0xea68


0xeac1:	mov	rdi, qword ptr [rsp + 0x68]
0xeac6:	cmp	byte ptr [rdi + rax], 0
0xeaca:	je	0xf469


0xeabd:	movzx	eax, byte ptr [rsi + rax]
0xeac1:	mov	rdi, qword ptr [rsp + 0x68]
0xeac6:	cmp	byte ptr [rdi + rax], 0
0xeaca:	je	0xf469


0xefbf:	jmp	0xea82


0xefa0:	movzx	eax, byte ptr [r8 + rax]
0xefa5:	movzx	edx, byte ptr [rdi + rax]
0xefa9:	lea	rax, [rbp + 1]
0xefad:	cmp	byte ptr [rsi + rdx], 0
0xefb1:	jne	0xfc11


0xf027:	cmp	byte ptr [rdi + rdx], 0
0xf02b:	je	0xf000


0xf023:	movzx	edx, byte ptr [rsi + rdx]
0xf027:	cmp	byte ptr [rdi + rdx], 0
0xf02b:	je	0xf000


0xea82:	mov	rax, qword ptr [rsp + 0x70]
0xea87:	mov	qword ptr [rsp + 0xd8], rax
0xea8f:	cmp	qword ptr [rsp + 0x70], rbp
0xea94:	jne	0xead8


0xea68:	movzx	edx, byte ptr [rdi + rax]
0xea6c:	lea	rax, [rax + 1]
0xea70:	cmp	byte ptr [rsi + rdx], 0
0xea74:	jne	0xfc11


0xead0:	mov	rbp, qword ptr [rsp + 0x70]
0xead5:	nop	dword ptr [rax]
0xead8:	mov	edx, dword ptr [rsp + 0x280]
0xeadf:	mov	rdi, qword ptr [rsp]
0xeae3:	mov	rsi, rbp
0xeae6:	call	0x9b90


0xfc11:	mov	qword ptr [rsp + 0xd8], rbp
0xfc19:	jmp	0xead8


0xf000:	sub	rax, 1
0xf004:	mov	ecx, 1
0xf009:	cmp	rax, r9
0xf00c:	jl	0xf9f0


0xf02d:	test	cl, cl
0xf02f:	je	0xead8


0xf9f0:	mov	qword ptr [rsp + 0xd8], rax
0xf9f8:	mov	rdi, qword ptr [rsp + 0x1d8]
0xfa00:	mov	dword ptr [rsp + 0x5c], 1
0xfa08:	jmp	0xf058


0xf035:	mov	qword ptr [rsp + 0xd8], rax
0xf03d:	mov	rbp, rax
0xf040:	jmp	0xead8


0x50a6:	sub	rsp, 8
0x50aa:	mov	r9, r13
0x50ad:	push	r12
0x50af:	push	r15
0x50b1:	push	r14
0x50b3:	mov	r8, qword ptr [rsp + 0x20]
0x50b8:	mov	rcx, rbx
0x50bb:	mov	rdx, rax
0x50be:	mov	rdi, rbp
0x50c1:	mov	esi, 1
0x50c6:	xor	eax, eax
0x50c8:	call	0x1c30


0x50cd:	add	rsp, 0x20
0x50d1:	add	rsp, 0x28
0x50d5:	pop	rbx
0x50d6:	pop	rbp
0x50d7:	pop	r12
0x50d9:	pop	r13
0x50db:	pop	r14
0x50dd:	pop	r15
0x50df:	ret	


0x4f2e:	add	rsp, 0x28
0x4f32:	mov	rcx, rbx
0x4f35:	mov	rdi, rbp
0x4f38:	pop	rbx
0x4f39:	pop	rbp
0x4f3a:	pop	r12
0x4f3c:	pop	r13
0x4f3e:	pop	r14
0x4f40:	pop	r15
0x4f42:	mov	rdx, rax
0x4f45:	mov	esi, 1
0x4f4a:	xor	eax, eax
0x4f4c:	jmp	0x1c30


0x4f72:	add	rsp, 0x28
0x4f76:	mov	r8, r12
0x4f79:	mov	rcx, rbx
0x4f7c:	mov	rdi, rbp
0x4f7f:	mov	rdx, rax
0x4f82:	mov	esi, 1
0x4f87:	pop	rbx
0x4f88:	pop	rbp
0x4f89:	pop	r12
0x4f8b:	pop	r13
0x4f8d:	pop	r14
0x4f8f:	pop	r15
0x4f91:	xor	eax, eax
0x4f93:	jmp	0x1c30


0x4e50:	sub	rsp, 8
0x4e54:	mov	r9, qword ptr [rsp + 0x18]
0x4e59:	mov	rdx, rax
0x4e5c:	mov	rcx, rbx
0x4e5f:	mov	esi, 1
0x4e64:	mov	rdi, rbp
0x4e67:	xor	eax, eax
0x4e69:	push	r9
0x4e6b:	push	r13
0x4e6d:	push	r12
0x4e6f:	push	r15
0x4e71:	push	r14
0x4e73:	mov	r9, qword ptr [rsp + 0x30]
0x4e78:	mov	r8, qword ptr [rsp + 0x38]
0x4e7d:	call	0x1c30


0x5012:	sub	rsp, 8
0x5016:	push	r14
0x5018:	mov	rdx, rax
0x501b:	mov	r9, r13
0x501e:	mov	r8, r12
0x5021:	mov	rcx, rbx
0x5024:	mov	rdi, rbp
0x5027:	mov	esi, 1
0x502c:	xor	eax, eax
0x502e:	call	0x1c30


0x5033:	pop	rax
0x5034:	pop	rdx
0x5035:	add	rsp, 0x28
0x5039:	pop	rbx
0x503a:	pop	rbp
0x503b:	pop	r12
0x503d:	pop	r13
0x503f:	pop	r14
0x5041:	pop	r15
0x5043:	ret	


0x506e:	push	r15
0x5070:	jmp	0x5016


0x5016:	push	r14
0x5018:	mov	rdx, rax
0x501b:	mov	r9, r13
0x501e:	mov	r8, r12
0x5021:	mov	rcx, rbx
0x5024:	mov	rdi, rbp
0x5027:	mov	esi, 1
0x502c:	xor	eax, eax
0x502e:	call	0x1c30


0x5117:	push	r13
0x5119:	push	r12
0x511b:	push	r15
0x511d:	push	r14
0x511f:	mov	r9, qword ptr [rsp + 0x28]
0x5124:	jmp	0x50b3


0x50b3:	mov	r8, qword ptr [rsp + 0x20]
0x50b8:	mov	rcx, rbx
0x50bb:	mov	rdx, rax
0x50be:	mov	rdi, rbp
0x50c1:	mov	esi, 1
0x50c6:	xor	eax, eax
0x50c8:	call	0x1c30


0x4fbe:	add	rsp, 0x28
0x4fc2:	mov	r9, r13
0x4fc5:	mov	r8, r12
0x4fc8:	mov	rcx, rbx
0x4fcb:	mov	rdi, rbp
0x4fce:	mov	rdx, rax
0x4fd1:	pop	rbx
0x4fd2:	pop	rbp
0x4fd3:	pop	r12
0x4fd5:	pop	r13
0x4fd7:	pop	r14
0x4fd9:	pop	r15
0x4fdb:	mov	esi, 1
0x4fe0:	xor	eax, eax
0x4fe2:	jmp	0x1c30


0x3d60:	sub	rsp, 8
0x3d64:	mov	rcx, rbp
0x3d67:	mov	rsi, r13
0x3d6a:	push	qword ptr [rsp + 0x68]
0x3d6e:	push	qword ptr [rsp + 0x78]
0x3d72:	mov	rdi, r14
0x3d75:	push	0
0x3d77:	mov	r9d, dword ptr [rsp + 0x98]
0x3d7f:	mov	r8d, dword ptr [rsp + 0x28]
0x3d84:	mov	rdx, qword ptr [rsp + 0x30]
0x3d89:	and	r9d, 0xfffffffd
0x3d8d:	call	0x31c0


0x3d92:	add	rsp, 0x20
0x3d96:	mov	r15, rax
0x3d99:	mov	rbx, qword ptr [rsp + 0xa8]
0x3da1:	xor	rbx, qword ptr fs:[0x28]
0x3daa:	mov	rax, r15
0x3dad:	jne	0x43b3


0x3db3:	add	rsp, 0xb8
0x3dba:	pop	rbx
0x3dbb:	pop	rbp
0x3dbc:	pop	r12
0x3dbe:	pop	r13
0x3dc0:	pop	r14
0x3dc2:	pop	r15
0x3dc4:	ret	


0x43b3:	call	0x19e0


0x435d:	sub	rsp, 8
0x4361:	mov	r8d, 5
0x4367:	mov	rcx, r11
0x436a:	push	qword ptr [rsp + 0x68]
0x436e:	push	qword ptr [rsp + 0x78]
0x4372:	mov	rdi, r14
0x4375:	push	qword ptr [rsp + 0x38]
0x4379:	mov	r9d, dword ptr [rsp + 0x98]
0x4381:	mov	rdx, qword ptr [rsp + 0x30]
0x4386:	mov	rsi, qword ptr [rsp + 0x70]
0x438b:	call	0x31c0


0x4390:	add	rsp, 0x20
0x4394:	mov	r15, rax
0x4397:	jmp	0x3d99


0x3d99:	mov	rbx, qword ptr [rsp + 0xa8]
0x3da1:	xor	rbx, qword ptr fs:[0x28]
0x3daa:	mov	rax, r15
0x3dad:	jne	0x43b3


0x11b99:	sub	rsp, 8
0x11b9d:	mov	rdi, qword ptr [r14 + 0x78]
0x11ba1:	lea	rdx, [r13 + 0x18]
0x11ba5:	push	qword ptr [rsp + 0x28]
0x11ba9:	mov	r9, qword ptr [rsp + 0xb8]
0x11bb1:	lea	rcx, [r13 + 0x48]
0x11bb5:	mov	r8, qword ptr [rsp + 0x68]
0x11bba:	mov	rsi, r12
0x11bbd:	call	0xb2e0


0x11bc2:	mov	rdx, qword ptr [rsp + 0x50]
0x11bc7:	test	eax, eax
0x11bc9:	mov	dword ptr [rdx], eax
0x11bcb:	pop	r9
0x11bcd:	pop	r10
0x11bcf:	je	0x11ae0


0x11ae0:	movzx	eax, byte ptr [r15 + 8]
0x11ae5:	cmp	al, 2
0x11ae7:	je	0x11c81


0x11bd5:	jmp	0x11b18


0x11c81:	mov	rax, qword ptr [rsp + 0x40]
0x11c86:	mov	dword ptr [rax], 7
0x11c8c:	jmp	0x11b18


0x11aed:	cmp	al, 0x15
0x11aef:	je	0x11f02


0x11b18:	mov	rdi, r12
0x11b1b:	call	0x18d0


0x11f02:	add	qword ptr [r14 + 0x48], rbx
0x11f06:	cmp	byte ptr [rsp + 0x57], 0
0x11f0b:	je	0x11f21


0x11af5:	xor	r9d, r9d
0x11af8:	jmp	0x11782


0x11f21:	mov	rax, qword ptr [rsp + 0x10]
0x11f26:	mov	edx, dword ptr [rax + 0xb4]
0x11f2c:	cmp	edx, 1
0x11f2f:	jle	0x11f49


0x11f0d:	lea	rdx, [r12 + 0x20]
0x11f12:	mov	rax, r12
0x11f15:	not	qword ptr [rax]
0x11f18:	add	rax, 8
0x11f1c:	cmp	rdx, rax
0x11f1f:	jne	0x11f15


0x11782:	mov	rax, qword ptr [rsp + 0x28]
0x11787:	mov	r8, qword ptr [rsp + 0x20]
0x1178c:	and	r9d, 1
0x11790:	mov	rdi, qword ptr [rsp]
0x11794:	mov	ecx, ebx
0x11796:	mov	rdx, r15
0x11799:	mov	rsi, r14
0x1179c:	mov	dword ptr [rsp + 0xa0], 3
0x117a7:	mov	qword ptr [rsp + 0xa8], rax
0x117af:	call	0x10480


0x11f49:	cmp	qword ptr [r13 + 0x28], 0
0x11f4e:	jne	0x11fd8


0x11f31:	mov	rcx, qword ptr [rax + 0x78]
0x11f35:	xor	eax, eax
0x11f37:	mov	rsi, qword ptr [rcx + rax]
0x11f3b:	and	qword ptr [r12 + rax], rsi
0x11f3f:	add	rax, 8
0x11f43:	cmp	rax, 0x20
0x11f47:	jne	0x11f37


0x11f15:	not	qword ptr [rax]
0x11f18:	add	rax, 8
0x11f1c:	cmp	rdx, rax
0x11f1f:	jne	0x11f15


0x11f54:	cmp	qword ptr [r13 + 0x30], 0
0x11f59:	jne	0x11fd8


0x11fd8:	mov	rax, qword ptr [rsp + 0x10]
0x11fdd:	lea	r15, [rsp + 0xb0]
0x11fe5:	xor	edx, edx
0x11fe7:	xor	ecx, ecx
0x11fe9:	mov	r8, r15
0x11fec:	or	byte ptr [rax + 0xb0], 2
0x11ff3:	lea	rbx, [rax + 0x70]
0x11ff7:	lea	rbp, [rax + 0x80]
0x11ffe:	mov	byte ptr [rsp + 0xb8], 6
0x12006:	mov	qword ptr [rsp + 0xb0], r13
0x1200e:	mov	rdi, rbx
0x12011:	mov	rsi, rbp
0x12014:	call	0x87a0


0x11f37:	mov	rsi, qword ptr [rcx + rax]
0x11f3b:	and	qword ptr [r12 + rax], rsi
0x11f3f:	add	rax, 8
0x11f43:	cmp	rax, 0x20
0x11f47:	jne	0x11f37


0x11f5b:	cmp	qword ptr [r13 + 0x38], 0
0x11f60:	jne	0x11fd8


0x11f62:	cmp	qword ptr [r13 + 0x40], 0
0x11f67:	jne	0x11fd8


0x11f69:	sub	edx, 1
0x11f6c:	jle	0x11f7c


0x11f7c:	mov	rdi, r13
0x11f7f:	call	0x7200


0x11f6e:	cmp	qword ptr [r13 + 0x48], 0
0x11f73:	jne	0x11fd8


0x11f75:	test	byte ptr [r13 + 0x20], 1
0x11f7a:	jne	0x11fd8


0x11f84:	mov	rax, qword ptr [rsp + 0x10]
0x11f89:	lea	r8, [rsp + 0xb0]
0x11f91:	xor	ecx, ecx
0x11f93:	xor	edx, edx
0x11f95:	mov	byte ptr [rsp + 0xb8], 3
0x11f9d:	mov	qword ptr [rsp + 0xb0], r12
0x11fa5:	lea	rsi, [rax + 0x80]
0x11fac:	lea	rdi, [rax + 0x70]
0x11fb0:	call	0x87a0


0x11fb5:	test	rax, rax
0x11fb8:	mov	qword ptr [rsp + 0x28], rax
0x11fbd:	jne	0x1103c


0x11fc3:	mov	rax, qword ptr [rsp + 0x40]
0x11fc8:	mov	dword ptr [rax], 0xc
0x11fce:	jmp	0x11b18


0x1103c:	mov	rbx, qword ptr [rsp + 0x18]
0x11041:	mov	rdx, qword ptr [rsp + 0x20]
0x11046:	mov	rsi, r14
0x11049:	lea	r15, [rsp + 0xc0]
0x11051:	mov	rdi, rbx
0x11054:	call	0x106e0


0x11059:	cdqe	
0x1105b:	add	qword ptr [r14 + 0x48], rax
0x1105f:	movzx	eax, byte ptr [rbx + 8]
0x11063:	nop	dword ptr [rax + rax]
0x11068:	cmp	al, 0x17
0x1106a:	ja	0x10fb0


0x11070:	cmp	al, 0x12
0x11072:	mov	ecx, 0x8c0800
0x11077:	sete	bl
0x1107a:	bt	rcx, rax
0x1107e:	jae	0x10fb0


0x10fb0:	mov	rdi, qword ptr [rsp + 0x118]
0x10fb8:	xor	rdi, qword ptr fs:[0x28]
0x10fc1:	mov	rax, qword ptr [rsp + 0x28]
0x10fc6:	jne	0x1233e


0x11084:	mov	rcx, qword ptr [rsp + 0x18]
0x11089:	cmp	al, 0x17
0x1108b:	mov	rbp, qword ptr [r14 + 0x48]
0x1108f:	movdqa	xmm0, xmmword ptr [rcx]
0x11093:	je	0x113b8


0x113b8:	mov	rdx, qword ptr [rsp + 0x20]
0x113bd:	mov	rsi, rcx
0x113c0:	mov	rdi, r14
0x113c3:	movaps	xmmword ptr [rsp], xmm0
0x113c7:	call	0x10de0


0x11099:	cmp	al, 0x13
0x1109b:	movzx	ebx, bl
0x1109e:	je	0x11350


0x11350:	mov	qword ptr [rsp], 1
0x11358:	mov	rdx, qword ptr [rsp + 0x20]
0x1135d:	mov	rdi, qword ptr [rsp + 0x18]
0x11362:	mov	rsi, r14
0x11365:	call	0x106e0


0x110a4:	mov	rdx, qword ptr [rsp + 0x20]
0x110a9:	mov	rdi, qword ptr [rsp + 0x18]
0x110ae:	mov	rsi, r14
0x110b1:	call	0x106e0


0x110b6:	cdqe	
0x110b8:	add	qword ptr [r14 + 0x48], rax
0x110bc:	cmp	qword ptr [rsp + 0x28], 0
0x110c2:	je	0x11450


0x11450:	mov	rax, qword ptr [rsp + 0x40]
0x11455:	mov	ecx, dword ptr [rax]
0x11457:	test	ecx, ecx
0x11459:	je	0x113a7


0x110c8:	mov	qword ptr [rsp], -1
0x110d0:	test	rbx, rbx
0x110d3:	mov	rbp, qword ptr [rsp + 0x28]
0x110d8:	mov	qword ptr [rsp + 0x30], 0
0x110e1:	jg	0x11260


0x113a7:	mov	qword ptr [rsp + 0x28], 0
0x113b0:	jmp	0x111fe


0x1145f:	jmp	0x10fa0


0x110e7:	cmp	byte ptr [rbp + 0x30], 0x11
0x110eb:	je	0x11430


0x11260:	cmp	rbx, 1
0x11264:	je	0x11a9c


0x111fe:	test	qword ptr [rsp + 0x20], 0x1000000
0x11207:	mov	rax, qword ptr [rsp + 0x18]
0x1120c:	movzx	eax, byte ptr [rax + 8]
0x11210:	je	0x11068


0x11430:	mov	rdx, qword ptr [rbp + 0x28]
0x11434:	lea	rsi, [rip - 0xb33b]
0x1143b:	mov	rdi, rbp
0x1143e:	call	0x63c0


0x110f1:	cmp	qword ptr [rsp], -1
0x110f6:	mov	rdx, rbp
0x110f9:	mov	r8, r15
0x110fc:	sete	al
0x110ff:	xor	ecx, ecx
0x11101:	add	eax, 0xa
0x11104:	mov	byte ptr [rsp + 0xc8], al
0x1110b:	mov	rax, qword ptr [rsp + 0x10]
0x11110:	lea	r12, [rax + 0x70]
0x11114:	lea	r13, [rax + 0x80]
0x1111b:	mov	rdi, r12
0x1111e:	mov	rsi, r13
0x11121:	call	0x87a0


0x11a9c:	mov	r13, qword ptr [rsp + 0x28]
0x11aa1:	mov	qword ptr [rsp + 0x30], r13
0x11aa6:	jmp	0x112f4


0x1126a:	mov	rax, qword ptr [rsp + 0x10]
0x1126f:	mov	r13, rbp
0x11272:	mov	qword ptr [rsp + 0x48], r14
0x11277:	lea	r12, [rax + 0x80]
0x1127e:	lea	rdi, [rax + 0x70]
0x11282:	mov	rax, rbp
0x11285:	mov	r14, rax
0x11288:	mov	ebp, 2
0x1128d:	mov	rsi, r12
0x11290:	mov	qword ptr [rsp + 0x30], rdi
0x11295:	mov	r12, r13
0x11298:	mov	r13, rbx
0x1129b:	mov	rbx, rsi
0x1129e:	nop	
0x112a0:	mov	rsi, qword ptr [rsp + 0x10]
0x112a5:	mov	rdi, r12
0x112a8:	call	0x8880


0x11068:	cmp	al, 0x17
0x1106a:	ja	0x10fb0


0x11216:	cmp	al, 0xb
0x11218:	je	0x11222


0x112f4:	cmp	qword ptr [rsp], rbx
0x112f8:	je	0x11464


0x11222:	mov	rax, qword ptr [rsp + 0x28]
0x11227:	test	rax, rax
0x1122a:	je	0x1123d


0x1121a:	cmp	al, 0x17
0x1121c:	jne	0x11068


0x11464:	mov	rdx, qword ptr [rsp + 0x30]
0x11469:	nop	dword ptr [rax]
0x11470:	mov	qword ptr [rsp + 0x28], rdx
0x11475:	jmp	0x111fe


0x112fe:	mov	rsi, qword ptr [rsp + 0x10]
0x11303:	mov	rdi, r13
0x11306:	call	0x8880


0x1123d:	mov	rax, qword ptr [rsp + 0x40]
0x11242:	mov	qword ptr [rsp + 0x28], 0
0x1124b:	mov	dword ptr [rax], 0xd
0x11251:	jmp	0x10fb0


0x1122c:	lea	rsi, [rip - 0x9fd3]
0x11233:	xor	edx, edx
0x11235:	mov	rdi, rax
0x11238:	call	0x63c0


0x1130b:	test	rax, rax
0x1130e:	mov	rbp, rax
0x11311:	jne	0x110e7


0x112ad:	mov	rdi, qword ptr [rsp + 0x30]
0x112b2:	mov	r12, rax
0x112b5:	mov	rdx, r14
0x112b8:	mov	r8, r15
0x112bb:	mov	rcx, rax
0x112be:	mov	rsi, rbx
0x112c1:	mov	byte ptr [rsp + 0xc8], 0x10
0x112c9:	call	0x87a0


0x1133e:	mov	qword ptr [rsp + 0x28], 0
0x11347:	jmp	0x10fb0


0x11443:	jmp	0x110f1


0x1136a:	cdqe	
0x1136c:	add	qword ptr [r14 + 0x48], rax
0x11370:	cmp	qword ptr [rsp + 0x28], 0
0x11376:	je	0x11450


0x1137c:	mov	rax, qword ptr [rsp]
0x11380:	or	rax, rbx
0x11383:	jne	0x110d0


0x11389:	mov	rdi, qword ptr [rsp + 0x28]
0x1138e:	lea	rsi, [rip - 0xa135]
0x11395:	xor	edx, edx
0x11397:	call	0x63c0


0x110d0:	test	rbx, rbx
0x110d3:	mov	rbp, qword ptr [rsp + 0x28]
0x110d8:	mov	qword ptr [rsp + 0x30], 0
0x110e1:	jg	0x11260


0x1139c:	mov	rax, qword ptr [rsp + 0x40]
0x113a1:	mov	esi, dword ptr [rax]
0x113a3:	test	esi, esi
0x113a5:	jne	0x1132b


0x1132b:	mov	rdi, qword ptr [rsp + 0x28]
0x11330:	lea	rsi, [rip - 0xa0d7]
0x11337:	xor	edx, edx
0x11339:	call	0x63c0


0x113cc:	cmp	rax, -1
0x113d0:	mov	rbx, rax
0x113d3:	movdqa	xmm0, xmmword ptr [rsp]
0x113d8:	je	0x11480


0x11480:	mov	rax, qword ptr [rsp + 0x18]
0x11485:	cmp	byte ptr [rax + 8], 1
0x11489:	jne	0x11540


0x113de:	cmp	rax, -2
0x113e2:	je	0x113fd


0x1148f:	mov	rax, qword ptr [rsp + 0x18]
0x11494:	cmp	byte ptr [rax], 0x2c
0x11497:	jne	0x11540


0x11540:	mov	rax, qword ptr [rsp + 0x40]
0x11545:	mov	dword ptr [rax], 0xa
0x1154b:	cmp	qword ptr [rsp + 0x28], 0
0x11551:	jne	0x1132b


0x113fd:	test	qword ptr [rsp + 0x20], 0x200000
0x11406:	je	0x12343


0x113e4:	mov	rax, qword ptr [rsp + 0x18]
0x113e9:	movzx	eax, byte ptr [rax + 8]
0x113ed:	cmp	al, 0x18
0x113ef:	je	0x11510


0x1149d:	xor	ebx, ebx
0x1149f:	mov	rdx, qword ptr [rsp + 0x20]
0x114a4:	mov	rsi, qword ptr [rsp + 0x18]
0x114a9:	mov	rdi, r14
0x114ac:	movaps	xmmword ptr [rsp + 0x30], xmm0
0x114b1:	call	0x10de0


0x11557:	jmp	0x10fa0


0x12343:	mov	rax, qword ptr [rsp + 0x18]
0x12348:	cmp	byte ptr [rax + 8], 2
0x1234c:	jne	0x11540


0x1140c:	mov	rax, qword ptr [rsp + 0x18]
0x11411:	mov	qword ptr [r14 + 0x48], rbp
0x11415:	movaps	xmmword ptr [rax], xmm0
0x11418:	mov	byte ptr [rax + 8], 1
0x1141c:	mov	rax, qword ptr [rsp + 0x28]
0x11421:	jmp	0x111e5


0x11510:	mov	qword ptr [rsp], rbx
0x11514:	xor	eax, eax
0x11516:	cmp	qword ptr [rsp], 0x7fff
0x1151e:	setg	al
0x11521:	jmp	0x114f7


0x113f5:	cmp	al, 1
0x113f7:	je	0x11523


0x12352:	mov	rax, qword ptr [rsp + 0x40]
0x12357:	mov	dword ptr [rax], 9
0x1235d:	jmp	0x1154b


0x111e5:	mov	rdi, qword ptr [rsp + 0x40]
0x111ea:	mov	edx, dword ptr [rdi]
0x111ec:	test	edx, edx
0x111ee:	je	0x111f9


0x114f7:	test	rax, rax
0x114fa:	je	0x11358


0x11523:	mov	rax, qword ptr [rsp + 0x18]
0x11528:	cmp	byte ptr [rax], 0x2c
0x1152b:	je	0x1149f


0x1154b:	cmp	qword ptr [rsp + 0x28], 0
0x11551:	jne	0x1132b


0x111f9:	mov	qword ptr [rsp + 0x28], rax
0x111fe:	test	qword ptr [rsp + 0x20], 0x1000000
0x11207:	mov	rax, qword ptr [rsp + 0x18]
0x1120c:	movzx	eax, byte ptr [rax + 8]
0x11210:	je	0x11068


0x111f0:	test	rax, rax
0x111f3:	je	0x1154b


0x11358:	mov	rdx, qword ptr [rsp + 0x20]
0x1135d:	mov	rdi, qword ptr [rsp + 0x18]
0x11362:	mov	rsi, r14
0x11365:	call	0x106e0


0x11500:	mov	rax, qword ptr [rsp + 0x40]
0x11505:	mov	dword ptr [rax], 0xf
0x1150b:	jmp	0x1154b


0x1149f:	mov	rdx, qword ptr [rsp + 0x20]
0x114a4:	mov	rsi, qword ptr [rsp + 0x18]
0x114a9:	mov	rdi, r14
0x114ac:	movaps	xmmword ptr [rsp + 0x30], xmm0
0x114b1:	call	0x10de0


0x11531:	test	qword ptr [rsp + 0x20], 0x200000
0x1153a:	jne	0x1140c


0x114b6:	cmp	rax, -2
0x114ba:	mov	qword ptr [rsp], rax
0x114be:	movdqa	xmm0, xmmword ptr [rsp + 0x30]
0x114c4:	je	0x113fd


0x114ca:	mov	rax, qword ptr [rsp]
0x114ce:	cmp	rax, -1
0x114d2:	je	0x114d9


0x114d9:	mov	rax, qword ptr [rsp + 0x18]
0x114de:	cmp	byte ptr [rax + 8], 0x18
0x114e2:	jne	0x11540


0x114d4:	cmp	rax, rbx
0x114d7:	jl	0x11540


0x114e4:	cmp	qword ptr [rsp], -1
0x114e9:	jne	0x11514


0x114eb:	xor	eax, eax
0x114ed:	cmp	rbx, 0x7fff
0x114f4:	setg	al
0x114f7:	test	rax, rax
0x114fa:	je	0x11358


0x11514:	xor	eax, eax
0x11516:	cmp	qword ptr [rsp], 0x7fff
0x1151e:	setg	al
0x11521:	jmp	0x114f7


0x112ce:	test	r12, r12
0x112d1:	mov	r14, rax
0x112d4:	je	0x11320


0x11320:	mov	rax, qword ptr [rsp + 0x40]
0x11325:	mov	dword ptr [rax], 0xc
0x1132b:	mov	rdi, qword ptr [rsp + 0x28]
0x11330:	lea	rsi, [rip - 0xa0d7]
0x11337:	xor	edx, edx
0x11339:	call	0x63c0


0x112d6:	test	rax, rax
0x112d9:	je	0x11320


0x112db:	add	rbp, 1
0x112df:	cmp	rbp, r13
0x112e2:	jle	0x112a0


0x112a0:	mov	rsi, qword ptr [rsp + 0x10]
0x112a5:	mov	rdi, r12
0x112a8:	call	0x8880


0x112e4:	mov	r14, qword ptr [rsp + 0x48]
0x112e9:	mov	rbx, r13
0x112ec:	mov	qword ptr [rsp + 0x30], rax
0x112f1:	mov	r13, r12
0x112f4:	cmp	qword ptr [rsp], rbx
0x112f8:	je	0x11464


0x11126:	test	rax, rax
0x11129:	mov	rdx, rax
0x1112c:	je	0x11320


0x11132:	add	rbx, 2
0x11136:	cmp	rbx, qword ptr [rsp]
0x1113a:	jg	0x111bb


0x1113c:	mov	qword ptr [rsp + 0x48], r14
0x11141:	mov	r14, rax
0x11144:	mov	rsi, qword ptr [rsp + 0x10]
0x11149:	mov	rdi, rbp
0x1114c:	call	0x8880


0x111bb:	mov	rax, qword ptr [rsp + 0x30]
0x111c0:	test	rax, rax
0x111c3:	je	0x11470


0x11470:	mov	qword ptr [rsp + 0x28], rdx
0x11475:	jmp	0x111fe


0x111c9:	mov	rcx, rdx
0x111cc:	mov	r8, r15
0x111cf:	mov	rdx, rax
0x111d2:	mov	rsi, r13
0x111d5:	mov	rdi, r12
0x111d8:	mov	byte ptr [rsp + 0xc8], 0x10
0x111e0:	call	0x87a0


0x11151:	mov	r8, r15
0x11154:	mov	rbp, rax
0x11157:	mov	rcx, rax
0x1115a:	mov	rdx, r14
0x1115d:	mov	rsi, r13
0x11160:	mov	rdi, r12
0x11163:	mov	byte ptr [rsp + 0xc8], 0x10
0x1116b:	call	0x87a0


0x11170:	test	rbp, rbp
0x11173:	je	0x11320


0x11179:	test	rax, rax
0x1117c:	je	0x11320


0x11182:	xor	ecx, ecx
0x11184:	mov	r8, r15
0x11187:	mov	rdx, rax
0x1118a:	mov	rsi, r13
0x1118d:	mov	rdi, r12
0x11190:	mov	byte ptr [rsp + 0xc8], 0xa
0x11198:	call	0x87a0


0x1119d:	test	rax, rax
0x111a0:	mov	r14, rax
0x111a3:	je	0x11320


0x111a9:	add	rbx, 1
0x111ad:	cmp	rbx, qword ptr [rsp]
0x111b1:	jle	0x11144


0x11144:	mov	rsi, qword ptr [rsp + 0x10]
0x11149:	mov	rdi, rbp
0x1114c:	call	0x8880


0x111b3:	mov	r14, qword ptr [rsp + 0x48]
0x111b8:	mov	rdx, rax
0x111bb:	mov	rax, qword ptr [rsp + 0x30]
0x111c0:	test	rax, rax
0x111c3:	je	0x11470


0x12019:	mov	rdi, rax
0x1201c:	mov	qword ptr [rsp + 0x28], rax
0x12021:	lea	rdx, [r12 + 0x20]
0x12026:	test	rdi, rdi
0x12029:	mov	rax, r12
0x1202c:	je	0x11fc3


0x1202e:	cmp	qword ptr [rax], 0
0x12032:	jne	0x122dd


0x12038:	add	rax, 8
0x1203c:	cmp	rdx, rax
0x1203f:	jne	0x1202e


0x122dd:	xor	ecx, ecx
0x122df:	xor	edx, edx
0x122e1:	mov	r8, r15
0x122e4:	mov	rsi, rbp
0x122e7:	mov	rdi, rbx
0x122ea:	mov	byte ptr [rsp + 0xb8], 3
0x122f2:	mov	qword ptr [rsp + 0xb0], r12
0x122fa:	call	0x87a0


0x12041:	mov	rdi, r12
0x12044:	call	0x18d0


0x122ff:	test	rax, rax
0x12302:	je	0x11fc3


0x12308:	mov	rcx, qword ptr [rsp + 0x28]
0x1230d:	lea	r8, [rsp + 0xc0]
0x12315:	mov	rdx, rax
0x12318:	mov	rsi, rbp
0x1231b:	mov	rdi, rbx
0x1231e:	mov	byte ptr [rsp + 0xc8], 0xa
0x12326:	call	0x87a0


0x1232b:	test	rax, rax
0x1232e:	mov	qword ptr [rsp + 0x28], rax
0x12333:	jne	0x1103c


0x12339:	jmp	0x11fc3


0x117b4:	test	eax, eax
0x117b6:	jne	0x11c9b


0x117bc:	mov	rdx, qword ptr [rsp + 0x20]
0x117c1:	mov	rsi, r14
0x117c4:	mov	rdi, r15
0x117c7:	call	0x5fd0


0x11c9b:	mov	rdx, qword ptr [rsp + 0x40]
0x11ca0:	mov	dword ptr [rdx], eax
0x11ca2:	jmp	0x11b18


0x117cc:	movsxd	rbx, eax
0x117cf:	mov	eax, dword ptr [rsp + 0xa0]
0x117d6:	lea	edx, [rax - 2]
0x117d9:	and	edx, 0xfffffffd
0x117dc:	je	0x117f5


0x117f5:	cmp	eax, 4
0x117f8:	ja	0x1219a


0x117de:	movzx	edx, byte ptr [r15 + 8]
0x117e3:	cmp	dl, 2
0x117e6:	je	0x11c81


0x117fe:	movsxd	rax, dword ptr [rbp + rax*4]
0x11803:	add	rax, rbp
0x11806:	jmp	rax


0x1219a:	lea	rcx, [rip + 0x3c8f]
0x121a1:	lea	rsi, [rip + 0x36a8]
0x121a8:	lea	rdi, [rip + 0x36f0]
0x121af:	mov	edx, 0xced
0x121b4:	call	0x1a50


0x117ec:	cmp	dl, 0x16
0x117ef:	je	0x11ca7


0x11ca7:	movsxd	rax, ebx
0x11caa:	mov	r11, qword ptr [rsp + 0x20]
0x11caf:	add	qword ptr [r14 + 0x48], rax
0x11cb3:	mov	r10, qword ptr [rsp + 0x60]
0x11cb8:	mov	rdx, r11
0x11cbb:	mov	rdi, r10
0x11cbe:	call	0x5fd0


0x11cc3:	movzx	edx, byte ptr [rsp + 0xc8]
0x11ccb:	cmp	dl, 2
0x11cce:	je	0x11c81


0x11cd0:	cmp	dl, 0x15
0x11cd3:	je	0x11ee7


0x11ee7:	mov	eax, ebx
0x11ee9:	neg	eax
0x11eeb:	cdqe	
0x11eed:	add	qword ptr [r14 + 0x48], rax
0x11ef1:	mov	byte ptr [r15 + 8], 1
0x11ef6:	mov	eax, dword ptr [rsp + 0xa0]
0x11efd:	jmp	0x117f5


0x11cd9:	mov	rdx, qword ptr [rsp + 0x68]
0x11cde:	lea	rdi, [rsp + 0xb0]
0x11ce6:	mov	r9d, 1
0x11cec:	mov	r8, r11
0x11cef:	mov	ecx, eax
0x11cf1:	mov	dword ptr [rsp + 0xb0], 3
0x11cfc:	mov	qword ptr [rsp + 0xb8], rdx
0x11d04:	mov	rdx, r10
0x11d07:	call	0x10480


0x11d0c:	test	eax, eax
0x11d0e:	jne	0x11c9b


0x11d10:	mov	rdx, qword ptr [rsp + 0x20]
0x11d15:	mov	rsi, r14
0x11d18:	mov	rdi, r15
0x11d1b:	call	0x5fd0


0x11d20:	movsxd	rbx, eax
0x11d23:	mov	rax, qword ptr [rsp + 0x10]
0x11d28:	mov	esi, dword ptr [rsp + 0xa0]
0x11d2f:	mov	r9d, 0
0x11d35:	cmp	dword ptr [rax + 0xb4], 1
0x11d3c:	lea	eax, [rsi - 2]
0x11d3f:	cmovg	r9, r13
0x11d43:	and	eax, 0xfffffffd
0x11d46:	je	0x121b9


0x121b9:	mov	rax, qword ptr [rsp + 0x40]
0x121be:	mov	dword ptr [rax], 0xb
0x121c4:	jmp	0x11b18


0x11d4c:	mov	r10d, dword ptr [rsp + 0xb0]
0x11d54:	lea	eax, [r10 - 2]
0x11d58:	and	eax, 0xfffffffd
0x11d5b:	je	0x121b9


0x11d61:	cmp	esi, 3
0x11d64:	sete	r11b
0x11d68:	je	0x121fd


0x121fd:	mov	rdi, qword ptr [rsp + 0xa8]
0x12205:	xor	eax, eax
0x12207:	or	rcx, 0xffffffffffffffff
0x1220b:	repne scasb	al, byte ptr [rdi]


0x11d6e:	cmp	r10d, 3
0x11d72:	je	0x121c9


0x1220b:	repne scasb	al, byte ptr [rdi]


0x1220d:	mov	rax, rcx
0x12210:	not	rax
0x12213:	sub	rax, 1
0x12217:	cmp	rax, 1
0x1221b:	jbe	0x11d6e


0x121c9:	mov	rdi, qword ptr [rsp + 0xb8]
0x121d1:	xor	eax, eax
0x121d3:	or	rcx, 0xffffffffffffffff
0x121d7:	repne scasb	al, byte ptr [rdi]


0x11d78:	test	esi, esi
0x11d7a:	jne	0x120e9


0x12221:	jmp	0x121ed


0x121d7:	repne scasb	al, byte ptr [rdi]


0x121d9:	mov	rax, rcx
0x121dc:	not	rax
0x121df:	sub	rax, 1
0x121e3:	cmp	rax, 1
0x121e7:	jbe	0x11d78


0x11d80:	movzx	edx, byte ptr [rsp + 0xa8]
0x11d88:	test	r10d, r10d
0x11d8b:	jne	0x120cd


0x120e9:	xor	edx, edx
0x120eb:	cmp	esi, 3
0x120ee:	jne	0x11d88


0x121ed:	mov	rax, qword ptr [rsp + 0x40]
0x121f2:	mov	dword ptr [rax], 3
0x121f8:	jmp	0x11b18


0x11d91:	movzx	r8d, byte ptr [rsp + 0xb8]
0x11d9a:	test	esi, esi
0x11d9c:	je	0x12086


0x120cd:	cmp	r10d, 3
0x120d1:	je	0x12362


0x120f4:	mov	rax, qword ptr [rsp + 0xa8]
0x120fc:	movzx	edx, byte ptr [rax]
0x120ff:	jmp	0x11d88


0x11d88:	test	r10d, r10d
0x11d8b:	jne	0x120cd


0x12086:	test	r9, r9
0x12089:	je	0x12104


0x11da2:	test	r11b, r11b
0x11da5:	jne	0x12086


0x12362:	mov	rax, qword ptr [rsp + 0xb8]
0x1236a:	movzx	r8d, byte ptr [rax]
0x1236e:	jmp	0x11d9a


0x120d7:	test	esi, esi
0x120d9:	je	0x12083


0x12104:	test	r10d, r10d
0x12107:	je	0x11de7


0x1208b:	mov	edi, edx
0x1208d:	mov	dword ptr [rsp + 0x78], r8d
0x12092:	mov	qword ptr [rsp + 0x70], r9
0x12097:	call	0x1b90


0x11dab:	test	r9, r9
0x11dae:	mov	edx, dword ptr [rsp + 0xa8]
0x11db5:	je	0x11dd4


0x11d9a:	test	esi, esi
0x11d9c:	je	0x12086


0x12083:	xor	r8d, r8d
0x12086:	test	r9, r9
0x12089:	je	0x12104


0x120db:	test	r11b, r11b
0x120de:	jne	0x12083


0x11de7:	test	qword ptr [rsp + 0x20], 0x10000
0x11df0:	je	0x11dfb


0x1210d:	cmp	r10d, 3
0x12111:	jne	0x120c0


0x11dd4:	cmp	edx, -1
0x11dd7:	je	0x121ed


0x11db7:	mov	edi, r8d
0x11dba:	mov	dword ptr [rsp + 0x78], edx
0x11dbe:	mov	qword ptr [rsp + 0x70], r9
0x11dc3:	call	0x1b90


0x120e0:	mov	edx, dword ptr [rsp + 0xa8]
0x120e7:	jmp	0x120c0


0x11dfb:	test	r9, r9
0x11dfe:	je	0x11e26


0x11df2:	cmp	r8d, edx
0x11df5:	jb	0x121b9


0x12113:	jmp	0x11de7


0x120c0:	mov	r8d, dword ptr [rsp + 0xb8]
0x120c8:	jmp	0x11dd4


0x11ddd:	cmp	r8d, -1
0x11de1:	je	0x121ed


0x11e26:	xor	eax, eax
0x11e28:	mov	edi, 1
0x11e2d:	cmp	edx, eax
0x11e2f:	mov	ecx, eax
0x11e31:	ja	0x11e49


0x11e00:	mov	rax, qword ptr [r9 + 0x40]
0x11e04:	cmp	rax, qword ptr [rsp + 0x48]
0x11e09:	mov	rcx, qword ptr [r9 + 8]
0x11e0d:	je	0x12223


0x11e33:	cmp	r8d, eax
0x11e36:	jb	0x11e49


0x11e49:	add	rax, 1
0x11e4d:	cmp	rax, 0x100
0x11e53:	jne	0x11e2d


0x12223:	mov	rax, qword ptr [rsp + 0x48]
0x12228:	mov	rdi, rcx
0x1222b:	mov	dword ptr [rsp + 0x8c], r8d
0x12233:	mov	dword ptr [rsp + 0x88], edx
0x1223a:	mov	qword ptr [rsp + 0x70], r9
0x1223f:	add	rax, rax
0x12242:	add	rax, 1
0x12246:	lea	r10, [rax*4]
0x1224e:	mov	qword ptr [rsp + 0x48], rax
0x12253:	mov	rsi, r10
0x12256:	mov	qword ptr [rsp + 0x80], r10
0x1225e:	call	0x1b60


0x11e13:	mov	dword ptr [rcx + rax*4], edx
0x11e16:	mov	rcx, qword ptr [r9 + 0x10]
0x11e1a:	lea	rsi, [rax + 1]
0x11e1e:	mov	qword ptr [r9 + 0x40], rsi
0x11e22:	mov	dword ptr [rcx + rax*4], r8d
0x11e26:	xor	eax, eax
0x11e28:	mov	edi, 1
0x11e2d:	cmp	edx, eax
0x11e2f:	mov	ecx, eax
0x11e31:	ja	0x11e49


0x11e38:	mov	rsi, rax
0x11e3b:	mov	r11, rdi
0x11e3e:	sar	rsi, 6
0x11e42:	shl	r11, cl
0x11e45:	or	qword ptr [r12 + rsi*8], r11
0x11e49:	add	rax, 1
0x11e4d:	cmp	rax, 0x100
0x11e53:	jne	0x11e2d


0x11e55:	mov	rax, qword ptr [rsp + 0x40]
0x11e5a:	mov	dword ptr [rax], 0
0x11e60:	jmp	0x11ae0


0x11e2d:	cmp	edx, eax
0x11e2f:	mov	ecx, eax
0x11e31:	ja	0x11e49


0x12263:	mov	r9, qword ptr [rsp + 0x70]
0x12268:	mov	r10, qword ptr [rsp + 0x80]
0x12270:	mov	qword ptr [rsp + 0x78], rax
0x12275:	mov	rdi, qword ptr [r9 + 0x10]
0x12279:	mov	rsi, r10
0x1227c:	call	0x1b60


0x12281:	mov	rcx, qword ptr [rsp + 0x78]
0x12286:	test	rcx, rcx
0x12289:	je	0x122b5


0x122b5:	mov	rdi, rcx
0x122b8:	mov	qword ptr [rsp], rax
0x122bc:	call	0x18d0


0x1228b:	test	rax, rax
0x1228e:	mov	r9, qword ptr [rsp + 0x70]
0x12293:	mov	edx, dword ptr [rsp + 0x88]
0x1229a:	mov	r8d, dword ptr [rsp + 0x8c]
0x122a2:	je	0x122b5


0x122a4:	mov	qword ptr [r9 + 0x10], rax
0x122a8:	mov	qword ptr [r9 + 8], rcx
0x122ac:	mov	rax, qword ptr [r9 + 0x40]
0x122b0:	jmp	0x11e13


0x11dc8:	mov	r9, qword ptr [rsp + 0x70]
0x11dcd:	mov	edx, dword ptr [rsp + 0x78]
0x11dd1:	mov	r8d, eax
0x11dd4:	cmp	edx, -1
0x11dd7:	je	0x121ed


0x1209c:	mov	edx, eax
0x1209e:	mov	eax, dword ptr [rsp + 0xb0]
0x120a5:	mov	r9, qword ptr [rsp + 0x70]
0x120aa:	mov	r8d, dword ptr [rsp + 0x78]
0x120af:	cmp	eax, 3
0x120b2:	je	0x11db7


0x120b8:	test	eax, eax
0x120ba:	je	0x11db7


0x122c1:	mov	rax, qword ptr [rsp]
0x122c5:	mov	rdi, rax
0x122c8:	call	0x18d0


0x122cd:	mov	rax, qword ptr [rsp + 0x40]
0x122d2:	mov	dword ptr [rax], 0xc
0x122d8:	jmp	0x11b18


0x12049:	jmp	0x1103c


0x11b20:	mov	rdi, r13
0x11b23:	call	0x7200


0x11b28:	mov	rax, qword ptr [rsp + 0x40]
0x11b2d:	mov	r8d, dword ptr [rax]
0x11b30:	test	r8d, r8d
0x11b33:	jne	0x10fa0


0x11b39:	mov	qword ptr [rsp + 0x28], 0
0x11b42:	jmp	0x1103c


0x18a0:	push	qword ptr [rip + 0x21752a]
0x18a6:	jmp	qword ptr [rip + 0x21752c]


0x18ac:	nop	dword ptr [rax]


0x18b6:	push	0
0x18bb:	jmp	0x18a0


0x18c6:	push	1
0x18cb:	jmp	0x18a0


0x18d6:	push	2
0x18db:	jmp	0x18a0


0x18e6:	push	3
0x18eb:	jmp	0x18a0


0x18f6:	push	4
0x18fb:	jmp	0x18a0


0x1906:	push	5
0x190b:	jmp	0x18a0


0x1916:	push	6
0x191b:	jmp	0x18a0


0x1926:	push	7
0x192b:	jmp	0x18a0


0x1936:	push	8
0x193b:	jmp	0x18a0


0x1946:	push	9
0x194b:	jmp	0x18a0


0x1956:	push	0xa
0x195b:	jmp	0x18a0


0x1966:	push	0xb
0x196b:	jmp	0x18a0


0x1976:	push	0xc
0x197b:	jmp	0x18a0


0x1986:	push	0xd
0x198b:	jmp	0x18a0


0x1996:	push	0xe
0x199b:	jmp	0x18a0


0x19a6:	push	0xf
0x19ab:	jmp	0x18a0


0x19b6:	push	0x10
0x19bb:	jmp	0x18a0


0x19c6:	push	0x11
0x19cb:	jmp	0x18a0


0x19d6:	push	0x12
0x19db:	jmp	0x18a0


0x19e6:	push	0x13
0x19eb:	jmp	0x18a0


0x19f6:	push	0x14
0x19fb:	jmp	0x18a0


0x1a06:	push	0x15
0x1a0b:	jmp	0x18a0


0x1a16:	push	0x16
0x1a1b:	jmp	0x18a0


0x1a26:	push	0x17
0x1a2b:	jmp	0x18a0


0x1a36:	push	0x18
0x1a3b:	jmp	0x18a0


0x1a46:	push	0x19
0x1a4b:	jmp	0x18a0


0x1a56:	push	0x1a
0x1a5b:	jmp	0x18a0


0x1a66:	push	0x1b
0x1a6b:	jmp	0x18a0


0x1a76:	push	0x1c
0x1a7b:	jmp	0x18a0


0x1a86:	push	0x1d
0x1a8b:	jmp	0x18a0


0x1a96:	push	0x1e
0x1a9b:	jmp	0x18a0


0x1aa6:	push	0x1f
0x1aab:	jmp	0x18a0


0x1ab6:	push	0x20
0x1abb:	jmp	0x18a0


0x1ac6:	push	0x21
0x1acb:	jmp	0x18a0


0x1ad6:	push	0x22
0x1adb:	jmp	0x18a0


0x1ae6:	push	0x23
0x1aeb:	jmp	0x18a0


0x1af6:	push	0x24
0x1afb:	jmp	0x18a0


0x1b06:	push	0x25
0x1b0b:	jmp	0x18a0


0x1b16:	push	0x26
0x1b1b:	jmp	0x18a0


0x1b26:	push	0x27
0x1b2b:	jmp	0x18a0


0x1b36:	push	0x28
0x1b3b:	jmp	0x18a0


0x1b46:	push	0x29
0x1b4b:	jmp	0x18a0


0x1b56:	push	0x2a
0x1b5b:	jmp	0x18a0


0x1b66:	push	0x2b
0x1b6b:	jmp	0x18a0


0x1b76:	push	0x2c
0x1b7b:	jmp	0x18a0


0x1b86:	push	0x2d
0x1b8b:	jmp	0x18a0


0x1b96:	push	0x2e
0x1b9b:	jmp	0x18a0


0x1ba6:	push	0x2f
0x1bab:	jmp	0x18a0


0x1bb6:	push	0x30
0x1bbb:	jmp	0x18a0


0x1bc6:	push	0x31
0x1bcb:	jmp	0x18a0


0x1bd6:	push	0x32
0x1bdb:	jmp	0x18a0


0x1be6:	push	0x33
0x1beb:	jmp	0x18a0


0x1bf6:	push	0x34
0x1bfb:	jmp	0x18a0


0x1c06:	push	0x35
0x1c0b:	jmp	0x18a0


0x1c16:	push	0x36
0x1c1b:	jmp	0x18a0


0x1c26:	push	0x37
0x1c2b:	jmp	0x18a0


0x1c36:	push	0x38
0x1c3b:	jmp	0x18a0


0x1c46:	push	0x39
0x1c4b:	jmp	0x18a0


0x1c50:	jmp	qword ptr [rip + 0x21735a]




0x1c56:	push	0x3a
0x1c5b:	jmp	0x18a0


0x1c66:	push	0x3b
0x1c6b:	jmp	0x18a0


0x1c76:	push	0x3c
0x1c7b:	jmp	0x18a0


0x2304:	nop	word ptr cs:[rax + rax]
0x230e:	nop	


0x233a:	hlt	


0x233b:	nop	dword ptr [rax + rax]


0x2372:	nop	dword ptr [rax]
0x2376:	nop	word ptr cs:[rax + rax]


0x23c2:	nop	dword ptr [rax]
0x23c6:	nop	word ptr cs:[rax + rax]


0x240a:	nop	word ptr [rax + rax]


0x241a:	nop	word ptr [rax + rax]


0x2dda:	nop	word ptr [rax + rax]


0x2de8:	nop	dword ptr [rax + rax]


0x2df8:	nop	dword ptr [rax + rax]


0x2ea4:	nop	word ptr cs:[rax + rax]
0x2eae:	nop	


0x2eb5:	nop	
0x2eb6:	nop	word ptr cs:[rax + rax]


0x2ee2:	nop	word ptr cs:[rax + rax]
0x2eec:	nop	dword ptr [rax]


0x3008:	nop	dword ptr [rax + rax]


0x301a:	nop	word ptr [rax + rax]


0x3029:	nop	dword ptr [rax]


0x30cf:	nop	


0x31b7:	nop	word ptr [rax + rax]


0x3253:	mov	byte ptr [rsp + 0xe], 1
0x3258:	mov	byte ptr [rsp + 0x7c], 0
0x325d:	xor	r12d, r12d
0x3260:	mov	qword ptr [rsp + 0x50], 0
0x3269:	mov	byte ptr [rsp + 0xf], 1
0x326e:	mov	byte ptr [rsp + 0xd], 0
0x3273:	lea	rax, [rip + 0x11c4b]
0x327a:	mov	qword ptr [rsp + 0x18], 1
0x3283:	xor	r15d, r15d
0x3286:	mov	dword ptr [rsp + 8], 2
0x328e:	mov	qword ptr [rsp + 0x48], rax
0x3293:	xor	r11d, r11d
0x3296:	mov	rax, rbp
0x3299:	mov	r8d, r12d
0x329c:	mov	rbp, r11
0x329f:	mov	r11, rax
0x32a2:	nop	word ptr [rax + rax]
0x32a8:	cmp	r11, rbp
0x32ab:	setne	r12b
0x32af:	cmp	r11, -1
0x32b3:	jne	0x32c2


0x32b5:	mov	rax, qword ptr [rsp + 0x10]
0x32ba:	cmp	byte ptr [rax + rbp], 0
0x32be:	setne	r12b
0x32c2:	test	r12b, r12b
0x32c5:	je	0x3920


0x32c2:	test	r12b, r12b
0x32c5:	je	0x3920


0x3920:	cmp	dword ptr [rsp + 8], 2
0x3925:	movzx	ebx, byte ptr [rsp + 0xf]
0x392a:	mov	r12d, r8d
0x392d:	mov	rbp, r11
0x3930:	sete	dl
0x3933:	mov	eax, ebx
0x3935:	test	r15, r15
0x3938:	sete	cl
0x393b:	and	eax, edx
0x393d:	and	al, cl
0x393f:	jne	0x43a6


0x32cb:	cmp	dword ptr [rsp + 8], 2
0x32d0:	mov	rdi, qword ptr [rsp + 0x10]
0x32d5:	lea	r9, [rdi + rbp]
0x32d9:	setne	al
0x32dc:	and	al, byte ptr [rsp + 0xd]
0x32e0:	mov	r10d, eax
0x32e3:	je	0x3390


0x3945:	mov	eax, ebx
0x3947:	xor	eax, 1
0x394a:	and	dl, al
0x394c:	je	0x42bc


0x43a6:	mov	dword ptr [rsp + 8], 2
0x43ae:	jmp	0x3d49


0x3390:	movzx	ebx, byte ptr [r9]
0x3394:	cmp	bl, 0x7e
0x3397:	ja	0x36b8


0x32e9:	mov	rax, qword ptr [rsp + 0x18]
0x32ee:	test	rax, rax
0x32f1:	je	0x3720


0x42bc:	mov	rbx, qword ptr [rsp + 0x48]
0x42c1:	test	rbx, rbx
0x42c4:	je	0x42f2


0x3952:	cmp	byte ptr [rsp + 0x7c], 0
0x3957:	je	0x42ba


0x3d49:	cmp	byte ptr [rsp + 0xd], 0
0x3d4e:	je	0x3d60


0x339d:	lea	rcx, [rip + 0x11ba8]
0x33a4:	movzx	edx, bl
0x33a7:	movsxd	rax, dword ptr [rcx + rdx*4]
0x33ab:	add	rax, rcx
0x33ae:	jmp	rax


0x36b8:	cmp	qword ptr [rsp + 0x58], 1
0x36be:	jne	0x3a68


0x3720:	movzx	ebx, byte ptr [r9]
0x3724:	cmp	bl, 0x7e
0x3727:	ja	0x36b0


0x32f7:	cmp	r11, -1
0x32fb:	lea	rbx, [rbp + rax]
0x3300:	jne	0x3330


0x42f2:	cmp	r13, r15
0x42f5:	jbe	0x3d99


0x42c6:	test	al, al
0x42c8:	je	0x42f2


0x42ba:	mov	eax, edx
0x42bc:	mov	rbx, qword ptr [rsp + 0x48]
0x42c1:	test	rbx, rbx
0x42c4:	je	0x42f2


0x395d:	cmp	byte ptr [rsp + 0xe], 0
0x3962:	jne	0x435d


0x3d50:	test	al, al
0x3d52:	mov	eax, 4
0x3d57:	cmove	eax, dword ptr [rsp + 8]
0x3d5c:	mov	dword ptr [rsp + 8], eax


0x36c4:	mov	qword ptr [rsp + 0x38], r11
0x36c9:	mov	byte ptr [rsp + 0x30], r8b
0x36ce:	mov	byte ptr [rsp + 0x28], r10b
0x36d3:	call	0x1c70


0x3a68:	lea	rax, [rsp + 0xa0]
0x3a70:	cmp	r11, -1
0x3a74:	mov	qword ptr [rsp + 0xa0], 0
0x3a80:	mov	qword ptr [rsp + 0x28], rax
0x3a85:	jne	0x3ab4


0x3729:	lea	rcx, [rip + 0x11a18]
0x3730:	movzx	edx, bl
0x3733:	movsxd	rax, dword ptr [rcx + rdx*4]
0x3737:	add	rax, rcx
0x373a:	jmp	rax


0x36b0:	xor	r10d, r10d
0x36b3:	nop	dword ptr [rax + rax]
0x36b8:	cmp	qword ptr [rsp + 0x58], 1
0x36be:	jne	0x3a68


0x3302:	cmp	rax, 1
0x3306:	jbe	0x3330


0x3330:	cmp	rbx, r11
0x3333:	mov	byte ptr [rsp + 0x28], r10b
0x3338:	ja	0x38f0


0x42fb:	mov	byte ptr [r14 + r15], 0
0x4300:	jmp	0x3d99


0x42ca:	movzx	ecx, byte ptr [rbx]
0x42cd:	mov	rax, rbx
0x42d0:	test	cl, cl
0x42d2:	je	0x42f2


0x3968:	test	r13, r13
0x396b:	sete	al
0x396e:	cmp	qword ptr [rsp + 0x50], 0
0x3974:	setne	dl
0x3977:	and	al, dl
0x3979:	je	0x439c


0x3a87:	mov	rdi, qword ptr [rsp + 0x10]
0x3a8c:	mov	byte ptr [rsp + 0x40], r8b
0x3a91:	mov	byte ptr [rsp + 0x38], r10b
0x3a96:	mov	qword ptr [rsp + 0x30], r9
0x3a9b:	call	0x19d0


0x3ab4:	lea	rax, [rsp + 0x9c]
0x3abc:	xor	ecx, ecx
0x3abe:	mov	byte ptr [rsp + 0x7e], bl
0x3ac2:	mov	byte ptr [rsp + 0x7d], r8b
0x3ac7:	mov	rbx, rcx
0x3aca:	mov	qword ptr [rsp + 0x88], r9
0x3ad2:	mov	qword ptr [rsp + 0x38], rax
0x3ad7:	mov	byte ptr [rsp + 0x7f], r10b
0x3adc:	mov	qword ptr [rsp + 0x80], r15
0x3ae4:	mov	qword ptr [rsp + 0x40], r14
0x3ae9:	mov	qword ptr [rsp + 0x70], r13
0x3aee:	mov	qword ptr [rsp + 0x30], r11
0x3af3:	mov	rax, qword ptr [rsp + 0x10]
0x3af8:	lea	r14, [rbp + rbx]
0x3afd:	mov	rdx, qword ptr [rsp + 0x30]
0x3b02:	mov	rcx, qword ptr [rsp + 0x28]
0x3b07:	mov	rdi, qword ptr [rsp + 0x38]
0x3b0c:	lea	r13, [rax + r14]
0x3b10:	sub	rdx, r14
0x3b13:	mov	rsi, r13
0x3b16:	call	0x5f40


0x3308:	mov	byte ptr [rsp + 0x38], r8b
0x330d:	mov	byte ptr [rsp + 0x30], r10b
0x3312:	mov	qword ptr [rsp + 0x28], r9
0x3317:	call	0x19d0


0x333e:	mov	rdx, qword ptr [rsp + 0x18]
0x3343:	mov	rsi, qword ptr [rsp + 0x48]
0x3348:	mov	rdi, r9
0x334b:	mov	qword ptr [rsp + 0x40], r11
0x3350:	mov	byte ptr [rsp + 0x38], r8b
0x3355:	mov	qword ptr [rsp + 0x30], r9
0x335a:	call	0x1a80


0x38f0:	xor	r10d, r10d
0x38f3:	jmp	0x3390


0x42d4:	mov	rdx, r15
0x42d7:	sub	rax, r15
0x42da:	cmp	r13, rdx
0x42dd:	jbe	0x42e3


0x439c:	movzx	eax, byte ptr [rsp + 0x7c]
0x43a1:	jmp	0x42bc


0x397f:	mov	r13, qword ptr [rsp + 0x50]
0x3984:	lea	rbx, [rip + 0x1153a]
0x398b:	mov	byte ptr [r14], 0x27
0x398f:	mov	dword ptr [rsp + 8], 2
0x3997:	mov	r15d, 1
0x399d:	mov	qword ptr [rsp + 0x18], 1
0x39a6:	mov	byte ptr [rsp + 0xf], 0
0x39ab:	mov	qword ptr [rsp + 0x48], rbx
0x39b0:	mov	byte ptr [rsp + 0x7c], al
0x39b4:	jmp	0x3293


0x42e3:	add	rdx, 1
0x42e7:	movzx	ecx, byte ptr [rax + rdx]
0x42eb:	test	cl, cl
0x42ed:	jne	0x42da


0x42df:	mov	byte ptr [r14 + rdx], cl
0x42e3:	add	rdx, 1
0x42e7:	movzx	ecx, byte ptr [rax + rdx]
0x42eb:	test	cl, cl
0x42ed:	jne	0x42da


0x3293:	xor	r11d, r11d
0x3296:	mov	rax, rbp
0x3299:	mov	r8d, r12d
0x329c:	mov	rbp, r11
0x329f:	mov	r11, rax
0x32a2:	nop	word ptr [rax + rax]
0x32a8:	cmp	r11, rbp
0x32ab:	setne	r12b
0x32af:	cmp	r11, -1
0x32b3:	jne	0x32c2


0x42ef:	mov	r15, rdx
0x42f2:	cmp	r13, r15
0x42f5:	jbe	0x3d99


0x42da:	cmp	r13, rdx
0x42dd:	jbe	0x42e3


0x335f:	test	eax, eax
0x3361:	mov	r9, qword ptr [rsp + 0x30]
0x3366:	movzx	r8d, byte ptr [rsp + 0x38]
0x336c:	mov	r11, qword ptr [rsp + 0x40]
0x3371:	jne	0x38f0


0x3377:	cmp	byte ptr [rsp + 0xf], 0
0x337c:	movzx	r10d, byte ptr [rsp + 0x28]
0x3382:	jne	0x4305


0x4305:	cmp	dword ptr [rsp + 8], 2
0x430a:	movzx	ebx, byte ptr [rsp + 0xf]
0x430f:	mov	rbp, r11
0x4312:	sete	al
0x4315:	mov	byte ptr [rsp + 0xd], bl
0x4319:	jmp	0x3d49


0x3b1b:	test	rax, rax
0x3b1e:	mov	r15, rax
0x3b21:	je	0x3b71


0x3b71:	mov	edx, r12d
0x3b74:	mov	rdi, rbx
0x3b77:	movzx	r8d, byte ptr [rsp + 0x7d]
0x3b7d:	xor	edx, 1
0x3b80:	movzx	ebx, byte ptr [rsp + 0x7e]
0x3b85:	movzx	r10d, byte ptr [rsp + 0x7f]
0x3b8b:	and	dl, byte ptr [rsp + 0xd]
0x3b8f:	mov	r15, qword ptr [rsp + 0x80]
0x3b97:	mov	r14, qword ptr [rsp + 0x40]
0x3b9c:	mov	r13, qword ptr [rsp + 0x70]
0x3ba1:	mov	r11, qword ptr [rsp + 0x30]
0x3ba6:	cmp	rdi, 1
0x3baa:	jbe	0x41ab


0x3b23:	cmp	rax, -1
0x3b27:	je	0x4145


0x41ab:	mov	eax, edx
0x41ad:	jmp	0x3707


0x3bb0:	mov	rcx, rdi
0x3bb3:	xor	esi, esi
0x3bb5:	movzx	r9d, byte ptr [rsp + 0xf]
0x3bbb:	add	rcx, rbp
0x3bbe:	mov	rdi, qword ptr [rsp + 0x10]
0x3bc3:	jmp	0x3c7e


0x4145:	mov	rdi, rbx
0x4148:	movzx	r8d, byte ptr [rsp + 0x7d]
0x414e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x4153:	movzx	r10d, byte ptr [rsp + 0x7f]
0x4159:	mov	r15, qword ptr [rsp + 0x80]
0x4161:	xor	r12d, r12d
0x4164:	mov	r14, qword ptr [rsp + 0x40]
0x4169:	mov	r13, qword ptr [rsp + 0x70]
0x416e:	mov	r11, qword ptr [rsp + 0x30]
0x4173:	movzx	edx, byte ptr [rsp + 0xd]
0x4178:	jmp	0x3ba6


0x3b2d:	cmp	rax, -2
0x3b31:	je	0x40d1


0x3707:	test	al, al
0x3709:	jne	0x40a1


0x3c7e:	test	dl, dl
0x3c80:	jne	0x3bd0


0x3ba6:	cmp	rdi, 1
0x3baa:	jbe	0x41ab


0x40d1:	mov	r11, qword ptr [rsp + 0x30]
0x40d6:	mov	rsi, r14
0x40d9:	mov	rcx, r13
0x40dc:	mov	rax, rbx
0x40df:	mov	rdi, rbx
0x40e2:	movzx	r8d, byte ptr [rsp + 0x7d]
0x40e8:	movzx	ebx, byte ptr [rsp + 0x7e]
0x40ed:	mov	r9, qword ptr [rsp + 0x88]
0x40f5:	cmp	rsi, r11
0x40f8:	movzx	r10d, byte ptr [rsp + 0x7f]
0x40fe:	mov	r15, qword ptr [rsp + 0x80]
0x4106:	mov	r14, qword ptr [rsp + 0x40]
0x410b:	mov	r13, qword ptr [rsp + 0x70]
0x4110:	jae	0x4138


0x3b37:	cmp	dword ptr [rsp + 8], 2
0x3b3c:	sete	al
0x3b3f:	and	al, byte ptr [rsp + 0xf]
0x3b43:	jne	0x3ce0


0x370f:	cmp	dword ptr [rsp + 8], 2
0x3714:	sete	dl
0x3717:	jmp	0x33e8


0x40a1:	movzx	edx, byte ptr [rsp + 0xd]
0x40a6:	xor	r12d, r12d
0x40a9:	jmp	0x3bb0


0x3c86:	mov	eax, esi
0x3c88:	xor	eax, 1
0x3c8b:	and	eax, r8d
0x3c8e:	test	r10b, r10b
0x3c91:	je	0x3ca1


0x3bd0:	cmp	dword ptr [rsp + 8], 2
0x3bd5:	sete	al
0x3bd8:	test	r9b, r9b
0x3bdb:	jne	0x4090


0x4112:	cmp	byte ptr [rcx], 0
0x4115:	jne	0x4127


0x4138:	movzx	edx, byte ptr [rsp + 0xd]
0x413d:	xor	r12d, r12d
0x4140:	jmp	0x3ba6


0x3b49:	mov	edi, dword ptr [rsp + 0x9c]
0x3b50:	call	0x1c50


0x3ce0:	cmp	r15, 1
0x3ce4:	je	0x3b49


0x33e8:	cmp	byte ptr [rsp + 0xd], 1
0x33ed:	jne	0x3502


0x3ca1:	add	rbp, 1
0x3ca5:	cmp	rbp, rcx
0x3ca8:	jae	0x342c


0x3c93:	cmp	r13, r15
0x3c96:	jbe	0x3c9d


0x3be1:	mov	esi, r8d
0x3be4:	xor	esi, 1
0x3be7:	and	al, sil
0x3bea:	je	0x3c1b


0x4090:	movzx	ebx, byte ptr [rsp + 0xf]
0x4095:	mov	rbp, r11
0x4098:	mov	byte ptr [rsp + 0xd], bl
0x409c:	jmp	0x3d49


0x4117:	jmp	0x4138


0x4127:	add	rax, 1
0x412b:	lea	rdx, [rbp + rax]
0x4130:	cmp	r11, rdx
0x4133:	ja	0x4120


0x3cea:	mov	rdi, qword ptr [rsp + 0x10]
0x3cef:	lea	rcx, [rdi + r15]
0x3cf3:	lea	rdx, [rdi + r14 + 1]
0x3cf8:	lea	r8, [rcx + r14]
0x3cfc:	jmp	0x3d0d


0x33f3:	test	dl, dl
0x33f5:	jne	0x3502


0x3502:	cmp	byte ptr [rsp + 0xf], 0
0x3507:	jne	0x33fb


0x3cae:	test	al, al
0x3cb0:	je	0x40ae


0x342c:	test	al, al
0x342e:	je	0x3450


0x3c9d:	add	r15, 1
0x3ca1:	add	rbp, 1
0x3ca5:	cmp	rbp, rcx
0x3ca8:	jae	0x342c


0x3c98:	mov	byte ptr [r14 + r15], 0x5c
0x3c9d:	add	r15, 1
0x3ca1:	add	rbp, 1
0x3ca5:	cmp	rbp, rcx
0x3ca8:	jae	0x342c


0x3c1b:	cmp	r13, r15
0x3c1e:	jbe	0x3c25


0x3bec:	cmp	r13, r15
0x3bef:	jbe	0x3bf6


0x4135:	mov	rdi, rax
0x4138:	movzx	edx, byte ptr [rsp + 0xd]
0x413d:	xor	r12d, r12d
0x4140:	jmp	0x3ba6


0x4120:	cmp	byte ptr [r9 + rax], 0
0x4125:	je	0x4135


0x3d0d:	movzx	ecx, byte ptr [rdx]
0x3d10:	sub	ecx, 0x5b
0x3d13:	cmp	cl, 0x21
0x3d16:	ja	0x3d00


0x33fb:	mov	rsi, qword ptr [rsp + 0x20]
0x3400:	test	rsi, rsi
0x3403:	je	0x3419


0x350d:	jmp	0x3419


0x40ae:	xor	r10d, r10d
0x40b1:	jmp	0x3c6d


0x3cb6:	cmp	r13, r15
0x3cb9:	jbe	0x3cc0


0x3450:	cmp	r15, r13
0x3453:	jae	0x3459


0x3430:	cmp	r13, r15
0x3433:	jbe	0x343a


0x3c25:	lea	rax, [r15 + 1]
0x3c29:	cmp	r13, rax
0x3c2c:	jbe	0x3c3b


0x3c20:	mov	byte ptr [r14 + r15], 0x5c
0x3c25:	lea	rax, [r15 + 1]
0x3c29:	cmp	r13, rax
0x3c2c:	jbe	0x3c3b


0x3bf6:	lea	rsi, [r15 + 1]
0x3bfa:	cmp	r13, rsi
0x3bfd:	jbe	0x3c05


0x3bf1:	mov	byte ptr [r14 + r15], 0x27
0x3bf6:	lea	rsi, [r15 + 1]
0x3bfa:	cmp	r13, rsi
0x3bfd:	jbe	0x3c05


0x3d18:	mov	esi, 1
0x3d1d:	shl	rsi, cl
0x3d20:	mov	rcx, rsi
0x3d23:	movabs	rsi, 0x20000002b
0x3d2d:	test	rcx, rsi
0x3d30:	je	0x3d00


0x3d00:	add	rdx, 1
0x3d04:	cmp	r8, rdx
0x3d07:	je	0x3b49


0x3419:	test	r10b, r10b
0x341c:	jne	0x3563


0x3405:	mov	edx, ebx
0x3407:	shr	dl, 5
0x340a:	movzx	edx, dl
0x340d:	mov	edx, dword ptr [rsi + rdx*4]
0x3410:	bt	edx, ebx
0x3413:	jb	0x3563


0x3c6d:	cmp	r13, r15
0x3c70:	jbe	0x3c76


0x3cc0:	lea	rax, [r15 + 1]
0x3cc4:	cmp	r13, rax
0x3cc7:	jbe	0x3ccf


0x3cbb:	mov	byte ptr [r14 + r15], 0x27
0x3cc0:	lea	rax, [r15 + 1]
0x3cc4:	cmp	r13, rax
0x3cc7:	jbe	0x3ccf


0x3455:	mov	byte ptr [r14 + r15], bl
0x3459:	movzx	edi, byte ptr [rsp + 0xe]
0x345e:	add	r15, 1
0x3462:	mov	eax, 0
0x3467:	test	r12b, r12b
0x346a:	cmove	edi, eax
0x346d:	mov	byte ptr [rsp + 0xe], dil
0x3472:	jmp	0x32a8


0x3459:	movzx	edi, byte ptr [rsp + 0xe]
0x345e:	add	r15, 1
0x3462:	mov	eax, 0
0x3467:	test	r12b, r12b
0x346a:	cmove	edi, eax
0x346d:	mov	byte ptr [rsp + 0xe], dil
0x3472:	jmp	0x32a8


0x343a:	lea	rax, [r15 + 1]
0x343e:	cmp	r13, rax
0x3441:	jbe	0x3449


0x3435:	mov	byte ptr [r14 + r15], 0x27
0x343a:	lea	rax, [r15 + 1]
0x343e:	cmp	r13, rax
0x3441:	jbe	0x3449


0x3c3b:	lea	rax, [r15 + 2]
0x3c3f:	cmp	r13, rax
0x3c42:	jbe	0x3c54


0x3c2e:	mov	eax, ebx
0x3c30:	shr	al, 6
0x3c33:	add	eax, 0x30
0x3c36:	mov	byte ptr [r14 + r15 + 1], al
0x3c3b:	lea	rax, [r15 + 2]
0x3c3f:	cmp	r13, rax
0x3c42:	jbe	0x3c54


0x3c05:	lea	rsi, [r15 + 2]
0x3c09:	cmp	r13, rsi
0x3c0c:	jbe	0x3c14


0x3bff:	mov	byte ptr [r14 + r15 + 1], 0x24
0x3c05:	lea	rsi, [r15 + 2]
0x3c09:	cmp	r13, rsi
0x3c0c:	jbe	0x3c14


0x3d32:	mov	r14, qword ptr [rsp + 0x40]
0x3d37:	mov	r13, qword ptr [rsp + 0x70]
0x3d3c:	mov	rbp, qword ptr [rsp + 0x30]
0x3d41:	mov	dword ptr [rsp + 8], 2
0x3d49:	cmp	byte ptr [rsp + 0xd], 0
0x3d4e:	je	0x3d60


0x3422:	xor	eax, 1
0x3425:	add	rbp, 1
0x3429:	and	eax, r8d
0x342c:	test	al, al
0x342e:	je	0x3450


0x3563:	cmp	dword ptr [rsp + 8], 2
0x3568:	sete	dl
0x356b:	cmp	byte ptr [rsp + 0xf], 0
0x3570:	mov	eax, edx
0x3572:	jne	0x3dc8


0x3c76:	movzx	ebx, byte ptr [rdi + rbp]
0x3c7a:	add	r15, 1
0x3c7e:	test	dl, dl
0x3c80:	jne	0x3bd0


0x3c72:	mov	byte ptr [r14 + r15], bl
0x3c76:	movzx	ebx, byte ptr [rdi + rbp]
0x3c7a:	add	r15, 1
0x3c7e:	test	dl, dl
0x3c80:	jne	0x3bd0


0x3ccf:	add	r15, 2
0x3cd3:	xor	r10d, r10d
0x3cd6:	xor	r8d, r8d
0x3cd9:	jmp	0x3c6d


0x3cc9:	mov	byte ptr [r14 + r15 + 1], 0x27
0x3ccf:	add	r15, 2
0x3cd3:	xor	r10d, r10d
0x3cd6:	xor	r8d, r8d
0x3cd9:	jmp	0x3c6d


0x32a8:	cmp	r11, rbp
0x32ab:	setne	r12b
0x32af:	cmp	r11, -1
0x32b3:	jne	0x32c2


0x3449:	add	r15, 2
0x344d:	xor	r8d, r8d
0x3450:	cmp	r15, r13
0x3453:	jae	0x3459


0x3443:	mov	byte ptr [r14 + r15 + 1], 0x27
0x3449:	add	r15, 2
0x344d:	xor	r8d, r8d
0x3450:	cmp	r15, r13
0x3453:	jae	0x3459


0x3c54:	and	ebx, 7
0x3c57:	add	rbp, 1
0x3c5b:	add	r15, 3
0x3c5f:	add	ebx, 0x30
0x3c62:	cmp	rbp, rcx
0x3c65:	jae	0x3450


0x3c44:	mov	eax, ebx
0x3c46:	shr	al, 3
0x3c49:	and	eax, 7
0x3c4c:	add	eax, 0x30
0x3c4f:	mov	byte ptr [r14 + r15 + 2], al
0x3c54:	and	ebx, 7
0x3c57:	add	rbp, 1
0x3c5b:	add	r15, 3
0x3c5f:	add	ebx, 0x30
0x3c62:	cmp	rbp, rcx
0x3c65:	jae	0x3450


0x3c14:	add	r15, 3
0x3c18:	mov	r8d, eax
0x3c1b:	cmp	r13, r15
0x3c1e:	jbe	0x3c25


0x3c0e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x3c14:	add	r15, 3
0x3c18:	mov	r8d, eax
0x3c1b:	cmp	r13, r15
0x3c1e:	jbe	0x3c25


0x3578:	mov	eax, r8d
0x357b:	xor	eax, 1
0x357e:	and	al, dl
0x3580:	je	0x35b1


0x3dc8:	mov	rbp, r11
0x3dcb:	jmp	0x3d49


0x3c6b:	mov	esi, edx
0x3c6d:	cmp	r13, r15
0x3c70:	jbe	0x3c76


0x35b1:	cmp	r13, r15
0x35b4:	jbe	0x35bb


0x3582:	cmp	r13, r15
0x3585:	jbe	0x358c


0x35bb:	add	r15, 1
0x35bf:	add	rbp, 1
0x35c3:	jmp	0x3450


0x35b6:	mov	byte ptr [r14 + r15], 0x5c
0x35bb:	add	r15, 1
0x35bf:	add	rbp, 1
0x35c3:	jmp	0x3450


0x358c:	lea	rdx, [r15 + 1]
0x3590:	cmp	r13, rdx
0x3593:	jbe	0x359b


0x3587:	mov	byte ptr [r14 + r15], 0x27
0x358c:	lea	rdx, [r15 + 1]
0x3590:	cmp	r13, rdx
0x3593:	jbe	0x359b


0x359b:	lea	rdx, [r15 + 2]
0x359f:	cmp	r13, rdx
0x35a2:	jbe	0x35aa


0x3595:	mov	byte ptr [r14 + r15 + 1], 0x24
0x359b:	lea	rdx, [r15 + 2]
0x359f:	cmp	r13, rdx
0x35a2:	jbe	0x35aa


0x35aa:	add	r15, 3
0x35ae:	mov	r8d, eax
0x35b1:	cmp	r13, r15
0x35b4:	jbe	0x35bb


0x35a4:	mov	byte ptr [r14 + r15 + 2], 0x27
0x35aa:	add	r15, 3
0x35ae:	mov	r8d, eax
0x35b1:	cmp	r13, r15
0x35b4:	jbe	0x35bb


0x3b55:	mov	rdi, qword ptr [rsp + 0x28]
0x3b5a:	test	eax, eax
0x3b5c:	mov	eax, 0
0x3b61:	cmove	r12d, eax
0x3b65:	add	rbx, r15
0x3b68:	call	0x1c40


0x3b6d:	test	eax, eax
0x3b6f:	je	0x3af3


0x3af3:	mov	rax, qword ptr [rsp + 0x10]
0x3af8:	lea	r14, [rbp + rbx]
0x3afd:	mov	rdx, qword ptr [rsp + 0x30]
0x3b02:	mov	rcx, qword ptr [rsp + 0x28]
0x3b07:	mov	rdi, qword ptr [rsp + 0x38]
0x3b0c:	lea	r13, [rax + r14]
0x3b10:	sub	rdx, r14
0x3b13:	mov	rsi, r13
0x3b16:	call	0x5f40


0x331c:	movzx	r8d, byte ptr [rsp + 0x38]
0x3322:	movzx	r10d, byte ptr [rsp + 0x30]
0x3328:	mov	r11, rax
0x332b:	mov	r9, qword ptr [rsp + 0x28]
0x3330:	cmp	rbx, r11
0x3333:	mov	byte ptr [rsp + 0x28], r10b
0x3338:	ja	0x38f0


0x3aa0:	movzx	r8d, byte ptr [rsp + 0x40]
0x3aa6:	movzx	r10d, byte ptr [rsp + 0x38]
0x3aac:	mov	r11, rax
0x3aaf:	mov	r9, qword ptr [rsp + 0x30]
0x3ab4:	lea	rax, [rsp + 0x9c]
0x3abc:	xor	ecx, ecx
0x3abe:	mov	byte ptr [rsp + 0x7e], bl
0x3ac2:	mov	byte ptr [rsp + 0x7d], r8b
0x3ac7:	mov	rbx, rcx
0x3aca:	mov	qword ptr [rsp + 0x88], r9
0x3ad2:	mov	qword ptr [rsp + 0x38], rax
0x3ad7:	mov	byte ptr [rsp + 0x7f], r10b
0x3adc:	mov	qword ptr [rsp + 0x80], r15
0x3ae4:	mov	qword ptr [rsp + 0x40], r14
0x3ae9:	mov	qword ptr [rsp + 0x70], r13
0x3aee:	mov	qword ptr [rsp + 0x30], r11
0x3af3:	mov	rax, qword ptr [rsp + 0x10]
0x3af8:	lea	r14, [rbp + rbx]
0x3afd:	mov	rdx, qword ptr [rsp + 0x30]
0x3b02:	mov	rcx, qword ptr [rsp + 0x28]
0x3b07:	mov	rdi, qword ptr [rsp + 0x38]
0x3b0c:	lea	r13, [rax + r14]
0x3b10:	sub	rdx, r14
0x3b13:	mov	rsi, r13
0x3b16:	call	0x5f40


0x36d8:	mov	rcx, qword ptr [rax]
0x36db:	movzx	edx, bl
0x36de:	movzx	r10d, byte ptr [rsp + 0x28]
0x36e4:	movzx	r8d, byte ptr [rsp + 0x30]
0x36ea:	mov	r11, qword ptr [rsp + 0x38]
0x36ef:	mov	edi, 1
0x36f4:	movzx	eax, word ptr [rcx + rdx*2]
0x36f8:	and	ax, 0x4000
0x36fc:	setne	r12b
0x3700:	sete	al
0x3703:	and	al, byte ptr [rsp + 0xd]
0x3707:	test	al, al
0x3709:	jne	0x40a1


0x33b0:	xor	r10d, r10d
0x33b3:	cmp	r11, 1
0x33b7:	setne	al
0x33ba:	cmp	r11, -1
0x33be:	jne	0x33cc


0x33c0:	mov	rax, qword ptr [rsp + 0x10]
0x33c5:	cmp	byte ptr [rax + 1], 0
0x33c9:	setne	al
0x33cc:	cmp	dword ptr [rsp + 8], 2
0x33d1:	sete	dl
0x33d4:	test	al, al
0x33d6:	je	0x3628


0x33cc:	cmp	dword ptr [rsp + 8], 2
0x33d1:	sete	dl
0x33d4:	test	al, al
0x33d6:	je	0x3628


0x3628:	test	rbp, rbp
0x362b:	jne	0x33dc


0x33dc:	xor	r12d, r12d
0x33df:	xor	eax, eax
0x33e1:	nop	dword ptr [rax]
0x33e8:	cmp	byte ptr [rsp + 0xd], 1
0x33ed:	jne	0x3502


0x3631:	movzx	eax, byte ptr [rsp + 0xf]
0x3636:	and	al, dl
0x3638:	je	0x33e8


0x363e:	mov	rbp, r11
0x3641:	mov	dword ptr [rsp + 8], 2
0x3649:	jmp	0x3d49


0x3a48:	cmp	byte ptr [rsp + 0xf], 0
0x3a4d:	jne	0x4270


0x3490:	cmp	eax, 5
0x3493:	je	0x3a08


0x3a53:	xor	r12d, r12d
0x3a56:	xor	eax, eax
0x3a58:	mov	ebx, 0x3f
0x3a5d:	jmp	0x3419


0x4270:	mov	rbp, r11
0x4273:	movzx	eax, byte ptr [rsp + 0xf]
0x4278:	jmp	0x3d49


0x3a08:	test	byte ptr [rsp + 0x78], 4
0x3a0d:	je	0x3a30


0x3499:	cmp	eax, 2
0x349c:	mov	ebx, 0x3f
0x34a1:	sete	dl
0x34a4:	xor	r12d, r12d
0x34a7:	xor	eax, eax
0x34a9:	jmp	0x33e8


0x3a30:	xor	edx, edx
0x3a32:	xor	r12d, r12d
0x3a35:	xor	eax, eax
0x3a37:	mov	ebx, 0x3f
0x3a3c:	jmp	0x33e8


0x3a0f:	lea	rcx, [rbp + 2]
0x3a13:	cmp	rcx, r11
0x3a16:	jae	0x3a30


0x3a18:	mov	rax, qword ptr [rsp + 0x10]
0x3a1d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x3a22:	je	0x41b2


0x41b2:	movzx	ebx, byte ptr [rax + rcx]
0x41b6:	cmp	bl, 0x3e
0x41b9:	ja	0x3a30


0x41bf:	movabs	rax, 0x7000a38200000000
0x41c9:	bt	rax, rbx
0x41cd:	jae	0x3a30


0x41d3:	cmp	byte ptr [rsp + 0xf], 0
0x41d8:	jne	0x43c2


0x41de:	cmp	r13, r15
0x41e1:	jbe	0x41e8


0x43c2:	mov	rbp, r11
0x43c5:	jmp	0x3d60


0x41e8:	lea	rax, [r15 + 1]
0x41ec:	cmp	r13, rax
0x41ef:	jbe	0x41f7


0x41e3:	mov	byte ptr [r14 + r15], 0x3f
0x41e8:	lea	rax, [r15 + 1]
0x41ec:	cmp	r13, rax
0x41ef:	jbe	0x41f7


0x41f7:	lea	rax, [r15 + 2]
0x41fb:	cmp	r13, rax
0x41fe:	jbe	0x4206


0x41f1:	mov	byte ptr [r14 + r15 + 1], 0x22
0x41f7:	lea	rax, [r15 + 2]
0x41fb:	cmp	r13, rax
0x41fe:	jbe	0x4206


0x4206:	lea	rax, [r15 + 3]
0x420a:	cmp	r13, rax
0x420d:	jbe	0x4215


0x4200:	mov	byte ptr [r14 + r15 + 2], 0x22
0x4206:	lea	rax, [r15 + 3]
0x420a:	cmp	r13, rax
0x420d:	jbe	0x4215


0x4215:	add	r15, 4
0x4219:	xor	edx, edx
0x421b:	xor	r12d, r12d
0x421e:	xor	eax, eax
0x4220:	mov	rbp, rcx
0x4223:	jmp	0x33e8


0x420f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x4215:	add	r15, 4
0x4219:	xor	edx, edx
0x421b:	xor	r12d, r12d
0x421e:	xor	eax, eax
0x4220:	mov	rbp, rcx
0x4223:	jmp	0x33e8


0x39c0:	cmp	byte ptr [rsp + 0xf], 0
0x39c5:	jne	0x4270


0x34be:	mov	byte ptr [rsp + 0x7c], r12b
0x34c3:	xor	edx, edx
0x34c5:	xor	eax, eax
0x34c7:	mov	ebx, 0x27
0x34cc:	jmp	0x33e8


0x39cb:	test	r13, r13
0x39ce:	je	0x3dd0


0x3dd0:	cmp	r13, r15
0x3dd3:	jbe	0x3dda


0x39d4:	xor	edx, edx
0x39d6:	cmp	qword ptr [rsp + 0x50], 0
0x39dc:	jne	0x3dd0


0x3dda:	lea	rax, [r15 + 1]
0x3dde:	cmp	r13, rax
0x3de1:	jbe	0x3de9


0x3dd5:	mov	byte ptr [r14 + r15], 0x27
0x3dda:	lea	rax, [r15 + 1]
0x3dde:	cmp	r13, rax
0x3de1:	jbe	0x3de9


0x39e2:	mov	qword ptr [rsp + 0x50], r13
0x39e7:	add	r15, 3
0x39eb:	xor	eax, eax
0x39ed:	mov	byte ptr [rsp + 0x7c], r12b
0x39f2:	xor	r8d, r8d
0x39f5:	mov	r13, rdx
0x39f8:	mov	ebx, 0x27
0x39fd:	jmp	0x3419


0x3de9:	lea	rax, [r15 + 2]
0x3ded:	cmp	r13, rax
0x3df0:	jbe	0x43e2


0x3de3:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x3de9:	lea	rax, [r15 + 2]
0x3ded:	cmp	r13, rax
0x3df0:	jbe	0x43e2


0x43e2:	mov	rdx, r13
0x43e5:	mov	r13, qword ptr [rsp + 0x50]
0x43ea:	jmp	0x39e2


0x3df6:	mov	rdx, r13
0x3df9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x3dff:	mov	r13, qword ptr [rsp + 0x50]
0x3e04:	jmp	0x39e2


0x34f4:	cmp	byte ptr [rsp + 0xd], 0
0x34f9:	jne	0x3560


0x34fb:	mov	ebx, edx
0x34fd:	xor	r12d, r12d
0x3500:	xor	eax, eax
0x3502:	cmp	byte ptr [rsp + 0xf], 0
0x3507:	jne	0x33fb


0x3560:	xor	r12d, r12d
0x3563:	cmp	dword ptr [rsp + 8], 2
0x3568:	sete	dl
0x356b:	cmp	byte ptr [rsp + 0xf], 0
0x3570:	mov	eax, edx
0x3572:	jne	0x3dc8


0x3900:	cmp	byte ptr [rsp + 0xf], 0
0x3905:	jne	0x4270


0x3533:	cmp	byte ptr [rsp + 0xd], 0
0x3538:	je	0x3750


0x390b:	add	rbp, 1
0x390f:	mov	eax, r8d
0x3912:	xor	r12d, r12d
0x3915:	mov	ebx, 0x5c
0x391a:	jmp	0x342c


0x3750:	mov	edx, 0x5c
0x3755:	mov	ebx, 0x5c
0x375a:	jmp	0x34f4


0x353e:	cmp	byte ptr [rsp + 0xf], 0
0x3543:	je	0x3750


0x3549:	cmp	qword ptr [rsp + 0x18], 0
0x354f:	jne	0x390b


0x3555:	mov	ebx, 0x5c
0x355a:	nop	word ptr [rax + rax]
0x3560:	xor	r12d, r12d
0x3563:	cmp	dword ptr [rsp + 8], 2
0x3568:	sete	dl
0x356b:	cmp	byte ptr [rsp + 0xf], 0
0x3570:	mov	eax, edx
0x3572:	jne	0x3dc8


0x35db:	xor	edx, edx
0x35dd:	test	byte ptr [rsp + 0x78], 1
0x35e2:	je	0x34fb


0x37a3:	cmp	dword ptr [rsp + 8], 2
0x37a8:	sete	dl
0x37ab:	cmp	byte ptr [rsp + 0xf], 0
0x37b0:	jne	0x434a


0x35e8:	add	rbp, 1
0x35ec:	jmp	0x32a8


0x37b6:	mov	eax, r8d
0x37b9:	mov	rcx, r15
0x37bc:	xor	eax, 1
0x37bf:	and	al, dl
0x37c1:	je	0x37f0


0x434a:	movzx	ebx, byte ptr [rsp + 0xf]
0x434f:	mov	rbp, r11
0x4352:	mov	eax, edx
0x4354:	mov	byte ptr [rsp + 0xd], bl
0x4358:	jmp	0x3d49


0x37f0:	cmp	r13, rcx
0x37f3:	jbe	0x37fa


0x37c3:	cmp	r13, r15
0x37c6:	jbe	0x37cd


0x37fa:	cmp	dword ptr [rsp + 8], 2
0x37ff:	lea	r15, [rcx + 1]
0x3803:	je	0x3e09


0x37f5:	mov	byte ptr [r14 + rcx], 0x5c
0x37fa:	cmp	dword ptr [rsp + 8], 2
0x37ff:	lea	r15, [rcx + 1]
0x3803:	je	0x3e09


0x37cd:	lea	rcx, [r15 + 1]
0x37d1:	cmp	r13, rcx
0x37d4:	jbe	0x37dc


0x37c8:	mov	byte ptr [r14 + r15], 0x27
0x37cd:	lea	rcx, [r15 + 1]
0x37d1:	cmp	r13, rcx
0x37d4:	jbe	0x37dc


0x3e09:	mov	eax, r12d
0x3e0c:	mov	ebx, 0x30
0x3e11:	xor	r12d, r12d
0x3e14:	jmp	0x3419


0x3809:	lea	rax, [rbp + 1]
0x380d:	cmp	rax, r11
0x3810:	jae	0x382b


0x37dc:	lea	rcx, [r15 + 2]
0x37e0:	cmp	r13, rcx
0x37e3:	ja	0x3e19


0x37d6:	mov	byte ptr [r14 + r15 + 1], 0x24
0x37dc:	lea	rcx, [r15 + 2]
0x37e0:	cmp	r13, rcx
0x37e3:	ja	0x3e19


0x3812:	mov	rax, qword ptr [rsp + 0x10]
0x3817:	movzx	eax, byte ptr [rax + rbp + 1]
0x381c:	mov	byte ptr [rsp + 0x28], al
0x3820:	sub	eax, 0x30
0x3823:	cmp	al, 9
0x3825:	jbe	0x4059


0x382b:	mov	eax, r12d
0x382e:	mov	ebx, 0x30
0x3833:	xor	r12d, r12d
0x3836:	jmp	0x33e8


0x37e9:	lea	rcx, [r15 + 3]
0x37ed:	mov	r8d, eax
0x37f0:	cmp	r13, rcx
0x37f3:	jbe	0x37fa


0x3e19:	mov	byte ptr [r14 + r15 + 2], 0x27
0x3e1f:	jmp	0x37e9


0x4059:	cmp	r13, r15
0x405c:	jbe	0x4063


0x4063:	lea	rax, [rcx + 2]
0x4067:	cmp	r13, rax
0x406a:	jbe	0x4072


0x405e:	mov	byte ptr [r14 + r15], 0x30
0x4063:	lea	rax, [rcx + 2]
0x4067:	cmp	r13, rax
0x406a:	jbe	0x4072


0x4072:	mov	eax, r12d
0x4075:	lea	r15, [rcx + 3]
0x4079:	xor	r12d, r12d
0x407c:	mov	ebx, 0x30
0x4081:	jmp	0x33e8


0x406c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x4072:	mov	eax, r12d
0x4075:	lea	r15, [rcx + 3]
0x4079:	xor	r12d, r12d
0x407c:	mov	ebx, 0x30
0x4081:	jmp	0x33e8


0x34e2:	cmp	dword ptr [rsp + 8], 2
0x34e7:	sete	al
0x34ea:	and	al, byte ptr [rsp + 0xf]
0x34ee:	jne	0x363e


0x38a0:	mov	edx, 0xd
0x38a5:	xor	r10d, r10d
0x38a8:	mov	ebx, 0x72
0x38ad:	jmp	0x34e2


0x3e24:	test	ebx, ebx
0x3e26:	jne	0x3253


0x3e2c:	mov	byte ptr [rsp + 0xd], 1
0x3e31:	test	r13, r13
0x3e34:	jne	0x43ca


0x3e3a:	lea	rax, [rip + 0x11084]
0x3e41:	mov	qword ptr [rsp + 0x50], 0
0x3e4a:	mov	byte ptr [rsp + 0xe], 1
0x3e4f:	mov	byte ptr [rsp + 0x7c], 0
0x3e54:	xor	r12d, r12d
0x3e57:	mov	byte ptr [rsp + 0xf], 0
0x3e5c:	mov	qword ptr [rsp + 0x18], 1
0x3e65:	mov	qword ptr [rsp + 0x48], rax
0x3e6a:	mov	r15d, 1
0x3e70:	mov	dword ptr [rsp + 8], 2
0x3e78:	jmp	0x3293


0x43ca:	mov	byte ptr [rsp + 0xe], 1
0x43cf:	xor	eax, eax
0x43d1:	xor	r12d, r12d
0x43d4:	mov	qword ptr [rsp + 0x50], 0
0x43dd:	jmp	0x3984


0x3984:	lea	rbx, [rip + 0x1153a]
0x398b:	mov	byte ptr [r14], 0x27
0x398f:	mov	dword ptr [rsp + 8], 2
0x3997:	mov	r15d, 1
0x399d:	mov	qword ptr [rsp + 0x18], 1
0x39a6:	mov	byte ptr [rsp + 0xf], 0
0x39ab:	mov	qword ptr [rsp + 0x48], rbx
0x39b0:	mov	byte ptr [rsp + 0x7c], al
0x39b4:	jmp	0x3293


0x3e88:	test	r13, r13
0x3e8b:	je	0x40b6


0x427d:	lea	rax, [rip + 0x10c3f]
0x4284:	mov	byte ptr [rsp + 0xe], 1
0x4289:	mov	byte ptr [rsp + 0x7c], 0
0x428e:	xor	r12d, r12d
0x4291:	mov	qword ptr [rsp + 0x50], 0
0x429a:	mov	byte ptr [rsp + 0xf], 1
0x429f:	mov	byte ptr [rsp + 0xd], 1
0x42a4:	mov	qword ptr [rsp + 0x18], 1
0x42ad:	xor	r15d, r15d
0x42b0:	mov	qword ptr [rsp + 0x48], rax
0x42b5:	jmp	0x3293


0x40b6:	mov	qword ptr [rsp + 0x50], 0
0x40bf:	mov	byte ptr [rsp + 0xe], 1
0x40c4:	xor	r12d, r12d
0x40c7:	mov	byte ptr [rsp + 0x7c], 0
0x40cc:	jmp	0x3eab


0x3e91:	mov	byte ptr [r14], 0x22
0x3e95:	mov	byte ptr [rsp + 0xe], 1
0x3e9a:	xor	r12d, r12d
0x3e9d:	mov	byte ptr [rsp + 0x7c], 0
0x3ea2:	mov	qword ptr [rsp + 0x50], 0
0x3eab:	lea	rax, [rip + 0x11011]
0x3eb2:	mov	byte ptr [rsp + 0xf], 0
0x3eb7:	mov	byte ptr [rsp + 0xd], 1
0x3ebc:	mov	qword ptr [rsp + 0x18], 1
0x3ec5:	mov	r15d, 1
0x3ecb:	mov	qword ptr [rsp + 0x48], rax
0x3ed0:	jmp	0x3293


0x3eab:	lea	rax, [rip + 0x11011]
0x3eb2:	mov	byte ptr [rsp + 0xf], 0
0x3eb7:	mov	byte ptr [rsp + 0xd], 1
0x3ebc:	mov	qword ptr [rsp + 0x18], 1
0x3ec5:	mov	r15d, 1
0x3ecb:	mov	qword ptr [rsp + 0x48], rax
0x3ed0:	jmp	0x3293


0x3ed5:	lea	rax, [rip + 0x10fe7]
0x3edc:	mov	byte ptr [rsp + 0xe], 1
0x3ee1:	mov	byte ptr [rsp + 0x7c], 0
0x3ee6:	xor	r12d, r12d
0x3ee9:	mov	qword ptr [rsp + 0x50], 0
0x3ef2:	mov	byte ptr [rsp + 0xf], 1
0x3ef7:	mov	byte ptr [rsp + 0xd], 1
0x3efc:	mov	qword ptr [rsp + 0x18], 1
0x3f05:	xor	r15d, r15d
0x3f08:	mov	qword ptr [rsp + 0x48], rax
0x3f0d:	mov	dword ptr [rsp + 8], 5
0x3f15:	jmp	0x3293


0x3f1a:	mov	byte ptr [rsp + 0xe], 1
0x3f1f:	mov	byte ptr [rsp + 0x7c], 0
0x3f24:	xor	r12d, r12d
0x3f27:	mov	qword ptr [rsp + 0x50], 0
0x3f30:	mov	byte ptr [rsp + 0xf], 0
0x3f35:	xor	r15d, r15d
0x3f38:	mov	byte ptr [rsp + 0xd], 1
0x3f3d:	mov	qword ptr [rsp + 0x18], 0
0x3f46:	mov	qword ptr [rsp + 0x48], 0
0x3f4f:	jmp	0x3293


0x3f54:	cmp	dword ptr [rsp + 8], 0xa
0x3f59:	je	0x3fb1


0x3fb1:	xor	r15d, r15d
0x3fb4:	test	ebx, ebx
0x3fb6:	je	0x417d


0x3f5b:	lea	rsi, [rip + 0x10f65]
0x3f62:	xor	edi, edi
0x3f64:	mov	edx, 5
0x3f69:	call	0x19b0


0x417d:	mov	rdx, qword ptr [rsp + 0x68]
0x4182:	movzx	eax, byte ptr [rdx]
0x4185:	test	al, al
0x4187:	je	0x3fbc


0x3fbc:	test	ebx, ebx
0x3fbe:	mov	rbx, qword ptr [rsp + 0x60]
0x3fc3:	setne	byte ptr [rsp + 0xf]
0x3fc8:	xor	r12d, r12d
0x3fcb:	mov	rdi, rbx
0x3fce:	call	0x19d0


0x4199:	add	r15, 1
0x419d:	movzx	eax, byte ptr [rdx + r15]
0x41a2:	test	al, al
0x41a4:	jne	0x4190


0x4195:	mov	byte ptr [r14 + r15], al
0x4199:	add	r15, 1
0x419d:	movzx	eax, byte ptr [rdx + r15]
0x41a2:	test	al, al
0x41a4:	jne	0x4190


0x41a6:	jmp	0x3fbc


0x4190:	cmp	r13, r15
0x4193:	jbe	0x4199


0x3fd3:	mov	qword ptr [rsp + 0x48], rbx
0x3fd8:	mov	qword ptr [rsp + 0x18], rax
0x3fdd:	mov	byte ptr [rsp + 0xe], 1
0x3fe2:	mov	byte ptr [rsp + 0x7c], 0
0x3fe7:	mov	qword ptr [rsp + 0x50], 0
0x3ff0:	mov	byte ptr [rsp + 0xd], 1
0x3ff5:	jmp	0x3293


0x3f6e:	mov	rcx, rax
0x3f71:	mov	qword ptr [rsp + 0x68], rax
0x3f76:	lea	rax, [rip + 0x10f4a]
0x3f7d:	cmp	rcx, rax
0x3f80:	je	0x431e


0x431e:	mov	esi, dword ptr [rsp + 8]
0x4322:	mov	rdi, rcx
0x4325:	call	0x30d0


0x3f86:	lea	rsi, [rip + 0x10f38]
0x3f8d:	xor	edi, edi
0x3f8f:	mov	edx, 5
0x3f94:	call	0x19b0


0x3f99:	mov	rcx, rax
0x3f9c:	mov	qword ptr [rsp + 0x60], rax
0x3fa1:	lea	rax, [rip + 0x10f1d]
0x3fa8:	cmp	rcx, rax
0x3fab:	je	0x4334


0x4334:	mov	esi, dword ptr [rsp + 8]
0x4338:	mov	rdi, rcx
0x433b:	call	0x30d0


0x4340:	mov	qword ptr [rsp + 0x60], rax
0x4345:	jmp	0x3fb1


0x432a:	mov	qword ptr [rsp + 0x68], rax
0x432f:	jmp	0x3f86


0x3ffa:	mov	byte ptr [rsp + 0xe], 1
0x3fff:	mov	byte ptr [rsp + 0x7c], 0
0x4004:	xor	r12d, r12d
0x4007:	mov	qword ptr [rsp + 0x50], 0
0x4010:	mov	byte ptr [rsp + 0xf], 0
0x4015:	xor	r15d, r15d
0x4018:	mov	byte ptr [rsp + 0xd], 0
0x401d:	mov	qword ptr [rsp + 0x18], 0
0x4026:	mov	qword ptr [rsp + 0x48], 0
0x402f:	jmp	0x3293


0x4034:	mov	byte ptr [rsp + 0xe], 1
0x4039:	mov	byte ptr [rsp + 0x7c], 0
0x403e:	xor	r12d, r12d
0x4041:	mov	qword ptr [rsp + 0x50], 0
0x404a:	mov	byte ptr [rsp + 0xf], 1
0x404f:	mov	byte ptr [rsp + 0xd], 1
0x4054:	jmp	0x3273


0x3273:	lea	rax, [rip + 0x11c4b]
0x327a:	mov	qword ptr [rsp + 0x18], 1
0x3283:	xor	r15d, r15d
0x3286:	mov	dword ptr [rsp + 8], 2
0x328e:	mov	qword ptr [rsp + 0x48], rax
0x3293:	xor	r11d, r11d
0x3296:	mov	rax, rbp
0x3299:	mov	r8d, r12d
0x329c:	mov	rbp, r11
0x329f:	mov	r11, rax
0x32a2:	nop	word ptr [rax + rax]
0x32a8:	cmp	r11, rbp
0x32ab:	setne	r12b
0x32af:	cmp	r11, -1
0x32b3:	jne	0x32c2


0x4228:	test	ebx, ebx
0x422a:	je	0x43b8


0x43b8:	mov	byte ptr [rsp + 0xd], 0
0x43bd:	jmp	0x3e31


0x4230:	lea	rax, [rip + 0x10c8e]
0x4237:	mov	byte ptr [rsp + 0xe], 1
0x423c:	mov	byte ptr [rsp + 0x7c], 0
0x4241:	xor	r12d, r12d
0x4244:	mov	qword ptr [rsp + 0x50], 0
0x424d:	mov	byte ptr [rsp + 0xf], 1
0x4252:	mov	byte ptr [rsp + 0xd], 0
0x4257:	mov	qword ptr [rsp + 0x18], 1
0x4260:	xor	r15d, r15d
0x4263:	mov	qword ptr [rsp + 0x48], rax
0x4268:	jmp	0x3293


0x3e31:	test	r13, r13
0x3e34:	jne	0x43ca


0x43f4:	nop	
0x43f6:	nop	word ptr cs:[rax + rax]


0x45ab:	nop	dword ptr [rax + rax]


0x45e6:	nop	word ptr cs:[rax + rax]


0x4601:	nop	dword ptr [rax + rax]
0x4606:	nop	word ptr cs:[rax + rax]


0x4621:	nop	dword ptr [rax + rax]
0x4626:	nop	word ptr cs:[rax + rax]


0x4665:	nop	
0x4666:	nop	word ptr cs:[rax + rax]


0x4685:	nop	
0x4686:	nop	word ptr cs:[rax + rax]


0x4734:	nop	
0x4736:	nop	word ptr cs:[rax + rax]


0x4823:	nop	dword ptr [rax]
0x4826:	nop	word ptr cs:[rax + rax]


0x483a:	nop	word ptr [rax + rax]


0x48d3:	nop	dword ptr [rax]
0x48d6:	nop	word ptr cs:[rax + rax]


0x48f3:	nop	dword ptr [rax]
0x48f6:	nop	word ptr cs:[rax + rax]


0x490c:	nop	dword ptr [rax]


0x4928:	nop	dword ptr [rax + rax]


0x4944:	nop	
0x4946:	nop	word ptr cs:[rax + rax]


0x49de:	nop	


0x4a6a:	nop	word ptr [rax + rax]


0x4a7c:	nop	dword ptr [rax]


0x4a8f:	nop	


0x4b28:	nop	dword ptr [rax + rax]


0x4b51:	nop	dword ptr [rax + rax]
0x4b56:	nop	word ptr cs:[rax + rax]


0x4b6a:	nop	word ptr [rax + rax]


0x4bfe:	nop	


0x4c91:	nop	dword ptr [rax + rax]
0x4c96:	nop	word ptr cs:[rax + rax]


0x4cac:	nop	dword ptr [rax]


0x4cc7:	nop	word ptr [rax + rax]


0x4ce3:	nop	dword ptr [rax]
0x4ce6:	nop	word ptr cs:[rax + rax]


0x4cfc:	nop	dword ptr [rax]


0x4d14:	nop	
0x4d16:	nop	word ptr cs:[rax + rax]


0x4d33:	nop	dword ptr [rax]
0x4d36:	nop	word ptr cs:[rax + rax]


0x4d58:	nop	dword ptr [rax + rax]


0x5177:	nop	word ptr [rax + rax]


0x5218:	nop	dword ptr [rax + rax]


0x52f5:	nop	
0x52f6:	nop	word ptr cs:[rax + rax]


0x539a:	nop	word ptr [rax + rax]


0x53c4:	nop	
0x53c6:	nop	word ptr cs:[rax + rax]


0x53d2:	nop	dword ptr [rax]
0x53d6:	nop	word ptr cs:[rax + rax]


0x5416:	nop	word ptr cs:[rax + rax]


0x5444:	nop	
0x5446:	nop	word ptr cs:[rax + rax]


0x54d2:	nop	dword ptr [rax]
0x54d6:	nop	word ptr cs:[rax + rax]


0x552a:	nop	word ptr [rax + rax]


0x5547:	nop	word ptr [rax + rax]


0x557e:	nop	


0x55a8:	nop	dword ptr [rax + rax]


0x55c3:	nop	word ptr cs:[rax + rax]
0x55cd:	nop	dword ptr [rax]


0x5605:	nop	word ptr cs:[rax + rax]
0x560f:	nop	


0x5721:	nop	dword ptr [rax + rax]
0x5726:	nop	word ptr cs:[rax + rax]


0x5751:	nop	word ptr cs:[rax + rax]
0x575b:	nop	dword ptr [rax + rax]


0x5910:	movabs	r8, 0x8000000000000000
0x591a:	movsxd	rsi, eax
0x591d:	mov	rax, r8
0x5920:	cqo	
0x5922:	idiv	rsi
0x5925:	cmp	rbp, rax
0x5928:	mov	r9, rax
0x592b:	jl	0x5dd5


0x5dd5:	mov	eax, 1
0x5dda:	mov	rbp, r8
0x5ddd:	jmp	0x5968


0x5931:	movabs	r10, 0x7fffffffffffffff
0x593b:	mov	rax, r10
0x593e:	cqo	
0x5940:	idiv	rsi
0x5943:	cmp	rbp, rax
0x5946:	jg	0x5de2


0x5968:	or	r12d, eax
0x596b:	nop	dword ptr [rax + rax]
0x5970:	movsxd	rax, edi
0x5973:	add	rcx, rax
0x5976:	mov	eax, r12d
0x5979:	or	eax, 2
0x597c:	mov	qword ptr [rbx], rcx
0x597f:	cmp	byte ptr [rcx], 0
0x5982:	cmovne	r12d, eax
0x5986:	jmp	0x57e6


0x594c:	imul	rbp, rsi
0x5950:	cmp	r9, rbp
0x5953:	jg	0x5dd5


0x5de2:	mov	eax, 1
0x5de7:	mov	rbp, r10
0x5dea:	jmp	0x5968


0x5959:	cmp	rax, rbp
0x595c:	jl	0x5de2


0x5962:	imul	rbp, rsi
0x5966:	xor	eax, eax
0x5968:	or	r12d, eax
0x596b:	nop	dword ptr [rax + rax]
0x5970:	movsxd	rax, edi
0x5973:	add	rcx, rax
0x5976:	mov	eax, r12d
0x5979:	or	eax, 2
0x597c:	mov	qword ptr [rbx], rcx
0x597f:	cmp	byte ptr [rcx], 0
0x5982:	cmovne	r12d, eax
0x5986:	jmp	0x57e6


0x5cd0:	mov	r12d, 1
0x5cd6:	movabs	rbp, 0x8000000000000000
0x5ce0:	jmp	0x5970


0x59a3:	movabs	rax, 0x3fffffffffffffff
0x59ad:	cmp	rbp, rax
0x59b0:	jg	0x5d90


0x5970:	movsxd	rax, edi
0x5973:	add	rcx, rax
0x5976:	mov	eax, r12d
0x5979:	or	eax, 2
0x597c:	mov	qword ptr [rbx], rcx
0x597f:	cmp	byte ptr [rcx], 0
0x5982:	cmovne	r12d, eax
0x5986:	jmp	0x57e6


0x59b6:	add	rbp, rbp
0x59b9:	jmp	0x5970


0x5d90:	mov	r12d, 1
0x5d96:	movabs	rbp, 0x7fffffffffffffff
0x5da0:	jmp	0x5970


0x59d3:	movabs	rax, 0x3fffffffffffff
0x59dd:	cmp	rbp, rax
0x59e0:	jg	0x5d90


0x59e6:	shl	rbp, 9
0x59ea:	jmp	0x5970


0x5a3f:	cmp	r10, rbp
0x5a42:	jle	0x5a20


0x5a20:	mov	rax, r9
0x5a23:	cqo	
0x5a25:	idiv	rsi
0x5a28:	cmp	rax, rbp
0x5a2b:	jl	0x5d18


0x5a44:	mov	r11d, 1
0x5a4a:	movabs	rbp, 0x8000000000000000
0x5a54:	jmp	0x5a35


0x5d18:	mov	r11d, 1
0x5d1e:	movabs	rbp, 0x7fffffffffffffff
0x5d28:	jmp	0x5a35


0x5a31:	imul	rbp, rsi
0x5a35:	sub	r8d, 1
0x5a39:	je	0x5b60


0x5a35:	sub	r8d, 1
0x5a39:	je	0x5b60


0x5b60:	or	r12d, r11d
0x5b63:	jmp	0x5970


0x5aaf:	cmp	r10, rbp
0x5ab2:	jle	0x5a90


0x5a90:	mov	rax, r9
0x5a93:	cqo	
0x5a95:	idiv	rsi
0x5a98:	cmp	rax, rbp
0x5a9b:	jl	0x5ce8


0x5ab4:	mov	r11d, 1
0x5aba:	movabs	rbp, 0x8000000000000000
0x5ac4:	jmp	0x5aa5


0x5ce8:	mov	r11d, 1
0x5cee:	movabs	rbp, 0x7fffffffffffffff
0x5cf8:	jmp	0x5aa5


0x5aa1:	imul	rbp, rsi
0x5aa5:	sub	r8d, 1
0x5aa9:	je	0x5b60


0x5aa5:	sub	r8d, 1
0x5aa9:	je	0x5b60


0x5aee:	sub	r8, 1
0x5af2:	mov	rax, r8
0x5af5:	cqo	
0x5af7:	idiv	rsi
0x5afa:	cmp	rbp, rax
0x5afd:	jg	0x5d90


0x5b03:	imul	rbp, rsi
0x5b07:	jmp	0x5970


0x5b41:	mov	rax, r9
0x5b44:	cqo	
0x5b46:	idiv	rsi
0x5b49:	cmp	rax, rbp
0x5b4c:	jl	0x5dc0


0x5d30:	mov	r11d, 1
0x5d36:	movabs	rbp, 0x8000000000000000
0x5d40:	jmp	0x5b56


0x5dc0:	mov	r11d, 1
0x5dc6:	movabs	rbp, 0x7fffffffffffffff
0x5dd0:	jmp	0x5b56


0x5b52:	imul	rbp, rsi
0x5b56:	sub	r8d, 1
0x5b5a:	jne	0x5b38


0x5b56:	sub	r8d, 1
0x5b5a:	jne	0x5b38


0x5b38:	cmp	r10, rbp
0x5b3b:	jg	0x5d30


0x5bbb:	cmp	r10, rbp
0x5bbe:	jle	0x5ba0


0x5ba0:	mov	rax, r9
0x5ba3:	cqo	
0x5ba5:	idiv	rsi
0x5ba8:	cmp	rax, rbp
0x5bab:	jl	0x5d48


0x5bc0:	mov	r11d, 1
0x5bc6:	movabs	rbp, 0x8000000000000000
0x5bd0:	jmp	0x5bb5


0x5d48:	mov	r11d, 1
0x5d4e:	movabs	rbp, 0x7fffffffffffffff
0x5d58:	jmp	0x5bb5


0x5bb1:	imul	rbp, rsi
0x5bb5:	sub	r8d, 1
0x5bb9:	je	0x5b60


0x5bb5:	sub	r8d, 1
0x5bb9:	je	0x5b60


0x5c27:	cmp	r10, rbp
0x5c2a:	jle	0x5c08


0x5c08:	mov	rax, r9
0x5c0b:	cqo	
0x5c0d:	idiv	rsi
0x5c10:	cmp	rax, rbp
0x5c13:	jl	0x5d60


0x5c2c:	mov	r11d, 1
0x5c32:	movabs	rbp, 0x8000000000000000
0x5c3c:	jmp	0x5c1d


0x5d60:	mov	r11d, 1
0x5d66:	movabs	rbp, 0x7fffffffffffffff
0x5d70:	jmp	0x5c1d


0x5c19:	imul	rbp, rsi
0x5c1d:	sub	r8d, 1
0x5c21:	je	0x5b60


0x5c1d:	sub	r8d, 1
0x5c21:	je	0x5b60


0x5c53:	movabs	rax, 0x1fffffffffffff
0x5c5d:	cmp	rbp, rax
0x5c60:	jg	0x5d90


0x5c66:	shl	rbp, 0xa
0x5c6a:	jmp	0x5970


0x5c9d:	mov	rax, r9
0x5ca0:	cqo	
0x5ca2:	idiv	rsi
0x5ca5:	cmp	rax, rbp
0x5ca8:	jl	0x5d78


0x5d00:	mov	r11d, 1
0x5d06:	movabs	rbp, 0x8000000000000000
0x5d10:	jmp	0x5cb2


0x5d78:	mov	r11d, 1
0x5d7e:	movabs	rbp, 0x7fffffffffffffff
0x5d88:	jmp	0x5cb2


0x5cae:	imul	rbp, rsi
0x5cb2:	sub	r8d, 1
0x5cb6:	jne	0x5c98


0x5cb2:	sub	r8d, 1
0x5cb6:	jne	0x5c98


0x5cb8:	jmp	0x5b60


0x5c98:	cmp	r10, rbp
0x5c9b:	jg	0x5d00


0x5e13:	nop	word ptr cs:[rax + rax]
0x5e1d:	nop	dword ptr [rax]


0x5e9b:	nop	dword ptr [rax + rax]


0x5f37:	nop	word ptr [rax + rax]


0x5fc3:	nop	word ptr cs:[rax + rax]
0x5fcd:	nop	dword ptr [rax]


0x60ff:	nop	


0x611d:	nop	dword ptr [rax]


0x634c:	nop	dword ptr [rax]


0x63b6:	nop	word ptr cs:[rax + rax]


0x642b:	nop	dword ptr [rax + rax]


0x6481:	nop	dword ptr [rax + rax]
0x6486:	nop	word ptr cs:[rax + rax]


0x652c:	nop	dword ptr [rax]


0x6594:	nop	
0x6596:	nop	word ptr cs:[rax + rax]


0x66cc:	nop	dword ptr [rax]


0x67bc:	nop	dword ptr [rax]


0x682e:	nop	


0x69f3:	nop	dword ptr [rax]
0x69f6:	nop	word ptr cs:[rax + rax]


0x7015:	nop	
0x7016:	nop	word ptr cs:[rax + rax]


0x716e:	nop	


0x71f6:	nop	word ptr cs:[rax + rax]


0x7255:	nop	
0x7256:	nop	word ptr cs:[rax + rax]


0x7274:	nop	
0x7276:	nop	word ptr cs:[rax + rax]


0x744e:	nop	


0x74ef:	nop	


0x7765:	nop	
0x7766:	nop	word ptr cs:[rax + rax]


0x77c9:	nop	dword ptr [rax]


0x7802:	nop	dword ptr [rax]
0x7806:	nop	word ptr cs:[rax + rax]


0x796f:	nop	


0x7a28:	nop	dword ptr [rax + rax]


0x7a7f:	nop	


0x7ad3:	nop	dword ptr [rax]
0x7ad6:	nop	word ptr cs:[rax + rax]


0x7b55:	nop	
0x7b56:	nop	word ptr cs:[rax + rax]


0x7c55:	nop	
0x7c56:	nop	word ptr cs:[rax + rax]


0x7c94:	nop	
0x7c96:	nop	word ptr cs:[rax + rax]


0x7d2b:	nop	dword ptr [rax + rax]


0x7d87:	nop	word ptr [rax + rax]


0x7ff9:	nop	dword ptr [rax]


0x81de:	nop	


0x848f:	nop	


0x85e9:	nop	dword ptr [rax]


0x8798:	nop	dword ptr [rax + rax]


0x8951:	nop	dword ptr [rax + rax]
0x8956:	nop	word ptr cs:[rax + rax]


0x8b97:	nop	word ptr [rax + rax]


0x8cc6:	nop	word ptr cs:[rax + rax]


0x8e22:	nop	dword ptr [rax]
0x8e26:	nop	word ptr cs:[rax + rax]


0x90ea:	nop	word ptr [rax + rax]


0x92ea:	nop	word ptr [rax + rax]


0x93cc:	nop	dword ptr [rax]


0x976e:	nop	


0x98b1:	nop	dword ptr [rax + rax]
0x98b6:	nop	word ptr cs:[rax + rax]


0x99a6:	nop	word ptr cs:[rax + rax]


0x9b8f:	nop	


0xa32f:	nop	


0xa56b:	nop	dword ptr [rax + rax]


0xb101:	nop	dword ptr [rax + rax]
0xb106:	nop	word ptr cs:[rax + rax]


0xb197:	nop	word ptr [rax + rax]


0xb1ef:	nop	


0xb284:	nop	
0xb286:	nop	word ptr cs:[rax + rax]


0xb2dc:	nop	dword ptr [rax]


0xbaed:	nop	dword ptr [rax]


0xbd5a:	nop	word ptr [rax + rax]


0xc287:	nop	word ptr [rax + rax]


0xc4e4:	nop	
0xc4e6:	nop	word ptr cs:[rax + rax]


0xcc41:	nop	dword ptr [rax + rax]
0xcc46:	nop	word ptr cs:[rax + rax]


0xd53a:	nop	word ptr [rax + rax]


0xd6d6:	nop	word ptr cs:[rax + rax]


0xdfc1:	nop	dword ptr [rax + rax]
0xdfc6:	nop	word ptr cs:[rax + rax]


0xe1bc:	nop	dword ptr [rax]


0x106dd:	nop	dword ptr [rax]


0x10929:	mov	byte ptr [rbp + 8], 0x18
0x1092d:	jmp	0x107a4


0x10a22:	mov	byte ptr [rbp + 8], 0xa
0x10a26:	mov	eax, 1
0x10a2b:	jmp	0x107a4


0x10979:	mov	byte ptr [rbp + 8], 0x17
0x1097d:	jmp	0x107a4


0x10991:	test	r14, r14
0x10994:	jne	0x10d5a


0x1099a:	mov	byte ptr [rbp + 8], 0xc
0x1099e:	mov	dword ptr [rbp], 0x10
0x109a5:	mov	eax, 1
0x109aa:	jmp	0x107a4


0x10d5a:	cmp	byte ptr [rdx + r14 - 1], 0xa
0x10d60:	jne	0x1094c


0x10d66:	test	r15d, 0x800
0x10d6d:	je	0x1094c


0x10d73:	jmp	0x1099a


0x109d2:	mov	byte ptr [rbp + 8], 0x13
0x109d6:	jmp	0x107a4


0x10a02:	mov	byte ptr [rbp + 8], 0x12
0x10a06:	jmp	0x107a4


0x10a30:	mov	byte ptr [rbp + 8], 0xb
0x10a34:	mov	eax, 1
0x10a39:	jmp	0x107a4


0x10a52:	mov	byte ptr [rbp + 8], 9
0x10a56:	jmp	0x107a4


0x10a72:	mov	byte ptr [rbp + 8], 8
0x10a76:	jmp	0x107a4


0x10a86:	add	r14, 1
0x10a8a:	cmp	r14, qword ptr [rbx + 0x58]
0x10a8e:	jne	0x10d8b


0x10a94:	mov	byte ptr [rbp + 8], 0xc
0x10a98:	mov	dword ptr [rbp], 0x20
0x10a9f:	mov	eax, 1
0x10aa4:	jmp	0x107a4


0x10d8b:	lea	rdi, [rsp + 0x10]
0x10d90:	mov	rdx, r15
0x10d93:	mov	qword ptr [rbx + 0x48], r14
0x10d97:	mov	rsi, rbx
0x10d9a:	call	0x106e0


0x10d9f:	movzx	eax, byte ptr [rsp + 0x18]
0x10da4:	sub	qword ptr [rbx + 0x48], 1
0x10da9:	lea	edx, [rax - 9]
0x10dac:	mov	eax, 1
0x10db1:	cmp	dl, 1
0x10db4:	ja	0x107a4


0x10dba:	jmp	0x10a94


0x10aa9:	test	r15d, 0x8400
0x10ab0:	mov	eax, 2
0x10ab5:	jne	0x107a4


0x10abb:	mov	byte ptr [rbp + 8], 0xa
0x10abf:	jmp	0x107a4


0x10ac4:	and	r15d, 0x1200
0x10acb:	mov	eax, 2
0x10ad0:	cmp	r15, 0x200
0x10ad7:	jne	0x107a4


0x10add:	jmp	0x10979


0x10ae2:	test	r15d, 0x80000
0x10ae9:	mov	eax, 2
0x10aee:	jne	0x107a4


0x10af4:	mov	byte ptr [rbp + 8], 0x20
0x10af8:	jmp	0x107a4


0x10afd:	test	r15d, 0x80000
0x10b04:	mov	eax, 2
0x10b09:	jne	0x107a4


0x10b0f:	mov	byte ptr [rbp + 8], 0x22
0x10b13:	jmp	0x107a4


0x10b18:	and	r15d, 0x1200
0x10b1f:	mov	eax, 2
0x10b24:	cmp	r15, 0x200
0x10b2b:	jne	0x107a4


0x10b31:	jmp	0x10929


0x10b36:	test	r15d, 0x80000
0x10b3d:	mov	eax, 2
0x10b42:	jne	0x107a4


0x10b48:	mov	byte ptr [rbp + 8], 0xc
0x10b4c:	mov	dword ptr [rbp], 0x100
0x10b53:	jmp	0x107a4


0x10b58:	test	r15d, 0x80000
0x10b5f:	mov	eax, 2
0x10b64:	jne	0x107a4


0x10b6a:	mov	byte ptr [rbp + 8], 0xc
0x10b6e:	mov	dword ptr [rbp], 0x40
0x10b75:	jmp	0x107a4


0x10b7a:	test	r15d, 0x80000
0x10b81:	mov	eax, 2
0x10b86:	jne	0x107a4


0x10b8c:	mov	byte ptr [rbp + 8], 0x21
0x10b90:	jmp	0x107a4


0x10b95:	test	r15d, 0x80000
0x10b9c:	mov	eax, 2
0x10ba1:	jne	0x107a4


0x10ba7:	mov	byte ptr [rbp + 8], 0x23
0x10bab:	jmp	0x107a4


0x10bb0:	test	r15d, 0x80000
0x10bb7:	mov	eax, 2
0x10bbc:	jne	0x107a4


0x10bc2:	mov	byte ptr [rbp + 8], 0xc
0x10bc6:	mov	dword ptr [rbp], 0x200
0x10bcd:	jmp	0x107a4


0x10bd2:	and	r15d, 0x402
0x10bd9:	mov	eax, 2
0x10bde:	cmp	r15, 2
0x10be2:	jne	0x107a4


0x10be8:	jmp	0x109d2


0x10bed:	test	r15d, 0x80000
0x10bf4:	mov	eax, 2
0x10bf9:	jne	0x107a4


0x10bff:	mov	byte ptr [rbp + 8], 0xc
0x10c03:	mov	dword ptr [rbp], 9
0x10c0a:	jmp	0x107a4


0x10c0f:	test	r15d, 0x80000
0x10c16:	mov	eax, 2
0x10c1b:	jne	0x107a4


0x10c21:	mov	byte ptr [rbp + 8], 0xc
0x10c25:	mov	dword ptr [rbp], 6
0x10c2c:	jmp	0x107a4


0x10c31:	test	r15d, 0x4000
0x10c38:	mov	eax, 2
0x10c3d:	jne	0x107a4


0x10c43:	mov	edx, dword ptr [rsp + 8]
0x10c47:	mov	byte ptr [rbp + 8], 4
0x10c4b:	sub	edx, 0x31
0x10c4e:	movsxd	rdx, edx
0x10c51:	mov	qword ptr [rbp], rdx
0x10c55:	jmp	0x107a4


0x10c5a:	and	r15d, 0x402
0x10c61:	mov	eax, 2
0x10c66:	cmp	r15, 2
0x10c6a:	jne	0x107a4


0x10c70:	jmp	0x10a02


0x10c75:	test	r15d, 0x2000
0x10c7c:	mov	eax, 2
0x10c81:	jne	0x107a4


0x10c87:	jmp	0x10a52


0x10c8c:	test	r15d, 0x2000
0x10c93:	mov	eax, 2
0x10c98:	jne	0x107a4


0x10c9e:	jmp	0x10a72


0x10ca3:	test	r15d, 0x80000
0x10caa:	mov	eax, 2
0x10caf:	jne	0x107a4


0x10cb5:	mov	byte ptr [rbp + 8], 0xc
0x10cb9:	mov	dword ptr [rbp], 0x80
0x10cc0:	jmp	0x107a4


0x10ddd:	nop	dword ptr [rax]


0x10e96:	nop	word ptr cs:[rax + rax]


0x10f01:	mov	rbx, qword ptr [rbp + 0x30]
0x10f05:	mov	r15, qword ptr [rsp + 0x20]
0x10f0a:	mov	rsi, rdi
0x10f0d:	mov	r13, qword ptr [rsp + 0x18]
0x10f12:	mov	qword ptr [rsp], r8
0x10f16:	lea	rax, [rbx + 1]
0x10f1a:	mov	rdx, r15
0x10f1d:	or	rdx, 0x800000
0x10f24:	mov	rdi, r13
0x10f27:	mov	qword ptr [rbp + 0x30], rax
0x10f2b:	call	0x106e0


0x10f30:	cdqe	
0x10f32:	add	qword ptr [r14 + 0x48], rax
0x10f36:	xor	eax, eax
0x10f38:	cmp	byte ptr [r13 + 8], 9
0x10f3d:	mov	rdx, r13
0x10f40:	je	0x11a40


0x11a40:	cmp	rbx, 8
0x11a44:	jbe	0x11aab


0x10f46:	mov	r13, qword ptr [rsp + 0x40]
0x10f4b:	mov	r8, qword ptr [rsp]
0x10f4f:	mov	rcx, r15
0x10f52:	mov	rsi, rbp
0x10f55:	mov	rdi, r14
0x10f58:	add	r8, 1
0x10f5c:	mov	r9, r13
0x10f5f:	call	0x12510


0x11aab:	mov	rsi, qword ptr [rsp + 0x10]
0x11ab0:	mov	edx, 1
0x11ab5:	mov	ecx, ebx
0x11ab7:	shl	edx, cl
0x11ab9:	movsxd	rdx, edx
0x11abc:	or	qword ptr [rsi + 0xa8], rdx
0x11ac3:	jmp	0x11a46


0x11a46:	mov	rdi, qword ptr [rsp + 0x10]
0x11a4b:	lea	r8, [rsp + 0xc0]
0x11a53:	xor	ecx, ecx
0x11a55:	mov	rdx, rax
0x11a58:	mov	byte ptr [rsp + 0xc8], 0x11
0x11a60:	lea	rsi, [rdi + 0x80]
0x11a67:	add	rdi, 0x70
0x11a6b:	call	0x87a0


0x11a70:	test	rax, rax
0x11a73:	mov	qword ptr [rsp + 0x28], rax
0x11a78:	je	0x11a08


0x11a08:	mov	rax, qword ptr [rsp + 0x40]
0x11a0d:	mov	dword ptr [rax], 0xc
0x11a13:	jmp	0x10fa0


0x11a7a:	mov	qword ptr [rax + 0x28], rbx
0x11a7e:	jmp	0x1103c


0x10f64:	mov	r11d, dword ptr [r13]
0x10f68:	test	r11d, r11d
0x10f6b:	jne	0x10fa0


0x10f6d:	mov	rdx, qword ptr [rsp + 0x18]
0x10f72:	cmp	byte ptr [rdx + 8], 9
0x10f76:	je	0x11a40


0x10f7c:	test	rax, rax
0x10f7f:	je	0x10f92


0x10f92:	mov	rax, qword ptr [rsp + 0x40]
0x10f97:	mov	dword ptr [rax], 8
0x10f9d:	nop	dword ptr [rax]
0x10fa0:	mov	qword ptr [rsp + 0x28], 0
0x10fa9:	nop	dword ptr [rax]
0x10fb0:	mov	rdi, qword ptr [rsp + 0x118]
0x10fb8:	xor	rdi, qword ptr fs:[0x28]
0x10fc1:	mov	rax, qword ptr [rsp + 0x28]
0x10fc6:	jne	0x1233e


0x10f81:	lea	rsi, [rip - 0x9d28]
0x10f88:	xor	edx, edx
0x10f8a:	mov	rdi, rax
0x10f8d:	call	0x63c0


0x10fde:	test	qword ptr [rsp + 0x20], 0x1000000
0x10fe7:	jne	0x1123d


0x10fed:	mov	rax, qword ptr [rsp + 0x20]
0x10ff2:	test	al, 0x20
0x10ff4:	jne	0x1123d


0x10ffa:	test	al, 0x10
0x10ffc:	jne	0x11e65


0x11002:	cmp	cl, 9
0x11005:	je	0x11a18


0x11e65:	mov	rbx, qword ptr [rsp + 0x18]
0x11e6a:	mov	rdx, rax
0x11e6d:	mov	rsi, r14
0x11e70:	mov	qword ptr [rsp], r8
0x11e74:	mov	r15, rax
0x11e77:	mov	rdi, rbx
0x11e7a:	call	0x106e0


0x11a18:	test	qword ptr [rsp + 0x20], 0x20000
0x11a21:	jne	0x1100b


0x1100b:	mov	rax, qword ptr [rsp + 0x10]
0x11010:	mov	r8, qword ptr [rsp + 0x18]
0x11015:	xor	ecx, ecx
0x11017:	xor	edx, edx
0x11019:	lea	rsi, [rax + 0x80]
0x11020:	lea	rdi, [rax + 0x70]
0x11024:	mov	byte ptr [r8 + 8], 1
0x11029:	call	0x87a0


0x11a27:	mov	rax, qword ptr [rsp + 0x40]
0x11a2c:	mov	qword ptr [rsp + 0x28], 0
0x11a35:	mov	dword ptr [rax], 0x10
0x11a3b:	jmp	0x10fb0


0x1102e:	test	rax, rax
0x11031:	mov	qword ptr [rsp + 0x28], rax
0x11036:	je	0x11a08


0x11e7f:	cdqe	
0x11e81:	add	qword ptr [r14 + 0x48], rax
0x11e85:	mov	r9, qword ptr [rsp + 0x40]
0x11e8a:	mov	r8, qword ptr [rsp]
0x11e8e:	mov	rcx, r15
0x11e91:	mov	rdx, rbx
0x11e94:	mov	rsi, rbp
0x11e97:	mov	rdi, r14
0x11e9a:	call	0x10ea0


0x11e9f:	mov	qword ptr [rsp + 0x28], rax
0x11ea4:	jmp	0x10fb0


0x115d1:	mov	rax, qword ptr [rsp + 0x10]
0x115d6:	lea	rbx, [rax + 0x70]
0x115da:	lea	r12, [rax + 0x80]
0x115e1:	lea	eax, [rbp - 0x100]
0x115e7:	test	eax, 0xfffffeff
0x115ec:	jne	0x11c5a


0x1156f:	mov	rax, qword ptr [rsp + 0x10]
0x11574:	movzx	eax, byte ptr [rax + 0xb0]
0x1157b:	test	al, 0x10
0x1157d:	jne	0x115d1


0x115f2:	cmp	ebp, 0x100
0x115f8:	mov	r15, qword ptr [rsp + 0x18]
0x115fd:	je	0x11c32


0x11c5a:	mov	r8, qword ptr [rsp + 0x18]
0x11c5f:	xor	ecx, ecx
0x11c61:	xor	edx, edx
0x11c63:	mov	rsi, r12
0x11c66:	mov	rdi, rbx
0x11c69:	call	0x87a0


0x1157f:	mov	rdi, qword ptr [rsp + 0x10]
0x11584:	or	eax, 0x10
0x11587:	test	al, 8
0x11589:	mov	byte ptr [rdi + 0xb0], al
0x1158f:	jne	0x12193


0x11c32:	mov	dword ptr [r15], 6
0x11c39:	mov	r8, r15
0x11c3c:	xor	ecx, ecx
0x11c3e:	xor	edx, edx
0x11c40:	mov	rsi, r12
0x11c43:	mov	rdi, rbx
0x11c46:	call	0x87a0


0x11603:	mov	dword ptr [r15], 5
0x1160a:	mov	r8, r15
0x1160d:	xor	ecx, ecx
0x1160f:	xor	edx, edx
0x11611:	mov	rsi, r12
0x11614:	mov	rdi, rbx
0x11617:	call	0x87a0


0x11595:	movabs	rdx, 0x3ff000000000000
0x1159f:	test	al, 4
0x115a1:	mov	qword ptr [rdi + 0xb8], rdx
0x115a8:	movabs	rdx, 0x7fffffe87fffffe
0x115b2:	mov	qword ptr [rdi + 0xc0], rdx
0x115b9:	je	0x12118


0x12193:	xor	ebx, ebx
0x12195:	xor	r12d, r12d
0x12198:	jmp	0x12123


0x12118:	mov	ebx, 0x80
0x1211d:	mov	r12d, 2
0x12123:	call	0x1c70


0x115bf:	pxor	xmm0, xmm0
0x115c3:	mov	rax, qword ptr [rsp + 0x18]
0x115c8:	movups	xmmword ptr [rdi + 0xc8], xmm0
0x115cf:	mov	ebp, dword ptr [rax]
0x115d1:	mov	rax, qword ptr [rsp + 0x10]
0x115d6:	lea	rbx, [rax + 0x70]
0x115da:	lea	r12, [rax + 0x80]
0x115e1:	lea	eax, [rbp - 0x100]
0x115e7:	test	eax, 0xfffffeff
0x115ec:	jne	0x11c5a


0x12123:	call	0x1c70


0x12128:	movsxd	rdx, ebx
0x1212b:	movsxd	r9, r12d
0x1212e:	mov	r8d, 1
0x12134:	add	rdx, rdx
0x12137:	add	rdx, qword ptr [rax]
0x1213a:	mov	rax, qword ptr [rsp + 0x10]
0x1213f:	lea	rdi, [rax + r9*8]
0x12143:	xor	eax, eax
0x12145:	jmp	0x12162


0x12162:	test	byte ptr [rdx + rax*2], 8
0x12166:	mov	ecx, eax
0x12168:	je	0x12150


0x12150:	lea	esi, [rbx + rax]
0x12153:	cmp	esi, 0x5f
0x12156:	je	0x1216a


0x1216a:	mov	rsi, r8
0x1216d:	shl	rsi, cl
0x12170:	or	qword ptr [rdi + 0xb8], rsi
0x12177:	jmp	0x12158


0x12158:	add	rax, 1
0x1215c:	cmp	rax, 0x40
0x12160:	je	0x12179


0x12179:	add	r9, 1
0x1217d:	add	ebx, 0x40
0x12180:	sub	rdx, -0x80
0x12184:	add	rdi, 8
0x12188:	cmp	r9d, 3
0x1218c:	jle	0x12143


0x12143:	xor	eax, eax
0x12145:	jmp	0x12162


0x1218e:	jmp	0x115d1


0x1161c:	mov	dword ptr [r15], 0xa
0x11623:	mov	rbp, rax
0x11626:	mov	r8, qword ptr [rsp + 0x18]
0x1162b:	xor	ecx, ecx
0x1162d:	xor	edx, edx
0x1162f:	mov	rsi, r12
0x11632:	mov	rdi, rbx
0x11635:	call	0x87a0


0x1163a:	lea	r8, [rsp + 0xc0]
0x11642:	mov	rdx, rbp
0x11645:	mov	rdi, rbx
0x11648:	mov	rcx, rax
0x1164b:	mov	rsi, r12
0x1164e:	mov	r13, rax
0x11651:	mov	byte ptr [rsp + 0xc8], 0xa
0x11659:	call	0x87a0


0x1165e:	test	rbp, rbp
0x11661:	mov	rdi, rax
0x11664:	mov	qword ptr [rsp + 0x28], rax
0x11669:	sete	dl
0x1166c:	test	r13, r13
0x1166f:	sete	al
0x11672:	or	dl, al
0x11674:	jne	0x11a08


0x1167a:	test	rdi, rdi
0x1167d:	je	0x11a08


0x11683:	mov	rdx, qword ptr [rsp + 0x20]
0x11688:	mov	rdi, qword ptr [rsp + 0x18]
0x1168d:	mov	rsi, r14
0x11690:	call	0x106e0


0x11695:	cdqe	
0x11697:	add	qword ptr [r14 + 0x48], rax
0x1169b:	jmp	0x10fb0


0x11c4b:	mov	dword ptr [r15], 9
0x11c52:	mov	rbp, rax
0x11c55:	jmp	0x11626


0x11626:	mov	r8, qword ptr [rsp + 0x18]
0x1162b:	xor	ecx, ecx
0x1162d:	xor	edx, edx
0x1162f:	mov	rsi, r12
0x11632:	mov	rdi, rbx
0x11635:	call	0x87a0


0x11c6e:	test	rax, rax
0x11c71:	mov	qword ptr [rsp + 0x28], rax
0x11c76:	jne	0x11683


0x11c7c:	jmp	0x11a08


0x116a0:	mov	esi, 1
0x116a5:	mov	edi, 0x20
0x116aa:	mov	qword ptr [rsp + 0x98], 0
0x116b6:	call	0x1ab0


0x116bb:	mov	esi, 1
0x116c0:	mov	r12, rax
0x116c3:	mov	edi, 0x50
0x116c8:	call	0x1ab0


0x116cd:	test	r12, r12
0x116d0:	mov	r13, rax
0x116d3:	sete	dl
0x116d6:	test	rax, rax
0x116d9:	sete	al
0x116dc:	or	dl, al
0x116de:	jne	0x11eb9


0x116e4:	mov	r10, qword ptr [rsp + 0x18]
0x116e9:	mov	rdx, qword ptr [rsp + 0x20]
0x116ee:	mov	rsi, r14
0x116f1:	mov	rdi, r10
0x116f4:	call	0x5fd0


0x11eb9:	mov	rdi, r12
0x11ebc:	call	0x18d0


0x11ec1:	mov	rdi, r13
0x11ec4:	call	0x18d0


0x11ec9:	jmp	0x11a08


0x116f9:	movsxd	rbx, eax
0x116fc:	movzx	eax, byte ptr [r10 + 8]
0x11701:	cmp	al, 2
0x11703:	je	0x11ea9


0x11ea9:	mov	rax, qword ptr [rsp + 0x40]
0x11eae:	mov	dword ptr [rax], 2
0x11eb4:	jmp	0x11b18


0x11709:	cmp	al, 0x19
0x1170b:	mov	byte ptr [rsp + 0x57], 0
0x11710:	je	0x11bda


0x11bda:	or	byte ptr [r13 + 0x20], 1
0x11bdf:	test	qword ptr [rsp + 0x20], 0x100
0x11be8:	je	0x11bf2


0x11716:	cmp	al, 0x15
0x11718:	je	0x11c24


0x11bf2:	add	qword ptr [r14 + 0x48], rbx
0x11bf6:	mov	r11, qword ptr [rsp + 0x18]
0x11bfb:	mov	rsi, r14
0x11bfe:	mov	rdx, qword ptr [rsp + 0x20]
0x11c03:	mov	rdi, r11
0x11c06:	call	0x5fd0


0x11bea:	or	qword ptr [r12], 0x400
0x11bf2:	add	qword ptr [r14 + 0x48], rbx
0x11bf6:	mov	r11, qword ptr [rsp + 0x18]
0x11bfb:	mov	rsi, r14
0x11bfe:	mov	rdx, qword ptr [rsp + 0x20]
0x11c03:	mov	rdi, r11
0x11c06:	call	0x5fd0


0x11c24:	mov	rax, qword ptr [rsp + 0x18]
0x11c29:	mov	byte ptr [rax + 8], 1
0x11c2d:	jmp	0x1171e


0x1171e:	lea	rax, [rsp + 0xd0]
0x11726:	mov	r15, qword ptr [rsp + 0x18]
0x1172b:	lea	rbp, [rip + 0x4622]
0x11732:	mov	qword ptr [rsp + 0x48], 0
0x1173b:	mov	r9d, 1
0x11741:	mov	qword ptr [rsp + 0x30], 0
0x1174a:	mov	qword ptr [rsp + 0x28], rax
0x1174f:	lea	rax, [rsp + 0xa0]
0x11757:	mov	qword ptr [rsp], rax
0x1175b:	lea	rax, [rsp + 0x98]
0x11763:	mov	qword ptr [rsp + 0x58], rax
0x11768:	lea	rax, [rsp + 0xc0]
0x11770:	mov	qword ptr [rsp + 0x60], rax
0x11775:	lea	rax, [rsp + 0xf0]
0x1177d:	mov	qword ptr [rsp + 0x68], rax
0x11782:	mov	rax, qword ptr [rsp + 0x28]
0x11787:	mov	r8, qword ptr [rsp + 0x20]
0x1178c:	and	r9d, 1
0x11790:	mov	rdi, qword ptr [rsp]
0x11794:	mov	ecx, ebx
0x11796:	mov	rdx, r15
0x11799:	mov	rsi, r14
0x1179c:	mov	dword ptr [rsp + 0xa0], 3
0x117a7:	mov	qword ptr [rsp + 0xa8], rax
0x117af:	call	0x10480


0x11c0b:	mov	ebx, eax
0x11c0d:	movzx	eax, byte ptr [r11 + 8]
0x11c12:	cmp	al, 2
0x11c14:	je	0x11ea9


0x11c1a:	mov	byte ptr [rsp + 0x57], 1
0x11c1f:	jmp	0x11716


0x11808:	mov	rbx, qword ptr [rsp + 0x40]
0x1180d:	cmp	cl, 0x23
0x11810:	mov	rsi, qword ptr [rdi + 0x78]
0x11814:	sete	r8b
0x11818:	lea	rcx, [rip + 0x2d8e]
0x1181f:	lea	rdx, [rip + 0x4099]
0x11826:	movzx	r8d, r8b
0x1182a:	mov	r9, rbx
0x1182d:	mov	rdi, qword ptr [rsp + 0x10]
0x11832:	call	0xbaf0


0x11837:	mov	edi, dword ptr [rbx]
0x11839:	mov	qword ptr [rsp + 0x28], rax
0x1183e:	test	edi, edi
0x11840:	je	0x1103c


0x11846:	test	rax, rax
0x11849:	jne	0x1103c


0x1184f:	jmp	0x10fa0


0x1182d:	mov	rdi, qword ptr [rsp + 0x10]
0x11832:	call	0xbaf0


0x1187f:	mov	rax, qword ptr [rsp + 0x18]
0x11884:	mov	rdi, qword ptr [rsp + 0x10]
0x11889:	mov	rcx, qword ptr [rax]
0x1188c:	mov	eax, 1
0x11891:	shl	eax, cl
0x11893:	cdqe	
0x11895:	test	qword ptr [rdi + 0xa8], rax
0x1189c:	je	0x11ece


0x11ece:	mov	rax, qword ptr [rsp + 0x40]
0x11ed3:	mov	qword ptr [rsp + 0x28], 0
0x11edc:	mov	dword ptr [rax], 6
0x11ee2:	jmp	0x10fb0


0x118a2:	mov	rbx, qword ptr [rsp + 0x10]
0x118a7:	mov	r8, qword ptr [rsp + 0x18]
0x118ac:	xor	ecx, ecx
0x118ae:	xor	edx, edx
0x118b0:	or	qword ptr [rbx + 0xa0], rax
0x118b7:	lea	rsi, [rbx + 0x80]
0x118be:	lea	rdi, [rbx + 0x70]
0x118c2:	call	0x87a0


0x118c7:	test	rax, rax
0x118ca:	mov	qword ptr [rsp + 0x28], rax
0x118cf:	je	0x11a08


0x118d5:	add	qword ptr [rbx + 0x98], 1
0x118dd:	or	byte ptr [rbx + 0xb0], 2
0x118e4:	jmp	0x1103c


0x118e9:	mov	rbx, qword ptr [rsp + 0x10]
0x118ee:	mov	r8, qword ptr [rsp + 0x18]
0x118f3:	xor	ecx, ecx
0x118f5:	xor	edx, edx
0x118f7:	lea	rsi, [rbx + 0x80]
0x118fe:	lea	rdi, [rbx + 0x70]
0x11902:	call	0x87a0


0x11907:	test	rax, rax
0x1190a:	mov	qword ptr [rsp + 0x28], rax
0x1190f:	je	0x11a08


0x11915:	cmp	dword ptr [rbx + 0xb4], 1
0x1191c:	jle	0x1103c


0x11922:	or	byte ptr [rbx + 0xb0], 2
0x11929:	jmp	0x1103c


0x1192e:	mov	rax, qword ptr [rsp + 0x10]
0x11933:	mov	r8, qword ptr [rsp + 0x18]
0x11938:	xor	ecx, ecx
0x1193a:	xor	edx, edx
0x1193c:	lea	rbx, [rax + 0x70]
0x11940:	lea	rbp, [rax + 0x80]
0x11947:	mov	rdi, rbx
0x1194a:	mov	rsi, rbp
0x1194d:	call	0x87a0


0x11952:	test	rax, rax
0x11955:	mov	qword ptr [rsp + 0x28], rax
0x1195a:	je	0x11a08


0x11960:	mov	rax, qword ptr [rsp + 0x10]
0x11965:	lea	r12, [rsp + 0xc0]
0x1196d:	mov	r15, qword ptr [rsp + 0x28]
0x11972:	cmp	dword ptr [rax + 0xb4], 1
0x11979:	jle	0x1103c


0x1197f:	mov	rax, qword ptr [r14 + 0x48]
0x11983:	cmp	qword ptr [r14 + 0x68], rax
0x11987:	jle	0x11c91


0x11c91:	mov	qword ptr [rsp + 0x28], r15
0x11c96:	jmp	0x1103c


0x1198d:	cmp	rax, qword ptr [r14 + 0x30]
0x11991:	je	0x11c91


0x11997:	mov	rdx, qword ptr [r14 + 0x10]
0x1199b:	cmp	dword ptr [rdx + rax*4], -1
0x1199f:	jne	0x11c91


0x119a5:	mov	r13, qword ptr [rsp + 0x18]
0x119aa:	mov	rdx, qword ptr [rsp + 0x20]
0x119af:	mov	rsi, r14
0x119b2:	mov	rdi, r13
0x119b5:	call	0x106e0


0x119ba:	cdqe	
0x119bc:	add	qword ptr [r14 + 0x48], rax
0x119c0:	mov	r8, r13
0x119c3:	xor	ecx, ecx
0x119c5:	xor	edx, edx
0x119c7:	mov	rsi, rbp
0x119ca:	mov	rdi, rbx
0x119cd:	call	0x87a0


0x119d2:	mov	rdx, r15
0x119d5:	mov	r13, rax
0x119d8:	mov	r8, r12
0x119db:	mov	rcx, rax
0x119de:	mov	rsi, rbp
0x119e1:	mov	rdi, rbx
0x119e4:	mov	byte ptr [rsp + 0xc8], 0x10
0x119ec:	call	0x87a0


0x119f1:	test	r13, r13
0x119f4:	mov	r15, rax
0x119f7:	sete	dl
0x119fa:	test	rax, rax
0x119fd:	sete	al
0x11a00:	or	dl, al
0x11a02:	je	0x1197f


0x11a83:	mov	rax, qword ptr [rsp + 0x40]
0x11a88:	mov	qword ptr [rsp + 0x28], 0
0x11a91:	mov	dword ptr [rax], 5
0x11a97:	jmp	0x10fb0


0x11ac5:	mov	rsi, qword ptr [rsp + 0xa8]
0x11acd:	mov	rdi, r12
0x11ad0:	call	0xb290


0x11ad5:	mov	rdx, qword ptr [rsp + 0x40]
0x11ada:	test	eax, eax
0x11adc:	mov	dword ptr [rdx], eax
0x11ade:	jne	0x11b18


0x11afd:	mov	rsi, qword ptr [rsp + 0xa8]
0x11b05:	mov	rdi, r12
0x11b08:	call	0xb290


0x11b0d:	mov	rdx, qword ptr [rsp + 0x40]
0x11b12:	test	eax, eax
0x11b14:	mov	dword ptr [rdx], eax
0x11b16:	je	0x11ae0


0x11b47:	mov	rdx, qword ptr [r13 + 0x28]
0x11b4b:	cmp	rdx, qword ptr [rsp + 0x30]
0x11b50:	mov	rax, qword ptr [r13]
0x11b54:	je	0x1204e


0x1204e:	mov	rdx, qword ptr [rsp + 0x30]
0x12053:	lea	rdi, [rdx + rdx + 1]
0x12058:	lea	rsi, [rdi*4]
0x12060:	mov	qword ptr [rsp + 0x30], rdi
0x12065:	mov	rdi, rax
0x12068:	call	0x1b60


0x11b5a:	lea	rcx, [rdx + 1]
0x11b5e:	mov	qword ptr [r13 + 0x28], rcx
0x11b62:	mov	ecx, dword ptr [rsp + 0xa8]
0x11b69:	mov	dword ptr [rax + rdx*4], ecx
0x11b6c:	jmp	0x11ae0


0x1206d:	test	rax, rax
0x12070:	je	0x11fc3


0x12076:	mov	qword ptr [r13], rax
0x1207a:	mov	rdx, qword ptr [r13 + 0x28]
0x1207e:	jmp	0x11b5a


0x11b71:	movzx	edx, byte ptr [rsp + 0xa8]
0x11b79:	mov	esi, 1
0x11b7e:	mov	rax, rdx
0x11b81:	and	edx, 0x3f
0x11b84:	shr	rax, 3
0x11b88:	mov	ecx, edx
0x11b8a:	and	eax, 0x18
0x11b8d:	shl	rsi, cl
0x11b90:	or	qword ptr [r12 + rax], rsi
0x11b94:	jmp	0x11ae0


0x12373:	nop	dword ptr [rax]
0x12376:	nop	word ptr cs:[rax + rax]


0x12502:	nop	dword ptr [rax]
0x12506:	nop	word ptr cs:[rax + rax]


0x1268f:	nop	


0x12ec7:	or	byte ptr [r13 + 0xb0], 1
0x12ecf:	mov	r15, qword ptr [rdx + 8]
0x12ed3:	test	r15, r15
0x12ed6:	je	0x134e9


0x134e9:	mov	rax, qword ptr [rdx + 0x20]
0x134ed:	mov	rcx, qword ptr [rax + 0x38]
0x134f1:	jmp	0x12ee4


0x12edc:	mov	rax, qword ptr [r15 + 0x18]
0x12ee0:	mov	rcx, qword ptr [rax + 0x38]
0x12ee4:	mov	rax, qword ptr [rdx + 0x10]
0x12ee8:	test	rax, rax
0x12eeb:	je	0x134dc


0x12ee4:	mov	rax, qword ptr [rdx + 0x10]
0x12ee8:	test	rax, rax
0x12eeb:	je	0x134dc


0x134dc:	mov	rax, qword ptr [rdx + 0x20]
0x134e0:	mov	r9, qword ptr [rax + 0x38]
0x134e4:	jmp	0x12ef9


0x12ef1:	mov	rax, qword ptr [rax + 0x18]
0x12ef5:	mov	r9, qword ptr [rax + 0x38]
0x12ef9:	test	rcx, rcx
0x12efc:	js	0x13761


0x12ef9:	test	rcx, rcx
0x12efc:	js	0x13761


0x13761:	lea	rcx, [rip + 0x26b8]
0x13768:	lea	rsi, [rip + 0x20e1]
0x1376f:	lea	rdi, [rip + 0x2195]
0x13776:	mov	edx, 0x5af
0x1377b:	call	0x1a50


0x12f02:	test	r9, r9
0x12f05:	js	0x13723


0x13723:	lea	rcx, [rip + 0x26f6]
0x1372a:	lea	rsi, [rip + 0x211f]
0x13731:	lea	rdi, [rip + 0x21dd]
0x13738:	mov	edx, 0x5b0
0x1373d:	call	0x1a50


0x12f0b:	mov	rax, qword ptr [r13 + 0x28]
0x12f0f:	lea	rdi, [rdi + rdi*2]
0x12f13:	mov	qword ptr [rsp + 0x38], rsi
0x12f18:	mov	qword ptr [rsp + 0x30], r9
0x12f1d:	mov	qword ptr [rsp + 0x18], rcx
0x12f22:	mov	qword ptr [rsp + 0x10], rdx
0x12f27:	lea	r10, [rax + rdi*8]
0x12f2b:	mov	edi, 0x10
0x12f30:	mov	qword ptr [r10], 2
0x12f37:	mov	qword ptr [rsp], r10
0x12f3b:	call	0x1b00


0x12f40:	mov	r10, qword ptr [rsp]
0x12f44:	test	rax, rax
0x12f47:	mov	rdx, qword ptr [rsp + 0x10]
0x12f4c:	mov	rcx, qword ptr [rsp + 0x18]
0x12f51:	mov	r9, qword ptr [rsp + 0x30]
0x12f56:	mov	rsi, qword ptr [rsp + 0x38]
0x12f5b:	mov	qword ptr [r10 + 0x10], rax
0x12f5f:	je	0x131fa


0x12f65:	cmp	rcx, r9
0x12f68:	je	0x1353d


0x1353d:	mov	qword ptr [r10 + 8], 1
0x13545:	mov	qword ptr [rax], rcx
0x13548:	jmp	0x12e45


0x12f6e:	mov	qword ptr [r10 + 8], 2
0x12f76:	jl	0x13524


0x12e45:	xor	edi, edi
0x12e47:	test	r15, r15
0x12e4a:	je	0x12e5b


0x13524:	mov	qword ptr [rax], rcx
0x13527:	mov	qword ptr [rax + 8], r9
0x1352b:	jmp	0x12e45


0x12f7c:	mov	qword ptr [rax], r9
0x12f7f:	mov	qword ptr [rax + 8], rcx
0x12f83:	jmp	0x12e45


0x12f88:	mov	rax, qword ptr [rdx + 0x20]
0x12f8c:	lea	rcx, [rdi + rdi*2]
0x12f90:	mov	edi, 8
0x12f95:	mov	qword ptr [rsp + 0x10], rsi
0x12f9a:	mov	qword ptr [rsp], rdx
0x12f9e:	mov	r14, qword ptr [rax + 0x38]
0x12fa2:	mov	rax, qword ptr [r13 + 0x28]
0x12fa6:	lea	r15, [rax + rcx*8]
0x12faa:	mov	qword ptr [r15], 1
0x12fb1:	mov	qword ptr [r15 + 8], 1
0x12fb9:	call	0x1b00


0x12fbe:	test	rax, rax
0x12fc1:	mov	qword ptr [r15 + 0x10], rax
0x12fc5:	mov	rdx, qword ptr [rsp]
0x12fc9:	mov	rsi, qword ptr [rsp + 0x10]
0x12fce:	je	0x13678


0x13678:	mov	qword ptr [r15 + 8], 0
0x13680:	mov	qword ptr [r15], 0
0x13687:	jmp	0x131fa


0x12fd4:	mov	qword ptr [rax], r14
0x12fd7:	mov	r15, qword ptr [rdx + 8]
0x12fdb:	jmp	0x12e45


0x12fe0:	cmp	qword ptr [rdx + 0x20], 0
0x12fe5:	je	0x12e41


0x12e41:	mov	r15, qword ptr [rdx + 8]
0x12e45:	xor	edi, edi
0x12e47:	test	r15, r15
0x12e4a:	je	0x12e5b


0x12feb:	lea	rcx, [rip + 0x2e2e]
0x12ff2:	lea	rsi, [rip + 0x2857]
0x12ff9:	lea	rdi, [rip + 0x28f8]
0x13000:	mov	edx, 0x59f
0x13005:	call	0x1a50


0x1302a:	mov	rax, qword ptr [r13 + 0x28]
0x1302e:	lea	rcx, [rdi + rdi*2]
0x13032:	mov	edi, 8
0x13037:	mov	qword ptr [rsp + 0x18], rsi
0x1303c:	mov	qword ptr [rsp + 0x10], rdx
0x13041:	lea	rcx, [rax + rcx*8]
0x13045:	mov	qword ptr [rcx], 1
0x1304c:	mov	qword ptr [rcx + 8], 1
0x13054:	mov	qword ptr [rsp], rcx
0x13058:	call	0x1b00


0x1305d:	mov	rcx, qword ptr [rsp]
0x13061:	test	rax, rax
0x13064:	mov	rdx, qword ptr [rsp + 0x10]
0x13069:	mov	rsi, qword ptr [rsp + 0x18]
0x1306e:	mov	qword ptr [rcx + 0x10], rax
0x13072:	je	0x136c0


0x136c0:	mov	qword ptr [rcx + 8], 0
0x136c8:	mov	qword ptr [rcx], 0
0x136cf:	mov	eax, 0xc
0x136d4:	jmp	0x129b0


0x13078:	mov	qword ptr [rax], r15
0x1307b:	mov	r15, qword ptr [rdx + 8]
0x1307f:	jmp	0x12e45


0x135c9:	mov	r8d, eax
0x135cc:	add	rdx, 1
0x135d0:	add	rcx, 0x10
0x135d4:	cmp	rdx, r10
0x135d7:	jne	0x1344e


0x135dd:	or	r14b, r8b
0x135e0:	je	0x136ea


0x1344e:	cmp	byte ptr [rcx + 8], 0xc
0x13452:	ja	0x1371e


0x135e6:	mov	rax, rdx
0x135e9:	shl	rax, 4
0x135ed:	add	rax, rsi
0x135f0:	jmp	0x13608


0x13608:	movzx	edx, byte ptr [rsi + 8]
0x1360c:	cmp	dl, 1
0x1360f:	jne	0x135f2


0x13611:	cmp	byte ptr [rsi], 0
0x13614:	jns	0x135fb


0x135f2:	cmp	dl, 5
0x135f5:	jne	0x135fb


0x13616:	and	byte ptr [rsi + 0xa], 0xdf
0x1361a:	jmp	0x135fb


0x135fb:	add	rsi, 0x10
0x135ff:	cmp	rax, rsi
0x13602:	je	0x136e7


0x135f7:	mov	byte ptr [rsi + 8], 7
0x135fb:	add	rsi, 0x10
0x135ff:	cmp	rax, rsi
0x13602:	je	0x136e7


0x136e7:	mov	r14d, r8d
0x136ea:	cmp	qword ptr [rbx + 0x98], 0
0x136f2:	movzx	edx, byte ptr [rbx + 0xb0]
0x136f9:	mov	dword ptr [rbx + 0xb4], 1
0x13703:	setg	al
0x13706:	and	edx, 0xfffffff9
0x13709:	or	eax, r14d
0x1370c:	and	eax, 1
0x1370f:	add	eax, eax
0x13711:	or	eax, edx
0x13713:	mov	byte ptr [rbx + 0xb0], al
0x13719:	jmp	0x1323e


0x135cc:	add	rdx, 1
0x135d0:	add	rcx, 0x10
0x135d4:	cmp	rdx, r10
0x135d7:	jne	0x1344e


0x13629:	mov	edi, dword ptr [rcx]
0x1362b:	cmp	edi, 0x20
0x1362e:	je	0x135cc


0x13630:	jbe	0x136d9


0x136d9:	cmp	edi, 0x10
0x136dc:	je	0x135cc


0x13636:	cmp	edi, 0x40
0x13639:	je	0x135cc


0x136e2:	jmp	0x1323e


0x1363b:	add	edi, -0x80
0x1363e:	je	0x135cc


0x13640:	jmp	0x1323e


0x13656:	cmp	qword ptr [rdi + 0x18], 0
0x1365b:	je	0x135cc


0x13661:	jmp	0x1323e


0x13785:	nop	
0x13786:	nop	word ptr cs:[rax + rax]


0x137ff:	nop	


0x1380f:	nop	


0x138d3:	nop	dword ptr [rax]
0x138d6:	nop	word ptr cs:[rax + rax]


0x13d5f:	nop	


0x13e7b:	nop	dword ptr [rax + rax]


0x14015:	nop	
0x14016:	nop	word ptr cs:[rax + rax]


0x14064:	nop	
0x14066:	nop	word ptr cs:[rax + rax]


0x1410e:	nop	


0x14128:	nop	dword ptr [rax + rax]


0x14145:	nop	
0x14146:	nop	word ptr cs:[rax + rax]


0x1416a:	nop	word ptr [rax + rax]


0x1418c:	nop	dword ptr [rax]


0x141d1:	nop	word ptr cs:[rax + rax]
0x141db:	nop	dword ptr [rax + rax]


0x1425d:	nop	dword ptr [rax]


0x142fc:	nop	dword ptr [rax]


0x14365:	nop	
0x14366:	nop	word ptr cs:[rax + rax]


0x14372:	nop	word ptr cs:[rax + rax]
0x1437c:	nop	dword ptr [rax]


0x3480:	xor	r10d, r10d
0x3483:	mov	eax, dword ptr [rsp + 8]
0x3487:	cmp	eax, 2
0x348a:	je	0x3a48


0x34b0:	xor	r10d, r10d
0x34b3:	cmp	dword ptr [rsp + 8], 2
0x34b8:	je	0x39c0


0x34d8:	mov	edx, 9
0x34dd:	mov	ebx, 0x74
0x34e2:	cmp	dword ptr [rsp + 8], 2
0x34e7:	sete	al
0x34ea:	and	al, byte ptr [rsp + 0xf]
0x34ee:	jne	0x363e


0x3518:	mov	edx, 8
0x351d:	mov	ebx, 0x62
0x3522:	jmp	0x34f4


0x3528:	cmp	dword ptr [rsp + 8], 2
0x352d:	je	0x3900


0x35d0:	cmp	byte ptr [rsp + 0xd], 0
0x35d5:	jne	0x37a3


0x35f8:	cmp	dword ptr [rsp + 8], 2
0x35fd:	sete	dl
0x3600:	xor	eax, eax
0x3602:	jmp	0x33e8


0x3610:	mov	edx, 7
0x3615:	mov	ebx, 0x61
0x361a:	jmp	0x34f4


0x3620:	cmp	dword ptr [rsp + 8], 2
0x3625:	sete	dl
0x3628:	test	rbp, rbp
0x362b:	jne	0x33dc


0x3650:	cmp	dword ptr [rsp + 8], 2
0x3655:	sete	dl
0x3658:	xor	r12d, r12d
0x365b:	jmp	0x3631


0x3660:	cmp	dword ptr [rsp + 8], 2
0x3665:	mov	ebx, 0x20
0x366a:	sete	dl
0x366d:	jmp	0x3631


0x3670:	mov	edx, 0xd
0x3675:	mov	ebx, 0x72
0x367a:	jmp	0x34e2


0x3680:	mov	edx, 0xc
0x3685:	mov	ebx, 0x66
0x368a:	jmp	0x34f4


0x3690:	mov	edx, 0xb
0x3695:	mov	ebx, 0x76
0x369a:	jmp	0x34f4


0x36a0:	mov	edx, 0xa
0x36a5:	mov	ebx, 0x6e
0x36aa:	jmp	0x34e2


0x3740:	xor	r10d, r10d
0x3743:	cmp	byte ptr [rsp + 0xd], 0
0x3748:	jne	0x353e


0x3760:	mov	edx, 0xc
0x3765:	xor	r10d, r10d
0x3768:	mov	ebx, 0x66
0x376d:	jmp	0x34f4


0x3778:	mov	edx, 0xa
0x377d:	xor	r10d, r10d
0x3780:	mov	ebx, 0x6e
0x3785:	jmp	0x34e2


0x3790:	mov	ebx, 0x61
0x3795:	jmp	0x3560


0x37a0:	xor	r10d, r10d
0x37a3:	cmp	dword ptr [rsp + 8], 2
0x37a8:	sete	dl
0x37ab:	cmp	byte ptr [rsp + 0xf], 0
0x37b0:	jne	0x434a


0x3840:	cmp	dword ptr [rsp + 8], 2
0x3845:	mov	r12d, r10d
0x3848:	sete	dl
0x384b:	xor	r10d, r10d
0x384e:	xor	eax, eax
0x3850:	jmp	0x33e8


0x3858:	cmp	dword ptr [rsp + 8], 2
0x385d:	sete	dl
0x3860:	xor	r10d, r10d
0x3863:	jmp	0x3628


0x3870:	cmp	dword ptr [rsp + 8], 2
0x3875:	sete	dl
0x3878:	xor	r10d, r10d
0x387b:	xor	r12d, r12d
0x387e:	jmp	0x3631


0x3888:	cmp	dword ptr [rsp + 8], 2
0x388d:	mov	r12d, r10d
0x3890:	mov	ebx, 0x20
0x3895:	sete	dl
0x3898:	xor	r10d, r10d
0x389b:	jmp	0x3631


0x38b8:	mov	ebx, 0x76
0x38bd:	jmp	0x3560


0x38c8:	mov	edx, 9
0x38cd:	xor	r10d, r10d
0x38d0:	mov	ebx, 0x74
0x38d5:	jmp	0x34e2


0x38e0:	mov	ebx, 0x62
0x38e5:	jmp	0x3560


0x3e80:	test	ebx, ebx
0x3e82:	jne	0x427d


0x5990:	movabs	rax, 0xc000000000000000
0x599a:	cmp	rbp, rax
0x599d:	jl	0x5cd0


0x59c0:	movabs	rax, 0xffc0000000000000
0x59ca:	cmp	rbp, rax
0x59cd:	jl	0x5cd0


0x59f0:	movsxd	rsi, eax
0x59f3:	movabs	rax, 0x8000000000000000
0x59fd:	mov	r8d, 7
0x5a03:	cqo	
0x5a05:	xor	r11d, r11d
0x5a08:	movabs	r9, 0x7fffffffffffffff
0x5a12:	idiv	rsi
0x5a15:	mov	r10, rax
0x5a18:	jmp	0x5a3f


0x5a60:	movsxd	rsi, eax
0x5a63:	movabs	rax, 0x8000000000000000
0x5a6d:	mov	r8d, 8
0x5a73:	cqo	
0x5a75:	xor	r11d, r11d
0x5a78:	movabs	r9, 0x7fffffffffffffff
0x5a82:	idiv	rsi
0x5a85:	mov	r10, rax
0x5a88:	jmp	0x5aaf


0x5ad0:	movabs	r8, 0x8000000000000000
0x5ada:	movsxd	rsi, eax
0x5add:	mov	rax, r8
0x5ae0:	cqo	
0x5ae2:	idiv	rsi
0x5ae5:	cmp	rbp, rax
0x5ae8:	jl	0x5cd0


0x5b10:	movsxd	rsi, eax
0x5b13:	movabs	rax, 0x8000000000000000
0x5b1d:	mov	r8d, 3
0x5b23:	cqo	
0x5b25:	xor	r11d, r11d
0x5b28:	movabs	r9, 0x7fffffffffffffff
0x5b32:	idiv	rsi
0x5b35:	mov	r10, rax
0x5b38:	cmp	r10, rbp
0x5b3b:	jg	0x5d30


0x5b70:	movsxd	rsi, eax
0x5b73:	movabs	rax, 0x8000000000000000
0x5b7d:	mov	r8d, 6
0x5b83:	cqo	
0x5b85:	xor	r11d, r11d
0x5b88:	movabs	r9, 0x7fffffffffffffff
0x5b92:	idiv	rsi
0x5b95:	mov	r10, rax
0x5b98:	jmp	0x5bbb


0x5bd8:	movsxd	rsi, eax
0x5bdb:	movabs	rax, 0x8000000000000000
0x5be5:	mov	r8d, 5
0x5beb:	cqo	
0x5bed:	xor	r11d, r11d
0x5bf0:	movabs	r9, 0x7fffffffffffffff
0x5bfa:	idiv	rsi
0x5bfd:	mov	r10, rax
0x5c00:	jmp	0x5c27


0x5c40:	movabs	rax, 0xffe0000000000000
0x5c4a:	cmp	rbp, rax
0x5c4d:	jl	0x5cd0


0x5c70:	movsxd	rsi, eax
0x5c73:	movabs	rax, 0x8000000000000000
0x5c7d:	mov	r8d, 4
0x5c83:	cqo	
0x5c85:	xor	r11d, r11d
0x5c88:	movabs	r9, 0x7fffffffffffffff
0x5c92:	idiv	rsi
0x5c95:	mov	r10, rax
0x5c98:	cmp	r10, rbp
0x5c9b:	jg	0x5d00


0x10910:	and	r15d, 0x1200
0x10917:	mov	eax, 1
0x1091c:	cmp	r15, 0x1200
0x10923:	jne	0x107a4


0x10938:	and	r15d, 0x8400
0x1093f:	cmp	r15, 0x8000
0x10946:	je	0x10a22


0x10960:	and	r15d, 0x1200
0x10967:	mov	eax, 1
0x1096c:	cmp	r15, 0x1200
0x10973:	jne	0x107a4


0x10988:	test	r15d, 0x800008
0x1098f:	jne	0x1099a


0x109b0:	mov	byte ptr [rbp + 8], 0x14
0x109b4:	mov	eax, 1
0x109b9:	jmp	0x107a4


0x109c0:	test	r15d, 0x402
0x109c7:	mov	eax, 1
0x109cc:	jne	0x107a4


0x109e0:	mov	byte ptr [rbp + 8], 5
0x109e4:	mov	eax, 1
0x109e9:	jmp	0x107a4


0x109f0:	test	r15d, 0x402
0x109f7:	mov	eax, 1
0x109fc:	jne	0x107a4


0x10a10:	test	r15d, 0x800
0x10a17:	mov	eax, 1
0x10a1c:	je	0x107a4


0x10a40:	test	r15d, 0x2000
0x10a47:	mov	eax, 1
0x10a4c:	je	0x107a4


0x10a60:	test	r15d, 0x2000
0x10a67:	mov	eax, 1
0x10a6c:	je	0x107a4


0x10a80:	test	r15b, 8
0x10a84:	jne	0x10a94


0x11560:	mov	rax, qword ptr [rsp + 0x18]
0x11565:	mov	ebp, dword ptr [rax]
0x11567:	test	ebp, 0x30f
0x1156d:	je	0x115d1


0x11858:	mov	rbx, qword ptr [rsp + 0x40]
0x1185d:	cmp	cl, 0x21
0x11860:	mov	rsi, qword ptr [rdi + 0x78]
0x11864:	sete	r8b
0x11868:	lea	rcx, [rip + 0x2bd3]
0x1186f:	lea	rdx, [rip + 0x403d]
0x11876:	movzx	r8d, r8b
0x1187a:	mov	r9, rbx
0x1187d:	jmp	0x1182d


0x13010:	mov	rax, qword ptr [rdx + 0x20]
0x13014:	mov	r15, qword ptr [rax + 0x38]
0x13018:	mov	rax, qword ptr [r13 + 0x18]
0x1301c:	mov	qword ptr [rax + rdi*8], r15
0x13020:	cmp	byte ptr [rdx + 0x30], 4
0x13024:	jne	0x12e41


0x13620:	cmp	byte ptr [rcx], 0
0x13623:	cmovs	r14d, eax
0x13627:	jmp	0x135cc


0x13648:	mov	rdi, qword ptr [rcx]
0x1364b:	cmp	qword ptr [rdi + 0x10], 0
0x13650:	jne	0x1323e


0x1d66:	nop	word ptr cs:[rax + rax]


0x1da5:	nop	dword ptr [rax]


0x1dea:	nop	word ptr [rax + rax]


0x1e39:	nop	dword ptr [rax]


0x1e4c:	nop	dword ptr [rax]


0x1e92:	nop	word ptr [rax + rax]


0x1eda:	nop	word ptr [rax + rax]


0x1f21:	nop	dword ptr [rax]


0x1f74:	nop	dword ptr [rax]


0x1fbf:	nop	


0x1fd3:	nop	dword ptr [rax + rax]


0x2035:	nop	dword ptr [rax]


0x2366:	nop	word ptr cs:[rax + rax]


0x23b7:	nop	word ptr [rax + rax]


0x2401:	nop	dword ptr [rax]


0x24a3:	nop	dword ptr [rax + rax]


0x24af:	nop	


0x25ba:	nop	word ptr [rax + rax]


0x26f6:	nop	word ptr cs:[rax + rax]


0x275a:	nop	word ptr [rax + rax]


0x27a8:	nop	dword ptr [rax + rax]


0x27f8:	nop	dword ptr [rax + rax]


0x2851:	nop	dword ptr [rax]


0x2867:	nop	word ptr [rax + rax]


0x28db:	nop	dword ptr [rax + rax]


0x2edb:	nop	dword ptr [rax + rax]


0x2faf:	nop	


0x2feb:	nop	dword ptr [rax + rax]


0x310c:	nop	dword ptr [rax]


0x315d:	nop	dword ptr [rax]


0x3388:	nop	dword ptr [rax + rax]


0x3477:	nop	word ptr [rax + rax]


0x34ae:	nop	


0x34d1:	nop	dword ptr [rax]


0x3512:	nop	word ptr [rax + rax]


0x3524:	nop	dword ptr [rax]


0x35c8:	nop	dword ptr [rax + rax]


0x35f1:	nop	dword ptr [rax]


0x3607:	nop	word ptr [rax + rax]


0x361f:	nop	


0x364e:	nop	


0x365d:	nop	dword ptr [rax]


0x366f:	nop	


0x367f:	nop	


0x368f:	nop	


0x369f:	nop	


0x36af:	nop	


0x371c:	nop	dword ptr [rax]


0x373c:	nop	dword ptr [rax]


0x374e:	nop	


0x375f:	nop	


0x3772:	nop	word ptr [rax + rax]


0x378a:	nop	word ptr [rax + rax]


0x379a:	nop	word ptr [rax + rax]


0x383b:	nop	dword ptr [rax + rax]


0x3855:	nop	dword ptr [rax]


0x3868:	nop	dword ptr [rax + rax]


0x3883:	nop	dword ptr [rax + rax]


0x38b2:	nop	word ptr [rax + rax]


0x38c2:	nop	word ptr [rax + rax]


0x38da:	nop	word ptr [rax + rax]


0x38ea:	nop	word ptr [rax + rax]


0x38f8:	nop	dword ptr [rax + rax]


0x391f:	nop	


0x39b9:	nop	dword ptr [rax]


0x3a02:	nop	word ptr [rax + rax]


0x3a28:	nop	dword ptr [rax + rax]


0x3a41:	nop	dword ptr [rax]


0x3a62:	nop	word ptr [rax + rax]


0x3bc8:	nop	dword ptr [rax + rax]


0x3cdb:	nop	dword ptr [rax + rax]


0x3cfe:	nop	


0x3dc5:	nop	dword ptr [rax]


0x3e7d:	nop	dword ptr [rax]


0x4086:	nop	word ptr cs:[rax + rax]


0x4119:	nop	dword ptr [rax]


0x418d:	nop	dword ptr [rax]


0x426d:	nop	dword ptr [rax]


0x457b:	nop	dword ptr [rax + rax]


0x4e06:	nop	word ptr cs:[rax + rax]


0x4e95:	nop	dword ptr [rax]


0x4eb6:	nop	word ptr cs:[rax + rax]


0x4f15:	nop	dword ptr [rax]


0x4f51:	nop	dword ptr [rax]


0x4f98:	nop	dword ptr [rax + rax]


0x4fe7:	nop	word ptr [rax + rax]


0x5044:	nop	dword ptr [rax]


0x5072:	nop	word ptr [rax + rax]


0x5126:	nop	word ptr cs:[rax + rax]


0x5189:	nop	dword ptr [rax]


0x5402:	nop	word ptr [rax + rax]


0x5489:	nop	dword ptr [rax]


0x54b4:	nop	dword ptr [rax]


0x550d:	nop	dword ptr [rax]


0x56d8:	nop	dword ptr [rax + rax]


0x56fc:	nop	dword ptr [rax]


0x580f:	nop	


0x5823:	nop	dword ptr [rax + rax]


0x58d2:	nop	word ptr [rax + rax]


0x58e4:	nop	dword ptr [rax]


0x598b:	nop	dword ptr [rax + rax]


0x59bb:	nop	dword ptr [rax + rax]


0x59ec:	nop	dword ptr [rax]


0x5a1a:	nop	word ptr [rax + rax]


0x5a56:	nop	word ptr cs:[rax + rax]


0x5a8a:	nop	word ptr [rax + rax]


0x5ac6:	nop	word ptr cs:[rax + rax]


0x5b0c:	nop	dword ptr [rax]


0x5b5c:	nop	dword ptr [rax]


0x5b68:	nop	dword ptr [rax + rax]


0x5b9a:	nop	word ptr [rax + rax]


0x5bd2:	nop	word ptr [rax + rax]


0x5c02:	nop	word ptr [rax + rax]


0x5c3e:	nop	


0x5c6f:	nop	


0x5cbd:	nop	dword ptr [rax]


0x5ccb:	nop	dword ptr [rax + rax]


0x5ce5:	nop	dword ptr [rax]


0x5cfd:	nop	dword ptr [rax]


0x5d12:	nop	word ptr [rax + rax]


0x5d2d:	nop	dword ptr [rax]


0x5d45:	nop	dword ptr [rax]


0x5d5d:	nop	dword ptr [rax]


0x5d75:	nop	dword ptr [rax]


0x5d8d:	nop	dword ptr [rax]


0x5da5:	nop	dword ptr [rax]


0x5e65:	nop	dword ptr [rax]


0x5ec3:	nop	dword ptr [rax + rax]


0x5eef:	nop	


0x602e:	nop	


0x6037:	nop	word ptr [rax + rax]


0x6089:	nop	dword ptr [rax]


0x609d:	nop	dword ptr [rax]


0x60aa:	nop	word ptr [rax + rax]


0x60ba:	nop	word ptr [rax + rax]


0x60d6:	nop	word ptr cs:[rax + rax]


0x60ea:	nop	word ptr [rax + rax]


0x6109:	nop	dword ptr [rax]


0x61a3:	nop	dword ptr [rax + rax]


0x6202:	nop	word ptr [rax + rax]


0x62da:	nop	word ptr [rax + rax]


0x62f9:	nop	dword ptr [rax]


0x6326:	nop	word ptr cs:[rax + rax]


0x638b:	nop	dword ptr [rax + rax]


0x6396:	nop	word ptr cs:[rax + rax]


0x63ad:	nop	dword ptr [rax]


0x63cf:	nop	


0x63f2:	nop	word ptr [rax + rax]


0x643f:	nop	


0x645d:	nop	dword ptr [rax]


0x6503:	nop	dword ptr [rax + rax]


0x651f:	nop	


0x6561:	nop	dword ptr [rax]


0x658e:	nop	


0x65d5:	nop	dword ptr [rax]


0x660d:	nop	dword ptr [rax]


0x6656:	nop	word ptr cs:[rax + rax]


0x666a:	nop	word ptr [rax + rax]


0x6684:	nop	dword ptr [rax]


0x669c:	nop	dword ptr [rax]


0x6717:	nop	word ptr [rax + rax]


0x675c:	nop	dword ptr [rax]


0x67e2:	nop	word ptr [rax + rax]


0x6822:	nop	word ptr [rax + rax]


0x691f:	nop	


0x692e:	nop	


0x693e:	nop	


0x696c:	nop	dword ptr [rax]


0x6986:	nop	word ptr cs:[rax + rax]


0x69d2:	nop	word ptr [rax + rax]


0x6a88:	nop	dword ptr [rax + rax]


0x6bc7:	nop	word ptr [rax + rax]


0x6d05:	nop	dword ptr [rax]


0x6d23:	nop	dword ptr [rax + rax]


0x6d53:	nop	dword ptr [rax + rax]


0x6d87:	nop	word ptr [rax + rax]


0x6e15:	nop	dword ptr [rax]


0x70ba:	nop	word ptr [rax + rax]


0x70e6:	nop	word ptr cs:[rax + rax]


0x7126:	nop	word ptr cs:[rax + rax]


0x7141:	nop	dword ptr [rax]


0x7156:	nop	word ptr cs:[rax + rax]


0x71ab:	nop	dword ptr [rax + rax]


0x7244:	nop	dword ptr [rax]


0x734b:	nop	dword ptr [rax + rax]


0x740c:	nop	dword ptr [rax]


0x75a2:	nop	word ptr [rax + rax]


0x762f:	nop	


0x7679:	nop	dword ptr [rax]


0x76d6:	nop	word ptr cs:[rax + rax]


0x77f1:	nop	dword ptr [rax]


0x782f:	nop	


0x7a5e:	nop	


0x7a74:	nop	dword ptr [rax]


0x7a8e:	nop	


0x7a9e:	nop	


0x7ac8:	nop	dword ptr [rax + rax]


0x7b04:	nop	dword ptr [rax]


0x7b27:	nop	word ptr [rax + rax]


0x7b49:	nop	dword ptr [rax]


0x7be5:	nop	dword ptr [rax]


0x7bfd:	nop	dword ptr [rax]


0x7c11:	nop	dword ptr [rax]


0x7c2c:	nop	dword ptr [rax]


0x7caf:	nop	


0x7cff:	nop	


0x7d61:	nop	dword ptr [rax]


0x7d7f:	nop	


0x7deb:	nop	dword ptr [rax + rax]


0x7e75:	nop	dword ptr [rax]


0x7f7d:	nop	dword ptr [rax]


0x7f9c:	nop	dword ptr [rax]


0x7fbc:	nop	dword ptr [rax]


0x7fcc:	nop	dword ptr [rax]


0x7fdc:	nop	dword ptr [rax]


0x808d:	nop	dword ptr [rax]


0x80f1:	nop	dword ptr [rax]


0x80fb:	nop	dword ptr [rax + rax]


0x8113:	nop	dword ptr [rax + rax]


0x8121:	nop	dword ptr [rax]


0x814a:	nop	word ptr [rax + rax]


0x8171:	nop	dword ptr [rax]


0x81a9:	nop	dword ptr [rax]


0x82ac:	nop	dword ptr [rax]


0x833b:	nop	dword ptr [rax + rax]


0x83a9:	nop	dword ptr [rax]


0x8407:	nop	word ptr [rax + rax]


0x8462:	nop	word ptr [rax + rax]


0x852c:	nop	dword ptr [rax]


0x859b:	nop	dword ptr [rax + rax]


0x867d:	nop	dword ptr [rax]


0x86b3:	nop	dword ptr [rax + rax]


0x86ba:	nop	word ptr [rax + rax]


0x86cd:	nop	dword ptr [rax]


0x86fc:	nop	dword ptr [rax]


0x8726:	nop	word ptr cs:[rax + rax]


0x8757:	nop	word ptr [rax + rax]


0x8821:	nop	dword ptr [rax]


0x88e7:	nop	word ptr [rax + rax]


0x88f4:	nop	dword ptr [rax]


0x8939:	nop	dword ptr [rax]


0x8a09:	nop	dword ptr [rax]


0x8b03:	nop	dword ptr [rax + rax]


0x8bfd:	nop	dword ptr [rax]


0x8c1b:	nop	dword ptr [rax + rax]


0x8c8f:	nop	


0x8ca6:	nop	word ptr cs:[rax + rax]


0x8d3d:	nop	dword ptr [rax]


0x8d7a:	nop	word ptr [rax + rax]


0x8dab:	nop	dword ptr [rax + rax]


0x8dd5:	nop	dword ptr [rax]


0x8df5:	nop	dword ptr [rax]


0x8e15:	nop	dword ptr [rax]


0x8ea5:	nop	dword ptr [rax]


0x8eee:	nop	


0x8ff4:	nop	dword ptr [rax]


0x9059:	nop	dword ptr [rax]


0x9089:	nop	dword ptr [rax]


0x909c:	nop	dword ptr [rax]


0x91d7:	nop	word ptr [rax + rax]


0x9291:	nop	dword ptr [rax]


0x92a3:	nop	dword ptr [rax + rax]


0x92bc:	nop	dword ptr [rax]


0x92de:	nop	


0x9337:	nop	word ptr [rax + rax]


0x943a:	nop	word ptr [rax + rax]


0x94b2:	nop	word ptr [rax + rax]


0x94cc:	nop	dword ptr [rax]


0x9501:	nop	dword ptr [rax]


0x96b6:	nop	word ptr cs:[rax + rax]


0x979c:	nop	dword ptr [rax]


0x9849:	nop	dword ptr [rax]


0x98e7:	nop	word ptr [rax + rax]


0x9919:	nop	dword ptr [rax]


0x992a:	nop	word ptr [rax + rax]


0x9971:	nop	dword ptr [rax]


0x99ff:	nop	


0x9a5e:	nop	


0x9a6c:	nop	dword ptr [rax]


0x9a73:	nop	dword ptr [rax + rax]


0x9a94:	nop	dword ptr [rax]


0x9aa5:	nop	dword ptr [rax]


0x9b08:	nop	dword ptr [rax + rax]


0x9b6a:	nop	word ptr [rax + rax]


0x9b82:	nop	word ptr [rax + rax]


0x9cfc:	nop	dword ptr [rax]


0x9d0d:	nop	dword ptr [rax]


0x9d31:	nop	dword ptr [rax]


0x9d42:	nop	word ptr [rax + rax]


0x9d5e:	nop	


0x9e54:	nop	dword ptr [rax]


0x9e63:	nop	dword ptr [rax + rax]


0x9e95:	nop	dword ptr [rax]


0x9f35:	nop	dword ptr [rax]


0x9f44:	nop	dword ptr [rax]


0x9f79:	nop	dword ptr [rax]


0x9fa2:	nop	word ptr [rax + rax]


0xa019:	nop	dword ptr [rax]


0xa041:	nop	dword ptr [rax]


0xa071:	nop	dword ptr [rax]


0xa0f9:	nop	dword ptr [rax]


0xa12e:	nop	


0xa165:	nop	dword ptr [rax]


0xa1ce:	nop	


0xa2d5:	nop	dword ptr [rax]


0xa395:	nop	dword ptr [rax]


0xa474:	nop	dword ptr [rax]


0xa4b7:	nop	word ptr [rax + rax]


0xa4cd:	nop	dword ptr [rax]


0xa547:	nop	word ptr [rax + rax]


0xa97f:	nop	


0xa9ab:	nop	dword ptr [rax + rax]


0xaa9a:	nop	word ptr [rax + rax]


0xac98:	nop	dword ptr [rax + rax]


0xacd8:	nop	dword ptr [rax + rax]


0xad4d:	nop	dword ptr [rax]


0xae16:	nop	word ptr cs:[rax + rax]


0xaea2:	nop	word ptr [rax + rax]


0xaf83:	nop	dword ptr [rax + rax]


0xb015:	nop	dword ptr [rax]


0xb173:	nop	dword ptr [rax + rax]


0xb18f:	nop	


0xb2cb:	nop	dword ptr [rax + rax]


0xb3d3:	nop	dword ptr [rax + rax]


0xb4d8:	nop	dword ptr [rax + rax]


0xb522:	nop	word ptr [rax + rax]


0xb5a6:	nop	word ptr cs:[rax + rax]


0xb62b:	nop	dword ptr [rax + rax]


0xb6c5:	nop	dword ptr [rax]


0xb7f1:	nop	dword ptr [rax]


0xbcd8:	nop	dword ptr [rax + rax]


0xbcea:	nop	word ptr [rax + rax]


0xbd28:	nop	dword ptr [rax + rax]


0xbdfa:	nop	word ptr [rax + rax]


0xbef6:	nop	word ptr cs:[rax + rax]


0xbf94:	nop	dword ptr [rax]


0xc323:	nop	dword ptr [rax + rax]


0xc348:	nop	dword ptr [rax + rax]


0xc379:	nop	dword ptr [rax]


0xc38f:	nop	


0xc3ad:	nop	dword ptr [rax]


0xc3bd:	nop	dword ptr [rax]


0xc3f5:	nop	dword ptr [rax]


0xc411:	nop	dword ptr [rax]


0xc429:	nop	dword ptr [rax]


0xc6d4:	nop	dword ptr [rax]


0xc833:	nop	dword ptr [rax + rax]


0xc97b:	nop	dword ptr [rax + rax]


0xca09:	nop	dword ptr [rax]


0xca24:	nop	dword ptr [rax]


0xca41:	nop	dword ptr [rax]


0xca9d:	nop	dword ptr [rax]


0xcabd:	nop	dword ptr [rax]


0xcaea:	nop	word ptr [rax + rax]


0xcd6b:	nop	dword ptr [rax + rax]


0xcea9:	nop	dword ptr [rax]


0xcf59:	nop	dword ptr [rax]


0xcfab:	nop	dword ptr [rax + rax]


0xcfef:	nop	


0xd086:	nop	word ptr cs:[rax + rax]


0xd15e:	nop	


0xd1c3:	nop	dword ptr [rax + rax]


0xd1da:	nop	word ptr [rax + rax]


0xd224:	nop	dword ptr [rax]


0xd267:	nop	word ptr [rax + rax]


0xd278:	nop	dword ptr [rax + rax]


0xd2fa:	nop	word ptr [rax + rax]


0xd33f:	nop	


0xd3c2:	nop	word ptr [rax + rax]


0xd58a:	nop	word ptr [rax + rax]


0xd639:	nop	dword ptr [rax]


0xd647:	nop	word ptr [rax + rax]


0xd761:	nop	dword ptr [rax]


0xd78e:	nop	


0xd819:	nop	dword ptr [rax]


0xd93b:	nop	dword ptr [rax + rax]


0xda31:	nop	dword ptr [rax]


0xda4c:	nop	dword ptr [rax]


0xda81:	nop	dword ptr [rax]


0xdaec:	nop	dword ptr [rax]


0xdc03:	nop	dword ptr [rax + rax]


0xdc73:	nop	dword ptr [rax + rax]


0xdd0b:	nop	dword ptr [rax + rax]


0xde0a:	nop	word ptr [rax + rax]


0xde53:	nop	dword ptr [rax + rax]


0xde7f:	nop	


0xdec5:	nop	dword ptr [rax]


0xdf23:	nop	dword ptr [rax + rax]


0xe05b:	nop	dword ptr [rax + rax]


0xe0f6:	nop	word ptr cs:[rax + rax]


0xe142:	nop	word ptr [rax + rax]


0xe153:	nop	dword ptr [rax + rax]


0xe1ae:	nop	


0xe2d9:	nop	dword ptr [rax]


0xe436:	nop	word ptr cs:[rax + rax]


0xe46b:	nop	dword ptr [rax + rax]


0xe481:	nop	dword ptr [rax]


0xe4bb:	nop	dword ptr [rax + rax]


0xe9f8:	nop	dword ptr [rax + rax]


0xea1c:	nop	dword ptr [rax]


0xea62:	nop	word ptr [rax + rax]


0xec01:	nop	dword ptr [rax]


0xed2e:	nop	


0xef9e:	nop	


0xeffb:	nop	dword ptr [rax + rax]


0xf045:	nop	dword ptr [rax]


0xf0a6:	nop	word ptr cs:[rax + rax]


0xf0ed:	nop	dword ptr [rax]


0xf11c:	nop	dword ptr [rax]


0xf15c:	nop	dword ptr [rax]


0xf195:	nop	dword ptr [rax]


0xf1c6:	nop	word ptr cs:[rax + rax]


0xf354:	nop	dword ptr [rax]


0xf3cd:	nop	dword ptr [rax]


0xf40e:	nop	


0xf42b:	nop	dword ptr [rax + rax]


0xf47e:	nop	


0xf48d:	nop	dword ptr [rax]


0xf4ab:	nop	dword ptr [rax + rax]


0xf4ba:	nop	word ptr [rax + rax]


0xf4e8:	nop	dword ptr [rax + rax]


0xf54c:	nop	dword ptr [rax]


0xf5b9:	nop	dword ptr [rax]


0xf5f1:	nop	dword ptr [rax]


0xf987:	nop	word ptr [rax + rax]


0xfa1e:	nop	


0xfb3e:	nop	


0xfcc2:	nop	word ptr [rax + rax]


0xfcf1:	nop	dword ptr [rax]


0xfde2:	nop	word ptr [rax + rax]


0xfee1:	nop	dword ptr [rax]


0xff0a:	nop	word ptr [rax + rax]


0xff2c:	nop	dword ptr [rax]


0xffad:	nop	dword ptr [rax]


0xffbe:	nop	


0x10038:	nop	dword ptr [rax + rax]


0x10093:	nop	dword ptr [rax + rax]


0x100b8:	nop	dword ptr [rax + rax]


0x100dc:	nop	dword ptr [rax]


0x10171:	nop	dword ptr [rax]


0x101eb:	nop	dword ptr [rax + rax]


0x10201:	nop	dword ptr [rax]


0x10212:	nop	word ptr [rax + rax]


0x10259:	nop	dword ptr [rax]


0x103cc:	nop	dword ptr [rax]


0x103e7:	nop	word ptr [rax + rax]


0x10502:	nop	word ptr [rax + rax]


0x1053f:	nop	


0x10557:	nop	word ptr [rax + rax]


0x105e6:	nop	word ptr cs:[rax + rax]


0x10662:	nop	word ptr [rax + rax]


0x10695:	nop	dword ptr [rax]


0x10796:	nop	word ptr cs:[rax + rax]


0x107c7:	nop	word ptr [rax + rax]


0x1082e:	nop	


0x10846:	nop	word ptr cs:[rax + rax]


0x108da:	nop	word ptr [rax + rax]


0x108fb:	nop	dword ptr [rax + rax]


0x1090e:	nop	


0x10932:	nop	word ptr [rax + rax]


0x10956:	nop	word ptr cs:[rax + rax]


0x10982:	nop	word ptr [rax + rax]


0x109af:	nop	


0x109be:	nop	


0x109db:	nop	dword ptr [rax + rax]


0x109ee:	nop	


0x10a0b:	nop	dword ptr [rax + rax]


0x10a3e:	nop	


0x10a5b:	nop	dword ptr [rax + rax]


0x10a7b:	nop	dword ptr [rax + rax]


0x10ccf:	nop	


0x10e34:	nop	dword ptr [rax]


0x10e69:	nop	dword ptr [rax]


0x10e83:	nop	dword ptr [rax + rax]


0x11256:	nop	word ptr cs:[rax + rax]


0x11317:	nop	word ptr [rax + rax]


0x1134c:	nop	dword ptr [rax]


0x113b5:	nop	dword ptr [rax]


0x11426:	nop	word ptr cs:[rax + rax]


0x11448:	nop	dword ptr [rax + rax]


0x1147a:	nop	word ptr [rax + rax]


0x1150d:	nop	dword ptr [rax]


0x1155c:	nop	dword ptr [rax]


0x11854:	nop	dword ptr [rax]


0x11fd3:	nop	dword ptr [rax + rax]


0x12147:	nop	word ptr [rax + rax]


0x1247c:	nop	dword ptr [rax]


0x124a2:	nop	word ptr [rax + rax]


0x124cf:	nop	


0x1257b:	nop	dword ptr [rax + rax]


0x1267a:	nop	word ptr [rax + rax]


0x129ae:	nop	


0x129c5:	nop	dword ptr [rax]


0x12a8f:	nop	


0x12cd3:	nop	dword ptr [rax + rax]


0x12e54:	nop	dword ptr [rax]


0x1300a:	nop	word ptr [rax + rax]


0x130a1:	nop	dword ptr [rax]


0x13158:	nop	dword ptr [rax + rax]


0x131bf:	nop	


0x1329a:	nop	word ptr [rax + rax]


0x132cd:	nop	dword ptr [rax]


0x13348:	nop	dword ptr [rax + rax]


0x133a5:	nop	dword ptr [rax]


0x1361c:	nop	dword ptr [rax]


0x13645:	nop	dword ptr [rax]


0x13666:	nop	word ptr cs:[rax + rax]


0x137f2:	nop	word ptr [rax + rax]


0x13a24:	nop	dword ptr [rax]


0x13b1c:	nop	dword ptr [rax]


0x13b39:	nop	dword ptr [rax]


0x13b59:	nop	dword ptr [rax]


0x13b9a:	nop	word ptr [rax + rax]


0x13ba8:	nop	dword ptr [rax + rax]


0x13c11:	nop	dword ptr [rax]


0x13c36:	nop	word ptr cs:[rax + rax]


0x13c4c:	nop	dword ptr [rax]


0x13c5c:	nop	dword ptr [rax]


0x13cd1:	nop	dword ptr [rax]


0x13e0c:	nop	dword ptr [rax]


0x13e5c:	nop	dword ptr [rax]


0x13e69:	nop	dword ptr [rax]


0x13f47:	nop	word ptr [rax + rax]


0x13f61:	nop	dword ptr [rax]


0x13ffb:	nop	dword ptr [rax + rax]


0x14005:	nop	dword ptr [rax]


0x140e4:	nop	dword ptr [rax]


0x14101:	nop	dword ptr [rax]


0x141b1:	nop	dword ptr [rax]


0x14214:	nop	dword ptr [rax]


0x14231:	nop	dword ptr [rax]


0x14242:	nop	word ptr [rax + rax]


0x1429a:	nop	word ptr [rax + rax]


0x142e6:	nop	word ptr cs:[rax + rax]


