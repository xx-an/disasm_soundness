0x54e0:	sub	rsp, 8
0x54e4:	add	rsp, 8
0x54e8:	ret	


0x54d0:	mov	rdx, qword ptr [rip + 0x202b31]
0x54d7:	xor	esi, esi
0x54d9:	jmp	0x1710


0x54c0:	ret	


0x5450:	push	r15
0x5452:	push	r14
0x5454:	mov	r15, rdx
0x5457:	push	r13
0x5459:	push	r12
0x545b:	lea	r12, [rip + 0x20262e]
0x5462:	push	rbp
0x5463:	lea	rbp, [rip + 0x20262e]
0x546a:	push	rbx
0x546b:	mov	r13d, edi
0x546e:	mov	r14, rsi
0x5471:	sub	rbp, r12
0x5474:	sub	rsp, 8
0x5478:	sar	rbp, 3
0x547c:	call	0x1450


0x53f0:	mov	rax, qword ptr [rdi + 8]
0x53f4:	cmp	qword ptr [rdi + 0x10], rax
0x53f8:	je	0x5400


0x53b0:	test	rdi, rdi
0x53b3:	push	rbx
0x53b4:	mov	rbx, rdi
0x53b7:	je	0x53ca


0x5330:	push	r12
0x5332:	push	rbp
0x5333:	push	rbx
0x5334:	mov	rbx, rdi
0x5337:	call	0x1640


0x52f0:	sub	rsp, 8
0x52f4:	mov	edi, 0xe
0x52f9:	call	0x1670


0x5290:	sub	rsp, 8
0x5294:	xor	esi, esi
0x5296:	call	0x16b0


0x5210:	push	r12
0x5212:	push	rbp
0x5213:	mov	rbp, rdi
0x5216:	push	rbx
0x5217:	call	0x14d0


0x5180:	push	r13
0x5182:	push	r12
0x5184:	mov	r13, rsi
0x5187:	push	rbp
0x5188:	push	rbx
0x5189:	mov	rbx, rdi
0x518c:	mov	r12, rdx
0x518f:	sub	rsp, 0x18
0x5193:	mov	rax, qword ptr fs:[0x28]
0x519c:	mov	qword ptr [rsp + 8], rax
0x51a1:	xor	eax, eax
0x51a3:	lea	rax, [rsp + 4]
0x51a8:	test	rdi, rdi
0x51ab:	cmove	rbx, rax
0x51af:	mov	rdi, rbx
0x51b2:	call	0x1580


0x5140:	lea	rsi, [rip + 0x1288]
0x5147:	sub	rsp, 8
0x514b:	mov	edx, 5
0x5150:	xor	edi, edi
0x5152:	call	0x1530


0x5120:	push	rbx
0x5121:	mov	rbx, rdi
0x5124:	call	0x1550


0x50f0:	push	rbp
0x50f1:	push	rbx
0x50f2:	mov	rbp, rdi
0x50f5:	mov	rdi, rsi
0x50f8:	mov	rbx, rsi
0x50fb:	sub	rsp, 8
0x50ff:	call	0x4ef0


0x50c0:	mov	rax, rdi
0x50c3:	sub	rsp, 8
0x50c7:	mul	rsi
0x50ca:	seto	dl
0x50cd:	test	rax, rax
0x50d0:	js	0x50e9


0x50a0:	push	rbx
0x50a1:	mov	rbx, rdi
0x50a4:	call	0x4ef0


0x5050:	test	rdi, rdi
0x5053:	mov	rax, qword ptr [rsi]
0x5056:	je	0x5080


0x4fc0:	test	rdi, rdi
0x4fc3:	mov	r9, rdx
0x4fc6:	mov	rcx, qword ptr [rsi]
0x4fc9:	je	0x5000


0x4f90:	mov	rax, rsi
0x4f93:	mul	rdx
0x4f96:	mov	rsi, rax
0x4f99:	seto	al
0x4f9c:	test	rsi, rsi
0x4f9f:	js	0x4fab


0x4f50:	test	rsi, rsi
0x4f53:	push	rbx
0x4f54:	mov	rbx, rsi
0x4f57:	jne	0x4f5e


0x4f40:	jmp	0x4ef0


0x4f10:	mov	rax, rdi
0x4f13:	mul	rsi
0x4f16:	mov	rdi, rax
0x4f19:	seto	al
0x4f1c:	test	rdi, rdi
0x4f1f:	js	0x4f2b


0x4ef0:	push	rbx
0x4ef1:	mov	rbx, rdi
0x4ef4:	call	0x1650


0x4e70:	push	rbx
0x4e71:	lea	rsi, [rip + 0x124a]
0x4e78:	mov	edx, 5
0x4e7d:	xor	edi, edi
0x4e7f:	call	0x1530


0x4d90:	push	rbp
0x4d91:	push	rbx
0x4d92:	mov	r10d, 0x20
0x4d98:	xor	r11d, r11d
0x4d9b:	sub	rsp, 0xb8
0x4da2:	mov	rax, qword ptr fs:[0x28]
0x4dab:	mov	qword ptr [rsp + 0x78], rax
0x4db0:	xor	eax, eax
0x4db2:	lea	rax, [rsp + 0xd0]
0x4dba:	mov	qword ptr [rsp + 0xa0], r8
0x4dc2:	lea	rbx, [rsp + 0xd0]
0x4dca:	lea	r8, [rsp + 0x20]
0x4dcf:	mov	qword ptr [rsp + 0xa8], r9
0x4dd7:	mov	dword ptr [rsp + 8], 0x20
0x4ddf:	mov	qword ptr [rsp + 0x10], rax
0x4de4:	lea	rax, [rsp + 0x80]
0x4dec:	xor	r9d, r9d
0x4def:	mov	qword ptr [rsp + 0x18], rax
0x4df4:	mov	rbp, rax
0x4df7:	nop	word ptr [rax + rax]
0x4e00:	cmp	r10d, 0x2f
0x4e04:	ja	0x4e5c


0x4d10:	sub	rsp, 0x68
0x4d14:	mov	r10, r8
0x4d17:	xor	r9d, r9d
0x4d1a:	mov	rax, qword ptr fs:[0x28]
0x4d23:	mov	qword ptr [rsp + 0x58], rax
0x4d28:	xor	eax, eax
0x4d2a:	mov	r8, rsp
0x4d2d:	nop	dword ptr [rax]
0x4d30:	mov	eax, dword ptr [r10]
0x4d33:	cmp	eax, 0x2f
0x4d36:	ja	0x4d7a


0x4cf0:	xor	r9d, r9d
0x4cf3:	cmp	qword ptr [r8], 0
0x4cf7:	je	0x4d0b


0x48d0:	push	r15
0x48d2:	push	r14
0x48d4:	push	r13
0x48d6:	push	r12
0x48d8:	mov	r12, r9
0x48db:	push	rbp
0x48dc:	push	rbx
0x48dd:	mov	rbp, rdi
0x48e0:	mov	rbx, r8
0x48e3:	sub	rsp, 0x28
0x48e7:	test	rsi, rsi
0x48ea:	je	0x4a08


0x4870:	push	r13
0x4872:	push	r12
0x4874:	mov	r13d, edi
0x4877:	push	rbp
0x4878:	push	rbx
0x4879:	mov	r12, rsi
0x487c:	mov	rbx, rdx
0x487f:	sub	rsp, 8
0x4883:	nop	dword ptr [rax + rax]
0x4888:	mov	rdx, rbx
0x488b:	mov	rsi, r12
0x488e:	mov	edi, r13d
0x4891:	call	0x14e0


0x4810:	push	r13
0x4812:	push	r12
0x4814:	mov	r13d, edi
0x4817:	push	rbp
0x4818:	push	rbx
0x4819:	mov	r12, rsi
0x481c:	mov	rbx, rdx
0x481f:	sub	rsp, 8
0x4823:	nop	dword ptr [rax + rax]
0x4828:	mov	rdx, rbx
0x482b:	mov	rsi, r12
0x482e:	mov	edi, r13d
0x4831:	call	0x15f0


0x47f0:	lea	rcx, [rip + 0x203869]
0x47f7:	mov	rsi, rdi
0x47fa:	mov	rdx, -1
0x4801:	xor	edi, edi
0x4803:	jmp	0x3eb0


0x47d0:	lea	rcx, [rip + 0x203889]
0x47d7:	mov	rdx, -1
0x47de:	jmp	0x3eb0


0x47b0:	lea	rcx, [rip + 0x2038a9]
0x47b7:	mov	rdx, rsi
0x47ba:	mov	rsi, rdi
0x47bd:	xor	edi, edi
0x47bf:	jmp	0x3eb0


0x47a0:	lea	rcx, [rip + 0x2038b9]
0x47a7:	jmp	0x3eb0


0x4780:	mov	r8, rcx
0x4783:	mov	rcx, rdx
0x4786:	mov	rdx, rsi
0x4789:	mov	rsi, rdi
0x478c:	xor	edi, edi
0x478e:	jmp	0x46b0


0x4760:	mov	rcx, rdx
0x4763:	mov	r8, -1
0x476a:	mov	rdx, rsi
0x476d:	mov	rsi, rdi
0x4770:	xor	edi, edi
0x4772:	jmp	0x46b0


0x4750:	mov	r8, -1
0x4757:	jmp	0x46b0


0x46b0:	sub	rsp, 0x48
0x46b4:	mov	r9, rcx
0x46b7:	mov	rcx, qword ptr [rip + 0x203b92]
0x46be:	movdqa	xmm0, xmmword ptr [rip + 0x203b5a]
0x46c6:	mov	rax, qword ptr fs:[0x28]
0x46cf:	mov	qword ptr [rsp + 0x38], rax
0x46d4:	xor	eax, eax
0x46d6:	movaps	xmmword ptr [rsp], xmm0
0x46da:	test	rsi, rsi
0x46dd:	mov	qword ptr [rsp + 0x30], rcx
0x46e2:	mov	dword ptr [rsp], 0xa
0x46e9:	movdqa	xmm0, xmmword ptr [rip + 0x203b3f]
0x46f1:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x46f6:	movdqa	xmm0, xmmword ptr [rip + 0x203b42]
0x46fe:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x4703:	je	0x4737


0x4620:	sub	rsp, 0x48
0x4624:	mov	rax, rdx
0x4627:	mov	rdx, qword ptr fs:[0x28]
0x4630:	mov	qword ptr [rsp + 0x38], rdx
0x4635:	xor	edx, edx
0x4637:	cmp	esi, 0xa
0x463a:	je	0x46a4


0x4610:	mov	edx, 0x3a
0x4615:	jmp	0x4540


0x45f0:	mov	edx, 0x3a
0x45f5:	mov	rsi, -1
0x45fc:	jmp	0x4540


0x45e0:	movsx	edx, sil
0x45e4:	mov	rsi, -1
0x45eb:	jmp	0x4540


0x4540:	sub	rsp, 0x48
0x4544:	mov	ecx, edx
0x4546:	mov	rax, qword ptr fs:[0x28]
0x454f:	mov	qword ptr [rsp + 0x38], rax
0x4554:	xor	eax, eax
0x4556:	mov	rax, qword ptr [rip + 0x203cf3]
0x455d:	mov	r8, rsp
0x4560:	and	ecx, 0x1f
0x4563:	movdqa	xmm0, xmmword ptr [rip + 0x203cb5]
0x456b:	mov	qword ptr [rsp + 0x30], rax
0x4570:	mov	eax, edx
0x4572:	movaps	xmmword ptr [rsp], xmm0
0x4576:	shr	al, 5
0x4579:	movzx	eax, al
0x457c:	lea	r9, [r8 + rax*4 + 8]
0x4581:	movdqa	xmm0, xmmword ptr [rip + 0x203ca7]
0x4589:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x458e:	movdqa	xmm0, xmmword ptr [rip + 0x203caa]
0x4596:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x459b:	mov	edx, dword ptr [r9]
0x459e:	mov	eax, edx
0x45a0:	shr	eax, cl
0x45a2:	not	eax
0x45a4:	and	eax, 1
0x45a7:	shl	eax, cl
0x45a9:	mov	rcx, r8
0x45ac:	xor	eax, edx
0x45ae:	mov	rdx, rsi
0x45b1:	mov	rsi, rdi
0x45b4:	mov	dword ptr [r9], eax
0x45b7:	xor	edi, edi
0x45b9:	call	0x3eb0


0x4530:	mov	rcx, rdx
0x4533:	mov	rdx, rsi
0x4536:	mov	esi, edi
0x4538:	xor	edi, edi
0x453a:	jmp	0x4490


0x4520:	mov	rdx, rsi
0x4523:	mov	esi, edi
0x4525:	xor	edi, edi
0x4527:	jmp	0x4400


0x4490:	sub	rsp, 0x48
0x4494:	mov	rax, rdx
0x4497:	mov	rdx, rcx
0x449a:	mov	rcx, qword ptr fs:[0x28]
0x44a3:	mov	qword ptr [rsp + 0x38], rcx
0x44a8:	xor	ecx, ecx
0x44aa:	cmp	esi, 0xa
0x44ad:	je	0x4510


0x4400:	sub	rsp, 0x48
0x4404:	mov	rax, rdx
0x4407:	mov	rdx, qword ptr fs:[0x28]
0x4410:	mov	qword ptr [rsp + 0x38], rdx
0x4415:	xor	edx, edx
0x4417:	cmp	esi, 0xa
0x441a:	je	0x4484


0x43e0:	lea	rcx, [rip + 0x203e39]
0x43e7:	mov	rdx, rsi
0x43ea:	mov	rsi, rdi
0x43ed:	xor	edi, edi
0x43ef:	jmp	0x3eb0


0x43c0:	lea	rcx, [rip + 0x203e59]
0x43c7:	mov	rsi, rdi
0x43ca:	mov	rdx, -1
0x43d1:	xor	edi, edi
0x43d3:	jmp	0x3eb0


0x43b0:	lea	rcx, [rip + 0x203e69]
0x43b7:	jmp	0x3eb0


0x4390:	lea	rcx, [rip + 0x203e89]
0x4397:	mov	rdx, -1
0x439e:	jmp	0x3eb0


0x42f0:	mov	eax, dword ptr [rip + 0x203da2]
0x42f6:	push	r12
0x42f8:	mov	r12, qword ptr [rip + 0x203da1]
0x42ff:	push	rbp
0x4300:	push	rbx
0x4301:	cmp	eax, 1
0x4304:	jle	0x4331


0x42e0:	mov	rcx, rdx
0x42e3:	xor	edx, edx
0x42e5:	jmp	0x41f0


0x41f0:	push	r15
0x41f2:	push	r14
0x41f4:	lea	rax, [rip + 0x204025]
0x41fb:	push	r13
0x41fd:	push	r12
0x41ff:	mov	r12, rdx
0x4202:	push	rbp
0x4203:	push	rbx
0x4204:	mov	rbx, rcx
0x4207:	mov	r14, rdi
0x420a:	mov	r15, rsi
0x420d:	sub	rsp, 0x38
0x4211:	test	rcx, rcx
0x4214:	cmove	rbx, rax
0x4218:	xor	ebp, ebp
0x421a:	call	0x14a0


0x4170:	push	r15
0x4172:	push	r14
0x4174:	lea	rax, [rip + 0x2040a5]
0x417b:	push	r13
0x417d:	push	r12
0x417f:	mov	r13, rdi
0x4182:	push	rbp
0x4183:	push	rbx
0x4184:	mov	rbx, r8
0x4187:	mov	r14, rsi
0x418a:	mov	r15, rdx
0x418d:	sub	rsp, 0x18
0x4191:	test	r8, r8
0x4194:	cmove	rbx, rax
0x4198:	mov	qword ptr [rsp + 8], rcx
0x419d:	call	0x14a0


0x4140:	lea	rax, [rip + 0x2040d9]
0x4147:	test	rdi, rdi
0x414a:	cmove	rdi, rax
0x414e:	test	rsi, rsi
0x4151:	mov	dword ptr [rdi], 0xa
0x4157:	je	0x4167


0x4120:	lea	rax, [rip + 0x2040f9]
0x4127:	test	rdi, rdi
0x412a:	cmove	rdi, rax
0x412e:	mov	eax, dword ptr [rdi + 4]
0x4131:	mov	dword ptr [rdi + 4], esi
0x4134:	ret	


0x40e0:	lea	rax, [rip + 0x204139]
0x40e7:	test	rdi, rdi
0x40ea:	mov	ecx, esi
0x40ec:	cmove	rdi, rax
0x40f0:	mov	eax, esi
0x40f2:	and	ecx, 0x1f
0x40f5:	shr	al, 5
0x40f8:	movzx	eax, al
0x40fb:	lea	rdi, [rdi + rax*4 + 8]
0x4100:	mov	esi, dword ptr [rdi]
0x4102:	mov	eax, esi
0x4104:	shr	eax, cl
0x4106:	xor	edx, eax
0x4108:	and	eax, 1
0x410b:	and	edx, 1
0x410e:	shl	edx, cl
0x4110:	xor	edx, esi
0x4112:	mov	dword ptr [rdi], edx
0x4114:	ret	


0x40c0:	lea	rax, [rip + 0x204159]
0x40c7:	test	rdi, rdi
0x40ca:	cmove	rdi, rax
0x40ce:	mov	dword ptr [rdi], esi
0x40d0:	ret	


0x40a0:	lea	rax, [rip + 0x204179]
0x40a7:	test	rdi, rdi
0x40aa:	cmove	rdi, rax
0x40ae:	mov	eax, dword ptr [rdi]
0x40b0:	ret	


0x4060:	push	r12
0x4062:	push	rbp
0x4063:	push	rbx
0x4064:	mov	rbx, rdi
0x4067:	call	0x14a0


0x3eb0:	push	r15
0x3eb2:	push	r14
0x3eb4:	movsxd	r15, edi
0x3eb7:	push	r13
0x3eb9:	push	r12
0x3ebb:	mov	r14, rdx
0x3ebe:	push	rbp
0x3ebf:	push	rbx
0x3ec0:	mov	rbp, rcx
0x3ec3:	sub	rsp, 0x28
0x3ec7:	mov	qword ptr [rsp + 8], rsi
0x3ecc:	call	0x14a0


0x2c70:	push	r15
0x2c72:	push	r14
0x2c74:	mov	r15d, r8d
0x2c77:	push	r13
0x2c79:	push	r12
0x2c7b:	mov	r14, rdi
0x2c7e:	push	rbp
0x2c7f:	push	rbx
0x2c80:	mov	ebx, r9d
0x2c83:	mov	r13, rsi
0x2c86:	mov	rbp, rcx
0x2c89:	and	ebx, 2
0x2c8c:	sub	rsp, 0xb8
0x2c93:	mov	rax, qword ptr [rsp + 0xf0]
0x2c9b:	mov	qword ptr [rsp + 0x10], rdx
0x2ca0:	mov	dword ptr [rsp + 8], r8d
0x2ca5:	mov	dword ptr [rsp + 0x78], r9d
0x2caa:	mov	qword ptr [rsp + 0x20], rax
0x2caf:	mov	rax, qword ptr [rsp + 0xf8]
0x2cb7:	mov	qword ptr [rsp + 0x68], rax
0x2cbc:	mov	rax, qword ptr [rsp + 0x100]
0x2cc4:	mov	qword ptr [rsp + 0x60], rax
0x2cc9:	mov	rax, qword ptr fs:[0x28]
0x2cd2:	mov	qword ptr [rsp + 0xa8], rax
0x2cda:	xor	eax, eax
0x2cdc:	call	0x1540


0x2b80:	push	rbp
0x2b81:	push	rbx
0x2b82:	mov	rbp, rdi
0x2b85:	mov	ebx, esi
0x2b87:	sub	rsp, 8
0x2b8b:	call	0x52f0


0x2ae0:	test	rdi, rdi
0x2ae3:	push	rbx
0x2ae4:	je	0x2b5d


0x2a60:	push	r13
0x2a62:	push	r12
0x2a64:	push	rbp
0x2a65:	push	rbx
0x2a66:	sub	rsp, 8
0x2a6a:	test	rdx, rdx
0x2a6d:	je	0x2ad1


0x2a30:	test	rdi, rdi
0x2a33:	je	0x2a50


0x2a20:	jmp	0x15e0


0x2970:	push	rbp
0x2971:	push	rbx
0x2972:	sub	rsp, 8
0x2976:	mov	rdi, qword ptr [rip + 0x20574b]
0x297d:	call	0x5210


0x2960:	mov	byte ptr [rip + 0x205799], dil
0x2967:	ret	


0x2950:	mov	qword ptr [rip + 0x2057b1], rdi
0x2957:	ret	


0x2570:	push	r13
0x2572:	push	r12
0x2574:	mov	edx, 5
0x2579:	push	rbp
0x257a:	push	rbx
0x257b:	mov	ebp, edi
0x257d:	sub	rsp, 0x88
0x2584:	mov	rbx, qword ptr [rip + 0x205b85]
0x258b:	mov	rax, qword ptr fs:[0x28]
0x2594:	mov	qword ptr [rsp + 0x78], rax
0x2599:	xor	eax, eax
0x259b:	test	edi, edi
0x259d:	je	0x25cd


0x24f0:	mov	rcx, qword ptr [rip + 0x205b31]
0x24f7:	lea	rax, [rip + 0x205b23]
0x24fe:	jmp	0x250d


0x24e0:	push	rbp
0x24e1:	mov	rbp, rsp
0x24e4:	pop	rbp
0x24e5:	jmp	0x2450


0x24a0:	cmp	byte ptr [rip + 0x205c41], 0
0x24a7:	jne	0x24d8


0x2450:	lea	rdi, [rip + 0x205c69]
0x2457:	lea	rsi, [rip + 0x205c62]
0x245e:	push	rbp
0x245f:	sub	rsi, rdi
0x2462:	mov	rbp, rsp
0x2465:	sar	rsi, 3
0x2469:	mov	rax, rsi
0x246c:	shr	rax, 0x3f
0x2470:	add	rsi, rax
0x2473:	sar	rsi, 1
0x2476:	je	0x2490


0x2410:	lea	rdi, [rip + 0x205ca9]
0x2417:	push	rbp
0x2418:	lea	rax, [rip + 0x205ca1]
0x241f:	cmp	rax, rdi
0x2422:	mov	rbp, rsp
0x2425:	je	0x2440


0x23e0:	xor	ebp, ebp
0x23e2:	mov	r9, rdx
0x23e5:	pop	rsi
0x23e6:	mov	rdx, rsp
0x23e9:	and	rsp, 0xfffffffffffffff0
0x23ed:	push	rax
0x23ee:	push	rsp
0x23ef:	lea	r8, [rip + 0x30ca]
0x23f6:	lea	rcx, [rip + 0x3053]
0x23fd:	lea	rdi, [rip - 0xc34]
0x2404:	call	qword ptr [rip + 0x205bc6]


0x17d0:	push	r15
0x17d2:	push	r14
0x17d4:	mov	r14, rsi
0x17d7:	push	r13
0x17d9:	push	r12
0x17db:	xor	r12d, r12d
0x17de:	push	rbp
0x17df:	push	rbx
0x17e0:	sub	rsp, 0x158
0x17e7:	mov	qword ptr [rsp + 0x48], rsi
0x17ec:	mov	dword ptr [rsp + 0x50], edi
0x17f0:	mov	rax, qword ptr fs:[0x28]
0x17f9:	mov	qword ptr [rsp + 0x148], rax
0x1801:	xor	eax, eax
0x1803:	call	0x1720


0x17a0:	push	rbx
0x17a1:	lea	rsi, [rip + 0x3d5c]
0x17a8:	mov	edx, 5
0x17ad:	xor	edi, edi
0x17af:	call	0x1530


0x1450:	sub	rsp, 8
0x1454:	mov	rax, qword ptr [rip + 0x206b7d]
0x145b:	test	rax, rax
0x145e:	je	0x1462


0x1710:	jmp	qword ptr [rip + 0x206872]


0x5400:	mov	rax, qword ptr [rdi + 0x20]
0x5404:	cmp	qword ptr [rdi + 0x28], rax
0x5408:	jne	0x53fa


0x53fa:	jmp	0x1700


0x53ca:	mov	rdi, rbx
0x53cd:	pop	rbx
0x53ce:	jmp	0x1660


0x53b9:	call	0x1690


0x1640:	jmp	qword ptr [rip + 0x2068da]


0x1670:	jmp	qword ptr [rip + 0x2068c2]


0x16b0:	jmp	qword ptr [rip + 0x2068a2]


0x14d0:	jmp	qword ptr [rip + 0x206992]


0x1580:	jmp	qword ptr [rip + 0x20693a]


0x1530:	jmp	qword ptr [rip + 0x206962]


0x1550:	jmp	qword ptr [rip + 0x206952]


0x50e9:	call	0x5140


0x50d2:	movzx	edx, dl
0x50d5:	test	rdx, rdx
0x50d8:	jne	0x50e9


0x5080:	test	rax, rax
0x5083:	mov	edx, 0x80
0x5088:	cmove	rax, rdx
0x508c:	test	rax, rax
0x508f:	jns	0x5072


0x5058:	movabs	rdx, 0x5555555555555553
0x5062:	cmp	rax, rdx
0x5065:	ja	0x5091


0x5000:	test	rcx, rcx
0x5003:	je	0x5028


0x4fcb:	xor	edx, edx
0x4fcd:	movabs	rax, 0x5555555555555554
0x4fd7:	div	r9
0x4fda:	cmp	rax, rcx
0x4fdd:	jbe	0x501b


0x4fab:	sub	rsp, 8
0x4faf:	call	0x5140


0x4fa1:	movzx	eax, al
0x4fa4:	test	rax, rax
0x4fa7:	jne	0x4fab


0x4f59:	test	rdi, rdi
0x4f5c:	jne	0x4f78


0x4f5e:	mov	rsi, rbx
0x4f61:	call	0x16a0


0x4f2b:	sub	rsp, 8
0x4f2f:	call	0x5140


0x4f21:	movzx	eax, al
0x4f24:	test	rax, rax
0x4f27:	jne	0x4f2b


0x1650:	jmp	qword ptr [rip + 0x2068d2]


0x4e06:	mov	eax, r10d
0x4e09:	mov	r11d, 1
0x4e0f:	add	r10d, 8
0x4e13:	add	rax, rbp
0x4e16:	mov	rax, qword ptr [rax]
0x4e19:	test	rax, rax
0x4e1c:	mov	qword ptr [r8 + r9*8], rax
0x4e20:	je	0x4e2c


0x4e5c:	mov	rax, rbx
0x4e5f:	add	rbx, 8
0x4e63:	jmp	0x4e16


0x4d38:	mov	r11d, eax
0x4d3b:	add	r11, qword ptr [r10 + 0x10]
0x4d3f:	add	eax, 8
0x4d42:	mov	dword ptr [r10], eax
0x4d45:	mov	rax, qword ptr [r11]
0x4d48:	test	rax, rax
0x4d4b:	mov	qword ptr [r8 + r9*8], rax
0x4d4f:	je	0x4d5b


0x4d7a:	mov	r11, qword ptr [r10 + 8]
0x4d7e:	lea	rax, [r11 + 8]
0x4d82:	mov	qword ptr [r10 + 8], rax
0x4d86:	jmp	0x4d45


0x4d0b:	jmp	0x48d0


0x4a08:	mov	r8, rcx
0x4a0b:	mov	rcx, rdx
0x4a0e:	lea	rdx, [rip + 0x165f]
0x4a15:	mov	esi, 1
0x4a1a:	xor	eax, eax
0x4a1c:	call	0x1750


0x48f0:	mov	r8, rdx
0x48f3:	lea	rdx, [rip + 0x176e]
0x48fa:	mov	r9, rcx
0x48fd:	xor	eax, eax
0x48ff:	mov	rcx, rsi
0x4902:	mov	esi, 1
0x4907:	call	0x1750


0x14e0:	jmp	qword ptr [rip + 0x20698a]


0x15f0:	jmp	qword ptr [rip + 0x206902]


0x4737:	call	0x1490


0x4705:	test	rdx, rdx
0x4708:	je	0x4737


0x46a4:	call	0x1490


0x463c:	mov	dword ptr [rsp], esi
0x463f:	mov	rcx, rsp
0x4642:	mov	rdx, -1
0x4649:	mov	rsi, rax
0x464c:	mov	qword ptr [rsp + 4], 0
0x4655:	mov	qword ptr [rsp + 0xc], 0x4000000
0x465e:	mov	qword ptr [rsp + 0x14], 0
0x4667:	mov	qword ptr [rsp + 0x1c], 0
0x4670:	mov	qword ptr [rsp + 0x24], 0
0x4679:	mov	qword ptr [rsp + 0x2c], 0
0x4682:	mov	dword ptr [rsp + 0x34], 0
0x468a:	call	0x3eb0


0x4510:	call	0x1490


0x44af:	mov	dword ptr [rsp], esi
0x44b2:	mov	rcx, rsp
0x44b5:	mov	rsi, rax
0x44b8:	mov	qword ptr [rsp + 4], 0
0x44c1:	mov	qword ptr [rsp + 0xc], 0
0x44ca:	mov	qword ptr [rsp + 0x14], 0
0x44d3:	mov	qword ptr [rsp + 0x1c], 0
0x44dc:	mov	qword ptr [rsp + 0x24], 0
0x44e5:	mov	qword ptr [rsp + 0x2c], 0
0x44ee:	mov	dword ptr [rsp + 0x34], 0
0x44f6:	call	0x3eb0


0x4484:	call	0x1490


0x441c:	mov	dword ptr [rsp], esi
0x441f:	mov	rcx, rsp
0x4422:	mov	rdx, -1
0x4429:	mov	rsi, rax
0x442c:	mov	qword ptr [rsp + 4], 0
0x4435:	mov	qword ptr [rsp + 0xc], 0
0x443e:	mov	qword ptr [rsp + 0x14], 0
0x4447:	mov	qword ptr [rsp + 0x1c], 0
0x4450:	mov	qword ptr [rsp + 0x24], 0
0x4459:	mov	qword ptr [rsp + 0x2c], 0
0x4462:	mov	dword ptr [rsp + 0x34], 0
0x446a:	call	0x3eb0


0x4331:	mov	rdi, qword ptr [r12 + 8]
0x4336:	lea	rbx, [rip + 0x203de3]
0x433d:	cmp	rdi, rbx
0x4340:	je	0x4359


0x4306:	sub	eax, 2
0x4309:	lea	rbx, [r12 + 0x18]
0x430e:	shl	rax, 4
0x4312:	lea	rbp, [r12 + rax + 0x28]
0x4317:	nop	word ptr [rax + rax]
0x4320:	mov	rdi, qword ptr [rbx]
0x4323:	add	rbx, 0x10
0x4327:	call	0x1480


0x14a0:	jmp	qword ptr [rip + 0x2069aa]


0x4167:	sub	rsp, 8
0x416b:	call	0x1490


0x4159:	test	rdx, rdx
0x415c:	je	0x4167


0x1540:	jmp	qword ptr [rip + 0x20695a]


0x2b5d:	mov	rcx, qword ptr [rip + 0x20557c]
0x2b64:	lea	rdi, [rip + 0x2fdd]
0x2b6b:	mov	edx, 0x37
0x2b70:	mov	esi, 1
0x2b75:	call	0x1740


0x2ae6:	mov	esi, 0x2f
0x2aeb:	mov	rbx, rdi
0x2aee:	call	0x1590


0x2ad1:	xor	r12d, r12d
0x2ad4:	jmp	0x2aa4


0x2a6f:	mov	r13d, edi
0x2a72:	mov	rbp, rsi
0x2a75:	mov	rbx, rdx
0x2a78:	xor	r12d, r12d
0x2a7b:	jmp	0x2a90


0x2a50:	ret	


0x2a35:	push	rbx
0x2a36:	mov	ebx, esi
0x2a38:	call	0x1640


0x15e0:	jmp	qword ptr [rip + 0x20690a]


0x25cd:	lea	rsi, [rip + 0x3114]
0x25d4:	xor	edi, edi
0x25d6:	call	0x1530


0x259f:	lea	rsi, [rip + 0x311a]
0x25a6:	xor	edi, edi
0x25a8:	call	0x1530


0x250d:	movzx	edx, byte ptr [rax]
0x2510:	cmp	dl, 0x38
0x2513:	jg	0x2500


0x24a9:	cmp	qword ptr [rip + 0x205b37], 0
0x24b1:	push	rbp
0x24b2:	mov	rbp, rsp
0x24b5:	je	0x24c3


0x24d8:	ret	


0x2490:	pop	rbp
0x2491:	ret	


0x2478:	mov	rax, qword ptr [rip + 0x205b61]
0x247f:	test	rax, rax
0x2482:	je	0x2490


0x2440:	pop	rbp
0x2441:	ret	


0x2427:	mov	rax, qword ptr [rip + 0x205b9a]
0x242e:	test	rax, rax
0x2431:	je	0x2440




0x1720:	jmp	qword ptr [rip + 0x20686a]


0x1462:	add	rsp, 8
0x1466:	ret	


0x1460:	call	rax




0x540a:	cmp	qword ptr [rdi + 0x48], 0
0x540f:	jne	0x53fa


0x1700:	jmp	qword ptr [rip + 0x20687a]


0x1660:	jmp	qword ptr [rip + 0x2068ca]


0x1690:	jmp	qword ptr [rip + 0x2068b2]
















0x50da:	call	0x1620


0x5091:	sub	rsp, 8
0x5095:	call	0x5140


0x5072:	mov	qword ptr [rsi], rax
0x5075:	mov	rsi, rax
0x5078:	jmp	0x4f50


0x5067:	mov	rdx, rax
0x506a:	shr	rdx, 1
0x506d:	lea	rax, [rdx + rax + 1]
0x5072:	mov	qword ptr [rsi], rax
0x5075:	mov	rsi, rax
0x5078:	jmp	0x4f50


0x5028:	xor	edx, edx
0x502a:	mov	eax, 0x80
0x502f:	xor	r8d, r8d
0x5032:	div	r9
0x5035:	test	rax, rax
0x5038:	sete	r8b
0x503c:	lea	rcx, [r8 + rax]
0x5040:	jmp	0x5005


0x5005:	mov	rax, rcx
0x5008:	mul	r9
0x500b:	seto	dl
0x500e:	test	rax, rax
0x5011:	movzx	edx, dl
0x5014:	js	0x501b


0x501b:	sub	rsp, 8
0x501f:	call	0x5140


0x4fdf:	mov	rax, rcx
0x4fe2:	shr	rax, 1
0x4fe5:	lea	rcx, [rax + rcx + 1]
0x4fea:	mov	qword ptr [rsi], rcx
0x4fed:	imul	rcx, r9
0x4ff1:	mov	rsi, rcx
0x4ff4:	jmp	0x4f50


0x4fa9:	jmp	0x4f50


0x4f78:	call	0x1480


0x16a0:	jmp	qword ptr [rip + 0x2068aa]


0x4f29:	jmp	0x4ef0




0x4e2c:	test	r11b, r11b
0x4e2f:	jne	0x4e55


0x4e22:	add	r9, 1
0x4e26:	cmp	r9, 0xa
0x4e2a:	jne	0x4e00


0x4e16:	mov	rax, qword ptr [rax]
0x4e19:	test	rax, rax
0x4e1c:	mov	qword ptr [r8 + r9*8], rax
0x4e20:	je	0x4e2c


0x4d5b:	call	0x48d0


0x4d51:	add	r9, 1
0x4d55:	cmp	r9, 0xa
0x4d59:	jne	0x4d30


0x4d45:	mov	rax, qword ptr [r11]
0x4d48:	test	rax, rax
0x4d4b:	mov	qword ptr [r8 + r9*8], rax
0x4d4f:	je	0x4d5b


0x4d00:	add	r9, 1
0x4d04:	cmp	qword ptr [r8 + r9*8], 0
0x4d09:	jne	0x4d00


0x1750:	jmp	qword ptr [rip + 0x206852]






0x1490:	jmp	qword ptr [rip + 0x2069b2]


0x470a:	mov	qword ptr [rsp + 0x28], rsi
0x470f:	mov	qword ptr [rsp + 0x30], rdx
0x4714:	mov	rcx, rsp
0x4717:	mov	rdx, r8
0x471a:	mov	rsi, r9
0x471d:	call	0x3eb0


0x4359:	lea	rbx, [rip + 0x203d50]
0x4360:	cmp	r12, rbx
0x4363:	je	0x4374


0x4342:	call	0x1480


0x1480:	jmp	qword ptr [rip + 0x2069ba]




0x415e:	mov	qword ptr [rdi + 0x28], rsi
0x4162:	mov	qword ptr [rdi + 0x30], rdx
0x4166:	ret	




0x1740:	jmp	qword ptr [rip + 0x20685a]


0x1590:	jmp	qword ptr [rip + 0x206932]


0x2aa4:	add	rsp, 8
0x2aa8:	mov	rax, r12
0x2aab:	pop	rbx
0x2aac:	pop	rbp
0x2aad:	pop	r12
0x2aaf:	pop	r13
0x2ab1:	ret	


0x2a90:	mov	rdx, rbx
0x2a93:	mov	rsi, rbp
0x2a96:	mov	edi, r13d
0x2a99:	call	0x4870




0x2515:	add	edx, 1
0x2518:	mov	byte ptr [rax], dl
0x251a:	ret	


0x2500:	sub	rax, 1
0x2504:	mov	byte ptr [rax + 1], 0x30
0x2508:	cmp	rcx, rax
0x250b:	ja	0x2520


0x24c3:	call	0x2410


0x24b7:	mov	rdi, qword ptr [rip + 0x205b4a]
0x24be:	call	0x1790


0x2484:	pop	rbp
0x2485:	jmp	rax


0x2433:	pop	rbp
0x2434:	jmp	rax




0x5411:	push	r12
0x5413:	push	rbp
0x5414:	mov	r12d, edx
0x5417:	push	rbx
0x5418:	mov	rbp, rsi
0x541b:	mov	rbx, rdi
0x541e:	call	0x1640








0x1620:	jmp	qword ptr [rip + 0x2068ea]


0x5016:	test	rdx, rdx
0x5019:	je	0x4fea




0x4e31:	call	0x48d0


0x4e55:	mov	dword ptr [rsp + 8], r10d
0x4e5a:	jmp	0x4e31


0x4e00:	cmp	r10d, 0x2f
0x4e04:	ja	0x4e5c


0x4d30:	mov	eax, dword ptr [r10]
0x4d33:	cmp	eax, 0x2f
0x4d36:	ja	0x4d7a






0x4374:	pop	rbx
0x4375:	mov	dword ptr [rip + 0x203d19], 1
0x437f:	pop	rbp
0x4380:	pop	r12
0x4382:	ret	


0x4365:	mov	rdi, r12
0x4368:	call	0x1480








0x2520:	lea	rax, [rip + 0x205ae9]
0x2527:	cmp	rcx, rax
0x252a:	jbe	0x2558


0x1790:	jmp	qword ptr [rip + 0x206852]




0x4fea:	mov	qword ptr [rsi], rcx
0x4fed:	imul	rcx, r9
0x4ff1:	mov	rsi, rcx
0x4ff4:	jmp	0x4f50


0x2558:	mov	byte ptr [rip + 0x205ab1], 0x3e
0x255f:	mov	rdx, rcx
0x2562:	jmp	0x253b


0x252c:	lea	rdx, [rcx - 1]
0x2530:	mov	byte ptr [rcx - 1], 0x31
0x2534:	mov	qword ptr [rip + 0x205aed], rdx
0x253b:	mov	rax, qword ptr [rip + 0x205aee]
0x2542:	cmp	rax, rdx
0x2545:	jbe	0x2552


0x253b:	mov	rax, qword ptr [rip + 0x205aee]
0x2542:	cmp	rax, rdx
0x2545:	jbe	0x2552


0x2552:	ret	


0x2547:	sub	rax, 1
0x254b:	mov	qword ptr [rip + 0x205ade], rax
0x2552:	ret	


0x24c8:	mov	byte ptr [rip + 0x205c19], 1
0x24cf:	pop	rbp
0x24d0:	ret	


0x5481:	test	rbp, rbp
0x5484:	je	0x54a6


0x54a6:	add	rsp, 8
0x54aa:	pop	rbx
0x54ab:	pop	rbp
0x54ac:	pop	r12
0x54ae:	pop	r13
0x54b0:	pop	r14
0x54b2:	pop	r15
0x54b4:	ret	


0x5486:	xor	ebx, ebx
0x5488:	nop	dword ptr [rax + rax]
0x5490:	mov	rdx, r15
0x5493:	mov	rsi, r14
0x5496:	mov	edi, r13d
0x5499:	call	qword ptr [r12 + rbx*8]


0x50df:	test	rax, rax
0x50e2:	je	0x50e9


0x50e4:	add	rsp, 8
0x50e8:	ret	


0x2af3:	test	rax, rax
0x2af6:	je	0x2b4d


0x2b4d:	mov	qword ptr [rip + 0x2055bc], rbx
0x2b54:	mov	qword ptr [rip + 0x20557d], rbx
0x2b5b:	pop	rbx
0x2b5c:	ret	


0x2af8:	lea	r8, [rax + 1]
0x2afc:	mov	rdx, r8
0x2aff:	sub	rdx, rbx
0x2b02:	cmp	rdx, 6
0x2b06:	jle	0x2b4d


0x2b08:	lea	rsi, [rax - 6]
0x2b0c:	lea	rdi, [rip + 0x306d]
0x2b13:	mov	ecx, 7
0x2b18:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2b18:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2b1a:	seta	dl
0x2b1d:	sbb	dl, 0
0x2b20:	test	dl, dl
0x2b22:	jne	0x2b4d


0x2b24:	lea	rdi, [rip + 0x305d]
0x2b2b:	mov	ecx, 3
0x2b30:	mov	rsi, r8
0x2b33:	mov	rbx, r8
0x2b36:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2b36:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2b38:	seta	dl
0x2b3b:	sbb	dl, 0
0x2b3e:	test	dl, dl
0x2b40:	jne	0x2b4d


0x2b42:	lea	rbx, [rax + 4]
0x2b46:	mov	qword ptr [rip + 0x205573], rbx
0x2b4d:	mov	qword ptr [rip + 0x2055bc], rbx
0x2b54:	mov	qword ptr [rip + 0x20557d], rbx
0x2b5b:	pop	rbx
0x2b5c:	ret	


0x2b7a:	call	0x1490


0x436d:	mov	qword ptr [rip + 0x203d2c], rbx
0x4374:	pop	rbx
0x4375:	mov	dword ptr [rip + 0x203d19], 1
0x437f:	pop	rbp
0x4380:	pop	r12
0x4382:	ret	


0x4347:	mov	qword ptr [rip + 0x203d5e], 0x100
0x4352:	mov	qword ptr [rip + 0x203d5f], rbx
0x4359:	lea	rbx, [rip + 0x203d50]
0x4360:	cmp	r12, rbx
0x4363:	je	0x4374


0x4f7d:	xor	eax, eax
0x4f7f:	pop	rbx
0x4f80:	ret	


0x432c:	cmp	rbx, rbp
0x432f:	jne	0x4320


0x4320:	mov	rdi, qword ptr [rbx]
0x4323:	add	rbx, 0x10
0x4327:	call	0x1480


0x490c:	lea	rsi, [rip + 0x1768]
0x4913:	xor	edi, edi
0x4915:	mov	edx, 5
0x491a:	call	0x1530


0x4a21:	jmp	0x490c


0x4f66:	test	rax, rax
0x4f69:	jne	0x4f70


0x4f6b:	test	rbx, rbx
0x4f6e:	jne	0x4f81


0x4f70:	pop	rbx
0x4f71:	ret	


0x4f81:	call	0x5140


0x53be:	test	eax, eax
0x53c0:	je	0x53ca


0x53c2:	test	dword ptr [rbx], 0x100
0x53c8:	jne	0x53d8


0x53d8:	mov	rdi, rbx
0x53db:	mov	edx, 1
0x53e0:	xor	esi, esi
0x53e2:	call	0x53f0


0x1808:	mov	rdi, qword ptr [r14]
0x180b:	mov	ebx, eax
0x180d:	call	0x2ae0


0x1812:	lea	rsi, [rip + 0x48a8]
0x1819:	mov	edi, 6
0x181e:	call	0x16b0


0x2ce1:	cmp	r15d, 0xa
0x2ce5:	mov	qword ptr [rsp + 0x58], rax
0x2cea:	ja	0x3e9f


0x2cf0:	lea	rcx, [rip + 0x2f09]
0x2cf7:	mov	edx, r15d
0x2cfa:	movsxd	rax, dword ptr [rcx + rdx*4]
0x2cfe:	add	rax, rcx
0x2d01:	jmp	rax


0x3e9f:	call	0x1490


0x3ed1:	mov	r13, rax
0x3ed4:	mov	eax, dword ptr [rax]
0x3ed6:	test	r15d, r15d
0x3ed9:	mov	rbx, qword ptr [rip + 0x2041c0]
0x3ee0:	mov	dword ptr [rsp + 0x18], eax
0x3ee4:	js	0x4051


0x4051:	call	0x1490


0x3eea:	cmp	dword ptr [rip + 0x2041a7], r15d
0x3ef1:	jg	0x3f55


0x3ef3:	cmp	r15d, 0x7fffffff
0x3efa:	je	0x4056


0x3f55:	mov	eax, dword ptr [rbp + 4]
0x3f58:	shl	r15, 4
0x3f5c:	sub	rsp, 8
0x3f60:	add	rbx, r15
0x3f63:	lea	r15, [rbp + 8]
0x3f67:	mov	r8d, dword ptr [rbp]
0x3f6b:	mov	r11, qword ptr [rbx]
0x3f6e:	mov	r12, qword ptr [rbx + 8]
0x3f72:	mov	rcx, r14
0x3f75:	or	eax, 1
0x3f78:	mov	dword ptr [rsp + 0x24], eax
0x3f7c:	push	qword ptr [rbp + 0x30]
0x3f7f:	mov	r9d, eax
0x3f82:	push	qword ptr [rbp + 0x28]
0x3f85:	push	r15
0x3f87:	mov	rsi, r11
0x3f8a:	mov	rdx, qword ptr [rsp + 0x28]
0x3f8f:	mov	rdi, r12
0x3f92:	mov	qword ptr [rsp + 0x30], r11
0x3f97:	call	0x2c70


0x4056:	call	0x5140


0x3f00:	lea	r12d, [r15 + 1]
0x3f04:	lea	rax, [rip + 0x2041a5]
0x3f0b:	movsxd	rsi, r12d
0x3f0e:	shl	rsi, 4
0x3f12:	cmp	rbx, rax
0x3f15:	je	0x4030


0x4030:	xor	edi, edi
0x4032:	call	0x4f50


0x3f1b:	mov	rdi, rbx
0x3f1e:	call	0x4f50


0x3f23:	mov	rbx, rax
0x3f26:	mov	qword ptr [rip + 0x204173], rax
0x3f2d:	movsxd	rdi, dword ptr [rip + 0x204164]
0x3f34:	mov	edx, r12d
0x3f37:	xor	esi, esi
0x3f39:	sub	edx, edi
0x3f3b:	shl	rdi, 4
0x3f3f:	movsxd	rdx, edx
0x3f42:	add	rdi, rbx
0x3f45:	shl	rdx, 4
0x3f49:	call	0x15b0


0x15b0:	jmp	qword ptr [rip + 0x206922]




0x4037:	movdqa	xmm0, xmmword ptr [rip + 0x204071]
0x403f:	mov	rbx, rax
0x4042:	mov	qword ptr [rip + 0x204057], rax
0x4049:	movups	xmmword ptr [rax], xmm0
0x404c:	jmp	0x3f2d


0x3f2d:	movsxd	rdi, dword ptr [rip + 0x204164]
0x3f34:	mov	edx, r12d
0x3f37:	xor	esi, esi
0x3f39:	sub	edx, edi
0x3f3b:	shl	rdi, 4
0x3f3f:	movsxd	rdx, edx
0x3f42:	add	rdi, rbx
0x3f45:	shl	rdx, 4
0x3f49:	call	0x15b0


0x406c:	mov	r12d, dword ptr [rax]
0x406f:	mov	rbp, rax
0x4072:	lea	rax, [rip + 0x2041a7]
0x4079:	test	rbx, rbx
0x407c:	mov	esi, 0x38
0x4081:	cmove	rbx, rax
0x4085:	mov	rdi, rbx
0x4088:	call	0x50f0


0x41a2:	mov	r12d, dword ptr [rax]
0x41a5:	mov	rbp, rax
0x41a8:	lea	rax, [rbx + 8]
0x41ac:	sub	rsp, 8
0x41b0:	mov	r9d, dword ptr [rbx + 4]
0x41b4:	push	qword ptr [rbx + 0x30]
0x41b7:	mov	r8d, dword ptr [rbx]
0x41ba:	push	qword ptr [rbx + 0x28]
0x41bd:	mov	rdx, r15
0x41c0:	push	rax
0x41c1:	mov	rcx, qword ptr [rsp + 0x28]
0x41c6:	mov	rsi, r14
0x41c9:	mov	rdi, r13
0x41cc:	call	0x2c70


0x421f:	test	r12, r12
0x4222:	mov	r13, rax
0x4225:	mov	eax, dword ptr [rax]
0x4227:	sete	bpl
0x422b:	or	ebp, dword ptr [rbx + 4]
0x422e:	lea	r10, [rbx + 8]
0x4232:	sub	rsp, 8
0x4236:	mov	r8d, dword ptr [rbx]
0x4239:	mov	rcx, r15
0x423c:	mov	dword ptr [rsp + 0x14], eax
0x4240:	push	qword ptr [rbx + 0x30]
0x4243:	mov	rdx, r14
0x4246:	push	qword ptr [rbx + 0x28]
0x4249:	push	r10
0x424b:	xor	esi, esi
0x424d:	mov	r9d, ebp
0x4250:	xor	edi, edi
0x4252:	mov	qword ptr [rsp + 0x40], r10
0x4257:	call	0x2c70


0x4836:	test	rax, rax
0x4839:	mov	rbp, rax
0x483c:	jns	0x4860


0x483e:	call	0x14a0


0x4860:	add	rsp, 8
0x4864:	mov	rax, rbp
0x4867:	pop	rbx
0x4868:	pop	rbp
0x4869:	pop	r12
0x486b:	pop	r13
0x486d:	ret	


0x4843:	mov	eax, dword ptr [rax]
0x4845:	cmp	eax, 4
0x4848:	je	0x4828


0x4828:	mov	rdx, rbx
0x482b:	mov	rsi, r12
0x482e:	mov	edi, r13d
0x4831:	call	0x15f0


0x484a:	cmp	rbx, 0x7ff00000
0x4851:	jbe	0x4860


0x4853:	cmp	eax, 0x16
0x4856:	jne	0x4860


0x4858:	mov	ebx, 0x7ff00000
0x485d:	jmp	0x4828


0x4896:	test	rax, rax
0x4899:	mov	rbp, rax
0x489c:	jns	0x48c0


0x489e:	call	0x14a0


0x48c0:	add	rsp, 8
0x48c4:	mov	rax, rbp
0x48c7:	pop	rbx
0x48c8:	pop	rbp
0x48c9:	pop	r12
0x48cb:	pop	r13
0x48cd:	ret	


0x48a3:	mov	eax, dword ptr [rax]
0x48a5:	cmp	eax, 4
0x48a8:	je	0x4888


0x4888:	mov	rdx, rbx
0x488b:	mov	rsi, r12
0x488e:	mov	edi, r13d
0x4891:	call	0x14e0


0x48aa:	cmp	eax, 0x16
0x48ad:	jne	0x48c0


0x48af:	cmp	rbx, 0x7ff00000
0x48b6:	jbe	0x48c0


0x48b8:	mov	ebx, 0x7ff00000
0x48bd:	jmp	0x4888


0x2a9e:	cmp	rax, -1
0x2aa2:	jne	0x2a80


0x2a80:	test	rax, rax
0x2a83:	je	0x2ab8


0x2ab8:	call	0x14a0


0x2a85:	add	r12, rax
0x2a88:	add	rbp, rax
0x2a8b:	sub	rbx, rax
0x2a8e:	je	0x2aa4


0x2abd:	mov	dword ptr [rax], 0x1c
0x2ac3:	add	rsp, 8
0x2ac7:	mov	rax, r12
0x2aca:	pop	rbx
0x2acb:	pop	rbp
0x2acc:	pop	r12
0x2ace:	pop	r13
0x2ad0:	ret	


0x4ef9:	test	rax, rax
0x4efc:	jne	0x4f03


0x4efe:	test	rbx, rbx
0x4f01:	jne	0x4f05


0x4f03:	pop	rbx
0x4f04:	ret	


0x4f05:	call	0x5140


0x50a9:	mov	rdx, rbx
0x50ac:	xor	esi, esi
0x50ae:	mov	rdi, rax
0x50b1:	pop	rbx
0x50b2:	jmp	0x15b0


0x5104:	add	rsp, 8
0x5108:	mov	rdx, rbx
0x510b:	mov	rsi, rbp
0x510e:	pop	rbx
0x510f:	pop	rbp
0x5110:	mov	rdi, rax
0x5113:	jmp	0x1630


0x1630:	jmp	qword ptr [rip + 0x2068e2]




0x5129:	mov	rdi, rbx
0x512c:	lea	rsi, [rax + 1]
0x5130:	pop	rbx
0x5131:	jmp	0x50f0


0x491f:	lea	rdx, [rip + 0x1a7a]
0x4926:	mov	rcx, rax
0x4929:	mov	r8d, 0x7e3
0x492f:	mov	esi, 1
0x4934:	mov	rdi, rbp
0x4937:	xor	eax, eax
0x4939:	call	0x1750


0x493e:	lea	rsi, [rip + 0x17c3]
0x4945:	xor	edi, edi
0x4947:	mov	edx, 5
0x494c:	call	0x1530


0x4951:	mov	rsi, rbp
0x4954:	mov	rdi, rax
0x4957:	call	0x1610


0x1610:	jmp	qword ptr [rip + 0x2068f2]




0x25ad:	mov	rdi, qword ptr [rip + 0x205b2c]
0x25b4:	mov	rdx, rax
0x25b7:	mov	rcx, rbx
0x25ba:	mov	esi, 1
0x25bf:	xor	eax, eax
0x25c1:	call	0x1750


0x25c6:	mov	edi, ebp
0x25c8:	call	0x1730


0x1730:	jmp	qword ptr [rip + 0x206862]




0x25db:	mov	rdx, rbx
0x25de:	mov	rsi, rax
0x25e1:	mov	edi, 1
0x25e6:	xor	eax, eax
0x25e8:	call	0x16c0


0x16c0:	jmp	qword ptr [rip + 0x20689a]




0x17b4:	mov	rbx, rax
0x17b7:	call	0x14a0


0x17bc:	mov	esi, dword ptr [rax]
0x17be:	mov	rdx, rbx
0x17c1:	mov	edi, 1
0x17c6:	xor	eax, eax
0x17c8:	call	0x16e0


0x16e0:	jmp	qword ptr [rip + 0x20688a]




0x4e84:	lea	rdx, [rip + 0x124c]
0x4e8b:	mov	rsi, rax
0x4e8e:	mov	edi, 1
0x4e93:	xor	eax, eax
0x4e95:	call	0x16c0


0x5157:	mov	edi, dword ptr [rip + 0x202ee3]
0x515d:	lea	rdx, [rip + 0x9e0]
0x5164:	mov	rcx, rax
0x5167:	xor	esi, esi
0x5169:	xor	eax, eax
0x516b:	call	0x16e0


0x51b7:	cmp	rax, -3
0x51bb:	mov	rbp, rax
0x51be:	jbe	0x51e0


0x51e0:	mov	rdx, qword ptr [rsp + 8]
0x51e5:	xor	rdx, qword ptr fs:[0x28]
0x51ee:	mov	rax, rbp
0x51f1:	jne	0x51fe


0x51c0:	test	r12, r12
0x51c3:	je	0x51e0


0x51f3:	add	rsp, 0x18
0x51f7:	pop	rbx
0x51f8:	pop	rbp
0x51f9:	pop	r12
0x51fb:	pop	r13
0x51fd:	ret	


0x51fe:	call	0x1560


0x51c5:	xor	edi, edi
0x51c7:	call	0x5290


0x1560:	jmp	qword ptr [rip + 0x20694a]




0x521c:	mov	ebx, dword ptr [rbp]
0x521f:	mov	rdi, rbp
0x5222:	mov	r12, rax
0x5225:	call	0x5330


0x1823:	lea	rsi, [rip + 0x3d8d]
0x182a:	lea	rdi, [rip + 0x3d5d]
0x1831:	call	0x1510


0x1510:	jmp	qword ptr [rip + 0x206972]




0x529b:	mov	rdx, rax
0x529e:	mov	eax, 1
0x52a3:	test	rdx, rdx
0x52a6:	je	0x52c5


0x52c5:	add	rsp, 8
0x52c9:	ret	


0x52a8:	lea	rdi, [rip + 0x1131]
0x52af:	mov	ecx, 2
0x52b4:	mov	rsi, rdx
0x52b7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x52b7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x52b9:	seta	cl
0x52bc:	sbb	cl, 0
0x52bf:	xor	eax, eax
0x52c1:	test	cl, cl
0x52c3:	jne	0x52d0


0x52d0:	lea	rdi, [rip + 0x110b]
0x52d7:	mov	ecx, 6
0x52dc:	mov	rsi, rdx
0x52df:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x52df:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x52e1:	seta	al
0x52e4:	sbb	al, 0
0x52e6:	test	al, al
0x52e8:	setne	al
0x52eb:	add	rsp, 8
0x52ef:	ret	


0x51cc:	test	al, al
0x51ce:	jne	0x51e0


0x51d0:	movzx	eax, byte ptr [r13]
0x51d5:	mov	ebp, 1
0x51da:	mov	dword ptr [rbx], eax
0x51dc:	nop	dword ptr [rax]
0x51e0:	mov	rdx, qword ptr [rsp + 8]
0x51e5:	xor	rdx, qword ptr fs:[0x28]
0x51ee:	mov	rax, rbp
0x51f1:	jne	0x51fe


0x52fe:	test	rax, rax
0x5301:	je	0x5320


0x5320:	lea	rax, [rip + 0x10c1]
0x5327:	add	rsp, 8
0x532b:	ret	


0x5303:	cmp	byte ptr [rax], 0
0x5306:	lea	rdx, [rip + 0x10db]
0x530d:	cmove	rax, rdx
0x5311:	add	rsp, 8
0x5315:	ret	


0x2b90:	movzx	edx, byte ptr [rax]
0x2b93:	and	edx, 0xffffffdf
0x2b96:	cmp	dl, 0x55
0x2b99:	je	0x2c10


0x2c10:	movzx	edx, byte ptr [rax + 1]
0x2c14:	and	edx, 0xffffffdf
0x2c17:	cmp	dl, 0x54
0x2c1a:	jne	0x2ba0


0x2b9b:	cmp	dl, 0x47
0x2b9e:	je	0x2bc0


0x2c1c:	movzx	edx, byte ptr [rax + 2]
0x2c20:	and	edx, 0xffffffdf
0x2c23:	cmp	dl, 0x46
0x2c26:	jne	0x2ba0


0x2ba0:	lea	rax, [rip + 0x2ff4]
0x2ba7:	lea	rdx, [rip + 0x2fef]
0x2bae:	cmp	ebx, 9
0x2bb1:	cmovne	rax, rdx
0x2bb5:	add	rsp, 8
0x2bb9:	pop	rbx
0x2bba:	pop	rbp
0x2bbb:	ret	


0x2bc0:	movzx	edx, byte ptr [rax + 1]
0x2bc4:	and	edx, 0xffffffdf
0x2bc7:	cmp	dl, 0x42
0x2bca:	jne	0x2ba0


0x2c2c:	cmp	byte ptr [rax + 3], 0x2d
0x2c30:	jne	0x2ba0


0x2bcc:	cmp	byte ptr [rax + 2], 0x31
0x2bd0:	jne	0x2ba0


0x2c36:	cmp	byte ptr [rax + 4], 0x38
0x2c3a:	jne	0x2ba0


0x2bd2:	cmp	byte ptr [rax + 3], 0x38
0x2bd6:	jne	0x2ba0


0x2c40:	cmp	byte ptr [rax + 5], 0
0x2c44:	jne	0x2ba0


0x2bd8:	cmp	byte ptr [rax + 4], 0x30
0x2bdc:	jne	0x2ba0


0x2c4a:	cmp	byte ptr [rbp], 0x60
0x2c4e:	lea	rax, [rip + 0x2f37]
0x2c55:	lea	rdx, [rip + 0x2f34]
0x2c5c:	cmovne	rax, rdx
0x2c60:	add	rsp, 8
0x2c64:	pop	rbx
0x2c65:	pop	rbp
0x2c66:	ret	


0x2bde:	cmp	byte ptr [rax + 5], 0x33
0x2be2:	jne	0x2ba0


0x2be4:	cmp	byte ptr [rax + 6], 0x30
0x2be8:	jne	0x2ba0


0x2bea:	cmp	byte ptr [rax + 7], 0
0x2bee:	jne	0x2ba0


0x2bf0:	cmp	byte ptr [rbp], 0x60
0x2bf4:	lea	rax, [rip + 0x2f99]
0x2bfb:	lea	rdx, [rip + 0x2f96]
0x2c02:	cmovne	rax, rdx
0x2c06:	add	rsp, 8
0x2c0a:	pop	rbx
0x2c0b:	pop	rbp
0x2c0c:	ret	


0x5423:	mov	edx, r12d
0x5426:	mov	rsi, rbp
0x5429:	mov	edi, eax
0x542b:	call	0x15a0


0x15a0:	jmp	qword ptr [rip + 0x20692a]




0x2a3d:	mov	ecx, ebx
0x2a3f:	xor	edx, edx
0x2a41:	xor	esi, esi
0x2a43:	pop	rbx
0x2a44:	mov	edi, eax
0x2a46:	jmp	0x15e0


0x533c:	test	eax, eax
0x533e:	mov	rdi, rbx
0x5341:	js	0x5397


0x5397:	pop	rbx
0x5398:	pop	rbp
0x5399:	pop	r12
0x539b:	jmp	0x1500


0x5343:	call	0x1690


0x1500:	jmp	qword ptr [rip + 0x20697a]




0x5348:	test	eax, eax
0x534a:	jne	0x5378


0x534c:	mov	rdi, rbx
0x534f:	call	0x53b0


0x5378:	mov	rdi, rbx
0x537b:	call	0x1640


0x5380:	xor	esi, esi
0x5382:	mov	edx, 1
0x5387:	mov	edi, eax
0x5389:	call	0x15a0


0x538e:	cmp	rax, -1
0x5392:	jne	0x534c


0x5394:	mov	rdi, rbx
0x5397:	pop	rbx
0x5398:	pop	rbp
0x5399:	pop	r12
0x539b:	jmp	0x1500


0x5430:	cmp	rax, -1
0x5434:	je	0x5442


0x5442:	pop	rbx
0x5443:	pop	rbp
0x5444:	pop	r12
0x5446:	ret	


0x5436:	and	dword ptr [rbx], 0xffffffef
0x5439:	mov	qword ptr [rbx + 0x90], rax
0x5440:	xor	eax, eax
0x5442:	pop	rbx
0x5443:	pop	rbp
0x5444:	pop	r12
0x5446:	ret	


0x1836:	lea	rdi, [rip + 0x3d51]
0x183d:	call	0x14f0


0x14f0:	jmp	qword ptr [rip + 0x206982]




0x5170:	call	0x1490


0x17cd:	nop	dword ptr [rax]


0x4e9a:	lea	rsi, [rip + 0x124c]
0x4ea1:	mov	edx, 5
0x4ea6:	xor	edi, edi
0x4ea8:	call	0x1530


0x4ead:	lea	rcx, [rip + 0xbe4]
0x4eb4:	lea	rdx, [rip + 0x6cf]
0x4ebb:	mov	rsi, rax
0x4ebe:	mov	edi, 1
0x4ec3:	xor	eax, eax
0x4ec5:	call	0x16c0


0x4eca:	mov	rbx, qword ptr [rip + 0x2031f7]
0x4ed1:	lea	rsi, [rip + 0x1448]
0x4ed8:	xor	edi, edi
0x4eda:	mov	edx, 5
0x4edf:	call	0x1530


0x4ee4:	mov	rsi, rbx
0x4ee7:	mov	rdi, rax
0x4eea:	pop	rbx
0x4eeb:	jmp	0x1610


0x25ed:	mov	rbx, qword ptr [rip + 0x205ad4]
0x25f4:	lea	rsi, [rip + 0x3115]
0x25fb:	mov	edx, 5
0x2600:	xor	edi, edi
0x2602:	call	0x1530


0x2607:	mov	rsi, rbx
0x260a:	mov	rdi, rax
0x260d:	call	0x1610


0x2612:	mov	rbx, qword ptr [rip + 0x205aaf]
0x2619:	lea	rsi, [rip + 0x3120]
0x2620:	mov	edx, 5
0x2625:	xor	edi, edi
0x2627:	call	0x1530


0x262c:	mov	rsi, rbx
0x262f:	mov	rdi, rax
0x2632:	call	0x1610


0x2637:	mov	rbx, qword ptr [rip + 0x205a8a]
0x263e:	lea	rsi, [rip + 0x3133]
0x2645:	mov	edx, 5
0x264a:	xor	edi, edi
0x264c:	call	0x1530


0x2651:	mov	rsi, rbx
0x2654:	mov	rdi, rax
0x2657:	call	0x1610


0x265c:	mov	rbx, qword ptr [rip + 0x205a65]
0x2663:	lea	rsi, [rip + 0x325e]
0x266a:	mov	edx, 5
0x266f:	xor	edi, edi
0x2671:	call	0x1530


0x2676:	mov	rsi, rbx
0x2679:	mov	rdi, rax
0x267c:	call	0x1610


0x2681:	mov	rbx, qword ptr [rip + 0x205a40]
0x2688:	lea	rsi, [rip + 0x3311]
0x268f:	mov	edx, 5
0x2694:	xor	edi, edi
0x2696:	call	0x1530


0x269b:	mov	rsi, rbx
0x269e:	mov	rdi, rax
0x26a1:	call	0x1610


0x26a6:	mov	rbx, qword ptr [rip + 0x205a1b]
0x26ad:	lea	rsi, [rip + 0x331c]
0x26b4:	mov	edx, 5
0x26b9:	xor	edi, edi
0x26bb:	call	0x1530


0x26c0:	mov	rsi, rbx
0x26c3:	mov	rdi, rax
0x26c6:	call	0x1610


0x26cb:	mov	rbx, qword ptr [rip + 0x205a3e]
0x26d2:	lea	rsi, [rip + 0x332f]
0x26d9:	mov	edx, 5
0x26de:	xor	edi, edi
0x26e0:	call	0x1530


0x26e5:	mov	rcx, rbx
0x26e8:	mov	rdx, rbx
0x26eb:	mov	rsi, rax
0x26ee:	mov	edi, 1
0x26f3:	xor	eax, eax
0x26f5:	lea	rbx, [rip + 0x2e14]
0x26fc:	call	0x16c0


0x2701:	lea	rax, [rip + 0x2e0c]
0x2708:	lea	rcx, [rip + 0x2e46]
0x270f:	mov	qword ptr [rsp + 0x60], 0
0x2718:	mov	qword ptr [rsp + 0x68], 0
0x2721:	mov	rdx, rsp
0x2724:	mov	qword ptr [rsp], rax
0x2728:	lea	rax, [rip + 0x2de7]
0x272f:	mov	qword ptr [rsp + 0x30], rcx
0x2734:	lea	rcx, [rip + 0x2e24]
0x273b:	mov	qword ptr [rsp + 8], rax
0x2740:	lea	rax, [rip + 0x2e47]
0x2747:	mov	qword ptr [rsp + 0x40], rcx
0x274c:	lea	rcx, [rip + 0x2e16]
0x2753:	mov	qword ptr [rsp + 0x10], rax
0x2758:	lea	rax, [rip + 0x2dc7]
0x275f:	mov	qword ptr [rsp + 0x50], rcx
0x2764:	mov	qword ptr [rsp + 0x18], rax
0x2769:	lea	rax, [rip + 0x2dcc]
0x2770:	mov	qword ptr [rsp + 0x20], rax
0x2775:	lea	rax, [rip + 0x2dca]
0x277c:	mov	qword ptr [rsp + 0x28], rax
0x2781:	mov	qword ptr [rsp + 0x38], rax
0x2786:	mov	qword ptr [rsp + 0x48], rax
0x278b:	mov	qword ptr [rsp + 0x58], rax
0x2790:	add	rdx, 0x10
0x2794:	mov	rdi, qword ptr [rdx]
0x2797:	test	rdi, rdi
0x279a:	je	0x27af


0x27af:	mov	r12, qword ptr [rdx + 8]
0x27b3:	xor	edi, edi
0x27b5:	mov	edx, 5
0x27ba:	lea	rsi, [rip + 0x2db2]
0x27c1:	test	r12, r12
0x27c4:	je	0x288b


0x279c:	mov	ecx, 4
0x27a1:	mov	rsi, rbx
0x27a4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x288b:	call	0x1530


0x27ca:	call	0x1530


0x27a4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x27a6:	seta	al
0x27a9:	sbb	al, 0
0x27ab:	test	al, al
0x27ad:	jne	0x2790


0x2790:	add	rdx, 0x10
0x2794:	mov	rdi, qword ptr [rdx]
0x2797:	test	rdi, rdi
0x279a:	je	0x27af


0x27cf:	lea	rcx, [rip + 0x32c2]
0x27d6:	lea	rdx, [rip + 0x2dad]
0x27dd:	mov	rsi, rax
0x27e0:	mov	edi, 1
0x27e5:	xor	eax, eax
0x27e7:	call	0x16c0


0x27ec:	xor	esi, esi
0x27ee:	mov	edi, 5
0x27f3:	call	0x16b0


0x27f8:	test	rax, rax
0x27fb:	je	0x2819


0x2819:	lea	rsi, [rip + 0x2d7c]
0x2820:	xor	edi, edi
0x2822:	mov	edx, 5
0x2827:	call	0x1530


0x27fd:	lea	rsi, [rip + 0x2d94]
0x2804:	mov	edx, 3
0x2809:	mov	rdi, rax
0x280c:	call	0x14b0


0x14b0:	jmp	qword ptr [rip + 0x2069a2]




0x282c:	lea	rcx, [rip + 0x2cdd]
0x2833:	lea	rdx, [rip + 0x325e]
0x283a:	mov	rsi, rax
0x283d:	mov	edi, 1
0x2842:	xor	eax, eax
0x2844:	call	0x16c0


0x2849:	cmp	r12, rbx
0x284c:	lea	rcx, [rip + 0x2cdd]
0x2853:	lea	rbx, [rip + 0x3867]
0x285a:	cmove	rbx, rcx
0x285e:	lea	rsi, [rip + 0x32a3]
0x2865:	xor	edi, edi
0x2867:	mov	edx, 5
0x286c:	call	0x1530


0x2871:	mov	rcx, rbx
0x2874:	mov	rsi, rax
0x2877:	mov	rdx, r12
0x287a:	mov	edi, 1
0x287f:	xor	eax, eax
0x2881:	call	0x16c0


0x2886:	jmp	0x25c6


0x2890:	lea	rcx, [rip + 0x3201]
0x2897:	lea	rdx, [rip + 0x2cec]
0x289e:	mov	rsi, rax
0x28a1:	mov	edi, 1
0x28a6:	xor	eax, eax
0x28a8:	call	0x16c0


0x28ad:	xor	esi, esi
0x28af:	mov	edi, 5
0x28b4:	call	0x16b0


0x28b9:	test	rax, rax
0x28bc:	je	0x28d6


0x28d6:	lea	rsi, [rip + 0x2cbf]
0x28dd:	mov	edx, 5
0x28e2:	xor	edi, edi
0x28e4:	lea	r12, [rip + 0x2c25]
0x28eb:	lea	rbx, [rip + 0x2c3e]
0x28f2:	call	0x1530


0x28be:	lea	rsi, [rip + 0x2cd3]
0x28c5:	mov	edx, 3
0x28ca:	mov	rdi, rax
0x28cd:	call	0x14b0


0x28f7:	lea	rcx, [rip + 0x2c12]
0x28fe:	lea	rdx, [rip + 0x3193]
0x2905:	mov	rsi, rax
0x2908:	mov	edi, 1
0x290d:	xor	eax, eax
0x290f:	call	0x16c0


0x2914:	jmp	0x285e


0x285e:	lea	rsi, [rip + 0x32a3]
0x2865:	xor	edi, edi
0x2867:	mov	edx, 5
0x286c:	call	0x1530


0x495c:	cmp	r12, 9
0x4960:	ja	0x4ca0


0x4966:	lea	rdx, [rip + 0x19fb]
0x496d:	movsxd	rax, dword ptr [rdx + r12*4]
0x4971:	add	rax, rdx
0x4974:	jmp	rax


0x4ca0:	mov	r10, qword ptr [rbx + 0x40]
0x4ca4:	mov	r9, qword ptr [rbx + 0x38]
0x4ca8:	mov	edx, 5
0x4cad:	mov	rax, qword ptr [rbx + 0x10]
0x4cb1:	mov	r8, qword ptr [rbx + 8]
0x4cb5:	lea	rsi, [rip + 0x1624]
0x4cbc:	mov	r13, qword ptr [rbx + 0x30]
0x4cc0:	mov	r12, qword ptr [rbx + 0x28]
0x4cc4:	mov	r15, qword ptr [rbx + 0x20]
0x4cc8:	mov	r14, qword ptr [rbx + 0x18]
0x4ccc:	mov	qword ptr [rsp + 0x18], r10
0x4cd1:	mov	qword ptr [rsp + 0x10], r9
0x4cd6:	mov	qword ptr [rsp], rax
0x4cda:	mov	qword ptr [rsp + 8], r8
0x4cdf:	mov	rbx, qword ptr [rbx]
0x4ce2:	jmp	0x4a72


0x4a72:	xor	edi, edi
0x4a74:	call	0x1530


0x4a79:	mov	r10, qword ptr [rsp + 0x18]
0x4a7e:	push	r10
0x4a80:	jmp	0x49c4


0x49c4:	mov	r9, qword ptr [rsp + 0x18]
0x49c9:	mov	rdx, rax
0x49cc:	mov	rcx, rbx
0x49cf:	mov	esi, 1
0x49d4:	mov	rdi, rbp
0x49d7:	xor	eax, eax
0x49d9:	push	r9
0x49db:	push	r13
0x49dd:	push	r12
0x49df:	push	r15
0x49e1:	push	r14
0x49e3:	mov	r9, qword ptr [rsp + 0x30]
0x49e8:	mov	r8, qword ptr [rsp + 0x38]
0x49ed:	call	0x1750


0x49f2:	add	rsp, 0x30
0x49f6:	add	rsp, 0x28
0x49fa:	pop	rbx
0x49fb:	pop	rbp
0x49fc:	pop	r12
0x49fe:	pop	r13
0x4a00:	pop	r14
0x4a02:	pop	r15
0x4a04:	ret	


0x408d:	mov	dword ptr [rbp], r12d
0x4091:	pop	rbx
0x4092:	pop	rbp
0x4093:	pop	r12
0x4095:	ret	


0x3f4e:	mov	dword ptr [rip + 0x204143], r12d
0x3f55:	mov	eax, dword ptr [rbp + 4]
0x3f58:	shl	r15, 4
0x3f5c:	sub	rsp, 8
0x3f60:	add	rbx, r15
0x3f63:	lea	r15, [rbp + 8]
0x3f67:	mov	r8d, dword ptr [rbp]
0x3f6b:	mov	r11, qword ptr [rbx]
0x3f6e:	mov	r12, qword ptr [rbx + 8]
0x3f72:	mov	rcx, r14
0x3f75:	or	eax, 1
0x3f78:	mov	dword ptr [rsp + 0x24], eax
0x3f7c:	push	qword ptr [rbp + 0x30]
0x3f7f:	mov	r9d, eax
0x3f82:	push	qword ptr [rbp + 0x28]
0x3f85:	push	r15
0x3f87:	mov	rsi, r11
0x3f8a:	mov	rdx, qword ptr [rsp + 0x28]
0x3f8f:	mov	rdi, r12
0x3f92:	mov	qword ptr [rsp + 0x30], r11
0x3f97:	call	0x2c70


0x53e7:	mov	rdi, rbx
0x53ea:	pop	rbx
0x53eb:	jmp	0x1660


0x4e36:	mov	rax, qword ptr [rsp + 0x78]
0x4e3b:	xor	rax, qword ptr fs:[0x28]
0x4e44:	jne	0x4e50


0x4e46:	add	rsp, 0xb8
0x4e4d:	pop	rbx
0x4e4e:	pop	rbp
0x4e4f:	ret	


0x4e50:	call	0x1560


0x4d60:	mov	rax, qword ptr [rsp + 0x58]
0x4d65:	xor	rax, qword ptr fs:[0x28]
0x4d6e:	jne	0x4d75


0x4d70:	add	rsp, 0x68
0x4d74:	ret	


0x4d75:	call	0x1560


0x28d2:	test	eax, eax
0x28d4:	jne	0x2919


0x2919:	lea	r12, [rip + 0x2bf0]
0x2920:	mov	r13, qword ptr [rip + 0x2057a1]
0x2927:	lea	rsi, [rip + 0x3192]
0x292e:	xor	edi, edi
0x2930:	mov	edx, 5
0x2935:	call	0x1530


0x293a:	mov	rsi, r13
0x293d:	mov	rdi, rax
0x2940:	call	0x1610


0x2945:	jmp	0x2819


0x2811:	test	eax, eax
0x2813:	jne	0x2920


0x2920:	mov	r13, qword ptr [rip + 0x2057a1]
0x2927:	lea	rsi, [rip + 0x3192]
0x292e:	xor	edi, edi
0x2930:	mov	edx, 5
0x2935:	call	0x1530


0x1842:	lea	rdi, [rip + 0x1127]
0x1849:	call	0x54d0


0x184e:	mov	byte ptr [rsp + 0x36], 0
0x1853:	mov	byte ptr [rsp + 0x55], 0
0x1858:	mov	byte ptr [rsp + 0x56], 0
0x185d:	mov	byte ptr [rsp + 0x8d], 0
0x1865:	mov	byte ptr [rsp + 0x37], 0
0x186a:	nop	word ptr [rax + rax]
0x1870:	mov	rsi, qword ptr [rsp + 0x48]
0x1875:	mov	edi, dword ptr [rsp + 0x50]
0x1879:	lea	rcx, [rip + 0x206220]
0x1880:	lea	rdx, [rip + 0x3d6e]
0x1887:	xor	r8d, r8d
0x188a:	call	0x1570


0x1570:	jmp	qword ptr [rip + 0x206942]




0x5354:	test	eax, eax
0x5356:	je	0x5394


0x5358:	call	0x14a0


0x535d:	mov	r12d, dword ptr [rax]
0x5360:	mov	rdi, rbx
0x5363:	mov	rbp, rax
0x5366:	call	0x1500


0x536b:	test	r12d, r12d
0x536e:	jne	0x53a0


0x5370:	pop	rbx
0x5371:	pop	rbp
0x5372:	pop	r12
0x5374:	ret	


0x53a0:	mov	dword ptr [rbp], r12d
0x53a4:	mov	eax, 0xffffffff
0x53a9:	jmp	0x5370


0x522a:	and	ebx, 0x20
0x522d:	test	ebx, ebx
0x522f:	jne	0x5248


0x5231:	test	eax, eax
0x5233:	je	0x523f


0x5248:	test	eax, eax
0x524a:	jne	0x5268


0x523f:	pop	rbx
0x5240:	pop	rbp
0x5241:	pop	r12
0x5243:	ret	


0x5235:	test	r12, r12
0x5238:	mov	eax, 0xffffffff
0x523d:	je	0x5278


0x524c:	call	0x14a0


0x5268:	pop	rbx
0x5269:	mov	eax, 0xffffffff
0x526e:	pop	rbp
0x526f:	pop	r12
0x5271:	ret	


0x5278:	call	0x14a0


0x527d:	cmp	dword ptr [rax], 9
0x5280:	pop	rbx
0x5281:	pop	rbp
0x5282:	pop	r12
0x5284:	setne	al
0x5287:	movzx	eax, al
0x528a:	neg	eax
0x528c:	ret	


0x5251:	mov	dword ptr [rax], 0
0x5257:	mov	eax, 0xffffffff
0x525c:	pop	rbx
0x525d:	pop	rbp
0x525e:	pop	r12
0x5260:	ret	


0x2982:	test	eax, eax
0x2984:	je	0x299c


0x299c:	mov	rdi, qword ptr [rip + 0x20573d]
0x29a3:	call	0x5210


0x2986:	call	0x14a0


0x298b:	cmp	byte ptr [rip + 0x20576e], 0
0x2992:	mov	rbx, rax
0x2995:	je	0x29b3


0x29b3:	lea	rsi, [rip + 0x2b4a]
0x29ba:	xor	edi, edi
0x29bc:	mov	edx, 5
0x29c1:	call	0x1530


0x2997:	cmp	dword ptr [rax], 0x20
0x299a:	jne	0x29b3


0x29c6:	mov	rdi, qword ptr [rip + 0x20573b]
0x29cd:	mov	rbp, rax
0x29d0:	test	rdi, rdi
0x29d3:	je	0x29fd


0x29fd:	mov	esi, dword ptr [rbx]
0x29ff:	lea	rdx, [rip + 0x313e]
0x2a06:	mov	rcx, rax
0x2a09:	xor	edi, edi
0x2a0b:	xor	eax, eax
0x2a0d:	call	0x16e0


0x29d5:	call	0x45f0


0x2a12:	jmp	0x29f2


0x29f2:	mov	edi, dword ptr [rip + 0x205648]
0x29f8:	call	0x14c0


0x14c0:	jmp	qword ptr [rip + 0x20699a]




0x29a8:	test	eax, eax
0x29aa:	jne	0x29f2


0x29ac:	add	rsp, 8
0x29b0:	pop	rbx
0x29b1:	pop	rbp
0x29b2:	ret	


0x188f:	cmp	eax, -1
0x1892:	je	0x1983


0x1983:	mov	dword ptr [rsp + 0x30], eax
0x1987:	lea	rax, [rsp + 0xb0]
0x198f:	mov	esi, 1
0x1994:	mov	edi, 1
0x1999:	mov	rdx, rax
0x199c:	mov	qword ptr [rsp + 0x80], rax
0x19a4:	call	0x1680


0x1898:	cmp	eax, 0x62
0x189b:	je	0x1969


0x1680:	jmp	qword ptr [rip + 0x2068ba]


0x1969:	mov	byte ptr [rsp + 0x8d], 1
0x1971:	jmp	0x1908


0x18a1:	jle	0x18c8




0x1908:	mov	byte ptr [rsp + 0x37], 1
0x190d:	jmp	0x1870


0x18c8:	cmp	eax, 0x41
0x18cb:	je	0x18e5


0x18a3:	cmp	eax, 0x73
0x18a6:	je	0x1912


0x1870:	mov	rsi, qword ptr [rsp + 0x48]
0x1875:	mov	edi, dword ptr [rsp + 0x50]
0x1879:	lea	rcx, [rip + 0x206220]
0x1880:	lea	rdx, [rip + 0x3d6e]
0x1887:	xor	r8d, r8d
0x188a:	call	0x1570


0x18e5:	mov	r12d, 1
0x18eb:	mov	byte ptr [rsp + 0x36], 1
0x18f0:	mov	byte ptr [rsp + 0x55], 1
0x18f5:	jmp	0x1870


0x18cd:	jle	0x191c


0x1912:	mov	byte ptr [rsp + 0x56], 1
0x1917:	jmp	0x1870


0x18a8:	jle	0x18fa


0x191c:	cmp	eax, 0xffffff7d
0x1921:	mov	dword ptr [rsp + 0x30], eax
0x1925:	jne	0x2366


0x18cf:	cmp	eax, 0x45
0x18d2:	je	0x18f0


0x18fa:	cmp	eax, 0x65
0x18fd:	je	0x18eb


0x18aa:	cmp	eax, 0x75
0x18ad:	je	0x1870


0x192b:	sub	rsp, 8
0x192f:	mov	rdi, qword ptr [rip + 0x206792]
0x1936:	mov	rcx, qword ptr [rip + 0x2066fb]
0x193d:	push	0
0x193f:	lea	r9, [rip + 0x3c89]
0x1946:	lea	r8, [rip + 0x3c96]
0x194d:	lea	rdx, [rip + 0x3c36]
0x1954:	lea	rsi, [rip + 0x3bb5]
0x195b:	xor	eax, eax
0x195d:	call	0x4d90


0x2366:	cmp	eax, 0xffffff7e
0x236b:	jne	0x23a0


0x18f0:	mov	byte ptr [rsp + 0x55], 1
0x18f5:	jmp	0x1870


0x18d4:	cmp	eax, 0x54
0x18d7:	jne	0x23a0


0x18eb:	mov	byte ptr [rsp + 0x36], 1
0x18f0:	mov	byte ptr [rsp + 0x55], 1
0x18f5:	jmp	0x1870


0x18ff:	cmp	eax, 0x6e
0x1902:	jne	0x23a0


0x18af:	jl	0x1973


0x236d:	xor	edi, edi
0x236f:	call	0x2570


0x23a0:	mov	edi, 1
0x23a5:	call	0x2570


0x18dd:	mov	r12d, 1
0x18e3:	jmp	0x1870


0x1973:	mov	r12d, 1
0x1979:	mov	byte ptr [rsp + 0x36], 1
0x197e:	jmp	0x1870


0x18b5:	cmp	eax, 0x76
0x18b8:	jne	0x23a0


0x18be:	mov	byte ptr [rsp + 0x36], 1
0x18c3:	jmp	0x1870


0x1962:	xor	edi, edi
0x1964:	call	0x1730


0x19a9:	test	eax, eax
0x19ab:	js	0x23af


0x23af:	lea	rsi, [rip + 0x324a]
0x23b6:	mov	edx, 5
0x23bb:	xor	edi, edi
0x23bd:	call	0x1530


0x19b1:	mov	r15, qword ptr [rsp + 0xe8]
0x19b9:	movabs	rax, 0x1ffffffffffe0000
0x19c3:	movsxd	rcx, dword ptr [rip + 0x206706]
0x19ca:	mov	byte ptr [rsp + 0x8e], 0
0x19d2:	mov	byte ptr [rsp + 0x8c], 1
0x19da:	lea	rdx, [r15 - 0x20000]
0x19e1:	mov	qword ptr [rsp + 0x58], rcx
0x19e6:	cmp	rdx, rax
0x19e9:	mov	eax, 0x20000
0x19ee:	cmova	r15, rax
0x19f2:	movsxd	rax, ebx
0x19f5:	mov	qword ptr [rsp + 0x68], rax
0x19fa:	mov	rax, qword ptr [rsp + 0xb0]
0x1a02:	mov	qword ptr [rsp + 0x90], rax
0x1a0a:	mov	rax, qword ptr [rsp + 0xb8]
0x1a12:	mov	qword ptr [rsp + 0x98], rax
0x1a1a:	mov	eax, dword ptr [rsp + 0xc8]
0x1a21:	and	eax, 0xf000
0x1a26:	mov	dword ptr [rsp + 0x88], eax
0x1a2d:	movzx	eax, byte ptr [rsp + 0x37]
0x1a32:	or	al, byte ptr [rsp + 0x55]
0x1a36:	cmp	dword ptr [rsp + 0x50], ecx
0x1a3a:	mov	byte ptr [rsp + 0x8f], al
0x1a41:	lea	rax, [rip + 0x4142]
0x1a48:	mov	qword ptr [rip + 0x2066a9], rax
0x1a4f:	jle	0x22fa


0x22fa:	lea	rax, [rip + 0x3889]
0x2301:	jmp	0x1a6a


0x1a55:	mov	rax, qword ptr [rsp + 0x48]
0x1a5a:	mov	rcx, qword ptr [rsp + 0x58]
0x1a5f:	mov	rax, qword ptr [rax + rcx*8]
0x1a63:	mov	qword ptr [rip + 0x20668e], rax
0x1a6a:	lea	rdi, [rip + 0x4119]
0x1a71:	mov	ecx, 2
0x1a76:	mov	rsi, rax
0x1a79:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1a6a:	lea	rdi, [rip + 0x4119]
0x1a71:	mov	ecx, 2
0x1a76:	mov	rsi, rax
0x1a79:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1a79:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1a7b:	seta	bl
0x1a7e:	sbb	bl, 0
0x1a81:	movsx	ebx, bl
0x1a84:	test	ebx, ebx
0x1a86:	jne	0x1f59


0x1a8c:	mov	dword ptr [rip + 0x20665e], 0
0x1a96:	mov	byte ptr [rsp + 0x8e], 1
0x1a9e:	mov	rdx, qword ptr [rsp + 0x80]
0x1aa6:	mov	esi, ebx
0x1aa8:	mov	edi, 1
0x1aad:	call	0x1680


0x1f59:	xor	esi, esi
0x1f5b:	mov	rdi, rax
0x1f5e:	xor	eax, eax
0x1f60:	call	0x16f0


0x16f0:	jmp	qword ptr [rip + 0x206882]




0x1ab2:	test	eax, eax
0x1ab4:	js	0x2167


0x2167:	mov	rdx, qword ptr [rip + 0x205f8a]
0x216e:	mov	esi, 3
0x2173:	xor	edi, edi
0x2175:	call	0x4620


0x1aba:	mov	rcx, qword ptr [rsp + 0xe8]
0x1ac2:	movabs	rax, 0x1ffffffffffe0000
0x1acc:	mov	edi, ebx
0x1ace:	lea	rdx, [rcx - 0x20000]
0x1ad5:	cmp	rdx, rax
0x1ad8:	mov	eax, 0x20000
0x1add:	cmovbe	rax, rcx
0x1ae1:	xor	edx, edx
0x1ae3:	xor	esi, esi
0x1ae5:	mov	ecx, 2
0x1aea:	mov	qword ptr [rsp + 0x38], rax
0x1aef:	call	0x2a20


0x1af4:	cmp	dword ptr [rsp + 0x88], 0x8000
0x1aff:	je	0x20d4


0x20d4:	mov	rax, qword ptr [rsp + 0x90]
0x20dc:	cmp	qword ptr [rsp + 0xb0], rax
0x20e4:	jne	0x1b05


0x1b05:	cmp	byte ptr [rsp + 0x8f], 0
0x1b0d:	mov	rax, qword ptr [rsp + 0x68]
0x1b12:	lea	r14, [rax - 1]
0x1b16:	jne	0x1b2c


0x20ea:	mov	rax, qword ptr [rsp + 0x98]
0x20f2:	cmp	qword ptr [rsp + 0xb8], rax
0x20fa:	jne	0x1b05


0x1b18:	movzx	r13d, byte ptr [rsp + 0x36]
0x1b1e:	or	r13d, r12d
0x1b21:	or	r13b, byte ptr [rsp + 0x56]
0x1b26:	je	0x221f


0x1b2c:	mov	rbx, qword ptr [rsp + 0x68]
0x1b31:	mov	rbp, qword ptr [rsp + 0x38]
0x1b36:	mov	rdi, rbx
0x1b39:	add	rdi, rbp
0x1b3c:	call	0x4ef0


0x2100:	mov	edi, dword ptr [rip + 0x205fee]
0x2106:	xor	esi, esi
0x2108:	mov	edx, 1
0x210d:	call	0x15a0


0x221f:	mov	rax, qword ptr [rsp + 0x38]
0x2224:	cmp	r15, rax
0x2227:	cmovae	rax, r15
0x222b:	lea	rdi, [rax + r14]
0x222f:	mov	rbp, rax
0x2232:	call	0x4ef0


0x2112:	cmp	rax, qword ptr [rsp + 0xe0]
0x211a:	jge	0x1b05


0x2120:	mov	rdx, qword ptr [rip + 0x205fd1]
0x2127:	mov	esi, 3
0x212c:	xor	edi, edi
0x212e:	call	0x4620


0x2237:	add	r14, rax
0x223a:	mov	qword ptr [rsp + 0x70], rax
0x223f:	xor	edx, edx
0x2241:	mov	rax, r14
0x2244:	mov	rbx, r14
0x2247:	div	qword ptr [rsp + 0x68]
0x224c:	sub	rbx, rdx
0x224f:	jmp	0x226f


0x226f:	mov	edi, dword ptr [rip + 0x205e7f]
0x2275:	mov	rdx, rbp
0x2278:	mov	rsi, rbx
0x227b:	call	0x4810


0x2280:	cmp	rax, -1
0x2284:	mov	r14, rax
0x2287:	jne	0x2251


0x2289:	mov	rdx, qword ptr [rip + 0x205e68]
0x2290:	mov	esi, 3
0x2295:	xor	edi, edi
0x2297:	call	0x4620


0x2251:	test	rax, rax
0x2254:	je	0x22c6


0x22c6:	mov	r13d, 1
0x22cc:	jmp	0x22b9


0x2256:	mov	rdx, rax
0x2259:	mov	rsi, rbx
0x225c:	mov	edi, 1
0x2261:	call	0x2a60


0x22b9:	and	byte ptr [rsp + 0x8c], r13b
0x22c1:	jmp	0x206a


0x206a:	mov	rdi, qword ptr [rsp + 0x70]
0x206f:	call	0x1480


0x2074:	mov	rsi, qword ptr [rip + 0x20607d]
0x207b:	lea	rdi, [rip + 0x3b08]
0x2082:	mov	ecx, 2
0x2087:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2087:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2089:	seta	al
0x208c:	sbb	al, 0
0x208e:	test	al, al
0x2090:	je	0x1fad


0x1fad:	add	qword ptr [rsp + 0x58], 1
0x1fb3:	mov	rax, qword ptr [rsp + 0x58]
0x1fb8:	cmp	dword ptr [rsp + 0x50], eax
0x1fbc:	jg	0x1a55


0x2096:	mov	edi, dword ptr [rip + 0x206058]
0x209c:	call	0x15d0


0x1fc2:	cmp	byte ptr [rsp + 0x8e], 0
0x1fca:	jne	0x21e4


0x15d0:	jmp	qword ptr [rip + 0x206912]


0x1fd0:	movzx	eax, byte ptr [rsp + 0x8c]
0x1fd8:	xor	eax, 1
0x1fdb:	mov	rcx, qword ptr [rsp + 0x148]
0x1fe3:	xor	rcx, qword ptr fs:[0x28]
0x1fec:	movzx	eax, al
0x1fef:	jne	0x23aa


0x21e4:	xor	edi, edi
0x21e6:	call	0x15d0




0x1ff5:	add	rsp, 0x158
0x1ffc:	pop	rbx
0x1ffd:	pop	rbp
0x1ffe:	pop	r12
0x2000:	pop	r13
0x2002:	pop	r14
0x2004:	pop	r15
0x2006:	ret	


0x23aa:	call	0x1560


0x2266:	cmp	r14, rax
0x2269:	jne	0x2374


0x2374:	lea	rsi, [rip + 0x3189]
0x237b:	mov	edx, 5
0x2380:	xor	edi, edi
0x2382:	call	0x1530


0x1b41:	mov	r13, rax
0x1b44:	mov	qword ptr [rsp + 0x70], rax
0x1b49:	lea	rax, [rbx + r15 + 0x12]
0x1b4e:	lea	rdi, [rax + rbp*4]
0x1b52:	call	0x4ef0


0x1b57:	mov	rcx, rax
0x1b5a:	mov	qword ptr [rsp + 0x78], rax
0x1b5f:	xor	edx, edx
0x1b61:	add	rcx, r14
0x1b64:	add	r14, r13
0x1b67:	mov	esi, dword ptr [rip + 0x206583]
0x1b6d:	mov	rax, rcx
0x1b70:	mov	r13d, r12d
0x1b73:	mov	byte ptr [rsp + 0x54], 1
0x1b78:	div	rbx
0x1b7b:	mov	rax, r14
0x1b7e:	mov	dword ptr [rsp + 4], esi
0x1b82:	xor	r13d, 1
0x1b86:	sub	rcx, rdx
0x1b89:	xor	edx, edx
0x1b8b:	div	rbx
0x1b8e:	mov	rax, r14
0x1b91:	lea	rsi, [rcx + r15]
0x1b95:	mov	r14, r15
0x1b98:	mov	qword ptr [rsp + 0x20], rcx
0x1b9d:	mov	r15, rcx
0x1ba0:	mov	qword ptr [rsp + 0x10], rsi
0x1ba5:	sub	rax, rdx
0x1ba8:	lea	rbx, [rax + 1]
0x1bac:	mov	qword ptr [rsp + 0x18], rax
0x1bb1:	mov	qword ptr [rsp + 8], rax
0x1bb6:	movzx	eax, byte ptr [rsp + 0x8d]
0x1bbe:	mov	qword ptr [rsp + 0x40], rbx
0x1bc3:	xor	eax, 1
0x1bc6:	mov	byte ptr [rsp + 0x57], al
0x1bca:	lea	rax, [rsp + 0xac]
0x1bd2:	mov	qword ptr [rsp + 0x60], rax
0x1bd7:	nop	word ptr [rax + rax]
0x1be0:	cmp	qword ptr [rsp + 0x10], r15
0x1be5:	jbe	0x1da3


0x1da3:	mov	rbp, qword ptr [rsp + 0x20]
0x1da8:	nop	dword ptr [rax + rax]
0x1db0:	mov	rdx, r14
0x1db3:	mov	rsi, rbp
0x1db6:	mov	edi, 1
0x1dbb:	call	0x2a60


0x1beb:	cmp	rbx, qword ptr [rsp + 8]
0x1bf0:	jbe	0x1e03


0x1e03:	add	dword ptr [rsp + 4], 1
0x1e08:	lea	rdx, [rbx + 1]
0x1e0c:	mov	eax, dword ptr [rsp + 4]
0x1e10:	test	eax, eax
0x1e12:	jle	0x1e60


0x1bf6:	cmp	byte ptr [rsp + 0x54], 0
0x1bfb:	mov	dword ptr [rsp + 0xac], 0
0x1c06:	jne	0x1eb0


0x1e60:	cmp	byte ptr [rsp + 0x55], 0
0x1e65:	lea	rax, [r15 + 1]
0x1e69:	je	0x1ea0


0x1e14:	cmp	eax, 1
0x1e17:	je	0x1e2c


0x1c0c:	mov	rbx, r15
0x1c0f:	sub	rbx, qword ptr [rsp + 0x20]
0x1c14:	jne	0x1ef3


0x1eb0:	mov	ebx, dword ptr [rip + 0x20623e]
0x1eb6:	mov	rdx, qword ptr [rsp + 0x60]
0x1ebb:	xor	eax, eax
0x1ebd:	mov	esi, 0x541b
0x1ec2:	mov	edi, ebx
0x1ec4:	call	0x15c0


0x1ea0:	mov	rsi, rax
0x1ea3:	mov	rax, r15
0x1ea6:	mov	r15, rsi
0x1ea9:	jmp	0x1e73


0x1e6b:	mov	byte ptr [r15], 0x24
0x1e6f:	add	r15, 2
0x1e73:	mov	byte ptr [rax], 0xa
0x1e76:	mov	rax, rbx
0x1e79:	mov	rbx, rdx
0x1e7c:	jmp	0x1c5c


0x1e2c:	cmp	byte ptr [rsp + 0x57], 0
0x1e31:	je	0x1e60


0x1e19:	cmp	byte ptr [rsp + 0x56], 0
0x1e1e:	mov	dword ptr [rsp + 4], 2
0x1e26:	jne	0x1ee8


0x1c1a:	mov	ebx, dword ptr [rip + 0x2064d4]
0x1c20:	mov	rdx, qword ptr [rsp + 0x38]
0x1c25:	mov	rsi, qword ptr [rsp + 0x18]
0x1c2a:	mov	edi, ebx
0x1c2c:	call	0x4810


0x1ef3:	mov	r15, qword ptr [rsp + 0x20]
0x1ef8:	mov	rdx, rbx
0x1efb:	mov	edi, 1
0x1f00:	mov	rsi, r15
0x1f03:	call	0x2a60


0x15c0:	jmp	qword ptr [rip + 0x20691a]


0x1e73:	mov	byte ptr [rax], 0xa
0x1e76:	mov	rax, rbx
0x1e79:	mov	rbx, rdx
0x1e7c:	jmp	0x1c5c


0x1c5c:	movzx	ebp, byte ptr [rax]
0x1c5f:	cmp	bpl, 0xa
0x1c63:	je	0x1be0


0x1e33:	cmp	byte ptr [rsp + 0x37], 0
0x1e38:	je	0x1e60


0x1ee8:	movzx	ebp, byte ptr [rbx]
0x1eeb:	mov	rbx, rdx
0x1eee:	jmp	0x1c5f




0x1be0:	cmp	qword ptr [rsp + 0x10], r15
0x1be5:	jbe	0x1da3


0x1c69:	mov	edi, dword ptr [rsp + 4]
0x1c6d:	test	edi, edi
0x1c6f:	js	0x1c8f


0x1e3a:	mov	qword ptr [rsp + 0x28], rdx
0x1e3f:	call	0x24f0


0x1c5f:	cmp	bpl, 0xa
0x1c63:	je	0x1be0


0x1c8f:	cmp	byte ptr [rsp + 0x36], 0
0x1c94:	je	0x1cbb


0x1c71:	cmp	byte ptr [rsp + 0x37], 0
0x1c76:	je	0x1c8f


0x1cbb:	cmp	bpl, 9
0x1cbf:	je	0x1ca0


0x1c96:	jmp	0x1ced


0x1c78:	call	0x24f0


0x1ca0:	test	r12b, r12b
0x1ca3:	je	0x1cc1


0x1cc1:	cmp	bpl, 0xa
0x1cc5:	je	0x1d90


0x1ced:	cmp	bpl, 0x1f
0x1cf1:	ja	0x1cd8


0x1ca5:	mov	eax, 0x495e
0x1caa:	add	r15, 2
0x1cae:	mov	word ptr [r15 - 2], ax
0x1cb3:	add	rbx, 1
0x1cb7:	movzx	ebp, byte ptr [rbx - 1]
0x1cbb:	cmp	bpl, 9
0x1cbf:	je	0x1ca0


0x1d90:	cmp	qword ptr [rsp + 0x10], r15
0x1d95:	mov	eax, dword ptr [rsp + 0x30]
0x1d99:	mov	dword ptr [rsp + 4], eax
0x1d9d:	ja	0x1beb


0x1ccb:	mov	byte ptr [r15], bpl
0x1cce:	add	r15, 1
0x1cd2:	jmp	0x1cb3


0x1cf3:	cmp	bpl, 9
0x1cf7:	jne	0x1d40


0x1cd8:	cmp	bpl, 0x7e
0x1cdc:	ja	0x1d10


0x1cb3:	add	rbx, 1
0x1cb7:	movzx	ebp, byte ptr [rbx - 1]
0x1cbb:	cmp	bpl, 9
0x1cbf:	je	0x1ca0


0x1cf9:	test	r13b, r13b
0x1cfc:	je	0x1d40


0x1d40:	cmp	bpl, 0xa
0x1d44:	je	0x1d90


0x1cde:	mov	byte ptr [r15], bpl
0x1ce1:	add	r15, 1
0x1ce5:	add	rbx, 1
0x1ce9:	movzx	ebp, byte ptr [rbx - 1]
0x1ced:	cmp	bpl, 0x1f
0x1cf1:	ja	0x1cd8


0x1d10:	cmp	bpl, 0x7f
0x1d14:	je	0x1d60


0x1cfe:	mov	byte ptr [r15], 9
0x1d02:	add	r15, 1
0x1d06:	jmp	0x1ce5


0x1d46:	add	ebp, 0x40
0x1d49:	mov	byte ptr [r15], 0x5e
0x1d4d:	add	r15, 2
0x1d51:	mov	byte ptr [r15 - 1], bpl
0x1d55:	jmp	0x1ce5


0x1d60:	mov	esi, 0x3f5e
0x1d65:	add	r15, 2
0x1d69:	mov	word ptr [r15 - 2], si
0x1d6e:	jmp	0x1ce5


0x1d16:	mov	ecx, 0x2d4d
0x1d1b:	cmp	bpl, 0x9f
0x1d1f:	mov	word ptr [r15], cx
0x1d23:	jbe	0x1d78


0x1ce5:	add	rbx, 1
0x1ce9:	movzx	ebp, byte ptr [rbx - 1]
0x1ced:	cmp	bpl, 0x1f
0x1cf1:	ja	0x1cd8


0x1d78:	sub	ebp, 0x40
0x1d7b:	mov	byte ptr [r15 + 2], 0x5e
0x1d80:	add	r15, 4
0x1d84:	mov	byte ptr [r15 - 1], bpl
0x1d88:	jmp	0x1ce5


0x1d25:	cmp	bpl, 0xff
0x1d29:	je	0x1e88


0x1e88:	mov	edx, 0x3f5e
0x1e8d:	add	r15, 4
0x1e91:	mov	word ptr [r15 - 2], dx
0x1e96:	jmp	0x1ce5


0x1d2f:	add	ebp, -0x80
0x1d32:	add	r15, 3
0x1d36:	mov	byte ptr [r15 - 1], bpl
0x1d3a:	jmp	0x1ce5


0x1c7d:	mov	rsi, qword ptr [rip + 0x2063ac]
0x1c84:	mov	rdi, r15
0x1c87:	call	0x1520


0x1520:	jmp	qword ptr [rip + 0x20696a]




0x1e44:	mov	rsi, qword ptr [rip + 0x2061e5]
0x1e4b:	mov	rdi, r15
0x1e4e:	call	0x1520


0x1c31:	cmp	rax, -1
0x1c35:	je	0x2007


0x2007:	mov	rdx, qword ptr [rip + 0x2060ea]
0x200e:	xor	edi, edi
0x2010:	mov	rax, r15
0x2013:	mov	esi, 3
0x2018:	mov	r15, r14
0x201b:	mov	r14, rax
0x201e:	call	0x4620


0x1c3b:	test	rax, rax
0x1c3e:	je	0x20ae


0x20ae:	mov	rax, r15
0x20b1:	mov	r15, r14
0x20b4:	mov	rbx, rax
0x20b7:	sub	rbx, qword ptr [rsp + 0x20]
0x20bc:	jne	0x21c4


0x1c44:	mov	rdi, qword ptr [rsp + 0x18]
0x1c49:	mov	rbx, qword ptr [rsp + 0x40]
0x1c4e:	add	rax, rdi
0x1c51:	mov	qword ptr [rsp + 8], rax
0x1c56:	mov	byte ptr [rax], 0xa
0x1c59:	mov	rax, rdi
0x1c5c:	movzx	ebp, byte ptr [rax]
0x1c5f:	cmp	bpl, 0xa
0x1c63:	je	0x1be0


0x20c2:	mov	eax, dword ptr [rsp + 4]
0x20c6:	mov	r10d, 1
0x20cc:	mov	dword ptr [rip + 0x20601e], eax
0x20d2:	jmp	0x2058


0x21c4:	mov	rsi, qword ptr [rsp + 0x20]
0x21c9:	mov	rdx, rbx
0x21cc:	mov	edi, 1
0x21d1:	call	0x2a60


0x2058:	mov	rdi, qword ptr [rsp + 0x78]
0x205d:	and	byte ptr [rsp + 0x8c], r10b
0x2065:	call	0x1480


0x21d6:	cmp	rbx, rax
0x21d9:	je	0x20c2


0x21df:	jmp	0x1f11


0x1f11:	call	0x17a0


0x1f08:	cmp	rbx, rax
0x1f0b:	je	0x1c1a


0x1dc0:	cmp	r14, rax
0x1dc3:	jne	0x22ce


0x1dc9:	add	rbp, r14
0x1dcc:	mov	r9, r15
0x1dcf:	sub	r9, rbp
0x1dd2:	cmp	r14, r9
0x1dd5:	jbe	0x1db0


0x22ce:	lea	rsi, [rip + 0x322f]
0x22d5:	mov	edx, 5
0x22da:	xor	edi, edi
0x22dc:	call	0x1530


0x1db0:	mov	rdx, r14
0x1db3:	mov	rsi, rbp
0x1db6:	mov	edi, 1
0x1dbb:	call	0x2a60


0x1dd7:	mov	r15, qword ptr [rsp + 0x20]
0x1ddc:	mov	rdx, r9
0x1ddf:	mov	rsi, rbp
0x1de2:	mov	qword ptr [rsp + 0x28], r9
0x1de7:	mov	rdi, r15
0x1dea:	call	0x16d0


0x16d0:	jmp	qword ptr [rip + 0x206892]




0x22e1:	mov	rbx, rax
0x22e4:	call	0x14a0


0x22e9:	mov	esi, dword ptr [rax]
0x22eb:	mov	rdx, rbx
0x22ee:	mov	edi, 1
0x22f3:	xor	eax, eax
0x22f5:	call	0x16e0


0x2387:	mov	rbx, rax
0x238a:	call	0x14a0


0x238f:	mov	esi, dword ptr [rax]
0x2391:	mov	rdx, rbx
0x2394:	mov	edi, 1
0x2399:	xor	eax, eax
0x239b:	call	0x16e0


0x23c2:	mov	rbx, rax
0x23c5:	call	0x14a0


0x23ca:	mov	esi, dword ptr [rax]
0x23cc:	mov	rdx, rbx
0x23cf:	mov	edi, 1
0x23d4:	xor	eax, eax
0x23d6:	call	0x16e0


0x23db:	nop	dword ptr [rax + rax]


0x1def:	cmp	rbx, qword ptr [rsp + 8]
0x1df4:	mov	r9, qword ptr [rsp + 0x28]
0x1df9:	lea	r15, [r15 + r9]
0x1dfd:	ja	0x1bf6


0x1f25:	mov	ecx, dword ptr [rax]
0x1f27:	cmp	ecx, 0x5f
0x1f2a:	sete	r10b
0x1f2e:	cmp	ecx, 0x26
0x1f31:	ja	0x1f46


0x1f33:	movabs	rdx, 0x4002480000
0x1f3d:	shr	rdx, cl
0x1f40:	and	edx, 1
0x1f43:	or	r10d, edx
0x1f46:	test	r10b, r10b
0x1f49:	je	0x2306


0x1f46:	test	r10b, r10b
0x1f49:	je	0x2306


0x2306:	mov	rsi, qword ptr [rip + 0x205deb]
0x230d:	mov	edi, 4
0x2312:	mov	byte ptr [rsp + 8], r10b
0x2317:	mov	qword ptr [rsp + 0x10], rax
0x231c:	mov	r15, r14
0x231f:	call	0x4520


0x1f4f:	mov	byte ptr [rsp + 0x54], 0
0x1f54:	jmp	0x1ecd


0x1ecd:	mov	r8d, dword ptr [rsp + 0xac]
0x1ed5:	test	r8d, r8d
0x1ed8:	jne	0x1c20


0x1ede:	jmp	0x1c0c


0x1c20:	mov	rdx, qword ptr [rsp + 0x38]
0x1c25:	mov	rsi, qword ptr [rsp + 0x18]
0x1c2a:	mov	edi, ebx
0x1c2c:	call	0x4810


0x1e53:	mov	rdx, qword ptr [rsp + 0x28]
0x1e58:	mov	r15, rax
0x1e5b:	nop	dword ptr [rax + rax]
0x1e60:	cmp	byte ptr [rsp + 0x55], 0
0x1e65:	lea	rax, [r15 + 1]
0x1e69:	je	0x1ea0


0x1c8c:	mov	r15, rax
0x1c8f:	cmp	byte ptr [rsp + 0x36], 0
0x1c94:	je	0x1cbb


0x1ec9:	test	eax, eax
0x1ecb:	js	0x1f20


0x1f20:	call	0x14a0


0x21eb:	test	eax, eax
0x21ed:	jns	0x1fd0


0x21f3:	lea	rsi, [rip + 0x344a]
0x21fa:	mov	edx, 5
0x21ff:	xor	edi, edi
0x2201:	call	0x1530


0x2206:	mov	rbx, rax
0x2209:	call	0x14a0


0x220e:	mov	esi, dword ptr [rax]
0x2210:	mov	rdx, rbx
0x2213:	mov	edi, 1
0x2218:	xor	eax, eax
0x221a:	call	0x16e0


0x20a1:	test	eax, eax
0x20a3:	jns	0x1fad


0x20a9:	jmp	0x1f75


0x1f75:	mov	rdx, qword ptr [rip + 0x20617c]
0x1f7c:	mov	esi, 3
0x1f81:	xor	edi, edi
0x1f83:	call	0x4620


0x1f65:	test	eax, eax
0x1f67:	mov	ebx, eax
0x1f69:	mov	dword ptr [rip + 0x206185], eax
0x1f6f:	jns	0x1a9e


0x1a9e:	mov	rdx, qword ptr [rsp + 0x80]
0x1aa6:	mov	esi, ebx
0x1aa8:	mov	edi, 1
0x1aad:	call	0x1680


0x2324:	lea	rsi, [rip + 0x3303]
0x232b:	mov	edx, 5
0x2330:	xor	edi, edi
0x2332:	mov	rbx, rax
0x2335:	call	0x1530


0x233a:	mov	r11, qword ptr [rsp + 0x10]
0x233f:	mov	rdx, rax
0x2342:	mov	rcx, rbx
0x2345:	xor	eax, eax
0x2347:	xor	edi, edi
0x2349:	mov	esi, dword ptr [r11]
0x234c:	call	0x16e0


0x2351:	mov	eax, dword ptr [rsp + 4]
0x2355:	movzx	r10d, byte ptr [rsp + 8]
0x235b:	mov	dword ptr [rip + 0x205d8f], eax
0x2361:	jmp	0x2058


0x1f88:	mov	rbx, rax
0x1f8b:	call	0x14a0


0x1f90:	mov	esi, dword ptr [rax]
0x1f92:	lea	rdx, [rip + 0x3bab]
0x1f99:	mov	rcx, rbx
0x1f9c:	xor	edi, edi
0x1f9e:	xor	eax, eax
0x1fa0:	call	0x16e0


0x1fa5:	mov	byte ptr [rsp + 0x8c], 0
0x1fad:	add	qword ptr [rsp + 0x58], 1
0x1fb3:	mov	rax, qword ptr [rsp + 0x58]
0x1fb8:	cmp	dword ptr [rsp + 0x50], eax
0x1fbc:	jg	0x1a55


0x2023:	mov	rbx, rax
0x2026:	call	0x14a0


0x202b:	mov	esi, dword ptr [rax]
0x202d:	lea	rdx, [rip + 0x3b10]
0x2034:	xor	edi, edi
0x2036:	xor	eax, eax
0x2038:	mov	rcx, rbx
0x203b:	call	0x16e0


0x2040:	sub	r14, qword ptr [rsp + 0x20]
0x2045:	jne	0x21a4


0x204b:	mov	eax, dword ptr [rsp + 4]
0x204f:	xor	r10d, r10d
0x2052:	mov	dword ptr [rip + 0x206098], eax
0x2058:	mov	rdi, qword ptr [rsp + 0x78]
0x205d:	and	byte ptr [rsp + 0x8c], r10b
0x2065:	call	0x1480


0x21a4:	mov	rsi, qword ptr [rsp + 0x20]
0x21a9:	mov	rdx, r14
0x21ac:	mov	edi, 1
0x21b1:	call	0x2a60


0x21b6:	cmp	r14, rax
0x21b9:	je	0x204b


0x21bf:	jmp	0x1f11


0x229c:	mov	rbx, rax
0x229f:	call	0x14a0


0x22a4:	mov	esi, dword ptr [rax]
0x22a6:	lea	rdx, [rip + 0x3897]
0x22ad:	mov	rcx, rbx
0x22b0:	xor	edi, edi
0x22b2:	xor	eax, eax
0x22b4:	call	0x16e0


0x2133:	lea	rsi, [rip + 0x34d6]
0x213a:	mov	rbx, rax
0x213d:	mov	edx, 5
0x2142:	xor	edi, edi
0x2144:	call	0x1530


0x2149:	mov	rcx, rbx
0x214c:	mov	rdx, rax
0x214f:	xor	esi, esi
0x2151:	xor	edi, edi
0x2153:	xor	eax, eax
0x2155:	call	0x16e0


0x215a:	mov	byte ptr [rsp + 0x8c], 0
0x2162:	jmp	0x2074


0x217a:	mov	rbx, rax
0x217d:	call	0x14a0


0x2182:	mov	esi, dword ptr [rax]
0x2184:	lea	rdx, [rip + 0x39b9]
0x218b:	mov	rcx, rbx
0x218e:	xor	edi, edi
0x2190:	xor	eax, eax
0x2192:	call	0x16e0


0x2197:	mov	byte ptr [rsp + 0x8c], 0
0x219f:	jmp	0x2074


0x29da:	mov	esi, dword ptr [rbx]
0x29dc:	lea	rdx, [rip + 0x315d]
0x29e3:	mov	rcx, rax
0x29e6:	mov	r8, rbp
0x29e9:	xor	edi, edi
0x29eb:	xor	eax, eax
0x29ed:	call	0x16e0


0x3f9c:	add	rsp, 0x20
0x3fa0:	mov	r11, qword ptr [rsp + 0x10]
0x3fa5:	cmp	r11, rax
0x3fa8:	ja	0x4011


0x3faa:	lea	rsi, [rax + 1]
0x3fae:	lea	rax, [rip + 0x20416b]
0x3fb5:	cmp	r12, rax
0x3fb8:	mov	qword ptr [rbx], rsi
0x3fbb:	je	0x3fcf


0x4011:	mov	eax, dword ptr [rsp + 0x18]
0x4015:	mov	dword ptr [r13], eax
0x4019:	add	rsp, 0x28
0x401d:	mov	rax, r12
0x4020:	pop	rbx
0x4021:	pop	rbp
0x4022:	pop	r12
0x4024:	pop	r13
0x4026:	pop	r14
0x4028:	pop	r15
0x402a:	ret	


0x3fcf:	mov	rdi, rsi
0x3fd2:	mov	qword ptr [rsp + 0x10], rsi
0x3fd7:	call	0x4ef0


0x3fbd:	mov	rdi, r12
0x3fc0:	mov	qword ptr [rsp + 0x10], rsi
0x3fc5:	call	0x1480


0x3fca:	mov	rsi, qword ptr [rsp + 0x10]
0x3fcf:	mov	rdi, rsi
0x3fd2:	mov	qword ptr [rsp + 0x10], rsi
0x3fd7:	call	0x4ef0


0x3fdc:	sub	rsp, 8
0x3fe0:	mov	qword ptr [rbx + 8], rax
0x3fe4:	mov	r8d, dword ptr [rbp]
0x3fe8:	push	qword ptr [rbp + 0x30]
0x3feb:	push	qword ptr [rbp + 0x28]
0x3fee:	mov	rcx, r14
0x3ff1:	push	r15
0x3ff3:	mov	r9d, dword ptr [rsp + 0x3c]
0x3ff8:	mov	rdi, rax
0x3ffb:	mov	rdx, qword ptr [rsp + 0x28]
0x4000:	mov	rsi, qword ptr [rsp + 0x30]
0x4005:	mov	r12, rax
0x4008:	call	0x2c70


0x4722:	mov	rdi, qword ptr [rsp + 0x38]
0x4727:	xor	rdi, qword ptr fs:[0x28]
0x4730:	jne	0x473c


0x4732:	add	rsp, 0x48
0x4736:	ret	


0x473c:	call	0x1560


0x446f:	mov	rcx, qword ptr [rsp + 0x38]
0x4474:	xor	rcx, qword ptr fs:[0x28]
0x447d:	jne	0x4489


0x447f:	add	rsp, 0x48
0x4483:	ret	


0x4489:	call	0x1560


0x44fb:	mov	rdx, qword ptr [rsp + 0x38]
0x4500:	xor	rdx, qword ptr fs:[0x28]
0x4509:	jne	0x4515


0x450b:	add	rsp, 0x48
0x450f:	ret	


0x4515:	call	0x1560


0x468f:	mov	rcx, qword ptr [rsp + 0x38]
0x4694:	xor	rcx, qword ptr fs:[0x28]
0x469d:	jne	0x46a9


0x469f:	add	rsp, 0x48
0x46a3:	ret	


0x46a9:	call	0x1560


0x45be:	mov	rsi, qword ptr [rsp + 0x38]
0x45c3:	xor	rsi, qword ptr fs:[0x28]
0x45cc:	jne	0x45d3


0x45ce:	add	rsp, 0x48
0x45d2:	ret	


0x45d3:	call	0x1560


0x400d:	add	rsp, 0x20
0x4011:	mov	eax, dword ptr [rsp + 0x18]
0x4015:	mov	dword ptr [r13], eax
0x4019:	add	rsp, 0x28
0x401d:	mov	rax, r12
0x4020:	pop	rbx
0x4021:	pop	rbp
0x4022:	pop	r12
0x4024:	pop	r13
0x4026:	pop	r14
0x4028:	pop	r15
0x402a:	ret	


0x425c:	lea	rsi, [rax + 1]
0x4260:	mov	qword ptr [rsp + 0x48], rax
0x4265:	add	rsp, 0x20
0x4269:	mov	rdi, rsi
0x426c:	mov	qword ptr [rsp + 0x18], rsi
0x4271:	call	0x4ef0


0x4276:	mov	qword ptr [rsp + 0x10], rax
0x427b:	sub	rsp, 8
0x427f:	push	qword ptr [rbx + 0x30]
0x4282:	push	qword ptr [rbx + 0x28]
0x4285:	mov	r10, qword ptr [rsp + 0x38]
0x428a:	mov	r9d, ebp
0x428d:	mov	r8d, dword ptr [rbx]
0x4290:	mov	rcx, r15
0x4293:	mov	rdx, r14
0x4296:	mov	rdi, rax
0x4299:	push	r10
0x429b:	mov	rsi, qword ptr [rsp + 0x38]
0x42a0:	call	0x2c70


0x42a5:	mov	eax, dword ptr [rsp + 0x2c]
0x42a9:	add	rsp, 0x20
0x42ad:	test	r12, r12
0x42b0:	mov	dword ptr [r13], eax
0x42b4:	je	0x42bf


0x42bf:	mov	rax, qword ptr [rsp + 0x10]
0x42c4:	add	rsp, 0x38
0x42c8:	pop	rbx
0x42c9:	pop	rbp
0x42ca:	pop	r12
0x42cc:	pop	r13
0x42ce:	pop	r14
0x42d0:	pop	r15
0x42d2:	ret	


0x42b6:	mov	r11, qword ptr [rsp + 0x28]
0x42bb:	mov	qword ptr [r12], r11
0x42bf:	mov	rax, qword ptr [rsp + 0x10]
0x42c4:	add	rsp, 0x38
0x42c8:	pop	rbx
0x42c9:	pop	rbp
0x42ca:	pop	r12
0x42cc:	pop	r13
0x42ce:	pop	r14
0x42d0:	pop	r15
0x42d2:	ret	


0x41d1:	mov	dword ptr [rbp], r12d
0x41d5:	add	rsp, 0x38
0x41d9:	pop	rbx
0x41da:	pop	rbp
0x41db:	pop	r12
0x41dd:	pop	r13
0x41df:	pop	r14
0x41e1:	pop	r15
0x41e3:	ret	


0x549d:	add	rbx, 1
0x54a1:	cmp	rbp, rbx
0x54a4:	jne	0x5490


0x5490:	mov	rdx, r15
0x5493:	mov	rsi, r14
0x5496:	mov	edi, r13d
0x5499:	call	qword ptr [r12 + rbx*8]






0x4b60:	lea	rsi, [rip + 0x1671]
0x4b67:	mov	edx, 5
0x4b6c:	xor	edi, edi
0x4b6e:	mov	r14, qword ptr [rbx + 0x18]
0x4b72:	mov	r13, qword ptr [rbx + 0x10]
0x4b76:	mov	r12, qword ptr [rbx + 8]
0x4b7a:	mov	rbx, qword ptr [rbx]
0x4b7d:	call	0x1530


0x4980:	mov	r9, qword ptr [rbx + 0x38]
0x4984:	mov	rax, qword ptr [rbx + 0x10]
0x4988:	lea	rsi, [rip + 0x18e9]
0x498f:	mov	r8, qword ptr [rbx + 8]
0x4993:	mov	edx, 5
0x4998:	xor	edi, edi
0x499a:	mov	r13, qword ptr [rbx + 0x30]
0x499e:	mov	r12, qword ptr [rbx + 0x28]
0x49a2:	mov	qword ptr [rsp + 0x10], r9
0x49a7:	mov	r15, qword ptr [rbx + 0x20]
0x49ab:	mov	r14, qword ptr [rbx + 0x18]
0x49af:	mov	qword ptr [rsp], rax
0x49b3:	mov	qword ptr [rsp + 8], r8
0x49b8:	mov	rbx, qword ptr [rbx]
0x49bb:	call	0x1530


0x4a88:	mov	rbx, qword ptr [rbx]
0x4a8b:	lea	rsi, [rip + 0x15ed]
0x4a92:	mov	edx, 5
0x4a97:	xor	edi, edi
0x4a99:	call	0x1530


0x4ac8:	mov	r12, qword ptr [rbx + 8]
0x4acc:	lea	rsi, [rip + 0x15bc]
0x4ad3:	mov	rbx, qword ptr [rbx]
0x4ad6:	mov	edx, 5
0x4adb:	xor	edi, edi
0x4add:	call	0x1530


0x4be8:	mov	r8, qword ptr [rbx + 8]
0x4bec:	mov	r12, qword ptr [rbx + 0x28]
0x4bf0:	lea	rsi, [rip + 0x1629]
0x4bf7:	mov	r15, qword ptr [rbx + 0x20]
0x4bfb:	mov	r14, qword ptr [rbx + 0x18]
0x4bff:	mov	edx, 5
0x4c04:	mov	r13, qword ptr [rbx + 0x10]
0x4c08:	xor	edi, edi
0x4c0a:	mov	rbx, qword ptr [rbx]
0x4c0d:	mov	qword ptr [rsp], r8
0x4c11:	call	0x1530


0x4b10:	mov	r13, qword ptr [rbx + 0x10]
0x4b14:	mov	r12, qword ptr [rbx + 8]
0x4b18:	lea	rsi, [rip + 0x1587]
0x4b1f:	mov	rbx, qword ptr [rbx]
0x4b22:	mov	edx, 5
0x4b27:	xor	edi, edi
0x4b29:	call	0x1530


0x4c50:	mov	r9, qword ptr [rbx + 0x10]
0x4c54:	mov	r13, qword ptr [rbx + 0x30]
0x4c58:	lea	rsi, [rip + 0x15e9]
0x4c5f:	mov	r12, qword ptr [rbx + 0x28]
0x4c63:	mov	r15, qword ptr [rbx + 0x20]
0x4c67:	mov	edx, 5
0x4c6c:	mov	r14, qword ptr [rbx + 0x18]
0x4c70:	mov	r8, qword ptr [rbx + 8]
0x4c74:	xor	edi, edi
0x4c76:	mov	qword ptr [rsp + 8], r9
0x4c7b:	mov	rbx, qword ptr [rbx]
0x4c7e:	mov	qword ptr [rsp], r8
0x4c82:	call	0x1530


0x4a30:	mov	r10, qword ptr [rbx + 0x40]
0x4a34:	mov	r9, qword ptr [rbx + 0x38]
0x4a38:	lea	rsi, [rip + 0x1869]
0x4a3f:	mov	rax, qword ptr [rbx + 0x10]
0x4a43:	mov	r8, qword ptr [rbx + 8]
0x4a47:	mov	edx, 5
0x4a4c:	mov	r13, qword ptr [rbx + 0x30]
0x4a50:	mov	r12, qword ptr [rbx + 0x28]
0x4a54:	mov	r15, qword ptr [rbx + 0x20]
0x4a58:	mov	r14, qword ptr [rbx + 0x18]
0x4a5c:	mov	rbx, qword ptr [rbx]
0x4a5f:	mov	qword ptr [rsp + 0x18], r10
0x4a64:	mov	qword ptr [rsp + 0x10], r9
0x4a69:	mov	qword ptr [rsp], rax
0x4a6d:	mov	qword ptr [rsp + 8], r8
0x4a72:	xor	edi, edi
0x4a74:	call	0x1530


0x49f6:	add	rsp, 0x28
0x49fa:	pop	rbx
0x49fb:	pop	rbp
0x49fc:	pop	r12
0x49fe:	pop	r13
0x4a00:	pop	r14
0x4a02:	pop	r15
0x4a04:	ret	


0x4bb8:	mov	r15, qword ptr [rbx + 0x20]
0x4bbc:	lea	rsi, [rip + 0x1635]
0x4bc3:	mov	edx, 5
0x4bc8:	xor	edi, edi
0x4bca:	mov	r14, qword ptr [rbx + 0x18]
0x4bce:	mov	r13, qword ptr [rbx + 0x10]
0x4bd2:	mov	r12, qword ptr [rbx + 8]
0x4bd6:	mov	rbx, qword ptr [rbx]
0x4bd9:	call	0x1530


0x4bde:	push	r15
0x4be0:	jmp	0x4b86


0x4b86:	push	r14
0x4b88:	mov	rdx, rax
0x4b8b:	mov	r9, r13
0x4b8e:	mov	r8, r12
0x4b91:	mov	rcx, rbx
0x4b94:	mov	rdi, rbp
0x4b97:	mov	esi, 1
0x4b9c:	xor	eax, eax
0x4b9e:	call	0x1750


0x4ba3:	pop	rax
0x4ba4:	pop	rdx
0x4ba5:	add	rsp, 0x28
0x4ba9:	pop	rbx
0x4baa:	pop	rbp
0x4bab:	pop	r12
0x4bad:	pop	r13
0x4baf:	pop	r14
0x4bb1:	pop	r15
0x4bb3:	ret	


0x4c87:	push	r13
0x4c89:	push	r12
0x4c8b:	push	r15
0x4c8d:	push	r14
0x4c8f:	mov	r9, qword ptr [rsp + 0x28]
0x4c94:	jmp	0x4c23


0x4c23:	mov	r8, qword ptr [rsp + 0x20]
0x4c28:	mov	rcx, rbx
0x4c2b:	mov	rdx, rax
0x4c2e:	mov	rdi, rbp
0x4c31:	mov	esi, 1
0x4c36:	xor	eax, eax
0x4c38:	call	0x1750


0x4c3d:	add	rsp, 0x20
0x4c41:	add	rsp, 0x28
0x4c45:	pop	rbx
0x4c46:	pop	rbp
0x4c47:	pop	r12
0x4c49:	pop	r13
0x4c4b:	pop	r14
0x4c4d:	pop	r15
0x4c4f:	ret	


0x4b2e:	add	rsp, 0x28
0x4b32:	mov	r9, r13
0x4b35:	mov	r8, r12
0x4b38:	mov	rcx, rbx
0x4b3b:	mov	rdi, rbp
0x4b3e:	mov	rdx, rax
0x4b41:	pop	rbx
0x4b42:	pop	rbp
0x4b43:	pop	r12
0x4b45:	pop	r13
0x4b47:	pop	r14
0x4b49:	pop	r15
0x4b4b:	mov	esi, 1
0x4b50:	xor	eax, eax
0x4b52:	jmp	0x1750


0x4c16:	sub	rsp, 8
0x4c1a:	mov	r9, r13
0x4c1d:	push	r12
0x4c1f:	push	r15
0x4c21:	push	r14
0x4c23:	mov	r8, qword ptr [rsp + 0x20]
0x4c28:	mov	rcx, rbx
0x4c2b:	mov	rdx, rax
0x4c2e:	mov	rdi, rbp
0x4c31:	mov	esi, 1
0x4c36:	xor	eax, eax
0x4c38:	call	0x1750


0x4ae2:	add	rsp, 0x28
0x4ae6:	mov	r8, r12
0x4ae9:	mov	rcx, rbx
0x4aec:	mov	rdi, rbp
0x4aef:	mov	rdx, rax
0x4af2:	mov	esi, 1
0x4af7:	pop	rbx
0x4af8:	pop	rbp
0x4af9:	pop	r12
0x4afb:	pop	r13
0x4afd:	pop	r14
0x4aff:	pop	r15
0x4b01:	xor	eax, eax
0x4b03:	jmp	0x1750


0x4a9e:	add	rsp, 0x28
0x4aa2:	mov	rcx, rbx
0x4aa5:	mov	rdi, rbp
0x4aa8:	pop	rbx
0x4aa9:	pop	rbp
0x4aaa:	pop	r12
0x4aac:	pop	r13
0x4aae:	pop	r14
0x4ab0:	pop	r15
0x4ab2:	mov	rdx, rax
0x4ab5:	mov	esi, 1
0x4aba:	xor	eax, eax
0x4abc:	jmp	0x1750


0x49c0:	sub	rsp, 8
0x49c4:	mov	r9, qword ptr [rsp + 0x18]
0x49c9:	mov	rdx, rax
0x49cc:	mov	rcx, rbx
0x49cf:	mov	esi, 1
0x49d4:	mov	rdi, rbp
0x49d7:	xor	eax, eax
0x49d9:	push	r9
0x49db:	push	r13
0x49dd:	push	r12
0x49df:	push	r15
0x49e1:	push	r14
0x49e3:	mov	r9, qword ptr [rsp + 0x30]
0x49e8:	mov	r8, qword ptr [rsp + 0x38]
0x49ed:	call	0x1750


0x4b82:	sub	rsp, 8
0x4b86:	push	r14
0x4b88:	mov	rdx, rax
0x4b8b:	mov	r9, r13
0x4b8e:	mov	r8, r12
0x4b91:	mov	rcx, rbx
0x4b94:	mov	rdi, rbp
0x4b97:	mov	esi, 1
0x4b9c:	xor	eax, eax
0x4b9e:	call	0x1750


0x3810:	sub	rsp, 8
0x3814:	mov	rcx, rbp
0x3817:	mov	rsi, r13
0x381a:	push	qword ptr [rsp + 0x68]
0x381e:	push	qword ptr [rsp + 0x78]
0x3822:	mov	rdi, r14
0x3825:	push	0
0x3827:	mov	r9d, dword ptr [rsp + 0x98]
0x382f:	mov	r8d, dword ptr [rsp + 0x28]
0x3834:	mov	rdx, qword ptr [rsp + 0x30]
0x3839:	and	r9d, 0xfffffffd
0x383d:	call	0x2c70


0x3842:	add	rsp, 0x20
0x3846:	mov	r15, rax
0x3849:	mov	rbx, qword ptr [rsp + 0xa8]
0x3851:	xor	rbx, qword ptr fs:[0x28]
0x385a:	mov	rax, r15
0x385d:	jne	0x3e63


0x3863:	add	rsp, 0xb8
0x386a:	pop	rbx
0x386b:	pop	rbp
0x386c:	pop	r12
0x386e:	pop	r13
0x3870:	pop	r14
0x3872:	pop	r15
0x3874:	ret	


0x3e63:	call	0x1560


0x3e0d:	sub	rsp, 8
0x3e11:	mov	r8d, 5
0x3e17:	mov	rcx, r11
0x3e1a:	push	qword ptr [rsp + 0x68]
0x3e1e:	push	qword ptr [rsp + 0x78]
0x3e22:	mov	rdi, r14
0x3e25:	push	qword ptr [rsp + 0x38]
0x3e29:	mov	r9d, dword ptr [rsp + 0x98]
0x3e31:	mov	rdx, qword ptr [rsp + 0x30]
0x3e36:	mov	rsi, qword ptr [rsp + 0x70]
0x3e3b:	call	0x2c70


0x3e40:	add	rsp, 0x20
0x3e44:	mov	r15, rax
0x3e47:	jmp	0x3849


0x3849:	mov	rbx, qword ptr [rsp + 0xa8]
0x3851:	xor	rbx, qword ptr fs:[0x28]
0x385a:	mov	rax, r15
0x385d:	jne	0x3e63


0x1470:	push	qword ptr [rip + 0x2069ba]
0x1476:	jmp	qword ptr [rip + 0x2069bc]


0x147c:	nop	dword ptr [rax]


0x1486:	push	0
0x148b:	jmp	0x1470


0x1496:	push	1
0x149b:	jmp	0x1470


0x14a6:	push	2
0x14ab:	jmp	0x1470


0x14b6:	push	3
0x14bb:	jmp	0x1470


0x14c6:	push	4
0x14cb:	jmp	0x1470


0x14d6:	push	5
0x14db:	jmp	0x1470


0x14e6:	push	6
0x14eb:	jmp	0x1470


0x14f6:	push	7
0x14fb:	jmp	0x1470


0x1506:	push	8
0x150b:	jmp	0x1470


0x1516:	push	9
0x151b:	jmp	0x1470


0x1526:	push	0xa
0x152b:	jmp	0x1470


0x1536:	push	0xb
0x153b:	jmp	0x1470


0x1546:	push	0xc
0x154b:	jmp	0x1470


0x1556:	push	0xd
0x155b:	jmp	0x1470


0x1566:	push	0xe
0x156b:	jmp	0x1470


0x1576:	push	0xf
0x157b:	jmp	0x1470


0x1586:	push	0x10
0x158b:	jmp	0x1470


0x1596:	push	0x11
0x159b:	jmp	0x1470


0x15a6:	push	0x12
0x15ab:	jmp	0x1470


0x15b6:	push	0x13
0x15bb:	jmp	0x1470


0x15c6:	push	0x14
0x15cb:	jmp	0x1470


0x15d6:	push	0x15
0x15db:	jmp	0x1470


0x15e6:	push	0x16
0x15eb:	jmp	0x1470


0x15f6:	push	0x17
0x15fb:	jmp	0x1470


0x1600:	jmp	qword ptr [rip + 0x2068fa]




0x1606:	push	0x18
0x160b:	jmp	0x1470


0x1616:	push	0x19
0x161b:	jmp	0x1470


0x1626:	push	0x1a
0x162b:	jmp	0x1470


0x1636:	push	0x1b
0x163b:	jmp	0x1470


0x1646:	push	0x1c
0x164b:	jmp	0x1470


0x1656:	push	0x1d
0x165b:	jmp	0x1470


0x1666:	push	0x1e
0x166b:	jmp	0x1470


0x1676:	push	0x1f
0x167b:	jmp	0x1470


0x1686:	push	0x20
0x168b:	jmp	0x1470


0x1696:	push	0x21
0x169b:	jmp	0x1470


0x16a6:	push	0x22
0x16ab:	jmp	0x1470


0x16b6:	push	0x23
0x16bb:	jmp	0x1470


0x16c6:	push	0x24
0x16cb:	jmp	0x1470


0x16d6:	push	0x25
0x16db:	jmp	0x1470


0x16e6:	push	0x26
0x16eb:	jmp	0x1470


0x16f6:	push	0x27
0x16fb:	jmp	0x1470


0x1706:	push	0x28
0x170b:	jmp	0x1470


0x1716:	push	0x29
0x171b:	jmp	0x1470


0x1726:	push	0x2a
0x172b:	jmp	0x1470


0x1736:	push	0x2b
0x173b:	jmp	0x1470


0x1746:	push	0x2c
0x174b:	jmp	0x1470


0x1756:	push	0x2d
0x175b:	jmp	0x1470


0x1760:	jmp	qword ptr [rip + 0x20684a]




0x1766:	push	0x2e
0x176b:	jmp	0x1470


0x1770:	jmp	qword ptr [rip + 0x206842]




0x1776:	push	0x2f
0x177b:	jmp	0x1470


0x1780:	jmp	qword ptr [rip + 0x20683a]




0x1786:	push	0x30
0x178b:	jmp	0x1470


0x240a:	hlt	


0x240b:	nop	dword ptr [rax + rax]


0x2442:	nop	dword ptr [rax]
0x2446:	nop	word ptr cs:[rax + rax]


0x2492:	nop	dword ptr [rax]
0x2496:	nop	word ptr cs:[rax + rax]


0x24da:	nop	word ptr [rax + rax]


0x24ea:	nop	word ptr [rax + rax]


0x2564:	nop	
0x2566:	nop	word ptr cs:[rax + rax]


0x294a:	nop	word ptr [rax + rax]


0x2958:	nop	dword ptr [rax + rax]


0x2968:	nop	dword ptr [rax + rax]


0x2a14:	nop	word ptr cs:[rax + rax]
0x2a1e:	nop	


0x2a25:	nop	
0x2a26:	nop	word ptr cs:[rax + rax]


0x2a52:	nop	word ptr cs:[rax + rax]
0x2a5c:	nop	dword ptr [rax]


0x2ad6:	nop	word ptr cs:[rax + rax]


0x2b7f:	nop	


0x2c67:	nop	word ptr [rax + rax]


0x2d03:	mov	byte ptr [rsp + 0xe], 1
0x2d08:	mov	byte ptr [rsp + 0x7c], 0
0x2d0d:	xor	r12d, r12d
0x2d10:	mov	qword ptr [rsp + 0x50], 0
0x2d19:	mov	byte ptr [rsp + 0xf], 1
0x2d1e:	mov	byte ptr [rsp + 0xd], 0
0x2d23:	lea	rax, [rip + 0x2e73]
0x2d2a:	mov	qword ptr [rsp + 0x18], 1
0x2d33:	xor	r15d, r15d
0x2d36:	mov	dword ptr [rsp + 8], 2
0x2d3e:	mov	qword ptr [rsp + 0x48], rax
0x2d43:	xor	r11d, r11d
0x2d46:	mov	rax, rbp
0x2d49:	mov	r8d, r12d
0x2d4c:	mov	rbp, r11
0x2d4f:	mov	r11, rax
0x2d52:	nop	word ptr [rax + rax]
0x2d58:	cmp	r11, rbp
0x2d5b:	setne	r12b
0x2d5f:	cmp	r11, -1
0x2d63:	jne	0x2d72


0x2d65:	mov	rax, qword ptr [rsp + 0x10]
0x2d6a:	cmp	byte ptr [rax + rbp], 0
0x2d6e:	setne	r12b
0x2d72:	test	r12b, r12b
0x2d75:	je	0x33d0


0x2d72:	test	r12b, r12b
0x2d75:	je	0x33d0


0x33d0:	cmp	dword ptr [rsp + 8], 2
0x33d5:	movzx	ebx, byte ptr [rsp + 0xf]
0x33da:	mov	r12d, r8d
0x33dd:	mov	rbp, r11
0x33e0:	sete	dl
0x33e3:	mov	eax, ebx
0x33e5:	test	r15, r15
0x33e8:	sete	cl
0x33eb:	and	eax, edx
0x33ed:	and	al, cl
0x33ef:	jne	0x3e56


0x2d7b:	cmp	dword ptr [rsp + 8], 2
0x2d80:	mov	rdi, qword ptr [rsp + 0x10]
0x2d85:	lea	r9, [rdi + rbp]
0x2d89:	setne	al
0x2d8c:	and	al, byte ptr [rsp + 0xd]
0x2d90:	mov	r10d, eax
0x2d93:	je	0x2e40


0x33f5:	mov	eax, ebx
0x33f7:	xor	eax, 1
0x33fa:	and	dl, al
0x33fc:	je	0x3d6c


0x3e56:	mov	dword ptr [rsp + 8], 2
0x3e5e:	jmp	0x37f9


0x2e40:	movzx	ebx, byte ptr [r9]
0x2e44:	cmp	bl, 0x7e
0x2e47:	ja	0x3168


0x2d99:	mov	rax, qword ptr [rsp + 0x18]
0x2d9e:	test	rax, rax
0x2da1:	je	0x31d0


0x3d6c:	mov	rbx, qword ptr [rsp + 0x48]
0x3d71:	test	rbx, rbx
0x3d74:	je	0x3da2


0x3402:	cmp	byte ptr [rsp + 0x7c], 0
0x3407:	je	0x3d6a


0x37f9:	cmp	byte ptr [rsp + 0xd], 0
0x37fe:	je	0x3810


0x2e4d:	lea	rcx, [rip + 0x2dd8]
0x2e54:	movzx	edx, bl
0x2e57:	movsxd	rax, dword ptr [rcx + rdx*4]
0x2e5b:	add	rax, rcx
0x2e5e:	jmp	rax


0x3168:	cmp	qword ptr [rsp + 0x58], 1
0x316e:	jne	0x3518


0x31d0:	movzx	ebx, byte ptr [r9]
0x31d4:	cmp	bl, 0x7e
0x31d7:	ja	0x3160


0x2da7:	cmp	r11, -1
0x2dab:	lea	rbx, [rbp + rax]
0x2db0:	jne	0x2de0


0x3da2:	cmp	r13, r15
0x3da5:	jbe	0x3849


0x3d76:	test	al, al
0x3d78:	je	0x3da2


0x3d6a:	mov	eax, edx
0x3d6c:	mov	rbx, qword ptr [rsp + 0x48]
0x3d71:	test	rbx, rbx
0x3d74:	je	0x3da2


0x340d:	cmp	byte ptr [rsp + 0xe], 0
0x3412:	jne	0x3e0d


0x3800:	test	al, al
0x3802:	mov	eax, 4
0x3807:	cmove	eax, dword ptr [rsp + 8]
0x380c:	mov	dword ptr [rsp + 8], eax


0x3174:	mov	qword ptr [rsp + 0x38], r11
0x3179:	mov	byte ptr [rsp + 0x30], r8b
0x317e:	mov	byte ptr [rsp + 0x28], r10b
0x3183:	call	0x1780


0x3518:	lea	rax, [rsp + 0xa0]
0x3520:	cmp	r11, -1
0x3524:	mov	qword ptr [rsp + 0xa0], 0
0x3530:	mov	qword ptr [rsp + 0x28], rax
0x3535:	jne	0x3564


0x31d9:	lea	rcx, [rip + 0x2c48]
0x31e0:	movzx	edx, bl
0x31e3:	movsxd	rax, dword ptr [rcx + rdx*4]
0x31e7:	add	rax, rcx
0x31ea:	jmp	rax


0x3160:	xor	r10d, r10d
0x3163:	nop	dword ptr [rax + rax]
0x3168:	cmp	qword ptr [rsp + 0x58], 1
0x316e:	jne	0x3518


0x2db2:	cmp	rax, 1
0x2db6:	jbe	0x2de0


0x2de0:	cmp	rbx, r11
0x2de3:	mov	byte ptr [rsp + 0x28], r10b
0x2de8:	ja	0x33a0


0x3dab:	mov	byte ptr [r14 + r15], 0
0x3db0:	jmp	0x3849


0x3d7a:	movzx	ecx, byte ptr [rbx]
0x3d7d:	mov	rax, rbx
0x3d80:	test	cl, cl
0x3d82:	je	0x3da2


0x3418:	test	r13, r13
0x341b:	sete	al
0x341e:	cmp	qword ptr [rsp + 0x50], 0
0x3424:	setne	dl
0x3427:	and	al, dl
0x3429:	je	0x3e4c


0x3537:	mov	rdi, qword ptr [rsp + 0x10]
0x353c:	mov	byte ptr [rsp + 0x40], r8b
0x3541:	mov	byte ptr [rsp + 0x38], r10b
0x3546:	mov	qword ptr [rsp + 0x30], r9
0x354b:	call	0x1550


0x3564:	lea	rax, [rsp + 0x9c]
0x356c:	xor	ecx, ecx
0x356e:	mov	byte ptr [rsp + 0x7e], bl
0x3572:	mov	byte ptr [rsp + 0x7d], r8b
0x3577:	mov	rbx, rcx
0x357a:	mov	qword ptr [rsp + 0x88], r9
0x3582:	mov	qword ptr [rsp + 0x38], rax
0x3587:	mov	byte ptr [rsp + 0x7f], r10b
0x358c:	mov	qword ptr [rsp + 0x80], r15
0x3594:	mov	qword ptr [rsp + 0x40], r14
0x3599:	mov	qword ptr [rsp + 0x70], r13
0x359e:	mov	qword ptr [rsp + 0x30], r11
0x35a3:	mov	rax, qword ptr [rsp + 0x10]
0x35a8:	lea	r14, [rbp + rbx]
0x35ad:	mov	rdx, qword ptr [rsp + 0x30]
0x35b2:	mov	rcx, qword ptr [rsp + 0x28]
0x35b7:	mov	rdi, qword ptr [rsp + 0x38]
0x35bc:	lea	r13, [rax + r14]
0x35c0:	sub	rdx, r14
0x35c3:	mov	rsi, r13
0x35c6:	call	0x5180


0x2db8:	mov	byte ptr [rsp + 0x38], r8b
0x2dbd:	mov	byte ptr [rsp + 0x30], r10b
0x2dc2:	mov	qword ptr [rsp + 0x28], r9
0x2dc7:	call	0x1550


0x2dee:	mov	rdx, qword ptr [rsp + 0x18]
0x2df3:	mov	rsi, qword ptr [rsp + 0x48]
0x2df8:	mov	rdi, r9
0x2dfb:	mov	qword ptr [rsp + 0x40], r11
0x2e00:	mov	byte ptr [rsp + 0x38], r8b
0x2e05:	mov	qword ptr [rsp + 0x30], r9
0x2e0a:	call	0x1600


0x33a0:	xor	r10d, r10d
0x33a3:	jmp	0x2e40


0x3d84:	mov	rdx, r15
0x3d87:	sub	rax, r15
0x3d8a:	cmp	r13, rdx
0x3d8d:	jbe	0x3d93


0x3e4c:	movzx	eax, byte ptr [rsp + 0x7c]
0x3e51:	jmp	0x3d6c


0x342f:	mov	r13, qword ptr [rsp + 0x50]
0x3434:	lea	rbx, [rip + 0x2762]
0x343b:	mov	byte ptr [r14], 0x27
0x343f:	mov	dword ptr [rsp + 8], 2
0x3447:	mov	r15d, 1
0x344d:	mov	qword ptr [rsp + 0x18], 1
0x3456:	mov	byte ptr [rsp + 0xf], 0
0x345b:	mov	qword ptr [rsp + 0x48], rbx
0x3460:	mov	byte ptr [rsp + 0x7c], al
0x3464:	jmp	0x2d43


0x3d93:	add	rdx, 1
0x3d97:	movzx	ecx, byte ptr [rax + rdx]
0x3d9b:	test	cl, cl
0x3d9d:	jne	0x3d8a


0x3d8f:	mov	byte ptr [r14 + rdx], cl
0x3d93:	add	rdx, 1
0x3d97:	movzx	ecx, byte ptr [rax + rdx]
0x3d9b:	test	cl, cl
0x3d9d:	jne	0x3d8a


0x2d43:	xor	r11d, r11d
0x2d46:	mov	rax, rbp
0x2d49:	mov	r8d, r12d
0x2d4c:	mov	rbp, r11
0x2d4f:	mov	r11, rax
0x2d52:	nop	word ptr [rax + rax]
0x2d58:	cmp	r11, rbp
0x2d5b:	setne	r12b
0x2d5f:	cmp	r11, -1
0x2d63:	jne	0x2d72


0x3d9f:	mov	r15, rdx
0x3da2:	cmp	r13, r15
0x3da5:	jbe	0x3849


0x3d8a:	cmp	r13, rdx
0x3d8d:	jbe	0x3d93


0x2e0f:	test	eax, eax
0x2e11:	mov	r9, qword ptr [rsp + 0x30]
0x2e16:	movzx	r8d, byte ptr [rsp + 0x38]
0x2e1c:	mov	r11, qword ptr [rsp + 0x40]
0x2e21:	jne	0x33a0


0x2e27:	cmp	byte ptr [rsp + 0xf], 0
0x2e2c:	movzx	r10d, byte ptr [rsp + 0x28]
0x2e32:	jne	0x3db5


0x3db5:	cmp	dword ptr [rsp + 8], 2
0x3dba:	movzx	ebx, byte ptr [rsp + 0xf]
0x3dbf:	mov	rbp, r11
0x3dc2:	sete	al
0x3dc5:	mov	byte ptr [rsp + 0xd], bl
0x3dc9:	jmp	0x37f9


0x35cb:	test	rax, rax
0x35ce:	mov	r15, rax
0x35d1:	je	0x3621


0x3621:	mov	edx, r12d
0x3624:	mov	rdi, rbx
0x3627:	movzx	r8d, byte ptr [rsp + 0x7d]
0x362d:	xor	edx, 1
0x3630:	movzx	ebx, byte ptr [rsp + 0x7e]
0x3635:	movzx	r10d, byte ptr [rsp + 0x7f]
0x363b:	and	dl, byte ptr [rsp + 0xd]
0x363f:	mov	r15, qword ptr [rsp + 0x80]
0x3647:	mov	r14, qword ptr [rsp + 0x40]
0x364c:	mov	r13, qword ptr [rsp + 0x70]
0x3651:	mov	r11, qword ptr [rsp + 0x30]
0x3656:	cmp	rdi, 1
0x365a:	jbe	0x3c5b


0x35d3:	cmp	rax, -1
0x35d7:	je	0x3bf5


0x3c5b:	mov	eax, edx
0x3c5d:	jmp	0x31b7


0x3660:	mov	rcx, rdi
0x3663:	xor	esi, esi
0x3665:	movzx	r9d, byte ptr [rsp + 0xf]
0x366b:	add	rcx, rbp
0x366e:	mov	rdi, qword ptr [rsp + 0x10]
0x3673:	jmp	0x372e


0x3bf5:	mov	rdi, rbx
0x3bf8:	movzx	r8d, byte ptr [rsp + 0x7d]
0x3bfe:	movzx	ebx, byte ptr [rsp + 0x7e]
0x3c03:	movzx	r10d, byte ptr [rsp + 0x7f]
0x3c09:	mov	r15, qword ptr [rsp + 0x80]
0x3c11:	xor	r12d, r12d
0x3c14:	mov	r14, qword ptr [rsp + 0x40]
0x3c19:	mov	r13, qword ptr [rsp + 0x70]
0x3c1e:	mov	r11, qword ptr [rsp + 0x30]
0x3c23:	movzx	edx, byte ptr [rsp + 0xd]
0x3c28:	jmp	0x3656


0x35dd:	cmp	rax, -2
0x35e1:	je	0x3b81


0x31b7:	test	al, al
0x31b9:	jne	0x3b51


0x372e:	test	dl, dl
0x3730:	jne	0x3680


0x3656:	cmp	rdi, 1
0x365a:	jbe	0x3c5b


0x3b81:	mov	r11, qword ptr [rsp + 0x30]
0x3b86:	mov	rsi, r14
0x3b89:	mov	rcx, r13
0x3b8c:	mov	rax, rbx
0x3b8f:	mov	rdi, rbx
0x3b92:	movzx	r8d, byte ptr [rsp + 0x7d]
0x3b98:	movzx	ebx, byte ptr [rsp + 0x7e]
0x3b9d:	mov	r9, qword ptr [rsp + 0x88]
0x3ba5:	cmp	rsi, r11
0x3ba8:	movzx	r10d, byte ptr [rsp + 0x7f]
0x3bae:	mov	r15, qword ptr [rsp + 0x80]
0x3bb6:	mov	r14, qword ptr [rsp + 0x40]
0x3bbb:	mov	r13, qword ptr [rsp + 0x70]
0x3bc0:	jae	0x3be8


0x35e7:	cmp	dword ptr [rsp + 8], 2
0x35ec:	sete	al
0x35ef:	and	al, byte ptr [rsp + 0xf]
0x35f3:	jne	0x3790


0x31bf:	cmp	dword ptr [rsp + 8], 2
0x31c4:	sete	dl
0x31c7:	jmp	0x2e98


0x3b51:	movzx	edx, byte ptr [rsp + 0xd]
0x3b56:	xor	r12d, r12d
0x3b59:	jmp	0x3660


0x3736:	mov	eax, esi
0x3738:	xor	eax, 1
0x373b:	and	eax, r8d
0x373e:	test	r10b, r10b
0x3741:	je	0x3751


0x3680:	cmp	dword ptr [rsp + 8], 2
0x3685:	sete	al
0x3688:	test	r9b, r9b
0x368b:	jne	0x3b40


0x3bc2:	cmp	byte ptr [rcx], 0
0x3bc5:	jne	0x3bd7


0x3be8:	movzx	edx, byte ptr [rsp + 0xd]
0x3bed:	xor	r12d, r12d
0x3bf0:	jmp	0x3656


0x35f9:	mov	edi, dword ptr [rsp + 0x9c]
0x3600:	call	0x1770


0x3790:	cmp	r15, 1
0x3794:	je	0x35f9


0x2e98:	cmp	byte ptr [rsp + 0xd], 1
0x2e9d:	jne	0x2fb2


0x3751:	add	rbp, 1
0x3755:	cmp	rbp, rcx
0x3758:	jae	0x2edc


0x3743:	cmp	r13, r15
0x3746:	jbe	0x374d


0x3691:	mov	esi, r8d
0x3694:	xor	esi, 1
0x3697:	and	al, sil
0x369a:	je	0x36cb


0x3b40:	movzx	ebx, byte ptr [rsp + 0xf]
0x3b45:	mov	rbp, r11
0x3b48:	mov	byte ptr [rsp + 0xd], bl
0x3b4c:	jmp	0x37f9


0x3bc7:	jmp	0x3be8


0x3bd7:	add	rax, 1
0x3bdb:	lea	rdx, [rbp + rax]
0x3be0:	cmp	r11, rdx
0x3be3:	ja	0x3bd0


0x379a:	mov	rdi, qword ptr [rsp + 0x10]
0x379f:	lea	rcx, [rdi + r15]
0x37a3:	lea	rdx, [rdi + r14 + 1]
0x37a8:	lea	r8, [rcx + r14]
0x37ac:	jmp	0x37bd


0x2ea3:	test	dl, dl
0x2ea5:	jne	0x2fb2


0x2fb2:	cmp	byte ptr [rsp + 0xf], 0
0x2fb7:	jne	0x2eab


0x375e:	test	al, al
0x3760:	je	0x3b5e


0x2edc:	test	al, al
0x2ede:	je	0x2f00


0x374d:	add	r15, 1
0x3751:	add	rbp, 1
0x3755:	cmp	rbp, rcx
0x3758:	jae	0x2edc


0x3748:	mov	byte ptr [r14 + r15], 0x5c
0x374d:	add	r15, 1
0x3751:	add	rbp, 1
0x3755:	cmp	rbp, rcx
0x3758:	jae	0x2edc


0x36cb:	cmp	r13, r15
0x36ce:	jbe	0x36d5


0x369c:	cmp	r13, r15
0x369f:	jbe	0x36a6


0x3be5:	mov	rdi, rax
0x3be8:	movzx	edx, byte ptr [rsp + 0xd]
0x3bed:	xor	r12d, r12d
0x3bf0:	jmp	0x3656


0x3bd0:	cmp	byte ptr [r9 + rax], 0
0x3bd5:	je	0x3be5


0x37bd:	movzx	ecx, byte ptr [rdx]
0x37c0:	sub	ecx, 0x5b
0x37c3:	cmp	cl, 0x21
0x37c6:	ja	0x37b0


0x2eab:	mov	rsi, qword ptr [rsp + 0x20]
0x2eb0:	test	rsi, rsi
0x2eb3:	je	0x2ec9


0x2fbd:	jmp	0x2ec9


0x3b5e:	xor	r10d, r10d
0x3b61:	jmp	0x371d


0x3766:	cmp	r13, r15
0x3769:	jbe	0x3770


0x2f00:	cmp	r15, r13
0x2f03:	jae	0x2f09


0x2ee0:	cmp	r13, r15
0x2ee3:	jbe	0x2eea


0x36d5:	lea	rax, [r15 + 1]
0x36d9:	cmp	r13, rax
0x36dc:	jbe	0x36eb


0x36d0:	mov	byte ptr [r14 + r15], 0x5c
0x36d5:	lea	rax, [r15 + 1]
0x36d9:	cmp	r13, rax
0x36dc:	jbe	0x36eb


0x36a6:	lea	rsi, [r15 + 1]
0x36aa:	cmp	r13, rsi
0x36ad:	jbe	0x36b5


0x36a1:	mov	byte ptr [r14 + r15], 0x27
0x36a6:	lea	rsi, [r15 + 1]
0x36aa:	cmp	r13, rsi
0x36ad:	jbe	0x36b5


0x37c8:	mov	esi, 1
0x37cd:	shl	rsi, cl
0x37d0:	mov	rcx, rsi
0x37d3:	movabs	rsi, 0x20000002b
0x37dd:	test	rcx, rsi
0x37e0:	je	0x37b0


0x37b0:	add	rdx, 1
0x37b4:	cmp	r8, rdx
0x37b7:	je	0x35f9


0x2ec9:	test	r10b, r10b
0x2ecc:	jne	0x3013


0x2eb5:	mov	edx, ebx
0x2eb7:	shr	dl, 5
0x2eba:	movzx	edx, dl
0x2ebd:	mov	edx, dword ptr [rsi + rdx*4]
0x2ec0:	bt	edx, ebx
0x2ec3:	jb	0x3013


0x371d:	cmp	r13, r15
0x3720:	jbe	0x3726


0x3770:	lea	rax, [r15 + 1]
0x3774:	cmp	r13, rax
0x3777:	jbe	0x377f


0x376b:	mov	byte ptr [r14 + r15], 0x27
0x3770:	lea	rax, [r15 + 1]
0x3774:	cmp	r13, rax
0x3777:	jbe	0x377f


0x2f05:	mov	byte ptr [r14 + r15], bl
0x2f09:	movzx	edi, byte ptr [rsp + 0xe]
0x2f0e:	add	r15, 1
0x2f12:	mov	eax, 0
0x2f17:	test	r12b, r12b
0x2f1a:	cmove	edi, eax
0x2f1d:	mov	byte ptr [rsp + 0xe], dil
0x2f22:	jmp	0x2d58


0x2f09:	movzx	edi, byte ptr [rsp + 0xe]
0x2f0e:	add	r15, 1
0x2f12:	mov	eax, 0
0x2f17:	test	r12b, r12b
0x2f1a:	cmove	edi, eax
0x2f1d:	mov	byte ptr [rsp + 0xe], dil
0x2f22:	jmp	0x2d58


0x2eea:	lea	rax, [r15 + 1]
0x2eee:	cmp	r13, rax
0x2ef1:	jbe	0x2ef9


0x2ee5:	mov	byte ptr [r14 + r15], 0x27
0x2eea:	lea	rax, [r15 + 1]
0x2eee:	cmp	r13, rax
0x2ef1:	jbe	0x2ef9


0x36eb:	lea	rax, [r15 + 2]
0x36ef:	cmp	r13, rax
0x36f2:	jbe	0x3704


0x36de:	mov	eax, ebx
0x36e0:	shr	al, 6
0x36e3:	add	eax, 0x30
0x36e6:	mov	byte ptr [r14 + r15 + 1], al
0x36eb:	lea	rax, [r15 + 2]
0x36ef:	cmp	r13, rax
0x36f2:	jbe	0x3704


0x36b5:	lea	rsi, [r15 + 2]
0x36b9:	cmp	r13, rsi
0x36bc:	jbe	0x36c4


0x36af:	mov	byte ptr [r14 + r15 + 1], 0x24
0x36b5:	lea	rsi, [r15 + 2]
0x36b9:	cmp	r13, rsi
0x36bc:	jbe	0x36c4


0x37e2:	mov	r14, qword ptr [rsp + 0x40]
0x37e7:	mov	r13, qword ptr [rsp + 0x70]
0x37ec:	mov	rbp, qword ptr [rsp + 0x30]
0x37f1:	mov	dword ptr [rsp + 8], 2
0x37f9:	cmp	byte ptr [rsp + 0xd], 0
0x37fe:	je	0x3810


0x2ed2:	xor	eax, 1
0x2ed5:	add	rbp, 1
0x2ed9:	and	eax, r8d
0x2edc:	test	al, al
0x2ede:	je	0x2f00


0x3013:	cmp	dword ptr [rsp + 8], 2
0x3018:	sete	dl
0x301b:	cmp	byte ptr [rsp + 0xf], 0
0x3020:	mov	eax, edx
0x3022:	jne	0x3878


0x3726:	movzx	ebx, byte ptr [rdi + rbp]
0x372a:	add	r15, 1
0x372e:	test	dl, dl
0x3730:	jne	0x3680


0x3722:	mov	byte ptr [r14 + r15], bl
0x3726:	movzx	ebx, byte ptr [rdi + rbp]
0x372a:	add	r15, 1
0x372e:	test	dl, dl
0x3730:	jne	0x3680


0x377f:	add	r15, 2
0x3783:	xor	r10d, r10d
0x3786:	xor	r8d, r8d
0x3789:	jmp	0x371d


0x3779:	mov	byte ptr [r14 + r15 + 1], 0x27
0x377f:	add	r15, 2
0x3783:	xor	r10d, r10d
0x3786:	xor	r8d, r8d
0x3789:	jmp	0x371d


0x2d58:	cmp	r11, rbp
0x2d5b:	setne	r12b
0x2d5f:	cmp	r11, -1
0x2d63:	jne	0x2d72


0x2ef9:	add	r15, 2
0x2efd:	xor	r8d, r8d
0x2f00:	cmp	r15, r13
0x2f03:	jae	0x2f09


0x2ef3:	mov	byte ptr [r14 + r15 + 1], 0x27
0x2ef9:	add	r15, 2
0x2efd:	xor	r8d, r8d
0x2f00:	cmp	r15, r13
0x2f03:	jae	0x2f09


0x3704:	and	ebx, 7
0x3707:	add	rbp, 1
0x370b:	add	r15, 3
0x370f:	add	ebx, 0x30
0x3712:	cmp	rbp, rcx
0x3715:	jae	0x2f00


0x36f4:	mov	eax, ebx
0x36f6:	shr	al, 3
0x36f9:	and	eax, 7
0x36fc:	add	eax, 0x30
0x36ff:	mov	byte ptr [r14 + r15 + 2], al
0x3704:	and	ebx, 7
0x3707:	add	rbp, 1
0x370b:	add	r15, 3
0x370f:	add	ebx, 0x30
0x3712:	cmp	rbp, rcx
0x3715:	jae	0x2f00


0x36c4:	add	r15, 3
0x36c8:	mov	r8d, eax
0x36cb:	cmp	r13, r15
0x36ce:	jbe	0x36d5


0x36be:	mov	byte ptr [r14 + r15 + 2], 0x27
0x36c4:	add	r15, 3
0x36c8:	mov	r8d, eax
0x36cb:	cmp	r13, r15
0x36ce:	jbe	0x36d5


0x3028:	mov	eax, r8d
0x302b:	xor	eax, 1
0x302e:	and	al, dl
0x3030:	je	0x3061


0x3878:	mov	rbp, r11
0x387b:	jmp	0x37f9


0x371b:	mov	esi, edx
0x371d:	cmp	r13, r15
0x3720:	jbe	0x3726


0x3061:	cmp	r13, r15
0x3064:	jbe	0x306b


0x3032:	cmp	r13, r15
0x3035:	jbe	0x303c


0x306b:	add	r15, 1
0x306f:	add	rbp, 1
0x3073:	jmp	0x2f00


0x3066:	mov	byte ptr [r14 + r15], 0x5c
0x306b:	add	r15, 1
0x306f:	add	rbp, 1
0x3073:	jmp	0x2f00


0x303c:	lea	rdx, [r15 + 1]
0x3040:	cmp	r13, rdx
0x3043:	jbe	0x304b


0x3037:	mov	byte ptr [r14 + r15], 0x27
0x303c:	lea	rdx, [r15 + 1]
0x3040:	cmp	r13, rdx
0x3043:	jbe	0x304b


0x304b:	lea	rdx, [r15 + 2]
0x304f:	cmp	r13, rdx
0x3052:	jbe	0x305a


0x3045:	mov	byte ptr [r14 + r15 + 1], 0x24
0x304b:	lea	rdx, [r15 + 2]
0x304f:	cmp	r13, rdx
0x3052:	jbe	0x305a


0x305a:	add	r15, 3
0x305e:	mov	r8d, eax
0x3061:	cmp	r13, r15
0x3064:	jbe	0x306b


0x3054:	mov	byte ptr [r14 + r15 + 2], 0x27
0x305a:	add	r15, 3
0x305e:	mov	r8d, eax
0x3061:	cmp	r13, r15
0x3064:	jbe	0x306b


0x3605:	mov	rdi, qword ptr [rsp + 0x28]
0x360a:	test	eax, eax
0x360c:	mov	eax, 0
0x3611:	cmove	r12d, eax
0x3615:	add	rbx, r15
0x3618:	call	0x1760


0x361d:	test	eax, eax
0x361f:	je	0x35a3


0x35a3:	mov	rax, qword ptr [rsp + 0x10]
0x35a8:	lea	r14, [rbp + rbx]
0x35ad:	mov	rdx, qword ptr [rsp + 0x30]
0x35b2:	mov	rcx, qword ptr [rsp + 0x28]
0x35b7:	mov	rdi, qword ptr [rsp + 0x38]
0x35bc:	lea	r13, [rax + r14]
0x35c0:	sub	rdx, r14
0x35c3:	mov	rsi, r13
0x35c6:	call	0x5180


0x2dcc:	movzx	r8d, byte ptr [rsp + 0x38]
0x2dd2:	movzx	r10d, byte ptr [rsp + 0x30]
0x2dd8:	mov	r11, rax
0x2ddb:	mov	r9, qword ptr [rsp + 0x28]
0x2de0:	cmp	rbx, r11
0x2de3:	mov	byte ptr [rsp + 0x28], r10b
0x2de8:	ja	0x33a0


0x3550:	movzx	r8d, byte ptr [rsp + 0x40]
0x3556:	movzx	r10d, byte ptr [rsp + 0x38]
0x355c:	mov	r11, rax
0x355f:	mov	r9, qword ptr [rsp + 0x30]
0x3564:	lea	rax, [rsp + 0x9c]
0x356c:	xor	ecx, ecx
0x356e:	mov	byte ptr [rsp + 0x7e], bl
0x3572:	mov	byte ptr [rsp + 0x7d], r8b
0x3577:	mov	rbx, rcx
0x357a:	mov	qword ptr [rsp + 0x88], r9
0x3582:	mov	qword ptr [rsp + 0x38], rax
0x3587:	mov	byte ptr [rsp + 0x7f], r10b
0x358c:	mov	qword ptr [rsp + 0x80], r15
0x3594:	mov	qword ptr [rsp + 0x40], r14
0x3599:	mov	qword ptr [rsp + 0x70], r13
0x359e:	mov	qword ptr [rsp + 0x30], r11
0x35a3:	mov	rax, qword ptr [rsp + 0x10]
0x35a8:	lea	r14, [rbp + rbx]
0x35ad:	mov	rdx, qword ptr [rsp + 0x30]
0x35b2:	mov	rcx, qword ptr [rsp + 0x28]
0x35b7:	mov	rdi, qword ptr [rsp + 0x38]
0x35bc:	lea	r13, [rax + r14]
0x35c0:	sub	rdx, r14
0x35c3:	mov	rsi, r13
0x35c6:	call	0x5180


0x3188:	mov	rcx, qword ptr [rax]
0x318b:	movzx	edx, bl
0x318e:	movzx	r10d, byte ptr [rsp + 0x28]
0x3194:	movzx	r8d, byte ptr [rsp + 0x30]
0x319a:	mov	r11, qword ptr [rsp + 0x38]
0x319f:	mov	edi, 1
0x31a4:	movzx	eax, word ptr [rcx + rdx*2]
0x31a8:	and	ax, 0x4000
0x31ac:	setne	r12b
0x31b0:	sete	al
0x31b3:	and	al, byte ptr [rsp + 0xd]
0x31b7:	test	al, al
0x31b9:	jne	0x3b51


0x2e60:	xor	r10d, r10d
0x2e63:	cmp	r11, 1
0x2e67:	setne	al
0x2e6a:	cmp	r11, -1
0x2e6e:	jne	0x2e7c


0x2e70:	mov	rax, qword ptr [rsp + 0x10]
0x2e75:	cmp	byte ptr [rax + 1], 0
0x2e79:	setne	al
0x2e7c:	cmp	dword ptr [rsp + 8], 2
0x2e81:	sete	dl
0x2e84:	test	al, al
0x2e86:	je	0x30d8


0x2e7c:	cmp	dword ptr [rsp + 8], 2
0x2e81:	sete	dl
0x2e84:	test	al, al
0x2e86:	je	0x30d8


0x30d8:	test	rbp, rbp
0x30db:	jne	0x2e8c


0x2e8c:	xor	r12d, r12d
0x2e8f:	xor	eax, eax
0x2e91:	nop	dword ptr [rax]
0x2e98:	cmp	byte ptr [rsp + 0xd], 1
0x2e9d:	jne	0x2fb2


0x30e1:	movzx	eax, byte ptr [rsp + 0xf]
0x30e6:	and	al, dl
0x30e8:	je	0x2e98


0x30ee:	mov	rbp, r11
0x30f1:	mov	dword ptr [rsp + 8], 2
0x30f9:	jmp	0x37f9


0x34f8:	cmp	byte ptr [rsp + 0xf], 0
0x34fd:	jne	0x3d20


0x2f40:	cmp	eax, 5
0x2f43:	je	0x34b8


0x3503:	xor	r12d, r12d
0x3506:	xor	eax, eax
0x3508:	mov	ebx, 0x3f
0x350d:	jmp	0x2ec9


0x3d20:	mov	rbp, r11
0x3d23:	movzx	eax, byte ptr [rsp + 0xf]
0x3d28:	jmp	0x37f9


0x34b8:	test	byte ptr [rsp + 0x78], 4
0x34bd:	je	0x34e0


0x2f49:	cmp	eax, 2
0x2f4c:	mov	ebx, 0x3f
0x2f51:	sete	dl
0x2f54:	xor	r12d, r12d
0x2f57:	xor	eax, eax
0x2f59:	jmp	0x2e98


0x34e0:	xor	edx, edx
0x34e2:	xor	r12d, r12d
0x34e5:	xor	eax, eax
0x34e7:	mov	ebx, 0x3f
0x34ec:	jmp	0x2e98


0x34bf:	lea	rcx, [rbp + 2]
0x34c3:	cmp	rcx, r11
0x34c6:	jae	0x34e0


0x34c8:	mov	rax, qword ptr [rsp + 0x10]
0x34cd:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x34d2:	je	0x3c62


0x3c62:	movzx	ebx, byte ptr [rax + rcx]
0x3c66:	cmp	bl, 0x3e
0x3c69:	ja	0x34e0


0x3c6f:	movabs	rax, 0x7000a38200000000
0x3c79:	bt	rax, rbx
0x3c7d:	jae	0x34e0


0x3c83:	cmp	byte ptr [rsp + 0xf], 0
0x3c88:	jne	0x3e72


0x3c8e:	cmp	r13, r15
0x3c91:	jbe	0x3c98


0x3e72:	mov	rbp, r11
0x3e75:	jmp	0x3810


0x3c98:	lea	rax, [r15 + 1]
0x3c9c:	cmp	r13, rax
0x3c9f:	jbe	0x3ca7


0x3c93:	mov	byte ptr [r14 + r15], 0x3f
0x3c98:	lea	rax, [r15 + 1]
0x3c9c:	cmp	r13, rax
0x3c9f:	jbe	0x3ca7


0x3ca7:	lea	rax, [r15 + 2]
0x3cab:	cmp	r13, rax
0x3cae:	jbe	0x3cb6


0x3ca1:	mov	byte ptr [r14 + r15 + 1], 0x22
0x3ca7:	lea	rax, [r15 + 2]
0x3cab:	cmp	r13, rax
0x3cae:	jbe	0x3cb6


0x3cb6:	lea	rax, [r15 + 3]
0x3cba:	cmp	r13, rax
0x3cbd:	jbe	0x3cc5


0x3cb0:	mov	byte ptr [r14 + r15 + 2], 0x22
0x3cb6:	lea	rax, [r15 + 3]
0x3cba:	cmp	r13, rax
0x3cbd:	jbe	0x3cc5


0x3cc5:	add	r15, 4
0x3cc9:	xor	edx, edx
0x3ccb:	xor	r12d, r12d
0x3cce:	xor	eax, eax
0x3cd0:	mov	rbp, rcx
0x3cd3:	jmp	0x2e98


0x3cbf:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x3cc5:	add	r15, 4
0x3cc9:	xor	edx, edx
0x3ccb:	xor	r12d, r12d
0x3cce:	xor	eax, eax
0x3cd0:	mov	rbp, rcx
0x3cd3:	jmp	0x2e98


0x3470:	cmp	byte ptr [rsp + 0xf], 0
0x3475:	jne	0x3d20


0x2f6e:	mov	byte ptr [rsp + 0x7c], r12b
0x2f73:	xor	edx, edx
0x2f75:	xor	eax, eax
0x2f77:	mov	ebx, 0x27
0x2f7c:	jmp	0x2e98


0x347b:	test	r13, r13
0x347e:	je	0x3880


0x3880:	cmp	r13, r15
0x3883:	jbe	0x388a


0x3484:	xor	edx, edx
0x3486:	cmp	qword ptr [rsp + 0x50], 0
0x348c:	jne	0x3880


0x388a:	lea	rax, [r15 + 1]
0x388e:	cmp	r13, rax
0x3891:	jbe	0x3899


0x3885:	mov	byte ptr [r14 + r15], 0x27
0x388a:	lea	rax, [r15 + 1]
0x388e:	cmp	r13, rax
0x3891:	jbe	0x3899


0x3492:	mov	qword ptr [rsp + 0x50], r13
0x3497:	add	r15, 3
0x349b:	xor	eax, eax
0x349d:	mov	byte ptr [rsp + 0x7c], r12b
0x34a2:	xor	r8d, r8d
0x34a5:	mov	r13, rdx
0x34a8:	mov	ebx, 0x27
0x34ad:	jmp	0x2ec9


0x3899:	lea	rax, [r15 + 2]
0x389d:	cmp	r13, rax
0x38a0:	jbe	0x3e92


0x3893:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x3899:	lea	rax, [r15 + 2]
0x389d:	cmp	r13, rax
0x38a0:	jbe	0x3e92


0x3e92:	mov	rdx, r13
0x3e95:	mov	r13, qword ptr [rsp + 0x50]
0x3e9a:	jmp	0x3492


0x38a6:	mov	rdx, r13
0x38a9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x38af:	mov	r13, qword ptr [rsp + 0x50]
0x38b4:	jmp	0x3492


0x2fa4:	cmp	byte ptr [rsp + 0xd], 0
0x2fa9:	jne	0x3010


0x2fab:	mov	ebx, edx
0x2fad:	xor	r12d, r12d
0x2fb0:	xor	eax, eax
0x2fb2:	cmp	byte ptr [rsp + 0xf], 0
0x2fb7:	jne	0x2eab


0x3010:	xor	r12d, r12d
0x3013:	cmp	dword ptr [rsp + 8], 2
0x3018:	sete	dl
0x301b:	cmp	byte ptr [rsp + 0xf], 0
0x3020:	mov	eax, edx
0x3022:	jne	0x3878


0x33b0:	cmp	byte ptr [rsp + 0xf], 0
0x33b5:	jne	0x3d20


0x2fe3:	cmp	byte ptr [rsp + 0xd], 0
0x2fe8:	je	0x3200


0x33bb:	add	rbp, 1
0x33bf:	mov	eax, r8d
0x33c2:	xor	r12d, r12d
0x33c5:	mov	ebx, 0x5c
0x33ca:	jmp	0x2edc


0x3200:	mov	edx, 0x5c
0x3205:	mov	ebx, 0x5c
0x320a:	jmp	0x2fa4


0x2fee:	cmp	byte ptr [rsp + 0xf], 0
0x2ff3:	je	0x3200


0x2ff9:	cmp	qword ptr [rsp + 0x18], 0
0x2fff:	jne	0x33bb


0x3005:	mov	ebx, 0x5c
0x300a:	nop	word ptr [rax + rax]
0x3010:	xor	r12d, r12d
0x3013:	cmp	dword ptr [rsp + 8], 2
0x3018:	sete	dl
0x301b:	cmp	byte ptr [rsp + 0xf], 0
0x3020:	mov	eax, edx
0x3022:	jne	0x3878


0x308b:	xor	edx, edx
0x308d:	test	byte ptr [rsp + 0x78], 1
0x3092:	je	0x2fab


0x3253:	cmp	dword ptr [rsp + 8], 2
0x3258:	sete	dl
0x325b:	cmp	byte ptr [rsp + 0xf], 0
0x3260:	jne	0x3dfa


0x3098:	add	rbp, 1
0x309c:	jmp	0x2d58


0x3266:	mov	eax, r8d
0x3269:	mov	rcx, r15
0x326c:	xor	eax, 1
0x326f:	and	al, dl
0x3271:	je	0x32a0


0x3dfa:	movzx	ebx, byte ptr [rsp + 0xf]
0x3dff:	mov	rbp, r11
0x3e02:	mov	eax, edx
0x3e04:	mov	byte ptr [rsp + 0xd], bl
0x3e08:	jmp	0x37f9


0x32a0:	cmp	r13, rcx
0x32a3:	jbe	0x32aa


0x3273:	cmp	r13, r15
0x3276:	jbe	0x327d


0x32aa:	cmp	dword ptr [rsp + 8], 2
0x32af:	lea	r15, [rcx + 1]
0x32b3:	je	0x38b9


0x32a5:	mov	byte ptr [r14 + rcx], 0x5c
0x32aa:	cmp	dword ptr [rsp + 8], 2
0x32af:	lea	r15, [rcx + 1]
0x32b3:	je	0x38b9


0x327d:	lea	rcx, [r15 + 1]
0x3281:	cmp	r13, rcx
0x3284:	jbe	0x328c


0x3278:	mov	byte ptr [r14 + r15], 0x27
0x327d:	lea	rcx, [r15 + 1]
0x3281:	cmp	r13, rcx
0x3284:	jbe	0x328c


0x38b9:	mov	eax, r12d
0x38bc:	mov	ebx, 0x30
0x38c1:	xor	r12d, r12d
0x38c4:	jmp	0x2ec9


0x32b9:	lea	rax, [rbp + 1]
0x32bd:	cmp	rax, r11
0x32c0:	jae	0x32db


0x328c:	lea	rcx, [r15 + 2]
0x3290:	cmp	r13, rcx
0x3293:	ja	0x38c9


0x3286:	mov	byte ptr [r14 + r15 + 1], 0x24
0x328c:	lea	rcx, [r15 + 2]
0x3290:	cmp	r13, rcx
0x3293:	ja	0x38c9


0x32c2:	mov	rax, qword ptr [rsp + 0x10]
0x32c7:	movzx	eax, byte ptr [rax + rbp + 1]
0x32cc:	mov	byte ptr [rsp + 0x28], al
0x32d0:	sub	eax, 0x30
0x32d3:	cmp	al, 9
0x32d5:	jbe	0x3b09


0x32db:	mov	eax, r12d
0x32de:	mov	ebx, 0x30
0x32e3:	xor	r12d, r12d
0x32e6:	jmp	0x2e98


0x3299:	lea	rcx, [r15 + 3]
0x329d:	mov	r8d, eax
0x32a0:	cmp	r13, rcx
0x32a3:	jbe	0x32aa


0x38c9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x38cf:	jmp	0x3299


0x3b09:	cmp	r13, r15
0x3b0c:	jbe	0x3b13


0x3b13:	lea	rax, [rcx + 2]
0x3b17:	cmp	r13, rax
0x3b1a:	jbe	0x3b22


0x3b0e:	mov	byte ptr [r14 + r15], 0x30
0x3b13:	lea	rax, [rcx + 2]
0x3b17:	cmp	r13, rax
0x3b1a:	jbe	0x3b22


0x3b22:	mov	eax, r12d
0x3b25:	lea	r15, [rcx + 3]
0x3b29:	xor	r12d, r12d
0x3b2c:	mov	ebx, 0x30
0x3b31:	jmp	0x2e98


0x3b1c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x3b22:	mov	eax, r12d
0x3b25:	lea	r15, [rcx + 3]
0x3b29:	xor	r12d, r12d
0x3b2c:	mov	ebx, 0x30
0x3b31:	jmp	0x2e98


0x2f92:	cmp	dword ptr [rsp + 8], 2
0x2f97:	sete	al
0x2f9a:	and	al, byte ptr [rsp + 0xf]
0x2f9e:	jne	0x30ee


0x3350:	mov	edx, 0xd
0x3355:	xor	r10d, r10d
0x3358:	mov	ebx, 0x72
0x335d:	jmp	0x2f92


0x38d4:	test	ebx, ebx
0x38d6:	jne	0x2d03


0x38dc:	mov	byte ptr [rsp + 0xd], 1
0x38e1:	test	r13, r13
0x38e4:	jne	0x3e7a


0x38ea:	lea	rax, [rip + 0x22ac]
0x38f1:	mov	qword ptr [rsp + 0x50], 0
0x38fa:	mov	byte ptr [rsp + 0xe], 1
0x38ff:	mov	byte ptr [rsp + 0x7c], 0
0x3904:	xor	r12d, r12d
0x3907:	mov	byte ptr [rsp + 0xf], 0
0x390c:	mov	qword ptr [rsp + 0x18], 1
0x3915:	mov	qword ptr [rsp + 0x48], rax
0x391a:	mov	r15d, 1
0x3920:	mov	dword ptr [rsp + 8], 2
0x3928:	jmp	0x2d43


0x3e7a:	mov	byte ptr [rsp + 0xe], 1
0x3e7f:	xor	eax, eax
0x3e81:	xor	r12d, r12d
0x3e84:	mov	qword ptr [rsp + 0x50], 0
0x3e8d:	jmp	0x3434


0x3434:	lea	rbx, [rip + 0x2762]
0x343b:	mov	byte ptr [r14], 0x27
0x343f:	mov	dword ptr [rsp + 8], 2
0x3447:	mov	r15d, 1
0x344d:	mov	qword ptr [rsp + 0x18], 1
0x3456:	mov	byte ptr [rsp + 0xf], 0
0x345b:	mov	qword ptr [rsp + 0x48], rbx
0x3460:	mov	byte ptr [rsp + 0x7c], al
0x3464:	jmp	0x2d43


0x3938:	test	r13, r13
0x393b:	je	0x3b66


0x3d2d:	lea	rax, [rip + 0x1e67]
0x3d34:	mov	byte ptr [rsp + 0xe], 1
0x3d39:	mov	byte ptr [rsp + 0x7c], 0
0x3d3e:	xor	r12d, r12d
0x3d41:	mov	qword ptr [rsp + 0x50], 0
0x3d4a:	mov	byte ptr [rsp + 0xf], 1
0x3d4f:	mov	byte ptr [rsp + 0xd], 1
0x3d54:	mov	qword ptr [rsp + 0x18], 1
0x3d5d:	xor	r15d, r15d
0x3d60:	mov	qword ptr [rsp + 0x48], rax
0x3d65:	jmp	0x2d43


0x3b66:	mov	qword ptr [rsp + 0x50], 0
0x3b6f:	mov	byte ptr [rsp + 0xe], 1
0x3b74:	xor	r12d, r12d
0x3b77:	mov	byte ptr [rsp + 0x7c], 0
0x3b7c:	jmp	0x395b


0x3941:	mov	byte ptr [r14], 0x22
0x3945:	mov	byte ptr [rsp + 0xe], 1
0x394a:	xor	r12d, r12d
0x394d:	mov	byte ptr [rsp + 0x7c], 0
0x3952:	mov	qword ptr [rsp + 0x50], 0
0x395b:	lea	rax, [rip + 0x2239]
0x3962:	mov	byte ptr [rsp + 0xf], 0
0x3967:	mov	byte ptr [rsp + 0xd], 1
0x396c:	mov	qword ptr [rsp + 0x18], 1
0x3975:	mov	r15d, 1
0x397b:	mov	qword ptr [rsp + 0x48], rax
0x3980:	jmp	0x2d43


0x395b:	lea	rax, [rip + 0x2239]
0x3962:	mov	byte ptr [rsp + 0xf], 0
0x3967:	mov	byte ptr [rsp + 0xd], 1
0x396c:	mov	qword ptr [rsp + 0x18], 1
0x3975:	mov	r15d, 1
0x397b:	mov	qword ptr [rsp + 0x48], rax
0x3980:	jmp	0x2d43


0x3985:	lea	rax, [rip + 0x220f]
0x398c:	mov	byte ptr [rsp + 0xe], 1
0x3991:	mov	byte ptr [rsp + 0x7c], 0
0x3996:	xor	r12d, r12d
0x3999:	mov	qword ptr [rsp + 0x50], 0
0x39a2:	mov	byte ptr [rsp + 0xf], 1
0x39a7:	mov	byte ptr [rsp + 0xd], 1
0x39ac:	mov	qword ptr [rsp + 0x18], 1
0x39b5:	xor	r15d, r15d
0x39b8:	mov	qword ptr [rsp + 0x48], rax
0x39bd:	mov	dword ptr [rsp + 8], 5
0x39c5:	jmp	0x2d43


0x39ca:	mov	byte ptr [rsp + 0xe], 1
0x39cf:	mov	byte ptr [rsp + 0x7c], 0
0x39d4:	xor	r12d, r12d
0x39d7:	mov	qword ptr [rsp + 0x50], 0
0x39e0:	mov	byte ptr [rsp + 0xf], 0
0x39e5:	xor	r15d, r15d
0x39e8:	mov	byte ptr [rsp + 0xd], 1
0x39ed:	mov	qword ptr [rsp + 0x18], 0
0x39f6:	mov	qword ptr [rsp + 0x48], 0
0x39ff:	jmp	0x2d43


0x3a04:	cmp	dword ptr [rsp + 8], 0xa
0x3a09:	je	0x3a61


0x3a61:	xor	r15d, r15d
0x3a64:	test	ebx, ebx
0x3a66:	je	0x3c2d


0x3a0b:	lea	rsi, [rip + 0x218d]
0x3a12:	xor	edi, edi
0x3a14:	mov	edx, 5
0x3a19:	call	0x1530


0x3c2d:	mov	rdx, qword ptr [rsp + 0x68]
0x3c32:	movzx	eax, byte ptr [rdx]
0x3c35:	test	al, al
0x3c37:	je	0x3a6c


0x3a6c:	test	ebx, ebx
0x3a6e:	mov	rbx, qword ptr [rsp + 0x60]
0x3a73:	setne	byte ptr [rsp + 0xf]
0x3a78:	xor	r12d, r12d
0x3a7b:	mov	rdi, rbx
0x3a7e:	call	0x1550


0x3c49:	add	r15, 1
0x3c4d:	movzx	eax, byte ptr [rdx + r15]
0x3c52:	test	al, al
0x3c54:	jne	0x3c40


0x3c45:	mov	byte ptr [r14 + r15], al
0x3c49:	add	r15, 1
0x3c4d:	movzx	eax, byte ptr [rdx + r15]
0x3c52:	test	al, al
0x3c54:	jne	0x3c40


0x3c56:	jmp	0x3a6c


0x3c40:	cmp	r13, r15
0x3c43:	jbe	0x3c49


0x3a83:	mov	qword ptr [rsp + 0x48], rbx
0x3a88:	mov	qword ptr [rsp + 0x18], rax
0x3a8d:	mov	byte ptr [rsp + 0xe], 1
0x3a92:	mov	byte ptr [rsp + 0x7c], 0
0x3a97:	mov	qword ptr [rsp + 0x50], 0
0x3aa0:	mov	byte ptr [rsp + 0xd], 1
0x3aa5:	jmp	0x2d43


0x3a1e:	mov	rcx, rax
0x3a21:	mov	qword ptr [rsp + 0x68], rax
0x3a26:	lea	rax, [rip + 0x2172]
0x3a2d:	cmp	rcx, rax
0x3a30:	je	0x3dce


0x3dce:	mov	esi, dword ptr [rsp + 8]
0x3dd2:	mov	rdi, rcx
0x3dd5:	call	0x2b80


0x3a36:	lea	rsi, [rip + 0x2160]
0x3a3d:	xor	edi, edi
0x3a3f:	mov	edx, 5
0x3a44:	call	0x1530


0x3a49:	mov	rcx, rax
0x3a4c:	mov	qword ptr [rsp + 0x60], rax
0x3a51:	lea	rax, [rip + 0x2145]
0x3a58:	cmp	rcx, rax
0x3a5b:	je	0x3de4


0x3de4:	mov	esi, dword ptr [rsp + 8]
0x3de8:	mov	rdi, rcx
0x3deb:	call	0x2b80


0x3df0:	mov	qword ptr [rsp + 0x60], rax
0x3df5:	jmp	0x3a61


0x3dda:	mov	qword ptr [rsp + 0x68], rax
0x3ddf:	jmp	0x3a36


0x3aaa:	mov	byte ptr [rsp + 0xe], 1
0x3aaf:	mov	byte ptr [rsp + 0x7c], 0
0x3ab4:	xor	r12d, r12d
0x3ab7:	mov	qword ptr [rsp + 0x50], 0
0x3ac0:	mov	byte ptr [rsp + 0xf], 0
0x3ac5:	xor	r15d, r15d
0x3ac8:	mov	byte ptr [rsp + 0xd], 0
0x3acd:	mov	qword ptr [rsp + 0x18], 0
0x3ad6:	mov	qword ptr [rsp + 0x48], 0
0x3adf:	jmp	0x2d43


0x3ae4:	mov	byte ptr [rsp + 0xe], 1
0x3ae9:	mov	byte ptr [rsp + 0x7c], 0
0x3aee:	xor	r12d, r12d
0x3af1:	mov	qword ptr [rsp + 0x50], 0
0x3afa:	mov	byte ptr [rsp + 0xf], 1
0x3aff:	mov	byte ptr [rsp + 0xd], 1
0x3b04:	jmp	0x2d23


0x2d23:	lea	rax, [rip + 0x2e73]
0x2d2a:	mov	qword ptr [rsp + 0x18], 1
0x2d33:	xor	r15d, r15d
0x2d36:	mov	dword ptr [rsp + 8], 2
0x2d3e:	mov	qword ptr [rsp + 0x48], rax
0x2d43:	xor	r11d, r11d
0x2d46:	mov	rax, rbp
0x2d49:	mov	r8d, r12d
0x2d4c:	mov	rbp, r11
0x2d4f:	mov	r11, rax
0x2d52:	nop	word ptr [rax + rax]
0x2d58:	cmp	r11, rbp
0x2d5b:	setne	r12b
0x2d5f:	cmp	r11, -1
0x2d63:	jne	0x2d72


0x3cd8:	test	ebx, ebx
0x3cda:	je	0x3e68


0x3e68:	mov	byte ptr [rsp + 0xd], 0
0x3e6d:	jmp	0x38e1


0x3ce0:	lea	rax, [rip + 0x1eb6]
0x3ce7:	mov	byte ptr [rsp + 0xe], 1
0x3cec:	mov	byte ptr [rsp + 0x7c], 0
0x3cf1:	xor	r12d, r12d
0x3cf4:	mov	qword ptr [rsp + 0x50], 0
0x3cfd:	mov	byte ptr [rsp + 0xf], 1
0x3d02:	mov	byte ptr [rsp + 0xd], 0
0x3d07:	mov	qword ptr [rsp + 0x18], 1
0x3d10:	xor	r15d, r15d
0x3d13:	mov	qword ptr [rsp + 0x48], rax
0x3d18:	jmp	0x2d43


0x38e1:	test	r13, r13
0x38e4:	jne	0x3e7a


0x3ea4:	nop	
0x3ea6:	nop	word ptr cs:[rax + rax]


0x405b:	nop	dword ptr [rax + rax]


0x4096:	nop	word ptr cs:[rax + rax]


0x40b1:	nop	dword ptr [rax + rax]
0x40b6:	nop	word ptr cs:[rax + rax]


0x40d1:	nop	dword ptr [rax + rax]
0x40d6:	nop	word ptr cs:[rax + rax]


0x4115:	nop	
0x4116:	nop	word ptr cs:[rax + rax]


0x4135:	nop	
0x4136:	nop	word ptr cs:[rax + rax]


0x41e4:	nop	
0x41e6:	nop	word ptr cs:[rax + rax]


0x42d3:	nop	dword ptr [rax]
0x42d6:	nop	word ptr cs:[rax + rax]


0x42ea:	nop	word ptr [rax + rax]


0x4383:	nop	dword ptr [rax]
0x4386:	nop	word ptr cs:[rax + rax]


0x43a3:	nop	dword ptr [rax]
0x43a6:	nop	word ptr cs:[rax + rax]


0x43bc:	nop	dword ptr [rax]


0x43d8:	nop	dword ptr [rax + rax]


0x43f4:	nop	
0x43f6:	nop	word ptr cs:[rax + rax]


0x448e:	nop	


0x451a:	nop	word ptr [rax + rax]


0x452c:	nop	dword ptr [rax]


0x453f:	nop	


0x45d8:	nop	dword ptr [rax + rax]


0x4601:	nop	dword ptr [rax + rax]
0x4606:	nop	word ptr cs:[rax + rax]


0x461a:	nop	word ptr [rax + rax]


0x46ae:	nop	


0x4741:	nop	dword ptr [rax + rax]
0x4746:	nop	word ptr cs:[rax + rax]


0x475c:	nop	dword ptr [rax]


0x4777:	nop	word ptr [rax + rax]


0x4793:	nop	dword ptr [rax]
0x4796:	nop	word ptr cs:[rax + rax]


0x47ac:	nop	dword ptr [rax]


0x47c4:	nop	
0x47c6:	nop	word ptr cs:[rax + rax]


0x47e3:	nop	dword ptr [rax]
0x47e6:	nop	word ptr cs:[rax + rax]


0x4808:	nop	dword ptr [rax + rax]


0x486e:	nop	


0x48ce:	nop	


0x4ce7:	nop	word ptr [rax + rax]


0x4d88:	nop	dword ptr [rax + rax]


0x4e65:	nop	
0x4e66:	nop	word ptr cs:[rax + rax]


0x4f0a:	nop	word ptr [rax + rax]


0x4f34:	nop	
0x4f36:	nop	word ptr cs:[rax + rax]


0x4f42:	nop	dword ptr [rax]
0x4f46:	nop	word ptr cs:[rax + rax]


0x4f86:	nop	word ptr cs:[rax + rax]


0x4fb4:	nop	
0x4fb6:	nop	word ptr cs:[rax + rax]


0x5042:	nop	dword ptr [rax]
0x5046:	nop	word ptr cs:[rax + rax]


0x509a:	nop	word ptr [rax + rax]


0x50b7:	nop	word ptr [rax + rax]


0x50ee:	nop	


0x5118:	nop	dword ptr [rax + rax]


0x5133:	nop	word ptr cs:[rax + rax]
0x513d:	nop	dword ptr [rax]


0x5175:	nop	word ptr cs:[rax + rax]
0x517f:	nop	


0x5203:	nop	word ptr cs:[rax + rax]
0x520d:	nop	dword ptr [rax]


0x528d:	nop	dword ptr [rax]


0x532c:	nop	dword ptr [rax]


0x53ab:	nop	dword ptr [rax + rax]


0x5447:	nop	word ptr [rax + rax]


0x54b5:	nop	
0x54b6:	nop	word ptr cs:[rax + rax]


0x54c2:	nop	word ptr cs:[rax + rax]
0x54cc:	nop	dword ptr [rax]


0x2f30:	xor	r10d, r10d
0x2f33:	mov	eax, dword ptr [rsp + 8]
0x2f37:	cmp	eax, 2
0x2f3a:	je	0x34f8


0x2f60:	xor	r10d, r10d
0x2f63:	cmp	dword ptr [rsp + 8], 2
0x2f68:	je	0x3470


0x2f88:	mov	edx, 9
0x2f8d:	mov	ebx, 0x74
0x2f92:	cmp	dword ptr [rsp + 8], 2
0x2f97:	sete	al
0x2f9a:	and	al, byte ptr [rsp + 0xf]
0x2f9e:	jne	0x30ee


0x2fc8:	mov	edx, 8
0x2fcd:	mov	ebx, 0x62
0x2fd2:	jmp	0x2fa4


0x2fd8:	cmp	dword ptr [rsp + 8], 2
0x2fdd:	je	0x33b0


0x3080:	cmp	byte ptr [rsp + 0xd], 0
0x3085:	jne	0x3253


0x30a8:	cmp	dword ptr [rsp + 8], 2
0x30ad:	sete	dl
0x30b0:	xor	eax, eax
0x30b2:	jmp	0x2e98


0x30c0:	mov	edx, 7
0x30c5:	mov	ebx, 0x61
0x30ca:	jmp	0x2fa4


0x30d0:	cmp	dword ptr [rsp + 8], 2
0x30d5:	sete	dl
0x30d8:	test	rbp, rbp
0x30db:	jne	0x2e8c


0x3100:	cmp	dword ptr [rsp + 8], 2
0x3105:	sete	dl
0x3108:	xor	r12d, r12d
0x310b:	jmp	0x30e1


0x3110:	cmp	dword ptr [rsp + 8], 2
0x3115:	mov	ebx, 0x20
0x311a:	sete	dl
0x311d:	jmp	0x30e1


0x3120:	mov	edx, 0xd
0x3125:	mov	ebx, 0x72
0x312a:	jmp	0x2f92


0x3130:	mov	edx, 0xc
0x3135:	mov	ebx, 0x66
0x313a:	jmp	0x2fa4


0x3140:	mov	edx, 0xb
0x3145:	mov	ebx, 0x76
0x314a:	jmp	0x2fa4


0x3150:	mov	edx, 0xa
0x3155:	mov	ebx, 0x6e
0x315a:	jmp	0x2f92


0x31f0:	xor	r10d, r10d
0x31f3:	cmp	byte ptr [rsp + 0xd], 0
0x31f8:	jne	0x2fee


0x3210:	mov	edx, 0xc
0x3215:	xor	r10d, r10d
0x3218:	mov	ebx, 0x66
0x321d:	jmp	0x2fa4


0x3228:	mov	edx, 0xa
0x322d:	xor	r10d, r10d
0x3230:	mov	ebx, 0x6e
0x3235:	jmp	0x2f92


0x3240:	mov	ebx, 0x61
0x3245:	jmp	0x3010


0x3250:	xor	r10d, r10d
0x3253:	cmp	dword ptr [rsp + 8], 2
0x3258:	sete	dl
0x325b:	cmp	byte ptr [rsp + 0xf], 0
0x3260:	jne	0x3dfa


0x32f0:	cmp	dword ptr [rsp + 8], 2
0x32f5:	mov	r12d, r10d
0x32f8:	sete	dl
0x32fb:	xor	r10d, r10d
0x32fe:	xor	eax, eax
0x3300:	jmp	0x2e98


0x3308:	cmp	dword ptr [rsp + 8], 2
0x330d:	sete	dl
0x3310:	xor	r10d, r10d
0x3313:	jmp	0x30d8


0x3320:	cmp	dword ptr [rsp + 8], 2
0x3325:	sete	dl
0x3328:	xor	r10d, r10d
0x332b:	xor	r12d, r12d
0x332e:	jmp	0x30e1


0x3338:	cmp	dword ptr [rsp + 8], 2
0x333d:	mov	r12d, r10d
0x3340:	mov	ebx, 0x20
0x3345:	sete	dl
0x3348:	xor	r10d, r10d
0x334b:	jmp	0x30e1


0x3368:	mov	ebx, 0x76
0x336d:	jmp	0x3010


0x3378:	mov	edx, 9
0x337d:	xor	r10d, r10d
0x3380:	mov	ebx, 0x74
0x3385:	jmp	0x2f92


0x3390:	mov	ebx, 0x62
0x3395:	jmp	0x3010


0x3930:	test	ebx, ebx
0x3932:	jne	0x3d2d


0x18c5:	nop	dword ptr [rax]


0x1c98:	nop	dword ptr [rax + rax]


0x1cd4:	nop	dword ptr [rax]


0x1d08:	nop	dword ptr [rax + rax]


0x1d3c:	nop	dword ptr [rax]


0x1d57:	nop	word ptr [rax + rax]


0x1d73:	nop	dword ptr [rax + rax]


0x1d8d:	nop	dword ptr [rax]


0x1e81:	nop	dword ptr [rax]


0x1e9b:	nop	dword ptr [rax + rax]


0x1eab:	nop	dword ptr [rax + rax]


0x1ee3:	nop	dword ptr [rax + rax]


0x1f16:	nop	word ptr cs:[rax + rax]


0x2436:	nop	word ptr cs:[rax + rax]


0x2487:	nop	word ptr [rax + rax]


0x24d1:	nop	dword ptr [rax]


0x251b:	nop	dword ptr [rax + rax]


0x2554:	nop	dword ptr [rax]


0x2a4b:	nop	dword ptr [rax + rax]


0x2a7d:	nop	dword ptr [rax]


0x2ab2:	nop	word ptr [rax + rax]


0x2bbc:	nop	dword ptr [rax]


0x2c0d:	nop	dword ptr [rax]


0x2e38:	nop	dword ptr [rax + rax]


0x2f27:	nop	word ptr [rax + rax]


0x2f5e:	nop	


0x2f81:	nop	dword ptr [rax]


0x2fc2:	nop	word ptr [rax + rax]


0x2fd4:	nop	dword ptr [rax]


0x3078:	nop	dword ptr [rax + rax]


0x30a1:	nop	dword ptr [rax]


0x30b7:	nop	word ptr [rax + rax]


0x30cf:	nop	


0x30fe:	nop	


0x310d:	nop	dword ptr [rax]


0x311f:	nop	


0x312f:	nop	


0x313f:	nop	


0x314f:	nop	


0x315f:	nop	


0x31cc:	nop	dword ptr [rax]


0x31ec:	nop	dword ptr [rax]


0x31fe:	nop	


0x320f:	nop	


0x3222:	nop	word ptr [rax + rax]


0x323a:	nop	word ptr [rax + rax]


0x324a:	nop	word ptr [rax + rax]


0x32eb:	nop	dword ptr [rax + rax]


0x3305:	nop	dword ptr [rax]


0x3318:	nop	dword ptr [rax + rax]


0x3333:	nop	dword ptr [rax + rax]


0x3362:	nop	word ptr [rax + rax]


0x3372:	nop	word ptr [rax + rax]


0x338a:	nop	word ptr [rax + rax]


0x339a:	nop	word ptr [rax + rax]


0x33a8:	nop	dword ptr [rax + rax]


0x33cf:	nop	


0x3469:	nop	dword ptr [rax]


0x34b2:	nop	word ptr [rax + rax]


0x34d8:	nop	dword ptr [rax + rax]


0x34f1:	nop	dword ptr [rax]


0x3512:	nop	word ptr [rax + rax]


0x3678:	nop	dword ptr [rax + rax]


0x378b:	nop	dword ptr [rax + rax]


0x37ae:	nop	


0x3875:	nop	dword ptr [rax]


0x392d:	nop	dword ptr [rax]


0x3b36:	nop	word ptr cs:[rax + rax]


0x3bc9:	nop	dword ptr [rax]


0x3c3d:	nop	dword ptr [rax]


0x3d1d:	nop	dword ptr [rax]


0x402b:	nop	dword ptr [rax + rax]


0x485f:	nop	


0x48bf:	nop	


0x4976:	nop	word ptr cs:[rax + rax]


0x4a05:	nop	dword ptr [rax]


0x4a26:	nop	word ptr cs:[rax + rax]


0x4a85:	nop	dword ptr [rax]


0x4ac1:	nop	dword ptr [rax]


0x4b08:	nop	dword ptr [rax + rax]


0x4b57:	nop	word ptr [rax + rax]


0x4bb4:	nop	dword ptr [rax]


0x4be2:	nop	word ptr [rax + rax]


0x4c96:	nop	word ptr cs:[rax + rax]


0x4cf9:	nop	dword ptr [rax]


0x4f72:	nop	word ptr [rax + rax]


0x4ff9:	nop	dword ptr [rax]


0x5024:	nop	dword ptr [rax]


0x507d:	nop	dword ptr [rax]


0x5244:	nop	dword ptr [rax]


0x5261:	nop	dword ptr [rax]


0x5272:	nop	word ptr [rax + rax]


0x52ca:	nop	word ptr [rax + rax]


0x5316:	nop	word ptr cs:[rax + rax]


0x5375:	nop	dword ptr [rax]


0x53d3:	nop	dword ptr [rax + rax]


0x53ff:	nop	


