0x4af0:	sub	rsp, 8
0x4af4:	add	rsp, 8
0x4af8:	ret	


0x4ae0:	mov	rdx, qword ptr [rip + 0x202521]
0x4ae7:	xor	esi, esi
0x4ae9:	jmp	0x1590


0x4ad0:	ret	


0x4a60:	push	r15
0x4a62:	push	r14
0x4a64:	mov	r15, rdx
0x4a67:	push	r13
0x4a69:	push	r12
0x4a6b:	lea	r12, [rip + 0x2020de]
0x4a72:	push	rbp
0x4a73:	lea	rbp, [rip + 0x2020de]
0x4a7a:	push	rbx
0x4a7b:	mov	r13d, edi
0x4a7e:	mov	r14, rsi
0x4a81:	sub	rbp, r12
0x4a84:	sub	rsp, 8
0x4a88:	sar	rbp, 3
0x4a8c:	call	0x12f0


0x4a00:	mov	rax, qword ptr [rdi + 8]
0x4a04:	cmp	qword ptr [rdi + 0x10], rax
0x4a08:	je	0x4a10


0x49c0:	test	rdi, rdi
0x49c3:	push	rbx
0x49c4:	mov	rbx, rdi
0x49c7:	je	0x49da


0x4940:	push	r12
0x4942:	push	rbp
0x4943:	push	rbx
0x4944:	mov	rbx, rdi
0x4947:	call	0x14c0


0x4900:	sub	rsp, 8
0x4904:	mov	edi, 0xe
0x4909:	call	0x1500


0x48a0:	sub	rsp, 8
0x48a4:	xor	esi, esi
0x48a6:	call	0x1530


0x4820:	push	r12
0x4822:	push	rbp
0x4823:	mov	rbp, rdi
0x4826:	push	rbx
0x4827:	call	0x1380


0x4790:	push	r13
0x4792:	push	r12
0x4794:	mov	r13, rsi
0x4797:	push	rbp
0x4798:	push	rbx
0x4799:	mov	rbx, rdi
0x479c:	mov	r12, rdx
0x479f:	sub	rsp, 0x18
0x47a3:	mov	rax, qword ptr fs:[0x28]
0x47ac:	mov	qword ptr [rsp + 8], rax
0x47b1:	xor	eax, eax
0x47b3:	lea	rax, [rsp + 4]
0x47b8:	test	rdi, rdi
0x47bb:	cmove	rbx, rax
0x47bf:	mov	rdi, rbx
0x47c2:	call	0x1430


0x4510:	push	r12
0x4512:	push	rbp
0x4513:	mov	ebp, edi
0x4515:	push	rbx
0x4516:	sub	rsp, 0x50
0x451a:	mov	rax, qword ptr fs:[0x28]
0x4523:	mov	qword ptr [rsp + 0x18], rax
0x4528:	xor	eax, eax
0x452a:	lea	rax, [rsp + 0x70]
0x452f:	test	esi, esi
0x4531:	mov	qword ptr [rsp + 0x30], rdx
0x4536:	mov	qword ptr [rsp + 0x38], rcx
0x453b:	mov	qword ptr [rsp + 0x40], r8
0x4540:	mov	qword ptr [rsp + 8], rax
0x4545:	lea	rax, [rsp + 0x20]
0x454a:	mov	qword ptr [rsp + 0x48], r9
0x454f:	mov	dword ptr [rsp], 0x10
0x4556:	mov	qword ptr [rsp + 0x10], rax
0x455b:	je	0x4762


0x44d0:	lea	rsi, [rip + 0x12f8]
0x44d7:	sub	rsp, 8
0x44db:	mov	edx, 5
0x44e0:	xor	edi, edi
0x44e2:	call	0x13d0


0x44b0:	push	rbx
0x44b1:	mov	rbx, rdi
0x44b4:	call	0x13f0


0x4480:	push	rbp
0x4481:	push	rbx
0x4482:	mov	rbp, rdi
0x4485:	mov	rdi, rsi
0x4488:	mov	rbx, rsi
0x448b:	sub	rsp, 8
0x448f:	call	0x4280


0x4450:	mov	rax, rdi
0x4453:	sub	rsp, 8
0x4457:	mul	rsi
0x445a:	seto	dl
0x445d:	test	rax, rax
0x4460:	js	0x4479


0x4430:	push	rbx
0x4431:	mov	rbx, rdi
0x4434:	call	0x4280


0x43e0:	test	rdi, rdi
0x43e3:	mov	rax, qword ptr [rsi]
0x43e6:	je	0x4410


0x4350:	test	rdi, rdi
0x4353:	mov	r9, rdx
0x4356:	mov	rcx, qword ptr [rsi]
0x4359:	je	0x4390


0x4320:	mov	rax, rsi
0x4323:	mul	rdx
0x4326:	mov	rsi, rax
0x4329:	seto	al
0x432c:	test	rsi, rsi
0x432f:	js	0x433b


0x42e0:	test	rsi, rsi
0x42e3:	push	rbx
0x42e4:	mov	rbx, rsi
0x42e7:	jne	0x42ee


0x42d0:	jmp	0x4280


0x42a0:	mov	rax, rdi
0x42a3:	mul	rsi
0x42a6:	mov	rdi, rax
0x42a9:	seto	al
0x42ac:	test	rdi, rdi
0x42af:	js	0x42bb


0x4280:	push	rbx
0x4281:	mov	rbx, rdi
0x4284:	call	0x14e0


0x4200:	push	rbx
0x4201:	lea	rsi, [rip + 0x12ba]
0x4208:	mov	edx, 5
0x420d:	xor	edi, edi
0x420f:	call	0x13d0


0x4120:	push	rbp
0x4121:	push	rbx
0x4122:	mov	r10d, 0x20
0x4128:	xor	r11d, r11d
0x412b:	sub	rsp, 0xb8
0x4132:	mov	rax, qword ptr fs:[0x28]
0x413b:	mov	qword ptr [rsp + 0x78], rax
0x4140:	xor	eax, eax
0x4142:	lea	rax, [rsp + 0xd0]
0x414a:	mov	qword ptr [rsp + 0xa0], r8
0x4152:	lea	rbx, [rsp + 0xd0]
0x415a:	lea	r8, [rsp + 0x20]
0x415f:	mov	qword ptr [rsp + 0xa8], r9
0x4167:	mov	dword ptr [rsp + 8], 0x20
0x416f:	mov	qword ptr [rsp + 0x10], rax
0x4174:	lea	rax, [rsp + 0x80]
0x417c:	xor	r9d, r9d
0x417f:	mov	qword ptr [rsp + 0x18], rax
0x4184:	mov	rbp, rax
0x4187:	nop	word ptr [rax + rax]
0x4190:	cmp	r10d, 0x2f
0x4194:	ja	0x41ec


0x40a0:	sub	rsp, 0x68
0x40a4:	mov	r10, r8
0x40a7:	xor	r9d, r9d
0x40aa:	mov	rax, qword ptr fs:[0x28]
0x40b3:	mov	qword ptr [rsp + 0x58], rax
0x40b8:	xor	eax, eax
0x40ba:	mov	r8, rsp
0x40bd:	nop	dword ptr [rax]
0x40c0:	mov	eax, dword ptr [r10]
0x40c3:	cmp	eax, 0x2f
0x40c6:	ja	0x410a


0x4080:	xor	r9d, r9d
0x4083:	cmp	qword ptr [r8], 0
0x4087:	je	0x409b


0x3c60:	push	r15
0x3c62:	push	r14
0x3c64:	push	r13
0x3c66:	push	r12
0x3c68:	mov	r12, r9
0x3c6b:	push	rbp
0x3c6c:	push	rbx
0x3c6d:	mov	rbp, rdi
0x3c70:	mov	rbx, r8
0x3c73:	sub	rsp, 0x28
0x3c77:	test	rsi, rsi
0x3c7a:	je	0x3d98


0x3c40:	lea	rcx, [rip + 0x2033d9]
0x3c47:	mov	rsi, rdi
0x3c4a:	mov	rdx, -1
0x3c51:	xor	edi, edi
0x3c53:	jmp	0x3300


0x3c20:	lea	rcx, [rip + 0x2033f9]
0x3c27:	mov	rdx, -1
0x3c2e:	jmp	0x3300


0x3c00:	lea	rcx, [rip + 0x203419]
0x3c07:	mov	rdx, rsi
0x3c0a:	mov	rsi, rdi
0x3c0d:	xor	edi, edi
0x3c0f:	jmp	0x3300


0x3bf0:	lea	rcx, [rip + 0x203429]
0x3bf7:	jmp	0x3300


0x3bd0:	mov	r8, rcx
0x3bd3:	mov	rcx, rdx
0x3bd6:	mov	rdx, rsi
0x3bd9:	mov	rsi, rdi
0x3bdc:	xor	edi, edi
0x3bde:	jmp	0x3b00


0x3bb0:	mov	rcx, rdx
0x3bb3:	mov	r8, -1
0x3bba:	mov	rdx, rsi
0x3bbd:	mov	rsi, rdi
0x3bc0:	xor	edi, edi
0x3bc2:	jmp	0x3b00


0x3ba0:	mov	r8, -1
0x3ba7:	jmp	0x3b00


0x3b00:	sub	rsp, 0x48
0x3b04:	mov	r9, rcx
0x3b07:	mov	rcx, qword ptr [rip + 0x203702]
0x3b0e:	movdqa	xmm0, xmmword ptr [rip + 0x2036ca]
0x3b16:	mov	rax, qword ptr fs:[0x28]
0x3b1f:	mov	qword ptr [rsp + 0x38], rax
0x3b24:	xor	eax, eax
0x3b26:	movaps	xmmword ptr [rsp], xmm0
0x3b2a:	test	rsi, rsi
0x3b2d:	mov	qword ptr [rsp + 0x30], rcx
0x3b32:	mov	dword ptr [rsp], 0xa
0x3b39:	movdqa	xmm0, xmmword ptr [rip + 0x2036af]
0x3b41:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x3b46:	movdqa	xmm0, xmmword ptr [rip + 0x2036b2]
0x3b4e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x3b53:	je	0x3b87


0x3a70:	sub	rsp, 0x48
0x3a74:	mov	rax, rdx
0x3a77:	mov	rdx, qword ptr fs:[0x28]
0x3a80:	mov	qword ptr [rsp + 0x38], rdx
0x3a85:	xor	edx, edx
0x3a87:	cmp	esi, 0xa
0x3a8a:	je	0x3af4


0x3a60:	mov	edx, 0x3a
0x3a65:	jmp	0x3990


0x3a40:	mov	edx, 0x3a
0x3a45:	mov	rsi, -1
0x3a4c:	jmp	0x3990


0x3a30:	movsx	edx, sil
0x3a34:	mov	rsi, -1
0x3a3b:	jmp	0x3990


0x3990:	sub	rsp, 0x48
0x3994:	mov	ecx, edx
0x3996:	mov	rax, qword ptr fs:[0x28]
0x399f:	mov	qword ptr [rsp + 0x38], rax
0x39a4:	xor	eax, eax
0x39a6:	mov	rax, qword ptr [rip + 0x203863]
0x39ad:	mov	r8, rsp
0x39b0:	and	ecx, 0x1f
0x39b3:	movdqa	xmm0, xmmword ptr [rip + 0x203825]
0x39bb:	mov	qword ptr [rsp + 0x30], rax
0x39c0:	mov	eax, edx
0x39c2:	movaps	xmmword ptr [rsp], xmm0
0x39c6:	shr	al, 5
0x39c9:	movzx	eax, al
0x39cc:	lea	r9, [r8 + rax*4 + 8]
0x39d1:	movdqa	xmm0, xmmword ptr [rip + 0x203817]
0x39d9:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x39de:	movdqa	xmm0, xmmword ptr [rip + 0x20381a]
0x39e6:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x39eb:	mov	edx, dword ptr [r9]
0x39ee:	mov	eax, edx
0x39f0:	shr	eax, cl
0x39f2:	not	eax
0x39f4:	and	eax, 1
0x39f7:	shl	eax, cl
0x39f9:	mov	rcx, r8
0x39fc:	xor	eax, edx
0x39fe:	mov	rdx, rsi
0x3a01:	mov	rsi, rdi
0x3a04:	mov	dword ptr [r9], eax
0x3a07:	xor	edi, edi
0x3a09:	call	0x3300


0x3980:	mov	rcx, rdx
0x3983:	mov	rdx, rsi
0x3986:	mov	esi, edi
0x3988:	xor	edi, edi
0x398a:	jmp	0x38e0


0x3970:	mov	rdx, rsi
0x3973:	mov	esi, edi
0x3975:	xor	edi, edi
0x3977:	jmp	0x3850


0x38e0:	sub	rsp, 0x48
0x38e4:	mov	rax, rdx
0x38e7:	mov	rdx, rcx
0x38ea:	mov	rcx, qword ptr fs:[0x28]
0x38f3:	mov	qword ptr [rsp + 0x38], rcx
0x38f8:	xor	ecx, ecx
0x38fa:	cmp	esi, 0xa
0x38fd:	je	0x3960


0x3850:	sub	rsp, 0x48
0x3854:	mov	rax, rdx
0x3857:	mov	rdx, qword ptr fs:[0x28]
0x3860:	mov	qword ptr [rsp + 0x38], rdx
0x3865:	xor	edx, edx
0x3867:	cmp	esi, 0xa
0x386a:	je	0x38d4


0x3830:	lea	rcx, [rip + 0x2039a9]
0x3837:	mov	rdx, rsi
0x383a:	mov	rsi, rdi
0x383d:	xor	edi, edi
0x383f:	jmp	0x3300


0x3810:	lea	rcx, [rip + 0x2039c9]
0x3817:	mov	rsi, rdi
0x381a:	mov	rdx, -1
0x3821:	xor	edi, edi
0x3823:	jmp	0x3300


0x3800:	lea	rcx, [rip + 0x2039d9]
0x3807:	jmp	0x3300


0x37e0:	lea	rcx, [rip + 0x2039f9]
0x37e7:	mov	rdx, -1
0x37ee:	jmp	0x3300


0x3740:	mov	eax, dword ptr [rip + 0x203912]
0x3746:	push	r12
0x3748:	mov	r12, qword ptr [rip + 0x203911]
0x374f:	push	rbp
0x3750:	push	rbx
0x3751:	cmp	eax, 1
0x3754:	jle	0x3781


0x3730:	mov	rcx, rdx
0x3733:	xor	edx, edx
0x3735:	jmp	0x3640


0x3640:	push	r15
0x3642:	push	r14
0x3644:	lea	rax, [rip + 0x203b95]
0x364b:	push	r13
0x364d:	push	r12
0x364f:	mov	r12, rdx
0x3652:	push	rbp
0x3653:	push	rbx
0x3654:	mov	rbx, rcx
0x3657:	mov	r14, rdi
0x365a:	mov	r15, rsi
0x365d:	sub	rsp, 0x38
0x3661:	test	rcx, rcx
0x3664:	cmove	rbx, rax
0x3668:	xor	ebp, ebp
0x366a:	call	0x1340


0x35c0:	push	r15
0x35c2:	push	r14
0x35c4:	lea	rax, [rip + 0x203c15]
0x35cb:	push	r13
0x35cd:	push	r12
0x35cf:	mov	r13, rdi
0x35d2:	push	rbp
0x35d3:	push	rbx
0x35d4:	mov	rbx, r8
0x35d7:	mov	r14, rsi
0x35da:	mov	r15, rdx
0x35dd:	sub	rsp, 0x18
0x35e1:	test	r8, r8
0x35e4:	cmove	rbx, rax
0x35e8:	mov	qword ptr [rsp + 8], rcx
0x35ed:	call	0x1340


0x3590:	lea	rax, [rip + 0x203c49]
0x3597:	test	rdi, rdi
0x359a:	cmove	rdi, rax
0x359e:	test	rsi, rsi
0x35a1:	mov	dword ptr [rdi], 0xa
0x35a7:	je	0x35b7


0x3570:	lea	rax, [rip + 0x203c69]
0x3577:	test	rdi, rdi
0x357a:	cmove	rdi, rax
0x357e:	mov	eax, dword ptr [rdi + 4]
0x3581:	mov	dword ptr [rdi + 4], esi
0x3584:	ret	


0x3530:	lea	rax, [rip + 0x203ca9]
0x3537:	test	rdi, rdi
0x353a:	mov	ecx, esi
0x353c:	cmove	rdi, rax
0x3540:	mov	eax, esi
0x3542:	and	ecx, 0x1f
0x3545:	shr	al, 5
0x3548:	movzx	eax, al
0x354b:	lea	rdi, [rdi + rax*4 + 8]
0x3550:	mov	esi, dword ptr [rdi]
0x3552:	mov	eax, esi
0x3554:	shr	eax, cl
0x3556:	xor	edx, eax
0x3558:	and	eax, 1
0x355b:	and	edx, 1
0x355e:	shl	edx, cl
0x3560:	xor	edx, esi
0x3562:	mov	dword ptr [rdi], edx
0x3564:	ret	


0x3510:	lea	rax, [rip + 0x203cc9]
0x3517:	test	rdi, rdi
0x351a:	cmove	rdi, rax
0x351e:	mov	dword ptr [rdi], esi
0x3520:	ret	


0x34f0:	lea	rax, [rip + 0x203ce9]
0x34f7:	test	rdi, rdi
0x34fa:	cmove	rdi, rax
0x34fe:	mov	eax, dword ptr [rdi]
0x3500:	ret	


0x34b0:	push	r12
0x34b2:	push	rbp
0x34b3:	push	rbx
0x34b4:	mov	rbx, rdi
0x34b7:	call	0x1340


0x3300:	push	r15
0x3302:	push	r14
0x3304:	movsxd	r15, edi
0x3307:	push	r13
0x3309:	push	r12
0x330b:	mov	r14, rdx
0x330e:	push	rbp
0x330f:	push	rbx
0x3310:	mov	rbp, rcx
0x3313:	sub	rsp, 0x28
0x3317:	mov	qword ptr [rsp + 8], rsi
0x331c:	call	0x1340


0x20c0:	push	r15
0x20c2:	push	r14
0x20c4:	mov	r15d, r8d
0x20c7:	push	r13
0x20c9:	push	r12
0x20cb:	mov	r14, rdi
0x20ce:	push	rbp
0x20cf:	push	rbx
0x20d0:	mov	ebx, r9d
0x20d3:	mov	r13, rsi
0x20d6:	mov	rbp, rcx
0x20d9:	and	ebx, 2
0x20dc:	sub	rsp, 0xb8
0x20e3:	mov	rax, qword ptr [rsp + 0xf0]
0x20eb:	mov	qword ptr [rsp + 0x10], rdx
0x20f0:	mov	dword ptr [rsp + 8], r8d
0x20f5:	mov	dword ptr [rsp + 0x78], r9d
0x20fa:	mov	qword ptr [rsp + 0x20], rax
0x20ff:	mov	rax, qword ptr [rsp + 0xf8]
0x2107:	mov	qword ptr [rsp + 0x68], rax
0x210c:	mov	rax, qword ptr [rsp + 0x100]
0x2114:	mov	qword ptr [rsp + 0x60], rax
0x2119:	mov	rax, qword ptr fs:[0x28]
0x2122:	mov	qword ptr [rsp + 0xa8], rax
0x212a:	xor	eax, eax
0x212c:	call	0x13e0


0x1fd0:	push	rbp
0x1fd1:	push	rbx
0x1fd2:	mov	rbp, rdi
0x1fd5:	mov	ebx, esi
0x1fd7:	sub	rsp, 8
0x1fdb:	call	0x4900


0x1f30:	test	rdi, rdi
0x1f33:	push	rbx
0x1f34:	je	0x1fad


0x1e80:	push	rbp
0x1e81:	push	rbx
0x1e82:	sub	rsp, 8
0x1e86:	mov	rdi, qword ptr [rip + 0x2051fb]
0x1e8d:	call	0x4820


0x1e70:	mov	byte ptr [rip + 0x205239], dil
0x1e77:	ret	


0x1e60:	mov	qword ptr [rip + 0x205251], rdi
0x1e67:	ret	


0x1ad0:	push	r13
0x1ad2:	push	r12
0x1ad4:	mov	edx, 5
0x1ad9:	push	rbp
0x1ada:	push	rbx
0x1adb:	mov	ebp, edi
0x1add:	sub	rsp, 0x88
0x1ae4:	mov	rbx, qword ptr [rip + 0x2055d5]
0x1aeb:	mov	rax, qword ptr fs:[0x28]
0x1af4:	mov	qword ptr [rsp + 0x78], rax
0x1af9:	xor	eax, eax
0x1afb:	test	edi, edi
0x1afd:	je	0x1b2d


0x1ac0:	push	rbp
0x1ac1:	mov	rbp, rsp
0x1ac4:	pop	rbp
0x1ac5:	jmp	0x1a30


0x1a80:	cmp	byte ptr [rip + 0x205621], 0
0x1a87:	jne	0x1ab8


0x1a30:	lea	rdi, [rip + 0x205649]
0x1a37:	lea	rsi, [rip + 0x205642]
0x1a3e:	push	rbp
0x1a3f:	sub	rsi, rdi
0x1a42:	mov	rbp, rsp
0x1a45:	sar	rsi, 3
0x1a49:	mov	rax, rsi
0x1a4c:	shr	rax, 0x3f
0x1a50:	add	rsi, rax
0x1a53:	sar	rsi, 1
0x1a56:	je	0x1a70


0x19f0:	lea	rdi, [rip + 0x205689]
0x19f7:	push	rbp
0x19f8:	lea	rax, [rip + 0x205681]
0x19ff:	cmp	rax, rdi
0x1a02:	mov	rbp, rsp
0x1a05:	je	0x1a20


0x19c0:	xor	ebp, ebp
0x19c2:	mov	r9, rdx
0x19c5:	pop	rsi
0x19c6:	mov	rdx, rsp
0x19c9:	and	rsp, 0xfffffffffffffff0
0x19cd:	push	rax
0x19ce:	push	rsp
0x19cf:	lea	r8, [rip + 0x30fa]
0x19d6:	lea	rcx, [rip + 0x3083]
0x19dd:	lea	rdi, [rip - 0x3d4]
0x19e4:	call	qword ptr [rip + 0x2055ee]


0x1610:	push	r15
0x1612:	push	r14
0x1614:	push	r13
0x1616:	push	r12
0x1618:	xor	r13d, r13d
0x161b:	push	rbp
0x161c:	push	rbx
0x161d:	mov	ebp, edi
0x161f:	mov	rbx, rsi
0x1622:	xor	r12d, r12d
0x1625:	sub	rsp, 0x18
0x1629:	mov	rdi, qword ptr [rsi]
0x162c:	call	0x1f30


0x12f0:	sub	rsp, 8
0x12f4:	mov	rax, qword ptr [rip + 0x205ce5]
0x12fb:	test	rax, rax
0x12fe:	je	0x1302


0x1590:	jmp	qword ptr [rip + 0x205a02]


0x4a10:	mov	rax, qword ptr [rdi + 0x20]
0x4a14:	cmp	qword ptr [rdi + 0x28], rax
0x4a18:	jne	0x4a0a


0x4a0a:	jmp	0x1580


0x49da:	mov	rdi, rbx
0x49dd:	pop	rbx
0x49de:	jmp	0x14f0


0x49c9:	call	0x1510


0x14c0:	jmp	qword ptr [rip + 0x205a6a]


0x1500:	jmp	qword ptr [rip + 0x205a4a]


0x1530:	jmp	qword ptr [rip + 0x205a32]


0x1380:	jmp	qword ptr [rip + 0x205b0a]


0x1430:	jmp	qword ptr [rip + 0x205ab2]


0x4762:	mov	rax, qword ptr [rsp + 0x10]
0x4767:	xor	esi, esi
0x4769:	mov	edx, dword ptr [rax + 0x10]
0x476c:	xor	eax, eax
0x476e:	call	0x1390


0x4561:	cmp	esi, 0x406
0x4567:	jne	0x45b0


0x13d0:	jmp	qword ptr [rip + 0x205ae2]


0x13f0:	jmp	qword ptr [rip + 0x205ad2]


0x4479:	call	0x44d0


0x4462:	movzx	edx, dl
0x4465:	test	rdx, rdx
0x4468:	jne	0x4479


0x4410:	test	rax, rax
0x4413:	mov	edx, 0x80
0x4418:	cmove	rax, rdx
0x441c:	test	rax, rax
0x441f:	jns	0x4402


0x43e8:	movabs	rdx, 0x5555555555555553
0x43f2:	cmp	rax, rdx
0x43f5:	ja	0x4421


0x4390:	test	rcx, rcx
0x4393:	je	0x43b8


0x435b:	xor	edx, edx
0x435d:	movabs	rax, 0x5555555555555554
0x4367:	div	r9
0x436a:	cmp	rax, rcx
0x436d:	jbe	0x43ab


0x433b:	sub	rsp, 8
0x433f:	call	0x44d0


0x4331:	movzx	eax, al
0x4334:	test	rax, rax
0x4337:	jne	0x433b


0x42e9:	test	rdi, rdi
0x42ec:	jne	0x4308


0x42ee:	mov	rsi, rbx
0x42f1:	call	0x1520


0x42bb:	sub	rsp, 8
0x42bf:	call	0x44d0


0x42b1:	movzx	eax, al
0x42b4:	test	rax, rax
0x42b7:	jne	0x42bb


0x14e0:	jmp	qword ptr [rip + 0x205a5a]


0x4196:	mov	eax, r10d
0x4199:	mov	r11d, 1
0x419f:	add	r10d, 8
0x41a3:	add	rax, rbp
0x41a6:	mov	rax, qword ptr [rax]
0x41a9:	test	rax, rax
0x41ac:	mov	qword ptr [r8 + r9*8], rax
0x41b0:	je	0x41bc


0x41ec:	mov	rax, rbx
0x41ef:	add	rbx, 8
0x41f3:	jmp	0x41a6


0x40c8:	mov	r11d, eax
0x40cb:	add	r11, qword ptr [r10 + 0x10]
0x40cf:	add	eax, 8
0x40d2:	mov	dword ptr [r10], eax
0x40d5:	mov	rax, qword ptr [r11]
0x40d8:	test	rax, rax
0x40db:	mov	qword ptr [r8 + r9*8], rax
0x40df:	je	0x40eb


0x410a:	mov	r11, qword ptr [r10 + 8]
0x410e:	lea	rax, [r11 + 8]
0x4112:	mov	qword ptr [r10 + 8], rax
0x4116:	jmp	0x40d5


0x409b:	jmp	0x3c60


0x3d98:	mov	r8, rcx
0x3d9b:	mov	rcx, rdx
0x3d9e:	lea	rdx, [rip + 0x16cf]
0x3da5:	mov	esi, 1
0x3daa:	xor	eax, eax
0x3dac:	call	0x15c0


0x3c80:	mov	r8, rdx
0x3c83:	lea	rdx, [rip + 0x17de]
0x3c8a:	mov	r9, rcx
0x3c8d:	xor	eax, eax
0x3c8f:	mov	rcx, rsi
0x3c92:	mov	esi, 1
0x3c97:	call	0x15c0


0x3b87:	call	0x1330


0x3b55:	test	rdx, rdx
0x3b58:	je	0x3b87


0x3af4:	call	0x1330


0x3a8c:	mov	dword ptr [rsp], esi
0x3a8f:	mov	rcx, rsp
0x3a92:	mov	rdx, -1
0x3a99:	mov	rsi, rax
0x3a9c:	mov	qword ptr [rsp + 4], 0
0x3aa5:	mov	qword ptr [rsp + 0xc], 0x4000000
0x3aae:	mov	qword ptr [rsp + 0x14], 0
0x3ab7:	mov	qword ptr [rsp + 0x1c], 0
0x3ac0:	mov	qword ptr [rsp + 0x24], 0
0x3ac9:	mov	qword ptr [rsp + 0x2c], 0
0x3ad2:	mov	dword ptr [rsp + 0x34], 0
0x3ada:	call	0x3300


0x3960:	call	0x1330


0x38ff:	mov	dword ptr [rsp], esi
0x3902:	mov	rcx, rsp
0x3905:	mov	rsi, rax
0x3908:	mov	qword ptr [rsp + 4], 0
0x3911:	mov	qword ptr [rsp + 0xc], 0
0x391a:	mov	qword ptr [rsp + 0x14], 0
0x3923:	mov	qword ptr [rsp + 0x1c], 0
0x392c:	mov	qword ptr [rsp + 0x24], 0
0x3935:	mov	qword ptr [rsp + 0x2c], 0
0x393e:	mov	dword ptr [rsp + 0x34], 0
0x3946:	call	0x3300


0x38d4:	call	0x1330


0x386c:	mov	dword ptr [rsp], esi
0x386f:	mov	rcx, rsp
0x3872:	mov	rdx, -1
0x3879:	mov	rsi, rax
0x387c:	mov	qword ptr [rsp + 4], 0
0x3885:	mov	qword ptr [rsp + 0xc], 0
0x388e:	mov	qword ptr [rsp + 0x14], 0
0x3897:	mov	qword ptr [rsp + 0x1c], 0
0x38a0:	mov	qword ptr [rsp + 0x24], 0
0x38a9:	mov	qword ptr [rsp + 0x2c], 0
0x38b2:	mov	dword ptr [rsp + 0x34], 0
0x38ba:	call	0x3300


0x3781:	mov	rdi, qword ptr [r12 + 8]
0x3786:	lea	rbx, [rip + 0x203953]
0x378d:	cmp	rdi, rbx
0x3790:	je	0x37a9


0x3756:	sub	eax, 2
0x3759:	lea	rbx, [r12 + 0x18]
0x375e:	shl	rax, 4
0x3762:	lea	rbp, [r12 + rax + 0x28]
0x3767:	nop	word ptr [rax + rax]
0x3770:	mov	rdi, qword ptr [rbx]
0x3773:	add	rbx, 0x10
0x3777:	call	0x1320


0x1340:	jmp	qword ptr [rip + 0x205b2a]


0x35b7:	sub	rsp, 8
0x35bb:	call	0x1330


0x35a9:	test	rdx, rdx
0x35ac:	je	0x35b7


0x13e0:	jmp	qword ptr [rip + 0x205ada]


0x1fad:	mov	rcx, qword ptr [rip + 0x2050ec]
0x1fb4:	lea	rdi, [rip + 0x2f8d]
0x1fbb:	mov	edx, 0x37
0x1fc0:	mov	esi, 1
0x1fc5:	call	0x15b0


0x1f36:	mov	esi, 0x2f
0x1f3b:	mov	rbx, rdi
0x1f3e:	call	0x1440


0x1b2d:	lea	rsi, [rip + 0x2fd5]
0x1b34:	xor	edi, edi
0x1b36:	call	0x13d0


0x1aff:	lea	rsi, [rip + 0x3152]
0x1b06:	xor	edi, edi
0x1b08:	call	0x13d0


0x1a89:	cmp	qword ptr [rip + 0x20555f], 0
0x1a91:	push	rbp
0x1a92:	mov	rbp, rsp
0x1a95:	je	0x1aa3


0x1ab8:	ret	


0x1a70:	pop	rbp
0x1a71:	ret	


0x1a58:	mov	rax, qword ptr [rip + 0x205589]
0x1a5f:	test	rax, rax
0x1a62:	je	0x1a70


0x1a20:	pop	rbp
0x1a21:	ret	


0x1a07:	mov	rax, qword ptr [rip + 0x2055c2]
0x1a0e:	test	rax, rax
0x1a11:	je	0x1a20




0x1302:	add	rsp, 8
0x1306:	ret	


0x1300:	call	rax




0x4a1a:	cmp	qword ptr [rdi + 0x48], 0
0x4a1f:	jne	0x4a0a


0x1580:	jmp	qword ptr [rip + 0x205a0a]


0x14f0:	jmp	qword ptr [rip + 0x205a52]


0x1510:	jmp	qword ptr [rip + 0x205a42]












0x1390:	jmp	qword ptr [rip + 0x205b02]


0x4569:	mov	rax, qword ptr [rsp + 0x10]
0x456e:	cmp	dword ptr [rip + 0x202ca3], 0
0x4575:	mov	dword ptr [rsp], 0x18
0x457c:	mov	r12d, dword ptr [rax + 0x10]
0x4580:	mov	edx, r12d
0x4583:	js	0x46b3


0x45b0:	cmp	esi, 0xb
0x45b3:	je	0x45e0






0x446a:	call	0x14a0


0x4421:	sub	rsp, 8
0x4425:	call	0x44d0


0x4402:	mov	qword ptr [rsi], rax
0x4405:	mov	rsi, rax
0x4408:	jmp	0x42e0


0x43f7:	mov	rdx, rax
0x43fa:	shr	rdx, 1
0x43fd:	lea	rax, [rdx + rax + 1]
0x4402:	mov	qword ptr [rsi], rax
0x4405:	mov	rsi, rax
0x4408:	jmp	0x42e0


0x43b8:	xor	edx, edx
0x43ba:	mov	eax, 0x80
0x43bf:	xor	r8d, r8d
0x43c2:	div	r9
0x43c5:	test	rax, rax
0x43c8:	sete	r8b
0x43cc:	lea	rcx, [r8 + rax]
0x43d0:	jmp	0x4395


0x4395:	mov	rax, rcx
0x4398:	mul	r9
0x439b:	seto	dl
0x439e:	test	rax, rax
0x43a1:	movzx	edx, dl
0x43a4:	js	0x43ab


0x43ab:	sub	rsp, 8
0x43af:	call	0x44d0


0x436f:	mov	rax, rcx
0x4372:	shr	rax, 1
0x4375:	lea	rcx, [rax + rcx + 1]
0x437a:	mov	qword ptr [rsi], rcx
0x437d:	imul	rcx, r9
0x4381:	mov	rsi, rcx
0x4384:	jmp	0x42e0


0x4339:	jmp	0x42e0


0x4308:	call	0x1320


0x1520:	jmp	qword ptr [rip + 0x205a3a]


0x42b9:	jmp	0x4280




0x41bc:	test	r11b, r11b
0x41bf:	jne	0x41e5


0x41b2:	add	r9, 1
0x41b6:	cmp	r9, 0xa
0x41ba:	jne	0x4190


0x41a6:	mov	rax, qword ptr [rax]
0x41a9:	test	rax, rax
0x41ac:	mov	qword ptr [r8 + r9*8], rax
0x41b0:	je	0x41bc


0x40eb:	call	0x3c60


0x40e1:	add	r9, 1
0x40e5:	cmp	r9, 0xa
0x40e9:	jne	0x40c0


0x40d5:	mov	rax, qword ptr [r11]
0x40d8:	test	rax, rax
0x40db:	mov	qword ptr [r8 + r9*8], rax
0x40df:	je	0x40eb


0x4090:	add	r9, 1
0x4094:	cmp	qword ptr [r8 + r9*8], 0
0x4099:	jne	0x4090


0x15c0:	jmp	qword ptr [rip + 0x2059ea]


0x1330:	jmp	qword ptr [rip + 0x205b32]


0x3b5a:	mov	qword ptr [rsp + 0x28], rsi
0x3b5f:	mov	qword ptr [rsp + 0x30], rdx
0x3b64:	mov	rcx, rsp
0x3b67:	mov	rdx, r8
0x3b6a:	mov	rsi, r9
0x3b6d:	call	0x3300


0x37a9:	lea	rbx, [rip + 0x2038c0]
0x37b0:	cmp	r12, rbx
0x37b3:	je	0x37c4


0x3792:	call	0x1320


0x1320:	jmp	qword ptr [rip + 0x205b3a]




0x35ae:	mov	qword ptr [rdi + 0x28], rsi
0x35b2:	mov	qword ptr [rdi + 0x30], rdx
0x35b6:	ret	




0x15b0:	jmp	qword ptr [rip + 0x2059f2]


0x1440:	jmp	qword ptr [rip + 0x205aaa]


0x1aa3:	call	0x19f0


0x1a97:	mov	rdi, qword ptr [rip + 0x20556a]
0x1a9e:	call	0x1600


0x1a64:	pop	rbp
0x1a65:	jmp	rax


0x1a13:	pop	rbp
0x1a14:	jmp	rax


0x4a21:	push	r12
0x4a23:	push	rbp
0x4a24:	mov	r12d, edx
0x4a27:	push	rbx
0x4a28:	mov	rbp, rsi
0x4a2b:	mov	rbx, rdi
0x4a2e:	call	0x14c0










0x46b3:	xor	esi, esi
0x46b5:	xor	eax, eax
0x46b7:	call	0x1390


0x4589:	xor	eax, eax
0x458b:	mov	esi, 0x406
0x4590:	call	0x1390


0x45e0:	mov	edi, ebp
0x45e2:	xor	eax, eax
0x45e4:	call	0x1390


0x45b5:	jg	0x4610


0x14a0:	jmp	qword ptr [rip + 0x205a7a]


0x43a6:	test	rdx, rdx
0x43a9:	je	0x437a




0x41c1:	call	0x3c60


0x41e5:	mov	dword ptr [rsp + 8], r10d
0x41ea:	jmp	0x41c1


0x4190:	cmp	r10d, 0x2f
0x4194:	ja	0x41ec


0x40c0:	mov	eax, dword ptr [r10]
0x40c3:	cmp	eax, 0x2f
0x40c6:	ja	0x410a






0x37c4:	pop	rbx
0x37c5:	mov	dword ptr [rip + 0x203889], 1
0x37cf:	pop	rbp
0x37d0:	pop	r12
0x37d2:	ret	


0x37b5:	mov	rdi, r12
0x37b8:	call	0x1320








0x1600:	jmp	qword ptr [rip + 0x2059ea]


0x45b7:	cmp	esi, 4
0x45ba:	je	0x4690


0x4610:	cmp	esi, 0x407
0x4616:	jg	0x4660




0x437a:	mov	qword ptr [rsi], rcx
0x437d:	imul	rcx, r9
0x4381:	mov	rsi, rcx
0x4384:	jmp	0x42e0


0x4690:	mov	eax, dword ptr [rsp]
0x4693:	cmp	eax, 0x2f
0x4696:	ja	0x4784


0x45c0:	jg	0x4680


0x4618:	cmp	esi, 0x406
0x461e:	jge	0x4690


0x4660:	cmp	esi, 0x409
0x4666:	je	0x4690


0x469c:	add	rax, qword ptr [rsp + 0x10]
0x46a1:	mov	edx, dword ptr [rax]
0x46a3:	mov	edi, ebp
0x46a5:	xor	eax, eax
0x46a7:	call	0x1390


0x4784:	mov	rax, qword ptr [rsp + 8]
0x4789:	jmp	0x46a1


0x45c6:	cmp	esi, 2
0x45c9:	je	0x4690


0x4680:	cmp	esi, 9
0x4683:	je	0x45e0


0x4620:	cmp	esi, 0x401
0x4626:	je	0x45e0


0x4668:	jl	0x45e0


0x46a1:	mov	edx, dword ptr [rax]
0x46a3:	mov	edi, ebp
0x46a5:	xor	eax, eax
0x46a7:	call	0x1390


0x45cf:	jg	0x45e0


0x4689:	jg	0x4690


0x4628:	cmp	esi, 0x402
0x462e:	je	0x4690


0x466e:	cmp	esi, 0x40a
0x4674:	jne	0x4638


0x45d1:	cmp	esi, 1
0x45d4:	jne	0x4638


0x468b:	cmp	esi, 8
0x468e:	jne	0x4638


0x4630:	cmp	esi, 0x400
0x4636:	je	0x4690


0x4676:	jmp	0x45e0


0x4638:	mov	eax, dword ptr [rsp]
0x463b:	cmp	eax, 0x2f
0x463e:	ja	0x477a


0x4644:	add	rax, qword ptr [rsp + 0x10]
0x4649:	mov	rdx, qword ptr [rax]
0x464c:	mov	edi, ebp
0x464e:	xor	eax, eax
0x4650:	call	0x1390


0x477a:	mov	rax, qword ptr [rsp + 8]
0x477f:	jmp	0x4649


0x4649:	mov	rdx, qword ptr [rax]
0x464c:	mov	edi, ebp
0x464e:	xor	eax, eax
0x4650:	call	0x1390


0x1aa8:	mov	byte ptr [rip + 0x2055f9], 1
0x1aaf:	pop	rbp
0x1ab0:	ret	


0x4a91:	test	rbp, rbp
0x4a94:	je	0x4ab6


0x4ab6:	add	rsp, 8
0x4aba:	pop	rbx
0x4abb:	pop	rbp
0x4abc:	pop	r12
0x4abe:	pop	r13
0x4ac0:	pop	r14
0x4ac2:	pop	r15
0x4ac4:	ret	


0x4a96:	xor	ebx, ebx
0x4a98:	nop	dword ptr [rax + rax]
0x4aa0:	mov	rdx, r15
0x4aa3:	mov	rsi, r14
0x4aa6:	mov	edi, r13d
0x4aa9:	call	qword ptr [r12 + rbx*8]


0x446f:	test	rax, rax
0x4472:	je	0x4479


0x4474:	add	rsp, 8
0x4478:	ret	


0x1f43:	test	rax, rax
0x1f46:	je	0x1f9d


0x1f9d:	mov	qword ptr [rip + 0x20511c], rbx
0x1fa4:	mov	qword ptr [rip + 0x2050ed], rbx
0x1fab:	pop	rbx
0x1fac:	ret	


0x1f48:	lea	r8, [rax + 1]
0x1f4c:	mov	rdx, r8
0x1f4f:	sub	rdx, rbx
0x1f52:	cmp	rdx, 6
0x1f56:	jle	0x1f9d


0x1f58:	lea	rsi, [rax - 6]
0x1f5c:	lea	rdi, [rip + 0x301d]
0x1f63:	mov	ecx, 7
0x1f68:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1f68:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1f6a:	seta	dl
0x1f6d:	sbb	dl, 0
0x1f70:	test	dl, dl
0x1f72:	jne	0x1f9d


0x1f74:	lea	rdi, [rip + 0x300d]
0x1f7b:	mov	ecx, 3
0x1f80:	mov	rsi, r8
0x1f83:	mov	rbx, r8
0x1f86:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1f86:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1f88:	seta	dl
0x1f8b:	sbb	dl, 0
0x1f8e:	test	dl, dl
0x1f90:	jne	0x1f9d


0x1f92:	lea	rbx, [rax + 4]
0x1f96:	mov	qword ptr [rip + 0x2050e3], rbx
0x1f9d:	mov	qword ptr [rip + 0x20511c], rbx
0x1fa4:	mov	qword ptr [rip + 0x2050ed], rbx
0x1fab:	pop	rbx
0x1fac:	ret	


0x1fca:	call	0x1330


0x37bd:	mov	qword ptr [rip + 0x20389c], rbx
0x37c4:	pop	rbx
0x37c5:	mov	dword ptr [rip + 0x203889], 1
0x37cf:	pop	rbp
0x37d0:	pop	r12
0x37d2:	ret	


0x3797:	mov	qword ptr [rip + 0x2038ce], 0x100
0x37a2:	mov	qword ptr [rip + 0x2038cf], rbx
0x37a9:	lea	rbx, [rip + 0x2038c0]
0x37b0:	cmp	r12, rbx
0x37b3:	je	0x37c4


0x430d:	xor	eax, eax
0x430f:	pop	rbx
0x4310:	ret	


0x377c:	cmp	rbx, rbp
0x377f:	jne	0x3770


0x3770:	mov	rdi, qword ptr [rbx]
0x3773:	add	rbx, 0x10
0x3777:	call	0x1320


0x3c9c:	lea	rsi, [rip + 0x17d8]
0x3ca3:	xor	edi, edi
0x3ca5:	mov	edx, 5
0x3caa:	call	0x13d0


0x3db1:	jmp	0x3c9c


0x42f6:	test	rax, rax
0x42f9:	jne	0x4300


0x42fb:	test	rbx, rbx
0x42fe:	jne	0x4311


0x4300:	pop	rbx
0x4301:	ret	


0x4311:	call	0x44d0


0x4655:	mov	ebx, eax
0x4657:	jmp	0x45f0


0x45f0:	mov	rcx, qword ptr [rsp + 0x18]
0x45f5:	xor	rcx, qword ptr fs:[0x28]
0x45fe:	mov	eax, ebx
0x4600:	jne	0x475d


0x4606:	add	rsp, 0x50
0x460a:	pop	rbx
0x460b:	pop	rbp
0x460c:	pop	r12
0x460e:	ret	


0x475d:	call	0x1410


0x1410:	jmp	qword ptr [rip + 0x205ac2]




0x45e9:	mov	ebx, eax
0x45eb:	nop	dword ptr [rax + rax]
0x45f0:	mov	rcx, qword ptr [rsp + 0x18]
0x45f5:	xor	rcx, qword ptr fs:[0x28]
0x45fe:	mov	eax, ebx
0x4600:	jne	0x475d


0x46ac:	mov	ebx, eax
0x46ae:	jmp	0x45f0


0x4595:	test	eax, eax
0x4597:	mov	ebx, eax
0x4599:	js	0x4728


0x4728:	call	0x1340


0x459f:	mov	dword ptr [rip + 0x202c6f], 1
0x45a9:	jmp	0x45f0


0x46bc:	test	eax, eax
0x46be:	mov	ebx, eax
0x46c0:	js	0x45f0


0x46c6:	cmp	dword ptr [rip + 0x202b4b], -1
0x46cd:	jne	0x45f0


0x46d3:	xor	eax, eax
0x46d5:	mov	esi, 1
0x46da:	mov	edi, ebx
0x46dc:	call	0x1390


0x46e1:	test	eax, eax
0x46e3:	js	0x4701


0x4701:	call	0x1340


0x46e5:	or	eax, 1
0x46e8:	mov	esi, 2
0x46ed:	mov	edi, ebx
0x46ef:	mov	edx, eax
0x46f1:	xor	eax, eax
0x46f3:	call	0x1390


0x46f8:	cmp	eax, -1
0x46fb:	jne	0x45f0


0x4773:	mov	ebx, eax
0x4775:	jmp	0x45f0


0x49ce:	test	eax, eax
0x49d0:	je	0x49da


0x49d2:	test	dword ptr [rbx], 0x100
0x49d8:	jne	0x49e8


0x49e8:	mov	rdi, rbx
0x49eb:	mov	edx, 1
0x49f0:	xor	esi, esi
0x49f2:	call	0x4a00


0x1631:	lea	rsi, [rip + 0x34ee]
0x1638:	mov	edi, 6
0x163d:	call	0x1530


0x2131:	cmp	r15d, 0xa
0x2135:	mov	qword ptr [rsp + 0x58], rax
0x213a:	ja	0x32ef


0x2140:	lea	rcx, [rip + 0x2eb9]
0x2147:	mov	edx, r15d
0x214a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x214e:	add	rax, rcx
0x2151:	jmp	rax


0x32ef:	call	0x1330


0x4706:	mov	r12d, dword ptr [rax]
0x4709:	mov	rbp, rax
0x470c:	mov	edi, ebx
0x470e:	call	0x1470


0x1470:	jmp	qword ptr [rip + 0x205a92]




0x472d:	cmp	dword ptr [rax], 0x16
0x4730:	jne	0x459f


0x4736:	xor	esi, esi
0x4738:	xor	eax, eax
0x473a:	mov	edx, r12d
0x473d:	mov	edi, ebp
0x473f:	call	0x1390


0x4744:	test	eax, eax
0x4746:	mov	ebx, eax
0x4748:	js	0x45f0


0x474e:	mov	dword ptr [rip + 0x202ac0], 0xffffffff
0x4758:	jmp	0x46d3


0x3321:	mov	r13, rax
0x3324:	mov	eax, dword ptr [rax]
0x3326:	test	r15d, r15d
0x3329:	mov	rbx, qword ptr [rip + 0x203d30]
0x3330:	mov	dword ptr [rsp + 0x18], eax
0x3334:	js	0x34a1


0x34a1:	call	0x1330


0x333a:	cmp	dword ptr [rip + 0x203d17], r15d
0x3341:	jg	0x33a5


0x3343:	cmp	r15d, 0x7fffffff
0x334a:	je	0x34a6


0x33a5:	mov	eax, dword ptr [rbp + 4]
0x33a8:	shl	r15, 4
0x33ac:	sub	rsp, 8
0x33b0:	add	rbx, r15
0x33b3:	lea	r15, [rbp + 8]
0x33b7:	mov	r8d, dword ptr [rbp]
0x33bb:	mov	r11, qword ptr [rbx]
0x33be:	mov	r12, qword ptr [rbx + 8]
0x33c2:	mov	rcx, r14
0x33c5:	or	eax, 1
0x33c8:	mov	dword ptr [rsp + 0x24], eax
0x33cc:	push	qword ptr [rbp + 0x30]
0x33cf:	mov	r9d, eax
0x33d2:	push	qword ptr [rbp + 0x28]
0x33d5:	push	r15
0x33d7:	mov	rsi, r11
0x33da:	mov	rdx, qword ptr [rsp + 0x28]
0x33df:	mov	rdi, r12
0x33e2:	mov	qword ptr [rsp + 0x30], r11
0x33e7:	call	0x20c0


0x34a6:	call	0x44d0


0x3350:	lea	r12d, [r15 + 1]
0x3354:	lea	rax, [rip + 0x203d15]
0x335b:	movsxd	rsi, r12d
0x335e:	shl	rsi, 4
0x3362:	cmp	rbx, rax
0x3365:	je	0x3480


0x3480:	xor	edi, edi
0x3482:	call	0x42e0


0x336b:	mov	rdi, rbx
0x336e:	call	0x42e0


0x3373:	mov	rbx, rax
0x3376:	mov	qword ptr [rip + 0x203ce3], rax
0x337d:	movsxd	rdi, dword ptr [rip + 0x203cd4]
0x3384:	mov	edx, r12d
0x3387:	xor	esi, esi
0x3389:	sub	edx, edi
0x338b:	shl	rdi, 4
0x338f:	movsxd	rdx, edx
0x3392:	add	rdi, rbx
0x3395:	shl	rdx, 4
0x3399:	call	0x1460


0x1460:	jmp	qword ptr [rip + 0x205a9a]




0x3487:	movdqa	xmm0, xmmword ptr [rip + 0x203be1]
0x348f:	mov	rbx, rax
0x3492:	mov	qword ptr [rip + 0x203bc7], rax
0x3499:	movups	xmmword ptr [rax], xmm0
0x349c:	jmp	0x337d


0x337d:	movsxd	rdi, dword ptr [rip + 0x203cd4]
0x3384:	mov	edx, r12d
0x3387:	xor	esi, esi
0x3389:	sub	edx, edi
0x338b:	shl	rdi, 4
0x338f:	movsxd	rdx, edx
0x3392:	add	rdi, rbx
0x3395:	shl	rdx, 4
0x3399:	call	0x1460


0x34bc:	mov	r12d, dword ptr [rax]
0x34bf:	mov	rbp, rax
0x34c2:	lea	rax, [rip + 0x203d17]
0x34c9:	test	rbx, rbx
0x34cc:	mov	esi, 0x38
0x34d1:	cmove	rbx, rax
0x34d5:	mov	rdi, rbx
0x34d8:	call	0x4480


0x35f2:	mov	r12d, dword ptr [rax]
0x35f5:	mov	rbp, rax
0x35f8:	lea	rax, [rbx + 8]
0x35fc:	sub	rsp, 8
0x3600:	mov	r9d, dword ptr [rbx + 4]
0x3604:	push	qword ptr [rbx + 0x30]
0x3607:	mov	r8d, dword ptr [rbx]
0x360a:	push	qword ptr [rbx + 0x28]
0x360d:	mov	rdx, r15
0x3610:	push	rax
0x3611:	mov	rcx, qword ptr [rsp + 0x28]
0x3616:	mov	rsi, r14
0x3619:	mov	rdi, r13
0x361c:	call	0x20c0


0x366f:	test	r12, r12
0x3672:	mov	r13, rax
0x3675:	mov	eax, dword ptr [rax]
0x3677:	sete	bpl
0x367b:	or	ebp, dword ptr [rbx + 4]
0x367e:	lea	r10, [rbx + 8]
0x3682:	sub	rsp, 8
0x3686:	mov	r8d, dword ptr [rbx]
0x3689:	mov	rcx, r15
0x368c:	mov	dword ptr [rsp + 0x14], eax
0x3690:	push	qword ptr [rbx + 0x30]
0x3693:	mov	rdx, r14
0x3696:	push	qword ptr [rbx + 0x28]
0x3699:	push	r10
0x369b:	xor	esi, esi
0x369d:	mov	r9d, ebp
0x36a0:	xor	edi, edi
0x36a2:	mov	qword ptr [rsp + 0x40], r10
0x36a7:	call	0x20c0


0x4289:	test	rax, rax
0x428c:	jne	0x4293


0x428e:	test	rbx, rbx
0x4291:	jne	0x4295


0x4293:	pop	rbx
0x4294:	ret	


0x4295:	call	0x44d0


0x4439:	mov	rdx, rbx
0x443c:	xor	esi, esi
0x443e:	mov	rdi, rax
0x4441:	pop	rbx
0x4442:	jmp	0x1460


0x4494:	add	rsp, 8
0x4498:	mov	rdx, rbx
0x449b:	mov	rsi, rbp
0x449e:	pop	rbx
0x449f:	pop	rbp
0x44a0:	mov	rdi, rax
0x44a3:	jmp	0x14b0


0x14b0:	jmp	qword ptr [rip + 0x205a72]




0x44b9:	mov	rdi, rbx
0x44bc:	lea	rsi, [rax + 1]
0x44c0:	pop	rbx
0x44c1:	jmp	0x4480


0x3caf:	lea	rdx, [rip + 0x1aea]
0x3cb6:	mov	rcx, rax
0x3cb9:	mov	r8d, 0x7e3
0x3cbf:	mov	esi, 1
0x3cc4:	mov	rdi, rbp
0x3cc7:	xor	eax, eax
0x3cc9:	call	0x15c0


0x3cce:	lea	rsi, [rip + 0x1833]
0x3cd5:	xor	edi, edi
0x3cd7:	mov	edx, 5
0x3cdc:	call	0x13d0


0x3ce1:	mov	rsi, rbp
0x3ce4:	mov	rdi, rax
0x3ce7:	call	0x1490


0x1490:	jmp	qword ptr [rip + 0x205a82]




0x1b0d:	mov	rdi, qword ptr [rip + 0x20558c]
0x1b14:	mov	rdx, rax
0x1b17:	mov	rcx, rbx
0x1b1a:	mov	esi, 1
0x1b1f:	xor	eax, eax
0x1b21:	call	0x15c0


0x1b26:	mov	edi, ebp
0x1b28:	call	0x15a0


0x15a0:	jmp	qword ptr [rip + 0x2059fa]




0x1b3b:	mov	rdx, rbx
0x1b3e:	mov	rsi, rax
0x1b41:	mov	edi, 1
0x1b46:	xor	eax, eax
0x1b48:	call	0x1540


0x1540:	jmp	qword ptr [rip + 0x205a2a]




0x4214:	lea	rdx, [rip + 0x12bc]
0x421b:	mov	rsi, rax
0x421e:	mov	edi, 1
0x4223:	xor	eax, eax
0x4225:	call	0x1540


0x44e7:	mov	edi, dword ptr [rip + 0x202b2b]
0x44ed:	lea	rdx, [rip + 0xa4d]
0x44f4:	mov	rcx, rax
0x44f7:	xor	esi, esi
0x44f9:	xor	eax, eax
0x44fb:	call	0x1550


0x1550:	jmp	qword ptr [rip + 0x205a22]




0x47c7:	cmp	rax, -3
0x47cb:	mov	rbp, rax
0x47ce:	jbe	0x47f0


0x47f0:	mov	rdx, qword ptr [rsp + 8]
0x47f5:	xor	rdx, qword ptr fs:[0x28]
0x47fe:	mov	rax, rbp
0x4801:	jne	0x480e


0x47d0:	test	r12, r12
0x47d3:	je	0x47f0


0x4803:	add	rsp, 0x18
0x4807:	pop	rbx
0x4808:	pop	rbp
0x4809:	pop	r12
0x480b:	pop	r13
0x480d:	ret	


0x480e:	call	0x1410


0x47d5:	xor	edi, edi
0x47d7:	call	0x48a0


0x482c:	mov	ebx, dword ptr [rbp]
0x482f:	mov	rdi, rbp
0x4832:	mov	r12, rax
0x4835:	call	0x4940


0x1642:	lea	rsi, [rip + 0x3581]
0x1649:	lea	rdi, [rip + 0x3551]
0x1650:	call	0x13c0


0x13c0:	jmp	qword ptr [rip + 0x205aea]




0x48ab:	mov	rdx, rax
0x48ae:	mov	eax, 1
0x48b3:	test	rdx, rdx
0x48b6:	je	0x48d5


0x48d5:	add	rsp, 8
0x48d9:	ret	


0x48b8:	lea	rdi, [rip + 0xf21]
0x48bf:	mov	ecx, 2
0x48c4:	mov	rsi, rdx
0x48c7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x48c7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x48c9:	seta	cl
0x48cc:	sbb	cl, 0
0x48cf:	xor	eax, eax
0x48d1:	test	cl, cl
0x48d3:	jne	0x48e0


0x48e0:	lea	rdi, [rip + 0xefb]
0x48e7:	mov	ecx, 6
0x48ec:	mov	rsi, rdx
0x48ef:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x48ef:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x48f1:	seta	al
0x48f4:	sbb	al, 0
0x48f6:	test	al, al
0x48f8:	setne	al
0x48fb:	add	rsp, 8
0x48ff:	ret	


0x47dc:	test	al, al
0x47de:	jne	0x47f0


0x47e0:	movzx	eax, byte ptr [r13]
0x47e5:	mov	ebp, 1
0x47ea:	mov	dword ptr [rbx], eax
0x47ec:	nop	dword ptr [rax]
0x47f0:	mov	rdx, qword ptr [rsp + 8]
0x47f5:	xor	rdx, qword ptr fs:[0x28]
0x47fe:	mov	rax, rbp
0x4801:	jne	0x480e


0x490e:	test	rax, rax
0x4911:	je	0x4930


0x4930:	lea	rax, [rip + 0xeb1]
0x4937:	add	rsp, 8
0x493b:	ret	


0x4913:	cmp	byte ptr [rax], 0
0x4916:	lea	rdx, [rip + 0xecb]
0x491d:	cmove	rax, rdx
0x4921:	add	rsp, 8
0x4925:	ret	


0x1fe0:	movzx	edx, byte ptr [rax]
0x1fe3:	and	edx, 0xffffffdf
0x1fe6:	cmp	dl, 0x55
0x1fe9:	je	0x2060


0x2060:	movzx	edx, byte ptr [rax + 1]
0x2064:	and	edx, 0xffffffdf
0x2067:	cmp	dl, 0x54
0x206a:	jne	0x1ff0


0x1feb:	cmp	dl, 0x47
0x1fee:	je	0x2010


0x206c:	movzx	edx, byte ptr [rax + 2]
0x2070:	and	edx, 0xffffffdf
0x2073:	cmp	dl, 0x46
0x2076:	jne	0x1ff0


0x1ff0:	lea	rax, [rip + 0x2fa4]
0x1ff7:	lea	rdx, [rip + 0x2f9f]
0x1ffe:	cmp	ebx, 9
0x2001:	cmovne	rax, rdx
0x2005:	add	rsp, 8
0x2009:	pop	rbx
0x200a:	pop	rbp
0x200b:	ret	


0x2010:	movzx	edx, byte ptr [rax + 1]
0x2014:	and	edx, 0xffffffdf
0x2017:	cmp	dl, 0x42
0x201a:	jne	0x1ff0


0x207c:	cmp	byte ptr [rax + 3], 0x2d
0x2080:	jne	0x1ff0


0x201c:	cmp	byte ptr [rax + 2], 0x31
0x2020:	jne	0x1ff0


0x2086:	cmp	byte ptr [rax + 4], 0x38
0x208a:	jne	0x1ff0


0x2022:	cmp	byte ptr [rax + 3], 0x38
0x2026:	jne	0x1ff0


0x2090:	cmp	byte ptr [rax + 5], 0
0x2094:	jne	0x1ff0


0x2028:	cmp	byte ptr [rax + 4], 0x30
0x202c:	jne	0x1ff0


0x209a:	cmp	byte ptr [rbp], 0x60
0x209e:	lea	rax, [rip + 0x2ee7]
0x20a5:	lea	rdx, [rip + 0x2ee4]
0x20ac:	cmovne	rax, rdx
0x20b0:	add	rsp, 8
0x20b4:	pop	rbx
0x20b5:	pop	rbp
0x20b6:	ret	


0x202e:	cmp	byte ptr [rax + 5], 0x33
0x2032:	jne	0x1ff0


0x2034:	cmp	byte ptr [rax + 6], 0x30
0x2038:	jne	0x1ff0


0x203a:	cmp	byte ptr [rax + 7], 0
0x203e:	jne	0x1ff0


0x2040:	cmp	byte ptr [rbp], 0x60
0x2044:	lea	rax, [rip + 0x2f49]
0x204b:	lea	rdx, [rip + 0x2f46]
0x2052:	cmovne	rax, rdx
0x2056:	add	rsp, 8
0x205a:	pop	rbx
0x205b:	pop	rbp
0x205c:	ret	


0x4a33:	mov	edx, r12d
0x4a36:	mov	rsi, rbp
0x4a39:	mov	edi, eax
0x4a3b:	call	0x1450


0x1450:	jmp	qword ptr [rip + 0x205aa2]




0x494c:	test	eax, eax
0x494e:	mov	rdi, rbx
0x4951:	js	0x49a7


0x49a7:	pop	rbx
0x49a8:	pop	rbp
0x49a9:	pop	r12
0x49ab:	jmp	0x13b0


0x4953:	call	0x1510


0x13b0:	jmp	qword ptr [rip + 0x205af2]




0x4958:	test	eax, eax
0x495a:	jne	0x4988


0x495c:	mov	rdi, rbx
0x495f:	call	0x49c0


0x4988:	mov	rdi, rbx
0x498b:	call	0x14c0


0x4990:	xor	esi, esi
0x4992:	mov	edx, 1
0x4997:	mov	edi, eax
0x4999:	call	0x1450


0x499e:	cmp	rax, -1
0x49a2:	jne	0x495c


0x49a4:	mov	rdi, rbx
0x49a7:	pop	rbx
0x49a8:	pop	rbp
0x49a9:	pop	r12
0x49ab:	jmp	0x13b0


0x4a40:	cmp	rax, -1
0x4a44:	je	0x4a52


0x4a52:	pop	rbx
0x4a53:	pop	rbp
0x4a54:	pop	r12
0x4a56:	ret	


0x4a46:	and	dword ptr [rbx], 0xffffffef
0x4a49:	mov	qword ptr [rbx + 0x90], rax
0x4a50:	xor	eax, eax
0x4a52:	pop	rbx
0x4a53:	pop	rbp
0x4a54:	pop	r12
0x4a56:	ret	


0x1655:	lea	rdi, [rip + 0x3545]
0x165c:	call	0x13a0


0x13a0:	jmp	qword ptr [rip + 0x205afa]




0x4500:	call	0x1330


0x422a:	lea	rsi, [rip + 0x12bc]
0x4231:	mov	edx, 5
0x4236:	xor	edi, edi
0x4238:	call	0x13d0


0x423d:	lea	rcx, [rip + 0xbc4]
0x4244:	lea	rdx, [rip + 0x952]
0x424b:	mov	rsi, rax
0x424e:	mov	edi, 1
0x4253:	xor	eax, eax
0x4255:	call	0x1540


0x425a:	mov	rbx, qword ptr [rip + 0x202e27]
0x4261:	lea	rsi, [rip + 0x14b8]
0x4268:	xor	edi, edi
0x426a:	mov	edx, 5
0x426f:	call	0x13d0


0x4274:	mov	rsi, rbx
0x4277:	mov	rdi, rax
0x427a:	pop	rbx
0x427b:	jmp	0x1490


0x1b4d:	mov	rbx, qword ptr [rip + 0x205534]
0x1b54:	lea	rsi, [rip + 0x3125]
0x1b5b:	mov	edx, 5
0x1b60:	xor	edi, edi
0x1b62:	call	0x13d0


0x1b67:	mov	rsi, rbx
0x1b6a:	mov	rdi, rax
0x1b6d:	call	0x1490


0x1b72:	mov	rbx, qword ptr [rip + 0x20550f]
0x1b79:	lea	rsi, [rip + 0x3190]
0x1b80:	mov	edx, 5
0x1b85:	xor	edi, edi
0x1b87:	call	0x13d0


0x1b8c:	mov	rsi, rbx
0x1b8f:	mov	rdi, rax
0x1b92:	call	0x1490


0x1b97:	mov	rbx, qword ptr [rip + 0x2054ea]
0x1b9e:	lea	rsi, [rip + 0x31b3]
0x1ba5:	mov	edx, 5
0x1baa:	xor	edi, edi
0x1bac:	call	0x13d0


0x1bb1:	mov	rsi, rbx
0x1bb4:	mov	rdi, rax
0x1bb7:	call	0x1490


0x1bbc:	mov	rbx, qword ptr [rip + 0x2054c5]
0x1bc3:	lea	rsi, [rip + 0x31d6]
0x1bca:	mov	edx, 5
0x1bcf:	xor	edi, edi
0x1bd1:	call	0x13d0


0x1bd6:	mov	rsi, rbx
0x1bd9:	mov	rdi, rax
0x1bdc:	call	0x1490


0x1be1:	mov	rbx, qword ptr [rip + 0x2054a0]
0x1be8:	lea	rsi, [rip + 0x31e1]
0x1bef:	mov	edx, 5
0x1bf4:	xor	edi, edi
0x1bf6:	call	0x13d0


0x1bfb:	mov	rsi, rbx
0x1bfe:	mov	rdi, rax
0x1c01:	lea	rbx, [rip + 0x2efc]
0x1c08:	call	0x1490


0x1c0d:	lea	rax, [rip + 0x2f13]
0x1c14:	lea	rcx, [rip + 0x2f4d]
0x1c1b:	mov	qword ptr [rsp + 0x60], 0
0x1c24:	mov	qword ptr [rsp + 0x68], 0
0x1c2d:	mov	rdx, rsp
0x1c30:	mov	qword ptr [rsp], rax
0x1c34:	lea	rax, [rip + 0x2eee]
0x1c3b:	mov	qword ptr [rsp + 0x30], rcx
0x1c40:	lea	rcx, [rip + 0x2f2b]
0x1c47:	mov	qword ptr [rsp + 8], rax
0x1c4c:	lea	rax, [rip + 0x2f4e]
0x1c53:	mov	qword ptr [rsp + 0x40], rcx
0x1c58:	lea	rcx, [rip + 0x2f1d]
0x1c5f:	mov	qword ptr [rsp + 0x10], rax
0x1c64:	lea	rax, [rip + 0x2ece]
0x1c6b:	mov	qword ptr [rsp + 0x50], rcx
0x1c70:	mov	qword ptr [rsp + 0x18], rax
0x1c75:	lea	rax, [rip + 0x2ed3]
0x1c7c:	mov	qword ptr [rsp + 0x20], rax
0x1c81:	lea	rax, [rip + 0x2ed1]
0x1c88:	mov	qword ptr [rsp + 0x28], rax
0x1c8d:	mov	qword ptr [rsp + 0x38], rax
0x1c92:	mov	qword ptr [rsp + 0x48], rax
0x1c97:	mov	qword ptr [rsp + 0x58], rax
0x1c9c:	nop	dword ptr [rax]
0x1ca0:	add	rdx, 0x10
0x1ca4:	mov	rdi, qword ptr [rdx]
0x1ca7:	test	rdi, rdi
0x1caa:	je	0x1cbf


0x1cbf:	mov	r12, qword ptr [rdx + 8]
0x1cc3:	xor	edi, edi
0x1cc5:	mov	edx, 5
0x1cca:	lea	rsi, [rip + 0x2eb5]
0x1cd1:	test	r12, r12
0x1cd4:	je	0x1d9b


0x1cac:	mov	ecx, 5
0x1cb1:	mov	rsi, rbx
0x1cb4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1d9b:	call	0x13d0


0x1cda:	call	0x13d0


0x1cb4:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1cb6:	seta	al
0x1cb9:	sbb	al, 0
0x1cbb:	test	al, al
0x1cbd:	jne	0x1ca0


0x1ca0:	add	rdx, 0x10
0x1ca4:	mov	rdi, qword ptr [rdx]
0x1ca7:	test	rdi, rdi
0x1caa:	je	0x1cbf


0x1cdf:	lea	rcx, [rip + 0x3122]
0x1ce6:	lea	rdx, [rip + 0x2eb0]
0x1ced:	mov	rsi, rax
0x1cf0:	mov	edi, 1
0x1cf5:	xor	eax, eax
0x1cf7:	call	0x1540


0x1cfc:	xor	esi, esi
0x1cfe:	mov	edi, 5
0x1d03:	call	0x1530


0x1d08:	test	rax, rax
0x1d0b:	je	0x1d29


0x1d29:	lea	rsi, [rip + 0x2e7f]
0x1d30:	xor	edi, edi
0x1d32:	mov	edx, 5
0x1d37:	call	0x13d0


0x1d0d:	lea	rsi, [rip + 0x2e97]
0x1d14:	mov	edx, 3
0x1d19:	mov	rdi, rax
0x1d1c:	call	0x1360


0x1360:	jmp	qword ptr [rip + 0x205b1a]




0x1d3c:	lea	rcx, [rip + 0x2dc1]
0x1d43:	lea	rdx, [rip + 0x30be]
0x1d4a:	mov	rsi, rax
0x1d4d:	mov	edi, 1
0x1d52:	xor	eax, eax
0x1d54:	call	0x1540


0x1d59:	cmp	r12, rbx
0x1d5c:	lea	rcx, [rip + 0x2de0]
0x1d63:	lea	rbx, [rip + 0x2dbc]
0x1d6a:	cmove	rbx, rcx
0x1d6e:	lea	rsi, [rip + 0x3103]
0x1d75:	xor	edi, edi
0x1d77:	mov	edx, 5
0x1d7c:	call	0x13d0


0x1d81:	mov	rcx, rbx
0x1d84:	mov	rsi, rax
0x1d87:	mov	rdx, r12
0x1d8a:	mov	edi, 1
0x1d8f:	xor	eax, eax
0x1d91:	call	0x1540


0x1d96:	jmp	0x1b26


0x1da0:	lea	rcx, [rip + 0x3061]
0x1da7:	lea	rdx, [rip + 0x2def]
0x1dae:	mov	rsi, rax
0x1db1:	mov	edi, 1
0x1db6:	xor	eax, eax
0x1db8:	call	0x1540


0x1dbd:	xor	esi, esi
0x1dbf:	mov	edi, 5
0x1dc4:	call	0x1530


0x1dc9:	test	rax, rax
0x1dcc:	je	0x1de6


0x1de6:	lea	rsi, [rip + 0x2dc2]
0x1ded:	mov	edx, 5
0x1df2:	xor	edi, edi
0x1df4:	lea	r12, [rip + 0x2d09]
0x1dfb:	lea	rbx, [rip + 0x2d41]
0x1e02:	call	0x13d0


0x1dce:	lea	rsi, [rip + 0x2dd6]
0x1dd5:	mov	edx, 3
0x1dda:	mov	rdi, rax
0x1ddd:	call	0x1360


0x1e07:	lea	rcx, [rip + 0x2cf6]
0x1e0e:	lea	rdx, [rip + 0x2ff3]
0x1e15:	mov	rsi, rax
0x1e18:	mov	edi, 1
0x1e1d:	xor	eax, eax
0x1e1f:	call	0x1540


0x1e24:	jmp	0x1d6e


0x1d6e:	lea	rsi, [rip + 0x3103]
0x1d75:	xor	edi, edi
0x1d77:	mov	edx, 5
0x1d7c:	call	0x13d0


0x3cec:	cmp	r12, 9
0x3cf0:	ja	0x4030


0x3cf6:	lea	rdx, [rip + 0x1a6b]
0x3cfd:	movsxd	rax, dword ptr [rdx + r12*4]
0x3d01:	add	rax, rdx
0x3d04:	jmp	rax


0x4030:	mov	r10, qword ptr [rbx + 0x40]
0x4034:	mov	r9, qword ptr [rbx + 0x38]
0x4038:	mov	edx, 5
0x403d:	mov	rax, qword ptr [rbx + 0x10]
0x4041:	mov	r8, qword ptr [rbx + 8]
0x4045:	lea	rsi, [rip + 0x1694]
0x404c:	mov	r13, qword ptr [rbx + 0x30]
0x4050:	mov	r12, qword ptr [rbx + 0x28]
0x4054:	mov	r15, qword ptr [rbx + 0x20]
0x4058:	mov	r14, qword ptr [rbx + 0x18]
0x405c:	mov	qword ptr [rsp + 0x18], r10
0x4061:	mov	qword ptr [rsp + 0x10], r9
0x4066:	mov	qword ptr [rsp], rax
0x406a:	mov	qword ptr [rsp + 8], r8
0x406f:	mov	rbx, qword ptr [rbx]
0x4072:	jmp	0x3e02


0x3e02:	xor	edi, edi
0x3e04:	call	0x13d0


0x3e09:	mov	r10, qword ptr [rsp + 0x18]
0x3e0e:	push	r10
0x3e10:	jmp	0x3d54


0x3d54:	mov	r9, qword ptr [rsp + 0x18]
0x3d59:	mov	rdx, rax
0x3d5c:	mov	rcx, rbx
0x3d5f:	mov	esi, 1
0x3d64:	mov	rdi, rbp
0x3d67:	xor	eax, eax
0x3d69:	push	r9
0x3d6b:	push	r13
0x3d6d:	push	r12
0x3d6f:	push	r15
0x3d71:	push	r14
0x3d73:	mov	r9, qword ptr [rsp + 0x30]
0x3d78:	mov	r8, qword ptr [rsp + 0x38]
0x3d7d:	call	0x15c0


0x3d82:	add	rsp, 0x30
0x3d86:	add	rsp, 0x28
0x3d8a:	pop	rbx
0x3d8b:	pop	rbp
0x3d8c:	pop	r12
0x3d8e:	pop	r13
0x3d90:	pop	r14
0x3d92:	pop	r15
0x3d94:	ret	


0x34dd:	mov	dword ptr [rbp], r12d
0x34e1:	pop	rbx
0x34e2:	pop	rbp
0x34e3:	pop	r12
0x34e5:	ret	


0x339e:	mov	dword ptr [rip + 0x203cb3], r12d
0x33a5:	mov	eax, dword ptr [rbp + 4]
0x33a8:	shl	r15, 4
0x33ac:	sub	rsp, 8
0x33b0:	add	rbx, r15
0x33b3:	lea	r15, [rbp + 8]
0x33b7:	mov	r8d, dword ptr [rbp]
0x33bb:	mov	r11, qword ptr [rbx]
0x33be:	mov	r12, qword ptr [rbx + 8]
0x33c2:	mov	rcx, r14
0x33c5:	or	eax, 1
0x33c8:	mov	dword ptr [rsp + 0x24], eax
0x33cc:	push	qword ptr [rbp + 0x30]
0x33cf:	mov	r9d, eax
0x33d2:	push	qword ptr [rbp + 0x28]
0x33d5:	push	r15
0x33d7:	mov	rsi, r11
0x33da:	mov	rdx, qword ptr [rsp + 0x28]
0x33df:	mov	rdi, r12
0x33e2:	mov	qword ptr [rsp + 0x30], r11
0x33e7:	call	0x20c0


0x4713:	mov	ebx, 0xffffffff
0x4718:	mov	dword ptr [rbp], r12d
0x471c:	jmp	0x45f0


0x49f7:	mov	rdi, rbx
0x49fa:	pop	rbx
0x49fb:	jmp	0x14f0


0x41c6:	mov	rax, qword ptr [rsp + 0x78]
0x41cb:	xor	rax, qword ptr fs:[0x28]
0x41d4:	jne	0x41e0


0x41d6:	add	rsp, 0xb8
0x41dd:	pop	rbx
0x41de:	pop	rbp
0x41df:	ret	


0x41e0:	call	0x1410


0x40f0:	mov	rax, qword ptr [rsp + 0x58]
0x40f5:	xor	rax, qword ptr fs:[0x28]
0x40fe:	jne	0x4105


0x4100:	add	rsp, 0x68
0x4104:	ret	


0x4105:	call	0x1410


0x1de2:	test	eax, eax
0x1de4:	jne	0x1e29


0x1e29:	lea	r12, [rip + 0x2cd4]
0x1e30:	mov	r13, qword ptr [rip + 0x205251]
0x1e37:	lea	rsi, [rip + 0x2ff2]
0x1e3e:	xor	edi, edi
0x1e40:	mov	edx, 5
0x1e45:	call	0x13d0


0x1e4a:	mov	rsi, r13
0x1e4d:	mov	rdi, rax
0x1e50:	call	0x1490


0x1e55:	jmp	0x1d29


0x1d21:	test	eax, eax
0x1d23:	jne	0x1e30


0x1e30:	mov	r13, qword ptr [rip + 0x205251]
0x1e37:	lea	rsi, [rip + 0x2ff2]
0x1e3e:	xor	edi, edi
0x1e40:	mov	edx, 5
0x1e45:	call	0x13d0


0x1661:	lea	rdi, [rip + 0x818]
0x1668:	call	0x4ae0


0x166d:	lea	rcx, [rip + 0x2054ec]
0x1674:	lea	rdx, [rip + 0x3586]
0x167b:	xor	r8d, r8d
0x167e:	mov	rsi, rbx
0x1681:	mov	edi, ebp
0x1683:	call	0x1420


0x1420:	jmp	qword ptr [rip + 0x205aba]




0x4964:	test	eax, eax
0x4966:	je	0x49a4


0x4968:	call	0x1340


0x496d:	mov	r12d, dword ptr [rax]
0x4970:	mov	rdi, rbx
0x4973:	mov	rbp, rax
0x4976:	call	0x13b0


0x497b:	test	r12d, r12d
0x497e:	jne	0x49b0


0x4980:	pop	rbx
0x4981:	pop	rbp
0x4982:	pop	r12
0x4984:	ret	


0x49b0:	mov	dword ptr [rbp], r12d
0x49b4:	mov	eax, 0xffffffff
0x49b9:	jmp	0x4980


0x483a:	and	ebx, 0x20
0x483d:	test	ebx, ebx
0x483f:	jne	0x4858


0x4841:	test	eax, eax
0x4843:	je	0x484f


0x4858:	test	eax, eax
0x485a:	jne	0x4878


0x484f:	pop	rbx
0x4850:	pop	rbp
0x4851:	pop	r12
0x4853:	ret	


0x4845:	test	r12, r12
0x4848:	mov	eax, 0xffffffff
0x484d:	je	0x4888


0x485c:	call	0x1340


0x4878:	pop	rbx
0x4879:	mov	eax, 0xffffffff
0x487e:	pop	rbp
0x487f:	pop	r12
0x4881:	ret	


0x4888:	call	0x1340


0x488d:	cmp	dword ptr [rax], 9
0x4890:	pop	rbx
0x4891:	pop	rbp
0x4892:	pop	r12
0x4894:	setne	al
0x4897:	movzx	eax, al
0x489a:	neg	eax
0x489c:	ret	


0x4861:	mov	dword ptr [rax], 0
0x4867:	mov	eax, 0xffffffff
0x486c:	pop	rbx
0x486d:	pop	rbp
0x486e:	pop	r12
0x4870:	ret	


0x1e92:	test	eax, eax
0x1e94:	je	0x1eac


0x1eac:	mov	rdi, qword ptr [rip + 0x2051ed]
0x1eb3:	call	0x4820


0x1e96:	call	0x1340


0x1e9b:	cmp	byte ptr [rip + 0x20520e], 0
0x1ea2:	mov	rbx, rax
0x1ea5:	je	0x1ec3


0x1ec3:	lea	rsi, [rip + 0x3067]
0x1eca:	xor	edi, edi
0x1ecc:	mov	edx, 5
0x1ed1:	call	0x13d0


0x1ea7:	cmp	dword ptr [rax], 0x20
0x1eaa:	jne	0x1ec3


0x1ed6:	mov	rdi, qword ptr [rip + 0x2051db]
0x1edd:	mov	rbp, rax
0x1ee0:	test	rdi, rdi
0x1ee3:	je	0x1f0d


0x1f0d:	mov	esi, dword ptr [rbx]
0x1f0f:	lea	rdx, [rip + 0x302b]
0x1f16:	mov	rcx, rax
0x1f19:	xor	edi, edi
0x1f1b:	xor	eax, eax
0x1f1d:	call	0x1550


0x1ee5:	call	0x3a40


0x1f22:	jmp	0x1f02


0x1f02:	mov	edi, dword ptr [rip + 0x205110]
0x1f08:	call	0x1370


0x1370:	jmp	qword ptr [rip + 0x205b12]




0x1eb8:	test	eax, eax
0x1eba:	jne	0x1f02


0x1ebc:	add	rsp, 8
0x1ec0:	pop	rbx
0x1ec1:	pop	rbp
0x1ec2:	ret	


0x1688:	cmp	eax, -1
0x168b:	je	0x170b


0x170b:	test	r12b, r12b
0x170e:	movsxd	rax, dword ptr [rip + 0x20597b]
0x1715:	je	0x1720


0x168d:	cmp	eax, 0xffffff7e
0x1692:	je	0x1963


0x1720:	cmp	eax, ebp
0x1722:	setge	dl
0x1725:	test	dl, r12b
0x1728:	jne	0x1974


0x1717:	test	r13b, r13b
0x171a:	jne	0x1998


0x1963:	xor	edi, edi
0x1965:	call	0x1ad0


0x1698:	jle	0x16b0


0x172e:	cmp	eax, ebp
0x1730:	jge	0x189e


0x1974:	lea	rsi, [rip + 0x3565]
0x197b:	mov	edx, 5
0x1980:	xor	edi, edi
0x1982:	call	0x13d0


0x1998:	lea	rsi, [rip + 0x3511]
0x199f:	mov	edx, 5
0x19a4:	xor	edi, edi
0x19a6:	call	0x13d0


0x16b0:	cmp	eax, 0xffffff7d
0x16b5:	jne	0x196a


0x169a:	cmp	eax, 0x64
0x169d:	je	0x1700


0x1736:	test	r13b, r13b
0x1739:	mov	dword ptr [rsp + 0xc], 2
0x1741:	je	0x193c


0x189e:	mov	r13d, 1
0x18a4:	call	0x14d0


0x16bb:	sub	rsp, 8
0x16bf:	mov	rdi, qword ptr [rip + 0x2059c2]
0x16c6:	mov	rcx, qword ptr [rip + 0x205943]
0x16cd:	push	0
0x16cf:	lea	r9, [rip + 0x350c]
0x16d6:	lea	r8, [rip + 0x3517]
0x16dd:	lea	rdx, [rip + 0x34b9]
0x16e4:	lea	rsi, [rip + 0x3419]
0x16eb:	xor	eax, eax
0x16ed:	call	0x4120


0x196a:	mov	edi, 1
0x196f:	call	0x1ad0


0x1700:	mov	r12d, 1
0x1706:	jmp	0x166d


0x169f:	cmp	eax, 0x66
0x16a2:	jne	0x196a


0x193c:	movzx	ecx, r12b
0x1940:	mov	dword ptr [rsp + 0xc], ecx
0x1944:	jmp	0x1747


0x1747:	mov	r13d, 1
0x174d:	jmp	0x17d3


0x14d0:	jmp	qword ptr [rip + 0x205a62]


0x16a8:	mov	r13d, 1
0x16ae:	jmp	0x166d


0x17d3:	cmp	eax, ebp
0x17d5:	jge	0x18a9




0x17db:	mov	r14, qword ptr [rbx + rax*8]
0x17df:	mov	esi, 0x800
0x17e4:	xor	eax, eax
0x17e6:	mov	rdi, r14
0x17e9:	call	0x1570


0x18a9:	add	rsp, 0x18
0x18ad:	xor	r13d, 1
0x18b1:	pop	rbx
0x18b2:	movzx	eax, r13b
0x18b6:	pop	rbp
0x18b7:	pop	r12
0x18b9:	pop	r13
0x18bb:	pop	r14
0x18bd:	pop	r15
0x18bf:	ret	


0x1570:	jmp	qword ptr [rip + 0x205a12]




0x16f2:	xor	edi, edi
0x16f4:	call	0x15a0


0x19ab:	xor	esi, esi
0x19ad:	mov	rdx, rax
0x19b0:	mov	edi, 1
0x19b5:	xor	eax, eax
0x19b7:	call	0x1550


0x19bc:	nop	dword ptr [rax]


0x1987:	xor	esi, esi
0x1989:	mov	rdx, rax
0x198c:	mov	edi, 1
0x1991:	xor	eax, eax
0x1993:	call	0x1550


0x17ee:	test	eax, eax
0x17f0:	mov	r12d, eax
0x17f3:	jns	0x1752


0x17f9:	call	0x1340


0x1752:	xor	eax, eax
0x1754:	mov	esi, 3
0x1759:	mov	edi, r12d
0x175c:	call	0x4510


0x1761:	cmp	eax, -1
0x1764:	je	0x1858


0x1858:	mov	rsi, r14
0x185b:	mov	edi, 4
0x1860:	call	0x3970


0x176a:	and	ah, 0xf7
0x176d:	mov	esi, 4
0x1772:	mov	edi, r12d
0x1775:	mov	edx, eax
0x1777:	xor	eax, eax
0x1779:	call	0x4510


0x177e:	test	eax, eax
0x1780:	js	0x1858


0x1786:	mov	eax, dword ptr [rsp + 0xc]
0x178a:	cmp	eax, 1
0x178d:	je	0x1949


0x1949:	mov	edi, r12d
0x194c:	call	0x1350


0x1793:	cmp	eax, 2
0x1796:	jne	0x1956


0x1350:	jmp	qword ptr [rip + 0x205b22]


0x179c:	mov	edi, r12d
0x179f:	call	0x1400


0x1956:	mov	edi, r12d
0x1959:	call	0x1560




0x1400:	jmp	qword ptr [rip + 0x205aca]


0x1560:	jmp	qword ptr [rip + 0x205a1a]






0x17fe:	mov	esi, 0x801
0x1803:	mov	r15d, dword ptr [rax]
0x1806:	mov	rdi, r14
0x1809:	xor	eax, eax
0x180b:	call	0x1570


0x1810:	test	eax, eax
0x1812:	mov	r12d, eax
0x1815:	jns	0x1752


0x181b:	mov	rsi, r14
0x181e:	mov	edi, 4
0x1823:	call	0x3970


0x195e:	jmp	0x17a4


0x17a4:	test	eax, eax
0x17a6:	mov	r15d, 1
0x17ac:	js	0x1904


0x1904:	mov	rsi, r14
0x1907:	mov	edi, 4
0x190c:	call	0x3970


0x17b2:	mov	edi, r12d
0x17b5:	call	0x1470


0x17ba:	test	eax, eax
0x17bc:	js	0x18c0


0x18c0:	mov	rsi, r14
0x18c3:	mov	edi, 4
0x18c8:	xor	r15d, r15d
0x18cb:	call	0x3970


0x17c2:	add	dword ptr [rip + 0x2058c7], 1
0x17c9:	and	r13d, r15d
0x17cc:	movsxd	rax, dword ptr [rip + 0x2058bd]
0x17d3:	cmp	eax, ebp
0x17d5:	jge	0x18a9


0x1951:	jmp	0x17a4


0x18d0:	lea	rsi, [rip + 0x334f]
0x18d7:	mov	edx, 5
0x18dc:	xor	edi, edi
0x18de:	mov	r14, rax
0x18e1:	call	0x13d0


0x18e6:	mov	r12, rax
0x18e9:	call	0x1340


0x18ee:	mov	esi, dword ptr [rax]
0x18f0:	mov	rcx, r14
0x18f3:	mov	rdx, r12
0x18f6:	xor	edi, edi
0x18f8:	xor	eax, eax
0x18fa:	call	0x1550


0x18ff:	jmp	0x17c2


0x1911:	lea	rsi, [rip + 0x32fd]
0x1918:	mov	edx, 5
0x191d:	mov	r15, rax
0x1920:	xor	edi, edi
0x1922:	call	0x13d0


0x1927:	mov	qword ptr [rsp], rax
0x192b:	call	0x1340


0x1930:	mov	rcx, r15
0x1933:	mov	rdx, qword ptr [rsp]
0x1937:	jmp	0x188b


0x188b:	mov	esi, dword ptr [rax]
0x188d:	xor	edi, edi
0x188f:	xor	eax, eax
0x1891:	xor	r15d, r15d
0x1894:	call	0x1550


0x1899:	jmp	0x17b2


0x1828:	lea	rsi, [rip + 0x33d5]
0x182f:	mov	r12, rax
0x1832:	mov	edx, 5
0x1837:	xor	edi, edi
0x1839:	call	0x13d0


0x183e:	mov	esi, r15d
0x1841:	mov	rdx, rax
0x1844:	mov	rcx, r12
0x1847:	xor	edi, edi
0x1849:	xor	eax, eax
0x184b:	xor	r15d, r15d
0x184e:	call	0x1550


0x1853:	jmp	0x17c2


0x1865:	lea	rsi, [rip + 0x369c]
0x186c:	mov	edx, 5
0x1871:	xor	edi, edi
0x1873:	mov	qword ptr [rsp], rax
0x1877:	call	0x13d0


0x187c:	mov	r15, rax
0x187f:	call	0x1340


0x1884:	mov	rcx, qword ptr [rsp]
0x1888:	mov	rdx, r15
0x188b:	mov	esi, dword ptr [rax]
0x188d:	xor	edi, edi
0x188f:	xor	eax, eax
0x1891:	xor	r15d, r15d
0x1894:	call	0x1550


0x1eea:	mov	esi, dword ptr [rbx]
0x1eec:	lea	rdx, [rip + 0x304a]
0x1ef3:	mov	rcx, rax
0x1ef6:	mov	r8, rbp
0x1ef9:	xor	edi, edi
0x1efb:	xor	eax, eax
0x1efd:	call	0x1550


0x33ec:	add	rsp, 0x20
0x33f0:	mov	r11, qword ptr [rsp + 0x10]
0x33f5:	cmp	r11, rax
0x33f8:	ja	0x3461


0x33fa:	lea	rsi, [rax + 1]
0x33fe:	lea	rax, [rip + 0x203cdb]
0x3405:	cmp	r12, rax
0x3408:	mov	qword ptr [rbx], rsi
0x340b:	je	0x341f


0x3461:	mov	eax, dword ptr [rsp + 0x18]
0x3465:	mov	dword ptr [r13], eax
0x3469:	add	rsp, 0x28
0x346d:	mov	rax, r12
0x3470:	pop	rbx
0x3471:	pop	rbp
0x3472:	pop	r12
0x3474:	pop	r13
0x3476:	pop	r14
0x3478:	pop	r15
0x347a:	ret	


0x341f:	mov	rdi, rsi
0x3422:	mov	qword ptr [rsp + 0x10], rsi
0x3427:	call	0x4280


0x340d:	mov	rdi, r12
0x3410:	mov	qword ptr [rsp + 0x10], rsi
0x3415:	call	0x1320


0x341a:	mov	rsi, qword ptr [rsp + 0x10]
0x341f:	mov	rdi, rsi
0x3422:	mov	qword ptr [rsp + 0x10], rsi
0x3427:	call	0x4280


0x342c:	sub	rsp, 8
0x3430:	mov	qword ptr [rbx + 8], rax
0x3434:	mov	r8d, dword ptr [rbp]
0x3438:	push	qword ptr [rbp + 0x30]
0x343b:	push	qword ptr [rbp + 0x28]
0x343e:	mov	rcx, r14
0x3441:	push	r15
0x3443:	mov	r9d, dword ptr [rsp + 0x3c]
0x3448:	mov	rdi, rax
0x344b:	mov	rdx, qword ptr [rsp + 0x28]
0x3450:	mov	rsi, qword ptr [rsp + 0x30]
0x3455:	mov	r12, rax
0x3458:	call	0x20c0


0x3b72:	mov	rdi, qword ptr [rsp + 0x38]
0x3b77:	xor	rdi, qword ptr fs:[0x28]
0x3b80:	jne	0x3b8c


0x3b82:	add	rsp, 0x48
0x3b86:	ret	


0x3b8c:	call	0x1410


0x38bf:	mov	rcx, qword ptr [rsp + 0x38]
0x38c4:	xor	rcx, qword ptr fs:[0x28]
0x38cd:	jne	0x38d9


0x38cf:	add	rsp, 0x48
0x38d3:	ret	


0x38d9:	call	0x1410


0x394b:	mov	rdx, qword ptr [rsp + 0x38]
0x3950:	xor	rdx, qword ptr fs:[0x28]
0x3959:	jne	0x3965


0x395b:	add	rsp, 0x48
0x395f:	ret	


0x3965:	call	0x1410


0x3adf:	mov	rcx, qword ptr [rsp + 0x38]
0x3ae4:	xor	rcx, qword ptr fs:[0x28]
0x3aed:	jne	0x3af9


0x3aef:	add	rsp, 0x48
0x3af3:	ret	


0x3af9:	call	0x1410


0x3a0e:	mov	rsi, qword ptr [rsp + 0x38]
0x3a13:	xor	rsi, qword ptr fs:[0x28]
0x3a1c:	jne	0x3a23


0x3a1e:	add	rsp, 0x48
0x3a22:	ret	


0x3a23:	call	0x1410


0x345d:	add	rsp, 0x20
0x3461:	mov	eax, dword ptr [rsp + 0x18]
0x3465:	mov	dword ptr [r13], eax
0x3469:	add	rsp, 0x28
0x346d:	mov	rax, r12
0x3470:	pop	rbx
0x3471:	pop	rbp
0x3472:	pop	r12
0x3474:	pop	r13
0x3476:	pop	r14
0x3478:	pop	r15
0x347a:	ret	


0x36ac:	lea	rsi, [rax + 1]
0x36b0:	mov	qword ptr [rsp + 0x48], rax
0x36b5:	add	rsp, 0x20
0x36b9:	mov	rdi, rsi
0x36bc:	mov	qword ptr [rsp + 0x18], rsi
0x36c1:	call	0x4280


0x36c6:	mov	qword ptr [rsp + 0x10], rax
0x36cb:	sub	rsp, 8
0x36cf:	push	qword ptr [rbx + 0x30]
0x36d2:	push	qword ptr [rbx + 0x28]
0x36d5:	mov	r10, qword ptr [rsp + 0x38]
0x36da:	mov	r9d, ebp
0x36dd:	mov	r8d, dword ptr [rbx]
0x36e0:	mov	rcx, r15
0x36e3:	mov	rdx, r14
0x36e6:	mov	rdi, rax
0x36e9:	push	r10
0x36eb:	mov	rsi, qword ptr [rsp + 0x38]
0x36f0:	call	0x20c0


0x36f5:	mov	eax, dword ptr [rsp + 0x2c]
0x36f9:	add	rsp, 0x20
0x36fd:	test	r12, r12
0x3700:	mov	dword ptr [r13], eax
0x3704:	je	0x370f


0x370f:	mov	rax, qword ptr [rsp + 0x10]
0x3714:	add	rsp, 0x38
0x3718:	pop	rbx
0x3719:	pop	rbp
0x371a:	pop	r12
0x371c:	pop	r13
0x371e:	pop	r14
0x3720:	pop	r15
0x3722:	ret	


0x3706:	mov	r11, qword ptr [rsp + 0x28]
0x370b:	mov	qword ptr [r12], r11
0x370f:	mov	rax, qword ptr [rsp + 0x10]
0x3714:	add	rsp, 0x38
0x3718:	pop	rbx
0x3719:	pop	rbp
0x371a:	pop	r12
0x371c:	pop	r13
0x371e:	pop	r14
0x3720:	pop	r15
0x3722:	ret	


0x3621:	mov	dword ptr [rbp], r12d
0x3625:	add	rsp, 0x38
0x3629:	pop	rbx
0x362a:	pop	rbp
0x362b:	pop	r12
0x362d:	pop	r13
0x362f:	pop	r14
0x3631:	pop	r15
0x3633:	ret	


0x4aad:	add	rbx, 1
0x4ab1:	cmp	rbp, rbx
0x4ab4:	jne	0x4aa0


0x4aa0:	mov	rdx, r15
0x4aa3:	mov	rsi, r14
0x4aa6:	mov	edi, r13d
0x4aa9:	call	qword ptr [r12 + rbx*8]






0x3ea0:	mov	r13, qword ptr [rbx + 0x10]
0x3ea4:	mov	r12, qword ptr [rbx + 8]
0x3ea8:	lea	rsi, [rip + 0x15f7]
0x3eaf:	mov	rbx, qword ptr [rbx]
0x3eb2:	mov	edx, 5
0x3eb7:	xor	edi, edi
0x3eb9:	call	0x13d0


0x3fe0:	mov	r9, qword ptr [rbx + 0x10]
0x3fe4:	mov	r13, qword ptr [rbx + 0x30]
0x3fe8:	lea	rsi, [rip + 0x1659]
0x3fef:	mov	r12, qword ptr [rbx + 0x28]
0x3ff3:	mov	r15, qword ptr [rbx + 0x20]
0x3ff7:	mov	edx, 5
0x3ffc:	mov	r14, qword ptr [rbx + 0x18]
0x4000:	mov	r8, qword ptr [rbx + 8]
0x4004:	xor	edi, edi
0x4006:	mov	qword ptr [rsp + 8], r9
0x400b:	mov	rbx, qword ptr [rbx]
0x400e:	mov	qword ptr [rsp], r8
0x4012:	call	0x13d0


0x3dc0:	mov	r10, qword ptr [rbx + 0x40]
0x3dc4:	mov	r9, qword ptr [rbx + 0x38]
0x3dc8:	lea	rsi, [rip + 0x18d9]
0x3dcf:	mov	rax, qword ptr [rbx + 0x10]
0x3dd3:	mov	r8, qword ptr [rbx + 8]
0x3dd7:	mov	edx, 5
0x3ddc:	mov	r13, qword ptr [rbx + 0x30]
0x3de0:	mov	r12, qword ptr [rbx + 0x28]
0x3de4:	mov	r15, qword ptr [rbx + 0x20]
0x3de8:	mov	r14, qword ptr [rbx + 0x18]
0x3dec:	mov	rbx, qword ptr [rbx]
0x3def:	mov	qword ptr [rsp + 0x18], r10
0x3df4:	mov	qword ptr [rsp + 0x10], r9
0x3df9:	mov	qword ptr [rsp], rax
0x3dfd:	mov	qword ptr [rsp + 8], r8
0x3e02:	xor	edi, edi
0x3e04:	call	0x13d0


0x3d86:	add	rsp, 0x28
0x3d8a:	pop	rbx
0x3d8b:	pop	rbp
0x3d8c:	pop	r12
0x3d8e:	pop	r13
0x3d90:	pop	r14
0x3d92:	pop	r15
0x3d94:	ret	


0x3f48:	mov	r15, qword ptr [rbx + 0x20]
0x3f4c:	lea	rsi, [rip + 0x16a5]
0x3f53:	mov	edx, 5
0x3f58:	xor	edi, edi
0x3f5a:	mov	r14, qword ptr [rbx + 0x18]
0x3f5e:	mov	r13, qword ptr [rbx + 0x10]
0x3f62:	mov	r12, qword ptr [rbx + 8]
0x3f66:	mov	rbx, qword ptr [rbx]
0x3f69:	call	0x13d0


0x3e58:	mov	r12, qword ptr [rbx + 8]
0x3e5c:	lea	rsi, [rip + 0x162c]
0x3e63:	mov	rbx, qword ptr [rbx]
0x3e66:	mov	edx, 5
0x3e6b:	xor	edi, edi
0x3e6d:	call	0x13d0


0x3ef0:	lea	rsi, [rip + 0x16e1]
0x3ef7:	mov	edx, 5
0x3efc:	xor	edi, edi
0x3efe:	mov	r14, qword ptr [rbx + 0x18]
0x3f02:	mov	r13, qword ptr [rbx + 0x10]
0x3f06:	mov	r12, qword ptr [rbx + 8]
0x3f0a:	mov	rbx, qword ptr [rbx]
0x3f0d:	call	0x13d0


0x3d10:	mov	r9, qword ptr [rbx + 0x38]
0x3d14:	mov	rax, qword ptr [rbx + 0x10]
0x3d18:	lea	rsi, [rip + 0x1959]
0x3d1f:	mov	r8, qword ptr [rbx + 8]
0x3d23:	mov	edx, 5
0x3d28:	xor	edi, edi
0x3d2a:	mov	r13, qword ptr [rbx + 0x30]
0x3d2e:	mov	r12, qword ptr [rbx + 0x28]
0x3d32:	mov	qword ptr [rsp + 0x10], r9
0x3d37:	mov	r15, qword ptr [rbx + 0x20]
0x3d3b:	mov	r14, qword ptr [rbx + 0x18]
0x3d3f:	mov	qword ptr [rsp], rax
0x3d43:	mov	qword ptr [rsp + 8], r8
0x3d48:	mov	rbx, qword ptr [rbx]
0x3d4b:	call	0x13d0


0x3f78:	mov	r8, qword ptr [rbx + 8]
0x3f7c:	mov	r12, qword ptr [rbx + 0x28]
0x3f80:	lea	rsi, [rip + 0x1699]
0x3f87:	mov	r15, qword ptr [rbx + 0x20]
0x3f8b:	mov	r14, qword ptr [rbx + 0x18]
0x3f8f:	mov	edx, 5
0x3f94:	mov	r13, qword ptr [rbx + 0x10]
0x3f98:	xor	edi, edi
0x3f9a:	mov	rbx, qword ptr [rbx]
0x3f9d:	mov	qword ptr [rsp], r8
0x3fa1:	call	0x13d0


0x3e18:	mov	rbx, qword ptr [rbx]
0x3e1b:	lea	rsi, [rip + 0x165d]
0x3e22:	mov	edx, 5
0x3e27:	xor	edi, edi
0x3e29:	call	0x13d0


0x3e2e:	add	rsp, 0x28
0x3e32:	mov	rcx, rbx
0x3e35:	mov	rdi, rbp
0x3e38:	pop	rbx
0x3e39:	pop	rbp
0x3e3a:	pop	r12
0x3e3c:	pop	r13
0x3e3e:	pop	r14
0x3e40:	pop	r15
0x3e42:	mov	rdx, rax
0x3e45:	mov	esi, 1
0x3e4a:	xor	eax, eax
0x3e4c:	jmp	0x15c0


0x3fa6:	sub	rsp, 8
0x3faa:	mov	r9, r13
0x3fad:	push	r12
0x3faf:	push	r15
0x3fb1:	push	r14
0x3fb3:	mov	r8, qword ptr [rsp + 0x20]
0x3fb8:	mov	rcx, rbx
0x3fbb:	mov	rdx, rax
0x3fbe:	mov	rdi, rbp
0x3fc1:	mov	esi, 1
0x3fc6:	xor	eax, eax
0x3fc8:	call	0x15c0


0x3fcd:	add	rsp, 0x20
0x3fd1:	add	rsp, 0x28
0x3fd5:	pop	rbx
0x3fd6:	pop	rbp
0x3fd7:	pop	r12
0x3fd9:	pop	r13
0x3fdb:	pop	r14
0x3fdd:	pop	r15
0x3fdf:	ret	


0x3d50:	sub	rsp, 8
0x3d54:	mov	r9, qword ptr [rsp + 0x18]
0x3d59:	mov	rdx, rax
0x3d5c:	mov	rcx, rbx
0x3d5f:	mov	esi, 1
0x3d64:	mov	rdi, rbp
0x3d67:	xor	eax, eax
0x3d69:	push	r9
0x3d6b:	push	r13
0x3d6d:	push	r12
0x3d6f:	push	r15
0x3d71:	push	r14
0x3d73:	mov	r9, qword ptr [rsp + 0x30]
0x3d78:	mov	r8, qword ptr [rsp + 0x38]
0x3d7d:	call	0x15c0


0x3f12:	sub	rsp, 8
0x3f16:	push	r14
0x3f18:	mov	rdx, rax
0x3f1b:	mov	r9, r13
0x3f1e:	mov	r8, r12
0x3f21:	mov	rcx, rbx
0x3f24:	mov	rdi, rbp
0x3f27:	mov	esi, 1
0x3f2c:	xor	eax, eax
0x3f2e:	call	0x15c0


0x3f33:	pop	rax
0x3f34:	pop	rdx
0x3f35:	add	rsp, 0x28
0x3f39:	pop	rbx
0x3f3a:	pop	rbp
0x3f3b:	pop	r12
0x3f3d:	pop	r13
0x3f3f:	pop	r14
0x3f41:	pop	r15
0x3f43:	ret	


0x3e72:	add	rsp, 0x28
0x3e76:	mov	r8, r12
0x3e79:	mov	rcx, rbx
0x3e7c:	mov	rdi, rbp
0x3e7f:	mov	rdx, rax
0x3e82:	mov	esi, 1
0x3e87:	pop	rbx
0x3e88:	pop	rbp
0x3e89:	pop	r12
0x3e8b:	pop	r13
0x3e8d:	pop	r14
0x3e8f:	pop	r15
0x3e91:	xor	eax, eax
0x3e93:	jmp	0x15c0


0x3f6e:	push	r15
0x3f70:	jmp	0x3f16


0x3f16:	push	r14
0x3f18:	mov	rdx, rax
0x3f1b:	mov	r9, r13
0x3f1e:	mov	r8, r12
0x3f21:	mov	rcx, rbx
0x3f24:	mov	rdi, rbp
0x3f27:	mov	esi, 1
0x3f2c:	xor	eax, eax
0x3f2e:	call	0x15c0


0x4017:	push	r13
0x4019:	push	r12
0x401b:	push	r15
0x401d:	push	r14
0x401f:	mov	r9, qword ptr [rsp + 0x28]
0x4024:	jmp	0x3fb3


0x3fb3:	mov	r8, qword ptr [rsp + 0x20]
0x3fb8:	mov	rcx, rbx
0x3fbb:	mov	rdx, rax
0x3fbe:	mov	rdi, rbp
0x3fc1:	mov	esi, 1
0x3fc6:	xor	eax, eax
0x3fc8:	call	0x15c0


0x3ebe:	add	rsp, 0x28
0x3ec2:	mov	r9, r13
0x3ec5:	mov	r8, r12
0x3ec8:	mov	rcx, rbx
0x3ecb:	mov	rdi, rbp
0x3ece:	mov	rdx, rax
0x3ed1:	pop	rbx
0x3ed2:	pop	rbp
0x3ed3:	pop	r12
0x3ed5:	pop	r13
0x3ed7:	pop	r14
0x3ed9:	pop	r15
0x3edb:	mov	esi, 1
0x3ee0:	xor	eax, eax
0x3ee2:	jmp	0x15c0


0x2c60:	sub	rsp, 8
0x2c64:	mov	rcx, rbp
0x2c67:	mov	rsi, r13
0x2c6a:	push	qword ptr [rsp + 0x68]
0x2c6e:	push	qword ptr [rsp + 0x78]
0x2c72:	mov	rdi, r14
0x2c75:	push	0
0x2c77:	mov	r9d, dword ptr [rsp + 0x98]
0x2c7f:	mov	r8d, dword ptr [rsp + 0x28]
0x2c84:	mov	rdx, qword ptr [rsp + 0x30]
0x2c89:	and	r9d, 0xfffffffd
0x2c8d:	call	0x20c0


0x2c92:	add	rsp, 0x20
0x2c96:	mov	r15, rax
0x2c99:	mov	rbx, qword ptr [rsp + 0xa8]
0x2ca1:	xor	rbx, qword ptr fs:[0x28]
0x2caa:	mov	rax, r15
0x2cad:	jne	0x32b3


0x2cb3:	add	rsp, 0xb8
0x2cba:	pop	rbx
0x2cbb:	pop	rbp
0x2cbc:	pop	r12
0x2cbe:	pop	r13
0x2cc0:	pop	r14
0x2cc2:	pop	r15
0x2cc4:	ret	


0x32b3:	call	0x1410


0x325d:	sub	rsp, 8
0x3261:	mov	r8d, 5
0x3267:	mov	rcx, r11
0x326a:	push	qword ptr [rsp + 0x68]
0x326e:	push	qword ptr [rsp + 0x78]
0x3272:	mov	rdi, r14
0x3275:	push	qword ptr [rsp + 0x38]
0x3279:	mov	r9d, dword ptr [rsp + 0x98]
0x3281:	mov	rdx, qword ptr [rsp + 0x30]
0x3286:	mov	rsi, qword ptr [rsp + 0x70]
0x328b:	call	0x20c0


0x3290:	add	rsp, 0x20
0x3294:	mov	r15, rax
0x3297:	jmp	0x2c99


0x2c99:	mov	rbx, qword ptr [rsp + 0xa8]
0x2ca1:	xor	rbx, qword ptr fs:[0x28]
0x2caa:	mov	rax, r15
0x2cad:	jne	0x32b3


0x1310:	push	qword ptr [rip + 0x205b3a]
0x1316:	jmp	qword ptr [rip + 0x205b3c]


0x131c:	nop	dword ptr [rax]


0x1326:	push	0
0x132b:	jmp	0x1310


0x1336:	push	1
0x133b:	jmp	0x1310


0x1346:	push	2
0x134b:	jmp	0x1310


0x1356:	push	3
0x135b:	jmp	0x1310


0x1366:	push	4
0x136b:	jmp	0x1310


0x1376:	push	5
0x137b:	jmp	0x1310


0x1386:	push	6
0x138b:	jmp	0x1310


0x1396:	push	7
0x139b:	jmp	0x1310


0x13a6:	push	8
0x13ab:	jmp	0x1310


0x13b6:	push	9
0x13bb:	jmp	0x1310


0x13c6:	push	0xa
0x13cb:	jmp	0x1310


0x13d6:	push	0xb
0x13db:	jmp	0x1310


0x13e6:	push	0xc
0x13eb:	jmp	0x1310


0x13f6:	push	0xd
0x13fb:	jmp	0x1310


0x1406:	push	0xe
0x140b:	jmp	0x1310


0x1416:	push	0xf
0x141b:	jmp	0x1310


0x1426:	push	0x10
0x142b:	jmp	0x1310


0x1436:	push	0x11
0x143b:	jmp	0x1310


0x1446:	push	0x12
0x144b:	jmp	0x1310


0x1456:	push	0x13
0x145b:	jmp	0x1310


0x1466:	push	0x14
0x146b:	jmp	0x1310


0x1476:	push	0x15
0x147b:	jmp	0x1310


0x1480:	jmp	qword ptr [rip + 0x205a8a]




0x1486:	push	0x16
0x148b:	jmp	0x1310


0x1496:	push	0x17
0x149b:	jmp	0x1310


0x14a6:	push	0x18
0x14ab:	jmp	0x1310


0x14b6:	push	0x19
0x14bb:	jmp	0x1310


0x14c6:	push	0x1a
0x14cb:	jmp	0x1310


0x14d6:	push	0x1b
0x14db:	jmp	0x1310


0x14e6:	push	0x1c
0x14eb:	jmp	0x1310


0x14f6:	push	0x1d
0x14fb:	jmp	0x1310


0x1506:	push	0x1e
0x150b:	jmp	0x1310


0x1516:	push	0x1f
0x151b:	jmp	0x1310


0x1526:	push	0x20
0x152b:	jmp	0x1310


0x1536:	push	0x21
0x153b:	jmp	0x1310


0x1546:	push	0x22
0x154b:	jmp	0x1310


0x1556:	push	0x23
0x155b:	jmp	0x1310


0x1566:	push	0x24
0x156b:	jmp	0x1310


0x1576:	push	0x25
0x157b:	jmp	0x1310


0x1586:	push	0x26
0x158b:	jmp	0x1310


0x1596:	push	0x27
0x159b:	jmp	0x1310


0x15a6:	push	0x28
0x15ab:	jmp	0x1310


0x15b6:	push	0x29
0x15bb:	jmp	0x1310


0x15c6:	push	0x2a
0x15cb:	jmp	0x1310


0x15d0:	jmp	qword ptr [rip + 0x2059e2]




0x15d6:	push	0x2b
0x15db:	jmp	0x1310


0x15e0:	jmp	qword ptr [rip + 0x2059da]




0x15e6:	push	0x2c
0x15eb:	jmp	0x1310


0x15f0:	jmp	qword ptr [rip + 0x2059d2]




0x15f6:	push	0x2d
0x15fb:	jmp	0x1310


0x19ea:	hlt	


0x19eb:	nop	dword ptr [rax + rax]


0x1a22:	nop	dword ptr [rax]
0x1a26:	nop	word ptr cs:[rax + rax]


0x1a72:	nop	dword ptr [rax]
0x1a76:	nop	word ptr cs:[rax + rax]


0x1aba:	nop	word ptr [rax + rax]


0x1aca:	nop	word ptr [rax + rax]


0x1e5a:	nop	word ptr [rax + rax]


0x1e68:	nop	dword ptr [rax + rax]


0x1e78:	nop	dword ptr [rax + rax]


0x1f24:	nop	word ptr cs:[rax + rax]
0x1f2e:	nop	


0x1fcf:	nop	


0x20b7:	nop	word ptr [rax + rax]


0x2153:	mov	byte ptr [rsp + 0xe], 1
0x2158:	mov	byte ptr [rsp + 0x7c], 0
0x215d:	xor	r12d, r12d
0x2160:	mov	qword ptr [rsp + 0x50], 0
0x2169:	mov	byte ptr [rsp + 0xf], 1
0x216e:	mov	byte ptr [rsp + 0xd], 0
0x2173:	lea	rax, [rip + 0x2e23]
0x217a:	mov	qword ptr [rsp + 0x18], 1
0x2183:	xor	r15d, r15d
0x2186:	mov	dword ptr [rsp + 8], 2
0x218e:	mov	qword ptr [rsp + 0x48], rax
0x2193:	xor	r11d, r11d
0x2196:	mov	rax, rbp
0x2199:	mov	r8d, r12d
0x219c:	mov	rbp, r11
0x219f:	mov	r11, rax
0x21a2:	nop	word ptr [rax + rax]
0x21a8:	cmp	r11, rbp
0x21ab:	setne	r12b
0x21af:	cmp	r11, -1
0x21b3:	jne	0x21c2


0x21b5:	mov	rax, qword ptr [rsp + 0x10]
0x21ba:	cmp	byte ptr [rax + rbp], 0
0x21be:	setne	r12b
0x21c2:	test	r12b, r12b
0x21c5:	je	0x2820


0x21c2:	test	r12b, r12b
0x21c5:	je	0x2820


0x2820:	cmp	dword ptr [rsp + 8], 2
0x2825:	movzx	ebx, byte ptr [rsp + 0xf]
0x282a:	mov	r12d, r8d
0x282d:	mov	rbp, r11
0x2830:	sete	dl
0x2833:	mov	eax, ebx
0x2835:	test	r15, r15
0x2838:	sete	cl
0x283b:	and	eax, edx
0x283d:	and	al, cl
0x283f:	jne	0x32a6


0x21cb:	cmp	dword ptr [rsp + 8], 2
0x21d0:	mov	rdi, qword ptr [rsp + 0x10]
0x21d5:	lea	r9, [rdi + rbp]
0x21d9:	setne	al
0x21dc:	and	al, byte ptr [rsp + 0xd]
0x21e0:	mov	r10d, eax
0x21e3:	je	0x2290


0x2845:	mov	eax, ebx
0x2847:	xor	eax, 1
0x284a:	and	dl, al
0x284c:	je	0x31bc


0x32a6:	mov	dword ptr [rsp + 8], 2
0x32ae:	jmp	0x2c49


0x2290:	movzx	ebx, byte ptr [r9]
0x2294:	cmp	bl, 0x7e
0x2297:	ja	0x25b8


0x21e9:	mov	rax, qword ptr [rsp + 0x18]
0x21ee:	test	rax, rax
0x21f1:	je	0x2620


0x31bc:	mov	rbx, qword ptr [rsp + 0x48]
0x31c1:	test	rbx, rbx
0x31c4:	je	0x31f2


0x2852:	cmp	byte ptr [rsp + 0x7c], 0
0x2857:	je	0x31ba


0x2c49:	cmp	byte ptr [rsp + 0xd], 0
0x2c4e:	je	0x2c60


0x229d:	lea	rcx, [rip + 0x2d88]
0x22a4:	movzx	edx, bl
0x22a7:	movsxd	rax, dword ptr [rcx + rdx*4]
0x22ab:	add	rax, rcx
0x22ae:	jmp	rax


0x25b8:	cmp	qword ptr [rsp + 0x58], 1
0x25be:	jne	0x2968


0x2620:	movzx	ebx, byte ptr [r9]
0x2624:	cmp	bl, 0x7e
0x2627:	ja	0x25b0


0x21f7:	cmp	r11, -1
0x21fb:	lea	rbx, [rbp + rax]
0x2200:	jne	0x2230


0x31f2:	cmp	r13, r15
0x31f5:	jbe	0x2c99


0x31c6:	test	al, al
0x31c8:	je	0x31f2


0x31ba:	mov	eax, edx
0x31bc:	mov	rbx, qword ptr [rsp + 0x48]
0x31c1:	test	rbx, rbx
0x31c4:	je	0x31f2


0x285d:	cmp	byte ptr [rsp + 0xe], 0
0x2862:	jne	0x325d


0x2c50:	test	al, al
0x2c52:	mov	eax, 4
0x2c57:	cmove	eax, dword ptr [rsp + 8]
0x2c5c:	mov	dword ptr [rsp + 8], eax


0x25c4:	mov	qword ptr [rsp + 0x38], r11
0x25c9:	mov	byte ptr [rsp + 0x30], r8b
0x25ce:	mov	byte ptr [rsp + 0x28], r10b
0x25d3:	call	0x15f0


0x2968:	lea	rax, [rsp + 0xa0]
0x2970:	cmp	r11, -1
0x2974:	mov	qword ptr [rsp + 0xa0], 0
0x2980:	mov	qword ptr [rsp + 0x28], rax
0x2985:	jne	0x29b4


0x2629:	lea	rcx, [rip + 0x2bf8]
0x2630:	movzx	edx, bl
0x2633:	movsxd	rax, dword ptr [rcx + rdx*4]
0x2637:	add	rax, rcx
0x263a:	jmp	rax


0x25b0:	xor	r10d, r10d
0x25b3:	nop	dword ptr [rax + rax]
0x25b8:	cmp	qword ptr [rsp + 0x58], 1
0x25be:	jne	0x2968


0x2202:	cmp	rax, 1
0x2206:	jbe	0x2230


0x2230:	cmp	rbx, r11
0x2233:	mov	byte ptr [rsp + 0x28], r10b
0x2238:	ja	0x27f0


0x31fb:	mov	byte ptr [r14 + r15], 0
0x3200:	jmp	0x2c99


0x31ca:	movzx	ecx, byte ptr [rbx]
0x31cd:	mov	rax, rbx
0x31d0:	test	cl, cl
0x31d2:	je	0x31f2


0x2868:	test	r13, r13
0x286b:	sete	al
0x286e:	cmp	qword ptr [rsp + 0x50], 0
0x2874:	setne	dl
0x2877:	and	al, dl
0x2879:	je	0x329c


0x2987:	mov	rdi, qword ptr [rsp + 0x10]
0x298c:	mov	byte ptr [rsp + 0x40], r8b
0x2991:	mov	byte ptr [rsp + 0x38], r10b
0x2996:	mov	qword ptr [rsp + 0x30], r9
0x299b:	call	0x13f0


0x29b4:	lea	rax, [rsp + 0x9c]
0x29bc:	xor	ecx, ecx
0x29be:	mov	byte ptr [rsp + 0x7e], bl
0x29c2:	mov	byte ptr [rsp + 0x7d], r8b
0x29c7:	mov	rbx, rcx
0x29ca:	mov	qword ptr [rsp + 0x88], r9
0x29d2:	mov	qword ptr [rsp + 0x38], rax
0x29d7:	mov	byte ptr [rsp + 0x7f], r10b
0x29dc:	mov	qword ptr [rsp + 0x80], r15
0x29e4:	mov	qword ptr [rsp + 0x40], r14
0x29e9:	mov	qword ptr [rsp + 0x70], r13
0x29ee:	mov	qword ptr [rsp + 0x30], r11
0x29f3:	mov	rax, qword ptr [rsp + 0x10]
0x29f8:	lea	r14, [rbp + rbx]
0x29fd:	mov	rdx, qword ptr [rsp + 0x30]
0x2a02:	mov	rcx, qword ptr [rsp + 0x28]
0x2a07:	mov	rdi, qword ptr [rsp + 0x38]
0x2a0c:	lea	r13, [rax + r14]
0x2a10:	sub	rdx, r14
0x2a13:	mov	rsi, r13
0x2a16:	call	0x4790


0x2208:	mov	byte ptr [rsp + 0x38], r8b
0x220d:	mov	byte ptr [rsp + 0x30], r10b
0x2212:	mov	qword ptr [rsp + 0x28], r9
0x2217:	call	0x13f0


0x223e:	mov	rdx, qword ptr [rsp + 0x18]
0x2243:	mov	rsi, qword ptr [rsp + 0x48]
0x2248:	mov	rdi, r9
0x224b:	mov	qword ptr [rsp + 0x40], r11
0x2250:	mov	byte ptr [rsp + 0x38], r8b
0x2255:	mov	qword ptr [rsp + 0x30], r9
0x225a:	call	0x1480


0x27f0:	xor	r10d, r10d
0x27f3:	jmp	0x2290


0x31d4:	mov	rdx, r15
0x31d7:	sub	rax, r15
0x31da:	cmp	r13, rdx
0x31dd:	jbe	0x31e3


0x329c:	movzx	eax, byte ptr [rsp + 0x7c]
0x32a1:	jmp	0x31bc


0x287f:	mov	r13, qword ptr [rsp + 0x50]
0x2884:	lea	rbx, [rip + 0x2712]
0x288b:	mov	byte ptr [r14], 0x27
0x288f:	mov	dword ptr [rsp + 8], 2
0x2897:	mov	r15d, 1
0x289d:	mov	qword ptr [rsp + 0x18], 1
0x28a6:	mov	byte ptr [rsp + 0xf], 0
0x28ab:	mov	qword ptr [rsp + 0x48], rbx
0x28b0:	mov	byte ptr [rsp + 0x7c], al
0x28b4:	jmp	0x2193


0x31e3:	add	rdx, 1
0x31e7:	movzx	ecx, byte ptr [rax + rdx]
0x31eb:	test	cl, cl
0x31ed:	jne	0x31da


0x31df:	mov	byte ptr [r14 + rdx], cl
0x31e3:	add	rdx, 1
0x31e7:	movzx	ecx, byte ptr [rax + rdx]
0x31eb:	test	cl, cl
0x31ed:	jne	0x31da


0x2193:	xor	r11d, r11d
0x2196:	mov	rax, rbp
0x2199:	mov	r8d, r12d
0x219c:	mov	rbp, r11
0x219f:	mov	r11, rax
0x21a2:	nop	word ptr [rax + rax]
0x21a8:	cmp	r11, rbp
0x21ab:	setne	r12b
0x21af:	cmp	r11, -1
0x21b3:	jne	0x21c2


0x31ef:	mov	r15, rdx
0x31f2:	cmp	r13, r15
0x31f5:	jbe	0x2c99


0x31da:	cmp	r13, rdx
0x31dd:	jbe	0x31e3


0x225f:	test	eax, eax
0x2261:	mov	r9, qword ptr [rsp + 0x30]
0x2266:	movzx	r8d, byte ptr [rsp + 0x38]
0x226c:	mov	r11, qword ptr [rsp + 0x40]
0x2271:	jne	0x27f0


0x2277:	cmp	byte ptr [rsp + 0xf], 0
0x227c:	movzx	r10d, byte ptr [rsp + 0x28]
0x2282:	jne	0x3205


0x3205:	cmp	dword ptr [rsp + 8], 2
0x320a:	movzx	ebx, byte ptr [rsp + 0xf]
0x320f:	mov	rbp, r11
0x3212:	sete	al
0x3215:	mov	byte ptr [rsp + 0xd], bl
0x3219:	jmp	0x2c49


0x2a1b:	test	rax, rax
0x2a1e:	mov	r15, rax
0x2a21:	je	0x2a71


0x2a71:	mov	edx, r12d
0x2a74:	mov	rdi, rbx
0x2a77:	movzx	r8d, byte ptr [rsp + 0x7d]
0x2a7d:	xor	edx, 1
0x2a80:	movzx	ebx, byte ptr [rsp + 0x7e]
0x2a85:	movzx	r10d, byte ptr [rsp + 0x7f]
0x2a8b:	and	dl, byte ptr [rsp + 0xd]
0x2a8f:	mov	r15, qword ptr [rsp + 0x80]
0x2a97:	mov	r14, qword ptr [rsp + 0x40]
0x2a9c:	mov	r13, qword ptr [rsp + 0x70]
0x2aa1:	mov	r11, qword ptr [rsp + 0x30]
0x2aa6:	cmp	rdi, 1
0x2aaa:	jbe	0x30ab


0x2a23:	cmp	rax, -1
0x2a27:	je	0x3045


0x30ab:	mov	eax, edx
0x30ad:	jmp	0x2607


0x2ab0:	mov	rcx, rdi
0x2ab3:	xor	esi, esi
0x2ab5:	movzx	r9d, byte ptr [rsp + 0xf]
0x2abb:	add	rcx, rbp
0x2abe:	mov	rdi, qword ptr [rsp + 0x10]
0x2ac3:	jmp	0x2b7e


0x3045:	mov	rdi, rbx
0x3048:	movzx	r8d, byte ptr [rsp + 0x7d]
0x304e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x3053:	movzx	r10d, byte ptr [rsp + 0x7f]
0x3059:	mov	r15, qword ptr [rsp + 0x80]
0x3061:	xor	r12d, r12d
0x3064:	mov	r14, qword ptr [rsp + 0x40]
0x3069:	mov	r13, qword ptr [rsp + 0x70]
0x306e:	mov	r11, qword ptr [rsp + 0x30]
0x3073:	movzx	edx, byte ptr [rsp + 0xd]
0x3078:	jmp	0x2aa6


0x2a2d:	cmp	rax, -2
0x2a31:	je	0x2fd1


0x2607:	test	al, al
0x2609:	jne	0x2fa1


0x2b7e:	test	dl, dl
0x2b80:	jne	0x2ad0


0x2aa6:	cmp	rdi, 1
0x2aaa:	jbe	0x30ab


0x2fd1:	mov	r11, qword ptr [rsp + 0x30]
0x2fd6:	mov	rsi, r14
0x2fd9:	mov	rcx, r13
0x2fdc:	mov	rax, rbx
0x2fdf:	mov	rdi, rbx
0x2fe2:	movzx	r8d, byte ptr [rsp + 0x7d]
0x2fe8:	movzx	ebx, byte ptr [rsp + 0x7e]
0x2fed:	mov	r9, qword ptr [rsp + 0x88]
0x2ff5:	cmp	rsi, r11
0x2ff8:	movzx	r10d, byte ptr [rsp + 0x7f]
0x2ffe:	mov	r15, qword ptr [rsp + 0x80]
0x3006:	mov	r14, qword ptr [rsp + 0x40]
0x300b:	mov	r13, qword ptr [rsp + 0x70]
0x3010:	jae	0x3038


0x2a37:	cmp	dword ptr [rsp + 8], 2
0x2a3c:	sete	al
0x2a3f:	and	al, byte ptr [rsp + 0xf]
0x2a43:	jne	0x2be0


0x260f:	cmp	dword ptr [rsp + 8], 2
0x2614:	sete	dl
0x2617:	jmp	0x22e8


0x2fa1:	movzx	edx, byte ptr [rsp + 0xd]
0x2fa6:	xor	r12d, r12d
0x2fa9:	jmp	0x2ab0


0x2b86:	mov	eax, esi
0x2b88:	xor	eax, 1
0x2b8b:	and	eax, r8d
0x2b8e:	test	r10b, r10b
0x2b91:	je	0x2ba1


0x2ad0:	cmp	dword ptr [rsp + 8], 2
0x2ad5:	sete	al
0x2ad8:	test	r9b, r9b
0x2adb:	jne	0x2f90


0x3012:	cmp	byte ptr [rcx], 0
0x3015:	jne	0x3027


0x3038:	movzx	edx, byte ptr [rsp + 0xd]
0x303d:	xor	r12d, r12d
0x3040:	jmp	0x2aa6


0x2a49:	mov	edi, dword ptr [rsp + 0x9c]
0x2a50:	call	0x15e0


0x2be0:	cmp	r15, 1
0x2be4:	je	0x2a49


0x22e8:	cmp	byte ptr [rsp + 0xd], 1
0x22ed:	jne	0x2402


0x2ba1:	add	rbp, 1
0x2ba5:	cmp	rbp, rcx
0x2ba8:	jae	0x232c


0x2b93:	cmp	r13, r15
0x2b96:	jbe	0x2b9d


0x2ae1:	mov	esi, r8d
0x2ae4:	xor	esi, 1
0x2ae7:	and	al, sil
0x2aea:	je	0x2b1b


0x2f90:	movzx	ebx, byte ptr [rsp + 0xf]
0x2f95:	mov	rbp, r11
0x2f98:	mov	byte ptr [rsp + 0xd], bl
0x2f9c:	jmp	0x2c49


0x3017:	jmp	0x3038


0x3027:	add	rax, 1
0x302b:	lea	rdx, [rbp + rax]
0x3030:	cmp	r11, rdx
0x3033:	ja	0x3020


0x2bea:	mov	rdi, qword ptr [rsp + 0x10]
0x2bef:	lea	rcx, [rdi + r15]
0x2bf3:	lea	rdx, [rdi + r14 + 1]
0x2bf8:	lea	r8, [rcx + r14]
0x2bfc:	jmp	0x2c0d


0x22f3:	test	dl, dl
0x22f5:	jne	0x2402


0x2402:	cmp	byte ptr [rsp + 0xf], 0
0x2407:	jne	0x22fb


0x2bae:	test	al, al
0x2bb0:	je	0x2fae


0x232c:	test	al, al
0x232e:	je	0x2350


0x2b9d:	add	r15, 1
0x2ba1:	add	rbp, 1
0x2ba5:	cmp	rbp, rcx
0x2ba8:	jae	0x232c


0x2b98:	mov	byte ptr [r14 + r15], 0x5c
0x2b9d:	add	r15, 1
0x2ba1:	add	rbp, 1
0x2ba5:	cmp	rbp, rcx
0x2ba8:	jae	0x232c


0x2b1b:	cmp	r13, r15
0x2b1e:	jbe	0x2b25


0x2aec:	cmp	r13, r15
0x2aef:	jbe	0x2af6


0x3035:	mov	rdi, rax
0x3038:	movzx	edx, byte ptr [rsp + 0xd]
0x303d:	xor	r12d, r12d
0x3040:	jmp	0x2aa6


0x3020:	cmp	byte ptr [r9 + rax], 0
0x3025:	je	0x3035


0x2c0d:	movzx	ecx, byte ptr [rdx]
0x2c10:	sub	ecx, 0x5b
0x2c13:	cmp	cl, 0x21
0x2c16:	ja	0x2c00


0x22fb:	mov	rsi, qword ptr [rsp + 0x20]
0x2300:	test	rsi, rsi
0x2303:	je	0x2319


0x240d:	jmp	0x2319


0x2fae:	xor	r10d, r10d
0x2fb1:	jmp	0x2b6d


0x2bb6:	cmp	r13, r15
0x2bb9:	jbe	0x2bc0


0x2350:	cmp	r15, r13
0x2353:	jae	0x2359


0x2330:	cmp	r13, r15
0x2333:	jbe	0x233a


0x2b25:	lea	rax, [r15 + 1]
0x2b29:	cmp	r13, rax
0x2b2c:	jbe	0x2b3b


0x2b20:	mov	byte ptr [r14 + r15], 0x5c
0x2b25:	lea	rax, [r15 + 1]
0x2b29:	cmp	r13, rax
0x2b2c:	jbe	0x2b3b


0x2af6:	lea	rsi, [r15 + 1]
0x2afa:	cmp	r13, rsi
0x2afd:	jbe	0x2b05


0x2af1:	mov	byte ptr [r14 + r15], 0x27
0x2af6:	lea	rsi, [r15 + 1]
0x2afa:	cmp	r13, rsi
0x2afd:	jbe	0x2b05


0x2c18:	mov	esi, 1
0x2c1d:	shl	rsi, cl
0x2c20:	mov	rcx, rsi
0x2c23:	movabs	rsi, 0x20000002b
0x2c2d:	test	rcx, rsi
0x2c30:	je	0x2c00


0x2c00:	add	rdx, 1
0x2c04:	cmp	r8, rdx
0x2c07:	je	0x2a49


0x2319:	test	r10b, r10b
0x231c:	jne	0x2463


0x2305:	mov	edx, ebx
0x2307:	shr	dl, 5
0x230a:	movzx	edx, dl
0x230d:	mov	edx, dword ptr [rsi + rdx*4]
0x2310:	bt	edx, ebx
0x2313:	jb	0x2463


0x2b6d:	cmp	r13, r15
0x2b70:	jbe	0x2b76


0x2bc0:	lea	rax, [r15 + 1]
0x2bc4:	cmp	r13, rax
0x2bc7:	jbe	0x2bcf


0x2bbb:	mov	byte ptr [r14 + r15], 0x27
0x2bc0:	lea	rax, [r15 + 1]
0x2bc4:	cmp	r13, rax
0x2bc7:	jbe	0x2bcf


0x2355:	mov	byte ptr [r14 + r15], bl
0x2359:	movzx	edi, byte ptr [rsp + 0xe]
0x235e:	add	r15, 1
0x2362:	mov	eax, 0
0x2367:	test	r12b, r12b
0x236a:	cmove	edi, eax
0x236d:	mov	byte ptr [rsp + 0xe], dil
0x2372:	jmp	0x21a8


0x2359:	movzx	edi, byte ptr [rsp + 0xe]
0x235e:	add	r15, 1
0x2362:	mov	eax, 0
0x2367:	test	r12b, r12b
0x236a:	cmove	edi, eax
0x236d:	mov	byte ptr [rsp + 0xe], dil
0x2372:	jmp	0x21a8


0x233a:	lea	rax, [r15 + 1]
0x233e:	cmp	r13, rax
0x2341:	jbe	0x2349


0x2335:	mov	byte ptr [r14 + r15], 0x27
0x233a:	lea	rax, [r15 + 1]
0x233e:	cmp	r13, rax
0x2341:	jbe	0x2349


0x2b3b:	lea	rax, [r15 + 2]
0x2b3f:	cmp	r13, rax
0x2b42:	jbe	0x2b54


0x2b2e:	mov	eax, ebx
0x2b30:	shr	al, 6
0x2b33:	add	eax, 0x30
0x2b36:	mov	byte ptr [r14 + r15 + 1], al
0x2b3b:	lea	rax, [r15 + 2]
0x2b3f:	cmp	r13, rax
0x2b42:	jbe	0x2b54


0x2b05:	lea	rsi, [r15 + 2]
0x2b09:	cmp	r13, rsi
0x2b0c:	jbe	0x2b14


0x2aff:	mov	byte ptr [r14 + r15 + 1], 0x24
0x2b05:	lea	rsi, [r15 + 2]
0x2b09:	cmp	r13, rsi
0x2b0c:	jbe	0x2b14


0x2c32:	mov	r14, qword ptr [rsp + 0x40]
0x2c37:	mov	r13, qword ptr [rsp + 0x70]
0x2c3c:	mov	rbp, qword ptr [rsp + 0x30]
0x2c41:	mov	dword ptr [rsp + 8], 2
0x2c49:	cmp	byte ptr [rsp + 0xd], 0
0x2c4e:	je	0x2c60


0x2322:	xor	eax, 1
0x2325:	add	rbp, 1
0x2329:	and	eax, r8d
0x232c:	test	al, al
0x232e:	je	0x2350


0x2463:	cmp	dword ptr [rsp + 8], 2
0x2468:	sete	dl
0x246b:	cmp	byte ptr [rsp + 0xf], 0
0x2470:	mov	eax, edx
0x2472:	jne	0x2cc8


0x2b76:	movzx	ebx, byte ptr [rdi + rbp]
0x2b7a:	add	r15, 1
0x2b7e:	test	dl, dl
0x2b80:	jne	0x2ad0


0x2b72:	mov	byte ptr [r14 + r15], bl
0x2b76:	movzx	ebx, byte ptr [rdi + rbp]
0x2b7a:	add	r15, 1
0x2b7e:	test	dl, dl
0x2b80:	jne	0x2ad0


0x2bcf:	add	r15, 2
0x2bd3:	xor	r10d, r10d
0x2bd6:	xor	r8d, r8d
0x2bd9:	jmp	0x2b6d


0x2bc9:	mov	byte ptr [r14 + r15 + 1], 0x27
0x2bcf:	add	r15, 2
0x2bd3:	xor	r10d, r10d
0x2bd6:	xor	r8d, r8d
0x2bd9:	jmp	0x2b6d


0x21a8:	cmp	r11, rbp
0x21ab:	setne	r12b
0x21af:	cmp	r11, -1
0x21b3:	jne	0x21c2


0x2349:	add	r15, 2
0x234d:	xor	r8d, r8d
0x2350:	cmp	r15, r13
0x2353:	jae	0x2359


0x2343:	mov	byte ptr [r14 + r15 + 1], 0x27
0x2349:	add	r15, 2
0x234d:	xor	r8d, r8d
0x2350:	cmp	r15, r13
0x2353:	jae	0x2359


0x2b54:	and	ebx, 7
0x2b57:	add	rbp, 1
0x2b5b:	add	r15, 3
0x2b5f:	add	ebx, 0x30
0x2b62:	cmp	rbp, rcx
0x2b65:	jae	0x2350


0x2b44:	mov	eax, ebx
0x2b46:	shr	al, 3
0x2b49:	and	eax, 7
0x2b4c:	add	eax, 0x30
0x2b4f:	mov	byte ptr [r14 + r15 + 2], al
0x2b54:	and	ebx, 7
0x2b57:	add	rbp, 1
0x2b5b:	add	r15, 3
0x2b5f:	add	ebx, 0x30
0x2b62:	cmp	rbp, rcx
0x2b65:	jae	0x2350


0x2b14:	add	r15, 3
0x2b18:	mov	r8d, eax
0x2b1b:	cmp	r13, r15
0x2b1e:	jbe	0x2b25


0x2b0e:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2b14:	add	r15, 3
0x2b18:	mov	r8d, eax
0x2b1b:	cmp	r13, r15
0x2b1e:	jbe	0x2b25


0x2478:	mov	eax, r8d
0x247b:	xor	eax, 1
0x247e:	and	al, dl
0x2480:	je	0x24b1


0x2cc8:	mov	rbp, r11
0x2ccb:	jmp	0x2c49


0x2b6b:	mov	esi, edx
0x2b6d:	cmp	r13, r15
0x2b70:	jbe	0x2b76


0x24b1:	cmp	r13, r15
0x24b4:	jbe	0x24bb


0x2482:	cmp	r13, r15
0x2485:	jbe	0x248c


0x24bb:	add	r15, 1
0x24bf:	add	rbp, 1
0x24c3:	jmp	0x2350


0x24b6:	mov	byte ptr [r14 + r15], 0x5c
0x24bb:	add	r15, 1
0x24bf:	add	rbp, 1
0x24c3:	jmp	0x2350


0x248c:	lea	rdx, [r15 + 1]
0x2490:	cmp	r13, rdx
0x2493:	jbe	0x249b


0x2487:	mov	byte ptr [r14 + r15], 0x27
0x248c:	lea	rdx, [r15 + 1]
0x2490:	cmp	r13, rdx
0x2493:	jbe	0x249b


0x249b:	lea	rdx, [r15 + 2]
0x249f:	cmp	r13, rdx
0x24a2:	jbe	0x24aa


0x2495:	mov	byte ptr [r14 + r15 + 1], 0x24
0x249b:	lea	rdx, [r15 + 2]
0x249f:	cmp	r13, rdx
0x24a2:	jbe	0x24aa


0x24aa:	add	r15, 3
0x24ae:	mov	r8d, eax
0x24b1:	cmp	r13, r15
0x24b4:	jbe	0x24bb


0x24a4:	mov	byte ptr [r14 + r15 + 2], 0x27
0x24aa:	add	r15, 3
0x24ae:	mov	r8d, eax
0x24b1:	cmp	r13, r15
0x24b4:	jbe	0x24bb


0x2a55:	mov	rdi, qword ptr [rsp + 0x28]
0x2a5a:	test	eax, eax
0x2a5c:	mov	eax, 0
0x2a61:	cmove	r12d, eax
0x2a65:	add	rbx, r15
0x2a68:	call	0x15d0


0x2a6d:	test	eax, eax
0x2a6f:	je	0x29f3


0x29f3:	mov	rax, qword ptr [rsp + 0x10]
0x29f8:	lea	r14, [rbp + rbx]
0x29fd:	mov	rdx, qword ptr [rsp + 0x30]
0x2a02:	mov	rcx, qword ptr [rsp + 0x28]
0x2a07:	mov	rdi, qword ptr [rsp + 0x38]
0x2a0c:	lea	r13, [rax + r14]
0x2a10:	sub	rdx, r14
0x2a13:	mov	rsi, r13
0x2a16:	call	0x4790


0x221c:	movzx	r8d, byte ptr [rsp + 0x38]
0x2222:	movzx	r10d, byte ptr [rsp + 0x30]
0x2228:	mov	r11, rax
0x222b:	mov	r9, qword ptr [rsp + 0x28]
0x2230:	cmp	rbx, r11
0x2233:	mov	byte ptr [rsp + 0x28], r10b
0x2238:	ja	0x27f0


0x29a0:	movzx	r8d, byte ptr [rsp + 0x40]
0x29a6:	movzx	r10d, byte ptr [rsp + 0x38]
0x29ac:	mov	r11, rax
0x29af:	mov	r9, qword ptr [rsp + 0x30]
0x29b4:	lea	rax, [rsp + 0x9c]
0x29bc:	xor	ecx, ecx
0x29be:	mov	byte ptr [rsp + 0x7e], bl
0x29c2:	mov	byte ptr [rsp + 0x7d], r8b
0x29c7:	mov	rbx, rcx
0x29ca:	mov	qword ptr [rsp + 0x88], r9
0x29d2:	mov	qword ptr [rsp + 0x38], rax
0x29d7:	mov	byte ptr [rsp + 0x7f], r10b
0x29dc:	mov	qword ptr [rsp + 0x80], r15
0x29e4:	mov	qword ptr [rsp + 0x40], r14
0x29e9:	mov	qword ptr [rsp + 0x70], r13
0x29ee:	mov	qword ptr [rsp + 0x30], r11
0x29f3:	mov	rax, qword ptr [rsp + 0x10]
0x29f8:	lea	r14, [rbp + rbx]
0x29fd:	mov	rdx, qword ptr [rsp + 0x30]
0x2a02:	mov	rcx, qword ptr [rsp + 0x28]
0x2a07:	mov	rdi, qword ptr [rsp + 0x38]
0x2a0c:	lea	r13, [rax + r14]
0x2a10:	sub	rdx, r14
0x2a13:	mov	rsi, r13
0x2a16:	call	0x4790


0x25d8:	mov	rcx, qword ptr [rax]
0x25db:	movzx	edx, bl
0x25de:	movzx	r10d, byte ptr [rsp + 0x28]
0x25e4:	movzx	r8d, byte ptr [rsp + 0x30]
0x25ea:	mov	r11, qword ptr [rsp + 0x38]
0x25ef:	mov	edi, 1
0x25f4:	movzx	eax, word ptr [rcx + rdx*2]
0x25f8:	and	ax, 0x4000
0x25fc:	setne	r12b
0x2600:	sete	al
0x2603:	and	al, byte ptr [rsp + 0xd]
0x2607:	test	al, al
0x2609:	jne	0x2fa1


0x22b0:	xor	r10d, r10d
0x22b3:	cmp	r11, 1
0x22b7:	setne	al
0x22ba:	cmp	r11, -1
0x22be:	jne	0x22cc


0x22c0:	mov	rax, qword ptr [rsp + 0x10]
0x22c5:	cmp	byte ptr [rax + 1], 0
0x22c9:	setne	al
0x22cc:	cmp	dword ptr [rsp + 8], 2
0x22d1:	sete	dl
0x22d4:	test	al, al
0x22d6:	je	0x2528


0x22cc:	cmp	dword ptr [rsp + 8], 2
0x22d1:	sete	dl
0x22d4:	test	al, al
0x22d6:	je	0x2528


0x2528:	test	rbp, rbp
0x252b:	jne	0x22dc


0x22dc:	xor	r12d, r12d
0x22df:	xor	eax, eax
0x22e1:	nop	dword ptr [rax]
0x22e8:	cmp	byte ptr [rsp + 0xd], 1
0x22ed:	jne	0x2402


0x2531:	movzx	eax, byte ptr [rsp + 0xf]
0x2536:	and	al, dl
0x2538:	je	0x22e8


0x253e:	mov	rbp, r11
0x2541:	mov	dword ptr [rsp + 8], 2
0x2549:	jmp	0x2c49


0x2948:	cmp	byte ptr [rsp + 0xf], 0
0x294d:	jne	0x3170


0x2390:	cmp	eax, 5
0x2393:	je	0x2908


0x2953:	xor	r12d, r12d
0x2956:	xor	eax, eax
0x2958:	mov	ebx, 0x3f
0x295d:	jmp	0x2319


0x3170:	mov	rbp, r11
0x3173:	movzx	eax, byte ptr [rsp + 0xf]
0x3178:	jmp	0x2c49


0x2908:	test	byte ptr [rsp + 0x78], 4
0x290d:	je	0x2930


0x2399:	cmp	eax, 2
0x239c:	mov	ebx, 0x3f
0x23a1:	sete	dl
0x23a4:	xor	r12d, r12d
0x23a7:	xor	eax, eax
0x23a9:	jmp	0x22e8


0x2930:	xor	edx, edx
0x2932:	xor	r12d, r12d
0x2935:	xor	eax, eax
0x2937:	mov	ebx, 0x3f
0x293c:	jmp	0x22e8


0x290f:	lea	rcx, [rbp + 2]
0x2913:	cmp	rcx, r11
0x2916:	jae	0x2930


0x2918:	mov	rax, qword ptr [rsp + 0x10]
0x291d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x2922:	je	0x30b2


0x30b2:	movzx	ebx, byte ptr [rax + rcx]
0x30b6:	cmp	bl, 0x3e
0x30b9:	ja	0x2930


0x30bf:	movabs	rax, 0x7000a38200000000
0x30c9:	bt	rax, rbx
0x30cd:	jae	0x2930


0x30d3:	cmp	byte ptr [rsp + 0xf], 0
0x30d8:	jne	0x32c2


0x30de:	cmp	r13, r15
0x30e1:	jbe	0x30e8


0x32c2:	mov	rbp, r11
0x32c5:	jmp	0x2c60


0x30e8:	lea	rax, [r15 + 1]
0x30ec:	cmp	r13, rax
0x30ef:	jbe	0x30f7


0x30e3:	mov	byte ptr [r14 + r15], 0x3f
0x30e8:	lea	rax, [r15 + 1]
0x30ec:	cmp	r13, rax
0x30ef:	jbe	0x30f7


0x30f7:	lea	rax, [r15 + 2]
0x30fb:	cmp	r13, rax
0x30fe:	jbe	0x3106


0x30f1:	mov	byte ptr [r14 + r15 + 1], 0x22
0x30f7:	lea	rax, [r15 + 2]
0x30fb:	cmp	r13, rax
0x30fe:	jbe	0x3106


0x3106:	lea	rax, [r15 + 3]
0x310a:	cmp	r13, rax
0x310d:	jbe	0x3115


0x3100:	mov	byte ptr [r14 + r15 + 2], 0x22
0x3106:	lea	rax, [r15 + 3]
0x310a:	cmp	r13, rax
0x310d:	jbe	0x3115


0x3115:	add	r15, 4
0x3119:	xor	edx, edx
0x311b:	xor	r12d, r12d
0x311e:	xor	eax, eax
0x3120:	mov	rbp, rcx
0x3123:	jmp	0x22e8


0x310f:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x3115:	add	r15, 4
0x3119:	xor	edx, edx
0x311b:	xor	r12d, r12d
0x311e:	xor	eax, eax
0x3120:	mov	rbp, rcx
0x3123:	jmp	0x22e8


0x28c0:	cmp	byte ptr [rsp + 0xf], 0
0x28c5:	jne	0x3170


0x23be:	mov	byte ptr [rsp + 0x7c], r12b
0x23c3:	xor	edx, edx
0x23c5:	xor	eax, eax
0x23c7:	mov	ebx, 0x27
0x23cc:	jmp	0x22e8


0x28cb:	test	r13, r13
0x28ce:	je	0x2cd0


0x2cd0:	cmp	r13, r15
0x2cd3:	jbe	0x2cda


0x28d4:	xor	edx, edx
0x28d6:	cmp	qword ptr [rsp + 0x50], 0
0x28dc:	jne	0x2cd0


0x2cda:	lea	rax, [r15 + 1]
0x2cde:	cmp	r13, rax
0x2ce1:	jbe	0x2ce9


0x2cd5:	mov	byte ptr [r14 + r15], 0x27
0x2cda:	lea	rax, [r15 + 1]
0x2cde:	cmp	r13, rax
0x2ce1:	jbe	0x2ce9


0x28e2:	mov	qword ptr [rsp + 0x50], r13
0x28e7:	add	r15, 3
0x28eb:	xor	eax, eax
0x28ed:	mov	byte ptr [rsp + 0x7c], r12b
0x28f2:	xor	r8d, r8d
0x28f5:	mov	r13, rdx
0x28f8:	mov	ebx, 0x27
0x28fd:	jmp	0x2319


0x2ce9:	lea	rax, [r15 + 2]
0x2ced:	cmp	r13, rax
0x2cf0:	jbe	0x32e2


0x2ce3:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x2ce9:	lea	rax, [r15 + 2]
0x2ced:	cmp	r13, rax
0x2cf0:	jbe	0x32e2


0x32e2:	mov	rdx, r13
0x32e5:	mov	r13, qword ptr [rsp + 0x50]
0x32ea:	jmp	0x28e2


0x2cf6:	mov	rdx, r13
0x2cf9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2cff:	mov	r13, qword ptr [rsp + 0x50]
0x2d04:	jmp	0x28e2


0x23f4:	cmp	byte ptr [rsp + 0xd], 0
0x23f9:	jne	0x2460


0x23fb:	mov	ebx, edx
0x23fd:	xor	r12d, r12d
0x2400:	xor	eax, eax
0x2402:	cmp	byte ptr [rsp + 0xf], 0
0x2407:	jne	0x22fb


0x2460:	xor	r12d, r12d
0x2463:	cmp	dword ptr [rsp + 8], 2
0x2468:	sete	dl
0x246b:	cmp	byte ptr [rsp + 0xf], 0
0x2470:	mov	eax, edx
0x2472:	jne	0x2cc8


0x2800:	cmp	byte ptr [rsp + 0xf], 0
0x2805:	jne	0x3170


0x2433:	cmp	byte ptr [rsp + 0xd], 0
0x2438:	je	0x2650


0x280b:	add	rbp, 1
0x280f:	mov	eax, r8d
0x2812:	xor	r12d, r12d
0x2815:	mov	ebx, 0x5c
0x281a:	jmp	0x232c


0x2650:	mov	edx, 0x5c
0x2655:	mov	ebx, 0x5c
0x265a:	jmp	0x23f4


0x243e:	cmp	byte ptr [rsp + 0xf], 0
0x2443:	je	0x2650


0x2449:	cmp	qword ptr [rsp + 0x18], 0
0x244f:	jne	0x280b


0x2455:	mov	ebx, 0x5c
0x245a:	nop	word ptr [rax + rax]
0x2460:	xor	r12d, r12d
0x2463:	cmp	dword ptr [rsp + 8], 2
0x2468:	sete	dl
0x246b:	cmp	byte ptr [rsp + 0xf], 0
0x2470:	mov	eax, edx
0x2472:	jne	0x2cc8


0x24db:	xor	edx, edx
0x24dd:	test	byte ptr [rsp + 0x78], 1
0x24e2:	je	0x23fb


0x26a3:	cmp	dword ptr [rsp + 8], 2
0x26a8:	sete	dl
0x26ab:	cmp	byte ptr [rsp + 0xf], 0
0x26b0:	jne	0x324a


0x24e8:	add	rbp, 1
0x24ec:	jmp	0x21a8


0x26b6:	mov	eax, r8d
0x26b9:	mov	rcx, r15
0x26bc:	xor	eax, 1
0x26bf:	and	al, dl
0x26c1:	je	0x26f0


0x324a:	movzx	ebx, byte ptr [rsp + 0xf]
0x324f:	mov	rbp, r11
0x3252:	mov	eax, edx
0x3254:	mov	byte ptr [rsp + 0xd], bl
0x3258:	jmp	0x2c49


0x26f0:	cmp	r13, rcx
0x26f3:	jbe	0x26fa


0x26c3:	cmp	r13, r15
0x26c6:	jbe	0x26cd


0x26fa:	cmp	dword ptr [rsp + 8], 2
0x26ff:	lea	r15, [rcx + 1]
0x2703:	je	0x2d09


0x26f5:	mov	byte ptr [r14 + rcx], 0x5c
0x26fa:	cmp	dword ptr [rsp + 8], 2
0x26ff:	lea	r15, [rcx + 1]
0x2703:	je	0x2d09


0x26cd:	lea	rcx, [r15 + 1]
0x26d1:	cmp	r13, rcx
0x26d4:	jbe	0x26dc


0x26c8:	mov	byte ptr [r14 + r15], 0x27
0x26cd:	lea	rcx, [r15 + 1]
0x26d1:	cmp	r13, rcx
0x26d4:	jbe	0x26dc


0x2d09:	mov	eax, r12d
0x2d0c:	mov	ebx, 0x30
0x2d11:	xor	r12d, r12d
0x2d14:	jmp	0x2319


0x2709:	lea	rax, [rbp + 1]
0x270d:	cmp	rax, r11
0x2710:	jae	0x272b


0x26dc:	lea	rcx, [r15 + 2]
0x26e0:	cmp	r13, rcx
0x26e3:	ja	0x2d19


0x26d6:	mov	byte ptr [r14 + r15 + 1], 0x24
0x26dc:	lea	rcx, [r15 + 2]
0x26e0:	cmp	r13, rcx
0x26e3:	ja	0x2d19


0x2712:	mov	rax, qword ptr [rsp + 0x10]
0x2717:	movzx	eax, byte ptr [rax + rbp + 1]
0x271c:	mov	byte ptr [rsp + 0x28], al
0x2720:	sub	eax, 0x30
0x2723:	cmp	al, 9
0x2725:	jbe	0x2f59


0x272b:	mov	eax, r12d
0x272e:	mov	ebx, 0x30
0x2733:	xor	r12d, r12d
0x2736:	jmp	0x22e8


0x26e9:	lea	rcx, [r15 + 3]
0x26ed:	mov	r8d, eax
0x26f0:	cmp	r13, rcx
0x26f3:	jbe	0x26fa


0x2d19:	mov	byte ptr [r14 + r15 + 2], 0x27
0x2d1f:	jmp	0x26e9


0x2f59:	cmp	r13, r15
0x2f5c:	jbe	0x2f63


0x2f63:	lea	rax, [rcx + 2]
0x2f67:	cmp	r13, rax
0x2f6a:	jbe	0x2f72


0x2f5e:	mov	byte ptr [r14 + r15], 0x30
0x2f63:	lea	rax, [rcx + 2]
0x2f67:	cmp	r13, rax
0x2f6a:	jbe	0x2f72


0x2f72:	mov	eax, r12d
0x2f75:	lea	r15, [rcx + 3]
0x2f79:	xor	r12d, r12d
0x2f7c:	mov	ebx, 0x30
0x2f81:	jmp	0x22e8


0x2f6c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x2f72:	mov	eax, r12d
0x2f75:	lea	r15, [rcx + 3]
0x2f79:	xor	r12d, r12d
0x2f7c:	mov	ebx, 0x30
0x2f81:	jmp	0x22e8


0x23e2:	cmp	dword ptr [rsp + 8], 2
0x23e7:	sete	al
0x23ea:	and	al, byte ptr [rsp + 0xf]
0x23ee:	jne	0x253e


0x27a0:	mov	edx, 0xd
0x27a5:	xor	r10d, r10d
0x27a8:	mov	ebx, 0x72
0x27ad:	jmp	0x23e2


0x2d24:	test	ebx, ebx
0x2d26:	jne	0x2153


0x2d2c:	mov	byte ptr [rsp + 0xd], 1
0x2d31:	test	r13, r13
0x2d34:	jne	0x32ca


0x2d3a:	lea	rax, [rip + 0x225c]
0x2d41:	mov	qword ptr [rsp + 0x50], 0
0x2d4a:	mov	byte ptr [rsp + 0xe], 1
0x2d4f:	mov	byte ptr [rsp + 0x7c], 0
0x2d54:	xor	r12d, r12d
0x2d57:	mov	byte ptr [rsp + 0xf], 0
0x2d5c:	mov	qword ptr [rsp + 0x18], 1
0x2d65:	mov	qword ptr [rsp + 0x48], rax
0x2d6a:	mov	r15d, 1
0x2d70:	mov	dword ptr [rsp + 8], 2
0x2d78:	jmp	0x2193


0x32ca:	mov	byte ptr [rsp + 0xe], 1
0x32cf:	xor	eax, eax
0x32d1:	xor	r12d, r12d
0x32d4:	mov	qword ptr [rsp + 0x50], 0
0x32dd:	jmp	0x2884


0x2884:	lea	rbx, [rip + 0x2712]
0x288b:	mov	byte ptr [r14], 0x27
0x288f:	mov	dword ptr [rsp + 8], 2
0x2897:	mov	r15d, 1
0x289d:	mov	qword ptr [rsp + 0x18], 1
0x28a6:	mov	byte ptr [rsp + 0xf], 0
0x28ab:	mov	qword ptr [rsp + 0x48], rbx
0x28b0:	mov	byte ptr [rsp + 0x7c], al
0x28b4:	jmp	0x2193


0x2d88:	test	r13, r13
0x2d8b:	je	0x2fb6


0x317d:	lea	rax, [rip + 0x1e17]
0x3184:	mov	byte ptr [rsp + 0xe], 1
0x3189:	mov	byte ptr [rsp + 0x7c], 0
0x318e:	xor	r12d, r12d
0x3191:	mov	qword ptr [rsp + 0x50], 0
0x319a:	mov	byte ptr [rsp + 0xf], 1
0x319f:	mov	byte ptr [rsp + 0xd], 1
0x31a4:	mov	qword ptr [rsp + 0x18], 1
0x31ad:	xor	r15d, r15d
0x31b0:	mov	qword ptr [rsp + 0x48], rax
0x31b5:	jmp	0x2193


0x2fb6:	mov	qword ptr [rsp + 0x50], 0
0x2fbf:	mov	byte ptr [rsp + 0xe], 1
0x2fc4:	xor	r12d, r12d
0x2fc7:	mov	byte ptr [rsp + 0x7c], 0
0x2fcc:	jmp	0x2dab


0x2d91:	mov	byte ptr [r14], 0x22
0x2d95:	mov	byte ptr [rsp + 0xe], 1
0x2d9a:	xor	r12d, r12d
0x2d9d:	mov	byte ptr [rsp + 0x7c], 0
0x2da2:	mov	qword ptr [rsp + 0x50], 0
0x2dab:	lea	rax, [rip + 0x21e9]
0x2db2:	mov	byte ptr [rsp + 0xf], 0
0x2db7:	mov	byte ptr [rsp + 0xd], 1
0x2dbc:	mov	qword ptr [rsp + 0x18], 1
0x2dc5:	mov	r15d, 1
0x2dcb:	mov	qword ptr [rsp + 0x48], rax
0x2dd0:	jmp	0x2193


0x2dab:	lea	rax, [rip + 0x21e9]
0x2db2:	mov	byte ptr [rsp + 0xf], 0
0x2db7:	mov	byte ptr [rsp + 0xd], 1
0x2dbc:	mov	qword ptr [rsp + 0x18], 1
0x2dc5:	mov	r15d, 1
0x2dcb:	mov	qword ptr [rsp + 0x48], rax
0x2dd0:	jmp	0x2193


0x2dd5:	lea	rax, [rip + 0x21bf]
0x2ddc:	mov	byte ptr [rsp + 0xe], 1
0x2de1:	mov	byte ptr [rsp + 0x7c], 0
0x2de6:	xor	r12d, r12d
0x2de9:	mov	qword ptr [rsp + 0x50], 0
0x2df2:	mov	byte ptr [rsp + 0xf], 1
0x2df7:	mov	byte ptr [rsp + 0xd], 1
0x2dfc:	mov	qword ptr [rsp + 0x18], 1
0x2e05:	xor	r15d, r15d
0x2e08:	mov	qword ptr [rsp + 0x48], rax
0x2e0d:	mov	dword ptr [rsp + 8], 5
0x2e15:	jmp	0x2193


0x2e1a:	mov	byte ptr [rsp + 0xe], 1
0x2e1f:	mov	byte ptr [rsp + 0x7c], 0
0x2e24:	xor	r12d, r12d
0x2e27:	mov	qword ptr [rsp + 0x50], 0
0x2e30:	mov	byte ptr [rsp + 0xf], 0
0x2e35:	xor	r15d, r15d
0x2e38:	mov	byte ptr [rsp + 0xd], 1
0x2e3d:	mov	qword ptr [rsp + 0x18], 0
0x2e46:	mov	qword ptr [rsp + 0x48], 0
0x2e4f:	jmp	0x2193


0x2e54:	cmp	dword ptr [rsp + 8], 0xa
0x2e59:	je	0x2eb1


0x2eb1:	xor	r15d, r15d
0x2eb4:	test	ebx, ebx
0x2eb6:	je	0x307d


0x2e5b:	lea	rsi, [rip + 0x213d]
0x2e62:	xor	edi, edi
0x2e64:	mov	edx, 5
0x2e69:	call	0x13d0


0x307d:	mov	rdx, qword ptr [rsp + 0x68]
0x3082:	movzx	eax, byte ptr [rdx]
0x3085:	test	al, al
0x3087:	je	0x2ebc


0x2ebc:	test	ebx, ebx
0x2ebe:	mov	rbx, qword ptr [rsp + 0x60]
0x2ec3:	setne	byte ptr [rsp + 0xf]
0x2ec8:	xor	r12d, r12d
0x2ecb:	mov	rdi, rbx
0x2ece:	call	0x13f0


0x3099:	add	r15, 1
0x309d:	movzx	eax, byte ptr [rdx + r15]
0x30a2:	test	al, al
0x30a4:	jne	0x3090


0x3095:	mov	byte ptr [r14 + r15], al
0x3099:	add	r15, 1
0x309d:	movzx	eax, byte ptr [rdx + r15]
0x30a2:	test	al, al
0x30a4:	jne	0x3090


0x30a6:	jmp	0x2ebc


0x3090:	cmp	r13, r15
0x3093:	jbe	0x3099


0x2ed3:	mov	qword ptr [rsp + 0x48], rbx
0x2ed8:	mov	qword ptr [rsp + 0x18], rax
0x2edd:	mov	byte ptr [rsp + 0xe], 1
0x2ee2:	mov	byte ptr [rsp + 0x7c], 0
0x2ee7:	mov	qword ptr [rsp + 0x50], 0
0x2ef0:	mov	byte ptr [rsp + 0xd], 1
0x2ef5:	jmp	0x2193


0x2e6e:	mov	rcx, rax
0x2e71:	mov	qword ptr [rsp + 0x68], rax
0x2e76:	lea	rax, [rip + 0x2122]
0x2e7d:	cmp	rcx, rax
0x2e80:	je	0x321e


0x321e:	mov	esi, dword ptr [rsp + 8]
0x3222:	mov	rdi, rcx
0x3225:	call	0x1fd0


0x2e86:	lea	rsi, [rip + 0x2110]
0x2e8d:	xor	edi, edi
0x2e8f:	mov	edx, 5
0x2e94:	call	0x13d0


0x2e99:	mov	rcx, rax
0x2e9c:	mov	qword ptr [rsp + 0x60], rax
0x2ea1:	lea	rax, [rip + 0x20f5]
0x2ea8:	cmp	rcx, rax
0x2eab:	je	0x3234


0x3234:	mov	esi, dword ptr [rsp + 8]
0x3238:	mov	rdi, rcx
0x323b:	call	0x1fd0


0x3240:	mov	qword ptr [rsp + 0x60], rax
0x3245:	jmp	0x2eb1


0x322a:	mov	qword ptr [rsp + 0x68], rax
0x322f:	jmp	0x2e86


0x2efa:	mov	byte ptr [rsp + 0xe], 1
0x2eff:	mov	byte ptr [rsp + 0x7c], 0
0x2f04:	xor	r12d, r12d
0x2f07:	mov	qword ptr [rsp + 0x50], 0
0x2f10:	mov	byte ptr [rsp + 0xf], 0
0x2f15:	xor	r15d, r15d
0x2f18:	mov	byte ptr [rsp + 0xd], 0
0x2f1d:	mov	qword ptr [rsp + 0x18], 0
0x2f26:	mov	qword ptr [rsp + 0x48], 0
0x2f2f:	jmp	0x2193


0x2f34:	mov	byte ptr [rsp + 0xe], 1
0x2f39:	mov	byte ptr [rsp + 0x7c], 0
0x2f3e:	xor	r12d, r12d
0x2f41:	mov	qword ptr [rsp + 0x50], 0
0x2f4a:	mov	byte ptr [rsp + 0xf], 1
0x2f4f:	mov	byte ptr [rsp + 0xd], 1
0x2f54:	jmp	0x2173


0x2173:	lea	rax, [rip + 0x2e23]
0x217a:	mov	qword ptr [rsp + 0x18], 1
0x2183:	xor	r15d, r15d
0x2186:	mov	dword ptr [rsp + 8], 2
0x218e:	mov	qword ptr [rsp + 0x48], rax
0x2193:	xor	r11d, r11d
0x2196:	mov	rax, rbp
0x2199:	mov	r8d, r12d
0x219c:	mov	rbp, r11
0x219f:	mov	r11, rax
0x21a2:	nop	word ptr [rax + rax]
0x21a8:	cmp	r11, rbp
0x21ab:	setne	r12b
0x21af:	cmp	r11, -1
0x21b3:	jne	0x21c2


0x3128:	test	ebx, ebx
0x312a:	je	0x32b8


0x32b8:	mov	byte ptr [rsp + 0xd], 0
0x32bd:	jmp	0x2d31


0x3130:	lea	rax, [rip + 0x1e66]
0x3137:	mov	byte ptr [rsp + 0xe], 1
0x313c:	mov	byte ptr [rsp + 0x7c], 0
0x3141:	xor	r12d, r12d
0x3144:	mov	qword ptr [rsp + 0x50], 0
0x314d:	mov	byte ptr [rsp + 0xf], 1
0x3152:	mov	byte ptr [rsp + 0xd], 0
0x3157:	mov	qword ptr [rsp + 0x18], 1
0x3160:	xor	r15d, r15d
0x3163:	mov	qword ptr [rsp + 0x48], rax
0x3168:	jmp	0x2193


0x2d31:	test	r13, r13
0x2d34:	jne	0x32ca


0x32f4:	nop	
0x32f6:	nop	word ptr cs:[rax + rax]


0x34ab:	nop	dword ptr [rax + rax]


0x34e6:	nop	word ptr cs:[rax + rax]


0x3501:	nop	dword ptr [rax + rax]
0x3506:	nop	word ptr cs:[rax + rax]


0x3521:	nop	dword ptr [rax + rax]
0x3526:	nop	word ptr cs:[rax + rax]


0x3565:	nop	
0x3566:	nop	word ptr cs:[rax + rax]


0x3585:	nop	
0x3586:	nop	word ptr cs:[rax + rax]


0x3634:	nop	
0x3636:	nop	word ptr cs:[rax + rax]


0x3723:	nop	dword ptr [rax]
0x3726:	nop	word ptr cs:[rax + rax]


0x373a:	nop	word ptr [rax + rax]


0x37d3:	nop	dword ptr [rax]
0x37d6:	nop	word ptr cs:[rax + rax]


0x37f3:	nop	dword ptr [rax]
0x37f6:	nop	word ptr cs:[rax + rax]


0x380c:	nop	dword ptr [rax]


0x3828:	nop	dword ptr [rax + rax]


0x3844:	nop	
0x3846:	nop	word ptr cs:[rax + rax]


0x38de:	nop	


0x396a:	nop	word ptr [rax + rax]


0x397c:	nop	dword ptr [rax]


0x398f:	nop	


0x3a28:	nop	dword ptr [rax + rax]


0x3a51:	nop	dword ptr [rax + rax]
0x3a56:	nop	word ptr cs:[rax + rax]


0x3a6a:	nop	word ptr [rax + rax]


0x3afe:	nop	


0x3b91:	nop	dword ptr [rax + rax]
0x3b96:	nop	word ptr cs:[rax + rax]


0x3bac:	nop	dword ptr [rax]


0x3bc7:	nop	word ptr [rax + rax]


0x3be3:	nop	dword ptr [rax]
0x3be6:	nop	word ptr cs:[rax + rax]


0x3bfc:	nop	dword ptr [rax]


0x3c14:	nop	
0x3c16:	nop	word ptr cs:[rax + rax]


0x3c33:	nop	dword ptr [rax]
0x3c36:	nop	word ptr cs:[rax + rax]


0x3c58:	nop	dword ptr [rax + rax]


0x4077:	nop	word ptr [rax + rax]


0x4118:	nop	dword ptr [rax + rax]


0x41f5:	nop	
0x41f6:	nop	word ptr cs:[rax + rax]


0x429a:	nop	word ptr [rax + rax]


0x42c4:	nop	
0x42c6:	nop	word ptr cs:[rax + rax]


0x42d2:	nop	dword ptr [rax]
0x42d6:	nop	word ptr cs:[rax + rax]


0x4316:	nop	word ptr cs:[rax + rax]


0x4344:	nop	
0x4346:	nop	word ptr cs:[rax + rax]


0x43d2:	nop	dword ptr [rax]
0x43d6:	nop	word ptr cs:[rax + rax]


0x442a:	nop	word ptr [rax + rax]


0x4447:	nop	word ptr [rax + rax]


0x447e:	nop	


0x44a8:	nop	dword ptr [rax + rax]


0x44c3:	nop	word ptr cs:[rax + rax]
0x44cd:	nop	dword ptr [rax]


0x4505:	nop	word ptr cs:[rax + rax]
0x450f:	nop	


0x478e:	nop	


0x4813:	nop	word ptr cs:[rax + rax]
0x481d:	nop	dword ptr [rax]


0x489d:	nop	dword ptr [rax]


0x493c:	nop	dword ptr [rax]


0x49bb:	nop	dword ptr [rax + rax]


0x4a57:	nop	word ptr [rax + rax]


0x4ac5:	nop	
0x4ac6:	nop	word ptr cs:[rax + rax]


0x4ad2:	nop	word ptr cs:[rax + rax]
0x4adc:	nop	dword ptr [rax]


0x2380:	xor	r10d, r10d
0x2383:	mov	eax, dword ptr [rsp + 8]
0x2387:	cmp	eax, 2
0x238a:	je	0x2948


0x23b0:	xor	r10d, r10d
0x23b3:	cmp	dword ptr [rsp + 8], 2
0x23b8:	je	0x28c0


0x23d8:	mov	edx, 9
0x23dd:	mov	ebx, 0x74
0x23e2:	cmp	dword ptr [rsp + 8], 2
0x23e7:	sete	al
0x23ea:	and	al, byte ptr [rsp + 0xf]
0x23ee:	jne	0x253e


0x2418:	mov	edx, 8
0x241d:	mov	ebx, 0x62
0x2422:	jmp	0x23f4


0x2428:	cmp	dword ptr [rsp + 8], 2
0x242d:	je	0x2800


0x24d0:	cmp	byte ptr [rsp + 0xd], 0
0x24d5:	jne	0x26a3


0x24f8:	cmp	dword ptr [rsp + 8], 2
0x24fd:	sete	dl
0x2500:	xor	eax, eax
0x2502:	jmp	0x22e8


0x2510:	mov	edx, 7
0x2515:	mov	ebx, 0x61
0x251a:	jmp	0x23f4


0x2520:	cmp	dword ptr [rsp + 8], 2
0x2525:	sete	dl
0x2528:	test	rbp, rbp
0x252b:	jne	0x22dc


0x2550:	cmp	dword ptr [rsp + 8], 2
0x2555:	sete	dl
0x2558:	xor	r12d, r12d
0x255b:	jmp	0x2531


0x2560:	cmp	dword ptr [rsp + 8], 2
0x2565:	mov	ebx, 0x20
0x256a:	sete	dl
0x256d:	jmp	0x2531


0x2570:	mov	edx, 0xd
0x2575:	mov	ebx, 0x72
0x257a:	jmp	0x23e2


0x2580:	mov	edx, 0xc
0x2585:	mov	ebx, 0x66
0x258a:	jmp	0x23f4


0x2590:	mov	edx, 0xb
0x2595:	mov	ebx, 0x76
0x259a:	jmp	0x23f4


0x25a0:	mov	edx, 0xa
0x25a5:	mov	ebx, 0x6e
0x25aa:	jmp	0x23e2


0x2640:	xor	r10d, r10d
0x2643:	cmp	byte ptr [rsp + 0xd], 0
0x2648:	jne	0x243e


0x2660:	mov	edx, 0xc
0x2665:	xor	r10d, r10d
0x2668:	mov	ebx, 0x66
0x266d:	jmp	0x23f4


0x2678:	mov	edx, 0xa
0x267d:	xor	r10d, r10d
0x2680:	mov	ebx, 0x6e
0x2685:	jmp	0x23e2


0x2690:	mov	ebx, 0x61
0x2695:	jmp	0x2460


0x26a0:	xor	r10d, r10d
0x26a3:	cmp	dword ptr [rsp + 8], 2
0x26a8:	sete	dl
0x26ab:	cmp	byte ptr [rsp + 0xf], 0
0x26b0:	jne	0x324a


0x2740:	cmp	dword ptr [rsp + 8], 2
0x2745:	mov	r12d, r10d
0x2748:	sete	dl
0x274b:	xor	r10d, r10d
0x274e:	xor	eax, eax
0x2750:	jmp	0x22e8


0x2758:	cmp	dword ptr [rsp + 8], 2
0x275d:	sete	dl
0x2760:	xor	r10d, r10d
0x2763:	jmp	0x2528


0x2770:	cmp	dword ptr [rsp + 8], 2
0x2775:	sete	dl
0x2778:	xor	r10d, r10d
0x277b:	xor	r12d, r12d
0x277e:	jmp	0x2531


0x2788:	cmp	dword ptr [rsp + 8], 2
0x278d:	mov	r12d, r10d
0x2790:	mov	ebx, 0x20
0x2795:	sete	dl
0x2798:	xor	r10d, r10d
0x279b:	jmp	0x2531


0x27b8:	mov	ebx, 0x76
0x27bd:	jmp	0x2460


0x27c8:	mov	edx, 9
0x27cd:	xor	r10d, r10d
0x27d0:	mov	ebx, 0x74
0x27d5:	jmp	0x23e2


0x27e0:	mov	ebx, 0x62
0x27e5:	jmp	0x2460


0x2d80:	test	ebx, ebx
0x2d82:	jne	0x317d


0x16f9:	nop	dword ptr [rax]


0x1a16:	nop	word ptr cs:[rax + rax]


0x1a67:	nop	word ptr [rax + rax]


0x1ab1:	nop	dword ptr [rax]


0x200c:	nop	dword ptr [rax]


0x205d:	nop	dword ptr [rax]


0x2288:	nop	dword ptr [rax + rax]


0x2377:	nop	word ptr [rax + rax]


0x23ae:	nop	


0x23d1:	nop	dword ptr [rax]


0x2412:	nop	word ptr [rax + rax]


0x2424:	nop	dword ptr [rax]


0x24c8:	nop	dword ptr [rax + rax]


0x24f1:	nop	dword ptr [rax]


0x2507:	nop	word ptr [rax + rax]


0x251f:	nop	


0x254e:	nop	


0x255d:	nop	dword ptr [rax]


0x256f:	nop	


0x257f:	nop	


0x258f:	nop	


0x259f:	nop	


0x25af:	nop	


0x261c:	nop	dword ptr [rax]


0x263c:	nop	dword ptr [rax]


0x264e:	nop	


0x265f:	nop	


0x2672:	nop	word ptr [rax + rax]


0x268a:	nop	word ptr [rax + rax]


0x269a:	nop	word ptr [rax + rax]


0x273b:	nop	dword ptr [rax + rax]


0x2755:	nop	dword ptr [rax]


0x2768:	nop	dword ptr [rax + rax]


0x2783:	nop	dword ptr [rax + rax]


0x27b2:	nop	word ptr [rax + rax]


0x27c2:	nop	word ptr [rax + rax]


0x27da:	nop	word ptr [rax + rax]


0x27ea:	nop	word ptr [rax + rax]


0x27f8:	nop	dword ptr [rax + rax]


0x281f:	nop	


0x28b9:	nop	dword ptr [rax]


0x2902:	nop	word ptr [rax + rax]


0x2928:	nop	dword ptr [rax + rax]


0x2941:	nop	dword ptr [rax]


0x2962:	nop	word ptr [rax + rax]


0x2ac8:	nop	dword ptr [rax + rax]


0x2bdb:	nop	dword ptr [rax + rax]


0x2bfe:	nop	


0x2cc5:	nop	dword ptr [rax]


0x2d7d:	nop	dword ptr [rax]


0x2f86:	nop	word ptr cs:[rax + rax]


0x3019:	nop	dword ptr [rax]


0x308d:	nop	dword ptr [rax]


0x316d:	nop	dword ptr [rax]


0x347b:	nop	dword ptr [rax + rax]


0x3d06:	nop	word ptr cs:[rax + rax]


0x3d95:	nop	dword ptr [rax]


0x3db6:	nop	word ptr cs:[rax + rax]


0x3e15:	nop	dword ptr [rax]


0x3e51:	nop	dword ptr [rax]


0x3e98:	nop	dword ptr [rax + rax]


0x3ee7:	nop	word ptr [rax + rax]


0x3f44:	nop	dword ptr [rax]


0x3f72:	nop	word ptr [rax + rax]


0x4026:	nop	word ptr cs:[rax + rax]


0x4089:	nop	dword ptr [rax]


0x4302:	nop	word ptr [rax + rax]


0x4389:	nop	dword ptr [rax]


0x43b4:	nop	dword ptr [rax]


0x440d:	nop	dword ptr [rax]


0x45ab:	nop	dword ptr [rax + rax]


0x45d6:	nop	word ptr cs:[rax + rax]


0x460f:	nop	


0x4659:	nop	dword ptr [rax]


0x467b:	nop	dword ptr [rax + rax]


0x4721:	nop	dword ptr [rax]


0x4854:	nop	dword ptr [rax]


0x4871:	nop	dword ptr [rax]


0x4882:	nop	word ptr [rax + rax]


0x48da:	nop	word ptr [rax + rax]


0x4926:	nop	word ptr cs:[rax + rax]


0x4985:	nop	dword ptr [rax]


0x49e3:	nop	dword ptr [rax + rax]


0x4a0f:	nop	


