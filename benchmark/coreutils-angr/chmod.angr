0x9be0:	sub	rsp, 8
0x9be4:	add	rsp, 8
0x9be8:	ret	


0x9bd0:	mov	rdx, qword ptr [rip + 0x204431]
0x9bd7:	xor	esi, esi
0x9bd9:	jmp	0x1a20


0x9bc0:	ret	


0x9b50:	push	r15
0x9b52:	push	r14
0x9b54:	mov	r15, rdx
0x9b57:	push	r13
0x9b59:	push	r12
0x9b5b:	lea	r12, [rip + 0x203ece]
0x9b62:	push	rbp
0x9b63:	lea	rbp, [rip + 0x203ece]
0x9b6a:	push	rbx
0x9b6b:	mov	r13d, edi
0x9b6e:	mov	r14, rsi
0x9b71:	sub	rbp, r12
0x9b74:	sub	rsp, 8
0x9b78:	sar	rbp, 3
0x9b7c:	call	0x16c8


0x9b40:	mov	edx, 3
0x9b45:	xor	esi, esi
0x9b47:	xor	eax, eax
0x9b49:	jmp	0x9820


0x9ae0:	mov	rax, qword ptr [rdi + 8]
0x9ae4:	cmp	qword ptr [rdi + 0x10], rax
0x9ae8:	je	0x9af0


0x9aa0:	test	rdi, rdi
0x9aa3:	push	rbx
0x9aa4:	mov	rbx, rdi
0x9aa7:	je	0x9aba


0x9820:	push	r12
0x9822:	push	rbp
0x9823:	mov	ebp, edi
0x9825:	push	rbx
0x9826:	sub	rsp, 0x50
0x982a:	mov	rax, qword ptr fs:[0x28]
0x9833:	mov	qword ptr [rsp + 0x18], rax
0x9838:	xor	eax, eax
0x983a:	lea	rax, [rsp + 0x70]
0x983f:	test	esi, esi
0x9841:	mov	qword ptr [rsp + 0x30], rdx
0x9846:	mov	qword ptr [rsp + 0x38], rcx
0x984b:	mov	qword ptr [rsp + 0x40], r8
0x9850:	mov	qword ptr [rsp + 8], rax
0x9855:	lea	rax, [rsp + 0x20]
0x985a:	mov	qword ptr [rsp + 0x48], r9
0x985f:	mov	dword ptr [rsp], 0x10
0x9866:	mov	qword ptr [rsp + 0x10], rax
0x986b:	je	0x9a72


0x97a0:	push	r12
0x97a2:	push	rbp
0x97a3:	push	rbx
0x97a4:	mov	rbx, rdi
0x97a7:	call	0x18f0


0x9760:	push	r13
0x9762:	push	r12
0x9764:	push	rbp
0x9765:	push	rbx
0x9766:	mov	ebx, edi
0x9768:	sub	rsp, 8
0x976c:	cmp	edi, 2
0x976f:	ja	0x9792


0x96e0:	push	r13
0x96e2:	push	r12
0x96e4:	or	edx, 0x90900
0x96ea:	push	rbp
0x96eb:	push	rbx
0x96ec:	xor	eax, eax
0x96ee:	mov	r12, rcx
0x96f1:	sub	rsp, 8
0x96f5:	call	0x9670


0x9670:	sub	rsp, 0x58
0x9674:	mov	qword ptr [rsp + 0x38], rcx
0x9679:	xor	ecx, ecx
0x967b:	mov	rax, qword ptr fs:[0x28]
0x9684:	mov	qword ptr [rsp + 0x18], rax
0x9689:	xor	eax, eax
0x968b:	test	dl, 0x40
0x968e:	jne	0x96b8


0x9630:	sub	rsp, 8
0x9634:	mov	edi, 0xe
0x9639:	call	0x1950


0x95f0:	cmp	byte ptr [rdi + 0x1c], 0
0x95f4:	jne	0x9625


0x95b0:	movzx	edx, byte ptr [rdi + 0x1c]
0x95b4:	mov	ecx, dword ptr [rdi + 0x14]
0x95b7:	xor	edx, 1
0x95ba:	movzx	edx, dl
0x95bd:	add	ecx, edx
0x95bf:	and	ecx, 3
0x95c2:	mov	eax, ecx
0x95c4:	lea	r8, [rdi + rax*4]
0x95c8:	mov	eax, dword ptr [r8]
0x95cb:	mov	dword ptr [r8], esi
0x95ce:	mov	esi, dword ptr [rdi + 0x18]
0x95d1:	mov	dword ptr [rdi + 0x14], ecx
0x95d4:	cmp	esi, ecx
0x95d6:	jne	0x95e0


0x95a0:	movzx	eax, byte ptr [rdi + 0x1c]
0x95a4:	ret	


0x9580:	mov	byte ptr [rdi + 0x1c], 1
0x9584:	mov	qword ptr [rdi + 0x14], 0
0x958c:	mov	dword ptr [rdi], esi
0x958e:	mov	dword ptr [rdi + 4], esi
0x9591:	mov	dword ptr [rdi + 8], esi
0x9594:	mov	dword ptr [rdi + 0xc], esi
0x9597:	mov	dword ptr [rdi + 0x10], esi
0x959a:	ret	


0x9370:	push	r12
0x9372:	push	rbp
0x9373:	mov	ecx, 1
0x9378:	push	rbx
0x9379:	mov	rbx, rdi
0x937c:	sub	rsp, 0x10
0x9380:	mov	rdx, rsp
0x9383:	mov	rax, qword ptr fs:[0x28]
0x938c:	mov	qword ptr [rsp + 8], rax
0x9391:	xor	eax, eax
0x9393:	call	0x8390


0x9310:	push	rbx
0x9311:	mov	rbx, rsi
0x9314:	sub	rsp, 0x10
0x9318:	mov	rdx, rsp
0x931b:	mov	rax, qword ptr fs:[0x28]
0x9324:	mov	qword ptr [rsp + 8], rax
0x9329:	xor	eax, eax
0x932b:	call	0x9080


0x9080:	push	r13
0x9082:	push	r12
0x9084:	push	rbp
0x9085:	push	rbx
0x9086:	sub	rsp, 0x18
0x908a:	mov	rax, qword ptr fs:[0x28]
0x9093:	mov	qword ptr [rsp + 8], rax
0x9098:	xor	eax, eax
0x909a:	test	rsi, rsi
0x909d:	je	0x925d


0x8e40:	push	r12
0x8e42:	push	rbp
0x8e43:	mov	rbp, rdi
0x8e46:	push	rbx
0x8e47:	sub	rsp, 0x60
0x8e4b:	mov	r12, qword ptr [rdi + 0x28]
0x8e4f:	mov	rax, qword ptr fs:[0x28]
0x8e58:	mov	qword ptr [rsp + 0x58], rax
0x8e5d:	xor	eax, eax
0x8e5f:	cmp	byte ptr [r12 + 0x10], 0
0x8e65:	jne	0x8eb8


0x8d60:	push	r12
0x8d62:	push	rbp
0x8d63:	mov	r12, rdi
0x8d66:	push	rbx
0x8d67:	cmp	qword ptr [rdi + 0x40], 0
0x8d6c:	mov	rbp, qword ptr [rdi]
0x8d6f:	mov	rax, qword ptr [rdi + 8]
0x8d73:	je	0x8dc3


0x8cd0:	push	r12
0x8cd2:	push	rbp
0x8cd3:	mov	rbp, rdi
0x8cd6:	push	rbx
0x8cd7:	mov	r12, qword ptr [rdi]
0x8cda:	cmp	r12, qword ptr [rdi + 8]
0x8cde:	jae	0x8d4b


0x8b10:	push	r15
0x8b12:	push	r14
0x8b14:	lea	rax, [rip - 0x7db]
0x8b1b:	push	r13
0x8b1d:	push	r12
0x8b1f:	mov	r12, rdx
0x8b22:	push	rbp
0x8b23:	push	rbx
0x8b24:	mov	r13, rcx
0x8b27:	mov	rbp, rdi
0x8b2a:	mov	edi, 0x50
0x8b2f:	mov	r15, rsi
0x8b32:	sub	rsp, 8
0x8b36:	test	rdx, rdx
0x8b39:	mov	r14, r8
0x8b3c:	cmove	r12, rax
0x8b40:	lea	rax, [rip - 0x7f7]
0x8b47:	test	rcx, rcx
0x8b4a:	cmove	r13, rax
0x8b4e:	call	0x1920


0x8af0:	movabs	rax, 0x3f80000000000000
0x8afa:	mov	byte ptr [rdi + 0x10], 0
0x8afe:	mov	qword ptr [rdi], rax
0x8b01:	movabs	rax, 0x3fb4fdf43f4ccccd
0x8b0b:	mov	qword ptr [rdi + 8], rax
0x8b0f:	ret	


0x8ab0:	movzx	ecx, byte ptr [rdi]
0x8ab3:	xor	edx, edx
0x8ab5:	test	cl, cl
0x8ab7:	je	0x8add


0x8a40:	push	r15
0x8a42:	push	r14
0x8a44:	push	r13
0x8a46:	push	r12
0x8a48:	push	rbp
0x8a49:	push	rbx
0x8a4a:	sub	rsp, 8
0x8a4e:	mov	r14, qword ptr [rdi]
0x8a51:	cmp	qword ptr [rdi + 8], r14
0x8a55:	jbe	0x8aa6


0x89d0:	mov	r9, qword ptr [rdi]
0x89d3:	cmp	qword ptr [rdi + 8], r9
0x89d7:	jbe	0x8a32


0x8950:	push	rbp
0x8951:	push	rbx
0x8952:	mov	rbp, rdi
0x8955:	mov	rbx, rsi
0x8958:	sub	rsp, 8
0x895c:	call	0x8360


0x8900:	cmp	qword ptr [rdi + 0x20], 0
0x8905:	je	0x8933


0x88a0:	push	r12
0x88a2:	push	rbp
0x88a3:	mov	r12, rdi
0x88a6:	push	rbx
0x88a7:	mov	rbp, rsi
0x88aa:	call	0x8360


0x8750:	push	r13
0x8752:	push	r12
0x8754:	mov	r12, rsi
0x8757:	push	rbp
0x8758:	push	rbx
0x8759:	xor	ebx, ebx
0x875b:	sub	rsp, 8
0x875f:	mov	rsi, qword ptr [rdi]
0x8762:	mov	rcx, qword ptr [rdi + 0x20]
0x8766:	mov	rbp, qword ptr [rdi + 0x10]
0x876a:	mov	r13, qword ptr [rdi + 0x18]
0x876e:	mov	rdi, qword ptr [rdi + 8]
0x8772:	cmp	rsi, rdi
0x8775:	jae	0x87b5


0x86f0:	mov	rcx, qword ptr [rdi]
0x86f3:	mov	r8, qword ptr [rdi + 8]
0x86f7:	xor	edx, edx
0x86f9:	xor	esi, esi
0x86fb:	cmp	rcx, r8
0x86fe:	jae	0x8736


0x86a0:	mov	rsi, qword ptr [rdi]
0x86a3:	mov	rdi, qword ptr [rdi + 8]
0x86a7:	xor	eax, eax
0x86a9:	cmp	rsi, rdi
0x86ac:	jae	0x86e7


0x8690:	mov	rax, qword ptr [rdi + 0x20]
0x8694:	ret	


0x8680:	mov	rax, qword ptr [rdi + 0x18]
0x8684:	ret	


0x8670:	mov	rax, qword ptr [rdi + 0x10]
0x8674:	ret	


0x8530:	push	r15
0x8532:	push	r14
0x8534:	push	r13
0x8536:	push	r12
0x8538:	push	rbp
0x8539:	push	rbx
0x853a:	sub	rsp, 8
0x853e:	mov	r12, qword ptr [rsi]
0x8541:	cmp	r12, qword ptr [rsi + 8]
0x8545:	jae	0x8628


0x84b0:	mov	rdx, qword ptr [rdi]
0x84b3:	lea	rcx, [rip + 0x2b66]
0x84ba:	mov	eax, 1
0x84bf:	cmp	rdx, rcx
0x84c2:	je	0x8525


0x8390:	push	r14
0x8392:	push	r13
0x8394:	mov	r14, rdx
0x8397:	push	r12
0x8399:	push	rbp
0x839a:	mov	r12, rdi
0x839d:	push	rbx
0x839e:	mov	rbp, rsi
0x83a1:	mov	r13d, ecx
0x83a4:	call	0x8360


0x8360:	push	rbx
0x8361:	mov	rbx, rdi
0x8364:	mov	rdi, rsi
0x8367:	mov	rsi, qword ptr [rbx + 0x10]
0x836b:	call	qword ptr [rbx + 0x30]


0x8350:	cmp	rdi, rsi
0x8353:	sete	al
0x8356:	ret	


0x8340:	mov	rax, rdi
0x8343:	xor	edx, edx
0x8345:	ror	rax, 3
0x8349:	div	rsi
0x834c:	mov	rax, rdx
0x834f:	ret	


0x82a0:	cmp	rdi, 0xa
0x82a4:	mov	eax, 0xa
0x82a9:	movabs	r9, 0xaaaaaaaaaaaaaaab
0x82b3:	cmovb	rdi, rax
0x82b7:	or	rdi, 1
0x82bb:	cmp	rdi, -1
0x82bf:	je	0x832f


0x8240:	sub	rsp, 8
0x8244:	xor	esi, esi
0x8246:	call	0x19a0


0x81d0:	sub	rsp, 0x58
0x81d4:	mov	qword ptr [rsp + 0x30], rdx
0x81d9:	xor	edx, edx
0x81db:	mov	rax, qword ptr fs:[0x28]
0x81e4:	mov	qword ptr [rsp + 0x18], rax
0x81e9:	xor	eax, eax
0x81eb:	test	sil, 0x40
0x81ef:	jne	0x8218


0x8140:	cmp	dword ptr [rdi + 0x18], 0x95f616
0x8147:	jne	0x81a7


0x8130:	mov	qword ptr [rdi + 0x10], 0
0x8138:	mov	dword ptr [rdi + 0x18], 0x95f616
0x813f:	ret	


0x80b0:	push	r12
0x80b2:	push	rbp
0x80b3:	mov	rbp, rdi
0x80b6:	push	rbx
0x80b7:	call	0x1730


0x8020:	push	r13
0x8022:	push	r12
0x8024:	mov	r13, rsi
0x8027:	push	rbp
0x8028:	push	rbx
0x8029:	mov	rbx, rdi
0x802c:	mov	r12, rdx
0x802f:	sub	rsp, 0x18
0x8033:	mov	rax, qword ptr fs:[0x28]
0x803c:	mov	qword ptr [rsp + 8], rax
0x8041:	xor	eax, eax
0x8043:	lea	rax, [rsp + 4]
0x8048:	test	rdi, rdi
0x804b:	cmove	rbx, rax
0x804f:	mov	rdi, rbx
0x8052:	call	0x1800


0x7ed0:	push	r14
0x7ed2:	push	r13
0x7ed4:	push	r12
0x7ed6:	push	rbp
0x7ed7:	mov	r12d, esi
0x7eda:	push	rbx
0x7edb:	mov	rbx, rdi
0x7ede:	call	0x1700


0x7ea0:	cmp	edx, 4
0x7ea3:	ja	0x7eb0


0x7720:	push	r14
0x7722:	push	r13
0x7724:	push	r12
0x7726:	push	rbp
0x7727:	push	rbx
0x7728:	mov	rbp, qword ptr [rdi]
0x772b:	test	rbp, rbp
0x772e:	je	0x783e


0x7590:	push	r12
0x7592:	push	rbp
0x7593:	mov	rbp, rdi
0x7596:	push	rbx
0x7597:	mov	rdi, qword ptr [rdi]
0x759a:	test	rdi, rdi
0x759d:	je	0x75e3


0x71e0:	push	r15
0x71e2:	push	r14
0x71e4:	push	r13
0x71e6:	push	r12
0x71e8:	push	rbp
0x71e9:	push	rbx
0x71ea:	sub	rsp, 0x28
0x71ee:	test	esi, 0xfffff000
0x71f4:	jne	0x7578


0x6800:	push	r15
0x6802:	push	r14
0x6804:	mov	r15, rdi
0x6807:	push	r13
0x6809:	push	r12
0x680b:	push	rbp
0x680c:	push	rbx
0x680d:	sub	rsp, 0x78
0x6811:	mov	rbp, qword ptr [rdi]
0x6814:	mov	rax, qword ptr fs:[0x28]
0x681d:	mov	qword ptr [rsp + 0x68], rax
0x6822:	xor	eax, eax
0x6824:	mov	dword ptr [rsp + 0x58], esi
0x6828:	mov	rax, qword ptr [rbp + 0x18]
0x682c:	test	rax, rax
0x682f:	mov	qword ptr [rsp + 0x50], rax
0x6834:	je	0x6c70


0x6740:	sub	rsp, 0x28
0x6744:	mov	rcx, rsi
0x6747:	mov	rax, qword ptr fs:[0x28]
0x6750:	mov	qword ptr [rsp + 0x18], rax
0x6755:	xor	eax, eax
0x6757:	and	edi, 0x102
0x675d:	jne	0x67a0


0x6690:	and	edi, 0x102
0x6696:	push	r12
0x6698:	mov	r12, rsi
0x669b:	push	rbp
0x669c:	push	rbx
0x669d:	mov	rbx, rdx
0x66a0:	je	0x6710


0x6410:	push	r15
0x6412:	push	r14
0x6414:	mov	r14, rsi
0x6417:	push	r13
0x6419:	push	r12
0x641b:	mov	r13, rdi
0x641e:	push	rbp
0x641f:	push	rbx
0x6420:	mov	r12d, edx
0x6423:	mov	rbp, rcx
0x6426:	sub	rsp, 0xb8
0x642d:	mov	ebx, dword ptr [rdi + 0x48]
0x6430:	mov	rax, qword ptr fs:[0x28]
0x6439:	mov	qword ptr [rsp + 0xa8], rax
0x6441:	xor	eax, eax
0x6443:	mov	r9d, ebx
0x6446:	and	r9d, 4
0x644a:	test	rcx, rcx
0x644d:	je	0x6500


0x63d0:	mov	rax, rdx
0x63d3:	mov	edx, esi
0x63d5:	shl	edx, 0xd
0x63d8:	and	edx, 0x20000
0x63de:	or	edx, 0x90900
0x63e4:	and	esi, 0x200
0x63ea:	jne	0x6400


0x6360:	and	edi, 0x102
0x6366:	push	rbx
0x6367:	mov	rbx, rsi
0x636a:	je	0x63a0


0x62f0:	push	rbx
0x62f1:	mov	rcx, qword ptr [rsi]
0x62f4:	mov	rbx, rdi
0x62f7:	mov	rdi, qword ptr [rdi]
0x62fa:	lea	rax, [rcx + rdx + 0x100]
0x6302:	cmp	rcx, rax
0x6305:	ja	0x6328


0x6290:	push	rbp
0x6291:	push	rbx
0x6292:	mov	rbx, rdi
0x6295:	sub	rsp, 8
0x6299:	mov	edx, dword ptr [rdi + 0x48]
0x629c:	mov	ebp, edx
0x629e:	and	ebp, 4
0x62a1:	jne	0x62e8


0x6220:	push	rbp
0x6221:	push	rbx
0x6222:	mov	ebp, esi
0x6224:	mov	rbx, rdi
0x6227:	sub	rsp, 8
0x622b:	mov	esi, dword ptr [rdi + 0x2c]
0x622e:	cmp	esi, ebp
0x6230:	jne	0x6237


0x61b0:	sub	rsp, 8
0x61b4:	call	0x6080


0x6080:	push	r13
0x6082:	push	r12
0x6084:	push	rbp
0x6085:	push	rbx
0x6086:	sub	rsp, 0x98
0x608d:	mov	rbx, qword ptr [rdi + 0x50]
0x6091:	mov	rax, qword ptr fs:[0x28]
0x609a:	mov	qword ptr [rsp + 0x88], rax
0x60a2:	xor	eax, eax
0x60a4:	test	byte ptr [rbx + 0x49], 2
0x60a8:	je	0x6112


0x6040:	push	rbx
0x6041:	mov	rbx, rdi
0x6044:	jmp	0x605c


0x5ff0:	test	rdi, rdi
0x5ff3:	je	0x6030


0x5f60:	push	r13
0x5f62:	push	r12
0x5f64:	mov	r12, rdi
0x5f67:	push	rbp
0x5f68:	lea	rdi, [rdx + 0x110]
0x5f6f:	push	rbx
0x5f70:	mov	r13, rsi
0x5f73:	mov	rbp, rdx
0x5f76:	sub	rsp, 8
0x5f7a:	and	rdi, 0xfffffffffffffff8
0x5f7e:	call	0x1920


0x5e50:	push	r13
0x5e52:	push	r12
0x5e54:	mov	r12, rdx
0x5e57:	push	rbp
0x5e58:	push	rbx
0x5e59:	mov	rbp, rdi
0x5e5c:	mov	rbx, rsi
0x5e5f:	sub	rsp, 8
0x5e63:	cmp	qword ptr [rbp + 0x38], rdx
0x5e67:	mov	r13, qword ptr [rdi + 0x40]
0x5e6b:	mov	rdi, qword ptr [rdi + 0x10]
0x5e6f:	jae	0x5ea5


0x5c80:	push	r12
0x5c82:	push	rbp
0x5c83:	mov	rbp, rsi
0x5c86:	push	rbx
0x5c87:	cmp	qword ptr [rbp + 0x58], 0
0x5c8c:	lea	rbx, [rsi + 0x78]
0x5c90:	mov	r12, rdi
0x5c93:	mov	eax, dword ptr [rdi + 0x48]
0x5c96:	mov	rsi, qword ptr [rsi + 0x30]
0x5c9a:	jne	0x5d00


0x5c50:	mov	rdx, qword ptr [rdi]
0x5c53:	mov	rax, qword ptr [rsi]
0x5c56:	mov	rax, qword ptr [rax + 0x80]
0x5c5d:	cmp	qword ptr [rdx + 0x80], rax
0x5c64:	jb	0x5c70


0x5c40:	mov	rax, qword ptr [rsi]
0x5c43:	cmp	qword ptr [rdi], rax
0x5c46:	sete	al
0x5c49:	ret	


0x5c30:	mov	rax, qword ptr [rdi]
0x5c33:	xor	edx, edx
0x5c35:	div	rsi
0x5c38:	mov	rax, rdx
0x5c3b:	ret	


0x5c20:	mov	rax, qword ptr [rdi + 8]
0x5c24:	xor	edx, edx
0x5c26:	div	rsi
0x5c29:	mov	rax, rdx
0x5c2c:	ret	


0x5c00:	xor	eax, eax
0x5c02:	mov	rdx, qword ptr [rsi + 8]
0x5c06:	cmp	qword ptr [rdi + 8], rdx
0x5c0a:	je	0x5c10


0x5bd0:	mov	edx, dword ptr [rdi + 0x48]
0x5bd3:	mov	eax, 1
0x5bd8:	and	edx, 0x11
0x5bdb:	cmp	edx, 0x10
0x5bde:	je	0x5be7


0x5b80:	sub	rsp, 8
0x5b84:	or	esi, 0x200
0x5b8a:	call	0x71e0


0x5b40:	lea	rsi, [rip + 0x5388]
0x5b47:	sub	rsp, 8
0x5b4b:	mov	edx, 5
0x5b50:	xor	edi, edi
0x5b52:	call	0x1790


0x5b20:	push	rbx
0x5b21:	mov	rbx, rdi
0x5b24:	call	0x17b0


0x5af0:	push	rbp
0x5af1:	push	rbx
0x5af2:	mov	rbp, rdi
0x5af5:	mov	rdi, rsi
0x5af8:	mov	rbx, rsi
0x5afb:	sub	rsp, 8
0x5aff:	call	0x58f0


0x5ac0:	mov	rax, rdi
0x5ac3:	sub	rsp, 8
0x5ac7:	mul	rsi
0x5aca:	seto	dl
0x5acd:	test	rax, rax
0x5ad0:	js	0x5ae9


0x5aa0:	push	rbx
0x5aa1:	mov	rbx, rdi
0x5aa4:	call	0x58f0


0x5a50:	test	rdi, rdi
0x5a53:	mov	rax, qword ptr [rsi]
0x5a56:	je	0x5a80


0x59c0:	test	rdi, rdi
0x59c3:	mov	r9, rdx
0x59c6:	mov	rcx, qword ptr [rsi]
0x59c9:	je	0x5a00


0x5990:	mov	rax, rsi
0x5993:	mul	rdx
0x5996:	mov	rsi, rax
0x5999:	seto	al
0x599c:	test	rsi, rsi
0x599f:	js	0x59ab


0x5950:	test	rsi, rsi
0x5953:	push	rbx
0x5954:	mov	rbx, rsi
0x5957:	jne	0x595e


0x5940:	jmp	0x58f0


0x5910:	mov	rax, rdi
0x5913:	mul	rsi
0x5916:	mov	rdi, rax
0x5919:	seto	al
0x591c:	test	rdi, rdi
0x591f:	js	0x592b


0x58f0:	push	rbx
0x58f1:	mov	rbx, rdi
0x58f4:	call	0x1920


0x5870:	push	rbx
0x5871:	lea	rsi, [rip + 0x534a]
0x5878:	mov	edx, 5
0x587d:	xor	edi, edi
0x587f:	call	0x1790


0x5790:	push	rbp
0x5791:	push	rbx
0x5792:	mov	r10d, 0x20
0x5798:	xor	r11d, r11d
0x579b:	sub	rsp, 0xb8
0x57a2:	mov	rax, qword ptr fs:[0x28]
0x57ab:	mov	qword ptr [rsp + 0x78], rax
0x57b0:	xor	eax, eax
0x57b2:	lea	rax, [rsp + 0xd0]
0x57ba:	mov	qword ptr [rsp + 0xa0], r8
0x57c2:	lea	rbx, [rsp + 0xd0]
0x57ca:	lea	r8, [rsp + 0x20]
0x57cf:	mov	qword ptr [rsp + 0xa8], r9
0x57d7:	mov	dword ptr [rsp + 8], 0x20
0x57df:	mov	qword ptr [rsp + 0x10], rax
0x57e4:	lea	rax, [rsp + 0x80]
0x57ec:	xor	r9d, r9d
0x57ef:	mov	qword ptr [rsp + 0x18], rax
0x57f4:	mov	rbp, rax
0x57f7:	nop	word ptr [rax + rax]
0x5800:	cmp	r10d, 0x2f
0x5804:	ja	0x585c


0x5710:	sub	rsp, 0x68
0x5714:	mov	r10, r8
0x5717:	xor	r9d, r9d
0x571a:	mov	rax, qword ptr fs:[0x28]
0x5723:	mov	qword ptr [rsp + 0x58], rax
0x5728:	xor	eax, eax
0x572a:	mov	r8, rsp
0x572d:	nop	dword ptr [rax]
0x5730:	mov	eax, dword ptr [r10]
0x5733:	cmp	eax, 0x2f
0x5736:	ja	0x577a


0x56f0:	xor	r9d, r9d
0x56f3:	cmp	qword ptr [r8], 0
0x56f7:	je	0x570b


0x52d0:	push	r15
0x52d2:	push	r14
0x52d4:	push	r13
0x52d6:	push	r12
0x52d8:	mov	r12, r9
0x52db:	push	rbp
0x52dc:	push	rbx
0x52dd:	mov	rbp, rdi
0x52e0:	mov	rbx, r8
0x52e3:	sub	rsp, 0x28
0x52e7:	test	rsi, rsi
0x52ea:	je	0x5408


0x5250:	push	rbx
0x5251:	lea	rsi, [rip + 0x542e]
0x5258:	mov	rbx, rdi
0x525b:	mov	edi, 1
0x5260:	sub	rsp, 0xa0
0x5267:	mov	rdx, rsp
0x526a:	mov	rax, qword ptr fs:[0x28]
0x5273:	mov	qword ptr [rsp + 0x98], rax
0x527b:	xor	eax, eax
0x527d:	call	0x17c0


0x5230:	lea	rcx, [rip + 0x208e09]
0x5237:	mov	rsi, rdi
0x523a:	mov	rdx, -1
0x5241:	xor	edi, edi
0x5243:	jmp	0x48f0


0x5210:	lea	rcx, [rip + 0x208e29]
0x5217:	mov	rdx, -1
0x521e:	jmp	0x48f0


0x51f0:	lea	rcx, [rip + 0x208e49]
0x51f7:	mov	rdx, rsi
0x51fa:	mov	rsi, rdi
0x51fd:	xor	edi, edi
0x51ff:	jmp	0x48f0


0x51e0:	lea	rcx, [rip + 0x208e59]
0x51e7:	jmp	0x48f0


0x51c0:	mov	r8, rcx
0x51c3:	mov	rcx, rdx
0x51c6:	mov	rdx, rsi
0x51c9:	mov	rsi, rdi
0x51cc:	xor	edi, edi
0x51ce:	jmp	0x50f0


0x51a0:	mov	rcx, rdx
0x51a3:	mov	r8, -1
0x51aa:	mov	rdx, rsi
0x51ad:	mov	rsi, rdi
0x51b0:	xor	edi, edi
0x51b2:	jmp	0x50f0


0x5190:	mov	r8, -1
0x5197:	jmp	0x50f0


0x50f0:	sub	rsp, 0x48
0x50f4:	mov	r9, rcx
0x50f7:	mov	rcx, qword ptr [rip + 0x209172]
0x50fe:	movdqa	xmm0, xmmword ptr [rip + 0x20913a]
0x5106:	mov	rax, qword ptr fs:[0x28]
0x510f:	mov	qword ptr [rsp + 0x38], rax
0x5114:	xor	eax, eax
0x5116:	movaps	xmmword ptr [rsp], xmm0
0x511a:	test	rsi, rsi
0x511d:	mov	qword ptr [rsp + 0x30], rcx
0x5122:	mov	dword ptr [rsp], 0xa
0x5129:	movdqa	xmm0, xmmword ptr [rip + 0x20911f]
0x5131:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x5136:	movdqa	xmm0, xmmword ptr [rip + 0x209122]
0x513e:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x5143:	je	0x5177


0x5060:	sub	rsp, 0x48
0x5064:	mov	rax, rdx
0x5067:	mov	rdx, qword ptr fs:[0x28]
0x5070:	mov	qword ptr [rsp + 0x38], rdx
0x5075:	xor	edx, edx
0x5077:	cmp	esi, 0xa
0x507a:	je	0x50e4


0x5050:	mov	edx, 0x3a
0x5055:	jmp	0x4f80


0x5030:	mov	edx, 0x3a
0x5035:	mov	rsi, -1
0x503c:	jmp	0x4f80


0x5020:	movsx	edx, sil
0x5024:	mov	rsi, -1
0x502b:	jmp	0x4f80


0x4f80:	sub	rsp, 0x48
0x4f84:	mov	ecx, edx
0x4f86:	mov	rax, qword ptr fs:[0x28]
0x4f8f:	mov	qword ptr [rsp + 0x38], rax
0x4f94:	xor	eax, eax
0x4f96:	mov	rax, qword ptr [rip + 0x2092d3]
0x4f9d:	mov	r8, rsp
0x4fa0:	and	ecx, 0x1f
0x4fa3:	movdqa	xmm0, xmmword ptr [rip + 0x209295]
0x4fab:	mov	qword ptr [rsp + 0x30], rax
0x4fb0:	mov	eax, edx
0x4fb2:	movaps	xmmword ptr [rsp], xmm0
0x4fb6:	shr	al, 5
0x4fb9:	movzx	eax, al
0x4fbc:	lea	r9, [r8 + rax*4 + 8]
0x4fc1:	movdqa	xmm0, xmmword ptr [rip + 0x209287]
0x4fc9:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x4fce:	movdqa	xmm0, xmmword ptr [rip + 0x20928a]
0x4fd6:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x4fdb:	mov	edx, dword ptr [r9]
0x4fde:	mov	eax, edx
0x4fe0:	shr	eax, cl
0x4fe2:	not	eax
0x4fe4:	and	eax, 1
0x4fe7:	shl	eax, cl
0x4fe9:	mov	rcx, r8
0x4fec:	xor	eax, edx
0x4fee:	mov	rdx, rsi
0x4ff1:	mov	rsi, rdi
0x4ff4:	mov	dword ptr [r9], eax
0x4ff7:	xor	edi, edi
0x4ff9:	call	0x48f0


0x4f70:	mov	rcx, rdx
0x4f73:	mov	rdx, rsi
0x4f76:	mov	esi, edi
0x4f78:	xor	edi, edi
0x4f7a:	jmp	0x4ed0


0x4f60:	mov	rdx, rsi
0x4f63:	mov	esi, edi
0x4f65:	xor	edi, edi
0x4f67:	jmp	0x4e40


0x4ed0:	sub	rsp, 0x48
0x4ed4:	mov	rax, rdx
0x4ed7:	mov	rdx, rcx
0x4eda:	mov	rcx, qword ptr fs:[0x28]
0x4ee3:	mov	qword ptr [rsp + 0x38], rcx
0x4ee8:	xor	ecx, ecx
0x4eea:	cmp	esi, 0xa
0x4eed:	je	0x4f50


0x4e40:	sub	rsp, 0x48
0x4e44:	mov	rax, rdx
0x4e47:	mov	rdx, qword ptr fs:[0x28]
0x4e50:	mov	qword ptr [rsp + 0x38], rdx
0x4e55:	xor	edx, edx
0x4e57:	cmp	esi, 0xa
0x4e5a:	je	0x4ec4


0x4e20:	lea	rcx, [rip + 0x209419]
0x4e27:	mov	rdx, rsi
0x4e2a:	mov	rsi, rdi
0x4e2d:	xor	edi, edi
0x4e2f:	jmp	0x48f0


0x4e00:	lea	rcx, [rip + 0x209439]
0x4e07:	mov	rsi, rdi
0x4e0a:	mov	rdx, -1
0x4e11:	xor	edi, edi
0x4e13:	jmp	0x48f0


0x4df0:	lea	rcx, [rip + 0x209449]
0x4df7:	jmp	0x48f0


0x4dd0:	lea	rcx, [rip + 0x209469]
0x4dd7:	mov	rdx, -1
0x4dde:	jmp	0x48f0


0x4d30:	mov	eax, dword ptr [rip + 0x209342]
0x4d36:	push	r12
0x4d38:	mov	r12, qword ptr [rip + 0x209341]
0x4d3f:	push	rbp
0x4d40:	push	rbx
0x4d41:	cmp	eax, 1
0x4d44:	jle	0x4d71


0x4d20:	mov	rcx, rdx
0x4d23:	xor	edx, edx
0x4d25:	jmp	0x4c30


0x4c30:	push	r15
0x4c32:	push	r14
0x4c34:	lea	rax, [rip + 0x209605]
0x4c3b:	push	r13
0x4c3d:	push	r12
0x4c3f:	mov	r12, rdx
0x4c42:	push	rbp
0x4c43:	push	rbx
0x4c44:	mov	rbx, rcx
0x4c47:	mov	r14, rdi
0x4c4a:	mov	r15, rsi
0x4c4d:	sub	rsp, 0x38
0x4c51:	test	rcx, rcx
0x4c54:	cmove	rbx, rax
0x4c58:	xor	ebp, ebp
0x4c5a:	call	0x1700


0x4bb0:	push	r15
0x4bb2:	push	r14
0x4bb4:	lea	rax, [rip + 0x209685]
0x4bbb:	push	r13
0x4bbd:	push	r12
0x4bbf:	mov	r13, rdi
0x4bc2:	push	rbp
0x4bc3:	push	rbx
0x4bc4:	mov	rbx, r8
0x4bc7:	mov	r14, rsi
0x4bca:	mov	r15, rdx
0x4bcd:	sub	rsp, 0x18
0x4bd1:	test	r8, r8
0x4bd4:	cmove	rbx, rax
0x4bd8:	mov	qword ptr [rsp + 8], rcx
0x4bdd:	call	0x1700


0x4b80:	lea	rax, [rip + 0x2096b9]
0x4b87:	test	rdi, rdi
0x4b8a:	cmove	rdi, rax
0x4b8e:	test	rsi, rsi
0x4b91:	mov	dword ptr [rdi], 0xa
0x4b97:	je	0x4ba7


0x4b60:	lea	rax, [rip + 0x2096d9]
0x4b67:	test	rdi, rdi
0x4b6a:	cmove	rdi, rax
0x4b6e:	mov	eax, dword ptr [rdi + 4]
0x4b71:	mov	dword ptr [rdi + 4], esi
0x4b74:	ret	


0x4b20:	lea	rax, [rip + 0x209719]
0x4b27:	test	rdi, rdi
0x4b2a:	mov	ecx, esi
0x4b2c:	cmove	rdi, rax
0x4b30:	mov	eax, esi
0x4b32:	and	ecx, 0x1f
0x4b35:	shr	al, 5
0x4b38:	movzx	eax, al
0x4b3b:	lea	rdi, [rdi + rax*4 + 8]
0x4b40:	mov	esi, dword ptr [rdi]
0x4b42:	mov	eax, esi
0x4b44:	shr	eax, cl
0x4b46:	xor	edx, eax
0x4b48:	and	eax, 1
0x4b4b:	and	edx, 1
0x4b4e:	shl	edx, cl
0x4b50:	xor	edx, esi
0x4b52:	mov	dword ptr [rdi], edx
0x4b54:	ret	


0x4b00:	lea	rax, [rip + 0x209739]
0x4b07:	test	rdi, rdi
0x4b0a:	cmove	rdi, rax
0x4b0e:	mov	dword ptr [rdi], esi
0x4b10:	ret	


0x4ae0:	lea	rax, [rip + 0x209759]
0x4ae7:	test	rdi, rdi
0x4aea:	cmove	rdi, rax
0x4aee:	mov	eax, dword ptr [rdi]
0x4af0:	ret	


0x4aa0:	push	r12
0x4aa2:	push	rbp
0x4aa3:	push	rbx
0x4aa4:	mov	rbx, rdi
0x4aa7:	call	0x1700


0x48f0:	push	r15
0x48f2:	push	r14
0x48f4:	movsxd	r15, edi
0x48f7:	push	r13
0x48f9:	push	r12
0x48fb:	mov	r14, rdx
0x48fe:	push	rbp
0x48ff:	push	rbx
0x4900:	mov	rbp, rcx
0x4903:	sub	rsp, 0x28
0x4907:	mov	qword ptr [rsp + 8], rsi
0x490c:	call	0x1700


0x36b0:	push	r15
0x36b2:	push	r14
0x36b4:	mov	r15d, r8d
0x36b7:	push	r13
0x36b9:	push	r12
0x36bb:	mov	r14, rdi
0x36be:	push	rbp
0x36bf:	push	rbx
0x36c0:	mov	ebx, r9d
0x36c3:	mov	r13, rsi
0x36c6:	mov	rbp, rcx
0x36c9:	and	ebx, 2
0x36cc:	sub	rsp, 0xb8
0x36d3:	mov	rax, qword ptr [rsp + 0xf0]
0x36db:	mov	qword ptr [rsp + 0x10], rdx
0x36e0:	mov	dword ptr [rsp + 8], r8d
0x36e5:	mov	dword ptr [rsp + 0x78], r9d
0x36ea:	mov	qword ptr [rsp + 0x20], rax
0x36ef:	mov	rax, qword ptr [rsp + 0xf8]
0x36f7:	mov	qword ptr [rsp + 0x68], rax
0x36fc:	mov	rax, qword ptr [rsp + 0x100]
0x3704:	mov	qword ptr [rsp + 0x60], rax
0x3709:	mov	rax, qword ptr fs:[0x28]
0x3712:	mov	qword ptr [rsp + 0xa8], rax
0x371a:	xor	eax, eax
0x371c:	call	0x17a0


0x35c0:	push	rbp
0x35c1:	push	rbx
0x35c2:	mov	rbp, rdi
0x35c5:	mov	ebx, esi
0x35c7:	sub	rsp, 8
0x35cb:	call	0x9630


0x3520:	test	rdi, rdi
0x3523:	push	rbx
0x3524:	je	0x359d


0x33b0:	movzx	r10d, byte ptr [rcx + 1]
0x33b5:	mov	eax, edi
0x33b7:	and	eax, 0xfff
0x33bc:	test	r10b, r10b
0x33bf:	je	0x3510


0x3320:	push	rbx
0x3321:	mov	rsi, rdi
0x3324:	mov	edi, 1
0x3329:	sub	rsp, 0xa0
0x3330:	mov	rdx, rsp
0x3333:	mov	rax, qword ptr fs:[0x28]
0x333c:	mov	qword ptr [rsp + 0x98], rax
0x3344:	xor	eax, eax
0x3346:	call	0x1900


0x2f70:	push	rbp
0x2f71:	push	rbx
0x2f72:	mov	rbx, rdi
0x2f75:	sub	rsp, 8
0x2f79:	movsx	eax, byte ptr [rdi]
0x2f7c:	lea	edx, [rax - 0x30]
0x2f7f:	cmp	dl, 7
0x2f82:	jbe	0x3038


0x2f60:	mov	edi, dword ptr [rdi + 0x18]
0x2f63:	jmp	0x2dd0


0x2dd0:	mov	edx, edi
0x2dd2:	mov	eax, 0x2d
0x2dd7:	and	edx, 0xf000
0x2ddd:	cmp	edx, 0x8000
0x2de3:	je	0x2e40


0x2d20:	push	rbp
0x2d21:	push	rbx
0x2d22:	sub	rsp, 8
0x2d26:	mov	rdi, qword ptr [rip + 0x20b37b]
0x2d2d:	call	0x80b0


0x2d10:	mov	byte ptr [rip + 0x20b401], dil
0x2d17:	ret	


0x2d00:	mov	qword ptr [rip + 0x20b419], rdi
0x2d07:	ret	


0x28f0:	push	r13
0x28f2:	push	r12
0x28f4:	mov	edx, 5
0x28f9:	push	rbp
0x28fa:	push	rbx
0x28fb:	mov	ebp, edi
0x28fd:	sub	rsp, 0x88
0x2904:	mov	rbx, qword ptr [rip + 0x20b81d]
0x290b:	mov	rax, qword ptr fs:[0x28]
0x2914:	mov	qword ptr [rsp + 0x78], rax
0x2919:	xor	eax, eax
0x291b:	test	edi, edi
0x291d:	je	0x294d


0x28e0:	push	rbp
0x28e1:	mov	rbp, rsp
0x28e4:	pop	rbp
0x28e5:	jmp	0x2850


0x28a0:	cmp	byte ptr [rip + 0x20b841], 0
0x28a7:	jne	0x28d8


0x2850:	lea	rdi, [rip + 0x20b849]
0x2857:	lea	rsi, [rip + 0x20b842]
0x285e:	push	rbp
0x285f:	sub	rsi, rdi
0x2862:	mov	rbp, rsp
0x2865:	sar	rsi, 3
0x2869:	mov	rax, rsi
0x286c:	shr	rax, 0x3f
0x2870:	add	rsi, rax
0x2873:	sar	rsi, 1
0x2876:	je	0x2890


0x2810:	lea	rdi, [rip + 0x20b889]
0x2817:	push	rbp
0x2818:	lea	rax, [rip + 0x20b881]
0x281f:	cmp	rax, rdi
0x2822:	mov	rbp, rsp
0x2825:	je	0x2840


0x27e0:	xor	ebp, ebp
0x27e2:	mov	r9, rdx
0x27e5:	pop	rsi
0x27e6:	mov	rdx, rsp
0x27e9:	and	rsp, 0xfffffffffffffff0
0x27ed:	push	rax
0x27ee:	push	rsp
0x27ef:	lea	r8, [rip + 0x73ca]
0x27f6:	lea	rcx, [rip + 0x7353]
0x27fd:	lea	rdi, [rip - 0xd64]
0x2804:	call	qword ptr [rip + 0x20b7d6]


0x1aa0:	push	r15
0x1aa2:	push	r14
0x1aa4:	xor	r15d, r15d
0x1aa7:	push	r13
0x1aa9:	push	r12
0x1aab:	xor	r14d, r14d
0x1aae:	push	rbp
0x1aaf:	push	rbx
0x1ab0:	movsxd	rbp, edi
0x1ab3:	mov	rbx, rsi
0x1ab6:	xor	r12d, r12d
0x1ab9:	xor	r13d, r13d
0x1abc:	sub	rsp, 0xf8
0x1ac3:	mov	rdi, qword ptr [rsi]
0x1ac6:	mov	rax, qword ptr fs:[0x28]
0x1acf:	mov	qword ptr [rsp + 0xe8], rax
0x1ad7:	xor	eax, eax
0x1ad9:	mov	qword ptr [rsp + 0x38], 0
0x1ae2:	call	0x3520


0x16c8:	sub	rsp, 8
0x16cc:	mov	rax, qword ptr [rip + 0x20c915]
0x16d3:	test	rax, rax
0x16d6:	je	0x16da


0x1a20:	jmp	qword ptr [rip + 0x20c572]


0x9af0:	mov	rax, qword ptr [rdi + 0x20]
0x9af4:	cmp	qword ptr [rdi + 0x28], rax
0x9af8:	jne	0x9aea


0x9aea:	jmp	0x19f0


0x9aba:	mov	rdi, rbx
0x9abd:	pop	rbx
0x9abe:	jmp	0x1930


0x9aa9:	call	0x1970


0x9a72:	mov	rax, qword ptr [rsp + 0x10]
0x9a77:	xor	esi, esi
0x9a79:	mov	edx, dword ptr [rax + 0x10]
0x9a7c:	xor	eax, eax
0x9a7e:	call	0x1750


0x9871:	cmp	esi, 0x406
0x9877:	jne	0x98c0


0x18f0:	jmp	qword ptr [rip + 0x20c60a]


0x9771:	call	0x9b40


0x9792:	add	rsp, 8
0x9796:	mov	eax, ebx
0x9798:	pop	rbx
0x9799:	pop	rbp
0x979a:	pop	r12
0x979c:	pop	r13
0x979e:	ret	


0x9690:	xor	eax, eax
0x9692:	call	0x17d0


0x96b8:	lea	rax, [rsp + 0x60]
0x96bd:	mov	dword ptr [rsp], 0x18
0x96c4:	mov	ecx, dword ptr [rsp + 0x38]
0x96c8:	mov	qword ptr [rsp + 8], rax
0x96cd:	lea	rax, [rsp + 0x20]
0x96d2:	mov	qword ptr [rsp + 0x10], rax
0x96d7:	jmp	0x9690


0x1950:	jmp	qword ptr [rip + 0x20c5da]


0x95f6:	mov	eax, dword ptr [rdi + 0x14]
0x95f9:	mov	esi, dword ptr [rdi + 0x10]
0x95fc:	lea	rcx, [rdi + rax*4]
0x9600:	mov	rdx, rax
0x9603:	mov	eax, dword ptr [rcx]
0x9605:	mov	dword ptr [rcx], esi
0x9607:	cmp	edx, dword ptr [rdi + 0x18]
0x960a:	je	0x9620


0x9625:	sub	rsp, 8
0x9629:	call	0x16f0


0x95d8:	add	edx, esi
0x95da:	and	edx, 3
0x95dd:	mov	dword ptr [rdi + 0x18], edx
0x95e0:	mov	byte ptr [rdi + 0x1c], 0
0x95e4:	ret	


0x95e0:	mov	byte ptr [rdi + 0x1c], 0
0x95e4:	ret	


0x925d:	call	0x16f0


0x90a3:	mov	r12, rsp
0x90a6:	xor	ecx, ecx
0x90a8:	mov	r13, rdx
0x90ab:	mov	rdx, r12
0x90ae:	mov	rbx, rdi
0x90b1:	mov	rbp, rsi
0x90b4:	call	0x8390


0x8e67:	test	rsi, rsi
0x8e6a:	js	0x8fe8


0x8eb8:	mov	rdi, rsi
0x8ebb:	call	0x82a0


0x8dc3:	cmp	rbp, rax
0x8dc6:	jae	0x8dfc


0x8d75:	cmp	qword ptr [rdi + 0x20], 0
0x8d7a:	je	0x8dc3


0x8ce0:	cmp	qword ptr [r12], 0
0x8ce5:	je	0x8d41


0x8d4b:	mov	qword ptr [rbp + 0x18], 0
0x8d53:	mov	qword ptr [rbp + 0x20], 0
0x8d5b:	pop	rbx
0x8d5c:	pop	rbp
0x8d5d:	pop	r12
0x8d5f:	ret	


0x1920:	jmp	qword ptr [rip + 0x20c5f2]


0x8add:	mov	rax, rdx
0x8ae0:	ret	


0x8aa6:	xor	ebp, ebp
0x8aa8:	jmp	0x8a94


0x8a57:	mov	r13, rdx
0x8a5a:	mov	r12, rsi
0x8a5d:	mov	r15, rdi
0x8a60:	xor	ebp, ebp
0x8a62:	mov	rdi, qword ptr [r14]
0x8a65:	test	rdi, rdi
0x8a68:	je	0x8a8a


0x8a32:	xor	eax, eax
0x8a34:	ret	


0x89d9:	xor	r8d, r8d
0x89dc:	mov	rcx, qword ptr [r9]
0x89df:	test	rcx, rcx
0x89e2:	je	0x8a1d


0x8933:	xor	eax, eax
0x8935:	ret	


0x8907:	mov	rdx, qword ptr [rdi]
0x890a:	mov	rcx, qword ptr [rdi + 8]
0x890e:	cmp	rdx, rcx
0x8911:	jae	0x8938


0x87b5:	lea	rdx, [rip + 0x27e8]
0x87bc:	mov	esi, 1
0x87c1:	mov	rdi, r12
0x87c4:	xor	eax, eax
0x87c6:	call	0x1a50


0x8700:	cmp	qword ptr [rcx], 0
0x8704:	je	0x872d


0x8736:	xor	eax, eax
0x8738:	cmp	qword ptr [rdi + 0x18], rsi
0x873c:	je	0x8740


0x86e7:	ret	


0x854b:	mov	rbp, rdi
0x854e:	mov	r13, rsi
0x8551:	mov	r14d, edx
0x8554:	nop	dword ptr [rax]
0x8558:	mov	r15, qword ptr [r12]
0x855c:	test	r15, r15
0x855f:	je	0x861a


0x8628:	add	rsp, 8
0x862c:	mov	eax, 1
0x8631:	pop	rbx
0x8632:	pop	rbp
0x8633:	pop	r12
0x8635:	pop	r13
0x8637:	pop	r14
0x8639:	pop	r15
0x863b:	ret	


0x8525:	ret	


0x84c4:	movss	xmm0, dword ptr [rdx + 8]
0x84c9:	ucomiss	xmm0, dword ptr [rip + 0x2b64]
0x84d0:	jbe	0x8520


0x832f:	mov	rax, rdi
0x8332:	ret	


0x19a0:	jmp	qword ptr [rip + 0x20c5b2]


0x81f1:	xor	eax, eax
0x81f3:	call	0x19e0


0x8218:	lea	rax, [rsp + 0x60]
0x821d:	mov	dword ptr [rsp], 0x10
0x8224:	mov	edx, dword ptr [rsp + 0x30]
0x8228:	mov	qword ptr [rsp + 8], rax
0x822d:	lea	rax, [rsp + 0x20]
0x8232:	mov	qword ptr [rsp + 0x10], rax
0x8237:	jmp	0x81f1


0x8149:	mov	rdx, qword ptr [rdi + 0x10]
0x814d:	mov	rcx, qword ptr [rsi + 8]
0x8151:	test	rdx, rdx
0x8154:	je	0x8170


0x81a7:	lea	rcx, [rip + 0x2de2]
0x81ae:	lea	rsi, [rip + 0x2d9b]
0x81b5:	lea	rdi, [rip + 0x2db8]
0x81bc:	sub	rsp, 8
0x81c0:	mov	edx, 0x3c
0x81c5:	call	0x1840


0x1730:	jmp	qword ptr [rip + 0x20c6ea]


0x1800:	jmp	qword ptr [rip + 0x20c682]


0x1700:	jmp	qword ptr [rip + 0x20c702]


0x7ea5:	mov	word ptr [rsi + 0x74], dx
0x7ea9:	xor	eax, eax
0x7eab:	ret	


0x7eb0:	sub	rsp, 8
0x7eb4:	call	0x1700


0x783e:	xor	ebp, ebp
0x7840:	pop	rbx
0x7841:	mov	rax, rbp
0x7844:	pop	rbp
0x7845:	pop	r12
0x7847:	pop	r13
0x7849:	pop	r14
0x784b:	ret	


0x7734:	mov	edx, dword ptr [rdi + 0x48]
0x7737:	test	dh, 0x20
0x773a:	jne	0x783e


0x75e3:	mov	rdi, qword ptr [rbp + 8]
0x75e7:	test	rdi, rdi
0x75ea:	je	0x75f1


0x759f:	cmp	qword ptr [rdi + 0x58], 0
0x75a4:	jns	0x75bf


0x71fa:	mov	eax, esi
0x71fc:	mov	ebp, esi
0x71fe:	and	eax, 0x204
0x7203:	cmp	eax, 0x204
0x7208:	je	0x7578


0x7578:	call	0x1700


0x6c70:	mov	eax, dword ptr [rdi + 0x48]
0x6c73:	mov	edx, eax
0x6c75:	and	edx, 0x10
0x6c78:	je	0x6c87


0x683a:	mov	rdi, rax
0x683d:	call	0x18c0


0x675f:	mov	rax, qword ptr [rdx + 8]
0x6763:	test	rax, rax
0x6766:	je	0x6785


0x67a0:	mov	rax, qword ptr [rdx + 0x78]
0x67a4:	mov	rdi, qword ptr [rcx]
0x67a7:	mov	rsi, rsp
0x67aa:	mov	qword ptr [rsp], rax
0x67ae:	mov	rax, qword ptr [rdx + 0x80]
0x67b5:	mov	qword ptr [rsp + 8], rax
0x67ba:	call	0x9370


0x6710:	mov	rdi, qword ptr [r12]
0x6714:	lea	rsi, [rdx + 0x78]
0x6718:	call	0x8140


0x66a2:	mov	edi, 0x18
0x66a7:	call	0x1920


0x6500:	test	r9d, r9d
0x6503:	je	0x6540


0x6453:	lea	rdx, [rip + 0x4ac0]
0x645a:	mov	ecx, 3
0x645f:	mov	rsi, rbp
0x6462:	mov	rdi, rdx
0x6465:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x63ec:	mov	rdi, rax
0x63ef:	mov	esi, edx
0x63f1:	xor	eax, eax
0x63f3:	jmp	0x81d0


0x6400:	mov	rsi, rax
0x6403:	xor	eax, eax
0x6405:	jmp	0x9670


0x63a0:	mov	edi, 0x20
0x63a5:	call	0x1920


0x636c:	mov	r8, qword ptr [rip + 0x207c5d]
0x6373:	lea	rcx, [rip - 0x77a]
0x637a:	lea	rdx, [rip - 0x761]
0x6381:	xor	esi, esi
0x6383:	mov	edi, 0x1f
0x6388:	call	0x8b10


0x6307:	mov	qword ptr [rsi], rax
0x630a:	mov	rsi, rax
0x630d:	call	0x1990


0x6328:	call	0x1a90


0x62a3:	and	dh, 2
0x62a6:	jne	0x62d0


0x62e8:	xor	ebp, ebp
0x62ea:	jmp	0x62b8


0x6232:	cmp	esi, -0x64
0x6235:	jne	0x6281


0x6237:	test	dl, dl
0x6239:	jne	0x6250


0x6112:	xor	ebx, ebx
0x6114:	mov	rdx, qword ptr [rsp + 0x88]
0x611c:	xor	rdx, qword ptr fs:[0x28]
0x6125:	mov	rax, rbx
0x6128:	jne	0x61a2


0x60aa:	mov	r12, qword ptr [rbx + 0x50]
0x60ae:	mov	rbp, rdi
0x60b1:	mov	r13d, esi
0x60b4:	test	r12, r12
0x60b7:	je	0x60e0


0x605c:	mov	rdi, rbx
0x605f:	call	0x95a0


0x6030:	ret	


0x5ff5:	push	rbp
0x5ff6:	push	rbx
0x5ff7:	mov	rbx, rdi
0x5ffa:	sub	rsp, 8
0x5ffe:	nop	
0x6000:	mov	rdi, qword ptr [rbx + 0x18]
0x6004:	mov	rbp, qword ptr [rbx + 0x10]
0x6008:	test	rdi, rdi
0x600b:	je	0x6012


0x5e71:	lea	rsi, [rdx + 0x28]
0x5e75:	movabs	rax, 0x1fffffffffffffff
0x5e7f:	cmp	rsi, rax
0x5e82:	mov	qword ptr [rbp + 0x38], rsi
0x5e86:	ja	0x5f24


0x5ea5:	test	rbx, rbx
0x5ea8:	je	0x5ec1


0x5c9c:	test	al, 1
0x5c9e:	je	0x5d00


0x5d00:	test	al, 2
0x5d02:	jne	0x5ca0


0x5c70:	mov	eax, 0xffffffff
0x5c75:	ret	


0x5c66:	seta	al
0x5c69:	movzx	eax, al
0x5c6c:	ret	


0x5c10:	mov	rax, qword ptr [rsi]
0x5c13:	cmp	qword ptr [rdi], rax
0x5c16:	sete	al
0x5c19:	ret	


0x5c0c:	ret	


0x5be7:	ret	


0x5be0:	xor	eax, eax
0x5be2:	cmp	edx, 0x11
0x5be5:	je	0x5bf0


0x1790:	jmp	qword ptr [rip + 0x20c6ba]


0x17b0:	jmp	qword ptr [rip + 0x20c6aa]


0x5ae9:	call	0x5b40


0x5ad2:	movzx	edx, dl
0x5ad5:	test	rdx, rdx
0x5ad8:	jne	0x5ae9


0x5a80:	test	rax, rax
0x5a83:	mov	edx, 0x80
0x5a88:	cmove	rax, rdx
0x5a8c:	test	rax, rax
0x5a8f:	jns	0x5a72


0x5a58:	movabs	rdx, 0x5555555555555553
0x5a62:	cmp	rax, rdx
0x5a65:	ja	0x5a91


0x5a00:	test	rcx, rcx
0x5a03:	je	0x5a28


0x59cb:	xor	edx, edx
0x59cd:	movabs	rax, 0x5555555555555554
0x59d7:	div	r9
0x59da:	cmp	rax, rcx
0x59dd:	jbe	0x5a1b


0x59ab:	sub	rsp, 8
0x59af:	call	0x5b40


0x59a1:	movzx	eax, al
0x59a4:	test	rax, rax
0x59a7:	jne	0x59ab


0x5959:	test	rdi, rdi
0x595c:	jne	0x5978


0x595e:	mov	rsi, rbx
0x5961:	call	0x1990


0x592b:	sub	rsp, 8
0x592f:	call	0x5b40


0x5921:	movzx	eax, al
0x5924:	test	rax, rax
0x5927:	jne	0x592b


0x5806:	mov	eax, r10d
0x5809:	mov	r11d, 1
0x580f:	add	r10d, 8
0x5813:	add	rax, rbp
0x5816:	mov	rax, qword ptr [rax]
0x5819:	test	rax, rax
0x581c:	mov	qword ptr [r8 + r9*8], rax
0x5820:	je	0x582c


0x585c:	mov	rax, rbx
0x585f:	add	rbx, 8
0x5863:	jmp	0x5816


0x5738:	mov	r11d, eax
0x573b:	add	r11, qword ptr [r10 + 0x10]
0x573f:	add	eax, 8
0x5742:	mov	dword ptr [r10], eax
0x5745:	mov	rax, qword ptr [r11]
0x5748:	test	rax, rax
0x574b:	mov	qword ptr [r8 + r9*8], rax
0x574f:	je	0x575b


0x577a:	mov	r11, qword ptr [r10 + 8]
0x577e:	lea	rax, [r11 + 8]
0x5782:	mov	qword ptr [r10 + 8], rax
0x5786:	jmp	0x5745


0x570b:	jmp	0x52d0


0x5408:	mov	r8, rcx
0x540b:	mov	rcx, rdx
0x540e:	lea	rdx, [rip + 0x575f]
0x5415:	mov	esi, 1
0x541a:	xor	eax, eax
0x541c:	call	0x1a50


0x52f0:	mov	r8, rdx
0x52f3:	lea	rdx, [rip + 0x586e]
0x52fa:	mov	r9, rcx
0x52fd:	xor	eax, eax
0x52ff:	mov	rcx, rsi
0x5302:	mov	esi, 1
0x5307:	call	0x1a50


0x17c0:	jmp	qword ptr [rip + 0x20c6a2]


0x5177:	call	0x16f0


0x5145:	test	rdx, rdx
0x5148:	je	0x5177


0x50e4:	call	0x16f0


0x507c:	mov	dword ptr [rsp], esi
0x507f:	mov	rcx, rsp
0x5082:	mov	rdx, -1
0x5089:	mov	rsi, rax
0x508c:	mov	qword ptr [rsp + 4], 0
0x5095:	mov	qword ptr [rsp + 0xc], 0x4000000
0x509e:	mov	qword ptr [rsp + 0x14], 0
0x50a7:	mov	qword ptr [rsp + 0x1c], 0
0x50b0:	mov	qword ptr [rsp + 0x24], 0
0x50b9:	mov	qword ptr [rsp + 0x2c], 0
0x50c2:	mov	dword ptr [rsp + 0x34], 0
0x50ca:	call	0x48f0


0x4f50:	call	0x16f0


0x4eef:	mov	dword ptr [rsp], esi
0x4ef2:	mov	rcx, rsp
0x4ef5:	mov	rsi, rax
0x4ef8:	mov	qword ptr [rsp + 4], 0
0x4f01:	mov	qword ptr [rsp + 0xc], 0
0x4f0a:	mov	qword ptr [rsp + 0x14], 0
0x4f13:	mov	qword ptr [rsp + 0x1c], 0
0x4f1c:	mov	qword ptr [rsp + 0x24], 0
0x4f25:	mov	qword ptr [rsp + 0x2c], 0
0x4f2e:	mov	dword ptr [rsp + 0x34], 0
0x4f36:	call	0x48f0


0x4ec4:	call	0x16f0


0x4e5c:	mov	dword ptr [rsp], esi
0x4e5f:	mov	rcx, rsp
0x4e62:	mov	rdx, -1
0x4e69:	mov	rsi, rax
0x4e6c:	mov	qword ptr [rsp + 4], 0
0x4e75:	mov	qword ptr [rsp + 0xc], 0
0x4e7e:	mov	qword ptr [rsp + 0x14], 0
0x4e87:	mov	qword ptr [rsp + 0x1c], 0
0x4e90:	mov	qword ptr [rsp + 0x24], 0
0x4e99:	mov	qword ptr [rsp + 0x2c], 0
0x4ea2:	mov	dword ptr [rsp + 0x34], 0
0x4eaa:	call	0x48f0


0x4d71:	mov	rdi, qword ptr [r12 + 8]
0x4d76:	lea	rbx, [rip + 0x2093c3]
0x4d7d:	cmp	rdi, rbx
0x4d80:	je	0x4d99


0x4d46:	sub	eax, 2
0x4d49:	lea	rbx, [r12 + 0x18]
0x4d4e:	shl	rax, 4
0x4d52:	lea	rbp, [r12 + rax + 0x28]
0x4d57:	nop	word ptr [rax + rax]
0x4d60:	mov	rdi, qword ptr [rbx]
0x4d63:	add	rbx, 0x10
0x4d67:	call	0x1a90


0x4ba7:	sub	rsp, 8
0x4bab:	call	0x16f0


0x4b99:	test	rdx, rdx
0x4b9c:	je	0x4ba7


0x17a0:	jmp	qword ptr [rip + 0x20c6b2]


0x359d:	mov	rcx, qword ptr [rip + 0x20ab3c]
0x35a4:	lea	rdi, [rip + 0x709d]
0x35ab:	mov	edx, 0x37
0x35b0:	mov	esi, 1
0x35b5:	call	0x1a40


0x3526:	mov	esi, 0x2f
0x352b:	mov	rbx, rdi
0x352e:	call	0x1820


0x3510:	xor	r11d, r11d
0x3513:	test	r8, r8
0x3516:	je	0x351b


0x33c5:	cmp	sil, 1
0x33c9:	push	r12
0x33cb:	push	rbp
0x33cc:	push	rbx
0x33cd:	sbb	ebx, ebx
0x33cf:	movzx	ebp, sil
0x33d3:	not	ebx
0x33d5:	xor	r11d, r11d
0x33d8:	and	ebx, 0xc00
0x33de:	jmp	0x341a


0x1900:	jmp	qword ptr [rip + 0x20c602]


0x3038:	mov	rdx, rdi
0x303b:	xor	ebp, ebp
0x303d:	jmp	0x304f


0x2f88:	test	al, al
0x2f8a:	mov	rcx, rdi
0x2f8d:	mov	edi, 1
0x2f92:	je	0x2fbb


0x2e40:	mov	byte ptr [rsi], al
0x2e42:	mov	eax, edi
0x2e44:	and	eax, 0x100
0x2e49:	cmp	eax, 1
0x2e4c:	sbb	eax, eax
0x2e4e:	and	eax, 0xffffffbb
0x2e51:	add	eax, 0x72
0x2e54:	mov	byte ptr [rsi + 1], al
0x2e57:	mov	eax, edi
0x2e59:	and	eax, 0x80
0x2e5e:	cmp	eax, 1
0x2e61:	sbb	eax, eax
0x2e63:	and	eax, 0xffffffb6
0x2e66:	add	eax, 0x77
0x2e69:	mov	byte ptr [rsi + 2], al
0x2e6c:	mov	eax, edi
0x2e6e:	and	eax, 0x40
0x2e71:	cmp	eax, 1
0x2e74:	sbb	eax, eax
0x2e76:	test	edi, 0x800
0x2e7c:	je	0x2f20


0x2de5:	cmp	edx, 0x4000
0x2deb:	mov	eax, 0x64
0x2df0:	je	0x2e40


0x294d:	lea	rsi, [rip + 0x74c4]
0x2954:	xor	edi, edi
0x2956:	call	0x1790


0x291f:	lea	rsi, [rip + 0x74ca]
0x2926:	xor	edi, edi
0x2928:	call	0x1790


0x28a9:	cmp	qword ptr [rip + 0x20b747], 0
0x28b1:	push	rbp
0x28b2:	mov	rbp, rsp
0x28b5:	je	0x28c3


0x28d8:	ret	


0x2890:	pop	rbp
0x2891:	ret	


0x2878:	mov	rax, qword ptr [rip + 0x20b771]
0x287f:	test	rax, rax
0x2882:	je	0x2890


0x2840:	pop	rbp
0x2841:	ret	


0x2827:	mov	rax, qword ptr [rip + 0x20b7aa]
0x282e:	test	rax, rax
0x2831:	je	0x2840




0x16da:	add	rsp, 8
0x16de:	ret	


0x16d8:	call	rax




0x9afa:	cmp	qword ptr [rdi + 0x48], 0
0x9aff:	jne	0x9aea


0x19f0:	jmp	qword ptr [rip + 0x20c58a]


0x1930:	jmp	qword ptr [rip + 0x20c5ea]


0x1970:	jmp	qword ptr [rip + 0x20c5ca]


0x1750:	jmp	qword ptr [rip + 0x20c6da]


0x9879:	mov	rax, qword ptr [rsp + 0x10]
0x987e:	cmp	dword ptr [rip + 0x2049f3], 0
0x9885:	mov	dword ptr [rsp], 0x18
0x988c:	mov	r12d, dword ptr [rax + 0x10]
0x9890:	mov	edx, r12d
0x9893:	js	0x99c3


0x98c0:	cmp	esi, 0xb
0x98c3:	je	0x98f0




0x17d0:	jmp	qword ptr [rip + 0x20c69a]




0x9620:	mov	byte ptr [rdi + 0x1c], 1
0x9624:	ret	


0x960c:	add	edx, 3
0x960f:	and	edx, 3
0x9612:	mov	dword ptr [rdi + 0x14], edx
0x9615:	ret	


0x16f0:	jmp	qword ptr [rip + 0x20c70a]


0x8fe8:	mov	rax, rsi
0x8feb:	pxor	xmm0, xmm0
0x8fef:	shr	rax, 1
0x8ff2:	and	esi, 1
0x8ff5:	or	rax, rsi
0x8ff8:	cvtsi2ss	xmm0, rax
0x8ffd:	addss	xmm0, xmm0
0x9001:	jmp	0x8e79


0x8e70:	pxor	xmm0, xmm0
0x8e74:	cvtsi2ss	xmm0, rsi
0x8e79:	divss	xmm0, dword ptr [r12 + 8]
0x8e80:	ucomiss	xmm0, dword ptr [rip + 0x21c5]
0x8e87:	jae	0x8fc0


0x8dfc:	mov	rdi, qword ptr [r12 + 0x48]
0x8e01:	test	rdi, rdi
0x8e04:	je	0x8e21


0x8d7c:	cmp	rbp, rax
0x8d7f:	jae	0x8dfc


0x8d41:	add	r12, 0x10
0x8d45:	cmp	qword ptr [rbp + 8], r12
0x8d49:	ja	0x8ce0


0x8ce7:	mov	rbx, qword ptr [r12 + 8]
0x8cec:	mov	rax, qword ptr [rbp + 0x40]
0x8cf0:	test	rbx, rbx
0x8cf3:	je	0x8d25




0x8ac0:	mov	rax, rdx
0x8ac3:	add	rdi, 1
0x8ac7:	shl	rax, 5
0x8acb:	sub	rax, rdx
0x8ace:	xor	edx, edx
0x8ad0:	add	rax, rcx
0x8ad3:	movzx	ecx, byte ptr [rdi]
0x8ad6:	div	rsi
0x8ad9:	test	cl, cl
0x8adb:	jne	0x8ac0


0x8a94:	add	rsp, 8
0x8a98:	mov	rax, rbp
0x8a9b:	pop	rbx
0x8a9c:	pop	rbp
0x8a9d:	pop	r12
0x8a9f:	pop	r13
0x8aa1:	pop	r14
0x8aa3:	pop	r15
0x8aa5:	ret	


0x8a8a:	add	r14, 0x10
0x8a8e:	cmp	qword ptr [r15 + 8], r14
0x8a92:	ja	0x8a62


0x8a6a:	mov	rbx, r14
0x8a6d:	jmp	0x8a73


0x8a1d:	add	r9, 0x10
0x8a21:	cmp	qword ptr [rdi + 8], r9
0x8a25:	ja	0x89dc


0x89e4:	cmp	rdx, r8
0x89e7:	jbe	0x8a27


0x8913:	mov	rax, qword ptr [rdx]
0x8916:	test	rax, rax
0x8919:	jne	0x8936


0x8938:	sub	rsp, 8
0x893c:	call	0x16f0


0x87ac:	add	rsi, 0x10
0x87b0:	cmp	rsi, rdi
0x87b3:	jb	0x8780


0x8786:	mov	rax, qword ptr [rsi + 8]
0x878a:	mov	edx, 1
0x878f:	test	rax, rax
0x8792:	je	0x87a5


0x1a50:	jmp	qword ptr [rip + 0x20c55a]


0x872d:	add	rcx, 0x10
0x8731:	cmp	rcx, r8
0x8734:	jb	0x8700


0x8706:	mov	rax, qword ptr [rcx + 8]
0x870a:	add	rsi, 1
0x870e:	add	rdx, 1
0x8712:	test	rax, rax
0x8715:	je	0x872d


0x8740:	cmp	qword ptr [rdi + 0x20], rdx
0x8744:	sete	al
0x8747:	ret	


0x873e:	ret	


0x86dc:	add	rsi, 0x10
0x86e0:	cmp	rsi, rdi
0x86e3:	jb	0x86b0


0x86b6:	mov	rdx, qword ptr [rsi + 8]
0x86ba:	mov	ecx, 1
0x86bf:	test	rdx, rdx
0x86c2:	je	0x86d5


0x861a:	add	r12, 0x10
0x861e:	cmp	qword ptr [r13 + 8], r12
0x8622:	ja	0x8558


0x8565:	mov	rbx, qword ptr [r12 + 8]
0x856a:	test	rbx, rbx
0x856d:	jne	0x858c


0x8520:	mov	qword ptr [rdi], rcx
0x8523:	xor	eax, eax
0x8525:	ret	


0x84d2:	movss	xmm1, dword ptr [rip + 0x2b5e]
0x84da:	ucomiss	xmm1, xmm0
0x84dd:	jbe	0x8520


0x8320:	test	rax, rax
0x8323:	jne	0x832f


0x82e7:	test	rcx, rcx
0x82ea:	je	0x8325




0x19e0:	jmp	qword ptr [rip + 0x20c592]


0x8170:	mov	qword ptr [rdi + 0x10], 1
0x8178:	mov	rax, qword ptr [rsi]
0x817b:	mov	qword ptr [rdi], rcx
0x817e:	mov	qword ptr [rdi + 8], rax
0x8182:	xor	eax, eax
0x8184:	ret	


0x8156:	cmp	qword ptr [rdi], rcx
0x8159:	je	0x8188


0x1840:	jmp	qword ptr [rip + 0x20c662]








0x7740:	movzx	eax, word ptr [rbp + 0x74]
0x7744:	mov	ebx, 3
0x7749:	mov	r12, rdi
0x774c:	mov	word ptr [rbp + 0x74], bx
0x7750:	cmp	ax, 1
0x7754:	je	0x79a0


0x75f1:	mov	rdi, qword ptr [rbp + 0x10]
0x75f5:	call	0x1a90


0x75ec:	call	0x5ff0


0x75a6:	jmp	0x76c0


0x75bf:	mov	rbx, qword ptr [rdi + 0x10]
0x75c3:	test	rbx, rbx
0x75c6:	jne	0x75b0


0x720e:	test	sil, 0x12
0x7212:	je	0x7578


0x6c87:	and	eax, 0x204
0x6c8c:	mov	rsi, qword ptr [rbp + 0x30]
0x6c90:	mov	edi, 0xffffff9c
0x6c95:	cmp	eax, 0x200
0x6c9a:	jne	0x6ca0


0x6c7a:	test	al, 1
0x6c7c:	mov	edx, 0x20000
0x6c81:	jne	0x6d88


0x18c0:	jmp	qword ptr [rip + 0x20c622]


0x6785:	mov	rax, qword ptr [rsp + 0x18]
0x678a:	xor	rax, qword ptr fs:[0x28]
0x6793:	jne	0x67ee


0x6768:	cmp	qword ptr [rax + 0x58], 0
0x676d:	js	0x6785


0x6540:	test	r12d, r12d
0x6543:	js	0x6680


0x6505:	and	bh, 2
0x6508:	je	0x6513


0x6465:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6467:	seta	al
0x646a:	sbb	al, 0
0x646c:	test	al, al
0x646e:	jne	0x6500


0x1990:	jmp	qword ptr [rip + 0x20c5ba]


0x1a90:	jmp	qword ptr [rip + 0x20c53a]


0x62a8:	mov	edi, dword ptr [rdi + 0x28]
0x62ab:	xor	ebp, ebp
0x62ad:	call	0x1980


0x62d0:	mov	edx, 1
0x62d5:	mov	esi, 0xffffff9c
0x62da:	call	0x6220


0x62b8:	lea	rdi, [rbx + 0x60]
0x62bc:	call	0x6040


0x6281:	call	0x16f0


0x623b:	test	byte ptr [rbx + 0x48], 4
0x623f:	jne	0x6245


0x6250:	lea	rdi, [rbx + 0x60]
0x6254:	call	0x95b0


0x612a:	add	rsp, 0x98
0x6131:	pop	rbx
0x6132:	pop	rbp
0x6133:	pop	r12
0x6135:	pop	r13
0x6137:	ret	


0x61a2:	call	0x17e0


0x60e0:	mov	r8, qword ptr [rip + 0x207ee9]
0x60e7:	lea	rcx, [rip - 0x4ae]
0x60ee:	lea	rdx, [rip - 0x4c5]
0x60f5:	xor	esi, esi
0x60f7:	mov	edi, 0xd
0x60fc:	call	0x8b10


0x60b9:	mov	rax, qword ptr [rbp + 0x78]
0x60bd:	mov	rsi, rsp
0x60c0:	mov	rdi, r12
0x60c3:	mov	qword ptr [rsp], rax
0x60c7:	call	0x88a0


0x6012:	mov	rdi, rbx
0x6015:	mov	rbx, rbp
0x6018:	call	0x1a90


0x600d:	call	0x1870


0x5e8c:	shl	rsi, 3
0x5e90:	call	0x1990


0x5f24:	call	0x1a90


0x5ec1:	mov	rcx, r13
0x5ec4:	mov	edx, 8
0x5ec9:	mov	rsi, r12
0x5ecc:	call	0x1740


0x5eaa:	mov	rdx, rdi
0x5ead:	nop	dword ptr [rax]
0x5eb0:	add	rdx, 8
0x5eb4:	mov	qword ptr [rdx - 8], rbx
0x5eb8:	mov	rbx, qword ptr [rbx + 0x10]
0x5ebc:	test	rbx, rbx
0x5ebf:	jne	0x5eb0


0x5ca0:	mov	rdx, rbx
0x5ca3:	mov	edi, 1
0x5ca8:	call	0x1900


0x5d04:	test	dl, dl
0x5d06:	jne	0x5ca0


0x5bf0:	cmp	qword ptr [rsi + 0x58], 0
0x5bf5:	setne	al
0x5bf8:	ret	






0x5ada:	call	0x18a0


0x5a91:	sub	rsp, 8
0x5a95:	call	0x5b40


0x5a72:	mov	qword ptr [rsi], rax
0x5a75:	mov	rsi, rax
0x5a78:	jmp	0x5950


0x5a67:	mov	rdx, rax
0x5a6a:	shr	rdx, 1
0x5a6d:	lea	rax, [rdx + rax + 1]
0x5a72:	mov	qword ptr [rsi], rax
0x5a75:	mov	rsi, rax
0x5a78:	jmp	0x5950


0x5a28:	xor	edx, edx
0x5a2a:	mov	eax, 0x80
0x5a2f:	xor	r8d, r8d
0x5a32:	div	r9
0x5a35:	test	rax, rax
0x5a38:	sete	r8b
0x5a3c:	lea	rcx, [r8 + rax]
0x5a40:	jmp	0x5a05


0x5a05:	mov	rax, rcx
0x5a08:	mul	r9
0x5a0b:	seto	dl
0x5a0e:	test	rax, rax
0x5a11:	movzx	edx, dl
0x5a14:	js	0x5a1b


0x5a1b:	sub	rsp, 8
0x5a1f:	call	0x5b40


0x59df:	mov	rax, rcx
0x59e2:	shr	rax, 1
0x59e5:	lea	rcx, [rax + rcx + 1]
0x59ea:	mov	qword ptr [rsi], rcx
0x59ed:	imul	rcx, r9
0x59f1:	mov	rsi, rcx
0x59f4:	jmp	0x5950


0x59a9:	jmp	0x5950


0x5978:	call	0x1a90


0x5929:	jmp	0x58f0


0x582c:	test	r11b, r11b
0x582f:	jne	0x5855


0x5822:	add	r9, 1
0x5826:	cmp	r9, 0xa
0x582a:	jne	0x5800


0x5816:	mov	rax, qword ptr [rax]
0x5819:	test	rax, rax
0x581c:	mov	qword ptr [r8 + r9*8], rax
0x5820:	je	0x582c


0x575b:	call	0x52d0


0x5751:	add	r9, 1
0x5755:	cmp	r9, 0xa
0x5759:	jne	0x5730


0x5745:	mov	rax, qword ptr [r11]
0x5748:	test	rax, rax
0x574b:	mov	qword ptr [r8 + r9*8], rax
0x574f:	je	0x575b


0x5700:	add	r9, 1
0x5704:	cmp	qword ptr [r8 + r9*8], 0
0x5709:	jne	0x5700




0x514a:	mov	qword ptr [rsp + 0x28], rsi
0x514f:	mov	qword ptr [rsp + 0x30], rdx
0x5154:	mov	rcx, rsp
0x5157:	mov	rdx, r8
0x515a:	mov	rsi, r9
0x515d:	call	0x48f0


0x4d99:	lea	rbx, [rip + 0x2092f0]
0x4da0:	cmp	r12, rbx
0x4da3:	je	0x4db4


0x4d82:	call	0x1a90


0x4b9e:	mov	qword ptr [rdi + 0x28], rsi
0x4ba2:	mov	qword ptr [rdi + 0x30], rdx
0x4ba6:	ret	




0x1a40:	jmp	qword ptr [rip + 0x20c562]


0x1820:	jmp	qword ptr [rip + 0x20c672]


0x351b:	ret	


0x3518:	mov	dword ptr [r8], r11d
0x351b:	ret	


0x341a:	mov	r9d, dword ptr [rcx + 0xc]
0x341e:	mov	edi, dword ptr [rcx + 4]
0x3421:	mov	esi, dword ptr [rcx + 8]
0x3424:	not	r9d
0x3427:	and	r9d, ebx
0x342a:	cmp	r10b, 2
0x342e:	je	0x34e0




0x304f:	lea	ebp, [rax + rbp*8 - 0x30]
0x3053:	add	rdx, 1
0x3057:	cmp	ebp, 0xfff
0x305d:	jbe	0x3040


0x2fbb:	mov	edx, 0x10
0x2fc0:	xor	ecx, ecx
0x2fc2:	mov	rax, rdx
0x2fc5:	mul	rdi
0x2fc8:	jo	0x32df


0x2f20:	and	eax, 0xffffffb5
0x2f23:	add	eax, 0x78
0x2f26:	jmp	0x2e88


0x2e82:	and	eax, 0xffffffe0
0x2e85:	add	eax, 0x73
0x2e88:	mov	byte ptr [rsi + 3], al
0x2e8b:	mov	eax, edi
0x2e8d:	and	eax, 0x20
0x2e90:	cmp	eax, 1
0x2e93:	sbb	eax, eax
0x2e95:	and	eax, 0xffffffbb
0x2e98:	add	eax, 0x72
0x2e9b:	mov	byte ptr [rsi + 4], al
0x2e9e:	mov	eax, edi
0x2ea0:	and	eax, 0x10
0x2ea3:	cmp	eax, 1
0x2ea6:	sbb	eax, eax
0x2ea8:	and	eax, 0xffffffb6
0x2eab:	add	eax, 0x77
0x2eae:	mov	byte ptr [rsi + 5], al
0x2eb1:	mov	eax, edi
0x2eb3:	and	eax, 8
0x2eb6:	cmp	eax, 1
0x2eb9:	sbb	eax, eax
0x2ebb:	test	edi, 0x400
0x2ec1:	je	0x2f48


0x2df2:	cmp	edx, 0x6000
0x2df8:	mov	eax, 0x62
0x2dfd:	je	0x2e40


0x28c3:	call	0x2810


0x28b7:	mov	rdi, qword ptr [rip + 0x20b74a]
0x28be:	call	0x1a98


0x2884:	pop	rbp
0x2885:	jmp	rax


0x2833:	pop	rbp
0x2834:	jmp	rax


0x9b01:	push	r12
0x9b03:	push	rbp
0x9b04:	mov	r12d, edx
0x9b07:	push	rbx
0x9b08:	mov	rbp, rsi
0x9b0b:	mov	rbx, rdi
0x9b0e:	call	0x18f0










0x99c3:	xor	esi, esi
0x99c5:	xor	eax, eax
0x99c7:	call	0x1750


0x9899:	xor	eax, eax
0x989b:	mov	esi, 0x406
0x98a0:	call	0x1750


0x98f0:	mov	edi, ebp
0x98f2:	xor	eax, eax
0x98f4:	call	0x1750


0x98c5:	jg	0x9920






0x8e79:	divss	xmm0, dword ptr [r12 + 8]
0x8e80:	ucomiss	xmm0, dword ptr [rip + 0x21c5]
0x8e87:	jae	0x8fc0


0x8e8d:	ucomiss	xmm0, dword ptr [rip + 0x21bc]
0x8e94:	jb	0x9010


0x8fc0:	xor	ebx, ebx
0x8fc2:	mov	rcx, qword ptr [rsp + 0x58]
0x8fc7:	xor	rcx, qword ptr fs:[0x28]
0x8fd0:	mov	eax, ebx
0x8fd2:	jne	0x906a


0x8df1:	add	rbp, 0x10
0x8df5:	cmp	qword ptr [r12 + 8], rbp
0x8dfa:	ja	0x8dd0


0x8e21:	mov	rdi, qword ptr [r12]
0x8e25:	call	0x1a90


0x8d25:	test	rax, rax
0x8d28:	je	0x8d30


0x8a62:	mov	rdi, qword ptr [r14]
0x8a65:	test	rdi, rdi
0x8a68:	je	0x8a8a


0x8a73:	mov	rsi, r13
0x8a76:	call	r12


0x8a27:	mov	rax, r8
0x8a2a:	ret	


0x89dc:	mov	rcx, qword ptr [r9]
0x89df:	test	rcx, rcx
0x89e2:	je	0x8a1d


0x89e9:	mov	qword ptr [rsi + r8*8], rcx
0x89ed:	mov	rcx, qword ptr [r9 + 8]
0x89f1:	lea	rax, [r8 + 1]
0x89f5:	test	rcx, rcx
0x89f8:	je	0x8a1a


0x8936:	ret	


0x8780:	cmp	qword ptr [rsi], 0
0x8784:	je	0x87ac


0x87a5:	cmp	rbx, rdx
0x87a8:	cmovb	rbx, rdx
0x87ac:	add	rsi, 0x10
0x87b0:	cmp	rsi, rdi
0x87b3:	jb	0x8780




0x86b0:	cmp	qword ptr [rsi], 0
0x86b4:	je	0x86dc


0x86e5:	ret	


0x86d5:	cmp	rax, rcx
0x86d8:	cmovb	rax, rcx
0x86dc:	add	rsi, 0x10
0x86e0:	cmp	rsi, rdi
0x86e3:	jb	0x86b0


0x8558:	mov	r15, qword ptr [r12]
0x855c:	test	r15, r15
0x855f:	je	0x861a


0x856f:	jmp	0x85cb


0x858c:	mov	r15, qword ptr [rbx]
0x858f:	mov	rdi, rbp
0x8592:	mov	rsi, r15
0x8595:	call	0x8360


0x84df:	movss	xmm1, dword ptr [rdx + 0xc]
0x84e4:	ucomiss	xmm1, dword ptr [rip + 0x2b51]
0x84eb:	jbe	0x8520


0x8325:	add	rdi, 2
0x8329:	cmp	rdi, -1
0x832d:	jne	0x82c8


0x82ec:	mov	r8d, 0x10
0x82f2:	mov	esi, 9
0x82f7:	mov	ecx, 3
0x82fc:	jmp	0x8309




0x8188:	mov	rax, qword ptr [rdi + 8]
0x818c:	cmp	qword ptr [rsi], rax
0x818f:	jne	0x815b


0x815b:	lea	r8, [rdx + 1]
0x815f:	xor	eax, eax
0x8161:	test	rdx, r8
0x8164:	mov	qword ptr [rdi + 0x10], r8
0x8168:	je	0x81a0




0x79a0:	mov	rsi, rbp
0x79a3:	xor	edx, edx
0x79a5:	call	0x5c80


0x775a:	cmp	ax, 2
0x775e:	movzx	ecx, word ptr [rbp + 0x70]
0x7762:	je	0x7850


0x76c0:	mov	rbx, rdi
0x76c3:	mov	rdi, rbx
0x76c6:	call	0x1a90


0x75c8:	mov	rbx, qword ptr [rdi + 8]
0x75cc:	call	0x1a90


0x75b0:	call	0x1a90


0x7218:	mov	r13, rdi
0x721b:	mov	esi, 1
0x7220:	mov	edi, 0x80
0x7225:	mov	r14, rdx
0x7228:	call	0x18a0


0x6c9c:	mov	edi, dword ptr [r15 + 0x2c]
0x6ca0:	lea	rcx, [rsp + 0x64]
0x6ca5:	call	0x96e0


0x6ca0:	lea	rcx, [rsp + 0x64]
0x6ca5:	call	0x96e0


0x6d88:	xor	edx, edx
0x6d8a:	cmp	qword ptr [rbp + 0x58], 0
0x6d8f:	setne	dl
0x6d92:	shl	edx, 0x11
0x6d95:	jmp	0x6c87




0x6795:	add	rsp, 0x28
0x6799:	ret	


0x67ee:	call	0x17e0


0x676f:	mov	rcx, qword ptr [rsi]
0x6772:	cmp	qword ptr [rcx + 0x10], 0
0x6777:	je	0x67f3


0x6680:	mov	byte ptr [rsp + 0xf], 0
0x6685:	jmp	0x6494


0x6549:	test	bl, 2
0x654c:	mov	r15d, r12d
0x654f:	mov	byte ptr [rsp + 0xf], 0
0x6554:	jne	0x64c0


0x6513:	xor	ebx, ebx
0x6515:	mov	rcx, qword ptr [rsp + 0xa8]
0x651d:	xor	rcx, qword ptr fs:[0x28]
0x6526:	mov	eax, ebx
0x6528:	jne	0x6665


0x650a:	test	r12d, r12d
0x650d:	jns	0x65c0


0x6474:	test	r9d, r9d
0x6477:	jne	0x6505






0x1980:	jmp	qword ptr [rip + 0x20c5c2]


0x6241:	test	esi, esi
0x6243:	jns	0x6270


0x6245:	mov	dword ptr [rbx + 0x2c], ebp
0x6248:	add	rsp, 8
0x624c:	pop	rbx
0x624d:	pop	rbp
0x624e:	ret	


0x17e0:	jmp	qword ptr [rip + 0x20c692]


0x1870:	jmp	qword ptr [rip + 0x20c64a]


0x1740:	jmp	qword ptr [rip + 0x20c6e2]


0x5eb0:	add	rdx, 8
0x5eb4:	mov	qword ptr [rdx - 8], rbx
0x5eb8:	mov	rbx, qword ptr [rbx + 0x10]
0x5ebc:	test	rbx, rbx
0x5ebf:	jne	0x5eb0


0x5d08:	mov	rdx, rsi
0x5d0b:	mov	esi, dword ptr [r12 + 0x2c]
0x5d10:	mov	r8d, 0x100
0x5d16:	mov	rcx, rbx
0x5d19:	mov	edi, 1
0x5d1e:	call	0x1810


0x18a0:	jmp	qword ptr [rip + 0x20c632]


0x5a16:	test	rdx, rdx
0x5a19:	je	0x59ea


0x5831:	call	0x52d0


0x5855:	mov	dword ptr [rsp + 8], r10d
0x585a:	jmp	0x5831


0x5800:	cmp	r10d, 0x2f
0x5804:	ja	0x585c


0x5730:	mov	eax, dword ptr [r10]
0x5733:	cmp	eax, 0x2f
0x5736:	ja	0x577a


0x4db4:	pop	rbx
0x4db5:	mov	dword ptr [rip + 0x2092b9], 1
0x4dbf:	pop	rbp
0x4dc0:	pop	r12
0x4dc2:	ret	


0x4da5:	mov	rdi, r12
0x4da8:	call	0x1a90






0x34e0:	mov	r12d, eax
0x34e3:	mov	r10d, esi
0x34e6:	and	r12d, 0x49
0x34ea:	or	r10d, 0x49
0x34ee:	or	r12d, ebp
0x34f1:	cmovne	esi, r10d
0x34f5:	jmp	0x3478


0x3434:	cmp	r10b, 3
0x3438:	jne	0x3478


0x3040:	movsx	eax, byte ptr [rdx]
0x3043:	lea	ecx, [rax - 0x30]
0x3046:	cmp	cl, 7
0x3049:	ja	0x3290


0x305f:	add	rsp, 8
0x3063:	xor	eax, eax
0x3065:	pop	rbx
0x3066:	pop	rbp
0x3067:	ret	


0x32df:	mov	ecx, 1
0x32e4:	jmp	0x2fce


0x2fce:	test	rax, rax
0x2fd1:	js	0x32e9


0x2f98:	mov	edx, eax
0x2f9a:	and	edx, 0xffffffef
0x2f9d:	cmp	dl, 0x2d
0x2fa0:	sete	dl
0x2fa3:	cmp	al, 0x2b
0x2fa5:	sete	al
0x2fa8:	add	rcx, 1
0x2fac:	or	eax, edx
0x2fae:	movzx	eax, al
0x2fb1:	add	rdi, rax
0x2fb4:	movzx	eax, byte ptr [rcx]
0x2fb7:	test	al, al
0x2fb9:	jne	0x2f98


0x2e88:	mov	byte ptr [rsi + 3], al
0x2e8b:	mov	eax, edi
0x2e8d:	and	eax, 0x20
0x2e90:	cmp	eax, 1
0x2e93:	sbb	eax, eax
0x2e95:	and	eax, 0xffffffbb
0x2e98:	add	eax, 0x72
0x2e9b:	mov	byte ptr [rsi + 4], al
0x2e9e:	mov	eax, edi
0x2ea0:	and	eax, 0x10
0x2ea3:	cmp	eax, 1
0x2ea6:	sbb	eax, eax
0x2ea8:	and	eax, 0xffffffb6
0x2eab:	add	eax, 0x77
0x2eae:	mov	byte ptr [rsi + 5], al
0x2eb1:	mov	eax, edi
0x2eb3:	and	eax, 8
0x2eb6:	cmp	eax, 1
0x2eb9:	sbb	eax, eax
0x2ebb:	test	edi, 0x400
0x2ec1:	je	0x2f48


0x2f48:	and	eax, 0xffffffb5
0x2f4b:	add	eax, 0x78
0x2f4e:	jmp	0x2ecd


0x2ec7:	and	eax, 0xffffffe0
0x2eca:	add	eax, 0x73
0x2ecd:	mov	byte ptr [rsi + 6], al
0x2ed0:	mov	eax, edi
0x2ed2:	and	eax, 4
0x2ed5:	cmp	eax, 1
0x2ed8:	sbb	eax, eax
0x2eda:	and	eax, 0xffffffbb
0x2edd:	add	eax, 0x72
0x2ee0:	mov	byte ptr [rsi + 7], al
0x2ee3:	mov	eax, edi
0x2ee5:	and	eax, 2
0x2ee8:	cmp	eax, 1
0x2eeb:	sbb	eax, eax
0x2eed:	and	eax, 0xffffffb6
0x2ef0:	add	eax, 0x77
0x2ef3:	mov	byte ptr [rsi + 8], al
0x2ef6:	mov	eax, edi
0x2ef8:	and	eax, 1
0x2efb:	cmp	eax, 1
0x2efe:	sbb	eax, eax
0x2f00:	and	edi, 0x200
0x2f06:	je	0x2f30


0x2dff:	cmp	edx, 0x2000
0x2e05:	mov	eax, 0x63
0x2e0a:	je	0x2e40


0x1a98:	jmp	qword ptr [rip + 0x20c55a]


0x98c7:	cmp	esi, 4
0x98ca:	je	0x99a0


0x9920:	cmp	esi, 0x407
0x9926:	jg	0x9970


0x9010:	cvttss2si	rsi, xmm0
0x9015:	jmp	0x8eb8


0x8e9a:	subss	xmm0, dword ptr [rip + 0x21ae]
0x8ea2:	movabs	rax, 0x8000000000000000
0x8eac:	cvttss2si	rsi, xmm0
0x8eb1:	xor	rsi, rax
0x8eb4:	nop	dword ptr [rax]
0x8eb8:	mov	rdi, rsi
0x8ebb:	call	0x82a0


0x8fd8:	add	rsp, 0x60
0x8fdc:	pop	rbx
0x8fdd:	pop	rbp
0x8fde:	pop	r12
0x8fe0:	ret	


0x906a:	call	0x17e0


0x8dd0:	mov	rdi, qword ptr [rbp + 8]
0x8dd4:	test	rdi, rdi
0x8dd7:	je	0x8df1


0x8db6:	add	rbp, 0x10
0x8dba:	cmp	rax, rbp
0x8dbd:	ja	0x8d88


0x8d91:	mov	rbx, rbp
0x8d94:	jmp	0x8da3


0x8d30:	mov	qword ptr [r12], 0
0x8d38:	mov	qword ptr [r12 + 8], 0
0x8d41:	add	r12, 0x10
0x8d45:	cmp	qword ptr [rbp + 8], r12
0x8d49:	ja	0x8ce0


0x8d2a:	mov	rdi, qword ptr [r12]
0x8d2e:	call	rax


0x8d06:	mov	rdx, qword ptr [rbx + 8]
0x8d0a:	mov	rcx, qword ptr [rbp + 0x48]
0x8d0e:	mov	qword ptr [rbx], 0
0x8d15:	test	rdx, rdx
0x8d18:	mov	qword ptr [rbx + 8], rcx
0x8d1c:	mov	qword ptr [rbp + 0x48], rbx
0x8d20:	mov	rbx, rdx
0x8d23:	jne	0x8cf8


0x8cfd:	mov	rdi, qword ptr [rbx]
0x8d00:	call	rax


0x8a1a:	mov	r8, rax
0x8a1d:	add	r9, 0x10
0x8a21:	cmp	qword ptr [rdi + 8], r9
0x8a25:	ja	0x89dc


0x8929:	mov	rax, qword ptr [rdx]
0x892c:	test	rax, rax
0x892f:	je	0x8920


0x8798:	mov	rax, qword ptr [rax + 8]
0x879c:	add	rdx, 1
0x87a0:	test	rax, rax
0x87a3:	jne	0x8798


0x8720:	mov	rax, qword ptr [rax + 8]
0x8724:	add	rdx, 1
0x8728:	test	rax, rax
0x872b:	jne	0x8720


0x86c8:	mov	rdx, qword ptr [rdx + 8]
0x86cc:	add	rcx, 1
0x86d0:	test	rdx, rdx
0x86d3:	jne	0x86c8


0x85cb:	test	r14b, r14b
0x85ce:	mov	qword ptr [r12 + 8], 0
0x85d7:	jne	0x861a


0x84ed:	movss	xmm1, dword ptr [rdx]
0x84f1:	ucomiss	xmm1, dword ptr [rip + 0x2b48]
0x84f8:	jb	0x8520


0x82c8:	mov	rax, rdi
0x82cb:	mov	rcx, rdi
0x82ce:	mul	r9
0x82d1:	mov	rax, rdx
0x82d4:	shr	rax, 1
0x82d7:	lea	rax, [rax + rax*2]
0x82db:	sub	rcx, rax
0x82de:	cmp	rdi, 9
0x82e2:	mov	rax, rcx
0x82e5:	jbe	0x8320


0x8309:	add	rcx, 2
0x830d:	xor	edx, edx
0x830f:	mov	rax, rdi
0x8312:	div	rcx
0x8315:	add	rsi, r8
0x8318:	cmp	rsi, rdi
0x831b:	mov	rax, rdx
0x831e:	jb	0x8300


0x8191:	mov	eax, 1
0x8196:	ret	


0x81a0:	test	r8, r8
0x81a3:	je	0x8191


0x816a:	ret	


0x7850:	lea	eax, [rcx - 0xc]
0x7853:	cmp	ax, 1
0x7857:	jbe	0x78d0


0x7768:	cmp	cx, 1
0x776c:	jne	0x77a0


0x67f3:	call	0x16f0


0x6779:	mov	rsi, qword ptr [rdx + 0x80]
0x6780:	cmp	qword ptr [rcx], rsi
0x6783:	je	0x67d0


0x6494:	mov	edi, dword ptr [r13 + 0x2c]
0x6498:	mov	rdx, rbp
0x649b:	mov	esi, ebx
0x649d:	call	0x63d0


0x655a:	test	rbp, rbp
0x655d:	je	0x6580


0x64c0:	lea	rdx, [rsp + 0x10]
0x64c5:	mov	esi, r15d
0x64c8:	mov	edi, 1
0x64cd:	call	0x1960


0x652e:	add	rsp, 0xb8
0x6535:	pop	rbx
0x6536:	pop	rbp
0x6537:	pop	r12
0x6539:	pop	r13
0x653b:	pop	r14
0x653d:	pop	r15
0x653f:	ret	


0x6665:	call	0x17e0


0x65c0:	mov	edi, r12d
0x65c3:	xor	ebx, ebx
0x65c5:	call	0x1860


0x647d:	test	r12d, r12d
0x6480:	jns	0x666a




0x6270:	mov	edi, esi
0x6272:	call	0x1860








0x1810:	jmp	qword ptr [rip + 0x20c67a]




0x59ea:	mov	qword ptr [rsi], rcx
0x59ed:	imul	rcx, r9
0x59f1:	mov	rsi, rcx
0x59f4:	jmp	0x5950


0x3478:	mov	r10d, r9d
0x347b:	test	edi, edi
0x347d:	movzx	r12d, byte ptr [rcx]
0x3481:	not	r10d
0x3484:	je	0x33e0


0x343a:	and	esi, eax
0x343c:	mov	r10d, esi
0x343f:	and	r10d, 0x124
0x3446:	cmp	r10d, 1
0x344a:	sbb	r10d, r10d
0x344d:	not	r10d
0x3450:	and	r10d, 0x124
0x3457:	mov	r12d, r10d
0x345a:	or	r12b, 0x92
0x345e:	test	sil, 0x92
0x3462:	cmovne	r10d, r12d
0x3466:	mov	r12d, r10d
0x3469:	or	r12d, 0x49
0x346d:	test	sil, 0x49
0x3471:	cmovne	r10d, r12d
0x3475:	or	esi, r10d
0x3478:	mov	r10d, r9d
0x347b:	test	edi, edi
0x347d:	movzx	r12d, byte ptr [rcx]
0x3481:	not	r10d
0x3484:	je	0x33e0


0x3290:	test	al, al
0x3292:	jne	0x305f


0x32e9:	call	0x5b40


0x2fd7:	test	rcx, rcx
0x2fda:	jne	0x32e9


0x2ecd:	mov	byte ptr [rsi + 6], al
0x2ed0:	mov	eax, edi
0x2ed2:	and	eax, 4
0x2ed5:	cmp	eax, 1
0x2ed8:	sbb	eax, eax
0x2eda:	and	eax, 0xffffffbb
0x2edd:	add	eax, 0x72
0x2ee0:	mov	byte ptr [rsi + 7], al
0x2ee3:	mov	eax, edi
0x2ee5:	and	eax, 2
0x2ee8:	cmp	eax, 1
0x2eeb:	sbb	eax, eax
0x2eed:	and	eax, 0xffffffb6
0x2ef0:	add	eax, 0x77
0x2ef3:	mov	byte ptr [rsi + 8], al
0x2ef6:	mov	eax, edi
0x2ef8:	and	eax, 1
0x2efb:	cmp	eax, 1
0x2efe:	sbb	eax, eax
0x2f00:	and	edi, 0x200
0x2f06:	je	0x2f30


0x2f30:	and	eax, 0xffffffb5
0x2f33:	add	eax, 0x78
0x2f36:	mov	byte ptr [rsi + 9], al
0x2f39:	mov	eax, 0x20
0x2f3e:	mov	word ptr [rsi + 0xa], ax
0x2f42:	ret	


0x2f08:	and	eax, 0xffffffe0
0x2f0b:	add	eax, 0x74
0x2f0e:	mov	byte ptr [rsi + 9], al
0x2f11:	mov	eax, 0x20
0x2f16:	mov	word ptr [rsi + 0xa], ax
0x2f1a:	ret	


0x2e0c:	cmp	edx, 0xa000
0x2e12:	mov	eax, 0x6c
0x2e17:	je	0x2e40


0x99a0:	mov	eax, dword ptr [rsp]
0x99a3:	cmp	eax, 0x2f
0x99a6:	ja	0x9a94


0x98d0:	jg	0x9990


0x9928:	cmp	esi, 0x406
0x992e:	jge	0x99a0


0x9970:	cmp	esi, 0x409
0x9976:	je	0x99a0


0x8dbf:	mov	rbp, qword ptr [r12]
0x8dc3:	cmp	rbp, rax
0x8dc6:	jae	0x8dfc


0x8d88:	mov	rdi, qword ptr [rbp]
0x8d8c:	test	rdi, rdi
0x8d8f:	je	0x8db6


0x8da3:	call	qword ptr [r12 + 0x40]


0x8cf8:	test	rax, rax
0x8cfb:	je	0x8d06


0x8a30:	ret	


0x8a05:	mov	r8, qword ptr [rcx]
0x8a08:	add	rax, 1
0x8a0c:	mov	qword ptr [rsi + rax*8 - 8], r8
0x8a11:	mov	rcx, qword ptr [rcx + 8]
0x8a15:	test	rcx, rcx
0x8a18:	jne	0x8a00


0x8920:	add	rdx, 0x10
0x8924:	cmp	rdx, rcx
0x8927:	jae	0x8938


0x8931:	ret	


0x85d9:	mov	rsi, r15
0x85dc:	mov	rdi, rbp
0x85df:	call	0x8360


0x84fa:	addss	xmm1, dword ptr [rip + 0x2b32]
0x8502:	movss	xmm2, dword ptr [rdx + 4]
0x8507:	ucomiss	xmm2, xmm1
0x850a:	jbe	0x8520


0x8300:	add	r8, 8
0x8304:	test	rdx, rdx
0x8307:	je	0x8325


0x81a5:	jmp	0x8178


0x78d0:	mov	edx, 1
0x78d5:	mov	rsi, rbp
0x78d8:	call	0x5c80


0x7859:	cmp	cx, 1
0x785d:	jne	0x77a0


0x776e:	jmp	0x7990


0x77a0:	mov	rbx, qword ptr [rbp + 0x10]
0x77a4:	test	rbx, rbx
0x77a7:	jne	0x7778


0x67d0:	mov	rsi, qword ptr [rdx + 0x78]
0x67d4:	cmp	qword ptr [rcx + 8], rsi
0x67d8:	jne	0x6785


0x6580:	and	bh, 2
0x6583:	jne	0x6618


0x655f:	lea	rdx, [rip + 0x49b4]
0x6566:	mov	ecx, 3
0x656b:	mov	rsi, rbp
0x656e:	mov	rdi, rdx
0x6571:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x1960:	jmp	qword ptr [rip + 0x20c5d2]


0x1860:	jmp	qword ptr [rip + 0x20c652]


0x6486:	test	bh, 2
0x6489:	jne	0x65d0


0x666a:	test	bl, 2
0x666d:	mov	r15d, r12d
0x6670:	mov	byte ptr [rsp + 0xf], 1
0x6675:	je	0x6566




0x33e0:	mov	edi, r9d
0x33e3:	or	edi, edx
0x33e5:	not	edi
0x33e7:	and	esi, edi
0x33e9:	cmp	r12b, 0x2d
0x33ed:	je	0x3500


0x348a:	and	r10d, edi
0x348d:	and	esi, r10d
0x3490:	cmp	r12b, 0x2d
0x3494:	je	0x3500


0x3298:	sub	rdx, rbx
0x329b:	mov	ebx, ebp
0x329d:	mov	eax, 0xfff
0x32a2:	and	ebx, 0xc00
0x32a8:	mov	edi, 0x20
0x32ad:	or	ebx, 0x3ff
0x32b3:	cmp	rdx, 5
0x32b7:	cmovge	ebx, eax
0x32ba:	call	0x58f0


0x2fe0:	shl	rdi, 4
0x2fe4:	lea	rbp, [rip + 0x75d9]
0x2feb:	call	0x58f0


0x2e19:	cmp	edx, 0x1000
0x2e1f:	mov	eax, 0x70
0x2e24:	je	0x2e40


0x99ac:	add	rax, qword ptr [rsp + 0x10]
0x99b1:	mov	edx, dword ptr [rax]
0x99b3:	mov	edi, ebp
0x99b5:	xor	eax, eax
0x99b7:	call	0x1750


0x9a94:	mov	rax, qword ptr [rsp + 8]
0x9a99:	jmp	0x99b1


0x98d6:	cmp	esi, 2
0x98d9:	je	0x99a0


0x9990:	cmp	esi, 9
0x9993:	je	0x98f0


0x9930:	cmp	esi, 0x401
0x9936:	je	0x98f0


0x9978:	jl	0x98f0


0x8a00:	cmp	rdx, rax
0x8a03:	je	0x8a30


0x850c:	movss	xmm3, dword ptr [rip + 0x2b30]
0x8514:	ucomiss	xmm3, xmm2
0x8517:	jb	0x8520


0x8178:	mov	rax, qword ptr [rsi]
0x817b:	mov	qword ptr [rdi], rcx
0x817e:	mov	qword ptr [rdi + 8], rax
0x8182:	xor	eax, eax
0x8184:	ret	


0x7863:	test	dl, 0x40
0x7866:	je	0x7918


0x7990:	cmp	ax, 4
0x7994:	jne	0x7863


0x77a9:	mov	rbx, qword ptr [rbp + 8]
0x77ad:	cmp	qword ptr [rbx + 0x18], 0
0x77b2:	jne	0x7d20


0x7778:	mov	qword ptr [r12], rbx
0x777c:	mov	rdi, rbp
0x777f:	call	0x1a90


0x67da:	mov	rdx, qword ptr [rax + 0x78]
0x67de:	mov	rax, qword ptr [rax + 0x80]
0x67e5:	mov	qword ptr [rcx + 8], rdx
0x67e9:	mov	qword ptr [rcx], rax
0x67ec:	jmp	0x6785


0x6589:	mov	edi, r15d
0x658c:	call	0x1980


0x6618:	movzx	r14d, byte ptr [rsp + 0xf]
0x661e:	mov	esi, r15d
0x6621:	mov	rdi, r13
0x6624:	xor	ebx, ebx
0x6626:	xor	r14d, 1
0x662a:	movzx	edx, r14b
0x662e:	call	0x6220


0x6571:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6573:	seta	al
0x6576:	sbb	al, 0
0x6578:	test	al, al
0x657a:	je	0x64c0






0x648f:	mov	byte ptr [rsp + 0xf], 1
0x6494:	mov	edi, dword ptr [r13 + 0x2c]
0x6498:	mov	rdx, rbp
0x649b:	mov	esi, ebx
0x649d:	call	0x63d0


0x65d0:	lea	r15, [r13 + 0x60]
0x65d4:	mov	rdi, r15
0x65d7:	call	0x95a0


0x6566:	mov	ecx, 3
0x656b:	mov	rsi, rbp
0x656e:	mov	rdi, rdx
0x6571:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x667b:	jmp	0x64c0


0x3500:	or	r11d, esi
0x3503:	not	esi
0x3505:	and	eax, esi
0x3507:	jmp	0x3408


0x33f3:	cmp	r12b, 0x3d
0x33f7:	je	0x34ab


0x3496:	cmp	r12b, 0x3d
0x349a:	jne	0x33fd


0x2e26:	cmp	edx, 0xc000
0x2e2c:	mov	eax, 0x73
0x2e31:	mov	edx, 0x3f
0x2e36:	cmovne	eax, edx
0x2e39:	nop	dword ptr [rax]
0x2e40:	mov	byte ptr [rsi], al
0x2e42:	mov	eax, edi
0x2e44:	and	eax, 0x100
0x2e49:	cmp	eax, 1
0x2e4c:	sbb	eax, eax
0x2e4e:	and	eax, 0xffffffbb
0x2e51:	add	eax, 0x72
0x2e54:	mov	byte ptr [rsi + 1], al
0x2e57:	mov	eax, edi
0x2e59:	and	eax, 0x80
0x2e5e:	cmp	eax, 1
0x2e61:	sbb	eax, eax
0x2e63:	and	eax, 0xffffffb6
0x2e66:	add	eax, 0x77
0x2e69:	mov	byte ptr [rsi + 2], al
0x2e6c:	mov	eax, edi
0x2e6e:	and	eax, 0x40
0x2e71:	cmp	eax, 1
0x2e74:	sbb	eax, eax
0x2e76:	test	edi, 0x800
0x2e7c:	je	0x2f20


0x99b1:	mov	edx, dword ptr [rax]
0x99b3:	mov	edi, ebp
0x99b5:	xor	eax, eax
0x99b7:	call	0x1750


0x98df:	jg	0x98f0


0x9999:	jg	0x99a0


0x9938:	cmp	esi, 0x402
0x993e:	je	0x99a0


0x997e:	cmp	esi, 0x40a
0x9984:	jne	0x9948


0x8519:	ucomiss	xmm0, xmm1
0x851c:	ja	0x8525


0x7918:	mov	rdi, qword ptr [r12 + 8]
0x791d:	test	rdi, rdi
0x7920:	je	0x7b38


0x786c:	mov	rax, qword ptr [r12 + 0x18]
0x7871:	cmp	qword ptr [rbp + 0x78], rax
0x7875:	je	0x7918


0x799a:	jmp	0x787b


0x77b8:	mov	qword ptr [r12], rbx
0x77bc:	mov	rdi, rbp
0x77bf:	call	0x1a90


0x7d20:	mov	rax, qword ptr [rbx + 0x48]
0x7d24:	mov	rdx, qword ptr [r12 + 0x20]
0x7d29:	mov	esi, 3
0x7d2e:	mov	qword ptr [r12], rbx
0x7d32:	mov	rdi, r12
0x7d35:	mov	byte ptr [rdx + rax], 0
0x7d39:	call	0x6800


0x3408:	add	rcx, 0x10
0x340c:	movzx	r10d, byte ptr [rcx + 1]
0x3411:	test	r10b, r10b
0x3414:	je	0x34cc


0x34ab:	and	r10d, 0xfff
0x34b2:	add	rcx, 0x10
0x34b6:	and	eax, r9d
0x34b9:	or	r11d, r10d
0x34bc:	movzx	r10d, byte ptr [rcx + 1]
0x34c1:	or	eax, esi
0x34c3:	test	r10b, r10b
0x34c6:	jne	0x341a


0x33fd:	cmp	r12b, 0x2b
0x3401:	jne	0x3408


0x34a0:	not	edi
0x34a2:	or	r9d, edi
0x34a5:	mov	r10d, r9d
0x34a8:	not	r10d
0x34ab:	and	r10d, 0xfff
0x34b2:	add	rcx, 0x10
0x34b6:	and	eax, r9d
0x34b9:	or	r11d, r10d
0x34bc:	movzx	r10d, byte ptr [rcx + 1]
0x34c1:	or	eax, esi
0x34c3:	test	r10b, r10b
0x34c6:	jne	0x341a


0x98e1:	cmp	esi, 1
0x98e4:	jne	0x9948


0x999b:	cmp	esi, 8
0x999e:	jne	0x9948


0x9940:	cmp	esi, 0x400
0x9946:	je	0x99a0


0x9986:	jmp	0x98f0


0x9948:	mov	eax, dword ptr [rsp]
0x994b:	cmp	eax, 0x2f
0x994e:	ja	0x9a8a


0x7b38:	mov	esi, 3
0x7b3d:	mov	rdi, r12
0x7b40:	call	0x6800


0x7926:	test	dh, 0x10
0x7929:	jne	0x7b22


0x787b:	test	byte ptr [rbp + 0x72], 2
0x787f:	jne	0x7d60


0x34cc:	test	r8, r8
0x34cf:	je	0x34d4


0x3403:	or	r11d, esi
0x3406:	or	eax, esi
0x3408:	add	rcx, 0x10
0x340c:	movzx	r10d, byte ptr [rcx + 1]
0x3411:	test	r10b, r10b
0x3414:	je	0x34cc


0x9954:	add	rax, qword ptr [rsp + 0x10]
0x9959:	mov	rdx, qword ptr [rax]
0x995c:	mov	edi, ebp
0x995e:	xor	eax, eax
0x9960:	call	0x1750


0x9a8a:	mov	rax, qword ptr [rsp + 8]
0x9a8f:	jmp	0x9959


0x792f:	mov	rcx, qword ptr [rbp + 0x30]
0x7933:	mov	edx, 0xffffffff
0x7938:	mov	rsi, rbp
0x793b:	mov	rdi, r12
0x793e:	call	0x6410


0x7b22:	and	dh, 0xef
0x7b25:	mov	dword ptr [r12 + 0x48], edx
0x7b2a:	call	0x5ff0


0x7885:	mov	rdi, qword ptr [r12 + 8]
0x788a:	test	rdi, rdi
0x788d:	je	0x789d


0x7d60:	mov	edi, dword ptr [rbp + 0x44]
0x7d63:	call	0x1860


0x34d4:	pop	rbx
0x34d5:	pop	rbp
0x34d6:	pop	r12
0x34d8:	ret	


0x34d1:	mov	dword ptr [r8], r11d
0x34d4:	pop	rbx
0x34d5:	pop	rbp
0x34d6:	pop	r12
0x34d8:	ret	


0x9959:	mov	rdx, qword ptr [rax]
0x995c:	mov	edi, ebp
0x995e:	xor	eax, eax
0x9960:	call	0x1750


0x789d:	mov	edi, dword ptr [r12 + 0x48]
0x78a2:	mov	r10d, 6
0x78a8:	lea	rsi, [r12 + 0x58]
0x78ad:	mov	word ptr [rbp + 0x70], r10w
0x78b2:	mov	rdx, rbp
0x78b5:	call	0x6740


0x788f:	call	0x5ff0


0x78ba:	pop	rbx
0x78bb:	mov	rax, rbp
0x78be:	pop	rbp
0x78bf:	pop	r12
0x78c1:	pop	r13
0x78c3:	pop	r14
0x78c5:	ret	


0x7943:	test	eax, eax
0x7945:	je	0x7c02


0x7c02:	mov	rbp, qword ptr [r12 + 8]
0x7c07:	jmp	0x7b56


0x794b:	call	0x1700


0x7b56:	mov	qword ptr [r12 + 8], 0
0x7b5f:	jmp	0x7ad2


0x7ad2:	mov	rax, qword ptr [rbp + 8]
0x7ad6:	lea	rsi, [rbp + 0x108]
0x7add:	mov	rdi, qword ptr [rax + 0x48]
0x7ae1:	mov	rax, qword ptr [rax + 0x38]
0x7ae5:	cmp	byte ptr [rax + rdi - 1], 0x2f
0x7aea:	lea	rdx, [rdi - 1]
0x7aee:	cmove	rdi, rdx
0x7af2:	add	rdi, qword ptr [r12 + 0x20]
0x7af7:	mov	byte ptr [rdi], 0x2f
0x7afa:	mov	rax, qword ptr [rbp + 0x60]
0x7afe:	add	rdi, 1
0x7b02:	lea	rdx, [rax + 1]
0x7b06:	call	0x19c0


0x19c0:	jmp	qword ptr [rip + 0x20c5a2]




0x28c8:	mov	byte ptr [rip + 0x20b819], 1
0x28cf:	pop	rbp
0x28d0:	ret	


0x6259:	test	eax, eax
0x625b:	js	0x6245


0x625d:	mov	edi, eax
0x625f:	call	0x1860


0x6633:	jmp	0x6515


0x6515:	mov	rcx, qword ptr [rsp + 0xa8]
0x651d:	xor	rcx, qword ptr fs:[0x28]
0x6526:	mov	eax, ebx
0x6528:	jne	0x6665


0x62df:	jmp	0x62b8


0x7894:	mov	qword ptr [r12 + 8], 0
0x789d:	mov	edi, dword ptr [r12 + 0x48]
0x78a2:	mov	r10d, 6
0x78a8:	lea	rsi, [r12 + 0x58]
0x78ad:	mov	word ptr [rbp + 0x70], r10w
0x78b2:	mov	rdx, rbp
0x78b5:	call	0x6740


0x7b2f:	mov	qword ptr [r12 + 8], 0
0x7b38:	mov	esi, 3
0x7b3d:	mov	rdi, r12
0x7b40:	call	0x6800


0x65dc:	test	al, al
0x65de:	mov	byte ptr [rsp + 0xf], al
0x65e2:	jne	0x6494


0x65e8:	mov	rdi, r15
0x65eb:	call	0x95f0


0x65f0:	test	eax, eax
0x65f2:	mov	r15d, eax
0x65f5:	mov	ebx, dword ptr [r13 + 0x48]
0x65f9:	js	0x648f


0x65ff:	test	bl, 2
0x6602:	mov	r12d, eax
0x6605:	mov	byte ptr [rsp + 0xf], 1
0x660a:	je	0x6580


0x6610:	jmp	0x64c0


0x6064:	test	al, al
0x6066:	je	0x6050


0x6050:	mov	rdi, rbx
0x6053:	call	0x95f0


0x6068:	pop	rbx
0x6069:	ret	


0x6058:	test	eax, eax
0x605a:	jns	0x6070


0x6070:	mov	edi, eax
0x6072:	call	0x1860


0x62c1:	add	rsp, 8
0x62c5:	mov	eax, ebp
0x62c7:	pop	rbx
0x62c8:	pop	rbp
0x62c9:	ret	


0x671d:	test	al, al
0x671f:	je	0x6701


0x6701:	pop	rbx
0x6702:	mov	eax, 1
0x6707:	pop	rbp
0x6708:	pop	r12
0x670a:	ret	


0x6721:	mov	edx, 2
0x6726:	mov	qword ptr [rbx], rbx
0x6729:	mov	word ptr [rbx + 0x70], dx
0x672d:	pop	rbx
0x672e:	pop	rbp
0x672f:	pop	r12
0x6731:	ret	


0x8ec0:	mov	edx, 8
0x8ec5:	mov	rbx, rax
0x8ec8:	xor	ecx, ecx
0x8eca:	mov	rax, rdx
0x8ecd:	mul	rbx
0x8ed0:	jo	0x906f


0x906f:	mov	ecx, 1
0x9074:	jmp	0x8ed6


0x8ed6:	test	rax, rax
0x8ed9:	mov	eax, 1
0x8ede:	cmovs	rcx, rax
0x8ee2:	test	rbx, rbx
0x8ee5:	je	0x8fc0


0x8eeb:	and	ecx, 1
0x8eee:	jne	0x8fc0


0x8ef4:	cmp	qword ptr [rbp + 0x10], rbx
0x8ef8:	je	0x9020


0x9020:	mov	ebx, 1
0x9025:	jmp	0x8fc2


0x8efe:	mov	esi, 0x10
0x8f03:	mov	rdi, rbx
0x8f06:	call	0x18a0


0x8fc2:	mov	rcx, qword ptr [rsp + 0x58]
0x8fc7:	xor	rcx, qword ptr fs:[0x28]
0x8fd0:	mov	eax, ebx
0x8fd2:	jne	0x906a


0x61b9:	cmp	rax, 0x52654973
0x61bf:	je	0x6210


0x6210:	mov	eax, 2
0x6215:	add	rsp, 8
0x6219:	ret	


0x61c1:	jle	0x61f0


0x61f0:	cmp	rax, 0x6969
0x61f6:	je	0x6205


0x61c3:	cmp	rax, 0x58465342
0x61c9:	je	0x6210


0x6205:	xor	eax, eax
0x6207:	add	rsp, 8
0x620b:	ret	


0x61f8:	cmp	rax, 0x9fa0
0x61fe:	je	0x6205


0x61cb:	mov	edx, 0xff534d42
0x61d0:	cmp	rax, rdx
0x61d3:	je	0x6205


0x6200:	test	rax, rax
0x6203:	jne	0x61dd


0x61d5:	cmp	rax, 0x5346414f
0x61db:	je	0x6205


0x61dd:	mov	eax, 1
0x61e2:	add	rsp, 8
0x61e6:	ret	


0x9b81:	test	rbp, rbp
0x9b84:	je	0x9ba6


0x9ba6:	add	rsp, 8
0x9baa:	pop	rbx
0x9bab:	pop	rbp
0x9bac:	pop	r12
0x9bae:	pop	r13
0x9bb0:	pop	r14
0x9bb2:	pop	r15
0x9bb4:	ret	


0x9b86:	xor	ebx, ebx
0x9b88:	nop	dword ptr [rax + rax]
0x9b90:	mov	rdx, r15
0x9b93:	mov	rsi, r14
0x9b96:	mov	edi, r13d
0x9b99:	call	qword ptr [r12 + rbx*8]


0x7b0b:	movzx	eax, word ptr [rbp + 0x70]
0x7b0f:	jmp	0x7a6e


0x7a6e:	cmp	ax, 0xb
0x7a72:	mov	qword ptr [r12], rbp
0x7a76:	je	0x78f8


0x78f8:	mov	rax, qword ptr [rbp + 0xa8]
0x78ff:	cmp	rax, 2
0x7903:	je	0x7ca8


0x7a7c:	cmp	ax, 1
0x7a80:	jne	0x78ba


0x7ca8:	mov	rbx, qword ptr [rbp + 8]
0x7cac:	cmp	qword ptr [rbx + 0x68], 0
0x7cb1:	jne	0x7cc4


0x7909:	cmp	rax, 1
0x790d:	je	0x78ba


0x7a86:	cmp	qword ptr [rbp + 0x58], 0
0x7a8b:	jne	0x7a96


0x7cb3:	mov	eax, dword ptr [r12 + 0x48]
0x7cb8:	and	eax, 0x18
0x7cbb:	cmp	eax, 0x18
0x7cbe:	je	0x7e1d


0x7cc4:	xor	edx, edx
0x7cc6:	mov	rsi, rbp
0x7cc9:	mov	rdi, r12
0x7ccc:	call	0x5c80


0x790f:	call	0x16f0


0x7a8d:	mov	rax, qword ptr [rbp + 0x78]
0x7a91:	mov	qword ptr [r12 + 0x18], rax
0x7a96:	mov	edi, dword ptr [r12 + 0x48]
0x7a9b:	lea	rsi, [r12 + 0x58]
0x7aa0:	mov	rdx, rbp
0x7aa3:	call	0x6690


0x7a96:	mov	edi, dword ptr [r12 + 0x48]
0x7a9b:	lea	rsi, [r12 + 0x58]
0x7aa0:	mov	rdx, rbp
0x7aa3:	call	0x6690


0x7e1d:	mov	esi, dword ptr [r12 + 0x2c]
0x7e22:	mov	rdi, rbx
0x7e25:	call	0x61b0


0x7e2a:	cmp	eax, 2
0x7e2d:	jne	0x7cc4


0x7e33:	movzx	eax, word ptr [rbp + 0x70]
0x7e37:	jmp	0x7a7c


0x7aa8:	test	al, al
0x7aaa:	jne	0x78ba


0x7ab0:	call	0x1700


0x6077:	jmp	0x605c


0x6264:	mov	dword ptr [rbx + 0x2c], ebp
0x6267:	add	rsp, 8
0x626b:	pop	rbx
0x626c:	pop	rbp
0x626d:	ret	


0x7d68:	jmp	0x7885


0x6277:	mov	dword ptr [rbx + 0x2c], ebp
0x627a:	add	rsp, 8
0x627e:	pop	rbx
0x627f:	pop	rbp
0x6280:	ret	


0x65ca:	jmp	0x6515


0x64d2:	test	eax, eax
0x64d4:	je	0x65a0


0x65a0:	mov	rax, qword ptr [rsp + 0x10]
0x65a5:	cmp	qword ptr [r14 + 0x78], rax
0x65a9:	je	0x6640


0x64da:	mov	ebx, 0xffffffff
0x64df:	test	r12d, r12d
0x64e2:	jns	0x6515


0x6640:	mov	rax, qword ptr [rsp + 0x18]
0x6645:	cmp	qword ptr [r14 + 0x80], rax
0x664c:	jne	0x65af


0x65af:	call	0x1700


0x64e4:	call	0x1700


0x6652:	mov	ebx, dword ptr [r13 + 0x48]
0x6656:	jmp	0x6580


0x5d23:	test	eax, eax
0x5d25:	jne	0x5dc0


0x5d2b:	mov	eax, dword ptr [rbp + 0x90]
0x5d31:	and	eax, 0xf000
0x5d36:	cmp	eax, 0x4000
0x5d3b:	je	0x5d60


0x5dc0:	call	0x1700


0x5d60:	mov	rax, qword ptr [rbp + 0x88]
0x5d67:	cmp	rax, 1
0x5d6b:	jbe	0x5df0


0x5d3d:	cmp	eax, 0xa000
0x5d42:	je	0x5e18


0x5df0:	mov	rax, -1
0x5df7:	jmp	0x5d86


0x5d71:	cmp	qword ptr [rbp + 0x58], 0
0x5d76:	jle	0x5df0


0x5e18:	mov	eax, 0xc
0x5e1d:	jmp	0x5cf8


0x5d48:	cmp	eax, 0x8000
0x5d4d:	sete	al
0x5d50:	movzx	eax, al
0x5d53:	pop	rbx
0x5d54:	lea	eax, [rax + rax*4 + 3]
0x5d58:	pop	rbp
0x5d59:	pop	r12
0x5d5b:	ret	


0x5d86:	cmp	byte ptr [rbp + 0x108], 0x2e
0x5d8d:	mov	qword ptr [rbp + 0x68], rax
0x5d91:	mov	eax, 1
0x5d96:	jne	0x5cf8


0x5d78:	test	byte ptr [r12 + 0x48], 0x20
0x5d7e:	lea	rdx, [rax - 2]
0x5d82:	cmove	rax, rdx
0x5d86:	cmp	byte ptr [rbp + 0x108], 0x2e
0x5d8d:	mov	qword ptr [rbp + 0x68], rax
0x5d91:	mov	eax, 1
0x5d96:	jne	0x5cf8


0x5cf8:	pop	rbx
0x5cf9:	pop	rbp
0x5cfa:	pop	r12
0x5cfc:	ret	


0x5d9c:	cmp	byte ptr [rbp + 0x109], 0
0x5da3:	jne	0x5e28


0x5da9:	cmp	qword ptr [rbp + 0x58], 1
0x5dae:	sbb	eax, eax
0x5db0:	and	eax, 0xfffffffc
0x5db3:	add	eax, 5
0x5db6:	jmp	0x5cf8


0x5e28:	mov	edx, dword ptr [rbp + 0x108]
0x5e2e:	and	edx, 0xffff00
0x5e34:	cmp	edx, 0x2e00
0x5e3a:	jne	0x5cf8


0x5e40:	jmp	0x5da9


0x7cd1:	mov	edx, dword ptr [rbp + 0x90]
0x7cd7:	mov	word ptr [rbp + 0x70], ax
0x7cdb:	and	edx, 0xf000
0x7ce1:	cmp	edx, 0x4000
0x7ce7:	jne	0x7a7c


0x7ced:	cmp	qword ptr [rbp + 0x58], 0
0x7cf2:	je	0x7e0e


0x7e0e:	cmp	ax, 1
0x7e12:	jne	0x78ba


0x7cf8:	mov	rcx, qword ptr [rbx + 0x68]
0x7cfc:	lea	rdx, [rcx - 1]
0x7d00:	cmp	rdx, -3
0x7d04:	ja	0x7d0a


0x7e18:	jmp	0x7a8d


0x7d06:	mov	qword ptr [rbx + 0x68], rdx
0x7d0a:	cmp	ax, 1
0x7d0e:	jne	0x78ba


0x7d0a:	cmp	ax, 1
0x7d0e:	jne	0x78ba


0x7d14:	jmp	0x7a96


0x78dd:	cmp	ax, 1
0x78e1:	mov	word ptr [rbp + 0x70], ax
0x78e5:	je	0x7c2c


0x7c2c:	mov	esi, dword ptr [r12 + 0x48]
0x7c31:	test	sil, 4
0x7c35:	je	0x7e3c


0x78eb:	cmp	ax, 0xb
0x78ef:	mov	qword ptr [r12], rbp
0x78f3:	jne	0x78ba


0x7e3c:	mov	edi, dword ptr [r12 + 0x2c]
0x7e41:	lea	rdx, [rip + 0x30d3]
0x7e48:	call	0x63d0


0x7c3b:	mov	qword ptr [r12], rbp
0x7c3f:	jmp	0x7a86


0x79aa:	mov	word ptr [rbp + 0x70], ax
0x79ae:	mov	rax, rbp
0x79b1:	pop	rbx
0x79b2:	pop	rbp
0x79b3:	pop	r12
0x79b5:	pop	r13
0x79b7:	pop	r14
0x79b9:	ret	


0x8f0b:	test	rax, rax
0x8f0e:	mov	qword ptr [rsp], rax
0x8f12:	je	0x8fc0


0x8f18:	mov	qword ptr [rsp + 0x10], rbx
0x8f1d:	shl	rbx, 4
0x8f21:	mov	qword ptr [rsp + 0x28], r12
0x8f26:	add	rbx, rax
0x8f29:	mov	rax, qword ptr [rbp + 0x30]
0x8f2d:	mov	r12, rsp
0x8f30:	xor	edx, edx
0x8f32:	mov	rsi, rbp
0x8f35:	mov	rdi, r12
0x8f38:	mov	qword ptr [rsp + 8], rbx
0x8f3d:	mov	qword ptr [rsp + 0x18], 0
0x8f46:	mov	qword ptr [rsp + 0x30], rax
0x8f4b:	mov	rax, qword ptr [rbp + 0x38]
0x8f4f:	mov	qword ptr [rsp + 0x20], 0
0x8f58:	mov	qword ptr [rsp + 0x38], rax
0x8f5d:	mov	rax, qword ptr [rbp + 0x40]
0x8f61:	mov	qword ptr [rsp + 0x40], rax
0x8f66:	mov	rax, qword ptr [rbp + 0x48]
0x8f6a:	mov	qword ptr [rsp + 0x48], rax
0x8f6f:	call	0x8530


0x8f74:	test	al, al
0x8f76:	mov	ebx, eax
0x8f78:	jne	0x9030


0x8f7e:	mov	rax, qword ptr [rsp + 0x48]
0x8f83:	mov	edx, 1
0x8f88:	mov	rsi, r12
0x8f8b:	mov	rdi, rbp
0x8f8e:	mov	qword ptr [rbp + 0x48], rax
0x8f92:	call	0x8530


0x9030:	mov	rdi, qword ptr [rbp]
0x9034:	call	0x1a90


0x8f97:	test	al, al
0x8f99:	je	0x9079


0x9079:	call	0x16f0


0x8f9f:	xor	edx, edx
0x8fa1:	mov	rsi, r12
0x8fa4:	mov	rdi, rbp
0x8fa7:	call	0x8530


0x8fac:	test	al, al
0x8fae:	je	0x9079


0x8fb4:	mov	rdi, qword ptr [rsp]
0x8fb8:	call	0x1a90


0x722d:	test	rax, rax
0x7230:	mov	rbx, rax
0x7233:	je	0x748e


0x748e:	add	rsp, 0x28
0x7492:	mov	rax, rbx
0x7495:	pop	rbx
0x7496:	pop	rbp
0x7497:	pop	r12
0x7499:	pop	r13
0x749b:	pop	r14
0x749d:	pop	r15
0x749f:	ret	


0x7239:	test	bpl, 2
0x723d:	mov	qword ptr [rax + 0x40], r14
0x7241:	jne	0x74a0


0x7247:	mov	rdi, qword ptr [r13]
0x724b:	mov	dword ptr [rax + 0x48], ebp
0x724e:	mov	dword ptr [rbx + 0x2c], 0xffffff9c
0x7255:	test	rdi, rdi
0x7258:	je	0x74bf


0x74a0:	mov	rdi, qword ptr [r13]
0x74a4:	mov	eax, ebp
0x74a6:	mov	dword ptr [rbx + 0x2c], 0xffffff9c
0x74ad:	and	ah, 0xfd
0x74b0:	or	eax, 4
0x74b3:	test	rdi, rdi
0x74b6:	mov	dword ptr [rbx + 0x48], eax
0x74b9:	jne	0x725e


0x74bf:	mov	edx, 0x1000
0x74c4:	jmp	0x7295


0x725e:	mov	r15, r13
0x7261:	xor	r12d, r12d
0x7264:	nop	dword ptr [rax]
0x7268:	call	0x17b0


0x7295:	lea	rsi, [rbx + 0x30]
0x7299:	lea	rdi, [rbx + 0x20]
0x729d:	call	0x62f0


0x5adf:	test	rax, rax
0x5ae2:	je	0x5ae9


0x5ae4:	add	rsp, 8
0x5ae8:	ret	


0x5ed1:	mov	r8, qword ptr [rbp + 0x10]
0x5ed5:	mov	rcx, r12
0x5ed8:	sub	rcx, 1
0x5edc:	mov	rax, qword ptr [r8]
0x5edf:	je	0x5f50


0x5f50:	mov	rdx, rax
0x5f53:	jmp	0x5f0a


0x5ee1:	mov	rdi, rax
0x5ee4:	mov	rdx, r8
0x5ee7:	jmp	0x5ef3


0x5f0a:	mov	qword ptr [rdx + 0x10], 0
0x5f12:	add	rsp, 8
0x5f16:	pop	rbx
0x5f17:	pop	rbp
0x5f18:	pop	r12
0x5f1a:	pop	r13
0x5f1c:	ret	


0x5ef3:	mov	rsi, qword ptr [rdx + 8]
0x5ef7:	add	rdx, 8
0x5efb:	sub	rcx, 1
0x5eff:	mov	qword ptr [rdi + 0x10], rsi
0x5f03:	jne	0x5ef0


0x5f05:	mov	rdx, qword ptr [r8 + r12*8 - 8]
0x5f0a:	mov	qword ptr [rdx + 0x10], 0
0x5f12:	add	rsp, 8
0x5f16:	pop	rbx
0x5f17:	pop	rbp
0x5f18:	pop	r12
0x5f1a:	pop	r13
0x5f1c:	ret	


0x5ef0:	mov	rdi, qword ptr [rdx]
0x5ef3:	mov	rsi, qword ptr [rdx + 8]
0x5ef7:	add	rdx, 8
0x5efb:	sub	rcx, 1
0x5eff:	mov	qword ptr [rdi + 0x10], rsi
0x5f03:	jne	0x5ef0


0x6591:	mov	ebx, eax
0x6593:	jmp	0x64df


0x64df:	test	r12d, r12d
0x64e2:	jns	0x6515


0x62b2:	test	eax, eax
0x62b4:	setne	bpl
0x62b8:	lea	rdi, [rbx + 0x60]
0x62bc:	call	0x6040


0x3533:	test	rax, rax
0x3536:	je	0x358d


0x358d:	mov	qword ptr [rip + 0x20ab94], rbx
0x3594:	mov	qword ptr [rip + 0x20ab25], rbx
0x359b:	pop	rbx
0x359c:	ret	


0x3538:	lea	r8, [rax + 1]
0x353c:	mov	rdx, r8
0x353f:	sub	rdx, rbx
0x3542:	cmp	rdx, 6
0x3546:	jle	0x358d


0x3548:	lea	rsi, [rax - 6]
0x354c:	lea	rdi, [rip + 0x712d]
0x3553:	mov	ecx, 7
0x3558:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3558:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x355a:	seta	dl
0x355d:	sbb	dl, 0
0x3560:	test	dl, dl
0x3562:	jne	0x358d


0x3564:	lea	rdi, [rip + 0x711d]
0x356b:	mov	ecx, 3
0x3570:	mov	rsi, r8
0x3573:	mov	rbx, r8
0x3576:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3576:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3578:	seta	dl
0x357b:	sbb	dl, 0
0x357e:	test	dl, dl
0x3580:	jne	0x358d


0x3582:	lea	rbx, [rax + 4]
0x3586:	mov	qword ptr [rip + 0x20ab13], rbx
0x358d:	mov	qword ptr [rip + 0x20ab94], rbx
0x3594:	mov	qword ptr [rip + 0x20ab25], rbx
0x359b:	pop	rbx
0x359c:	ret	


0x35ba:	call	0x16f0


0x8fbd:	jmp	0x8fc2


0x9039:	mov	rax, qword ptr [rsp]
0x903d:	mov	qword ptr [rbp], rax
0x9041:	mov	rax, qword ptr [rsp + 8]
0x9046:	mov	qword ptr [rbp + 8], rax
0x904a:	mov	rax, qword ptr [rsp + 0x10]
0x904f:	mov	qword ptr [rbp + 0x10], rax
0x9053:	mov	rax, qword ptr [rsp + 0x18]
0x9058:	mov	qword ptr [rbp + 0x18], rax
0x905c:	mov	rax, qword ptr [rsp + 0x48]
0x9061:	mov	qword ptr [rbp + 0x48], rax
0x9065:	jmp	0x8fc2


0x77c4:	cmp	qword ptr [rbx + 0x58], -1
0x77c9:	je	0x7c82


0x7c82:	mov	rdi, rbx
0x7c85:	xor	ebp, ebp
0x7c87:	call	0x1a90


0x77cf:	cmp	word ptr [rbx + 0x70], 0xb
0x77d4:	je	0x790f


0x77da:	mov	rdx, qword ptr [r12 + 0x20]
0x77df:	mov	rax, qword ptr [rbx + 0x48]
0x77e3:	mov	byte ptr [rdx + rax], 0
0x77e7:	cmp	qword ptr [rbx + 0x58], 0
0x77ec:	je	0x7bb0


0x7bb0:	mov	rdi, r12
0x7bb3:	call	0x6290


0x77f2:	movzx	eax, word ptr [rbx + 0x72]
0x77f6:	test	al, 2
0x77f8:	je	0x7b68


0x7b68:	test	al, 1
0x7b6a:	jne	0x7813


0x77fe:	mov	eax, dword ptr [r12 + 0x48]
0x7803:	mov	edi, dword ptr [rbx + 0x44]
0x7806:	test	al, 4
0x7808:	je	0x7c0c


0x7b70:	mov	rsi, qword ptr [rbx + 8]
0x7b74:	lea	rcx, [rip + 0x339f]
0x7b7b:	mov	edx, 0xffffffff
0x7b80:	mov	rdi, r12
0x7b83:	call	0x6410


0x7813:	mov	edi, dword ptr [r12 + 0x48]
0x7818:	cmp	word ptr [rbx + 0x70], 2
0x781d:	je	0x7833


0x7c0c:	test	ah, 2
0x7c0f:	je	0x7dad


0x780e:	call	0x1860


0x7833:	and	edi, 0x2000
0x7839:	mov	rbp, rbx
0x783c:	je	0x78ba


0x781f:	mov	ecx, dword ptr [rbx + 0x40]
0x7822:	test	ecx, ecx
0x7824:	je	0x7bc8


0x7dad:	call	0x1980


0x7c15:	mov	esi, edi
0x7c17:	mov	edx, 1
0x7c1c:	mov	rdi, r12
0x7c1f:	call	0x6220


0x7bc8:	mov	eax, 6
0x7bcd:	lea	rsi, [r12 + 0x58]
0x7bd2:	mov	rdx, rbx
0x7bd5:	mov	word ptr [rbx + 0x70], ax
0x7bd9:	call	0x6740


0x782a:	mov	edx, 7
0x782f:	mov	word ptr [rbx + 0x70], dx
0x7833:	and	edi, 0x2000
0x7839:	mov	rbp, rbx
0x783c:	je	0x78ba


0x7bde:	mov	edi, dword ptr [r12 + 0x48]
0x7be3:	jmp	0x7833


0x7c24:	mov	edi, dword ptr [rbx + 0x44]
0x7c27:	jmp	0x780e


0x7db2:	test	eax, eax
0x7db4:	je	0x7dc9


0x7dc9:	mov	edi, dword ptr [rbx + 0x44]
0x7dcc:	jmp	0x780e


0x7db6:	call	0x1700


0x7b88:	test	eax, eax
0x7b8a:	je	0x7813


0x7b90:	call	0x1700


0x7bb8:	test	eax, eax
0x7bba:	jne	0x7b90


0x7bbc:	jmp	0x7813


0x7c8c:	call	0x1700


0x7784:	cmp	qword ptr [rbx + 0x58], 0
0x7789:	je	0x79c0


0x79c0:	mov	rdi, r12
0x79c3:	call	0x6290


0x778f:	movzx	eax, word ptr [rbx + 0x74]
0x7793:	mov	rbp, rbx
0x7796:	cmp	ax, 4
0x779a:	jne	0x7ac8


0x7ac8:	cmp	ax, 2
0x7acc:	je	0x7d6d


0x7d6d:	mov	edx, 1
0x7d72:	mov	rsi, rbx
0x7d75:	mov	rdi, r12
0x7d78:	call	0x5c80


0x7d7d:	cmp	ax, 1
0x7d81:	mov	word ptr [rbx + 0x70], ax
0x7d85:	je	0x7de1


0x7de1:	mov	esi, dword ptr [r12 + 0x48]
0x7de6:	test	sil, 4
0x7dea:	jne	0x7d87


0x7d87:	mov	esi, 3
0x7d8c:	mov	rbp, rbx
0x7d8f:	mov	word ptr [rbx + 0x74], si
0x7d93:	jmp	0x7ad2


0x7dec:	mov	edi, dword ptr [r12 + 0x2c]
0x7df1:	lea	rdx, [rip + 0x3123]
0x7df8:	call	0x63d0


0x79c8:	test	eax, eax
0x79ca:	jne	0x7dd1


0x79d0:	test	dword ptr [r12 + 0x48], 0x102
0x79d9:	mov	rdi, qword ptr [r12 + 0x58]
0x79de:	je	0x7b18


0x7dd1:	or	dword ptr [r12 + 0x48], 0x2000
0x7dda:	xor	ebp, ebp
0x7ddc:	jmp	0x78ba


0x7b18:	call	0x1a90


0x79e4:	test	rdi, rdi
0x79e7:	je	0x79ee


0x79ee:	mov	rdx, qword ptr [rbx + 0x60]
0x79f2:	lea	rbp, [rbx + 0x108]
0x79f9:	mov	rdi, qword ptr [r12 + 0x20]
0x79fe:	mov	rsi, rbp
0x7a01:	mov	qword ptr [rbx + 0x48], rdx
0x7a05:	add	rdx, 1
0x7a09:	call	0x19c0


0x79e9:	call	0x8d60


0x7a0e:	mov	esi, 0x2f
0x7a13:	mov	rdi, rbp
0x7a16:	call	0x1820


0x7a1b:	test	rax, rax
0x7a1e:	je	0x7a4b


0x7a4b:	mov	rax, qword ptr [r12 + 0x20]
0x7a50:	mov	edi, dword ptr [r12 + 0x48]
0x7a55:	lea	rsi, [r12 + 0x58]
0x7a5a:	mov	rbp, rbx
0x7a5d:	mov	qword ptr [rbx + 0x38], rax
0x7a61:	mov	qword ptr [rbx + 0x30], rax
0x7a65:	call	0x6360


0x7a20:	cmp	rbp, rax
0x7a23:	je	0x7bf0


0x7bf0:	cmp	byte ptr [rbx + 0x109], 0
0x7bf7:	jne	0x7a29


0x7a29:	lea	r13, [rax + 1]
0x7a2d:	mov	rdi, r13
0x7a30:	call	0x17b0


0x7bfd:	jmp	0x7a4b


0x7b1d:	jmp	0x79ee


0x4dad:	mov	qword ptr [rip + 0x2092cc], rbx
0x4db4:	pop	rbx
0x4db5:	mov	dword ptr [rip + 0x2092b9], 1
0x4dbf:	pop	rbp
0x4dc0:	pop	r12
0x4dc2:	ret	


0x75b5:	cmp	qword ptr [rbx + 0x58], 0
0x75ba:	mov	rdi, rbx
0x75bd:	js	0x75db


0x75db:	mov	rdi, rbx
0x75de:	call	0x1a90


0x75d1:	cmp	qword ptr [rbx + 0x58], 0
0x75d6:	mov	rdi, rbx
0x75d9:	jns	0x75bf


0x76cb:	jmp	0x75e3


0x8e19:	test	rbx, rbx
0x8e1c:	mov	rdi, rbx
0x8e1f:	jne	0x8e10


0x8e10:	mov	rbx, qword ptr [rdi + 8]
0x8e14:	call	0x1a90


0x8e2a:	pop	rbx
0x8e2b:	mov	rdi, r12
0x8e2e:	pop	rbp
0x8e2f:	pop	r12
0x8e31:	jmp	0x1a90


0x8de9:	test	rbx, rbx
0x8dec:	mov	rdi, rbx
0x8def:	jne	0x8de0


0x8de0:	mov	rbx, qword ptr [rdi + 8]
0x8de4:	call	0x1a90


0x4d87:	mov	qword ptr [rip + 0x2092fe], 0x100
0x4d92:	mov	qword ptr [rip + 0x2092ff], rbx
0x4d99:	lea	rbx, [rip + 0x2092f0]
0x4da0:	cmp	r12, rbx
0x4da3:	je	0x4db4


0x597d:	xor	eax, eax
0x597f:	pop	rbx
0x5980:	ret	


0x5f29:	mov	qword ptr [rbp + 0x10], 0
0x5f31:	mov	qword ptr [rbp + 0x38], 0
0x5f39:	add	rsp, 8
0x5f3d:	mov	rax, rbx
0x5f40:	pop	rbx
0x5f41:	pop	rbp
0x5f42:	pop	r12
0x5f44:	pop	r13
0x5f46:	ret	


0x601d:	test	rbp, rbp
0x6020:	jne	0x6000


0x6022:	add	rsp, 8
0x6026:	pop	rbx
0x6027:	pop	rbp
0x6028:	ret	


0x6000:	mov	rdi, qword ptr [rbx + 0x18]
0x6004:	mov	rbp, qword ptr [rbx + 0x10]
0x6008:	test	rdi, rdi
0x600b:	je	0x6012


0x75fa:	mov	rdi, qword ptr [rbp + 0x20]
0x75fe:	call	0x1a90


0x7603:	mov	eax, dword ptr [rbp + 0x48]
0x7606:	test	ah, 2
0x7609:	je	0x7670


0x7670:	test	al, 4
0x7672:	jne	0x7616


0x760b:	mov	edi, dword ptr [rbp + 0x2c]
0x760e:	test	edi, edi
0x7610:	jns	0x76a0


0x7674:	mov	edi, dword ptr [rbp + 0x28]
0x7677:	call	0x1980


0x7616:	xor	ebx, ebx
0x7618:	lea	rdi, [rbp + 0x60]
0x761c:	call	0x6040


0x76a0:	call	0x1860


0x76a5:	test	eax, eax
0x76a7:	je	0x7616


0x76ad:	call	0x1700


0x7621:	mov	rdi, qword ptr [rbp + 0x50]
0x7625:	test	rdi, rdi
0x7628:	je	0x762f


0x762f:	test	dword ptr [rbp + 0x48], 0x102
0x7636:	mov	rdi, qword ptr [rbp + 0x58]
0x763a:	je	0x7660


0x762a:	call	0x8d60


0x7660:	call	0x1a90


0x763c:	test	rdi, rdi
0x763f:	je	0x7646


0x7646:	mov	rdi, rbp
0x7649:	call	0x1a90


0x7641:	call	0x8d60


0x767c:	test	eax, eax
0x767e:	jne	0x76d0


0x7680:	mov	edi, dword ptr [rbp + 0x28]
0x7683:	call	0x1860


0x76d0:	call	0x1700


0x7688:	test	eax, eax
0x768a:	je	0x7616


0x768c:	call	0x1700


0x764e:	test	ebx, ebx
0x7650:	jne	0x7701


0x7656:	mov	eax, ebx
0x7658:	pop	rbx
0x7659:	pop	rbp
0x765a:	pop	r12
0x765c:	ret	


0x7701:	call	0x1700


0x7665:	jmp	0x7646


0x4d6c:	cmp	rbx, rbp
0x4d6f:	jne	0x4d60


0x4d60:	mov	rdi, qword ptr [rbx]
0x4d63:	add	rbx, 0x10
0x4d67:	call	0x1a90


0x632d:	mov	qword ptr [rbx], 0
0x6334:	call	0x1700


0x5e95:	test	rax, rax
0x5e98:	mov	rdi, rax
0x5e9b:	je	0x5f20


0x5f20:	mov	rdi, qword ptr [rbp + 0x10]
0x5f24:	call	0x1a90


0x5ea1:	mov	qword ptr [rbp + 0x10], rax
0x5ea5:	test	rbx, rbx
0x5ea8:	je	0x5ec1


0x5966:	test	rax, rax
0x5969:	jne	0x5970


0x596b:	test	rbx, rbx
0x596e:	jne	0x5981


0x5970:	pop	rbx
0x5971:	ret	


0x5981:	call	0x5b40


0x6312:	test	rax, rax
0x6315:	je	0x6348


0x6348:	mov	rdi, qword ptr [rbx]
0x634b:	call	0x1a90


0x6317:	mov	qword ptr [rbx], rax
0x631a:	mov	eax, 1
0x631f:	pop	rbx
0x6320:	ret	


0x6350:	mov	qword ptr [rbx], 0
0x6357:	xor	eax, eax
0x6359:	pop	rbx
0x635a:	ret	


0x72a2:	test	al, al
0x72a4:	mov	byte ptr [rsp + 0x16], al
0x72a8:	je	0x7549


0x7549:	mov	rdi, rbx
0x754c:	xor	ebx, ebx
0x754e:	call	0x1a90


0x72ae:	mov	rsi, qword ptr [r13]
0x72b2:	test	rsi, rsi
0x72b5:	je	0x7560


0x7560:	xor	r15d, r15d
0x7563:	test	r14, r14
0x7566:	jne	0x72f0


0x72bb:	lea	rsi, [rip + 0x38ff]
0x72c2:	xor	edx, edx
0x72c4:	mov	rdi, rbx
0x72c7:	call	0x5f60


0x756c:	xor	r12d, r12d
0x756f:	jmp	0x740c


0x72f0:	mov	eax, dword ptr [rbx + 0x48]
0x72f3:	shr	eax, 0xa
0x72f6:	and	eax, 1
0x72f9:	mov	byte ptr [rsp + 0x16], al
0x72fd:	test	rsi, rsi
0x7300:	je	0x756c


0x740c:	lea	rsi, [rip + 0x37ae]
0x7413:	xor	edx, edx
0x7415:	mov	rdi, rbx
0x7418:	call	0x5f60


0x7306:	shr	ebp, 0xb
0x7309:	mov	qword ptr [rsp + 0x18], 0
0x7312:	xor	r12d, r12d
0x7315:	xor	ebp, 1
0x7318:	mov	eax, ebp
0x731a:	xor	ebp, ebp
0x731c:	and	eax, 1
0x731f:	mov	byte ptr [rsp + 0x17], al
0x7323:	jmp	0x739c


0x739c:	mov	rdi, rsi
0x739f:	mov	qword ptr [rsp + 8], rsi
0x73a4:	call	0x17b0


0x7553:	jmp	0x748e


0x6842:	test	eax, eax
0x6844:	mov	dword ptr [rsp + 0x64], eax
0x6848:	js	0x6da0


0x6da0:	mov	rdi, qword ptr [rbp + 0x18]
0x6da4:	call	0x1870


0x684e:	cmp	qword ptr [r15 + 0x40], 0
0x6853:	je	0x7028


0x7028:	mov	qword ptr [rsp + 0x38], 0x186a0
0x7031:	mov	byte ptr [rsp + 0x5f], 1
0x7036:	mov	edi, dword ptr [r15 + 0x48]
0x703a:	jmp	0x686b


0x6859:	mov	qword ptr [rsp + 0x38], -1
0x6862:	mov	edi, dword ptr [r15 + 0x48]
0x6866:	mov	byte ptr [rsp + 0x5f], 1
0x686b:	mov	rcx, qword ptr [rbp + 0x48]
0x686f:	mov	rdx, qword ptr [rbp + 0x38]
0x6873:	mov	qword ptr [rsp + 0x40], 0
0x687c:	cmp	byte ptr [rdx + rcx - 1], 0x2f
0x6881:	lea	rax, [rcx - 1]
0x6885:	cmovne	rax, rcx
0x6889:	and	edi, 4
0x688c:	mov	qword ptr [rsp + 0x48], rax
0x6891:	je	0x68a3


0x686b:	mov	rcx, qword ptr [rbp + 0x48]
0x686f:	mov	rdx, qword ptr [rbp + 0x38]
0x6873:	mov	qword ptr [rsp + 0x40], 0
0x687c:	cmp	byte ptr [rdx + rcx - 1], 0x2f
0x6881:	lea	rax, [rcx - 1]
0x6885:	cmovne	rax, rcx
0x6889:	and	edi, 4
0x688c:	mov	qword ptr [rsp + 0x48], rax
0x6891:	je	0x68a3


0x68a3:	mov	rax, qword ptr [rsp + 0x48]
0x68a8:	mov	rbx, qword ptr [r15 + 0x30]
0x68ac:	mov	byte ptr [rsp + 0x5e], 0
0x68b1:	mov	byte ptr [rsp + 0x5d], 0
0x68b6:	mov	qword ptr [rsp + 8], 0
0x68bf:	mov	qword ptr [rsp + 0x10], 0
0x68c8:	add	rax, 1
0x68cc:	mov	qword ptr [rsp + 0x20], rbp
0x68d1:	sub	rbx, rax
0x68d4:	mov	qword ptr [rsp + 0x18], rax
0x68d9:	mov	rax, qword ptr [rbp + 0x58]
0x68dd:	mov	qword ptr [rsp + 0x28], rbx
0x68e2:	xor	ebx, ebx
0x68e4:	add	rax, 1
0x68e8:	mov	qword ptr [rsp + 0x30], rax
0x68ed:	jmp	0x69cf


0x6893:	add	rax, qword ptr [r15 + 0x20]
0x6897:	lea	rbx, [rax + 1]
0x689b:	mov	byte ptr [rax], 0x2f
0x689e:	mov	qword ptr [rsp + 0x40], rbx
0x68a3:	mov	rax, qword ptr [rsp + 0x48]
0x68a8:	mov	rbx, qword ptr [r15 + 0x30]
0x68ac:	mov	byte ptr [rsp + 0x5e], 0
0x68b1:	mov	byte ptr [rsp + 0x5d], 0
0x68b6:	mov	qword ptr [rsp + 8], 0
0x68bf:	mov	qword ptr [rsp + 0x10], 0
0x68c8:	add	rax, 1
0x68cc:	mov	qword ptr [rsp + 0x20], rbp
0x68d1:	sub	rbx, rax
0x68d4:	mov	qword ptr [rsp + 0x18], rax
0x68d9:	mov	rax, qword ptr [rbp + 0x58]
0x68dd:	mov	qword ptr [rsp + 0x28], rbx
0x68e2:	xor	ebx, ebx
0x68e4:	add	rax, 1
0x68e8:	mov	qword ptr [rsp + 0x30], rax
0x68ed:	jmp	0x69cf


0x69cf:	mov	rax, qword ptr [rsp + 0x20]
0x69d4:	mov	r13, qword ptr [rax + 0x18]
0x69d8:	test	r13, r13
0x69db:	je	0x6ea8


0x6ea8:	mov	rbp, rax
0x6eab:	cmp	byte ptr [rsp + 0x5d], 0
0x6eb0:	jne	0x6b18


0x69e1:	call	0x1700


0x6eb6:	test	byte ptr [r15 + 0x48], 4
0x6ebb:	je	0x6edb


0x6b18:	mov	rax, qword ptr [r15 + 8]
0x6b1c:	mov	rcx, qword ptr [r15 + 0x20]
0x6b20:	test	rax, rax
0x6b23:	je	0x6b50


0x6edb:	cmp	qword ptr [rsp + 0x50], 0
0x6ee1:	jne	0x6f50


0x6ebd:	mov	rax, qword ptr [rsp + 0x18]
0x6ec2:	cmp	qword ptr [r15 + 0x30], rax
0x6ec6:	je	0x6ecd


0x6b50:	mov	rax, qword ptr [rsp + 0x10]
0x6b55:	jmp	0x6b63


0x6ee3:	cmp	byte ptr [rsp + 0x5f], 0
0x6ee8:	je	0x6f50


0x6f50:	test	rbx, rbx
0x6f53:	jne	0x6ef6


0x6ecd:	sub	qword ptr [rsp + 0x40], 1
0x6ed3:	mov	rax, qword ptr [rsp + 0x40]
0x6ed8:	mov	byte ptr [rax], 0
0x6edb:	cmp	qword ptr [rsp + 0x50], 0
0x6ee1:	jne	0x6f50


0x6ec8:	test	rbx, rbx
0x6ecb:	jne	0x6ed3


0x6b63:	cmp	qword ptr [rax + 0x58], 0
0x6b68:	js	0x6eb6


0x6b43:	mov	qword ptr [rax + 0x38], rcx
0x6b47:	mov	rax, qword ptr [rax + 0x10]
0x6b4b:	test	rax, rax
0x6b4e:	jne	0x6b28


0x6b38:	sub	rdx, qword ptr [rax + 0x38]
0x6b3c:	add	rdx, rcx
0x6b3f:	mov	qword ptr [rax + 0x30], rdx
0x6b43:	mov	qword ptr [rax + 0x38], rcx
0x6b47:	mov	rax, qword ptr [rax + 0x10]
0x6b4b:	test	rax, rax
0x6b4e:	jne	0x6b28


0x6eea:	cmp	dword ptr [rsp + 0x58], 1
0x6eef:	je	0x6f30


0x6f55:	cmp	dword ptr [rsp + 0x58], 3
0x6f5a:	je	0x7118


0x6ef6:	cmp	byte ptr [rsp + 0x5e], 0
0x6efb:	jne	0x6ff8


0x6ed3:	mov	rax, qword ptr [rsp + 0x40]
0x6ed8:	mov	byte ptr [rax], 0
0x6edb:	cmp	qword ptr [rsp + 0x50], 0
0x6ee1:	jne	0x6f50


0x6b6e:	mov	rdx, qword ptr [rax + 0x30]
0x6b72:	lea	rsi, [rax + 0x108]
0x6b79:	cmp	rdx, rsi
0x6b7c:	je	0x6b89


0x6b28:	mov	rdx, qword ptr [rax + 0x30]
0x6b2c:	lea	rsi, [rax + 0x108]
0x6b33:	cmp	rdx, rsi
0x6b36:	je	0x6b43


0x6f30:	cmp	qword ptr [rbp + 0x58], 0
0x6f35:	jne	0x7066


0x6ef1:	test	rbx, rbx
0x6ef4:	je	0x6f30


0x7118:	movzx	eax, word ptr [rbp + 0x70]
0x711c:	cmp	ax, 7
0x7120:	je	0x6f60


0x6f60:	mov	rdi, qword ptr [rsp + 0x10]
0x6f65:	call	0x5ff0


0x6f01:	cmp	qword ptr [r15 + 0x40], 0
0x6f06:	je	0x6dc5


0x6ff8:	lea	rax, [rip - 0x13af]
0x6fff:	mov	rsi, qword ptr [rsp + 0x10]
0x7004:	mov	rdx, rbx
0x7007:	mov	rdi, r15
0x700a:	mov	qword ptr [r15 + 0x40], rax
0x700e:	call	0x5e50


0x6b89:	mov	rdx, qword ptr [rax + 0x10]
0x6b8d:	mov	qword ptr [rax + 0x38], rcx
0x6b91:	test	rdx, rdx
0x6b94:	jne	0x6b60


0x6b7e:	sub	rdx, qword ptr [rax + 0x38]
0x6b82:	add	rdx, rcx
0x6b85:	mov	qword ptr [rax + 0x30], rdx
0x6b89:	mov	rdx, qword ptr [rax + 0x10]
0x6b8d:	mov	qword ptr [rax + 0x38], rcx
0x6b91:	test	rdx, rdx
0x6b94:	jne	0x6b60


0x6f3b:	mov	rdi, r15
0x6f3e:	call	0x6290


0x7066:	mov	rsi, qword ptr [rbp + 8]
0x706a:	lea	rcx, [rip + 0x3ea9]
0x7071:	mov	edx, 0xffffffff
0x7076:	mov	rdi, r15
0x7079:	call	0x6410


0x7126:	cmp	ax, 4
0x712a:	je	0x6f60


0x6dc5:	mov	rbx, qword ptr [rsp + 0x68]
0x6dca:	xor	rbx, qword ptr fs:[0x28]
0x6dd3:	mov	rax, qword ptr [rsp + 0x10]
0x6dd8:	jne	0x71b1


0x6f0c:	cmp	rbx, 1
0x6f10:	je	0x6dc5


0x6b96:	mov	rdx, qword ptr [rax + 8]
0x6b9a:	jmp	0x6b60


0x6b60:	mov	rax, rdx
0x6b63:	cmp	qword ptr [rax + 0x58], 0
0x6b68:	js	0x6eb6


0x7130:	mov	esi, 6
0x7135:	mov	word ptr [rbp + 0x70], si
0x7139:	jmp	0x6f60


0x6dde:	add	rsp, 0x78
0x6de2:	pop	rbx
0x6de3:	pop	rbp
0x6de4:	pop	r12
0x6de6:	pop	r13
0x6de8:	pop	r14
0x6dea:	pop	r15
0x6dec:	ret	


0x71b1:	call	0x17e0


0x6f16:	mov	rsi, qword ptr [rsp + 0x10]
0x6f1b:	mov	rdx, rbx
0x6f1e:	mov	rdi, r15
0x6f21:	call	0x5e50


0x707e:	test	eax, eax
0x7080:	setne	al
0x7083:	jmp	0x6f48


0x6f48:	test	al, al
0x6f4a:	jne	0x70d3


0x70d3:	mov	edi, 7
0x70d8:	mov	word ptr [rbp + 0x70], di
0x70dc:	or	dword ptr [r15 + 0x48], 0x2000
0x70e4:	mov	rdi, qword ptr [rsp + 0x10]
0x70e9:	call	0x5ff0


0x6f43:	test	eax, eax
0x6f45:	setne	al
0x6f48:	test	al, al
0x6f4a:	jne	0x70d3


0x6f26:	mov	qword ptr [rsp + 0x10], rax
0x6f2b:	jmp	0x6dc5


0x7013:	mov	qword ptr [r15 + 0x40], 0
0x701b:	mov	qword ptr [rsp + 0x10], rax
0x7020:	jmp	0x6dc5


0x70ee:	mov	qword ptr [rsp + 0x10], 0
0x70f7:	jmp	0x6dc5


0x6f6a:	mov	qword ptr [rsp + 0x10], 0
0x6f73:	jmp	0x6dc5


0x6da9:	cmp	dword ptr [rsp + 0x58], 3
0x6dae:	mov	qword ptr [rbp + 0x18], 0
0x6db6:	je	0x6fdb


0x6fdb:	mov	r10d, 4
0x6fe1:	mov	word ptr [rbp + 0x70], r10w
0x6fe6:	call	0x1700


0x6dbc:	mov	qword ptr [rsp + 0x10], 0
0x6dc5:	mov	rbx, qword ptr [rsp + 0x68]
0x6dca:	xor	rbx, qword ptr fs:[0x28]
0x6dd3:	mov	rax, qword ptr [rsp + 0x10]
0x6dd8:	jne	0x71b1


0x7b45:	test	rax, rax
0x7b48:	mov	qword ptr [r12 + 8], rax
0x7b4d:	je	0x7c44


0x7c44:	mov	edi, dword ptr [r12 + 0x48]
0x7c49:	test	edi, 0x2000
0x7c4f:	jne	0x783e


0x7b53:	mov	rbp, rax
0x7b56:	mov	qword ptr [r12 + 8], 0
0x7b5f:	jmp	0x7ad2


0x7c55:	mov	r9d, dword ptr [rbp + 0x40]
0x7c59:	test	r9d, r9d
0x7c5c:	je	0x7c70


0x7c70:	lea	rsi, [r12 + 0x58]
0x7c75:	mov	rdx, rbp
0x7c78:	call	0x6740


0x7c5e:	cmp	word ptr [rbp + 0x70], 4
0x7c63:	je	0x7c70


0x7c65:	mov	r8d, 7
0x7c6b:	mov	word ptr [rbp + 0x70], r8w
0x7c70:	lea	rsi, [r12 + 0x58]
0x7c75:	mov	rdx, rbp
0x7c78:	call	0x6740


0x7c7d:	jmp	0x78ba


0x7d3e:	test	rax, rax
0x7d41:	mov	rbx, rax
0x7d44:	je	0x7d98


0x7d98:	test	byte ptr [r12 + 0x49], 0x20
0x7d9e:	jne	0x783e


0x7d46:	mov	rdi, rbp
0x7d49:	mov	rbp, rbx
0x7d4c:	call	0x1a90


0x7da4:	mov	rbx, qword ptr [rbp + 8]
0x7da8:	jmp	0x77b8


0x7d51:	jmp	0x7ad2


0x81f8:	mov	edi, eax
0x81fa:	call	0x9760


0x81ff:	mov	rcx, qword ptr [rsp + 0x18]
0x8204:	xor	rcx, qword ptr fs:[0x28]
0x820d:	jne	0x8239


0x820f:	add	rsp, 0x58
0x8213:	ret	


0x8239:	call	0x17e0


0x530c:	lea	rsi, [rip + 0x5868]
0x5313:	xor	edi, edi
0x5315:	mov	edx, 5
0x531a:	call	0x1790


0x5421:	jmp	0x530c


0x87cb:	lea	rdx, [rip + 0x27ea]
0x87d2:	xor	eax, eax
0x87d4:	mov	rcx, rbp
0x87d7:	mov	esi, 1
0x87dc:	mov	rdi, r12
0x87df:	call	0x1a50


0x87e4:	test	r13, r13
0x87e7:	js	0x8850


0x8850:	mov	rax, r13
0x8853:	mov	rdx, r13
0x8856:	pxor	xmm0, xmm0
0x885a:	shr	rax, 1
0x885d:	and	edx, 1
0x8860:	or	rax, rdx
0x8863:	test	rbp, rbp
0x8866:	cvtsi2sd	xmm0, rax
0x886b:	addsd	xmm0, xmm0
0x886f:	mulsd	xmm0, qword ptr [rip + 0x27e1]
0x8877:	jns	0x87ff


0x87e9:	pxor	xmm0, xmm0
0x87ed:	test	rbp, rbp
0x87f0:	cvtsi2sd	xmm0, r13
0x87f5:	mulsd	xmm0, qword ptr [rip + 0x285b]
0x87fd:	js	0x8879


0x8879:	mov	rax, rbp
0x887c:	pxor	xmm1, xmm1
0x8880:	shr	rax, 1
0x8883:	and	ebp, 1
0x8886:	or	rax, rbp
0x8889:	cvtsi2sd	xmm1, rax
0x888e:	addsd	xmm1, xmm1
0x8892:	jmp	0x8808


0x87ff:	pxor	xmm1, xmm1
0x8803:	cvtsi2sd	xmm1, rbp
0x8808:	divsd	xmm0, xmm1
0x880c:	lea	rdx, [rip + 0x27dd]
0x8813:	mov	rcx, r13
0x8816:	mov	rdi, r12
0x8819:	mov	esi, 1
0x881e:	mov	eax, 1
0x8823:	call	0x1a50


0x8808:	divsd	xmm0, xmm1
0x880c:	lea	rdx, [rip + 0x27dd]
0x8813:	mov	rcx, r13
0x8816:	mov	rdi, r12
0x8819:	mov	esi, 1
0x881e:	mov	eax, 1
0x8823:	call	0x1a50


0x8828:	add	rsp, 8
0x882c:	mov	rcx, rbx
0x882f:	mov	rdi, r12
0x8832:	pop	rbx
0x8833:	pop	rbp
0x8834:	pop	r12
0x8836:	pop	r13
0x8838:	lea	rdx, [rip + 0x2795]
0x883f:	mov	esi, 1
0x8844:	xor	eax, eax
0x8846:	jmp	0x1a50


0x9697:	mov	edi, eax
0x9699:	call	0x9760


0x969e:	mov	rsi, qword ptr [rsp + 0x18]
0x96a3:	xor	rsi, qword ptr fs:[0x28]
0x96ac:	jne	0x96d9


0x96ae:	add	rsp, 0x58
0x96b2:	ret	


0x96d9:	call	0x17e0


0x9965:	mov	ebx, eax
0x9967:	jmp	0x9900


0x9900:	mov	rcx, qword ptr [rsp + 0x18]
0x9905:	xor	rcx, qword ptr fs:[0x28]
0x990e:	mov	eax, ebx
0x9910:	jne	0x9a6d


0x9916:	add	rsp, 0x50
0x991a:	pop	rbx
0x991b:	pop	rbp
0x991c:	pop	r12
0x991e:	ret	


0x9a6d:	call	0x17e0


0x98f9:	mov	ebx, eax
0x98fb:	nop	dword ptr [rax + rax]
0x9900:	mov	rcx, qword ptr [rsp + 0x18]
0x9905:	xor	rcx, qword ptr fs:[0x28]
0x990e:	mov	eax, ebx
0x9910:	jne	0x9a6d


0x99bc:	mov	ebx, eax
0x99be:	jmp	0x9900


0x98a5:	test	eax, eax
0x98a7:	mov	ebx, eax
0x98a9:	js	0x9a38


0x9a38:	call	0x1700


0x98af:	mov	dword ptr [rip + 0x2049bf], 1
0x98b9:	jmp	0x9900


0x99cc:	test	eax, eax
0x99ce:	mov	ebx, eax
0x99d0:	js	0x9900


0x99d6:	cmp	dword ptr [rip + 0x20489b], -1
0x99dd:	jne	0x9900


0x99e3:	xor	eax, eax
0x99e5:	mov	esi, 1
0x99ea:	mov	edi, ebx
0x99ec:	call	0x1750


0x99f1:	test	eax, eax
0x99f3:	js	0x9a11


0x9a11:	call	0x1700


0x99f5:	or	eax, 1
0x99f8:	mov	esi, 2
0x99fd:	mov	edi, ebx
0x99ff:	mov	edx, eax
0x9a01:	xor	eax, eax
0x9a03:	call	0x1750


0x9a08:	cmp	eax, -1
0x9a0b:	jne	0x9900


0x9a83:	mov	ebx, eax
0x9a85:	jmp	0x9900


0x9aae:	test	eax, eax
0x9ab0:	je	0x9aba


0x9ab2:	test	dword ptr [rbx], 0x100
0x9ab8:	jne	0x9ac8


0x9ac8:	mov	rdi, rbx
0x9acb:	mov	edx, 1
0x9ad0:	xor	esi, esi
0x9ad2:	call	0x9ae0


0x1ae7:	lea	rsi, [rip + 0x90d3]
0x1aee:	mov	edi, 6
0x1af3:	call	0x19a0


0x5cad:	test	eax, eax
0x5caf:	je	0x5d2b


0x5cb1:	call	0x1700


0x334b:	test	eax, eax
0x334d:	jne	0x33a0


0x334f:	mov	ebx, dword ptr [rsp + 0x18]
0x3353:	mov	edi, 0x20
0x3358:	call	0x58f0


0x33a0:	xor	eax, eax
0x33a2:	jmp	0x337a


0x337a:	mov	rcx, qword ptr [rsp + 0x98]
0x3382:	xor	rcx, qword ptr fs:[0x28]
0x338b:	jne	0x33a4


0x338d:	add	rsp, 0xa0
0x3394:	pop	rbx
0x3395:	ret	


0x33a4:	call	0x17e0


0x3721:	cmp	r15d, 0xa
0x3725:	mov	qword ptr [rsp + 0x58], rax
0x372a:	ja	0x48df


0x3730:	lea	rcx, [rip + 0x6fc9]
0x3737:	mov	edx, r15d
0x373a:	movsxd	rax, dword ptr [rcx + rdx*4]
0x373e:	add	rax, rcx
0x3741:	jmp	rax


0x48df:	call	0x16f0


0x5282:	test	eax, eax
0x5284:	jne	0x52b8


0x5286:	mov	rax, qword ptr [rsp + 8]
0x528b:	mov	qword ptr [rbx], rax
0x528e:	mov	rax, qword ptr [rsp]
0x5292:	mov	qword ptr [rbx + 8], rax
0x5296:	mov	rax, rbx
0x5299:	mov	rcx, qword ptr [rsp + 0x98]
0x52a1:	xor	rcx, qword ptr fs:[0x28]
0x52aa:	jne	0x52bc


0x52b8:	xor	eax, eax
0x52ba:	jmp	0x5299


0x52ac:	add	rsp, 0xa0
0x52b3:	pop	rbx
0x52b4:	ret	


0x52bc:	call	0x17e0


0x5299:	mov	rcx, qword ptr [rsp + 0x98]
0x52a1:	xor	rcx, qword ptr fs:[0x28]
0x52aa:	jne	0x52bc


0x73a9:	cmp	rax, 2
0x73ad:	mov	rsi, qword ptr [rsp + 8]
0x73b2:	jbe	0x7328


0x7328:	mov	rdx, rax
0x732b:	mov	rdi, rbx
0x732e:	call	0x5f60


0x73b8:	cmp	byte ptr [rsp + 0x17], 0
0x73bd:	je	0x7328


0x73c3:	cmp	byte ptr [rsi + rax - 1], 0x2f
0x73c8:	jne	0x7328


0x73db:	sub	rax, 1
0x73df:	cmp	rax, 1
0x73e3:	jne	0x73d0


0x73e5:	jmp	0x7328


0x73d0:	cmp	byte ptr [rsi + rax - 2], 0x2f
0x73d5:	jne	0x7328


0x7a35:	lea	rdx, [rax + 1]
0x7a39:	mov	r14, rax
0x7a3c:	mov	rsi, r13
0x7a3f:	mov	rdi, rbp
0x7a42:	call	0x19c0


0x7a47:	mov	qword ptr [rbx + 0x60], r14
0x7a4b:	mov	rax, qword ptr [r12 + 0x20]
0x7a50:	mov	edi, dword ptr [r12 + 0x48]
0x7a55:	lea	rsi, [r12 + 0x58]
0x7a5a:	mov	rbp, rbx
0x7a5d:	mov	qword ptr [rbx + 0x38], rax
0x7a61:	mov	qword ptr [rbx + 0x30], rax
0x7a65:	call	0x6360


0x726d:	cmp	r12, rax
0x7270:	cmovb	r12, rax
0x7274:	add	r15, 8
0x7278:	mov	rdi, qword ptr [r15]
0x727b:	test	rdi, rdi
0x727e:	jne	0x7268


0x7280:	lea	rdx, [r12 + 1]
0x7285:	mov	eax, 0x1000
0x728a:	cmp	rdx, 0x1000
0x7291:	cmovb	rdx, rax
0x7295:	lea	rsi, [rbx + 0x30]
0x7299:	lea	rdi, [rbx + 0x20]
0x729d:	call	0x62f0


0x7268:	call	0x17b0


0x5b29:	mov	rdi, rbx
0x5b2c:	lea	rsi, [rax + 1]
0x5b30:	pop	rbx
0x5b31:	jmp	0x5af0


0x531f:	lea	rdx, [rip + 0x5b7a]
0x5326:	mov	rcx, rax
0x5329:	mov	r8d, 0x7e3
0x532f:	mov	esi, 1
0x5334:	mov	rdi, rbp
0x5337:	xor	eax, eax
0x5339:	call	0x1a50


0x533e:	lea	rsi, [rip + 0x58c3]
0x5345:	xor	edi, edi
0x5347:	mov	edx, 5
0x534c:	call	0x1790


0x5351:	mov	rsi, rbp
0x5354:	mov	rdi, rax
0x5357:	call	0x1890


0x1890:	jmp	qword ptr [rip + 0x20c63a]




0x292d:	mov	rdi, qword ptr [rip + 0x20b7ac]
0x2934:	mov	rdx, rax
0x2937:	mov	rcx, rbx
0x293a:	mov	esi, 1
0x293f:	xor	eax, eax
0x2941:	call	0x1a50


0x2946:	mov	edi, ebp
0x2948:	call	0x1a30


0x1a30:	jmp	qword ptr [rip + 0x20c56a]




0x295b:	mov	rcx, rbx
0x295e:	mov	r8, rbx
0x2961:	mov	rdx, rbx
0x2964:	mov	rsi, rax
0x2967:	mov	edi, 1
0x296c:	xor	eax, eax
0x296e:	call	0x19b0


0x19b0:	jmp	qword ptr [rip + 0x20c5aa]




0x5884:	lea	rdx, [rip + 0x534c]
0x588b:	mov	rsi, rax
0x588e:	mov	edi, 1
0x5893:	xor	eax, eax
0x5895:	call	0x19b0


0x5b57:	mov	edi, dword ptr [rip + 0x2084c3]
0x5b5d:	lea	rdx, [rip + 0x41b5]
0x5b64:	mov	rcx, rax
0x5b67:	xor	esi, esi
0x5b69:	xor	eax, eax
0x5b6b:	call	0x19d0


0x19d0:	jmp	qword ptr [rip + 0x20c59a]




0x5b8f:	test	rax, rax
0x5b92:	je	0x5ba0


0x5ba0:	call	0x1700


0x5b94:	add	rsp, 8
0x5b98:	ret	


0x5ba5:	cmp	dword ptr [rax], 0x16
0x5ba8:	je	0x5bb0


0x5bb0:	lea	rcx, [rip + 0x5359]
0x5bb7:	lea	rsi, [rip + 0x5322]
0x5bbe:	lea	rdi, [rip + 0x5338]
0x5bc5:	mov	edx, 0x29
0x5bca:	call	0x1840


0x5baa:	call	0x5b40


0x5cb6:	mov	r12, rax
0x5cb9:	mov	eax, dword ptr [rax]
0x5cbb:	cmp	eax, 2
0x5cbe:	je	0x5dd0


0x5dd0:	mov	rsi, qword ptr [rbp + 0x30]
0x5dd4:	mov	rdx, rbx
0x5dd7:	mov	edi, 1
0x5ddc:	call	0x17c0


0x5cc4:	lea	rdi, [rbx + 8]
0x5cc8:	mov	dword ptr [rbp + 0x40], eax
0x5ccb:	mov	qword ptr [rbp + 0x78], 0
0x5cd3:	mov	qword ptr [rbx + 0x88], 0
0x5cde:	xor	eax, eax
0x5ce0:	and	rdi, 0xfffffffffffffff8
0x5ce4:	sub	rbx, rdi
0x5ce7:	lea	ecx, [rbx + 0x90]
0x5ced:	shr	ecx, 3
0x5cf0:	rep stosq	qword ptr [rdi], rax


0x5cf3:	mov	eax, 0xa
0x5cf8:	pop	rbx
0x5cf9:	pop	rbp
0x5cfa:	pop	r12
0x5cfc:	ret	


0x5cf0:	rep stosq	qword ptr [rdi], rax


0x5de1:	test	eax, eax
0x5de3:	je	0x5e00


0x5e00:	mov	dword ptr [r12], 0
0x5e08:	mov	eax, 0xd
0x5e0d:	jmp	0x5cf8


0x5de5:	mov	eax, dword ptr [r12]
0x5de9:	jmp	0x5cc4


0x9a16:	mov	r12d, dword ptr [rax]
0x9a19:	mov	rbp, rax
0x9a1c:	mov	edi, ebx
0x9a1e:	call	0x1860


0x9a23:	mov	ebx, 0xffffffff
0x9a28:	mov	dword ptr [rbp], r12d
0x9a2c:	jmp	0x9900


0x9a3d:	cmp	dword ptr [rax], 0x16
0x9a40:	jne	0x98af


0x9a46:	xor	esi, esi
0x9a48:	xor	eax, eax
0x9a4a:	mov	edx, r12d
0x9a4d:	mov	edi, ebp
0x9a4f:	call	0x1750


0x9a54:	test	eax, eax
0x9a56:	mov	ebx, eax
0x9a58:	js	0x9900


0x9a5e:	mov	dword ptr [rip + 0x204810], 0xffffffff
0x9a68:	jmp	0x99e3


0x6feb:	mov	eax, dword ptr [rax]
0x6fed:	mov	dword ptr [rbp + 0x40], eax
0x6ff0:	jmp	0x6dbc


0x69e6:	mov	rdi, r13
0x69e9:	mov	dword ptr [rax], 0
0x69ef:	mov	r12, rax
0x69f2:	call	0x1910


0x1910:	jmp	qword ptr [rip + 0x20c5fa]




0x6339:	mov	dword ptr [rax], 0x24
0x633f:	xor	eax, eax
0x6341:	pop	rbx
0x6342:	ret	


0x7706:	mov	dword ptr [rax], ebx
0x7708:	mov	ebx, 0xffffffff
0x770d:	jmp	0x7656


0x7691:	mov	r12, rax
0x7694:	jmp	0x76f8


0x76f8:	mov	ebx, dword ptr [r12]
0x76fc:	jmp	0x7618


0x7618:	lea	rdi, [rbp + 0x60]
0x761c:	call	0x6040


0x76d5:	mov	edi, dword ptr [rbp + 0x28]
0x76d8:	mov	r12, rax
0x76db:	mov	ebx, dword ptr [rax]
0x76dd:	call	0x1860


0x76e2:	test	eax, eax
0x76e4:	je	0x7618


0x76ea:	test	ebx, ebx
0x76ec:	jne	0x7618


0x76b2:	mov	ebx, dword ptr [rax]
0x76b4:	jmp	0x7618


0x7c91:	mov	dword ptr [rax], 0
0x7c97:	mov	qword ptr [r12], 0
0x7c9f:	jmp	0x78ba


0x7b95:	mov	edi, dword ptr [r12 + 0x48]
0x7b9a:	mov	eax, dword ptr [rax]
0x7b9c:	or	edi, 0x2000
0x7ba2:	mov	dword ptr [rbx + 0x40], eax
0x7ba5:	mov	dword ptr [r12 + 0x48], edi
0x7baa:	jmp	0x7818


0x7818:	cmp	word ptr [rbx + 0x70], 2
0x781d:	je	0x7833


0x7dbb:	mov	eax, dword ptr [rax]
0x7dbd:	mov	dword ptr [rbx + 0x40], eax
0x7dc0:	or	dword ptr [r12 + 0x48], 0x2000
0x7dc9:	mov	edi, dword ptr [rbx + 0x44]
0x7dcc:	jmp	0x780e


0x5dc5:	mov	eax, dword ptr [rax]
0x5dc7:	jmp	0x5cc4


0x64e9:	mov	r12d, dword ptr [rax]
0x64ec:	mov	rbp, rax
0x64ef:	mov	edi, r15d
0x64f2:	call	0x1860


0x64f7:	mov	dword ptr [rbp], r12d
0x64fb:	jmp	0x6515


0x65b4:	mov	dword ptr [rax], 2
0x65ba:	jmp	0x64da


0x7ab5:	xor	ebp, ebp
0x7ab7:	mov	dword ptr [rax], 0xc
0x7abd:	jmp	0x78ba


0x7950:	mov	eax, dword ptr [rax]
0x7952:	or	word ptr [rbp + 0x72], 1
0x7957:	mov	dword ptr [rbp + 0x40], eax
0x795a:	mov	rbp, qword ptr [r12 + 8]
0x795f:	test	rbp, rbp
0x7962:	je	0x7b56


0x7968:	mov	rax, rbp
0x796b:	nop	dword ptr [rax + rax]
0x7970:	mov	rdx, qword ptr [rax + 8]
0x7974:	mov	rdx, qword ptr [rdx + 0x30]
0x7978:	mov	qword ptr [rax + 0x30], rdx
0x797c:	mov	rax, qword ptr [rax + 0x10]
0x7980:	test	rax, rax
0x7983:	jne	0x7970


0x7985:	jmp	0x7b56


0x7970:	mov	rdx, qword ptr [rax + 8]
0x7974:	mov	rdx, qword ptr [rdx + 0x30]
0x7978:	mov	qword ptr [rax + 0x30], rdx
0x797c:	mov	rax, qword ptr [rax + 0x10]
0x7980:	test	rax, rax
0x7983:	jne	0x7970


0x757d:	xor	ebx, ebx
0x757f:	mov	dword ptr [rax], 0x16
0x7585:	jmp	0x748e


0x7eb9:	mov	dword ptr [rax], 0x16
0x7ebf:	mov	eax, 1
0x7ec4:	add	rsp, 8
0x7ec8:	ret	


0x4911:	mov	r13, rax
0x4914:	mov	eax, dword ptr [rax]
0x4916:	test	r15d, r15d
0x4919:	mov	rbx, qword ptr [rip + 0x209760]
0x4920:	mov	dword ptr [rsp + 0x18], eax
0x4924:	js	0x4a91


0x4a91:	call	0x16f0


0x492a:	cmp	dword ptr [rip + 0x209747], r15d
0x4931:	jg	0x4995


0x4933:	cmp	r15d, 0x7fffffff
0x493a:	je	0x4a96


0x4995:	mov	eax, dword ptr [rbp + 4]
0x4998:	shl	r15, 4
0x499c:	sub	rsp, 8
0x49a0:	add	rbx, r15
0x49a3:	lea	r15, [rbp + 8]
0x49a7:	mov	r8d, dword ptr [rbp]
0x49ab:	mov	r11, qword ptr [rbx]
0x49ae:	mov	r12, qword ptr [rbx + 8]
0x49b2:	mov	rcx, r14
0x49b5:	or	eax, 1
0x49b8:	mov	dword ptr [rsp + 0x24], eax
0x49bc:	push	qword ptr [rbp + 0x30]
0x49bf:	mov	r9d, eax
0x49c2:	push	qword ptr [rbp + 0x28]
0x49c5:	push	r15
0x49c7:	mov	rsi, r11
0x49ca:	mov	rdx, qword ptr [rsp + 0x28]
0x49cf:	mov	rdi, r12
0x49d2:	mov	qword ptr [rsp + 0x30], r11
0x49d7:	call	0x36b0


0x4a96:	call	0x5b40


0x4940:	lea	r12d, [r15 + 1]
0x4944:	lea	rax, [rip + 0x209745]
0x494b:	movsxd	rsi, r12d
0x494e:	shl	rsi, 4
0x4952:	cmp	rbx, rax
0x4955:	je	0x4a70


0x4a70:	xor	edi, edi
0x4a72:	call	0x5950


0x495b:	mov	rdi, rbx
0x495e:	call	0x5950


0x4963:	mov	rbx, rax
0x4966:	mov	qword ptr [rip + 0x209713], rax
0x496d:	movsxd	rdi, dword ptr [rip + 0x209704]
0x4974:	mov	edx, r12d
0x4977:	xor	esi, esi
0x4979:	sub	edx, edi
0x497b:	shl	rdi, 4
0x497f:	movsxd	rdx, edx
0x4982:	add	rdi, rbx
0x4985:	shl	rdx, 4
0x4989:	call	0x1850


0x1850:	jmp	qword ptr [rip + 0x20c65a]




0x4a77:	movdqa	xmm0, xmmword ptr [rip + 0x209611]
0x4a7f:	mov	rbx, rax
0x4a82:	mov	qword ptr [rip + 0x2095f7], rax
0x4a89:	movups	xmmword ptr [rax], xmm0
0x4a8c:	jmp	0x496d


0x496d:	movsxd	rdi, dword ptr [rip + 0x209704]
0x4974:	mov	edx, r12d
0x4977:	xor	esi, esi
0x4979:	sub	edx, edi
0x497b:	shl	rdi, 4
0x497f:	movsxd	rdx, edx
0x4982:	add	rdi, rbx
0x4985:	shl	rdx, 4
0x4989:	call	0x1850


0x4aac:	mov	r12d, dword ptr [rax]
0x4aaf:	mov	rbp, rax
0x4ab2:	lea	rax, [rip + 0x209787]
0x4ab9:	test	rbx, rbx
0x4abc:	mov	esi, 0x38
0x4ac1:	cmove	rbx, rax
0x4ac5:	mov	rdi, rbx
0x4ac8:	call	0x5af0


0x4be2:	mov	r12d, dword ptr [rax]
0x4be5:	mov	rbp, rax
0x4be8:	lea	rax, [rbx + 8]
0x4bec:	sub	rsp, 8
0x4bf0:	mov	r9d, dword ptr [rbx + 4]
0x4bf4:	push	qword ptr [rbx + 0x30]
0x4bf7:	mov	r8d, dword ptr [rbx]
0x4bfa:	push	qword ptr [rbx + 0x28]
0x4bfd:	mov	rdx, r15
0x4c00:	push	rax
0x4c01:	mov	rcx, qword ptr [rsp + 0x28]
0x4c06:	mov	rsi, r14
0x4c09:	mov	rdi, r13
0x4c0c:	call	0x36b0


0x4c5f:	test	r12, r12
0x4c62:	mov	r13, rax
0x4c65:	mov	eax, dword ptr [rax]
0x4c67:	sete	bpl
0x4c6b:	or	ebp, dword ptr [rbx + 4]
0x4c6e:	lea	r10, [rbx + 8]
0x4c72:	sub	rsp, 8
0x4c76:	mov	r8d, dword ptr [rbx]
0x4c79:	mov	rcx, r15
0x4c7c:	mov	dword ptr [rsp + 0x14], eax
0x4c80:	push	qword ptr [rbx + 0x30]
0x4c83:	mov	rdx, r14
0x4c86:	push	qword ptr [rbx + 0x28]
0x4c89:	push	r10
0x4c8b:	xor	esi, esi
0x4c8d:	mov	r9d, ebp
0x4c90:	xor	edi, edi
0x4c92:	mov	qword ptr [rsp + 0x40], r10
0x4c97:	call	0x36b0


0x7ee3:	test	r12d, 0xffffefff
0x7eea:	mov	r13, rax
0x7eed:	jne	0x7fd8


0x7ef3:	mov	rbp, qword ptr [rbx]
0x7ef6:	mov	dword ptr [rax], 0
0x7efc:	test	byte ptr [rbx + 0x49], 0x20
0x7f00:	jne	0x7f80


0x7fd8:	mov	dword ptr [rax], 0x16
0x7fde:	xor	eax, eax
0x7fe0:	jmp	0x7f64


0x7f02:	movzx	eax, word ptr [rbp + 0x70]
0x7f06:	cmp	ax, 9
0x7f0a:	je	0x7f70


0x7f80:	pop	rbx
0x7f81:	xor	eax, eax
0x7f83:	pop	rbp
0x7f84:	pop	r12
0x7f86:	pop	r13
0x7f88:	pop	r14
0x7f8a:	ret	


0x7f64:	pop	rbx
0x7f65:	pop	rbp
0x7f66:	pop	r12
0x7f68:	pop	r13
0x7f6a:	pop	r14
0x7f6c:	ret	


0x7f70:	pop	rbx
0x7f71:	mov	rax, qword ptr [rbp + 0x10]
0x7f75:	pop	rbp
0x7f76:	pop	r12
0x7f78:	pop	r13
0x7f7a:	pop	r14
0x7f7c:	ret	


0x7f0c:	cmp	ax, 1
0x7f10:	jne	0x7f80


0x7f12:	mov	rdi, qword ptr [rbx + 8]
0x7f16:	test	rdi, rdi
0x7f19:	je	0x7f20


0x7f20:	cmp	r12d, 0x1000
0x7f27:	mov	r14d, 1
0x7f2d:	jne	0x7f3c


0x7f1b:	call	0x5ff0


0x7f2f:	or	dword ptr [rbx + 0x48], 0x1000
0x7f36:	mov	r14d, 2
0x7f3c:	cmp	qword ptr [rbp + 0x58], 0
0x7f41:	jne	0x7f55


0x7f3c:	cmp	qword ptr [rbp + 0x58], 0
0x7f41:	jne	0x7f55


0x7f43:	mov	rax, qword ptr [rbp + 0x30]
0x7f47:	cmp	byte ptr [rax], 0x2f
0x7f4a:	je	0x7f55


0x7f55:	mov	esi, r14d
0x7f58:	mov	rdi, rbx
0x7f5b:	call	0x6800


0x7f4c:	mov	esi, dword ptr [rbx + 0x48]
0x7f4f:	test	sil, 4
0x7f53:	je	0x7f90


0x7f90:	mov	edi, dword ptr [rbx + 0x2c]
0x7f93:	lea	rdx, [rip + 0x2f81]
0x7f9a:	call	0x63d0


0x7f60:	mov	qword ptr [rbx + 8], rax
0x7f64:	pop	rbx
0x7f65:	pop	rbp
0x7f66:	pop	r12
0x7f68:	pop	r13
0x7f6a:	pop	r14
0x7f6c:	ret	


0x8057:	cmp	rax, -3
0x805b:	mov	rbp, rax
0x805e:	jbe	0x8080


0x8080:	mov	rdx, qword ptr [rsp + 8]
0x8085:	xor	rdx, qword ptr fs:[0x28]
0x808e:	mov	rax, rbp
0x8091:	jne	0x809e


0x8060:	test	r12, r12
0x8063:	je	0x8080


0x8093:	add	rsp, 0x18
0x8097:	pop	rbx
0x8098:	pop	rbp
0x8099:	pop	r12
0x809b:	pop	r13
0x809d:	ret	


0x809e:	call	0x17e0


0x8065:	xor	edi, edi
0x8067:	call	0x8240


0x80bc:	mov	ebx, dword ptr [rbp]
0x80bf:	mov	rdi, rbp
0x80c2:	mov	r12, rax
0x80c5:	call	0x97a0


0x1af8:	lea	rsi, [rip + 0x81ae]
0x1aff:	lea	rdi, [rip + 0x817e]
0x1b06:	call	0x1780


0x1780:	jmp	qword ptr [rip + 0x20c6c2]




0x824b:	mov	rdx, rax
0x824e:	mov	eax, 1
0x8253:	test	rdx, rdx
0x8256:	je	0x8275


0x8275:	add	rsp, 8
0x8279:	ret	


0x8258:	lea	rdi, [rip + 0x2d3d]
0x825f:	mov	ecx, 2
0x8264:	mov	rsi, rdx
0x8267:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x8267:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x8269:	seta	cl
0x826c:	sbb	cl, 0
0x826f:	xor	eax, eax
0x8271:	test	cl, cl
0x8273:	jne	0x8280


0x8280:	lea	rdi, [rip + 0x2d17]
0x8287:	mov	ecx, 6
0x828c:	mov	rsi, rdx
0x828f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x828f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x8291:	seta	al
0x8294:	sbb	al, 0
0x8296:	test	al, al
0x8298:	setne	al
0x829b:	add	rsp, 8
0x829f:	ret	


0x806c:	test	al, al
0x806e:	jne	0x8080


0x8070:	movzx	eax, byte ptr [r13]
0x8075:	mov	ebp, 1
0x807a:	mov	dword ptr [rbx], eax
0x807c:	nop	dword ptr [rax]
0x8080:	mov	rdx, qword ptr [rsp + 8]
0x8085:	xor	rdx, qword ptr fs:[0x28]
0x808e:	mov	rax, rbp
0x8091:	jne	0x809e


0x63aa:	mov	rdi, rax
0x63ad:	mov	qword ptr [rbx], rax
0x63b0:	xor	eax, eax
0x63b2:	test	rdi, rdi
0x63b5:	je	0x6396


0x6396:	pop	rbx
0x6397:	ret	


0x63b7:	call	0x8130


0x63bc:	mov	eax, 1
0x63c1:	pop	rbx
0x63c2:	ret	


0x7a6a:	movzx	eax, word ptr [rbx + 0x70]
0x7a6e:	cmp	ax, 0xb
0x7a72:	mov	qword ptr [r12], rbp
0x7a76:	je	0x78f8


0x66ac:	test	rax, rax
0x66af:	mov	rbp, rax
0x66b2:	je	0x6738


0x6738:	pop	rbx
0x6739:	xor	eax, eax
0x673b:	pop	rbp
0x673c:	pop	r12
0x673e:	ret	


0x66b8:	mov	rax, qword ptr [rbx + 0x78]
0x66bc:	mov	rdi, qword ptr [r12]
0x66c0:	mov	rsi, rbp
0x66c3:	mov	qword ptr [rbp + 0x10], rbx
0x66c7:	mov	qword ptr [rbp], rax
0x66cb:	mov	rax, qword ptr [rbx + 0x80]
0x66d2:	mov	qword ptr [rbp + 8], rax
0x66d6:	call	0x9310


0x58f9:	test	rax, rax
0x58fc:	jne	0x5903


0x58fe:	test	rbx, rbx
0x5901:	jne	0x5905


0x5903:	pop	rbx
0x5904:	ret	


0x5905:	call	0x5b40


0x335d:	mov	edx, 0x13d
0x3362:	mov	dword ptr [rax + 4], 0xfff
0x3369:	mov	dword ptr [rax + 0xc], 0xfff
0x3370:	mov	word ptr [rax], dx
0x3373:	mov	dword ptr [rax + 8], ebx
0x3376:	mov	byte ptr [rax + 0x11], 0
0x337a:	mov	rcx, qword ptr [rsp + 0x98]
0x3382:	xor	rcx, qword ptr fs:[0x28]
0x338b:	jne	0x33a4


0x2ff0:	xor	esi, esi
0x2ff2:	xor	r11d, r11d
0x2ff5:	movzx	r9d, byte ptr [rbx]
0x2ff9:	cmp	r9b, 0x61
0x2ffd:	je	0x3250


0x3250:	mov	r11d, 0xfff
0x3256:	add	rbx, 1
0x325a:	jmp	0x2ff5


0x3003:	jle	0x3070


0x2ff5:	movzx	r9d, byte ptr [rbx]
0x2ff9:	cmp	r9b, 0x61
0x2ffd:	je	0x3250


0x3070:	cmp	r9b, 0x2d
0x3074:	je	0x3082


0x3005:	cmp	r9b, 0x6f
0x3009:	je	0x3280


0x3082:	lea	rdi, [rsi + 1]
0x3086:	shl	rsi, 4
0x308a:	add	rsi, rax
0x308d:	jmp	0x30f4


0x3076:	cmp	r9b, 0x3d
0x307a:	je	0x3082


0x3280:	or	r11d, 0x207
0x3287:	jmp	0x3256


0x300f:	cmp	r9b, 0x75
0x3013:	je	0x3270


0x30f4:	movsx	edx, byte ptr [rbx + 1]
0x30f8:	lea	rcx, [rbx + 1]
0x30fc:	cmp	dl, 0x67
0x30ff:	je	0x3240


0x307c:	cmp	r9b, 0x2b
0x3080:	jne	0x3023


0x3256:	add	rbx, 1
0x325a:	jmp	0x2ff5


0x3270:	or	r11d, 0x9c0
0x3277:	jmp	0x3256


0x3019:	cmp	r9b, 0x67
0x301d:	je	0x3260


0x3240:	lea	r8, [rbx + 2]
0x3244:	mov	r10d, 0x38
0x324a:	jmp	0x30ac


0x3105:	jg	0x3090


0x3023:	mov	rdi, rax
0x3026:	call	0x1a90


0x3260:	or	r11d, 0x438
0x3267:	jmp	0x3256


0x30ac:	mov	byte ptr [rsi], r9b
0x30af:	mov	byte ptr [rsi + 1], 3
0x30b3:	movzx	r9d, byte ptr [rbx + 2]
0x30b8:	mov	dword ptr [rsi + 4], r11d
0x30bc:	mov	rbx, r8
0x30bf:	mov	dword ptr [rsi + 8], r10d
0x30c3:	mov	edx, r10d
0x30c6:	and	edx, r11d
0x30c9:	test	r11d, r11d
0x30cc:	cmovne	r10d, edx
0x30d0:	mov	edx, r9d
0x30d3:	mov	dword ptr [rsi + 0xc], r10d
0x30d7:	add	rsi, 0x10
0x30db:	and	edx, 0xffffffef
0x30de:	lea	rcx, [rdi + 1]
0x30e2:	cmp	dl, 0x2d
0x30e5:	je	0x30f1


0x3107:	lea	r8d, [rdx - 0x30]
0x310b:	cmp	r8b, 7
0x310f:	ja	0x3180


0x3090:	cmp	dl, 0x6f
0x3093:	lea	r8, [rbx + 2]
0x3097:	je	0x3230


0x30f1:	mov	rdi, rcx
0x30f4:	movsx	edx, byte ptr [rbx + 1]
0x30f8:	lea	rcx, [rbx + 1]
0x30fc:	cmp	dl, 0x67
0x30ff:	je	0x3240


0x30e7:	cmp	r9b, 0x2b
0x30eb:	jne	0x32f0


0x3111:	xor	r8d, r8d
0x3114:	nop	dword ptr [rax]
0x3118:	lea	r8d, [rdx + r8*8 - 0x30]
0x311d:	add	rcx, 1
0x3121:	cmp	r8d, 0xfff
0x3128:	ja	0x3023


0x3180:	lea	r8d, [rdx - 0x58]
0x3184:	xor	r10d, r10d
0x3187:	mov	ebx, 1
0x318c:	cmp	r8b, 0x20
0x3190:	ja	0x31c9


0x3230:	mov	r10d, 7
0x3236:	jmp	0x30ac


0x309d:	cmp	dl, 0x75
0x30a0:	mov	r10d, 0x1c0
0x30a6:	jne	0x3180


0x32f0:	cmp	r9b, 0x2c
0x32f4:	jne	0x3302


0x312e:	movsx	edx, byte ptr [rcx]
0x3131:	lea	r10d, [rdx - 0x30]
0x3135:	cmp	r10b, 7
0x3139:	jbe	0x3118


0x31c9:	mov	byte ptr [rsi], r9b
0x31cc:	mov	byte ptr [rsi + 1], bl
0x31cf:	mov	r9d, edx
0x31d2:	mov	dword ptr [rsi + 4], r11d
0x31d6:	mov	dword ptr [rsi + 8], r10d
0x31da:	mov	rbx, rcx
0x31dd:	jmp	0x30c3


0x32f6:	add	rbx, 1
0x32fa:	mov	rsi, rdi
0x32fd:	jmp	0x2ff2


0x3302:	test	r9b, r9b
0x3305:	jne	0x3023


0x3118:	lea	r8d, [rdx + r8*8 - 0x30]
0x311d:	add	rcx, 1
0x3121:	cmp	r8d, 0xfff
0x3128:	ja	0x3023


0x313b:	test	r11d, r11d
0x313e:	jne	0x3023


0x30c3:	mov	edx, r10d
0x30c6:	and	edx, r11d
0x30c9:	test	r11d, r11d
0x30cc:	cmovne	r10d, edx
0x30d0:	mov	edx, r9d
0x30d3:	mov	dword ptr [rsi + 0xc], r10d
0x30d7:	add	rsi, 0x10
0x30db:	and	edx, 0xffffffef
0x30de:	lea	rcx, [rdi + 1]
0x30e2:	cmp	dl, 0x2d
0x30e5:	je	0x30f1


0x2ff2:	xor	r11d, r11d
0x2ff5:	movzx	r9d, byte ptr [rbx]
0x2ff9:	cmp	r9b, 0x61
0x2ffd:	je	0x3250


0x330b:	shl	rdi, 4
0x330f:	mov	byte ptr [rax + rdi + 1], 0
0x3314:	jmp	0x302d


0x3144:	test	dl, dl
0x3146:	je	0x3151


0x302d:	add	rsp, 8
0x3031:	pop	rbx
0x3032:	pop	rbp
0x3033:	ret	


0x3151:	mov	byte ptr [rsi], r9b
0x3154:	mov	byte ptr [rsi + 1], 1
0x3158:	mov	r9d, edx
0x315b:	mov	dword ptr [rsi + 4], 0xfff
0x3162:	mov	dword ptr [rsi + 8], r8d
0x3166:	mov	rbx, rcx
0x3169:	mov	r11d, 0xfff
0x316f:	mov	r10d, 0xfff
0x3175:	jmp	0x30d0


0x3148:	cmp	dl, 0x2c
0x314b:	jne	0x3023


0x30d0:	mov	edx, r9d
0x30d3:	mov	dword ptr [rsi + 0xc], r10d
0x30d7:	add	rsi, 0x10
0x30db:	and	edx, 0xffffffef
0x30de:	lea	rcx, [rdi + 1]
0x30e2:	cmp	dl, 0x2d
0x30e5:	je	0x30f1


0x302b:	xor	eax, eax
0x302d:	add	rsp, 8
0x3031:	pop	rbx
0x3032:	pop	rbp
0x3033:	ret	


0x32bf:	mov	edx, 0x13d
0x32c4:	mov	dword ptr [rax + 4], 0xfff
0x32cb:	mov	dword ptr [rax + 8], ebp
0x32ce:	mov	word ptr [rax], dx
0x32d1:	mov	dword ptr [rax + 0xc], ebx
0x32d4:	mov	byte ptr [rax + 0x11], 0
0x32d8:	add	rsp, 8
0x32dc:	pop	rbx
0x32dd:	pop	rbp
0x32de:	ret	


0x5aa9:	mov	rdx, rbx
0x5aac:	xor	esi, esi
0x5aae:	mov	rdi, rax
0x5ab1:	pop	rbx
0x5ab2:	jmp	0x1850


0x5b04:	add	rsp, 8
0x5b08:	mov	rdx, rbx
0x5b0b:	mov	rsi, rbp
0x5b0e:	pop	rbx
0x5b0f:	pop	rbp
0x5b10:	mov	rdi, rax
0x5b13:	jmp	0x18e0


0x18e0:	jmp	qword ptr [rip + 0x20c612]




0x5f83:	test	rax, rax
0x5f86:	mov	rbx, rax
0x5f89:	je	0x5fdc


0x5fdc:	add	rsp, 8
0x5fe0:	mov	rax, rbx
0x5fe3:	pop	rbx
0x5fe4:	pop	rbp
0x5fe5:	pop	r12
0x5fe7:	pop	r13
0x5fe9:	ret	


0x5f8b:	lea	rdi, [rax + 0x108]
0x5f92:	mov	rdx, rbp
0x5f95:	mov	rsi, r13
0x5f98:	call	0x18e0


0x7333:	test	rax, rax
0x7336:	mov	rcx, rax
0x7339:	je	0x7530


0x7530:	mov	rdi, r12
0x7533:	call	0x5ff0


0x733f:	mov	qword ptr [rax + 0x58], 0
0x7347:	mov	qword ptr [rax + 8], r15
0x734b:	lea	rax, [rax + 0x108]
0x7352:	test	r12, r12
0x7355:	mov	qword ptr [rcx + 0x30], rax
0x7359:	je	0x74d0


0x74d0:	xor	edx, edx
0x74d2:	mov	rsi, rcx
0x74d5:	mov	rdi, rbx
0x74d8:	mov	qword ptr [rsp + 8], rcx
0x74dd:	call	0x5c80


0x735f:	cmp	byte ptr [rsp + 0x16], 0
0x7364:	je	0x74d0


0x736a:	mov	esi, 0xb
0x736f:	test	r14, r14
0x7372:	mov	qword ptr [rcx + 0xa8], 2
0x737d:	mov	word ptr [rcx + 0x70], si
0x7381:	je	0x7510


0x7510:	mov	qword ptr [rcx + 0x10], 0
0x7518:	mov	rax, qword ptr [rsp + 0x18]
0x751d:	mov	qword ptr [rsp + 0x18], rcx
0x7522:	mov	qword ptr [rax + 0x10], rcx
0x7526:	jmp	0x738e


0x7387:	mov	qword ptr [rcx + 0x10], r12
0x738b:	mov	r12, rcx
0x738e:	add	rbp, 1
0x7392:	mov	rsi, qword ptr [r13 + rbp*8]
0x7397:	test	rsi, rsi
0x739a:	je	0x73f0


0x738e:	add	rbp, 1
0x7392:	mov	rsi, qword ptr [r13 + rbp*8]
0x7397:	test	rsi, rsi
0x739a:	je	0x73f0


0x73f0:	test	r14, r14
0x73f3:	je	0x740c


0x73f5:	cmp	rbp, 1
0x73f9:	jbe	0x740c


0x73fb:	mov	rsi, r12
0x73fe:	mov	rdx, rbp
0x7401:	mov	rdi, rbx
0x7404:	call	0x5e50


0x7409:	mov	r12, rax
0x740c:	lea	rsi, [rip + 0x37ae]
0x7413:	xor	edx, edx
0x7415:	mov	rdi, rbx
0x7418:	call	0x5f60


0x74e2:	mov	rcx, qword ptr [rsp + 8]
0x74e7:	test	r14, r14
0x74ea:	mov	word ptr [rcx + 0x70], ax
0x74ee:	jne	0x7387


0x74f4:	test	r12, r12
0x74f7:	mov	qword ptr [rcx + 0x10], 0
0x74ff:	jne	0x7518


0x7501:	mov	qword ptr [rsp + 0x18], rcx
0x7506:	mov	r12, rcx
0x7509:	jmp	0x738e


0x7518:	mov	rax, qword ptr [rsp + 0x18]
0x751d:	mov	qword ptr [rsp + 0x18], rcx
0x7522:	mov	qword ptr [rax + 0x10], rcx
0x7526:	jmp	0x738e


0x7538:	mov	rdi, r15
0x753b:	call	0x1a90


0x7540:	mov	rdi, qword ptr [rbx + 0x20]
0x7544:	call	0x1a90


0x741d:	test	rax, rax
0x7420:	mov	qword ptr [rbx], rax
0x7423:	je	0x7530


0x7429:	mov	edi, dword ptr [rbx + 0x48]
0x742c:	mov	edx, 9
0x7431:	lea	rsi, [rbx + 0x58]
0x7435:	mov	qword ptr [rax + 0x10], r12
0x7439:	mov	word ptr [rax + 0x70], dx
0x743d:	mov	qword ptr [rax + 0x58], 1
0x7445:	call	0x6360


0x744a:	test	al, al
0x744c:	je	0x7530


0x7452:	mov	esi, dword ptr [rbx + 0x48]
0x7455:	test	esi, 0x204
0x745b:	jne	0x7480


0x745d:	mov	edi, dword ptr [rbx + 0x2c]
0x7460:	lea	rdx, [rip + 0x3ab4]
0x7467:	call	0x63d0


0x7480:	lea	rdi, [rbx + 0x60]
0x7484:	mov	esi, 0xffffffff
0x7489:	call	0x9580


0x72cc:	test	rax, rax
0x72cf:	mov	r15, rax
0x72d2:	je	0x7540


0x72d8:	mov	rax, -1
0x72df:	test	r14, r14
0x72e2:	mov	rsi, qword ptr [r13]
0x72e6:	mov	qword ptr [r15 + 0x58], rax
0x72ea:	mov	qword ptr [r15 + 0x68], rax
0x72ee:	je	0x72fd


0x72fd:	test	rsi, rsi
0x7300:	je	0x756c


0x8b53:	test	rax, rax
0x8b56:	mov	rbx, rax
0x8b59:	je	0x8c0a


0x8c0a:	add	rsp, 8
0x8c0e:	mov	rax, rbx
0x8c11:	pop	rbx
0x8c12:	pop	rbp
0x8c13:	pop	r12
0x8c15:	pop	r13
0x8c17:	pop	r14
0x8c19:	pop	r15
0x8c1b:	ret	


0x8b5f:	test	r15, r15
0x8b62:	lea	rdi, [rax + 0x28]
0x8b66:	je	0x8c20


0x8c20:	lea	rax, [rip + 0x23f9]
0x8c27:	mov	qword ptr [rbx + 0x28], rax
0x8c2b:	call	0x84b0


0x8b6c:	mov	qword ptr [rax + 0x28], r15
0x8b70:	call	0x84b0


0x8b75:	test	al, al
0x8b77:	je	0x8c00


0x8c00:	mov	rdi, rbx
0x8c03:	xor	ebx, ebx
0x8c05:	call	0x1a90


0x8b7d:	cmp	byte ptr [r15 + 0x10], 0
0x8b82:	je	0x8c80


0x8c80:	test	rbp, rbp
0x8c83:	movss	xmm1, dword ptr [r15 + 8]
0x8c89:	jns	0x8c41


0x8b88:	mov	rdi, rbp
0x8b8b:	call	0x82a0


0x8c8b:	mov	rax, rbp
0x8c8e:	pxor	xmm0, xmm0
0x8c92:	shr	rax, 1
0x8c95:	and	ebp, 1
0x8c98:	or	rax, rbp
0x8c9b:	cvtsi2ss	xmm0, rax
0x8ca0:	addss	xmm0, xmm0
0x8ca4:	jmp	0x8c4a


0x8c41:	pxor	xmm0, xmm0
0x8c45:	cvtsi2ss	xmm0, rbp
0x8c4a:	divss	xmm0, xmm1
0x8c4e:	ucomiss	xmm0, dword ptr [rip + 0x23f7]
0x8c55:	jae	0x8c00


0x8c4a:	divss	xmm0, xmm1
0x8c4e:	ucomiss	xmm0, dword ptr [rip + 0x23f7]
0x8c55:	jae	0x8c00


0x8c57:	ucomiss	xmm0, dword ptr [rip + 0x23f2]
0x8c5e:	jb	0x8cb0


0x8cb0:	cvttss2si	rbp, xmm0
0x8cb5:	jmp	0x8b88


0x8c60:	subss	xmm0, dword ptr [rip + 0x23e8]
0x8c68:	movabs	rax, 0x8000000000000000
0x8c72:	cvttss2si	rbp, xmm0
0x8c77:	xor	rbp, rax
0x8c7a:	jmp	0x8b88


0x8b90:	mov	edx, 8
0x8b95:	mov	rbp, rax
0x8b98:	xor	ecx, ecx
0x8b9a:	mov	rax, rdx
0x8b9d:	mul	rbp
0x8ba0:	jo	0x8cba


0x8cba:	mov	ecx, 1
0x8cbf:	jmp	0x8ba6


0x8ba6:	test	rax, rax
0x8ba9:	js	0x8c00


0x8bab:	test	rcx, rcx
0x8bae:	jne	0x8c00


0x8bb0:	test	rbp, rbp
0x8bb3:	mov	qword ptr [rbx + 0x10], rbp
0x8bb7:	je	0x8c00


0x8bb9:	mov	esi, 0x10
0x8bbe:	mov	rdi, rbp
0x8bc1:	call	0x18a0


0x8bc6:	test	rax, rax
0x8bc9:	mov	qword ptr [rbx], rax
0x8bcc:	je	0x8c00


0x8bce:	shl	rbp, 4
0x8bd2:	mov	qword ptr [rbx + 0x18], 0
0x8bda:	mov	qword ptr [rbx + 0x20], 0
0x8be2:	add	rbp, rax
0x8be5:	mov	qword ptr [rbx + 0x30], r12
0x8be9:	mov	qword ptr [rbx + 0x38], r13
0x8bed:	mov	qword ptr [rbx + 8], rbp
0x8bf1:	mov	qword ptr [rbx + 0x40], r14
0x8bf5:	mov	qword ptr [rbx + 0x48], 0
0x8bfd:	jmp	0x8c0a


0x8c30:	test	al, al
0x8c32:	movss	xmm1, dword ptr [rip + 0x240e]
0x8c3a:	je	0x8c00


0x8c3c:	test	rbp, rbp
0x8c3f:	js	0x8c8b


0x6101:	test	rax, rax
0x6104:	mov	r12, rax
0x6107:	mov	qword ptr [rbx + 0x50], rax
0x610b:	jne	0x60b9


0x610d:	test	r13d, r13d
0x6110:	jns	0x6140


0x6140:	lea	rsi, [rsp + 0x10]
0x6145:	mov	edi, r13d
0x6148:	call	0x1a10


0x1a10:	jmp	qword ptr [rip + 0x20c57a]




0x638d:	test	rax, rax
0x6390:	mov	qword ptr [rbx], rax
0x6393:	setne	al
0x6396:	pop	rbx
0x6397:	ret	


0x963e:	test	rax, rax
0x9641:	je	0x9660


0x9660:	lea	rax, [rip + 0x19f9]
0x9667:	add	rsp, 8
0x966b:	ret	


0x9643:	cmp	byte ptr [rax], 0
0x9646:	lea	rdx, [rip + 0x1a13]
0x964d:	cmove	rax, rdx
0x9651:	add	rsp, 8
0x9655:	ret	


0x35d0:	movzx	edx, byte ptr [rax]
0x35d3:	and	edx, 0xffffffdf
0x35d6:	cmp	dl, 0x55
0x35d9:	je	0x3650


0x3650:	movzx	edx, byte ptr [rax + 1]
0x3654:	and	edx, 0xffffffdf
0x3657:	cmp	dl, 0x54
0x365a:	jne	0x35e0


0x35db:	cmp	dl, 0x47
0x35de:	je	0x3600


0x365c:	movzx	edx, byte ptr [rax + 2]
0x3660:	and	edx, 0xffffffdf
0x3663:	cmp	dl, 0x46
0x3666:	jne	0x35e0


0x35e0:	lea	rax, [rip + 0x70b4]
0x35e7:	lea	rdx, [rip + 0x70af]
0x35ee:	cmp	ebx, 9
0x35f1:	cmovne	rax, rdx
0x35f5:	add	rsp, 8
0x35f9:	pop	rbx
0x35fa:	pop	rbp
0x35fb:	ret	


0x3600:	movzx	edx, byte ptr [rax + 1]
0x3604:	and	edx, 0xffffffdf
0x3607:	cmp	dl, 0x42
0x360a:	jne	0x35e0


0x366c:	cmp	byte ptr [rax + 3], 0x2d
0x3670:	jne	0x35e0


0x360c:	cmp	byte ptr [rax + 2], 0x31
0x3610:	jne	0x35e0


0x3676:	cmp	byte ptr [rax + 4], 0x38
0x367a:	jne	0x35e0


0x3612:	cmp	byte ptr [rax + 3], 0x38
0x3616:	jne	0x35e0


0x3680:	cmp	byte ptr [rax + 5], 0
0x3684:	jne	0x35e0


0x3618:	cmp	byte ptr [rax + 4], 0x30
0x361c:	jne	0x35e0


0x368a:	cmp	byte ptr [rbp], 0x60
0x368e:	lea	rax, [rip + 0x6ff7]
0x3695:	lea	rdx, [rip + 0x6ff4]
0x369c:	cmovne	rax, rdx
0x36a0:	add	rsp, 8
0x36a4:	pop	rbx
0x36a5:	pop	rbp
0x36a6:	ret	


0x361e:	cmp	byte ptr [rax + 5], 0x33
0x3622:	jne	0x35e0


0x3624:	cmp	byte ptr [rax + 6], 0x30
0x3628:	jne	0x35e0


0x362a:	cmp	byte ptr [rax + 7], 0
0x362e:	jne	0x35e0


0x3630:	cmp	byte ptr [rbp], 0x60
0x3634:	lea	rax, [rip + 0x7059]
0x363b:	lea	rdx, [rip + 0x7056]
0x3642:	cmovne	rax, rdx
0x3646:	add	rsp, 8
0x364a:	pop	rbx
0x364b:	pop	rbp
0x364c:	ret	


0x96fa:	test	eax, eax
0x96fc:	js	0x9750


0x9750:	add	rsp, 8
0x9754:	xor	ebp, ebp
0x9756:	pop	rbx
0x9757:	mov	rax, rbp
0x975a:	pop	rbp
0x975b:	pop	r12
0x975d:	pop	r13
0x975f:	ret	


0x96fe:	mov	edi, eax
0x9700:	mov	ebx, eax
0x9702:	call	0x1a00


0x1a00:	jmp	qword ptr [rip + 0x20c582]




0x6caa:	test	rax, rax
0x6cad:	mov	qword ptr [rbp + 0x18], rax
0x6cb1:	je	0x6fd0


0x6fd0:	cmp	dword ptr [rsp + 0x58], 3
0x6fd5:	jne	0x6dbc


0x6cb7:	cmp	word ptr [rbp + 0x70], 0xb
0x6cbc:	je	0x7050


0x7050:	xor	edx, edx
0x7052:	mov	rsi, rbp
0x7055:	mov	rdi, r15
0x7058:	call	0x5c80


0x6cc2:	mov	edi, dword ptr [r15 + 0x48]
0x6cc6:	test	edi, 0x100
0x6ccc:	jne	0x6df0


0x6cd2:	cmp	qword ptr [r15 + 0x40], 1
0x6cd7:	sbb	rax, rax
0x6cda:	and	eax, 0x186a1
0x6cdf:	sub	rax, 1
0x6ce3:	cmp	dword ptr [rsp + 0x58], 2
0x6ce8:	mov	qword ptr [rsp + 0x38], rax
0x6ced:	je	0x7040


0x6df0:	lea	rbx, [r15 + 0x58]
0x6df4:	mov	rdx, rbp
0x6df7:	mov	rsi, rbx
0x6dfa:	call	0x6740


0x7040:	mov	byte ptr [rsp + 0x5f], 0
0x7045:	mov	edi, dword ptr [r15 + 0x48]
0x7049:	jmp	0x686b


0x6cf3:	mov	edx, dword ptr [r15 + 0x48]
0x6cf7:	mov	eax, dword ptr [rsp + 0x64]
0x6cfb:	and	edx, 0x38
0x6cfe:	cmp	edx, 0x18
0x6d01:	je	0x70a4


0x70a4:	cmp	qword ptr [rbp + 0x88], 2
0x70ac:	jne	0x6d07


0x6d07:	cmp	dword ptr [rsp + 0x58], 3
0x6d0c:	mov	r12d, 1
0x6d12:	sete	bl
0x6d15:	test	byte ptr [r15 + 0x49], 2
0x6d1a:	jne	0x70fc


0x70b2:	mov	esi, eax
0x70b4:	mov	rdi, rbp
0x70b7:	call	0x61b0


0x6d20:	test	eax, eax
0x6d22:	jns	0x7088


0x70fc:	mov	edi, eax
0x70fe:	mov	edx, 3
0x7103:	mov	esi, 0x406
0x7108:	xor	eax, eax
0x710a:	call	0x9820


0x6d28:	test	bl, bl
0x6d2a:	je	0x6d3b


0x7088:	xor	ecx, ecx
0x708a:	mov	edx, eax
0x708c:	mov	rsi, rbp
0x708f:	mov	rdi, r15
0x7092:	call	0x6410


0x6d3b:	or	word ptr [rbp + 0x72], 1
0x6d40:	mov	rdi, qword ptr [rbp + 0x18]
0x6d44:	call	0x1870


0x6d2c:	test	r12b, r12b
0x6d2f:	je	0x6d3b


0x6d31:	call	0x1700


0x6d36:	mov	eax, dword ptr [rax]
0x6d38:	mov	dword ptr [rbp + 0x40], eax
0x6d3b:	or	word ptr [rbp + 0x72], 1
0x6d40:	mov	rdi, qword ptr [rbp + 0x18]
0x6d44:	call	0x1870


0x6d49:	mov	edi, dword ptr [r15 + 0x48]
0x6d4d:	mov	qword ptr [rbp + 0x18], 0
0x6d55:	test	edi, 0x200
0x6d5b:	je	0x6d70


0x6d70:	mov	qword ptr [rbp + 0x18], 0
0x6d78:	mov	byte ptr [rsp + 0x5f], 0
0x6d7d:	jmp	0x686b


0x6d5d:	mov	eax, dword ptr [rsp + 0x64]
0x6d61:	test	eax, eax
0x6d63:	js	0x6d70


0x6d65:	mov	edi, eax
0x6d67:	call	0x1860


0x6d6c:	mov	edi, dword ptr [r15 + 0x48]
0x6d70:	mov	qword ptr [rbp + 0x18], 0
0x6d78:	mov	byte ptr [rsp + 0x5f], 0
0x6d7d:	jmp	0x686b


0x7097:	test	eax, eax
0x7099:	jne	0x6d28


0x709f:	jmp	0x6862


0x6862:	mov	edi, dword ptr [r15 + 0x48]
0x6866:	mov	byte ptr [rsp + 0x5f], 1
0x686b:	mov	rcx, qword ptr [rbp + 0x48]
0x686f:	mov	rdx, qword ptr [rbp + 0x38]
0x6873:	mov	qword ptr [rsp + 0x40], 0
0x687c:	cmp	byte ptr [rdx + rcx - 1], 0x2f
0x6881:	lea	rax, [rcx - 1]
0x6885:	cmovne	rax, rcx
0x6889:	and	edi, 4
0x688c:	mov	qword ptr [rsp + 0x48], rax
0x6891:	je	0x68a3


0x710f:	mov	dword ptr [rsp + 0x64], eax
0x7113:	jmp	0x6d20


0x70bc:	test	eax, eax
0x70be:	jne	0x713e


0x70c0:	mov	eax, dword ptr [rsp + 0x64]
0x70c4:	jmp	0x6d07


0x713e:	cmp	dword ptr [rsp + 0x58], 3
0x7143:	jne	0x7040


0x7149:	mov	eax, dword ptr [rsp + 0x64]
0x714d:	xor	r12d, r12d
0x7150:	mov	ebx, 1
0x7155:	jmp	0x6d15


0x6d15:	test	byte ptr [r15 + 0x49], 2
0x6d1a:	jne	0x70fc


0x6dff:	xor	edx, edx
0x6e01:	mov	rsi, rbp
0x6e04:	mov	rdi, r15
0x6e07:	call	0x5c80


0x6e0c:	mov	edi, dword ptr [r15 + 0x48]
0x6e10:	mov	rdx, rbp
0x6e13:	mov	rsi, rbx
0x6e16:	call	0x6690


0x6e1b:	test	al, al
0x6e1d:	jne	0x6cd2


0x6e23:	call	0x1700


0x6e28:	mov	qword ptr [rsp + 0x10], 0
0x6e31:	mov	dword ptr [rax], 0xc
0x6e37:	jmp	0x6dc5


0x705d:	mov	word ptr [rbp + 0x70], ax
0x7061:	jmp	0x6cd2


0x9b13:	mov	edx, r12d
0x9b16:	mov	rsi, rbp
0x9b19:	mov	edi, eax
0x9b1b:	call	0x1830


0x1830:	jmp	qword ptr [rip + 0x20c66a]




0x97ac:	test	eax, eax
0x97ae:	mov	rdi, rbx
0x97b1:	js	0x9807


0x9807:	pop	rbx
0x9808:	pop	rbp
0x9809:	pop	r12
0x980b:	jmp	0x1770


0x97b3:	call	0x1970


0x1770:	jmp	qword ptr [rip + 0x20c6ca]




0x97b8:	test	eax, eax
0x97ba:	jne	0x97e8


0x97bc:	mov	rdi, rbx
0x97bf:	call	0x9aa0


0x97e8:	mov	rdi, rbx
0x97eb:	call	0x18f0


0x97f0:	xor	esi, esi
0x97f2:	mov	edx, 1
0x97f7:	mov	edi, eax
0x97f9:	call	0x1830


0x97fe:	cmp	rax, -1
0x9802:	jne	0x97bc


0x9804:	mov	rdi, rbx
0x9807:	pop	rbx
0x9808:	pop	rbp
0x9809:	pop	r12
0x980b:	jmp	0x1770


0x9b20:	cmp	rax, -1
0x9b24:	je	0x9b32


0x9b32:	pop	rbx
0x9b33:	pop	rbp
0x9b34:	pop	r12
0x9b36:	ret	


0x9b26:	and	dword ptr [rbx], 0xffffffef
0x9b29:	mov	qword ptr [rbx + 0x90], rax
0x9b30:	xor	eax, eax
0x9b32:	pop	rbx
0x9b33:	pop	rbp
0x9b34:	pop	r12
0x9b36:	ret	


0x9707:	test	rax, rax
0x970a:	mov	rbp, rax
0x970d:	je	0x9728


0x9728:	call	0x1700


0x970f:	mov	dword ptr [r12], ebx
0x9713:	add	rsp, 8
0x9717:	mov	rax, rbp
0x971a:	pop	rbx
0x971b:	pop	rbp
0x971c:	pop	r12
0x971e:	pop	r13
0x9720:	ret	


0x972d:	mov	r13d, dword ptr [rax]
0x9730:	mov	r12, rax
0x9733:	mov	edi, ebx
0x9735:	call	0x1860


0x973a:	mov	rax, rbp
0x973d:	mov	dword ptr [r12], r13d
0x9741:	add	rsp, 8
0x9745:	pop	rbx
0x9746:	pop	rbp
0x9747:	pop	r12
0x9749:	pop	r13
0x974b:	ret	


0x614d:	test	eax, eax
0x614f:	jne	0x6112


0x6151:	test	r12, r12
0x6154:	mov	rbx, qword ptr [rsp + 0x10]
0x6159:	je	0x6114


0x6114:	mov	rdx, qword ptr [rsp + 0x88]
0x611c:	xor	rdx, qword ptr fs:[0x28]
0x6125:	mov	rax, rbx
0x6128:	jne	0x61a2


0x615b:	mov	edi, 0x10
0x6160:	call	0x1920


0x6165:	test	rax, rax
0x6168:	mov	r13, rax
0x616b:	je	0x6114


0x616d:	mov	rax, qword ptr [rbp + 0x78]
0x6171:	mov	qword ptr [r13 + 8], rbx
0x6175:	mov	rsi, r13
0x6178:	mov	rdi, r12
0x617b:	mov	qword ptr [r13], rax
0x617f:	call	0x9310


0x5f9d:	mov	rax, qword ptr [r12 + 0x20]
0x5fa2:	mov	byte ptr [rbx + rbp + 0x108], 0
0x5faa:	mov	qword ptr [rbx + 0x60], rbp
0x5fae:	mov	qword ptr [rbx + 0x50], r12
0x5fb2:	mov	dword ptr [rbx + 0x40], 0
0x5fb9:	mov	qword ptr [rbx + 0x18], 0
0x5fc1:	mov	qword ptr [rbx + 0x38], rax
0x5fc5:	mov	dword ptr [rbx + 0x72], 0x30000
0x5fcc:	mov	qword ptr [rbx + 0x20], 0
0x5fd4:	mov	qword ptr [rbx + 0x28], 0
0x5fdc:	add	rsp, 8
0x5fe0:	mov	rax, rbx
0x5fe3:	pop	rbx
0x5fe4:	pop	rbp
0x5fe5:	pop	r12
0x5fe7:	pop	r13
0x5fe9:	ret	


0x1b0b:	lea	rdi, [rip + 0x8172]
0x1b12:	call	0x1760


0x1760:	jmp	qword ptr [rip + 0x20c6d2]




0x4acd:	mov	dword ptr [rbp], r12d
0x4ad1:	pop	rbx
0x4ad2:	pop	rbp
0x4ad3:	pop	r12
0x4ad5:	ret	


0x498e:	mov	dword ptr [rip + 0x2096e3], r12d
0x4995:	mov	eax, dword ptr [rbp + 4]
0x4998:	shl	r15, 4
0x499c:	sub	rsp, 8
0x49a0:	add	rbx, r15
0x49a3:	lea	r15, [rbp + 8]
0x49a7:	mov	r8d, dword ptr [rbp]
0x49ab:	mov	r11, qword ptr [rbx]
0x49ae:	mov	r12, qword ptr [rbx + 8]
0x49b2:	mov	rcx, r14
0x49b5:	or	eax, 1
0x49b8:	mov	dword ptr [rsp + 0x24], eax
0x49bc:	push	qword ptr [rbp + 0x30]
0x49bf:	mov	r9d, eax
0x49c2:	push	qword ptr [rbp + 0x28]
0x49c5:	push	r15
0x49c7:	mov	rsi, r11
0x49ca:	mov	rdx, qword ptr [rsp + 0x28]
0x49cf:	mov	rdi, r12
0x49d2:	mov	qword ptr [rsp + 0x30], r11
0x49d7:	call	0x36b0


0x69f7:	test	rax, rax
0x69fa:	mov	rbp, rax
0x69fd:	je	0x6f80


0x6f80:	mov	eax, dword ptr [r12]
0x6f84:	mov	rbp, qword ptr [rsp + 0x20]
0x6f89:	test	eax, eax
0x6f8b:	je	0x6fae


0x6a03:	test	byte ptr [r15 + 0x48], 0x20
0x6a08:	jne	0x6a14


0x6fae:	mov	rdi, qword ptr [rbp + 0x18]
0x6fb2:	test	rdi, rdi
0x6fb5:	je	0x6eab


0x6f8d:	test	rbx, rbx
0x6f90:	mov	dword ptr [rbp + 0x40], eax
0x6f93:	jne	0x70c9


0x6a0a:	cmp	byte ptr [rax + 0x13], 0x2e
0x6a0e:	je	0x6bf0


0x6a14:	lea	r13, [rbp + 0x13]
0x6a18:	mov	rdi, r13
0x6a1b:	call	0x17b0


0x6eab:	cmp	byte ptr [rsp + 0x5d], 0
0x6eb0:	jne	0x6b18


0x6fbb:	call	0x1870


0x6f99:	cmp	qword ptr [rsp + 0x50], 0
0x6f9f:	mov	eax, 4
0x6fa4:	jne	0x70c9


0x70c9:	mov	eax, 7
0x70ce:	jmp	0x6faa


0x6bf0:	cmp	byte ptr [rax + 0x14], 0
0x6bf4:	je	0x6c01


0x6faa:	mov	word ptr [rbp + 0x70], ax
0x6fae:	mov	rdi, qword ptr [rbp + 0x18]
0x6fb2:	test	rdi, rdi
0x6fb5:	je	0x6eab


0x6c01:	mov	r13, qword ptr [rsp + 8]
0x6c06:	jmp	0x69ca


0x6bf6:	cmp	word ptr [rax + 0x14], 0x2e
0x6bfb:	jne	0x6a14


0x69ca:	mov	qword ptr [rsp + 8], r13
0x69cf:	mov	rax, qword ptr [rsp + 0x20]
0x69d4:	mov	r13, qword ptr [rax + 0x18]
0x69d8:	test	r13, r13
0x69db:	je	0x6ea8


0x6fc0:	mov	qword ptr [rbp + 0x18], 0
0x6fc8:	jmp	0x6eab


0x6a20:	mov	rsi, r13
0x6a23:	mov	rdx, rax
0x6a26:	mov	rdi, r15
0x6a29:	mov	r14, rax
0x6a2c:	call	0x5f60


0x6a31:	test	rax, rax
0x6a34:	mov	r13, rax
0x6a37:	je	0x6e50


0x6e50:	mov	rdi, r13
0x6e53:	mov	rbp, qword ptr [rsp + 0x20]
0x6e58:	mov	ebx, dword ptr [r12]
0x6e5c:	call	0x1a90


0x6a3d:	cmp	qword ptr [rsp + 0x28], r14
0x6a42:	ja	0x68f8


0x6a48:	mov	rax, qword ptr [r15 + 0x20]
0x6a4c:	lea	rsi, [r15 + 0x30]
0x6a50:	lea	rdi, [r15 + 0x20]
0x6a54:	mov	qword ptr [rsp + 0x28], rax
0x6a59:	mov	rax, qword ptr [rsp + 0x48]
0x6a5e:	lea	rdx, [rax + r14 + 2]
0x6a63:	call	0x62f0


0x68f8:	mov	r9, r14
0x68fb:	add	r9, qword ptr [rsp + 0x18]
0x6900:	jb	0x7160


0x7160:	mov	rdi, r13
0x7163:	mov	rbp, qword ptr [rsp + 0x20]
0x7168:	call	0x1a90


0x6906:	mov	rax, qword ptr [rsp + 0x30]
0x690b:	lea	rsi, [r13 + 0x108]
0x6912:	mov	qword ptr [r13 + 0x58], rax
0x6916:	mov	rax, qword ptr [r15]
0x6919:	mov	qword ptr [r13 + 0x48], r9
0x691d:	mov	qword ptr [r13 + 8], rax
0x6921:	mov	rax, qword ptr [rbp]
0x6925:	mov	qword ptr [r13 + 0x80], rax
0x692c:	mov	eax, dword ptr [r15 + 0x48]
0x6930:	test	al, 4
0x6932:	jne	0x6ba0


0x6938:	mov	qword ptr [r13 + 0x30], rsi
0x693c:	cmp	qword ptr [r15 + 0x40], 0
0x6941:	je	0x694c


0x6ba0:	mov	rax, qword ptr [r13 + 0x38]
0x6ba4:	mov	rdi, qword ptr [rsp + 0x40]
0x6ba9:	mov	qword ptr [r13 + 0x30], rax
0x6bad:	mov	rax, qword ptr [r13 + 0x60]
0x6bb1:	lea	rdx, [rax + 1]
0x6bb5:	call	0x19c0


0x694c:	movzx	edx, byte ptr [rbp + 0x12]
0x6950:	and	eax, 0x18
0x6953:	mov	esi, edx
0x6955:	sub	edx, 1
0x6958:	cmp	eax, 0x18
0x695b:	je	0x6c10


0x6943:	test	ah, 4
0x6946:	je	0x6c48


0x6c10:	and	esi, 0xfb
0x6c16:	je	0x6961


0x6961:	mov	ecx, 0xb
0x6966:	cmp	edx, 0xb
0x6969:	mov	word ptr [r13 + 0x70], cx
0x696e:	ja	0x6bd8


0x6c48:	xor	edx, edx
0x6c4a:	mov	rsi, r13
0x6c4d:	mov	rdi, r15
0x6c50:	call	0x5c80


0x6c1c:	mov	eax, 0xb
0x6c21:	cmp	edx, 0xb
0x6c24:	mov	word ptr [r13 + 0x70], ax
0x6c29:	jbe	0x71b6


0x6974:	lea	rax, [rip + 0x45a5]
0x697b:	mov	eax, dword ptr [rax + rdx*4]
0x697e:	mov	dword ptr [r13 + 0x90], eax
0x6985:	mov	eax, 2
0x698a:	mov	qword ptr [r13 + 0xa8], rax
0x6991:	cmp	qword ptr [rsp + 0x10], 0
0x6997:	mov	qword ptr [r13 + 0x10], 0
0x699f:	je	0x6bc8


0x6bd8:	mov	dword ptr [r13 + 0x90], 0
0x6be3:	mov	eax, 2
0x6be8:	jmp	0x698a


0x71b6:	lea	rax, [rip + 0x3d63]
0x71bd:	mov	eax, dword ptr [rax + rdx*4]
0x71c0:	mov	dword ptr [r13 + 0x90], eax
0x71c7:	mov	eax, 1
0x71cc:	jmp	0x698a


0x6c2f:	mov	dword ptr [r13 + 0x90], 0
0x6c3a:	mov	eax, 1
0x6c3f:	jmp	0x698a


0x6bc8:	mov	qword ptr [rsp + 0x10], r13
0x6bcd:	jmp	0x69ae


0x69a5:	mov	rax, qword ptr [rsp + 8]
0x69aa:	mov	qword ptr [rax + 0x10], r13
0x69ae:	cmp	rbx, 0x2710
0x69b5:	je	0x6ab0


0x698a:	mov	qword ptr [r13 + 0xa8], rax
0x6991:	cmp	qword ptr [rsp + 0x10], 0
0x6997:	mov	qword ptr [r13 + 0x10], 0
0x699f:	je	0x6bc8


0x69ae:	cmp	rbx, 0x2710
0x69b5:	je	0x6ab0


0x6ab0:	cmp	qword ptr [r15 + 0x40], 0
0x6ab5:	jne	0x69bb


0x69bb:	add	rbx, 1
0x69bf:	cmp	rbx, qword ptr [rsp + 0x38]
0x69c4:	jae	0x6b08


0x6abb:	mov	esi, dword ptr [rsp + 0x64]
0x6abf:	mov	rdi, qword ptr [rsp + 0x20]
0x6ac4:	call	0x6080


0x6b08:	cmp	byte ptr [rsp + 0x5d], 0
0x6b0d:	mov	rbp, qword ptr [rsp + 0x20]
0x6b12:	je	0x6eb6


0x6ac9:	cmp	rax, 0x1021994
0x6acf:	je	0x6e40


0x6e40:	mov	byte ptr [rsp + 0x5e], 0
0x6e45:	jmp	0x69bb


0x6ad5:	mov	ecx, 0xff534d42
0x6ada:	cmp	rax, rcx
0x6add:	je	0x6e40


0x6ae3:	cmp	rax, 0x6969
0x6ae9:	je	0x6e40


0x6aef:	add	rbx, 1
0x6af3:	cmp	rbx, qword ptr [rsp + 0x38]
0x6af8:	mov	byte ptr [rsp + 0x5e], 1
0x6afd:	jb	0x69ca


0x6c55:	mov	word ptr [r13 + 0x70], ax
0x6c5a:	jmp	0x6991


0x6991:	cmp	qword ptr [rsp + 0x10], 0
0x6997:	mov	qword ptr [r13 + 0x10], 0
0x699f:	je	0x6bc8


0x6bba:	mov	eax, dword ptr [r15 + 0x48]
0x6bbe:	jmp	0x693c


0x693c:	cmp	qword ptr [r15 + 0x40], 0
0x6941:	je	0x694c


0x6a68:	test	al, al
0x6a6a:	je	0x6e50


0x6a70:	mov	rdx, qword ptr [r15 + 0x20]
0x6a74:	cmp	rdx, qword ptr [rsp + 0x28]
0x6a79:	je	0x6c60


0x6c60:	movzx	eax, byte ptr [rsp + 0x5d]
0x6c65:	jmp	0x6a94


0x6a7f:	add	rdx, qword ptr [rsp + 0x18]
0x6a84:	test	byte ptr [r15 + 0x48], 4
0x6a89:	cmove	rdx, qword ptr [rsp + 0x40]
0x6a8f:	mov	qword ptr [rsp + 0x40], rdx
0x6a94:	mov	rcx, qword ptr [r15 + 0x30]
0x6a98:	sub	rcx, qword ptr [rsp + 0x18]
0x6a9d:	mov	byte ptr [rsp + 0x5d], al
0x6aa1:	mov	qword ptr [rsp + 0x28], rcx
0x6aa6:	jmp	0x68f8


0x6a94:	mov	rcx, qword ptr [r15 + 0x30]
0x6a98:	sub	rcx, qword ptr [rsp + 0x18]
0x6a9d:	mov	byte ptr [rsp + 0x5d], al
0x6aa1:	mov	qword ptr [rsp + 0x28], rcx
0x6aa6:	jmp	0x68f8


0x716d:	mov	rdi, qword ptr [rsp + 0x10]
0x7172:	call	0x5ff0


0x7177:	mov	rdi, qword ptr [rbp + 0x18]
0x717b:	call	0x1870


0x7180:	mov	r8d, 7
0x7186:	mov	qword ptr [rbp + 0x18], 0
0x718e:	mov	qword ptr [rsp + 0x10], 0
0x7197:	mov	word ptr [rbp + 0x70], r8w
0x719c:	or	dword ptr [r15 + 0x48], 0x2000
0x71a4:	mov	dword ptr [r12], 0x24
0x71ac:	jmp	0x6dc5


0x6e61:	mov	rdi, qword ptr [rsp + 0x10]
0x6e66:	call	0x5ff0


0x6e6b:	mov	rdi, qword ptr [rbp + 0x18]
0x6e6f:	call	0x1870


0x6e74:	mov	r9d, 7
0x6e7a:	mov	qword ptr [rbp + 0x18], 0
0x6e82:	mov	qword ptr [rsp + 0x10], 0
0x6e8b:	mov	word ptr [rbp + 0x70], r9w
0x6e90:	or	dword ptr [r15 + 0x48], 0x2000
0x6e98:	mov	dword ptr [r12], ebx
0x6e9c:	jmp	0x6dc5


0x5b70:	call	0x16f0


0x589a:	lea	rsi, [rip + 0x534c]
0x58a1:	mov	edx, 5
0x58a6:	xor	edi, edi
0x58a8:	call	0x1790


0x58ad:	lea	rcx, [rip + 0x48f4]
0x58b4:	lea	rdx, [rip + 0x43c5]
0x58bb:	mov	rsi, rax
0x58be:	mov	edi, 1
0x58c3:	xor	eax, eax
0x58c5:	call	0x19b0


0x58ca:	mov	rbx, qword ptr [rip + 0x2087d7]
0x58d1:	lea	rsi, [rip + 0x5548]
0x58d8:	xor	edi, edi
0x58da:	mov	edx, 5
0x58df:	call	0x1790


0x58e4:	mov	rsi, rbx
0x58e7:	mov	rdi, rax
0x58ea:	pop	rbx
0x58eb:	jmp	0x1890


0x2973:	mov	rbx, qword ptr [rip + 0x20b72e]
0x297a:	lea	rsi, [rip + 0x751f]
0x2981:	mov	edx, 5
0x2986:	xor	edi, edi
0x2988:	call	0x1790


0x298d:	mov	rsi, rbx
0x2990:	mov	rdi, rax
0x2993:	call	0x1890


0x2998:	mov	rbx, qword ptr [rip + 0x20b709]
0x299f:	lea	rsi, [rip + 0x756a]
0x29a6:	mov	edx, 5
0x29ab:	xor	edi, edi
0x29ad:	call	0x1790


0x29b2:	mov	rsi, rbx
0x29b5:	mov	rdi, rax
0x29b8:	call	0x1890


0x29bd:	mov	rbx, qword ptr [rip + 0x20b6e4]
0x29c4:	lea	rsi, [rip + 0x7615]
0x29cb:	mov	edx, 5
0x29d0:	xor	edi, edi
0x29d2:	call	0x1790


0x29d7:	mov	rsi, rbx
0x29da:	mov	rdi, rax
0x29dd:	call	0x1890


0x29e2:	mov	rbx, qword ptr [rip + 0x20b6bf]
0x29e9:	lea	rsi, [rip + 0x7670]
0x29f0:	mov	edx, 5
0x29f5:	xor	edi, edi
0x29f7:	call	0x1790


0x29fc:	mov	rsi, rbx
0x29ff:	mov	rdi, rax
0x2a02:	call	0x1890


0x2a07:	mov	rbx, qword ptr [rip + 0x20b69a]
0x2a0e:	lea	rsi, [rip + 0x7693]
0x2a15:	mov	edx, 5
0x2a1a:	xor	edi, edi
0x2a1c:	call	0x1790


0x2a21:	mov	rsi, rbx
0x2a24:	mov	rdi, rax
0x2a27:	call	0x1890


0x2a2c:	mov	rbx, qword ptr [rip + 0x20b675]
0x2a33:	lea	rsi, [rip + 0x76b6]
0x2a3a:	mov	edx, 5
0x2a3f:	xor	edi, edi
0x2a41:	call	0x1790


0x2a46:	mov	rsi, rbx
0x2a49:	mov	rdi, rax
0x2a4c:	call	0x1890


0x2a51:	mov	rbx, qword ptr [rip + 0x20b650]
0x2a58:	lea	rsi, [rip + 0x76c1]
0x2a5f:	mov	edx, 5
0x2a64:	xor	edi, edi
0x2a66:	call	0x1790


0x2a6b:	mov	rsi, rbx
0x2a6e:	mov	rdi, rax
0x2a71:	call	0x1890


0x2a76:	mov	rbx, qword ptr [rip + 0x20b62b]
0x2a7d:	lea	rsi, [rip + 0x76d4]
0x2a84:	mov	edx, 5
0x2a89:	xor	edi, edi
0x2a8b:	call	0x1790


0x2a90:	mov	rsi, rbx
0x2a93:	mov	rdi, rax
0x2a96:	lea	rbx, [rip + 0x7167]
0x2a9d:	call	0x1890


0x2aa2:	lea	rax, [rip + 0x7161]
0x2aa9:	lea	rcx, [rip + 0x719b]
0x2ab0:	mov	qword ptr [rsp + 0x60], 0
0x2ab9:	mov	qword ptr [rsp + 0x68], 0
0x2ac2:	mov	rdx, rsp
0x2ac5:	mov	qword ptr [rsp], rax
0x2ac9:	lea	rax, [rip + 0x713c]
0x2ad0:	mov	qword ptr [rsp + 0x30], rcx
0x2ad5:	lea	rcx, [rip + 0x7179]
0x2adc:	mov	qword ptr [rsp + 8], rax
0x2ae1:	lea	rax, [rip + 0x719c]
0x2ae8:	mov	qword ptr [rsp + 0x40], rcx
0x2aed:	lea	rcx, [rip + 0x716b]
0x2af4:	mov	qword ptr [rsp + 0x10], rax
0x2af9:	lea	rax, [rip + 0x711c]
0x2b00:	mov	qword ptr [rsp + 0x50], rcx
0x2b05:	mov	qword ptr [rsp + 0x18], rax
0x2b0a:	lea	rax, [rip + 0x7121]
0x2b11:	mov	qword ptr [rsp + 0x20], rax
0x2b16:	lea	rax, [rip + 0x711f]
0x2b1d:	mov	qword ptr [rsp + 0x28], rax
0x2b22:	mov	qword ptr [rsp + 0x38], rax
0x2b27:	mov	qword ptr [rsp + 0x48], rax
0x2b2c:	mov	qword ptr [rsp + 0x58], rax
0x2b31:	nop	dword ptr [rax]
0x2b38:	add	rdx, 0x10
0x2b3c:	mov	rdi, qword ptr [rdx]
0x2b3f:	test	rdi, rdi
0x2b42:	je	0x2b57


0x2b57:	mov	r12, qword ptr [rdx + 8]
0x2b5b:	xor	edi, edi
0x2b5d:	mov	edx, 5
0x2b62:	lea	rsi, [rip + 0x7100]
0x2b69:	test	r12, r12
0x2b6c:	je	0x2c33


0x2b44:	mov	ecx, 6
0x2b49:	mov	rsi, rbx
0x2b4c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2c33:	call	0x1790


0x2b72:	call	0x1790


0x2b4c:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2b4e:	seta	al
0x2b51:	sbb	al, 0
0x2b53:	test	al, al
0x2b55:	jne	0x2b38


0x2b38:	add	rdx, 0x10
0x2b3c:	mov	rdi, qword ptr [rdx]
0x2b3f:	test	rdi, rdi
0x2b42:	je	0x2b57


0x2b77:	lea	rcx, [rip + 0x762a]
0x2b7e:	lea	rdx, [rip + 0x70fb]
0x2b85:	mov	rsi, rax
0x2b88:	mov	edi, 1
0x2b8d:	xor	eax, eax
0x2b8f:	call	0x19b0


0x2b94:	xor	esi, esi
0x2b96:	mov	edi, 5
0x2b9b:	call	0x19a0


0x2ba0:	test	rax, rax
0x2ba3:	je	0x2bc1


0x2bc1:	lea	rsi, [rip + 0x70ca]
0x2bc8:	xor	edi, edi
0x2bca:	mov	edx, 5
0x2bcf:	call	0x1790


0x2ba5:	lea	rsi, [rip + 0x70e2]
0x2bac:	mov	edx, 3
0x2bb1:	mov	rdi, rax
0x2bb4:	call	0x1710


0x1710:	jmp	qword ptr [rip + 0x20c6fa]




0x2bd4:	lea	rcx, [rip + 0x7029]
0x2bdb:	lea	rdx, [rip + 0x75c6]
0x2be2:	mov	rsi, rax
0x2be5:	mov	edi, 1
0x2bea:	xor	eax, eax
0x2bec:	call	0x19b0


0x2bf1:	cmp	r12, rbx
0x2bf4:	lea	rcx, [rip + 0x702b]
0x2bfb:	lea	rbx, [rip + 0x7fbf]
0x2c02:	cmove	rbx, rcx
0x2c06:	lea	rsi, [rip + 0x760b]
0x2c0d:	xor	edi, edi
0x2c0f:	mov	edx, 5
0x2c14:	call	0x1790


0x2c19:	mov	rcx, rbx
0x2c1c:	mov	rsi, rax
0x2c1f:	mov	rdx, r12
0x2c22:	mov	edi, 1
0x2c27:	xor	eax, eax
0x2c29:	call	0x19b0


0x2c2e:	jmp	0x2946


0x2c38:	lea	rcx, [rip + 0x7569]
0x2c3f:	lea	rdx, [rip + 0x703a]
0x2c46:	mov	rsi, rax
0x2c49:	mov	edi, 1
0x2c4e:	xor	eax, eax
0x2c50:	call	0x19b0


0x2c55:	xor	esi, esi
0x2c57:	mov	edi, 5
0x2c5c:	call	0x19a0


0x2c61:	test	rax, rax
0x2c64:	je	0x2c7e


0x2c7e:	lea	rsi, [rip + 0x700d]
0x2c85:	mov	edx, 5
0x2c8a:	xor	edi, edi
0x2c8c:	lea	r12, [rip + 0x6f71]
0x2c93:	lea	rbx, [rip + 0x6f8c]
0x2c9a:	call	0x1790


0x2c66:	lea	rsi, [rip + 0x7021]
0x2c6d:	mov	edx, 3
0x2c72:	mov	rdi, rax
0x2c75:	call	0x1710


0x2c9f:	lea	rcx, [rip + 0x6f5e]
0x2ca6:	lea	rdx, [rip + 0x74fb]
0x2cad:	mov	rsi, rax
0x2cb0:	mov	edi, 1
0x2cb5:	xor	eax, eax
0x2cb7:	call	0x19b0


0x2cbc:	jmp	0x2c06


0x2c06:	lea	rsi, [rip + 0x760b]
0x2c0d:	xor	edi, edi
0x2c0f:	mov	edx, 5
0x2c14:	call	0x1790


0x535c:	cmp	r12, 9
0x5360:	ja	0x56a0


0x5366:	lea	rdx, [rip + 0x5af7]
0x536d:	movsxd	rax, dword ptr [rdx + r12*4]
0x5371:	add	rax, rdx
0x5374:	jmp	rax


0x56a0:	mov	r10, qword ptr [rbx + 0x40]
0x56a4:	mov	r9, qword ptr [rbx + 0x38]
0x56a8:	mov	edx, 5
0x56ad:	mov	rax, qword ptr [rbx + 0x10]
0x56b1:	mov	r8, qword ptr [rbx + 8]
0x56b5:	lea	rsi, [rip + 0x5724]
0x56bc:	mov	r13, qword ptr [rbx + 0x30]
0x56c0:	mov	r12, qword ptr [rbx + 0x28]
0x56c4:	mov	r15, qword ptr [rbx + 0x20]
0x56c8:	mov	r14, qword ptr [rbx + 0x18]
0x56cc:	mov	qword ptr [rsp + 0x18], r10
0x56d1:	mov	qword ptr [rsp + 0x10], r9
0x56d6:	mov	qword ptr [rsp], rax
0x56da:	mov	qword ptr [rsp + 8], r8
0x56df:	mov	rbx, qword ptr [rbx]
0x56e2:	jmp	0x5472


0x5472:	xor	edi, edi
0x5474:	call	0x1790


0x5479:	mov	r10, qword ptr [rsp + 0x18]
0x547e:	push	r10
0x5480:	jmp	0x53c4


0x53c4:	mov	r9, qword ptr [rsp + 0x18]
0x53c9:	mov	rdx, rax
0x53cc:	mov	rcx, rbx
0x53cf:	mov	esi, 1
0x53d4:	mov	rdi, rbp
0x53d7:	xor	eax, eax
0x53d9:	push	r9
0x53db:	push	r13
0x53dd:	push	r12
0x53df:	push	r15
0x53e1:	push	r14
0x53e3:	mov	r9, qword ptr [rsp + 0x30]
0x53e8:	mov	r8, qword ptr [rsp + 0x38]
0x53ed:	call	0x1a50


0x53f2:	add	rsp, 0x30
0x53f6:	add	rsp, 0x28
0x53fa:	pop	rbx
0x53fb:	pop	rbp
0x53fc:	pop	r12
0x53fe:	pop	r13
0x5400:	pop	r14
0x5402:	pop	r15
0x5404:	ret	


0x9ad7:	mov	rdi, rbx
0x9ada:	pop	rbx
0x9adb:	jmp	0x1930


0x746c:	test	eax, eax
0x746e:	mov	dword ptr [rbx + 0x28], eax
0x7471:	jns	0x7480


0x7473:	or	dword ptr [rbx + 0x48], 4
0x7477:	nop	word ptr [rax + rax]
0x7480:	lea	rdi, [rbx + 0x60]
0x7484:	mov	esi, 0xffffffff
0x7489:	call	0x9580


0x7f9f:	test	eax, eax
0x7fa1:	mov	ebp, eax
0x7fa3:	js	0x7ff9


0x7ff9:	mov	qword ptr [rbx + 8], 0
0x8001:	xor	eax, eax
0x8003:	jmp	0x7f64


0x7fa5:	mov	esi, r14d
0x7fa8:	mov	rdi, rbx
0x7fab:	call	0x6800


0x7fb0:	test	byte ptr [rbx + 0x49], 2
0x7fb4:	mov	qword ptr [rbx + 8], rax
0x7fb8:	jne	0x7fe8


0x7fba:	mov	edi, ebp
0x7fbc:	call	0x1980


0x7fe8:	mov	edx, 1
0x7fed:	mov	esi, ebp
0x7fef:	mov	rdi, rbx
0x7ff2:	call	0x6220


0x7ff7:	jmp	0x7fcc


0x7fcc:	mov	rax, qword ptr [rbx + 8]
0x7fd0:	jmp	0x7f64


0x7fc1:	test	eax, eax
0x7fc3:	jne	0x8008


0x7fc5:	mov	edi, ebp
0x7fc7:	call	0x1860


0x8008:	mov	ebx, dword ptr [r13]
0x800c:	mov	edi, ebp
0x800e:	call	0x1860


0x8013:	xor	eax, eax
0x8015:	mov	dword ptr [r13], ebx
0x8019:	jmp	0x7f64


0x7dfd:	test	eax, eax
0x7dff:	mov	dword ptr [rbx + 0x44], eax
0x7e02:	js	0x7e80


0x7e80:	call	0x1700


0x7e04:	or	word ptr [rbx + 0x72], 2
0x7e09:	jmp	0x7d87


0x7e85:	mov	eax, dword ptr [rax]
0x7e87:	mov	edi, 7
0x7e8c:	mov	word ptr [rbx + 0x70], di
0x7e90:	mov	dword ptr [rbx + 0x40], eax
0x7e93:	jmp	0x7d87


0x7e4d:	test	eax, eax
0x7e4f:	mov	dword ptr [rbp + 0x44], eax
0x7e52:	js	0x7e62


0x7e62:	call	0x1700


0x7e54:	or	word ptr [rbp + 0x72], 2
0x7e59:	movzx	eax, word ptr [rbp + 0x70]
0x7e5d:	jmp	0x7a6e


0x7e67:	mov	eax, dword ptr [rax]
0x7e69:	mov	r11d, 7
0x7e6f:	mov	word ptr [rbp + 0x70], r11w
0x7e74:	mov	dword ptr [rbp + 0x40], eax
0x7e77:	mov	qword ptr [r12], rbp
0x7e7b:	jmp	0x78ba


0x64a2:	test	eax, eax
0x64a4:	mov	r15d, eax
0x64a7:	js	0x665b


0x665b:	mov	ebx, 0xffffffff
0x6660:	jmp	0x6515


0x64ad:	mov	ebx, dword ptr [r13 + 0x48]
0x64b1:	test	bl, 2
0x64b4:	je	0x655a


0x5836:	mov	rax, qword ptr [rsp + 0x78]
0x583b:	xor	rax, qword ptr fs:[0x28]
0x5844:	jne	0x5850


0x5846:	add	rsp, 0xb8
0x584d:	pop	rbx
0x584e:	pop	rbp
0x584f:	ret	


0x5850:	call	0x17e0


0x5760:	mov	rax, qword ptr [rsp + 0x58]
0x5765:	xor	rax, qword ptr fs:[0x28]
0x576e:	jne	0x5775


0x5770:	add	rsp, 0x68
0x5774:	ret	


0x5775:	call	0x17e0


0x2c7a:	test	eax, eax
0x2c7c:	jne	0x2cc1


0x2cc1:	lea	r12, [rip + 0x6f3c]
0x2cc8:	mov	r13, qword ptr [rip + 0x20b3d9]
0x2ccf:	lea	rsi, [rip + 0x74fa]
0x2cd6:	xor	edi, edi
0x2cd8:	mov	edx, 5
0x2cdd:	call	0x1790


0x2ce2:	mov	rsi, r13
0x2ce5:	mov	rdi, rax
0x2ce8:	call	0x1890


0x2ced:	jmp	0x2bc1


0x2bb9:	test	eax, eax
0x2bbb:	jne	0x2cc8


0x2cc8:	mov	r13, qword ptr [rip + 0x20b3d9]
0x2ccf:	lea	rsi, [rip + 0x74fa]
0x2cd6:	xor	edi, edi
0x2cd8:	mov	edx, 5
0x2cdd:	call	0x1790


0x1b17:	lea	rdi, [rip + 0x1202]
0x1b1e:	call	0x9bd0


0x1b23:	lea	rax, [rsp + 0x38]
0x1b28:	mov	byte ptr [rip + 0x20c5d9], 0
0x1b2f:	mov	byte ptr [rip + 0x20c5d3], 0
0x1b36:	mov	byte ptr [rip + 0x20c5cd], 0
0x1b3d:	mov	qword ptr [rsp + 0x18], rax
0x1b42:	nop	word ptr [rax + rax]
0x1b48:	lea	rcx, [rip + 0x20bef1]
0x1b4f:	lea	rdx, [rip + 0x86fa]
0x1b56:	xor	r8d, r8d
0x1b59:	mov	rsi, rbx
0x1b5c:	mov	edi, ebp
0x1b5e:	call	0x17f0


0x17f0:	jmp	qword ptr [rip + 0x20c68a]




0x97c4:	test	eax, eax
0x97c6:	je	0x9804


0x97c8:	call	0x1700


0x97cd:	mov	r12d, dword ptr [rax]
0x97d0:	mov	rdi, rbx
0x97d3:	mov	rbp, rax
0x97d6:	call	0x1770


0x97db:	test	r12d, r12d
0x97de:	jne	0x9810


0x97e0:	pop	rbx
0x97e1:	pop	rbp
0x97e2:	pop	r12
0x97e4:	ret	


0x9810:	mov	dword ptr [rbp], r12d
0x9814:	mov	eax, 0xffffffff
0x9819:	jmp	0x97e0


0x80ca:	and	ebx, 0x20
0x80cd:	test	ebx, ebx
0x80cf:	jne	0x80e8


0x80d1:	test	eax, eax
0x80d3:	je	0x80df


0x80e8:	test	eax, eax
0x80ea:	jne	0x8108


0x80df:	pop	rbx
0x80e0:	pop	rbp
0x80e1:	pop	r12
0x80e3:	ret	


0x80d5:	test	r12, r12
0x80d8:	mov	eax, 0xffffffff
0x80dd:	je	0x8118


0x80ec:	call	0x1700


0x8108:	pop	rbx
0x8109:	mov	eax, 0xffffffff
0x810e:	pop	rbp
0x810f:	pop	r12
0x8111:	ret	


0x8118:	call	0x1700


0x811d:	cmp	dword ptr [rax], 9
0x8120:	pop	rbx
0x8121:	pop	rbp
0x8122:	pop	r12
0x8124:	setne	al
0x8127:	movzx	eax, al
0x812a:	neg	eax
0x812c:	ret	


0x80f1:	mov	dword ptr [rax], 0
0x80f7:	mov	eax, 0xffffffff
0x80fc:	pop	rbx
0x80fd:	pop	rbp
0x80fe:	pop	r12
0x8100:	ret	


0x2d32:	test	eax, eax
0x2d34:	je	0x2d4c


0x2d4c:	mov	rdi, qword ptr [rip + 0x20b38d]
0x2d53:	call	0x80b0


0x2d36:	call	0x1700


0x2d3b:	cmp	byte ptr [rip + 0x20b3d6], 0
0x2d42:	mov	rbx, rax
0x2d45:	je	0x2d63


0x2d63:	lea	rsi, [rip + 0x7847]
0x2d6a:	xor	edi, edi
0x2d6c:	mov	edx, 5
0x2d71:	call	0x1790


0x2d47:	cmp	dword ptr [rax], 0x20
0x2d4a:	jne	0x2d63


0x2d76:	mov	rdi, qword ptr [rip + 0x20b3a3]
0x2d7d:	mov	rbp, rax
0x2d80:	test	rdi, rdi
0x2d83:	je	0x2dad


0x2dad:	mov	esi, dword ptr [rbx]
0x2daf:	lea	rdx, [rip + 0x6f63]
0x2db6:	mov	rcx, rax
0x2db9:	xor	edi, edi
0x2dbb:	xor	eax, eax
0x2dbd:	call	0x19d0


0x2d85:	call	0x5030


0x2dc2:	jmp	0x2da2


0x2da2:	mov	edi, dword ptr [rip + 0x20b278]
0x2da8:	call	0x1720


0x1720:	jmp	qword ptr [rip + 0x20c6f2]




0x2d58:	test	eax, eax
0x2d5a:	jne	0x2da2


0x2d5c:	add	rsp, 8
0x2d60:	pop	rbx
0x2d61:	pop	rbp
0x2d62:	ret	


0x1b63:	cmp	eax, -1
0x1b66:	je	0x1d54


0x1d54:	test	r15, r15
0x1d57:	je	0x20ed


0x1b6c:	cmp	eax, 0x63
0x1b6f:	je	0x1ce0


0x20ed:	test	r13, r13
0x20f0:	movsxd	rax, dword ptr [rip + 0x20bfb9]
0x20f7:	je	0x2660


0x1d5d:	test	r13, r13
0x1d60:	jne	0x27c5


0x1ce0:	mov	dword ptr [rip + 0x20c326], 1
0x1cea:	jmp	0x1b48


0x1b75:	jle	0x1bc0


0x2660:	lea	edx, [rax + 1]
0x2663:	mov	r13, qword ptr [rbx + rax*8]
0x2667:	cmp	edx, ebp
0x2669:	mov	dword ptr [rip + 0x20ba41], edx
0x266f:	jl	0x2105


0x20fd:	cmp	ebp, eax
0x20ff:	jle	0x27be


0x1d66:	cmp	ebp, dword ptr [rip + 0x20c344]
0x1d6c:	jle	0x2688


0x27c5:	mov	edx, 5
0x27ca:	lea	rsi, [rip + 0x7ac7]
0x27d1:	jmp	0x2694


0x1b48:	lea	rcx, [rip + 0x20bef1]
0x1b4f:	lea	rdx, [rip + 0x86fa]
0x1b56:	xor	r8d, r8d
0x1b59:	mov	rsi, rbx
0x1b5c:	mov	edi, ebp
0x1b5e:	call	0x17f0


0x1bc0:	cmp	eax, 0x37
0x1bc3:	jg	0x1c50


0x1b77:	cmp	eax, 0x76
0x1b7a:	je	0x1cf0


0x2105:	mov	rdi, r13
0x2108:	call	0x2f70


0x2675:	test	r13, r13
0x2678:	je	0x2688


0x27be:	mov	edx, eax
0x27c0:	jmp	0x267a


0x2688:	lea	rsi, [rip + 0x7653]
0x268f:	mov	edx, 5
0x2694:	xor	edi, edi
0x2696:	call	0x1790


0x1d72:	mov	rdi, r15
0x1d75:	call	0x3320


0x2694:	xor	edi, edi
0x2696:	call	0x1790


0x1bc9:	cmp	eax, 0x30
0x1bcc:	jge	0x1c78


0x1c50:	cmp	eax, 0x52
0x1c53:	jne	0x1c61


0x1cf0:	mov	dword ptr [rip + 0x20c316], 0
0x1cfa:	jmp	0x1b48


0x1b80:	jle	0x1c30


0x267a:	movsxd	rdx, edx
0x267d:	cmp	qword ptr [rbx + rdx*8 - 8], r13
0x2682:	je	0x2788


0x1bd2:	cmp	eax, 0xffffff7e
0x1bd7:	je	0x270a


0x1c78:	movsxd	rax, dword ptr [rip + 0x20c431]
0x1c7f:	mov	rax, qword ptr [rbx + rax*8 - 8]
0x1c84:	mov	rdi, rax
0x1c87:	mov	qword ptr [rsp + 8], rax
0x1c8c:	call	0x17b0


0x1c55:	mov	byte ptr [rip + 0x20c4ae], 1
0x1c5c:	jmp	0x1b48


0x1c61:	jle	0x20df


0x1c30:	cmp	eax, 0x6f
0x1c33:	je	0x1c78


0x1b86:	cmp	eax, 0x80
0x1b8b:	je	0x1d10


0x2788:	mov	rdi, qword ptr [rbx + rbp*8 - 8]
0x278d:	call	0x5230


0x270a:	xor	edi, edi
0x270c:	call	0x28f0


0x1bdd:	jg	0x2479


0x20df:	cmp	eax, 0x3d
0x20e2:	je	0x1c78


0x1c67:	cmp	eax, 0x58
0x1c6a:	je	0x1c78


0x1c35:	jg	0x2540


0x1d10:	xor	r14d, r14d
0x1d13:	jmp	0x1b48


0x1b91:	jle	0x2532


0x1be3:	cmp	eax, 0xffffff7d
0x1be8:	jne	0x26a9


0x2479:	sub	eax, 0x2b
0x247c:	cmp	eax, 1
0x247f:	jbe	0x1c78


0x20e8:	jmp	0x26a9


0x1c6c:	cmp	eax, 0x61
0x1c6f:	jne	0x26a9


0x1c3b:	cmp	eax, 0x66
0x1c3e:	jne	0x2524


0x2540:	cmp	eax, 0x72
0x2543:	jge	0x1c78


0x2532:	cmp	eax, 0x78
0x2535:	jle	0x1c78


0x1b97:	cmp	eax, 0x81
0x1b9c:	je	0x1d00


0x1bee:	sub	rsp, 8
0x1bf2:	mov	rdi, qword ptr [rip + 0x20c4af]
0x1bf9:	mov	rcx, qword ptr [rip + 0x20c418]
0x1c00:	push	0
0x1c02:	lea	r9, [rip + 0x80bc]
0x1c09:	lea	r8, [rip + 0x80c2]
0x1c10:	lea	rdx, [rip + 0x8069]
0x1c17:	lea	rsi, [rip + 0x7fe6]
0x1c1e:	xor	eax, eax
0x1c20:	call	0x5790


0x26a9:	mov	edi, 1
0x26ae:	call	0x28f0


0x2485:	jmp	0x26a9


0x1c44:	mov	byte ptr [rip + 0x20c4be], 1
0x1c4b:	jmp	0x1b48


0x2524:	cmp	eax, 0x67
0x2527:	je	0x1c78


0x2549:	jmp	0x26a9


0x253b:	jmp	0x26a9


0x1d00:	mov	r14d, 1
0x1d06:	jmp	0x1b48


0x1ba2:	cmp	eax, 0x82
0x1ba7:	jne	0x26a9


0x252d:	jmp	0x26a9


0x1bad:	mov	r15, qword ptr [rip + 0x20c504]
0x1bb4:	jmp	0x1b48


0x1c25:	xor	edi, edi
0x1c27:	call	0x1a30


0x1c91:	xor	ecx, ecx
0x1c93:	test	r12, r12
0x1c96:	mov	rdx, rax
0x1c99:	setne	cl
0x1c9c:	add	rcx, r12
0x1c9f:	lea	r8, [rax + rcx]
0x1ca3:	cmp	qword ptr [rsp + 0x38], r8
0x1ca8:	jbe	0x1d18


0x1d18:	mov	rsi, qword ptr [rsp + 0x18]
0x1d1d:	mov	qword ptr [rsp + 0x28], rax
0x1d22:	lea	rax, [r8 + 1]
0x1d26:	mov	rdi, r13
0x1d29:	mov	qword ptr [rsp + 0x20], rcx
0x1d2e:	mov	qword ptr [rsp + 0x10], r8
0x1d33:	mov	qword ptr [rsp + 0x38], rax
0x1d38:	call	0x5a50


0x1caa:	mov	rsi, qword ptr [rsp + 8]
0x1caf:	lea	rdi, [r13 + rcx]
0x1cb4:	mov	byte ptr [r13 + r12], 0x2c
0x1cba:	add	rdx, 1
0x1cbe:	mov	qword ptr [rsp + 0x10], r8
0x1cc3:	call	0x18e0


0x1cc8:	mov	r8, qword ptr [rsp + 0x10]
0x1ccd:	mov	byte ptr [rip + 0x20c434], 1
0x1cd4:	mov	r12, r8
0x1cd7:	jmp	0x1b48


0x1d7a:	mov	rbp, rax
0x1d7d:	mov	qword ptr [rip + 0x20c38c], rax
0x1d84:	call	0x1700


0x1d89:	test	rbp, rbp
0x1d8c:	mov	r12, rax
0x1d8f:	je	0x2716


0x2716:	mov	rsi, r15
0x2719:	mov	edi, 4
0x271e:	call	0x4f60


0x1d95:	and	r14b, byte ptr [rip + 0x20c36e]
0x1d9c:	call	0x1700


0x1da1:	mov	qword ptr [rsp + 0x20], rax
0x1da6:	test	r14b, r14b
0x1da9:	jne	0x25e1


0x1daf:	mov	qword ptr [rip + 0x20c346], 0
0x1dba:	movsxd	rax, dword ptr [rip + 0x20c2ef]
0x1dc1:	xor	edx, edx
0x1dc3:	mov	esi, 0x411
0x1dc8:	lea	r12, [rip + 0x87a5]
0x1dcf:	lea	rdi, [rbx + rax*8]
0x1dd3:	mov	ebx, 1
0x1dd8:	call	0x5b80


0x25e1:	lea	rdi, [rip + 0x20bb08]
0x25e8:	call	0x5250


0x25ed:	test	rax, rax
0x25f0:	mov	qword ptr [rip + 0x20bb09], rax
0x25f7:	jne	0x1dba


0x25fd:	lea	rsi, [rip + 0x8082]
0x2604:	mov	edi, 4
0x2609:	call	0x4f60


0x1dba:	movsxd	rax, dword ptr [rip + 0x20c2ef]
0x1dc1:	xor	edx, edx
0x1dc3:	mov	esi, 0x411
0x1dc8:	lea	r12, [rip + 0x87a5]
0x1dcf:	lea	rdi, [rbx + rax*8]
0x1dd3:	mov	ebx, 1
0x1dd8:	call	0x5b80


0x1ddd:	mov	rbp, rax
0x1de0:	lea	rax, [rsp + 0xd0]
0x1de8:	mov	rdi, rbp
0x1deb:	mov	qword ptr [rsp + 8], rax
0x1df0:	lea	rax, [rsp + 0xdc]
0x1df8:	mov	qword ptr [rsp + 0x10], rax
0x1dfd:	lea	rax, [rsp + 0xdd]
0x1e05:	mov	qword ptr [rsp + 0x18], rax
0x1e0a:	call	0x7720


0x1e0f:	test	rax, rax
0x1e12:	mov	r14, rax
0x1e15:	je	0x1e5b


0x1e5b:	mov	rax, qword ptr [rsp + 0x20]
0x1e60:	cmp	dword ptr [rax], 0
0x1e63:	je	0x1e76


0x1e76:	mov	rdi, rbp
0x1e79:	call	0x7590


0x1e65:	movzx	ebx, byte ptr [rip + 0x20c29d]
0x1e6c:	test	bl, bl
0x1e6e:	je	0x25b6


0x1e2f:	movzx	eax, word ptr [rax + 0x70]
0x1e33:	movsxd	rax, dword ptr [r12 + rax*4]
0x1e37:	add	rax, r12
0x1e3a:	jmp	rax


0x200f:	mov	rax, qword ptr [rip + 0x20c0ea]
0x2016:	test	rax, rax
0x2019:	je	0x202b


0x25b6:	lea	rsi, [rip + 0x775f]
0x25bd:	xor	edi, edi
0x25bf:	mov	edx, 5
0x25c4:	call	0x1790


0x1e74:	xor	ebx, ebx
0x1e76:	mov	rdi, rbp
0x1e79:	call	0x7590


0x202b:	mov	edi, dword ptr [r14 + 0x90]
0x2032:	mov	rax, qword ptr [r14 + 0x30]
0x2036:	xor	esi, esi
0x2038:	mov	edx, dword ptr [rip + 0x20c0ce]
0x203e:	mov	rcx, qword ptr [rip + 0x20c0cb]
0x2045:	mov	r15d, edi
0x2048:	mov	qword ptr [rsp + 0x28], rax
0x204d:	mov	dword ptr [rsp + 4], edi
0x2051:	and	r15d, 0xf000
0x2058:	cmp	r15d, 0x4000
0x205f:	sete	sil
0x2063:	xor	r8d, r8d
0x2066:	call	0x33b0


0x201b:	mov	rcx, qword ptr [rax]
0x201e:	cmp	qword ptr [r14 + 0x80], rcx
0x2025:	je	0x248a


0x248a:	mov	rax, qword ptr [rax + 8]
0x248e:	cmp	qword ptr [r14 + 0x78], rax
0x2492:	jne	0x202b


0x2498:	lea	rsi, [rip + 0x81e7]
0x249f:	mov	rdi, r13
0x24a2:	call	0x18b0


0x18b0:	jmp	qword ptr [rip + 0x20c62a]




0x206b:	cmp	r15d, 0xa000
0x2072:	mov	edx, eax
0x2074:	mov	dword ptr [rsp], eax
0x2077:	je	0x21c2


0x21c2:	mov	eax, dword ptr [rip + 0x20be48]
0x21c8:	cmp	eax, 2
0x21cb:	je	0x2211


0x207d:	mov	edi, dword ptr [rbp + 0x2c]
0x2080:	mov	rsi, qword ptr [rsp + 0x28]
0x2085:	xor	ecx, ecx
0x2087:	call	0x1940


0x2211:	mov	r15d, 1
0x2217:	jmp	0x1f09


0x21cd:	test	eax, eax
0x21cf:	jne	0x2211


0x1940:	jmp	qword ptr [rip + 0x20c5e2]


0x1f09:	cmp	byte ptr [rip + 0x20c1fa], 0
0x1f10:	jne	0x1e48


0x21d1:	mov	rsi, r13
0x21d4:	mov	edi, 4
0x21d9:	mov	r15d, 1
0x21df:	call	0x4f60




0x1f16:	mov	edx, 4
0x1f1b:	mov	rsi, r14
0x1f1e:	mov	rdi, rbp
0x1f21:	call	0x7ea0


0x1e48:	mov	rdi, rbp
0x1e4b:	and	ebx, r15d
0x1e4e:	call	0x7720


0x1e53:	test	rax, rax
0x1e56:	mov	r14, rax
0x1e59:	jne	0x1e20


0x1e20:	cmp	word ptr [rax + 0x70], 0xd
0x1e25:	mov	r13, qword ptr [rax + 0x38]
0x1e29:	ja	0x200f


0x1f26:	jmp	0x1e48


0x1e7e:	test	eax, eax
0x1e80:	je	0x1eaa


0x1eaa:	xor	ebx, 1
0x1ead:	movzx	eax, bl
0x1eb0:	mov	rbx, qword ptr [rsp + 0xe8]
0x1eb8:	xor	rbx, qword ptr fs:[0x28]
0x1ec1:	jne	0x2711


0x1e82:	lea	rsi, [rip + 0x7f05]
0x1e89:	mov	edx, 5
0x1e8e:	xor	edi, edi
0x1e90:	xor	ebx, ebx
0x1e92:	call	0x1790


0x1ec7:	add	rsp, 0xf8
0x1ece:	pop	rbx
0x1ecf:	pop	rbp
0x1ed0:	pop	r12
0x1ed2:	pop	r13
0x1ed4:	pop	r14
0x1ed6:	pop	r15
0x1ed8:	ret	


0x2711:	call	0x17e0


0x1e97:	mov	rdx, rax
0x1e9a:	mov	rax, qword ptr [rsp + 0x20]
0x1e9f:	xor	edi, edi
0x1ea1:	mov	esi, dword ptr [rax]
0x1ea3:	xor	eax, eax
0x1ea5:	call	0x19d0


0x25c9:	mov	rdx, rax
0x25cc:	mov	rax, qword ptr [rsp + 0x20]
0x25d1:	xor	edi, edi
0x25d3:	mov	esi, dword ptr [rax]
0x25d5:	xor	eax, eax
0x25d7:	call	0x19d0


0x25dc:	jmp	0x1e76


0x269b:	xor	esi, esi
0x269d:	mov	rdx, rax
0x26a0:	xor	edi, edi
0x26a2:	xor	eax, eax
0x26a4:	call	0x19d0


0x210d:	test	rax, rax
0x2110:	mov	qword ptr [rip + 0x20bff9], rax
0x2117:	je	0x274f


0x274f:	mov	rdi, r13
0x2752:	call	0x5230


0x211d:	xor	edi, edi
0x211f:	call	0x18d0


0x18d0:	jmp	qword ptr [rip + 0x20c61a]




0x2124:	mov	dword ptr [rip + 0x20bfe2], eax
0x212a:	jmp	0x1d95


0x208c:	test	eax, eax
0x208e:	je	0x221c


0x221c:	cmp	dword ptr [rip + 0x20bded], 2
0x2223:	je	0x22d1


0x2094:	cmp	byte ptr [rip + 0x20c06e], 0
0x209b:	jne	0x1ef0


0x22d1:	movzx	r15d, byte ptr [rip + 0x20be2f]
0x22d9:	test	r15b, r15b
0x22dc:	je	0x2211


0x2229:	mov	ecx, dword ptr [rsp]
0x222c:	mov	eax, ecx
0x222e:	and	ch, 0xe
0x2231:	jne	0x2391


0x20a1:	mov	rsi, r13
0x20a4:	mov	edi, 4
0x20a9:	call	0x4f60


0x1ef0:	cmp	dword ptr [rip + 0x20c119], 2
0x1ef7:	je	0x1f06


0x22e2:	mov	edi, dword ptr [rsp + 4]
0x22e6:	mov	rcx, qword ptr [rip + 0x20be23]
0x22ed:	xor	esi, esi
0x22ef:	mov	eax, edi
0x22f1:	and	eax, 0xf000
0x22f6:	cmp	eax, 0x4000
0x22fb:	sete	sil
0x22ff:	xor	edx, edx
0x2301:	xor	r8d, r8d
0x2304:	call	0x33b0


0x2237:	xor	eax, dword ptr [rsp + 4]
0x223b:	test	eax, 0xfff
0x2240:	je	0x23f5


0x2391:	mov	esi, dword ptr [rbp + 0x2c]
0x2394:	mov	rdx, qword ptr [rsp + 0x28]
0x2399:	lea	rcx, [rsp + 0x40]
0x239e:	xor	r8d, r8d
0x23a1:	mov	edi, 1
0x23a6:	call	0x1810


0x1f06:	xor	r15d, r15d
0x1f09:	cmp	byte ptr [rip + 0x20c1fa], 0
0x1f10:	jne	0x1e48


0x1ef9:	cmp	dword ptr [rip + 0x20c110], 0
0x1f00:	je	0x212f


0x23f5:	cmp	dword ptr [rip + 0x20bc14], 0
0x23fc:	jne	0x22d1


0x2246:	mov	rsi, qword ptr [rsp + 8]
0x224b:	mov	edi, dword ptr [rsp]
0x224e:	call	0x2dd0


0x212f:	mov	rsi, qword ptr [rsp + 8]
0x2134:	mov	edi, dword ptr [rsp]
0x2137:	call	0x2dd0


0x2402:	mov	rsi, qword ptr [rsp + 8]
0x2407:	mov	edi, dword ptr [rsp]
0x240a:	call	0x2dd0


0x240f:	mov	rsi, qword ptr [rsp + 0x10]
0x2414:	mov	edi, dword ptr [rsp + 4]
0x2418:	mov	byte ptr [rsp + 0xda], 0
0x2420:	call	0x2dd0


0x2425:	lea	rsi, [rip + 0x8124]
0x242c:	mov	edx, 5
0x2431:	xor	edi, edi
0x2433:	mov	byte ptr [rsp + 0xe6], 0
0x243b:	call	0x1790


0x2440:	mov	rsi, r13
0x2443:	mov	edi, 4
0x2448:	mov	r15, rax
0x244b:	call	0x4f60


0x213c:	mov	rsi, qword ptr [rsp + 0x10]
0x2141:	mov	edi, dword ptr [rsp + 4]
0x2145:	mov	byte ptr [rsp + 0xda], 0
0x214d:	call	0x2dd0


0x2152:	lea	rsi, [rip + 0x83b7]
0x2159:	mov	edx, 5
0x215e:	xor	edi, edi
0x2160:	mov	byte ptr [rsp + 0xe6], 0
0x2168:	call	0x1790


0x216d:	mov	rsi, r13
0x2170:	mov	edi, 4
0x2175:	mov	r15, rax
0x2178:	call	0x4f60


0x2253:	mov	rsi, qword ptr [rsp + 0x10]
0x2258:	mov	edi, dword ptr [rsp + 4]
0x225c:	mov	byte ptr [rsp + 0xda], 0
0x2264:	call	0x2dd0


0x2269:	lea	rsi, [rip + 0x8230]
0x2270:	mov	edx, 5
0x2275:	xor	edi, edi
0x2277:	mov	byte ptr [rsp + 0xe6], 0
0x227f:	call	0x1790


0x2284:	mov	rsi, r13
0x2287:	mov	edi, 4
0x228c:	mov	r15, rax
0x228f:	call	0x4f60


0x23ab:	test	eax, eax
0x23ad:	je	0x25ad


0x25ad:	mov	eax, dword ptr [rsp + 0x58]
0x25b1:	jmp	0x2237


0x23b3:	cmp	byte ptr [rip + 0x20bd4f], 0
0x23ba:	jne	0x23f5


0x23bc:	mov	rsi, r13
0x23bf:	mov	edi, 4
0x23c4:	call	0x4f60


0x2309:	mov	edx, eax
0x230b:	not	edx
0x230d:	test	dword ptr [rsp], edx
0x2310:	je	0x1f09


0x2316:	mov	r15, qword ptr [rsp + 8]
0x231b:	mov	edi, dword ptr [rsp]
0x231e:	mov	dword ptr [rsp + 0x28], eax
0x2322:	mov	rsi, r15
0x2325:	call	0x2dd0


0x232a:	mov	eax, dword ptr [rsp + 0x28]
0x232e:	mov	rsi, qword ptr [rsp + 0x10]
0x2333:	mov	edi, eax
0x2335:	call	0x2dd0


0x233a:	mov	rdx, r13
0x233d:	mov	esi, 3
0x2342:	xor	edi, edi
0x2344:	mov	byte ptr [rsp + 0xe6], 0
0x234c:	mov	byte ptr [rsp + 0xda], 0
0x2354:	call	0x5060


0x24a7:	test	eax, eax
0x24a9:	jne	0x26b3


0x24af:	mov	rsi, r13
0x24b2:	mov	edi, 4
0x24b7:	call	0x4f60


0x26b3:	lea	rdx, [rip + 0x7fcc]
0x26ba:	mov	esi, 4
0x26bf:	mov	edi, 1
0x26c4:	call	0x4e40


0x1d3d:	mov	rdx, qword ptr [rsp + 0x28]
0x1d42:	mov	r13, rax
0x1d45:	mov	rcx, qword ptr [rsp + 0x20]
0x1d4a:	mov	r8, qword ptr [rsp + 0x10]
0x1d4f:	jmp	0x1caa


0x26c9:	mov	rdx, r13
0x26cc:	xor	edi, edi
0x26ce:	mov	esi, 4
0x26d3:	mov	r15, rax
0x26d6:	call	0x4e40


0x26db:	lea	rsi, [rip + 0x7d1e]
0x26e2:	mov	r13, rax
0x26e5:	xor	edi, edi
0x26e7:	mov	edx, 5
0x26ec:	call	0x1790


0x26f1:	mov	r8, r15
0x26f4:	mov	rdx, rax
0x26f7:	mov	rcx, r13
0x26fa:	xor	esi, esi
0x26fc:	xor	edi, edi
0x26fe:	xor	eax, eax
0x2700:	call	0x19d0


0x2705:	jmp	0x24e3


0x24e3:	lea	rsi, [rip + 0x7f56]
0x24ea:	mov	edx, 5
0x24ef:	xor	edi, edi
0x24f1:	xor	r15d, r15d
0x24f4:	call	0x1790


0x24f9:	xor	esi, esi
0x24fb:	mov	rdx, rax
0x24fe:	xor	edi, edi
0x2500:	xor	eax, eax
0x2502:	call	0x19d0


0x2507:	mov	edx, 4
0x250c:	mov	rsi, r14
0x250f:	mov	rdi, rbp
0x2512:	call	0x7ea0


0x2517:	mov	rdi, rbp
0x251a:	call	0x7720


0x251f:	jmp	0x1e48


0x2359:	lea	rsi, [rip + 0x8118]
0x2360:	mov	edx, 5
0x2365:	xor	edi, edi
0x2367:	mov	r13, rax
0x236a:	call	0x1790


0x236f:	mov	r9, qword ptr [rsp + 0x18]
0x2374:	lea	r8, [r15 + 1]
0x2378:	mov	rdx, rax
0x237b:	mov	rcx, r13
0x237e:	xor	esi, esi
0x2380:	xor	edi, edi
0x2382:	xor	eax, eax
0x2384:	xor	r15d, r15d
0x2387:	call	0x19d0


0x238c:	jmp	0x1f09


0x24bc:	lea	rsi, [rip + 0x7f0d]
0x24c3:	mov	r13, rax
0x24c6:	mov	edx, 5
0x24cb:	xor	edi, edi
0x24cd:	call	0x1790


0x24d2:	mov	rcx, r13
0x24d5:	mov	rdx, rax
0x24d8:	xor	esi, esi
0x24da:	xor	edi, edi
0x24dc:	xor	eax, eax
0x24de:	call	0x19d0


0x23c9:	lea	rsi, [rip + 0x79a1]
0x23d0:	mov	edx, 5
0x23d5:	xor	edi, edi
0x23d7:	mov	r15, rax
0x23da:	call	0x1790


0x23df:	mov	rdx, rax
0x23e2:	mov	rax, qword ptr [rsp + 0x20]
0x23e7:	mov	rcx, r15
0x23ea:	xor	edi, edi
0x23ec:	mov	esi, dword ptr [rax]
0x23ee:	xor	eax, eax
0x23f0:	call	0x19d0


0x2294:	mov	ecx, dword ptr [rsp + 4]
0x2298:	sub	rsp, 8
0x229c:	mov	edi, 1
0x22a1:	mov	rsi, qword ptr [rsp + 0x10]
0x22a6:	and	ecx, 0xfff
0x22ac:	lea	rdx, [rsi + 1]
0x22b0:	mov	rsi, r15
0x22b3:	push	rdx
0x22b4:	mov	r9d, dword ptr [rsp + 0x10]
0x22b9:	mov	rdx, rax
0x22bc:	mov	r8, qword ptr [rsp + 0x28]
0x22c1:	xor	eax, eax
0x22c3:	and	r9d, 0xfff
0x22ca:	call	0x19b0


0x22cf:	pop	rcx
0x22d0:	pop	rsi
0x22d1:	movzx	r15d, byte ptr [rip + 0x20be2f]
0x22d9:	test	r15b, r15b
0x22dc:	je	0x2211


0x217d:	mov	ecx, dword ptr [rsp + 4]
0x2181:	sub	rsp, 8
0x2185:	mov	rsi, r15
0x2188:	mov	rdx, qword ptr [rsp + 0x10]
0x218d:	mov	edi, 1
0x2192:	xor	r15d, r15d
0x2195:	and	ecx, 0xfff
0x219b:	add	rdx, 1
0x219f:	push	rdx
0x21a0:	mov	r9d, dword ptr [rsp + 0x10]
0x21a5:	mov	rdx, rax
0x21a8:	mov	r8, qword ptr [rsp + 0x28]
0x21ad:	xor	eax, eax
0x21af:	and	r9d, 0xfff
0x21b6:	call	0x19b0


0x21bb:	pop	rax
0x21bc:	pop	rdx
0x21bd:	jmp	0x1f09


0x2450:	mov	rdx, qword ptr [rsp + 8]
0x2455:	mov	ecx, dword ptr [rsp]
0x2458:	mov	rsi, r15
0x245b:	mov	edi, 1
0x2460:	lea	r8, [rdx + 1]
0x2464:	and	ecx, 0xfff
0x246a:	mov	rdx, rax
0x246d:	xor	eax, eax
0x246f:	call	0x19b0


0x2474:	jmp	0x22d1


0x20ae:	lea	rsi, [rip + 0x7ca1]
0x20b5:	xor	edi, edi
0x20b7:	mov	edx, 5
0x20bc:	mov	r15, rax
0x20bf:	call	0x1790


0x20c4:	mov	rdx, rax
0x20c7:	mov	rax, qword ptr [rsp + 0x20]
0x20cc:	mov	rcx, r15
0x20cf:	xor	edi, edi
0x20d1:	mov	esi, dword ptr [rax]
0x20d3:	xor	eax, eax
0x20d5:	call	0x19d0


0x20da:	jmp	0x1ef0


0x21e4:	lea	rsi, [rip + 0x82ed]
0x21eb:	mov	r13, rax
0x21ee:	mov	edx, 5
0x21f3:	xor	edi, edi
0x21f5:	call	0x1790


0x21fa:	mov	rdx, r13
0x21fd:	mov	rsi, rax
0x2200:	mov	edi, 1
0x2205:	xor	eax, eax
0x2207:	call	0x19b0


0x220c:	jmp	0x1f09


0x260e:	lea	rsi, [rip + 0x7cb3]
0x2615:	mov	edx, 5
0x261a:	xor	edi, edi
0x261c:	mov	rbx, rax
0x261f:	call	0x1790


0x2624:	mov	rdx, rax
0x2627:	mov	rax, qword ptr [rsp + 0x20]
0x262c:	mov	rcx, rbx
0x262f:	mov	edi, 1
0x2634:	mov	esi, dword ptr [rax]
0x2636:	xor	eax, eax
0x2638:	call	0x19d0


0x263d:	mov	qword ptr [r14 + 0x20], 1
0x2645:	mov	edx, 1
0x264a:	mov	rsi, r14
0x264d:	mov	rdi, rbp
0x2650:	mov	r15d, 1
0x2656:	call	0x7ea0


0x265b:	jmp	0x1e48


0x2723:	lea	rsi, [rip + 0x7b9e]
0x272a:	mov	edx, 5
0x272f:	xor	edi, edi
0x2731:	mov	rbx, rax
0x2734:	call	0x1790


0x2739:	mov	esi, dword ptr [r12]
0x273d:	mov	rdx, rax
0x2740:	mov	rcx, rbx
0x2743:	mov	edi, 1
0x2748:	xor	eax, eax
0x274a:	call	0x19d0


0x2757:	lea	rsi, [rip + 0x75ad]
0x275e:	mov	rbx, rax
0x2761:	mov	edx, 5
0x2766:	xor	edi, edi
0x2768:	call	0x1790


0x276d:	xor	edi, edi
0x276f:	mov	rdx, rax
0x2772:	mov	rcx, rbx
0x2775:	xor	esi, esi
0x2777:	xor	eax, eax
0x2779:	call	0x19d0


0x277e:	mov	edi, 1
0x2783:	call	0x28f0


0x2792:	lea	rsi, [rip + 0x7559]
0x2799:	mov	rbx, rax
0x279c:	xor	edi, edi
0x279e:	mov	edx, 5
0x27a3:	call	0x1790


0x27a8:	mov	rcx, rbx
0x27ab:	mov	rdx, rax
0x27ae:	xor	esi, esi
0x27b0:	xor	edi, edi
0x27b2:	xor	eax, eax
0x27b4:	call	0x19d0


0x27b9:	jmp	0x26a9


0x2d8a:	mov	esi, dword ptr [rbx]
0x2d8c:	lea	rdx, [rip + 0x782a]
0x2d93:	mov	rcx, rax
0x2d96:	mov	r8, rbp
0x2d99:	xor	edi, edi
0x2d9b:	xor	eax, eax
0x2d9d:	call	0x19d0


0x6184:	test	rax, rax
0x6187:	je	0x6198


0x6198:	mov	rdi, r13
0x619b:	call	0x1a90


0x6189:	cmp	r13, rax
0x618c:	jne	0x61a7


0x618e:	mov	rbx, qword ptr [rsp + 0x10]
0x6193:	jmp	0x6114


0x61a7:	call	0x16f0


0x61a0:	jmp	0x618e


0x66db:	cmp	rbp, rax
0x66de:	mov	r12, rax
0x66e1:	je	0x6701


0x66e3:	mov	rdi, rbp
0x66e6:	call	0x1a90


0x66eb:	test	r12, r12
0x66ee:	je	0x6738


0x66f0:	mov	rax, qword ptr [r12 + 0x10]
0x66f5:	mov	ecx, 2
0x66fa:	mov	word ptr [rbx + 0x70], cx
0x66fe:	mov	qword ptr [rbx], rax
0x6701:	pop	rbx
0x6702:	mov	eax, 1
0x6707:	pop	rbp
0x6708:	pop	r12
0x670a:	ret	


0x49dc:	add	rsp, 0x20
0x49e0:	mov	r11, qword ptr [rsp + 0x10]
0x49e5:	cmp	r11, rax
0x49e8:	ja	0x4a51


0x49ea:	lea	rsi, [rax + 1]
0x49ee:	lea	rax, [rip + 0x20974b]
0x49f5:	cmp	r12, rax
0x49f8:	mov	qword ptr [rbx], rsi
0x49fb:	je	0x4a0f


0x4a51:	mov	eax, dword ptr [rsp + 0x18]
0x4a55:	mov	dword ptr [r13], eax
0x4a59:	add	rsp, 0x28
0x4a5d:	mov	rax, r12
0x4a60:	pop	rbx
0x4a61:	pop	rbp
0x4a62:	pop	r12
0x4a64:	pop	r13
0x4a66:	pop	r14
0x4a68:	pop	r15
0x4a6a:	ret	


0x4a0f:	mov	rdi, rsi
0x4a12:	mov	qword ptr [rsp + 0x10], rsi
0x4a17:	call	0x58f0


0x49fd:	mov	rdi, r12
0x4a00:	mov	qword ptr [rsp + 0x10], rsi
0x4a05:	call	0x1a90


0x4a0a:	mov	rsi, qword ptr [rsp + 0x10]
0x4a0f:	mov	rdi, rsi
0x4a12:	mov	qword ptr [rsp + 0x10], rsi
0x4a17:	call	0x58f0


0x4a1c:	sub	rsp, 8
0x4a20:	mov	qword ptr [rbx + 8], rax
0x4a24:	mov	r8d, dword ptr [rbp]
0x4a28:	push	qword ptr [rbp + 0x30]
0x4a2b:	push	qword ptr [rbp + 0x28]
0x4a2e:	mov	rcx, r14
0x4a31:	push	r15
0x4a33:	mov	r9d, dword ptr [rsp + 0x3c]
0x4a38:	mov	rdi, rax
0x4a3b:	mov	rdx, qword ptr [rsp + 0x28]
0x4a40:	mov	rsi, qword ptr [rsp + 0x30]
0x4a45:	mov	r12, rax
0x4a48:	call	0x36b0


0x5162:	mov	rdi, qword ptr [rsp + 0x38]
0x5167:	xor	rdi, qword ptr fs:[0x28]
0x5170:	jne	0x517c


0x5172:	add	rsp, 0x48
0x5176:	ret	


0x517c:	call	0x17e0


0x4eaf:	mov	rcx, qword ptr [rsp + 0x38]
0x4eb4:	xor	rcx, qword ptr fs:[0x28]
0x4ebd:	jne	0x4ec9


0x4ebf:	add	rsp, 0x48
0x4ec3:	ret	


0x4ec9:	call	0x17e0


0x4f3b:	mov	rdx, qword ptr [rsp + 0x38]
0x4f40:	xor	rdx, qword ptr fs:[0x28]
0x4f49:	jne	0x4f55


0x4f4b:	add	rsp, 0x48
0x4f4f:	ret	


0x4f55:	call	0x17e0


0x50cf:	mov	rcx, qword ptr [rsp + 0x38]
0x50d4:	xor	rcx, qword ptr fs:[0x28]
0x50dd:	jne	0x50e9


0x50df:	add	rsp, 0x48
0x50e3:	ret	


0x50e9:	call	0x17e0


0x4ffe:	mov	rsi, qword ptr [rsp + 0x38]
0x5003:	xor	rsi, qword ptr fs:[0x28]
0x500c:	jne	0x5013


0x500e:	add	rsp, 0x48
0x5012:	ret	


0x5013:	call	0x17e0


0x4a4d:	add	rsp, 0x20
0x4a51:	mov	eax, dword ptr [rsp + 0x18]
0x4a55:	mov	dword ptr [r13], eax
0x4a59:	add	rsp, 0x28
0x4a5d:	mov	rax, r12
0x4a60:	pop	rbx
0x4a61:	pop	rbp
0x4a62:	pop	r12
0x4a64:	pop	r13
0x4a66:	pop	r14
0x4a68:	pop	r15
0x4a6a:	ret	


0x4c9c:	lea	rsi, [rax + 1]
0x4ca0:	mov	qword ptr [rsp + 0x48], rax
0x4ca5:	add	rsp, 0x20
0x4ca9:	mov	rdi, rsi
0x4cac:	mov	qword ptr [rsp + 0x18], rsi
0x4cb1:	call	0x58f0


0x4cb6:	mov	qword ptr [rsp + 0x10], rax
0x4cbb:	sub	rsp, 8
0x4cbf:	push	qword ptr [rbx + 0x30]
0x4cc2:	push	qword ptr [rbx + 0x28]
0x4cc5:	mov	r10, qword ptr [rsp + 0x38]
0x4cca:	mov	r9d, ebp
0x4ccd:	mov	r8d, dword ptr [rbx]
0x4cd0:	mov	rcx, r15
0x4cd3:	mov	rdx, r14
0x4cd6:	mov	rdi, rax
0x4cd9:	push	r10
0x4cdb:	mov	rsi, qword ptr [rsp + 0x38]
0x4ce0:	call	0x36b0


0x4ce5:	mov	eax, dword ptr [rsp + 0x2c]
0x4ce9:	add	rsp, 0x20
0x4ced:	test	r12, r12
0x4cf0:	mov	dword ptr [r13], eax
0x4cf4:	je	0x4cff


0x4cff:	mov	rax, qword ptr [rsp + 0x10]
0x4d04:	add	rsp, 0x38
0x4d08:	pop	rbx
0x4d09:	pop	rbp
0x4d0a:	pop	r12
0x4d0c:	pop	r13
0x4d0e:	pop	r14
0x4d10:	pop	r15
0x4d12:	ret	


0x4cf6:	mov	r11, qword ptr [rsp + 0x28]
0x4cfb:	mov	qword ptr [r12], r11
0x4cff:	mov	rax, qword ptr [rsp + 0x10]
0x4d04:	add	rsp, 0x38
0x4d08:	pop	rbx
0x4d09:	pop	rbp
0x4d0a:	pop	r12
0x4d0c:	pop	r13
0x4d0e:	pop	r14
0x4d10:	pop	r15
0x4d12:	ret	


0x4c11:	mov	dword ptr [rbp], r12d
0x4c15:	add	rsp, 0x38
0x4c19:	pop	rbx
0x4c1a:	pop	rbp
0x4c1b:	pop	r12
0x4c1d:	pop	r13
0x4c1f:	pop	r14
0x4c21:	pop	r15
0x4c23:	ret	


0x60cc:	test	rax, rax
0x60cf:	je	0x610d


0x60d1:	mov	rbx, qword ptr [rax + 8]
0x60d5:	jmp	0x6114


0x67bf:	test	rax, rax
0x67c2:	je	0x67f3


0x67c4:	mov	rdi, rax
0x67c7:	call	0x1a90


0x67cc:	jmp	0x6785


0x9776:	mov	r12d, eax
0x9779:	call	0x1700


0x977e:	mov	r13d, dword ptr [rax]
0x9781:	mov	rbp, rax
0x9784:	mov	edi, ebx
0x9786:	call	0x1860


0x978b:	mov	ebx, r12d
0x978e:	mov	dword ptr [rbp], r13d
0x9792:	add	rsp, 8
0x9796:	mov	eax, ebx
0x9798:	pop	rbx
0x9799:	pop	rbp
0x979a:	pop	r12
0x979c:	pop	r13
0x979e:	ret	


0x9b9d:	add	rbx, 1
0x9ba1:	cmp	rbp, rbx
0x9ba4:	jne	0x9b90


0x9b90:	mov	rdx, r15
0x9b93:	mov	rsi, r14
0x9b96:	mov	edi, r13d
0x9b99:	call	qword ptr [r12 + rbx*8]


0x8da8:	mov	rbx, qword ptr [rbx + 8]
0x8dac:	test	rbx, rbx
0x8daf:	jne	0x8da0


0x8db1:	mov	rax, qword ptr [r12 + 8]
0x8db6:	add	rbp, 0x10
0x8dba:	cmp	rax, rbp
0x8dbd:	ja	0x8d88


0x8da0:	mov	rdi, qword ptr [rbx]
0x8da3:	call	qword ptr [r12 + 0x40]


0x8d02:	mov	rax, qword ptr [rbp + 0x40]
0x8d06:	mov	rdx, qword ptr [rbx + 8]
0x8d0a:	mov	rcx, qword ptr [rbp + 0x48]
0x8d0e:	mov	qword ptr [rbx], 0
0x8d15:	test	rdx, rdx
0x8d18:	mov	qword ptr [rbx + 8], rcx
0x8d1c:	mov	qword ptr [rbp + 0x48], rbx
0x8d20:	mov	rbx, rdx
0x8d23:	jne	0x8cf8


0x8a79:	test	al, al
0x8a7b:	je	0x8a94


0x8a7d:	mov	rbx, qword ptr [rbx + 8]
0x8a81:	add	rbp, 1
0x8a85:	test	rbx, rbx
0x8a88:	jne	0x8a70


0x8a70:	mov	rdi, qword ptr [rbx]
0x8a73:	mov	rsi, r13
0x8a76:	call	r12


0x836e:	cmp	qword ptr [rbx + 0x10], rax
0x8372:	jbe	0x837d


0x837d:	call	0x16f0


0x8374:	shl	rax, 4
0x8378:	add	rax, qword ptr [rbx]
0x837b:	pop	rbx
0x837c:	ret	


0x85e4:	cmp	qword ptr [rax], 0
0x85e8:	mov	rbx, rax
0x85eb:	je	0x8640


0x8640:	mov	qword ptr [rax], r15
0x8643:	add	qword ptr [rbp + 0x18], 1
0x8648:	jmp	0x860d


0x85ed:	mov	rax, qword ptr [rbp + 0x48]
0x85f1:	test	rax, rax
0x85f4:	je	0x8650


0x860d:	mov	qword ptr [r12], 0
0x8615:	sub	qword ptr [r13 + 0x18], 1
0x861a:	add	r12, 0x10
0x861e:	cmp	qword ptr [r13 + 8], r12
0x8622:	ja	0x8558


0x8650:	mov	edi, 0x10
0x8655:	call	0x1920


0x85f6:	mov	rdx, qword ptr [rax + 8]
0x85fa:	mov	qword ptr [rbp + 0x48], rdx
0x85fe:	mov	rdx, qword ptr [rbx + 8]
0x8602:	mov	qword ptr [rax], r15
0x8605:	mov	qword ptr [rax + 8], rdx
0x8609:	mov	qword ptr [rbx + 8], rax
0x860d:	mov	qword ptr [r12], 0
0x8615:	sub	qword ptr [r13 + 0x18], 1
0x861a:	add	r12, 0x10
0x861e:	cmp	qword ptr [r13 + 8], r12
0x8622:	ja	0x8558


0x865a:	test	rax, rax
0x865d:	jne	0x85fe


0x865f:	add	rsp, 8
0x8663:	xor	eax, eax
0x8665:	pop	rbx
0x8666:	pop	rbp
0x8667:	pop	r12
0x8669:	pop	r13
0x866b:	pop	r14
0x866d:	pop	r15
0x866f:	ret	


0x85fe:	mov	rdx, qword ptr [rbx + 8]
0x8602:	mov	qword ptr [rax], r15
0x8605:	mov	qword ptr [rax + 8], rdx
0x8609:	mov	qword ptr [rbx + 8], rax
0x860d:	mov	qword ptr [r12], 0
0x8615:	sub	qword ptr [r13 + 0x18], 1
0x861a:	add	r12, 0x10
0x861e:	cmp	qword ptr [r13 + 8], r12
0x8622:	ja	0x8558


0x859a:	cmp	qword ptr [rax], 0
0x859e:	mov	rdx, qword ptr [rbx + 8]
0x85a2:	jne	0x8578


0x85a4:	mov	qword ptr [rax], r15
0x85a7:	add	qword ptr [rbp + 0x18], 1
0x85ac:	test	rdx, rdx
0x85af:	mov	qword ptr [rbx], 0
0x85b6:	mov	rax, qword ptr [rbp + 0x48]
0x85ba:	mov	qword ptr [rbx + 8], rax
0x85be:	mov	qword ptr [rbp + 0x48], rbx
0x85c2:	mov	rbx, rdx
0x85c5:	jne	0x858c


0x8578:	mov	rcx, qword ptr [rax + 8]
0x857c:	test	rdx, rdx
0x857f:	mov	qword ptr [rbx + 8], rcx
0x8583:	mov	qword ptr [rax + 8], rbx
0x8587:	mov	rbx, rdx
0x858a:	je	0x85c7


0x85c7:	mov	r15, qword ptr [r12]
0x85cb:	test	r14b, r14b
0x85ce:	mov	qword ptr [r12 + 8], 0
0x85d7:	jne	0x861a


0x83a9:	mov	qword ptr [r14], rax
0x83ac:	mov	rsi, qword ptr [rax]
0x83af:	test	rsi, rsi
0x83b2:	je	0x84a0


0x84a0:	xor	esi, esi
0x84a2:	pop	rbx
0x84a3:	mov	rax, rsi
0x84a6:	pop	rbp
0x84a7:	pop	r12
0x84a9:	pop	r13
0x84ab:	pop	r14
0x84ad:	ret	


0x83b8:	cmp	rsi, rbp
0x83bb:	mov	rbx, rax
0x83be:	je	0x8453


0x8453:	test	r13b, r13b
0x8456:	je	0x843e


0x83c4:	mov	rdi, rbp
0x83c7:	call	qword ptr [r12 + 0x38]


0x843e:	pop	rbx
0x843f:	mov	rax, rsi
0x8442:	pop	rbp
0x8443:	pop	r12
0x8445:	pop	r13
0x8447:	pop	r14
0x8449:	ret	


0x8458:	mov	rax, qword ptr [rbx + 8]
0x845c:	test	rax, rax
0x845f:	je	0x8490


0x8490:	mov	qword ptr [rbx], 0
0x8497:	jmp	0x843e


0x8461:	movdqu	xmm0, xmmword ptr [rax]
0x8465:	movups	xmmword ptr [rbx], xmm0
0x8468:	mov	qword ptr [rax], 0
0x846f:	mov	rdx, qword ptr [r12 + 0x48]
0x8474:	mov	qword ptr [rax + 8], rdx
0x8478:	mov	qword ptr [r12 + 0x48], rax
0x847d:	mov	rax, rsi
0x8480:	pop	rbx
0x8481:	pop	rbp
0x8482:	pop	r12
0x8484:	pop	r13
0x8486:	pop	r14
0x8488:	ret	


0x88af:	mov	rsi, qword ptr [rax]
0x88b2:	test	rsi, rsi
0x88b5:	je	0x88dd


0x88dd:	xor	esi, esi
0x88df:	pop	rbx
0x88e0:	mov	rax, rsi
0x88e3:	pop	rbp
0x88e4:	pop	r12
0x88e6:	ret	


0x88b7:	mov	rbx, rax
0x88ba:	jmp	0x88c3


0x88c3:	cmp	rsi, rbp
0x88c6:	je	0x88df


0x88df:	pop	rbx
0x88e0:	mov	rax, rsi
0x88e3:	pop	rbp
0x88e4:	pop	r12
0x88e6:	ret	


0x88c8:	mov	rdi, rbp
0x88cb:	call	qword ptr [r12 + 0x38]


0x8961:	mov	rdx, rax
0x8964:	mov	rcx, rax
0x8967:	mov	rax, qword ptr [rdx]
0x896a:	mov	rdx, qword ptr [rdx + 8]
0x896e:	cmp	rax, rbx
0x8971:	je	0x8989


0x8989:	test	rdx, rdx
0x898c:	jne	0x89b8


0x898e:	mov	rdx, qword ptr [rbp + 8]
0x8992:	jmp	0x89a0


0x89b8:	mov	rax, qword ptr [rdx]
0x89bb:	add	rsp, 8
0x89bf:	pop	rbx
0x89c0:	pop	rbp
0x89c1:	ret	


0x897d:	mov	rax, qword ptr [rdx]
0x8980:	mov	rdx, qword ptr [rdx + 8]
0x8984:	cmp	rax, rbx
0x8987:	jne	0x8978


0x89a0:	add	rcx, 0x10
0x89a4:	cmp	rdx, rcx
0x89a7:	ja	0x8998


0x8978:	test	rdx, rdx
0x897b:	je	0x898e


0x89a9:	xor	eax, eax
0x89ab:	add	rsp, 8
0x89af:	pop	rbx
0x89b0:	pop	rbp
0x89b1:	ret	


0x8998:	mov	rax, qword ptr [rcx]
0x899b:	test	rax, rax
0x899e:	jne	0x89ab


0x89ab:	add	rsp, 8
0x89af:	pop	rbx
0x89b0:	pop	rbp
0x89b1:	ret	


0x90b9:	test	rax, rax
0x90bc:	mov	rdx, rax
0x90bf:	je	0x90f0


0x90f0:	mov	rax, qword ptr [rbx + 0x18]
0x90f4:	test	rax, rax
0x90f7:	js	0x9170


0x90c1:	xor	eax, eax
0x90c3:	test	r13, r13
0x90c6:	je	0x90cc


0x9170:	mov	rdx, rax
0x9173:	pxor	xmm1, xmm1
0x9177:	and	eax, 1
0x917a:	shr	rdx, 1
0x917d:	or	rdx, rax
0x9180:	mov	rax, qword ptr [rbx + 0x10]
0x9184:	cvtsi2ss	xmm1, rdx
0x9189:	mov	rdx, qword ptr [rbx + 0x28]
0x918d:	test	rax, rax
0x9190:	addss	xmm1, xmm1
0x9194:	jns	0x9113


0x90f9:	pxor	xmm1, xmm1
0x90fd:	mov	rdx, qword ptr [rbx + 0x28]
0x9101:	cvtsi2ss	xmm1, rax
0x9106:	mov	rax, qword ptr [rbx + 0x10]
0x910a:	test	rax, rax
0x910d:	js	0x919a


0x90cc:	mov	rcx, qword ptr [rsp + 8]
0x90d1:	xor	rcx, qword ptr fs:[0x28]
0x90da:	jne	0x92ff


0x90c8:	mov	qword ptr [r13], rdx
0x90cc:	mov	rcx, qword ptr [rsp + 8]
0x90d1:	xor	rcx, qword ptr fs:[0x28]
0x90da:	jne	0x92ff


0x919a:	mov	rcx, rax
0x919d:	pxor	xmm0, xmm0
0x91a1:	shr	rcx, 1
0x91a4:	and	eax, 1
0x91a7:	or	rcx, rax
0x91aa:	cvtsi2ss	xmm0, rcx
0x91af:	addss	xmm0, xmm0
0x91b3:	jmp	0x911c


0x9113:	pxor	xmm0, xmm0
0x9117:	cvtsi2ss	xmm0, rax
0x911c:	mulss	xmm0, dword ptr [rdx + 8]
0x9121:	ucomiss	xmm1, xmm0
0x9124:	ja	0x91c0


0x90e0:	add	rsp, 0x18
0x90e4:	pop	rbx
0x90e5:	pop	rbp
0x90e6:	pop	r12
0x90e8:	pop	r13
0x90ea:	ret	


0x92ff:	call	0x17e0


0x911c:	mulss	xmm0, dword ptr [rdx + 8]
0x9121:	ucomiss	xmm1, xmm0
0x9124:	ja	0x91c0


0x912a:	mov	r12, qword ptr [rsp]
0x912e:	cmp	qword ptr [r12], 0
0x9133:	je	0x9268


0x91c0:	lea	rdi, [rbx + 0x28]
0x91c4:	call	0x84b0


0x9268:	mov	qword ptr [r12], rbp
0x926c:	mov	eax, 1
0x9271:	add	qword ptr [rbx + 0x20], 1
0x9276:	add	qword ptr [rbx + 0x18], 1
0x927b:	jmp	0x90cc


0x9139:	mov	rax, qword ptr [rbx + 0x48]
0x913d:	test	rax, rax
0x9140:	je	0x9280


0x9280:	mov	edi, 0x10
0x9285:	call	0x1920


0x9146:	mov	rdx, qword ptr [rax + 8]
0x914a:	mov	qword ptr [rbx + 0x48], rdx
0x914e:	mov	rdx, qword ptr [r12 + 8]
0x9153:	mov	qword ptr [rax], rbp
0x9156:	mov	qword ptr [rax + 8], rdx
0x915a:	mov	qword ptr [r12 + 8], rax
0x915f:	mov	eax, 1
0x9164:	add	qword ptr [rbx + 0x20], 1
0x9169:	jmp	0x90cc


0x928a:	test	rax, rax
0x928d:	jne	0x914e


0x9293:	mov	eax, 0xffffffff
0x9298:	jmp	0x90cc


0x914e:	mov	rdx, qword ptr [r12 + 8]
0x9153:	mov	qword ptr [rax], rbp
0x9156:	mov	qword ptr [rax + 8], rdx
0x915a:	mov	qword ptr [r12 + 8], rax
0x915f:	mov	eax, 1
0x9164:	add	qword ptr [rbx + 0x20], 1
0x9169:	jmp	0x90cc


0x91c9:	mov	rax, qword ptr [rbx + 0x10]
0x91cd:	mov	rdx, qword ptr [rbx + 0x28]
0x91d1:	test	rax, rax
0x91d4:	movss	xmm2, dword ptr [rdx + 8]
0x91d9:	js	0x92a0


0x92a0:	mov	rcx, rax
0x92a3:	pxor	xmm0, xmm0
0x92a7:	shr	rcx, 1
0x92aa:	and	eax, 1
0x92ad:	or	rcx, rax
0x92b0:	cvtsi2ss	xmm0, rcx
0x92b5:	addss	xmm0, xmm0
0x92b9:	jmp	0x91e8


0x91df:	pxor	xmm0, xmm0
0x91e3:	cvtsi2ss	xmm0, rax
0x91e8:	mov	rax, qword ptr [rbx + 0x18]
0x91ec:	test	rax, rax
0x91ef:	js	0x92c0


0x91e8:	mov	rax, qword ptr [rbx + 0x18]
0x91ec:	test	rax, rax
0x91ef:	js	0x92c0


0x92c0:	mov	rcx, rax
0x92c3:	pxor	xmm1, xmm1
0x92c7:	shr	rcx, 1
0x92ca:	and	eax, 1
0x92cd:	or	rcx, rax
0x92d0:	cvtsi2ss	xmm1, rcx
0x92d5:	addss	xmm1, xmm1
0x92d9:	jmp	0x91fe


0x91f5:	pxor	xmm1, xmm1
0x91f9:	cvtsi2ss	xmm1, rax
0x91fe:	movaps	xmm3, xmm2
0x9201:	mulss	xmm3, xmm0
0x9205:	ucomiss	xmm1, xmm3
0x9208:	jbe	0x912a


0x91fe:	movaps	xmm3, xmm2
0x9201:	mulss	xmm3, xmm0
0x9205:	ucomiss	xmm1, xmm3
0x9208:	jbe	0x912a


0x920e:	cmp	byte ptr [rdx + 0x10], 0
0x9212:	mulss	xmm0, dword ptr [rdx + 0xc]
0x9217:	jne	0x921d


0x9219:	mulss	xmm0, xmm2
0x921d:	ucomiss	xmm0, dword ptr [rip + 0x1e28]
0x9224:	jae	0x9293


0x921d:	ucomiss	xmm0, dword ptr [rip + 0x1e28]
0x9224:	jae	0x9293


0x9226:	ucomiss	xmm0, dword ptr [rip + 0x1e23]
0x922d:	jae	0x92e0


0x9233:	cvttss2si	rsi, xmm0
0x9238:	mov	rdi, rbx
0x923b:	call	0x8e40


0x92e0:	subss	xmm0, dword ptr [rip + 0x1d68]
0x92e8:	movabs	rax, 0x8000000000000000
0x92f2:	cvttss2si	rsi, xmm0
0x92f7:	xor	rsi, rax
0x92fa:	jmp	0x9238


0x9238:	mov	rdi, rbx
0x923b:	call	0x8e40


0x9240:	test	al, al
0x9242:	je	0x9293


0x9244:	xor	ecx, ecx
0x9246:	mov	rdx, r12
0x9249:	mov	rsi, rbp
0x924c:	mov	rdi, rbx
0x924f:	call	0x8390


0x9330:	cmp	eax, -1
0x9333:	je	0x9360


0x9360:	xor	ebx, ebx
0x9362:	jmp	0x933d


0x9335:	test	eax, eax
0x9337:	jne	0x933d


0x933d:	mov	rcx, qword ptr [rsp + 8]
0x9342:	xor	rcx, qword ptr fs:[0x28]
0x934b:	mov	rax, rbx
0x934e:	jne	0x9364


0x9339:	mov	rbx, qword ptr [rsp]
0x933d:	mov	rcx, qword ptr [rsp + 8]
0x9342:	xor	rcx, qword ptr fs:[0x28]
0x934b:	mov	rax, rbx
0x934e:	jne	0x9364


0x9350:	add	rsp, 0x10
0x9354:	pop	rbx
0x9355:	ret	


0x9364:	call	0x17e0


0x9254:	test	rax, rax
0x9257:	je	0x912a


0x9398:	test	rax, rax
0x939b:	mov	rbp, rax
0x939e:	je	0x93af


0x93af:	mov	rcx, qword ptr [rsp + 8]
0x93b4:	xor	rcx, qword ptr fs:[0x28]
0x93bd:	mov	rax, rbp
0x93c0:	jne	0x956e


0x93a0:	mov	rax, qword ptr [rsp]
0x93a4:	sub	qword ptr [rbx + 0x20], 1
0x93a9:	cmp	qword ptr [rax], 0
0x93ad:	je	0x93d0


0x93c6:	add	rsp, 0x10
0x93ca:	pop	rbx
0x93cb:	pop	rbp
0x93cc:	pop	r12
0x93ce:	ret	


0x956e:	call	0x17e0


0x93d0:	mov	rax, qword ptr [rbx + 0x18]
0x93d4:	sub	rax, 1
0x93d8:	test	rax, rax
0x93db:	mov	qword ptr [rbx + 0x18], rax
0x93df:	js	0x94e0


0x94e0:	mov	rdx, rax
0x94e3:	pxor	xmm0, xmm0
0x94e7:	shr	rdx, 1
0x94ea:	and	eax, 1
0x94ed:	or	rdx, rax
0x94f0:	cvtsi2ss	xmm0, rdx
0x94f5:	addss	xmm0, xmm0
0x94f9:	jmp	0x93ee


0x93e5:	pxor	xmm0, xmm0
0x93e9:	cvtsi2ss	xmm0, rax
0x93ee:	mov	rax, qword ptr [rbx + 0x10]
0x93f2:	mov	rdx, qword ptr [rbx + 0x28]
0x93f6:	test	rax, rax
0x93f9:	js	0x94c0


0x93ee:	mov	rax, qword ptr [rbx + 0x10]
0x93f2:	mov	rdx, qword ptr [rbx + 0x28]
0x93f6:	test	rax, rax
0x93f9:	js	0x94c0


0x94c0:	mov	rcx, rax
0x94c3:	pxor	xmm1, xmm1
0x94c7:	shr	rcx, 1
0x94ca:	and	eax, 1
0x94cd:	or	rcx, rax
0x94d0:	cvtsi2ss	xmm1, rcx
0x94d5:	addss	xmm1, xmm1
0x94d9:	jmp	0x9408


0x93ff:	pxor	xmm1, xmm1
0x9403:	cvtsi2ss	xmm1, rax
0x9408:	mulss	xmm1, dword ptr [rdx]
0x940c:	ucomiss	xmm1, xmm0
0x940f:	jbe	0x93af


0x9408:	mulss	xmm1, dword ptr [rdx]
0x940c:	ucomiss	xmm1, xmm0
0x940f:	jbe	0x93af


0x9411:	lea	rdi, [rbx + 0x28]
0x9415:	call	0x84b0


0x941a:	mov	rax, qword ptr [rbx + 0x10]
0x941e:	mov	rdx, qword ptr [rbx + 0x28]
0x9422:	test	rax, rax
0x9425:	js	0x9550


0x9550:	mov	rcx, rax
0x9553:	pxor	xmm0, xmm0
0x9557:	shr	rcx, 1
0x955a:	and	eax, 1
0x955d:	or	rcx, rax
0x9560:	cvtsi2ss	xmm0, rcx
0x9565:	addss	xmm0, xmm0
0x9569:	jmp	0x9434


0x942b:	pxor	xmm0, xmm0
0x942f:	cvtsi2ss	xmm0, rax
0x9434:	mov	rax, qword ptr [rbx + 0x18]
0x9438:	test	rax, rax
0x943b:	js	0x9530


0x9434:	mov	rax, qword ptr [rbx + 0x18]
0x9438:	test	rax, rax
0x943b:	js	0x9530


0x9530:	mov	rcx, rax
0x9533:	pxor	xmm1, xmm1
0x9537:	shr	rcx, 1
0x953a:	and	eax, 1
0x953d:	or	rcx, rax
0x9540:	cvtsi2ss	xmm1, rcx
0x9545:	addss	xmm1, xmm1
0x9549:	jmp	0x944a


0x9441:	pxor	xmm1, xmm1
0x9445:	cvtsi2ss	xmm1, rax
0x944a:	movss	xmm2, dword ptr [rdx]
0x944e:	mulss	xmm2, xmm0
0x9452:	ucomiss	xmm2, xmm1
0x9455:	jbe	0x93af


0x944a:	movss	xmm2, dword ptr [rdx]
0x944e:	mulss	xmm2, xmm0
0x9452:	ucomiss	xmm2, xmm1
0x9455:	jbe	0x93af


0x945b:	cmp	byte ptr [rdx + 0x10], 0
0x945f:	mulss	xmm0, dword ptr [rdx + 4]
0x9464:	je	0x9520


0x9520:	mulss	xmm0, dword ptr [rdx + 8]
0x9525:	jmp	0x946a


0x946a:	ucomiss	xmm0, dword ptr [rip + 0x1bdf]
0x9471:	jae	0x9500


0x9477:	cvttss2si	rsi, xmm0
0x947c:	mov	rdi, rbx
0x947f:	call	0x8e40


0x9500:	subss	xmm0, dword ptr [rip + 0x1b48]
0x9508:	movabs	rax, 0x8000000000000000
0x9512:	cvttss2si	rsi, xmm0
0x9517:	xor	rsi, rax
0x951a:	jmp	0x947c


0x947c:	mov	rdi, rbx
0x947f:	call	0x8e40


0x9484:	test	al, al
0x9486:	jne	0x93af


0x948c:	mov	rdi, qword ptr [rbx + 0x48]
0x9490:	test	rdi, rdi
0x9493:	je	0x94a9


0x94a9:	mov	qword ptr [rbx + 0x48], 0
0x94b1:	jmp	0x93af


0x94a1:	test	r12, r12
0x94a4:	mov	rdi, r12
0x94a7:	jne	0x9498


0x9498:	mov	r12, qword ptr [rdi + 8]
0x949c:	call	0x1a90


0x88d0:	test	al, al
0x88d2:	jne	0x88f0


0x88d4:	mov	rbx, qword ptr [rbx + 8]
0x88d8:	test	rbx, rbx
0x88db:	jne	0x88c0


0x88f0:	mov	rsi, qword ptr [rbx]
0x88f3:	pop	rbx
0x88f4:	pop	rbp
0x88f5:	mov	rax, rsi
0x88f8:	pop	r12
0x88fa:	ret	


0x88c0:	mov	rsi, qword ptr [rbx]
0x88c3:	cmp	rsi, rbp
0x88c6:	je	0x88df


0x83cc:	test	al, al
0x83ce:	jne	0x8450


0x83d4:	mov	rax, qword ptr [rbx + 8]
0x83d8:	test	rax, rax
0x83db:	je	0x84a0


0x8450:	mov	rsi, qword ptr [rbx]
0x8453:	test	r13b, r13b
0x8456:	je	0x843e


0x83e1:	mov	rsi, qword ptr [rax]
0x83e4:	cmp	rbp, rsi
0x83e7:	jne	0x8409


0x83e9:	jmp	0x841c


0x8409:	mov	rdi, rbp
0x840c:	call	qword ptr [r12 + 0x38]


0x841c:	test	r13b, r13b
0x841f:	je	0x843e


0x8421:	mov	rdx, qword ptr [rax + 8]
0x8425:	mov	qword ptr [rbx + 8], rdx
0x8429:	mov	qword ptr [rax], 0
0x8430:	mov	rdx, qword ptr [r12 + 0x48]
0x8435:	mov	qword ptr [rax + 8], rdx
0x8439:	mov	qword ptr [r12 + 0x48], rax
0x843e:	pop	rbx
0x843f:	mov	rax, rsi
0x8442:	pop	rbp
0x8443:	pop	r12
0x8445:	pop	r13
0x8447:	pop	r14
0x8449:	ret	


0x8411:	test	al, al
0x8413:	je	0x83f0


0x83f0:	mov	rbx, qword ptr [rbx + 8]
0x83f4:	mov	rax, qword ptr [rbx + 8]
0x83f8:	test	rax, rax
0x83fb:	je	0x84a0


0x8415:	mov	rax, qword ptr [rbx + 8]
0x8419:	mov	rsi, qword ptr [rax]
0x841c:	test	r13b, r13b
0x841f:	je	0x843e


0x8401:	mov	rsi, qword ptr [rax]
0x8404:	cmp	rsi, rbp
0x8407:	je	0x841c






0x5560:	lea	rsi, [rip + 0x5771]
0x5567:	mov	edx, 5
0x556c:	xor	edi, edi
0x556e:	mov	r14, qword ptr [rbx + 0x18]
0x5572:	mov	r13, qword ptr [rbx + 0x10]
0x5576:	mov	r12, qword ptr [rbx + 8]
0x557a:	mov	rbx, qword ptr [rbx]
0x557d:	call	0x1790


0x5380:	mov	r9, qword ptr [rbx + 0x38]
0x5384:	mov	rax, qword ptr [rbx + 0x10]
0x5388:	lea	rsi, [rip + 0x59e9]
0x538f:	mov	r8, qword ptr [rbx + 8]
0x5393:	mov	edx, 5
0x5398:	xor	edi, edi
0x539a:	mov	r13, qword ptr [rbx + 0x30]
0x539e:	mov	r12, qword ptr [rbx + 0x28]
0x53a2:	mov	qword ptr [rsp + 0x10], r9
0x53a7:	mov	r15, qword ptr [rbx + 0x20]
0x53ab:	mov	r14, qword ptr [rbx + 0x18]
0x53af:	mov	qword ptr [rsp], rax
0x53b3:	mov	qword ptr [rsp + 8], r8
0x53b8:	mov	rbx, qword ptr [rbx]
0x53bb:	call	0x1790


0x5488:	mov	rbx, qword ptr [rbx]
0x548b:	lea	rsi, [rip + 0x56ed]
0x5492:	mov	edx, 5
0x5497:	xor	edi, edi
0x5499:	call	0x1790


0x54c8:	mov	r12, qword ptr [rbx + 8]
0x54cc:	lea	rsi, [rip + 0x56bc]
0x54d3:	mov	rbx, qword ptr [rbx]
0x54d6:	mov	edx, 5
0x54db:	xor	edi, edi
0x54dd:	call	0x1790


0x55e8:	mov	r8, qword ptr [rbx + 8]
0x55ec:	mov	r12, qword ptr [rbx + 0x28]
0x55f0:	lea	rsi, [rip + 0x5729]
0x55f7:	mov	r15, qword ptr [rbx + 0x20]
0x55fb:	mov	r14, qword ptr [rbx + 0x18]
0x55ff:	mov	edx, 5
0x5604:	mov	r13, qword ptr [rbx + 0x10]
0x5608:	xor	edi, edi
0x560a:	mov	rbx, qword ptr [rbx]
0x560d:	mov	qword ptr [rsp], r8
0x5611:	call	0x1790


0x5510:	mov	r13, qword ptr [rbx + 0x10]
0x5514:	mov	r12, qword ptr [rbx + 8]
0x5518:	lea	rsi, [rip + 0x5687]
0x551f:	mov	rbx, qword ptr [rbx]
0x5522:	mov	edx, 5
0x5527:	xor	edi, edi
0x5529:	call	0x1790


0x5650:	mov	r9, qword ptr [rbx + 0x10]
0x5654:	mov	r13, qword ptr [rbx + 0x30]
0x5658:	lea	rsi, [rip + 0x56e9]
0x565f:	mov	r12, qword ptr [rbx + 0x28]
0x5663:	mov	r15, qword ptr [rbx + 0x20]
0x5667:	mov	edx, 5
0x566c:	mov	r14, qword ptr [rbx + 0x18]
0x5670:	mov	r8, qword ptr [rbx + 8]
0x5674:	xor	edi, edi
0x5676:	mov	qword ptr [rsp + 8], r9
0x567b:	mov	rbx, qword ptr [rbx]
0x567e:	mov	qword ptr [rsp], r8
0x5682:	call	0x1790


0x5430:	mov	r10, qword ptr [rbx + 0x40]
0x5434:	mov	r9, qword ptr [rbx + 0x38]
0x5438:	lea	rsi, [rip + 0x5969]
0x543f:	mov	rax, qword ptr [rbx + 0x10]
0x5443:	mov	r8, qword ptr [rbx + 8]
0x5447:	mov	edx, 5
0x544c:	mov	r13, qword ptr [rbx + 0x30]
0x5450:	mov	r12, qword ptr [rbx + 0x28]
0x5454:	mov	r15, qword ptr [rbx + 0x20]
0x5458:	mov	r14, qword ptr [rbx + 0x18]
0x545c:	mov	rbx, qword ptr [rbx]
0x545f:	mov	qword ptr [rsp + 0x18], r10
0x5464:	mov	qword ptr [rsp + 0x10], r9
0x5469:	mov	qword ptr [rsp], rax
0x546d:	mov	qword ptr [rsp + 8], r8
0x5472:	xor	edi, edi
0x5474:	call	0x1790


0x53f6:	add	rsp, 0x28
0x53fa:	pop	rbx
0x53fb:	pop	rbp
0x53fc:	pop	r12
0x53fe:	pop	r13
0x5400:	pop	r14
0x5402:	pop	r15
0x5404:	ret	


0x55b8:	mov	r15, qword ptr [rbx + 0x20]
0x55bc:	lea	rsi, [rip + 0x5735]
0x55c3:	mov	edx, 5
0x55c8:	xor	edi, edi
0x55ca:	mov	r14, qword ptr [rbx + 0x18]
0x55ce:	mov	r13, qword ptr [rbx + 0x10]
0x55d2:	mov	r12, qword ptr [rbx + 8]
0x55d6:	mov	rbx, qword ptr [rbx]
0x55d9:	call	0x1790


0x55de:	push	r15
0x55e0:	jmp	0x5586


0x5586:	push	r14
0x5588:	mov	rdx, rax
0x558b:	mov	r9, r13
0x558e:	mov	r8, r12
0x5591:	mov	rcx, rbx
0x5594:	mov	rdi, rbp
0x5597:	mov	esi, 1
0x559c:	xor	eax, eax
0x559e:	call	0x1a50


0x55a3:	pop	rax
0x55a4:	pop	rdx
0x55a5:	add	rsp, 0x28
0x55a9:	pop	rbx
0x55aa:	pop	rbp
0x55ab:	pop	r12
0x55ad:	pop	r13
0x55af:	pop	r14
0x55b1:	pop	r15
0x55b3:	ret	


0x5687:	push	r13
0x5689:	push	r12
0x568b:	push	r15
0x568d:	push	r14
0x568f:	mov	r9, qword ptr [rsp + 0x28]
0x5694:	jmp	0x5623


0x5623:	mov	r8, qword ptr [rsp + 0x20]
0x5628:	mov	rcx, rbx
0x562b:	mov	rdx, rax
0x562e:	mov	rdi, rbp
0x5631:	mov	esi, 1
0x5636:	xor	eax, eax
0x5638:	call	0x1a50


0x563d:	add	rsp, 0x20
0x5641:	add	rsp, 0x28
0x5645:	pop	rbx
0x5646:	pop	rbp
0x5647:	pop	r12
0x5649:	pop	r13
0x564b:	pop	r14
0x564d:	pop	r15
0x564f:	ret	


0x552e:	add	rsp, 0x28
0x5532:	mov	r9, r13
0x5535:	mov	r8, r12
0x5538:	mov	rcx, rbx
0x553b:	mov	rdi, rbp
0x553e:	mov	rdx, rax
0x5541:	pop	rbx
0x5542:	pop	rbp
0x5543:	pop	r12
0x5545:	pop	r13
0x5547:	pop	r14
0x5549:	pop	r15
0x554b:	mov	esi, 1
0x5550:	xor	eax, eax
0x5552:	jmp	0x1a50


0x5616:	sub	rsp, 8
0x561a:	mov	r9, r13
0x561d:	push	r12
0x561f:	push	r15
0x5621:	push	r14
0x5623:	mov	r8, qword ptr [rsp + 0x20]
0x5628:	mov	rcx, rbx
0x562b:	mov	rdx, rax
0x562e:	mov	rdi, rbp
0x5631:	mov	esi, 1
0x5636:	xor	eax, eax
0x5638:	call	0x1a50


0x54e2:	add	rsp, 0x28
0x54e6:	mov	r8, r12
0x54e9:	mov	rcx, rbx
0x54ec:	mov	rdi, rbp
0x54ef:	mov	rdx, rax
0x54f2:	mov	esi, 1
0x54f7:	pop	rbx
0x54f8:	pop	rbp
0x54f9:	pop	r12
0x54fb:	pop	r13
0x54fd:	pop	r14
0x54ff:	pop	r15
0x5501:	xor	eax, eax
0x5503:	jmp	0x1a50


0x549e:	add	rsp, 0x28
0x54a2:	mov	rcx, rbx
0x54a5:	mov	rdi, rbp
0x54a8:	pop	rbx
0x54a9:	pop	rbp
0x54aa:	pop	r12
0x54ac:	pop	r13
0x54ae:	pop	r14
0x54b0:	pop	r15
0x54b2:	mov	rdx, rax
0x54b5:	mov	esi, 1
0x54ba:	xor	eax, eax
0x54bc:	jmp	0x1a50


0x53c0:	sub	rsp, 8
0x53c4:	mov	r9, qword ptr [rsp + 0x18]
0x53c9:	mov	rdx, rax
0x53cc:	mov	rcx, rbx
0x53cf:	mov	esi, 1
0x53d4:	mov	rdi, rbp
0x53d7:	xor	eax, eax
0x53d9:	push	r9
0x53db:	push	r13
0x53dd:	push	r12
0x53df:	push	r15
0x53e1:	push	r14
0x53e3:	mov	r9, qword ptr [rsp + 0x30]
0x53e8:	mov	r8, qword ptr [rsp + 0x38]
0x53ed:	call	0x1a50


0x5582:	sub	rsp, 8
0x5586:	push	r14
0x5588:	mov	rdx, rax
0x558b:	mov	r9, r13
0x558e:	mov	r8, r12
0x5591:	mov	rcx, rbx
0x5594:	mov	rdi, rbp
0x5597:	mov	esi, 1
0x559c:	xor	eax, eax
0x559e:	call	0x1a50


0x4250:	sub	rsp, 8
0x4254:	mov	rcx, rbp
0x4257:	mov	rsi, r13
0x425a:	push	qword ptr [rsp + 0x68]
0x425e:	push	qword ptr [rsp + 0x78]
0x4262:	mov	rdi, r14
0x4265:	push	0
0x4267:	mov	r9d, dword ptr [rsp + 0x98]
0x426f:	mov	r8d, dword ptr [rsp + 0x28]
0x4274:	mov	rdx, qword ptr [rsp + 0x30]
0x4279:	and	r9d, 0xfffffffd
0x427d:	call	0x36b0


0x4282:	add	rsp, 0x20
0x4286:	mov	r15, rax
0x4289:	mov	rbx, qword ptr [rsp + 0xa8]
0x4291:	xor	rbx, qword ptr fs:[0x28]
0x429a:	mov	rax, r15
0x429d:	jne	0x48a3


0x42a3:	add	rsp, 0xb8
0x42aa:	pop	rbx
0x42ab:	pop	rbp
0x42ac:	pop	r12
0x42ae:	pop	r13
0x42b0:	pop	r14
0x42b2:	pop	r15
0x42b4:	ret	


0x48a3:	call	0x17e0


0x484d:	sub	rsp, 8
0x4851:	mov	r8d, 5
0x4857:	mov	rcx, r11
0x485a:	push	qword ptr [rsp + 0x68]
0x485e:	push	qword ptr [rsp + 0x78]
0x4862:	mov	rdi, r14
0x4865:	push	qword ptr [rsp + 0x38]
0x4869:	mov	r9d, dword ptr [rsp + 0x98]
0x4871:	mov	rdx, qword ptr [rsp + 0x30]
0x4876:	mov	rsi, qword ptr [rsp + 0x70]
0x487b:	call	0x36b0


0x4880:	add	rsp, 0x20
0x4884:	mov	r15, rax
0x4887:	jmp	0x4289


0x4289:	mov	rbx, qword ptr [rsp + 0xa8]
0x4291:	xor	rbx, qword ptr fs:[0x28]
0x429a:	mov	rax, r15
0x429d:	jne	0x48a3


0x16e0:	push	qword ptr [rip + 0x20c70a]
0x16e6:	jmp	qword ptr [rip + 0x20c70c]


0x16ec:	nop	dword ptr [rax]


0x16f6:	push	0
0x16fb:	jmp	0x16e0


0x1706:	push	1
0x170b:	jmp	0x16e0


0x1716:	push	2
0x171b:	jmp	0x16e0


0x1726:	push	3
0x172b:	jmp	0x16e0


0x1736:	push	4
0x173b:	jmp	0x16e0


0x1746:	push	5
0x174b:	jmp	0x16e0


0x1756:	push	6
0x175b:	jmp	0x16e0


0x1766:	push	7
0x176b:	jmp	0x16e0


0x1776:	push	8
0x177b:	jmp	0x16e0


0x1786:	push	9
0x178b:	jmp	0x16e0


0x1796:	push	0xa
0x179b:	jmp	0x16e0


0x17a6:	push	0xb
0x17ab:	jmp	0x16e0


0x17b6:	push	0xc
0x17bb:	jmp	0x16e0


0x17c6:	push	0xd
0x17cb:	jmp	0x16e0


0x17d6:	push	0xe
0x17db:	jmp	0x16e0


0x17e6:	push	0xf
0x17eb:	jmp	0x16e0


0x17f6:	push	0x10
0x17fb:	jmp	0x16e0


0x1806:	push	0x11
0x180b:	jmp	0x16e0


0x1816:	push	0x12
0x181b:	jmp	0x16e0


0x1826:	push	0x13
0x182b:	jmp	0x16e0


0x1836:	push	0x14
0x183b:	jmp	0x16e0


0x1846:	push	0x15
0x184b:	jmp	0x16e0


0x1856:	push	0x16
0x185b:	jmp	0x16e0


0x1866:	push	0x17
0x186b:	jmp	0x16e0


0x1876:	push	0x18
0x187b:	jmp	0x16e0


0x1880:	jmp	qword ptr [rip + 0x20c642]




0x1886:	push	0x19
0x188b:	jmp	0x16e0


0x1896:	push	0x1a
0x189b:	jmp	0x16e0


0x18a6:	push	0x1b
0x18ab:	jmp	0x16e0


0x18b6:	push	0x1c
0x18bb:	jmp	0x16e0


0x18c6:	push	0x1d
0x18cb:	jmp	0x16e0


0x18d6:	push	0x1e
0x18db:	jmp	0x16e0


0x18e6:	push	0x1f
0x18eb:	jmp	0x16e0


0x18f6:	push	0x20
0x18fb:	jmp	0x16e0


0x1906:	push	0x21
0x190b:	jmp	0x16e0


0x1916:	push	0x22
0x191b:	jmp	0x16e0


0x1926:	push	0x23
0x192b:	jmp	0x16e0


0x1936:	push	0x24
0x193b:	jmp	0x16e0


0x1946:	push	0x25
0x194b:	jmp	0x16e0


0x1956:	push	0x26
0x195b:	jmp	0x16e0


0x1966:	push	0x27
0x196b:	jmp	0x16e0


0x1976:	push	0x28
0x197b:	jmp	0x16e0


0x1986:	push	0x29
0x198b:	jmp	0x16e0


0x1996:	push	0x2a
0x199b:	jmp	0x16e0


0x19a6:	push	0x2b
0x19ab:	jmp	0x16e0


0x19b6:	push	0x2c
0x19bb:	jmp	0x16e0


0x19c6:	push	0x2d
0x19cb:	jmp	0x16e0


0x19d6:	push	0x2e
0x19db:	jmp	0x16e0


0x19e6:	push	0x2f
0x19eb:	jmp	0x16e0


0x19f6:	push	0x30
0x19fb:	jmp	0x16e0


0x1a06:	push	0x31
0x1a0b:	jmp	0x16e0


0x1a16:	push	0x32
0x1a1b:	jmp	0x16e0


0x1a26:	push	0x33
0x1a2b:	jmp	0x16e0


0x1a36:	push	0x34
0x1a3b:	jmp	0x16e0


0x1a46:	push	0x35
0x1a4b:	jmp	0x16e0


0x1a56:	push	0x36
0x1a5b:	jmp	0x16e0


0x1a60:	jmp	qword ptr [rip + 0x20c552]




0x1a66:	push	0x37
0x1a6b:	jmp	0x16e0


0x1a70:	jmp	qword ptr [rip + 0x20c54a]




0x1a76:	push	0x38
0x1a7b:	jmp	0x16e0


0x1a80:	jmp	qword ptr [rip + 0x20c542]




0x1a86:	push	0x39
0x1a8b:	jmp	0x16e0


0x1a96:	nop	


0x1e3c:	mov	r15d, 1
0x1e42:	nop	word ptr [rax + rax]
0x1e48:	mov	rdi, rbp
0x1e4b:	and	ebx, r15d
0x1e4e:	call	0x7720


0x1ed9:	cmp	byte ptr [rip + 0x20c229], 0
0x1ee0:	je	0x254e


0x254e:	mov	rsi, r13
0x2551:	mov	edi, 4
0x2556:	call	0x4f60


0x255b:	mov	edx, 5
0x2560:	mov	r15, rax
0x2563:	lea	rsi, [rip + 0x77d3]
0x256a:	jmp	0x1fa5


0x1fa5:	xor	edi, edi
0x1fa7:	call	0x1790


0x1fac:	mov	esi, dword ptr [r14 + 0x40]
0x1fb0:	mov	rdx, rax
0x1fb3:	mov	rcx, r15
0x1fb6:	xor	edi, edi
0x1fb8:	xor	eax, eax
0x1fba:	call	0x19d0


0x1fbf:	jmp	0x1ef0


0x1f2b:	cmp	byte ptr [rip + 0x20c1d7], 0
0x1f32:	jne	0x1ef0


0x1f34:	mov	rsi, r13
0x1f37:	mov	edi, 4
0x1f3c:	call	0x4f60


0x1f41:	lea	rsi, [rip + 0x83a0]
0x1f48:	mov	r15, rax
0x1f4b:	xor	edi, edi
0x1f4d:	mov	edx, 5
0x1f52:	call	0x1790


0x1f57:	mov	rcx, r15
0x1f5a:	mov	rdx, rax
0x1f5d:	xor	esi, esi
0x1f5f:	xor	edi, edi
0x1f61:	xor	eax, eax
0x1f63:	call	0x19d0


0x1f68:	jmp	0x1ef0


0x1f6a:	cmp	qword ptr [r14 + 0x58], 0
0x1f6f:	jne	0x1f7c


0x1f71:	cmp	qword ptr [r14 + 0x20], 0
0x1f76:	je	0x263d


0x1f7c:	cmp	byte ptr [rip + 0x20c186], 0
0x1f83:	jne	0x1ef0


0x1f89:	mov	rsi, r13
0x1f8c:	mov	edi, 4
0x1f91:	call	0x4f60


0x1f96:	lea	rsi, [rip + 0x7d8f]
0x1f9d:	mov	r15, rax
0x1fa0:	mov	edx, 5
0x1fa5:	xor	edi, edi
0x1fa7:	call	0x1790


0x1fc4:	cmp	byte ptr [rip + 0x20c13e], 0
0x1fcb:	jne	0x1ef0


0x1fd1:	mov	rdx, r13
0x1fd4:	xor	edi, edi
0x1fd6:	mov	esi, 3
0x1fdb:	call	0x5060


0x1fe0:	mov	esi, dword ptr [r14 + 0x40]
0x1fe4:	lea	rdx, [rip + 0x7d2e]
0x1feb:	mov	rcx, rax
0x1fee:	xor	edi, edi
0x1ff0:	xor	eax, eax
0x1ff2:	call	0x19d0


0x1ff7:	jmp	0x1ef0


0x1ffc:	mov	rsi, r14
0x1fff:	mov	rdi, rbp
0x2002:	call	0x5bd0


0x2007:	test	al, al
0x2009:	jne	0x256f


0x256f:	mov	rdx, r13
0x2572:	mov	esi, 3
0x2577:	xor	edi, edi
0x2579:	call	0x5060


0x257e:	lea	rsi, [rip + 0x7d8b]
0x2585:	mov	r13, rax
0x2588:	mov	edx, 5
0x258d:	xor	edi, edi
0x258f:	xor	r15d, r15d
0x2592:	call	0x1790


0x2597:	mov	rcx, r13
0x259a:	mov	rdx, rax
0x259d:	xor	esi, esi
0x259f:	xor	edi, edi
0x25a1:	xor	eax, eax
0x25a3:	call	0x19d0


0x25a8:	jmp	0x1e48


0x27d6:	nop	word ptr cs:[rax + rax]


0x280a:	hlt	


0x280b:	nop	dword ptr [rax + rax]


0x2842:	nop	dword ptr [rax]
0x2846:	nop	word ptr cs:[rax + rax]


0x2892:	nop	dword ptr [rax]
0x2896:	nop	word ptr cs:[rax + rax]


0x28da:	nop	word ptr [rax + rax]


0x28ea:	nop	word ptr [rax + rax]


0x2cf2:	nop	word ptr cs:[rax + rax]
0x2cfc:	nop	dword ptr [rax]


0x2d08:	nop	dword ptr [rax + rax]


0x2d18:	nop	dword ptr [rax + rax]


0x2dc4:	nop	word ptr cs:[rax + rax]
0x2dce:	nop	


0x2f53:	nop	dword ptr [rax]
0x2f56:	nop	word ptr cs:[rax + rax]


0x2f68:	nop	dword ptr [rax + rax]


0x3198:	movzx	r8d, r8b
0x319c:	movsxd	r8, dword ptr [rbp + r8*4]
0x31a1:	add	r8, rbp
0x31a4:	jmp	r8


0x31b8:	add	rcx, 1
0x31bc:	movzx	edx, byte ptr [rcx]
0x31bf:	lea	r8d, [rdx - 0x58]
0x31c3:	cmp	r8b, 0x20
0x31c7:	jbe	0x3198


0x3319:	nop	dword ptr [rax]


0x33a9:	nop	dword ptr [rax]


0x351d:	nop	dword ptr [rax]


0x35bf:	nop	


0x36a7:	nop	word ptr [rax + rax]


0x3743:	mov	byte ptr [rsp + 0xe], 1
0x3748:	mov	byte ptr [rsp + 0x7c], 0
0x374d:	xor	r12d, r12d
0x3750:	mov	qword ptr [rsp + 0x50], 0
0x3759:	mov	byte ptr [rsp + 0xf], 1
0x375e:	mov	byte ptr [rsp + 0xd], 0
0x3763:	lea	rax, [rip + 0x6f33]
0x376a:	mov	qword ptr [rsp + 0x18], 1
0x3773:	xor	r15d, r15d
0x3776:	mov	dword ptr [rsp + 8], 2
0x377e:	mov	qword ptr [rsp + 0x48], rax
0x3783:	xor	r11d, r11d
0x3786:	mov	rax, rbp
0x3789:	mov	r8d, r12d
0x378c:	mov	rbp, r11
0x378f:	mov	r11, rax
0x3792:	nop	word ptr [rax + rax]
0x3798:	cmp	r11, rbp
0x379b:	setne	r12b
0x379f:	cmp	r11, -1
0x37a3:	jne	0x37b2


0x37a5:	mov	rax, qword ptr [rsp + 0x10]
0x37aa:	cmp	byte ptr [rax + rbp], 0
0x37ae:	setne	r12b
0x37b2:	test	r12b, r12b
0x37b5:	je	0x3e10


0x37b2:	test	r12b, r12b
0x37b5:	je	0x3e10


0x3e10:	cmp	dword ptr [rsp + 8], 2
0x3e15:	movzx	ebx, byte ptr [rsp + 0xf]
0x3e1a:	mov	r12d, r8d
0x3e1d:	mov	rbp, r11
0x3e20:	sete	dl
0x3e23:	mov	eax, ebx
0x3e25:	test	r15, r15
0x3e28:	sete	cl
0x3e2b:	and	eax, edx
0x3e2d:	and	al, cl
0x3e2f:	jne	0x4896


0x37bb:	cmp	dword ptr [rsp + 8], 2
0x37c0:	mov	rdi, qword ptr [rsp + 0x10]
0x37c5:	lea	r9, [rdi + rbp]
0x37c9:	setne	al
0x37cc:	and	al, byte ptr [rsp + 0xd]
0x37d0:	mov	r10d, eax
0x37d3:	je	0x3880


0x3e35:	mov	eax, ebx
0x3e37:	xor	eax, 1
0x3e3a:	and	dl, al
0x3e3c:	je	0x47ac


0x4896:	mov	dword ptr [rsp + 8], 2
0x489e:	jmp	0x4239


0x3880:	movzx	ebx, byte ptr [r9]
0x3884:	cmp	bl, 0x7e
0x3887:	ja	0x3ba8


0x37d9:	mov	rax, qword ptr [rsp + 0x18]
0x37de:	test	rax, rax
0x37e1:	je	0x3c10


0x47ac:	mov	rbx, qword ptr [rsp + 0x48]
0x47b1:	test	rbx, rbx
0x47b4:	je	0x47e2


0x3e42:	cmp	byte ptr [rsp + 0x7c], 0
0x3e47:	je	0x47aa


0x4239:	cmp	byte ptr [rsp + 0xd], 0
0x423e:	je	0x4250


0x388d:	lea	rcx, [rip + 0x6e98]
0x3894:	movzx	edx, bl
0x3897:	movsxd	rax, dword ptr [rcx + rdx*4]
0x389b:	add	rax, rcx
0x389e:	jmp	rax


0x3ba8:	cmp	qword ptr [rsp + 0x58], 1
0x3bae:	jne	0x3f58


0x3c10:	movzx	ebx, byte ptr [r9]
0x3c14:	cmp	bl, 0x7e
0x3c17:	ja	0x3ba0


0x37e7:	cmp	r11, -1
0x37eb:	lea	rbx, [rbp + rax]
0x37f0:	jne	0x3820


0x47e2:	cmp	r13, r15
0x47e5:	jbe	0x4289


0x47b6:	test	al, al
0x47b8:	je	0x47e2


0x47aa:	mov	eax, edx
0x47ac:	mov	rbx, qword ptr [rsp + 0x48]
0x47b1:	test	rbx, rbx
0x47b4:	je	0x47e2


0x3e4d:	cmp	byte ptr [rsp + 0xe], 0
0x3e52:	jne	0x484d


0x4240:	test	al, al
0x4242:	mov	eax, 4
0x4247:	cmove	eax, dword ptr [rsp + 8]
0x424c:	mov	dword ptr [rsp + 8], eax


0x3bb4:	mov	qword ptr [rsp + 0x38], r11
0x3bb9:	mov	byte ptr [rsp + 0x30], r8b
0x3bbe:	mov	byte ptr [rsp + 0x28], r10b
0x3bc3:	call	0x1a80


0x3f58:	lea	rax, [rsp + 0xa0]
0x3f60:	cmp	r11, -1
0x3f64:	mov	qword ptr [rsp + 0xa0], 0
0x3f70:	mov	qword ptr [rsp + 0x28], rax
0x3f75:	jne	0x3fa4


0x3c19:	lea	rcx, [rip + 0x6d08]
0x3c20:	movzx	edx, bl
0x3c23:	movsxd	rax, dword ptr [rcx + rdx*4]
0x3c27:	add	rax, rcx
0x3c2a:	jmp	rax


0x3ba0:	xor	r10d, r10d
0x3ba3:	nop	dword ptr [rax + rax]
0x3ba8:	cmp	qword ptr [rsp + 0x58], 1
0x3bae:	jne	0x3f58


0x37f2:	cmp	rax, 1
0x37f6:	jbe	0x3820


0x3820:	cmp	rbx, r11
0x3823:	mov	byte ptr [rsp + 0x28], r10b
0x3828:	ja	0x3de0


0x47eb:	mov	byte ptr [r14 + r15], 0
0x47f0:	jmp	0x4289


0x47ba:	movzx	ecx, byte ptr [rbx]
0x47bd:	mov	rax, rbx
0x47c0:	test	cl, cl
0x47c2:	je	0x47e2


0x3e58:	test	r13, r13
0x3e5b:	sete	al
0x3e5e:	cmp	qword ptr [rsp + 0x50], 0
0x3e64:	setne	dl
0x3e67:	and	al, dl
0x3e69:	je	0x488c


0x3f77:	mov	rdi, qword ptr [rsp + 0x10]
0x3f7c:	mov	byte ptr [rsp + 0x40], r8b
0x3f81:	mov	byte ptr [rsp + 0x38], r10b
0x3f86:	mov	qword ptr [rsp + 0x30], r9
0x3f8b:	call	0x17b0


0x3fa4:	lea	rax, [rsp + 0x9c]
0x3fac:	xor	ecx, ecx
0x3fae:	mov	byte ptr [rsp + 0x7e], bl
0x3fb2:	mov	byte ptr [rsp + 0x7d], r8b
0x3fb7:	mov	rbx, rcx
0x3fba:	mov	qword ptr [rsp + 0x88], r9
0x3fc2:	mov	qword ptr [rsp + 0x38], rax
0x3fc7:	mov	byte ptr [rsp + 0x7f], r10b
0x3fcc:	mov	qword ptr [rsp + 0x80], r15
0x3fd4:	mov	qword ptr [rsp + 0x40], r14
0x3fd9:	mov	qword ptr [rsp + 0x70], r13
0x3fde:	mov	qword ptr [rsp + 0x30], r11
0x3fe3:	mov	rax, qword ptr [rsp + 0x10]
0x3fe8:	lea	r14, [rbp + rbx]
0x3fed:	mov	rdx, qword ptr [rsp + 0x30]
0x3ff2:	mov	rcx, qword ptr [rsp + 0x28]
0x3ff7:	mov	rdi, qword ptr [rsp + 0x38]
0x3ffc:	lea	r13, [rax + r14]
0x4000:	sub	rdx, r14
0x4003:	mov	rsi, r13
0x4006:	call	0x8020


0x37f8:	mov	byte ptr [rsp + 0x38], r8b
0x37fd:	mov	byte ptr [rsp + 0x30], r10b
0x3802:	mov	qword ptr [rsp + 0x28], r9
0x3807:	call	0x17b0


0x382e:	mov	rdx, qword ptr [rsp + 0x18]
0x3833:	mov	rsi, qword ptr [rsp + 0x48]
0x3838:	mov	rdi, r9
0x383b:	mov	qword ptr [rsp + 0x40], r11
0x3840:	mov	byte ptr [rsp + 0x38], r8b
0x3845:	mov	qword ptr [rsp + 0x30], r9
0x384a:	call	0x1880


0x3de0:	xor	r10d, r10d
0x3de3:	jmp	0x3880


0x47c4:	mov	rdx, r15
0x47c7:	sub	rax, r15
0x47ca:	cmp	r13, rdx
0x47cd:	jbe	0x47d3


0x488c:	movzx	eax, byte ptr [rsp + 0x7c]
0x4891:	jmp	0x47ac


0x3e6f:	mov	r13, qword ptr [rsp + 0x50]
0x3e74:	lea	rbx, [rip + 0x6822]
0x3e7b:	mov	byte ptr [r14], 0x27
0x3e7f:	mov	dword ptr [rsp + 8], 2
0x3e87:	mov	r15d, 1
0x3e8d:	mov	qword ptr [rsp + 0x18], 1
0x3e96:	mov	byte ptr [rsp + 0xf], 0
0x3e9b:	mov	qword ptr [rsp + 0x48], rbx
0x3ea0:	mov	byte ptr [rsp + 0x7c], al
0x3ea4:	jmp	0x3783


0x47d3:	add	rdx, 1
0x47d7:	movzx	ecx, byte ptr [rax + rdx]
0x47db:	test	cl, cl
0x47dd:	jne	0x47ca


0x47cf:	mov	byte ptr [r14 + rdx], cl
0x47d3:	add	rdx, 1
0x47d7:	movzx	ecx, byte ptr [rax + rdx]
0x47db:	test	cl, cl
0x47dd:	jne	0x47ca


0x3783:	xor	r11d, r11d
0x3786:	mov	rax, rbp
0x3789:	mov	r8d, r12d
0x378c:	mov	rbp, r11
0x378f:	mov	r11, rax
0x3792:	nop	word ptr [rax + rax]
0x3798:	cmp	r11, rbp
0x379b:	setne	r12b
0x379f:	cmp	r11, -1
0x37a3:	jne	0x37b2


0x47df:	mov	r15, rdx
0x47e2:	cmp	r13, r15
0x47e5:	jbe	0x4289


0x47ca:	cmp	r13, rdx
0x47cd:	jbe	0x47d3


0x384f:	test	eax, eax
0x3851:	mov	r9, qword ptr [rsp + 0x30]
0x3856:	movzx	r8d, byte ptr [rsp + 0x38]
0x385c:	mov	r11, qword ptr [rsp + 0x40]
0x3861:	jne	0x3de0


0x3867:	cmp	byte ptr [rsp + 0xf], 0
0x386c:	movzx	r10d, byte ptr [rsp + 0x28]
0x3872:	jne	0x47f5


0x47f5:	cmp	dword ptr [rsp + 8], 2
0x47fa:	movzx	ebx, byte ptr [rsp + 0xf]
0x47ff:	mov	rbp, r11
0x4802:	sete	al
0x4805:	mov	byte ptr [rsp + 0xd], bl
0x4809:	jmp	0x4239


0x400b:	test	rax, rax
0x400e:	mov	r15, rax
0x4011:	je	0x4061


0x4061:	mov	edx, r12d
0x4064:	mov	rdi, rbx
0x4067:	movzx	r8d, byte ptr [rsp + 0x7d]
0x406d:	xor	edx, 1
0x4070:	movzx	ebx, byte ptr [rsp + 0x7e]
0x4075:	movzx	r10d, byte ptr [rsp + 0x7f]
0x407b:	and	dl, byte ptr [rsp + 0xd]
0x407f:	mov	r15, qword ptr [rsp + 0x80]
0x4087:	mov	r14, qword ptr [rsp + 0x40]
0x408c:	mov	r13, qword ptr [rsp + 0x70]
0x4091:	mov	r11, qword ptr [rsp + 0x30]
0x4096:	cmp	rdi, 1
0x409a:	jbe	0x469b


0x4013:	cmp	rax, -1
0x4017:	je	0x4635


0x469b:	mov	eax, edx
0x469d:	jmp	0x3bf7


0x40a0:	mov	rcx, rdi
0x40a3:	xor	esi, esi
0x40a5:	movzx	r9d, byte ptr [rsp + 0xf]
0x40ab:	add	rcx, rbp
0x40ae:	mov	rdi, qword ptr [rsp + 0x10]
0x40b3:	jmp	0x416e


0x4635:	mov	rdi, rbx
0x4638:	movzx	r8d, byte ptr [rsp + 0x7d]
0x463e:	movzx	ebx, byte ptr [rsp + 0x7e]
0x4643:	movzx	r10d, byte ptr [rsp + 0x7f]
0x4649:	mov	r15, qword ptr [rsp + 0x80]
0x4651:	xor	r12d, r12d
0x4654:	mov	r14, qword ptr [rsp + 0x40]
0x4659:	mov	r13, qword ptr [rsp + 0x70]
0x465e:	mov	r11, qword ptr [rsp + 0x30]
0x4663:	movzx	edx, byte ptr [rsp + 0xd]
0x4668:	jmp	0x4096


0x401d:	cmp	rax, -2
0x4021:	je	0x45c1


0x3bf7:	test	al, al
0x3bf9:	jne	0x4591


0x416e:	test	dl, dl
0x4170:	jne	0x40c0


0x4096:	cmp	rdi, 1
0x409a:	jbe	0x469b


0x45c1:	mov	r11, qword ptr [rsp + 0x30]
0x45c6:	mov	rsi, r14
0x45c9:	mov	rcx, r13
0x45cc:	mov	rax, rbx
0x45cf:	mov	rdi, rbx
0x45d2:	movzx	r8d, byte ptr [rsp + 0x7d]
0x45d8:	movzx	ebx, byte ptr [rsp + 0x7e]
0x45dd:	mov	r9, qword ptr [rsp + 0x88]
0x45e5:	cmp	rsi, r11
0x45e8:	movzx	r10d, byte ptr [rsp + 0x7f]
0x45ee:	mov	r15, qword ptr [rsp + 0x80]
0x45f6:	mov	r14, qword ptr [rsp + 0x40]
0x45fb:	mov	r13, qword ptr [rsp + 0x70]
0x4600:	jae	0x4628


0x4027:	cmp	dword ptr [rsp + 8], 2
0x402c:	sete	al
0x402f:	and	al, byte ptr [rsp + 0xf]
0x4033:	jne	0x41d0


0x3bff:	cmp	dword ptr [rsp + 8], 2
0x3c04:	sete	dl
0x3c07:	jmp	0x38d8


0x4591:	movzx	edx, byte ptr [rsp + 0xd]
0x4596:	xor	r12d, r12d
0x4599:	jmp	0x40a0


0x4176:	mov	eax, esi
0x4178:	xor	eax, 1
0x417b:	and	eax, r8d
0x417e:	test	r10b, r10b
0x4181:	je	0x4191


0x40c0:	cmp	dword ptr [rsp + 8], 2
0x40c5:	sete	al
0x40c8:	test	r9b, r9b
0x40cb:	jne	0x4580


0x4602:	cmp	byte ptr [rcx], 0
0x4605:	jne	0x4617


0x4628:	movzx	edx, byte ptr [rsp + 0xd]
0x462d:	xor	r12d, r12d
0x4630:	jmp	0x4096


0x4039:	mov	edi, dword ptr [rsp + 0x9c]
0x4040:	call	0x1a70


0x41d0:	cmp	r15, 1
0x41d4:	je	0x4039


0x38d8:	cmp	byte ptr [rsp + 0xd], 1
0x38dd:	jne	0x39f2


0x4191:	add	rbp, 1
0x4195:	cmp	rbp, rcx
0x4198:	jae	0x391c


0x4183:	cmp	r13, r15
0x4186:	jbe	0x418d


0x40d1:	mov	esi, r8d
0x40d4:	xor	esi, 1
0x40d7:	and	al, sil
0x40da:	je	0x410b


0x4580:	movzx	ebx, byte ptr [rsp + 0xf]
0x4585:	mov	rbp, r11
0x4588:	mov	byte ptr [rsp + 0xd], bl
0x458c:	jmp	0x4239


0x4607:	jmp	0x4628


0x4617:	add	rax, 1
0x461b:	lea	rdx, [rbp + rax]
0x4620:	cmp	r11, rdx
0x4623:	ja	0x4610


0x41da:	mov	rdi, qword ptr [rsp + 0x10]
0x41df:	lea	rcx, [rdi + r15]
0x41e3:	lea	rdx, [rdi + r14 + 1]
0x41e8:	lea	r8, [rcx + r14]
0x41ec:	jmp	0x41fd


0x38e3:	test	dl, dl
0x38e5:	jne	0x39f2


0x39f2:	cmp	byte ptr [rsp + 0xf], 0
0x39f7:	jne	0x38eb


0x419e:	test	al, al
0x41a0:	je	0x459e


0x391c:	test	al, al
0x391e:	je	0x3940


0x418d:	add	r15, 1
0x4191:	add	rbp, 1
0x4195:	cmp	rbp, rcx
0x4198:	jae	0x391c


0x4188:	mov	byte ptr [r14 + r15], 0x5c
0x418d:	add	r15, 1
0x4191:	add	rbp, 1
0x4195:	cmp	rbp, rcx
0x4198:	jae	0x391c


0x410b:	cmp	r13, r15
0x410e:	jbe	0x4115


0x40dc:	cmp	r13, r15
0x40df:	jbe	0x40e6


0x4625:	mov	rdi, rax
0x4628:	movzx	edx, byte ptr [rsp + 0xd]
0x462d:	xor	r12d, r12d
0x4630:	jmp	0x4096


0x4610:	cmp	byte ptr [r9 + rax], 0
0x4615:	je	0x4625


0x41fd:	movzx	ecx, byte ptr [rdx]
0x4200:	sub	ecx, 0x5b
0x4203:	cmp	cl, 0x21
0x4206:	ja	0x41f0


0x38eb:	mov	rsi, qword ptr [rsp + 0x20]
0x38f0:	test	rsi, rsi
0x38f3:	je	0x3909


0x39fd:	jmp	0x3909


0x459e:	xor	r10d, r10d
0x45a1:	jmp	0x415d


0x41a6:	cmp	r13, r15
0x41a9:	jbe	0x41b0


0x3940:	cmp	r15, r13
0x3943:	jae	0x3949


0x3920:	cmp	r13, r15
0x3923:	jbe	0x392a


0x4115:	lea	rax, [r15 + 1]
0x4119:	cmp	r13, rax
0x411c:	jbe	0x412b


0x4110:	mov	byte ptr [r14 + r15], 0x5c
0x4115:	lea	rax, [r15 + 1]
0x4119:	cmp	r13, rax
0x411c:	jbe	0x412b


0x40e6:	lea	rsi, [r15 + 1]
0x40ea:	cmp	r13, rsi
0x40ed:	jbe	0x40f5


0x40e1:	mov	byte ptr [r14 + r15], 0x27
0x40e6:	lea	rsi, [r15 + 1]
0x40ea:	cmp	r13, rsi
0x40ed:	jbe	0x40f5


0x4208:	mov	esi, 1
0x420d:	shl	rsi, cl
0x4210:	mov	rcx, rsi
0x4213:	movabs	rsi, 0x20000002b
0x421d:	test	rcx, rsi
0x4220:	je	0x41f0


0x41f0:	add	rdx, 1
0x41f4:	cmp	r8, rdx
0x41f7:	je	0x4039


0x3909:	test	r10b, r10b
0x390c:	jne	0x3a53


0x38f5:	mov	edx, ebx
0x38f7:	shr	dl, 5
0x38fa:	movzx	edx, dl
0x38fd:	mov	edx, dword ptr [rsi + rdx*4]
0x3900:	bt	edx, ebx
0x3903:	jb	0x3a53


0x415d:	cmp	r13, r15
0x4160:	jbe	0x4166


0x41b0:	lea	rax, [r15 + 1]
0x41b4:	cmp	r13, rax
0x41b7:	jbe	0x41bf


0x41ab:	mov	byte ptr [r14 + r15], 0x27
0x41b0:	lea	rax, [r15 + 1]
0x41b4:	cmp	r13, rax
0x41b7:	jbe	0x41bf


0x3945:	mov	byte ptr [r14 + r15], bl
0x3949:	movzx	edi, byte ptr [rsp + 0xe]
0x394e:	add	r15, 1
0x3952:	mov	eax, 0
0x3957:	test	r12b, r12b
0x395a:	cmove	edi, eax
0x395d:	mov	byte ptr [rsp + 0xe], dil
0x3962:	jmp	0x3798


0x3949:	movzx	edi, byte ptr [rsp + 0xe]
0x394e:	add	r15, 1
0x3952:	mov	eax, 0
0x3957:	test	r12b, r12b
0x395a:	cmove	edi, eax
0x395d:	mov	byte ptr [rsp + 0xe], dil
0x3962:	jmp	0x3798


0x392a:	lea	rax, [r15 + 1]
0x392e:	cmp	r13, rax
0x3931:	jbe	0x3939


0x3925:	mov	byte ptr [r14 + r15], 0x27
0x392a:	lea	rax, [r15 + 1]
0x392e:	cmp	r13, rax
0x3931:	jbe	0x3939


0x412b:	lea	rax, [r15 + 2]
0x412f:	cmp	r13, rax
0x4132:	jbe	0x4144


0x411e:	mov	eax, ebx
0x4120:	shr	al, 6
0x4123:	add	eax, 0x30
0x4126:	mov	byte ptr [r14 + r15 + 1], al
0x412b:	lea	rax, [r15 + 2]
0x412f:	cmp	r13, rax
0x4132:	jbe	0x4144


0x40f5:	lea	rsi, [r15 + 2]
0x40f9:	cmp	r13, rsi
0x40fc:	jbe	0x4104


0x40ef:	mov	byte ptr [r14 + r15 + 1], 0x24
0x40f5:	lea	rsi, [r15 + 2]
0x40f9:	cmp	r13, rsi
0x40fc:	jbe	0x4104


0x4222:	mov	r14, qword ptr [rsp + 0x40]
0x4227:	mov	r13, qword ptr [rsp + 0x70]
0x422c:	mov	rbp, qword ptr [rsp + 0x30]
0x4231:	mov	dword ptr [rsp + 8], 2
0x4239:	cmp	byte ptr [rsp + 0xd], 0
0x423e:	je	0x4250


0x3912:	xor	eax, 1
0x3915:	add	rbp, 1
0x3919:	and	eax, r8d
0x391c:	test	al, al
0x391e:	je	0x3940


0x3a53:	cmp	dword ptr [rsp + 8], 2
0x3a58:	sete	dl
0x3a5b:	cmp	byte ptr [rsp + 0xf], 0
0x3a60:	mov	eax, edx
0x3a62:	jne	0x42b8


0x4166:	movzx	ebx, byte ptr [rdi + rbp]
0x416a:	add	r15, 1
0x416e:	test	dl, dl
0x4170:	jne	0x40c0


0x4162:	mov	byte ptr [r14 + r15], bl
0x4166:	movzx	ebx, byte ptr [rdi + rbp]
0x416a:	add	r15, 1
0x416e:	test	dl, dl
0x4170:	jne	0x40c0


0x41bf:	add	r15, 2
0x41c3:	xor	r10d, r10d
0x41c6:	xor	r8d, r8d
0x41c9:	jmp	0x415d


0x41b9:	mov	byte ptr [r14 + r15 + 1], 0x27
0x41bf:	add	r15, 2
0x41c3:	xor	r10d, r10d
0x41c6:	xor	r8d, r8d
0x41c9:	jmp	0x415d


0x3798:	cmp	r11, rbp
0x379b:	setne	r12b
0x379f:	cmp	r11, -1
0x37a3:	jne	0x37b2


0x3939:	add	r15, 2
0x393d:	xor	r8d, r8d
0x3940:	cmp	r15, r13
0x3943:	jae	0x3949


0x3933:	mov	byte ptr [r14 + r15 + 1], 0x27
0x3939:	add	r15, 2
0x393d:	xor	r8d, r8d
0x3940:	cmp	r15, r13
0x3943:	jae	0x3949


0x4144:	and	ebx, 7
0x4147:	add	rbp, 1
0x414b:	add	r15, 3
0x414f:	add	ebx, 0x30
0x4152:	cmp	rbp, rcx
0x4155:	jae	0x3940


0x4134:	mov	eax, ebx
0x4136:	shr	al, 3
0x4139:	and	eax, 7
0x413c:	add	eax, 0x30
0x413f:	mov	byte ptr [r14 + r15 + 2], al
0x4144:	and	ebx, 7
0x4147:	add	rbp, 1
0x414b:	add	r15, 3
0x414f:	add	ebx, 0x30
0x4152:	cmp	rbp, rcx
0x4155:	jae	0x3940


0x4104:	add	r15, 3
0x4108:	mov	r8d, eax
0x410b:	cmp	r13, r15
0x410e:	jbe	0x4115


0x40fe:	mov	byte ptr [r14 + r15 + 2], 0x27
0x4104:	add	r15, 3
0x4108:	mov	r8d, eax
0x410b:	cmp	r13, r15
0x410e:	jbe	0x4115


0x3a68:	mov	eax, r8d
0x3a6b:	xor	eax, 1
0x3a6e:	and	al, dl
0x3a70:	je	0x3aa1


0x42b8:	mov	rbp, r11
0x42bb:	jmp	0x4239


0x415b:	mov	esi, edx
0x415d:	cmp	r13, r15
0x4160:	jbe	0x4166


0x3aa1:	cmp	r13, r15
0x3aa4:	jbe	0x3aab


0x3a72:	cmp	r13, r15
0x3a75:	jbe	0x3a7c


0x3aab:	add	r15, 1
0x3aaf:	add	rbp, 1
0x3ab3:	jmp	0x3940


0x3aa6:	mov	byte ptr [r14 + r15], 0x5c
0x3aab:	add	r15, 1
0x3aaf:	add	rbp, 1
0x3ab3:	jmp	0x3940


0x3a7c:	lea	rdx, [r15 + 1]
0x3a80:	cmp	r13, rdx
0x3a83:	jbe	0x3a8b


0x3a77:	mov	byte ptr [r14 + r15], 0x27
0x3a7c:	lea	rdx, [r15 + 1]
0x3a80:	cmp	r13, rdx
0x3a83:	jbe	0x3a8b


0x3a8b:	lea	rdx, [r15 + 2]
0x3a8f:	cmp	r13, rdx
0x3a92:	jbe	0x3a9a


0x3a85:	mov	byte ptr [r14 + r15 + 1], 0x24
0x3a8b:	lea	rdx, [r15 + 2]
0x3a8f:	cmp	r13, rdx
0x3a92:	jbe	0x3a9a


0x3a9a:	add	r15, 3
0x3a9e:	mov	r8d, eax
0x3aa1:	cmp	r13, r15
0x3aa4:	jbe	0x3aab


0x3a94:	mov	byte ptr [r14 + r15 + 2], 0x27
0x3a9a:	add	r15, 3
0x3a9e:	mov	r8d, eax
0x3aa1:	cmp	r13, r15
0x3aa4:	jbe	0x3aab


0x4045:	mov	rdi, qword ptr [rsp + 0x28]
0x404a:	test	eax, eax
0x404c:	mov	eax, 0
0x4051:	cmove	r12d, eax
0x4055:	add	rbx, r15
0x4058:	call	0x1a60


0x405d:	test	eax, eax
0x405f:	je	0x3fe3


0x3fe3:	mov	rax, qword ptr [rsp + 0x10]
0x3fe8:	lea	r14, [rbp + rbx]
0x3fed:	mov	rdx, qword ptr [rsp + 0x30]
0x3ff2:	mov	rcx, qword ptr [rsp + 0x28]
0x3ff7:	mov	rdi, qword ptr [rsp + 0x38]
0x3ffc:	lea	r13, [rax + r14]
0x4000:	sub	rdx, r14
0x4003:	mov	rsi, r13
0x4006:	call	0x8020


0x380c:	movzx	r8d, byte ptr [rsp + 0x38]
0x3812:	movzx	r10d, byte ptr [rsp + 0x30]
0x3818:	mov	r11, rax
0x381b:	mov	r9, qword ptr [rsp + 0x28]
0x3820:	cmp	rbx, r11
0x3823:	mov	byte ptr [rsp + 0x28], r10b
0x3828:	ja	0x3de0


0x3f90:	movzx	r8d, byte ptr [rsp + 0x40]
0x3f96:	movzx	r10d, byte ptr [rsp + 0x38]
0x3f9c:	mov	r11, rax
0x3f9f:	mov	r9, qword ptr [rsp + 0x30]
0x3fa4:	lea	rax, [rsp + 0x9c]
0x3fac:	xor	ecx, ecx
0x3fae:	mov	byte ptr [rsp + 0x7e], bl
0x3fb2:	mov	byte ptr [rsp + 0x7d], r8b
0x3fb7:	mov	rbx, rcx
0x3fba:	mov	qword ptr [rsp + 0x88], r9
0x3fc2:	mov	qword ptr [rsp + 0x38], rax
0x3fc7:	mov	byte ptr [rsp + 0x7f], r10b
0x3fcc:	mov	qword ptr [rsp + 0x80], r15
0x3fd4:	mov	qword ptr [rsp + 0x40], r14
0x3fd9:	mov	qword ptr [rsp + 0x70], r13
0x3fde:	mov	qword ptr [rsp + 0x30], r11
0x3fe3:	mov	rax, qword ptr [rsp + 0x10]
0x3fe8:	lea	r14, [rbp + rbx]
0x3fed:	mov	rdx, qword ptr [rsp + 0x30]
0x3ff2:	mov	rcx, qword ptr [rsp + 0x28]
0x3ff7:	mov	rdi, qword ptr [rsp + 0x38]
0x3ffc:	lea	r13, [rax + r14]
0x4000:	sub	rdx, r14
0x4003:	mov	rsi, r13
0x4006:	call	0x8020


0x3bc8:	mov	rcx, qword ptr [rax]
0x3bcb:	movzx	edx, bl
0x3bce:	movzx	r10d, byte ptr [rsp + 0x28]
0x3bd4:	movzx	r8d, byte ptr [rsp + 0x30]
0x3bda:	mov	r11, qword ptr [rsp + 0x38]
0x3bdf:	mov	edi, 1
0x3be4:	movzx	eax, word ptr [rcx + rdx*2]
0x3be8:	and	ax, 0x4000
0x3bec:	setne	r12b
0x3bf0:	sete	al
0x3bf3:	and	al, byte ptr [rsp + 0xd]
0x3bf7:	test	al, al
0x3bf9:	jne	0x4591


0x38a0:	xor	r10d, r10d
0x38a3:	cmp	r11, 1
0x38a7:	setne	al
0x38aa:	cmp	r11, -1
0x38ae:	jne	0x38bc


0x38b0:	mov	rax, qword ptr [rsp + 0x10]
0x38b5:	cmp	byte ptr [rax + 1], 0
0x38b9:	setne	al
0x38bc:	cmp	dword ptr [rsp + 8], 2
0x38c1:	sete	dl
0x38c4:	test	al, al
0x38c6:	je	0x3b18


0x38bc:	cmp	dword ptr [rsp + 8], 2
0x38c1:	sete	dl
0x38c4:	test	al, al
0x38c6:	je	0x3b18


0x3b18:	test	rbp, rbp
0x3b1b:	jne	0x38cc


0x38cc:	xor	r12d, r12d
0x38cf:	xor	eax, eax
0x38d1:	nop	dword ptr [rax]
0x38d8:	cmp	byte ptr [rsp + 0xd], 1
0x38dd:	jne	0x39f2


0x3b21:	movzx	eax, byte ptr [rsp + 0xf]
0x3b26:	and	al, dl
0x3b28:	je	0x38d8


0x3b2e:	mov	rbp, r11
0x3b31:	mov	dword ptr [rsp + 8], 2
0x3b39:	jmp	0x4239


0x3f38:	cmp	byte ptr [rsp + 0xf], 0
0x3f3d:	jne	0x4760


0x3980:	cmp	eax, 5
0x3983:	je	0x3ef8


0x3f43:	xor	r12d, r12d
0x3f46:	xor	eax, eax
0x3f48:	mov	ebx, 0x3f
0x3f4d:	jmp	0x3909


0x4760:	mov	rbp, r11
0x4763:	movzx	eax, byte ptr [rsp + 0xf]
0x4768:	jmp	0x4239


0x3ef8:	test	byte ptr [rsp + 0x78], 4
0x3efd:	je	0x3f20


0x3989:	cmp	eax, 2
0x398c:	mov	ebx, 0x3f
0x3991:	sete	dl
0x3994:	xor	r12d, r12d
0x3997:	xor	eax, eax
0x3999:	jmp	0x38d8


0x3f20:	xor	edx, edx
0x3f22:	xor	r12d, r12d
0x3f25:	xor	eax, eax
0x3f27:	mov	ebx, 0x3f
0x3f2c:	jmp	0x38d8


0x3eff:	lea	rcx, [rbp + 2]
0x3f03:	cmp	rcx, r11
0x3f06:	jae	0x3f20


0x3f08:	mov	rax, qword ptr [rsp + 0x10]
0x3f0d:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x3f12:	je	0x46a2


0x46a2:	movzx	ebx, byte ptr [rax + rcx]
0x46a6:	cmp	bl, 0x3e
0x46a9:	ja	0x3f20


0x46af:	movabs	rax, 0x7000a38200000000
0x46b9:	bt	rax, rbx
0x46bd:	jae	0x3f20


0x46c3:	cmp	byte ptr [rsp + 0xf], 0
0x46c8:	jne	0x48b2


0x46ce:	cmp	r13, r15
0x46d1:	jbe	0x46d8


0x48b2:	mov	rbp, r11
0x48b5:	jmp	0x4250


0x46d8:	lea	rax, [r15 + 1]
0x46dc:	cmp	r13, rax
0x46df:	jbe	0x46e7


0x46d3:	mov	byte ptr [r14 + r15], 0x3f
0x46d8:	lea	rax, [r15 + 1]
0x46dc:	cmp	r13, rax
0x46df:	jbe	0x46e7


0x46e7:	lea	rax, [r15 + 2]
0x46eb:	cmp	r13, rax
0x46ee:	jbe	0x46f6


0x46e1:	mov	byte ptr [r14 + r15 + 1], 0x22
0x46e7:	lea	rax, [r15 + 2]
0x46eb:	cmp	r13, rax
0x46ee:	jbe	0x46f6


0x46f6:	lea	rax, [r15 + 3]
0x46fa:	cmp	r13, rax
0x46fd:	jbe	0x4705


0x46f0:	mov	byte ptr [r14 + r15 + 2], 0x22
0x46f6:	lea	rax, [r15 + 3]
0x46fa:	cmp	r13, rax
0x46fd:	jbe	0x4705


0x4705:	add	r15, 4
0x4709:	xor	edx, edx
0x470b:	xor	r12d, r12d
0x470e:	xor	eax, eax
0x4710:	mov	rbp, rcx
0x4713:	jmp	0x38d8


0x46ff:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x4705:	add	r15, 4
0x4709:	xor	edx, edx
0x470b:	xor	r12d, r12d
0x470e:	xor	eax, eax
0x4710:	mov	rbp, rcx
0x4713:	jmp	0x38d8


0x3eb0:	cmp	byte ptr [rsp + 0xf], 0
0x3eb5:	jne	0x4760


0x39ae:	mov	byte ptr [rsp + 0x7c], r12b
0x39b3:	xor	edx, edx
0x39b5:	xor	eax, eax
0x39b7:	mov	ebx, 0x27
0x39bc:	jmp	0x38d8


0x3ebb:	test	r13, r13
0x3ebe:	je	0x42c0


0x42c0:	cmp	r13, r15
0x42c3:	jbe	0x42ca


0x3ec4:	xor	edx, edx
0x3ec6:	cmp	qword ptr [rsp + 0x50], 0
0x3ecc:	jne	0x42c0


0x42ca:	lea	rax, [r15 + 1]
0x42ce:	cmp	r13, rax
0x42d1:	jbe	0x42d9


0x42c5:	mov	byte ptr [r14 + r15], 0x27
0x42ca:	lea	rax, [r15 + 1]
0x42ce:	cmp	r13, rax
0x42d1:	jbe	0x42d9


0x3ed2:	mov	qword ptr [rsp + 0x50], r13
0x3ed7:	add	r15, 3
0x3edb:	xor	eax, eax
0x3edd:	mov	byte ptr [rsp + 0x7c], r12b
0x3ee2:	xor	r8d, r8d
0x3ee5:	mov	r13, rdx
0x3ee8:	mov	ebx, 0x27
0x3eed:	jmp	0x3909


0x42d9:	lea	rax, [r15 + 2]
0x42dd:	cmp	r13, rax
0x42e0:	jbe	0x48d2


0x42d3:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x42d9:	lea	rax, [r15 + 2]
0x42dd:	cmp	r13, rax
0x42e0:	jbe	0x48d2


0x48d2:	mov	rdx, r13
0x48d5:	mov	r13, qword ptr [rsp + 0x50]
0x48da:	jmp	0x3ed2


0x42e6:	mov	rdx, r13
0x42e9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x42ef:	mov	r13, qword ptr [rsp + 0x50]
0x42f4:	jmp	0x3ed2


0x39e4:	cmp	byte ptr [rsp + 0xd], 0
0x39e9:	jne	0x3a50


0x39eb:	mov	ebx, edx
0x39ed:	xor	r12d, r12d
0x39f0:	xor	eax, eax
0x39f2:	cmp	byte ptr [rsp + 0xf], 0
0x39f7:	jne	0x38eb


0x3a50:	xor	r12d, r12d
0x3a53:	cmp	dword ptr [rsp + 8], 2
0x3a58:	sete	dl
0x3a5b:	cmp	byte ptr [rsp + 0xf], 0
0x3a60:	mov	eax, edx
0x3a62:	jne	0x42b8


0x3df0:	cmp	byte ptr [rsp + 0xf], 0
0x3df5:	jne	0x4760


0x3a23:	cmp	byte ptr [rsp + 0xd], 0
0x3a28:	je	0x3c40


0x3dfb:	add	rbp, 1
0x3dff:	mov	eax, r8d
0x3e02:	xor	r12d, r12d
0x3e05:	mov	ebx, 0x5c
0x3e0a:	jmp	0x391c


0x3c40:	mov	edx, 0x5c
0x3c45:	mov	ebx, 0x5c
0x3c4a:	jmp	0x39e4


0x3a2e:	cmp	byte ptr [rsp + 0xf], 0
0x3a33:	je	0x3c40


0x3a39:	cmp	qword ptr [rsp + 0x18], 0
0x3a3f:	jne	0x3dfb


0x3a45:	mov	ebx, 0x5c
0x3a4a:	nop	word ptr [rax + rax]
0x3a50:	xor	r12d, r12d
0x3a53:	cmp	dword ptr [rsp + 8], 2
0x3a58:	sete	dl
0x3a5b:	cmp	byte ptr [rsp + 0xf], 0
0x3a60:	mov	eax, edx
0x3a62:	jne	0x42b8


0x3acb:	xor	edx, edx
0x3acd:	test	byte ptr [rsp + 0x78], 1
0x3ad2:	je	0x39eb


0x3c93:	cmp	dword ptr [rsp + 8], 2
0x3c98:	sete	dl
0x3c9b:	cmp	byte ptr [rsp + 0xf], 0
0x3ca0:	jne	0x483a


0x3ad8:	add	rbp, 1
0x3adc:	jmp	0x3798


0x3ca6:	mov	eax, r8d
0x3ca9:	mov	rcx, r15
0x3cac:	xor	eax, 1
0x3caf:	and	al, dl
0x3cb1:	je	0x3ce0


0x483a:	movzx	ebx, byte ptr [rsp + 0xf]
0x483f:	mov	rbp, r11
0x4842:	mov	eax, edx
0x4844:	mov	byte ptr [rsp + 0xd], bl
0x4848:	jmp	0x4239


0x3ce0:	cmp	r13, rcx
0x3ce3:	jbe	0x3cea


0x3cb3:	cmp	r13, r15
0x3cb6:	jbe	0x3cbd


0x3cea:	cmp	dword ptr [rsp + 8], 2
0x3cef:	lea	r15, [rcx + 1]
0x3cf3:	je	0x42f9


0x3ce5:	mov	byte ptr [r14 + rcx], 0x5c
0x3cea:	cmp	dword ptr [rsp + 8], 2
0x3cef:	lea	r15, [rcx + 1]
0x3cf3:	je	0x42f9


0x3cbd:	lea	rcx, [r15 + 1]
0x3cc1:	cmp	r13, rcx
0x3cc4:	jbe	0x3ccc


0x3cb8:	mov	byte ptr [r14 + r15], 0x27
0x3cbd:	lea	rcx, [r15 + 1]
0x3cc1:	cmp	r13, rcx
0x3cc4:	jbe	0x3ccc


0x42f9:	mov	eax, r12d
0x42fc:	mov	ebx, 0x30
0x4301:	xor	r12d, r12d
0x4304:	jmp	0x3909


0x3cf9:	lea	rax, [rbp + 1]
0x3cfd:	cmp	rax, r11
0x3d00:	jae	0x3d1b


0x3ccc:	lea	rcx, [r15 + 2]
0x3cd0:	cmp	r13, rcx
0x3cd3:	ja	0x4309


0x3cc6:	mov	byte ptr [r14 + r15 + 1], 0x24
0x3ccc:	lea	rcx, [r15 + 2]
0x3cd0:	cmp	r13, rcx
0x3cd3:	ja	0x4309


0x3d02:	mov	rax, qword ptr [rsp + 0x10]
0x3d07:	movzx	eax, byte ptr [rax + rbp + 1]
0x3d0c:	mov	byte ptr [rsp + 0x28], al
0x3d10:	sub	eax, 0x30
0x3d13:	cmp	al, 9
0x3d15:	jbe	0x4549


0x3d1b:	mov	eax, r12d
0x3d1e:	mov	ebx, 0x30
0x3d23:	xor	r12d, r12d
0x3d26:	jmp	0x38d8


0x3cd9:	lea	rcx, [r15 + 3]
0x3cdd:	mov	r8d, eax
0x3ce0:	cmp	r13, rcx
0x3ce3:	jbe	0x3cea


0x4309:	mov	byte ptr [r14 + r15 + 2], 0x27
0x430f:	jmp	0x3cd9


0x4549:	cmp	r13, r15
0x454c:	jbe	0x4553


0x4553:	lea	rax, [rcx + 2]
0x4557:	cmp	r13, rax
0x455a:	jbe	0x4562


0x454e:	mov	byte ptr [r14 + r15], 0x30
0x4553:	lea	rax, [rcx + 2]
0x4557:	cmp	r13, rax
0x455a:	jbe	0x4562


0x4562:	mov	eax, r12d
0x4565:	lea	r15, [rcx + 3]
0x4569:	xor	r12d, r12d
0x456c:	mov	ebx, 0x30
0x4571:	jmp	0x38d8


0x455c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x4562:	mov	eax, r12d
0x4565:	lea	r15, [rcx + 3]
0x4569:	xor	r12d, r12d
0x456c:	mov	ebx, 0x30
0x4571:	jmp	0x38d8


0x39d2:	cmp	dword ptr [rsp + 8], 2
0x39d7:	sete	al
0x39da:	and	al, byte ptr [rsp + 0xf]
0x39de:	jne	0x3b2e


0x3d90:	mov	edx, 0xd
0x3d95:	xor	r10d, r10d
0x3d98:	mov	ebx, 0x72
0x3d9d:	jmp	0x39d2


0x4314:	test	ebx, ebx
0x4316:	jne	0x3743


0x431c:	mov	byte ptr [rsp + 0xd], 1
0x4321:	test	r13, r13
0x4324:	jne	0x48ba


0x432a:	lea	rax, [rip + 0x636c]
0x4331:	mov	qword ptr [rsp + 0x50], 0
0x433a:	mov	byte ptr [rsp + 0xe], 1
0x433f:	mov	byte ptr [rsp + 0x7c], 0
0x4344:	xor	r12d, r12d
0x4347:	mov	byte ptr [rsp + 0xf], 0
0x434c:	mov	qword ptr [rsp + 0x18], 1
0x4355:	mov	qword ptr [rsp + 0x48], rax
0x435a:	mov	r15d, 1
0x4360:	mov	dword ptr [rsp + 8], 2
0x4368:	jmp	0x3783


0x48ba:	mov	byte ptr [rsp + 0xe], 1
0x48bf:	xor	eax, eax
0x48c1:	xor	r12d, r12d
0x48c4:	mov	qword ptr [rsp + 0x50], 0
0x48cd:	jmp	0x3e74


0x3e74:	lea	rbx, [rip + 0x6822]
0x3e7b:	mov	byte ptr [r14], 0x27
0x3e7f:	mov	dword ptr [rsp + 8], 2
0x3e87:	mov	r15d, 1
0x3e8d:	mov	qword ptr [rsp + 0x18], 1
0x3e96:	mov	byte ptr [rsp + 0xf], 0
0x3e9b:	mov	qword ptr [rsp + 0x48], rbx
0x3ea0:	mov	byte ptr [rsp + 0x7c], al
0x3ea4:	jmp	0x3783


0x4378:	test	r13, r13
0x437b:	je	0x45a6


0x476d:	lea	rax, [rip + 0x5f27]
0x4774:	mov	byte ptr [rsp + 0xe], 1
0x4779:	mov	byte ptr [rsp + 0x7c], 0
0x477e:	xor	r12d, r12d
0x4781:	mov	qword ptr [rsp + 0x50], 0
0x478a:	mov	byte ptr [rsp + 0xf], 1
0x478f:	mov	byte ptr [rsp + 0xd], 1
0x4794:	mov	qword ptr [rsp + 0x18], 1
0x479d:	xor	r15d, r15d
0x47a0:	mov	qword ptr [rsp + 0x48], rax
0x47a5:	jmp	0x3783


0x45a6:	mov	qword ptr [rsp + 0x50], 0
0x45af:	mov	byte ptr [rsp + 0xe], 1
0x45b4:	xor	r12d, r12d
0x45b7:	mov	byte ptr [rsp + 0x7c], 0
0x45bc:	jmp	0x439b


0x4381:	mov	byte ptr [r14], 0x22
0x4385:	mov	byte ptr [rsp + 0xe], 1
0x438a:	xor	r12d, r12d
0x438d:	mov	byte ptr [rsp + 0x7c], 0
0x4392:	mov	qword ptr [rsp + 0x50], 0
0x439b:	lea	rax, [rip + 0x62f9]
0x43a2:	mov	byte ptr [rsp + 0xf], 0
0x43a7:	mov	byte ptr [rsp + 0xd], 1
0x43ac:	mov	qword ptr [rsp + 0x18], 1
0x43b5:	mov	r15d, 1
0x43bb:	mov	qword ptr [rsp + 0x48], rax
0x43c0:	jmp	0x3783


0x439b:	lea	rax, [rip + 0x62f9]
0x43a2:	mov	byte ptr [rsp + 0xf], 0
0x43a7:	mov	byte ptr [rsp + 0xd], 1
0x43ac:	mov	qword ptr [rsp + 0x18], 1
0x43b5:	mov	r15d, 1
0x43bb:	mov	qword ptr [rsp + 0x48], rax
0x43c0:	jmp	0x3783


0x43c5:	lea	rax, [rip + 0x62cf]
0x43cc:	mov	byte ptr [rsp + 0xe], 1
0x43d1:	mov	byte ptr [rsp + 0x7c], 0
0x43d6:	xor	r12d, r12d
0x43d9:	mov	qword ptr [rsp + 0x50], 0
0x43e2:	mov	byte ptr [rsp + 0xf], 1
0x43e7:	mov	byte ptr [rsp + 0xd], 1
0x43ec:	mov	qword ptr [rsp + 0x18], 1
0x43f5:	xor	r15d, r15d
0x43f8:	mov	qword ptr [rsp + 0x48], rax
0x43fd:	mov	dword ptr [rsp + 8], 5
0x4405:	jmp	0x3783


0x440a:	mov	byte ptr [rsp + 0xe], 1
0x440f:	mov	byte ptr [rsp + 0x7c], 0
0x4414:	xor	r12d, r12d
0x4417:	mov	qword ptr [rsp + 0x50], 0
0x4420:	mov	byte ptr [rsp + 0xf], 0
0x4425:	xor	r15d, r15d
0x4428:	mov	byte ptr [rsp + 0xd], 1
0x442d:	mov	qword ptr [rsp + 0x18], 0
0x4436:	mov	qword ptr [rsp + 0x48], 0
0x443f:	jmp	0x3783


0x4444:	cmp	dword ptr [rsp + 8], 0xa
0x4449:	je	0x44a1


0x44a1:	xor	r15d, r15d
0x44a4:	test	ebx, ebx
0x44a6:	je	0x466d


0x444b:	lea	rsi, [rip + 0x624d]
0x4452:	xor	edi, edi
0x4454:	mov	edx, 5
0x4459:	call	0x1790


0x466d:	mov	rdx, qword ptr [rsp + 0x68]
0x4672:	movzx	eax, byte ptr [rdx]
0x4675:	test	al, al
0x4677:	je	0x44ac


0x44ac:	test	ebx, ebx
0x44ae:	mov	rbx, qword ptr [rsp + 0x60]
0x44b3:	setne	byte ptr [rsp + 0xf]
0x44b8:	xor	r12d, r12d
0x44bb:	mov	rdi, rbx
0x44be:	call	0x17b0


0x4689:	add	r15, 1
0x468d:	movzx	eax, byte ptr [rdx + r15]
0x4692:	test	al, al
0x4694:	jne	0x4680


0x4685:	mov	byte ptr [r14 + r15], al
0x4689:	add	r15, 1
0x468d:	movzx	eax, byte ptr [rdx + r15]
0x4692:	test	al, al
0x4694:	jne	0x4680


0x4696:	jmp	0x44ac


0x4680:	cmp	r13, r15
0x4683:	jbe	0x4689


0x44c3:	mov	qword ptr [rsp + 0x48], rbx
0x44c8:	mov	qword ptr [rsp + 0x18], rax
0x44cd:	mov	byte ptr [rsp + 0xe], 1
0x44d2:	mov	byte ptr [rsp + 0x7c], 0
0x44d7:	mov	qword ptr [rsp + 0x50], 0
0x44e0:	mov	byte ptr [rsp + 0xd], 1
0x44e5:	jmp	0x3783


0x445e:	mov	rcx, rax
0x4461:	mov	qword ptr [rsp + 0x68], rax
0x4466:	lea	rax, [rip + 0x6232]
0x446d:	cmp	rcx, rax
0x4470:	je	0x480e


0x480e:	mov	esi, dword ptr [rsp + 8]
0x4812:	mov	rdi, rcx
0x4815:	call	0x35c0


0x4476:	lea	rsi, [rip + 0x6220]
0x447d:	xor	edi, edi
0x447f:	mov	edx, 5
0x4484:	call	0x1790


0x4489:	mov	rcx, rax
0x448c:	mov	qword ptr [rsp + 0x60], rax
0x4491:	lea	rax, [rip + 0x6205]
0x4498:	cmp	rcx, rax
0x449b:	je	0x4824


0x4824:	mov	esi, dword ptr [rsp + 8]
0x4828:	mov	rdi, rcx
0x482b:	call	0x35c0


0x4830:	mov	qword ptr [rsp + 0x60], rax
0x4835:	jmp	0x44a1


0x481a:	mov	qword ptr [rsp + 0x68], rax
0x481f:	jmp	0x4476


0x44ea:	mov	byte ptr [rsp + 0xe], 1
0x44ef:	mov	byte ptr [rsp + 0x7c], 0
0x44f4:	xor	r12d, r12d
0x44f7:	mov	qword ptr [rsp + 0x50], 0
0x4500:	mov	byte ptr [rsp + 0xf], 0
0x4505:	xor	r15d, r15d
0x4508:	mov	byte ptr [rsp + 0xd], 0
0x450d:	mov	qword ptr [rsp + 0x18], 0
0x4516:	mov	qword ptr [rsp + 0x48], 0
0x451f:	jmp	0x3783


0x4524:	mov	byte ptr [rsp + 0xe], 1
0x4529:	mov	byte ptr [rsp + 0x7c], 0
0x452e:	xor	r12d, r12d
0x4531:	mov	qword ptr [rsp + 0x50], 0
0x453a:	mov	byte ptr [rsp + 0xf], 1
0x453f:	mov	byte ptr [rsp + 0xd], 1
0x4544:	jmp	0x3763


0x3763:	lea	rax, [rip + 0x6f33]
0x376a:	mov	qword ptr [rsp + 0x18], 1
0x3773:	xor	r15d, r15d
0x3776:	mov	dword ptr [rsp + 8], 2
0x377e:	mov	qword ptr [rsp + 0x48], rax
0x3783:	xor	r11d, r11d
0x3786:	mov	rax, rbp
0x3789:	mov	r8d, r12d
0x378c:	mov	rbp, r11
0x378f:	mov	r11, rax
0x3792:	nop	word ptr [rax + rax]
0x3798:	cmp	r11, rbp
0x379b:	setne	r12b
0x379f:	cmp	r11, -1
0x37a3:	jne	0x37b2


0x4718:	test	ebx, ebx
0x471a:	je	0x48a8


0x48a8:	mov	byte ptr [rsp + 0xd], 0
0x48ad:	jmp	0x4321


0x4720:	lea	rax, [rip + 0x5f76]
0x4727:	mov	byte ptr [rsp + 0xe], 1
0x472c:	mov	byte ptr [rsp + 0x7c], 0
0x4731:	xor	r12d, r12d
0x4734:	mov	qword ptr [rsp + 0x50], 0
0x473d:	mov	byte ptr [rsp + 0xf], 1
0x4742:	mov	byte ptr [rsp + 0xd], 0
0x4747:	mov	qword ptr [rsp + 0x18], 1
0x4750:	xor	r15d, r15d
0x4753:	mov	qword ptr [rsp + 0x48], rax
0x4758:	jmp	0x3783


0x4321:	test	r13, r13
0x4324:	jne	0x48ba


0x48e4:	nop	
0x48e6:	nop	word ptr cs:[rax + rax]


0x4a9b:	nop	dword ptr [rax + rax]


0x4ad6:	nop	word ptr cs:[rax + rax]


0x4af1:	nop	dword ptr [rax + rax]
0x4af6:	nop	word ptr cs:[rax + rax]


0x4b11:	nop	dword ptr [rax + rax]
0x4b16:	nop	word ptr cs:[rax + rax]


0x4b55:	nop	
0x4b56:	nop	word ptr cs:[rax + rax]


0x4b75:	nop	
0x4b76:	nop	word ptr cs:[rax + rax]


0x4c24:	nop	
0x4c26:	nop	word ptr cs:[rax + rax]


0x4d13:	nop	dword ptr [rax]
0x4d16:	nop	word ptr cs:[rax + rax]


0x4d2a:	nop	word ptr [rax + rax]


0x4dc3:	nop	dword ptr [rax]
0x4dc6:	nop	word ptr cs:[rax + rax]


0x4de3:	nop	dword ptr [rax]
0x4de6:	nop	word ptr cs:[rax + rax]


0x4dfc:	nop	dword ptr [rax]


0x4e18:	nop	dword ptr [rax + rax]


0x4e34:	nop	
0x4e36:	nop	word ptr cs:[rax + rax]


0x4ece:	nop	


0x4f5a:	nop	word ptr [rax + rax]


0x4f6c:	nop	dword ptr [rax]


0x4f7f:	nop	


0x5018:	nop	dword ptr [rax + rax]


0x5041:	nop	dword ptr [rax + rax]
0x5046:	nop	word ptr cs:[rax + rax]


0x505a:	nop	word ptr [rax + rax]


0x50ee:	nop	


0x5181:	nop	dword ptr [rax + rax]
0x5186:	nop	word ptr cs:[rax + rax]


0x519c:	nop	dword ptr [rax]


0x51b7:	nop	word ptr [rax + rax]


0x51d3:	nop	dword ptr [rax]
0x51d6:	nop	word ptr cs:[rax + rax]


0x51ec:	nop	dword ptr [rax]


0x5204:	nop	
0x5206:	nop	word ptr cs:[rax + rax]


0x5223:	nop	dword ptr [rax]
0x5226:	nop	word ptr cs:[rax + rax]


0x5248:	nop	dword ptr [rax + rax]


0x52c1:	nop	word ptr cs:[rax + rax]
0x52cb:	nop	dword ptr [rax + rax]


0x56e7:	nop	word ptr [rax + rax]


0x5788:	nop	dword ptr [rax + rax]


0x5865:	nop	
0x5866:	nop	word ptr cs:[rax + rax]


0x590a:	nop	word ptr [rax + rax]


0x5934:	nop	
0x5936:	nop	word ptr cs:[rax + rax]


0x5942:	nop	dword ptr [rax]
0x5946:	nop	word ptr cs:[rax + rax]


0x5986:	nop	word ptr cs:[rax + rax]


0x59b4:	nop	
0x59b6:	nop	word ptr cs:[rax + rax]


0x5a42:	nop	dword ptr [rax]
0x5a46:	nop	word ptr cs:[rax + rax]


0x5a9a:	nop	word ptr [rax + rax]


0x5ab7:	nop	word ptr [rax + rax]


0x5aee:	nop	


0x5b18:	nop	dword ptr [rax + rax]


0x5b33:	nop	word ptr cs:[rax + rax]
0x5b3d:	nop	dword ptr [rax]


0x5b75:	nop	word ptr cs:[rax + rax]
0x5b7f:	nop	


0x5bcf:	nop	


0x5bf9:	nop	dword ptr [rax]


0x5c1a:	nop	word ptr [rax + rax]


0x5c2d:	nop	dword ptr [rax]


0x5c3c:	nop	dword ptr [rax]


0x5c4a:	nop	word ptr [rax + rax]


0x5c76:	nop	word ptr cs:[rax + rax]


0x5e45:	nop	
0x5e46:	nop	word ptr cs:[rax + rax]


0x5f55:	nop	
0x5f56:	nop	word ptr cs:[rax + rax]


0x5fea:	nop	word ptr [rax + rax]


0x6032:	nop	dword ptr [rax]
0x6036:	nop	word ptr cs:[rax + rax]


0x6079:	nop	dword ptr [rax]


0x61ac:	nop	dword ptr [rax]


0x621a:	nop	word ptr [rax + rax]


0x6286:	nop	word ptr cs:[rax + rax]


0x62ec:	nop	dword ptr [rax]


0x635b:	nop	dword ptr [rax + rax]


0x63c3:	nop	dword ptr [rax]
0x63c6:	nop	word ptr cs:[rax + rax]


0x640a:	nop	word ptr [rax + rax]


0x668a:	nop	word ptr [rax + rax]


0x673f:	nop	


0x67f8:	nop	dword ptr [rax + rax]


0x71d1:	nop	dword ptr [rax + rax]
0x71d6:	nop	word ptr cs:[rax + rax]


0x758a:	nop	word ptr [rax + rax]


0x7712:	nop	dword ptr [rax]
0x7716:	nop	word ptr cs:[rax + rax]


0x7e98:	nop	dword ptr [rax + rax]


0x7ec9:	nop	dword ptr [rax]


0x801e:	nop	


0x80a3:	nop	word ptr cs:[rax + rax]
0x80ad:	nop	dword ptr [rax]


0x812d:	nop	dword ptr [rax]


0x81ca:	nop	word ptr [rax + rax]


0x823e:	nop	


0x8333:	nop	dword ptr [rax]
0x8336:	nop	word ptr cs:[rax + rax]


0x8357:	nop	word ptr [rax + rax]


0x8382:	nop	dword ptr [rax]
0x8386:	nop	word ptr cs:[rax + rax]


0x84ae:	nop	


0x8527:	nop	word ptr [rax + rax]


0x8675:	nop	
0x8676:	nop	word ptr cs:[rax + rax]


0x8685:	nop	
0x8686:	nop	word ptr cs:[rax + rax]


0x8695:	nop	
0x8696:	nop	word ptr cs:[rax + rax]


0x86e9:	nop	dword ptr [rax]


0x8748:	nop	dword ptr [rax + rax]


0x8897:	nop	word ptr [rax + rax]


0x88fb:	nop	dword ptr [rax + rax]


0x8941:	nop	dword ptr [rax + rax]
0x8946:	nop	word ptr cs:[rax + rax]


0x89c2:	nop	dword ptr [rax]
0x89c6:	nop	word ptr cs:[rax + rax]


0x8a35:	nop	
0x8a36:	nop	word ptr cs:[rax + rax]


0x8aaa:	nop	word ptr [rax + rax]


0x8ae1:	nop	dword ptr [rax + rax]
0x8ae6:	nop	word ptr cs:[rax + rax]


0x8cc4:	nop	
0x8cc6:	nop	word ptr cs:[rax + rax]


0x8e36:	nop	word ptr cs:[rax + rax]


0x907e:	nop	


0x9304:	nop	
0x9306:	nop	word ptr cs:[rax + rax]


0x9369:	nop	dword ptr [rax]


0x9573:	nop	word ptr cs:[rax + rax]
0x957d:	nop	dword ptr [rax]


0x959b:	nop	dword ptr [rax + rax]


0x95a5:	nop	
0x95a6:	nop	word ptr cs:[rax + rax]


0x95e5:	nop	
0x95e6:	nop	word ptr cs:[rax + rax]


0x962e:	nop	


0x966c:	nop	dword ptr [rax]


0x96de:	nop	


0x979f:	nop	


0x981b:	nop	dword ptr [rax + rax]


0x9a9e:	nop	


0x9b37:	nop	word ptr [rax + rax]


0x9b4e:	nop	


0x9bb5:	nop	
0x9bb6:	nop	word ptr cs:[rax + rax]


0x9bc2:	nop	word ptr cs:[rax + rax]
0x9bcc:	nop	dword ptr [rax]


0x31b0:	mov	ebx, 2
0x31b5:	nop	dword ptr [rax]
0x31b8:	add	rcx, 1
0x31bc:	movzx	edx, byte ptr [rcx]
0x31bf:	lea	r8d, [rdx - 0x58]
0x31c3:	cmp	r8b, 0x20
0x31c7:	jbe	0x3198


0x31e8:	or	r10d, 0x49
0x31ec:	jmp	0x31b8


0x31f0:	or	r10b, 0x92
0x31f4:	jmp	0x31b8


0x3200:	or	r10d, 0x200
0x3207:	jmp	0x31b8


0x3210:	or	r10d, 0xc00
0x3217:	jmp	0x31b8


0x3220:	or	r10d, 0x124
0x3227:	jmp	0x31b8


0x3970:	xor	r10d, r10d
0x3973:	mov	eax, dword ptr [rsp + 8]
0x3977:	cmp	eax, 2
0x397a:	je	0x3f38


0x39a0:	xor	r10d, r10d
0x39a3:	cmp	dword ptr [rsp + 8], 2
0x39a8:	je	0x3eb0


0x39c8:	mov	edx, 9
0x39cd:	mov	ebx, 0x74
0x39d2:	cmp	dword ptr [rsp + 8], 2
0x39d7:	sete	al
0x39da:	and	al, byte ptr [rsp + 0xf]
0x39de:	jne	0x3b2e


0x3a08:	mov	edx, 8
0x3a0d:	mov	ebx, 0x62
0x3a12:	jmp	0x39e4


0x3a18:	cmp	dword ptr [rsp + 8], 2
0x3a1d:	je	0x3df0


0x3ac0:	cmp	byte ptr [rsp + 0xd], 0
0x3ac5:	jne	0x3c93


0x3ae8:	cmp	dword ptr [rsp + 8], 2
0x3aed:	sete	dl
0x3af0:	xor	eax, eax
0x3af2:	jmp	0x38d8


0x3b00:	mov	edx, 7
0x3b05:	mov	ebx, 0x61
0x3b0a:	jmp	0x39e4


0x3b10:	cmp	dword ptr [rsp + 8], 2
0x3b15:	sete	dl
0x3b18:	test	rbp, rbp
0x3b1b:	jne	0x38cc


0x3b40:	cmp	dword ptr [rsp + 8], 2
0x3b45:	sete	dl
0x3b48:	xor	r12d, r12d
0x3b4b:	jmp	0x3b21


0x3b50:	cmp	dword ptr [rsp + 8], 2
0x3b55:	mov	ebx, 0x20
0x3b5a:	sete	dl
0x3b5d:	jmp	0x3b21


0x3b60:	mov	edx, 0xd
0x3b65:	mov	ebx, 0x72
0x3b6a:	jmp	0x39d2


0x3b70:	mov	edx, 0xc
0x3b75:	mov	ebx, 0x66
0x3b7a:	jmp	0x39e4


0x3b80:	mov	edx, 0xb
0x3b85:	mov	ebx, 0x76
0x3b8a:	jmp	0x39e4


0x3b90:	mov	edx, 0xa
0x3b95:	mov	ebx, 0x6e
0x3b9a:	jmp	0x39d2


0x3c30:	xor	r10d, r10d
0x3c33:	cmp	byte ptr [rsp + 0xd], 0
0x3c38:	jne	0x3a2e


0x3c50:	mov	edx, 0xc
0x3c55:	xor	r10d, r10d
0x3c58:	mov	ebx, 0x66
0x3c5d:	jmp	0x39e4


0x3c68:	mov	edx, 0xa
0x3c6d:	xor	r10d, r10d
0x3c70:	mov	ebx, 0x6e
0x3c75:	jmp	0x39d2


0x3c80:	mov	ebx, 0x61
0x3c85:	jmp	0x3a50


0x3c90:	xor	r10d, r10d
0x3c93:	cmp	dword ptr [rsp + 8], 2
0x3c98:	sete	dl
0x3c9b:	cmp	byte ptr [rsp + 0xf], 0
0x3ca0:	jne	0x483a


0x3d30:	cmp	dword ptr [rsp + 8], 2
0x3d35:	mov	r12d, r10d
0x3d38:	sete	dl
0x3d3b:	xor	r10d, r10d
0x3d3e:	xor	eax, eax
0x3d40:	jmp	0x38d8


0x3d48:	cmp	dword ptr [rsp + 8], 2
0x3d4d:	sete	dl
0x3d50:	xor	r10d, r10d
0x3d53:	jmp	0x3b18


0x3d60:	cmp	dword ptr [rsp + 8], 2
0x3d65:	sete	dl
0x3d68:	xor	r10d, r10d
0x3d6b:	xor	r12d, r12d
0x3d6e:	jmp	0x3b21


0x3d78:	cmp	dword ptr [rsp + 8], 2
0x3d7d:	mov	r12d, r10d
0x3d80:	mov	ebx, 0x20
0x3d85:	sete	dl
0x3d88:	xor	r10d, r10d
0x3d8b:	jmp	0x3b21


0x3da8:	mov	ebx, 0x76
0x3dad:	jmp	0x3a50


0x3db8:	mov	edx, 9
0x3dbd:	xor	r10d, r10d
0x3dc0:	mov	ebx, 0x74
0x3dc5:	jmp	0x39d2


0x3dd0:	mov	ebx, 0x62
0x3dd5:	jmp	0x3a50


0x4370:	test	ebx, ebx
0x4372:	jne	0x476d


0x1bb6:	nop	word ptr cs:[rax + rax]


0x1c2c:	nop	dword ptr [rax]


0x1c75:	nop	dword ptr [rax]


0x1cdc:	nop	dword ptr [rax]


0x1cef:	nop	


0x1cff:	nop	


0x1d0b:	nop	dword ptr [rax + rax]


0x1e17:	nop	word ptr [rax + rax]


0x1ee6:	nop	word ptr cs:[rax + rax]


0x2836:	nop	word ptr cs:[rax + rax]


0x2887:	nop	word ptr [rax + rax]


0x28d1:	nop	dword ptr [rax]


0x2f1b:	nop	dword ptr [rax + rax]


0x2f2b:	nop	dword ptr [rax + rax]


0x2f43:	nop	dword ptr [rax + rax]


0x2f94:	nop	dword ptr [rax]


0x3034:	nop	dword ptr [rax]


0x303f:	nop	


0x3068:	nop	dword ptr [rax + rax]


0x308f:	nop	


0x317a:	nop	word ptr [rax + rax]


0x3192:	nop	word ptr [rax + rax]


0x31a7:	nop	word ptr [rax + rax]


0x31e2:	nop	word ptr [rax + rax]


0x31ee:	nop	


0x31f6:	nop	word ptr cs:[rax + rax]


0x3209:	nop	dword ptr [rax]


0x3219:	nop	dword ptr [rax]


0x3229:	nop	dword ptr [rax]


0x323b:	nop	dword ptr [rax + rax]


0x324f:	nop	


0x325f:	nop	


0x3269:	nop	dword ptr [rax]


0x3279:	nop	dword ptr [rax]


0x3289:	nop	dword ptr [rax]


0x32ee:	nop	


0x3396:	nop	word ptr cs:[rax + rax]


0x34d9:	nop	dword ptr [rax]


0x34f7:	nop	word ptr [rax + rax]


0x350c:	nop	dword ptr [rax]


0x35fc:	nop	dword ptr [rax]


0x364d:	nop	dword ptr [rax]


0x3878:	nop	dword ptr [rax + rax]


0x3967:	nop	word ptr [rax + rax]


0x399e:	nop	


0x39c1:	nop	dword ptr [rax]


0x3a02:	nop	word ptr [rax + rax]


0x3a14:	nop	dword ptr [rax]


0x3ab8:	nop	dword ptr [rax + rax]


0x3ae1:	nop	dword ptr [rax]


0x3af7:	nop	word ptr [rax + rax]


0x3b0f:	nop	


0x3b3e:	nop	


0x3b4d:	nop	dword ptr [rax]


0x3b5f:	nop	


0x3b6f:	nop	


0x3b7f:	nop	


0x3b8f:	nop	


0x3b9f:	nop	


0x3c0c:	nop	dword ptr [rax]


0x3c2c:	nop	dword ptr [rax]


0x3c3e:	nop	


0x3c4f:	nop	


0x3c62:	nop	word ptr [rax + rax]


0x3c7a:	nop	word ptr [rax + rax]


0x3c8a:	nop	word ptr [rax + rax]


0x3d2b:	nop	dword ptr [rax + rax]


0x3d45:	nop	dword ptr [rax]


0x3d58:	nop	dword ptr [rax + rax]


0x3d73:	nop	dword ptr [rax + rax]


0x3da2:	nop	word ptr [rax + rax]


0x3db2:	nop	word ptr [rax + rax]


0x3dca:	nop	word ptr [rax + rax]


0x3dda:	nop	word ptr [rax + rax]


0x3de8:	nop	dword ptr [rax + rax]


0x3e0f:	nop	


0x3ea9:	nop	dword ptr [rax]


0x3ef2:	nop	word ptr [rax + rax]


0x3f18:	nop	dword ptr [rax + rax]


0x3f31:	nop	dword ptr [rax]


0x3f52:	nop	word ptr [rax + rax]


0x40b8:	nop	dword ptr [rax + rax]


0x41cb:	nop	dword ptr [rax + rax]


0x41ee:	nop	


0x42b5:	nop	dword ptr [rax]


0x436d:	nop	dword ptr [rax]


0x4576:	nop	word ptr cs:[rax + rax]


0x4609:	nop	dword ptr [rax]


0x467d:	nop	dword ptr [rax]


0x475d:	nop	dword ptr [rax]


0x4a6b:	nop	dword ptr [rax + rax]


0x52b5:	nop	dword ptr [rax]


0x5376:	nop	word ptr cs:[rax + rax]


0x5405:	nop	dword ptr [rax]


0x5426:	nop	word ptr cs:[rax + rax]


0x5485:	nop	dword ptr [rax]


0x54c1:	nop	dword ptr [rax]


0x5508:	nop	dword ptr [rax + rax]


0x5557:	nop	word ptr [rax + rax]


0x55b4:	nop	dword ptr [rax]


0x55e2:	nop	word ptr [rax + rax]


0x5696:	nop	word ptr cs:[rax + rax]


0x56f9:	nop	dword ptr [rax]


0x5972:	nop	word ptr [rax + rax]


0x59f9:	nop	dword ptr [rax]


0x5a24:	nop	dword ptr [rax]


0x5a7d:	nop	dword ptr [rax]


0x5b99:	nop	dword ptr [rax]


0x5baf:	nop	


0x5be9:	nop	dword ptr [rax]


0x5c0e:	nop	


0x5c6d:	nop	dword ptr [rax]


0x5cfd:	nop	dword ptr [rax]


0x5d5c:	nop	dword ptr [rax]


0x5dbb:	nop	dword ptr [rax + rax]


0x5dcc:	nop	dword ptr [rax]


0x5dee:	nop	


0x5df9:	nop	dword ptr [rax]


0x5e12:	nop	word ptr [rax + rax]


0x5e22:	nop	word ptr [rax + rax]


0x5ee9:	nop	dword ptr [rax]


0x5f1d:	nop	dword ptr [rax]


0x5f47:	nop	word ptr [rax + rax]


0x6029:	nop	dword ptr [rax]


0x6046:	nop	word ptr cs:[rax + rax]


0x606a:	nop	word ptr [rax + rax]


0x60d7:	nop	word ptr [rax + rax]


0x6138:	nop	dword ptr [rax + rax]


0x61e7:	nop	word ptr [rax + rax]


0x620c:	nop	dword ptr [rax]


0x624f:	nop	


0x626e:	nop	


0x62ca:	nop	word ptr [rax + rax]


0x62e1:	nop	dword ptr [rax]


0x6321:	nop	dword ptr [rax]


0x6343:	nop	dword ptr [rax + rax]


0x6398:	nop	dword ptr [rax + rax]


0x63f8:	nop	dword ptr [rax + rax]


0x64ba:	nop	word ptr [rax + rax]


0x64fd:	nop	dword ptr [rax]


0x6598:	nop	dword ptr [rax + rax]


0x65bf:	nop	


0x65cf:	nop	


0x6615:	nop	dword ptr [rax]


0x6638:	nop	dword ptr [rax + rax]


0x670b:	nop	dword ptr [rax + rax]


0x6732:	nop	word ptr [rax + rax]


0x679a:	nop	word ptr [rax + rax]


0x67ce:	nop	


0x68f2:	nop	word ptr [rax + rax]


0x6aab:	nop	dword ptr [rax + rax]


0x6b03:	nop	dword ptr [rax + rax]


0x6b25:	nop	dword ptr [rax]


0x6b57:	nop	word ptr [rax + rax]


0x6b9c:	nop	dword ptr [rax]


0x6bc3:	nop	dword ptr [rax + rax]


0x6bd2:	nop	word ptr [rax + rax]


0x6bed:	nop	dword ptr [rax]


0x6c0b:	nop	dword ptr [rax + rax]


0x6c44:	nop	dword ptr [rax]


0x6c5f:	nop	


0x6c6a:	nop	word ptr [rax + rax]


0x6d82:	nop	word ptr [rax + rax]


0x6d9a:	nop	word ptr [rax + rax]


0x6ded:	nop	dword ptr [rax]


0x6e39:	nop	dword ptr [rax]


0x6e4a:	nop	word ptr [rax + rax]


0x6ea1:	nop	dword ptr [rax]


0x6f78:	nop	dword ptr [rax + rax]


0x6fcd:	nop	dword ptr [rax]


0x6ff5:	nop	dword ptr [rax]


0x7025:	nop	dword ptr [rax]


0x703f:	nop	


0x704e:	nop	


0x715a:	nop	word ptr [rax + rax]


0x7325:	nop	dword ptr [rax]


0x73ce:	nop	


0x73ea:	nop	word ptr [rax + rax]


0x74c9:	nop	dword ptr [rax]


0x750e:	nop	


0x752b:	nop	dword ptr [rax + rax]


0x7558:	nop	dword ptr [rax + rax]


0x7574:	nop	dword ptr [rax]


0x75ab:	nop	dword ptr [rax + rax]


0x765d:	nop	dword ptr [rax]


0x7667:	nop	word ptr [rax + rax]


0x7696:	nop	word ptr cs:[rax + rax]


0x76b9:	nop	dword ptr [rax]


0x76f2:	nop	word ptr [rax + rax]


0x7773:	nop	dword ptr [rax + rax]


0x784c:	nop	dword ptr [rax]


0x78c6:	nop	word ptr cs:[rax + rax]


0x78f5:	nop	dword ptr [rax]


0x7914:	nop	dword ptr [rax]


0x798a:	nop	word ptr [rax + rax]


0x799f:	nop	


0x79ba:	nop	word ptr [rax + rax]


0x7ac2:	nop	word ptr [rax + rax]


0x7b14:	nop	dword ptr [rax]


0x7b64:	nop	dword ptr [rax]


0x7baf:	nop	


0x7bc1:	nop	dword ptr [rax]


0x7be8:	nop	dword ptr [rax + rax]


0x7ca4:	nop	dword ptr [rax]


0x7d19:	nop	dword ptr [rax]


0x7d56:	nop	word ptr cs:[rax + rax]


0x7eac:	nop	dword ptr [rax]


0x7f6d:	nop	dword ptr [rax]


0x7f7d:	nop	dword ptr [rax]


0x7f8b:	nop	dword ptr [rax + rax]


0x7fd2:	nop	word ptr [rax + rax]


0x7fe5:	nop	dword ptr [rax]


0x80e4:	nop	dword ptr [rax]


0x8101:	nop	dword ptr [rax]


0x8112:	nop	word ptr [rax + rax]


0x816c:	nop	dword ptr [rax]


0x8185:	nop	dword ptr [rax]


0x8197:	nop	word ptr [rax + rax]


0x8214:	nop	dword ptr [rax]


0x827a:	nop	word ptr [rax + rax]


0x82c1:	nop	dword ptr [rax]


0x82fe:	nop	


0x83eb:	nop	dword ptr [rax + rax]


0x844a:	nop	word ptr [rax + rax]


0x8489:	nop	dword ptr [rax]


0x8499:	nop	dword ptr [rax]


0x851e:	nop	


0x8571:	nop	dword ptr [rax]


0x863c:	nop	dword ptr [rax]


0x864a:	nop	word ptr [rax + rax]


0x86ae:	nop	


0x86c4:	nop	dword ptr [rax]


0x8717:	nop	word ptr [rax + rax]


0x8777:	nop	word ptr [rax + rax]


0x8794:	nop	dword ptr [rax]


0x884b:	nop	dword ptr [rax + rax]


0x88bc:	nop	dword ptr [rax]


0x88e7:	nop	word ptr [rax + rax]


0x891b:	nop	dword ptr [rax + rax]


0x8973:	nop	dword ptr [rax + rax]


0x8994:	nop	dword ptr [rax]


0x89b2:	nop	word ptr [rax + rax]


0x89fa:	nop	word ptr [rax + rax]


0x8a2b:	nop	dword ptr [rax + rax]


0x8a6f:	nop	


0x8ab9:	nop	dword ptr [rax]


0x8bff:	nop	


0x8c1c:	nop	dword ptr [rax]


0x8c7f:	nop	


0x8ca6:	nop	word ptr cs:[rax + rax]


0x8cf5:	nop	dword ptr [rax]


0x8d81:	nop	dword ptr [rax]


0x8d96:	nop	word ptr cs:[rax + rax]


0x8dc8:	nop	dword ptr [rax + rax]


0x8dd9:	nop	dword ptr [rax]


0x8e06:	nop	word ptr cs:[rax + rax]


0x8fbf:	nop	


0x8fe1:	nop	dword ptr [rax]


0x9006:	nop	word ptr cs:[rax + rax]


0x901a:	nop	word ptr [rax + rax]


0x9027:	nop	word ptr [rax + rax]


0x90eb:	nop	dword ptr [rax + rax]


0x916e:	nop	


0x91b8:	nop	dword ptr [rax + rax]


0x9262:	nop	word ptr [rax + rax]


0x929d:	nop	dword ptr [rax]


0x92be:	nop	


0x92de:	nop	


0x9356:	nop	word ptr cs:[rax + rax]


0x93cf:	nop	


0x9495:	nop	dword ptr [rax]


0x94b6:	nop	word ptr cs:[rax + rax]


0x94de:	nop	


0x94fe:	nop	


0x951f:	nop	


0x952a:	nop	word ptr [rax + rax]


0x954e:	nop	


0x9616:	nop	word ptr cs:[rax + rax]


0x9656:	nop	word ptr cs:[rax + rax]


0x96b3:	nop	dword ptr [rax + rax]


0x9721:	nop	dword ptr [rax]


0x974c:	nop	dword ptr [rax]


0x97e5:	nop	dword ptr [rax]


0x98bb:	nop	dword ptr [rax + rax]


0x98e6:	nop	word ptr cs:[rax + rax]


0x991f:	nop	


0x9969:	nop	dword ptr [rax]


0x998b:	nop	dword ptr [rax + rax]


0x9a31:	nop	dword ptr [rax]


0x9ac3:	nop	dword ptr [rax + rax]


0x9aef:	nop	


