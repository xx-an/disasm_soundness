0xb5f0:	sub	rsp, 8
0xb5f4:	add	rsp, 8
0xb5f8:	ret	


0xb5e0:	mov	rdx, qword ptr [rip + 0x204a21]
0xb5e7:	xor	esi, esi
0xb5e9:	jmp	0x1eb0


0xb5d0:	ret	


0xb560:	push	r15
0xb562:	push	r14
0xb564:	mov	r15, rdx
0xb567:	push	r13
0xb569:	push	r12
0xb56b:	lea	r12, [rip + 0x20439e]
0xb572:	push	rbp
0xb573:	lea	rbp, [rip + 0x20439e]
0xb57a:	push	rbx
0xb57b:	mov	r13d, edi
0xb57e:	mov	r14, rsi
0xb581:	sub	rbp, r12
0xb584:	sub	rsp, 8
0xb588:	sar	rbp, 3
0xb58c:	call	0x1aa8


0xb500:	mov	rax, qword ptr [rdi + 8]
0xb504:	cmp	qword ptr [rdi + 0x10], rax
0xb508:	je	0xb510


0xb4c0:	test	rdi, rdi
0xb4c3:	push	rbx
0xb4c4:	mov	rbx, rdi
0xb4c7:	je	0xb4da


0xb440:	push	r12
0xb442:	push	rbp
0xb443:	push	rbx
0xb444:	mov	rbx, rdi
0xb447:	call	0x1d90


0xb430:	mov	edx, 3
0xb435:	xor	esi, esi
0xb437:	xor	eax, eax
0xb439:	jmp	0xae00


0xb3f0:	sub	rsp, 8
0xb3f4:	mov	edi, 0xe
0xb3f9:	call	0x1df0


0xb390:	sub	rsp, 8
0xb394:	xor	esi, esi
0xb396:	call	0x1e40


0xb2d0:	ucomisd	xmm0, qword ptr [rip + 0x2180]
0xb2d8:	jbe	0xb370


0xb250:	push	r12
0xb252:	push	rbp
0xb253:	mov	rbp, rdi
0xb256:	push	rbx
0xb257:	call	0x1b40


0xb1e0:	push	rbp
0xb1e1:	push	rbx
0xb1e2:	mov	rbp, rdi
0xb1e5:	mov	rbx, rsi
0xb1e8:	sub	rsp, 8
0xb1ec:	mov	rax, qword ptr [rip + 0x20508d]
0xb1f3:	test	rax, rax
0xb1f6:	je	0xb230


0xb110:	push	r12
0xb112:	push	rbp
0xb113:	push	rbx
0xb114:	sub	rsp, 0x20
0xb118:	mov	rax, qword ptr fs:[0x28]
0xb121:	mov	qword ptr [rsp + 0x18], rax
0xb126:	xor	eax, eax
0xb128:	mov	rax, qword ptr [rdi + 8]
0xb12c:	cmp	rax, 0x3b9ac9ff
0xb132:	ja	0xb1c0


0xb080:	push	r13
0xb082:	push	r12
0xb084:	mov	r13, rsi
0xb087:	push	rbp
0xb088:	push	rbx
0xb089:	mov	rbx, rdi
0xb08c:	mov	r12, rdx
0xb08f:	sub	rsp, 0x18
0xb093:	mov	rax, qword ptr fs:[0x28]
0xb09c:	mov	qword ptr [rsp + 8], rax
0xb0a1:	xor	eax, eax
0xb0a3:	lea	rax, [rsp + 4]
0xb0a8:	test	rdi, rdi
0xb0ab:	cmove	rbx, rax
0xb0af:	mov	rdi, rbx
0xb0b2:	call	0x1c30


0xae00:	push	r12
0xae02:	push	rbp
0xae03:	mov	ebp, edi
0xae05:	push	rbx
0xae06:	sub	rsp, 0x50
0xae0a:	mov	rax, qword ptr fs:[0x28]
0xae13:	mov	qword ptr [rsp + 0x18], rax
0xae18:	xor	eax, eax
0xae1a:	lea	rax, [rsp + 0x70]
0xae1f:	test	esi, esi
0xae21:	mov	qword ptr [rsp + 0x30], rdx
0xae26:	mov	qword ptr [rsp + 0x38], rcx
0xae2b:	mov	qword ptr [rsp + 0x40], r8
0xae30:	mov	qword ptr [rsp + 8], rax
0xae35:	lea	rax, [rsp + 0x20]
0xae3a:	mov	qword ptr [rsp + 0x48], r9
0xae3f:	mov	dword ptr [rsp], 0x10
0xae46:	mov	qword ptr [rsp + 0x10], rax
0xae4b:	je	0xb052


0xa9e0:	push	r15
0xa9e2:	push	r14
0xa9e4:	push	r13
0xa9e6:	push	r12
0xa9e8:	push	rbp
0xa9e9:	push	rbx
0xa9ea:	sub	rsp, 0x28
0xa9ee:	mov	rax, qword ptr fs:[0x28]
0xa9f7:	mov	qword ptr [rsp + 0x18], rax
0xa9fc:	xor	eax, eax
0xa9fe:	cmp	edx, 0x24
0xaa01:	ja	0xad65


0xa910:	push	r14
0xa912:	push	r13
0xa914:	mov	r14, rcx
0xa917:	push	r12
0xa919:	push	rbp
0xa91a:	mov	rbp, rdi
0xa91d:	push	rbx
0xa91e:	mov	r13, rdx
0xa921:	mov	rbx, rsi
0xa924:	sub	rsp, 0x10
0xa928:	mov	rax, qword ptr fs:[0x28]
0xa931:	mov	qword ptr [rsp + 8], rax
0xa936:	xor	eax, eax
0xa938:	call	0x1b10


0xa890:	push	rbp
0xa891:	push	rbx
0xa892:	sub	rsp, 0x28
0xa896:	mov	rax, qword ptr fs:[0x28]
0xa89f:	mov	qword ptr [rsp + 0x18], rax
0xa8a4:	xor	eax, eax
0xa8a6:	mov	rbp, rsp
0xa8a9:	call	0xb2d0


0xa860:	sub	rsp, 0x10
0xa864:	push	r9
0xa866:	mov	r9, r8
0xa869:	mov	r8, rcx
0xa86c:	mov	rcx, rdx
0xa86f:	mov	rdx, rsi
0xa872:	mov	esi, 0xa
0xa877:	call	0xa760


0xa760:	push	r15
0xa762:	push	r14
0xa764:	mov	r15, rcx
0xa767:	push	r13
0xa769:	push	r12
0xa76b:	mov	r14, rdx
0xa76e:	push	rbp
0xa76f:	push	rbx
0xa770:	mov	edx, esi
0xa772:	xor	esi, esi
0xa774:	mov	r12, rdi
0xa777:	mov	r13, r9
0xa77a:	sub	rsp, 0x18
0xa77e:	mov	rcx, rsp
0xa781:	mov	ebx, dword ptr [rsp + 0x50]
0xa785:	mov	rax, qword ptr fs:[0x28]
0xa78e:	mov	qword ptr [rsp + 8], rax
0xa793:	xor	eax, eax
0xa795:	call	0xa9e0


0xa720:	lea	rsi, [rip + 0x2be8]
0xa727:	sub	rsp, 8
0xa72b:	mov	edx, 5
0xa730:	xor	edi, edi
0xa732:	call	0x1bd0


0xa700:	push	rbx
0xa701:	mov	rbx, rdi
0xa704:	call	0x1bf0


0xa6d0:	push	rbp
0xa6d1:	push	rbx
0xa6d2:	mov	rbp, rdi
0xa6d5:	mov	rdi, rsi
0xa6d8:	mov	rbx, rsi
0xa6db:	sub	rsp, 8
0xa6df:	call	0xa4d0


0xa6a0:	mov	rax, rdi
0xa6a3:	sub	rsp, 8
0xa6a7:	mul	rsi
0xa6aa:	seto	dl
0xa6ad:	test	rax, rax
0xa6b0:	js	0xa6c9


0xa680:	push	rbx
0xa681:	mov	rbx, rdi
0xa684:	call	0xa4d0


0xa630:	test	rdi, rdi
0xa633:	mov	rax, qword ptr [rsi]
0xa636:	je	0xa660


0xa5a0:	test	rdi, rdi
0xa5a3:	mov	r9, rdx
0xa5a6:	mov	rcx, qword ptr [rsi]
0xa5a9:	je	0xa5e0


0xa570:	mov	rax, rsi
0xa573:	mul	rdx
0xa576:	mov	rsi, rax
0xa579:	seto	al
0xa57c:	test	rsi, rsi
0xa57f:	js	0xa58b


0xa530:	test	rsi, rsi
0xa533:	push	rbx
0xa534:	mov	rbx, rsi
0xa537:	jne	0xa53e


0xa520:	jmp	0xa4d0


0xa4f0:	mov	rax, rdi
0xa4f3:	mul	rsi
0xa4f6:	mov	rdi, rax
0xa4f9:	seto	al
0xa4fc:	test	rdi, rdi
0xa4ff:	js	0xa50b


0xa4d0:	push	rbx
0xa4d1:	mov	rbx, rdi
0xa4d4:	call	0x1dc0


0xa450:	push	rbx
0xa451:	lea	rsi, [rip + 0x2baa]
0xa458:	mov	edx, 5
0xa45d:	xor	edi, edi
0xa45f:	call	0x1bd0


0xa370:	push	rbp
0xa371:	push	rbx
0xa372:	mov	r10d, 0x20
0xa378:	xor	r11d, r11d
0xa37b:	sub	rsp, 0xb8
0xa382:	mov	rax, qword ptr fs:[0x28]
0xa38b:	mov	qword ptr [rsp + 0x78], rax
0xa390:	xor	eax, eax
0xa392:	lea	rax, [rsp + 0xd0]
0xa39a:	mov	qword ptr [rsp + 0xa0], r8
0xa3a2:	lea	rbx, [rsp + 0xd0]
0xa3aa:	lea	r8, [rsp + 0x20]
0xa3af:	mov	qword ptr [rsp + 0xa8], r9
0xa3b7:	mov	dword ptr [rsp + 8], 0x20
0xa3bf:	mov	qword ptr [rsp + 0x10], rax
0xa3c4:	lea	rax, [rsp + 0x80]
0xa3cc:	xor	r9d, r9d
0xa3cf:	mov	qword ptr [rsp + 0x18], rax
0xa3d4:	mov	rbp, rax
0xa3d7:	nop	word ptr [rax + rax]
0xa3e0:	cmp	r10d, 0x2f
0xa3e4:	ja	0xa43c


0xa2f0:	sub	rsp, 0x68
0xa2f4:	mov	r10, r8
0xa2f7:	xor	r9d, r9d
0xa2fa:	mov	rax, qword ptr fs:[0x28]
0xa303:	mov	qword ptr [rsp + 0x58], rax
0xa308:	xor	eax, eax
0xa30a:	mov	r8, rsp
0xa30d:	nop	dword ptr [rax]
0xa310:	mov	eax, dword ptr [r10]
0xa313:	cmp	eax, 0x2f
0xa316:	ja	0xa35a


0xa2d0:	xor	r9d, r9d
0xa2d3:	cmp	qword ptr [r8], 0
0xa2d7:	je	0xa2eb


0x9eb0:	push	r15
0x9eb2:	push	r14
0x9eb4:	push	r13
0x9eb6:	push	r12
0x9eb8:	mov	r12, r9
0x9ebb:	push	rbp
0x9ebc:	push	rbx
0x9ebd:	mov	rbp, rdi
0x9ec0:	mov	rbx, r8
0x9ec3:	sub	rsp, 0x28
0x9ec7:	test	rsi, rsi
0x9eca:	je	0x9fe8


0x9e70:	push	r13
0x9e72:	push	r12
0x9e74:	push	rbp
0x9e75:	push	rbx
0x9e76:	mov	ebx, edi
0x9e78:	sub	rsp, 8
0x9e7c:	cmp	edi, 2
0x9e7f:	ja	0x9ea2


0x9e10:	push	r13
0x9e12:	push	r12
0x9e14:	mov	r13d, edi
0x9e17:	push	rbp
0x9e18:	push	rbx
0x9e19:	mov	r12, rsi
0x9e1c:	mov	rbx, rdx
0x9e1f:	sub	rsp, 8
0x9e23:	nop	dword ptr [rax + rax]
0x9e28:	mov	rdx, rbx
0x9e2b:	mov	rsi, r12
0x9e2e:	mov	edi, r13d
0x9e31:	call	0x1d00


0x9df0:	lea	rcx, [rip + 0x206269]
0x9df7:	mov	rsi, rdi
0x9dfa:	mov	rdx, -1
0x9e01:	xor	edi, edi
0x9e03:	jmp	0x94b0


0x9dd0:	lea	rcx, [rip + 0x206289]
0x9dd7:	mov	rdx, -1
0x9dde:	jmp	0x94b0


0x9db0:	lea	rcx, [rip + 0x2062a9]
0x9db7:	mov	rdx, rsi
0x9dba:	mov	rsi, rdi
0x9dbd:	xor	edi, edi
0x9dbf:	jmp	0x94b0


0x9da0:	lea	rcx, [rip + 0x2062b9]
0x9da7:	jmp	0x94b0


0x9d80:	mov	r8, rcx
0x9d83:	mov	rcx, rdx
0x9d86:	mov	rdx, rsi
0x9d89:	mov	rsi, rdi
0x9d8c:	xor	edi, edi
0x9d8e:	jmp	0x9cb0


0x9d60:	mov	rcx, rdx
0x9d63:	mov	r8, -1
0x9d6a:	mov	rdx, rsi
0x9d6d:	mov	rsi, rdi
0x9d70:	xor	edi, edi
0x9d72:	jmp	0x9cb0


0x9d50:	mov	r8, -1
0x9d57:	jmp	0x9cb0


0x9cb0:	sub	rsp, 0x48
0x9cb4:	mov	r9, rcx
0x9cb7:	mov	rcx, qword ptr [rip + 0x2065b2]
0x9cbe:	movdqa	xmm0, xmmword ptr [rip + 0x20657a]
0x9cc6:	mov	rax, qword ptr fs:[0x28]
0x9ccf:	mov	qword ptr [rsp + 0x38], rax
0x9cd4:	xor	eax, eax
0x9cd6:	movaps	xmmword ptr [rsp], xmm0
0x9cda:	test	rsi, rsi
0x9cdd:	mov	qword ptr [rsp + 0x30], rcx
0x9ce2:	mov	dword ptr [rsp], 0xa
0x9ce9:	movdqa	xmm0, xmmword ptr [rip + 0x20655f]
0x9cf1:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x9cf6:	movdqa	xmm0, xmmword ptr [rip + 0x206562]
0x9cfe:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x9d03:	je	0x9d37


0x9c20:	sub	rsp, 0x48
0x9c24:	mov	rax, rdx
0x9c27:	mov	rdx, qword ptr fs:[0x28]
0x9c30:	mov	qword ptr [rsp + 0x38], rdx
0x9c35:	xor	edx, edx
0x9c37:	cmp	esi, 0xa
0x9c3a:	je	0x9ca4


0x9c10:	mov	edx, 0x3a
0x9c15:	jmp	0x9b40


0x9bf0:	mov	edx, 0x3a
0x9bf5:	mov	rsi, -1
0x9bfc:	jmp	0x9b40


0x9be0:	movsx	edx, sil
0x9be4:	mov	rsi, -1
0x9beb:	jmp	0x9b40


0x9b40:	sub	rsp, 0x48
0x9b44:	mov	ecx, edx
0x9b46:	mov	rax, qword ptr fs:[0x28]
0x9b4f:	mov	qword ptr [rsp + 0x38], rax
0x9b54:	xor	eax, eax
0x9b56:	mov	rax, qword ptr [rip + 0x206713]
0x9b5d:	mov	r8, rsp
0x9b60:	and	ecx, 0x1f
0x9b63:	movdqa	xmm0, xmmword ptr [rip + 0x2066d5]
0x9b6b:	mov	qword ptr [rsp + 0x30], rax
0x9b70:	mov	eax, edx
0x9b72:	movaps	xmmword ptr [rsp], xmm0
0x9b76:	shr	al, 5
0x9b79:	movzx	eax, al
0x9b7c:	lea	r9, [r8 + rax*4 + 8]
0x9b81:	movdqa	xmm0, xmmword ptr [rip + 0x2066c7]
0x9b89:	movaps	xmmword ptr [rsp + 0x10], xmm0
0x9b8e:	movdqa	xmm0, xmmword ptr [rip + 0x2066ca]
0x9b96:	movaps	xmmword ptr [rsp + 0x20], xmm0
0x9b9b:	mov	edx, dword ptr [r9]
0x9b9e:	mov	eax, edx
0x9ba0:	shr	eax, cl
0x9ba2:	not	eax
0x9ba4:	and	eax, 1
0x9ba7:	shl	eax, cl
0x9ba9:	mov	rcx, r8
0x9bac:	xor	eax, edx
0x9bae:	mov	rdx, rsi
0x9bb1:	mov	rsi, rdi
0x9bb4:	mov	dword ptr [r9], eax
0x9bb7:	xor	edi, edi
0x9bb9:	call	0x94b0


0x9b30:	mov	rcx, rdx
0x9b33:	mov	rdx, rsi
0x9b36:	mov	esi, edi
0x9b38:	xor	edi, edi
0x9b3a:	jmp	0x9a90


0x9b20:	mov	rdx, rsi
0x9b23:	mov	esi, edi
0x9b25:	xor	edi, edi
0x9b27:	jmp	0x9a00


0x9a90:	sub	rsp, 0x48
0x9a94:	mov	rax, rdx
0x9a97:	mov	rdx, rcx
0x9a9a:	mov	rcx, qword ptr fs:[0x28]
0x9aa3:	mov	qword ptr [rsp + 0x38], rcx
0x9aa8:	xor	ecx, ecx
0x9aaa:	cmp	esi, 0xa
0x9aad:	je	0x9b10


0x9a00:	sub	rsp, 0x48
0x9a04:	mov	rax, rdx
0x9a07:	mov	rdx, qword ptr fs:[0x28]
0x9a10:	mov	qword ptr [rsp + 0x38], rdx
0x9a15:	xor	edx, edx
0x9a17:	cmp	esi, 0xa
0x9a1a:	je	0x9a84


0x99e0:	lea	rcx, [rip + 0x206859]
0x99e7:	mov	rdx, rsi
0x99ea:	mov	rsi, rdi
0x99ed:	xor	edi, edi
0x99ef:	jmp	0x94b0


0x99c0:	lea	rcx, [rip + 0x206879]
0x99c7:	mov	rsi, rdi
0x99ca:	mov	rdx, -1
0x99d1:	xor	edi, edi
0x99d3:	jmp	0x94b0


0x99b0:	lea	rcx, [rip + 0x206889]
0x99b7:	jmp	0x94b0


0x9990:	lea	rcx, [rip + 0x2068a9]
0x9997:	mov	rdx, -1
0x999e:	jmp	0x94b0


0x98f0:	mov	eax, dword ptr [rip + 0x2067a2]
0x98f6:	push	r12
0x98f8:	mov	r12, qword ptr [rip + 0x2067a1]
0x98ff:	push	rbp
0x9900:	push	rbx
0x9901:	cmp	eax, 1
0x9904:	jle	0x9931


0x98e0:	mov	rcx, rdx
0x98e3:	xor	edx, edx
0x98e5:	jmp	0x97f0


0x97f0:	push	r15
0x97f2:	push	r14
0x97f4:	lea	rax, [rip + 0x206a45]
0x97fb:	push	r13
0x97fd:	push	r12
0x97ff:	mov	r12, rdx
0x9802:	push	rbp
0x9803:	push	rbx
0x9804:	mov	rbx, rcx
0x9807:	mov	r14, rdi
0x980a:	mov	r15, rsi
0x980d:	sub	rsp, 0x38
0x9811:	test	rcx, rcx
0x9814:	cmove	rbx, rax
0x9818:	xor	ebp, ebp
0x981a:	call	0x1b10


0x9770:	push	r15
0x9772:	push	r14
0x9774:	lea	rax, [rip + 0x206ac5]
0x977b:	push	r13
0x977d:	push	r12
0x977f:	mov	r13, rdi
0x9782:	push	rbp
0x9783:	push	rbx
0x9784:	mov	rbx, r8
0x9787:	mov	r14, rsi
0x978a:	mov	r15, rdx
0x978d:	sub	rsp, 0x18
0x9791:	test	r8, r8
0x9794:	cmove	rbx, rax
0x9798:	mov	qword ptr [rsp + 8], rcx
0x979d:	call	0x1b10


0x9740:	lea	rax, [rip + 0x206af9]
0x9747:	test	rdi, rdi
0x974a:	cmove	rdi, rax
0x974e:	test	rsi, rsi
0x9751:	mov	dword ptr [rdi], 0xa
0x9757:	je	0x9767


0x9720:	lea	rax, [rip + 0x206b19]
0x9727:	test	rdi, rdi
0x972a:	cmove	rdi, rax
0x972e:	mov	eax, dword ptr [rdi + 4]
0x9731:	mov	dword ptr [rdi + 4], esi
0x9734:	ret	


0x96e0:	lea	rax, [rip + 0x206b59]
0x96e7:	test	rdi, rdi
0x96ea:	mov	ecx, esi
0x96ec:	cmove	rdi, rax
0x96f0:	mov	eax, esi
0x96f2:	and	ecx, 0x1f
0x96f5:	shr	al, 5
0x96f8:	movzx	eax, al
0x96fb:	lea	rdi, [rdi + rax*4 + 8]
0x9700:	mov	esi, dword ptr [rdi]
0x9702:	mov	eax, esi
0x9704:	shr	eax, cl
0x9706:	xor	edx, eax
0x9708:	and	eax, 1
0x970b:	and	edx, 1
0x970e:	shl	edx, cl
0x9710:	xor	edx, esi
0x9712:	mov	dword ptr [rdi], edx
0x9714:	ret	


0x96c0:	lea	rax, [rip + 0x206b79]
0x96c7:	test	rdi, rdi
0x96ca:	cmove	rdi, rax
0x96ce:	mov	dword ptr [rdi], esi
0x96d0:	ret	


0x96a0:	lea	rax, [rip + 0x206b99]
0x96a7:	test	rdi, rdi
0x96aa:	cmove	rdi, rax
0x96ae:	mov	eax, dword ptr [rdi]
0x96b0:	ret	


0x9660:	push	r12
0x9662:	push	rbp
0x9663:	push	rbx
0x9664:	mov	rbx, rdi
0x9667:	call	0x1b10


0x94b0:	push	r15
0x94b2:	push	r14
0x94b4:	movsxd	r15, edi
0x94b7:	push	r13
0x94b9:	push	r12
0x94bb:	mov	r14, rdx
0x94be:	push	rbp
0x94bf:	push	rbx
0x94c0:	mov	rbp, rcx
0x94c3:	sub	rsp, 0x28
0x94c7:	mov	qword ptr [rsp + 8], rsi
0x94cc:	call	0x1b10


0x8270:	push	r15
0x8272:	push	r14
0x8274:	mov	r15d, r8d
0x8277:	push	r13
0x8279:	push	r12
0x827b:	mov	r14, rdi
0x827e:	push	rbp
0x827f:	push	rbx
0x8280:	mov	ebx, r9d
0x8283:	mov	r13, rsi
0x8286:	mov	rbp, rcx
0x8289:	and	ebx, 2
0x828c:	sub	rsp, 0xb8
0x8293:	mov	rax, qword ptr [rsp + 0xf0]
0x829b:	mov	qword ptr [rsp + 0x10], rdx
0x82a0:	mov	dword ptr [rsp + 8], r8d
0x82a5:	mov	dword ptr [rsp + 0x78], r9d
0x82aa:	mov	qword ptr [rsp + 0x20], rax
0x82af:	mov	rax, qword ptr [rsp + 0xf8]
0x82b7:	mov	qword ptr [rsp + 0x68], rax
0x82bc:	mov	rax, qword ptr [rsp + 0x100]
0x82c4:	mov	qword ptr [rsp + 0x60], rax
0x82c9:	mov	rax, qword ptr fs:[0x28]
0x82d2:	mov	qword ptr [rsp + 0xa8], rax
0x82da:	xor	eax, eax
0x82dc:	call	0x1be0


0x8180:	push	rbp
0x8181:	push	rbx
0x8182:	mov	rbp, rdi
0x8185:	mov	ebx, esi
0x8187:	sub	rsp, 8
0x818b:	call	0xb3f0


0x80e0:	test	rdi, rdi
0x80e3:	push	rbx
0x80e4:	je	0x815d


0x8050:	push	rbx
0x8051:	lea	rdi, [rip + 0x4a28]
0x8058:	mov	ebx, 0x31069
0x805d:	sub	rsp, 0x10
0x8061:	mov	rax, qword ptr fs:[0x28]
0x806a:	mov	qword ptr [rsp + 8], rax
0x806f:	xor	eax, eax
0x8071:	call	0x1ad0


0x7fb0:	test	rdi, rdi
0x7fb3:	lea	rcx, [rsi + 0x14]
0x7fb7:	mov	byte ptr [rsi + 0x14], 0
0x7fbb:	movabs	r9, 0x6666666666666667
0x7fc5:	movabs	rsi, 0xcccccccccccccccd
0x7fcf:	mov	r8d, 0x30
0x7fd5:	js	0x8013


0x7da0:	push	r12
0x7da2:	push	rbp
0x7da3:	mov	ecx, 1
0x7da8:	push	rbx
0x7da9:	mov	rbx, rdi
0x7dac:	sub	rsp, 0x10
0x7db0:	mov	rdx, rsp
0x7db3:	mov	rax, qword ptr fs:[0x28]
0x7dbc:	mov	qword ptr [rsp + 8], rax
0x7dc1:	xor	eax, eax
0x7dc3:	call	0x6dc0


0x7d40:	push	rbx
0x7d41:	mov	rbx, rsi
0x7d44:	sub	rsp, 0x10
0x7d48:	mov	rdx, rsp
0x7d4b:	mov	rax, qword ptr fs:[0x28]
0x7d54:	mov	qword ptr [rsp + 8], rax
0x7d59:	xor	eax, eax
0x7d5b:	call	0x7ab0


0x7ab0:	push	r13
0x7ab2:	push	r12
0x7ab4:	push	rbp
0x7ab5:	push	rbx
0x7ab6:	sub	rsp, 0x18
0x7aba:	mov	rax, qword ptr fs:[0x28]
0x7ac3:	mov	qword ptr [rsp + 8], rax
0x7ac8:	xor	eax, eax
0x7aca:	test	rsi, rsi
0x7acd:	je	0x7c8d


0x7870:	push	r12
0x7872:	push	rbp
0x7873:	mov	rbp, rdi
0x7876:	push	rbx
0x7877:	sub	rsp, 0x60
0x787b:	mov	r12, qword ptr [rdi + 0x28]
0x787f:	mov	rax, qword ptr fs:[0x28]
0x7888:	mov	qword ptr [rsp + 0x58], rax
0x788d:	xor	eax, eax
0x788f:	cmp	byte ptr [r12 + 0x10], 0
0x7895:	jne	0x78e8


0x7790:	push	r12
0x7792:	push	rbp
0x7793:	mov	r12, rdi
0x7796:	push	rbx
0x7797:	cmp	qword ptr [rdi + 0x40], 0
0x779c:	mov	rbp, qword ptr [rdi]
0x779f:	mov	rax, qword ptr [rdi + 8]
0x77a3:	je	0x77f3


0x7700:	push	r12
0x7702:	push	rbp
0x7703:	mov	rbp, rdi
0x7706:	push	rbx
0x7707:	mov	r12, qword ptr [rdi]
0x770a:	cmp	r12, qword ptr [rdi + 8]
0x770e:	jae	0x777b


0x7540:	push	r15
0x7542:	push	r14
0x7544:	lea	rax, [rip - 0x7db]
0x754b:	push	r13
0x754d:	push	r12
0x754f:	mov	r12, rdx
0x7552:	push	rbp
0x7553:	push	rbx
0x7554:	mov	r13, rcx
0x7557:	mov	rbp, rdi
0x755a:	mov	edi, 0x50
0x755f:	mov	r15, rsi
0x7562:	sub	rsp, 8
0x7566:	test	rdx, rdx
0x7569:	mov	r14, r8
0x756c:	cmove	r12, rax
0x7570:	lea	rax, [rip - 0x7f7]
0x7577:	test	rcx, rcx
0x757a:	cmove	r13, rax
0x757e:	call	0x1dc0


0x7520:	movabs	rax, 0x3f80000000000000
0x752a:	mov	byte ptr [rdi + 0x10], 0
0x752e:	mov	qword ptr [rdi], rax
0x7531:	movabs	rax, 0x3fb4fdf43f4ccccd
0x753b:	mov	qword ptr [rdi + 8], rax
0x753f:	ret	


0x74e0:	movzx	ecx, byte ptr [rdi]
0x74e3:	xor	edx, edx
0x74e5:	test	cl, cl
0x74e7:	je	0x750d


0x7470:	push	r15
0x7472:	push	r14
0x7474:	push	r13
0x7476:	push	r12
0x7478:	push	rbp
0x7479:	push	rbx
0x747a:	sub	rsp, 8
0x747e:	mov	r14, qword ptr [rdi]
0x7481:	cmp	qword ptr [rdi + 8], r14
0x7485:	jbe	0x74d6


0x7400:	mov	r9, qword ptr [rdi]
0x7403:	cmp	qword ptr [rdi + 8], r9
0x7407:	jbe	0x7462


0x7380:	push	rbp
0x7381:	push	rbx
0x7382:	mov	rbp, rdi
0x7385:	mov	rbx, rsi
0x7388:	sub	rsp, 8
0x738c:	call	0x6d90


0x7330:	cmp	qword ptr [rdi + 0x20], 0
0x7335:	je	0x7363


0x72d0:	push	r12
0x72d2:	push	rbp
0x72d3:	mov	r12, rdi
0x72d6:	push	rbx
0x72d7:	mov	rbp, rsi
0x72da:	call	0x6d90


0x7180:	push	r13
0x7182:	push	r12
0x7184:	mov	r12, rsi
0x7187:	push	rbp
0x7188:	push	rbx
0x7189:	xor	ebx, ebx
0x718b:	sub	rsp, 8
0x718f:	mov	rsi, qword ptr [rdi]
0x7192:	mov	rcx, qword ptr [rdi + 0x20]
0x7196:	mov	rbp, qword ptr [rdi + 0x10]
0x719a:	mov	r13, qword ptr [rdi + 0x18]
0x719e:	mov	rdi, qword ptr [rdi + 8]
0x71a2:	cmp	rsi, rdi
0x71a5:	jae	0x71e5


0x7120:	mov	rcx, qword ptr [rdi]
0x7123:	mov	r8, qword ptr [rdi + 8]
0x7127:	xor	edx, edx
0x7129:	xor	esi, esi
0x712b:	cmp	rcx, r8
0x712e:	jae	0x7166


0x70d0:	mov	rsi, qword ptr [rdi]
0x70d3:	mov	rdi, qword ptr [rdi + 8]
0x70d7:	xor	eax, eax
0x70d9:	cmp	rsi, rdi
0x70dc:	jae	0x7117


0x70c0:	mov	rax, qword ptr [rdi + 0x20]
0x70c4:	ret	


0x70b0:	mov	rax, qword ptr [rdi + 0x18]
0x70b4:	ret	


0x70a0:	mov	rax, qword ptr [rdi + 0x10]
0x70a4:	ret	


0x6f60:	push	r15
0x6f62:	push	r14
0x6f64:	push	r13
0x6f66:	push	r12
0x6f68:	push	rbp
0x6f69:	push	rbx
0x6f6a:	sub	rsp, 8
0x6f6e:	mov	r12, qword ptr [rsi]
0x6f71:	cmp	r12, qword ptr [rsi + 8]
0x6f75:	jae	0x7058


0x6ee0:	mov	rdx, qword ptr [rdi]
0x6ee3:	lea	rcx, [rip + 0x5b56]
0x6eea:	mov	eax, 1
0x6eef:	cmp	rdx, rcx
0x6ef2:	je	0x6f55


0x6dc0:	push	r14
0x6dc2:	push	r13
0x6dc4:	mov	r14, rdx
0x6dc7:	push	r12
0x6dc9:	push	rbp
0x6dca:	mov	r12, rdi
0x6dcd:	push	rbx
0x6dce:	mov	rbp, rsi
0x6dd1:	mov	r13d, ecx
0x6dd4:	call	0x6d90


0x6d90:	push	rbx
0x6d91:	mov	rbx, rdi
0x6d94:	mov	rdi, rsi
0x6d97:	mov	rsi, qword ptr [rbx + 0x10]
0x6d9b:	call	qword ptr [rbx + 0x30]


0x6d80:	cmp	rdi, rsi
0x6d83:	sete	al
0x6d86:	ret	


0x6d70:	mov	rax, rdi
0x6d73:	xor	edx, edx
0x6d75:	ror	rax, 3
0x6d79:	div	rsi
0x6d7c:	mov	rax, rdx
0x6d7f:	ret	


0x6cd0:	cmp	rdi, 0xa
0x6cd4:	mov	eax, 0xa
0x6cd9:	movabs	r9, 0xaaaaaaaaaaaaaaab
0x6ce3:	cmovb	rdi, rax
0x6ce7:	or	rdi, 1
0x6ceb:	cmp	rdi, -1
0x6cef:	je	0x6d5f


0x6c60:	sub	rsp, 0x58
0x6c64:	mov	qword ptr [rsp + 0x30], rdx
0x6c69:	xor	edx, edx
0x6c6b:	mov	rax, qword ptr fs:[0x28]
0x6c74:	mov	qword ptr [rsp + 0x18], rax
0x6c79:	xor	eax, eax
0x6c7b:	test	sil, 0x40
0x6c7f:	jne	0x6ca8


0x6c10:	push	rbx
0x6c11:	mov	rbx, rdi
0x6c14:	call	0x1bf0


0x6bb0:	movzx	edx, byte ptr [rdi]
0x6bb3:	mov	rax, rdi
0x6bb6:	cmp	dl, 0x2f
0x6bb9:	jne	0x6bcc


0x6b50:	push	rbp
0x6b51:	push	rbx
0x6b52:	mov	rbp, rdi
0x6b55:	sub	rsp, 8
0x6b59:	call	0x6af0


0x6af0:	push	rbp
0x6af1:	push	rbx
0x6af2:	xor	ebp, ebp
0x6af4:	mov	rbx, rdi
0x6af7:	sub	rsp, 8
0x6afb:	cmp	byte ptr [rdi], 0x2f
0x6afe:	sete	bpl
0x6b02:	call	0x6bb0


0x6a40:	push	rbp
0x6a41:	push	rbx
0x6a42:	sub	rsp, 8
0x6a46:	mov	rdi, qword ptr [rip + 0x20967b]
0x6a4d:	call	0xb250


0x6a30:	mov	byte ptr [rip + 0x2096e9], dil
0x6a37:	ret	


0x6a20:	mov	qword ptr [rip + 0x209701], rdi
0x6a27:	ret	


0x6960:	push	r13
0x6962:	push	r12
0x6964:	push	rbp
0x6965:	push	rbx
0x6966:	mov	rbx, rsi
0x6969:	mov	rbp, rdi
0x696c:	sub	rsp, 0x38
0x6970:	lea	rsi, [rsp + 0x18]
0x6975:	mov	rax, qword ptr fs:[0x28]
0x697e:	mov	qword ptr [rsp + 0x28], rax
0x6983:	xor	eax, eax
0x6985:	call	0x1b60


0x6910:	push	r14
0x6912:	push	r13
0x6914:	push	r12
0x6916:	push	rbp
0x6917:	push	rbx
0x6918:	mov	r14, qword ptr [rsi]
0x691b:	test	r14, r14
0x691e:	je	0x6951


0x68a0:	push	r15
0x68a2:	push	r14
0x68a4:	mov	r14, rdi
0x68a7:	push	r13
0x68a9:	push	r12
0x68ab:	mov	r12, rsi
0x68ae:	push	rbp
0x68af:	push	rbx
0x68b0:	mov	rbp, rcx
0x68b3:	mov	rbx, rdx
0x68b6:	mov	rcx, r8
0x68b9:	mov	rdx, rbp
0x68bc:	sub	rsp, 8
0x68c0:	mov	rsi, rbx
0x68c3:	mov	rdi, r12
0x68c6:	mov	r15, r8
0x68c9:	mov	r13, r9
0x68cc:	call	0x65e0


0x6780:	push	r15
0x6782:	push	r14
0x6784:	mov	r14, rdi
0x6787:	push	r13
0x6789:	push	r12
0x678b:	xor	edi, edi
0x678d:	push	rbp
0x678e:	push	rbx
0x678f:	mov	rbp, rsi
0x6792:	lea	rsi, [rip + 0x6214]
0x6799:	mov	r12, rdx
0x679c:	mov	edx, 5
0x67a1:	sub	rsp, 8
0x67a5:	mov	rbx, qword ptr [rip + 0x209954]
0x67ac:	call	0x1bd0


0x6700:	cmp	rdx, -1
0x6704:	push	r12
0x6706:	mov	edx, 5
0x670b:	push	rbp
0x670c:	mov	r12, rsi
0x670f:	push	rbx
0x6710:	mov	rbp, rdi
0x6713:	je	0x6760


0x65e0:	push	r15
0x65e2:	push	r14
0x65e4:	mov	r15, rsi
0x65e7:	push	r13
0x65e9:	push	r12
0x65eb:	mov	r13, rcx
0x65ee:	push	rbp
0x65ef:	push	rbx
0x65f0:	mov	rbp, rdx
0x65f3:	sub	rsp, 0x28
0x65f7:	mov	qword ptr [rsp + 8], rdi
0x65fc:	mov	qword ptr [rsp + 0x18], rdx
0x6601:	call	0x1bf0


0x65d0:	mov	edi, 1
0x65d5:	jmp	0x6110


0x6110:	push	r13
0x6112:	push	r12
0x6114:	mov	edx, 5
0x6119:	push	rbp
0x611a:	push	rbx
0x611b:	mov	ebp, edi
0x611d:	sub	rsp, 0x88
0x6124:	mov	rbx, qword ptr [rip + 0x20a005]
0x612b:	mov	rax, qword ptr fs:[0x28]
0x6134:	mov	qword ptr [rsp + 0x78], rax
0x6139:	xor	eax, eax
0x613b:	test	edi, edi
0x613d:	je	0x616d


0x5a90:	push	r15
0x5a92:	push	r14
0x5a94:	mov	ecx, 2
0x5a99:	push	r13
0x5a9b:	push	r12
0x5a9d:	mov	r13d, esi
0x5aa0:	push	rbp
0x5aa1:	push	rbx
0x5aa2:	mov	rbx, rdi
0x5aa5:	sub	rsp, 0xb8
0x5aac:	mov	r14d, dword ptr [rbx + 0x3c]
0x5ab0:	mov	rax, qword ptr fs:[0x28]
0x5ab9:	mov	qword ptr [rsp + 0xa8], rax
0x5ac1:	xor	eax, eax
0x5ac3:	mov	rax, qword ptr [rdi]
0x5ac6:	lea	rdi, [rip + 0x5d22]
0x5acd:	mov	rsi, rax
0x5ad0:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x53a0:	push	r12
0x53a2:	push	rbp
0x53a3:	mov	rbp, rsi
0x53a6:	push	rbx
0x53a7:	add	rsp, -0x80
0x53ab:	mov	rsi, rsp
0x53ae:	mov	rax, qword ptr fs:[0x28]
0x53b7:	mov	qword ptr [rsp + 0x78], rax
0x53bc:	xor	eax, eax
0x53be:	call	0x1ea0


0x51d0:	push	r14
0x51d2:	push	r13
0x51d4:	push	r12
0x51d6:	push	rbp
0x51d7:	push	rbx
0x51d8:	sub	rsp, 0xa0
0x51df:	mov	rax, qword ptr fs:[0x28]
0x51e8:	mov	qword ptr [rsp + 0x98], rax
0x51f0:	xor	eax, eax
0x51f2:	cmp	dword ptr [rdi + 0x38], -1
0x51f6:	jne	0x5220


0x4f70:	push	r15
0x4f72:	push	r14
0x4f74:	push	r13
0x4f76:	push	r12
0x4f78:	push	rbp
0x4f79:	push	rbx
0x4f7a:	sub	rsp, 0x2038
0x4f81:	mov	rax, qword ptr fs:[0x28]
0x4f8a:	mov	qword ptr [rsp + 0x2028], rax
0x4f92:	xor	eax, eax
0x4f94:	test	rdx, rdx
0x4f97:	mov	qword ptr [rsp + 8], rdi
0x4f9c:	mov	qword ptr [rsp + 0x10], rcx
0x4fa1:	mov	qword ptr [rsp + 0x18], r8
0x4fa6:	mov	qword ptr [rsp], r9
0x4faa:	je	0x50d0


0x4ea0:	push	r13
0x4ea2:	push	r12
0x4ea4:	mov	r12, rcx
0x4ea7:	push	rbp
0x4ea8:	push	rbx
0x4ea9:	mov	rbp, rsi
0x4eac:	mov	ebx, edx
0x4eae:	sub	rsp, 0x28
0x4eb2:	mov	rax, qword ptr fs:[0x28]
0x4ebb:	mov	qword ptr [rsp + 0x18], rax
0x4ec0:	xor	eax, eax
0x4ec2:	call	0x1ca0


0x4da0:	push	r14
0x4da2:	push	r13
0x4da4:	push	r12
0x4da6:	push	rbp
0x4da7:	push	rbx
0x4da8:	sub	rsp, 0x2010
0x4daf:	mov	rax, qword ptr fs:[0x28]
0x4db8:	mov	qword ptr [rsp + 0x2008], rax
0x4dc0:	xor	eax, eax
0x4dc2:	test	rdx, rdx
0x4dc5:	je	0x4e28


0x4c50:	push	r15
0x4c52:	push	r14
0x4c54:	mov	r14, rcx
0x4c57:	push	r13
0x4c59:	push	r12
0x4c5b:	xor	r12d, r12d
0x4c5e:	push	rbp
0x4c5f:	push	rbx
0x4c60:	mov	ebp, edi
0x4c62:	mov	rbx, rcx
0x4c65:	sub	rsp, 0x2028
0x4c6c:	mov	rax, qword ptr fs:[0x28]
0x4c75:	mov	qword ptr [rsp + 0x2018], rax
0x4c7d:	xor	eax, eax
0x4c7f:	lea	r13, [rsp + 0x10]
0x4c84:	mov	qword ptr [rsp + 8], rsi
0x4c89:	mov	dword ptr [rsp + 4], edx
0x4c8d:	nop	dword ptr [rax]
0x4c90:	mov	edi, dword ptr [rsp + 4]
0x4c94:	cmp	rbx, 0x2000
0x4c9b:	mov	edx, 0x2000
0x4ca0:	cmovbe	rdx, rbx
0x4ca4:	mov	rsi, r13
0x4ca7:	call	0x9e10


0x4b10:	push	r15
0x4b12:	push	r14
0x4b14:	push	r13
0x4b16:	push	r12
0x4b18:	push	rbp
0x4b19:	push	rbx
0x4b1a:	sub	rsp, 0x2028
0x4b21:	mov	rax, qword ptr fs:[0x28]
0x4b2a:	mov	qword ptr [rsp + 0x2018], rax
0x4b32:	xor	eax, eax
0x4b34:	test	rdx, rdx
0x4b37:	mov	qword ptr [rsp + 8], rdi
0x4b3c:	je	0x4bb8


0x4a90:	push	rbp
0x4a91:	push	rbx
0x4a92:	mov	rdx, rsi
0x4a95:	mov	rbx, rsi
0x4a98:	mov	esi, 1
0x4a9d:	sub	rsp, 8
0x4aa1:	mov	rcx, qword ptr [rip + 0x20b620]
0x4aa8:	call	0x1e20


0x4a20:	lea	eax, [rdi + 1]
0x4a23:	cmp	eax, 1
0x4a26:	jbe	0x4a40


0x49e0:	mov	rax, rdi
0x49e3:	lea	rdi, [rip + 0x6e05]
0x49ea:	mov	ecx, 2
0x49ef:	mov	rsi, rax
0x49f2:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x49d0:	mov	eax, dword ptr [rsi + 0x44]
0x49d3:	cmp	dword ptr [rdi + 0x44], eax
0x49d6:	sete	al
0x49d9:	ret	


0x49c0:	movsxd	rax, dword ptr [rdi + 0x44]
0x49c4:	xor	edx, edx
0x49c6:	div	rsi
0x49c9:	mov	rax, rdx
0x49cc:	ret	


0x49b0:	push	rbp
0x49b1:	mov	rbp, rsp
0x49b4:	pop	rbp
0x49b5:	jmp	0x4920


0x4970:	cmp	byte ptr [rip + 0x20b791], 0
0x4977:	jne	0x49a8


0x4920:	lea	rdi, [rip + 0x20b799]
0x4927:	lea	rsi, [rip + 0x20b792]
0x492e:	push	rbp
0x492f:	sub	rsi, rdi
0x4932:	mov	rbp, rsp
0x4935:	sar	rsi, 3
0x4939:	mov	rax, rsi
0x493c:	shr	rax, 0x3f
0x4940:	add	rsi, rax
0x4943:	sar	rsi, 1
0x4946:	je	0x4960


0x48e0:	lea	rdi, [rip + 0x20b7d9]
0x48e7:	push	rbp
0x48e8:	lea	rax, [rip + 0x20b7d1]
0x48ef:	cmp	rax, rdi
0x48f2:	mov	rbp, rsp
0x48f5:	je	0x4910


0x48b0:	xor	ebp, ebp
0x48b2:	mov	r9, rdx
0x48b5:	pop	rsi
0x48b6:	mov	rdx, rsp
0x48b9:	and	rsp, 0xfffffffffffffff0
0x48bd:	push	rax
0x48be:	push	rsp
0x48bf:	lea	r8, [rip + 0x6d0a]
0x48c6:	lea	rcx, [rip + 0x6c93]
0x48cd:	lea	rdi, [rip - 0x2984]
0x48d4:	call	qword ptr [rip + 0x20b706]


0x1f50:	push	r15
0x1f52:	push	r14
0x1f54:	push	r13
0x1f56:	push	r12
0x1f58:	push	rbp
0x1f59:	push	rbx
0x1f5a:	mov	ebx, edi
0x1f5c:	mov	rbp, rsi
0x1f5f:	sub	rsp, 0x2c8
0x1f66:	mov	rdi, qword ptr [rsi]
0x1f69:	mov	rax, qword ptr fs:[0x28]
0x1f72:	mov	qword ptr [rsp + 0x2b8], rax
0x1f7a:	xor	eax, eax
0x1f7c:	mov	qword ptr [rsp + 0x90], 0xa
0x1f88:	call	0x80e0


0x1aa8:	sub	rsp, 8
0x1aac:	mov	rax, qword ptr [rip + 0x20e535]
0x1ab3:	test	rax, rax
0x1ab6:	je	0x1aba


0x1eb0:	jmp	qword ptr [rip + 0x20e0da]


0xb510:	mov	rax, qword ptr [rdi + 0x20]
0xb514:	cmp	qword ptr [rdi + 0x28], rax
0xb518:	jne	0xb50a


0xb50a:	jmp	0x1e90


0xb4da:	mov	rdi, rbx
0xb4dd:	pop	rbx
0xb4de:	jmp	0x1dd0


0xb4c9:	call	0x1e10


0x1d90:	jmp	qword ptr [rip + 0x20e16a]


0x1df0:	jmp	qword ptr [rip + 0x20e13a]


0x1e40:	jmp	qword ptr [rip + 0x20e112]


0xb370:	movabs	rax, 0x8000000000000000
0xb37a:	xor	edx, edx
0xb37c:	ret	


0xb2de:	movsd	xmm1, qword ptr [rip + 0x217a]
0xb2e6:	ucomisd	xmm1, xmm0
0xb2ea:	jbe	0xb358


0x1b40:	jmp	qword ptr [rip + 0x20e292]


0xb230:	lea	rsi, [rip + 0x221c]
0xb237:	xor	edx, edx
0xb239:	mov	edi, 0x1fbf
0xb23e:	call	0x1c60


0xb1f8:	mov	rdx, qword ptr [rip + 0x205081]
0xb1ff:	test	rdx, rdx
0xb202:	je	0xb218


0xb138:	mov	rbx, qword ptr [rdi]
0xb13b:	mov	rbp, rsi
0xb13e:	mov	qword ptr [rsp + 8], rax
0xb143:	mov	r12, rsp
0xb146:	cmp	rbx, 0x1fa400
0xb14d:	jg	0xb16a


0xb1c0:	call	0x1b10


0x1c30:	jmp	qword ptr [rip + 0x20e21a]


0xb052:	mov	rax, qword ptr [rsp + 0x10]
0xb057:	xor	esi, esi
0xb059:	mov	edx, dword ptr [rax + 0x10]
0xb05c:	xor	eax, eax
0xb05e:	call	0x1b70


0xae51:	cmp	esi, 0x406
0xae57:	jne	0xaea0


0xaa07:	lea	rax, [rsp + 0x10]
0xaa0c:	mov	r15, rsi
0xaa0f:	test	rsi, rsi
0xaa12:	mov	rbp, rdi
0xaa15:	mov	dword ptr [rsp + 8], edx
0xaa19:	mov	r14, rcx
0xaa1c:	mov	r13, r8
0xaa1f:	cmove	r15, rax
0xaa23:	call	0x1b10


0xad65:	lea	rcx, [rip + 0x26dc]
0xad6c:	lea	rsi, [rip + 0x25b5]
0xad73:	lea	rdi, [rip + 0x25ce]
0xad7a:	mov	edx, 0x54
0xad7f:	call	0x1cb0


0x1b10:	jmp	qword ptr [rip + 0x20e2aa]


0x1bd0:	jmp	qword ptr [rip + 0x20e24a]


0x1bf0:	jmp	qword ptr [rip + 0x20e23a]


0xa6c9:	call	0xa720


0xa6b2:	movzx	edx, dl
0xa6b5:	test	rdx, rdx
0xa6b8:	jne	0xa6c9


0xa660:	test	rax, rax
0xa663:	mov	edx, 0x80
0xa668:	cmove	rax, rdx
0xa66c:	test	rax, rax
0xa66f:	jns	0xa652


0xa638:	movabs	rdx, 0x5555555555555553
0xa642:	cmp	rax, rdx
0xa645:	ja	0xa671


0xa5e0:	test	rcx, rcx
0xa5e3:	je	0xa608


0xa5ab:	xor	edx, edx
0xa5ad:	movabs	rax, 0x5555555555555554
0xa5b7:	div	r9
0xa5ba:	cmp	rax, rcx
0xa5bd:	jbe	0xa5fb


0xa58b:	sub	rsp, 8
0xa58f:	call	0xa720


0xa581:	movzx	eax, al
0xa584:	test	rax, rax
0xa587:	jne	0xa58b


0xa539:	test	rdi, rdi
0xa53c:	jne	0xa558


0xa53e:	mov	rsi, rbx
0xa541:	call	0x1e30


0xa50b:	sub	rsp, 8
0xa50f:	call	0xa720


0xa501:	movzx	eax, al
0xa504:	test	rax, rax
0xa507:	jne	0xa50b


0x1dc0:	jmp	qword ptr [rip + 0x20e152]


0xa3e6:	mov	eax, r10d
0xa3e9:	mov	r11d, 1
0xa3ef:	add	r10d, 8
0xa3f3:	add	rax, rbp
0xa3f6:	mov	rax, qword ptr [rax]
0xa3f9:	test	rax, rax
0xa3fc:	mov	qword ptr [r8 + r9*8], rax
0xa400:	je	0xa40c


0xa43c:	mov	rax, rbx
0xa43f:	add	rbx, 8
0xa443:	jmp	0xa3f6


0xa318:	mov	r11d, eax
0xa31b:	add	r11, qword ptr [r10 + 0x10]
0xa31f:	add	eax, 8
0xa322:	mov	dword ptr [r10], eax
0xa325:	mov	rax, qword ptr [r11]
0xa328:	test	rax, rax
0xa32b:	mov	qword ptr [r8 + r9*8], rax
0xa32f:	je	0xa33b


0xa35a:	mov	r11, qword ptr [r10 + 8]
0xa35e:	lea	rax, [r11 + 8]
0xa362:	mov	qword ptr [r10 + 8], rax
0xa366:	jmp	0xa325


0xa2eb:	jmp	0x9eb0


0x9fe8:	mov	r8, rcx
0x9feb:	mov	rcx, rdx
0x9fee:	lea	rdx, [rip + 0x2fbf]
0x9ff5:	mov	esi, 1
0x9ffa:	xor	eax, eax
0x9ffc:	call	0x1ee0


0x9ed0:	mov	r8, rdx
0x9ed3:	lea	rdx, [rip + 0x30ce]
0x9eda:	mov	r9, rcx
0x9edd:	xor	eax, eax
0x9edf:	mov	rcx, rsi
0x9ee2:	mov	esi, 1
0x9ee7:	call	0x1ee0


0x9e81:	call	0xb430


0x9ea2:	add	rsp, 8
0x9ea6:	mov	eax, ebx
0x9ea8:	pop	rbx
0x9ea9:	pop	rbp
0x9eaa:	pop	r12
0x9eac:	pop	r13
0x9eae:	ret	


0x1d00:	jmp	qword ptr [rip + 0x20e1b2]


0x9d37:	call	0x1b00


0x9d05:	test	rdx, rdx
0x9d08:	je	0x9d37


0x9ca4:	call	0x1b00


0x9c3c:	mov	dword ptr [rsp], esi
0x9c3f:	mov	rcx, rsp
0x9c42:	mov	rdx, -1
0x9c49:	mov	rsi, rax
0x9c4c:	mov	qword ptr [rsp + 4], 0
0x9c55:	mov	qword ptr [rsp + 0xc], 0x4000000
0x9c5e:	mov	qword ptr [rsp + 0x14], 0
0x9c67:	mov	qword ptr [rsp + 0x1c], 0
0x9c70:	mov	qword ptr [rsp + 0x24], 0
0x9c79:	mov	qword ptr [rsp + 0x2c], 0
0x9c82:	mov	dword ptr [rsp + 0x34], 0
0x9c8a:	call	0x94b0


0x9b10:	call	0x1b00


0x9aaf:	mov	dword ptr [rsp], esi
0x9ab2:	mov	rcx, rsp
0x9ab5:	mov	rsi, rax
0x9ab8:	mov	qword ptr [rsp + 4], 0
0x9ac1:	mov	qword ptr [rsp + 0xc], 0
0x9aca:	mov	qword ptr [rsp + 0x14], 0
0x9ad3:	mov	qword ptr [rsp + 0x1c], 0
0x9adc:	mov	qword ptr [rsp + 0x24], 0
0x9ae5:	mov	qword ptr [rsp + 0x2c], 0
0x9aee:	mov	dword ptr [rsp + 0x34], 0
0x9af6:	call	0x94b0


0x9a84:	call	0x1b00


0x9a1c:	mov	dword ptr [rsp], esi
0x9a1f:	mov	rcx, rsp
0x9a22:	mov	rdx, -1
0x9a29:	mov	rsi, rax
0x9a2c:	mov	qword ptr [rsp + 4], 0
0x9a35:	mov	qword ptr [rsp + 0xc], 0
0x9a3e:	mov	qword ptr [rsp + 0x14], 0
0x9a47:	mov	qword ptr [rsp + 0x1c], 0
0x9a50:	mov	qword ptr [rsp + 0x24], 0
0x9a59:	mov	qword ptr [rsp + 0x2c], 0
0x9a62:	mov	dword ptr [rsp + 0x34], 0
0x9a6a:	call	0x94b0


0x9931:	mov	rdi, qword ptr [r12 + 8]
0x9936:	lea	rbx, [rip + 0x206803]
0x993d:	cmp	rdi, rbx
0x9940:	je	0x9959


0x9906:	sub	eax, 2
0x9909:	lea	rbx, [r12 + 0x18]
0x990e:	shl	rax, 4
0x9912:	lea	rbp, [r12 + rax + 0x28]
0x9917:	nop	word ptr [rax + rax]
0x9920:	mov	rdi, qword ptr [rbx]
0x9923:	add	rbx, 0x10
0x9927:	call	0x1af0


0x9767:	sub	rsp, 8
0x976b:	call	0x1b00


0x9759:	test	rdx, rdx
0x975c:	je	0x9767


0x1be0:	jmp	qword ptr [rip + 0x20e242]


0x815d:	mov	rcx, qword ptr [rip + 0x207f9c]
0x8164:	lea	rdi, [rip + 0x4925]
0x816b:	mov	edx, 0x37
0x8170:	mov	esi, 1
0x8175:	call	0x1ed0


0x80e6:	mov	esi, 0x2f
0x80eb:	mov	rbx, rdi
0x80ee:	call	0x1c90


0x1ad0:	jmp	qword ptr [rip + 0x20e2ca]


0x8013:	mov	rax, rdi
0x8016:	lea	rsi, [rcx - 1]
0x801a:	imul	r9
0x801d:	mov	rax, rdi
0x8020:	sar	rax, 0x3f
0x8024:	sar	rdx, 2
0x8028:	sub	rdx, rax
0x802b:	lea	rax, [rdx + rdx*4]
0x802f:	lea	eax, [r8 + rax*2]
0x8033:	sub	eax, edi
0x8035:	test	rdx, rdx
0x8038:	mov	rdi, rdx
0x803b:	mov	byte ptr [rcx - 1], al
0x803e:	jne	0x8010


0x7c8d:	call	0x1b00


0x7ad3:	mov	r12, rsp
0x7ad6:	xor	ecx, ecx
0x7ad8:	mov	r13, rdx
0x7adb:	mov	rdx, r12
0x7ade:	mov	rbx, rdi
0x7ae1:	mov	rbp, rsi
0x7ae4:	call	0x6dc0


0x7897:	test	rsi, rsi
0x789a:	js	0x7a18


0x78e8:	mov	rdi, rsi
0x78eb:	call	0x6cd0


0x77f3:	cmp	rbp, rax
0x77f6:	jae	0x782c


0x77a5:	cmp	qword ptr [rdi + 0x20], 0
0x77aa:	je	0x77f3


0x7710:	cmp	qword ptr [r12], 0
0x7715:	je	0x7771


0x777b:	mov	qword ptr [rbp + 0x18], 0
0x7783:	mov	qword ptr [rbp + 0x20], 0
0x778b:	pop	rbx
0x778c:	pop	rbp
0x778d:	pop	r12
0x778f:	ret	


0x750d:	mov	rax, rdx
0x7510:	ret	


0x74d6:	xor	ebp, ebp
0x74d8:	jmp	0x74c4


0x7487:	mov	r13, rdx
0x748a:	mov	r12, rsi
0x748d:	mov	r15, rdi
0x7490:	xor	ebp, ebp
0x7492:	mov	rdi, qword ptr [r14]
0x7495:	test	rdi, rdi
0x7498:	je	0x74ba


0x7462:	xor	eax, eax
0x7464:	ret	


0x7409:	xor	r8d, r8d
0x740c:	mov	rcx, qword ptr [r9]
0x740f:	test	rcx, rcx
0x7412:	je	0x744d


0x7363:	xor	eax, eax
0x7365:	ret	


0x7337:	mov	rdx, qword ptr [rdi]
0x733a:	mov	rcx, qword ptr [rdi + 8]
0x733e:	cmp	rdx, rcx
0x7341:	jae	0x7368


0x71e5:	lea	rdx, [rip + 0x57e3]
0x71ec:	mov	esi, 1
0x71f1:	mov	rdi, r12
0x71f4:	xor	eax, eax
0x71f6:	call	0x1ee0


0x7130:	cmp	qword ptr [rcx], 0
0x7134:	je	0x715d


0x7166:	xor	eax, eax
0x7168:	cmp	qword ptr [rdi + 0x18], rsi
0x716c:	je	0x7170


0x7117:	ret	


0x6f7b:	mov	rbp, rdi
0x6f7e:	mov	r13, rsi
0x6f81:	mov	r14d, edx
0x6f84:	nop	dword ptr [rax]
0x6f88:	mov	r15, qword ptr [r12]
0x6f8c:	test	r15, r15
0x6f8f:	je	0x704a


0x7058:	add	rsp, 8
0x705c:	mov	eax, 1
0x7061:	pop	rbx
0x7062:	pop	rbp
0x7063:	pop	r12
0x7065:	pop	r13
0x7067:	pop	r14
0x7069:	pop	r15
0x706b:	ret	


0x6f55:	ret	


0x6ef4:	movss	xmm0, dword ptr [rdx + 8]
0x6ef9:	ucomiss	xmm0, dword ptr [rip + 0x5b54]
0x6f00:	jbe	0x6f50


0x6d5f:	mov	rax, rdi
0x6d62:	ret	


0x6c81:	xor	eax, eax
0x6c83:	call	0x1e80


0x6ca8:	lea	rax, [rsp + 0x60]
0x6cad:	mov	dword ptr [rsp], 0x10
0x6cb4:	mov	edx, dword ptr [rsp + 0x30]
0x6cb8:	mov	qword ptr [rsp + 8], rax
0x6cbd:	lea	rax, [rsp + 0x20]
0x6cc2:	mov	qword ptr [rsp + 0x10], rax
0x6cc7:	jmp	0x6c81


0x6bcc:	test	dl, dl
0x6bce:	je	0x6c0a


0x1b60:	jmp	qword ptr [rip + 0x20e282]


0x6951:	pop	rbx
0x6952:	mov	rax, r14
0x6955:	pop	rbp
0x6956:	pop	r12
0x6958:	pop	r13
0x695a:	pop	r14
0x695c:	ret	


0x6920:	mov	r12, rcx
0x6923:	mov	r13, rdi
0x6926:	mov	rbp, rdx
0x6929:	lea	rbx, [rsi + 8]
0x692d:	jmp	0x693f


0x6760:	lea	rsi, [rip + 0x620e]
0x6767:	xor	edi, edi
0x6769:	call	0x1bd0


0x6715:	lea	rsi, [rip + 0x6274]
0x671c:	xor	edi, edi
0x671e:	call	0x1bd0


0x616d:	lea	rsi, [rip + 0x5a34]
0x6174:	xor	edi, edi
0x6176:	call	0x1bd0


0x613f:	lea	rsi, [rip + 0x5a3a]
0x6146:	xor	edi, edi
0x6148:	call	0x1bd0


0x5ad0:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x5ad2:	movzx	ecx, byte ptr [rbx + 0x36]
0x5ad6:	seta	bpl
0x5ada:	sbb	bpl, 0
0x5ade:	movsx	ebp, bpl
0x5ae2:	test	ebp, ebp
0x5ae4:	mov	byte ptr [rsp + 7], cl
0x5ae8:	je	0x5c00


0x1ea0:	jmp	qword ptr [rip + 0x20e0e2]


0x51f8:	mov	rax, qword ptr [rsp + 0x98]
0x5200:	xor	rax, qword ptr fs:[0x28]
0x5209:	jne	0x5392


0x5220:	mov	rbx, rdi
0x5223:	mov	rdi, qword ptr [rdi]
0x5226:	mov	r12, rsi
0x5229:	call	0x49e0


0x50d0:	mov	eax, 1
0x50d5:	mov	rdi, qword ptr [rsp + 0x2028]
0x50dd:	xor	rdi, qword ptr fs:[0x28]
0x50e6:	jne	0x51c0


0x4fb0:	mov	rbp, r8
0x4fb3:	mov	r14d, esi
0x4fb6:	lea	rbx, [rsp + 0x20]
0x4fbb:	sub	rbp, rcx
0x4fbe:	mov	rsi, r8
0x4fc1:	mov	rcx, rdi
0x4fc4:	mov	rax, rbp
0x4fc7:	mov	edi, r14d
0x4fca:	mov	r15, rdx
0x4fcd:	sar	rax, 0x3f
0x4fd1:	shr	rax, 0x33
0x4fd5:	add	rbp, rax
0x4fd8:	and	ebp, 0x1fff
0x4fde:	sub	rbp, rax
0x4fe1:	mov	eax, 0x2000
0x4fe6:	cmove	rbp, rax
0x4fea:	xor	edx, edx
0x4fec:	sub	rsi, rbp
0x4fef:	mov	r13, rsi
0x4ff2:	call	0x4ea0


0x1ca0:	jmp	qword ptr [rip + 0x20e1e2]


0x4e28:	xor	eax, eax
0x4e2a:	mov	rcx, qword ptr [rsp + 0x2008]
0x4e32:	xor	rcx, qword ptr fs:[0x28]
0x4e3b:	jne	0x4e93


0x4dc7:	mov	r14, rdi
0x4dca:	mov	r13d, esi
0x4dcd:	mov	rbx, rdx
0x4dd0:	mov	rbp, rcx
0x4dd3:	mov	r12, rsp
0x4dd6:	jmp	0x4df4


0x4bb8:	mov	rcx, qword ptr [rsp + 0x2018]
0x4bc0:	xor	rcx, qword ptr fs:[0x28]
0x4bc9:	jne	0x4c41


0x4b3e:	lea	r13, [rsp + 0x10]
0x4b43:	mov	r15d, esi
0x4b46:	mov	rbx, rdx
0x4b49:	mov	r14, rcx
0x4b4c:	mov	edx, 0x2000
0x4b51:	mov	rsi, r13
0x4b54:	mov	edi, r15d
0x4b57:	call	0x9e10


0x1e20:	jmp	qword ptr [rip + 0x20e122]


0x4a40:	ret	


0x4a28:	push	r12
0x4a2a:	push	rbp
0x4a2b:	mov	rbp, rsi
0x4a2e:	push	rbx
0x4a2f:	mov	ebx, edi
0x4a31:	call	0x1ce0


0x49f2:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x49f4:	seta	dl
0x49f7:	sbb	dl, 0
0x49fa:	test	dl, dl
0x49fc:	je	0x4a00


0x4979:	cmp	qword ptr [rip + 0x20b677], 0
0x4981:	push	rbp
0x4982:	mov	rbp, rsp
0x4985:	je	0x4993


0x49a8:	ret	


0x4960:	pop	rbp
0x4961:	ret	


0x4948:	mov	rax, qword ptr [rip + 0x20b6a1]
0x494f:	test	rax, rax
0x4952:	je	0x4960


0x4910:	pop	rbp
0x4911:	ret	


0x48f7:	mov	rax, qword ptr [rip + 0x20b6da]
0x48fe:	test	rax, rax
0x4901:	je	0x4910




0x1aba:	add	rsp, 8
0x1abe:	ret	


0x1ab8:	call	rax




0xb51a:	cmp	qword ptr [rdi + 0x48], 0
0xb51f:	jne	0xb50a


0x1e90:	jmp	qword ptr [rip + 0x20e0ea]


0x1dd0:	jmp	qword ptr [rip + 0x20e14a]


0x1e10:	jmp	qword ptr [rip + 0x20e12a]








0xb358:	movabs	rax, 0x7fffffffffffffff
0xb362:	mov	edx, 0x3b9ac9ff
0xb367:	ret	


0xb2ec:	cvttsd2si	rsi, xmm0
0xb2f1:	pxor	xmm1, xmm1
0xb2f5:	xor	ecx, ecx
0xb2f7:	cvtsi2sd	xmm1, rsi
0xb2fc:	subsd	xmm0, xmm1
0xb300:	pxor	xmm1, xmm1
0xb304:	mulsd	xmm0, qword ptr [rip + 0x215c]
0xb30c:	cvttsd2si	rdx, xmm0
0xb311:	cvtsi2sd	xmm1, rdx
0xb316:	ucomisd	xmm0, xmm1
0xb31a:	seta	cl
0xb31d:	add	rcx, rdx
0xb320:	movabs	rdx, 0x112e0be826d694b3
0xb32a:	mov	rax, rcx
0xb32d:	imul	rdx
0xb330:	mov	rax, rcx
0xb333:	sar	rax, 0x3f
0xb337:	sar	rdx, 0x1a
0xb33b:	sub	rdx, rax
0xb33e:	lea	rax, [rdx + rsi]
0xb342:	imul	rdx, rdx, 0x3b9aca00
0xb349:	sub	rcx, rdx
0xb34c:	mov	rdx, rcx
0xb34f:	js	0xb380




0x1c60:	jmp	qword ptr [rip + 0x20e202]


0xb218:	test	rbx, rbx
0xb21b:	pxor	xmm0, xmm0
0xb21f:	je	0xb228


0xb204:	add	rsp, 8
0xb208:	mov	rsi, rbx
0xb20b:	mov	rdi, rbp
0xb20e:	pop	rbx
0xb20f:	pop	rbp
0xb210:	jmp	0x1ba0


0xb14f:	jmp	0xb198


0xb16a:	mov	rsi, rbp
0xb16d:	mov	rdi, r12
0xb170:	mov	qword ptr [rsp], 0x1fa400
0xb178:	sub	rbx, 0x1fa400
0xb17f:	call	0x1c70




0x1b70:	jmp	qword ptr [rip + 0x20e27a]


0xae59:	mov	rax, qword ptr [rsp + 0x10]
0xae5e:	cmp	dword ptr [rip + 0x205413], 0
0xae65:	mov	dword ptr [rsp], 0x18
0xae6c:	mov	r12d, dword ptr [rax + 0x10]
0xae70:	mov	edx, r12d
0xae73:	js	0xafa3


0xaea0:	cmp	esi, 0xb
0xaea3:	je	0xaed0


0x1cb0:	jmp	qword ptr [rip + 0x20e1da]








0xa6ba:	call	0x1d30


0xa671:	sub	rsp, 8
0xa675:	call	0xa720


0xa652:	mov	qword ptr [rsi], rax
0xa655:	mov	rsi, rax
0xa658:	jmp	0xa530


0xa647:	mov	rdx, rax
0xa64a:	shr	rdx, 1
0xa64d:	lea	rax, [rdx + rax + 1]
0xa652:	mov	qword ptr [rsi], rax
0xa655:	mov	rsi, rax
0xa658:	jmp	0xa530


0xa608:	xor	edx, edx
0xa60a:	mov	eax, 0x80
0xa60f:	xor	r8d, r8d
0xa612:	div	r9
0xa615:	test	rax, rax
0xa618:	sete	r8b
0xa61c:	lea	rcx, [r8 + rax]
0xa620:	jmp	0xa5e5


0xa5e5:	mov	rax, rcx
0xa5e8:	mul	r9
0xa5eb:	seto	dl
0xa5ee:	test	rax, rax
0xa5f1:	movzx	edx, dl
0xa5f4:	js	0xa5fb


0xa5fb:	sub	rsp, 8
0xa5ff:	call	0xa720


0xa5bf:	mov	rax, rcx
0xa5c2:	shr	rax, 1
0xa5c5:	lea	rcx, [rax + rcx + 1]
0xa5ca:	mov	qword ptr [rsi], rcx
0xa5cd:	imul	rcx, r9
0xa5d1:	mov	rsi, rcx
0xa5d4:	jmp	0xa530


0xa589:	jmp	0xa530


0xa558:	call	0x1af0


0x1e30:	jmp	qword ptr [rip + 0x20e11a]


0xa509:	jmp	0xa4d0




0xa40c:	test	r11b, r11b
0xa40f:	jne	0xa435


0xa402:	add	r9, 1
0xa406:	cmp	r9, 0xa
0xa40a:	jne	0xa3e0


0xa3f6:	mov	rax, qword ptr [rax]
0xa3f9:	test	rax, rax
0xa3fc:	mov	qword ptr [r8 + r9*8], rax
0xa400:	je	0xa40c


0xa33b:	call	0x9eb0


0xa331:	add	r9, 1
0xa335:	cmp	r9, 0xa
0xa339:	jne	0xa310


0xa325:	mov	rax, qword ptr [r11]
0xa328:	test	rax, rax
0xa32b:	mov	qword ptr [r8 + r9*8], rax
0xa32f:	je	0xa33b


0xa2e0:	add	r9, 1
0xa2e4:	cmp	qword ptr [r8 + r9*8], 0
0xa2e9:	jne	0xa2e0


0x1ee0:	jmp	qword ptr [rip + 0x20e0c2]




0x1b00:	jmp	qword ptr [rip + 0x20e2b2]


0x9d0a:	mov	qword ptr [rsp + 0x28], rsi
0x9d0f:	mov	qword ptr [rsp + 0x30], rdx
0x9d14:	mov	rcx, rsp
0x9d17:	mov	rdx, r8
0x9d1a:	mov	rsi, r9
0x9d1d:	call	0x94b0


0x9959:	lea	rbx, [rip + 0x206750]
0x9960:	cmp	r12, rbx
0x9963:	je	0x9974


0x9942:	call	0x1af0


0x1af0:	jmp	qword ptr [rip + 0x20e2ba]


0x975e:	mov	qword ptr [rdi + 0x28], rsi
0x9762:	mov	qword ptr [rdi + 0x30], rdx
0x9766:	ret	




0x1ed0:	jmp	qword ptr [rip + 0x20e0ca]


0x1c90:	jmp	qword ptr [rip + 0x20e1ea]




0x8040:	sub	rcx, 2
0x8044:	mov	byte ptr [rsi - 1], 0x2d
0x8048:	mov	rax, rcx
0x804b:	ret	


0x8010:	mov	rcx, rsi
0x8013:	mov	rax, rdi
0x8016:	lea	rsi, [rcx - 1]
0x801a:	imul	r9
0x801d:	mov	rax, rdi
0x8020:	sar	rax, 0x3f
0x8024:	sar	rdx, 2
0x8028:	sub	rdx, rax
0x802b:	lea	rax, [rdx + rdx*4]
0x802f:	lea	eax, [r8 + rax*2]
0x8033:	sub	eax, edi
0x8035:	test	rdx, rdx
0x8038:	mov	rdi, rdx
0x803b:	mov	byte ptr [rcx - 1], al
0x803e:	jne	0x8010


0x8006:	mov	rax, rcx
0x8009:	ret	


0x7fe0:	mov	rax, rdi
0x7fe3:	sub	rcx, 1
0x7fe7:	mul	rsi
0x7fea:	shr	rdx, 3
0x7fee:	lea	rax, [rdx + rdx*4]
0x7ff2:	add	rax, rax
0x7ff5:	sub	rdi, rax
0x7ff8:	add	edi, 0x30
0x7ffb:	test	rdx, rdx
0x7ffe:	mov	byte ptr [rcx], dil
0x8001:	mov	rdi, rdx
0x8004:	jne	0x7fe0


0x7a18:	mov	rax, rsi
0x7a1b:	pxor	xmm0, xmm0
0x7a1f:	shr	rax, 1
0x7a22:	and	esi, 1
0x7a25:	or	rax, rsi
0x7a28:	cvtsi2ss	xmm0, rax
0x7a2d:	addss	xmm0, xmm0
0x7a31:	jmp	0x78a9


0x78a0:	pxor	xmm0, xmm0
0x78a4:	cvtsi2ss	xmm0, rsi
0x78a9:	divss	xmm0, dword ptr [r12 + 8]
0x78b0:	ucomiss	xmm0, dword ptr [rip + 0x51b5]
0x78b7:	jae	0x79f0


0x782c:	mov	rdi, qword ptr [r12 + 0x48]
0x7831:	test	rdi, rdi
0x7834:	je	0x7851


0x77ac:	cmp	rbp, rax
0x77af:	jae	0x782c


0x7771:	add	r12, 0x10
0x7775:	cmp	qword ptr [rbp + 8], r12
0x7779:	ja	0x7710


0x7717:	mov	rbx, qword ptr [r12 + 8]
0x771c:	mov	rax, qword ptr [rbp + 0x40]
0x7720:	test	rbx, rbx
0x7723:	je	0x7755


0x74f0:	mov	rax, rdx
0x74f3:	add	rdi, 1
0x74f7:	shl	rax, 5
0x74fb:	sub	rax, rdx
0x74fe:	xor	edx, edx
0x7500:	add	rax, rcx
0x7503:	movzx	ecx, byte ptr [rdi]
0x7506:	div	rsi
0x7509:	test	cl, cl
0x750b:	jne	0x74f0


0x74c4:	add	rsp, 8
0x74c8:	mov	rax, rbp
0x74cb:	pop	rbx
0x74cc:	pop	rbp
0x74cd:	pop	r12
0x74cf:	pop	r13
0x74d1:	pop	r14
0x74d3:	pop	r15
0x74d5:	ret	


0x74ba:	add	r14, 0x10
0x74be:	cmp	qword ptr [r15 + 8], r14
0x74c2:	ja	0x7492


0x749a:	mov	rbx, r14
0x749d:	jmp	0x74a3


0x744d:	add	r9, 0x10
0x7451:	cmp	qword ptr [rdi + 8], r9
0x7455:	ja	0x740c


0x7414:	cmp	rdx, r8
0x7417:	jbe	0x7457


0x7343:	mov	rax, qword ptr [rdx]
0x7346:	test	rax, rax
0x7349:	jne	0x7366


0x7368:	sub	rsp, 8
0x736c:	call	0x1b00


0x71dc:	add	rsi, 0x10
0x71e0:	cmp	rsi, rdi
0x71e3:	jb	0x71b0


0x71b6:	mov	rax, qword ptr [rsi + 8]
0x71ba:	mov	edx, 1
0x71bf:	test	rax, rax
0x71c2:	je	0x71d5


0x715d:	add	rcx, 0x10
0x7161:	cmp	rcx, r8
0x7164:	jb	0x7130


0x7136:	mov	rax, qword ptr [rcx + 8]
0x713a:	add	rsi, 1
0x713e:	add	rdx, 1
0x7142:	test	rax, rax
0x7145:	je	0x715d


0x7170:	cmp	qword ptr [rdi + 0x20], rdx
0x7174:	sete	al
0x7177:	ret	


0x716e:	ret	


0x710c:	add	rsi, 0x10
0x7110:	cmp	rsi, rdi
0x7113:	jb	0x70e0


0x70e6:	mov	rdx, qword ptr [rsi + 8]
0x70ea:	mov	ecx, 1
0x70ef:	test	rdx, rdx
0x70f2:	je	0x7105


0x704a:	add	r12, 0x10
0x704e:	cmp	qword ptr [r13 + 8], r12
0x7052:	ja	0x6f88


0x6f95:	mov	rbx, qword ptr [r12 + 8]
0x6f9a:	test	rbx, rbx
0x6f9d:	jne	0x6fbc


0x6f50:	mov	qword ptr [rdi], rcx
0x6f53:	xor	eax, eax
0x6f55:	ret	


0x6f02:	movss	xmm1, dword ptr [rip + 0x5b4e]
0x6f0a:	ucomiss	xmm1, xmm0
0x6f0d:	jbe	0x6f50


0x6d50:	test	rax, rax
0x6d53:	jne	0x6d5f


0x6d17:	test	rcx, rcx
0x6d1a:	je	0x6d55


0x1e80:	jmp	qword ptr [rip + 0x20e0f2]


0x6bc0:	add	rax, 1
0x6bc4:	movzx	edx, byte ptr [rax]
0x6bc7:	cmp	dl, 0x2f
0x6bca:	je	0x6bc0


0x6c0a:	ret	


0x6bd0:	mov	rcx, rax
0x6bd3:	xor	esi, esi
0x6bd5:	jmp	0x6bf5




0x693f:	mov	rdx, r12
0x6942:	mov	rsi, rbp
0x6945:	mov	rdi, r13
0x6948:	call	0x1d10


0x5c00:	mov	eax, r14d
0x5c03:	xor	r12d, r12d
0x5c06:	jmp	0x5b0a


0x5aee:	xor	esi, esi
0x5af0:	test	r13b, r13b
0x5af3:	mov	rdi, rax
0x5af6:	sete	sil
0x5afa:	xor	eax, eax
0x5afc:	shl	esi, 0xb
0x5aff:	call	0x6c60




0x520f:	add	rsp, 0xa0
0x5216:	pop	rbx
0x5217:	pop	rbp
0x5218:	pop	r12
0x521a:	pop	r13
0x521c:	pop	r14
0x521e:	ret	


0x5392:	call	0x1c10


0x50ec:	add	rsp, 0x2038
0x50f3:	pop	rbx
0x50f4:	pop	rbp
0x50f5:	pop	r12
0x50f7:	pop	r13
0x50f9:	pop	r14
0x50fb:	pop	r15
0x50fd:	ret	


0x51c0:	call	0x1c10




0x4e3d:	add	rsp, 0x2010
0x4e44:	pop	rbx
0x4e45:	pop	rbp
0x4e46:	pop	r12
0x4e48:	pop	r13
0x4e4a:	pop	r14
0x4e4c:	ret	


0x4e93:	call	0x1c10


0x4df4:	mov	edx, 0x2000
0x4df9:	mov	rsi, r12
0x4dfc:	mov	edi, r13d
0x4dff:	call	0x9e10


0x4bcb:	add	rsp, 0x2028
0x4bd2:	pop	rbx
0x4bd3:	pop	rbp
0x4bd4:	pop	r12
0x4bd6:	pop	r13
0x4bd8:	pop	r14
0x4bda:	pop	r15
0x4bdc:	ret	


0x4c41:	call	0x1c10




0x1ce0:	jmp	qword ptr [rip + 0x20e1c2]


0x4a00:	lea	rsi, [rip + 0x6bfd]
0x4a07:	mov	edx, 5
0x4a0c:	xor	edi, edi
0x4a0e:	jmp	0x1bd0


0x49fe:	ret	


0x4993:	call	0x48e0


0x4987:	mov	rdi, qword ptr [rip + 0x20b67a]
0x498e:	call	0x1f40


0x4954:	pop	rbp
0x4955:	jmp	rax


0x4903:	pop	rbp
0x4904:	jmp	rax


0xb521:	push	r12
0xb523:	push	rbp
0xb524:	mov	r12d, edx
0xb527:	push	rbx
0xb528:	mov	rbp, rsi
0xb52b:	mov	rbx, rdi
0xb52e:	call	0x1d90








0xb380:	sub	rax, 1
0xb384:	add	rdx, 0x3b9aca00
0xb38b:	ret	


0xb351:	ret	




0xb228:	add	rsp, 8
0xb22c:	pop	rbx
0xb22d:	pop	rbp
0xb22e:	ret	


0xb221:	pxor	xmm0, xmm0
0xb225:	mov	qword ptr [rbx], rbp
0xb228:	add	rsp, 8
0xb22c:	pop	rbx
0xb22d:	pop	rbp
0xb22e:	ret	


0x1ba0:	jmp	qword ptr [rip + 0x20e262]


0xb198:	mov	rsi, rbp
0xb19b:	mov	rdi, r12
0xb19e:	mov	qword ptr [rsp], rbx
0xb1a2:	call	0x1c70


0x1c70:	jmp	qword ptr [rip + 0x20e1fa]




0xafa3:	xor	esi, esi
0xafa5:	xor	eax, eax
0xafa7:	call	0x1b70


0xae79:	xor	eax, eax
0xae7b:	mov	esi, 0x406
0xae80:	call	0x1b70


0xaed0:	mov	edi, ebp
0xaed2:	xor	eax, eax
0xaed4:	call	0x1b70


0xaea5:	jg	0xaf00




0x1d30:	jmp	qword ptr [rip + 0x20e19a]


0xa5f6:	test	rdx, rdx
0xa5f9:	je	0xa5ca




0xa411:	call	0x9eb0


0xa435:	mov	dword ptr [rsp + 8], r10d
0xa43a:	jmp	0xa411


0xa3e0:	cmp	r10d, 0x2f
0xa3e4:	ja	0xa43c


0xa310:	mov	eax, dword ptr [r10]
0xa313:	cmp	eax, 0x2f
0xa316:	ja	0xa35a






0x9974:	pop	rbx
0x9975:	mov	dword ptr [rip + 0x206719], 1
0x997f:	pop	rbp
0x9980:	pop	r12
0x9982:	ret	


0x9965:	mov	rdi, r12
0x9968:	call	0x1af0








0x78a9:	divss	xmm0, dword ptr [r12 + 8]
0x78b0:	ucomiss	xmm0, dword ptr [rip + 0x51b5]
0x78b7:	jae	0x79f0


0x78bd:	ucomiss	xmm0, dword ptr [rip + 0x51ac]
0x78c4:	jb	0x7a40


0x79f0:	xor	ebx, ebx
0x79f2:	mov	rcx, qword ptr [rsp + 0x58]
0x79f7:	xor	rcx, qword ptr fs:[0x28]
0x7a00:	mov	eax, ebx
0x7a02:	jne	0x7a9a


0x7821:	add	rbp, 0x10
0x7825:	cmp	qword ptr [r12 + 8], rbp
0x782a:	ja	0x7800


0x7851:	mov	rdi, qword ptr [r12]
0x7855:	call	0x1af0


0x7755:	test	rax, rax
0x7758:	je	0x7760


0x7492:	mov	rdi, qword ptr [r14]
0x7495:	test	rdi, rdi
0x7498:	je	0x74ba


0x74a3:	mov	rsi, r13
0x74a6:	call	r12


0x7457:	mov	rax, r8
0x745a:	ret	


0x740c:	mov	rcx, qword ptr [r9]
0x740f:	test	rcx, rcx
0x7412:	je	0x744d


0x7419:	mov	qword ptr [rsi + r8*8], rcx
0x741d:	mov	rcx, qword ptr [r9 + 8]
0x7421:	lea	rax, [r8 + 1]
0x7425:	test	rcx, rcx
0x7428:	je	0x744a


0x7366:	ret	


0x71b0:	cmp	qword ptr [rsi], 0
0x71b4:	je	0x71dc


0x71d5:	cmp	rbx, rdx
0x71d8:	cmovb	rbx, rdx
0x71dc:	add	rsi, 0x10
0x71e0:	cmp	rsi, rdi
0x71e3:	jb	0x71b0


0x70e0:	cmp	qword ptr [rsi], 0
0x70e4:	je	0x710c


0x7115:	ret	


0x7105:	cmp	rax, rcx
0x7108:	cmovb	rax, rcx
0x710c:	add	rsi, 0x10
0x7110:	cmp	rsi, rdi
0x7113:	jb	0x70e0


0x6f88:	mov	r15, qword ptr [r12]
0x6f8c:	test	r15, r15
0x6f8f:	je	0x704a


0x6f9f:	jmp	0x6ffb


0x6fbc:	mov	r15, qword ptr [rbx]
0x6fbf:	mov	rdi, rbp
0x6fc2:	mov	rsi, r15
0x6fc5:	call	0x6d90


0x6f0f:	movss	xmm1, dword ptr [rdx + 0xc]
0x6f14:	ucomiss	xmm1, dword ptr [rip + 0x5b41]
0x6f1b:	jbe	0x6f50


0x6d55:	add	rdi, 2
0x6d59:	cmp	rdi, -1
0x6d5d:	jne	0x6cf8


0x6d1c:	mov	r8d, 0x10
0x6d22:	mov	esi, 9
0x6d27:	mov	ecx, 3
0x6d2c:	jmp	0x6d39




0x6bf5:	cmp	dl, 0x2f
0x6bf8:	jne	0x6be0


0x1d10:	jmp	qword ptr [rip + 0x20e1aa]


0x5b0a:	cmp	dword ptr [rbx + 0x38], -1
0x5b0e:	sete	dl
0x5b11:	test	eax, eax
0x5b13:	sete	al
0x5b16:	cmp	dl, al
0x5b18:	je	0x60bb


0x1c10:	jmp	qword ptr [rip + 0x20e22a]




0x1f40:	jmp	qword ptr [rip + 0x20e0b2]






0xaea7:	cmp	esi, 4
0xaeaa:	je	0xaf80


0xaf00:	cmp	esi, 0x407
0xaf06:	jg	0xaf50




0xa5ca:	mov	qword ptr [rsi], rcx
0xa5cd:	imul	rcx, r9
0xa5d1:	mov	rsi, rcx
0xa5d4:	jmp	0xa530


0x7a40:	cvttss2si	rsi, xmm0
0x7a45:	jmp	0x78e8


0x78ca:	subss	xmm0, dword ptr [rip + 0x519e]
0x78d2:	movabs	rax, 0x8000000000000000
0x78dc:	cvttss2si	rsi, xmm0
0x78e1:	xor	rsi, rax
0x78e4:	nop	dword ptr [rax]
0x78e8:	mov	rdi, rsi
0x78eb:	call	0x6cd0


0x7a08:	add	rsp, 0x60
0x7a0c:	pop	rbx
0x7a0d:	pop	rbp
0x7a0e:	pop	r12
0x7a10:	ret	


0x7a9a:	call	0x1c10


0x7800:	mov	rdi, qword ptr [rbp + 8]
0x7804:	test	rdi, rdi
0x7807:	je	0x7821


0x77e6:	add	rbp, 0x10
0x77ea:	cmp	rax, rbp
0x77ed:	ja	0x77b8


0x77c1:	mov	rbx, rbp
0x77c4:	jmp	0x77d3


0x7760:	mov	qword ptr [r12], 0
0x7768:	mov	qword ptr [r12 + 8], 0
0x7771:	add	r12, 0x10
0x7775:	cmp	qword ptr [rbp + 8], r12
0x7779:	ja	0x7710


0x775a:	mov	rdi, qword ptr [r12]
0x775e:	call	rax


0x7736:	mov	rdx, qword ptr [rbx + 8]
0x773a:	mov	rcx, qword ptr [rbp + 0x48]
0x773e:	mov	qword ptr [rbx], 0
0x7745:	test	rdx, rdx
0x7748:	mov	qword ptr [rbx + 8], rcx
0x774c:	mov	qword ptr [rbp + 0x48], rbx
0x7750:	mov	rbx, rdx
0x7753:	jne	0x7728


0x772d:	mov	rdi, qword ptr [rbx]
0x7730:	call	rax


0x744a:	mov	r8, rax
0x744d:	add	r9, 0x10
0x7451:	cmp	qword ptr [rdi + 8], r9
0x7455:	ja	0x740c


0x7359:	mov	rax, qword ptr [rdx]
0x735c:	test	rax, rax
0x735f:	je	0x7350


0x71c8:	mov	rax, qword ptr [rax + 8]
0x71cc:	add	rdx, 1
0x71d0:	test	rax, rax
0x71d3:	jne	0x71c8


0x7150:	mov	rax, qword ptr [rax + 8]
0x7154:	add	rdx, 1
0x7158:	test	rax, rax
0x715b:	jne	0x7150


0x70f8:	mov	rdx, qword ptr [rdx + 8]
0x70fc:	add	rcx, 1
0x7100:	test	rdx, rdx
0x7103:	jne	0x70f8


0x6ffb:	test	r14b, r14b
0x6ffe:	mov	qword ptr [r12 + 8], 0
0x7007:	jne	0x704a


0x6f1d:	movss	xmm1, dword ptr [rdx]
0x6f21:	ucomiss	xmm1, dword ptr [rip + 0x5b38]
0x6f28:	jb	0x6f50


0x6cf8:	mov	rax, rdi
0x6cfb:	mov	rcx, rdi
0x6cfe:	mul	r9
0x6d01:	mov	rax, rdx
0x6d04:	shr	rax, 1
0x6d07:	lea	rax, [rax + rax*2]
0x6d0b:	sub	rcx, rax
0x6d0e:	cmp	rdi, 9
0x6d12:	mov	rax, rcx
0x6d15:	jbe	0x6d50


0x6d39:	add	rcx, 2
0x6d3d:	xor	edx, edx
0x6d3f:	mov	rax, rdi
0x6d42:	div	rcx
0x6d45:	add	rsi, r8
0x6d48:	cmp	rsi, rdi
0x6d4b:	mov	rax, rdx
0x6d4e:	jb	0x6d30


0x6bfa:	add	rcx, 1
0x6bfe:	movzx	edx, byte ptr [rcx]
0x6c01:	mov	esi, 1
0x6c06:	test	dl, dl
0x6c08:	jne	0x6bf5


0x6be0:	test	sil, sil
0x6be3:	je	0x6bea




0x60bb:	lea	rcx, [rip + 0x687e]
0x60c2:	lea	rsi, [rip + 0x55d9]
0x60c9:	lea	rdi, [rip + 0x55ef]
0x60d0:	mov	edx, 0x3df
0x60d5:	call	0x1cb0


0x5b1e:	movzx	r15d, byte ptr [rip + 0x20a5f4]
0x5b26:	movzx	eax, byte ptr [rip + 0x20a5df]
0x5b2d:	test	r15b, r15b
0x5b30:	jne	0x5c10




0xaf80:	mov	eax, dword ptr [rsp]
0xaf83:	cmp	eax, 0x2f
0xaf86:	ja	0xb074


0xaeb0:	jg	0xaf70


0xaf08:	cmp	esi, 0x406
0xaf0e:	jge	0xaf80


0xaf50:	cmp	esi, 0x409
0xaf56:	je	0xaf80


0x77ef:	mov	rbp, qword ptr [r12]
0x77f3:	cmp	rbp, rax
0x77f6:	jae	0x782c


0x77b8:	mov	rdi, qword ptr [rbp]
0x77bc:	test	rdi, rdi
0x77bf:	je	0x77e6


0x77d3:	call	qword ptr [r12 + 0x40]


0x7728:	test	rax, rax
0x772b:	je	0x7736


0x7460:	ret	


0x7435:	mov	r8, qword ptr [rcx]
0x7438:	add	rax, 1
0x743c:	mov	qword ptr [rsi + rax*8 - 8], r8
0x7441:	mov	rcx, qword ptr [rcx + 8]
0x7445:	test	rcx, rcx
0x7448:	jne	0x7430


0x7350:	add	rdx, 0x10
0x7354:	cmp	rdx, rcx
0x7357:	jae	0x7368


0x7361:	ret	


0x7009:	mov	rsi, r15
0x700c:	mov	rdi, rbp
0x700f:	call	0x6d90


0x6f2a:	addss	xmm1, dword ptr [rip + 0x5b22]
0x6f32:	movss	xmm2, dword ptr [rdx + 4]
0x6f37:	ucomiss	xmm2, xmm1
0x6f3a:	jbe	0x6f50


0x6d30:	add	r8, 8
0x6d34:	test	rdx, rdx
0x6d37:	je	0x6d55


0x6bea:	add	rcx, 1
0x6bee:	movzx	edx, byte ptr [rcx]
0x6bf1:	test	dl, dl
0x6bf3:	je	0x6c0a


0x6be5:	mov	rax, rcx
0x6be8:	xor	esi, esi
0x6bea:	add	rcx, 1
0x6bee:	movzx	edx, byte ptr [rcx]
0x6bf1:	test	dl, dl
0x6bf3:	je	0x6c0a


0x5b36:	test	al, al
0x5b38:	mov	byte ptr [rbx + 0x36], 1
0x5b3c:	je	0x5ee8


0x5c10:	cmp	r12d, -1
0x5c14:	je	0x5da0


0xaf8c:	add	rax, qword ptr [rsp + 0x10]
0xaf91:	mov	edx, dword ptr [rax]
0xaf93:	mov	edi, ebp
0xaf95:	xor	eax, eax
0xaf97:	call	0x1b70


0xb074:	mov	rax, qword ptr [rsp + 8]
0xb079:	jmp	0xaf91


0xaeb6:	cmp	esi, 2
0xaeb9:	je	0xaf80


0xaf70:	cmp	esi, 9
0xaf73:	je	0xaed0


0xaf10:	cmp	esi, 0x401
0xaf16:	je	0xaed0


0xaf58:	jl	0xaed0


0x7430:	cmp	rdx, rax
0x7433:	je	0x7460


0x6f3c:	movss	xmm3, dword ptr [rip + 0x5b20]
0x6f44:	ucomiss	xmm3, xmm2
0x6f47:	jb	0x6f50


0x5ee8:	lea	r8, [rsp + 0x10]
0x5eed:	mov	rsi, qword ptr [rbx]
0x5ef0:	mov	edi, 1
0x5ef5:	mov	rdx, r8
0x5ef8:	call	0x1c00


0x5b42:	cmp	r12d, -1
0x5b46:	jne	0x5f70


0x5da0:	test	al, al
0x5da2:	mov	byte ptr [rbx + 0x36], 0
0x5da6:	mov	rbp, qword ptr [rbx]
0x5da9:	je	0x6058


0x5c1a:	test	al, al
0x5c1c:	mov	byte ptr [rbx + 0x36], 1
0x5c20:	lea	r8, [rsp + 0x10]
0x5c25:	je	0x5f80


0xaf91:	mov	edx, dword ptr [rax]
0xaf93:	mov	edi, ebp
0xaf95:	xor	eax, eax
0xaf97:	call	0x1b70


0xaebf:	jg	0xaed0


0xaf79:	jg	0xaf80


0xaf18:	cmp	esi, 0x402
0xaf1e:	je	0xaf80


0xaf5e:	cmp	esi, 0x40a
0xaf64:	jne	0xaf28


0x6f49:	ucomiss	xmm0, xmm1
0x6f4c:	ja	0x6f55


0x1c00:	jmp	qword ptr [rip + 0x20e232]


0x5b4c:	movzx	r15d, byte ptr [rbx + 0x36]
0x5b51:	mov	rbp, qword ptr [rbx]
0x5b54:	call	0x1b10


0x5f70:	lea	r8, [rsp + 0x10]
0x5f75:	jmp	0x5c2b


0x6058:	lea	rdx, [rsp + 0x10]
0x605d:	mov	rsi, rbp
0x6060:	mov	edi, 1
0x6065:	call	0x1c00


0x5daf:	call	0x1b10


0x5f80:	mov	rsi, qword ptr [rbx]
0x5f83:	mov	rdx, r8
0x5f86:	mov	edi, 1
0x5f8b:	mov	qword ptr [rsp + 8], r8
0x5f90:	call	0x1c00


0x5c2b:	mov	rdx, r8
0x5c2e:	mov	esi, r12d
0x5c31:	mov	edi, 1
0x5c36:	call	0x1e00


0xaec1:	cmp	esi, 1
0xaec4:	jne	0xaf28


0xaf7b:	cmp	esi, 8
0xaf7e:	jne	0xaf28


0xaf20:	cmp	esi, 0x400
0xaf26:	je	0xaf80


0xaf66:	jmp	0xaed0


0xaf28:	mov	eax, dword ptr [rsp]
0xaf2b:	cmp	eax, 0x2f
0xaf2e:	ja	0xb06a




0x1e00:	jmp	qword ptr [rip + 0x20e132]


0xaf34:	add	rax, qword ptr [rsp + 0x10]
0xaf39:	mov	rdx, qword ptr [rax]
0xaf3c:	mov	edi, ebp
0xaf3e:	xor	eax, eax
0xaf40:	call	0x1b70


0xb06a:	mov	rax, qword ptr [rsp + 8]
0xb06f:	jmp	0xaf39




0xaf39:	mov	rdx, qword ptr [rax]
0xaf3c:	mov	edi, ebp
0xaf3e:	xor	eax, eax
0xaf40:	call	0x1b70


0x4998:	mov	byte ptr [rip + 0x20b769], 1
0x499f:	pop	rbp
0x49a0:	ret	


0x522e:	mov	esi, dword ptr [rbx + 0x38]
0x5231:	mov	rdx, rsp
0x5234:	mov	edi, 1
0x5239:	mov	r13, rax
0x523c:	call	0x1e00


0x78f0:	mov	edx, 8
0x78f5:	mov	rbx, rax
0x78f8:	xor	ecx, ecx
0x78fa:	mov	rax, rdx
0x78fd:	mul	rbx
0x7900:	jo	0x7a9f


0x7a9f:	mov	ecx, 1
0x7aa4:	jmp	0x7906


0x7906:	test	rax, rax
0x7909:	mov	eax, 1
0x790e:	cmovs	rcx, rax
0x7912:	test	rbx, rbx
0x7915:	je	0x79f0


0x791b:	and	ecx, 1
0x791e:	jne	0x79f0


0x7924:	cmp	qword ptr [rbp + 0x10], rbx
0x7928:	je	0x7a50


0x7a50:	mov	ebx, 1
0x7a55:	jmp	0x79f2


0x792e:	mov	esi, 0x10
0x7933:	mov	rdi, rbx
0x7936:	call	0x1d30


0x79f2:	mov	rcx, qword ptr [rsp + 0x58]
0x79f7:	xor	rcx, qword ptr fs:[0x28]
0x7a00:	mov	eax, ebx
0x7a02:	jne	0x7a9a


0x6b07:	mov	rcx, rax
0x6b0a:	sub	rcx, rbx
0x6b0d:	cmp	rcx, rbp
0x6b10:	jbe	0x6b40


0x6b40:	add	rsp, 8
0x6b44:	mov	rdx, rcx
0x6b47:	mov	rax, rdx
0x6b4a:	pop	rbx
0x6b4b:	pop	rbp
0x6b4c:	ret	


0x6b12:	cmp	byte ptr [rax - 1], 0x2f
0x6b16:	lea	rdx, [rcx - 1]
0x6b1a:	je	0x6b2e


0x6b2e:	cmp	rbp, rdx
0x6b31:	jne	0x6b20


0x6b1c:	jmp	0x6b40


0x6b33:	add	rsp, 8
0x6b37:	mov	rax, rdx
0x6b3a:	pop	rbx
0x6b3b:	pop	rbp
0x6b3c:	ret	


0x6b20:	cmp	byte ptr [rbx + rdx - 1], 0x2f
0x6b25:	lea	rax, [rdx - 1]
0x6b29:	jne	0x6b33


0x6b2b:	mov	rdx, rax
0x6b2e:	cmp	rbp, rdx
0x6b31:	jne	0x6b20


0x6b5e:	test	rax, rax
0x6b61:	mov	rbx, rax
0x6b64:	sete	al
0x6b67:	movzx	eax, al
0x6b6a:	lea	rdi, [rbx + rax + 1]
0x6b6f:	call	0x1dc0


0xa8ae:	mov	qword ptr [rsp], rax
0xa8b2:	mov	qword ptr [rsp + 8], rdx
0xa8b7:	call	0x1b10


0xb591:	test	rbp, rbp
0xb594:	je	0xb5b6


0xb5b6:	add	rsp, 8
0xb5ba:	pop	rbx
0xb5bb:	pop	rbp
0xb5bc:	pop	r12
0xb5be:	pop	r13
0xb5c0:	pop	r14
0xb5c2:	pop	r15
0xb5c4:	ret	


0xb596:	xor	ebx, ebx
0xb598:	nop	dword ptr [rax + rax]
0xb5a0:	mov	rdx, r15
0xb5a3:	mov	rsi, r14
0xb5a6:	mov	edi, r13d
0xb5a9:	call	qword ptr [r12 + rbx*8]


0x5241:	test	eax, eax
0x5243:	mov	ebp, eax
0x5245:	jne	0x52e0


0x524b:	mov	eax, dword ptr [rbx + 0x30]
0x524e:	and	eax, 0xf000
0x5253:	cmp	eax, 0x8000
0x5258:	je	0x5308


0x52e0:	call	0x1b10


0x5308:	mov	rax, qword ptr [rbx + 8]
0x530c:	cmp	qword ptr [rsp + 0x30], rax
0x5311:	jl	0x5340


0x525e:	cmp	byte ptr [rip + 0x20aeb0], 0
0x5265:	je	0x5271


0x5340:	mov	rdx, r13
0x5343:	mov	esi, 3
0x5348:	xor	edi, edi
0x534a:	call	0x9c20


0x5313:	jne	0x525e


0x5271:	mov	edx, dword ptr [rbx + 0x38]
0x5274:	mov	rcx, -1
0x527b:	mov	rsi, r13
0x527e:	mov	edi, ebp
0x5280:	call	0x4c50


0x5267:	xor	ebp, ebp
0x5269:	cmp	qword ptr [r12], rbx
0x526d:	setne	bpl
0x5271:	mov	edx, dword ptr [rbx + 0x38]
0x5274:	mov	rcx, -1
0x527b:	mov	rsi, r13
0x527e:	mov	edi, ebp
0x5280:	call	0x4c50


0x5319:	mov	rax, qword ptr [rbx + 0x10]
0x531d:	cmp	qword ptr [rsp + 0x58], rax
0x5322:	jne	0x525e


0x5328:	mov	eax, dword ptr [rsp + 0x60]
0x532c:	cmp	dword ptr [rbx + 0x18], eax
0x532f:	jne	0x525e


0x5335:	jmp	0x51f8


0x5c3b:	test	eax, eax
0x5c3d:	js	0x5b4c


0x5c43:	mov	edx, dword ptr [rsp + 0x28]
0x5c47:	mov	eax, edx
0x5c49:	and	eax, 0xf000
0x5c4e:	sub	eax, 0x1000
0x5c53:	test	eax, 0xffffe000
0x5c58:	je	0x5cb0


0x5cb0:	mov	rdi, qword ptr [rbx]
0x5cb3:	call	0x49e0


0x5c5a:	and	edx, 0xb000
0x5c60:	cmp	edx, 0x8000
0x5c66:	je	0x5cb0


0x5c68:	test	r15b, r15b
0x5c6b:	mov	dword ptr [rbx + 0x3c], 0xffffffff
0x5c72:	mov	byte ptr [rbx + 0x36], 0
0x5c76:	je	0x5e70


0x5e70:	cmp	byte ptr [rsp + 7], 0
0x5e75:	mov	byte ptr [rbx + 0x34], 1
0x5e79:	jne	0x5e81


0x5c7c:	cmp	dword ptr [rip + 0x20a39d], 1
0x5c83:	jne	0x5e70


0x5e7b:	cmp	r14d, -1
0x5e7f:	je	0x5ed9


0x5e81:	lea	rsi, [rip + 0x5866]
0x5e88:	mov	edx, 5
0x5e8d:	xor	edi, edi
0x5e8f:	call	0x1bd0


0x5c89:	cmp	byte ptr [rsp + 7], 0
0x5c8e:	mov	byte ptr [rbx + 0x34], 0
0x5c92:	mov	rbp, qword ptr [rbx]
0x5c95:	je	0x60da


0x5ed9:	mov	rbp, qword ptr [rbx]
0x5edc:	jmp	0x5ba1


0x60da:	add	r14d, 1
0x60de:	lea	r13, [rip + 0x6f1c]
0x60e5:	jne	0x5e9a


0x5c9b:	lea	r13, [rip + 0x735f]
0x5ca2:	jmp	0x5e9a


0x5ba1:	mov	rdi, rbp
0x5ba4:	call	0x49e0


0x60eb:	jmp	0x5ba1


0x5e9a:	mov	rdi, rbp
0x5e9d:	call	0x49e0


0x5ea2:	mov	edi, 4
0x5ea7:	mov	rsi, rax
0x5eaa:	call	0x9b20


0x5ba9:	mov	edi, r12d
0x5bac:	mov	rsi, rax
0x5baf:	call	0x4a20


0x5bb4:	mov	rdi, qword ptr [rbx]
0x5bb7:	call	0x49e0


0x5bbc:	mov	edi, dword ptr [rbx + 0x38]
0x5bbf:	mov	rsi, rax
0x5bc2:	call	0x4a20


0x5bc7:	mov	dword ptr [rbx + 0x38], 0xffffffff
0x5bce:	mov	rax, qword ptr [rsp + 0xa8]
0x5bd6:	xor	rax, qword ptr fs:[0x28]
0x5bdf:	jne	0x60b6


0x5be5:	add	rsp, 0xb8
0x5bec:	pop	rbx
0x5bed:	pop	rbp
0x5bee:	pop	r12
0x5bf0:	pop	r13
0x5bf2:	pop	r14
0x5bf4:	pop	r15
0x5bf6:	ret	


0x60b6:	call	0x1c10


0x5cb8:	mov	edi, r12d
0x5cbb:	mov	rsi, rax
0x5cbe:	call	0x53a0


0x5f95:	test	eax, eax
0x5f97:	mov	r8, qword ptr [rsp + 8]
0x5f9c:	jne	0x5c2b


0x5fa2:	mov	eax, dword ptr [rsp + 0x28]
0x5fa6:	and	eax, 0xf000
0x5fab:	cmp	eax, 0xa000
0x5fb0:	jne	0x5c2b


0x5fb6:	jmp	0x5f19


0x5f19:	mov	rdi, qword ptr [rbx]
0x5f1c:	mov	dword ptr [rbx + 0x3c], 0xffffffff
0x5f23:	mov	byte ptr [rbx + 0x34], 1
0x5f27:	call	0x49e0


0x5f2c:	mov	edi, 4
0x5f31:	mov	rsi, rax
0x5f34:	call	0x9b20


0x606a:	test	eax, eax
0x606c:	jne	0x5b4c


0x6072:	mov	eax, dword ptr [rsp + 0x28]
0x6076:	and	eax, 0xf000
0x607b:	cmp	eax, 0xa000
0x6080:	jne	0x5b4c


0x6086:	jmp	0x5f19


0x5efd:	test	eax, eax
0x5eff:	jne	0x5b42


0x5f05:	mov	eax, dword ptr [rsp + 0x28]
0x5f09:	and	eax, 0xf000
0x5f0e:	cmp	eax, 0xa000
0x5f13:	jne	0x5b42


0x694d:	test	eax, eax
0x694f:	jne	0x6930


0x6930:	mov	r14, qword ptr [rbx]
0x6933:	add	rbp, r12
0x6936:	add	rbx, 8
0x693a:	test	r14, r14
0x693d:	je	0x6951


0x793b:	test	rax, rax
0x793e:	mov	qword ptr [rsp], rax
0x7942:	je	0x79f0


0x7948:	mov	qword ptr [rsp + 0x10], rbx
0x794d:	shl	rbx, 4
0x7951:	mov	qword ptr [rsp + 0x28], r12
0x7956:	add	rbx, rax
0x7959:	mov	rax, qword ptr [rbp + 0x30]
0x795d:	mov	r12, rsp
0x7960:	xor	edx, edx
0x7962:	mov	rsi, rbp
0x7965:	mov	rdi, r12
0x7968:	mov	qword ptr [rsp + 8], rbx
0x796d:	mov	qword ptr [rsp + 0x18], 0
0x7976:	mov	qword ptr [rsp + 0x30], rax
0x797b:	mov	rax, qword ptr [rbp + 0x38]
0x797f:	mov	qword ptr [rsp + 0x20], 0
0x7988:	mov	qword ptr [rsp + 0x38], rax
0x798d:	mov	rax, qword ptr [rbp + 0x40]
0x7991:	mov	qword ptr [rsp + 0x40], rax
0x7996:	mov	rax, qword ptr [rbp + 0x48]
0x799a:	mov	qword ptr [rsp + 0x48], rax
0x799f:	call	0x6f60


0x79a4:	test	al, al
0x79a6:	mov	ebx, eax
0x79a8:	jne	0x7a60


0x79ae:	mov	rax, qword ptr [rsp + 0x48]
0x79b3:	mov	edx, 1
0x79b8:	mov	rsi, r12
0x79bb:	mov	rdi, rbp
0x79be:	mov	qword ptr [rbp + 0x48], rax
0x79c2:	call	0x6f60


0x7a60:	mov	rdi, qword ptr [rbp]
0x7a64:	call	0x1af0


0x79c7:	test	al, al
0x79c9:	je	0x7aa9


0x7aa9:	call	0x1b00


0x79cf:	xor	edx, edx
0x79d1:	mov	rsi, r12
0x79d4:	mov	rdi, rbp
0x79d7:	call	0x6f60


0x79dc:	test	al, al
0x79de:	je	0x7aa9


0x79e4:	mov	rdi, qword ptr [rsp]
0x79e8:	call	0x1af0


0xa6bf:	test	rax, rax
0xa6c2:	je	0xa6c9


0xa6c4:	add	rsp, 8
0xa6c8:	ret	


0xb1a7:	mov	rdx, qword ptr [rsp + 0x18]
0xb1ac:	xor	rdx, qword ptr fs:[0x28]
0xb1b5:	jne	0xb1d2


0xb1b7:	add	rsp, 0x20
0xb1bb:	pop	rbx
0xb1bc:	pop	rbp
0xb1bd:	pop	r12
0xb1bf:	ret	


0xb1d2:	call	0x1c10


0xb184:	test	eax, eax
0xb186:	je	0xb158


0xb158:	cmp	rbx, 0x1fa400
0xb15f:	mov	qword ptr [rsp + 8], 0
0xb168:	jle	0xb198


0xb188:	test	rbp, rbp
0xb18b:	je	0xb1a7


0xb18d:	add	qword ptr [rbp], rbx
0xb191:	jmp	0xb1a7


0x4a36:	test	eax, eax
0x4a38:	jne	0x4a48


0x4a3a:	pop	rbx
0x4a3b:	pop	rbp
0x4a3c:	pop	r12
0x4a3e:	ret	


0x4a48:	mov	rsi, rbp
0x4a4b:	mov	edi, 4
0x4a50:	call	0x9b20


0x6c88:	mov	edi, eax
0x6c8a:	call	0x9e70


0x6c8f:	mov	rcx, qword ptr [rsp + 0x18]
0x6c94:	xor	rcx, qword ptr fs:[0x28]
0x6c9d:	jne	0x6cc9


0x6c9f:	add	rsp, 0x58
0x6ca3:	ret	


0x6cc9:	call	0x1c10


0x5b04:	mov	r12d, eax
0x5b07:	mov	eax, dword ptr [rbx + 0x3c]
0x5b0a:	cmp	dword ptr [rbx + 0x38], -1
0x5b0e:	sete	dl
0x5b11:	test	eax, eax
0x5b13:	sete	al
0x5b16:	cmp	dl, al
0x5b18:	je	0x60bb


0x80f3:	test	rax, rax
0x80f6:	je	0x814d


0x814d:	mov	qword ptr [rip + 0x207fdc], rbx
0x8154:	mov	qword ptr [rip + 0x207f85], rbx
0x815b:	pop	rbx
0x815c:	ret	


0x80f8:	lea	r8, [rax + 1]
0x80fc:	mov	rdx, r8
0x80ff:	sub	rdx, rbx
0x8102:	cmp	rdx, 6
0x8106:	jle	0x814d


0x8108:	lea	rsi, [rax - 6]
0x810c:	lea	rdi, [rip + 0x49b5]
0x8113:	mov	ecx, 7
0x8118:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x8118:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x811a:	seta	dl
0x811d:	sbb	dl, 0
0x8120:	test	dl, dl
0x8122:	jne	0x814d


0x8124:	lea	rdi, [rip + 0x49a5]
0x812b:	mov	ecx, 3
0x8130:	mov	rsi, r8
0x8133:	mov	rbx, r8
0x8136:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x8136:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x8138:	seta	dl
0x813b:	sbb	dl, 0
0x813e:	test	dl, dl
0x8140:	jne	0x814d


0x8142:	lea	rbx, [rax + 4]
0x8146:	mov	qword ptr [rip + 0x207f73], rbx
0x814d:	mov	qword ptr [rip + 0x207fdc], rbx
0x8154:	mov	qword ptr [rip + 0x207f85], rbx
0x815b:	pop	rbx
0x815c:	ret	


0x817a:	call	0x1b00


0x79ed:	jmp	0x79f2


0x7a69:	mov	rax, qword ptr [rsp]
0x7a6d:	mov	qword ptr [rbp], rax
0x7a71:	mov	rax, qword ptr [rsp + 8]
0x7a76:	mov	qword ptr [rbp + 8], rax
0x7a7a:	mov	rax, qword ptr [rsp + 0x10]
0x7a7f:	mov	qword ptr [rbp + 0x10], rax
0x7a83:	mov	rax, qword ptr [rsp + 0x18]
0x7a88:	mov	qword ptr [rbp + 0x18], rax
0x7a8c:	mov	rax, qword ptr [rsp + 0x48]
0x7a91:	mov	qword ptr [rbp + 0x48], rax
0x7a95:	jmp	0x79f2


0x7849:	test	rbx, rbx
0x784c:	mov	rdi, rbx
0x784f:	jne	0x7840


0x7840:	mov	rbx, qword ptr [rdi + 8]
0x7844:	call	0x1af0


0x785a:	pop	rbx
0x785b:	mov	rdi, r12
0x785e:	pop	rbp
0x785f:	pop	r12
0x7861:	jmp	0x1af0


0x7819:	test	rbx, rbx
0x781c:	mov	rdi, rbx
0x781f:	jne	0x7810


0x7810:	mov	rbx, qword ptr [rdi + 8]
0x7814:	call	0x1af0


0x996d:	mov	qword ptr [rip + 0x20672c], rbx
0x9974:	pop	rbx
0x9975:	mov	dword ptr [rip + 0x206719], 1
0x997f:	pop	rbp
0x9980:	pop	r12
0x9982:	ret	


0x9947:	mov	qword ptr [rip + 0x20675e], 0x100
0x9952:	mov	qword ptr [rip + 0x20675f], rbx
0x9959:	lea	rbx, [rip + 0x206750]
0x9960:	cmp	r12, rbx
0x9963:	je	0x9974


0xa55d:	xor	eax, eax
0xa55f:	pop	rbx
0xa560:	ret	


0x992c:	cmp	rbx, rbp
0x992f:	jne	0x9920


0x9920:	mov	rdi, qword ptr [rbx]
0x9923:	add	rbx, 0x10
0x9927:	call	0x1af0


0x71fb:	lea	rdx, [rip + 0x57e5]
0x7202:	xor	eax, eax
0x7204:	mov	rcx, rbp
0x7207:	mov	esi, 1
0x720c:	mov	rdi, r12
0x720f:	call	0x1ee0


0x7214:	test	r13, r13
0x7217:	js	0x7280


0x7280:	mov	rax, r13
0x7283:	mov	rdx, r13
0x7286:	pxor	xmm0, xmm0
0x728a:	shr	rax, 1
0x728d:	and	edx, 1
0x7290:	or	rax, rdx
0x7293:	test	rbp, rbp
0x7296:	cvtsi2sd	xmm0, rax
0x729b:	addsd	xmm0, xmm0
0x729f:	mulsd	xmm0, qword ptr [rip + 0x57d1]
0x72a7:	jns	0x722f


0x7219:	pxor	xmm0, xmm0
0x721d:	test	rbp, rbp
0x7220:	cvtsi2sd	xmm0, r13
0x7225:	mulsd	xmm0, qword ptr [rip + 0x584b]
0x722d:	js	0x72a9


0x72a9:	mov	rax, rbp
0x72ac:	pxor	xmm1, xmm1
0x72b0:	shr	rax, 1
0x72b3:	and	ebp, 1
0x72b6:	or	rax, rbp
0x72b9:	cvtsi2sd	xmm1, rax
0x72be:	addsd	xmm1, xmm1
0x72c2:	jmp	0x7238


0x722f:	pxor	xmm1, xmm1
0x7233:	cvtsi2sd	xmm1, rbp
0x7238:	divsd	xmm0, xmm1
0x723c:	lea	rdx, [rip + 0x57d5]
0x7243:	mov	rcx, r13
0x7246:	mov	rdi, r12
0x7249:	mov	esi, 1
0x724e:	mov	eax, 1
0x7253:	call	0x1ee0


0x7238:	divsd	xmm0, xmm1
0x723c:	lea	rdx, [rip + 0x57d5]
0x7243:	mov	rcx, r13
0x7246:	mov	rdi, r12
0x7249:	mov	esi, 1
0x724e:	mov	eax, 1
0x7253:	call	0x1ee0


0x7258:	add	rsp, 8
0x725c:	mov	rcx, rbx
0x725f:	mov	rdi, r12
0x7262:	pop	rbx
0x7263:	pop	rbp
0x7264:	pop	r12
0x7266:	pop	r13
0x7268:	lea	rdx, [rip + 0x5790]
0x726f:	mov	esi, 1
0x7274:	xor	eax, eax
0x7276:	jmp	0x1ee0


0x9eec:	lea	rsi, [rip + 0x30c8]
0x9ef3:	xor	edi, edi
0x9ef5:	mov	edx, 5
0x9efa:	call	0x1bd0


0xa001:	jmp	0x9eec


0xa546:	test	rax, rax
0xa549:	jne	0xa550


0xa54b:	test	rbx, rbx
0xa54e:	jne	0xa561


0xa550:	pop	rbx
0xa551:	ret	


0xa561:	call	0xa720


0xaf45:	mov	ebx, eax
0xaf47:	jmp	0xaee0


0xaee0:	mov	rcx, qword ptr [rsp + 0x18]
0xaee5:	xor	rcx, qword ptr fs:[0x28]
0xaeee:	mov	eax, ebx
0xaef0:	jne	0xb04d


0xaef6:	add	rsp, 0x50
0xaefa:	pop	rbx
0xaefb:	pop	rbp
0xaefc:	pop	r12
0xaefe:	ret	


0xb04d:	call	0x1c10


0xaed9:	mov	ebx, eax
0xaedb:	nop	dword ptr [rax + rax]
0xaee0:	mov	rcx, qword ptr [rsp + 0x18]
0xaee5:	xor	rcx, qword ptr fs:[0x28]
0xaeee:	mov	eax, ebx
0xaef0:	jne	0xb04d


0xaf9c:	mov	ebx, eax
0xaf9e:	jmp	0xaee0


0xae85:	test	eax, eax
0xae87:	mov	ebx, eax
0xae89:	js	0xb018


0xb018:	call	0x1b10


0xae8f:	mov	dword ptr [rip + 0x2053df], 1
0xae99:	jmp	0xaee0


0xafac:	test	eax, eax
0xafae:	mov	ebx, eax
0xafb0:	js	0xaee0


0xafb6:	cmp	dword ptr [rip + 0x2052bb], -1
0xafbd:	jne	0xaee0


0xafc3:	xor	eax, eax
0xafc5:	mov	esi, 1
0xafca:	mov	edi, ebx
0xafcc:	call	0x1b70


0xafd1:	test	eax, eax
0xafd3:	js	0xaff1


0xaff1:	call	0x1b10


0xafd5:	or	eax, 1
0xafd8:	mov	esi, 2
0xafdd:	mov	edi, ebx
0xafdf:	mov	edx, eax
0xafe1:	xor	eax, eax
0xafe3:	call	0x1b70


0xafe8:	cmp	eax, -1
0xafeb:	jne	0xaee0


0xb063:	mov	ebx, eax
0xb065:	jmp	0xaee0


0xb243:	mov	qword ptr [rip + 0x205036], rax
0xb24a:	jmp	0xb1f8


0xb4ce:	test	eax, eax
0xb4d0:	je	0xb4da


0xb4d2:	test	dword ptr [rbx], 0x100
0xb4d8:	jne	0xb4e8


0xb4e8:	mov	rdi, rbx
0xb4eb:	mov	edx, 1
0xb4f0:	xor	esi, esi
0xb4f2:	call	0xb500


0x1f8d:	lea	rsi, [rip + 0xb06d]
0x1f94:	mov	edi, 6
0x1f99:	call	0x1e40


0x4aad:	cmp	rbx, rax
0x4ab0:	ja	0x4ab9


0x4ab2:	add	rsp, 8
0x4ab6:	pop	rbx
0x4ab7:	pop	rbp
0x4ab8:	ret	


0x4ab9:	mov	rdi, qword ptr [rip + 0x20b608]
0x4ac0:	call	0x1b80


0x1b80:	jmp	qword ptr [rip + 0x20e272]




0x4ec7:	test	rax, rax
0x4eca:	js	0x4ef0


0x4ef0:	mov	rdi, rbp
0x4ef3:	mov	rsi, rsp
0x4ef6:	call	0x7fb0


0x4ecc:	mov	rcx, qword ptr [rsp + 0x18]
0x4ed1:	xor	rcx, qword ptr fs:[0x28]
0x4eda:	jne	0x4f66


0x4ee0:	add	rsp, 0x28
0x4ee4:	pop	rbx
0x4ee5:	pop	rbp
0x4ee6:	pop	r12
0x4ee8:	pop	r13
0x4eea:	ret	


0x4f66:	call	0x1c10


0x4efb:	mov	r13, rax
0x4efe:	call	0x1b10


0x4ff7:	mov	rdx, rbp
0x4ffa:	mov	rsi, rbx
0x4ffd:	mov	edi, r14d
0x5000:	call	0x9e10


0x53c3:	test	eax, eax
0x53c5:	je	0x5400


0x5400:	mov	rax, qword ptr [rsp]
0x5404:	cmp	rax, 0x19800202
0x540a:	je	0x5460


0x53c7:	call	0x1b10


0x5460:	xor	ebx, ebx
0x5462:	jmp	0x53dd


0x540c:	jg	0x54b0


0x53dd:	mov	rcx, qword ptr [rsp + 0x78]
0x53e2:	xor	rcx, qword ptr fs:[0x28]
0x53eb:	mov	eax, ebx
0x53ed:	jne	0x5a87


0x5412:	cmp	rax, 0x9660
0x5418:	je	0x5460


0x54b0:	cmp	rax, 0x6165676c
0x54b6:	je	0x5460


0x53f3:	sub	rsp, -0x80
0x53f7:	pop	rbx
0x53f8:	pop	rbp
0x53f9:	pop	r12
0x53fb:	ret	


0x5a87:	call	0x1c10


0x541a:	jg	0x5560


0x54b8:	jle	0x5508


0x5420:	cmp	rax, 0x3434
0x5426:	je	0x5460


0x5560:	cmp	rax, 0xc0ffee
0x5566:	je	0x5460


0x5508:	cmp	rax, 0x45584653
0x550e:	je	0x5460


0x54ba:	cmp	rax, 0x73727279
0x54c0:	je	0x5460


0x5428:	jg	0x55b8


0x556c:	jg	0x56a0


0x5514:	jg	0x5650


0x54c2:	jg	0x5600


0x542e:	cmp	rax, 0x137d
0x5434:	je	0x5460


0x55b8:	cmp	rax, 0x4858
0x55be:	je	0x5460


0x5572:	cmp	rax, 0xef51
0x5578:	je	0x5460


0x56a0:	cmp	rax, 0x7655821
0x56a6:	je	0x5460


0x551a:	cmp	rax, 0x2fc12fc1
0x5520:	je	0x5460


0x5650:	cmp	rax, 0x54190100
0x5656:	je	0x5460


0x54c8:	cmp	rax, 0x64646178
0x54ce:	je	0x5460


0x5600:	mov	edx, 0xc97e8168
0x5605:	cmp	rax, rdx
0x5608:	je	0x5460


0x5436:	jle	0x57f0


0x55c4:	jg	0x5818


0x557e:	jle	0x5850


0x56ac:	jle	0x5770


0x5526:	jle	0x5748


0x565c:	jg	0x5710


0x54d0:	jg	0x56e0


0x560e:	jg	0x57a8


0x57f0:	cmp	rax, 0x187
0x57f6:	je	0x5460


0x543c:	cmp	rax, 0x1cd1
0x5442:	je	0x5460


0x55ca:	cmp	rax, 0x4006
0x55d0:	je	0x5460


0x5818:	cmp	rax, 0x5df5
0x581e:	je	0x5460


0x5850:	cmp	rax, 0xadf5
0x5856:	je	0x5460


0x5584:	cmp	rax, 0x11954
0x558a:	je	0x5460


0x5770:	cmp	rax, 0x12fd16d
0x5776:	je	0x5460


0x56b2:	cmp	rax, 0x11307854
0x56b8:	je	0x5460


0x5748:	cmp	rax, 0x24051905
0x574e:	je	0x5460


0x552c:	cmp	rax, 0x42494e4d
0x5532:	je	0x5460


0x5662:	cmp	rax, 0x53464846
0x5668:	je	0x5460


0x5710:	cmp	rax, 0x58465342
0x5716:	je	0x5460


0x54d6:	cmp	rax, 0x62656572
0x54dc:	je	0x5460


0x56e0:	cmp	rax, 0x6e736673
0x56e6:	je	0x5460


0x5614:	sub	rdx, 0x385b192a
0x561b:	cmp	rax, rdx
0x561e:	je	0x5460


0x57a8:	mov	edx, 0xf2f52010
0x57ad:	cmp	rax, rdx
0x57b0:	je	0x5460


0x57fc:	jg	0x5990


0x5444:	jg	0x58c0


0x55d6:	jg	0x58a0


0x5824:	jg	0x5a50


0x585c:	jg	0x5a10


0x5590:	jg	0x5908


0x577c:	jg	0x5a70


0x56be:	jg	0x59f0


0x5754:	jg	0x5930


0x5538:	jg	0x59b0


0x566e:	jg	0x5950


0x571c:	jg	0x59d0


0x54de:	jg	0x5880


0x56ec:	jg	0x5970


0x5624:	cmp	rax, rdx
0x5627:	jg	0x58e0


0x57b6:	cmp	rax, rdx
0x57b9:	jg	0x5a28


0x5802:	cmp	rax, 0x2f
0x5806:	jne	0x5690


0x5990:	cmp	rax, 0x7c0
0x5996:	je	0x5460


0x544a:	cmp	rax, 0x137f
0x5450:	je	0x5460


0x58c0:	cmp	rax, 0x2468
0x58c6:	je	0x5460


0x55dc:	cmp	rax, 0x4000
0x55e2:	je	0x5460


0x58a0:	cmp	rax, 0x4244
0x58a6:	je	0x5460


0x582a:	cmp	rax, 0x4d44
0x5830:	je	0x5460


0x5a50:	cmp	rax, 0x7275
0x5a56:	je	0x5460


0x5862:	sub	rax, 0x9fa0
0x5868:	cmp	rax, 2
0x586c:	ja	0x5690


0x5a10:	cmp	rax, 0xadff
0x5a16:	jne	0x5690


0x5596:	cmp	rax, 0xef53
0x559c:	je	0x5460


0x5908:	cmp	rax, 0x27e0eb
0x590e:	je	0x5460


0x5782:	cmp	rax, 0x1021994
0x5788:	je	0x5460


0x5a70:	sub	rax, 0x12ff7b4
0x5a76:	cmp	rax, 3
0x5a7a:	ja	0x5690


0x56c4:	cmp	rax, 0x9041934
0x56ca:	je	0x5460


0x59f0:	cmp	rax, 0x13661366
0x59f6:	je	0x5460


0x575a:	cmp	rax, 0x1badface
0x5760:	jne	0x5690


0x5930:	cmp	rax, 0x28cd3d45
0x5936:	je	0x5460


0x553e:	cmp	rax, 0x3153464a
0x5544:	je	0x5460


0x59b0:	cmp	rax, 0x43415d53
0x59b6:	je	0x5460


0x5674:	cmp	rax, 0x52654973
0x567a:	je	0x5460


0x5950:	cmp	rax, 0x5346544e
0x5956:	je	0x5460


0x5722:	cmp	rax, 0x565a4653
0x5728:	je	0x5460


0x59d0:	cmp	rax, 0x5a3c69f0
0x59d6:	je	0x5460


0x54e4:	cmp	rax, 0x62646576
0x54ea:	je	0x5460


0x5880:	cmp	rax, 0x63677270
0x5886:	je	0x5460


0x56f2:	cmp	rax, 0x67596969
0x56f8:	je	0x5460


0x5970:	cmp	rax, 0x73636673
0x5976:	je	0x5460


0x562d:	cmp	rax, 0x74726163
0x5633:	je	0x5460


0x58e0:	mov	edx, 0x958458f6
0x58e5:	cmp	rax, rdx
0x58e8:	je	0x5460


0x57bf:	sub	rdx, 0x27f6d5ff
0x57c6:	cmp	rax, rdx
0x57c9:	je	0x5460


0x5a28:	mov	edx, 0xf97cff8c
0x5a2d:	cmp	rax, rdx
0x5a30:	je	0x5460


0x580c:	xor	ebx, ebx
0x580e:	jmp	0x53dd


0x5690:	mov	ebx, 1
0x5695:	jmp	0x53dd


0x599c:	cmp	rax, 0x1373
0x59a2:	jne	0x5690


0x5452:	cmp	rax, 0x138f
0x5458:	jne	0x5690


0x58cc:	cmp	rax, 0x2478
0x58d2:	jne	0x5690


0x55e8:	cmp	rax, 0x4004
0x55ee:	jne	0x5690


0x58ac:	cmp	rax, 0x482b
0x58b2:	jne	0x5690


0x5836:	cmp	rax, 0x4d5a
0x583c:	jne	0x5690


0x5a5c:	cmp	rax, 0x72b6
0x5a62:	jne	0x5690


0x5872:	xor	ebx, ebx
0x5874:	jmp	0x53dd


0x5a1c:	xor	ebx, ebx
0x5a1e:	jmp	0x53dd


0x55a2:	cmp	rax, 0xf15f
0x55a8:	jne	0x5690


0x5914:	cmp	rax, 0x414a53
0x591a:	jne	0x5690


0x578e:	cmp	rax, 0x1021997
0x5794:	jne	0x5690


0x5a80:	xor	ebx, ebx
0x5a82:	jmp	0x53dd


0x56d0:	cmp	rax, 0xbad1dea
0x56d6:	jne	0x5690


0x59fc:	cmp	rax, 0x15013346
0x5a02:	jne	0x5690


0x5766:	xor	ebx, ebx
0x5768:	jmp	0x53dd


0x593c:	cmp	rax, 0x2bad1dea
0x5942:	jne	0x5690


0x554a:	cmp	rax, 0x42465331
0x5550:	jne	0x5690


0x59bc:	cmp	rax, 0x453dcd28
0x59c2:	jne	0x5690


0x5680:	cmp	rax, 0x5346314d
0x5686:	je	0x5460


0x595c:	cmp	rax, 0x534f434b
0x5962:	jne	0x5690


0x572e:	cmp	rax, 0x58295829
0x5734:	jne	0x5690


0x59dc:	cmp	rax, 0x5dca2df5
0x59e2:	jne	0x5690


0x54f0:	cmp	rax, 0x62656570
0x54f6:	jne	0x5690


0x588c:	cmp	rax, 0x64626720
0x5892:	jne	0x5690


0x56fe:	cmp	rax, 0x68191122
0x5704:	jne	0x5690


0x597c:	cmp	rax, 0x73717368
0x5982:	jne	0x5690


0x5639:	sub	rdx, 0xb9f0f48
0x5640:	cmp	rax, rdx
0x5643:	jne	0x5690


0x58ee:	add	rdx, 0x1635c07e
0x58f5:	cmp	rax, rdx
0x58f8:	jne	0x5690


0x57cf:	add	rdx, 0x136037d3
0x57d6:	cmp	rax, rdx
0x57d9:	jne	0x5690


0x5a36:	add	rdx, 0x18e8bd
0x5a3d:	cmp	rax, rdx
0x5a40:	jne	0x5690


0x59a8:	xor	ebx, ebx
0x59aa:	jmp	0x53dd


0x58d8:	xor	ebx, ebx
0x58da:	jmp	0x53dd


0x55f4:	xor	ebx, ebx
0x55f6:	jmp	0x53dd


0x58b8:	xor	ebx, ebx
0x58ba:	jmp	0x53dd


0x5842:	xor	ebx, ebx
0x5844:	jmp	0x53dd


0x5a68:	xor	ebx, ebx
0x5a6a:	jmp	0x53dd


0x55ae:	xor	ebx, ebx
0x55b0:	jmp	0x53dd


0x5920:	xor	ebx, ebx
0x5922:	jmp	0x53dd


0x579a:	xor	ebx, ebx
0x579c:	jmp	0x53dd


0x56d8:	xor	ebx, ebx
0x56da:	jmp	0x53dd


0x5a08:	xor	ebx, ebx
0x5a0a:	jmp	0x53dd


0x5948:	xor	ebx, ebx
0x594a:	jmp	0x53dd


0x5556:	xor	ebx, ebx
0x5558:	jmp	0x53dd


0x59c8:	xor	ebx, ebx
0x59ca:	jmp	0x53dd


0x5968:	xor	ebx, ebx
0x596a:	jmp	0x53dd


0x573a:	xor	ebx, ebx
0x573c:	jmp	0x53dd


0x59e8:	xor	ebx, ebx
0x59ea:	jmp	0x53dd


0x54fc:	xor	ebx, ebx
0x54fe:	jmp	0x53dd


0x5898:	xor	ebx, ebx
0x589a:	jmp	0x53dd


0x5706:	xor	ebx, ebx
0x5708:	jmp	0x53dd


0x5988:	xor	ebx, ebx
0x598a:	jmp	0x53dd


0x5645:	xor	ebx, ebx
0x5647:	jmp	0x53dd


0x58fe:	xor	ebx, ebx
0x5900:	jmp	0x53dd


0x57df:	xor	ebx, ebx
0x57e1:	jmp	0x53dd


0x5a46:	xor	ebx, ebx
0x5a48:	jmp	0x53dd


0x5cc3:	test	al, al
0x5cc5:	mov	byte ptr [rbx + 0x35], al
0x5cc8:	jne	0x5e10


0x5cce:	and	r14d, 0xfffffffd
0x5cd2:	mov	dword ptr [rbx + 0x3c], 0
0x5cd9:	mov	eax, dword ptr [rbx + 0x38]
0x5cdc:	je	0x5fc0


0x5e10:	cmp	byte ptr [rip + 0x20a2f5], 0
0x5e17:	jne	0x5cce


0x5fc0:	cmp	eax, -1
0x5fc3:	mov	rdi, qword ptr [rbx]
0x5fc6:	je	0x6090


0x5ce2:	cmp	eax, -1
0x5ce5:	jne	0x60f0


0x5e1d:	mov	rdi, qword ptr [rbx]
0x5e20:	mov	dword ptr [rbx + 0x3c], 0xffffffff
0x5e27:	call	0x49e0


0x6090:	call	0x49e0


0x5fcc:	mov	rax, qword ptr [rsp + 0x18]
0x5fd1:	cmp	qword ptr [rbx + 0x28], rax
0x5fd5:	jne	0x6000


0x5ceb:	mov	rdi, qword ptr [rbx]
0x5cee:	call	0x49e0


0x60f0:	lea	rcx, [rip + 0x6849]
0x60f7:	lea	rsi, [rip + 0x55a4]
0x60fe:	lea	rdi, [rip + 0x5602]
0x6105:	mov	edx, 0x42c
0x610a:	call	0x1cb0


0x5fd7:	mov	rax, qword ptr [rsp + 0x10]
0x5fdc:	cmp	qword ptr [rbx + 0x20], rax
0x5fe0:	jne	0x6000


0x6000:	call	0x49e0


0x5fe2:	call	0x49e0


0x5fe7:	mov	edi, r12d
0x5fea:	mov	rsi, rax
0x5fed:	call	0x4a20


0x5ff2:	jmp	0x5bce


0x5bce:	mov	rax, qword ptr [rsp + 0xa8]
0x5bd6:	xor	rax, qword ptr fs:[0x28]
0x5bdf:	jne	0x60b6


0x6005:	mov	edi, 4
0x600a:	mov	rsi, rax
0x600d:	call	0x9b20


0x5cf3:	mov	edi, 4
0x5cf8:	mov	rsi, rax
0x5cfb:	call	0x9b20


0x6095:	mov	edi, 4
0x609a:	mov	rsi, rax
0x609d:	call	0x9b20


0x5e2c:	mov	edi, 4
0x5e31:	mov	rsi, rax
0x5e34:	call	0x9b20


0x698a:	mov	rax, qword ptr [rsp + 0x18]
0x698f:	movapd	xmm1, xmm0
0x6993:	cmp	byte ptr [rax], 0
0x6996:	jne	0x69c8


0x6998:	test	rbx, rbx
0x699b:	je	0x69a5


0x69c8:	movsd	qword ptr [rsp + 8], xmm0
0x69ce:	call	0x1b10


0x69a5:	mov	rax, qword ptr [rsp + 0x28]
0x69aa:	xor	rax, qword ptr fs:[0x28]
0x69b3:	movapd	xmm0, xmm1
0x69b7:	jne	0x6a0e


0x699d:	mov	rax, qword ptr [rsp + 0x18]
0x69a2:	mov	qword ptr [rbx], rax
0x69a5:	mov	rax, qword ptr [rsp + 0x28]
0x69aa:	xor	rax, qword ptr fs:[0x28]
0x69b3:	movapd	xmm0, xmm1
0x69b7:	jne	0x6a0e


0x69b9:	add	rsp, 0x38
0x69bd:	pop	rbx
0x69be:	pop	rbp
0x69bf:	pop	r12
0x69c1:	pop	r13
0x69c3:	ret	


0x6a0e:	call	0x1c10


0x8076:	test	rax, rax
0x8079:	je	0x8080


0x8080:	mov	rcx, qword ptr [rsp + 8]
0x8085:	xor	rcx, qword ptr fs:[0x28]
0x808e:	mov	eax, ebx
0x8090:	jne	0x80d9


0x807b:	cmp	byte ptr [rax], 0
0x807e:	jne	0x80a0


0x8092:	add	rsp, 0x10
0x8096:	pop	rbx
0x8097:	ret	


0x80d9:	call	0x1c10


0x80a0:	mov	edx, 0xa
0x80a5:	mov	rsi, rsp
0x80a8:	mov	rdi, rax
0x80ab:	call	0x1d50


0x1d50:	jmp	qword ptr [rip + 0x20e18a]




0x82e1:	cmp	r15d, 0xa
0x82e5:	mov	qword ptr [rsp + 0x58], rax
0x82ea:	ja	0x949f


0x82f0:	lea	rcx, [rip + 0x4849]
0x82f7:	mov	edx, r15d
0x82fa:	movsxd	rax, dword ptr [rcx + rdx*4]
0x82fe:	add	rax, rcx
0x8301:	jmp	rax


0x949f:	call	0x1b00


0x9e36:	test	rax, rax
0x9e39:	mov	rbp, rax
0x9e3c:	jns	0x9e60


0x9e3e:	call	0x1b10


0x9e60:	add	rsp, 8
0x9e64:	mov	rax, rbp
0x9e67:	pop	rbx
0x9e68:	pop	rbp
0x9e69:	pop	r12
0x9e6b:	pop	r13
0x9e6d:	ret	


0x5005:	cmp	rax, -1
0x5009:	mov	r12, rax
0x500c:	je	0x5140


0x5140:	mov	rsi, qword ptr [rsp + 8]
0x5145:	mov	edi, 4
0x514a:	call	0x9b20


0x5012:	mov	rsi, qword ptr [rsp]
0x5016:	lea	rax, [r13 + rax]
0x501b:	test	r12, r12
0x501e:	mov	qword ptr [rsi], rax
0x5021:	je	0x5072


0x5072:	cmp	r13, qword ptr [rsp + 0x10]
0x5077:	je	0x5185


0x5023:	movzx	eax, byte ptr [rip + 0x20b0ea]
0x502a:	cmp	byte ptr [rsp + r12 + 0x1f], al
0x502f:	setne	al
0x5032:	movzx	eax, al
0x5035:	sub	r15, rax
0x5038:	movsx	ebp, byte ptr [rip + 0x20b0d5]
0x503f:	mov	rdx, r12
0x5042:	jmp	0x5063


0x5185:	mov	rbx, qword ptr [rsp + 8]
0x518a:	mov	rsi, r13
0x518d:	xor	edx, edx
0x518f:	mov	edi, r14d
0x5192:	mov	rcx, rbx
0x5195:	call	0x4ea0


0x507d:	mov	rcx, qword ptr [rsp + 8]
0x5082:	sub	r13, 0x2000
0x5089:	xor	edx, edx
0x508b:	mov	rsi, r13
0x508e:	mov	edi, r14d
0x5091:	call	0x4ea0


0x5063:	mov	esi, ebp
0x5065:	mov	rdi, rbx
0x5068:	call	0x1e70


0x1e70:	jmp	qword ptr [rip + 0x20e0fa]




0x5096:	mov	edx, 0x2000
0x509b:	mov	rsi, rbx
0x509e:	mov	edi, r14d
0x50a1:	call	0x9e10


0x519a:	mov	rcx, qword ptr [rsp + 0x18]
0x519f:	mov	edx, r14d
0x51a2:	mov	rsi, rbx
0x51a5:	xor	edi, edi
0x51a7:	call	0x4c50


0x50a6:	cmp	rax, -1
0x50aa:	mov	r12, rax
0x50ad:	je	0x5140


0x50b3:	mov	rdi, qword ptr [rsp]
0x50b7:	lea	rax, [r13 + rax]
0x50bc:	test	r12, r12
0x50bf:	mov	qword ptr [rdi], rax
0x50c2:	jne	0x5038


0x5038:	movsx	ebp, byte ptr [rip + 0x20b0d5]
0x503f:	mov	rdx, r12
0x5042:	jmp	0x5063


0x4e04:	test	rax, rax
0x4e07:	jne	0x4de0


0x4e09:	mov	eax, 0xffffffff
0x4e0e:	jmp	0x4e2a


0x4de0:	cmp	rax, -1
0x4de4:	je	0x4e50


0x4e2a:	mov	rcx, qword ptr [rsp + 0x2008]
0x4e32:	xor	rcx, qword ptr fs:[0x28]
0x4e3b:	jne	0x4e93


0x4e50:	mov	rsi, r14
0x4e53:	mov	edi, 4
0x4e58:	call	0x9b20


0x4de6:	add	qword ptr [rbp], rax
0x4dea:	cmp	rax, rbx
0x4ded:	ja	0x4e10


0x4def:	sub	rbx, rax
0x4df2:	je	0x4e28


0x4e10:	sub	rax, rbx
0x4e13:	je	0x4e28


0x4e15:	lea	rdi, [r12 + rbx]
0x4e19:	mov	rsi, rax
0x4e1c:	call	0x4a90


0x4b5c:	test	rax, rax
0x4b5f:	je	0x4bf2


0x4bf2:	mov	eax, 0xffffffff
0x4bf7:	jmp	0x4bb8


0x4b65:	cmp	rax, -1
0x4b69:	je	0x4bf9


0x4bf9:	mov	rsi, qword ptr [rsp + 8]
0x4bfe:	mov	edi, 4
0x4c03:	call	0x9b20


0x4b6f:	add	qword ptr [r14], rax
0x4b72:	movsx	r12d, byte ptr [rip + 0x20b59a]
0x4b7a:	lea	rbp, [r13 + rax]
0x4b7f:	mov	rdi, r13
0x4b82:	nop	word ptr [rax + rax]
0x4b88:	mov	rdx, rbp
0x4b8b:	mov	esi, r12d
0x4b8e:	sub	rdx, rdi
0x4b91:	call	0x1cf0


0x1cf0:	jmp	qword ptr [rip + 0x20e1ba]




0x4cac:	cmp	rax, -1
0x4cb0:	mov	r15, rax
0x4cb3:	je	0x4d20


0x4d20:	call	0x1b10


0x4cb5:	test	rax, rax
0x4cb8:	je	0x4d2d


0x4d2d:	mov	rcx, qword ptr [rsp + 0x2018]
0x4d35:	xor	rcx, qword ptr fs:[0x28]
0x4d3e:	mov	rax, r12
0x4d41:	jne	0x4d55


0x4cba:	test	bpl, bpl
0x4cbd:	je	0x4cf7


0x4d43:	add	rsp, 0x2028
0x4d4a:	pop	rbx
0x4d4b:	pop	rbp
0x4d4c:	pop	r12
0x4d4e:	pop	r13
0x4d50:	pop	r14
0x4d52:	pop	r15
0x4d54:	ret	


0x4d55:	call	0x1c10


0x4cf7:	mov	rsi, r15
0x4cfa:	mov	rdi, r13
0x4cfd:	add	r12, r15
0x4d00:	call	0x4a90


0x4cbf:	cmp	byte ptr [rip + 0x20b34a], 0
0x4cc6:	lea	rax, [rip + 0x8334]
0x4ccd:	lea	rdx, [rip + 0x832c]
0x4cd4:	mov	rcx, qword ptr [rsp + 8]
0x4cd9:	lea	rsi, [rip + 0x6978]
0x4ce0:	mov	edi, 1
0x4ce5:	cmovne	rdx, rax
0x4ce9:	xor	eax, eax
0x4ceb:	call	0x1e50


0x1e50:	jmp	qword ptr [rip + 0x20e10a]




0x4d05:	cmp	r14, -1
0x4d09:	je	0x4d16


0x4d16:	xor	ebp, ebp
0x4d18:	jmp	0x4c90


0x4d0b:	sub	rbx, r15
0x4d0e:	je	0x4d2d


0x4c90:	mov	edi, dword ptr [rsp + 4]
0x4c94:	cmp	rbx, 0x2000
0x4c9b:	mov	edx, 0x2000
0x4ca0:	cmovbe	rdx, rbx
0x4ca4:	mov	rsi, r13
0x4ca7:	call	0x9e10


0x4d10:	cmp	r14, -2
0x4d14:	je	0x4d2d


0x51ac:	add	r13, rax
0x51af:	mov	rax, qword ptr [rsp]
0x51b3:	mov	qword ptr [rax], r13
0x51b6:	mov	eax, 1
0x51bb:	jmp	0x50d5


0x50d5:	mov	rdi, qword ptr [rsp + 0x2028]
0x50dd:	xor	rdi, qword ptr fs:[0x28]
0x50e6:	jne	0x51c0


0x5285:	add	qword ptr [rbx + 8], rax
0x5289:	test	rax, rax
0x528c:	je	0x51f8


0x5292:	mov	rdi, qword ptr [rip + 0x20ae2f]
0x5299:	mov	qword ptr [r12], rbx
0x529d:	call	0x1ef0


0x1ef0:	jmp	qword ptr [rip + 0x20e0ba]




0x6b74:	test	rax, rax
0x6b77:	mov	rcx, rax
0x6b7a:	je	0x6b96


0x6b96:	add	rsp, 8
0x6b9a:	mov	rax, rcx
0x6b9d:	pop	rbx
0x6b9e:	pop	rbp
0x6b9f:	ret	


0x6b7c:	mov	rdx, rbx
0x6b7f:	mov	rsi, rbp
0x6b82:	mov	rdi, rax
0x6b85:	call	0x1d60


0x1d60:	jmp	qword ptr [rip + 0x20e182]




0x7583:	test	rax, rax
0x7586:	mov	rbx, rax
0x7589:	je	0x763a


0x763a:	add	rsp, 8
0x763e:	mov	rax, rbx
0x7641:	pop	rbx
0x7642:	pop	rbp
0x7643:	pop	r12
0x7645:	pop	r13
0x7647:	pop	r14
0x7649:	pop	r15
0x764b:	ret	


0x758f:	test	r15, r15
0x7592:	lea	rdi, [rax + 0x28]
0x7596:	je	0x7650


0x7650:	lea	rax, [rip + 0x53e9]
0x7657:	mov	qword ptr [rbx + 0x28], rax
0x765b:	call	0x6ee0


0x759c:	mov	qword ptr [rax + 0x28], r15
0x75a0:	call	0x6ee0


0x75a5:	test	al, al
0x75a7:	je	0x7630


0x7630:	mov	rdi, rbx
0x7633:	xor	ebx, ebx
0x7635:	call	0x1af0


0x75ad:	cmp	byte ptr [r15 + 0x10], 0
0x75b2:	je	0x76b0


0x76b0:	test	rbp, rbp
0x76b3:	movss	xmm1, dword ptr [r15 + 8]
0x76b9:	jns	0x7671


0x75b8:	mov	rdi, rbp
0x75bb:	call	0x6cd0


0x76bb:	mov	rax, rbp
0x76be:	pxor	xmm0, xmm0
0x76c2:	shr	rax, 1
0x76c5:	and	ebp, 1
0x76c8:	or	rax, rbp
0x76cb:	cvtsi2ss	xmm0, rax
0x76d0:	addss	xmm0, xmm0
0x76d4:	jmp	0x767a


0x7671:	pxor	xmm0, xmm0
0x7675:	cvtsi2ss	xmm0, rbp
0x767a:	divss	xmm0, xmm1
0x767e:	ucomiss	xmm0, dword ptr [rip + 0x53e7]
0x7685:	jae	0x7630


0x767a:	divss	xmm0, xmm1
0x767e:	ucomiss	xmm0, dword ptr [rip + 0x53e7]
0x7685:	jae	0x7630


0x7687:	ucomiss	xmm0, dword ptr [rip + 0x53e2]
0x768e:	jb	0x76e0


0x76e0:	cvttss2si	rbp, xmm0
0x76e5:	jmp	0x75b8


0x7690:	subss	xmm0, dword ptr [rip + 0x53d8]
0x7698:	movabs	rax, 0x8000000000000000
0x76a2:	cvttss2si	rbp, xmm0
0x76a7:	xor	rbp, rax
0x76aa:	jmp	0x75b8


0x75c0:	mov	edx, 8
0x75c5:	mov	rbp, rax
0x75c8:	xor	ecx, ecx
0x75ca:	mov	rax, rdx
0x75cd:	mul	rbp
0x75d0:	jo	0x76ea


0x76ea:	mov	ecx, 1
0x76ef:	jmp	0x75d6


0x75d6:	test	rax, rax
0x75d9:	js	0x7630


0x75db:	test	rcx, rcx
0x75de:	jne	0x7630


0x75e0:	test	rbp, rbp
0x75e3:	mov	qword ptr [rbx + 0x10], rbp
0x75e7:	je	0x7630


0x75e9:	mov	esi, 0x10
0x75ee:	mov	rdi, rbp
0x75f1:	call	0x1d30


0x75f6:	test	rax, rax
0x75f9:	mov	qword ptr [rbx], rax
0x75fc:	je	0x7630


0x75fe:	shl	rbp, 4
0x7602:	mov	qword ptr [rbx + 0x18], 0
0x760a:	mov	qword ptr [rbx + 0x20], 0
0x7612:	add	rbp, rax
0x7615:	mov	qword ptr [rbx + 0x30], r12
0x7619:	mov	qword ptr [rbx + 0x38], r13
0x761d:	mov	qword ptr [rbx + 8], rbp
0x7621:	mov	qword ptr [rbx + 0x40], r14
0x7625:	mov	qword ptr [rbx + 0x48], 0
0x762d:	jmp	0x763a


0x7660:	test	al, al
0x7662:	movss	xmm1, dword ptr [rip + 0x53fe]
0x766a:	je	0x7630


0x766c:	test	rbp, rbp
0x766f:	js	0x76bb


0xa4d9:	test	rax, rax
0xa4dc:	jne	0xa4e3


0xa4de:	test	rbx, rbx
0xa4e1:	jne	0xa4e5


0xa4e3:	pop	rbx
0xa4e4:	ret	


0xa4e5:	call	0xa720


0xa689:	mov	rdx, rbx
0xa68c:	xor	esi, esi
0xa68e:	mov	rdi, rax
0xa691:	pop	rbx
0xa692:	jmp	0x1cd0


0x1cd0:	jmp	qword ptr [rip + 0x20e1ca]




0xa6e4:	add	rsp, 8
0xa6e8:	mov	rdx, rbx
0xa6eb:	mov	rsi, rbp
0xa6ee:	pop	rbx
0xa6ef:	pop	rbp
0xa6f0:	mov	rdi, rax
0xa6f3:	jmp	0x1d60


0x6606:	mov	r14, qword ptr [r15]
0x6609:	mov	qword ptr [rsp], -1
0x6611:	test	r14, r14
0x6614:	je	0x66cd


0x66cd:	mov	rax, qword ptr [rsp]
0x66d1:	add	rsp, 0x28
0x66d5:	pop	rbx
0x66d6:	pop	rbp
0x66d7:	pop	r12
0x66d9:	pop	r13
0x66db:	pop	r14
0x66dd:	pop	r15
0x66df:	ret	


0x661a:	mov	r12, rax
0x661d:	mov	byte ptr [rsp + 0x17], 0
0x6622:	xor	ebx, ebx
0x6624:	jmp	0x6677


0x6677:	mov	rsi, qword ptr [rsp + 8]
0x667c:	mov	rdx, r12
0x667f:	mov	rdi, r14
0x6682:	call	0x1b20


0x1b20:	jmp	qword ptr [rip + 0x20e2a2]




0x68d1:	test	rax, rax
0x68d4:	js	0x68e5


0x68e5:	mov	rdx, rax
0x68e8:	mov	rsi, r12
0x68eb:	mov	rdi, r14
0x68ee:	call	0x6700


0x68d6:	add	rsp, 8
0x68da:	pop	rbx
0x68db:	pop	rbp
0x68dc:	pop	r12
0x68de:	pop	r13
0x68e0:	pop	r14
0x68e2:	pop	r15
0x68e4:	ret	


0x6c19:	cmp	rax, 1
0x6c1d:	jbe	0x6c2a


0x6c2a:	pop	rbx
0x6c2b:	ret	


0x6c1f:	cmp	byte ptr [rbx + rax - 1], 0x2f
0x6c24:	lea	rdx, [rax - 1]
0x6c28:	je	0x6c38


0x6c38:	cmp	rdx, 1
0x6c3c:	je	0x6c50


0x6c50:	mov	eax, 1
0x6c55:	pop	rbx
0x6c56:	ret	


0x6c3e:	cmp	byte ptr [rbx + rdx - 1], 0x2f
0x6c43:	lea	rax, [rdx - 1]
0x6c47:	je	0x6c30


0x6c30:	mov	rdx, rax
0x6c33:	nop	dword ptr [rax + rax]
0x6c38:	cmp	rdx, 1
0x6c3c:	je	0x6c50


0x6c49:	mov	rax, rdx
0x6c4c:	pop	rbx
0x6c4d:	ret	


0xa709:	mov	rdi, rbx
0xa70c:	lea	rsi, [rax + 1]
0xa710:	pop	rbx
0xa711:	jmp	0xa6d0


0x9eff:	lea	rdx, [rip + 0x33da]
0x9f06:	mov	rcx, rax
0x9f09:	mov	r8d, 0x7e3
0x9f0f:	mov	esi, 1
0x9f14:	mov	rdi, rbp
0x9f17:	xor	eax, eax
0x9f19:	call	0x1ee0


0x9f1e:	lea	rsi, [rip + 0x3123]
0x9f25:	xor	edi, edi
0x9f27:	mov	edx, 5
0x9f2c:	call	0x1bd0


0x9f31:	mov	rsi, rbp
0x9f34:	mov	rdi, rax
0x9f37:	call	0x1d20


0x1d20:	jmp	qword ptr [rip + 0x20e1a2]




0x5e94:	mov	rbp, qword ptr [rbx]
0x5e97:	mov	r13, rax
0x5e9a:	mov	rdi, rbp
0x5e9d:	call	0x49e0


0x614d:	mov	rdi, qword ptr [rip + 0x209fac]
0x6154:	mov	rdx, rax
0x6157:	mov	rcx, rbx
0x615a:	mov	esi, 1
0x615f:	xor	eax, eax
0x6161:	call	0x1ee0


0x6166:	mov	edi, ebp
0x6168:	call	0x1ec0


0x1ec0:	jmp	qword ptr [rip + 0x20e0d2]




0x617b:	mov	rdx, rbx
0x617e:	mov	rsi, rax
0x6181:	mov	edi, 1
0x6186:	xor	eax, eax
0x6188:	call	0x1e50


0x6723:	mov	rbx, rax
0x6726:	mov	rsi, rbp
0x6729:	mov	edi, 1
0x672e:	call	0x9dd0


0x676e:	mov	rbx, rax
0x6771:	jmp	0x6726


0x6726:	mov	rsi, rbp
0x6729:	mov	edi, 1
0x672e:	call	0x9dd0


0x67b1:	mov	rdi, rax
0x67b4:	mov	rsi, rbx
0x67b7:	call	0x1d20


0xa464:	lea	rdx, [rip + 0x2bac]
0xa46b:	mov	rsi, rax
0xa46e:	mov	edi, 1
0xa473:	xor	eax, eax
0xa475:	call	0x1e50


0xa737:	mov	edi, dword ptr [rip + 0x205903]
0xa73d:	lea	rdx, [rip + 0x2288]
0xa744:	mov	rcx, rax
0xa747:	xor	esi, esi
0xa749:	xor	eax, eax
0xa74b:	call	0x1e60


0x1e60:	jmp	qword ptr [rip + 0x20e102]




0x4d25:	cmp	dword ptr [rax], 0xb
0x4d28:	mov	rbx, rax
0x4d2b:	jne	0x4d5a


0x4d5a:	mov	rsi, qword ptr [rsp + 8]
0x4d5f:	mov	edi, 4
0x4d64:	call	0x9b20


0x9e43:	mov	eax, dword ptr [rax]
0x9e45:	cmp	eax, 4
0x9e48:	je	0x9e28


0x9e28:	mov	rdx, rbx
0x9e2b:	mov	rsi, r12
0x9e2e:	mov	edi, r13d
0x9e31:	call	0x1d00


0x9e4a:	cmp	rbx, 0x7ff00000
0x9e51:	jbe	0x9e60


0x9e53:	cmp	eax, 0x16
0x9e56:	jne	0x9e60


0x9e58:	mov	ebx, 0x7ff00000
0x9e5d:	jmp	0x9e28


0x69d3:	lea	rsi, [rsp + 0x20]
0x69d8:	mov	rdi, rbp
0x69db:	mov	r12, rax
0x69de:	mov	r13d, dword ptr [rax]
0x69e1:	call	0xb1e0


0x69e6:	mov	rax, qword ptr [rsp + 0x20]
0x69eb:	cmp	qword ptr [rsp + 0x18], rax
0x69f0:	movsd	xmm1, qword ptr [rsp + 8]
0x69f6:	jae	0x6a08


0x69f8:	mov	qword ptr [rsp + 0x18], rax
0x69fd:	movapd	xmm1, xmm0
0x6a01:	jmp	0x6998


0x6a08:	mov	dword ptr [r12], r13d
0x6a0c:	jmp	0x6998


0x53cc:	cmp	dword ptr [rax], 0x26
0x53cf:	mov	r12, rax
0x53d2:	mov	ebx, 1
0x53d7:	jne	0x5470


0x5470:	mov	rsi, rbp
0x5473:	mov	edi, 4
0x5478:	call	0x9b20


0x4f03:	xor	edi, edi
0x4f05:	cmp	ebx, 1
0x4f08:	mov	rbp, rax
0x4f0b:	mov	rdx, r12
0x4f0e:	mov	esi, 3
0x4f13:	je	0x4f50


0x4f50:	call	0x9c20


0x4f15:	call	0x9c20


0xaff6:	mov	r12d, dword ptr [rax]
0xaff9:	mov	rbp, rax
0xaffc:	mov	edi, ebx
0xaffe:	call	0x1ce0


0xb003:	mov	ebx, 0xffffffff
0xb008:	mov	dword ptr [rbp], r12d
0xb00c:	jmp	0xaee0


0xb01d:	cmp	dword ptr [rax], 0x16
0xb020:	jne	0xae8f


0xb026:	xor	esi, esi
0xb028:	xor	eax, eax
0xb02a:	mov	edx, r12d
0xb02d:	mov	edi, ebp
0xb02f:	call	0x1b70


0xb034:	test	eax, eax
0xb036:	mov	ebx, eax
0xb038:	js	0xaee0


0xb03e:	mov	dword ptr [rip + 0x205230], 0xffffffff
0xb048:	jmp	0xafc3


0x52e5:	mov	eax, dword ptr [rax]
0x52e7:	mov	edi, dword ptr [rbx + 0x38]
0x52ea:	mov	rsi, r13
0x52ed:	mov	dword ptr [rbx + 0x3c], eax
0x52f0:	call	0x4a20


0x52f5:	mov	dword ptr [rbx + 0x38], 0xffffffff
0x52fc:	jmp	0x51f8


0xa8bc:	mov	rbx, rax
0xa8bf:	jmp	0xa8d0


0xa8d0:	xor	esi, esi
0xa8d2:	mov	dword ptr [rbx], 0
0xa8d8:	mov	rdi, rbp
0xa8db:	call	0xb110


0xa8e0:	test	eax, eax
0xa8e2:	jne	0xa8c8


0xa8e4:	mov	rdx, qword ptr [rsp + 0x18]
0xa8e9:	xor	rdx, qword ptr fs:[0x28]
0xa8f2:	jne	0xa907


0xa8c8:	test	dword ptr [rbx], 0xfffffffb
0xa8ce:	jne	0xa900


0xa8f4:	add	rsp, 0x28
0xa8f8:	pop	rbx
0xa8f9:	pop	rbp
0xa8fa:	ret	


0xa907:	call	0x1c10


0xa900:	mov	eax, 0xffffffff
0xa905:	jmp	0xa8e4


0x5db4:	mov	eax, dword ptr [rax]
0x5db6:	mov	dword ptr [rbx + 0x3c], eax
0x5db9:	cmp	byte ptr [rsp + 7], 0
0x5dbe:	je	0x5ba1


0x5dc4:	mov	rdi, rbp
0x5dc7:	call	0x49e0


0x5dcc:	mov	edi, 4
0x5dd1:	mov	rsi, rax
0x5dd4:	call	0x9b20


0x5b59:	mov	r13, rax
0x5b5c:	mov	eax, dword ptr [rax]
0x5b5e:	test	r15b, r15b
0x5b61:	mov	dword ptr [rbx + 0x3c], eax
0x5b64:	je	0x5db9


0x5db9:	cmp	byte ptr [rsp + 7], 0
0x5dbe:	je	0x5ba1


0x5b6a:	cmp	dword ptr [r13], r14d
0x5b6e:	je	0x5ba1


0x5b70:	mov	rdi, rbp
0x5b73:	call	0x49e0


0x5b78:	mov	esi, 3
0x5b7d:	mov	rdx, rax
0x5b80:	xor	edi, edi
0x5b82:	call	0x9c20


0xaa28:	mov	dword ptr [rax], 0
0xaa2e:	mov	r12, rax
0xaa31:	movzx	ebx, byte ptr [rbp]
0xaa35:	call	0x1f30


0x1f30:	jmp	qword ptr [rip + 0x20e09a]




0xb1c5:	mov	dword ptr [rax], 0x16
0xb1cb:	mov	eax, 0xffffffff
0xb1d0:	jmp	0xb1a7


0x94d1:	mov	r13, rax
0x94d4:	mov	eax, dword ptr [rax]
0x94d6:	test	r15d, r15d
0x94d9:	mov	rbx, qword ptr [rip + 0x206bc0]
0x94e0:	mov	dword ptr [rsp + 0x18], eax
0x94e4:	js	0x9651


0x9651:	call	0x1b00


0x94ea:	cmp	dword ptr [rip + 0x206ba7], r15d
0x94f1:	jg	0x9555


0x94f3:	cmp	r15d, 0x7fffffff
0x94fa:	je	0x9656


0x9555:	mov	eax, dword ptr [rbp + 4]
0x9558:	shl	r15, 4
0x955c:	sub	rsp, 8
0x9560:	add	rbx, r15
0x9563:	lea	r15, [rbp + 8]
0x9567:	mov	r8d, dword ptr [rbp]
0x956b:	mov	r11, qword ptr [rbx]
0x956e:	mov	r12, qword ptr [rbx + 8]
0x9572:	mov	rcx, r14
0x9575:	or	eax, 1
0x9578:	mov	dword ptr [rsp + 0x24], eax
0x957c:	push	qword ptr [rbp + 0x30]
0x957f:	mov	r9d, eax
0x9582:	push	qword ptr [rbp + 0x28]
0x9585:	push	r15
0x9587:	mov	rsi, r11
0x958a:	mov	rdx, qword ptr [rsp + 0x28]
0x958f:	mov	rdi, r12
0x9592:	mov	qword ptr [rsp + 0x30], r11
0x9597:	call	0x8270


0x9656:	call	0xa720


0x9500:	lea	r12d, [r15 + 1]
0x9504:	lea	rax, [rip + 0x206ba5]
0x950b:	movsxd	rsi, r12d
0x950e:	shl	rsi, 4
0x9512:	cmp	rbx, rax
0x9515:	je	0x9630


0x9630:	xor	edi, edi
0x9632:	call	0xa530


0x951b:	mov	rdi, rbx
0x951e:	call	0xa530


0x9523:	mov	rbx, rax
0x9526:	mov	qword ptr [rip + 0x206b73], rax
0x952d:	movsxd	rdi, dword ptr [rip + 0x206b64]
0x9534:	mov	edx, r12d
0x9537:	xor	esi, esi
0x9539:	sub	edx, edi
0x953b:	shl	rdi, 4
0x953f:	movsxd	rdx, edx
0x9542:	add	rdi, rbx
0x9545:	shl	rdx, 4
0x9549:	call	0x1cd0


0x9637:	movdqa	xmm0, xmmword ptr [rip + 0x206a71]
0x963f:	mov	rbx, rax
0x9642:	mov	qword ptr [rip + 0x206a57], rax
0x9649:	movups	xmmword ptr [rax], xmm0
0x964c:	jmp	0x952d


0x952d:	movsxd	rdi, dword ptr [rip + 0x206b64]
0x9534:	mov	edx, r12d
0x9537:	xor	esi, esi
0x9539:	sub	edx, edi
0x953b:	shl	rdi, 4
0x953f:	movsxd	rdx, edx
0x9542:	add	rdi, rbx
0x9545:	shl	rdx, 4
0x9549:	call	0x1cd0


0x966c:	mov	r12d, dword ptr [rax]
0x966f:	mov	rbp, rax
0x9672:	lea	rax, [rip + 0x206bc7]
0x9679:	test	rbx, rbx
0x967c:	mov	esi, 0x38
0x9681:	cmove	rbx, rax
0x9685:	mov	rdi, rbx
0x9688:	call	0xa6d0


0x97a2:	mov	r12d, dword ptr [rax]
0x97a5:	mov	rbp, rax
0x97a8:	lea	rax, [rbx + 8]
0x97ac:	sub	rsp, 8
0x97b0:	mov	r9d, dword ptr [rbx + 4]
0x97b4:	push	qword ptr [rbx + 0x30]
0x97b7:	mov	r8d, dword ptr [rbx]
0x97ba:	push	qword ptr [rbx + 0x28]
0x97bd:	mov	rdx, r15
0x97c0:	push	rax
0x97c1:	mov	rcx, qword ptr [rsp + 0x28]
0x97c6:	mov	rsi, r14
0x97c9:	mov	rdi, r13
0x97cc:	call	0x8270


0x981f:	test	r12, r12
0x9822:	mov	r13, rax
0x9825:	mov	eax, dword ptr [rax]
0x9827:	sete	bpl
0x982b:	or	ebp, dword ptr [rbx + 4]
0x982e:	lea	r10, [rbx + 8]
0x9832:	sub	rsp, 8
0x9836:	mov	r8d, dword ptr [rbx]
0x9839:	mov	rcx, r15
0x983c:	mov	dword ptr [rsp + 0x14], eax
0x9840:	push	qword ptr [rbx + 0x30]
0x9843:	mov	rdx, r14
0x9846:	push	qword ptr [rbx + 0x28]
0x9849:	push	r10
0x984b:	xor	esi, esi
0x984d:	mov	r9d, ebp
0x9850:	xor	edi, edi
0x9852:	mov	qword ptr [rsp + 0x40], r10
0x9857:	call	0x8270


0xa93d:	mov	rsi, rsp
0xa940:	mov	r12, rax
0xa943:	mov	dword ptr [rax], 0
0xa949:	mov	rdi, rbp
0xa94c:	call	r14


0xb0b7:	cmp	rax, -3
0xb0bb:	mov	rbp, rax
0xb0be:	jbe	0xb0e0


0xb0e0:	mov	rdx, qword ptr [rsp + 8]
0xb0e5:	xor	rdx, qword ptr fs:[0x28]
0xb0ee:	mov	rax, rbp
0xb0f1:	jne	0xb0fe


0xb0c0:	test	r12, r12
0xb0c3:	je	0xb0e0


0xb0f3:	add	rsp, 0x18
0xb0f7:	pop	rbx
0xb0f8:	pop	rbp
0xb0f9:	pop	r12
0xb0fb:	pop	r13
0xb0fd:	ret	


0xb0fe:	call	0x1c10


0xb0c5:	xor	edi, edi
0xb0c7:	call	0xb390


0xb25c:	mov	ebx, dword ptr [rbp]
0xb25f:	mov	rdi, rbp
0xb262:	mov	r12, rax
0xb265:	call	0xb440


0x1f9e:	lea	rsi, [rip + 0x9831]
0x1fa5:	lea	rdi, [rip + 0x97ff]
0x1fac:	call	0x1bc0


0x1bc0:	jmp	qword ptr [rip + 0x20e252]




0xb39b:	mov	rdx, rax
0xb39e:	mov	eax, 1
0xb3a3:	test	rdx, rdx
0xb3a6:	je	0xb3c5


0xb3c5:	add	rsp, 8
0xb3c9:	ret	


0xb3a8:	lea	rdi, [rip + 0x20a4]
0xb3af:	mov	ecx, 2
0xb3b4:	mov	rsi, rdx
0xb3b7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb3b7:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb3b9:	seta	cl
0xb3bc:	sbb	cl, 0
0xb3bf:	xor	eax, eax
0xb3c1:	test	cl, cl
0xb3c3:	jne	0xb3d0


0xb3d0:	lea	rdi, [rip + 0x2099]
0xb3d7:	mov	ecx, 6
0xb3dc:	mov	rsi, rdx
0xb3df:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb3df:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0xb3e1:	seta	al
0xb3e4:	sbb	al, 0
0xb3e6:	test	al, al
0xb3e8:	setne	al
0xb3eb:	add	rsp, 8
0xb3ef:	ret	


0xb0cc:	test	al, al
0xb0ce:	jne	0xb0e0


0xb0d0:	movzx	eax, byte ptr [r13]
0xb0d5:	mov	ebp, 1
0xb0da:	mov	dword ptr [rbx], eax
0xb0dc:	nop	dword ptr [rax]
0xb0e0:	mov	rdx, qword ptr [rsp + 8]
0xb0e5:	xor	rdx, qword ptr fs:[0x28]
0xb0ee:	mov	rax, rbp
0xb0f1:	jne	0xb0fe


0xb3fe:	test	rax, rax
0xb401:	je	0xb420


0xb420:	lea	rax, [rip + 0x204f]
0xb427:	add	rsp, 8
0xb42b:	ret	


0xb403:	cmp	byte ptr [rax], 0
0xb406:	lea	rdx, [rip + 0x2069]
0xb40d:	cmove	rax, rdx
0xb411:	add	rsp, 8
0xb415:	ret	


0x8190:	movzx	edx, byte ptr [rax]
0x8193:	and	edx, 0xffffffdf
0x8196:	cmp	dl, 0x55
0x8199:	je	0x8210


0x8210:	movzx	edx, byte ptr [rax + 1]
0x8214:	and	edx, 0xffffffdf
0x8217:	cmp	dl, 0x54
0x821a:	jne	0x81a0


0x819b:	cmp	dl, 0x47
0x819e:	je	0x81c0


0x821c:	movzx	edx, byte ptr [rax + 2]
0x8220:	and	edx, 0xffffffdf
0x8223:	cmp	dl, 0x46
0x8226:	jne	0x81a0


0x81a0:	lea	rax, [rip + 0x493c]
0x81a7:	lea	rdx, [rip + 0x4937]
0x81ae:	cmp	ebx, 9
0x81b1:	cmovne	rax, rdx
0x81b5:	add	rsp, 8
0x81b9:	pop	rbx
0x81ba:	pop	rbp
0x81bb:	ret	


0x81c0:	movzx	edx, byte ptr [rax + 1]
0x81c4:	and	edx, 0xffffffdf
0x81c7:	cmp	dl, 0x42
0x81ca:	jne	0x81a0


0x822c:	cmp	byte ptr [rax + 3], 0x2d
0x8230:	jne	0x81a0


0x81cc:	cmp	byte ptr [rax + 2], 0x31
0x81d0:	jne	0x81a0


0x8236:	cmp	byte ptr [rax + 4], 0x38
0x823a:	jne	0x81a0


0x81d2:	cmp	byte ptr [rax + 3], 0x38
0x81d6:	jne	0x81a0


0x8240:	cmp	byte ptr [rax + 5], 0
0x8244:	jne	0x81a0


0x81d8:	cmp	byte ptr [rax + 4], 0x30
0x81dc:	jne	0x81a0


0x824a:	cmp	byte ptr [rbp], 0x60
0x824e:	lea	rax, [rip + 0x487f]
0x8255:	lea	rdx, [rip + 0x487c]
0x825c:	cmovne	rax, rdx
0x8260:	add	rsp, 8
0x8264:	pop	rbx
0x8265:	pop	rbp
0x8266:	ret	


0x81de:	cmp	byte ptr [rax + 5], 0x33
0x81e2:	jne	0x81a0


0x81e4:	cmp	byte ptr [rax + 6], 0x30
0x81e8:	jne	0x81a0


0x81ea:	cmp	byte ptr [rax + 7], 0
0x81ee:	jne	0x81a0


0x81f0:	cmp	byte ptr [rbp], 0x60
0x81f4:	lea	rax, [rip + 0x48e1]
0x81fb:	lea	rdx, [rip + 0x48de]
0x8202:	cmovne	rax, rdx
0x8206:	add	rsp, 8
0x820a:	pop	rbx
0x820b:	pop	rbp
0x820c:	ret	


0xb533:	mov	edx, r12d
0xb536:	mov	rsi, rbp
0xb539:	mov	edi, eax
0xb53b:	call	0x1ca0


0xb540:	cmp	rax, -1
0xb544:	je	0xb552


0xb552:	pop	rbx
0xb553:	pop	rbp
0xb554:	pop	r12
0xb556:	ret	


0xb546:	and	dword ptr [rbx], 0xffffffef
0xb549:	mov	qword ptr [rbx + 0x90], rax
0xb550:	xor	eax, eax
0xb552:	pop	rbx
0xb553:	pop	rbp
0xb554:	pop	r12
0xb556:	ret	


0xb4f7:	mov	rdi, rbx
0xb4fa:	pop	rbx
0xb4fb:	jmp	0x1dd0


0xb44c:	test	eax, eax
0xb44e:	mov	rdi, rbx
0xb451:	js	0xb4a7


0xb4a7:	pop	rbx
0xb4a8:	pop	rbp
0xb4a9:	pop	r12
0xb4ab:	jmp	0x1bb0


0xb453:	call	0x1e10


0x1bb0:	jmp	qword ptr [rip + 0x20e25a]




0xb458:	test	eax, eax
0xb45a:	jne	0xb488


0xb45c:	mov	rdi, rbx
0xb45f:	call	0xb4c0


0xb488:	mov	rdi, rbx
0xb48b:	call	0x1d90


0xb490:	xor	esi, esi
0xb492:	mov	edx, 1
0xb497:	mov	edi, eax
0xb499:	call	0x1ca0


0xb49e:	cmp	rax, -1
0xb4a2:	jne	0xb45c


0xb4a4:	mov	rdi, rbx
0xb4a7:	pop	rbx
0xb4a8:	pop	rbp
0xb4a9:	pop	r12
0xb4ab:	jmp	0x1bb0


0xb464:	test	eax, eax
0xb466:	je	0xb4a4


0xb468:	call	0x1b10


0xb46d:	mov	r12d, dword ptr [rax]
0xb470:	mov	rdi, rbx
0xb473:	mov	rbp, rax
0xb476:	call	0x1bb0


0xb47b:	test	r12d, r12d
0xb47e:	jne	0xb4b0


0xb480:	pop	rbx
0xb481:	pop	rbp
0xb482:	pop	r12
0xb484:	ret	


0xb4b0:	mov	dword ptr [rbp], r12d
0xb4b4:	mov	eax, 0xffffffff
0xb4b9:	jmp	0xb480


0x1fb1:	lea	rdi, [rip + 0x97f3]
0x1fb8:	call	0x1b90


0x1b90:	jmp	qword ptr [rip + 0x20e26a]




0xb26a:	and	ebx, 0x20
0xb26d:	test	ebx, ebx
0xb26f:	jne	0xb288


0xb271:	test	eax, eax
0xb273:	je	0xb27f


0xb288:	test	eax, eax
0xb28a:	jne	0xb2a8


0xb27f:	pop	rbx
0xb280:	pop	rbp
0xb281:	pop	r12
0xb283:	ret	


0xb275:	test	r12, r12
0xb278:	mov	eax, 0xffffffff
0xb27d:	je	0xb2b8


0xb28c:	call	0x1b10


0xb2a8:	pop	rbx
0xb2a9:	mov	eax, 0xffffffff
0xb2ae:	pop	rbp
0xb2af:	pop	r12
0xb2b1:	ret	


0xb2b8:	call	0x1b10


0xb2bd:	cmp	dword ptr [rax], 9
0xb2c0:	pop	rbx
0xb2c1:	pop	rbp
0xb2c2:	pop	r12
0xb2c4:	setne	al
0xb2c7:	movzx	eax, al
0xb2ca:	neg	eax
0xb2cc:	ret	


0xb291:	mov	dword ptr [rax], 0
0xb297:	mov	eax, 0xffffffff
0xb29c:	pop	rbx
0xb29d:	pop	rbp
0xb29e:	pop	r12
0xb2a0:	ret	


0x968d:	mov	dword ptr [rbp], r12d
0x9691:	pop	rbx
0x9692:	pop	rbp
0x9693:	pop	r12
0x9695:	ret	


0x954e:	mov	dword ptr [rip + 0x206b43], r12d
0x9555:	mov	eax, dword ptr [rbp + 4]
0x9558:	shl	r15, 4
0x955c:	sub	rsp, 8
0x9560:	add	rbx, r15
0x9563:	lea	r15, [rbp + 8]
0x9567:	mov	r8d, dword ptr [rbp]
0x956b:	mov	r11, qword ptr [rbx]
0x956e:	mov	r12, qword ptr [rbx + 8]
0x9572:	mov	rcx, r14
0x9575:	or	eax, 1
0x9578:	mov	dword ptr [rsp + 0x24], eax
0x957c:	push	qword ptr [rbp + 0x30]
0x957f:	mov	r9d, eax
0x9582:	push	qword ptr [rbp + 0x28]
0x9585:	push	r15
0x9587:	mov	rsi, r11
0x958a:	mov	rdx, qword ptr [rsp + 0x28]
0x958f:	mov	rdi, r12
0x9592:	mov	qword ptr [rsp + 0x30], r11
0x9597:	call	0x8270


0xaa3a:	mov	edx, dword ptr [rsp + 8]
0xaa3e:	mov	rsi, qword ptr [rax]
0xaa41:	mov	rax, rbp
0xaa44:	jmp	0xaa57


0xaa57:	movzx	ecx, bl
0xaa5a:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0xaa5f:	jne	0xaa50


0xaa61:	cmp	bl, 0x2d
0xaa64:	je	0xaab8


0xaa50:	add	rax, 1
0xaa54:	movzx	ebx, byte ptr [rax]
0xaa57:	movzx	ecx, bl
0xaa5a:	test	byte ptr [rsi + rcx*2 + 1], 0x20
0xaa5f:	jne	0xaa50


0xaab8:	mov	ebp, 4
0xaabd:	mov	rdi, qword ptr [rsp + 0x18]
0xaac2:	xor	rdi, qword ptr fs:[0x28]
0xaacb:	mov	eax, ebp
0xaacd:	jne	0xad60


0xaa66:	xor	ecx, ecx
0xaa68:	mov	rsi, r15
0xaa6b:	mov	rdi, rbp
0xaa6e:	call	0x1cc0


0xaad3:	add	rsp, 0x28
0xaad7:	pop	rbx
0xaad8:	pop	rbp
0xaad9:	pop	r12
0xaadb:	pop	r13
0xaadd:	pop	r14
0xaadf:	pop	r15
0xaae1:	ret	


0xad60:	call	0x1c10


0x1cc0:	jmp	qword ptr [rip + 0x20e1d2]




0xa750:	call	0x1b00


0x67bc:	mov	r15, qword ptr [r14]
0x67bf:	test	r15, r15
0x67c2:	je	0x6858


0x6858:	mov	rdi, qword ptr [rip + 0x2098a1]
0x685f:	mov	rax, qword ptr [rdi + 0x28]
0x6863:	cmp	rax, qword ptr [rdi + 0x30]
0x6867:	jae	0x6888


0x67c8:	xor	r13d, r13d
0x67cb:	xor	ebx, ebx
0x67cd:	jmp	0x6808


0x6869:	lea	rdx, [rax + 1]
0x686d:	mov	qword ptr [rdi + 0x28], rdx
0x6871:	mov	byte ptr [rax], 0xa
0x6874:	add	rsp, 8
0x6878:	pop	rbx
0x6879:	pop	rbp
0x687a:	pop	r12
0x687c:	pop	r13
0x687e:	pop	r14
0x6880:	pop	r15
0x6882:	ret	


0x6888:	add	rsp, 8
0x688c:	mov	esi, 0xa
0x6891:	pop	rbx
0x6892:	pop	rbp
0x6893:	pop	r12
0x6895:	pop	r13
0x6897:	pop	r14
0x6899:	pop	r15
0x689b:	jmp	0x1c80


0x6808:	test	rbx, rbx
0x680b:	je	0x67d0


0x1c80:	jmp	qword ptr [rip + 0x20e1f2]


0x67d0:	mov	rdi, r15
0x67d3:	add	rbx, 1
0x67d7:	mov	r13, rbp
0x67da:	call	0x9df0


0x680d:	mov	rdx, r12
0x6810:	mov	rsi, rbp
0x6813:	mov	rdi, r13
0x6816:	call	0x1d10




0x681b:	test	eax, eax
0x681d:	jne	0x67d0


0x681f:	mov	rdi, r15
0x6822:	add	rbx, 1
0x6826:	add	rbp, r12
0x6829:	call	0x9df0


0x9f3c:	cmp	r12, 9
0x9f40:	ja	0xa280


0x9f46:	lea	rdx, [rip + 0x3357]
0x9f4d:	movsxd	rax, dword ptr [rdx + r12*4]
0x9f51:	add	rax, rdx
0x9f54:	jmp	rax


0xa280:	mov	r10, qword ptr [rbx + 0x40]
0xa284:	mov	r9, qword ptr [rbx + 0x38]
0xa288:	mov	edx, 5
0xa28d:	mov	rax, qword ptr [rbx + 0x10]
0xa291:	mov	r8, qword ptr [rbx + 8]
0xa295:	lea	rsi, [rip + 0x2f84]
0xa29c:	mov	r13, qword ptr [rbx + 0x30]
0xa2a0:	mov	r12, qword ptr [rbx + 0x28]
0xa2a4:	mov	r15, qword ptr [rbx + 0x20]
0xa2a8:	mov	r14, qword ptr [rbx + 0x18]
0xa2ac:	mov	qword ptr [rsp + 0x18], r10
0xa2b1:	mov	qword ptr [rsp + 0x10], r9
0xa2b6:	mov	qword ptr [rsp], rax
0xa2ba:	mov	qword ptr [rsp + 8], r8
0xa2bf:	mov	rbx, qword ptr [rbx]
0xa2c2:	jmp	0xa052


0xa052:	xor	edi, edi
0xa054:	call	0x1bd0


0xa059:	mov	r10, qword ptr [rsp + 0x18]
0xa05e:	push	r10
0xa060:	jmp	0x9fa4


0x9fa4:	mov	r9, qword ptr [rsp + 0x18]
0x9fa9:	mov	rdx, rax
0x9fac:	mov	rcx, rbx
0x9faf:	mov	esi, 1
0x9fb4:	mov	rdi, rbp
0x9fb7:	xor	eax, eax
0x9fb9:	push	r9
0x9fbb:	push	r13
0x9fbd:	push	r12
0x9fbf:	push	r15
0x9fc1:	push	r14
0x9fc3:	mov	r9, qword ptr [rsp + 0x30]
0x9fc8:	mov	r8, qword ptr [rsp + 0x38]
0x9fcd:	call	0x1ee0


0x9fd2:	add	rsp, 0x30
0x9fd6:	add	rsp, 0x28
0x9fda:	pop	rbx
0x9fdb:	pop	rbp
0x9fdc:	pop	r12
0x9fde:	pop	r13
0x9fe0:	pop	r14
0x9fe2:	pop	r15
0x9fe4:	ret	


0x6687:	test	eax, eax
0x6689:	jne	0x6667


0x668b:	mov	rdi, r14
0x668e:	call	0x1bf0


0x6667:	add	rbx, 1
0x666b:	add	rbp, r13
0x666e:	mov	r14, qword ptr [r15 + rbx*8]
0x6672:	test	r14, r14
0x6675:	je	0x66b8


0x66b8:	cmp	byte ptr [rsp + 0x17], 0
0x66bd:	mov	rax, -2
0x66c4:	cmove	rax, qword ptr [rsp]
0x66c9:	mov	qword ptr [rsp], rax
0x66cd:	mov	rax, qword ptr [rsp]
0x66d1:	add	rsp, 0x28
0x66d5:	pop	rbx
0x66d6:	pop	rbp
0x66d7:	pop	r12
0x66d9:	pop	r13
0x66db:	pop	r14
0x66dd:	pop	r15
0x66df:	ret	


0x6693:	cmp	rax, r12
0x6696:	je	0x66f0


0x66f0:	mov	qword ptr [rsp], rbx
0x66f4:	jmp	0x66cd


0x6698:	cmp	qword ptr [rsp], -1
0x669d:	jne	0x6630


0x669f:	mov	qword ptr [rsp], rbx
0x66a3:	add	rbx, 1
0x66a7:	add	rbp, r13
0x66aa:	mov	r14, qword ptr [r15 + rbx*8]
0x66ae:	test	r14, r14
0x66b1:	jne	0x6677


0x6630:	mov	rax, qword ptr [rsp + 0x18]
0x6635:	test	rax, rax
0x6638:	je	0x66e0


0x66e0:	mov	byte ptr [rsp + 0x17], 1
0x66e5:	jmp	0x6667


0x663e:	mov	rdi, qword ptr [rsp]
0x6642:	mov	rdx, r13
0x6645:	mov	rsi, rbp
0x6648:	imul	rdi, r13
0x664c:	add	rdi, rax
0x664f:	call	0x1d10


0x6654:	test	eax, eax
0x6656:	movzx	eax, byte ptr [rsp + 0x17]
0x665b:	mov	ecx, 1
0x6660:	cmovne	eax, ecx
0x6663:	mov	byte ptr [rsp + 0x17], al
0x6667:	add	rbx, 1
0x666b:	add	rbp, r13
0x666e:	mov	r14, qword ptr [r15 + rbx*8]
0x6672:	test	r14, r14
0x6675:	je	0x66b8


0x6b8a:	test	rbx, rbx
0x6b8d:	mov	rcx, rax
0x6b90:	je	0x6ba0


0x6ba0:	mov	byte ptr [rax], 0x2e
0x6ba3:	mov	ebx, 1
0x6ba8:	jmp	0x6b92


0x6b92:	mov	byte ptr [rcx + rbx], 0
0x6b96:	add	rsp, 8
0x6b9a:	mov	rax, rcx
0x6b9d:	pop	rbx
0x6b9e:	pop	rbp
0x6b9f:	ret	


0x52a2:	test	eax, eax
0x52a4:	je	0x51f8


0x52aa:	lea	rsi, [rip + 0x63e5]
0x52b1:	mov	edx, 5
0x52b6:	xor	edi, edi
0x52b8:	call	0x1bd0


0x52bd:	mov	rbx, rax
0x52c0:	call	0x1b10


0x52c5:	mov	esi, dword ptr [rax]
0x52c7:	mov	rdx, rbx
0x52ca:	mov	edi, 1
0x52cf:	xor	eax, eax
0x52d1:	call	0x1e60


0xa47a:	lea	rsi, [rip + 0x2bac]
0xa481:	mov	edx, 5
0xa486:	xor	edi, edi
0xa488:	call	0x1bd0


0xa48d:	lea	rcx, [rip + 0x2164]
0xa494:	lea	rdx, [rip + 0x130c]
0xa49b:	mov	rsi, rax
0xa49e:	mov	edi, 1
0xa4a3:	xor	eax, eax
0xa4a5:	call	0x1e50


0xa4aa:	mov	rbx, qword ptr [rip + 0x205c17]
0xa4b1:	lea	rsi, [rip + 0x2da8]
0xa4b8:	xor	edi, edi
0xa4ba:	mov	edx, 5
0xa4bf:	call	0x1bd0


0xa4c4:	mov	rsi, rbx
0xa4c7:	mov	rdi, rax
0xa4ca:	pop	rbx
0xa4cb:	jmp	0x1d20


0x618d:	lea	rsi, [rip + 0x5a3c]
0x6194:	xor	edi, edi
0x6196:	mov	edx, 5
0x619b:	call	0x1bd0


0x61a0:	mov	edx, 0xa
0x61a5:	mov	rsi, rax
0x61a8:	mov	edi, 1
0x61ad:	xor	eax, eax
0x61af:	call	0x1e50


0x61b4:	mov	rbx, qword ptr [rip + 0x209f0d]
0x61bb:	lea	rsi, [rip + 0x5a96]
0x61c2:	mov	edx, 5
0x61c7:	xor	edi, edi
0x61c9:	call	0x1bd0


0x61ce:	mov	rsi, rbx
0x61d1:	mov	rdi, rax
0x61d4:	call	0x1d20


0x61d9:	mov	rbx, qword ptr [rip + 0x209ee8]
0x61e0:	lea	rsi, [rip + 0x5aa9]
0x61e7:	mov	edx, 5
0x61ec:	xor	edi, edi
0x61ee:	call	0x1bd0


0x61f3:	mov	rsi, rbx
0x61f6:	mov	rdi, rax
0x61f9:	call	0x1d20


0x61fe:	mov	rbx, qword ptr [rip + 0x209ec3]
0x6205:	lea	rsi, [rip + 0x5ad4]
0x620c:	mov	edx, 5
0x6211:	xor	edi, edi
0x6213:	call	0x1bd0


0x6218:	mov	rsi, rbx
0x621b:	mov	rdi, rax
0x621e:	call	0x1d20


0x6223:	mov	rbx, qword ptr [rip + 0x209e9e]
0x622a:	lea	rsi, [rip + 0x5b47]
0x6231:	mov	edx, 5
0x6236:	xor	edi, edi
0x6238:	call	0x1bd0


0x623d:	mov	rsi, rbx
0x6240:	mov	rdi, rax
0x6243:	call	0x1d20


0x6248:	lea	rsi, [rip + 0x5c19]
0x624f:	xor	edi, edi
0x6251:	mov	edx, 5
0x6256:	call	0x1bd0


0x625b:	mov	ecx, 5
0x6260:	mov	rsi, rax
0x6263:	mov	edx, 0xa
0x6268:	mov	edi, 1
0x626d:	xor	eax, eax
0x626f:	call	0x1e50


0x6274:	mov	rbx, qword ptr [rip + 0x209e4d]
0x627b:	lea	rsi, [rip + 0x5e16]
0x6282:	mov	edx, 5
0x6287:	xor	edi, edi
0x6289:	call	0x1bd0


0x628e:	mov	rsi, rbx
0x6291:	mov	rdi, rax
0x6294:	call	0x1d20


0x6299:	mov	rbx, qword ptr [rip + 0x209e28]
0x62a0:	lea	rsi, [rip + 0x5ec9]
0x62a7:	mov	edx, 5
0x62ac:	xor	edi, edi
0x62ae:	call	0x1bd0


0x62b3:	mov	rsi, rbx
0x62b6:	mov	rdi, rax
0x62b9:	call	0x1d20


0x62be:	mov	rbx, qword ptr [rip + 0x209e03]
0x62c5:	lea	rsi, [rip + 0x5ff4]
0x62cc:	mov	edx, 5
0x62d1:	xor	edi, edi
0x62d3:	call	0x1bd0


0x62d8:	mov	rsi, rbx
0x62db:	mov	rdi, rax
0x62de:	call	0x1d20


0x62e3:	mov	rbx, qword ptr [rip + 0x209dde]
0x62ea:	lea	rsi, [rip + 0x600f]
0x62f1:	mov	edx, 5
0x62f6:	xor	edi, edi
0x62f8:	call	0x1bd0


0x62fd:	mov	rsi, rbx
0x6300:	mov	rdi, rax
0x6303:	call	0x1d20


0x6308:	mov	rbx, qword ptr [rip + 0x209db9]
0x630f:	lea	rsi, [rip + 0x601a]
0x6316:	mov	edx, 5
0x631b:	xor	edi, edi
0x631d:	call	0x1bd0


0x6322:	mov	rsi, rbx
0x6325:	mov	rdi, rax
0x6328:	call	0x1d20


0x632d:	mov	rbx, qword ptr [rip + 0x209d94]
0x6334:	lea	rsi, [rip + 0x602d]
0x633b:	mov	edx, 5
0x6340:	xor	edi, edi
0x6342:	call	0x1bd0


0x6347:	mov	rsi, rbx
0x634a:	mov	rdi, rax
0x634d:	call	0x1d20


0x6352:	mov	rbx, qword ptr [rip + 0x209d6f]
0x6359:	lea	rsi, [rip + 0x60e0]
0x6360:	mov	edx, 5
0x6365:	xor	edi, edi
0x6367:	call	0x1bd0


0x636c:	mov	rsi, rbx
0x636f:	mov	rdi, rax
0x6372:	lea	rbx, [rip + 0x53b3]
0x6379:	call	0x1d20


0x637e:	lea	rax, [rip + 0x53ac]
0x6385:	lea	rcx, [rip + 0x53e6]
0x638c:	mov	qword ptr [rsp + 0x60], 0
0x6395:	mov	qword ptr [rsp + 0x68], 0
0x639e:	mov	rdx, rsp
0x63a1:	mov	qword ptr [rsp], rax
0x63a5:	lea	rax, [rip + 0x5387]
0x63ac:	mov	qword ptr [rsp + 0x30], rcx
0x63b1:	lea	rcx, [rip + 0x53c4]
0x63b8:	mov	qword ptr [rsp + 8], rax
0x63bd:	lea	rax, [rip + 0x53e7]
0x63c4:	mov	qword ptr [rsp + 0x40], rcx
0x63c9:	lea	rcx, [rip + 0x53b6]
0x63d0:	mov	qword ptr [rsp + 0x10], rax
0x63d5:	lea	rax, [rip + 0x5367]
0x63dc:	mov	qword ptr [rsp + 0x50], rcx
0x63e1:	mov	qword ptr [rsp + 0x18], rax
0x63e6:	lea	rax, [rip + 0x536c]
0x63ed:	mov	qword ptr [rsp + 0x20], rax
0x63f2:	lea	rax, [rip + 0x536a]
0x63f9:	mov	qword ptr [rsp + 0x28], rax
0x63fe:	mov	qword ptr [rsp + 0x38], rax
0x6403:	mov	qword ptr [rsp + 0x48], rax
0x6408:	mov	qword ptr [rsp + 0x58], rax
0x640d:	nop	dword ptr [rax]
0x6410:	add	rdx, 0x10
0x6414:	mov	rdi, qword ptr [rdx]
0x6417:	test	rdi, rdi
0x641a:	je	0x642f


0x642f:	mov	r12, qword ptr [rdx + 8]
0x6433:	xor	edi, edi
0x6435:	mov	edx, 5
0x643a:	lea	rsi, [rip + 0x534f]
0x6441:	test	r12, r12
0x6444:	je	0x650b


0x641c:	mov	ecx, 5
0x6421:	mov	rsi, rbx
0x6424:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x650b:	call	0x1bd0


0x644a:	call	0x1bd0


0x6424:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x6426:	seta	al
0x6429:	sbb	al, 0
0x642b:	test	al, al
0x642d:	jne	0x6410


0x6410:	add	rdx, 0x10
0x6414:	mov	rdi, qword ptr [rdx]
0x6417:	test	rdi, rdi
0x641a:	je	0x642f


0x644f:	lea	rcx, [rip + 0x61a2]
0x6456:	lea	rdx, [rip + 0x534a]
0x645d:	mov	rsi, rax
0x6460:	mov	edi, 1
0x6465:	xor	eax, eax
0x6467:	call	0x1e50


0x6510:	lea	rcx, [rip + 0x60e1]
0x6517:	lea	rdx, [rip + 0x5289]
0x651e:	mov	rsi, rax
0x6521:	mov	edi, 1
0x6526:	xor	eax, eax
0x6528:	call	0x1e50


0x652d:	xor	esi, esi
0x652f:	mov	edi, 5
0x6534:	call	0x1e40


0x6539:	test	rax, rax
0x653c:	je	0x6556


0x6556:	lea	rsi, [rip + 0x525c]
0x655d:	mov	edx, 5
0x6562:	xor	edi, edi
0x6564:	lea	r12, [rip + 0x51c1]
0x656b:	lea	rbx, [rip + 0x51db]
0x6572:	call	0x1bd0


0x653e:	lea	rsi, [rip + 0x5270]
0x6545:	mov	edx, 3
0x654a:	mov	rdi, rax
0x654d:	call	0x1b20


0x6552:	test	eax, eax
0x6554:	jne	0x6599


0x6599:	lea	r12, [rip + 0x518c]
0x65a0:	mov	r13, qword ptr [rip + 0x209b21]
0x65a7:	lea	rsi, [rip + 0x6072]
0x65ae:	xor	edi, edi
0x65b0:	mov	edx, 5
0x65b5:	call	0x1bd0


0x65ba:	mov	rsi, r13
0x65bd:	mov	rdi, rax
0x65c0:	call	0x1d20


0x65c5:	jmp	0x6499


0x6499:	lea	rsi, [rip + 0x5319]
0x64a0:	xor	edi, edi
0x64a2:	mov	edx, 5
0x64a7:	call	0x1bd0


0x64ac:	lea	rcx, [rip + 0x5279]
0x64b3:	lea	rdx, [rip + 0x613e]
0x64ba:	mov	rsi, rax
0x64bd:	mov	edi, 1
0x64c2:	xor	eax, eax
0x64c4:	call	0x1e50


0x6577:	lea	rcx, [rip + 0x51ae]
0x657e:	lea	rdx, [rip + 0x6073]
0x6585:	mov	rsi, rax
0x6588:	mov	edi, 1
0x658d:	xor	eax, eax
0x658f:	call	0x1e50


0x6594:	jmp	0x64de


0x64de:	lea	rsi, [rip + 0x6183]
0x64e5:	xor	edi, edi
0x64e7:	mov	edx, 5
0x64ec:	call	0x1bd0


0x64f1:	mov	rcx, rbx
0x64f4:	mov	rsi, rax
0x64f7:	mov	rdx, r12
0x64fa:	mov	edi, 1
0x64ff:	xor	eax, eax
0x6501:	call	0x1e50


0x6506:	jmp	0x6166


0x64c9:	cmp	r12, rbx
0x64cc:	lea	rcx, [rip + 0x527a]
0x64d3:	lea	rbx, [rip + 0x6b27]
0x64da:	cmove	rbx, rcx
0x64de:	lea	rsi, [rip + 0x6183]
0x64e5:	xor	edi, edi
0x64e7:	mov	edx, 5
0x64ec:	call	0x1bd0


0x646c:	xor	esi, esi
0x646e:	mov	edi, 5
0x6473:	call	0x1e40


0x6478:	test	rax, rax
0x647b:	je	0x6499


0x647d:	lea	rsi, [rip + 0x5331]
0x6484:	mov	edx, 3
0x6489:	mov	rdi, rax
0x648c:	call	0x1b20


0x6491:	test	eax, eax
0x6493:	jne	0x65a0


0x65a0:	mov	r13, qword ptr [rip + 0x209b21]
0x65a7:	lea	rsi, [rip + 0x6072]
0x65ae:	xor	edi, edi
0x65b0:	mov	edx, 5
0x65b5:	call	0x1bd0


0x4cf0:	mov	byte ptr [rip + 0x20b319], 0
0x4cf7:	mov	rsi, r15
0x4cfa:	mov	rdi, r13
0x4cfd:	add	r12, r15
0x4d00:	call	0x4a90


0x4b96:	test	rax, rax
0x4b99:	je	0x4b4c


0x4b4c:	mov	edx, 0x2000
0x4b51:	mov	rsi, r13
0x4b54:	mov	edi, r15d
0x4b57:	call	0x9e10


0x4b9b:	sub	rbx, 1
0x4b9f:	lea	rdi, [rax + 1]
0x4ba3:	jne	0x4b88


0x4ba5:	xor	eax, eax
0x4ba7:	cmp	rbp, rdi
0x4baa:	jbe	0x4bb8


0x4b88:	mov	rdx, rbp
0x4b8b:	mov	esi, r12d
0x4b8e:	sub	rdx, rdi
0x4b91:	call	0x1cf0


0x4bac:	sub	rbp, rdi
0x4baf:	jne	0x4be0


0x4be0:	mov	rsi, rbp
0x4be3:	mov	dword ptr [rsp + 8], eax
0x4be7:	call	0x4a90


0x4bec:	mov	eax, dword ptr [rsp + 8]
0x4bf0:	jmp	0x4bb8


0x506d:	test	rax, rax
0x5070:	jne	0x5048


0x5048:	mov	rdx, rax
0x504b:	lea	rcx, [r15 - 1]
0x504f:	sub	rdx, rbx
0x5052:	test	r15, r15
0x5055:	je	0x5100


0x5100:	lea	rsi, [r12 - 1]
0x5105:	cmp	rsi, rdx
0x5108:	je	0x5116


0x505b:	test	rdx, rdx
0x505e:	mov	r15, rcx
0x5061:	je	0x5072


0x5116:	mov	rcx, qword ptr [rsp + 0x18]
0x511b:	mov	rsi, qword ptr [rsp + 8]
0x5120:	mov	edx, r14d
0x5123:	xor	edi, edi
0x5125:	sub	rcx, r12
0x5128:	sub	rcx, r13
0x512b:	call	0x4c50


0x510a:	lea	rdi, [rax + 1]
0x510e:	sub	rsi, rdx
0x5111:	call	0x4a90


0x5130:	mov	rbx, qword ptr [rsp]
0x5134:	add	qword ptr [rbx], rax
0x5137:	mov	eax, 1
0x513c:	jmp	0x50d5


0x80b0:	mov	rdx, qword ptr [rsp]
0x80b4:	cmp	byte ptr [rdx], 0
0x80b7:	jne	0x8080


0x80b9:	cmp	rax, -0x80000000
0x80bf:	jl	0x80d2


0x80d2:	mov	ebx, 0x80000000
0x80d7:	jmp	0x8080


0x80c1:	cmp	rax, 0x7fffffff
0x80c7:	mov	ebx, 0x7fffffff
0x80cc:	cmovle	rbx, rax
0x80d0:	jmp	0x8080


0x4ac5:	lea	rsi, [rip + 0x6b5a]
0x4acc:	mov	edi, 4
0x4ad1:	call	0x9b20


0xa416:	mov	rax, qword ptr [rsp + 0x78]
0xa41b:	xor	rax, qword ptr fs:[0x28]
0xa424:	jne	0xa430


0xa426:	add	rsp, 0xb8
0xa42d:	pop	rbx
0xa42e:	pop	rbp
0xa42f:	ret	


0xa430:	call	0x1c10


0xa340:	mov	rax, qword ptr [rsp + 0x58]
0xa345:	xor	rax, qword ptr fs:[0x28]
0xa34e:	jne	0xa355


0xa350:	add	rsp, 0x68
0xa354:	ret	


0xa355:	call	0x1c10


0x6a52:	test	eax, eax
0x6a54:	je	0x6a6c


0x6a6c:	mov	rdi, qword ptr [rip + 0x20968d]
0x6a73:	call	0xb250


0x6a56:	call	0x1b10


0x6a5b:	cmp	byte ptr [rip + 0x2096be], 0
0x6a62:	mov	rbx, rax
0x6a65:	je	0x6a83


0x6a83:	lea	rsi, [rip + 0x4c0c]
0x6a8a:	xor	edi, edi
0x6a8c:	mov	edx, 5
0x6a91:	call	0x1bd0


0x6a67:	cmp	dword ptr [rax], 0x20
0x6a6a:	jne	0x6a83


0x6a96:	mov	rdi, qword ptr [rip + 0x20968b]
0x6a9d:	mov	rbp, rax
0x6aa0:	test	rdi, rdi
0x6aa3:	je	0x6acd


0x6acd:	mov	esi, dword ptr [rbx]
0x6acf:	lea	rdx, [rip + 0x5ef6]
0x6ad6:	mov	rcx, rax
0x6ad9:	xor	edi, edi
0x6adb:	xor	eax, eax
0x6add:	call	0x1e60


0x6aa5:	call	0x9bf0


0x6ae2:	jmp	0x6ac2


0x6ac2:	mov	edi, dword ptr [rip + 0x209578]
0x6ac8:	call	0x1b30


0x1b30:	jmp	qword ptr [rip + 0x20e29a]




0x6a78:	test	eax, eax
0x6a7a:	jne	0x6ac2


0x6a7c:	add	rsp, 8
0x6a80:	pop	rbx
0x6a81:	pop	rbp
0x6a82:	ret	


0xa79a:	test	eax, eax
0xa79c:	jne	0xa830


0xa7a2:	mov	rbp, qword ptr [rsp]
0xa7a6:	cmp	rbp, r14
0xa7a9:	jb	0xa7b0


0xa830:	mov	ebp, eax
0xa832:	call	0x1b10


0xa7b0:	call	0x1b10


0xa7ab:	cmp	rbp, r15
0xa7ae:	jbe	0xa804


0xa804:	mov	rdx, qword ptr [rsp + 8]
0xa809:	xor	rdx, qword ptr fs:[0x28]
0xa812:	mov	rax, rbp
0xa815:	jne	0xa85b


0xa817:	add	rsp, 0x18
0xa81b:	pop	rbx
0xa81c:	pop	rbp
0xa81d:	pop	r12
0xa81f:	pop	r13
0xa821:	pop	r14
0xa823:	pop	r15
0xa825:	ret	


0xa85b:	call	0x1c10


0xa7b5:	cmp	rbp, 0x40000000
0xa7bc:	mov	r14, rax
0xa7bf:	sbb	eax, eax
0xa7c1:	and	eax, 0xffffffd7
0xa7c4:	add	eax, 0x4b
0xa7c7:	mov	dword ptr [r14], eax
0xa7ca:	mov	rdi, r12
0xa7cd:	call	0x9df0


0xa837:	cmp	ebp, 1
0xa83a:	mov	r14, rax
0xa83d:	je	0xa850


0xa850:	mov	dword ptr [rax], 0x4b
0xa856:	jmp	0xa7ca


0xa83f:	cmp	ebp, 3
0xa842:	jne	0xa7ca


0xa7ca:	mov	rdi, r12
0xa7cd:	call	0x9df0


0xa844:	mov	dword ptr [rax], 0
0xa84a:	jmp	0xa7ca


0xa87c:	add	rsp, 0x18
0xa880:	ret	


0xaa73:	mov	rcx, qword ptr [r15]
0xaa76:	mov	rbx, rax
0xaa79:	cmp	rcx, rbp
0xaa7c:	je	0xaaa8


0xaaa8:	test	r13, r13
0xaaab:	mov	qword ptr [rsp + 8], rcx
0xaab0:	jne	0xaaf0


0xaa7e:	mov	eax, dword ptr [r12]
0xaa82:	test	eax, eax
0xaa84:	je	0xaae8


0xaaf0:	movzx	r12d, byte ptr [rbp]
0xaaf5:	test	r12b, r12b
0xaaf8:	je	0xaab8


0xaae8:	xor	ebp, ebp
0xaaea:	jmp	0xaa90


0xaa86:	cmp	eax, 0x22
0xaa89:	mov	ebp, 1
0xaa8e:	jne	0xaab8


0xaafa:	movsx	esi, r12b
0xaafe:	mov	rdi, r13
0xab01:	xor	ebp, ebp
0xab03:	call	0x1c40


0xaa90:	test	r13, r13
0xaa93:	je	0xaa9e


0x1c40:	jmp	qword ptr [rip + 0x20e212]


0xaa9e:	mov	qword ptr [r14], rbx
0xaaa1:	jmp	0xaabd


0xaa95:	movzx	r12d, byte ptr [rcx]
0xaa99:	test	r12b, r12b
0xaa9c:	jne	0xab17




0xaabd:	mov	rdi, qword ptr [rsp + 0x18]
0xaac2:	xor	rdi, qword ptr fs:[0x28]
0xaacb:	mov	eax, ebp
0xaacd:	jne	0xad60


0xab17:	movsx	esi, r12b
0xab1b:	mov	rdi, r13
0xab1e:	mov	qword ptr [rsp + 8], rcx
0xab23:	call	0x1c40


0x1fbd:	lea	rdi, [rip + 0x4a7c]
0x1fc4:	call	0xb5e0


0x1fc9:	cmp	ebx, 2
0x1fcc:	mov	byte ptr [rip + 0x20e13b], 0
0x1fd3:	mov	byte ptr [rip + 0x20e13f], 1
0x1fda:	mov	byte ptr [rip + 0x20e134], 0
0x1fe1:	mov	byte ptr [rip + 0x20e12e], 0
0x1fe8:	mov	byte ptr [rip + 0x20e129], 0
0x1fef:	mov	byte ptr [rip + 0x20e11e], 0xa
0x1ff6:	je	0x23c9


0x23c9:	call	0x8050


0x1ffc:	cmp	ebx, 3
0x1fff:	je	0x23bc


0x23bc:	mov	rdi, qword ptr [rbp + 0x10]
0x23c0:	cmp	byte ptr [rdi], 0x2d
0x23c3:	je	0x28ea


0x2005:	cmp	ebx, 4
0x2008:	je	0x2854


0x28ea:	cmp	byte ptr [rdi + 1], 0
0x28ee:	jne	0x2858


0x2854:	mov	rdi, qword ptr [rbp + 0x10]
0x2858:	lea	rsi, [rip + 0x8f8f]
0x285f:	call	0x1d40


0x200e:	xor	eax, eax
0x2010:	movsd	xmm2, qword ptr [rip + 0xa948]
0x2018:	movzx	edx, al
0x201b:	lea	r15, [rsp + 0xb0]
0x2023:	lea	r12, [rbp + rax*8]
0x2028:	sub	ebx, edx
0x202a:	xor	ebp, ebp
0x202c:	movsd	qword ptr [rsp + 0x30], xmm2
0x2032:	mov	r14d, 1
0x2038:	nop	dword ptr [rax + rax]
0x2040:	lea	rcx, [rip + 0x20d8d9]
0x2047:	lea	rdx, [rip + 0x9864]
0x204e:	xor	r8d, r8d
0x2051:	mov	rsi, r12
0x2054:	mov	edi, ebx
0x2056:	call	0x1c20


0x28f4:	jmp	0x23c9


0x2858:	lea	rsi, [rip + 0x8f8f]
0x285f:	call	0x1d40


0x1d40:	jmp	qword ptr [rip + 0x20e192]


0x1c20:	jmp	qword ptr [rip + 0x20e222]






0x23ce:	mov	rdx, qword ptr [rbp + 8]
0x23d2:	lea	esi, [rax - 0x30db0]
0x23d8:	movzx	ecx, byte ptr [rdx]
0x23db:	lea	rdi, [rdx + 1]
0x23df:	cmp	cl, 0x2b
0x23e2:	je	0x283d


0x283d:	cmp	esi, 0x2b8
0x2843:	mov	r12d, 1
0x2849:	ja	0x240f


0x23e8:	cmp	cl, 0x2d
0x23eb:	jne	0x200e


0x284f:	jmp	0x200e


0x240f:	movsx	eax, byte ptr [rdx + 1]
0x2413:	mov	rdx, rdi
0x2416:	mov	ecx, eax
0x2418:	sub	eax, 0x30
0x241b:	cmp	eax, 9
0x241e:	ja	0x2431


0x23f1:	cmp	eax, 0x30daf
0x23f6:	jle	0x240c


0x2420:	add	rdx, 1
0x2424:	movsx	eax, byte ptr [rdx]
0x2427:	mov	ecx, eax
0x2429:	sub	eax, 0x30
0x242c:	cmp	eax, 9
0x242f:	jbe	0x2420


0x2431:	cmp	cl, 0x63
0x2434:	je	0x32b3


0x240c:	xor	r12d, r12d
0x240f:	movsx	eax, byte ptr [rdx + 1]
0x2413:	mov	rdx, rdi
0x2416:	mov	ecx, eax
0x2418:	sub	eax, 0x30
0x241b:	cmp	eax, 9
0x241e:	ja	0x2431


0x23f8:	xor	eax, eax
0x23fa:	cmp	byte ptr [rdx + 1], 0x63
0x23fe:	sete	al
0x2401:	cmp	byte ptr [rdx + rax + 1], 0
0x2406:	je	0x200e


0x32b3:	xor	r14d, r14d
0x32b6:	mov	ecx, 0xa
0x32bb:	jmp	0x328e


0x243a:	cmp	cl, 0x6c
0x243d:	je	0x32a6


0x328e:	lea	rax, [rdx + 1]
0x3292:	jmp	0x245a


0x32a6:	mov	r14d, 1
0x32ac:	mov	ecx, 0xa
0x32b1:	jmp	0x328e


0x2443:	cmp	cl, 0x62
0x2446:	je	0x3286


0x245a:	xor	r13d, r13d
0x245d:	cmp	byte ptr [rax], 0x66
0x2460:	jne	0x246c


0x3286:	xor	r14d, r14d
0x3289:	mov	ecx, 0x1400
0x328e:	lea	rax, [rdx + 1]
0x3292:	jmp	0x245a


0x244c:	mov	rax, rdx
0x244f:	mov	r14d, 1
0x2455:	mov	ecx, 0xa
0x245a:	xor	r13d, r13d
0x245d:	cmp	byte ptr [rax], 0x66
0x2460:	jne	0x246c


0x2462:	add	rax, 1
0x2466:	mov	r13d, 1
0x246c:	cmp	byte ptr [rax], 0
0x246f:	jne	0x200e


0x246c:	cmp	byte ptr [rax], 0
0x246f:	jne	0x200e


0x2475:	cmp	rdi, rdx
0x2478:	je	0x3297


0x3297:	mov	eax, ecx
0x3299:	mov	qword ptr [rsp + 0x90], rax
0x32a1:	jmp	0x24a2


0x247e:	lea	rcx, [rsp + 0x90]
0x2486:	lea	r8, [rip + 0x9364]
0x248d:	xor	esi, esi
0x248f:	mov	edx, 0xa
0x2494:	call	0xa9e0


0x24a2:	mov	byte ptr [rip + 0x20dc6d], r12b
0x24a9:	mov	byte ptr [rip + 0x20dc69], r14b
0x24b0:	mov	eax, 1
0x24b5:	mov	byte ptr [rip + 0x20dc5c], r13b
0x24bc:	jmp	0x2010


0x2010:	movsd	xmm2, qword ptr [rip + 0xa948]
0x2018:	movzx	edx, al
0x201b:	lea	r15, [rsp + 0xb0]
0x2023:	lea	r12, [rbp + rax*8]
0x2028:	sub	ebx, edx
0x202a:	xor	ebp, ebp
0x202c:	movsd	qword ptr [rsp + 0x30], xmm2
0x2032:	mov	r14d, 1
0x2038:	nop	dword ptr [rax + rax]
0x2040:	lea	rcx, [rip + 0x20d8d9]
0x2047:	lea	rdx, [rip + 0x9864]
0x204e:	xor	r8d, r8d
0x2051:	mov	rsi, r12
0x2054:	mov	edi, ebx
0x2056:	call	0x1c20


0x2499:	and	eax, 0xfffffffd
0x249c:	jne	0x4714


0x4714:	mov	rdi, qword ptr [rbp + 8]
0x4718:	call	0x9df0


0x205b:	cmp	eax, -1
0x205e:	je	0x24f2


0x24f2:	cmp	byte ptr [rip + 0x20dc21], 0
0x24f9:	mov	r13d, eax
0x24fc:	je	0x28a9


0x2064:	cmp	eax, 0x71
0x2067:	je	0x2198


0x28a9:	mov	edi, dword ptr [rip + 0x20d861]
0x28af:	test	edi, edi
0x28b1:	je	0x2566


0x2502:	cmp	byte ptr [rip + 0x20dc0f], 0
0x2509:	je	0x2881


0x2198:	mov	ebp, 2
0x219d:	jmp	0x2040


0x206d:	jle	0x20b0


0x2566:	cmp	byte ptr [rip + 0x20dba9], 0
0x256d:	je	0x2588


0x28b7:	cmp	byte ptr [rip + 0x20d85a], 0
0x28be:	jne	0x2526


0x2881:	lea	rsi, [rip + 0x9e78]
0x2888:	mov	byte ptr [rip + 0x20d88b], 0
0x288f:	mov	edx, 5
0x2894:	xor	edi, edi
0x2896:	call	0x1bd0


0x250f:	cmp	dword ptr [rip + 0x20db0a], 2
0x2516:	je	0x3b70


0x2040:	lea	rcx, [rip + 0x20d8d9]
0x2047:	lea	rdx, [rip + 0x9864]
0x204e:	xor	r8d, r8d
0x2051:	mov	rsi, r12
0x2054:	mov	edi, ebx
0x2056:	call	0x1c20


0x20b0:	cmp	eax, 0x39
0x20b3:	jle	0x2128


0x206f:	cmp	eax, 0x81
0x2074:	je	0x21a8


0x2588:	movsxd	rax, dword ptr [rip + 0x20db41]
0x258f:	cmp	ebx, eax
0x2591:	jg	0x312e


0x256f:	mov	rax, qword ptr [rsp + 0x90]
0x2577:	test	rax, rax
0x257a:	je	0x2588


0x28c4:	lea	rsi, [rip + 0x9ead]
0x28cb:	xor	edi, edi
0x28cd:	mov	edx, 5
0x28d2:	call	0x1bd0


0x2526:	xor	esi, esi
0x2528:	call	0x1d70


0x3b70:	mov	edx, 5
0x3b75:	lea	rsi, [rip + 0x8bc4]
0x3b7c:	jmp	0x2894


0x251c:	mov	edi, dword ptr [rip + 0x20dbee]
0x2522:	test	edi, edi
0x2524:	je	0x2566


0x2128:	cmp	eax, 0x30
0x212b:	mov	r13d, eax
0x212e:	jge	0x3c4a


0x20b5:	cmp	eax, 0x63
0x20b8:	je	0x229e


0x21a8:	lea	rsi, [rip + 0xa4f1]
0x21af:	mov	edx, 5
0x21b4:	xor	edi, edi
0x21b6:	call	0x1bd0


0x207a:	jg	0x20f0


0x2597:	lea	rbx, [rip + 0x20da8a]
0x259e:	mov	qword ptr [rsp], 1
0x25a6:	mov	r10, qword ptr [rsp]
0x25aa:	xor	r8d, r8d
0x25ad:	xor	eax, eax
0x25af:	mov	r9d, 1
0x25b5:	nop	dword ptr [rax]
0x25b8:	mov	rsi, qword ptr [rbx + rax*8]
0x25bc:	lea	rdi, [rip + 0x922c]
0x25c3:	mov	ecx, 2
0x25c8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x312e:	sub	ebx, eax
0x3130:	movsxd	rcx, ebx
0x3133:	lea	rbx, [r12 + rax*8]
0x3137:	mov	qword ptr [rsp], rcx
0x313b:	jmp	0x25a6


0x257c:	sub	rax, 1
0x2580:	mov	qword ptr [rsp + 0x90], rax
0x2588:	movsxd	rax, dword ptr [rip + 0x20db41]
0x258f:	cmp	ebx, eax
0x2591:	jg	0x312e


0x1d70:	jmp	qword ptr [rip + 0x20e17a]


0x2894:	xor	edi, edi
0x2896:	call	0x1bd0


0x2134:	cmp	eax, 0xffffff7d
0x2139:	jne	0x3c3c


0x3c4a:	lea	rsi, [rip + 0x8a87]
0x3c51:	mov	edx, 5
0x3c56:	xor	edi, edi
0x3c58:	call	0x1bd0


0x229e:	mov	rcx, qword ptr [rip + 0x20de33]
0x22a5:	cmp	eax, 0x6e
0x22a8:	sete	byte ptr [rip + 0x20de6a]
0x22af:	movzx	edx, byte ptr [rcx]
0x22b2:	cmp	dl, 0x2b
0x22b5:	je	0x24e6


0x20be:	jg	0x2290


0x207c:	cmp	eax, 0x76
0x207f:	je	0x2280


0x20f0:	cmp	eax, 0x83
0x20f5:	je	0x23b0


0x25c8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x25ca:	seta	dl
0x25cd:	sbb	dl, 0
0x25d0:	test	dl, dl
0x25d2:	cmove	r8d, r9d
0x25d6:	add	rax, 1
0x25da:	cmp	rax, r10
0x25dd:	jb	0x25b8


0x25a6:	mov	r10, qword ptr [rsp]
0x25aa:	xor	r8d, r8d
0x25ad:	xor	eax, eax
0x25af:	mov	r9d, 1
0x25b5:	nop	dword ptr [rax]
0x25b8:	mov	rsi, qword ptr [rbx + rax*8]
0x25bc:	lea	rdi, [rip + 0x922c]
0x25c3:	mov	ecx, 2
0x25c8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]




0x213f:	lea	rax, [rip + 0x974e]
0x2146:	sub	rsp, 8
0x214a:	mov	rdi, qword ptr [rip + 0x20df77]
0x2151:	push	0
0x2153:	mov	rcx, qword ptr [rip + 0x20ded6]
0x215a:	lea	r9, [rip + 0x9718]
0x2161:	push	rax
0x2162:	lea	rax, [rip + 0x9738]
0x2169:	lea	r8, [rip + 0x9719]
0x2170:	lea	rdx, [rip + 0x9630]
0x2177:	lea	rsi, [rip + 0x95ae]
0x217e:	push	rax
0x217f:	xor	eax, eax
0x2181:	call	0xa370


0x3c3c:	cmp	eax, 0xffffff7e
0x3c41:	jne	0x3c71


0x24e6:	mov	byte ptr [rip + 0x20dc29], 1
0x24ed:	jmp	0x22c4


0x22bb:	cmp	dl, 0x2d
0x22be:	je	0x2871


0x20c4:	cmp	eax, 0x46
0x20c7:	jne	0x3c71


0x2290:	cmp	eax, 0x66
0x2293:	je	0x2310


0x2280:	mov	ebp, 1
0x2285:	jmp	0x2040


0x2085:	jle	0x2200


0x23b0:	mov	byte ptr [rip + 0x20dd56], 1
0x23b7:	jmp	0x2040


0x20fb:	jl	0x2368


0x25b8:	mov	rsi, qword ptr [rbx + rax*8]
0x25bc:	lea	rdi, [rip + 0x922c]
0x25c3:	mov	ecx, 2
0x25c8:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x25df:	test	r8b, r8b
0x25e2:	je	0x2650


0x3c43:	xor	edi, edi
0x3c45:	call	0x6110


0x3c71:	mov	edi, 1
0x3c76:	call	0x6110


0x22c4:	cmp	eax, 0x6e
0x22c7:	mov	edx, 5
0x22cc:	je	0x24c1


0x2871:	add	rcx, 1
0x2875:	mov	qword ptr [rip + 0x20d85c], rcx
0x287c:	jmp	0x22c4


0x20cd:	mov	byte ptr [rip + 0x20e044], 1
0x20d4:	mov	dword ptr [rip + 0x20df45], r14d
0x20db:	mov	byte ptr [rip + 0x20e038], 1
0x20e2:	jmp	0x2040


0x2310:	mov	rsi, qword ptr [rip + 0x20ddc1]
0x2317:	mov	byte ptr [rip + 0x20ddfa], 1
0x231e:	test	rsi, rsi
0x2321:	je	0x24d7


0x2295:	cmp	eax, 0x6e
0x2298:	jne	0x3c71


0x2200:	cmp	eax, 0x73
0x2203:	jne	0x3c71


0x208b:	cmp	eax, 0x7a
0x208e:	je	0x21f0


0x2368:	lea	rsi, [rip + 0x94e0]
0x236f:	mov	edx, 5
0x2374:	xor	edi, edi
0x2376:	call	0x1bd0


0x2101:	cmp	eax, 0x84
0x2106:	je	0x2310


0x2650:	cmp	qword ptr [rsp + 0x90], 0
0x2659:	jne	0x2671


0x25e4:	mov	eax, dword ptr [rip + 0x20da36]
0x25ea:	cmp	eax, 1
0x25ed:	je	0x47d8


0x24c1:	lea	rsi, [rip + 0x9341]
0x24c8:	xor	edi, edi
0x24ca:	call	0x1bd0


0x22d2:	lea	rsi, [rip + 0x9548]
0x22d9:	xor	edi, edi
0x22db:	call	0x1bd0


0x24d7:	mov	dword ptr [rip + 0x20db3f], 2
0x24e1:	jmp	0x2040


0x2327:	mov	r9, qword ptr [rip + 0x20dd0a]
0x232e:	lea	rdx, [rip + 0x20d7eb]
0x2335:	lea	rcx, [rip + 0xa61c]
0x233c:	lea	rdi, [rip + 0x9503]
0x2343:	mov	r8d, 4
0x2349:	call	0x68a0


0x2209:	lea	rcx, [rip + 0x4750]
0x2210:	mov	rdi, qword ptr [rip + 0x20dec1]
0x2217:	xor	esi, esi
0x2219:	mov	rdx, r15
0x221c:	call	0xa910


0x21f0:	mov	byte ptr [rip + 0x20df1d], 0
0x21f7:	jmp	0x2040


0x2094:	add	eax, -0x80
0x2097:	jne	0x3c71


0x210c:	cmp	eax, 0x85
0x2111:	jne	0x3c71


0x265b:	cmp	byte ptr [rip + 0x20dab6], 0
0x2662:	jne	0x2671


0x2671:	mov	edx, 0x60
0x2676:	xor	ecx, ecx
0x2678:	mov	rax, rdx
0x267b:	mul	qword ptr [rsp]
0x267f:	jo	0x4832


0x47d8:	lea	rsi, [rip + 0x7010]
0x47df:	mov	edi, 4
0x47e4:	call	0x9b20


0x25f3:	cmp	byte ptr [rip + 0x20db1e], 0
0x25fa:	je	0x2650


0x209d:	mov	byte ptr [rip + 0x20e076], 1
0x20a4:	jmp	0x2040


0x2117:	mov	byte ptr [rip + 0x20dfee], 1
0x211e:	jmp	0x2040


0x2664:	cmp	byte ptr [rip + 0x20daab], 0
0x266b:	je	0x3401


0x4832:	mov	ecx, 1
0x4837:	jmp	0x2685


0x2685:	test	rax, rax
0x2688:	js	0x44fb


0x25fc:	cmp	dword ptr [rip + 0x20db0d], 0
0x2603:	jne	0x28f9


0x3401:	xor	eax, eax
0x3403:	jmp	0x2a28


0x44fb:	call	0xa720


0x268e:	test	rcx, rcx
0x2691:	jne	0x44fb


0x2609:	cmp	eax, 2
0x260c:	jne	0x28f9


0x28f9:	xor	edi, edi
0x28fb:	call	0x1b50


0x2a28:	mov	rcx, qword ptr [rsp + 0x2b8]
0x2a30:	xor	rcx, qword ptr fs:[0x28]
0x2a39:	jne	0x483c


0x2697:	mov	r14, qword ptr [rsp]
0x269b:	imul	r15, r14, 0x60
0x269f:	mov	rdi, r15
0x26a2:	mov	qword ptr [rsp + 0x60], r15
0x26a7:	call	0xa4d0


0x2612:	cmp	qword ptr [rsp], 1
0x2617:	jne	0x28f9


0x1b50:	jmp	qword ptr [rip + 0x20e28a]


0x2a3f:	add	rsp, 0x2c8
0x2a46:	pop	rbx
0x2a47:	pop	rbp
0x2a48:	pop	r12
0x2a4a:	pop	r13
0x2a4c:	pop	r14
0x2a4e:	pop	r15
0x2a50:	ret	


0x483c:	call	0x1c10


0x261d:	lea	rdx, [rsp + 0x220]
0x2625:	xor	esi, esi
0x2627:	mov	edi, 1
0x262c:	call	0x1e00




0x2631:	test	eax, eax
0x2633:	jne	0x28f9


0x2639:	mov	eax, dword ptr [rsp + 0x238]
0x2640:	and	eax, 0xf000
0x2645:	cmp	eax, 0x8000
0x264a:	je	0x28f9


0x26ac:	test	r14, r14
0x26af:	mov	qword ptr [rsp + 0x28], rax
0x26b4:	je	0x3ac9


0x3ac9:	sub	ebp, 1
0x3acc:	je	0x26e4


0x26ba:	mov	rcx, r15
0x26bd:	add	rcx, rax
0x26c0:	mov	rdx, qword ptr [rbx]
0x26c3:	add	rax, 0x60
0x26c7:	add	rbx, 8
0x26cb:	mov	qword ptr [rax - 0x60], rdx
0x26cf:	cmp	rcx, rax
0x26d2:	jne	0x26c0


0x26e4:	cmp	qword ptr [rsp], 0
0x26e9:	mov	byte ptr [rip + 0x20da25], 1
0x26f0:	je	0x3ad2


0x3ad2:	mov	byte ptr [rsp + 0x8b], 1
0x3ada:	jmp	0x29fa


0x26d4:	cmp	ebp, 1
0x26d7:	je	0x26e4


0x26c0:	mov	rdx, qword ptr [rbx]
0x26c3:	add	rax, 0x60
0x26c7:	add	rbx, 8
0x26cb:	mov	qword ptr [rax - 0x60], rdx
0x26cf:	cmp	rcx, rax
0x26d2:	jne	0x26c0


0x26f6:	lea	rax, [rsp + 0x220]
0x26fe:	mov	r15, qword ptr [rsp + 0x28]
0x2703:	mov	qword ptr [rsp + 0x10], 0
0x270c:	mov	byte ptr [rsp + 0x8b], 1
0x2714:	mov	dword ptr [rsp + 0x70], r13d
0x2719:	mov	qword ptr [rsp + 0x58], rax
0x271e:	nop	
0x2720:	mov	rax, qword ptr [rsp + 0x90]
0x2728:	lea	rdi, [rip + 0x90c0]
0x272f:	mov	ecx, 2
0x2734:	mov	qword ptr [rsp + 0x20], rax
0x2739:	mov	rax, qword ptr [r15]
0x273c:	mov	rsi, rax
0x273f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x29fa:	movzx	eax, byte ptr [rip + 0x20d717]
0x2a01:	test	al, al
0x2a03:	mov	byte ptr [rsp + 0x50], al
0x2a07:	jne	0x3140


0x26d9:	cmp	qword ptr [rsp], 1
0x26de:	jbe	0x26f6


0x273f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x2741:	seta	dl
0x2744:	sbb	dl, 0
0x2747:	movsx	esi, dl
0x274a:	test	esi, esi
0x274c:	mov	dword ptr [rsp + 0x44], esi
0x2750:	jne	0x292e


0x2a0d:	cmp	byte ptr [rip + 0x20d6fa], 0
0x2a14:	jne	0x3255


0x3140:	mov	rbp, qword ptr [rsp + 0x60]
0x3145:	mov	r13, qword ptr [rsp + 0x28]
0x314a:	lea	r12, [rip + 0x869e]
0x3151:	xor	ebx, ebx
0x3153:	add	rbp, r13
0x3156:	cmp	rbp, r13
0x3159:	je	0x31a2


0x26e0:	test	ebp, ebp
0x26e2:	jne	0x26f6


0x2756:	mov	byte ptr [rip + 0x20d9b1], 1
0x275d:	mov	dword ptr [rsp + 8], 0
0x2765:	mov	byte ptr [r15 + 0x36], 1
0x276a:	cmp	byte ptr [rip + 0x20d9a4], 0
0x2771:	jne	0x2bec


0x292e:	xor	esi, esi
0x2930:	mov	rdi, rax
0x2933:	xor	eax, eax
0x2935:	call	0x6c60


0x2a1a:	movzx	eax, byte ptr [rsp + 0x8b]
0x2a22:	xor	eax, 1
0x2a25:	movzx	eax, al
0x2a28:	mov	rcx, qword ptr [rsp + 0x2b8]
0x2a30:	xor	rcx, qword ptr fs:[0x28]
0x2a39:	jne	0x483c


0x3255:	xor	edi, edi
0x3257:	call	0x1ce0


0x31a2:	test	rbx, rbx
0x31a5:	je	0x2a0d


0x315b:	mov	rdi, qword ptr [r13]
0x315f:	mov	rsi, r12
0x3162:	call	0x1d40


0x2777:	mov	rdi, qword ptr [r15]
0x277a:	call	0x49e0


0x2bec:	mov	rdi, rax
0x2bef:	call	0x49e0


0x31ab:	lea	rdx, [rsp + 0x190]
0x31b3:	mov	esi, 1
0x31b8:	mov	edi, 1
0x31bd:	call	0x1e00


0x31c2:	test	eax, eax
0x31c4:	js	0x4881


0x4881:	lea	rsi, [rip + 0x6d9e]
0x4888:	mov	edx, 5
0x488d:	xor	edi, edi
0x488f:	call	0x1bd0


0x31ca:	mov	eax, dword ptr [rsp + 0x1a8]
0x31d1:	and	eax, 0xf000
0x31d6:	cmp	eax, 0x1000
0x31db:	sete	byte ptr [rip + 0x20cf35]
0x31e2:	cmp	byte ptr [rip + 0x20cf23], 0
0x31e9:	jne	0x3448


0x31ef:	mov	rbp, qword ptr [rsp + 0x28]
0x31f4:	lea	rbx, [rip + 0x85f4]
0x31fb:	jmp	0x321b


0x3448:	cmp	dword ptr [rip + 0x20ccc1], 0
0x344f:	mov	byte ptr [rip + 0x20ccb6], 1
0x3456:	jne	0x346c


0x321b:	cmp	rbp, r13
0x321e:	jne	0x31fd


0x3458:	cmp	dword ptr [rip + 0x20cbc1], 2
0x345f:	jne	0x346c


0x346c:	xor	r15d, r15d
0x346f:	mov	eax, r15d
0x3472:	mov	rcx, qword ptr [rsp + 0x60]
0x3477:	mov	byte ptr [rsp + 0x48], 0
0x347c:	and	eax, 1
0x347f:	mov	byte ptr [rsp + 0x44], al
0x3483:	mov	rax, qword ptr [rsp]
0x3487:	sub	rax, 1
0x348b:	mov	qword ptr [rsp + 0x10], rax
0x3490:	mov	rax, qword ptr [rsp + 0x28]
0x3495:	lea	rax, [rax + rcx + 0x34]
0x349a:	mov	qword ptr [rsp + 0x18], rax
0x349f:	lea	rax, [rsp + 0x220]
0x34a7:	mov	qword ptr [rsp + 0x20], rax
0x34ac:	cmp	qword ptr [rsp], 0
0x34b1:	je	0x394e


0x3220:	mov	rax, qword ptr [rsp + 0x28]
0x3225:	mov	rcx, qword ptr [rsp + 0x60]
0x322a:	lea	rdx, [rax + 0x35]
0x322e:	lea	rcx, [rax + rcx + 0x35]
0x3233:	mov	rax, rdx
0x3236:	jmp	0x324b


0x31fd:	cmp	byte ptr [rbp + 0x34], 0
0x3201:	jne	0x3217


0x3461:	cmp	qword ptr [rsp], 1
0x3466:	je	0x3ccb


0x394e:	cmp	byte ptr [rip + 0x20c7c5], 0
0x3955:	je	0x398b


0x34b7:	mov	r14, qword ptr [rsp + 0x28]
0x34bc:	mov	byte ptr [rsp + 8], 0
0x34c1:	xor	ebx, ebx
0x34c3:	jmp	0x34f4


0x324b:	cmp	rax, rcx
0x324e:	jne	0x3238


0x3203:	mov	rdi, qword ptr [rbp]
0x3207:	mov	rsi, rbx
0x320a:	call	0x1d40


0x3217:	add	rbp, 0x60
0x321b:	cmp	rbp, r13
0x321e:	jne	0x31fd


0x3ccb:	mov	rax, qword ptr [rsp + 0x28]
0x3cd0:	cmp	dword ptr [rax + 0x38], -1
0x3cd4:	je	0x346c


0x398b:	lea	rsi, [rip + 0x7fba]
0x3992:	xor	edi, edi
0x3994:	mov	edx, 5
0x3999:	call	0x1bd0


0x3957:	cmp	dword ptr [rip + 0x20c6c2], 1
0x395e:	jne	0x398b


0x34f4:	cmp	byte ptr [r14 + 0x34], 0
0x34f9:	jne	0x34e2


0x3250:	jmp	0x3443


0x3238:	cmp	dword ptr [rax + 3], 0
0x323c:	js	0x3247


0x3cda:	mov	eax, dword ptr [rax + 0x30]
0x3cdd:	xor	r15d, r15d
0x3ce0:	mov	dword ptr [rsp + 8], eax
0x3ce4:	and	eax, 0xf000
0x3ce9:	cmp	eax, 0x8000
0x3cee:	setne	r15b
0x3cf2:	jmp	0x346f


0x3960:	mov	byte ptr [rsp + 8], 0
0x3965:	mov	rdi, qword ptr [rip + 0x20c75c]
0x396c:	call	0x1ef0


0x34fb:	mov	ebp, dword ptr [r14 + 0x38]
0x34ff:	test	ebp, ebp
0x3501:	js	0x3660


0x34e2:	add	rbx, 1
0x34e6:	add	r14, 0x60
0x34ea:	cmp	qword ptr [rsp], rbx
0x34ee:	je	0x367d


0x3443:	cmp	rax, rdx
0x3446:	jne	0x342e


0x3247:	add	rax, 0x60
0x324b:	cmp	rax, rcx
0x324e:	jne	0x3238


0x323e:	cmp	byte ptr [rax], 0
0x3241:	jne	0x3448


0x346f:	mov	eax, r15d
0x3472:	mov	rcx, qword ptr [rsp + 0x60]
0x3477:	mov	byte ptr [rsp + 0x48], 0
0x347c:	and	eax, 1
0x347f:	mov	byte ptr [rsp + 0x44], al
0x3483:	mov	rax, qword ptr [rsp]
0x3487:	sub	rax, 1
0x348b:	mov	qword ptr [rsp + 0x10], rax
0x3490:	mov	rax, qword ptr [rsp + 0x28]
0x3495:	lea	rax, [rax + rcx + 0x34]
0x349a:	mov	qword ptr [rsp + 0x18], rax
0x349f:	lea	rax, [rsp + 0x220]
0x34a7:	mov	qword ptr [rsp + 0x20], rax
0x34ac:	cmp	qword ptr [rsp], 0
0x34b1:	je	0x394e


0x3660:	mov	rdi, r14
0x3663:	mov	esi, r15d
0x3666:	add	rbx, 1
0x366a:	call	0x5a90


0x3507:	mov	rdi, qword ptr [r14]
0x350a:	call	0x49e0


0x367d:	movzx	ecx, byte ptr [rip + 0x20ca96]
0x3684:	test	cl, cl
0x3686:	je	0x3691


0x342e:	cmp	dword ptr [rdx + 3], 0
0x3432:	js	0x343f


0x3691:	mov	rax, qword ptr [rsp + 0x28]
0x3696:	cmp	dword ptr [rax + 0x38], 0
0x369a:	jns	0x36e2


0x3688:	cmp	dword ptr [rip + 0x20c991], 1
0x368f:	je	0x36e2


0x343f:	add	rdx, 0x60
0x3443:	cmp	rax, rdx
0x3446:	jne	0x342e


0x3434:	movzx	ecx, byte ptr [rdx]
0x3437:	test	cl, cl
0x3439:	je	0x3c7b


0x369c:	mov	rax, qword ptr [rsp + 0x28]
0x36a1:	cmp	byte ptr [rax + 0x34], 1
0x36a5:	je	0x36ab


0x36e2:	cmp	byte ptr [rsp + 8], 1
0x36e7:	jne	0x3965


0x3c7b:	lea	rbx, [rsp + 0x220]
0x3c83:	mov	byte ptr [rsp + 0x20], cl
0x3c87:	xor	r12d, r12d
0x3c8a:	cmp	r12, qword ptr [rsp]
0x3c8e:	je	0x3cf7


0x36ab:	mov	rax, qword ptr [rsp + 0x28]
0x36b0:	add	rax, 0x94
0x36b6:	nop	word ptr cs:[rax + rax]
0x36c0:	cmp	rax, qword ptr [rsp + 0x18]
0x36c5:	je	0x398b


0x36a7:	test	cl, cl
0x36a9:	jne	0x36e2


0x36ed:	cmp	byte ptr [rsp + 0x44], 0
0x36f2:	jne	0x3965


0x3965:	mov	rdi, qword ptr [rip + 0x20c75c]
0x396c:	call	0x1ef0


0x3cf7:	mov	rsi, qword ptr [rsp + 0x28]
0x3cfc:	mov	rcx, qword ptr [rsp + 0x60]
0x3d01:	mov	qword ptr [rsp + 0x18], r12
0x3d06:	lea	rax, [rsi + 0x30]
0x3d0a:	lea	rcx, [rsi + rcx + 0x30]
0x3d0f:	jmp	0x3d37


0x3c90:	imul	rax, r12, 0x60
0x3c94:	mov	rcx, qword ptr [rsp + 0x28]
0x3c99:	mov	rdx, rbx
0x3c9c:	mov	edi, 1
0x3ca1:	mov	rsi, qword ptr [rcx + rax]
0x3ca5:	call	0x1c00


0x36cb:	mov	esi, dword ptr [rax + 4]
0x36ce:	mov	rdx, rax
0x36d1:	test	esi, esi
0x36d3:	jns	0x36e2


0x36f8:	movzx	eax, byte ptr [rip + 0x20ca18]
0x36ff:	test	al, al
0x3701:	mov	byte ptr [rsp + 8], al
0x3705:	je	0x34ac


0x3d37:	cmp	rcx, rax
0x3d3a:	jne	0x3d11


0x36d5:	add	rax, 0x60
0x36d9:	cmp	byte ptr [rdx], 1
0x36dc:	je	0x36c0


0x34ac:	cmp	qword ptr [rsp], 0
0x34b1:	je	0x394e


0x370b:	mov	qword ptr [rsp + 0xb8], 0
0x3717:	mov	qword ptr [rsp + 0xb0], 0
0x3723:	xor	eax, eax
0x3725:	mov	ecx, 0x10
0x372a:	mov	rdi, qword ptr [rsp + 0x20]
0x372f:	cld	
0x3730:	rep stosq	qword ptr [rdi], rax


0x3d3c:	cmp	byte ptr [rsp + 0x8b], 0
0x3d44:	jne	0x3d53


0x3d11:	cmp	dword ptr [rax + 8], 0
0x3d15:	js	0x3d33


0x36c0:	cmp	rax, qword ptr [rsp + 0x18]
0x36c5:	je	0x398b


0x36de:	test	cl, cl
0x36e0:	je	0x36c0


0x3730:	rep stosq	qword ptr [rdi], rax


0x3d46:	cmp	dword ptr [rip + 0x20c2d3], 2
0x3d4d:	je	0x3448


0x3d53:	call	0x1d80


0x3d33:	add	rax, 0x60
0x3d37:	cmp	rcx, rax
0x3d3a:	jne	0x3d11


0x3d17:	mov	edx, dword ptr [rax]
0x3d19:	and	edx, 0xf000
0x3d1f:	cmp	edx, 0x8000
0x3d25:	je	0x3d33


0x3733:	mov	rsi, qword ptr [rsp + 0x20]
0x3738:	lea	r8, [rsp + 0xb0]
0x3740:	xor	ecx, ecx
0x3742:	xor	edx, edx
0x3744:	mov	edi, 2
0x3749:	or	qword ptr [rsp + 0x220], 2
0x3752:	call	0x1da0


0x1d80:	jmp	qword ptr [rip + 0x20e172]


0x3d27:	cmp	edx, 0x1000
0x3d2d:	jne	0x3448


0x1da0:	jmp	qword ptr [rip + 0x20e162]






0x3caa:	test	eax, eax
0x3cac:	jne	0x3cc5


0x3cae:	mov	eax, dword ptr [rsp + 0x238]
0x3cb5:	and	eax, 0xf000
0x3cba:	cmp	eax, 0xa000
0x3cbf:	je	0x3448


0x3cc5:	add	r12, 1
0x3cc9:	jmp	0x3c8a


0x3c8a:	cmp	r12, qword ptr [rsp]
0x3c8e:	je	0x3cf7


0x366f:	add	r14, 0x60
0x3673:	cmp	qword ptr [rsp], rbx
0x3677:	jne	0x34f4


0x3971:	test	eax, eax
0x3973:	jne	0x4855


0x3979:	cmp	byte ptr [rip + 0x20c797], 0
0x3980:	je	0x3760


0x4855:	lea	rsi, [rip + 0x6e3a]
0x485c:	mov	edx, 5
0x4861:	xor	edi, edi
0x4863:	call	0x1bd0


0x3760:	cmp	byte ptr [rsp + 8], 0
0x3765:	jne	0x34ac


0x3986:	jmp	0x370b


0x376b:	cmp	byte ptr [rsp + 0x48], 0
0x3770:	jne	0x2a0d


0x3776:	mov	edi, dword ptr [rip + 0x20c994]
0x377c:	test	edi, edi
0x377e:	jne	0x39b1


0x3784:	movsd	xmm0, qword ptr [rsp + 0x30]
0x378a:	call	0xa890


0x39b1:	xor	esi, esi
0x39b3:	call	0x1d70


0x378f:	test	eax, eax
0x3791:	je	0x34ac


0x3797:	lea	rsi, [rip + 0x81dd]
0x379e:	mov	edx, 5
0x37a3:	xor	edi, edi
0x37a5:	call	0x1bd0


0x350f:	mov	r13, rax
0x3512:	mov	eax, dword ptr [r14 + 0x40]
0x3516:	mov	r12d, dword ptr [r14 + 0x30]
0x351a:	cmp	r15d, eax
0x351d:	je	0x3565


0x3565:	test	eax, eax
0x3567:	mov	rcx, -2
0x356e:	jne	0x34c8


0x351f:	xor	eax, eax
0x3521:	mov	esi, 3
0x3526:	mov	edi, ebp
0x3528:	call	0xae00


0x3574:	mov	rdx, qword ptr [rsp + 0x20]
0x3579:	mov	esi, ebp
0x357b:	mov	edi, 1
0x3580:	call	0x1e00


0x34c8:	mov	edx, ebp
0x34ca:	xor	edi, edi
0x34cc:	mov	rsi, r13
0x34cf:	call	0x4c50


0x34d4:	test	rax, rax
0x34d7:	setne	dl
0x34da:	add	qword ptr [r14 + 8], rax
0x34de:	or	byte ptr [rsp + 8], dl
0x34e2:	add	rbx, 1
0x34e6:	add	r14, 0x60
0x34ea:	cmp	qword ptr [rsp], rbx
0x34ee:	je	0x367d


0x3585:	test	eax, eax
0x3587:	jne	0x38e7


0x358d:	mov	eax, dword ptr [rsp + 0x238]
0x3594:	cmp	dword ptr [r14 + 0x30], eax
0x3598:	je	0x3800


0x38e7:	mov	dword ptr [r14 + 0x38], 0xffffffff
0x38ef:	call	0x1b10


0x3800:	mov	edx, eax
0x3802:	and	edx, 0xf000
0x3808:	cmp	edx, 0x8000
0x380e:	mov	rdx, qword ptr [rsp + 0x278]
0x3816:	je	0x392f


0x359e:	mov	rdx, qword ptr [rsp + 0x278]
0x35a6:	mov	rcx, qword ptr [rsp + 0x280]
0x35ae:	and	r12d, 0xf000
0x35b5:	mov	qword ptr [r14 + 0x10], rdx
0x35b9:	mov	qword ptr [r14 + 0x18], rcx
0x35bd:	cmp	r12d, 0x8000
0x35c4:	mov	dword ptr [r14 + 0x30], eax
0x35c8:	mov	qword ptr [r14 + 0x58], 0
0x35d0:	je	0x3880


0x392f:	mov	rcx, qword ptr [rsp + 0x250]
0x3937:	cmp	qword ptr [r14 + 8], rcx
0x393b:	je	0x381c


0x381c:	cmp	rdx, qword ptr [r14 + 0x10]
0x3820:	mov	rcx, qword ptr [rsp + 0x280]
0x3828:	jne	0x35ae


0x3880:	mov	rax, qword ptr [r14 + 8]
0x3884:	cmp	qword ptr [rsp + 0x250], rax
0x388c:	jge	0x35d6


0x35d6:	cmp	qword ptr [rsp + 0x10], rbx
0x35db:	je	0x361c


0x3941:	mov	rcx, qword ptr [rsp + 0x280]
0x3949:	jmp	0x35ae


0x382e:	cmp	dword ptr [r14 + 0x18], ecx
0x3832:	jne	0x35ae


0x35ae:	and	r12d, 0xf000
0x35b5:	mov	qword ptr [r14 + 0x10], rdx
0x35b9:	mov	qword ptr [r14 + 0x18], rcx
0x35bd:	cmp	r12d, 0x8000
0x35c4:	mov	dword ptr [r14 + 0x30], eax
0x35c8:	mov	qword ptr [r14 + 0x58], 0
0x35d0:	je	0x3880


0x3892:	mov	rdx, r13
0x3895:	mov	esi, 3
0x389a:	xor	edi, edi
0x389c:	call	0x9c20


0x361c:	mov	edi, dword ptr [r14 + 0x40]
0x3620:	mov	qword ptr [rsp + 0x10], rbx
0x3625:	test	edi, edi
0x3627:	jne	0x4782


0x35dd:	cmp	byte ptr [rip + 0x20cb31], 0
0x35e4:	je	0x361c


0x3838:	mov	rax, qword ptr [r14 + 0x58]
0x383c:	cmp	rax, qword ptr [rip + 0x20c7d5]
0x3843:	lea	rdx, [rax + 1]
0x3847:	mov	qword ptr [r14 + 0x58], rdx
0x384b:	jb	0x34e2


0x362d:	cmp	r12d, 0x8000
0x3634:	mov	rcx, -1
0x363b:	jne	0x34c8


0x4782:	mov	rcx, -2
0x4789:	jmp	0x34c8


0x35e6:	cmp	byte ptr [rip + 0x20ca23], 0
0x35ed:	lea	rax, [rip + 0x9a0c]
0x35f4:	lea	rdx, [rip + 0x9a06]
0x35fb:	lea	rsi, [rip + 0x8056]
0x3602:	mov	rcx, r13
0x3605:	mov	edi, 1
0x360a:	cmove	rdx, rax
0x360e:	xor	eax, eax
0x3610:	call	0x1e50


0x3851:	cmp	dword ptr [rip + 0x20c7c8], 1
0x3858:	jne	0x34e2


0x3641:	cmp	byte ptr [r14 + 0x35], 0
0x3646:	je	0x34c8


0x385e:	xor	esi, esi
0x3860:	cmp	dword ptr [r14 + 0x40], 0
0x3865:	mov	rdi, r14
0x3868:	setne	sil
0x386c:	call	0x5a90


0x364c:	mov	rcx, qword ptr [rsp + 0x250]
0x3654:	sub	rcx, qword ptr [r14 + 8]
0x3658:	jmp	0x34c8


0x3871:	mov	qword ptr [r14 + 0x58], 0
0x3879:	jmp	0x34e2


0x3615:	mov	byte ptr [rip + 0x20c9f4], 0
0x361c:	mov	edi, dword ptr [r14 + 0x40]
0x3620:	mov	qword ptr [rsp + 0x10], rbx
0x3625:	test	edi, edi
0x3627:	jne	0x4782


0x38f4:	mov	r12, rax
0x38f7:	mov	eax, dword ptr [rax]
0x38f9:	mov	rdx, r13
0x38fc:	xor	edi, edi
0x38fe:	mov	esi, 3
0x3903:	mov	dword ptr [r14 + 0x3c], eax
0x3907:	call	0x9c20


0x352d:	test	r15d, r15d
0x3530:	jne	0x37c8


0x3536:	test	eax, eax
0x3538:	js	0x37d0


0x37c8:	test	eax, eax
0x37ca:	jns	0x355e


0x37d0:	call	0x1b10


0x353e:	mov	edx, eax
0x3540:	or	dh, 8
0x3543:	cmp	eax, edx
0x3545:	je	0x355e


0x355e:	mov	dword ptr [r14 + 0x40], r15d
0x3562:	mov	eax, r15d
0x3565:	test	eax, eax
0x3567:	mov	rcx, -2
0x356e:	jne	0x34c8


0x3547:	xor	eax, eax
0x3549:	mov	esi, 4
0x354e:	mov	edi, ebp
0x3550:	call	0xae00


0x3555:	cmp	eax, -1
0x3558:	je	0x37d0


0x37d5:	mov	edx, dword ptr [r14 + 0x30]
0x37d9:	and	edx, 0xf000
0x37df:	cmp	edx, 0x8000
0x37e5:	jne	0x478e


0x37eb:	cmp	dword ptr [rax], 1
0x37ee:	jne	0x478e


0x478e:	mov	rdx, r13
0x4791:	mov	esi, 3
0x4796:	xor	edi, edi
0x4798:	mov	qword ptr [rsp], rax
0x479c:	call	0x9c20


0x37f4:	mov	eax, dword ptr [r14 + 0x40]
0x37f8:	jmp	0x3565


0x2bf4:	cmp	byte ptr [rip + 0x20d415], 0
0x2bfb:	lea	rsi, [rip + 0xa3fe]
0x2c02:	lea	rdx, [rip + 0xa3f8]
0x2c09:	mov	rcx, rax
0x2c0c:	mov	edi, 1
0x2c11:	cmove	rdx, rsi
0x2c15:	lea	rsi, [rip + 0x8a3c]
0x2c1c:	xor	eax, eax
0x2c1e:	call	0x1e50


0x2c23:	mov	byte ptr [rip + 0x20d3e6], 0
0x2c2a:	jmp	0x2777


0x277f:	mov	qword ptr [rsp + 0x48], rax
0x2784:	movzx	eax, byte ptr [rip + 0x20d98e]
0x278b:	mov	edi, 1
0x2790:	mov	qword ptr [rsp + 0xb0], 0
0x279c:	mov	rdx, qword ptr [rsp + 0x58]
0x27a1:	mov	esi, dword ptr [rsp + 8]
0x27a5:	test	al, al
0x27a7:	mov	byte ptr [rsp + 0x18], al
0x27ab:	jne	0x2a51


0x27b1:	call	0x1e00


0x2a51:	call	0x1e00


0x2a56:	test	eax, eax
0x2a58:	jne	0x2fe1


0x2a5e:	movzx	ebx, byte ptr [rip + 0x20d6b1]
0x2a65:	test	bl, bl
0x2a67:	jne	0x3078


0x2fe1:	mov	rsi, qword ptr [rsp + 0x48]
0x2fe6:	mov	edi, 4
0x2feb:	call	0x9b20


0x2a6d:	cmp	byte ptr [rip + 0x20d699], 0
0x2a74:	jne	0x2a8d


0x3078:	mov	rdx, qword ptr [rsp + 0x20]
0x307d:	mov	esi, dword ptr [rsp + 8]
0x3081:	lea	rcx, [rsp + 0xb0]
0x3089:	mov	rdi, qword ptr [rsp + 0x48]
0x308e:	call	0x4b10


0x2a76:	mov	eax, dword ptr [rsp + 0x238]
0x2a7d:	and	eax, 0xf000
0x2a82:	cmp	eax, 0x8000
0x2a87:	je	0x3adf


0x2a8d:	mov	edi, 0x2018
0x2a92:	call	0xa4d0


0x3adf:	mov	r14d, dword ptr [rsp + 8]
0x3ae4:	xor	esi, esi
0x3ae6:	mov	edx, 1
0x3aeb:	mov	edi, r14d
0x3aee:	call	0x1ca0


0x3af3:	cmp	rax, -1
0x3af7:	mov	rbx, rax
0x3afa:	je	0x2a8d


0x3b00:	xor	esi, esi
0x3b02:	mov	edx, 2
0x3b07:	mov	edi, r14d
0x3b0a:	call	0x1ca0


0x3b0f:	cmp	rbx, rax
0x3b12:	mov	r8, rax
0x3b15:	jge	0x3bd0


0x3b1b:	test	rax, rax
0x3b1e:	mov	qword ptr [rsp + 0xb0], rax
0x3b26:	je	0x2cb0


0x3bd0:	mov	rcx, qword ptr [rsp + 0x48]
0x3bd5:	mov	edi, dword ptr [rsp + 8]
0x3bd9:	xor	edx, edx
0x3bdb:	mov	rsi, rbx
0x3bde:	call	0x4ea0


0x2cb0:	cmp	byte ptr [rip + 0x20d461], 0
0x2cb7:	jne	0x2d23


0x3b2c:	mov	rdx, qword ptr [rsp + 0x20]
0x3b31:	mov	esi, dword ptr [rsp + 8]
0x3b35:	lea	r9, [rsp + 0xb0]
0x3b3d:	mov	rdi, qword ptr [rsp + 0x48]
0x3b42:	mov	rcx, rbx
0x3b45:	call	0x4f70


0x2cb9:	cmp	dword ptr [rsp + 0x44], 0
0x2cbe:	je	0x29d5


0x2d23:	movzx	eax, byte ptr [rsp + 0x18]
0x2d28:	mov	rdx, qword ptr [rsp + 0x58]
0x2d2d:	mov	edi, 1
0x2d32:	mov	esi, dword ptr [rsp + 8]
0x2d36:	sub	eax, 1
0x2d39:	mov	dword ptr [r15 + 0x3c], eax
0x2d3d:	call	0x1e00


0x29d5:	add	qword ptr [rsp + 0x10], 1
0x29db:	movzx	ecx, byte ptr [rsp + 0x18]
0x29e0:	add	r15, 0x60
0x29e4:	and	byte ptr [rsp + 0x8b], cl
0x29eb:	mov	rax, qword ptr [rsp + 0x10]
0x29f0:	cmp	rax, qword ptr [rsp]
0x29f4:	jne	0x2720


0x2cc4:	mov	edi, dword ptr [rsp + 8]
0x2cc8:	call	0x1ce0


0x2720:	mov	rax, qword ptr [rsp + 0x90]
0x2728:	lea	rdi, [rip + 0x90c0]
0x272f:	mov	ecx, 2
0x2734:	mov	qword ptr [rsp + 0x20], rax
0x2739:	mov	rax, qword ptr [r15]
0x273c:	mov	rsi, rax
0x273f:	repe cmpsb	byte ptr [rsi], byte ptr [rdi]


0x3b4a:	mov	byte ptr [rsp + 0x18], al
0x3b4e:	jmp	0x2cb0


0x3be3:	jmp	0x2a8d


0x2a97:	mov	edi, 0x2018
0x2a9c:	mov	r14, rax
0x2a9f:	mov	qword ptr [rax + 0x2008], 0
0x2aaa:	mov	qword ptr [rax + 0x2000], 0
0x2ab5:	mov	qword ptr [rax + 0x2010], 0
0x2ac0:	call	0xa4d0


0x2ac5:	mov	qword ptr [rsp + 0x50], r14
0x2aca:	mov	rbx, rax
0x2acd:	mov	qword ptr [rsp + 0x38], 0
0x2ad6:	mov	qword ptr [rsp + 0x68], r15
0x2adb:	nop	dword ptr [rax + rax]
0x2ae0:	mov	edi, dword ptr [rsp + 8]
0x2ae4:	mov	edx, 0x2000
0x2ae9:	mov	rsi, rbx
0x2aec:	call	0x9e10


0x2af1:	mov	r13, rax
0x2af4:	lea	rax, [rax - 1]
0x2af8:	cmp	rax, -3
0x2afc:	ja	0x2c57


0x2b02:	mov	qword ptr [rbx + 0x2000], r13
0x2b09:	movsx	r12d, byte ptr [rip + 0x20d603]
0x2b11:	lea	rbp, [rbx + r13]
0x2b15:	add	qword ptr [rsp + 0xb0], r13
0x2b1d:	mov	rdi, rbx
0x2b20:	mov	qword ptr [rbx + 0x2008], 0
0x2b2b:	mov	qword ptr [rbx + 0x2010], 0
0x2b36:	xor	r15d, r15d
0x2b39:	jmp	0x2b4e


0x2c57:	mov	rdi, rbx
0x2c5a:	mov	r15, qword ptr [rsp + 0x68]
0x2c5f:	call	0x1af0


0x2b4e:	mov	rdx, rbp
0x2b51:	mov	esi, r12d
0x2b54:	sub	rdx, rdi
0x2b57:	call	0x1cf0


0x2b5c:	test	rax, rax
0x2b5f:	lea	rdx, [r15 + 1]
0x2b63:	jne	0x2b40


0x2b65:	mov	rdi, qword ptr [r14 + 0x2000]
0x2b6c:	add	qword ptr [rsp + 0x38], r15
0x2b71:	lea	rax, [r13 + rdi]
0x2b76:	cmp	rax, 0x1fff
0x2b7c:	jbe	0x2bbd


0x2b40:	lea	rdi, [rax + 1]
0x2b44:	mov	qword ptr [rbx + 0x2008], rdx
0x2b4b:	mov	r15, rdx
0x2b4e:	mov	rdx, rbp
0x2b51:	mov	esi, r12d
0x2b54:	sub	rdx, rdi
0x2b57:	call	0x1cf0


0x2bbd:	add	rdi, r14
0x2bc0:	mov	rdx, r13
0x2bc3:	mov	rsi, rbx
0x2bc6:	call	0x1d60


0x2b7e:	mov	rsi, qword ptr [rsp + 0x50]
0x2b83:	mov	rax, qword ptr [rsp + 0x38]
0x2b88:	mov	qword ptr [r14 + 0x2010], rbx
0x2b8f:	sub	rax, qword ptr [rsi + 0x2008]
0x2b96:	cmp	qword ptr [rsp + 0x20], rax
0x2b9b:	jae	0x2c2f


0x2ba1:	mov	qword ptr [rsp + 0x38], rax
0x2ba6:	mov	rax, qword ptr [rsi + 0x2010]
0x2bad:	mov	r14, rbx
0x2bb0:	mov	rbx, rsi
0x2bb3:	mov	qword ptr [rsp + 0x50], rax
0x2bb8:	jmp	0x2ae0


0x2c2f:	mov	edi, 0x2018
0x2c34:	mov	r14, rbx
0x2c37:	call	0xa4d0


0x2ae0:	mov	edi, dword ptr [rsp + 8]
0x2ae4:	mov	edx, 0x2000
0x2ae9:	mov	rsi, rbx
0x2aec:	call	0x9e10


0x2c3c:	mov	rbx, rax
0x2c3f:	jmp	0x2ae0


0x2bcb:	mov	rax, qword ptr [rbx + 0x2000]
0x2bd2:	add	qword ptr [r14 + 0x2000], rax
0x2bd9:	mov	rax, qword ptr [rbx + 0x2008]
0x2be0:	add	qword ptr [r14 + 0x2008], rax
0x2be7:	jmp	0x2ae0


0x2c64:	add	r13, 1
0x2c68:	je	0x3a81


0x3a81:	mov	rsi, qword ptr [rsp + 0x48]
0x3a86:	mov	edi, 4
0x3a8b:	call	0x9b20


0x2c6e:	cmp	qword ptr [rsp + 0x20], 0
0x2c74:	mov	rax, qword ptr [r14 + 0x2000]
0x2c7b:	je	0x2c86


0x2c86:	cmp	qword ptr [rsp + 0x50], 0
0x2c8c:	je	0x2cb0


0x2c7d:	test	rax, rax
0x2c80:	jne	0x331b


0x2c8e:	mov	rdi, qword ptr [rsp + 0x50]
0x2c93:	nop	dword ptr [rax + rax]
0x2c98:	mov	rbx, qword ptr [rdi + 0x2010]
0x2c9f:	call	0x1af0


0x331b:	movsx	r12d, byte ptr [rip + 0x20cdf1]
0x3323:	cmp	byte ptr [r14 + rax - 1], r12b
0x3328:	je	0x3338


0x3338:	mov	r13, qword ptr [rsp + 0x50]
0x333d:	mov	rdx, qword ptr [rsp + 0x38]
0x3342:	mov	rcx, qword ptr [rsp + 0x20]
0x3347:	jmp	0x3353


0x332a:	add	qword ptr [r14 + 0x2008], 1
0x3332:	add	qword ptr [rsp + 0x38], 1
0x3338:	mov	r13, qword ptr [rsp + 0x50]
0x333d:	mov	rdx, qword ptr [rsp + 0x38]
0x3342:	mov	rcx, qword ptr [rsp + 0x20]
0x3347:	jmp	0x3353


0x3353:	mov	rax, rdx
0x3356:	sub	rax, qword ptr [r13 + 0x2008]
0x335d:	cmp	rcx, rax
0x3360:	jb	0x3349


0x3349:	mov	r13, qword ptr [r13 + 0x2010]
0x3350:	mov	rdx, rax
0x3353:	mov	rax, rdx
0x3356:	sub	rax, qword ptr [r13 + 0x2008]
0x335d:	cmp	rcx, rax
0x3360:	jb	0x3349


0x3362:	mov	rbp, qword ptr [r13 + 0x2000]
0x3369:	mov	rax, qword ptr [rsp + 0x20]
0x336e:	mov	rbx, rdx
0x3371:	mov	rdi, r13
0x3374:	add	rbp, r13
0x3377:	cmp	rax, rdx
0x337a:	jae	0x33a0


0x337c:	sub	rbx, rax
0x337f:	mov	rdx, rbp
0x3382:	mov	esi, r12d
0x3385:	sub	rdx, rdi
0x3388:	call	0x1cf0


0x33a0:	mov	rsi, rbp
0x33a3:	sub	rsi, rdi
0x33a6:	je	0x33ad


0x33ad:	mov	rbx, qword ptr [r13 + 0x2010]
0x33b4:	jmp	0x33bd


0x33a8:	call	0x4a90


0x33bd:	test	rbx, rbx
0x33c0:	je	0x2c86


0x33c6:	mov	rsi, qword ptr [rbx + 0x2000]
0x33cd:	test	rsi, rsi
0x33d0:	je	0x33b6


0x33b6:	mov	rbx, qword ptr [rbx + 0x2010]
0x33bd:	test	rbx, rbx
0x33c0:	je	0x2c86


0x33d2:	mov	rdi, rbx
0x33d5:	call	0x4a90


0x33da:	jmp	0x33b6


0x338d:	test	rax, rax
0x3390:	je	0x4813


0x4813:	lea	rcx, [rip + 0x812e]
0x481a:	lea	rsi, [rip + 0x6e81]
0x4821:	lea	rdi, [rip + 0x70e4]
0x4828:	mov	edx, 0x2e0
0x482d:	call	0x1cb0


0x3396:	sub	rbx, 1
0x339a:	lea	rdi, [rax + 1]
0x339e:	jne	0x337f


0x337f:	mov	rdx, rbp
0x3382:	mov	esi, r12d
0x3385:	sub	rdx, rdi
0x3388:	call	0x1cf0


0x2ca4:	test	rbx, rbx
0x2ca7:	mov	rdi, rbx
0x2caa:	jne	0x2c98


0x2c98:	mov	rbx, qword ptr [rdi + 0x2010]
0x2c9f:	call	0x1af0


0x3093:	test	eax, eax
0x3095:	je	0x33dc


0x33dc:	mov	edx, dword ptr [rsp + 8]
0x33e0:	mov	rsi, qword ptr [rsp + 0x48]
0x33e5:	or	rcx, 0xffffffffffffffff
0x33e9:	xor	edi, edi
0x33eb:	call	0x4c50


0x309b:	shr	eax, 0x1f
0x309e:	mov	dword ptr [rsp + 0x18], eax
0x30a2:	jmp	0x2cb0


0x33f0:	mov	byte ptr [rsp + 0x18], bl
0x33f4:	add	qword ptr [rsp + 0xb0], rax
0x33fc:	jmp	0x2cb0


0x2d42:	test	eax, eax
0x2d44:	js	0x32bd


0x32bd:	call	0x1b10


0x2d4a:	mov	edx, dword ptr [rsp + 0x238]
0x2d51:	mov	eax, edx
0x2d53:	and	eax, 0xf000
0x2d58:	sub	eax, 0x1000
0x2d5d:	test	eax, 0xffffe000
0x2d62:	je	0x2d76


0x2d76:	cmp	byte ptr [rsp + 0x18], 0
0x2d7b:	je	0x2e81


0x2d64:	mov	eax, edx
0x2d66:	and	eax, 0xb000
0x2d6b:	cmp	eax, 0x8000
0x2d70:	jne	0x2e04


0x2e81:	movzx	eax, byte ptr [rip + 0x20d292]
0x2e88:	mov	rdi, qword ptr [r15]
0x2e8b:	xor	eax, 1
0x2e8e:	mov	byte ptr [r15 + 0x34], al
0x2e92:	call	0x49e0


0x2d81:	mov	rcx, qword ptr [rsp + 0xb0]
0x2d89:	cmp	dword ptr [rsp + 0x44], 0
0x2d8e:	mov	eax, 1
0x2d93:	cmove	eax, dword ptr [rsp + 0x70]
0x2d98:	mov	ebx, dword ptr [rsp + 8]
0x2d9c:	mov	rdi, qword ptr [r15]
0x2d9f:	mov	dword ptr [r15 + 0x30], edx
0x2da3:	mov	qword ptr [r15 + 8], rcx
0x2da7:	mov	rcx, qword ptr [rsp + 0x278]
0x2daf:	mov	dword ptr [r15 + 0x38], ebx
0x2db3:	mov	qword ptr [r15 + 0x58], 0
0x2dbb:	mov	dword ptr [r15 + 0x40], eax
0x2dbf:	mov	byte ptr [r15 + 0x34], 0
0x2dc4:	mov	qword ptr [r15 + 0x10], rcx
0x2dc8:	mov	rcx, qword ptr [rsp + 0x280]
0x2dd0:	mov	qword ptr [r15 + 0x18], rcx
0x2dd4:	mov	rcx, qword ptr [rsp + 0x220]
0x2ddc:	mov	qword ptr [r15 + 0x20], rcx
0x2de0:	mov	rcx, qword ptr [rsp + 0x228]
0x2de8:	mov	qword ptr [r15 + 0x28], rcx
0x2dec:	call	0x49e0


0x2e04:	movzx	eax, byte ptr [rip + 0x20d30f]
0x2e0b:	mov	dword ptr [r15 + 0x3c], 0xffffffff
0x2e13:	lea	rbp, [rip + 0xa1e7]
0x2e1a:	mov	byte ptr [r15 + 0x36], 0
0x2e1f:	xor	eax, 1
0x2e22:	test	al, al
0x2e24:	mov	byte ptr [r15 + 0x34], al
0x2e28:	je	0x2e40


0x2e40:	mov	rdi, qword ptr [r15]
0x2e43:	call	0x49e0


0x2e2a:	lea	rsi, [rip + 0x88bd]
0x2e31:	mov	edx, 5
0x2e36:	xor	edi, edi
0x2e38:	call	0x1bd0


0x2e48:	mov	esi, 3
0x2e4d:	mov	rdx, rax
0x2e50:	xor	edi, edi
0x2e52:	call	0x9c20


0x2df1:	mov	edi, ebx
0x2df3:	mov	rsi, rax
0x2df6:	call	0x53a0


0x2dfb:	mov	byte ptr [r15 + 0x35], al
0x2dff:	jmp	0x29d5


0x2e97:	mov	edi, dword ptr [rsp + 8]
0x2e9b:	mov	rsi, rax
0x2e9e:	call	0x4a20


0x2ea3:	mov	dword ptr [r15 + 0x38], 0xffffffff
0x2eab:	mov	byte ptr [rsp + 0x18], 0
0x2eb0:	jmp	0x29d5


0x32c2:	mov	rbx, rax
0x32c5:	mov	eax, dword ptr [rax]
0x32c7:	mov	rdi, qword ptr [r15]
0x32ca:	mov	dword ptr [r15 + 0x3c], eax
0x32ce:	call	0x49e0


0x32d3:	mov	edi, 4
0x32d8:	mov	rsi, rax
0x32db:	call	0x9b20


0x27b6:	test	eax, eax
0x27b8:	jne	0x2f9e


0x27be:	movzx	eax, byte ptr [rip + 0x20d951]
0x27c5:	mov	ecx, eax
0x27c7:	mov	byte ptr [rsp + 0x18], al
0x27cb:	movzx	eax, byte ptr [rip + 0x20d93b]
0x27d2:	test	cl, cl
0x27d4:	je	0x2eb5


0x2f9e:	mov	rsi, qword ptr [rsp + 0x48]
0x2fa3:	mov	edi, 4
0x2fa8:	call	0x9b20


0x2eb5:	test	al, al
0x2eb7:	je	0x30a7


0x27da:	test	al, al
0x27dc:	jne	0x3029


0x30a7:	cmp	qword ptr [rsp + 0x20], 0
0x30ad:	js	0x2ebd


0x2ebd:	mov	edi, 0x2010
0x2ec2:	xor	r12d, r12d
0x2ec5:	call	0xa4d0


0x27e2:	cmp	qword ptr [rsp + 0x20], 0
0x27e8:	js	0x3029


0x3029:	mov	rdx, qword ptr [rsp + 0x20]
0x302e:	mov	esi, dword ptr [rsp + 8]
0x3032:	lea	rcx, [rsp + 0xb0]
0x303a:	mov	rdi, qword ptr [rsp + 0x48]
0x303f:	call	0x4da0


0x30b3:	mov	eax, dword ptr [rsp + 0x238]
0x30ba:	and	eax, 0xd000
0x30bf:	cmp	eax, 0x8000
0x30c4:	jne	0x3ba1


0x27ee:	mov	eax, dword ptr [rsp + 0x238]
0x27f5:	and	eax, 0xf000
0x27fa:	cmp	eax, 0x8000
0x27ff:	je	0x3408


0x30ca:	mov	rbp, qword ptr [rsp + 0x250]
0x30d2:	or	rbx, 0xffffffffffffffff
0x30d6:	mov	rax, qword ptr [rsp + 0x258]
0x30de:	movabs	rcx, 0x1fffffffffffffff
0x30e8:	lea	rdx, [rax - 1]
0x30ec:	cmp	rdx, rcx
0x30ef:	mov	edx, 0x200
0x30f4:	cmova	rax, rdx
0x30f8:	cmp	rbp, rax
0x30fb:	jle	0x2ebd


0x3ba1:	mov	r14, qword ptr [rsp + 0x20]
0x3ba6:	mov	edi, dword ptr [rsp + 8]
0x3baa:	mov	edx, 2
0x3baf:	mov	rsi, r14
0x3bb2:	neg	rsi
0x3bb5:	call	0x1ca0


0x3408:	mov	rcx, qword ptr [rsp + 0x48]
0x340d:	mov	rsi, qword ptr [rsp + 0x20]
0x3412:	mov	edx, 1
0x3417:	mov	edi, dword ptr [rsp + 8]
0x341b:	call	0x4ea0


0x2805:	mov	rsi, qword ptr [rsp + 0x20]
0x280a:	mov	edi, dword ptr [rsp + 8]
0x280e:	mov	edx, 1
0x2813:	call	0x1ca0


0x3101:	cmp	rbx, -1
0x3105:	je	0x3b53


0x3b53:	mov	rcx, qword ptr [rsp + 0x48]
0x3b58:	mov	edi, dword ptr [rsp + 8]
0x3b5c:	mov	edx, 1
0x3b61:	xor	esi, esi
0x3b63:	call	0x4ea0


0x310b:	cmp	rbp, rbx
0x310e:	jle	0x3121


0x3121:	mov	qword ptr [rsp + 0xb0], rbx
0x3129:	jmp	0x3051


0x3110:	mov	rax, rbp
0x3113:	sub	rax, rbx
0x3116:	cmp	qword ptr [rsp + 0x20], rax
0x311b:	jb	0x3b81


0x3051:	mov	rcx, qword ptr [rsp + 0x20]
0x3056:	mov	edx, dword ptr [rsp + 8]
0x305a:	xor	edi, edi
0x305c:	mov	rsi, qword ptr [rsp + 0x48]
0x3061:	call	0x4c50


0x3b81:	mov	rbx, rbp
0x3b84:	sub	rbx, qword ptr [rsp + 0x20]
0x3b89:	mov	rcx, qword ptr [rsp + 0x48]
0x3b8e:	mov	edi, dword ptr [rsp + 8]
0x3b92:	xor	edx, edx
0x3b94:	mov	rsi, rbx
0x3b97:	call	0x4ea0


0x3066:	mov	byte ptr [rsp + 0x18], 1
0x306b:	add	qword ptr [rsp + 0xb0], rax
0x3073:	jmp	0x2cb0


0x3b9c:	jmp	0x3121


0x3b68:	mov	rbx, rax
0x3b6b:	jmp	0x310b


0x3420:	test	rax, rax
0x3423:	jns	0x2822


0x3429:	jmp	0x2805


0x2822:	mov	rax, qword ptr [rsp + 0x20]
0x2827:	mov	qword ptr [rsp + 0x20], -1
0x2830:	add	qword ptr [rsp + 0xb0], rax
0x2838:	jmp	0x3051


0x2818:	add	rax, 1
0x281c:	je	0x3029


0x3bba:	cmp	rax, -1
0x3bbe:	mov	rbx, rax
0x3bc1:	je	0x2ebd


0x3bc7:	lea	rbp, [rax + r14]
0x3bcb:	jmp	0x30d6


0x30d6:	mov	rax, qword ptr [rsp + 0x258]
0x30de:	movabs	rcx, 0x1fffffffffffffff
0x30e8:	lea	rdx, [rax - 1]
0x30ec:	cmp	rdx, rcx
0x30ef:	mov	edx, 0x200
0x30f4:	cmova	rax, rdx
0x30f8:	cmp	rbp, rax
0x30fb:	jle	0x2ebd


0x3044:	test	eax, eax
0x3046:	mov	qword ptr [rsp + 0x20], -1
0x304f:	jne	0x309b


0x2eca:	mov	edi, 0x2010
0x2ecf:	mov	r13, rax
0x2ed2:	mov	qword ptr [rax + 0x2000], 0
0x2edd:	mov	qword ptr [rax + 0x2008], 0
0x2ee8:	mov	rbp, r13
0x2eeb:	call	0xa4d0


0x2ef0:	mov	r14d, dword ptr [rsp + 8]
0x2ef5:	mov	rbx, rax
0x2ef8:	jmp	0x2f29


0x2f29:	mov	edx, 0x2000
0x2f2e:	mov	rsi, rbx
0x2f31:	mov	edi, r14d
0x2f34:	call	0x9e10


0x2f39:	lea	rdx, [rax - 1]
0x2f3d:	cmp	rdx, -3
0x2f41:	ja	0x39dc


0x2f47:	add	qword ptr [rsp + 0xb0], rax
0x2f4f:	mov	qword ptr [rbx + 0x2000], rax
0x2f56:	add	r12, rax
0x2f59:	mov	rdx, qword ptr [r13 + 0x2000]
0x2f60:	mov	qword ptr [rbx + 0x2008], 0
0x2f6b:	lea	rsi, [rax + rdx]
0x2f6f:	cmp	rsi, 0x1fff
0x2f76:	ja	0x2efa


0x39dc:	mov	rdi, rbx
0x39df:	mov	qword ptr [rsp + 0x38], rax
0x39e4:	mov	rbx, rbp
0x39e7:	call	0x1af0


0x2f78:	lea	rdi, [r13 + rdx]
0x2f7d:	mov	rsi, rbx
0x2f80:	mov	rdx, rax
0x2f83:	call	0x1d60


0x2efa:	mov	rax, r12
0x2efd:	sub	rax, qword ptr [rbp + 0x2000]
0x2f04:	mov	qword ptr [r13 + 0x2008], rbx
0x2f0b:	cmp	qword ptr [rsp + 0x20], rax
0x2f10:	jae	0x330c


0x2f16:	mov	r12, rax
0x2f19:	mov	rax, rbp
0x2f1c:	mov	rbp, qword ptr [rbp + 0x2008]
0x2f23:	mov	r13, rbx
0x2f26:	mov	rbx, rax
0x2f29:	mov	edx, 0x2000
0x2f2e:	mov	rsi, rbx
0x2f31:	mov	edi, r14d
0x2f34:	call	0x9e10


0x330c:	mov	edi, 0x2010
0x3311:	call	0xa4d0


0x3316:	jmp	0x2f23


0x2f23:	mov	r13, rbx
0x2f26:	mov	rbx, rax
0x2f29:	mov	edx, 0x2000
0x2f2e:	mov	rsi, rbx
0x2f31:	mov	edi, r14d
0x2f34:	call	0x9e10


0x2f88:	mov	rax, qword ptr [rbx + 0x2000]
0x2f8f:	add	qword ptr [r13 + 0x2000], rax
0x2f96:	mov	rax, rbx
0x2f99:	mov	rbx, r13
0x2f9c:	jmp	0x2f23


0x39ec:	mov	rax, qword ptr [rsp + 0x38]
0x39f1:	add	rax, 1
0x39f5:	je	0x3bf6


0x3bf6:	mov	rsi, qword ptr [rsp + 0x48]
0x3bfb:	mov	edi, 4
0x3c00:	call	0x9b20


0x39fb:	mov	rcx, qword ptr [rsp + 0x20]
0x3a00:	jmp	0x3a0c


0x3a0c:	mov	rdx, qword ptr [rbx + 0x2000]
0x3a13:	mov	rax, r12
0x3a16:	sub	rax, rdx
0x3a19:	cmp	rcx, rax
0x3a1c:	jb	0x3a02


0x3a02:	mov	rbx, qword ptr [rbx + 0x2008]
0x3a09:	mov	r12, rax
0x3a0c:	mov	rdx, qword ptr [rbx + 0x2000]
0x3a13:	mov	rax, r12
0x3a16:	sub	rax, rdx
0x3a19:	cmp	rcx, rax
0x3a1c:	jb	0x3a02


0x3a1e:	mov	rcx, qword ptr [rsp + 0x20]
0x3a23:	xor	eax, eax
0x3a25:	cmp	rcx, r12
0x3a28:	jae	0x3a30


0x3a2a:	mov	rax, r12
0x3a2d:	sub	rax, rcx
0x3a30:	mov	rsi, rdx
0x3a33:	sub	rsi, rax
0x3a36:	jne	0x3be8


0x3a30:	mov	rsi, rdx
0x3a33:	sub	rsi, rax
0x3a36:	jne	0x3be8


0x3a3c:	mov	rbx, qword ptr [rbx + 0x2008]
0x3a43:	test	rbx, rbx
0x3a46:	je	0x3a5e


0x3be8:	lea	rdi, [rbx + rax]
0x3bec:	call	0x4a90


0x3a5e:	mov	byte ptr [rsp + 0x18], 1
0x3a63:	mov	rdi, rbp
0x3a66:	jmp	0x3a77


0x3a48:	mov	rsi, qword ptr [rbx + 0x2000]
0x3a4f:	test	rsi, rsi
0x3a52:	je	0x3a3c


0x3a77:	test	rdi, rdi
0x3a7a:	jne	0x3a68


0x3a54:	mov	rdi, rbx
0x3a57:	call	0x4a90


0x3a7c:	jmp	0x2cb0


0x3a68:	mov	rbx, qword ptr [rdi + 0x2008]
0x3a6f:	call	0x1af0


0x3a74:	mov	rdi, rbx
0x3a77:	test	rdi, rdi
0x3a7a:	jne	0x3a68


0x3a5c:	jmp	0x3a3c


0x3bf1:	jmp	0x3a3c


0x2ccd:	test	eax, eax
0x2ccf:	je	0x29d5


0x2cd5:	mov	rdi, qword ptr [r15]
0x2cd8:	call	0x49e0


0x2cdd:	mov	edi, 4
0x2ce2:	mov	rsi, rax
0x2ce5:	call	0x9b20


0x325c:	test	eax, eax
0x325e:	jns	0x2a1a


0x3264:	call	0x1b10


0x3269:	mov	esi, dword ptr [rax]
0x326b:	lea	rdx, [rip + 0x857d]
0x3272:	mov	edi, 1
0x3277:	xor	eax, eax
0x3279:	call	0x1e60


0x327e:	mov	rax, qword ptr [r15]
0x3281:	jmp	0x2765


0x2765:	mov	byte ptr [r15 + 0x36], 1
0x276a:	cmp	byte ptr [rip + 0x20d9a4], 0
0x2771:	jne	0x2bec


0x293a:	movzx	ebx, byte ptr [rip + 0x20d7d9]
0x2941:	mov	dword ptr [rsp + 8], eax
0x2945:	test	bl, bl
0x2947:	jne	0x2c44


0x294d:	cmp	dword ptr [rsp + 8], -1
0x2952:	mov	byte ptr [r15 + 0x36], 1
0x2957:	jne	0x47d0


0x2c44:	add	eax, 1
0x2c47:	jne	0x327e


0x295d:	call	0x1b10


0x47d0:	mov	rax, qword ptr [r15]
0x47d3:	jmp	0x276a


0x2c4d:	mov	byte ptr [r15 + 0x36], 0
0x2c52:	jmp	0x295d


0x276a:	cmp	byte ptr [rip + 0x20d9a4], 0
0x2771:	jne	0x2bec


0x2962:	cmp	byte ptr [rip + 0x20d7af], 0
0x2969:	mov	rbp, rax
0x296c:	je	0x2993


0x2993:	mov	rdi, qword ptr [r15]
0x2996:	call	0x49e0


0x296e:	mov	eax, dword ptr [rax]
0x2970:	xor	ebx, 1
0x2973:	mov	dword ptr [r15 + 0x38], 0xffffffff
0x297b:	mov	byte ptr [r15 + 0x34], bl
0x297f:	mov	qword ptr [r15 + 0x28], 0
0x2987:	mov	qword ptr [r15 + 0x20], 0
0x298f:	mov	dword ptr [r15 + 0x3c], eax
0x2993:	mov	rdi, qword ptr [r15]
0x2996:	call	0x49e0


0x299b:	mov	edi, 4
0x29a0:	mov	rsi, rax
0x29a3:	call	0x9b20


0x234e:	lea	rdx, [rip + 0xa603]
0x2355:	mov	eax, dword ptr [rdx + rax*4]
0x2358:	mov	dword ptr [rip + 0x20dcc2], eax
0x235e:	jmp	0x2040


0x2186:	add	rsp, 0x20
0x218a:	xor	edi, edi
0x218c:	call	0x1ec0


0x2e3d:	mov	rbp, rax
0x2e40:	mov	rdi, qword ptr [r15]
0x2e43:	call	0x49e0


0x37aa:	mov	rbx, rax
0x37ad:	call	0x1b10


0x37b2:	mov	esi, dword ptr [rax]
0x37b4:	mov	rdx, rbx
0x37b7:	mov	edi, 1
0x37bc:	xor	eax, eax
0x37be:	call	0x1e60


0x4868:	mov	rbx, rax
0x486b:	call	0x1b10


0x4870:	mov	esi, dword ptr [rax]
0x4872:	mov	rdx, rbx
0x4875:	mov	edi, 1
0x487a:	xor	eax, eax
0x487c:	call	0x1e60


0x399e:	xor	esi, esi
0x39a0:	mov	rdx, rax
0x39a3:	xor	edi, edi
0x39a5:	xor	eax, eax
0x39a7:	call	0x1e60


0x39ac:	jmp	0x2a0d


0x4894:	mov	rbx, rax
0x4897:	call	0x1b10


0x489c:	mov	esi, dword ptr [rax]
0x489e:	mov	rdx, rbx
0x48a1:	mov	edi, 1
0x48a6:	xor	eax, eax
0x48a8:	call	0x1e60


0x48ad:	nop	dword ptr [rax]


0x22e0:	mov	r8, rax
0x22e3:	mov	rdi, qword ptr [rip + 0x20ddee]
0x22ea:	lea	rcx, [rip + 0x9548]
0x22f1:	xor	r9d, r9d
0x22f4:	mov	rdx, -1
0x22fb:	xor	esi, esi
0x22fd:	call	0xa860


0x2302:	mov	qword ptr [rsp + 0x90], rax
0x230a:	jmp	0x2040


0x24cf:	mov	r8, rax
0x24d2:	jmp	0x22e3


0x22e3:	mov	rdi, qword ptr [rip + 0x20ddee]
0x22ea:	lea	rcx, [rip + 0x9548]
0x22f1:	xor	r9d, r9d
0x22f4:	mov	rdx, -1
0x22fb:	xor	esi, esi
0x22fd:	call	0xa860


0x237b:	mov	rdi, qword ptr [rip + 0x20dd56]
0x2382:	lea	rcx, [rip + 0xac78]
0x2389:	mov	r8, rax
0x238c:	xor	r9d, r9d
0x238f:	mov	edx, 0x7fffffff
0x2394:	xor	esi, esi
0x2396:	call	0xa860


0x239b:	mov	dword ptr [rip + 0x20dd6f], eax
0x23a1:	jmp	0x2040


0x3c5d:	mov	ecx, r13d
0x3c60:	mov	rdx, rax
0x3c63:	xor	esi, esi
0x3c65:	mov	edi, 1
0x3c6a:	xor	eax, eax
0x3c6c:	call	0x1e60


0x289b:	xor	esi, esi
0x289d:	mov	rdx, rax
0x28a0:	xor	edi, edi
0x28a2:	xor	eax, eax
0x28a4:	call	0x1e60


0x21bb:	mov	rdi, qword ptr [rip + 0x20df16]
0x21c2:	lea	rcx, [rip + 0xae38]
0x21c9:	mov	r8, rax
0x21cc:	xor	r9d, r9d
0x21cf:	mov	rdx, -1
0x21d6:	xor	esi, esi
0x21d8:	call	0xa860


0x21dd:	mov	qword ptr [rip + 0x20de34], rax
0x21e4:	jmp	0x2040


0x28d7:	xor	esi, esi
0x28d9:	mov	rdx, rax
0x28dc:	xor	edi, edi
0x28de:	xor	eax, eax
0x28e0:	call	0x1e60


0x28e5:	jmp	0x2566


0x320f:	test	eax, eax
0x3211:	je	0x3448


0x3167:	test	eax, eax
0x3169:	jne	0x3189


0x316b:	cmp	byte ptr [r13 + 0x34], 0
0x3170:	jne	0x3189


0x3189:	add	rbx, 1
0x318d:	add	r13, 0x60
0x3191:	jmp	0x3156


0x3172:	cmp	dword ptr [r13 + 0x38], 0
0x3177:	js	0x3189


0x3156:	cmp	rbp, r13
0x3159:	je	0x31a2


0x3179:	mov	eax, dword ptr [r13 + 0x30]
0x317d:	and	eax, 0xf000
0x3182:	cmp	eax, 0x1000
0x3187:	je	0x3193


0x3193:	mov	dword ptr [r13 + 0x38], 0xffffffff
0x319b:	mov	byte ptr [r13 + 0x34], 1
0x31a0:	jmp	0x318d


0x318d:	add	r13, 0x60
0x3191:	jmp	0x3156


0x2864:	test	eax, eax
0x2866:	je	0x23c9


0x286c:	jmp	0x200e


0xab28:	test	rax, rax
0xab2b:	mov	rcx, qword ptr [rsp + 8]
0xab30:	je	0xabfc


0xabfc:	mov	qword ptr [r14], rbx
0xabff:	or	ebp, 2
0xac02:	jmp	0xaabd


0xab36:	lea	eax, [r12 - 0x45]
0xab3b:	cmp	al, 0x2f
0xab3d:	ja	0xab90


0xab3f:	movabs	rdx, 0x814400308945
0xab49:	bt	rdx, rax
0xab4d:	jae	0xab90


0xab90:	mov	edi, 1
0xab95:	mov	esi, 0x400
0xab9a:	sub	r12d, 0x42
0xab9e:	cmp	r12b, 0x35
0xaba2:	ja	0xabfc


0xab4f:	mov	esi, 0x30
0xab54:	mov	rdi, r13
0xab57:	mov	qword ptr [rsp + 8], rcx
0xab5c:	call	0x1c40


0xaba4:	lea	rdx, [rip + 0x27c5]
0xabab:	movzx	r12d, r12b
0xabaf:	movsxd	rax, dword ptr [rdx + r12*4]
0xabb3:	add	rax, rdx
0xabb6:	jmp	rax


0xab61:	test	rax, rax
0xab64:	mov	rcx, qword ptr [rsp + 8]
0xab69:	je	0xab90


0xab6b:	movzx	eax, byte ptr [rcx + 1]
0xab6f:	cmp	al, 0x44
0xab71:	je	0xab7f


0xab7f:	mov	edi, 2
0xab84:	mov	esi, 0x3e8
0xab89:	jmp	0xab9a


0xab73:	cmp	al, 0x69
0xab75:	je	0xad48


0xab9a:	sub	r12d, 0x42
0xab9e:	cmp	r12b, 0x35
0xaba2:	ja	0xabfc


0xad48:	xor	edi, edi
0xad4a:	cmp	byte ptr [rcx + 2], 0x42
0xad4e:	mov	esi, 0x400
0xad53:	sete	dil
0xad57:	lea	edi, [rdi + rdi + 1]
0xad5b:	jmp	0xab9a


0xab7b:	cmp	al, 0x42
0xab7d:	jne	0xab90


0xab08:	test	rax, rax
0xab0b:	mov	ebx, 1
0xab10:	mov	rcx, qword ptr [rsp + 8]
0xab15:	je	0xaab8


0x3757:	sub	eax, 1
0x375a:	je	0x4841


0x4841:	mov	edi, 0xd
0x4846:	call	0x1ae0


0x1ae0:	jmp	qword ptr [rip + 0x20e2c2]




0x3d58:	test	eax, eax
0x3d5a:	mov	r13d, eax
0x3d5d:	js	0x3efd


0x3efd:	lea	rsi, [rip + 0x89e4]
0x3f04:	mov	edx, 5
0x3f09:	xor	edi, edi
0x3f0b:	call	0x1bd0


0x3d63:	mov	rdi, qword ptr [rip + 0x20c35e]
0x3d6a:	call	0x1ef0


0x3d6f:	test	eax, eax
0x3d71:	jne	0x4756


0x3d77:	mov	rdi, qword ptr [rsp + 0x18]
0x3d7c:	lea	rcx, [rip + 0xc4d]
0x3d83:	lea	rdx, [rip + 0xc36]
0x3d8a:	xor	r8d, r8d
0x3d8d:	xor	esi, esi
0x3d8f:	call	0x7540


0x4756:	lea	rsi, [rip + 0x6f39]
0x475d:	mov	edx, 5
0x4762:	xor	edi, edi
0x4764:	call	0x1bd0


0x3d94:	test	rax, rax
0x3d97:	mov	r14, rax
0x3d9a:	je	0x44fb


0x3da0:	cmp	dword ptr [rip + 0x20c279], 1
0x3da7:	mov	edx, 0xc06
0x3dac:	mov	eax, 2
0x3db1:	mov	r15, qword ptr [rsp + 0x28]
0x3db6:	mov	byte ptr [rsp + 0x10], 0
0x3dbb:	mov	byte ptr [rsp + 0x38], 0
0x3dc0:	mov	qword ptr [rsp + 8], r14
0x3dc5:	cmove	eax, edx
0x3dc8:	mov	edx, dword ptr [rip + 0x20c252]
0x3dce:	xor	r12d, r12d
0x3dd1:	mov	dword ptr [rsp + 0x44], eax
0x3dd5:	mov	rbx, r15
0x3dd8:	cmp	rbx, rbp
0x3ddb:	je	0x3fdd


0x3fdd:	cmp	edx, 2
0x3fe0:	mov	r14, qword ptr [rsp + 8]
0x3fe5:	je	0x4598


0x3de1:	cmp	byte ptr [rbx + 0x34], 0
0x3de5:	jne	0x3f8e


0x4598:	cmp	byte ptr [rsp + 0x10], 0
0x459d:	jne	0x3eea


0x3feb:	mov	r15, qword ptr [rsp + 0x28]
0x3ff0:	mov	rax, qword ptr [rsp + 0x60]
0x3ff5:	lea	rbx, [rsp + 0x98]
0x3ffd:	lea	rax, [r15 + rax - 0x60]
0x4002:	mov	qword ptr [rsp + 0x98], rax
0x400a:	lea	rax, [rsp + 0x220]
0x4012:	mov	qword ptr [rsp + 8], rax
0x4017:	jmp	0x4069


0x3deb:	mov	r15, qword ptr [rbx]
0x3dee:	xor	eax, eax
0x3df0:	or	rcx, 0xffffffffffffffff
0x3df4:	mov	rdi, r15
0x3df7:	repne scasb	al, byte ptr [rdi]


0x3f8e:	add	rbx, 0x60
0x3f92:	jmp	0x3dd8


0x45a3:	cmp	byte ptr [rsp + 0x38], 0
0x45a8:	jne	0x3feb


0x3eea:	mov	rdi, r14
0x3eed:	call	0x7790


0x4069:	cmp	r15, rbp
0x406c:	je	0x408a


0x3df7:	repne scasb	al, byte ptr [rdi]


0x3df9:	mov	dword ptr [rbx + 0x44], 0xffffffff
0x3e00:	mov	rax, rcx
0x3e03:	not	rax
0x3e06:	sub	rax, 1
0x3e0a:	cmp	r12, rax
0x3e0d:	cmovb	r12, rax
0x3e11:	sub	edx, 1
0x3e14:	jne	0x3e7d


0x3dd8:	cmp	rbx, rbp
0x3ddb:	je	0x3fdd


0x45ae:	jmp	0x42ba


0x408a:	lea	rax, [r12 + 0x11]
0x408f:	xor	r15d, r15d
0x4092:	mov	rdi, rax
0x4095:	mov	qword ptr [rsp + 0x38], rax
0x409a:	call	0xa4d0


0x406e:	cmp	byte ptr [r15 + 0x34], 0
0x4073:	jne	0x4065


0x3e16:	mov	rdi, r15
0x3e19:	call	0x6af0


0x3e7d:	mov	edx, dword ptr [rsp + 0x44]
0x3e81:	mov	rsi, qword ptr [rbx]
0x3e84:	mov	edi, r13d
0x3e87:	call	0x1de0


0x42ba:	mov	eax, 1
0x42bf:	jmp	0x2a28


0x4075:	cmp	dword ptr [rip + 0x20bfa4], 1
0x407c:	jne	0x4019


0x4065:	add	r15, 0x60
0x4069:	cmp	r15, rbp
0x406c:	je	0x408a


0x1de0:	jmp	qword ptr [rip + 0x20e142]


0x407e:	xor	esi, esi
0x4080:	mov	rdi, r15
0x4083:	call	0x5a90


0x4019:	cmp	dword ptr [r15 + 0x38], -1
0x401e:	je	0x405a




0x405a:	mov	rsi, rbx
0x405d:	mov	rdi, r15
0x4060:	call	0x51d0


0x4020:	mov	rdx, qword ptr [rsp + 8]
0x4025:	mov	rsi, qword ptr [r15]
0x4028:	mov	edi, 1
0x402d:	call	0x1db0


0x1db0:	jmp	qword ptr [rip + 0x20e15a]




0x4088:	jmp	0x405a


0x3e1e:	lea	rdx, [r15 + rax]
0x3e22:	mov	r14, rax
0x3e25:	mov	rdi, r15
0x3e28:	movzx	eax, byte ptr [rdx]
0x3e2b:	mov	qword ptr [rsp + 0x58], rdx
0x3e30:	mov	byte ptr [rsp + 0x48], al
0x3e34:	call	0x6bb0


0x3e39:	mov	rdx, qword ptr [rsp + 0x58]
0x3e3e:	sub	rax, r15
0x3e41:	test	r14, r14
0x3e44:	mov	qword ptr [rbx + 0x50], rax
0x3e48:	lea	rsi, [rip + 0x7985]
0x3e4f:	mov	byte ptr [rdx], 0
0x3e52:	je	0x3e57


0x3e57:	mov	edx, 0x784
0x3e5c:	mov	edi, r13d
0x3e5f:	call	0x1de0


0x3e54:	mov	rsi, qword ptr [rbx]
0x3e57:	mov	edx, 0x784
0x3e5c:	mov	edi, r13d
0x3e5f:	call	0x1de0


0x409f:	mov	ecx, r13d
0x40a2:	mov	qword ptr [rsp + 0x10], rax
0x40a7:	mov	eax, 1
0x40ac:	shl	rax, cl
0x40af:	mov	qword ptr [rsp + 8], 0
0x40b8:	mov	dword ptr [rsp + 0x48], 3
0x40c0:	mov	qword ptr [rsp + 0x70], rax
0x40c5:	lea	rax, [rsp + 0x110]
0x40cd:	mov	qword ptr [rsp + 0x58], rax
0x40d2:	movsxd	rax, r13d
0x40d5:	mov	qword ptr [rsp + 0x80], rax
0x40dd:	cmp	dword ptr [rip + 0x20bf3c], 1
0x40e4:	je	0x427b


0x427b:	cmp	byte ptr [rip + 0x20be98], 0
0x4282:	jne	0x40ea


0x40ea:	movzx	ebp, byte ptr [rsp + 0x20]
0x40ef:	lea	rbx, [rsp + 0xa0]
0x40f7:	cmp	r15, qword ptr [rsp + 8]
0x40fc:	jb	0x45dd


0x4288:	mov	rdi, r14
0x428b:	call	0x70c0


0x45dd:	mov	byte ptr [rsp + 0x20], bpl
0x45e2:	jmp	0x42d3


0x4102:	mov	edi, dword ptr [rip + 0x20c008]
0x4108:	test	edi, edi
0x410a:	je	0x414f


0x42d3:	mov	rax, qword ptr [rsp + 0x10]
0x42d8:	lea	rbp, [rax + r15]
0x42dc:	mov	edx, dword ptr [rbp + 0xc]
0x42df:	mov	ecx, dword ptr [rbp + 4]
0x42e2:	test	ch, 4
0x42e5:	lea	r15, [r15 + rdx + 0x10]
0x42ea:	je	0x43b3


0x414f:	xor	eax, eax
0x4151:	mov	ecx, 0x10
0x4156:	mov	rdi, qword ptr [rsp + 0x58]
0x415b:	cld	
0x415c:	rep stosq	qword ptr [rdi], rax


0x410c:	test	bpl, bpl
0x410f:	jne	0x468f


0x43b3:	test	edx, edx
0x43b5:	jne	0x42f8


0x42f0:	test	edx, edx
0x42f2:	je	0x4500


0x415c:	rep stosq	qword ptr [rdi], rax


0x4115:	xor	esi, esi
0x4117:	call	0x1d70


0x468f:	xor	edi, edi
0x4691:	call	0x1ec0


0x43bb:	mov	edx, dword ptr [rbp]
0x43be:	lea	rsi, [rsp + 0xb0]
0x43c6:	mov	rdi, r14
0x43c9:	mov	dword ptr [rsp + 0xf4], edx
0x43d0:	call	0x72d0


0x42f8:	lea	rax, [rbp + 0x10]
0x42fc:	mov	qword ptr [rsp + 0x68], r15
0x4301:	mov	rbx, qword ptr [rsp + 0x28]
0x4306:	mov	r15, r14
0x4309:	xor	r12d, r12d
0x430c:	mov	r14d, r13d
0x430f:	mov	qword ptr [rsp + 0x78], rax
0x4314:	mov	r13, rbp
0x4317:	mov	rbp, qword ptr [rsp + 0x18]
0x431c:	jmp	0x4326


0x4500:	mov	edx, dword ptr [rbp]
0x4503:	xor	eax, eax
0x4505:	jmp	0x450b


0x415f:	mov	rdi, qword ptr [rsp + 0x80]
0x4167:	call	0x1c50


0x4326:	cmp	rbp, r12
0x4329:	je	0x43da


0x450b:	cmp	qword ptr [rsp + 0x18], rax
0x4510:	je	0x43be


0x1c50:	jmp	qword ptr [rip + 0x20e20a]


0x43da:	mov	r13d, r14d
0x43dd:	mov	r14, r15
0x43e0:	mov	r15, qword ptr [rsp + 0x68]
0x43e5:	jmp	0x40dd


0x432f:	mov	eax, dword ptr [r13]
0x4333:	cmp	dword ptr [rbx + 0x48], eax
0x4336:	jne	0x431e


0x43be:	lea	rsi, [rsp + 0xb0]
0x43c6:	mov	rdi, r14
0x43c9:	mov	dword ptr [rsp + 0xf4], edx
0x43d0:	call	0x72d0


0x4516:	imul	rcx, rax, 0x60
0x451a:	mov	rsi, qword ptr [rsp + 0x28]
0x451f:	cmp	dword ptr [rsi + rcx + 0x48], edx
0x4523:	jne	0x4507




0x40dd:	cmp	dword ptr [rip + 0x20bf3c], 1
0x40e4:	je	0x427b


0x4338:	mov	rsi, qword ptr [rbx + 0x50]
0x433c:	add	rsi, qword ptr [rbx]
0x433f:	mov	rdi, qword ptr [rsp + 0x78]
0x4344:	mov	dword ptr [rsp + 0x8c], ecx
0x434b:	call	0x1d40


0x431e:	add	r12, 1
0x4322:	add	rbx, 0x60
0x4326:	cmp	rbp, r12
0x4329:	je	0x43da


0x4525:	mov	rdi, r14
0x4528:	call	0x7790


0x4507:	add	rax, 1
0x450b:	cmp	qword ptr [rsp + 0x18], rax
0x4510:	je	0x43be


0x4350:	test	eax, eax
0x4352:	mov	ecx, dword ptr [rsp + 0x8c]
0x4359:	jne	0x431e


0x435b:	imul	rbx, r12, 0x60
0x435f:	mov	rbp, r13
0x4362:	mov	r13d, r14d
0x4365:	add	rbx, qword ptr [rsp + 0x28]
0x436a:	and	ch, 2
0x436d:	mov	r14, r15
0x4370:	mov	r15, qword ptr [rsp + 0x68]
0x4375:	je	0x43ff


0x43ff:	mov	edx, dword ptr [rsp + 0x44]
0x4403:	mov	rsi, qword ptr [rbx]
0x4406:	mov	edi, r13d
0x4409:	call	0x1de0


0x437b:	cmp	dword ptr [rip + 0x20bc9e], 1
0x4382:	je	0x45ce


0x45ce:	xor	esi, esi
0x45d0:	mov	rdi, rbx
0x45d3:	call	0x5a90


0x4388:	test	rbx, rbx
0x438b:	je	0x40dd


0x4391:	mov	eax, dword ptr [rbp + 4]
0x4394:	test	eax, 0xe04
0x4399:	je	0x43ea


0x43ea:	lea	rsi, [rsp + 0x98]
0x43f2:	mov	rdi, rbx
0x43f5:	call	0x51d0


0x439b:	test	ah, 4
0x439e:	jne	0x45b3


0x43a4:	xor	esi, esi
0x43a6:	mov	rdi, rbx
0x43a9:	call	0x5a90


0x45b3:	mov	esi, dword ptr [rbx + 0x44]
0x45b6:	mov	edi, r13d
0x45b9:	call	0x1f20


0x1f20:	jmp	qword ptr [rip + 0x20e0a2]




0x43fa:	jmp	0x40dd


0x43ae:	jmp	0x40dd


0x45d8:	jmp	0x4388


0x4290:	test	rax, rax
0x4293:	jne	0x40ea


0x4299:	lea	rsi, [rip + 0x76ac]
0x42a0:	mov	edx, 5
0x42a5:	xor	edi, edi
0x42a7:	call	0x1bd0


0x42ac:	xor	esi, esi
0x42ae:	mov	rdx, rax
0x42b1:	xor	edi, edi
0x42b3:	xor	eax, eax
0x42b5:	call	0x1e60


0x4769:	mov	rbx, rax
0x476c:	call	0x1b10


0x4771:	mov	esi, dword ptr [rax]
0x4773:	mov	rdx, rbx
0x4776:	mov	edi, 1
0x477b:	xor	eax, eax
0x477d:	call	0x1e60


0x3f10:	mov	rbx, rax
0x3f13:	call	0x1b10


0x3f18:	mov	esi, dword ptr [rax]
0x3f1a:	mov	rdx, rbx
0x3f1d:	xor	eax, eax
0x3f1f:	xor	edi, edi
0x3f21:	call	0x1e60


0x3f26:	mov	rax, qword ptr [rsp + 0x28]
0x3f2b:	mov	rsi, qword ptr [rsp + 0x60]
0x3f30:	lea	rbp, [rax + 0x44]
0x3f34:	lea	rbx, [rax + rsi + 0x44]
0x3f39:	jmp	0x3f5f


0x3f5f:	cmp	rbx, rbp
0x3f62:	jne	0x3f3b


0x3f64:	jmp	0x3448


0x3f3b:	mov	esi, dword ptr [rbp]
0x3f3e:	cmp	esi, -1
0x3f41:	je	0x3f4b


0x3f4b:	mov	esi, dword ptr [rbp + 4]
0x3f4e:	cmp	esi, -1
0x3f51:	je	0x3f5b


0x3f43:	mov	edi, r13d
0x3f46:	call	0x1f20


0x3f5b:	add	rbp, 0x60
0x3f5f:	cmp	rbx, rbp
0x3f62:	jne	0x3f3b


0x3f53:	mov	edi, r13d
0x3f56:	call	0x1f20


0x2900:	test	eax, eax
0x2902:	je	0x2650


0x2908:	lea	rsi, [rip + 0x9ee1]
0x290f:	xor	edi, edi
0x2911:	mov	edx, 5
0x2916:	call	0x1bd0


0x291b:	xor	esi, esi
0x291d:	mov	rdx, rax
0x2920:	xor	edi, edi
0x2922:	xor	eax, eax
0x2924:	call	0x1e60


0x2929:	jmp	0x2650


0x411c:	test	eax, eax
0x411e:	je	0x423d


0x423d:	movsd	xmm4, qword ptr [rsp + 0x30]
0x4243:	pxor	xmm0, xmm0
0x4247:	cvttsd2si	rax, xmm4
0x424c:	cvtsi2sd	xmm0, rax
0x4251:	mov	qword ptr [rsp + 0xa0], rax
0x4259:	subsd	xmm4, xmm0
0x425d:	movsd	xmm0, qword ptr [rip + 0x8703]
0x4265:	mulsd	xmm0, xmm4
0x4269:	cvttsd2si	rax, xmm0
0x426e:	mov	qword ptr [rsp + 0xa8], rax
0x4276:	jmp	0x414f


0x4124:	call	0x1b10


0x4129:	cmp	dword ptr [rax], 1
0x412c:	je	0x423d


0x4132:	movzx	ebp, byte ptr [rsp + 0x50]
0x4137:	mov	qword ptr [rsp + 0xa8], 0
0x4143:	mov	qword ptr [rsp + 0xa0], 0
0x414f:	xor	eax, eax
0x4151:	mov	ecx, 0x10
0x4156:	mov	rdi, qword ptr [rsp + 0x58]
0x415b:	cld	
0x415c:	rep stosq	qword ptr [rdi], rax


0x39b8:	test	eax, eax
0x39ba:	je	0x3784


0x39c0:	call	0x1b10


0x39c5:	cmp	dword ptr [rax], 1
0x39c8:	je	0x3784


0x39ce:	movzx	eax, byte ptr [rsp + 0x50]
0x39d3:	mov	byte ptr [rsp + 0x48], al
0x39d7:	jmp	0x34ac


0x252d:	test	eax, eax
0x252f:	je	0x2566


0x2531:	call	0x1b10


0x2536:	cmp	dword ptr [rax], 0x26
0x2539:	jne	0x2566


0x253b:	lea	rsi, [rip + 0xa276]
0x2542:	mov	edx, 5
0x2547:	xor	edi, edi
0x2549:	call	0x1bd0


0x254e:	xor	esi, esi
0x2550:	mov	rdx, rax
0x2553:	xor	edi, edi
0x2555:	xor	eax, eax
0x2557:	call	0x1e60


0x255c:	mov	dword ptr [rip + 0x20dbaa], 0
0x2566:	cmp	byte ptr [rip + 0x20dba9], 0
0x256d:	je	0x2588


0x45be:	mov	rsi, rbx
0x45c1:	mov	rdi, r14
0x45c4:	call	0x7da0


0x416c:	mov	rcx, qword ptr [rsp + 0x70]
0x4171:	or	qword ptr [rsp + rax*8 + 0x110], rcx
0x4179:	cmp	byte ptr [rip + 0x20bf97], 0
0x4180:	je	0x418b


0x418b:	xor	r8d, r8d
0x418e:	cmp	dword ptr [rip + 0x20bf7b], 0
0x4195:	mov	edi, 1
0x419a:	mov	rsi, qword ptr [rsp + 0x58]
0x419f:	cmovne	r8, rbx
0x41a3:	test	r13d, r13d
0x41a6:	cmovg	edi, r13d
0x41aa:	xor	ecx, ecx
0x41ac:	xor	edx, edx
0x41ae:	add	edi, 1
0x41b1:	call	0x1da0


0x4182:	or	qword ptr [rsp + 0x110], 2
0x418b:	xor	r8d, r8d
0x418e:	cmp	dword ptr [rip + 0x20bf7b], 0
0x4195:	mov	edi, 1
0x419a:	mov	rsi, qword ptr [rsp + 0x58]
0x419f:	cmovne	r8, rbx
0x41a3:	test	r13d, r13d
0x41a6:	cmovg	edi, r13d
0x41aa:	xor	ecx, ecx
0x41ac:	xor	edx, edx
0x41ae:	add	edi, 1
0x41b1:	call	0x1da0


0x41b6:	test	eax, eax
0x41b8:	je	0x40f7


0x40f7:	cmp	r15, qword ptr [rsp + 8]
0x40fc:	jb	0x45dd


0x41be:	add	eax, 1
0x41c1:	mov	byte ptr [rsp + 0x20], bpl
0x41c6:	je	0x4696


0x4696:	lea	rsi, [rip + 0x81eb]
0x469d:	mov	edx, 5
0x46a2:	xor	edi, edi
0x46a4:	call	0x1bd0


0x41cc:	test	byte ptr [rsp + 0x110], 2
0x41d4:	jne	0x4841


0x41da:	mov	rdx, qword ptr [rsp + 0x38]
0x41df:	mov	rsi, qword ptr [rsp + 0x10]
0x41e4:	mov	edi, r13d
0x41e7:	call	0x9e10


0x41ec:	test	rax, rax
0x41ef:	mov	qword ptr [rsp + 8], rax
0x41f4:	jne	0x42c4


0x41fa:	cmp	dword ptr [rsp + 0x48], 0
0x41ff:	je	0x456c


0x42c4:	xor	r15d, r15d
0x42c7:	cmp	qword ptr [rsp + 8], -1
0x42cd:	je	0x455e


0x456c:	lea	rsi, [rip + 0x73ec]
0x4573:	mov	edx, 5
0x4578:	xor	edi, edi
0x457a:	call	0x1bd0


0x4205:	mov	rsi, qword ptr [rsp + 0x38]
0x420a:	mov	rdi, qword ptr [rsp + 0x10]
0x420f:	xor	r15d, r15d
0x4212:	sub	dword ptr [rsp + 0x48], 1
0x4217:	mov	rax, rsi
0x421a:	add	rax, rsi
0x421d:	mov	rsi, rax
0x4220:	mov	qword ptr [rsp + 0x38], rax
0x4225:	call	0xa530


0x455e:	call	0x1b10


0x4563:	cmp	dword ptr [rax], 0x16
0x4566:	je	0x41fa


0x422a:	mov	qword ptr [rsp + 8], 0
0x4233:	mov	qword ptr [rsp + 0x10], rax
0x4238:	jmp	0x40dd


0x457f:	mov	rbx, rax
0x4582:	call	0x1b10


0x4587:	mov	esi, dword ptr [rax]
0x4589:	mov	rdx, rbx
0x458c:	mov	edi, 1
0x4591:	xor	eax, eax
0x4593:	call	0x1e60


0x46a9:	mov	rbx, rax
0x46ac:	call	0x1b10


0x46b1:	mov	esi, dword ptr [rax]
0x46b3:	mov	rdx, rbx
0x46b6:	mov	edi, 1
0x46bb:	xor	eax, eax
0x46bd:	call	0x1e60


0x46c2:	call	0x1b10


0x46c7:	cmp	dword ptr [rax], 0x1c
0x46ca:	mov	r15, rbx
0x46cd:	mov	r14, qword ptr [rsp + 8]
0x46d2:	mov	rbx, rax
0x46d5:	je	0x3ec9


0x3ec9:	lea	rsi, [rip + 0x7a40]
0x3ed0:	mov	edx, 5
0x3ed5:	xor	edi, edi
0x3ed7:	call	0x1bd0


0x46db:	mov	rsi, qword ptr [r15]
0x46de:	mov	edi, 4
0x46e3:	call	0x9b20


0x3edc:	xor	esi, esi
0x3ede:	mov	rdx, rax
0x3ee1:	xor	edi, edi
0x3ee3:	xor	eax, eax
0x3ee5:	call	0x1e60


0x4032:	test	eax, eax
0x4034:	jne	0x405a


0x4036:	mov	rax, qword ptr [rsp + 0x220]
0x403e:	cmp	qword ptr [r15 + 0x20], rax
0x4042:	jne	0x45e7


0x4048:	mov	rax, qword ptr [rsp + 0x228]
0x4050:	cmp	qword ptr [r15 + 0x28], rax
0x4054:	jne	0x45e7


0x45e7:	mov	rdi, qword ptr [r15]
0x45ea:	call	0x49e0


0x45ef:	mov	edi, 4
0x45f4:	mov	rsi, rax
0x45f7:	call	0x9b20


0x440e:	test	eax, eax
0x4410:	mov	r12d, eax
0x4413:	jns	0x446e


0x4415:	call	0x1b10


0x446e:	mov	esi, dword ptr [rbx + 0x44]
0x4471:	test	esi, esi
0x4473:	js	0x447e


0x447e:	test	esi, esi
0x4480:	js	0x4495


0x4475:	cmp	r12d, esi
0x4478:	je	0x437b


0x4495:	mov	dword ptr [rbx + 0x44], r12d
0x4499:	add	r12d, 1
0x449d:	je	0x40dd


0x4482:	mov	edi, r13d
0x4485:	call	0x1f20


0x44a3:	mov	rsi, rbx
0x44a6:	mov	rdi, r14
0x44a9:	call	0x7da0


0x448a:	mov	rsi, rbx
0x448d:	mov	rdi, r14
0x4490:	call	0x7da0


0x441a:	mov	r8, rax
0x441d:	mov	eax, dword ptr [rax]
0x441f:	and	eax, 0xffffffef
0x4422:	cmp	eax, 0xc
0x4425:	je	0x4641


0x4641:	lea	rsi, [rip + 0x72c8]
0x4648:	mov	edx, 5
0x464d:	xor	edi, edi
0x464f:	mov	qword ptr [rsp + 8], r8
0x4654:	call	0x1bd0


0x442b:	mov	rsi, qword ptr [rbx]
0x442e:	mov	edi, 4
0x4433:	mov	qword ptr [rsp + 0x78], r8
0x4438:	call	0x9b20


0x4659:	xor	esi, esi
0x465b:	mov	rdx, rax
0x465e:	xor	edi, edi
0x4660:	xor	eax, eax
0x4662:	call	0x1e60


0x4667:	mov	rdi, r14
0x466a:	call	0x7790


0x3e64:	movzx	ecx, byte ptr [rsp + 0x48]
0x3e69:	mov	dword ptr [rbx + 0x48], eax
0x3e6c:	mov	rax, qword ptr [rbx]
0x3e6f:	mov	byte ptr [rax + r14], cl
0x3e73:	cmp	dword ptr [rbx + 0x48], 0
0x3e77:	js	0x46c2


0x3e8c:	test	eax, eax
0x3e8e:	mov	dword ptr [rbx + 0x44], eax
0x3e91:	jns	0x3f69


0x3e97:	cmp	dword ptr [rbx + 0x38], -1
0x3e9b:	movzx	eax, byte ptr [rsp + 0x10]
0x3ea0:	movzx	esi, byte ptr [rsp + 0x50]
0x3ea5:	cmovne	eax, esi
0x3ea8:	mov	byte ptr [rsp + 0x10], al
0x3eac:	call	0x1b10


0x3f69:	mov	rdi, qword ptr [rsp + 8]
0x3f6e:	mov	rsi, rbx
0x3f71:	call	0x7d40


0x3eb1:	mov	r14, rax
0x3eb4:	mov	eax, dword ptr [rax]
0x3eb6:	mov	edx, eax
0x3eb8:	and	edx, 0xffffffef
0x3ebb:	cmp	edx, 0xc
0x3ebe:	jne	0x3f97


0x3ec4:	mov	r14, qword ptr [rsp + 8]
0x3ec9:	lea	rsi, [rip + 0x7a40]
0x3ed0:	mov	edx, 5
0x3ed5:	xor	edi, edi
0x3ed7:	call	0x1bd0


0x3f97:	cmp	eax, dword ptr [rbx + 0x3c]
0x3f9a:	je	0x3f88


0x3f88:	mov	edx, dword ptr [rip + 0x20c092]
0x3f8e:	add	rbx, 0x60
0x3f92:	jmp	0x3dd8


0x3f9c:	mov	rsi, qword ptr [rbx]
0x3f9f:	mov	edi, 4
0x3fa4:	call	0x9b20


0x484b:	mov	edi, 1
0x4850:	call	0x1ec0


0x3f76:	test	rax, rax
0x3f79:	je	0x44fb


0x3f7f:	movzx	eax, byte ptr [rsp + 0x50]
0x3f84:	mov	byte ptr [rsp + 0x38], al
0x3f88:	mov	edx, dword ptr [rip + 0x20c092]
0x3f8e:	add	rbx, 0x60
0x3f92:	jmp	0x3dd8


0x44ae:	test	rax, rax
0x44b1:	mov	r12, rax
0x44b4:	je	0x44e7


0x44e7:	mov	rsi, rbx
0x44ea:	mov	rdi, r14
0x44ed:	call	0x7d40


0x44b6:	cmp	rbx, rax
0x44b9:	je	0x44e7


0x44bb:	cmp	dword ptr [rip + 0x20bb5e], 1
0x44c2:	je	0x4680


0x4680:	xor	esi, esi
0x4682:	mov	rdi, rax
0x4685:	call	0x5a90


0x44c8:	mov	rdi, qword ptr [r12]
0x44cc:	mov	dword ptr [r12 + 0x44], 0xffffffff
0x44d5:	call	0x49e0


0x44da:	mov	edi, dword ptr [r12 + 0x38]
0x44df:	mov	rsi, rax
0x44e2:	call	0x4a20


0x468a:	jmp	0x44c8


0x44f2:	test	rax, rax
0x44f5:	jne	0x437b


0x45c9:	jmp	0x43a4


0x43d5:	mov	rbx, rax
0x43d8:	jmp	0x4388


0x466f:	mov	r8, qword ptr [rsp + 8]
0x4674:	mov	dword ptr [r8], 0
0x467b:	jmp	0x3efd


0x452d:	lea	rsi, [rip + 0x8384]
0x4534:	mov	edx, 5
0x4539:	xor	edi, edi
0x453b:	call	0x1bd0


0x4540:	xor	esi, esi
0x4542:	mov	rdx, rax
0x4545:	xor	edi, edi
0x4547:	xor	eax, eax
0x4549:	call	0x1e60


0x454e:	call	0x1b10


0x4553:	mov	dword ptr [rax], 0
0x4559:	jmp	0x3efd


0x3ef2:	call	0x1b10


0x3ef7:	mov	dword ptr [rax], 0
0x3efd:	lea	rsi, [rip + 0x89e4]
0x3f04:	mov	edx, 5
0x3f09:	xor	edi, edi
0x3f0b:	call	0x1bd0


0x2221:	test	al, al
0x2223:	je	0x2242


0x2242:	mov	rdi, qword ptr [rip + 0x20de8f]
0x2249:	call	0x9df0


0x2225:	pxor	xmm3, xmm3
0x2229:	movsd	xmm1, qword ptr [rsp + 0xb0]
0x2232:	ucomisd	xmm1, xmm3
0x2236:	movsd	qword ptr [rsp + 0x30], xmm1
0x223c:	jae	0x2040


0x6aaa:	mov	esi, dword ptr [rbx]
0x6aac:	lea	rdx, [rip + 0x4d4f]
0x6ab3:	mov	rcx, rax
0x6ab6:	mov	r8, rbp
0x6ab9:	xor	edi, edi
0x6abb:	xor	eax, eax
0x6abd:	call	0x1e60


0x224e:	lea	rsi, [rip + 0x9606]
0x2255:	mov	rbx, rax
0x2258:	mov	edx, 5
0x225d:	xor	edi, edi
0x225f:	call	0x1bd0


0x2264:	mov	rcx, rbx
0x2267:	mov	rdx, rax
0x226a:	xor	esi, esi
0x226c:	mov	edi, 1
0x2271:	xor	eax, eax
0x2273:	call	0x1e60


0x471d:	lea	rsi, [rip + 0x70cf]
0x4724:	mov	edx, 5
0x4729:	xor	edi, edi
0x472b:	mov	rbp, rax
0x472e:	call	0x1bd0


0x4733:	mov	rbx, rax
0x4736:	call	0x1b10


0x473b:	mov	esi, dword ptr [rax]
0x473d:	lea	rdx, [rip + 0x70be]
0x4744:	mov	r8, rbp
0x4747:	mov	rcx, rbx
0x474a:	mov	edi, 1
0x474f:	xor	eax, eax
0x4751:	call	0x1e60


0xa7d2:	mov	esi, dword ptr [r14]
0xa7d5:	mov	r8, rax
0xa7d8:	mov	eax, 0
0xa7dd:	lea	rdx, [rip + 0x101e]
0xa7e4:	mov	rcx, r13
0xa7e7:	cmp	esi, 0x16
0xa7ea:	cmove	esi, eax
0xa7ed:	test	ebx, ebx
0xa7ef:	mov	eax, 1
0xa7f4:	cmove	ebx, eax
0xa7f7:	xor	eax, eax
0xa7f9:	mov	edi, ebx
0xa7fb:	call	0x1e60


0xa800:	mov	rbp, qword ptr [rsp]
0xa804:	mov	rdx, qword ptr [rsp + 8]
0xa809:	xor	rdx, qword ptr fs:[0x28]
0xa812:	mov	rax, rbp
0xa815:	jne	0xa85b


0x682e:	mov	rdi, qword ptr [rip + 0x2098cb]
0x6835:	lea	rdx, [rip + 0x618e]
0x683c:	mov	rcx, rax
0x683f:	mov	esi, 1
0x6844:	xor	eax, eax
0x6846:	call	0x1ee0


0x684b:	mov	r15, qword ptr [r14 + rbx*8]
0x684f:	test	r15, r15
0x6852:	jne	0x6808


0x67df:	mov	rdi, qword ptr [rip + 0x20991a]
0x67e6:	lea	rdx, [rip + 0x61d5]
0x67ed:	mov	rcx, rax
0x67f0:	mov	esi, 1
0x67f5:	xor	eax, eax
0x67f7:	add	rbp, r12
0x67fa:	call	0x1ee0


0x67ff:	mov	r15, qword ptr [r14 + rbx*8]
0x6803:	test	r15, r15
0x6806:	je	0x6858


0x959c:	add	rsp, 0x20
0x95a0:	mov	r11, qword ptr [rsp + 0x10]
0x95a5:	cmp	r11, rax
0x95a8:	ja	0x9611


0x95aa:	lea	rsi, [rax + 1]
0x95ae:	lea	rax, [rip + 0x206b8b]
0x95b5:	cmp	r12, rax
0x95b8:	mov	qword ptr [rbx], rsi
0x95bb:	je	0x95cf


0x9611:	mov	eax, dword ptr [rsp + 0x18]
0x9615:	mov	dword ptr [r13], eax
0x9619:	add	rsp, 0x28
0x961d:	mov	rax, r12
0x9620:	pop	rbx
0x9621:	pop	rbp
0x9622:	pop	r12
0x9624:	pop	r13
0x9626:	pop	r14
0x9628:	pop	r15
0x962a:	ret	


0x95cf:	mov	rdi, rsi
0x95d2:	mov	qword ptr [rsp + 0x10], rsi
0x95d7:	call	0xa4d0


0x95bd:	mov	rdi, r12
0x95c0:	mov	qword ptr [rsp + 0x10], rsi
0x95c5:	call	0x1af0


0x95ca:	mov	rsi, qword ptr [rsp + 0x10]
0x95cf:	mov	rdi, rsi
0x95d2:	mov	qword ptr [rsp + 0x10], rsi
0x95d7:	call	0xa4d0


0x95dc:	sub	rsp, 8
0x95e0:	mov	qword ptr [rbx + 8], rax
0x95e4:	mov	r8d, dword ptr [rbp]
0x95e8:	push	qword ptr [rbp + 0x30]
0x95eb:	push	qword ptr [rbp + 0x28]
0x95ee:	mov	rcx, r14
0x95f1:	push	r15
0x95f3:	mov	r9d, dword ptr [rsp + 0x3c]
0x95f8:	mov	rdi, rax
0x95fb:	mov	rdx, qword ptr [rsp + 0x28]
0x9600:	mov	rsi, qword ptr [rsp + 0x30]
0x9605:	mov	r12, rax
0x9608:	call	0x8270


0x9d22:	mov	rdi, qword ptr [rsp + 0x38]
0x9d27:	xor	rdi, qword ptr fs:[0x28]
0x9d30:	jne	0x9d3c


0x9d32:	add	rsp, 0x48
0x9d36:	ret	


0x9d3c:	call	0x1c10


0x9a6f:	mov	rcx, qword ptr [rsp + 0x38]
0x9a74:	xor	rcx, qword ptr fs:[0x28]
0x9a7d:	jne	0x9a89


0x9a7f:	add	rsp, 0x48
0x9a83:	ret	


0x9a89:	call	0x1c10


0x9afb:	mov	rdx, qword ptr [rsp + 0x38]
0x9b00:	xor	rdx, qword ptr fs:[0x28]
0x9b09:	jne	0x9b15


0x9b0b:	add	rsp, 0x48
0x9b0f:	ret	


0x9b15:	call	0x1c10


0x9c8f:	mov	rcx, qword ptr [rsp + 0x38]
0x9c94:	xor	rcx, qword ptr fs:[0x28]
0x9c9d:	jne	0x9ca9


0x9c9f:	add	rsp, 0x48
0x9ca3:	ret	


0x9ca9:	call	0x1c10


0x2e57:	lea	rsi, [rip + 0x99d2]
0x2e5e:	mov	rbx, rax
0x2e61:	mov	edx, 5
0x2e66:	xor	edi, edi
0x2e68:	call	0x1bd0


0x2e6d:	mov	r8, rbp
0x2e70:	mov	rdx, rax
0x2e73:	mov	rcx, rbx
0x2e76:	xor	esi, esi
0x2e78:	xor	edi, edi
0x2e7a:	xor	eax, eax
0x2e7c:	call	0x1e60


0x47a1:	lea	rsi, [rip + 0x8170]
0x47a8:	mov	edx, 5
0x47ad:	xor	edi, edi
0x47af:	mov	rbx, rax
0x47b2:	call	0x1bd0


0x47b7:	mov	r9, qword ptr [rsp]
0x47bb:	mov	rdx, rax
0x47be:	mov	rcx, rbx
0x47c1:	mov	edi, 1
0x47c6:	xor	eax, eax
0x47c8:	mov	esi, dword ptr [r9]
0x47cb:	call	0x1e60


0x390c:	mov	esi, dword ptr [r12]
0x3910:	lea	rdx, [rip + 0x90b5]
0x3917:	mov	rcx, rax
0x391a:	xor	edi, edi
0x391c:	xor	eax, eax
0x391e:	call	0x1e60


0x3923:	mov	edi, ebp
0x3925:	call	0x1ce0


0x392a:	jmp	0x34e2


0x38a1:	lea	rsi, [rip + 0x7ddb]
0x38a8:	mov	edx, 5
0x38ad:	xor	edi, edi
0x38af:	mov	qword ptr [rsp + 0x38], rax
0x38b4:	call	0x1bd0


0x38b9:	mov	rcx, qword ptr [rsp + 0x38]
0x38be:	mov	rdx, rax
0x38c1:	xor	esi, esi
0x38c3:	xor	edi, edi
0x38c5:	xor	eax, eax
0x38c7:	call	0x1e60


0x38cc:	mov	rcx, r13
0x38cf:	xor	edx, edx
0x38d1:	xor	esi, esi
0x38d3:	mov	edi, ebp
0x38d5:	call	0x4ea0


0x38da:	mov	qword ptr [r14 + 8], 0
0x38e2:	jmp	0x35d6


0x5b87:	mov	esi, dword ptr [r13]
0x5b8b:	lea	rdx, [rip + 0x6e3a]
0x5b92:	mov	rcx, rax
0x5b95:	xor	edi, edi
0x5b97:	xor	eax, eax
0x5b99:	call	0x1e60


0x5b9e:	mov	rbp, qword ptr [rbx]
0x5ba1:	mov	rdi, rbp
0x5ba4:	call	0x49e0


0x4f1a:	lea	rsi, [rip + 0x6745]
0x4f21:	mov	rbx, rax
0x4f24:	mov	edx, 5
0x4f29:	xor	edi, edi
0x4f2b:	call	0x1bd0


0x4f30:	mov	esi, dword ptr [rbp]
0x4f33:	mov	rdx, rax
0x4f36:	xor	edi, edi
0x4f38:	mov	r8, r13
0x4f3b:	mov	rcx, rbx
0x4f3e:	xor	eax, eax
0x4f40:	call	0x1e60


0x4f45:	mov	edi, 1
0x4f4a:	call	0x1ec0


0x4f55:	mov	edx, 5
0x4f5a:	mov	rbx, rax
0x4f5d:	lea	rsi, [rip + 0x6ac4]
0x4f64:	jmp	0x4f29


0x4f29:	xor	edi, edi
0x4f2b:	call	0x1bd0


0x534f:	lea	rsi, [rip + 0x632d]
0x5356:	mov	r14, rax
0x5359:	mov	edx, 5
0x535e:	xor	edi, edi
0x5360:	call	0x1bd0


0x5365:	mov	rcx, r14
0x5368:	mov	rdx, rax
0x536b:	xor	esi, esi
0x536d:	xor	edi, edi
0x536f:	xor	eax, eax
0x5371:	call	0x1e60


0x5376:	mov	edi, dword ptr [rbx + 0x38]
0x5379:	mov	rcx, r13
0x537c:	xor	edx, edx
0x537e:	xor	esi, esi
0x5380:	call	0x4ea0


0x5385:	mov	qword ptr [rbx + 8], 0
0x538d:	jmp	0x525e


0x9bbe:	mov	rsi, qword ptr [rsp + 0x38]
0x9bc3:	xor	rsi, qword ptr fs:[0x28]
0x9bcc:	jne	0x9bd3


0x9bce:	add	rsp, 0x48
0x9bd2:	ret	


0x9bd3:	call	0x1c10


0x960d:	add	rsp, 0x20
0x9611:	mov	eax, dword ptr [rsp + 0x18]
0x9615:	mov	dword ptr [r13], eax
0x9619:	add	rsp, 0x28
0x961d:	mov	rax, r12
0x9620:	pop	rbx
0x9621:	pop	rbp
0x9622:	pop	r12
0x9624:	pop	r13
0x9626:	pop	r14
0x9628:	pop	r15
0x962a:	ret	


0x985c:	lea	rsi, [rax + 1]
0x9860:	mov	qword ptr [rsp + 0x48], rax
0x9865:	add	rsp, 0x20
0x9869:	mov	rdi, rsi
0x986c:	mov	qword ptr [rsp + 0x18], rsi
0x9871:	call	0xa4d0


0x9876:	mov	qword ptr [rsp + 0x10], rax
0x987b:	sub	rsp, 8
0x987f:	push	qword ptr [rbx + 0x30]
0x9882:	push	qword ptr [rbx + 0x28]
0x9885:	mov	r10, qword ptr [rsp + 0x38]
0x988a:	mov	r9d, ebp
0x988d:	mov	r8d, dword ptr [rbx]
0x9890:	mov	rcx, r15
0x9893:	mov	rdx, r14
0x9896:	mov	rdi, rax
0x9899:	push	r10
0x989b:	mov	rsi, qword ptr [rsp + 0x38]
0x98a0:	call	0x8270


0x98a5:	mov	eax, dword ptr [rsp + 0x2c]
0x98a9:	add	rsp, 0x20
0x98ad:	test	r12, r12
0x98b0:	mov	dword ptr [r13], eax
0x98b4:	je	0x98bf


0x98bf:	mov	rax, qword ptr [rsp + 0x10]
0x98c4:	add	rsp, 0x38
0x98c8:	pop	rbx
0x98c9:	pop	rbp
0x98ca:	pop	r12
0x98cc:	pop	r13
0x98ce:	pop	r14
0x98d0:	pop	r15
0x98d2:	ret	


0x98b6:	mov	r11, qword ptr [rsp + 0x28]
0x98bb:	mov	qword ptr [r12], r11
0x98bf:	mov	rax, qword ptr [rsp + 0x10]
0x98c4:	add	rsp, 0x38
0x98c8:	pop	rbx
0x98c9:	pop	rbp
0x98ca:	pop	r12
0x98cc:	pop	r13
0x98ce:	pop	r14
0x98d0:	pop	r15
0x98d2:	ret	


0x97d1:	mov	dword ptr [rbp], r12d
0x97d5:	add	rsp, 0x38
0x97d9:	pop	rbx
0x97da:	pop	rbp
0x97db:	pop	r12
0x97dd:	pop	r13
0x97df:	pop	r14
0x97e1:	pop	r15
0x97e3:	ret	


0x6733:	mov	rdx, r12
0x6736:	mov	rbp, rax
0x6739:	mov	esi, 8
0x673e:	xor	edi, edi
0x6740:	call	0x9a00


0x6745:	mov	r8, rbp
0x6748:	mov	rdx, rbx
0x674b:	mov	rcx, rax
0x674e:	pop	rbx
0x674f:	pop	rbp
0x6750:	pop	r12
0x6752:	xor	esi, esi
0x6754:	xor	edi, edi
0x6756:	xor	eax, eax
0x6758:	jmp	0x1e60


0x68f3:	mov	rdx, r15
0x68f6:	mov	rsi, rbp
0x68f9:	mov	rdi, rbx
0x68fc:	call	0x6780


0x6901:	call	r13


0x3fa9:	lea	rsi, [rip + 0x797c]
0x3fb0:	mov	edx, 5
0x3fb5:	xor	edi, edi
0x3fb7:	mov	qword ptr [rsp + 0x48], rax
0x3fbc:	call	0x1bd0


0x3fc1:	mov	rcx, qword ptr [rsp + 0x48]
0x3fc6:	mov	esi, dword ptr [r14]
0x3fc9:	mov	rdx, rax
0x3fcc:	xor	edi, edi
0x3fce:	xor	eax, eax
0x3fd0:	call	0x1e60


0x3fd5:	mov	edx, dword ptr [rip + 0x20c045]
0x3fdb:	jmp	0x3f8e


0x443d:	lea	rsi, [rip + 0x74e8]
0x4444:	mov	edx, 5
0x4449:	xor	edi, edi
0x444b:	mov	qword ptr [rsp + 0x68], rax
0x4450:	call	0x1bd0


0x4455:	mov	r8, qword ptr [rsp + 0x78]
0x445a:	mov	rcx, qword ptr [rsp + 0x68]
0x445f:	mov	rdx, rax
0x4462:	xor	edi, edi
0x4464:	xor	eax, eax
0x4466:	mov	esi, dword ptr [r8]
0x4469:	call	0x1e60


0x45fc:	lea	rsi, [rip + 0x7339]
0x4603:	mov	edx, 5
0x4608:	xor	edi, edi
0x460a:	mov	rbp, rax
0x460d:	call	0x1bd0


0x4612:	mov	r12, rax
0x4615:	call	0x1b10


0x461a:	mov	esi, dword ptr [rax]
0x461c:	mov	rbx, rax
0x461f:	mov	rcx, rbp
0x4622:	mov	rdx, r12
0x4625:	xor	edi, edi
0x4627:	xor	eax, eax
0x4629:	call	0x1e60


0x462e:	mov	rdi, r14
0x4631:	call	0x7790


0x4636:	mov	dword ptr [rbx], 0
0x463c:	jmp	0x3efd


0x46e8:	lea	rsi, [rip + 0x8171]
0x46ef:	xor	edi, edi
0x46f1:	mov	edx, 5
0x46f6:	mov	rbp, rax
0x46f9:	call	0x1bd0


0x46fe:	mov	esi, dword ptr [rbx]
0x4700:	mov	rdx, rax
0x4703:	mov	rcx, rbp
0x4706:	xor	edi, edi
0x4708:	xor	eax, eax
0x470a:	call	0x1e60


0x470f:	jmp	0x3eea


0x29a8:	lea	rsi, [rip + 0x8f32]
0x29af:	mov	edx, 5
0x29b4:	xor	edi, edi
0x29b6:	mov	rbx, rax
0x29b9:	call	0x1bd0


0x29be:	mov	esi, dword ptr [rbp]
0x29c1:	mov	rdx, rax
0x29c4:	mov	rcx, rbx
0x29c7:	xor	edi, edi
0x29c9:	xor	eax, eax
0x29cb:	call	0x1e60


0x29d0:	mov	byte ptr [rsp + 0x18], 0
0x29d5:	add	qword ptr [rsp + 0x10], 1
0x29db:	movzx	ecx, byte ptr [rsp + 0x18]
0x29e0:	add	r15, 0x60
0x29e4:	and	byte ptr [rsp + 0x8b], cl
0x29eb:	mov	rax, qword ptr [rsp + 0x10]
0x29f0:	cmp	rax, qword ptr [rsp]
0x29f4:	jne	0x2720


0x2cea:	lea	rsi, [rip + 0x8956]
0x2cf1:	mov	edx, 5
0x2cf6:	xor	edi, edi
0x2cf8:	mov	rbx, rax
0x2cfb:	call	0x1bd0


0x2d00:	mov	rbp, rax
0x2d03:	call	0x1b10


0x2d08:	mov	esi, dword ptr [rax]
0x2d0a:	mov	rcx, rbx
0x2d0d:	mov	rdx, rbp
0x2d10:	xor	edi, edi
0x2d12:	xor	eax, eax
0x2d14:	call	0x1e60


0x2d19:	mov	byte ptr [rsp + 0x18], 0
0x2d1e:	jmp	0x29d5


0x3c05:	lea	rsi, [rip + 0x7a3b]
0x3c0c:	mov	edx, 5
0x3c11:	xor	edi, edi
0x3c13:	mov	rbx, rax
0x3c16:	call	0x1bd0


0x3c1b:	mov	r12, rax
0x3c1e:	call	0x1b10


0x3c23:	mov	esi, dword ptr [rax]
0x3c25:	xor	edi, edi
0x3c27:	mov	rcx, rbx
0x3c2a:	mov	rdx, r12
0x3c2d:	xor	eax, eax
0x3c2f:	call	0x1e60


0x3c34:	mov	rdi, rbp
0x3c37:	jmp	0x3a77


0x2fad:	lea	rsi, [rip + 0x8948]
0x2fb4:	xor	edi, edi
0x2fb6:	mov	edx, 5
0x2fbb:	mov	rbx, rax
0x2fbe:	call	0x1bd0


0x2fc3:	mov	rbp, rax
0x2fc6:	call	0x1b10


0x2fcb:	mov	esi, dword ptr [rax]
0x2fcd:	mov	rcx, rbx
0x2fd0:	mov	rdx, rbp
0x2fd3:	xor	edi, edi
0x2fd5:	xor	eax, eax
0x2fd7:	call	0x1e60


0x2fdc:	jmp	0x2cb0


0x32e0:	lea	rsi, [rip + 0x8360]
0x32e7:	xor	edi, edi
0x32e9:	mov	edx, 5
0x32ee:	mov	rbp, rax
0x32f1:	call	0x1bd0


0x32f6:	mov	esi, dword ptr [rbx]
0x32f8:	mov	rdx, rax
0x32fb:	mov	rcx, rbp
0x32fe:	xor	edi, edi
0x3300:	xor	eax, eax
0x3302:	call	0x1e60


0x3307:	jmp	0x2e81


0x3a90:	lea	rsi, [rip + 0x7bb0]
0x3a97:	mov	edx, 5
0x3a9c:	xor	edi, edi
0x3a9e:	mov	rbx, rax
0x3aa1:	call	0x1bd0


0x3aa6:	mov	rbp, rax
0x3aa9:	call	0x1b10


0x3aae:	mov	esi, dword ptr [rax]
0x3ab0:	mov	rcx, rbx
0x3ab3:	mov	rdx, rbp
0x3ab6:	xor	edi, edi
0x3ab8:	xor	eax, eax
0x3aba:	call	0x1e60


0x3abf:	mov	byte ptr [rsp + 0x18], 0
0x3ac4:	jmp	0x2c86


0x2ff0:	lea	rsi, [rip + 0x8905]
0x2ff7:	mov	edx, 5
0x2ffc:	xor	edi, edi
0x2ffe:	mov	rbx, rax
0x3001:	call	0x1bd0


0x3006:	mov	rbp, rax
0x3009:	call	0x1b10


0x300e:	mov	esi, dword ptr [rax]
0x3010:	mov	rcx, rbx
0x3013:	mov	rdx, rbp
0x3016:	xor	edi, edi
0x3018:	xor	eax, eax
0x301a:	call	0x1e60


0x301f:	mov	byte ptr [rsp + 0x18], 0
0x3024:	jmp	0x2cb0


0x47e9:	lea	rsi, [rip + 0x70d8]
0x47f0:	mov	rbx, rax
0x47f3:	mov	edx, 5
0x47f8:	xor	edi, edi
0x47fa:	call	0x1bd0


0x47ff:	mov	rcx, rbx
0x4802:	mov	rdx, rax
0x4805:	xor	esi, esi
0x4807:	mov	edi, 1
0x480c:	xor	eax, eax
0x480e:	call	0x1e60


0x4ad6:	lea	rsi, [rip + 0x6b59]
0x4add:	mov	edx, 5
0x4ae2:	xor	edi, edi
0x4ae4:	mov	rbp, rax
0x4ae7:	call	0x1bd0


0x4aec:	mov	rbx, rax
0x4aef:	call	0x1b10


0x4af4:	mov	esi, dword ptr [rax]
0x4af6:	mov	rcx, rbp
0x4af9:	mov	rdx, rbx
0x4afc:	mov	edi, 1
0x4b01:	xor	eax, eax
0x4b03:	call	0x1e60


0x4b08:	nop	dword ptr [rax + rax]


0x5dd9:	lea	rsi, [rip + 0x58f3]
0x5de0:	mov	edx, 5
0x5de5:	xor	edi, edi
0x5de7:	mov	rbp, rax
0x5dea:	call	0x1bd0


0x5def:	mov	esi, dword ptr [rbx + 0x3c]
0x5df2:	mov	rcx, rbp
0x5df5:	mov	rdx, rax
0x5df8:	xor	edi, edi
0x5dfa:	xor	eax, eax
0x5dfc:	call	0x1e60


0x5e01:	mov	rbp, qword ptr [rbx]
0x5e04:	jmp	0x5ba1


0x547d:	lea	rsi, [rip + 0x65cc]
0x5484:	xor	edi, edi
0x5486:	mov	edx, 5
0x548b:	mov	rbp, rax
0x548e:	call	0x1bd0


0x5493:	mov	esi, dword ptr [r12]
0x5497:	mov	rdx, rax
0x549a:	mov	rcx, rbp
0x549d:	xor	edi, edi
0x549f:	xor	eax, eax
0x54a1:	call	0x1e60


0x54a6:	jmp	0x53dd


0x4d69:	lea	rsi, [rip + 0x68d7]
0x4d70:	mov	edx, 5
0x4d75:	xor	edi, edi
0x4d77:	mov	rbp, rax
0x4d7a:	call	0x1bd0


0x4d7f:	mov	esi, dword ptr [rbx]
0x4d81:	mov	rdx, rax
0x4d84:	mov	rcx, rbp
0x4d87:	mov	edi, 1
0x4d8c:	xor	eax, eax
0x4d8e:	call	0x1e60


0x4d93:	nop	dword ptr [rax]
0x4d96:	nop	word ptr cs:[rax + rax]


0x4c08:	lea	rsi, [rip + 0x6a38]
0x4c0f:	mov	edx, 5
0x4c14:	xor	edi, edi
0x4c16:	mov	rbp, rax
0x4c19:	call	0x1bd0


0x4c1e:	mov	rbx, rax
0x4c21:	call	0x1b10


0x4c26:	mov	esi, dword ptr [rax]
0x4c28:	mov	rcx, rbp
0x4c2b:	xor	eax, eax
0x4c2d:	mov	rdx, rbx
0x4c30:	xor	edi, edi
0x4c32:	call	0x1e60


0x4c37:	mov	eax, 1
0x4c3c:	jmp	0x4bb8


0x4e5d:	lea	rsi, [rip + 0x67e3]
0x4e64:	mov	edx, 5
0x4e69:	xor	edi, edi
0x4e6b:	mov	rbp, rax
0x4e6e:	call	0x1bd0


0x4e73:	mov	rbx, rax
0x4e76:	call	0x1b10


0x4e7b:	mov	esi, dword ptr [rax]
0x4e7d:	mov	rcx, rbp
0x4e80:	xor	eax, eax
0x4e82:	mov	rdx, rbx
0x4e85:	xor	edi, edi
0x4e87:	call	0x1e60


0x4e8c:	mov	eax, 1
0x4e91:	jmp	0x4e2a


0x514f:	lea	rsi, [rip + 0x64f1]
0x5156:	mov	edx, 5
0x515b:	xor	edi, edi
0x515d:	mov	rbp, rax
0x5160:	call	0x1bd0


0x5165:	mov	rbx, rax
0x5168:	call	0x1b10


0x516d:	mov	esi, dword ptr [rax]
0x516f:	mov	rcx, rbp
0x5172:	xor	eax, eax
0x5174:	mov	rdx, rbx
0x5177:	xor	edi, edi
0x5179:	call	0x1e60


0x517e:	xor	eax, eax
0x5180:	jmp	0x50d5


0x5e39:	lea	rsi, [rip + 0x5cb0]
0x5e40:	mov	rbp, rax
0x5e43:	mov	edx, 5
0x5e48:	xor	edi, edi
0x5e4a:	call	0x1bd0


0x5e4f:	mov	rcx, rbp
0x5e52:	mov	rdx, rax
0x5e55:	xor	esi, esi
0x5e57:	xor	edi, edi
0x5e59:	xor	eax, eax
0x5e5b:	call	0x1e60


0x5e60:	mov	byte ptr [rbx + 0x34], 1
0x5e64:	mov	byte ptr [rbx + 0x35], 1
0x5e68:	mov	rbp, qword ptr [rbx]
0x5e6b:	jmp	0x5ba1


0x60a2:	mov	edx, 5
0x60a7:	mov	r14, rax
0x60aa:	lea	rsi, [rip + 0x5a77]
0x60b1:	jmp	0x5d0f


0x5d0f:	xor	edi, edi
0x5d11:	call	0x1bd0


0x5d16:	mov	rcx, r14
0x5d19:	mov	rdx, rax
0x5d1c:	xor	esi, esi
0x5d1e:	xor	edi, edi
0x5d20:	xor	eax, eax
0x5d22:	call	0x1e60


0x5d27:	test	ebp, ebp
0x5d29:	mov	eax, 0xffffffff
0x5d2e:	movzx	r13d, r13b
0x5d32:	cmove	r13d, eax
0x5d36:	mov	rax, qword ptr [rsp + 0x68]
0x5d3b:	mov	rdi, qword ptr [rbx]
0x5d3e:	mov	dword ptr [rbx + 0x38], r12d
0x5d42:	mov	qword ptr [rbx + 8], 0
0x5d4a:	mov	dword ptr [rbx + 0x40], r13d
0x5d4e:	mov	qword ptr [rbx + 0x58], 0
0x5d56:	mov	qword ptr [rbx + 0x10], rax
0x5d5a:	mov	rax, qword ptr [rsp + 0x70]
0x5d5f:	mov	byte ptr [rbx + 0x34], 0
0x5d63:	mov	qword ptr [rbx + 0x18], rax
0x5d67:	mov	rax, qword ptr [rsp + 0x10]
0x5d6c:	mov	qword ptr [rbx + 0x20], rax
0x5d70:	mov	rax, qword ptr [rsp + 0x18]
0x5d75:	mov	qword ptr [rbx + 0x28], rax
0x5d79:	mov	eax, dword ptr [rsp + 0x28]
0x5d7d:	mov	dword ptr [rbx + 0x30], eax
0x5d80:	call	0x49e0


0x5d85:	xor	edx, edx
0x5d87:	mov	rcx, rax
0x5d8a:	xor	esi, esi
0x5d8c:	mov	edi, r12d
0x5d8f:	call	0x4ea0


0x5d94:	jmp	0x5bce


0x5d00:	lea	rsi, [rip + 0x5a0c]
0x5d07:	mov	r14, rax
0x5d0a:	mov	edx, 5
0x5d0f:	xor	edi, edi
0x5d11:	call	0x1bd0


0x6012:	lea	rsi, [rip + 0x5b37]
0x6019:	mov	r14, rax
0x601c:	xor	edi, edi
0x601e:	mov	edx, 5
0x6023:	call	0x1bd0


0x6028:	xor	esi, esi
0x602a:	mov	rdx, rax
0x602d:	mov	rcx, r14
0x6030:	xor	edi, edi
0x6032:	xor	eax, eax
0x6034:	call	0x1e60


0x6039:	mov	rdi, qword ptr [rbx]
0x603c:	call	0x49e0


0x6041:	mov	edi, dword ptr [rbx + 0x38]
0x6044:	mov	rsi, rax
0x6047:	call	0x4a20


0x604c:	jmp	0x5d27


0x4a55:	lea	rsi, [rip + 0x6bb7]
0x4a5c:	mov	edx, 5
0x4a61:	xor	edi, edi
0x4a63:	mov	r12, rax
0x4a66:	call	0x1bd0


0x4a6b:	mov	rbp, rax
0x4a6e:	call	0x1b10


0x4a73:	mov	r8d, ebx
0x4a76:	mov	rcx, r12
0x4a79:	mov	rdx, rbp
0x4a7c:	pop	rbx
0x4a7d:	pop	rbp
0x4a7e:	pop	r12
0x4a80:	mov	esi, dword ptr [rax]
0x4a82:	xor	edi, edi
0x4a84:	xor	eax, eax
0x4a86:	jmp	0x1e60


0x5f39:	lea	rsi, [rip + 0x5b48]
0x5f40:	mov	rbp, rax
0x5f43:	mov	edx, 5
0x5f48:	xor	edi, edi
0x5f4a:	call	0x1bd0


0x5f4f:	mov	rcx, rbp
0x5f52:	mov	rdx, rax
0x5f55:	xor	esi, esi
0x5f57:	xor	edi, edi
0x5f59:	xor	eax, eax
0x5f5b:	call	0x1e60


0x5f60:	mov	rbp, qword ptr [rbx]
0x5f63:	jmp	0x5ba1


0x5eaf:	lea	rsi, [rip + 0x5c0a]
0x5eb6:	mov	rbp, rax
0x5eb9:	mov	edx, 5
0x5ebe:	xor	edi, edi
0x5ec0:	call	0x1bd0


0x5ec5:	mov	r8, r13
0x5ec8:	mov	rdx, rax
0x5ecb:	mov	rcx, rbp
0x5ece:	xor	esi, esi
0x5ed0:	xor	edi, edi
0x5ed2:	xor	eax, eax
0x5ed4:	call	0x1e60


0x9e86:	mov	r12d, eax
0x9e89:	call	0x1b10


0x9e8e:	mov	r13d, dword ptr [rax]
0x9e91:	mov	rbp, rax
0x9e94:	mov	edi, ebx
0x9e96:	call	0x1ce0


0x9e9b:	mov	ebx, r12d
0x9e9e:	mov	dword ptr [rbp], r13d
0x9ea2:	add	rsp, 8
0x9ea6:	mov	eax, ebx
0x9ea8:	pop	rbx
0x9ea9:	pop	rbp
0x9eaa:	pop	r12
0x9eac:	pop	r13
0x9eae:	ret	


0x6904:	mov	rax, -1
0x690b:	jmp	0x68d6


0xa94f:	mov	rcx, qword ptr [rsp]
0xa953:	cmp	rcx, rbp
0xa956:	je	0xa9c8


0xa9c8:	xor	eax, eax
0xa9ca:	jmp	0xa976


0xa958:	test	rbx, rbx
0xa95b:	je	0xa9a8


0xa976:	test	rbx, rbx
0xa979:	je	0xa97e


0xa9a8:	xor	eax, eax
0xa9aa:	cmp	byte ptr [rcx], 0
0xa9ad:	jne	0xa97e


0xa95d:	ucomisd	xmm0, qword ptr [rip + 0x29bb]
0xa965:	jp	0xa96e


0xa97e:	mov	rdx, qword ptr [rsp + 8]
0xa983:	xor	rdx, qword ptr fs:[0x28]
0xa98c:	movsd	qword ptr [r13], xmm0
0xa992:	jne	0xa9cc


0xa97b:	mov	qword ptr [rbx], rcx
0xa97e:	mov	rdx, qword ptr [rsp + 8]
0xa983:	xor	rdx, qword ptr fs:[0x28]
0xa98c:	movsd	qword ptr [r13], xmm0
0xa992:	jne	0xa9cc


0xa9af:	ucomisd	xmm0, qword ptr [rip + 0x2969]
0xa9b7:	jp	0xa96e


0xa96e:	cmp	dword ptr [r12], 0x22
0xa973:	setne	al
0xa976:	test	rbx, rbx
0xa979:	je	0xa97e


0xa967:	mov	eax, 1
0xa96c:	je	0xa97b


0xa994:	add	rsp, 0x10
0xa998:	pop	rbx
0xa999:	pop	rbp
0xa99a:	pop	r12
0xa99c:	pop	r13
0xa99e:	pop	r14
0xa9a0:	ret	


0xa9cc:	call	0x1c10


0xa9b9:	jne	0xa96e


0xa9bb:	mov	eax, 1
0xa9c0:	jmp	0xa97e


0xb5ad:	add	rbx, 1
0xb5b1:	cmp	rbp, rbx
0xb5b4:	jne	0xb5a0


0xb5a0:	mov	rdx, r15
0xb5a3:	mov	rsi, r14
0xb5a6:	mov	edi, r13d
0xb5a9:	call	qword ptr [r12 + rbx*8]


0x77d8:	mov	rbx, qword ptr [rbx + 8]
0x77dc:	test	rbx, rbx
0x77df:	jne	0x77d0


0x77e1:	mov	rax, qword ptr [r12 + 8]
0x77e6:	add	rbp, 0x10
0x77ea:	cmp	rax, rbp
0x77ed:	ja	0x77b8


0x77d0:	mov	rdi, qword ptr [rbx]
0x77d3:	call	qword ptr [r12 + 0x40]


0x7732:	mov	rax, qword ptr [rbp + 0x40]
0x7736:	mov	rdx, qword ptr [rbx + 8]
0x773a:	mov	rcx, qword ptr [rbp + 0x48]
0x773e:	mov	qword ptr [rbx], 0
0x7745:	test	rdx, rdx
0x7748:	mov	qword ptr [rbx + 8], rcx
0x774c:	mov	qword ptr [rbp + 0x48], rbx
0x7750:	mov	rbx, rdx
0x7753:	jne	0x7728


0x74a9:	test	al, al
0x74ab:	je	0x74c4


0x74ad:	mov	rbx, qword ptr [rbx + 8]
0x74b1:	add	rbp, 1
0x74b5:	test	rbx, rbx
0x74b8:	jne	0x74a0


0x74a0:	mov	rdi, qword ptr [rbx]
0x74a3:	mov	rsi, r13
0x74a6:	call	r12


0x6d9e:	cmp	qword ptr [rbx + 0x10], rax
0x6da2:	jbe	0x6dad


0x6dad:	call	0x1b00


0x6da4:	shl	rax, 4
0x6da8:	add	rax, qword ptr [rbx]
0x6dab:	pop	rbx
0x6dac:	ret	


0x7014:	cmp	qword ptr [rax], 0
0x7018:	mov	rbx, rax
0x701b:	je	0x7070


0x7070:	mov	qword ptr [rax], r15
0x7073:	add	qword ptr [rbp + 0x18], 1
0x7078:	jmp	0x703d


0x701d:	mov	rax, qword ptr [rbp + 0x48]
0x7021:	test	rax, rax
0x7024:	je	0x7080


0x703d:	mov	qword ptr [r12], 0
0x7045:	sub	qword ptr [r13 + 0x18], 1
0x704a:	add	r12, 0x10
0x704e:	cmp	qword ptr [r13 + 8], r12
0x7052:	ja	0x6f88


0x7080:	mov	edi, 0x10
0x7085:	call	0x1dc0


0x7026:	mov	rdx, qword ptr [rax + 8]
0x702a:	mov	qword ptr [rbp + 0x48], rdx
0x702e:	mov	rdx, qword ptr [rbx + 8]
0x7032:	mov	qword ptr [rax], r15
0x7035:	mov	qword ptr [rax + 8], rdx
0x7039:	mov	qword ptr [rbx + 8], rax
0x703d:	mov	qword ptr [r12], 0
0x7045:	sub	qword ptr [r13 + 0x18], 1
0x704a:	add	r12, 0x10
0x704e:	cmp	qword ptr [r13 + 8], r12
0x7052:	ja	0x6f88


0x708a:	test	rax, rax
0x708d:	jne	0x702e


0x708f:	add	rsp, 8
0x7093:	xor	eax, eax
0x7095:	pop	rbx
0x7096:	pop	rbp
0x7097:	pop	r12
0x7099:	pop	r13
0x709b:	pop	r14
0x709d:	pop	r15
0x709f:	ret	


0x702e:	mov	rdx, qword ptr [rbx + 8]
0x7032:	mov	qword ptr [rax], r15
0x7035:	mov	qword ptr [rax + 8], rdx
0x7039:	mov	qword ptr [rbx + 8], rax
0x703d:	mov	qword ptr [r12], 0
0x7045:	sub	qword ptr [r13 + 0x18], 1
0x704a:	add	r12, 0x10
0x704e:	cmp	qword ptr [r13 + 8], r12
0x7052:	ja	0x6f88


0x6fca:	cmp	qword ptr [rax], 0
0x6fce:	mov	rdx, qword ptr [rbx + 8]
0x6fd2:	jne	0x6fa8


0x6fd4:	mov	qword ptr [rax], r15
0x6fd7:	add	qword ptr [rbp + 0x18], 1
0x6fdc:	test	rdx, rdx
0x6fdf:	mov	qword ptr [rbx], 0
0x6fe6:	mov	rax, qword ptr [rbp + 0x48]
0x6fea:	mov	qword ptr [rbx + 8], rax
0x6fee:	mov	qword ptr [rbp + 0x48], rbx
0x6ff2:	mov	rbx, rdx
0x6ff5:	jne	0x6fbc


0x6fa8:	mov	rcx, qword ptr [rax + 8]
0x6fac:	test	rdx, rdx
0x6faf:	mov	qword ptr [rbx + 8], rcx
0x6fb3:	mov	qword ptr [rax + 8], rbx
0x6fb7:	mov	rbx, rdx
0x6fba:	je	0x6ff7


0x6ff7:	mov	r15, qword ptr [r12]
0x6ffb:	test	r14b, r14b
0x6ffe:	mov	qword ptr [r12 + 8], 0
0x7007:	jne	0x704a


0x6dd9:	mov	qword ptr [r14], rax
0x6ddc:	mov	rsi, qword ptr [rax]
0x6ddf:	test	rsi, rsi
0x6de2:	je	0x6ed0


0x6ed0:	xor	esi, esi
0x6ed2:	pop	rbx
0x6ed3:	mov	rax, rsi
0x6ed6:	pop	rbp
0x6ed7:	pop	r12
0x6ed9:	pop	r13
0x6edb:	pop	r14
0x6edd:	ret	


0x6de8:	cmp	rsi, rbp
0x6deb:	mov	rbx, rax
0x6dee:	je	0x6e83


0x6e83:	test	r13b, r13b
0x6e86:	je	0x6e6e


0x6df4:	mov	rdi, rbp
0x6df7:	call	qword ptr [r12 + 0x38]


0x6e6e:	pop	rbx
0x6e6f:	mov	rax, rsi
0x6e72:	pop	rbp
0x6e73:	pop	r12
0x6e75:	pop	r13
0x6e77:	pop	r14
0x6e79:	ret	


0x6e88:	mov	rax, qword ptr [rbx + 8]
0x6e8c:	test	rax, rax
0x6e8f:	je	0x6ec0


0x6ec0:	mov	qword ptr [rbx], 0
0x6ec7:	jmp	0x6e6e


0x6e91:	movdqu	xmm0, xmmword ptr [rax]
0x6e95:	movups	xmmword ptr [rbx], xmm0
0x6e98:	mov	qword ptr [rax], 0
0x6e9f:	mov	rdx, qword ptr [r12 + 0x48]
0x6ea4:	mov	qword ptr [rax + 8], rdx
0x6ea8:	mov	qword ptr [r12 + 0x48], rax
0x6ead:	mov	rax, rsi
0x6eb0:	pop	rbx
0x6eb1:	pop	rbp
0x6eb2:	pop	r12
0x6eb4:	pop	r13
0x6eb6:	pop	r14
0x6eb8:	ret	


0x72df:	mov	rsi, qword ptr [rax]
0x72e2:	test	rsi, rsi
0x72e5:	je	0x730d


0x730d:	xor	esi, esi
0x730f:	pop	rbx
0x7310:	mov	rax, rsi
0x7313:	pop	rbp
0x7314:	pop	r12
0x7316:	ret	


0x72e7:	mov	rbx, rax
0x72ea:	jmp	0x72f3


0x72f3:	cmp	rsi, rbp
0x72f6:	je	0x730f


0x730f:	pop	rbx
0x7310:	mov	rax, rsi
0x7313:	pop	rbp
0x7314:	pop	r12
0x7316:	ret	


0x72f8:	mov	rdi, rbp
0x72fb:	call	qword ptr [r12 + 0x38]


0x7391:	mov	rdx, rax
0x7394:	mov	rcx, rax
0x7397:	mov	rax, qword ptr [rdx]
0x739a:	mov	rdx, qword ptr [rdx + 8]
0x739e:	cmp	rax, rbx
0x73a1:	je	0x73b9


0x73b9:	test	rdx, rdx
0x73bc:	jne	0x73e8


0x73be:	mov	rdx, qword ptr [rbp + 8]
0x73c2:	jmp	0x73d0


0x73e8:	mov	rax, qword ptr [rdx]
0x73eb:	add	rsp, 8
0x73ef:	pop	rbx
0x73f0:	pop	rbp
0x73f1:	ret	


0x73ad:	mov	rax, qword ptr [rdx]
0x73b0:	mov	rdx, qword ptr [rdx + 8]
0x73b4:	cmp	rax, rbx
0x73b7:	jne	0x73a8


0x73d0:	add	rcx, 0x10
0x73d4:	cmp	rdx, rcx
0x73d7:	ja	0x73c8


0x73a8:	test	rdx, rdx
0x73ab:	je	0x73be


0x73d9:	xor	eax, eax
0x73db:	add	rsp, 8
0x73df:	pop	rbx
0x73e0:	pop	rbp
0x73e1:	ret	


0x73c8:	mov	rax, qword ptr [rcx]
0x73cb:	test	rax, rax
0x73ce:	jne	0x73db


0x73db:	add	rsp, 8
0x73df:	pop	rbx
0x73e0:	pop	rbp
0x73e1:	ret	


0x7ae9:	test	rax, rax
0x7aec:	mov	rdx, rax
0x7aef:	je	0x7b20


0x7b20:	mov	rax, qword ptr [rbx + 0x18]
0x7b24:	test	rax, rax
0x7b27:	js	0x7ba0


0x7af1:	xor	eax, eax
0x7af3:	test	r13, r13
0x7af6:	je	0x7afc


0x7ba0:	mov	rdx, rax
0x7ba3:	pxor	xmm1, xmm1
0x7ba7:	and	eax, 1
0x7baa:	shr	rdx, 1
0x7bad:	or	rdx, rax
0x7bb0:	mov	rax, qword ptr [rbx + 0x10]
0x7bb4:	cvtsi2ss	xmm1, rdx
0x7bb9:	mov	rdx, qword ptr [rbx + 0x28]
0x7bbd:	test	rax, rax
0x7bc0:	addss	xmm1, xmm1
0x7bc4:	jns	0x7b43


0x7b29:	pxor	xmm1, xmm1
0x7b2d:	mov	rdx, qword ptr [rbx + 0x28]
0x7b31:	cvtsi2ss	xmm1, rax
0x7b36:	mov	rax, qword ptr [rbx + 0x10]
0x7b3a:	test	rax, rax
0x7b3d:	js	0x7bca


0x7afc:	mov	rcx, qword ptr [rsp + 8]
0x7b01:	xor	rcx, qword ptr fs:[0x28]
0x7b0a:	jne	0x7d2f


0x7af8:	mov	qword ptr [r13], rdx
0x7afc:	mov	rcx, qword ptr [rsp + 8]
0x7b01:	xor	rcx, qword ptr fs:[0x28]
0x7b0a:	jne	0x7d2f


0x7bca:	mov	rcx, rax
0x7bcd:	pxor	xmm0, xmm0
0x7bd1:	shr	rcx, 1
0x7bd4:	and	eax, 1
0x7bd7:	or	rcx, rax
0x7bda:	cvtsi2ss	xmm0, rcx
0x7bdf:	addss	xmm0, xmm0
0x7be3:	jmp	0x7b4c


0x7b43:	pxor	xmm0, xmm0
0x7b47:	cvtsi2ss	xmm0, rax
0x7b4c:	mulss	xmm0, dword ptr [rdx + 8]
0x7b51:	ucomiss	xmm1, xmm0
0x7b54:	ja	0x7bf0


0x7b10:	add	rsp, 0x18
0x7b14:	pop	rbx
0x7b15:	pop	rbp
0x7b16:	pop	r12
0x7b18:	pop	r13
0x7b1a:	ret	


0x7d2f:	call	0x1c10


0x7b4c:	mulss	xmm0, dword ptr [rdx + 8]
0x7b51:	ucomiss	xmm1, xmm0
0x7b54:	ja	0x7bf0


0x7b5a:	mov	r12, qword ptr [rsp]
0x7b5e:	cmp	qword ptr [r12], 0
0x7b63:	je	0x7c98


0x7bf0:	lea	rdi, [rbx + 0x28]
0x7bf4:	call	0x6ee0


0x7c98:	mov	qword ptr [r12], rbp
0x7c9c:	mov	eax, 1
0x7ca1:	add	qword ptr [rbx + 0x20], 1
0x7ca6:	add	qword ptr [rbx + 0x18], 1
0x7cab:	jmp	0x7afc


0x7b69:	mov	rax, qword ptr [rbx + 0x48]
0x7b6d:	test	rax, rax
0x7b70:	je	0x7cb0


0x7cb0:	mov	edi, 0x10
0x7cb5:	call	0x1dc0


0x7b76:	mov	rdx, qword ptr [rax + 8]
0x7b7a:	mov	qword ptr [rbx + 0x48], rdx
0x7b7e:	mov	rdx, qword ptr [r12 + 8]
0x7b83:	mov	qword ptr [rax], rbp
0x7b86:	mov	qword ptr [rax + 8], rdx
0x7b8a:	mov	qword ptr [r12 + 8], rax
0x7b8f:	mov	eax, 1
0x7b94:	add	qword ptr [rbx + 0x20], 1
0x7b99:	jmp	0x7afc


0x7cba:	test	rax, rax
0x7cbd:	jne	0x7b7e


0x7cc3:	mov	eax, 0xffffffff
0x7cc8:	jmp	0x7afc


0x7b7e:	mov	rdx, qword ptr [r12 + 8]
0x7b83:	mov	qword ptr [rax], rbp
0x7b86:	mov	qword ptr [rax + 8], rdx
0x7b8a:	mov	qword ptr [r12 + 8], rax
0x7b8f:	mov	eax, 1
0x7b94:	add	qword ptr [rbx + 0x20], 1
0x7b99:	jmp	0x7afc


0x7bf9:	mov	rax, qword ptr [rbx + 0x10]
0x7bfd:	mov	rdx, qword ptr [rbx + 0x28]
0x7c01:	test	rax, rax
0x7c04:	movss	xmm2, dword ptr [rdx + 8]
0x7c09:	js	0x7cd0


0x7cd0:	mov	rcx, rax
0x7cd3:	pxor	xmm0, xmm0
0x7cd7:	shr	rcx, 1
0x7cda:	and	eax, 1
0x7cdd:	or	rcx, rax
0x7ce0:	cvtsi2ss	xmm0, rcx
0x7ce5:	addss	xmm0, xmm0
0x7ce9:	jmp	0x7c18


0x7c0f:	pxor	xmm0, xmm0
0x7c13:	cvtsi2ss	xmm0, rax
0x7c18:	mov	rax, qword ptr [rbx + 0x18]
0x7c1c:	test	rax, rax
0x7c1f:	js	0x7cf0


0x7c18:	mov	rax, qword ptr [rbx + 0x18]
0x7c1c:	test	rax, rax
0x7c1f:	js	0x7cf0


0x7cf0:	mov	rcx, rax
0x7cf3:	pxor	xmm1, xmm1
0x7cf7:	shr	rcx, 1
0x7cfa:	and	eax, 1
0x7cfd:	or	rcx, rax
0x7d00:	cvtsi2ss	xmm1, rcx
0x7d05:	addss	xmm1, xmm1
0x7d09:	jmp	0x7c2e


0x7c25:	pxor	xmm1, xmm1
0x7c29:	cvtsi2ss	xmm1, rax
0x7c2e:	movaps	xmm3, xmm2
0x7c31:	mulss	xmm3, xmm0
0x7c35:	ucomiss	xmm1, xmm3
0x7c38:	jbe	0x7b5a


0x7c2e:	movaps	xmm3, xmm2
0x7c31:	mulss	xmm3, xmm0
0x7c35:	ucomiss	xmm1, xmm3
0x7c38:	jbe	0x7b5a


0x7c3e:	cmp	byte ptr [rdx + 0x10], 0
0x7c42:	mulss	xmm0, dword ptr [rdx + 0xc]
0x7c47:	jne	0x7c4d


0x7c49:	mulss	xmm0, xmm2
0x7c4d:	ucomiss	xmm0, dword ptr [rip + 0x4e18]
0x7c54:	jae	0x7cc3


0x7c4d:	ucomiss	xmm0, dword ptr [rip + 0x4e18]
0x7c54:	jae	0x7cc3


0x7c56:	ucomiss	xmm0, dword ptr [rip + 0x4e13]
0x7c5d:	jae	0x7d10


0x7c63:	cvttss2si	rsi, xmm0
0x7c68:	mov	rdi, rbx
0x7c6b:	call	0x7870


0x7d10:	subss	xmm0, dword ptr [rip + 0x4d58]
0x7d18:	movabs	rax, 0x8000000000000000
0x7d22:	cvttss2si	rsi, xmm0
0x7d27:	xor	rsi, rax
0x7d2a:	jmp	0x7c68


0x7c68:	mov	rdi, rbx
0x7c6b:	call	0x7870


0x7c70:	test	al, al
0x7c72:	je	0x7cc3


0x7c74:	xor	ecx, ecx
0x7c76:	mov	rdx, r12
0x7c79:	mov	rsi, rbp
0x7c7c:	mov	rdi, rbx
0x7c7f:	call	0x6dc0


0x7d60:	cmp	eax, -1
0x7d63:	je	0x7d90


0x7d90:	xor	ebx, ebx
0x7d92:	jmp	0x7d6d


0x7d65:	test	eax, eax
0x7d67:	jne	0x7d6d


0x7d6d:	mov	rcx, qword ptr [rsp + 8]
0x7d72:	xor	rcx, qword ptr fs:[0x28]
0x7d7b:	mov	rax, rbx
0x7d7e:	jne	0x7d94


0x7d69:	mov	rbx, qword ptr [rsp]
0x7d6d:	mov	rcx, qword ptr [rsp + 8]
0x7d72:	xor	rcx, qword ptr fs:[0x28]
0x7d7b:	mov	rax, rbx
0x7d7e:	jne	0x7d94


0x7d80:	add	rsp, 0x10
0x7d84:	pop	rbx
0x7d85:	ret	


0x7d94:	call	0x1c10


0x7c84:	test	rax, rax
0x7c87:	je	0x7b5a


0x7dc8:	test	rax, rax
0x7dcb:	mov	rbp, rax
0x7dce:	je	0x7ddf


0x7ddf:	mov	rcx, qword ptr [rsp + 8]
0x7de4:	xor	rcx, qword ptr fs:[0x28]
0x7ded:	mov	rax, rbp
0x7df0:	jne	0x7f9e


0x7dd0:	mov	rax, qword ptr [rsp]
0x7dd4:	sub	qword ptr [rbx + 0x20], 1
0x7dd9:	cmp	qword ptr [rax], 0
0x7ddd:	je	0x7e00


0x7df6:	add	rsp, 0x10
0x7dfa:	pop	rbx
0x7dfb:	pop	rbp
0x7dfc:	pop	r12
0x7dfe:	ret	


0x7f9e:	call	0x1c10


0x7e00:	mov	rax, qword ptr [rbx + 0x18]
0x7e04:	sub	rax, 1
0x7e08:	test	rax, rax
0x7e0b:	mov	qword ptr [rbx + 0x18], rax
0x7e0f:	js	0x7f10


0x7f10:	mov	rdx, rax
0x7f13:	pxor	xmm0, xmm0
0x7f17:	shr	rdx, 1
0x7f1a:	and	eax, 1
0x7f1d:	or	rdx, rax
0x7f20:	cvtsi2ss	xmm0, rdx
0x7f25:	addss	xmm0, xmm0
0x7f29:	jmp	0x7e1e


0x7e15:	pxor	xmm0, xmm0
0x7e19:	cvtsi2ss	xmm0, rax
0x7e1e:	mov	rax, qword ptr [rbx + 0x10]
0x7e22:	mov	rdx, qword ptr [rbx + 0x28]
0x7e26:	test	rax, rax
0x7e29:	js	0x7ef0


0x7e1e:	mov	rax, qword ptr [rbx + 0x10]
0x7e22:	mov	rdx, qword ptr [rbx + 0x28]
0x7e26:	test	rax, rax
0x7e29:	js	0x7ef0


0x7ef0:	mov	rcx, rax
0x7ef3:	pxor	xmm1, xmm1
0x7ef7:	shr	rcx, 1
0x7efa:	and	eax, 1
0x7efd:	or	rcx, rax
0x7f00:	cvtsi2ss	xmm1, rcx
0x7f05:	addss	xmm1, xmm1
0x7f09:	jmp	0x7e38


0x7e2f:	pxor	xmm1, xmm1
0x7e33:	cvtsi2ss	xmm1, rax
0x7e38:	mulss	xmm1, dword ptr [rdx]
0x7e3c:	ucomiss	xmm1, xmm0
0x7e3f:	jbe	0x7ddf


0x7e38:	mulss	xmm1, dword ptr [rdx]
0x7e3c:	ucomiss	xmm1, xmm0
0x7e3f:	jbe	0x7ddf


0x7e41:	lea	rdi, [rbx + 0x28]
0x7e45:	call	0x6ee0


0x7e4a:	mov	rax, qword ptr [rbx + 0x10]
0x7e4e:	mov	rdx, qword ptr [rbx + 0x28]
0x7e52:	test	rax, rax
0x7e55:	js	0x7f80


0x7f80:	mov	rcx, rax
0x7f83:	pxor	xmm0, xmm0
0x7f87:	shr	rcx, 1
0x7f8a:	and	eax, 1
0x7f8d:	or	rcx, rax
0x7f90:	cvtsi2ss	xmm0, rcx
0x7f95:	addss	xmm0, xmm0
0x7f99:	jmp	0x7e64


0x7e5b:	pxor	xmm0, xmm0
0x7e5f:	cvtsi2ss	xmm0, rax
0x7e64:	mov	rax, qword ptr [rbx + 0x18]
0x7e68:	test	rax, rax
0x7e6b:	js	0x7f60


0x7e64:	mov	rax, qword ptr [rbx + 0x18]
0x7e68:	test	rax, rax
0x7e6b:	js	0x7f60


0x7f60:	mov	rcx, rax
0x7f63:	pxor	xmm1, xmm1
0x7f67:	shr	rcx, 1
0x7f6a:	and	eax, 1
0x7f6d:	or	rcx, rax
0x7f70:	cvtsi2ss	xmm1, rcx
0x7f75:	addss	xmm1, xmm1
0x7f79:	jmp	0x7e7a


0x7e71:	pxor	xmm1, xmm1
0x7e75:	cvtsi2ss	xmm1, rax
0x7e7a:	movss	xmm2, dword ptr [rdx]
0x7e7e:	mulss	xmm2, xmm0
0x7e82:	ucomiss	xmm2, xmm1
0x7e85:	jbe	0x7ddf


0x7e7a:	movss	xmm2, dword ptr [rdx]
0x7e7e:	mulss	xmm2, xmm0
0x7e82:	ucomiss	xmm2, xmm1
0x7e85:	jbe	0x7ddf


0x7e8b:	cmp	byte ptr [rdx + 0x10], 0
0x7e8f:	mulss	xmm0, dword ptr [rdx + 4]
0x7e94:	je	0x7f50


0x7f50:	mulss	xmm0, dword ptr [rdx + 8]
0x7f55:	jmp	0x7e9a


0x7e9a:	ucomiss	xmm0, dword ptr [rip + 0x4bcf]
0x7ea1:	jae	0x7f30


0x7ea7:	cvttss2si	rsi, xmm0
0x7eac:	mov	rdi, rbx
0x7eaf:	call	0x7870


0x7f30:	subss	xmm0, dword ptr [rip + 0x4b38]
0x7f38:	movabs	rax, 0x8000000000000000
0x7f42:	cvttss2si	rsi, xmm0
0x7f47:	xor	rsi, rax
0x7f4a:	jmp	0x7eac


0x7eac:	mov	rdi, rbx
0x7eaf:	call	0x7870


0x7eb4:	test	al, al
0x7eb6:	jne	0x7ddf


0x7ebc:	mov	rdi, qword ptr [rbx + 0x48]
0x7ec0:	test	rdi, rdi
0x7ec3:	je	0x7ed9


0x7ed9:	mov	qword ptr [rbx + 0x48], 0
0x7ee1:	jmp	0x7ddf


0x7ed1:	test	r12, r12
0x7ed4:	mov	rdi, r12
0x7ed7:	jne	0x7ec8


0x7ec8:	mov	r12, qword ptr [rdi + 8]
0x7ecc:	call	0x1af0


0x7300:	test	al, al
0x7302:	jne	0x7320


0x7304:	mov	rbx, qword ptr [rbx + 8]
0x7308:	test	rbx, rbx
0x730b:	jne	0x72f0


0x7320:	mov	rsi, qword ptr [rbx]
0x7323:	pop	rbx
0x7324:	pop	rbp
0x7325:	mov	rax, rsi
0x7328:	pop	r12
0x732a:	ret	


0x72f0:	mov	rsi, qword ptr [rbx]
0x72f3:	cmp	rsi, rbp
0x72f6:	je	0x730f


0x6dfc:	test	al, al
0x6dfe:	jne	0x6e80


0x6e04:	mov	rax, qword ptr [rbx + 8]
0x6e08:	test	rax, rax
0x6e0b:	je	0x6ed0


0x6e80:	mov	rsi, qword ptr [rbx]
0x6e83:	test	r13b, r13b
0x6e86:	je	0x6e6e


0x6e11:	mov	rsi, qword ptr [rax]
0x6e14:	cmp	rbp, rsi
0x6e17:	jne	0x6e39


0x6e19:	jmp	0x6e4c


0x6e39:	mov	rdi, rbp
0x6e3c:	call	qword ptr [r12 + 0x38]


0x6e4c:	test	r13b, r13b
0x6e4f:	je	0x6e6e


0x6e51:	mov	rdx, qword ptr [rax + 8]
0x6e55:	mov	qword ptr [rbx + 8], rdx
0x6e59:	mov	qword ptr [rax], 0
0x6e60:	mov	rdx, qword ptr [r12 + 0x48]
0x6e65:	mov	qword ptr [rax + 8], rdx
0x6e69:	mov	qword ptr [r12 + 0x48], rax
0x6e6e:	pop	rbx
0x6e6f:	mov	rax, rsi
0x6e72:	pop	rbp
0x6e73:	pop	r12
0x6e75:	pop	r13
0x6e77:	pop	r14
0x6e79:	ret	


0x6e41:	test	al, al
0x6e43:	je	0x6e20


0x6e20:	mov	rbx, qword ptr [rbx + 8]
0x6e24:	mov	rax, qword ptr [rbx + 8]
0x6e28:	test	rax, rax
0x6e2b:	je	0x6ed0


0x6e45:	mov	rax, qword ptr [rbx + 8]
0x6e49:	mov	rsi, qword ptr [rax]
0x6e4c:	test	r13b, r13b
0x6e4f:	je	0x6e6e


0x6e31:	mov	rsi, qword ptr [rax]
0x6e34:	cmp	rsi, rbp
0x6e37:	je	0x6e4c






0xa140:	lea	rsi, [rip + 0x2fd1]
0xa147:	mov	edx, 5
0xa14c:	xor	edi, edi
0xa14e:	mov	r14, qword ptr [rbx + 0x18]
0xa152:	mov	r13, qword ptr [rbx + 0x10]
0xa156:	mov	r12, qword ptr [rbx + 8]
0xa15a:	mov	rbx, qword ptr [rbx]
0xa15d:	call	0x1bd0


0x9f60:	mov	r9, qword ptr [rbx + 0x38]
0x9f64:	mov	rax, qword ptr [rbx + 0x10]
0x9f68:	lea	rsi, [rip + 0x3249]
0x9f6f:	mov	r8, qword ptr [rbx + 8]
0x9f73:	mov	edx, 5
0x9f78:	xor	edi, edi
0x9f7a:	mov	r13, qword ptr [rbx + 0x30]
0x9f7e:	mov	r12, qword ptr [rbx + 0x28]
0x9f82:	mov	qword ptr [rsp + 0x10], r9
0x9f87:	mov	r15, qword ptr [rbx + 0x20]
0x9f8b:	mov	r14, qword ptr [rbx + 0x18]
0x9f8f:	mov	qword ptr [rsp], rax
0x9f93:	mov	qword ptr [rsp + 8], r8
0x9f98:	mov	rbx, qword ptr [rbx]
0x9f9b:	call	0x1bd0


0xa068:	mov	rbx, qword ptr [rbx]
0xa06b:	lea	rsi, [rip + 0x2f4d]
0xa072:	mov	edx, 5
0xa077:	xor	edi, edi
0xa079:	call	0x1bd0


0xa0a8:	mov	r12, qword ptr [rbx + 8]
0xa0ac:	lea	rsi, [rip + 0x2f1c]
0xa0b3:	mov	rbx, qword ptr [rbx]
0xa0b6:	mov	edx, 5
0xa0bb:	xor	edi, edi
0xa0bd:	call	0x1bd0


0xa1c8:	mov	r8, qword ptr [rbx + 8]
0xa1cc:	mov	r12, qword ptr [rbx + 0x28]
0xa1d0:	lea	rsi, [rip + 0x2f89]
0xa1d7:	mov	r15, qword ptr [rbx + 0x20]
0xa1db:	mov	r14, qword ptr [rbx + 0x18]
0xa1df:	mov	edx, 5
0xa1e4:	mov	r13, qword ptr [rbx + 0x10]
0xa1e8:	xor	edi, edi
0xa1ea:	mov	rbx, qword ptr [rbx]
0xa1ed:	mov	qword ptr [rsp], r8
0xa1f1:	call	0x1bd0


0xa0f0:	mov	r13, qword ptr [rbx + 0x10]
0xa0f4:	mov	r12, qword ptr [rbx + 8]
0xa0f8:	lea	rsi, [rip + 0x2ee7]
0xa0ff:	mov	rbx, qword ptr [rbx]
0xa102:	mov	edx, 5
0xa107:	xor	edi, edi
0xa109:	call	0x1bd0


0xa230:	mov	r9, qword ptr [rbx + 0x10]
0xa234:	mov	r13, qword ptr [rbx + 0x30]
0xa238:	lea	rsi, [rip + 0x2f49]
0xa23f:	mov	r12, qword ptr [rbx + 0x28]
0xa243:	mov	r15, qword ptr [rbx + 0x20]
0xa247:	mov	edx, 5
0xa24c:	mov	r14, qword ptr [rbx + 0x18]
0xa250:	mov	r8, qword ptr [rbx + 8]
0xa254:	xor	edi, edi
0xa256:	mov	qword ptr [rsp + 8], r9
0xa25b:	mov	rbx, qword ptr [rbx]
0xa25e:	mov	qword ptr [rsp], r8
0xa262:	call	0x1bd0


0xa010:	mov	r10, qword ptr [rbx + 0x40]
0xa014:	mov	r9, qword ptr [rbx + 0x38]
0xa018:	lea	rsi, [rip + 0x31c9]
0xa01f:	mov	rax, qword ptr [rbx + 0x10]
0xa023:	mov	r8, qword ptr [rbx + 8]
0xa027:	mov	edx, 5
0xa02c:	mov	r13, qword ptr [rbx + 0x30]
0xa030:	mov	r12, qword ptr [rbx + 0x28]
0xa034:	mov	r15, qword ptr [rbx + 0x20]
0xa038:	mov	r14, qword ptr [rbx + 0x18]
0xa03c:	mov	rbx, qword ptr [rbx]
0xa03f:	mov	qword ptr [rsp + 0x18], r10
0xa044:	mov	qword ptr [rsp + 0x10], r9
0xa049:	mov	qword ptr [rsp], rax
0xa04d:	mov	qword ptr [rsp + 8], r8
0xa052:	xor	edi, edi
0xa054:	call	0x1bd0


0x9fd6:	add	rsp, 0x28
0x9fda:	pop	rbx
0x9fdb:	pop	rbp
0x9fdc:	pop	r12
0x9fde:	pop	r13
0x9fe0:	pop	r14
0x9fe2:	pop	r15
0x9fe4:	ret	


0xa198:	mov	r15, qword ptr [rbx + 0x20]
0xa19c:	lea	rsi, [rip + 0x2f95]
0xa1a3:	mov	edx, 5
0xa1a8:	xor	edi, edi
0xa1aa:	mov	r14, qword ptr [rbx + 0x18]
0xa1ae:	mov	r13, qword ptr [rbx + 0x10]
0xa1b2:	mov	r12, qword ptr [rbx + 8]
0xa1b6:	mov	rbx, qword ptr [rbx]
0xa1b9:	call	0x1bd0


0xa1be:	push	r15
0xa1c0:	jmp	0xa166


0xa166:	push	r14
0xa168:	mov	rdx, rax
0xa16b:	mov	r9, r13
0xa16e:	mov	r8, r12
0xa171:	mov	rcx, rbx
0xa174:	mov	rdi, rbp
0xa177:	mov	esi, 1
0xa17c:	xor	eax, eax
0xa17e:	call	0x1ee0


0xa183:	pop	rax
0xa184:	pop	rdx
0xa185:	add	rsp, 0x28
0xa189:	pop	rbx
0xa18a:	pop	rbp
0xa18b:	pop	r12
0xa18d:	pop	r13
0xa18f:	pop	r14
0xa191:	pop	r15
0xa193:	ret	


0xa267:	push	r13
0xa269:	push	r12
0xa26b:	push	r15
0xa26d:	push	r14
0xa26f:	mov	r9, qword ptr [rsp + 0x28]
0xa274:	jmp	0xa203


0xa203:	mov	r8, qword ptr [rsp + 0x20]
0xa208:	mov	rcx, rbx
0xa20b:	mov	rdx, rax
0xa20e:	mov	rdi, rbp
0xa211:	mov	esi, 1
0xa216:	xor	eax, eax
0xa218:	call	0x1ee0


0xa21d:	add	rsp, 0x20
0xa221:	add	rsp, 0x28
0xa225:	pop	rbx
0xa226:	pop	rbp
0xa227:	pop	r12
0xa229:	pop	r13
0xa22b:	pop	r14
0xa22d:	pop	r15
0xa22f:	ret	


0xa10e:	add	rsp, 0x28
0xa112:	mov	r9, r13
0xa115:	mov	r8, r12
0xa118:	mov	rcx, rbx
0xa11b:	mov	rdi, rbp
0xa11e:	mov	rdx, rax
0xa121:	pop	rbx
0xa122:	pop	rbp
0xa123:	pop	r12
0xa125:	pop	r13
0xa127:	pop	r14
0xa129:	pop	r15
0xa12b:	mov	esi, 1
0xa130:	xor	eax, eax
0xa132:	jmp	0x1ee0


0xa1f6:	sub	rsp, 8
0xa1fa:	mov	r9, r13
0xa1fd:	push	r12
0xa1ff:	push	r15
0xa201:	push	r14
0xa203:	mov	r8, qword ptr [rsp + 0x20]
0xa208:	mov	rcx, rbx
0xa20b:	mov	rdx, rax
0xa20e:	mov	rdi, rbp
0xa211:	mov	esi, 1
0xa216:	xor	eax, eax
0xa218:	call	0x1ee0


0xa0c2:	add	rsp, 0x28
0xa0c6:	mov	r8, r12
0xa0c9:	mov	rcx, rbx
0xa0cc:	mov	rdi, rbp
0xa0cf:	mov	rdx, rax
0xa0d2:	mov	esi, 1
0xa0d7:	pop	rbx
0xa0d8:	pop	rbp
0xa0d9:	pop	r12
0xa0db:	pop	r13
0xa0dd:	pop	r14
0xa0df:	pop	r15
0xa0e1:	xor	eax, eax
0xa0e3:	jmp	0x1ee0


0xa07e:	add	rsp, 0x28
0xa082:	mov	rcx, rbx
0xa085:	mov	rdi, rbp
0xa088:	pop	rbx
0xa089:	pop	rbp
0xa08a:	pop	r12
0xa08c:	pop	r13
0xa08e:	pop	r14
0xa090:	pop	r15
0xa092:	mov	rdx, rax
0xa095:	mov	esi, 1
0xa09a:	xor	eax, eax
0xa09c:	jmp	0x1ee0


0x9fa0:	sub	rsp, 8
0x9fa4:	mov	r9, qword ptr [rsp + 0x18]
0x9fa9:	mov	rdx, rax
0x9fac:	mov	rcx, rbx
0x9faf:	mov	esi, 1
0x9fb4:	mov	rdi, rbp
0x9fb7:	xor	eax, eax
0x9fb9:	push	r9
0x9fbb:	push	r13
0x9fbd:	push	r12
0x9fbf:	push	r15
0x9fc1:	push	r14
0x9fc3:	mov	r9, qword ptr [rsp + 0x30]
0x9fc8:	mov	r8, qword ptr [rsp + 0x38]
0x9fcd:	call	0x1ee0


0xa162:	sub	rsp, 8
0xa166:	push	r14
0xa168:	mov	rdx, rax
0xa16b:	mov	r9, r13
0xa16e:	mov	r8, r12
0xa171:	mov	rcx, rbx
0xa174:	mov	rdi, rbp
0xa177:	mov	esi, 1
0xa17c:	xor	eax, eax
0xa17e:	call	0x1ee0


0x8e10:	sub	rsp, 8
0x8e14:	mov	rcx, rbp
0x8e17:	mov	rsi, r13
0x8e1a:	push	qword ptr [rsp + 0x68]
0x8e1e:	push	qword ptr [rsp + 0x78]
0x8e22:	mov	rdi, r14
0x8e25:	push	0
0x8e27:	mov	r9d, dword ptr [rsp + 0x98]
0x8e2f:	mov	r8d, dword ptr [rsp + 0x28]
0x8e34:	mov	rdx, qword ptr [rsp + 0x30]
0x8e39:	and	r9d, 0xfffffffd
0x8e3d:	call	0x8270


0x8e42:	add	rsp, 0x20
0x8e46:	mov	r15, rax
0x8e49:	mov	rbx, qword ptr [rsp + 0xa8]
0x8e51:	xor	rbx, qword ptr fs:[0x28]
0x8e5a:	mov	rax, r15
0x8e5d:	jne	0x9463


0x8e63:	add	rsp, 0xb8
0x8e6a:	pop	rbx
0x8e6b:	pop	rbp
0x8e6c:	pop	r12
0x8e6e:	pop	r13
0x8e70:	pop	r14
0x8e72:	pop	r15
0x8e74:	ret	


0x9463:	call	0x1c10


0x940d:	sub	rsp, 8
0x9411:	mov	r8d, 5
0x9417:	mov	rcx, r11
0x941a:	push	qword ptr [rsp + 0x68]
0x941e:	push	qword ptr [rsp + 0x78]
0x9422:	mov	rdi, r14
0x9425:	push	qword ptr [rsp + 0x38]
0x9429:	mov	r9d, dword ptr [rsp + 0x98]
0x9431:	mov	rdx, qword ptr [rsp + 0x30]
0x9436:	mov	rsi, qword ptr [rsp + 0x70]
0x943b:	call	0x8270


0x9440:	add	rsp, 0x20
0x9444:	mov	r15, rax
0x9447:	jmp	0x8e49


0x8e49:	mov	rbx, qword ptr [rsp + 0xa8]
0x8e51:	xor	rbx, qword ptr fs:[0x28]
0x8e5a:	mov	rax, r15
0x8e5d:	jne	0x9463


0x1ac0:	push	qword ptr [rip + 0x20e2ca]
0x1ac6:	jmp	qword ptr [rip + 0x20e2cc]


0x1acc:	nop	dword ptr [rax]


0x1ad6:	push	0
0x1adb:	jmp	0x1ac0


0x1ae6:	push	1
0x1aeb:	jmp	0x1ac0


0x1af6:	push	2
0x1afb:	jmp	0x1ac0


0x1b06:	push	3
0x1b0b:	jmp	0x1ac0


0x1b16:	push	4
0x1b1b:	jmp	0x1ac0


0x1b26:	push	5
0x1b2b:	jmp	0x1ac0


0x1b36:	push	6
0x1b3b:	jmp	0x1ac0


0x1b46:	push	7
0x1b4b:	jmp	0x1ac0


0x1b56:	push	8
0x1b5b:	jmp	0x1ac0


0x1b66:	push	9
0x1b6b:	jmp	0x1ac0


0x1b76:	push	0xa
0x1b7b:	jmp	0x1ac0


0x1b86:	push	0xb
0x1b8b:	jmp	0x1ac0


0x1b96:	push	0xc
0x1b9b:	jmp	0x1ac0


0x1ba6:	push	0xd
0x1bab:	jmp	0x1ac0


0x1bb6:	push	0xe
0x1bbb:	jmp	0x1ac0


0x1bc6:	push	0xf
0x1bcb:	jmp	0x1ac0


0x1bd6:	push	0x10
0x1bdb:	jmp	0x1ac0


0x1be6:	push	0x11
0x1beb:	jmp	0x1ac0


0x1bf6:	push	0x12
0x1bfb:	jmp	0x1ac0


0x1c06:	push	0x13
0x1c0b:	jmp	0x1ac0


0x1c16:	push	0x14
0x1c1b:	jmp	0x1ac0


0x1c26:	push	0x15
0x1c2b:	jmp	0x1ac0


0x1c36:	push	0x16
0x1c3b:	jmp	0x1ac0


0x1c46:	push	0x17
0x1c4b:	jmp	0x1ac0


0x1c56:	push	0x18
0x1c5b:	jmp	0x1ac0


0x1c66:	push	0x19
0x1c6b:	jmp	0x1ac0


0x1c76:	push	0x1a
0x1c7b:	jmp	0x1ac0


0x1c86:	push	0x1b
0x1c8b:	jmp	0x1ac0


0x1c96:	push	0x1c
0x1c9b:	jmp	0x1ac0


0x1ca6:	push	0x1d
0x1cab:	jmp	0x1ac0


0x1cb6:	push	0x1e
0x1cbb:	jmp	0x1ac0


0x1cc6:	push	0x1f
0x1ccb:	jmp	0x1ac0


0x1cd6:	push	0x20
0x1cdb:	jmp	0x1ac0


0x1ce6:	push	0x21
0x1ceb:	jmp	0x1ac0


0x1cf6:	push	0x22
0x1cfb:	jmp	0x1ac0


0x1d06:	push	0x23
0x1d0b:	jmp	0x1ac0


0x1d16:	push	0x24
0x1d1b:	jmp	0x1ac0


0x1d26:	push	0x25
0x1d2b:	jmp	0x1ac0


0x1d36:	push	0x26
0x1d3b:	jmp	0x1ac0


0x1d46:	push	0x27
0x1d4b:	jmp	0x1ac0


0x1d56:	push	0x28
0x1d5b:	jmp	0x1ac0


0x1d66:	push	0x29
0x1d6b:	jmp	0x1ac0


0x1d76:	push	0x2a
0x1d7b:	jmp	0x1ac0


0x1d86:	push	0x2b
0x1d8b:	jmp	0x1ac0


0x1d96:	push	0x2c
0x1d9b:	jmp	0x1ac0


0x1da6:	push	0x2d
0x1dab:	jmp	0x1ac0


0x1db6:	push	0x2e
0x1dbb:	jmp	0x1ac0


0x1dc6:	push	0x2f
0x1dcb:	jmp	0x1ac0


0x1dd6:	push	0x30
0x1ddb:	jmp	0x1ac0


0x1de6:	push	0x31
0x1deb:	jmp	0x1ac0


0x1df6:	push	0x32
0x1dfb:	jmp	0x1ac0


0x1e06:	push	0x33
0x1e0b:	jmp	0x1ac0


0x1e16:	push	0x34
0x1e1b:	jmp	0x1ac0


0x1e26:	push	0x35
0x1e2b:	jmp	0x1ac0


0x1e36:	push	0x36
0x1e3b:	jmp	0x1ac0


0x1e46:	push	0x37
0x1e4b:	jmp	0x1ac0


0x1e56:	push	0x38
0x1e5b:	jmp	0x1ac0


0x1e66:	push	0x39
0x1e6b:	jmp	0x1ac0


0x1e76:	push	0x3a
0x1e7b:	jmp	0x1ac0


0x1e86:	push	0x3b
0x1e8b:	jmp	0x1ac0


0x1e96:	push	0x3c
0x1e9b:	jmp	0x1ac0


0x1ea6:	push	0x3d
0x1eab:	jmp	0x1ac0


0x1eb6:	push	0x3e
0x1ebb:	jmp	0x1ac0


0x1ec6:	push	0x3f
0x1ecb:	jmp	0x1ac0


0x1ed6:	push	0x40
0x1edb:	jmp	0x1ac0


0x1ee6:	push	0x41
0x1eeb:	jmp	0x1ac0


0x1ef6:	push	0x42
0x1efb:	jmp	0x1ac0


0x1f00:	jmp	qword ptr [rip + 0x20e0b2]




0x1f06:	push	0x43
0x1f0b:	jmp	0x1ac0


0x1f10:	jmp	qword ptr [rip + 0x20e0aa]




0x1f16:	push	0x44
0x1f1b:	jmp	0x1ac0


0x1f26:	push	0x45
0x1f2b:	jmp	0x1ac0


0x1f36:	push	0x46
0x1f3b:	jmp	0x1ac0


0x48da:	hlt	


0x48db:	nop	dword ptr [rax + rax]


0x4912:	nop	dword ptr [rax]
0x4916:	nop	word ptr cs:[rax + rax]


0x4962:	nop	dword ptr [rax]
0x4966:	nop	word ptr cs:[rax + rax]


0x49aa:	nop	word ptr [rax + rax]


0x49ba:	nop	word ptr [rax + rax]


0x49cd:	nop	dword ptr [rax]


0x49da:	nop	word ptr [rax + rax]


0x4a13:	nop	dword ptr [rax]
0x4a16:	nop	word ptr cs:[rax + rax]


0x4a8b:	nop	dword ptr [rax + rax]


0x4c46:	nop	word ptr cs:[rax + rax]


0x4e98:	nop	dword ptr [rax + rax]


0x4f6b:	nop	dword ptr [rax + rax]


0x51c5:	nop	
0x51c6:	nop	word ptr cs:[rax + rax]


0x5397:	nop	word ptr [rax + rax]


0x5a8c:	nop	dword ptr [rax]


0x610f:	nop	


0x65ca:	nop	word ptr [rax + rax]


0x65da:	nop	word ptr [rax + rax]


0x66f6:	nop	word ptr cs:[rax + rax]


0x6773:	nop	dword ptr [rax]
0x6776:	nop	word ptr cs:[rax + rax]


0x690d:	nop	dword ptr [rax]


0x695d:	nop	dword ptr [rax]


0x6a13:	nop	word ptr cs:[rax + rax]
0x6a1d:	nop	dword ptr [rax]


0x6a28:	nop	dword ptr [rax + rax]


0x6a38:	nop	dword ptr [rax + rax]


0x6ae4:	nop	word ptr cs:[rax + rax]
0x6aee:	nop	


0x6b4d:	nop	dword ptr [rax]


0x6baa:	nop	word ptr [rax + rax]


0x6c0c:	nop	dword ptr [rax]


0x6c57:	nop	word ptr [rax + rax]


0x6cce:	nop	


0x6d63:	nop	dword ptr [rax]
0x6d66:	nop	word ptr cs:[rax + rax]


0x6d87:	nop	word ptr [rax + rax]


0x6db2:	nop	dword ptr [rax]
0x6db6:	nop	word ptr cs:[rax + rax]


0x6ede:	nop	


0x6f57:	nop	word ptr [rax + rax]


0x70a5:	nop	
0x70a6:	nop	word ptr cs:[rax + rax]


0x70b5:	nop	
0x70b6:	nop	word ptr cs:[rax + rax]


0x70c5:	nop	
0x70c6:	nop	word ptr cs:[rax + rax]


0x7119:	nop	dword ptr [rax]


0x7178:	nop	dword ptr [rax + rax]


0x72c7:	nop	word ptr [rax + rax]


0x732b:	nop	dword ptr [rax + rax]


0x7371:	nop	dword ptr [rax + rax]
0x7376:	nop	word ptr cs:[rax + rax]


0x73f2:	nop	dword ptr [rax]
0x73f6:	nop	word ptr cs:[rax + rax]


0x7465:	nop	
0x7466:	nop	word ptr cs:[rax + rax]


0x74da:	nop	word ptr [rax + rax]


0x7511:	nop	dword ptr [rax + rax]
0x7516:	nop	word ptr cs:[rax + rax]


0x76f4:	nop	
0x76f6:	nop	word ptr cs:[rax + rax]


0x7866:	nop	word ptr cs:[rax + rax]


0x7aae:	nop	


0x7d34:	nop	
0x7d36:	nop	word ptr cs:[rax + rax]


0x7d99:	nop	dword ptr [rax]


0x7fa3:	nop	word ptr cs:[rax + rax]
0x7fad:	nop	dword ptr [rax]


0x804c:	nop	dword ptr [rax]


0x80de:	nop	


0x817f:	nop	


0x8267:	nop	word ptr [rax + rax]


0x8303:	mov	byte ptr [rsp + 0xe], 1
0x8308:	mov	byte ptr [rsp + 0x7c], 0
0x830d:	xor	r12d, r12d
0x8310:	mov	qword ptr [rsp + 0x50], 0
0x8319:	mov	byte ptr [rsp + 0xf], 1
0x831e:	mov	byte ptr [rsp + 0xd], 0
0x8323:	lea	rax, [rip + 0x47bb]
0x832a:	mov	qword ptr [rsp + 0x18], 1
0x8333:	xor	r15d, r15d
0x8336:	mov	dword ptr [rsp + 8], 2
0x833e:	mov	qword ptr [rsp + 0x48], rax
0x8343:	xor	r11d, r11d
0x8346:	mov	rax, rbp
0x8349:	mov	r8d, r12d
0x834c:	mov	rbp, r11
0x834f:	mov	r11, rax
0x8352:	nop	word ptr [rax + rax]
0x8358:	cmp	r11, rbp
0x835b:	setne	r12b
0x835f:	cmp	r11, -1
0x8363:	jne	0x8372


0x8365:	mov	rax, qword ptr [rsp + 0x10]
0x836a:	cmp	byte ptr [rax + rbp], 0
0x836e:	setne	r12b
0x8372:	test	r12b, r12b
0x8375:	je	0x89d0


0x8372:	test	r12b, r12b
0x8375:	je	0x89d0


0x89d0:	cmp	dword ptr [rsp + 8], 2
0x89d5:	movzx	ebx, byte ptr [rsp + 0xf]
0x89da:	mov	r12d, r8d
0x89dd:	mov	rbp, r11
0x89e0:	sete	dl
0x89e3:	mov	eax, ebx
0x89e5:	test	r15, r15
0x89e8:	sete	cl
0x89eb:	and	eax, edx
0x89ed:	and	al, cl
0x89ef:	jne	0x9456


0x837b:	cmp	dword ptr [rsp + 8], 2
0x8380:	mov	rdi, qword ptr [rsp + 0x10]
0x8385:	lea	r9, [rdi + rbp]
0x8389:	setne	al
0x838c:	and	al, byte ptr [rsp + 0xd]
0x8390:	mov	r10d, eax
0x8393:	je	0x8440


0x89f5:	mov	eax, ebx
0x89f7:	xor	eax, 1
0x89fa:	and	dl, al
0x89fc:	je	0x936c


0x9456:	mov	dword ptr [rsp + 8], 2
0x945e:	jmp	0x8df9


0x8440:	movzx	ebx, byte ptr [r9]
0x8444:	cmp	bl, 0x7e
0x8447:	ja	0x8768


0x8399:	mov	rax, qword ptr [rsp + 0x18]
0x839e:	test	rax, rax
0x83a1:	je	0x87d0


0x936c:	mov	rbx, qword ptr [rsp + 0x48]
0x9371:	test	rbx, rbx
0x9374:	je	0x93a2


0x8a02:	cmp	byte ptr [rsp + 0x7c], 0
0x8a07:	je	0x936a


0x8df9:	cmp	byte ptr [rsp + 0xd], 0
0x8dfe:	je	0x8e10


0x844d:	lea	rcx, [rip + 0x4718]
0x8454:	movzx	edx, bl
0x8457:	movsxd	rax, dword ptr [rcx + rdx*4]
0x845b:	add	rax, rcx
0x845e:	jmp	rax


0x8768:	cmp	qword ptr [rsp + 0x58], 1
0x876e:	jne	0x8b18


0x87d0:	movzx	ebx, byte ptr [r9]
0x87d4:	cmp	bl, 0x7e
0x87d7:	ja	0x8760


0x83a7:	cmp	r11, -1
0x83ab:	lea	rbx, [rbp + rax]
0x83b0:	jne	0x83e0


0x93a2:	cmp	r13, r15
0x93a5:	jbe	0x8e49


0x9376:	test	al, al
0x9378:	je	0x93a2


0x936a:	mov	eax, edx
0x936c:	mov	rbx, qword ptr [rsp + 0x48]
0x9371:	test	rbx, rbx
0x9374:	je	0x93a2


0x8a0d:	cmp	byte ptr [rsp + 0xe], 0
0x8a12:	jne	0x940d


0x8e00:	test	al, al
0x8e02:	mov	eax, 4
0x8e07:	cmove	eax, dword ptr [rsp + 8]
0x8e0c:	mov	dword ptr [rsp + 8], eax


0x8774:	mov	qword ptr [rsp + 0x38], r11
0x8779:	mov	byte ptr [rsp + 0x30], r8b
0x877e:	mov	byte ptr [rsp + 0x28], r10b
0x8783:	call	0x1f30


0x8b18:	lea	rax, [rsp + 0xa0]
0x8b20:	cmp	r11, -1
0x8b24:	mov	qword ptr [rsp + 0xa0], 0
0x8b30:	mov	qword ptr [rsp + 0x28], rax
0x8b35:	jne	0x8b64


0x87d9:	lea	rcx, [rip + 0x4588]
0x87e0:	movzx	edx, bl
0x87e3:	movsxd	rax, dword ptr [rcx + rdx*4]
0x87e7:	add	rax, rcx
0x87ea:	jmp	rax


0x8760:	xor	r10d, r10d
0x8763:	nop	dword ptr [rax + rax]
0x8768:	cmp	qword ptr [rsp + 0x58], 1
0x876e:	jne	0x8b18


0x83b2:	cmp	rax, 1
0x83b6:	jbe	0x83e0


0x83e0:	cmp	rbx, r11
0x83e3:	mov	byte ptr [rsp + 0x28], r10b
0x83e8:	ja	0x89a0


0x93ab:	mov	byte ptr [r14 + r15], 0
0x93b0:	jmp	0x8e49


0x937a:	movzx	ecx, byte ptr [rbx]
0x937d:	mov	rax, rbx
0x9380:	test	cl, cl
0x9382:	je	0x93a2


0x8a18:	test	r13, r13
0x8a1b:	sete	al
0x8a1e:	cmp	qword ptr [rsp + 0x50], 0
0x8a24:	setne	dl
0x8a27:	and	al, dl
0x8a29:	je	0x944c


0x8b37:	mov	rdi, qword ptr [rsp + 0x10]
0x8b3c:	mov	byte ptr [rsp + 0x40], r8b
0x8b41:	mov	byte ptr [rsp + 0x38], r10b
0x8b46:	mov	qword ptr [rsp + 0x30], r9
0x8b4b:	call	0x1bf0


0x8b64:	lea	rax, [rsp + 0x9c]
0x8b6c:	xor	ecx, ecx
0x8b6e:	mov	byte ptr [rsp + 0x7e], bl
0x8b72:	mov	byte ptr [rsp + 0x7d], r8b
0x8b77:	mov	rbx, rcx
0x8b7a:	mov	qword ptr [rsp + 0x88], r9
0x8b82:	mov	qword ptr [rsp + 0x38], rax
0x8b87:	mov	byte ptr [rsp + 0x7f], r10b
0x8b8c:	mov	qword ptr [rsp + 0x80], r15
0x8b94:	mov	qword ptr [rsp + 0x40], r14
0x8b99:	mov	qword ptr [rsp + 0x70], r13
0x8b9e:	mov	qword ptr [rsp + 0x30], r11
0x8ba3:	mov	rax, qword ptr [rsp + 0x10]
0x8ba8:	lea	r14, [rbp + rbx]
0x8bad:	mov	rdx, qword ptr [rsp + 0x30]
0x8bb2:	mov	rcx, qword ptr [rsp + 0x28]
0x8bb7:	mov	rdi, qword ptr [rsp + 0x38]
0x8bbc:	lea	r13, [rax + r14]
0x8bc0:	sub	rdx, r14
0x8bc3:	mov	rsi, r13
0x8bc6:	call	0xb080


0x83b8:	mov	byte ptr [rsp + 0x38], r8b
0x83bd:	mov	byte ptr [rsp + 0x30], r10b
0x83c2:	mov	qword ptr [rsp + 0x28], r9
0x83c7:	call	0x1bf0


0x83ee:	mov	rdx, qword ptr [rsp + 0x18]
0x83f3:	mov	rsi, qword ptr [rsp + 0x48]
0x83f8:	mov	rdi, r9
0x83fb:	mov	qword ptr [rsp + 0x40], r11
0x8400:	mov	byte ptr [rsp + 0x38], r8b
0x8405:	mov	qword ptr [rsp + 0x30], r9
0x840a:	call	0x1d10


0x89a0:	xor	r10d, r10d
0x89a3:	jmp	0x8440


0x9384:	mov	rdx, r15
0x9387:	sub	rax, r15
0x938a:	cmp	r13, rdx
0x938d:	jbe	0x9393


0x944c:	movzx	eax, byte ptr [rsp + 0x7c]
0x9451:	jmp	0x936c


0x8a2f:	mov	r13, qword ptr [rsp + 0x50]
0x8a34:	lea	rbx, [rip + 0x40aa]
0x8a3b:	mov	byte ptr [r14], 0x27
0x8a3f:	mov	dword ptr [rsp + 8], 2
0x8a47:	mov	r15d, 1
0x8a4d:	mov	qword ptr [rsp + 0x18], 1
0x8a56:	mov	byte ptr [rsp + 0xf], 0
0x8a5b:	mov	qword ptr [rsp + 0x48], rbx
0x8a60:	mov	byte ptr [rsp + 0x7c], al
0x8a64:	jmp	0x8343


0x9393:	add	rdx, 1
0x9397:	movzx	ecx, byte ptr [rax + rdx]
0x939b:	test	cl, cl
0x939d:	jne	0x938a


0x938f:	mov	byte ptr [r14 + rdx], cl
0x9393:	add	rdx, 1
0x9397:	movzx	ecx, byte ptr [rax + rdx]
0x939b:	test	cl, cl
0x939d:	jne	0x938a


0x8343:	xor	r11d, r11d
0x8346:	mov	rax, rbp
0x8349:	mov	r8d, r12d
0x834c:	mov	rbp, r11
0x834f:	mov	r11, rax
0x8352:	nop	word ptr [rax + rax]
0x8358:	cmp	r11, rbp
0x835b:	setne	r12b
0x835f:	cmp	r11, -1
0x8363:	jne	0x8372


0x939f:	mov	r15, rdx
0x93a2:	cmp	r13, r15
0x93a5:	jbe	0x8e49


0x938a:	cmp	r13, rdx
0x938d:	jbe	0x9393


0x840f:	test	eax, eax
0x8411:	mov	r9, qword ptr [rsp + 0x30]
0x8416:	movzx	r8d, byte ptr [rsp + 0x38]
0x841c:	mov	r11, qword ptr [rsp + 0x40]
0x8421:	jne	0x89a0


0x8427:	cmp	byte ptr [rsp + 0xf], 0
0x842c:	movzx	r10d, byte ptr [rsp + 0x28]
0x8432:	jne	0x93b5


0x93b5:	cmp	dword ptr [rsp + 8], 2
0x93ba:	movzx	ebx, byte ptr [rsp + 0xf]
0x93bf:	mov	rbp, r11
0x93c2:	sete	al
0x93c5:	mov	byte ptr [rsp + 0xd], bl
0x93c9:	jmp	0x8df9


0x8bcb:	test	rax, rax
0x8bce:	mov	r15, rax
0x8bd1:	je	0x8c21


0x8c21:	mov	edx, r12d
0x8c24:	mov	rdi, rbx
0x8c27:	movzx	r8d, byte ptr [rsp + 0x7d]
0x8c2d:	xor	edx, 1
0x8c30:	movzx	ebx, byte ptr [rsp + 0x7e]
0x8c35:	movzx	r10d, byte ptr [rsp + 0x7f]
0x8c3b:	and	dl, byte ptr [rsp + 0xd]
0x8c3f:	mov	r15, qword ptr [rsp + 0x80]
0x8c47:	mov	r14, qword ptr [rsp + 0x40]
0x8c4c:	mov	r13, qword ptr [rsp + 0x70]
0x8c51:	mov	r11, qword ptr [rsp + 0x30]
0x8c56:	cmp	rdi, 1
0x8c5a:	jbe	0x925b


0x8bd3:	cmp	rax, -1
0x8bd7:	je	0x91f5


0x925b:	mov	eax, edx
0x925d:	jmp	0x87b7


0x8c60:	mov	rcx, rdi
0x8c63:	xor	esi, esi
0x8c65:	movzx	r9d, byte ptr [rsp + 0xf]
0x8c6b:	add	rcx, rbp
0x8c6e:	mov	rdi, qword ptr [rsp + 0x10]
0x8c73:	jmp	0x8d2e


0x91f5:	mov	rdi, rbx
0x91f8:	movzx	r8d, byte ptr [rsp + 0x7d]
0x91fe:	movzx	ebx, byte ptr [rsp + 0x7e]
0x9203:	movzx	r10d, byte ptr [rsp + 0x7f]
0x9209:	mov	r15, qword ptr [rsp + 0x80]
0x9211:	xor	r12d, r12d
0x9214:	mov	r14, qword ptr [rsp + 0x40]
0x9219:	mov	r13, qword ptr [rsp + 0x70]
0x921e:	mov	r11, qword ptr [rsp + 0x30]
0x9223:	movzx	edx, byte ptr [rsp + 0xd]
0x9228:	jmp	0x8c56


0x8bdd:	cmp	rax, -2
0x8be1:	je	0x9181


0x87b7:	test	al, al
0x87b9:	jne	0x9151


0x8d2e:	test	dl, dl
0x8d30:	jne	0x8c80


0x8c56:	cmp	rdi, 1
0x8c5a:	jbe	0x925b


0x9181:	mov	r11, qword ptr [rsp + 0x30]
0x9186:	mov	rsi, r14
0x9189:	mov	rcx, r13
0x918c:	mov	rax, rbx
0x918f:	mov	rdi, rbx
0x9192:	movzx	r8d, byte ptr [rsp + 0x7d]
0x9198:	movzx	ebx, byte ptr [rsp + 0x7e]
0x919d:	mov	r9, qword ptr [rsp + 0x88]
0x91a5:	cmp	rsi, r11
0x91a8:	movzx	r10d, byte ptr [rsp + 0x7f]
0x91ae:	mov	r15, qword ptr [rsp + 0x80]
0x91b6:	mov	r14, qword ptr [rsp + 0x40]
0x91bb:	mov	r13, qword ptr [rsp + 0x70]
0x91c0:	jae	0x91e8


0x8be7:	cmp	dword ptr [rsp + 8], 2
0x8bec:	sete	al
0x8bef:	and	al, byte ptr [rsp + 0xf]
0x8bf3:	jne	0x8d90


0x87bf:	cmp	dword ptr [rsp + 8], 2
0x87c4:	sete	dl
0x87c7:	jmp	0x8498


0x9151:	movzx	edx, byte ptr [rsp + 0xd]
0x9156:	xor	r12d, r12d
0x9159:	jmp	0x8c60


0x8d36:	mov	eax, esi
0x8d38:	xor	eax, 1
0x8d3b:	and	eax, r8d
0x8d3e:	test	r10b, r10b
0x8d41:	je	0x8d51


0x8c80:	cmp	dword ptr [rsp + 8], 2
0x8c85:	sete	al
0x8c88:	test	r9b, r9b
0x8c8b:	jne	0x9140


0x91c2:	cmp	byte ptr [rcx], 0
0x91c5:	jne	0x91d7


0x91e8:	movzx	edx, byte ptr [rsp + 0xd]
0x91ed:	xor	r12d, r12d
0x91f0:	jmp	0x8c56


0x8bf9:	mov	edi, dword ptr [rsp + 0x9c]
0x8c00:	call	0x1f10


0x8d90:	cmp	r15, 1
0x8d94:	je	0x8bf9


0x8498:	cmp	byte ptr [rsp + 0xd], 1
0x849d:	jne	0x85b2


0x8d51:	add	rbp, 1
0x8d55:	cmp	rbp, rcx
0x8d58:	jae	0x84dc


0x8d43:	cmp	r13, r15
0x8d46:	jbe	0x8d4d


0x8c91:	mov	esi, r8d
0x8c94:	xor	esi, 1
0x8c97:	and	al, sil
0x8c9a:	je	0x8ccb


0x9140:	movzx	ebx, byte ptr [rsp + 0xf]
0x9145:	mov	rbp, r11
0x9148:	mov	byte ptr [rsp + 0xd], bl
0x914c:	jmp	0x8df9


0x91c7:	jmp	0x91e8


0x91d7:	add	rax, 1
0x91db:	lea	rdx, [rbp + rax]
0x91e0:	cmp	r11, rdx
0x91e3:	ja	0x91d0


0x8d9a:	mov	rdi, qword ptr [rsp + 0x10]
0x8d9f:	lea	rcx, [rdi + r15]
0x8da3:	lea	rdx, [rdi + r14 + 1]
0x8da8:	lea	r8, [rcx + r14]
0x8dac:	jmp	0x8dbd


0x84a3:	test	dl, dl
0x84a5:	jne	0x85b2


0x85b2:	cmp	byte ptr [rsp + 0xf], 0
0x85b7:	jne	0x84ab


0x8d5e:	test	al, al
0x8d60:	je	0x915e


0x84dc:	test	al, al
0x84de:	je	0x8500


0x8d4d:	add	r15, 1
0x8d51:	add	rbp, 1
0x8d55:	cmp	rbp, rcx
0x8d58:	jae	0x84dc


0x8d48:	mov	byte ptr [r14 + r15], 0x5c
0x8d4d:	add	r15, 1
0x8d51:	add	rbp, 1
0x8d55:	cmp	rbp, rcx
0x8d58:	jae	0x84dc


0x8ccb:	cmp	r13, r15
0x8cce:	jbe	0x8cd5


0x8c9c:	cmp	r13, r15
0x8c9f:	jbe	0x8ca6


0x91e5:	mov	rdi, rax
0x91e8:	movzx	edx, byte ptr [rsp + 0xd]
0x91ed:	xor	r12d, r12d
0x91f0:	jmp	0x8c56


0x91d0:	cmp	byte ptr [r9 + rax], 0
0x91d5:	je	0x91e5


0x8dbd:	movzx	ecx, byte ptr [rdx]
0x8dc0:	sub	ecx, 0x5b
0x8dc3:	cmp	cl, 0x21
0x8dc6:	ja	0x8db0


0x84ab:	mov	rsi, qword ptr [rsp + 0x20]
0x84b0:	test	rsi, rsi
0x84b3:	je	0x84c9


0x85bd:	jmp	0x84c9


0x915e:	xor	r10d, r10d
0x9161:	jmp	0x8d1d


0x8d66:	cmp	r13, r15
0x8d69:	jbe	0x8d70


0x8500:	cmp	r15, r13
0x8503:	jae	0x8509


0x84e0:	cmp	r13, r15
0x84e3:	jbe	0x84ea


0x8cd5:	lea	rax, [r15 + 1]
0x8cd9:	cmp	r13, rax
0x8cdc:	jbe	0x8ceb


0x8cd0:	mov	byte ptr [r14 + r15], 0x5c
0x8cd5:	lea	rax, [r15 + 1]
0x8cd9:	cmp	r13, rax
0x8cdc:	jbe	0x8ceb


0x8ca6:	lea	rsi, [r15 + 1]
0x8caa:	cmp	r13, rsi
0x8cad:	jbe	0x8cb5


0x8ca1:	mov	byte ptr [r14 + r15], 0x27
0x8ca6:	lea	rsi, [r15 + 1]
0x8caa:	cmp	r13, rsi
0x8cad:	jbe	0x8cb5


0x8dc8:	mov	esi, 1
0x8dcd:	shl	rsi, cl
0x8dd0:	mov	rcx, rsi
0x8dd3:	movabs	rsi, 0x20000002b
0x8ddd:	test	rcx, rsi
0x8de0:	je	0x8db0


0x8db0:	add	rdx, 1
0x8db4:	cmp	r8, rdx
0x8db7:	je	0x8bf9


0x84c9:	test	r10b, r10b
0x84cc:	jne	0x8613


0x84b5:	mov	edx, ebx
0x84b7:	shr	dl, 5
0x84ba:	movzx	edx, dl
0x84bd:	mov	edx, dword ptr [rsi + rdx*4]
0x84c0:	bt	edx, ebx
0x84c3:	jb	0x8613


0x8d1d:	cmp	r13, r15
0x8d20:	jbe	0x8d26


0x8d70:	lea	rax, [r15 + 1]
0x8d74:	cmp	r13, rax
0x8d77:	jbe	0x8d7f


0x8d6b:	mov	byte ptr [r14 + r15], 0x27
0x8d70:	lea	rax, [r15 + 1]
0x8d74:	cmp	r13, rax
0x8d77:	jbe	0x8d7f


0x8505:	mov	byte ptr [r14 + r15], bl
0x8509:	movzx	edi, byte ptr [rsp + 0xe]
0x850e:	add	r15, 1
0x8512:	mov	eax, 0
0x8517:	test	r12b, r12b
0x851a:	cmove	edi, eax
0x851d:	mov	byte ptr [rsp + 0xe], dil
0x8522:	jmp	0x8358


0x8509:	movzx	edi, byte ptr [rsp + 0xe]
0x850e:	add	r15, 1
0x8512:	mov	eax, 0
0x8517:	test	r12b, r12b
0x851a:	cmove	edi, eax
0x851d:	mov	byte ptr [rsp + 0xe], dil
0x8522:	jmp	0x8358


0x84ea:	lea	rax, [r15 + 1]
0x84ee:	cmp	r13, rax
0x84f1:	jbe	0x84f9


0x84e5:	mov	byte ptr [r14 + r15], 0x27
0x84ea:	lea	rax, [r15 + 1]
0x84ee:	cmp	r13, rax
0x84f1:	jbe	0x84f9


0x8ceb:	lea	rax, [r15 + 2]
0x8cef:	cmp	r13, rax
0x8cf2:	jbe	0x8d04


0x8cde:	mov	eax, ebx
0x8ce0:	shr	al, 6
0x8ce3:	add	eax, 0x30
0x8ce6:	mov	byte ptr [r14 + r15 + 1], al
0x8ceb:	lea	rax, [r15 + 2]
0x8cef:	cmp	r13, rax
0x8cf2:	jbe	0x8d04


0x8cb5:	lea	rsi, [r15 + 2]
0x8cb9:	cmp	r13, rsi
0x8cbc:	jbe	0x8cc4


0x8caf:	mov	byte ptr [r14 + r15 + 1], 0x24
0x8cb5:	lea	rsi, [r15 + 2]
0x8cb9:	cmp	r13, rsi
0x8cbc:	jbe	0x8cc4


0x8de2:	mov	r14, qword ptr [rsp + 0x40]
0x8de7:	mov	r13, qword ptr [rsp + 0x70]
0x8dec:	mov	rbp, qword ptr [rsp + 0x30]
0x8df1:	mov	dword ptr [rsp + 8], 2
0x8df9:	cmp	byte ptr [rsp + 0xd], 0
0x8dfe:	je	0x8e10


0x84d2:	xor	eax, 1
0x84d5:	add	rbp, 1
0x84d9:	and	eax, r8d
0x84dc:	test	al, al
0x84de:	je	0x8500


0x8613:	cmp	dword ptr [rsp + 8], 2
0x8618:	sete	dl
0x861b:	cmp	byte ptr [rsp + 0xf], 0
0x8620:	mov	eax, edx
0x8622:	jne	0x8e78


0x8d26:	movzx	ebx, byte ptr [rdi + rbp]
0x8d2a:	add	r15, 1
0x8d2e:	test	dl, dl
0x8d30:	jne	0x8c80


0x8d22:	mov	byte ptr [r14 + r15], bl
0x8d26:	movzx	ebx, byte ptr [rdi + rbp]
0x8d2a:	add	r15, 1
0x8d2e:	test	dl, dl
0x8d30:	jne	0x8c80


0x8d7f:	add	r15, 2
0x8d83:	xor	r10d, r10d
0x8d86:	xor	r8d, r8d
0x8d89:	jmp	0x8d1d


0x8d79:	mov	byte ptr [r14 + r15 + 1], 0x27
0x8d7f:	add	r15, 2
0x8d83:	xor	r10d, r10d
0x8d86:	xor	r8d, r8d
0x8d89:	jmp	0x8d1d


0x8358:	cmp	r11, rbp
0x835b:	setne	r12b
0x835f:	cmp	r11, -1
0x8363:	jne	0x8372


0x84f9:	add	r15, 2
0x84fd:	xor	r8d, r8d
0x8500:	cmp	r15, r13
0x8503:	jae	0x8509


0x84f3:	mov	byte ptr [r14 + r15 + 1], 0x27
0x84f9:	add	r15, 2
0x84fd:	xor	r8d, r8d
0x8500:	cmp	r15, r13
0x8503:	jae	0x8509


0x8d04:	and	ebx, 7
0x8d07:	add	rbp, 1
0x8d0b:	add	r15, 3
0x8d0f:	add	ebx, 0x30
0x8d12:	cmp	rbp, rcx
0x8d15:	jae	0x8500


0x8cf4:	mov	eax, ebx
0x8cf6:	shr	al, 3
0x8cf9:	and	eax, 7
0x8cfc:	add	eax, 0x30
0x8cff:	mov	byte ptr [r14 + r15 + 2], al
0x8d04:	and	ebx, 7
0x8d07:	add	rbp, 1
0x8d0b:	add	r15, 3
0x8d0f:	add	ebx, 0x30
0x8d12:	cmp	rbp, rcx
0x8d15:	jae	0x8500


0x8cc4:	add	r15, 3
0x8cc8:	mov	r8d, eax
0x8ccb:	cmp	r13, r15
0x8cce:	jbe	0x8cd5


0x8cbe:	mov	byte ptr [r14 + r15 + 2], 0x27
0x8cc4:	add	r15, 3
0x8cc8:	mov	r8d, eax
0x8ccb:	cmp	r13, r15
0x8cce:	jbe	0x8cd5


0x8628:	mov	eax, r8d
0x862b:	xor	eax, 1
0x862e:	and	al, dl
0x8630:	je	0x8661


0x8e78:	mov	rbp, r11
0x8e7b:	jmp	0x8df9


0x8d1b:	mov	esi, edx
0x8d1d:	cmp	r13, r15
0x8d20:	jbe	0x8d26


0x8661:	cmp	r13, r15
0x8664:	jbe	0x866b


0x8632:	cmp	r13, r15
0x8635:	jbe	0x863c


0x866b:	add	r15, 1
0x866f:	add	rbp, 1
0x8673:	jmp	0x8500


0x8666:	mov	byte ptr [r14 + r15], 0x5c
0x866b:	add	r15, 1
0x866f:	add	rbp, 1
0x8673:	jmp	0x8500


0x863c:	lea	rdx, [r15 + 1]
0x8640:	cmp	r13, rdx
0x8643:	jbe	0x864b


0x8637:	mov	byte ptr [r14 + r15], 0x27
0x863c:	lea	rdx, [r15 + 1]
0x8640:	cmp	r13, rdx
0x8643:	jbe	0x864b


0x864b:	lea	rdx, [r15 + 2]
0x864f:	cmp	r13, rdx
0x8652:	jbe	0x865a


0x8645:	mov	byte ptr [r14 + r15 + 1], 0x24
0x864b:	lea	rdx, [r15 + 2]
0x864f:	cmp	r13, rdx
0x8652:	jbe	0x865a


0x865a:	add	r15, 3
0x865e:	mov	r8d, eax
0x8661:	cmp	r13, r15
0x8664:	jbe	0x866b


0x8654:	mov	byte ptr [r14 + r15 + 2], 0x27
0x865a:	add	r15, 3
0x865e:	mov	r8d, eax
0x8661:	cmp	r13, r15
0x8664:	jbe	0x866b


0x8c05:	mov	rdi, qword ptr [rsp + 0x28]
0x8c0a:	test	eax, eax
0x8c0c:	mov	eax, 0
0x8c11:	cmove	r12d, eax
0x8c15:	add	rbx, r15
0x8c18:	call	0x1f00


0x8c1d:	test	eax, eax
0x8c1f:	je	0x8ba3


0x8ba3:	mov	rax, qword ptr [rsp + 0x10]
0x8ba8:	lea	r14, [rbp + rbx]
0x8bad:	mov	rdx, qword ptr [rsp + 0x30]
0x8bb2:	mov	rcx, qword ptr [rsp + 0x28]
0x8bb7:	mov	rdi, qword ptr [rsp + 0x38]
0x8bbc:	lea	r13, [rax + r14]
0x8bc0:	sub	rdx, r14
0x8bc3:	mov	rsi, r13
0x8bc6:	call	0xb080


0x83cc:	movzx	r8d, byte ptr [rsp + 0x38]
0x83d2:	movzx	r10d, byte ptr [rsp + 0x30]
0x83d8:	mov	r11, rax
0x83db:	mov	r9, qword ptr [rsp + 0x28]
0x83e0:	cmp	rbx, r11
0x83e3:	mov	byte ptr [rsp + 0x28], r10b
0x83e8:	ja	0x89a0


0x8b50:	movzx	r8d, byte ptr [rsp + 0x40]
0x8b56:	movzx	r10d, byte ptr [rsp + 0x38]
0x8b5c:	mov	r11, rax
0x8b5f:	mov	r9, qword ptr [rsp + 0x30]
0x8b64:	lea	rax, [rsp + 0x9c]
0x8b6c:	xor	ecx, ecx
0x8b6e:	mov	byte ptr [rsp + 0x7e], bl
0x8b72:	mov	byte ptr [rsp + 0x7d], r8b
0x8b77:	mov	rbx, rcx
0x8b7a:	mov	qword ptr [rsp + 0x88], r9
0x8b82:	mov	qword ptr [rsp + 0x38], rax
0x8b87:	mov	byte ptr [rsp + 0x7f], r10b
0x8b8c:	mov	qword ptr [rsp + 0x80], r15
0x8b94:	mov	qword ptr [rsp + 0x40], r14
0x8b99:	mov	qword ptr [rsp + 0x70], r13
0x8b9e:	mov	qword ptr [rsp + 0x30], r11
0x8ba3:	mov	rax, qword ptr [rsp + 0x10]
0x8ba8:	lea	r14, [rbp + rbx]
0x8bad:	mov	rdx, qword ptr [rsp + 0x30]
0x8bb2:	mov	rcx, qword ptr [rsp + 0x28]
0x8bb7:	mov	rdi, qword ptr [rsp + 0x38]
0x8bbc:	lea	r13, [rax + r14]
0x8bc0:	sub	rdx, r14
0x8bc3:	mov	rsi, r13
0x8bc6:	call	0xb080


0x8788:	mov	rcx, qword ptr [rax]
0x878b:	movzx	edx, bl
0x878e:	movzx	r10d, byte ptr [rsp + 0x28]
0x8794:	movzx	r8d, byte ptr [rsp + 0x30]
0x879a:	mov	r11, qword ptr [rsp + 0x38]
0x879f:	mov	edi, 1
0x87a4:	movzx	eax, word ptr [rcx + rdx*2]
0x87a8:	and	ax, 0x4000
0x87ac:	setne	r12b
0x87b0:	sete	al
0x87b3:	and	al, byte ptr [rsp + 0xd]
0x87b7:	test	al, al
0x87b9:	jne	0x9151


0x8460:	xor	r10d, r10d
0x8463:	cmp	r11, 1
0x8467:	setne	al
0x846a:	cmp	r11, -1
0x846e:	jne	0x847c


0x8470:	mov	rax, qword ptr [rsp + 0x10]
0x8475:	cmp	byte ptr [rax + 1], 0
0x8479:	setne	al
0x847c:	cmp	dword ptr [rsp + 8], 2
0x8481:	sete	dl
0x8484:	test	al, al
0x8486:	je	0x86d8


0x847c:	cmp	dword ptr [rsp + 8], 2
0x8481:	sete	dl
0x8484:	test	al, al
0x8486:	je	0x86d8


0x86d8:	test	rbp, rbp
0x86db:	jne	0x848c


0x848c:	xor	r12d, r12d
0x848f:	xor	eax, eax
0x8491:	nop	dword ptr [rax]
0x8498:	cmp	byte ptr [rsp + 0xd], 1
0x849d:	jne	0x85b2


0x86e1:	movzx	eax, byte ptr [rsp + 0xf]
0x86e6:	and	al, dl
0x86e8:	je	0x8498


0x86ee:	mov	rbp, r11
0x86f1:	mov	dword ptr [rsp + 8], 2
0x86f9:	jmp	0x8df9


0x8af8:	cmp	byte ptr [rsp + 0xf], 0
0x8afd:	jne	0x9320


0x8540:	cmp	eax, 5
0x8543:	je	0x8ab8


0x8b03:	xor	r12d, r12d
0x8b06:	xor	eax, eax
0x8b08:	mov	ebx, 0x3f
0x8b0d:	jmp	0x84c9


0x9320:	mov	rbp, r11
0x9323:	movzx	eax, byte ptr [rsp + 0xf]
0x9328:	jmp	0x8df9


0x8ab8:	test	byte ptr [rsp + 0x78], 4
0x8abd:	je	0x8ae0


0x8549:	cmp	eax, 2
0x854c:	mov	ebx, 0x3f
0x8551:	sete	dl
0x8554:	xor	r12d, r12d
0x8557:	xor	eax, eax
0x8559:	jmp	0x8498


0x8ae0:	xor	edx, edx
0x8ae2:	xor	r12d, r12d
0x8ae5:	xor	eax, eax
0x8ae7:	mov	ebx, 0x3f
0x8aec:	jmp	0x8498


0x8abf:	lea	rcx, [rbp + 2]
0x8ac3:	cmp	rcx, r11
0x8ac6:	jae	0x8ae0


0x8ac8:	mov	rax, qword ptr [rsp + 0x10]
0x8acd:	cmp	byte ptr [rax + rbp + 1], 0x3f
0x8ad2:	je	0x9262


0x9262:	movzx	ebx, byte ptr [rax + rcx]
0x9266:	cmp	bl, 0x3e
0x9269:	ja	0x8ae0


0x926f:	movabs	rax, 0x7000a38200000000
0x9279:	bt	rax, rbx
0x927d:	jae	0x8ae0


0x9283:	cmp	byte ptr [rsp + 0xf], 0
0x9288:	jne	0x9472


0x928e:	cmp	r13, r15
0x9291:	jbe	0x9298


0x9472:	mov	rbp, r11
0x9475:	jmp	0x8e10


0x9298:	lea	rax, [r15 + 1]
0x929c:	cmp	r13, rax
0x929f:	jbe	0x92a7


0x9293:	mov	byte ptr [r14 + r15], 0x3f
0x9298:	lea	rax, [r15 + 1]
0x929c:	cmp	r13, rax
0x929f:	jbe	0x92a7


0x92a7:	lea	rax, [r15 + 2]
0x92ab:	cmp	r13, rax
0x92ae:	jbe	0x92b6


0x92a1:	mov	byte ptr [r14 + r15 + 1], 0x22
0x92a7:	lea	rax, [r15 + 2]
0x92ab:	cmp	r13, rax
0x92ae:	jbe	0x92b6


0x92b6:	lea	rax, [r15 + 3]
0x92ba:	cmp	r13, rax
0x92bd:	jbe	0x92c5


0x92b0:	mov	byte ptr [r14 + r15 + 2], 0x22
0x92b6:	lea	rax, [r15 + 3]
0x92ba:	cmp	r13, rax
0x92bd:	jbe	0x92c5


0x92c5:	add	r15, 4
0x92c9:	xor	edx, edx
0x92cb:	xor	r12d, r12d
0x92ce:	xor	eax, eax
0x92d0:	mov	rbp, rcx
0x92d3:	jmp	0x8498


0x92bf:	mov	byte ptr [r14 + r15 + 3], 0x3f
0x92c5:	add	r15, 4
0x92c9:	xor	edx, edx
0x92cb:	xor	r12d, r12d
0x92ce:	xor	eax, eax
0x92d0:	mov	rbp, rcx
0x92d3:	jmp	0x8498


0x8a70:	cmp	byte ptr [rsp + 0xf], 0
0x8a75:	jne	0x9320


0x856e:	mov	byte ptr [rsp + 0x7c], r12b
0x8573:	xor	edx, edx
0x8575:	xor	eax, eax
0x8577:	mov	ebx, 0x27
0x857c:	jmp	0x8498


0x8a7b:	test	r13, r13
0x8a7e:	je	0x8e80


0x8e80:	cmp	r13, r15
0x8e83:	jbe	0x8e8a


0x8a84:	xor	edx, edx
0x8a86:	cmp	qword ptr [rsp + 0x50], 0
0x8a8c:	jne	0x8e80


0x8e8a:	lea	rax, [r15 + 1]
0x8e8e:	cmp	r13, rax
0x8e91:	jbe	0x8e99


0x8e85:	mov	byte ptr [r14 + r15], 0x27
0x8e8a:	lea	rax, [r15 + 1]
0x8e8e:	cmp	r13, rax
0x8e91:	jbe	0x8e99


0x8a92:	mov	qword ptr [rsp + 0x50], r13
0x8a97:	add	r15, 3
0x8a9b:	xor	eax, eax
0x8a9d:	mov	byte ptr [rsp + 0x7c], r12b
0x8aa2:	xor	r8d, r8d
0x8aa5:	mov	r13, rdx
0x8aa8:	mov	ebx, 0x27
0x8aad:	jmp	0x84c9


0x8e99:	lea	rax, [r15 + 2]
0x8e9d:	cmp	r13, rax
0x8ea0:	jbe	0x9492


0x8e93:	mov	byte ptr [r14 + r15 + 1], 0x5c
0x8e99:	lea	rax, [r15 + 2]
0x8e9d:	cmp	r13, rax
0x8ea0:	jbe	0x9492


0x9492:	mov	rdx, r13
0x9495:	mov	r13, qword ptr [rsp + 0x50]
0x949a:	jmp	0x8a92


0x8ea6:	mov	rdx, r13
0x8ea9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x8eaf:	mov	r13, qword ptr [rsp + 0x50]
0x8eb4:	jmp	0x8a92


0x85a4:	cmp	byte ptr [rsp + 0xd], 0
0x85a9:	jne	0x8610


0x85ab:	mov	ebx, edx
0x85ad:	xor	r12d, r12d
0x85b0:	xor	eax, eax
0x85b2:	cmp	byte ptr [rsp + 0xf], 0
0x85b7:	jne	0x84ab


0x8610:	xor	r12d, r12d
0x8613:	cmp	dword ptr [rsp + 8], 2
0x8618:	sete	dl
0x861b:	cmp	byte ptr [rsp + 0xf], 0
0x8620:	mov	eax, edx
0x8622:	jne	0x8e78


0x89b0:	cmp	byte ptr [rsp + 0xf], 0
0x89b5:	jne	0x9320


0x85e3:	cmp	byte ptr [rsp + 0xd], 0
0x85e8:	je	0x8800


0x89bb:	add	rbp, 1
0x89bf:	mov	eax, r8d
0x89c2:	xor	r12d, r12d
0x89c5:	mov	ebx, 0x5c
0x89ca:	jmp	0x84dc


0x8800:	mov	edx, 0x5c
0x8805:	mov	ebx, 0x5c
0x880a:	jmp	0x85a4


0x85ee:	cmp	byte ptr [rsp + 0xf], 0
0x85f3:	je	0x8800


0x85f9:	cmp	qword ptr [rsp + 0x18], 0
0x85ff:	jne	0x89bb


0x8605:	mov	ebx, 0x5c
0x860a:	nop	word ptr [rax + rax]
0x8610:	xor	r12d, r12d
0x8613:	cmp	dword ptr [rsp + 8], 2
0x8618:	sete	dl
0x861b:	cmp	byte ptr [rsp + 0xf], 0
0x8620:	mov	eax, edx
0x8622:	jne	0x8e78


0x868b:	xor	edx, edx
0x868d:	test	byte ptr [rsp + 0x78], 1
0x8692:	je	0x85ab


0x8853:	cmp	dword ptr [rsp + 8], 2
0x8858:	sete	dl
0x885b:	cmp	byte ptr [rsp + 0xf], 0
0x8860:	jne	0x93fa


0x8698:	add	rbp, 1
0x869c:	jmp	0x8358


0x8866:	mov	eax, r8d
0x8869:	mov	rcx, r15
0x886c:	xor	eax, 1
0x886f:	and	al, dl
0x8871:	je	0x88a0


0x93fa:	movzx	ebx, byte ptr [rsp + 0xf]
0x93ff:	mov	rbp, r11
0x9402:	mov	eax, edx
0x9404:	mov	byte ptr [rsp + 0xd], bl
0x9408:	jmp	0x8df9


0x88a0:	cmp	r13, rcx
0x88a3:	jbe	0x88aa


0x8873:	cmp	r13, r15
0x8876:	jbe	0x887d


0x88aa:	cmp	dword ptr [rsp + 8], 2
0x88af:	lea	r15, [rcx + 1]
0x88b3:	je	0x8eb9


0x88a5:	mov	byte ptr [r14 + rcx], 0x5c
0x88aa:	cmp	dword ptr [rsp + 8], 2
0x88af:	lea	r15, [rcx + 1]
0x88b3:	je	0x8eb9


0x887d:	lea	rcx, [r15 + 1]
0x8881:	cmp	r13, rcx
0x8884:	jbe	0x888c


0x8878:	mov	byte ptr [r14 + r15], 0x27
0x887d:	lea	rcx, [r15 + 1]
0x8881:	cmp	r13, rcx
0x8884:	jbe	0x888c


0x8eb9:	mov	eax, r12d
0x8ebc:	mov	ebx, 0x30
0x8ec1:	xor	r12d, r12d
0x8ec4:	jmp	0x84c9


0x88b9:	lea	rax, [rbp + 1]
0x88bd:	cmp	rax, r11
0x88c0:	jae	0x88db


0x888c:	lea	rcx, [r15 + 2]
0x8890:	cmp	r13, rcx
0x8893:	ja	0x8ec9


0x8886:	mov	byte ptr [r14 + r15 + 1], 0x24
0x888c:	lea	rcx, [r15 + 2]
0x8890:	cmp	r13, rcx
0x8893:	ja	0x8ec9


0x88c2:	mov	rax, qword ptr [rsp + 0x10]
0x88c7:	movzx	eax, byte ptr [rax + rbp + 1]
0x88cc:	mov	byte ptr [rsp + 0x28], al
0x88d0:	sub	eax, 0x30
0x88d3:	cmp	al, 9
0x88d5:	jbe	0x9109


0x88db:	mov	eax, r12d
0x88de:	mov	ebx, 0x30
0x88e3:	xor	r12d, r12d
0x88e6:	jmp	0x8498


0x8899:	lea	rcx, [r15 + 3]
0x889d:	mov	r8d, eax
0x88a0:	cmp	r13, rcx
0x88a3:	jbe	0x88aa


0x8ec9:	mov	byte ptr [r14 + r15 + 2], 0x27
0x8ecf:	jmp	0x8899


0x9109:	cmp	r13, r15
0x910c:	jbe	0x9113


0x9113:	lea	rax, [rcx + 2]
0x9117:	cmp	r13, rax
0x911a:	jbe	0x9122


0x910e:	mov	byte ptr [r14 + r15], 0x30
0x9113:	lea	rax, [rcx + 2]
0x9117:	cmp	r13, rax
0x911a:	jbe	0x9122


0x9122:	mov	eax, r12d
0x9125:	lea	r15, [rcx + 3]
0x9129:	xor	r12d, r12d
0x912c:	mov	ebx, 0x30
0x9131:	jmp	0x8498


0x911c:	mov	byte ptr [r14 + rcx + 2], 0x30
0x9122:	mov	eax, r12d
0x9125:	lea	r15, [rcx + 3]
0x9129:	xor	r12d, r12d
0x912c:	mov	ebx, 0x30
0x9131:	jmp	0x8498


0x8592:	cmp	dword ptr [rsp + 8], 2
0x8597:	sete	al
0x859a:	and	al, byte ptr [rsp + 0xf]
0x859e:	jne	0x86ee


0x8950:	mov	edx, 0xd
0x8955:	xor	r10d, r10d
0x8958:	mov	ebx, 0x72
0x895d:	jmp	0x8592


0x8ed4:	test	ebx, ebx
0x8ed6:	jne	0x8303


0x8edc:	mov	byte ptr [rsp + 0xd], 1
0x8ee1:	test	r13, r13
0x8ee4:	jne	0x947a


0x8eea:	lea	rax, [rip + 0x3bf4]
0x8ef1:	mov	qword ptr [rsp + 0x50], 0
0x8efa:	mov	byte ptr [rsp + 0xe], 1
0x8eff:	mov	byte ptr [rsp + 0x7c], 0
0x8f04:	xor	r12d, r12d
0x8f07:	mov	byte ptr [rsp + 0xf], 0
0x8f0c:	mov	qword ptr [rsp + 0x18], 1
0x8f15:	mov	qword ptr [rsp + 0x48], rax
0x8f1a:	mov	r15d, 1
0x8f20:	mov	dword ptr [rsp + 8], 2
0x8f28:	jmp	0x8343


0x947a:	mov	byte ptr [rsp + 0xe], 1
0x947f:	xor	eax, eax
0x9481:	xor	r12d, r12d
0x9484:	mov	qword ptr [rsp + 0x50], 0
0x948d:	jmp	0x8a34


0x8a34:	lea	rbx, [rip + 0x40aa]
0x8a3b:	mov	byte ptr [r14], 0x27
0x8a3f:	mov	dword ptr [rsp + 8], 2
0x8a47:	mov	r15d, 1
0x8a4d:	mov	qword ptr [rsp + 0x18], 1
0x8a56:	mov	byte ptr [rsp + 0xf], 0
0x8a5b:	mov	qword ptr [rsp + 0x48], rbx
0x8a60:	mov	byte ptr [rsp + 0x7c], al
0x8a64:	jmp	0x8343


0x8f38:	test	r13, r13
0x8f3b:	je	0x9166


0x932d:	lea	rax, [rip + 0x37af]
0x9334:	mov	byte ptr [rsp + 0xe], 1
0x9339:	mov	byte ptr [rsp + 0x7c], 0
0x933e:	xor	r12d, r12d
0x9341:	mov	qword ptr [rsp + 0x50], 0
0x934a:	mov	byte ptr [rsp + 0xf], 1
0x934f:	mov	byte ptr [rsp + 0xd], 1
0x9354:	mov	qword ptr [rsp + 0x18], 1
0x935d:	xor	r15d, r15d
0x9360:	mov	qword ptr [rsp + 0x48], rax
0x9365:	jmp	0x8343


0x9166:	mov	qword ptr [rsp + 0x50], 0
0x916f:	mov	byte ptr [rsp + 0xe], 1
0x9174:	xor	r12d, r12d
0x9177:	mov	byte ptr [rsp + 0x7c], 0
0x917c:	jmp	0x8f5b


0x8f41:	mov	byte ptr [r14], 0x22
0x8f45:	mov	byte ptr [rsp + 0xe], 1
0x8f4a:	xor	r12d, r12d
0x8f4d:	mov	byte ptr [rsp + 0x7c], 0
0x8f52:	mov	qword ptr [rsp + 0x50], 0
0x8f5b:	lea	rax, [rip + 0x3b81]
0x8f62:	mov	byte ptr [rsp + 0xf], 0
0x8f67:	mov	byte ptr [rsp + 0xd], 1
0x8f6c:	mov	qword ptr [rsp + 0x18], 1
0x8f75:	mov	r15d, 1
0x8f7b:	mov	qword ptr [rsp + 0x48], rax
0x8f80:	jmp	0x8343


0x8f5b:	lea	rax, [rip + 0x3b81]
0x8f62:	mov	byte ptr [rsp + 0xf], 0
0x8f67:	mov	byte ptr [rsp + 0xd], 1
0x8f6c:	mov	qword ptr [rsp + 0x18], 1
0x8f75:	mov	r15d, 1
0x8f7b:	mov	qword ptr [rsp + 0x48], rax
0x8f80:	jmp	0x8343


0x8f85:	lea	rax, [rip + 0x3b57]
0x8f8c:	mov	byte ptr [rsp + 0xe], 1
0x8f91:	mov	byte ptr [rsp + 0x7c], 0
0x8f96:	xor	r12d, r12d
0x8f99:	mov	qword ptr [rsp + 0x50], 0
0x8fa2:	mov	byte ptr [rsp + 0xf], 1
0x8fa7:	mov	byte ptr [rsp + 0xd], 1
0x8fac:	mov	qword ptr [rsp + 0x18], 1
0x8fb5:	xor	r15d, r15d
0x8fb8:	mov	qword ptr [rsp + 0x48], rax
0x8fbd:	mov	dword ptr [rsp + 8], 5
0x8fc5:	jmp	0x8343


0x8fca:	mov	byte ptr [rsp + 0xe], 1
0x8fcf:	mov	byte ptr [rsp + 0x7c], 0
0x8fd4:	xor	r12d, r12d
0x8fd7:	mov	qword ptr [rsp + 0x50], 0
0x8fe0:	mov	byte ptr [rsp + 0xf], 0
0x8fe5:	xor	r15d, r15d
0x8fe8:	mov	byte ptr [rsp + 0xd], 1
0x8fed:	mov	qword ptr [rsp + 0x18], 0
0x8ff6:	mov	qword ptr [rsp + 0x48], 0
0x8fff:	jmp	0x8343


0x9004:	cmp	dword ptr [rsp + 8], 0xa
0x9009:	je	0x9061


0x9061:	xor	r15d, r15d
0x9064:	test	ebx, ebx
0x9066:	je	0x922d


0x900b:	lea	rsi, [rip + 0x3ad5]
0x9012:	xor	edi, edi
0x9014:	mov	edx, 5
0x9019:	call	0x1bd0


0x922d:	mov	rdx, qword ptr [rsp + 0x68]
0x9232:	movzx	eax, byte ptr [rdx]
0x9235:	test	al, al
0x9237:	je	0x906c


0x906c:	test	ebx, ebx
0x906e:	mov	rbx, qword ptr [rsp + 0x60]
0x9073:	setne	byte ptr [rsp + 0xf]
0x9078:	xor	r12d, r12d
0x907b:	mov	rdi, rbx
0x907e:	call	0x1bf0


0x9249:	add	r15, 1
0x924d:	movzx	eax, byte ptr [rdx + r15]
0x9252:	test	al, al
0x9254:	jne	0x9240


0x9245:	mov	byte ptr [r14 + r15], al
0x9249:	add	r15, 1
0x924d:	movzx	eax, byte ptr [rdx + r15]
0x9252:	test	al, al
0x9254:	jne	0x9240


0x9256:	jmp	0x906c


0x9240:	cmp	r13, r15
0x9243:	jbe	0x9249


0x9083:	mov	qword ptr [rsp + 0x48], rbx
0x9088:	mov	qword ptr [rsp + 0x18], rax
0x908d:	mov	byte ptr [rsp + 0xe], 1
0x9092:	mov	byte ptr [rsp + 0x7c], 0
0x9097:	mov	qword ptr [rsp + 0x50], 0
0x90a0:	mov	byte ptr [rsp + 0xd], 1
0x90a5:	jmp	0x8343


0x901e:	mov	rcx, rax
0x9021:	mov	qword ptr [rsp + 0x68], rax
0x9026:	lea	rax, [rip + 0x3aba]
0x902d:	cmp	rcx, rax
0x9030:	je	0x93ce


0x93ce:	mov	esi, dword ptr [rsp + 8]
0x93d2:	mov	rdi, rcx
0x93d5:	call	0x8180


0x9036:	lea	rsi, [rip + 0x3aa8]
0x903d:	xor	edi, edi
0x903f:	mov	edx, 5
0x9044:	call	0x1bd0


0x9049:	mov	rcx, rax
0x904c:	mov	qword ptr [rsp + 0x60], rax
0x9051:	lea	rax, [rip + 0x3a8d]
0x9058:	cmp	rcx, rax
0x905b:	je	0x93e4


0x93e4:	mov	esi, dword ptr [rsp + 8]
0x93e8:	mov	rdi, rcx
0x93eb:	call	0x8180


0x93f0:	mov	qword ptr [rsp + 0x60], rax
0x93f5:	jmp	0x9061


0x93da:	mov	qword ptr [rsp + 0x68], rax
0x93df:	jmp	0x9036


0x90aa:	mov	byte ptr [rsp + 0xe], 1
0x90af:	mov	byte ptr [rsp + 0x7c], 0
0x90b4:	xor	r12d, r12d
0x90b7:	mov	qword ptr [rsp + 0x50], 0
0x90c0:	mov	byte ptr [rsp + 0xf], 0
0x90c5:	xor	r15d, r15d
0x90c8:	mov	byte ptr [rsp + 0xd], 0
0x90cd:	mov	qword ptr [rsp + 0x18], 0
0x90d6:	mov	qword ptr [rsp + 0x48], 0
0x90df:	jmp	0x8343


0x90e4:	mov	byte ptr [rsp + 0xe], 1
0x90e9:	mov	byte ptr [rsp + 0x7c], 0
0x90ee:	xor	r12d, r12d
0x90f1:	mov	qword ptr [rsp + 0x50], 0
0x90fa:	mov	byte ptr [rsp + 0xf], 1
0x90ff:	mov	byte ptr [rsp + 0xd], 1
0x9104:	jmp	0x8323


0x8323:	lea	rax, [rip + 0x47bb]
0x832a:	mov	qword ptr [rsp + 0x18], 1
0x8333:	xor	r15d, r15d
0x8336:	mov	dword ptr [rsp + 8], 2
0x833e:	mov	qword ptr [rsp + 0x48], rax
0x8343:	xor	r11d, r11d
0x8346:	mov	rax, rbp
0x8349:	mov	r8d, r12d
0x834c:	mov	rbp, r11
0x834f:	mov	r11, rax
0x8352:	nop	word ptr [rax + rax]
0x8358:	cmp	r11, rbp
0x835b:	setne	r12b
0x835f:	cmp	r11, -1
0x8363:	jne	0x8372


0x92d8:	test	ebx, ebx
0x92da:	je	0x9468


0x9468:	mov	byte ptr [rsp + 0xd], 0
0x946d:	jmp	0x8ee1


0x92e0:	lea	rax, [rip + 0x37fe]
0x92e7:	mov	byte ptr [rsp + 0xe], 1
0x92ec:	mov	byte ptr [rsp + 0x7c], 0
0x92f1:	xor	r12d, r12d
0x92f4:	mov	qword ptr [rsp + 0x50], 0
0x92fd:	mov	byte ptr [rsp + 0xf], 1
0x9302:	mov	byte ptr [rsp + 0xd], 0
0x9307:	mov	qword ptr [rsp + 0x18], 1
0x9310:	xor	r15d, r15d
0x9313:	mov	qword ptr [rsp + 0x48], rax
0x9318:	jmp	0x8343


0x8ee1:	test	r13, r13
0x8ee4:	jne	0x947a


0x94a4:	nop	
0x94a6:	nop	word ptr cs:[rax + rax]


0x965b:	nop	dword ptr [rax + rax]


0x9696:	nop	word ptr cs:[rax + rax]


0x96b1:	nop	dword ptr [rax + rax]
0x96b6:	nop	word ptr cs:[rax + rax]


0x96d1:	nop	dword ptr [rax + rax]
0x96d6:	nop	word ptr cs:[rax + rax]


0x9715:	nop	
0x9716:	nop	word ptr cs:[rax + rax]


0x9735:	nop	
0x9736:	nop	word ptr cs:[rax + rax]


0x97e4:	nop	
0x97e6:	nop	word ptr cs:[rax + rax]


0x98d3:	nop	dword ptr [rax]
0x98d6:	nop	word ptr cs:[rax + rax]


0x98ea:	nop	word ptr [rax + rax]


0x9983:	nop	dword ptr [rax]
0x9986:	nop	word ptr cs:[rax + rax]


0x99a3:	nop	dword ptr [rax]
0x99a6:	nop	word ptr cs:[rax + rax]


0x99bc:	nop	dword ptr [rax]


0x99d8:	nop	dword ptr [rax + rax]


0x99f4:	nop	
0x99f6:	nop	word ptr cs:[rax + rax]


0x9a8e:	nop	


0x9b1a:	nop	word ptr [rax + rax]


0x9b2c:	nop	dword ptr [rax]


0x9b3f:	nop	


0x9bd8:	nop	dword ptr [rax + rax]


0x9c01:	nop	dword ptr [rax + rax]
0x9c06:	nop	word ptr cs:[rax + rax]


0x9c1a:	nop	word ptr [rax + rax]


0x9cae:	nop	


0x9d41:	nop	dword ptr [rax + rax]
0x9d46:	nop	word ptr cs:[rax + rax]


0x9d5c:	nop	dword ptr [rax]


0x9d77:	nop	word ptr [rax + rax]


0x9d93:	nop	dword ptr [rax]
0x9d96:	nop	word ptr cs:[rax + rax]


0x9dac:	nop	dword ptr [rax]


0x9dc4:	nop	
0x9dc6:	nop	word ptr cs:[rax + rax]


0x9de3:	nop	dword ptr [rax]
0x9de6:	nop	word ptr cs:[rax + rax]


0x9e08:	nop	dword ptr [rax + rax]


0x9e6e:	nop	


0x9eaf:	nop	


0xa2c7:	nop	word ptr [rax + rax]


0xa368:	nop	dword ptr [rax + rax]


0xa445:	nop	
0xa446:	nop	word ptr cs:[rax + rax]


0xa4ea:	nop	word ptr [rax + rax]


0xa514:	nop	
0xa516:	nop	word ptr cs:[rax + rax]


0xa522:	nop	dword ptr [rax]
0xa526:	nop	word ptr cs:[rax + rax]


0xa566:	nop	word ptr cs:[rax + rax]


0xa594:	nop	
0xa596:	nop	word ptr cs:[rax + rax]


0xa622:	nop	dword ptr [rax]
0xa626:	nop	word ptr cs:[rax + rax]


0xa67a:	nop	word ptr [rax + rax]


0xa697:	nop	word ptr [rax + rax]


0xa6ce:	nop	


0xa6f8:	nop	dword ptr [rax + rax]


0xa713:	nop	word ptr cs:[rax + rax]
0xa71d:	nop	dword ptr [rax]


0xa755:	nop	word ptr cs:[rax + rax]
0xa75f:	nop	


0xa881:	nop	word ptr cs:[rax + rax]
0xa88b:	nop	dword ptr [rax + rax]


0xa90c:	nop	dword ptr [rax]


0xa9d1:	nop	word ptr cs:[rax + rax]
0xa9db:	nop	dword ptr [rax + rax]


0xabb8:	mov	rax, rbx
0xabbb:	mul	rsi
0xabbe:	jo	0xadb1


0xadb1:	or	rax, 0xffffffffffffffff
0xadb5:	mov	r8d, 1
0xadbb:	jmp	0xabc7


0xabc4:	xor	r8d, r8d
0xabc7:	mul	rsi
0xabca:	jo	0xada2


0xabc7:	mul	rsi
0xabca:	jo	0xada2


0xada2:	mov	r8d, 1
0xada8:	or	rbx, 0xffffffffffffffff
0xadac:	jmp	0xabd3


0xabd0:	mov	rbx, rax
0xabd3:	or	ebp, r8d
0xabd6:	nop	word ptr cs:[rax + rax]
0xabe0:	movsxd	rdi, edi
0xabe3:	mov	eax, ebp
0xabe5:	add	rcx, rdi
0xabe8:	or	eax, 2
0xabeb:	mov	qword ptr [r15], rcx
0xabee:	cmp	byte ptr [rcx], 0
0xabf1:	mov	qword ptr [r14], rbx
0xabf4:	cmovne	ebp, eax
0xabf7:	jmp	0xaabd


0xabd3:	or	ebp, r8d
0xabd6:	nop	word ptr cs:[rax + rax]
0xabe0:	movsxd	rdi, edi
0xabe3:	mov	eax, ebp
0xabe5:	add	rcx, rdi
0xabe8:	or	eax, 2
0xabeb:	mov	qword ptr [r15], rcx
0xabee:	cmp	byte ptr [rcx], 0
0xabf1:	mov	qword ptr [r14], rbx
0xabf4:	cmovne	ebp, eax
0xabf7:	jmp	0xaabd


0xac07:	mov	edx, 2
0xac0c:	mov	rax, rdx
0xac0f:	mul	rbx
0xac12:	jo	0xacae


0xacae:	mov	ebp, 1
0xacb3:	or	rbx, 0xffffffffffffffff
0xacb7:	jmp	0xabe0


0xac18:	add	rbx, rbx
0xac1b:	jmp	0xabe0


0xabe0:	movsxd	rdi, edi
0xabe3:	mov	eax, ebp
0xabe5:	add	rcx, rdi
0xabe8:	or	eax, 2
0xabeb:	mov	qword ptr [r15], rcx
0xabee:	cmp	byte ptr [rcx], 0
0xabf1:	mov	qword ptr [r14], rbx
0xabf4:	cmovne	ebp, eax
0xabf7:	jmp	0xaabd


0xac1d:	mov	edx, 0x200
0xac22:	mov	rax, rdx
0xac25:	mul	rbx
0xac28:	jo	0xacae


0xac2e:	shl	rbx, 9
0xac32:	jmp	0xabe0


0xac34:	mov	r8d, 7
0xac3a:	xor	r9d, r9d
0xac3d:	nop	dword ptr [rax]
0xac40:	mov	rax, rbx
0xac43:	mul	rsi
0xac46:	mov	rbx, rax
0xac49:	jo	0xadde


0xadde:	mov	r9d, 1
0xade4:	or	rbx, 0xffffffffffffffff
0xade8:	jmp	0xac4f


0xac4f:	sub	r8d, 1
0xac53:	jne	0xac40


0xac55:	or	ebp, r9d
0xac58:	jmp	0xabe0


0xac40:	mov	rax, rbx
0xac43:	mul	rsi
0xac46:	mov	rbx, rax
0xac49:	jo	0xadde


0xac5a:	mov	r8d, 8
0xac60:	xor	r9d, r9d
0xac63:	nop	dword ptr [rax + rax]
0xac68:	mov	rax, rbx
0xac6b:	mul	rsi
0xac6e:	mov	rbx, rax
0xac71:	jo	0xadc0


0xadc0:	mov	r9d, 1
0xadc6:	or	rbx, 0xffffffffffffffff
0xadca:	jmp	0xac77


0xac77:	sub	r8d, 1
0xac7b:	jne	0xac68


0xac7d:	jmp	0xac55


0xac68:	mov	rax, rbx
0xac6b:	mul	rsi
0xac6e:	mov	rbx, rax
0xac71:	jo	0xadc0


0xac7f:	mov	r8d, 4
0xac85:	xor	r9d, r9d
0xac88:	mov	rax, rbx
0xac8b:	mul	rsi
0xac8e:	mov	rbx, rax
0xac91:	jo	0xad93


0xad93:	mov	r9d, 1
0xad99:	or	rbx, 0xffffffffffffffff
0xad9d:	jmp	0xac97


0xac97:	sub	r8d, 1
0xac9b:	jne	0xac88


0xac9d:	jmp	0xac55


0xac88:	mov	rax, rbx
0xac8b:	mul	rsi
0xac8e:	mov	rbx, rax
0xac91:	jo	0xad93


0xac9f:	mov	rax, rbx
0xaca2:	mul	rsi
0xaca5:	mov	rbx, rax
0xaca8:	jno	0xabe0


0xadcf:	mov	r9d, 1
0xadd5:	or	rbx, 0xffffffffffffffff
0xadd9:	jmp	0xacd8


0xacd8:	sub	r8d, 1
0xacdc:	jne	0xacc9


0xacde:	jmp	0xac55


0xacc9:	mov	rax, rbx
0xaccc:	mul	rsi
0xaccf:	mov	rbx, rax
0xacd2:	jo	0xadcf


0xace3:	mov	r8d, 6
0xace9:	xor	r9d, r9d
0xacec:	mov	rax, rbx
0xacef:	mul	rsi
0xacf2:	mov	rbx, rax
0xacf5:	jo	0xad84


0xad84:	mov	r9d, 1
0xad8a:	or	rbx, 0xffffffffffffffff
0xad8e:	jmp	0xacfb


0xacfb:	sub	r8d, 1
0xacff:	jne	0xacec


0xad01:	jmp	0xac55


0xacec:	mov	rax, rbx
0xacef:	mul	rsi
0xacf2:	mov	rbx, rax
0xacf5:	jo	0xad84


0xad06:	mov	edx, 0x400
0xad0b:	mov	rax, rdx
0xad0e:	mul	rbx
0xad11:	jo	0xacae


0xad13:	shl	rbx, 0xa
0xad17:	jmp	0xabe0


0xad1c:	mov	rax, rbx
0xad1f:	mul	rsi
0xad22:	jo	0xaded


0xaded:	mov	r8d, 1
0xadf3:	or	rax, 0xffffffffffffffff
0xadf7:	jmp	0xad2b


0xad28:	xor	r8d, r8d
0xad2b:	mul	rsi
0xad2e:	jno	0xabc7


0xad2b:	mul	rsi
0xad2e:	jno	0xabc7


0xad34:	mov	r8d, 1
0xad3a:	or	rax, 0xffffffffffffffff
0xad3e:	jmp	0xabc7


0xadfc:	nop	dword ptr [rax]


0xb07e:	nop	


0xb103:	nop	word ptr cs:[rax + rax]
0xb10d:	nop	dword ptr [rax]


0xb1d7:	nop	word ptr [rax + rax]


0xb24c:	nop	dword ptr [rax]


0xb2cd:	nop	dword ptr [rax]


0xb38c:	nop	dword ptr [rax]


0xb42c:	nop	dword ptr [rax]


0xb43e:	nop	


0xb4bb:	nop	dword ptr [rax + rax]


0xb557:	nop	word ptr [rax + rax]


0xb5c5:	nop	
0xb5c6:	nop	word ptr cs:[rax + rax]


0xb5d2:	nop	word ptr cs:[rax + rax]
0xb5dc:	nop	dword ptr [rax]


0x8530:	xor	r10d, r10d
0x8533:	mov	eax, dword ptr [rsp + 8]
0x8537:	cmp	eax, 2
0x853a:	je	0x8af8


0x8560:	xor	r10d, r10d
0x8563:	cmp	dword ptr [rsp + 8], 2
0x8568:	je	0x8a70


0x8588:	mov	edx, 9
0x858d:	mov	ebx, 0x74
0x8592:	cmp	dword ptr [rsp + 8], 2
0x8597:	sete	al
0x859a:	and	al, byte ptr [rsp + 0xf]
0x859e:	jne	0x86ee


0x85c8:	mov	edx, 8
0x85cd:	mov	ebx, 0x62
0x85d2:	jmp	0x85a4


0x85d8:	cmp	dword ptr [rsp + 8], 2
0x85dd:	je	0x89b0


0x8680:	cmp	byte ptr [rsp + 0xd], 0
0x8685:	jne	0x8853


0x86a8:	cmp	dword ptr [rsp + 8], 2
0x86ad:	sete	dl
0x86b0:	xor	eax, eax
0x86b2:	jmp	0x8498


0x86c0:	mov	edx, 7
0x86c5:	mov	ebx, 0x61
0x86ca:	jmp	0x85a4


0x86d0:	cmp	dword ptr [rsp + 8], 2
0x86d5:	sete	dl
0x86d8:	test	rbp, rbp
0x86db:	jne	0x848c


0x8700:	cmp	dword ptr [rsp + 8], 2
0x8705:	sete	dl
0x8708:	xor	r12d, r12d
0x870b:	jmp	0x86e1


0x8710:	cmp	dword ptr [rsp + 8], 2
0x8715:	mov	ebx, 0x20
0x871a:	sete	dl
0x871d:	jmp	0x86e1


0x8720:	mov	edx, 0xd
0x8725:	mov	ebx, 0x72
0x872a:	jmp	0x8592


0x8730:	mov	edx, 0xc
0x8735:	mov	ebx, 0x66
0x873a:	jmp	0x85a4


0x8740:	mov	edx, 0xb
0x8745:	mov	ebx, 0x76
0x874a:	jmp	0x85a4


0x8750:	mov	edx, 0xa
0x8755:	mov	ebx, 0x6e
0x875a:	jmp	0x8592


0x87f0:	xor	r10d, r10d
0x87f3:	cmp	byte ptr [rsp + 0xd], 0
0x87f8:	jne	0x85ee


0x8810:	mov	edx, 0xc
0x8815:	xor	r10d, r10d
0x8818:	mov	ebx, 0x66
0x881d:	jmp	0x85a4


0x8828:	mov	edx, 0xa
0x882d:	xor	r10d, r10d
0x8830:	mov	ebx, 0x6e
0x8835:	jmp	0x8592


0x8840:	mov	ebx, 0x61
0x8845:	jmp	0x8610


0x8850:	xor	r10d, r10d
0x8853:	cmp	dword ptr [rsp + 8], 2
0x8858:	sete	dl
0x885b:	cmp	byte ptr [rsp + 0xf], 0
0x8860:	jne	0x93fa


0x88f0:	cmp	dword ptr [rsp + 8], 2
0x88f5:	mov	r12d, r10d
0x88f8:	sete	dl
0x88fb:	xor	r10d, r10d
0x88fe:	xor	eax, eax
0x8900:	jmp	0x8498


0x8908:	cmp	dword ptr [rsp + 8], 2
0x890d:	sete	dl
0x8910:	xor	r10d, r10d
0x8913:	jmp	0x86d8


0x8920:	cmp	dword ptr [rsp + 8], 2
0x8925:	sete	dl
0x8928:	xor	r10d, r10d
0x892b:	xor	r12d, r12d
0x892e:	jmp	0x86e1


0x8938:	cmp	dword ptr [rsp + 8], 2
0x893d:	mov	r12d, r10d
0x8940:	mov	ebx, 0x20
0x8945:	sete	dl
0x8948:	xor	r10d, r10d
0x894b:	jmp	0x86e1


0x8968:	mov	ebx, 0x76
0x896d:	jmp	0x8610


0x8978:	mov	edx, 9
0x897d:	xor	r10d, r10d
0x8980:	mov	ebx, 0x74
0x8985:	jmp	0x8592


0x8990:	mov	ebx, 0x62
0x8995:	jmp	0x8610


0x8f30:	test	ebx, ebx
0x8f32:	jne	0x932d


0xacc0:	mov	r8d, 5
0xacc6:	xor	r9d, r9d
0xacc9:	mov	rax, rbx
0xaccc:	mul	rsi
0xaccf:	mov	rbx, rax
0xacd2:	jo	0xadcf


0x20a6:	nop	word ptr cs:[rax + rax]


0x20e7:	nop	word ptr [rax + rax]


0x2123:	nop	dword ptr [rax + rax]


0x2191:	nop	dword ptr [rax]


0x21a2:	nop	word ptr [rax + rax]


0x21e9:	nop	dword ptr [rax]


0x21fc:	nop	dword ptr [rax]


0x2278:	nop	dword ptr [rax + rax]


0x228a:	nop	word ptr [rax + rax]


0x230f:	nop	


0x2363:	nop	dword ptr [rax + rax]


0x23a6:	nop	word ptr cs:[rax + rax]


0x2b3b:	nop	dword ptr [rax + rax]


0x2cac:	nop	dword ptr [rax]


0x34c5:	nop	dword ptr [rax]


0x365d:	nop	dword ptr [rax]


0x37c3:	nop	dword ptr [rax + rax]


0x37fd:	nop	dword ptr [rax]


0x387e:	nop	


0x4906:	nop	word ptr cs:[rax + rax]


0x4957:	nop	word ptr [rax + rax]


0x49a1:	nop	dword ptr [rax]


0x4a3f:	nop	


0x4a42:	nop	word ptr [rax + rax]


0x4bb1:	nop	dword ptr [rax]


0x4bdd:	nop	dword ptr [rax]


0x4d1d:	nop	dword ptr [rax]


0x4dd8:	nop	dword ptr [rax + rax]


0x4e21:	nop	dword ptr [rax]


0x4e4d:	nop	dword ptr [rax]


0x4eeb:	nop	dword ptr [rax + rax]


0x4f4f:	nop	


0x5044:	nop	dword ptr [rax]


0x50c8:	nop	dword ptr [rax + rax]


0x50fe:	nop	


0x513e:	nop	


0x521f:	nop	


0x52d6:	nop	word ptr cs:[rax + rax]


0x5301:	nop	dword ptr [rax]


0x533a:	nop	word ptr [rax + rax]


0x53fc:	nop	dword ptr [rax]


0x545e:	nop	


0x5467:	nop	word ptr [rax + rax]


0x54ab:	nop	dword ptr [rax + rax]


0x5503:	nop	dword ptr [rax + rax]


0x555d:	nop	dword ptr [rax]


0x55b5:	nop	dword ptr [rax]


0x55fb:	nop	dword ptr [rax + rax]


0x564c:	nop	dword ptr [rax]


0x568c:	nop	dword ptr [rax]


0x569a:	nop	word ptr [rax + rax]


0x56df:	nop	


0x570d:	nop	dword ptr [rax]


0x5741:	nop	dword ptr [rax]


0x576d:	nop	dword ptr [rax]


0x57a1:	nop	dword ptr [rax]


0x57e6:	nop	word ptr cs:[rax + rax]


0x5813:	nop	dword ptr [rax + rax]


0x5849:	nop	dword ptr [rax]


0x5879:	nop	dword ptr [rax]


0x589f:	nop	


0x58bf:	nop	


0x58df:	nop	


0x5905:	nop	dword ptr [rax]


0x5927:	nop	word ptr [rax + rax]


0x594f:	nop	


0x596f:	nop	


0x598f:	nop	


0x59af:	nop	


0x59cf:	nop	


0x59ef:	nop	


0x5a0f:	nop	


0x5a23:	nop	dword ptr [rax + rax]


0x5a4d:	nop	dword ptr [rax]


0x5a6f:	nop	


0x5bf7:	nop	word ptr [rax + rax]


0x5c0b:	nop	dword ptr [rax + rax]


0x5ca7:	nop	word ptr [rax + rax]


0x5d99:	nop	dword ptr [rax]


0x5e09:	nop	dword ptr [rax]


0x5ee1:	nop	dword ptr [rax]


0x5f68:	nop	dword ptr [rax + rax]


0x5f7a:	nop	word ptr [rax + rax]


0x5fbb:	nop	dword ptr [rax + rax]


0x5ff7:	nop	word ptr [rax + rax]


0x6051:	nop	dword ptr [rax]


0x608b:	nop	dword ptr [rax + rax]


0x6626:	nop	word ptr cs:[rax + rax]


0x66b3:	nop	dword ptr [rax + rax]


0x66e7:	nop	word ptr [rax + rax]


0x675d:	nop	dword ptr [rax]


0x67cf:	nop	


0x6854:	nop	dword ptr [rax]


0x6883:	nop	dword ptr [rax + rax]


0x692f:	nop	


0x69c4:	nop	dword ptr [rax]


0x6a03:	nop	dword ptr [rax + rax]


0x6b1e:	nop	


0x6b3d:	nop	dword ptr [rax]


0x6bbb:	nop	dword ptr [rax + rax]


0x6bd7:	nop	word ptr [rax + rax]


0x6c2c:	nop	dword ptr [rax]


0x6c4e:	nop	


0x6ca4:	nop	dword ptr [rax]


0x6cf1:	nop	dword ptr [rax]


0x6d2e:	nop	


0x6e1b:	nop	dword ptr [rax + rax]


0x6e7a:	nop	word ptr [rax + rax]


0x6eb9:	nop	dword ptr [rax]


0x6ec9:	nop	dword ptr [rax]


0x6f4e:	nop	


0x6fa1:	nop	dword ptr [rax]


0x706c:	nop	dword ptr [rax]


0x707a:	nop	word ptr [rax + rax]


0x70de:	nop	


0x70f4:	nop	dword ptr [rax]


0x7147:	nop	word ptr [rax + rax]


0x71a7:	nop	word ptr [rax + rax]


0x71c4:	nop	dword ptr [rax]


0x727b:	nop	dword ptr [rax + rax]


0x72ec:	nop	dword ptr [rax]


0x7317:	nop	word ptr [rax + rax]


0x734b:	nop	dword ptr [rax + rax]


0x73a3:	nop	dword ptr [rax + rax]


0x73c4:	nop	dword ptr [rax]


0x73e2:	nop	word ptr [rax + rax]


0x742a:	nop	word ptr [rax + rax]


0x745b:	nop	dword ptr [rax + rax]


0x749f:	nop	


0x74e9:	nop	dword ptr [rax]


0x762f:	nop	


0x764c:	nop	dword ptr [rax]


0x76af:	nop	


0x76d6:	nop	word ptr cs:[rax + rax]


0x7725:	nop	dword ptr [rax]


0x77b1:	nop	dword ptr [rax]


0x77c6:	nop	word ptr cs:[rax + rax]


0x77f8:	nop	dword ptr [rax + rax]


0x7809:	nop	dword ptr [rax]


0x7836:	nop	word ptr cs:[rax + rax]


0x79ef:	nop	


0x7a11:	nop	dword ptr [rax]


0x7a36:	nop	word ptr cs:[rax + rax]


0x7a4a:	nop	word ptr [rax + rax]


0x7a57:	nop	word ptr [rax + rax]


0x7b1b:	nop	dword ptr [rax + rax]


0x7b9e:	nop	


0x7be8:	nop	dword ptr [rax + rax]


0x7c92:	nop	word ptr [rax + rax]


0x7ccd:	nop	dword ptr [rax]


0x7cee:	nop	


0x7d0e:	nop	


0x7d86:	nop	word ptr cs:[rax + rax]


0x7dff:	nop	


0x7ec5:	nop	dword ptr [rax]


0x7ee6:	nop	word ptr cs:[rax + rax]


0x7f0e:	nop	


0x7f2e:	nop	


0x7f4f:	nop	


0x7f5a:	nop	word ptr [rax + rax]


0x7f7e:	nop	


0x7fd7:	nop	word ptr [rax + rax]


0x800a:	nop	word ptr [rax + rax]


0x8098:	nop	dword ptr [rax + rax]


0x81bc:	nop	dword ptr [rax]


0x820d:	nop	dword ptr [rax]


0x8438:	nop	dword ptr [rax + rax]


0x8527:	nop	word ptr [rax + rax]


0x855e:	nop	


0x8581:	nop	dword ptr [rax]


0x85c2:	nop	word ptr [rax + rax]


0x85d4:	nop	dword ptr [rax]


0x8678:	nop	dword ptr [rax + rax]


0x86a1:	nop	dword ptr [rax]


0x86b7:	nop	word ptr [rax + rax]


0x86cf:	nop	


0x86fe:	nop	


0x870d:	nop	dword ptr [rax]


0x871f:	nop	


0x872f:	nop	


0x873f:	nop	


0x874f:	nop	


0x875f:	nop	


0x87cc:	nop	dword ptr [rax]


0x87ec:	nop	dword ptr [rax]


0x87fe:	nop	


0x880f:	nop	


0x8822:	nop	word ptr [rax + rax]


0x883a:	nop	word ptr [rax + rax]


0x884a:	nop	word ptr [rax + rax]


0x88eb:	nop	dword ptr [rax + rax]


0x8905:	nop	dword ptr [rax]


0x8918:	nop	dword ptr [rax + rax]


0x8933:	nop	dword ptr [rax + rax]


0x8962:	nop	word ptr [rax + rax]


0x8972:	nop	word ptr [rax + rax]


0x898a:	nop	word ptr [rax + rax]


0x899a:	nop	word ptr [rax + rax]


0x89a8:	nop	dword ptr [rax + rax]


0x89cf:	nop	


0x8a69:	nop	dword ptr [rax]


0x8ab2:	nop	word ptr [rax + rax]


0x8ad8:	nop	dword ptr [rax + rax]


0x8af1:	nop	dword ptr [rax]


0x8b12:	nop	word ptr [rax + rax]


0x8c78:	nop	dword ptr [rax + rax]


0x8d8b:	nop	dword ptr [rax + rax]


0x8dae:	nop	


0x8e75:	nop	dword ptr [rax]


0x8f2d:	nop	dword ptr [rax]


0x9136:	nop	word ptr cs:[rax + rax]


0x91c9:	nop	dword ptr [rax]


0x923d:	nop	dword ptr [rax]


0x931d:	nop	dword ptr [rax]


0x962b:	nop	dword ptr [rax + rax]


0x9e5f:	nop	


0x9f56:	nop	word ptr cs:[rax + rax]


0x9fe5:	nop	dword ptr [rax]


0xa006:	nop	word ptr cs:[rax + rax]


0xa065:	nop	dword ptr [rax]


0xa0a1:	nop	dword ptr [rax]


0xa0e8:	nop	dword ptr [rax + rax]


0xa137:	nop	word ptr [rax + rax]


0xa194:	nop	dword ptr [rax]


0xa1c2:	nop	word ptr [rax + rax]


0xa276:	nop	word ptr cs:[rax + rax]


0xa2d9:	nop	dword ptr [rax]


0xa552:	nop	word ptr [rax + rax]


0xa5d9:	nop	dword ptr [rax]


0xa604:	nop	dword ptr [rax]


0xa65d:	nop	dword ptr [rax]


0xa826:	nop	word ptr cs:[rax + rax]


0xa84f:	nop	


0xa8c1:	nop	dword ptr [rax]


0xa8fb:	nop	dword ptr [rax + rax]


0xa9a1:	nop	dword ptr [rax]


0xa9c2:	nop	word ptr [rax + rax]


0xaa46:	nop	word ptr cs:[rax + rax]


0xaaa3:	nop	dword ptr [rax + rax]


0xaab2:	nop	word ptr [rax + rax]


0xaae2:	nop	word ptr [rax + rax]


0xaaec:	nop	dword ptr [rax]


0xab8b:	nop	dword ptr [rax + rax]


0xacbc:	nop	dword ptr [rax]


0xad43:	nop	dword ptr [rax + rax]


0xae9b:	nop	dword ptr [rax + rax]


0xaec6:	nop	word ptr cs:[rax + rax]


0xaeff:	nop	


0xaf49:	nop	dword ptr [rax]


0xaf6b:	nop	dword ptr [rax + rax]


0xb011:	nop	dword ptr [rax]


0xb151:	nop	dword ptr [rax]


0xb193:	nop	dword ptr [rax + rax]


0xb215:	nop	dword ptr [rax]


0xb22f:	nop	


0xb284:	nop	dword ptr [rax]


0xb2a1:	nop	dword ptr [rax]


0xb2b2:	nop	word ptr [rax + rax]


0xb353:	nop	dword ptr [rax + rax]


0xb368:	nop	dword ptr [rax + rax]


0xb37d:	nop	dword ptr [rax]


0xb3ca:	nop	word ptr [rax + rax]


0xb416:	nop	word ptr cs:[rax + rax]


0xb485:	nop	dword ptr [rax]


0xb4e3:	nop	dword ptr [rax + rax]


0xb50f:	nop	


