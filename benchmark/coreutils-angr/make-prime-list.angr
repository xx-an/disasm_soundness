0x11e4:	sub	rsp, 8
0x11e8:	add	rsp, 8
0x11ec:	ret	


0x11e0:	ret	


0x1170:	push	r15
0x1172:	push	r14
0x1174:	mov	r15, rdx
0x1177:	push	r13
0x1179:	push	r12
0x117b:	lea	r12, [rip + 0x200bc6]
0x1182:	push	rbp
0x1183:	lea	rbp, [rip + 0x200bc6]
0x118a:	push	rbx
0x118b:	mov	r13d, edi
0x118e:	mov	r14, rsi
0x1191:	sub	rbp, r12
0x1194:	sub	rsp, 8
0x1198:	sar	rbp, 3
0x119c:	call	0x8b8


0x1070:	test	rcx, rcx
0x1073:	mov	r11, rdx
0x1076:	mov	rdx, rcx
0x1079:	jne	0x10b0


0x1030:	sub	rsp, 8
0x1034:	call	0x970


0xf00:	push	r14
0xf02:	push	r13
0xf04:	push	r12
0xf06:	push	rbp
0xf07:	mov	r12, rsi
0xf0a:	push	rbx
0xf0b:	mov	ebx, edi
0xf0d:	mov	ebp, edx
0xf0f:	and	ebx, 0xfffffff
0xf15:	mov	eax, ebx
0xf17:	sub	rsp, 0x10
0xf1b:	xor	rax, rdi
0xf1e:	or	rsi, rax
0xf21:	jne	0xf80


0xef0:	push	rbp
0xef1:	mov	rbp, rsp
0xef4:	pop	rbp
0xef5:	jmp	0xe60


0xeb0:	cmp	byte ptr [rip + 0x201191], 0
0xeb7:	jne	0xee8


0xe60:	lea	rdi, [rip + 0x2011a9]
0xe67:	lea	rsi, [rip + 0x2011a2]
0xe6e:	push	rbp
0xe6f:	sub	rsi, rdi
0xe72:	mov	rbp, rsp
0xe75:	sar	rsi, 3
0xe79:	mov	rax, rsi
0xe7c:	shr	rax, 0x3f
0xe80:	add	rsi, rax
0xe83:	sar	rsi, 1
0xe86:	je	0xea0


0xe20:	lea	rdi, [rip + 0x2011e9]
0xe27:	push	rbp
0xe28:	lea	rax, [rip + 0x2011e1]
0xe2f:	cmp	rax, rdi
0xe32:	mov	rbp, rsp
0xe35:	je	0xe50


0xdf0:	xor	ebp, ebp
0xdf2:	mov	r9, rdx
0xdf5:	pop	rsi
0xdf6:	mov	rdx, rsp
0xdf9:	and	rsp, 0xfffffffffffffff0
0xdfd:	push	rax
0xdfe:	push	rsp
0xdff:	lea	r8, [rip + 0x3da]
0xe06:	lea	rcx, [rip + 0x363]
0xe0d:	lea	rdi, [rip - 0x434]
0xe14:	call	qword ptr [rip + 0x2011c6]


0x9e0:	push	r15
0x9e2:	push	r14
0x9e4:	push	r13
0x9e6:	push	r12
0x9e8:	push	rbp
0x9e9:	push	rbx
0x9ea:	sub	rsp, 0x38
0x9ee:	cmp	edi, 2
0x9f1:	je	0xa24


0x8b8:	sub	rsp, 8
0x8bc:	mov	rax, qword ptr [rip + 0x201725]
0x8c3:	test	rax, rax
0x8c6:	je	0x8ca


0x107b:	cmp	r11, rsi
0x107e:	ja	0x1138


0x10b0:	cmp	rcx, rsi
0x10b3:	ja	0x1130


0x970:	jmp	qword ptr [rip + 0x201632]


0xf23:	test	ebp, ebp
0xf25:	mov	edx, 7
0xf2a:	jne	0xf50


0xf80:	mov	r11, rdi
0xf83:	mov	r10, r12
0xf86:	mov	r14, r12
0xf89:	mov	r9, r11
0xf8c:	shr	r10, 0x38
0xf90:	mov	r13, r11
0xf93:	shrd	r9, r12, 0x38
0xf98:	mov	rax, r10
0xf9b:	shr	r14, 0x1c
0xf9f:	lea	edx, [rdx + 1]
0xfa2:	shrd	r13, r12, 0x1c
0xfa7:	or	rax, r9
0xfaa:	jne	0xfe0


0xeb9:	cmp	qword ptr [rip + 0x201137], 0
0xec1:	push	rbp
0xec2:	mov	rbp, rsp
0xec5:	je	0xed3


0xee8:	ret	


0xea0:	pop	rbp
0xea1:	ret	


0xe88:	mov	rax, qword ptr [rip + 0x201161]
0xe8f:	test	rax, rax
0xe92:	je	0xea0


0xe50:	pop	rbp
0xe51:	ret	


0xe37:	mov	rax, qword ptr [rip + 0x20119a]
0xe3e:	test	rax, rax
0xe41:	je	0xe50




0xa24:	mov	rdi, qword ptr [rsi + 8]
0xa28:	mov	edx, 0xa
0xa2d:	xor	esi, esi
0xa2f:	mov	qword ptr [rsp], r9
0xa33:	mov	qword ptr [rsp + 8], r10
0xa38:	call	0x960


0x9f3:	mov	rcx, qword ptr [rsi]
0x9f6:	lea	rdx, [rip + 0x8ab]
0x9fd:	mov	rdi, qword ptr [rip + 0x20163c]
0xa04:	mov	esi, 1
0xa09:	xor	eax, eax
0xa0b:	call	0x9b0


0x8ca:	add	rsp, 8
0x8ce:	ret	


0x8c8:	call	rax


0x1084:	test	r11, r11
0x1087:	mov	rcx, r11
0x108a:	jne	0x1099


0x1138:	mov	rax, rdi
0x113b:	mov	rdx, rsi
0x113e:	div	r11
0x1141:	xor	edx, edx
0x1143:	ret	


0x10b5:	bsr	rax, rcx
0x10b9:	xor	rax, 0x3f
0x10bd:	test	eax, eax
0x10bf:	mov	r9d, eax
0x10c2:	je	0x1148


0x1130:	xor	edx, edx
0x1132:	xor	eax, eax
0x1134:	ret	




0xf2c:	add	rsp, 0x10
0xf30:	mov	ecx, ebx
0xf32:	lea	rsi, [rip + 0x2d8]
0xf39:	pop	rbx
0xf3a:	pop	rbp
0xf3b:	pop	r12
0xf3d:	pop	r13
0xf3f:	pop	r14
0xf41:	mov	edi, 1
0xf46:	xor	eax, eax
0xf48:	jmp	0x980


0xf50:	lea	rsi, [rip + 0x2ad]
0xf57:	mov	edi, 1
0xf5c:	xor	eax, eax
0xf5e:	mov	dword ptr [rsp + 8], ecx
0xf62:	call	0x980


0xfac:	mov	rsi, r14
0xfaf:	mov	rdi, r13
0xfb2:	call	0xf00


0xfe0:	mov	edi, 0x28
0xfe5:	mov	dword ptr [rsp + 0xc], ecx
0xfe9:	mov	dword ptr [rsp + 8], edx
0xfed:	call	0x8f0


0xed3:	call	0xe20


0xec7:	mov	rdi, qword ptr [rip + 0x20113a]
0xece:	call	0x9d0


0xe94:	pop	rbp
0xe95:	jmp	rax


0xe43:	pop	rbp
0xe44:	jmp	rax


0x960:	jmp	qword ptr [rip + 0x20163a]


0x9b0:	jmp	qword ptr [rip + 0x201612]


0x108c:	mov	eax, 1
0x1091:	xor	edx, edx
0x1093:	div	r11
0x1096:	mov	rcx, rax
0x1099:	mov	rax, rsi
0x109c:	xor	edx, edx
0x109e:	div	rcx
0x10a1:	mov	rsi, rax
0x10a4:	mov	rax, rdi
0x10a7:	div	rcx
0x10aa:	mov	rdx, rsi
0x10ad:	ret	


0x1099:	mov	rax, rsi
0x109c:	xor	edx, edx
0x109e:	div	rcx
0x10a1:	mov	rsi, rax
0x10a4:	mov	rax, rdi
0x10a7:	div	rcx
0x10aa:	mov	rdx, rsi
0x10ad:	ret	


0x1148:	cmp	rcx, rsi
0x114b:	jb	0x115a


0x10c8:	mov	ecx, eax
0x10ca:	push	rbx
0x10cb:	mov	ebx, 0x40
0x10d0:	shl	rdx, cl
0x10d3:	movsxd	rcx, eax
0x10d6:	mov	r10, r11
0x10d9:	sub	rbx, rcx
0x10dc:	mov	r8, rsi
0x10df:	mov	ecx, ebx
0x10e1:	shr	r10, cl
0x10e4:	mov	ecx, eax
0x10e6:	shl	r11, cl
0x10e9:	mov	ecx, ebx
0x10eb:	or	r10, rdx
0x10ee:	shr	r8, cl
0x10f1:	mov	ecx, eax
0x10f3:	mov	rax, rdi
0x10f6:	shl	rsi, cl
0x10f9:	mov	ecx, ebx
0x10fb:	mov	rdx, r8
0x10fe:	shr	rax, cl
0x1101:	or	rax, rsi
0x1104:	div	r10
0x1107:	mov	r8, rdx
0x110a:	mov	rsi, rax
0x110d:	mul	r11
0x1110:	cmp	r8, rdx
0x1113:	jb	0x1125


0x980:	jmp	qword ptr [rip + 0x20162a]


0x8f0:	jmp	qword ptr [rip + 0x201672]


0x9d0:	jmp	qword ptr [rip + 0x201622]






0x115a:	xor	edx, edx
0x115c:	mov	eax, 1
0x1161:	ret	


0x114d:	xor	edx, edx
0x114f:	xor	eax, eax
0x1151:	cmp	r11, rdi
0x1154:	ja	0x10ad


0x1125:	lea	rax, [rsi - 1]
0x1129:	xor	edx, edx
0x112b:	pop	rbx
0x112c:	ret	


0x1115:	mov	ecx, r9d
0x1118:	shl	rdi, cl
0x111b:	cmp	rdi, rax
0x111e:	jae	0x1168






0x10ad:	ret	


0x1120:	cmp	r8, rdx
0x1123:	jne	0x1168


0x1168:	mov	rax, rsi
0x116b:	xor	edx, edx
0x116d:	pop	rbx
0x116e:	ret	


0xed8:	mov	byte ptr [rip + 0x201169], 1
0xedf:	pop	rbp
0xee0:	ret	


0x11a1:	test	rbp, rbp
0x11a4:	je	0x11c6


0x11c6:	add	rsp, 8
0x11ca:	pop	rbx
0x11cb:	pop	rbp
0x11cc:	pop	r12
0x11ce:	pop	r13
0x11d0:	pop	r14
0x11d2:	pop	r15
0x11d4:	ret	


0x11a6:	xor	ebx, ebx
0x11a8:	nop	dword ptr [rax + rax]
0x11b0:	mov	rdx, r15
0x11b3:	mov	rsi, r14
0x11b6:	mov	edi, r13d
0x11b9:	call	qword ptr [r12 + rbx*8]


0xff2:	mov	ecx, dword ptr [rsp + 0xc]
0xff6:	mov	edx, dword ptr [rsp + 8]
0xffa:	mov	rsi, r14
0xffd:	mov	rdi, r13
0x1000:	call	0xf00


0xf67:	mov	ecx, dword ptr [rsp + 8]
0xf6b:	lea	edx, [rcx - 1]
0xf6e:	and	edx, 3
0xf71:	add	edx, 1
0xf74:	jmp	0xf2c


0xa10:	mov	eax, 1
0xa15:	add	rsp, 0x38
0xa19:	pop	rbx
0xa1a:	pop	rbp
0xa1b:	pop	r12
0xa1d:	pop	r13
0xa1f:	pop	r14
0xa21:	pop	r15
0xa23:	ret	


0xa3d:	cmp	eax, 2
0xa40:	mov	edx, eax
0xa42:	mov	r9, qword ptr [rsp]
0xa46:	mov	r10, qword ptr [rsp + 8]
0xa4b:	jle	0xd08


0xd08:	xor	eax, eax
0xd0a:	jmp	0xa15


0xa51:	test	al, 1
0xa53:	jne	0xa58


0xa15:	add	rsp, 0x38
0xa19:	pop	rbx
0xa1a:	pop	rbp
0xa1b:	pop	r12
0xa1d:	pop	r13
0xa1f:	pop	r14
0xa21:	pop	r15
0xa23:	ret	


0xa55:	lea	edx, [rax - 1]
0xa58:	lea	ebx, [rdx - 1]
0xa5b:	mov	qword ptr [rsp], r9
0xa5f:	mov	qword ptr [rsp + 8], r10
0xa64:	sar	ebx, 1
0xa66:	movsxd	r12, ebx
0xa69:	mov	rdi, r12
0xa6c:	call	0x1030


0xa58:	lea	ebx, [rdx - 1]
0xa5b:	mov	qword ptr [rsp], r9
0xa5f:	mov	qword ptr [rsp + 8], r10
0xa64:	sar	ebx, 1
0xa66:	movsxd	r12, ebx
0xa69:	mov	rdi, r12
0xa6c:	call	0x1030


0x1039:	test	rax, rax
0x103c:	je	0x1043


0x1043:	mov	rcx, qword ptr [rip + 0x200ff6]
0x104a:	lea	rdi, [rip + 0x1c8]
0x1051:	mov	edx, 0x1a
0x1056:	mov	esi, 1
0x105b:	call	0x9a0


0x103e:	add	rsp, 8
0x1042:	ret	


0x9a0:	jmp	qword ptr [rip + 0x20161a]




0xa71:	mov	rdx, r12
0xa74:	mov	esi, 1
0xa79:	mov	rdi, rax
0xa7c:	mov	r15, rax
0xa7f:	call	0x950


0x950:	jmp	qword ptr [rip + 0x201642]




0xa84:	imul	rdi, r12, 0x30
0xa88:	call	0x1030


0xa8d:	test	ebx, ebx
0xa8f:	mov	rbp, rax
0xa92:	je	0xdbc


0xdbc:	mov	dword ptr [rsp + 0x24], 0
0xdc4:	jmp	0xbe1


0xa98:	xor	ebx, ebx
0xa9a:	mov	qword ptr [rsp + 0x28], rbp
0xa9f:	xor	eax, eax
0xaa1:	mov	rbp, rbx
0xaa4:	lea	r9d, [rbp + rbp + 3]
0xaa9:	lea	r11, [rax + rax*2]
0xaad:	xor	r10d, r10d
0xab0:	lea	edi, [rax + 1]
0xab3:	mov	eax, 0xf5397db1
0xab8:	xor	r14d, r14d
0xabb:	mov	rcx, r9
0xabe:	shl	r11, 4
0xac2:	add	r11, qword ptr [rsp + 0x28]
0xac7:	shrd	rcx, r10, 1
0xacc:	mov	r8, r9
0xacf:	mov	dword ptr [rsp + 0x24], edi
0xad3:	and	ecx, 7
0xad6:	shl	ecx, 2
0xad9:	mov	dword ptr [r11], r9d
0xadc:	shr	eax, cl
0xade:	mov	r13d, eax
0xae1:	jmp	0xaee


0xbe1:	lea	rdi, [rip + 0x6f8]
0xbe8:	call	0x920


0xaee:	mov	rsi, r14
0xaf1:	mov	rax, r13
0xaf4:	mov	rcx, r13
0xaf7:	mul	r13
0xafa:	mov	rbx, r14
0xafd:	add	rcx, r13
0xb00:	imul	rsi, r13
0xb04:	shld	rbx, r13, 1
0xb09:	mov	qword ptr [rsp + 8], rdx
0xb0e:	mov	qword ptr [rsp], rax
0xb12:	add	rsi, rsi
0xb15:	add	qword ptr [rsp + 8], rsi
0xb1a:	mov	rdx, qword ptr [rsp]
0xb1e:	mov	rsi, qword ptr [rsp + 8]
0xb23:	mov	rax, qword ptr [rsp]
0xb27:	imul	rdx, r10
0xb2b:	imul	rsi, r9
0xb2f:	add	rsi, rdx
0xb32:	mul	r9
0xb35:	add	rdx, rsi
0xb38:	sub	rcx, rax
0xb3b:	mov	rax, r13
0xb3e:	sbb	rbx, rdx
0xb41:	mov	rdx, r14
0xb44:	xor	rax, rcx
0xb47:	xor	rdx, rbx
0xb4a:	or	rdx, rax
0xb4d:	jne	0xae8


0x920:	jmp	qword ptr [rip + 0x20165a]


0xb4f:	mov	rdi, -1
0xb56:	mov	qword ptr [r11 + 0x10], r13
0xb5a:	mov	qword ptr [r11 + 0x18], r14
0xb5e:	mov	rdx, r9
0xb61:	mov	rcx, r10
0xb64:	mov	rsi, rdi
0xb67:	mov	dword ptr [rsp + 0x20], r8d
0xb6c:	mov	qword ptr [rsp + 0x18], r11
0xb71:	mov	qword ptr [rsp], r9
0xb75:	mov	qword ptr [rsp + 8], r10
0xb7a:	call	0x1070


0xae8:	mov	r13, rcx
0xaeb:	mov	r14, rbx
0xaee:	mov	rsi, r14
0xaf1:	mov	rax, r13
0xaf4:	mov	rcx, r13
0xaf7:	mul	r13
0xafa:	mov	rbx, r14
0xafd:	add	rcx, r13
0xb00:	imul	rsi, r13
0xb04:	shld	rbx, r13, 1
0xb09:	mov	qword ptr [rsp + 8], rdx
0xb0e:	mov	qword ptr [rsp], rax
0xb12:	add	rsi, rsi
0xb15:	add	qword ptr [rsp + 8], rsi
0xb1a:	mov	rdx, qword ptr [rsp]
0xb1e:	mov	rsi, qword ptr [rsp + 8]
0xb23:	mov	rax, qword ptr [rsp]
0xb27:	imul	rdx, r10
0xb2b:	imul	rsi, r9
0xb2f:	add	rsi, rdx
0xb32:	mul	r9
0xb35:	add	rdx, rsi
0xb38:	sub	rcx, rax
0xb3b:	mov	rax, r13
0xb3e:	sbb	rbx, rdx
0xb41:	mov	rdx, r14
0xb44:	xor	rax, rcx
0xb47:	xor	rdx, rbx
0xb4a:	or	rdx, rax
0xb4d:	jne	0xae8




0xb7f:	mov	r11, qword ptr [rsp + 0x18]
0xb84:	mov	r8d, dword ptr [rsp + 0x20]
0xb89:	mov	qword ptr [r11 + 0x20], rax
0xb8d:	mov	eax, r8d
0xb90:	mov	qword ptr [r11 + 0x28], rdx
0xb94:	imul	eax, r8d
0xb98:	sub	eax, 3
0xb9b:	shr	eax, 1
0xb9d:	mov	edx, eax
0xb9f:	cmp	r12, rdx
0xba2:	jbe	0xbd3


0xbd3:	add	rbp, 1
0xbd7:	cmp	r12, rbp
0xbda:	ja	0xbc8


0xbdc:	mov	rbp, qword ptr [rsp + 0x28]
0xbe1:	lea	rdi, [rip + 0x6f8]
0xbe8:	call	0x920


0xbc8:	cmp	byte ptr [r15 + rbp], 0
0xbcd:	jne	0xdb3


0xba8:	mov	byte ptr [r15 + rdx], 0
0xbad:	lea	edx, [rax + r8]
0xbb1:	cmp	rdx, r12
0xbb4:	mov	rax, rdx
0xbb7:	jb	0xba8


0xbb9:	add	rbp, 1
0xbbd:	cmp	r12, rbp
0xbc0:	jbe	0xbdc


0xdb3:	mov	eax, dword ptr [rsp + 0x24]
0xdb7:	jmp	0xaa4


0xaa4:	lea	r9d, [rbp + rbp + 3]
0xaa9:	lea	r11, [rax + rax*2]
0xaad:	xor	r10d, r10d
0xab0:	lea	edi, [rax + 1]
0xab3:	mov	eax, 0xf5397db1
0xab8:	xor	r14d, r14d
0xabb:	mov	rcx, r9
0xabe:	shl	r11, 4
0xac2:	add	r11, qword ptr [rsp + 0x28]
0xac7:	shrd	rcx, r10, 1
0xacc:	mov	r8, r9
0xacf:	mov	dword ptr [rsp + 0x24], edi
0xad3:	and	ecx, 7
0xad6:	shl	ecx, 2
0xad9:	mov	dword ptr [r11], r9d
0xadc:	shr	eax, cl
0xade:	mov	r13d, eax
0xae1:	jmp	0xaee


0x1060:	mov	edi, 1
0x1065:	call	0x990


0x990:	jmp	qword ptr [rip + 0x201622]




0xbed:	lea	rsi, [rip + 0x640]
0xbf4:	mov	edi, 1
0xbf9:	xor	eax, eax
0xbfb:	mov	edx, 0x80
0xc00:	call	0x980


0xc05:	mov	edi, dword ptr [rsp + 0x24]
0xc09:	test	edi, edi
0xc0b:	je	0xdd3


0xdd3:	mov	r12d, 2
0xdd9:	jmp	0xcc2


0xc11:	lea	eax, [rdi - 1]
0xc14:	mov	r14d, 8
0xc1a:	mov	qword ptr [rsp], r15
0xc1e:	mov	rbx, rbp
0xc21:	mov	r15d, r14d
0xc24:	mov	edx, 2
0xc29:	imul	rax, rax, 0x30
0xc2d:	lea	r13, [rbp + rax + 0x30]
0xc32:	mov	r14, r13
0xc35:	mov	r13d, edi
0xc38:	nop	dword ptr [rax + rax]
0xc40:	cmp	r13d, r15d
0xc43:	mov	r12d, dword ptr [rbx]
0xc46:	jbe	0xdc9


0xcc2:	lea	rdi, [rip + 0x5af]
0xcc9:	add	r12d, 2
0xccd:	call	0x920


0xdc9:	mov	ecx, 0xff
0xdce:	jmp	0xc6a


0xc4c:	mov	eax, r15d
0xc4f:	lea	rax, [rax + rax*2]
0xc53:	shl	rax, 4
0xc57:	mov	ecx, dword ptr [rbp + rax]
0xc5b:	sub	ecx, r12d
0xc5e:	cmp	ecx, 0xff
0xc64:	ja	0xdde


0xc6a:	mov	eax, r12d
0xc6d:	lea	rsi, [rip + 0x5db]
0xc74:	mov	edi, 1
0xc79:	sub	eax, edx
0xc7b:	add	rbx, 0x30
0xc7f:	add	r15d, 1
0xc83:	mov	edx, eax
0xc85:	xor	eax, eax
0xc87:	call	0x980


0xdde:	call	0x900


0x900:	jmp	qword ptr [rip + 0x20166a]




0xc8c:	mov	rdi, qword ptr [rbx - 0x20]
0xc90:	mov	rsi, qword ptr [rbx - 0x18]
0xc94:	xor	edx, edx
0xc96:	mov	ecx, 0x80
0xc9b:	call	0xf00


0xcd2:	mov	r9d, dword ptr [rbp]
0xcd6:	imul	r9d, r9d
0xcda:	cmp	r9d, r12d
0xcdd:	ja	0xd50


0xcdf:	mov	edi, r12d
0xce2:	mov	rcx, qword ptr [rbp + 0x18]
0xce6:	mov	rax, rdi
0xce9:	mul	qword ptr [rbp + 0x10]
0xced:	imul	rcx, rdi
0xcf1:	add	rdx, rcx
0xcf4:	cmp	qword ptr [rbp + 0x28], rdx
0xcf8:	ja	0xd02


0xd50:	lea	rsi, [rip + 0x5b1]
0xd57:	mov	edx, r12d
0xd5a:	mov	edi, 1
0xd5f:	xor	eax, eax
0xd61:	call	0x980


0xcfa:	jb	0xd10


0xd02:	add	r12d, 2
0xd06:	jmp	0xcda


0xd10:	xor	esi, esi
0xd12:	lea	eax, [rsi + 1]
0xd15:	lea	rcx, [rax + rax*2]
0xd19:	mov	rsi, rax
0xd1c:	shl	rcx, 4
0xd20:	add	rcx, rbp
0xd23:	mov	eax, dword ptr [rcx]
0xd25:	imul	eax, eax
0xd28:	cmp	eax, r12d
0xd2b:	ja	0xd50


0xcfc:	cmp	qword ptr [rbp + 0x20], rax
0xd00:	jb	0xd10


0xcda:	cmp	r9d, r12d
0xcdd:	ja	0xd50


0xd2d:	mov	r8, qword ptr [rcx + 0x18]
0xd31:	mov	rax, rdi
0xd34:	mul	qword ptr [rcx + 0x10]
0xd38:	imul	r8, rdi
0xd3c:	add	rdx, r8
0xd3f:	cmp	rdx, qword ptr [rcx + 0x28]
0xd43:	jb	0xd02


0xd45:	ja	0xd12


0xd47:	cmp	rax, qword ptr [rcx + 0x20]
0xd4b:	jbe	0xd02


0xd12:	lea	eax, [rsi + 1]
0xd15:	lea	rcx, [rax + rax*2]
0xd19:	mov	rsi, rax
0xd1c:	shl	rcx, 4
0xd20:	add	rcx, rbp
0xd23:	mov	eax, dword ptr [rcx]
0xd25:	imul	eax, eax
0xd28:	cmp	eax, r12d
0xd2b:	ja	0xd50


0xd4d:	jmp	0xd12


0xd66:	mov	rdi, r15
0xd69:	call	0x8e0


0x8e0:	jmp	qword ptr [rip + 0x20167a]




0xd6e:	mov	rdi, rbp
0xd71:	call	0x8e0


0xd76:	mov	rdi, qword ptr [rip + 0x2012a3]
0xd7d:	call	0x930


0x930:	jmp	qword ptr [rip + 0x201652]




0xd82:	mov	rdi, qword ptr [rip + 0x201297]
0xd89:	mov	ebx, eax
0xd8b:	call	0x940


0x940:	jmp	qword ptr [rip + 0x20164a]




0xd90:	add	ebx, eax
0xd92:	je	0xd08


0xd98:	call	0x910


0x910:	jmp	qword ptr [rip + 0x201662]




0xd9d:	mov	edi, dword ptr [rax]
0xd9f:	call	0x9c0


0x9c0:	jmp	qword ptr [rip + 0x20160a]




0xda4:	lea	rdx, [rip + 0x4e9]
0xdab:	mov	rcx, rax
0xdae:	jmp	0x9fd


0x9fd:	mov	rdi, qword ptr [rip + 0x20163c]
0xa04:	mov	esi, 1
0xa09:	xor	eax, eax
0xa0b:	call	0x9b0


0xca0:	lea	rsi, [rip + 0x5b8]
0xca7:	mov	edx, r12d
0xcaa:	xor	eax, eax
0xcac:	mov	edi, 1
0xcb1:	call	0x980


0xcb6:	cmp	r14, rbx
0xcb9:	mov	edx, r12d
0xcbc:	jne	0xc40


0xcbe:	mov	r15, qword ptr [rsp]
0xcc2:	lea	rdi, [rip + 0x5af]
0xcc9:	add	r12d, 2
0xccd:	call	0x920


0xc40:	cmp	r13d, r15d
0xc43:	mov	r12d, dword ptr [rbx]
0xc46:	jbe	0xdc9


0x1005:	lea	edx, [rbp + 3]
0x1008:	lea	rcx, [rip + 0x268]
0x100f:	lea	rsi, [rip + 0x1de]
0x1016:	mov	edi, 1
0x101b:	xor	eax, eax
0x101d:	call	0x980


0x1022:	jmp	0xfb7


0xfb7:	lea	rsi, [rip + 0x23c]
0xfbe:	mov	edx, 0x1c
0xfc3:	mov	edi, 1
0xfc8:	xor	eax, eax
0xfca:	call	0x980


0xfcf:	mov	edx, 7
0xfd4:	jmp	0xf2c


0x11bd:	add	rbx, 1
0x11c1:	cmp	rbp, rbx
0x11c4:	jne	0x11b0


0x11b0:	mov	rdx, r15
0x11b3:	mov	rsi, r14
0x11b6:	mov	edi, r13d
0x11b9:	call	qword ptr [r12 + rbx*8]






0x8d0:	push	qword ptr [rip + 0x20167a]
0x8d6:	jmp	qword ptr [rip + 0x20167c]


0x8dc:	nop	dword ptr [rax]


0x8e6:	push	0
0x8eb:	jmp	0x8d0


0x8f6:	push	1
0x8fb:	jmp	0x8d0


0x906:	push	2
0x90b:	jmp	0x8d0


0x916:	push	3
0x91b:	jmp	0x8d0


0x926:	push	4
0x92b:	jmp	0x8d0


0x936:	push	5
0x93b:	jmp	0x8d0


0x946:	push	6
0x94b:	jmp	0x8d0


0x956:	push	7
0x95b:	jmp	0x8d0


0x966:	push	8
0x96b:	jmp	0x8d0


0x976:	push	9
0x97b:	jmp	0x8d0


0x986:	push	0xa
0x98b:	jmp	0x8d0


0x996:	push	0xb
0x99b:	jmp	0x8d0


0x9a6:	push	0xc
0x9ab:	jmp	0x8d0


0x9b6:	push	0xd
0x9bb:	jmp	0x8d0


0x9c6:	push	0xe
0x9cb:	jmp	0x8d0


0xde3:	nop	word ptr cs:[rax + rax]
0xded:	nop	dword ptr [rax]


0xe1a:	hlt	


0xe1b:	nop	dword ptr [rax + rax]


0xe52:	nop	dword ptr [rax]
0xe56:	nop	word ptr cs:[rax + rax]


0xea2:	nop	dword ptr [rax]
0xea6:	nop	word ptr cs:[rax + rax]


0xeea:	nop	word ptr [rax + rax]


0xefa:	nop	word ptr [rax + rax]


0x1024:	nop	
0x1026:	nop	word ptr cs:[rax + rax]


0x106a:	nop	word ptr [rax + rax]


0x116f:	nop	


0x11d5:	nop	
0x11d6:	nop	word ptr cs:[rax + rax]


0xae3:	nop	dword ptr [rax + rax]


0xba4:	nop	dword ptr [rax]


0xbc2:	nop	word ptr [rax + rax]


0xd0f:	nop	


0xd4f:	nop	


0xe46:	nop	word ptr cs:[rax + rax]


0xe97:	nop	word ptr [rax + rax]


0xee1:	nop	dword ptr [rax]


0xf4d:	nop	dword ptr [rax]


0xf76:	nop	word ptr cs:[rax + rax]


0xfd9:	nop	dword ptr [rax]


0x10ae:	nop	


0x112d:	nop	dword ptr [rax]


0x1135:	nop	dword ptr [rax]


0x1144:	nop	dword ptr [rax]


0x1162:	nop	word ptr [rax + rax]


