0x15e0: xor ebp,ebp
0x15e2: mov r9,rdx
0x15e5: pop rsi
0x15e6: mov rdx,rsp
0x15e9: and rsp,0xfffffffffffffff0
0x15ed: push rax
0x15ee: push rsp
0x15ef: lea r8,[rip+0x30ba]
0x15f6: lea rcx,[rip+0x3043]
0x15fd: lea rdi,[rip+0xfffffffffffffebc]
0x1604: call qword ptr [rip+0x2059c6]
Execute the function: __libc_start_main

0x1604: jump address is 0x14c0
0x14c0: push rbp
0x14c1: push rbx
0x14c2: mov ebp,edi
0x14c4: mov rbx,rsi
0x14c7: sub rsp,0x8
0x14cb: mov rdi,qword ptr [rsi]
0x14ce: call 0x1d90
0x14ce: jump address is 0x1d90
0x1d90: test rdi,rdi
0x1d93: push rbx
0x1d94: je 0x1e0d
0x1d94: jump address is 0x1e0d
0x1d96: mov esi,0x2f
0x1d9b: mov rbx,rdi
0x1d9e: call 0x1320
0x1d9e: jump address is 0x1320
0x1320: jmp qword ptr [rip+0x205bda]
Execute the function: strrchr

0x1320: the return address is 0x1da3
0x1da3: test rax,rax
0x1da6: je 0x1dfd
0x1da6: jump address is 0x1dfd
0x1da8: lea r8,[rax+0x1]
0x1dac: mov rdx,r8
0x1daf: sub rdx,rbx
0x1db2: cmp rdx,0x6
0x1db6: jle 0x1dfd
0x1db6: jump address is 0x1dfd
Block exists: mov qword ptr [rip+0x2052dc],rbx at address 0x1dfd is visited for 1 times

0x1db8: lea rsi,[rax-0x6]
0x1dbc: lea rdi,[rip+0x2bed]
0x1dc3: mov ecx,0x7
0x1dc8: repz cmps byte ptr ds:[rsi],byte ptr es:[rdi]
0x1dca: seta dl
0x1dcd: sbb dl,0x0
0x1dd0: test dl,dl
0x1dd2: jne 0x1dfd
0x1dd2: jump address is 0x1dfd
Block exists: mov qword ptr [rip+0x2052dc],rbx at address 0x1dfd is visited for 1 times

0x1dd4: lea rdi,[rip+0x2bdd]
0x1ddb: mov ecx,0x3
0x1de0: mov rsi,r8
0x1de3: mov rbx,r8
0x1de6: repz cmps byte ptr ds:[rsi],byte ptr es:[rdi]
0x1de8: seta dl
0x1deb: sbb dl,0x0
0x1dee: test dl,dl
0x1df0: jne 0x1dfd
0x1df0: jump address is 0x1dfd
Block exists: mov qword ptr [rip+0x2052dc],rbx at address 0x1dfd is visited for 1 times

0x1df2: lea rbx,[rax+0x4]
0x1df6: mov qword ptr [rip+0x205283],rbx
0x1dfd: mov qword ptr [rip+0x2052dc],rbx
0x1e04: mov qword ptr [rip+0x20528d],rbx
0x1e0b: pop rbx
0x1e0c: ret
0x1e0c: the return address is 0x14d3
0x14d3: lea rsi,[rip+0x3a07]
0x14da: mov edi,0x6
0x14df: call 0x1400
0x14df: jump address is 0x1400
0x1400: jmp qword ptr [rip+0x205b6a]
Execute the function: setlocale

0x1400: the return address is 0x14e4
0x14e4: lea rsi,[rip+0x32b8]
0x14eb: lea rdi,[rip+0x3288]
0x14f2: call 0x12b0
0x14f2: jump address is 0x12b0
0x12b0: jmp qword ptr [rip+0x205c12]
Execute the function: bindtextdomain

0x12b0: the return address is 0x14f7
0x14f7: lea rdi,[rip+0x327c]
0x14fe: call 0x1290
0x14fe: jump address is 0x1290
0x1290: jmp qword ptr [rip+0x205c22]
Execute the function: textdomain

0x1290: the return address is 0x1503
0x1503: lea rdi,[rip+0x556]
0x150a: call 0x46c0
0x150a: jump address is 0x46c0
0x46c0: mov rdx,qword ptr [rip+0x202941]
0x46c7: xor esi,esi
0x46c9: jmp 0x1440
0x46c9: jump address is 0x1440
0x1440: jmp qword ptr [rip+0x205b4a]
Execute the function: __cxa_atexit

0x1440: the return address is 0x150f
0x150f: lea rax,[rip+0x32a5]
0x1516: sub rsp,0x8
0x151a: mov r8,qword ptr [rip+0x205aef]
0x1521: push 0x0
0x1523: lea rcx,[rip+0x324c]
0x152a: lea rdx,[rip+0x31b3]
0x1531: push rax
0x1532: lea rax,[rip+0x1b7]
0x1539: mov r9d,0x1
0x153f: mov rsi,rbx
0x1542: mov edi,ebp
0x1544: push rax
0x1545: xor eax,eax
0x1547: call 0x1c50
0x1547: jump address is 0x1c50
0x1c50: push r14
0x1c52: push r13
0x1c54: mov r14,r8
0x1c57: push r12
0x1c59: push rbp
0x1c5a: mov r12,rdx
0x1c5d: push rbx
0x1c5e: mov r13,rcx
0x1c61: sub rsp,0xd0
0x1c68: test al,al
0x1c6a: mov rbp,qword ptr [rsp+0x100]
0x1c72: je 0x1cab
0x1c72: jump address is 0x1cab
0x1c74: movaps xmmword ptr [rsp+0x50],xmm0
0x1c79: movaps xmmword ptr [rsp+0x60],xmm1
0x1c7e: movaps xmmword ptr [rsp+0x70],xmm2
0x1c83: movaps xmmword ptr [rsp+0x80],xmm3
0x1c8b: movaps xmmword ptr [rsp+0x90],xmm4
0x1c93: movaps xmmword ptr [rsp+0xa0],xmm5
0x1c9b: movaps xmmword ptr [rsp+0xb0],xmm6
0x1ca3: movaps xmmword ptr [rsp+0xc0],xmm7
0x1cab: mov rax,qword ptr fs:0x28
0x1cb4: mov qword ptr [rsp+0x18],rax
0x1cb9: xor eax,eax
0x1cbb: lea rdx,[rip+0x321f]
0x1cc2: lea rax,[rip+0x2c9a]
0x1cc9: test r9b,r9b
0x1ccc: lea rcx,[rip+0x204eed]
0x1cd3: cmove rdx,rax
0x1cd7: xor r8d,r8d
0x1cda: mov ebx,dword ptr [rip+0x2053c0]
0x1ce0: mov dword ptr [rip+0x2053b6],0x1
0x1cea: call 0x1300
0x1cea: jump address is 0x1300
0x1300: jmp qword ptr [rip+0x205bea]
Execute the function: getopt_long

0x1300: the return address is 0x1cef
0x1cef: cmp eax,0xffffffff
0x1cf2: je 0x1d58
0x1cf2: jump address is 0x1d58
0x1cf4: cmp eax,0x68
0x1cf7: je 0x1d80
0x1cf7: jump address is 0x1d80
0x1cfd: cmp eax,0x76
0x1d00: jne 0x1d50
0x1d00: jump address is 0x1d50
0x1d02: lea rax,[rsp+0x108]
0x1d0a: mov rdi,qword ptr [rip+0x205377]
0x1d11: mov r8,rsp
0x1d14: mov rcx,r14
0x1d17: mov rdx,r13
0x1d1a: mov rsi,r12
0x1d1d: mov qword ptr [rsp+0x8],rax
0x1d22: lea rax,[rsp+0x20]
0x1d27: mov dword ptr [rsp],0x30
0x1d2e: mov dword ptr [rsp+0x4],0x30
0x1d36: mov qword ptr [rsp+0x10],rax
0x1d3b: call 0x3f00
0x1d3b: jump address is 0x3f00
0x3f00: sub rsp,0x68
0x3f04: mov r10,r8
0x3f07: xor r9d,r9d
0x3f0a: mov rax,qword ptr fs:0x28
0x3f13: mov qword ptr [rsp+0x58],rax
0x3f18: xor eax,eax
0x3f1a: mov r8,rsp
0x3f1d: nop dword ptr [rax]
0x3f20: mov eax,dword ptr [r10]
0x3f23: cmp eax,0x2f
0x3f26: ja 0x3f6a
0x3f26: jump address is 0x3f6a
0x3f28: mov r11d,eax
0x3f2b: add r11,qword ptr [r10+0x10]
0x3f2f: add eax,0x8
0x3f32: mov dword ptr [r10],eax
0x3f35: mov rax,qword ptr [r11]
0x3f38: test rax,rax
0x3f3b: mov qword ptr [r8+r9*8],rax
0x3f3f: je 0x3f4b
0x3f3f: jump address is 0x3f4b
0x3f41: add r9,0x1
0x3f45: cmp r9,0xa
0x3f49: jne 0x3f20
0x3f49: jump address is 0x3f20
0x3f4b: call 0x3ac0
0x3f4b: jump address is 0x3ac0
0x3ac0: push r15
0x3ac2: push r14
0x3ac4: push r13
0x3ac6: push r12
0x3ac8: mov r12,r9
0x3acb: push rbp
0x3acc: push rbx
0x3acd: mov rbp,rdi
0x3ad0: mov rbx,r8
0x3ad3: sub rsp,0x28
0x3ad7: test rsi,rsi
0x3ada: je 0x3bf8
0x3ada: jump address is 0x3bf8
0x3ae0: mov r8,rdx
0x3ae3: lea rdx,[rip+0x139e]
0x3aea: mov r9,rcx
0x3aed: xor eax,eax
0x3aef: mov rcx,rsi
0x3af2: mov esi,0x1
0x3af7: call 0x1470
0x3af7: jump address is 0x1470
0x1470: jmp qword ptr [rip+0x205b32]
Execute the function: __fprintf_chk

0x1470: the return address is 0x3afc
0x3afc: lea rsi,[rip+0x1398]
0x3b03: xor edi,edi
0x3b05: mov edx,0x5
0x3b0a: call 0x12c0
0x3b0a: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x3b0f
0x3b0f: lea rdx,[rip+0x16aa]
0x3b16: mov rcx,rax
0x3b19: mov r8d,0x7e3
0x3b1f: mov esi,0x1
0x3b24: mov rdi,rbp
0x3b27: xor eax,eax
0x3b29: call 0x1470
0x3b29: jump address is 0x1470
0x1470: jmp qword ptr [rip+0x205b32]
Execute the function: __fprintf_chk

0x1470: the return address is 0x3b2e
0x3b2e: lea rsi,[rip+0x13f3]
0x3b35: xor edi,edi
0x3b37: mov edx,0x5
0x3b3c: call 0x12c0
0x3b3c: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x3b41
0x3b41: mov rsi,rbp
0x3b44: mov rdi,rax
0x3b47: call 0x1360
0x3b47: jump address is 0x1360
0x1360: jmp qword ptr [rip+0x205bba]
Execute the function: fputs_unlocked

0x1360: the return address is 0x3b4c
0x3b4c: cmp r12,0x9
0x3b50: ja 0x3e90
0x3b50: jump address is 0x3e90
0x3b56: lea rdx,[rip+0x162b]
0x3b5d: movsxd rax,dword ptr [rdx+r12*4]
0x3b61: add rax,rdx
0x3b64: jmp rax
0x3b64: jump address is 0x3c78
0x3c78: mov rbx,qword ptr [rbx]
0x3c7b: lea rsi,[rip+0x121d]
0x3c82: mov edx,0x5
0x3c87: xor edi,edi
0x3c89: call 0x12c0
0x3c89: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x3c8e
0x3c8e: add rsp,0x28
0x3c92: mov rcx,rbx
0x3c95: mov rdi,rbp
0x3c98: pop rbx
0x3c99: pop rbp
0x3c9a: pop r12
0x3c9c: pop r13
0x3c9e: pop r14
0x3ca0: pop r15
0x3ca2: mov rdx,rax
0x3ca5: mov esi,0x1
0x3caa: xor eax,eax
0x3cac: jmp 0x1470
0x3cac: jump address is 0x1470
0x1470: jmp qword ptr [rip+0x205b32]
Execute the function: __fprintf_chk

0x1470: the return address is 0x3f50
0x3f50: mov rax,qword ptr [rsp+0x58]
0x3f55: xor rax,qword ptr fs:0x28
0x3f5e: jne 0x3f65
0x3f5e: jump address is 0x3f65
0x3f60: add rsp,0x68
0x3f64: ret
0x3f64: the return address is 0x1d40
0x1d40: xor edi,edi
0x1d42: call 0x1450
0x1d42: jump address is 0x1450
0x1450: jmp qword ptr [rip+0x205b42]
Execute the function: exit

0x3f65: call 0x12f0
0x3f65: jump address is 0x12f0
0x12f0: jmp qword ptr [rip+0x205bf2]
Execute the function: __stack_chk_fail

0x3e90: mov r10,qword ptr [rbx+0x40]
0x3e94: mov r9,qword ptr [rbx+0x38]
0x3e98: mov edx,0x5
0x3e9d: mov rax,qword ptr [rbx+0x10]
0x3ea1: mov r8,qword ptr [rbx+0x8]
0x3ea5: lea rsi,[rip+0x1254]
0x3eac: mov r13,qword ptr [rbx+0x30]
0x3eb0: mov r12,qword ptr [rbx+0x28]
0x3eb4: mov r15,qword ptr [rbx+0x20]
0x3eb8: mov r14,qword ptr [rbx+0x18]
0x3ebc: mov qword ptr [rsp+0x18],r10
0x3ec1: mov qword ptr [rsp+0x10],r9
0x3ec6: mov qword ptr [rsp],rax
0x3eca: mov qword ptr [rsp+0x8],r8
0x3ecf: mov rbx,qword ptr [rbx]
0x3ed2: jmp 0x3c62
0x3ed2: jump address is 0x3c62
0x3c62: xor edi,edi
0x3c64: call 0x12c0
0x3c64: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x3c69
0x3c69: mov r10,qword ptr [rsp+0x18]
0x3c6e: push r10
0x3c70: jmp 0x3bb4
0x3c70: jump address is 0x3bb4
0x3bb4: mov r9,qword ptr [rsp+0x18]
0x3bb9: mov rdx,rax
0x3bbc: mov rcx,rbx
0x3bbf: mov esi,0x1
0x3bc4: mov rdi,rbp
0x3bc7: xor eax,eax
0x3bc9: push r9
0x3bcb: push r13
0x3bcd: push r12
0x3bcf: push r15
0x3bd1: push r14
0x3bd3: mov r9,qword ptr [rsp+0x30]
0x3bd8: mov r8,qword ptr [rsp+0x38]
0x3bdd: call 0x1470
0x3bdd: jump address is 0x1470
0x1470: jmp qword ptr [rip+0x205b32]
Execute the function: __fprintf_chk

0x1470: the return address is 0x3be2
0x3be2: add rsp,0x30
0x3be6: add rsp,0x28
0x3bea: pop rbx
0x3beb: pop rbp
0x3bec: pop r12
0x3bee: pop r13
0x3bf0: pop r14
0x3bf2: pop r15
0x3bf4: ret
0x3bf4: the return address is 0x3f50
Block exists: mov rax,qword ptr [rsp+0x58] at address 0x3f50 is visited for 1 times

0x3bf8: mov r8,rcx
0x3bfb: mov rcx,rdx
0x3bfe: lea rdx,[rip+0x128f]
0x3c05: mov esi,0x1
0x3c0a: xor eax,eax
0x3c0c: call 0x1470
0x3c0c: jump address is 0x1470
0x1470: jmp qword ptr [rip+0x205b32]
Execute the function: __fprintf_chk

0x1470: the return address is 0x3c11
0x3c11: jmp 0x3afc
0x3c11: jump address is 0x3afc
Block exists: lea rsi,[rip+0x1398] at address 0x3afc is visited for 1 times

0x3f20: mov eax,dword ptr [r10]
0x3f23: cmp eax,0x2f
0x3f26: ja 0x3f6a
0x3f26: jump address is 0x3f6a
0x3f28: mov r11d,eax
0x3f2b: add r11,qword ptr [r10+0x10]
0x3f2f: add eax,0x8
0x3f32: mov dword ptr [r10],eax
0x3f35: mov rax,qword ptr [r11]
0x3f38: test rax,rax
0x3f3b: mov qword ptr [r8+r9*8],rax
0x3f3f: je 0x3f4b
0x3f3f: jump address is 0x3f4b
0x3f41: add r9,0x1
0x3f45: cmp r9,0xa
0x3f49: jne 0x3f20
0x3f49: jump address is 0x3f20
0x3f4b: call 0x3ac0
0x3f4b: jump address is 0x3ac0
0x3ac0: push r15
0x3ac2: push r14
0x3ac4: push r13
0x3ac6: push r12
0x3ac8: mov r12,r9
0x3acb: push rbp
0x3acc: push rbx
0x3acd: mov rbp,rdi
0x3ad0: mov rbx,r8
0x3ad3: sub rsp,0x28
0x3ad7: test rsi,rsi
0x3ada: je 0x3bf8
0x3ada: jump address is 0x3bf8
0x3ae0: mov r8,rdx
0x3ae3: lea rdx,[rip+0x139e]
0x3aea: mov r9,rcx
0x3aed: xor eax,eax
0x3aef: mov rcx,rsi
0x3af2: mov esi,0x1
0x3af7: call 0x1470
0x3af7: jump address is 0x1470
0x1470: jmp qword ptr [rip+0x205b32]
Execute the function: __fprintf_chk

0x1470: the return address is 0x3afc
0x3afc: lea rsi,[rip+0x1398]
0x3b03: xor edi,edi
0x3b05: mov edx,0x5
0x3b0a: call 0x12c0
0x3b0a: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x3b0f
0x3b0f: lea rdx,[rip+0x16aa]
0x3b16: mov rcx,rax
0x3b19: mov r8d,0x7e3
0x3b1f: mov esi,0x1
0x3b24: mov rdi,rbp
0x3b27: xor eax,eax
0x3b29: call 0x1470
0x3b29: jump address is 0x1470
0x1470: jmp qword ptr [rip+0x205b32]
Execute the function: __fprintf_chk

0x1470: the return address is 0x3b2e
0x3b2e: lea rsi,[rip+0x13f3]
0x3b35: xor edi,edi
0x3b37: mov edx,0x5
0x3b3c: call 0x12c0
0x3b3c: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x3b41
0x3b41: mov rsi,rbp
0x3b44: mov rdi,rax
0x3b47: call 0x1360
0x3b47: jump address is 0x1360
0x1360: jmp qword ptr [rip+0x205bba]
Execute the function: fputs_unlocked

0x1360: the return address is 0x3b4c
0x3b4c: cmp r12,0x9
0x3b50: ja 0x3e90
0x3b50: jump address is 0x3e90
0x3b56: lea rdx,[rip+0x162b]
0x3b5d: movsxd rax,dword ptr [rdx+r12*4]
0x3b61: add rax,rdx
0x3b64: jmp rax
trace back
0x3b64: jmp rax
0x3b61: add rax,rdx
0x3b5d: movsxd rax,dword ptr [rdx+r12*4]
0x3b56: lea rdx,[rip+0x162b]
0x3b50: ja 0x3e90
0x3b4c: cmp r12,0x9
0x3b64: jump addresses resolved using jump table [0x3be6, 0x3c78, 0x3cb8, 0x3d00, 0x3d50, 0x3da8, 0x3dd8, 0x3e40, 0x3b70, 0x3c20]
0x3b64: jmp rax
0x3b64: jump address is 0x3c20
0x3c20: mov r10,qword ptr [rbx+0x40]
0x3c24: mov r9,qword ptr [rbx+0x38]
0x3c28: lea rsi,[rip+0x1499]
0x3c2f: mov rax,qword ptr [rbx+0x10]
0x3c33: mov r8,qword ptr [rbx+0x8]
0x3c37: mov edx,0x5
0x3c3c: mov r13,qword ptr [rbx+0x30]
0x3c40: mov r12,qword ptr [rbx+0x28]
0x3c44: mov r15,qword ptr [rbx+0x20]
0x3c48: mov r14,qword ptr [rbx+0x18]
0x3c4c: mov rbx,qword ptr [rbx]
0x3c4f: mov qword ptr [rsp+0x18],r10
0x3c54: mov qword ptr [rsp+0x10],r9
0x3c59: mov qword ptr [rsp],rax
0x3c5d: mov qword ptr [rsp+0x8],r8
0x3c62: xor edi,edi
0x3c64: call 0x12c0
0x3c64: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x3c69
0x3c69: mov r10,qword ptr [rsp+0x18]
0x3c6e: push r10
0x3c70: jmp 0x3bb4
0x3c70: jump address is 0x3bb4
0x3bb4: mov r9,qword ptr [rsp+0x18]
0x3bb9: mov rdx,rax
0x3bbc: mov rcx,rbx
0x3bbf: mov esi,0x1
0x3bc4: mov rdi,rbp
0x3bc7: xor eax,eax
0x3bc9: push r9
0x3bcb: push r13
0x3bcd: push r12
0x3bcf: push r15
0x3bd1: push r14
0x3bd3: mov r9,qword ptr [rsp+0x30]
0x3bd8: mov r8,qword ptr [rsp+0x38]
0x3bdd: call 0x1470
0x3bdd: jump address is 0x1470
0x1470: jmp qword ptr [rip+0x205b32]
Execute the function: __fprintf_chk

0x1470: the return address is 0x3be2
0x3be2: add rsp,0x30
0x3be6: add rsp,0x28
0x3bea: pop rbx
0x3beb: pop rbp
0x3bec: pop r12
0x3bee: pop r13
0x3bf0: pop r14
0x3bf2: pop r15
0x3bf4: ret
0x3bf4: the return address is bk
0x3b64: jmp rax
0x3b64: jump address is 0x3b70
0x3b70: mov r9,qword ptr [rbx+0x38]
0x3b74: mov rax,qword ptr [rbx+0x10]
0x3b78: lea rsi,[rip+0x1519]
0x3b7f: mov r8,qword ptr [rbx+0x8]
0x3b83: mov edx,0x5
0x3b88: xor edi,edi
0x3b8a: mov r13,qword ptr [rbx+0x30]
0x3b8e: mov r12,qword ptr [rbx+0x28]
0x3b92: mov qword ptr [rsp+0x10],r9
0x3b97: mov r15,qword ptr [rbx+0x20]
0x3b9b: mov r14,qword ptr [rbx+0x18]
0x3b9f: mov qword ptr [rsp],rax
0x3ba3: mov qword ptr [rsp+0x8],r8
0x3ba8: mov rbx,qword ptr [rbx]
0x3bab: call 0x12c0
0x3bab: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x3bb0
0x3bb0: sub rsp,0x8
0x3bb4: mov r9,qword ptr [rsp+0x18]
0x3bb9: mov rdx,rax
0x3bbc: mov rcx,rbx
0x3bbf: mov esi,0x1
0x3bc4: mov rdi,rbp
0x3bc7: xor eax,eax
0x3bc9: push r9
0x3bcb: push r13
0x3bcd: push r12
0x3bcf: push r15
0x3bd1: push r14
0x3bd3: mov r9,qword ptr [rsp+0x30]
0x3bd8: mov r8,qword ptr [rsp+0x38]
0x3bdd: call 0x1470
0x3bdd: jump address is 0x1470
0x1470: jmp qword ptr [rip+0x205b32]
Execute the function: __fprintf_chk

0x1470: the return address is 0x3be2
Block exists: add rsp,0x30 at address 0x3be2 is visited for 2 times

0x3b64: jmp rax
0x3b64: jump address is 0x3e40
0x3e40: mov r9,qword ptr [rbx+0x10]
0x3e44: mov r13,qword ptr [rbx+0x30]
0x3e48: lea rsi,[rip+0x1219]
0x3e4f: mov r12,qword ptr [rbx+0x28]
0x3e53: mov r15,qword ptr [rbx+0x20]
0x3e57: mov edx,0x5
0x3e5c: mov r14,qword ptr [rbx+0x18]
0x3e60: mov r8,qword ptr [rbx+0x8]
0x3e64: xor edi,edi
0x3e66: mov qword ptr [rsp+0x8],r9
0x3e6b: mov rbx,qword ptr [rbx]
0x3e6e: mov qword ptr [rsp],r8
0x3e72: call 0x12c0
0x3e72: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x3e77
0x3e77: push r13
0x3e79: push r12
0x3e7b: push r15
0x3e7d: push r14
0x3e7f: mov r9,qword ptr [rsp+0x28]
0x3e84: jmp 0x3e13
0x3e84: jump address is 0x3e13
0x3e13: mov r8,qword ptr [rsp+0x20]
0x3e18: mov rcx,rbx
0x3e1b: mov rdx,rax
0x3e1e: mov rdi,rbp
0x3e21: mov esi,0x1
0x3e26: xor eax,eax
0x3e28: call 0x1470
0x3e28: jump address is 0x1470
0x1470: jmp qword ptr [rip+0x205b32]
Execute the function: __fprintf_chk

0x1470: the return address is 0x3e2d
0x3e2d: add rsp,0x20
0x3e31: add rsp,0x28
0x3e35: pop rbx
0x3e36: pop rbp
0x3e37: pop r12
0x3e39: pop r13
0x3e3b: pop r14
0x3e3d: pop r15
0x3e3f: ret
0x3e3f: the return address is bk
0x3b64: jmp rax
0x3b64: jump address is 0x3dd8
0x3dd8: mov r8,qword ptr [rbx+0x8]
0x3ddc: mov r12,qword ptr [rbx+0x28]
0x3de0: lea rsi,[rip+0x1259]
0x3de7: mov r15,qword ptr [rbx+0x20]
0x3deb: mov r14,qword ptr [rbx+0x18]
0x3def: mov edx,0x5
0x3df4: mov r13,qword ptr [rbx+0x10]
0x3df8: xor edi,edi
0x3dfa: mov rbx,qword ptr [rbx]
0x3dfd: mov qword ptr [rsp],r8
0x3e01: call 0x12c0
0x3e01: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x3e06
0x3e06: sub rsp,0x8
0x3e0a: mov r9,r13
0x3e0d: push r12
0x3e0f: push r15
0x3e11: push r14
0x3e13: mov r8,qword ptr [rsp+0x20]
0x3e18: mov rcx,rbx
0x3e1b: mov rdx,rax
0x3e1e: mov rdi,rbp
0x3e21: mov esi,0x1
0x3e26: xor eax,eax
0x3e28: call 0x1470
0x3e28: jump address is 0x1470
0x1470: jmp qword ptr [rip+0x205b32]
Execute the function: __fprintf_chk

0x1470: the return address is 0x3e2d
Block exists: add rsp,0x20 at address 0x3e2d is visited for 1 times

0x3b64: jmp rax
0x3b64: jump address is 0x3da8
0x3da8: mov r15,qword ptr [rbx+0x20]
0x3dac: lea rsi,[rip+0x1265]
0x3db3: mov edx,0x5
0x3db8: xor edi,edi
0x3dba: mov r14,qword ptr [rbx+0x18]
0x3dbe: mov r13,qword ptr [rbx+0x10]
0x3dc2: mov r12,qword ptr [rbx+0x8]
0x3dc6: mov rbx,qword ptr [rbx]
0x3dc9: call 0x12c0
0x3dc9: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x3dce
0x3dce: push r15
0x3dd0: jmp 0x3d76
0x3dd0: jump address is 0x3d76
0x3d76: push r14
0x3d78: mov rdx,rax
0x3d7b: mov r9,r13
0x3d7e: mov r8,r12
0x3d81: mov rcx,rbx
0x3d84: mov rdi,rbp
0x3d87: mov esi,0x1
0x3d8c: xor eax,eax
0x3d8e: call 0x1470
0x3d8e: jump address is 0x1470
0x1470: jmp qword ptr [rip+0x205b32]
Execute the function: __fprintf_chk

0x1470: the return address is 0x3d93
0x3d93: pop rax
0x3d94: pop rdx
0x3d95: add rsp,0x28
0x3d99: pop rbx
0x3d9a: pop rbp
0x3d9b: pop r12
0x3d9d: pop r13
0x3d9f: pop r14
0x3da1: pop r15
0x3da3: ret
0x3da3: the return address is bk
0x3b64: jmp rax
0x3b64: jump address is 0x3d50
0x3d50: lea rsi,[rip+0x12a1]
0x3d57: mov edx,0x5
0x3d5c: xor edi,edi
0x3d5e: mov r14,qword ptr [rbx+0x18]
0x3d62: mov r13,qword ptr [rbx+0x10]
0x3d66: mov r12,qword ptr [rbx+0x8]
0x3d6a: mov rbx,qword ptr [rbx]
0x3d6d: call 0x12c0
0x3d6d: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x3d72
0x3d72: sub rsp,0x8
0x3d76: push r14
0x3d78: mov rdx,rax
0x3d7b: mov r9,r13
0x3d7e: mov r8,r12
0x3d81: mov rcx,rbx
0x3d84: mov rdi,rbp
0x3d87: mov esi,0x1
0x3d8c: xor eax,eax
0x3d8e: call 0x1470
0x3d8e: jump address is 0x1470
0x1470: jmp qword ptr [rip+0x205b32]
Execute the function: __fprintf_chk

0x1470: the return address is 0x3d93
Block exists: pop rax at address 0x3d93 is visited for 1 times

0x3b64: jmp rax
0x3b64: jump address is 0x3d00
0x3d00: mov r13,qword ptr [rbx+0x10]
0x3d04: mov r12,qword ptr [rbx+0x8]
0x3d08: lea rsi,[rip+0x11b7]
0x3d0f: mov rbx,qword ptr [rbx]
0x3d12: mov edx,0x5
0x3d17: xor edi,edi
0x3d19: call 0x12c0
0x3d19: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x3d1e
0x3d1e: add rsp,0x28
0x3d22: mov r9,r13
0x3d25: mov r8,r12
0x3d28: mov rcx,rbx
0x3d2b: mov rdi,rbp
0x3d2e: mov rdx,rax
0x3d31: pop rbx
0x3d32: pop rbp
0x3d33: pop r12
0x3d35: pop r13
0x3d37: pop r14
0x3d39: pop r15
0x3d3b: mov esi,0x1
0x3d40: xor eax,eax
0x3d42: jmp 0x1470
0x3d42: jump address is 0x1470
0x1470: jmp qword ptr [rip+0x205b32]
Execute the function: __fprintf_chk

0x1470: the return address is bk
0x3b64: jmp rax
0x3b64: jump address is 0x3cb8
0x3cb8: mov r12,qword ptr [rbx+0x8]
0x3cbc: lea rsi,[rip+0x11ec]
0x3cc3: mov rbx,qword ptr [rbx]
0x3cc6: mov edx,0x5
0x3ccb: xor edi,edi
0x3ccd: call 0x12c0
0x3ccd: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x3cd2
0x3cd2: add rsp,0x28
0x3cd6: mov r8,r12
0x3cd9: mov rcx,rbx
0x3cdc: mov rdi,rbp
0x3cdf: mov rdx,rax
0x3ce2: mov esi,0x1
0x3ce7: pop rbx
0x3ce8: pop rbp
0x3ce9: pop r12
0x3ceb: pop r13
0x3ced: pop r14
0x3cef: pop r15
0x3cf1: xor eax,eax
0x3cf3: jmp 0x1470
0x3cf3: jump address is 0x1470
0x1470: jmp qword ptr [rip+0x205b32]
Execute the function: __fprintf_chk

0x1470: the return address is bk
0x3b64: jmp rax
0x3b64: jump address is 0x3c78
0x3c78: mov rbx,qword ptr [rbx]
0x3c7b: lea rsi,[rip+0x121d]
0x3c82: mov edx,0x5
0x3c87: xor edi,edi
0x3c89: call 0x12c0
0x3c89: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x3c8e
0x3c8e: add rsp,0x28
0x3c92: mov rcx,rbx
0x3c95: mov rdi,rbp
0x3c98: pop rbx
0x3c99: pop rbp
0x3c9a: pop r12
0x3c9c: pop r13
0x3c9e: pop r14
0x3ca0: pop r15
0x3ca2: mov rdx,rax
0x3ca5: mov esi,0x1
0x3caa: xor eax,eax
0x3cac: jmp 0x1470
0x3cac: jump address is 0x1470
0x1470: jmp qword ptr [rip+0x205b32]
Execute the function: __fprintf_chk

0x1470: the return address is bk
0x3b64: jmp rax
0x3b64: jump address is 0x3be6
Block exists: add rsp,0x28 at address 0x3be6 is visited for 1 times

0x3e90: mov r10,qword ptr [rbx+0x40]
0x3e94: mov r9,qword ptr [rbx+0x38]
0x3e98: mov edx,0x5
0x3e9d: mov rax,qword ptr [rbx+0x10]
0x3ea1: mov r8,qword ptr [rbx+0x8]
0x3ea5: lea rsi,[rip+0x1254]
0x3eac: mov r13,qword ptr [rbx+0x30]
0x3eb0: mov r12,qword ptr [rbx+0x28]
0x3eb4: mov r15,qword ptr [rbx+0x20]
0x3eb8: mov r14,qword ptr [rbx+0x18]
0x3ebc: mov qword ptr [rsp+0x18],r10
0x3ec1: mov qword ptr [rsp+0x10],r9
0x3ec6: mov qword ptr [rsp],rax
0x3eca: mov qword ptr [rsp+0x8],r8
0x3ecf: mov rbx,qword ptr [rbx]
0x3ed2: jmp 0x3c62
0x3ed2: jump address is 0x3c62
0x3c62: xor edi,edi
0x3c64: call 0x12c0
0x3c64: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x3c69
Block exists: mov r10,qword ptr [rsp+0x18] at address 0x3c69 is visited for 2 times

0x3bf8: mov r8,rcx
0x3bfb: mov rcx,rdx
0x3bfe: lea rdx,[rip+0x128f]
0x3c05: mov esi,0x1
0x3c0a: xor eax,eax
0x3c0c: call 0x1470
0x3c0c: jump address is 0x1470
0x1470: jmp qword ptr [rip+0x205b32]
Execute the function: __fprintf_chk

0x1470: the return address is 0x3c11
0x3c11: jmp 0x3afc
0x3c11: jump address is 0x3afc
Block exists: lea rsi,[rip+0x1398] at address 0x3afc is visited for 2 times

0x3f20: mov eax,dword ptr [r10]
0x3f23: cmp eax,0x2f
0x3f26: ja 0x3f6a
0x3f26: jump address is 0x3f6a
0x3f28: mov r11d,eax
0x3f2b: add r11,qword ptr [r10+0x10]
0x3f2f: add eax,0x8
0x3f32: mov dword ptr [r10],eax
0x3f35: mov rax,qword ptr [r11]
0x3f38: test rax,rax
0x3f3b: mov qword ptr [r8+r9*8],rax
0x3f3f: je 0x3f4b
0x3f3f: jump address is 0x3f4b
Block exists: add r9,0x1 at address 0x3f41 is visited for 2 times

0x3f4b: call 0x3ac0
0x3f4b: jump address is 0x3ac0
Execute the function: version_etc_arn

0x3f4b: the return address is 0x3f50
0x3f50: mov rax,qword ptr [rsp+0x58]
0x3f55: xor rax,qword ptr fs:0x28
0x3f5e: jne 0x3f65
0x3f5e: jump address is 0x3f65
0x3f60: add rsp,0x68
0x3f64: ret
0x3f64: the return address is hi
0x3f65: call 0x12f0
0x3f65: jump address is 0x12f0
0x12f0: jmp qword ptr [rip+0x205bf2]
Execute the function: __stack_chk_fail

0x3f6a: mov r11,qword ptr [r10+0x8]
0x3f6e: lea rax,[r11+0x8]
0x3f72: mov qword ptr [r10+0x8],rax
0x3f76: jmp 0x3f35
0x3f76: jump address is 0x3f35
Block exists: mov rax,qword ptr [r11] at address 0x3f35 is visited for 1 times

0x3f4b: call 0x3ac0
0x3f4b: jump address is 0x3ac0
Execute the function: version_etc_arn

0x3f4b: the return address is 0x3f50
Block exists: mov rax,qword ptr [rsp+0x58] at address 0x3f50 is visited for 2 times

0x3f6a: mov r11,qword ptr [r10+0x8]
0x3f6e: lea rax,[r11+0x8]
0x3f72: mov qword ptr [r10+0x8],rax
0x3f76: jmp 0x3f35
0x3f76: jump address is 0x3f35
Block exists: mov rax,qword ptr [r11] at address 0x3f35 is visited for 1 times

0x3f4b: call 0x3ac0
0x3f4b: jump address is 0x3ac0
Execute the function: version_etc_arn

0x3f4b: the return address is 0x3f50
Block exists: mov rax,qword ptr [rsp+0x58] at address 0x3f50 is visited for 2 times

0x3f6a: mov r11,qword ptr [r10+0x8]
0x3f6e: lea rax,[r11+0x8]
0x3f72: mov qword ptr [r10+0x8],rax
0x3f76: jmp 0x3f35
0x3f76: jump address is 0x3f35
Block exists: mov rax,qword ptr [r11] at address 0x3f35 is visited for 1 times

0x1d50: mov edi,dword ptr [rip+0x2052c2]
0x1d56: call rbp
0x1d56: jump address is 0x16f0
0x16f0: push r13
0x16f2: push r12
0x16f4: mov edx,0x5
0x16f9: push rbp
0x16fa: push rbx
0x16fb: mov ebp,edi
0x16fd: sub rsp,0x88
0x1704: mov rbx,qword ptr [rip+0x2059d5]
0x170b: mov rax,qword ptr fs:0x28
0x1714: mov qword ptr [rsp+0x78],rax
0x1719: xor eax,eax
0x171b: test edi,edi
0x171d: je 0x174d
0x171d: jump address is 0x174d
0x171f: lea rsi,[rip+0x30ca]
0x1726: xor edi,edi
0x1728: call 0x12c0
0x1728: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x172d
0x172d: mov rdi,qword ptr [rip+0x20598c]
0x1734: mov rdx,rax
0x1737: mov rcx,rbx
0x173a: mov esi,0x1
0x173f: xor eax,eax
0x1741: call 0x1470
0x1741: jump address is 0x1470
0x1470: jmp qword ptr [rip+0x205b32]
Execute the function: __fprintf_chk

0x1470: the return address is 0x1746
0x1746: mov edi,ebp
0x1748: call 0x1450
0x1748: jump address is 0x1450
0x1450: jmp qword ptr [rip+0x205b42]
Execute the function: exit

0x174d: lea rsi,[rip+0x2f98]
0x1754: xor edi,edi
0x1756: call 0x12c0
0x1756: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x175b
0x175b: mov rdx,rbx
0x175e: mov rsi,rax
0x1761: mov edi,0x1
0x1766: xor eax,eax
0x1768: call 0x1410
0x1768: jump address is 0x1410
0x1410: jmp qword ptr [rip+0x205b62]
Execute the function: __printf_chk

0x1410: the return address is 0x176d
0x176d: mov rbx,qword ptr [rip+0x205914]
0x1774: lea rsi,[rip+0x309d]
0x177b: mov edx,0x5
0x1780: xor edi,edi
0x1782: call 0x12c0
0x1782: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x1787
0x1787: mov rsi,rbx
0x178a: mov rdi,rax
0x178d: call 0x1360
0x178d: jump address is 0x1360
0x1360: jmp qword ptr [rip+0x205bba]
Execute the function: fputs_unlocked

0x1360: the return address is 0x1792
0x1792: mov rbx,qword ptr [rip+0x2058ef]
0x1799: lea rsi,[rip+0x30a0]
0x17a0: mov edx,0x5
0x17a5: xor edi,edi
0x17a7: call 0x12c0
0x17a7: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x17ac
0x17ac: mov rsi,rbx
0x17af: mov rdi,rax
0x17b2: call 0x1360
0x17b2: jump address is 0x1360
0x1360: jmp qword ptr [rip+0x205bba]
Execute the function: fputs_unlocked

0x1360: the return address is 0x17b7
0x17b7: mov rbx,qword ptr [rip+0x2058ca]
0x17be: lea rsi,[rip+0x30ab]
0x17c5: mov edx,0x5
0x17ca: xor edi,edi
0x17cc: call 0x12c0
0x17cc: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x17d1
0x17d1: mov rsi,rbx
0x17d4: mov rdi,rax
0x17d7: lea rbx,[rip+0x2f06]
0x17de: call 0x1360
0x17de: jump address is 0x1360
0x1360: jmp qword ptr [rip+0x205bba]
Execute the function: fputs_unlocked

0x1360: the return address is 0x17e3
0x17e3: lea rax,[rip+0x2f16]
0x17ea: lea rcx,[rip+0x2f50]
0x17f1: mov qword ptr [rsp+0x60],0x0
0x17fa: mov qword ptr [rsp+0x68],0x0
0x1803: mov rdx,rsp
0x1806: mov qword ptr [rsp],rax
0x180a: lea rax,[rip+0x2ef1]
0x1811: mov qword ptr [rsp+0x30],rcx
0x1816: lea rcx,[rip+0x2f2e]
0x181d: mov qword ptr [rsp+0x8],rax
0x1822: lea rax,[rip+0x2f51]
0x1829: mov qword ptr [rsp+0x40],rcx
0x182e: lea rcx,[rip+0x2f20]
0x1835: mov qword ptr [rsp+0x10],rax
0x183a: lea rax,[rip+0x2ed1]
0x1841: mov qword ptr [rsp+0x50],rcx
0x1846: mov qword ptr [rsp+0x18],rax
0x184b: lea rax,[rip+0x2ed6]
0x1852: mov qword ptr [rsp+0x20],rax
0x1857: lea rax,[rip+0x2ed4]
0x185e: mov qword ptr [rsp+0x28],rax
0x1863: mov qword ptr [rsp+0x38],rax
0x1868: mov qword ptr [rsp+0x48],rax
0x186d: mov qword ptr [rsp+0x58],rax
0x1872: nop word ptr [rax+rax*1+0x0]
0x1878: add rdx,0x10
0x187c: mov rdi,qword ptr [rdx]
0x187f: test rdi,rdi
0x1882: je 0x1897
0x1882: jump address is 0x1897
0x1884: mov ecx,0x8
0x1889: mov rsi,rbx
0x188c: repz cmps byte ptr ds:[rsi],byte ptr es:[rdi]
0x188e: seta al
0x1891: sbb al,0x0
0x1893: test al,al
0x1895: jne 0x1878
0x1895: jump address is 0x1878
0x1897: mov r12,qword ptr [rdx+0x8]
0x189b: xor edi,edi
0x189d: mov edx,0x5
0x18a2: lea rsi,[rip+0x2eb6]
0x18a9: test r12,r12
0x18ac: je 0x1973
0x18ac: jump address is 0x1973
0x18b2: call 0x12c0
0x18b2: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x18b7
0x18b7: lea rcx,[rip+0x2fea]
0x18be: lea rdx,[rip+0x2eb1]
0x18c5: mov rsi,rax
0x18c8: mov edi,0x1
0x18cd: xor eax,eax
0x18cf: call 0x1410
0x18cf: jump address is 0x1410
0x1410: jmp qword ptr [rip+0x205b62]
Execute the function: __printf_chk

0x1410: the return address is 0x18d4
0x18d4: xor esi,esi
0x18d6: mov edi,0x5
0x18db: call 0x1400
0x18db: jump address is 0x1400
0x1400: jmp qword ptr [rip+0x205b6a]
Execute the function: setlocale

0x1400: the return address is 0x18e0
0x18e0: test rax,rax
0x18e3: je 0x1901
0x18e3: jump address is 0x1901
0x18e5: lea rsi,[rip+0x2e98]
0x18ec: mov edx,0x3
0x18f1: mov rdi,rax
0x18f4: call 0x1250
0x18f4: jump address is 0x1250
0x1250: jmp qword ptr [rip+0x205c42]
Execute the function: strncmp

0x1250: the return address is 0x18f9
0x18f9: test eax,eax
0x18fb: jne 0x1a08
0x18fb: jump address is 0x1a08
Block exists: lea rsi,[rip+0x2e80] at address 0x1901 is visited for 1 times

0x1a08: mov r13,qword ptr [rip+0x205679]
0x1a0f: lea rsi,[rip+0x2eba]
0x1a16: xor edi,edi
0x1a18: mov edx,0x5
0x1a1d: call 0x12c0
0x1a1d: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x1a22
0x1a22: mov rsi,r13
0x1a25: mov rdi,rax
0x1a28: call 0x1360
0x1a28: jump address is 0x1360
0x1360: jmp qword ptr [rip+0x205bba]
Execute the function: fputs_unlocked

0x1360: the return address is 0x1a2d
0x1a2d: jmp 0x1901
0x1a2d: jump address is 0x1901
0x1901: lea rsi,[rip+0x2e80]
0x1908: xor edi,edi
0x190a: mov edx,0x5
0x190f: call 0x12c0
0x190f: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x1914
0x1914: lea rcx,[rip+0x2dc9]
0x191b: lea rdx,[rip+0x2f86]
0x1922: mov rsi,rax
0x1925: mov edi,0x1
0x192a: xor eax,eax
0x192c: call 0x1410
0x192c: jump address is 0x1410
0x1410: jmp qword ptr [rip+0x205b62]
Execute the function: __printf_chk

0x1410: the return address is 0x1931
0x1931: cmp r12,rbx
0x1934: lea rcx,[rip+0x2de1]
0x193b: lea rbx,[rip+0x359f]
0x1942: cmove rbx,rcx
0x1946: lea rsi,[rip+0x2fcb]
0x194d: xor edi,edi
0x194f: mov edx,0x5
0x1954: call 0x12c0
0x1954: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x1959
0x1959: mov rcx,rbx
0x195c: mov rsi,rax
0x195f: mov rdx,r12
0x1962: mov edi,0x1
0x1967: xor eax,eax
0x1969: call 0x1410
0x1969: jump address is 0x1410
0x1410: jmp qword ptr [rip+0x205b62]
Execute the function: __printf_chk

0x1410: the return address is 0x196e
0x196e: jmp 0x1746
0x196e: jump address is 0x1746
0x1746: mov edi,ebp
0x1748: call 0x1450
0x1748: jump address is 0x1450
0x1450: jmp qword ptr [rip+0x205b42]
Execute the function: exit

0x1901: lea rsi,[rip+0x2e80]
0x1908: xor edi,edi
0x190a: mov edx,0x5
0x190f: call 0x12c0
0x190f: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x1914
Block exists: lea rcx,[rip+0x2dc9] at address 0x1914 is visited for 1 times

0x1973: call 0x12c0
0x1973: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x1978
0x1978: lea rcx,[rip+0x2f29]
0x197f: lea rdx,[rip+0x2df0]
0x1986: mov rsi,rax
0x1989: mov edi,0x1
0x198e: xor eax,eax
0x1990: call 0x1410
0x1990: jump address is 0x1410
0x1410: jmp qword ptr [rip+0x205b62]
Execute the function: __printf_chk

0x1410: the return address is 0x1995
0x1995: xor esi,esi
0x1997: mov edi,0x5
0x199c: call 0x1400
0x199c: jump address is 0x1400
0x1400: jmp qword ptr [rip+0x205b6a]
Execute the function: setlocale

0x1400: the return address is 0x19a1
0x19a1: test rax,rax
0x19a4: je 0x19be
0x19a4: jump address is 0x19be
0x19a6: lea rsi,[rip+0x2dd7]
0x19ad: mov edx,0x3
0x19b2: mov rdi,rax
0x19b5: call 0x1250
0x19b5: jump address is 0x1250
0x1250: jmp qword ptr [rip+0x205c42]
Execute the function: strncmp

0x1250: the return address is 0x19ba
0x19ba: test eax,eax
0x19bc: jne 0x1a01
0x19bc: jump address is 0x1a01
Block exists: lea rsi,[rip+0x2dc3] at address 0x19be is visited for 1 times

0x1a01: lea r12,[rip+0x2cdc]
0x1a08: mov r13,qword ptr [rip+0x205679]
0x1a0f: lea rsi,[rip+0x2eba]
0x1a16: xor edi,edi
0x1a18: mov edx,0x5
0x1a1d: call 0x12c0
0x1a1d: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x1a22
0x1a22: mov rsi,r13
0x1a25: mov rdi,rax
0x1a28: call 0x1360
0x1a28: jump address is 0x1360
0x1360: jmp qword ptr [rip+0x205bba]
Execute the function: fputs_unlocked

0x1360: the return address is 0x1a2d
0x1a2d: jmp 0x1901
0x1a2d: jump address is 0x1901
0x1901: lea rsi,[rip+0x2e80]
0x1908: xor edi,edi
0x190a: mov edx,0x5
0x190f: call 0x12c0
0x190f: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x1914
0x1914: lea rcx,[rip+0x2dc9]
0x191b: lea rdx,[rip+0x2f86]
0x1922: mov rsi,rax
0x1925: mov edi,0x1
0x192a: xor eax,eax
0x192c: call 0x1410
0x192c: jump address is 0x1410
0x1410: jmp qword ptr [rip+0x205b62]
Execute the function: __printf_chk

0x1410: the return address is 0x1931
0x1931: cmp r12,rbx
0x1934: lea rcx,[rip+0x2de1]
0x193b: lea rbx,[rip+0x359f]
0x1942: cmove rbx,rcx
0x1946: lea rsi,[rip+0x2fcb]
0x194d: xor edi,edi
0x194f: mov edx,0x5
0x1954: call 0x12c0
0x1954: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x1959
0x1959: mov rcx,rbx
0x195c: mov rsi,rax
0x195f: mov rdx,r12
0x1962: mov edi,0x1
0x1967: xor eax,eax
0x1969: call 0x1410
0x1969: jump address is 0x1410
0x1410: jmp qword ptr [rip+0x205b62]
Execute the function: __printf_chk

0x1410: the return address is 0x196e
0x196e: jmp 0x1746
0x196e: jump address is 0x1746
Block exists: mov edi,ebp at address 0x1746 is visited for 2 times

0x1942: cmove rbx,rcx
0x1946: lea rsi,[rip+0x2fcb]
0x194d: xor edi,edi
0x194f: mov edx,0x5
0x1954: call 0x12c0
0x1954: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x1959
0x1959: mov rcx,rbx
0x195c: mov rsi,rax
0x195f: mov rdx,r12
0x1962: mov edi,0x1
0x1967: xor eax,eax
0x1969: call 0x1410
0x1969: jump address is 0x1410
0x1410: jmp qword ptr [rip+0x205b62]
Execute the function: __printf_chk

0x1410: the return address is 0x196e
0x196e: jmp 0x1746
0x196e: jump address is 0x1746
Block exists: mov edi,ebp at address 0x1746 is visited for 2 times

0x19be: lea rsi,[rip+0x2dc3]
0x19c5: mov edx,0x5
0x19ca: xor edi,edi
0x19cc: lea r12,[rip+0x2d11]
0x19d3: lea rbx,[rip+0x2d42]
0x19da: call 0x12c0
0x19da: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x19df
0x19df: lea rcx,[rip+0x2cfe]
0x19e6: lea rdx,[rip+0x2ebb]
0x19ed: mov rsi,rax
0x19f0: mov edi,0x1
0x19f5: xor eax,eax
0x19f7: call 0x1410
0x19f7: jump address is 0x1410
0x1410: jmp qword ptr [rip+0x205b62]
Execute the function: __printf_chk

0x1410: the return address is 0x19fc
0x19fc: jmp 0x1946
0x19fc: jump address is 0x1946
0x1946: lea rsi,[rip+0x2fcb]
0x194d: xor edi,edi
0x194f: mov edx,0x5
0x1954: call 0x12c0
0x1954: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x1959
Block exists: mov rcx,rbx at address 0x1959 is visited for 3 times

0x1878: add rdx,0x10
0x187c: mov rdi,qword ptr [rdx]
0x187f: test rdi,rdi
0x1882: je 0x1897
0x1882: jump address is 0x1897
0x1884: mov ecx,0x8
0x1889: mov rsi,rbx
0x188c: repz cmps byte ptr ds:[rsi],byte ptr es:[rdi]
0x188e: seta al
0x1891: sbb al,0x0
0x1893: test al,al
0x1895: jne 0x1878
0x1895: jump address is 0x1878
Block exists: mov r12,qword ptr [rdx+0x8] at address 0x1897 is visited for 3 times

0x1878: add rdx,0x10
0x187c: mov rdi,qword ptr [rdx]
0x187f: test rdi,rdi
0x1882: je 0x1897
0x1882: jump address is 0x1897
Block exists: mov r12,qword ptr [rdx+0x8] at address 0x1897 is visited for 3 times

Block exists: mov ecx,0x8 at address 0x1884 is visited for 2 times

0x1897: mov r12,qword ptr [rdx+0x8]
0x189b: xor edi,edi
0x189d: mov edx,0x5
0x18a2: lea rsi,[rip+0x2eb6]
0x18a9: test r12,r12
0x18ac: je 0x1973
0x18ac: jump address is 0x1973
0x18b2: call 0x12c0
0x18b2: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x18b7
0x18b7: lea rcx,[rip+0x2fea]
0x18be: lea rdx,[rip+0x2eb1]
0x18c5: mov rsi,rax
0x18c8: mov edi,0x1
0x18cd: xor eax,eax
0x18cf: call 0x1410
0x18cf: jump address is 0x1410
0x1410: jmp qword ptr [rip+0x205b62]
Execute the function: __printf_chk

0x1410: the return address is 0x18d4
0x18d4: xor esi,esi
0x18d6: mov edi,0x5
0x18db: call 0x1400
0x18db: jump address is 0x1400
0x1400: jmp qword ptr [rip+0x205b6a]
Execute the function: setlocale

0x1400: the return address is 0x18e0
0x18e0: test rax,rax
0x18e3: je 0x1901
0x18e3: jump address is 0x1901
0x18e5: lea rsi,[rip+0x2e98]
0x18ec: mov edx,0x3
0x18f1: mov rdi,rax
0x18f4: call 0x1250
0x18f4: jump address is 0x1250
0x1250: jmp qword ptr [rip+0x205c42]
Execute the function: strncmp

0x1250: the return address is 0x18f9
0x18f9: test eax,eax
0x18fb: jne 0x1a08
0x18fb: jump address is 0x1a08
Block exists: lea rsi,[rip+0x2e80] at address 0x1901 is visited for 4 times

0x1a08: mov r13,qword ptr [rip+0x205679]
0x1a0f: lea rsi,[rip+0x2eba]
0x1a16: xor edi,edi
0x1a18: mov edx,0x5
0x1a1d: call 0x12c0
0x1a1d: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x1a22
0x1a22: mov rsi,r13
0x1a25: mov rdi,rax
0x1a28: call 0x1360
0x1a28: jump address is 0x1360
0x1360: jmp qword ptr [rip+0x205bba]
Execute the function: fputs_unlocked

0x1360: the return address is 0x1a2d
0x1a2d: jmp 0x1901
0x1a2d: jump address is 0x1901
Block exists: lea rsi,[rip+0x2e80] at address 0x1901 is visited for 4 times

0x1901: lea rsi,[rip+0x2e80]
0x1908: xor edi,edi
0x190a: mov edx,0x5
0x190f: call 0x12c0
0x190f: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x1914
0x1914: lea rcx,[rip+0x2dc9]
0x191b: lea rdx,[rip+0x2f86]
0x1922: mov rsi,rax
0x1925: mov edi,0x1
0x192a: xor eax,eax
0x192c: call 0x1410
0x192c: jump address is 0x1410
0x1410: jmp qword ptr [rip+0x205b62]
Execute the function: __printf_chk

0x1410: the return address is 0x1931
0x1931: cmp r12,rbx
0x1934: lea rcx,[rip+0x2de1]
0x193b: lea rbx,[rip+0x359f]
0x1942: cmove rbx,rcx
0x1946: lea rsi,[rip+0x2fcb]
0x194d: xor edi,edi
0x194f: mov edx,0x5
0x1954: call 0x12c0
0x1954: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x1959
0x1959: mov rcx,rbx
0x195c: mov rsi,rax
0x195f: mov rdx,r12
0x1962: mov edi,0x1
0x1967: xor eax,eax
0x1969: call 0x1410
0x1969: jump address is 0x1410
0x1410: jmp qword ptr [rip+0x205b62]
Execute the function: __printf_chk

0x1410: the return address is 0x196e
0x196e: jmp 0x1746
0x196e: jump address is 0x1746
0x1746: mov edi,ebp
0x1748: call 0x1450
0x1748: jump address is 0x1450
0x1450: jmp qword ptr [rip+0x205b42]
Execute the function: exit

0x1942: cmove rbx,rcx
0x1946: lea rsi,[rip+0x2fcb]
0x194d: xor edi,edi
0x194f: mov edx,0x5
0x1954: call 0x12c0
0x1954: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x1959
Block exists: mov rcx,rbx at address 0x1959 is visited for 4 times

0x1973: call 0x12c0
0x1973: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x1978
0x1978: lea rcx,[rip+0x2f29]
0x197f: lea rdx,[rip+0x2df0]
0x1986: mov rsi,rax
0x1989: mov edi,0x1
0x198e: xor eax,eax
0x1990: call 0x1410
0x1990: jump address is 0x1410
0x1410: jmp qword ptr [rip+0x205b62]
Execute the function: __printf_chk

0x1410: the return address is 0x1995
0x1995: xor esi,esi
0x1997: mov edi,0x5
0x199c: call 0x1400
0x199c: jump address is 0x1400
0x1400: jmp qword ptr [rip+0x205b6a]
Execute the function: setlocale

0x1400: the return address is 0x19a1
0x19a1: test rax,rax
0x19a4: je 0x19be
0x19a4: jump address is 0x19be
0x19a6: lea rsi,[rip+0x2dd7]
0x19ad: mov edx,0x3
0x19b2: mov rdi,rax
0x19b5: call 0x1250
0x19b5: jump address is 0x1250
0x1250: jmp qword ptr [rip+0x205c42]
Execute the function: strncmp

0x1250: the return address is 0x19ba
0x19ba: test eax,eax
0x19bc: jne 0x1a01
0x19bc: jump address is 0x1a01
Block exists: lea rsi,[rip+0x2dc3] at address 0x19be is visited for 2 times

0x1a01: lea r12,[rip+0x2cdc]
0x1a08: mov r13,qword ptr [rip+0x205679]
0x1a0f: lea rsi,[rip+0x2eba]
0x1a16: xor edi,edi
0x1a18: mov edx,0x5
0x1a1d: call 0x12c0
0x1a1d: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x1a22
Block exists: mov rsi,r13 at address 0x1a22 is visited for 3 times

0x19be: lea rsi,[rip+0x2dc3]
0x19c5: mov edx,0x5
0x19ca: xor edi,edi
0x19cc: lea r12,[rip+0x2d11]
0x19d3: lea rbx,[rip+0x2d42]
0x19da: call 0x12c0
0x19da: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x19df
0x19df: lea rcx,[rip+0x2cfe]
0x19e6: lea rdx,[rip+0x2ebb]
0x19ed: mov rsi,rax
0x19f0: mov edi,0x1
0x19f5: xor eax,eax
0x19f7: call 0x1410
0x19f7: jump address is 0x1410
0x1410: jmp qword ptr [rip+0x205b62]
Execute the function: __printf_chk

0x1410: the return address is 0x19fc
0x19fc: jmp 0x1946
0x19fc: jump address is 0x1946
0x1946: lea rsi,[rip+0x2fcb]
0x194d: xor edi,edi
0x194f: mov edx,0x5
0x1954: call 0x12c0
0x1954: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x1959
Block exists: mov rcx,rbx at address 0x1959 is visited for 4 times

0x1897: mov r12,qword ptr [rdx+0x8]
0x189b: xor edi,edi
0x189d: mov edx,0x5
0x18a2: lea rsi,[rip+0x2eb6]
0x18a9: test r12,r12
0x18ac: je 0x1973
0x18ac: jump address is 0x1973
0x18b2: call 0x12c0
0x18b2: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x18b7
Block exists: lea rcx,[rip+0x2fea] at address 0x18b7 is visited for 2 times

0x1973: call 0x12c0
0x1973: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x1978
Block exists: lea rcx,[rip+0x2f29] at address 0x1978 is visited for 2 times

0x1d80: xor edi,edi
0x1d82: call rbp
0x1d82: jump address is 0x16f0
0x16f0: push r13
0x16f2: push r12
0x16f4: mov edx,0x5
0x16f9: push rbp
0x16fa: push rbx
0x16fb: mov ebp,edi
0x16fd: sub rsp,0x88
0x1704: mov rbx,qword ptr [rip+0x2059d5]
0x170b: mov rax,qword ptr fs:0x28
0x1714: mov qword ptr [rsp+0x78],rax
0x1719: xor eax,eax
0x171b: test edi,edi
0x171d: je 0x174d
0x171d: jump address is 0x174d
0x171f: lea rsi,[rip+0x30ca]
0x1726: xor edi,edi
0x1728: call 0x12c0
0x1728: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x172d
0x172d: mov rdi,qword ptr [rip+0x20598c]
0x1734: mov rdx,rax
0x1737: mov rcx,rbx
0x173a: mov esi,0x1
0x173f: xor eax,eax
0x1741: call 0x1470
0x1741: jump address is 0x1470
0x1470: jmp qword ptr [rip+0x205b32]
Execute the function: __fprintf_chk

0x1470: the return address is 0x1746
Block exists: mov edi,ebp at address 0x1746 is visited for 3 times

0x174d: lea rsi,[rip+0x2f98]
0x1754: xor edi,edi
0x1756: call 0x12c0
0x1756: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x175b
0x175b: mov rdx,rbx
0x175e: mov rsi,rax
0x1761: mov edi,0x1
0x1766: xor eax,eax
0x1768: call 0x1410
0x1768: jump address is 0x1410
0x1410: jmp qword ptr [rip+0x205b62]
Execute the function: __printf_chk

0x1410: the return address is 0x176d
0x176d: mov rbx,qword ptr [rip+0x205914]
0x1774: lea rsi,[rip+0x309d]
0x177b: mov edx,0x5
0x1780: xor edi,edi
0x1782: call 0x12c0
0x1782: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x1787
0x1787: mov rsi,rbx
0x178a: mov rdi,rax
0x178d: call 0x1360
0x178d: jump address is 0x1360
0x1360: jmp qword ptr [rip+0x205bba]
Execute the function: fputs_unlocked

0x1360: the return address is 0x1792
0x1792: mov rbx,qword ptr [rip+0x2058ef]
0x1799: lea rsi,[rip+0x30a0]
0x17a0: mov edx,0x5
0x17a5: xor edi,edi
0x17a7: call 0x12c0
0x17a7: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x17ac
0x17ac: mov rsi,rbx
0x17af: mov rdi,rax
0x17b2: call 0x1360
0x17b2: jump address is 0x1360
0x1360: jmp qword ptr [rip+0x205bba]
Execute the function: fputs_unlocked

0x1360: the return address is 0x17b7
0x17b7: mov rbx,qword ptr [rip+0x2058ca]
0x17be: lea rsi,[rip+0x30ab]
0x17c5: mov edx,0x5
0x17ca: xor edi,edi
0x17cc: call 0x12c0
0x17cc: jump address is 0x12c0
0x12c0: jmp qword ptr [rip+0x205c0a]
Execute the function: dcgettext

0x12c0: the return address is 0x17d1
0x17d1: mov rsi,rbx
0x17d4: mov rdi,rax
0x17d7: lea rbx,[rip+0x2f06]
0x17de: call 0x1360
0x17de: jump address is 0x1360
0x1360: jmp qword ptr [rip+0x205bba]
Execute the function: fputs_unlocked

0x1360: the return address is 0x17e3
0x17e3: lea rax,[rip+0x2f16]
0x17ea: lea rcx,[rip+0x2f50]
0x17f1: mov qword ptr [rsp+0x60],0x0
0x17fa: mov qword ptr [rsp+0x68],0x0
0x1803: mov rdx,rsp
0x1806: mov qword ptr [rsp],rax
0x180a: lea rax,[rip+0x2ef1]
0x1811: mov qword ptr [rsp+0x30],rcx
0x1816: lea rcx,[rip+0x2f2e]
0x181d: mov qword ptr [rsp+0x8],rax
0x1822: lea rax,[rip+0x2f51]
0x1829: mov qword ptr [rsp+0x40],rcx
0x182e: lea rcx,[rip+0x2f20]
0x1835: mov qword ptr [rsp+0x10],rax
0x183a: lea rax,[rip+0x2ed1]
0x1841: mov qword ptr [rsp+0x50],rcx
0x1846: mov qword ptr [rsp+0x18],rax
0x184b: lea rax,[rip+0x2ed6]
0x1852: mov qword ptr [rsp+0x20],rax
0x1857: lea rax,[rip+0x2ed4]
0x185e: mov qword ptr [rsp+0x28],rax
0x1863: mov qword ptr [rsp+0x38],rax
0x1868: mov qword ptr [rsp+0x48],rax
0x186d: mov qword ptr [rsp+0x58],rax
0x1872: nop word ptr [rax+rax*1+0x0]
0x1878: add rdx,0x10
0x187c: mov rdi,qword ptr [rdx]
0x187f: test rdi,rdi
0x1882: je 0x1897
0x1882: jump address is 0x1897
Block exists: mov r12,qword ptr [rdx+0x8] at address 0x1897 is visited for 3 times

Block exists: mov ecx,0x8 at address 0x1884 is visited for 2 times

0x1d58: mov rax,qword ptr [rsp+0x18]
0x1d5d: xor rax,qword ptr fs:0x28
0x1d66: mov dword ptr [rip+0x205334],ebx
0x1d6c: jne 0x1d86
0x1d6c: jump address is 0x1d86
0x1d6e: add rsp,0xd0
0x1d75: pop rbx
0x1d76: pop rbp
0x1d77: pop r12
0x1d79: pop r13
0x1d7b: pop r14
0x1d7d: ret
0x1d7d: the return address is ld
0x1d86: call 0x12f0
0x1d86: jump address is 0x12f0
0x12f0: jmp qword ptr [rip+0x205bf2]
Execute the function: __stack_chk_fail

0x1cab: mov rax,qword ptr fs:0x28
0x1cb4: mov qword ptr [rsp+0x18],rax
0x1cb9: xor eax,eax
0x1cbb: lea rdx,[rip+0x321f]
0x1cc2: lea rax,[rip+0x2c9a]
0x1cc9: test r9b,r9b
0x1ccc: lea rcx,[rip+0x204eed]
0x1cd3: cmove rdx,rax
0x1cd7: xor r8d,r8d
0x1cda: mov ebx,dword ptr [rip+0x2053c0]
0x1ce0: mov dword ptr [rip+0x2053b6],0x1
0x1cea: call 0x1300
0x1cea: jump address is 0x1300
0x1300: jmp qword ptr [rip+0x205bea]
Execute the function: getopt_long

0x1300: the return address is 0x1cef
Block exists: cmp eax,0xffffffff at address 0x1cef is visited for 1 times

0x1dfd: mov qword ptr [rip+0x2052dc],rbx
0x1e04: mov qword ptr [rip+0x20528d],rbx
0x1e0b: pop rbx
0x1e0c: ret
0x1e0c: the return address is 0x14d3
0x14d3: lea rsi,[rip+0x3a07]
0x14da: mov edi,0x6
0x14df: call 0x1400
0x14df: jump address is 0x1400
0x1400: jmp qword ptr [rip+0x205b6a]
Execute the function: setlocale

0x1400: the return address is 0x14e4
Block exists: lea rsi,[rip+0x32b8] at address 0x14e4 is visited for 1 times

0x1e0d: mov rcx,qword ptr [rip+0x2052ac]
0x1e14: lea rdi,[rip+0x2b5d]
0x1e1b: mov edx,0x37
0x1e20: mov esi,0x1
0x1e25: call 0x1460
0x1e25: jump address is 0x1460
0x1460: jmp qword ptr [rip+0x205b3a]
Execute the function: fwrite

0x1460: the return address is 0x1e2a
0x1e2a: call 0x1230
0x1e2a: jump address is 0x1230
0x1230: jmp qword ptr [rip+0x205c52]
Execute the function: abort

Unreachable instructions:
0x11f8: sub rsp,0x8
0x11fc: mov rax,qword ptr [rip+0x205dd5]
0x1203: test rax,rax
0x1206: je 0x120a
0x1208: call rax
0x120a: add rsp,0x8
0x120e: ret 
0x1210: push qword ptr [rip+0x205c5a]
0x1216: jmp qword ptr [rip+0x205c5c]
0x121c: nop dword ptr [rax+0x0]
0x1220: jmp qword ptr [rip+0x205c5a]
0x1226: push 0x0
0x122b: jmp 0x1210
0x1236: push 0x1
0x123b: jmp 0x1210
0x1240: jmp qword ptr [rip+0x205c4a]
0x1246: push 0x2
0x124b: jmp 0x1210
0x1256: push 0x3
0x125b: jmp 0x1210
0x1260: jmp qword ptr [rip+0x205c3a]
0x1266: push 0x4
0x126b: jmp 0x1210
0x1270: jmp qword ptr [rip+0x205c32]
0x1276: push 0x5
0x127b: jmp 0x1210
0x1280: jmp qword ptr [rip+0x205c2a]
0x1286: push 0x6
0x128b: jmp 0x1210
0x1296: push 0x7
0x129b: jmp 0x1210
0x12a0: jmp qword ptr [rip+0x205c1a]
0x12a6: push 0x8
0x12ab: jmp 0x1210
0x12b6: push 0x9
0x12bb: jmp 0x1210
0x12c6: push 0xa
0x12cb: jmp 0x1210
0x12d0: jmp qword ptr [rip+0x205c02]
0x12d6: push 0xb
0x12db: jmp 0x1210
0x12e0: jmp qword ptr [rip+0x205bfa]
0x12e6: push 0xc
0x12eb: jmp 0x1210
0x12f6: push 0xd
0x12fb: jmp 0x1210
0x1306: push 0xe
0x130b: jmp 0x1210
0x1310: jmp qword ptr [rip+0x205be2]
0x1316: push 0xf
0x131b: jmp 0x1210
0x1326: push 0x10
0x132b: jmp 0x1210
0x1330: jmp qword ptr [rip+0x205bd2]
0x1336: push 0x11
0x133b: jmp 0x1210
0x1340: jmp qword ptr [rip+0x205bca]
0x1346: push 0x12
0x134b: jmp 0x1210
0x1350: jmp qword ptr [rip+0x205bc2]
0x1356: push 0x13
0x135b: jmp 0x1210
0x1366: push 0x14
0x136b: jmp 0x1210
0x1370: jmp qword ptr [rip+0x205bb2]
0x1376: push 0x15
0x137b: jmp 0x1210
0x1380: jmp qword ptr [rip+0x205baa]
0x1386: push 0x16
0x138b: jmp 0x1210
0x1390: jmp qword ptr [rip+0x205ba2]
0x1396: push 0x17
0x139b: jmp 0x1210
0x13a0: jmp qword ptr [rip+0x205b9a]
0x13a6: push 0x18
0x13ab: jmp 0x1210
0x13b0: jmp qword ptr [rip+0x205b92]
0x13b6: push 0x19
0x13bb: jmp 0x1210
0x13c0: jmp qword ptr [rip+0x205b8a]
0x13c6: push 0x1a
0x13cb: jmp 0x1210
0x13d0: jmp qword ptr [rip+0x205b82]
0x13d6: push 0x1b
0x13db: jmp 0x1210
0x13e0: jmp qword ptr [rip+0x205b7a]
0x13e6: push 0x1c
0x13eb: jmp 0x1210
0x13f0: jmp qword ptr [rip+0x205b72]
0x13f6: push 0x1d
0x13fb: jmp 0x1210
0x1406: push 0x1e
0x140b: jmp 0x1210
0x1416: push 0x1f
0x141b: jmp 0x1210
0x1420: jmp qword ptr [rip+0x205b5a]
0x1426: push 0x20
0x142b: jmp 0x1210
0x1430: jmp qword ptr [rip+0x205b52]
0x1436: push 0x21
0x143b: jmp 0x1210
0x1446: push 0x22
0x144b: jmp 0x1210
0x1456: push 0x23
0x145b: jmp 0x1210
0x1466: push 0x24
0x146b: jmp 0x1210
0x1476: push 0x25
0x147b: jmp 0x1210
0x1480: jmp qword ptr [rip+0x205b2a]
0x1486: push 0x26
0x148b: jmp 0x1210
0x1490: jmp qword ptr [rip+0x205b22]
0x1496: push 0x27
0x149b: jmp 0x1210
0x14a0: jmp qword ptr [rip+0x205b1a]
0x14a6: push 0x28
0x14ab: jmp 0x1210
0x14b0: jmp qword ptr [rip+0x205b32]
0x14b6: xchg ax,ax
0x154c: movsxd rax,dword ptr [rip+0x205b3d]
0x1553: add rsp,0x20
0x1557: cmp eax,ebp
0x1559: jl 0x1576
0x155b: call 0x13d0
0x1560: test rax,rax
0x1563: je 0x15b0
0x1565: mov rdi,rax
0x1568: call 0x1280
0x156d: add rsp,0x8
0x1571: xor eax,eax
0x1573: pop rbx
0x1574: pop rbp
0x1575: ret 
0x1576: mov rdi,qword ptr [rbx+rax*8]
0x157a: call 0x3aa0
0x157f: lea rsi,[rip+0x3244]
0x1586: mov rbx,rax
0x1589: mov edx,0x5
0x158e: xor edi,edi
0x1590: call 0x12c0
0x1595: xor edi,edi
0x1597: mov rdx,rax
0x159a: mov rcx,rbx
0x159d: xor esi,esi
0x159f: xor eax,eax
0x15a1: call 0x1420
0x15a6: mov edi,0x1
0x15ab: call 0x16f0
0x15b0: lea rsi,[rip+0x3224]
0x15b7: mov edx,0x5
0x15bc: xor edi,edi
0x15be: call 0x12c0
0x15c3: xor esi,esi
0x15c5: mov rdx,rax
0x15c8: mov edi,0x1
0x15cd: xor eax,eax
0x15cf: call 0x1420
0x15d4: nop word ptr cs:[rax+rax*1+0x0]
0x15de: xchg ax,ax
0x160a: hlt 
0x160b: nop dword ptr [rax+rax*1+0x0]
0x1610: lea rdi,[rip+0x205a69]
0x1617: push rbp
0x1618: lea rax,[rip+0x205a61]
0x161f: cmp rax,rdi
0x1622: mov rbp,rsp
0x1625: je 0x1640
0x1627: mov rax,qword ptr [rip+0x20599a]
0x162e: test rax,rax
0x1631: je 0x1640
0x1633: pop rbp
0x1634: jmp rax
0x1636: nop word ptr cs:[rax+rax*1+0x0]
0x1640: pop rbp
0x1641: ret 
0x1642: nop dword ptr [rax+0x0]
0x1646: nop word ptr cs:[rax+rax*1+0x0]
0x1650: lea rdi,[rip+0x205a29]
0x1657: lea rsi,[rip+0x205a22]
0x165e: push rbp
0x165f: sub rsi,rdi
0x1662: mov rbp,rsp
0x1665: sar rsi,0x3
0x1669: mov rax,rsi
0x166c: shr rax,0x3f
0x1670: add rsi,rax
0x1673: sar rsi,0x1
0x1676: je 0x1690
0x1678: mov rax,qword ptr [rip+0x205961]
0x167f: test rax,rax
0x1682: je 0x1690
0x1684: pop rbp
0x1685: jmp rax
0x1687: nop word ptr [rax+rax*1+0x0]
0x1690: pop rbp
0x1691: ret 
0x1692: nop dword ptr [rax+0x0]
0x1696: nop word ptr cs:[rax+rax*1+0x0]
0x16a0: cmp byte ptr [rip+0x205a21],0x0
0x16a7: jne 0x16d8
0x16a9: cmp qword ptr [rip+0x205937],0x0
0x16b1: push rbp
0x16b2: mov rbp,rsp
0x16b5: je 0x16c3
0x16b7: mov rdi,qword ptr [rip+0x20594a]
0x16be: call 0x14b0
0x16c3: call 0x1610
0x16c8: mov byte ptr [rip+0x2059f9],0x1
0x16cf: pop rbp
0x16d0: ret 
0x16d1: nop dword ptr [rax+0x0]
0x16d8: repz ret 
0x16da: nop word ptr [rax+rax*1+0x0]
0x16e0: push rbp
0x16e1: mov rbp,rsp
0x16e4: pop rbp
0x16e5: jmp 0x1650
0x16ea: nop word ptr [rax+rax*1+0x0]
0x1a32: nop word ptr cs:[rax+rax*1+0x0]
0x1a3c: nop dword ptr [rax+0x0]
0x1a40: mov qword ptr [rip+0x205691],rdi
0x1a47: ret 
0x1a48: nop dword ptr [rax+rax*1+0x0]
0x1a50: mov byte ptr [rip+0x205679],dil
0x1a57: ret 
0x1a58: nop dword ptr [rax+rax*1+0x0]
0x1a60: push rbp
0x1a61: push rbx
0x1a62: sub rsp,0x8
0x1a66: mov rdi,qword ptr [rip+0x20561b]
0x1a6d: call 0x4400
0x1a72: test eax,eax
0x1a74: je 0x1a8c
0x1a76: call 0x1240
0x1a7b: cmp byte ptr [rip+0x20564e],0x0
0x1a82: mov rbx,rax
0x1a85: je 0x1aa3
0x1a87: cmp dword ptr [rax],0x20
0x1a8a: jne 0x1aa3
0x1a8c: mov rdi,qword ptr [rip+0x20562d]
0x1a93: call 0x4400
0x1a98: test eax,eax
0x1a9a: jne 0x1ae2
0x1a9c: add rsp,0x8
0x1aa0: pop rbx
0x1aa1: pop rbp
0x1aa2: ret 
0x1aa3: lea rsi,[rip+0x2ea6]
0x1aaa: xor edi,edi
0x1aac: mov edx,0x5
0x1ab1: call 0x12c0
0x1ab6: mov rdi,qword ptr [rip+0x20561b]
0x1abd: mov rbp,rax
0x1ac0: test rdi,rdi
0x1ac3: je 0x1aed
0x1ac5: call 0x38a0
0x1aca: mov esi,dword ptr [rbx]
0x1acc: lea rdx,[rip+0x2e89]
0x1ad3: mov rcx,rax
0x1ad6: mov r8,rbp
0x1ad9: xor edi,edi
0x1adb: xor eax,eax
0x1add: call 0x1420
0x1ae2: mov edi,dword ptr [rip+0x205530]
0x1ae8: call 0x1260
0x1aed: mov esi,dword ptr [rbx]
0x1aef: lea rdx,[rip+0x2e6a]
0x1af6: mov rcx,rax
0x1af9: xor edi,edi
0x1afb: xor eax,eax
0x1afd: call 0x1420
0x1b02: jmp 0x1ae2
0x1b04: nop word ptr cs:[rax+rax*1+0x0]
0x1b0e: xchg ax,ax
0x1b10: push r13
0x1b12: push r12
0x1b14: mov r13,r8
0x1b17: push rbp
0x1b18: push rbx
0x1b19: mov rbp,rdx
0x1b1c: mov r12,rcx
0x1b1f: sub rsp,0xe8
0x1b26: test al,al
0x1b28: je 0x1b64
0x1b2a: movaps xmmword ptr [rsp+0x60],xmm0
0x1b2f: movaps xmmword ptr [rsp+0x70],xmm1
0x1b34: movaps xmmword ptr [rsp+0x80],xmm2
0x1b3c: movaps xmmword ptr [rsp+0x90],xmm3
0x1b44: movaps xmmword ptr [rsp+0xa0],xmm4
0x1b4c: movaps xmmword ptr [rsp+0xb0],xmm5
0x1b54: movaps xmmword ptr [rsp+0xc0],xmm6
0x1b5c: movaps xmmword ptr [rsp+0xd0],xmm7
0x1b64: mov rax,qword ptr fs:0x28
0x1b6d: mov qword ptr [rsp+0x28],rax
0x1b72: xor eax,eax
0x1b74: cmp edi,0x2
0x1b77: mov ebx,dword ptr [rip+0x205523]
0x1b7d: mov dword ptr [rip+0x205519],0x0
0x1b87: je 0x1bc0
0x1b89: mov rax,qword ptr [rsp+0x28]
0x1b8e: xor rax,qword ptr fs:0x28
0x1b97: mov dword ptr [rip+0x205503],ebx
0x1b9d: mov dword ptr [rip+0x2054e9],0x0
0x1ba7: jne 0x1c4a
0x1bad: add rsp,0xe8
0x1bb4: pop rbx
0x1bb5: pop rbp
0x1bb6: pop r12
0x1bb8: pop r13
0x1bba: ret 
0x1bbb: nop dword ptr [rax+rax*1+0x0]
0x1bc0: lea rcx,[rip+0x204ff9]
0x1bc7: lea rdx,[rip+0x2d95]
0x1bce: xor r8d,r8d
0x1bd1: mov qword ptr [rsp+0x8],r9
0x1bd6: call 0x1300
0x1bdb: cmp eax,0xffffffff
0x1bde: je 0x1b89
0x1be0: cmp eax,0x68
0x1be3: mov r9,qword ptr [rsp+0x8]
0x1be8: je 0x1c40
0x1bea: cmp eax,0x76
0x1bed: jne 0x1b89
0x1bef: lea rax,[rsp+0x110]
0x1bf7: mov rdi,qword ptr [rip+0x20548a]
0x1bfe: lea r8,[rsp+0x10]
0x1c03: mov rcx,r13
0x1c06: mov rdx,r12
0x1c09: mov rsi,rbp
0x1c0c: mov qword ptr [rsp+0x18],rax
0x1c11: lea rax,[rsp+0x30]
0x1c16: mov dword ptr [rsp+0x10],0x30
0x1c1e: mov dword ptr [rsp+0x14],0x30
0x1c26: mov qword ptr [rsp+0x20],rax
0x1c2b: call 0x3f00
0x1c30: xor edi,edi
0x1c32: call 0x1450
0x1c37: nop word ptr [rax+rax*1+0x0]
0x1c40: xor edi,edi
0x1c42: call r9
0x1c45: jmp 0x1b89
0x1c4a: call 0x12f0
0x1c4f: nop 
0x1d47: nop word ptr [rax+rax*1+0x0]
0x1d7e: xchg ax,ax
0x1d84: jmp 0x1d58
0x1d8b: nop dword ptr [rax+rax*1+0x0]
0x1e2f: nop 
0x1e30: push rbp
0x1e31: push rbx
0x1e32: mov rbp,rdi
0x1e35: mov ebx,esi
0x1e37: sub rsp,0x8
0x1e3b: call 0x44e0
0x1e40: movzx edx,byte ptr [rax]
0x1e43: and edx,0xffffffdf
0x1e46: cmp dl,0x55
0x1e49: je 0x1ec0
0x1e4b: cmp dl,0x47
0x1e4e: je 0x1e70
0x1e50: lea rax,[rip+0x2b74]
0x1e57: lea rdx,[rip+0x2b6f]
0x1e5e: cmp ebx,0x9
0x1e61: cmovne rax,rdx
0x1e65: add rsp,0x8
0x1e69: pop rbx
0x1e6a: pop rbp
0x1e6b: ret 
0x1e6c: nop dword ptr [rax+0x0]
0x1e70: movzx edx,byte ptr [rax+0x1]
0x1e74: and edx,0xffffffdf
0x1e77: cmp dl,0x42
0x1e7a: jne 0x1e50
0x1e7c: cmp byte ptr [rax+0x2],0x31
0x1e80: jne 0x1e50
0x1e82: cmp byte ptr [rax+0x3],0x38
0x1e86: jne 0x1e50
0x1e88: cmp byte ptr [rax+0x4],0x30
0x1e8c: jne 0x1e50
0x1e8e: cmp byte ptr [rax+0x5],0x33
0x1e92: jne 0x1e50
0x1e94: cmp byte ptr [rax+0x6],0x30
0x1e98: jne 0x1e50
0x1e9a: cmp byte ptr [rax+0x7],0x0
0x1e9e: jne 0x1e50
0x1ea0: cmp byte ptr [rbp+0x0],0x60
0x1ea4: lea rax,[rip+0x2b19]
0x1eab: lea rdx,[rip+0x2b16]
0x1eb2: cmovne rax,rdx
0x1eb6: add rsp,0x8
0x1eba: pop rbx
0x1ebb: pop rbp
0x1ebc: ret 
0x1ebd: nop dword ptr [rax]
0x1ec0: movzx edx,byte ptr [rax+0x1]
0x1ec4: and edx,0xffffffdf
0x1ec7: cmp dl,0x54
0x1eca: jne 0x1e50
0x1ecc: movzx edx,byte ptr [rax+0x2]
0x1ed0: and edx,0xffffffdf
0x1ed3: cmp dl,0x46
0x1ed6: jne 0x1e50
0x1edc: cmp byte ptr [rax+0x3],0x2d
0x1ee0: jne 0x1e50
0x1ee6: cmp byte ptr [rax+0x4],0x38
0x1eea: jne 0x1e50
0x1ef0: cmp byte ptr [rax+0x5],0x0
0x1ef4: jne 0x1e50
0x1efa: cmp byte ptr [rbp+0x0],0x60
0x1efe: lea rax,[rip+0x2ab7]
0x1f05: lea rdx,[rip+0x2ab4]
0x1f0c: cmovne rax,rdx
0x1f10: add rsp,0x8
0x1f14: pop rbx
0x1f15: pop rbp
0x1f16: ret 
0x1f17: nop word ptr [rax+rax*1+0x0]
0x1f20: push r15
0x1f22: push r14
0x1f24: mov r15d,r8d
0x1f27: push r13
0x1f29: push r12
0x1f2b: mov r14,rdi
0x1f2e: push rbp
0x1f2f: push rbx
0x1f30: mov ebx,r9d
0x1f33: mov r13,rsi
0x1f36: mov rbp,rcx
0x1f39: and ebx,0x2
0x1f3c: sub rsp,0xb8
0x1f43: mov rax,qword ptr [rsp+0xf0]
0x1f4b: mov qword ptr [rsp+0x10],rdx
0x1f50: mov dword ptr [rsp+0x8],r8d
0x1f55: mov dword ptr [rsp+0x78],r9d
0x1f5a: mov qword ptr [rsp+0x20],rax
0x1f5f: mov rax,qword ptr [rsp+0xf8]
0x1f67: mov qword ptr [rsp+0x68],rax
0x1f6c: mov rax,qword ptr [rsp+0x100]
0x1f74: mov qword ptr [rsp+0x60],rax
0x1f79: mov rax,qword ptr fs:0x28
0x1f82: mov qword ptr [rsp+0xa8],rax
0x1f8a: xor eax,eax
0x1f8c: call 0x12d0
0x1f91: cmp r15d,0xa
0x1f95: mov qword ptr [rsp+0x58],rax
0x1f9a: ja 0x314f
0x1fa0: lea rcx,[rip+0x2a79]
0x1fa7: mov edx,r15d
0x1faa: movsxd rax,dword ptr [rcx+rdx*4]
0x1fae: add rax,rcx
0x1fb1: jmp rax
0x1fb3: mov byte ptr [rsp+0xe],0x1
0x1fb8: mov byte ptr [rsp+0x7c],0x0
0x1fbd: xor r12d,r12d
0x1fc0: mov qword ptr [rsp+0x50],0x0
0x1fc9: mov byte ptr [rsp+0xf],0x1
0x1fce: mov byte ptr [rsp+0xd],0x0
0x1fd3: lea rax,[rip+0x29f3]
0x1fda: mov qword ptr [rsp+0x18],0x1
0x1fe3: xor r15d,r15d
0x1fe6: mov dword ptr [rsp+0x8],0x2
0x1fee: mov qword ptr [rsp+0x48],rax
0x1ff3: xor r11d,r11d
0x1ff6: mov rax,rbp
0x1ff9: mov r8d,r12d
0x1ffc: mov rbp,r11
0x1fff: mov r11,rax
0x2002: nop word ptr [rax+rax*1+0x0]
0x2008: cmp r11,rbp
0x200b: setne r12b
0x200f: cmp r11,0xffffffffffffffff
0x2013: jne 0x2022
0x2015: mov rax,qword ptr [rsp+0x10]
0x201a: cmp byte ptr [rax+rbp*1],0x0
0x201e: setne r12b
0x2022: test r12b,r12b
0x2025: je 0x2680
0x202b: cmp dword ptr [rsp+0x8],0x2
0x2030: mov rdi,qword ptr [rsp+0x10]
0x2035: lea r9,[rdi+rbp*1]
0x2039: setne al
0x203c: and al,byte ptr [rsp+0xd]
0x2040: mov r10d,eax
0x2043: je 0x20f0
0x2049: mov rax,qword ptr [rsp+0x18]
0x204e: test rax,rax
0x2051: je 0x2480
0x2057: cmp r11,0xffffffffffffffff
0x205b: lea rbx,[rbp+rax*1+0x0]
0x2060: jne 0x2090
0x2062: cmp rax,0x1
0x2066: jbe 0x2090
0x2068: mov byte ptr [rsp+0x38],r8b
0x206d: mov byte ptr [rsp+0x30],r10b
0x2072: mov qword ptr [rsp+0x28],r9
0x2077: call 0x12e0
0x207c: movzx r8d,byte ptr [rsp+0x38]
0x2082: movzx r10d,byte ptr [rsp+0x30]
0x2088: mov r11,rax
0x208b: mov r9,qword ptr [rsp+0x28]
0x2090: cmp rbx,r11
0x2093: mov byte ptr [rsp+0x28],r10b
0x2098: ja 0x2650
0x209e: mov rdx,qword ptr [rsp+0x18]
0x20a3: mov rsi,qword ptr [rsp+0x48]
0x20a8: mov rdi,r9
0x20ab: mov qword ptr [rsp+0x40],r11
0x20b0: mov byte ptr [rsp+0x38],r8b
0x20b5: mov qword ptr [rsp+0x30],r9
0x20ba: call 0x1350
0x20bf: test eax,eax
0x20c1: mov r9,qword ptr [rsp+0x30]
0x20c6: movzx r8d,byte ptr [rsp+0x38]
0x20cc: mov r11,qword ptr [rsp+0x40]
0x20d1: jne 0x2650
0x20d7: cmp byte ptr [rsp+0xf],0x0
0x20dc: movzx r10d,byte ptr [rsp+0x28]
0x20e2: jne 0x3065
0x20e8: nop dword ptr [rax+rax*1+0x0]
0x20f0: movzx ebx,byte ptr [r9]
0x20f4: cmp bl,0x7e
0x20f7: ja 0x2418
0x20fd: lea rcx,[rip+0x2948]
0x2104: movzx edx,bl
0x2107: movsxd rax,dword ptr [rcx+rdx*4]
0x210b: add rax,rcx
0x210e: jmp rax
0x2110: xor r10d,r10d
0x2113: cmp r11,0x1
0x2117: setne al
0x211a: cmp r11,0xffffffffffffffff
0x211e: jne 0x212c
0x2120: mov rax,qword ptr [rsp+0x10]
0x2125: cmp byte ptr [rax+0x1],0x0
0x2129: setne al
0x212c: cmp dword ptr [rsp+0x8],0x2
0x2131: sete dl
0x2134: test al,al
0x2136: je 0x2388
0x213c: xor r12d,r12d
0x213f: xor eax,eax
0x2141: nop dword ptr [rax+0x0]
0x2148: cmp byte ptr [rsp+0xd],0x1
0x214d: jne 0x2262
0x2153: test dl,dl
0x2155: jne 0x2262
0x215b: mov rsi,qword ptr [rsp+0x20]
0x2160: test rsi,rsi
0x2163: je 0x2179
0x2165: mov edx,ebx
0x2167: shr dl,0x5
0x216a: movzx edx,dl
0x216d: mov edx,dword ptr [rsi+rdx*4]
0x2170: bt edx,ebx
0x2173: jb 0x22c3
0x2179: test r10b,r10b
0x217c: jne 0x22c3
0x2182: xor eax,0x1
0x2185: add rbp,0x1
0x2189: and eax,r8d
0x218c: test al,al
0x218e: je 0x21b0
0x2190: cmp r13,r15
0x2193: jbe 0x219a
0x2195: mov byte ptr [r14+r15*1],0x27
0x219a: lea rax,[r15+0x1]
0x219e: cmp r13,rax
0x21a1: jbe 0x21a9
0x21a3: mov byte ptr [r14+r15*1+0x1],0x27
0x21a9: add r15,0x2
0x21ad: xor r8d,r8d
0x21b0: cmp r15,r13
0x21b3: jae 0x21b9
0x21b5: mov byte ptr [r14+r15*1],bl
0x21b9: movzx edi,byte ptr [rsp+0xe]
0x21be: add r15,0x1
0x21c2: mov eax,0x0
0x21c7: test r12b,r12b
0x21ca: cmove edi,eax
0x21cd: mov byte ptr [rsp+0xe],dil
0x21d2: jmp 0x2008
0x21d7: nop word ptr [rax+rax*1+0x0]
0x21e0: xor r10d,r10d
0x21e3: mov eax,dword ptr [rsp+0x8]
0x21e7: cmp eax,0x2
0x21ea: je 0x27a8
0x21f0: cmp eax,0x5
0x21f3: je 0x2768
0x21f9: cmp eax,0x2
0x21fc: mov ebx,0x3f
0x2201: sete dl
0x2204: xor r12d,r12d
0x2207: xor eax,eax
0x2209: jmp 0x2148
0x220e: xchg ax,ax
0x2210: xor r10d,r10d
0x2213: cmp dword ptr [rsp+0x8],0x2
0x2218: je 0x2720
0x221e: mov byte ptr [rsp+0x7c],r12b
0x2223: xor edx,edx
0x2225: xor eax,eax
0x2227: mov ebx,0x27
0x222c: jmp 0x2148
0x2231: nop dword ptr [rax+0x0]
0x2238: mov edx,0x9
0x223d: mov ebx,0x74
0x2242: cmp dword ptr [rsp+0x8],0x2
0x2247: sete al
0x224a: and al,byte ptr [rsp+0xf]
0x224e: jne 0x239e
0x2254: cmp byte ptr [rsp+0xd],0x0
0x2259: jne 0x22c0
0x225b: mov ebx,edx
0x225d: xor r12d,r12d
0x2260: xor eax,eax
0x2262: cmp byte ptr [rsp+0xf],0x0
0x2267: jne 0x215b
0x226d: jmp 0x2179
0x2272: nop word ptr [rax+rax*1+0x0]
0x2278: mov edx,0x8
0x227d: mov ebx,0x62
0x2282: jmp 0x2254
0x2284: nop dword ptr [rax+0x0]
0x2288: cmp dword ptr [rsp+0x8],0x2
0x228d: je 0x2660
0x2293: cmp byte ptr [rsp+0xd],0x0
0x2298: je 0x24b0
0x229e: cmp byte ptr [rsp+0xf],0x0
0x22a3: je 0x24b0
0x22a9: cmp qword ptr [rsp+0x18],0x0
0x22af: jne 0x266b
0x22b5: mov ebx,0x5c
0x22ba: nop word ptr [rax+rax*1+0x0]
0x22c0: xor r12d,r12d
0x22c3: cmp dword ptr [rsp+0x8],0x2
0x22c8: sete dl
0x22cb: cmp byte ptr [rsp+0xf],0x0
0x22d0: mov eax,edx
0x22d2: jne 0x2b28
0x22d8: mov eax,r8d
0x22db: xor eax,0x1
0x22de: and al,dl
0x22e0: je 0x2311
0x22e2: cmp r13,r15
0x22e5: jbe 0x22ec
0x22e7: mov byte ptr [r14+r15*1],0x27
0x22ec: lea rdx,[r15+0x1]
0x22f0: cmp r13,rdx
0x22f3: jbe 0x22fb
0x22f5: mov byte ptr [r14+r15*1+0x1],0x24
0x22fb: lea rdx,[r15+0x2]
0x22ff: cmp r13,rdx
0x2302: jbe 0x230a
0x2304: mov byte ptr [r14+r15*1+0x2],0x27
0x230a: add r15,0x3
0x230e: mov r8d,eax
0x2311: cmp r13,r15
0x2314: jbe 0x231b
0x2316: mov byte ptr [r14+r15*1],0x5c
0x231b: add r15,0x1
0x231f: add rbp,0x1
0x2323: jmp 0x21b0
0x2328: nop dword ptr [rax+rax*1+0x0]
0x2330: cmp byte ptr [rsp+0xd],0x0
0x2335: jne 0x2503
0x233b: xor edx,edx
0x233d: test byte ptr [rsp+0x78],0x1
0x2342: je 0x225b
0x2348: add rbp,0x1
0x234c: jmp 0x2008
0x2351: nop dword ptr [rax+0x0]
0x2358: cmp dword ptr [rsp+0x8],0x2
0x235d: sete dl
0x2360: xor eax,eax
0x2362: jmp 0x2148
0x2367: nop word ptr [rax+rax*1+0x0]
0x2370: mov edx,0x7
0x2375: mov ebx,0x61
0x237a: jmp 0x2254
0x237f: nop 
0x2380: cmp dword ptr [rsp+0x8],0x2
0x2385: sete dl
0x2388: test rbp,rbp
0x238b: jne 0x213c
0x2391: movzx eax,byte ptr [rsp+0xf]
0x2396: and al,dl
0x2398: je 0x2148
0x239e: mov rbp,r11
0x23a1: mov dword ptr [rsp+0x8],0x2
0x23a9: jmp 0x2aa9
0x23ae: xchg ax,ax
0x23b0: cmp dword ptr [rsp+0x8],0x2
0x23b5: sete dl
0x23b8: xor r12d,r12d
0x23bb: jmp 0x2391
0x23bd: nop dword ptr [rax]
0x23c0: cmp dword ptr [rsp+0x8],0x2
0x23c5: mov ebx,0x20
0x23ca: sete dl
0x23cd: jmp 0x2391
0x23cf: nop 
0x23d0: mov edx,0xd
0x23d5: mov ebx,0x72
0x23da: jmp 0x2242
0x23df: nop 
0x23e0: mov edx,0xc
0x23e5: mov ebx,0x66
0x23ea: jmp 0x2254
0x23ef: nop 
0x23f0: mov edx,0xb
0x23f5: mov ebx,0x76
0x23fa: jmp 0x2254
0x23ff: nop 
0x2400: mov edx,0xa
0x2405: mov ebx,0x6e
0x240a: jmp 0x2242
0x240f: nop 
0x2410: xor r10d,r10d
0x2413: nop dword ptr [rax+rax*1+0x0]
0x2418: cmp qword ptr [rsp+0x58],0x1
0x241e: jne 0x27c8
0x2424: mov qword ptr [rsp+0x38],r11
0x2429: mov byte ptr [rsp+0x30],r8b
0x242e: mov byte ptr [rsp+0x28],r10b
0x2433: call 0x14a0
0x2438: mov rcx,qword ptr [rax]
0x243b: movzx edx,bl
0x243e: movzx r10d,byte ptr [rsp+0x28]
0x2444: movzx r8d,byte ptr [rsp+0x30]
0x244a: mov r11,qword ptr [rsp+0x38]
0x244f: mov edi,0x1
0x2454: movzx eax,word ptr [rcx+rdx*2]
0x2458: and ax,0x4000
0x245c: setne r12b
0x2460: sete al
0x2463: and al,byte ptr [rsp+0xd]
0x2467: test al,al
0x2469: jne 0x2e01
0x246f: cmp dword ptr [rsp+0x8],0x2
0x2474: sete dl
0x2477: jmp 0x2148
0x247c: nop dword ptr [rax+0x0]
0x2480: movzx ebx,byte ptr [r9]
0x2484: cmp bl,0x7e
0x2487: ja 0x2410
0x2489: lea rcx,[rip+0x27b8]
0x2490: movzx edx,bl
0x2493: movsxd rax,dword ptr [rcx+rdx*4]
0x2497: add rax,rcx
0x249a: jmp rax
0x249c: nop dword ptr [rax+0x0]
0x24a0: xor r10d,r10d
0x24a3: cmp byte ptr [rsp+0xd],0x0
0x24a8: jne 0x229e
0x24ae: xchg ax,ax
0x24b0: mov edx,0x5c
0x24b5: mov ebx,0x5c
0x24ba: jmp 0x2254
0x24bf: nop 
0x24c0: mov edx,0xc
0x24c5: xor r10d,r10d
0x24c8: mov ebx,0x66
0x24cd: jmp 0x2254
0x24d2: nop word ptr [rax+rax*1+0x0]
0x24d8: mov edx,0xa
0x24dd: xor r10d,r10d
0x24e0: mov ebx,0x6e
0x24e5: jmp 0x2242
0x24ea: nop word ptr [rax+rax*1+0x0]
0x24f0: mov ebx,0x61
0x24f5: jmp 0x22c0
0x24fa: nop word ptr [rax+rax*1+0x0]
0x2500: xor r10d,r10d
0x2503: cmp dword ptr [rsp+0x8],0x2
0x2508: sete dl
0x250b: cmp byte ptr [rsp+0xf],0x0
0x2510: jne 0x30aa
0x2516: mov eax,r8d
0x2519: mov rcx,r15
0x251c: xor eax,0x1
0x251f: and al,dl
0x2521: je 0x2550
0x2523: cmp r13,r15
0x2526: jbe 0x252d
0x2528: mov byte ptr [r14+r15*1],0x27
0x252d: lea rcx,[r15+0x1]
0x2531: cmp r13,rcx
0x2534: jbe 0x253c
0x2536: mov byte ptr [r14+r15*1+0x1],0x24
0x253c: lea rcx,[r15+0x2]
0x2540: cmp r13,rcx
0x2543: ja 0x2b79
0x2549: lea rcx,[r15+0x3]
0x254d: mov r8d,eax
0x2550: cmp r13,rcx
0x2553: jbe 0x255a
0x2555: mov byte ptr [r14+rcx*1],0x5c
0x255a: cmp dword ptr [rsp+0x8],0x2
0x255f: lea r15,[rcx+0x1]
0x2563: je 0x2b69
0x2569: lea rax,[rbp+0x1]
0x256d: cmp rax,r11
0x2570: jae 0x258b
0x2572: mov rax,qword ptr [rsp+0x10]
0x2577: movzx eax,byte ptr [rax+rbp*1+0x1]
0x257c: mov byte ptr [rsp+0x28],al
0x2580: sub eax,0x30
0x2583: cmp al,0x9
0x2585: jbe 0x2db9
0x258b: mov eax,r12d
0x258e: mov ebx,0x30
0x2593: xor r12d,r12d
0x2596: jmp 0x2148
0x259b: nop dword ptr [rax+rax*1+0x0]
0x25a0: cmp dword ptr [rsp+0x8],0x2
0x25a5: mov r12d,r10d
0x25a8: sete dl
0x25ab: xor r10d,r10d
0x25ae: xor eax,eax
0x25b0: jmp 0x2148
0x25b5: nop dword ptr [rax]
0x25b8: cmp dword ptr [rsp+0x8],0x2
0x25bd: sete dl
0x25c0: xor r10d,r10d
0x25c3: jmp 0x2388
0x25c8: nop dword ptr [rax+rax*1+0x0]
0x25d0: cmp dword ptr [rsp+0x8],0x2
0x25d5: sete dl
0x25d8: xor r10d,r10d
0x25db: xor r12d,r12d
0x25de: jmp 0x2391
0x25e3: nop dword ptr [rax+rax*1+0x0]
0x25e8: cmp dword ptr [rsp+0x8],0x2
0x25ed: mov r12d,r10d
0x25f0: mov ebx,0x20
0x25f5: sete dl
0x25f8: xor r10d,r10d
0x25fb: jmp 0x2391
0x2600: mov edx,0xd
0x2605: xor r10d,r10d
0x2608: mov ebx,0x72
0x260d: jmp 0x2242
0x2612: nop word ptr [rax+rax*1+0x0]
0x2618: mov ebx,0x76
0x261d: jmp 0x22c0
0x2622: nop word ptr [rax+rax*1+0x0]
0x2628: mov edx,0x9
0x262d: xor r10d,r10d
0x2630: mov ebx,0x74
0x2635: jmp 0x2242
0x263a: nop word ptr [rax+rax*1+0x0]
0x2640: mov ebx,0x62
0x2645: jmp 0x22c0
0x264a: nop word ptr [rax+rax*1+0x0]
0x2650: xor r10d,r10d
0x2653: jmp 0x20f0
0x2658: nop dword ptr [rax+rax*1+0x0]
0x2660: cmp byte ptr [rsp+0xf],0x0
0x2665: jne 0x2fd0
0x266b: add rbp,0x1
0x266f: mov eax,r8d
0x2672: xor r12d,r12d
0x2675: mov ebx,0x5c
0x267a: jmp 0x218c
0x267f: nop 
0x2680: cmp dword ptr [rsp+0x8],0x2
0x2685: movzx ebx,byte ptr [rsp+0xf]
0x268a: mov r12d,r8d
0x268d: mov rbp,r11
0x2690: sete dl
0x2693: mov eax,ebx
0x2695: test r15,r15
0x2698: sete cl
0x269b: and eax,edx
0x269d: and al,cl
0x269f: jne 0x3106
0x26a5: mov eax,ebx
0x26a7: xor eax,0x1
0x26aa: and dl,al
0x26ac: je 0x301c
0x26b2: cmp byte ptr [rsp+0x7c],0x0
0x26b7: je 0x301a
0x26bd: cmp byte ptr [rsp+0xe],0x0
0x26c2: jne 0x30bd
0x26c8: test r13,r13
0x26cb: sete al
0x26ce: cmp qword ptr [rsp+0x50],0x0
0x26d4: setne dl
0x26d7: and al,dl
0x26d9: je 0x30fc
0x26df: mov r13,qword ptr [rsp+0x50]
0x26e4: lea rbx,[rip+0x22e2]
0x26eb: mov byte ptr [r14],0x27
0x26ef: mov dword ptr [rsp+0x8],0x2
0x26f7: mov r15d,0x1
0x26fd: mov qword ptr [rsp+0x18],0x1
0x2706: mov byte ptr [rsp+0xf],0x0
0x270b: mov qword ptr [rsp+0x48],rbx
0x2710: mov byte ptr [rsp+0x7c],al
0x2714: jmp 0x1ff3
0x2719: nop dword ptr [rax+0x0]
0x2720: cmp byte ptr [rsp+0xf],0x0
0x2725: jne 0x2fd0
0x272b: test r13,r13
0x272e: je 0x2b30
0x2734: xor edx,edx
0x2736: cmp qword ptr [rsp+0x50],0x0
0x273c: jne 0x2b30
0x2742: mov qword ptr [rsp+0x50],r13
0x2747: add r15,0x3
0x274b: xor eax,eax
0x274d: mov byte ptr [rsp+0x7c],r12b
0x2752: xor r8d,r8d
0x2755: mov r13,rdx
0x2758: mov ebx,0x27
0x275d: jmp 0x2179
0x2762: nop word ptr [rax+rax*1+0x0]
0x2768: test byte ptr [rsp+0x78],0x4
0x276d: je 0x2790
0x276f: lea rcx,[rbp+0x2]
0x2773: cmp rcx,r11
0x2776: jae 0x2790
0x2778: mov rax,qword ptr [rsp+0x10]
0x277d: cmp byte ptr [rax+rbp*1+0x1],0x3f
0x2782: je 0x2f12
0x2788: nop dword ptr [rax+rax*1+0x0]
0x2790: xor edx,edx
0x2792: xor r12d,r12d
0x2795: xor eax,eax
0x2797: mov ebx,0x3f
0x279c: jmp 0x2148
0x27a1: nop dword ptr [rax+0x0]
0x27a8: cmp byte ptr [rsp+0xf],0x0
0x27ad: jne 0x2fd0
0x27b3: xor r12d,r12d
0x27b6: xor eax,eax
0x27b8: mov ebx,0x3f
0x27bd: jmp 0x2179
0x27c2: nop word ptr [rax+rax*1+0x0]
0x27c8: lea rax,[rsp+0xa0]
0x27d0: cmp r11,0xffffffffffffffff
0x27d4: mov qword ptr [rsp+0xa0],0x0
0x27e0: mov qword ptr [rsp+0x28],rax
0x27e5: jne 0x2814
0x27e7: mov rdi,qword ptr [rsp+0x10]
0x27ec: mov byte ptr [rsp+0x40],r8b
0x27f1: mov byte ptr [rsp+0x38],r10b
0x27f6: mov qword ptr [rsp+0x30],r9
0x27fb: call 0x12e0
0x2800: movzx r8d,byte ptr [rsp+0x40]
0x2806: movzx r10d,byte ptr [rsp+0x38]
0x280c: mov r11,rax
0x280f: mov r9,qword ptr [rsp+0x30]
0x2814: lea rax,[rsp+0x9c]
0x281c: xor ecx,ecx
0x281e: mov byte ptr [rsp+0x7e],bl
0x2822: mov byte ptr [rsp+0x7d],r8b
0x2827: mov rbx,rcx
0x282a: mov qword ptr [rsp+0x88],r9
0x2832: mov qword ptr [rsp+0x38],rax
0x2837: mov byte ptr [rsp+0x7f],r10b
0x283c: mov qword ptr [rsp+0x80],r15
0x2844: mov qword ptr [rsp+0x40],r14
0x2849: mov qword ptr [rsp+0x70],r13
0x284e: mov qword ptr [rsp+0x30],r11
0x2853: mov rax,qword ptr [rsp+0x10]
0x2858: lea r14,[rbp+rbx*1+0x0]
0x285d: mov rdx,qword ptr [rsp+0x30]
0x2862: mov rcx,qword ptr [rsp+0x28]
0x2867: mov rdi,qword ptr [rsp+0x38]
0x286c: lea r13,[rax+r14*1]
0x2870: sub rdx,r14
0x2873: mov rsi,r13
0x2876: call 0x4370
0x287b: test rax,rax
0x287e: mov r15,rax
0x2881: je 0x28d1
0x2883: cmp rax,0xffffffffffffffff
0x2887: je 0x2ea5
0x288d: cmp rax,0xfffffffffffffffe
0x2891: je 0x2e31
0x2897: cmp dword ptr [rsp+0x8],0x2
0x289c: sete al
0x289f: and al,byte ptr [rsp+0xf]
0x28a3: jne 0x2a40
0x28a9: mov edi,dword ptr [rsp+0x9c]
0x28b0: call 0x1490
0x28b5: mov rdi,qword ptr [rsp+0x28]
0x28ba: test eax,eax
0x28bc: mov eax,0x0
0x28c1: cmove r12d,eax
0x28c5: add rbx,r15
0x28c8: call 0x1480
0x28cd: test eax,eax
0x28cf: je 0x2853
0x28d1: mov edx,r12d
0x28d4: mov rdi,rbx
0x28d7: movzx r8d,byte ptr [rsp+0x7d]
0x28dd: xor edx,0x1
0x28e0: movzx ebx,byte ptr [rsp+0x7e]
0x28e5: movzx r10d,byte ptr [rsp+0x7f]
0x28eb: and dl,byte ptr [rsp+0xd]
0x28ef: mov r15,qword ptr [rsp+0x80]
0x28f7: mov r14,qword ptr [rsp+0x40]
0x28fc: mov r13,qword ptr [rsp+0x70]
0x2901: mov r11,qword ptr [rsp+0x30]
0x2906: cmp rdi,0x1
0x290a: jbe 0x2f0b
0x2910: mov rcx,rdi
0x2913: xor esi,esi
0x2915: movzx r9d,byte ptr [rsp+0xf]
0x291b: add rcx,rbp
0x291e: mov rdi,qword ptr [rsp+0x10]
0x2923: jmp 0x29de
0x2928: nop dword ptr [rax+rax*1+0x0]
0x2930: cmp dword ptr [rsp+0x8],0x2
0x2935: sete al
0x2938: test r9b,r9b
0x293b: jne 0x2df0
0x2941: mov esi,r8d
0x2944: xor esi,0x1
0x2947: and al,sil
0x294a: je 0x297b
0x294c: cmp r13,r15
0x294f: jbe 0x2956
0x2951: mov byte ptr [r14+r15*1],0x27
0x2956: lea rsi,[r15+0x1]
0x295a: cmp r13,rsi
0x295d: jbe 0x2965
0x295f: mov byte ptr [r14+r15*1+0x1],0x24
0x2965: lea rsi,[r15+0x2]
0x2969: cmp r13,rsi
0x296c: jbe 0x2974
0x296e: mov byte ptr [r14+r15*1+0x2],0x27
0x2974: add r15,0x3
0x2978: mov r8d,eax
0x297b: cmp r13,r15
0x297e: jbe 0x2985
0x2980: mov byte ptr [r14+r15*1],0x5c
0x2985: lea rax,[r15+0x1]
0x2989: cmp r13,rax
0x298c: jbe 0x299b
0x298e: mov eax,ebx
0x2990: shr al,0x6
0x2993: add eax,0x30
0x2996: mov byte ptr [r14+r15*1+0x1],al
0x299b: lea rax,[r15+0x2]
0x299f: cmp r13,rax
0x29a2: jbe 0x29b4
0x29a4: mov eax,ebx
0x29a6: shr al,0x3
0x29a9: and eax,0x7
0x29ac: add eax,0x30
0x29af: mov byte ptr [r14+r15*1+0x2],al
0x29b4: and ebx,0x7
0x29b7: add rbp,0x1
0x29bb: add r15,0x3
0x29bf: add ebx,0x30
0x29c2: cmp rbp,rcx
0x29c5: jae 0x21b0
0x29cb: mov esi,edx
0x29cd: cmp r13,r15
0x29d0: jbe 0x29d6
0x29d2: mov byte ptr [r14+r15*1],bl
0x29d6: movzx ebx,byte ptr [rdi+rbp*1]
0x29da: add r15,0x1
0x29de: test dl,dl
0x29e0: jne 0x2930
0x29e6: mov eax,esi
0x29e8: xor eax,0x1
0x29eb: and eax,r8d
0x29ee: test r10b,r10b
0x29f1: je 0x2a01
0x29f3: cmp r13,r15
0x29f6: jbe 0x29fd
0x29f8: mov byte ptr [r14+r15*1],0x5c
0x29fd: add r15,0x1
0x2a01: add rbp,0x1
0x2a05: cmp rbp,rcx
0x2a08: jae 0x218c
0x2a0e: test al,al
0x2a10: je 0x2e0e
0x2a16: cmp r13,r15
0x2a19: jbe 0x2a20
0x2a1b: mov byte ptr [r14+r15*1],0x27
0x2a20: lea rax,[r15+0x1]
0x2a24: cmp r13,rax
0x2a27: jbe 0x2a2f
0x2a29: mov byte ptr [r14+r15*1+0x1],0x27
0x2a2f: add r15,0x2
0x2a33: xor r10d,r10d
0x2a36: xor r8d,r8d
0x2a39: jmp 0x29cd
0x2a3b: nop dword ptr [rax+rax*1+0x0]
0x2a40: cmp r15,0x1
0x2a44: je 0x28a9
0x2a4a: mov rdi,qword ptr [rsp+0x10]
0x2a4f: lea rcx,[rdi+r15*1]
0x2a53: lea rdx,[rdi+r14*1+0x1]
0x2a58: lea r8,[rcx+r14*1]
0x2a5c: jmp 0x2a6d
0x2a5e: xchg ax,ax
0x2a60: add rdx,0x1
0x2a64: cmp r8,rdx
0x2a67: je 0x28a9
0x2a6d: movzx ecx,byte ptr [rdx]
0x2a70: sub ecx,0x5b
0x2a73: cmp cl,0x21
0x2a76: ja 0x2a60
0x2a78: mov esi,0x1
0x2a7d: shl rsi,cl
0x2a80: mov rcx,rsi
0x2a83: movabs rsi,0x20000002b
0x2a8d: test rcx,rsi
0x2a90: je 0x2a60
0x2a92: mov r14,qword ptr [rsp+0x40]
0x2a97: mov r13,qword ptr [rsp+0x70]
0x2a9c: mov rbp,qword ptr [rsp+0x30]
0x2aa1: mov dword ptr [rsp+0x8],0x2
0x2aa9: cmp byte ptr [rsp+0xd],0x0
0x2aae: je 0x2ac0
0x2ab0: test al,al
0x2ab2: mov eax,0x4
0x2ab7: cmove eax,dword ptr [rsp+0x8]
0x2abc: mov dword ptr [rsp+0x8],eax
0x2ac0: sub rsp,0x8
0x2ac4: mov rcx,rbp
0x2ac7: mov rsi,r13
0x2aca: push qword ptr [rsp+0x68]
0x2ace: push qword ptr [rsp+0x78]
0x2ad2: mov rdi,r14
0x2ad5: push 0x0
0x2ad7: mov r9d,dword ptr [rsp+0x98]
0x2adf: mov r8d,dword ptr [rsp+0x28]
0x2ae4: mov rdx,qword ptr [rsp+0x30]
0x2ae9: and r9d,0xfffffffd
0x2aed: call 0x1f20
0x2af2: add rsp,0x20
0x2af6: mov r15,rax
0x2af9: mov rbx,qword ptr [rsp+0xa8]
0x2b01: xor rbx,qword ptr fs:0x28
0x2b0a: mov rax,r15
0x2b0d: jne 0x3113
0x2b13: add rsp,0xb8
0x2b1a: pop rbx
0x2b1b: pop rbp
0x2b1c: pop r12
0x2b1e: pop r13
0x2b20: pop r14
0x2b22: pop r15
0x2b24: ret 
0x2b25: nop dword ptr [rax]
0x2b28: mov rbp,r11
0x2b2b: jmp 0x2aa9
0x2b30: cmp r13,r15
0x2b33: jbe 0x2b3a
0x2b35: mov byte ptr [r14+r15*1],0x27
0x2b3a: lea rax,[r15+0x1]
0x2b3e: cmp r13,rax
0x2b41: jbe 0x2b49
0x2b43: mov byte ptr [r14+r15*1+0x1],0x5c
0x2b49: lea rax,[r15+0x2]
0x2b4d: cmp r13,rax
0x2b50: jbe 0x3142
0x2b56: mov rdx,r13
0x2b59: mov byte ptr [r14+r15*1+0x2],0x27
0x2b5f: mov r13,qword ptr [rsp+0x50]
0x2b64: jmp 0x2742
0x2b69: mov eax,r12d
0x2b6c: mov ebx,0x30
0x2b71: xor r12d,r12d
0x2b74: jmp 0x2179
0x2b79: mov byte ptr [r14+r15*1+0x2],0x27
0x2b7f: jmp 0x2549
0x2b84: test ebx,ebx
0x2b86: jne 0x1fb3
0x2b8c: mov byte ptr [rsp+0xd],0x1
0x2b91: test r13,r13
0x2b94: jne 0x312a
0x2b9a: lea rax,[rip+0x1e2c]
0x2ba1: mov qword ptr [rsp+0x50],0x0
0x2baa: mov byte ptr [rsp+0xe],0x1
0x2baf: mov byte ptr [rsp+0x7c],0x0
0x2bb4: xor r12d,r12d
0x2bb7: mov byte ptr [rsp+0xf],0x0
0x2bbc: mov qword ptr [rsp+0x18],0x1
0x2bc5: mov qword ptr [rsp+0x48],rax
0x2bca: mov r15d,0x1
0x2bd0: mov dword ptr [rsp+0x8],0x2
0x2bd8: jmp 0x1ff3
0x2bdd: nop dword ptr [rax]
0x2be0: test ebx,ebx
0x2be2: jne 0x2fdd
0x2be8: test r13,r13
0x2beb: je 0x2e16
0x2bf1: mov byte ptr [r14],0x22
0x2bf5: mov byte ptr [rsp+0xe],0x1
0x2bfa: xor r12d,r12d
0x2bfd: mov byte ptr [rsp+0x7c],0x0
0x2c02: mov qword ptr [rsp+0x50],0x0
0x2c0b: lea rax,[rip+0x1db9]
0x2c12: mov byte ptr [rsp+0xf],0x0
0x2c17: mov byte ptr [rsp+0xd],0x1
0x2c1c: mov qword ptr [rsp+0x18],0x1
0x2c25: mov r15d,0x1
0x2c2b: mov qword ptr [rsp+0x48],rax
0x2c30: jmp 0x1ff3
0x2c35: lea rax,[rip+0x1d8f]
0x2c3c: mov byte ptr [rsp+0xe],0x1
0x2c41: mov byte ptr [rsp+0x7c],0x0
0x2c46: xor r12d,r12d
0x2c49: mov qword ptr [rsp+0x50],0x0
0x2c52: mov byte ptr [rsp+0xf],0x1
0x2c57: mov byte ptr [rsp+0xd],0x1
0x2c5c: mov qword ptr [rsp+0x18],0x1
0x2c65: xor r15d,r15d
0x2c68: mov qword ptr [rsp+0x48],rax
0x2c6d: mov dword ptr [rsp+0x8],0x5
0x2c75: jmp 0x1ff3
0x2c7a: mov byte ptr [rsp+0xe],0x1
0x2c7f: mov byte ptr [rsp+0x7c],0x0
0x2c84: xor r12d,r12d
0x2c87: mov qword ptr [rsp+0x50],0x0
0x2c90: mov byte ptr [rsp+0xf],0x0
0x2c95: xor r15d,r15d
0x2c98: mov byte ptr [rsp+0xd],0x1
0x2c9d: mov qword ptr [rsp+0x18],0x0
0x2ca6: mov qword ptr [rsp+0x48],0x0
0x2caf: jmp 0x1ff3
0x2cb4: cmp dword ptr [rsp+0x8],0xa
0x2cb9: je 0x2d11
0x2cbb: lea rsi,[rip+0x1d0d]
0x2cc2: xor edi,edi
0x2cc4: mov edx,0x5
0x2cc9: call 0x12c0
0x2cce: mov rcx,rax
0x2cd1: mov qword ptr [rsp+0x68],rax
0x2cd6: lea rax,[rip+0x1cf2]
0x2cdd: cmp rcx,rax
0x2ce0: je 0x307e
0x2ce6: lea rsi,[rip+0x1ce0]
0x2ced: xor edi,edi
0x2cef: mov edx,0x5
0x2cf4: call 0x12c0
0x2cf9: mov rcx,rax
0x2cfc: mov qword ptr [rsp+0x60],rax
0x2d01: lea rax,[rip+0x1cc5]
0x2d08: cmp rcx,rax
0x2d0b: je 0x3094
0x2d11: xor r15d,r15d
0x2d14: test ebx,ebx
0x2d16: je 0x2edd
0x2d1c: test ebx,ebx
0x2d1e: mov rbx,qword ptr [rsp+0x60]
0x2d23: setne byte ptr [rsp+0xf]
0x2d28: xor r12d,r12d
0x2d2b: mov rdi,rbx
0x2d2e: call 0x12e0
0x2d33: mov qword ptr [rsp+0x48],rbx
0x2d38: mov qword ptr [rsp+0x18],rax
0x2d3d: mov byte ptr [rsp+0xe],0x1
0x2d42: mov byte ptr [rsp+0x7c],0x0
0x2d47: mov qword ptr [rsp+0x50],0x0
0x2d50: mov byte ptr [rsp+0xd],0x1
0x2d55: jmp 0x1ff3
0x2d5a: mov byte ptr [rsp+0xe],0x1
0x2d5f: mov byte ptr [rsp+0x7c],0x0
0x2d64: xor r12d,r12d
0x2d67: mov qword ptr [rsp+0x50],0x0
0x2d70: mov byte ptr [rsp+0xf],0x0
0x2d75: xor r15d,r15d
0x2d78: mov byte ptr [rsp+0xd],0x0
0x2d7d: mov qword ptr [rsp+0x18],0x0
0x2d86: mov qword ptr [rsp+0x48],0x0
0x2d8f: jmp 0x1ff3
0x2d94: mov byte ptr [rsp+0xe],0x1
0x2d99: mov byte ptr [rsp+0x7c],0x0
0x2d9e: xor r12d,r12d
0x2da1: mov qword ptr [rsp+0x50],0x0
0x2daa: mov byte ptr [rsp+0xf],0x1
0x2daf: mov byte ptr [rsp+0xd],0x1
0x2db4: jmp 0x1fd3
0x2db9: cmp r13,r15
0x2dbc: jbe 0x2dc3
0x2dbe: mov byte ptr [r14+r15*1],0x30
0x2dc3: lea rax,[rcx+0x2]
0x2dc7: cmp r13,rax
0x2dca: jbe 0x2dd2
0x2dcc: mov byte ptr [r14+rcx*1+0x2],0x30
0x2dd2: mov eax,r12d
0x2dd5: lea r15,[rcx+0x3]
0x2dd9: xor r12d,r12d
0x2ddc: mov ebx,0x30
0x2de1: jmp 0x2148
0x2de6: nop word ptr cs:[rax+rax*1+0x0]
0x2df0: movzx ebx,byte ptr [rsp+0xf]
0x2df5: mov rbp,r11
0x2df8: mov byte ptr [rsp+0xd],bl
0x2dfc: jmp 0x2aa9
0x2e01: movzx edx,byte ptr [rsp+0xd]
0x2e06: xor r12d,r12d
0x2e09: jmp 0x2910
0x2e0e: xor r10d,r10d
0x2e11: jmp 0x29cd
0x2e16: mov qword ptr [rsp+0x50],0x0
0x2e1f: mov byte ptr [rsp+0xe],0x1
0x2e24: xor r12d,r12d
0x2e27: mov byte ptr [rsp+0x7c],0x0
0x2e2c: jmp 0x2c0b
0x2e31: mov r11,qword ptr [rsp+0x30]
0x2e36: mov rsi,r14
0x2e39: mov rcx,r13
0x2e3c: mov rax,rbx
0x2e3f: mov rdi,rbx
0x2e42: movzx r8d,byte ptr [rsp+0x7d]
0x2e48: movzx ebx,byte ptr [rsp+0x7e]
0x2e4d: mov r9,qword ptr [rsp+0x88]
0x2e55: cmp rsi,r11
0x2e58: movzx r10d,byte ptr [rsp+0x7f]
0x2e5e: mov r15,qword ptr [rsp+0x80]
0x2e66: mov r14,qword ptr [rsp+0x40]
0x2e6b: mov r13,qword ptr [rsp+0x70]
0x2e70: jae 0x2e98
0x2e72: cmp byte ptr [rcx],0x0
0x2e75: jne 0x2e87
0x2e77: jmp 0x2e98
0x2e79: nop dword ptr [rax+0x0]
0x2e80: cmp byte ptr [r9+rax*1],0x0
0x2e85: je 0x2e95
0x2e87: add rax,0x1
0x2e8b: lea rdx,[rbp+rax*1+0x0]
0x2e90: cmp r11,rdx
0x2e93: ja 0x2e80
0x2e95: mov rdi,rax
0x2e98: movzx edx,byte ptr [rsp+0xd]
0x2e9d: xor r12d,r12d
0x2ea0: jmp 0x2906
0x2ea5: mov rdi,rbx
0x2ea8: movzx r8d,byte ptr [rsp+0x7d]
0x2eae: movzx ebx,byte ptr [rsp+0x7e]
0x2eb3: movzx r10d,byte ptr [rsp+0x7f]
0x2eb9: mov r15,qword ptr [rsp+0x80]
0x2ec1: xor r12d,r12d
0x2ec4: mov r14,qword ptr [rsp+0x40]
0x2ec9: mov r13,qword ptr [rsp+0x70]
0x2ece: mov r11,qword ptr [rsp+0x30]
0x2ed3: movzx edx,byte ptr [rsp+0xd]
0x2ed8: jmp 0x2906
0x2edd: mov rdx,qword ptr [rsp+0x68]
0x2ee2: movzx eax,byte ptr [rdx]
0x2ee5: test al,al
0x2ee7: je 0x2d1c
0x2eed: nop dword ptr [rax]
0x2ef0: cmp r13,r15
0x2ef3: jbe 0x2ef9
0x2ef5: mov byte ptr [r14+r15*1],al
0x2ef9: add r15,0x1
0x2efd: movzx eax,byte ptr [rdx+r15*1]
0x2f02: test al,al
0x2f04: jne 0x2ef0
0x2f06: jmp 0x2d1c
0x2f0b: mov eax,edx
0x2f0d: jmp 0x2467
0x2f12: movzx ebx,byte ptr [rax+rcx*1]
0x2f16: cmp bl,0x3e
0x2f19: ja 0x2790
0x2f1f: movabs rax,0x7000a38200000000
0x2f29: bt rax,rbx
0x2f2d: jae 0x2790
0x2f33: cmp byte ptr [rsp+0xf],0x0
0x2f38: jne 0x3122
0x2f3e: cmp r13,r15
0x2f41: jbe 0x2f48
0x2f43: mov byte ptr [r14+r15*1],0x3f
0x2f48: lea rax,[r15+0x1]
0x2f4c: cmp r13,rax
0x2f4f: jbe 0x2f57
0x2f51: mov byte ptr [r14+r15*1+0x1],0x22
0x2f57: lea rax,[r15+0x2]
0x2f5b: cmp r13,rax
0x2f5e: jbe 0x2f66
0x2f60: mov byte ptr [r14+r15*1+0x2],0x22
0x2f66: lea rax,[r15+0x3]
0x2f6a: cmp r13,rax
0x2f6d: jbe 0x2f75
0x2f6f: mov byte ptr [r14+r15*1+0x3],0x3f
0x2f75: add r15,0x4
0x2f79: xor edx,edx
0x2f7b: xor r12d,r12d
0x2f7e: xor eax,eax
0x2f80: mov rbp,rcx
0x2f83: jmp 0x2148
0x2f88: test ebx,ebx
0x2f8a: je 0x3118
0x2f90: lea rax,[rip+0x1a36]
0x2f97: mov byte ptr [rsp+0xe],0x1
0x2f9c: mov byte ptr [rsp+0x7c],0x0
0x2fa1: xor r12d,r12d
0x2fa4: mov qword ptr [rsp+0x50],0x0
0x2fad: mov byte ptr [rsp+0xf],0x1
0x2fb2: mov byte ptr [rsp+0xd],0x0
0x2fb7: mov qword ptr [rsp+0x18],0x1
0x2fc0: xor r15d,r15d
0x2fc3: mov qword ptr [rsp+0x48],rax
0x2fc8: jmp 0x1ff3
0x2fcd: nop dword ptr [rax]
0x2fd0: mov rbp,r11
0x2fd3: movzx eax,byte ptr [rsp+0xf]
0x2fd8: jmp 0x2aa9
0x2fdd: lea rax,[rip+0x19e7]
0x2fe4: mov byte ptr [rsp+0xe],0x1
0x2fe9: mov byte ptr [rsp+0x7c],0x0
0x2fee: xor r12d,r12d
0x2ff1: mov qword ptr [rsp+0x50],0x0
0x2ffa: mov byte ptr [rsp+0xf],0x1
0x2fff: mov byte ptr [rsp+0xd],0x1
0x3004: mov qword ptr [rsp+0x18],0x1
0x300d: xor r15d,r15d
0x3010: mov qword ptr [rsp+0x48],rax
0x3015: jmp 0x1ff3
0x301a: mov eax,edx
0x301c: mov rbx,qword ptr [rsp+0x48]
0x3021: test rbx,rbx
0x3024: je 0x3052
0x3026: test al,al
0x3028: je 0x3052
0x302a: movzx ecx,byte ptr [rbx]
0x302d: mov rax,rbx
0x3030: test cl,cl
0x3032: je 0x3052
0x3034: mov rdx,r15
0x3037: sub rax,r15
0x303a: cmp r13,rdx
0x303d: jbe 0x3043
0x303f: mov byte ptr [r14+rdx*1],cl
0x3043: add rdx,0x1
0x3047: movzx ecx,byte ptr [rax+rdx*1]
0x304b: test cl,cl
0x304d: jne 0x303a
0x304f: mov r15,rdx
0x3052: cmp r13,r15
0x3055: jbe 0x2af9
0x305b: mov byte ptr [r14+r15*1],0x0
0x3060: jmp 0x2af9
0x3065: cmp dword ptr [rsp+0x8],0x2
0x306a: movzx ebx,byte ptr [rsp+0xf]
0x306f: mov rbp,r11
0x3072: sete al
0x3075: mov byte ptr [rsp+0xd],bl
0x3079: jmp 0x2aa9
0x307e: mov esi,dword ptr [rsp+0x8]
0x3082: mov rdi,rcx
0x3085: call 0x1e30
0x308a: mov qword ptr [rsp+0x68],rax
0x308f: jmp 0x2ce6
0x3094: mov esi,dword ptr [rsp+0x8]
0x3098: mov rdi,rcx
0x309b: call 0x1e30
0x30a0: mov qword ptr [rsp+0x60],rax
0x30a5: jmp 0x2d11
0x30aa: movzx ebx,byte ptr [rsp+0xf]
0x30af: mov rbp,r11
0x30b2: mov eax,edx
0x30b4: mov byte ptr [rsp+0xd],bl
0x30b8: jmp 0x2aa9
0x30bd: sub rsp,0x8
0x30c1: mov r8d,0x5
0x30c7: mov rcx,r11
0x30ca: push qword ptr [rsp+0x68]
0x30ce: push qword ptr [rsp+0x78]
0x30d2: mov rdi,r14
0x30d5: push qword ptr [rsp+0x38]
0x30d9: mov r9d,dword ptr [rsp+0x98]
0x30e1: mov rdx,qword ptr [rsp+0x30]
0x30e6: mov rsi,qword ptr [rsp+0x70]
0x30eb: call 0x1f20
0x30f0: add rsp,0x20
0x30f4: mov r15,rax
0x30f7: jmp 0x2af9
0x30fc: movzx eax,byte ptr [rsp+0x7c]
0x3101: jmp 0x301c
0x3106: mov dword ptr [rsp+0x8],0x2
0x310e: jmp 0x2aa9
0x3113: call 0x12f0
0x3118: mov byte ptr [rsp+0xd],0x0
0x311d: jmp 0x2b91
0x3122: mov rbp,r11
0x3125: jmp 0x2ac0
0x312a: mov byte ptr [rsp+0xe],0x1
0x312f: xor eax,eax
0x3131: xor r12d,r12d
0x3134: mov qword ptr [rsp+0x50],0x0
0x313d: jmp 0x26e4
0x3142: mov rdx,r13
0x3145: mov r13,qword ptr [rsp+0x50]
0x314a: jmp 0x2742
0x314f: call 0x1230
0x3154: xchg ax,ax
0x3156: nop word ptr cs:[rax+rax*1+0x0]
0x3160: push r15
0x3162: push r14
0x3164: movsxd r15,edi
0x3167: push r13
0x3169: push r12
0x316b: mov r14,rdx
0x316e: push rbp
0x316f: push rbx
0x3170: mov rbp,rcx
0x3173: sub rsp,0x28
0x3177: mov qword ptr [rsp+0x8],rsi
0x317c: call 0x1240
0x3181: mov r13,rax
0x3184: mov eax,dword ptr [rax]
0x3186: test r15d,r15d
0x3189: mov rbx,qword ptr [rip+0x203ed0]
0x3190: mov dword ptr [rsp+0x18],eax
0x3194: js 0x3301
0x319a: cmp dword ptr [rip+0x203eb7],r15d
0x31a1: jg 0x3205
0x31a3: cmp r15d,0x7fffffff
0x31aa: je 0x3306
0x31b0: lea r12d,[r15+0x1]
0x31b4: lea rax,[rip+0x203eb5]
0x31bb: movsxd rsi,r12d
0x31be: shl rsi,0x4
0x31c2: cmp rbx,rax
0x31c5: je 0x32e0
0x31cb: mov rdi,rbx
0x31ce: call 0x4140
0x31d3: mov rbx,rax
0x31d6: mov qword ptr [rip+0x203e83],rax
0x31dd: movsxd rdi,dword ptr [rip+0x203e74]
0x31e4: mov edx,r12d
0x31e7: xor esi,esi
0x31e9: sub edx,edi
0x31eb: shl rdi,0x4
0x31ef: movsxd rdx,edx
0x31f2: add rdi,rbx
0x31f5: shl rdx,0x4
0x31f9: call 0x1340
0x31fe: mov dword ptr [rip+0x203e53],r12d
0x3205: mov eax,dword ptr [rbp+0x4]
0x3208: shl r15,0x4
0x320c: sub rsp,0x8
0x3210: add rbx,r15
0x3213: lea r15,[rbp+0x8]
0x3217: mov r8d,dword ptr [rbp+0x0]
0x321b: mov r11,qword ptr [rbx]
0x321e: mov r12,qword ptr [rbx+0x8]
0x3222: mov rcx,r14
0x3225: or eax,0x1
0x3228: mov dword ptr [rsp+0x24],eax
0x322c: push qword ptr [rbp+0x30]
0x322f: mov r9d,eax
0x3232: push qword ptr [rbp+0x28]
0x3235: push r15
0x3237: mov rsi,r11
0x323a: mov rdx,qword ptr [rsp+0x28]
0x323f: mov rdi,r12
0x3242: mov qword ptr [rsp+0x30],r11
0x3247: call 0x1f20
0x324c: add rsp,0x20
0x3250: mov r11,qword ptr [rsp+0x10]
0x3255: cmp r11,rax
0x3258: ja 0x32c1
0x325a: lea rsi,[rax+0x1]
0x325e: lea rax,[rip+0x203e9b]
0x3265: cmp r12,rax
0x3268: mov qword ptr [rbx],rsi
0x326b: je 0x327f
0x326d: mov rdi,r12
0x3270: mov qword ptr [rsp+0x10],rsi
0x3275: call 0x1220
0x327a: mov rsi,qword ptr [rsp+0x10]
0x327f: mov rdi,rsi
0x3282: mov qword ptr [rsp+0x10],rsi
0x3287: call 0x40e0
0x328c: sub rsp,0x8
0x3290: mov qword ptr [rbx+0x8],rax
0x3294: mov r8d,dword ptr [rbp+0x0]
0x3298: push qword ptr [rbp+0x30]
0x329b: push qword ptr [rbp+0x28]
0x329e: mov rcx,r14
0x32a1: push r15
0x32a3: mov r9d,dword ptr [rsp+0x3c]
0x32a8: mov rdi,rax
0x32ab: mov rdx,qword ptr [rsp+0x28]
0x32b0: mov rsi,qword ptr [rsp+0x30]
0x32b5: mov r12,rax
0x32b8: call 0x1f20
0x32bd: add rsp,0x20
0x32c1: mov eax,dword ptr [rsp+0x18]
0x32c5: mov dword ptr [r13+0x0],eax
0x32c9: add rsp,0x28
0x32cd: mov rax,r12
0x32d0: pop rbx
0x32d1: pop rbp
0x32d2: pop r12
0x32d4: pop r13
0x32d6: pop r14
0x32d8: pop r15
0x32da: ret 
0x32db: nop dword ptr [rax+rax*1+0x0]
0x32e0: xor edi,edi
0x32e2: call 0x4140
0x32e7: movdqa xmm0,xmmword ptr [rip+0x203d81]
0x32ef: mov rbx,rax
0x32f2: mov qword ptr [rip+0x203d67],rax
0x32f9: movups xmmword ptr [rax],xmm0
0x32fc: jmp 0x31dd
0x3301: call 0x1230
0x3306: call 0x4330
0x330b: nop dword ptr [rax+rax*1+0x0]
0x3310: push r12
0x3312: push rbp
0x3313: push rbx
0x3314: mov rbx,rdi
0x3317: call 0x1240
0x331c: mov r12d,dword ptr [rax]
0x331f: mov rbp,rax
0x3322: lea rax,[rip+0x203ed7]
0x3329: test rbx,rbx
0x332c: mov esi,0x38
0x3331: cmove rbx,rax
0x3335: mov rdi,rbx
0x3338: call 0x42e0
0x333d: mov dword ptr [rbp+0x0],r12d
0x3341: pop rbx
0x3342: pop rbp
0x3343: pop r12
0x3345: ret 
0x3346: nop word ptr cs:[rax+rax*1+0x0]
0x3350: lea rax,[rip+0x203ea9]
0x3357: test rdi,rdi
0x335a: cmove rdi,rax
0x335e: mov eax,dword ptr [rdi]
0x3360: ret 
0x3361: nop dword ptr [rax+rax*1+0x0]
0x3366: nop word ptr cs:[rax+rax*1+0x0]
0x3370: lea rax,[rip+0x203e89]
0x3377: test rdi,rdi
0x337a: cmove rdi,rax
0x337e: mov dword ptr [rdi],esi
0x3380: ret 
0x3381: nop dword ptr [rax+rax*1+0x0]
0x3386: nop word ptr cs:[rax+rax*1+0x0]
0x3390: lea rax,[rip+0x203e69]
0x3397: test rdi,rdi
0x339a: mov ecx,esi
0x339c: cmove rdi,rax
0x33a0: mov eax,esi
0x33a2: and ecx,0x1f
0x33a5: shr al,0x5
0x33a8: movzx eax,al
0x33ab: lea rdi,[rdi+rax*4+0x8]
0x33b0: mov esi,dword ptr [rdi]
0x33b2: mov eax,esi
0x33b4: shr eax,cl
0x33b6: xor edx,eax
0x33b8: and eax,0x1
0x33bb: and edx,0x1
0x33be: shl edx,cl
0x33c0: xor edx,esi
0x33c2: mov dword ptr [rdi],edx
0x33c4: ret 
0x33c5: nop 
0x33c6: nop word ptr cs:[rax+rax*1+0x0]
0x33d0: lea rax,[rip+0x203e29]
0x33d7: test rdi,rdi
0x33da: cmove rdi,rax
0x33de: mov eax,dword ptr [rdi+0x4]
0x33e1: mov dword ptr [rdi+0x4],esi
0x33e4: ret 
0x33e5: nop 
0x33e6: nop word ptr cs:[rax+rax*1+0x0]
0x33f0: lea rax,[rip+0x203e09]
0x33f7: test rdi,rdi
0x33fa: cmove rdi,rax
0x33fe: test rsi,rsi
0x3401: mov dword ptr [rdi],0xa
0x3407: je 0x3417
0x3409: test rdx,rdx
0x340c: je 0x3417
0x340e: mov qword ptr [rdi+0x28],rsi
0x3412: mov qword ptr [rdi+0x30],rdx
0x3416: ret 
0x3417: sub rsp,0x8
0x341b: call 0x1230
0x3420: push r15
0x3422: push r14
0x3424: lea rax,[rip+0x203dd5]
0x342b: push r13
0x342d: push r12
0x342f: mov r13,rdi
0x3432: push rbp
0x3433: push rbx
0x3434: mov rbx,r8
0x3437: mov r14,rsi
0x343a: mov r15,rdx
0x343d: sub rsp,0x18
0x3441: test r8,r8
0x3444: cmove rbx,rax
0x3448: mov qword ptr [rsp+0x8],rcx
0x344d: call 0x1240
0x3452: mov r12d,dword ptr [rax]
0x3455: mov rbp,rax
0x3458: lea rax,[rbx+0x8]
0x345c: sub rsp,0x8
0x3460: mov r9d,dword ptr [rbx+0x4]
0x3464: push qword ptr [rbx+0x30]
0x3467: mov r8d,dword ptr [rbx]
0x346a: push qword ptr [rbx+0x28]
0x346d: mov rdx,r15
0x3470: push rax
0x3471: mov rcx,qword ptr [rsp+0x28]
0x3476: mov rsi,r14
0x3479: mov rdi,r13
0x347c: call 0x1f20
0x3481: mov dword ptr [rbp+0x0],r12d
0x3485: add rsp,0x38
0x3489: pop rbx
0x348a: pop rbp
0x348b: pop r12
0x348d: pop r13
0x348f: pop r14
0x3491: pop r15
0x3493: ret 
0x3494: xchg ax,ax
0x3496: nop word ptr cs:[rax+rax*1+0x0]
0x34a0: push r15
0x34a2: push r14
0x34a4: lea rax,[rip+0x203d55]
0x34ab: push r13
0x34ad: push r12
0x34af: mov r12,rdx
0x34b2: push rbp
0x34b3: push rbx
0x34b4: mov rbx,rcx
0x34b7: mov r14,rdi
0x34ba: mov r15,rsi
0x34bd: sub rsp,0x38
0x34c1: test rcx,rcx
0x34c4: cmove rbx,rax
0x34c8: xor ebp,ebp
0x34ca: call 0x1240
0x34cf: test r12,r12
0x34d2: mov r13,rax
0x34d5: mov eax,dword ptr [rax]
0x34d7: sete bpl
0x34db: or ebp,dword ptr [rbx+0x4]
0x34de: lea r10,[rbx+0x8]
0x34e2: sub rsp,0x8
0x34e6: mov r8d,dword ptr [rbx]
0x34e9: mov rcx,r15
0x34ec: mov dword ptr [rsp+0x14],eax
0x34f0: push qword ptr [rbx+0x30]
0x34f3: mov rdx,r14
0x34f6: push qword ptr [rbx+0x28]
0x34f9: push r10
0x34fb: xor esi,esi
0x34fd: mov r9d,ebp
0x3500: xor edi,edi
0x3502: mov qword ptr [rsp+0x40],r10
0x3507: call 0x1f20
0x350c: lea rsi,[rax+0x1]
0x3510: mov qword ptr [rsp+0x48],rax
0x3515: add rsp,0x20
0x3519: mov rdi,rsi
0x351c: mov qword ptr [rsp+0x18],rsi
0x3521: call 0x40e0
0x3526: mov qword ptr [rsp+0x10],rax
0x352b: sub rsp,0x8
0x352f: push qword ptr [rbx+0x30]
0x3532: push qword ptr [rbx+0x28]
0x3535: mov r10,qword ptr [rsp+0x38]
0x353a: mov r9d,ebp
0x353d: mov r8d,dword ptr [rbx]
0x3540: mov rcx,r15
0x3543: mov rdx,r14
0x3546: mov rdi,rax
0x3549: push r10
0x354b: mov rsi,qword ptr [rsp+0x38]
0x3550: call 0x1f20
0x3555: mov eax,dword ptr [rsp+0x2c]
0x3559: add rsp,0x20
0x355d: test r12,r12
0x3560: mov dword ptr [r13+0x0],eax
0x3564: je 0x356f
0x3566: mov r11,qword ptr [rsp+0x28]
0x356b: mov qword ptr [r12],r11
0x356f: mov rax,qword ptr [rsp+0x10]
0x3574: add rsp,0x38
0x3578: pop rbx
0x3579: pop rbp
0x357a: pop r12
0x357c: pop r13
0x357e: pop r14
0x3580: pop r15
0x3582: ret 
0x3583: nop dword ptr [rax]
0x3586: nop word ptr cs:[rax+rax*1+0x0]
0x3590: mov rcx,rdx
0x3593: xor edx,edx
0x3595: jmp 0x34a0
0x359a: nop word ptr [rax+rax*1+0x0]
0x35a0: mov eax,dword ptr [rip+0x203ab2]
0x35a6: push r12
0x35a8: mov r12,qword ptr [rip+0x203ab1]
0x35af: push rbp
0x35b0: push rbx
0x35b1: cmp eax,0x1
0x35b4: jle 0x35e1
0x35b6: sub eax,0x2
0x35b9: lea rbx,[r12+0x18]
0x35be: shl rax,0x4
0x35c2: lea rbp,[r12+rax*1+0x28]
0x35c7: nop word ptr [rax+rax*1+0x0]
0x35d0: mov rdi,qword ptr [rbx]
0x35d3: add rbx,0x10
0x35d7: call 0x1220
0x35dc: cmp rbx,rbp
0x35df: jne 0x35d0
0x35e1: mov rdi,qword ptr [r12+0x8]
0x35e6: lea rbx,[rip+0x203b13]
0x35ed: cmp rdi,rbx
0x35f0: je 0x3609
0x35f2: call 0x1220
0x35f7: mov qword ptr [rip+0x203a6e],0x100
0x3602: mov qword ptr [rip+0x203a6f],rbx
0x3609: lea rbx,[rip+0x203a60]
0x3610: cmp r12,rbx
0x3613: je 0x3624
0x3615: mov rdi,r12
0x3618: call 0x1220
0x361d: mov qword ptr [rip+0x203a3c],rbx
0x3624: pop rbx
0x3625: mov dword ptr [rip+0x203a29],0x1
0x362f: pop rbp
0x3630: pop r12
0x3632: ret 
0x3633: nop dword ptr [rax]
0x3636: nop word ptr cs:[rax+rax*1+0x0]
0x3640: lea rcx,[rip+0x203bb9]
0x3647: mov rdx,0xffffffffffffffff
0x364e: jmp 0x3160
0x3653: nop dword ptr [rax]
0x3656: nop word ptr cs:[rax+rax*1+0x0]
0x3660: lea rcx,[rip+0x203b99]
0x3667: jmp 0x3160
0x366c: nop dword ptr [rax+0x0]
0x3670: lea rcx,[rip+0x203b89]
0x3677: mov rsi,rdi
0x367a: mov rdx,0xffffffffffffffff
0x3681: xor edi,edi
0x3683: jmp 0x3160
0x3688: nop dword ptr [rax+rax*1+0x0]
0x3690: lea rcx,[rip+0x203b69]
0x3697: mov rdx,rsi
0x369a: mov rsi,rdi
0x369d: xor edi,edi
0x369f: jmp 0x3160
0x36a4: xchg ax,ax
0x36a6: nop word ptr cs:[rax+rax*1+0x0]
0x36b0: sub rsp,0x48
0x36b4: mov rax,rdx
0x36b7: mov rdx,qword ptr fs:0x28
0x36c0: mov qword ptr [rsp+0x38],rdx
0x36c5: xor edx,edx
0x36c7: cmp esi,0xa
0x36ca: je 0x3734
0x36cc: mov dword ptr [rsp],esi
0x36cf: mov rcx,rsp
0x36d2: mov rdx,0xffffffffffffffff
0x36d9: mov rsi,rax
0x36dc: mov qword ptr [rsp+0x4],0x0
0x36e5: mov qword ptr [rsp+0xc],0x0
0x36ee: mov qword ptr [rsp+0x14],0x0
0x36f7: mov qword ptr [rsp+0x1c],0x0
0x3700: mov qword ptr [rsp+0x24],0x0
0x3709: mov qword ptr [rsp+0x2c],0x0
0x3712: mov dword ptr [rsp+0x34],0x0
0x371a: call 0x3160
0x371f: mov rcx,qword ptr [rsp+0x38]
0x3724: xor rcx,qword ptr fs:0x28
0x372d: jne 0x3739
0x372f: add rsp,0x48
0x3733: ret 
0x3734: call 0x1230
0x3739: call 0x12f0
0x373e: xchg ax,ax
0x3740: sub rsp,0x48
0x3744: mov rax,rdx
0x3747: mov rdx,rcx
0x374a: mov rcx,qword ptr fs:0x28
0x3753: mov qword ptr [rsp+0x38],rcx
0x3758: xor ecx,ecx
0x375a: cmp esi,0xa
0x375d: je 0x37c0
0x375f: mov dword ptr [rsp],esi
0x3762: mov rcx,rsp
0x3765: mov rsi,rax
0x3768: mov qword ptr [rsp+0x4],0x0
0x3771: mov qword ptr [rsp+0xc],0x0
0x377a: mov qword ptr [rsp+0x14],0x0
0x3783: mov qword ptr [rsp+0x1c],0x0
0x378c: mov qword ptr [rsp+0x24],0x0
0x3795: mov qword ptr [rsp+0x2c],0x0
0x379e: mov dword ptr [rsp+0x34],0x0
0x37a6: call 0x3160
0x37ab: mov rdx,qword ptr [rsp+0x38]
0x37b0: xor rdx,qword ptr fs:0x28
0x37b9: jne 0x37c5
0x37bb: add rsp,0x48
0x37bf: ret 
0x37c0: call 0x1230
0x37c5: call 0x12f0
0x37ca: nop word ptr [rax+rax*1+0x0]
0x37d0: mov rdx,rsi
0x37d3: mov esi,edi
0x37d5: xor edi,edi
0x37d7: jmp 0x36b0
0x37dc: nop dword ptr [rax+0x0]
0x37e0: mov rcx,rdx
0x37e3: mov rdx,rsi
0x37e6: mov esi,edi
0x37e8: xor edi,edi
0x37ea: jmp 0x3740
0x37ef: nop 
0x37f0: sub rsp,0x48
0x37f4: mov ecx,edx
0x37f6: mov rax,qword ptr fs:0x28
0x37ff: mov qword ptr [rsp+0x38],rax
0x3804: xor eax,eax
0x3806: mov rax,qword ptr [rip+0x203a23]
0x380d: mov r8,rsp
0x3810: and ecx,0x1f
0x3813: movdqa xmm0,xmmword ptr [rip+0x2039e5]
0x381b: mov qword ptr [rsp+0x30],rax
0x3820: mov eax,edx
0x3822: movaps xmmword ptr [rsp],xmm0
0x3826: shr al,0x5
0x3829: movzx eax,al
0x382c: lea r9,[r8+rax*4+0x8]
0x3831: movdqa xmm0,xmmword ptr [rip+0x2039d7]
0x3839: movaps xmmword ptr [rsp+0x10],xmm0
0x383e: movdqa xmm0,xmmword ptr [rip+0x2039da]
0x3846: movaps xmmword ptr [rsp+0x20],xmm0
0x384b: mov edx,dword ptr [r9]
0x384e: mov eax,edx
0x3850: shr eax,cl
0x3852: not eax
0x3854: and eax,0x1
0x3857: shl eax,cl
0x3859: mov rcx,r8
0x385c: xor eax,edx
0x385e: mov rdx,rsi
0x3861: mov rsi,rdi
0x3864: mov dword ptr [r9],eax
0x3867: xor edi,edi
0x3869: call 0x3160
0x386e: mov rsi,qword ptr [rsp+0x38]
0x3873: xor rsi,qword ptr fs:0x28
0x387c: jne 0x3883
0x387e: add rsp,0x48
0x3882: ret 
0x3883: call 0x12f0
0x3888: nop dword ptr [rax+rax*1+0x0]
0x3890: movsx edx,sil
0x3894: mov rsi,0xffffffffffffffff
0x389b: jmp 0x37f0
0x38a0: mov edx,0x3a
0x38a5: mov rsi,0xffffffffffffffff
0x38ac: jmp 0x37f0
0x38b1: nop dword ptr [rax+rax*1+0x0]
0x38b6: nop word ptr cs:[rax+rax*1+0x0]
0x38c0: mov edx,0x3a
0x38c5: jmp 0x37f0
0x38ca: nop word ptr [rax+rax*1+0x0]
0x38d0: sub rsp,0x48
0x38d4: mov rax,rdx
0x38d7: mov rdx,qword ptr fs:0x28
0x38e0: mov qword ptr [rsp+0x38],rdx
0x38e5: xor edx,edx
0x38e7: cmp esi,0xa
0x38ea: je 0x3954
0x38ec: mov dword ptr [rsp],esi
0x38ef: mov rcx,rsp
0x38f2: mov rdx,0xffffffffffffffff
0x38f9: mov rsi,rax
0x38fc: mov qword ptr [rsp+0x4],0x0
0x3905: mov qword ptr [rsp+0xc],0x4000000
0x390e: mov qword ptr [rsp+0x14],0x0
0x3917: mov qword ptr [rsp+0x1c],0x0
0x3920: mov qword ptr [rsp+0x24],0x0
0x3929: mov qword ptr [rsp+0x2c],0x0
0x3932: mov dword ptr [rsp+0x34],0x0
0x393a: call 0x3160
0x393f: mov rcx,qword ptr [rsp+0x38]
0x3944: xor rcx,qword ptr fs:0x28
0x394d: jne 0x3959
0x394f: add rsp,0x48
0x3953: ret 
0x3954: call 0x1230
0x3959: call 0x12f0
0x395e: xchg ax,ax
0x3960: sub rsp,0x48
0x3964: mov r9,rcx
0x3967: mov rcx,qword ptr [rip+0x2038c2]
0x396e: movdqa xmm0,xmmword ptr [rip+0x20388a]
0x3976: mov rax,qword ptr fs:0x28
0x397f: mov qword ptr [rsp+0x38],rax
0x3984: xor eax,eax
0x3986: movaps xmmword ptr [rsp],xmm0
0x398a: test rsi,rsi
0x398d: mov qword ptr [rsp+0x30],rcx
0x3992: mov dword ptr [rsp],0xa
0x3999: movdqa xmm0,xmmword ptr [rip+0x20386f]
0x39a1: movaps xmmword ptr [rsp+0x10],xmm0
0x39a6: movdqa xmm0,xmmword ptr [rip+0x203872]
0x39ae: movaps xmmword ptr [rsp+0x20],xmm0
0x39b3: je 0x39e7
0x39b5: test rdx,rdx
0x39b8: je 0x39e7
0x39ba: mov qword ptr [rsp+0x28],rsi
0x39bf: mov qword ptr [rsp+0x30],rdx
0x39c4: mov rcx,rsp
0x39c7: mov rdx,r8
0x39ca: mov rsi,r9
0x39cd: call 0x3160
0x39d2: mov rdi,qword ptr [rsp+0x38]
0x39d7: xor rdi,qword ptr fs:0x28
0x39e0: jne 0x39ec
0x39e2: add rsp,0x48
0x39e6: ret 
0x39e7: call 0x1230
0x39ec: call 0x12f0
0x39f1: nop dword ptr [rax+rax*1+0x0]
0x39f6: nop word ptr cs:[rax+rax*1+0x0]
0x3a00: mov r8,0xffffffffffffffff
0x3a07: jmp 0x3960
0x3a0c: nop dword ptr [rax+0x0]
0x3a10: mov rcx,rdx
0x3a13: mov r8,0xffffffffffffffff
0x3a1a: mov rdx,rsi
0x3a1d: mov rsi,rdi
0x3a20: xor edi,edi
0x3a22: jmp 0x3960
0x3a27: nop word ptr [rax+rax*1+0x0]
0x3a30: mov r8,rcx
0x3a33: mov rcx,rdx
0x3a36: mov rdx,rsi
0x3a39: mov rsi,rdi
0x3a3c: xor edi,edi
0x3a3e: jmp 0x3960
0x3a43: nop dword ptr [rax]
0x3a46: nop word ptr cs:[rax+rax*1+0x0]
0x3a50: lea rcx,[rip+0x2035c9]
0x3a57: jmp 0x3160
0x3a5c: nop dword ptr [rax+0x0]
0x3a60: lea rcx,[rip+0x2035b9]
0x3a67: mov rdx,rsi
0x3a6a: mov rsi,rdi
0x3a6d: xor edi,edi
0x3a6f: jmp 0x3160
0x3a74: xchg ax,ax
0x3a76: nop word ptr cs:[rax+rax*1+0x0]
0x3a80: lea rcx,[rip+0x203599]
0x3a87: mov rdx,0xffffffffffffffff
0x3a8e: jmp 0x3160
0x3a93: nop dword ptr [rax]
0x3a96: nop word ptr cs:[rax+rax*1+0x0]
0x3aa0: lea rcx,[rip+0x203579]
0x3aa7: mov rsi,rdi
0x3aaa: mov rdx,0xffffffffffffffff
0x3ab1: xor edi,edi
0x3ab3: jmp 0x3160
0x3ab8: nop dword ptr [rax+rax*1+0x0]
0x3b66: nop word ptr cs:[rax+rax*1+0x0]
0x3bf5: nop dword ptr [rax]
0x3c16: nop word ptr cs:[rax+rax*1+0x0]
0x3c75: nop dword ptr [rax]
0x3cb1: nop dword ptr [rax+0x0]
0x3cf8: nop dword ptr [rax+rax*1+0x0]
0x3d47: nop word ptr [rax+rax*1+0x0]
0x3da4: nop dword ptr [rax+0x0]
0x3dd2: nop word ptr [rax+rax*1+0x0]
0x3e86: nop word ptr cs:[rax+rax*1+0x0]
0x3ed7: nop word ptr [rax+rax*1+0x0]
0x3ee0: xor r9d,r9d
0x3ee3: cmp qword ptr [r8],0x0
0x3ee7: je 0x3efb
0x3ee9: nop dword ptr [rax+0x0]
0x3ef0: add r9,0x1
0x3ef4: cmp qword ptr [r8+r9*8],0x0
0x3ef9: jne 0x3ef0
0x3efb: jmp 0x3ac0
0x3f78: nop dword ptr [rax+rax*1+0x0]
0x3f80: push rbp
0x3f81: push rbx
0x3f82: mov r10d,0x20
0x3f88: xor r11d,r11d
0x3f8b: sub rsp,0xb8
0x3f92: mov rax,qword ptr fs:0x28
0x3f9b: mov qword ptr [rsp+0x78],rax
0x3fa0: xor eax,eax
0x3fa2: lea rax,[rsp+0xd0]
0x3faa: mov qword ptr [rsp+0xa0],r8
0x3fb2: lea rbx,[rsp+0xd0]
0x3fba: lea r8,[rsp+0x20]
0x3fbf: mov qword ptr [rsp+0xa8],r9
0x3fc7: mov dword ptr [rsp+0x8],0x20
0x3fcf: mov qword ptr [rsp+0x10],rax
0x3fd4: lea rax,[rsp+0x80]
0x3fdc: xor r9d,r9d
0x3fdf: mov qword ptr [rsp+0x18],rax
0x3fe4: mov rbp,rax
0x3fe7: nop word ptr [rax+rax*1+0x0]
0x3ff0: cmp r10d,0x2f
0x3ff4: ja 0x404c
0x3ff6: mov eax,r10d
0x3ff9: mov r11d,0x1
0x3fff: add r10d,0x8
0x4003: add rax,rbp
0x4006: mov rax,qword ptr [rax]
0x4009: test rax,rax
0x400c: mov qword ptr [r8+r9*8],rax
0x4010: je 0x401c
0x4012: add r9,0x1
0x4016: cmp r9,0xa
0x401a: jne 0x3ff0
0x401c: test r11b,r11b
0x401f: jne 0x4045
0x4021: call 0x3ac0
0x4026: mov rax,qword ptr [rsp+0x78]
0x402b: xor rax,qword ptr fs:0x28
0x4034: jne 0x4040
0x4036: add rsp,0xb8
0x403d: pop rbx
0x403e: pop rbp
0x403f: ret 
0x4040: call 0x12f0
0x4045: mov dword ptr [rsp+0x8],r10d
0x404a: jmp 0x4021
0x404c: mov rax,rbx
0x404f: add rbx,0x8
0x4053: jmp 0x4006
0x4055: nop 
0x4056: nop word ptr cs:[rax+rax*1+0x0]
0x4060: push rbx
0x4061: lea rsi,[rip+0xe7a]
0x4068: mov edx,0x5
0x406d: xor edi,edi
0x406f: call 0x12c0
0x4074: lea rdx,[rip+0xe7c]
0x407b: mov rsi,rax
0x407e: mov edi,0x1
0x4083: xor eax,eax
0x4085: call 0x1410
0x408a: lea rsi,[rip+0xe7c]
0x4091: mov edx,0x5
0x4096: xor edi,edi
0x4098: call 0x12c0
0x409d: lea rcx,[rip+0x804]
0x40a4: lea rdx,[rip+0x6cb]
0x40ab: mov rsi,rax
0x40ae: mov edi,0x1
0x40b3: xor eax,eax
0x40b5: call 0x1410
0x40ba: mov rbx,qword ptr [rip+0x202fc7]
0x40c1: lea rsi,[rip+0x1078]
0x40c8: xor edi,edi
0x40ca: mov edx,0x5
0x40cf: call 0x12c0
0x40d4: mov rsi,rbx
0x40d7: mov rdi,rax
0x40da: pop rbx
0x40db: jmp 0x1360
0x40e0: push rbx
0x40e1: mov rbx,rdi
0x40e4: call 0x13a0
0x40e9: test rax,rax
0x40ec: jne 0x40f3
0x40ee: test rbx,rbx
0x40f1: jne 0x40f5
0x40f3: pop rbx
0x40f4: ret 
0x40f5: call 0x4330
0x40fa: nop word ptr [rax+rax*1+0x0]
0x4100: mov rax,rdi
0x4103: mul rsi
0x4106: mov rdi,rax
0x4109: seto al
0x410c: test rdi,rdi
0x410f: js 0x411b
0x4111: movzx eax,al
0x4114: test rax,rax
0x4117: jne 0x411b
0x4119: jmp 0x40e0
0x411b: sub rsp,0x8
0x411f: call 0x4330
0x4124: xchg ax,ax
0x4126: nop word ptr cs:[rax+rax*1+0x0]
0x4130: jmp 0x40e0
0x4132: nop dword ptr [rax+0x0]
0x4136: nop word ptr cs:[rax+rax*1+0x0]
0x4140: test rsi,rsi
0x4143: push rbx
0x4144: mov rbx,rsi
0x4147: jne 0x414e
0x4149: test rdi,rdi
0x414c: jne 0x4168
0x414e: mov rsi,rbx
0x4151: call 0x13f0
0x4156: test rax,rax
0x4159: jne 0x4160
0x415b: test rbx,rbx
0x415e: jne 0x4171
0x4160: pop rbx
0x4161: ret 
0x4162: nop word ptr [rax+rax*1+0x0]
0x4168: call 0x1220
0x416d: xor eax,eax
0x416f: pop rbx
0x4170: ret 
0x4171: call 0x4330
0x4176: nop word ptr cs:[rax+rax*1+0x0]
0x4180: mov rax,rsi
0x4183: mul rdx
0x4186: mov rsi,rax
0x4189: seto al
0x418c: test rsi,rsi
0x418f: js 0x419b
0x4191: movzx eax,al
0x4194: test rax,rax
0x4197: jne 0x419b
0x4199: jmp 0x4140
0x419b: sub rsp,0x8
0x419f: call 0x4330
0x41a4: xchg ax,ax
0x41a6: nop word ptr cs:[rax+rax*1+0x0]
0x41b0: test rdi,rdi
0x41b3: mov r9,rdx
0x41b6: mov rcx,qword ptr [rsi]
0x41b9: je 0x41f0
0x41bb: xor edx,edx
0x41bd: movabs rax,0x5555555555555554
0x41c7: div r9
0x41ca: cmp rax,rcx
0x41cd: jbe 0x420b
0x41cf: mov rax,rcx
0x41d2: shr rax,0x1
0x41d5: lea rcx,[rax+rcx*1+0x1]
0x41da: mov qword ptr [rsi],rcx
0x41dd: imul rcx,r9
0x41e1: mov rsi,rcx
0x41e4: jmp 0x4140
0x41e9: nop dword ptr [rax+0x0]
0x41f0: test rcx,rcx
0x41f3: je 0x4218
0x41f5: mov rax,rcx
0x41f8: mul r9
0x41fb: seto dl
0x41fe: test rax,rax
0x4201: movzx edx,dl
0x4204: js 0x420b
0x4206: test rdx,rdx
0x4209: je 0x41da
0x420b: sub rsp,0x8
0x420f: call 0x4330
0x4214: nop dword ptr [rax+0x0]
0x4218: xor edx,edx
0x421a: mov eax,0x80
0x421f: xor r8d,r8d
0x4222: div r9
0x4225: test rax,rax
0x4228: sete r8b
0x422c: lea rcx,[r8+rax*1]
0x4230: jmp 0x41f5
0x4232: nop dword ptr [rax+0x0]
0x4236: nop word ptr cs:[rax+rax*1+0x0]
0x4240: test rdi,rdi
0x4243: mov rax,qword ptr [rsi]
0x4246: je 0x4270
0x4248: movabs rdx,0x5555555555555553
0x4252: cmp rax,rdx
0x4255: ja 0x4281
0x4257: mov rdx,rax
0x425a: shr rdx,0x1
0x425d: lea rax,[rdx+rax*1+0x1]
0x4262: mov qword ptr [rsi],rax
0x4265: mov rsi,rax
0x4268: jmp 0x4140
0x426d: nop dword ptr [rax]
0x4270: test rax,rax
0x4273: mov edx,0x80
0x4278: cmove rax,rdx
0x427c: test rax,rax
0x427f: jns 0x4262
0x4281: sub rsp,0x8
0x4285: call 0x4330
0x428a: nop word ptr [rax+rax*1+0x0]
0x4290: push rbx
0x4291: mov rbx,rdi
0x4294: call 0x40e0
0x4299: mov rdx,rbx
0x429c: xor esi,esi
0x429e: mov rdi,rax
0x42a1: pop rbx
0x42a2: jmp 0x1340
0x42a7: nop word ptr [rax+rax*1+0x0]
0x42b0: mov rax,rdi
0x42b3: sub rsp,0x8
0x42b7: mul rsi
0x42ba: seto dl
0x42bd: test rax,rax
0x42c0: js 0x42d9
0x42c2: movzx edx,dl
0x42c5: test rdx,rdx
0x42c8: jne 0x42d9
0x42ca: call 0x1370
0x42cf: test rax,rax
0x42d2: je 0x42d9
0x42d4: add rsp,0x8
0x42d8: ret 
0x42d9: call 0x4330
0x42de: xchg ax,ax
0x42e0: push rbp
0x42e1: push rbx
0x42e2: mov rbp,rdi
0x42e5: mov rdi,rsi
0x42e8: mov rbx,rsi
0x42eb: sub rsp,0x8
0x42ef: call 0x40e0
0x42f4: add rsp,0x8
0x42f8: mov rdx,rbx
0x42fb: mov rsi,rbp
0x42fe: pop rbx
0x42ff: pop rbp
0x4300: mov rdi,rax
0x4303: jmp 0x1380
0x4308: nop dword ptr [rax+rax*1+0x0]
0x4310: push rbx
0x4311: mov rbx,rdi
0x4314: call 0x12e0
0x4319: mov rdi,rbx
0x431c: lea rsi,[rax+0x1]
0x4320: pop rbx
0x4321: jmp 0x42e0
0x4323: nop word ptr cs:[rax+rax*1+0x0]
0x432d: nop dword ptr [rax]
0x4330: lea rsi,[rip+0xeb8]
0x4337: sub rsp,0x8
0x433b: mov edx,0x5
0x4340: xor edi,edi
0x4342: call 0x12c0
0x4347: mov edi,dword ptr [rip+0x202ccb]
0x434d: lea rdx,[rip+0x60c]
0x4354: mov rcx,rax
0x4357: xor esi,esi
0x4359: xor eax,eax
0x435b: call 0x1420
0x4360: call 0x1230
0x4365: nop word ptr cs:[rax+rax*1+0x0]
0x436f: nop 
0x4370: push r13
0x4372: push r12
0x4374: mov r13,rsi
0x4377: push rbp
0x4378: push rbx
0x4379: mov rbx,rdi
0x437c: mov r12,rdx
0x437f: sub rsp,0x18
0x4383: mov rax,qword ptr fs:0x28
0x438c: mov qword ptr [rsp+0x8],rax
0x4391: xor eax,eax
0x4393: lea rax,[rsp+0x4]
0x4398: test rdi,rdi
0x439b: cmove rbx,rax
0x439f: mov rdi,rbx
0x43a2: call 0x1310
0x43a7: cmp rax,0xfffffffffffffffd
0x43ab: mov rbp,rax
0x43ae: jbe 0x43d0
0x43b0: test r12,r12
0x43b3: je 0x43d0
0x43b5: xor edi,edi
0x43b7: call 0x4480
0x43bc: test al,al
0x43be: jne 0x43d0
0x43c0: movzx eax,byte ptr [r13+0x0]
0x43c5: mov ebp,0x1
0x43ca: mov dword ptr [rbx],eax
0x43cc: nop dword ptr [rax+0x0]
0x43d0: mov rdx,qword ptr [rsp+0x8]
0x43d5: xor rdx,qword ptr fs:0x28
0x43de: mov rax,rbp
0x43e1: jne 0x43ee
0x43e3: add rsp,0x18
0x43e7: pop rbx
0x43e8: pop rbp
0x43e9: pop r12
0x43eb: pop r13
0x43ed: ret 
0x43ee: call 0x12f0
0x43f3: nop word ptr cs:[rax+rax*1+0x0]
0x43fd: nop dword ptr [rax]
0x4400: push r12
0x4402: push rbp
0x4403: mov rbp,rdi
0x4406: push rbx
0x4407: call 0x1270
0x440c: mov ebx,dword ptr [rbp+0x0]
0x440f: mov rdi,rbp
0x4412: mov r12,rax
0x4415: call 0x4520
0x441a: and ebx,0x20
0x441d: test ebx,ebx
0x441f: jne 0x4438
0x4421: test eax,eax
0x4423: je 0x442f
0x4425: test r12,r12
0x4428: mov eax,0xffffffff
0x442d: je 0x4468
0x442f: pop rbx
0x4430: pop rbp
0x4431: pop r12
0x4433: ret 
0x4434: nop dword ptr [rax+0x0]
0x4438: test eax,eax
0x443a: jne 0x4458
0x443c: call 0x1240
0x4441: mov dword ptr [rax],0x0
0x4447: mov eax,0xffffffff
0x444c: pop rbx
0x444d: pop rbp
0x444e: pop r12
0x4450: ret 
0x4451: nop dword ptr [rax+0x0]
0x4458: pop rbx
0x4459: mov eax,0xffffffff
0x445e: pop rbp
0x445f: pop r12
0x4461: ret 
0x4462: nop word ptr [rax+rax*1+0x0]
0x4468: call 0x1240
0x446d: cmp dword ptr [rax],0x9
0x4470: pop rbx
0x4471: pop rbp
0x4472: pop r12
0x4474: setne al
0x4477: movzx eax,al
0x447a: neg eax
0x447c: ret 
0x447d: nop dword ptr [rax]
0x4480: sub rsp,0x8
0x4484: xor esi,esi
0x4486: call 0x1400
0x448b: mov rdx,rax
0x448e: mov eax,0x1
0x4493: test rdx,rdx
0x4496: je 0x44b5
0x4498: lea rdi,[rip+0xd61]
0x449f: mov ecx,0x2
0x44a4: mov rsi,rdx
0x44a7: repz cmps byte ptr ds:[rsi],byte ptr es:[rdi]
0x44a9: seta cl
0x44ac: sbb cl,0x0
0x44af: xor eax,eax
0x44b1: test cl,cl
0x44b3: jne 0x44c0
0x44b5: add rsp,0x8
0x44b9: ret 
0x44ba: nop word ptr [rax+rax*1+0x0]
0x44c0: lea rdi,[rip+0xd3b]
0x44c7: mov ecx,0x6
0x44cc: mov rsi,rdx
0x44cf: repz cmps byte ptr ds:[rsi],byte ptr es:[rdi]
0x44d1: seta al
0x44d4: sbb al,0x0
0x44d6: test al,al
0x44d8: setne al
0x44db: add rsp,0x8
0x44df: ret 
0x44e0: sub rsp,0x8
0x44e4: mov edi,0xe
0x44e9: call 0x13c0
0x44ee: test rax,rax
0x44f1: je 0x4510
0x44f3: cmp byte ptr [rax],0x0
0x44f6: lea rdx,[rip+0xd0b]
0x44fd: cmove rax,rdx
0x4501: add rsp,0x8
0x4505: ret 
0x4506: nop word ptr cs:[rax+rax*1+0x0]
0x4510: lea rax,[rip+0xcf1]
0x4517: add rsp,0x8
0x451b: ret 
0x451c: nop dword ptr [rax+0x0]
0x4520: push r12
0x4522: push rbp
0x4523: push rbx
0x4524: mov rbx,rdi
0x4527: call 0x1390
0x452c: test eax,eax
0x452e: mov rdi,rbx
0x4531: js 0x4587
0x4533: call 0x13e0
0x4538: test eax,eax
0x453a: jne 0x4568
0x453c: mov rdi,rbx
0x453f: call 0x45a0
0x4544: test eax,eax
0x4546: je 0x4584
0x4548: call 0x1240
0x454d: mov r12d,dword ptr [rax]
0x4550: mov rdi,rbx
0x4553: mov rbp,rax
0x4556: call 0x12a0
0x455b: test r12d,r12d
0x455e: jne 0x4590
0x4560: pop rbx
0x4561: pop rbp
0x4562: pop r12
0x4564: ret 
0x4565: nop dword ptr [rax]
0x4568: mov rdi,rbx
0x456b: call 0x1390
0x4570: xor esi,esi
0x4572: mov edx,0x1
0x4577: mov edi,eax
0x4579: call 0x1330
0x457e: cmp rax,0xffffffffffffffff
0x4582: jne 0x453c
0x4584: mov rdi,rbx
0x4587: pop rbx
0x4588: pop rbp
0x4589: pop r12
0x458b: jmp 0x12a0
0x4590: mov dword ptr [rbp+0x0],r12d
0x4594: mov eax,0xffffffff
0x4599: jmp 0x4560
0x459b: nop dword ptr [rax+rax*1+0x0]
0x45a0: test rdi,rdi
0x45a3: push rbx
0x45a4: mov rbx,rdi
0x45a7: je 0x45ba
0x45a9: call 0x13e0
0x45ae: test eax,eax
0x45b0: je 0x45ba
0x45b2: test dword ptr [rbx],0x100
0x45b8: jne 0x45c8
0x45ba: mov rdi,rbx
0x45bd: pop rbx
0x45be: jmp 0x13b0
0x45c3: nop dword ptr [rax+rax*1+0x0]
0x45c8: mov rdi,rbx
0x45cb: mov edx,0x1
0x45d0: xor esi,esi
0x45d2: call 0x45e0
0x45d7: mov rdi,rbx
0x45da: pop rbx
0x45db: jmp 0x13b0
0x45e0: mov rax,qword ptr [rdi+0x8]
0x45e4: cmp qword ptr [rdi+0x10],rax
0x45e8: je 0x45f0
0x45ea: jmp 0x1430
0x45ef: nop 
0x45f0: mov rax,qword ptr [rdi+0x20]
0x45f4: cmp qword ptr [rdi+0x28],rax
0x45f8: jne 0x45ea
0x45fa: cmp qword ptr [rdi+0x48],0x0
0x45ff: jne 0x45ea
0x4601: push r12
0x4603: push rbp
0x4604: mov r12d,edx
0x4607: push rbx
0x4608: mov rbp,rsi
0x460b: mov rbx,rdi
0x460e: call 0x1390
0x4613: mov edx,r12d
0x4616: mov rsi,rbp
0x4619: mov edi,eax
0x461b: call 0x1330
0x4620: cmp rax,0xffffffffffffffff
0x4624: je 0x4632
0x4626: and dword ptr [rbx],0xffffffef
0x4629: mov qword ptr [rbx+0x90],rax
0x4630: xor eax,eax
0x4632: pop rbx
0x4633: pop rbp
0x4634: pop r12
0x4636: ret 
0x4637: nop word ptr [rax+rax*1+0x0]
0x4640: push r15
0x4642: push r14
0x4644: mov r15,rdx
0x4647: push r13
0x4649: push r12
0x464b: lea r12,[rip+0x20255e]
0x4652: push rbp
0x4653: lea rbp,[rip+0x20255e]
0x465a: push rbx
0x465b: mov r13d,edi
0x465e: mov r14,rsi
0x4661: sub rbp,r12
0x4664: sub rsp,0x8
0x4668: sar rbp,0x3
0x466c: call 0x11f8
0x4671: test rbp,rbp
0x4674: je 0x4696
0x4676: xor ebx,ebx
0x4678: nop dword ptr [rax+rax*1+0x0]
0x4680: mov rdx,r15
0x4683: mov rsi,r14
0x4686: mov edi,r13d
0x4689: call qword ptr [r12+rbx*8]
0x468d: add rbx,0x1
0x4691: cmp rbp,rbx
0x4694: jne 0x4680
0x4696: add rsp,0x8
0x469a: pop rbx
0x469b: pop rbp
0x469c: pop r12
0x469e: pop r13
0x46a0: pop r14
0x46a2: pop r15
0x46a4: ret 
0x46a5: nop 
0x46a6: nop word ptr cs:[rax+rax*1+0x0]
0x46b0: repz ret 
0x46b2: nop word ptr cs:[rax+rax*1+0x0]
0x46bc: nop dword ptr [rax+0x0]
0x46d0: sub rsp,0x8
0x46d4: add rsp,0x8
0x46d8: ret 
3191
661
25
