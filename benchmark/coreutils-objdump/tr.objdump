


Disassembly of section .init:

00000000000015b0 <_init>:
15b0:	48 83 ec 08          	sub    rsp,0x8
15b4:	48 8b 05 25 9a 20 00 	mov    rax,QWORD PTR [rip+0x209a25]        # 20afe0 <__gmon_start__>
15bb:	48 85 c0             	test   rax,rax
15be:	74 02                	je     15c2 <_init+0x12>
15c0:	ff d0                	call   rax
15c2:	48 83 c4 08          	add    rsp,0x8
15c6:	c3                   	ret

Disassembly of section .plt:

00000000000015d0 <.plt>:
15d0:	ff 35 5a 98 20 00    	push   QWORD PTR [rip+0x20985a]        # 20ae30 <_GLOBAL_OFFSET_TABLE_+0x8>
15d6:	ff 25 5c 98 20 00    	jmp    QWORD PTR [rip+0x20985c]        # 20ae38 <_GLOBAL_OFFSET_TABLE_+0x10>
15dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000015e0 <__ctype_toupper_loc@plt>:
15e0:	ff 25 5a 98 20 00    	jmp    QWORD PTR [rip+0x20985a]        # 20ae40 <__ctype_toupper_loc@GLIBC_2.3>
15e6:	68 00 00 00 00       	push   0x0
15eb:	e9 e0 ff ff ff       	jmp    15d0 <.plt>

00000000000015f0 <free@plt>:
15f0:	ff 25 52 98 20 00    	jmp    QWORD PTR [rip+0x209852]        # 20ae48 <free@GLIBC_2.2.5>
15f6:	68 01 00 00 00       	push   0x1
15fb:	e9 d0 ff ff ff       	jmp    15d0 <.plt>

0000000000001600 <abort@plt>:
1600:	ff 25 4a 98 20 00    	jmp    QWORD PTR [rip+0x20984a]        # 20ae50 <abort@GLIBC_2.2.5>
1606:	68 02 00 00 00       	push   0x2
160b:	e9 c0 ff ff ff       	jmp    15d0 <.plt>

0000000000001610 <__errno_location@plt>:
1610:	ff 25 42 98 20 00    	jmp    QWORD PTR [rip+0x209842]        # 20ae58 <__errno_location@GLIBC_2.2.5>
1616:	68 03 00 00 00       	push   0x3
161b:	e9 b0 ff ff ff       	jmp    15d0 <.plt>

0000000000001620 <strncmp@plt>:
1620:	ff 25 3a 98 20 00    	jmp    QWORD PTR [rip+0x20983a]        # 20ae60 <strncmp@GLIBC_2.2.5>
1626:	68 04 00 00 00       	push   0x4
162b:	e9 a0 ff ff ff       	jmp    15d0 <.plt>

0000000000001630 <_exit@plt>:
1630:	ff 25 32 98 20 00    	jmp    QWORD PTR [rip+0x209832]        # 20ae68 <_exit@GLIBC_2.2.5>
1636:	68 05 00 00 00       	push   0x5
163b:	e9 90 ff ff ff       	jmp    15d0 <.plt>

0000000000001640 <__fpending@plt>:
1640:	ff 25 2a 98 20 00    	jmp    QWORD PTR [rip+0x20982a]        # 20ae70 <__fpending@GLIBC_2.2.5>
1646:	68 06 00 00 00       	push   0x6
164b:	e9 80 ff ff ff       	jmp    15d0 <.plt>

0000000000001650 <textdomain@plt>:
1650:	ff 25 22 98 20 00    	jmp    QWORD PTR [rip+0x209822]        # 20ae78 <textdomain@GLIBC_2.2.5>
1656:	68 07 00 00 00       	push   0x7
165b:	e9 70 ff ff ff       	jmp    15d0 <.plt>

0000000000001660 <fclose@plt>:
1660:	ff 25 1a 98 20 00    	jmp    QWORD PTR [rip+0x20981a]        # 20ae80 <fclose@GLIBC_2.2.5>
1666:	68 08 00 00 00       	push   0x8
166b:	e9 60 ff ff ff       	jmp    15d0 <.plt>

0000000000001670 <bindtextdomain@plt>:
1670:	ff 25 12 98 20 00    	jmp    QWORD PTR [rip+0x209812]        # 20ae88 <bindtextdomain@GLIBC_2.2.5>
1676:	68 09 00 00 00       	push   0x9
167b:	e9 50 ff ff ff       	jmp    15d0 <.plt>

0000000000001680 <stpcpy@plt>:
1680:	ff 25 0a 98 20 00    	jmp    QWORD PTR [rip+0x20980a]        # 20ae90 <stpcpy@GLIBC_2.2.5>
1686:	68 0a 00 00 00       	push   0xa
168b:	e9 40 ff ff ff       	jmp    15d0 <.plt>

0000000000001690 <dcgettext@plt>:
1690:	ff 25 02 98 20 00    	jmp    QWORD PTR [rip+0x209802]        # 20ae98 <dcgettext@GLIBC_2.2.5>
1696:	68 0b 00 00 00       	push   0xb
169b:	e9 30 ff ff ff       	jmp    15d0 <.plt>

00000000000016a0 <__ctype_get_mb_cur_max@plt>:
16a0:	ff 25 fa 97 20 00    	jmp    QWORD PTR [rip+0x2097fa]        # 20aea0 <__ctype_get_mb_cur_max@GLIBC_2.2.5>
16a6:	68 0c 00 00 00       	push   0xc
16ab:	e9 20 ff ff ff       	jmp    15d0 <.plt>

00000000000016b0 <strlen@plt>:
16b0:	ff 25 f2 97 20 00    	jmp    QWORD PTR [rip+0x2097f2]        # 20aea8 <strlen@GLIBC_2.2.5>
16b6:	68 0d 00 00 00       	push   0xd
16bb:	e9 10 ff ff ff       	jmp    15d0 <.plt>

00000000000016c0 <__stack_chk_fail@plt>:
16c0:	ff 25 ea 97 20 00    	jmp    QWORD PTR [rip+0x2097ea]        # 20aeb0 <__stack_chk_fail@GLIBC_2.4>
16c6:	68 0e 00 00 00       	push   0xe
16cb:	e9 00 ff ff ff       	jmp    15d0 <.plt>

00000000000016d0 <getopt_long@plt>:
16d0:	ff 25 e2 97 20 00    	jmp    QWORD PTR [rip+0x2097e2]        # 20aeb8 <getopt_long@GLIBC_2.2.5>
16d6:	68 0f 00 00 00       	push   0xf
16db:	e9 f0 fe ff ff       	jmp    15d0 <.plt>

00000000000016e0 <mbrtowc@plt>:
16e0:	ff 25 da 97 20 00    	jmp    QWORD PTR [rip+0x2097da]        # 20aec0 <mbrtowc@GLIBC_2.2.5>
16e6:	68 10 00 00 00       	push   0x10
16eb:	e9 e0 fe ff ff       	jmp    15d0 <.plt>

00000000000016f0 <strchr@plt>:
16f0:	ff 25 d2 97 20 00    	jmp    QWORD PTR [rip+0x2097d2]        # 20aec8 <strchr@GLIBC_2.2.5>
16f6:	68 11 00 00 00       	push   0x11
16fb:	e9 d0 fe ff ff       	jmp    15d0 <.plt>

0000000000001700 <strrchr@plt>:
1700:	ff 25 ca 97 20 00    	jmp    QWORD PTR [rip+0x2097ca]        # 20aed0 <strrchr@GLIBC_2.2.5>
1706:	68 12 00 00 00       	push   0x12
170b:	e9 c0 fe ff ff       	jmp    15d0 <.plt>

0000000000001710 <lseek@plt>:
1710:	ff 25 c2 97 20 00    	jmp    QWORD PTR [rip+0x2097c2]        # 20aed8 <lseek@GLIBC_2.2.5>
1716:	68 13 00 00 00       	push   0x13
171b:	e9 b0 fe ff ff       	jmp    15d0 <.plt>

0000000000001720 <__assert_fail@plt>:
1720:	ff 25 ba 97 20 00    	jmp    QWORD PTR [rip+0x2097ba]        # 20aee0 <__assert_fail@GLIBC_2.2.5>
1726:	68 14 00 00 00       	push   0x14
172b:	e9 a0 fe ff ff       	jmp    15d0 <.plt>

0000000000001730 <__strtoul_internal@plt>:
1730:	ff 25 b2 97 20 00    	jmp    QWORD PTR [rip+0x2097b2]        # 20aee8 <__strtoul_internal@GLIBC_2.2.5>
1736:	68 15 00 00 00       	push   0x15
173b:	e9 90 fe ff ff       	jmp    15d0 <.plt>

0000000000001740 <memset@plt>:
1740:	ff 25 aa 97 20 00    	jmp    QWORD PTR [rip+0x2097aa]        # 20aef0 <memset@GLIBC_2.2.5>
1746:	68 16 00 00 00       	push   0x16
174b:	e9 80 fe ff ff       	jmp    15d0 <.plt>

0000000000001750 <close@plt>:
1750:	ff 25 a2 97 20 00    	jmp    QWORD PTR [rip+0x2097a2]        # 20aef8 <close@GLIBC_2.2.5>
1756:	68 17 00 00 00       	push   0x17
175b:	e9 70 fe ff ff       	jmp    15d0 <.plt>

0000000000001760 <posix_fadvise@plt>:
1760:	ff 25 9a 97 20 00    	jmp    QWORD PTR [rip+0x20979a]        # 20af00 <posix_fadvise@GLIBC_2.2.5>
1766:	68 18 00 00 00       	push   0x18
176b:	e9 60 fe ff ff       	jmp    15d0 <.plt>

0000000000001770 <read@plt>:
1770:	ff 25 92 97 20 00    	jmp    QWORD PTR [rip+0x209792]        # 20af08 <read@GLIBC_2.2.5>
1776:	68 19 00 00 00       	push   0x19
177b:	e9 50 fe ff ff       	jmp    15d0 <.plt>

0000000000001780 <memcmp@plt>:
1780:	ff 25 8a 97 20 00    	jmp    QWORD PTR [rip+0x20978a]        # 20af10 <memcmp@GLIBC_2.2.5>
1786:	68 1a 00 00 00       	push   0x1a
178b:	e9 40 fe ff ff       	jmp    15d0 <.plt>

0000000000001790 <fputs_unlocked@plt>:
1790:	ff 25 82 97 20 00    	jmp    QWORD PTR [rip+0x209782]        # 20af18 <fputs_unlocked@GLIBC_2.2.5>
1796:	68 1b 00 00 00       	push   0x1b
179b:	e9 30 fe ff ff       	jmp    15d0 <.plt>

00000000000017a0 <calloc@plt>:
17a0:	ff 25 7a 97 20 00    	jmp    QWORD PTR [rip+0x20977a]        # 20af20 <calloc@GLIBC_2.2.5>
17a6:	68 1c 00 00 00       	push   0x1c
17ab:	e9 20 fe ff ff       	jmp    15d0 <.plt>

00000000000017b0 <memcpy@plt>:
17b0:	ff 25 72 97 20 00    	jmp    QWORD PTR [rip+0x209772]        # 20af28 <memcpy@GLIBC_2.14>
17b6:	68 1d 00 00 00       	push   0x1d
17bb:	e9 10 fe ff ff       	jmp    15d0 <.plt>

00000000000017c0 <fileno@plt>:
17c0:	ff 25 6a 97 20 00    	jmp    QWORD PTR [rip+0x20976a]        # 20af30 <fileno@GLIBC_2.2.5>
17c6:	68 1e 00 00 00       	push   0x1e
17cb:	e9 00 fe ff ff       	jmp    15d0 <.plt>

00000000000017d0 <malloc@plt>:
17d0:	ff 25 62 97 20 00    	jmp    QWORD PTR [rip+0x209762]        # 20af38 <malloc@GLIBC_2.2.5>
17d6:	68 1f 00 00 00       	push   0x1f
17db:	e9 f0 fd ff ff       	jmp    15d0 <.plt>

00000000000017e0 <fflush@plt>:
17e0:	ff 25 5a 97 20 00    	jmp    QWORD PTR [rip+0x20975a]        # 20af40 <fflush@GLIBC_2.2.5>
17e6:	68 20 00 00 00       	push   0x20
17eb:	e9 e0 fd ff ff       	jmp    15d0 <.plt>

00000000000017f0 <nl_langinfo@plt>:
17f0:	ff 25 52 97 20 00    	jmp    QWORD PTR [rip+0x209752]        # 20af48 <nl_langinfo@GLIBC_2.2.5>
17f6:	68 21 00 00 00       	push   0x21
17fb:	e9 d0 fd ff ff       	jmp    15d0 <.plt>

0000000000001800 <__freading@plt>:
1800:	ff 25 4a 97 20 00    	jmp    QWORD PTR [rip+0x20974a]        # 20af50 <__freading@GLIBC_2.2.5>
1806:	68 22 00 00 00       	push   0x22
180b:	e9 c0 fd ff ff       	jmp    15d0 <.plt>

0000000000001810 <fwrite_unlocked@plt>:
1810:	ff 25 42 97 20 00    	jmp    QWORD PTR [rip+0x209742]        # 20af58 <fwrite_unlocked@GLIBC_2.2.5>
1816:	68 23 00 00 00       	push   0x23
181b:	e9 b0 fd ff ff       	jmp    15d0 <.plt>

0000000000001820 <realloc@plt>:
1820:	ff 25 3a 97 20 00    	jmp    QWORD PTR [rip+0x20973a]        # 20af60 <realloc@GLIBC_2.2.5>
1826:	68 24 00 00 00       	push   0x24
182b:	e9 a0 fd ff ff       	jmp    15d0 <.plt>

0000000000001830 <setlocale@plt>:
1830:	ff 25 32 97 20 00    	jmp    QWORD PTR [rip+0x209732]        # 20af68 <setlocale@GLIBC_2.2.5>
1836:	68 25 00 00 00       	push   0x25
183b:	e9 90 fd ff ff       	jmp    15d0 <.plt>

0000000000001840 <__printf_chk@plt>:
1840:	ff 25 2a 97 20 00    	jmp    QWORD PTR [rip+0x20972a]        # 20af70 <__printf_chk@GLIBC_2.3.4>
1846:	68 26 00 00 00       	push   0x26
184b:	e9 80 fd ff ff       	jmp    15d0 <.plt>

0000000000001850 <error@plt>:
1850:	ff 25 22 97 20 00    	jmp    QWORD PTR [rip+0x209722]        # 20af78 <error@GLIBC_2.2.5>
1856:	68 27 00 00 00       	push   0x27
185b:	e9 70 fd ff ff       	jmp    15d0 <.plt>

0000000000001860 <fseeko@plt>:
1860:	ff 25 1a 97 20 00    	jmp    QWORD PTR [rip+0x20971a]        # 20af80 <fseeko@GLIBC_2.2.5>
1866:	68 28 00 00 00       	push   0x28
186b:	e9 60 fd ff ff       	jmp    15d0 <.plt>

0000000000001870 <__cxa_atexit@plt>:
1870:	ff 25 12 97 20 00    	jmp    QWORD PTR [rip+0x209712]        # 20af88 <__cxa_atexit@GLIBC_2.2.5>
1876:	68 29 00 00 00       	push   0x29
187b:	e9 50 fd ff ff       	jmp    15d0 <.plt>

0000000000001880 <exit@plt>:
1880:	ff 25 0a 97 20 00    	jmp    QWORD PTR [rip+0x20970a]        # 20af90 <exit@GLIBC_2.2.5>
1886:	68 2a 00 00 00       	push   0x2a
188b:	e9 40 fd ff ff       	jmp    15d0 <.plt>

0000000000001890 <fwrite@plt>:
1890:	ff 25 02 97 20 00    	jmp    QWORD PTR [rip+0x209702]        # 20af98 <fwrite@GLIBC_2.2.5>
1896:	68 2b 00 00 00       	push   0x2b
189b:	e9 30 fd ff ff       	jmp    15d0 <.plt>

00000000000018a0 <__fprintf_chk@plt>:
18a0:	ff 25 fa 96 20 00    	jmp    QWORD PTR [rip+0x2096fa]        # 20afa0 <__fprintf_chk@GLIBC_2.3.4>
18a6:	68 2c 00 00 00       	push   0x2c
18ab:	e9 20 fd ff ff       	jmp    15d0 <.plt>

00000000000018b0 <mbsinit@plt>:
18b0:	ff 25 f2 96 20 00    	jmp    QWORD PTR [rip+0x2096f2]        # 20afa8 <mbsinit@GLIBC_2.2.5>
18b6:	68 2d 00 00 00       	push   0x2d
18bb:	e9 10 fd ff ff       	jmp    15d0 <.plt>

00000000000018c0 <iswprint@plt>:
18c0:	ff 25 ea 96 20 00    	jmp    QWORD PTR [rip+0x2096ea]        # 20afb0 <iswprint@GLIBC_2.2.5>
18c6:	68 2e 00 00 00       	push   0x2e
18cb:	e9 00 fd ff ff       	jmp    15d0 <.plt>

00000000000018d0 <__ctype_tolower_loc@plt>:
18d0:	ff 25 e2 96 20 00    	jmp    QWORD PTR [rip+0x2096e2]        # 20afb8 <__ctype_tolower_loc@GLIBC_2.3>
18d6:	68 2f 00 00 00       	push   0x2f
18db:	e9 f0 fc ff ff       	jmp    15d0 <.plt>

00000000000018e0 <__ctype_b_loc@plt>:
18e0:	ff 25 da 96 20 00    	jmp    QWORD PTR [rip+0x2096da]        # 20afc0 <__ctype_b_loc@GLIBC_2.3>
18e6:	68 30 00 00 00       	push   0x30
18eb:	e9 e0 fc ff ff       	jmp    15d0 <.plt>

00000000000018f0 <__sprintf_chk@plt>:
18f0:	ff 25 d2 96 20 00    	jmp    QWORD PTR [rip+0x2096d2]        # 20afc8 <__sprintf_chk@GLIBC_2.3.4>
18f6:	68 31 00 00 00       	push   0x31
18fb:	e9 d0 fc ff ff       	jmp    15d0 <.plt>

Disassembly of section .plt.got:

0000000000001900 <__cxa_finalize@plt>:
1900:	ff 25 ea 96 20 00    	jmp    QWORD PTR [rip+0x2096ea]        # 20aff0 <__cxa_finalize@GLIBC_2.2.5>
1906:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000001910 <append_repeated_char.part.8>:
1910:	48 8d 0d 39 5a 00 00 	lea    rcx,[rip+0x5a39]        # 7350 <__PRETTY_FUNCTION__.7143>
1917:	48 8d 35 03 57 00 00 	lea    rsi,[rip+0x5703]        # 7021 <_IO_stdin_used+0x21>
191e:	48 8d 3d 49 57 00 00 	lea    rdi,[rip+0x5749]        # 706e <_IO_stdin_used+0x6e>
1925:	48 83 ec 08          	sub    rsp,0x8
1929:	ba cf 02 00 00       	mov    edx,0x2cf
192e:	e8 ed fd ff ff       	call   1720 <__assert_fail@plt>
1933:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
193a:	00 00 00
193d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000001940 <main>:
1940:	41 57                	push   r15
1942:	41 56                	push   r14
1944:	41 55                	push   r13
1946:	41 54                	push   r12
1948:	49 89 f5             	mov    r13,rsi
194b:	55                   	push   rbp
194c:	53                   	push   rbx
194d:	48 63 df             	movsxd rbx,edi
1950:	48 8d 2d 49 91 20 00 	lea    rbp,[rip+0x209149]        # 20aaa0 <long_options>
1957:	48 81 ec e8 01 00 00 	sub    rsp,0x1e8
195e:	48 8b 3e             	mov    rdi,QWORD PTR [rsi]
1961:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
1968:	00 00
196a:	48 89 84 24 d8 01 00 	mov    QWORD PTR [rsp+0x1d8],rax
1971:	00
1972:	31 c0                	xor    eax,eax
1974:	e8 b7 28 00 00       	call   4230 <set_program_name>
1979:	48 8d 35 61 6f 00 00 	lea    rsi,[rip+0x6f61]        # 88e1 <quoting_style_vals+0x81>
1980:	bf 06 00 00 00       	mov    edi,0x6
1985:	e8 a6 fe ff ff       	call   1830 <setlocale@plt>
198a:	48 8d 35 b5 57 00 00 	lea    rsi,[rip+0x57b5]        # 7146 <_IO_stdin_used+0x146>
1991:	48 8d 3d 85 57 00 00 	lea    rdi,[rip+0x5785]        # 711d <_IO_stdin_used+0x11d>
1998:	e8 d3 fc ff ff       	call   1670 <bindtextdomain@plt>
199d:	48 8d 3d 79 57 00 00 	lea    rdi,[rip+0x5779]        # 711d <_IO_stdin_used+0x11d>
19a4:	e8 a7 fc ff ff       	call   1650 <textdomain@plt>
19a9:	48 8d 3d 90 27 00 00 	lea    rdi,[rip+0x2790]        # 4140 <close_stdout>
19b0:	e8 2b 56 00 00       	call   6fe0 <atexit>
19b5:	0f 1f 00             	nop    DWORD PTR [rax]
19b8:	48 8d 15 ae 57 00 00 	lea    rdx,[rip+0x57ae]        # 716d <_IO_stdin_used+0x16d>
19bf:	45 31 c0             	xor    r8d,r8d
19c2:	48 89 e9             	mov    rcx,rbp
19c5:	4c 89 ee             	mov    rsi,r13
19c8:	89 df                	mov    edi,ebx
19ca:	e8 01 fd ff ff       	call   16d0 <getopt_long@plt>
19cf:	83 f8 ff             	cmp    eax,0xffffffff
19d2:	0f 84 ec 00 00 00    	je     1ac4 <main+0x184>
19d8:	83 f8 43             	cmp    eax,0x43
19db:	0f 84 b8 00 00 00    	je     1a99 <main+0x159>
19e1:	7e 2d                	jle    1a10 <main+0xd0>
19e3:	83 f8 64             	cmp    eax,0x64
19e6:	0f 84 cc 00 00 00    	je     1ab8 <main+0x178>
19ec:	0f 8e a2 00 00 00    	jle    1a94 <main+0x154>
19f2:	83 f8 73             	cmp    eax,0x73
19f5:	0f 84 ad 00 00 00    	je     1aa8 <main+0x168>
19fb:	83 f8 74             	cmp    eax,0x74
19fe:	75 27                	jne    1a27 <main+0xe7>
1a00:	c6 05 da b9 20 00 01 	mov    BYTE PTR [rip+0x20b9da],0x1        # 20d3e1 <truncate_set1>
1a07:	eb af                	jmp    19b8 <main+0x78>
1a09:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
1a10:	3d 7e ff ff ff       	cmp    eax,0xffffff7e
1a15:	0f 84 3f 0a 00 00    	je     245a <main+0xb1a>
1a1b:	83 f8 41             	cmp    eax,0x41
1a1e:	74 50                	je     1a70 <main+0x130>
1a20:	3d 7d ff ff ff       	cmp    eax,0xffffff7d
1a25:	74 11                	je     1a38 <main+0xf8>
1a27:	bf 01 00 00 00       	mov    edi,0x1
1a2c:	e8 0f 23 00 00       	call   3d40 <usage>
1a31:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
1a38:	48 8b 3d 49 96 20 00 	mov    rdi,QWORD PTR [rip+0x209649]        # 20b088 <stdout@@GLIBC_2.2.5>
1a3f:	48 8b 0d ca 95 20 00 	mov    rcx,QWORD PTR [rip+0x2095ca]        # 20b010 <Version>
1a46:	4c 8d 05 13 57 00 00 	lea    r8,[rip+0x5713]        # 7160 <_IO_stdin_used+0x160>
1a4d:	48 8d 15 c5 56 00 00 	lea    rdx,[rip+0x56c5]        # 7119 <_IO_stdin_used+0x119>
1a54:	48 8d 35 45 56 00 00 	lea    rsi,[rip+0x5645]        # 70a0 <_IO_stdin_used+0xa0>
1a5b:	45 31 c9             	xor    r9d,r9d
1a5e:	31 c0                	xor    eax,eax
1a60:	e8 1b 4a 00 00       	call   6480 <version_etc>
1a65:	31 ff                	xor    edi,edi
1a67:	e8 14 fe ff ff       	call   1880 <exit@plt>
1a6c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
1a70:	48 8d 35 e7 56 00 00 	lea    rsi,[rip+0x56e7]        # 715e <_IO_stdin_used+0x15e>
1a77:	bf 03 00 00 00       	mov    edi,0x3
1a7c:	e8 af fd ff ff       	call   1830 <setlocale@plt>
1a81:	48 8d 35 d6 56 00 00 	lea    rsi,[rip+0x56d6]        # 715e <_IO_stdin_used+0x15e>
1a88:	31 ff                	xor    edi,edi
1a8a:	e8 a1 fd ff ff       	call   1830 <setlocale@plt>
1a8f:	e9 24 ff ff ff       	jmp    19b8 <main+0x78>
1a94:	83 f8 63             	cmp    eax,0x63
1a97:	75 8e                	jne    1a27 <main+0xe7>
1a99:	c6 05 42 b9 20 00 01 	mov    BYTE PTR [rip+0x20b942],0x1        # 20d3e2 <complement>
1aa0:	e9 13 ff ff ff       	jmp    19b8 <main+0x78>
1aa5:	0f 1f 00             	nop    DWORD PTR [rax]
1aa8:	c6 05 35 b9 20 00 01 	mov    BYTE PTR [rip+0x20b935],0x1        # 20d3e4 <squeeze_repeats>
1aaf:	e9 04 ff ff ff       	jmp    19b8 <main+0x78>
1ab4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
1ab8:	c6 05 24 b9 20 00 01 	mov    BYTE PTR [rip+0x20b924],0x1        # 20d3e3 <delete>
1abf:	e9 f4 fe ff ff       	jmp    19b8 <main+0x78>
1ac4:	8b 0d ce 95 20 00    	mov    ecx,DWORD PTR [rip+0x2095ce]        # 20b098 <optind@@GLIBC_2.2.5>
1aca:	41 89 dc             	mov    r12d,ebx
1acd:	0f b6 05 0f b9 20 00 	movzx  eax,BYTE PTR [rip+0x20b90f]        # 20d3e3 <delete>
1ad4:	0f b6 15 09 b9 20 00 	movzx  edx,BYTE PTR [rip+0x20b909]        # 20d3e4 <squeeze_repeats>
1adb:	41 29 cc             	sub    r12d,ecx
1ade:	41 83 fc 02          	cmp    r12d,0x2
1ae2:	0f 84 7e 02 00 00    	je     1d66 <main+0x426>
1ae8:	38 c2                	cmp    dl,al
1aea:	c6 05 ef b8 20 00 00 	mov    BYTE PTR [rip+0x20b8ef],0x0        # 20d3e0 <translating>
1af1:	0f 84 13 06 00 00    	je     210a <main+0x7ca>
1af7:	38 c2                	cmp    dl,al
1af9:	be 01 00 00 00       	mov    esi,0x1
1afe:	19 c0                	sbb    eax,eax
1b00:	83 c0 02             	add    eax,0x2
1b03:	41 39 f4             	cmp    r12d,esi
1b06:	0f 8c 4c 0a 00 00    	jl     2558 <main+0xc18>
1b0c:	44 39 e0             	cmp    eax,r12d
1b0f:	0f 8c e6 0a 00 00    	jl     25fb <main+0xcbb>
1b15:	bf 20 00 00 00       	mov    edi,0x20
1b1a:	48 8d 6c 24 50       	lea    rbp,[rsp+0x50]
1b1f:	e8 bc 4a 00 00       	call   65e0 <xmalloc>
1b24:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
1b29:	48 89 44 24 50       	mov    QWORD PTR [rsp+0x50],rax
1b2e:	48 89 ee             	mov    rsi,rbp
1b31:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
1b38:	00
1b39:	48 63 05 58 95 20 00 	movsxd rax,DWORD PTR [rip+0x209558]        # 20b098 <optind@@GLIBC_2.2.5>
1b40:	49 8b 7c c5 00       	mov    rdi,QWORD PTR [r13+rax*8+0x0]
1b45:	e8 86 16 00 00       	call   31d0 <parse_str>
1b4a:	84 c0                	test   al,al
1b4c:	0f 84 af 02 00 00    	je     1e01 <main+0x4c1>
1b52:	31 db                	xor    ebx,ebx
1b54:	41 83 fc 02          	cmp    r12d,0x2
1b58:	0f 84 5d 02 00 00    	je     1dbb <main+0x47b>
1b5e:	48 89 ef             	mov    rdi,rbp
1b61:	e8 8a 10 00 00       	call   2bf0 <get_spec_stats>
1b66:	80 3d 75 b8 20 00 00 	cmp    BYTE PTR [rip+0x20b875],0x0        # 20d3e2 <complement>
1b6d:	0f 85 df 05 00 00    	jne    2152 <main+0x812>
1b73:	4c 8b 74 24 70       	mov    r14,QWORD PTR [rsp+0x70]
1b78:	4d 85 f6             	test   r14,r14
1b7b:	0f 85 28 09 00 00    	jne    24a9 <main+0xb69>
1b81:	48 85 db             	test   rbx,rbx
1b84:	0f 84 47 03 00 00    	je     1ed1 <main+0x591>
1b8a:	48 89 df             	mov    rdi,rbx
1b8d:	4c 8b 6c 24 68       	mov    r13,QWORD PTR [rsp+0x68]
1b92:	e8 59 10 00 00       	call   2bf0 <get_spec_stats>
1b97:	48 8b 43 18          	mov    rax,QWORD PTR [rbx+0x18]
1b9b:	49 39 c5             	cmp    r13,rax
1b9e:	0f 82 cd 04 00 00    	jb     2071 <main+0x731>
1ba4:	48 83 7b 20 01       	cmp    QWORD PTR [rbx+0x20],0x1
1ba9:	0f 85 c2 04 00 00    	jne    2071 <main+0x731>
1baf:	4c 89 e9             	mov    rcx,r13
1bb2:	48 8b 53 28          	mov    rdx,QWORD PTR [rbx+0x28]
1bb6:	48 29 c1             	sub    rcx,rax
1bb9:	80 3d 20 b8 20 00 00 	cmp    BYTE PTR [rip+0x20b820],0x0        # 20d3e0 <translating>
1bc0:	48 89 4a 18          	mov    QWORD PTR [rdx+0x18],rcx
1bc4:	4c 89 6b 18          	mov    QWORD PTR [rbx+0x18],r13
1bc8:	0f 84 c7 04 00 00    	je     2095 <main+0x755>
1bce:	80 7b 30 00          	cmp    BYTE PTR [rbx+0x30],0x0
1bd2:	0f 85 19 09 00 00    	jne    24f1 <main+0xbb1>
1bd8:	80 7b 32 00          	cmp    BYTE PTR [rbx+0x32],0x0
1bdc:	0f 85 eb 08 00 00    	jne    24cd <main+0xb8d>
1be2:	44 0f b6 6b 31       	movzx  r13d,BYTE PTR [rbx+0x31]
1be7:	45 84 ed             	test   r13b,r13b
1bea:	0f 84 fb 05 00 00    	je     21eb <main+0x8ab>
1bf0:	e8 eb fc ff ff       	call   18e0 <__ctype_b_loc@plt>
1bf5:	48 8b 10             	mov    rdx,QWORD PTR [rax]
1bf8:	31 c9                	xor    ecx,ecx
1bfa:	48 8d ba 00 02 00 00 	lea    rdi,[rdx+0x200]
1c01:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
1c08:	0f b7 02             	movzx  eax,WORD PTR [rdx]
1c0b:	89 c6                	mov    esi,eax
1c0d:	66 81 e6 00 01       	and    si,0x100
1c12:	66 83 fe 01          	cmp    si,0x1
1c16:	49 83 de ff          	sbb    r14,0xffffffffffffffff
1c1a:	66 25 00 02          	and    ax,0x200
1c1e:	66 83 f8 01          	cmp    ax,0x1
1c22:	48 83 d9 ff          	sbb    rcx,0xffffffffffffffff
1c26:	48 83 c2 02          	add    rdx,0x2
1c2a:	48 39 fa             	cmp    rdx,rdi
1c2d:	75 d9                	jne    1c08 <main+0x2c8>
1c2f:	48 8b 44 24 68       	mov    rax,QWORD PTR [rsp+0x68]
1c34:	48 89 6c 24 10       	mov    QWORD PTR [rsp+0x10],rbp
1c39:	4c 8d 79 ff          	lea    r15,[rcx-0x1]
1c3d:	48 89 dd             	mov    rbp,rbx
1c40:	44 89 64 24 3c       	mov    DWORD PTR [rsp+0x3c],r12d
1c45:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
1c4a:	48 8b 43 18          	mov    rax,QWORD PTR [rbx+0x18]
1c4e:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
1c53:	48 8b 44 24 58       	mov    rax,QWORD PTR [rsp+0x58]
1c58:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
1c5d:	48 8b 43 08          	mov    rax,QWORD PTR [rbx+0x8]
1c61:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
1c66:	48 c7 c0 fe ff ff ff 	mov    rax,0xfffffffffffffffe
1c6d:	48 89 43 10          	mov    QWORD PTR [rbx+0x10],rax
1c71:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
1c76:	48 8d 44 24 48       	lea    rax,[rsp+0x48]
1c7b:	48 89 04 24          	mov    QWORD PTR [rsp],rax
1c7f:	48 8d 44 24 4c       	lea    rax,[rsp+0x4c]
1c84:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
1c89:	49 8d 46 ff          	lea    rax,[r14-0x1]
1c8d:	45 89 ee             	mov    r14d,r13d
1c90:	48 89 c3             	mov    rbx,rax
1c93:	e9 98 00 00 00       	jmp    1d30 <main+0x3f0>
1c98:	83 f9 02             	cmp    ecx,0x2
1c9b:	74 6d                	je     1d0a <main+0x3ca>
1c9d:	45 84 f6             	test   r14b,r14b
1ca0:	0f 84 8e 08 00 00    	je     2534 <main+0xbf4>
1ca6:	83 7c 24 48 02       	cmp    DWORD PTR [rsp+0x48],0x2
1cab:	0f 84 83 08 00 00    	je     2534 <main+0xbf4>
1cb1:	48 8b 74 24 58       	mov    rsi,QWORD PTR [rsp+0x58]
1cb6:	83 7c 24 48 01       	cmp    DWORD PTR [rsp+0x48],0x1
1cbb:	48 8b 54 24 68       	mov    rdx,QWORD PTR [rsp+0x68]
1cc0:	48 8b 76 08          	mov    rsi,QWORD PTR [rsi+0x8]
1cc4:	48 c7 44 24 60 ff ff 	mov    QWORD PTR [rsp+0x60],0xffffffffffffffff
1ccb:	ff ff
1ccd:	48 89 74 24 58       	mov    QWORD PTR [rsp+0x58],rsi
1cd2:	48 8b 75 08          	mov    rsi,QWORD PTR [rbp+0x8]
1cd6:	48 8b 76 08          	mov    rsi,QWORD PTR [rsi+0x8]
1cda:	48 c7 45 10 ff ff ff 	mov    QWORD PTR [rbp+0x10],0xffffffffffffffff
1ce1:	ff
1ce2:	48 89 75 08          	mov    QWORD PTR [rbp+0x8],rsi
1ce6:	4c 89 fe             	mov    rsi,r15
1ce9:	48 0f 44 f3          	cmove  rsi,rbx
1ced:	48 29 f2             	sub    rdx,rsi
1cf0:	83 e9 01             	sub    ecx,0x1
1cf3:	48 8b 4d 18          	mov    rcx,QWORD PTR [rbp+0x18]
1cf7:	48 89 de             	mov    rsi,rbx
1cfa:	48 89 54 24 68       	mov    QWORD PTR [rsp+0x68],rdx
1cff:	49 0f 45 f7          	cmovne rsi,r15
1d03:	48 29 f1             	sub    rcx,rsi
1d06:	48 89 4d 18          	mov    QWORD PTR [rbp+0x18],rcx
1d0a:	48 83 7c 24 60 ff    	cmp    QWORD PTR [rsp+0x60],0xffffffffffffffff
1d10:	41 0f 94 c6          	sete   r14b
1d14:	48 83 7d 10 ff       	cmp    QWORD PTR [rbp+0x10],0xffffffffffffffff
1d19:	41 0f 94 c5          	sete   r13b
1d1d:	41 83 c4 01          	add    r12d,0x1
1d21:	0f 84 85 04 00 00    	je     21ac <main+0x86c>
1d27:	83 c0 01             	add    eax,0x1
1d2a:	0f 84 7c 04 00 00    	je     21ac <main+0x86c>
1d30:	48 8b 34 24          	mov    rsi,QWORD PTR [rsp]
1d34:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
1d39:	e8 72 10 00 00       	call   2db0 <get_next>
1d3e:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
1d43:	48 89 ef             	mov    rdi,rbp
1d46:	41 89 c4             	mov    r12d,eax
1d49:	e8 62 10 00 00       	call   2db0 <get_next>
1d4e:	45 84 ed             	test   r13b,r13b
1d51:	8b 4c 24 4c          	mov    ecx,DWORD PTR [rsp+0x4c]
1d55:	0f 85 3d ff ff ff    	jne    1c98 <main+0x358>
1d5b:	83 f9 02             	cmp    ecx,0x2
1d5e:	0f 85 4d ff ff ff    	jne    1cb1 <main+0x371>
1d64:	eb a4                	jmp    1d0a <main+0x3ca>
1d66:	84 c0                	test   al,al
1d68:	0f 85 ef 02 00 00    	jne    205d <main+0x71d>
1d6e:	84 d2                	test   dl,dl
1d70:	c6 05 69 b6 20 00 01 	mov    BYTE PTR [rip+0x20b669],0x1        # 20d3e0 <translating>
1d77:	b8 02 00 00 00       	mov    eax,0x2
1d7c:	0f 85 8a fd ff ff    	jne    1b0c <main+0x1cc>
1d82:	bf 20 00 00 00       	mov    edi,0x20
1d87:	48 8d 6c 24 50       	lea    rbp,[rsp+0x50]
1d8c:	e8 4f 48 00 00       	call   65e0 <xmalloc>
1d91:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
1d96:	48 89 44 24 50       	mov    QWORD PTR [rsp+0x50],rax
1d9b:	48 89 ee             	mov    rsi,rbp
1d9e:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
1da5:	00
1da6:	48 63 05 eb 92 20 00 	movsxd rax,DWORD PTR [rip+0x2092eb]        # 20b098 <optind@@GLIBC_2.2.5>
1dad:	49 8b 7c c5 00       	mov    rdi,QWORD PTR [r13+rax*8+0x0]
1db2:	e8 19 14 00 00       	call   31d0 <parse_str>
1db7:	84 c0                	test   al,al
1db9:	74 46                	je     1e01 <main+0x4c1>
1dbb:	bf 20 00 00 00       	mov    edi,0x20
1dc0:	48 8d 9c 24 90 00 00 	lea    rbx,[rsp+0x90]
1dc7:	00
1dc8:	e8 13 48 00 00       	call   65e0 <xmalloc>
1dcd:	48 89 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],rax
1dd4:	00
1dd5:	48 89 84 24 90 00 00 	mov    QWORD PTR [rsp+0x90],rax
1ddc:	00
1ddd:	48 89 de             	mov    rsi,rbx
1de0:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
1de7:	00
1de8:	48 63 05 a9 92 20 00 	movsxd rax,DWORD PTR [rip+0x2092a9]        # 20b098 <optind@@GLIBC_2.2.5>
1def:	49 8b 7c c5 08       	mov    rdi,QWORD PTR [r13+rax*8+0x8]
1df4:	e8 d7 13 00 00       	call   31d0 <parse_str>
1df9:	84 c0                	test   al,al
1dfb:	0f 85 5d fd ff ff    	jne    1b5e <main+0x21e>
1e01:	b8 01 00 00 00       	mov    eax,0x1
1e06:	48 8b 8c 24 d8 01 00 	mov    rcx,QWORD PTR [rsp+0x1d8]
1e0d:	00
1e0e:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
1e15:	00 00
1e17:	0f 85 44 06 00 00    	jne    2461 <main+0xb21>
1e1d:	48 81 c4 e8 01 00 00 	add    rsp,0x1e8
1e24:	5b                   	pop    rbx
1e25:	5d                   	pop    rbp
1e26:	41 5c                	pop    r12
1e28:	41 5d                	pop    r13
1e2a:	41 5e                	pop    r14
1e2c:	41 5f                	pop    r15
1e2e:	c3                   	ret
1e2f:	44 0f b6 71 10       	movzx  r14d,BYTE PTR [rcx+0x10]
1e34:	48 29 d0             	sub    rax,rdx
1e37:	bf 20 00 00 00       	mov    edi,0x20
1e3c:	49 89 c5             	mov    r13,rax
1e3f:	e8 9c 47 00 00       	call   65e0 <xmalloc>
1e44:	48 8b 53 08          	mov    rdx,QWORD PTR [rbx+0x8]
1e48:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
1e4f:	00
1e50:	c7 00 04 00 00 00    	mov    DWORD PTR [rax],0x4
1e56:	44 88 70 10          	mov    BYTE PTR [rax+0x10],r14b
1e5a:	4c 89 68 18          	mov    QWORD PTR [rax+0x18],r13
1e5e:	48 85 d2             	test   rdx,rdx
1e61:	0f 84 29 08 00 00    	je     2690 <main+0xd50>
1e67:	48 89 42 08          	mov    QWORD PTR [rdx+0x8],rax
1e6b:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
1e6f:	48 8b 44 24 68       	mov    rax,QWORD PTR [rsp+0x68]
1e74:	48 89 43 18          	mov    QWORD PTR [rbx+0x18],rax
1e78:	80 3d 63 b5 20 00 00 	cmp    BYTE PTR [rip+0x20b563],0x0        # 20d3e2 <complement>
1e7f:	74 50                	je     1ed1 <main+0x591>
1e81:	80 bc 24 81 00 00 00 	cmp    BYTE PTR [rsp+0x81],0x0
1e88:	00
1e89:	74 46                	je     1ed1 <main+0x591>
1e8b:	48 8b 44 24 68       	mov    rax,QWORD PTR [rsp+0x68]
1e90:	48 39 43 18          	cmp    QWORD PTR [rbx+0x18],rax
1e94:	0f 85 92 05 00 00    	jne    242c <main+0xaec>
1e9a:	31 f6                	xor    esi,esi
1e9c:	48 c7 43 10 fe ff ff 	mov    QWORD PTR [rbx+0x10],0xfffffffffffffffe
1ea3:	ff
1ea4:	48 89 df             	mov    rdi,rbx
1ea7:	e8 04 0f 00 00       	call   2db0 <get_next>
1eac:	83 f8 ff             	cmp    eax,0xffffffff
1eaf:	41 89 c5             	mov    r13d,eax
1eb2:	75 0e                	jne    1ec2 <main+0x582>
1eb4:	e9 73 05 00 00       	jmp    242c <main+0xaec>
1eb9:	41 39 c5             	cmp    r13d,eax
1ebc:	0f 85 6a 05 00 00    	jne    242c <main+0xaec>
1ec2:	31 f6                	xor    esi,esi
1ec4:	48 89 df             	mov    rdi,rbx
1ec7:	e8 e4 0e 00 00       	call   2db0 <get_next>
1ecc:	83 f8 ff             	cmp    eax,0xffffffff
1ecf:	75 e8                	jne    1eb9 <main+0x579>
1ed1:	48 8b 3d b8 91 20 00 	mov    rdi,QWORD PTR [rip+0x2091b8]        # 20b090 <stdin@@GLIBC_2.2.5>
1ed8:	be 02 00 00 00       	mov    esi,0x2
1edd:	e8 1e 23 00 00       	call   4200 <fadvise>
1ee2:	80 3d fb b4 20 00 00 	cmp    BYTE PTR [rip+0x20b4fb],0x0        # 20d3e4 <squeeze_repeats>
1ee9:	0f 84 8f 00 00 00    	je     1f7e <main+0x63e>
1eef:	41 83 fc 01          	cmp    r12d,0x1
1ef3:	0f 84 8e 04 00 00    	je     2387 <main+0xa47>
1ef9:	80 3d e3 b4 20 00 00 	cmp    BYTE PTR [rip+0x20b4e3],0x0        # 20d3e3 <delete>
1f00:	0f 84 8b 00 00 00    	je     1f91 <main+0x651>
1f06:	41 83 fc 02          	cmp    r12d,0x2
1f0a:	0f 85 81 00 00 00    	jne    1f91 <main+0x651>
1f10:	0f b6 35 cb b4 20 00 	movzx  esi,BYTE PTR [rip+0x20b4cb]        # 20d3e2 <complement>
1f17:	48 8d 15 c2 92 20 00 	lea    rdx,[rip+0x2092c2]        # 20b1e0 <in_delete_set>
1f1e:	48 89 ef             	mov    rdi,rbp
1f21:	e8 ba 1b 00 00       	call   3ae0 <set_initialize>
1f26:	48 8d 15 b3 93 20 00 	lea    rdx,[rip+0x2093b3]        # 20b2e0 <in_squeeze_set>
1f2d:	48 89 df             	mov    rdi,rbx
1f30:	31 f6                	xor    esi,esi
1f32:	e8 a9 1b 00 00       	call   3ae0 <set_initialize>
1f37:	48 8d 3d 32 11 00 00 	lea    rdi,[rip+0x1132]        # 3070 <read_and_delete>
1f3e:	e8 fd 1b 00 00       	call   3b40 <squeeze_filter.constprop.14>
1f43:	31 ff                	xor    edi,edi
1f45:	e8 06 f8 ff ff       	call   1750 <close@plt>
1f4a:	85 c0                	test   eax,eax
1f4c:	0f 84 b4 fe ff ff    	je     1e06 <main+0x4c6>
1f52:	48 8d 35 8a 52 00 00 	lea    rsi,[rip+0x528a]        # 71e3 <_IO_stdin_used+0x1e3>
1f59:	ba 05 00 00 00       	mov    edx,0x5
1f5e:	31 ff                	xor    edi,edi
1f60:	e8 2b f7 ff ff       	call   1690 <dcgettext@plt>
1f65:	48 89 c3             	mov    rbx,rax
1f68:	e8 a3 f6 ff ff       	call   1610 <__errno_location@plt>
1f6d:	8b 30                	mov    esi,DWORD PTR [rax]
1f6f:	48 89 da             	mov    rdx,rbx
1f72:	bf 01 00 00 00       	mov    edi,0x1
1f77:	31 c0                	xor    eax,eax
1f79:	e8 d2 f8 ff ff       	call   1850 <error@plt>
1f7e:	80 3d 5e b4 20 00 00 	cmp    BYTE PTR [rip+0x20b45e],0x0        # 20d3e3 <delete>
1f85:	74 0a                	je     1f91 <main+0x651>
1f87:	41 83 ec 01          	sub    r12d,0x1
1f8b:	0f 84 1d 04 00 00    	je     23ae <main+0xa6e>
1f91:	80 3d 48 b4 20 00 00 	cmp    BYTE PTR [rip+0x20b448],0x0        # 20d3e0 <translating>
1f98:	74 a9                	je     1f43 <main+0x603>
1f9a:	80 3d 41 b4 20 00 00 	cmp    BYTE PTR [rip+0x20b441],0x0        # 20d3e2 <complement>
1fa1:	0f 85 20 03 00 00    	jne    22c7 <main+0x987>
1fa7:	4c 8d 25 32 91 20 00 	lea    r12,[rip+0x209132]        # 20b0e0 <xlate>
1fae:	31 c0                	xor    eax,eax
1fb0:	41 88 04 04          	mov    BYTE PTR [r12+rax*1],al
1fb4:	48 83 c0 01          	add    rax,0x1
1fb8:	48 3d 00 01 00 00    	cmp    rax,0x100
1fbe:	75 f0                	jne    1fb0 <main+0x670>
1fc0:	48 c7 c0 fe ff ff ff 	mov    rax,0xfffffffffffffffe
1fc7:	49 83 cd ff          	or     r13,0xffffffffffffffff
1fcb:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
1fd0:	48 89 43 10          	mov    QWORD PTR [rbx+0x10],rax
1fd4:	48 8d 44 24 48       	lea    rax,[rsp+0x48]
1fd9:	48 89 04 24          	mov    QWORD PTR [rsp],rax
1fdd:	48 8d 44 24 4c       	lea    rax,[rsp+0x4c]
1fe2:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
1fe7:	48 8b 34 24          	mov    rsi,QWORD PTR [rsp]
1feb:	48 89 ef             	mov    rdi,rbp
1fee:	e8 bd 0d 00 00       	call   2db0 <get_next>
1ff3:	48 8b 74 24 08       	mov    rsi,QWORD PTR [rsp+0x8]
1ff8:	48 89 df             	mov    rdi,rbx
1ffb:	4c 63 f0             	movsxd r14,eax
1ffe:	e8 ad 0d 00 00       	call   2db0 <get_next>
2003:	8b 54 24 48          	mov    edx,DWORD PTR [rsp+0x48]
2007:	85 d2                	test   edx,edx
2009:	0f 85 aa 00 00 00    	jne    20b9 <main+0x779>
200f:	83 7c 24 4c 01       	cmp    DWORD PTR [rsp+0x4c],0x1
2014:	0f 84 ff 00 00 00    	je     2119 <main+0x7d9>
201a:	41 83 fe ff          	cmp    r14d,0xffffffff
201e:	0f 84 1b 02 00 00    	je     223f <main+0x8ff>
2024:	83 f8 ff             	cmp    eax,0xffffffff
2027:	0f 84 12 02 00 00    	je     223f <main+0x8ff>
202d:	83 7c 24 4c 02       	cmp    DWORD PTR [rsp+0x4c],0x2
2032:	43 88 04 34          	mov    BYTE PTR [r12+r14*1],al
2036:	74 af                	je     1fe7 <main+0x6a7>
2038:	48 8b 44 24 58       	mov    rax,QWORD PTR [rsp+0x58]
203d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
2041:	4c 89 6c 24 60       	mov    QWORD PTR [rsp+0x60],r13
2046:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
204b:	48 8b 43 08          	mov    rax,QWORD PTR [rbx+0x8]
204f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
2053:	4c 89 6b 10          	mov    QWORD PTR [rbx+0x10],r13
2057:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
205b:	eb 8a                	jmp    1fe7 <main+0x6a7>
205d:	84 d2                	test   dl,dl
205f:	c6 05 7a b3 20 00 00 	mov    BYTE PTR [rip+0x20b37a],0x0        # 20d3e0 <translating>
2066:	0f 84 8b fa ff ff    	je     1af7 <main+0x1b7>
206c:	e9 11 fd ff ff       	jmp    1d82 <main+0x442>
2071:	48 8b 43 20          	mov    rax,QWORD PTR [rbx+0x20]
2075:	48 83 f8 01          	cmp    rax,0x1
2079:	0f 87 06 04 00 00    	ja     2485 <main+0xb45>
207f:	80 3d 5a b3 20 00 00 	cmp    BYTE PTR [rip+0x20b35a],0x0        # 20d3e0 <translating>
2086:	0f 85 42 fb ff ff    	jne    1bce <main+0x28e>
208c:	48 85 c0             	test   rax,rax
208f:	0f 84 3c fe ff ff    	je     1ed1 <main+0x591>
2095:	48 8d 35 74 62 00 00 	lea    rsi,[rip+0x6274]        # 8310 <__PRETTY_FUNCTION__.7483+0xf6e>
209c:	ba 05 00 00 00       	mov    edx,0x5
20a1:	31 ff                	xor    edi,edi
20a3:	e8 e8 f5 ff ff       	call   1690 <dcgettext@plt>
20a8:	31 f6                	xor    esi,esi
20aa:	48 89 c2             	mov    rdx,rax
20ad:	bf 01 00 00 00       	mov    edi,0x1
20b2:	31 c0                	xor    eax,eax
20b4:	e8 97 f7 ff ff       	call   1850 <error@plt>
20b9:	83 ea 01             	sub    edx,0x1
20bc:	0f 85 58 ff ff ff    	jne    201a <main+0x6da>
20c2:	83 7c 24 4c 00       	cmp    DWORD PTR [rsp+0x4c],0x0
20c7:	0f 85 4d ff ff ff    	jne    201a <main+0x6da>
20cd:	e8 0e f8 ff ff       	call   18e0 <__ctype_b_loc@plt>
20d2:	4c 8b 38             	mov    r15,QWORD PTR [rax]
20d5:	45 31 f6             	xor    r14d,r14d
20d8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
20df:	00
20e0:	43 f6 44 77 01 01    	test   BYTE PTR [r15+r14*2+0x1],0x1
20e6:	74 10                	je     20f8 <main+0x7b8>
20e8:	e8 e3 f7 ff ff       	call   18d0 <__ctype_tolower_loc@plt>
20ed:	48 8b 00             	mov    rax,QWORD PTR [rax]
20f0:	42 8b 04 b0          	mov    eax,DWORD PTR [rax+r14*4]
20f4:	43 88 04 34          	mov    BYTE PTR [r12+r14*1],al
20f8:	49 83 c6 01          	add    r14,0x1
20fc:	49 81 fe 00 01 00 00 	cmp    r14,0x100
2103:	75 db                	jne    20e0 <main+0x7a0>
2105:	e9 2e ff ff ff       	jmp    2038 <main+0x6f8>
210a:	be 02 00 00 00       	mov    esi,0x2
210f:	b8 02 00 00 00       	mov    eax,0x2
2114:	e9 ea f9 ff ff       	jmp    1b03 <main+0x1c3>
2119:	e8 c2 f7 ff ff       	call   18e0 <__ctype_b_loc@plt>
211e:	4c 8b 38             	mov    r15,QWORD PTR [rax]
2121:	45 31 f6             	xor    r14d,r14d
2124:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2128:	43 f6 44 77 01 02    	test   BYTE PTR [r15+r14*2+0x1],0x2
212e:	74 10                	je     2140 <main+0x800>
2130:	e8 ab f4 ff ff       	call   15e0 <__ctype_toupper_loc@plt>
2135:	48 8b 00             	mov    rax,QWORD PTR [rax]
2138:	42 8b 04 b0          	mov    eax,DWORD PTR [rax+r14*4]
213c:	43 88 04 34          	mov    BYTE PTR [r12+r14*1],al
2140:	49 83 c6 01          	add    r14,0x1
2144:	49 81 fe 00 01 00 00 	cmp    r14,0x100
214b:	75 db                	jne    2128 <main+0x7e8>
214d:	e9 e6 fe ff ff       	jmp    2038 <main+0x6f8>
2152:	48 8d bc 24 d0 00 00 	lea    rdi,[rsp+0xd0]
2159:	00
215a:	b9 20 00 00 00       	mov    ecx,0x20
215f:	31 c0                	xor    eax,eax
2161:	48 c7 44 24 60 fe ff 	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
2168:	ff ff
216a:	41 bd 00 01 00 00    	mov    r13d,0x100
2170:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
2173:	eb 1b                	jmp    2190 <main+0x850>
2175:	48 98                	cdqe
2177:	0f b6 94 04 d0 00 00 	movzx  edx,BYTE PTR [rsp+rax*1+0xd0]
217e:	00
217f:	c6 84 04 d0 00 00 00 	mov    BYTE PTR [rsp+rax*1+0xd0],0x1
2186:	01
2187:	83 f2 01             	xor    edx,0x1
218a:	0f b6 d2             	movzx  edx,dl
218d:	41 29 d5             	sub    r13d,edx
2190:	31 f6                	xor    esi,esi
2192:	48 89 ef             	mov    rdi,rbp
2195:	e8 16 0c 00 00       	call   2db0 <get_next>
219a:	83 f8 ff             	cmp    eax,0xffffffff
219d:	75 d6                	jne    2175 <main+0x835>
219f:	4d 63 ed             	movsxd r13,r13d
21a2:	4c 89 6c 24 68       	mov    QWORD PTR [rsp+0x68],r13
21a7:	e9 c7 f9 ff ff       	jmp    1b73 <main+0x233>
21ac:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
21b1:	48 3b 44 24 68       	cmp    rax,QWORD PTR [rsp+0x68]
21b6:	48 89 eb             	mov    rbx,rbp
21b9:	44 8b 64 24 3c       	mov    r12d,DWORD PTR [rsp+0x3c]
21be:	48 8b 6c 24 10       	mov    rbp,QWORD PTR [rsp+0x10]
21c3:	0f 82 9d 02 00 00    	jb     2466 <main+0xb26>
21c9:	48 8b 44 24 20       	mov    rax,QWORD PTR [rsp+0x20]
21ce:	48 3b 43 18          	cmp    rax,QWORD PTR [rbx+0x18]
21d2:	0f 82 8e 02 00 00    	jb     2466 <main+0xb26>
21d8:	48 8b 44 24 28       	mov    rax,QWORD PTR [rsp+0x28]
21dd:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
21e2:	48 8b 44 24 30       	mov    rax,QWORD PTR [rsp+0x30]
21e7:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
21eb:	48 8b 44 24 68       	mov    rax,QWORD PTR [rsp+0x68]
21f0:	48 8b 53 18          	mov    rdx,QWORD PTR [rbx+0x18]
21f4:	48 39 d0             	cmp    rax,rdx
21f7:	0f 86 7b fc ff ff    	jbe    1e78 <main+0x538>
21fd:	80 3d dd b1 20 00 00 	cmp    BYTE PTR [rip+0x20b1dd],0x0        # 20d3e1 <truncate_set1>
2204:	0f 85 6e fc ff ff    	jne    1e78 <main+0x538>
220a:	48 85 d2             	test   rdx,rdx
220d:	0f 84 59 04 00 00    	je     266c <main+0xd2c>
2213:	48 8b 4b 08          	mov    rcx,QWORD PTR [rbx+0x8]
2217:	8b 31                	mov    esi,DWORD PTR [rcx]
2219:	83 fe 01             	cmp    esi,0x1
221c:	0f 84 2e 02 00 00    	je     2450 <main+0xb10>
2222:	0f 82 07 fc ff ff    	jb     1e2f <main+0x4ef>
2228:	83 fe 02             	cmp    esi,0x2
222b:	0f 84 17 04 00 00    	je     2648 <main+0xd08>
2231:	83 fe 04             	cmp    esi,0x4
2234:	0f 84 f5 fb ff ff    	je     1e2f <main+0x4ef>
223a:	e8 c1 f3 ff ff       	call   1600 <abort@plt>
223f:	41 83 c6 01          	add    r14d,0x1
2243:	74 0d                	je     2252 <main+0x912>
2245:	80 3d 95 b1 20 00 00 	cmp    BYTE PTR [rip+0x20b195],0x0        # 20d3e1 <truncate_set1>
224c:	0f 84 c3 02 00 00    	je     2515 <main+0xbd5>
2252:	80 3d 8b b1 20 00 00 	cmp    BYTE PTR [rip+0x20b18b],0x0        # 20d3e4 <squeeze_repeats>
2259:	48 8d 2d 80 91 20 00 	lea    rbp,[rip+0x209180]        # 20b3e0 <io_buf>
2260:	0f 85 ff 00 00 00    	jne    2365 <main+0xa25>
2266:	be 00 20 00 00       	mov    esi,0x2000
226b:	48 89 ef             	mov    rdi,rbp
226e:	e8 ad 0e 00 00       	call   3120 <read_and_xlate>
2273:	48 85 c0             	test   rax,rax
2276:	48 89 c3             	mov    rbx,rax
2279:	0f 84 c4 fc ff ff    	je     1f43 <main+0x603>
227f:	48 8b 0d 02 8e 20 00 	mov    rcx,QWORD PTR [rip+0x208e02]        # 20b088 <stdout@@GLIBC_2.2.5>
2286:	48 89 c2             	mov    rdx,rax
2289:	be 01 00 00 00       	mov    esi,0x1
228e:	48 89 ef             	mov    rdi,rbp
2291:	e8 7a f5 ff ff       	call   1810 <fwrite_unlocked@plt>
2296:	48 39 c3             	cmp    rbx,rax
2299:	74 cb                	je     2266 <main+0x926>
229b:	48 8d 35 f2 4d 00 00 	lea    rsi,[rip+0x4df2]        # 7094 <_IO_stdin_used+0x94>
22a2:	ba 05 00 00 00       	mov    edx,0x5
22a7:	31 ff                	xor    edi,edi
22a9:	e8 e2 f3 ff ff       	call   1690 <dcgettext@plt>
22ae:	48 89 c3             	mov    rbx,rax
22b1:	e8 5a f3 ff ff       	call   1610 <__errno_location@plt>
22b6:	8b 30                	mov    esi,DWORD PTR [rax]
22b8:	48 89 da             	mov    rdx,rbx
22bb:	bf 01 00 00 00       	mov    edi,0x1
22c0:	31 c0                	xor    eax,eax
22c2:	e8 89 f5 ff ff       	call   1850 <error@plt>
22c7:	48 8d 15 12 8f 20 00 	lea    rdx,[rip+0x208f12]        # 20b1e0 <in_delete_set>
22ce:	31 f6                	xor    esi,esi
22d0:	48 89 ef             	mov    rdi,rbp
22d3:	4c 8d 25 06 8e 20 00 	lea    r12,[rip+0x208e06]        # 20b0e0 <xlate>
22da:	e8 01 18 00 00       	call   3ae0 <set_initialize>
22df:	48 c7 43 10 fe ff ff 	mov    QWORD PTR [rbx+0x10],0xfffffffffffffffe
22e6:	ff
22e7:	31 c0                	xor    eax,eax
22e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
22f0:	41 88 04 04          	mov    BYTE PTR [r12+rax*1],al
22f4:	48 83 c0 01          	add    rax,0x1
22f8:	48 3d 00 01 00 00    	cmp    rax,0x100
22fe:	75 f0                	jne    22f0 <main+0x9b0>
2300:	31 ed                	xor    ebp,ebp
2302:	4c 8d 2d d7 8e 20 00 	lea    r13,[rip+0x208ed7]        # 20b1e0 <in_delete_set>
2309:	eb 11                	jmp    231c <main+0x9dc>
230b:	48 83 c5 01          	add    rbp,0x1
230f:	48 81 fd 00 01 00 00 	cmp    rbp,0x100
2316:	0f 84 36 ff ff ff    	je     2252 <main+0x912>
231c:	41 80 7c 2d 00 00    	cmp    BYTE PTR [r13+rbp*1+0x0],0x0
2322:	75 e7                	jne    230b <main+0x9cb>
2324:	31 f6                	xor    esi,esi
2326:	48 89 df             	mov    rdi,rbx
2329:	e8 82 0a 00 00       	call   2db0 <get_next>
232e:	83 f8 ff             	cmp    eax,0xffffffff
2331:	74 06                	je     2339 <main+0x9f9>
2333:	41 88 04 2c          	mov    BYTE PTR [r12+rbp*1],al
2337:	eb d2                	jmp    230b <main+0x9cb>
2339:	80 3d a1 b0 20 00 00 	cmp    BYTE PTR [rip+0x20b0a1],0x0        # 20d3e1 <truncate_set1>
2340:	0f 85 0c ff ff ff    	jne    2252 <main+0x912>
2346:	48 8d 0d 55 50 00 00 	lea    rcx,[rip+0x5055]        # 73a2 <__PRETTY_FUNCTION__.7483>
234d:	48 8d 35 cd 4c 00 00 	lea    rsi,[rip+0x4ccd]        # 7021 <_IO_stdin_used+0x21>
2354:	48 8d 3d 54 4e 00 00 	lea    rdi,[rip+0x4e54]        # 71af <_IO_stdin_used+0x1af>
235b:	ba 2d 07 00 00       	mov    edx,0x72d
2360:	e8 bb f3 ff ff       	call   1720 <__assert_fail@plt>
2365:	48 8d 15 74 8f 20 00 	lea    rdx,[rip+0x208f74]        # 20b2e0 <in_squeeze_set>
236c:	48 89 df             	mov    rdi,rbx
236f:	31 f6                	xor    esi,esi
2371:	e8 6a 17 00 00       	call   3ae0 <set_initialize>
2376:	48 8d 3d a3 0d 00 00 	lea    rdi,[rip+0xda3]        # 3120 <read_and_xlate>
237d:	e8 be 17 00 00       	call   3b40 <squeeze_filter.constprop.14>
2382:	e9 bc fb ff ff       	jmp    1f43 <main+0x603>
2387:	0f b6 35 54 b0 20 00 	movzx  esi,BYTE PTR [rip+0x20b054]        # 20d3e2 <complement>
238e:	48 8d 15 4b 8f 20 00 	lea    rdx,[rip+0x208f4b]        # 20b2e0 <in_squeeze_set>
2395:	48 89 ef             	mov    rdi,rbp
2398:	e8 43 17 00 00       	call   3ae0 <set_initialize>
239d:	48 8d 3d 9c 0c 00 00 	lea    rdi,[rip+0xc9c]        # 3040 <plain_read>
23a4:	e8 97 17 00 00       	call   3b40 <squeeze_filter.constprop.14>
23a9:	e9 95 fb ff ff       	jmp    1f43 <main+0x603>
23ae:	0f b6 35 2d b0 20 00 	movzx  esi,BYTE PTR [rip+0x20b02d]        # 20d3e2 <complement>
23b5:	48 89 ef             	mov    rdi,rbp
23b8:	48 8d 15 21 8e 20 00 	lea    rdx,[rip+0x208e21]        # 20b1e0 <in_delete_set>
23bf:	48 8d 2d 1a 90 20 00 	lea    rbp,[rip+0x20901a]        # 20b3e0 <io_buf>
23c6:	e8 15 17 00 00       	call   3ae0 <set_initialize>
23cb:	be 00 20 00 00       	mov    esi,0x2000
23d0:	48 89 ef             	mov    rdi,rbp
23d3:	e8 98 0c 00 00       	call   3070 <read_and_delete>
23d8:	48 85 c0             	test   rax,rax
23db:	48 89 c3             	mov    rbx,rax
23de:	0f 84 5f fb ff ff    	je     1f43 <main+0x603>
23e4:	48 8b 0d 9d 8c 20 00 	mov    rcx,QWORD PTR [rip+0x208c9d]        # 20b088 <stdout@@GLIBC_2.2.5>
23eb:	48 89 c2             	mov    rdx,rax
23ee:	be 01 00 00 00       	mov    esi,0x1
23f3:	48 89 ef             	mov    rdi,rbp
23f6:	e8 15 f4 ff ff       	call   1810 <fwrite_unlocked@plt>
23fb:	48 39 c3             	cmp    rbx,rax
23fe:	74 cb                	je     23cb <main+0xa8b>
2400:	48 8d 35 8d 4c 00 00 	lea    rsi,[rip+0x4c8d]        # 7094 <_IO_stdin_used+0x94>
2407:	ba 05 00 00 00       	mov    edx,0x5
240c:	31 ff                	xor    edi,edi
240e:	e8 7d f2 ff ff       	call   1690 <dcgettext@plt>
2413:	48 89 c3             	mov    rbx,rax
2416:	e8 f5 f1 ff ff       	call   1610 <__errno_location@plt>
241b:	8b 30                	mov    esi,DWORD PTR [rax]
241d:	48 89 da             	mov    rdx,rbx
2420:	bf 01 00 00 00       	mov    edi,0x1
2425:	31 c0                	xor    eax,eax
2427:	e8 24 f4 ff ff       	call   1850 <error@plt>
242c:	48 8d 35 6d 5e 00 00 	lea    rsi,[rip+0x5e6d]        # 82a0 <__PRETTY_FUNCTION__.7483+0xefe>
2433:	ba 05 00 00 00       	mov    edx,0x5
2438:	31 ff                	xor    edi,edi
243a:	e8 51 f2 ff ff       	call   1690 <dcgettext@plt>
243f:	31 f6                	xor    esi,esi
2441:	48 89 c2             	mov    rdx,rax
2444:	bf 01 00 00 00       	mov    edi,0x1
2449:	31 c0                	xor    eax,eax
244b:	e8 00 f4 ff ff       	call   1850 <error@plt>
2450:	44 0f b6 71 11       	movzx  r14d,BYTE PTR [rcx+0x11]
2455:	e9 da f9 ff ff       	jmp    1e34 <main+0x4f4>
245a:	31 ff                	xor    edi,edi
245c:	e8 df 18 00 00       	call   3d40 <usage>
2461:	e8 5a f2 ff ff       	call   16c0 <__stack_chk_fail@plt>
2466:	48 8d 0d 83 4e 00 00 	lea    rcx,[rip+0x4e83]        # 72f0 <__PRETTY_FUNCTION__.7270>
246d:	48 8d 35 ad 4b 00 00 	lea    rsi,[rip+0x4bad]        # 7021 <_IO_stdin_used+0x21>
2474:	48 8d 3d 45 5d 00 00 	lea    rdi,[rip+0x5d45]        # 81c0 <__PRETTY_FUNCTION__.7483+0xe1e>
247b:	ba c5 04 00 00       	mov    edx,0x4c5
2480:	e8 9b f2 ff ff       	call   1720 <__assert_fail@plt>
2485:	48 8d 35 2c 5c 00 00 	lea    rsi,[rip+0x5c2c]        # 80b8 <__PRETTY_FUNCTION__.7483+0xd16>
248c:	ba 05 00 00 00       	mov    edx,0x5
2491:	31 ff                	xor    edi,edi
2493:	e8 f8 f1 ff ff       	call   1690 <dcgettext@plt>
2498:	31 f6                	xor    esi,esi
249a:	48 89 c2             	mov    rdx,rax
249d:	bf 01 00 00 00       	mov    edi,0x1
24a2:	31 c0                	xor    eax,eax
24a4:	e8 a7 f3 ff ff       	call   1850 <error@plt>
24a9:	48 8d 35 d0 5b 00 00 	lea    rsi,[rip+0x5bd0]        # 8080 <__PRETTY_FUNCTION__.7483+0xcde>
24b0:	ba 05 00 00 00       	mov    edx,0x5
24b5:	31 ff                	xor    edi,edi
24b7:	e8 d4 f1 ff ff       	call   1690 <dcgettext@plt>
24bc:	31 f6                	xor    esi,esi
24be:	48 89 c2             	mov    rdx,rax
24c1:	bf 01 00 00 00       	mov    edi,0x1
24c6:	31 c0                	xor    eax,eax
24c8:	e8 83 f3 ff ff       	call   1850 <error@plt>
24cd:	48 8d 35 5c 5c 00 00 	lea    rsi,[rip+0x5c5c]        # 8130 <__PRETTY_FUNCTION__.7483+0xd8e>
24d4:	ba 05 00 00 00       	mov    edx,0x5
24d9:	31 ff                	xor    edi,edi
24db:	e8 b0 f1 ff ff       	call   1690 <dcgettext@plt>
24e0:	31 f6                	xor    esi,esi
24e2:	48 89 c2             	mov    rdx,rax
24e5:	bf 01 00 00 00       	mov    edi,0x1
24ea:	31 c0                	xor    eax,eax
24ec:	e8 5f f3 ff ff       	call   1850 <error@plt>
24f1:	48 8d 35 f8 5b 00 00 	lea    rsi,[rip+0x5bf8]        # 80f0 <__PRETTY_FUNCTION__.7483+0xd4e>
24f8:	ba 05 00 00 00       	mov    edx,0x5
24fd:	31 ff                	xor    edi,edi
24ff:	e8 8c f1 ff ff       	call   1690 <dcgettext@plt>
2504:	31 f6                	xor    esi,esi
2506:	48 89 c2             	mov    rdx,rax
2509:	bf 01 00 00 00       	mov    edi,0x1
250e:	31 c0                	xor    eax,eax
2510:	e8 3b f3 ff ff       	call   1850 <error@plt>
2515:	48 8d 0d 86 4e 00 00 	lea    rcx,[rip+0x4e86]        # 73a2 <__PRETTY_FUNCTION__.7483>
251c:	48 8d 35 fe 4a 00 00 	lea    rsi,[rip+0x4afe]        # 7021 <_IO_stdin_used+0x21>
2523:	48 8d 3d 9f 4c 00 00 	lea    rdi,[rip+0x4c9f]        # 71c9 <_IO_stdin_used+0x1c9>
252a:	ba 62 07 00 00       	mov    edx,0x762
252f:	e8 ec f1 ff ff       	call   1720 <__assert_fail@plt>
2534:	48 8d 35 55 5c 00 00 	lea    rsi,[rip+0x5c55]        # 8190 <__PRETTY_FUNCTION__.7483+0xdee>
253b:	ba 05 00 00 00       	mov    edx,0x5
2540:	31 ff                	xor    edi,edi
2542:	e8 49 f1 ff ff       	call   1690 <dcgettext@plt>
2547:	31 f6                	xor    esi,esi
2549:	48 89 c2             	mov    rdx,rax
254c:	bf 01 00 00 00       	mov    edi,0x1
2551:	31 c0                	xor    eax,eax
2553:	e8 f8 f2 ff ff       	call   1850 <error@plt>
2558:	45 85 e4             	test   r12d,r12d
255b:	75 26                	jne    2583 <main+0xc43>
255d:	48 8d 35 11 4c 00 00 	lea    rsi,[rip+0x4c11]        # 7175 <_IO_stdin_used+0x175>
2564:	31 ff                	xor    edi,edi
2566:	ba 05 00 00 00       	mov    edx,0x5
256b:	e8 20 f1 ff ff       	call   1690 <dcgettext@plt>
2570:	31 f6                	xor    esi,esi
2572:	48 89 c2             	mov    rdx,rax
2575:	31 ff                	xor    edi,edi
2577:	31 c0                	xor    eax,eax
2579:	e8 d2 f2 ff ff       	call   1850 <error@plt>
257e:	e9 a4 f4 ff ff       	jmp    1a27 <main+0xe7>
2583:	49 8b 7c dd f8       	mov    rdi,QWORD PTR [r13+rbx*8-0x8]
2588:	e8 b3 39 00 00       	call   5f40 <quote>
258d:	48 8d 35 f1 4b 00 00 	lea    rsi,[rip+0x4bf1]        # 7185 <_IO_stdin_used+0x185>
2594:	31 ff                	xor    edi,edi
2596:	48 89 c3             	mov    rbx,rax
2599:	ba 05 00 00 00       	mov    edx,0x5
259e:	e8 ed f0 ff ff       	call   1690 <dcgettext@plt>
25a3:	31 f6                	xor    esi,esi
25a5:	48 89 c2             	mov    rdx,rax
25a8:	31 ff                	xor    edi,edi
25aa:	31 c0                	xor    eax,eax
25ac:	48 89 d9             	mov    rcx,rbx
25af:	e8 9c f2 ff ff       	call   1850 <error@plt>
25b4:	80 3d 29 ae 20 00 00 	cmp    BYTE PTR [rip+0x20ae29],0x0        # 20d3e4 <squeeze_repeats>
25bb:	48 8d 35 46 5a 00 00 	lea    rsi,[rip+0x5a46]        # 8008 <__PRETTY_FUNCTION__.7483+0xc66>
25c2:	48 8d 05 f7 59 00 00 	lea    rax,[rip+0x59f7]        # 7fc0 <__PRETTY_FUNCTION__.7483+0xc1e>
25c9:	ba 05 00 00 00       	mov    edx,0x5
25ce:	48 0f 45 f0          	cmovne rsi,rax
25d2:	31 ff                	xor    edi,edi
25d4:	e8 b7 f0 ff ff       	call   1690 <dcgettext@plt>
25d9:	48 8b 3d e0 8a 20 00 	mov    rdi,QWORD PTR [rip+0x208ae0]        # 20b0c0 <stderr@@GLIBC_2.2.5>
25e0:	48 8d 15 a9 62 00 00 	lea    rdx,[rip+0x62a9]        # 8890 <quoting_style_vals+0x30>
25e7:	48 89 c1             	mov    rcx,rax
25ea:	be 01 00 00 00       	mov    esi,0x1
25ef:	31 c0                	xor    eax,eax
25f1:	e8 aa f2 ff ff       	call   18a0 <__fprintf_chk@plt>
25f6:	e9 2c f4 ff ff       	jmp    1a27 <main+0xe7>
25fb:	01 c8                	add    eax,ecx
25fd:	48 98                	cdqe
25ff:	49 8b 7c c5 00       	mov    rdi,QWORD PTR [r13+rax*8+0x0]
2604:	e8 37 39 00 00       	call   5f40 <quote>
2609:	48 8d 35 8e 4b 00 00 	lea    rsi,[rip+0x4b8e]        # 719e <_IO_stdin_used+0x19e>
2610:	31 ff                	xor    edi,edi
2612:	48 89 c3             	mov    rbx,rax
2615:	ba 05 00 00 00       	mov    edx,0x5
261a:	e8 71 f0 ff ff       	call   1690 <dcgettext@plt>
261f:	31 f6                	xor    esi,esi
2621:	48 89 c2             	mov    rdx,rax
2624:	31 ff                	xor    edi,edi
2626:	31 c0                	xor    eax,eax
2628:	48 89 d9             	mov    rcx,rbx
262b:	e8 20 f2 ff ff       	call   1850 <error@plt>
2630:	41 83 fc 02          	cmp    r12d,0x2
2634:	ba 05 00 00 00       	mov    edx,0x5
2639:	48 8d 35 f8 59 00 00 	lea    rsi,[rip+0x59f8]        # 8038 <__PRETTY_FUNCTION__.7483+0xc96>
2640:	0f 85 e1 f3 ff ff    	jne    1a27 <main+0xe7>
2646:	eb 8a                	jmp    25d2 <main+0xc92>
2648:	48 8d 35 e1 5b 00 00 	lea    rsi,[rip+0x5be1]        # 8230 <__PRETTY_FUNCTION__.7483+0xe8e>
264f:	ba 05 00 00 00       	mov    edx,0x5
2654:	31 ff                	xor    edi,edi
2656:	e8 35 f0 ff ff       	call   1690 <dcgettext@plt>
265b:	31 f6                	xor    esi,esi
265d:	48 89 c2             	mov    rdx,rax
2660:	bf 01 00 00 00       	mov    edi,0x1
2665:	31 c0                	xor    eax,eax
2667:	e8 e4 f1 ff ff       	call   1850 <error@plt>
266c:	48 8d 35 85 5b 00 00 	lea    rsi,[rip+0x5b85]        # 81f8 <__PRETTY_FUNCTION__.7483+0xe56>
2673:	ba 05 00 00 00       	mov    edx,0x5
2678:	31 ff                	xor    edi,edi
267a:	e8 11 f0 ff ff       	call   1690 <dcgettext@plt>
267f:	31 f6                	xor    esi,esi
2681:	48 89 c2             	mov    rdx,rax
2684:	bf 01 00 00 00       	mov    edi,0x1
2689:	31 c0                	xor    eax,eax
268b:	e8 c0 f1 ff ff       	call   1850 <error@plt>
2690:	e8 7b f2 ff ff       	call   1910 <append_repeated_char.part.8>
2695:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
269c:	00 00 00
269f:	90                   	nop

00000000000026a0 <_start>:
26a0:	31 ed                	xor    ebp,ebp
26a2:	49 89 d1             	mov    r9,rdx
26a5:	5e                   	pop    rsi
26a6:	48 89 e2             	mov    rdx,rsp
26a9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
26ad:	50                   	push   rax
26ae:	54                   	push   rsp
26af:	4c 8d 05 1a 49 00 00 	lea    r8,[rip+0x491a]        # 6fd0 <__libc_csu_fini>
26b6:	48 8d 0d a3 48 00 00 	lea    rcx,[rip+0x48a3]        # 6f60 <__libc_csu_init>
26bd:	48 8d 3d 7c f2 ff ff 	lea    rdi,[rip+0xfffffffffffff27c]        # 1940 <main>
26c4:	ff 15 0e 89 20 00    	call   QWORD PTR [rip+0x20890e]        # 20afd8 <__libc_start_main@GLIBC_2.2.5>
26ca:	f4                   	hlt
26cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <deregister_tm_clones>:
26d0:	48 8d 3d a9 89 20 00 	lea    rdi,[rip+0x2089a9]        # 20b080 <__progname@@GLIBC_2.2.5>
26d7:	55                   	push   rbp
26d8:	48 8d 05 a1 89 20 00 	lea    rax,[rip+0x2089a1]        # 20b080 <__progname@@GLIBC_2.2.5>
26df:	48 39 f8             	cmp    rax,rdi
26e2:	48 89 e5             	mov    rbp,rsp
26e5:	74 19                	je     2700 <deregister_tm_clones+0x30>
26e7:	48 8b 05 e2 88 20 00 	mov    rax,QWORD PTR [rip+0x2088e2]        # 20afd0 <_ITM_deregisterTMCloneTable>
26ee:	48 85 c0             	test   rax,rax
26f1:	74 0d                	je     2700 <deregister_tm_clones+0x30>
26f3:	5d                   	pop    rbp
26f4:	ff e0                	jmp    rax
26f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
26fd:	00 00 00
2700:	5d                   	pop    rbp
2701:	c3                   	ret
2702:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2706:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
270d:	00 00 00

0000000000002710 <register_tm_clones>:
2710:	48 8d 3d 69 89 20 00 	lea    rdi,[rip+0x208969]        # 20b080 <__progname@@GLIBC_2.2.5>
2717:	48 8d 35 62 89 20 00 	lea    rsi,[rip+0x208962]        # 20b080 <__progname@@GLIBC_2.2.5>
271e:	55                   	push   rbp
271f:	48 29 fe             	sub    rsi,rdi
2722:	48 89 e5             	mov    rbp,rsp
2725:	48 c1 fe 03          	sar    rsi,0x3
2729:	48 89 f0             	mov    rax,rsi
272c:	48 c1 e8 3f          	shr    rax,0x3f
2730:	48 01 c6             	add    rsi,rax
2733:	48 d1 fe             	sar    rsi,1
2736:	74 18                	je     2750 <register_tm_clones+0x40>
2738:	48 8b 05 a9 88 20 00 	mov    rax,QWORD PTR [rip+0x2088a9]        # 20afe8 <_ITM_registerTMCloneTable>
273f:	48 85 c0             	test   rax,rax
2742:	74 0c                	je     2750 <register_tm_clones+0x40>
2744:	5d                   	pop    rbp
2745:	ff e0                	jmp    rax
2747:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
274e:	00 00
2750:	5d                   	pop    rbp
2751:	c3                   	ret
2752:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2756:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
275d:	00 00 00

0000000000002760 <__do_global_dtors_aux>:
2760:	80 3d 61 89 20 00 00 	cmp    BYTE PTR [rip+0x208961],0x0        # 20b0c8 <completed.7697>
2767:	75 2f                	jne    2798 <__do_global_dtors_aux+0x38>
2769:	48 83 3d 7f 88 20 00 	cmp    QWORD PTR [rip+0x20887f],0x0        # 20aff0 <__cxa_finalize@GLIBC_2.2.5>
2770:	00
2771:	55                   	push   rbp
2772:	48 89 e5             	mov    rbp,rsp
2775:	74 0c                	je     2783 <__do_global_dtors_aux+0x23>
2777:	48 8b 3d 8a 88 20 00 	mov    rdi,QWORD PTR [rip+0x20888a]        # 20b008 <__dso_handle>
277e:	e8 7d f1 ff ff       	call   1900 <__cxa_finalize@plt>
2783:	e8 48 ff ff ff       	call   26d0 <deregister_tm_clones>
2788:	c6 05 39 89 20 00 01 	mov    BYTE PTR [rip+0x208939],0x1        # 20b0c8 <completed.7697>
278f:	5d                   	pop    rbp
2790:	c3                   	ret
2791:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
2798:	f3 c3                	repz ret
279a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000027a0 <frame_dummy>:
27a0:	55                   	push   rbp
27a1:	48 89 e5             	mov    rbp,rsp
27a4:	5d                   	pop    rbp
27a5:	e9 66 ff ff ff       	jmp    2710 <register_tm_clones>
27aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000027b0 <star_digits_closebracket>:
27b0:	4c 8b 07             	mov    r8,QWORD PTR [rdi]
27b3:	31 c0                	xor    eax,eax
27b5:	41 80 3c 30 2a       	cmp    BYTE PTR [r8+rsi*1],0x2a
27ba:	74 04                	je     27c0 <star_digits_closebracket+0x10>
27bc:	f3 c3                	repz ret
27be:	66 90                	xchg   ax,ax
27c0:	4c 8b 57 08          	mov    r10,QWORD PTR [rdi+0x8]
27c4:	41 80 3c 32 00       	cmp    BYTE PTR [r10+rsi*1],0x0
27c9:	75 f1                	jne    27bc <star_digits_closebracket+0xc>
27cb:	4c 8b 4f 10          	mov    r9,QWORD PTR [rdi+0x10]
27cf:	48 8d 56 01          	lea    rdx,[rsi+0x1]
27d3:	4c 39 ca             	cmp    rdx,r9
27d6:	73 e4                	jae    27bc <star_digits_closebracket+0xc>
27d8:	41 0f b6 44 30 01    	movzx  eax,BYTE PTR [r8+rsi*1+0x1]
27de:	89 c7                	mov    edi,eax
27e0:	83 e8 30             	sub    eax,0x30
27e3:	83 f8 09             	cmp    eax,0x9
27e6:	77 38                	ja     2820 <star_digits_closebracket+0x70>
27e8:	41 0f b6 44 32 01    	movzx  eax,BYTE PTR [r10+rsi*1+0x1]
27ee:	84 c0                	test   al,al
27f0:	74 1c                	je     280e <star_digits_closebracket+0x5e>
27f2:	eb 46                	jmp    283a <star_digits_closebracket+0x8a>
27f4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
27f8:	41 0f b6 0c 10       	movzx  ecx,BYTE PTR [r8+rdx*1]
27fd:	89 cf                	mov    edi,ecx
27ff:	83 e9 30             	sub    ecx,0x30
2802:	83 f9 09             	cmp    ecx,0x9
2805:	77 19                	ja     2820 <star_digits_closebracket+0x70>
2807:	41 80 3c 12 00       	cmp    BYTE PTR [r10+rdx*1],0x0
280c:	75 2a                	jne    2838 <star_digits_closebracket+0x88>
280e:	48 83 c2 01          	add    rdx,0x1
2812:	4c 39 ca             	cmp    rdx,r9
2815:	72 e1                	jb     27f8 <star_digits_closebracket+0x48>
2817:	f3 c3                	repz ret
2819:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
2820:	31 c0                	xor    eax,eax
2822:	40 80 ff 5d          	cmp    dil,0x5d
2826:	75 94                	jne    27bc <star_digits_closebracket+0xc>
2828:	41 0f b6 04 12       	movzx  eax,BYTE PTR [r10+rdx*1]
282d:	83 f0 01             	xor    eax,0x1
2830:	c3                   	ret
2831:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
2838:	f3 c3                	repz ret
283a:	31 c0                	xor    eax,eax
283c:	c3                   	ret
283d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000002840 <make_printable_char>:
2840:	41 54                	push   r12
2842:	55                   	push   rbp
2843:	41 89 fc             	mov    r12d,edi
2846:	53                   	push   rbx
2847:	40 0f b6 df          	movzx  ebx,dil
284b:	bf 05 00 00 00       	mov    edi,0x5
2850:	e8 8b 3d 00 00       	call   65e0 <xmalloc>
2855:	48 89 c5             	mov    rbp,rax
2858:	e8 83 f0 ff ff       	call   18e0 <__ctype_b_loc@plt>
285d:	48 8b 00             	mov    rax,QWORD PTR [rax]
2860:	f6 44 58 01 40       	test   BYTE PTR [rax+rbx*2+0x1],0x40
2865:	74 19                	je     2880 <make_printable_char+0x40>
2867:	44 88 65 00          	mov    BYTE PTR [rbp+0x0],r12b
286b:	c6 45 01 00          	mov    BYTE PTR [rbp+0x1],0x0
286f:	48 89 e8             	mov    rax,rbp
2872:	5b                   	pop    rbx
2873:	5d                   	pop    rbp
2874:	41 5c                	pop    r12
2876:	c3                   	ret
2877:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
287e:	00 00
2880:	48 8d 0d 7d 47 00 00 	lea    rcx,[rip+0x477d]        # 7004 <_IO_stdin_used+0x4>
2887:	45 0f b6 c4          	movzx  r8d,r12b
288b:	48 89 ef             	mov    rdi,rbp
288e:	ba 05 00 00 00       	mov    edx,0x5
2893:	be 01 00 00 00       	mov    esi,0x1
2898:	31 c0                	xor    eax,eax
289a:	e8 51 f0 ff ff       	call   18f0 <__sprintf_chk@plt>
289f:	48 89 e8             	mov    rax,rbp
28a2:	5b                   	pop    rbx
28a3:	5d                   	pop    rbp
28a4:	41 5c                	pop    r12
28a6:	c3                   	ret
28a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
28ae:	00 00

00000000000028b0 <make_printable_str>:
28b0:	41 57                	push   r15
28b2:	41 56                	push   r14
28b4:	ba 04 00 00 00       	mov    edx,0x4
28b9:	41 55                	push   r13
28bb:	41 54                	push   r12
28bd:	49 89 fe             	mov    r14,rdi
28c0:	55                   	push   rbp
28c1:	53                   	push   rbx
28c2:	48 8d 7e 01          	lea    rdi,[rsi+0x1]
28c6:	48 89 f3             	mov    rbx,rsi
28c9:	48 83 ec 28          	sub    rsp,0x28
28cd:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
28d4:	00 00
28d6:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
28db:	31 c0                	xor    eax,eax
28dd:	48 89 d0             	mov    rax,rdx
28e0:	48 f7 e7             	mul    rdi
28e3:	0f 80 5b 01 00 00    	jo     2a44 <make_printable_str+0x194>
28e9:	31 c9                	xor    ecx,ecx
28eb:	48 85 c0             	test   rax,rax
28ee:	0f 88 4b 01 00 00    	js     2a3f <make_printable_str+0x18f>
28f4:	48 85 c9             	test   rcx,rcx
28f7:	0f 85 42 01 00 00    	jne    2a3f <make_printable_str+0x18f>
28fd:	48 c1 e7 02          	shl    rdi,0x2
2901:	e8 da 3c 00 00       	call   65e0 <xmalloc>
2906:	48 85 db             	test   rbx,rbx
2909:	49 89 c5             	mov    r13,rax
290c:	0f 84 be 00 00 00    	je     29d0 <make_printable_str+0x120>
2912:	4c 01 f3             	add    rbx,r14
2915:	49 89 c7             	mov    r15,rax
2918:	48 8d 2d f3 46 00 00 	lea    rbp,[rip+0x46f3]        # 7012 <_IO_stdin_used+0x12>
291f:	4c 8d 25 f8 46 00 00 	lea    r12,[rip+0x46f8]        # 701e <_IO_stdin_used+0x1e>
2926:	eb 4c                	jmp    2974 <make_printable_str+0xc4>
2928:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
292f:	00
2930:	41 80 f8 0c          	cmp    r8b,0xc
2934:	48 89 ee             	mov    rsi,rbp
2937:	74 27                	je     2960 <make_printable_str+0xb0>
2939:	4c 89 e6             	mov    rsi,r12
293c:	7c 22                	jl     2960 <make_printable_str+0xb0>
293e:	41 80 f8 0d          	cmp    r8b,0xd
2942:	48 8d 35 cf 46 00 00 	lea    rsi,[rip+0x46cf]        # 7018 <_IO_stdin_used+0x18>
2949:	74 15                	je     2960 <make_printable_str+0xb0>
294b:	41 80 f8 5c          	cmp    r8b,0x5c
294f:	48 8d 35 b4 46 00 00 	lea    rsi,[rip+0x46b4]        # 700a <_IO_stdin_used+0xa>
2956:	75 4b                	jne    29a3 <make_printable_str+0xf3>
2958:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
295f:	00
2960:	4c 89 ff             	mov    rdi,r15
2963:	49 83 c6 01          	add    r14,0x1
2967:	e8 14 ed ff ff       	call   1680 <stpcpy@plt>
296c:	4c 39 f3             	cmp    rbx,r14
296f:	49 89 c7             	mov    r15,rax
2972:	74 5c                	je     29d0 <make_printable_str+0x120>
2974:	45 0f b6 06          	movzx  r8d,BYTE PTR [r14]
2978:	41 80 f8 0a          	cmp    r8b,0xa
297c:	74 7a                	je     29f8 <make_printable_str+0x148>
297e:	7f b0                	jg     2930 <make_printable_str+0x80>
2980:	41 80 f8 08          	cmp    r8b,0x8
2984:	48 8d 35 84 46 00 00 	lea    rsi,[rip+0x4684]        # 700f <_IO_stdin_used+0xf>
298b:	74 d3                	je     2960 <make_printable_str+0xb0>
298d:	48 8d 35 87 46 00 00 	lea    rsi,[rip+0x4687]        # 701b <_IO_stdin_used+0x1b>
2994:	7f ca                	jg     2960 <make_printable_str+0xb0>
2996:	41 80 f8 07          	cmp    r8b,0x7
299a:	48 8d 35 6b 46 00 00 	lea    rsi,[rip+0x466b]        # 700c <_IO_stdin_used+0xc>
29a1:	74 bd                	je     2960 <make_printable_str+0xb0>
29a3:	44 88 44 24 08       	mov    BYTE PTR [rsp+0x8],r8b
29a8:	e8 33 ef ff ff       	call   18e0 <__ctype_b_loc@plt>
29ad:	0f b6 54 24 08       	movzx  edx,BYTE PTR [rsp+0x8]
29b2:	48 8b 08             	mov    rcx,QWORD PTR [rax]
29b5:	f6 44 51 01 40       	test   BYTE PTR [rcx+rdx*2+0x1],0x40
29ba:	49 89 d0             	mov    r8,rdx
29bd:	74 49                	je     2a08 <make_printable_str+0x158>
29bf:	88 54 24 13          	mov    BYTE PTR [rsp+0x13],dl
29c3:	c6 44 24 14 00       	mov    BYTE PTR [rsp+0x14],0x0
29c8:	48 8d 74 24 13       	lea    rsi,[rsp+0x13]
29cd:	eb 91                	jmp    2960 <make_printable_str+0xb0>
29cf:	90                   	nop
29d0:	48 8b 4c 24 18       	mov    rcx,QWORD PTR [rsp+0x18]
29d5:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
29dc:	00 00
29de:	4c 89 e8             	mov    rax,r13
29e1:	75 57                	jne    2a3a <make_printable_str+0x18a>
29e3:	48 83 c4 28          	add    rsp,0x28
29e7:	5b                   	pop    rbx
29e8:	5d                   	pop    rbp
29e9:	41 5c                	pop    r12
29eb:	41 5d                	pop    r13
29ed:	41 5e                	pop    r14
29ef:	41 5f                	pop    r15
29f1:	c3                   	ret
29f2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
29f8:	48 8d 35 16 46 00 00 	lea    rsi,[rip+0x4616]        # 7015 <_IO_stdin_used+0x15>
29ff:	e9 5c ff ff ff       	jmp    2960 <make_printable_str+0xb0>
2a04:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2a08:	4c 8d 54 24 13       	lea    r10,[rsp+0x13]
2a0d:	48 8d 0d f0 45 00 00 	lea    rcx,[rip+0x45f0]        # 7004 <_IO_stdin_used+0x4>
2a14:	be 01 00 00 00       	mov    esi,0x1
2a19:	ba 05 00 00 00       	mov    edx,0x5
2a1e:	31 c0                	xor    eax,eax
2a20:	4c 89 d7             	mov    rdi,r10
2a23:	4c 89 54 24 08       	mov    QWORD PTR [rsp+0x8],r10
2a28:	e8 c3 ee ff ff       	call   18f0 <__sprintf_chk@plt>
2a2d:	4c 8b 54 24 08       	mov    r10,QWORD PTR [rsp+0x8]
2a32:	4c 89 d6             	mov    rsi,r10
2a35:	e9 26 ff ff ff       	jmp    2960 <make_printable_str+0xb0>
2a3a:	e8 81 ec ff ff       	call   16c0 <__stack_chk_fail@plt>
2a3f:	e8 ec 3d 00 00       	call   6830 <xalloc_die>
2a44:	b9 01 00 00 00       	mov    ecx,0x1
2a49:	e9 9d fe ff ff       	jmp    28eb <make_printable_str+0x3b>
2a4e:	66 90                	xchg   ax,ax

0000000000002a50 <is_char_class_member>:
2a50:	83 ff 0b             	cmp    edi,0xb
2a53:	53                   	push   rbx
2a54:	0f 87 89 01 00 00    	ja     2be3 <is_char_class_member+0x193>
2a5a:	48 8d 15 1f 48 00 00 	lea    rdx,[rip+0x481f]        # 7280 <_IO_stdin_used+0x280>
2a61:	89 ff                	mov    edi,edi
2a63:	89 f3                	mov    ebx,esi
2a65:	48 63 04 ba          	movsxd rax,DWORD PTR [rdx+rdi*4]
2a69:	48 01 d0             	add    rax,rdx
2a6c:	ff e0                	jmp    rax
2a6e:	66 90                	xchg   ax,ax
2a70:	e8 6b ee ff ff       	call   18e0 <__ctype_b_loc@plt>
2a75:	48 8b 00             	mov    rax,QWORD PTR [rax]
2a78:	0f b6 f3             	movzx  esi,bl
2a7b:	0f b7 04 70          	movzx  eax,WORD PTR [rax+rsi*2]
2a7f:	66 25 00 01          	and    ax,0x100
2a83:	0f b7 c0             	movzx  eax,ax
2a86:	85 c0                	test   eax,eax
2a88:	0f 95 c0             	setne  al
2a8b:	5b                   	pop    rbx
2a8c:	c3                   	ret
2a8d:	0f 1f 00             	nop    DWORD PTR [rax]
2a90:	e8 4b ee ff ff       	call   18e0 <__ctype_b_loc@plt>
2a95:	48 8b 00             	mov    rax,QWORD PTR [rax]
2a98:	0f b6 f3             	movzx  esi,bl
2a9b:	0f b7 04 70          	movzx  eax,WORD PTR [rax+rsi*2]
2a9f:	66 25 00 10          	and    ax,0x1000
2aa3:	0f b7 c0             	movzx  eax,ax
2aa6:	eb de                	jmp    2a86 <is_char_class_member+0x36>
2aa8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
2aaf:	00
2ab0:	e8 2b ee ff ff       	call   18e0 <__ctype_b_loc@plt>
2ab5:	48 8b 00             	mov    rax,QWORD PTR [rax]
2ab8:	0f b6 f3             	movzx  esi,bl
2abb:	0f b7 04 70          	movzx  eax,WORD PTR [rax+rsi*2]
2abf:	83 e0 08             	and    eax,0x8
2ac2:	0f b7 c0             	movzx  eax,ax
2ac5:	eb bf                	jmp    2a86 <is_char_class_member+0x36>
2ac7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
2ace:	00 00
2ad0:	e8 0b ee ff ff       	call   18e0 <__ctype_b_loc@plt>
2ad5:	48 8b 00             	mov    rax,QWORD PTR [rax]
2ad8:	0f b6 f3             	movzx  esi,bl
2adb:	0f b7 04 70          	movzx  eax,WORD PTR [rax+rsi*2]
2adf:	66 25 00 04          	and    ax,0x400
2ae3:	0f b7 c0             	movzx  eax,ax
2ae6:	eb 9e                	jmp    2a86 <is_char_class_member+0x36>
2ae8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
2aef:	00
2af0:	e8 eb ed ff ff       	call   18e0 <__ctype_b_loc@plt>
2af5:	48 8b 00             	mov    rax,QWORD PTR [rax]
2af8:	0f b6 f3             	movzx  esi,bl
2afb:	0f b7 04 70          	movzx  eax,WORD PTR [rax+rsi*2]
2aff:	83 e0 01             	and    eax,0x1
2b02:	eb 82                	jmp    2a86 <is_char_class_member+0x36>
2b04:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2b08:	e8 d3 ed ff ff       	call   18e0 <__ctype_b_loc@plt>
2b0d:	48 8b 00             	mov    rax,QWORD PTR [rax]
2b10:	0f b6 f3             	movzx  esi,bl
2b13:	0f b7 04 70          	movzx  eax,WORD PTR [rax+rsi*2]
2b17:	83 e0 02             	and    eax,0x2
2b1a:	0f b7 c0             	movzx  eax,ax
2b1d:	e9 64 ff ff ff       	jmp    2a86 <is_char_class_member+0x36>
2b22:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
2b28:	e8 b3 ed ff ff       	call   18e0 <__ctype_b_loc@plt>
2b2d:	48 8b 00             	mov    rax,QWORD PTR [rax]
2b30:	0f b6 f3             	movzx  esi,bl
2b33:	0f b7 04 70          	movzx  eax,WORD PTR [rax+rsi*2]
2b37:	66 25 00 08          	and    ax,0x800
2b3b:	0f b7 c0             	movzx  eax,ax
2b3e:	e9 43 ff ff ff       	jmp    2a86 <is_char_class_member+0x36>
2b43:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
2b48:	e8 93 ed ff ff       	call   18e0 <__ctype_b_loc@plt>
2b4d:	48 8b 00             	mov    rax,QWORD PTR [rax]
2b50:	0f b6 f3             	movzx  esi,bl
2b53:	0f b7 04 70          	movzx  eax,WORD PTR [rax+rsi*2]
2b57:	66 25 00 80          	and    ax,0x8000
2b5b:	0f b7 c0             	movzx  eax,ax
2b5e:	e9 23 ff ff ff       	jmp    2a86 <is_char_class_member+0x36>
2b63:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
2b68:	e8 73 ed ff ff       	call   18e0 <__ctype_b_loc@plt>
2b6d:	48 8b 00             	mov    rax,QWORD PTR [rax]
2b70:	0f b6 f3             	movzx  esi,bl
2b73:	0f b7 04 70          	movzx  eax,WORD PTR [rax+rsi*2]
2b77:	66 25 00 02          	and    ax,0x200
2b7b:	0f b7 c0             	movzx  eax,ax
2b7e:	e9 03 ff ff ff       	jmp    2a86 <is_char_class_member+0x36>
2b83:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
2b88:	e8 53 ed ff ff       	call   18e0 <__ctype_b_loc@plt>
2b8d:	48 8b 00             	mov    rax,QWORD PTR [rax]
2b90:	0f b6 f3             	movzx  esi,bl
2b93:	0f b7 04 70          	movzx  eax,WORD PTR [rax+rsi*2]
2b97:	66 25 00 40          	and    ax,0x4000
2b9b:	0f b7 c0             	movzx  eax,ax
2b9e:	e9 e3 fe ff ff       	jmp    2a86 <is_char_class_member+0x36>
2ba3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
2ba8:	e8 33 ed ff ff       	call   18e0 <__ctype_b_loc@plt>
2bad:	48 8b 00             	mov    rax,QWORD PTR [rax]
2bb0:	0f b6 f3             	movzx  esi,bl
2bb3:	0f b7 04 70          	movzx  eax,WORD PTR [rax+rsi*2]
2bb7:	83 e0 04             	and    eax,0x4
2bba:	0f b7 c0             	movzx  eax,ax
2bbd:	e9 c4 fe ff ff       	jmp    2a86 <is_char_class_member+0x36>
2bc2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
2bc8:	e8 13 ed ff ff       	call   18e0 <__ctype_b_loc@plt>
2bcd:	48 8b 00             	mov    rax,QWORD PTR [rax]
2bd0:	0f b6 f3             	movzx  esi,bl
2bd3:	0f b7 04 70          	movzx  eax,WORD PTR [rax+rsi*2]
2bd7:	66 25 00 20          	and    ax,0x2000
2bdb:	0f b7 c0             	movzx  eax,ax
2bde:	e9 a3 fe ff ff       	jmp    2a86 <is_char_class_member+0x36>
2be3:	e8 18 ea ff ff       	call   1600 <abort@plt>
2be8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
2bef:	00

0000000000002bf0 <get_spec_stats>:
2bf0:	41 57                	push   r15
2bf2:	41 56                	push   r14
2bf4:	45 31 f6             	xor    r14d,r14d
2bf7:	41 55                	push   r13
2bf9:	41 54                	push   r12
2bfb:	55                   	push   rbp
2bfc:	53                   	push   rbx
2bfd:	48 83 ec 18          	sub    rsp,0x18
2c01:	48 8b 07             	mov    rax,QWORD PTR [rdi]
2c04:	48 c7 47 20 00 00 00 	mov    QWORD PTR [rdi+0x20],0x0
2c0b:	00
2c0c:	48 89 7c 24 08       	mov    QWORD PTR [rsp+0x8],rdi
2c11:	c6 47 30 00          	mov    BYTE PTR [rdi+0x30],0x0
2c15:	c6 47 32 00          	mov    BYTE PTR [rdi+0x32],0x0
2c19:	c6 47 31 00          	mov    BYTE PTR [rdi+0x31],0x0
2c1d:	48 8b 68 08          	mov    rbp,QWORD PTR [rax+0x8]
2c21:	48 85 ed             	test   rbp,rbp
2c24:	74 76                	je     2c9c <get_spec_stats+0xac>
2c26:	4c 8d 25 83 46 00 00 	lea    r12,[rip+0x4683]        # 72b0 <_IO_stdin_used+0x2b0>
2c2d:	0f 1f 00             	nop    DWORD PTR [rax]
2c30:	83 7d 00 04          	cmp    DWORD PTR [rbp+0x0],0x4
2c34:	0f 87 26 01 00 00    	ja     2d60 <get_spec_stats+0x170>
2c3a:	8b 45 00             	mov    eax,DWORD PTR [rbp+0x0]
2c3d:	49 63 04 84          	movsxd rax,DWORD PTR [r12+rax*4]
2c41:	4c 01 e0             	add    rax,r12
2c44:	ff e0                	jmp    rax
2c46:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
2c4d:	00 00 00
2c50:	0f b6 4d 10          	movzx  ecx,BYTE PTR [rbp+0x10]
2c54:	31 c0                	xor    eax,eax
2c56:	31 db                	xor    ebx,ebx
2c58:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
2c5f:	00
2c60:	31 d2                	xor    edx,edx
2c62:	38 c1                	cmp    cl,al
2c64:	0f 94 c2             	sete   dl
2c67:	83 c0 01             	add    eax,0x1
2c6a:	48 01 d3             	add    rbx,rdx
2c6d:	3d 00 01 00 00       	cmp    eax,0x100
2c72:	75 ec                	jne    2c60 <get_spec_stats+0x70>
2c74:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
2c79:	c6 40 30 01          	mov    BYTE PTR [rax+0x30],0x1
2c7d:	4c 01 f3             	add    rbx,r14
2c80:	49 89 de             	mov    r14,rbx
2c83:	0f 82 fb 00 00 00    	jb     2d84 <get_spec_stats+0x194>
2c89:	48 83 fb ff          	cmp    rbx,0xffffffffffffffff
2c8d:	0f 84 f1 00 00 00    	je     2d84 <get_spec_stats+0x194>
2c93:	48 8b 6d 08          	mov    rbp,QWORD PTR [rbp+0x8]
2c97:	48 85 ed             	test   rbp,rbp
2c9a:	75 94                	jne    2c30 <get_spec_stats+0x40>
2c9c:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
2ca1:	4c 89 70 18          	mov    QWORD PTR [rax+0x18],r14
2ca5:	48 83 c4 18          	add    rsp,0x18
2ca9:	5b                   	pop    rbx
2caa:	5d                   	pop    rbp
2cab:	41 5c                	pop    r12
2cad:	41 5d                	pop    r13
2caf:	41 5e                	pop    r14
2cb1:	41 5f                	pop    r15
2cb3:	c3                   	ret
2cb4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2cb8:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
2cbd:	44 8b 7d 10          	mov    r15d,DWORD PTR [rbp+0x10]
2cc1:	45 31 ed             	xor    r13d,r13d
2cc4:	31 db                	xor    ebx,ebx
2cc6:	c6 40 31 01          	mov    BYTE PTR [rax+0x31],0x1
2cca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
2cd0:	44 89 ee             	mov    esi,r13d
2cd3:	44 89 ff             	mov    edi,r15d
2cd6:	e8 75 fd ff ff       	call   2a50 <is_char_class_member>
2cdb:	3c 01                	cmp    al,0x1
2cdd:	48 83 db ff          	sbb    rbx,0xffffffffffffffff
2ce1:	41 83 c5 01          	add    r13d,0x1
2ce5:	41 81 fd 00 01 00 00 	cmp    r13d,0x100
2cec:	75 e2                	jne    2cd0 <get_spec_stats+0xe0>
2cee:	41 83 ff 06          	cmp    r15d,0x6
2cf2:	74 89                	je     2c7d <get_spec_stats+0x8d>
2cf4:	41 83 ff 0a          	cmp    r15d,0xa
2cf8:	74 83                	je     2c7d <get_spec_stats+0x8d>
2cfa:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
2cff:	c6 40 32 01          	mov    BYTE PTR [rax+0x32],0x1
2d03:	e9 75 ff ff ff       	jmp    2c7d <get_spec_stats+0x8d>
2d08:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
2d0f:	00
2d10:	0f b6 45 11          	movzx  eax,BYTE PTR [rbp+0x11]
2d14:	0f b6 55 10          	movzx  edx,BYTE PTR [rbp+0x10]
2d18:	38 d0                	cmp    al,dl
2d1a:	72 49                	jb     2d65 <get_spec_stats+0x175>
2d1c:	0f b6 d8             	movzx  ebx,al
2d1f:	89 d8                	mov    eax,ebx
2d21:	29 d0                	sub    eax,edx
2d23:	8d 58 01             	lea    ebx,[rax+0x1]
2d26:	48 63 db             	movsxd rbx,ebx
2d29:	e9 4f ff ff ff       	jmp    2c7d <get_spec_stats+0x8d>
2d2e:	66 90                	xchg   ax,ax
2d30:	bb 01 00 00 00       	mov    ebx,0x1
2d35:	e9 43 ff ff ff       	jmp    2c7d <get_spec_stats+0x8d>
2d3a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
2d40:	48 8b 5d 18          	mov    rbx,QWORD PTR [rbp+0x18]
2d44:	48 85 db             	test   rbx,rbx
2d47:	0f 85 30 ff ff ff    	jne    2c7d <get_spec_stats+0x8d>
2d4d:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
2d52:	48 89 68 28          	mov    QWORD PTR [rax+0x28],rbp
2d56:	48 83 40 20 01       	add    QWORD PTR [rax+0x20],0x1
2d5b:	e9 33 ff ff ff       	jmp    2c93 <get_spec_stats+0xa3>
2d60:	e8 9b e8 ff ff       	call   1600 <abort@plt>
2d65:	48 8d 0d 9c 45 00 00 	lea    rcx,[rip+0x459c]        # 7308 <__PRETTY_FUNCTION__.7281>
2d6c:	48 8d 35 ae 42 00 00 	lea    rsi,[rip+0x42ae]        # 7021 <_IO_stdin_used+0x21>
2d73:	48 8d 3d 2e 46 00 00 	lea    rdi,[rip+0x462e]        # 73a8 <__PRETTY_FUNCTION__.7483+0x6>
2d7a:	ba ee 04 00 00       	mov    edx,0x4ee
2d7f:	e8 9c e9 ff ff       	call   1720 <__assert_fail@plt>
2d84:	48 8d 35 b1 42 00 00 	lea    rsi,[rip+0x42b1]        # 703c <_IO_stdin_used+0x3c>
2d8b:	ba 05 00 00 00       	mov    edx,0x5
2d90:	31 ff                	xor    edi,edi
2d92:	e8 f9 e8 ff ff       	call   1690 <dcgettext@plt>
2d97:	31 f6                	xor    esi,esi
2d99:	48 89 c2             	mov    rdx,rax
2d9c:	bf 01 00 00 00       	mov    edi,0x1
2da1:	31 c0                	xor    eax,eax
2da3:	e8 a8 ea ff ff       	call   1850 <error@plt>
2da8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
2daf:	00

0000000000002db0 <get_next>:
2db0:	41 56                	push   r14
2db2:	41 55                	push   r13
2db4:	48 8d 15 09 45 00 00 	lea    rdx,[rip+0x4509]        # 72c4 <_IO_stdin_used+0x2c4>
2dbb:	41 54                	push   r12
2dbd:	55                   	push   rbp
2dbe:	49 89 fe             	mov    r14,rdi
2dc1:	53                   	push   rbx
2dc2:	48 8b 47 10          	mov    rax,QWORD PTR [rdi+0x10]
2dc6:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
2dcd:	48 85 f6             	test   rsi,rsi
2dd0:	74 06                	je     2dd8 <get_next+0x28>
2dd2:	c7 06 02 00 00 00    	mov    DWORD PTR [rsi],0x2
2dd8:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
2ddc:	0f 84 3e 01 00 00    	je     2f20 <get_next+0x170>
2de2:	49 8b 6e 08          	mov    rbp,QWORD PTR [r14+0x8]
2de6:	48 85 ed             	test   rbp,rbp
2de9:	0f 84 99 01 00 00    	je     2f88 <get_next+0x1d8>
2def:	83 7d 00 04          	cmp    DWORD PTR [rbp+0x0],0x4
2df3:	0f 87 e5 01 00 00    	ja     2fde <get_next+0x22e>
2df9:	8b 45 00             	mov    eax,DWORD PTR [rbp+0x0]
2dfc:	48 63 04 82          	movsxd rax,DWORD PTR [rdx+rax*4]
2e00:	48 01 d0             	add    rax,rdx
2e03:	ff e0                	jmp    rax
2e05:	0f 1f 00             	nop    DWORD PTR [rax]
2e08:	48 8b 45 08          	mov    rax,QWORD PTR [rbp+0x8]
2e0c:	44 0f b6 6d 10       	movzx  r13d,BYTE PTR [rbp+0x10]
2e11:	49 c7 46 10 ff ff ff 	mov    QWORD PTR [r14+0x10],0xffffffffffffffff
2e18:	ff
2e19:	49 89 46 08          	mov    QWORD PTR [r14+0x8],rax
2e1d:	5b                   	pop    rbx
2e1e:	44 89 e8             	mov    eax,r13d
2e21:	5d                   	pop    rbp
2e22:	41 5c                	pop    r12
2e24:	41 5d                	pop    r13
2e26:	41 5e                	pop    r14
2e28:	c3                   	ret
2e29:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
2e30:	48 8b 45 18          	mov    rax,QWORD PTR [rbp+0x18]
2e34:	48 85 c0             	test   rax,rax
2e37:	0f 85 75 01 00 00    	jne    2fb2 <get_next+0x202>
2e3d:	48 8b 45 08          	mov    rax,QWORD PTR [rbp+0x8]
2e41:	49 89 4e 10          	mov    QWORD PTR [r14+0x10],rcx
2e45:	49 89 46 08          	mov    QWORD PTR [r14+0x8],rax
2e49:	48 89 c8             	mov    rax,rcx
2e4c:	e9 7c ff ff ff       	jmp    2dcd <get_next+0x1d>
2e51:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
2e58:	48 85 f6             	test   rsi,rsi
2e5b:	44 8b 65 10          	mov    r12d,DWORD PTR [rbp+0x10]
2e5f:	74 16                	je     2e77 <get_next+0xc7>
2e61:	41 83 fc 06          	cmp    r12d,0x6
2e65:	0f 84 0d 01 00 00    	je     2f78 <get_next+0x1c8>
2e6b:	41 83 fc 0a          	cmp    r12d,0xa
2e6f:	75 06                	jne    2e77 <get_next+0xc7>
2e71:	c7 06 01 00 00 00    	mov    DWORD PTR [rsi],0x1
2e77:	49 8b 5e 10          	mov    rbx,QWORD PTR [r14+0x10]
2e7b:	48 83 fb ff          	cmp    rbx,0xffffffffffffffff
2e7f:	0f 84 b3 00 00 00    	je     2f38 <get_next+0x188>
2e85:	0f b6 f3             	movzx  esi,bl
2e88:	44 89 e7             	mov    edi,r12d
2e8b:	e8 c0 fb ff ff       	call   2a50 <is_char_class_member>
2e90:	84 c0                	test   al,al
2e92:	0f 84 4b 01 00 00    	je     2fe3 <get_next+0x233>
2e98:	41 89 dd             	mov    r13d,ebx
2e9b:	83 c3 01             	add    ebx,0x1
2e9e:	81 fb ff 00 00 00    	cmp    ebx,0xff
2ea4:	7e 15                	jle    2ebb <get_next+0x10b>
2ea6:	eb 5a                	jmp    2f02 <get_next+0x152>
2ea8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
2eaf:	00
2eb0:	83 c3 01             	add    ebx,0x1
2eb3:	81 fb 00 01 00 00    	cmp    ebx,0x100
2eb9:	74 47                	je     2f02 <get_next+0x152>
2ebb:	0f b6 f3             	movzx  esi,bl
2ebe:	44 89 e7             	mov    edi,r12d
2ec1:	e8 8a fb ff ff       	call   2a50 <is_char_class_member>
2ec6:	84 c0                	test   al,al
2ec8:	74 e6                	je     2eb0 <get_next+0x100>
2eca:	48 63 db             	movsxd rbx,ebx
2ecd:	44 89 e8             	mov    eax,r13d
2ed0:	49 89 5e 10          	mov    QWORD PTR [r14+0x10],rbx
2ed4:	5b                   	pop    rbx
2ed5:	5d                   	pop    rbp
2ed6:	41 5c                	pop    r12
2ed8:	41 5d                	pop    r13
2eda:	41 5e                	pop    r14
2edc:	c3                   	ret
2edd:	0f 1f 00             	nop    DWORD PTR [rax]
2ee0:	49 8b 46 10          	mov    rax,QWORD PTR [r14+0x10]
2ee4:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
2ee8:	74 7e                	je     2f68 <get_next+0x1b8>
2eea:	48 83 c0 01          	add    rax,0x1
2eee:	49 89 46 10          	mov    QWORD PTR [r14+0x10],rax
2ef2:	0f b6 55 11          	movzx  edx,BYTE PTR [rbp+0x11]
2ef6:	41 89 c5             	mov    r13d,eax
2ef9:	48 39 c2             	cmp    rdx,rax
2efc:	0f 85 1b ff ff ff    	jne    2e1d <get_next+0x6d>
2f02:	48 8b 45 08          	mov    rax,QWORD PTR [rbp+0x8]
2f06:	49 c7 46 10 ff ff ff 	mov    QWORD PTR [r14+0x10],0xffffffffffffffff
2f0d:	ff
2f0e:	5b                   	pop    rbx
2f0f:	5d                   	pop    rbp
2f10:	49 89 46 08          	mov    QWORD PTR [r14+0x8],rax
2f14:	44 89 e8             	mov    eax,r13d
2f17:	41 5c                	pop    r12
2f19:	41 5d                	pop    r13
2f1b:	41 5e                	pop    r14
2f1d:	c3                   	ret
2f1e:	66 90                	xchg   ax,ax
2f20:	49 8b 06             	mov    rax,QWORD PTR [r14]
2f23:	48 8b 68 08          	mov    rbp,QWORD PTR [rax+0x8]
2f27:	49 89 4e 10          	mov    QWORD PTR [r14+0x10],rcx
2f2b:	49 89 6e 08          	mov    QWORD PTR [r14+0x8],rbp
2f2f:	e9 b2 fe ff ff       	jmp    2de6 <get_next+0x36>
2f34:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2f38:	31 db                	xor    ebx,ebx
2f3a:	eb 0f                	jmp    2f4b <get_next+0x19b>
2f3c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2f40:	83 c3 01             	add    ebx,0x1
2f43:	81 fb 00 01 00 00    	cmp    ebx,0x100
2f49:	74 48                	je     2f93 <get_next+0x1e3>
2f4b:	89 de                	mov    esi,ebx
2f4d:	44 89 e7             	mov    edi,r12d
2f50:	e8 fb fa ff ff       	call   2a50 <is_char_class_member>
2f55:	84 c0                	test   al,al
2f57:	74 e7                	je     2f40 <get_next+0x190>
2f59:	48 63 db             	movsxd rbx,ebx
2f5c:	49 89 5e 10          	mov    QWORD PTR [r14+0x10],rbx
2f60:	e9 20 ff ff ff       	jmp    2e85 <get_next+0xd5>
2f65:	0f 1f 00             	nop    DWORD PTR [rax]
2f68:	0f b6 45 10          	movzx  eax,BYTE PTR [rbp+0x10]
2f6c:	49 89 46 10          	mov    QWORD PTR [r14+0x10],rax
2f70:	e9 7d ff ff ff       	jmp    2ef2 <get_next+0x142>
2f75:	0f 1f 00             	nop    DWORD PTR [rax]
2f78:	c7 06 00 00 00 00    	mov    DWORD PTR [rsi],0x0
2f7e:	e9 f4 fe ff ff       	jmp    2e77 <get_next+0xc7>
2f83:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
2f88:	41 bd ff ff ff ff    	mov    r13d,0xffffffff
2f8e:	e9 8a fe ff ff       	jmp    2e1d <get_next+0x6d>
2f93:	48 8d 0d 3e 43 00 00 	lea    rcx,[rip+0x433e]        # 72d8 <__PRETTY_FUNCTION__.7229>
2f9a:	48 8d 35 80 40 00 00 	lea    rsi,[rip+0x4080]        # 7021 <_IO_stdin_used+0x21>
2fa1:	48 8d 3d af 40 00 00 	lea    rdi,[rip+0x40af]        # 7057 <_IO_stdin_used+0x57>
2fa8:	ba 34 04 00 00       	mov    edx,0x434
2fad:	e8 6e e7 ff ff       	call   1720 <__assert_fail@plt>
2fb2:	49 8b 4e 10          	mov    rcx,QWORD PTR [r14+0x10]
2fb6:	44 0f b6 6d 10       	movzx  r13d,BYTE PTR [rbp+0x10]
2fbb:	48 8d 51 01          	lea    rdx,[rcx+0x1]
2fbf:	48 83 f9 ff          	cmp    rcx,0xffffffffffffffff
2fc3:	b9 01 00 00 00       	mov    ecx,0x1
2fc8:	48 0f 44 d1          	cmove  rdx,rcx
2fcc:	48 39 d0             	cmp    rax,rdx
2fcf:	49 89 56 10          	mov    QWORD PTR [r14+0x10],rdx
2fd3:	0f 85 44 fe ff ff    	jne    2e1d <get_next+0x6d>
2fd9:	e9 24 ff ff ff       	jmp    2f02 <get_next+0x152>
2fde:	e8 1d e6 ff ff       	call   1600 <abort@plt>
2fe3:	48 8d 0d ee 42 00 00 	lea    rcx,[rip+0x42ee]        # 72d8 <__PRETTY_FUNCTION__.7229>
2fea:	48 8d 35 30 40 00 00 	lea    rsi,[rip+0x4030]        # 7021 <_IO_stdin_used+0x21>
2ff1:	48 8d 3d e0 43 00 00 	lea    rdi,[rip+0x43e0]        # 73d8 <__PRETTY_FUNCTION__.7483+0x36>
2ff8:	ba 37 04 00 00       	mov    edx,0x437
2ffd:	e8 1e e7 ff ff       	call   1720 <__assert_fail@plt>
3002:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
3006:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
300d:	00 00 00

0000000000003010 <plain_read.part.5>:
3010:	53                   	push   rbx
3011:	48 8d 35 4b 40 00 00 	lea    rsi,[rip+0x404b]        # 7063 <_IO_stdin_used+0x63>
3018:	ba 05 00 00 00       	mov    edx,0x5
301d:	31 ff                	xor    edi,edi
301f:	e8 6c e6 ff ff       	call   1690 <dcgettext@plt>
3024:	48 89 c3             	mov    rbx,rax
3027:	e8 e4 e5 ff ff       	call   1610 <__errno_location@plt>
302c:	8b 30                	mov    esi,DWORD PTR [rax]
302e:	48 89 da             	mov    rdx,rbx
3031:	bf 01 00 00 00       	mov    edi,0x1
3036:	31 c0                	xor    eax,eax
3038:	e8 13 e8 ff ff       	call   1850 <error@plt>
303d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000003040 <plain_read>:
3040:	48 83 ec 08          	sub    rsp,0x8
3044:	48 89 f2             	mov    rdx,rsi
3047:	48 89 fe             	mov    rsi,rdi
304a:	31 ff                	xor    edi,edi
304c:	e8 0f 2f 00 00       	call   5f60 <safe_read>
3051:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
3055:	74 05                	je     305c <plain_read+0x1c>
3057:	48 83 c4 08          	add    rsp,0x8
305b:	c3                   	ret
305c:	e8 af ff ff ff       	call   3010 <plain_read.part.5>
3061:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3066:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
306d:	00 00 00

0000000000003070 <read_and_delete>:
3070:	41 54                	push   r12
3072:	55                   	push   rbp
3073:	48 8d 2d 66 81 20 00 	lea    rbp,[rip+0x208166]        # 20b1e0 <in_delete_set>
307a:	53                   	push   rbx
307b:	49 89 fc             	mov    r12,rdi
307e:	48 89 f3             	mov    rbx,rsi
3081:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
3088:	31 ff                	xor    edi,edi
308a:	48 89 da             	mov    rdx,rbx
308d:	4c 89 e6             	mov    rsi,r12
3090:	e8 cb 2e 00 00       	call   5f60 <safe_read>
3095:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
3099:	74 76                	je     3111 <read_and_delete+0xa1>
309b:	48 85 c0             	test   rax,rax
309e:	74 43                	je     30e3 <read_and_delete+0x73>
30a0:	31 f6                	xor    esi,esi
30a2:	41 0f b6 0c 34       	movzx  ecx,BYTE PTR [r12+rsi*1]
30a7:	48 8d 56 01          	lea    rdx,[rsi+0x1]
30ab:	80 7c 0d 00 00       	cmp    BYTE PTR [rbp+rcx*1+0x0],0x0
30b0:	74 3e                	je     30f0 <read_and_delete+0x80>
30b2:	48 39 d0             	cmp    rax,rdx
30b5:	76 24                	jbe    30db <read_and_delete+0x6b>
30b7:	4c 01 e2             	add    rdx,r12
30ba:	4c 01 e0             	add    rax,r12
30bd:	0f 1f 00             	nop    DWORD PTR [rax]
30c0:	0f b6 3a             	movzx  edi,BYTE PTR [rdx]
30c3:	80 7c 3d 00 00       	cmp    BYTE PTR [rbp+rdi*1+0x0],0x0
30c8:	75 08                	jne    30d2 <read_and_delete+0x62>
30ca:	41 88 3c 34          	mov    BYTE PTR [r12+rsi*1],dil
30ce:	48 83 c6 01          	add    rsi,0x1
30d2:	48 83 c2 01          	add    rdx,0x1
30d6:	48 39 d0             	cmp    rax,rdx
30d9:	75 e5                	jne    30c0 <read_and_delete+0x50>
30db:	48 85 f6             	test   rsi,rsi
30de:	74 a8                	je     3088 <read_and_delete+0x18>
30e0:	48 89 f0             	mov    rax,rsi
30e3:	5b                   	pop    rbx
30e4:	5d                   	pop    rbp
30e5:	41 5c                	pop    r12
30e7:	c3                   	ret
30e8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
30ef:	00
30f0:	48 39 d0             	cmp    rax,rdx
30f3:	74 0b                	je     3100 <read_and_delete+0x90>
30f5:	48 89 d6             	mov    rsi,rdx
30f8:	eb a8                	jmp    30a2 <read_and_delete+0x32>
30fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3100:	48 8d 56 02          	lea    rdx,[rsi+0x2]
3104:	48 89 c6             	mov    rsi,rax
3107:	48 39 d0             	cmp    rax,rdx
310a:	77 ab                	ja     30b7 <read_and_delete+0x47>
310c:	48 89 f0             	mov    rax,rsi
310f:	eb d2                	jmp    30e3 <read_and_delete+0x73>
3111:	e8 fa fe ff ff       	call   3010 <plain_read.part.5>
3116:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
311d:	00 00 00

0000000000003120 <read_and_xlate>:
3120:	53                   	push   rbx
3121:	48 89 f2             	mov    rdx,rsi
3124:	48 89 fb             	mov    rbx,rdi
3127:	48 89 fe             	mov    rsi,rdi
312a:	31 ff                	xor    edi,edi
312c:	e8 2f 2e 00 00       	call   5f60 <safe_read>
3131:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
3135:	74 2e                	je     3165 <read_and_xlate+0x45>
3137:	48 85 c0             	test   rax,rax
313a:	48 89 df             	mov    rdi,rbx
313d:	48 8d 34 03          	lea    rsi,[rbx+rax*1]
3141:	48 8d 0d 98 7f 20 00 	lea    rcx,[rip+0x207f98]        # 20b0e0 <xlate>
3148:	74 19                	je     3163 <read_and_xlate+0x43>
314a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3150:	0f b6 17             	movzx  edx,BYTE PTR [rdi]
3153:	48 83 c7 01          	add    rdi,0x1
3157:	0f b6 14 11          	movzx  edx,BYTE PTR [rcx+rdx*1]
315b:	88 57 ff             	mov    BYTE PTR [rdi-0x1],dl
315e:	48 39 fe             	cmp    rsi,rdi
3161:	75 ed                	jne    3150 <read_and_xlate+0x30>
3163:	5b                   	pop    rbx
3164:	c3                   	ret
3165:	e8 a6 fe ff ff       	call   3010 <plain_read.part.5>
316a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000003170 <append_normal_char>:
3170:	55                   	push   rbp
3171:	53                   	push   rbx
3172:	48 89 fb             	mov    rbx,rdi
3175:	bf 20 00 00 00       	mov    edi,0x20
317a:	89 f5                	mov    ebp,esi
317c:	48 83 ec 08          	sub    rsp,0x8
3180:	e8 5b 34 00 00       	call   65e0 <xmalloc>
3185:	48 8b 53 08          	mov    rdx,QWORD PTR [rbx+0x8]
3189:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
3190:	00
3191:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
3197:	40 88 68 10          	mov    BYTE PTR [rax+0x10],bpl
319b:	48 85 d2             	test   rdx,rdx
319e:	74 0f                	je     31af <append_normal_char+0x3f>
31a0:	48 89 42 08          	mov    QWORD PTR [rdx+0x8],rax
31a4:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
31a8:	48 83 c4 08          	add    rsp,0x8
31ac:	5b                   	pop    rbx
31ad:	5d                   	pop    rbp
31ae:	c3                   	ret
31af:	48 8d 0d 6a 41 00 00 	lea    rcx,[rip+0x416a]        # 7320 <__PRETTY_FUNCTION__.7119>
31b6:	48 8d 35 64 3e 00 00 	lea    rsi,[rip+0x3e64]        # 7021 <_IO_stdin_used+0x21>
31bd:	48 8d 3d aa 3e 00 00 	lea    rdi,[rip+0x3eaa]        # 706e <_IO_stdin_used+0x6e>
31c4:	ba 87 02 00 00       	mov    edx,0x287
31c9:	e8 52 e5 ff ff       	call   1720 <__assert_fail@plt>
31ce:	66 90                	xchg   ax,ax

00000000000031d0 <parse_str>:
31d0:	41 57                	push   r15
31d2:	41 56                	push   r14
31d4:	41 55                	push   r13
31d6:	41 54                	push   r12
31d8:	55                   	push   rbp
31d9:	53                   	push   rbx
31da:	48 89 fd             	mov    rbp,rdi
31dd:	48 81 ec a8 00 00 00 	sub    rsp,0xa8
31e4:	48 89 74 24 10       	mov    QWORD PTR [rsp+0x10],rsi
31e9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
31f0:	00 00
31f2:	48 89 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],rax
31f9:	00
31fa:	31 c0                	xor    eax,eax
31fc:	e8 af e4 ff ff       	call   16b0 <strlen@plt>
3201:	48 89 c3             	mov    rbx,rax
3204:	48 89 c7             	mov    rdi,rax
3207:	e8 d4 33 00 00       	call   65e0 <xmalloc>
320c:	be 01 00 00 00       	mov    esi,0x1
3211:	48 89 df             	mov    rdi,rbx
3214:	49 89 c5             	mov    r13,rax
3217:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
321c:	48 89 84 24 80 00 00 	mov    QWORD PTR [rsp+0x80],rax
3223:	00
3224:	e8 87 35 00 00       	call   67b0 <xcalloc>
3229:	49 89 c6             	mov    r14,rax
322c:	48 89 84 24 88 00 00 	mov    QWORD PTR [rsp+0x88],rax
3233:	00
3234:	0f b6 45 00          	movzx  eax,BYTE PTR [rbp+0x0]
3238:	84 c0                	test   al,al
323a:	0f 84 a7 07 00 00    	je     39e7 <parse_str+0x817>
3240:	31 db                	xor    ebx,ebx
3242:	45 31 ff             	xor    r15d,r15d
3245:	4d 89 ea             	mov    r10,r13
3248:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
324f:	00
3250:	8d 4b 01             	lea    ecx,[rbx+0x1]
3253:	44 89 fa             	mov    edx,r15d
3256:	41 83 c7 01          	add    r15d,0x1
325a:	3c 5c                	cmp    al,0x5c
325c:	4d 8d 2c 12          	lea    r13,[r10+rdx*1]
3260:	48 89 ce             	mov    rsi,rcx
3263:	0f b6 4c 0d 00       	movzx  ecx,BYTE PTR [rbp+rcx*1+0x0]
3268:	75 4e                	jne    32b8 <parse_str+0xe8>
326a:	4d 8d 24 16          	lea    r12,[r14+rdx*1]
326e:	80 f9 62             	cmp    cl,0x62
3271:	41 c6 04 24 01       	mov    BYTE PTR [r12],0x1
3276:	0f 84 ac 06 00 00    	je     3928 <parse_str+0x758>
327c:	0f 8e f6 03 00 00    	jle    3678 <parse_str+0x4a8>
3282:	80 f9 72             	cmp    cl,0x72
3285:	0f 84 ab 06 00 00    	je     3936 <parse_str+0x766>
328b:	0f 8f 52 04 00 00    	jg     36e3 <parse_str+0x513>
3291:	80 f9 66             	cmp    cl,0x66
3294:	0f 84 3b 05 00 00    	je     37d5 <parse_str+0x605>
329a:	80 f9 6e             	cmp    cl,0x6e
329d:	0f 85 7a 06 00 00    	jne    391d <parse_str+0x74d>
32a3:	41 bc 0a 00 00 00    	mov    r12d,0xa
32a9:	8d 43 02             	lea    eax,[rbx+0x2]
32ac:	e9 1f 04 00 00       	jmp    36d0 <parse_str+0x500>
32b1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
32b8:	41 88 45 00          	mov    BYTE PTR [r13+0x0],al
32bc:	89 f3                	mov    ebx,esi
32be:	89 c8                	mov    eax,ecx
32c0:	84 c0                	test   al,al
32c2:	75 8c                	jne    3250 <parse_str+0x80>
32c4:	48 8d 44 24 70       	lea    rax,[rsp+0x70]
32c9:	4c 8b 64 24 08       	mov    r12,QWORD PTR [rsp+0x8]
32ce:	4c 89 bc 24 90 00 00 	mov    QWORD PTR [rsp+0x90],r15
32d5:	00
32d6:	45 31 ed             	xor    r13d,r13d
32d9:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
32de:	48 8d 44 24 78       	lea    rax,[rsp+0x78]
32e3:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
32e8:	49 8d 4d 02          	lea    rcx,[r13+0x2]
32ec:	4c 39 f9             	cmp    rcx,r15
32ef:	73 3d                	jae    332e <parse_str+0x15e>
32f1:	43 80 3c 2c 5b       	cmp    BYTE PTR [r12+r13*1],0x5b
32f6:	49 8d 6d 01          	lea    rbp,[r13+0x1]
32fa:	47 0f b6 4c 2c 01    	movzx  r9d,BYTE PTR [r12+r13*1+0x1]
3300:	74 6e                	je     3370 <parse_str+0x1a0>
3302:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
3307:	41 80 f9 2d          	cmp    r9b,0x2d
330b:	42 0f b6 34 28       	movzx  esi,BYTE PTR [rax+r13*1]
3310:	89 f3                	mov    ebx,esi
3312:	0f 84 68 01 00 00    	je     3480 <parse_str+0x2b0>
3318:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
331d:	49 89 ed             	mov    r13,rbp
3320:	e8 4b fe ff ff       	call   3170 <append_normal_char>
3325:	49 8d 4d 02          	lea    rcx,[r13+0x2]
3329:	4c 39 f9             	cmp    rcx,r15
332c:	72 c3                	jb     32f1 <parse_str+0x121>
332e:	4d 39 fd             	cmp    r13,r15
3331:	73 2b                	jae    335e <parse_str+0x18e>
3333:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
3338:	48 8b 6c 24 10       	mov    rbp,QWORD PTR [rsp+0x10]
333d:	4a 8d 1c 38          	lea    rbx,[rax+r15*1]
3341:	49 01 c5             	add    r13,rax
3344:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
3348:	41 0f b6 75 00       	movzx  esi,BYTE PTR [r13+0x0]
334d:	48 89 ef             	mov    rdi,rbp
3350:	49 83 c5 01          	add    r13,0x1
3354:	e8 17 fe ff ff       	call   3170 <append_normal_char>
3359:	4c 39 eb             	cmp    rbx,r13
335c:	75 ea                	jne    3348 <parse_str+0x178>
335e:	c6 44 24 18 01       	mov    BYTE PTR [rsp+0x18],0x1
3363:	e9 cd 02 00 00       	jmp    3635 <parse_str+0x465>
3368:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
336f:	00
3370:	43 0f b6 04 2e       	movzx  eax,BYTE PTR [r14+r13*1]
3375:	84 c0                	test   al,al
3377:	88 44 24 18          	mov    BYTE PTR [rsp+0x18],al
337b:	75 85                	jne    3302 <parse_str+0x132>
337d:	41 80 f9 3a          	cmp    r9b,0x3a
3381:	0f 84 69 01 00 00    	je     34f0 <parse_str+0x320>
3387:	41 80 f9 3d          	cmp    r9b,0x3d
338b:	0f 84 5f 01 00 00    	je     34f0 <parse_str+0x320>
3391:	41 80 3c 0c 2a       	cmp    BYTE PTR [r12+rcx*1],0x2a
3396:	0f 85 66 ff ff ff    	jne    3302 <parse_str+0x132>
339c:	41 80 3c 0e 00       	cmp    BYTE PTR [r14+rcx*1],0x0
33a1:	0f 85 5b ff ff ff    	jne    3302 <parse_str+0x132>
33a7:	49 8d 45 03          	lea    rax,[r13+0x3]
33ab:	4c 39 f8             	cmp    rax,r15
33ae:	0f 83 4e ff ff ff    	jae    3302 <parse_str+0x132>
33b4:	43 80 7c 2e 03 00    	cmp    BYTE PTR [r14+r13*1+0x3],0x0
33ba:	0f 85 42 ff ff ff    	jne    3302 <parse_str+0x132>
33c0:	4d 8d 1c 04          	lea    r11,[r12+rax*1]
33c4:	41 0f b6 13          	movzx  edx,BYTE PTR [r11]
33c8:	80 fa 5d             	cmp    dl,0x5d
33cb:	75 0e                	jne    33db <parse_str+0x20b>
33cd:	e9 1d 06 00 00       	jmp    39ef <parse_str+0x81f>
33d2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
33d8:	48 89 d8             	mov    rax,rbx
33db:	48 8d 58 01          	lea    rbx,[rax+0x1]
33df:	4c 39 fb             	cmp    rbx,r15
33e2:	0f 83 1a ff ff ff    	jae    3302 <parse_str+0x132>
33e8:	41 80 7c 06 01 00    	cmp    BYTE PTR [r14+rax*1+0x1],0x0
33ee:	0f 85 0e ff ff ff    	jne    3302 <parse_str+0x132>
33f4:	41 80 3c 1c 5d       	cmp    BYTE PTR [r12+rbx*1],0x5d
33f9:	75 dd                	jne    33d8 <parse_str+0x208>
33fb:	48 f7 d5             	not    rbp
33fe:	48 01 c5             	add    rbp,rax
3401:	0f 85 16 03 00 00    	jne    371d <parse_str+0x54d>
3407:	48 c7 44 24 70 00 00 	mov    QWORD PTR [rsp+0x70],0x0
340e:	00 00
3410:	bf 20 00 00 00       	mov    edi,0x20
3415:	44 88 4c 24 18       	mov    BYTE PTR [rsp+0x18],r9b
341a:	48 8b 6c 24 70       	mov    rbp,QWORD PTR [rsp+0x70]
341f:	e8 bc 31 00 00       	call   65e0 <xmalloc>
3424:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
3429:	44 0f b6 4c 24 18    	movzx  r9d,BYTE PTR [rsp+0x18]
342f:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
3436:	00
3437:	c7 00 04 00 00 00    	mov    DWORD PTR [rax],0x4
343d:	48 89 68 18          	mov    QWORD PTR [rax+0x18],rbp
3441:	48 8b 57 08          	mov    rdx,QWORD PTR [rdi+0x8]
3445:	44 88 48 10          	mov    BYTE PTR [rax+0x10],r9b
3449:	48 85 d2             	test   rdx,rdx
344c:	0f 84 7a 06 00 00    	je     3acc <parse_str+0x8fc>
3452:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
3457:	4c 8d 6b 01          	lea    r13,[rbx+0x1]
345b:	48 89 42 08          	mov    QWORD PTR [rdx+0x8],rax
345f:	48 89 47 08          	mov    QWORD PTR [rdi+0x8],rax
3463:	4c 8b a4 24 80 00 00 	mov    r12,QWORD PTR [rsp+0x80]
346a:	00
346b:	4c 8b b4 24 88 00 00 	mov    r14,QWORD PTR [rsp+0x88]
3472:	00
3473:	4c 8b bc 24 90 00 00 	mov    r15,QWORD PTR [rsp+0x90]
347a:	00
347b:	e9 68 fe ff ff       	jmp    32e8 <parse_str+0x118>
3480:	41 0f b6 04 2e       	movzx  eax,BYTE PTR [r14+rbp*1]
3485:	84 c0                	test   al,al
3487:	88 44 24 18          	mov    BYTE PTR [rsp+0x18],al
348b:	0f 85 87 fe ff ff    	jne    3318 <parse_str+0x148>
3491:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
3496:	0f b6 2c 08          	movzx  ebp,BYTE PTR [rax+rcx*1]
349a:	40 38 f5             	cmp    bpl,sil
349d:	0f 82 45 01 00 00    	jb     35e8 <parse_str+0x418>
34a3:	bf 20 00 00 00       	mov    edi,0x20
34a8:	e8 33 31 00 00       	call   65e0 <xmalloc>
34ad:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
34b2:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
34b9:	00
34ba:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
34c0:	88 58 10             	mov    BYTE PTR [rax+0x10],bl
34c3:	40 88 68 11          	mov    BYTE PTR [rax+0x11],bpl
34c7:	48 8b 57 08          	mov    rdx,QWORD PTR [rdi+0x8]
34cb:	48 85 d2             	test   rdx,rdx
34ce:	0f 84 b5 05 00 00    	je     3a89 <parse_str+0x8b9>
34d4:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
34d9:	48 89 42 08          	mov    QWORD PTR [rdx+0x8],rax
34dd:	49 83 c5 03          	add    r13,0x3
34e1:	48 89 47 08          	mov    QWORD PTR [rdi+0x8],rax
34e5:	e9 fe fd ff ff       	jmp    32e8 <parse_str+0x118>
34ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
34f0:	41 80 3c 2e 00       	cmp    BYTE PTR [r14+rbp*1],0x0
34f5:	0f 85 96 fe ff ff    	jne    3391 <parse_str+0x1c1>
34fb:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
3500:	49 8d 57 ff          	lea    rdx,[r15-0x1]
3504:	48 39 d1             	cmp    rcx,rdx
3507:	0f b6 34 28          	movzx  esi,BYTE PTR [rax+rbp*1]
350b:	0f 83 80 fe ff ff    	jae    3391 <parse_str+0x1c1>
3511:	48 89 cb             	mov    rbx,rcx
3514:	eb 16                	jmp    352c <parse_str+0x35c>
3516:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
351d:	00 00 00
3520:	48 39 c2             	cmp    rdx,rax
3523:	48 89 c3             	mov    rbx,rax
3526:	0f 86 65 fe ff ff    	jbe    3391 <parse_str+0x1c1>
352c:	41 3a 34 1c          	cmp    sil,BYTE PTR [r12+rbx*1]
3530:	48 8d 43 01          	lea    rax,[rbx+0x1]
3534:	75 ea                	jne    3520 <parse_str+0x350>
3536:	41 80 7c 1c 01 5d    	cmp    BYTE PTR [r12+rbx*1+0x1],0x5d
353c:	75 e2                	jne    3520 <parse_str+0x350>
353e:	41 80 7c 06 ff 00    	cmp    BYTE PTR [r14+rax*1-0x1],0x0
3544:	75 da                	jne    3520 <parse_str+0x350>
3546:	41 80 3c 06 00       	cmp    BYTE PTR [r14+rax*1],0x0
354b:	75 d3                	jne    3520 <parse_str+0x350>
354d:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
3552:	48 c7 c0 fe ff ff ff 	mov    rax,0xfffffffffffffffe
3559:	4c 29 e8             	sub    rax,r13
355c:	48 01 cf             	add    rdi,rcx
355f:	48 01 d8             	add    rax,rbx
3562:	48 89 7c 24 28       	mov    QWORD PTR [rsp+0x28],rdi
3567:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
356c:	0f 84 e2 04 00 00    	je     3a54 <parse_str+0x884>
3572:	40 80 fe 3a          	cmp    sil,0x3a
3576:	0f 84 bf 02 00 00    	je     383b <parse_str+0x66b>
357c:	48 83 7c 24 20 01    	cmp    QWORD PTR [rsp+0x20],0x1
3582:	0f 84 0f 04 00 00    	je     3997 <parse_str+0x7c7>
3588:	48 8d bc 24 80 00 00 	lea    rdi,[rsp+0x80]
358f:	00
3590:	48 89 ce             	mov    rsi,rcx
3593:	44 88 4c 24 48       	mov    BYTE PTR [rsp+0x48],r9b
3598:	48 89 4c 24 40       	mov    QWORD PTR [rsp+0x40],rcx
359d:	e8 0e f2 ff ff       	call   27b0 <star_digits_closebracket>
35a2:	84 c0                	test   al,al
35a4:	48 8b 4c 24 40       	mov    rcx,QWORD PTR [rsp+0x40]
35a9:	44 0f b6 4c 24 48    	movzx  r9d,BYTE PTR [rsp+0x48]
35af:	0f 85 dc fd ff ff    	jne    3391 <parse_str+0x1c1>
35b5:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
35ba:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
35bf:	e8 ec f2 ff ff       	call   28b0 <make_printable_str>
35c4:	48 8d 35 4d 3f 00 00 	lea    rsi,[rip+0x3f4d]        # 7518 <__PRETTY_FUNCTION__.7483+0x176>
35cb:	48 89 c3             	mov    rbx,rax
35ce:	ba 05 00 00 00       	mov    edx,0x5
35d3:	31 ff                	xor    edi,edi
35d5:	e8 b6 e0 ff ff       	call   1690 <dcgettext@plt>
35da:	48 89 d9             	mov    rcx,rbx
35dd:	e9 bc 01 00 00       	jmp    379e <parse_str+0x5ce>
35e2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
35e8:	89 f7                	mov    edi,esi
35ea:	e8 51 f2 ff ff       	call   2840 <make_printable_char>
35ef:	40 0f b6 fd          	movzx  edi,bpl
35f3:	49 89 c5             	mov    r13,rax
35f6:	e8 45 f2 ff ff       	call   2840 <make_printable_char>
35fb:	48 8d 35 86 3f 00 00 	lea    rsi,[rip+0x3f86]        # 7588 <__PRETTY_FUNCTION__.7483+0x1e6>
3602:	48 89 c3             	mov    rbx,rax
3605:	ba 05 00 00 00       	mov    edx,0x5
360a:	31 ff                	xor    edi,edi
360c:	e8 7f e0 ff ff       	call   1690 <dcgettext@plt>
3611:	49 89 d8             	mov    r8,rbx
3614:	48 89 c2             	mov    rdx,rax
3617:	4c 89 e9             	mov    rcx,r13
361a:	31 f6                	xor    esi,esi
361c:	31 ff                	xor    edi,edi
361e:	31 c0                	xor    eax,eax
3620:	e8 2b e2 ff ff       	call   1850 <error@plt>
3625:	4c 89 ef             	mov    rdi,r13
3628:	e8 c3 df ff ff       	call   15f0 <free@plt>
362d:	48 89 df             	mov    rdi,rbx
3630:	e8 bb df ff ff       	call   15f0 <free@plt>
3635:	4c 89 e7             	mov    rdi,r12
3638:	e8 b3 df ff ff       	call   15f0 <free@plt>
363d:	4c 89 f7             	mov    rdi,r14
3640:	e8 ab df ff ff       	call   15f0 <free@plt>
3645:	48 8b bc 24 98 00 00 	mov    rdi,QWORD PTR [rsp+0x98]
364c:	00
364d:	64 48 33 3c 25 28 00 	xor    rdi,QWORD PTR fs:0x28
3654:	00 00
3656:	0f b6 44 24 18       	movzx  eax,BYTE PTR [rsp+0x18]
365b:	0f 85 47 04 00 00    	jne    3aa8 <parse_str+0x8d8>
3661:	48 81 c4 a8 00 00 00 	add    rsp,0xa8
3668:	5b                   	pop    rbx
3669:	5d                   	pop    rbp
366a:	41 5c                	pop    r12
366c:	41 5d                	pop    r13
366e:	41 5e                	pop    r14
3670:	41 5f                	pop    r15
3672:	c3                   	ret
3673:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3678:	80 f9 37             	cmp    cl,0x37
367b:	0f 8f 7f 00 00 00    	jg     3700 <parse_str+0x530>
3681:	80 f9 30             	cmp    cl,0x30
3684:	0f 8d 59 01 00 00    	jge    37e3 <parse_str+0x613>
368a:	84 c9                	test   cl,cl
368c:	0f 85 8b 02 00 00    	jne    391d <parse_str+0x74d>
3692:	48 8d 35 df 3d 00 00 	lea    rsi,[rip+0x3ddf]        # 7478 <__PRETTY_FUNCTION__.7483+0xd6>
3699:	ba 05 00 00 00       	mov    edx,0x5
369e:	31 ff                	xor    edi,edi
36a0:	4c 89 54 24 18       	mov    QWORD PTR [rsp+0x18],r10
36a5:	e8 e6 df ff ff       	call   1690 <dcgettext@plt>
36aa:	31 f6                	xor    esi,esi
36ac:	48 89 c2             	mov    rdx,rax
36af:	31 ff                	xor    edi,edi
36b1:	31 c0                	xor    eax,eax
36b3:	e8 98 e1 ff ff       	call   1850 <error@plt>
36b8:	4c 8b 54 24 18       	mov    r10,QWORD PTR [rsp+0x18]
36bd:	8d 43 01             	lea    eax,[rbx+0x1]
36c0:	41 c6 04 24 00       	mov    BYTE PTR [r12],0x0
36c5:	41 bc 5c 00 00 00    	mov    r12d,0x5c
36cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
36d0:	89 c0                	mov    eax,eax
36d2:	45 88 65 00          	mov    BYTE PTR [r13+0x0],r12b
36d6:	48 89 c3             	mov    rbx,rax
36d9:	0f b6 44 05 00       	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
36de:	e9 dd fb ff ff       	jmp    32c0 <parse_str+0xf0>
36e3:	80 f9 74             	cmp    cl,0x74
36e6:	0f 84 db 00 00 00    	je     37c7 <parse_str+0x5f7>
36ec:	80 f9 76             	cmp    cl,0x76
36ef:	0f 85 28 02 00 00    	jne    391d <parse_str+0x74d>
36f5:	41 bc 0b 00 00 00    	mov    r12d,0xb
36fb:	8d 43 02             	lea    eax,[rbx+0x2]
36fe:	eb d0                	jmp    36d0 <parse_str+0x500>
3700:	80 f9 5c             	cmp    cl,0x5c
3703:	0f 84 b0 00 00 00    	je     37b9 <parse_str+0x5e9>
3709:	80 f9 61             	cmp    cl,0x61
370c:	0f 85 0b 02 00 00    	jne    391d <parse_str+0x74d>
3712:	41 bc 07 00 00 00    	mov    r12d,0x7
3718:	8d 43 02             	lea    eax,[rbx+0x2]
371b:	eb b3                	jmp    36d0 <parse_str+0x500>
371d:	80 fa 30             	cmp    dl,0x30
3720:	48 8b 4c 24 30       	mov    rcx,QWORD PTR [rsp+0x30]
3725:	48 8b 74 24 38       	mov    rsi,QWORD PTR [rsp+0x38]
372a:	0f 95 c2             	setne  dl
372d:	4c 89 df             	mov    rdi,r11
3730:	45 31 c0             	xor    r8d,r8d
3733:	0f b6 d2             	movzx  edx,dl
3736:	4c 89 5c 24 28       	mov    QWORD PTR [rsp+0x28],r11
373b:	44 88 4c 24 20       	mov    BYTE PTR [rsp+0x20],r9b
3740:	8d 54 12 08          	lea    edx,[rdx+rdx*1+0x8]
3744:	e8 27 31 00 00       	call   6870 <xstrtoumax>
3749:	85 c0                	test   eax,eax
374b:	4c 8b 5c 24 28       	mov    r11,QWORD PTR [rsp+0x28]
3750:	75 1d                	jne    376f <parse_str+0x59f>
3752:	48 83 7c 24 70 ff    	cmp    QWORD PTR [rsp+0x70],0xffffffffffffffff
3758:	74 15                	je     376f <parse_str+0x59f>
375a:	49 8d 04 2b          	lea    rax,[r11+rbp*1]
375e:	48 39 44 24 78       	cmp    QWORD PTR [rsp+0x78],rax
3763:	44 0f b6 4c 24 20    	movzx  r9d,BYTE PTR [rsp+0x20]
3769:	0f 84 a1 fc ff ff    	je     3410 <parse_str+0x240>
376f:	48 89 ee             	mov    rsi,rbp
3772:	4c 89 df             	mov    rdi,r11
3775:	e8 36 f1 ff ff       	call   28b0 <make_printable_str>
377a:	48 89 c7             	mov    rdi,rax
377d:	48 89 c3             	mov    rbx,rax
3780:	e8 bb 27 00 00       	call   5f40 <quote>
3785:	48 8d 35 cc 3d 00 00 	lea    rsi,[rip+0x3dcc]        # 7558 <__PRETTY_FUNCTION__.7483+0x1b6>
378c:	48 89 c5             	mov    rbp,rax
378f:	ba 05 00 00 00       	mov    edx,0x5
3794:	31 ff                	xor    edi,edi
3796:	e8 f5 de ff ff       	call   1690 <dcgettext@plt>
379b:	48 89 e9             	mov    rcx,rbp
379e:	48 89 c2             	mov    rdx,rax
37a1:	31 ff                	xor    edi,edi
37a3:	31 f6                	xor    esi,esi
37a5:	31 c0                	xor    eax,eax
37a7:	e8 a4 e0 ff ff       	call   1850 <error@plt>
37ac:	48 89 df             	mov    rdi,rbx
37af:	e8 3c de ff ff       	call   15f0 <free@plt>
37b4:	e9 7c fe ff ff       	jmp    3635 <parse_str+0x465>
37b9:	41 bc 5c 00 00 00    	mov    r12d,0x5c
37bf:	8d 43 02             	lea    eax,[rbx+0x2]
37c2:	e9 09 ff ff ff       	jmp    36d0 <parse_str+0x500>
37c7:	41 bc 09 00 00 00    	mov    r12d,0x9
37cd:	8d 43 02             	lea    eax,[rbx+0x2]
37d0:	e9 fb fe ff ff       	jmp    36d0 <parse_str+0x500>
37d5:	41 bc 0c 00 00 00    	mov    r12d,0xc
37db:	8d 43 02             	lea    eax,[rbx+0x2]
37de:	e9 ed fe ff ff       	jmp    36d0 <parse_str+0x500>
37e3:	8d 53 02             	lea    edx,[rbx+0x2]
37e6:	44 8d 61 d0          	lea    r12d,[rcx-0x30]
37ea:	44 0f be 44 15 00    	movsx  r8d,BYTE PTR [rbp+rdx*1+0x0]
37f0:	48 89 d0             	mov    rax,rdx
37f3:	41 8d 50 d0          	lea    edx,[r8-0x30]
37f7:	83 fa 07             	cmp    edx,0x7
37fa:	0f 87 d0 fe ff ff    	ja     36d0 <parse_str+0x500>
3800:	8d 43 03             	lea    eax,[rbx+0x3]
3803:	46 8d 24 e2          	lea    r12d,[rdx+r12*8]
3807:	44 0f be 4c 05 00    	movsx  r9d,BYTE PTR [rbp+rax*1+0x0]
380d:	8d 43 03             	lea    eax,[rbx+0x3]
3810:	41 8d 51 d0          	lea    edx,[r9-0x30]
3814:	83 fa 07             	cmp    edx,0x7
3817:	0f 87 b3 fe ff ff    	ja     36d0 <parse_str+0x500>
381d:	41 0f b6 c4          	movzx  eax,r12b
3821:	8d 04 c2             	lea    eax,[rdx+rax*8]
3824:	3d ff 00 00 00       	cmp    eax,0xff
3829:	0f 8f c8 01 00 00    	jg     39f7 <parse_str+0x827>
382f:	46 8d 24 e2          	lea    r12d,[rdx+r12*8]
3833:	8d 43 04             	lea    eax,[rbx+0x4]
3836:	e9 95 fe ff ff       	jmp    36d0 <parse_str+0x500>
383b:	48 89 5c 24 68       	mov    QWORD PTR [rsp+0x68],rbx
3840:	48 89 6c 24 60       	mov    QWORD PTR [rsp+0x60],rbp
3845:	45 31 c0             	xor    r8d,r8d
3848:	48 8b 5c 24 20       	mov    rbx,QWORD PTR [rsp+0x20]
384d:	48 8b 6c 24 28       	mov    rbp,QWORD PTR [rsp+0x28]
3852:	4c 89 64 24 50       	mov    QWORD PTR [rsp+0x50],r12
3857:	4c 89 6c 24 40       	mov    QWORD PTR [rsp+0x40],r13
385c:	4d 89 c4             	mov    r12,r8
385f:	48 89 4c 24 48       	mov    QWORD PTR [rsp+0x48],rcx
3864:	44 88 4c 24 5f       	mov    BYTE PTR [rsp+0x5f],r9b
3869:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
3870:	48 8d 05 09 73 20 00 	lea    rax,[rip+0x207309]        # 20ab80 <char_class_name>
3877:	48 89 da             	mov    rdx,rbx
387a:	48 89 ef             	mov    rdi,rbp
387d:	4e 8b 2c e0          	mov    r13,QWORD PTR [rax+r12*8]
3881:	4c 89 ee             	mov    rsi,r13
3884:	e8 97 dd ff ff       	call   1620 <strncmp@plt>
3889:	85 c0                	test   eax,eax
388b:	75 11                	jne    389e <parse_str+0x6ce>
388d:	4c 89 ef             	mov    rdi,r13
3890:	e8 1b de ff ff       	call   16b0 <strlen@plt>
3895:	48 39 c3             	cmp    rbx,rax
3898:	0f 84 a6 00 00 00    	je     3944 <parse_str+0x774>
389e:	49 83 c4 01          	add    r12,0x1
38a2:	49 83 fc 0c          	cmp    r12,0xc
38a6:	75 c8                	jne    3870 <parse_str+0x6a0>
38a8:	48 8b 4c 24 48       	mov    rcx,QWORD PTR [rsp+0x48]
38ad:	44 0f b6 4c 24 5f    	movzx  r9d,BYTE PTR [rsp+0x5f]
38b3:	48 8d bc 24 80 00 00 	lea    rdi,[rsp+0x80]
38ba:	00
38bb:	4c 8b 6c 24 40       	mov    r13,QWORD PTR [rsp+0x40]
38c0:	4c 8b 64 24 50       	mov    r12,QWORD PTR [rsp+0x50]
38c5:	48 8b 6c 24 60       	mov    rbp,QWORD PTR [rsp+0x60]
38ca:	48 89 ce             	mov    rsi,rcx
38cd:	48 89 4c 24 40       	mov    QWORD PTR [rsp+0x40],rcx
38d2:	44 88 4c 24 48       	mov    BYTE PTR [rsp+0x48],r9b
38d7:	e8 d4 ee ff ff       	call   27b0 <star_digits_closebracket>
38dc:	84 c0                	test   al,al
38de:	48 8b 4c 24 40       	mov    rcx,QWORD PTR [rsp+0x40]
38e3:	44 0f b6 4c 24 48    	movzx  r9d,BYTE PTR [rsp+0x48]
38e9:	0f 85 a2 fa ff ff    	jne    3391 <parse_str+0x1c1>
38ef:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
38f4:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
38f9:	e8 b2 ef ff ff       	call   28b0 <make_printable_str>
38fe:	48 89 c7             	mov    rdi,rax
3901:	48 89 c3             	mov    rbx,rax
3904:	e8 37 26 00 00       	call   5f40 <quote>
3909:	ba 05 00 00 00       	mov    edx,0x5
390e:	48 89 c5             	mov    rbp,rax
3911:	48 8d 35 61 37 00 00 	lea    rsi,[rip+0x3761]        # 7079 <_IO_stdin_used+0x79>
3918:	e9 77 fe ff ff       	jmp    3794 <parse_str+0x5c4>
391d:	41 89 cc             	mov    r12d,ecx
3920:	8d 43 02             	lea    eax,[rbx+0x2]
3923:	e9 a8 fd ff ff       	jmp    36d0 <parse_str+0x500>
3928:	41 bc 08 00 00 00    	mov    r12d,0x8
392e:	8d 43 02             	lea    eax,[rbx+0x2]
3931:	e9 9a fd ff ff       	jmp    36d0 <parse_str+0x500>
3936:	41 bc 0d 00 00 00    	mov    r12d,0xd
393c:	8d 43 02             	lea    eax,[rbx+0x2]
393f:	e9 8c fd ff ff       	jmp    36d0 <parse_str+0x500>
3944:	bf 20 00 00 00       	mov    edi,0x20
3949:	48 8b 5c 24 68       	mov    rbx,QWORD PTR [rsp+0x68]
394e:	4c 89 64 24 18       	mov    QWORD PTR [rsp+0x18],r12
3953:	e8 88 2c 00 00       	call   65e0 <xmalloc>
3958:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
395d:	4c 8b 44 24 18       	mov    r8,QWORD PTR [rsp+0x18]
3962:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
3969:	00
396a:	c7 00 02 00 00 00    	mov    DWORD PTR [rax],0x2
3970:	48 8b 57 08          	mov    rdx,QWORD PTR [rdi+0x8]
3974:	44 89 40 10          	mov    DWORD PTR [rax+0x10],r8d
3978:	48 85 d2             	test   rdx,rdx
397b:	0f 84 2c 01 00 00    	je     3aad <parse_str+0x8dd>
3981:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
3986:	48 89 42 08          	mov    QWORD PTR [rdx+0x8],rax
398a:	4c 8d 6b 02          	lea    r13,[rbx+0x2]
398e:	48 89 47 08          	mov    QWORD PTR [rdi+0x8],rax
3992:	e9 cc fa ff ff       	jmp    3463 <parse_str+0x293>
3997:	bf 20 00 00 00       	mov    edi,0x20
399c:	e8 3f 2c 00 00       	call   65e0 <xmalloc>
39a1:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
39a6:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
39ad:	00
39ae:	c7 00 03 00 00 00    	mov    DWORD PTR [rax],0x3
39b4:	0f b6 17             	movzx  edx,BYTE PTR [rdi]
39b7:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
39bc:	88 50 10             	mov    BYTE PTR [rax+0x10],dl
39bf:	48 8b 57 08          	mov    rdx,QWORD PTR [rdi+0x8]
39c3:	48 85 d2             	test   rdx,rdx
39c6:	75 b9                	jne    3981 <parse_str+0x7b1>
39c8:	48 8d 0d a1 39 00 00 	lea    rcx,[rip+0x39a1]        # 7370 <__PRETTY_FUNCTION__.7150>
39cf:	48 8d 35 4b 36 00 00 	lea    rsi,[rip+0x364b]        # 7021 <_IO_stdin_used+0x21>
39d6:	48 8d 3d 91 36 00 00 	lea    rdi,[rip+0x3691]        # 706e <_IO_stdin_used+0x6e>
39dd:	ba e5 02 00 00       	mov    edx,0x2e5
39e2:	e8 39 dd ff ff       	call   1720 <__assert_fail@plt>
39e7:	45 31 ff             	xor    r15d,r15d
39ea:	e9 d5 f8 ff ff       	jmp    32c4 <parse_str+0xf4>
39ef:	48 89 c3             	mov    rbx,rax
39f2:	e9 10 fa ff ff       	jmp    3407 <parse_str+0x237>
39f7:	48 8d 35 12 3a 00 00 	lea    rsi,[rip+0x3a12]        # 7410 <__PRETTY_FUNCTION__.7483+0x6e>
39fe:	ba 05 00 00 00       	mov    edx,0x5
3a03:	31 ff                	xor    edi,edi
3a05:	88 4c 24 28          	mov    BYTE PTR [rsp+0x28],cl
3a09:	4c 89 54 24 30       	mov    QWORD PTR [rsp+0x30],r10
3a0e:	44 89 4c 24 20       	mov    DWORD PTR [rsp+0x20],r9d
3a13:	44 89 44 24 18       	mov    DWORD PTR [rsp+0x18],r8d
3a18:	e8 73 dc ff ff       	call   1690 <dcgettext@plt>
3a1d:	0f be 4c 24 28       	movsx  ecx,BYTE PTR [rsp+0x28]
3a22:	48 83 ec 08          	sub    rsp,0x8
3a26:	48 89 c2             	mov    rdx,rax
3a29:	44 8b 4c 24 28       	mov    r9d,DWORD PTR [rsp+0x28]
3a2e:	31 c0                	xor    eax,eax
3a30:	31 f6                	xor    esi,esi
3a32:	31 ff                	xor    edi,edi
3a34:	41 51                	push   r9
3a36:	44 8b 44 24 28       	mov    r8d,DWORD PTR [rsp+0x28]
3a3b:	41 50                	push   r8
3a3d:	51                   	push   rcx
3a3e:	e8 0d de ff ff       	call   1850 <error@plt>
3a43:	48 83 c4 20          	add    rsp,0x20
3a47:	8d 43 03             	lea    eax,[rbx+0x3]
3a4a:	4c 8b 54 24 30       	mov    r10,QWORD PTR [rsp+0x30]
3a4f:	e9 7c fc ff ff       	jmp    36d0 <parse_str+0x500>
3a54:	40 80 fe 3a          	cmp    sil,0x3a
3a58:	ba 05 00 00 00       	mov    edx,0x5
3a5d:	74 21                	je     3a80 <parse_str+0x8b0>
3a5f:	48 8d 35 82 3a 00 00 	lea    rsi,[rip+0x3a82]        # 74e8 <__PRETTY_FUNCTION__.7483+0x146>
3a66:	31 ff                	xor    edi,edi
3a68:	e8 23 dc ff ff       	call   1690 <dcgettext@plt>
3a6d:	31 f6                	xor    esi,esi
3a6f:	48 89 c2             	mov    rdx,rax
3a72:	31 ff                	xor    edi,edi
3a74:	31 c0                	xor    eax,eax
3a76:	e8 d5 dd ff ff       	call   1850 <error@plt>
3a7b:	e9 b5 fb ff ff       	jmp    3635 <parse_str+0x465>
3a80:	48 8d 35 39 3a 00 00 	lea    rsi,[rip+0x3a39]        # 74c0 <__PRETTY_FUNCTION__.7483+0x11e>
3a87:	eb dd                	jmp    3a66 <parse_str+0x896>
3a89:	48 8d 0d a8 38 00 00 	lea    rcx,[rip+0x38a8]        # 7338 <__PRETTY_FUNCTION__.7128>
3a90:	48 8d 35 8a 35 00 00 	lea    rsi,[rip+0x358a]        # 7021 <_IO_stdin_used+0x21>
3a97:	48 8d 3d d0 35 00 00 	lea    rdi,[rip+0x35d0]        # 706e <_IO_stdin_used+0x6e>
3a9e:	ba a5 02 00 00       	mov    edx,0x2a5
3aa3:	e8 78 dc ff ff       	call   1720 <__assert_fail@plt>
3aa8:	e8 13 dc ff ff       	call   16c0 <__stack_chk_fail@plt>
3aad:	48 8d 0d dc 38 00 00 	lea    rcx,[rip+0x38dc]        # 7390 <__PRETTY_FUNCTION__.7136>
3ab4:	48 8d 35 66 35 00 00 	lea    rsi,[rip+0x3566]        # 7021 <_IO_stdin_used+0x21>
3abb:	48 8d 3d ac 35 00 00 	lea    rdi,[rip+0x35ac]        # 706e <_IO_stdin_used+0x6e>
3ac2:	ba bb 02 00 00       	mov    edx,0x2bb
3ac7:	e8 54 dc ff ff       	call   1720 <__assert_fail@plt>
3acc:	e8 3f de ff ff       	call   1910 <append_repeated_char.part.8>
3ad1:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3ad6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
3add:	00 00 00

0000000000003ae0 <set_initialize>:
3ae0:	41 54                	push   r12
3ae2:	41 89 f4             	mov    r12d,esi
3ae5:	55                   	push   rbp
3ae6:	48 89 fd             	mov    rbp,rdi
3ae9:	53                   	push   rbx
3aea:	48 89 d3             	mov    rbx,rdx
3aed:	48 c7 47 10 fe ff ff 	mov    QWORD PTR [rdi+0x10],0xfffffffffffffffe
3af4:	ff
3af5:	eb 0f                	jmp    3b06 <set_initialize+0x26>
3af7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
3afe:	00 00
3b00:	48 98                	cdqe
3b02:	c6 04 03 01          	mov    BYTE PTR [rbx+rax*1],0x1
3b06:	31 f6                	xor    esi,esi
3b08:	48 89 ef             	mov    rdi,rbp
3b0b:	e8 a0 f2 ff ff       	call   2db0 <get_next>
3b10:	83 f8 ff             	cmp    eax,0xffffffff
3b13:	75 eb                	jne    3b00 <set_initialize+0x20>
3b15:	45 84 e4             	test   r12b,r12b
3b18:	74 1a                	je     3b34 <set_initialize+0x54>
3b1a:	48 8d 83 00 01 00 00 	lea    rax,[rbx+0x100]
3b21:	48 89 da             	mov    rdx,rbx
3b24:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
3b28:	80 32 01             	xor    BYTE PTR [rdx],0x1
3b2b:	48 83 c2 01          	add    rdx,0x1
3b2f:	48 39 c2             	cmp    rdx,rax
3b32:	75 f4                	jne    3b28 <set_initialize+0x48>
3b34:	5b                   	pop    rbx
3b35:	5d                   	pop    rbp
3b36:	41 5c                	pop    r12
3b38:	c3                   	ret
3b39:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000003b40 <squeeze_filter.constprop.14>:
3b40:	41 57                	push   r15
3b42:	41 56                	push   r14
3b44:	4c 8d 35 95 77 20 00 	lea    r14,[rip+0x207795]        # 20b2e0 <in_squeeze_set>
3b4b:	41 55                	push   r13
3b4d:	41 54                	push   r12
3b4f:	49 89 fd             	mov    r13,rdi
3b52:	55                   	push   rbp
3b53:	53                   	push   rbx
3b54:	48 8d 2d 85 78 20 00 	lea    rbp,[rip+0x207885]        # 20b3e0 <io_buf>
3b5b:	45 31 ff             	xor    r15d,r15d
3b5e:	31 db                	xor    ebx,ebx
3b60:	41 bc ff ff ff 7f    	mov    r12d,0x7fffffff
3b66:	48 83 ec 18          	sub    rsp,0x18
3b6a:	4c 39 fb             	cmp    rbx,r15
3b6d:	0f 82 8d 01 00 00    	jb     3d00 <squeeze_filter.constprop.14+0x1c0>
3b73:	be 00 20 00 00       	mov    esi,0x2000
3b78:	48 89 ef             	mov    rdi,rbp
3b7b:	41 ff d5             	call   r13
3b7e:	48 85 c0             	test   rax,rax
3b81:	49 89 c7             	mov    r15,rax
3b84:	0f 84 5e 01 00 00    	je     3ce8 <squeeze_filter.constprop.14+0x1a8>
3b8a:	31 db                	xor    ebx,ebx
3b8c:	41 81 fc ff ff ff 7f 	cmp    r12d,0x7fffffff
3b93:	74 6b                	je     3c00 <squeeze_filter.constprop.14+0xc0>
3b95:	4c 39 fb             	cmp    rbx,r15
3b98:	73 d0                	jae    3b6a <squeeze_filter.constprop.14+0x2a>
3b9a:	0f be 44 1d 00       	movsx  eax,BYTE PTR [rbp+rbx*1+0x0]
3b9f:	41 39 c4             	cmp    r12d,eax
3ba2:	0f 84 18 01 00 00    	je     3cc0 <squeeze_filter.constprop.14+0x180>
3ba8:	48 8d 44 1d 00       	lea    rax,[rbp+rbx*1+0x0]
3bad:	48 89 df             	mov    rdi,rbx
3bb0:	48 89 fb             	mov    rbx,rdi
3bb3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
3bb6:	41 80 3c 06 00       	cmp    BYTE PTR [r14+rax*1],0x0
3bbb:	74 59                	je     3c16 <squeeze_filter.constprop.14+0xd6>
3bbd:	0f 1f 00             	nop    DWORD PTR [rax]
3bc0:	4c 39 fb             	cmp    rbx,r15
3bc3:	72 71                	jb     3c36 <squeeze_filter.constprop.14+0xf6>
3bc5:	4d 89 fc             	mov    r12,r15
3bc8:	49 29 fc             	sub    r12,rdi
3bcb:	74 20                	je     3bed <squeeze_filter.constprop.14+0xad>
3bcd:	48 8b 0d b4 74 20 00 	mov    rcx,QWORD PTR [rip+0x2074b4]        # 20b088 <stdout@@GLIBC_2.2.5>
3bd4:	48 01 ef             	add    rdi,rbp
3bd7:	4c 89 e2             	mov    rdx,r12
3bda:	be 01 00 00 00       	mov    esi,0x1
3bdf:	e8 2c dc ff ff       	call   1810 <fwrite_unlocked@plt>
3be4:	49 39 c4             	cmp    r12,rax
3be7:	0f 85 a4 00 00 00    	jne    3c91 <squeeze_filter.constprop.14+0x151>
3bed:	49 39 df             	cmp    r15,rbx
3bf0:	41 bc ff ff ff 7f    	mov    r12d,0x7fffffff
3bf6:	0f 86 77 ff ff ff    	jbe    3b73 <squeeze_filter.constprop.14+0x33>
3bfc:	eb aa                	jmp    3ba8 <squeeze_filter.constprop.14+0x68>
3bfe:	66 90                	xchg   ax,ax
3c00:	48 8d 05 d9 77 20 00 	lea    rax,[rip+0x2077d9]        # 20b3e0 <io_buf>
3c07:	31 ff                	xor    edi,edi
3c09:	48 89 fb             	mov    rbx,rdi
3c0c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
3c0f:	41 80 3c 06 00       	cmp    BYTE PTR [r14+rax*1],0x0
3c14:	75 aa                	jne    3bc0 <squeeze_filter.constprop.14+0x80>
3c16:	48 89 f8             	mov    rax,rdi
3c19:	48 8d 58 02          	lea    rbx,[rax+0x2]
3c1d:	4c 39 fb             	cmp    rbx,r15
3c20:	0f 83 f4 00 00 00    	jae    3d1a <squeeze_filter.constprop.14+0x1da>
3c26:	0f b6 44 05 02       	movzx  eax,BYTE PTR [rbp+rax*1+0x2]
3c2b:	41 80 3c 06 00       	cmp    BYTE PTR [r14+rax*1],0x0
3c30:	0f 84 dc 00 00 00    	je     3d12 <squeeze_filter.constprop.14+0x1d2>
3c36:	48 89 d8             	mov    rax,rbx
3c39:	44 0f be 64 1d 00    	movsx  r12d,BYTE PTR [rbp+rbx*1+0x0]
3c3f:	48 29 f8             	sub    rax,rdi
3c42:	48 85 db             	test   rbx,rbx
3c45:	4c 8d 48 01          	lea    r9,[rax+0x1]
3c49:	74 0f                	je     3c5a <squeeze_filter.constprop.14+0x11a>
3c4b:	48 8d 0d 8d 77 20 00 	lea    rcx,[rip+0x20778d]        # 20b3df <in_squeeze_set+0xff>
3c52:	44 3a 24 0b          	cmp    r12b,BYTE PTR [rbx+rcx*1]
3c56:	4c 0f 44 c8          	cmove  r9,rax
3c5a:	48 83 c3 01          	add    rbx,0x1
3c5e:	4d 85 c9             	test   r9,r9
3c61:	0f 84 2e ff ff ff    	je     3b95 <squeeze_filter.constprop.14+0x55>
3c67:	48 8b 0d 1a 74 20 00 	mov    rcx,QWORD PTR [rip+0x20741a]        # 20b088 <stdout@@GLIBC_2.2.5>
3c6e:	48 01 ef             	add    rdi,rbp
3c71:	4c 89 ca             	mov    rdx,r9
3c74:	be 01 00 00 00       	mov    esi,0x1
3c79:	4c 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],r9
3c7e:	e8 8d db ff ff       	call   1810 <fwrite_unlocked@plt>
3c83:	4c 8b 4c 24 08       	mov    r9,QWORD PTR [rsp+0x8]
3c88:	4c 39 c8             	cmp    rax,r9
3c8b:	0f 84 04 ff ff ff    	je     3b95 <squeeze_filter.constprop.14+0x55>
3c91:	48 8d 35 fc 33 00 00 	lea    rsi,[rip+0x33fc]        # 7094 <_IO_stdin_used+0x94>
3c98:	ba 05 00 00 00       	mov    edx,0x5
3c9d:	31 ff                	xor    edi,edi
3c9f:	e8 ec d9 ff ff       	call   1690 <dcgettext@plt>
3ca4:	48 89 c3             	mov    rbx,rax
3ca7:	e8 64 d9 ff ff       	call   1610 <__errno_location@plt>
3cac:	8b 30                	mov    esi,DWORD PTR [rax]
3cae:	48 89 da             	mov    rdx,rbx
3cb1:	bf 01 00 00 00       	mov    edi,0x1
3cb6:	31 c0                	xor    eax,eax
3cb8:	e8 93 db ff ff       	call   1850 <error@plt>
3cbd:	0f 1f 00             	nop    DWORD PTR [rax]
3cc0:	48 83 c3 01          	add    rbx,0x1
3cc4:	4c 39 fb             	cmp    rbx,r15
3cc7:	0f 84 9d fe ff ff    	je     3b6a <squeeze_filter.constprop.14+0x2a>
3ccd:	0f be 44 1d 00       	movsx  eax,BYTE PTR [rbp+rbx*1+0x0]
3cd2:	44 39 e0             	cmp    eax,r12d
3cd5:	74 e9                	je     3cc0 <squeeze_filter.constprop.14+0x180>
3cd7:	41 bc ff ff ff 7f    	mov    r12d,0x7fffffff
3cdd:	e9 88 fe ff ff       	jmp    3b6a <squeeze_filter.constprop.14+0x2a>
3ce2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3ce8:	48 83 c4 18          	add    rsp,0x18
3cec:	5b                   	pop    rbx
3ced:	5d                   	pop    rbp
3cee:	41 5c                	pop    r12
3cf0:	41 5d                	pop    r13
3cf2:	41 5e                	pop    r14
3cf4:	41 5f                	pop    r15
3cf6:	c3                   	ret
3cf7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
3cfe:	00 00
3d00:	41 81 fc ff ff ff 7f 	cmp    r12d,0x7fffffff
3d07:	0f 85 8d fe ff ff    	jne    3b9a <squeeze_filter.constprop.14+0x5a>
3d0d:	e9 96 fe ff ff       	jmp    3ba8 <squeeze_filter.constprop.14+0x68>
3d12:	48 89 d8             	mov    rax,rbx
3d15:	e9 ff fe ff ff       	jmp    3c19 <squeeze_filter.constprop.14+0xd9>
3d1a:	0f 85 a5 fe ff ff    	jne    3bc5 <squeeze_filter.constprop.14+0x85>
3d20:	48 8d 50 01          	lea    rdx,[rax+0x1]
3d24:	0f b6 44 05 01       	movzx  eax,BYTE PTR [rbp+rax*1+0x1]
3d29:	41 80 3c 06 00       	cmp    BYTE PTR [r14+rax*1],0x0
3d2e:	0f 84 91 fe ff ff    	je     3bc5 <squeeze_filter.constprop.14+0x85>
3d34:	48 89 d3             	mov    rbx,rdx
3d37:	e9 84 fe ff ff       	jmp    3bc0 <squeeze_filter.constprop.14+0x80>
3d3c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000003d40 <usage>:
3d40:	41 55                	push   r13
3d42:	41 54                	push   r12
3d44:	ba 05 00 00 00       	mov    edx,0x5
3d49:	55                   	push   rbp
3d4a:	53                   	push   rbx
3d4b:	89 fd                	mov    ebp,edi
3d4d:	48 81 ec 88 00 00 00 	sub    rsp,0x88
3d54:	48 8b 1d 9d 96 20 00 	mov    rbx,QWORD PTR [rip+0x20969d]        # 20d3f8 <program_name>
3d5b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
3d62:	00 00
3d64:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
3d69:	31 c0                	xor    eax,eax
3d6b:	85 ff                	test   edi,edi
3d6d:	74 2e                	je     3d9d <usage+0x5d>
3d6f:	48 8d 35 5a 38 00 00 	lea    rsi,[rip+0x385a]        # 75d0 <__PRETTY_FUNCTION__.7483+0x22e>
3d76:	31 ff                	xor    edi,edi
3d78:	e8 13 d9 ff ff       	call   1690 <dcgettext@plt>
3d7d:	48 8b 3d 3c 73 20 00 	mov    rdi,QWORD PTR [rip+0x20733c]        # 20b0c0 <stderr@@GLIBC_2.2.5>
3d84:	48 89 c2             	mov    rdx,rax
3d87:	48 89 d9             	mov    rcx,rbx
3d8a:	be 01 00 00 00       	mov    esi,0x1
3d8f:	31 c0                	xor    eax,eax
3d91:	e8 0a db ff ff       	call   18a0 <__fprintf_chk@plt>
3d96:	89 ef                	mov    edi,ebp
3d98:	e8 e3 da ff ff       	call   1880 <exit@plt>
3d9d:	48 8d 35 54 38 00 00 	lea    rsi,[rip+0x3854]        # 75f8 <__PRETTY_FUNCTION__.7483+0x256>
3da4:	31 ff                	xor    edi,edi
3da6:	e8 e5 d8 ff ff       	call   1690 <dcgettext@plt>
3dab:	48 89 da             	mov    rdx,rbx
3dae:	48 89 c6             	mov    rsi,rax
3db1:	bf 01 00 00 00       	mov    edi,0x1
3db6:	31 c0                	xor    eax,eax
3db8:	e8 83 da ff ff       	call   1840 <__printf_chk@plt>
3dbd:	48 8b 1d c4 72 20 00 	mov    rbx,QWORD PTR [rip+0x2072c4]        # 20b088 <stdout@@GLIBC_2.2.5>
3dc4:	48 8d 35 55 38 00 00 	lea    rsi,[rip+0x3855]        # 7620 <__PRETTY_FUNCTION__.7483+0x27e>
3dcb:	ba 05 00 00 00       	mov    edx,0x5
3dd0:	31 ff                	xor    edi,edi
3dd2:	e8 b9 d8 ff ff       	call   1690 <dcgettext@plt>
3dd7:	48 89 de             	mov    rsi,rbx
3dda:	48 89 c7             	mov    rdi,rax
3ddd:	e8 ae d9 ff ff       	call   1790 <fputs_unlocked@plt>
3de2:	48 8b 1d 9f 72 20 00 	mov    rbx,QWORD PTR [rip+0x20729f]        # 20b088 <stdout@@GLIBC_2.2.5>
3de9:	48 8d 35 20 3a 00 00 	lea    rsi,[rip+0x3a20]        # 7810 <__PRETTY_FUNCTION__.7483+0x46e>
3df0:	ba 05 00 00 00       	mov    edx,0x5
3df5:	31 ff                	xor    edi,edi
3df7:	e8 94 d8 ff ff       	call   1690 <dcgettext@plt>
3dfc:	48 89 de             	mov    rsi,rbx
3dff:	48 89 c7             	mov    rdi,rax
3e02:	e8 89 d9 ff ff       	call   1790 <fputs_unlocked@plt>
3e07:	48 8b 1d 7a 72 20 00 	mov    rbx,QWORD PTR [rip+0x20727a]        # 20b088 <stdout@@GLIBC_2.2.5>
3e0e:	48 8d 35 2b 3a 00 00 	lea    rsi,[rip+0x3a2b]        # 7840 <__PRETTY_FUNCTION__.7483+0x49e>
3e15:	ba 05 00 00 00       	mov    edx,0x5
3e1a:	31 ff                	xor    edi,edi
3e1c:	e8 6f d8 ff ff       	call   1690 <dcgettext@plt>
3e21:	48 89 de             	mov    rsi,rbx
3e24:	48 89 c7             	mov    rdi,rax
3e27:	e8 64 d9 ff ff       	call   1790 <fputs_unlocked@plt>
3e2c:	48 8b 1d 55 72 20 00 	mov    rbx,QWORD PTR [rip+0x207255]        # 20b088 <stdout@@GLIBC_2.2.5>
3e33:	48 8d 35 3e 3a 00 00 	lea    rsi,[rip+0x3a3e]        # 7878 <__PRETTY_FUNCTION__.7483+0x4d6>
3e3a:	ba 05 00 00 00       	mov    edx,0x5
3e3f:	31 ff                	xor    edi,edi
3e41:	e8 4a d8 ff ff       	call   1690 <dcgettext@plt>
3e46:	48 89 de             	mov    rsi,rbx
3e49:	48 89 c7             	mov    rdi,rax
3e4c:	e8 3f d9 ff ff       	call   1790 <fputs_unlocked@plt>
3e51:	48 8b 1d 30 72 20 00 	mov    rbx,QWORD PTR [rip+0x207230]        # 20b088 <stdout@@GLIBC_2.2.5>
3e58:	48 8d 35 91 3b 00 00 	lea    rsi,[rip+0x3b91]        # 79f0 <__PRETTY_FUNCTION__.7483+0x64e>
3e5f:	ba 05 00 00 00       	mov    edx,0x5
3e64:	31 ff                	xor    edi,edi
3e66:	e8 25 d8 ff ff       	call   1690 <dcgettext@plt>
3e6b:	48 89 de             	mov    rsi,rbx
3e6e:	48 89 c7             	mov    rdi,rax
3e71:	e8 1a d9 ff ff       	call   1790 <fputs_unlocked@plt>
3e76:	48 8b 1d 0b 72 20 00 	mov    rbx,QWORD PTR [rip+0x20720b]        # 20b088 <stdout@@GLIBC_2.2.5>
3e7d:	48 8d 35 1c 3d 00 00 	lea    rsi,[rip+0x3d1c]        # 7ba0 <__PRETTY_FUNCTION__.7483+0x7fe>
3e84:	ba 05 00 00 00       	mov    edx,0x5
3e89:	31 ff                	xor    edi,edi
3e8b:	e8 00 d8 ff ff       	call   1690 <dcgettext@plt>
3e90:	48 89 de             	mov    rsi,rbx
3e93:	48 89 c7             	mov    rdi,rax
3e96:	e8 f5 d8 ff ff       	call   1790 <fputs_unlocked@plt>
3e9b:	48 8b 1d e6 71 20 00 	mov    rbx,QWORD PTR [rip+0x2071e6]        # 20b088 <stdout@@GLIBC_2.2.5>
3ea2:	48 8d 35 97 3e 00 00 	lea    rsi,[rip+0x3e97]        # 7d40 <__PRETTY_FUNCTION__.7483+0x99e>
3ea9:	ba 05 00 00 00       	mov    edx,0x5
3eae:	31 ff                	xor    edi,edi
3eb0:	e8 db d7 ff ff       	call   1690 <dcgettext@plt>
3eb5:	48 89 de             	mov    rsi,rbx
3eb8:	48 89 c7             	mov    rdi,rax
3ebb:	48 8d 1d de 31 00 00 	lea    rbx,[rip+0x31de]        # 70a0 <_IO_stdin_used+0xa0>
3ec2:	e8 c9 d8 ff ff       	call   1790 <fputs_unlocked@plt>
3ec7:	48 8d 05 d5 31 00 00 	lea    rax,[rip+0x31d5]        # 70a3 <_IO_stdin_used+0xa3>
3ece:	48 8d 0d 0f 32 00 00 	lea    rcx,[rip+0x320f]        # 70e4 <_IO_stdin_used+0xe4>
3ed5:	48 c7 44 24 60 00 00 	mov    QWORD PTR [rsp+0x60],0x0
3edc:	00 00
3ede:	48 c7 44 24 68 00 00 	mov    QWORD PTR [rsp+0x68],0x0
3ee5:	00 00
3ee7:	48 89 e2             	mov    rdx,rsp
3eea:	48 89 04 24          	mov    QWORD PTR [rsp],rax
3eee:	48 8d 05 b0 31 00 00 	lea    rax,[rip+0x31b0]        # 70a5 <_IO_stdin_used+0xa5>
3ef5:	48 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],rcx
3efa:	48 8d 0d ed 31 00 00 	lea    rcx,[rip+0x31ed]        # 70ee <_IO_stdin_used+0xee>
3f01:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
3f06:	48 8d 05 10 32 00 00 	lea    rax,[rip+0x3210]        # 711d <_IO_stdin_used+0x11d>
3f0d:	48 89 4c 24 40       	mov    QWORD PTR [rsp+0x40],rcx
3f12:	48 8d 0d df 31 00 00 	lea    rcx,[rip+0x31df]        # 70f8 <_IO_stdin_used+0xf8>
3f19:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
3f1e:	48 8d 05 90 31 00 00 	lea    rax,[rip+0x3190]        # 70b5 <_IO_stdin_used+0xb5>
3f25:	48 89 4c 24 50       	mov    QWORD PTR [rsp+0x50],rcx
3f2a:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
3f2f:	48 8d 05 95 31 00 00 	lea    rax,[rip+0x3195]        # 70cb <_IO_stdin_used+0xcb>
3f36:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
3f3b:	48 8d 05 93 31 00 00 	lea    rax,[rip+0x3193]        # 70d5 <_IO_stdin_used+0xd5>
3f42:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
3f47:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
3f4c:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
3f51:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
3f56:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
3f5d:	00 00 00
3f60:	48 83 c2 10          	add    rdx,0x10
3f64:	48 8b 3a             	mov    rdi,QWORD PTR [rdx]
3f67:	48 85 ff             	test   rdi,rdi
3f6a:	74 13                	je     3f7f <usage+0x23f>
3f6c:	b9 03 00 00 00       	mov    ecx,0x3
3f71:	48 89 de             	mov    rsi,rbx
3f74:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
3f76:	0f 97 c0             	seta   al
3f79:	1c 00                	sbb    al,0x0
3f7b:	84 c0                	test   al,al
3f7d:	75 e1                	jne    3f60 <usage+0x220>
3f7f:	4c 8b 62 08          	mov    r12,QWORD PTR [rdx+0x8]
3f83:	31 ff                	xor    edi,edi
3f85:	ba 05 00 00 00       	mov    edx,0x5
3f8a:	48 8d 35 71 31 00 00 	lea    rsi,[rip+0x3171]        # 7102 <_IO_stdin_used+0x102>
3f91:	4d 85 e4             	test   r12,r12
3f94:	0f 84 c1 00 00 00    	je     405b <usage+0x31b>
3f9a:	e8 f1 d6 ff ff       	call   1690 <dcgettext@plt>
3f9f:	48 8d 0d 72 3f 00 00 	lea    rcx,[rip+0x3f72]        # 7f18 <__PRETTY_FUNCTION__.7483+0xb76>
3fa6:	48 8d 15 6c 31 00 00 	lea    rdx,[rip+0x316c]        # 7119 <_IO_stdin_used+0x119>
3fad:	48 89 c6             	mov    rsi,rax
3fb0:	bf 01 00 00 00       	mov    edi,0x1
3fb5:	31 c0                	xor    eax,eax
3fb7:	e8 84 d8 ff ff       	call   1840 <__printf_chk@plt>
3fbc:	31 f6                	xor    esi,esi
3fbe:	bf 05 00 00 00       	mov    edi,0x5
3fc3:	e8 68 d8 ff ff       	call   1830 <setlocale@plt>
3fc8:	48 85 c0             	test   rax,rax
3fcb:	74 1c                	je     3fe9 <usage+0x2a9>
3fcd:	48 8d 35 53 31 00 00 	lea    rsi,[rip+0x3153]        # 7127 <_IO_stdin_used+0x127>
3fd4:	ba 03 00 00 00       	mov    edx,0x3
3fd9:	48 89 c7             	mov    rdi,rax
3fdc:	e8 3f d6 ff ff       	call   1620 <strncmp@plt>
3fe1:	85 c0                	test   eax,eax
3fe3:	0f 85 07 01 00 00    	jne    40f0 <usage+0x3b0>
3fe9:	48 8d 35 3b 31 00 00 	lea    rsi,[rip+0x313b]        # 712b <_IO_stdin_used+0x12b>
3ff0:	31 ff                	xor    edi,edi
3ff2:	ba 05 00 00 00       	mov    edx,0x5
3ff7:	e8 94 d6 ff ff       	call   1690 <dcgettext@plt>
3ffc:	48 8d 0d 9d 30 00 00 	lea    rcx,[rip+0x309d]        # 70a0 <_IO_stdin_used+0xa0>
4003:	48 8d 15 0e 3f 00 00 	lea    rdx,[rip+0x3f0e]        # 7f18 <__PRETTY_FUNCTION__.7483+0xb76>
400a:	48 89 c6             	mov    rsi,rax
400d:	bf 01 00 00 00       	mov    edi,0x1
4012:	31 c0                	xor    eax,eax
4014:	e8 27 d8 ff ff       	call   1840 <__printf_chk@plt>
4019:	49 39 dc             	cmp    r12,rbx
401c:	48 8d 0d 9c 30 00 00 	lea    rcx,[rip+0x309c]        # 70bf <_IO_stdin_used+0xbf>
4023:	48 8d 1d b7 48 00 00 	lea    rbx,[rip+0x48b7]        # 88e1 <quoting_style_vals+0x81>
402a:	48 0f 44 d9          	cmove  rbx,rcx
402e:	48 8d 35 53 3f 00 00 	lea    rsi,[rip+0x3f53]        # 7f88 <__PRETTY_FUNCTION__.7483+0xbe6>
4035:	31 ff                	xor    edi,edi
4037:	ba 05 00 00 00       	mov    edx,0x5
403c:	e8 4f d6 ff ff       	call   1690 <dcgettext@plt>
4041:	48 89 d9             	mov    rcx,rbx
4044:	48 89 c6             	mov    rsi,rax
4047:	4c 89 e2             	mov    rdx,r12
404a:	bf 01 00 00 00       	mov    edi,0x1
404f:	31 c0                	xor    eax,eax
4051:	e8 ea d7 ff ff       	call   1840 <__printf_chk@plt>
4056:	e9 3b fd ff ff       	jmp    3d96 <usage+0x56>
405b:	e8 30 d6 ff ff       	call   1690 <dcgettext@plt>
4060:	48 8d 0d b1 3e 00 00 	lea    rcx,[rip+0x3eb1]        # 7f18 <__PRETTY_FUNCTION__.7483+0xb76>
4067:	48 8d 15 ab 30 00 00 	lea    rdx,[rip+0x30ab]        # 7119 <_IO_stdin_used+0x119>
406e:	48 89 c6             	mov    rsi,rax
4071:	bf 01 00 00 00       	mov    edi,0x1
4076:	31 c0                	xor    eax,eax
4078:	e8 c3 d7 ff ff       	call   1840 <__printf_chk@plt>
407d:	31 f6                	xor    esi,esi
407f:	bf 05 00 00 00       	mov    edi,0x5
4084:	e8 a7 d7 ff ff       	call   1830 <setlocale@plt>
4089:	48 85 c0             	test   rax,rax
408c:	74 18                	je     40a6 <usage+0x366>
408e:	48 8d 35 92 30 00 00 	lea    rsi,[rip+0x3092]        # 7127 <_IO_stdin_used+0x127>
4095:	ba 03 00 00 00       	mov    edx,0x3
409a:	48 89 c7             	mov    rdi,rax
409d:	e8 7e d5 ff ff       	call   1620 <strncmp@plt>
40a2:	85 c0                	test   eax,eax
40a4:	75 43                	jne    40e9 <usage+0x3a9>
40a6:	48 8d 35 7e 30 00 00 	lea    rsi,[rip+0x307e]        # 712b <_IO_stdin_used+0x12b>
40ad:	ba 05 00 00 00       	mov    edx,0x5
40b2:	31 ff                	xor    edi,edi
40b4:	4c 8d 25 e5 2f 00 00 	lea    r12,[rip+0x2fe5]        # 70a0 <_IO_stdin_used+0xa0>
40bb:	48 8d 1d fd 2f 00 00 	lea    rbx,[rip+0x2ffd]        # 70bf <_IO_stdin_used+0xbf>
40c2:	e8 c9 d5 ff ff       	call   1690 <dcgettext@plt>
40c7:	48 8d 0d d2 2f 00 00 	lea    rcx,[rip+0x2fd2]        # 70a0 <_IO_stdin_used+0xa0>
40ce:	48 8d 15 43 3e 00 00 	lea    rdx,[rip+0x3e43]        # 7f18 <__PRETTY_FUNCTION__.7483+0xb76>
40d5:	48 89 c6             	mov    rsi,rax
40d8:	bf 01 00 00 00       	mov    edi,0x1
40dd:	31 c0                	xor    eax,eax
40df:	e8 5c d7 ff ff       	call   1840 <__printf_chk@plt>
40e4:	e9 45 ff ff ff       	jmp    402e <usage+0x2ee>
40e9:	4c 8d 25 b0 2f 00 00 	lea    r12,[rip+0x2fb0]        # 70a0 <_IO_stdin_used+0xa0>
40f0:	4c 8b 2d 91 6f 20 00 	mov    r13,QWORD PTR [rip+0x206f91]        # 20b088 <stdout@@GLIBC_2.2.5>
40f7:	48 8d 35 42 3e 00 00 	lea    rsi,[rip+0x3e42]        # 7f40 <__PRETTY_FUNCTION__.7483+0xb9e>
40fe:	31 ff                	xor    edi,edi
4100:	ba 05 00 00 00       	mov    edx,0x5
4105:	e8 86 d5 ff ff       	call   1690 <dcgettext@plt>
410a:	4c 89 ee             	mov    rsi,r13
410d:	48 89 c7             	mov    rdi,rax
4110:	e8 7b d6 ff ff       	call   1790 <fputs_unlocked@plt>
4115:	e9 cf fe ff ff       	jmp    3fe9 <usage+0x2a9>
411a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004120 <close_stdout_set_file_name>:
4120:	48 89 3d c9 92 20 00 	mov    QWORD PTR [rip+0x2092c9],rdi        # 20d3f0 <file_name>
4127:	c3                   	ret
4128:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
412f:	00

0000000000004130 <close_stdout_set_ignore_EPIPE>:
4130:	40 88 3d b1 92 20 00 	mov    BYTE PTR [rip+0x2092b1],dil        # 20d3e8 <ignore_EPIPE>
4137:	c3                   	ret
4138:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
413f:	00

0000000000004140 <close_stdout>:
4140:	55                   	push   rbp
4141:	53                   	push   rbx
4142:	48 83 ec 08          	sub    rsp,0x8
4146:	48 8b 3d 3b 6f 20 00 	mov    rdi,QWORD PTR [rip+0x206f3b]        # 20b088 <stdout@@GLIBC_2.2.5>
414d:	e8 ce 2b 00 00       	call   6d20 <close_stream>
4152:	85 c0                	test   eax,eax
4154:	74 16                	je     416c <close_stdout+0x2c>
4156:	e8 b5 d4 ff ff       	call   1610 <__errno_location@plt>
415b:	80 3d 86 92 20 00 00 	cmp    BYTE PTR [rip+0x209286],0x0        # 20d3e8 <ignore_EPIPE>
4162:	48 89 c3             	mov    rbx,rax
4165:	74 1c                	je     4183 <close_stdout+0x43>
4167:	83 38 20             	cmp    DWORD PTR [rax],0x20
416a:	75 17                	jne    4183 <close_stdout+0x43>
416c:	48 8b 3d 4d 6f 20 00 	mov    rdi,QWORD PTR [rip+0x206f4d]        # 20b0c0 <stderr@@GLIBC_2.2.5>
4173:	e8 a8 2b 00 00       	call   6d20 <close_stream>
4178:	85 c0                	test   eax,eax
417a:	75 46                	jne    41c2 <close_stdout+0x82>
417c:	48 83 c4 08          	add    rsp,0x8
4180:	5b                   	pop    rbx
4181:	5d                   	pop    rbp
4182:	c3                   	ret
4183:	48 8d 35 0a 2f 00 00 	lea    rsi,[rip+0x2f0a]        # 7094 <_IO_stdin_used+0x94>
418a:	31 ff                	xor    edi,edi
418c:	ba 05 00 00 00       	mov    edx,0x5
4191:	e8 fa d4 ff ff       	call   1690 <dcgettext@plt>
4196:	48 8b 3d 53 92 20 00 	mov    rdi,QWORD PTR [rip+0x209253]        # 20d3f0 <file_name>
419d:	48 89 c5             	mov    rbp,rax
41a0:	48 85 ff             	test   rdi,rdi
41a3:	74 28                	je     41cd <close_stdout+0x8d>
41a5:	e8 96 1b 00 00       	call   5d40 <quotearg_colon>
41aa:	8b 33                	mov    esi,DWORD PTR [rbx]
41ac:	48 8d 15 a1 41 00 00 	lea    rdx,[rip+0x41a1]        # 8354 <__PRETTY_FUNCTION__.7483+0xfb2>
41b3:	48 89 c1             	mov    rcx,rax
41b6:	49 89 e8             	mov    r8,rbp
41b9:	31 ff                	xor    edi,edi
41bb:	31 c0                	xor    eax,eax
41bd:	e8 8e d6 ff ff       	call   1850 <error@plt>
41c2:	8b 3d 50 6e 20 00    	mov    edi,DWORD PTR [rip+0x206e50]        # 20b018 <exit_failure>
41c8:	e8 63 d4 ff ff       	call   1630 <_exit@plt>
41cd:	8b 33                	mov    esi,DWORD PTR [rbx]
41cf:	48 8d 15 82 41 00 00 	lea    rdx,[rip+0x4182]        # 8358 <__PRETTY_FUNCTION__.7483+0xfb6>
41d6:	48 89 c1             	mov    rcx,rax
41d9:	31 ff                	xor    edi,edi
41db:	31 c0                	xor    eax,eax
41dd:	e8 6e d6 ff ff       	call   1850 <error@plt>
41e2:	eb de                	jmp    41c2 <close_stdout+0x82>
41e4:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
41eb:	00 00 00
41ee:	66 90                	xchg   ax,ax

00000000000041f0 <fdadvise>:
41f0:	e9 6b d5 ff ff       	jmp    1760 <posix_fadvise@plt>
41f5:	90                   	nop
41f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
41fd:	00 00 00

0000000000004200 <fadvise>:
4200:	48 85 ff             	test   rdi,rdi
4203:	74 1b                	je     4220 <fadvise+0x20>
4205:	53                   	push   rbx
4206:	89 f3                	mov    ebx,esi
4208:	e8 b3 d5 ff ff       	call   17c0 <fileno@plt>
420d:	89 d9                	mov    ecx,ebx
420f:	31 d2                	xor    edx,edx
4211:	31 f6                	xor    esi,esi
4213:	5b                   	pop    rbx
4214:	89 c7                	mov    edi,eax
4216:	e9 45 d5 ff ff       	jmp    1760 <posix_fadvise@plt>
421b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
4220:	f3 c3                	repz ret
4222:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4229:	00 00 00
422c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000004230 <set_program_name>:
4230:	48 85 ff             	test   rdi,rdi
4233:	53                   	push   rbx
4234:	74 77                	je     42ad <set_program_name+0x7d>
4236:	be 2f 00 00 00       	mov    esi,0x2f
423b:	48 89 fb             	mov    rbx,rdi
423e:	e8 bd d4 ff ff       	call   1700 <strrchr@plt>
4243:	48 85 c0             	test   rax,rax
4246:	74 55                	je     429d <set_program_name+0x6d>
4248:	4c 8d 40 01          	lea    r8,[rax+0x1]
424c:	4c 89 c2             	mov    rdx,r8
424f:	48 29 da             	sub    rdx,rbx
4252:	48 83 fa 06          	cmp    rdx,0x6
4256:	7e 45                	jle    429d <set_program_name+0x6d>
4258:	48 8d 70 fa          	lea    rsi,[rax-0x6]
425c:	48 8d 3d 35 41 00 00 	lea    rdi,[rip+0x4135]        # 8398 <__PRETTY_FUNCTION__.7483+0xff6>
4263:	b9 07 00 00 00       	mov    ecx,0x7
4268:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
426a:	0f 97 c2             	seta   dl
426d:	80 da 00             	sbb    dl,0x0
4270:	84 d2                	test   dl,dl
4272:	75 29                	jne    429d <set_program_name+0x6d>
4274:	48 8d 3d 25 41 00 00 	lea    rdi,[rip+0x4125]        # 83a0 <__PRETTY_FUNCTION__.7483+0xffe>
427b:	b9 03 00 00 00       	mov    ecx,0x3
4280:	4c 89 c6             	mov    rsi,r8
4283:	4c 89 c3             	mov    rbx,r8
4286:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
4288:	0f 97 c2             	seta   dl
428b:	80 da 00             	sbb    dl,0x0
428e:	84 d2                	test   dl,dl
4290:	75 0b                	jne    429d <set_program_name+0x6d>
4292:	48 8d 58 04          	lea    rbx,[rax+0x4]
4296:	48 89 1d e3 6d 20 00 	mov    QWORD PTR [rip+0x206de3],rbx        # 20b080 <__progname@@GLIBC_2.2.5>
429d:	48 89 1d 54 91 20 00 	mov    QWORD PTR [rip+0x209154],rbx        # 20d3f8 <program_name>
42a4:	48 89 1d f5 6d 20 00 	mov    QWORD PTR [rip+0x206df5],rbx        # 20b0a0 <__progname_full@@GLIBC_2.2.5>
42ab:	5b                   	pop    rbx
42ac:	c3                   	ret
42ad:	48 8b 0d 0c 6e 20 00 	mov    rcx,QWORD PTR [rip+0x206e0c]        # 20b0c0 <stderr@@GLIBC_2.2.5>
42b4:	48 8d 3d a5 40 00 00 	lea    rdi,[rip+0x40a5]        # 8360 <__PRETTY_FUNCTION__.7483+0xfbe>
42bb:	ba 37 00 00 00       	mov    edx,0x37
42c0:	be 01 00 00 00       	mov    esi,0x1
42c5:	e8 c6 d5 ff ff       	call   1890 <fwrite@plt>
42ca:	e8 31 d3 ff ff       	call   1600 <abort@plt>
42cf:	90                   	nop

00000000000042d0 <gettext_quote.part.1>:
42d0:	55                   	push   rbp
42d1:	53                   	push   rbx
42d2:	48 89 fd             	mov    rbp,rdi
42d5:	89 f3                	mov    ebx,esi
42d7:	48 83 ec 08          	sub    rsp,0x8
42db:	e8 20 2b 00 00       	call   6e00 <locale_charset>
42e0:	0f b6 10             	movzx  edx,BYTE PTR [rax]
42e3:	83 e2 df             	and    edx,0xffffffdf
42e6:	80 fa 55             	cmp    dl,0x55
42e9:	74 75                	je     4360 <gettext_quote.part.1+0x90>
42eb:	80 fa 47             	cmp    dl,0x47
42ee:	74 20                	je     4310 <gettext_quote.part.1+0x40>
42f0:	48 8d 05 bc 40 00 00 	lea    rax,[rip+0x40bc]        # 83b3 <__PRETTY_FUNCTION__.7483+0x1011>
42f7:	48 8d 15 b7 40 00 00 	lea    rdx,[rip+0x40b7]        # 83b5 <__PRETTY_FUNCTION__.7483+0x1013>
42fe:	83 fb 09             	cmp    ebx,0x9
4301:	48 0f 45 c2          	cmovne rax,rdx
4305:	48 83 c4 08          	add    rsp,0x8
4309:	5b                   	pop    rbx
430a:	5d                   	pop    rbp
430b:	c3                   	ret
430c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
4310:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
4314:	83 e2 df             	and    edx,0xffffffdf
4317:	80 fa 42             	cmp    dl,0x42
431a:	75 d4                	jne    42f0 <gettext_quote.part.1+0x20>
431c:	80 78 02 31          	cmp    BYTE PTR [rax+0x2],0x31
4320:	75 ce                	jne    42f0 <gettext_quote.part.1+0x20>
4322:	80 78 03 38          	cmp    BYTE PTR [rax+0x3],0x38
4326:	75 c8                	jne    42f0 <gettext_quote.part.1+0x20>
4328:	80 78 04 30          	cmp    BYTE PTR [rax+0x4],0x30
432c:	75 c2                	jne    42f0 <gettext_quote.part.1+0x20>
432e:	80 78 05 33          	cmp    BYTE PTR [rax+0x5],0x33
4332:	75 bc                	jne    42f0 <gettext_quote.part.1+0x20>
4334:	80 78 06 30          	cmp    BYTE PTR [rax+0x6],0x30
4338:	75 b6                	jne    42f0 <gettext_quote.part.1+0x20>
433a:	80 78 07 00          	cmp    BYTE PTR [rax+0x7],0x0
433e:	75 b0                	jne    42f0 <gettext_quote.part.1+0x20>
4340:	80 7d 00 60          	cmp    BYTE PTR [rbp+0x0],0x60
4344:	48 8d 05 61 40 00 00 	lea    rax,[rip+0x4061]        # 83ac <__PRETTY_FUNCTION__.7483+0x100a>
434b:	48 8d 15 5e 40 00 00 	lea    rdx,[rip+0x405e]        # 83b0 <__PRETTY_FUNCTION__.7483+0x100e>
4352:	48 0f 45 c2          	cmovne rax,rdx
4356:	48 83 c4 08          	add    rsp,0x8
435a:	5b                   	pop    rbx
435b:	5d                   	pop    rbp
435c:	c3                   	ret
435d:	0f 1f 00             	nop    DWORD PTR [rax]
4360:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
4364:	83 e2 df             	and    edx,0xffffffdf
4367:	80 fa 54             	cmp    dl,0x54
436a:	75 84                	jne    42f0 <gettext_quote.part.1+0x20>
436c:	0f b6 50 02          	movzx  edx,BYTE PTR [rax+0x2]
4370:	83 e2 df             	and    edx,0xffffffdf
4373:	80 fa 46             	cmp    dl,0x46
4376:	0f 85 74 ff ff ff    	jne    42f0 <gettext_quote.part.1+0x20>
437c:	80 78 03 2d          	cmp    BYTE PTR [rax+0x3],0x2d
4380:	0f 85 6a ff ff ff    	jne    42f0 <gettext_quote.part.1+0x20>
4386:	80 78 04 38          	cmp    BYTE PTR [rax+0x4],0x38
438a:	0f 85 60 ff ff ff    	jne    42f0 <gettext_quote.part.1+0x20>
4390:	80 78 05 00          	cmp    BYTE PTR [rax+0x5],0x0
4394:	0f 85 56 ff ff ff    	jne    42f0 <gettext_quote.part.1+0x20>
439a:	80 7d 00 60          	cmp    BYTE PTR [rbp+0x0],0x60
439e:	48 8d 05 ff 3f 00 00 	lea    rax,[rip+0x3fff]        # 83a4 <__PRETTY_FUNCTION__.7483+0x1002>
43a5:	48 8d 15 fc 3f 00 00 	lea    rdx,[rip+0x3ffc]        # 83a8 <__PRETTY_FUNCTION__.7483+0x1006>
43ac:	48 0f 45 c2          	cmovne rax,rdx
43b0:	48 83 c4 08          	add    rsp,0x8
43b4:	5b                   	pop    rbx
43b5:	5d                   	pop    rbp
43b6:	c3                   	ret
43b7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
43be:	00 00

00000000000043c0 <quotearg_buffer_restyled>:
43c0:	41 57                	push   r15
43c2:	41 56                	push   r14
43c4:	45 89 c7             	mov    r15d,r8d
43c7:	41 55                	push   r13
43c9:	41 54                	push   r12
43cb:	49 89 fe             	mov    r14,rdi
43ce:	55                   	push   rbp
43cf:	53                   	push   rbx
43d0:	44 89 cb             	mov    ebx,r9d
43d3:	49 89 f5             	mov    r13,rsi
43d6:	48 89 cd             	mov    rbp,rcx
43d9:	83 e3 02             	and    ebx,0x2
43dc:	48 81 ec b8 00 00 00 	sub    rsp,0xb8
43e3:	48 8b 84 24 f0 00 00 	mov    rax,QWORD PTR [rsp+0xf0]
43ea:	00
43eb:	48 89 54 24 10       	mov    QWORD PTR [rsp+0x10],rdx
43f0:	44 89 44 24 08       	mov    DWORD PTR [rsp+0x8],r8d
43f5:	44 89 4c 24 78       	mov    DWORD PTR [rsp+0x78],r9d
43fa:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
43ff:	48 8b 84 24 f8 00 00 	mov    rax,QWORD PTR [rsp+0xf8]
4406:	00
4407:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
440c:	48 8b 84 24 00 01 00 	mov    rax,QWORD PTR [rsp+0x100]
4413:	00
4414:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
4419:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
4420:	00 00
4422:	48 89 84 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],rax
4429:	00
442a:	31 c0                	xor    eax,eax
442c:	e8 6f d2 ff ff       	call   16a0 <__ctype_get_mb_cur_max@plt>
4431:	41 83 ff 0a          	cmp    r15d,0xa
4435:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
443a:	0f 87 af 11 00 00    	ja     55ef <quotearg_buffer_restyled+0x122f>
4440:	48 8d 0d d9 3f 00 00 	lea    rcx,[rip+0x3fd9]        # 8420 <__PRETTY_FUNCTION__.7483+0x107e>
4447:	44 89 fa             	mov    edx,r15d
444a:	48 63 04 91          	movsxd rax,DWORD PTR [rcx+rdx*4]
444e:	48 01 c8             	add    rax,rcx
4451:	ff e0                	jmp    rax
4453:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
4458:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
445d:	45 31 e4             	xor    r12d,r12d
4460:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
4467:	00 00
4469:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
446e:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
4473:	48 8d 05 3b 3f 00 00 	lea    rax,[rip+0x3f3b]        # 83b5 <__PRETTY_FUNCTION__.7483+0x1013>
447a:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
4481:	00 00
4483:	45 31 ff             	xor    r15d,r15d
4486:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
448d:	00
448e:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
4493:	45 31 db             	xor    r11d,r11d
4496:	48 89 e8             	mov    rax,rbp
4499:	45 89 e0             	mov    r8d,r12d
449c:	4c 89 dd             	mov    rbp,r11
449f:	49 89 c3             	mov    r11,rax
44a2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
44a8:	49 39 eb             	cmp    r11,rbp
44ab:	41 0f 95 c4          	setne  r12b
44af:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
44b3:	75 0d                	jne    44c2 <quotearg_buffer_restyled+0x102>
44b5:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
44ba:	80 3c 28 00          	cmp    BYTE PTR [rax+rbp*1],0x0
44be:	41 0f 95 c4          	setne  r12b
44c2:	45 84 e4             	test   r12b,r12b
44c5:	0f 84 55 06 00 00    	je     4b20 <quotearg_buffer_restyled+0x760>
44cb:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
44d0:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
44d5:	4c 8d 0c 2f          	lea    r9,[rdi+rbp*1]
44d9:	0f 95 c0             	setne  al
44dc:	22 44 24 0d          	and    al,BYTE PTR [rsp+0xd]
44e0:	41 89 c2             	mov    r10d,eax
44e3:	0f 84 a7 00 00 00    	je     4590 <quotearg_buffer_restyled+0x1d0>
44e9:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
44ee:	48 85 c0             	test   rax,rax
44f1:	0f 84 29 04 00 00    	je     4920 <quotearg_buffer_restyled+0x560>
44f7:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
44fb:	48 8d 5c 05 00       	lea    rbx,[rbp+rax*1+0x0]
4500:	75 2e                	jne    4530 <quotearg_buffer_restyled+0x170>
4502:	48 83 f8 01          	cmp    rax,0x1
4506:	76 28                	jbe    4530 <quotearg_buffer_restyled+0x170>
4508:	44 88 44 24 38       	mov    BYTE PTR [rsp+0x38],r8b
450d:	44 88 54 24 30       	mov    BYTE PTR [rsp+0x30],r10b
4512:	4c 89 4c 24 28       	mov    QWORD PTR [rsp+0x28],r9
4517:	e8 94 d1 ff ff       	call   16b0 <strlen@plt>
451c:	44 0f b6 44 24 38    	movzx  r8d,BYTE PTR [rsp+0x38]
4522:	44 0f b6 54 24 30    	movzx  r10d,BYTE PTR [rsp+0x30]
4528:	49 89 c3             	mov    r11,rax
452b:	4c 8b 4c 24 28       	mov    r9,QWORD PTR [rsp+0x28]
4530:	4c 39 db             	cmp    rbx,r11
4533:	44 88 54 24 28       	mov    BYTE PTR [rsp+0x28],r10b
4538:	0f 87 b2 05 00 00    	ja     4af0 <quotearg_buffer_restyled+0x730>
453e:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
4543:	48 8b 74 24 48       	mov    rsi,QWORD PTR [rsp+0x48]
4548:	4c 89 cf             	mov    rdi,r9
454b:	4c 89 5c 24 40       	mov    QWORD PTR [rsp+0x40],r11
4550:	44 88 44 24 38       	mov    BYTE PTR [rsp+0x38],r8b
4555:	4c 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],r9
455a:	e8 21 d2 ff ff       	call   1780 <memcmp@plt>
455f:	85 c0                	test   eax,eax
4561:	4c 8b 4c 24 30       	mov    r9,QWORD PTR [rsp+0x30]
4566:	44 0f b6 44 24 38    	movzx  r8d,BYTE PTR [rsp+0x38]
456c:	4c 8b 5c 24 40       	mov    r11,QWORD PTR [rsp+0x40]
4571:	0f 85 79 05 00 00    	jne    4af0 <quotearg_buffer_restyled+0x730>
4577:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
457c:	44 0f b6 54 24 28    	movzx  r10d,BYTE PTR [rsp+0x28]
4582:	0f 85 7d 0f 00 00    	jne    5505 <quotearg_buffer_restyled+0x1145>
4588:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
458f:	00
4590:	41 0f b6 19          	movzx  ebx,BYTE PTR [r9]
4594:	80 fb 7e             	cmp    bl,0x7e
4597:	0f 87 1b 03 00 00    	ja     48b8 <quotearg_buffer_restyled+0x4f8>
459d:	48 8d 0d a8 3e 00 00 	lea    rcx,[rip+0x3ea8]        # 844c <__PRETTY_FUNCTION__.7483+0x10aa>
45a4:	0f b6 d3             	movzx  edx,bl
45a7:	48 63 04 91          	movsxd rax,DWORD PTR [rcx+rdx*4]
45ab:	48 01 c8             	add    rax,rcx
45ae:	ff e0                	jmp    rax
45b0:	45 31 d2             	xor    r10d,r10d
45b3:	49 83 fb 01          	cmp    r11,0x1
45b7:	0f 95 c0             	setne  al
45ba:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
45be:	75 0c                	jne    45cc <quotearg_buffer_restyled+0x20c>
45c0:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
45c5:	80 78 01 00          	cmp    BYTE PTR [rax+0x1],0x0
45c9:	0f 95 c0             	setne  al
45cc:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
45d1:	0f 94 c2             	sete   dl
45d4:	84 c0                	test   al,al
45d6:	0f 84 4c 02 00 00    	je     4828 <quotearg_buffer_restyled+0x468>
45dc:	45 31 e4             	xor    r12d,r12d
45df:	31 c0                	xor    eax,eax
45e1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
45e8:	80 7c 24 0d 01       	cmp    BYTE PTR [rsp+0xd],0x1
45ed:	0f 85 0f 01 00 00    	jne    4702 <quotearg_buffer_restyled+0x342>
45f3:	84 d2                	test   dl,dl
45f5:	0f 85 07 01 00 00    	jne    4702 <quotearg_buffer_restyled+0x342>
45fb:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
4600:	48 85 f6             	test   rsi,rsi
4603:	74 14                	je     4619 <quotearg_buffer_restyled+0x259>
4605:	89 da                	mov    edx,ebx
4607:	c0 ea 05             	shr    dl,0x5
460a:	0f b6 d2             	movzx  edx,dl
460d:	8b 14 96             	mov    edx,DWORD PTR [rsi+rdx*4]
4610:	0f a3 da             	bt     edx,ebx
4613:	0f 82 4a 01 00 00    	jb     4763 <quotearg_buffer_restyled+0x3a3>
4619:	45 84 d2             	test   r10b,r10b
461c:	0f 85 41 01 00 00    	jne    4763 <quotearg_buffer_restyled+0x3a3>
4622:	83 f0 01             	xor    eax,0x1
4625:	48 83 c5 01          	add    rbp,0x1
4629:	44 21 c0             	and    eax,r8d
462c:	84 c0                	test   al,al
462e:	74 20                	je     4650 <quotearg_buffer_restyled+0x290>
4630:	4d 39 fd             	cmp    r13,r15
4633:	76 05                	jbe    463a <quotearg_buffer_restyled+0x27a>
4635:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
463a:	49 8d 47 01          	lea    rax,[r15+0x1]
463e:	49 39 c5             	cmp    r13,rax
4641:	76 06                	jbe    4649 <quotearg_buffer_restyled+0x289>
4643:	43 c6 44 3e 01 27    	mov    BYTE PTR [r14+r15*1+0x1],0x27
4649:	49 83 c7 02          	add    r15,0x2
464d:	45 31 c0             	xor    r8d,r8d
4650:	4d 39 ef             	cmp    r15,r13
4653:	73 04                	jae    4659 <quotearg_buffer_restyled+0x299>
4655:	43 88 1c 3e          	mov    BYTE PTR [r14+r15*1],bl
4659:	0f b6 7c 24 0e       	movzx  edi,BYTE PTR [rsp+0xe]
465e:	49 83 c7 01          	add    r15,0x1
4662:	b8 00 00 00 00       	mov    eax,0x0
4667:	45 84 e4             	test   r12b,r12b
466a:	0f 44 f8             	cmove  edi,eax
466d:	40 88 7c 24 0e       	mov    BYTE PTR [rsp+0xe],dil
4672:	e9 31 fe ff ff       	jmp    44a8 <quotearg_buffer_restyled+0xe8>
4677:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
467e:	00 00
4680:	45 31 d2             	xor    r10d,r10d
4683:	8b 44 24 08          	mov    eax,DWORD PTR [rsp+0x8]
4687:	83 f8 02             	cmp    eax,0x2
468a:	0f 84 b8 05 00 00    	je     4c48 <quotearg_buffer_restyled+0x888>
4690:	83 f8 05             	cmp    eax,0x5
4693:	0f 84 6f 05 00 00    	je     4c08 <quotearg_buffer_restyled+0x848>
4699:	83 f8 02             	cmp    eax,0x2
469c:	bb 3f 00 00 00       	mov    ebx,0x3f
46a1:	0f 94 c2             	sete   dl
46a4:	45 31 e4             	xor    r12d,r12d
46a7:	31 c0                	xor    eax,eax
46a9:	e9 3a ff ff ff       	jmp    45e8 <quotearg_buffer_restyled+0x228>
46ae:	66 90                	xchg   ax,ax
46b0:	45 31 d2             	xor    r10d,r10d
46b3:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
46b8:	0f 84 02 05 00 00    	je     4bc0 <quotearg_buffer_restyled+0x800>
46be:	44 88 64 24 7c       	mov    BYTE PTR [rsp+0x7c],r12b
46c3:	31 d2                	xor    edx,edx
46c5:	31 c0                	xor    eax,eax
46c7:	bb 27 00 00 00       	mov    ebx,0x27
46cc:	e9 17 ff ff ff       	jmp    45e8 <quotearg_buffer_restyled+0x228>
46d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
46d8:	ba 09 00 00 00       	mov    edx,0x9
46dd:	bb 74 00 00 00       	mov    ebx,0x74
46e2:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
46e7:	0f 94 c0             	sete   al
46ea:	22 44 24 0f          	and    al,BYTE PTR [rsp+0xf]
46ee:	0f 85 4a 01 00 00    	jne    483e <quotearg_buffer_restyled+0x47e>
46f4:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
46f9:	75 65                	jne    4760 <quotearg_buffer_restyled+0x3a0>
46fb:	89 d3                	mov    ebx,edx
46fd:	45 31 e4             	xor    r12d,r12d
4700:	31 c0                	xor    eax,eax
4702:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
4707:	0f 85 ee fe ff ff    	jne    45fb <quotearg_buffer_restyled+0x23b>
470d:	e9 07 ff ff ff       	jmp    4619 <quotearg_buffer_restyled+0x259>
4712:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4718:	ba 08 00 00 00       	mov    edx,0x8
471d:	bb 62 00 00 00       	mov    ebx,0x62
4722:	eb d0                	jmp    46f4 <quotearg_buffer_restyled+0x334>
4724:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
4728:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
472d:	0f 84 cd 03 00 00    	je     4b00 <quotearg_buffer_restyled+0x740>
4733:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
4738:	0f 84 12 02 00 00    	je     4950 <quotearg_buffer_restyled+0x590>
473e:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
4743:	0f 84 07 02 00 00    	je     4950 <quotearg_buffer_restyled+0x590>
4749:	48 83 7c 24 18 00    	cmp    QWORD PTR [rsp+0x18],0x0
474f:	0f 85 b6 03 00 00    	jne    4b0b <quotearg_buffer_restyled+0x74b>
4755:	bb 5c 00 00 00       	mov    ebx,0x5c
475a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4760:	45 31 e4             	xor    r12d,r12d
4763:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4768:	0f 94 c2             	sete   dl
476b:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
4770:	89 d0                	mov    eax,edx
4772:	0f 85 50 08 00 00    	jne    4fc8 <quotearg_buffer_restyled+0xc08>
4778:	44 89 c0             	mov    eax,r8d
477b:	83 f0 01             	xor    eax,0x1
477e:	20 d0                	and    al,dl
4780:	74 2f                	je     47b1 <quotearg_buffer_restyled+0x3f1>
4782:	4d 39 fd             	cmp    r13,r15
4785:	76 05                	jbe    478c <quotearg_buffer_restyled+0x3cc>
4787:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
478c:	49 8d 57 01          	lea    rdx,[r15+0x1]
4790:	49 39 d5             	cmp    r13,rdx
4793:	76 06                	jbe    479b <quotearg_buffer_restyled+0x3db>
4795:	43 c6 44 3e 01 24    	mov    BYTE PTR [r14+r15*1+0x1],0x24
479b:	49 8d 57 02          	lea    rdx,[r15+0x2]
479f:	49 39 d5             	cmp    r13,rdx
47a2:	76 06                	jbe    47aa <quotearg_buffer_restyled+0x3ea>
47a4:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
47aa:	49 83 c7 03          	add    r15,0x3
47ae:	41 89 c0             	mov    r8d,eax
47b1:	4d 39 fd             	cmp    r13,r15
47b4:	76 05                	jbe    47bb <quotearg_buffer_restyled+0x3fb>
47b6:	43 c6 04 3e 5c       	mov    BYTE PTR [r14+r15*1],0x5c
47bb:	49 83 c7 01          	add    r15,0x1
47bf:	48 83 c5 01          	add    rbp,0x1
47c3:	e9 88 fe ff ff       	jmp    4650 <quotearg_buffer_restyled+0x290>
47c8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
47cf:	00
47d0:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
47d5:	0f 85 c8 01 00 00    	jne    49a3 <quotearg_buffer_restyled+0x5e3>
47db:	31 d2                	xor    edx,edx
47dd:	f6 44 24 78 01       	test   BYTE PTR [rsp+0x78],0x1
47e2:	0f 84 13 ff ff ff    	je     46fb <quotearg_buffer_restyled+0x33b>
47e8:	48 83 c5 01          	add    rbp,0x1
47ec:	e9 b7 fc ff ff       	jmp    44a8 <quotearg_buffer_restyled+0xe8>
47f1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
47f8:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
47fd:	0f 94 c2             	sete   dl
4800:	31 c0                	xor    eax,eax
4802:	e9 e1 fd ff ff       	jmp    45e8 <quotearg_buffer_restyled+0x228>
4807:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
480e:	00 00
4810:	ba 07 00 00 00       	mov    edx,0x7
4815:	bb 61 00 00 00       	mov    ebx,0x61
481a:	e9 d5 fe ff ff       	jmp    46f4 <quotearg_buffer_restyled+0x334>
481f:	90                   	nop
4820:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4825:	0f 94 c2             	sete   dl
4828:	48 85 ed             	test   rbp,rbp
482b:	0f 85 ab fd ff ff    	jne    45dc <quotearg_buffer_restyled+0x21c>
4831:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [rsp+0xf]
4836:	20 d0                	and    al,dl
4838:	0f 84 aa fd ff ff    	je     45e8 <quotearg_buffer_restyled+0x228>
483e:	4c 89 dd             	mov    rbp,r11
4841:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
4848:	00
4849:	e9 fb 06 00 00       	jmp    4f49 <quotearg_buffer_restyled+0xb89>
484e:	66 90                	xchg   ax,ax
4850:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4855:	0f 94 c2             	sete   dl
4858:	45 31 e4             	xor    r12d,r12d
485b:	eb d4                	jmp    4831 <quotearg_buffer_restyled+0x471>
485d:	0f 1f 00             	nop    DWORD PTR [rax]
4860:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4865:	bb 20 00 00 00       	mov    ebx,0x20
486a:	0f 94 c2             	sete   dl
486d:	eb c2                	jmp    4831 <quotearg_buffer_restyled+0x471>
486f:	90                   	nop
4870:	ba 0d 00 00 00       	mov    edx,0xd
4875:	bb 72 00 00 00       	mov    ebx,0x72
487a:	e9 63 fe ff ff       	jmp    46e2 <quotearg_buffer_restyled+0x322>
487f:	90                   	nop
4880:	ba 0c 00 00 00       	mov    edx,0xc
4885:	bb 66 00 00 00       	mov    ebx,0x66
488a:	e9 65 fe ff ff       	jmp    46f4 <quotearg_buffer_restyled+0x334>
488f:	90                   	nop
4890:	ba 0b 00 00 00       	mov    edx,0xb
4895:	bb 76 00 00 00       	mov    ebx,0x76
489a:	e9 55 fe ff ff       	jmp    46f4 <quotearg_buffer_restyled+0x334>
489f:	90                   	nop
48a0:	ba 0a 00 00 00       	mov    edx,0xa
48a5:	bb 6e 00 00 00       	mov    ebx,0x6e
48aa:	e9 33 fe ff ff       	jmp    46e2 <quotearg_buffer_restyled+0x322>
48af:	90                   	nop
48b0:	45 31 d2             	xor    r10d,r10d
48b3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
48b8:	48 83 7c 24 58 01    	cmp    QWORD PTR [rsp+0x58],0x1
48be:	0f 85 a4 03 00 00    	jne    4c68 <quotearg_buffer_restyled+0x8a8>
48c4:	4c 89 5c 24 38       	mov    QWORD PTR [rsp+0x38],r11
48c9:	44 88 44 24 30       	mov    BYTE PTR [rsp+0x30],r8b
48ce:	44 88 54 24 28       	mov    BYTE PTR [rsp+0x28],r10b
48d3:	e8 08 d0 ff ff       	call   18e0 <__ctype_b_loc@plt>
48d8:	48 8b 08             	mov    rcx,QWORD PTR [rax]
48db:	0f b6 d3             	movzx  edx,bl
48de:	44 0f b6 54 24 28    	movzx  r10d,BYTE PTR [rsp+0x28]
48e4:	44 0f b6 44 24 30    	movzx  r8d,BYTE PTR [rsp+0x30]
48ea:	4c 8b 5c 24 38       	mov    r11,QWORD PTR [rsp+0x38]
48ef:	bf 01 00 00 00       	mov    edi,0x1
48f4:	0f b7 04 51          	movzx  eax,WORD PTR [rcx+rdx*2]
48f8:	66 25 00 40          	and    ax,0x4000
48fc:	41 0f 95 c4          	setne  r12b
4900:	0f 94 c0             	sete   al
4903:	22 44 24 0d          	and    al,BYTE PTR [rsp+0xd]
4907:	84 c0                	test   al,al
4909:	0f 85 92 09 00 00    	jne    52a1 <quotearg_buffer_restyled+0xee1>
490f:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4914:	0f 94 c2             	sete   dl
4917:	e9 cc fc ff ff       	jmp    45e8 <quotearg_buffer_restyled+0x228>
491c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
4920:	41 0f b6 19          	movzx  ebx,BYTE PTR [r9]
4924:	80 fb 7e             	cmp    bl,0x7e
4927:	77 87                	ja     48b0 <quotearg_buffer_restyled+0x4f0>
4929:	48 8d 0d 18 3d 00 00 	lea    rcx,[rip+0x3d18]        # 8648 <__PRETTY_FUNCTION__.7483+0x12a6>
4930:	0f b6 d3             	movzx  edx,bl
4933:	48 63 04 91          	movsxd rax,DWORD PTR [rcx+rdx*4]
4937:	48 01 c8             	add    rax,rcx
493a:	ff e0                	jmp    rax
493c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
4940:	45 31 d2             	xor    r10d,r10d
4943:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
4948:	0f 85 f0 fd ff ff    	jne    473e <quotearg_buffer_restyled+0x37e>
494e:	66 90                	xchg   ax,ax
4950:	ba 5c 00 00 00       	mov    edx,0x5c
4955:	bb 5c 00 00 00       	mov    ebx,0x5c
495a:	e9 95 fd ff ff       	jmp    46f4 <quotearg_buffer_restyled+0x334>
495f:	90                   	nop
4960:	ba 0c 00 00 00       	mov    edx,0xc
4965:	45 31 d2             	xor    r10d,r10d
4968:	bb 66 00 00 00       	mov    ebx,0x66
496d:	e9 82 fd ff ff       	jmp    46f4 <quotearg_buffer_restyled+0x334>
4972:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4978:	ba 0a 00 00 00       	mov    edx,0xa
497d:	45 31 d2             	xor    r10d,r10d
4980:	bb 6e 00 00 00       	mov    ebx,0x6e
4985:	e9 58 fd ff ff       	jmp    46e2 <quotearg_buffer_restyled+0x322>
498a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4990:	bb 61 00 00 00       	mov    ebx,0x61
4995:	e9 c6 fd ff ff       	jmp    4760 <quotearg_buffer_restyled+0x3a0>
499a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
49a0:	45 31 d2             	xor    r10d,r10d
49a3:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
49a8:	0f 94 c2             	sete   dl
49ab:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
49b0:	0f 85 94 0b 00 00    	jne    554a <quotearg_buffer_restyled+0x118a>
49b6:	44 89 c0             	mov    eax,r8d
49b9:	4c 89 f9             	mov    rcx,r15
49bc:	83 f0 01             	xor    eax,0x1
49bf:	20 d0                	and    al,dl
49c1:	74 2d                	je     49f0 <quotearg_buffer_restyled+0x630>
49c3:	4d 39 fd             	cmp    r13,r15
49c6:	76 05                	jbe    49cd <quotearg_buffer_restyled+0x60d>
49c8:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
49cd:	49 8d 4f 01          	lea    rcx,[r15+0x1]
49d1:	49 39 cd             	cmp    r13,rcx
49d4:	76 06                	jbe    49dc <quotearg_buffer_restyled+0x61c>
49d6:	43 c6 44 3e 01 24    	mov    BYTE PTR [r14+r15*1+0x1],0x24
49dc:	49 8d 4f 02          	lea    rcx,[r15+0x2]
49e0:	49 39 cd             	cmp    r13,rcx
49e3:	0f 87 30 06 00 00    	ja     5019 <quotearg_buffer_restyled+0xc59>
49e9:	49 8d 4f 03          	lea    rcx,[r15+0x3]
49ed:	41 89 c0             	mov    r8d,eax
49f0:	49 39 cd             	cmp    r13,rcx
49f3:	76 05                	jbe    49fa <quotearg_buffer_restyled+0x63a>
49f5:	41 c6 04 0e 5c       	mov    BYTE PTR [r14+rcx*1],0x5c
49fa:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
49ff:	4c 8d 79 01          	lea    r15,[rcx+0x1]
4a03:	0f 84 00 06 00 00    	je     5009 <quotearg_buffer_restyled+0xc49>
4a09:	48 8d 45 01          	lea    rax,[rbp+0x1]
4a0d:	4c 39 d8             	cmp    rax,r11
4a10:	73 19                	jae    4a2b <quotearg_buffer_restyled+0x66b>
4a12:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
4a17:	0f b6 44 28 01       	movzx  eax,BYTE PTR [rax+rbp*1+0x1]
4a1c:	88 44 24 28          	mov    BYTE PTR [rsp+0x28],al
4a20:	83 e8 30             	sub    eax,0x30
4a23:	3c 09                	cmp    al,0x9
4a25:	0f 86 2e 08 00 00    	jbe    5259 <quotearg_buffer_restyled+0xe99>
4a2b:	44 89 e0             	mov    eax,r12d
4a2e:	bb 30 00 00 00       	mov    ebx,0x30
4a33:	45 31 e4             	xor    r12d,r12d
4a36:	e9 ad fb ff ff       	jmp    45e8 <quotearg_buffer_restyled+0x228>
4a3b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
4a40:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4a45:	45 89 d4             	mov    r12d,r10d
4a48:	0f 94 c2             	sete   dl
4a4b:	45 31 d2             	xor    r10d,r10d
4a4e:	31 c0                	xor    eax,eax
4a50:	e9 93 fb ff ff       	jmp    45e8 <quotearg_buffer_restyled+0x228>
4a55:	0f 1f 00             	nop    DWORD PTR [rax]
4a58:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4a5d:	0f 94 c2             	sete   dl
4a60:	45 31 d2             	xor    r10d,r10d
4a63:	e9 c0 fd ff ff       	jmp    4828 <quotearg_buffer_restyled+0x468>
4a68:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
4a6f:	00
4a70:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4a75:	0f 94 c2             	sete   dl
4a78:	45 31 d2             	xor    r10d,r10d
4a7b:	45 31 e4             	xor    r12d,r12d
4a7e:	e9 ae fd ff ff       	jmp    4831 <quotearg_buffer_restyled+0x471>
4a83:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
4a88:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4a8d:	45 89 d4             	mov    r12d,r10d
4a90:	bb 20 00 00 00       	mov    ebx,0x20
4a95:	0f 94 c2             	sete   dl
4a98:	45 31 d2             	xor    r10d,r10d
4a9b:	e9 91 fd ff ff       	jmp    4831 <quotearg_buffer_restyled+0x471>
4aa0:	ba 0d 00 00 00       	mov    edx,0xd
4aa5:	45 31 d2             	xor    r10d,r10d
4aa8:	bb 72 00 00 00       	mov    ebx,0x72
4aad:	e9 30 fc ff ff       	jmp    46e2 <quotearg_buffer_restyled+0x322>
4ab2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4ab8:	bb 76 00 00 00       	mov    ebx,0x76
4abd:	e9 9e fc ff ff       	jmp    4760 <quotearg_buffer_restyled+0x3a0>
4ac2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4ac8:	ba 09 00 00 00       	mov    edx,0x9
4acd:	45 31 d2             	xor    r10d,r10d
4ad0:	bb 74 00 00 00       	mov    ebx,0x74
4ad5:	e9 08 fc ff ff       	jmp    46e2 <quotearg_buffer_restyled+0x322>
4ada:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4ae0:	bb 62 00 00 00       	mov    ebx,0x62
4ae5:	e9 76 fc ff ff       	jmp    4760 <quotearg_buffer_restyled+0x3a0>
4aea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4af0:	45 31 d2             	xor    r10d,r10d
4af3:	e9 98 fa ff ff       	jmp    4590 <quotearg_buffer_restyled+0x1d0>
4af8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
4aff:	00
4b00:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
4b05:	0f 85 65 09 00 00    	jne    5470 <quotearg_buffer_restyled+0x10b0>
4b0b:	48 83 c5 01          	add    rbp,0x1
4b0f:	44 89 c0             	mov    eax,r8d
4b12:	45 31 e4             	xor    r12d,r12d
4b15:	bb 5c 00 00 00       	mov    ebx,0x5c
4b1a:	e9 0d fb ff ff       	jmp    462c <quotearg_buffer_restyled+0x26c>
4b1f:	90                   	nop
4b20:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4b25:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
4b2a:	45 89 c4             	mov    r12d,r8d
4b2d:	4c 89 dd             	mov    rbp,r11
4b30:	0f 94 c2             	sete   dl
4b33:	89 d8                	mov    eax,ebx
4b35:	4d 85 ff             	test   r15,r15
4b38:	0f 94 c1             	sete   cl
4b3b:	21 d0                	and    eax,edx
4b3d:	20 c8                	and    al,cl
4b3f:	0f 85 61 0a 00 00    	jne    55a6 <quotearg_buffer_restyled+0x11e6>
4b45:	89 d8                	mov    eax,ebx
4b47:	83 f0 01             	xor    eax,0x1
4b4a:	20 c2                	and    dl,al
4b4c:	0f 84 6a 09 00 00    	je     54bc <quotearg_buffer_restyled+0x10fc>
4b52:	80 7c 24 7c 00       	cmp    BYTE PTR [rsp+0x7c],0x0
4b57:	0f 84 5d 09 00 00    	je     54ba <quotearg_buffer_restyled+0x10fa>
4b5d:	80 7c 24 0e 00       	cmp    BYTE PTR [rsp+0xe],0x0
4b62:	0f 85 f5 09 00 00    	jne    555d <quotearg_buffer_restyled+0x119d>
4b68:	4d 85 ed             	test   r13,r13
4b6b:	0f 94 c0             	sete   al
4b6e:	48 83 7c 24 50 00    	cmp    QWORD PTR [rsp+0x50],0x0
4b74:	0f 95 c2             	setne  dl
4b77:	20 d0                	and    al,dl
4b79:	0f 84 1d 0a 00 00    	je     559c <quotearg_buffer_restyled+0x11dc>
4b7f:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
4b84:	48 8d 1d 2a 38 00 00 	lea    rbx,[rip+0x382a]        # 83b5 <__PRETTY_FUNCTION__.7483+0x1013>
4b8b:	41 c6 06 27          	mov    BYTE PTR [r14],0x27
4b8f:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
4b96:	00
4b97:	41 bf 01 00 00 00    	mov    r15d,0x1
4b9d:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
4ba4:	00 00
4ba6:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
4bab:	48 89 5c 24 48       	mov    QWORD PTR [rsp+0x48],rbx
4bb0:	88 44 24 7c          	mov    BYTE PTR [rsp+0x7c],al
4bb4:	e9 da f8 ff ff       	jmp    4493 <quotearg_buffer_restyled+0xd3>
4bb9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
4bc0:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
4bc5:	0f 85 a5 08 00 00    	jne    5470 <quotearg_buffer_restyled+0x10b0>
4bcb:	4d 85 ed             	test   r13,r13
4bce:	0f 84 fc 03 00 00    	je     4fd0 <quotearg_buffer_restyled+0xc10>
4bd4:	31 d2                	xor    edx,edx
4bd6:	48 83 7c 24 50 00    	cmp    QWORD PTR [rsp+0x50],0x0
4bdc:	0f 85 ee 03 00 00    	jne    4fd0 <quotearg_buffer_restyled+0xc10>
4be2:	4c 89 6c 24 50       	mov    QWORD PTR [rsp+0x50],r13
4be7:	49 83 c7 03          	add    r15,0x3
4beb:	31 c0                	xor    eax,eax
4bed:	44 88 64 24 7c       	mov    BYTE PTR [rsp+0x7c],r12b
4bf2:	45 31 c0             	xor    r8d,r8d
4bf5:	49 89 d5             	mov    r13,rdx
4bf8:	bb 27 00 00 00       	mov    ebx,0x27
4bfd:	e9 17 fa ff ff       	jmp    4619 <quotearg_buffer_restyled+0x259>
4c02:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4c08:	f6 44 24 78 04       	test   BYTE PTR [rsp+0x78],0x4
4c0d:	74 21                	je     4c30 <quotearg_buffer_restyled+0x870>
4c0f:	48 8d 4d 02          	lea    rcx,[rbp+0x2]
4c13:	4c 39 d9             	cmp    rcx,r11
4c16:	73 18                	jae    4c30 <quotearg_buffer_restyled+0x870>
4c18:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
4c1d:	80 7c 28 01 3f       	cmp    BYTE PTR [rax+rbp*1+0x1],0x3f
4c22:	0f 84 8a 07 00 00    	je     53b2 <quotearg_buffer_restyled+0xff2>
4c28:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
4c2f:	00
4c30:	31 d2                	xor    edx,edx
4c32:	45 31 e4             	xor    r12d,r12d
4c35:	31 c0                	xor    eax,eax
4c37:	bb 3f 00 00 00       	mov    ebx,0x3f
4c3c:	e9 a7 f9 ff ff       	jmp    45e8 <quotearg_buffer_restyled+0x228>
4c41:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
4c48:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
4c4d:	0f 85 1d 08 00 00    	jne    5470 <quotearg_buffer_restyled+0x10b0>
4c53:	45 31 e4             	xor    r12d,r12d
4c56:	31 c0                	xor    eax,eax
4c58:	bb 3f 00 00 00       	mov    ebx,0x3f
4c5d:	e9 b7 f9 ff ff       	jmp    4619 <quotearg_buffer_restyled+0x259>
4c62:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4c68:	48 8d 84 24 a0 00 00 	lea    rax,[rsp+0xa0]
4c6f:	00
4c70:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
4c74:	48 c7 84 24 a0 00 00 	mov    QWORD PTR [rsp+0xa0],0x0
4c7b:	00 00 00 00 00
4c80:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
4c85:	75 2d                	jne    4cb4 <quotearg_buffer_restyled+0x8f4>
4c87:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
4c8c:	44 88 44 24 40       	mov    BYTE PTR [rsp+0x40],r8b
4c91:	44 88 54 24 38       	mov    BYTE PTR [rsp+0x38],r10b
4c96:	4c 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],r9
4c9b:	e8 10 ca ff ff       	call   16b0 <strlen@plt>
4ca0:	44 0f b6 44 24 40    	movzx  r8d,BYTE PTR [rsp+0x40]
4ca6:	44 0f b6 54 24 38    	movzx  r10d,BYTE PTR [rsp+0x38]
4cac:	49 89 c3             	mov    r11,rax
4caf:	4c 8b 4c 24 30       	mov    r9,QWORD PTR [rsp+0x30]
4cb4:	48 8d 84 24 9c 00 00 	lea    rax,[rsp+0x9c]
4cbb:	00
4cbc:	31 c9                	xor    ecx,ecx
4cbe:	88 5c 24 7e          	mov    BYTE PTR [rsp+0x7e],bl
4cc2:	44 88 44 24 7d       	mov    BYTE PTR [rsp+0x7d],r8b
4cc7:	48 89 cb             	mov    rbx,rcx
4cca:	4c 89 8c 24 88 00 00 	mov    QWORD PTR [rsp+0x88],r9
4cd1:	00
4cd2:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
4cd7:	44 88 54 24 7f       	mov    BYTE PTR [rsp+0x7f],r10b
4cdc:	4c 89 bc 24 80 00 00 	mov    QWORD PTR [rsp+0x80],r15
4ce3:	00
4ce4:	4c 89 74 24 40       	mov    QWORD PTR [rsp+0x40],r14
4ce9:	4c 89 6c 24 70       	mov    QWORD PTR [rsp+0x70],r13
4cee:	4c 89 5c 24 30       	mov    QWORD PTR [rsp+0x30],r11
4cf3:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
4cf8:	4c 8d 74 1d 00       	lea    r14,[rbp+rbx*1+0x0]
4cfd:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
4d02:	48 8b 4c 24 28       	mov    rcx,QWORD PTR [rsp+0x28]
4d07:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
4d0c:	4e 8d 2c 30          	lea    r13,[rax+r14*1]
4d10:	4c 29 f2             	sub    rdx,r14
4d13:	4c 89 ee             	mov    rsi,r13
4d16:	e8 75 1f 00 00       	call   6c90 <rpl_mbrtowc>
4d1b:	48 85 c0             	test   rax,rax
4d1e:	49 89 c7             	mov    r15,rax
4d21:	74 4e                	je     4d71 <quotearg_buffer_restyled+0x9b1>
4d23:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
4d27:	0f 84 18 06 00 00    	je     5345 <quotearg_buffer_restyled+0xf85>
4d2d:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
4d31:	0f 84 9a 05 00 00    	je     52d1 <quotearg_buffer_restyled+0xf11>
4d37:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4d3c:	0f 94 c0             	sete   al
4d3f:	22 44 24 0f          	and    al,BYTE PTR [rsp+0xf]
4d43:	0f 85 97 01 00 00    	jne    4ee0 <quotearg_buffer_restyled+0xb20>
4d49:	8b bc 24 9c 00 00 00 	mov    edi,DWORD PTR [rsp+0x9c]
4d50:	e8 6b cb ff ff       	call   18c0 <iswprint@plt>
4d55:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
4d5a:	85 c0                	test   eax,eax
4d5c:	b8 00 00 00 00       	mov    eax,0x0
4d61:	44 0f 44 e0          	cmove  r12d,eax
4d65:	4c 01 fb             	add    rbx,r15
4d68:	e8 43 cb ff ff       	call   18b0 <mbsinit@plt>
4d6d:	85 c0                	test   eax,eax
4d6f:	74 82                	je     4cf3 <quotearg_buffer_restyled+0x933>
4d71:	44 89 e2             	mov    edx,r12d
4d74:	48 89 df             	mov    rdi,rbx
4d77:	44 0f b6 44 24 7d    	movzx  r8d,BYTE PTR [rsp+0x7d]
4d7d:	83 f2 01             	xor    edx,0x1
4d80:	0f b6 5c 24 7e       	movzx  ebx,BYTE PTR [rsp+0x7e]
4d85:	44 0f b6 54 24 7f    	movzx  r10d,BYTE PTR [rsp+0x7f]
4d8b:	22 54 24 0d          	and    dl,BYTE PTR [rsp+0xd]
4d8f:	4c 8b bc 24 80 00 00 	mov    r15,QWORD PTR [rsp+0x80]
4d96:	00
4d97:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
4d9c:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
4da1:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
4da6:	48 83 ff 01          	cmp    rdi,0x1
4daa:	0f 86 fb 05 00 00    	jbe    53ab <quotearg_buffer_restyled+0xfeb>
4db0:	48 89 f9             	mov    rcx,rdi
4db3:	31 f6                	xor    esi,esi
4db5:	44 0f b6 4c 24 0f    	movzx  r9d,BYTE PTR [rsp+0xf]
4dbb:	48 01 e9             	add    rcx,rbp
4dbe:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
4dc3:	e9 b6 00 00 00       	jmp    4e7e <quotearg_buffer_restyled+0xabe>
4dc8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
4dcf:	00
4dd0:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4dd5:	0f 94 c0             	sete   al
4dd8:	45 84 c9             	test   r9b,r9b
4ddb:	0f 85 af 04 00 00    	jne    5290 <quotearg_buffer_restyled+0xed0>
4de1:	44 89 c6             	mov    esi,r8d
4de4:	83 f6 01             	xor    esi,0x1
4de7:	40 20 f0             	and    al,sil
4dea:	74 2f                	je     4e1b <quotearg_buffer_restyled+0xa5b>
4dec:	4d 39 fd             	cmp    r13,r15
4def:	76 05                	jbe    4df6 <quotearg_buffer_restyled+0xa36>
4df1:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
4df6:	49 8d 77 01          	lea    rsi,[r15+0x1]
4dfa:	49 39 f5             	cmp    r13,rsi
4dfd:	76 06                	jbe    4e05 <quotearg_buffer_restyled+0xa45>
4dff:	43 c6 44 3e 01 24    	mov    BYTE PTR [r14+r15*1+0x1],0x24
4e05:	49 8d 77 02          	lea    rsi,[r15+0x2]
4e09:	49 39 f5             	cmp    r13,rsi
4e0c:	76 06                	jbe    4e14 <quotearg_buffer_restyled+0xa54>
4e0e:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
4e14:	49 83 c7 03          	add    r15,0x3
4e18:	41 89 c0             	mov    r8d,eax
4e1b:	4d 39 fd             	cmp    r13,r15
4e1e:	76 05                	jbe    4e25 <quotearg_buffer_restyled+0xa65>
4e20:	43 c6 04 3e 5c       	mov    BYTE PTR [r14+r15*1],0x5c
4e25:	49 8d 47 01          	lea    rax,[r15+0x1]
4e29:	49 39 c5             	cmp    r13,rax
4e2c:	76 0d                	jbe    4e3b <quotearg_buffer_restyled+0xa7b>
4e2e:	89 d8                	mov    eax,ebx
4e30:	c0 e8 06             	shr    al,0x6
4e33:	83 c0 30             	add    eax,0x30
4e36:	43 88 44 3e 01       	mov    BYTE PTR [r14+r15*1+0x1],al
4e3b:	49 8d 47 02          	lea    rax,[r15+0x2]
4e3f:	49 39 c5             	cmp    r13,rax
4e42:	76 10                	jbe    4e54 <quotearg_buffer_restyled+0xa94>
4e44:	89 d8                	mov    eax,ebx
4e46:	c0 e8 03             	shr    al,0x3
4e49:	83 e0 07             	and    eax,0x7
4e4c:	83 c0 30             	add    eax,0x30
4e4f:	43 88 44 3e 02       	mov    BYTE PTR [r14+r15*1+0x2],al
4e54:	83 e3 07             	and    ebx,0x7
4e57:	48 83 c5 01          	add    rbp,0x1
4e5b:	49 83 c7 03          	add    r15,0x3
4e5f:	83 c3 30             	add    ebx,0x30
4e62:	48 39 cd             	cmp    rbp,rcx
4e65:	0f 83 e5 f7 ff ff    	jae    4650 <quotearg_buffer_restyled+0x290>
4e6b:	89 d6                	mov    esi,edx
4e6d:	4d 39 fd             	cmp    r13,r15
4e70:	76 04                	jbe    4e76 <quotearg_buffer_restyled+0xab6>
4e72:	43 88 1c 3e          	mov    BYTE PTR [r14+r15*1],bl
4e76:	0f b6 1c 2f          	movzx  ebx,BYTE PTR [rdi+rbp*1]
4e7a:	49 83 c7 01          	add    r15,0x1
4e7e:	84 d2                	test   dl,dl
4e80:	0f 85 4a ff ff ff    	jne    4dd0 <quotearg_buffer_restyled+0xa10>
4e86:	89 f0                	mov    eax,esi
4e88:	83 f0 01             	xor    eax,0x1
4e8b:	44 21 c0             	and    eax,r8d
4e8e:	45 84 d2             	test   r10b,r10b
4e91:	74 0e                	je     4ea1 <quotearg_buffer_restyled+0xae1>
4e93:	4d 39 fd             	cmp    r13,r15
4e96:	76 05                	jbe    4e9d <quotearg_buffer_restyled+0xadd>
4e98:	43 c6 04 3e 5c       	mov    BYTE PTR [r14+r15*1],0x5c
4e9d:	49 83 c7 01          	add    r15,0x1
4ea1:	48 83 c5 01          	add    rbp,0x1
4ea5:	48 39 cd             	cmp    rbp,rcx
4ea8:	0f 83 7e f7 ff ff    	jae    462c <quotearg_buffer_restyled+0x26c>
4eae:	84 c0                	test   al,al
4eb0:	0f 84 f8 03 00 00    	je     52ae <quotearg_buffer_restyled+0xeee>
4eb6:	4d 39 fd             	cmp    r13,r15
4eb9:	76 05                	jbe    4ec0 <quotearg_buffer_restyled+0xb00>
4ebb:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
4ec0:	49 8d 47 01          	lea    rax,[r15+0x1]
4ec4:	49 39 c5             	cmp    r13,rax
4ec7:	76 06                	jbe    4ecf <quotearg_buffer_restyled+0xb0f>
4ec9:	43 c6 44 3e 01 27    	mov    BYTE PTR [r14+r15*1+0x1],0x27
4ecf:	49 83 c7 02          	add    r15,0x2
4ed3:	45 31 d2             	xor    r10d,r10d
4ed6:	45 31 c0             	xor    r8d,r8d
4ed9:	eb 92                	jmp    4e6d <quotearg_buffer_restyled+0xaad>
4edb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
4ee0:	49 83 ff 01          	cmp    r15,0x1
4ee4:	0f 84 5f fe ff ff    	je     4d49 <quotearg_buffer_restyled+0x989>
4eea:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
4eef:	4a 8d 0c 3f          	lea    rcx,[rdi+r15*1]
4ef3:	4a 8d 54 37 01       	lea    rdx,[rdi+r14*1+0x1]
4ef8:	4e 8d 04 31          	lea    r8,[rcx+r14*1]
4efc:	eb 0f                	jmp    4f0d <quotearg_buffer_restyled+0xb4d>
4efe:	66 90                	xchg   ax,ax
4f00:	48 83 c2 01          	add    rdx,0x1
4f04:	49 39 d0             	cmp    r8,rdx
4f07:	0f 84 3c fe ff ff    	je     4d49 <quotearg_buffer_restyled+0x989>
4f0d:	0f b6 0a             	movzx  ecx,BYTE PTR [rdx]
4f10:	83 e9 5b             	sub    ecx,0x5b
4f13:	80 f9 21             	cmp    cl,0x21
4f16:	77 e8                	ja     4f00 <quotearg_buffer_restyled+0xb40>
4f18:	be 01 00 00 00       	mov    esi,0x1
4f1d:	48 d3 e6             	shl    rsi,cl
4f20:	48 89 f1             	mov    rcx,rsi
4f23:	48 be 2b 00 00 00 02 	movabs rsi,0x20000002b
4f2a:	00 00 00
4f2d:	48 85 f1             	test   rcx,rsi
4f30:	74 ce                	je     4f00 <quotearg_buffer_restyled+0xb40>
4f32:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
4f37:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
4f3c:	48 8b 6c 24 30       	mov    rbp,QWORD PTR [rsp+0x30]
4f41:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
4f48:	00
4f49:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
4f4e:	74 10                	je     4f60 <quotearg_buffer_restyled+0xba0>
4f50:	84 c0                	test   al,al
4f52:	b8 04 00 00 00       	mov    eax,0x4
4f57:	0f 44 44 24 08       	cmove  eax,DWORD PTR [rsp+0x8]
4f5c:	89 44 24 08          	mov    DWORD PTR [rsp+0x8],eax
4f60:	48 83 ec 08          	sub    rsp,0x8
4f64:	48 89 e9             	mov    rcx,rbp
4f67:	4c 89 ee             	mov    rsi,r13
4f6a:	ff 74 24 68          	push   QWORD PTR [rsp+0x68]
4f6e:	ff 74 24 78          	push   QWORD PTR [rsp+0x78]
4f72:	4c 89 f7             	mov    rdi,r14
4f75:	6a 00                	push   0x0
4f77:	44 8b 8c 24 98 00 00 	mov    r9d,DWORD PTR [rsp+0x98]
4f7e:	00
4f7f:	44 8b 44 24 28       	mov    r8d,DWORD PTR [rsp+0x28]
4f84:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
4f89:	41 83 e1 fd          	and    r9d,0xfffffffd
4f8d:	e8 2e f4 ff ff       	call   43c0 <quotearg_buffer_restyled>
4f92:	48 83 c4 20          	add    rsp,0x20
4f96:	49 89 c7             	mov    r15,rax
4f99:	48 8b 9c 24 a8 00 00 	mov    rbx,QWORD PTR [rsp+0xa8]
4fa0:	00
4fa1:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
4fa8:	00 00
4faa:	4c 89 f8             	mov    rax,r15
4fad:	0f 85 00 06 00 00    	jne    55b3 <quotearg_buffer_restyled+0x11f3>
4fb3:	48 81 c4 b8 00 00 00 	add    rsp,0xb8
4fba:	5b                   	pop    rbx
4fbb:	5d                   	pop    rbp
4fbc:	41 5c                	pop    r12
4fbe:	41 5d                	pop    r13
4fc0:	41 5e                	pop    r14
4fc2:	41 5f                	pop    r15
4fc4:	c3                   	ret
4fc5:	0f 1f 00             	nop    DWORD PTR [rax]
4fc8:	4c 89 dd             	mov    rbp,r11
4fcb:	e9 79 ff ff ff       	jmp    4f49 <quotearg_buffer_restyled+0xb89>
4fd0:	4d 39 fd             	cmp    r13,r15
4fd3:	76 05                	jbe    4fda <quotearg_buffer_restyled+0xc1a>
4fd5:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
4fda:	49 8d 47 01          	lea    rax,[r15+0x1]
4fde:	49 39 c5             	cmp    r13,rax
4fe1:	76 06                	jbe    4fe9 <quotearg_buffer_restyled+0xc29>
4fe3:	43 c6 44 3e 01 5c    	mov    BYTE PTR [r14+r15*1+0x1],0x5c
4fe9:	49 8d 47 02          	lea    rax,[r15+0x2]
4fed:	49 39 c5             	cmp    r13,rax
4ff0:	0f 86 ec 05 00 00    	jbe    55e2 <quotearg_buffer_restyled+0x1222>
4ff6:	4c 89 ea             	mov    rdx,r13
4ff9:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
4fff:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
5004:	e9 d9 fb ff ff       	jmp    4be2 <quotearg_buffer_restyled+0x822>
5009:	44 89 e0             	mov    eax,r12d
500c:	bb 30 00 00 00       	mov    ebx,0x30
5011:	45 31 e4             	xor    r12d,r12d
5014:	e9 00 f6 ff ff       	jmp    4619 <quotearg_buffer_restyled+0x259>
5019:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
501f:	e9 c5 f9 ff ff       	jmp    49e9 <quotearg_buffer_restyled+0x629>
5024:	85 db                	test   ebx,ebx
5026:	0f 85 27 f4 ff ff    	jne    4453 <quotearg_buffer_restyled+0x93>
502c:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
5031:	4d 85 ed             	test   r13,r13
5034:	0f 85 90 05 00 00    	jne    55ca <quotearg_buffer_restyled+0x120a>
503a:	48 8d 05 74 33 00 00 	lea    rax,[rip+0x3374]        # 83b5 <__PRETTY_FUNCTION__.7483+0x1013>
5041:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
5048:	00 00
504a:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
504f:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
5054:	45 31 e4             	xor    r12d,r12d
5057:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
505c:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
5063:	00 00
5065:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
506a:	41 bf 01 00 00 00    	mov    r15d,0x1
5070:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
5077:	00
5078:	e9 16 f4 ff ff       	jmp    4493 <quotearg_buffer_restyled+0xd3>
507d:	0f 1f 00             	nop    DWORD PTR [rax]
5080:	85 db                	test   ebx,ebx
5082:	0f 85 f5 03 00 00    	jne    547d <quotearg_buffer_restyled+0x10bd>
5088:	4d 85 ed             	test   r13,r13
508b:	0f 84 25 02 00 00    	je     52b6 <quotearg_buffer_restyled+0xef6>
5091:	41 c6 06 22          	mov    BYTE PTR [r14],0x22
5095:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
509a:	45 31 e4             	xor    r12d,r12d
509d:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
50a2:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
50a9:	00 00
50ab:	48 8d 05 01 33 00 00 	lea    rax,[rip+0x3301]        # 83b3 <__PRETTY_FUNCTION__.7483+0x1011>
50b2:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
50b7:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
50bc:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
50c3:	00 00
50c5:	41 bf 01 00 00 00    	mov    r15d,0x1
50cb:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
50d0:	e9 be f3 ff ff       	jmp    4493 <quotearg_buffer_restyled+0xd3>
50d5:	48 8d 05 d7 32 00 00 	lea    rax,[rip+0x32d7]        # 83b3 <__PRETTY_FUNCTION__.7483+0x1011>
50dc:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
50e1:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
50e6:	45 31 e4             	xor    r12d,r12d
50e9:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
50f0:	00 00
50f2:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
50f7:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
50fc:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
5103:	00 00
5105:	45 31 ff             	xor    r15d,r15d
5108:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
510d:	c7 44 24 08 05 00 00 	mov    DWORD PTR [rsp+0x8],0x5
5114:	00
5115:	e9 79 f3 ff ff       	jmp    4493 <quotearg_buffer_restyled+0xd3>
511a:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
511f:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
5124:	45 31 e4             	xor    r12d,r12d
5127:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
512e:	00 00
5130:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
5135:	45 31 ff             	xor    r15d,r15d
5138:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
513d:	48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
5144:	00 00
5146:	48 c7 44 24 48 00 00 	mov    QWORD PTR [rsp+0x48],0x0
514d:	00 00
514f:	e9 3f f3 ff ff       	jmp    4493 <quotearg_buffer_restyled+0xd3>
5154:	83 7c 24 08 0a       	cmp    DWORD PTR [rsp+0x8],0xa
5159:	74 56                	je     51b1 <quotearg_buffer_restyled+0xdf1>
515b:	48 8d 35 55 32 00 00 	lea    rsi,[rip+0x3255]        # 83b7 <__PRETTY_FUNCTION__.7483+0x1015>
5162:	31 ff                	xor    edi,edi
5164:	ba 05 00 00 00       	mov    edx,0x5
5169:	e8 22 c5 ff ff       	call   1690 <dcgettext@plt>
516e:	48 89 c1             	mov    rcx,rax
5171:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
5176:	48 8d 05 3a 32 00 00 	lea    rax,[rip+0x323a]        # 83b7 <__PRETTY_FUNCTION__.7483+0x1015>
517d:	48 39 c1             	cmp    rcx,rax
5180:	0f 84 98 03 00 00    	je     551e <quotearg_buffer_restyled+0x115e>
5186:	48 8d 35 28 32 00 00 	lea    rsi,[rip+0x3228]        # 83b5 <__PRETTY_FUNCTION__.7483+0x1013>
518d:	31 ff                	xor    edi,edi
518f:	ba 05 00 00 00       	mov    edx,0x5
5194:	e8 f7 c4 ff ff       	call   1690 <dcgettext@plt>
5199:	48 89 c1             	mov    rcx,rax
519c:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
51a1:	48 8d 05 0d 32 00 00 	lea    rax,[rip+0x320d]        # 83b5 <__PRETTY_FUNCTION__.7483+0x1013>
51a8:	48 39 c1             	cmp    rcx,rax
51ab:	0f 84 83 03 00 00    	je     5534 <quotearg_buffer_restyled+0x1174>
51b1:	45 31 ff             	xor    r15d,r15d
51b4:	85 db                	test   ebx,ebx
51b6:	0f 84 c1 01 00 00    	je     537d <quotearg_buffer_restyled+0xfbd>
51bc:	85 db                	test   ebx,ebx
51be:	48 8b 5c 24 60       	mov    rbx,QWORD PTR [rsp+0x60]
51c3:	0f 95 44 24 0f       	setne  BYTE PTR [rsp+0xf]
51c8:	45 31 e4             	xor    r12d,r12d
51cb:	48 89 df             	mov    rdi,rbx
51ce:	e8 dd c4 ff ff       	call   16b0 <strlen@plt>
51d3:	48 89 5c 24 48       	mov    QWORD PTR [rsp+0x48],rbx
51d8:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
51dd:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
51e2:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
51e7:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
51ee:	00 00
51f0:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
51f5:	e9 99 f2 ff ff       	jmp    4493 <quotearg_buffer_restyled+0xd3>
51fa:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
51ff:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
5204:	45 31 e4             	xor    r12d,r12d
5207:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
520e:	00 00
5210:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
5215:	45 31 ff             	xor    r15d,r15d
5218:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
521d:	48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
5224:	00 00
5226:	48 c7 44 24 48 00 00 	mov    QWORD PTR [rsp+0x48],0x0
522d:	00 00
522f:	e9 5f f2 ff ff       	jmp    4493 <quotearg_buffer_restyled+0xd3>
5234:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
5239:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
523e:	45 31 e4             	xor    r12d,r12d
5241:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
5248:	00 00
524a:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
524f:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
5254:	e9 1a f2 ff ff       	jmp    4473 <quotearg_buffer_restyled+0xb3>
5259:	4d 39 fd             	cmp    r13,r15
525c:	76 05                	jbe    5263 <quotearg_buffer_restyled+0xea3>
525e:	43 c6 04 3e 30       	mov    BYTE PTR [r14+r15*1],0x30
5263:	48 8d 41 02          	lea    rax,[rcx+0x2]
5267:	49 39 c5             	cmp    r13,rax
526a:	76 06                	jbe    5272 <quotearg_buffer_restyled+0xeb2>
526c:	41 c6 44 0e 02 30    	mov    BYTE PTR [r14+rcx*1+0x2],0x30
5272:	44 89 e0             	mov    eax,r12d
5275:	4c 8d 79 03          	lea    r15,[rcx+0x3]
5279:	45 31 e4             	xor    r12d,r12d
527c:	bb 30 00 00 00       	mov    ebx,0x30
5281:	e9 62 f3 ff ff       	jmp    45e8 <quotearg_buffer_restyled+0x228>
5286:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
528d:	00 00 00
5290:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
5295:	4c 89 dd             	mov    rbp,r11
5298:	88 5c 24 0d          	mov    BYTE PTR [rsp+0xd],bl
529c:	e9 a8 fc ff ff       	jmp    4f49 <quotearg_buffer_restyled+0xb89>
52a1:	0f b6 54 24 0d       	movzx  edx,BYTE PTR [rsp+0xd]
52a6:	45 31 e4             	xor    r12d,r12d
52a9:	e9 02 fb ff ff       	jmp    4db0 <quotearg_buffer_restyled+0x9f0>
52ae:	45 31 d2             	xor    r10d,r10d
52b1:	e9 b7 fb ff ff       	jmp    4e6d <quotearg_buffer_restyled+0xaad>
52b6:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
52bd:	00 00
52bf:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
52c4:	45 31 e4             	xor    r12d,r12d
52c7:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
52cc:	e9 da fd ff ff       	jmp    50ab <quotearg_buffer_restyled+0xceb>
52d1:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
52d6:	4c 89 f6             	mov    rsi,r14
52d9:	4c 89 e9             	mov    rcx,r13
52dc:	48 89 d8             	mov    rax,rbx
52df:	48 89 df             	mov    rdi,rbx
52e2:	44 0f b6 44 24 7d    	movzx  r8d,BYTE PTR [rsp+0x7d]
52e8:	0f b6 5c 24 7e       	movzx  ebx,BYTE PTR [rsp+0x7e]
52ed:	4c 8b 8c 24 88 00 00 	mov    r9,QWORD PTR [rsp+0x88]
52f4:	00
52f5:	4c 39 de             	cmp    rsi,r11
52f8:	44 0f b6 54 24 7f    	movzx  r10d,BYTE PTR [rsp+0x7f]
52fe:	4c 8b bc 24 80 00 00 	mov    r15,QWORD PTR [rsp+0x80]
5305:	00
5306:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
530b:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
5310:	73 26                	jae    5338 <quotearg_buffer_restyled+0xf78>
5312:	80 39 00             	cmp    BYTE PTR [rcx],0x0
5315:	75 10                	jne    5327 <quotearg_buffer_restyled+0xf67>
5317:	eb 1f                	jmp    5338 <quotearg_buffer_restyled+0xf78>
5319:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
5320:	41 80 3c 01 00       	cmp    BYTE PTR [r9+rax*1],0x0
5325:	74 0e                	je     5335 <quotearg_buffer_restyled+0xf75>
5327:	48 83 c0 01          	add    rax,0x1
532b:	48 8d 54 05 00       	lea    rdx,[rbp+rax*1+0x0]
5330:	49 39 d3             	cmp    r11,rdx
5333:	77 eb                	ja     5320 <quotearg_buffer_restyled+0xf60>
5335:	48 89 c7             	mov    rdi,rax
5338:	0f b6 54 24 0d       	movzx  edx,BYTE PTR [rsp+0xd]
533d:	45 31 e4             	xor    r12d,r12d
5340:	e9 61 fa ff ff       	jmp    4da6 <quotearg_buffer_restyled+0x9e6>
5345:	48 89 df             	mov    rdi,rbx
5348:	44 0f b6 44 24 7d    	movzx  r8d,BYTE PTR [rsp+0x7d]
534e:	0f b6 5c 24 7e       	movzx  ebx,BYTE PTR [rsp+0x7e]
5353:	44 0f b6 54 24 7f    	movzx  r10d,BYTE PTR [rsp+0x7f]
5359:	4c 8b bc 24 80 00 00 	mov    r15,QWORD PTR [rsp+0x80]
5360:	00
5361:	45 31 e4             	xor    r12d,r12d
5364:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
5369:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
536e:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
5373:	0f b6 54 24 0d       	movzx  edx,BYTE PTR [rsp+0xd]
5378:	e9 29 fa ff ff       	jmp    4da6 <quotearg_buffer_restyled+0x9e6>
537d:	48 8b 54 24 68       	mov    rdx,QWORD PTR [rsp+0x68]
5382:	0f b6 02             	movzx  eax,BYTE PTR [rdx]
5385:	84 c0                	test   al,al
5387:	0f 84 2f fe ff ff    	je     51bc <quotearg_buffer_restyled+0xdfc>
538d:	0f 1f 00             	nop    DWORD PTR [rax]
5390:	4d 39 fd             	cmp    r13,r15
5393:	76 04                	jbe    5399 <quotearg_buffer_restyled+0xfd9>
5395:	43 88 04 3e          	mov    BYTE PTR [r14+r15*1],al
5399:	49 83 c7 01          	add    r15,0x1
539d:	42 0f b6 04 3a       	movzx  eax,BYTE PTR [rdx+r15*1]
53a2:	84 c0                	test   al,al
53a4:	75 ea                	jne    5390 <quotearg_buffer_restyled+0xfd0>
53a6:	e9 11 fe ff ff       	jmp    51bc <quotearg_buffer_restyled+0xdfc>
53ab:	89 d0                	mov    eax,edx
53ad:	e9 55 f5 ff ff       	jmp    4907 <quotearg_buffer_restyled+0x547>
53b2:	0f b6 1c 08          	movzx  ebx,BYTE PTR [rax+rcx*1]
53b6:	80 fb 3e             	cmp    bl,0x3e
53b9:	0f 87 71 f8 ff ff    	ja     4c30 <quotearg_buffer_restyled+0x870>
53bf:	48 b8 00 00 00 00 82 	movabs rax,0x7000a38200000000
53c6:	a3 00 70
53c9:	48 0f a3 d8          	bt     rax,rbx
53cd:	0f 83 5d f8 ff ff    	jae    4c30 <quotearg_buffer_restyled+0x870>
53d3:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
53d8:	0f 85 e4 01 00 00    	jne    55c2 <quotearg_buffer_restyled+0x1202>
53de:	4d 39 fd             	cmp    r13,r15
53e1:	76 05                	jbe    53e8 <quotearg_buffer_restyled+0x1028>
53e3:	43 c6 04 3e 3f       	mov    BYTE PTR [r14+r15*1],0x3f
53e8:	49 8d 47 01          	lea    rax,[r15+0x1]
53ec:	49 39 c5             	cmp    r13,rax
53ef:	76 06                	jbe    53f7 <quotearg_buffer_restyled+0x1037>
53f1:	43 c6 44 3e 01 22    	mov    BYTE PTR [r14+r15*1+0x1],0x22
53f7:	49 8d 47 02          	lea    rax,[r15+0x2]
53fb:	49 39 c5             	cmp    r13,rax
53fe:	76 06                	jbe    5406 <quotearg_buffer_restyled+0x1046>
5400:	43 c6 44 3e 02 22    	mov    BYTE PTR [r14+r15*1+0x2],0x22
5406:	49 8d 47 03          	lea    rax,[r15+0x3]
540a:	49 39 c5             	cmp    r13,rax
540d:	76 06                	jbe    5415 <quotearg_buffer_restyled+0x1055>
540f:	43 c6 44 3e 03 3f    	mov    BYTE PTR [r14+r15*1+0x3],0x3f
5415:	49 83 c7 04          	add    r15,0x4
5419:	31 d2                	xor    edx,edx
541b:	45 31 e4             	xor    r12d,r12d
541e:	31 c0                	xor    eax,eax
5420:	48 89 cd             	mov    rbp,rcx
5423:	e9 c0 f1 ff ff       	jmp    45e8 <quotearg_buffer_restyled+0x228>
5428:	85 db                	test   ebx,ebx
542a:	0f 84 88 01 00 00    	je     55b8 <quotearg_buffer_restyled+0x11f8>
5430:	48 8d 05 7e 2f 00 00 	lea    rax,[rip+0x2f7e]        # 83b5 <__PRETTY_FUNCTION__.7483+0x1013>
5437:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
543c:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
5441:	45 31 e4             	xor    r12d,r12d
5444:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
544b:	00 00
544d:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
5452:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
5457:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
545e:	00 00
5460:	45 31 ff             	xor    r15d,r15d
5463:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
5468:	e9 26 f0 ff ff       	jmp    4493 <quotearg_buffer_restyled+0xd3>
546d:	0f 1f 00             	nop    DWORD PTR [rax]
5470:	4c 89 dd             	mov    rbp,r11
5473:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [rsp+0xf]
5478:	e9 cc fa ff ff       	jmp    4f49 <quotearg_buffer_restyled+0xb89>
547d:	48 8d 05 2f 2f 00 00 	lea    rax,[rip+0x2f2f]        # 83b3 <__PRETTY_FUNCTION__.7483+0x1011>
5484:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
5489:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
548e:	45 31 e4             	xor    r12d,r12d
5491:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
5498:	00 00
549a:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
549f:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
54a4:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
54ab:	00 00
54ad:	45 31 ff             	xor    r15d,r15d
54b0:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
54b5:	e9 d9 ef ff ff       	jmp    4493 <quotearg_buffer_restyled+0xd3>
54ba:	89 d0                	mov    eax,edx
54bc:	48 8b 5c 24 48       	mov    rbx,QWORD PTR [rsp+0x48]
54c1:	48 85 db             	test   rbx,rbx
54c4:	74 2c                	je     54f2 <quotearg_buffer_restyled+0x1132>
54c6:	84 c0                	test   al,al
54c8:	74 28                	je     54f2 <quotearg_buffer_restyled+0x1132>
54ca:	0f b6 0b             	movzx  ecx,BYTE PTR [rbx]
54cd:	48 89 d8             	mov    rax,rbx
54d0:	84 c9                	test   cl,cl
54d2:	74 1e                	je     54f2 <quotearg_buffer_restyled+0x1132>
54d4:	4c 89 fa             	mov    rdx,r15
54d7:	4c 29 f8             	sub    rax,r15
54da:	49 39 d5             	cmp    r13,rdx
54dd:	76 04                	jbe    54e3 <quotearg_buffer_restyled+0x1123>
54df:	41 88 0c 16          	mov    BYTE PTR [r14+rdx*1],cl
54e3:	48 83 c2 01          	add    rdx,0x1
54e7:	0f b6 0c 10          	movzx  ecx,BYTE PTR [rax+rdx*1]
54eb:	84 c9                	test   cl,cl
54ed:	75 eb                	jne    54da <quotearg_buffer_restyled+0x111a>
54ef:	49 89 d7             	mov    r15,rdx
54f2:	4d 39 fd             	cmp    r13,r15
54f5:	0f 86 9e fa ff ff    	jbe    4f99 <quotearg_buffer_restyled+0xbd9>
54fb:	43 c6 04 3e 00       	mov    BYTE PTR [r14+r15*1],0x0
5500:	e9 94 fa ff ff       	jmp    4f99 <quotearg_buffer_restyled+0xbd9>
5505:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
550a:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
550f:	4c 89 dd             	mov    rbp,r11
5512:	0f 94 c0             	sete   al
5515:	88 5c 24 0d          	mov    BYTE PTR [rsp+0xd],bl
5519:	e9 2b fa ff ff       	jmp    4f49 <quotearg_buffer_restyled+0xb89>
551e:	8b 74 24 08          	mov    esi,DWORD PTR [rsp+0x8]
5522:	48 89 cf             	mov    rdi,rcx
5525:	e8 a6 ed ff ff       	call   42d0 <gettext_quote.part.1>
552a:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
552f:	e9 52 fc ff ff       	jmp    5186 <quotearg_buffer_restyled+0xdc6>
5534:	8b 74 24 08          	mov    esi,DWORD PTR [rsp+0x8]
5538:	48 89 cf             	mov    rdi,rcx
553b:	e8 90 ed ff ff       	call   42d0 <gettext_quote.part.1>
5540:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
5545:	e9 67 fc ff ff       	jmp    51b1 <quotearg_buffer_restyled+0xdf1>
554a:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
554f:	4c 89 dd             	mov    rbp,r11
5552:	89 d0                	mov    eax,edx
5554:	88 5c 24 0d          	mov    BYTE PTR [rsp+0xd],bl
5558:	e9 ec f9 ff ff       	jmp    4f49 <quotearg_buffer_restyled+0xb89>
555d:	48 83 ec 08          	sub    rsp,0x8
5561:	41 b8 05 00 00 00    	mov    r8d,0x5
5567:	4c 89 d9             	mov    rcx,r11
556a:	ff 74 24 68          	push   QWORD PTR [rsp+0x68]
556e:	ff 74 24 78          	push   QWORD PTR [rsp+0x78]
5572:	4c 89 f7             	mov    rdi,r14
5575:	ff 74 24 38          	push   QWORD PTR [rsp+0x38]
5579:	44 8b 8c 24 98 00 00 	mov    r9d,DWORD PTR [rsp+0x98]
5580:	00
5581:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
5586:	48 8b 74 24 70       	mov    rsi,QWORD PTR [rsp+0x70]
558b:	e8 30 ee ff ff       	call   43c0 <quotearg_buffer_restyled>
5590:	48 83 c4 20          	add    rsp,0x20
5594:	49 89 c7             	mov    r15,rax
5597:	e9 fd f9 ff ff       	jmp    4f99 <quotearg_buffer_restyled+0xbd9>
559c:	0f b6 44 24 7c       	movzx  eax,BYTE PTR [rsp+0x7c]
55a1:	e9 16 ff ff ff       	jmp    54bc <quotearg_buffer_restyled+0x10fc>
55a6:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
55ad:	00
55ae:	e9 96 f9 ff ff       	jmp    4f49 <quotearg_buffer_restyled+0xb89>
55b3:	e8 08 c1 ff ff       	call   16c0 <__stack_chk_fail@plt>
55b8:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
55bd:	e9 6f fa ff ff       	jmp    5031 <quotearg_buffer_restyled+0xc71>
55c2:	4c 89 dd             	mov    rbp,r11
55c5:	e9 96 f9 ff ff       	jmp    4f60 <quotearg_buffer_restyled+0xba0>
55ca:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
55cf:	31 c0                	xor    eax,eax
55d1:	45 31 e4             	xor    r12d,r12d
55d4:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
55db:	00 00
55dd:	e9 a2 f5 ff ff       	jmp    4b84 <quotearg_buffer_restyled+0x7c4>
55e2:	4c 89 ea             	mov    rdx,r13
55e5:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
55ea:	e9 f3 f5 ff ff       	jmp    4be2 <quotearg_buffer_restyled+0x822>
55ef:	e8 0c c0 ff ff       	call   1600 <abort@plt>
55f4:	66 90                	xchg   ax,ax
55f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
55fd:	00 00 00

0000000000005600 <quotearg_n_options>:
5600:	41 57                	push   r15
5602:	41 56                	push   r14
5604:	4c 63 ff             	movsxd r15,edi
5607:	41 55                	push   r13
5609:	41 54                	push   r12
560b:	49 89 d6             	mov    r14,rdx
560e:	55                   	push   rbp
560f:	53                   	push   rbx
5610:	48 89 cd             	mov    rbp,rcx
5613:	48 83 ec 28          	sub    rsp,0x28
5617:	48 89 74 24 08       	mov    QWORD PTR [rsp+0x8],rsi
561c:	e8 ef bf ff ff       	call   1610 <__errno_location@plt>
5621:	49 89 c5             	mov    r13,rax
5624:	8b 00                	mov    eax,DWORD PTR [rax]
5626:	45 85 ff             	test   r15d,r15d
5629:	48 8b 1d 30 5a 20 00 	mov    rbx,QWORD PTR [rip+0x205a30]        # 20b060 <slotvec>
5630:	89 44 24 18          	mov    DWORD PTR [rsp+0x18],eax
5634:	0f 88 67 01 00 00    	js     57a1 <quotearg_n_options+0x1a1>
563a:	44 39 3d 17 5a 20 00 	cmp    DWORD PTR [rip+0x205a17],r15d        # 20b058 <nslots>
5641:	7f 62                	jg     56a5 <quotearg_n_options+0xa5>
5643:	41 81 ff ff ff ff 7f 	cmp    r15d,0x7fffffff
564a:	0f 84 56 01 00 00    	je     57a6 <quotearg_n_options+0x1a6>
5650:	45 8d 67 01          	lea    r12d,[r15+0x1]
5654:	48 8d 05 15 5a 20 00 	lea    rax,[rip+0x205a15]        # 20b070 <slotvec0>
565b:	49 63 f4             	movsxd rsi,r12d
565e:	48 c1 e6 04          	shl    rsi,0x4
5662:	48 39 c3             	cmp    rbx,rax
5665:	0f 84 15 01 00 00    	je     5780 <quotearg_n_options+0x180>
566b:	48 89 df             	mov    rdi,rbx
566e:	e8 cd 0f 00 00       	call   6640 <xrealloc>
5673:	48 89 c3             	mov    rbx,rax
5676:	48 89 05 e3 59 20 00 	mov    QWORD PTR [rip+0x2059e3],rax        # 20b060 <slotvec>
567d:	48 63 3d d4 59 20 00 	movsxd rdi,DWORD PTR [rip+0x2059d4]        # 20b058 <nslots>
5684:	44 89 e2             	mov    edx,r12d
5687:	31 f6                	xor    esi,esi
5689:	29 fa                	sub    edx,edi
568b:	48 c1 e7 04          	shl    rdi,0x4
568f:	48 63 d2             	movsxd rdx,edx
5692:	48 01 df             	add    rdi,rbx
5695:	48 c1 e2 04          	shl    rdx,0x4
5699:	e8 a2 c0 ff ff       	call   1740 <memset@plt>
569e:	44 89 25 b3 59 20 00 	mov    DWORD PTR [rip+0x2059b3],r12d        # 20b058 <nslots>
56a5:	8b 45 04             	mov    eax,DWORD PTR [rbp+0x4]
56a8:	49 c1 e7 04          	shl    r15,0x4
56ac:	48 83 ec 08          	sub    rsp,0x8
56b0:	4c 01 fb             	add    rbx,r15
56b3:	4c 8d 7d 08          	lea    r15,[rbp+0x8]
56b7:	44 8b 45 00          	mov    r8d,DWORD PTR [rbp+0x0]
56bb:	4c 8b 1b             	mov    r11,QWORD PTR [rbx]
56be:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
56c2:	4c 89 f1             	mov    rcx,r14
56c5:	83 c8 01             	or     eax,0x1
56c8:	89 44 24 24          	mov    DWORD PTR [rsp+0x24],eax
56cc:	ff 75 30             	push   QWORD PTR [rbp+0x30]
56cf:	41 89 c1             	mov    r9d,eax
56d2:	ff 75 28             	push   QWORD PTR [rbp+0x28]
56d5:	41 57                	push   r15
56d7:	4c 89 de             	mov    rsi,r11
56da:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
56df:	4c 89 e7             	mov    rdi,r12
56e2:	4c 89 5c 24 30       	mov    QWORD PTR [rsp+0x30],r11
56e7:	e8 d4 ec ff ff       	call   43c0 <quotearg_buffer_restyled>
56ec:	48 83 c4 20          	add    rsp,0x20
56f0:	4c 8b 5c 24 10       	mov    r11,QWORD PTR [rsp+0x10]
56f5:	49 39 c3             	cmp    r11,rax
56f8:	77 67                	ja     5761 <quotearg_n_options+0x161>
56fa:	48 8d 70 01          	lea    rsi,[rax+0x1]
56fe:	48 8d 05 fb 7c 20 00 	lea    rax,[rip+0x207cfb]        # 20d400 <slot0>
5705:	49 39 c4             	cmp    r12,rax
5708:	48 89 33             	mov    QWORD PTR [rbx],rsi
570b:	74 12                	je     571f <quotearg_n_options+0x11f>
570d:	4c 89 e7             	mov    rdi,r12
5710:	48 89 74 24 10       	mov    QWORD PTR [rsp+0x10],rsi
5715:	e8 d6 be ff ff       	call   15f0 <free@plt>
571a:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
571f:	48 89 f7             	mov    rdi,rsi
5722:	48 89 74 24 10       	mov    QWORD PTR [rsp+0x10],rsi
5727:	e8 b4 0e 00 00       	call   65e0 <xmalloc>
572c:	48 83 ec 08          	sub    rsp,0x8
5730:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
5734:	44 8b 45 00          	mov    r8d,DWORD PTR [rbp+0x0]
5738:	ff 75 30             	push   QWORD PTR [rbp+0x30]
573b:	ff 75 28             	push   QWORD PTR [rbp+0x28]
573e:	4c 89 f1             	mov    rcx,r14
5741:	41 57                	push   r15
5743:	44 8b 4c 24 3c       	mov    r9d,DWORD PTR [rsp+0x3c]
5748:	48 89 c7             	mov    rdi,rax
574b:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
5750:	48 8b 74 24 30       	mov    rsi,QWORD PTR [rsp+0x30]
5755:	49 89 c4             	mov    r12,rax
5758:	e8 63 ec ff ff       	call   43c0 <quotearg_buffer_restyled>
575d:	48 83 c4 20          	add    rsp,0x20
5761:	8b 44 24 18          	mov    eax,DWORD PTR [rsp+0x18]
5765:	41 89 45 00          	mov    DWORD PTR [r13+0x0],eax
5769:	48 83 c4 28          	add    rsp,0x28
576d:	4c 89 e0             	mov    rax,r12
5770:	5b                   	pop    rbx
5771:	5d                   	pop    rbp
5772:	41 5c                	pop    r12
5774:	41 5d                	pop    r13
5776:	41 5e                	pop    r14
5778:	41 5f                	pop    r15
577a:	c3                   	ret
577b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5780:	31 ff                	xor    edi,edi
5782:	e8 b9 0e 00 00       	call   6640 <xrealloc>
5787:	66 0f 6f 05 e1 58 20 	movdqa xmm0,XMMWORD PTR [rip+0x2058e1]        # 20b070 <slotvec0>
578e:	00
578f:	48 89 c3             	mov    rbx,rax
5792:	48 89 05 c7 58 20 00 	mov    QWORD PTR [rip+0x2058c7],rax        # 20b060 <slotvec>
5799:	0f 11 00             	movups XMMWORD PTR [rax],xmm0
579c:	e9 dc fe ff ff       	jmp    567d <quotearg_n_options+0x7d>
57a1:	e8 5a be ff ff       	call   1600 <abort@plt>
57a6:	e8 85 10 00 00       	call   6830 <xalloc_die>
57ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000057b0 <clone_quoting_options>:
57b0:	41 54                	push   r12
57b2:	55                   	push   rbp
57b3:	53                   	push   rbx
57b4:	48 89 fb             	mov    rbx,rdi
57b7:	e8 54 be ff ff       	call   1610 <__errno_location@plt>
57bc:	44 8b 20             	mov    r12d,DWORD PTR [rax]
57bf:	48 89 c5             	mov    rbp,rax
57c2:	48 8d 05 37 7d 20 00 	lea    rax,[rip+0x207d37]        # 20d500 <default_quoting_options>
57c9:	48 85 db             	test   rbx,rbx
57cc:	be 38 00 00 00       	mov    esi,0x38
57d1:	48 0f 44 d8          	cmove  rbx,rax
57d5:	48 89 df             	mov    rdi,rbx
57d8:	e8 03 10 00 00       	call   67e0 <xmemdup>
57dd:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
57e1:	5b                   	pop    rbx
57e2:	5d                   	pop    rbp
57e3:	41 5c                	pop    r12
57e5:	c3                   	ret
57e6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
57ed:	00 00 00

00000000000057f0 <get_quoting_style>:
57f0:	48 8d 05 09 7d 20 00 	lea    rax,[rip+0x207d09]        # 20d500 <default_quoting_options>
57f7:	48 85 ff             	test   rdi,rdi
57fa:	48 0f 44 f8          	cmove  rdi,rax
57fe:	8b 07                	mov    eax,DWORD PTR [rdi]
5800:	c3                   	ret
5801:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5806:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
580d:	00 00 00

0000000000005810 <set_quoting_style>:
5810:	48 8d 05 e9 7c 20 00 	lea    rax,[rip+0x207ce9]        # 20d500 <default_quoting_options>
5817:	48 85 ff             	test   rdi,rdi
581a:	48 0f 44 f8          	cmove  rdi,rax
581e:	89 37                	mov    DWORD PTR [rdi],esi
5820:	c3                   	ret
5821:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5826:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
582d:	00 00 00

0000000000005830 <set_char_quoting>:
5830:	48 8d 05 c9 7c 20 00 	lea    rax,[rip+0x207cc9]        # 20d500 <default_quoting_options>
5837:	48 85 ff             	test   rdi,rdi
583a:	89 f1                	mov    ecx,esi
583c:	48 0f 44 f8          	cmove  rdi,rax
5840:	89 f0                	mov    eax,esi
5842:	83 e1 1f             	and    ecx,0x1f
5845:	c0 e8 05             	shr    al,0x5
5848:	0f b6 c0             	movzx  eax,al
584b:	48 8d 7c 87 08       	lea    rdi,[rdi+rax*4+0x8]
5850:	8b 37                	mov    esi,DWORD PTR [rdi]
5852:	89 f0                	mov    eax,esi
5854:	d3 e8                	shr    eax,cl
5856:	31 c2                	xor    edx,eax
5858:	83 e0 01             	and    eax,0x1
585b:	83 e2 01             	and    edx,0x1
585e:	d3 e2                	shl    edx,cl
5860:	31 f2                	xor    edx,esi
5862:	89 17                	mov    DWORD PTR [rdi],edx
5864:	c3                   	ret
5865:	90                   	nop
5866:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
586d:	00 00 00

0000000000005870 <set_quoting_flags>:
5870:	48 8d 05 89 7c 20 00 	lea    rax,[rip+0x207c89]        # 20d500 <default_quoting_options>
5877:	48 85 ff             	test   rdi,rdi
587a:	48 0f 44 f8          	cmove  rdi,rax
587e:	8b 47 04             	mov    eax,DWORD PTR [rdi+0x4]
5881:	89 77 04             	mov    DWORD PTR [rdi+0x4],esi
5884:	c3                   	ret
5885:	90                   	nop
5886:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
588d:	00 00 00

0000000000005890 <set_custom_quoting>:
5890:	48 8d 05 69 7c 20 00 	lea    rax,[rip+0x207c69]        # 20d500 <default_quoting_options>
5897:	48 85 ff             	test   rdi,rdi
589a:	48 0f 44 f8          	cmove  rdi,rax
589e:	48 85 f6             	test   rsi,rsi
58a1:	c7 07 0a 00 00 00    	mov    DWORD PTR [rdi],0xa
58a7:	74 0e                	je     58b7 <set_custom_quoting+0x27>
58a9:	48 85 d2             	test   rdx,rdx
58ac:	74 09                	je     58b7 <set_custom_quoting+0x27>
58ae:	48 89 77 28          	mov    QWORD PTR [rdi+0x28],rsi
58b2:	48 89 57 30          	mov    QWORD PTR [rdi+0x30],rdx
58b6:	c3                   	ret
58b7:	48 83 ec 08          	sub    rsp,0x8
58bb:	e8 40 bd ff ff       	call   1600 <abort@plt>

00000000000058c0 <quotearg_buffer>:
58c0:	41 57                	push   r15
58c2:	41 56                	push   r14
58c4:	48 8d 05 35 7c 20 00 	lea    rax,[rip+0x207c35]        # 20d500 <default_quoting_options>
58cb:	41 55                	push   r13
58cd:	41 54                	push   r12
58cf:	49 89 fd             	mov    r13,rdi
58d2:	55                   	push   rbp
58d3:	53                   	push   rbx
58d4:	4c 89 c3             	mov    rbx,r8
58d7:	49 89 f6             	mov    r14,rsi
58da:	49 89 d7             	mov    r15,rdx
58dd:	48 83 ec 18          	sub    rsp,0x18
58e1:	4d 85 c0             	test   r8,r8
58e4:	48 0f 44 d8          	cmove  rbx,rax
58e8:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
58ed:	e8 1e bd ff ff       	call   1610 <__errno_location@plt>
58f2:	44 8b 20             	mov    r12d,DWORD PTR [rax]
58f5:	48 89 c5             	mov    rbp,rax
58f8:	48 8d 43 08          	lea    rax,[rbx+0x8]
58fc:	48 83 ec 08          	sub    rsp,0x8
5900:	44 8b 4b 04          	mov    r9d,DWORD PTR [rbx+0x4]
5904:	ff 73 30             	push   QWORD PTR [rbx+0x30]
5907:	44 8b 03             	mov    r8d,DWORD PTR [rbx]
590a:	ff 73 28             	push   QWORD PTR [rbx+0x28]
590d:	4c 89 fa             	mov    rdx,r15
5910:	50                   	push   rax
5911:	48 8b 4c 24 28       	mov    rcx,QWORD PTR [rsp+0x28]
5916:	4c 89 f6             	mov    rsi,r14
5919:	4c 89 ef             	mov    rdi,r13
591c:	e8 9f ea ff ff       	call   43c0 <quotearg_buffer_restyled>
5921:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
5925:	48 83 c4 38          	add    rsp,0x38
5929:	5b                   	pop    rbx
592a:	5d                   	pop    rbp
592b:	41 5c                	pop    r12
592d:	41 5d                	pop    r13
592f:	41 5e                	pop    r14
5931:	41 5f                	pop    r15
5933:	c3                   	ret
5934:	66 90                	xchg   ax,ax
5936:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
593d:	00 00 00

0000000000005940 <quotearg_alloc_mem>:
5940:	41 57                	push   r15
5942:	41 56                	push   r14
5944:	48 8d 05 b5 7b 20 00 	lea    rax,[rip+0x207bb5]        # 20d500 <default_quoting_options>
594b:	41 55                	push   r13
594d:	41 54                	push   r12
594f:	49 89 d4             	mov    r12,rdx
5952:	55                   	push   rbp
5953:	53                   	push   rbx
5954:	48 89 cb             	mov    rbx,rcx
5957:	49 89 fe             	mov    r14,rdi
595a:	49 89 f7             	mov    r15,rsi
595d:	48 83 ec 38          	sub    rsp,0x38
5961:	48 85 c9             	test   rcx,rcx
5964:	48 0f 44 d8          	cmove  rbx,rax
5968:	31 ed                	xor    ebp,ebp
596a:	e8 a1 bc ff ff       	call   1610 <__errno_location@plt>
596f:	4d 85 e4             	test   r12,r12
5972:	49 89 c5             	mov    r13,rax
5975:	8b 00                	mov    eax,DWORD PTR [rax]
5977:	40 0f 94 c5          	sete   bpl
597b:	0b 6b 04             	or     ebp,DWORD PTR [rbx+0x4]
597e:	4c 8d 53 08          	lea    r10,[rbx+0x8]
5982:	48 83 ec 08          	sub    rsp,0x8
5986:	44 8b 03             	mov    r8d,DWORD PTR [rbx]
5989:	4c 89 f9             	mov    rcx,r15
598c:	89 44 24 14          	mov    DWORD PTR [rsp+0x14],eax
5990:	ff 73 30             	push   QWORD PTR [rbx+0x30]
5993:	4c 89 f2             	mov    rdx,r14
5996:	ff 73 28             	push   QWORD PTR [rbx+0x28]
5999:	41 52                	push   r10
599b:	31 f6                	xor    esi,esi
599d:	41 89 e9             	mov    r9d,ebp
59a0:	31 ff                	xor    edi,edi
59a2:	4c 89 54 24 40       	mov    QWORD PTR [rsp+0x40],r10
59a7:	e8 14 ea ff ff       	call   43c0 <quotearg_buffer_restyled>
59ac:	48 8d 70 01          	lea    rsi,[rax+0x1]
59b0:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
59b5:	48 83 c4 20          	add    rsp,0x20
59b9:	48 89 f7             	mov    rdi,rsi
59bc:	48 89 74 24 18       	mov    QWORD PTR [rsp+0x18],rsi
59c1:	e8 1a 0c 00 00       	call   65e0 <xmalloc>
59c6:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
59cb:	48 83 ec 08          	sub    rsp,0x8
59cf:	ff 73 30             	push   QWORD PTR [rbx+0x30]
59d2:	ff 73 28             	push   QWORD PTR [rbx+0x28]
59d5:	4c 8b 54 24 38       	mov    r10,QWORD PTR [rsp+0x38]
59da:	41 89 e9             	mov    r9d,ebp
59dd:	44 8b 03             	mov    r8d,DWORD PTR [rbx]
59e0:	4c 89 f9             	mov    rcx,r15
59e3:	4c 89 f2             	mov    rdx,r14
59e6:	48 89 c7             	mov    rdi,rax
59e9:	41 52                	push   r10
59eb:	48 8b 74 24 38       	mov    rsi,QWORD PTR [rsp+0x38]
59f0:	e8 cb e9 ff ff       	call   43c0 <quotearg_buffer_restyled>
59f5:	8b 44 24 2c          	mov    eax,DWORD PTR [rsp+0x2c]
59f9:	48 83 c4 20          	add    rsp,0x20
59fd:	4d 85 e4             	test   r12,r12
5a00:	41 89 45 00          	mov    DWORD PTR [r13+0x0],eax
5a04:	74 09                	je     5a0f <quotearg_alloc_mem+0xcf>
5a06:	4c 8b 5c 24 28       	mov    r11,QWORD PTR [rsp+0x28]
5a0b:	4d 89 1c 24          	mov    QWORD PTR [r12],r11
5a0f:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
5a14:	48 83 c4 38          	add    rsp,0x38
5a18:	5b                   	pop    rbx
5a19:	5d                   	pop    rbp
5a1a:	41 5c                	pop    r12
5a1c:	41 5d                	pop    r13
5a1e:	41 5e                	pop    r14
5a20:	41 5f                	pop    r15
5a22:	c3                   	ret
5a23:	0f 1f 00             	nop    DWORD PTR [rax]
5a26:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5a2d:	00 00 00

0000000000005a30 <quotearg_alloc>:
5a30:	48 89 d1             	mov    rcx,rdx
5a33:	31 d2                	xor    edx,edx
5a35:	e9 06 ff ff ff       	jmp    5940 <quotearg_alloc_mem>
5a3a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005a40 <quotearg_free>:
5a40:	8b 05 12 56 20 00    	mov    eax,DWORD PTR [rip+0x205612]        # 20b058 <nslots>
5a46:	41 54                	push   r12
5a48:	4c 8b 25 11 56 20 00 	mov    r12,QWORD PTR [rip+0x205611]        # 20b060 <slotvec>
5a4f:	55                   	push   rbp
5a50:	53                   	push   rbx
5a51:	83 f8 01             	cmp    eax,0x1
5a54:	7e 2b                	jle    5a81 <quotearg_free+0x41>
5a56:	83 e8 02             	sub    eax,0x2
5a59:	49 8d 5c 24 18       	lea    rbx,[r12+0x18]
5a5e:	48 c1 e0 04          	shl    rax,0x4
5a62:	49 8d 6c 04 28       	lea    rbp,[r12+rax*1+0x28]
5a67:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
5a6e:	00 00
5a70:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
5a73:	48 83 c3 10          	add    rbx,0x10
5a77:	e8 74 bb ff ff       	call   15f0 <free@plt>
5a7c:	48 39 eb             	cmp    rbx,rbp
5a7f:	75 ef                	jne    5a70 <quotearg_free+0x30>
5a81:	49 8b 7c 24 08       	mov    rdi,QWORD PTR [r12+0x8]
5a86:	48 8d 1d 73 79 20 00 	lea    rbx,[rip+0x207973]        # 20d400 <slot0>
5a8d:	48 39 df             	cmp    rdi,rbx
5a90:	74 17                	je     5aa9 <quotearg_free+0x69>
5a92:	e8 59 bb ff ff       	call   15f0 <free@plt>
5a97:	48 c7 05 ce 55 20 00 	mov    QWORD PTR [rip+0x2055ce],0x100        # 20b070 <slotvec0>
5a9e:	00 01 00 00
5aa2:	48 89 1d cf 55 20 00 	mov    QWORD PTR [rip+0x2055cf],rbx        # 20b078 <slotvec0+0x8>
5aa9:	48 8d 1d c0 55 20 00 	lea    rbx,[rip+0x2055c0]        # 20b070 <slotvec0>
5ab0:	49 39 dc             	cmp    r12,rbx
5ab3:	74 0f                	je     5ac4 <quotearg_free+0x84>
5ab5:	4c 89 e7             	mov    rdi,r12
5ab8:	e8 33 bb ff ff       	call   15f0 <free@plt>
5abd:	48 89 1d 9c 55 20 00 	mov    QWORD PTR [rip+0x20559c],rbx        # 20b060 <slotvec>
5ac4:	5b                   	pop    rbx
5ac5:	c7 05 89 55 20 00 01 	mov    DWORD PTR [rip+0x205589],0x1        # 20b058 <nslots>
5acc:	00 00 00
5acf:	5d                   	pop    rbp
5ad0:	41 5c                	pop    r12
5ad2:	c3                   	ret
5ad3:	0f 1f 00             	nop    DWORD PTR [rax]
5ad6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5add:	00 00 00

0000000000005ae0 <quotearg_n>:
5ae0:	48 8d 0d 19 7a 20 00 	lea    rcx,[rip+0x207a19]        # 20d500 <default_quoting_options>
5ae7:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
5aee:	e9 0d fb ff ff       	jmp    5600 <quotearg_n_options>
5af3:	0f 1f 00             	nop    DWORD PTR [rax]
5af6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5afd:	00 00 00

0000000000005b00 <quotearg_n_mem>:
5b00:	48 8d 0d f9 79 20 00 	lea    rcx,[rip+0x2079f9]        # 20d500 <default_quoting_options>
5b07:	e9 f4 fa ff ff       	jmp    5600 <quotearg_n_options>
5b0c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000005b10 <quotearg>:
5b10:	48 8d 0d e9 79 20 00 	lea    rcx,[rip+0x2079e9]        # 20d500 <default_quoting_options>
5b17:	48 89 fe             	mov    rsi,rdi
5b1a:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
5b21:	31 ff                	xor    edi,edi
5b23:	e9 d8 fa ff ff       	jmp    5600 <quotearg_n_options>
5b28:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
5b2f:	00

0000000000005b30 <quotearg_mem>:
5b30:	48 8d 0d c9 79 20 00 	lea    rcx,[rip+0x2079c9]        # 20d500 <default_quoting_options>
5b37:	48 89 f2             	mov    rdx,rsi
5b3a:	48 89 fe             	mov    rsi,rdi
5b3d:	31 ff                	xor    edi,edi
5b3f:	e9 bc fa ff ff       	jmp    5600 <quotearg_n_options>
5b44:	66 90                	xchg   ax,ax
5b46:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5b4d:	00 00 00

0000000000005b50 <quotearg_n_style>:
5b50:	48 83 ec 48          	sub    rsp,0x48
5b54:	48 89 d0             	mov    rax,rdx
5b57:	64 48 8b 14 25 28 00 	mov    rdx,QWORD PTR fs:0x28
5b5e:	00 00
5b60:	48 89 54 24 38       	mov    QWORD PTR [rsp+0x38],rdx
5b65:	31 d2                	xor    edx,edx
5b67:	83 fe 0a             	cmp    esi,0xa
5b6a:	74 68                	je     5bd4 <quotearg_n_style+0x84>
5b6c:	89 34 24             	mov    DWORD PTR [rsp],esi
5b6f:	48 89 e1             	mov    rcx,rsp
5b72:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
5b79:	48 89 c6             	mov    rsi,rax
5b7c:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
5b83:	00 00
5b85:	48 c7 44 24 0c 00 00 	mov    QWORD PTR [rsp+0xc],0x0
5b8c:	00 00
5b8e:	48 c7 44 24 14 00 00 	mov    QWORD PTR [rsp+0x14],0x0
5b95:	00 00
5b97:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
5b9e:	00 00
5ba0:	48 c7 44 24 24 00 00 	mov    QWORD PTR [rsp+0x24],0x0
5ba7:	00 00
5ba9:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
5bb0:	00 00
5bb2:	c7 44 24 34 00 00 00 	mov    DWORD PTR [rsp+0x34],0x0
5bb9:	00
5bba:	e8 41 fa ff ff       	call   5600 <quotearg_n_options>
5bbf:	48 8b 4c 24 38       	mov    rcx,QWORD PTR [rsp+0x38]
5bc4:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
5bcb:	00 00
5bcd:	75 0a                	jne    5bd9 <quotearg_n_style+0x89>
5bcf:	48 83 c4 48          	add    rsp,0x48
5bd3:	c3                   	ret
5bd4:	e8 27 ba ff ff       	call   1600 <abort@plt>
5bd9:	e8 e2 ba ff ff       	call   16c0 <__stack_chk_fail@plt>
5bde:	66 90                	xchg   ax,ax

0000000000005be0 <quotearg_n_style_mem>:
5be0:	48 83 ec 48          	sub    rsp,0x48
5be4:	48 89 d0             	mov    rax,rdx
5be7:	48 89 ca             	mov    rdx,rcx
5bea:	64 48 8b 0c 25 28 00 	mov    rcx,QWORD PTR fs:0x28
5bf1:	00 00
5bf3:	48 89 4c 24 38       	mov    QWORD PTR [rsp+0x38],rcx
5bf8:	31 c9                	xor    ecx,ecx
5bfa:	83 fe 0a             	cmp    esi,0xa
5bfd:	74 61                	je     5c60 <quotearg_n_style_mem+0x80>
5bff:	89 34 24             	mov    DWORD PTR [rsp],esi
5c02:	48 89 e1             	mov    rcx,rsp
5c05:	48 89 c6             	mov    rsi,rax
5c08:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
5c0f:	00 00
5c11:	48 c7 44 24 0c 00 00 	mov    QWORD PTR [rsp+0xc],0x0
5c18:	00 00
5c1a:	48 c7 44 24 14 00 00 	mov    QWORD PTR [rsp+0x14],0x0
5c21:	00 00
5c23:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
5c2a:	00 00
5c2c:	48 c7 44 24 24 00 00 	mov    QWORD PTR [rsp+0x24],0x0
5c33:	00 00
5c35:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
5c3c:	00 00
5c3e:	c7 44 24 34 00 00 00 	mov    DWORD PTR [rsp+0x34],0x0
5c45:	00
5c46:	e8 b5 f9 ff ff       	call   5600 <quotearg_n_options>
5c4b:	48 8b 54 24 38       	mov    rdx,QWORD PTR [rsp+0x38]
5c50:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
5c57:	00 00
5c59:	75 0a                	jne    5c65 <quotearg_n_style_mem+0x85>
5c5b:	48 83 c4 48          	add    rsp,0x48
5c5f:	c3                   	ret
5c60:	e8 9b b9 ff ff       	call   1600 <abort@plt>
5c65:	e8 56 ba ff ff       	call   16c0 <__stack_chk_fail@plt>
5c6a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005c70 <quotearg_style>:
5c70:	48 89 f2             	mov    rdx,rsi
5c73:	89 fe                	mov    esi,edi
5c75:	31 ff                	xor    edi,edi
5c77:	e9 d4 fe ff ff       	jmp    5b50 <quotearg_n_style>
5c7c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000005c80 <quotearg_style_mem>:
5c80:	48 89 d1             	mov    rcx,rdx
5c83:	48 89 f2             	mov    rdx,rsi
5c86:	89 fe                	mov    esi,edi
5c88:	31 ff                	xor    edi,edi
5c8a:	e9 51 ff ff ff       	jmp    5be0 <quotearg_n_style_mem>
5c8f:	90                   	nop

0000000000005c90 <quotearg_char_mem>:
5c90:	48 83 ec 48          	sub    rsp,0x48
5c94:	89 d1                	mov    ecx,edx
5c96:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
5c9d:	00 00
5c9f:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
5ca4:	31 c0                	xor    eax,eax
5ca6:	48 8b 05 83 78 20 00 	mov    rax,QWORD PTR [rip+0x207883]        # 20d530 <default_quoting_options+0x30>
5cad:	49 89 e0             	mov    r8,rsp
5cb0:	83 e1 1f             	and    ecx,0x1f
5cb3:	66 0f 6f 05 45 78 20 	movdqa xmm0,XMMWORD PTR [rip+0x207845]        # 20d500 <default_quoting_options>
5cba:	00
5cbb:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
5cc0:	89 d0                	mov    eax,edx
5cc2:	0f 29 04 24          	movaps XMMWORD PTR [rsp],xmm0
5cc6:	c0 e8 05             	shr    al,0x5
5cc9:	0f b6 c0             	movzx  eax,al
5ccc:	4d 8d 4c 80 08       	lea    r9,[r8+rax*4+0x8]
5cd1:	66 0f 6f 05 37 78 20 	movdqa xmm0,XMMWORD PTR [rip+0x207837]        # 20d510 <default_quoting_options+0x10>
5cd8:	00
5cd9:	0f 29 44 24 10       	movaps XMMWORD PTR [rsp+0x10],xmm0
5cde:	66 0f 6f 05 3a 78 20 	movdqa xmm0,XMMWORD PTR [rip+0x20783a]        # 20d520 <default_quoting_options+0x20>
5ce5:	00
5ce6:	0f 29 44 24 20       	movaps XMMWORD PTR [rsp+0x20],xmm0
5ceb:	41 8b 11             	mov    edx,DWORD PTR [r9]
5cee:	89 d0                	mov    eax,edx
5cf0:	d3 e8                	shr    eax,cl
5cf2:	f7 d0                	not    eax
5cf4:	83 e0 01             	and    eax,0x1
5cf7:	d3 e0                	shl    eax,cl
5cf9:	4c 89 c1             	mov    rcx,r8
5cfc:	31 d0                	xor    eax,edx
5cfe:	48 89 f2             	mov    rdx,rsi
5d01:	48 89 fe             	mov    rsi,rdi
5d04:	41 89 01             	mov    DWORD PTR [r9],eax
5d07:	31 ff                	xor    edi,edi
5d09:	e8 f2 f8 ff ff       	call   5600 <quotearg_n_options>
5d0e:	48 8b 74 24 38       	mov    rsi,QWORD PTR [rsp+0x38]
5d13:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
5d1a:	00 00
5d1c:	75 05                	jne    5d23 <quotearg_char_mem+0x93>
5d1e:	48 83 c4 48          	add    rsp,0x48
5d22:	c3                   	ret
5d23:	e8 98 b9 ff ff       	call   16c0 <__stack_chk_fail@plt>
5d28:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
5d2f:	00

0000000000005d30 <quotearg_char>:
5d30:	40 0f be d6          	movsx  edx,sil
5d34:	48 c7 c6 ff ff ff ff 	mov    rsi,0xffffffffffffffff
5d3b:	e9 50 ff ff ff       	jmp    5c90 <quotearg_char_mem>

0000000000005d40 <quotearg_colon>:
5d40:	ba 3a 00 00 00       	mov    edx,0x3a
5d45:	48 c7 c6 ff ff ff ff 	mov    rsi,0xffffffffffffffff
5d4c:	e9 3f ff ff ff       	jmp    5c90 <quotearg_char_mem>
5d51:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5d56:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5d5d:	00 00 00

0000000000005d60 <quotearg_colon_mem>:
5d60:	ba 3a 00 00 00       	mov    edx,0x3a
5d65:	e9 26 ff ff ff       	jmp    5c90 <quotearg_char_mem>
5d6a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005d70 <quotearg_n_style_colon>:
5d70:	48 83 ec 48          	sub    rsp,0x48
5d74:	48 89 d0             	mov    rax,rdx
5d77:	64 48 8b 14 25 28 00 	mov    rdx,QWORD PTR fs:0x28
5d7e:	00 00
5d80:	48 89 54 24 38       	mov    QWORD PTR [rsp+0x38],rdx
5d85:	31 d2                	xor    edx,edx
5d87:	83 fe 0a             	cmp    esi,0xa
5d8a:	74 68                	je     5df4 <quotearg_n_style_colon+0x84>
5d8c:	89 34 24             	mov    DWORD PTR [rsp],esi
5d8f:	48 89 e1             	mov    rcx,rsp
5d92:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
5d99:	48 89 c6             	mov    rsi,rax
5d9c:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
5da3:	00 00
5da5:	48 c7 44 24 0c 00 00 	mov    QWORD PTR [rsp+0xc],0x4000000
5dac:	00 04
5dae:	48 c7 44 24 14 00 00 	mov    QWORD PTR [rsp+0x14],0x0
5db5:	00 00
5db7:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
5dbe:	00 00
5dc0:	48 c7 44 24 24 00 00 	mov    QWORD PTR [rsp+0x24],0x0
5dc7:	00 00
5dc9:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
5dd0:	00 00
5dd2:	c7 44 24 34 00 00 00 	mov    DWORD PTR [rsp+0x34],0x0
5dd9:	00
5dda:	e8 21 f8 ff ff       	call   5600 <quotearg_n_options>
5ddf:	48 8b 4c 24 38       	mov    rcx,QWORD PTR [rsp+0x38]
5de4:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
5deb:	00 00
5ded:	75 0a                	jne    5df9 <quotearg_n_style_colon+0x89>
5def:	48 83 c4 48          	add    rsp,0x48
5df3:	c3                   	ret
5df4:	e8 07 b8 ff ff       	call   1600 <abort@plt>
5df9:	e8 c2 b8 ff ff       	call   16c0 <__stack_chk_fail@plt>
5dfe:	66 90                	xchg   ax,ax

0000000000005e00 <quotearg_n_custom_mem>:
5e00:	48 83 ec 48          	sub    rsp,0x48
5e04:	49 89 c9             	mov    r9,rcx
5e07:	48 8b 0d 22 77 20 00 	mov    rcx,QWORD PTR [rip+0x207722]        # 20d530 <default_quoting_options+0x30>
5e0e:	66 0f 6f 05 ea 76 20 	movdqa xmm0,XMMWORD PTR [rip+0x2076ea]        # 20d500 <default_quoting_options>
5e15:	00
5e16:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
5e1d:	00 00
5e1f:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
5e24:	31 c0                	xor    eax,eax
5e26:	0f 29 04 24          	movaps XMMWORD PTR [rsp],xmm0
5e2a:	48 85 f6             	test   rsi,rsi
5e2d:	48 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],rcx
5e32:	c7 04 24 0a 00 00 00 	mov    DWORD PTR [rsp],0xa
5e39:	66 0f 6f 05 cf 76 20 	movdqa xmm0,XMMWORD PTR [rip+0x2076cf]        # 20d510 <default_quoting_options+0x10>
5e40:	00
5e41:	0f 29 44 24 10       	movaps XMMWORD PTR [rsp+0x10],xmm0
5e46:	66 0f 6f 05 d2 76 20 	movdqa xmm0,XMMWORD PTR [rip+0x2076d2]        # 20d520 <default_quoting_options+0x20>
5e4d:	00
5e4e:	0f 29 44 24 20       	movaps XMMWORD PTR [rsp+0x20],xmm0
5e53:	74 32                	je     5e87 <quotearg_n_custom_mem+0x87>
5e55:	48 85 d2             	test   rdx,rdx
5e58:	74 2d                	je     5e87 <quotearg_n_custom_mem+0x87>
5e5a:	48 89 74 24 28       	mov    QWORD PTR [rsp+0x28],rsi
5e5f:	48 89 54 24 30       	mov    QWORD PTR [rsp+0x30],rdx
5e64:	48 89 e1             	mov    rcx,rsp
5e67:	4c 89 c2             	mov    rdx,r8
5e6a:	4c 89 ce             	mov    rsi,r9
5e6d:	e8 8e f7 ff ff       	call   5600 <quotearg_n_options>
5e72:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
5e77:	64 48 33 3c 25 28 00 	xor    rdi,QWORD PTR fs:0x28
5e7e:	00 00
5e80:	75 0a                	jne    5e8c <quotearg_n_custom_mem+0x8c>
5e82:	48 83 c4 48          	add    rsp,0x48
5e86:	c3                   	ret
5e87:	e8 74 b7 ff ff       	call   1600 <abort@plt>
5e8c:	e8 2f b8 ff ff       	call   16c0 <__stack_chk_fail@plt>
5e91:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5e96:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5e9d:	00 00 00

0000000000005ea0 <quotearg_n_custom>:
5ea0:	49 c7 c0 ff ff ff ff 	mov    r8,0xffffffffffffffff
5ea7:	e9 54 ff ff ff       	jmp    5e00 <quotearg_n_custom_mem>
5eac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000005eb0 <quotearg_custom>:
5eb0:	48 89 d1             	mov    rcx,rdx
5eb3:	49 c7 c0 ff ff ff ff 	mov    r8,0xffffffffffffffff
5eba:	48 89 f2             	mov    rdx,rsi
5ebd:	48 89 fe             	mov    rsi,rdi
5ec0:	31 ff                	xor    edi,edi
5ec2:	e9 39 ff ff ff       	jmp    5e00 <quotearg_n_custom_mem>
5ec7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
5ece:	00 00

0000000000005ed0 <quotearg_custom_mem>:
5ed0:	49 89 c8             	mov    r8,rcx
5ed3:	48 89 d1             	mov    rcx,rdx
5ed6:	48 89 f2             	mov    rdx,rsi
5ed9:	48 89 fe             	mov    rsi,rdi
5edc:	31 ff                	xor    edi,edi
5ede:	e9 1d ff ff ff       	jmp    5e00 <quotearg_n_custom_mem>
5ee3:	0f 1f 00             	nop    DWORD PTR [rax]
5ee6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5eed:	00 00 00

0000000000005ef0 <quote_n_mem>:
5ef0:	48 8d 0d 29 51 20 00 	lea    rcx,[rip+0x205129]        # 20b020 <quote_quoting_options>
5ef7:	e9 04 f7 ff ff       	jmp    5600 <quotearg_n_options>
5efc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000005f00 <quote_mem>:
5f00:	48 8d 0d 19 51 20 00 	lea    rcx,[rip+0x205119]        # 20b020 <quote_quoting_options>
5f07:	48 89 f2             	mov    rdx,rsi
5f0a:	48 89 fe             	mov    rsi,rdi
5f0d:	31 ff                	xor    edi,edi
5f0f:	e9 ec f6 ff ff       	jmp    5600 <quotearg_n_options>
5f14:	66 90                	xchg   ax,ax
5f16:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5f1d:	00 00 00

0000000000005f20 <quote_n>:
5f20:	48 8d 0d f9 50 20 00 	lea    rcx,[rip+0x2050f9]        # 20b020 <quote_quoting_options>
5f27:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
5f2e:	e9 cd f6 ff ff       	jmp    5600 <quotearg_n_options>
5f33:	0f 1f 00             	nop    DWORD PTR [rax]
5f36:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5f3d:	00 00 00

0000000000005f40 <quote>:
5f40:	48 8d 0d d9 50 20 00 	lea    rcx,[rip+0x2050d9]        # 20b020 <quote_quoting_options>
5f47:	48 89 fe             	mov    rsi,rdi
5f4a:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
5f51:	31 ff                	xor    edi,edi
5f53:	e9 a8 f6 ff ff       	jmp    5600 <quotearg_n_options>
5f58:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
5f5f:	00

0000000000005f60 <safe_read>:
5f60:	41 55                	push   r13
5f62:	41 54                	push   r12
5f64:	41 89 fd             	mov    r13d,edi
5f67:	55                   	push   rbp
5f68:	53                   	push   rbx
5f69:	49 89 f4             	mov    r12,rsi
5f6c:	48 89 d3             	mov    rbx,rdx
5f6f:	48 83 ec 08          	sub    rsp,0x8
5f73:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5f78:	48 89 da             	mov    rdx,rbx
5f7b:	4c 89 e6             	mov    rsi,r12
5f7e:	44 89 ef             	mov    edi,r13d
5f81:	e8 ea b7 ff ff       	call   1770 <read@plt>
5f86:	48 85 c0             	test   rax,rax
5f89:	48 89 c5             	mov    rbp,rax
5f8c:	79 22                	jns    5fb0 <safe_read+0x50>
5f8e:	e8 7d b6 ff ff       	call   1610 <__errno_location@plt>
5f93:	8b 00                	mov    eax,DWORD PTR [rax]
5f95:	83 f8 04             	cmp    eax,0x4
5f98:	74 de                	je     5f78 <safe_read+0x18>
5f9a:	48 81 fb 00 00 f0 7f 	cmp    rbx,0x7ff00000
5fa1:	76 0d                	jbe    5fb0 <safe_read+0x50>
5fa3:	83 f8 16             	cmp    eax,0x16
5fa6:	75 08                	jne    5fb0 <safe_read+0x50>
5fa8:	bb 00 00 f0 7f       	mov    ebx,0x7ff00000
5fad:	eb c9                	jmp    5f78 <safe_read+0x18>
5faf:	90                   	nop
5fb0:	48 83 c4 08          	add    rsp,0x8
5fb4:	48 89 e8             	mov    rax,rbp
5fb7:	5b                   	pop    rbx
5fb8:	5d                   	pop    rbp
5fb9:	41 5c                	pop    r12
5fbb:	41 5d                	pop    r13
5fbd:	c3                   	ret
5fbe:	66 90                	xchg   ax,ax

0000000000005fc0 <version_etc_arn>:
5fc0:	41 57                	push   r15
5fc2:	41 56                	push   r14
5fc4:	41 55                	push   r13
5fc6:	41 54                	push   r12
5fc8:	4d 89 cc             	mov    r12,r9
5fcb:	55                   	push   rbp
5fcc:	53                   	push   rbx
5fcd:	48 89 fd             	mov    rbp,rdi
5fd0:	4c 89 c3             	mov    rbx,r8
5fd3:	48 83 ec 28          	sub    rsp,0x28
5fd7:	48 85 f6             	test   rsi,rsi
5fda:	0f 84 18 01 00 00    	je     60f8 <version_etc_arn+0x138>
5fe0:	49 89 d0             	mov    r8,rdx
5fe3:	48 8d 15 9e 28 00 00 	lea    rdx,[rip+0x289e]        # 8888 <quoting_style_vals+0x28>
5fea:	49 89 c9             	mov    r9,rcx
5fed:	31 c0                	xor    eax,eax
5fef:	48 89 f1             	mov    rcx,rsi
5ff2:	be 01 00 00 00       	mov    esi,0x1
5ff7:	e8 a4 b8 ff ff       	call   18a0 <__fprintf_chk@plt>
5ffc:	48 8d 35 98 28 00 00 	lea    rsi,[rip+0x2898]        # 889b <quoting_style_vals+0x3b>
6003:	31 ff                	xor    edi,edi
6005:	ba 05 00 00 00       	mov    edx,0x5
600a:	e8 81 b6 ff ff       	call   1690 <dcgettext@plt>
600f:	48 8d 15 aa 2b 00 00 	lea    rdx,[rip+0x2baa]        # 8bc0 <version_etc_copyright>
6016:	48 89 c1             	mov    rcx,rax
6019:	41 b8 e3 07 00 00    	mov    r8d,0x7e3
601f:	be 01 00 00 00       	mov    esi,0x1
6024:	48 89 ef             	mov    rdi,rbp
6027:	31 c0                	xor    eax,eax
6029:	e8 72 b8 ff ff       	call   18a0 <__fprintf_chk@plt>
602e:	48 8d 35 f3 28 00 00 	lea    rsi,[rip+0x28f3]        # 8928 <quoting_style_vals+0xc8>
6035:	31 ff                	xor    edi,edi
6037:	ba 05 00 00 00       	mov    edx,0x5
603c:	e8 4f b6 ff ff       	call   1690 <dcgettext@plt>
6041:	48 89 ee             	mov    rsi,rbp
6044:	48 89 c7             	mov    rdi,rax
6047:	e8 44 b7 ff ff       	call   1790 <fputs_unlocked@plt>
604c:	49 83 fc 09          	cmp    r12,0x9
6050:	0f 87 3a 03 00 00    	ja     6390 <version_etc_arn+0x3d0>
6056:	48 8d 15 27 2b 00 00 	lea    rdx,[rip+0x2b27]        # 8b84 <quoting_style_vals+0x324>
605d:	4a 63 04 a2          	movsxd rax,DWORD PTR [rdx+r12*4]
6061:	48 01 d0             	add    rax,rdx
6064:	ff e0                	jmp    rax
6066:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
606d:	00 00 00
6070:	4c 8b 4b 38          	mov    r9,QWORD PTR [rbx+0x38]
6074:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
6078:	48 8d 35 19 2a 00 00 	lea    rsi,[rip+0x2a19]        # 8a98 <quoting_style_vals+0x238>
607f:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
6083:	ba 05 00 00 00       	mov    edx,0x5
6088:	31 ff                	xor    edi,edi
608a:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
608e:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
6092:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
6097:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
609b:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
609f:	48 89 04 24          	mov    QWORD PTR [rsp],rax
60a3:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
60a8:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
60ab:	e8 e0 b5 ff ff       	call   1690 <dcgettext@plt>
60b0:	48 83 ec 08          	sub    rsp,0x8
60b4:	4c 8b 4c 24 18       	mov    r9,QWORD PTR [rsp+0x18]
60b9:	48 89 c2             	mov    rdx,rax
60bc:	48 89 d9             	mov    rcx,rbx
60bf:	be 01 00 00 00       	mov    esi,0x1
60c4:	48 89 ef             	mov    rdi,rbp
60c7:	31 c0                	xor    eax,eax
60c9:	41 51                	push   r9
60cb:	41 55                	push   r13
60cd:	41 54                	push   r12
60cf:	41 57                	push   r15
60d1:	41 56                	push   r14
60d3:	4c 8b 4c 24 30       	mov    r9,QWORD PTR [rsp+0x30]
60d8:	4c 8b 44 24 38       	mov    r8,QWORD PTR [rsp+0x38]
60dd:	e8 be b7 ff ff       	call   18a0 <__fprintf_chk@plt>
60e2:	48 83 c4 30          	add    rsp,0x30
60e6:	48 83 c4 28          	add    rsp,0x28
60ea:	5b                   	pop    rbx
60eb:	5d                   	pop    rbp
60ec:	41 5c                	pop    r12
60ee:	41 5d                	pop    r13
60f0:	41 5e                	pop    r14
60f2:	41 5f                	pop    r15
60f4:	c3                   	ret
60f5:	0f 1f 00             	nop    DWORD PTR [rax]
60f8:	49 89 c8             	mov    r8,rcx
60fb:	48 89 d1             	mov    rcx,rdx
60fe:	48 8d 15 8f 27 00 00 	lea    rdx,[rip+0x278f]        # 8894 <quoting_style_vals+0x34>
6105:	be 01 00 00 00       	mov    esi,0x1
610a:	31 c0                	xor    eax,eax
610c:	e8 8f b7 ff ff       	call   18a0 <__fprintf_chk@plt>
6111:	e9 e6 fe ff ff       	jmp    5ffc <version_etc_arn+0x3c>
6116:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
611d:	00 00 00
6120:	4c 8b 53 40          	mov    r10,QWORD PTR [rbx+0x40]
6124:	4c 8b 4b 38          	mov    r9,QWORD PTR [rbx+0x38]
6128:	48 8d 35 99 29 00 00 	lea    rsi,[rip+0x2999]        # 8ac8 <quoting_style_vals+0x268>
612f:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
6133:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
6137:	ba 05 00 00 00       	mov    edx,0x5
613c:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
6140:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
6144:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
6148:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
614c:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
614f:	4c 89 54 24 18       	mov    QWORD PTR [rsp+0x18],r10
6154:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
6159:	48 89 04 24          	mov    QWORD PTR [rsp],rax
615d:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
6162:	31 ff                	xor    edi,edi
6164:	e8 27 b5 ff ff       	call   1690 <dcgettext@plt>
6169:	4c 8b 54 24 18       	mov    r10,QWORD PTR [rsp+0x18]
616e:	41 52                	push   r10
6170:	e9 3f ff ff ff       	jmp    60b4 <version_etc_arn+0xf4>
6175:	0f 1f 00             	nop    DWORD PTR [rax]
6178:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
617b:	48 8d 35 1d 27 00 00 	lea    rsi,[rip+0x271d]        # 889f <quoting_style_vals+0x3f>
6182:	ba 05 00 00 00       	mov    edx,0x5
6187:	31 ff                	xor    edi,edi
6189:	e8 02 b5 ff ff       	call   1690 <dcgettext@plt>
618e:	48 83 c4 28          	add    rsp,0x28
6192:	48 89 d9             	mov    rcx,rbx
6195:	48 89 ef             	mov    rdi,rbp
6198:	5b                   	pop    rbx
6199:	5d                   	pop    rbp
619a:	41 5c                	pop    r12
619c:	41 5d                	pop    r13
619e:	41 5e                	pop    r14
61a0:	41 5f                	pop    r15
61a2:	48 89 c2             	mov    rdx,rax
61a5:	be 01 00 00 00       	mov    esi,0x1
61aa:	31 c0                	xor    eax,eax
61ac:	e9 ef b6 ff ff       	jmp    18a0 <__fprintf_chk@plt>
61b1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
61b8:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
61bc:	48 8d 35 ec 26 00 00 	lea    rsi,[rip+0x26ec]        # 88af <quoting_style_vals+0x4f>
61c3:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
61c6:	ba 05 00 00 00       	mov    edx,0x5
61cb:	31 ff                	xor    edi,edi
61cd:	e8 be b4 ff ff       	call   1690 <dcgettext@plt>
61d2:	48 83 c4 28          	add    rsp,0x28
61d6:	4d 89 e0             	mov    r8,r12
61d9:	48 89 d9             	mov    rcx,rbx
61dc:	48 89 ef             	mov    rdi,rbp
61df:	48 89 c2             	mov    rdx,rax
61e2:	be 01 00 00 00       	mov    esi,0x1
61e7:	5b                   	pop    rbx
61e8:	5d                   	pop    rbp
61e9:	41 5c                	pop    r12
61eb:	41 5d                	pop    r13
61ed:	41 5e                	pop    r14
61ef:	41 5f                	pop    r15
61f1:	31 c0                	xor    eax,eax
61f3:	e9 a8 b6 ff ff       	jmp    18a0 <__fprintf_chk@plt>
61f8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
61ff:	00
6200:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
6204:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
6208:	48 8d 35 b7 26 00 00 	lea    rsi,[rip+0x26b7]        # 88c6 <quoting_style_vals+0x66>
620f:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
6212:	ba 05 00 00 00       	mov    edx,0x5
6217:	31 ff                	xor    edi,edi
6219:	e8 72 b4 ff ff       	call   1690 <dcgettext@plt>
621e:	48 83 c4 28          	add    rsp,0x28
6222:	4d 89 e9             	mov    r9,r13
6225:	4d 89 e0             	mov    r8,r12
6228:	48 89 d9             	mov    rcx,rbx
622b:	48 89 ef             	mov    rdi,rbp
622e:	48 89 c2             	mov    rdx,rax
6231:	5b                   	pop    rbx
6232:	5d                   	pop    rbp
6233:	41 5c                	pop    r12
6235:	41 5d                	pop    r13
6237:	41 5e                	pop    r14
6239:	41 5f                	pop    r15
623b:	be 01 00 00 00       	mov    esi,0x1
6240:	31 c0                	xor    eax,eax
6242:	e9 59 b6 ff ff       	jmp    18a0 <__fprintf_chk@plt>
6247:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
624e:	00 00
6250:	48 8d 35 a1 27 00 00 	lea    rsi,[rip+0x27a1]        # 89f8 <quoting_style_vals+0x198>
6257:	ba 05 00 00 00       	mov    edx,0x5
625c:	31 ff                	xor    edi,edi
625e:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
6262:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
6266:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
626a:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
626d:	e8 1e b4 ff ff       	call   1690 <dcgettext@plt>
6272:	48 83 ec 08          	sub    rsp,0x8
6276:	41 56                	push   r14
6278:	48 89 c2             	mov    rdx,rax
627b:	4d 89 e9             	mov    r9,r13
627e:	4d 89 e0             	mov    r8,r12
6281:	48 89 d9             	mov    rcx,rbx
6284:	48 89 ef             	mov    rdi,rbp
6287:	be 01 00 00 00       	mov    esi,0x1
628c:	31 c0                	xor    eax,eax
628e:	e8 0d b6 ff ff       	call   18a0 <__fprintf_chk@plt>
6293:	58                   	pop    rax
6294:	5a                   	pop    rdx
6295:	48 83 c4 28          	add    rsp,0x28
6299:	5b                   	pop    rbx
629a:	5d                   	pop    rbp
629b:	41 5c                	pop    r12
629d:	41 5d                	pop    r13
629f:	41 5e                	pop    r14
62a1:	41 5f                	pop    r15
62a3:	c3                   	ret
62a4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
62a8:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
62ac:	48 8d 35 65 27 00 00 	lea    rsi,[rip+0x2765]        # 8a18 <quoting_style_vals+0x1b8>
62b3:	ba 05 00 00 00       	mov    edx,0x5
62b8:	31 ff                	xor    edi,edi
62ba:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
62be:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
62c2:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
62c6:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
62c9:	e8 c2 b3 ff ff       	call   1690 <dcgettext@plt>
62ce:	41 57                	push   r15
62d0:	eb a4                	jmp    6276 <version_etc_arn+0x2b6>
62d2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
62d8:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
62dc:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
62e0:	48 8d 35 59 27 00 00 	lea    rsi,[rip+0x2759]        # 8a40 <quoting_style_vals+0x1e0>
62e7:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
62eb:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
62ef:	ba 05 00 00 00       	mov    edx,0x5
62f4:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
62f8:	31 ff                	xor    edi,edi
62fa:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
62fd:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
6301:	e8 8a b3 ff ff       	call   1690 <dcgettext@plt>
6306:	48 83 ec 08          	sub    rsp,0x8
630a:	4d 89 e9             	mov    r9,r13
630d:	41 54                	push   r12
630f:	41 57                	push   r15
6311:	41 56                	push   r14
6313:	4c 8b 44 24 20       	mov    r8,QWORD PTR [rsp+0x20]
6318:	48 89 d9             	mov    rcx,rbx
631b:	48 89 c2             	mov    rdx,rax
631e:	48 89 ef             	mov    rdi,rbp
6321:	be 01 00 00 00       	mov    esi,0x1
6326:	31 c0                	xor    eax,eax
6328:	e8 73 b5 ff ff       	call   18a0 <__fprintf_chk@plt>
632d:	48 83 c4 20          	add    rsp,0x20
6331:	48 83 c4 28          	add    rsp,0x28
6335:	5b                   	pop    rbx
6336:	5d                   	pop    rbp
6337:	41 5c                	pop    r12
6339:	41 5d                	pop    r13
633b:	41 5e                	pop    r14
633d:	41 5f                	pop    r15
633f:	c3                   	ret
6340:	4c 8b 4b 10          	mov    r9,QWORD PTR [rbx+0x10]
6344:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
6348:	48 8d 35 19 27 00 00 	lea    rsi,[rip+0x2719]        # 8a68 <quoting_style_vals+0x208>
634f:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
6353:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
6357:	ba 05 00 00 00       	mov    edx,0x5
635c:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
6360:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
6364:	31 ff                	xor    edi,edi
6366:	4c 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],r9
636b:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
636e:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
6372:	e8 19 b3 ff ff       	call   1690 <dcgettext@plt>
6377:	41 55                	push   r13
6379:	41 54                	push   r12
637b:	41 57                	push   r15
637d:	41 56                	push   r14
637f:	4c 8b 4c 24 28       	mov    r9,QWORD PTR [rsp+0x28]
6384:	eb 8d                	jmp    6313 <version_etc_arn+0x353>
6386:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
638d:	00 00 00
6390:	4c 8b 53 40          	mov    r10,QWORD PTR [rbx+0x40]
6394:	4c 8b 4b 38          	mov    r9,QWORD PTR [rbx+0x38]
6398:	ba 05 00 00 00       	mov    edx,0x5
639d:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
63a1:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
63a5:	48 8d 35 54 27 00 00 	lea    rsi,[rip+0x2754]        # 8b00 <quoting_style_vals+0x2a0>
63ac:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
63b0:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
63b4:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
63b8:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
63bc:	4c 89 54 24 18       	mov    QWORD PTR [rsp+0x18],r10
63c1:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
63c6:	48 89 04 24          	mov    QWORD PTR [rsp],rax
63ca:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
63cf:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
63d2:	e9 8b fd ff ff       	jmp    6162 <version_etc_arn+0x1a2>
63d7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
63de:	00 00

00000000000063e0 <version_etc_ar>:
63e0:	45 31 c9             	xor    r9d,r9d
63e3:	49 83 38 00          	cmp    QWORD PTR [r8],0x0
63e7:	74 12                	je     63fb <version_etc_ar+0x1b>
63e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
63f0:	49 83 c1 01          	add    r9,0x1
63f4:	4b 83 3c c8 00       	cmp    QWORD PTR [r8+r9*8],0x0
63f9:	75 f5                	jne    63f0 <version_etc_ar+0x10>
63fb:	e9 c0 fb ff ff       	jmp    5fc0 <version_etc_arn>

0000000000006400 <version_etc_va>:
6400:	48 83 ec 68          	sub    rsp,0x68
6404:	4d 89 c2             	mov    r10,r8
6407:	45 31 c9             	xor    r9d,r9d
640a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
6411:	00 00
6413:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
6418:	31 c0                	xor    eax,eax
641a:	49 89 e0             	mov    r8,rsp
641d:	0f 1f 00             	nop    DWORD PTR [rax]
6420:	41 8b 02             	mov    eax,DWORD PTR [r10]
6423:	83 f8 2f             	cmp    eax,0x2f
6426:	77 42                	ja     646a <version_etc_va+0x6a>
6428:	41 89 c3             	mov    r11d,eax
642b:	4d 03 5a 10          	add    r11,QWORD PTR [r10+0x10]
642f:	83 c0 08             	add    eax,0x8
6432:	41 89 02             	mov    DWORD PTR [r10],eax
6435:	49 8b 03             	mov    rax,QWORD PTR [r11]
6438:	48 85 c0             	test   rax,rax
643b:	4b 89 04 c8          	mov    QWORD PTR [r8+r9*8],rax
643f:	74 0a                	je     644b <version_etc_va+0x4b>
6441:	49 83 c1 01          	add    r9,0x1
6445:	49 83 f9 0a          	cmp    r9,0xa
6449:	75 d5                	jne    6420 <version_etc_va+0x20>
644b:	e8 70 fb ff ff       	call   5fc0 <version_etc_arn>
6450:	48 8b 44 24 58       	mov    rax,QWORD PTR [rsp+0x58]
6455:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
645c:	00 00
645e:	75 05                	jne    6465 <version_etc_va+0x65>
6460:	48 83 c4 68          	add    rsp,0x68
6464:	c3                   	ret
6465:	e8 56 b2 ff ff       	call   16c0 <__stack_chk_fail@plt>
646a:	4d 8b 5a 08          	mov    r11,QWORD PTR [r10+0x8]
646e:	49 8d 43 08          	lea    rax,[r11+0x8]
6472:	49 89 42 08          	mov    QWORD PTR [r10+0x8],rax
6476:	eb bd                	jmp    6435 <version_etc_va+0x35>
6478:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
647f:	00

0000000000006480 <version_etc>:
6480:	55                   	push   rbp
6481:	53                   	push   rbx
6482:	41 ba 20 00 00 00    	mov    r10d,0x20
6488:	45 31 db             	xor    r11d,r11d
648b:	48 81 ec b8 00 00 00 	sub    rsp,0xb8
6492:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
6499:	00 00
649b:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
64a0:	31 c0                	xor    eax,eax
64a2:	48 8d 84 24 d0 00 00 	lea    rax,[rsp+0xd0]
64a9:	00
64aa:	4c 89 84 24 a0 00 00 	mov    QWORD PTR [rsp+0xa0],r8
64b1:	00
64b2:	48 8d 9c 24 d0 00 00 	lea    rbx,[rsp+0xd0]
64b9:	00
64ba:	4c 8d 44 24 20       	lea    r8,[rsp+0x20]
64bf:	4c 89 8c 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],r9
64c6:	00
64c7:	c7 44 24 08 20 00 00 	mov    DWORD PTR [rsp+0x8],0x20
64ce:	00
64cf:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
64d4:	48 8d 84 24 80 00 00 	lea    rax,[rsp+0x80]
64db:	00
64dc:	45 31 c9             	xor    r9d,r9d
64df:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
64e4:	48 89 c5             	mov    rbp,rax
64e7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
64ee:	00 00
64f0:	41 83 fa 2f          	cmp    r10d,0x2f
64f4:	77 56                	ja     654c <version_etc+0xcc>
64f6:	44 89 d0             	mov    eax,r10d
64f9:	41 bb 01 00 00 00    	mov    r11d,0x1
64ff:	41 83 c2 08          	add    r10d,0x8
6503:	48 01 e8             	add    rax,rbp
6506:	48 8b 00             	mov    rax,QWORD PTR [rax]
6509:	48 85 c0             	test   rax,rax
650c:	4b 89 04 c8          	mov    QWORD PTR [r8+r9*8],rax
6510:	74 0a                	je     651c <version_etc+0x9c>
6512:	49 83 c1 01          	add    r9,0x1
6516:	49 83 f9 0a          	cmp    r9,0xa
651a:	75 d4                	jne    64f0 <version_etc+0x70>
651c:	45 84 db             	test   r11b,r11b
651f:	75 24                	jne    6545 <version_etc+0xc5>
6521:	e8 9a fa ff ff       	call   5fc0 <version_etc_arn>
6526:	48 8b 44 24 78       	mov    rax,QWORD PTR [rsp+0x78]
652b:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
6532:	00 00
6534:	75 0a                	jne    6540 <version_etc+0xc0>
6536:	48 81 c4 b8 00 00 00 	add    rsp,0xb8
653d:	5b                   	pop    rbx
653e:	5d                   	pop    rbp
653f:	c3                   	ret
6540:	e8 7b b1 ff ff       	call   16c0 <__stack_chk_fail@plt>
6545:	44 89 54 24 08       	mov    DWORD PTR [rsp+0x8],r10d
654a:	eb d5                	jmp    6521 <version_etc+0xa1>
654c:	48 89 d8             	mov    rax,rbx
654f:	48 83 c3 08          	add    rbx,0x8
6553:	eb b1                	jmp    6506 <version_etc+0x86>
6555:	90                   	nop
6556:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
655d:	00 00 00

0000000000006560 <emit_bug_reporting_address>:
6560:	53                   	push   rbx
6561:	48 8d 35 7a 23 00 00 	lea    rsi,[rip+0x237a]        # 88e2 <quoting_style_vals+0x82>
6568:	ba 05 00 00 00       	mov    edx,0x5
656d:	31 ff                	xor    edi,edi
656f:	e8 1c b1 ff ff       	call   1690 <dcgettext@plt>
6574:	48 8d 15 7c 23 00 00 	lea    rdx,[rip+0x237c]        # 88f7 <quoting_style_vals+0x97>
657b:	48 89 c6             	mov    rsi,rax
657e:	bf 01 00 00 00       	mov    edi,0x1
6583:	31 c0                	xor    eax,eax
6585:	e8 b6 b2 ff ff       	call   1840 <__printf_chk@plt>
658a:	48 8d 35 7c 23 00 00 	lea    rsi,[rip+0x237c]        # 890d <quoting_style_vals+0xad>
6591:	ba 05 00 00 00       	mov    edx,0x5
6596:	31 ff                	xor    edi,edi
6598:	e8 f3 b0 ff ff       	call   1690 <dcgettext@plt>
659d:	48 8d 0d 74 19 00 00 	lea    rcx,[rip+0x1974]        # 7f18 <__PRETTY_FUNCTION__.7483+0xb76>
65a4:	48 8d 15 6e 0b 00 00 	lea    rdx,[rip+0xb6e]        # 7119 <_IO_stdin_used+0x119>
65ab:	48 89 c6             	mov    rsi,rax
65ae:	bf 01 00 00 00       	mov    edi,0x1
65b3:	31 c0                	xor    eax,eax
65b5:	e8 86 b2 ff ff       	call   1840 <__printf_chk@plt>
65ba:	48 8b 1d c7 4a 20 00 	mov    rbx,QWORD PTR [rip+0x204ac7]        # 20b088 <stdout@@GLIBC_2.2.5>
65c1:	48 8d 35 78 25 00 00 	lea    rsi,[rip+0x2578]        # 8b40 <quoting_style_vals+0x2e0>
65c8:	31 ff                	xor    edi,edi
65ca:	ba 05 00 00 00       	mov    edx,0x5
65cf:	e8 bc b0 ff ff       	call   1690 <dcgettext@plt>
65d4:	48 89 de             	mov    rsi,rbx
65d7:	48 89 c7             	mov    rdi,rax
65da:	5b                   	pop    rbx
65db:	e9 b0 b1 ff ff       	jmp    1790 <fputs_unlocked@plt>

00000000000065e0 <xmalloc>:
65e0:	53                   	push   rbx
65e1:	48 89 fb             	mov    rbx,rdi
65e4:	e8 e7 b1 ff ff       	call   17d0 <malloc@plt>
65e9:	48 85 c0             	test   rax,rax
65ec:	75 05                	jne    65f3 <xmalloc+0x13>
65ee:	48 85 db             	test   rbx,rbx
65f1:	75 02                	jne    65f5 <xmalloc+0x15>
65f3:	5b                   	pop    rbx
65f4:	c3                   	ret
65f5:	e8 36 02 00 00       	call   6830 <xalloc_die>
65fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000006600 <xnmalloc>:
6600:	48 89 f8             	mov    rax,rdi
6603:	48 f7 e6             	mul    rsi
6606:	48 89 c7             	mov    rdi,rax
6609:	0f 90 c0             	seto   al
660c:	48 85 ff             	test   rdi,rdi
660f:	78 0a                	js     661b <xnmalloc+0x1b>
6611:	0f b6 c0             	movzx  eax,al
6614:	48 85 c0             	test   rax,rax
6617:	75 02                	jne    661b <xnmalloc+0x1b>
6619:	eb c5                	jmp    65e0 <xmalloc>
661b:	48 83 ec 08          	sub    rsp,0x8
661f:	e8 0c 02 00 00       	call   6830 <xalloc_die>
6624:	66 90                	xchg   ax,ax
6626:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
662d:	00 00 00

0000000000006630 <xcharalloc>:
6630:	eb ae                	jmp    65e0 <xmalloc>
6632:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
6636:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
663d:	00 00 00

0000000000006640 <xrealloc>:
6640:	48 85 f6             	test   rsi,rsi
6643:	53                   	push   rbx
6644:	48 89 f3             	mov    rbx,rsi
6647:	75 05                	jne    664e <xrealloc+0xe>
6649:	48 85 ff             	test   rdi,rdi
664c:	75 1a                	jne    6668 <xrealloc+0x28>
664e:	48 89 de             	mov    rsi,rbx
6651:	e8 ca b1 ff ff       	call   1820 <realloc@plt>
6656:	48 85 c0             	test   rax,rax
6659:	75 05                	jne    6660 <xrealloc+0x20>
665b:	48 85 db             	test   rbx,rbx
665e:	75 11                	jne    6671 <xrealloc+0x31>
6660:	5b                   	pop    rbx
6661:	c3                   	ret
6662:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
6668:	e8 83 af ff ff       	call   15f0 <free@plt>
666d:	31 c0                	xor    eax,eax
666f:	5b                   	pop    rbx
6670:	c3                   	ret
6671:	e8 ba 01 00 00       	call   6830 <xalloc_die>
6676:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
667d:	00 00 00

0000000000006680 <xnrealloc>:
6680:	48 89 f0             	mov    rax,rsi
6683:	48 f7 e2             	mul    rdx
6686:	48 89 c6             	mov    rsi,rax
6689:	0f 90 c0             	seto   al
668c:	48 85 f6             	test   rsi,rsi
668f:	78 0a                	js     669b <xnrealloc+0x1b>
6691:	0f b6 c0             	movzx  eax,al
6694:	48 85 c0             	test   rax,rax
6697:	75 02                	jne    669b <xnrealloc+0x1b>
6699:	eb a5                	jmp    6640 <xrealloc>
669b:	48 83 ec 08          	sub    rsp,0x8
669f:	e8 8c 01 00 00       	call   6830 <xalloc_die>
66a4:	66 90                	xchg   ax,ax
66a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
66ad:	00 00 00

00000000000066b0 <x2nrealloc>:
66b0:	48 85 ff             	test   rdi,rdi
66b3:	49 89 d1             	mov    r9,rdx
66b6:	48 8b 0e             	mov    rcx,QWORD PTR [rsi]
66b9:	74 35                	je     66f0 <x2nrealloc+0x40>
66bb:	31 d2                	xor    edx,edx
66bd:	48 b8 54 55 55 55 55 	movabs rax,0x5555555555555554
66c4:	55 55 55
66c7:	49 f7 f1             	div    r9
66ca:	48 39 c8             	cmp    rax,rcx
66cd:	76 3c                	jbe    670b <x2nrealloc+0x5b>
66cf:	48 89 c8             	mov    rax,rcx
66d2:	48 d1 e8             	shr    rax,1
66d5:	48 8d 4c 08 01       	lea    rcx,[rax+rcx*1+0x1]
66da:	48 89 0e             	mov    QWORD PTR [rsi],rcx
66dd:	49 0f af c9          	imul   rcx,r9
66e1:	48 89 ce             	mov    rsi,rcx
66e4:	e9 57 ff ff ff       	jmp    6640 <xrealloc>
66e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
66f0:	48 85 c9             	test   rcx,rcx
66f3:	74 23                	je     6718 <x2nrealloc+0x68>
66f5:	48 89 c8             	mov    rax,rcx
66f8:	49 f7 e1             	mul    r9
66fb:	0f 90 c2             	seto   dl
66fe:	48 85 c0             	test   rax,rax
6701:	0f b6 d2             	movzx  edx,dl
6704:	78 05                	js     670b <x2nrealloc+0x5b>
6706:	48 85 d2             	test   rdx,rdx
6709:	74 cf                	je     66da <x2nrealloc+0x2a>
670b:	48 83 ec 08          	sub    rsp,0x8
670f:	e8 1c 01 00 00       	call   6830 <xalloc_die>
6714:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
6718:	31 d2                	xor    edx,edx
671a:	b8 80 00 00 00       	mov    eax,0x80
671f:	45 31 c0             	xor    r8d,r8d
6722:	49 f7 f1             	div    r9
6725:	48 85 c0             	test   rax,rax
6728:	41 0f 94 c0          	sete   r8b
672c:	49 8d 0c 00          	lea    rcx,[r8+rax*1]
6730:	eb c3                	jmp    66f5 <x2nrealloc+0x45>
6732:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
6736:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
673d:	00 00 00

0000000000006740 <x2realloc>:
6740:	48 85 ff             	test   rdi,rdi
6743:	48 8b 06             	mov    rax,QWORD PTR [rsi]
6746:	74 28                	je     6770 <x2realloc+0x30>
6748:	48 ba 53 55 55 55 55 	movabs rdx,0x5555555555555553
674f:	55 55 55
6752:	48 39 d0             	cmp    rax,rdx
6755:	77 2a                	ja     6781 <x2realloc+0x41>
6757:	48 89 c2             	mov    rdx,rax
675a:	48 d1 ea             	shr    rdx,1
675d:	48 8d 44 02 01       	lea    rax,[rdx+rax*1+0x1]
6762:	48 89 06             	mov    QWORD PTR [rsi],rax
6765:	48 89 c6             	mov    rsi,rax
6768:	e9 d3 fe ff ff       	jmp    6640 <xrealloc>
676d:	0f 1f 00             	nop    DWORD PTR [rax]
6770:	48 85 c0             	test   rax,rax
6773:	ba 80 00 00 00       	mov    edx,0x80
6778:	48 0f 44 c2          	cmove  rax,rdx
677c:	48 85 c0             	test   rax,rax
677f:	79 e1                	jns    6762 <x2realloc+0x22>
6781:	48 83 ec 08          	sub    rsp,0x8
6785:	e8 a6 00 00 00       	call   6830 <xalloc_die>
678a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000006790 <xzalloc>:
6790:	53                   	push   rbx
6791:	48 89 fb             	mov    rbx,rdi
6794:	e8 47 fe ff ff       	call   65e0 <xmalloc>
6799:	48 89 da             	mov    rdx,rbx
679c:	31 f6                	xor    esi,esi
679e:	48 89 c7             	mov    rdi,rax
67a1:	5b                   	pop    rbx
67a2:	e9 99 af ff ff       	jmp    1740 <memset@plt>
67a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
67ae:	00 00

00000000000067b0 <xcalloc>:
67b0:	48 89 f8             	mov    rax,rdi
67b3:	48 83 ec 08          	sub    rsp,0x8
67b7:	48 f7 e6             	mul    rsi
67ba:	0f 90 c2             	seto   dl
67bd:	48 85 c0             	test   rax,rax
67c0:	78 17                	js     67d9 <xcalloc+0x29>
67c2:	0f b6 d2             	movzx  edx,dl
67c5:	48 85 d2             	test   rdx,rdx
67c8:	75 0f                	jne    67d9 <xcalloc+0x29>
67ca:	e8 d1 af ff ff       	call   17a0 <calloc@plt>
67cf:	48 85 c0             	test   rax,rax
67d2:	74 05                	je     67d9 <xcalloc+0x29>
67d4:	48 83 c4 08          	add    rsp,0x8
67d8:	c3                   	ret
67d9:	e8 52 00 00 00       	call   6830 <xalloc_die>
67de:	66 90                	xchg   ax,ax

00000000000067e0 <xmemdup>:
67e0:	55                   	push   rbp
67e1:	53                   	push   rbx
67e2:	48 89 fd             	mov    rbp,rdi
67e5:	48 89 f7             	mov    rdi,rsi
67e8:	48 89 f3             	mov    rbx,rsi
67eb:	48 83 ec 08          	sub    rsp,0x8
67ef:	e8 ec fd ff ff       	call   65e0 <xmalloc>
67f4:	48 83 c4 08          	add    rsp,0x8
67f8:	48 89 da             	mov    rdx,rbx
67fb:	48 89 ee             	mov    rsi,rbp
67fe:	5b                   	pop    rbx
67ff:	5d                   	pop    rbp
6800:	48 89 c7             	mov    rdi,rax
6803:	e9 a8 af ff ff       	jmp    17b0 <memcpy@plt>
6808:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
680f:	00

0000000000006810 <xstrdup>:
6810:	53                   	push   rbx
6811:	48 89 fb             	mov    rbx,rdi
6814:	e8 97 ae ff ff       	call   16b0 <strlen@plt>
6819:	48 89 df             	mov    rdi,rbx
681c:	48 8d 70 01          	lea    rsi,[rax+0x1]
6820:	5b                   	pop    rbx
6821:	eb bd                	jmp    67e0 <xmemdup>
6823:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
682a:	00 00 00
682d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006830 <xalloc_die>:
6830:	48 8d 35 b8 23 00 00 	lea    rsi,[rip+0x23b8]        # 8bef <version_etc_copyright+0x2f>
6837:	48 83 ec 08          	sub    rsp,0x8
683b:	ba 05 00 00 00       	mov    edx,0x5
6840:	31 ff                	xor    edi,edi
6842:	e8 49 ae ff ff       	call   1690 <dcgettext@plt>
6847:	8b 3d cb 47 20 00    	mov    edi,DWORD PTR [rip+0x2047cb]        # 20b018 <exit_failure>
684d:	48 8d 15 04 1b 00 00 	lea    rdx,[rip+0x1b04]        # 8358 <__PRETTY_FUNCTION__.7483+0xfb6>
6854:	48 89 c1             	mov    rcx,rax
6857:	31 f6                	xor    esi,esi
6859:	31 c0                	xor    eax,eax
685b:	e8 f0 af ff ff       	call   1850 <error@plt>
6860:	e8 9b ad ff ff       	call   1600 <abort@plt>
6865:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
686c:	00 00 00
686f:	90                   	nop

0000000000006870 <xstrtoumax>:
6870:	41 57                	push   r15
6872:	41 56                	push   r14
6874:	41 55                	push   r13
6876:	41 54                	push   r12
6878:	55                   	push   rbp
6879:	53                   	push   rbx
687a:	48 83 ec 28          	sub    rsp,0x28
687e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
6885:	00 00
6887:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
688c:	31 c0                	xor    eax,eax
688e:	83 fa 24             	cmp    edx,0x24
6891:	0f 87 5e 03 00 00    	ja     6bf5 <xstrtoumax+0x385>
6897:	48 8d 44 24 10       	lea    rax,[rsp+0x10]
689c:	49 89 f7             	mov    r15,rsi
689f:	48 85 f6             	test   rsi,rsi
68a2:	48 89 fd             	mov    rbp,rdi
68a5:	89 54 24 08          	mov    DWORD PTR [rsp+0x8],edx
68a9:	49 89 ce             	mov    r14,rcx
68ac:	4d 89 c5             	mov    r13,r8
68af:	4c 0f 44 f8          	cmove  r15,rax
68b3:	e8 58 ad ff ff       	call   1610 <__errno_location@plt>
68b8:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
68be:	49 89 c4             	mov    r12,rax
68c1:	0f b6 5d 00          	movzx  ebx,BYTE PTR [rbp+0x0]
68c5:	e8 16 b0 ff ff       	call   18e0 <__ctype_b_loc@plt>
68ca:	8b 54 24 08          	mov    edx,DWORD PTR [rsp+0x8]
68ce:	48 8b 30             	mov    rsi,QWORD PTR [rax]
68d1:	48 89 e8             	mov    rax,rbp
68d4:	eb 11                	jmp    68e7 <xstrtoumax+0x77>
68d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
68dd:	00 00 00
68e0:	48 83 c0 01          	add    rax,0x1
68e4:	0f b6 18             	movzx  ebx,BYTE PTR [rax]
68e7:	0f b6 cb             	movzx  ecx,bl
68ea:	f6 44 4e 01 20       	test   BYTE PTR [rsi+rcx*2+0x1],0x20
68ef:	75 ef                	jne    68e0 <xstrtoumax+0x70>
68f1:	80 fb 2d             	cmp    bl,0x2d
68f4:	74 52                	je     6948 <xstrtoumax+0xd8>
68f6:	31 c9                	xor    ecx,ecx
68f8:	4c 89 fe             	mov    rsi,r15
68fb:	48 89 ef             	mov    rdi,rbp
68fe:	e8 2d ae ff ff       	call   1730 <__strtoul_internal@plt>
6903:	49 8b 0f             	mov    rcx,QWORD PTR [r15]
6906:	48 89 c3             	mov    rbx,rax
6909:	48 39 e9             	cmp    rcx,rbp
690c:	74 2a                	je     6938 <xstrtoumax+0xc8>
690e:	41 8b 04 24          	mov    eax,DWORD PTR [r12]
6912:	85 c0                	test   eax,eax
6914:	74 62                	je     6978 <xstrtoumax+0x108>
6916:	83 f8 22             	cmp    eax,0x22
6919:	bd 01 00 00 00       	mov    ebp,0x1
691e:	75 28                	jne    6948 <xstrtoumax+0xd8>
6920:	4d 85 ed             	test   r13,r13
6923:	74 09                	je     692e <xstrtoumax+0xbe>
6925:	44 0f b6 21          	movzx  r12d,BYTE PTR [rcx]
6929:	45 84 e4             	test   r12b,r12b
692c:	75 79                	jne    69a7 <xstrtoumax+0x137>
692e:	49 89 1e             	mov    QWORD PTR [r14],rbx
6931:	eb 1a                	jmp    694d <xstrtoumax+0xdd>
6933:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
6938:	4d 85 ed             	test   r13,r13
693b:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
6940:	75 3e                	jne    6980 <xstrtoumax+0x110>
6942:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
6948:	bd 04 00 00 00       	mov    ebp,0x4
694d:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
6952:	64 48 33 3c 25 28 00 	xor    rdi,QWORD PTR fs:0x28
6959:	00 00
695b:	89 e8                	mov    eax,ebp
695d:	0f 85 8d 02 00 00    	jne    6bf0 <xstrtoumax+0x380>
6963:	48 83 c4 28          	add    rsp,0x28
6967:	5b                   	pop    rbx
6968:	5d                   	pop    rbp
6969:	41 5c                	pop    r12
696b:	41 5d                	pop    r13
696d:	41 5e                	pop    r14
696f:	41 5f                	pop    r15
6971:	c3                   	ret
6972:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
6978:	31 ed                	xor    ebp,ebp
697a:	eb a4                	jmp    6920 <xstrtoumax+0xb0>
697c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
6980:	44 0f b6 65 00       	movzx  r12d,BYTE PTR [rbp+0x0]
6985:	45 84 e4             	test   r12b,r12b
6988:	74 be                	je     6948 <xstrtoumax+0xd8>
698a:	41 0f be f4          	movsx  esi,r12b
698e:	4c 89 ef             	mov    rdi,r13
6991:	31 ed                	xor    ebp,ebp
6993:	e8 58 ad ff ff       	call   16f0 <strchr@plt>
6998:	48 85 c0             	test   rax,rax
699b:	bb 01 00 00 00       	mov    ebx,0x1
69a0:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
69a5:	74 a1                	je     6948 <xstrtoumax+0xd8>
69a7:	41 0f be f4          	movsx  esi,r12b
69ab:	4c 89 ef             	mov    rdi,r13
69ae:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
69b3:	e8 38 ad ff ff       	call   16f0 <strchr@plt>
69b8:	48 85 c0             	test   rax,rax
69bb:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
69c0:	0f 84 c6 00 00 00    	je     6a8c <xstrtoumax+0x21c>
69c6:	41 8d 44 24 bb       	lea    eax,[r12-0x45]
69cb:	3c 2f                	cmp    al,0x2f
69cd:	77 51                	ja     6a20 <xstrtoumax+0x1b0>
69cf:	48 ba 45 89 30 00 44 	movabs rdx,0x814400308945
69d6:	81 00 00
69d9:	48 0f a3 c2          	bt     rdx,rax
69dd:	73 41                	jae    6a20 <xstrtoumax+0x1b0>
69df:	be 30 00 00 00       	mov    esi,0x30
69e4:	4c 89 ef             	mov    rdi,r13
69e7:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
69ec:	e8 ff ac ff ff       	call   16f0 <strchr@plt>
69f1:	48 85 c0             	test   rax,rax
69f4:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
69f9:	74 25                	je     6a20 <xstrtoumax+0x1b0>
69fb:	0f b6 41 01          	movzx  eax,BYTE PTR [rcx+0x1]
69ff:	3c 44                	cmp    al,0x44
6a01:	74 0c                	je     6a0f <xstrtoumax+0x19f>
6a03:	3c 69                	cmp    al,0x69
6a05:	0f 84 cd 01 00 00    	je     6bd8 <xstrtoumax+0x368>
6a0b:	3c 42                	cmp    al,0x42
6a0d:	75 11                	jne    6a20 <xstrtoumax+0x1b0>
6a0f:	bf 02 00 00 00       	mov    edi,0x2
6a14:	be e8 03 00 00       	mov    esi,0x3e8
6a19:	eb 0f                	jmp    6a2a <xstrtoumax+0x1ba>
6a1b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
6a20:	bf 01 00 00 00       	mov    edi,0x1
6a25:	be 00 04 00 00       	mov    esi,0x400
6a2a:	41 83 ec 42          	sub    r12d,0x42
6a2e:	41 80 fc 35          	cmp    r12b,0x35
6a32:	77 58                	ja     6a8c <xstrtoumax+0x21c>
6a34:	48 8d 15 0d 22 00 00 	lea    rdx,[rip+0x220d]        # 8c48 <version_etc_copyright+0x88>
6a3b:	45 0f b6 e4          	movzx  r12d,r12b
6a3f:	4a 63 04 a2          	movsxd rax,DWORD PTR [rdx+r12*4]
6a43:	48 01 d0             	add    rax,rdx
6a46:	ff e0                	jmp    rax
6a48:	48 89 d8             	mov    rax,rbx
6a4b:	48 f7 e6             	mul    rsi
6a4e:	0f 80 ed 01 00 00    	jo     6c41 <xstrtoumax+0x3d1>
6a54:	45 31 c0             	xor    r8d,r8d
6a57:	48 f7 e6             	mul    rsi
6a5a:	0f 80 d2 01 00 00    	jo     6c32 <xstrtoumax+0x3c2>
6a60:	48 89 c3             	mov    rbx,rax
6a63:	44 09 c5             	or     ebp,r8d
6a66:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
6a6d:	00 00 00
6a70:	48 63 ff             	movsxd rdi,edi
6a73:	89 e8                	mov    eax,ebp
6a75:	48 01 f9             	add    rcx,rdi
6a78:	83 c8 02             	or     eax,0x2
6a7b:	49 89 0f             	mov    QWORD PTR [r15],rcx
6a7e:	80 39 00             	cmp    BYTE PTR [rcx],0x0
6a81:	49 89 1e             	mov    QWORD PTR [r14],rbx
6a84:	0f 45 e8             	cmovne ebp,eax
6a87:	e9 c1 fe ff ff       	jmp    694d <xstrtoumax+0xdd>
6a8c:	49 89 1e             	mov    QWORD PTR [r14],rbx
6a8f:	83 cd 02             	or     ebp,0x2
6a92:	e9 b6 fe ff ff       	jmp    694d <xstrtoumax+0xdd>
6a97:	ba 02 00 00 00       	mov    edx,0x2
6a9c:	48 89 d0             	mov    rax,rdx
6a9f:	48 f7 e3             	mul    rbx
6aa2:	0f 80 96 00 00 00    	jo     6b3e <xstrtoumax+0x2ce>
6aa8:	48 01 db             	add    rbx,rbx
6aab:	eb c3                	jmp    6a70 <xstrtoumax+0x200>
6aad:	ba 00 02 00 00       	mov    edx,0x200
6ab2:	48 89 d0             	mov    rax,rdx
6ab5:	48 f7 e3             	mul    rbx
6ab8:	0f 80 80 00 00 00    	jo     6b3e <xstrtoumax+0x2ce>
6abe:	48 c1 e3 09          	shl    rbx,0x9
6ac2:	eb ac                	jmp    6a70 <xstrtoumax+0x200>
6ac4:	41 b8 07 00 00 00    	mov    r8d,0x7
6aca:	45 31 c9             	xor    r9d,r9d
6acd:	0f 1f 00             	nop    DWORD PTR [rax]
6ad0:	48 89 d8             	mov    rax,rbx
6ad3:	48 f7 e6             	mul    rsi
6ad6:	48 89 c3             	mov    rbx,rax
6ad9:	0f 80 8f 01 00 00    	jo     6c6e <xstrtoumax+0x3fe>
6adf:	41 83 e8 01          	sub    r8d,0x1
6ae3:	75 eb                	jne    6ad0 <xstrtoumax+0x260>
6ae5:	44 09 cd             	or     ebp,r9d
6ae8:	eb 86                	jmp    6a70 <xstrtoumax+0x200>
6aea:	41 b8 08 00 00 00    	mov    r8d,0x8
6af0:	45 31 c9             	xor    r9d,r9d
6af3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
6af8:	48 89 d8             	mov    rax,rbx
6afb:	48 f7 e6             	mul    rsi
6afe:	48 89 c3             	mov    rbx,rax
6b01:	0f 80 49 01 00 00    	jo     6c50 <xstrtoumax+0x3e0>
6b07:	41 83 e8 01          	sub    r8d,0x1
6b0b:	75 eb                	jne    6af8 <xstrtoumax+0x288>
6b0d:	eb d6                	jmp    6ae5 <xstrtoumax+0x275>
6b0f:	41 b8 04 00 00 00    	mov    r8d,0x4
6b15:	45 31 c9             	xor    r9d,r9d
6b18:	48 89 d8             	mov    rax,rbx
6b1b:	48 f7 e6             	mul    rsi
6b1e:	48 89 c3             	mov    rbx,rax
6b21:	0f 80 fc 00 00 00    	jo     6c23 <xstrtoumax+0x3b3>
6b27:	41 83 e8 01          	sub    r8d,0x1
6b2b:	75 eb                	jne    6b18 <xstrtoumax+0x2a8>
6b2d:	eb b6                	jmp    6ae5 <xstrtoumax+0x275>
6b2f:	48 89 d8             	mov    rax,rbx
6b32:	48 f7 e6             	mul    rsi
6b35:	48 89 c3             	mov    rbx,rax
6b38:	0f 81 32 ff ff ff    	jno    6a70 <xstrtoumax+0x200>
6b3e:	bd 01 00 00 00       	mov    ebp,0x1
6b43:	48 83 cb ff          	or     rbx,0xffffffffffffffff
6b47:	e9 24 ff ff ff       	jmp    6a70 <xstrtoumax+0x200>
6b4c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
6b50:	41 b8 05 00 00 00    	mov    r8d,0x5
6b56:	45 31 c9             	xor    r9d,r9d
6b59:	48 89 d8             	mov    rax,rbx
6b5c:	48 f7 e6             	mul    rsi
6b5f:	48 89 c3             	mov    rbx,rax
6b62:	0f 80 f7 00 00 00    	jo     6c5f <xstrtoumax+0x3ef>
6b68:	41 83 e8 01          	sub    r8d,0x1
6b6c:	75 eb                	jne    6b59 <xstrtoumax+0x2e9>
6b6e:	e9 72 ff ff ff       	jmp    6ae5 <xstrtoumax+0x275>
6b73:	41 b8 06 00 00 00    	mov    r8d,0x6
6b79:	45 31 c9             	xor    r9d,r9d
6b7c:	48 89 d8             	mov    rax,rbx
6b7f:	48 f7 e6             	mul    rsi
6b82:	48 89 c3             	mov    rbx,rax
6b85:	0f 80 89 00 00 00    	jo     6c14 <xstrtoumax+0x3a4>
6b8b:	41 83 e8 01          	sub    r8d,0x1
6b8f:	75 eb                	jne    6b7c <xstrtoumax+0x30c>
6b91:	e9 4f ff ff ff       	jmp    6ae5 <xstrtoumax+0x275>
6b96:	ba 00 04 00 00       	mov    edx,0x400
6b9b:	48 89 d0             	mov    rax,rdx
6b9e:	48 f7 e3             	mul    rbx
6ba1:	70 9b                	jo     6b3e <xstrtoumax+0x2ce>
6ba3:	48 c1 e3 0a          	shl    rbx,0xa
6ba7:	e9 c4 fe ff ff       	jmp    6a70 <xstrtoumax+0x200>
6bac:	48 89 d8             	mov    rax,rbx
6baf:	48 f7 e6             	mul    rsi
6bb2:	0f 80 c5 00 00 00    	jo     6c7d <xstrtoumax+0x40d>
6bb8:	45 31 c0             	xor    r8d,r8d
6bbb:	48 f7 e6             	mul    rsi
6bbe:	0f 81 93 fe ff ff    	jno    6a57 <xstrtoumax+0x1e7>
6bc4:	41 b8 01 00 00 00    	mov    r8d,0x1
6bca:	48 83 c8 ff          	or     rax,0xffffffffffffffff
6bce:	e9 84 fe ff ff       	jmp    6a57 <xstrtoumax+0x1e7>
6bd3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
6bd8:	31 ff                	xor    edi,edi
6bda:	80 79 02 42          	cmp    BYTE PTR [rcx+0x2],0x42
6bde:	be 00 04 00 00       	mov    esi,0x400
6be3:	40 0f 94 c7          	sete   dil
6be7:	8d 7c 3f 01          	lea    edi,[rdi+rdi*1+0x1]
6beb:	e9 3a fe ff ff       	jmp    6a2a <xstrtoumax+0x1ba>
6bf0:	e8 cb aa ff ff       	call   16c0 <__stack_chk_fail@plt>
6bf5:	48 8d 0d 24 21 00 00 	lea    rcx,[rip+0x2124]        # 8d20 <__PRETTY_FUNCTION__.4162>
6bfc:	48 8d 35 fd 1f 00 00 	lea    rsi,[rip+0x1ffd]        # 8c00 <version_etc_copyright+0x40>
6c03:	48 8d 3d 16 20 00 00 	lea    rdi,[rip+0x2016]        # 8c20 <version_etc_copyright+0x60>
6c0a:	ba 54 00 00 00       	mov    edx,0x54
6c0f:	e8 0c ab ff ff       	call   1720 <__assert_fail@plt>
6c14:	41 b9 01 00 00 00    	mov    r9d,0x1
6c1a:	48 83 cb ff          	or     rbx,0xffffffffffffffff
6c1e:	e9 68 ff ff ff       	jmp    6b8b <xstrtoumax+0x31b>
6c23:	41 b9 01 00 00 00    	mov    r9d,0x1
6c29:	48 83 cb ff          	or     rbx,0xffffffffffffffff
6c2d:	e9 f5 fe ff ff       	jmp    6b27 <xstrtoumax+0x2b7>
6c32:	41 b8 01 00 00 00    	mov    r8d,0x1
6c38:	48 83 cb ff          	or     rbx,0xffffffffffffffff
6c3c:	e9 22 fe ff ff       	jmp    6a63 <xstrtoumax+0x1f3>
6c41:	48 83 c8 ff          	or     rax,0xffffffffffffffff
6c45:	41 b8 01 00 00 00    	mov    r8d,0x1
6c4b:	e9 07 fe ff ff       	jmp    6a57 <xstrtoumax+0x1e7>
6c50:	41 b9 01 00 00 00    	mov    r9d,0x1
6c56:	48 83 cb ff          	or     rbx,0xffffffffffffffff
6c5a:	e9 a8 fe ff ff       	jmp    6b07 <xstrtoumax+0x297>
6c5f:	41 b9 01 00 00 00    	mov    r9d,0x1
6c65:	48 83 cb ff          	or     rbx,0xffffffffffffffff
6c69:	e9 fa fe ff ff       	jmp    6b68 <xstrtoumax+0x2f8>
6c6e:	41 b9 01 00 00 00    	mov    r9d,0x1
6c74:	48 83 cb ff          	or     rbx,0xffffffffffffffff
6c78:	e9 62 fe ff ff       	jmp    6adf <xstrtoumax+0x26f>
6c7d:	41 b8 01 00 00 00    	mov    r8d,0x1
6c83:	48 83 c8 ff          	or     rax,0xffffffffffffffff
6c87:	e9 2f ff ff ff       	jmp    6bbb <xstrtoumax+0x34b>
6c8c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006c90 <rpl_mbrtowc>:
6c90:	41 55                	push   r13
6c92:	41 54                	push   r12
6c94:	49 89 f5             	mov    r13,rsi
6c97:	55                   	push   rbp
6c98:	53                   	push   rbx
6c99:	48 89 fb             	mov    rbx,rdi
6c9c:	49 89 d4             	mov    r12,rdx
6c9f:	48 83 ec 18          	sub    rsp,0x18
6ca3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
6caa:	00 00
6cac:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
6cb1:	31 c0                	xor    eax,eax
6cb3:	48 8d 44 24 04       	lea    rax,[rsp+0x4]
6cb8:	48 85 ff             	test   rdi,rdi
6cbb:	48 0f 44 d8          	cmove  rbx,rax
6cbf:	48 89 df             	mov    rdi,rbx
6cc2:	e8 19 aa ff ff       	call   16e0 <mbrtowc@plt>
6cc7:	48 83 f8 fd          	cmp    rax,0xfffffffffffffffd
6ccb:	48 89 c5             	mov    rbp,rax
6cce:	76 20                	jbe    6cf0 <rpl_mbrtowc+0x60>
6cd0:	4d 85 e4             	test   r12,r12
6cd3:	74 1b                	je     6cf0 <rpl_mbrtowc+0x60>
6cd5:	31 ff                	xor    edi,edi
6cd7:	e8 c4 00 00 00       	call   6da0 <hard_locale>
6cdc:	84 c0                	test   al,al
6cde:	75 10                	jne    6cf0 <rpl_mbrtowc+0x60>
6ce0:	41 0f b6 45 00       	movzx  eax,BYTE PTR [r13+0x0]
6ce5:	bd 01 00 00 00       	mov    ebp,0x1
6cea:	89 03                	mov    DWORD PTR [rbx],eax
6cec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
6cf0:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
6cf5:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
6cfc:	00 00
6cfe:	48 89 e8             	mov    rax,rbp
6d01:	75 0b                	jne    6d0e <rpl_mbrtowc+0x7e>
6d03:	48 83 c4 18          	add    rsp,0x18
6d07:	5b                   	pop    rbx
6d08:	5d                   	pop    rbp
6d09:	41 5c                	pop    r12
6d0b:	41 5d                	pop    r13
6d0d:	c3                   	ret
6d0e:	e8 ad a9 ff ff       	call   16c0 <__stack_chk_fail@plt>
6d13:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
6d1a:	00 00 00
6d1d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006d20 <close_stream>:
6d20:	41 54                	push   r12
6d22:	55                   	push   rbp
6d23:	48 89 fd             	mov    rbp,rdi
6d26:	53                   	push   rbx
6d27:	e8 14 a9 ff ff       	call   1640 <__fpending@plt>
6d2c:	8b 5d 00             	mov    ebx,DWORD PTR [rbp+0x0]
6d2f:	48 89 ef             	mov    rdi,rbp
6d32:	49 89 c4             	mov    r12,rax
6d35:	e8 06 01 00 00       	call   6e40 <rpl_fclose>
6d3a:	83 e3 20             	and    ebx,0x20
6d3d:	85 db                	test   ebx,ebx
6d3f:	75 17                	jne    6d58 <close_stream+0x38>
6d41:	85 c0                	test   eax,eax
6d43:	74 0a                	je     6d4f <close_stream+0x2f>
6d45:	4d 85 e4             	test   r12,r12
6d48:	b8 ff ff ff ff       	mov    eax,0xffffffff
6d4d:	74 39                	je     6d88 <close_stream+0x68>
6d4f:	5b                   	pop    rbx
6d50:	5d                   	pop    rbp
6d51:	41 5c                	pop    r12
6d53:	c3                   	ret
6d54:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
6d58:	85 c0                	test   eax,eax
6d5a:	75 1c                	jne    6d78 <close_stream+0x58>
6d5c:	e8 af a8 ff ff       	call   1610 <__errno_location@plt>
6d61:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
6d67:	b8 ff ff ff ff       	mov    eax,0xffffffff
6d6c:	5b                   	pop    rbx
6d6d:	5d                   	pop    rbp
6d6e:	41 5c                	pop    r12
6d70:	c3                   	ret
6d71:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
6d78:	5b                   	pop    rbx
6d79:	b8 ff ff ff ff       	mov    eax,0xffffffff
6d7e:	5d                   	pop    rbp
6d7f:	41 5c                	pop    r12
6d81:	c3                   	ret
6d82:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
6d88:	e8 83 a8 ff ff       	call   1610 <__errno_location@plt>
6d8d:	83 38 09             	cmp    DWORD PTR [rax],0x9
6d90:	5b                   	pop    rbx
6d91:	5d                   	pop    rbp
6d92:	41 5c                	pop    r12
6d94:	0f 95 c0             	setne  al
6d97:	0f b6 c0             	movzx  eax,al
6d9a:	f7 d8                	neg    eax
6d9c:	c3                   	ret
6d9d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006da0 <hard_locale>:
6da0:	48 83 ec 08          	sub    rsp,0x8
6da4:	31 f6                	xor    esi,esi
6da6:	e8 85 aa ff ff       	call   1830 <setlocale@plt>
6dab:	48 89 c2             	mov    rdx,rax
6dae:	b8 01 00 00 00       	mov    eax,0x1
6db3:	48 85 d2             	test   rdx,rdx
6db6:	74 1d                	je     6dd5 <hard_locale+0x35>
6db8:	48 8d 3d 9f 03 00 00 	lea    rdi,[rip+0x39f]        # 715e <_IO_stdin_used+0x15e>
6dbf:	b9 02 00 00 00       	mov    ecx,0x2
6dc4:	48 89 d6             	mov    rsi,rdx
6dc7:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
6dc9:	0f 97 c1             	seta   cl
6dcc:	80 d9 00             	sbb    cl,0x0
6dcf:	31 c0                	xor    eax,eax
6dd1:	84 c9                	test   cl,cl
6dd3:	75 0b                	jne    6de0 <hard_locale+0x40>
6dd5:	48 83 c4 08          	add    rsp,0x8
6dd9:	c3                   	ret
6dda:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
6de0:	48 8d 3d 44 1f 00 00 	lea    rdi,[rip+0x1f44]        # 8d2b <__PRETTY_FUNCTION__.4162+0xb>
6de7:	b9 06 00 00 00       	mov    ecx,0x6
6dec:	48 89 d6             	mov    rsi,rdx
6def:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
6df1:	0f 97 c0             	seta   al
6df4:	1c 00                	sbb    al,0x0
6df6:	84 c0                	test   al,al
6df8:	0f 95 c0             	setne  al
6dfb:	48 83 c4 08          	add    rsp,0x8
6dff:	c3                   	ret

0000000000006e00 <locale_charset>:
6e00:	48 83 ec 08          	sub    rsp,0x8
6e04:	bf 0e 00 00 00       	mov    edi,0xe
6e09:	e8 e2 a9 ff ff       	call   17f0 <nl_langinfo@plt>
6e0e:	48 85 c0             	test   rax,rax
6e11:	74 1d                	je     6e30 <locale_charset+0x30>
6e13:	80 38 00             	cmp    BYTE PTR [rax],0x0
6e16:	48 8d 15 14 1f 00 00 	lea    rdx,[rip+0x1f14]        # 8d31 <__PRETTY_FUNCTION__.4162+0x11>
6e1d:	48 0f 44 c2          	cmove  rax,rdx
6e21:	48 83 c4 08          	add    rsp,0x8
6e25:	c3                   	ret
6e26:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
6e2d:	00 00 00
6e30:	48 8d 05 fa 1e 00 00 	lea    rax,[rip+0x1efa]        # 8d31 <__PRETTY_FUNCTION__.4162+0x11>
6e37:	48 83 c4 08          	add    rsp,0x8
6e3b:	c3                   	ret
6e3c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006e40 <rpl_fclose>:
6e40:	41 54                	push   r12
6e42:	55                   	push   rbp
6e43:	53                   	push   rbx
6e44:	48 89 fb             	mov    rbx,rdi
6e47:	e8 74 a9 ff ff       	call   17c0 <fileno@plt>
6e4c:	85 c0                	test   eax,eax
6e4e:	48 89 df             	mov    rdi,rbx
6e51:	78 54                	js     6ea7 <rpl_fclose+0x67>
6e53:	e8 a8 a9 ff ff       	call   1800 <__freading@plt>
6e58:	85 c0                	test   eax,eax
6e5a:	75 2c                	jne    6e88 <rpl_fclose+0x48>
6e5c:	48 89 df             	mov    rdi,rbx
6e5f:	e8 5c 00 00 00       	call   6ec0 <rpl_fflush>
6e64:	85 c0                	test   eax,eax
6e66:	74 3c                	je     6ea4 <rpl_fclose+0x64>
6e68:	e8 a3 a7 ff ff       	call   1610 <__errno_location@plt>
6e6d:	44 8b 20             	mov    r12d,DWORD PTR [rax]
6e70:	48 89 df             	mov    rdi,rbx
6e73:	48 89 c5             	mov    rbp,rax
6e76:	e8 e5 a7 ff ff       	call   1660 <fclose@plt>
6e7b:	45 85 e4             	test   r12d,r12d
6e7e:	75 30                	jne    6eb0 <rpl_fclose+0x70>
6e80:	5b                   	pop    rbx
6e81:	5d                   	pop    rbp
6e82:	41 5c                	pop    r12
6e84:	c3                   	ret
6e85:	0f 1f 00             	nop    DWORD PTR [rax]
6e88:	48 89 df             	mov    rdi,rbx
6e8b:	e8 30 a9 ff ff       	call   17c0 <fileno@plt>
6e90:	31 f6                	xor    esi,esi
6e92:	ba 01 00 00 00       	mov    edx,0x1
6e97:	89 c7                	mov    edi,eax
6e99:	e8 72 a8 ff ff       	call   1710 <lseek@plt>
6e9e:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
6ea2:	75 b8                	jne    6e5c <rpl_fclose+0x1c>
6ea4:	48 89 df             	mov    rdi,rbx
6ea7:	5b                   	pop    rbx
6ea8:	5d                   	pop    rbp
6ea9:	41 5c                	pop    r12
6eab:	e9 b0 a7 ff ff       	jmp    1660 <fclose@plt>
6eb0:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
6eb4:	b8 ff ff ff ff       	mov    eax,0xffffffff
6eb9:	eb c5                	jmp    6e80 <rpl_fclose+0x40>
6ebb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000006ec0 <rpl_fflush>:
6ec0:	48 85 ff             	test   rdi,rdi
6ec3:	53                   	push   rbx
6ec4:	48 89 fb             	mov    rbx,rdi
6ec7:	74 11                	je     6eda <rpl_fflush+0x1a>
6ec9:	e8 32 a9 ff ff       	call   1800 <__freading@plt>
6ece:	85 c0                	test   eax,eax
6ed0:	74 08                	je     6eda <rpl_fflush+0x1a>
6ed2:	f7 03 00 01 00 00    	test   DWORD PTR [rbx],0x100
6ed8:	75 0e                	jne    6ee8 <rpl_fflush+0x28>
6eda:	48 89 df             	mov    rdi,rbx
6edd:	5b                   	pop    rbx
6ede:	e9 fd a8 ff ff       	jmp    17e0 <fflush@plt>
6ee3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
6ee8:	48 89 df             	mov    rdi,rbx
6eeb:	ba 01 00 00 00       	mov    edx,0x1
6ef0:	31 f6                	xor    esi,esi
6ef2:	e8 09 00 00 00       	call   6f00 <rpl_fseeko>
6ef7:	48 89 df             	mov    rdi,rbx
6efa:	5b                   	pop    rbx
6efb:	e9 e0 a8 ff ff       	jmp    17e0 <fflush@plt>

0000000000006f00 <rpl_fseeko>:
6f00:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
6f04:	48 39 47 10          	cmp    QWORD PTR [rdi+0x10],rax
6f08:	74 06                	je     6f10 <rpl_fseeko+0x10>
6f0a:	e9 51 a9 ff ff       	jmp    1860 <fseeko@plt>
6f0f:	90                   	nop
6f10:	48 8b 47 20          	mov    rax,QWORD PTR [rdi+0x20]
6f14:	48 39 47 28          	cmp    QWORD PTR [rdi+0x28],rax
6f18:	75 f0                	jne    6f0a <rpl_fseeko+0xa>
6f1a:	48 83 7f 48 00       	cmp    QWORD PTR [rdi+0x48],0x0
6f1f:	75 e9                	jne    6f0a <rpl_fseeko+0xa>
6f21:	41 54                	push   r12
6f23:	55                   	push   rbp
6f24:	41 89 d4             	mov    r12d,edx
6f27:	53                   	push   rbx
6f28:	48 89 f5             	mov    rbp,rsi
6f2b:	48 89 fb             	mov    rbx,rdi
6f2e:	e8 8d a8 ff ff       	call   17c0 <fileno@plt>
6f33:	44 89 e2             	mov    edx,r12d
6f36:	48 89 ee             	mov    rsi,rbp
6f39:	89 c7                	mov    edi,eax
6f3b:	e8 d0 a7 ff ff       	call   1710 <lseek@plt>
6f40:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
6f44:	74 0c                	je     6f52 <rpl_fseeko+0x52>
6f46:	83 23 ef             	and    DWORD PTR [rbx],0xffffffef
6f49:	48 89 83 90 00 00 00 	mov    QWORD PTR [rbx+0x90],rax
6f50:	31 c0                	xor    eax,eax
6f52:	5b                   	pop    rbx
6f53:	5d                   	pop    rbp
6f54:	41 5c                	pop    r12
6f56:	c3                   	ret
6f57:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
6f5e:	00 00

0000000000006f60 <__libc_csu_init>:
6f60:	41 57                	push   r15
6f62:	41 56                	push   r14
6f64:	49 89 d7             	mov    r15,rdx
6f67:	41 55                	push   r13
6f69:	41 54                	push   r12
6f6b:	4c 8d 25 1e 3b 20 00 	lea    r12,[rip+0x203b1e]        # 20aa90 <__frame_dummy_init_array_entry>
6f72:	55                   	push   rbp
6f73:	48 8d 2d 1e 3b 20 00 	lea    rbp,[rip+0x203b1e]        # 20aa98 <__init_array_end>
6f7a:	53                   	push   rbx
6f7b:	41 89 fd             	mov    r13d,edi
6f7e:	49 89 f6             	mov    r14,rsi
6f81:	4c 29 e5             	sub    rbp,r12
6f84:	48 83 ec 08          	sub    rsp,0x8
6f88:	48 c1 fd 03          	sar    rbp,0x3
6f8c:	e8 1f a6 ff ff       	call   15b0 <_init>
6f91:	48 85 ed             	test   rbp,rbp
6f94:	74 20                	je     6fb6 <__libc_csu_init+0x56>
6f96:	31 db                	xor    ebx,ebx
6f98:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
6f9f:	00
6fa0:	4c 89 fa             	mov    rdx,r15
6fa3:	4c 89 f6             	mov    rsi,r14
6fa6:	44 89 ef             	mov    edi,r13d
6fa9:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
6fad:	48 83 c3 01          	add    rbx,0x1
6fb1:	48 39 dd             	cmp    rbp,rbx
6fb4:	75 ea                	jne    6fa0 <__libc_csu_init+0x40>
6fb6:	48 83 c4 08          	add    rsp,0x8
6fba:	5b                   	pop    rbx
6fbb:	5d                   	pop    rbp
6fbc:	41 5c                	pop    r12
6fbe:	41 5d                	pop    r13
6fc0:	41 5e                	pop    r14
6fc2:	41 5f                	pop    r15
6fc4:	c3                   	ret
6fc5:	90                   	nop
6fc6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
6fcd:	00 00 00

0000000000006fd0 <__libc_csu_fini>:
6fd0:	f3 c3                	repz ret
6fd2:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
6fd9:	00 00 00
6fdc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006fe0 <atexit>:
6fe0:	48 8b 15 21 40 20 00 	mov    rdx,QWORD PTR [rip+0x204021]        # 20b008 <__dso_handle>
6fe7:	31 f6                	xor    esi,esi
6fe9:	e9 82 a8 ff ff       	jmp    1870 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000006ff0 <_fini>:
6ff0:	48 83 ec 08          	sub    rsp,0x8
6ff4:	48 83 c4 08          	add    rsp,0x8
6ff8:	c3                   	ret
