


Disassembly of section .init:

0000000000001cd0 <_init>:
1cd0:	48 83 ec 08          	sub    rsp,0x8
1cd4:	48 8b 05 fd 82 20 00 	mov    rax,QWORD PTR [rip+0x2082fd]        # 209fd8 <__gmon_start__>
1cdb:	48 85 c0             	test   rax,rax
1cde:	74 02                	je     1ce2 <_init+0x12>
1ce0:	ff d0                	call   rax
1ce2:	48 83 c4 08          	add    rsp,0x8
1ce6:	c3                   	ret

Disassembly of section .plt:

0000000000001cf0 <.plt>:
1cf0:	ff 35 3a 81 20 00    	push   QWORD PTR [rip+0x20813a]        # 209e30 <_GLOBAL_OFFSET_TABLE_+0x8>
1cf6:	ff 25 3c 81 20 00    	jmp    QWORD PTR [rip+0x20813c]        # 209e38 <_GLOBAL_OFFSET_TABLE_+0x10>
1cfc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001d00 <getenv@plt>:
1d00:	ff 25 3a 81 20 00    	jmp    QWORD PTR [rip+0x20813a]        # 209e40 <getenv@GLIBC_2.2.5>
1d06:	68 00 00 00 00       	push   0x0
1d0b:	e9 e0 ff ff ff       	jmp    1cf0 <.plt>

0000000000001d10 <abort@plt>:
1d10:	ff 25 32 81 20 00    	jmp    QWORD PTR [rip+0x208132]        # 209e48 <abort@GLIBC_2.2.5>
1d16:	68 01 00 00 00       	push   0x1
1d1b:	e9 d0 ff ff ff       	jmp    1cf0 <.plt>

0000000000001d20 <__errno_location@plt>:
1d20:	ff 25 2a 81 20 00    	jmp    QWORD PTR [rip+0x20812a]        # 209e50 <__errno_location@GLIBC_2.2.5>
1d26:	68 02 00 00 00       	push   0x2
1d2b:	e9 c0 ff ff ff       	jmp    1cf0 <.plt>

0000000000001d30 <strncmp@plt>:
1d30:	ff 25 22 81 20 00    	jmp    QWORD PTR [rip+0x208122]        # 209e58 <strncmp@GLIBC_2.2.5>
1d36:	68 03 00 00 00       	push   0x3
1d3b:	e9 b0 ff ff ff       	jmp    1cf0 <.plt>

0000000000001d40 <_exit@plt>:
1d40:	ff 25 1a 81 20 00    	jmp    QWORD PTR [rip+0x20811a]        # 209e60 <_exit@GLIBC_2.2.5>
1d46:	68 04 00 00 00       	push   0x4
1d4b:	e9 a0 ff ff ff       	jmp    1cf0 <.plt>

0000000000001d50 <__fpending@plt>:
1d50:	ff 25 12 81 20 00    	jmp    QWORD PTR [rip+0x208112]        # 209e68 <__fpending@GLIBC_2.2.5>
1d56:	68 05 00 00 00       	push   0x5
1d5b:	e9 90 ff ff ff       	jmp    1cf0 <.plt>

0000000000001d60 <puts@plt>:
1d60:	ff 25 0a 81 20 00    	jmp    QWORD PTR [rip+0x20810a]        # 209e70 <puts@GLIBC_2.2.5>
1d66:	68 06 00 00 00       	push   0x6
1d6b:	e9 80 ff ff ff       	jmp    1cf0 <.plt>

0000000000001d70 <textdomain@plt>:
1d70:	ff 25 02 81 20 00    	jmp    QWORD PTR [rip+0x208102]        # 209e78 <textdomain@GLIBC_2.2.5>
1d76:	68 07 00 00 00       	push   0x7
1d7b:	e9 70 ff ff ff       	jmp    1cf0 <.plt>

0000000000001d80 <fclose@plt>:
1d80:	ff 25 fa 80 20 00    	jmp    QWORD PTR [rip+0x2080fa]        # 209e80 <fclose@GLIBC_2.2.5>
1d86:	68 08 00 00 00       	push   0x8
1d8b:	e9 60 ff ff ff       	jmp    1cf0 <.plt>

0000000000001d90 <bindtextdomain@plt>:
1d90:	ff 25 f2 80 20 00    	jmp    QWORD PTR [rip+0x2080f2]        # 209e88 <bindtextdomain@GLIBC_2.2.5>
1d96:	68 09 00 00 00       	push   0x9
1d9b:	e9 50 ff ff ff       	jmp    1cf0 <.plt>

0000000000001da0 <dcgettext@plt>:
1da0:	ff 25 ea 80 20 00    	jmp    QWORD PTR [rip+0x2080ea]        # 209e90 <dcgettext@GLIBC_2.2.5>
1da6:	68 0a 00 00 00       	push   0xa
1dab:	e9 40 ff ff ff       	jmp    1cf0 <.plt>

0000000000001db0 <__ctype_get_mb_cur_max@plt>:
1db0:	ff 25 e2 80 20 00    	jmp    QWORD PTR [rip+0x2080e2]        # 209e98 <__ctype_get_mb_cur_max@GLIBC_2.2.5>
1db6:	68 0b 00 00 00       	push   0xb
1dbb:	e9 30 ff ff ff       	jmp    1cf0 <.plt>

0000000000001dc0 <strlen@plt>:
1dc0:	ff 25 da 80 20 00    	jmp    QWORD PTR [rip+0x2080da]        # 209ea0 <strlen@GLIBC_2.2.5>
1dc6:	68 0c 00 00 00       	push   0xc
1dcb:	e9 20 ff ff ff       	jmp    1cf0 <.plt>

0000000000001dd0 <__stack_chk_fail@plt>:
1dd0:	ff 25 d2 80 20 00    	jmp    QWORD PTR [rip+0x2080d2]        # 209ea8 <__stack_chk_fail@GLIBC_2.4>
1dd6:	68 0d 00 00 00       	push   0xd
1ddb:	e9 10 ff ff ff       	jmp    1cf0 <.plt>

0000000000001de0 <getopt_long@plt>:
1de0:	ff 25 ca 80 20 00    	jmp    QWORD PTR [rip+0x2080ca]        # 209eb0 <getopt_long@GLIBC_2.2.5>
1de6:	68 0e 00 00 00       	push   0xe
1deb:	e9 00 ff ff ff       	jmp    1cf0 <.plt>

0000000000001df0 <mbrtowc@plt>:
1df0:	ff 25 c2 80 20 00    	jmp    QWORD PTR [rip+0x2080c2]        # 209eb8 <mbrtowc@GLIBC_2.2.5>
1df6:	68 0f 00 00 00       	push   0xf
1dfb:	e9 f0 fe ff ff       	jmp    1cf0 <.plt>

0000000000001e00 <dup2@plt>:
1e00:	ff 25 ba 80 20 00    	jmp    QWORD PTR [rip+0x2080ba]        # 209ec0 <dup2@GLIBC_2.2.5>
1e06:	68 10 00 00 00       	push   0x10
1e0b:	e9 e0 fe ff ff       	jmp    1cf0 <.plt>

0000000000001e10 <strrchr@plt>:
1e10:	ff 25 b2 80 20 00    	jmp    QWORD PTR [rip+0x2080b2]        # 209ec8 <strrchr@GLIBC_2.2.5>
1e16:	68 11 00 00 00       	push   0x11
1e1b:	e9 d0 fe ff ff       	jmp    1cf0 <.plt>

0000000000001e20 <lseek@plt>:
1e20:	ff 25 aa 80 20 00    	jmp    QWORD PTR [rip+0x2080aa]        # 209ed0 <lseek@GLIBC_2.2.5>
1e26:	68 12 00 00 00       	push   0x12
1e2b:	e9 c0 fe ff ff       	jmp    1cf0 <.plt>

0000000000001e30 <fnmatch@plt>:
1e30:	ff 25 a2 80 20 00    	jmp    QWORD PTR [rip+0x2080a2]        # 209ed8 <fnmatch@GLIBC_2.2.5>
1e36:	68 13 00 00 00       	push   0x13
1e3b:	e9 b0 fe ff ff       	jmp    1cf0 <.plt>

0000000000001e40 <memset@plt>:
1e40:	ff 25 9a 80 20 00    	jmp    QWORD PTR [rip+0x20809a]        # 209ee0 <memset@GLIBC_2.2.5>
1e46:	68 14 00 00 00       	push   0x14
1e4b:	e9 a0 fe ff ff       	jmp    1cf0 <.plt>

0000000000001e50 <freopen@plt>:
1e50:	ff 25 92 80 20 00    	jmp    QWORD PTR [rip+0x208092]        # 209ee8 <freopen@GLIBC_2.2.5>
1e56:	68 15 00 00 00       	push   0x15
1e5b:	e9 90 fe ff ff       	jmp    1cf0 <.plt>

0000000000001e60 <close@plt>:
1e60:	ff 25 8a 80 20 00    	jmp    QWORD PTR [rip+0x20808a]        # 209ef0 <close@GLIBC_2.2.5>
1e66:	68 16 00 00 00       	push   0x16
1e6b:	e9 80 fe ff ff       	jmp    1cf0 <.plt>

0000000000001e70 <strndup@plt>:
1e70:	ff 25 82 80 20 00    	jmp    QWORD PTR [rip+0x208082]        # 209ef8 <strndup@GLIBC_2.2.5>
1e76:	68 17 00 00 00       	push   0x17
1e7b:	e9 70 fe ff ff       	jmp    1cf0 <.plt>

0000000000001e80 <memcmp@plt>:
1e80:	ff 25 7a 80 20 00    	jmp    QWORD PTR [rip+0x20807a]        # 209f00 <memcmp@GLIBC_2.2.5>
1e86:	68 18 00 00 00       	push   0x18
1e8b:	e9 60 fe ff ff       	jmp    1cf0 <.plt>

0000000000001e90 <fputs_unlocked@plt>:
1e90:	ff 25 72 80 20 00    	jmp    QWORD PTR [rip+0x208072]        # 209f08 <fputs_unlocked@GLIBC_2.2.5>
1e96:	68 19 00 00 00       	push   0x19
1e9b:	e9 50 fe ff ff       	jmp    1cf0 <.plt>

0000000000001ea0 <calloc@plt>:
1ea0:	ff 25 6a 80 20 00    	jmp    QWORD PTR [rip+0x20806a]        # 209f10 <calloc@GLIBC_2.2.5>
1ea6:	68 1a 00 00 00       	push   0x1a
1eab:	e9 40 fe ff ff       	jmp    1cf0 <.plt>

0000000000001eb0 <__getdelim@plt>:
1eb0:	ff 25 62 80 20 00    	jmp    QWORD PTR [rip+0x208062]        # 209f18 <__getdelim@GLIBC_2.2.5>
1eb6:	68 1b 00 00 00       	push   0x1b
1ebb:	e9 30 fe ff ff       	jmp    1cf0 <.plt>

0000000000001ec0 <strcmp@plt>:
1ec0:	ff 25 5a 80 20 00    	jmp    QWORD PTR [rip+0x20805a]        # 209f20 <strcmp@GLIBC_2.2.5>
1ec6:	68 1c 00 00 00       	push   0x1c
1ecb:	e9 20 fe ff ff       	jmp    1cf0 <.plt>

0000000000001ed0 <memcpy@plt>:
1ed0:	ff 25 52 80 20 00    	jmp    QWORD PTR [rip+0x208052]        # 209f28 <memcpy@GLIBC_2.14>
1ed6:	68 1d 00 00 00       	push   0x1d
1edb:	e9 10 fe ff ff       	jmp    1cf0 <.plt>

0000000000001ee0 <fileno@plt>:
1ee0:	ff 25 4a 80 20 00    	jmp    QWORD PTR [rip+0x20804a]        # 209f30 <fileno@GLIBC_2.2.5>
1ee6:	68 1e 00 00 00       	push   0x1e
1eeb:	e9 00 fe ff ff       	jmp    1cf0 <.plt>

0000000000001ef0 <fflush@plt>:
1ef0:	ff 25 42 80 20 00    	jmp    QWORD PTR [rip+0x208042]        # 209f38 <fflush@GLIBC_2.2.5>
1ef6:	68 1f 00 00 00       	push   0x1f
1efb:	e9 f0 fd ff ff       	jmp    1cf0 <.plt>

0000000000001f00 <nl_langinfo@plt>:
1f00:	ff 25 3a 80 20 00    	jmp    QWORD PTR [rip+0x20803a]        # 209f40 <nl_langinfo@GLIBC_2.2.5>
1f06:	68 20 00 00 00       	push   0x20
1f0b:	e9 e0 fd ff ff       	jmp    1cf0 <.plt>

0000000000001f10 <__freading@plt>:
1f10:	ff 25 32 80 20 00    	jmp    QWORD PTR [rip+0x208032]        # 209f48 <__freading@GLIBC_2.2.5>
1f16:	68 21 00 00 00       	push   0x21
1f1b:	e9 d0 fd ff ff       	jmp    1cf0 <.plt>

0000000000001f20 <fwrite_unlocked@plt>:
1f20:	ff 25 2a 80 20 00    	jmp    QWORD PTR [rip+0x20802a]        # 209f50 <fwrite_unlocked@GLIBC_2.2.5>
1f26:	68 22 00 00 00       	push   0x22
1f2b:	e9 c0 fd ff ff       	jmp    1cf0 <.plt>

0000000000001f30 <realloc@plt>:
1f30:	ff 25 22 80 20 00    	jmp    QWORD PTR [rip+0x208022]        # 209f58 <realloc@GLIBC_2.2.5>
1f36:	68 23 00 00 00       	push   0x23
1f3b:	e9 b0 fd ff ff       	jmp    1cf0 <.plt>

0000000000001f40 <setlocale@plt>:
1f40:	ff 25 1a 80 20 00    	jmp    QWORD PTR [rip+0x20801a]        # 209f60 <setlocale@GLIBC_2.2.5>
1f46:	68 24 00 00 00       	push   0x24
1f4b:	e9 a0 fd ff ff       	jmp    1cf0 <.plt>

0000000000001f50 <__printf_chk@plt>:
1f50:	ff 25 12 80 20 00    	jmp    QWORD PTR [rip+0x208012]        # 209f68 <__printf_chk@GLIBC_2.3.4>
1f56:	68 25 00 00 00       	push   0x25
1f5b:	e9 90 fd ff ff       	jmp    1cf0 <.plt>

0000000000001f60 <error@plt>:
1f60:	ff 25 0a 80 20 00    	jmp    QWORD PTR [rip+0x20800a]        # 209f70 <error@GLIBC_2.2.5>
1f66:	68 26 00 00 00       	push   0x26
1f6b:	e9 80 fd ff ff       	jmp    1cf0 <.plt>

0000000000001f70 <open@plt>:
1f70:	ff 25 02 80 20 00    	jmp    QWORD PTR [rip+0x208002]        # 209f78 <open@GLIBC_2.2.5>
1f76:	68 27 00 00 00       	push   0x27
1f7b:	e9 70 fd ff ff       	jmp    1cf0 <.plt>

0000000000001f80 <fseeko@plt>:
1f80:	ff 25 fa 7f 20 00    	jmp    QWORD PTR [rip+0x207ffa]        # 209f80 <fseeko@GLIBC_2.2.5>
1f86:	68 28 00 00 00       	push   0x28
1f8b:	e9 60 fd ff ff       	jmp    1cf0 <.plt>

0000000000001f90 <__cxa_atexit@plt>:
1f90:	ff 25 f2 7f 20 00    	jmp    QWORD PTR [rip+0x207ff2]        # 209f88 <__cxa_atexit@GLIBC_2.2.5>
1f96:	68 29 00 00 00       	push   0x29
1f9b:	e9 50 fd ff ff       	jmp    1cf0 <.plt>

0000000000001fa0 <exit@plt>:
1fa0:	ff 25 ea 7f 20 00    	jmp    QWORD PTR [rip+0x207fea]        # 209f90 <exit@GLIBC_2.2.5>
1fa6:	68 2a 00 00 00       	push   0x2a
1fab:	e9 40 fd ff ff       	jmp    1cf0 <.plt>

0000000000001fb0 <fwrite@plt>:
1fb0:	ff 25 e2 7f 20 00    	jmp    QWORD PTR [rip+0x207fe2]        # 209f98 <fwrite@GLIBC_2.2.5>
1fb6:	68 2b 00 00 00       	push   0x2b
1fbb:	e9 30 fd ff ff       	jmp    1cf0 <.plt>

0000000000001fc0 <__fprintf_chk@plt>:
1fc0:	ff 25 da 7f 20 00    	jmp    QWORD PTR [rip+0x207fda]        # 209fa0 <__fprintf_chk@GLIBC_2.3.4>
1fc6:	68 2c 00 00 00       	push   0x2c
1fcb:	e9 20 fd ff ff       	jmp    1cf0 <.plt>

0000000000001fd0 <mbsinit@plt>:
1fd0:	ff 25 d2 7f 20 00    	jmp    QWORD PTR [rip+0x207fd2]        # 209fa8 <mbsinit@GLIBC_2.2.5>
1fd6:	68 2d 00 00 00       	push   0x2d
1fdb:	e9 10 fd ff ff       	jmp    1cf0 <.plt>

0000000000001fe0 <iswprint@plt>:
1fe0:	ff 25 ca 7f 20 00    	jmp    QWORD PTR [rip+0x207fca]        # 209fb0 <iswprint@GLIBC_2.2.5>
1fe6:	68 2e 00 00 00       	push   0x2e
1feb:	e9 00 fd ff ff       	jmp    1cf0 <.plt>

0000000000001ff0 <__ctype_b_loc@plt>:
1ff0:	ff 25 c2 7f 20 00    	jmp    QWORD PTR [rip+0x207fc2]        # 209fb8 <__ctype_b_loc@GLIBC_2.3>
1ff6:	68 2f 00 00 00       	push   0x2f
1ffb:	e9 f0 fc ff ff       	jmp    1cf0 <.plt>

Disassembly of section .plt.got:

0000000000002000 <free@plt>:
2000:	ff 25 ba 7f 20 00    	jmp    QWORD PTR [rip+0x207fba]        # 209fc0 <free@GLIBC_2.2.5>
2006:	66 90                	xchg   ax,ax

0000000000002008 <malloc@plt>:
2008:	ff 25 d2 7f 20 00    	jmp    QWORD PTR [rip+0x207fd2]        # 209fe0 <malloc@GLIBC_2.2.5>
200e:	66 90                	xchg   ax,ax

0000000000002010 <__cxa_finalize@plt>:
2010:	ff 25 da 7f 20 00    	jmp    QWORD PTR [rip+0x207fda]        # 209ff0 <__cxa_finalize@GLIBC_2.2.5>
2016:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000002020 <main>:
2020:	41 56                	push   r14
2022:	41 55                	push   r13
2024:	41 bd 02 00 00 00    	mov    r13d,0x2
202a:	41 54                	push   r12
202c:	55                   	push   rbp
202d:	89 fd                	mov    ebp,edi
202f:	53                   	push   rbx
2030:	48 8b 3e             	mov    rdi,QWORD PTR [rsi]
2033:	48 89 f3             	mov    rbx,rsi
2036:	45 31 e4             	xor    r12d,r12d
2039:	e8 d2 14 00 00       	call   3510 <set_program_name>
203e:	48 8d 35 80 42 00 00 	lea    rsi,[rip+0x4280]        # 62c5 <_IO_stdin_used+0x125>
2045:	bf 06 00 00 00       	mov    edi,0x6
204a:	e8 f1 fe ff ff       	call   1f40 <setlocale@plt>
204f:	48 8d 35 83 42 00 00 	lea    rsi,[rip+0x4283]        # 62d9 <_IO_stdin_used+0x139>
2056:	48 8d 3d 1c 42 00 00 	lea    rdi,[rip+0x421c]        # 6279 <_IO_stdin_used+0xd9>
205d:	e8 2e fd ff ff       	call   1d90 <bindtextdomain@plt>
2062:	48 8d 3d 10 42 00 00 	lea    rdi,[rip+0x4210]        # 6279 <_IO_stdin_used+0xd9>
2069:	e8 02 fd ff ff       	call   1d70 <textdomain@plt>
206e:	48 8d 3d 3b 11 00 00 	lea    rdi,[rip+0x113b]        # 31b0 <close_stdout>
2075:	e8 06 41 00 00       	call   6180 <atexit>
207a:	48 8d 0d df 77 20 00 	lea    rcx,[rip+0x2077df]        # 209860 <long_options>
2081:	48 8d 15 78 42 00 00 	lea    rdx,[rip+0x4278]        # 6300 <_IO_stdin_used+0x160>
2088:	45 31 c0             	xor    r8d,r8d
208b:	48 89 de             	mov    rsi,rbx
208e:	89 ef                	mov    edi,ebp
2090:	e8 4b fd ff ff       	call   1de0 <getopt_long@plt>
2095:	83 f8 ff             	cmp    eax,0xffffffff
2098:	0f 84 7d 00 00 00    	je     211b <main+0xfb>
209e:	83 f8 62             	cmp    eax,0x62
20a1:	74 5d                	je     2100 <main+0xe0>
20a3:	7e 1b                	jle    20c0 <main+0xa0>
20a5:	83 f8 63             	cmp    eax,0x63
20a8:	74 66                	je     2110 <main+0xf0>
20aa:	83 f8 70             	cmp    eax,0x70
20ad:	0f 85 35 03 00 00    	jne    23e8 <main+0x3c8>
20b3:	41 bc 01 00 00 00    	mov    r12d,0x1
20b9:	eb bf                	jmp    207a <main+0x5a>
20bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
20c0:	3d 7d ff ff ff       	cmp    eax,0xffffff7d
20c5:	0f 85 d6 02 00 00    	jne    23a1 <main+0x381>
20cb:	48 8b 3d d6 7f 20 00 	mov    rdi,QWORD PTR [rip+0x207fd6]        # 20a0a8 <stdout@@GLIBC_2.2.5>
20d2:	48 8b 0d 37 7f 20 00 	mov    rcx,QWORD PTR [rip+0x207f37]        # 20a010 <Version>
20d9:	4c 8d 05 11 42 00 00 	lea    r8,[rip+0x4211]        # 62f1 <_IO_stdin_used+0x151>
20e0:	48 8d 15 8e 41 00 00 	lea    rdx,[rip+0x418e]        # 6275 <_IO_stdin_used+0xd5>
20e7:	48 8d 35 e9 40 00 00 	lea    rsi,[rip+0x40e9]        # 61d7 <_IO_stdin_used+0x37>
20ee:	45 31 c9             	xor    r9d,r9d
20f1:	31 c0                	xor    eax,eax
20f3:	e8 08 36 00 00       	call   5700 <version_etc>
20f8:	31 ff                	xor    edi,edi
20fa:	e8 a1 fe ff ff       	call   1fa0 <exit@plt>
20ff:	90                   	nop
2100:	45 31 ed             	xor    r13d,r13d
2103:	e9 72 ff ff ff       	jmp    207a <main+0x5a>
2108:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
210f:	00
2110:	41 bd 01 00 00 00    	mov    r13d,0x1
2116:	e9 5f ff ff ff       	jmp    207a <main+0x5a>
211b:	48 63 05 96 7f 20 00 	movsxd rax,DWORD PTR [rip+0x207f96]        # 20a0b8 <optind@@GLIBC_2.2.5>
2122:	29 c5                	sub    ebp,eax
2124:	41 83 fd 02          	cmp    r13d,0x2
2128:	48 8d 1c c3          	lea    rbx,[rbx+rax*8]
212c:	74 09                	je     2137 <main+0x117>
212e:	45 84 e4             	test   r12b,r12b
2131:	0f 85 df 02 00 00    	jne    2416 <main+0x3f6>
2137:	44 89 e0             	mov    eax,r12d
213a:	83 f0 01             	xor    eax,0x1
213d:	0f b6 c0             	movzx  eax,al
2140:	39 e8                	cmp    eax,ebp
2142:	0f 8c 67 02 00 00    	jl     23af <main+0x38f>
2148:	45 84 e4             	test   r12b,r12b
214b:	74 4a                	je     2197 <main+0x177>
214d:	48 8d 1d 8c 47 00 00 	lea    rbx,[rip+0x478c]        # 68e0 <G_line>
2154:	48 83 cd ff          	or     rbp,0xffffffffffffffff
2158:	49 89 dd             	mov    r13,rbx
215b:	eb 1b                	jmp    2178 <main+0x158>
215d:	4c 89 ef             	mov    rdi,r13
2160:	e8 fb fb ff ff       	call   1d60 <puts@plt>
2165:	31 c0                	xor    eax,eax
2167:	4c 89 ef             	mov    rdi,r13
216a:	48 89 e9             	mov    rcx,rbp
216d:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
216f:	48 89 c8             	mov    rax,rcx
2172:	48 f7 d0             	not    rax
2175:	49 01 c5             	add    r13,rax
2178:	4c 89 e8             	mov    rax,r13
217b:	48 29 d8             	sub    rax,rbx
217e:	48 3d c3 10 00 00    	cmp    rax,0x10c3
2184:	76 d7                	jbe    215d <main+0x13d>
2186:	41 83 f4 01          	xor    r12d,0x1
218a:	5b                   	pop    rbx
218b:	41 0f b6 c4          	movzx  eax,r12b
218f:	5d                   	pop    rbp
2190:	41 5c                	pop    r12
2192:	41 5d                	pop    r13
2194:	41 5e                	pop    r14
2196:	c3                   	ret
2197:	41 83 fd 02          	cmp    r13d,0x2
219b:	0f 84 60 01 00 00    	je     2301 <main+0x2e1>
21a1:	4c 8b 05 18 7e 20 00 	mov    r8,QWORD PTR [rip+0x207e18]        # 209fc0 <free@GLIBC_2.2.5>
21a8:	48 8b 0d 31 7e 20 00 	mov    rcx,QWORD PTR [rip+0x207e31]        # 209fe0 <malloc@GLIBC_2.2.5>
21af:	48 8d 3d 4a 7f 20 00 	lea    rdi,[rip+0x207f4a]        # 20a100 <lsc_obstack>
21b6:	31 d2                	xor    edx,edx
21b8:	31 f6                	xor    esi,esi
21ba:	e8 11 3c 00 00       	call   5dd0 <_obstack_begin>
21bf:	85 ed                	test   ebp,ebp
21c1:	0f 84 29 01 00 00    	je     22f0 <main+0x2d0>
21c7:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
21ca:	48 8d 35 39 58 00 00 	lea    rsi,[rip+0x5839]        # 7a0a <G_line+0x112a>
21d1:	48 89 df             	mov    rdi,rbx
21d4:	e8 e7 fc ff ff       	call   1ec0 <strcmp@plt>
21d9:	85 c0                	test   eax,eax
21db:	74 1f                	je     21fc <main+0x1dc>
21dd:	48 8b 15 cc 7e 20 00 	mov    rdx,QWORD PTR [rip+0x207ecc]        # 20a0b0 <stdin@@GLIBC_2.2.5>
21e4:	48 8d 35 c8 57 00 00 	lea    rsi,[rip+0x57c8]        # 79b3 <G_line+0x10d3>
21eb:	48 89 df             	mov    rdi,rbx
21ee:	e8 6d 11 00 00       	call   3360 <freopen_safer>
21f3:	48 85 c0             	test   rax,rax
21f6:	0f 84 68 01 00 00    	je     2364 <main+0x344>
21fc:	48 8b 3d ad 7e 20 00 	mov    rdi,QWORD PTR [rip+0x207ead]        # 20a0b0 <stdin@@GLIBC_2.2.5>
2203:	48 89 de             	mov    rsi,rbx
2206:	e8 95 05 00 00       	call   27a0 <dc_parse_stream>
220b:	48 8b 3d 9e 7e 20 00 	mov    rdi,QWORD PTR [rip+0x207e9e]        # 20a0b0 <stdin@@GLIBC_2.2.5>
2212:	89 c5                	mov    ebp,eax
2214:	e8 f7 38 00 00       	call   5b10 <rpl_fclose>
2219:	85 c0                	test   eax,eax
221b:	0f 85 43 01 00 00    	jne    2364 <main+0x344>
2221:	41 89 ec             	mov    r12d,ebp
2224:	45 84 e4             	test   r12b,r12b
2227:	0f 84 59 ff ff ff    	je     2186 <main+0x166>
222d:	48 8b 05 e4 7e 20 00 	mov    rax,QWORD PTR [rip+0x207ee4]        # 20a118 <lsc_obstack+0x18>
2234:	48 8b 2d d5 7e 20 00 	mov    rbp,QWORD PTR [rip+0x207ed5]        # 20a110 <lsc_obstack+0x10>
223b:	48 89 c3             	mov    rbx,rax
223e:	48 29 eb             	sub    rbx,rbp
2241:	48 39 e8             	cmp    rax,rbp
2244:	0f 84 4b 01 00 00    	je     2395 <main+0x375>
224a:	48 8b 15 df 7e 20 00 	mov    rdx,QWORD PTR [rip+0x207edf]        # 20a130 <lsc_obstack+0x30>
2251:	48 8b 0d c8 7e 20 00 	mov    rcx,QWORD PTR [rip+0x207ec8]        # 20a120 <lsc_obstack+0x20>
2258:	48 01 d0             	add    rax,rdx
225b:	48 f7 d2             	not    rdx
225e:	48 89 ce             	mov    rsi,rcx
2261:	48 21 d0             	and    rax,rdx
2264:	48 8b 15 9d 7e 20 00 	mov    rdx,QWORD PTR [rip+0x207e9d]        # 20a108 <lsc_obstack+0x8>
226b:	48 89 05 a6 7e 20 00 	mov    QWORD PTR [rip+0x207ea6],rax        # 20a118 <lsc_obstack+0x18>
2272:	48 29 d6             	sub    rsi,rdx
2275:	48 29 d0             	sub    rax,rdx
2278:	48 39 f0             	cmp    rax,rsi
227b:	76 07                	jbe    2284 <main+0x264>
227d:	48 89 0d 94 7e 20 00 	mov    QWORD PTR [rip+0x207e94],rcx        # 20a118 <lsc_obstack+0x18>
2284:	48 8b 05 8d 7e 20 00 	mov    rax,QWORD PTR [rip+0x207e8d]        # 20a118 <lsc_obstack+0x18>
228b:	4c 8d 35 31 40 00 00 	lea    r14,[rip+0x4031]        # 62c3 <_IO_stdin_used+0x123>
2292:	45 85 ed             	test   r13d,r13d
2295:	48 8b 35 0c 7e 20 00 	mov    rsi,QWORD PTR [rip+0x207e0c]        # 20a0a8 <stdout@@GLIBC_2.2.5>
229c:	48 8d 3d 23 40 00 00 	lea    rdi,[rip+0x4023]        # 62c6 <_IO_stdin_used+0x126>
22a3:	48 89 05 66 7e 20 00 	mov    QWORD PTR [rip+0x207e66],rax        # 20a110 <lsc_obstack+0x10>
22aa:	48 8d 05 f1 3f 00 00 	lea    rax,[rip+0x3ff1]        # 62a2 <_IO_stdin_used+0x102>
22b1:	4c 0f 44 f0          	cmove  r14,rax
22b5:	48 8d 05 fb 3f 00 00 	lea    rax,[rip+0x3ffb]        # 62b7 <_IO_stdin_used+0x117>
22bc:	48 0f 44 f8          	cmove  rdi,rax
22c0:	e8 cb fb ff ff       	call   1e90 <fputs_unlocked@plt>
22c5:	48 8b 0d dc 7d 20 00 	mov    rcx,QWORD PTR [rip+0x207ddc]        # 20a0a8 <stdout@@GLIBC_2.2.5>
22cc:	48 89 ef             	mov    rdi,rbp
22cf:	48 89 da             	mov    rdx,rbx
22d2:	be 01 00 00 00       	mov    esi,0x1
22d7:	e8 44 fc ff ff       	call   1f20 <fwrite_unlocked@plt>
22dc:	48 8b 35 c5 7d 20 00 	mov    rsi,QWORD PTR [rip+0x207dc5]        # 20a0a8 <stdout@@GLIBC_2.2.5>
22e3:	4c 89 f7             	mov    rdi,r14
22e6:	e8 a5 fb ff ff       	call   1e90 <fputs_unlocked@plt>
22eb:	e9 96 fe ff ff       	jmp    2186 <main+0x166>
22f0:	31 f6                	xor    esi,esi
22f2:	31 ff                	xor    edi,edi
22f4:	e8 a7 04 00 00       	call   27a0 <dc_parse_stream>
22f9:	41 89 c4             	mov    r12d,eax
22fc:	e9 23 ff ff ff       	jmp    2224 <main+0x204>
2301:	48 8d 3d fc 3f 00 00 	lea    rdi,[rip+0x3ffc]        # 6304 <_IO_stdin_used+0x164>
2308:	e8 f3 f9 ff ff       	call   1d00 <getenv@plt>
230d:	48 85 c0             	test   rax,rax
2310:	0f 84 dc 00 00 00    	je     23f2 <main+0x3d2>
2316:	80 38 00             	cmp    BYTE PTR [rax],0x0
2319:	0f 84 d3 00 00 00    	je     23f2 <main+0x3d2>
231f:	48 89 c7             	mov    rdi,rax
2322:	41 bd 01 00 00 00    	mov    r13d,0x1
2328:	e8 33 0f 00 00       	call   3260 <last_component>
232d:	48 8d 35 d7 3f 00 00 	lea    rsi,[rip+0x3fd7]        # 630b <_IO_stdin_used+0x16b>
2334:	48 89 c7             	mov    rdi,rax
2337:	49 89 c6             	mov    r14,rax
233a:	e8 81 fb ff ff       	call   1ec0 <strcmp@plt>
233f:	85 c0                	test   eax,eax
2341:	0f 84 5a fe ff ff    	je     21a1 <main+0x181>
2347:	48 8d 35 bc 3f 00 00 	lea    rsi,[rip+0x3fbc]        # 630a <_IO_stdin_used+0x16a>
234e:	4c 89 f7             	mov    rdi,r14
2351:	45 31 ed             	xor    r13d,r13d
2354:	e8 67 fb ff ff       	call   1ec0 <strcmp@plt>
2359:	85 c0                	test   eax,eax
235b:	41 0f 94 c5          	sete   r13b
235f:	e9 3d fe ff ff       	jmp    21a1 <main+0x181>
2364:	48 89 da             	mov    rdx,rbx
2367:	31 ff                	xor    edi,edi
2369:	be 03 00 00 00       	mov    esi,0x3
236e:	e8 dd 2c 00 00       	call   5050 <quotearg_n_style_colon>
2373:	48 89 c3             	mov    rbx,rax
2376:	e8 a5 f9 ff ff       	call   1d20 <__errno_location@plt>
237b:	8b 30                	mov    esi,DWORD PTR [rax]
237d:	48 8d 15 35 56 00 00 	lea    rdx,[rip+0x5635]        # 79b9 <G_line+0x10d9>
2384:	48 89 d9             	mov    rcx,rbx
2387:	31 ff                	xor    edi,edi
2389:	31 c0                	xor    eax,eax
238b:	e8 d0 fb ff ff       	call   1f60 <error@plt>
2390:	e9 f1 fd ff ff       	jmp    2186 <main+0x166>
2395:	80 0d b4 7d 20 00 02 	or     BYTE PTR [rip+0x207db4],0x2        # 20a150 <lsc_obstack+0x50>
239c:	e9 a9 fe ff ff       	jmp    224a <main+0x22a>
23a1:	3d 7e ff ff ff       	cmp    eax,0xffffff7e
23a6:	75 40                	jne    23e8 <main+0x3c8>
23a8:	31 ff                	xor    edi,edi
23aa:	e8 21 0a 00 00       	call   2dd0 <usage>
23af:	45 84 e4             	test   r12b,r12b
23b2:	0f 85 81 00 00 00    	jne    2439 <main+0x419>
23b8:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
23bc:	e8 5f 2e 00 00       	call   5220 <quote>
23c1:	48 8d 35 47 3f 00 00 	lea    rsi,[rip+0x3f47]        # 630f <_IO_stdin_used+0x16f>
23c8:	48 89 c3             	mov    rbx,rax
23cb:	ba 05 00 00 00       	mov    edx,0x5
23d0:	31 ff                	xor    edi,edi
23d2:	e8 c9 f9 ff ff       	call   1da0 <dcgettext@plt>
23d7:	48 89 d9             	mov    rcx,rbx
23da:	48 89 c2             	mov    rdx,rax
23dd:	31 f6                	xor    esi,esi
23df:	31 ff                	xor    edi,edi
23e1:	31 c0                	xor    eax,eax
23e3:	e8 78 fb ff ff       	call   1f60 <error@plt>
23e8:	bf 01 00 00 00       	mov    edi,0x1
23ed:	e8 de 09 00 00       	call   2dd0 <usage>
23f2:	48 8d 35 67 44 00 00 	lea    rsi,[rip+0x4467]        # 6860 <_IO_stdin_used+0x6c0>
23f9:	ba 05 00 00 00       	mov    edx,0x5
23fe:	31 ff                	xor    edi,edi
2400:	e8 9b f9 ff ff       	call   1da0 <dcgettext@plt>
2405:	31 f6                	xor    esi,esi
2407:	48 89 c2             	mov    rdx,rax
240a:	bf 01 00 00 00       	mov    edi,0x1
240f:	31 c0                	xor    eax,eax
2411:	e8 4a fb ff ff       	call   1f60 <error@plt>
2416:	48 8d 35 db 43 00 00 	lea    rsi,[rip+0x43db]        # 67f8 <_IO_stdin_used+0x658>
241d:	31 ff                	xor    edi,edi
241f:	ba 05 00 00 00       	mov    edx,0x5
2424:	e8 77 f9 ff ff       	call   1da0 <dcgettext@plt>
2429:	31 f6                	xor    esi,esi
242b:	48 89 c2             	mov    rdx,rax
242e:	31 ff                	xor    edi,edi
2430:	31 c0                	xor    eax,eax
2432:	e8 29 fb ff ff       	call   1f60 <error@plt>
2437:	eb af                	jmp    23e8 <main+0x3c8>
2439:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
243c:	e8 df 2d 00 00       	call   5220 <quote>
2441:	48 8d 35 c7 3e 00 00 	lea    rsi,[rip+0x3ec7]        # 630f <_IO_stdin_used+0x16f>
2448:	48 89 c3             	mov    rbx,rax
244b:	31 ff                	xor    edi,edi
244d:	ba 05 00 00 00       	mov    edx,0x5
2452:	e8 49 f9 ff ff       	call   1da0 <dcgettext@plt>
2457:	48 89 d9             	mov    rcx,rbx
245a:	48 89 c2             	mov    rdx,rax
245d:	31 f6                	xor    esi,esi
245f:	31 ff                	xor    edi,edi
2461:	31 c0                	xor    eax,eax
2463:	e8 f8 fa ff ff       	call   1f60 <error@plt>
2468:	48 8d 35 31 44 00 00 	lea    rsi,[rip+0x4431]        # 68a0 <_IO_stdin_used+0x700>
246f:	31 ff                	xor    edi,edi
2471:	ba 05 00 00 00       	mov    edx,0x5
2476:	e8 25 f9 ff ff       	call   1da0 <dcgettext@plt>
247b:	48 8b 3d 5e 7c 20 00 	mov    rdi,QWORD PTR [rip+0x207c5e]        # 20a0e0 <stderr@@GLIBC_2.2.5>
2482:	48 8d 15 67 5a 00 00 	lea    rdx,[rip+0x5a67]        # 7ef0 <quoting_style_vals+0x30>
2489:	48 89 c1             	mov    rcx,rax
248c:	be 01 00 00 00       	mov    esi,0x1
2491:	31 c0                	xor    eax,eax
2493:	e8 28 fb ff ff       	call   1fc0 <__fprintf_chk@plt>
2498:	e9 4b ff ff ff       	jmp    23e8 <main+0x3c8>
249d:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000024a0 <_start>:
24a0:	31 ed                	xor    ebp,ebp
24a2:	49 89 d1             	mov    r9,rdx
24a5:	5e                   	pop    rsi
24a6:	48 89 e2             	mov    rdx,rsp
24a9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
24ad:	50                   	push   rax
24ae:	54                   	push   rsp
24af:	4c 8d 05 ba 3c 00 00 	lea    r8,[rip+0x3cba]        # 6170 <__libc_csu_fini>
24b6:	48 8d 0d 43 3c 00 00 	lea    rcx,[rip+0x3c43]        # 6100 <__libc_csu_init>
24bd:	48 8d 3d 5c fb ff ff 	lea    rdi,[rip+0xfffffffffffffb5c]        # 2020 <main>
24c4:	ff 15 06 7b 20 00    	call   QWORD PTR [rip+0x207b06]        # 209fd0 <__libc_start_main@GLIBC_2.2.5>
24ca:	f4                   	hlt
24cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <deregister_tm_clones>:
24d0:	48 8d 3d b1 7b 20 00 	lea    rdi,[rip+0x207bb1]        # 20a088 <__TMC_END__>
24d7:	55                   	push   rbp
24d8:	48 8d 05 a9 7b 20 00 	lea    rax,[rip+0x207ba9]        # 20a088 <__TMC_END__>
24df:	48 39 f8             	cmp    rax,rdi
24e2:	48 89 e5             	mov    rbp,rsp
24e5:	74 19                	je     2500 <deregister_tm_clones+0x30>
24e7:	48 8b 05 da 7a 20 00 	mov    rax,QWORD PTR [rip+0x207ada]        # 209fc8 <_ITM_deregisterTMCloneTable>
24ee:	48 85 c0             	test   rax,rax
24f1:	74 0d                	je     2500 <deregister_tm_clones+0x30>
24f3:	5d                   	pop    rbp
24f4:	ff e0                	jmp    rax
24f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
24fd:	00 00 00
2500:	5d                   	pop    rbp
2501:	c3                   	ret
2502:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2506:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
250d:	00 00 00

0000000000002510 <register_tm_clones>:
2510:	48 8d 3d 71 7b 20 00 	lea    rdi,[rip+0x207b71]        # 20a088 <__TMC_END__>
2517:	48 8d 35 6a 7b 20 00 	lea    rsi,[rip+0x207b6a]        # 20a088 <__TMC_END__>
251e:	55                   	push   rbp
251f:	48 29 fe             	sub    rsi,rdi
2522:	48 89 e5             	mov    rbp,rsp
2525:	48 c1 fe 03          	sar    rsi,0x3
2529:	48 89 f0             	mov    rax,rsi
252c:	48 c1 e8 3f          	shr    rax,0x3f
2530:	48 01 c6             	add    rsi,rax
2533:	48 d1 fe             	sar    rsi,1
2536:	74 18                	je     2550 <register_tm_clones+0x40>
2538:	48 8b 05 a9 7a 20 00 	mov    rax,QWORD PTR [rip+0x207aa9]        # 209fe8 <_ITM_registerTMCloneTable>
253f:	48 85 c0             	test   rax,rax
2542:	74 0c                	je     2550 <register_tm_clones+0x40>
2544:	5d                   	pop    rbp
2545:	ff e0                	jmp    rax
2547:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
254e:	00 00
2550:	5d                   	pop    rbp
2551:	c3                   	ret
2552:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2556:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
255d:	00 00 00

0000000000002560 <__do_global_dtors_aux>:
2560:	80 3d 81 7b 20 00 00 	cmp    BYTE PTR [rip+0x207b81],0x0        # 20a0e8 <completed.7697>
2567:	75 2f                	jne    2598 <__do_global_dtors_aux+0x38>
2569:	48 83 3d 7f 7a 20 00 	cmp    QWORD PTR [rip+0x207a7f],0x0        # 209ff0 <__cxa_finalize@GLIBC_2.2.5>
2570:	00
2571:	55                   	push   rbp
2572:	48 89 e5             	mov    rbp,rsp
2575:	74 0c                	je     2583 <__do_global_dtors_aux+0x23>
2577:	48 8b 3d 8a 7a 20 00 	mov    rdi,QWORD PTR [rip+0x207a8a]        # 20a008 <__dso_handle>
257e:	e8 8d fa ff ff       	call   2010 <__cxa_finalize@plt>
2583:	e8 48 ff ff ff       	call   24d0 <deregister_tm_clones>
2588:	c6 05 59 7b 20 00 01 	mov    BYTE PTR [rip+0x207b59],0x1        # 20a0e8 <completed.7697>
258f:	5d                   	pop    rbp
2590:	c3                   	ret
2591:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
2598:	f3 c3                	repz ret
259a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000025a0 <frame_dummy>:
25a0:	55                   	push   rbp
25a1:	48 89 e5             	mov    rbp,rsp
25a4:	5d                   	pop    rbp
25a5:	e9 66 ff ff ff       	jmp    2510 <register_tm_clones>
25aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000025b0 <append_quoted>:
25b0:	0f b6 17             	movzx  edx,BYTE PTR [rdi]
25b3:	84 d2                	test   dl,dl
25b5:	0f 84 b5 01 00 00    	je     2770 <append_quoted+0x1c0>
25bb:	41 54                	push   r12
25bd:	41 bc 01 00 00 00    	mov    r12d,0x1
25c3:	55                   	push   rbp
25c4:	48 8d 2d 35 7b 20 00 	lea    rbp,[rip+0x207b35]        # 20a100 <lsc_obstack>
25cb:	53                   	push   rbx
25cc:	48 89 fb             	mov    rbx,rdi
25cf:	eb 74                	jmp    2645 <append_quoted+0x95>
25d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
25d8:	80 fa 27             	cmp    dl,0x27
25db:	0f 84 bf 00 00 00    	je     26a0 <append_quoted+0xf0>
25e1:	80 fa 3a             	cmp    dl,0x3a
25e4:	0f 85 a6 00 00 00    	jne    2690 <append_quoted+0xe0>
25ea:	45 84 e4             	test   r12b,r12b
25ed:	0f 84 9d 00 00 00    	je     2690 <append_quoted+0xe0>
25f3:	48 39 c1             	cmp    rcx,rax
25f6:	0f 84 7c 01 00 00    	je     2778 <append_quoted+0x1c8>
25fc:	48 8d 50 01          	lea    rdx,[rax+0x1]
2600:	48 89 15 11 7b 20 00 	mov    QWORD PTR [rip+0x207b11],rdx        # 20a118 <lsc_obstack+0x18>
2607:	c6 00 5c             	mov    BYTE PTR [rax],0x5c
260a:	48 8b 0d 0f 7b 20 00 	mov    rcx,QWORD PTR [rip+0x207b0f]        # 20a120 <lsc_obstack+0x20>
2611:	48 8b 05 00 7b 20 00 	mov    rax,QWORD PTR [rip+0x207b00]        # 20a118 <lsc_obstack+0x18>
2618:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
261f:	00
2620:	48 39 c1             	cmp    rcx,rax
2623:	74 4c                	je     2671 <append_quoted+0xc1>
2625:	48 8d 50 01          	lea    rdx,[rax+0x1]
2629:	48 83 c3 01          	add    rbx,0x1
262d:	48 89 15 e4 7a 20 00 	mov    QWORD PTR [rip+0x207ae4],rdx        # 20a118 <lsc_obstack+0x18>
2634:	0f b6 53 ff          	movzx  edx,BYTE PTR [rbx-0x1]
2638:	88 10                	mov    BYTE PTR [rax],dl
263a:	0f b6 13             	movzx  edx,BYTE PTR [rbx]
263d:	84 d2                	test   dl,dl
263f:	0f 84 cb 00 00 00    	je     2710 <append_quoted+0x160>
2645:	80 fa 3d             	cmp    dl,0x3d
2648:	48 8b 0d d1 7a 20 00 	mov    rcx,QWORD PTR [rip+0x207ad1]        # 20a120 <lsc_obstack+0x20>
264f:	48 8b 05 c2 7a 20 00 	mov    rax,QWORD PTR [rip+0x207ac2]        # 20a118 <lsc_obstack+0x18>
2656:	74 92                	je     25ea <append_quoted+0x3a>
2658:	0f 8e 7a ff ff ff    	jle    25d8 <append_quoted+0x28>
265e:	80 fa 5c             	cmp    dl,0x5c
2661:	74 05                	je     2668 <append_quoted+0xb8>
2663:	80 fa 5e             	cmp    dl,0x5e
2666:	75 28                	jne    2690 <append_quoted+0xe0>
2668:	41 83 f4 01          	xor    r12d,0x1
266c:	48 39 c1             	cmp    rcx,rax
266f:	75 b4                	jne    2625 <append_quoted+0x75>
2671:	be 01 00 00 00       	mov    esi,0x1
2676:	48 89 ef             	mov    rdi,rbp
2679:	e8 92 37 00 00       	call   5e10 <_obstack_newchunk>
267e:	48 8b 05 93 7a 20 00 	mov    rax,QWORD PTR [rip+0x207a93]        # 20a118 <lsc_obstack+0x18>
2685:	eb 9e                	jmp    2625 <append_quoted+0x75>
2687:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
268e:	00 00
2690:	41 bc 01 00 00 00    	mov    r12d,0x1
2696:	eb 88                	jmp    2620 <append_quoted+0x70>
2698:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
269f:	00
26a0:	48 39 c1             	cmp    rcx,rax
26a3:	74 73                	je     2718 <append_quoted+0x168>
26a5:	48 8d 50 01          	lea    rdx,[rax+0x1]
26a9:	48 89 15 68 7a 20 00 	mov    QWORD PTR [rip+0x207a68],rdx        # 20a118 <lsc_obstack+0x18>
26b0:	c6 00 27             	mov    BYTE PTR [rax],0x27
26b3:	48 8b 05 5e 7a 20 00 	mov    rax,QWORD PTR [rip+0x207a5e]        # 20a118 <lsc_obstack+0x18>
26ba:	48 39 05 5f 7a 20 00 	cmp    QWORD PTR [rip+0x207a5f],rax        # 20a120 <lsc_obstack+0x20>
26c1:	0f 84 89 00 00 00    	je     2750 <append_quoted+0x1a0>
26c7:	48 8d 50 01          	lea    rdx,[rax+0x1]
26cb:	48 89 15 46 7a 20 00 	mov    QWORD PTR [rip+0x207a46],rdx        # 20a118 <lsc_obstack+0x18>
26d2:	c6 00 5c             	mov    BYTE PTR [rax],0x5c
26d5:	48 8b 05 3c 7a 20 00 	mov    rax,QWORD PTR [rip+0x207a3c]        # 20a118 <lsc_obstack+0x18>
26dc:	48 39 05 3d 7a 20 00 	cmp    QWORD PTR [rip+0x207a3d],rax        # 20a120 <lsc_obstack+0x20>
26e3:	74 53                	je     2738 <append_quoted+0x188>
26e5:	48 8d 50 01          	lea    rdx,[rax+0x1]
26e9:	41 bc 01 00 00 00    	mov    r12d,0x1
26ef:	48 89 15 22 7a 20 00 	mov    QWORD PTR [rip+0x207a22],rdx        # 20a118 <lsc_obstack+0x18>
26f6:	c6 00 27             	mov    BYTE PTR [rax],0x27
26f9:	48 8b 0d 20 7a 20 00 	mov    rcx,QWORD PTR [rip+0x207a20]        # 20a120 <lsc_obstack+0x20>
2700:	48 8b 05 11 7a 20 00 	mov    rax,QWORD PTR [rip+0x207a11]        # 20a118 <lsc_obstack+0x18>
2707:	e9 14 ff ff ff       	jmp    2620 <append_quoted+0x70>
270c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2710:	5b                   	pop    rbx
2711:	5d                   	pop    rbp
2712:	41 5c                	pop    r12
2714:	c3                   	ret
2715:	0f 1f 00             	nop    DWORD PTR [rax]
2718:	be 01 00 00 00       	mov    esi,0x1
271d:	48 89 ef             	mov    rdi,rbp
2720:	e8 eb 36 00 00       	call   5e10 <_obstack_newchunk>
2725:	48 8b 05 ec 79 20 00 	mov    rax,QWORD PTR [rip+0x2079ec]        # 20a118 <lsc_obstack+0x18>
272c:	e9 74 ff ff ff       	jmp    26a5 <append_quoted+0xf5>
2731:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
2738:	be 01 00 00 00       	mov    esi,0x1
273d:	48 89 ef             	mov    rdi,rbp
2740:	e8 cb 36 00 00       	call   5e10 <_obstack_newchunk>
2745:	48 8b 05 cc 79 20 00 	mov    rax,QWORD PTR [rip+0x2079cc]        # 20a118 <lsc_obstack+0x18>
274c:	eb 97                	jmp    26e5 <append_quoted+0x135>
274e:	66 90                	xchg   ax,ax
2750:	be 01 00 00 00       	mov    esi,0x1
2755:	48 89 ef             	mov    rdi,rbp
2758:	e8 b3 36 00 00       	call   5e10 <_obstack_newchunk>
275d:	48 8b 05 b4 79 20 00 	mov    rax,QWORD PTR [rip+0x2079b4]        # 20a118 <lsc_obstack+0x18>
2764:	e9 5e ff ff ff       	jmp    26c7 <append_quoted+0x117>
2769:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
2770:	f3 c3                	repz ret
2772:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
2778:	be 01 00 00 00       	mov    esi,0x1
277d:	48 89 ef             	mov    rdi,rbp
2780:	e8 8b 36 00 00       	call   5e10 <_obstack_newchunk>
2785:	48 8b 05 8c 79 20 00 	mov    rax,QWORD PTR [rip+0x20798c]        # 20a118 <lsc_obstack+0x18>
278c:	e9 6b fe ff ff       	jmp    25fc <append_quoted+0x4c>
2791:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
2796:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
279d:	00 00 00

00000000000027a0 <dc_parse_stream>:
27a0:	41 57                	push   r15
27a2:	41 56                	push   r14
27a4:	49 89 fe             	mov    r14,rdi
27a7:	41 55                	push   r13
27a9:	41 54                	push   r12
27ab:	48 8d 3d fe 39 00 00 	lea    rdi,[rip+0x39fe]        # 61b0 <_IO_stdin_used+0x10>
27b2:	55                   	push   rbp
27b3:	53                   	push   rbx
27b4:	48 83 ec 48          	sub    rsp,0x48
27b8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
27bf:	00 00
27c1:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
27c6:	31 c0                	xor    eax,eax
27c8:	48 89 74 24 08       	mov    QWORD PTR [rsp+0x8],rsi
27cd:	48 c7 44 24 28 00 00 	mov    QWORD PTR [rsp+0x28],0x0
27d4:	00 00
27d6:	48 c7 44 24 30 00 00 	mov    QWORD PTR [rsp+0x30],0x0
27dd:	00 00
27df:	e8 1c f5 ff ff       	call   1d00 <getenv@plt>
27e4:	48 85 c0             	test   rax,rax
27e7:	0f 84 fb 03 00 00    	je     2be8 <dc_parse_stream+0x448>
27ed:	80 38 00             	cmp    BYTE PTR [rax],0x0
27f0:	48 89 c7             	mov    rdi,rax
27f3:	48 8d 05 aa 39 00 00 	lea    rax,[rip+0x39aa]        # 61a4 <_IO_stdin_used+0x4>
27fa:	48 0f 45 c7          	cmovne rax,rdi
27fe:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
2803:	4c 8d 25 d6 40 00 00 	lea    r12,[rip+0x40d6]        # 68e0 <G_line>
280a:	c7 04 24 03 00 00 00 	mov    DWORD PTR [rsp],0x3
2811:	c6 44 24 07 01       	mov    BYTE PTR [rsp+0x7],0x1
2816:	31 ed                	xor    ebp,ebp
2818:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
281f:	00
2820:	48 83 c5 01          	add    rbp,0x1
2824:	4d 85 f6             	test   r14,r14
2827:	0f 84 a0 01 00 00    	je     29cd <dc_parse_stream+0x22d>
282d:	48 8d 74 24 30       	lea    rsi,[rsp+0x30]
2832:	48 8d 7c 24 28       	lea    rdi,[rsp+0x28]
2837:	4c 89 f1             	mov    rcx,r14
283a:	ba 0a 00 00 00       	mov    edx,0xa
283f:	e8 6c f6 ff ff       	call   1eb0 <__getdelim@plt>
2844:	48 85 c0             	test   rax,rax
2847:	0f 8e 01 03 00 00    	jle    2b4e <dc_parse_stream+0x3ae>
284d:	4c 8b 7c 24 28       	mov    r15,QWORD PTR [rsp+0x28]
2852:	e8 99 f7 ff ff       	call   1ff0 <__ctype_b_loc@plt>
2857:	48 8b 08             	mov    rcx,QWORD PTR [rax]
285a:	49 89 c5             	mov    r13,rax
285d:	41 0f b6 17          	movzx  edx,BYTE PTR [r15]
2861:	f6 44 51 01 20       	test   BYTE PTR [rcx+rdx*2+0x1],0x20
2866:	0f 85 a4 01 00 00    	jne    2a10 <dc_parse_stream+0x270>
286c:	84 d2                	test   dl,dl
286e:	74 b0                	je     2820 <dc_parse_stream+0x80>
2870:	80 fa 23             	cmp    dl,0x23
2873:	74 ab                	je     2820 <dc_parse_stream+0x80>
2875:	4c 89 fb             	mov    rbx,r15
2878:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
287f:	00
2880:	48 83 c3 01          	add    rbx,0x1
2884:	0f b6 03             	movzx  eax,BYTE PTR [rbx]
2887:	48 89 c2             	mov    rdx,rax
288a:	0f b7 04 41          	movzx  eax,WORD PTR [rcx+rax*2]
288e:	66 c1 e8 0d          	shr    ax,0xd
2892:	83 f0 01             	xor    eax,0x1
2895:	84 d2                	test   dl,dl
2897:	0f 95 c2             	setne  dl
289a:	84 c2                	test   dl,al
289c:	75 e2                	jne    2880 <dc_parse_stream+0xe0>
289e:	48 89 de             	mov    rsi,rbx
28a1:	4c 89 ff             	mov    rdi,r15
28a4:	4c 29 fe             	sub    rsi,r15
28a7:	e8 44 32 00 00       	call   5af0 <xstrndup>
28ac:	80 3b 00             	cmp    BYTE PTR [rbx],0x0
28af:	49 89 c7             	mov    r15,rax
28b2:	0f 84 68 01 00 00    	je     2a20 <dc_parse_stream+0x280>
28b8:	49 8b 4d 00          	mov    rcx,QWORD PTR [r13+0x0]
28bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
28c0:	48 83 c3 01          	add    rbx,0x1
28c4:	0f b6 13             	movzx  edx,BYTE PTR [rbx]
28c7:	f6 44 51 01 20       	test   BYTE PTR [rcx+rdx*2+0x1],0x20
28cc:	48 89 d0             	mov    rax,rdx
28cf:	75 ef                	jne    28c0 <dc_parse_stream+0x120>
28d1:	84 d2                	test   dl,dl
28d3:	0f 84 47 01 00 00    	je     2a20 <dc_parse_stream+0x280>
28d9:	3c 23                	cmp    al,0x23
28db:	48 89 da             	mov    rdx,rbx
28de:	75 0b                	jne    28eb <dc_parse_stream+0x14b>
28e0:	e9 3b 01 00 00       	jmp    2a20 <dc_parse_stream+0x280>
28e5:	0f 1f 00             	nop    DWORD PTR [rax]
28e8:	48 89 f2             	mov    rdx,rsi
28eb:	0f b6 42 01          	movzx  eax,BYTE PTR [rdx+0x1]
28ef:	48 8d 72 01          	lea    rsi,[rdx+0x1]
28f3:	84 c0                	test   al,al
28f5:	40 0f 95 c7          	setne  dil
28f9:	3c 23                	cmp    al,0x23
28fb:	0f 95 c0             	setne  al
28fe:	40 84 c7             	test   dil,al
2901:	75 e5                	jne    28e8 <dc_parse_stream+0x148>
2903:	0f b6 46 ff          	movzx  eax,BYTE PTR [rsi-0x1]
2907:	f6 44 41 01 20       	test   BYTE PTR [rcx+rax*2+0x1],0x20
290c:	0f 85 e6 00 00 00    	jne    29f8 <dc_parse_stream+0x258>
2912:	48 29 de             	sub    rsi,rbx
2915:	48 89 df             	mov    rdi,rbx
2918:	e8 d3 31 00 00       	call   5af0 <xstrndup>
291d:	4d 85 ff             	test   r15,r15
2920:	48 89 c3             	mov    rbx,rax
2923:	0f 84 f7 fe ff ff    	je     2820 <dc_parse_stream+0x80>
2929:	48 85 c0             	test   rax,rax
292c:	0f 84 f7 00 00 00    	je     2a29 <dc_parse_stream+0x289>
2932:	48 8d 35 77 38 00 00 	lea    rsi,[rip+0x3877]        # 61b0 <_IO_stdin_used+0x10>
2939:	4c 89 ff             	mov    rdi,r15
293c:	e8 ff 07 00 00       	call   3140 <c_strcasecmp>
2941:	85 c0                	test   eax,eax
2943:	0f 84 37 01 00 00    	je     2a80 <dc_parse_stream+0x2e0>
2949:	8b 04 24             	mov    eax,DWORD PTR [rsp]
294c:	83 f8 02             	cmp    eax,0x2
294f:	0f 84 5b 01 00 00    	je     2ab0 <dc_parse_stream+0x310>
2955:	85 c0                	test   eax,eax
2957:	74 57                	je     29b0 <dc_parse_stream+0x210>
2959:	41 0f b6 07          	movzx  eax,BYTE PTR [r15]
295d:	3c 2e                	cmp    al,0x2e
295f:	0f 84 5e 01 00 00    	je     2ac3 <dc_parse_stream+0x323>
2965:	3c 2a                	cmp    al,0x2a
2967:	0f 84 13 02 00 00    	je     2b80 <dc_parse_stream+0x3e0>
296d:	48 8d 35 41 38 00 00 	lea    rsi,[rip+0x3841]        # 61b5 <_IO_stdin_used+0x15>
2974:	4c 89 ff             	mov    rdi,r15
2977:	e8 c4 07 00 00       	call   3140 <c_strcasecmp>
297c:	85 c0                	test   eax,eax
297e:	74 30                	je     29b0 <dc_parse_stream+0x210>
2980:	48 8d 35 36 38 00 00 	lea    rsi,[rip+0x3836]        # 61bd <_IO_stdin_used+0x1d>
2987:	4c 89 ff             	mov    rdi,r15
298a:	e8 b1 07 00 00       	call   3140 <c_strcasecmp>
298f:	85 c0                	test   eax,eax
2991:	74 1d                	je     29b0 <dc_parse_stream+0x210>
2993:	48 8d 35 29 38 00 00 	lea    rsi,[rip+0x3829]        # 61c3 <_IO_stdin_used+0x23>
299a:	4c 89 ff             	mov    rdi,r15
299d:	e8 9e 07 00 00       	call   3140 <c_strcasecmp>
29a2:	85 c0                	test   eax,eax
29a4:	0f 85 89 02 00 00    	jne    2c33 <dc_parse_stream+0x493>
29aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
29b0:	4c 89 ff             	mov    rdi,r15
29b3:	e8 48 f6 ff ff       	call   2000 <free@plt>
29b8:	48 89 df             	mov    rdi,rbx
29bb:	e8 40 f6 ff ff       	call   2000 <free@plt>
29c0:	48 83 c5 01          	add    rbp,0x1
29c4:	4d 85 f6             	test   r14,r14
29c7:	0f 85 60 fe ff ff    	jne    282d <dc_parse_stream+0x8d>
29cd:	48 8d 05 d0 4f 00 00 	lea    rax,[rip+0x4fd0]        # 79a4 <G_line+0x10c4>
29d4:	49 39 c4             	cmp    r12,rax
29d7:	0f 84 7b 01 00 00    	je     2b58 <dc_parse_stream+0x3b8>
29dd:	4c 89 e7             	mov    rdi,r12
29e0:	4d 89 e7             	mov    r15,r12
29e3:	e8 d8 f3 ff ff       	call   1dc0 <strlen@plt>
29e8:	4d 8d 64 04 01       	lea    r12,[r12+rax*1+0x1]
29ed:	e9 60 fe ff ff       	jmp    2852 <dc_parse_stream+0xb2>
29f2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
29f8:	48 83 ea 01          	sub    rdx,0x1
29fc:	0f b6 02             	movzx  eax,BYTE PTR [rdx]
29ff:	f6 44 41 01 20       	test   BYTE PTR [rcx+rax*2+0x1],0x20
2a04:	75 f2                	jne    29f8 <dc_parse_stream+0x258>
2a06:	48 8d 72 01          	lea    rsi,[rdx+0x1]
2a0a:	e9 03 ff ff ff       	jmp    2912 <dc_parse_stream+0x172>
2a0f:	90                   	nop
2a10:	49 83 c7 01          	add    r15,0x1
2a14:	e9 44 fe ff ff       	jmp    285d <dc_parse_stream+0xbd>
2a19:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
2a20:	4d 85 ff             	test   r15,r15
2a23:	0f 84 f7 fd ff ff    	je     2820 <dc_parse_stream+0x80>
2a29:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
2a2e:	be 03 00 00 00       	mov    esi,0x3
2a33:	31 ff                	xor    edi,edi
2a35:	e8 16 26 00 00       	call   5050 <quotearg_n_style_colon>
2a3a:	48 8d 35 37 3a 00 00 	lea    rsi,[rip+0x3a37]        # 6478 <_IO_stdin_used+0x2d8>
2a41:	48 89 c3             	mov    rbx,rax
2a44:	ba 05 00 00 00       	mov    edx,0x5
2a49:	31 ff                	xor    edi,edi
2a4b:	e8 50 f3 ff ff       	call   1da0 <dcgettext@plt>
2a50:	49 89 e8             	mov    r8,rbp
2a53:	48 89 c2             	mov    rdx,rax
2a56:	48 89 d9             	mov    rcx,rbx
2a59:	31 f6                	xor    esi,esi
2a5b:	31 ff                	xor    edi,edi
2a5d:	31 c0                	xor    eax,eax
2a5f:	e8 fc f4 ff ff       	call   1f60 <error@plt>
2a64:	4c 89 ff             	mov    rdi,r15
2a67:	e8 94 f5 ff ff       	call   2000 <free@plt>
2a6c:	c6 44 24 07 00       	mov    BYTE PTR [rsp+0x7],0x0
2a71:	e9 aa fd ff ff       	jmp    2820 <dc_parse_stream+0x80>
2a76:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
2a7d:	00 00 00
2a80:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
2a85:	31 d2                	xor    edx,edx
2a87:	48 89 df             	mov    rdi,rbx
2a8a:	e8 a1 f3 ff ff       	call   1e30 <fnmatch@plt>
2a8f:	85 c0                	test   eax,eax
2a91:	74 11                	je     2aa4 <dc_parse_stream+0x304>
2a93:	83 3c 24 02          	cmp    DWORD PTR [rsp],0x2
2a97:	c7 04 24 00 00 00 00 	mov    DWORD PTR [rsp],0x0
2a9e:	0f 85 0c ff ff ff    	jne    29b0 <dc_parse_stream+0x210>
2aa4:	c7 04 24 02 00 00 00 	mov    DWORD PTR [rsp],0x2
2aab:	e9 00 ff ff ff       	jmp    29b0 <dc_parse_stream+0x210>
2ab0:	41 0f b6 07          	movzx  eax,BYTE PTR [r15]
2ab4:	c7 04 24 01 00 00 00 	mov    DWORD PTR [rsp],0x1
2abb:	3c 2e                	cmp    al,0x2e
2abd:	0f 85 a2 fe ff ff    	jne    2965 <dc_parse_stream+0x1c5>
2ac3:	48 8b 05 4e 76 20 00 	mov    rax,QWORD PTR [rip+0x20764e]        # 20a118 <lsc_obstack+0x18>
2aca:	48 39 05 4f 76 20 00 	cmp    QWORD PTR [rip+0x20764f],rax        # 20a120 <lsc_obstack+0x20>
2ad1:	0f 84 3f 01 00 00    	je     2c16 <dc_parse_stream+0x476>
2ad7:	48 8d 50 01          	lea    rdx,[rax+0x1]
2adb:	4c 89 ff             	mov    rdi,r15
2ade:	48 89 15 33 76 20 00 	mov    QWORD PTR [rip+0x207633],rdx        # 20a118 <lsc_obstack+0x18>
2ae5:	c6 00 2a             	mov    BYTE PTR [rax],0x2a
2ae8:	e8 c3 fa ff ff       	call   25b0 <append_quoted>
2aed:	48 8b 05 24 76 20 00 	mov    rax,QWORD PTR [rip+0x207624]        # 20a118 <lsc_obstack+0x18>
2af4:	48 39 05 25 76 20 00 	cmp    QWORD PTR [rip+0x207625],rax        # 20a120 <lsc_obstack+0x20>
2afb:	0f 84 f8 00 00 00    	je     2bf9 <dc_parse_stream+0x459>
2b01:	48 8d 50 01          	lea    rdx,[rax+0x1]
2b05:	48 89 df             	mov    rdi,rbx
2b08:	48 89 15 09 76 20 00 	mov    QWORD PTR [rip+0x207609],rdx        # 20a118 <lsc_obstack+0x18>
2b0f:	c6 00 3d             	mov    BYTE PTR [rax],0x3d
2b12:	e8 99 fa ff ff       	call   25b0 <append_quoted>
2b17:	48 8b 05 fa 75 20 00 	mov    rax,QWORD PTR [rip+0x2075fa]        # 20a118 <lsc_obstack+0x18>
2b1e:	48 39 05 fb 75 20 00 	cmp    QWORD PTR [rip+0x2075fb],rax        # 20a120 <lsc_obstack+0x20>
2b25:	0f 84 aa 00 00 00    	je     2bd5 <dc_parse_stream+0x435>
2b2b:	48 8d 50 01          	lea    rdx,[rax+0x1]
2b2f:	4c 89 ff             	mov    rdi,r15
2b32:	48 89 15 df 75 20 00 	mov    QWORD PTR [rip+0x2075df],rdx        # 20a118 <lsc_obstack+0x18>
2b39:	c6 00 3a             	mov    BYTE PTR [rax],0x3a
2b3c:	e8 bf f4 ff ff       	call   2000 <free@plt>
2b41:	48 89 df             	mov    rdi,rbx
2b44:	e8 b7 f4 ff ff       	call   2000 <free@plt>
2b49:	e9 72 fe ff ff       	jmp    29c0 <dc_parse_stream+0x220>
2b4e:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
2b53:	e8 a8 f4 ff ff       	call   2000 <free@plt>
2b58:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
2b5d:	64 48 33 3c 25 28 00 	xor    rdi,QWORD PTR fs:0x28
2b64:	00 00
2b66:	0f b6 44 24 07       	movzx  eax,BYTE PTR [rsp+0x7]
2b6b:	0f 85 4d 02 00 00    	jne    2dbe <dc_parse_stream+0x61e>
2b71:	48 83 c4 48          	add    rsp,0x48
2b75:	5b                   	pop    rbx
2b76:	5d                   	pop    rbp
2b77:	41 5c                	pop    r12
2b79:	41 5d                	pop    r13
2b7b:	41 5e                	pop    r14
2b7d:	41 5f                	pop    r15
2b7f:	c3                   	ret
2b80:	4c 89 ff             	mov    rdi,r15
2b83:	e8 28 fa ff ff       	call   25b0 <append_quoted>
2b88:	48 8b 05 89 75 20 00 	mov    rax,QWORD PTR [rip+0x207589]        # 20a118 <lsc_obstack+0x18>
2b8f:	48 39 05 8a 75 20 00 	cmp    QWORD PTR [rip+0x20758a],rax        # 20a120 <lsc_obstack+0x20>
2b96:	0f 84 5c 01 00 00    	je     2cf8 <dc_parse_stream+0x558>
2b9c:	48 8b 05 75 75 20 00 	mov    rax,QWORD PTR [rip+0x207575]        # 20a118 <lsc_obstack+0x18>
2ba3:	48 89 df             	mov    rdi,rbx
2ba6:	48 8d 50 01          	lea    rdx,[rax+0x1]
2baa:	48 89 15 67 75 20 00 	mov    QWORD PTR [rip+0x207567],rdx        # 20a118 <lsc_obstack+0x18>
2bb1:	c6 00 3d             	mov    BYTE PTR [rax],0x3d
2bb4:	e8 f7 f9 ff ff       	call   25b0 <append_quoted>
2bb9:	48 8b 05 58 75 20 00 	mov    rax,QWORD PTR [rip+0x207558]        # 20a118 <lsc_obstack+0x18>
2bc0:	48 39 05 59 75 20 00 	cmp    QWORD PTR [rip+0x207559],rax        # 20a120 <lsc_obstack+0x20>
2bc7:	74 0c                	je     2bd5 <dc_parse_stream+0x435>
2bc9:	48 8b 05 48 75 20 00 	mov    rax,QWORD PTR [rip+0x207548]        # 20a118 <lsc_obstack+0x18>
2bd0:	e9 56 ff ff ff       	jmp    2b2b <dc_parse_stream+0x38b>
2bd5:	48 8d 3d 24 75 20 00 	lea    rdi,[rip+0x207524]        # 20a100 <lsc_obstack>
2bdc:	be 01 00 00 00       	mov    esi,0x1
2be1:	e8 2a 32 00 00       	call   5e10 <_obstack_newchunk>
2be6:	eb e1                	jmp    2bc9 <dc_parse_stream+0x429>
2be8:	48 8d 05 b5 35 00 00 	lea    rax,[rip+0x35b5]        # 61a4 <_IO_stdin_used+0x4>
2bef:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
2bf4:	e9 0a fc ff ff       	jmp    2803 <dc_parse_stream+0x63>
2bf9:	48 8d 3d 00 75 20 00 	lea    rdi,[rip+0x207500]        # 20a100 <lsc_obstack>
2c00:	be 01 00 00 00       	mov    esi,0x1
2c05:	e8 06 32 00 00       	call   5e10 <_obstack_newchunk>
2c0a:	48 8b 05 07 75 20 00 	mov    rax,QWORD PTR [rip+0x207507]        # 20a118 <lsc_obstack+0x18>
2c11:	e9 eb fe ff ff       	jmp    2b01 <dc_parse_stream+0x361>
2c16:	48 8d 3d e3 74 20 00 	lea    rdi,[rip+0x2074e3]        # 20a100 <lsc_obstack>
2c1d:	be 01 00 00 00       	mov    esi,0x1
2c22:	e8 e9 31 00 00       	call   5e10 <_obstack_newchunk>
2c27:	48 8b 05 ea 74 20 00 	mov    rax,QWORD PTR [rip+0x2074ea]        # 20a118 <lsc_obstack+0x18>
2c2e:	e9 a4 fe ff ff       	jmp    2ad7 <dc_parse_stream+0x337>
2c33:	45 31 ed             	xor    r13d,r13d
2c36:	48 89 5c 24 18       	mov    QWORD PTR [rsp+0x18],rbx
2c3b:	48 8d 35 67 35 00 00 	lea    rsi,[rip+0x3567]        # 61a9 <_IO_stdin_used+0x9>
2c42:	4c 89 eb             	mov    rbx,r13
2c45:	eb 21                	jmp    2c68 <dc_parse_stream+0x4c8>
2c47:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
2c4e:	00 00
2c50:	48 8d 05 49 6e 20 00 	lea    rax,[rip+0x206e49]        # 209aa0 <slack_codes>
2c57:	48 83 c3 01          	add    rbx,0x1
2c5b:	48 8b 34 d8          	mov    rsi,QWORD PTR [rax+rbx*8]
2c5f:	48 85 f6             	test   rsi,rsi
2c62:	0f 84 a6 00 00 00    	je     2d0e <dc_parse_stream+0x56e>
2c68:	4c 89 ff             	mov    rdi,r15
2c6b:	41 89 dd             	mov    r13d,ebx
2c6e:	e8 cd 04 00 00       	call   3140 <c_strcasecmp>
2c73:	85 c0                	test   eax,eax
2c75:	75 d9                	jne    2c50 <dc_parse_stream+0x4b0>
2c77:	48 8b 05 9a 74 20 00 	mov    rax,QWORD PTR [rip+0x20749a]        # 20a118 <lsc_obstack+0x18>
2c7e:	48 39 05 9b 74 20 00 	cmp    QWORD PTR [rip+0x20749b],rax        # 20a120 <lsc_obstack+0x20>
2c85:	48 8b 5c 24 18       	mov    rbx,QWORD PTR [rsp+0x18]
2c8a:	0f 84 02 01 00 00    	je     2d92 <dc_parse_stream+0x5f2>
2c90:	48 8d 05 c9 6c 20 00 	lea    rax,[rip+0x206cc9]        # 209960 <ls_codes>
2c97:	4d 63 ed             	movsxd r13,r13d
2c9a:	4e 8b 2c e8          	mov    r13,QWORD PTR [rax+r13*8]
2c9e:	48 8b 05 73 74 20 00 	mov    rax,QWORD PTR [rip+0x207473]        # 20a118 <lsc_obstack+0x18>
2ca5:	48 8d 50 01          	lea    rdx,[rax+0x1]
2ca9:	48 89 15 68 74 20 00 	mov    QWORD PTR [rip+0x207468],rdx        # 20a118 <lsc_obstack+0x18>
2cb0:	41 0f b6 55 00       	movzx  edx,BYTE PTR [r13+0x0]
2cb5:	88 10                	mov    BYTE PTR [rax],dl
2cb7:	48 8b 05 5a 74 20 00 	mov    rax,QWORD PTR [rip+0x20745a]        # 20a118 <lsc_obstack+0x18>
2cbe:	48 39 05 5b 74 20 00 	cmp    QWORD PTR [rip+0x20745b],rax        # 20a120 <lsc_obstack+0x20>
2cc5:	0f 84 dd 00 00 00    	je     2da8 <dc_parse_stream+0x608>
2ccb:	48 8b 05 46 74 20 00 	mov    rax,QWORD PTR [rip+0x207446]        # 20a118 <lsc_obstack+0x18>
2cd2:	48 8d 50 01          	lea    rdx,[rax+0x1]
2cd6:	48 89 15 3b 74 20 00 	mov    QWORD PTR [rip+0x20743b],rdx        # 20a118 <lsc_obstack+0x18>
2cdd:	41 0f b6 55 01       	movzx  edx,BYTE PTR [r13+0x1]
2ce2:	88 10                	mov    BYTE PTR [rax],dl
2ce4:	48 8b 05 2d 74 20 00 	mov    rax,QWORD PTR [rip+0x20742d]        # 20a118 <lsc_obstack+0x18>
2ceb:	48 39 05 2e 74 20 00 	cmp    QWORD PTR [rip+0x20742e],rax        # 20a120 <lsc_obstack+0x20>
2cf2:	0f 85 a4 fe ff ff    	jne    2b9c <dc_parse_stream+0x3fc>
2cf8:	48 8d 3d 01 74 20 00 	lea    rdi,[rip+0x207401]        # 20a100 <lsc_obstack>
2cff:	be 01 00 00 00       	mov    esi,0x1
2d04:	e8 07 31 00 00       	call   5e10 <_obstack_newchunk>
2d09:	e9 8e fe ff ff       	jmp    2b9c <dc_parse_stream+0x3fc>
2d0e:	83 3c 24 03          	cmp    DWORD PTR [rsp],0x3
2d12:	48 8b 5c 24 18       	mov    rbx,QWORD PTR [rsp+0x18]
2d17:	0f 84 93 fc ff ff    	je     29b0 <dc_parse_stream+0x210>
2d1d:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
2d22:	48 85 d2             	test   rdx,rdx
2d25:	74 53                	je     2d7a <dc_parse_stream+0x5da>
2d27:	be 03 00 00 00       	mov    esi,0x3
2d2c:	31 ff                	xor    edi,edi
2d2e:	e8 1d 23 00 00       	call   5050 <quotearg_n_style_colon>
2d33:	49 89 c5             	mov    r13,rax
2d36:	48 8d 35 6b 37 00 00 	lea    rsi,[rip+0x376b]        # 64a8 <_IO_stdin_used+0x308>
2d3d:	31 ff                	xor    edi,edi
2d3f:	ba 05 00 00 00       	mov    edx,0x5
2d44:	e8 57 f0 ff ff       	call   1da0 <dcgettext@plt>
2d49:	4d 89 f9             	mov    r9,r15
2d4c:	48 89 c2             	mov    rdx,rax
2d4f:	49 89 e8             	mov    r8,rbp
2d52:	4c 89 e9             	mov    rcx,r13
2d55:	31 f6                	xor    esi,esi
2d57:	31 ff                	xor    edi,edi
2d59:	31 c0                	xor    eax,eax
2d5b:	e8 00 f2 ff ff       	call   1f60 <error@plt>
2d60:	4c 89 ff             	mov    rdi,r15
2d63:	c6 44 24 07 00       	mov    BYTE PTR [rsp+0x7],0x0
2d68:	e8 93 f2 ff ff       	call   2000 <free@plt>
2d6d:	48 89 df             	mov    rdi,rbx
2d70:	e8 8b f2 ff ff       	call   2000 <free@plt>
2d75:	e9 46 fc ff ff       	jmp    29c0 <dc_parse_stream+0x220>
2d7a:	48 8d 35 4b 34 00 00 	lea    rsi,[rip+0x344b]        # 61cc <_IO_stdin_used+0x2c>
2d81:	ba 05 00 00 00       	mov    edx,0x5
2d86:	31 ff                	xor    edi,edi
2d88:	e8 13 f0 ff ff       	call   1da0 <dcgettext@plt>
2d8d:	49 89 c5             	mov    r13,rax
2d90:	eb a4                	jmp    2d36 <dc_parse_stream+0x596>
2d92:	48 8d 3d 67 73 20 00 	lea    rdi,[rip+0x207367]        # 20a100 <lsc_obstack>
2d99:	be 01 00 00 00       	mov    esi,0x1
2d9e:	e8 6d 30 00 00       	call   5e10 <_obstack_newchunk>
2da3:	e9 e8 fe ff ff       	jmp    2c90 <dc_parse_stream+0x4f0>
2da8:	48 8d 3d 51 73 20 00 	lea    rdi,[rip+0x207351]        # 20a100 <lsc_obstack>
2daf:	be 01 00 00 00       	mov    esi,0x1
2db4:	e8 57 30 00 00       	call   5e10 <_obstack_newchunk>
2db9:	e9 0d ff ff ff       	jmp    2ccb <dc_parse_stream+0x52b>
2dbe:	e8 0d f0 ff ff       	call   1dd0 <__stack_chk_fail@plt>
2dc3:	0f 1f 00             	nop    DWORD PTR [rax]
2dc6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
2dcd:	00 00 00

0000000000002dd0 <usage>:
2dd0:	41 55                	push   r13
2dd2:	41 54                	push   r12
2dd4:	ba 05 00 00 00       	mov    edx,0x5
2dd9:	55                   	push   rbp
2dda:	53                   	push   rbx
2ddb:	89 fd                	mov    ebp,edi
2ddd:	48 81 ec 88 00 00 00 	sub    rsp,0x88
2de4:	48 8b 1d 7d 73 20 00 	mov    rbx,QWORD PTR [rip+0x20737d]        # 20a168 <program_name>
2deb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
2df2:	00 00
2df4:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
2df9:	31 c0                	xor    eax,eax
2dfb:	85 ff                	test   edi,edi
2dfd:	74 2e                	je     2e2d <usage+0x5d>
2dff:	48 8d 35 c2 36 00 00 	lea    rsi,[rip+0x36c2]        # 64c8 <_IO_stdin_used+0x328>
2e06:	31 ff                	xor    edi,edi
2e08:	e8 93 ef ff ff       	call   1da0 <dcgettext@plt>
2e0d:	48 8b 3d cc 72 20 00 	mov    rdi,QWORD PTR [rip+0x2072cc]        # 20a0e0 <stderr@@GLIBC_2.2.5>
2e14:	48 89 c2             	mov    rdx,rax
2e17:	48 89 d9             	mov    rcx,rbx
2e1a:	be 01 00 00 00       	mov    esi,0x1
2e1f:	31 c0                	xor    eax,eax
2e21:	e8 9a f1 ff ff       	call   1fc0 <__fprintf_chk@plt>
2e26:	89 ef                	mov    edi,ebp
2e28:	e8 73 f1 ff ff       	call   1fa0 <exit@plt>
2e2d:	48 8d 35 ad 33 00 00 	lea    rsi,[rip+0x33ad]        # 61e1 <_IO_stdin_used+0x41>
2e34:	31 ff                	xor    edi,edi
2e36:	e8 65 ef ff ff       	call   1da0 <dcgettext@plt>
2e3b:	48 89 da             	mov    rdx,rbx
2e3e:	48 89 c6             	mov    rsi,rax
2e41:	bf 01 00 00 00       	mov    edi,0x1
2e46:	31 c0                	xor    eax,eax
2e48:	e8 03 f1 ff ff       	call   1f50 <__printf_chk@plt>
2e4d:	48 8b 1d 54 72 20 00 	mov    rbx,QWORD PTR [rip+0x207254]        # 20a0a8 <stdout@@GLIBC_2.2.5>
2e54:	48 8d 35 95 36 00 00 	lea    rsi,[rip+0x3695]        # 64f0 <_IO_stdin_used+0x350>
2e5b:	ba 05 00 00 00       	mov    edx,0x5
2e60:	31 ff                	xor    edi,edi
2e62:	e8 39 ef ff ff       	call   1da0 <dcgettext@plt>
2e67:	48 89 de             	mov    rsi,rbx
2e6a:	48 89 c7             	mov    rdi,rax
2e6d:	e8 1e f0 ff ff       	call   1e90 <fputs_unlocked@plt>
2e72:	48 8b 1d 2f 72 20 00 	mov    rbx,QWORD PTR [rip+0x20722f]        # 20a0a8 <stdout@@GLIBC_2.2.5>
2e79:	48 8d 35 88 37 00 00 	lea    rsi,[rip+0x3788]        # 6608 <_IO_stdin_used+0x468>
2e80:	ba 05 00 00 00       	mov    edx,0x5
2e85:	31 ff                	xor    edi,edi
2e87:	e8 14 ef ff ff       	call   1da0 <dcgettext@plt>
2e8c:	48 89 de             	mov    rsi,rbx
2e8f:	48 89 c7             	mov    rdi,rax
2e92:	e8 f9 ef ff ff       	call   1e90 <fputs_unlocked@plt>
2e97:	48 8b 1d 0a 72 20 00 	mov    rbx,QWORD PTR [rip+0x20720a]        # 20a0a8 <stdout@@GLIBC_2.2.5>
2e9e:	48 8d 35 93 37 00 00 	lea    rsi,[rip+0x3793]        # 6638 <_IO_stdin_used+0x498>
2ea5:	ba 05 00 00 00       	mov    edx,0x5
2eaa:	31 ff                	xor    edi,edi
2eac:	e8 ef ee ff ff       	call   1da0 <dcgettext@plt>
2eb1:	48 89 de             	mov    rsi,rbx
2eb4:	48 89 c7             	mov    rdi,rax
2eb7:	e8 d4 ef ff ff       	call   1e90 <fputs_unlocked@plt>
2ebc:	48 8b 1d e5 71 20 00 	mov    rbx,QWORD PTR [rip+0x2071e5]        # 20a0a8 <stdout@@GLIBC_2.2.5>
2ec3:	48 8d 35 a6 37 00 00 	lea    rsi,[rip+0x37a6]        # 6670 <_IO_stdin_used+0x4d0>
2eca:	ba 05 00 00 00       	mov    edx,0x5
2ecf:	31 ff                	xor    edi,edi
2ed1:	e8 ca ee ff ff       	call   1da0 <dcgettext@plt>
2ed6:	48 89 de             	mov    rsi,rbx
2ed9:	48 89 c7             	mov    rdi,rax
2edc:	48 8d 1d f4 32 00 00 	lea    rbx,[rip+0x32f4]        # 61d7 <_IO_stdin_used+0x37>
2ee3:	e8 a8 ef ff ff       	call   1e90 <fputs_unlocked@plt>
2ee8:	48 8d 05 10 33 00 00 	lea    rax,[rip+0x3310]        # 61ff <_IO_stdin_used+0x5f>
2eef:	48 8d 0d 4a 33 00 00 	lea    rcx,[rip+0x334a]        # 6240 <_IO_stdin_used+0xa0>
2ef6:	48 c7 44 24 60 00 00 	mov    QWORD PTR [rsp+0x60],0x0
2efd:	00 00
2eff:	48 c7 44 24 68 00 00 	mov    QWORD PTR [rsp+0x68],0x0
2f06:	00 00
2f08:	48 89 e2             	mov    rdx,rsp
2f0b:	48 89 04 24          	mov    QWORD PTR [rsp],rax
2f0f:	48 8d 05 eb 32 00 00 	lea    rax,[rip+0x32eb]        # 6201 <_IO_stdin_used+0x61>
2f16:	48 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],rcx
2f1b:	48 8d 0d 28 33 00 00 	lea    rcx,[rip+0x3328]        # 624a <_IO_stdin_used+0xaa>
2f22:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
2f27:	48 8d 05 4b 33 00 00 	lea    rax,[rip+0x334b]        # 6279 <_IO_stdin_used+0xd9>
2f2e:	48 89 4c 24 40       	mov    QWORD PTR [rsp+0x40],rcx
2f33:	48 8d 0d 1a 33 00 00 	lea    rcx,[rip+0x331a]        # 6254 <_IO_stdin_used+0xb4>
2f3a:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
2f3f:	48 8d 05 cb 32 00 00 	lea    rax,[rip+0x32cb]        # 6211 <_IO_stdin_used+0x71>
2f46:	48 89 4c 24 50       	mov    QWORD PTR [rsp+0x50],rcx
2f4b:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
2f50:	48 8d 05 d0 32 00 00 	lea    rax,[rip+0x32d0]        # 6227 <_IO_stdin_used+0x87>
2f57:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
2f5c:	48 8d 05 ce 32 00 00 	lea    rax,[rip+0x32ce]        # 6231 <_IO_stdin_used+0x91>
2f63:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
2f68:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
2f6d:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
2f72:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
2f77:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
2f7e:	00 00
2f80:	48 83 c2 10          	add    rdx,0x10
2f84:	48 8b 3a             	mov    rdi,QWORD PTR [rdx]
2f87:	48 85 ff             	test   rdi,rdi
2f8a:	74 13                	je     2f9f <usage+0x1cf>
2f8c:	b9 0a 00 00 00       	mov    ecx,0xa
2f91:	48 89 de             	mov    rsi,rbx
2f94:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
2f96:	0f 97 c0             	seta   al
2f99:	1c 00                	sbb    al,0x0
2f9b:	84 c0                	test   al,al
2f9d:	75 e1                	jne    2f80 <usage+0x1b0>
2f9f:	4c 8b 62 08          	mov    r12,QWORD PTR [rdx+0x8]
2fa3:	31 ff                	xor    edi,edi
2fa5:	ba 05 00 00 00       	mov    edx,0x5
2faa:	48 8d 35 ad 32 00 00 	lea    rsi,[rip+0x32ad]        # 625e <_IO_stdin_used+0xbe>
2fb1:	4d 85 e4             	test   r12,r12
2fb4:	0f 84 c1 00 00 00    	je     307b <usage+0x2ab>
2fba:	e8 e1 ed ff ff       	call   1da0 <dcgettext@plt>
2fbf:	48 8d 0d 8a 37 00 00 	lea    rcx,[rip+0x378a]        # 6750 <_IO_stdin_used+0x5b0>
2fc6:	48 8d 15 a8 32 00 00 	lea    rdx,[rip+0x32a8]        # 6275 <_IO_stdin_used+0xd5>
2fcd:	48 89 c6             	mov    rsi,rax
2fd0:	bf 01 00 00 00       	mov    edi,0x1
2fd5:	31 c0                	xor    eax,eax
2fd7:	e8 74 ef ff ff       	call   1f50 <__printf_chk@plt>
2fdc:	31 f6                	xor    esi,esi
2fde:	bf 05 00 00 00       	mov    edi,0x5
2fe3:	e8 58 ef ff ff       	call   1f40 <setlocale@plt>
2fe8:	48 85 c0             	test   rax,rax
2feb:	74 1c                	je     3009 <usage+0x239>
2fed:	48 8d 35 8f 32 00 00 	lea    rsi,[rip+0x328f]        # 6283 <_IO_stdin_used+0xe3>
2ff4:	ba 03 00 00 00       	mov    edx,0x3
2ff9:	48 89 c7             	mov    rdi,rax
2ffc:	e8 2f ed ff ff       	call   1d30 <strncmp@plt>
3001:	85 c0                	test   eax,eax
3003:	0f 85 07 01 00 00    	jne    3110 <usage+0x340>
3009:	48 8d 35 77 32 00 00 	lea    rsi,[rip+0x3277]        # 6287 <_IO_stdin_used+0xe7>
3010:	31 ff                	xor    edi,edi
3012:	ba 05 00 00 00       	mov    edx,0x5
3017:	e8 84 ed ff ff       	call   1da0 <dcgettext@plt>
301c:	48 8d 0d b4 31 00 00 	lea    rcx,[rip+0x31b4]        # 61d7 <_IO_stdin_used+0x37>
3023:	48 8d 15 26 37 00 00 	lea    rdx,[rip+0x3726]        # 6750 <_IO_stdin_used+0x5b0>
302a:	48 89 c6             	mov    rsi,rax
302d:	bf 01 00 00 00       	mov    edi,0x1
3032:	31 c0                	xor    eax,eax
3034:	e8 17 ef ff ff       	call   1f50 <__printf_chk@plt>
3039:	49 39 dc             	cmp    r12,rbx
303c:	48 8d 0d d8 31 00 00 	lea    rcx,[rip+0x31d8]        # 621b <_IO_stdin_used+0x7b>
3043:	48 8d 1d 7b 32 00 00 	lea    rbx,[rip+0x327b]        # 62c5 <_IO_stdin_used+0x125>
304a:	48 0f 44 d9          	cmove  rbx,rcx
304e:	48 8d 35 6b 37 00 00 	lea    rsi,[rip+0x376b]        # 67c0 <_IO_stdin_used+0x620>
3055:	31 ff                	xor    edi,edi
3057:	ba 05 00 00 00       	mov    edx,0x5
305c:	e8 3f ed ff ff       	call   1da0 <dcgettext@plt>
3061:	48 89 d9             	mov    rcx,rbx
3064:	48 89 c6             	mov    rsi,rax
3067:	4c 89 e2             	mov    rdx,r12
306a:	bf 01 00 00 00       	mov    edi,0x1
306f:	31 c0                	xor    eax,eax
3071:	e8 da ee ff ff       	call   1f50 <__printf_chk@plt>
3076:	e9 ab fd ff ff       	jmp    2e26 <usage+0x56>
307b:	e8 20 ed ff ff       	call   1da0 <dcgettext@plt>
3080:	48 8d 0d c9 36 00 00 	lea    rcx,[rip+0x36c9]        # 6750 <_IO_stdin_used+0x5b0>
3087:	48 8d 15 e7 31 00 00 	lea    rdx,[rip+0x31e7]        # 6275 <_IO_stdin_used+0xd5>
308e:	48 89 c6             	mov    rsi,rax
3091:	bf 01 00 00 00       	mov    edi,0x1
3096:	31 c0                	xor    eax,eax
3098:	e8 b3 ee ff ff       	call   1f50 <__printf_chk@plt>
309d:	31 f6                	xor    esi,esi
309f:	bf 05 00 00 00       	mov    edi,0x5
30a4:	e8 97 ee ff ff       	call   1f40 <setlocale@plt>
30a9:	48 85 c0             	test   rax,rax
30ac:	74 18                	je     30c6 <usage+0x2f6>
30ae:	48 8d 35 ce 31 00 00 	lea    rsi,[rip+0x31ce]        # 6283 <_IO_stdin_used+0xe3>
30b5:	ba 03 00 00 00       	mov    edx,0x3
30ba:	48 89 c7             	mov    rdi,rax
30bd:	e8 6e ec ff ff       	call   1d30 <strncmp@plt>
30c2:	85 c0                	test   eax,eax
30c4:	75 43                	jne    3109 <usage+0x339>
30c6:	48 8d 35 ba 31 00 00 	lea    rsi,[rip+0x31ba]        # 6287 <_IO_stdin_used+0xe7>
30cd:	ba 05 00 00 00       	mov    edx,0x5
30d2:	31 ff                	xor    edi,edi
30d4:	4c 8d 25 fc 30 00 00 	lea    r12,[rip+0x30fc]        # 61d7 <_IO_stdin_used+0x37>
30db:	48 8d 1d 39 31 00 00 	lea    rbx,[rip+0x3139]        # 621b <_IO_stdin_used+0x7b>
30e2:	e8 b9 ec ff ff       	call   1da0 <dcgettext@plt>
30e7:	48 8d 0d e9 30 00 00 	lea    rcx,[rip+0x30e9]        # 61d7 <_IO_stdin_used+0x37>
30ee:	48 8d 15 5b 36 00 00 	lea    rdx,[rip+0x365b]        # 6750 <_IO_stdin_used+0x5b0>
30f5:	48 89 c6             	mov    rsi,rax
30f8:	bf 01 00 00 00       	mov    edi,0x1
30fd:	31 c0                	xor    eax,eax
30ff:	e8 4c ee ff ff       	call   1f50 <__printf_chk@plt>
3104:	e9 45 ff ff ff       	jmp    304e <usage+0x27e>
3109:	4c 8d 25 c7 30 00 00 	lea    r12,[rip+0x30c7]        # 61d7 <_IO_stdin_used+0x37>
3110:	4c 8b 2d 91 6f 20 00 	mov    r13,QWORD PTR [rip+0x206f91]        # 20a0a8 <stdout@@GLIBC_2.2.5>
3117:	48 8d 35 5a 36 00 00 	lea    rsi,[rip+0x365a]        # 6778 <_IO_stdin_used+0x5d8>
311e:	31 ff                	xor    edi,edi
3120:	ba 05 00 00 00       	mov    edx,0x5
3125:	e8 76 ec ff ff       	call   1da0 <dcgettext@plt>
312a:	4c 89 ee             	mov    rsi,r13
312d:	48 89 c7             	mov    rdi,rax
3130:	e8 5b ed ff ff       	call   1e90 <fputs_unlocked@plt>
3135:	e9 cf fe ff ff       	jmp    3009 <usage+0x239>
313a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000003140 <c_strcasecmp>:
3140:	31 c0                	xor    eax,eax
3142:	48 39 f7             	cmp    rdi,rsi
3145:	75 15                	jne    315c <c_strcasecmp+0x1c>
3147:	eb 43                	jmp    318c <c_strcasecmp+0x4c>
3149:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
3150:	48 83 c7 01          	add    rdi,0x1
3154:	48 83 c6 01          	add    rsi,0x1
3158:	38 d0                	cmp    al,dl
315a:	75 28                	jne    3184 <c_strcasecmp+0x44>
315c:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
315f:	89 c2                	mov    edx,eax
3161:	8d 48 20             	lea    ecx,[rax+0x20]
3164:	83 ea 41             	sub    edx,0x41
3167:	80 fa 1a             	cmp    dl,0x1a
316a:	0f b6 16             	movzx  edx,BYTE PTR [rsi]
316d:	0f 42 c1             	cmovb  eax,ecx
3170:	89 d1                	mov    ecx,edx
3172:	44 8d 4a 20          	lea    r9d,[rdx+0x20]
3176:	83 e9 41             	sub    ecx,0x41
3179:	80 f9 1a             	cmp    cl,0x1a
317c:	41 0f 42 d1          	cmovb  edx,r9d
3180:	84 c0                	test   al,al
3182:	75 cc                	jne    3150 <c_strcasecmp+0x10>
3184:	0f b6 c0             	movzx  eax,al
3187:	0f b6 d2             	movzx  edx,dl
318a:	29 d0                	sub    eax,edx
318c:	f3 c3                	repz ret
318e:	66 90                	xchg   ax,ax

0000000000003190 <close_stdout_set_file_name>:
3190:	48 89 3d c9 6f 20 00 	mov    QWORD PTR [rip+0x206fc9],rdi        # 20a160 <file_name>
3197:	c3                   	ret
3198:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
319f:	00

00000000000031a0 <close_stdout_set_ignore_EPIPE>:
31a0:	40 88 3d b1 6f 20 00 	mov    BYTE PTR [rip+0x206fb1],dil        # 20a158 <ignore_EPIPE>
31a7:	c3                   	ret
31a8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
31af:	00

00000000000031b0 <close_stdout>:
31b0:	55                   	push   rbp
31b1:	53                   	push   rbx
31b2:	48 83 ec 08          	sub    rsp,0x8
31b6:	48 8b 3d eb 6e 20 00 	mov    rdi,QWORD PTR [rip+0x206eeb]        # 20a0a8 <stdout@@GLIBC_2.2.5>
31bd:	e8 1e 2e 00 00       	call   5fe0 <close_stream>
31c2:	85 c0                	test   eax,eax
31c4:	74 16                	je     31dc <close_stdout+0x2c>
31c6:	e8 55 eb ff ff       	call   1d20 <__errno_location@plt>
31cb:	80 3d 86 6f 20 00 00 	cmp    BYTE PTR [rip+0x206f86],0x0        # 20a158 <ignore_EPIPE>
31d2:	48 89 c3             	mov    rbx,rax
31d5:	74 1c                	je     31f3 <close_stdout+0x43>
31d7:	83 38 20             	cmp    DWORD PTR [rax],0x20
31da:	75 17                	jne    31f3 <close_stdout+0x43>
31dc:	48 8b 3d fd 6e 20 00 	mov    rdi,QWORD PTR [rip+0x206efd]        # 20a0e0 <stderr@@GLIBC_2.2.5>
31e3:	e8 f8 2d 00 00       	call   5fe0 <close_stream>
31e8:	85 c0                	test   eax,eax
31ea:	75 46                	jne    3232 <close_stdout+0x82>
31ec:	48 83 c4 08          	add    rsp,0x8
31f0:	5b                   	pop    rbx
31f1:	5d                   	pop    rbp
31f2:	c3                   	ret
31f3:	48 8d 35 af 47 00 00 	lea    rsi,[rip+0x47af]        # 79a9 <G_line+0x10c9>
31fa:	31 ff                	xor    edi,edi
31fc:	ba 05 00 00 00       	mov    edx,0x5
3201:	e8 9a eb ff ff       	call   1da0 <dcgettext@plt>
3206:	48 8b 3d 53 6f 20 00 	mov    rdi,QWORD PTR [rip+0x206f53]        # 20a160 <file_name>
320d:	48 89 c5             	mov    rbp,rax
3210:	48 85 ff             	test   rdi,rdi
3213:	74 28                	je     323d <close_stdout+0x8d>
3215:	e8 06 1e 00 00       	call   5020 <quotearg_colon>
321a:	8b 33                	mov    esi,DWORD PTR [rbx]
321c:	48 8d 15 92 47 00 00 	lea    rdx,[rip+0x4792]        # 79b5 <G_line+0x10d5>
3223:	48 89 c1             	mov    rcx,rax
3226:	49 89 e8             	mov    r8,rbp
3229:	31 ff                	xor    edi,edi
322b:	31 c0                	xor    eax,eax
322d:	e8 2e ed ff ff       	call   1f60 <error@plt>
3232:	8b 3d e0 6d 20 00    	mov    edi,DWORD PTR [rip+0x206de0]        # 20a018 <exit_failure>
3238:	e8 03 eb ff ff       	call   1d40 <_exit@plt>
323d:	8b 33                	mov    esi,DWORD PTR [rbx]
323f:	48 8d 15 73 47 00 00 	lea    rdx,[rip+0x4773]        # 79b9 <G_line+0x10d9>
3246:	48 89 c1             	mov    rcx,rax
3249:	31 ff                	xor    edi,edi
324b:	31 c0                	xor    eax,eax
324d:	e8 0e ed ff ff       	call   1f60 <error@plt>
3252:	eb de                	jmp    3232 <close_stdout+0x82>
3254:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
325b:	00 00 00
325e:	66 90                	xchg   ax,ax

0000000000003260 <last_component>:
3260:	0f b6 17             	movzx  edx,BYTE PTR [rdi]
3263:	48 89 f8             	mov    rax,rdi
3266:	80 fa 2f             	cmp    dl,0x2f
3269:	75 11                	jne    327c <last_component+0x1c>
326b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3270:	48 83 c0 01          	add    rax,0x1
3274:	0f b6 10             	movzx  edx,BYTE PTR [rax]
3277:	80 fa 2f             	cmp    dl,0x2f
327a:	74 f4                	je     3270 <last_component+0x10>
327c:	84 d2                	test   dl,dl
327e:	74 3a                	je     32ba <last_component+0x5a>
3280:	48 89 c1             	mov    rcx,rax
3283:	31 f6                	xor    esi,esi
3285:	eb 1e                	jmp    32a5 <last_component+0x45>
3287:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
328e:	00 00
3290:	40 84 f6             	test   sil,sil
3293:	74 05                	je     329a <last_component+0x3a>
3295:	48 89 c8             	mov    rax,rcx
3298:	31 f6                	xor    esi,esi
329a:	48 83 c1 01          	add    rcx,0x1
329e:	0f b6 11             	movzx  edx,BYTE PTR [rcx]
32a1:	84 d2                	test   dl,dl
32a3:	74 15                	je     32ba <last_component+0x5a>
32a5:	80 fa 2f             	cmp    dl,0x2f
32a8:	75 e6                	jne    3290 <last_component+0x30>
32aa:	48 83 c1 01          	add    rcx,0x1
32ae:	0f b6 11             	movzx  edx,BYTE PTR [rcx]
32b1:	be 01 00 00 00       	mov    esi,0x1
32b6:	84 d2                	test   dl,dl
32b8:	75 eb                	jne    32a5 <last_component+0x45>
32ba:	f3 c3                	repz ret
32bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000032c0 <base_len>:
32c0:	53                   	push   rbx
32c1:	48 89 fb             	mov    rbx,rdi
32c4:	e8 f7 ea ff ff       	call   1dc0 <strlen@plt>
32c9:	48 83 f8 01          	cmp    rax,0x1
32cd:	76 0b                	jbe    32da <base_len+0x1a>
32cf:	80 7c 03 ff 2f       	cmp    BYTE PTR [rbx+rax*1-0x1],0x2f
32d4:	48 8d 50 ff          	lea    rdx,[rax-0x1]
32d8:	74 0e                	je     32e8 <base_len+0x28>
32da:	5b                   	pop    rbx
32db:	c3                   	ret
32dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
32e0:	48 89 c2             	mov    rdx,rax
32e3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
32e8:	48 83 fa 01          	cmp    rdx,0x1
32ec:	74 12                	je     3300 <base_len+0x40>
32ee:	80 7c 13 ff 2f       	cmp    BYTE PTR [rbx+rdx*1-0x1],0x2f
32f3:	48 8d 42 ff          	lea    rax,[rdx-0x1]
32f7:	74 e7                	je     32e0 <base_len+0x20>
32f9:	48 89 d0             	mov    rax,rdx
32fc:	5b                   	pop    rbx
32fd:	c3                   	ret
32fe:	66 90                	xchg   ax,ax
3300:	b8 01 00 00 00       	mov    eax,0x1
3305:	5b                   	pop    rbx
3306:	c3                   	ret
3307:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
330e:	00 00

0000000000003310 <protect_fd>:
3310:	55                   	push   rbp
3311:	53                   	push   rbx
3312:	89 fd                	mov    ebp,edi
3314:	48 8d 3d a1 46 00 00 	lea    rdi,[rip+0x46a1]        # 79bc <G_line+0x10dc>
331b:	31 f6                	xor    esi,esi
331d:	31 c0                	xor    eax,eax
331f:	48 83 ec 08          	sub    rsp,0x8
3323:	bb 01 00 00 00       	mov    ebx,0x1
3328:	e8 43 ec ff ff       	call   1f70 <open@plt>
332d:	39 c5                	cmp    ebp,eax
332f:	74 18                	je     3349 <protect_fd+0x39>
3331:	31 db                	xor    ebx,ebx
3333:	85 c0                	test   eax,eax
3335:	78 12                	js     3349 <protect_fd+0x39>
3337:	89 c7                	mov    edi,eax
3339:	e8 22 eb ff ff       	call   1e60 <close@plt>
333e:	e8 dd e9 ff ff       	call   1d20 <__errno_location@plt>
3343:	c7 00 09 00 00 00    	mov    DWORD PTR [rax],0x9
3349:	48 83 c4 08          	add    rsp,0x8
334d:	89 d8                	mov    eax,ebx
334f:	5b                   	pop    rbx
3350:	5d                   	pop    rbp
3351:	c3                   	ret
3352:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
3356:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
335d:	00 00 00

0000000000003360 <freopen_safer>:
3360:	41 57                	push   r15
3362:	41 56                	push   r14
3364:	49 89 f7             	mov    r15,rsi
3367:	41 55                	push   r13
3369:	41 54                	push   r12
336b:	49 89 d4             	mov    r12,rdx
336e:	55                   	push   rbp
336f:	53                   	push   rbx
3370:	48 83 ec 18          	sub    rsp,0x18
3374:	48 89 7c 24 08       	mov    QWORD PTR [rsp+0x8],rdi
3379:	48 89 d7             	mov    rdi,rdx
337c:	e8 5f eb ff ff       	call   1ee0 <fileno@plt>
3381:	89 c3                	mov    ebx,eax
3383:	e8 98 e9 ff ff       	call   1d20 <__errno_location@plt>
3388:	83 fb 01             	cmp    ebx,0x1
338b:	49 89 c6             	mov    r14,rax
338e:	0f 84 5c 01 00 00    	je     34f0 <freopen_safer+0x190>
3394:	83 fb 02             	cmp    ebx,0x2
3397:	0f 84 43 01 00 00    	je     34e0 <freopen_safer+0x180>
339d:	85 db                	test   ebx,ebx
339f:	0f 84 b3 00 00 00    	je     3458 <freopen_safer+0xf8>
33a5:	be 02 00 00 00       	mov    esi,0x2
33aa:	bf 02 00 00 00       	mov    edi,0x2
33af:	e8 4c ea ff ff       	call   1e00 <dup2@plt>
33b4:	83 f8 02             	cmp    eax,0x2
33b7:	0f 95 c3             	setne  bl
33ba:	be 01 00 00 00       	mov    esi,0x1
33bf:	bf 01 00 00 00       	mov    edi,0x1
33c4:	e8 37 ea ff ff       	call   1e00 <dup2@plt>
33c9:	83 f8 01             	cmp    eax,0x1
33cc:	40 0f 95 c5          	setne  bpl
33d0:	31 f6                	xor    esi,esi
33d2:	31 ff                	xor    edi,edi
33d4:	e8 27 ea ff ff       	call   1e00 <dup2@plt>
33d9:	85 c0                	test   eax,eax
33db:	0f 84 87 00 00 00    	je     3468 <freopen_safer+0x108>
33e1:	31 ff                	xor    edi,edi
33e3:	e8 28 ff ff ff       	call   3310 <protect_fd>
33e8:	84 c0                	test   al,al
33ea:	41 89 c5             	mov    r13d,eax
33ed:	0f 84 0d 01 00 00    	je     3500 <freopen_safer+0x1a0>
33f3:	40 84 ed             	test   bpl,bpl
33f6:	75 78                	jne    3470 <freopen_safer+0x110>
33f8:	84 db                	test   bl,bl
33fa:	74 14                	je     3410 <freopen_safer+0xb0>
33fc:	bf 02 00 00 00       	mov    edi,0x2
3401:	e8 0a ff ff ff       	call   3310 <protect_fd>
3406:	84 c0                	test   al,al
3408:	89 c3                	mov    ebx,eax
340a:	0f 84 b0 00 00 00    	je     34c0 <freopen_safer+0x160>
3410:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
3415:	4c 89 e2             	mov    rdx,r12
3418:	4c 89 fe             	mov    rsi,r15
341b:	e8 30 ea ff ff       	call   1e50 <freopen@plt>
3420:	49 89 c4             	mov    r12,rax
3423:	84 db                	test   bl,bl
3425:	45 8b 3e             	mov    r15d,DWORD PTR [r14]
3428:	0f 85 a2 00 00 00    	jne    34d0 <freopen_safer+0x170>
342e:	40 84 ed             	test   bpl,bpl
3431:	75 6d                	jne    34a0 <freopen_safer+0x140>
3433:	45 84 ed             	test   r13b,r13b
3436:	75 77                	jne    34af <freopen_safer+0x14f>
3438:	4d 85 e4             	test   r12,r12
343b:	75 03                	jne    3440 <freopen_safer+0xe0>
343d:	45 89 3e             	mov    DWORD PTR [r14],r15d
3440:	48 83 c4 18          	add    rsp,0x18
3444:	4c 89 e0             	mov    rax,r12
3447:	5b                   	pop    rbx
3448:	5d                   	pop    rbp
3449:	41 5c                	pop    r12
344b:	41 5d                	pop    r13
344d:	41 5e                	pop    r14
344f:	41 5f                	pop    r15
3451:	c3                   	ret
3452:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3458:	31 db                	xor    ebx,ebx
345a:	31 ed                	xor    ebp,ebp
345c:	45 31 ed             	xor    r13d,r13d
345f:	eb af                	jmp    3410 <freopen_safer+0xb0>
3461:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
3468:	45 31 ed             	xor    r13d,r13d
346b:	40 84 ed             	test   bpl,bpl
346e:	74 88                	je     33f8 <freopen_safer+0x98>
3470:	bf 01 00 00 00       	mov    edi,0x1
3475:	e8 96 fe ff ff       	call   3310 <protect_fd>
347a:	84 c0                	test   al,al
347c:	89 c5                	mov    ebp,eax
347e:	0f 85 74 ff ff ff    	jne    33f8 <freopen_safer+0x98>
3484:	45 31 e4             	xor    r12d,r12d
3487:	84 db                	test   bl,bl
3489:	45 8b 3e             	mov    r15d,DWORD PTR [r14]
348c:	74 12                	je     34a0 <freopen_safer+0x140>
348e:	bf 02 00 00 00       	mov    edi,0x2
3493:	e8 c8 e9 ff ff       	call   1e60 <close@plt>
3498:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
349f:	00
34a0:	bf 01 00 00 00       	mov    edi,0x1
34a5:	e8 b6 e9 ff ff       	call   1e60 <close@plt>
34aa:	45 84 ed             	test   r13b,r13b
34ad:	74 89                	je     3438 <freopen_safer+0xd8>
34af:	31 ff                	xor    edi,edi
34b1:	e8 aa e9 ff ff       	call   1e60 <close@plt>
34b6:	eb 80                	jmp    3438 <freopen_safer+0xd8>
34b8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
34bf:	00
34c0:	45 8b 3e             	mov    r15d,DWORD PTR [r14]
34c3:	45 31 e4             	xor    r12d,r12d
34c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
34cd:	00 00 00
34d0:	bf 02 00 00 00       	mov    edi,0x2
34d5:	e8 86 e9 ff ff       	call   1e60 <close@plt>
34da:	e9 4f ff ff ff       	jmp    342e <freopen_safer+0xce>
34df:	90                   	nop
34e0:	31 db                	xor    ebx,ebx
34e2:	e9 d3 fe ff ff       	jmp    33ba <freopen_safer+0x5a>
34e7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
34ee:	00 00
34f0:	31 db                	xor    ebx,ebx
34f2:	31 ed                	xor    ebp,ebp
34f4:	e9 d7 fe ff ff       	jmp    33d0 <freopen_safer+0x70>
34f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
3500:	41 bd 01 00 00 00    	mov    r13d,0x1
3506:	45 31 e4             	xor    r12d,r12d
3509:	e9 15 ff ff ff       	jmp    3423 <freopen_safer+0xc3>
350e:	66 90                	xchg   ax,ax

0000000000003510 <set_program_name>:
3510:	48 85 ff             	test   rdi,rdi
3513:	53                   	push   rbx
3514:	74 77                	je     358d <set_program_name+0x7d>
3516:	be 2f 00 00 00       	mov    esi,0x2f
351b:	48 89 fb             	mov    rbx,rdi
351e:	e8 ed e8 ff ff       	call   1e10 <strrchr@plt>
3523:	48 85 c0             	test   rax,rax
3526:	74 55                	je     357d <set_program_name+0x6d>
3528:	4c 8d 40 01          	lea    r8,[rax+0x1]
352c:	4c 89 c2             	mov    rdx,r8
352f:	48 29 da             	sub    rdx,rbx
3532:	48 83 fa 06          	cmp    rdx,0x6
3536:	7e 45                	jle    357d <set_program_name+0x6d>
3538:	48 8d 70 fa          	lea    rsi,[rax-0x6]
353c:	48 8d 3d bd 44 00 00 	lea    rdi,[rip+0x44bd]        # 7a00 <G_line+0x1120>
3543:	b9 07 00 00 00       	mov    ecx,0x7
3548:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
354a:	0f 97 c2             	seta   dl
354d:	80 da 00             	sbb    dl,0x0
3550:	84 d2                	test   dl,dl
3552:	75 29                	jne    357d <set_program_name+0x6d>
3554:	48 8d 3d ad 44 00 00 	lea    rdi,[rip+0x44ad]        # 7a08 <G_line+0x1128>
355b:	b9 03 00 00 00       	mov    ecx,0x3
3560:	4c 89 c6             	mov    rsi,r8
3563:	4c 89 c3             	mov    rbx,r8
3566:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
3568:	0f 97 c2             	seta   dl
356b:	80 da 00             	sbb    dl,0x0
356e:	84 d2                	test   dl,dl
3570:	75 0b                	jne    357d <set_program_name+0x6d>
3572:	48 8d 58 04          	lea    rbx,[rax+0x4]
3576:	48 89 1d 23 6b 20 00 	mov    QWORD PTR [rip+0x206b23],rbx        # 20a0a0 <__progname@@GLIBC_2.2.5>
357d:	48 89 1d e4 6b 20 00 	mov    QWORD PTR [rip+0x206be4],rbx        # 20a168 <program_name>
3584:	48 89 1d 35 6b 20 00 	mov    QWORD PTR [rip+0x206b35],rbx        # 20a0c0 <__progname_full@@GLIBC_2.2.5>
358b:	5b                   	pop    rbx
358c:	c3                   	ret
358d:	48 8b 0d 4c 6b 20 00 	mov    rcx,QWORD PTR [rip+0x206b4c]        # 20a0e0 <stderr@@GLIBC_2.2.5>
3594:	48 8d 3d 2d 44 00 00 	lea    rdi,[rip+0x442d]        # 79c8 <G_line+0x10e8>
359b:	ba 37 00 00 00       	mov    edx,0x37
35a0:	be 01 00 00 00       	mov    esi,0x1
35a5:	e8 06 ea ff ff       	call   1fb0 <fwrite@plt>
35aa:	e8 61 e7 ff ff       	call   1d10 <abort@plt>
35af:	90                   	nop

00000000000035b0 <gettext_quote.part.1>:
35b0:	55                   	push   rbp
35b1:	53                   	push   rbx
35b2:	48 89 fd             	mov    rbp,rdi
35b5:	89 f3                	mov    ebx,esi
35b7:	48 83 ec 08          	sub    rsp,0x8
35bb:	e8 00 2b 00 00       	call   60c0 <locale_charset>
35c0:	0f b6 10             	movzx  edx,BYTE PTR [rax]
35c3:	83 e2 df             	and    edx,0xffffffdf
35c6:	80 fa 55             	cmp    dl,0x55
35c9:	74 75                	je     3640 <gettext_quote.part.1+0x90>
35cb:	80 fa 47             	cmp    dl,0x47
35ce:	74 20                	je     35f0 <gettext_quote.part.1+0x40>
35d0:	48 8d 05 44 44 00 00 	lea    rax,[rip+0x4444]        # 7a1b <G_line+0x113b>
35d7:	48 8d 15 f9 2c 00 00 	lea    rdx,[rip+0x2cf9]        # 62d7 <_IO_stdin_used+0x137>
35de:	83 fb 09             	cmp    ebx,0x9
35e1:	48 0f 45 c2          	cmovne rax,rdx
35e5:	48 83 c4 08          	add    rsp,0x8
35e9:	5b                   	pop    rbx
35ea:	5d                   	pop    rbp
35eb:	c3                   	ret
35ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
35f0:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
35f4:	83 e2 df             	and    edx,0xffffffdf
35f7:	80 fa 42             	cmp    dl,0x42
35fa:	75 d4                	jne    35d0 <gettext_quote.part.1+0x20>
35fc:	80 78 02 31          	cmp    BYTE PTR [rax+0x2],0x31
3600:	75 ce                	jne    35d0 <gettext_quote.part.1+0x20>
3602:	80 78 03 38          	cmp    BYTE PTR [rax+0x3],0x38
3606:	75 c8                	jne    35d0 <gettext_quote.part.1+0x20>
3608:	80 78 04 30          	cmp    BYTE PTR [rax+0x4],0x30
360c:	75 c2                	jne    35d0 <gettext_quote.part.1+0x20>
360e:	80 78 05 33          	cmp    BYTE PTR [rax+0x5],0x33
3612:	75 bc                	jne    35d0 <gettext_quote.part.1+0x20>
3614:	80 78 06 30          	cmp    BYTE PTR [rax+0x6],0x30
3618:	75 b6                	jne    35d0 <gettext_quote.part.1+0x20>
361a:	80 78 07 00          	cmp    BYTE PTR [rax+0x7],0x0
361e:	75 b0                	jne    35d0 <gettext_quote.part.1+0x20>
3620:	80 7d 00 60          	cmp    BYTE PTR [rbp+0x0],0x60
3624:	48 8d 05 e9 43 00 00 	lea    rax,[rip+0x43e9]        # 7a14 <G_line+0x1134>
362b:	48 8d 15 e6 43 00 00 	lea    rdx,[rip+0x43e6]        # 7a18 <G_line+0x1138>
3632:	48 0f 45 c2          	cmovne rax,rdx
3636:	48 83 c4 08          	add    rsp,0x8
363a:	5b                   	pop    rbx
363b:	5d                   	pop    rbp
363c:	c3                   	ret
363d:	0f 1f 00             	nop    DWORD PTR [rax]
3640:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
3644:	83 e2 df             	and    edx,0xffffffdf
3647:	80 fa 54             	cmp    dl,0x54
364a:	75 84                	jne    35d0 <gettext_quote.part.1+0x20>
364c:	0f b6 50 02          	movzx  edx,BYTE PTR [rax+0x2]
3650:	83 e2 df             	and    edx,0xffffffdf
3653:	80 fa 46             	cmp    dl,0x46
3656:	0f 85 74 ff ff ff    	jne    35d0 <gettext_quote.part.1+0x20>
365c:	80 78 03 2d          	cmp    BYTE PTR [rax+0x3],0x2d
3660:	0f 85 6a ff ff ff    	jne    35d0 <gettext_quote.part.1+0x20>
3666:	80 78 04 38          	cmp    BYTE PTR [rax+0x4],0x38
366a:	0f 85 60 ff ff ff    	jne    35d0 <gettext_quote.part.1+0x20>
3670:	80 78 05 00          	cmp    BYTE PTR [rax+0x5],0x0
3674:	0f 85 56 ff ff ff    	jne    35d0 <gettext_quote.part.1+0x20>
367a:	80 7d 00 60          	cmp    BYTE PTR [rbp+0x0],0x60
367e:	48 8d 05 87 43 00 00 	lea    rax,[rip+0x4387]        # 7a0c <G_line+0x112c>
3685:	48 8d 15 84 43 00 00 	lea    rdx,[rip+0x4384]        # 7a10 <G_line+0x1130>
368c:	48 0f 45 c2          	cmovne rax,rdx
3690:	48 83 c4 08          	add    rsp,0x8
3694:	5b                   	pop    rbx
3695:	5d                   	pop    rbp
3696:	c3                   	ret
3697:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
369e:	00 00

00000000000036a0 <quotearg_buffer_restyled>:
36a0:	41 57                	push   r15
36a2:	41 56                	push   r14
36a4:	45 89 c7             	mov    r15d,r8d
36a7:	41 55                	push   r13
36a9:	41 54                	push   r12
36ab:	49 89 fe             	mov    r14,rdi
36ae:	55                   	push   rbp
36af:	53                   	push   rbx
36b0:	44 89 cb             	mov    ebx,r9d
36b3:	49 89 f5             	mov    r13,rsi
36b6:	48 89 cd             	mov    rbp,rcx
36b9:	83 e3 02             	and    ebx,0x2
36bc:	48 81 ec b8 00 00 00 	sub    rsp,0xb8
36c3:	48 8b 84 24 f0 00 00 	mov    rax,QWORD PTR [rsp+0xf0]
36ca:	00
36cb:	48 89 54 24 10       	mov    QWORD PTR [rsp+0x10],rdx
36d0:	44 89 44 24 08       	mov    DWORD PTR [rsp+0x8],r8d
36d5:	44 89 4c 24 78       	mov    DWORD PTR [rsp+0x78],r9d
36da:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
36df:	48 8b 84 24 f8 00 00 	mov    rax,QWORD PTR [rsp+0xf8]
36e6:	00
36e7:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
36ec:	48 8b 84 24 00 01 00 	mov    rax,QWORD PTR [rsp+0x100]
36f3:	00
36f4:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
36f9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
3700:	00 00
3702:	48 89 84 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],rax
3709:	00
370a:	31 c0                	xor    eax,eax
370c:	e8 9f e6 ff ff       	call   1db0 <__ctype_get_mb_cur_max@plt>
3711:	41 83 ff 0a          	cmp    r15d,0xa
3715:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
371a:	0f 87 af 11 00 00    	ja     48cf <quotearg_buffer_restyled+0x122f>
3720:	48 8d 0d 59 43 00 00 	lea    rcx,[rip+0x4359]        # 7a80 <G_line+0x11a0>
3727:	44 89 fa             	mov    edx,r15d
372a:	48 63 04 91          	movsxd rax,DWORD PTR [rcx+rdx*4]
372e:	48 01 c8             	add    rax,rcx
3731:	ff e0                	jmp    rax
3733:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
3738:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
373d:	45 31 e4             	xor    r12d,r12d
3740:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
3747:	00 00
3749:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
374e:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
3753:	48 8d 05 7d 2b 00 00 	lea    rax,[rip+0x2b7d]        # 62d7 <_IO_stdin_used+0x137>
375a:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
3761:	00 00
3763:	45 31 ff             	xor    r15d,r15d
3766:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
376d:	00
376e:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
3773:	45 31 db             	xor    r11d,r11d
3776:	48 89 e8             	mov    rax,rbp
3779:	45 89 e0             	mov    r8d,r12d
377c:	4c 89 dd             	mov    rbp,r11
377f:	49 89 c3             	mov    r11,rax
3782:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3788:	49 39 eb             	cmp    r11,rbp
378b:	41 0f 95 c4          	setne  r12b
378f:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
3793:	75 0d                	jne    37a2 <quotearg_buffer_restyled+0x102>
3795:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
379a:	80 3c 28 00          	cmp    BYTE PTR [rax+rbp*1],0x0
379e:	41 0f 95 c4          	setne  r12b
37a2:	45 84 e4             	test   r12b,r12b
37a5:	0f 84 55 06 00 00    	je     3e00 <quotearg_buffer_restyled+0x760>
37ab:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
37b0:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
37b5:	4c 8d 0c 2f          	lea    r9,[rdi+rbp*1]
37b9:	0f 95 c0             	setne  al
37bc:	22 44 24 0d          	and    al,BYTE PTR [rsp+0xd]
37c0:	41 89 c2             	mov    r10d,eax
37c3:	0f 84 a7 00 00 00    	je     3870 <quotearg_buffer_restyled+0x1d0>
37c9:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
37ce:	48 85 c0             	test   rax,rax
37d1:	0f 84 29 04 00 00    	je     3c00 <quotearg_buffer_restyled+0x560>
37d7:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
37db:	48 8d 5c 05 00       	lea    rbx,[rbp+rax*1+0x0]
37e0:	75 2e                	jne    3810 <quotearg_buffer_restyled+0x170>
37e2:	48 83 f8 01          	cmp    rax,0x1
37e6:	76 28                	jbe    3810 <quotearg_buffer_restyled+0x170>
37e8:	44 88 44 24 38       	mov    BYTE PTR [rsp+0x38],r8b
37ed:	44 88 54 24 30       	mov    BYTE PTR [rsp+0x30],r10b
37f2:	4c 89 4c 24 28       	mov    QWORD PTR [rsp+0x28],r9
37f7:	e8 c4 e5 ff ff       	call   1dc0 <strlen@plt>
37fc:	44 0f b6 44 24 38    	movzx  r8d,BYTE PTR [rsp+0x38]
3802:	44 0f b6 54 24 30    	movzx  r10d,BYTE PTR [rsp+0x30]
3808:	49 89 c3             	mov    r11,rax
380b:	4c 8b 4c 24 28       	mov    r9,QWORD PTR [rsp+0x28]
3810:	4c 39 db             	cmp    rbx,r11
3813:	44 88 54 24 28       	mov    BYTE PTR [rsp+0x28],r10b
3818:	0f 87 b2 05 00 00    	ja     3dd0 <quotearg_buffer_restyled+0x730>
381e:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
3823:	48 8b 74 24 48       	mov    rsi,QWORD PTR [rsp+0x48]
3828:	4c 89 cf             	mov    rdi,r9
382b:	4c 89 5c 24 40       	mov    QWORD PTR [rsp+0x40],r11
3830:	44 88 44 24 38       	mov    BYTE PTR [rsp+0x38],r8b
3835:	4c 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],r9
383a:	e8 41 e6 ff ff       	call   1e80 <memcmp@plt>
383f:	85 c0                	test   eax,eax
3841:	4c 8b 4c 24 30       	mov    r9,QWORD PTR [rsp+0x30]
3846:	44 0f b6 44 24 38    	movzx  r8d,BYTE PTR [rsp+0x38]
384c:	4c 8b 5c 24 40       	mov    r11,QWORD PTR [rsp+0x40]
3851:	0f 85 79 05 00 00    	jne    3dd0 <quotearg_buffer_restyled+0x730>
3857:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
385c:	44 0f b6 54 24 28    	movzx  r10d,BYTE PTR [rsp+0x28]
3862:	0f 85 7d 0f 00 00    	jne    47e5 <quotearg_buffer_restyled+0x1145>
3868:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
386f:	00
3870:	41 0f b6 19          	movzx  ebx,BYTE PTR [r9]
3874:	80 fb 7e             	cmp    bl,0x7e
3877:	0f 87 1b 03 00 00    	ja     3b98 <quotearg_buffer_restyled+0x4f8>
387d:	48 8d 0d 28 42 00 00 	lea    rcx,[rip+0x4228]        # 7aac <G_line+0x11cc>
3884:	0f b6 d3             	movzx  edx,bl
3887:	48 63 04 91          	movsxd rax,DWORD PTR [rcx+rdx*4]
388b:	48 01 c8             	add    rax,rcx
388e:	ff e0                	jmp    rax
3890:	45 31 d2             	xor    r10d,r10d
3893:	49 83 fb 01          	cmp    r11,0x1
3897:	0f 95 c0             	setne  al
389a:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
389e:	75 0c                	jne    38ac <quotearg_buffer_restyled+0x20c>
38a0:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
38a5:	80 78 01 00          	cmp    BYTE PTR [rax+0x1],0x0
38a9:	0f 95 c0             	setne  al
38ac:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
38b1:	0f 94 c2             	sete   dl
38b4:	84 c0                	test   al,al
38b6:	0f 84 4c 02 00 00    	je     3b08 <quotearg_buffer_restyled+0x468>
38bc:	45 31 e4             	xor    r12d,r12d
38bf:	31 c0                	xor    eax,eax
38c1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
38c8:	80 7c 24 0d 01       	cmp    BYTE PTR [rsp+0xd],0x1
38cd:	0f 85 0f 01 00 00    	jne    39e2 <quotearg_buffer_restyled+0x342>
38d3:	84 d2                	test   dl,dl
38d5:	0f 85 07 01 00 00    	jne    39e2 <quotearg_buffer_restyled+0x342>
38db:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
38e0:	48 85 f6             	test   rsi,rsi
38e3:	74 14                	je     38f9 <quotearg_buffer_restyled+0x259>
38e5:	89 da                	mov    edx,ebx
38e7:	c0 ea 05             	shr    dl,0x5
38ea:	0f b6 d2             	movzx  edx,dl
38ed:	8b 14 96             	mov    edx,DWORD PTR [rsi+rdx*4]
38f0:	0f a3 da             	bt     edx,ebx
38f3:	0f 82 4a 01 00 00    	jb     3a43 <quotearg_buffer_restyled+0x3a3>
38f9:	45 84 d2             	test   r10b,r10b
38fc:	0f 85 41 01 00 00    	jne    3a43 <quotearg_buffer_restyled+0x3a3>
3902:	83 f0 01             	xor    eax,0x1
3905:	48 83 c5 01          	add    rbp,0x1
3909:	44 21 c0             	and    eax,r8d
390c:	84 c0                	test   al,al
390e:	74 20                	je     3930 <quotearg_buffer_restyled+0x290>
3910:	4d 39 fd             	cmp    r13,r15
3913:	76 05                	jbe    391a <quotearg_buffer_restyled+0x27a>
3915:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
391a:	49 8d 47 01          	lea    rax,[r15+0x1]
391e:	49 39 c5             	cmp    r13,rax
3921:	76 06                	jbe    3929 <quotearg_buffer_restyled+0x289>
3923:	43 c6 44 3e 01 27    	mov    BYTE PTR [r14+r15*1+0x1],0x27
3929:	49 83 c7 02          	add    r15,0x2
392d:	45 31 c0             	xor    r8d,r8d
3930:	4d 39 ef             	cmp    r15,r13
3933:	73 04                	jae    3939 <quotearg_buffer_restyled+0x299>
3935:	43 88 1c 3e          	mov    BYTE PTR [r14+r15*1],bl
3939:	0f b6 7c 24 0e       	movzx  edi,BYTE PTR [rsp+0xe]
393e:	49 83 c7 01          	add    r15,0x1
3942:	b8 00 00 00 00       	mov    eax,0x0
3947:	45 84 e4             	test   r12b,r12b
394a:	0f 44 f8             	cmove  edi,eax
394d:	40 88 7c 24 0e       	mov    BYTE PTR [rsp+0xe],dil
3952:	e9 31 fe ff ff       	jmp    3788 <quotearg_buffer_restyled+0xe8>
3957:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
395e:	00 00
3960:	45 31 d2             	xor    r10d,r10d
3963:	8b 44 24 08          	mov    eax,DWORD PTR [rsp+0x8]
3967:	83 f8 02             	cmp    eax,0x2
396a:	0f 84 b8 05 00 00    	je     3f28 <quotearg_buffer_restyled+0x888>
3970:	83 f8 05             	cmp    eax,0x5
3973:	0f 84 6f 05 00 00    	je     3ee8 <quotearg_buffer_restyled+0x848>
3979:	83 f8 02             	cmp    eax,0x2
397c:	bb 3f 00 00 00       	mov    ebx,0x3f
3981:	0f 94 c2             	sete   dl
3984:	45 31 e4             	xor    r12d,r12d
3987:	31 c0                	xor    eax,eax
3989:	e9 3a ff ff ff       	jmp    38c8 <quotearg_buffer_restyled+0x228>
398e:	66 90                	xchg   ax,ax
3990:	45 31 d2             	xor    r10d,r10d
3993:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3998:	0f 84 02 05 00 00    	je     3ea0 <quotearg_buffer_restyled+0x800>
399e:	44 88 64 24 7c       	mov    BYTE PTR [rsp+0x7c],r12b
39a3:	31 d2                	xor    edx,edx
39a5:	31 c0                	xor    eax,eax
39a7:	bb 27 00 00 00       	mov    ebx,0x27
39ac:	e9 17 ff ff ff       	jmp    38c8 <quotearg_buffer_restyled+0x228>
39b1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
39b8:	ba 09 00 00 00       	mov    edx,0x9
39bd:	bb 74 00 00 00       	mov    ebx,0x74
39c2:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
39c7:	0f 94 c0             	sete   al
39ca:	22 44 24 0f          	and    al,BYTE PTR [rsp+0xf]
39ce:	0f 85 4a 01 00 00    	jne    3b1e <quotearg_buffer_restyled+0x47e>
39d4:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
39d9:	75 65                	jne    3a40 <quotearg_buffer_restyled+0x3a0>
39db:	89 d3                	mov    ebx,edx
39dd:	45 31 e4             	xor    r12d,r12d
39e0:	31 c0                	xor    eax,eax
39e2:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
39e7:	0f 85 ee fe ff ff    	jne    38db <quotearg_buffer_restyled+0x23b>
39ed:	e9 07 ff ff ff       	jmp    38f9 <quotearg_buffer_restyled+0x259>
39f2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
39f8:	ba 08 00 00 00       	mov    edx,0x8
39fd:	bb 62 00 00 00       	mov    ebx,0x62
3a02:	eb d0                	jmp    39d4 <quotearg_buffer_restyled+0x334>
3a04:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
3a08:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3a0d:	0f 84 cd 03 00 00    	je     3de0 <quotearg_buffer_restyled+0x740>
3a13:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
3a18:	0f 84 12 02 00 00    	je     3c30 <quotearg_buffer_restyled+0x590>
3a1e:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
3a23:	0f 84 07 02 00 00    	je     3c30 <quotearg_buffer_restyled+0x590>
3a29:	48 83 7c 24 18 00    	cmp    QWORD PTR [rsp+0x18],0x0
3a2f:	0f 85 b6 03 00 00    	jne    3deb <quotearg_buffer_restyled+0x74b>
3a35:	bb 5c 00 00 00       	mov    ebx,0x5c
3a3a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3a40:	45 31 e4             	xor    r12d,r12d
3a43:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3a48:	0f 94 c2             	sete   dl
3a4b:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
3a50:	89 d0                	mov    eax,edx
3a52:	0f 85 50 08 00 00    	jne    42a8 <quotearg_buffer_restyled+0xc08>
3a58:	44 89 c0             	mov    eax,r8d
3a5b:	83 f0 01             	xor    eax,0x1
3a5e:	20 d0                	and    al,dl
3a60:	74 2f                	je     3a91 <quotearg_buffer_restyled+0x3f1>
3a62:	4d 39 fd             	cmp    r13,r15
3a65:	76 05                	jbe    3a6c <quotearg_buffer_restyled+0x3cc>
3a67:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
3a6c:	49 8d 57 01          	lea    rdx,[r15+0x1]
3a70:	49 39 d5             	cmp    r13,rdx
3a73:	76 06                	jbe    3a7b <quotearg_buffer_restyled+0x3db>
3a75:	43 c6 44 3e 01 24    	mov    BYTE PTR [r14+r15*1+0x1],0x24
3a7b:	49 8d 57 02          	lea    rdx,[r15+0x2]
3a7f:	49 39 d5             	cmp    r13,rdx
3a82:	76 06                	jbe    3a8a <quotearg_buffer_restyled+0x3ea>
3a84:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
3a8a:	49 83 c7 03          	add    r15,0x3
3a8e:	41 89 c0             	mov    r8d,eax
3a91:	4d 39 fd             	cmp    r13,r15
3a94:	76 05                	jbe    3a9b <quotearg_buffer_restyled+0x3fb>
3a96:	43 c6 04 3e 5c       	mov    BYTE PTR [r14+r15*1],0x5c
3a9b:	49 83 c7 01          	add    r15,0x1
3a9f:	48 83 c5 01          	add    rbp,0x1
3aa3:	e9 88 fe ff ff       	jmp    3930 <quotearg_buffer_restyled+0x290>
3aa8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
3aaf:	00
3ab0:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
3ab5:	0f 85 c8 01 00 00    	jne    3c83 <quotearg_buffer_restyled+0x5e3>
3abb:	31 d2                	xor    edx,edx
3abd:	f6 44 24 78 01       	test   BYTE PTR [rsp+0x78],0x1
3ac2:	0f 84 13 ff ff ff    	je     39db <quotearg_buffer_restyled+0x33b>
3ac8:	48 83 c5 01          	add    rbp,0x1
3acc:	e9 b7 fc ff ff       	jmp    3788 <quotearg_buffer_restyled+0xe8>
3ad1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
3ad8:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3add:	0f 94 c2             	sete   dl
3ae0:	31 c0                	xor    eax,eax
3ae2:	e9 e1 fd ff ff       	jmp    38c8 <quotearg_buffer_restyled+0x228>
3ae7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
3aee:	00 00
3af0:	ba 07 00 00 00       	mov    edx,0x7
3af5:	bb 61 00 00 00       	mov    ebx,0x61
3afa:	e9 d5 fe ff ff       	jmp    39d4 <quotearg_buffer_restyled+0x334>
3aff:	90                   	nop
3b00:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3b05:	0f 94 c2             	sete   dl
3b08:	48 85 ed             	test   rbp,rbp
3b0b:	0f 85 ab fd ff ff    	jne    38bc <quotearg_buffer_restyled+0x21c>
3b11:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [rsp+0xf]
3b16:	20 d0                	and    al,dl
3b18:	0f 84 aa fd ff ff    	je     38c8 <quotearg_buffer_restyled+0x228>
3b1e:	4c 89 dd             	mov    rbp,r11
3b21:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
3b28:	00
3b29:	e9 fb 06 00 00       	jmp    4229 <quotearg_buffer_restyled+0xb89>
3b2e:	66 90                	xchg   ax,ax
3b30:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3b35:	0f 94 c2             	sete   dl
3b38:	45 31 e4             	xor    r12d,r12d
3b3b:	eb d4                	jmp    3b11 <quotearg_buffer_restyled+0x471>
3b3d:	0f 1f 00             	nop    DWORD PTR [rax]
3b40:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3b45:	bb 20 00 00 00       	mov    ebx,0x20
3b4a:	0f 94 c2             	sete   dl
3b4d:	eb c2                	jmp    3b11 <quotearg_buffer_restyled+0x471>
3b4f:	90                   	nop
3b50:	ba 0d 00 00 00       	mov    edx,0xd
3b55:	bb 72 00 00 00       	mov    ebx,0x72
3b5a:	e9 63 fe ff ff       	jmp    39c2 <quotearg_buffer_restyled+0x322>
3b5f:	90                   	nop
3b60:	ba 0c 00 00 00       	mov    edx,0xc
3b65:	bb 66 00 00 00       	mov    ebx,0x66
3b6a:	e9 65 fe ff ff       	jmp    39d4 <quotearg_buffer_restyled+0x334>
3b6f:	90                   	nop
3b70:	ba 0b 00 00 00       	mov    edx,0xb
3b75:	bb 76 00 00 00       	mov    ebx,0x76
3b7a:	e9 55 fe ff ff       	jmp    39d4 <quotearg_buffer_restyled+0x334>
3b7f:	90                   	nop
3b80:	ba 0a 00 00 00       	mov    edx,0xa
3b85:	bb 6e 00 00 00       	mov    ebx,0x6e
3b8a:	e9 33 fe ff ff       	jmp    39c2 <quotearg_buffer_restyled+0x322>
3b8f:	90                   	nop
3b90:	45 31 d2             	xor    r10d,r10d
3b93:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3b98:	48 83 7c 24 58 01    	cmp    QWORD PTR [rsp+0x58],0x1
3b9e:	0f 85 a4 03 00 00    	jne    3f48 <quotearg_buffer_restyled+0x8a8>
3ba4:	4c 89 5c 24 38       	mov    QWORD PTR [rsp+0x38],r11
3ba9:	44 88 44 24 30       	mov    BYTE PTR [rsp+0x30],r8b
3bae:	44 88 54 24 28       	mov    BYTE PTR [rsp+0x28],r10b
3bb3:	e8 38 e4 ff ff       	call   1ff0 <__ctype_b_loc@plt>
3bb8:	48 8b 08             	mov    rcx,QWORD PTR [rax]
3bbb:	0f b6 d3             	movzx  edx,bl
3bbe:	44 0f b6 54 24 28    	movzx  r10d,BYTE PTR [rsp+0x28]
3bc4:	44 0f b6 44 24 30    	movzx  r8d,BYTE PTR [rsp+0x30]
3bca:	4c 8b 5c 24 38       	mov    r11,QWORD PTR [rsp+0x38]
3bcf:	bf 01 00 00 00       	mov    edi,0x1
3bd4:	0f b7 04 51          	movzx  eax,WORD PTR [rcx+rdx*2]
3bd8:	66 25 00 40          	and    ax,0x4000
3bdc:	41 0f 95 c4          	setne  r12b
3be0:	0f 94 c0             	sete   al
3be3:	22 44 24 0d          	and    al,BYTE PTR [rsp+0xd]
3be7:	84 c0                	test   al,al
3be9:	0f 85 92 09 00 00    	jne    4581 <quotearg_buffer_restyled+0xee1>
3bef:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3bf4:	0f 94 c2             	sete   dl
3bf7:	e9 cc fc ff ff       	jmp    38c8 <quotearg_buffer_restyled+0x228>
3bfc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
3c00:	41 0f b6 19          	movzx  ebx,BYTE PTR [r9]
3c04:	80 fb 7e             	cmp    bl,0x7e
3c07:	77 87                	ja     3b90 <quotearg_buffer_restyled+0x4f0>
3c09:	48 8d 0d 98 40 00 00 	lea    rcx,[rip+0x4098]        # 7ca8 <G_line+0x13c8>
3c10:	0f b6 d3             	movzx  edx,bl
3c13:	48 63 04 91          	movsxd rax,DWORD PTR [rcx+rdx*4]
3c17:	48 01 c8             	add    rax,rcx
3c1a:	ff e0                	jmp    rax
3c1c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
3c20:	45 31 d2             	xor    r10d,r10d
3c23:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
3c28:	0f 85 f0 fd ff ff    	jne    3a1e <quotearg_buffer_restyled+0x37e>
3c2e:	66 90                	xchg   ax,ax
3c30:	ba 5c 00 00 00       	mov    edx,0x5c
3c35:	bb 5c 00 00 00       	mov    ebx,0x5c
3c3a:	e9 95 fd ff ff       	jmp    39d4 <quotearg_buffer_restyled+0x334>
3c3f:	90                   	nop
3c40:	ba 0c 00 00 00       	mov    edx,0xc
3c45:	45 31 d2             	xor    r10d,r10d
3c48:	bb 66 00 00 00       	mov    ebx,0x66
3c4d:	e9 82 fd ff ff       	jmp    39d4 <quotearg_buffer_restyled+0x334>
3c52:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3c58:	ba 0a 00 00 00       	mov    edx,0xa
3c5d:	45 31 d2             	xor    r10d,r10d
3c60:	bb 6e 00 00 00       	mov    ebx,0x6e
3c65:	e9 58 fd ff ff       	jmp    39c2 <quotearg_buffer_restyled+0x322>
3c6a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3c70:	bb 61 00 00 00       	mov    ebx,0x61
3c75:	e9 c6 fd ff ff       	jmp    3a40 <quotearg_buffer_restyled+0x3a0>
3c7a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3c80:	45 31 d2             	xor    r10d,r10d
3c83:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3c88:	0f 94 c2             	sete   dl
3c8b:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
3c90:	0f 85 94 0b 00 00    	jne    482a <quotearg_buffer_restyled+0x118a>
3c96:	44 89 c0             	mov    eax,r8d
3c99:	4c 89 f9             	mov    rcx,r15
3c9c:	83 f0 01             	xor    eax,0x1
3c9f:	20 d0                	and    al,dl
3ca1:	74 2d                	je     3cd0 <quotearg_buffer_restyled+0x630>
3ca3:	4d 39 fd             	cmp    r13,r15
3ca6:	76 05                	jbe    3cad <quotearg_buffer_restyled+0x60d>
3ca8:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
3cad:	49 8d 4f 01          	lea    rcx,[r15+0x1]
3cb1:	49 39 cd             	cmp    r13,rcx
3cb4:	76 06                	jbe    3cbc <quotearg_buffer_restyled+0x61c>
3cb6:	43 c6 44 3e 01 24    	mov    BYTE PTR [r14+r15*1+0x1],0x24
3cbc:	49 8d 4f 02          	lea    rcx,[r15+0x2]
3cc0:	49 39 cd             	cmp    r13,rcx
3cc3:	0f 87 30 06 00 00    	ja     42f9 <quotearg_buffer_restyled+0xc59>
3cc9:	49 8d 4f 03          	lea    rcx,[r15+0x3]
3ccd:	41 89 c0             	mov    r8d,eax
3cd0:	49 39 cd             	cmp    r13,rcx
3cd3:	76 05                	jbe    3cda <quotearg_buffer_restyled+0x63a>
3cd5:	41 c6 04 0e 5c       	mov    BYTE PTR [r14+rcx*1],0x5c
3cda:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3cdf:	4c 8d 79 01          	lea    r15,[rcx+0x1]
3ce3:	0f 84 00 06 00 00    	je     42e9 <quotearg_buffer_restyled+0xc49>
3ce9:	48 8d 45 01          	lea    rax,[rbp+0x1]
3ced:	4c 39 d8             	cmp    rax,r11
3cf0:	73 19                	jae    3d0b <quotearg_buffer_restyled+0x66b>
3cf2:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
3cf7:	0f b6 44 28 01       	movzx  eax,BYTE PTR [rax+rbp*1+0x1]
3cfc:	88 44 24 28          	mov    BYTE PTR [rsp+0x28],al
3d00:	83 e8 30             	sub    eax,0x30
3d03:	3c 09                	cmp    al,0x9
3d05:	0f 86 2e 08 00 00    	jbe    4539 <quotearg_buffer_restyled+0xe99>
3d0b:	44 89 e0             	mov    eax,r12d
3d0e:	bb 30 00 00 00       	mov    ebx,0x30
3d13:	45 31 e4             	xor    r12d,r12d
3d16:	e9 ad fb ff ff       	jmp    38c8 <quotearg_buffer_restyled+0x228>
3d1b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3d20:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3d25:	45 89 d4             	mov    r12d,r10d
3d28:	0f 94 c2             	sete   dl
3d2b:	45 31 d2             	xor    r10d,r10d
3d2e:	31 c0                	xor    eax,eax
3d30:	e9 93 fb ff ff       	jmp    38c8 <quotearg_buffer_restyled+0x228>
3d35:	0f 1f 00             	nop    DWORD PTR [rax]
3d38:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3d3d:	0f 94 c2             	sete   dl
3d40:	45 31 d2             	xor    r10d,r10d
3d43:	e9 c0 fd ff ff       	jmp    3b08 <quotearg_buffer_restyled+0x468>
3d48:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
3d4f:	00
3d50:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3d55:	0f 94 c2             	sete   dl
3d58:	45 31 d2             	xor    r10d,r10d
3d5b:	45 31 e4             	xor    r12d,r12d
3d5e:	e9 ae fd ff ff       	jmp    3b11 <quotearg_buffer_restyled+0x471>
3d63:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3d68:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3d6d:	45 89 d4             	mov    r12d,r10d
3d70:	bb 20 00 00 00       	mov    ebx,0x20
3d75:	0f 94 c2             	sete   dl
3d78:	45 31 d2             	xor    r10d,r10d
3d7b:	e9 91 fd ff ff       	jmp    3b11 <quotearg_buffer_restyled+0x471>
3d80:	ba 0d 00 00 00       	mov    edx,0xd
3d85:	45 31 d2             	xor    r10d,r10d
3d88:	bb 72 00 00 00       	mov    ebx,0x72
3d8d:	e9 30 fc ff ff       	jmp    39c2 <quotearg_buffer_restyled+0x322>
3d92:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3d98:	bb 76 00 00 00       	mov    ebx,0x76
3d9d:	e9 9e fc ff ff       	jmp    3a40 <quotearg_buffer_restyled+0x3a0>
3da2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3da8:	ba 09 00 00 00       	mov    edx,0x9
3dad:	45 31 d2             	xor    r10d,r10d
3db0:	bb 74 00 00 00       	mov    ebx,0x74
3db5:	e9 08 fc ff ff       	jmp    39c2 <quotearg_buffer_restyled+0x322>
3dba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3dc0:	bb 62 00 00 00       	mov    ebx,0x62
3dc5:	e9 76 fc ff ff       	jmp    3a40 <quotearg_buffer_restyled+0x3a0>
3dca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3dd0:	45 31 d2             	xor    r10d,r10d
3dd3:	e9 98 fa ff ff       	jmp    3870 <quotearg_buffer_restyled+0x1d0>
3dd8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
3ddf:	00
3de0:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
3de5:	0f 85 65 09 00 00    	jne    4750 <quotearg_buffer_restyled+0x10b0>
3deb:	48 83 c5 01          	add    rbp,0x1
3def:	44 89 c0             	mov    eax,r8d
3df2:	45 31 e4             	xor    r12d,r12d
3df5:	bb 5c 00 00 00       	mov    ebx,0x5c
3dfa:	e9 0d fb ff ff       	jmp    390c <quotearg_buffer_restyled+0x26c>
3dff:	90                   	nop
3e00:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
3e05:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
3e0a:	45 89 c4             	mov    r12d,r8d
3e0d:	4c 89 dd             	mov    rbp,r11
3e10:	0f 94 c2             	sete   dl
3e13:	89 d8                	mov    eax,ebx
3e15:	4d 85 ff             	test   r15,r15
3e18:	0f 94 c1             	sete   cl
3e1b:	21 d0                	and    eax,edx
3e1d:	20 c8                	and    al,cl
3e1f:	0f 85 61 0a 00 00    	jne    4886 <quotearg_buffer_restyled+0x11e6>
3e25:	89 d8                	mov    eax,ebx
3e27:	83 f0 01             	xor    eax,0x1
3e2a:	20 c2                	and    dl,al
3e2c:	0f 84 6a 09 00 00    	je     479c <quotearg_buffer_restyled+0x10fc>
3e32:	80 7c 24 7c 00       	cmp    BYTE PTR [rsp+0x7c],0x0
3e37:	0f 84 5d 09 00 00    	je     479a <quotearg_buffer_restyled+0x10fa>
3e3d:	80 7c 24 0e 00       	cmp    BYTE PTR [rsp+0xe],0x0
3e42:	0f 85 f5 09 00 00    	jne    483d <quotearg_buffer_restyled+0x119d>
3e48:	4d 85 ed             	test   r13,r13
3e4b:	0f 94 c0             	sete   al
3e4e:	48 83 7c 24 50 00    	cmp    QWORD PTR [rsp+0x50],0x0
3e54:	0f 95 c2             	setne  dl
3e57:	20 d0                	and    al,dl
3e59:	0f 84 1d 0a 00 00    	je     487c <quotearg_buffer_restyled+0x11dc>
3e5f:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
3e64:	48 8d 1d 6c 24 00 00 	lea    rbx,[rip+0x246c]        # 62d7 <_IO_stdin_used+0x137>
3e6b:	41 c6 06 27          	mov    BYTE PTR [r14],0x27
3e6f:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
3e76:	00
3e77:	41 bf 01 00 00 00    	mov    r15d,0x1
3e7d:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
3e84:	00 00
3e86:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
3e8b:	48 89 5c 24 48       	mov    QWORD PTR [rsp+0x48],rbx
3e90:	88 44 24 7c          	mov    BYTE PTR [rsp+0x7c],al
3e94:	e9 da f8 ff ff       	jmp    3773 <quotearg_buffer_restyled+0xd3>
3e99:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
3ea0:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
3ea5:	0f 85 a5 08 00 00    	jne    4750 <quotearg_buffer_restyled+0x10b0>
3eab:	4d 85 ed             	test   r13,r13
3eae:	0f 84 fc 03 00 00    	je     42b0 <quotearg_buffer_restyled+0xc10>
3eb4:	31 d2                	xor    edx,edx
3eb6:	48 83 7c 24 50 00    	cmp    QWORD PTR [rsp+0x50],0x0
3ebc:	0f 85 ee 03 00 00    	jne    42b0 <quotearg_buffer_restyled+0xc10>
3ec2:	4c 89 6c 24 50       	mov    QWORD PTR [rsp+0x50],r13
3ec7:	49 83 c7 03          	add    r15,0x3
3ecb:	31 c0                	xor    eax,eax
3ecd:	44 88 64 24 7c       	mov    BYTE PTR [rsp+0x7c],r12b
3ed2:	45 31 c0             	xor    r8d,r8d
3ed5:	49 89 d5             	mov    r13,rdx
3ed8:	bb 27 00 00 00       	mov    ebx,0x27
3edd:	e9 17 fa ff ff       	jmp    38f9 <quotearg_buffer_restyled+0x259>
3ee2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3ee8:	f6 44 24 78 04       	test   BYTE PTR [rsp+0x78],0x4
3eed:	74 21                	je     3f10 <quotearg_buffer_restyled+0x870>
3eef:	48 8d 4d 02          	lea    rcx,[rbp+0x2]
3ef3:	4c 39 d9             	cmp    rcx,r11
3ef6:	73 18                	jae    3f10 <quotearg_buffer_restyled+0x870>
3ef8:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
3efd:	80 7c 28 01 3f       	cmp    BYTE PTR [rax+rbp*1+0x1],0x3f
3f02:	0f 84 8a 07 00 00    	je     4692 <quotearg_buffer_restyled+0xff2>
3f08:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
3f0f:	00
3f10:	31 d2                	xor    edx,edx
3f12:	45 31 e4             	xor    r12d,r12d
3f15:	31 c0                	xor    eax,eax
3f17:	bb 3f 00 00 00       	mov    ebx,0x3f
3f1c:	e9 a7 f9 ff ff       	jmp    38c8 <quotearg_buffer_restyled+0x228>
3f21:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
3f28:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
3f2d:	0f 85 1d 08 00 00    	jne    4750 <quotearg_buffer_restyled+0x10b0>
3f33:	45 31 e4             	xor    r12d,r12d
3f36:	31 c0                	xor    eax,eax
3f38:	bb 3f 00 00 00       	mov    ebx,0x3f
3f3d:	e9 b7 f9 ff ff       	jmp    38f9 <quotearg_buffer_restyled+0x259>
3f42:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3f48:	48 8d 84 24 a0 00 00 	lea    rax,[rsp+0xa0]
3f4f:	00
3f50:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
3f54:	48 c7 84 24 a0 00 00 	mov    QWORD PTR [rsp+0xa0],0x0
3f5b:	00 00 00 00 00
3f60:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
3f65:	75 2d                	jne    3f94 <quotearg_buffer_restyled+0x8f4>
3f67:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
3f6c:	44 88 44 24 40       	mov    BYTE PTR [rsp+0x40],r8b
3f71:	44 88 54 24 38       	mov    BYTE PTR [rsp+0x38],r10b
3f76:	4c 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],r9
3f7b:	e8 40 de ff ff       	call   1dc0 <strlen@plt>
3f80:	44 0f b6 44 24 40    	movzx  r8d,BYTE PTR [rsp+0x40]
3f86:	44 0f b6 54 24 38    	movzx  r10d,BYTE PTR [rsp+0x38]
3f8c:	49 89 c3             	mov    r11,rax
3f8f:	4c 8b 4c 24 30       	mov    r9,QWORD PTR [rsp+0x30]
3f94:	48 8d 84 24 9c 00 00 	lea    rax,[rsp+0x9c]
3f9b:	00
3f9c:	31 c9                	xor    ecx,ecx
3f9e:	88 5c 24 7e          	mov    BYTE PTR [rsp+0x7e],bl
3fa2:	44 88 44 24 7d       	mov    BYTE PTR [rsp+0x7d],r8b
3fa7:	48 89 cb             	mov    rbx,rcx
3faa:	4c 89 8c 24 88 00 00 	mov    QWORD PTR [rsp+0x88],r9
3fb1:	00
3fb2:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
3fb7:	44 88 54 24 7f       	mov    BYTE PTR [rsp+0x7f],r10b
3fbc:	4c 89 bc 24 80 00 00 	mov    QWORD PTR [rsp+0x80],r15
3fc3:	00
3fc4:	4c 89 74 24 40       	mov    QWORD PTR [rsp+0x40],r14
3fc9:	4c 89 6c 24 70       	mov    QWORD PTR [rsp+0x70],r13
3fce:	4c 89 5c 24 30       	mov    QWORD PTR [rsp+0x30],r11
3fd3:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
3fd8:	4c 8d 74 1d 00       	lea    r14,[rbp+rbx*1+0x0]
3fdd:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
3fe2:	48 8b 4c 24 28       	mov    rcx,QWORD PTR [rsp+0x28]
3fe7:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
3fec:	4e 8d 2c 30          	lea    r13,[rax+r14*1]
3ff0:	4c 29 f2             	sub    rdx,r14
3ff3:	4c 89 ee             	mov    rsi,r13
3ff6:	e8 35 1c 00 00       	call   5c30 <rpl_mbrtowc>
3ffb:	48 85 c0             	test   rax,rax
3ffe:	49 89 c7             	mov    r15,rax
4001:	74 4e                	je     4051 <quotearg_buffer_restyled+0x9b1>
4003:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
4007:	0f 84 18 06 00 00    	je     4625 <quotearg_buffer_restyled+0xf85>
400d:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
4011:	0f 84 9a 05 00 00    	je     45b1 <quotearg_buffer_restyled+0xf11>
4017:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
401c:	0f 94 c0             	sete   al
401f:	22 44 24 0f          	and    al,BYTE PTR [rsp+0xf]
4023:	0f 85 97 01 00 00    	jne    41c0 <quotearg_buffer_restyled+0xb20>
4029:	8b bc 24 9c 00 00 00 	mov    edi,DWORD PTR [rsp+0x9c]
4030:	e8 ab df ff ff       	call   1fe0 <iswprint@plt>
4035:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
403a:	85 c0                	test   eax,eax
403c:	b8 00 00 00 00       	mov    eax,0x0
4041:	44 0f 44 e0          	cmove  r12d,eax
4045:	4c 01 fb             	add    rbx,r15
4048:	e8 83 df ff ff       	call   1fd0 <mbsinit@plt>
404d:	85 c0                	test   eax,eax
404f:	74 82                	je     3fd3 <quotearg_buffer_restyled+0x933>
4051:	44 89 e2             	mov    edx,r12d
4054:	48 89 df             	mov    rdi,rbx
4057:	44 0f b6 44 24 7d    	movzx  r8d,BYTE PTR [rsp+0x7d]
405d:	83 f2 01             	xor    edx,0x1
4060:	0f b6 5c 24 7e       	movzx  ebx,BYTE PTR [rsp+0x7e]
4065:	44 0f b6 54 24 7f    	movzx  r10d,BYTE PTR [rsp+0x7f]
406b:	22 54 24 0d          	and    dl,BYTE PTR [rsp+0xd]
406f:	4c 8b bc 24 80 00 00 	mov    r15,QWORD PTR [rsp+0x80]
4076:	00
4077:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
407c:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
4081:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
4086:	48 83 ff 01          	cmp    rdi,0x1
408a:	0f 86 fb 05 00 00    	jbe    468b <quotearg_buffer_restyled+0xfeb>
4090:	48 89 f9             	mov    rcx,rdi
4093:	31 f6                	xor    esi,esi
4095:	44 0f b6 4c 24 0f    	movzx  r9d,BYTE PTR [rsp+0xf]
409b:	48 01 e9             	add    rcx,rbp
409e:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
40a3:	e9 b6 00 00 00       	jmp    415e <quotearg_buffer_restyled+0xabe>
40a8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
40af:	00
40b0:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
40b5:	0f 94 c0             	sete   al
40b8:	45 84 c9             	test   r9b,r9b
40bb:	0f 85 af 04 00 00    	jne    4570 <quotearg_buffer_restyled+0xed0>
40c1:	44 89 c6             	mov    esi,r8d
40c4:	83 f6 01             	xor    esi,0x1
40c7:	40 20 f0             	and    al,sil
40ca:	74 2f                	je     40fb <quotearg_buffer_restyled+0xa5b>
40cc:	4d 39 fd             	cmp    r13,r15
40cf:	76 05                	jbe    40d6 <quotearg_buffer_restyled+0xa36>
40d1:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
40d6:	49 8d 77 01          	lea    rsi,[r15+0x1]
40da:	49 39 f5             	cmp    r13,rsi
40dd:	76 06                	jbe    40e5 <quotearg_buffer_restyled+0xa45>
40df:	43 c6 44 3e 01 24    	mov    BYTE PTR [r14+r15*1+0x1],0x24
40e5:	49 8d 77 02          	lea    rsi,[r15+0x2]
40e9:	49 39 f5             	cmp    r13,rsi
40ec:	76 06                	jbe    40f4 <quotearg_buffer_restyled+0xa54>
40ee:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
40f4:	49 83 c7 03          	add    r15,0x3
40f8:	41 89 c0             	mov    r8d,eax
40fb:	4d 39 fd             	cmp    r13,r15
40fe:	76 05                	jbe    4105 <quotearg_buffer_restyled+0xa65>
4100:	43 c6 04 3e 5c       	mov    BYTE PTR [r14+r15*1],0x5c
4105:	49 8d 47 01          	lea    rax,[r15+0x1]
4109:	49 39 c5             	cmp    r13,rax
410c:	76 0d                	jbe    411b <quotearg_buffer_restyled+0xa7b>
410e:	89 d8                	mov    eax,ebx
4110:	c0 e8 06             	shr    al,0x6
4113:	83 c0 30             	add    eax,0x30
4116:	43 88 44 3e 01       	mov    BYTE PTR [r14+r15*1+0x1],al
411b:	49 8d 47 02          	lea    rax,[r15+0x2]
411f:	49 39 c5             	cmp    r13,rax
4122:	76 10                	jbe    4134 <quotearg_buffer_restyled+0xa94>
4124:	89 d8                	mov    eax,ebx
4126:	c0 e8 03             	shr    al,0x3
4129:	83 e0 07             	and    eax,0x7
412c:	83 c0 30             	add    eax,0x30
412f:	43 88 44 3e 02       	mov    BYTE PTR [r14+r15*1+0x2],al
4134:	83 e3 07             	and    ebx,0x7
4137:	48 83 c5 01          	add    rbp,0x1
413b:	49 83 c7 03          	add    r15,0x3
413f:	83 c3 30             	add    ebx,0x30
4142:	48 39 cd             	cmp    rbp,rcx
4145:	0f 83 e5 f7 ff ff    	jae    3930 <quotearg_buffer_restyled+0x290>
414b:	89 d6                	mov    esi,edx
414d:	4d 39 fd             	cmp    r13,r15
4150:	76 04                	jbe    4156 <quotearg_buffer_restyled+0xab6>
4152:	43 88 1c 3e          	mov    BYTE PTR [r14+r15*1],bl
4156:	0f b6 1c 2f          	movzx  ebx,BYTE PTR [rdi+rbp*1]
415a:	49 83 c7 01          	add    r15,0x1
415e:	84 d2                	test   dl,dl
4160:	0f 85 4a ff ff ff    	jne    40b0 <quotearg_buffer_restyled+0xa10>
4166:	89 f0                	mov    eax,esi
4168:	83 f0 01             	xor    eax,0x1
416b:	44 21 c0             	and    eax,r8d
416e:	45 84 d2             	test   r10b,r10b
4171:	74 0e                	je     4181 <quotearg_buffer_restyled+0xae1>
4173:	4d 39 fd             	cmp    r13,r15
4176:	76 05                	jbe    417d <quotearg_buffer_restyled+0xadd>
4178:	43 c6 04 3e 5c       	mov    BYTE PTR [r14+r15*1],0x5c
417d:	49 83 c7 01          	add    r15,0x1
4181:	48 83 c5 01          	add    rbp,0x1
4185:	48 39 cd             	cmp    rbp,rcx
4188:	0f 83 7e f7 ff ff    	jae    390c <quotearg_buffer_restyled+0x26c>
418e:	84 c0                	test   al,al
4190:	0f 84 f8 03 00 00    	je     458e <quotearg_buffer_restyled+0xeee>
4196:	4d 39 fd             	cmp    r13,r15
4199:	76 05                	jbe    41a0 <quotearg_buffer_restyled+0xb00>
419b:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
41a0:	49 8d 47 01          	lea    rax,[r15+0x1]
41a4:	49 39 c5             	cmp    r13,rax
41a7:	76 06                	jbe    41af <quotearg_buffer_restyled+0xb0f>
41a9:	43 c6 44 3e 01 27    	mov    BYTE PTR [r14+r15*1+0x1],0x27
41af:	49 83 c7 02          	add    r15,0x2
41b3:	45 31 d2             	xor    r10d,r10d
41b6:	45 31 c0             	xor    r8d,r8d
41b9:	eb 92                	jmp    414d <quotearg_buffer_restyled+0xaad>
41bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
41c0:	49 83 ff 01          	cmp    r15,0x1
41c4:	0f 84 5f fe ff ff    	je     4029 <quotearg_buffer_restyled+0x989>
41ca:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
41cf:	4a 8d 0c 3f          	lea    rcx,[rdi+r15*1]
41d3:	4a 8d 54 37 01       	lea    rdx,[rdi+r14*1+0x1]
41d8:	4e 8d 04 31          	lea    r8,[rcx+r14*1]
41dc:	eb 0f                	jmp    41ed <quotearg_buffer_restyled+0xb4d>
41de:	66 90                	xchg   ax,ax
41e0:	48 83 c2 01          	add    rdx,0x1
41e4:	49 39 d0             	cmp    r8,rdx
41e7:	0f 84 3c fe ff ff    	je     4029 <quotearg_buffer_restyled+0x989>
41ed:	0f b6 0a             	movzx  ecx,BYTE PTR [rdx]
41f0:	83 e9 5b             	sub    ecx,0x5b
41f3:	80 f9 21             	cmp    cl,0x21
41f6:	77 e8                	ja     41e0 <quotearg_buffer_restyled+0xb40>
41f8:	be 01 00 00 00       	mov    esi,0x1
41fd:	48 d3 e6             	shl    rsi,cl
4200:	48 89 f1             	mov    rcx,rsi
4203:	48 be 2b 00 00 00 02 	movabs rsi,0x20000002b
420a:	00 00 00
420d:	48 85 f1             	test   rcx,rsi
4210:	74 ce                	je     41e0 <quotearg_buffer_restyled+0xb40>
4212:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
4217:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
421c:	48 8b 6c 24 30       	mov    rbp,QWORD PTR [rsp+0x30]
4221:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
4228:	00
4229:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
422e:	74 10                	je     4240 <quotearg_buffer_restyled+0xba0>
4230:	84 c0                	test   al,al
4232:	b8 04 00 00 00       	mov    eax,0x4
4237:	0f 44 44 24 08       	cmove  eax,DWORD PTR [rsp+0x8]
423c:	89 44 24 08          	mov    DWORD PTR [rsp+0x8],eax
4240:	48 83 ec 08          	sub    rsp,0x8
4244:	48 89 e9             	mov    rcx,rbp
4247:	4c 89 ee             	mov    rsi,r13
424a:	ff 74 24 68          	push   QWORD PTR [rsp+0x68]
424e:	ff 74 24 78          	push   QWORD PTR [rsp+0x78]
4252:	4c 89 f7             	mov    rdi,r14
4255:	6a 00                	push   0x0
4257:	44 8b 8c 24 98 00 00 	mov    r9d,DWORD PTR [rsp+0x98]
425e:	00
425f:	44 8b 44 24 28       	mov    r8d,DWORD PTR [rsp+0x28]
4264:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
4269:	41 83 e1 fd          	and    r9d,0xfffffffd
426d:	e8 2e f4 ff ff       	call   36a0 <quotearg_buffer_restyled>
4272:	48 83 c4 20          	add    rsp,0x20
4276:	49 89 c7             	mov    r15,rax
4279:	48 8b 9c 24 a8 00 00 	mov    rbx,QWORD PTR [rsp+0xa8]
4280:	00
4281:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
4288:	00 00
428a:	4c 89 f8             	mov    rax,r15
428d:	0f 85 00 06 00 00    	jne    4893 <quotearg_buffer_restyled+0x11f3>
4293:	48 81 c4 b8 00 00 00 	add    rsp,0xb8
429a:	5b                   	pop    rbx
429b:	5d                   	pop    rbp
429c:	41 5c                	pop    r12
429e:	41 5d                	pop    r13
42a0:	41 5e                	pop    r14
42a2:	41 5f                	pop    r15
42a4:	c3                   	ret
42a5:	0f 1f 00             	nop    DWORD PTR [rax]
42a8:	4c 89 dd             	mov    rbp,r11
42ab:	e9 79 ff ff ff       	jmp    4229 <quotearg_buffer_restyled+0xb89>
42b0:	4d 39 fd             	cmp    r13,r15
42b3:	76 05                	jbe    42ba <quotearg_buffer_restyled+0xc1a>
42b5:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
42ba:	49 8d 47 01          	lea    rax,[r15+0x1]
42be:	49 39 c5             	cmp    r13,rax
42c1:	76 06                	jbe    42c9 <quotearg_buffer_restyled+0xc29>
42c3:	43 c6 44 3e 01 5c    	mov    BYTE PTR [r14+r15*1+0x1],0x5c
42c9:	49 8d 47 02          	lea    rax,[r15+0x2]
42cd:	49 39 c5             	cmp    r13,rax
42d0:	0f 86 ec 05 00 00    	jbe    48c2 <quotearg_buffer_restyled+0x1222>
42d6:	4c 89 ea             	mov    rdx,r13
42d9:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
42df:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
42e4:	e9 d9 fb ff ff       	jmp    3ec2 <quotearg_buffer_restyled+0x822>
42e9:	44 89 e0             	mov    eax,r12d
42ec:	bb 30 00 00 00       	mov    ebx,0x30
42f1:	45 31 e4             	xor    r12d,r12d
42f4:	e9 00 f6 ff ff       	jmp    38f9 <quotearg_buffer_restyled+0x259>
42f9:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
42ff:	e9 c5 f9 ff ff       	jmp    3cc9 <quotearg_buffer_restyled+0x629>
4304:	85 db                	test   ebx,ebx
4306:	0f 85 27 f4 ff ff    	jne    3733 <quotearg_buffer_restyled+0x93>
430c:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
4311:	4d 85 ed             	test   r13,r13
4314:	0f 85 90 05 00 00    	jne    48aa <quotearg_buffer_restyled+0x120a>
431a:	48 8d 05 b6 1f 00 00 	lea    rax,[rip+0x1fb6]        # 62d7 <_IO_stdin_used+0x137>
4321:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
4328:	00 00
432a:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
432f:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
4334:	45 31 e4             	xor    r12d,r12d
4337:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
433c:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
4343:	00 00
4345:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
434a:	41 bf 01 00 00 00    	mov    r15d,0x1
4350:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
4357:	00
4358:	e9 16 f4 ff ff       	jmp    3773 <quotearg_buffer_restyled+0xd3>
435d:	0f 1f 00             	nop    DWORD PTR [rax]
4360:	85 db                	test   ebx,ebx
4362:	0f 85 f5 03 00 00    	jne    475d <quotearg_buffer_restyled+0x10bd>
4368:	4d 85 ed             	test   r13,r13
436b:	0f 84 25 02 00 00    	je     4596 <quotearg_buffer_restyled+0xef6>
4371:	41 c6 06 22          	mov    BYTE PTR [r14],0x22
4375:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
437a:	45 31 e4             	xor    r12d,r12d
437d:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
4382:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
4389:	00 00
438b:	48 8d 05 89 36 00 00 	lea    rax,[rip+0x3689]        # 7a1b <G_line+0x113b>
4392:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
4397:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
439c:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
43a3:	00 00
43a5:	41 bf 01 00 00 00    	mov    r15d,0x1
43ab:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
43b0:	e9 be f3 ff ff       	jmp    3773 <quotearg_buffer_restyled+0xd3>
43b5:	48 8d 05 5f 36 00 00 	lea    rax,[rip+0x365f]        # 7a1b <G_line+0x113b>
43bc:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
43c1:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
43c6:	45 31 e4             	xor    r12d,r12d
43c9:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
43d0:	00 00
43d2:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
43d7:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
43dc:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
43e3:	00 00
43e5:	45 31 ff             	xor    r15d,r15d
43e8:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
43ed:	c7 44 24 08 05 00 00 	mov    DWORD PTR [rsp+0x8],0x5
43f4:	00
43f5:	e9 79 f3 ff ff       	jmp    3773 <quotearg_buffer_restyled+0xd3>
43fa:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
43ff:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
4404:	45 31 e4             	xor    r12d,r12d
4407:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
440e:	00 00
4410:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
4415:	45 31 ff             	xor    r15d,r15d
4418:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
441d:	48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
4424:	00 00
4426:	48 c7 44 24 48 00 00 	mov    QWORD PTR [rsp+0x48],0x0
442d:	00 00
442f:	e9 3f f3 ff ff       	jmp    3773 <quotearg_buffer_restyled+0xd3>
4434:	83 7c 24 08 0a       	cmp    DWORD PTR [rsp+0x8],0xa
4439:	74 56                	je     4491 <quotearg_buffer_restyled+0xdf1>
443b:	48 8d 35 db 35 00 00 	lea    rsi,[rip+0x35db]        # 7a1d <G_line+0x113d>
4442:	31 ff                	xor    edi,edi
4444:	ba 05 00 00 00       	mov    edx,0x5
4449:	e8 52 d9 ff ff       	call   1da0 <dcgettext@plt>
444e:	48 89 c1             	mov    rcx,rax
4451:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
4456:	48 8d 05 c0 35 00 00 	lea    rax,[rip+0x35c0]        # 7a1d <G_line+0x113d>
445d:	48 39 c1             	cmp    rcx,rax
4460:	0f 84 98 03 00 00    	je     47fe <quotearg_buffer_restyled+0x115e>
4466:	48 8d 35 6a 1e 00 00 	lea    rsi,[rip+0x1e6a]        # 62d7 <_IO_stdin_used+0x137>
446d:	31 ff                	xor    edi,edi
446f:	ba 05 00 00 00       	mov    edx,0x5
4474:	e8 27 d9 ff ff       	call   1da0 <dcgettext@plt>
4479:	48 89 c1             	mov    rcx,rax
447c:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
4481:	48 8d 05 4f 1e 00 00 	lea    rax,[rip+0x1e4f]        # 62d7 <_IO_stdin_used+0x137>
4488:	48 39 c1             	cmp    rcx,rax
448b:	0f 84 83 03 00 00    	je     4814 <quotearg_buffer_restyled+0x1174>
4491:	45 31 ff             	xor    r15d,r15d
4494:	85 db                	test   ebx,ebx
4496:	0f 84 c1 01 00 00    	je     465d <quotearg_buffer_restyled+0xfbd>
449c:	85 db                	test   ebx,ebx
449e:	48 8b 5c 24 60       	mov    rbx,QWORD PTR [rsp+0x60]
44a3:	0f 95 44 24 0f       	setne  BYTE PTR [rsp+0xf]
44a8:	45 31 e4             	xor    r12d,r12d
44ab:	48 89 df             	mov    rdi,rbx
44ae:	e8 0d d9 ff ff       	call   1dc0 <strlen@plt>
44b3:	48 89 5c 24 48       	mov    QWORD PTR [rsp+0x48],rbx
44b8:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
44bd:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
44c2:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
44c7:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
44ce:	00 00
44d0:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
44d5:	e9 99 f2 ff ff       	jmp    3773 <quotearg_buffer_restyled+0xd3>
44da:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
44df:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
44e4:	45 31 e4             	xor    r12d,r12d
44e7:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
44ee:	00 00
44f0:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
44f5:	45 31 ff             	xor    r15d,r15d
44f8:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
44fd:	48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
4504:	00 00
4506:	48 c7 44 24 48 00 00 	mov    QWORD PTR [rsp+0x48],0x0
450d:	00 00
450f:	e9 5f f2 ff ff       	jmp    3773 <quotearg_buffer_restyled+0xd3>
4514:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
4519:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
451e:	45 31 e4             	xor    r12d,r12d
4521:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
4528:	00 00
452a:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
452f:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
4534:	e9 1a f2 ff ff       	jmp    3753 <quotearg_buffer_restyled+0xb3>
4539:	4d 39 fd             	cmp    r13,r15
453c:	76 05                	jbe    4543 <quotearg_buffer_restyled+0xea3>
453e:	43 c6 04 3e 30       	mov    BYTE PTR [r14+r15*1],0x30
4543:	48 8d 41 02          	lea    rax,[rcx+0x2]
4547:	49 39 c5             	cmp    r13,rax
454a:	76 06                	jbe    4552 <quotearg_buffer_restyled+0xeb2>
454c:	41 c6 44 0e 02 30    	mov    BYTE PTR [r14+rcx*1+0x2],0x30
4552:	44 89 e0             	mov    eax,r12d
4555:	4c 8d 79 03          	lea    r15,[rcx+0x3]
4559:	45 31 e4             	xor    r12d,r12d
455c:	bb 30 00 00 00       	mov    ebx,0x30
4561:	e9 62 f3 ff ff       	jmp    38c8 <quotearg_buffer_restyled+0x228>
4566:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
456d:	00 00 00
4570:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
4575:	4c 89 dd             	mov    rbp,r11
4578:	88 5c 24 0d          	mov    BYTE PTR [rsp+0xd],bl
457c:	e9 a8 fc ff ff       	jmp    4229 <quotearg_buffer_restyled+0xb89>
4581:	0f b6 54 24 0d       	movzx  edx,BYTE PTR [rsp+0xd]
4586:	45 31 e4             	xor    r12d,r12d
4589:	e9 02 fb ff ff       	jmp    4090 <quotearg_buffer_restyled+0x9f0>
458e:	45 31 d2             	xor    r10d,r10d
4591:	e9 b7 fb ff ff       	jmp    414d <quotearg_buffer_restyled+0xaad>
4596:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
459d:	00 00
459f:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
45a4:	45 31 e4             	xor    r12d,r12d
45a7:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
45ac:	e9 da fd ff ff       	jmp    438b <quotearg_buffer_restyled+0xceb>
45b1:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
45b6:	4c 89 f6             	mov    rsi,r14
45b9:	4c 89 e9             	mov    rcx,r13
45bc:	48 89 d8             	mov    rax,rbx
45bf:	48 89 df             	mov    rdi,rbx
45c2:	44 0f b6 44 24 7d    	movzx  r8d,BYTE PTR [rsp+0x7d]
45c8:	0f b6 5c 24 7e       	movzx  ebx,BYTE PTR [rsp+0x7e]
45cd:	4c 8b 8c 24 88 00 00 	mov    r9,QWORD PTR [rsp+0x88]
45d4:	00
45d5:	4c 39 de             	cmp    rsi,r11
45d8:	44 0f b6 54 24 7f    	movzx  r10d,BYTE PTR [rsp+0x7f]
45de:	4c 8b bc 24 80 00 00 	mov    r15,QWORD PTR [rsp+0x80]
45e5:	00
45e6:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
45eb:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
45f0:	73 26                	jae    4618 <quotearg_buffer_restyled+0xf78>
45f2:	80 39 00             	cmp    BYTE PTR [rcx],0x0
45f5:	75 10                	jne    4607 <quotearg_buffer_restyled+0xf67>
45f7:	eb 1f                	jmp    4618 <quotearg_buffer_restyled+0xf78>
45f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
4600:	41 80 3c 01 00       	cmp    BYTE PTR [r9+rax*1],0x0
4605:	74 0e                	je     4615 <quotearg_buffer_restyled+0xf75>
4607:	48 83 c0 01          	add    rax,0x1
460b:	48 8d 54 05 00       	lea    rdx,[rbp+rax*1+0x0]
4610:	49 39 d3             	cmp    r11,rdx
4613:	77 eb                	ja     4600 <quotearg_buffer_restyled+0xf60>
4615:	48 89 c7             	mov    rdi,rax
4618:	0f b6 54 24 0d       	movzx  edx,BYTE PTR [rsp+0xd]
461d:	45 31 e4             	xor    r12d,r12d
4620:	e9 61 fa ff ff       	jmp    4086 <quotearg_buffer_restyled+0x9e6>
4625:	48 89 df             	mov    rdi,rbx
4628:	44 0f b6 44 24 7d    	movzx  r8d,BYTE PTR [rsp+0x7d]
462e:	0f b6 5c 24 7e       	movzx  ebx,BYTE PTR [rsp+0x7e]
4633:	44 0f b6 54 24 7f    	movzx  r10d,BYTE PTR [rsp+0x7f]
4639:	4c 8b bc 24 80 00 00 	mov    r15,QWORD PTR [rsp+0x80]
4640:	00
4641:	45 31 e4             	xor    r12d,r12d
4644:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
4649:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
464e:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
4653:	0f b6 54 24 0d       	movzx  edx,BYTE PTR [rsp+0xd]
4658:	e9 29 fa ff ff       	jmp    4086 <quotearg_buffer_restyled+0x9e6>
465d:	48 8b 54 24 68       	mov    rdx,QWORD PTR [rsp+0x68]
4662:	0f b6 02             	movzx  eax,BYTE PTR [rdx]
4665:	84 c0                	test   al,al
4667:	0f 84 2f fe ff ff    	je     449c <quotearg_buffer_restyled+0xdfc>
466d:	0f 1f 00             	nop    DWORD PTR [rax]
4670:	4d 39 fd             	cmp    r13,r15
4673:	76 04                	jbe    4679 <quotearg_buffer_restyled+0xfd9>
4675:	43 88 04 3e          	mov    BYTE PTR [r14+r15*1],al
4679:	49 83 c7 01          	add    r15,0x1
467d:	42 0f b6 04 3a       	movzx  eax,BYTE PTR [rdx+r15*1]
4682:	84 c0                	test   al,al
4684:	75 ea                	jne    4670 <quotearg_buffer_restyled+0xfd0>
4686:	e9 11 fe ff ff       	jmp    449c <quotearg_buffer_restyled+0xdfc>
468b:	89 d0                	mov    eax,edx
468d:	e9 55 f5 ff ff       	jmp    3be7 <quotearg_buffer_restyled+0x547>
4692:	0f b6 1c 08          	movzx  ebx,BYTE PTR [rax+rcx*1]
4696:	80 fb 3e             	cmp    bl,0x3e
4699:	0f 87 71 f8 ff ff    	ja     3f10 <quotearg_buffer_restyled+0x870>
469f:	48 b8 00 00 00 00 82 	movabs rax,0x7000a38200000000
46a6:	a3 00 70
46a9:	48 0f a3 d8          	bt     rax,rbx
46ad:	0f 83 5d f8 ff ff    	jae    3f10 <quotearg_buffer_restyled+0x870>
46b3:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
46b8:	0f 85 e4 01 00 00    	jne    48a2 <quotearg_buffer_restyled+0x1202>
46be:	4d 39 fd             	cmp    r13,r15
46c1:	76 05                	jbe    46c8 <quotearg_buffer_restyled+0x1028>
46c3:	43 c6 04 3e 3f       	mov    BYTE PTR [r14+r15*1],0x3f
46c8:	49 8d 47 01          	lea    rax,[r15+0x1]
46cc:	49 39 c5             	cmp    r13,rax
46cf:	76 06                	jbe    46d7 <quotearg_buffer_restyled+0x1037>
46d1:	43 c6 44 3e 01 22    	mov    BYTE PTR [r14+r15*1+0x1],0x22
46d7:	49 8d 47 02          	lea    rax,[r15+0x2]
46db:	49 39 c5             	cmp    r13,rax
46de:	76 06                	jbe    46e6 <quotearg_buffer_restyled+0x1046>
46e0:	43 c6 44 3e 02 22    	mov    BYTE PTR [r14+r15*1+0x2],0x22
46e6:	49 8d 47 03          	lea    rax,[r15+0x3]
46ea:	49 39 c5             	cmp    r13,rax
46ed:	76 06                	jbe    46f5 <quotearg_buffer_restyled+0x1055>
46ef:	43 c6 44 3e 03 3f    	mov    BYTE PTR [r14+r15*1+0x3],0x3f
46f5:	49 83 c7 04          	add    r15,0x4
46f9:	31 d2                	xor    edx,edx
46fb:	45 31 e4             	xor    r12d,r12d
46fe:	31 c0                	xor    eax,eax
4700:	48 89 cd             	mov    rbp,rcx
4703:	e9 c0 f1 ff ff       	jmp    38c8 <quotearg_buffer_restyled+0x228>
4708:	85 db                	test   ebx,ebx
470a:	0f 84 88 01 00 00    	je     4898 <quotearg_buffer_restyled+0x11f8>
4710:	48 8d 05 c0 1b 00 00 	lea    rax,[rip+0x1bc0]        # 62d7 <_IO_stdin_used+0x137>
4717:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
471c:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
4721:	45 31 e4             	xor    r12d,r12d
4724:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
472b:	00 00
472d:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
4732:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
4737:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
473e:	00 00
4740:	45 31 ff             	xor    r15d,r15d
4743:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
4748:	e9 26 f0 ff ff       	jmp    3773 <quotearg_buffer_restyled+0xd3>
474d:	0f 1f 00             	nop    DWORD PTR [rax]
4750:	4c 89 dd             	mov    rbp,r11
4753:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [rsp+0xf]
4758:	e9 cc fa ff ff       	jmp    4229 <quotearg_buffer_restyled+0xb89>
475d:	48 8d 05 b7 32 00 00 	lea    rax,[rip+0x32b7]        # 7a1b <G_line+0x113b>
4764:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
4769:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
476e:	45 31 e4             	xor    r12d,r12d
4771:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
4778:	00 00
477a:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
477f:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
4784:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
478b:	00 00
478d:	45 31 ff             	xor    r15d,r15d
4790:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
4795:	e9 d9 ef ff ff       	jmp    3773 <quotearg_buffer_restyled+0xd3>
479a:	89 d0                	mov    eax,edx
479c:	48 8b 5c 24 48       	mov    rbx,QWORD PTR [rsp+0x48]
47a1:	48 85 db             	test   rbx,rbx
47a4:	74 2c                	je     47d2 <quotearg_buffer_restyled+0x1132>
47a6:	84 c0                	test   al,al
47a8:	74 28                	je     47d2 <quotearg_buffer_restyled+0x1132>
47aa:	0f b6 0b             	movzx  ecx,BYTE PTR [rbx]
47ad:	48 89 d8             	mov    rax,rbx
47b0:	84 c9                	test   cl,cl
47b2:	74 1e                	je     47d2 <quotearg_buffer_restyled+0x1132>
47b4:	4c 89 fa             	mov    rdx,r15
47b7:	4c 29 f8             	sub    rax,r15
47ba:	49 39 d5             	cmp    r13,rdx
47bd:	76 04                	jbe    47c3 <quotearg_buffer_restyled+0x1123>
47bf:	41 88 0c 16          	mov    BYTE PTR [r14+rdx*1],cl
47c3:	48 83 c2 01          	add    rdx,0x1
47c7:	0f b6 0c 10          	movzx  ecx,BYTE PTR [rax+rdx*1]
47cb:	84 c9                	test   cl,cl
47cd:	75 eb                	jne    47ba <quotearg_buffer_restyled+0x111a>
47cf:	49 89 d7             	mov    r15,rdx
47d2:	4d 39 fd             	cmp    r13,r15
47d5:	0f 86 9e fa ff ff    	jbe    4279 <quotearg_buffer_restyled+0xbd9>
47db:	43 c6 04 3e 00       	mov    BYTE PTR [r14+r15*1],0x0
47e0:	e9 94 fa ff ff       	jmp    4279 <quotearg_buffer_restyled+0xbd9>
47e5:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
47ea:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
47ef:	4c 89 dd             	mov    rbp,r11
47f2:	0f 94 c0             	sete   al
47f5:	88 5c 24 0d          	mov    BYTE PTR [rsp+0xd],bl
47f9:	e9 2b fa ff ff       	jmp    4229 <quotearg_buffer_restyled+0xb89>
47fe:	8b 74 24 08          	mov    esi,DWORD PTR [rsp+0x8]
4802:	48 89 cf             	mov    rdi,rcx
4805:	e8 a6 ed ff ff       	call   35b0 <gettext_quote.part.1>
480a:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
480f:	e9 52 fc ff ff       	jmp    4466 <quotearg_buffer_restyled+0xdc6>
4814:	8b 74 24 08          	mov    esi,DWORD PTR [rsp+0x8]
4818:	48 89 cf             	mov    rdi,rcx
481b:	e8 90 ed ff ff       	call   35b0 <gettext_quote.part.1>
4820:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
4825:	e9 67 fc ff ff       	jmp    4491 <quotearg_buffer_restyled+0xdf1>
482a:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
482f:	4c 89 dd             	mov    rbp,r11
4832:	89 d0                	mov    eax,edx
4834:	88 5c 24 0d          	mov    BYTE PTR [rsp+0xd],bl
4838:	e9 ec f9 ff ff       	jmp    4229 <quotearg_buffer_restyled+0xb89>
483d:	48 83 ec 08          	sub    rsp,0x8
4841:	41 b8 05 00 00 00    	mov    r8d,0x5
4847:	4c 89 d9             	mov    rcx,r11
484a:	ff 74 24 68          	push   QWORD PTR [rsp+0x68]
484e:	ff 74 24 78          	push   QWORD PTR [rsp+0x78]
4852:	4c 89 f7             	mov    rdi,r14
4855:	ff 74 24 38          	push   QWORD PTR [rsp+0x38]
4859:	44 8b 8c 24 98 00 00 	mov    r9d,DWORD PTR [rsp+0x98]
4860:	00
4861:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
4866:	48 8b 74 24 70       	mov    rsi,QWORD PTR [rsp+0x70]
486b:	e8 30 ee ff ff       	call   36a0 <quotearg_buffer_restyled>
4870:	48 83 c4 20          	add    rsp,0x20
4874:	49 89 c7             	mov    r15,rax
4877:	e9 fd f9 ff ff       	jmp    4279 <quotearg_buffer_restyled+0xbd9>
487c:	0f b6 44 24 7c       	movzx  eax,BYTE PTR [rsp+0x7c]
4881:	e9 16 ff ff ff       	jmp    479c <quotearg_buffer_restyled+0x10fc>
4886:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
488d:	00
488e:	e9 96 f9 ff ff       	jmp    4229 <quotearg_buffer_restyled+0xb89>
4893:	e8 38 d5 ff ff       	call   1dd0 <__stack_chk_fail@plt>
4898:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
489d:	e9 6f fa ff ff       	jmp    4311 <quotearg_buffer_restyled+0xc71>
48a2:	4c 89 dd             	mov    rbp,r11
48a5:	e9 96 f9 ff ff       	jmp    4240 <quotearg_buffer_restyled+0xba0>
48aa:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
48af:	31 c0                	xor    eax,eax
48b1:	45 31 e4             	xor    r12d,r12d
48b4:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
48bb:	00 00
48bd:	e9 a2 f5 ff ff       	jmp    3e64 <quotearg_buffer_restyled+0x7c4>
48c2:	4c 89 ea             	mov    rdx,r13
48c5:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
48ca:	e9 f3 f5 ff ff       	jmp    3ec2 <quotearg_buffer_restyled+0x822>
48cf:	e8 3c d4 ff ff       	call   1d10 <abort@plt>
48d4:	66 90                	xchg   ax,ax
48d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
48dd:	00 00 00

00000000000048e0 <quotearg_n_options>:
48e0:	41 57                	push   r15
48e2:	41 56                	push   r14
48e4:	4c 63 ff             	movsxd r15,edi
48e7:	41 55                	push   r13
48e9:	41 54                	push   r12
48eb:	49 89 d6             	mov    r14,rdx
48ee:	55                   	push   rbp
48ef:	53                   	push   rbx
48f0:	48 89 cd             	mov    rbp,rcx
48f3:	48 83 ec 28          	sub    rsp,0x28
48f7:	48 89 74 24 08       	mov    QWORD PTR [rsp+0x8],rsi
48fc:	e8 1f d4 ff ff       	call   1d20 <__errno_location@plt>
4901:	49 89 c5             	mov    r13,rax
4904:	8b 00                	mov    eax,DWORD PTR [rax]
4906:	45 85 ff             	test   r15d,r15d
4909:	48 8b 1d 50 57 20 00 	mov    rbx,QWORD PTR [rip+0x205750]        # 20a060 <slotvec>
4910:	89 44 24 18          	mov    DWORD PTR [rsp+0x18],eax
4914:	0f 88 67 01 00 00    	js     4a81 <quotearg_n_options+0x1a1>
491a:	44 39 3d 37 57 20 00 	cmp    DWORD PTR [rip+0x205737],r15d        # 20a058 <nslots>
4921:	7f 62                	jg     4985 <quotearg_n_options+0xa5>
4923:	41 81 ff ff ff ff 7f 	cmp    r15d,0x7fffffff
492a:	0f 84 56 01 00 00    	je     4a86 <quotearg_n_options+0x1a6>
4930:	45 8d 67 01          	lea    r12d,[r15+0x1]
4934:	48 8d 05 35 57 20 00 	lea    rax,[rip+0x205735]        # 20a070 <slotvec0>
493b:	49 63 f4             	movsxd rsi,r12d
493e:	48 c1 e6 04          	shl    rsi,0x4
4942:	48 39 c3             	cmp    rbx,rax
4945:	0f 84 15 01 00 00    	je     4a60 <quotearg_n_options+0x180>
494b:	48 89 df             	mov    rdi,rbx
494e:	e8 6d 0f 00 00       	call   58c0 <xrealloc>
4953:	48 89 c3             	mov    rbx,rax
4956:	48 89 05 03 57 20 00 	mov    QWORD PTR [rip+0x205703],rax        # 20a060 <slotvec>
495d:	48 63 3d f4 56 20 00 	movsxd rdi,DWORD PTR [rip+0x2056f4]        # 20a058 <nslots>
4964:	44 89 e2             	mov    edx,r12d
4967:	31 f6                	xor    esi,esi
4969:	29 fa                	sub    edx,edi
496b:	48 c1 e7 04          	shl    rdi,0x4
496f:	48 63 d2             	movsxd rdx,edx
4972:	48 01 df             	add    rdi,rbx
4975:	48 c1 e2 04          	shl    rdx,0x4
4979:	e8 c2 d4 ff ff       	call   1e40 <memset@plt>
497e:	44 89 25 d3 56 20 00 	mov    DWORD PTR [rip+0x2056d3],r12d        # 20a058 <nslots>
4985:	8b 45 04             	mov    eax,DWORD PTR [rbp+0x4]
4988:	49 c1 e7 04          	shl    r15,0x4
498c:	48 83 ec 08          	sub    rsp,0x8
4990:	4c 01 fb             	add    rbx,r15
4993:	4c 8d 7d 08          	lea    r15,[rbp+0x8]
4997:	44 8b 45 00          	mov    r8d,DWORD PTR [rbp+0x0]
499b:	4c 8b 1b             	mov    r11,QWORD PTR [rbx]
499e:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
49a2:	4c 89 f1             	mov    rcx,r14
49a5:	83 c8 01             	or     eax,0x1
49a8:	89 44 24 24          	mov    DWORD PTR [rsp+0x24],eax
49ac:	ff 75 30             	push   QWORD PTR [rbp+0x30]
49af:	41 89 c1             	mov    r9d,eax
49b2:	ff 75 28             	push   QWORD PTR [rbp+0x28]
49b5:	41 57                	push   r15
49b7:	4c 89 de             	mov    rsi,r11
49ba:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
49bf:	4c 89 e7             	mov    rdi,r12
49c2:	4c 89 5c 24 30       	mov    QWORD PTR [rsp+0x30],r11
49c7:	e8 d4 ec ff ff       	call   36a0 <quotearg_buffer_restyled>
49cc:	48 83 c4 20          	add    rsp,0x20
49d0:	4c 8b 5c 24 10       	mov    r11,QWORD PTR [rsp+0x10]
49d5:	49 39 c3             	cmp    r11,rax
49d8:	77 67                	ja     4a41 <quotearg_n_options+0x161>
49da:	48 8d 70 01          	lea    rsi,[rax+0x1]
49de:	48 8d 05 9b 57 20 00 	lea    rax,[rip+0x20579b]        # 20a180 <slot0>
49e5:	49 39 c4             	cmp    r12,rax
49e8:	48 89 33             	mov    QWORD PTR [rbx],rsi
49eb:	74 12                	je     49ff <quotearg_n_options+0x11f>
49ed:	4c 89 e7             	mov    rdi,r12
49f0:	48 89 74 24 10       	mov    QWORD PTR [rsp+0x10],rsi
49f5:	e8 06 d6 ff ff       	call   2000 <free@plt>
49fa:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
49ff:	48 89 f7             	mov    rdi,rsi
4a02:	48 89 74 24 10       	mov    QWORD PTR [rsp+0x10],rsi
4a07:	e8 54 0e 00 00       	call   5860 <xmalloc>
4a0c:	48 83 ec 08          	sub    rsp,0x8
4a10:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
4a14:	44 8b 45 00          	mov    r8d,DWORD PTR [rbp+0x0]
4a18:	ff 75 30             	push   QWORD PTR [rbp+0x30]
4a1b:	ff 75 28             	push   QWORD PTR [rbp+0x28]
4a1e:	4c 89 f1             	mov    rcx,r14
4a21:	41 57                	push   r15
4a23:	44 8b 4c 24 3c       	mov    r9d,DWORD PTR [rsp+0x3c]
4a28:	48 89 c7             	mov    rdi,rax
4a2b:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
4a30:	48 8b 74 24 30       	mov    rsi,QWORD PTR [rsp+0x30]
4a35:	49 89 c4             	mov    r12,rax
4a38:	e8 63 ec ff ff       	call   36a0 <quotearg_buffer_restyled>
4a3d:	48 83 c4 20          	add    rsp,0x20
4a41:	8b 44 24 18          	mov    eax,DWORD PTR [rsp+0x18]
4a45:	41 89 45 00          	mov    DWORD PTR [r13+0x0],eax
4a49:	48 83 c4 28          	add    rsp,0x28
4a4d:	4c 89 e0             	mov    rax,r12
4a50:	5b                   	pop    rbx
4a51:	5d                   	pop    rbp
4a52:	41 5c                	pop    r12
4a54:	41 5d                	pop    r13
4a56:	41 5e                	pop    r14
4a58:	41 5f                	pop    r15
4a5a:	c3                   	ret
4a5b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
4a60:	31 ff                	xor    edi,edi
4a62:	e8 59 0e 00 00       	call   58c0 <xrealloc>
4a67:	66 0f 6f 05 01 56 20 	movdqa xmm0,XMMWORD PTR [rip+0x205601]        # 20a070 <slotvec0>
4a6e:	00
4a6f:	48 89 c3             	mov    rbx,rax
4a72:	48 89 05 e7 55 20 00 	mov    QWORD PTR [rip+0x2055e7],rax        # 20a060 <slotvec>
4a79:	0f 11 00             	movups XMMWORD PTR [rax],xmm0
4a7c:	e9 dc fe ff ff       	jmp    495d <quotearg_n_options+0x7d>
4a81:	e8 8a d2 ff ff       	call   1d10 <abort@plt>
4a86:	e8 25 10 00 00       	call   5ab0 <xalloc_die>
4a8b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000004a90 <clone_quoting_options>:
4a90:	41 54                	push   r12
4a92:	55                   	push   rbp
4a93:	53                   	push   rbx
4a94:	48 89 fb             	mov    rbx,rdi
4a97:	e8 84 d2 ff ff       	call   1d20 <__errno_location@plt>
4a9c:	44 8b 20             	mov    r12d,DWORD PTR [rax]
4a9f:	48 89 c5             	mov    rbp,rax
4aa2:	48 8d 05 d7 57 20 00 	lea    rax,[rip+0x2057d7]        # 20a280 <default_quoting_options>
4aa9:	48 85 db             	test   rbx,rbx
4aac:	be 38 00 00 00       	mov    esi,0x38
4ab1:	48 0f 44 d8          	cmove  rbx,rax
4ab5:	48 89 df             	mov    rdi,rbx
4ab8:	e8 a3 0f 00 00       	call   5a60 <xmemdup>
4abd:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
4ac1:	5b                   	pop    rbx
4ac2:	5d                   	pop    rbp
4ac3:	41 5c                	pop    r12
4ac5:	c3                   	ret
4ac6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4acd:	00 00 00

0000000000004ad0 <get_quoting_style>:
4ad0:	48 8d 05 a9 57 20 00 	lea    rax,[rip+0x2057a9]        # 20a280 <default_quoting_options>
4ad7:	48 85 ff             	test   rdi,rdi
4ada:	48 0f 44 f8          	cmove  rdi,rax
4ade:	8b 07                	mov    eax,DWORD PTR [rdi]
4ae0:	c3                   	ret
4ae1:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
4ae6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4aed:	00 00 00

0000000000004af0 <set_quoting_style>:
4af0:	48 8d 05 89 57 20 00 	lea    rax,[rip+0x205789]        # 20a280 <default_quoting_options>
4af7:	48 85 ff             	test   rdi,rdi
4afa:	48 0f 44 f8          	cmove  rdi,rax
4afe:	89 37                	mov    DWORD PTR [rdi],esi
4b00:	c3                   	ret
4b01:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
4b06:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4b0d:	00 00 00

0000000000004b10 <set_char_quoting>:
4b10:	48 8d 05 69 57 20 00 	lea    rax,[rip+0x205769]        # 20a280 <default_quoting_options>
4b17:	48 85 ff             	test   rdi,rdi
4b1a:	89 f1                	mov    ecx,esi
4b1c:	48 0f 44 f8          	cmove  rdi,rax
4b20:	89 f0                	mov    eax,esi
4b22:	83 e1 1f             	and    ecx,0x1f
4b25:	c0 e8 05             	shr    al,0x5
4b28:	0f b6 c0             	movzx  eax,al
4b2b:	48 8d 7c 87 08       	lea    rdi,[rdi+rax*4+0x8]
4b30:	8b 37                	mov    esi,DWORD PTR [rdi]
4b32:	89 f0                	mov    eax,esi
4b34:	d3 e8                	shr    eax,cl
4b36:	31 c2                	xor    edx,eax
4b38:	83 e0 01             	and    eax,0x1
4b3b:	83 e2 01             	and    edx,0x1
4b3e:	d3 e2                	shl    edx,cl
4b40:	31 f2                	xor    edx,esi
4b42:	89 17                	mov    DWORD PTR [rdi],edx
4b44:	c3                   	ret
4b45:	90                   	nop
4b46:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4b4d:	00 00 00

0000000000004b50 <set_quoting_flags>:
4b50:	48 8d 05 29 57 20 00 	lea    rax,[rip+0x205729]        # 20a280 <default_quoting_options>
4b57:	48 85 ff             	test   rdi,rdi
4b5a:	48 0f 44 f8          	cmove  rdi,rax
4b5e:	8b 47 04             	mov    eax,DWORD PTR [rdi+0x4]
4b61:	89 77 04             	mov    DWORD PTR [rdi+0x4],esi
4b64:	c3                   	ret
4b65:	90                   	nop
4b66:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4b6d:	00 00 00

0000000000004b70 <set_custom_quoting>:
4b70:	48 8d 05 09 57 20 00 	lea    rax,[rip+0x205709]        # 20a280 <default_quoting_options>
4b77:	48 85 ff             	test   rdi,rdi
4b7a:	48 0f 44 f8          	cmove  rdi,rax
4b7e:	48 85 f6             	test   rsi,rsi
4b81:	c7 07 0a 00 00 00    	mov    DWORD PTR [rdi],0xa
4b87:	74 0e                	je     4b97 <set_custom_quoting+0x27>
4b89:	48 85 d2             	test   rdx,rdx
4b8c:	74 09                	je     4b97 <set_custom_quoting+0x27>
4b8e:	48 89 77 28          	mov    QWORD PTR [rdi+0x28],rsi
4b92:	48 89 57 30          	mov    QWORD PTR [rdi+0x30],rdx
4b96:	c3                   	ret
4b97:	48 83 ec 08          	sub    rsp,0x8
4b9b:	e8 70 d1 ff ff       	call   1d10 <abort@plt>

0000000000004ba0 <quotearg_buffer>:
4ba0:	41 57                	push   r15
4ba2:	41 56                	push   r14
4ba4:	48 8d 05 d5 56 20 00 	lea    rax,[rip+0x2056d5]        # 20a280 <default_quoting_options>
4bab:	41 55                	push   r13
4bad:	41 54                	push   r12
4baf:	49 89 fd             	mov    r13,rdi
4bb2:	55                   	push   rbp
4bb3:	53                   	push   rbx
4bb4:	4c 89 c3             	mov    rbx,r8
4bb7:	49 89 f6             	mov    r14,rsi
4bba:	49 89 d7             	mov    r15,rdx
4bbd:	48 83 ec 18          	sub    rsp,0x18
4bc1:	4d 85 c0             	test   r8,r8
4bc4:	48 0f 44 d8          	cmove  rbx,rax
4bc8:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
4bcd:	e8 4e d1 ff ff       	call   1d20 <__errno_location@plt>
4bd2:	44 8b 20             	mov    r12d,DWORD PTR [rax]
4bd5:	48 89 c5             	mov    rbp,rax
4bd8:	48 8d 43 08          	lea    rax,[rbx+0x8]
4bdc:	48 83 ec 08          	sub    rsp,0x8
4be0:	44 8b 4b 04          	mov    r9d,DWORD PTR [rbx+0x4]
4be4:	ff 73 30             	push   QWORD PTR [rbx+0x30]
4be7:	44 8b 03             	mov    r8d,DWORD PTR [rbx]
4bea:	ff 73 28             	push   QWORD PTR [rbx+0x28]
4bed:	4c 89 fa             	mov    rdx,r15
4bf0:	50                   	push   rax
4bf1:	48 8b 4c 24 28       	mov    rcx,QWORD PTR [rsp+0x28]
4bf6:	4c 89 f6             	mov    rsi,r14
4bf9:	4c 89 ef             	mov    rdi,r13
4bfc:	e8 9f ea ff ff       	call   36a0 <quotearg_buffer_restyled>
4c01:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
4c05:	48 83 c4 38          	add    rsp,0x38
4c09:	5b                   	pop    rbx
4c0a:	5d                   	pop    rbp
4c0b:	41 5c                	pop    r12
4c0d:	41 5d                	pop    r13
4c0f:	41 5e                	pop    r14
4c11:	41 5f                	pop    r15
4c13:	c3                   	ret
4c14:	66 90                	xchg   ax,ax
4c16:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4c1d:	00 00 00

0000000000004c20 <quotearg_alloc_mem>:
4c20:	41 57                	push   r15
4c22:	41 56                	push   r14
4c24:	48 8d 05 55 56 20 00 	lea    rax,[rip+0x205655]        # 20a280 <default_quoting_options>
4c2b:	41 55                	push   r13
4c2d:	41 54                	push   r12
4c2f:	49 89 d4             	mov    r12,rdx
4c32:	55                   	push   rbp
4c33:	53                   	push   rbx
4c34:	48 89 cb             	mov    rbx,rcx
4c37:	49 89 fe             	mov    r14,rdi
4c3a:	49 89 f7             	mov    r15,rsi
4c3d:	48 83 ec 38          	sub    rsp,0x38
4c41:	48 85 c9             	test   rcx,rcx
4c44:	48 0f 44 d8          	cmove  rbx,rax
4c48:	31 ed                	xor    ebp,ebp
4c4a:	e8 d1 d0 ff ff       	call   1d20 <__errno_location@plt>
4c4f:	4d 85 e4             	test   r12,r12
4c52:	49 89 c5             	mov    r13,rax
4c55:	8b 00                	mov    eax,DWORD PTR [rax]
4c57:	40 0f 94 c5          	sete   bpl
4c5b:	0b 6b 04             	or     ebp,DWORD PTR [rbx+0x4]
4c5e:	4c 8d 53 08          	lea    r10,[rbx+0x8]
4c62:	48 83 ec 08          	sub    rsp,0x8
4c66:	44 8b 03             	mov    r8d,DWORD PTR [rbx]
4c69:	4c 89 f9             	mov    rcx,r15
4c6c:	89 44 24 14          	mov    DWORD PTR [rsp+0x14],eax
4c70:	ff 73 30             	push   QWORD PTR [rbx+0x30]
4c73:	4c 89 f2             	mov    rdx,r14
4c76:	ff 73 28             	push   QWORD PTR [rbx+0x28]
4c79:	41 52                	push   r10
4c7b:	31 f6                	xor    esi,esi
4c7d:	41 89 e9             	mov    r9d,ebp
4c80:	31 ff                	xor    edi,edi
4c82:	4c 89 54 24 40       	mov    QWORD PTR [rsp+0x40],r10
4c87:	e8 14 ea ff ff       	call   36a0 <quotearg_buffer_restyled>
4c8c:	48 8d 70 01          	lea    rsi,[rax+0x1]
4c90:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
4c95:	48 83 c4 20          	add    rsp,0x20
4c99:	48 89 f7             	mov    rdi,rsi
4c9c:	48 89 74 24 18       	mov    QWORD PTR [rsp+0x18],rsi
4ca1:	e8 ba 0b 00 00       	call   5860 <xmalloc>
4ca6:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
4cab:	48 83 ec 08          	sub    rsp,0x8
4caf:	ff 73 30             	push   QWORD PTR [rbx+0x30]
4cb2:	ff 73 28             	push   QWORD PTR [rbx+0x28]
4cb5:	4c 8b 54 24 38       	mov    r10,QWORD PTR [rsp+0x38]
4cba:	41 89 e9             	mov    r9d,ebp
4cbd:	44 8b 03             	mov    r8d,DWORD PTR [rbx]
4cc0:	4c 89 f9             	mov    rcx,r15
4cc3:	4c 89 f2             	mov    rdx,r14
4cc6:	48 89 c7             	mov    rdi,rax
4cc9:	41 52                	push   r10
4ccb:	48 8b 74 24 38       	mov    rsi,QWORD PTR [rsp+0x38]
4cd0:	e8 cb e9 ff ff       	call   36a0 <quotearg_buffer_restyled>
4cd5:	8b 44 24 2c          	mov    eax,DWORD PTR [rsp+0x2c]
4cd9:	48 83 c4 20          	add    rsp,0x20
4cdd:	4d 85 e4             	test   r12,r12
4ce0:	41 89 45 00          	mov    DWORD PTR [r13+0x0],eax
4ce4:	74 09                	je     4cef <quotearg_alloc_mem+0xcf>
4ce6:	4c 8b 5c 24 28       	mov    r11,QWORD PTR [rsp+0x28]
4ceb:	4d 89 1c 24          	mov    QWORD PTR [r12],r11
4cef:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
4cf4:	48 83 c4 38          	add    rsp,0x38
4cf8:	5b                   	pop    rbx
4cf9:	5d                   	pop    rbp
4cfa:	41 5c                	pop    r12
4cfc:	41 5d                	pop    r13
4cfe:	41 5e                	pop    r14
4d00:	41 5f                	pop    r15
4d02:	c3                   	ret
4d03:	0f 1f 00             	nop    DWORD PTR [rax]
4d06:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4d0d:	00 00 00

0000000000004d10 <quotearg_alloc>:
4d10:	48 89 d1             	mov    rcx,rdx
4d13:	31 d2                	xor    edx,edx
4d15:	e9 06 ff ff ff       	jmp    4c20 <quotearg_alloc_mem>
4d1a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004d20 <quotearg_free>:
4d20:	8b 05 32 53 20 00    	mov    eax,DWORD PTR [rip+0x205332]        # 20a058 <nslots>
4d26:	41 54                	push   r12
4d28:	4c 8b 25 31 53 20 00 	mov    r12,QWORD PTR [rip+0x205331]        # 20a060 <slotvec>
4d2f:	55                   	push   rbp
4d30:	53                   	push   rbx
4d31:	83 f8 01             	cmp    eax,0x1
4d34:	7e 2b                	jle    4d61 <quotearg_free+0x41>
4d36:	83 e8 02             	sub    eax,0x2
4d39:	49 8d 5c 24 18       	lea    rbx,[r12+0x18]
4d3e:	48 c1 e0 04          	shl    rax,0x4
4d42:	49 8d 6c 04 28       	lea    rbp,[r12+rax*1+0x28]
4d47:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
4d4e:	00 00
4d50:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
4d53:	48 83 c3 10          	add    rbx,0x10
4d57:	e8 a4 d2 ff ff       	call   2000 <free@plt>
4d5c:	48 39 eb             	cmp    rbx,rbp
4d5f:	75 ef                	jne    4d50 <quotearg_free+0x30>
4d61:	49 8b 7c 24 08       	mov    rdi,QWORD PTR [r12+0x8]
4d66:	48 8d 1d 13 54 20 00 	lea    rbx,[rip+0x205413]        # 20a180 <slot0>
4d6d:	48 39 df             	cmp    rdi,rbx
4d70:	74 17                	je     4d89 <quotearg_free+0x69>
4d72:	e8 89 d2 ff ff       	call   2000 <free@plt>
4d77:	48 c7 05 ee 52 20 00 	mov    QWORD PTR [rip+0x2052ee],0x100        # 20a070 <slotvec0>
4d7e:	00 01 00 00
4d82:	48 89 1d ef 52 20 00 	mov    QWORD PTR [rip+0x2052ef],rbx        # 20a078 <slotvec0+0x8>
4d89:	48 8d 1d e0 52 20 00 	lea    rbx,[rip+0x2052e0]        # 20a070 <slotvec0>
4d90:	49 39 dc             	cmp    r12,rbx
4d93:	74 0f                	je     4da4 <quotearg_free+0x84>
4d95:	4c 89 e7             	mov    rdi,r12
4d98:	e8 63 d2 ff ff       	call   2000 <free@plt>
4d9d:	48 89 1d bc 52 20 00 	mov    QWORD PTR [rip+0x2052bc],rbx        # 20a060 <slotvec>
4da4:	5b                   	pop    rbx
4da5:	c7 05 a9 52 20 00 01 	mov    DWORD PTR [rip+0x2052a9],0x1        # 20a058 <nslots>
4dac:	00 00 00
4daf:	5d                   	pop    rbp
4db0:	41 5c                	pop    r12
4db2:	c3                   	ret
4db3:	0f 1f 00             	nop    DWORD PTR [rax]
4db6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4dbd:	00 00 00

0000000000004dc0 <quotearg_n>:
4dc0:	48 8d 0d b9 54 20 00 	lea    rcx,[rip+0x2054b9]        # 20a280 <default_quoting_options>
4dc7:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
4dce:	e9 0d fb ff ff       	jmp    48e0 <quotearg_n_options>
4dd3:	0f 1f 00             	nop    DWORD PTR [rax]
4dd6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4ddd:	00 00 00

0000000000004de0 <quotearg_n_mem>:
4de0:	48 8d 0d 99 54 20 00 	lea    rcx,[rip+0x205499]        # 20a280 <default_quoting_options>
4de7:	e9 f4 fa ff ff       	jmp    48e0 <quotearg_n_options>
4dec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000004df0 <quotearg>:
4df0:	48 8d 0d 89 54 20 00 	lea    rcx,[rip+0x205489]        # 20a280 <default_quoting_options>
4df7:	48 89 fe             	mov    rsi,rdi
4dfa:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
4e01:	31 ff                	xor    edi,edi
4e03:	e9 d8 fa ff ff       	jmp    48e0 <quotearg_n_options>
4e08:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
4e0f:	00

0000000000004e10 <quotearg_mem>:
4e10:	48 8d 0d 69 54 20 00 	lea    rcx,[rip+0x205469]        # 20a280 <default_quoting_options>
4e17:	48 89 f2             	mov    rdx,rsi
4e1a:	48 89 fe             	mov    rsi,rdi
4e1d:	31 ff                	xor    edi,edi
4e1f:	e9 bc fa ff ff       	jmp    48e0 <quotearg_n_options>
4e24:	66 90                	xchg   ax,ax
4e26:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4e2d:	00 00 00

0000000000004e30 <quotearg_n_style>:
4e30:	48 83 ec 48          	sub    rsp,0x48
4e34:	48 89 d0             	mov    rax,rdx
4e37:	64 48 8b 14 25 28 00 	mov    rdx,QWORD PTR fs:0x28
4e3e:	00 00
4e40:	48 89 54 24 38       	mov    QWORD PTR [rsp+0x38],rdx
4e45:	31 d2                	xor    edx,edx
4e47:	83 fe 0a             	cmp    esi,0xa
4e4a:	74 68                	je     4eb4 <quotearg_n_style+0x84>
4e4c:	89 34 24             	mov    DWORD PTR [rsp],esi
4e4f:	48 89 e1             	mov    rcx,rsp
4e52:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
4e59:	48 89 c6             	mov    rsi,rax
4e5c:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
4e63:	00 00
4e65:	48 c7 44 24 0c 00 00 	mov    QWORD PTR [rsp+0xc],0x0
4e6c:	00 00
4e6e:	48 c7 44 24 14 00 00 	mov    QWORD PTR [rsp+0x14],0x0
4e75:	00 00
4e77:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
4e7e:	00 00
4e80:	48 c7 44 24 24 00 00 	mov    QWORD PTR [rsp+0x24],0x0
4e87:	00 00
4e89:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
4e90:	00 00
4e92:	c7 44 24 34 00 00 00 	mov    DWORD PTR [rsp+0x34],0x0
4e99:	00
4e9a:	e8 41 fa ff ff       	call   48e0 <quotearg_n_options>
4e9f:	48 8b 4c 24 38       	mov    rcx,QWORD PTR [rsp+0x38]
4ea4:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
4eab:	00 00
4ead:	75 0a                	jne    4eb9 <quotearg_n_style+0x89>
4eaf:	48 83 c4 48          	add    rsp,0x48
4eb3:	c3                   	ret
4eb4:	e8 57 ce ff ff       	call   1d10 <abort@plt>
4eb9:	e8 12 cf ff ff       	call   1dd0 <__stack_chk_fail@plt>
4ebe:	66 90                	xchg   ax,ax

0000000000004ec0 <quotearg_n_style_mem>:
4ec0:	48 83 ec 48          	sub    rsp,0x48
4ec4:	48 89 d0             	mov    rax,rdx
4ec7:	48 89 ca             	mov    rdx,rcx
4eca:	64 48 8b 0c 25 28 00 	mov    rcx,QWORD PTR fs:0x28
4ed1:	00 00
4ed3:	48 89 4c 24 38       	mov    QWORD PTR [rsp+0x38],rcx
4ed8:	31 c9                	xor    ecx,ecx
4eda:	83 fe 0a             	cmp    esi,0xa
4edd:	74 61                	je     4f40 <quotearg_n_style_mem+0x80>
4edf:	89 34 24             	mov    DWORD PTR [rsp],esi
4ee2:	48 89 e1             	mov    rcx,rsp
4ee5:	48 89 c6             	mov    rsi,rax
4ee8:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
4eef:	00 00
4ef1:	48 c7 44 24 0c 00 00 	mov    QWORD PTR [rsp+0xc],0x0
4ef8:	00 00
4efa:	48 c7 44 24 14 00 00 	mov    QWORD PTR [rsp+0x14],0x0
4f01:	00 00
4f03:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
4f0a:	00 00
4f0c:	48 c7 44 24 24 00 00 	mov    QWORD PTR [rsp+0x24],0x0
4f13:	00 00
4f15:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
4f1c:	00 00
4f1e:	c7 44 24 34 00 00 00 	mov    DWORD PTR [rsp+0x34],0x0
4f25:	00
4f26:	e8 b5 f9 ff ff       	call   48e0 <quotearg_n_options>
4f2b:	48 8b 54 24 38       	mov    rdx,QWORD PTR [rsp+0x38]
4f30:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
4f37:	00 00
4f39:	75 0a                	jne    4f45 <quotearg_n_style_mem+0x85>
4f3b:	48 83 c4 48          	add    rsp,0x48
4f3f:	c3                   	ret
4f40:	e8 cb cd ff ff       	call   1d10 <abort@plt>
4f45:	e8 86 ce ff ff       	call   1dd0 <__stack_chk_fail@plt>
4f4a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004f50 <quotearg_style>:
4f50:	48 89 f2             	mov    rdx,rsi
4f53:	89 fe                	mov    esi,edi
4f55:	31 ff                	xor    edi,edi
4f57:	e9 d4 fe ff ff       	jmp    4e30 <quotearg_n_style>
4f5c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000004f60 <quotearg_style_mem>:
4f60:	48 89 d1             	mov    rcx,rdx
4f63:	48 89 f2             	mov    rdx,rsi
4f66:	89 fe                	mov    esi,edi
4f68:	31 ff                	xor    edi,edi
4f6a:	e9 51 ff ff ff       	jmp    4ec0 <quotearg_n_style_mem>
4f6f:	90                   	nop

0000000000004f70 <quotearg_char_mem>:
4f70:	48 83 ec 48          	sub    rsp,0x48
4f74:	89 d1                	mov    ecx,edx
4f76:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
4f7d:	00 00
4f7f:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
4f84:	31 c0                	xor    eax,eax
4f86:	48 8b 05 23 53 20 00 	mov    rax,QWORD PTR [rip+0x205323]        # 20a2b0 <default_quoting_options+0x30>
4f8d:	49 89 e0             	mov    r8,rsp
4f90:	83 e1 1f             	and    ecx,0x1f
4f93:	66 0f 6f 05 e5 52 20 	movdqa xmm0,XMMWORD PTR [rip+0x2052e5]        # 20a280 <default_quoting_options>
4f9a:	00
4f9b:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
4fa0:	89 d0                	mov    eax,edx
4fa2:	0f 29 04 24          	movaps XMMWORD PTR [rsp],xmm0
4fa6:	c0 e8 05             	shr    al,0x5
4fa9:	0f b6 c0             	movzx  eax,al
4fac:	4d 8d 4c 80 08       	lea    r9,[r8+rax*4+0x8]
4fb1:	66 0f 6f 05 d7 52 20 	movdqa xmm0,XMMWORD PTR [rip+0x2052d7]        # 20a290 <default_quoting_options+0x10>
4fb8:	00
4fb9:	0f 29 44 24 10       	movaps XMMWORD PTR [rsp+0x10],xmm0
4fbe:	66 0f 6f 05 da 52 20 	movdqa xmm0,XMMWORD PTR [rip+0x2052da]        # 20a2a0 <default_quoting_options+0x20>
4fc5:	00
4fc6:	0f 29 44 24 20       	movaps XMMWORD PTR [rsp+0x20],xmm0
4fcb:	41 8b 11             	mov    edx,DWORD PTR [r9]
4fce:	89 d0                	mov    eax,edx
4fd0:	d3 e8                	shr    eax,cl
4fd2:	f7 d0                	not    eax
4fd4:	83 e0 01             	and    eax,0x1
4fd7:	d3 e0                	shl    eax,cl
4fd9:	4c 89 c1             	mov    rcx,r8
4fdc:	31 d0                	xor    eax,edx
4fde:	48 89 f2             	mov    rdx,rsi
4fe1:	48 89 fe             	mov    rsi,rdi
4fe4:	41 89 01             	mov    DWORD PTR [r9],eax
4fe7:	31 ff                	xor    edi,edi
4fe9:	e8 f2 f8 ff ff       	call   48e0 <quotearg_n_options>
4fee:	48 8b 74 24 38       	mov    rsi,QWORD PTR [rsp+0x38]
4ff3:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
4ffa:	00 00
4ffc:	75 05                	jne    5003 <quotearg_char_mem+0x93>
4ffe:	48 83 c4 48          	add    rsp,0x48
5002:	c3                   	ret
5003:	e8 c8 cd ff ff       	call   1dd0 <__stack_chk_fail@plt>
5008:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
500f:	00

0000000000005010 <quotearg_char>:
5010:	40 0f be d6          	movsx  edx,sil
5014:	48 c7 c6 ff ff ff ff 	mov    rsi,0xffffffffffffffff
501b:	e9 50 ff ff ff       	jmp    4f70 <quotearg_char_mem>

0000000000005020 <quotearg_colon>:
5020:	ba 3a 00 00 00       	mov    edx,0x3a
5025:	48 c7 c6 ff ff ff ff 	mov    rsi,0xffffffffffffffff
502c:	e9 3f ff ff ff       	jmp    4f70 <quotearg_char_mem>
5031:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5036:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
503d:	00 00 00

0000000000005040 <quotearg_colon_mem>:
5040:	ba 3a 00 00 00       	mov    edx,0x3a
5045:	e9 26 ff ff ff       	jmp    4f70 <quotearg_char_mem>
504a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005050 <quotearg_n_style_colon>:
5050:	48 83 ec 48          	sub    rsp,0x48
5054:	48 89 d0             	mov    rax,rdx
5057:	64 48 8b 14 25 28 00 	mov    rdx,QWORD PTR fs:0x28
505e:	00 00
5060:	48 89 54 24 38       	mov    QWORD PTR [rsp+0x38],rdx
5065:	31 d2                	xor    edx,edx
5067:	83 fe 0a             	cmp    esi,0xa
506a:	74 68                	je     50d4 <quotearg_n_style_colon+0x84>
506c:	89 34 24             	mov    DWORD PTR [rsp],esi
506f:	48 89 e1             	mov    rcx,rsp
5072:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
5079:	48 89 c6             	mov    rsi,rax
507c:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
5083:	00 00
5085:	48 c7 44 24 0c 00 00 	mov    QWORD PTR [rsp+0xc],0x4000000
508c:	00 04
508e:	48 c7 44 24 14 00 00 	mov    QWORD PTR [rsp+0x14],0x0
5095:	00 00
5097:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
509e:	00 00
50a0:	48 c7 44 24 24 00 00 	mov    QWORD PTR [rsp+0x24],0x0
50a7:	00 00
50a9:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
50b0:	00 00
50b2:	c7 44 24 34 00 00 00 	mov    DWORD PTR [rsp+0x34],0x0
50b9:	00
50ba:	e8 21 f8 ff ff       	call   48e0 <quotearg_n_options>
50bf:	48 8b 4c 24 38       	mov    rcx,QWORD PTR [rsp+0x38]
50c4:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
50cb:	00 00
50cd:	75 0a                	jne    50d9 <quotearg_n_style_colon+0x89>
50cf:	48 83 c4 48          	add    rsp,0x48
50d3:	c3                   	ret
50d4:	e8 37 cc ff ff       	call   1d10 <abort@plt>
50d9:	e8 f2 cc ff ff       	call   1dd0 <__stack_chk_fail@plt>
50de:	66 90                	xchg   ax,ax

00000000000050e0 <quotearg_n_custom_mem>:
50e0:	48 83 ec 48          	sub    rsp,0x48
50e4:	49 89 c9             	mov    r9,rcx
50e7:	48 8b 0d c2 51 20 00 	mov    rcx,QWORD PTR [rip+0x2051c2]        # 20a2b0 <default_quoting_options+0x30>
50ee:	66 0f 6f 05 8a 51 20 	movdqa xmm0,XMMWORD PTR [rip+0x20518a]        # 20a280 <default_quoting_options>
50f5:	00
50f6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
50fd:	00 00
50ff:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
5104:	31 c0                	xor    eax,eax
5106:	0f 29 04 24          	movaps XMMWORD PTR [rsp],xmm0
510a:	48 85 f6             	test   rsi,rsi
510d:	48 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],rcx
5112:	c7 04 24 0a 00 00 00 	mov    DWORD PTR [rsp],0xa
5119:	66 0f 6f 05 6f 51 20 	movdqa xmm0,XMMWORD PTR [rip+0x20516f]        # 20a290 <default_quoting_options+0x10>
5120:	00
5121:	0f 29 44 24 10       	movaps XMMWORD PTR [rsp+0x10],xmm0
5126:	66 0f 6f 05 72 51 20 	movdqa xmm0,XMMWORD PTR [rip+0x205172]        # 20a2a0 <default_quoting_options+0x20>
512d:	00
512e:	0f 29 44 24 20       	movaps XMMWORD PTR [rsp+0x20],xmm0
5133:	74 32                	je     5167 <quotearg_n_custom_mem+0x87>
5135:	48 85 d2             	test   rdx,rdx
5138:	74 2d                	je     5167 <quotearg_n_custom_mem+0x87>
513a:	48 89 74 24 28       	mov    QWORD PTR [rsp+0x28],rsi
513f:	48 89 54 24 30       	mov    QWORD PTR [rsp+0x30],rdx
5144:	48 89 e1             	mov    rcx,rsp
5147:	4c 89 c2             	mov    rdx,r8
514a:	4c 89 ce             	mov    rsi,r9
514d:	e8 8e f7 ff ff       	call   48e0 <quotearg_n_options>
5152:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
5157:	64 48 33 3c 25 28 00 	xor    rdi,QWORD PTR fs:0x28
515e:	00 00
5160:	75 0a                	jne    516c <quotearg_n_custom_mem+0x8c>
5162:	48 83 c4 48          	add    rsp,0x48
5166:	c3                   	ret
5167:	e8 a4 cb ff ff       	call   1d10 <abort@plt>
516c:	e8 5f cc ff ff       	call   1dd0 <__stack_chk_fail@plt>
5171:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5176:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
517d:	00 00 00

0000000000005180 <quotearg_n_custom>:
5180:	49 c7 c0 ff ff ff ff 	mov    r8,0xffffffffffffffff
5187:	e9 54 ff ff ff       	jmp    50e0 <quotearg_n_custom_mem>
518c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000005190 <quotearg_custom>:
5190:	48 89 d1             	mov    rcx,rdx
5193:	49 c7 c0 ff ff ff ff 	mov    r8,0xffffffffffffffff
519a:	48 89 f2             	mov    rdx,rsi
519d:	48 89 fe             	mov    rsi,rdi
51a0:	31 ff                	xor    edi,edi
51a2:	e9 39 ff ff ff       	jmp    50e0 <quotearg_n_custom_mem>
51a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
51ae:	00 00

00000000000051b0 <quotearg_custom_mem>:
51b0:	49 89 c8             	mov    r8,rcx
51b3:	48 89 d1             	mov    rcx,rdx
51b6:	48 89 f2             	mov    rdx,rsi
51b9:	48 89 fe             	mov    rsi,rdi
51bc:	31 ff                	xor    edi,edi
51be:	e9 1d ff ff ff       	jmp    50e0 <quotearg_n_custom_mem>
51c3:	0f 1f 00             	nop    DWORD PTR [rax]
51c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
51cd:	00 00 00

00000000000051d0 <quote_n_mem>:
51d0:	48 8d 0d 49 4e 20 00 	lea    rcx,[rip+0x204e49]        # 20a020 <quote_quoting_options>
51d7:	e9 04 f7 ff ff       	jmp    48e0 <quotearg_n_options>
51dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000051e0 <quote_mem>:
51e0:	48 8d 0d 39 4e 20 00 	lea    rcx,[rip+0x204e39]        # 20a020 <quote_quoting_options>
51e7:	48 89 f2             	mov    rdx,rsi
51ea:	48 89 fe             	mov    rsi,rdi
51ed:	31 ff                	xor    edi,edi
51ef:	e9 ec f6 ff ff       	jmp    48e0 <quotearg_n_options>
51f4:	66 90                	xchg   ax,ax
51f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
51fd:	00 00 00

0000000000005200 <quote_n>:
5200:	48 8d 0d 19 4e 20 00 	lea    rcx,[rip+0x204e19]        # 20a020 <quote_quoting_options>
5207:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
520e:	e9 cd f6 ff ff       	jmp    48e0 <quotearg_n_options>
5213:	0f 1f 00             	nop    DWORD PTR [rax]
5216:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
521d:	00 00 00

0000000000005220 <quote>:
5220:	48 8d 0d f9 4d 20 00 	lea    rcx,[rip+0x204df9]        # 20a020 <quote_quoting_options>
5227:	48 89 fe             	mov    rsi,rdi
522a:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
5231:	31 ff                	xor    edi,edi
5233:	e9 a8 f6 ff ff       	jmp    48e0 <quotearg_n_options>
5238:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
523f:	00

0000000000005240 <version_etc_arn>:
5240:	41 57                	push   r15
5242:	41 56                	push   r14
5244:	41 55                	push   r13
5246:	41 54                	push   r12
5248:	4d 89 cc             	mov    r12,r9
524b:	55                   	push   rbp
524c:	53                   	push   rbx
524d:	48 89 fd             	mov    rbp,rdi
5250:	4c 89 c3             	mov    rbx,r8
5253:	48 83 ec 28          	sub    rsp,0x28
5257:	48 85 f6             	test   rsi,rsi
525a:	0f 84 18 01 00 00    	je     5378 <version_etc_arn+0x138>
5260:	49 89 d0             	mov    r8,rdx
5263:	48 8d 15 7e 2c 00 00 	lea    rdx,[rip+0x2c7e]        # 7ee8 <quoting_style_vals+0x28>
526a:	49 89 c9             	mov    r9,rcx
526d:	31 c0                	xor    eax,eax
526f:	48 89 f1             	mov    rcx,rsi
5272:	be 01 00 00 00       	mov    esi,0x1
5277:	e8 44 cd ff ff       	call   1fc0 <__fprintf_chk@plt>
527c:	48 8d 35 78 2c 00 00 	lea    rsi,[rip+0x2c78]        # 7efb <quoting_style_vals+0x3b>
5283:	31 ff                	xor    edi,edi
5285:	ba 05 00 00 00       	mov    edx,0x5
528a:	e8 11 cb ff ff       	call   1da0 <dcgettext@plt>
528f:	48 8d 15 8a 2f 00 00 	lea    rdx,[rip+0x2f8a]        # 8220 <version_etc_copyright>
5296:	48 89 c1             	mov    rcx,rax
5299:	41 b8 e3 07 00 00    	mov    r8d,0x7e3
529f:	be 01 00 00 00       	mov    esi,0x1
52a4:	48 89 ef             	mov    rdi,rbp
52a7:	31 c0                	xor    eax,eax
52a9:	e8 12 cd ff ff       	call   1fc0 <__fprintf_chk@plt>
52ae:	48 8d 35 d3 2c 00 00 	lea    rsi,[rip+0x2cd3]        # 7f88 <quoting_style_vals+0xc8>
52b5:	31 ff                	xor    edi,edi
52b7:	ba 05 00 00 00       	mov    edx,0x5
52bc:	e8 df ca ff ff       	call   1da0 <dcgettext@plt>
52c1:	48 89 ee             	mov    rsi,rbp
52c4:	48 89 c7             	mov    rdi,rax
52c7:	e8 c4 cb ff ff       	call   1e90 <fputs_unlocked@plt>
52cc:	49 83 fc 09          	cmp    r12,0x9
52d0:	0f 87 3a 03 00 00    	ja     5610 <version_etc_arn+0x3d0>
52d6:	48 8d 15 0b 2f 00 00 	lea    rdx,[rip+0x2f0b]        # 81e8 <quoting_style_vals+0x328>
52dd:	4a 63 04 a2          	movsxd rax,DWORD PTR [rdx+r12*4]
52e1:	48 01 d0             	add    rax,rdx
52e4:	ff e0                	jmp    rax
52e6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
52ed:	00 00 00
52f0:	4c 8b 4b 38          	mov    r9,QWORD PTR [rbx+0x38]
52f4:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
52f8:	48 8d 35 f9 2d 00 00 	lea    rsi,[rip+0x2df9]        # 80f8 <quoting_style_vals+0x238>
52ff:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
5303:	ba 05 00 00 00       	mov    edx,0x5
5308:	31 ff                	xor    edi,edi
530a:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
530e:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
5312:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
5317:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
531b:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
531f:	48 89 04 24          	mov    QWORD PTR [rsp],rax
5323:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
5328:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
532b:	e8 70 ca ff ff       	call   1da0 <dcgettext@plt>
5330:	48 83 ec 08          	sub    rsp,0x8
5334:	4c 8b 4c 24 18       	mov    r9,QWORD PTR [rsp+0x18]
5339:	48 89 c2             	mov    rdx,rax
533c:	48 89 d9             	mov    rcx,rbx
533f:	be 01 00 00 00       	mov    esi,0x1
5344:	48 89 ef             	mov    rdi,rbp
5347:	31 c0                	xor    eax,eax
5349:	41 51                	push   r9
534b:	41 55                	push   r13
534d:	41 54                	push   r12
534f:	41 57                	push   r15
5351:	41 56                	push   r14
5353:	4c 8b 4c 24 30       	mov    r9,QWORD PTR [rsp+0x30]
5358:	4c 8b 44 24 38       	mov    r8,QWORD PTR [rsp+0x38]
535d:	e8 5e cc ff ff       	call   1fc0 <__fprintf_chk@plt>
5362:	48 83 c4 30          	add    rsp,0x30
5366:	48 83 c4 28          	add    rsp,0x28
536a:	5b                   	pop    rbx
536b:	5d                   	pop    rbp
536c:	41 5c                	pop    r12
536e:	41 5d                	pop    r13
5370:	41 5e                	pop    r14
5372:	41 5f                	pop    r15
5374:	c3                   	ret
5375:	0f 1f 00             	nop    DWORD PTR [rax]
5378:	49 89 c8             	mov    r8,rcx
537b:	48 89 d1             	mov    rcx,rdx
537e:	48 8d 15 6f 2b 00 00 	lea    rdx,[rip+0x2b6f]        # 7ef4 <quoting_style_vals+0x34>
5385:	be 01 00 00 00       	mov    esi,0x1
538a:	31 c0                	xor    eax,eax
538c:	e8 2f cc ff ff       	call   1fc0 <__fprintf_chk@plt>
5391:	e9 e6 fe ff ff       	jmp    527c <version_etc_arn+0x3c>
5396:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
539d:	00 00 00
53a0:	4c 8b 53 40          	mov    r10,QWORD PTR [rbx+0x40]
53a4:	4c 8b 4b 38          	mov    r9,QWORD PTR [rbx+0x38]
53a8:	48 8d 35 79 2d 00 00 	lea    rsi,[rip+0x2d79]        # 8128 <quoting_style_vals+0x268>
53af:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
53b3:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
53b7:	ba 05 00 00 00       	mov    edx,0x5
53bc:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
53c0:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
53c4:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
53c8:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
53cc:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
53cf:	4c 89 54 24 18       	mov    QWORD PTR [rsp+0x18],r10
53d4:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
53d9:	48 89 04 24          	mov    QWORD PTR [rsp],rax
53dd:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
53e2:	31 ff                	xor    edi,edi
53e4:	e8 b7 c9 ff ff       	call   1da0 <dcgettext@plt>
53e9:	4c 8b 54 24 18       	mov    r10,QWORD PTR [rsp+0x18]
53ee:	41 52                	push   r10
53f0:	e9 3f ff ff ff       	jmp    5334 <version_etc_arn+0xf4>
53f5:	0f 1f 00             	nop    DWORD PTR [rax]
53f8:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
53fb:	48 8d 35 fd 2a 00 00 	lea    rsi,[rip+0x2afd]        # 7eff <quoting_style_vals+0x3f>
5402:	ba 05 00 00 00       	mov    edx,0x5
5407:	31 ff                	xor    edi,edi
5409:	e8 92 c9 ff ff       	call   1da0 <dcgettext@plt>
540e:	48 83 c4 28          	add    rsp,0x28
5412:	48 89 d9             	mov    rcx,rbx
5415:	48 89 ef             	mov    rdi,rbp
5418:	5b                   	pop    rbx
5419:	5d                   	pop    rbp
541a:	41 5c                	pop    r12
541c:	41 5d                	pop    r13
541e:	41 5e                	pop    r14
5420:	41 5f                	pop    r15
5422:	48 89 c2             	mov    rdx,rax
5425:	be 01 00 00 00       	mov    esi,0x1
542a:	31 c0                	xor    eax,eax
542c:	e9 8f cb ff ff       	jmp    1fc0 <__fprintf_chk@plt>
5431:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
5438:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
543c:	48 8d 35 cc 2a 00 00 	lea    rsi,[rip+0x2acc]        # 7f0f <quoting_style_vals+0x4f>
5443:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
5446:	ba 05 00 00 00       	mov    edx,0x5
544b:	31 ff                	xor    edi,edi
544d:	e8 4e c9 ff ff       	call   1da0 <dcgettext@plt>
5452:	48 83 c4 28          	add    rsp,0x28
5456:	4d 89 e0             	mov    r8,r12
5459:	48 89 d9             	mov    rcx,rbx
545c:	48 89 ef             	mov    rdi,rbp
545f:	48 89 c2             	mov    rdx,rax
5462:	be 01 00 00 00       	mov    esi,0x1
5467:	5b                   	pop    rbx
5468:	5d                   	pop    rbp
5469:	41 5c                	pop    r12
546b:	41 5d                	pop    r13
546d:	41 5e                	pop    r14
546f:	41 5f                	pop    r15
5471:	31 c0                	xor    eax,eax
5473:	e9 48 cb ff ff       	jmp    1fc0 <__fprintf_chk@plt>
5478:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
547f:	00
5480:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
5484:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
5488:	48 8d 35 97 2a 00 00 	lea    rsi,[rip+0x2a97]        # 7f26 <quoting_style_vals+0x66>
548f:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
5492:	ba 05 00 00 00       	mov    edx,0x5
5497:	31 ff                	xor    edi,edi
5499:	e8 02 c9 ff ff       	call   1da0 <dcgettext@plt>
549e:	48 83 c4 28          	add    rsp,0x28
54a2:	4d 89 e9             	mov    r9,r13
54a5:	4d 89 e0             	mov    r8,r12
54a8:	48 89 d9             	mov    rcx,rbx
54ab:	48 89 ef             	mov    rdi,rbp
54ae:	48 89 c2             	mov    rdx,rax
54b1:	5b                   	pop    rbx
54b2:	5d                   	pop    rbp
54b3:	41 5c                	pop    r12
54b5:	41 5d                	pop    r13
54b7:	41 5e                	pop    r14
54b9:	41 5f                	pop    r15
54bb:	be 01 00 00 00       	mov    esi,0x1
54c0:	31 c0                	xor    eax,eax
54c2:	e9 f9 ca ff ff       	jmp    1fc0 <__fprintf_chk@plt>
54c7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
54ce:	00 00
54d0:	48 8d 35 81 2b 00 00 	lea    rsi,[rip+0x2b81]        # 8058 <quoting_style_vals+0x198>
54d7:	ba 05 00 00 00       	mov    edx,0x5
54dc:	31 ff                	xor    edi,edi
54de:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
54e2:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
54e6:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
54ea:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
54ed:	e8 ae c8 ff ff       	call   1da0 <dcgettext@plt>
54f2:	48 83 ec 08          	sub    rsp,0x8
54f6:	41 56                	push   r14
54f8:	48 89 c2             	mov    rdx,rax
54fb:	4d 89 e9             	mov    r9,r13
54fe:	4d 89 e0             	mov    r8,r12
5501:	48 89 d9             	mov    rcx,rbx
5504:	48 89 ef             	mov    rdi,rbp
5507:	be 01 00 00 00       	mov    esi,0x1
550c:	31 c0                	xor    eax,eax
550e:	e8 ad ca ff ff       	call   1fc0 <__fprintf_chk@plt>
5513:	58                   	pop    rax
5514:	5a                   	pop    rdx
5515:	48 83 c4 28          	add    rsp,0x28
5519:	5b                   	pop    rbx
551a:	5d                   	pop    rbp
551b:	41 5c                	pop    r12
551d:	41 5d                	pop    r13
551f:	41 5e                	pop    r14
5521:	41 5f                	pop    r15
5523:	c3                   	ret
5524:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
5528:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
552c:	48 8d 35 45 2b 00 00 	lea    rsi,[rip+0x2b45]        # 8078 <quoting_style_vals+0x1b8>
5533:	ba 05 00 00 00       	mov    edx,0x5
5538:	31 ff                	xor    edi,edi
553a:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
553e:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
5542:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
5546:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
5549:	e8 52 c8 ff ff       	call   1da0 <dcgettext@plt>
554e:	41 57                	push   r15
5550:	eb a4                	jmp    54f6 <version_etc_arn+0x2b6>
5552:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
5558:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
555c:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
5560:	48 8d 35 39 2b 00 00 	lea    rsi,[rip+0x2b39]        # 80a0 <quoting_style_vals+0x1e0>
5567:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
556b:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
556f:	ba 05 00 00 00       	mov    edx,0x5
5574:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
5578:	31 ff                	xor    edi,edi
557a:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
557d:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
5581:	e8 1a c8 ff ff       	call   1da0 <dcgettext@plt>
5586:	48 83 ec 08          	sub    rsp,0x8
558a:	4d 89 e9             	mov    r9,r13
558d:	41 54                	push   r12
558f:	41 57                	push   r15
5591:	41 56                	push   r14
5593:	4c 8b 44 24 20       	mov    r8,QWORD PTR [rsp+0x20]
5598:	48 89 d9             	mov    rcx,rbx
559b:	48 89 c2             	mov    rdx,rax
559e:	48 89 ef             	mov    rdi,rbp
55a1:	be 01 00 00 00       	mov    esi,0x1
55a6:	31 c0                	xor    eax,eax
55a8:	e8 13 ca ff ff       	call   1fc0 <__fprintf_chk@plt>
55ad:	48 83 c4 20          	add    rsp,0x20
55b1:	48 83 c4 28          	add    rsp,0x28
55b5:	5b                   	pop    rbx
55b6:	5d                   	pop    rbp
55b7:	41 5c                	pop    r12
55b9:	41 5d                	pop    r13
55bb:	41 5e                	pop    r14
55bd:	41 5f                	pop    r15
55bf:	c3                   	ret
55c0:	4c 8b 4b 10          	mov    r9,QWORD PTR [rbx+0x10]
55c4:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
55c8:	48 8d 35 f9 2a 00 00 	lea    rsi,[rip+0x2af9]        # 80c8 <quoting_style_vals+0x208>
55cf:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
55d3:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
55d7:	ba 05 00 00 00       	mov    edx,0x5
55dc:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
55e0:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
55e4:	31 ff                	xor    edi,edi
55e6:	4c 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],r9
55eb:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
55ee:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
55f2:	e8 a9 c7 ff ff       	call   1da0 <dcgettext@plt>
55f7:	41 55                	push   r13
55f9:	41 54                	push   r12
55fb:	41 57                	push   r15
55fd:	41 56                	push   r14
55ff:	4c 8b 4c 24 28       	mov    r9,QWORD PTR [rsp+0x28]
5604:	eb 8d                	jmp    5593 <version_etc_arn+0x353>
5606:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
560d:	00 00 00
5610:	4c 8b 53 40          	mov    r10,QWORD PTR [rbx+0x40]
5614:	4c 8b 4b 38          	mov    r9,QWORD PTR [rbx+0x38]
5618:	ba 05 00 00 00       	mov    edx,0x5
561d:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
5621:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
5625:	48 8d 35 34 2b 00 00 	lea    rsi,[rip+0x2b34]        # 8160 <quoting_style_vals+0x2a0>
562c:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
5630:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
5634:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
5638:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
563c:	4c 89 54 24 18       	mov    QWORD PTR [rsp+0x18],r10
5641:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
5646:	48 89 04 24          	mov    QWORD PTR [rsp],rax
564a:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
564f:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
5652:	e9 8b fd ff ff       	jmp    53e2 <version_etc_arn+0x1a2>
5657:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
565e:	00 00

0000000000005660 <version_etc_ar>:
5660:	45 31 c9             	xor    r9d,r9d
5663:	49 83 38 00          	cmp    QWORD PTR [r8],0x0
5667:	74 12                	je     567b <version_etc_ar+0x1b>
5669:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
5670:	49 83 c1 01          	add    r9,0x1
5674:	4b 83 3c c8 00       	cmp    QWORD PTR [r8+r9*8],0x0
5679:	75 f5                	jne    5670 <version_etc_ar+0x10>
567b:	e9 c0 fb ff ff       	jmp    5240 <version_etc_arn>

0000000000005680 <version_etc_va>:
5680:	48 83 ec 68          	sub    rsp,0x68
5684:	4d 89 c2             	mov    r10,r8
5687:	45 31 c9             	xor    r9d,r9d
568a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
5691:	00 00
5693:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
5698:	31 c0                	xor    eax,eax
569a:	49 89 e0             	mov    r8,rsp
569d:	0f 1f 00             	nop    DWORD PTR [rax]
56a0:	41 8b 02             	mov    eax,DWORD PTR [r10]
56a3:	83 f8 2f             	cmp    eax,0x2f
56a6:	77 42                	ja     56ea <version_etc_va+0x6a>
56a8:	41 89 c3             	mov    r11d,eax
56ab:	4d 03 5a 10          	add    r11,QWORD PTR [r10+0x10]
56af:	83 c0 08             	add    eax,0x8
56b2:	41 89 02             	mov    DWORD PTR [r10],eax
56b5:	49 8b 03             	mov    rax,QWORD PTR [r11]
56b8:	48 85 c0             	test   rax,rax
56bb:	4b 89 04 c8          	mov    QWORD PTR [r8+r9*8],rax
56bf:	74 0a                	je     56cb <version_etc_va+0x4b>
56c1:	49 83 c1 01          	add    r9,0x1
56c5:	49 83 f9 0a          	cmp    r9,0xa
56c9:	75 d5                	jne    56a0 <version_etc_va+0x20>
56cb:	e8 70 fb ff ff       	call   5240 <version_etc_arn>
56d0:	48 8b 44 24 58       	mov    rax,QWORD PTR [rsp+0x58]
56d5:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
56dc:	00 00
56de:	75 05                	jne    56e5 <version_etc_va+0x65>
56e0:	48 83 c4 68          	add    rsp,0x68
56e4:	c3                   	ret
56e5:	e8 e6 c6 ff ff       	call   1dd0 <__stack_chk_fail@plt>
56ea:	4d 8b 5a 08          	mov    r11,QWORD PTR [r10+0x8]
56ee:	49 8d 43 08          	lea    rax,[r11+0x8]
56f2:	49 89 42 08          	mov    QWORD PTR [r10+0x8],rax
56f6:	eb bd                	jmp    56b5 <version_etc_va+0x35>
56f8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
56ff:	00

0000000000005700 <version_etc>:
5700:	55                   	push   rbp
5701:	53                   	push   rbx
5702:	41 ba 20 00 00 00    	mov    r10d,0x20
5708:	45 31 db             	xor    r11d,r11d
570b:	48 81 ec b8 00 00 00 	sub    rsp,0xb8
5712:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
5719:	00 00
571b:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
5720:	31 c0                	xor    eax,eax
5722:	48 8d 84 24 d0 00 00 	lea    rax,[rsp+0xd0]
5729:	00
572a:	4c 89 84 24 a0 00 00 	mov    QWORD PTR [rsp+0xa0],r8
5731:	00
5732:	48 8d 9c 24 d0 00 00 	lea    rbx,[rsp+0xd0]
5739:	00
573a:	4c 8d 44 24 20       	lea    r8,[rsp+0x20]
573f:	4c 89 8c 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],r9
5746:	00
5747:	c7 44 24 08 20 00 00 	mov    DWORD PTR [rsp+0x8],0x20
574e:	00
574f:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
5754:	48 8d 84 24 80 00 00 	lea    rax,[rsp+0x80]
575b:	00
575c:	45 31 c9             	xor    r9d,r9d
575f:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
5764:	48 89 c5             	mov    rbp,rax
5767:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
576e:	00 00
5770:	41 83 fa 2f          	cmp    r10d,0x2f
5774:	77 56                	ja     57cc <version_etc+0xcc>
5776:	44 89 d0             	mov    eax,r10d
5779:	41 bb 01 00 00 00    	mov    r11d,0x1
577f:	41 83 c2 08          	add    r10d,0x8
5783:	48 01 e8             	add    rax,rbp
5786:	48 8b 00             	mov    rax,QWORD PTR [rax]
5789:	48 85 c0             	test   rax,rax
578c:	4b 89 04 c8          	mov    QWORD PTR [r8+r9*8],rax
5790:	74 0a                	je     579c <version_etc+0x9c>
5792:	49 83 c1 01          	add    r9,0x1
5796:	49 83 f9 0a          	cmp    r9,0xa
579a:	75 d4                	jne    5770 <version_etc+0x70>
579c:	45 84 db             	test   r11b,r11b
579f:	75 24                	jne    57c5 <version_etc+0xc5>
57a1:	e8 9a fa ff ff       	call   5240 <version_etc_arn>
57a6:	48 8b 44 24 78       	mov    rax,QWORD PTR [rsp+0x78]
57ab:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
57b2:	00 00
57b4:	75 0a                	jne    57c0 <version_etc+0xc0>
57b6:	48 81 c4 b8 00 00 00 	add    rsp,0xb8
57bd:	5b                   	pop    rbx
57be:	5d                   	pop    rbp
57bf:	c3                   	ret
57c0:	e8 0b c6 ff ff       	call   1dd0 <__stack_chk_fail@plt>
57c5:	44 89 54 24 08       	mov    DWORD PTR [rsp+0x8],r10d
57ca:	eb d5                	jmp    57a1 <version_etc+0xa1>
57cc:	48 89 d8             	mov    rax,rbx
57cf:	48 83 c3 08          	add    rbx,0x8
57d3:	eb b1                	jmp    5786 <version_etc+0x86>
57d5:	90                   	nop
57d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
57dd:	00 00 00

00000000000057e0 <emit_bug_reporting_address>:
57e0:	53                   	push   rbx
57e1:	48 8d 35 5a 27 00 00 	lea    rsi,[rip+0x275a]        # 7f42 <quoting_style_vals+0x82>
57e8:	ba 05 00 00 00       	mov    edx,0x5
57ed:	31 ff                	xor    edi,edi
57ef:	e8 ac c5 ff ff       	call   1da0 <dcgettext@plt>
57f4:	48 8d 15 5c 27 00 00 	lea    rdx,[rip+0x275c]        # 7f57 <quoting_style_vals+0x97>
57fb:	48 89 c6             	mov    rsi,rax
57fe:	bf 01 00 00 00       	mov    edi,0x1
5803:	31 c0                	xor    eax,eax
5805:	e8 46 c7 ff ff       	call   1f50 <__printf_chk@plt>
580a:	48 8d 35 5c 27 00 00 	lea    rsi,[rip+0x275c]        # 7f6d <quoting_style_vals+0xad>
5811:	ba 05 00 00 00       	mov    edx,0x5
5816:	31 ff                	xor    edi,edi
5818:	e8 83 c5 ff ff       	call   1da0 <dcgettext@plt>
581d:	48 8d 0d 2c 0f 00 00 	lea    rcx,[rip+0xf2c]        # 6750 <_IO_stdin_used+0x5b0>
5824:	48 8d 15 4a 0a 00 00 	lea    rdx,[rip+0xa4a]        # 6275 <_IO_stdin_used+0xd5>
582b:	48 89 c6             	mov    rsi,rax
582e:	bf 01 00 00 00       	mov    edi,0x1
5833:	31 c0                	xor    eax,eax
5835:	e8 16 c7 ff ff       	call   1f50 <__printf_chk@plt>
583a:	48 8b 1d 67 48 20 00 	mov    rbx,QWORD PTR [rip+0x204867]        # 20a0a8 <stdout@@GLIBC_2.2.5>
5841:	48 8d 35 58 29 00 00 	lea    rsi,[rip+0x2958]        # 81a0 <quoting_style_vals+0x2e0>
5848:	31 ff                	xor    edi,edi
584a:	ba 05 00 00 00       	mov    edx,0x5
584f:	e8 4c c5 ff ff       	call   1da0 <dcgettext@plt>
5854:	48 89 de             	mov    rsi,rbx
5857:	48 89 c7             	mov    rdi,rax
585a:	5b                   	pop    rbx
585b:	e9 30 c6 ff ff       	jmp    1e90 <fputs_unlocked@plt>

0000000000005860 <xmalloc>:
5860:	53                   	push   rbx
5861:	48 89 fb             	mov    rbx,rdi
5864:	e8 9f c7 ff ff       	call   2008 <malloc@plt>
5869:	48 85 c0             	test   rax,rax
586c:	75 05                	jne    5873 <xmalloc+0x13>
586e:	48 85 db             	test   rbx,rbx
5871:	75 02                	jne    5875 <xmalloc+0x15>
5873:	5b                   	pop    rbx
5874:	c3                   	ret
5875:	e8 36 02 00 00       	call   5ab0 <xalloc_die>
587a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005880 <xnmalloc>:
5880:	48 89 f8             	mov    rax,rdi
5883:	48 f7 e6             	mul    rsi
5886:	48 89 c7             	mov    rdi,rax
5889:	0f 90 c0             	seto   al
588c:	48 85 ff             	test   rdi,rdi
588f:	78 0a                	js     589b <xnmalloc+0x1b>
5891:	0f b6 c0             	movzx  eax,al
5894:	48 85 c0             	test   rax,rax
5897:	75 02                	jne    589b <xnmalloc+0x1b>
5899:	eb c5                	jmp    5860 <xmalloc>
589b:	48 83 ec 08          	sub    rsp,0x8
589f:	e8 0c 02 00 00       	call   5ab0 <xalloc_die>
58a4:	66 90                	xchg   ax,ax
58a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
58ad:	00 00 00

00000000000058b0 <xcharalloc>:
58b0:	eb ae                	jmp    5860 <xmalloc>
58b2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
58b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
58bd:	00 00 00

00000000000058c0 <xrealloc>:
58c0:	48 85 f6             	test   rsi,rsi
58c3:	53                   	push   rbx
58c4:	48 89 f3             	mov    rbx,rsi
58c7:	75 05                	jne    58ce <xrealloc+0xe>
58c9:	48 85 ff             	test   rdi,rdi
58cc:	75 1a                	jne    58e8 <xrealloc+0x28>
58ce:	48 89 de             	mov    rsi,rbx
58d1:	e8 5a c6 ff ff       	call   1f30 <realloc@plt>
58d6:	48 85 c0             	test   rax,rax
58d9:	75 05                	jne    58e0 <xrealloc+0x20>
58db:	48 85 db             	test   rbx,rbx
58de:	75 11                	jne    58f1 <xrealloc+0x31>
58e0:	5b                   	pop    rbx
58e1:	c3                   	ret
58e2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
58e8:	e8 13 c7 ff ff       	call   2000 <free@plt>
58ed:	31 c0                	xor    eax,eax
58ef:	5b                   	pop    rbx
58f0:	c3                   	ret
58f1:	e8 ba 01 00 00       	call   5ab0 <xalloc_die>
58f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
58fd:	00 00 00

0000000000005900 <xnrealloc>:
5900:	48 89 f0             	mov    rax,rsi
5903:	48 f7 e2             	mul    rdx
5906:	48 89 c6             	mov    rsi,rax
5909:	0f 90 c0             	seto   al
590c:	48 85 f6             	test   rsi,rsi
590f:	78 0a                	js     591b <xnrealloc+0x1b>
5911:	0f b6 c0             	movzx  eax,al
5914:	48 85 c0             	test   rax,rax
5917:	75 02                	jne    591b <xnrealloc+0x1b>
5919:	eb a5                	jmp    58c0 <xrealloc>
591b:	48 83 ec 08          	sub    rsp,0x8
591f:	e8 8c 01 00 00       	call   5ab0 <xalloc_die>
5924:	66 90                	xchg   ax,ax
5926:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
592d:	00 00 00

0000000000005930 <x2nrealloc>:
5930:	48 85 ff             	test   rdi,rdi
5933:	49 89 d1             	mov    r9,rdx
5936:	48 8b 0e             	mov    rcx,QWORD PTR [rsi]
5939:	74 35                	je     5970 <x2nrealloc+0x40>
593b:	31 d2                	xor    edx,edx
593d:	48 b8 54 55 55 55 55 	movabs rax,0x5555555555555554
5944:	55 55 55
5947:	49 f7 f1             	div    r9
594a:	48 39 c8             	cmp    rax,rcx
594d:	76 3c                	jbe    598b <x2nrealloc+0x5b>
594f:	48 89 c8             	mov    rax,rcx
5952:	48 d1 e8             	shr    rax,1
5955:	48 8d 4c 08 01       	lea    rcx,[rax+rcx*1+0x1]
595a:	48 89 0e             	mov    QWORD PTR [rsi],rcx
595d:	49 0f af c9          	imul   rcx,r9
5961:	48 89 ce             	mov    rsi,rcx
5964:	e9 57 ff ff ff       	jmp    58c0 <xrealloc>
5969:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
5970:	48 85 c9             	test   rcx,rcx
5973:	74 23                	je     5998 <x2nrealloc+0x68>
5975:	48 89 c8             	mov    rax,rcx
5978:	49 f7 e1             	mul    r9
597b:	0f 90 c2             	seto   dl
597e:	48 85 c0             	test   rax,rax
5981:	0f b6 d2             	movzx  edx,dl
5984:	78 05                	js     598b <x2nrealloc+0x5b>
5986:	48 85 d2             	test   rdx,rdx
5989:	74 cf                	je     595a <x2nrealloc+0x2a>
598b:	48 83 ec 08          	sub    rsp,0x8
598f:	e8 1c 01 00 00       	call   5ab0 <xalloc_die>
5994:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
5998:	31 d2                	xor    edx,edx
599a:	b8 80 00 00 00       	mov    eax,0x80
599f:	45 31 c0             	xor    r8d,r8d
59a2:	49 f7 f1             	div    r9
59a5:	48 85 c0             	test   rax,rax
59a8:	41 0f 94 c0          	sete   r8b
59ac:	49 8d 0c 00          	lea    rcx,[r8+rax*1]
59b0:	eb c3                	jmp    5975 <x2nrealloc+0x45>
59b2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
59b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
59bd:	00 00 00

00000000000059c0 <x2realloc>:
59c0:	48 85 ff             	test   rdi,rdi
59c3:	48 8b 06             	mov    rax,QWORD PTR [rsi]
59c6:	74 28                	je     59f0 <x2realloc+0x30>
59c8:	48 ba 53 55 55 55 55 	movabs rdx,0x5555555555555553
59cf:	55 55 55
59d2:	48 39 d0             	cmp    rax,rdx
59d5:	77 2a                	ja     5a01 <x2realloc+0x41>
59d7:	48 89 c2             	mov    rdx,rax
59da:	48 d1 ea             	shr    rdx,1
59dd:	48 8d 44 02 01       	lea    rax,[rdx+rax*1+0x1]
59e2:	48 89 06             	mov    QWORD PTR [rsi],rax
59e5:	48 89 c6             	mov    rsi,rax
59e8:	e9 d3 fe ff ff       	jmp    58c0 <xrealloc>
59ed:	0f 1f 00             	nop    DWORD PTR [rax]
59f0:	48 85 c0             	test   rax,rax
59f3:	ba 80 00 00 00       	mov    edx,0x80
59f8:	48 0f 44 c2          	cmove  rax,rdx
59fc:	48 85 c0             	test   rax,rax
59ff:	79 e1                	jns    59e2 <x2realloc+0x22>
5a01:	48 83 ec 08          	sub    rsp,0x8
5a05:	e8 a6 00 00 00       	call   5ab0 <xalloc_die>
5a0a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005a10 <xzalloc>:
5a10:	53                   	push   rbx
5a11:	48 89 fb             	mov    rbx,rdi
5a14:	e8 47 fe ff ff       	call   5860 <xmalloc>
5a19:	48 89 da             	mov    rdx,rbx
5a1c:	31 f6                	xor    esi,esi
5a1e:	48 89 c7             	mov    rdi,rax
5a21:	5b                   	pop    rbx
5a22:	e9 19 c4 ff ff       	jmp    1e40 <memset@plt>
5a27:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
5a2e:	00 00

0000000000005a30 <xcalloc>:
5a30:	48 89 f8             	mov    rax,rdi
5a33:	48 83 ec 08          	sub    rsp,0x8
5a37:	48 f7 e6             	mul    rsi
5a3a:	0f 90 c2             	seto   dl
5a3d:	48 85 c0             	test   rax,rax
5a40:	78 17                	js     5a59 <xcalloc+0x29>
5a42:	0f b6 d2             	movzx  edx,dl
5a45:	48 85 d2             	test   rdx,rdx
5a48:	75 0f                	jne    5a59 <xcalloc+0x29>
5a4a:	e8 51 c4 ff ff       	call   1ea0 <calloc@plt>
5a4f:	48 85 c0             	test   rax,rax
5a52:	74 05                	je     5a59 <xcalloc+0x29>
5a54:	48 83 c4 08          	add    rsp,0x8
5a58:	c3                   	ret
5a59:	e8 52 00 00 00       	call   5ab0 <xalloc_die>
5a5e:	66 90                	xchg   ax,ax

0000000000005a60 <xmemdup>:
5a60:	55                   	push   rbp
5a61:	53                   	push   rbx
5a62:	48 89 fd             	mov    rbp,rdi
5a65:	48 89 f7             	mov    rdi,rsi
5a68:	48 89 f3             	mov    rbx,rsi
5a6b:	48 83 ec 08          	sub    rsp,0x8
5a6f:	e8 ec fd ff ff       	call   5860 <xmalloc>
5a74:	48 83 c4 08          	add    rsp,0x8
5a78:	48 89 da             	mov    rdx,rbx
5a7b:	48 89 ee             	mov    rsi,rbp
5a7e:	5b                   	pop    rbx
5a7f:	5d                   	pop    rbp
5a80:	48 89 c7             	mov    rdi,rax
5a83:	e9 48 c4 ff ff       	jmp    1ed0 <memcpy@plt>
5a88:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
5a8f:	00

0000000000005a90 <xstrdup>:
5a90:	53                   	push   rbx
5a91:	48 89 fb             	mov    rbx,rdi
5a94:	e8 27 c3 ff ff       	call   1dc0 <strlen@plt>
5a99:	48 89 df             	mov    rdi,rbx
5a9c:	48 8d 70 01          	lea    rsi,[rax+0x1]
5aa0:	5b                   	pop    rbx
5aa1:	eb bd                	jmp    5a60 <xmemdup>
5aa3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5aaa:	00 00 00
5aad:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000005ab0 <xalloc_die>:
5ab0:	48 8d 35 98 27 00 00 	lea    rsi,[rip+0x2798]        # 824f <version_etc_copyright+0x2f>
5ab7:	48 83 ec 08          	sub    rsp,0x8
5abb:	ba 05 00 00 00       	mov    edx,0x5
5ac0:	31 ff                	xor    edi,edi
5ac2:	e8 d9 c2 ff ff       	call   1da0 <dcgettext@plt>
5ac7:	8b 3d 4b 45 20 00    	mov    edi,DWORD PTR [rip+0x20454b]        # 20a018 <exit_failure>
5acd:	48 8d 15 e5 1e 00 00 	lea    rdx,[rip+0x1ee5]        # 79b9 <G_line+0x10d9>
5ad4:	48 89 c1             	mov    rcx,rax
5ad7:	31 f6                	xor    esi,esi
5ad9:	31 c0                	xor    eax,eax
5adb:	e8 80 c4 ff ff       	call   1f60 <error@plt>
5ae0:	e8 2b c2 ff ff       	call   1d10 <abort@plt>
5ae5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5aec:	00 00 00
5aef:	90                   	nop

0000000000005af0 <xstrndup>:
5af0:	48 83 ec 08          	sub    rsp,0x8
5af4:	e8 77 c3 ff ff       	call   1e70 <strndup@plt>
5af9:	48 85 c0             	test   rax,rax
5afc:	74 05                	je     5b03 <xstrndup+0x13>
5afe:	48 83 c4 08          	add    rsp,0x8
5b02:	c3                   	ret
5b03:	e8 a8 ff ff ff       	call   5ab0 <xalloc_die>
5b08:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
5b0f:	00

0000000000005b10 <rpl_fclose>:
5b10:	41 54                	push   r12
5b12:	55                   	push   rbp
5b13:	53                   	push   rbx
5b14:	48 89 fb             	mov    rbx,rdi
5b17:	e8 c4 c3 ff ff       	call   1ee0 <fileno@plt>
5b1c:	85 c0                	test   eax,eax
5b1e:	48 89 df             	mov    rdi,rbx
5b21:	78 54                	js     5b77 <rpl_fclose+0x67>
5b23:	e8 e8 c3 ff ff       	call   1f10 <__freading@plt>
5b28:	85 c0                	test   eax,eax
5b2a:	75 2c                	jne    5b58 <rpl_fclose+0x48>
5b2c:	48 89 df             	mov    rdi,rbx
5b2f:	e8 5c 00 00 00       	call   5b90 <rpl_fflush>
5b34:	85 c0                	test   eax,eax
5b36:	74 3c                	je     5b74 <rpl_fclose+0x64>
5b38:	e8 e3 c1 ff ff       	call   1d20 <__errno_location@plt>
5b3d:	44 8b 20             	mov    r12d,DWORD PTR [rax]
5b40:	48 89 df             	mov    rdi,rbx
5b43:	48 89 c5             	mov    rbp,rax
5b46:	e8 35 c2 ff ff       	call   1d80 <fclose@plt>
5b4b:	45 85 e4             	test   r12d,r12d
5b4e:	75 30                	jne    5b80 <rpl_fclose+0x70>
5b50:	5b                   	pop    rbx
5b51:	5d                   	pop    rbp
5b52:	41 5c                	pop    r12
5b54:	c3                   	ret
5b55:	0f 1f 00             	nop    DWORD PTR [rax]
5b58:	48 89 df             	mov    rdi,rbx
5b5b:	e8 80 c3 ff ff       	call   1ee0 <fileno@plt>
5b60:	31 f6                	xor    esi,esi
5b62:	ba 01 00 00 00       	mov    edx,0x1
5b67:	89 c7                	mov    edi,eax
5b69:	e8 b2 c2 ff ff       	call   1e20 <lseek@plt>
5b6e:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
5b72:	75 b8                	jne    5b2c <rpl_fclose+0x1c>
5b74:	48 89 df             	mov    rdi,rbx
5b77:	5b                   	pop    rbx
5b78:	5d                   	pop    rbp
5b79:	41 5c                	pop    r12
5b7b:	e9 00 c2 ff ff       	jmp    1d80 <fclose@plt>
5b80:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
5b84:	b8 ff ff ff ff       	mov    eax,0xffffffff
5b89:	eb c5                	jmp    5b50 <rpl_fclose+0x40>
5b8b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005b90 <rpl_fflush>:
5b90:	48 85 ff             	test   rdi,rdi
5b93:	53                   	push   rbx
5b94:	48 89 fb             	mov    rbx,rdi
5b97:	74 11                	je     5baa <rpl_fflush+0x1a>
5b99:	e8 72 c3 ff ff       	call   1f10 <__freading@plt>
5b9e:	85 c0                	test   eax,eax
5ba0:	74 08                	je     5baa <rpl_fflush+0x1a>
5ba2:	f7 03 00 01 00 00    	test   DWORD PTR [rbx],0x100
5ba8:	75 0e                	jne    5bb8 <rpl_fflush+0x28>
5baa:	48 89 df             	mov    rdi,rbx
5bad:	5b                   	pop    rbx
5bae:	e9 3d c3 ff ff       	jmp    1ef0 <fflush@plt>
5bb3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5bb8:	48 89 df             	mov    rdi,rbx
5bbb:	ba 01 00 00 00       	mov    edx,0x1
5bc0:	31 f6                	xor    esi,esi
5bc2:	e8 09 00 00 00       	call   5bd0 <rpl_fseeko>
5bc7:	48 89 df             	mov    rdi,rbx
5bca:	5b                   	pop    rbx
5bcb:	e9 20 c3 ff ff       	jmp    1ef0 <fflush@plt>

0000000000005bd0 <rpl_fseeko>:
5bd0:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
5bd4:	48 39 47 10          	cmp    QWORD PTR [rdi+0x10],rax
5bd8:	74 06                	je     5be0 <rpl_fseeko+0x10>
5bda:	e9 a1 c3 ff ff       	jmp    1f80 <fseeko@plt>
5bdf:	90                   	nop
5be0:	48 8b 47 20          	mov    rax,QWORD PTR [rdi+0x20]
5be4:	48 39 47 28          	cmp    QWORD PTR [rdi+0x28],rax
5be8:	75 f0                	jne    5bda <rpl_fseeko+0xa>
5bea:	48 83 7f 48 00       	cmp    QWORD PTR [rdi+0x48],0x0
5bef:	75 e9                	jne    5bda <rpl_fseeko+0xa>
5bf1:	41 54                	push   r12
5bf3:	55                   	push   rbp
5bf4:	41 89 d4             	mov    r12d,edx
5bf7:	53                   	push   rbx
5bf8:	48 89 f5             	mov    rbp,rsi
5bfb:	48 89 fb             	mov    rbx,rdi
5bfe:	e8 dd c2 ff ff       	call   1ee0 <fileno@plt>
5c03:	44 89 e2             	mov    edx,r12d
5c06:	48 89 ee             	mov    rsi,rbp
5c09:	89 c7                	mov    edi,eax
5c0b:	e8 10 c2 ff ff       	call   1e20 <lseek@plt>
5c10:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
5c14:	74 0c                	je     5c22 <rpl_fseeko+0x52>
5c16:	83 23 ef             	and    DWORD PTR [rbx],0xffffffef
5c19:	48 89 83 90 00 00 00 	mov    QWORD PTR [rbx+0x90],rax
5c20:	31 c0                	xor    eax,eax
5c22:	5b                   	pop    rbx
5c23:	5d                   	pop    rbp
5c24:	41 5c                	pop    r12
5c26:	c3                   	ret
5c27:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
5c2e:	00 00

0000000000005c30 <rpl_mbrtowc>:
5c30:	41 55                	push   r13
5c32:	41 54                	push   r12
5c34:	49 89 f5             	mov    r13,rsi
5c37:	55                   	push   rbp
5c38:	53                   	push   rbx
5c39:	48 89 fb             	mov    rbx,rdi
5c3c:	49 89 d4             	mov    r12,rdx
5c3f:	48 83 ec 18          	sub    rsp,0x18
5c43:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
5c4a:	00 00
5c4c:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
5c51:	31 c0                	xor    eax,eax
5c53:	48 8d 44 24 04       	lea    rax,[rsp+0x4]
5c58:	48 85 ff             	test   rdi,rdi
5c5b:	48 0f 44 d8          	cmove  rbx,rax
5c5f:	48 89 df             	mov    rdi,rbx
5c62:	e8 89 c1 ff ff       	call   1df0 <mbrtowc@plt>
5c67:	48 83 f8 fd          	cmp    rax,0xfffffffffffffffd
5c6b:	48 89 c5             	mov    rbp,rax
5c6e:	76 20                	jbe    5c90 <rpl_mbrtowc+0x60>
5c70:	4d 85 e4             	test   r12,r12
5c73:	74 1b                	je     5c90 <rpl_mbrtowc+0x60>
5c75:	31 ff                	xor    edi,edi
5c77:	e8 e4 03 00 00       	call   6060 <hard_locale>
5c7c:	84 c0                	test   al,al
5c7e:	75 10                	jne    5c90 <rpl_mbrtowc+0x60>
5c80:	41 0f b6 45 00       	movzx  eax,BYTE PTR [r13+0x0]
5c85:	bd 01 00 00 00       	mov    ebp,0x1
5c8a:	89 03                	mov    DWORD PTR [rbx],eax
5c8c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
5c90:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
5c95:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
5c9c:	00 00
5c9e:	48 89 e8             	mov    rax,rbp
5ca1:	75 0b                	jne    5cae <rpl_mbrtowc+0x7e>
5ca3:	48 83 c4 18          	add    rsp,0x18
5ca7:	5b                   	pop    rbx
5ca8:	5d                   	pop    rbp
5ca9:	41 5c                	pop    r12
5cab:	41 5d                	pop    r13
5cad:	c3                   	ret
5cae:	e8 1d c1 ff ff       	call   1dd0 <__stack_chk_fail@plt>
5cb3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5cba:	00 00 00
5cbd:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000005cc0 <print_and_abort>:
5cc0:	48 8d 35 88 25 00 00 	lea    rsi,[rip+0x2588]        # 824f <version_etc_copyright+0x2f>
5cc7:	48 83 ec 08          	sub    rsp,0x8
5ccb:	ba 05 00 00 00       	mov    edx,0x5
5cd0:	31 ff                	xor    edi,edi
5cd2:	e8 c9 c0 ff ff       	call   1da0 <dcgettext@plt>
5cd7:	48 8b 3d 02 44 20 00 	mov    rdi,QWORD PTR [rip+0x204402]        # 20a0e0 <stderr@@GLIBC_2.2.5>
5cde:	48 8d 15 0b 22 00 00 	lea    rdx,[rip+0x220b]        # 7ef0 <quoting_style_vals+0x30>
5ce5:	48 89 c1             	mov    rcx,rax
5ce8:	be 01 00 00 00       	mov    esi,0x1
5ced:	31 c0                	xor    eax,eax
5cef:	e8 cc c2 ff ff       	call   1fc0 <__fprintf_chk@plt>
5cf4:	8b 3d 1e 43 20 00    	mov    edi,DWORD PTR [rip+0x20431e]        # 20a018 <exit_failure>
5cfa:	e8 a1 c2 ff ff       	call   1fa0 <exit@plt>
5cff:	90                   	nop

0000000000005d00 <call_chunkfun>:
5d00:	f6 47 50 01          	test   BYTE PTR [rdi+0x50],0x1
5d04:	48 8b 47 38          	mov    rax,QWORD PTR [rdi+0x38]
5d08:	75 06                	jne    5d10 <call_chunkfun+0x10>
5d0a:	48 89 f7             	mov    rdi,rsi
5d0d:	ff e0                	jmp    rax
5d0f:	90                   	nop
5d10:	48 8b 7f 48          	mov    rdi,QWORD PTR [rdi+0x48]
5d14:	ff e0                	jmp    rax
5d16:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5d1d:	00 00 00

0000000000005d20 <call_freefun>:
5d20:	f6 47 50 01          	test   BYTE PTR [rdi+0x50],0x1
5d24:	48 8b 47 40          	mov    rax,QWORD PTR [rdi+0x40]
5d28:	75 06                	jne    5d30 <call_freefun+0x10>
5d2a:	48 89 f7             	mov    rdi,rsi
5d2d:	ff e0                	jmp    rax
5d2f:	90                   	nop
5d30:	48 8b 7f 48          	mov    rdi,QWORD PTR [rdi+0x48]
5d34:	ff e0                	jmp    rax
5d36:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5d3d:	00 00 00

0000000000005d40 <_obstack_begin_worker>:
5d40:	48 85 d2             	test   rdx,rdx
5d43:	41 54                	push   r12
5d45:	55                   	push   rbp
5d46:	53                   	push   rbx
5d47:	48 89 fb             	mov    rbx,rdi
5d4a:	74 64                	je     5db0 <_obstack_begin_worker+0x70>
5d4c:	4c 8d 62 ff          	lea    r12,[rdx-0x1]
5d50:	48 89 d5             	mov    rbp,rdx
5d53:	48 85 f6             	test   rsi,rsi
5d56:	b8 e0 0f 00 00       	mov    eax,0xfe0
5d5b:	4c 89 63 30          	mov    QWORD PTR [rbx+0x30],r12
5d5f:	48 0f 44 f0          	cmove  rsi,rax
5d63:	48 89 df             	mov    rdi,rbx
5d66:	48 89 33             	mov    QWORD PTR [rbx],rsi
5d69:	e8 92 ff ff ff       	call   5d00 <call_chunkfun>
5d6e:	48 85 c0             	test   rax,rax
5d71:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
5d75:	74 46                	je     5dbd <_obstack_begin_worker+0x7d>
5d77:	4a 8d 54 20 10       	lea    rdx,[rax+r12*1+0x10]
5d7c:	48 f7 dd             	neg    rbp
5d7f:	48 21 d5             	and    rbp,rdx
5d82:	48 8b 13             	mov    rdx,QWORD PTR [rbx]
5d85:	48 89 6b 10          	mov    QWORD PTR [rbx+0x10],rbp
5d89:	48 89 6b 18          	mov    QWORD PTR [rbx+0x18],rbp
5d8d:	48 01 c2             	add    rdx,rax
5d90:	48 89 10             	mov    QWORD PTR [rax],rdx
5d93:	48 89 53 20          	mov    QWORD PTR [rbx+0x20],rdx
5d97:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
5d9e:	00
5d9f:	b8 01 00 00 00       	mov    eax,0x1
5da4:	80 63 50 f9          	and    BYTE PTR [rbx+0x50],0xf9
5da8:	5b                   	pop    rbx
5da9:	5d                   	pop    rbp
5daa:	41 5c                	pop    r12
5dac:	c3                   	ret
5dad:	0f 1f 00             	nop    DWORD PTR [rax]
5db0:	41 bc 0f 00 00 00    	mov    r12d,0xf
5db6:	bd 10 00 00 00       	mov    ebp,0x10
5dbb:	eb 96                	jmp    5d53 <_obstack_begin_worker+0x13>
5dbd:	ff 15 bd 42 20 00    	call   QWORD PTR [rip+0x2042bd]        # 20a080 <obstack_alloc_failed_handler>
5dc3:	0f 1f 00             	nop    DWORD PTR [rax]
5dc6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5dcd:	00 00 00

0000000000005dd0 <_obstack_begin>:
5dd0:	80 67 50 fe          	and    BYTE PTR [rdi+0x50],0xfe
5dd4:	48 89 4f 38          	mov    QWORD PTR [rdi+0x38],rcx
5dd8:	4c 89 47 40          	mov    QWORD PTR [rdi+0x40],r8
5ddc:	e9 5f ff ff ff       	jmp    5d40 <_obstack_begin_worker>
5de1:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5de6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5ded:	00 00 00

0000000000005df0 <_obstack_begin_1>:
5df0:	80 4f 50 01          	or     BYTE PTR [rdi+0x50],0x1
5df4:	48 89 4f 38          	mov    QWORD PTR [rdi+0x38],rcx
5df8:	4c 89 47 40          	mov    QWORD PTR [rdi+0x40],r8
5dfc:	4c 89 4f 48          	mov    QWORD PTR [rdi+0x48],r9
5e00:	e9 3b ff ff ff       	jmp    5d40 <_obstack_begin_worker>
5e05:	90                   	nop
5e06:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5e0d:	00 00 00

0000000000005e10 <_obstack_newchunk>:
5e10:	41 56                	push   r14
5e12:	41 55                	push   r13
5e14:	31 d2                	xor    edx,edx
5e16:	41 54                	push   r12
5e18:	55                   	push   rbp
5e19:	53                   	push   rbx
5e1a:	48 8b 5f 18          	mov    rbx,QWORD PTR [rdi+0x18]
5e1e:	48 2b 5f 10          	sub    rbx,QWORD PTR [rdi+0x10]
5e22:	48 8b 6f 08          	mov    rbp,QWORD PTR [rdi+0x8]
5e26:	48 01 de             	add    rsi,rbx
5e29:	48 89 d9             	mov    rcx,rbx
5e2c:	0f 92 c2             	setb   dl
5e2f:	48 03 77 30          	add    rsi,QWORD PTR [rdi+0x30]
5e33:	0f 92 c0             	setb   al
5e36:	48 c1 e9 03          	shr    rcx,0x3
5e3a:	48 39 37             	cmp    QWORD PTR [rdi],rsi
5e3d:	4c 8d 64 0e 64       	lea    r12,[rsi+rcx*1+0x64]
5e42:	48 0f 43 37          	cmovae rsi,QWORD PTR [rdi]
5e46:	4c 39 e6             	cmp    rsi,r12
5e49:	4c 0f 43 e6          	cmovae r12,rsi
5e4d:	48 85 d2             	test   rdx,rdx
5e50:	0f 85 9f 00 00 00    	jne    5ef5 <_obstack_newchunk+0xe5>
5e56:	0f b6 c0             	movzx  eax,al
5e59:	48 85 c0             	test   rax,rax
5e5c:	0f 85 93 00 00 00    	jne    5ef5 <_obstack_newchunk+0xe5>
5e62:	4c 89 e6             	mov    rsi,r12
5e65:	49 89 fd             	mov    r13,rdi
5e68:	e8 93 fe ff ff       	call   5d00 <call_chunkfun>
5e6d:	48 85 c0             	test   rax,rax
5e70:	49 89 c6             	mov    r14,rax
5e73:	0f 84 7c 00 00 00    	je     5ef5 <_obstack_newchunk+0xe5>
5e79:	4a 8d 34 20          	lea    rsi,[rax+r12*1]
5e7d:	49 89 45 08          	mov    QWORD PTR [r13+0x8],rax
5e81:	48 89 68 08          	mov    QWORD PTR [rax+0x8],rbp
5e85:	48 89 da             	mov    rdx,rbx
5e88:	49 89 75 20          	mov    QWORD PTR [r13+0x20],rsi
5e8c:	48 89 30             	mov    QWORD PTR [rax],rsi
5e8f:	49 8b 45 30          	mov    rax,QWORD PTR [r13+0x30]
5e93:	49 8b 75 10          	mov    rsi,QWORD PTR [r13+0x10]
5e97:	4d 8d 64 06 10       	lea    r12,[r14+rax*1+0x10]
5e9c:	48 f7 d0             	not    rax
5e9f:	49 21 c4             	and    r12,rax
5ea2:	4c 89 e7             	mov    rdi,r12
5ea5:	e8 26 c0 ff ff       	call   1ed0 <memcpy@plt>
5eaa:	41 f6 45 50 02       	test   BYTE PTR [r13+0x50],0x2
5eaf:	75 15                	jne    5ec6 <_obstack_newchunk+0xb6>
5eb1:	49 8b 45 30          	mov    rax,QWORD PTR [r13+0x30]
5eb5:	48 8d 54 05 10       	lea    rdx,[rbp+rax*1+0x10]
5eba:	48 f7 d0             	not    rax
5ebd:	48 21 d0             	and    rax,rdx
5ec0:	49 39 45 10          	cmp    QWORD PTR [r13+0x10],rax
5ec4:	74 1a                	je     5ee0 <_obstack_newchunk+0xd0>
5ec6:	41 80 65 50 fd       	and    BYTE PTR [r13+0x50],0xfd
5ecb:	4c 01 e3             	add    rbx,r12
5ece:	4d 89 65 10          	mov    QWORD PTR [r13+0x10],r12
5ed2:	49 89 5d 18          	mov    QWORD PTR [r13+0x18],rbx
5ed6:	5b                   	pop    rbx
5ed7:	5d                   	pop    rbp
5ed8:	41 5c                	pop    r12
5eda:	41 5d                	pop    r13
5edc:	41 5e                	pop    r14
5ede:	c3                   	ret
5edf:	90                   	nop
5ee0:	48 8b 45 08          	mov    rax,QWORD PTR [rbp+0x8]
5ee4:	48 89 ee             	mov    rsi,rbp
5ee7:	4c 89 ef             	mov    rdi,r13
5eea:	49 89 46 08          	mov    QWORD PTR [r14+0x8],rax
5eee:	e8 2d fe ff ff       	call   5d20 <call_freefun>
5ef3:	eb d1                	jmp    5ec6 <_obstack_newchunk+0xb6>
5ef5:	ff 15 85 41 20 00    	call   QWORD PTR [rip+0x204185]        # 20a080 <obstack_alloc_failed_handler>
5efb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005f00 <_obstack_allocated_p>:
5f00:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
5f04:	48 85 c0             	test   rax,rax
5f07:	74 2d                	je     5f36 <_obstack_allocated_p+0x36>
5f09:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
5f10:	48 39 c6             	cmp    rsi,rax
5f13:	76 05                	jbe    5f1a <_obstack_allocated_p+0x1a>
5f15:	48 39 30             	cmp    QWORD PTR [rax],rsi
5f18:	73 16                	jae    5f30 <_obstack_allocated_p+0x30>
5f1a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
5f1e:	48 85 c0             	test   rax,rax
5f21:	75 ed                	jne    5f10 <_obstack_allocated_p+0x10>
5f23:	31 c0                	xor    eax,eax
5f25:	c3                   	ret
5f26:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5f2d:	00 00 00
5f30:	b8 01 00 00 00       	mov    eax,0x1
5f35:	c3                   	ret
5f36:	f3 c3                	repz ret
5f38:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
5f3f:	00

0000000000005f40 <_obstack_free>:
5f40:	41 54                	push   r12
5f42:	55                   	push   rbp
5f43:	48 89 f5             	mov    rbp,rsi
5f46:	53                   	push   rbx
5f47:	48 8b 77 08          	mov    rsi,QWORD PTR [rdi+0x8]
5f4b:	48 89 fb             	mov    rbx,rdi
5f4e:	48 85 f6             	test   rsi,rsi
5f51:	74 2a                	je     5f7d <_obstack_free+0x3d>
5f53:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5f58:	48 39 ee             	cmp    rsi,rbp
5f5b:	73 08                	jae    5f65 <_obstack_free+0x25>
5f5d:	48 8b 06             	mov    rax,QWORD PTR [rsi]
5f60:	48 39 e8             	cmp    rax,rbp
5f63:	73 2b                	jae    5f90 <_obstack_free+0x50>
5f65:	4c 8b 66 08          	mov    r12,QWORD PTR [rsi+0x8]
5f69:	48 89 df             	mov    rdi,rbx
5f6c:	e8 af fd ff ff       	call   5d20 <call_freefun>
5f71:	80 4b 50 02          	or     BYTE PTR [rbx+0x50],0x2
5f75:	4d 85 e4             	test   r12,r12
5f78:	4c 89 e6             	mov    rsi,r12
5f7b:	75 db                	jne    5f58 <_obstack_free+0x18>
5f7d:	48 85 ed             	test   rbp,rbp
5f80:	75 23                	jne    5fa5 <_obstack_free+0x65>
5f82:	5b                   	pop    rbx
5f83:	5d                   	pop    rbp
5f84:	41 5c                	pop    r12
5f86:	c3                   	ret
5f87:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
5f8e:	00 00
5f90:	48 89 6b 18          	mov    QWORD PTR [rbx+0x18],rbp
5f94:	48 89 6b 10          	mov    QWORD PTR [rbx+0x10],rbp
5f98:	48 89 43 20          	mov    QWORD PTR [rbx+0x20],rax
5f9c:	48 89 73 08          	mov    QWORD PTR [rbx+0x8],rsi
5fa0:	5b                   	pop    rbx
5fa1:	5d                   	pop    rbp
5fa2:	41 5c                	pop    r12
5fa4:	c3                   	ret
5fa5:	e8 66 bd ff ff       	call   1d10 <abort@plt>
5faa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005fb0 <_obstack_memory_used>:
5fb0:	48 8b 57 08          	mov    rdx,QWORD PTR [rdi+0x8]
5fb4:	31 c0                	xor    eax,eax
5fb6:	48 85 d2             	test   rdx,rdx
5fb9:	74 1d                	je     5fd8 <_obstack_memory_used+0x28>
5fbb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5fc0:	48 8b 0a             	mov    rcx,QWORD PTR [rdx]
5fc3:	48 29 d1             	sub    rcx,rdx
5fc6:	48 8b 52 08          	mov    rdx,QWORD PTR [rdx+0x8]
5fca:	48 01 c8             	add    rax,rcx
5fcd:	48 85 d2             	test   rdx,rdx
5fd0:	75 ee                	jne    5fc0 <_obstack_memory_used+0x10>
5fd2:	f3 c3                	repz ret
5fd4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
5fd8:	f3 c3                	repz ret
5fda:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005fe0 <close_stream>:
5fe0:	41 54                	push   r12
5fe2:	55                   	push   rbp
5fe3:	48 89 fd             	mov    rbp,rdi
5fe6:	53                   	push   rbx
5fe7:	e8 64 bd ff ff       	call   1d50 <__fpending@plt>
5fec:	8b 5d 00             	mov    ebx,DWORD PTR [rbp+0x0]
5fef:	48 89 ef             	mov    rdi,rbp
5ff2:	49 89 c4             	mov    r12,rax
5ff5:	e8 16 fb ff ff       	call   5b10 <rpl_fclose>
5ffa:	83 e3 20             	and    ebx,0x20
5ffd:	85 db                	test   ebx,ebx
5fff:	75 17                	jne    6018 <close_stream+0x38>
6001:	85 c0                	test   eax,eax
6003:	74 0a                	je     600f <close_stream+0x2f>
6005:	4d 85 e4             	test   r12,r12
6008:	b8 ff ff ff ff       	mov    eax,0xffffffff
600d:	74 39                	je     6048 <close_stream+0x68>
600f:	5b                   	pop    rbx
6010:	5d                   	pop    rbp
6011:	41 5c                	pop    r12
6013:	c3                   	ret
6014:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
6018:	85 c0                	test   eax,eax
601a:	75 1c                	jne    6038 <close_stream+0x58>
601c:	e8 ff bc ff ff       	call   1d20 <__errno_location@plt>
6021:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
6027:	b8 ff ff ff ff       	mov    eax,0xffffffff
602c:	5b                   	pop    rbx
602d:	5d                   	pop    rbp
602e:	41 5c                	pop    r12
6030:	c3                   	ret
6031:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
6038:	5b                   	pop    rbx
6039:	b8 ff ff ff ff       	mov    eax,0xffffffff
603e:	5d                   	pop    rbp
603f:	41 5c                	pop    r12
6041:	c3                   	ret
6042:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
6048:	e8 d3 bc ff ff       	call   1d20 <__errno_location@plt>
604d:	83 38 09             	cmp    DWORD PTR [rax],0x9
6050:	5b                   	pop    rbx
6051:	5d                   	pop    rbp
6052:	41 5c                	pop    r12
6054:	0f 95 c0             	setne  al
6057:	0f b6 c0             	movzx  eax,al
605a:	f7 d8                	neg    eax
605c:	c3                   	ret
605d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006060 <hard_locale>:
6060:	48 83 ec 08          	sub    rsp,0x8
6064:	31 f6                	xor    esi,esi
6066:	e8 d5 be ff ff       	call   1f40 <setlocale@plt>
606b:	48 89 c2             	mov    rdx,rax
606e:	b8 01 00 00 00       	mov    eax,0x1
6073:	48 85 d2             	test   rdx,rdx
6076:	74 1d                	je     6095 <hard_locale+0x35>
6078:	48 8d 3d 6d 03 00 00 	lea    rdi,[rip+0x36d]        # 63ec <_IO_stdin_used+0x24c>
607f:	b9 02 00 00 00       	mov    ecx,0x2
6084:	48 89 d6             	mov    rsi,rdx
6087:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
6089:	0f 97 c1             	seta   cl
608c:	80 d9 00             	sbb    cl,0x0
608f:	31 c0                	xor    eax,eax
6091:	84 c9                	test   cl,cl
6093:	75 0b                	jne    60a0 <hard_locale+0x40>
6095:	48 83 c4 08          	add    rsp,0x8
6099:	c3                   	ret
609a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
60a0:	48 8d 3d b9 21 00 00 	lea    rdi,[rip+0x21b9]        # 8260 <version_etc_copyright+0x40>
60a7:	b9 06 00 00 00       	mov    ecx,0x6
60ac:	48 89 d6             	mov    rsi,rdx
60af:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
60b1:	0f 97 c0             	seta   al
60b4:	1c 00                	sbb    al,0x0
60b6:	84 c0                	test   al,al
60b8:	0f 95 c0             	setne  al
60bb:	48 83 c4 08          	add    rsp,0x8
60bf:	c3                   	ret

00000000000060c0 <locale_charset>:
60c0:	48 83 ec 08          	sub    rsp,0x8
60c4:	bf 0e 00 00 00       	mov    edi,0xe
60c9:	e8 32 be ff ff       	call   1f00 <nl_langinfo@plt>
60ce:	48 85 c0             	test   rax,rax
60d1:	74 1d                	je     60f0 <locale_charset+0x30>
60d3:	80 38 00             	cmp    BYTE PTR [rax],0x0
60d6:	48 8d 15 89 21 00 00 	lea    rdx,[rip+0x2189]        # 8266 <version_etc_copyright+0x46>
60dd:	48 0f 44 c2          	cmove  rax,rdx
60e1:	48 83 c4 08          	add    rsp,0x8
60e5:	c3                   	ret
60e6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
60ed:	00 00 00
60f0:	48 8d 05 6f 21 00 00 	lea    rax,[rip+0x216f]        # 8266 <version_etc_copyright+0x46>
60f7:	48 83 c4 08          	add    rsp,0x8
60fb:	c3                   	ret
60fc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006100 <__libc_csu_init>:
6100:	41 57                	push   r15
6102:	41 56                	push   r14
6104:	49 89 d7             	mov    r15,rdx
6107:	41 55                	push   r13
6109:	41 54                	push   r12
610b:	4c 8d 25 3e 37 20 00 	lea    r12,[rip+0x20373e]        # 209850 <__frame_dummy_init_array_entry>
6112:	55                   	push   rbp
6113:	48 8d 2d 3e 37 20 00 	lea    rbp,[rip+0x20373e]        # 209858 <__init_array_end>
611a:	53                   	push   rbx
611b:	41 89 fd             	mov    r13d,edi
611e:	49 89 f6             	mov    r14,rsi
6121:	4c 29 e5             	sub    rbp,r12
6124:	48 83 ec 08          	sub    rsp,0x8
6128:	48 c1 fd 03          	sar    rbp,0x3
612c:	e8 9f bb ff ff       	call   1cd0 <_init>
6131:	48 85 ed             	test   rbp,rbp
6134:	74 20                	je     6156 <__libc_csu_init+0x56>
6136:	31 db                	xor    ebx,ebx
6138:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
613f:	00
6140:	4c 89 fa             	mov    rdx,r15
6143:	4c 89 f6             	mov    rsi,r14
6146:	44 89 ef             	mov    edi,r13d
6149:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
614d:	48 83 c3 01          	add    rbx,0x1
6151:	48 39 dd             	cmp    rbp,rbx
6154:	75 ea                	jne    6140 <__libc_csu_init+0x40>
6156:	48 83 c4 08          	add    rsp,0x8
615a:	5b                   	pop    rbx
615b:	5d                   	pop    rbp
615c:	41 5c                	pop    r12
615e:	41 5d                	pop    r13
6160:	41 5e                	pop    r14
6162:	41 5f                	pop    r15
6164:	c3                   	ret
6165:	90                   	nop
6166:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
616d:	00 00 00

0000000000006170 <__libc_csu_fini>:
6170:	f3 c3                	repz ret
6172:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
6179:	00 00 00
617c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006180 <atexit>:
6180:	48 8b 15 81 3e 20 00 	mov    rdx,QWORD PTR [rip+0x203e81]        # 20a008 <__dso_handle>
6187:	31 f6                	xor    esi,esi
6189:	e9 02 be ff ff       	jmp    1f90 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000006190 <_fini>:
6190:	48 83 ec 08          	sub    rsp,0x8
6194:	48 83 c4 08          	add    rsp,0x8
6198:	c3                   	ret
