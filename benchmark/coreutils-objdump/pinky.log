0x1fc0: xor ebp,ebp
0x1fc2: mov r9,rdx
0x1fc5: pop rsi
0x1fc6: mov rdx,rsp
0x1fc9: and rsp,0xfffffffffffffff0
0x1fcd: push rax
0x1fce: push rsp
0x1fcf: lea r8,[rip+0x3c4a]
0x1fd6: lea rcx,[rip+0x3bd3]
0x1fdd: lea rdi,[rip+0xfffffffffffffadc]
0x1fe4: call qword ptr [rip+0x205fee]
Execute the function: __libc_start_main

0x1fe4: jump address is 0x1ac0
0x1ac0: push r15
0x1ac2: push r14
0x1ac4: push r13
0x1ac6: push r12
0x1ac8: lea r12,[rip+0x206051]
0x1acf: push rbp
0x1ad0: push rbx
0x1ad1: mov ebp,edi
0x1ad3: mov rbx,rsi
0x1ad6: sub rsp,0x28
0x1ada: mov rdi,qword ptr [rsi]
0x1add: mov rax,qword ptr fs:0x28
0x1ae6: mov qword ptr [rsp+0x18],rax
0x1aeb: xor eax,eax
0x1aed: call 0x3170
0x1aed: jump address is 0x3170
0x3170: test rdi,rdi
0x3173: push rbx
0x3174: je 0x31ed
0x3174: jump address is 0x31ed
0x3176: mov esi,0x2f
0x317b: mov rbx,rdi
0x317e: call 0x1860
0x317e: jump address is 0x1860
0x1860: jmp qword ptr [rip+0x206642]
Execute the function: strrchr

0x1860: the return address is 0x3183
0x3183: test rax,rax
0x3186: je 0x31dd
0x3186: jump address is 0x31dd
0x3188: lea r8,[rax+0x1]
0x318c: mov rdx,r8
0x318f: sub rdx,rbx
0x3192: cmp rdx,0x6
0x3196: jle 0x31dd
0x3196: jump address is 0x31dd
Block exists: mov qword ptr [rip+0x204fa4],rbx at address 0x31dd is visited for 1 times

0x3198: lea rsi,[rax-0x6]
0x319c: lea rdi,[rip+0x31a5]
0x31a3: mov ecx,0x7
0x31a8: repz cmps byte ptr ds:[rsi],byte ptr es:[rdi]
0x31aa: seta dl
0x31ad: sbb dl,0x0
0x31b0: test dl,dl
0x31b2: jne 0x31dd
0x31b2: jump address is 0x31dd
Block exists: mov qword ptr [rip+0x204fa4],rbx at address 0x31dd is visited for 1 times

0x31b4: lea rdi,[rip+0x3195]
0x31bb: mov ecx,0x3
0x31c0: mov rsi,r8
0x31c3: mov rbx,r8
0x31c6: repz cmps byte ptr ds:[rsi],byte ptr es:[rdi]
0x31c8: seta dl
0x31cb: sbb dl,0x0
0x31ce: test dl,dl
0x31d0: jne 0x31dd
0x31d0: jump address is 0x31dd
Block exists: mov qword ptr [rip+0x204fa4],rbx at address 0x31dd is visited for 1 times

0x31d2: lea rbx,[rax+0x4]
0x31d6: mov qword ptr [rip+0x204ec3],rbx
0x31dd: mov qword ptr [rip+0x204fa4],rbx
0x31e4: mov qword ptr [rip+0x204ecd],rbx
0x31eb: pop rbx
0x31ec: ret
0x31ec: the return address is 0x1af2
0x1af2: lea rsi,[rip+0x4d88]
0x1af9: mov edi,0x6
0x1afe: call 0x1990
0x1afe: jump address is 0x1990
0x1990: jmp qword ptr [rip+0x2065aa]
Execute the function: setlocale

0x1990: the return address is 0x1b03
0x1b03: lea rsi,[rip+0x42b1]
0x1b0a: lea rdi,[rip+0x4281]
0x1b11: call 0x17b0
0x1b11: jump address is 0x17b0
0x17b0: jmp qword ptr [rip+0x20669a]
Execute the function: bindtextdomain

0x17b0: the return address is 0x1b16
0x1b16: lea rdi,[rip+0x4275]
0x1b1d: call 0x1780
0x1b1d: jump address is 0x1780
0x1780: jmp qword ptr [rip+0x2066b2]
Execute the function: textdomain

0x1780: the return address is 0x1b22
0x1b22: lea rdi,[rip+0x1497]
0x1b29: call 0x5c30
0x1b29: jump address is 0x5c30
0x5c30: mov rdx,qword ptr [rip+0x2023d1]
0x5c37: xor esi,esi
0x5c39: jmp 0x1a00
0x5c39: jump address is 0x1a00
0x1a00: jmp qword ptr [rip+0x206572]
Execute the function: __cxa_atexit

0x1a00: the return address is 0x1b2e
0x1b2e: xchg ax,ax
0x1b30: lea rdx,[rip+0x42c9]
0x1b37: xor r8d,r8d
0x1b3a: mov rcx,r12
0x1b3d: mov rsi,rbx
0x1b40: mov edi,ebp
0x1b42: call 0x1810
0x1b42: jump address is 0x1810
0x1810: jmp qword ptr [rip+0x20666a]
Execute the function: getopt_long

0x1810: the return address is 0x1b47
0x1b47: cmp eax,0xffffffff
0x1b4a: je 0x1c94
0x1b4a: jump address is 0x1c94
0x1b50: cmp eax,0x69
0x1b53: je 0x1c20
0x1b53: jump address is 0x1c20
0x1b59: jle 0x1b88
0x1b59: jump address is 0x1b88
0x1b5b: cmp eax,0x71
0x1b5e: je 0x1c48
0x1b5e: jump address is 0x1c48
0x1b64: jg 0x1bb0
0x1b64: jump address is 0x1bb0
0x1b66: cmp eax,0x6c
0x1b69: je 0x1c38
0x1b69: jump address is 0x1c38
0x1b6f: cmp eax,0x70
0x1b72: jne 0x1f69
0x1b72: jump address is 0x1f69
0x1b78: mov byte ptr [rip+0x206494],0x0
0x1b7f: jmp 0x1b30
0x1b7f: jump address is 0x1b30
Block exists: lea rdx,[rip+0x42c9] at address 0x1b30 is visited for 1 times

0x1f69: mov edi,0x1
0x1f6e: call 0x2b40
0x1f6e: jump address is 0x2b40
0x2b40: push r13
0x2b42: push r12
0x2b44: mov edx,0x5
0x2b49: push rbp
0x2b4a: push rbx
0x2b4b: mov ebp,edi
0x2b4d: sub rsp,0x88
0x2b54: mov rbx,qword ptr [rip+0x20562d]
0x2b5b: mov rax,qword ptr fs:0x28
0x2b64: mov qword ptr [rsp+0x78],rax
0x2b69: xor eax,eax
0x2b6b: test edi,edi
0x2b6d: je 0x2b9d
0x2b6d: jump address is 0x2b9d
0x2b6f: lea rsi,[rip+0x32fa]
0x2b76: xor edi,edi
0x2b78: call 0x17d0
0x2b78: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2b7d
0x2b7d: mov rdi,qword ptr [rip+0x20553c]
0x2b84: mov rdx,rax
0x2b87: mov rcx,rbx
0x2b8a: mov esi,0x1
0x2b8f: xor eax,eax
0x2b91: call 0x1a30
0x2b91: jump address is 0x1a30
0x1a30: jmp qword ptr [rip+0x20655a]
Execute the function: __fprintf_chk

0x1a30: the return address is 0x2b96
0x2b96: mov edi,ebp
0x2b98: call 0x1a10
0x2b98: jump address is 0x1a10
0x1a10: jmp qword ptr [rip+0x20656a]
Execute the function: exit

0x1c38: mov byte ptr [rip+0x2063d2],0x0
0x1c3f: jmp 0x1b30
0x1c3f: jump address is 0x1b30
Block exists: lea rdx,[rip+0x42c9] at address 0x1b30 is visited for 1 times

0x1bb0: cmp eax,0x73
0x1bb3: je 0x1c88
0x1bb3: jump address is 0x1c88
0x1bb9: cmp eax,0x77
0x1bbc: jne 0x1f69
0x1bbc: jump address is 0x1f69
Block exists: mov edi,0x1 at address 0x1f69 is visited for 1 times

0x1bc2: mov byte ptr [rip+0x20644c],0x0
0x1bc9: jmp 0x1b30
0x1bc9: jump address is 0x1b30
Block exists: lea rdx,[rip+0x42c9] at address 0x1b30 is visited for 1 times

0x1c88: mov byte ptr [rip+0x206382],0x1
0x1c8f: jmp 0x1b30
0x1c8f: jump address is 0x1b30
Block exists: lea rdx,[rip+0x42c9] at address 0x1b30 is visited for 1 times

0x1c48: mov byte ptr [rip+0x2063c6],0x0
0x1c4f: mov byte ptr [rip+0x2063ba],0x0
0x1c56: mov byte ptr [rip+0x2063ba],0x0
0x1c5d: jmp 0x1b30
0x1c5d: jump address is 0x1b30
Block exists: lea rdx,[rip+0x42c9] at address 0x1b30 is visited for 1 times

0x1b88: cmp eax,0x62
0x1b8b: je 0x1c78
0x1b8b: jump address is 0x1c78
0x1b91: jle 0x1bd0
0x1b91: jump address is 0x1bd0
0x1b93: cmp eax,0x66
0x1b96: je 0x1c68
0x1b96: jump address is 0x1c68
0x1b9c: cmp eax,0x68
0x1b9f: jne 0x1f69
0x1b9f: jump address is 0x1f69
Block exists: mov edi,0x1 at address 0x1f69 is visited for 1 times

0x1ba5: mov byte ptr [rip+0x206468],0x0
0x1bac: jmp 0x1b30
0x1bac: jump address is 0x1b30
Block exists: lea rdx,[rip+0x42c9] at address 0x1b30 is visited for 1 times

0x1c68: mov byte ptr [rip+0x2063a7],0x0
0x1c6f: jmp 0x1b30
0x1c6f: jump address is 0x1b30
Block exists: lea rdx,[rip+0x42c9] at address 0x1b30 is visited for 1 times

0x1bd0: cmp eax,0xffffff7d
0x1bd5: jne 0x1f3a
0x1bd5: jump address is 0x1f3a
0x1bdb: lea rax,[rip+0x4212]
0x1be2: mov rdi,qword ptr [rip+0x2064bf]
0x1be9: mov rcx,qword ptr [rip+0x206428]
0x1bf0: push 0x0
0x1bf2: lea r9,[rip+0x41da]
0x1bf9: lea r8,[rip+0x41e3]
0x1c00: push rax
0x1c01: lea rdx,[rip+0x4186]
0x1c08: lea rsi,[rip+0x40f5]
0x1c0f: xor eax,eax
0x1c11: call 0x5360
0x1c11: jump address is 0x5360
0x5360: push rbp
0x5361: push rbx
0x5362: mov r10d,0x20
0x5368: xor r11d,r11d
0x536b: sub rsp,0xb8
0x5372: mov rax,qword ptr fs:0x28
0x537b: mov qword ptr [rsp+0x78],rax
0x5380: xor eax,eax
0x5382: lea rax,[rsp+0xd0]
0x538a: mov qword ptr [rsp+0xa0],r8
0x5392: lea rbx,[rsp+0xd0]
0x539a: lea r8,[rsp+0x20]
0x539f: mov qword ptr [rsp+0xa8],r9
0x53a7: mov dword ptr [rsp+0x8],0x20
0x53af: mov qword ptr [rsp+0x10],rax
0x53b4: lea rax,[rsp+0x80]
0x53bc: xor r9d,r9d
0x53bf: mov qword ptr [rsp+0x18],rax
0x53c4: mov rbp,rax
0x53c7: nop word ptr [rax+rax*1+0x0]
0x53d0: cmp r10d,0x2f
0x53d4: ja 0x542c
0x53d4: jump address is 0x542c
0x53d6: mov eax,r10d
0x53d9: mov r11d,0x1
0x53df: add r10d,0x8
0x53e3: add rax,rbp
0x53e6: mov rax,qword ptr [rax]
0x53e9: test rax,rax
0x53ec: mov qword ptr [r8+r9*8],rax
0x53f0: je 0x53fc
0x53f0: jump address is 0x53fc
0x53f2: add r9,0x1
0x53f6: cmp r9,0xa
0x53fa: jne 0x53d0
0x53fa: jump address is 0x53d0
0x53d0: cmp r10d,0x2f
0x53d4: ja 0x542c
0x53d4: jump address is 0x542c
0x53d6: mov eax,r10d
0x53d9: mov r11d,0x1
0x53df: add r10d,0x8
0x53e3: add rax,rbp
0x53e6: mov rax,qword ptr [rax]
0x53e9: test rax,rax
0x53ec: mov qword ptr [r8+r9*8],rax
0x53f0: je 0x53fc
0x53f0: jump address is 0x53fc
0x53f2: add r9,0x1
0x53f6: cmp r9,0xa
0x53fa: jne 0x53d0
0x53fa: jump address is 0x53d0
Block exists: test r11b,r11b at address 0x53fc is visited for 1 times

0x53d0: cmp r10d,0x2f
0x53d4: ja 0x542c
0x53d4: jump address is 0x542c
Block exists: mov eax,r10d at address 0x53d6 is visited for 2 times

0x542c: mov rax,rbx
0x542f: add rbx,0x8
0x5433: jmp 0x53e6
0x5433: jump address is 0x53e6
0x53e6: mov rax,qword ptr [rax]
0x53e9: test rax,rax
0x53ec: mov qword ptr [r8+r9*8],rax
0x53f0: je 0x53fc
0x53f0: jump address is 0x53fc
0x53f2: add r9,0x1
0x53f6: cmp r9,0xa
0x53fa: jne 0x53d0
0x53fa: jump address is 0x53d0
Block exists: test r11b,r11b at address 0x53fc is visited for 2 times

0x53d0: cmp r10d,0x2f
0x53d4: ja 0x542c
0x53d4: jump address is 0x542c
0x53d6: mov eax,r10d
0x53d9: mov r11d,0x1
0x53df: add r10d,0x8
0x53e3: add rax,rbp
0x53e6: mov rax,qword ptr [rax]
0x53e9: test rax,rax
0x53ec: mov qword ptr [r8+r9*8],rax
0x53f0: je 0x53fc
0x53f0: jump address is 0x53fc
Block exists: test r11b,r11b at address 0x53fc is visited for 2 times

Block exists: add r9,0x1 at address 0x53f2 is visited for 3 times

0x542c: mov rax,rbx
0x542f: add rbx,0x8
0x5433: jmp 0x53e6
0x5433: jump address is 0x53e6
0x53e6: mov rax,qword ptr [rax]
0x53e9: test rax,rax
0x53ec: mov qword ptr [r8+r9*8],rax
0x53f0: je 0x53fc
0x53f0: jump address is 0x53fc
Block exists: test r11b,r11b at address 0x53fc is visited for 2 times

Block exists: add r9,0x1 at address 0x53f2 is visited for 3 times

0x53fc: test r11b,r11b
0x53ff: jne 0x5425
0x53ff: jump address is 0x5425
0x5401: call 0x4ea0
0x5401: jump address is 0x4ea0
0x4ea0: push r15
0x4ea2: push r14
0x4ea4: push r13
0x4ea6: push r12
0x4ea8: mov r12,r9
0x4eab: push rbp
0x4eac: push rbx
0x4ead: mov rbp,rdi
0x4eb0: mov rbx,r8
0x4eb3: sub rsp,0x28
0x4eb7: test rsi,rsi
0x4eba: je 0x4fd8
0x4eba: jump address is 0x4fd8
0x4ec0: mov r8,rdx
0x4ec3: lea rdx,[rip+0x195e]
0x4eca: mov r9,rcx
0x4ecd: xor eax,eax
0x4ecf: mov rcx,rsi
0x4ed2: mov esi,0x1
0x4ed7: call 0x1a30
0x4ed7: jump address is 0x1a30
0x1a30: jmp qword ptr [rip+0x20655a]
Execute the function: __fprintf_chk

0x1a30: the return address is 0x4edc
0x4edc: lea rsi,[rip+0x1958]
0x4ee3: xor edi,edi
0x4ee5: mov edx,0x5
0x4eea: call 0x17d0
0x4eea: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x4eef
0x4eef: lea rdx,[rip+0x1c6a]
0x4ef6: mov rcx,rax
0x4ef9: mov r8d,0x7e3
0x4eff: mov esi,0x1
0x4f04: mov rdi,rbp
0x4f07: xor eax,eax
0x4f09: call 0x1a30
0x4f09: jump address is 0x1a30
0x1a30: jmp qword ptr [rip+0x20655a]
Execute the function: __fprintf_chk

0x1a30: the return address is 0x4f0e
0x4f0e: lea rsi,[rip+0x19b3]
0x4f15: xor edi,edi
0x4f17: mov edx,0x5
0x4f1c: call 0x17d0
0x4f1c: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x4f21
0x4f21: mov rsi,rbp
0x4f24: mov rdi,rax
0x4f27: call 0x18a0
0x4f27: jump address is 0x18a0
0x18a0: jmp qword ptr [rip+0x206622]
Execute the function: fputs_unlocked

0x18a0: the return address is 0x4f2c
0x4f2c: cmp r12,0x9
0x4f30: ja 0x5270
0x4f30: jump address is 0x5270
0x4f36: lea rdx,[rip+0x1beb]
0x4f3d: movsxd rax,dword ptr [rdx+r12*4]
0x4f41: add rax,rdx
0x4f44: jmp rax
trace back
0x4f44: jmp rax
0x4f41: add rax,rdx
0x4f3d: movsxd rax,dword ptr [rdx+r12*4]
0x4f36: lea rdx,[rip+0x1beb]
0x4f30: ja 0x5270
0x4f2c: cmp r12,0x9
0x4f44: jump addresses resolved using jump table [0x4fc6, 0x5058, 0x5098, 0x50e0, 0x5130, 0x5188, 0x51b8, 0x5220, 0x4f50, 0x5000]
0x4f44: jmp rax
0x4f44: jump address is 0x5000
0x5000: mov r10,qword ptr [rbx+0x40]
0x5004: mov r9,qword ptr [rbx+0x38]
0x5008: lea rsi,[rip+0x1a59]
0x500f: mov rax,qword ptr [rbx+0x10]
0x5013: mov r8,qword ptr [rbx+0x8]
0x5017: mov edx,0x5
0x501c: mov r13,qword ptr [rbx+0x30]
0x5020: mov r12,qword ptr [rbx+0x28]
0x5024: mov r15,qword ptr [rbx+0x20]
0x5028: mov r14,qword ptr [rbx+0x18]
0x502c: mov rbx,qword ptr [rbx]
0x502f: mov qword ptr [rsp+0x18],r10
0x5034: mov qword ptr [rsp+0x10],r9
0x5039: mov qword ptr [rsp],rax
0x503d: mov qword ptr [rsp+0x8],r8
0x5042: xor edi,edi
0x5044: call 0x17d0
0x5044: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x5049
0x5049: mov r10,qword ptr [rsp+0x18]
0x504e: push r10
0x5050: jmp 0x4f94
0x5050: jump address is 0x4f94
0x4f94: mov r9,qword ptr [rsp+0x18]
0x4f99: mov rdx,rax
0x4f9c: mov rcx,rbx
0x4f9f: mov esi,0x1
0x4fa4: mov rdi,rbp
0x4fa7: xor eax,eax
0x4fa9: push r9
0x4fab: push r13
0x4fad: push r12
0x4faf: push r15
0x4fb1: push r14
0x4fb3: mov r9,qword ptr [rsp+0x30]
0x4fb8: mov r8,qword ptr [rsp+0x38]
0x4fbd: call 0x1a30
0x4fbd: jump address is 0x1a30
0x1a30: jmp qword ptr [rip+0x20655a]
Execute the function: __fprintf_chk

0x1a30: the return address is 0x4fc2
0x4fc2: add rsp,0x30
0x4fc6: add rsp,0x28
0x4fca: pop rbx
0x4fcb: pop rbp
0x4fcc: pop r12
0x4fce: pop r13
0x4fd0: pop r14
0x4fd2: pop r15
0x4fd4: ret
0x4fd4: the return address is 0x5406
0x5406: mov rax,qword ptr [rsp+0x78]
0x540b: xor rax,qword ptr fs:0x28
0x5414: jne 0x5420
0x5414: jump address is 0x5420
0x5416: add rsp,0xb8
0x541d: pop rbx
0x541e: pop rbp
0x541f: ret
0x541f: the return address is 0x1c16
0x1c16: xor edi,edi
0x1c18: call 0x1a10
0x1c18: jump address is 0x1a10
0x1a10: jmp qword ptr [rip+0x20656a]
Execute the function: exit

0x4f44: jmp rax
0x4f44: jump address is 0x4f50
0x4f50: mov r9,qword ptr [rbx+0x38]
0x4f54: mov rax,qword ptr [rbx+0x10]
0x4f58: lea rsi,[rip+0x1ad9]
0x4f5f: mov r8,qword ptr [rbx+0x8]
0x4f63: mov edx,0x5
0x4f68: xor edi,edi
0x4f6a: mov r13,qword ptr [rbx+0x30]
0x4f6e: mov r12,qword ptr [rbx+0x28]
0x4f72: mov qword ptr [rsp+0x10],r9
0x4f77: mov r15,qword ptr [rbx+0x20]
0x4f7b: mov r14,qword ptr [rbx+0x18]
0x4f7f: mov qword ptr [rsp],rax
0x4f83: mov qword ptr [rsp+0x8],r8
0x4f88: mov rbx,qword ptr [rbx]
0x4f8b: call 0x17d0
0x4f8b: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x4f90
0x4f90: sub rsp,0x8
0x4f94: mov r9,qword ptr [rsp+0x18]
0x4f99: mov rdx,rax
0x4f9c: mov rcx,rbx
0x4f9f: mov esi,0x1
0x4fa4: mov rdi,rbp
0x4fa7: xor eax,eax
0x4fa9: push r9
0x4fab: push r13
0x4fad: push r12
0x4faf: push r15
0x4fb1: push r14
0x4fb3: mov r9,qword ptr [rsp+0x30]
0x4fb8: mov r8,qword ptr [rsp+0x38]
0x4fbd: call 0x1a30
0x4fbd: jump address is 0x1a30
0x1a30: jmp qword ptr [rip+0x20655a]
Execute the function: __fprintf_chk

0x1a30: the return address is 0x4fc2
Block exists: add rsp,0x30 at address 0x4fc2 is visited for 1 times

0x4f44: jmp rax
0x4f44: jump address is 0x5220
0x5220: mov r9,qword ptr [rbx+0x10]
0x5224: mov r13,qword ptr [rbx+0x30]
0x5228: lea rsi,[rip+0x17d9]
0x522f: mov r12,qword ptr [rbx+0x28]
0x5233: mov r15,qword ptr [rbx+0x20]
0x5237: mov edx,0x5
0x523c: mov r14,qword ptr [rbx+0x18]
0x5240: mov r8,qword ptr [rbx+0x8]
0x5244: xor edi,edi
0x5246: mov qword ptr [rsp+0x8],r9
0x524b: mov rbx,qword ptr [rbx]
0x524e: mov qword ptr [rsp],r8
0x5252: call 0x17d0
0x5252: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x5257
0x5257: push r13
0x5259: push r12
0x525b: push r15
0x525d: push r14
0x525f: mov r9,qword ptr [rsp+0x28]
0x5264: jmp 0x51f3
0x5264: jump address is 0x51f3
0x51f3: mov r8,qword ptr [rsp+0x20]
0x51f8: mov rcx,rbx
0x51fb: mov rdx,rax
0x51fe: mov rdi,rbp
0x5201: mov esi,0x1
0x5206: xor eax,eax
0x5208: call 0x1a30
0x5208: jump address is 0x1a30
0x1a30: jmp qword ptr [rip+0x20655a]
Execute the function: __fprintf_chk

0x1a30: the return address is 0x520d
0x520d: add rsp,0x20
0x5211: add rsp,0x28
0x5215: pop rbx
0x5216: pop rbp
0x5217: pop r12
0x5219: pop r13
0x521b: pop r14
0x521d: pop r15
0x521f: ret
0x521f: the return address is 0x5406
Block exists: mov rax,qword ptr [rsp+0x78] at address 0x5406 is visited for 1 times

0x4f44: jmp rax
0x4f44: jump address is 0x51b8
0x51b8: mov r8,qword ptr [rbx+0x8]
0x51bc: mov r12,qword ptr [rbx+0x28]
0x51c0: lea rsi,[rip+0x1819]
0x51c7: mov r15,qword ptr [rbx+0x20]
0x51cb: mov r14,qword ptr [rbx+0x18]
0x51cf: mov edx,0x5
0x51d4: mov r13,qword ptr [rbx+0x10]
0x51d8: xor edi,edi
0x51da: mov rbx,qword ptr [rbx]
0x51dd: mov qword ptr [rsp],r8
0x51e1: call 0x17d0
0x51e1: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x51e6
0x51e6: sub rsp,0x8
0x51ea: mov r9,r13
0x51ed: push r12
0x51ef: push r15
0x51f1: push r14
0x51f3: mov r8,qword ptr [rsp+0x20]
0x51f8: mov rcx,rbx
0x51fb: mov rdx,rax
0x51fe: mov rdi,rbp
0x5201: mov esi,0x1
0x5206: xor eax,eax
0x5208: call 0x1a30
0x5208: jump address is 0x1a30
0x1a30: jmp qword ptr [rip+0x20655a]
Execute the function: __fprintf_chk

0x1a30: the return address is 0x520d
Block exists: add rsp,0x20 at address 0x520d is visited for 1 times

0x4f44: jmp rax
0x4f44: jump address is 0x5188
0x5188: mov r15,qword ptr [rbx+0x20]
0x518c: lea rsi,[rip+0x1825]
0x5193: mov edx,0x5
0x5198: xor edi,edi
0x519a: mov r14,qword ptr [rbx+0x18]
0x519e: mov r13,qword ptr [rbx+0x10]
0x51a2: mov r12,qword ptr [rbx+0x8]
0x51a6: mov rbx,qword ptr [rbx]
0x51a9: call 0x17d0
0x51a9: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x51ae
0x51ae: push r15
0x51b0: jmp 0x5156
0x51b0: jump address is 0x5156
0x5156: push r14
0x5158: mov rdx,rax
0x515b: mov r9,r13
0x515e: mov r8,r12
0x5161: mov rcx,rbx
0x5164: mov rdi,rbp
0x5167: mov esi,0x1
0x516c: xor eax,eax
0x516e: call 0x1a30
0x516e: jump address is 0x1a30
0x1a30: jmp qword ptr [rip+0x20655a]
Execute the function: __fprintf_chk

0x1a30: the return address is 0x5173
0x5173: pop rax
0x5174: pop rdx
0x5175: add rsp,0x28
0x5179: pop rbx
0x517a: pop rbp
0x517b: pop r12
0x517d: pop r13
0x517f: pop r14
0x5181: pop r15
0x5183: ret
0x5183: the return address is 0x5406
Block exists: mov rax,qword ptr [rsp+0x78] at address 0x5406 is visited for 1 times

0x4f44: jmp rax
0x4f44: jump address is 0x5130
0x5130: lea rsi,[rip+0x1861]
0x5137: mov edx,0x5
0x513c: xor edi,edi
0x513e: mov r14,qword ptr [rbx+0x18]
0x5142: mov r13,qword ptr [rbx+0x10]
0x5146: mov r12,qword ptr [rbx+0x8]
0x514a: mov rbx,qword ptr [rbx]
0x514d: call 0x17d0
0x514d: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x5152
0x5152: sub rsp,0x8
0x5156: push r14
0x5158: mov rdx,rax
0x515b: mov r9,r13
0x515e: mov r8,r12
0x5161: mov rcx,rbx
0x5164: mov rdi,rbp
0x5167: mov esi,0x1
0x516c: xor eax,eax
0x516e: call 0x1a30
0x516e: jump address is 0x1a30
0x1a30: jmp qword ptr [rip+0x20655a]
Execute the function: __fprintf_chk

0x1a30: the return address is 0x5173
Block exists: pop rax at address 0x5173 is visited for 1 times

0x4f44: jmp rax
0x4f44: jump address is 0x50e0
0x50e0: mov r13,qword ptr [rbx+0x10]
0x50e4: mov r12,qword ptr [rbx+0x8]
0x50e8: lea rsi,[rip+0x1777]
0x50ef: mov rbx,qword ptr [rbx]
0x50f2: mov edx,0x5
0x50f7: xor edi,edi
0x50f9: call 0x17d0
0x50f9: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x50fe
0x50fe: add rsp,0x28
0x5102: mov r9,r13
0x5105: mov r8,r12
0x5108: mov rcx,rbx
0x510b: mov rdi,rbp
0x510e: mov rdx,rax
0x5111: pop rbx
0x5112: pop rbp
0x5113: pop r12
0x5115: pop r13
0x5117: pop r14
0x5119: pop r15
0x511b: mov esi,0x1
0x5120: xor eax,eax
0x5122: jmp 0x1a30
0x5122: jump address is 0x1a30
0x1a30: jmp qword ptr [rip+0x20655a]
Execute the function: __fprintf_chk

0x1a30: the return address is 0x5406
Block exists: mov rax,qword ptr [rsp+0x78] at address 0x5406 is visited for 1 times

0x4f44: jmp rax
0x4f44: jump address is 0x5098
0x5098: mov r12,qword ptr [rbx+0x8]
0x509c: lea rsi,[rip+0x17ac]
0x50a3: mov rbx,qword ptr [rbx]
0x50a6: mov edx,0x5
0x50ab: xor edi,edi
0x50ad: call 0x17d0
0x50ad: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x50b2
0x50b2: add rsp,0x28
0x50b6: mov r8,r12
0x50b9: mov rcx,rbx
0x50bc: mov rdi,rbp
0x50bf: mov rdx,rax
0x50c2: mov esi,0x1
0x50c7: pop rbx
0x50c8: pop rbp
0x50c9: pop r12
0x50cb: pop r13
0x50cd: pop r14
0x50cf: pop r15
0x50d1: xor eax,eax
0x50d3: jmp 0x1a30
0x50d3: jump address is 0x1a30
0x1a30: jmp qword ptr [rip+0x20655a]
Execute the function: __fprintf_chk

0x1a30: the return address is 0x5406
Block exists: mov rax,qword ptr [rsp+0x78] at address 0x5406 is visited for 1 times

0x4f44: jmp rax
0x4f44: jump address is 0x5058
0x5058: mov rbx,qword ptr [rbx]
0x505b: lea rsi,[rip+0x17dd]
0x5062: mov edx,0x5
0x5067: xor edi,edi
0x5069: call 0x17d0
0x5069: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x506e
0x506e: add rsp,0x28
0x5072: mov rcx,rbx
0x5075: mov rdi,rbp
0x5078: pop rbx
0x5079: pop rbp
0x507a: pop r12
0x507c: pop r13
0x507e: pop r14
0x5080: pop r15
0x5082: mov rdx,rax
0x5085: mov esi,0x1
0x508a: xor eax,eax
0x508c: jmp 0x1a30
0x508c: jump address is 0x1a30
0x1a30: jmp qword ptr [rip+0x20655a]
Execute the function: __fprintf_chk

0x1a30: the return address is 0x5406
Block exists: mov rax,qword ptr [rsp+0x78] at address 0x5406 is visited for 1 times

0x4f44: jmp rax
0x4f44: jump address is 0x4fc6
0x4fc6: add rsp,0x28
0x4fca: pop rbx
0x4fcb: pop rbp
0x4fcc: pop r12
0x4fce: pop r13
0x4fd0: pop r14
0x4fd2: pop r15
0x4fd4: ret
0x4fd4: the return address is 0x5406
Block exists: mov rax,qword ptr [rsp+0x78] at address 0x5406 is visited for 1 times

0x5270: mov r10,qword ptr [rbx+0x40]
0x5274: mov r9,qword ptr [rbx+0x38]
0x5278: mov edx,0x5
0x527d: mov rax,qword ptr [rbx+0x10]
0x5281: mov r8,qword ptr [rbx+0x8]
0x5285: lea rsi,[rip+0x1814]
0x528c: mov r13,qword ptr [rbx+0x30]
0x5290: mov r12,qword ptr [rbx+0x28]
0x5294: mov r15,qword ptr [rbx+0x20]
0x5298: mov r14,qword ptr [rbx+0x18]
0x529c: mov qword ptr [rsp+0x18],r10
0x52a1: mov qword ptr [rsp+0x10],r9
0x52a6: mov qword ptr [rsp],rax
0x52aa: mov qword ptr [rsp+0x8],r8
0x52af: mov rbx,qword ptr [rbx]
0x52b2: jmp 0x5042
0x52b2: jump address is 0x5042
0x5042: xor edi,edi
0x5044: call 0x17d0
0x5044: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x5049
Block exists: mov r10,qword ptr [rsp+0x18] at address 0x5049 is visited for 1 times

0x5425: mov dword ptr [rsp+0x8],r10d
0x542a: jmp 0x5401
0x542a: jump address is 0x5401
0x5401: call 0x4ea0
0x5401: jump address is 0x4ea0
Execute the function: version_etc_arn

0x5401: the return address is 0x5406
0x5406: mov rax,qword ptr [rsp+0x78]
0x540b: xor rax,qword ptr fs:0x28
0x5414: jne 0x5420
0x5414: jump address is 0x5420
0x5416: add rsp,0xb8
0x541d: pop rbx
0x541e: pop rbp
0x541f: ret
0x541f: the return address is 0x1c16
0x1c16: xor edi,edi
0x1c18: call 0x1a10
0x1c18: jump address is 0x1a10
0x1a10: jmp qword ptr [rip+0x20656a]
Execute the function: exit

0x53fc: test r11b,r11b
0x53ff: jne 0x5425
0x53ff: jump address is 0x5425
Block exists: mov dword ptr [rsp+0x8],r10d at address 0x5425 is visited for 1 times

0x1f3a: cmp eax,0xffffff7e
0x1f3f: jne 0x1f69
0x1f3f: jump address is 0x1f69
Block exists: mov edi,0x1 at address 0x1f69 is visited for 1 times

0x1f41: xor edi,edi
0x1f43: call 0x2b40
0x1f43: jump address is 0x2b40
0x2b40: push r13
0x2b42: push r12
0x2b44: mov edx,0x5
0x2b49: push rbp
0x2b4a: push rbx
0x2b4b: mov ebp,edi
0x2b4d: sub rsp,0x88
0x2b54: mov rbx,qword ptr [rip+0x20562d]
0x2b5b: mov rax,qword ptr fs:0x28
0x2b64: mov qword ptr [rsp+0x78],rax
0x2b69: xor eax,eax
0x2b6b: test edi,edi
0x2b6d: je 0x2b9d
0x2b6d: jump address is 0x2b9d
0x2b6f: lea rsi,[rip+0x32fa]
0x2b76: xor edi,edi
0x2b78: call 0x17d0
0x2b78: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2b7d
0x2b7d: mov rdi,qword ptr [rip+0x20553c]
0x2b84: mov rdx,rax
0x2b87: mov rcx,rbx
0x2b8a: mov esi,0x1
0x2b8f: xor eax,eax
0x2b91: call 0x1a30
0x2b91: jump address is 0x1a30
0x1a30: jmp qword ptr [rip+0x20655a]
Execute the function: __fprintf_chk

0x1a30: the return address is 0x2b96
0x2b96: mov edi,ebp
0x2b98: call 0x1a10
0x2b98: jump address is 0x1a10
0x1a10: jmp qword ptr [rip+0x20656a]
Execute the function: exit

0x2b9d: lea rsi,[rip+0x32f4]
0x2ba4: xor edi,edi
0x2ba6: call 0x17d0
0x2ba6: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2bab
0x2bab: mov rdx,rbx
0x2bae: mov rsi,rax
0x2bb1: mov edi,0x1
0x2bb6: xor eax,eax
0x2bb8: call 0x19a0
0x2bb8: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2bbd
0x2bbd: mov rbx,qword ptr [rip+0x2054e4]
0x2bc4: lea rsi,[rip+0x32f5]
0x2bcb: mov edx,0x5
0x2bd0: xor edi,edi
0x2bd2: call 0x17d0
0x2bd2: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2bd7
0x2bd7: mov rsi,rbx
0x2bda: mov rdi,rax
0x2bdd: call 0x18a0
0x2bdd: jump address is 0x18a0
0x18a0: jmp qword ptr [rip+0x206622]
Execute the function: fputs_unlocked

0x18a0: the return address is 0x2be2
0x2be2: mov rbx,qword ptr [rip+0x2054bf]
0x2be9: lea rsi,[rip+0x3418]
0x2bf0: mov edx,0x5
0x2bf5: xor edi,edi
0x2bf7: call 0x17d0
0x2bf7: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2bfc
0x2bfc: mov rsi,rbx
0x2bff: mov rdi,rax
0x2c02: call 0x18a0
0x2c02: jump address is 0x18a0
0x18a0: jmp qword ptr [rip+0x206622]
Execute the function: fputs_unlocked

0x18a0: the return address is 0x2c07
0x2c07: mov rbx,qword ptr [rip+0x20549a]
0x2c0e: lea rsi,[rip+0x352b]
0x2c15: mov edx,0x5
0x2c1a: xor edi,edi
0x2c1c: call 0x17d0
0x2c1c: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2c21
0x2c21: mov rsi,rbx
0x2c24: mov rdi,rax
0x2c27: call 0x18a0
0x2c27: jump address is 0x18a0
0x18a0: jmp qword ptr [rip+0x206622]
Execute the function: fputs_unlocked

0x18a0: the return address is 0x2c2c
0x2c2c: mov rbx,qword ptr [rip+0x205475]
0x2c33: lea rsi,[rip+0x3536]
0x2c3a: mov edx,0x5
0x2c3f: xor edi,edi
0x2c41: call 0x17d0
0x2c41: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2c46
0x2c46: mov rsi,rbx
0x2c49: mov rdi,rax
0x2c4c: lea rbx,[rip+0x30b1]
0x2c53: call 0x18a0
0x2c53: jump address is 0x18a0
0x18a0: jmp qword ptr [rip+0x206622]
Execute the function: fputs_unlocked

0x18a0: the return address is 0x2c58
0x2c58: lea rsi,[rip+0x3549]
0x2c5f: mov edx,0x5
0x2c64: xor edi,edi
0x2c66: call 0x17d0
0x2c66: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2c6b
0x2c6b: lea rdx,[rip+0x3098]
0x2c72: mov rsi,rax
0x2c75: mov edi,0x1
0x2c7a: xor eax,eax
0x2c7c: call 0x19a0
0x2c7c: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2c81
0x2c81: lea rax,[rip+0x3090]
0x2c88: lea rcx,[rip+0x30ca]
0x2c8f: mov qword ptr [rsp+0x60],0x0
0x2c98: mov qword ptr [rsp+0x68],0x0
0x2ca1: mov rdx,rsp
0x2ca4: mov qword ptr [rsp],rax
0x2ca8: lea rax,[rip+0x306b]
0x2caf: mov qword ptr [rsp+0x30],rcx
0x2cb4: lea rcx,[rip+0x30a8]
0x2cbb: mov qword ptr [rsp+0x8],rax
0x2cc0: lea rax,[rip+0x30cb]
0x2cc7: mov qword ptr [rsp+0x40],rcx
0x2ccc: lea rcx,[rip+0x309a]
0x2cd3: mov qword ptr [rsp+0x10],rax
0x2cd8: lea rax,[rip+0x304b]
0x2cdf: mov qword ptr [rsp+0x50],rcx
0x2ce4: mov qword ptr [rsp+0x18],rax
0x2ce9: lea rax,[rip+0x3050]
0x2cf0: mov qword ptr [rsp+0x20],rax
0x2cf5: lea rax,[rip+0x304e]
0x2cfc: mov qword ptr [rsp+0x28],rax
0x2d01: mov qword ptr [rsp+0x38],rax
0x2d06: mov qword ptr [rsp+0x48],rax
0x2d0b: mov qword ptr [rsp+0x58],rax
0x2d10: add rdx,0x10
0x2d14: mov rdi,qword ptr [rdx]
0x2d17: test rdi,rdi
0x2d1a: je 0x2d2f
0x2d1a: jump address is 0x2d2f
0x2d1c: mov ecx,0x6
0x2d21: mov rsi,rbx
0x2d24: repz cmps byte ptr ds:[rsi],byte ptr es:[rdi]
0x2d26: seta al
0x2d29: sbb al,0x0
0x2d2b: test al,al
0x2d2d: jne 0x2d10
0x2d2d: jump address is 0x2d10
0x2d2f: mov r12,qword ptr [rdx+0x8]
0x2d33: xor edi,edi
0x2d35: mov edx,0x5
0x2d3a: lea rsi,[rip+0x3036]
0x2d41: test r12,r12
0x2d44: je 0x2e0b
0x2d44: jump address is 0x2e0b
0x2d4a: call 0x17d0
0x2d4a: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2d4f
0x2d4f: lea rcx,[rip+0x34aa]
0x2d56: lea rdx,[rip+0x3031]
0x2d5d: mov rsi,rax
0x2d60: mov edi,0x1
0x2d65: xor eax,eax
0x2d67: call 0x19a0
0x2d67: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2d6c
0x2d6c: xor esi,esi
0x2d6e: mov edi,0x5
0x2d73: call 0x1990
0x2d73: jump address is 0x1990
0x1990: jmp qword ptr [rip+0x2065aa]
Execute the function: setlocale

0x1990: the return address is 0x2d78
0x2d78: test rax,rax
0x2d7b: je 0x2d99
0x2d7b: jump address is 0x2d99
0x2d7d: lea rsi,[rip+0x3018]
0x2d84: mov edx,0x3
0x2d89: mov rdi,rax
0x2d8c: call 0x1740
0x2d8c: jump address is 0x1740
0x1740: jmp qword ptr [rip+0x2066d2]
Execute the function: strncmp

0x1740: the return address is 0x2d91
0x2d91: test eax,eax
0x2d93: jne 0x2ea0
0x2d93: jump address is 0x2ea0
Block exists: lea rsi,[rip+0x3000] at address 0x2d99 is visited for 1 times

0x2ea0: mov r13,qword ptr [rip+0x205201]
0x2ea7: lea rsi,[rip+0x337a]
0x2eae: xor edi,edi
0x2eb0: mov edx,0x5
0x2eb5: call 0x17d0
0x2eb5: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2eba
0x2eba: mov rsi,r13
0x2ebd: mov rdi,rax
0x2ec0: call 0x18a0
0x2ec0: jump address is 0x18a0
0x18a0: jmp qword ptr [rip+0x206622]
Execute the function: fputs_unlocked

0x18a0: the return address is 0x2ec5
0x2ec5: jmp 0x2d99
0x2ec5: jump address is 0x2d99
Block exists: lea rsi,[rip+0x3000] at address 0x2d99 is visited for 1 times

0x2d99: lea rsi,[rip+0x3000]
0x2da0: xor edi,edi
0x2da2: mov edx,0x5
0x2da7: call 0x17d0
0x2da7: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2dac
0x2dac: lea rcx,[rip+0x2f51]
0x2db3: lea rdx,[rip+0x3446]
0x2dba: mov rsi,rax
0x2dbd: mov edi,0x1
0x2dc2: xor eax,eax
0x2dc4: call 0x19a0
0x2dc4: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2dc9
0x2dc9: cmp r12,rbx
0x2dcc: lea rcx,[rip+0x2f61]
0x2dd3: lea rbx,[rip+0x3aa7]
0x2dda: cmove rbx,rcx
0x2dde: lea rsi,[rip+0x348b]
0x2de5: xor edi,edi
0x2de7: mov edx,0x5
0x2dec: call 0x17d0
0x2dec: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2df1
0x2df1: mov rcx,rbx
0x2df4: mov rsi,rax
0x2df7: mov rdx,r12
0x2dfa: mov edi,0x1
0x2dff: xor eax,eax
0x2e01: call 0x19a0
0x2e01: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2e06
0x2e06: jmp 0x2b96
0x2e06: jump address is 0x2b96
0x2b96: mov edi,ebp
0x2b98: call 0x1a10
0x2b98: jump address is 0x1a10
0x1a10: jmp qword ptr [rip+0x20656a]
Execute the function: exit

0x2d10: add rdx,0x10
0x2d14: mov rdi,qword ptr [rdx]
0x2d17: test rdi,rdi
0x2d1a: je 0x2d2f
0x2d1a: jump address is 0x2d2f
0x2d1c: mov ecx,0x6
0x2d21: mov rsi,rbx
0x2d24: repz cmps byte ptr ds:[rsi],byte ptr es:[rdi]
0x2d26: seta al
0x2d29: sbb al,0x0
0x2d2b: test al,al
0x2d2d: jne 0x2d10
0x2d2d: jump address is 0x2d10
Block exists: add rdx,0x10 at address 0x2d10 is visited for 2 times

Block exists: mov r12,qword ptr [rdx+0x8] at address 0x2d2f is visited for 2 times

0x2d2f: mov r12,qword ptr [rdx+0x8]
0x2d33: xor edi,edi
0x2d35: mov edx,0x5
0x2d3a: lea rsi,[rip+0x3036]
0x2d41: test r12,r12
0x2d44: je 0x2e0b
0x2d44: jump address is 0x2e0b
0x2d4a: call 0x17d0
0x2d4a: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2d4f
0x2d4f: lea rcx,[rip+0x34aa]
0x2d56: lea rdx,[rip+0x3031]
0x2d5d: mov rsi,rax
0x2d60: mov edi,0x1
0x2d65: xor eax,eax
0x2d67: call 0x19a0
0x2d67: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2d6c
0x2d6c: xor esi,esi
0x2d6e: mov edi,0x5
0x2d73: call 0x1990
0x2d73: jump address is 0x1990
0x1990: jmp qword ptr [rip+0x2065aa]
Execute the function: setlocale

0x1990: the return address is 0x2d78
0x2d78: test rax,rax
0x2d7b: je 0x2d99
0x2d7b: jump address is 0x2d99
0x2d7d: lea rsi,[rip+0x3018]
0x2d84: mov edx,0x3
0x2d89: mov rdi,rax
0x2d8c: call 0x1740
0x2d8c: jump address is 0x1740
0x1740: jmp qword ptr [rip+0x2066d2]
Execute the function: strncmp

0x1740: the return address is 0x2d91
0x2d91: test eax,eax
0x2d93: jne 0x2ea0
0x2d93: jump address is 0x2ea0
Block exists: lea rsi,[rip+0x3000] at address 0x2d99 is visited for 2 times

0x2ea0: mov r13,qword ptr [rip+0x205201]
0x2ea7: lea rsi,[rip+0x337a]
0x2eae: xor edi,edi
0x2eb0: mov edx,0x5
0x2eb5: call 0x17d0
0x2eb5: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2eba
0x2eba: mov rsi,r13
0x2ebd: mov rdi,rax
0x2ec0: call 0x18a0
0x2ec0: jump address is 0x18a0
0x18a0: jmp qword ptr [rip+0x206622]
Execute the function: fputs_unlocked

0x18a0: the return address is 0x2ec5
0x2ec5: jmp 0x2d99
0x2ec5: jump address is 0x2d99
Block exists: lea rsi,[rip+0x3000] at address 0x2d99 is visited for 2 times

0x2d99: lea rsi,[rip+0x3000]
0x2da0: xor edi,edi
0x2da2: mov edx,0x5
0x2da7: call 0x17d0
0x2da7: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2dac
0x2dac: lea rcx,[rip+0x2f51]
0x2db3: lea rdx,[rip+0x3446]
0x2dba: mov rsi,rax
0x2dbd: mov edi,0x1
0x2dc2: xor eax,eax
0x2dc4: call 0x19a0
0x2dc4: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2dc9
0x2dc9: cmp r12,rbx
0x2dcc: lea rcx,[rip+0x2f61]
0x2dd3: lea rbx,[rip+0x3aa7]
0x2dda: cmove rbx,rcx
0x2dde: lea rsi,[rip+0x348b]
0x2de5: xor edi,edi
0x2de7: mov edx,0x5
0x2dec: call 0x17d0
0x2dec: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2df1
0x2df1: mov rcx,rbx
0x2df4: mov rsi,rax
0x2df7: mov rdx,r12
0x2dfa: mov edi,0x1
0x2dff: xor eax,eax
0x2e01: call 0x19a0
0x2e01: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2e06
0x2e06: jmp 0x2b96
0x2e06: jump address is 0x2b96
0x2b96: mov edi,ebp
0x2b98: call 0x1a10
0x2b98: jump address is 0x1a10
0x1a10: jmp qword ptr [rip+0x20656a]
Execute the function: exit

0x2dda: cmove rbx,rcx
0x2dde: lea rsi,[rip+0x348b]
0x2de5: xor edi,edi
0x2de7: mov edx,0x5
0x2dec: call 0x17d0
0x2dec: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2df1
0x2df1: mov rcx,rbx
0x2df4: mov rsi,rax
0x2df7: mov rdx,r12
0x2dfa: mov edi,0x1
0x2dff: xor eax,eax
0x2e01: call 0x19a0
0x2e01: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2e06
0x2e06: jmp 0x2b96
0x2e06: jump address is 0x2b96
Block exists: mov edi,ebp at address 0x2b96 is visited for 4 times

0x2e0b: call 0x17d0
0x2e0b: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2e10
0x2e10: lea rcx,[rip+0x33e9]
0x2e17: lea rdx,[rip+0x2f70]
0x2e1e: mov rsi,rax
0x2e21: mov edi,0x1
0x2e26: xor eax,eax
0x2e28: call 0x19a0
0x2e28: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2e2d
0x2e2d: xor esi,esi
0x2e2f: mov edi,0x5
0x2e34: call 0x1990
0x2e34: jump address is 0x1990
0x1990: jmp qword ptr [rip+0x2065aa]
Execute the function: setlocale

0x1990: the return address is 0x2e39
0x2e39: test rax,rax
0x2e3c: je 0x2e56
0x2e3c: jump address is 0x2e56
0x2e3e: lea rsi,[rip+0x2f57]
0x2e45: mov edx,0x3
0x2e4a: mov rdi,rax
0x2e4d: call 0x1740
0x2e4d: jump address is 0x1740
0x1740: jmp qword ptr [rip+0x2066d2]
Execute the function: strncmp

0x1740: the return address is 0x2e52
0x2e52: test eax,eax
0x2e54: jne 0x2e99
0x2e54: jump address is 0x2e99
Block exists: lea rsi,[rip+0x2f43] at address 0x2e56 is visited for 1 times

0x2e99: lea r12,[rip+0x2e64]
0x2ea0: mov r13,qword ptr [rip+0x205201]
0x2ea7: lea rsi,[rip+0x337a]
0x2eae: xor edi,edi
0x2eb0: mov edx,0x5
0x2eb5: call 0x17d0
0x2eb5: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2eba
Block exists: mov rsi,r13 at address 0x2eba is visited for 2 times

0x2e56: lea rsi,[rip+0x2f43]
0x2e5d: mov edx,0x5
0x2e62: xor edi,edi
0x2e64: lea r12,[rip+0x2e99]
0x2e6b: lea rbx,[rip+0x2ec2]
0x2e72: call 0x17d0
0x2e72: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2e77
0x2e77: lea rcx,[rip+0x2e86]
0x2e7e: lea rdx,[rip+0x337b]
0x2e85: mov rsi,rax
0x2e88: mov edi,0x1
0x2e8d: xor eax,eax
0x2e8f: call 0x19a0
0x2e8f: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2e94
0x2e94: jmp 0x2dde
0x2e94: jump address is 0x2dde
0x2dde: lea rsi,[rip+0x348b]
0x2de5: xor edi,edi
0x2de7: mov edx,0x5
0x2dec: call 0x17d0
0x2dec: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2df1
Block exists: mov rcx,rbx at address 0x2df1 is visited for 3 times

0x1c78: mov byte ptr [rip+0x206393],0x0
0x1c7f: jmp 0x1b30
0x1c7f: jump address is 0x1b30
Block exists: lea rdx,[rip+0x42c9] at address 0x1b30 is visited for 1 times

0x1c20: mov byte ptr [rip+0x2063ee],0x0
0x1c27: mov byte ptr [rip+0x2063e2],0x0
0x1c2e: jmp 0x1b30
0x1c2e: jump address is 0x1b30
Block exists: lea rdx,[rip+0x42c9] at address 0x1b30 is visited for 1 times

0x1c94: movsxd rax,dword ptr [rip+0x206415]
0x1c9b: sub ebp,eax
0x1c9d: cmp byte ptr [rip+0x20636d],0x0
0x1ca4: jne 0x1d07
0x1ca4: jump address is 0x1d07
0x1ca6: test ebp,ebp
0x1ca8: je 0x1f48
0x1ca8: jump address is 0x1f48
0x1cae: shl rax,0x3
0x1cb2: test ebp,ebp
0x1cb4: jle 0x1ce2
0x1cb4: jump address is 0x1ce2
0x1cb6: lea r12,[rbx+rax*1]
0x1cba: lea edx,[rbp-0x1]
0x1cbd: lea rax,[rbx+rax*1+0x8]
0x1cc2: lea rbx,[rax+rdx*8]
0x1cc6: nop word ptr cs:[rax+rax*1+0x0]
0x1cd0: mov rdi,qword ptr [r12]
0x1cd4: add r12,0x8
0x1cd8: call 0x2200
0x1cd8: jump address is 0x2200
0x2200: push r13
0x2202: push r12
0x2204: push rbp
0x2205: push rbx
0x2206: mov rbp,rdi
0x2209: sub rsp,0x418
0x2210: mov rax,qword ptr fs:0x28
0x2219: mov qword ptr [rsp+0x408],rax
0x2221: xor eax,eax
0x2223: call 0x18c0
0x2223: jump address is 0x18c0
0x18c0: jmp qword ptr [rip+0x206612]
Execute the function: getpwnam

0x18c0: the return address is 0x2228
0x2228: lea rsi,[rip+0x3a35]
0x222f: mov edx,0x5
0x2234: xor edi,edi
0x2236: mov rbx,rax
0x2239: call 0x17d0
0x2239: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x223e
0x223e: mov edi,0x1
0x2243: mov rsi,rax
0x2246: xor eax,eax
0x2248: call 0x19a0
0x2248: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x224d
0x224d: lea rsi,[rip+0x3a1d]
0x2254: mov rdx,rbp
0x2257: mov edi,0x1
0x225c: xor eax,eax
0x225e: call 0x19a0
0x225e: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2263
0x2263: lea rsi,[rip+0x3a0d]
0x226a: xor edi,edi
0x226c: mov edx,0x5
0x2271: call 0x17d0
0x2271: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2276
0x2276: mov edi,0x1
0x227b: mov rsi,rax
0x227e: xor eax,eax
0x2280: call 0x19a0
0x2280: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2285
0x2285: test rbx,rbx
0x2288: je 0x2590
0x2288: jump address is 0x2590
0x228e: mov rbp,qword ptr [rbx+0x18]
0x2292: mov esi,0x2c
0x2297: mov rdi,rbp
0x229a: call 0x1830
0x229a: jump address is 0x1830
0x1830: jmp qword ptr [rip+0x20665a]
Execute the function: strchr

0x1830: the return address is 0x229f
0x229f: test rax,rax
0x22a2: je 0x22ab
0x22a2: jump address is 0x22ab
0x22a4: mov byte ptr [rax],0x0
0x22a7: mov rbp,qword ptr [rbx+0x18]
0x22ab: mov rsi,qword ptr [rbx]
0x22ae: mov rdi,rbp
0x22b1: call 0x20d0
0x22b1: jump address is 0x20d0
0x20d0: push r14
0x20d2: push r13
0x20d4: mov r13,rdi
0x20d7: push r12
0x20d9: push rbp
0x20da: mov rbp,rsi
0x20dd: push rbx
0x20de: xor ebx,ebx
0x20e0: call 0x17f0
0x20e0: jump address is 0x17f0
0x17f0: jmp qword ptr [rip+0x20667a]
Execute the function: strlen

0x17f0: the return address is 0x20e5
0x20e5: lea r12,[rax+0x1]
0x20e9: mov rdx,r13
0x20ec: nop dword ptr [rax+0x0]
0x20f0: movzx ecx,byte ptr [rdx]
0x20f3: add rdx,0x1
0x20f7: cmp cl,0x26
0x20fa: je 0x21f0
0x20fa: jump address is 0x21f0
0x2100: test cl,cl
0x2102: jne 0x20f0
0x2102: jump address is 0x20f0
Block exists: movzx ecx,byte ptr [rdx] at address 0x20f0 is visited for 1 times

0x2104: test rbx,rbx
0x2107: je 0x214b
0x2107: jump address is 0x214b
0x214b: mov rdi,r12
0x214e: call 0x54c0
0x214e: jump address is 0x54c0
0x54c0: push rbx
0x54c1: mov rbx,rdi
0x54c4: call 0x1930
0x54c4: jump address is 0x1930
0x1930: jmp qword ptr [rip+0x2065da]
Execute the function: malloc

0x1930: the return address is 0x54c9
0x54c9: test rax,rax
0x54cc: jne 0x54d3
0x54cc: jump address is 0x54d3
0x54d3: pop rbx
0x54d4: ret
0x54d4: the return address is 0x2153
0x2153: mov r12,rax
0x2156: movzx eax,byte ptr [r13+0x0]
0x215b: mov rbx,r12
0x215e: test al,al
0x2160: jne 0x217b
0x2160: jump address is 0x217b
0x2162: jmp 0x21df
0x2162: jump address is 0x21df
0x21df: mov byte ptr [rbx],0x0
0x21e2: mov rax,r12
0x21e5: pop rbx
0x21e6: pop rbp
0x21e7: pop r12
0x21e9: pop r13
0x21eb: pop r14
0x21ed: ret
0x21ed: the return address is 0x22b6
0x22b6: lea rsi,[rip+0x4043]
0x22bd: mov rdx,rax
0x22c0: mov rbp,rax
0x22c3: mov edi,0x1
0x22c8: xor eax,eax
0x22ca: call 0x19a0
0x22ca: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x22cf
0x22cf: mov rdi,rbp
0x22d2: call 0x16f0
0x22d2: jump address is 0x16f0
0x16f0: jmp qword ptr [rip+0x2066fa]
Execute the function: free

0x16f0: the return address is 0x22d7
0x22d7: mov rdi,qword ptr [rip+0x205dca]
0x22de: mov rax,qword ptr [rdi+0x28]
0x22e2: cmp rax,qword ptr [rdi+0x30]
0x22e6: jae 0x25c0
0x22e6: jump address is 0x25c0
0x22ec: lea rdx,[rax+0x1]
0x22f0: mov qword ptr [rdi+0x28],rdx
0x22f4: mov byte ptr [rax],0xa
0x22f7: cmp byte ptr [rip+0x205d14],0x0
0x22fe: jne 0x2360
0x22fe: jump address is 0x2360
0x2300: cmp byte ptr [rip+0x205d0d],0x0
0x2307: jne 0x23ff
0x2307: jump address is 0x23ff
0x230d: cmp byte ptr [rip+0x205cff],0x0
0x2314: jne 0x24c6
0x2314: jump address is 0x24c6
0x231a: mov rdi,qword ptr [rip+0x205d87]
0x2321: mov rax,qword ptr [rdi+0x28]
0x2325: cmp rax,qword ptr [rdi+0x30]
0x2329: jae 0x25d0
0x2329: jump address is 0x25d0
0x232f: lea rdx,[rax+0x1]
0x2333: mov qword ptr [rdi+0x28],rdx
0x2337: mov byte ptr [rax],0xa
0x233a: mov rax,qword ptr [rsp+0x408]
0x2342: xor rax,qword ptr fs:0x28
0x234b: jne 0x25ef
0x234b: jump address is 0x25ef
0x2351: add rsp,0x418
0x2358: pop rbx
0x2359: pop rbp
0x235a: pop r12
0x235c: pop r13
0x235e: ret
0x235e: the return address is 0x1cdd
0x1cdd: cmp r12,rbx
0x1ce0: jne 0x1cd0
0x1ce0: jump address is 0x1cd0
Block exists: mov rdi,qword ptr [r12] at address 0x1cd0 is visited for 1 times

0x1ce2: xor eax,eax
0x1ce4: mov rcx,qword ptr [rsp+0x18]
0x1ce9: xor rcx,qword ptr fs:0x28
0x1cf2: jne 0x1f82
0x1cf2: jump address is 0x1f82
0x1cf8: add rsp,0x28
0x1cfc: pop rbx
0x1cfd: pop rbp
0x1cfe: pop r12
0x1d00: pop r13
0x1d02: pop r14
0x1d04: pop r15
0x1d06: ret
The symbolic execution has been successfully terminated

0x25d0: mov esi,0xa
0x25d5: call 0x1850
0x25d5: jump address is 0x1850
0x1850: jmp qword ptr [rip+0x20664a]
Execute the function: __overflow

0x24c6: mov rdi,qword ptr [rbx+0x20]
0x24ca: call 0x17f0
0x24ca: jump address is 0x17f0
0x17f0: jmp qword ptr [rip+0x20667a]
Execute the function: strlen

0x17f0: the return address is 0x24cf
0x24cf: lea rdi,[rax+0x7]
0x24d3: call 0x54c0
0x24d3: jump address is 0x54c0
0x54c0: push rbx
0x54c1: mov rbx,rdi
0x54c4: call 0x1930
0x54c4: jump address is 0x1930
0x1930: jmp qword ptr [rip+0x2065da]
Execute the function: malloc

0x1930: the return address is 0x54c9
0x54c9: test rax,rax
0x54cc: jne 0x54d3
0x54cc: jump address is 0x54d3
0x54d3: pop rbx
0x54d4: ret
0x54d4: the return address is 0x24d8
0x24d8: mov rsi,qword ptr [rbx+0x20]
0x24dc: mov rdi,rax
0x24df: mov r12,rax
0x24e2: call 0x17c0
0x24e2: jump address is 0x17c0
0x17c0: jmp qword ptr [rip+0x206692]
Execute the function: stpcpy

0x17c0: the return address is 0x24e7
0x24e7: mov edx,0x6e61
0x24ec: lea rsi,[rip+0x3e08]
0x24f3: mov dword ptr [rax],0x6c702e2f
0x24f9: mov word ptr [rax+0x4],dx
0x24fd: mov byte ptr [rax+0x6],0x0
0x2501: mov rdi,r12
0x2504: call 0x19f0
0x2504: jump address is 0x19f0
0x19f0: jmp qword ptr [rip+0x20657a]
Execute the function: fopen

0x19f0: the return address is 0x2509
0x2509: test rax,rax
0x250c: mov rbx,rax
0x250f: je 0x2579
0x250f: jump address is 0x2579
0x2511: lea rsi,[rip+0x3797]
0x2518: mov edx,0x5
0x251d: xor edi,edi
0x251f: mov rbp,rsp
0x2522: call 0x17d0
0x2522: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2527
0x2527: mov edi,0x1
0x252c: mov rsi,rax
0x252f: xor eax,eax
0x2531: call 0x19a0
0x2531: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2536
0x2536: jmp 0x2557
0x2536: jump address is 0x2557
0x2557: mov rcx,rbx
0x255a: mov edx,0x400
0x255f: mov esi,0x1
0x2564: mov rdi,rbp
0x2567: call 0x1770
0x2567: jump address is 0x1770
0x1770: jmp qword ptr [rip+0x2066ba]
Execute the function: fread_unlocked

0x1770: the return address is 0x256c
0x256c: test rax,rax
0x256f: jne 0x2540
0x256f: jump address is 0x2540
0x2571: mov rdi,rbx
0x2574: call 0x5750
0x2574: jump address is 0x5750
0x5750: push r12
0x5752: push rbp
0x5753: push rbx
0x5754: mov rbx,rdi
0x5757: call 0x1910
0x5757: jump address is 0x1910
0x1910: jmp qword ptr [rip+0x2065ea]
Execute the function: fileno

0x1910: the return address is 0x575c
0x575c: test eax,eax
0x575e: mov rdi,rbx
0x5761: js 0x57b7
0x5761: jump address is 0x57b7
0x5763: call 0x1960
0x5763: jump address is 0x1960
0x1960: jmp qword ptr [rip+0x2065c2]
Execute the function: __freading

0x1960: the return address is 0x5768
0x5768: test eax,eax
0x576a: jne 0x5798
0x576a: jump address is 0x5798
0x576c: mov rdi,rbx
0x576f: call 0x57d0
0x576f: jump address is 0x57d0
0x57d0: test rdi,rdi
0x57d3: push rbx
0x57d4: mov rbx,rdi
0x57d7: je 0x57ea
0x57d7: jump address is 0x57ea
0x57d9: call 0x1960
0x57d9: jump address is 0x1960
0x1960: jmp qword ptr [rip+0x2065c2]
Execute the function: __freading

0x1960: the return address is 0x57de
0x57de: test eax,eax
0x57e0: je 0x57ea
0x57e0: jump address is 0x57ea
Block exists: mov rdi,rbx at address 0x57ea is visited for 1 times

0x57e2: test dword ptr [rbx],0x100
0x57e8: jne 0x57f8
0x57e8: jump address is 0x57f8
Block exists: mov rdi,rbx at address 0x57ea is visited for 1 times

0x57f8: mov rdi,rbx
0x57fb: mov edx,0x1
0x5800: xor esi,esi
0x5802: call 0x5810
0x5802: jump address is 0x5810
0x5810: mov rax,qword ptr [rdi+0x8]
0x5814: cmp qword ptr [rdi+0x10],rax
0x5818: je 0x5820
0x5818: jump address is 0x5820
0x581a: jmp 0x19e0
0x581a: jump address is 0x19e0
0x19e0: jmp qword ptr [rip+0x206582]
Execute the function: fseeko

0x19e0: the return address is 0x5807
0x5807: mov rdi,rbx
0x580a: pop rbx
0x580b: jmp 0x1940
0x580b: jump address is 0x1940
0x1940: jmp qword ptr [rip+0x2065d2]
Execute the function: fflush

0x1940: the return address is 0x5774
0x5774: test eax,eax
0x5776: je 0x57b4
0x5776: jump address is 0x57b4
0x5778: call 0x1720
0x5778: jump address is 0x1720
0x1720: jmp qword ptr [rip+0x2066e2]
Execute the function: __errno_location

0x1720: the return address is 0x577d
0x577d: mov r12d,dword ptr [rax]
0x5780: mov rdi,rbx
0x5783: mov rbp,rax
0x5786: call 0x17a0
0x5786: jump address is 0x17a0
0x17a0: jmp qword ptr [rip+0x2066a2]
Execute the function: fclose

0x17a0: the return address is 0x578b
0x578b: test r12d,r12d
0x578e: jne 0x57c0
0x578e: jump address is 0x57c0
0x5790: pop rbx
0x5791: pop rbp
0x5792: pop r12
0x5794: ret
0x5794: the return address is 0x2579
Block exists: mov rdi,r12 at address 0x2579 is visited for 1 times

0x57c0: mov dword ptr [rbp+0x0],r12d
0x57c4: mov eax,0xffffffff
0x57c9: jmp 0x5790
0x57c9: jump address is 0x5790
Block exists: pop rbx at address 0x5790 is visited for 1 times

0x57b4: mov rdi,rbx
0x57b7: pop rbx
0x57b8: pop rbp
0x57b9: pop r12
0x57bb: jmp 0x17a0
0x57bb: jump address is 0x17a0
0x17a0: jmp qword ptr [rip+0x2066a2]
Execute the function: fclose

0x17a0: the return address is 0x2579
Block exists: mov rdi,r12 at address 0x2579 is visited for 1 times

0x5820: mov rax,qword ptr [rdi+0x20]
0x5824: cmp qword ptr [rdi+0x28],rax
0x5828: jne 0x581a
0x5828: jump address is 0x581a
0x582a: cmp qword ptr [rdi+0x48],0x0
0x582f: jne 0x581a
0x582f: jump address is 0x581a
0x5831: push r12
0x5833: push rbp
0x5834: mov r12d,edx
0x5837: push rbx
0x5838: mov rbp,rsi
0x583b: mov rbx,rdi
0x583e: call 0x1910
0x583e: jump address is 0x1910
0x1910: jmp qword ptr [rip+0x2065ea]
Execute the function: fileno

0x1910: the return address is 0x5843
0x5843: mov edx,r12d
0x5846: mov rsi,rbp
0x5849: mov edi,eax
0x584b: call 0x1870
0x584b: jump address is 0x1870
0x1870: jmp qword ptr [rip+0x20663a]
Execute the function: lseek

0x1870: the return address is 0x5850
0x5850: cmp rax,0xffffffffffffffff
0x5854: je 0x5862
0x5854: jump address is 0x5862
0x5856: and dword ptr [rbx],0xffffffef
0x5859: mov qword ptr [rbx+0x90],rax
0x5860: xor eax,eax
0x5862: pop rbx
0x5863: pop rbp
0x5864: pop r12
0x5866: ret
0x5866: the return address is 0x5807
0x5807: mov rdi,rbx
0x580a: pop rbx
0x580b: jmp 0x1940
0x580b: jump address is 0x1940
0x1940: jmp qword ptr [rip+0x2065d2]
Execute the function: fflush

0x1940: the return address is 0x5774
0x5774: test eax,eax
0x5776: je 0x57b4
0x5776: jump address is 0x57b4
0x5778: call 0x1720
0x5778: jump address is 0x1720
0x1720: jmp qword ptr [rip+0x2066e2]
Execute the function: __errno_location

0x1720: the return address is 0x577d
0x577d: mov r12d,dword ptr [rax]
0x5780: mov rdi,rbx
0x5783: mov rbp,rax
0x5786: call 0x17a0
0x5786: jump address is 0x17a0
0x17a0: jmp qword ptr [rip+0x2066a2]
Execute the function: fclose

0x17a0: the return address is 0x578b
0x578b: test r12d,r12d
0x578e: jne 0x57c0
0x578e: jump address is 0x57c0
0x5790: pop rbx
0x5791: pop rbp
0x5792: pop r12
0x5794: ret
0x5794: the return address is 0x2579
0x2579: mov rdi,r12
0x257c: call 0x16f0
0x257c: jump address is 0x16f0
0x16f0: jmp qword ptr [rip+0x2066fa]
Execute the function: free

0x16f0: the return address is 0x2581
0x2581: jmp 0x231a
0x2581: jump address is 0x231a
0x231a: mov rdi,qword ptr [rip+0x205d87]
0x2321: mov rax,qword ptr [rdi+0x28]
0x2325: cmp rax,qword ptr [rdi+0x30]
0x2329: jae 0x25d0
0x2329: jump address is 0x25d0
0x232f: lea rdx,[rax+0x1]
0x2333: mov qword ptr [rdi+0x28],rdx
0x2337: mov byte ptr [rax],0xa
0x233a: mov rax,qword ptr [rsp+0x408]
0x2342: xor rax,qword ptr fs:0x28
0x234b: jne 0x25ef
0x234b: jump address is 0x25ef
0x2351: add rsp,0x418
0x2358: pop rbx
0x2359: pop rbp
0x235a: pop r12
0x235c: pop r13
0x235e: ret
0x235e: the return address is 0x1cdd
0x1cdd: cmp r12,rbx
0x1ce0: jne 0x1cd0
0x1ce0: jump address is 0x1cd0
Block exists: mov rdi,qword ptr [r12] at address 0x1cd0 is visited for 1 times

0x1ce2: xor eax,eax
0x1ce4: mov rcx,qword ptr [rsp+0x18]
0x1ce9: xor rcx,qword ptr fs:0x28
0x1cf2: jne 0x1f82
0x1cf2: jump address is 0x1f82
0x1cf8: add rsp,0x28
0x1cfc: pop rbx
0x1cfd: pop rbp
0x1cfe: pop r12
0x1d00: pop r13
0x1d02: pop r14
0x1d04: pop r15
0x1d06: ret
The symbolic execution has been successfully terminated

0x25d0: mov esi,0xa
0x25d5: call 0x1850
0x25d5: jump address is 0x1850
0x1850: jmp qword ptr [rip+0x20664a]
Execute the function: __overflow

0x57c0: mov dword ptr [rbp+0x0],r12d
0x57c4: mov eax,0xffffffff
0x57c9: jmp 0x5790
0x57c9: jump address is 0x5790
Block exists: pop rbx at address 0x5790 is visited for 2 times

0x57b4: mov rdi,rbx
0x57b7: pop rbx
0x57b8: pop rbp
0x57b9: pop r12
0x57bb: jmp 0x17a0
0x57bb: jump address is 0x17a0
0x17a0: jmp qword ptr [rip+0x2066a2]
Execute the function: fclose

0x17a0: the return address is 0x2579
Block exists: mov rdi,r12 at address 0x2579 is visited for 2 times

0x5862: pop rbx
0x5863: pop rbp
0x5864: pop r12
0x5866: ret
0x5866: the return address is 0x5807
Block exists: mov rdi,rbx at address 0x5807 is visited for 2 times

0x581a: jmp 0x19e0
0x581a: jump address is 0x19e0
0x19e0: jmp qword ptr [rip+0x206582]
Execute the function: fseeko

0x19e0: the return address is 0x5807
Block exists: mov rdi,rbx at address 0x5807 is visited for 2 times

0x581a: jmp 0x19e0
0x581a: jump address is 0x19e0
0x19e0: jmp qword ptr [rip+0x206582]
Execute the function: fseeko

0x19e0: the return address is 0x5807
Block exists: mov rdi,rbx at address 0x5807 is visited for 2 times

0x57ea: mov rdi,rbx
0x57ed: pop rbx
0x57ee: jmp 0x1940
0x57ee: jump address is 0x1940
0x1940: jmp qword ptr [rip+0x2065d2]
Execute the function: fflush

0x1940: the return address is 0x5774
Block exists: test eax,eax at address 0x5774 is visited for 2 times

0x5798: mov rdi,rbx
0x579b: call 0x1910
0x579b: jump address is 0x1910
0x1910: jmp qword ptr [rip+0x2065ea]
Execute the function: fileno

0x1910: the return address is 0x57a0
0x57a0: xor esi,esi
0x57a2: mov edx,0x1
0x57a7: mov edi,eax
0x57a9: call 0x1870
0x57a9: jump address is 0x1870
0x1870: jmp qword ptr [rip+0x20663a]
Execute the function: lseek

0x1870: the return address is 0x57ae
0x57ae: cmp rax,0xffffffffffffffff
0x57b2: jne 0x576c
0x57b2: jump address is 0x576c
Block exists: mov rdi,rbx at address 0x576c is visited for 1 times

Block exists: mov rdi,rbx at address 0x57b4 is visited for 2 times

0x57b7: pop rbx
0x57b8: pop rbp
0x57b9: pop r12
0x57bb: jmp 0x17a0
0x57bb: jump address is 0x17a0
0x17a0: jmp qword ptr [rip+0x2066a2]
Execute the function: fclose

0x17a0: the return address is 0x2579
Block exists: mov rdi,r12 at address 0x2579 is visited for 2 times

0x2540: mov rcx,qword ptr [rip+0x205b61]
0x2547: mov rdx,rax
0x254a: mov esi,0x1
0x254f: mov rdi,rbp
0x2552: call 0x1970
0x2552: jump address is 0x1970
0x1970: jmp qword ptr [rip+0x2065ba]
Execute the function: fwrite_unlocked

0x1970: the return address is 0x2557
Block exists: mov rcx,rbx at address 0x2557 is visited for 1 times

0x2579: mov rdi,r12
0x257c: call 0x16f0
0x257c: jump address is 0x16f0
0x16f0: jmp qword ptr [rip+0x2066fa]
Execute the function: free

0x16f0: the return address is 0x2581
0x2581: jmp 0x231a
0x2581: jump address is 0x231a
Block exists: mov rdi,qword ptr [rip+0x205d87] at address 0x231a is visited for 2 times

0x23ff: mov rdi,qword ptr [rbx+0x20]
0x2403: call 0x17f0
0x2403: jump address is 0x17f0
0x17f0: jmp qword ptr [rip+0x20667a]
Execute the function: strlen

0x17f0: the return address is 0x2408
0x2408: lea rdi,[rax+0xa]
0x240c: call 0x54c0
0x240c: jump address is 0x54c0
Execute the function: xmalloc

0x240c: the return address is 0x2411
0x2411: mov rsi,qword ptr [rbx+0x20]
0x2415: mov rdi,rax
0x2418: mov r13,rax
0x241b: call 0x17c0
0x241b: jump address is 0x17c0
0x17c0: jmp qword ptr [rip+0x206692]
Execute the function: stpcpy

0x17c0: the return address is 0x2420
0x2420: movabs rcx,0x63656a6f72702e2f
0x242a: lea rsi,[rip+0x3eca]
0x2431: mov rdi,r13
0x2434: mov qword ptr [rax],rcx
0x2437: mov ecx,0x74
0x243c: mov word ptr [rax+0x8],cx
0x2440: call 0x19f0
0x2440: jump address is 0x19f0
0x19f0: jmp qword ptr [rip+0x20657a]
Execute the function: fopen

0x19f0: the return address is 0x2445
0x2445: test rax,rax
0x2448: mov r12,rax
0x244b: je 0x24b1
0x244b: jump address is 0x24b1
0x244d: lea rsi,[rip+0x3851]
0x2454: mov edx,0x5
0x2459: xor edi,edi
0x245b: mov rbp,rsp
0x245e: call 0x17d0
0x245e: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2463
0x2463: mov edi,0x1
0x2468: mov rsi,rax
0x246b: xor eax,eax
0x246d: call 0x19a0
0x246d: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2472
0x2472: jmp 0x248f
0x2472: jump address is 0x248f
0x248f: mov rcx,r12
0x2492: mov edx,0x400
0x2497: mov esi,0x1
0x249c: mov rdi,rbp
0x249f: call 0x1770
0x249f: jump address is 0x1770
0x1770: jmp qword ptr [rip+0x2066ba]
Execute the function: fread_unlocked

0x1770: the return address is 0x24a4
0x24a4: test rax,rax
0x24a7: jne 0x2478
0x24a7: jump address is 0x2478
0x24a9: mov rdi,r12
0x24ac: call 0x5750
0x24ac: jump address is 0x5750
Execute the function: rpl_fclose

0x24ac: the return address is 0x24b1
Block exists: mov rdi,r13 at address 0x24b1 is visited for 1 times

0x2478: mov rcx,qword ptr [rip+0x205c29]
0x247f: mov rdx,rax
0x2482: mov esi,0x1
0x2487: mov rdi,rbp
0x248a: call 0x1970
0x248a: jump address is 0x1970
0x1970: jmp qword ptr [rip+0x2065ba]
Execute the function: fwrite_unlocked

0x1970: the return address is 0x248f
Block exists: mov rcx,r12 at address 0x248f is visited for 1 times

0x24b1: mov rdi,r13
0x24b4: call 0x16f0
0x24b4: jump address is 0x16f0
0x16f0: jmp qword ptr [rip+0x2066fa]
Execute the function: free

0x16f0: the return address is 0x24b9
0x24b9: cmp byte ptr [rip+0x205b53],0x0
0x24c0: je 0x231a
0x24c0: jump address is 0x231a
Block exists: mov rdi,qword ptr [rip+0x205d87] at address 0x231a is visited for 2 times

Block exists: mov rdi,qword ptr [rbx+0x20] at address 0x24c6 is visited for 1 times

0x2360: lea rsi,[rip+0x3924]
0x2367: mov edx,0x5
0x236c: xor edi,edi
0x236e: call 0x17d0
0x236e: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2373
0x2373: mov edi,0x1
0x2378: mov rsi,rax
0x237b: xor eax,eax
0x237d: call 0x19a0
0x237d: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2382
0x2382: mov rdx,qword ptr [rbx+0x20]
0x2386: lea rsi,[rip+0x390a]
0x238d: mov edi,0x1
0x2392: xor eax,eax
0x2394: call 0x19a0
0x2394: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2399
0x2399: lea rsi,[rip+0x38fd]
0x23a0: mov edx,0x5
0x23a5: xor edi,edi
0x23a7: call 0x17d0
0x23a7: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x23ac
0x23ac: mov edi,0x1
0x23b1: mov rsi,rax
0x23b4: xor eax,eax
0x23b6: call 0x19a0
0x23b6: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x23bb
0x23bb: mov rdx,qword ptr [rbx+0x28]
0x23bf: lea rsi,[rip+0x3f3a]
0x23c6: mov edi,0x1
0x23cb: xor eax,eax
0x23cd: call 0x19a0
0x23cd: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x23d2
0x23d2: mov rdi,qword ptr [rip+0x205ccf]
0x23d9: mov rax,qword ptr [rdi+0x28]
0x23dd: cmp rax,qword ptr [rdi+0x30]
0x23e1: jae 0x25e0
0x23e1: jump address is 0x25e0
0x23e7: cmp byte ptr [rip+0x205c26],0x0
0x23ee: lea rdx,[rax+0x1]
0x23f2: mov qword ptr [rdi+0x28],rdx
0x23f6: mov byte ptr [rax],0xa
0x23f9: je 0x230d
0x23f9: jump address is 0x230d
Block exists: cmp byte ptr [rip+0x205cff],0x0 at address 0x230d is visited for 1 times

Block exists: mov rdi,qword ptr [rbx+0x20] at address 0x23ff is visited for 1 times

0x25e0: mov esi,0xa
0x25e5: call 0x1850
0x25e5: jump address is 0x1850
0x1850: jmp qword ptr [rip+0x20664a]
Execute the function: __overflow

0x25c0: mov esi,0xa
0x25c5: call 0x1850
0x25c5: jump address is 0x1850
0x1850: jmp qword ptr [rip+0x20664a]
Execute the function: __overflow

0x217b: cmp al,0x26
0x217d: jne 0x2168
0x217d: jump address is 0x2168
0x217f: call 0x1a80
0x217f: jump address is 0x1a80
0x1a80: jmp qword ptr [rip+0x206532]
Execute the function: __ctype_b_loc

0x1a80: the return address is 0x2184
0x2184: movzx r14d,byte ptr [rbp+0x0]
0x2189: mov rax,qword ptr [rax]
0x218c: mov rcx,rbp
0x218f: test byte ptr [rax+r14*2+0x1],0x2
0x2195: mov rdx,r14
0x2198: je 0x21b5
0x2198: jump address is 0x21b5
0x219a: call 0x16d0
0x219a: jump address is 0x16d0
0x16d0: jmp qword ptr [rip+0x20670a]
Execute the function: __ctype_toupper_loc

0x16d0: the return address is 0x219f
0x219f: mov rax,qword ptr [rax]
0x21a2: movzx edx,byte ptr [rbp+0x1]
0x21a6: lea rcx,[rbp+0x1]
0x21aa: add rbx,0x1
0x21ae: mov eax,dword ptr [rax+r14*4]
0x21b2: mov byte ptr [rbx-0x1],al
0x21b5: test dl,dl
0x21b7: je 0x216e
0x21b7: jump address is 0x216e
0x21b9: nop dword ptr [rax+0x0]
0x21c0: add rcx,0x1
0x21c4: add rbx,0x1
0x21c8: mov byte ptr [rbx-0x1],dl
0x21cb: movzx edx,byte ptr [rcx]
0x21ce: test dl,dl
0x21d0: jne 0x21c0
0x21d0: jump address is 0x21c0
0x21d2: add r13,0x1
0x21d6: movzx eax,byte ptr [r13+0x0]
0x21db: test al,al
0x21dd: jne 0x217b
0x21dd: jump address is 0x217b
0x21df: mov byte ptr [rbx],0x0
0x21e2: mov rax,r12
0x21e5: pop rbx
0x21e6: pop rbp
0x21e7: pop r12
0x21e9: pop r13
0x21eb: pop r14
0x21ed: ret
0x21ed: the return address is 0x22b6
0x22b6: lea rsi,[rip+0x4043]
0x22bd: mov rdx,rax
0x22c0: mov rbp,rax
0x22c3: mov edi,0x1
0x22c8: xor eax,eax
0x22ca: call 0x19a0
0x22ca: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x22cf
0x22cf: mov rdi,rbp
0x22d2: call 0x16f0
0x22d2: jump address is 0x16f0
0x16f0: jmp qword ptr [rip+0x2066fa]
Execute the function: free

0x16f0: the return address is 0x22d7
0x22d7: mov rdi,qword ptr [rip+0x205dca]
0x22de: mov rax,qword ptr [rdi+0x28]
0x22e2: cmp rax,qword ptr [rdi+0x30]
0x22e6: jae 0x25c0
0x22e6: jump address is 0x25c0
Block exists: mov esi,0xa at address 0x25c0 is visited for 1 times

Block exists: lea rdx,[rax+0x1] at address 0x22ec is visited for 1 times

0x217b: cmp al,0x26
0x217d: jne 0x2168
0x217d: jump address is 0x2168
0x217f: call 0x1a80
0x217f: jump address is 0x1a80
0x1a80: jmp qword ptr [rip+0x206532]
Execute the function: __ctype_b_loc

0x1a80: the return address is 0x2184
0x2184: movzx r14d,byte ptr [rbp+0x0]
0x2189: mov rax,qword ptr [rax]
0x218c: mov rcx,rbp
0x218f: test byte ptr [rax+r14*2+0x1],0x2
0x2195: mov rdx,r14
0x2198: je 0x21b5
0x2198: jump address is 0x21b5
0x219a: call 0x16d0
0x219a: jump address is 0x16d0
0x16d0: jmp qword ptr [rip+0x20670a]
Execute the function: __ctype_toupper_loc

0x16d0: the return address is 0x219f
0x219f: mov rax,qword ptr [rax]
0x21a2: movzx edx,byte ptr [rbp+0x1]
0x21a6: lea rcx,[rbp+0x1]
0x21aa: add rbx,0x1
0x21ae: mov eax,dword ptr [rax+r14*4]
0x21b2: mov byte ptr [rbx-0x1],al
0x21b5: test dl,dl
0x21b7: je 0x216e
0x21b7: jump address is 0x216e
0x21b9: nop dword ptr [rax+0x0]
0x21c0: add rcx,0x1
0x21c4: add rbx,0x1
0x21c8: mov byte ptr [rbx-0x1],dl
0x21cb: movzx edx,byte ptr [rcx]
0x21ce: test dl,dl
0x21d0: jne 0x21c0
0x21d0: jump address is 0x21c0
Block exists: add rcx,0x1 at address 0x21c0 is visited for 2 times

0x21d2: add r13,0x1
0x21d6: movzx eax,byte ptr [r13+0x0]
0x21db: test al,al
0x21dd: jne 0x217b
0x21dd: jump address is 0x217b
Block exists: cmp al,0x26 at address 0x217b is visited for 2 times

Block exists: mov byte ptr [rbx],0x0 at address 0x21df is visited for 2 times

0x216e: add r13,0x1
0x2172: movzx eax,byte ptr [r13+0x0]
0x2177: test al,al
0x2179: je 0x21df
0x2179: jump address is 0x21df
Block exists: mov byte ptr [rbx],0x0 at address 0x21df is visited for 2 times

Block exists: cmp al,0x26 at address 0x217b is visited for 2 times

0x21b5: test dl,dl
0x21b7: je 0x216e
0x21b7: jump address is 0x216e
Block exists: add r13,0x1 at address 0x216e is visited for 2 times

Block exists: nop dword ptr [rax+0x0] at address 0x21b9 is visited for 2 times

0x2168: mov byte ptr [rbx],al
0x216a: add rbx,0x1
0x216e: add r13,0x1
0x2172: movzx eax,byte ptr [r13+0x0]
0x2177: test al,al
0x2179: je 0x21df
0x2179: jump address is 0x21df
Block exists: mov byte ptr [rbx],0x0 at address 0x21df is visited for 2 times

Block exists: cmp al,0x26 at address 0x217b is visited for 2 times

0x21c0: add rcx,0x1
0x21c4: add rbx,0x1
0x21c8: mov byte ptr [rbx-0x1],dl
0x21cb: movzx edx,byte ptr [rcx]
0x21ce: test dl,dl
0x21d0: jne 0x21c0
0x21d0: jump address is 0x21c0
Block exists: add rcx,0x1 at address 0x21c0 is visited for 2 times

Block exists: add r13,0x1 at address 0x21d2 is visited for 2 times

0x216e: add r13,0x1
0x2172: movzx eax,byte ptr [r13+0x0]
0x2177: test al,al
0x2179: je 0x21df
0x2179: jump address is 0x21df
Block exists: mov byte ptr [rbx],0x0 at address 0x21df is visited for 2 times

Block exists: cmp al,0x26 at address 0x217b is visited for 2 times

0x21b5: test dl,dl
0x21b7: je 0x216e
0x21b7: jump address is 0x216e
Block exists: add r13,0x1 at address 0x216e is visited for 2 times

Block exists: nop dword ptr [rax+0x0] at address 0x21b9 is visited for 2 times

0x2168: mov byte ptr [rbx],al
0x216a: add rbx,0x1
0x216e: add r13,0x1
0x2172: movzx eax,byte ptr [r13+0x0]
0x2177: test al,al
0x2179: je 0x21df
0x2179: jump address is 0x21df
Block exists: mov byte ptr [rbx],0x0 at address 0x21df is visited for 2 times

Block exists: cmp al,0x26 at address 0x217b is visited for 2 times

0x21f0: add rbx,0x1
0x21f4: jmp 0x20f0
0x21f4: jump address is 0x20f0
0x20f0: movzx ecx,byte ptr [rdx]
0x20f3: add rdx,0x1
0x20f7: cmp cl,0x26
0x20fa: je 0x21f0
0x20fa: jump address is 0x21f0
0x2100: test cl,cl
0x2102: jne 0x20f0
0x2102: jump address is 0x20f0
Block exists: movzx ecx,byte ptr [rdx] at address 0x20f0 is visited for 2 times

0x2104: test rbx,rbx
0x2107: je 0x214b
0x2107: jump address is 0x214b
0x2109: mov rdi,rbp
0x210c: sub r12,rbx
0x210f: call 0x17f0
0x210f: jump address is 0x17f0
0x17f0: jmp qword ptr [rip+0x20667a]
Execute the function: strlen

0x17f0: the return address is 0x2114
0x2114: mov rcx,rax
0x2117: xor esi,esi
0x2119: imul rcx,rbx
0x211d: add r12,rcx
0x2120: setb sil
0x2124: mul rbx
0x2127: mov edx,0x1
0x212c: seto al
0x212f: test rcx,rcx
0x2132: movzx eax,al
0x2135: cmovs rax,rdx
0x2139: test rsi,rsi
0x213c: jne 0x21f9
0x213c: jump address is 0x21f9
0x2142: test rax,rax
0x2145: jne 0x21f9
0x2145: jump address is 0x21f9
Block exists: mov rdi,r12 at address 0x214b is visited for 2 times

0x21f9: call 0x5710
0x21f9: jump address is 0x5710
0x5710: lea rsi,[rip+0x1478]
0x5717: sub rsp,0x8
0x571b: mov edx,0x5
0x5720: xor edi,edi
0x5722: call 0x17d0
0x5722: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x5727
0x5727: mov edi,dword ptr [rip+0x2028f3]
0x572d: lea rdx,[rip+0xbcd]
0x5734: mov rcx,rax
0x5737: xor esi,esi
0x5739: xor eax,eax
0x573b: call 0x19d0
0x573b: jump address is 0x19d0
0x19d0: jmp qword ptr [rip+0x20658a]
Execute the function: error

0x21f9: call 0x5710
0x21f9: jump address is 0x5710
Block exists: lea rsi,[rip+0x1478] at address 0x5710 is visited for 1 times

0x2135: cmovs rax,rdx
0x2139: test rsi,rsi
0x213c: jne 0x21f9
0x213c: jump address is 0x21f9
Block exists: test rax,rax at address 0x2142 is visited for 1 times

0x21f9: call 0x5710
0x21f9: jump address is 0x5710
Block exists: lea rsi,[rip+0x1478] at address 0x5710 is visited for 1 times

0x214b: mov rdi,r12
0x214e: call 0x54c0
0x214e: jump address is 0x54c0
Execute the function: xmalloc

0x214e: the return address is 0x2153
0x2153: mov r12,rax
0x2156: movzx eax,byte ptr [r13+0x0]
0x215b: mov rbx,r12
0x215e: test al,al
0x2160: jne 0x217b
0x2160: jump address is 0x217b
0x2162: jmp 0x21df
0x2162: jump address is 0x21df
0x21df: mov byte ptr [rbx],0x0
0x21e2: mov rax,r12
0x21e5: pop rbx
0x21e6: pop rbp
0x21e7: pop r12
0x21e9: pop r13
0x21eb: pop r14
0x21ed: ret
0x21ed: the return address is 0x22b6
0x22b6: lea rsi,[rip+0x4043]
0x22bd: mov rdx,rax
0x22c0: mov rbp,rax
0x22c3: mov edi,0x1
0x22c8: xor eax,eax
0x22ca: call 0x19a0
0x22ca: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x22cf
0x22cf: mov rdi,rbp
0x22d2: call 0x16f0
0x22d2: jump address is 0x16f0
0x16f0: jmp qword ptr [rip+0x2066fa]
Execute the function: free

0x16f0: the return address is 0x22d7
Block exists: mov rdi,qword ptr [rip+0x205dca] at address 0x22d7 is visited for 2 times

0x217b: cmp al,0x26
0x217d: jne 0x2168
0x217d: jump address is 0x2168
0x217f: call 0x1a80
0x217f: jump address is 0x1a80
0x1a80: jmp qword ptr [rip+0x206532]
Execute the function: __ctype_b_loc

0x1a80: the return address is 0x2184
0x2184: movzx r14d,byte ptr [rbp+0x0]
0x2189: mov rax,qword ptr [rax]
0x218c: mov rcx,rbp
0x218f: test byte ptr [rax+r14*2+0x1],0x2
0x2195: mov rdx,r14
0x2198: je 0x21b5
0x2198: jump address is 0x21b5
0x219a: call 0x16d0
0x219a: jump address is 0x16d0
0x16d0: jmp qword ptr [rip+0x20670a]
Execute the function: __ctype_toupper_loc

0x16d0: the return address is 0x219f
0x219f: mov rax,qword ptr [rax]
0x21a2: movzx edx,byte ptr [rbp+0x1]
0x21a6: lea rcx,[rbp+0x1]
0x21aa: add rbx,0x1
0x21ae: mov eax,dword ptr [rax+r14*4]
0x21b2: mov byte ptr [rbx-0x1],al
0x21b5: test dl,dl
0x21b7: je 0x216e
0x21b7: jump address is 0x216e
0x21b9: nop dword ptr [rax+0x0]
0x21c0: add rcx,0x1
0x21c4: add rbx,0x1
0x21c8: mov byte ptr [rbx-0x1],dl
0x21cb: movzx edx,byte ptr [rcx]
0x21ce: test dl,dl
0x21d0: jne 0x21c0
0x21d0: jump address is 0x21c0
Block exists: add rcx,0x1 at address 0x21c0 is visited for 2 times

0x21d2: add r13,0x1
0x21d6: movzx eax,byte ptr [r13+0x0]
0x21db: test al,al
0x21dd: jne 0x217b
0x21dd: jump address is 0x217b
Block exists: cmp al,0x26 at address 0x217b is visited for 3 times

0x21df: mov byte ptr [rbx],0x0
0x21e2: mov rax,r12
0x21e5: pop rbx
0x21e6: pop rbp
0x21e7: pop r12
0x21e9: pop r13
0x21eb: pop r14
0x21ed: ret
0x21ed: the return address is 0x22b6
0x22b6: lea rsi,[rip+0x4043]
0x22bd: mov rdx,rax
0x22c0: mov rbp,rax
0x22c3: mov edi,0x1
0x22c8: xor eax,eax
0x22ca: call 0x19a0
0x22ca: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x22cf
Block exists: mov rdi,rbp at address 0x22cf is visited for 3 times

0x216e: add r13,0x1
0x2172: movzx eax,byte ptr [r13+0x0]
0x2177: test al,al
0x2179: je 0x21df
0x2179: jump address is 0x21df
Block exists: mov byte ptr [rbx],0x0 at address 0x21df is visited for 4 times

Block exists: cmp al,0x26 at address 0x217b is visited for 3 times

0x21b5: test dl,dl
0x21b7: je 0x216e
0x21b7: jump address is 0x216e
Block exists: add r13,0x1 at address 0x216e is visited for 3 times

Block exists: nop dword ptr [rax+0x0] at address 0x21b9 is visited for 3 times

0x2168: mov byte ptr [rbx],al
0x216a: add rbx,0x1
0x216e: add r13,0x1
0x2172: movzx eax,byte ptr [r13+0x0]
0x2177: test al,al
0x2179: je 0x21df
0x2179: jump address is 0x21df
Block exists: mov byte ptr [rbx],0x0 at address 0x21df is visited for 4 times

Block exists: cmp al,0x26 at address 0x217b is visited for 3 times

0x21f0: add rbx,0x1
0x21f4: jmp 0x20f0
0x21f4: jump address is 0x20f0
Block exists: movzx ecx,byte ptr [rdx] at address 0x20f0 is visited for 2 times

0x22ab: mov rsi,qword ptr [rbx]
0x22ae: mov rdi,rbp
0x22b1: call 0x20d0
0x22b1: jump address is 0x20d0
Execute the function: create_fullname

0x22b1: the return address is 0x22b6
Block exists: lea rsi,[rip+0x4043] at address 0x22b6 is visited for 4 times

0x2590: lea rsi,[rip+0x36ef]
0x2597: xor edi,edi
0x2599: mov edx,0x5
0x259e: call 0x17d0
0x259e: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x25a3
0x25a3: lea rsi,[rip+0x3d56]
0x25aa: mov rdx,rax
0x25ad: mov edi,0x1
0x25b2: xor eax,eax
0x25b4: call 0x19a0
0x25b4: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x25b9
0x25b9: jmp 0x233a
0x25b9: jump address is 0x233a
Block exists: mov rax,qword ptr [rsp+0x408] at address 0x233a is visited for 1 times

0x1ce2: xor eax,eax
0x1ce4: mov rcx,qword ptr [rsp+0x18]
0x1ce9: xor rcx,qword ptr fs:0x28
0x1cf2: jne 0x1f82
0x1cf2: jump address is 0x1f82
Block exists: add rsp,0x28 at address 0x1cf8 is visited for 2 times

0x1f48: lea rsi,[rip+0x4359]
0x1f4f: mov edx,0x5
0x1f54: xor edi,edi
0x1f56: call 0x17d0
0x1f56: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1f5b
0x1f5b: xor esi,esi
0x1f5d: mov rdx,rax
0x1f60: xor edi,edi
0x1f62: xor eax,eax
0x1f64: call 0x19d0
0x1f64: jump address is 0x19d0
0x19d0: jmp qword ptr [rip+0x20658a]
Execute the function: error

0x1d07: lea rdx,[rsp+0x10]
0x1d0c: lea rsi,[rsp+0x8]
0x1d11: lea rdi,[rip+0x3ff2]
0x1d18: xor ecx,ecx
0x1d1a: lea r12,[rax*8+0x0]
0x1d22: mov qword ptr [rsp+0x10],0x0
0x1d2b: call 0x5960
0x1d2b: jump address is 0x5960
0x5960: push r15
0x5962: push r14
0x5964: xor r14d,r14d
0x5967: push r13
0x5969: mov r13d,ecx
0x596c: push r12
0x596e: push rbp
0x596f: push rbx
0x5970: mov r12d,r13d
0x5973: xor ebx,ebx
0x5975: xor ebp,ebp
0x5977: and r12d,0x2
0x597b: sub rsp,0x18
0x597f: and r13d,0x1
0x5983: mov qword ptr [rsp],rsi
0x5987: mov qword ptr [rsp+0x8],rdx
0x598c: call 0x16e0
0x598c: jump address is 0x16e0
0x16e0: jmp qword ptr [rip+0x206702]
Execute the function: utmpxname

0x16e0: the return address is 0x5991
0x5991: call 0x18d0
0x5991: jump address is 0x18d0
0x18d0: jmp qword ptr [rip+0x20660a]
Execute the function: setutxent

0x18d0: the return address is 0x5996
0x5996: call 0x19c0
0x5996: jump address is 0x19c0
0x19c0: jmp qword ptr [rip+0x206592]
Execute the function: getutxent

0x19c0: the return address is 0x599b
0x599b: test rax,rax
0x599e: mov r15,rax
0x59a1: je 0x5a11
0x59a1: jump address is 0x5a11
0x59a3: cmp word ptr [r15],0x7
0x59a8: jne 0x59b5
0x59a8: jump address is 0x59b5
0x59aa: cmp byte ptr [r15+0x2c],0x0
0x59af: jne 0x5a40
0x59af: jump address is 0x5a40
Block exists: test r12d,r12d at address 0x59b5 is visited for 1 times

0x5a40: mov edi,dword ptr [r15+0x4]
0x5a44: test edi,edi
0x5a46: jle 0x59ba
0x5a46: jump address is 0x59ba
0x5a4c: test r13b,r13b
0x5a4f: je 0x59ba
0x5a4f: jump address is 0x59ba
Block exists: cmp rbp,rbx at address 0x59ba is visited for 1 times

0x59ba: cmp rbp,rbx
0x59bd: je 0x5a80
0x59bd: jump address is 0x5a80
0x5a80: test r14,r14
0x5a83: je 0x5ab8
0x5a83: jump address is 0x5ab8
0x5ab8: test rbp,rbp
0x5abb: mov eax,0x1
0x5ac0: mov edx,0x180
0x5ac5: cmove rbp,rax
0x5ac9: mov rax,rdx
0x5acc: xor esi,esi
0x5ace: mul rbp
0x5ad1: jo 0x5ae2
0x5ad1: jump address is 0x5ae2
0x5ad3: test rax,rax
0x5ad6: js 0x5add
0x5ad6: jump address is 0x5add
0x5ad8: test rsi,rsi
0x5adb: je 0x5a9f
0x5adb: jump address is 0x5a9f
0x5a9f: lea rsi,[rbp+rbp*2+0x0]
0x5aa4: mov rdi,r14
0x5aa7: shl rsi,0x7
0x5aab: call 0x5520
0x5aab: jump address is 0x5520
0x5520: test rsi,rsi
0x5523: push rbx
0x5524: mov rbx,rsi
0x5527: jne 0x552e
0x5527: jump address is 0x552e
0x552e: mov rsi,rbx
0x5531: call 0x1980
0x5531: jump address is 0x1980
0x1980: jmp qword ptr [rip+0x2065b2]
Execute the function: realloc

0x1980: the return address is 0x5536
0x5536: test rax,rax
0x5539: jne 0x5540
0x5539: jump address is 0x5540
0x5540: pop rbx
0x5541: ret
0x5541: the return address is 0x5ab0
0x5ab0: mov r14,rax
0x5ab3: jmp 0x59c3
0x5ab3: jump address is 0x59c3
0x59c3: lea rax,[rbx+rbx*2]
0x59c7: mov rdx,qword ptr [r15]
0x59ca: mov rsi,r15
0x59cd: add rbx,0x1
0x59d1: shl rax,0x7
0x59d5: add rax,r14
0x59d8: mov qword ptr [rax],rdx
0x59db: lea rdi,[rax+0x8]
0x59df: mov rdx,qword ptr [r15+0x178]
0x59e6: and rdi,0xfffffffffffffff8
0x59ea: mov qword ptr [rax+0x178],rdx
0x59f1: sub rax,rdi
0x59f4: sub rsi,rax
0x59f7: add eax,0x180
0x59fc: shr eax,0x3
0x59ff: mov ecx,eax
0x5a01: rep movs qword ptr es:[rdi],qword ptr ds:[rsi]
0x5a04: call 0x19c0
0x5a04: jump address is 0x19c0
0x19c0: jmp qword ptr [rip+0x206592]
Execute the function: getutxent

0x19c0: the return address is 0x5a09
0x5a09: test rax,rax
0x5a0c: mov r15,rax
0x5a0f: jne 0x59a3
0x5a0f: jump address is 0x59a3
0x5a11: call 0x1790
0x5a11: jump address is 0x1790
0x1790: jmp qword ptr [rip+0x2066aa]
Execute the function: endutxent

0x1790: the return address is 0x5a16
0x5a16: mov rax,qword ptr [rsp]
0x5a1a: mov qword ptr [rax],rbx
0x5a1d: mov rax,qword ptr [rsp+0x8]
0x5a22: mov qword ptr [rax],r14
0x5a25: add rsp,0x18
0x5a29: xor eax,eax
0x5a2b: pop rbx
0x5a2c: pop rbp
0x5a2d: pop r12
0x5a2f: pop r13
0x5a31: pop r14
0x5a33: pop r15
0x5a35: ret
0x5a35: the return address is 0x1d30
0x1d30: test eax,eax
0x1d32: jne 0x1f87
0x1d32: jump address is 0x1f87
0x1d38: mov edi,0x2
0x1d3d: mov r13,qword ptr [rsp+0x10]
0x1d42: mov r14,qword ptr [rsp+0x8]
0x1d47: call 0x3070
0x1d47: jump address is 0x3070
0x3070: sub rsp,0x8
0x3074: xor esi,esi
0x3076: call 0x1990
0x3076: jump address is 0x1990
0x1990: jmp qword ptr [rip+0x2065aa]
Execute the function: setlocale

0x1990: the return address is 0x307b
0x307b: mov rdx,rax
0x307e: mov eax,0x1
0x3083: test rdx,rdx
0x3086: je 0x30a5
0x3086: jump address is 0x30a5
0x3088: lea rdi,[rip+0x3275]
0x308f: mov ecx,0x2
0x3094: mov rsi,rdx
0x3097: repz cmps byte ptr ds:[rsi],byte ptr es:[rdi]
0x3099: seta cl
0x309c: sbb cl,0x0
0x309f: xor eax,eax
0x30a1: test cl,cl
0x30a3: jne 0x30b0
0x30a3: jump address is 0x30b0
0x30a5: add rsp,0x8
0x30a9: ret
0x30a9: the return address is 0x1d4c
0x1d4c: test al,al
0x1d4e: jne 0x1d9b
0x1d4e: jump address is 0x1d9b
0x1d50: lea rax,[rip+0x40c2]
0x1d57: mov dword ptr [rip+0x2063cf],0xc
0x1d61: mov qword ptr [rip+0x2063d0],rax
0x1d68: cmp byte ptr [rip+0x2062a7],0x0
0x1d6f: jne 0x1dea
0x1d6f: jump address is 0x1dea
0x1d71: add rbx,r12
0x1d74: jmp 0x1d8c
0x1d74: jump address is 0x1d8c
0x1d8c: sub r14,0x1
0x1d90: cmp r14,0xffffffffffffffff
0x1d94: jne 0x1d76
0x1d94: jump address is 0x1d76
0x1d76: cmp byte ptr [r13+0x2c],0x0
0x1d7b: je 0x1d85
0x1d7b: jump address is 0x1d85
0x1d7d: cmp word ptr [r13+0x0],0x7
0x1d83: je 0x1db5
0x1d83: jump address is 0x1db5
Block exists: add r13,0x180 at address 0x1d85 is visited for 1 times

0x1db5: xor r12d,r12d
0x1db8: test ebp,ebp
0x1dba: lea r15,[r13+0x2c]
0x1dbe: jne 0x1de3
0x1dbe: jump address is 0x1de3
0x1dc0: mov rdi,r13
0x1dc3: call 0x2600
0x1dc3: jump address is 0x2600
0x2600: push r15
0x2602: push r14
0x2604: push r13
0x2606: push r12
0x2608: push rbp
0x2609: push rbx
0x260a: mov rbp,rdi
0x260d: sub rsp,0x1f8
0x2614: movzx ecx,byte ptr [rdi+0x8]
0x2618: mov rax,qword ptr fs:0x28
0x2621: mov qword ptr [rsp+0x1e8],rax
0x2629: xor eax,eax
0x262b: cmp cl,0x2f
0x262e: jne 0x29a0
0x262e: jump address is 0x29a0
0x2634: lea rax,[rdi+0x8]
0x2638: lea rsi,[rsp+0xb0]
0x2640: lea rdi,[rdi+0x28]
0x2644: mov r12,rax
0x2647: mov rdx,rsi
0x264a: jmp 0x2657
0x264a: jump address is 0x2657
0x2657: add rax,0x1
0x265b: add rdx,0x1
0x265f: mov byte ptr [rdx-0x1],cl
0x2662: cmp rax,rdi
0x2665: jb 0x2650
0x2665: jump address is 0x2650
0x2650: movzx ecx,byte ptr [rax]
0x2653: test cl,cl
0x2655: je 0x2667
0x2655: jump address is 0x2667
0x2657: add rax,0x1
0x265b: add rdx,0x1
0x265f: mov byte ptr [rdx-0x1],cl
0x2662: cmp rax,rdi
0x2665: jb 0x2650
0x2665: jump address is 0x2650
0x2667: mov byte ptr [rdx],0x0
0x266a: lea rdx,[rsp+0x20]
0x266f: mov edi,0x1
0x2674: call 0x1920
0x2674: jump address is 0x1920
0x1920: jmp qword ptr [rip+0x2065e2]
Execute the function: __xstat

0x1920: the return address is 0x2679
0x2679: test eax,eax
0x267b: jne 0x2870
0x267b: jump address is 0x2870
0x2681: mov eax,dword ptr [rsp+0x38]
0x2685: mov r14,qword ptr [rsp+0x68]
0x268a: and eax,0x10
0x268d: cmp eax,0x1
0x2690: sbb r13d,r13d
0x2693: and r13d,0xa
0x2697: add r13d,0x20
0x269b: lea rbx,[rbp+0x2c]
0x269f: lea rsi,[rip+0x3635]
0x26a6: xor eax,eax
0x26a8: mov edx,0x20
0x26ad: mov edi,0x1
0x26b2: mov rcx,rbx
0x26b5: call 0x19a0
0x26b5: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x26ba
0x26ba: cmp byte ptr [rip+0x205954],0x0
0x26c1: je 0x2740
0x26c1: jump address is 0x2740
0x26c3: movzx edx,byte ptr [rbp+0x2c]
0x26c7: lea r15,[rsp+0xe0]
0x26cf: lea rcx,[rbp+0x4c]
0x26d3: mov rax,r15
0x26d6: test dl,dl
0x26d8: jne 0x285b
0x26d8: jump address is 0x285b
0x26de: xchg ax,ax
0x26e0: mov byte ptr [rax],0x0
0x26e3: mov rdi,r15
0x26e6: call 0x18c0
0x26e6: jump address is 0x18c0
0x18c0: jmp qword ptr [rip+0x206612]
Execute the function: getpwnam

0x18c0: the return address is 0x26eb
0x26eb: test rax,rax
0x26ee: mov rbx,rax
0x26f1: je 0x2a00
0x26f1: jump address is 0x2a00
0x26f7: mov r15,qword ptr [rax+0x18]
0x26fb: mov esi,0x2c
0x2700: mov rdi,r15
0x2703: call 0x1830
0x2703: jump address is 0x1830
0x1830: jmp qword ptr [rip+0x20665a]
Execute the function: strchr

0x1830: the return address is 0x2708
0x2708: test rax,rax
0x270b: je 0x2714
0x270b: jump address is 0x2714
0x270d: mov byte ptr [rax],0x0
0x2710: mov r15,qword ptr [rbx+0x18]
0x2714: mov rsi,qword ptr [rbx]
0x2717: mov rdi,r15
0x271a: call 0x20d0
0x271a: jump address is 0x20d0
Execute the function: create_fullname

0x271a: the return address is 0x271f
0x271f: lea rsi,[rip+0x35a8]
0x2726: mov rbx,rax
0x2729: mov rdx,rax
0x272c: mov edi,0x1
0x2731: xor eax,eax
0x2733: call 0x19a0
0x2733: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2738
0x2738: mov rdi,rbx
0x273b: call 0x16f0
0x273b: jump address is 0x16f0
0x16f0: jmp qword ptr [rip+0x2066fa]
Execute the function: free

0x16f0: the return address is 0x2740
0x2740: lea rsi,[rip+0x3591]
0x2747: xor eax,eax
0x2749: mov r8,r12
0x274c: mov ecx,0x20
0x2751: mov edx,r13d
0x2754: mov edi,0x1
0x2759: call 0x19a0
0x2759: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x275e
0x275e: cmp byte ptr [rip+0x2058b2],0x0
0x2765: je 0x2799
0x2765: jump address is 0x2799
0x2767: test r14,r14
0x276a: jne 0x2920
0x276a: jump address is 0x2920
0x2770: lea rsi,[rip+0x3580]
0x2777: mov edx,0x5
0x277c: xor edi,edi
0x277e: call 0x17d0
0x277e: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2783
0x2783: mov rdx,rax
0x2786: lea rsi,[rip+0x3564]
0x278d: mov edi,0x1
0x2792: xor eax,eax
0x2794: call 0x19a0
0x2794: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2799
Block exists: movsxd rax,dword ptr [rbp+0x154] at address 0x2799 is visited for 1 times

0x2920: mov rcx,qword ptr [rip+0x205801]
0x2927: test rcx,rcx
0x292a: je 0x2a30
0x292a: jump address is 0x2a30
0x2930: sub rcx,r14
0x2933: lea rdx,[rip+0x337c]
0x293a: cmp rcx,0x3b
0x293e: jle 0x2786
0x293e: jump address is 0x2786
Block exists: lea rsi,[rip+0x3564] at address 0x2786 is visited for 1 times

0x2944: cmp rcx,0x1517f
0x294b: jle 0x2a90
0x294b: jump address is 0x2a90
0x2951: mov rax,rcx
0x2954: movabs rdx,0x1845c8a0ce512957
0x295e: sar rcx,0x3f
0x2962: imul rdx
0x2965: lea rdi,[rip+0x2057a4]
0x296c: mov esi,0x1
0x2971: xor eax,eax
0x2973: sar rdx,0xd
0x2977: sub rdx,rcx
0x297a: lea rcx,[rip+0x336b]
0x2981: mov r8,rdx
0x2984: mov edx,0x16
0x2989: call 0x1aa0
0x2989: jump address is 0x1aa0
0x1aa0: jmp qword ptr [rip+0x206522]
Execute the function: __sprintf_chk

0x1aa0: the return address is 0x298e
0x298e: lea rdx,[rip+0x20577b]
0x2995: jmp 0x2786
0x2995: jump address is 0x2786
Block exists: lea rsi,[rip+0x3564] at address 0x2786 is visited for 1 times

0x2a90: mov rax,rcx
0x2a93: movabs rdx,0x48d159e26af37c05
0x2a9d: lea rdi,[rip+0x20566c]
0x2aa4: imul rdx
0x2aa7: mov rax,rcx
0x2aaa: mov esi,0x1
0x2aaf: sar rax,0x3f
0x2ab3: sar rdx,0xa
0x2ab7: mov r8,rdx
0x2aba: movabs rdx,0x8888888888888889
0x2ac4: sub r8,rax
0x2ac7: imul rax,r8,0xe10
0x2ace: sub rcx,rax
0x2ad1: mov rax,rcx
0x2ad4: lea rcx,[rip+0x3207]
0x2adb: mul rdx
0x2ade: xor eax,eax
0x2ae0: shr rdx,0x5
0x2ae4: mov r9d,edx
0x2ae7: mov edx,0x16
0x2aec: call 0x1aa0
0x2aec: jump address is 0x1aa0
0x1aa0: jmp qword ptr [rip+0x206522]
Execute the function: __sprintf_chk

0x1aa0: the return address is 0x2af1
0x2af1: lea rdx,[rip+0x205618]
0x2af8: jmp 0x2786
0x2af8: jump address is 0x2786
Block exists: lea rsi,[rip+0x3564] at address 0x2786 is visited for 1 times

0x2a30: lea rdi,[rip+0x2056f1]
0x2a37: call 0x1900
0x2a37: jump address is 0x1900
0x1900: jmp qword ptr [rip+0x2065f2]
Execute the function: time

0x1900: the return address is 0x2a3c
0x2a3c: mov rcx,qword ptr [rip+0x2056e5]
0x2a43: jmp 0x2930
0x2a43: jump address is 0x2930
Block exists: sub rcx,r14 at address 0x2930 is visited for 1 times

0x2799: movsxd rax,dword ptr [rbp+0x154]
0x27a0: lea rdi,[rsp+0x18]
0x27a5: mov qword ptr [rsp+0x18],rax
0x27aa: call 0x1700
0x27aa: jump address is 0x1700
0x1700: jmp qword ptr [rip+0x2066f2]
Execute the function: localtime

0x1700: the return address is 0x27af
0x27af: test rax,rax
0x27b2: je 0x29e0
0x27b2: jump address is 0x29e0
0x27b8: mov rdx,qword ptr [rip+0x205979]
0x27bf: lea rdi,[rip+0x20591a]
0x27c6: mov rcx,rax
0x27c9: mov esi,0x21
0x27ce: call 0x19b0
0x27ce: jump address is 0x19b0
0x19b0: jmp qword ptr [rip+0x20659a]
Execute the function: strftime

0x19b0: the return address is 0x27d3
0x27d3: lea rdx,[rip+0x205906]
0x27da: lea rsi,[rip+0x3b1f]
0x27e1: xor eax,eax
0x27e3: mov edi,0x1
0x27e8: call 0x19a0
0x27e8: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x27ed
0x27ed: cmp byte ptr [rip+0x20581c],0x0
0x27f4: je 0x2802
0x27f4: jump address is 0x2802
0x27f6: movzx edx,byte ptr [rbp+0x4c]
0x27fa: test dl,dl
0x27fc: jne 0x2880
0x27fc: jump address is 0x2880
Block exists: mov rdi,qword ptr [rip+0x20589f] at address 0x2802 is visited for 1 times

0x2880: lea r15,[rsp+0xe0]
0x2888: lea rax,[rbp+0x4c]
0x288c: add rbp,0x14c
0x2893: mov rcx,r15
0x2896: jmp 0x28a7
0x2896: jump address is 0x28a7
0x28a7: add rax,0x1
0x28ab: add rcx,0x1
0x28af: mov byte ptr [rcx-0x1],dl
0x28b2: cmp rbp,rax
0x28b5: ja 0x28a0
0x28b5: jump address is 0x28a0
0x28a0: movzx edx,byte ptr [rax]
0x28a3: test dl,dl
0x28a5: je 0x28b7
0x28a5: jump address is 0x28b7
0x28a7: add rax,0x1
0x28ab: add rcx,0x1
0x28af: mov byte ptr [rcx-0x1],dl
0x28b2: cmp rbp,rax
0x28b5: ja 0x28a0
0x28b5: jump address is 0x28a0
0x28b7: mov byte ptr [rcx],0x0
0x28ba: mov esi,0x3a
0x28bf: mov rdi,r15
0x28c2: call 0x1830
0x28c2: jump address is 0x1830
0x1830: jmp qword ptr [rip+0x20665a]
Execute the function: strchr

0x1830: the return address is 0x28c7
0x28c7: test rax,rax
0x28ca: je 0x2a50
0x28ca: jump address is 0x2a50
0x28d0: mov byte ptr [rax],0x0
0x28d3: cmp byte ptr [rsp+0xe0],0x0
0x28db: lea rcx,[rax+0x1]
0x28df: jne 0x2afd
0x28df: jump address is 0x2afd
0x28e5: mov rbx,r15
0x28e8: test rcx,rcx
0x28eb: je 0x2a61
0x28eb: jump address is 0x2a61
0x28f1: lea rsi,[rip+0x3405]
0x28f8: mov rdx,rbx
0x28fb: mov edi,0x1
0x2900: xor eax,eax
0x2902: call 0x19a0
0x2902: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2907
0x2907: cmp rbx,r15
0x290a: je 0x2802
0x290a: jump address is 0x2802
0x2802: mov rdi,qword ptr [rip+0x20589f]
0x2809: mov rax,qword ptr [rdi+0x28]
0x280d: cmp rax,qword ptr [rdi+0x30]
0x2811: jae 0x2a80
0x2811: jump address is 0x2a80
0x2817: lea rdx,[rax+0x1]
0x281b: mov qword ptr [rdi+0x28],rdx
0x281f: mov byte ptr [rax],0xa
0x2822: mov rax,qword ptr [rsp+0x1e8]
0x282a: xor rax,qword ptr fs:0x28
0x2833: jne 0x2b39
0x2833: jump address is 0x2b39
0x2839: add rsp,0x1f8
0x2840: pop rbx
0x2841: pop rbp
0x2842: pop r12
0x2844: pop r13
0x2846: pop r14
0x2848: pop r15
0x284a: ret
0x284a: the return address is 0x1dc8
0x1dc8: jmp 0x1d85
0x1dc8: jump address is 0x1d85
0x1d85: add r13,0x180
0x1d8c: sub r14,0x1
0x1d90: cmp r14,0xffffffffffffffff
0x1d94: jne 0x1d76
0x1d94: jump address is 0x1d76
0x1d96: jmp 0x1ce2
0x1d96: jump address is 0x1ce2
Block exists: xor eax,eax at address 0x1ce2 is visited for 3 times

0x2a80: mov esi,0xa
0x2a85: call 0x1850
0x2a85: jump address is 0x1850
0x1850: jmp qword ptr [rip+0x20664a]
Execute the function: __overflow

0x2a61: lea rsi,[rip+0x3898]
0x2a68: mov rdx,rbx
0x2a6b: mov edi,0x1
0x2a70: xor eax,eax
0x2a72: call 0x19a0
0x2a72: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2a77
0x2a77: jmp 0x2907
0x2a77: jump address is 0x2907
Block exists: cmp rbx,r15 at address 0x2907 is visited for 1 times

0x2afd: mov rdi,r15
0x2b00: mov qword ptr [rsp+0x8],rcx
0x2b05: call 0x2f80
0x2b05: jump address is 0x2f80
0x2f80: lea rsi,[rip+0x2051e9]
0x2f87: jmp 0x2ed0
0x2f87: jump address is 0x2ed0
0x2ed0: push r12
0x2ed2: push rbp
0x2ed3: lea rdx,[rip+0x205266]
0x2eda: push rbx
0x2edb: mov rbx,rsi
0x2ede: xor esi,esi
0x2ee0: mov rbp,rdi
0x2ee3: sub rsp,0x10
0x2ee7: mov dword ptr [rip+0x20524f],0x2
0x2ef1: mov rcx,rsp
0x2ef4: mov qword ptr [rsp],0x0
0x2efc: mov rax,qword ptr fs:0x28
0x2f05: mov qword ptr [rsp+0x8],rax
0x2f0a: xor eax,eax
0x2f0c: call 0x1a40
0x2f0c: jump address is 0x1a40
0x1a40: jmp qword ptr [rip+0x206552]
Execute the function: getaddrinfo

0x1a40: the return address is 0x2f11
0x2f11: test eax,eax
0x2f13: jne 0x2f68
0x2f13: jump address is 0x2f68
0x2f15: mov r12,qword ptr [rsp]
0x2f19: mov rdi,qword ptr [r12+0x20]
0x2f1e: test rdi,rdi
0x2f21: cmove rdi,rbp
0x2f25: call 0x1a50
0x2f25: jump address is 0x1a50
0x1a50: jmp qword ptr [rip+0x20654a]
Execute the function: strdup

0x1a50: the return address is 0x2f2a
0x2f2a: test rax,rax
0x2f2d: mov rbp,rax
0x2f30: jne 0x2f3d
0x2f30: jump address is 0x2f3d
0x2f32: test rbx,rbx
0x2f35: je 0x2f3d
0x2f35: jump address is 0x2f3d
0x2f37: mov dword ptr [rbx],0xfffffff6
0x2f3d: mov rdi,r12
0x2f40: call 0x1a90
0x2f40: jump address is 0x1a90
0x1a90: jmp qword ptr [rip+0x20652a]
Execute the function: freeaddrinfo

0x1a90: the return address is 0x2f45
0x2f45: mov rdx,qword ptr [rsp+0x8]
0x2f4a: xor rdx,qword ptr fs:0x28
0x2f53: mov rax,rbp
0x2f56: jne 0x2f73
0x2f56: jump address is 0x2f73
0x2f58: add rsp,0x10
0x2f5c: pop rbx
0x2f5d: pop rbp
0x2f5e: pop r12
0x2f60: ret
0x2f60: the return address is 0x2b0a
0x2b0a: test rax,rax
0x2b0d: mov rbx,rax
0x2b10: mov rcx,qword ptr [rsp+0x8]
0x2b15: jne 0x28e8
0x2b15: jump address is 0x28e8
0x2b1b: jmp 0x28e5
0x2b1b: jump address is 0x28e5
0x28e5: mov rbx,r15
0x28e8: test rcx,rcx
0x28eb: je 0x2a61
0x28eb: jump address is 0x2a61
0x28f1: lea rsi,[rip+0x3405]
0x28f8: mov rdx,rbx
0x28fb: mov edi,0x1
0x2900: xor eax,eax
0x2902: call 0x19a0
0x2902: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2907
Block exists: cmp rbx,r15 at address 0x2907 is visited for 1 times

0x2a61: lea rsi,[rip+0x3898]
0x2a68: mov rdx,rbx
0x2a6b: mov edi,0x1
0x2a70: xor eax,eax
0x2a72: call 0x19a0
0x2a72: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2a77
0x2a77: jmp 0x2907
0x2a77: jump address is 0x2907
Block exists: cmp rbx,r15 at address 0x2907 is visited for 1 times

0x28e8: test rcx,rcx
0x28eb: je 0x2a61
0x28eb: jump address is 0x2a61
0x28f1: lea rsi,[rip+0x3405]
0x28f8: mov rdx,rbx
0x28fb: mov edi,0x1
0x2900: xor eax,eax
0x2902: call 0x19a0
0x2902: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2907
0x2907: cmp rbx,r15
0x290a: je 0x2802
0x290a: jump address is 0x2802
Block exists: mov rdi,qword ptr [rip+0x20589f] at address 0x2802 is visited for 2 times

0x2910: mov rdi,rbx
0x2913: call 0x16f0
0x2913: jump address is 0x16f0
0x16f0: jmp qword ptr [rip+0x2066fa]
Execute the function: free

0x16f0: the return address is 0x2918
0x2918: jmp 0x2802
0x2918: jump address is 0x2802
Block exists: mov rdi,qword ptr [rip+0x20589f] at address 0x2802 is visited for 2 times

0x2a61: lea rsi,[rip+0x3898]
0x2a68: mov rdx,rbx
0x2a6b: mov edi,0x1
0x2a70: xor eax,eax
0x2a72: call 0x19a0
0x2a72: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2a77
0x2a77: jmp 0x2907
0x2a77: jump address is 0x2907
Block exists: cmp rbx,r15 at address 0x2907 is visited for 2 times

0x2f3d: mov rdi,r12
0x2f40: call 0x1a90
0x2f40: jump address is 0x1a90
0x1a90: jmp qword ptr [rip+0x20652a]
Execute the function: freeaddrinfo

0x1a90: the return address is 0x2f45
Block exists: mov rdx,qword ptr [rsp+0x8] at address 0x2f45 is visited for 1 times

0x2f21: cmove rdi,rbp
0x2f25: call 0x1a50
0x2f25: jump address is 0x1a50
0x1a50: jmp qword ptr [rip+0x20654a]
Execute the function: strdup

0x1a50: the return address is 0x2f2a
Block exists: test rax,rax at address 0x2f2a is visited for 1 times

0x2f68: xor ebp,ebp
0x2f6a: test rbx,rbx
0x2f6d: je 0x2f45
0x2f6d: jump address is 0x2f45
0x2f6f: mov dword ptr [rbx],eax
0x2f71: jmp 0x2f45
0x2f71: jump address is 0x2f45
0x2f45: mov rdx,qword ptr [rsp+0x8]
0x2f4a: xor rdx,qword ptr fs:0x28
0x2f53: mov rax,rbp
0x2f56: jne 0x2f73
0x2f56: jump address is 0x2f73
0x2f58: add rsp,0x10
0x2f5c: pop rbx
0x2f5d: pop rbp
0x2f5e: pop r12
0x2f60: ret
0x2f60: the return address is 0x2b0a
0x2b0a: test rax,rax
0x2b0d: mov rbx,rax
0x2b10: mov rcx,qword ptr [rsp+0x8]
0x2b15: jne 0x28e8
0x2b15: jump address is 0x28e8
0x2b1b: jmp 0x28e5
0x2b1b: jump address is 0x28e5
0x28e5: mov rbx,r15
0x28e8: test rcx,rcx
0x28eb: je 0x2a61
0x28eb: jump address is 0x2a61
0x28f1: lea rsi,[rip+0x3405]
0x28f8: mov rdx,rbx
0x28fb: mov edi,0x1
0x2900: xor eax,eax
0x2902: call 0x19a0
0x2902: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2907
0x2907: cmp rbx,r15
0x290a: je 0x2802
0x290a: jump address is 0x2802
Block exists: mov rdi,qword ptr [rip+0x20589f] at address 0x2802 is visited for 2 times

0x2910: mov rdi,rbx
0x2913: call 0x16f0
0x2913: jump address is 0x16f0
0x16f0: jmp qword ptr [rip+0x2066fa]
Execute the function: free

0x16f0: the return address is 0x2918
0x2918: jmp 0x2802
0x2918: jump address is 0x2802
Block exists: mov rdi,qword ptr [rip+0x20589f] at address 0x2802 is visited for 2 times

0x2a61: lea rsi,[rip+0x3898]
0x2a68: mov rdx,rbx
0x2a6b: mov edi,0x1
0x2a70: xor eax,eax
0x2a72: call 0x19a0
0x2a72: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2a77
0x2a77: jmp 0x2907
0x2a77: jump address is 0x2907
Block exists: cmp rbx,r15 at address 0x2907 is visited for 3 times

0x28e8: test rcx,rcx
0x28eb: je 0x2a61
0x28eb: jump address is 0x2a61
Block exists: lea rsi,[rip+0x3898] at address 0x2a61 is visited for 4 times

Block exists: lea rsi,[rip+0x3405] at address 0x28f1 is visited for 4 times

0x2a50: cmp byte ptr [rsp+0xe0],0x0
0x2a58: jne 0x2b20
0x2a58: jump address is 0x2b20
0x2a5e: mov rbx,r15
0x2a61: lea rsi,[rip+0x3898]
0x2a68: mov rdx,rbx
0x2a6b: mov edi,0x1
0x2a70: xor eax,eax
0x2a72: call 0x19a0
0x2a72: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2a77
0x2a77: jmp 0x2907
0x2a77: jump address is 0x2907
Block exists: cmp rbx,r15 at address 0x2907 is visited for 3 times

0x2b20: mov rdi,r15
0x2b23: call 0x2f80
0x2b23: jump address is 0x2f80
Execute the function: canon_host

0x2b23: the return address is 0x2b28
0x2b28: test rax,rax
0x2b2b: mov rbx,rax
0x2b2e: jne 0x2a61
0x2b2e: jump address is 0x2a61
0x2b34: jmp 0x2a5e
0x2b34: jump address is 0x2a5e
Block exists: mov rbx,r15 at address 0x2a5e is visited for 1 times

0x2a61: lea rsi,[rip+0x3898]
0x2a68: mov rdx,rbx
0x2a6b: mov edi,0x1
0x2a70: xor eax,eax
0x2a72: call 0x19a0
0x2a72: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2a77
0x2a77: jmp 0x2907
0x2a77: jump address is 0x2907
Block exists: cmp rbx,r15 at address 0x2907 is visited for 3 times

0x28a0: movzx edx,byte ptr [rax]
0x28a3: test dl,dl
0x28a5: je 0x28b7
0x28a5: jump address is 0x28b7
Block exists: mov byte ptr [rcx],0x0 at address 0x28b7 is visited for 2 times

Block exists: add rax,0x1 at address 0x28a7 is visited for 2 times

0x28b7: mov byte ptr [rcx],0x0
0x28ba: mov esi,0x3a
0x28bf: mov rdi,r15
0x28c2: call 0x1830
0x28c2: jump address is 0x1830
0x1830: jmp qword ptr [rip+0x20665a]
Execute the function: strchr

0x1830: the return address is 0x28c7
Block exists: test rax,rax at address 0x28c7 is visited for 1 times

0x2802: mov rdi,qword ptr [rip+0x20589f]
0x2809: mov rax,qword ptr [rdi+0x28]
0x280d: cmp rax,qword ptr [rdi+0x30]
0x2811: jae 0x2a80
0x2811: jump address is 0x2a80
Block exists: mov esi,0xa at address 0x2a80 is visited for 1 times

Block exists: lea rdx,[rax+0x1] at address 0x2817 is visited for 1 times

0x29e0: mov rdi,qword ptr [rsp+0x18]
0x29e5: lea rsi,[rip+0x2056f4]
0x29ec: call 0x30d0
0x29ec: jump address is 0x30d0
0x30d0: test rdi,rdi
0x30d3: lea rcx,[rsi+0x14]
0x30d7: mov byte ptr [rsi+0x14],0x0
0x30db: movabs r9,0x6666666666666667
0x30e5: movabs rsi,0xcccccccccccccccd
0x30ef: mov r8d,0x30
0x30f5: js 0x3133
0x30f5: jump address is 0x3133
0x30f7: nop word ptr [rax+rax*1+0x0]
0x3100: mov rax,rdi
0x3103: sub rcx,0x1
0x3107: mul rsi
0x310a: shr rdx,0x3
0x310e: lea rax,[rdx+rdx*4]
0x3112: add rax,rax
0x3115: sub rdi,rax
0x3118: add edi,0x30
0x311b: test rdx,rdx
0x311e: mov byte ptr [rcx],dil
0x3121: mov rdi,rdx
0x3124: jne 0x3100
0x3124: jump address is 0x3100
0x3126: mov rax,rcx
0x3129: ret
0x3129: the return address is 0x29f1
0x29f1: mov rdx,rax
0x29f4: jmp 0x27da
0x29f4: jump address is 0x27da
0x27da: lea rsi,[rip+0x3b1f]
0x27e1: xor eax,eax
0x27e3: mov edi,0x1
0x27e8: call 0x19a0
0x27e8: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x27ed
Block exists: cmp byte ptr [rip+0x20581c],0x0 at address 0x27ed is visited for 1 times

0x3100: mov rax,rdi
0x3103: sub rcx,0x1
0x3107: mul rsi
0x310a: shr rdx,0x3
0x310e: lea rax,[rdx+rdx*4]
0x3112: add rax,rax
0x3115: sub rdi,rax
0x3118: add edi,0x30
0x311b: test rdx,rdx
0x311e: mov byte ptr [rcx],dil
0x3121: mov rdi,rdx
0x3124: jne 0x3100
0x3124: jump address is 0x3100
0x3126: mov rax,rcx
0x3129: ret
0x3129: the return address is 0x29f1
0x29f1: mov rdx,rax
0x29f4: jmp 0x27da
0x29f4: jump address is 0x27da
0x27da: lea rsi,[rip+0x3b1f]
0x27e1: xor eax,eax
0x27e3: mov edi,0x1
0x27e8: call 0x19a0
0x27e8: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x27ed
Block exists: cmp byte ptr [rip+0x20581c],0x0 at address 0x27ed is visited for 1 times

0x3100: mov rax,rdi
0x3103: sub rcx,0x1
0x3107: mul rsi
0x310a: shr rdx,0x3
0x310e: lea rax,[rdx+rdx*4]
0x3112: add rax,rax
0x3115: sub rdi,rax
0x3118: add edi,0x30
0x311b: test rdx,rdx
0x311e: mov byte ptr [rcx],dil
0x3121: mov rdi,rdx
0x3124: jne 0x3100
0x3124: jump address is 0x3100
Block exists: mov rax,rdi at address 0x3100 is visited for 3 times

Block exists: mov rax,rcx at address 0x3126 is visited for 2 times

0x3133: mov rax,rdi
0x3136: lea rsi,[rcx-0x1]
0x313a: imul r9
0x313d: mov rax,rdi
0x3140: sar rax,0x3f
0x3144: sar rdx,0x2
0x3148: sub rdx,rax
0x314b: lea rax,[rdx+rdx*4]
0x314f: lea eax,[r8+rax*2]
0x3153: sub eax,edi
0x3155: test rdx,rdx
0x3158: mov rdi,rdx
0x315b: mov byte ptr [rcx-0x1],al
0x315e: jne 0x3130
0x315e: jump address is 0x3130
0x3160: sub rcx,0x2
0x3164: mov byte ptr [rsi-0x1],0x2d
0x3168: mov rax,rcx
0x316b: ret
0x316b: the return address is 0x29f1
0x29f1: mov rdx,rax
0x29f4: jmp 0x27da
0x29f4: jump address is 0x27da
Block exists: lea rsi,[rip+0x3b1f] at address 0x27da is visited for 3 times

0x3130: mov rcx,rsi
0x3133: mov rax,rdi
0x3136: lea rsi,[rcx-0x1]
0x313a: imul r9
0x313d: mov rax,rdi
0x3140: sar rax,0x3f
0x3144: sar rdx,0x2
0x3148: sub rdx,rax
0x314b: lea rax,[rdx+rdx*4]
0x314f: lea eax,[r8+rax*2]
0x3153: sub eax,edi
0x3155: test rdx,rdx
0x3158: mov rdi,rdx
0x315b: mov byte ptr [rcx-0x1],al
0x315e: jne 0x3130
0x315e: jump address is 0x3130
0x3160: sub rcx,0x2
0x3164: mov byte ptr [rsi-0x1],0x2d
0x3168: mov rax,rcx
0x316b: ret
0x316b: the return address is 0x29f1
0x29f1: mov rdx,rax
0x29f4: jmp 0x27da
0x29f4: jump address is 0x27da
Block exists: lea rsi,[rip+0x3b1f] at address 0x27da is visited for 3 times

0x3130: mov rcx,rsi
0x3133: mov rax,rdi
0x3136: lea rsi,[rcx-0x1]
0x313a: imul r9
0x313d: mov rax,rdi
0x3140: sar rax,0x3f
0x3144: sar rdx,0x2
0x3148: sub rdx,rax
0x314b: lea rax,[rdx+rdx*4]
0x314f: lea eax,[r8+rax*2]
0x3153: sub eax,edi
0x3155: test rdx,rdx
0x3158: mov rdi,rdx
0x315b: mov byte ptr [rcx-0x1],al
0x315e: jne 0x3130
0x315e: jump address is 0x3130
0x3160: sub rcx,0x2
0x3164: mov byte ptr [rsi-0x1],0x2d
0x3168: mov rax,rcx
0x316b: ret
0x316b: the return address is 0x29f1
Block exists: mov rdx,rax at address 0x29f1 is visited for 4 times

0x3130: mov rcx,rsi
0x3133: mov rax,rdi
0x3136: lea rsi,[rcx-0x1]
0x313a: imul r9
0x313d: mov rax,rdi
0x3140: sar rax,0x3f
0x3144: sar rdx,0x2
0x3148: sub rdx,rax
0x314b: lea rax,[rdx+rdx*4]
0x314f: lea eax,[r8+rax*2]
0x3153: sub eax,edi
0x3155: test rdx,rdx
0x3158: mov rdi,rdx
0x315b: mov byte ptr [rcx-0x1],al
0x315e: jne 0x3130
0x315e: jump address is 0x3130
Block exists: mov rcx,rsi at address 0x3130 is visited for 3 times

Block exists: sub rcx,0x2 at address 0x3160 is visited for 3 times

0x2714: mov rsi,qword ptr [rbx]
0x2717: mov rdi,r15
0x271a: call 0x20d0
0x271a: jump address is 0x20d0
Execute the function: create_fullname

0x271a: the return address is 0x271f
Block exists: lea rsi,[rip+0x35a8] at address 0x271f is visited for 1 times

0x2a00: lea rsi,[rip+0x32b5]
0x2a07: xor edi,edi
0x2a09: mov edx,0x5
0x2a0e: call 0x17d0
0x2a0e: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2a13
0x2a13: lea rsi,[rip+0x32ae]
0x2a1a: mov rdx,rax
0x2a1d: mov edi,0x1
0x2a22: xor eax,eax
0x2a24: call 0x19a0
0x2a24: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2a29
0x2a29: jmp 0x2740
0x2a29: jump address is 0x2740
Block exists: lea rsi,[rip+0x3591] at address 0x2740 is visited for 2 times

0x285b: add rbx,0x1
0x285f: add rax,0x1
0x2863: mov byte ptr [rax-0x1],dl
0x2866: cmp rcx,rbx
0x2869: ja 0x2850
0x2869: jump address is 0x2850
0x2850: movzx edx,byte ptr [rbx]
0x2853: test dl,dl
0x2855: je 0x26e0
0x2855: jump address is 0x26e0
0x285b: add rbx,0x1
0x285f: add rax,0x1
0x2863: mov byte ptr [rax-0x1],dl
0x2866: cmp rcx,rbx
0x2869: ja 0x2850
0x2869: jump address is 0x2850
0x286b: jmp 0x26e0
0x286b: jump address is 0x26e0
Block exists: mov byte ptr [rax],0x0 at address 0x26e0 is visited for 2 times

0x2850: movzx edx,byte ptr [rbx]
0x2853: test dl,dl
0x2855: je 0x26e0
0x2855: jump address is 0x26e0
Block exists: mov byte ptr [rax],0x0 at address 0x26e0 is visited for 2 times

Block exists: add rbx,0x1 at address 0x285b is visited for 2 times

0x26e0: mov byte ptr [rax],0x0
0x26e3: mov rdi,r15
0x26e6: call 0x18c0
0x26e6: jump address is 0x18c0
0x18c0: jmp qword ptr [rip+0x206612]
Execute the function: getpwnam

0x18c0: the return address is 0x26eb
0x26eb: test rax,rax
0x26ee: mov rbx,rax
0x26f1: je 0x2a00
0x26f1: jump address is 0x2a00
0x26f7: mov r15,qword ptr [rax+0x18]
0x26fb: mov esi,0x2c
0x2700: mov rdi,r15
0x2703: call 0x1830
0x2703: jump address is 0x1830
0x1830: jmp qword ptr [rip+0x20665a]
Execute the function: strchr

0x1830: the return address is 0x2708
0x2708: test rax,rax
0x270b: je 0x2714
0x270b: jump address is 0x2714
0x270d: mov byte ptr [rax],0x0
0x2710: mov r15,qword ptr [rbx+0x18]
0x2714: mov rsi,qword ptr [rbx]
0x2717: mov rdi,r15
0x271a: call 0x20d0
0x271a: jump address is 0x20d0
Execute the function: create_fullname

0x271a: the return address is 0x271f
0x271f: lea rsi,[rip+0x35a8]
0x2726: mov rbx,rax
0x2729: mov rdx,rax
0x272c: mov edi,0x1
0x2731: xor eax,eax
0x2733: call 0x19a0
0x2733: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2738
0x2738: mov rdi,rbx
0x273b: call 0x16f0
0x273b: jump address is 0x16f0
0x16f0: jmp qword ptr [rip+0x2066fa]
Execute the function: free

0x16f0: the return address is 0x2740
0x2740: lea rsi,[rip+0x3591]
0x2747: xor eax,eax
0x2749: mov r8,r12
0x274c: mov ecx,0x20
0x2751: mov edx,r13d
0x2754: mov edi,0x1
0x2759: call 0x19a0
0x2759: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x275e
0x275e: cmp byte ptr [rip+0x2058b2],0x0
0x2765: je 0x2799
0x2765: jump address is 0x2799
0x2767: test r14,r14
0x276a: jne 0x2920
0x276a: jump address is 0x2920
0x2770: lea rsi,[rip+0x3580]
0x2777: mov edx,0x5
0x277c: xor edi,edi
0x277e: call 0x17d0
0x277e: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2783
0x2783: mov rdx,rax
0x2786: lea rsi,[rip+0x3564]
0x278d: mov edi,0x1
0x2792: xor eax,eax
0x2794: call 0x19a0
0x2794: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2799
Block exists: movsxd rax,dword ptr [rbp+0x154] at address 0x2799 is visited for 2 times

0x2920: mov rcx,qword ptr [rip+0x205801]
0x2927: test rcx,rcx
0x292a: je 0x2a30
0x292a: jump address is 0x2a30
0x2930: sub rcx,r14
0x2933: lea rdx,[rip+0x337c]
0x293a: cmp rcx,0x3b
0x293e: jle 0x2786
0x293e: jump address is 0x2786
Block exists: lea rsi,[rip+0x3564] at address 0x2786 is visited for 1 times

0x2944: cmp rcx,0x1517f
0x294b: jle 0x2a90
0x294b: jump address is 0x2a90
0x2951: mov rax,rcx
0x2954: movabs rdx,0x1845c8a0ce512957
0x295e: sar rcx,0x3f
0x2962: imul rdx
0x2965: lea rdi,[rip+0x2057a4]
0x296c: mov esi,0x1
0x2971: xor eax,eax
0x2973: sar rdx,0xd
0x2977: sub rdx,rcx
0x297a: lea rcx,[rip+0x336b]
0x2981: mov r8,rdx
0x2984: mov edx,0x16
0x2989: call 0x1aa0
0x2989: jump address is 0x1aa0
0x1aa0: jmp qword ptr [rip+0x206522]
Execute the function: __sprintf_chk

0x1aa0: the return address is 0x298e
0x298e: lea rdx,[rip+0x20577b]
0x2995: jmp 0x2786
0x2995: jump address is 0x2786
Block exists: lea rsi,[rip+0x3564] at address 0x2786 is visited for 1 times

0x2a90: mov rax,rcx
0x2a93: movabs rdx,0x48d159e26af37c05
0x2a9d: lea rdi,[rip+0x20566c]
0x2aa4: imul rdx
0x2aa7: mov rax,rcx
0x2aaa: mov esi,0x1
0x2aaf: sar rax,0x3f
0x2ab3: sar rdx,0xa
0x2ab7: mov r8,rdx
0x2aba: movabs rdx,0x8888888888888889
0x2ac4: sub r8,rax
0x2ac7: imul rax,r8,0xe10
0x2ace: sub rcx,rax
0x2ad1: mov rax,rcx
0x2ad4: lea rcx,[rip+0x3207]
0x2adb: mul rdx
0x2ade: xor eax,eax
0x2ae0: shr rdx,0x5
0x2ae4: mov r9d,edx
0x2ae7: mov edx,0x16
0x2aec: call 0x1aa0
0x2aec: jump address is 0x1aa0
0x1aa0: jmp qword ptr [rip+0x206522]
Execute the function: __sprintf_chk

0x1aa0: the return address is 0x2af1
0x2af1: lea rdx,[rip+0x205618]
0x2af8: jmp 0x2786
0x2af8: jump address is 0x2786
Block exists: lea rsi,[rip+0x3564] at address 0x2786 is visited for 1 times

0x2a30: lea rdi,[rip+0x2056f1]
0x2a37: call 0x1900
0x2a37: jump address is 0x1900
0x1900: jmp qword ptr [rip+0x2065f2]
Execute the function: time

0x1900: the return address is 0x2a3c
0x2a3c: mov rcx,qword ptr [rip+0x2056e5]
0x2a43: jmp 0x2930
0x2a43: jump address is 0x2930
Block exists: sub rcx,r14 at address 0x2930 is visited for 2 times

0x2799: movsxd rax,dword ptr [rbp+0x154]
0x27a0: lea rdi,[rsp+0x18]
0x27a5: mov qword ptr [rsp+0x18],rax
0x27aa: call 0x1700
0x27aa: jump address is 0x1700
0x1700: jmp qword ptr [rip+0x2066f2]
Execute the function: localtime

0x1700: the return address is 0x27af
0x27af: test rax,rax
0x27b2: je 0x29e0
0x27b2: jump address is 0x29e0
0x27b8: mov rdx,qword ptr [rip+0x205979]
0x27bf: lea rdi,[rip+0x20591a]
0x27c6: mov rcx,rax
0x27c9: mov esi,0x21
0x27ce: call 0x19b0
0x27ce: jump address is 0x19b0
0x19b0: jmp qword ptr [rip+0x20659a]
Execute the function: strftime

0x19b0: the return address is 0x27d3
0x27d3: lea rdx,[rip+0x205906]
0x27da: lea rsi,[rip+0x3b1f]
0x27e1: xor eax,eax
0x27e3: mov edi,0x1
0x27e8: call 0x19a0
0x27e8: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x27ed
0x27ed: cmp byte ptr [rip+0x20581c],0x0
0x27f4: je 0x2802
0x27f4: jump address is 0x2802
Block exists: mov rdi,qword ptr [rip+0x20589f] at address 0x2802 is visited for 2 times

0x27f6: movzx edx,byte ptr [rbp+0x4c]
0x27fa: test dl,dl
0x27fc: jne 0x2880
0x27fc: jump address is 0x2880
Block exists: mov rdi,qword ptr [rip+0x20589f] at address 0x2802 is visited for 2 times

0x2880: lea r15,[rsp+0xe0]
0x2888: lea rax,[rbp+0x4c]
0x288c: add rbp,0x14c
0x2893: mov rcx,r15
0x2896: jmp 0x28a7
0x2896: jump address is 0x28a7
Block exists: add rax,0x1 at address 0x28a7 is visited for 2 times

0x29e0: mov rdi,qword ptr [rsp+0x18]
0x29e5: lea rsi,[rip+0x2056f4]
0x29ec: call 0x30d0
0x29ec: jump address is 0x30d0
Execute the function: imaxtostr

0x29ec: the return address is 0x29f1
0x29f1: mov rdx,rax
0x29f4: jmp 0x27da
0x29f4: jump address is 0x27da
0x27da: lea rsi,[rip+0x3b1f]
0x27e1: xor eax,eax
0x27e3: mov edi,0x1
0x27e8: call 0x19a0
0x27e8: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x27ed
Block exists: cmp byte ptr [rip+0x20581c],0x0 at address 0x27ed is visited for 2 times

0x2714: mov rsi,qword ptr [rbx]
0x2717: mov rdi,r15
0x271a: call 0x20d0
0x271a: jump address is 0x20d0
Execute the function: create_fullname

0x271a: the return address is 0x271f
Block exists: lea rsi,[rip+0x35a8] at address 0x271f is visited for 2 times

0x2a00: lea rsi,[rip+0x32b5]
0x2a07: xor edi,edi
0x2a09: mov edx,0x5
0x2a0e: call 0x17d0
0x2a0e: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2a13
0x2a13: lea rsi,[rip+0x32ae]
0x2a1a: mov rdx,rax
0x2a1d: mov edi,0x1
0x2a22: xor eax,eax
0x2a24: call 0x19a0
0x2a24: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2a29
0x2a29: jmp 0x2740
0x2a29: jump address is 0x2740
Block exists: lea rsi,[rip+0x3591] at address 0x2740 is visited for 3 times

0x2740: lea rsi,[rip+0x3591]
0x2747: xor eax,eax
0x2749: mov r8,r12
0x274c: mov ecx,0x20
0x2751: mov edx,r13d
0x2754: mov edi,0x1
0x2759: call 0x19a0
0x2759: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x275e
Block exists: cmp byte ptr [rip+0x2058b2],0x0 at address 0x275e is visited for 2 times

0x2870: mov r13d,0x3f
0x2876: xor r14d,r14d
0x2879: jmp 0x269b
0x2879: jump address is 0x269b
0x269b: lea rbx,[rbp+0x2c]
0x269f: lea rsi,[rip+0x3635]
0x26a6: xor eax,eax
0x26a8: mov edx,0x20
0x26ad: mov edi,0x1
0x26b2: mov rcx,rbx
0x26b5: call 0x19a0
0x26b5: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x26ba
0x26ba: cmp byte ptr [rip+0x205954],0x0
0x26c1: je 0x2740
0x26c1: jump address is 0x2740
0x26c3: movzx edx,byte ptr [rbp+0x2c]
0x26c7: lea r15,[rsp+0xe0]
0x26cf: lea rcx,[rbp+0x4c]
0x26d3: mov rax,r15
0x26d6: test dl,dl
0x26d8: jne 0x285b
0x26d8: jump address is 0x285b
0x26de: xchg ax,ax
0x26e0: mov byte ptr [rax],0x0
0x26e3: mov rdi,r15
0x26e6: call 0x18c0
0x26e6: jump address is 0x18c0
0x18c0: jmp qword ptr [rip+0x206612]
Execute the function: getpwnam

0x18c0: the return address is 0x26eb
0x26eb: test rax,rax
0x26ee: mov rbx,rax
0x26f1: je 0x2a00
0x26f1: jump address is 0x2a00
0x26f7: mov r15,qword ptr [rax+0x18]
0x26fb: mov esi,0x2c
0x2700: mov rdi,r15
0x2703: call 0x1830
0x2703: jump address is 0x1830
0x1830: jmp qword ptr [rip+0x20665a]
Execute the function: strchr

0x1830: the return address is 0x2708
0x2708: test rax,rax
0x270b: je 0x2714
0x270b: jump address is 0x2714
0x270d: mov byte ptr [rax],0x0
0x2710: mov r15,qword ptr [rbx+0x18]
0x2714: mov rsi,qword ptr [rbx]
0x2717: mov rdi,r15
0x271a: call 0x20d0
0x271a: jump address is 0x20d0
Execute the function: create_fullname

0x271a: the return address is 0x271f
0x271f: lea rsi,[rip+0x35a8]
0x2726: mov rbx,rax
0x2729: mov rdx,rax
0x272c: mov edi,0x1
0x2731: xor eax,eax
0x2733: call 0x19a0
0x2733: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2738
0x2738: mov rdi,rbx
0x273b: call 0x16f0
0x273b: jump address is 0x16f0
0x16f0: jmp qword ptr [rip+0x2066fa]
Execute the function: free

0x16f0: the return address is 0x2740
Block exists: lea rsi,[rip+0x3591] at address 0x2740 is visited for 4 times

0x2714: mov rsi,qword ptr [rbx]
0x2717: mov rdi,r15
0x271a: call 0x20d0
0x271a: jump address is 0x20d0
Execute the function: create_fullname

0x271a: the return address is 0x271f
Block exists: lea rsi,[rip+0x35a8] at address 0x271f is visited for 3 times

0x2a00: lea rsi,[rip+0x32b5]
0x2a07: xor edi,edi
0x2a09: mov edx,0x5
0x2a0e: call 0x17d0
0x2a0e: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2a13
0x2a13: lea rsi,[rip+0x32ae]
0x2a1a: mov rdx,rax
0x2a1d: mov edi,0x1
0x2a22: xor eax,eax
0x2a24: call 0x19a0
0x2a24: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2a29
0x2a29: jmp 0x2740
0x2a29: jump address is 0x2740
Block exists: lea rsi,[rip+0x3591] at address 0x2740 is visited for 4 times

0x285b: add rbx,0x1
0x285f: add rax,0x1
0x2863: mov byte ptr [rax-0x1],dl
0x2866: cmp rcx,rbx
0x2869: ja 0x2850
0x2869: jump address is 0x2850
0x286b: jmp 0x26e0
0x286b: jump address is 0x26e0
0x26e0: mov byte ptr [rax],0x0
0x26e3: mov rdi,r15
0x26e6: call 0x18c0
0x26e6: jump address is 0x18c0
0x18c0: jmp qword ptr [rip+0x206612]
Execute the function: getpwnam

0x18c0: the return address is 0x26eb
Block exists: test rax,rax at address 0x26eb is visited for 3 times

0x2850: movzx edx,byte ptr [rbx]
0x2853: test dl,dl
0x2855: je 0x26e0
0x2855: jump address is 0x26e0
Block exists: mov byte ptr [rax],0x0 at address 0x26e0 is visited for 3 times

Block exists: add rbx,0x1 at address 0x285b is visited for 3 times

0x2740: lea rsi,[rip+0x3591]
0x2747: xor eax,eax
0x2749: mov r8,r12
0x274c: mov ecx,0x20
0x2751: mov edx,r13d
0x2754: mov edi,0x1
0x2759: call 0x19a0
0x2759: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x275e
0x275e: cmp byte ptr [rip+0x2058b2],0x0
0x2765: je 0x2799
0x2765: jump address is 0x2799
0x2767: test r14,r14
0x276a: jne 0x2920
0x276a: jump address is 0x2920
0x2770: lea rsi,[rip+0x3580]
0x2777: mov edx,0x5
0x277c: xor edi,edi
0x277e: call 0x17d0
0x277e: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2783
0x2783: mov rdx,rax
0x2786: lea rsi,[rip+0x3564]
0x278d: mov edi,0x1
0x2792: xor eax,eax
0x2794: call 0x19a0
0x2794: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2799
Block exists: movsxd rax,dword ptr [rbp+0x154] at address 0x2799 is visited for 3 times

0x2920: mov rcx,qword ptr [rip+0x205801]
0x2927: test rcx,rcx
0x292a: je 0x2a30
0x292a: jump address is 0x2a30
0x2930: sub rcx,r14
0x2933: lea rdx,[rip+0x337c]
0x293a: cmp rcx,0x3b
0x293e: jle 0x2786
0x293e: jump address is 0x2786
Block exists: lea rsi,[rip+0x3564] at address 0x2786 is visited for 1 times

0x2944: cmp rcx,0x1517f
0x294b: jle 0x2a90
0x294b: jump address is 0x2a90
0x2951: mov rax,rcx
0x2954: movabs rdx,0x1845c8a0ce512957
0x295e: sar rcx,0x3f
0x2962: imul rdx
0x2965: lea rdi,[rip+0x2057a4]
0x296c: mov esi,0x1
0x2971: xor eax,eax
0x2973: sar rdx,0xd
0x2977: sub rdx,rcx
0x297a: lea rcx,[rip+0x336b]
0x2981: mov r8,rdx
0x2984: mov edx,0x16
0x2989: call 0x1aa0
0x2989: jump address is 0x1aa0
0x1aa0: jmp qword ptr [rip+0x206522]
Execute the function: __sprintf_chk

0x1aa0: the return address is 0x298e
0x298e: lea rdx,[rip+0x20577b]
0x2995: jmp 0x2786
0x2995: jump address is 0x2786
Block exists: lea rsi,[rip+0x3564] at address 0x2786 is visited for 1 times

0x2a90: mov rax,rcx
0x2a93: movabs rdx,0x48d159e26af37c05
0x2a9d: lea rdi,[rip+0x20566c]
0x2aa4: imul rdx
0x2aa7: mov rax,rcx
0x2aaa: mov esi,0x1
0x2aaf: sar rax,0x3f
0x2ab3: sar rdx,0xa
0x2ab7: mov r8,rdx
0x2aba: movabs rdx,0x8888888888888889
0x2ac4: sub r8,rax
0x2ac7: imul rax,r8,0xe10
0x2ace: sub rcx,rax
0x2ad1: mov rax,rcx
0x2ad4: lea rcx,[rip+0x3207]
0x2adb: mul rdx
0x2ade: xor eax,eax
0x2ae0: shr rdx,0x5
0x2ae4: mov r9d,edx
0x2ae7: mov edx,0x16
0x2aec: call 0x1aa0
0x2aec: jump address is 0x1aa0
0x1aa0: jmp qword ptr [rip+0x206522]
Execute the function: __sprintf_chk

0x1aa0: the return address is 0x2af1
0x2af1: lea rdx,[rip+0x205618]
0x2af8: jmp 0x2786
0x2af8: jump address is 0x2786
Block exists: lea rsi,[rip+0x3564] at address 0x2786 is visited for 1 times

0x2a30: lea rdi,[rip+0x2056f1]
0x2a37: call 0x1900
0x2a37: jump address is 0x1900
0x1900: jmp qword ptr [rip+0x2065f2]
Execute the function: time

0x1900: the return address is 0x2a3c
0x2a3c: mov rcx,qword ptr [rip+0x2056e5]
0x2a43: jmp 0x2930
0x2a43: jump address is 0x2930
Block exists: sub rcx,r14 at address 0x2930 is visited for 3 times

0x2799: movsxd rax,dword ptr [rbp+0x154]
0x27a0: lea rdi,[rsp+0x18]
0x27a5: mov qword ptr [rsp+0x18],rax
0x27aa: call 0x1700
0x27aa: jump address is 0x1700
0x1700: jmp qword ptr [rip+0x2066f2]
Execute the function: localtime

0x1700: the return address is 0x27af
0x27af: test rax,rax
0x27b2: je 0x29e0
0x27b2: jump address is 0x29e0
0x27b8: mov rdx,qword ptr [rip+0x205979]
0x27bf: lea rdi,[rip+0x20591a]
0x27c6: mov rcx,rax
0x27c9: mov esi,0x21
0x27ce: call 0x19b0
0x27ce: jump address is 0x19b0
0x19b0: jmp qword ptr [rip+0x20659a]
Execute the function: strftime

0x19b0: the return address is 0x27d3
0x27d3: lea rdx,[rip+0x205906]
0x27da: lea rsi,[rip+0x3b1f]
0x27e1: xor eax,eax
0x27e3: mov edi,0x1
0x27e8: call 0x19a0
0x27e8: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x27ed
0x27ed: cmp byte ptr [rip+0x20581c],0x0
0x27f4: je 0x2802
0x27f4: jump address is 0x2802
0x27f6: movzx edx,byte ptr [rbp+0x4c]
0x27fa: test dl,dl
0x27fc: jne 0x2880
0x27fc: jump address is 0x2880
Block exists: mov rdi,qword ptr [rip+0x20589f] at address 0x2802 is visited for 3 times

0x2880: lea r15,[rsp+0xe0]
0x2888: lea rax,[rbp+0x4c]
0x288c: add rbp,0x14c
0x2893: mov rcx,r15
0x2896: jmp 0x28a7
0x2896: jump address is 0x28a7
0x28a7: add rax,0x1
0x28ab: add rcx,0x1
0x28af: mov byte ptr [rcx-0x1],dl
0x28b2: cmp rbp,rax
0x28b5: ja 0x28a0
0x28b5: jump address is 0x28a0
0x28b7: mov byte ptr [rcx],0x0
0x28ba: mov esi,0x3a
0x28bf: mov rdi,r15
0x28c2: call 0x1830
0x28c2: jump address is 0x1830
0x1830: jmp qword ptr [rip+0x20665a]
Execute the function: strchr

0x1830: the return address is 0x28c7
0x28c7: test rax,rax
0x28ca: je 0x2a50
0x28ca: jump address is 0x2a50
0x28d0: mov byte ptr [rax],0x0
0x28d3: cmp byte ptr [rsp+0xe0],0x0
0x28db: lea rcx,[rax+0x1]
0x28df: jne 0x2afd
0x28df: jump address is 0x2afd
0x28e5: mov rbx,r15
0x28e8: test rcx,rcx
0x28eb: je 0x2a61
0x28eb: jump address is 0x2a61
0x28f1: lea rsi,[rip+0x3405]
0x28f8: mov rdx,rbx
0x28fb: mov edi,0x1
0x2900: xor eax,eax
0x2902: call 0x19a0
0x2902: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2907
0x2907: cmp rbx,r15
0x290a: je 0x2802
0x290a: jump address is 0x2802
Block exists: mov rdi,qword ptr [rip+0x20589f] at address 0x2802 is visited for 3 times

0x2910: mov rdi,rbx
0x2913: call 0x16f0
0x2913: jump address is 0x16f0
0x16f0: jmp qword ptr [rip+0x2066fa]
Execute the function: free

0x16f0: the return address is 0x2918
0x2918: jmp 0x2802
0x2918: jump address is 0x2802
Block exists: mov rdi,qword ptr [rip+0x20589f] at address 0x2802 is visited for 3 times

0x2a61: lea rsi,[rip+0x3898]
0x2a68: mov rdx,rbx
0x2a6b: mov edi,0x1
0x2a70: xor eax,eax
0x2a72: call 0x19a0
0x2a72: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2a77
0x2a77: jmp 0x2907
0x2a77: jump address is 0x2907
Block exists: cmp rbx,r15 at address 0x2907 is visited for 4 times

0x2afd: mov rdi,r15
0x2b00: mov qword ptr [rsp+0x8],rcx
0x2b05: call 0x2f80
0x2b05: jump address is 0x2f80
0x2f80: lea rsi,[rip+0x2051e9]
0x2f87: jmp 0x2ed0
0x2f87: jump address is 0x2ed0
0x2ed0: push r12
0x2ed2: push rbp
0x2ed3: lea rdx,[rip+0x205266]
0x2eda: push rbx
0x2edb: mov rbx,rsi
0x2ede: xor esi,esi
0x2ee0: mov rbp,rdi
0x2ee3: sub rsp,0x10
0x2ee7: mov dword ptr [rip+0x20524f],0x2
0x2ef1: mov rcx,rsp
0x2ef4: mov qword ptr [rsp],0x0
0x2efc: mov rax,qword ptr fs:0x28
0x2f05: mov qword ptr [rsp+0x8],rax
0x2f0a: xor eax,eax
0x2f0c: call 0x1a40
0x2f0c: jump address is 0x1a40
0x1a40: jmp qword ptr [rip+0x206552]
Execute the function: getaddrinfo

0x1a40: the return address is 0x2f11
0x2f11: test eax,eax
0x2f13: jne 0x2f68
0x2f13: jump address is 0x2f68
0x2f15: mov r12,qword ptr [rsp]
0x2f19: mov rdi,qword ptr [r12+0x20]
0x2f1e: test rdi,rdi
0x2f21: cmove rdi,rbp
0x2f25: call 0x1a50
0x2f25: jump address is 0x1a50
0x1a50: jmp qword ptr [rip+0x20654a]
Execute the function: strdup

0x1a50: the return address is 0x2f2a
0x2f2a: test rax,rax
0x2f2d: mov rbp,rax
0x2f30: jne 0x2f3d
0x2f30: jump address is 0x2f3d
0x2f32: test rbx,rbx
0x2f35: je 0x2f3d
0x2f35: jump address is 0x2f3d
0x2f37: mov dword ptr [rbx],0xfffffff6
0x2f3d: mov rdi,r12
0x2f40: call 0x1a90
0x2f40: jump address is 0x1a90
0x1a90: jmp qword ptr [rip+0x20652a]
Execute the function: freeaddrinfo

0x1a90: the return address is 0x2f45
0x2f45: mov rdx,qword ptr [rsp+0x8]
0x2f4a: xor rdx,qword ptr fs:0x28
0x2f53: mov rax,rbp
0x2f56: jne 0x2f73
0x2f56: jump address is 0x2f73
0x2f58: add rsp,0x10
0x2f5c: pop rbx
0x2f5d: pop rbp
0x2f5e: pop r12
0x2f60: ret
0x2f60: the return address is 0x2b0a
0x2b0a: test rax,rax
0x2b0d: mov rbx,rax
0x2b10: mov rcx,qword ptr [rsp+0x8]
0x2b15: jne 0x28e8
0x2b15: jump address is 0x28e8
0x2b1b: jmp 0x28e5
0x2b1b: jump address is 0x28e5
Block exists: mov rbx,r15 at address 0x28e5 is visited for 4 times

0x28e8: test rcx,rcx
0x28eb: je 0x2a61
0x28eb: jump address is 0x2a61
Block exists: lea rsi,[rip+0x3898] at address 0x2a61 is visited for 6 times

Block exists: lea rsi,[rip+0x3405] at address 0x28f1 is visited for 5 times

0x2f3d: mov rdi,r12
0x2f40: call 0x1a90
0x2f40: jump address is 0x1a90
0x1a90: jmp qword ptr [rip+0x20652a]
Execute the function: freeaddrinfo

0x1a90: the return address is 0x2f45
Block exists: mov rdx,qword ptr [rsp+0x8] at address 0x2f45 is visited for 3 times

0x2f21: cmove rdi,rbp
0x2f25: call 0x1a50
0x2f25: jump address is 0x1a50
0x1a50: jmp qword ptr [rip+0x20654a]
Execute the function: strdup

0x1a50: the return address is 0x2f2a
Block exists: test rax,rax at address 0x2f2a is visited for 2 times

0x2f68: xor ebp,ebp
0x2f6a: test rbx,rbx
0x2f6d: je 0x2f45
0x2f6d: jump address is 0x2f45
0x2f6f: mov dword ptr [rbx],eax
0x2f71: jmp 0x2f45
0x2f71: jump address is 0x2f45
Block exists: mov rdx,qword ptr [rsp+0x8] at address 0x2f45 is visited for 3 times

0x2a50: cmp byte ptr [rsp+0xe0],0x0
0x2a58: jne 0x2b20
0x2a58: jump address is 0x2b20
0x2a5e: mov rbx,r15
0x2a61: lea rsi,[rip+0x3898]
0x2a68: mov rdx,rbx
0x2a6b: mov edi,0x1
0x2a70: xor eax,eax
0x2a72: call 0x19a0
0x2a72: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2a77
0x2a77: jmp 0x2907
0x2a77: jump address is 0x2907
Block exists: cmp rbx,r15 at address 0x2907 is visited for 4 times

0x2b20: mov rdi,r15
0x2b23: call 0x2f80
0x2b23: jump address is 0x2f80
Execute the function: canon_host

0x2b23: the return address is 0x2b28
0x2b28: test rax,rax
0x2b2b: mov rbx,rax
0x2b2e: jne 0x2a61
0x2b2e: jump address is 0x2a61
0x2b34: jmp 0x2a5e
0x2b34: jump address is 0x2a5e
Block exists: mov rbx,r15 at address 0x2a5e is visited for 2 times

0x2a61: lea rsi,[rip+0x3898]
0x2a68: mov rdx,rbx
0x2a6b: mov edi,0x1
0x2a70: xor eax,eax
0x2a72: call 0x19a0
0x2a72: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2a77
0x2a77: jmp 0x2907
0x2a77: jump address is 0x2907
Block exists: cmp rbx,r15 at address 0x2907 is visited for 4 times

0x28a0: movzx edx,byte ptr [rax]
0x28a3: test dl,dl
0x28a5: je 0x28b7
0x28a5: jump address is 0x28b7
Block exists: mov byte ptr [rcx],0x0 at address 0x28b7 is visited for 3 times

Block exists: add rax,0x1 at address 0x28a7 is visited for 3 times

0x2802: mov rdi,qword ptr [rip+0x20589f]
0x2809: mov rax,qword ptr [rdi+0x28]
0x280d: cmp rax,qword ptr [rdi+0x30]
0x2811: jae 0x2a80
0x2811: jump address is 0x2a80
0x2817: lea rdx,[rax+0x1]
0x281b: mov qword ptr [rdi+0x28],rdx
0x281f: mov byte ptr [rax],0xa
0x2822: mov rax,qword ptr [rsp+0x1e8]
0x282a: xor rax,qword ptr fs:0x28
0x2833: jne 0x2b39
0x2833: jump address is 0x2b39
0x2839: add rsp,0x1f8
0x2840: pop rbx
0x2841: pop rbp
0x2842: pop r12
0x2844: pop r13
0x2846: pop r14
0x2848: pop r15
0x284a: ret
0x284a: the return address is 0x1dc8
0x1dc8: jmp 0x1d85
0x1dc8: jump address is 0x1d85
Block exists: add r13,0x180 at address 0x1d85 is visited for 2 times

0x2a80: mov esi,0xa
0x2a85: call 0x1850
0x2a85: jump address is 0x1850
0x1850: jmp qword ptr [rip+0x20664a]
Execute the function: __overflow

0x29e0: mov rdi,qword ptr [rsp+0x18]
0x29e5: lea rsi,[rip+0x2056f4]
0x29ec: call 0x30d0
0x29ec: jump address is 0x30d0
0x30d0: test rdi,rdi
0x30d3: lea rcx,[rsi+0x14]
0x30d7: mov byte ptr [rsi+0x14],0x0
0x30db: movabs r9,0x6666666666666667
0x30e5: movabs rsi,0xcccccccccccccccd
0x30ef: mov r8d,0x30
0x30f5: js 0x3133
0x30f5: jump address is 0x3133
0x30f7: nop word ptr [rax+rax*1+0x0]
0x3100: mov rax,rdi
0x3103: sub rcx,0x1
0x3107: mul rsi
0x310a: shr rdx,0x3
0x310e: lea rax,[rdx+rdx*4]
0x3112: add rax,rax
0x3115: sub rdi,rax
0x3118: add edi,0x30
0x311b: test rdx,rdx
0x311e: mov byte ptr [rcx],dil
0x3121: mov rdi,rdx
0x3124: jne 0x3100
0x3124: jump address is 0x3100
0x3126: mov rax,rcx
0x3129: ret
0x3129: the return address is 0x29f1
0x29f1: mov rdx,rax
0x29f4: jmp 0x27da
0x29f4: jump address is 0x27da
0x27da: lea rsi,[rip+0x3b1f]
0x27e1: xor eax,eax
0x27e3: mov edi,0x1
0x27e8: call 0x19a0
0x27e8: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x27ed
Block exists: cmp byte ptr [rip+0x20581c],0x0 at address 0x27ed is visited for 3 times

0x3100: mov rax,rdi
0x3103: sub rcx,0x1
0x3107: mul rsi
0x310a: shr rdx,0x3
0x310e: lea rax,[rdx+rdx*4]
0x3112: add rax,rax
0x3115: sub rdi,rax
0x3118: add edi,0x30
0x311b: test rdx,rdx
0x311e: mov byte ptr [rcx],dil
0x3121: mov rdi,rdx
0x3124: jne 0x3100
0x3124: jump address is 0x3100
Block exists: mov rax,rcx at address 0x3126 is visited for 3 times

0x3100: mov rax,rdi
0x3103: sub rcx,0x1
0x3107: mul rsi
0x310a: shr rdx,0x3
0x310e: lea rax,[rdx+rdx*4]
0x3112: add rax,rax
0x3115: sub rdi,rax
0x3118: add edi,0x30
0x311b: test rdx,rdx
0x311e: mov byte ptr [rcx],dil
0x3121: mov rdi,rdx
0x3124: jne 0x3100
0x3124: jump address is 0x3100
Block exists: mov rax,rdi at address 0x3100 is visited for 5 times

Block exists: mov rax,rcx at address 0x3126 is visited for 3 times

0x3133: mov rax,rdi
0x3136: lea rsi,[rcx-0x1]
0x313a: imul r9
0x313d: mov rax,rdi
0x3140: sar rax,0x3f
0x3144: sar rdx,0x2
0x3148: sub rdx,rax
0x314b: lea rax,[rdx+rdx*4]
0x314f: lea eax,[r8+rax*2]
0x3153: sub eax,edi
0x3155: test rdx,rdx
0x3158: mov rdi,rdx
0x315b: mov byte ptr [rcx-0x1],al
0x315e: jne 0x3130
0x315e: jump address is 0x3130
0x3160: sub rcx,0x2
0x3164: mov byte ptr [rsi-0x1],0x2d
0x3168: mov rax,rcx
0x316b: ret
0x316b: the return address is 0x29f1
Block exists: mov rdx,rax at address 0x29f1 is visited for 6 times

0x3130: mov rcx,rsi
0x3133: mov rax,rdi
0x3136: lea rsi,[rcx-0x1]
0x313a: imul r9
0x313d: mov rax,rdi
0x3140: sar rax,0x3f
0x3144: sar rdx,0x2
0x3148: sub rdx,rax
0x314b: lea rax,[rdx+rdx*4]
0x314f: lea eax,[r8+rax*2]
0x3153: sub eax,edi
0x3155: test rdx,rdx
0x3158: mov rdi,rdx
0x315b: mov byte ptr [rcx-0x1],al
0x315e: jne 0x3130
0x315e: jump address is 0x3130
Block exists: mov rcx,rsi at address 0x3130 is visited for 4 times

Block exists: sub rcx,0x2 at address 0x3160 is visited for 4 times

0x2650: movzx ecx,byte ptr [rax]
0x2653: test cl,cl
0x2655: je 0x2667
0x2655: jump address is 0x2667
Block exists: mov byte ptr [rdx],0x0 at address 0x2667 is visited for 2 times

0x2657: add rax,0x1
0x265b: add rdx,0x1
0x265f: mov byte ptr [rdx-0x1],cl
0x2662: cmp rax,rdi
0x2665: jb 0x2650
0x2665: jump address is 0x2650
Block exists: movzx ecx,byte ptr [rax] at address 0x2650 is visited for 2 times

0x2667: mov byte ptr [rdx],0x0
0x266a: lea rdx,[rsp+0x20]
0x266f: mov edi,0x1
0x2674: call 0x1920
0x2674: jump address is 0x1920
0x1920: jmp qword ptr [rip+0x2065e2]
Execute the function: __xstat

0x1920: the return address is 0x2679
Block exists: test eax,eax at address 0x2679 is visited for 1 times

0x2667: mov byte ptr [rdx],0x0
0x266a: lea rdx,[rsp+0x20]
0x266f: mov edi,0x1
0x2674: call 0x1920
0x2674: jump address is 0x1920
0x1920: jmp qword ptr [rip+0x2065e2]
Execute the function: __xstat

0x1920: the return address is 0x2679
Block exists: test eax,eax at address 0x2679 is visited for 1 times

0x29a0: mov eax,0x2f
0x29a5: lea rsi,[rsp+0xb0]
0x29ad: test cl,cl
0x29af: mov word ptr [rsp+0xb4],ax
0x29b7: lea rax,[rdi+0x8]
0x29bb: mov dword ptr [rsp+0xb0],0x7665642f
0x29c6: lea rdi,[rdi+0x28]
0x29ca: lea rdx,[rsi+0x5]
0x29ce: mov r12,rax
0x29d1: jne 0x2657
0x29d1: jump address is 0x2657
Block exists: add rax,0x1 at address 0x2657 is visited for 3 times

0x29d7: jmp 0x2667
0x29d7: jump address is 0x2667
Block exists: mov byte ptr [rdx],0x0 at address 0x2667 is visited for 3 times

0x1de3: cmp ebp,r12d
0x1de6: jg 0x1dca
0x1de6: jump address is 0x1dca
0x1de8: jmp 0x1d85
0x1de8: jump address is 0x1d85
Block exists: add r13,0x180 at address 0x1d85 is visited for 2 times

0x1dca: mov rsi,qword ptr [rbx+r12*8]
0x1dce: mov edx,0x20
0x1dd3: mov rdi,r15
0x1dd6: add r12,0x1
0x1dda: call 0x1740
0x1dda: jump address is 0x1740
0x1740: jmp qword ptr [rip+0x2066d2]
Execute the function: strncmp

0x1740: the return address is 0x1ddf
0x1ddf: test eax,eax
0x1de1: je 0x1dc0
0x1de1: jump address is 0x1dc0
0x1de3: cmp ebp,r12d
0x1de6: jg 0x1dca
0x1de6: jump address is 0x1dca
0x1de8: jmp 0x1d85
0x1de8: jump address is 0x1d85
Block exists: add r13,0x180 at address 0x1d85 is visited for 2 times

0x1dca: mov rsi,qword ptr [rbx+r12*8]
0x1dce: mov edx,0x20
0x1dd3: mov rdi,r15
0x1dd6: add r12,0x1
0x1dda: call 0x1740
0x1dda: jump address is 0x1740
0x1740: jmp qword ptr [rip+0x2066d2]
Execute the function: strncmp

0x1740: the return address is 0x1ddf
0x1ddf: test eax,eax
0x1de1: je 0x1dc0
0x1de1: jump address is 0x1dc0
Block exists: mov rdi,r13 at address 0x1dc0 is visited for 2 times

Block exists: cmp ebp,r12d at address 0x1de3 is visited for 2 times

0x1dc0: mov rdi,r13
0x1dc3: call 0x2600
0x1dc3: jump address is 0x2600
0x2600: push r15
0x2602: push r14
0x2604: push r13
0x2606: push r12
0x2608: push rbp
0x2609: push rbx
0x260a: mov rbp,rdi
0x260d: sub rsp,0x1f8
0x2614: movzx ecx,byte ptr [rdi+0x8]
0x2618: mov rax,qword ptr fs:0x28
0x2621: mov qword ptr [rsp+0x1e8],rax
0x2629: xor eax,eax
0x262b: cmp cl,0x2f
0x262e: jne 0x29a0
0x262e: jump address is 0x29a0
0x2634: lea rax,[rdi+0x8]
0x2638: lea rsi,[rsp+0xb0]
0x2640: lea rdi,[rdi+0x28]
0x2644: mov r12,rax
0x2647: mov rdx,rsi
0x264a: jmp 0x2657
0x264a: jump address is 0x2657
0x2657: add rax,0x1
0x265b: add rdx,0x1
0x265f: mov byte ptr [rdx-0x1],cl
0x2662: cmp rax,rdi
0x2665: jb 0x2650
0x2665: jump address is 0x2650
0x2667: mov byte ptr [rdx],0x0
0x266a: lea rdx,[rsp+0x20]
0x266f: mov edi,0x1
0x2674: call 0x1920
0x2674: jump address is 0x1920
0x1920: jmp qword ptr [rip+0x2065e2]
Execute the function: __xstat

0x1920: the return address is 0x2679
0x2679: test eax,eax
0x267b: jne 0x2870
0x267b: jump address is 0x2870
0x2681: mov eax,dword ptr [rsp+0x38]
0x2685: mov r14,qword ptr [rsp+0x68]
0x268a: and eax,0x10
0x268d: cmp eax,0x1
0x2690: sbb r13d,r13d
0x2693: and r13d,0xa
0x2697: add r13d,0x20
0x269b: lea rbx,[rbp+0x2c]
0x269f: lea rsi,[rip+0x3635]
0x26a6: xor eax,eax
0x26a8: mov edx,0x20
0x26ad: mov edi,0x1
0x26b2: mov rcx,rbx
0x26b5: call 0x19a0
0x26b5: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x26ba
0x26ba: cmp byte ptr [rip+0x205954],0x0
0x26c1: je 0x2740
0x26c1: jump address is 0x2740
0x26c3: movzx edx,byte ptr [rbp+0x2c]
0x26c7: lea r15,[rsp+0xe0]
0x26cf: lea rcx,[rbp+0x4c]
0x26d3: mov rax,r15
0x26d6: test dl,dl
0x26d8: jne 0x285b
0x26d8: jump address is 0x285b
0x26de: xchg ax,ax
0x26e0: mov byte ptr [rax],0x0
0x26e3: mov rdi,r15
0x26e6: call 0x18c0
0x26e6: jump address is 0x18c0
0x18c0: jmp qword ptr [rip+0x206612]
Execute the function: getpwnam

0x18c0: the return address is 0x26eb
0x26eb: test rax,rax
0x26ee: mov rbx,rax
0x26f1: je 0x2a00
0x26f1: jump address is 0x2a00
0x26f7: mov r15,qword ptr [rax+0x18]
0x26fb: mov esi,0x2c
0x2700: mov rdi,r15
0x2703: call 0x1830
0x2703: jump address is 0x1830
0x1830: jmp qword ptr [rip+0x20665a]
Execute the function: strchr

0x1830: the return address is 0x2708
0x2708: test rax,rax
0x270b: je 0x2714
0x270b: jump address is 0x2714
0x270d: mov byte ptr [rax],0x0
0x2710: mov r15,qword ptr [rbx+0x18]
0x2714: mov rsi,qword ptr [rbx]
0x2717: mov rdi,r15
0x271a: call 0x20d0
0x271a: jump address is 0x20d0
Execute the function: create_fullname

0x271a: the return address is 0x271f
0x271f: lea rsi,[rip+0x35a8]
0x2726: mov rbx,rax
0x2729: mov rdx,rax
0x272c: mov edi,0x1
0x2731: xor eax,eax
0x2733: call 0x19a0
0x2733: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2738
0x2738: mov rdi,rbx
0x273b: call 0x16f0
0x273b: jump address is 0x16f0
0x16f0: jmp qword ptr [rip+0x2066fa]
Execute the function: free

0x16f0: the return address is 0x2740
Block exists: lea rsi,[rip+0x3591] at address 0x2740 is visited for 5 times

0x2714: mov rsi,qword ptr [rbx]
0x2717: mov rdi,r15
0x271a: call 0x20d0
0x271a: jump address is 0x20d0
Execute the function: create_fullname

0x271a: the return address is 0x271f
Block exists: lea rsi,[rip+0x35a8] at address 0x271f is visited for 4 times

0x2a00: lea rsi,[rip+0x32b5]
0x2a07: xor edi,edi
0x2a09: mov edx,0x5
0x2a0e: call 0x17d0
0x2a0e: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2a13
0x2a13: lea rsi,[rip+0x32ae]
0x2a1a: mov rdx,rax
0x2a1d: mov edi,0x1
0x2a22: xor eax,eax
0x2a24: call 0x19a0
0x2a24: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2a29
0x2a29: jmp 0x2740
0x2a29: jump address is 0x2740
Block exists: lea rsi,[rip+0x3591] at address 0x2740 is visited for 5 times

0x285b: add rbx,0x1
0x285f: add rax,0x1
0x2863: mov byte ptr [rax-0x1],dl
0x2866: cmp rcx,rbx
0x2869: ja 0x2850
0x2869: jump address is 0x2850
0x286b: jmp 0x26e0
0x286b: jump address is 0x26e0
0x26e0: mov byte ptr [rax],0x0
0x26e3: mov rdi,r15
0x26e6: call 0x18c0
0x26e6: jump address is 0x18c0
0x18c0: jmp qword ptr [rip+0x206612]
Execute the function: getpwnam

0x18c0: the return address is 0x26eb
Block exists: test rax,rax at address 0x26eb is visited for 4 times

0x2850: movzx edx,byte ptr [rbx]
0x2853: test dl,dl
0x2855: je 0x26e0
0x2855: jump address is 0x26e0
Block exists: mov byte ptr [rax],0x0 at address 0x26e0 is visited for 4 times

Block exists: add rbx,0x1 at address 0x285b is visited for 4 times

0x2740: lea rsi,[rip+0x3591]
0x2747: xor eax,eax
0x2749: mov r8,r12
0x274c: mov ecx,0x20
0x2751: mov edx,r13d
0x2754: mov edi,0x1
0x2759: call 0x19a0
0x2759: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x275e
0x275e: cmp byte ptr [rip+0x2058b2],0x0
0x2765: je 0x2799
0x2765: jump address is 0x2799
0x2767: test r14,r14
0x276a: jne 0x2920
0x276a: jump address is 0x2920
0x2770: lea rsi,[rip+0x3580]
0x2777: mov edx,0x5
0x277c: xor edi,edi
0x277e: call 0x17d0
0x277e: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2783
0x2783: mov rdx,rax
0x2786: lea rsi,[rip+0x3564]
0x278d: mov edi,0x1
0x2792: xor eax,eax
0x2794: call 0x19a0
0x2794: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2799
Block exists: movsxd rax,dword ptr [rbp+0x154] at address 0x2799 is visited for 4 times

0x2920: mov rcx,qword ptr [rip+0x205801]
0x2927: test rcx,rcx
0x292a: je 0x2a30
0x292a: jump address is 0x2a30
0x2930: sub rcx,r14
0x2933: lea rdx,[rip+0x337c]
0x293a: cmp rcx,0x3b
0x293e: jle 0x2786
0x293e: jump address is 0x2786
Block exists: lea rsi,[rip+0x3564] at address 0x2786 is visited for 1 times

0x2944: cmp rcx,0x1517f
0x294b: jle 0x2a90
0x294b: jump address is 0x2a90
0x2951: mov rax,rcx
0x2954: movabs rdx,0x1845c8a0ce512957
0x295e: sar rcx,0x3f
0x2962: imul rdx
0x2965: lea rdi,[rip+0x2057a4]
0x296c: mov esi,0x1
0x2971: xor eax,eax
0x2973: sar rdx,0xd
0x2977: sub rdx,rcx
0x297a: lea rcx,[rip+0x336b]
0x2981: mov r8,rdx
0x2984: mov edx,0x16
0x2989: call 0x1aa0
0x2989: jump address is 0x1aa0
0x1aa0: jmp qword ptr [rip+0x206522]
Execute the function: __sprintf_chk

0x1aa0: the return address is 0x298e
0x298e: lea rdx,[rip+0x20577b]
0x2995: jmp 0x2786
0x2995: jump address is 0x2786
Block exists: lea rsi,[rip+0x3564] at address 0x2786 is visited for 1 times

0x2a90: mov rax,rcx
0x2a93: movabs rdx,0x48d159e26af37c05
0x2a9d: lea rdi,[rip+0x20566c]
0x2aa4: imul rdx
0x2aa7: mov rax,rcx
0x2aaa: mov esi,0x1
0x2aaf: sar rax,0x3f
0x2ab3: sar rdx,0xa
0x2ab7: mov r8,rdx
0x2aba: movabs rdx,0x8888888888888889
0x2ac4: sub r8,rax
0x2ac7: imul rax,r8,0xe10
0x2ace: sub rcx,rax
0x2ad1: mov rax,rcx
0x2ad4: lea rcx,[rip+0x3207]
0x2adb: mul rdx
0x2ade: xor eax,eax
0x2ae0: shr rdx,0x5
0x2ae4: mov r9d,edx
0x2ae7: mov edx,0x16
0x2aec: call 0x1aa0
0x2aec: jump address is 0x1aa0
0x1aa0: jmp qword ptr [rip+0x206522]
Execute the function: __sprintf_chk

0x1aa0: the return address is 0x2af1
0x2af1: lea rdx,[rip+0x205618]
0x2af8: jmp 0x2786
0x2af8: jump address is 0x2786
Block exists: lea rsi,[rip+0x3564] at address 0x2786 is visited for 1 times

0x2a30: lea rdi,[rip+0x2056f1]
0x2a37: call 0x1900
0x2a37: jump address is 0x1900
0x1900: jmp qword ptr [rip+0x2065f2]
Execute the function: time

0x1900: the return address is 0x2a3c
0x2a3c: mov rcx,qword ptr [rip+0x2056e5]
0x2a43: jmp 0x2930
0x2a43: jump address is 0x2930
Block exists: sub rcx,r14 at address 0x2930 is visited for 4 times

0x2799: movsxd rax,dword ptr [rbp+0x154]
0x27a0: lea rdi,[rsp+0x18]
0x27a5: mov qword ptr [rsp+0x18],rax
0x27aa: call 0x1700
0x27aa: jump address is 0x1700
0x1700: jmp qword ptr [rip+0x2066f2]
Execute the function: localtime

0x1700: the return address is 0x27af
0x27af: test rax,rax
0x27b2: je 0x29e0
0x27b2: jump address is 0x29e0
0x27b8: mov rdx,qword ptr [rip+0x205979]
0x27bf: lea rdi,[rip+0x20591a]
0x27c6: mov rcx,rax
0x27c9: mov esi,0x21
0x27ce: call 0x19b0
0x27ce: jump address is 0x19b0
0x19b0: jmp qword ptr [rip+0x20659a]
Execute the function: strftime

0x19b0: the return address is 0x27d3
0x27d3: lea rdx,[rip+0x205906]
0x27da: lea rsi,[rip+0x3b1f]
0x27e1: xor eax,eax
0x27e3: mov edi,0x1
0x27e8: call 0x19a0
0x27e8: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x27ed
0x27ed: cmp byte ptr [rip+0x20581c],0x0
0x27f4: je 0x2802
0x27f4: jump address is 0x2802
0x27f6: movzx edx,byte ptr [rbp+0x4c]
0x27fa: test dl,dl
0x27fc: jne 0x2880
0x27fc: jump address is 0x2880
Block exists: mov rdi,qword ptr [rip+0x20589f] at address 0x2802 is visited for 4 times

0x2880: lea r15,[rsp+0xe0]
0x2888: lea rax,[rbp+0x4c]
0x288c: add rbp,0x14c
0x2893: mov rcx,r15
0x2896: jmp 0x28a7
0x2896: jump address is 0x28a7
0x28a7: add rax,0x1
0x28ab: add rcx,0x1
0x28af: mov byte ptr [rcx-0x1],dl
0x28b2: cmp rbp,rax
0x28b5: ja 0x28a0
0x28b5: jump address is 0x28a0
0x28b7: mov byte ptr [rcx],0x0
0x28ba: mov esi,0x3a
0x28bf: mov rdi,r15
0x28c2: call 0x1830
0x28c2: jump address is 0x1830
0x1830: jmp qword ptr [rip+0x20665a]
Execute the function: strchr

0x1830: the return address is 0x28c7
0x28c7: test rax,rax
0x28ca: je 0x2a50
0x28ca: jump address is 0x2a50
0x28d0: mov byte ptr [rax],0x0
0x28d3: cmp byte ptr [rsp+0xe0],0x0
0x28db: lea rcx,[rax+0x1]
0x28df: jne 0x2afd
0x28df: jump address is 0x2afd
0x28e5: mov rbx,r15
0x28e8: test rcx,rcx
0x28eb: je 0x2a61
0x28eb: jump address is 0x2a61
0x28f1: lea rsi,[rip+0x3405]
0x28f8: mov rdx,rbx
0x28fb: mov edi,0x1
0x2900: xor eax,eax
0x2902: call 0x19a0
0x2902: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2907
0x2907: cmp rbx,r15
0x290a: je 0x2802
0x290a: jump address is 0x2802
Block exists: mov rdi,qword ptr [rip+0x20589f] at address 0x2802 is visited for 4 times

0x2910: mov rdi,rbx
0x2913: call 0x16f0
0x2913: jump address is 0x16f0
0x16f0: jmp qword ptr [rip+0x2066fa]
Execute the function: free

0x16f0: the return address is 0x2918
0x2918: jmp 0x2802
0x2918: jump address is 0x2802
Block exists: mov rdi,qword ptr [rip+0x20589f] at address 0x2802 is visited for 4 times

0x2a61: lea rsi,[rip+0x3898]
0x2a68: mov rdx,rbx
0x2a6b: mov edi,0x1
0x2a70: xor eax,eax
0x2a72: call 0x19a0
0x2a72: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2a77
0x2a77: jmp 0x2907
0x2a77: jump address is 0x2907
Block exists: cmp rbx,r15 at address 0x2907 is visited for 5 times

0x2afd: mov rdi,r15
0x2b00: mov qword ptr [rsp+0x8],rcx
0x2b05: call 0x2f80
0x2b05: jump address is 0x2f80
Execute the function: canon_host

0x2b05: the return address is 0x2b0a
0x2b0a: test rax,rax
0x2b0d: mov rbx,rax
0x2b10: mov rcx,qword ptr [rsp+0x8]
0x2b15: jne 0x28e8
0x2b15: jump address is 0x28e8
0x2b1b: jmp 0x28e5
0x2b1b: jump address is 0x28e5
Block exists: mov rbx,r15 at address 0x28e5 is visited for 5 times

0x28e8: test rcx,rcx
0x28eb: je 0x2a61
0x28eb: jump address is 0x2a61
Block exists: lea rsi,[rip+0x3898] at address 0x2a61 is visited for 8 times

Block exists: lea rsi,[rip+0x3405] at address 0x28f1 is visited for 6 times

0x2a50: cmp byte ptr [rsp+0xe0],0x0
0x2a58: jne 0x2b20
0x2a58: jump address is 0x2b20
0x2a5e: mov rbx,r15
0x2a61: lea rsi,[rip+0x3898]
0x2a68: mov rdx,rbx
0x2a6b: mov edi,0x1
0x2a70: xor eax,eax
0x2a72: call 0x19a0
0x2a72: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2a77
0x2a77: jmp 0x2907
0x2a77: jump address is 0x2907
Block exists: cmp rbx,r15 at address 0x2907 is visited for 5 times

0x2b20: mov rdi,r15
0x2b23: call 0x2f80
0x2b23: jump address is 0x2f80
Execute the function: canon_host

0x2b23: the return address is 0x2b28
0x2b28: test rax,rax
0x2b2b: mov rbx,rax
0x2b2e: jne 0x2a61
0x2b2e: jump address is 0x2a61
0x2b34: jmp 0x2a5e
0x2b34: jump address is 0x2a5e
Block exists: mov rbx,r15 at address 0x2a5e is visited for 3 times

0x2a61: lea rsi,[rip+0x3898]
0x2a68: mov rdx,rbx
0x2a6b: mov edi,0x1
0x2a70: xor eax,eax
0x2a72: call 0x19a0
0x2a72: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2a77
0x2a77: jmp 0x2907
0x2a77: jump address is 0x2907
Block exists: cmp rbx,r15 at address 0x2907 is visited for 5 times

0x28a0: movzx edx,byte ptr [rax]
0x28a3: test dl,dl
0x28a5: je 0x28b7
0x28a5: jump address is 0x28b7
Block exists: mov byte ptr [rcx],0x0 at address 0x28b7 is visited for 4 times

Block exists: add rax,0x1 at address 0x28a7 is visited for 4 times

0x2802: mov rdi,qword ptr [rip+0x20589f]
0x2809: mov rax,qword ptr [rdi+0x28]
0x280d: cmp rax,qword ptr [rdi+0x30]
0x2811: jae 0x2a80
0x2811: jump address is 0x2a80
0x2817: lea rdx,[rax+0x1]
0x281b: mov qword ptr [rdi+0x28],rdx
0x281f: mov byte ptr [rax],0xa
0x2822: mov rax,qword ptr [rsp+0x1e8]
0x282a: xor rax,qword ptr fs:0x28
0x2833: jne 0x2b39
0x2833: jump address is 0x2b39
0x2839: add rsp,0x1f8
0x2840: pop rbx
0x2841: pop rbp
0x2842: pop r12
0x2844: pop r13
0x2846: pop r14
0x2848: pop r15
0x284a: ret
0x284a: the return address is 0x1dc8
0x1dc8: jmp 0x1d85
0x1dc8: jump address is 0x1d85
Block exists: add r13,0x180 at address 0x1d85 is visited for 2 times

0x2a80: mov esi,0xa
0x2a85: call 0x1850
0x2a85: jump address is 0x1850
0x1850: jmp qword ptr [rip+0x20664a]
Execute the function: __overflow

0x29e0: mov rdi,qword ptr [rsp+0x18]
0x29e5: lea rsi,[rip+0x2056f4]
0x29ec: call 0x30d0
0x29ec: jump address is 0x30d0
Execute the function: imaxtostr

0x29ec: the return address is 0x29f1
0x29f1: mov rdx,rax
0x29f4: jmp 0x27da
0x29f4: jump address is 0x27da
0x27da: lea rsi,[rip+0x3b1f]
0x27e1: xor eax,eax
0x27e3: mov edi,0x1
0x27e8: call 0x19a0
0x27e8: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x27ed
Block exists: cmp byte ptr [rip+0x20581c],0x0 at address 0x27ed is visited for 4 times

0x2870: mov r13d,0x3f
0x2876: xor r14d,r14d
0x2879: jmp 0x269b
0x2879: jump address is 0x269b
0x269b: lea rbx,[rbp+0x2c]
0x269f: lea rsi,[rip+0x3635]
0x26a6: xor eax,eax
0x26a8: mov edx,0x20
0x26ad: mov edi,0x1
0x26b2: mov rcx,rbx
0x26b5: call 0x19a0
0x26b5: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x26ba
Block exists: cmp byte ptr [rip+0x205954],0x0 at address 0x26ba is visited for 3 times

0x2650: movzx ecx,byte ptr [rax]
0x2653: test cl,cl
0x2655: je 0x2667
0x2655: jump address is 0x2667
Block exists: mov byte ptr [rdx],0x0 at address 0x2667 is visited for 4 times

Block exists: add rax,0x1 at address 0x2657 is visited for 4 times

0x29a0: mov eax,0x2f
0x29a5: lea rsi,[rsp+0xb0]
0x29ad: test cl,cl
0x29af: mov word ptr [rsp+0xb4],ax
0x29b7: lea rax,[rdi+0x8]
0x29bb: mov dword ptr [rsp+0xb0],0x7665642f
0x29c6: lea rdi,[rdi+0x28]
0x29ca: lea rdx,[rsi+0x5]
0x29ce: mov r12,rax
0x29d1: jne 0x2657
0x29d1: jump address is 0x2657
Block exists: add rax,0x1 at address 0x2657 is visited for 4 times

0x29d7: jmp 0x2667
0x29d7: jump address is 0x2667
Block exists: mov byte ptr [rdx],0x0 at address 0x2667 is visited for 4 times

0x1d85: add r13,0x180
0x1d8c: sub r14,0x1
0x1d90: cmp r14,0xffffffffffffffff
0x1d94: jne 0x1d76
0x1d94: jump address is 0x1d76
0x1d96: jmp 0x1ce2
0x1d96: jump address is 0x1ce2
Block exists: xor eax,eax at address 0x1ce2 is visited for 3 times

0x1dea: lea rsi,[rip+0x4034]
0x1df1: xor edi,edi
0x1df3: mov edx,0x5
0x1df8: call 0x17d0
0x1df8: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1dfd
0x1dfd: lea rsi,[rip+0x4027]
0x1e04: mov rdx,rax
0x1e07: mov edi,0x1
0x1e0c: xor eax,eax
0x1e0e: call 0x19a0
0x1e0e: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1e13
0x1e13: cmp byte ptr [rip+0x2061fb],0x0
0x1e1a: jne 0x1eb3
0x1e1a: jump address is 0x1eb3
0x1e20: lea rsi,[rip+0x4015]
0x1e27: xor edi,edi
0x1e29: mov edx,0x5
0x1e2e: call 0x17d0
0x1e2e: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1e33
0x1e33: lea rsi,[rip+0x4007]
0x1e3a: mov rdx,rax
0x1e3d: mov edi,0x1
0x1e42: xor eax,eax
0x1e44: call 0x19a0
0x1e44: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1e49
0x1e49: cmp byte ptr [rip+0x2061c7],0x0
0x1e50: jne 0x1f0c
0x1e50: jump address is 0x1f0c
0x1e56: lea rsi,[rip+0x3fef]
0x1e5d: xor edi,edi
0x1e5f: mov edx,0x5
0x1e64: call 0x17d0
0x1e64: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1e69
0x1e69: mov edx,dword ptr [rip+0x2062c1]
0x1e6f: lea rsi,[rip+0x3fdb]
0x1e76: mov rcx,rax
0x1e79: mov edi,0x1
0x1e7e: xor eax,eax
0x1e80: call 0x19a0
0x1e80: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1e85
0x1e85: cmp byte ptr [rip+0x206184],0x0
0x1e8c: jne 0x1ee1
0x1e8c: jump address is 0x1ee1
0x1e8e: mov rdi,qword ptr [rip+0x206213]
0x1e95: mov rax,qword ptr [rdi+0x28]
0x1e99: cmp rax,qword ptr [rdi+0x30]
0x1e9d: jae 0x1f73
0x1e9d: jump address is 0x1f73
0x1ea3: lea rdx,[rax+0x1]
0x1ea7: mov qword ptr [rdi+0x28],rdx
0x1eab: mov byte ptr [rax],0xa
0x1eae: jmp 0x1d71
0x1eae: jump address is 0x1d71
0x1d71: add rbx,r12
0x1d74: jmp 0x1d8c
0x1d74: jump address is 0x1d8c
0x1d8c: sub r14,0x1
0x1d90: cmp r14,0xffffffffffffffff
0x1d94: jne 0x1d76
0x1d94: jump address is 0x1d76
0x1d96: jmp 0x1ce2
0x1d96: jump address is 0x1ce2
Block exists: xor eax,eax at address 0x1ce2 is visited for 3 times

0x1d76: cmp byte ptr [r13+0x2c],0x0
0x1d7b: je 0x1d85
0x1d7b: jump address is 0x1d85
0x1d7d: cmp word ptr [r13+0x0],0x7
0x1d83: je 0x1db5
0x1d83: jump address is 0x1db5
Block exists: add r13,0x180 at address 0x1d85 is visited for 3 times

0x1db5: xor r12d,r12d
0x1db8: test ebp,ebp
0x1dba: lea r15,[r13+0x2c]
0x1dbe: jne 0x1de3
0x1dbe: jump address is 0x1de3
0x1dc0: mov rdi,r13
0x1dc3: call 0x2600
0x1dc3: jump address is 0x2600
0x2600: push r15
0x2602: push r14
0x2604: push r13
0x2606: push r12
0x2608: push rbp
0x2609: push rbx
0x260a: mov rbp,rdi
0x260d: sub rsp,0x1f8
0x2614: movzx ecx,byte ptr [rdi+0x8]
0x2618: mov rax,qword ptr fs:0x28
0x2621: mov qword ptr [rsp+0x1e8],rax
0x2629: xor eax,eax
0x262b: cmp cl,0x2f
0x262e: jne 0x29a0
0x262e: jump address is 0x29a0
0x2634: lea rax,[rdi+0x8]
0x2638: lea rsi,[rsp+0xb0]
0x2640: lea rdi,[rdi+0x28]
0x2644: mov r12,rax
0x2647: mov rdx,rsi
0x264a: jmp 0x2657
0x264a: jump address is 0x2657
0x2657: add rax,0x1
0x265b: add rdx,0x1
0x265f: mov byte ptr [rdx-0x1],cl
0x2662: cmp rax,rdi
0x2665: jb 0x2650
0x2665: jump address is 0x2650
0x2667: mov byte ptr [rdx],0x0
0x266a: lea rdx,[rsp+0x20]
0x266f: mov edi,0x1
0x2674: call 0x1920
0x2674: jump address is 0x1920
0x1920: jmp qword ptr [rip+0x2065e2]
Execute the function: __xstat

0x1920: the return address is 0x2679
0x2679: test eax,eax
0x267b: jne 0x2870
0x267b: jump address is 0x2870
0x2681: mov eax,dword ptr [rsp+0x38]
0x2685: mov r14,qword ptr [rsp+0x68]
0x268a: and eax,0x10
0x268d: cmp eax,0x1
0x2690: sbb r13d,r13d
0x2693: and r13d,0xa
0x2697: add r13d,0x20
0x269b: lea rbx,[rbp+0x2c]
0x269f: lea rsi,[rip+0x3635]
0x26a6: xor eax,eax
0x26a8: mov edx,0x20
0x26ad: mov edi,0x1
0x26b2: mov rcx,rbx
0x26b5: call 0x19a0
0x26b5: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x26ba
0x26ba: cmp byte ptr [rip+0x205954],0x0
0x26c1: je 0x2740
0x26c1: jump address is 0x2740
0x26c3: movzx edx,byte ptr [rbp+0x2c]
0x26c7: lea r15,[rsp+0xe0]
0x26cf: lea rcx,[rbp+0x4c]
0x26d3: mov rax,r15
0x26d6: test dl,dl
0x26d8: jne 0x285b
0x26d8: jump address is 0x285b
0x26de: xchg ax,ax
0x26e0: mov byte ptr [rax],0x0
0x26e3: mov rdi,r15
0x26e6: call 0x18c0
0x26e6: jump address is 0x18c0
0x18c0: jmp qword ptr [rip+0x206612]
Execute the function: getpwnam

0x18c0: the return address is 0x26eb
0x26eb: test rax,rax
0x26ee: mov rbx,rax
0x26f1: je 0x2a00
0x26f1: jump address is 0x2a00
0x26f7: mov r15,qword ptr [rax+0x18]
0x26fb: mov esi,0x2c
0x2700: mov rdi,r15
0x2703: call 0x1830
0x2703: jump address is 0x1830
0x1830: jmp qword ptr [rip+0x20665a]
Execute the function: strchr

0x1830: the return address is 0x2708
0x2708: test rax,rax
0x270b: je 0x2714
0x270b: jump address is 0x2714
0x270d: mov byte ptr [rax],0x0
0x2710: mov r15,qword ptr [rbx+0x18]
0x2714: mov rsi,qword ptr [rbx]
0x2717: mov rdi,r15
0x271a: call 0x20d0
0x271a: jump address is 0x20d0
Execute the function: create_fullname

0x271a: the return address is 0x271f
0x271f: lea rsi,[rip+0x35a8]
0x2726: mov rbx,rax
0x2729: mov rdx,rax
0x272c: mov edi,0x1
0x2731: xor eax,eax
0x2733: call 0x19a0
0x2733: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2738
0x2738: mov rdi,rbx
0x273b: call 0x16f0
0x273b: jump address is 0x16f0
0x16f0: jmp qword ptr [rip+0x2066fa]
Execute the function: free

0x16f0: the return address is 0x2740
Block exists: lea rsi,[rip+0x3591] at address 0x2740 is visited for 6 times

0x2714: mov rsi,qword ptr [rbx]
0x2717: mov rdi,r15
0x271a: call 0x20d0
0x271a: jump address is 0x20d0
Execute the function: create_fullname

0x271a: the return address is 0x271f
Block exists: lea rsi,[rip+0x35a8] at address 0x271f is visited for 5 times

0x2a00: lea rsi,[rip+0x32b5]
0x2a07: xor edi,edi
0x2a09: mov edx,0x5
0x2a0e: call 0x17d0
0x2a0e: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2a13
0x2a13: lea rsi,[rip+0x32ae]
0x2a1a: mov rdx,rax
0x2a1d: mov edi,0x1
0x2a22: xor eax,eax
0x2a24: call 0x19a0
0x2a24: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2a29
0x2a29: jmp 0x2740
0x2a29: jump address is 0x2740
Block exists: lea rsi,[rip+0x3591] at address 0x2740 is visited for 6 times

0x285b: add rbx,0x1
0x285f: add rax,0x1
0x2863: mov byte ptr [rax-0x1],dl
0x2866: cmp rcx,rbx
0x2869: ja 0x2850
0x2869: jump address is 0x2850
0x286b: jmp 0x26e0
0x286b: jump address is 0x26e0
0x26e0: mov byte ptr [rax],0x0
0x26e3: mov rdi,r15
0x26e6: call 0x18c0
0x26e6: jump address is 0x18c0
0x18c0: jmp qword ptr [rip+0x206612]
Execute the function: getpwnam

0x18c0: the return address is 0x26eb
Block exists: test rax,rax at address 0x26eb is visited for 5 times

0x2850: movzx edx,byte ptr [rbx]
0x2853: test dl,dl
0x2855: je 0x26e0
0x2855: jump address is 0x26e0
Block exists: mov byte ptr [rax],0x0 at address 0x26e0 is visited for 5 times

Block exists: add rbx,0x1 at address 0x285b is visited for 5 times

0x2740: lea rsi,[rip+0x3591]
0x2747: xor eax,eax
0x2749: mov r8,r12
0x274c: mov ecx,0x20
0x2751: mov edx,r13d
0x2754: mov edi,0x1
0x2759: call 0x19a0
0x2759: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x275e
0x275e: cmp byte ptr [rip+0x2058b2],0x0
0x2765: je 0x2799
0x2765: jump address is 0x2799
0x2767: test r14,r14
0x276a: jne 0x2920
0x276a: jump address is 0x2920
0x2770: lea rsi,[rip+0x3580]
0x2777: mov edx,0x5
0x277c: xor edi,edi
0x277e: call 0x17d0
0x277e: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x2783
0x2783: mov rdx,rax
0x2786: lea rsi,[rip+0x3564]
0x278d: mov edi,0x1
0x2792: xor eax,eax
0x2794: call 0x19a0
0x2794: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2799
Block exists: movsxd rax,dword ptr [rbp+0x154] at address 0x2799 is visited for 5 times

0x2920: mov rcx,qword ptr [rip+0x205801]
0x2927: test rcx,rcx
0x292a: je 0x2a30
0x292a: jump address is 0x2a30
0x2930: sub rcx,r14
0x2933: lea rdx,[rip+0x337c]
0x293a: cmp rcx,0x3b
0x293e: jle 0x2786
0x293e: jump address is 0x2786
Block exists: lea rsi,[rip+0x3564] at address 0x2786 is visited for 1 times

0x2944: cmp rcx,0x1517f
0x294b: jle 0x2a90
0x294b: jump address is 0x2a90
0x2951: mov rax,rcx
0x2954: movabs rdx,0x1845c8a0ce512957
0x295e: sar rcx,0x3f
0x2962: imul rdx
0x2965: lea rdi,[rip+0x2057a4]
0x296c: mov esi,0x1
0x2971: xor eax,eax
0x2973: sar rdx,0xd
0x2977: sub rdx,rcx
0x297a: lea rcx,[rip+0x336b]
0x2981: mov r8,rdx
0x2984: mov edx,0x16
0x2989: call 0x1aa0
0x2989: jump address is 0x1aa0
0x1aa0: jmp qword ptr [rip+0x206522]
Execute the function: __sprintf_chk

0x1aa0: the return address is 0x298e
0x298e: lea rdx,[rip+0x20577b]
0x2995: jmp 0x2786
0x2995: jump address is 0x2786
Block exists: lea rsi,[rip+0x3564] at address 0x2786 is visited for 1 times

0x2a90: mov rax,rcx
0x2a93: movabs rdx,0x48d159e26af37c05
0x2a9d: lea rdi,[rip+0x20566c]
0x2aa4: imul rdx
0x2aa7: mov rax,rcx
0x2aaa: mov esi,0x1
0x2aaf: sar rax,0x3f
0x2ab3: sar rdx,0xa
0x2ab7: mov r8,rdx
0x2aba: movabs rdx,0x8888888888888889
0x2ac4: sub r8,rax
0x2ac7: imul rax,r8,0xe10
0x2ace: sub rcx,rax
0x2ad1: mov rax,rcx
0x2ad4: lea rcx,[rip+0x3207]
0x2adb: mul rdx
0x2ade: xor eax,eax
0x2ae0: shr rdx,0x5
0x2ae4: mov r9d,edx
0x2ae7: mov edx,0x16
0x2aec: call 0x1aa0
0x2aec: jump address is 0x1aa0
0x1aa0: jmp qword ptr [rip+0x206522]
Execute the function: __sprintf_chk

0x1aa0: the return address is 0x2af1
0x2af1: lea rdx,[rip+0x205618]
0x2af8: jmp 0x2786
0x2af8: jump address is 0x2786
Block exists: lea rsi,[rip+0x3564] at address 0x2786 is visited for 1 times

0x2a30: lea rdi,[rip+0x2056f1]
0x2a37: call 0x1900
0x2a37: jump address is 0x1900
0x1900: jmp qword ptr [rip+0x2065f2]
Execute the function: time

0x1900: the return address is 0x2a3c
0x2a3c: mov rcx,qword ptr [rip+0x2056e5]
0x2a43: jmp 0x2930
0x2a43: jump address is 0x2930
Block exists: sub rcx,r14 at address 0x2930 is visited for 5 times

0x2799: movsxd rax,dword ptr [rbp+0x154]
0x27a0: lea rdi,[rsp+0x18]
0x27a5: mov qword ptr [rsp+0x18],rax
0x27aa: call 0x1700
0x27aa: jump address is 0x1700
0x1700: jmp qword ptr [rip+0x2066f2]
Execute the function: localtime

0x1700: the return address is 0x27af
0x27af: test rax,rax
0x27b2: je 0x29e0
0x27b2: jump address is 0x29e0
0x27b8: mov rdx,qword ptr [rip+0x205979]
0x27bf: lea rdi,[rip+0x20591a]
0x27c6: mov rcx,rax
0x27c9: mov esi,0x21
0x27ce: call 0x19b0
0x27ce: jump address is 0x19b0
0x19b0: jmp qword ptr [rip+0x20659a]
Execute the function: strftime

0x19b0: the return address is 0x27d3
0x27d3: lea rdx,[rip+0x205906]
0x27da: lea rsi,[rip+0x3b1f]
0x27e1: xor eax,eax
0x27e3: mov edi,0x1
0x27e8: call 0x19a0
0x27e8: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x27ed
0x27ed: cmp byte ptr [rip+0x20581c],0x0
0x27f4: je 0x2802
0x27f4: jump address is 0x2802
0x27f6: movzx edx,byte ptr [rbp+0x4c]
0x27fa: test dl,dl
0x27fc: jne 0x2880
0x27fc: jump address is 0x2880
Block exists: mov rdi,qword ptr [rip+0x20589f] at address 0x2802 is visited for 5 times

0x2880: lea r15,[rsp+0xe0]
0x2888: lea rax,[rbp+0x4c]
0x288c: add rbp,0x14c
0x2893: mov rcx,r15
0x2896: jmp 0x28a7
0x2896: jump address is 0x28a7
0x28a7: add rax,0x1
0x28ab: add rcx,0x1
0x28af: mov byte ptr [rcx-0x1],dl
0x28b2: cmp rbp,rax
0x28b5: ja 0x28a0
0x28b5: jump address is 0x28a0
0x28b7: mov byte ptr [rcx],0x0
0x28ba: mov esi,0x3a
0x28bf: mov rdi,r15
0x28c2: call 0x1830
0x28c2: jump address is 0x1830
0x1830: jmp qword ptr [rip+0x20665a]
Execute the function: strchr

0x1830: the return address is 0x28c7
0x28c7: test rax,rax
0x28ca: je 0x2a50
0x28ca: jump address is 0x2a50
0x28d0: mov byte ptr [rax],0x0
0x28d3: cmp byte ptr [rsp+0xe0],0x0
0x28db: lea rcx,[rax+0x1]
0x28df: jne 0x2afd
0x28df: jump address is 0x2afd
0x28e5: mov rbx,r15
0x28e8: test rcx,rcx
0x28eb: je 0x2a61
0x28eb: jump address is 0x2a61
0x28f1: lea rsi,[rip+0x3405]
0x28f8: mov rdx,rbx
0x28fb: mov edi,0x1
0x2900: xor eax,eax
0x2902: call 0x19a0
0x2902: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2907
0x2907: cmp rbx,r15
0x290a: je 0x2802
0x290a: jump address is 0x2802
Block exists: mov rdi,qword ptr [rip+0x20589f] at address 0x2802 is visited for 5 times

0x2910: mov rdi,rbx
0x2913: call 0x16f0
0x2913: jump address is 0x16f0
0x16f0: jmp qword ptr [rip+0x2066fa]
Execute the function: free

0x16f0: the return address is 0x2918
0x2918: jmp 0x2802
0x2918: jump address is 0x2802
Block exists: mov rdi,qword ptr [rip+0x20589f] at address 0x2802 is visited for 5 times

0x2a61: lea rsi,[rip+0x3898]
0x2a68: mov rdx,rbx
0x2a6b: mov edi,0x1
0x2a70: xor eax,eax
0x2a72: call 0x19a0
0x2a72: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2a77
0x2a77: jmp 0x2907
0x2a77: jump address is 0x2907
Block exists: cmp rbx,r15 at address 0x2907 is visited for 6 times

0x2afd: mov rdi,r15
0x2b00: mov qword ptr [rsp+0x8],rcx
0x2b05: call 0x2f80
0x2b05: jump address is 0x2f80
0x2f80: lea rsi,[rip+0x2051e9]
0x2f87: jmp 0x2ed0
0x2f87: jump address is 0x2ed0
0x2ed0: push r12
0x2ed2: push rbp
0x2ed3: lea rdx,[rip+0x205266]
0x2eda: push rbx
0x2edb: mov rbx,rsi
0x2ede: xor esi,esi
0x2ee0: mov rbp,rdi
0x2ee3: sub rsp,0x10
0x2ee7: mov dword ptr [rip+0x20524f],0x2
0x2ef1: mov rcx,rsp
0x2ef4: mov qword ptr [rsp],0x0
0x2efc: mov rax,qword ptr fs:0x28
0x2f05: mov qword ptr [rsp+0x8],rax
0x2f0a: xor eax,eax
0x2f0c: call 0x1a40
0x2f0c: jump address is 0x1a40
0x1a40: jmp qword ptr [rip+0x206552]
Execute the function: getaddrinfo

0x1a40: the return address is 0x2f11
0x2f11: test eax,eax
0x2f13: jne 0x2f68
0x2f13: jump address is 0x2f68
0x2f15: mov r12,qword ptr [rsp]
0x2f19: mov rdi,qword ptr [r12+0x20]
0x2f1e: test rdi,rdi
0x2f21: cmove rdi,rbp
0x2f25: call 0x1a50
0x2f25: jump address is 0x1a50
0x1a50: jmp qword ptr [rip+0x20654a]
Execute the function: strdup

0x1a50: the return address is 0x2f2a
0x2f2a: test rax,rax
0x2f2d: mov rbp,rax
0x2f30: jne 0x2f3d
0x2f30: jump address is 0x2f3d
0x2f32: test rbx,rbx
0x2f35: je 0x2f3d
0x2f35: jump address is 0x2f3d
0x2f37: mov dword ptr [rbx],0xfffffff6
0x2f3d: mov rdi,r12
0x2f40: call 0x1a90
0x2f40: jump address is 0x1a90
0x1a90: jmp qword ptr [rip+0x20652a]
Execute the function: freeaddrinfo

0x1a90: the return address is 0x2f45
0x2f45: mov rdx,qword ptr [rsp+0x8]
0x2f4a: xor rdx,qword ptr fs:0x28
0x2f53: mov rax,rbp
0x2f56: jne 0x2f73
0x2f56: jump address is 0x2f73
0x2f58: add rsp,0x10
0x2f5c: pop rbx
0x2f5d: pop rbp
0x2f5e: pop r12
0x2f60: ret
0x2f60: the return address is 0x2b0a
0x2b0a: test rax,rax
0x2b0d: mov rbx,rax
0x2b10: mov rcx,qword ptr [rsp+0x8]
0x2b15: jne 0x28e8
0x2b15: jump address is 0x28e8
0x2b1b: jmp 0x28e5
0x2b1b: jump address is 0x28e5
Block exists: mov rbx,r15 at address 0x28e5 is visited for 6 times

0x28e8: test rcx,rcx
0x28eb: je 0x2a61
0x28eb: jump address is 0x2a61
Block exists: lea rsi,[rip+0x3898] at address 0x2a61 is visited for 10 times

Block exists: lea rsi,[rip+0x3405] at address 0x28f1 is visited for 7 times

0x2f3d: mov rdi,r12
0x2f40: call 0x1a90
0x2f40: jump address is 0x1a90
0x1a90: jmp qword ptr [rip+0x20652a]
Execute the function: freeaddrinfo

0x1a90: the return address is 0x2f45
Block exists: mov rdx,qword ptr [rsp+0x8] at address 0x2f45 is visited for 4 times

0x2f21: cmove rdi,rbp
0x2f25: call 0x1a50
0x2f25: jump address is 0x1a50
0x1a50: jmp qword ptr [rip+0x20654a]
Execute the function: strdup

0x1a50: the return address is 0x2f2a
Block exists: test rax,rax at address 0x2f2a is visited for 3 times

0x2f68: xor ebp,ebp
0x2f6a: test rbx,rbx
0x2f6d: je 0x2f45
0x2f6d: jump address is 0x2f45
0x2f6f: mov dword ptr [rbx],eax
0x2f71: jmp 0x2f45
0x2f71: jump address is 0x2f45
Block exists: mov rdx,qword ptr [rsp+0x8] at address 0x2f45 is visited for 4 times

0x2a50: cmp byte ptr [rsp+0xe0],0x0
0x2a58: jne 0x2b20
0x2a58: jump address is 0x2b20
0x2a5e: mov rbx,r15
0x2a61: lea rsi,[rip+0x3898]
0x2a68: mov rdx,rbx
0x2a6b: mov edi,0x1
0x2a70: xor eax,eax
0x2a72: call 0x19a0
0x2a72: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2a77
0x2a77: jmp 0x2907
0x2a77: jump address is 0x2907
Block exists: cmp rbx,r15 at address 0x2907 is visited for 6 times

0x2b20: mov rdi,r15
0x2b23: call 0x2f80
0x2b23: jump address is 0x2f80
Execute the function: canon_host

0x2b23: the return address is 0x2b28
0x2b28: test rax,rax
0x2b2b: mov rbx,rax
0x2b2e: jne 0x2a61
0x2b2e: jump address is 0x2a61
0x2b34: jmp 0x2a5e
0x2b34: jump address is 0x2a5e
Block exists: mov rbx,r15 at address 0x2a5e is visited for 4 times

0x2a61: lea rsi,[rip+0x3898]
0x2a68: mov rdx,rbx
0x2a6b: mov edi,0x1
0x2a70: xor eax,eax
0x2a72: call 0x19a0
0x2a72: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x2a77
0x2a77: jmp 0x2907
0x2a77: jump address is 0x2907
Block exists: cmp rbx,r15 at address 0x2907 is visited for 6 times

0x28a0: movzx edx,byte ptr [rax]
0x28a3: test dl,dl
0x28a5: je 0x28b7
0x28a5: jump address is 0x28b7
Block exists: mov byte ptr [rcx],0x0 at address 0x28b7 is visited for 5 times

Block exists: add rax,0x1 at address 0x28a7 is visited for 5 times

0x2802: mov rdi,qword ptr [rip+0x20589f]
0x2809: mov rax,qword ptr [rdi+0x28]
0x280d: cmp rax,qword ptr [rdi+0x30]
0x2811: jae 0x2a80
0x2811: jump address is 0x2a80
0x2817: lea rdx,[rax+0x1]
0x281b: mov qword ptr [rdi+0x28],rdx
0x281f: mov byte ptr [rax],0xa
0x2822: mov rax,qword ptr [rsp+0x1e8]
0x282a: xor rax,qword ptr fs:0x28
0x2833: jne 0x2b39
0x2833: jump address is 0x2b39
0x2839: add rsp,0x1f8
0x2840: pop rbx
0x2841: pop rbp
0x2842: pop r12
0x2844: pop r13
0x2846: pop r14
0x2848: pop r15
0x284a: ret
0x284a: the return address is 0x1dc8
0x1dc8: jmp 0x1d85
0x1dc8: jump address is 0x1d85
Block exists: add r13,0x180 at address 0x1d85 is visited for 3 times

0x2a80: mov esi,0xa
0x2a85: call 0x1850
0x2a85: jump address is 0x1850
0x1850: jmp qword ptr [rip+0x20664a]
Execute the function: __overflow

0x29e0: mov rdi,qword ptr [rsp+0x18]
0x29e5: lea rsi,[rip+0x2056f4]
0x29ec: call 0x30d0
0x29ec: jump address is 0x30d0
0x30d0: test rdi,rdi
0x30d3: lea rcx,[rsi+0x14]
0x30d7: mov byte ptr [rsi+0x14],0x0
0x30db: movabs r9,0x6666666666666667
0x30e5: movabs rsi,0xcccccccccccccccd
0x30ef: mov r8d,0x30
0x30f5: js 0x3133
0x30f5: jump address is 0x3133
0x30f7: nop word ptr [rax+rax*1+0x0]
0x3100: mov rax,rdi
0x3103: sub rcx,0x1
0x3107: mul rsi
0x310a: shr rdx,0x3
0x310e: lea rax,[rdx+rdx*4]
0x3112: add rax,rax
0x3115: sub rdi,rax
0x3118: add edi,0x30
0x311b: test rdx,rdx
0x311e: mov byte ptr [rcx],dil
0x3121: mov rdi,rdx
0x3124: jne 0x3100
0x3124: jump address is 0x3100
0x3126: mov rax,rcx
0x3129: ret
0x3129: the return address is 0x29f1
0x29f1: mov rdx,rax
0x29f4: jmp 0x27da
0x29f4: jump address is 0x27da
0x27da: lea rsi,[rip+0x3b1f]
0x27e1: xor eax,eax
0x27e3: mov edi,0x1
0x27e8: call 0x19a0
0x27e8: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x27ed
Block exists: cmp byte ptr [rip+0x20581c],0x0 at address 0x27ed is visited for 5 times

0x3100: mov rax,rdi
0x3103: sub rcx,0x1
0x3107: mul rsi
0x310a: shr rdx,0x3
0x310e: lea rax,[rdx+rdx*4]
0x3112: add rax,rax
0x3115: sub rdi,rax
0x3118: add edi,0x30
0x311b: test rdx,rdx
0x311e: mov byte ptr [rcx],dil
0x3121: mov rdi,rdx
0x3124: jne 0x3100
0x3124: jump address is 0x3100
Block exists: mov rax,rcx at address 0x3126 is visited for 4 times

0x3100: mov rax,rdi
0x3103: sub rcx,0x1
0x3107: mul rsi
0x310a: shr rdx,0x3
0x310e: lea rax,[rdx+rdx*4]
0x3112: add rax,rax
0x3115: sub rdi,rax
0x3118: add edi,0x30
0x311b: test rdx,rdx
0x311e: mov byte ptr [rcx],dil
0x3121: mov rdi,rdx
0x3124: jne 0x3100
0x3124: jump address is 0x3100
Block exists: mov rax,rdi at address 0x3100 is visited for 7 times

Block exists: mov rax,rcx at address 0x3126 is visited for 4 times

0x3133: mov rax,rdi
0x3136: lea rsi,[rcx-0x1]
0x313a: imul r9
0x313d: mov rax,rdi
0x3140: sar rax,0x3f
0x3144: sar rdx,0x2
0x3148: sub rdx,rax
0x314b: lea rax,[rdx+rdx*4]
0x314f: lea eax,[r8+rax*2]
0x3153: sub eax,edi
0x3155: test rdx,rdx
0x3158: mov rdi,rdx
0x315b: mov byte ptr [rcx-0x1],al
0x315e: jne 0x3130
0x315e: jump address is 0x3130
0x3160: sub rcx,0x2
0x3164: mov byte ptr [rsi-0x1],0x2d
0x3168: mov rax,rcx
0x316b: ret
0x316b: the return address is 0x29f1
Block exists: mov rdx,rax at address 0x29f1 is visited for 8 times

0x3130: mov rcx,rsi
0x3133: mov rax,rdi
0x3136: lea rsi,[rcx-0x1]
0x313a: imul r9
0x313d: mov rax,rdi
0x3140: sar rax,0x3f
0x3144: sar rdx,0x2
0x3148: sub rdx,rax
0x314b: lea rax,[rdx+rdx*4]
0x314f: lea eax,[r8+rax*2]
0x3153: sub eax,edi
0x3155: test rdx,rdx
0x3158: mov rdi,rdx
0x315b: mov byte ptr [rcx-0x1],al
0x315e: jne 0x3130
0x315e: jump address is 0x3130
Block exists: mov rcx,rsi at address 0x3130 is visited for 5 times

Block exists: sub rcx,0x2 at address 0x3160 is visited for 5 times

0x2870: mov r13d,0x3f
0x2876: xor r14d,r14d
0x2879: jmp 0x269b
0x2879: jump address is 0x269b
0x269b: lea rbx,[rbp+0x2c]
0x269f: lea rsi,[rip+0x3635]
0x26a6: xor eax,eax
0x26a8: mov edx,0x20
0x26ad: mov edi,0x1
0x26b2: mov rcx,rbx
0x26b5: call 0x19a0
0x26b5: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x26ba
Block exists: cmp byte ptr [rip+0x205954],0x0 at address 0x26ba is visited for 4 times

0x2650: movzx ecx,byte ptr [rax]
0x2653: test cl,cl
0x2655: je 0x2667
0x2655: jump address is 0x2667
Block exists: mov byte ptr [rdx],0x0 at address 0x2667 is visited for 5 times

Block exists: add rax,0x1 at address 0x2657 is visited for 5 times

0x29a0: mov eax,0x2f
0x29a5: lea rsi,[rsp+0xb0]
0x29ad: test cl,cl
0x29af: mov word ptr [rsp+0xb4],ax
0x29b7: lea rax,[rdi+0x8]
0x29bb: mov dword ptr [rsp+0xb0],0x7665642f
0x29c6: lea rdi,[rdi+0x28]
0x29ca: lea rdx,[rsi+0x5]
0x29ce: mov r12,rax
0x29d1: jne 0x2657
0x29d1: jump address is 0x2657
Block exists: add rax,0x1 at address 0x2657 is visited for 5 times

0x29d7: jmp 0x2667
0x29d7: jump address is 0x2667
Block exists: mov byte ptr [rdx],0x0 at address 0x2667 is visited for 5 times

0x1de3: cmp ebp,r12d
0x1de6: jg 0x1dca
0x1de6: jump address is 0x1dca
0x1de8: jmp 0x1d85
0x1de8: jump address is 0x1d85
Block exists: add r13,0x180 at address 0x1d85 is visited for 3 times

0x1dca: mov rsi,qword ptr [rbx+r12*8]
0x1dce: mov edx,0x20
0x1dd3: mov rdi,r15
0x1dd6: add r12,0x1
0x1dda: call 0x1740
0x1dda: jump address is 0x1740
0x1740: jmp qword ptr [rip+0x2066d2]
Execute the function: strncmp

0x1740: the return address is 0x1ddf
0x1ddf: test eax,eax
0x1de1: je 0x1dc0
0x1de1: jump address is 0x1dc0
Block exists: mov rdi,r13 at address 0x1dc0 is visited for 3 times

Block exists: cmp ebp,r12d at address 0x1de3 is visited for 3 times

0x1d85: add r13,0x180
0x1d8c: sub r14,0x1
0x1d90: cmp r14,0xffffffffffffffff
0x1d94: jne 0x1d76
0x1d94: jump address is 0x1d76
0x1d96: jmp 0x1ce2
0x1d96: jump address is 0x1ce2
Block exists: xor eax,eax at address 0x1ce2 is visited for 3 times

0x1d76: cmp byte ptr [r13+0x2c],0x0
0x1d7b: je 0x1d85
0x1d7b: jump address is 0x1d85
Block exists: add r13,0x180 at address 0x1d85 is visited for 3 times

0x1d7d: cmp word ptr [r13+0x0],0x7
0x1d83: je 0x1db5
0x1d83: jump address is 0x1db5
Block exists: add r13,0x180 at address 0x1d85 is visited for 3 times

0x1db5: xor r12d,r12d
0x1db8: test ebp,ebp
0x1dba: lea r15,[r13+0x2c]
0x1dbe: jne 0x1de3
0x1dbe: jump address is 0x1de3
0x1dc0: mov rdi,r13
0x1dc3: call 0x2600
0x1dc3: jump address is 0x2600
Execute the function: print_entry

0x1dc3: the return address is 0x1dc8
0x1dc8: jmp 0x1d85
0x1dc8: jump address is 0x1d85
Block exists: add r13,0x180 at address 0x1d85 is visited for 3 times

0x1de3: cmp ebp,r12d
0x1de6: jg 0x1dca
0x1de6: jump address is 0x1dca
0x1de8: jmp 0x1d85
0x1de8: jump address is 0x1d85
Block exists: add r13,0x180 at address 0x1d85 is visited for 3 times

0x1dca: mov rsi,qword ptr [rbx+r12*8]
0x1dce: mov edx,0x20
0x1dd3: mov rdi,r15
0x1dd6: add r12,0x1
0x1dda: call 0x1740
0x1dda: jump address is 0x1740
0x1740: jmp qword ptr [rip+0x2066d2]
Execute the function: strncmp

0x1740: the return address is 0x1ddf
0x1ddf: test eax,eax
0x1de1: je 0x1dc0
0x1de1: jump address is 0x1dc0
Block exists: mov rdi,r13 at address 0x1dc0 is visited for 4 times

Block exists: cmp ebp,r12d at address 0x1de3 is visited for 4 times

0x1f73: mov esi,0xa
0x1f78: call 0x1850
0x1f78: jump address is 0x1850
0x1850: jmp qword ptr [rip+0x20664a]
Execute the function: __overflow

0x1ee1: lea rsi,[rip+0x3f6f]
0x1ee8: xor edi,edi
0x1eea: mov edx,0x5
0x1eef: call 0x17d0
0x1eef: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1ef4
0x1ef4: lea rsi,[rip+0x4405]
0x1efb: mov rdx,rax
0x1efe: mov edi,0x1
0x1f03: xor eax,eax
0x1f05: call 0x19a0
0x1f05: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1f0a
0x1f0a: jmp 0x1e8e
0x1f0a: jump address is 0x1e8e
Block exists: mov rdi,qword ptr [rip+0x206213] at address 0x1e8e is visited for 1 times

0x1f0c: lea rsi,[rip+0x3f34]
0x1f13: xor edi,edi
0x1f15: mov edx,0x5
0x1f1a: call 0x17d0
0x1f1a: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1f1f
0x1f1f: lea rsi,[rip+0x3dcb]
0x1f26: mov rdx,rax
0x1f29: mov edi,0x1
0x1f2e: xor eax,eax
0x1f30: call 0x19a0
0x1f30: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1f35
0x1f35: jmp 0x1e56
0x1f35: jump address is 0x1e56
Block exists: lea rsi,[rip+0x3fef] at address 0x1e56 is visited for 1 times

0x1eb3: lea rsi,[rip+0x3f76]
0x1eba: xor edi,edi
0x1ebc: mov edx,0x5
0x1ec1: call 0x17d0
0x1ec1: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1ec6
0x1ec6: lea rsi,[rip+0x3f68]
0x1ecd: mov rdx,rax
0x1ed0: mov edi,0x1
0x1ed5: xor eax,eax
0x1ed7: call 0x19a0
0x1ed7: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1edc
0x1edc: jmp 0x1e20
0x1edc: jump address is 0x1e20
Block exists: lea rsi,[rip+0x4015] at address 0x1e20 is visited for 1 times

0x1d9b: lea rax,[rip+0x4068]
0x1da2: mov dword ptr [rip+0x206384],0x10
0x1dac: mov qword ptr [rip+0x206385],rax
0x1db3: jmp 0x1d68
0x1db3: jump address is 0x1d68
0x1d68: cmp byte ptr [rip+0x2062a7],0x0
0x1d6f: jne 0x1dea
0x1d6f: jump address is 0x1dea
Block exists: add rbx,r12 at address 0x1d71 is visited for 2 times

0x1dea: lea rsi,[rip+0x4034]
0x1df1: xor edi,edi
0x1df3: mov edx,0x5
0x1df8: call 0x17d0
0x1df8: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1dfd
0x1dfd: lea rsi,[rip+0x4027]
0x1e04: mov rdx,rax
0x1e07: mov edi,0x1
0x1e0c: xor eax,eax
0x1e0e: call 0x19a0
0x1e0e: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1e13
0x1e13: cmp byte ptr [rip+0x2061fb],0x0
0x1e1a: jne 0x1eb3
0x1e1a: jump address is 0x1eb3
0x1e20: lea rsi,[rip+0x4015]
0x1e27: xor edi,edi
0x1e29: mov edx,0x5
0x1e2e: call 0x17d0
0x1e2e: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1e33
0x1e33: lea rsi,[rip+0x4007]
0x1e3a: mov rdx,rax
0x1e3d: mov edi,0x1
0x1e42: xor eax,eax
0x1e44: call 0x19a0
0x1e44: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1e49
0x1e49: cmp byte ptr [rip+0x2061c7],0x0
0x1e50: jne 0x1f0c
0x1e50: jump address is 0x1f0c
0x1e56: lea rsi,[rip+0x3fef]
0x1e5d: xor edi,edi
0x1e5f: mov edx,0x5
0x1e64: call 0x17d0
0x1e64: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1e69
0x1e69: mov edx,dword ptr [rip+0x2062c1]
0x1e6f: lea rsi,[rip+0x3fdb]
0x1e76: mov rcx,rax
0x1e79: mov edi,0x1
0x1e7e: xor eax,eax
0x1e80: call 0x19a0
0x1e80: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1e85
0x1e85: cmp byte ptr [rip+0x206184],0x0
0x1e8c: jne 0x1ee1
0x1e8c: jump address is 0x1ee1
0x1e8e: mov rdi,qword ptr [rip+0x206213]
0x1e95: mov rax,qword ptr [rdi+0x28]
0x1e99: cmp rax,qword ptr [rdi+0x30]
0x1e9d: jae 0x1f73
0x1e9d: jump address is 0x1f73
Block exists: mov esi,0xa at address 0x1f73 is visited for 1 times

Block exists: lea rdx,[rax+0x1] at address 0x1ea3 is visited for 1 times

0x1ee1: lea rsi,[rip+0x3f6f]
0x1ee8: xor edi,edi
0x1eea: mov edx,0x5
0x1eef: call 0x17d0
0x1eef: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1ef4
0x1ef4: lea rsi,[rip+0x4405]
0x1efb: mov rdx,rax
0x1efe: mov edi,0x1
0x1f03: xor eax,eax
0x1f05: call 0x19a0
0x1f05: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1f0a
0x1f0a: jmp 0x1e8e
0x1f0a: jump address is 0x1e8e
Block exists: mov rdi,qword ptr [rip+0x206213] at address 0x1e8e is visited for 2 times

0x1f0c: lea rsi,[rip+0x3f34]
0x1f13: xor edi,edi
0x1f15: mov edx,0x5
0x1f1a: call 0x17d0
0x1f1a: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1f1f
0x1f1f: lea rsi,[rip+0x3dcb]
0x1f26: mov rdx,rax
0x1f29: mov edi,0x1
0x1f2e: xor eax,eax
0x1f30: call 0x19a0
0x1f30: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1f35
0x1f35: jmp 0x1e56
0x1f35: jump address is 0x1e56
Block exists: lea rsi,[rip+0x3fef] at address 0x1e56 is visited for 2 times

0x1eb3: lea rsi,[rip+0x3f76]
0x1eba: xor edi,edi
0x1ebc: mov edx,0x5
0x1ec1: call 0x17d0
0x1ec1: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1ec6
0x1ec6: lea rsi,[rip+0x3f68]
0x1ecd: mov rdx,rax
0x1ed0: mov edi,0x1
0x1ed5: xor eax,eax
0x1ed7: call 0x19a0
0x1ed7: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1edc
0x1edc: jmp 0x1e20
0x1edc: jump address is 0x1e20
Block exists: lea rsi,[rip+0x4015] at address 0x1e20 is visited for 2 times

0x30b0: lea rdi,[rip+0x324f]
0x30b7: mov ecx,0x6
0x30bc: mov rsi,rdx
0x30bf: repz cmps byte ptr ds:[rsi],byte ptr es:[rdi]
0x30c1: seta al
0x30c4: sbb al,0x0
0x30c6: test al,al
0x30c8: setne al
0x30cb: add rsp,0x8
0x30cf: ret
0x30cf: the return address is 0x1d4c
Block exists: test al,al at address 0x1d4c is visited for 1 times

0x30a5: add rsp,0x8
0x30a9: ret
0x30a9: the return address is 0x1d4c
Block exists: test al,al at address 0x1d4c is visited for 1 times

0x59a3: cmp word ptr [r15],0x7
0x59a8: jne 0x59b5
0x59a8: jump address is 0x59b5
0x59aa: cmp byte ptr [r15+0x2c],0x0
0x59af: jne 0x5a40
0x59af: jump address is 0x5a40
Block exists: test r12d,r12d at address 0x59b5 is visited for 2 times

0x5a40: mov edi,dword ptr [r15+0x4]
0x5a44: test edi,edi
0x5a46: jle 0x59ba
0x5a46: jump address is 0x59ba
0x5a4c: test r13b,r13b
0x5a4f: je 0x59ba
0x5a4f: jump address is 0x59ba
Block exists: cmp rbp,rbx at address 0x59ba is visited for 2 times

0x59ba: cmp rbp,rbx
0x59bd: je 0x5a80
0x59bd: jump address is 0x5a80
0x59c3: lea rax,[rbx+rbx*2]
0x59c7: mov rdx,qword ptr [r15]
0x59ca: mov rsi,r15
0x59cd: add rbx,0x1
0x59d1: shl rax,0x7
0x59d5: add rax,r14
0x59d8: mov qword ptr [rax],rdx
0x59db: lea rdi,[rax+0x8]
0x59df: mov rdx,qword ptr [r15+0x178]
0x59e6: and rdi,0xfffffffffffffff8
0x59ea: mov qword ptr [rax+0x178],rdx
0x59f1: sub rax,rdi
0x59f4: sub rsi,rax
0x59f7: add eax,0x180
0x59fc: shr eax,0x3
0x59ff: mov ecx,eax
0x5a01: rep movs qword ptr es:[rdi],qword ptr ds:[rsi]
0x5a04: call 0x19c0
0x5a04: jump address is 0x19c0
0x19c0: jmp qword ptr [rip+0x206592]
Execute the function: getutxent

0x19c0: the return address is 0x5a09
0x5a09: test rax,rax
0x5a0c: mov r15,rax
0x5a0f: jne 0x59a3
0x5a0f: jump address is 0x59a3
Block exists: cmp word ptr [r15],0x7 at address 0x59a3 is visited for 2 times

0x5a11: call 0x1790
0x5a11: jump address is 0x1790
0x1790: jmp qword ptr [rip+0x2066aa]
Execute the function: endutxent

0x1790: the return address is 0x5a16
0x5a16: mov rax,qword ptr [rsp]
0x5a1a: mov qword ptr [rax],rbx
0x5a1d: mov rax,qword ptr [rsp+0x8]
0x5a22: mov qword ptr [rax],r14
0x5a25: add rsp,0x18
0x5a29: xor eax,eax
0x5a2b: pop rbx
0x5a2c: pop rbp
0x5a2d: pop r12
0x5a2f: pop r13
0x5a31: pop r14
0x5a33: pop r15
0x5a35: ret
0x5a35: the return address is 0x1d30
0x1d30: test eax,eax
0x1d32: jne 0x1f87
0x1d32: jump address is 0x1f87
0x1d38: mov edi,0x2
0x1d3d: mov r13,qword ptr [rsp+0x10]
0x1d42: mov r14,qword ptr [rsp+0x8]
0x1d47: call 0x3070
0x1d47: jump address is 0x3070
0x3070: sub rsp,0x8
0x3074: xor esi,esi
0x3076: call 0x1990
0x3076: jump address is 0x1990
0x1990: jmp qword ptr [rip+0x2065aa]
Execute the function: setlocale

0x1990: the return address is 0x307b
0x307b: mov rdx,rax
0x307e: mov eax,0x1
0x3083: test rdx,rdx
0x3086: je 0x30a5
0x3086: jump address is 0x30a5
0x3088: lea rdi,[rip+0x3275]
0x308f: mov ecx,0x2
0x3094: mov rsi,rdx
0x3097: repz cmps byte ptr ds:[rsi],byte ptr es:[rdi]
0x3099: seta cl
0x309c: sbb cl,0x0
0x309f: xor eax,eax
0x30a1: test cl,cl
0x30a3: jne 0x30b0
0x30a3: jump address is 0x30b0
Block exists: add rsp,0x8 at address 0x30a5 is visited for 3 times

0x30b0: lea rdi,[rip+0x324f]
0x30b7: mov ecx,0x6
0x30bc: mov rsi,rdx
0x30bf: repz cmps byte ptr ds:[rsi],byte ptr es:[rdi]
0x30c1: seta al
0x30c4: sbb al,0x0
0x30c6: test al,al
0x30c8: setne al
0x30cb: add rsp,0x8
0x30cf: ret
0x30cf: the return address is 0x1d4c
0x1d4c: test al,al
0x1d4e: jne 0x1d9b
0x1d4e: jump address is 0x1d9b
0x1d50: lea rax,[rip+0x40c2]
0x1d57: mov dword ptr [rip+0x2063cf],0xc
0x1d61: mov qword ptr [rip+0x2063d0],rax
0x1d68: cmp byte ptr [rip+0x2062a7],0x0
0x1d6f: jne 0x1dea
0x1d6f: jump address is 0x1dea
0x1d71: add rbx,r12
0x1d74: jmp 0x1d8c
0x1d74: jump address is 0x1d8c
0x1d8c: sub r14,0x1
0x1d90: cmp r14,0xffffffffffffffff
0x1d94: jne 0x1d76
0x1d94: jump address is 0x1d76
0x1d96: jmp 0x1ce2
0x1d96: jump address is 0x1ce2
Block exists: xor eax,eax at address 0x1ce2 is visited for 3 times

0x1d76: cmp byte ptr [r13+0x2c],0x0
0x1d7b: je 0x1d85
0x1d7b: jump address is 0x1d85
0x1d7d: cmp word ptr [r13+0x0],0x7
0x1d83: je 0x1db5
0x1d83: jump address is 0x1db5
Block exists: add r13,0x180 at address 0x1d85 is visited for 4 times

0x1db5: xor r12d,r12d
0x1db8: test ebp,ebp
0x1dba: lea r15,[r13+0x2c]
0x1dbe: jne 0x1de3
0x1dbe: jump address is 0x1de3
0x1dc0: mov rdi,r13
0x1dc3: call 0x2600
0x1dc3: jump address is 0x2600
Execute the function: print_entry

0x1dc3: the return address is 0x1dc8
0x1dc8: jmp 0x1d85
0x1dc8: jump address is 0x1d85
Block exists: add r13,0x180 at address 0x1d85 is visited for 4 times

0x1de3: cmp ebp,r12d
0x1de6: jg 0x1dca
0x1de6: jump address is 0x1dca
0x1de8: jmp 0x1d85
0x1de8: jump address is 0x1d85
Block exists: add r13,0x180 at address 0x1d85 is visited for 4 times

0x1dca: mov rsi,qword ptr [rbx+r12*8]
0x1dce: mov edx,0x20
0x1dd3: mov rdi,r15
0x1dd6: add r12,0x1
0x1dda: call 0x1740
0x1dda: jump address is 0x1740
0x1740: jmp qword ptr [rip+0x2066d2]
Execute the function: strncmp

0x1740: the return address is 0x1ddf
0x1ddf: test eax,eax
0x1de1: je 0x1dc0
0x1de1: jump address is 0x1dc0
Block exists: mov rdi,r13 at address 0x1dc0 is visited for 5 times

Block exists: cmp ebp,r12d at address 0x1de3 is visited for 5 times

0x1d85: add r13,0x180
0x1d8c: sub r14,0x1
0x1d90: cmp r14,0xffffffffffffffff
0x1d94: jne 0x1d76
0x1d94: jump address is 0x1d76
Block exists: cmp byte ptr [r13+0x2c],0x0 at address 0x1d76 is visited for 4 times

0x1d96: jmp 0x1ce2
0x1d96: jump address is 0x1ce2
Block exists: xor eax,eax at address 0x1ce2 is visited for 3 times

0x1dea: lea rsi,[rip+0x4034]
0x1df1: xor edi,edi
0x1df3: mov edx,0x5
0x1df8: call 0x17d0
0x1df8: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1dfd
0x1dfd: lea rsi,[rip+0x4027]
0x1e04: mov rdx,rax
0x1e07: mov edi,0x1
0x1e0c: xor eax,eax
0x1e0e: call 0x19a0
0x1e0e: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1e13
0x1e13: cmp byte ptr [rip+0x2061fb],0x0
0x1e1a: jne 0x1eb3
0x1e1a: jump address is 0x1eb3
0x1e20: lea rsi,[rip+0x4015]
0x1e27: xor edi,edi
0x1e29: mov edx,0x5
0x1e2e: call 0x17d0
0x1e2e: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1e33
0x1e33: lea rsi,[rip+0x4007]
0x1e3a: mov rdx,rax
0x1e3d: mov edi,0x1
0x1e42: xor eax,eax
0x1e44: call 0x19a0
0x1e44: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1e49
0x1e49: cmp byte ptr [rip+0x2061c7],0x0
0x1e50: jne 0x1f0c
0x1e50: jump address is 0x1f0c
0x1e56: lea rsi,[rip+0x3fef]
0x1e5d: xor edi,edi
0x1e5f: mov edx,0x5
0x1e64: call 0x17d0
0x1e64: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1e69
0x1e69: mov edx,dword ptr [rip+0x2062c1]
0x1e6f: lea rsi,[rip+0x3fdb]
0x1e76: mov rcx,rax
0x1e79: mov edi,0x1
0x1e7e: xor eax,eax
0x1e80: call 0x19a0
0x1e80: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1e85
0x1e85: cmp byte ptr [rip+0x206184],0x0
0x1e8c: jne 0x1ee1
0x1e8c: jump address is 0x1ee1
0x1e8e: mov rdi,qword ptr [rip+0x206213]
0x1e95: mov rax,qword ptr [rdi+0x28]
0x1e99: cmp rax,qword ptr [rdi+0x30]
0x1e9d: jae 0x1f73
0x1e9d: jump address is 0x1f73
0x1ea3: lea rdx,[rax+0x1]
0x1ea7: mov qword ptr [rdi+0x28],rdx
0x1eab: mov byte ptr [rax],0xa
0x1eae: jmp 0x1d71
0x1eae: jump address is 0x1d71
Block exists: add rbx,r12 at address 0x1d71 is visited for 3 times

0x1f73: mov esi,0xa
0x1f78: call 0x1850
0x1f78: jump address is 0x1850
0x1850: jmp qword ptr [rip+0x20664a]
Execute the function: __overflow

0x1ee1: lea rsi,[rip+0x3f6f]
0x1ee8: xor edi,edi
0x1eea: mov edx,0x5
0x1eef: call 0x17d0
0x1eef: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1ef4
0x1ef4: lea rsi,[rip+0x4405]
0x1efb: mov rdx,rax
0x1efe: mov edi,0x1
0x1f03: xor eax,eax
0x1f05: call 0x19a0
0x1f05: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1f0a
0x1f0a: jmp 0x1e8e
0x1f0a: jump address is 0x1e8e
Block exists: mov rdi,qword ptr [rip+0x206213] at address 0x1e8e is visited for 3 times

0x1f0c: lea rsi,[rip+0x3f34]
0x1f13: xor edi,edi
0x1f15: mov edx,0x5
0x1f1a: call 0x17d0
0x1f1a: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1f1f
0x1f1f: lea rsi,[rip+0x3dcb]
0x1f26: mov rdx,rax
0x1f29: mov edi,0x1
0x1f2e: xor eax,eax
0x1f30: call 0x19a0
0x1f30: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1f35
0x1f35: jmp 0x1e56
0x1f35: jump address is 0x1e56
Block exists: lea rsi,[rip+0x3fef] at address 0x1e56 is visited for 3 times

0x1eb3: lea rsi,[rip+0x3f76]
0x1eba: xor edi,edi
0x1ebc: mov edx,0x5
0x1ec1: call 0x17d0
0x1ec1: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1ec6
0x1ec6: lea rsi,[rip+0x3f68]
0x1ecd: mov rdx,rax
0x1ed0: mov edi,0x1
0x1ed5: xor eax,eax
0x1ed7: call 0x19a0
0x1ed7: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1edc
0x1edc: jmp 0x1e20
0x1edc: jump address is 0x1e20
Block exists: lea rsi,[rip+0x4015] at address 0x1e20 is visited for 3 times

0x1d9b: lea rax,[rip+0x4068]
0x1da2: mov dword ptr [rip+0x206384],0x10
0x1dac: mov qword ptr [rip+0x206385],rax
0x1db3: jmp 0x1d68
0x1db3: jump address is 0x1d68
0x1d68: cmp byte ptr [rip+0x2062a7],0x0
0x1d6f: jne 0x1dea
0x1d6f: jump address is 0x1dea
Block exists: lea rsi,[rip+0x4034] at address 0x1dea is visited for 3 times

Block exists: add rbx,r12 at address 0x1d71 is visited for 3 times

0x30a5: add rsp,0x8
0x30a9: ret
0x30a9: the return address is 0x1d4c
Block exists: test al,al at address 0x1d4c is visited for 2 times

0x5a80: test r14,r14
0x5a83: je 0x5ab8
0x5a83: jump address is 0x5ab8
0x5a85: movabs rax,0x38e38e38e38e37
0x5a8f: cmp rbp,rax
0x5a92: ja 0x5add
0x5a92: jump address is 0x5add
0x5a94: mov rax,rbp
0x5a97: shr rax,0x1
0x5a9a: lea rbp,[rbp+rax*1+0x1]
0x5a9f: lea rsi,[rbp+rbp*2+0x0]
0x5aa4: mov rdi,r14
0x5aa7: shl rsi,0x7
0x5aab: call 0x5520
0x5aab: jump address is 0x5520
0x5520: test rsi,rsi
0x5523: push rbx
0x5524: mov rbx,rsi
0x5527: jne 0x552e
0x5527: jump address is 0x552e
0x552e: mov rsi,rbx
0x5531: call 0x1980
0x5531: jump address is 0x1980
0x1980: jmp qword ptr [rip+0x2065b2]
Execute the function: realloc

0x1980: the return address is 0x5536
0x5536: test rax,rax
0x5539: jne 0x5540
0x5539: jump address is 0x5540
0x5540: pop rbx
0x5541: ret
0x5541: the return address is 0x5ab0
0x5ab0: mov r14,rax
0x5ab3: jmp 0x59c3
0x5ab3: jump address is 0x59c3
0x59c3: lea rax,[rbx+rbx*2]
0x59c7: mov rdx,qword ptr [r15]
0x59ca: mov rsi,r15
0x59cd: add rbx,0x1
0x59d1: shl rax,0x7
0x59d5: add rax,r14
0x59d8: mov qword ptr [rax],rdx
0x59db: lea rdi,[rax+0x8]
0x59df: mov rdx,qword ptr [r15+0x178]
0x59e6: and rdi,0xfffffffffffffff8
0x59ea: mov qword ptr [rax+0x178],rdx
0x59f1: sub rax,rdi
0x59f4: sub rsi,rax
0x59f7: add eax,0x180
0x59fc: shr eax,0x3
0x59ff: mov ecx,eax
0x5a01: rep movs qword ptr es:[rdi],qword ptr ds:[rsi]
0x5a04: call 0x19c0
0x5a04: jump address is 0x19c0
0x19c0: jmp qword ptr [rip+0x206592]
Execute the function: getutxent

0x19c0: the return address is 0x5a09
0x5a09: test rax,rax
0x5a0c: mov r15,rax
0x5a0f: jne 0x59a3
0x5a0f: jump address is 0x59a3
0x5a11: call 0x1790
0x5a11: jump address is 0x1790
0x1790: jmp qword ptr [rip+0x2066aa]
Execute the function: endutxent

0x1790: the return address is 0x5a16
0x5a16: mov rax,qword ptr [rsp]
0x5a1a: mov qword ptr [rax],rbx
0x5a1d: mov rax,qword ptr [rsp+0x8]
0x5a22: mov qword ptr [rax],r14
0x5a25: add rsp,0x18
0x5a29: xor eax,eax
0x5a2b: pop rbx
0x5a2c: pop rbp
0x5a2d: pop r12
0x5a2f: pop r13
0x5a31: pop r14
0x5a33: pop r15
0x5a35: ret
0x5a35: the return address is 0x1d30
0x1d30: test eax,eax
0x1d32: jne 0x1f87
0x1d32: jump address is 0x1f87
0x1d38: mov edi,0x2
0x1d3d: mov r13,qword ptr [rsp+0x10]
0x1d42: mov r14,qword ptr [rsp+0x8]
0x1d47: call 0x3070
0x1d47: jump address is 0x3070
Execute the function: hard_locale

0x1d47: the return address is 0x1d4c
0x1d4c: test al,al
0x1d4e: jne 0x1d9b
0x1d4e: jump address is 0x1d9b
0x1d50: lea rax,[rip+0x40c2]
0x1d57: mov dword ptr [rip+0x2063cf],0xc
0x1d61: mov qword ptr [rip+0x2063d0],rax
0x1d68: cmp byte ptr [rip+0x2062a7],0x0
0x1d6f: jne 0x1dea
0x1d6f: jump address is 0x1dea
0x1d71: add rbx,r12
0x1d74: jmp 0x1d8c
0x1d74: jump address is 0x1d8c
0x1d8c: sub r14,0x1
0x1d90: cmp r14,0xffffffffffffffff
0x1d94: jne 0x1d76
0x1d94: jump address is 0x1d76
0x1d96: jmp 0x1ce2
0x1d96: jump address is 0x1ce2
Block exists: xor eax,eax at address 0x1ce2 is visited for 3 times

0x1d76: cmp byte ptr [r13+0x2c],0x0
0x1d7b: je 0x1d85
0x1d7b: jump address is 0x1d85
0x1d7d: cmp word ptr [r13+0x0],0x7
0x1d83: je 0x1db5
0x1d83: jump address is 0x1db5
Block exists: add r13,0x180 at address 0x1d85 is visited for 5 times

0x1db5: xor r12d,r12d
0x1db8: test ebp,ebp
0x1dba: lea r15,[r13+0x2c]
0x1dbe: jne 0x1de3
0x1dbe: jump address is 0x1de3
0x1dc0: mov rdi,r13
0x1dc3: call 0x2600
0x1dc3: jump address is 0x2600
Execute the function: print_entry

0x1dc3: the return address is 0x1dc8
0x1dc8: jmp 0x1d85
0x1dc8: jump address is 0x1d85
Block exists: add r13,0x180 at address 0x1d85 is visited for 5 times

0x1de3: cmp ebp,r12d
0x1de6: jg 0x1dca
0x1de6: jump address is 0x1dca
0x1de8: jmp 0x1d85
0x1de8: jump address is 0x1d85
Block exists: add r13,0x180 at address 0x1d85 is visited for 5 times

0x1dca: mov rsi,qword ptr [rbx+r12*8]
0x1dce: mov edx,0x20
0x1dd3: mov rdi,r15
0x1dd6: add r12,0x1
0x1dda: call 0x1740
0x1dda: jump address is 0x1740
0x1740: jmp qword ptr [rip+0x2066d2]
Execute the function: strncmp

0x1740: the return address is 0x1ddf
0x1ddf: test eax,eax
0x1de1: je 0x1dc0
0x1de1: jump address is 0x1dc0
Block exists: mov rdi,r13 at address 0x1dc0 is visited for 6 times

Block exists: cmp ebp,r12d at address 0x1de3 is visited for 6 times

0x1d85: add r13,0x180
0x1d8c: sub r14,0x1
0x1d90: cmp r14,0xffffffffffffffff
0x1d94: jne 0x1d76
0x1d94: jump address is 0x1d76
Block exists: cmp byte ptr [r13+0x2c],0x0 at address 0x1d76 is visited for 5 times

0x1d96: jmp 0x1ce2
0x1d96: jump address is 0x1ce2
Block exists: xor eax,eax at address 0x1ce2 is visited for 3 times

0x1dea: lea rsi,[rip+0x4034]
0x1df1: xor edi,edi
0x1df3: mov edx,0x5
0x1df8: call 0x17d0
0x1df8: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1dfd
0x1dfd: lea rsi,[rip+0x4027]
0x1e04: mov rdx,rax
0x1e07: mov edi,0x1
0x1e0c: xor eax,eax
0x1e0e: call 0x19a0
0x1e0e: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1e13
0x1e13: cmp byte ptr [rip+0x2061fb],0x0
0x1e1a: jne 0x1eb3
0x1e1a: jump address is 0x1eb3
0x1e20: lea rsi,[rip+0x4015]
0x1e27: xor edi,edi
0x1e29: mov edx,0x5
0x1e2e: call 0x17d0
0x1e2e: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1e33
0x1e33: lea rsi,[rip+0x4007]
0x1e3a: mov rdx,rax
0x1e3d: mov edi,0x1
0x1e42: xor eax,eax
0x1e44: call 0x19a0
0x1e44: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1e49
0x1e49: cmp byte ptr [rip+0x2061c7],0x0
0x1e50: jne 0x1f0c
0x1e50: jump address is 0x1f0c
0x1e56: lea rsi,[rip+0x3fef]
0x1e5d: xor edi,edi
0x1e5f: mov edx,0x5
0x1e64: call 0x17d0
0x1e64: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1e69
0x1e69: mov edx,dword ptr [rip+0x2062c1]
0x1e6f: lea rsi,[rip+0x3fdb]
0x1e76: mov rcx,rax
0x1e79: mov edi,0x1
0x1e7e: xor eax,eax
0x1e80: call 0x19a0
0x1e80: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1e85
0x1e85: cmp byte ptr [rip+0x206184],0x0
0x1e8c: jne 0x1ee1
0x1e8c: jump address is 0x1ee1
0x1e8e: mov rdi,qword ptr [rip+0x206213]
0x1e95: mov rax,qword ptr [rdi+0x28]
0x1e99: cmp rax,qword ptr [rdi+0x30]
0x1e9d: jae 0x1f73
0x1e9d: jump address is 0x1f73
0x1ea3: lea rdx,[rax+0x1]
0x1ea7: mov qword ptr [rdi+0x28],rdx
0x1eab: mov byte ptr [rax],0xa
0x1eae: jmp 0x1d71
0x1eae: jump address is 0x1d71
Block exists: add rbx,r12 at address 0x1d71 is visited for 4 times

0x1f73: mov esi,0xa
0x1f78: call 0x1850
0x1f78: jump address is 0x1850
0x1850: jmp qword ptr [rip+0x20664a]
Execute the function: __overflow

0x1ee1: lea rsi,[rip+0x3f6f]
0x1ee8: xor edi,edi
0x1eea: mov edx,0x5
0x1eef: call 0x17d0
0x1eef: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1ef4
0x1ef4: lea rsi,[rip+0x4405]
0x1efb: mov rdx,rax
0x1efe: mov edi,0x1
0x1f03: xor eax,eax
0x1f05: call 0x19a0
0x1f05: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1f0a
0x1f0a: jmp 0x1e8e
0x1f0a: jump address is 0x1e8e
Block exists: mov rdi,qword ptr [rip+0x206213] at address 0x1e8e is visited for 4 times

0x1f0c: lea rsi,[rip+0x3f34]
0x1f13: xor edi,edi
0x1f15: mov edx,0x5
0x1f1a: call 0x17d0
0x1f1a: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1f1f
0x1f1f: lea rsi,[rip+0x3dcb]
0x1f26: mov rdx,rax
0x1f29: mov edi,0x1
0x1f2e: xor eax,eax
0x1f30: call 0x19a0
0x1f30: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1f35
0x1f35: jmp 0x1e56
0x1f35: jump address is 0x1e56
Block exists: lea rsi,[rip+0x3fef] at address 0x1e56 is visited for 4 times

0x1eb3: lea rsi,[rip+0x3f76]
0x1eba: xor edi,edi
0x1ebc: mov edx,0x5
0x1ec1: call 0x17d0
0x1ec1: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x1ec6
0x1ec6: lea rsi,[rip+0x3f68]
0x1ecd: mov rdx,rax
0x1ed0: mov edi,0x1
0x1ed5: xor eax,eax
0x1ed7: call 0x19a0
0x1ed7: jump address is 0x19a0
0x19a0: jmp qword ptr [rip+0x2065a2]
Execute the function: __printf_chk

0x19a0: the return address is 0x1edc
0x1edc: jmp 0x1e20
0x1edc: jump address is 0x1e20
Block exists: lea rsi,[rip+0x4015] at address 0x1e20 is visited for 4 times

0x1d9b: lea rax,[rip+0x4068]
0x1da2: mov dword ptr [rip+0x206384],0x10
0x1dac: mov qword ptr [rip+0x206385],rax
0x1db3: jmp 0x1d68
0x1db3: jump address is 0x1d68
0x1d68: cmp byte ptr [rip+0x2062a7],0x0
0x1d6f: jne 0x1dea
0x1d6f: jump address is 0x1dea
Block exists: lea rsi,[rip+0x4034] at address 0x1dea is visited for 4 times

Block exists: add rbx,r12 at address 0x1d71 is visited for 4 times

0x59a3: cmp word ptr [r15],0x7
0x59a8: jne 0x59b5
0x59a8: jump address is 0x59b5
0x59aa: cmp byte ptr [r15+0x2c],0x0
0x59af: jne 0x5a40
0x59af: jump address is 0x5a40
Block exists: test r12d,r12d at address 0x59b5 is visited for 3 times

0x5a40: mov edi,dword ptr [r15+0x4]
0x5a44: test edi,edi
0x5a46: jle 0x59ba
0x5a46: jump address is 0x59ba
0x5a4c: test r13b,r13b
0x5a4f: je 0x59ba
0x5a4f: jump address is 0x59ba
Block exists: cmp rbp,rbx at address 0x59ba is visited for 3 times

0x59ba: cmp rbp,rbx
0x59bd: je 0x5a80
0x59bd: jump address is 0x5a80
Block exists: lea rax,[rbx+rbx*2] at address 0x59c3 is visited for 3 times

0x5a80: test r14,r14
0x5a83: je 0x5ab8
0x5a83: jump address is 0x5ab8
0x5a85: movabs rax,0x38e38e38e38e37
0x5a8f: cmp rbp,rax
0x5a92: ja 0x5add
0x5a92: jump address is 0x5add
0x5a94: mov rax,rbp
0x5a97: shr rax,0x1
0x5a9a: lea rbp,[rbp+rax*1+0x1]
0x5a9f: lea rsi,[rbp+rbp*2+0x0]
0x5aa4: mov rdi,r14
0x5aa7: shl rsi,0x7
0x5aab: call 0x5520
0x5aab: jump address is 0x5520
Execute the function: xrealloc

0x5aab: the return address is 0x5ab0
0x5ab0: mov r14,rax
0x5ab3: jmp 0x59c3
0x5ab3: jump address is 0x59c3
Block exists: lea rax,[rbx+rbx*2] at address 0x59c3 is visited for 3 times

0x5ab8: test rbp,rbp
0x5abb: mov eax,0x1
0x5ac0: mov edx,0x180
0x5ac5: cmove rbp,rax
0x5ac9: mov rax,rdx
0x5acc: xor esi,esi
0x5ace: mul rbp
0x5ad1: jo 0x5ae2
0x5ad1: jump address is 0x5ae2
0x5ad3: test rax,rax
0x5ad6: js 0x5add
0x5ad6: jump address is 0x5add
0x5ad8: test rsi,rsi
0x5adb: je 0x5a9f
0x5adb: jump address is 0x5a9f
Block exists: lea rsi,[rbp+rbp*2+0x0] at address 0x5a9f is visited for 1 times

0x5ae2: mov esi,0x1
0x5ae7: jmp 0x5ad3
0x5ae7: jump address is 0x5ad3
0x5ad3: test rax,rax
0x5ad6: js 0x5add
0x5ad6: jump address is 0x5add
0x5ad8: test rsi,rsi
0x5adb: je 0x5a9f
0x5adb: jump address is 0x5a9f
Block exists: lea rsi,[rbp+rbp*2+0x0] at address 0x5a9f is visited for 1 times

0x5add: call 0x5710
0x5add: jump address is 0x5710
0x5710: lea rsi,[rip+0x1478]
0x5717: sub rsp,0x8
0x571b: mov edx,0x5
0x5720: xor edi,edi
0x5722: call 0x17d0
0x5722: jump address is 0x17d0
0x17d0: jmp qword ptr [rip+0x20668a]
Execute the function: dcgettext

0x17d0: the return address is 0x5727
0x5727: mov edi,dword ptr [rip+0x2028f3]
0x572d: lea rdx,[rip+0xbcd]
0x5734: mov rcx,rax
0x5737: xor esi,esi
0x5739: xor eax,eax
0x573b: call 0x19d0
0x573b: jump address is 0x19d0
0x19d0: jmp qword ptr [rip+0x20658a]
Execute the function: error

0x5add: call 0x5710
0x5add: jump address is 0x5710
Block exists: lea rsi,[rip+0x1478] at address 0x5710 is visited for 2 times

0x59b5: test r12d,r12d
0x59b8: jne 0x5996
0x59b8: jump address is 0x5996
Block exists: cmp rbp,rbx at address 0x59ba is visited for 3 times

0x5ab8: test rbp,rbp
0x5abb: mov eax,0x1
0x5ac0: mov edx,0x180
0x5ac5: cmove rbp,rax
0x5ac9: mov rax,rdx
0x5acc: xor esi,esi
0x5ace: mul rbp
0x5ad1: jo 0x5ae2
0x5ad1: jump address is 0x5ae2
Block exists: mov esi,0x1 at address 0x5ae2 is visited for 2 times

Block exists: test rax,rax at address 0x5ad3 is visited for 3 times

0x59b5: test r12d,r12d
0x59b8: jne 0x5996
0x59b8: jump address is 0x5996
Block exists: cmp rbp,rbx at address 0x59ba is visited for 3 times

0x5ae2: mov esi,0x1
0x5ae7: jmp 0x5ad3
0x5ae7: jump address is 0x5ad3
Block exists: test rax,rax at address 0x5ad3 is visited for 3 times

0x59b5: test r12d,r12d
0x59b8: jne 0x5996
0x59b8: jump address is 0x5996
Block exists: cmp rbp,rbx at address 0x59ba is visited for 3 times

0x5a11: call 0x1790
0x5a11: jump address is 0x1790
0x1790: jmp qword ptr [rip+0x2066aa]
Execute the function: endutxent

0x1790: the return address is 0x5a16
Block exists: mov rax,qword ptr [rsp] at address 0x5a16 is visited for 3 times

0x31dd: mov qword ptr [rip+0x204fa4],rbx
0x31e4: mov qword ptr [rip+0x204ecd],rbx
0x31eb: pop rbx
0x31ec: ret
0x31ec: the return address is 0x1af2
0x1af2: lea rsi,[rip+0x4d88]
0x1af9: mov edi,0x6
0x1afe: call 0x1990
0x1afe: jump address is 0x1990
0x1990: jmp qword ptr [rip+0x2065aa]
Execute the function: setlocale

0x1990: the return address is 0x1b03
Block exists: lea rsi,[rip+0x42b1] at address 0x1b03 is visited for 1 times

0x31ed: mov rcx,qword ptr [rip+0x204ecc]
0x31f4: lea rdi,[rip+0x3115]
0x31fb: mov edx,0x37
0x3200: mov esi,0x1
0x3205: call 0x1a20
0x3205: jump address is 0x1a20
0x1a20: jmp qword ptr [rip+0x206562]
Execute the function: fwrite

0x1a20: the return address is 0x320a
0x320a: call 0x1710
0x320a: jump address is 0x1710
0x1710: jmp qword ptr [rip+0x2066ea]
Execute the function: abort

Unreachable instructions:
0x16a0: sub rsp,0x8
0x16a4: mov rax,qword ptr [rip+0x206935]
0x16ab: test rax,rax
0x16ae: je 0x16b2
0x16b0: call rax
0x16b2: add rsp,0x8
0x16b6: ret 
0x16c0: push qword ptr [rip+0x20670a]
0x16c6: jmp qword ptr [rip+0x20670c]
0x16cc: nop dword ptr [rax+0x0]
0x16d6: push 0x0
0x16db: jmp 0x16c0
0x16e6: push 0x1
0x16eb: jmp 0x16c0
0x16f6: push 0x2
0x16fb: jmp 0x16c0
0x1706: push 0x3
0x170b: jmp 0x16c0
0x1716: push 0x4
0x171b: jmp 0x16c0
0x1726: push 0x5
0x172b: jmp 0x16c0
0x1730: jmp qword ptr [rip+0x2066da]
0x1736: push 0x6
0x173b: jmp 0x16c0
0x1746: push 0x7
0x174b: jmp 0x16c0
0x1750: jmp qword ptr [rip+0x2066ca]
0x1756: push 0x8
0x175b: jmp 0x16c0
0x1760: jmp qword ptr [rip+0x2066c2]
0x1766: push 0x9
0x176b: jmp 0x16c0
0x1776: push 0xa
0x177b: jmp 0x16c0
0x1786: push 0xb
0x178b: jmp 0x16c0
0x1796: push 0xc
0x179b: jmp 0x16c0
0x17a6: push 0xd
0x17ab: jmp 0x16c0
0x17b6: push 0xe
0x17bb: jmp 0x16c0
0x17c6: push 0xf
0x17cb: jmp 0x16c0
0x17d6: push 0x10
0x17db: jmp 0x16c0
0x17e0: jmp qword ptr [rip+0x206682]
0x17e6: push 0x11
0x17eb: jmp 0x16c0
0x17f6: push 0x12
0x17fb: jmp 0x16c0
0x1800: jmp qword ptr [rip+0x206672]
0x1806: push 0x13
0x180b: jmp 0x16c0
0x1816: push 0x14
0x181b: jmp 0x16c0
0x1820: jmp qword ptr [rip+0x206662]
0x1826: push 0x15
0x182b: jmp 0x16c0
0x1836: push 0x16
0x183b: jmp 0x16c0
0x1840: jmp qword ptr [rip+0x206652]
0x1846: push 0x17
0x184b: jmp 0x16c0
0x1856: push 0x18
0x185b: jmp 0x16c0
0x1866: push 0x19
0x186b: jmp 0x16c0
0x1876: push 0x1a
0x187b: jmp 0x16c0
0x1880: jmp qword ptr [rip+0x206632]
0x1886: push 0x1b
0x188b: jmp 0x16c0
0x1890: jmp qword ptr [rip+0x20662a]
0x1896: push 0x1c
0x189b: jmp 0x16c0
0x18a6: push 0x1d
0x18ab: jmp 0x16c0
0x18b0: jmp qword ptr [rip+0x20661a]
0x18b6: push 0x1e
0x18bb: jmp 0x16c0
0x18c6: push 0x1f
0x18cb: jmp 0x16c0
0x18d6: push 0x20
0x18db: jmp 0x16c0
0x18e0: jmp qword ptr [rip+0x206602]
0x18e6: push 0x21
0x18eb: jmp 0x16c0
0x18f0: jmp qword ptr [rip+0x2065fa]
0x18f6: push 0x22
0x18fb: jmp 0x16c0
0x1906: push 0x23
0x190b: jmp 0x16c0
0x1916: push 0x24
0x191b: jmp 0x16c0
0x1926: push 0x25
0x192b: jmp 0x16c0
0x1936: push 0x26
0x193b: jmp 0x16c0
0x1946: push 0x27
0x194b: jmp 0x16c0
0x1950: jmp qword ptr [rip+0x2065ca]
0x1956: push 0x28
0x195b: jmp 0x16c0
0x1966: push 0x29
0x196b: jmp 0x16c0
0x1976: push 0x2a
0x197b: jmp 0x16c0
0x1986: push 0x2b
0x198b: jmp 0x16c0
0x1996: push 0x2c
0x199b: jmp 0x16c0
0x19a6: push 0x2d
0x19ab: jmp 0x16c0
0x19b6: push 0x2e
0x19bb: jmp 0x16c0
0x19c6: push 0x2f
0x19cb: jmp 0x16c0
0x19d6: push 0x30
0x19db: jmp 0x16c0
0x19e6: push 0x31
0x19eb: jmp 0x16c0
0x19f6: push 0x32
0x19fb: jmp 0x16c0
0x1a06: push 0x33
0x1a0b: jmp 0x16c0
0x1a16: push 0x34
0x1a1b: jmp 0x16c0
0x1a26: push 0x35
0x1a2b: jmp 0x16c0
0x1a36: push 0x36
0x1a3b: jmp 0x16c0
0x1a46: push 0x37
0x1a4b: jmp 0x16c0
0x1a56: push 0x38
0x1a5b: jmp 0x16c0
0x1a60: jmp qword ptr [rip+0x206542]
0x1a66: push 0x39
0x1a6b: jmp 0x16c0
0x1a70: jmp qword ptr [rip+0x20653a]
0x1a76: push 0x3a
0x1a7b: jmp 0x16c0
0x1a86: push 0x3b
0x1a8b: jmp 0x16c0
0x1a96: push 0x3c
0x1a9b: jmp 0x16c0
0x1aa6: push 0x3d
0x1aab: jmp 0x16c0
0x1ab0: jmp qword ptr [rip+0x20653a]
0x1ab6: xchg ax,ax
0x1b81: nop dword ptr [rax+0x0]
0x1bae: xchg ax,ax
0x1bce: xchg ax,ax
0x1c1d: nop dword ptr [rax]
0x1c33: nop dword ptr [rax+rax*1+0x0]
0x1c44: nop dword ptr [rax+0x0]
0x1c62: nop word ptr [rax+rax*1+0x0]
0x1c74: nop dword ptr [rax+0x0]
0x1c84: nop dword ptr [rax+0x0]
0x1f7d: jmp 0x1d71
0x1f82: call 0x1800
0x1f87: lea rdx,[rip+0x3d7c]
0x1f8e: mov esi,0x3
0x1f93: xor edi,edi
0x1f95: call 0x4cb0
0x1f9a: mov rbx,rax
0x1f9d: call 0x1720
0x1fa2: mov esi,dword ptr [rax]
0x1fa4: lea rdx,[rip+0x4356]
0x1fab: mov rcx,rbx
0x1fae: mov edi,0x1
0x1fb3: xor eax,eax
0x1fb5: call 0x19d0
0x1fba: nop word ptr [rax+rax*1+0x0]
0x1fea: hlt 
0x1feb: nop dword ptr [rax+rax*1+0x0]
0x1ff0: lea rdi,[rip+0x2060a9]
0x1ff7: push rbp
0x1ff8: lea rax,[rip+0x2060a1]
0x1fff: cmp rax,rdi
0x2002: mov rbp,rsp
0x2005: je 0x2020
0x2007: mov rax,qword ptr [rip+0x205fc2]
0x200e: test rax,rax
0x2011: je 0x2020
0x2013: pop rbp
0x2014: jmp rax
0x2016: nop word ptr cs:[rax+rax*1+0x0]
0x2020: pop rbp
0x2021: ret 
0x2022: nop dword ptr [rax+0x0]
0x2026: nop word ptr cs:[rax+rax*1+0x0]
0x2030: lea rdi,[rip+0x206069]
0x2037: lea rsi,[rip+0x206062]
0x203e: push rbp
0x203f: sub rsi,rdi
0x2042: mov rbp,rsp
0x2045: sar rsi,0x3
0x2049: mov rax,rsi
0x204c: shr rax,0x3f
0x2050: add rsi,rax
0x2053: sar rsi,0x1
0x2056: je 0x2070
0x2058: mov rax,qword ptr [rip+0x205f89]
0x205f: test rax,rax
0x2062: je 0x2070
0x2064: pop rbp
0x2065: jmp rax
0x2067: nop word ptr [rax+rax*1+0x0]
0x2070: pop rbp
0x2071: ret 
0x2072: nop dword ptr [rax+0x0]
0x2076: nop word ptr cs:[rax+rax*1+0x0]
0x2080: cmp byte ptr [rip+0x206041],0x0
0x2087: jne 0x20b8
0x2089: cmp qword ptr [rip+0x205f5f],0x0
0x2091: push rbp
0x2092: mov rbp,rsp
0x2095: je 0x20a3
0x2097: mov rdi,qword ptr [rip+0x205f6a]
0x209e: call 0x1ab0
0x20a3: call 0x1ff0
0x20a8: mov byte ptr [rip+0x206019],0x1
0x20af: pop rbp
0x20b0: ret 
0x20b1: nop dword ptr [rax+0x0]
0x20b8: repz ret 
0x20ba: nop word ptr [rax+rax*1+0x0]
0x20c0: push rbp
0x20c1: mov rbp,rsp
0x20c4: pop rbp
0x20c5: jmp 0x2030
0x20ca: nop word ptr [rax+rax*1+0x0]
0x2164: nop dword ptr [rax+0x0]
0x21ee: xchg ax,ax
0x21fe: xchg ax,ax
0x235f: nop 
0x2474: nop dword ptr [rax+0x0]
0x2538: nop dword ptr [rax+rax*1+0x0]
0x2586: nop word ptr cs:[rax+rax*1+0x0]
0x25be: xchg ax,ax
0x25ca: jmp 0x22f7
0x25cf: nop 
0x25da: jmp 0x233a
0x25df: nop 
0x25ea: jmp 0x2300
0x25ef: call 0x1800
0x25f4: xchg ax,ax
0x25f6: nop word ptr cs:[rax+rax*1+0x0]
0x264c: nop dword ptr [rax+0x0]
0x284b: nop dword ptr [rax+rax*1+0x0]
0x287e: xchg ax,ax
0x2898: nop dword ptr [rax+rax*1+0x0]
0x291d: nop dword ptr [rax]
0x299a: nop word ptr [rax+rax*1+0x0]
0x29dc: nop dword ptr [rax+0x0]
0x29f9: nop dword ptr [rax+0x0]
0x2a2e: xchg ax,ax
0x2a48: nop dword ptr [rax+rax*1+0x0]
0x2a7c: nop dword ptr [rax+0x0]
0x2a8a: jmp 0x2822
0x2a8f: nop 
0x2b39: call 0x1800
0x2b3e: xchg ax,ax
0x2eca: nop word ptr [rax+rax*1+0x0]
0x2f61: nop dword ptr [rax+0x0]
0x2f73: call 0x1800
0x2f78: nop dword ptr [rax+rax*1+0x0]
0x2f8c: nop dword ptr [rax+0x0]
0x2f90: mov edi,dword ptr [rip+0x2051da]
0x2f96: jmp 0x1840
0x2f9b: nop dword ptr [rax+rax*1+0x0]
0x2fa0: mov qword ptr [rip+0x2051d9],rdi
0x2fa7: ret 
0x2fa8: nop dword ptr [rax+rax*1+0x0]
0x2fb0: mov byte ptr [rip+0x2051c1],dil
0x2fb7: ret 
0x2fb8: nop dword ptr [rax+rax*1+0x0]
0x2fc0: push rbp
0x2fc1: push rbx
0x2fc2: sub rsp,0x8
0x2fc6: mov rdi,qword ptr [rip+0x2050db]
0x2fcd: call 0x5af0
0x2fd2: test eax,eax
0x2fd4: je 0x2fec
0x2fd6: call 0x1720
0x2fdb: cmp byte ptr [rip+0x205196],0x0
0x2fe2: mov rbx,rax
0x2fe5: je 0x3003
0x2fe7: cmp dword ptr [rax],0x20
0x2fea: jne 0x3003
0x2fec: mov rdi,qword ptr [rip+0x2050cd]
0x2ff3: call 0x5af0
0x2ff8: test eax,eax
0x2ffa: jne 0x3042
0x2ffc: add rsp,0x8
0x3000: pop rbx
0x3001: pop rbp
0x3002: ret 
0x3003: lea rsi,[rip+0x32e7]
0x300a: xor edi,edi
0x300c: mov edx,0x5
0x3011: call 0x17d0
0x3016: mov rdi,qword ptr [rip+0x205163]
0x301d: mov rbp,rax
0x3020: test rdi,rdi
0x3023: je 0x304d
0x3025: call 0x4c80
0x302a: mov esi,dword ptr [rbx]
0x302c: lea rdx,[rip+0x32ca]
0x3033: mov rcx,rax
0x3036: mov r8,rbp
0x3039: xor edi,edi
0x303b: xor eax,eax
0x303d: call 0x19d0
0x3042: mov edi,dword ptr [rip+0x204fd8]
0x3048: call 0x1750
0x304d: mov esi,dword ptr [rbx]
0x304f: lea rdx,[rip+0x32ab]
0x3056: mov rcx,rax
0x3059: xor edi,edi
0x305b: xor eax,eax
0x305d: call 0x19d0
0x3062: jmp 0x3042
0x3064: nop word ptr cs:[rax+rax*1+0x0]
0x306e: xchg ax,ax
0x30aa: nop word ptr [rax+rax*1+0x0]
0x312a: nop word ptr [rax+rax*1+0x0]
0x316c: nop dword ptr [rax+0x0]
0x320f: nop 
0x3210: push rbp
0x3211: push rbx
0x3212: mov rbp,rdi
0x3215: mov ebx,esi
0x3217: sub rsp,0x8
0x321b: call 0x5b70
0x3220: movzx edx,byte ptr [rax]
0x3223: and edx,0xffffffdf
0x3226: cmp dl,0x55
0x3229: je 0x32a0
0x322b: cmp dl,0x47
0x322e: je 0x3250
0x3230: lea rax,[rip+0x312c]
0x3237: lea rdx,[rip+0x3127]
0x323e: cmp ebx,0x9
0x3241: cmovne rax,rdx
0x3245: add rsp,0x8
0x3249: pop rbx
0x324a: pop rbp
0x324b: ret 
0x324c: nop dword ptr [rax+0x0]
0x3250: movzx edx,byte ptr [rax+0x1]
0x3254: and edx,0xffffffdf
0x3257: cmp dl,0x42
0x325a: jne 0x3230
0x325c: cmp byte ptr [rax+0x2],0x31
0x3260: jne 0x3230
0x3262: cmp byte ptr [rax+0x3],0x38
0x3266: jne 0x3230
0x3268: cmp byte ptr [rax+0x4],0x30
0x326c: jne 0x3230
0x326e: cmp byte ptr [rax+0x5],0x33
0x3272: jne 0x3230
0x3274: cmp byte ptr [rax+0x6],0x30
0x3278: jne 0x3230
0x327a: cmp byte ptr [rax+0x7],0x0
0x327e: jne 0x3230
0x3280: cmp byte ptr [rbp+0x0],0x60
0x3284: lea rax,[rip+0x30d1]
0x328b: lea rdx,[rip+0x30ce]
0x3292: cmovne rax,rdx
0x3296: add rsp,0x8
0x329a: pop rbx
0x329b: pop rbp
0x329c: ret 
0x329d: nop dword ptr [rax]
0x32a0: movzx edx,byte ptr [rax+0x1]
0x32a4: and edx,0xffffffdf
0x32a7: cmp dl,0x54
0x32aa: jne 0x3230
0x32ac: movzx edx,byte ptr [rax+0x2]
0x32b0: and edx,0xffffffdf
0x32b3: cmp dl,0x46
0x32b6: jne 0x3230
0x32bc: cmp byte ptr [rax+0x3],0x2d
0x32c0: jne 0x3230
0x32c6: cmp byte ptr [rax+0x4],0x38
0x32ca: jne 0x3230
0x32d0: cmp byte ptr [rax+0x5],0x0
0x32d4: jne 0x3230
0x32da: cmp byte ptr [rbp+0x0],0x60
0x32de: lea rax,[rip+0x306f]
0x32e5: lea rdx,[rip+0x306c]
0x32ec: cmovne rax,rdx
0x32f0: add rsp,0x8
0x32f4: pop rbx
0x32f5: pop rbp
0x32f6: ret 
0x32f7: nop word ptr [rax+rax*1+0x0]
0x3300: push r15
0x3302: push r14
0x3304: mov r15d,r8d
0x3307: push r13
0x3309: push r12
0x330b: mov r14,rdi
0x330e: push rbp
0x330f: push rbx
0x3310: mov ebx,r9d
0x3313: mov r13,rsi
0x3316: mov rbp,rcx
0x3319: and ebx,0x2
0x331c: sub rsp,0xb8
0x3323: mov rax,qword ptr [rsp+0xf0]
0x332b: mov qword ptr [rsp+0x10],rdx
0x3330: mov dword ptr [rsp+0x8],r8d
0x3335: mov dword ptr [rsp+0x78],r9d
0x333a: mov qword ptr [rsp+0x20],rax
0x333f: mov rax,qword ptr [rsp+0xf8]
0x3347: mov qword ptr [rsp+0x68],rax
0x334c: mov rax,qword ptr [rsp+0x100]
0x3354: mov qword ptr [rsp+0x60],rax
0x3359: mov rax,qword ptr fs:0x28
0x3362: mov qword ptr [rsp+0xa8],rax
0x336a: xor eax,eax
0x336c: call 0x17e0
0x3371: cmp r15d,0xa
0x3375: mov qword ptr [rsp+0x58],rax
0x337a: ja 0x452f
0x3380: lea rcx,[rip+0x3039]
0x3387: mov edx,r15d
0x338a: movsxd rax,dword ptr [rcx+rdx*4]
0x338e: add rax,rcx
0x3391: jmp rax
0x3393: mov byte ptr [rsp+0xe],0x1
0x3398: mov byte ptr [rsp+0x7c],0x0
0x339d: xor r12d,r12d
0x33a0: mov qword ptr [rsp+0x50],0x0
0x33a9: mov byte ptr [rsp+0xf],0x1
0x33ae: mov byte ptr [rsp+0xd],0x0
0x33b3: lea rax,[rip+0x2fab]
0x33ba: mov qword ptr [rsp+0x18],0x1
0x33c3: xor r15d,r15d
0x33c6: mov dword ptr [rsp+0x8],0x2
0x33ce: mov qword ptr [rsp+0x48],rax
0x33d3: xor r11d,r11d
0x33d6: mov rax,rbp
0x33d9: mov r8d,r12d
0x33dc: mov rbp,r11
0x33df: mov r11,rax
0x33e2: nop word ptr [rax+rax*1+0x0]
0x33e8: cmp r11,rbp
0x33eb: setne r12b
0x33ef: cmp r11,0xffffffffffffffff
0x33f3: jne 0x3402
0x33f5: mov rax,qword ptr [rsp+0x10]
0x33fa: cmp byte ptr [rax+rbp*1],0x0
0x33fe: setne r12b
0x3402: test r12b,r12b
0x3405: je 0x3a60
0x340b: cmp dword ptr [rsp+0x8],0x2
0x3410: mov rdi,qword ptr [rsp+0x10]
0x3415: lea r9,[rdi+rbp*1]
0x3419: setne al
0x341c: and al,byte ptr [rsp+0xd]
0x3420: mov r10d,eax
0x3423: je 0x34d0
0x3429: mov rax,qword ptr [rsp+0x18]
0x342e: test rax,rax
0x3431: je 0x3860
0x3437: cmp r11,0xffffffffffffffff
0x343b: lea rbx,[rbp+rax*1+0x0]
0x3440: jne 0x3470
0x3442: cmp rax,0x1
0x3446: jbe 0x3470
0x3448: mov byte ptr [rsp+0x38],r8b
0x344d: mov byte ptr [rsp+0x30],r10b
0x3452: mov qword ptr [rsp+0x28],r9
0x3457: call 0x17f0
0x345c: movzx r8d,byte ptr [rsp+0x38]
0x3462: movzx r10d,byte ptr [rsp+0x30]
0x3468: mov r11,rax
0x346b: mov r9,qword ptr [rsp+0x28]
0x3470: cmp rbx,r11
0x3473: mov byte ptr [rsp+0x28],r10b
0x3478: ja 0x3a30
0x347e: mov rdx,qword ptr [rsp+0x18]
0x3483: mov rsi,qword ptr [rsp+0x48]
0x3488: mov rdi,r9
0x348b: mov qword ptr [rsp+0x40],r11
0x3490: mov byte ptr [rsp+0x38],r8b
0x3495: mov qword ptr [rsp+0x30],r9
0x349a: call 0x1890
0x349f: test eax,eax
0x34a1: mov r9,qword ptr [rsp+0x30]
0x34a6: movzx r8d,byte ptr [rsp+0x38]
0x34ac: mov r11,qword ptr [rsp+0x40]
0x34b1: jne 0x3a30
0x34b7: cmp byte ptr [rsp+0xf],0x0
0x34bc: movzx r10d,byte ptr [rsp+0x28]
0x34c2: jne 0x4445
0x34c8: nop dword ptr [rax+rax*1+0x0]
0x34d0: movzx ebx,byte ptr [r9]
0x34d4: cmp bl,0x7e
0x34d7: ja 0x37f8
0x34dd: lea rcx,[rip+0x2f08]
0x34e4: movzx edx,bl
0x34e7: movsxd rax,dword ptr [rcx+rdx*4]
0x34eb: add rax,rcx
0x34ee: jmp rax
0x34f0: xor r10d,r10d
0x34f3: cmp r11,0x1
0x34f7: setne al
0x34fa: cmp r11,0xffffffffffffffff
0x34fe: jne 0x350c
0x3500: mov rax,qword ptr [rsp+0x10]
0x3505: cmp byte ptr [rax+0x1],0x0
0x3509: setne al
0x350c: cmp dword ptr [rsp+0x8],0x2
0x3511: sete dl
0x3514: test al,al
0x3516: je 0x3768
0x351c: xor r12d,r12d
0x351f: xor eax,eax
0x3521: nop dword ptr [rax+0x0]
0x3528: cmp byte ptr [rsp+0xd],0x1
0x352d: jne 0x3642
0x3533: test dl,dl
0x3535: jne 0x3642
0x353b: mov rsi,qword ptr [rsp+0x20]
0x3540: test rsi,rsi
0x3543: je 0x3559
0x3545: mov edx,ebx
0x3547: shr dl,0x5
0x354a: movzx edx,dl
0x354d: mov edx,dword ptr [rsi+rdx*4]
0x3550: bt edx,ebx
0x3553: jb 0x36a3
0x3559: test r10b,r10b
0x355c: jne 0x36a3
0x3562: xor eax,0x1
0x3565: add rbp,0x1
0x3569: and eax,r8d
0x356c: test al,al
0x356e: je 0x3590
0x3570: cmp r13,r15
0x3573: jbe 0x357a
0x3575: mov byte ptr [r14+r15*1],0x27
0x357a: lea rax,[r15+0x1]
0x357e: cmp r13,rax
0x3581: jbe 0x3589
0x3583: mov byte ptr [r14+r15*1+0x1],0x27
0x3589: add r15,0x2
0x358d: xor r8d,r8d
0x3590: cmp r15,r13
0x3593: jae 0x3599
0x3595: mov byte ptr [r14+r15*1],bl
0x3599: movzx edi,byte ptr [rsp+0xe]
0x359e: add r15,0x1
0x35a2: mov eax,0x0
0x35a7: test r12b,r12b
0x35aa: cmove edi,eax
0x35ad: mov byte ptr [rsp+0xe],dil
0x35b2: jmp 0x33e8
0x35b7: nop word ptr [rax+rax*1+0x0]
0x35c0: xor r10d,r10d
0x35c3: mov eax,dword ptr [rsp+0x8]
0x35c7: cmp eax,0x2
0x35ca: je 0x3b88
0x35d0: cmp eax,0x5
0x35d3: je 0x3b48
0x35d9: cmp eax,0x2
0x35dc: mov ebx,0x3f
0x35e1: sete dl
0x35e4: xor r12d,r12d
0x35e7: xor eax,eax
0x35e9: jmp 0x3528
0x35ee: xchg ax,ax
0x35f0: xor r10d,r10d
0x35f3: cmp dword ptr [rsp+0x8],0x2
0x35f8: je 0x3b00
0x35fe: mov byte ptr [rsp+0x7c],r12b
0x3603: xor edx,edx
0x3605: xor eax,eax
0x3607: mov ebx,0x27
0x360c: jmp 0x3528
0x3611: nop dword ptr [rax+0x0]
0x3618: mov edx,0x9
0x361d: mov ebx,0x74
0x3622: cmp dword ptr [rsp+0x8],0x2
0x3627: sete al
0x362a: and al,byte ptr [rsp+0xf]
0x362e: jne 0x377e
0x3634: cmp byte ptr [rsp+0xd],0x0
0x3639: jne 0x36a0
0x363b: mov ebx,edx
0x363d: xor r12d,r12d
0x3640: xor eax,eax
0x3642: cmp byte ptr [rsp+0xf],0x0
0x3647: jne 0x353b
0x364d: jmp 0x3559
0x3652: nop word ptr [rax+rax*1+0x0]
0x3658: mov edx,0x8
0x365d: mov ebx,0x62
0x3662: jmp 0x3634
0x3664: nop dword ptr [rax+0x0]
0x3668: cmp dword ptr [rsp+0x8],0x2
0x366d: je 0x3a40
0x3673: cmp byte ptr [rsp+0xd],0x0
0x3678: je 0x3890
0x367e: cmp byte ptr [rsp+0xf],0x0
0x3683: je 0x3890
0x3689: cmp qword ptr [rsp+0x18],0x0
0x368f: jne 0x3a4b
0x3695: mov ebx,0x5c
0x369a: nop word ptr [rax+rax*1+0x0]
0x36a0: xor r12d,r12d
0x36a3: cmp dword ptr [rsp+0x8],0x2
0x36a8: sete dl
0x36ab: cmp byte ptr [rsp+0xf],0x0
0x36b0: mov eax,edx
0x36b2: jne 0x3f08
0x36b8: mov eax,r8d
0x36bb: xor eax,0x1
0x36be: and al,dl
0x36c0: je 0x36f1
0x36c2: cmp r13,r15
0x36c5: jbe 0x36cc
0x36c7: mov byte ptr [r14+r15*1],0x27
0x36cc: lea rdx,[r15+0x1]
0x36d0: cmp r13,rdx
0x36d3: jbe 0x36db
0x36d5: mov byte ptr [r14+r15*1+0x1],0x24
0x36db: lea rdx,[r15+0x2]
0x36df: cmp r13,rdx
0x36e2: jbe 0x36ea
0x36e4: mov byte ptr [r14+r15*1+0x2],0x27
0x36ea: add r15,0x3
0x36ee: mov r8d,eax
0x36f1: cmp r13,r15
0x36f4: jbe 0x36fb
0x36f6: mov byte ptr [r14+r15*1],0x5c
0x36fb: add r15,0x1
0x36ff: add rbp,0x1
0x3703: jmp 0x3590
0x3708: nop dword ptr [rax+rax*1+0x0]
0x3710: cmp byte ptr [rsp+0xd],0x0
0x3715: jne 0x38e3
0x371b: xor edx,edx
0x371d: test byte ptr [rsp+0x78],0x1
0x3722: je 0x363b
0x3728: add rbp,0x1
0x372c: jmp 0x33e8
0x3731: nop dword ptr [rax+0x0]
0x3738: cmp dword ptr [rsp+0x8],0x2
0x373d: sete dl
0x3740: xor eax,eax
0x3742: jmp 0x3528
0x3747: nop word ptr [rax+rax*1+0x0]
0x3750: mov edx,0x7
0x3755: mov ebx,0x61
0x375a: jmp 0x3634
0x375f: nop 
0x3760: cmp dword ptr [rsp+0x8],0x2
0x3765: sete dl
0x3768: test rbp,rbp
0x376b: jne 0x351c
0x3771: movzx eax,byte ptr [rsp+0xf]
0x3776: and al,dl
0x3778: je 0x3528
0x377e: mov rbp,r11
0x3781: mov dword ptr [rsp+0x8],0x2
0x3789: jmp 0x3e89
0x378e: xchg ax,ax
0x3790: cmp dword ptr [rsp+0x8],0x2
0x3795: sete dl
0x3798: xor r12d,r12d
0x379b: jmp 0x3771
0x379d: nop dword ptr [rax]
0x37a0: cmp dword ptr [rsp+0x8],0x2
0x37a5: mov ebx,0x20
0x37aa: sete dl
0x37ad: jmp 0x3771
0x37af: nop 
0x37b0: mov edx,0xd
0x37b5: mov ebx,0x72
0x37ba: jmp 0x3622
0x37bf: nop 
0x37c0: mov edx,0xc
0x37c5: mov ebx,0x66
0x37ca: jmp 0x3634
0x37cf: nop 
0x37d0: mov edx,0xb
0x37d5: mov ebx,0x76
0x37da: jmp 0x3634
0x37df: nop 
0x37e0: mov edx,0xa
0x37e5: mov ebx,0x6e
0x37ea: jmp 0x3622
0x37ef: nop 
0x37f0: xor r10d,r10d
0x37f3: nop dword ptr [rax+rax*1+0x0]
0x37f8: cmp qword ptr [rsp+0x58],0x1
0x37fe: jne 0x3ba8
0x3804: mov qword ptr [rsp+0x38],r11
0x3809: mov byte ptr [rsp+0x30],r8b
0x380e: mov byte ptr [rsp+0x28],r10b
0x3813: call 0x1a80
0x3818: mov rcx,qword ptr [rax]
0x381b: movzx edx,bl
0x381e: movzx r10d,byte ptr [rsp+0x28]
0x3824: movzx r8d,byte ptr [rsp+0x30]
0x382a: mov r11,qword ptr [rsp+0x38]
0x382f: mov edi,0x1
0x3834: movzx eax,word ptr [rcx+rdx*2]
0x3838: and ax,0x4000
0x383c: setne r12b
0x3840: sete al
0x3843: and al,byte ptr [rsp+0xd]
0x3847: test al,al
0x3849: jne 0x41e1
0x384f: cmp dword ptr [rsp+0x8],0x2
0x3854: sete dl
0x3857: jmp 0x3528
0x385c: nop dword ptr [rax+0x0]
0x3860: movzx ebx,byte ptr [r9]
0x3864: cmp bl,0x7e
0x3867: ja 0x37f0
0x3869: lea rcx,[rip+0x2d78]
0x3870: movzx edx,bl
0x3873: movsxd rax,dword ptr [rcx+rdx*4]
0x3877: add rax,rcx
0x387a: jmp rax
0x387c: nop dword ptr [rax+0x0]
0x3880: xor r10d,r10d
0x3883: cmp byte ptr [rsp+0xd],0x0
0x3888: jne 0x367e
0x388e: xchg ax,ax
0x3890: mov edx,0x5c
0x3895: mov ebx,0x5c
0x389a: jmp 0x3634
0x389f: nop 
0x38a0: mov edx,0xc
0x38a5: xor r10d,r10d
0x38a8: mov ebx,0x66
0x38ad: jmp 0x3634
0x38b2: nop word ptr [rax+rax*1+0x0]
0x38b8: mov edx,0xa
0x38bd: xor r10d,r10d
0x38c0: mov ebx,0x6e
0x38c5: jmp 0x3622
0x38ca: nop word ptr [rax+rax*1+0x0]
0x38d0: mov ebx,0x61
0x38d5: jmp 0x36a0
0x38da: nop word ptr [rax+rax*1+0x0]
0x38e0: xor r10d,r10d
0x38e3: cmp dword ptr [rsp+0x8],0x2
0x38e8: sete dl
0x38eb: cmp byte ptr [rsp+0xf],0x0
0x38f0: jne 0x448a
0x38f6: mov eax,r8d
0x38f9: mov rcx,r15
0x38fc: xor eax,0x1
0x38ff: and al,dl
0x3901: je 0x3930
0x3903: cmp r13,r15
0x3906: jbe 0x390d
0x3908: mov byte ptr [r14+r15*1],0x27
0x390d: lea rcx,[r15+0x1]
0x3911: cmp r13,rcx
0x3914: jbe 0x391c
0x3916: mov byte ptr [r14+r15*1+0x1],0x24
0x391c: lea rcx,[r15+0x2]
0x3920: cmp r13,rcx
0x3923: ja 0x3f59
0x3929: lea rcx,[r15+0x3]
0x392d: mov r8d,eax
0x3930: cmp r13,rcx
0x3933: jbe 0x393a
0x3935: mov byte ptr [r14+rcx*1],0x5c
0x393a: cmp dword ptr [rsp+0x8],0x2
0x393f: lea r15,[rcx+0x1]
0x3943: je 0x3f49
0x3949: lea rax,[rbp+0x1]
0x394d: cmp rax,r11
0x3950: jae 0x396b
0x3952: mov rax,qword ptr [rsp+0x10]
0x3957: movzx eax,byte ptr [rax+rbp*1+0x1]
0x395c: mov byte ptr [rsp+0x28],al
0x3960: sub eax,0x30
0x3963: cmp al,0x9
0x3965: jbe 0x4199
0x396b: mov eax,r12d
0x396e: mov ebx,0x30
0x3973: xor r12d,r12d
0x3976: jmp 0x3528
0x397b: nop dword ptr [rax+rax*1+0x0]
0x3980: cmp dword ptr [rsp+0x8],0x2
0x3985: mov r12d,r10d
0x3988: sete dl
0x398b: xor r10d,r10d
0x398e: xor eax,eax
0x3990: jmp 0x3528
0x3995: nop dword ptr [rax]
0x3998: cmp dword ptr [rsp+0x8],0x2
0x399d: sete dl
0x39a0: xor r10d,r10d
0x39a3: jmp 0x3768
0x39a8: nop dword ptr [rax+rax*1+0x0]
0x39b0: cmp dword ptr [rsp+0x8],0x2
0x39b5: sete dl
0x39b8: xor r10d,r10d
0x39bb: xor r12d,r12d
0x39be: jmp 0x3771
0x39c3: nop dword ptr [rax+rax*1+0x0]
0x39c8: cmp dword ptr [rsp+0x8],0x2
0x39cd: mov r12d,r10d
0x39d0: mov ebx,0x20
0x39d5: sete dl
0x39d8: xor r10d,r10d
0x39db: jmp 0x3771
0x39e0: mov edx,0xd
0x39e5: xor r10d,r10d
0x39e8: mov ebx,0x72
0x39ed: jmp 0x3622
0x39f2: nop word ptr [rax+rax*1+0x0]
0x39f8: mov ebx,0x76
0x39fd: jmp 0x36a0
0x3a02: nop word ptr [rax+rax*1+0x0]
0x3a08: mov edx,0x9
0x3a0d: xor r10d,r10d
0x3a10: mov ebx,0x74
0x3a15: jmp 0x3622
0x3a1a: nop word ptr [rax+rax*1+0x0]
0x3a20: mov ebx,0x62
0x3a25: jmp 0x36a0
0x3a2a: nop word ptr [rax+rax*1+0x0]
0x3a30: xor r10d,r10d
0x3a33: jmp 0x34d0
0x3a38: nop dword ptr [rax+rax*1+0x0]
0x3a40: cmp byte ptr [rsp+0xf],0x0
0x3a45: jne 0x43b0
0x3a4b: add rbp,0x1
0x3a4f: mov eax,r8d
0x3a52: xor r12d,r12d
0x3a55: mov ebx,0x5c
0x3a5a: jmp 0x356c
0x3a5f: nop 
0x3a60: cmp dword ptr [rsp+0x8],0x2
0x3a65: movzx ebx,byte ptr [rsp+0xf]
0x3a6a: mov r12d,r8d
0x3a6d: mov rbp,r11
0x3a70: sete dl
0x3a73: mov eax,ebx
0x3a75: test r15,r15
0x3a78: sete cl
0x3a7b: and eax,edx
0x3a7d: and al,cl
0x3a7f: jne 0x44e6
0x3a85: mov eax,ebx
0x3a87: xor eax,0x1
0x3a8a: and dl,al
0x3a8c: je 0x43fc
0x3a92: cmp byte ptr [rsp+0x7c],0x0
0x3a97: je 0x43fa
0x3a9d: cmp byte ptr [rsp+0xe],0x0
0x3aa2: jne 0x449d
0x3aa8: test r13,r13
0x3aab: sete al
0x3aae: cmp qword ptr [rsp+0x50],0x0
0x3ab4: setne dl
0x3ab7: and al,dl
0x3ab9: je 0x44dc
0x3abf: mov r13,qword ptr [rsp+0x50]
0x3ac4: lea rbx,[rip+0x289a]
0x3acb: mov byte ptr [r14],0x27
0x3acf: mov dword ptr [rsp+0x8],0x2
0x3ad7: mov r15d,0x1
0x3add: mov qword ptr [rsp+0x18],0x1
0x3ae6: mov byte ptr [rsp+0xf],0x0
0x3aeb: mov qword ptr [rsp+0x48],rbx
0x3af0: mov byte ptr [rsp+0x7c],al
0x3af4: jmp 0x33d3
0x3af9: nop dword ptr [rax+0x0]
0x3b00: cmp byte ptr [rsp+0xf],0x0
0x3b05: jne 0x43b0
0x3b0b: test r13,r13
0x3b0e: je 0x3f10
0x3b14: xor edx,edx
0x3b16: cmp qword ptr [rsp+0x50],0x0
0x3b1c: jne 0x3f10
0x3b22: mov qword ptr [rsp+0x50],r13
0x3b27: add r15,0x3
0x3b2b: xor eax,eax
0x3b2d: mov byte ptr [rsp+0x7c],r12b
0x3b32: xor r8d,r8d
0x3b35: mov r13,rdx
0x3b38: mov ebx,0x27
0x3b3d: jmp 0x3559
0x3b42: nop word ptr [rax+rax*1+0x0]
0x3b48: test byte ptr [rsp+0x78],0x4
0x3b4d: je 0x3b70
0x3b4f: lea rcx,[rbp+0x2]
0x3b53: cmp rcx,r11
0x3b56: jae 0x3b70
0x3b58: mov rax,qword ptr [rsp+0x10]
0x3b5d: cmp byte ptr [rax+rbp*1+0x1],0x3f
0x3b62: je 0x42f2
0x3b68: nop dword ptr [rax+rax*1+0x0]
0x3b70: xor edx,edx
0x3b72: xor r12d,r12d
0x3b75: xor eax,eax
0x3b77: mov ebx,0x3f
0x3b7c: jmp 0x3528
0x3b81: nop dword ptr [rax+0x0]
0x3b88: cmp byte ptr [rsp+0xf],0x0
0x3b8d: jne 0x43b0
0x3b93: xor r12d,r12d
0x3b96: xor eax,eax
0x3b98: mov ebx,0x3f
0x3b9d: jmp 0x3559
0x3ba2: nop word ptr [rax+rax*1+0x0]
0x3ba8: lea rax,[rsp+0xa0]
0x3bb0: cmp r11,0xffffffffffffffff
0x3bb4: mov qword ptr [rsp+0xa0],0x0
0x3bc0: mov qword ptr [rsp+0x28],rax
0x3bc5: jne 0x3bf4
0x3bc7: mov rdi,qword ptr [rsp+0x10]
0x3bcc: mov byte ptr [rsp+0x40],r8b
0x3bd1: mov byte ptr [rsp+0x38],r10b
0x3bd6: mov qword ptr [rsp+0x30],r9
0x3bdb: call 0x17f0
0x3be0: movzx r8d,byte ptr [rsp+0x40]
0x3be6: movzx r10d,byte ptr [rsp+0x38]
0x3bec: mov r11,rax
0x3bef: mov r9,qword ptr [rsp+0x30]
0x3bf4: lea rax,[rsp+0x9c]
0x3bfc: xor ecx,ecx
0x3bfe: mov byte ptr [rsp+0x7e],bl
0x3c02: mov byte ptr [rsp+0x7d],r8b
0x3c07: mov rbx,rcx
0x3c0a: mov qword ptr [rsp+0x88],r9
0x3c12: mov qword ptr [rsp+0x38],rax
0x3c17: mov byte ptr [rsp+0x7f],r10b
0x3c1c: mov qword ptr [rsp+0x80],r15
0x3c24: mov qword ptr [rsp+0x40],r14
0x3c29: mov qword ptr [rsp+0x70],r13
0x3c2e: mov qword ptr [rsp+0x30],r11
0x3c33: mov rax,qword ptr [rsp+0x10]
0x3c38: lea r14,[rbp+rbx*1+0x0]
0x3c3d: mov rdx,qword ptr [rsp+0x30]
0x3c42: mov rcx,qword ptr [rsp+0x28]
0x3c47: mov rdi,qword ptr [rsp+0x38]
0x3c4c: lea r13,[rax+r14*1]
0x3c50: sub rdx,r14
0x3c53: mov rsi,r13
0x3c56: call 0x5870
0x3c5b: test rax,rax
0x3c5e: mov r15,rax
0x3c61: je 0x3cb1
0x3c63: cmp rax,0xffffffffffffffff
0x3c67: je 0x4285
0x3c6d: cmp rax,0xfffffffffffffffe
0x3c71: je 0x4211
0x3c77: cmp dword ptr [rsp+0x8],0x2
0x3c7c: sete al
0x3c7f: and al,byte ptr [rsp+0xf]
0x3c83: jne 0x3e20
0x3c89: mov edi,dword ptr [rsp+0x9c]
0x3c90: call 0x1a70
0x3c95: mov rdi,qword ptr [rsp+0x28]
0x3c9a: test eax,eax
0x3c9c: mov eax,0x0
0x3ca1: cmove r12d,eax
0x3ca5: add rbx,r15
0x3ca8: call 0x1a60
0x3cad: test eax,eax
0x3caf: je 0x3c33
0x3cb1: mov edx,r12d
0x3cb4: mov rdi,rbx
0x3cb7: movzx r8d,byte ptr [rsp+0x7d]
0x3cbd: xor edx,0x1
0x3cc0: movzx ebx,byte ptr [rsp+0x7e]
0x3cc5: movzx r10d,byte ptr [rsp+0x7f]
0x3ccb: and dl,byte ptr [rsp+0xd]
0x3ccf: mov r15,qword ptr [rsp+0x80]
0x3cd7: mov r14,qword ptr [rsp+0x40]
0x3cdc: mov r13,qword ptr [rsp+0x70]
0x3ce1: mov r11,qword ptr [rsp+0x30]
0x3ce6: cmp rdi,0x1
0x3cea: jbe 0x42eb
0x3cf0: mov rcx,rdi
0x3cf3: xor esi,esi
0x3cf5: movzx r9d,byte ptr [rsp+0xf]
0x3cfb: add rcx,rbp
0x3cfe: mov rdi,qword ptr [rsp+0x10]
0x3d03: jmp 0x3dbe
0x3d08: nop dword ptr [rax+rax*1+0x0]
0x3d10: cmp dword ptr [rsp+0x8],0x2
0x3d15: sete al
0x3d18: test r9b,r9b
0x3d1b: jne 0x41d0
0x3d21: mov esi,r8d
0x3d24: xor esi,0x1
0x3d27: and al,sil
0x3d2a: je 0x3d5b
0x3d2c: cmp r13,r15
0x3d2f: jbe 0x3d36
0x3d31: mov byte ptr [r14+r15*1],0x27
0x3d36: lea rsi,[r15+0x1]
0x3d3a: cmp r13,rsi
0x3d3d: jbe 0x3d45
0x3d3f: mov byte ptr [r14+r15*1+0x1],0x24
0x3d45: lea rsi,[r15+0x2]
0x3d49: cmp r13,rsi
0x3d4c: jbe 0x3d54
0x3d4e: mov byte ptr [r14+r15*1+0x2],0x27
0x3d54: add r15,0x3
0x3d58: mov r8d,eax
0x3d5b: cmp r13,r15
0x3d5e: jbe 0x3d65
0x3d60: mov byte ptr [r14+r15*1],0x5c
0x3d65: lea rax,[r15+0x1]
0x3d69: cmp r13,rax
0x3d6c: jbe 0x3d7b
0x3d6e: mov eax,ebx
0x3d70: shr al,0x6
0x3d73: add eax,0x30
0x3d76: mov byte ptr [r14+r15*1+0x1],al
0x3d7b: lea rax,[r15+0x2]
0x3d7f: cmp r13,rax
0x3d82: jbe 0x3d94
0x3d84: mov eax,ebx
0x3d86: shr al,0x3
0x3d89: and eax,0x7
0x3d8c: add eax,0x30
0x3d8f: mov byte ptr [r14+r15*1+0x2],al
0x3d94: and ebx,0x7
0x3d97: add rbp,0x1
0x3d9b: add r15,0x3
0x3d9f: add ebx,0x30
0x3da2: cmp rbp,rcx
0x3da5: jae 0x3590
0x3dab: mov esi,edx
0x3dad: cmp r13,r15
0x3db0: jbe 0x3db6
0x3db2: mov byte ptr [r14+r15*1],bl
0x3db6: movzx ebx,byte ptr [rdi+rbp*1]
0x3dba: add r15,0x1
0x3dbe: test dl,dl
0x3dc0: jne 0x3d10
0x3dc6: mov eax,esi
0x3dc8: xor eax,0x1
0x3dcb: and eax,r8d
0x3dce: test r10b,r10b
0x3dd1: je 0x3de1
0x3dd3: cmp r13,r15
0x3dd6: jbe 0x3ddd
0x3dd8: mov byte ptr [r14+r15*1],0x5c
0x3ddd: add r15,0x1
0x3de1: add rbp,0x1
0x3de5: cmp rbp,rcx
0x3de8: jae 0x356c
0x3dee: test al,al
0x3df0: je 0x41ee
0x3df6: cmp r13,r15
0x3df9: jbe 0x3e00
0x3dfb: mov byte ptr [r14+r15*1],0x27
0x3e00: lea rax,[r15+0x1]
0x3e04: cmp r13,rax
0x3e07: jbe 0x3e0f
0x3e09: mov byte ptr [r14+r15*1+0x1],0x27
0x3e0f: add r15,0x2
0x3e13: xor r10d,r10d
0x3e16: xor r8d,r8d
0x3e19: jmp 0x3dad
0x3e1b: nop dword ptr [rax+rax*1+0x0]
0x3e20: cmp r15,0x1
0x3e24: je 0x3c89
0x3e2a: mov rdi,qword ptr [rsp+0x10]
0x3e2f: lea rcx,[rdi+r15*1]
0x3e33: lea rdx,[rdi+r14*1+0x1]
0x3e38: lea r8,[rcx+r14*1]
0x3e3c: jmp 0x3e4d
0x3e3e: xchg ax,ax
0x3e40: add rdx,0x1
0x3e44: cmp r8,rdx
0x3e47: je 0x3c89
0x3e4d: movzx ecx,byte ptr [rdx]
0x3e50: sub ecx,0x5b
0x3e53: cmp cl,0x21
0x3e56: ja 0x3e40
0x3e58: mov esi,0x1
0x3e5d: shl rsi,cl
0x3e60: mov rcx,rsi
0x3e63: movabs rsi,0x20000002b
0x3e6d: test rcx,rsi
0x3e70: je 0x3e40
0x3e72: mov r14,qword ptr [rsp+0x40]
0x3e77: mov r13,qword ptr [rsp+0x70]
0x3e7c: mov rbp,qword ptr [rsp+0x30]
0x3e81: mov dword ptr [rsp+0x8],0x2
0x3e89: cmp byte ptr [rsp+0xd],0x0
0x3e8e: je 0x3ea0
0x3e90: test al,al
0x3e92: mov eax,0x4
0x3e97: cmove eax,dword ptr [rsp+0x8]
0x3e9c: mov dword ptr [rsp+0x8],eax
0x3ea0: sub rsp,0x8
0x3ea4: mov rcx,rbp
0x3ea7: mov rsi,r13
0x3eaa: push qword ptr [rsp+0x68]
0x3eae: push qword ptr [rsp+0x78]
0x3eb2: mov rdi,r14
0x3eb5: push 0x0
0x3eb7: mov r9d,dword ptr [rsp+0x98]
0x3ebf: mov r8d,dword ptr [rsp+0x28]
0x3ec4: mov rdx,qword ptr [rsp+0x30]
0x3ec9: and r9d,0xfffffffd
0x3ecd: call 0x3300
0x3ed2: add rsp,0x20
0x3ed6: mov r15,rax
0x3ed9: mov rbx,qword ptr [rsp+0xa8]
0x3ee1: xor rbx,qword ptr fs:0x28
0x3eea: mov rax,r15
0x3eed: jne 0x44f3
0x3ef3: add rsp,0xb8
0x3efa: pop rbx
0x3efb: pop rbp
0x3efc: pop r12
0x3efe: pop r13
0x3f00: pop r14
0x3f02: pop r15
0x3f04: ret 
0x3f05: nop dword ptr [rax]
0x3f08: mov rbp,r11
0x3f0b: jmp 0x3e89
0x3f10: cmp r13,r15
0x3f13: jbe 0x3f1a
0x3f15: mov byte ptr [r14+r15*1],0x27
0x3f1a: lea rax,[r15+0x1]
0x3f1e: cmp r13,rax
0x3f21: jbe 0x3f29
0x3f23: mov byte ptr [r14+r15*1+0x1],0x5c
0x3f29: lea rax,[r15+0x2]
0x3f2d: cmp r13,rax
0x3f30: jbe 0x4522
0x3f36: mov rdx,r13
0x3f39: mov byte ptr [r14+r15*1+0x2],0x27
0x3f3f: mov r13,qword ptr [rsp+0x50]
0x3f44: jmp 0x3b22
0x3f49: mov eax,r12d
0x3f4c: mov ebx,0x30
0x3f51: xor r12d,r12d
0x3f54: jmp 0x3559
0x3f59: mov byte ptr [r14+r15*1+0x2],0x27
0x3f5f: jmp 0x3929
0x3f64: test ebx,ebx
0x3f66: jne 0x3393
0x3f6c: mov byte ptr [rsp+0xd],0x1
0x3f71: test r13,r13
0x3f74: jne 0x450a
0x3f7a: lea rax,[rip+0x23e4]
0x3f81: mov qword ptr [rsp+0x50],0x0
0x3f8a: mov byte ptr [rsp+0xe],0x1
0x3f8f: mov byte ptr [rsp+0x7c],0x0
0x3f94: xor r12d,r12d
0x3f97: mov byte ptr [rsp+0xf],0x0
0x3f9c: mov qword ptr [rsp+0x18],0x1
0x3fa5: mov qword ptr [rsp+0x48],rax
0x3faa: mov r15d,0x1
0x3fb0: mov dword ptr [rsp+0x8],0x2
0x3fb8: jmp 0x33d3
0x3fbd: nop dword ptr [rax]
0x3fc0: test ebx,ebx
0x3fc2: jne 0x43bd
0x3fc8: test r13,r13
0x3fcb: je 0x41f6
0x3fd1: mov byte ptr [r14],0x22
0x3fd5: mov byte ptr [rsp+0xe],0x1
0x3fda: xor r12d,r12d
0x3fdd: mov byte ptr [rsp+0x7c],0x0
0x3fe2: mov qword ptr [rsp+0x50],0x0
0x3feb: lea rax,[rip+0x2371]
0x3ff2: mov byte ptr [rsp+0xf],0x0
0x3ff7: mov byte ptr [rsp+0xd],0x1
0x3ffc: mov qword ptr [rsp+0x18],0x1
0x4005: mov r15d,0x1
0x400b: mov qword ptr [rsp+0x48],rax
0x4010: jmp 0x33d3
0x4015: lea rax,[rip+0x2347]
0x401c: mov byte ptr [rsp+0xe],0x1
0x4021: mov byte ptr [rsp+0x7c],0x0
0x4026: xor r12d,r12d
0x4029: mov qword ptr [rsp+0x50],0x0
0x4032: mov byte ptr [rsp+0xf],0x1
0x4037: mov byte ptr [rsp+0xd],0x1
0x403c: mov qword ptr [rsp+0x18],0x1
0x4045: xor r15d,r15d
0x4048: mov qword ptr [rsp+0x48],rax
0x404d: mov dword ptr [rsp+0x8],0x5
0x4055: jmp 0x33d3
0x405a: mov byte ptr [rsp+0xe],0x1
0x405f: mov byte ptr [rsp+0x7c],0x0
0x4064: xor r12d,r12d
0x4067: mov qword ptr [rsp+0x50],0x0
0x4070: mov byte ptr [rsp+0xf],0x0
0x4075: xor r15d,r15d
0x4078: mov byte ptr [rsp+0xd],0x1
0x407d: mov qword ptr [rsp+0x18],0x0
0x4086: mov qword ptr [rsp+0x48],0x0
0x408f: jmp 0x33d3
0x4094: cmp dword ptr [rsp+0x8],0xa
0x4099: je 0x40f1
0x409b: lea rsi,[rip+0x22c5]
0x40a2: xor edi,edi
0x40a4: mov edx,0x5
0x40a9: call 0x17d0
0x40ae: mov rcx,rax
0x40b1: mov qword ptr [rsp+0x68],rax
0x40b6: lea rax,[rip+0x22aa]
0x40bd: cmp rcx,rax
0x40c0: je 0x445e
0x40c6: lea rsi,[rip+0x2298]
0x40cd: xor edi,edi
0x40cf: mov edx,0x5
0x40d4: call 0x17d0
0x40d9: mov rcx,rax
0x40dc: mov qword ptr [rsp+0x60],rax
0x40e1: lea rax,[rip+0x227d]
0x40e8: cmp rcx,rax
0x40eb: je 0x4474
0x40f1: xor r15d,r15d
0x40f4: test ebx,ebx
0x40f6: je 0x42bd
0x40fc: test ebx,ebx
0x40fe: mov rbx,qword ptr [rsp+0x60]
0x4103: setne byte ptr [rsp+0xf]
0x4108: xor r12d,r12d
0x410b: mov rdi,rbx
0x410e: call 0x17f0
0x4113: mov qword ptr [rsp+0x48],rbx
0x4118: mov qword ptr [rsp+0x18],rax
0x411d: mov byte ptr [rsp+0xe],0x1
0x4122: mov byte ptr [rsp+0x7c],0x0
0x4127: mov qword ptr [rsp+0x50],0x0
0x4130: mov byte ptr [rsp+0xd],0x1
0x4135: jmp 0x33d3
0x413a: mov byte ptr [rsp+0xe],0x1
0x413f: mov byte ptr [rsp+0x7c],0x0
0x4144: xor r12d,r12d
0x4147: mov qword ptr [rsp+0x50],0x0
0x4150: mov byte ptr [rsp+0xf],0x0
0x4155: xor r15d,r15d
0x4158: mov byte ptr [rsp+0xd],0x0
0x415d: mov qword ptr [rsp+0x18],0x0
0x4166: mov qword ptr [rsp+0x48],0x0
0x416f: jmp 0x33d3
0x4174: mov byte ptr [rsp+0xe],0x1
0x4179: mov byte ptr [rsp+0x7c],0x0
0x417e: xor r12d,r12d
0x4181: mov qword ptr [rsp+0x50],0x0
0x418a: mov byte ptr [rsp+0xf],0x1
0x418f: mov byte ptr [rsp+0xd],0x1
0x4194: jmp 0x33b3
0x4199: cmp r13,r15
0x419c: jbe 0x41a3
0x419e: mov byte ptr [r14+r15*1],0x30
0x41a3: lea rax,[rcx+0x2]
0x41a7: cmp r13,rax
0x41aa: jbe 0x41b2
0x41ac: mov byte ptr [r14+rcx*1+0x2],0x30
0x41b2: mov eax,r12d
0x41b5: lea r15,[rcx+0x3]
0x41b9: xor r12d,r12d
0x41bc: mov ebx,0x30
0x41c1: jmp 0x3528
0x41c6: nop word ptr cs:[rax+rax*1+0x0]
0x41d0: movzx ebx,byte ptr [rsp+0xf]
0x41d5: mov rbp,r11
0x41d8: mov byte ptr [rsp+0xd],bl
0x41dc: jmp 0x3e89
0x41e1: movzx edx,byte ptr [rsp+0xd]
0x41e6: xor r12d,r12d
0x41e9: jmp 0x3cf0
0x41ee: xor r10d,r10d
0x41f1: jmp 0x3dad
0x41f6: mov qword ptr [rsp+0x50],0x0
0x41ff: mov byte ptr [rsp+0xe],0x1
0x4204: xor r12d,r12d
0x4207: mov byte ptr [rsp+0x7c],0x0
0x420c: jmp 0x3feb
0x4211: mov r11,qword ptr [rsp+0x30]
0x4216: mov rsi,r14
0x4219: mov rcx,r13
0x421c: mov rax,rbx
0x421f: mov rdi,rbx
0x4222: movzx r8d,byte ptr [rsp+0x7d]
0x4228: movzx ebx,byte ptr [rsp+0x7e]
0x422d: mov r9,qword ptr [rsp+0x88]
0x4235: cmp rsi,r11
0x4238: movzx r10d,byte ptr [rsp+0x7f]
0x423e: mov r15,qword ptr [rsp+0x80]
0x4246: mov r14,qword ptr [rsp+0x40]
0x424b: mov r13,qword ptr [rsp+0x70]
0x4250: jae 0x4278
0x4252: cmp byte ptr [rcx],0x0
0x4255: jne 0x4267
0x4257: jmp 0x4278
0x4259: nop dword ptr [rax+0x0]
0x4260: cmp byte ptr [r9+rax*1],0x0
0x4265: je 0x4275
0x4267: add rax,0x1
0x426b: lea rdx,[rbp+rax*1+0x0]
0x4270: cmp r11,rdx
0x4273: ja 0x4260
0x4275: mov rdi,rax
0x4278: movzx edx,byte ptr [rsp+0xd]
0x427d: xor r12d,r12d
0x4280: jmp 0x3ce6
0x4285: mov rdi,rbx
0x4288: movzx r8d,byte ptr [rsp+0x7d]
0x428e: movzx ebx,byte ptr [rsp+0x7e]
0x4293: movzx r10d,byte ptr [rsp+0x7f]
0x4299: mov r15,qword ptr [rsp+0x80]
0x42a1: xor r12d,r12d
0x42a4: mov r14,qword ptr [rsp+0x40]
0x42a9: mov r13,qword ptr [rsp+0x70]
0x42ae: mov r11,qword ptr [rsp+0x30]
0x42b3: movzx edx,byte ptr [rsp+0xd]
0x42b8: jmp 0x3ce6
0x42bd: mov rdx,qword ptr [rsp+0x68]
0x42c2: movzx eax,byte ptr [rdx]
0x42c5: test al,al
0x42c7: je 0x40fc
0x42cd: nop dword ptr [rax]
0x42d0: cmp r13,r15
0x42d3: jbe 0x42d9
0x42d5: mov byte ptr [r14+r15*1],al
0x42d9: add r15,0x1
0x42dd: movzx eax,byte ptr [rdx+r15*1]
0x42e2: test al,al
0x42e4: jne 0x42d0
0x42e6: jmp 0x40fc
0x42eb: mov eax,edx
0x42ed: jmp 0x3847
0x42f2: movzx ebx,byte ptr [rax+rcx*1]
0x42f6: cmp bl,0x3e
0x42f9: ja 0x3b70
0x42ff: movabs rax,0x7000a38200000000
0x4309: bt rax,rbx
0x430d: jae 0x3b70
0x4313: cmp byte ptr [rsp+0xf],0x0
0x4318: jne 0x4502
0x431e: cmp r13,r15
0x4321: jbe 0x4328
0x4323: mov byte ptr [r14+r15*1],0x3f
0x4328: lea rax,[r15+0x1]
0x432c: cmp r13,rax
0x432f: jbe 0x4337
0x4331: mov byte ptr [r14+r15*1+0x1],0x22
0x4337: lea rax,[r15+0x2]
0x433b: cmp r13,rax
0x433e: jbe 0x4346
0x4340: mov byte ptr [r14+r15*1+0x2],0x22
0x4346: lea rax,[r15+0x3]
0x434a: cmp r13,rax
0x434d: jbe 0x4355
0x434f: mov byte ptr [r14+r15*1+0x3],0x3f
0x4355: add r15,0x4
0x4359: xor edx,edx
0x435b: xor r12d,r12d
0x435e: xor eax,eax
0x4360: mov rbp,rcx
0x4363: jmp 0x3528
0x4368: test ebx,ebx
0x436a: je 0x44f8
0x4370: lea rax,[rip+0x1fee]
0x4377: mov byte ptr [rsp+0xe],0x1
0x437c: mov byte ptr [rsp+0x7c],0x0
0x4381: xor r12d,r12d
0x4384: mov qword ptr [rsp+0x50],0x0
0x438d: mov byte ptr [rsp+0xf],0x1
0x4392: mov byte ptr [rsp+0xd],0x0
0x4397: mov qword ptr [rsp+0x18],0x1
0x43a0: xor r15d,r15d
0x43a3: mov qword ptr [rsp+0x48],rax
0x43a8: jmp 0x33d3
0x43ad: nop dword ptr [rax]
0x43b0: mov rbp,r11
0x43b3: movzx eax,byte ptr [rsp+0xf]
0x43b8: jmp 0x3e89
0x43bd: lea rax,[rip+0x1f9f]
0x43c4: mov byte ptr [rsp+0xe],0x1
0x43c9: mov byte ptr [rsp+0x7c],0x0
0x43ce: xor r12d,r12d
0x43d1: mov qword ptr [rsp+0x50],0x0
0x43da: mov byte ptr [rsp+0xf],0x1
0x43df: mov byte ptr [rsp+0xd],0x1
0x43e4: mov qword ptr [rsp+0x18],0x1
0x43ed: xor r15d,r15d
0x43f0: mov qword ptr [rsp+0x48],rax
0x43f5: jmp 0x33d3
0x43fa: mov eax,edx
0x43fc: mov rbx,qword ptr [rsp+0x48]
0x4401: test rbx,rbx
0x4404: je 0x4432
0x4406: test al,al
0x4408: je 0x4432
0x440a: movzx ecx,byte ptr [rbx]
0x440d: mov rax,rbx
0x4410: test cl,cl
0x4412: je 0x4432
0x4414: mov rdx,r15
0x4417: sub rax,r15
0x441a: cmp r13,rdx
0x441d: jbe 0x4423
0x441f: mov byte ptr [r14+rdx*1],cl
0x4423: add rdx,0x1
0x4427: movzx ecx,byte ptr [rax+rdx*1]
0x442b: test cl,cl
0x442d: jne 0x441a
0x442f: mov r15,rdx
0x4432: cmp r13,r15
0x4435: jbe 0x3ed9
0x443b: mov byte ptr [r14+r15*1],0x0
0x4440: jmp 0x3ed9
0x4445: cmp dword ptr [rsp+0x8],0x2
0x444a: movzx ebx,byte ptr [rsp+0xf]
0x444f: mov rbp,r11
0x4452: sete al
0x4455: mov byte ptr [rsp+0xd],bl
0x4459: jmp 0x3e89
0x445e: mov esi,dword ptr [rsp+0x8]
0x4462: mov rdi,rcx
0x4465: call 0x3210
0x446a: mov qword ptr [rsp+0x68],rax
0x446f: jmp 0x40c6
0x4474: mov esi,dword ptr [rsp+0x8]
0x4478: mov rdi,rcx
0x447b: call 0x3210
0x4480: mov qword ptr [rsp+0x60],rax
0x4485: jmp 0x40f1
0x448a: movzx ebx,byte ptr [rsp+0xf]
0x448f: mov rbp,r11
0x4492: mov eax,edx
0x4494: mov byte ptr [rsp+0xd],bl
0x4498: jmp 0x3e89
0x449d: sub rsp,0x8
0x44a1: mov r8d,0x5
0x44a7: mov rcx,r11
0x44aa: push qword ptr [rsp+0x68]
0x44ae: push qword ptr [rsp+0x78]
0x44b2: mov rdi,r14
0x44b5: push qword ptr [rsp+0x38]
0x44b9: mov r9d,dword ptr [rsp+0x98]
0x44c1: mov rdx,qword ptr [rsp+0x30]
0x44c6: mov rsi,qword ptr [rsp+0x70]
0x44cb: call 0x3300
0x44d0: add rsp,0x20
0x44d4: mov r15,rax
0x44d7: jmp 0x3ed9
0x44dc: movzx eax,byte ptr [rsp+0x7c]
0x44e1: jmp 0x43fc
0x44e6: mov dword ptr [rsp+0x8],0x2
0x44ee: jmp 0x3e89
0x44f3: call 0x1800
0x44f8: mov byte ptr [rsp+0xd],0x0
0x44fd: jmp 0x3f71
0x4502: mov rbp,r11
0x4505: jmp 0x3ea0
0x450a: mov byte ptr [rsp+0xe],0x1
0x450f: xor eax,eax
0x4511: xor r12d,r12d
0x4514: mov qword ptr [rsp+0x50],0x0
0x451d: jmp 0x3ac4
0x4522: mov rdx,r13
0x4525: mov r13,qword ptr [rsp+0x50]
0x452a: jmp 0x3b22
0x452f: call 0x1710
0x4534: xchg ax,ax
0x4536: nop word ptr cs:[rax+rax*1+0x0]
0x4540: push r15
0x4542: push r14
0x4544: movsxd r15,edi
0x4547: push r13
0x4549: push r12
0x454b: mov r14,rdx
0x454e: push rbp
0x454f: push rbx
0x4550: mov rbp,rcx
0x4553: sub rsp,0x28
0x4557: mov qword ptr [rsp+0x8],rsi
0x455c: call 0x1720
0x4561: mov r13,rax
0x4564: mov eax,dword ptr [rax]
0x4566: test r15d,r15d
0x4569: mov rbx,qword ptr [rip+0x203b10]
0x4570: mov dword ptr [rsp+0x18],eax
0x4574: js 0x46e1
0x457a: cmp dword ptr [rip+0x203af7],r15d
0x4581: jg 0x45e5
0x4583: cmp r15d,0x7fffffff
0x458a: je 0x46e6
0x4590: lea r12d,[r15+0x1]
0x4594: lea rax,[rip+0x203af5]
0x459b: movsxd rsi,r12d
0x459e: shl rsi,0x4
0x45a2: cmp rbx,rax
0x45a5: je 0x46c0
0x45ab: mov rdi,rbx
0x45ae: call 0x5520
0x45b3: mov rbx,rax
0x45b6: mov qword ptr [rip+0x203ac3],rax
0x45bd: movsxd rdi,dword ptr [rip+0x203ab4]
0x45c4: mov edx,r12d
0x45c7: xor esi,esi
0x45c9: sub edx,edi
0x45cb: shl rdi,0x4
0x45cf: movsxd rdx,edx
0x45d2: add rdi,rbx
0x45d5: shl rdx,0x4
0x45d9: call 0x1880
0x45de: mov dword ptr [rip+0x203a93],r12d
0x45e5: mov eax,dword ptr [rbp+0x4]
0x45e8: shl r15,0x4
0x45ec: sub rsp,0x8
0x45f0: add rbx,r15
0x45f3: lea r15,[rbp+0x8]
0x45f7: mov r8d,dword ptr [rbp+0x0]
0x45fb: mov r11,qword ptr [rbx]
0x45fe: mov r12,qword ptr [rbx+0x8]
0x4602: mov rcx,r14
0x4605: or eax,0x1
0x4608: mov dword ptr [rsp+0x24],eax
0x460c: push qword ptr [rbp+0x30]
0x460f: mov r9d,eax
0x4612: push qword ptr [rbp+0x28]
0x4615: push r15
0x4617: mov rsi,r11
0x461a: mov rdx,qword ptr [rsp+0x28]
0x461f: mov rdi,r12
0x4622: mov qword ptr [rsp+0x30],r11
0x4627: call 0x3300
0x462c: add rsp,0x20
0x4630: mov r11,qword ptr [rsp+0x10]
0x4635: cmp r11,rax
0x4638: ja 0x46a1
0x463a: lea rsi,[rax+0x1]
0x463e: lea rax,[rip+0x203b5b]
0x4645: cmp r12,rax
0x4648: mov qword ptr [rbx],rsi
0x464b: je 0x465f
0x464d: mov rdi,r12
0x4650: mov qword ptr [rsp+0x10],rsi
0x4655: call 0x16f0
0x465a: mov rsi,qword ptr [rsp+0x10]
0x465f: mov rdi,rsi
0x4662: mov qword ptr [rsp+0x10],rsi
0x4667: call 0x54c0
0x466c: sub rsp,0x8
0x4670: mov qword ptr [rbx+0x8],rax
0x4674: mov r8d,dword ptr [rbp+0x0]
0x4678: push qword ptr [rbp+0x30]
0x467b: push qword ptr [rbp+0x28]
0x467e: mov rcx,r14
0x4681: push r15
0x4683: mov r9d,dword ptr [rsp+0x3c]
0x4688: mov rdi,rax
0x468b: mov rdx,qword ptr [rsp+0x28]
0x4690: mov rsi,qword ptr [rsp+0x30]
0x4695: mov r12,rax
0x4698: call 0x3300
0x469d: add rsp,0x20
0x46a1: mov eax,dword ptr [rsp+0x18]
0x46a5: mov dword ptr [r13+0x0],eax
0x46a9: add rsp,0x28
0x46ad: mov rax,r12
0x46b0: pop rbx
0x46b1: pop rbp
0x46b2: pop r12
0x46b4: pop r13
0x46b6: pop r14
0x46b8: pop r15
0x46ba: ret 
0x46bb: nop dword ptr [rax+rax*1+0x0]
0x46c0: xor edi,edi
0x46c2: call 0x5520
0x46c7: movdqa xmm0,xmmword ptr [rip+0x2039c1]
0x46cf: mov rbx,rax
0x46d2: mov qword ptr [rip+0x2039a7],rax
0x46d9: movups xmmword ptr [rax],xmm0
0x46dc: jmp 0x45bd
0x46e1: call 0x1710
0x46e6: call 0x5710
0x46eb: nop dword ptr [rax+rax*1+0x0]
0x46f0: push r12
0x46f2: push rbp
0x46f3: push rbx
0x46f4: mov rbx,rdi
0x46f7: call 0x1720
0x46fc: mov r12d,dword ptr [rax]
0x46ff: mov rbp,rax
0x4702: lea rax,[rip+0x203b97]
0x4709: test rbx,rbx
0x470c: mov esi,0x38
0x4711: cmove rbx,rax
0x4715: mov rdi,rbx
0x4718: call 0x56c0
0x471d: mov dword ptr [rbp+0x0],r12d
0x4721: pop rbx
0x4722: pop rbp
0x4723: pop r12
0x4725: ret 
0x4726: nop word ptr cs:[rax+rax*1+0x0]
0x4730: lea rax,[rip+0x203b69]
0x4737: test rdi,rdi
0x473a: cmove rdi,rax
0x473e: mov eax,dword ptr [rdi]
0x4740: ret 
0x4741: nop dword ptr [rax+rax*1+0x0]
0x4746: nop word ptr cs:[rax+rax*1+0x0]
0x4750: lea rax,[rip+0x203b49]
0x4757: test rdi,rdi
0x475a: cmove rdi,rax
0x475e: mov dword ptr [rdi],esi
0x4760: ret 
0x4761: nop dword ptr [rax+rax*1+0x0]
0x4766: nop word ptr cs:[rax+rax*1+0x0]
0x4770: lea rax,[rip+0x203b29]
0x4777: test rdi,rdi
0x477a: mov ecx,esi
0x477c: cmove rdi,rax
0x4780: mov eax,esi
0x4782: and ecx,0x1f
0x4785: shr al,0x5
0x4788: movzx eax,al
0x478b: lea rdi,[rdi+rax*4+0x8]
0x4790: mov esi,dword ptr [rdi]
0x4792: mov eax,esi
0x4794: shr eax,cl
0x4796: xor edx,eax
0x4798: and eax,0x1
0x479b: and edx,0x1
0x479e: shl edx,cl
0x47a0: xor edx,esi
0x47a2: mov dword ptr [rdi],edx
0x47a4: ret 
0x47a5: nop 
0x47a6: nop word ptr cs:[rax+rax*1+0x0]
0x47b0: lea rax,[rip+0x203ae9]
0x47b7: test rdi,rdi
0x47ba: cmove rdi,rax
0x47be: mov eax,dword ptr [rdi+0x4]
0x47c1: mov dword ptr [rdi+0x4],esi
0x47c4: ret 
0x47c5: nop 
0x47c6: nop word ptr cs:[rax+rax*1+0x0]
0x47d0: lea rax,[rip+0x203ac9]
0x47d7: test rdi,rdi
0x47da: cmove rdi,rax
0x47de: test rsi,rsi
0x47e1: mov dword ptr [rdi],0xa
0x47e7: je 0x47f7
0x47e9: test rdx,rdx
0x47ec: je 0x47f7
0x47ee: mov qword ptr [rdi+0x28],rsi
0x47f2: mov qword ptr [rdi+0x30],rdx
0x47f6: ret 
0x47f7: sub rsp,0x8
0x47fb: call 0x1710
0x4800: push r15
0x4802: push r14
0x4804: lea rax,[rip+0x203a95]
0x480b: push r13
0x480d: push r12
0x480f: mov r13,rdi
0x4812: push rbp
0x4813: push rbx
0x4814: mov rbx,r8
0x4817: mov r14,rsi
0x481a: mov r15,rdx
0x481d: sub rsp,0x18
0x4821: test r8,r8
0x4824: cmove rbx,rax
0x4828: mov qword ptr [rsp+0x8],rcx
0x482d: call 0x1720
0x4832: mov r12d,dword ptr [rax]
0x4835: mov rbp,rax
0x4838: lea rax,[rbx+0x8]
0x483c: sub rsp,0x8
0x4840: mov r9d,dword ptr [rbx+0x4]
0x4844: push qword ptr [rbx+0x30]
0x4847: mov r8d,dword ptr [rbx]
0x484a: push qword ptr [rbx+0x28]
0x484d: mov rdx,r15
0x4850: push rax
0x4851: mov rcx,qword ptr [rsp+0x28]
0x4856: mov rsi,r14
0x4859: mov rdi,r13
0x485c: call 0x3300
0x4861: mov dword ptr [rbp+0x0],r12d
0x4865: add rsp,0x38
0x4869: pop rbx
0x486a: pop rbp
0x486b: pop r12
0x486d: pop r13
0x486f: pop r14
0x4871: pop r15
0x4873: ret 
0x4874: xchg ax,ax
0x4876: nop word ptr cs:[rax+rax*1+0x0]
0x4880: push r15
0x4882: push r14
0x4884: lea rax,[rip+0x203a15]
0x488b: push r13
0x488d: push r12
0x488f: mov r12,rdx
0x4892: push rbp
0x4893: push rbx
0x4894: mov rbx,rcx
0x4897: mov r14,rdi
0x489a: mov r15,rsi
0x489d: sub rsp,0x38
0x48a1: test rcx,rcx
0x48a4: cmove rbx,rax
0x48a8: xor ebp,ebp
0x48aa: call 0x1720
0x48af: test r12,r12
0x48b2: mov r13,rax
0x48b5: mov eax,dword ptr [rax]
0x48b7: sete bpl
0x48bb: or ebp,dword ptr [rbx+0x4]
0x48be: lea r10,[rbx+0x8]
0x48c2: sub rsp,0x8
0x48c6: mov r8d,dword ptr [rbx]
0x48c9: mov rcx,r15
0x48cc: mov dword ptr [rsp+0x14],eax
0x48d0: push qword ptr [rbx+0x30]
0x48d3: mov rdx,r14
0x48d6: push qword ptr [rbx+0x28]
0x48d9: push r10
0x48db: xor esi,esi
0x48dd: mov r9d,ebp
0x48e0: xor edi,edi
0x48e2: mov qword ptr [rsp+0x40],r10
0x48e7: call 0x3300
0x48ec: lea rsi,[rax+0x1]
0x48f0: mov qword ptr [rsp+0x48],rax
0x48f5: add rsp,0x20
0x48f9: mov rdi,rsi
0x48fc: mov qword ptr [rsp+0x18],rsi
0x4901: call 0x54c0
0x4906: mov qword ptr [rsp+0x10],rax
0x490b: sub rsp,0x8
0x490f: push qword ptr [rbx+0x30]
0x4912: push qword ptr [rbx+0x28]
0x4915: mov r10,qword ptr [rsp+0x38]
0x491a: mov r9d,ebp
0x491d: mov r8d,dword ptr [rbx]
0x4920: mov rcx,r15
0x4923: mov rdx,r14
0x4926: mov rdi,rax
0x4929: push r10
0x492b: mov rsi,qword ptr [rsp+0x38]
0x4930: call 0x3300
0x4935: mov eax,dword ptr [rsp+0x2c]
0x4939: add rsp,0x20
0x493d: test r12,r12
0x4940: mov dword ptr [r13+0x0],eax
0x4944: je 0x494f
0x4946: mov r11,qword ptr [rsp+0x28]
0x494b: mov qword ptr [r12],r11
0x494f: mov rax,qword ptr [rsp+0x10]
0x4954: add rsp,0x38
0x4958: pop rbx
0x4959: pop rbp
0x495a: pop r12
0x495c: pop r13
0x495e: pop r14
0x4960: pop r15
0x4962: ret 
0x4963: nop dword ptr [rax]
0x4966: nop word ptr cs:[rax+rax*1+0x0]
0x4970: mov rcx,rdx
0x4973: xor edx,edx
0x4975: jmp 0x4880
0x497a: nop word ptr [rax+rax*1+0x0]
0x4980: mov eax,dword ptr [rip+0x2036f2]
0x4986: push r12
0x4988: mov r12,qword ptr [rip+0x2036f1]
0x498f: push rbp
0x4990: push rbx
0x4991: cmp eax,0x1
0x4994: jle 0x49c1
0x4996: sub eax,0x2
0x4999: lea rbx,[r12+0x18]
0x499e: shl rax,0x4
0x49a2: lea rbp,[r12+rax*1+0x28]
0x49a7: nop word ptr [rax+rax*1+0x0]
0x49b0: mov rdi,qword ptr [rbx]
0x49b3: add rbx,0x10
0x49b7: call 0x16f0
0x49bc: cmp rbx,rbp
0x49bf: jne 0x49b0
0x49c1: mov rdi,qword ptr [r12+0x8]
0x49c6: lea rbx,[rip+0x2037d3]
0x49cd: cmp rdi,rbx
0x49d0: je 0x49e9
0x49d2: call 0x16f0
0x49d7: mov qword ptr [rip+0x2036ae],0x100
0x49e2: mov qword ptr [rip+0x2036af],rbx
0x49e9: lea rbx,[rip+0x2036a0]
0x49f0: cmp r12,rbx
0x49f3: je 0x4a04
0x49f5: mov rdi,r12
0x49f8: call 0x16f0
0x49fd: mov qword ptr [rip+0x20367c],rbx
0x4a04: pop rbx
0x4a05: mov dword ptr [rip+0x203669],0x1
0x4a0f: pop rbp
0x4a10: pop r12
0x4a12: ret 
0x4a13: nop dword ptr [rax]
0x4a16: nop word ptr cs:[rax+rax*1+0x0]
0x4a20: lea rcx,[rip+0x203879]
0x4a27: mov rdx,0xffffffffffffffff
0x4a2e: jmp 0x4540
0x4a33: nop dword ptr [rax]
0x4a36: nop word ptr cs:[rax+rax*1+0x0]
0x4a40: lea rcx,[rip+0x203859]
0x4a47: jmp 0x4540
0x4a4c: nop dword ptr [rax+0x0]
0x4a50: lea rcx,[rip+0x203849]
0x4a57: mov rsi,rdi
0x4a5a: mov rdx,0xffffffffffffffff
0x4a61: xor edi,edi
0x4a63: jmp 0x4540
0x4a68: nop dword ptr [rax+rax*1+0x0]
0x4a70: lea rcx,[rip+0x203829]
0x4a77: mov rdx,rsi
0x4a7a: mov rsi,rdi
0x4a7d: xor edi,edi
0x4a7f: jmp 0x4540
0x4a84: xchg ax,ax
0x4a86: nop word ptr cs:[rax+rax*1+0x0]
0x4a90: sub rsp,0x48
0x4a94: mov rax,rdx
0x4a97: mov rdx,qword ptr fs:0x28
0x4aa0: mov qword ptr [rsp+0x38],rdx
0x4aa5: xor edx,edx
0x4aa7: cmp esi,0xa
0x4aaa: je 0x4b14
0x4aac: mov dword ptr [rsp],esi
0x4aaf: mov rcx,rsp
0x4ab2: mov rdx,0xffffffffffffffff
0x4ab9: mov rsi,rax
0x4abc: mov qword ptr [rsp+0x4],0x0
0x4ac5: mov qword ptr [rsp+0xc],0x0
0x4ace: mov qword ptr [rsp+0x14],0x0
0x4ad7: mov qword ptr [rsp+0x1c],0x0
0x4ae0: mov qword ptr [rsp+0x24],0x0
0x4ae9: mov qword ptr [rsp+0x2c],0x0
0x4af2: mov dword ptr [rsp+0x34],0x0
0x4afa: call 0x4540
0x4aff: mov rcx,qword ptr [rsp+0x38]
0x4b04: xor rcx,qword ptr fs:0x28
0x4b0d: jne 0x4b19
0x4b0f: add rsp,0x48
0x4b13: ret 
0x4b14: call 0x1710
0x4b19: call 0x1800
0x4b1e: xchg ax,ax
0x4b20: sub rsp,0x48
0x4b24: mov rax,rdx
0x4b27: mov rdx,rcx
0x4b2a: mov rcx,qword ptr fs:0x28
0x4b33: mov qword ptr [rsp+0x38],rcx
0x4b38: xor ecx,ecx
0x4b3a: cmp esi,0xa
0x4b3d: je 0x4ba0
0x4b3f: mov dword ptr [rsp],esi
0x4b42: mov rcx,rsp
0x4b45: mov rsi,rax
0x4b48: mov qword ptr [rsp+0x4],0x0
0x4b51: mov qword ptr [rsp+0xc],0x0
0x4b5a: mov qword ptr [rsp+0x14],0x0
0x4b63: mov qword ptr [rsp+0x1c],0x0
0x4b6c: mov qword ptr [rsp+0x24],0x0
0x4b75: mov qword ptr [rsp+0x2c],0x0
0x4b7e: mov dword ptr [rsp+0x34],0x0
0x4b86: call 0x4540
0x4b8b: mov rdx,qword ptr [rsp+0x38]
0x4b90: xor rdx,qword ptr fs:0x28
0x4b99: jne 0x4ba5
0x4b9b: add rsp,0x48
0x4b9f: ret 
0x4ba0: call 0x1710
0x4ba5: call 0x1800
0x4baa: nop word ptr [rax+rax*1+0x0]
0x4bb0: mov rdx,rsi
0x4bb3: mov esi,edi
0x4bb5: xor edi,edi
0x4bb7: jmp 0x4a90
0x4bbc: nop dword ptr [rax+0x0]
0x4bc0: mov rcx,rdx
0x4bc3: mov rdx,rsi
0x4bc6: mov esi,edi
0x4bc8: xor edi,edi
0x4bca: jmp 0x4b20
0x4bcf: nop 
0x4bd0: sub rsp,0x48
0x4bd4: mov ecx,edx
0x4bd6: mov rax,qword ptr fs:0x28
0x4bdf: mov qword ptr [rsp+0x38],rax
0x4be4: xor eax,eax
0x4be6: mov rax,qword ptr [rip+0x2036e3]
0x4bed: mov r8,rsp
0x4bf0: and ecx,0x1f
0x4bf3: movdqa xmm0,xmmword ptr [rip+0x2036a5]
0x4bfb: mov qword ptr [rsp+0x30],rax
0x4c00: mov eax,edx
0x4c02: movaps xmmword ptr [rsp],xmm0
0x4c06: shr al,0x5
0x4c09: movzx eax,al
0x4c0c: lea r9,[r8+rax*4+0x8]
0x4c11: movdqa xmm0,xmmword ptr [rip+0x203697]
0x4c19: movaps xmmword ptr [rsp+0x10],xmm0
0x4c1e: movdqa xmm0,xmmword ptr [rip+0x20369a]
0x4c26: movaps xmmword ptr [rsp+0x20],xmm0
0x4c2b: mov edx,dword ptr [r9]
0x4c2e: mov eax,edx
0x4c30: shr eax,cl
0x4c32: not eax
0x4c34: and eax,0x1
0x4c37: shl eax,cl
0x4c39: mov rcx,r8
0x4c3c: xor eax,edx
0x4c3e: mov rdx,rsi
0x4c41: mov rsi,rdi
0x4c44: mov dword ptr [r9],eax
0x4c47: xor edi,edi
0x4c49: call 0x4540
0x4c4e: mov rsi,qword ptr [rsp+0x38]
0x4c53: xor rsi,qword ptr fs:0x28
0x4c5c: jne 0x4c63
0x4c5e: add rsp,0x48
0x4c62: ret 
0x4c63: call 0x1800
0x4c68: nop dword ptr [rax+rax*1+0x0]
0x4c70: movsx edx,sil
0x4c74: mov rsi,0xffffffffffffffff
0x4c7b: jmp 0x4bd0
0x4c80: mov edx,0x3a
0x4c85: mov rsi,0xffffffffffffffff
0x4c8c: jmp 0x4bd0
0x4c91: nop dword ptr [rax+rax*1+0x0]
0x4c96: nop word ptr cs:[rax+rax*1+0x0]
0x4ca0: mov edx,0x3a
0x4ca5: jmp 0x4bd0
0x4caa: nop word ptr [rax+rax*1+0x0]
0x4cb0: sub rsp,0x48
0x4cb4: mov rax,rdx
0x4cb7: mov rdx,qword ptr fs:0x28
0x4cc0: mov qword ptr [rsp+0x38],rdx
0x4cc5: xor edx,edx
0x4cc7: cmp esi,0xa
0x4cca: je 0x4d34
0x4ccc: mov dword ptr [rsp],esi
0x4ccf: mov rcx,rsp
0x4cd2: mov rdx,0xffffffffffffffff
0x4cd9: mov rsi,rax
0x4cdc: mov qword ptr [rsp+0x4],0x0
0x4ce5: mov qword ptr [rsp+0xc],0x4000000
0x4cee: mov qword ptr [rsp+0x14],0x0
0x4cf7: mov qword ptr [rsp+0x1c],0x0
0x4d00: mov qword ptr [rsp+0x24],0x0
0x4d09: mov qword ptr [rsp+0x2c],0x0
0x4d12: mov dword ptr [rsp+0x34],0x0
0x4d1a: call 0x4540
0x4d1f: mov rcx,qword ptr [rsp+0x38]
0x4d24: xor rcx,qword ptr fs:0x28
0x4d2d: jne 0x4d39
0x4d2f: add rsp,0x48
0x4d33: ret 
0x4d34: call 0x1710
0x4d39: call 0x1800
0x4d3e: xchg ax,ax
0x4d40: sub rsp,0x48
0x4d44: mov r9,rcx
0x4d47: mov rcx,qword ptr [rip+0x203582]
0x4d4e: movdqa xmm0,xmmword ptr [rip+0x20354a]
0x4d56: mov rax,qword ptr fs:0x28
0x4d5f: mov qword ptr [rsp+0x38],rax
0x4d64: xor eax,eax
0x4d66: movaps xmmword ptr [rsp],xmm0
0x4d6a: test rsi,rsi
0x4d6d: mov qword ptr [rsp+0x30],rcx
0x4d72: mov dword ptr [rsp],0xa
0x4d79: movdqa xmm0,xmmword ptr [rip+0x20352f]
0x4d81: movaps xmmword ptr [rsp+0x10],xmm0
0x4d86: movdqa xmm0,xmmword ptr [rip+0x203532]
0x4d8e: movaps xmmword ptr [rsp+0x20],xmm0
0x4d93: je 0x4dc7
0x4d95: test rdx,rdx
0x4d98: je 0x4dc7
0x4d9a: mov qword ptr [rsp+0x28],rsi
0x4d9f: mov qword ptr [rsp+0x30],rdx
0x4da4: mov rcx,rsp
0x4da7: mov rdx,r8
0x4daa: mov rsi,r9
0x4dad: call 0x4540
0x4db2: mov rdi,qword ptr [rsp+0x38]
0x4db7: xor rdi,qword ptr fs:0x28
0x4dc0: jne 0x4dcc
0x4dc2: add rsp,0x48
0x4dc6: ret 
0x4dc7: call 0x1710
0x4dcc: call 0x1800
0x4dd1: nop dword ptr [rax+rax*1+0x0]
0x4dd6: nop word ptr cs:[rax+rax*1+0x0]
0x4de0: mov r8,0xffffffffffffffff
0x4de7: jmp 0x4d40
0x4dec: nop dword ptr [rax+0x0]
0x4df0: mov rcx,rdx
0x4df3: mov r8,0xffffffffffffffff
0x4dfa: mov rdx,rsi
0x4dfd: mov rsi,rdi
0x4e00: xor edi,edi
0x4e02: jmp 0x4d40
0x4e07: nop word ptr [rax+rax*1+0x0]
0x4e10: mov r8,rcx
0x4e13: mov rcx,rdx
0x4e16: mov rdx,rsi
0x4e19: mov rsi,rdi
0x4e1c: xor edi,edi
0x4e1e: jmp 0x4d40
0x4e23: nop dword ptr [rax]
0x4e26: nop word ptr cs:[rax+rax*1+0x0]
0x4e30: lea rcx,[rip+0x203209]
0x4e37: jmp 0x4540
0x4e3c: nop dword ptr [rax+0x0]
0x4e40: lea rcx,[rip+0x2031f9]
0x4e47: mov rdx,rsi
0x4e4a: mov rsi,rdi
0x4e4d: xor edi,edi
0x4e4f: jmp 0x4540
0x4e54: xchg ax,ax
0x4e56: nop word ptr cs:[rax+rax*1+0x0]
0x4e60: lea rcx,[rip+0x2031d9]
0x4e67: mov rdx,0xffffffffffffffff
0x4e6e: jmp 0x4540
0x4e73: nop dword ptr [rax]
0x4e76: nop word ptr cs:[rax+rax*1+0x0]
0x4e80: lea rcx,[rip+0x2031b9]
0x4e87: mov rsi,rdi
0x4e8a: mov rdx,0xffffffffffffffff
0x4e91: xor edi,edi
0x4e93: jmp 0x4540
0x4e98: nop dword ptr [rax+rax*1+0x0]
0x4f46: nop word ptr cs:[rax+rax*1+0x0]
0x4fd5: nop dword ptr [rax]
0x4fd8: mov r8,rcx
0x4fdb: mov rcx,rdx
0x4fde: lea rdx,[rip+0x184f]
0x4fe5: mov esi,0x1
0x4fea: xor eax,eax
0x4fec: call 0x1a30
0x4ff1: jmp 0x4edc
0x4ff6: nop word ptr cs:[rax+rax*1+0x0]
0x5055: nop dword ptr [rax]
0x5091: nop dword ptr [rax+0x0]
0x50d8: nop dword ptr [rax+rax*1+0x0]
0x5127: nop word ptr [rax+rax*1+0x0]
0x5184: nop dword ptr [rax+0x0]
0x51b2: nop word ptr [rax+rax*1+0x0]
0x5266: nop word ptr cs:[rax+rax*1+0x0]
0x52b7: nop word ptr [rax+rax*1+0x0]
0x52c0: xor r9d,r9d
0x52c3: cmp qword ptr [r8],0x0
0x52c7: je 0x52db
0x52c9: nop dword ptr [rax+0x0]
0x52d0: add r9,0x1
0x52d4: cmp qword ptr [r8+r9*8],0x0
0x52d9: jne 0x52d0
0x52db: jmp 0x4ea0
0x52e0: sub rsp,0x68
0x52e4: mov r10,r8
0x52e7: xor r9d,r9d
0x52ea: mov rax,qword ptr fs:0x28
0x52f3: mov qword ptr [rsp+0x58],rax
0x52f8: xor eax,eax
0x52fa: mov r8,rsp
0x52fd: nop dword ptr [rax]
0x5300: mov eax,dword ptr [r10]
0x5303: cmp eax,0x2f
0x5306: ja 0x534a
0x5308: mov r11d,eax
0x530b: add r11,qword ptr [r10+0x10]
0x530f: add eax,0x8
0x5312: mov dword ptr [r10],eax
0x5315: mov rax,qword ptr [r11]
0x5318: test rax,rax
0x531b: mov qword ptr [r8+r9*8],rax
0x531f: je 0x532b
0x5321: add r9,0x1
0x5325: cmp r9,0xa
0x5329: jne 0x5300
0x532b: call 0x4ea0
0x5330: mov rax,qword ptr [rsp+0x58]
0x5335: xor rax,qword ptr fs:0x28
0x533e: jne 0x5345
0x5340: add rsp,0x68
0x5344: ret 
0x5345: call 0x1800
0x534a: mov r11,qword ptr [r10+0x8]
0x534e: lea rax,[r11+0x8]
0x5352: mov qword ptr [r10+0x8],rax
0x5356: jmp 0x5315
0x5358: nop dword ptr [rax+rax*1+0x0]
0x5420: call 0x1800
0x5435: nop 
0x5436: nop word ptr cs:[rax+rax*1+0x0]
0x5440: push rbx
0x5441: lea rsi,[rip+0x143a]
0x5448: mov edx,0x5
0x544d: xor edi,edi
0x544f: call 0x17d0
0x5454: lea rdx,[rip+0x143c]
0x545b: mov rsi,rax
0x545e: mov edi,0x1
0x5463: xor eax,eax
0x5465: call 0x19a0
0x546a: lea rsi,[rip+0x143c]
0x5471: mov edx,0x5
0x5476: xor edi,edi
0x5478: call 0x17d0
0x547d: lea rcx,[rip+0xd7c]
0x5484: lea rdx,[rip+0x903]
0x548b: mov rsi,rax
0x548e: mov edi,0x1
0x5493: xor eax,eax
0x5495: call 0x19a0
0x549a: mov rbx,qword ptr [rip+0x202c07]
0x54a1: lea rsi,[rip+0x1638]
0x54a8: xor edi,edi
0x54aa: mov edx,0x5
0x54af: call 0x17d0
0x54b4: mov rsi,rbx
0x54b7: mov rdi,rax
0x54ba: pop rbx
0x54bb: jmp 0x18a0
0x54ce: test rbx,rbx
0x54d1: jne 0x54d5
0x54d5: call 0x5710
0x54da: nop word ptr [rax+rax*1+0x0]
0x54e0: mov rax,rdi
0x54e3: mul rsi
0x54e6: mov rdi,rax
0x54e9: seto al
0x54ec: test rdi,rdi
0x54ef: js 0x54fb
0x54f1: movzx eax,al
0x54f4: test rax,rax
0x54f7: jne 0x54fb
0x54f9: jmp 0x54c0
0x54fb: sub rsp,0x8
0x54ff: call 0x5710
0x5504: xchg ax,ax
0x5506: nop word ptr cs:[rax+rax*1+0x0]
0x5510: jmp 0x54c0
0x5512: nop dword ptr [rax+0x0]
0x5516: nop word ptr cs:[rax+rax*1+0x0]
0x5529: test rdi,rdi
0x552c: jne 0x5548
0x553b: test rbx,rbx
0x553e: jne 0x5551
0x5542: nop word ptr [rax+rax*1+0x0]
0x5548: call 0x16f0
0x554d: xor eax,eax
0x554f: pop rbx
0x5550: ret 
0x5551: call 0x5710
0x5556: nop word ptr cs:[rax+rax*1+0x0]
0x5560: mov rax,rsi
0x5563: mul rdx
0x5566: mov rsi,rax
0x5569: seto al
0x556c: test rsi,rsi
0x556f: js 0x557b
0x5571: movzx eax,al
0x5574: test rax,rax
0x5577: jne 0x557b
0x5579: jmp 0x5520
0x557b: sub rsp,0x8
0x557f: call 0x5710
0x5584: xchg ax,ax
0x5586: nop word ptr cs:[rax+rax*1+0x0]
0x5590: test rdi,rdi
0x5593: mov r9,rdx
0x5596: mov rcx,qword ptr [rsi]
0x5599: je 0x55d0
0x559b: xor edx,edx
0x559d: movabs rax,0x5555555555555554
0x55a7: div r9
0x55aa: cmp rax,rcx
0x55ad: jbe 0x55eb
0x55af: mov rax,rcx
0x55b2: shr rax,0x1
0x55b5: lea rcx,[rax+rcx*1+0x1]
0x55ba: mov qword ptr [rsi],rcx
0x55bd: imul rcx,r9
0x55c1: mov rsi,rcx
0x55c4: jmp 0x5520
0x55c9: nop dword ptr [rax+0x0]
0x55d0: test rcx,rcx
0x55d3: je 0x55f8
0x55d5: mov rax,rcx
0x55d8: mul r9
0x55db: seto dl
0x55de: test rax,rax
0x55e1: movzx edx,dl
0x55e4: js 0x55eb
0x55e6: test rdx,rdx
0x55e9: je 0x55ba
0x55eb: sub rsp,0x8
0x55ef: call 0x5710
0x55f4: nop dword ptr [rax+0x0]
0x55f8: xor edx,edx
0x55fa: mov eax,0x80
0x55ff: xor r8d,r8d
0x5602: div r9
0x5605: test rax,rax
0x5608: sete r8b
0x560c: lea rcx,[r8+rax*1]
0x5610: jmp 0x55d5
0x5612: nop dword ptr [rax+0x0]
0x5616: nop word ptr cs:[rax+rax*1+0x0]
0x5620: test rdi,rdi
0x5623: mov rax,qword ptr [rsi]
0x5626: je 0x5650
0x5628: movabs rdx,0x5555555555555553
0x5632: cmp rax,rdx
0x5635: ja 0x5661
0x5637: mov rdx,rax
0x563a: shr rdx,0x1
0x563d: lea rax,[rdx+rax*1+0x1]
0x5642: mov qword ptr [rsi],rax
0x5645: mov rsi,rax
0x5648: jmp 0x5520
0x564d: nop dword ptr [rax]
0x5650: test rax,rax
0x5653: mov edx,0x80
0x5658: cmove rax,rdx
0x565c: test rax,rax
0x565f: jns 0x5642
0x5661: sub rsp,0x8
0x5665: call 0x5710
0x566a: nop word ptr [rax+rax*1+0x0]
0x5670: push rbx
0x5671: mov rbx,rdi
0x5674: call 0x54c0
0x5679: mov rdx,rbx
0x567c: xor esi,esi
0x567e: mov rdi,rax
0x5681: pop rbx
0x5682: jmp 0x1880
0x5687: nop word ptr [rax+rax*1+0x0]
0x5690: mov rax,rdi
0x5693: sub rsp,0x8
0x5697: mul rsi
0x569a: seto dl
0x569d: test rax,rax
0x56a0: js 0x56b9
0x56a2: movzx edx,dl
0x56a5: test rdx,rdx
0x56a8: jne 0x56b9
0x56aa: call 0x18b0
0x56af: test rax,rax
0x56b2: je 0x56b9
0x56b4: add rsp,0x8
0x56b8: ret 
0x56b9: call 0x5710
0x56be: xchg ax,ax
0x56c0: push rbp
0x56c1: push rbx
0x56c2: mov rbp,rdi
0x56c5: mov rdi,rsi
0x56c8: mov rbx,rsi
0x56cb: sub rsp,0x8
0x56cf: call 0x54c0
0x56d4: add rsp,0x8
0x56d8: mov rdx,rbx
0x56db: mov rsi,rbp
0x56de: pop rbx
0x56df: pop rbp
0x56e0: mov rdi,rax
0x56e3: jmp 0x18e0
0x56e8: nop dword ptr [rax+rax*1+0x0]
0x56f0: push rbx
0x56f1: mov rbx,rdi
0x56f4: call 0x17f0
0x56f9: mov rdi,rbx
0x56fc: lea rsi,[rax+0x1]
0x5700: pop rbx
0x5701: jmp 0x56c0
0x5703: nop word ptr cs:[rax+rax*1+0x0]
0x570d: nop dword ptr [rax]
0x5740: call 0x1710
0x5745: nop word ptr cs:[rax+rax*1+0x0]
0x574f: nop 
0x5795: nop dword ptr [rax]
0x57cb: nop dword ptr [rax+rax*1+0x0]
0x57f3: nop dword ptr [rax+rax*1+0x0]
0x581f: nop 
0x5867: nop word ptr [rax+rax*1+0x0]
0x5870: push r13
0x5872: push r12
0x5874: mov r13,rsi
0x5877: push rbp
0x5878: push rbx
0x5879: mov rbx,rdi
0x587c: mov r12,rdx
0x587f: sub rsp,0x18
0x5883: mov rax,qword ptr fs:0x28
0x588c: mov qword ptr [rsp+0x8],rax
0x5891: xor eax,eax
0x5893: lea rax,[rsp+0x4]
0x5898: test rdi,rdi
0x589b: cmove rbx,rax
0x589f: mov rdi,rbx
0x58a2: call 0x1820
0x58a7: cmp rax,0xfffffffffffffffd
0x58ab: mov rbp,rax
0x58ae: jbe 0x58d0
0x58b0: test r12,r12
0x58b3: je 0x58d0
0x58b5: xor edi,edi
0x58b7: call 0x3070
0x58bc: test al,al
0x58be: jne 0x58d0
0x58c0: movzx eax,byte ptr [r13+0x0]
0x58c5: mov ebp,0x1
0x58ca: mov dword ptr [rbx],eax
0x58cc: nop dword ptr [rax+0x0]
0x58d0: mov rdx,qword ptr [rsp+0x8]
0x58d5: xor rdx,qword ptr fs:0x28
0x58de: mov rax,rbp
0x58e1: jne 0x58ee
0x58e3: add rsp,0x18
0x58e7: pop rbx
0x58e8: pop rbp
0x58e9: pop r12
0x58eb: pop r13
0x58ed: ret 
0x58ee: call 0x1800
0x58f3: nop word ptr cs:[rax+rax*1+0x0]
0x58fd: nop dword ptr [rax]
0x5900: push rbp
0x5901: push rbx
0x5902: mov rbp,rdi
0x5905: mov edi,0x21
0x590a: sub rsp,0x8
0x590e: call 0x54c0
0x5913: lea rsi,[rbp+0x2c]
0x5917: mov rbx,rax
0x591a: mov edx,0x20
0x591f: mov rdi,rax
0x5922: call 0x1730
0x5927: mov rdi,rbx
0x592a: mov byte ptr [rbx+0x20],0x0
0x592e: call 0x17f0
0x5933: add rax,rbx
0x5936: cmp rbx,rax
0x5939: jae 0x5941
0x593b: cmp byte ptr [rax-0x1],0x20
0x593f: je 0x5950
0x5941: add rsp,0x8
0x5945: mov rax,rbx
0x5948: pop rbx
0x5949: pop rbp
0x594a: ret 
0x594b: nop dword ptr [rax+rax*1+0x0]
0x5950: sub rax,0x1
0x5954: mov byte ptr [rax],0x0
0x5957: cmp rbx,rax
0x595a: jne 0x593b
0x595c: jmp 0x5941
0x595e: xchg ax,ax
0x5a36: nop word ptr cs:[rax+rax*1+0x0]
0x5a55: xor esi,esi
0x5a57: call 0x18f0
0x5a5c: test eax,eax
0x5a5e: jns 0x59ba
0x5a64: call 0x1720
0x5a69: cmp dword ptr [rax],0x3
0x5a6c: je 0x5996
0x5a72: cmp rbp,rbx
0x5a75: jne 0x59c3
0x5a7b: nop dword ptr [rax+rax*1+0x0]
0x5ae9: nop dword ptr [rax+0x0]
0x5af0: push r12
0x5af2: push rbp
0x5af3: mov rbp,rdi
0x5af6: push rbx
0x5af7: call 0x1760
0x5afc: mov ebx,dword ptr [rbp+0x0]
0x5aff: mov rdi,rbp
0x5b02: mov r12,rax
0x5b05: call 0x5750
0x5b0a: and ebx,0x20
0x5b0d: test ebx,ebx
0x5b0f: jne 0x5b28
0x5b11: test eax,eax
0x5b13: je 0x5b1f
0x5b15: test r12,r12
0x5b18: mov eax,0xffffffff
0x5b1d: je 0x5b58
0x5b1f: pop rbx
0x5b20: pop rbp
0x5b21: pop r12
0x5b23: ret 
0x5b24: nop dword ptr [rax+0x0]
0x5b28: test eax,eax
0x5b2a: jne 0x5b48
0x5b2c: call 0x1720
0x5b31: mov dword ptr [rax],0x0
0x5b37: mov eax,0xffffffff
0x5b3c: pop rbx
0x5b3d: pop rbp
0x5b3e: pop r12
0x5b40: ret 
0x5b41: nop dword ptr [rax+0x0]
0x5b48: pop rbx
0x5b49: mov eax,0xffffffff
0x5b4e: pop rbp
0x5b4f: pop r12
0x5b51: ret 
0x5b52: nop word ptr [rax+rax*1+0x0]
0x5b58: call 0x1720
0x5b5d: cmp dword ptr [rax],0x9
0x5b60: pop rbx
0x5b61: pop rbp
0x5b62: pop r12
0x5b64: setne al
0x5b67: movzx eax,al
0x5b6a: neg eax
0x5b6c: ret 
0x5b6d: nop dword ptr [rax]
0x5b70: sub rsp,0x8
0x5b74: mov edi,0xe
0x5b79: call 0x1950
0x5b7e: test rax,rax
0x5b81: je 0x5ba0
0x5b83: cmp byte ptr [rax],0x0
0x5b86: lea rdx,[rip+0x1013]
0x5b8d: cmove rax,rdx
0x5b91: add rsp,0x8
0x5b95: ret 
0x5b96: nop word ptr cs:[rax+rax*1+0x0]
0x5ba0: lea rax,[rip+0xff9]
0x5ba7: add rsp,0x8
0x5bab: ret 
0x5bac: nop dword ptr [rax+0x0]
0x5bb0: push r15
0x5bb2: push r14
0x5bb4: mov r15,rdx
0x5bb7: push r13
0x5bb9: push r12
0x5bbb: lea r12,[rip+0x201f4e]
0x5bc2: push rbp
0x5bc3: lea rbp,[rip+0x201f4e]
0x5bca: push rbx
0x5bcb: mov r13d,edi
0x5bce: mov r14,rsi
0x5bd1: sub rbp,r12
0x5bd4: sub rsp,0x8
0x5bd8: sar rbp,0x3
0x5bdc: call 0x16a0
0x5be1: test rbp,rbp
0x5be4: je 0x5c06
0x5be6: xor ebx,ebx
0x5be8: nop dword ptr [rax+rax*1+0x0]
0x5bf0: mov rdx,r15
0x5bf3: mov rsi,r14
0x5bf6: mov edi,r13d
0x5bf9: call qword ptr [r12+rbx*8]
0x5bfd: add rbx,0x1
0x5c01: cmp rbp,rbx
0x5c04: jne 0x5bf0
0x5c06: add rsp,0x8
0x5c0a: pop rbx
0x5c0b: pop rbp
0x5c0c: pop r12
0x5c0e: pop r13
0x5c10: pop r14
0x5c12: pop r15
0x5c14: ret 
0x5c15: nop 
0x5c16: nop word ptr cs:[rax+rax*1+0x0]
0x5c20: repz ret 
0x5c22: nop word ptr cs:[rax+rax*1+0x0]
0x5c2c: nop dword ptr [rax+0x0]
0x5c40: sub rsp,0x8
0x5c44: add rsp,0x8
0x5c48: ret 
4220
1820
68
