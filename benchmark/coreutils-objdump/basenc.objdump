


Disassembly of section .init:

0000000000001568 <_init>:
1568:	48 83 ec 08          	sub    rsp,0x8
156c:	48 8b 05 6d 9a 20 00 	mov    rax,QWORD PTR [rip+0x209a6d]        # 20afe0 <__gmon_start__>
1573:	48 85 c0             	test   rax,rax
1576:	74 02                	je     157a <_init+0x12>
1578:	ff d0                	call   rax
157a:	48 83 c4 08          	add    rsp,0x8
157e:	c3                   	ret

Disassembly of section .plt:

0000000000001580 <.plt>:
1580:	ff 35 aa 98 20 00    	push   QWORD PTR [rip+0x2098aa]        # 20ae30 <_GLOBAL_OFFSET_TABLE_+0x8>
1586:	ff 25 ac 98 20 00    	jmp    QWORD PTR [rip+0x2098ac]        # 20ae38 <_GLOBAL_OFFSET_TABLE_+0x10>
158c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001590 <free@plt>:
1590:	ff 25 aa 98 20 00    	jmp    QWORD PTR [rip+0x2098aa]        # 20ae40 <free@GLIBC_2.2.5>
1596:	68 00 00 00 00       	push   0x0
159b:	e9 e0 ff ff ff       	jmp    1580 <.plt>

00000000000015a0 <abort@plt>:
15a0:	ff 25 a2 98 20 00    	jmp    QWORD PTR [rip+0x2098a2]        # 20ae48 <abort@GLIBC_2.2.5>
15a6:	68 01 00 00 00       	push   0x1
15ab:	e9 d0 ff ff ff       	jmp    1580 <.plt>

00000000000015b0 <__errno_location@plt>:
15b0:	ff 25 9a 98 20 00    	jmp    QWORD PTR [rip+0x20989a]        # 20ae50 <__errno_location@GLIBC_2.2.5>
15b6:	68 02 00 00 00       	push   0x2
15bb:	e9 c0 ff ff ff       	jmp    1580 <.plt>

00000000000015c0 <strncmp@plt>:
15c0:	ff 25 92 98 20 00    	jmp    QWORD PTR [rip+0x209892]        # 20ae58 <strncmp@GLIBC_2.2.5>
15c6:	68 03 00 00 00       	push   0x3
15cb:	e9 b0 ff ff ff       	jmp    1580 <.plt>

00000000000015d0 <_exit@plt>:
15d0:	ff 25 8a 98 20 00    	jmp    QWORD PTR [rip+0x20988a]        # 20ae60 <_exit@GLIBC_2.2.5>
15d6:	68 04 00 00 00       	push   0x4
15db:	e9 a0 ff ff ff       	jmp    1580 <.plt>

00000000000015e0 <__fpending@plt>:
15e0:	ff 25 82 98 20 00    	jmp    QWORD PTR [rip+0x209882]        # 20ae68 <__fpending@GLIBC_2.2.5>
15e6:	68 05 00 00 00       	push   0x5
15eb:	e9 90 ff ff ff       	jmp    1580 <.plt>

00000000000015f0 <fread_unlocked@plt>:
15f0:	ff 25 7a 98 20 00    	jmp    QWORD PTR [rip+0x20987a]        # 20ae70 <fread_unlocked@GLIBC_2.2.5>
15f6:	68 06 00 00 00       	push   0x6
15fb:	e9 80 ff ff ff       	jmp    1580 <.plt>

0000000000001600 <textdomain@plt>:
1600:	ff 25 72 98 20 00    	jmp    QWORD PTR [rip+0x209872]        # 20ae78 <textdomain@GLIBC_2.2.5>
1606:	68 07 00 00 00       	push   0x7
160b:	e9 70 ff ff ff       	jmp    1580 <.plt>

0000000000001610 <fclose@plt>:
1610:	ff 25 6a 98 20 00    	jmp    QWORD PTR [rip+0x20986a]        # 20ae80 <fclose@GLIBC_2.2.5>
1616:	68 08 00 00 00       	push   0x8
161b:	e9 60 ff ff ff       	jmp    1580 <.plt>

0000000000001620 <bindtextdomain@plt>:
1620:	ff 25 62 98 20 00    	jmp    QWORD PTR [rip+0x209862]        # 20ae88 <bindtextdomain@GLIBC_2.2.5>
1626:	68 09 00 00 00       	push   0x9
162b:	e9 50 ff ff ff       	jmp    1580 <.plt>

0000000000001630 <dcgettext@plt>:
1630:	ff 25 5a 98 20 00    	jmp    QWORD PTR [rip+0x20985a]        # 20ae90 <dcgettext@GLIBC_2.2.5>
1636:	68 0a 00 00 00       	push   0xa
163b:	e9 40 ff ff ff       	jmp    1580 <.plt>

0000000000001640 <__ctype_get_mb_cur_max@plt>:
1640:	ff 25 52 98 20 00    	jmp    QWORD PTR [rip+0x209852]        # 20ae98 <__ctype_get_mb_cur_max@GLIBC_2.2.5>
1646:	68 0b 00 00 00       	push   0xb
164b:	e9 30 ff ff ff       	jmp    1580 <.plt>

0000000000001650 <strlen@plt>:
1650:	ff 25 4a 98 20 00    	jmp    QWORD PTR [rip+0x20984a]        # 20aea0 <strlen@GLIBC_2.2.5>
1656:	68 0c 00 00 00       	push   0xc
165b:	e9 20 ff ff ff       	jmp    1580 <.plt>

0000000000001660 <__stack_chk_fail@plt>:
1660:	ff 25 42 98 20 00    	jmp    QWORD PTR [rip+0x209842]        # 20aea8 <__stack_chk_fail@GLIBC_2.4>
1666:	68 0d 00 00 00       	push   0xd
166b:	e9 10 ff ff ff       	jmp    1580 <.plt>

0000000000001670 <getopt_long@plt>:
1670:	ff 25 3a 98 20 00    	jmp    QWORD PTR [rip+0x20983a]        # 20aeb0 <getopt_long@GLIBC_2.2.5>
1676:	68 0e 00 00 00       	push   0xe
167b:	e9 00 ff ff ff       	jmp    1580 <.plt>

0000000000001680 <mbrtowc@plt>:
1680:	ff 25 32 98 20 00    	jmp    QWORD PTR [rip+0x209832]        # 20aeb8 <mbrtowc@GLIBC_2.2.5>
1686:	68 0f 00 00 00       	push   0xf
168b:	e9 f0 fe ff ff       	jmp    1580 <.plt>

0000000000001690 <strchr@plt>:
1690:	ff 25 2a 98 20 00    	jmp    QWORD PTR [rip+0x20982a]        # 20aec0 <strchr@GLIBC_2.2.5>
1696:	68 10 00 00 00       	push   0x10
169b:	e9 e0 fe ff ff       	jmp    1580 <.plt>

00000000000016a0 <__overflow@plt>:
16a0:	ff 25 22 98 20 00    	jmp    QWORD PTR [rip+0x209822]        # 20aec8 <__overflow@GLIBC_2.2.5>
16a6:	68 11 00 00 00       	push   0x11
16ab:	e9 d0 fe ff ff       	jmp    1580 <.plt>

00000000000016b0 <strrchr@plt>:
16b0:	ff 25 1a 98 20 00    	jmp    QWORD PTR [rip+0x20981a]        # 20aed0 <strrchr@GLIBC_2.2.5>
16b6:	68 12 00 00 00       	push   0x12
16bb:	e9 c0 fe ff ff       	jmp    1580 <.plt>

00000000000016c0 <lseek@plt>:
16c0:	ff 25 12 98 20 00    	jmp    QWORD PTR [rip+0x209812]        # 20aed8 <lseek@GLIBC_2.2.5>
16c6:	68 13 00 00 00       	push   0x13
16cb:	e9 b0 fe ff ff       	jmp    1580 <.plt>

00000000000016d0 <__assert_fail@plt>:
16d0:	ff 25 0a 98 20 00    	jmp    QWORD PTR [rip+0x20980a]        # 20aee0 <__assert_fail@GLIBC_2.2.5>
16d6:	68 14 00 00 00       	push   0x14
16db:	e9 a0 fe ff ff       	jmp    1580 <.plt>

00000000000016e0 <__strtoul_internal@plt>:
16e0:	ff 25 02 98 20 00    	jmp    QWORD PTR [rip+0x209802]        # 20aee8 <__strtoul_internal@GLIBC_2.2.5>
16e6:	68 15 00 00 00       	push   0x15
16eb:	e9 90 fe ff ff       	jmp    1580 <.plt>

00000000000016f0 <memset@plt>:
16f0:	ff 25 fa 97 20 00    	jmp    QWORD PTR [rip+0x2097fa]        # 20aef0 <memset@GLIBC_2.2.5>
16f6:	68 16 00 00 00       	push   0x16
16fb:	e9 80 fe ff ff       	jmp    1580 <.plt>

0000000000001700 <posix_fadvise@plt>:
1700:	ff 25 f2 97 20 00    	jmp    QWORD PTR [rip+0x2097f2]        # 20aef8 <posix_fadvise@GLIBC_2.2.5>
1706:	68 17 00 00 00       	push   0x17
170b:	e9 70 fe ff ff       	jmp    1580 <.plt>

0000000000001710 <memchr@plt>:
1710:	ff 25 ea 97 20 00    	jmp    QWORD PTR [rip+0x2097ea]        # 20af00 <memchr@GLIBC_2.2.5>
1716:	68 18 00 00 00       	push   0x18
171b:	e9 60 fe ff ff       	jmp    1580 <.plt>

0000000000001720 <memcmp@plt>:
1720:	ff 25 e2 97 20 00    	jmp    QWORD PTR [rip+0x2097e2]        # 20af08 <memcmp@GLIBC_2.2.5>
1726:	68 19 00 00 00       	push   0x19
172b:	e9 50 fe ff ff       	jmp    1580 <.plt>

0000000000001730 <fputs_unlocked@plt>:
1730:	ff 25 da 97 20 00    	jmp    QWORD PTR [rip+0x2097da]        # 20af10 <fputs_unlocked@GLIBC_2.2.5>
1736:	68 1a 00 00 00       	push   0x1a
173b:	e9 40 fe ff ff       	jmp    1580 <.plt>

0000000000001740 <calloc@plt>:
1740:	ff 25 d2 97 20 00    	jmp    QWORD PTR [rip+0x2097d2]        # 20af18 <calloc@GLIBC_2.2.5>
1746:	68 1b 00 00 00       	push   0x1b
174b:	e9 30 fe ff ff       	jmp    1580 <.plt>

0000000000001750 <strcmp@plt>:
1750:	ff 25 ca 97 20 00    	jmp    QWORD PTR [rip+0x2097ca]        # 20af20 <strcmp@GLIBC_2.2.5>
1756:	68 1c 00 00 00       	push   0x1c
175b:	e9 20 fe ff ff       	jmp    1580 <.plt>

0000000000001760 <memcpy@plt>:
1760:	ff 25 c2 97 20 00    	jmp    QWORD PTR [rip+0x2097c2]        # 20af28 <memcpy@GLIBC_2.14>
1766:	68 1d 00 00 00       	push   0x1d
176b:	e9 10 fe ff ff       	jmp    1580 <.plt>

0000000000001770 <fileno@plt>:
1770:	ff 25 ba 97 20 00    	jmp    QWORD PTR [rip+0x2097ba]        # 20af30 <fileno@GLIBC_2.2.5>
1776:	68 1e 00 00 00       	push   0x1e
177b:	e9 00 fe ff ff       	jmp    1580 <.plt>

0000000000001780 <malloc@plt>:
1780:	ff 25 b2 97 20 00    	jmp    QWORD PTR [rip+0x2097b2]        # 20af38 <malloc@GLIBC_2.2.5>
1786:	68 1f 00 00 00       	push   0x1f
178b:	e9 f0 fd ff ff       	jmp    1580 <.plt>

0000000000001790 <fflush@plt>:
1790:	ff 25 aa 97 20 00    	jmp    QWORD PTR [rip+0x2097aa]        # 20af40 <fflush@GLIBC_2.2.5>
1796:	68 20 00 00 00       	push   0x20
179b:	e9 e0 fd ff ff       	jmp    1580 <.plt>

00000000000017a0 <nl_langinfo@plt>:
17a0:	ff 25 a2 97 20 00    	jmp    QWORD PTR [rip+0x2097a2]        # 20af48 <nl_langinfo@GLIBC_2.2.5>
17a6:	68 21 00 00 00       	push   0x21
17ab:	e9 d0 fd ff ff       	jmp    1580 <.plt>

00000000000017b0 <__freading@plt>:
17b0:	ff 25 9a 97 20 00    	jmp    QWORD PTR [rip+0x20979a]        # 20af50 <__freading@GLIBC_2.2.5>
17b6:	68 22 00 00 00       	push   0x22
17bb:	e9 c0 fd ff ff       	jmp    1580 <.plt>

00000000000017c0 <fwrite_unlocked@plt>:
17c0:	ff 25 92 97 20 00    	jmp    QWORD PTR [rip+0x209792]        # 20af58 <fwrite_unlocked@GLIBC_2.2.5>
17c6:	68 23 00 00 00       	push   0x23
17cb:	e9 b0 fd ff ff       	jmp    1580 <.plt>

00000000000017d0 <realloc@plt>:
17d0:	ff 25 8a 97 20 00    	jmp    QWORD PTR [rip+0x20978a]        # 20af60 <realloc@GLIBC_2.2.5>
17d6:	68 24 00 00 00       	push   0x24
17db:	e9 a0 fd ff ff       	jmp    1580 <.plt>

00000000000017e0 <setlocale@plt>:
17e0:	ff 25 82 97 20 00    	jmp    QWORD PTR [rip+0x209782]        # 20af68 <setlocale@GLIBC_2.2.5>
17e6:	68 25 00 00 00       	push   0x25
17eb:	e9 90 fd ff ff       	jmp    1580 <.plt>

00000000000017f0 <__printf_chk@plt>:
17f0:	ff 25 7a 97 20 00    	jmp    QWORD PTR [rip+0x20977a]        # 20af70 <__printf_chk@GLIBC_2.3.4>
17f6:	68 26 00 00 00       	push   0x26
17fb:	e9 80 fd ff ff       	jmp    1580 <.plt>

0000000000001800 <memmove@plt>:
1800:	ff 25 72 97 20 00    	jmp    QWORD PTR [rip+0x209772]        # 20af78 <memmove@GLIBC_2.2.5>
1806:	68 27 00 00 00       	push   0x27
180b:	e9 70 fd ff ff       	jmp    1580 <.plt>

0000000000001810 <error@plt>:
1810:	ff 25 6a 97 20 00    	jmp    QWORD PTR [rip+0x20976a]        # 20af80 <error@GLIBC_2.2.5>
1816:	68 28 00 00 00       	push   0x28
181b:	e9 60 fd ff ff       	jmp    1580 <.plt>

0000000000001820 <fseeko@plt>:
1820:	ff 25 62 97 20 00    	jmp    QWORD PTR [rip+0x209762]        # 20af88 <fseeko@GLIBC_2.2.5>
1826:	68 29 00 00 00       	push   0x29
182b:	e9 50 fd ff ff       	jmp    1580 <.plt>

0000000000001830 <fopen@plt>:
1830:	ff 25 5a 97 20 00    	jmp    QWORD PTR [rip+0x20975a]        # 20af90 <fopen@GLIBC_2.2.5>
1836:	68 2a 00 00 00       	push   0x2a
183b:	e9 40 fd ff ff       	jmp    1580 <.plt>

0000000000001840 <__cxa_atexit@plt>:
1840:	ff 25 52 97 20 00    	jmp    QWORD PTR [rip+0x209752]        # 20af98 <__cxa_atexit@GLIBC_2.2.5>
1846:	68 2b 00 00 00       	push   0x2b
184b:	e9 30 fd ff ff       	jmp    1580 <.plt>

0000000000001850 <exit@plt>:
1850:	ff 25 4a 97 20 00    	jmp    QWORD PTR [rip+0x20974a]        # 20afa0 <exit@GLIBC_2.2.5>
1856:	68 2c 00 00 00       	push   0x2c
185b:	e9 20 fd ff ff       	jmp    1580 <.plt>

0000000000001860 <fwrite@plt>:
1860:	ff 25 42 97 20 00    	jmp    QWORD PTR [rip+0x209742]        # 20afa8 <fwrite@GLIBC_2.2.5>
1866:	68 2d 00 00 00       	push   0x2d
186b:	e9 10 fd ff ff       	jmp    1580 <.plt>

0000000000001870 <__fprintf_chk@plt>:
1870:	ff 25 3a 97 20 00    	jmp    QWORD PTR [rip+0x20973a]        # 20afb0 <__fprintf_chk@GLIBC_2.3.4>
1876:	68 2e 00 00 00       	push   0x2e
187b:	e9 00 fd ff ff       	jmp    1580 <.plt>

0000000000001880 <mbsinit@plt>:
1880:	ff 25 32 97 20 00    	jmp    QWORD PTR [rip+0x209732]        # 20afb8 <mbsinit@GLIBC_2.2.5>
1886:	68 2f 00 00 00       	push   0x2f
188b:	e9 f0 fc ff ff       	jmp    1580 <.plt>

0000000000001890 <iswprint@plt>:
1890:	ff 25 2a 97 20 00    	jmp    QWORD PTR [rip+0x20972a]        # 20afc0 <iswprint@GLIBC_2.2.5>
1896:	68 30 00 00 00       	push   0x30
189b:	e9 e0 fc ff ff       	jmp    1580 <.plt>

00000000000018a0 <__ctype_b_loc@plt>:
18a0:	ff 25 22 97 20 00    	jmp    QWORD PTR [rip+0x209722]        # 20afc8 <__ctype_b_loc@GLIBC_2.3>
18a6:	68 31 00 00 00       	push   0x31
18ab:	e9 d0 fc ff ff       	jmp    1580 <.plt>

Disassembly of section .plt.got:

00000000000018b0 <__cxa_finalize@plt>:
18b0:	ff 25 3a 97 20 00    	jmp    QWORD PTR [rip+0x20973a]        # 20aff0 <__cxa_finalize@GLIBC_2.2.5>
18b6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000000018c0 <main>:
18c0:	41 57                	push   r15
18c2:	41 56                	push   r14
18c4:	45 31 f6             	xor    r14d,r14d
18c7:	41 55                	push   r13
18c9:	41 54                	push   r12
18cb:	41 bd 4c 00 00 00    	mov    r13d,0x4c
18d1:	55                   	push   rbp
18d2:	53                   	push   rbx
18d3:	89 fd                	mov    ebp,edi
18d5:	48 89 f3             	mov    rbx,rsi
18d8:	45 31 e4             	xor    r12d,r12d
18db:	48 81 ec 88 00 00 00 	sub    rsp,0x88
18e2:	48 8b 3e             	mov    rdi,QWORD PTR [rsi]
18e5:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
18ec:	00 00
18ee:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
18f3:	31 c0                	xor    eax,eax
18f5:	e8 76 2b 00 00       	call   4470 <set_program_name>
18fa:	48 8d 35 c0 6c 00 00 	lea    rsi,[rip+0x6cc0]        # 85c1 <quoting_style_vals+0x81>
1901:	bf 06 00 00 00       	mov    edi,0x6
1906:	e8 d5 fe ff ff       	call   17e0 <setlocale@plt>
190b:	48 8d 35 0b 5b 00 00 	lea    rsi,[rip+0x5b0b]        # 741d <_IO_stdin_used+0xfd>
1912:	48 8d 3d db 5a 00 00 	lea    rdi,[rip+0x5adb]        # 73f4 <_IO_stdin_used+0xd4>
1919:	e8 02 fd ff ff       	call   1620 <bindtextdomain@plt>
191e:	48 8d 3d cf 5a 00 00 	lea    rdi,[rip+0x5acf]        # 73f4 <_IO_stdin_used+0xd4>
1925:	e8 d6 fc ff ff       	call   1600 <textdomain@plt>
192a:	48 8d 3d 4f 2a 00 00 	lea    rdi,[rip+0x2a4f]        # 4380 <close_stdout>
1931:	e8 ba 59 00 00       	call   72f0 <atexit>
1936:	c6 44 24 20 00       	mov    BYTE PTR [rsp+0x20],0x0
193b:	48 8d 0d de 90 20 00 	lea    rcx,[rip+0x2090de]        # 20aa20 <long_options>
1942:	48 8d 15 1b 5b 00 00 	lea    rdx,[rip+0x5b1b]        # 7464 <_IO_stdin_used+0x144>
1949:	45 31 c0             	xor    r8d,r8d
194c:	48 89 de             	mov    rsi,rbx
194f:	89 ef                	mov    edi,ebp
1951:	e8 1a fd ff ff       	call   1670 <getopt_long@plt>
1956:	83 f8 ff             	cmp    eax,0xffffffff
1959:	0f 84 ee 00 00 00    	je     1a4d <main+0x18d>
195f:	83 f8 69             	cmp    eax,0x69
1962:	0f 84 98 00 00 00    	je     1a00 <main+0x140>
1968:	7f 66                	jg     19d0 <main+0x110>
196a:	3d 7e ff ff ff       	cmp    eax,0xffffff7e
196f:	0f 84 68 09 00 00    	je     22dd <main+0xa1d>
1975:	83 f8 64             	cmp    eax,0x64
1978:	74 76                	je     19f0 <main+0x130>
197a:	3d 7d ff ff ff       	cmp    eax,0xffffff7d
197f:	74 0f                	je     1990 <main+0xd0>
1981:	bf 01 00 00 00       	mov    edi,0x1
1986:	e8 d5 15 00 00       	call   2f60 <usage>
198b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
1990:	48 83 ec 08          	sub    rsp,0x8
1994:	48 8b 3d ed 96 20 00 	mov    rdi,QWORD PTR [rip+0x2096ed]        # 20b088 <stdout@@GLIBC_2.2.5>
199b:	48 8b 0d 6e 96 20 00 	mov    rcx,QWORD PTR [rip+0x20966e]        # 20b010 <Version>
19a2:	6a 00                	push   0x0
19a4:	4c 8d 0d 9c 5a 00 00 	lea    r9,[rip+0x5a9c]        # 7447 <_IO_stdin_used+0x127>
19ab:	4c 8d 05 a2 5a 00 00 	lea    r8,[rip+0x5aa2]        # 7454 <_IO_stdin_used+0x134>
19b2:	48 8d 15 37 5a 00 00 	lea    rdx,[rip+0x5a37]        # 73f0 <_IO_stdin_used+0xd0>
19b9:	48 8d 35 95 59 00 00 	lea    rsi,[rip+0x5995]        # 7355 <_IO_stdin_used+0x35>
19c0:	31 c0                	xor    eax,eax
19c2:	e8 99 4c 00 00       	call   6660 <version_etc>
19c7:	31 ff                	xor    edi,edi
19c9:	e8 82 fe ff ff       	call   1850 <exit@plt>
19ce:	66 90                	xchg   ax,ax
19d0:	83 f8 77             	cmp    eax,0x77
19d3:	74 3b                	je     1a10 <main+0x150>
19d5:	7c aa                	jl     1981 <main+0xc1>
19d7:	8d 50 80             	lea    edx,[rax-0x80]
19da:	83 fa 07             	cmp    edx,0x7
19dd:	77 a2                	ja     1981 <main+0xc1>
19df:	41 89 c6             	mov    r14d,eax
19e2:	e9 54 ff ff ff       	jmp    193b <main+0x7b>
19e7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
19ee:	00 00
19f0:	41 bc 01 00 00 00    	mov    r12d,0x1
19f6:	e9 40 ff ff ff       	jmp    193b <main+0x7b>
19fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
1a00:	c6 44 24 20 01       	mov    BYTE PTR [rsp+0x20],0x1
1a05:	e9 31 ff ff ff       	jmp    193b <main+0x7b>
1a0a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
1a10:	48 8d 35 1e 5a 00 00 	lea    rsi,[rip+0x5a1e]        # 7435 <_IO_stdin_used+0x115>
1a17:	ba 05 00 00 00       	mov    edx,0x5
1a1c:	31 ff                	xor    edi,edi
1a1e:	e8 0d fc ff ff       	call   1630 <dcgettext@plt>
1a23:	48 8b 3d 76 96 20 00 	mov    rdi,QWORD PTR [rip+0x209676]        # 20b0a0 <optarg@@GLIBC_2.2.5>
1a2a:	48 8d 0d 90 6b 00 00 	lea    rcx,[rip+0x6b90]        # 85c1 <quoting_style_vals+0x81>
1a31:	49 89 c0             	mov    r8,rax
1a34:	45 31 c9             	xor    r9d,r9d
1a37:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
1a3e:	31 f6                	xor    esi,esi
1a40:	e8 0b 51 00 00       	call   6b50 <xdectoumax>
1a45:	49 89 c5             	mov    r13,rax
1a48:	e9 ee fe ff ff       	jmp    193b <main+0x7b>
1a4d:	41 83 c6 80          	add    r14d,0xffffff80
1a51:	41 83 fe 07          	cmp    r14d,0x7
1a55:	0f 87 89 08 00 00    	ja     22e4 <main+0xa24>
1a5b:	48 8d 15 de 61 00 00 	lea    rdx,[rip+0x61de]        # 7c40 <_IO_stdin_used+0x920>
1a62:	4a 63 04 b2          	movsxd rax,DWORD PTR [rdx+r14*4]
1a66:	48 01 d0             	add    rax,rdx
1a69:	ff e0                	jmp    rax
1a6b:	48 8d 05 7e 0b 00 00 	lea    rax,[rip+0xb7e]        # 25f0 <base2_length>
1a72:	48 89 05 77 96 20 00 	mov    QWORD PTR [rip+0x209677],rax        # 20b0f0 <base_length>
1a79:	48 8d 05 60 0b 00 00 	lea    rax,[rip+0xb60]        # 25e0 <isbase2>
1a80:	48 89 05 61 96 20 00 	mov    QWORD PTR [rip+0x209661],rax        # 20b0e8 <isbase>
1a87:	48 8d 05 c2 0b 00 00 	lea    rax,[rip+0xbc2]        # 2650 <base2lsbf_encode>
1a8e:	48 89 05 4b 96 20 00 	mov    QWORD PTR [rip+0x20964b],rax        # 20b0e0 <base_encode>
1a95:	48 8d 05 b4 0c 00 00 	lea    rax,[rip+0xcb4]        # 2750 <base2_decode_ctx_init>
1a9c:	48 89 05 35 96 20 00 	mov    QWORD PTR [rip+0x209635],rax        # 20b0d8 <base_decode_ctx_init>
1aa3:	48 8d 05 e6 0f 00 00 	lea    rax,[rip+0xfe6]        # 2a90 <base2lsbf_decode_ctx>
1aaa:	48 89 05 1f 96 20 00 	mov    QWORD PTR [rip+0x20961f],rax        # 20b0d0 <base_decode_ctx>
1ab1:	48 63 05 e0 95 20 00 	movsxd rax,DWORD PTR [rip+0x2095e0]        # 20b098 <optind@@GLIBC_2.2.5>
1ab8:	89 ea                	mov    edx,ebp
1aba:	29 c2                	sub    edx,eax
1abc:	83 ea 01             	sub    edx,0x1
1abf:	0f 8f a2 08 00 00    	jg     2367 <main+0xaa7>
1ac5:	39 e8                	cmp    eax,ebp
1ac7:	0f 8d a6 04 00 00    	jge    1f73 <main+0x6b3>
1acd:	48 8b 04 c3          	mov    rax,QWORD PTR [rbx+rax*8]
1ad1:	48 8d 35 b2 65 00 00 	lea    rsi,[rip+0x65b2]        # 808a <b64c+0x8a>
1ad8:	48 89 c7             	mov    rdi,rax
1adb:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
1ae0:	e8 6b fc ff ff       	call   1750 <strcmp@plt>
1ae5:	85 c0                	test   eax,eax
1ae7:	0f 84 92 04 00 00    	je     1f7f <main+0x6bf>
1aed:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
1af2:	48 8d 35 97 59 00 00 	lea    rsi,[rip+0x5997]        # 7490 <_IO_stdin_used+0x170>
1af9:	e8 32 fd ff ff       	call   1830 <fopen@plt>
1afe:	48 85 c0             	test   rax,rax
1b01:	48 89 c5             	mov    rbp,rax
1b04:	0f 84 2c 08 00 00    	je     2336 <main+0xa76>
1b0a:	be 02 00 00 00       	mov    esi,0x2
1b0f:	48 89 ef             	mov    rdi,rbp
1b12:	e8 29 29 00 00       	call   4440 <fadvise>
1b17:	45 84 e4             	test   r12b,r12b
1b1a:	0f 84 6b 04 00 00    	je     1f8b <main+0x6cb>
1b20:	48 8b 05 61 95 20 00 	mov    rax,QWORD PTR [rip+0x209561]        # 20b088 <stdout@@GLIBC_2.2.5>
1b27:	bf 00 14 00 00       	mov    edi,0x1400
1b2c:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
1b31:	ff 15 b9 95 20 00    	call   QWORD PTR [rip+0x2095b9]        # 20b0f0 <base_length>
1b37:	48 63 f8             	movsxd rdi,eax
1b3a:	e8 81 4c 00 00       	call   67c0 <xmalloc>
1b3f:	bf 00 14 00 00       	mov    edi,0x1400
1b44:	49 89 c4             	mov    r12,rax
1b47:	e8 74 4c 00 00       	call   67c0 <xmalloc>
1b4c:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
1b51:	48 8d 44 24 50       	lea    rax,[rsp+0x50]
1b56:	48 c7 44 24 60 00 00 	mov    QWORD PTR [rsp+0x60],0x0
1b5d:	00 00
1b5f:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
1b64:	48 89 c7             	mov    rdi,rax
1b67:	ff 15 6b 95 20 00    	call   QWORD PTR [rip+0x20956b]        # 20b0d8 <base_decode_ctx_init>
1b6d:	48 8d 44 24 48       	lea    rax,[rsp+0x48]
1b72:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
1b77:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
1b7e:	00 00
1b80:	31 db                	xor    ebx,ebx
1b82:	48 89 6c 24 08       	mov    QWORD PTR [rsp+0x8],rbp
1b87:	eb 3d                	jmp    1bc6 <main+0x306>
1b89:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
1b90:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
1b95:	4c 01 eb             	add    rbx,r13
1b98:	f6 00 20             	test   BYTE PTR [rax],0x20
1b9b:	0f 85 10 07 00 00    	jne    22b1 <main+0x9f1>
1ba1:	bf 00 14 00 00       	mov    edi,0x1400
1ba6:	ff 15 44 95 20 00    	call   QWORD PTR [rip+0x209544]        # 20b0f0 <base_length>
1bac:	48 98                	cdqe
1bae:	48 39 c3             	cmp    rbx,rax
1bb1:	0f 83 c9 02 00 00    	jae    1e80 <main+0x5c0>
1bb7:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
1bbc:	8b 00                	mov    eax,DWORD PTR [rax]
1bbe:	a8 10                	test   al,0x10
1bc0:	0f 85 6a 03 00 00    	jne    1f30 <main+0x670>
1bc6:	bf 00 14 00 00       	mov    edi,0x1400
1bcb:	ff 15 1f 95 20 00    	call   QWORD PTR [rip+0x20951f]        # 20b0f0 <base_length>
1bd1:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
1bd6:	48 63 d0             	movsxd rdx,eax
1bd9:	49 8d 3c 1c          	lea    rdi,[r12+rbx*1]
1bdd:	48 29 da             	sub    rdx,rbx
1be0:	be 01 00 00 00       	mov    esi,0x1
1be5:	e8 06 fa ff ff       	call   15f0 <fread_unlocked@plt>
1bea:	80 7c 24 20 00       	cmp    BYTE PTR [rsp+0x20],0x0
1bef:	49 89 c5             	mov    r13,rax
1bf2:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
1bf7:	74 97                	je     1b90 <main+0x2d0>
1bf9:	45 31 f6             	xor    r14d,r14d
1bfc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
1c00:	4d 85 ed             	test   r13,r13
1c03:	74 8b                	je     1b90 <main+0x2d0>
1c05:	4d 39 ee             	cmp    r14,r13
1c08:	73 86                	jae    1b90 <main+0x2d0>
1c0a:	4a 8d 2c 33          	lea    rbp,[rbx+r14*1]
1c0e:	4d 8d 3c 2c          	lea    r15,[r12+rbp*1]
1c12:	41 0f be 3f          	movsx  edi,BYTE PTR [r15]
1c16:	ff 15 cc 94 20 00    	call   QWORD PTR [rip+0x2094cc]        # 20b0e8 <isbase>
1c1c:	84 c0                	test   al,al
1c1e:	4c 8b 6c 24 48       	mov    r13,QWORD PTR [rsp+0x48]
1c23:	0f 85 47 02 00 00    	jne    1e70 <main+0x5b0>
1c29:	41 80 3f 3d          	cmp    BYTE PTR [r15],0x3d
1c2d:	0f 84 3d 02 00 00    	je     1e70 <main+0x5b0>
1c33:	49 83 ed 01          	sub    r13,0x1
1c37:	49 8d 74 2c 01       	lea    rsi,[r12+rbp*1+0x1]
1c3c:	4c 89 ff             	mov    rdi,r15
1c3f:	4c 89 ea             	mov    rdx,r13
1c42:	4c 89 6c 24 48       	mov    QWORD PTR [rsp+0x48],r13
1c47:	4c 29 f2             	sub    rdx,r14
1c4a:	e8 b1 fb ff ff       	call   1800 <memmove@plt>
1c4f:	4d 85 ed             	test   r13,r13
1c52:	75 b1                	jne    1c05 <main+0x345>
1c54:	e9 37 ff ff ff       	jmp    1b90 <main+0x2d0>
1c59:	48 8d 05 90 09 00 00 	lea    rax,[rip+0x990]        # 25f0 <base2_length>
1c60:	48 89 05 89 94 20 00 	mov    QWORD PTR [rip+0x209489],rax        # 20b0f0 <base_length>
1c67:	48 8d 05 72 09 00 00 	lea    rax,[rip+0x972]        # 25e0 <isbase2>
1c6e:	48 89 05 73 94 20 00 	mov    QWORD PTR [rip+0x209473],rax        # 20b0e8 <isbase>
1c75:	48 8d 05 84 09 00 00 	lea    rax,[rip+0x984]        # 2600 <base2msbf_encode>
1c7c:	48 89 05 5d 94 20 00 	mov    QWORD PTR [rip+0x20945d],rax        # 20b0e0 <base_encode>
1c83:	48 8d 05 c6 0a 00 00 	lea    rax,[rip+0xac6]        # 2750 <base2_decode_ctx_init>
1c8a:	48 89 05 47 94 20 00 	mov    QWORD PTR [rip+0x209447],rax        # 20b0d8 <base_decode_ctx_init>
1c91:	48 8d 05 88 0e 00 00 	lea    rax,[rip+0xe88]        # 2b20 <base2msbf_decode_ctx>
1c98:	48 89 05 31 94 20 00 	mov    QWORD PTR [rip+0x209431],rax        # 20b0d0 <base_decode_ctx>
1c9f:	e9 0d fe ff ff       	jmp    1ab1 <main+0x1f1>
1ca4:	48 8d 05 55 08 00 00 	lea    rax,[rip+0x855]        # 2500 <base64_length_wrapper>
1cab:	48 89 05 3e 94 20 00 	mov    QWORD PTR [rip+0x20943e],rax        # 20b0f0 <base_length>
1cb2:	48 8d 05 e7 09 00 00 	lea    rax,[rip+0x9e7]        # 26a0 <isbase64url>
1cb9:	48 89 05 28 94 20 00 	mov    QWORD PTR [rip+0x209428],rax        # 20b0e8 <isbase>
1cc0:	48 8d 05 09 0a 00 00 	lea    rax,[rip+0xa09]        # 26d0 <base64url_encode>
1cc7:	48 89 05 12 94 20 00 	mov    QWORD PTR [rip+0x209412],rax        # 20b0e0 <base_encode>
1cce:	48 8d 05 ab 0b 00 00 	lea    rax,[rip+0xbab]        # 2880 <base64url_decode_ctx_init_wrapper>
1cd5:	48 89 05 fc 93 20 00 	mov    QWORD PTR [rip+0x2093fc],rax        # 20b0d8 <base_decode_ctx_init>
1cdc:	48 8d 05 ad 10 00 00 	lea    rax,[rip+0x10ad]        # 2d90 <base64url_decode_ctx_wrapper>
1ce3:	48 89 05 e6 93 20 00 	mov    QWORD PTR [rip+0x2093e6],rax        # 20b0d0 <base_decode_ctx>
1cea:	e9 c2 fd ff ff       	jmp    1ab1 <main+0x1f1>
1cef:	48 8d 05 0a 08 00 00 	lea    rax,[rip+0x80a]        # 2500 <base64_length_wrapper>
1cf6:	48 89 05 f3 93 20 00 	mov    QWORD PTR [rip+0x2093f3],rax        # 20b0f0 <base_length>
1cfd:	48 8d 05 bc 22 00 00 	lea    rax,[rip+0x22bc]        # 3fc0 <isbase64>
1d04:	48 89 05 dd 93 20 00 	mov    QWORD PTR [rip+0x2093dd],rax        # 20b0e8 <isbase>
1d0b:	48 8d 05 5e 20 00 00 	lea    rax,[rip+0x205e]        # 3d70 <base64_encode>
1d12:	48 89 05 c7 93 20 00 	mov    QWORD PTR [rip+0x2093c7],rax        # 20b0e0 <base_encode>
1d19:	48 8d 05 90 0b 00 00 	lea    rax,[rip+0xb90]        # 28b0 <base64_decode_ctx_init_wrapper>
1d20:	48 89 05 b1 93 20 00 	mov    QWORD PTR [rip+0x2093b1],rax        # 20b0d8 <base_decode_ctx_init>
1d27:	48 8d 05 32 0b 00 00 	lea    rax,[rip+0xb32]        # 2860 <base64_decode_ctx_wrapper>
1d2e:	48 89 05 9b 93 20 00 	mov    QWORD PTR [rip+0x20939b],rax        # 20b0d0 <base_decode_ctx>
1d35:	e9 77 fd ff ff       	jmp    1ab1 <main+0x1f1>
1d3a:	48 8d 05 8f 08 00 00 	lea    rax,[rip+0x88f]        # 25d0 <z85_length>
1d41:	48 89 05 a8 93 20 00 	mov    QWORD PTR [rip+0x2093a8],rax        # 20b0f0 <base_length>
1d48:	48 8d 05 61 0a 00 00 	lea    rax,[rip+0xa61]        # 27b0 <isz85>
1d4f:	48 89 05 92 93 20 00 	mov    QWORD PTR [rip+0x209392],rax        # 20b0e8 <isbase>
1d56:	48 8d 05 73 0e 00 00 	lea    rax,[rip+0xe73]        # 2bd0 <z85_encode>
1d5d:	48 89 05 7c 93 20 00 	mov    QWORD PTR [rip+0x20937c],rax        # 20b0e0 <base_encode>
1d64:	48 8d 05 b5 09 00 00 	lea    rax,[rip+0x9b5]        # 2720 <z85_decode_ctx_init>
1d6b:	48 89 05 66 93 20 00 	mov    QWORD PTR [rip+0x209366],rax        # 20b0d8 <base_decode_ctx_init>
1d72:	48 8d 05 f7 0b 00 00 	lea    rax,[rip+0xbf7]        # 2970 <z85_decode_ctx>
1d79:	48 89 05 50 93 20 00 	mov    QWORD PTR [rip+0x209350],rax        # 20b0d0 <base_decode_ctx>
1d80:	e9 2c fd ff ff       	jmp    1ab1 <main+0x1f1>
1d85:	48 8d 05 94 07 00 00 	lea    rax,[rip+0x794]        # 2520 <base32_length_wrapper>
1d8c:	48 89 05 5d 93 20 00 	mov    QWORD PTR [rip+0x20935d],rax        # 20b0f0 <base_length>
1d93:	48 8d 05 a6 07 00 00 	lea    rax,[rip+0x7a6]        # 2540 <isbase32hex>
1d9a:	48 89 05 47 93 20 00 	mov    QWORD PTR [rip+0x209347],rax        # 20b0e8 <isbase>
1da1:	48 8d 05 68 0f 00 00 	lea    rax,[rip+0xf68]        # 2d10 <base32hex_encode>
1da8:	48 89 05 31 93 20 00 	mov    QWORD PTR [rip+0x209331],rax        # 20b0e0 <base_encode>
1daf:	48 8d 05 6a 0a 00 00 	lea    rax,[rip+0xa6a]        # 2820 <base32hex_decode_ctx_init_wrapper>
1db6:	48 89 05 1b 93 20 00 	mov    QWORD PTR [rip+0x20931b],rax        # 20b0d8 <base_decode_ctx_init>
1dbd:	48 8d 05 bc 10 00 00 	lea    rax,[rip+0x10bc]        # 2e80 <base32hex_decode_ctx_wrapper>
1dc4:	48 89 05 05 93 20 00 	mov    QWORD PTR [rip+0x209305],rax        # 20b0d0 <base_decode_ctx>
1dcb:	e9 e1 fc ff ff       	jmp    1ab1 <main+0x1f1>
1dd0:	48 8d 05 49 07 00 00 	lea    rax,[rip+0x749]        # 2520 <base32_length_wrapper>
1dd7:	48 89 05 12 93 20 00 	mov    QWORD PTR [rip+0x209312],rax        # 20b0f0 <base_length>
1dde:	48 8d 05 db 1a 00 00 	lea    rax,[rip+0x1adb]        # 38c0 <isbase32>
1de5:	48 89 05 fc 92 20 00 	mov    QWORD PTR [rip+0x2092fc],rax        # 20b0e8 <isbase>
1dec:	48 8d 05 1d 18 00 00 	lea    rax,[rip+0x181d]        # 3610 <base32_encode>
1df3:	48 89 05 e6 92 20 00 	mov    QWORD PTR [rip+0x2092e6],rax        # 20b0e0 <base_encode>
1dfa:	48 8d 05 4f 0a 00 00 	lea    rax,[rip+0xa4f]        # 2850 <base32_decode_ctx_init_wrapper>
1e01:	48 89 05 d0 92 20 00 	mov    QWORD PTR [rip+0x2092d0],rax        # 20b0d8 <base_decode_ctx_init>
1e08:	48 8d 05 f1 09 00 00 	lea    rax,[rip+0x9f1]        # 2800 <base32_decode_ctx_wrapper>
1e0f:	48 89 05 ba 92 20 00 	mov    QWORD PTR [rip+0x2092ba],rax        # 20b0d0 <base_decode_ctx>
1e16:	e9 96 fc ff ff       	jmp    1ab1 <main+0x1f1>
1e1b:	48 8d 05 5e 07 00 00 	lea    rax,[rip+0x75e]        # 2580 <base16_length>
1e22:	48 89 05 c7 92 20 00 	mov    QWORD PTR [rip+0x2092c7],rax        # 20b0f0 <base_length>
1e29:	48 8d 05 30 07 00 00 	lea    rax,[rip+0x730]        # 2560 <isbase16>
1e30:	48 89 05 b1 92 20 00 	mov    QWORD PTR [rip+0x2092b1],rax        # 20b0e8 <isbase>
1e37:	48 8d 05 52 07 00 00 	lea    rax,[rip+0x752]        # 2590 <base16_encode>
1e3e:	48 89 05 9b 92 20 00 	mov    QWORD PTR [rip+0x20929b],rax        # 20b0e0 <base_encode>
1e45:	48 8d 05 34 09 00 00 	lea    rax,[rip+0x934]        # 2780 <base16_decode_ctx_init>
1e4c:	48 89 05 85 92 20 00 	mov    QWORD PTR [rip+0x209285],rax        # 20b0d8 <base_decode_ctx_init>
1e53:	48 8d 05 66 0a 00 00 	lea    rax,[rip+0xa66]        # 28c0 <base16_decode_ctx>
1e5a:	48 89 05 6f 92 20 00 	mov    QWORD PTR [rip+0x20926f],rax        # 20b0d0 <base_decode_ctx>
1e61:	e9 4b fc ff ff       	jmp    1ab1 <main+0x1f1>
1e66:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
1e6d:	00 00 00
1e70:	49 83 c6 01          	add    r14,0x1
1e74:	e9 87 fd ff ff       	jmp    1c00 <main+0x340>
1e79:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
1e80:	48 8b 6c 24 08       	mov    rbp,QWORD PTR [rsp+0x8]
1e85:	8b 45 00             	mov    eax,DWORD PTR [rbp+0x0]
1e88:	45 31 ff             	xor    r15d,r15d
1e8b:	48 89 5c 24 08       	mov    QWORD PTR [rsp+0x8],rbx
1e90:	4c 8b 6c 24 30       	mov    r13,QWORD PTR [rsp+0x30]
1e95:	44 89 fb             	mov    ebx,r15d
1e98:	4c 8b 7c 24 28       	mov    r15,QWORD PTR [rsp+0x28]
1e9d:	eb 62                	jmp    1f01 <main+0x641>
1e9f:	90                   	nop
1ea0:	85 db                	test   ebx,ebx
1ea2:	0f 85 d8 fc ff ff    	jne    1b80 <main+0x2c0>
1ea8:	48 8b 05 21 92 20 00 	mov    rax,QWORD PTR [rip+0x209221]        # 20b0d0 <base_decode_ctx>
1eaf:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
1eb4:	48 c7 44 24 48 00 14 	mov    QWORD PTR [rsp+0x48],0x1400
1ebb:	00 00
1ebd:	4c 8b 44 24 18       	mov    r8,QWORD PTR [rsp+0x18]
1ec2:	4c 89 e9             	mov    rcx,r13
1ec5:	4c 89 e6             	mov    rsi,r12
1ec8:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
1ecd:	ff d0                	call   rax
1ecf:	48 8b 54 24 48       	mov    rdx,QWORD PTR [rsp+0x48]
1ed4:	4c 89 f9             	mov    rcx,r15
1ed7:	be 01 00 00 00       	mov    esi,0x1
1edc:	4c 89 ef             	mov    rdi,r13
1edf:	41 89 c6             	mov    r14d,eax
1ee2:	e8 d9 f8 ff ff       	call   17c0 <fwrite_unlocked@plt>
1ee7:	48 3b 44 24 48       	cmp    rax,QWORD PTR [rsp+0x48]
1eec:	0f 82 93 03 00 00    	jb     2285 <main+0x9c5>
1ef2:	45 84 f6             	test   r14b,r14b
1ef5:	0f 84 66 03 00 00    	je     2261 <main+0x9a1>
1efb:	8b 45 00             	mov    eax,DWORD PTR [rbp+0x0]
1efe:	83 c3 01             	add    ebx,0x1
1f01:	a8 10                	test   al,0x10
1f03:	74 9b                	je     1ea0 <main+0x5e0>
1f05:	83 fb 01             	cmp    ebx,0x1
1f08:	77 30                	ja     1f3a <main+0x67a>
1f0a:	75 9c                	jne    1ea8 <main+0x5e8>
1f0c:	8b 44 24 50          	mov    eax,DWORD PTR [rsp+0x50]
1f10:	85 c0                	test   eax,eax
1f12:	74 26                	je     1f3a <main+0x67a>
1f14:	48 c7 44 24 48 00 14 	mov    QWORD PTR [rsp+0x48],0x1400
1f1b:	00 00
1f1d:	48 8b 05 ac 91 20 00 	mov    rax,QWORD PTR [rip+0x2091ac]        # 20b0d0 <base_decode_ctx>
1f24:	31 d2                	xor    edx,edx
1f26:	eb 95                	jmp    1ebd <main+0x5fd>
1f28:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
1f2f:	00
1f30:	48 8b 6c 24 08       	mov    rbp,QWORD PTR [rsp+0x8]
1f35:	e9 4e ff ff ff       	jmp    1e88 <main+0x5c8>
1f3a:	48 89 ef             	mov    rdi,rbp
1f3d:	e8 5e 50 00 00       	call   6fa0 <rpl_fclose>
1f42:	83 c0 01             	add    eax,0x1
1f45:	0f 84 86 02 00 00    	je     21d1 <main+0x911>
1f4b:	31 c0                	xor    eax,eax
1f4d:	48 8b 4c 24 78       	mov    rcx,QWORD PTR [rsp+0x78]
1f52:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
1f59:	00 00
1f5b:	0f 85 41 04 00 00    	jne    23a2 <main+0xae2>
1f61:	48 81 c4 88 00 00 00 	add    rsp,0x88
1f68:	5b                   	pop    rbx
1f69:	5d                   	pop    rbp
1f6a:	41 5c                	pop    r12
1f6c:	41 5d                	pop    r13
1f6e:	41 5e                	pop    r14
1f70:	41 5f                	pop    r15
1f72:	c3                   	ret
1f73:	48 8d 05 10 61 00 00 	lea    rax,[rip+0x6110]        # 808a <b64c+0x8a>
1f7a:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
1f7f:	48 8b 2d 0a 91 20 00 	mov    rbp,QWORD PTR [rip+0x20910a]        # 20b090 <stdin@@GLIBC_2.2.5>
1f86:	e9 7f fb ff ff       	jmp    1b0a <main+0x24a>
1f8b:	bf 00 78 00 00       	mov    edi,0x7800
1f90:	4c 8b 25 f1 90 20 00 	mov    r12,QWORD PTR [rip+0x2090f1]        # 20b088 <stdout@@GLIBC_2.2.5>
1f97:	31 db                	xor    ebx,ebx
1f99:	e8 22 48 00 00       	call   67c0 <xmalloc>
1f9e:	bf 00 78 00 00       	mov    edi,0x7800
1fa3:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
1fa8:	ff 15 42 91 20 00    	call   QWORD PTR [rip+0x209142]        # 20b0f0 <base_length>
1fae:	48 63 f8             	movsxd rdi,eax
1fb1:	e8 0a 48 00 00       	call   67c0 <xmalloc>
1fb6:	4c 89 6c 24 18       	mov    QWORD PTR [rsp+0x18],r13
1fbb:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
1fc0:	45 31 ff             	xor    r15d,r15d
1fc3:	4c 8b 6c 24 10       	mov    r13,QWORD PTR [rsp+0x10]
1fc8:	eb 0f                	jmp    1fd9 <main+0x719>
1fca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
1fd0:	49 81 ff ff 77 00 00 	cmp    r15,0x77ff
1fd7:	77 2d                	ja     2006 <main+0x746>
1fd9:	4b 8d 7c 3d 00       	lea    rdi,[r13+r15*1+0x0]
1fde:	ba 00 78 00 00       	mov    edx,0x7800
1fe3:	48 89 e9             	mov    rcx,rbp
1fe6:	4c 29 fa             	sub    rdx,r15
1fe9:	be 01 00 00 00       	mov    esi,0x1
1fee:	e8 fd f5 ff ff       	call   15f0 <fread_unlocked@plt>
1ff3:	49 01 c7             	add    r15,rax
1ff6:	8b 45 00             	mov    eax,DWORD PTR [rbp+0x0]
1ff9:	a8 30                	test   al,0x30
1ffb:	74 d3                	je     1fd0 <main+0x710>
1ffd:	4d 85 ff             	test   r15,r15
2000:	0f 84 ba 00 00 00    	je     20c0 <main+0x800>
2006:	4c 8b 2d d3 90 20 00 	mov    r13,QWORD PTR [rip+0x2090d3]        # 20b0e0 <base_encode>
200d:	44 89 ff             	mov    edi,r15d
2010:	ff 15 da 90 20 00    	call   QWORD PTR [rip+0x2090da]        # 20b0f0 <base_length>
2016:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
201b:	48 63 c8             	movsxd rcx,eax
201e:	4c 89 fe             	mov    rsi,r15
2021:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
2026:	41 ff d5             	call   r13
2029:	44 89 ff             	mov    edi,r15d
202c:	ff 15 be 90 20 00    	call   QWORD PTR [rip+0x2090be]        # 20b0f0 <base_length>
2032:	48 83 7c 24 18 00    	cmp    QWORD PTR [rsp+0x18],0x0
2038:	4c 63 e8             	movsxd r13,eax
203b:	0f 84 00 01 00 00    	je     2141 <main+0x881>
2041:	45 31 f6             	xor    r14d,r14d
2044:	4d 85 ed             	test   r13,r13
2047:	74 63                	je     20ac <main+0x7ec>
2049:	48 89 6c 24 20       	mov    QWORD PTR [rsp+0x20],rbp
204e:	48 89 dd             	mov    rbp,rbx
2051:	48 8b 5c 24 18       	mov    rbx,QWORD PTR [rsp+0x18]
2056:	4c 89 7c 24 28       	mov    QWORD PTR [rsp+0x28],r15
205b:	4d 89 ef             	mov    r15,r13
205e:	66 90                	xchg   ax,ax
2060:	49 89 dd             	mov    r13,rbx
2063:	4c 89 f8             	mov    rax,r15
2066:	49 29 ed             	sub    r13,rbp
2069:	4c 29 f0             	sub    rax,r14
206c:	49 39 c5             	cmp    r13,rax
206f:	4c 0f 47 e8          	cmova  r13,rax
2073:	4d 85 ed             	test   r13,r13
2076:	0f 85 94 00 00 00    	jne    2110 <main+0x850>
207c:	49 8b 44 24 28       	mov    rax,QWORD PTR [r12+0x28]
2081:	49 3b 44 24 30       	cmp    rax,QWORD PTR [r12+0x30]
2086:	0f 83 03 01 00 00    	jae    218f <main+0x8cf>
208c:	48 8d 50 01          	lea    rdx,[rax+0x1]
2090:	49 89 54 24 28       	mov    QWORD PTR [r12+0x28],rdx
2095:	c6 00 0a             	mov    BYTE PTR [rax],0xa
2098:	31 ed                	xor    ebp,ebp
209a:	4d 39 f7             	cmp    r15,r14
209d:	77 c1                	ja     2060 <main+0x7a0>
209f:	48 89 eb             	mov    rbx,rbp
20a2:	4c 8b 7c 24 28       	mov    r15,QWORD PTR [rsp+0x28]
20a7:	48 8b 6c 24 20       	mov    rbp,QWORD PTR [rsp+0x20]
20ac:	8b 45 00             	mov    eax,DWORD PTR [rbp+0x0]
20af:	a8 30                	test   al,0x30
20b1:	75 0d                	jne    20c0 <main+0x800>
20b3:	49 81 ff 00 78 00 00 	cmp    r15,0x7800
20ba:	0f 84 00 ff ff ff    	je     1fc0 <main+0x700>
20c0:	4c 8b 6c 24 18       	mov    r13,QWORD PTR [rsp+0x18]
20c5:	4d 85 ed             	test   r13,r13
20c8:	74 09                	je     20d3 <main+0x813>
20ca:	48 85 db             	test   rbx,rbx
20cd:	0f 85 41 01 00 00    	jne    2214 <main+0x954>
20d3:	a8 20                	test   al,0x20
20d5:	0f 84 5f fe ff ff    	je     1f3a <main+0x67a>
20db:	48 8d 35 b1 53 00 00 	lea    rsi,[rip+0x53b1]        # 7493 <_IO_stdin_used+0x173>
20e2:	ba 05 00 00 00       	mov    edx,0x5
20e7:	31 ff                	xor    edi,edi
20e9:	e8 42 f5 ff ff       	call   1630 <dcgettext@plt>
20ee:	48 89 c3             	mov    rbx,rax
20f1:	e8 ba f4 ff ff       	call   15b0 <__errno_location@plt>
20f6:	8b 30                	mov    esi,DWORD PTR [rax]
20f8:	48 89 da             	mov    rdx,rbx
20fb:	bf 01 00 00 00       	mov    edi,0x1
2100:	31 c0                	xor    eax,eax
2102:	e8 09 f7 ff ff       	call   1810 <error@plt>
2107:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
210e:	00 00
2110:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
2115:	48 8b 0d 6c 8f 20 00 	mov    rcx,QWORD PTR [rip+0x208f6c]        # 20b088 <stdout@@GLIBC_2.2.5>
211c:	4c 89 ea             	mov    rdx,r13
211f:	be 01 00 00 00       	mov    esi,0x1
2124:	4a 8d 3c 30          	lea    rdi,[rax+r14*1]
2128:	e8 93 f6 ff ff       	call   17c0 <fwrite_unlocked@plt>
212d:	49 39 c5             	cmp    r13,rax
2130:	0f 87 d4 01 00 00    	ja     230a <main+0xa4a>
2136:	4c 01 ed             	add    rbp,r13
2139:	4d 01 ee             	add    r14,r13
213c:	e9 59 ff ff ff       	jmp    209a <main+0x7da>
2141:	48 8b 0d 40 8f 20 00 	mov    rcx,QWORD PTR [rip+0x208f40]        # 20b088 <stdout@@GLIBC_2.2.5>
2148:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
214d:	4c 89 ea             	mov    rdx,r13
2150:	be 01 00 00 00       	mov    esi,0x1
2155:	e8 66 f6 ff ff       	call   17c0 <fwrite_unlocked@plt>
215a:	49 39 c5             	cmp    r13,rax
215d:	0f 86 49 ff ff ff    	jbe    20ac <main+0x7ec>
2163:	48 8d 35 34 53 00 00 	lea    rsi,[rip+0x5334]        # 749e <_IO_stdin_used+0x17e>
216a:	ba 05 00 00 00       	mov    edx,0x5
216f:	31 ff                	xor    edi,edi
2171:	e8 ba f4 ff ff       	call   1630 <dcgettext@plt>
2176:	48 89 c3             	mov    rbx,rax
2179:	e8 32 f4 ff ff       	call   15b0 <__errno_location@plt>
217e:	8b 30                	mov    esi,DWORD PTR [rax]
2180:	48 89 da             	mov    rdx,rbx
2183:	bf 01 00 00 00       	mov    edi,0x1
2188:	31 c0                	xor    eax,eax
218a:	e8 81 f6 ff ff       	call   1810 <error@plt>
218f:	be 0a 00 00 00       	mov    esi,0xa
2194:	4c 89 e7             	mov    rdi,r12
2197:	e8 04 f5 ff ff       	call   16a0 <__overflow@plt>
219c:	83 c0 01             	add    eax,0x1
219f:	0f 85 f3 fe ff ff    	jne    2098 <main+0x7d8>
21a5:	48 8d 35 f2 52 00 00 	lea    rsi,[rip+0x52f2]        # 749e <_IO_stdin_used+0x17e>
21ac:	ba 05 00 00 00       	mov    edx,0x5
21b1:	31 ff                	xor    edi,edi
21b3:	e8 78 f4 ff ff       	call   1630 <dcgettext@plt>
21b8:	48 89 c3             	mov    rbx,rax
21bb:	e8 f0 f3 ff ff       	call   15b0 <__errno_location@plt>
21c0:	8b 30                	mov    esi,DWORD PTR [rax]
21c2:	48 89 da             	mov    rdx,rbx
21c5:	bf 01 00 00 00       	mov    edi,0x1
21ca:	31 c0                	xor    eax,eax
21cc:	e8 3f f6 ff ff       	call   1810 <error@plt>
21d1:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
21d6:	48 8d 35 ad 5e 00 00 	lea    rsi,[rip+0x5ead]        # 808a <b64c+0x8a>
21dd:	e8 6e f5 ff ff       	call   1750 <strcmp@plt>
21e2:	89 c5                	mov    ebp,eax
21e4:	e8 c7 f3 ff ff       	call   15b0 <__errno_location@plt>
21e9:	85 ed                	test   ebp,ebp
21eb:	48 89 c3             	mov    rbx,rax
21ee:	75 48                	jne    2238 <main+0x978>
21f0:	48 8d 35 c1 52 00 00 	lea    rsi,[rip+0x52c1]        # 74b8 <_IO_stdin_used+0x198>
21f7:	ba 05 00 00 00       	mov    edx,0x5
21fc:	31 ff                	xor    edi,edi
21fe:	e8 2d f4 ff ff       	call   1630 <dcgettext@plt>
2203:	8b 33                	mov    esi,DWORD PTR [rbx]
2205:	48 89 c2             	mov    rdx,rax
2208:	bf 01 00 00 00       	mov    edi,0x1
220d:	31 c0                	xor    eax,eax
220f:	e8 fc f5 ff ff       	call   1810 <error@plt>
2214:	49 8b 44 24 28       	mov    rax,QWORD PTR [r12+0x28]
2219:	49 3b 44 24 30       	cmp    rax,QWORD PTR [r12+0x30]
221e:	0f 83 83 01 00 00    	jae    23a7 <main+0xae7>
2224:	48 8d 50 01          	lea    rdx,[rax+0x1]
2228:	49 89 54 24 28       	mov    QWORD PTR [r12+0x28],rdx
222d:	c6 00 0a             	mov    BYTE PTR [rax],0xa
2230:	8b 45 00             	mov    eax,DWORD PTR [rbp+0x0]
2233:	e9 9b fe ff ff       	jmp    20d3 <main+0x813>
2238:	48 8b 54 24 38       	mov    rdx,QWORD PTR [rsp+0x38]
223d:	be 03 00 00 00       	mov    esi,0x3
2242:	31 ff                	xor    edi,edi
2244:	e8 67 3d 00 00       	call   5fb0 <quotearg_n_style_colon>
2249:	8b 33                	mov    esi,DWORD PTR [rbx]
224b:	48 8d 15 f2 5d 00 00 	lea    rdx,[rip+0x5df2]        # 8044 <b64c+0x44>
2252:	48 89 c1             	mov    rcx,rax
2255:	bf 01 00 00 00       	mov    edi,0x1
225a:	31 c0                	xor    eax,eax
225c:	e8 af f5 ff ff       	call   1810 <error@plt>
2261:	48 8d 35 42 52 00 00 	lea    rsi,[rip+0x5242]        # 74aa <_IO_stdin_used+0x18a>
2268:	ba 05 00 00 00       	mov    edx,0x5
226d:	31 ff                	xor    edi,edi
226f:	e8 bc f3 ff ff       	call   1630 <dcgettext@plt>
2274:	31 f6                	xor    esi,esi
2276:	48 89 c2             	mov    rdx,rax
2279:	bf 01 00 00 00       	mov    edi,0x1
227e:	31 c0                	xor    eax,eax
2280:	e8 8b f5 ff ff       	call   1810 <error@plt>
2285:	48 8d 35 12 52 00 00 	lea    rsi,[rip+0x5212]        # 749e <_IO_stdin_used+0x17e>
228c:	ba 05 00 00 00       	mov    edx,0x5
2291:	31 ff                	xor    edi,edi
2293:	e8 98 f3 ff ff       	call   1630 <dcgettext@plt>
2298:	48 89 c3             	mov    rbx,rax
229b:	e8 10 f3 ff ff       	call   15b0 <__errno_location@plt>
22a0:	8b 30                	mov    esi,DWORD PTR [rax]
22a2:	48 89 da             	mov    rdx,rbx
22a5:	bf 01 00 00 00       	mov    edi,0x1
22aa:	31 c0                	xor    eax,eax
22ac:	e8 5f f5 ff ff       	call   1810 <error@plt>
22b1:	48 8d 35 db 51 00 00 	lea    rsi,[rip+0x51db]        # 7493 <_IO_stdin_used+0x173>
22b8:	ba 05 00 00 00       	mov    edx,0x5
22bd:	31 ff                	xor    edi,edi
22bf:	e8 6c f3 ff ff       	call   1630 <dcgettext@plt>
22c4:	48 89 c3             	mov    rbx,rax
22c7:	e8 e4 f2 ff ff       	call   15b0 <__errno_location@plt>
22cc:	8b 30                	mov    esi,DWORD PTR [rax]
22ce:	48 89 da             	mov    rdx,rbx
22d1:	bf 01 00 00 00       	mov    edi,0x1
22d6:	31 c0                	xor    eax,eax
22d8:	e8 33 f5 ff ff       	call   1810 <error@plt>
22dd:	31 ff                	xor    edi,edi
22df:	e8 7c 0c 00 00       	call   2f60 <usage>
22e4:	48 8d 35 7e 51 00 00 	lea    rsi,[rip+0x517e]        # 7469 <_IO_stdin_used+0x149>
22eb:	31 ff                	xor    edi,edi
22ed:	ba 05 00 00 00       	mov    edx,0x5
22f2:	e8 39 f3 ff ff       	call   1630 <dcgettext@plt>
22f7:	31 f6                	xor    esi,esi
22f9:	48 89 c2             	mov    rdx,rax
22fc:	31 ff                	xor    edi,edi
22fe:	31 c0                	xor    eax,eax
2300:	e8 0b f5 ff ff       	call   1810 <error@plt>
2305:	e9 77 f6 ff ff       	jmp    1981 <main+0xc1>
230a:	48 8d 35 8d 51 00 00 	lea    rsi,[rip+0x518d]        # 749e <_IO_stdin_used+0x17e>
2311:	ba 05 00 00 00       	mov    edx,0x5
2316:	31 ff                	xor    edi,edi
2318:	e8 13 f3 ff ff       	call   1630 <dcgettext@plt>
231d:	48 89 c3             	mov    rbx,rax
2320:	e8 8b f2 ff ff       	call   15b0 <__errno_location@plt>
2325:	8b 30                	mov    esi,DWORD PTR [rax]
2327:	48 89 da             	mov    rdx,rbx
232a:	bf 01 00 00 00       	mov    edi,0x1
232f:	31 c0                	xor    eax,eax
2331:	e8 da f4 ff ff       	call   1810 <error@plt>
2336:	48 8b 54 24 38       	mov    rdx,QWORD PTR [rsp+0x38]
233b:	be 03 00 00 00       	mov    esi,0x3
2340:	31 ff                	xor    edi,edi
2342:	e8 69 3c 00 00       	call   5fb0 <quotearg_n_style_colon>
2347:	48 89 c3             	mov    rbx,rax
234a:	e8 61 f2 ff ff       	call   15b0 <__errno_location@plt>
234f:	8b 30                	mov    esi,DWORD PTR [rax]
2351:	48 8d 15 ec 5c 00 00 	lea    rdx,[rip+0x5cec]        # 8044 <b64c+0x44>
2358:	48 89 d9             	mov    rcx,rbx
235b:	bf 01 00 00 00       	mov    edi,0x1
2360:	31 c0                	xor    eax,eax
2362:	e8 a9 f4 ff ff       	call   1810 <error@plt>
2367:	48 8b 7c c3 08       	mov    rdi,QWORD PTR [rbx+rax*8+0x8]
236c:	e8 0f 3e 00 00       	call   6180 <quote>
2371:	48 8d 35 07 51 00 00 	lea    rsi,[rip+0x5107]        # 747f <_IO_stdin_used+0x15f>
2378:	48 89 c3             	mov    rbx,rax
237b:	ba 05 00 00 00       	mov    edx,0x5
2380:	31 ff                	xor    edi,edi
2382:	e8 a9 f2 ff ff       	call   1630 <dcgettext@plt>
2387:	31 ff                	xor    edi,edi
2389:	48 89 c2             	mov    rdx,rax
238c:	48 89 d9             	mov    rcx,rbx
238f:	31 f6                	xor    esi,esi
2391:	31 c0                	xor    eax,eax
2393:	e8 78 f4 ff ff       	call   1810 <error@plt>
2398:	bf 01 00 00 00       	mov    edi,0x1
239d:	e8 be 0b 00 00       	call   2f60 <usage>
23a2:	e8 b9 f2 ff ff       	call   1660 <__stack_chk_fail@plt>
23a7:	be 0a 00 00 00       	mov    esi,0xa
23ac:	4c 89 e7             	mov    rdi,r12
23af:	e8 ec f2 ff ff       	call   16a0 <__overflow@plt>
23b4:	83 c0 01             	add    eax,0x1
23b7:	0f 85 73 fe ff ff    	jne    2230 <main+0x970>
23bd:	48 8d 35 da 50 00 00 	lea    rsi,[rip+0x50da]        # 749e <_IO_stdin_used+0x17e>
23c4:	ba 05 00 00 00       	mov    edx,0x5
23c9:	31 ff                	xor    edi,edi
23cb:	e8 60 f2 ff ff       	call   1630 <dcgettext@plt>
23d0:	48 89 c3             	mov    rbx,rax
23d3:	e8 d8 f1 ff ff       	call   15b0 <__errno_location@plt>
23d8:	8b 30                	mov    esi,DWORD PTR [rax]
23da:	48 89 da             	mov    rdx,rbx
23dd:	bf 01 00 00 00       	mov    edi,0x1
23e2:	31 c0                	xor    eax,eax
23e4:	e8 27 f4 ff ff       	call   1810 <error@plt>
23e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000023f0 <_start>:
23f0:	31 ed                	xor    ebp,ebp
23f2:	49 89 d1             	mov    r9,rdx
23f5:	5e                   	pop    rsi
23f6:	48 89 e2             	mov    rdx,rsp
23f9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
23fd:	50                   	push   rax
23fe:	54                   	push   rsp
23ff:	4c 8d 05 da 4e 00 00 	lea    r8,[rip+0x4eda]        # 72e0 <__libc_csu_fini>
2406:	48 8d 0d 63 4e 00 00 	lea    rcx,[rip+0x4e63]        # 7270 <__libc_csu_init>
240d:	48 8d 3d ac f4 ff ff 	lea    rdi,[rip+0xfffffffffffff4ac]        # 18c0 <main>
2414:	ff 15 be 8b 20 00    	call   QWORD PTR [rip+0x208bbe]        # 20afd8 <__libc_start_main@GLIBC_2.2.5>
241a:	f4                   	hlt
241b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002420 <deregister_tm_clones>:
2420:	48 8d 3d 59 8c 20 00 	lea    rdi,[rip+0x208c59]        # 20b080 <__progname@@GLIBC_2.2.5>
2427:	55                   	push   rbp
2428:	48 8d 05 51 8c 20 00 	lea    rax,[rip+0x208c51]        # 20b080 <__progname@@GLIBC_2.2.5>
242f:	48 39 f8             	cmp    rax,rdi
2432:	48 89 e5             	mov    rbp,rsp
2435:	74 19                	je     2450 <deregister_tm_clones+0x30>
2437:	48 8b 05 92 8b 20 00 	mov    rax,QWORD PTR [rip+0x208b92]        # 20afd0 <_ITM_deregisterTMCloneTable>
243e:	48 85 c0             	test   rax,rax
2441:	74 0d                	je     2450 <deregister_tm_clones+0x30>
2443:	5d                   	pop    rbp
2444:	ff e0                	jmp    rax
2446:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
244d:	00 00 00
2450:	5d                   	pop    rbp
2451:	c3                   	ret
2452:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2456:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
245d:	00 00 00

0000000000002460 <register_tm_clones>:
2460:	48 8d 3d 19 8c 20 00 	lea    rdi,[rip+0x208c19]        # 20b080 <__progname@@GLIBC_2.2.5>
2467:	48 8d 35 12 8c 20 00 	lea    rsi,[rip+0x208c12]        # 20b080 <__progname@@GLIBC_2.2.5>
246e:	55                   	push   rbp
246f:	48 29 fe             	sub    rsi,rdi
2472:	48 89 e5             	mov    rbp,rsp
2475:	48 c1 fe 03          	sar    rsi,0x3
2479:	48 89 f0             	mov    rax,rsi
247c:	48 c1 e8 3f          	shr    rax,0x3f
2480:	48 01 c6             	add    rsi,rax
2483:	48 d1 fe             	sar    rsi,1
2486:	74 18                	je     24a0 <register_tm_clones+0x40>
2488:	48 8b 05 59 8b 20 00 	mov    rax,QWORD PTR [rip+0x208b59]        # 20afe8 <_ITM_registerTMCloneTable>
248f:	48 85 c0             	test   rax,rax
2492:	74 0c                	je     24a0 <register_tm_clones+0x40>
2494:	5d                   	pop    rbp
2495:	ff e0                	jmp    rax
2497:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
249e:	00 00
24a0:	5d                   	pop    rbp
24a1:	c3                   	ret
24a2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
24a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
24ad:	00 00 00

00000000000024b0 <__do_global_dtors_aux>:
24b0:	80 3d 11 8c 20 00 00 	cmp    BYTE PTR [rip+0x208c11],0x0        # 20b0c8 <completed.7697>
24b7:	75 2f                	jne    24e8 <__do_global_dtors_aux+0x38>
24b9:	48 83 3d 2f 8b 20 00 	cmp    QWORD PTR [rip+0x208b2f],0x0        # 20aff0 <__cxa_finalize@GLIBC_2.2.5>
24c0:	00
24c1:	55                   	push   rbp
24c2:	48 89 e5             	mov    rbp,rsp
24c5:	74 0c                	je     24d3 <__do_global_dtors_aux+0x23>
24c7:	48 8b 3d 3a 8b 20 00 	mov    rdi,QWORD PTR [rip+0x208b3a]        # 20b008 <__dso_handle>
24ce:	e8 dd f3 ff ff       	call   18b0 <__cxa_finalize@plt>
24d3:	e8 48 ff ff ff       	call   2420 <deregister_tm_clones>
24d8:	c6 05 e9 8b 20 00 01 	mov    BYTE PTR [rip+0x208be9],0x1        # 20b0c8 <completed.7697>
24df:	5d                   	pop    rbp
24e0:	c3                   	ret
24e1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
24e8:	f3 c3                	repz ret
24ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000024f0 <frame_dummy>:
24f0:	55                   	push   rbp
24f1:	48 89 e5             	mov    rbp,rsp
24f4:	5d                   	pop    rbp
24f5:	e9 66 ff ff ff       	jmp    2460 <register_tm_clones>
24fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000002500 <base64_length_wrapper>:
2500:	83 c7 02             	add    edi,0x2
2503:	ba 56 55 55 55       	mov    edx,0x55555556
2508:	89 f8                	mov    eax,edi
250a:	c1 ff 1f             	sar    edi,0x1f
250d:	f7 ea                	imul   edx
250f:	29 fa                	sub    edx,edi
2511:	8d 04 95 00 00 00 00 	lea    eax,[rdx*4+0x0]
2518:	c3                   	ret
2519:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002520 <base32_length_wrapper>:
2520:	83 c7 04             	add    edi,0x4
2523:	ba 67 66 66 66       	mov    edx,0x66666667
2528:	89 f8                	mov    eax,edi
252a:	c1 ff 1f             	sar    edi,0x1f
252d:	f7 ea                	imul   edx
252f:	d1 fa                	sar    edx,1
2531:	29 fa                	sub    edx,edi
2533:	8d 04 d5 00 00 00 00 	lea    eax,[rdx*8+0x0]
253a:	c3                   	ret
253b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <isbase32hex>:
2540:	8d 47 d0             	lea    eax,[rdi-0x30]
2543:	3c 09                	cmp    al,0x9
2545:	0f 96 c0             	setbe  al
2548:	83 ef 41             	sub    edi,0x41
254b:	40 80 ff 15          	cmp    dil,0x15
254f:	0f 96 c2             	setbe  dl
2552:	09 d0                	or     eax,edx
2554:	c3                   	ret
2555:	90                   	nop
2556:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
255d:	00 00 00

0000000000002560 <isbase16>:
2560:	8d 47 d0             	lea    eax,[rdi-0x30]
2563:	3c 09                	cmp    al,0x9
2565:	0f 96 c0             	setbe  al
2568:	83 ef 41             	sub    edi,0x41
256b:	40 80 ff 05          	cmp    dil,0x5
256f:	0f 96 c2             	setbe  dl
2572:	09 d0                	or     eax,edx
2574:	c3                   	ret
2575:	90                   	nop
2576:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
257d:	00 00 00

0000000000002580 <base16_length>:
2580:	8d 04 3f             	lea    eax,[rdi+rdi*1]
2583:	c3                   	ret
2584:	66 90                	xchg   ax,ax
2586:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
258d:	00 00 00

0000000000002590 <base16_encode>:
2590:	48 85 f6             	test   rsi,rsi
2593:	74 36                	je     25cb <base16_encode+0x3b>
2595:	4c 8d 05 a4 57 00 00 	lea    r8,[rip+0x57a4]        # 7d40 <base16>
259c:	48 01 fe             	add    rsi,rdi
259f:	90                   	nop
25a0:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
25a3:	48 83 c7 01          	add    rdi,0x1
25a7:	48 83 c2 02          	add    rdx,0x2
25ab:	89 c1                	mov    ecx,eax
25ad:	83 e0 0f             	and    eax,0xf
25b0:	c0 e9 04             	shr    cl,0x4
25b3:	41 0f b6 04 00       	movzx  eax,BYTE PTR [r8+rax*1]
25b8:	83 e1 0f             	and    ecx,0xf
25bb:	41 0f b6 0c 08       	movzx  ecx,BYTE PTR [r8+rcx*1]
25c0:	88 4a fe             	mov    BYTE PTR [rdx-0x2],cl
25c3:	48 39 f7             	cmp    rdi,rsi
25c6:	88 42 ff             	mov    BYTE PTR [rdx-0x1],al
25c9:	75 d5                	jne    25a0 <base16_encode+0x10>
25cb:	f3 c3                	repz ret
25cd:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000025d0 <z85_length>:
25d0:	8d 14 bf             	lea    edx,[rdi+rdi*4]
25d3:	8d 42 03             	lea    eax,[rdx+0x3]
25d6:	85 d2                	test   edx,edx
25d8:	0f 49 c2             	cmovns eax,edx
25db:	c1 f8 02             	sar    eax,0x2
25de:	c3                   	ret
25df:	90                   	nop

00000000000025e0 <isbase2>:
25e0:	83 ef 30             	sub    edi,0x30
25e3:	40 80 ff 01          	cmp    dil,0x1
25e7:	0f 96 c0             	setbe  al
25ea:	c3                   	ret
25eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <base2_length>:
25f0:	8d 04 fd 00 00 00 00 	lea    eax,[rdi*8+0x0]
25f7:	c3                   	ret
25f8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
25ff:	00

0000000000002600 <base2msbf_encode>:
2600:	48 85 f6             	test   rsi,rsi
2603:	74 3d                	je     2642 <base2msbf_encode+0x42>
2605:	4c 8d 04 37          	lea    r8,[rdi+rsi*1]
2609:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
2610:	0f b6 0f             	movzx  ecx,BYTE PTR [rdi]
2613:	48 8d 72 08          	lea    rsi,[rdx+0x8]
2617:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
261e:	00 00
2620:	89 c8                	mov    eax,ecx
2622:	48 83 c2 01          	add    rdx,0x1
2626:	01 c9                	add    ecx,ecx
2628:	c0 e8 07             	shr    al,0x7
262b:	83 c0 30             	add    eax,0x30
262e:	48 39 d6             	cmp    rsi,rdx
2631:	88 42 ff             	mov    BYTE PTR [rdx-0x1],al
2634:	75 ea                	jne    2620 <base2msbf_encode+0x20>
2636:	48 83 c7 01          	add    rdi,0x1
263a:	48 89 f2             	mov    rdx,rsi
263d:	49 39 f8             	cmp    r8,rdi
2640:	75 ce                	jne    2610 <base2msbf_encode+0x10>
2642:	f3 c3                	repz ret
2644:	66 90                	xchg   ax,ax
2646:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
264d:	00 00 00

0000000000002650 <base2lsbf_encode>:
2650:	48 85 f6             	test   rsi,rsi
2653:	74 3d                	je     2692 <base2lsbf_encode+0x42>
2655:	4c 8d 04 37          	lea    r8,[rdi+rsi*1]
2659:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
2660:	0f b6 0f             	movzx  ecx,BYTE PTR [rdi]
2663:	48 8d 72 08          	lea    rsi,[rdx+0x8]
2667:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
266e:	00 00
2670:	89 c8                	mov    eax,ecx
2672:	48 83 c2 01          	add    rdx,0x1
2676:	d0 e9                	shr    cl,1
2678:	83 e0 01             	and    eax,0x1
267b:	83 c0 30             	add    eax,0x30
267e:	48 39 d6             	cmp    rsi,rdx
2681:	88 42 ff             	mov    BYTE PTR [rdx-0x1],al
2684:	75 ea                	jne    2670 <base2lsbf_encode+0x20>
2686:	48 83 c7 01          	add    rdi,0x1
268a:	48 89 f2             	mov    rdx,rsi
268d:	49 39 f8             	cmp    r8,rdi
2690:	75 ce                	jne    2660 <base2lsbf_encode+0x10>
2692:	f3 c3                	repz ret
2694:	66 90                	xchg   ax,ax
2696:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
269d:	00 00 00

00000000000026a0 <isbase64url>:
26a0:	40 80 ff 2d          	cmp    dil,0x2d
26a4:	0f 94 c0             	sete   al
26a7:	40 80 ff 5f          	cmp    dil,0x5f
26ab:	0f 94 c2             	sete   dl
26ae:	08 d0                	or     al,dl
26b0:	75 16                	jne    26c8 <isbase64url+0x28>
26b2:	89 fa                	mov    edx,edi
26b4:	83 e2 fb             	and    edx,0xfffffffb
26b7:	80 fa 2b             	cmp    dl,0x2b
26ba:	74 0c                	je     26c8 <isbase64url+0x28>
26bc:	40 0f be ff          	movsx  edi,dil
26c0:	e9 fb 18 00 00       	jmp    3fc0 <isbase64>
26c5:	0f 1f 00             	nop    DWORD PTR [rax]
26c8:	f3 c3                	repz ret
26ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000026d0 <base64url_encode>:
26d0:	55                   	push   rbp
26d1:	53                   	push   rbx
26d2:	48 89 cd             	mov    rbp,rcx
26d5:	48 89 d3             	mov    rbx,rdx
26d8:	48 83 ec 08          	sub    rsp,0x8
26dc:	e8 8f 16 00 00       	call   3d70 <base64_encode>
26e1:	48 85 ed             	test   rbp,rbp
26e4:	74 2d                	je     2713 <base64url_encode+0x43>
26e6:	48 8d 0c 2b          	lea    rcx,[rbx+rbp*1]
26ea:	eb 14                	jmp    2700 <base64url_encode+0x30>
26ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
26f0:	3c 2f                	cmp    al,0x2f
26f2:	75 03                	jne    26f7 <base64url_encode+0x27>
26f4:	c6 03 5f             	mov    BYTE PTR [rbx],0x5f
26f7:	48 83 c3 01          	add    rbx,0x1
26fb:	48 39 cb             	cmp    rbx,rcx
26fe:	74 13                	je     2713 <base64url_encode+0x43>
2700:	0f b6 03             	movzx  eax,BYTE PTR [rbx]
2703:	3c 2b                	cmp    al,0x2b
2705:	75 e9                	jne    26f0 <base64url_encode+0x20>
2707:	c6 03 2d             	mov    BYTE PTR [rbx],0x2d
270a:	48 83 c3 01          	add    rbx,0x1
270e:	48 39 cb             	cmp    rbx,rcx
2711:	75 ed                	jne    2700 <base64url_encode+0x30>
2713:	48 83 c4 08          	add    rsp,0x8
2717:	5b                   	pop    rbx
2718:	5d                   	pop    rbp
2719:	c3                   	ret
271a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000002720 <z85_decode_ctx_init>:
2720:	53                   	push   rbx
2721:	48 89 fb             	mov    rbx,rdi
2724:	48 c7 47 18 00 14 00 	mov    QWORD PTR [rdi+0x18],0x1400
272b:	00
272c:	bf 00 14 00 00       	mov    edi,0x1400
2731:	e8 8a 40 00 00       	call   67c0 <xmalloc>
2736:	48 c7 03 01 00 00 00 	mov    QWORD PTR [rbx],0x1
273d:	48 89 43 10          	mov    QWORD PTR [rbx+0x10],rax
2741:	5b                   	pop    rbx
2742:	c3                   	ret
2743:	0f 1f 00             	nop    DWORD PTR [rax]
2746:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
274d:	00 00 00

0000000000002750 <base2_decode_ctx_init>:
2750:	53                   	push   rbx
2751:	48 89 fb             	mov    rbx,rdi
2754:	48 c7 47 18 00 14 00 	mov    QWORD PTR [rdi+0x18],0x1400
275b:	00
275c:	bf 00 14 00 00       	mov    edi,0x1400
2761:	e8 5a 40 00 00       	call   67c0 <xmalloc>
2766:	48 c7 03 00 00 00 00 	mov    QWORD PTR [rbx],0x0
276d:	48 89 43 10          	mov    QWORD PTR [rbx+0x10],rax
2771:	5b                   	pop    rbx
2772:	c3                   	ret
2773:	0f 1f 00             	nop    DWORD PTR [rax]
2776:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
277d:	00 00 00

0000000000002780 <base16_decode_ctx_init>:
2780:	53                   	push   rbx
2781:	48 89 fb             	mov    rbx,rdi
2784:	48 c7 47 18 00 14 00 	mov    QWORD PTR [rdi+0x18],0x1400
278b:	00
278c:	bf 00 14 00 00       	mov    edi,0x1400
2791:	e8 2a 40 00 00       	call   67c0 <xmalloc>
2796:	c6 43 05 00          	mov    BYTE PTR [rbx+0x5],0x0
279a:	48 89 43 10          	mov    QWORD PTR [rbx+0x10],rax
279e:	c7 03 01 00 00 00    	mov    DWORD PTR [rbx],0x1
27a4:	5b                   	pop    rbx
27a5:	c3                   	ret
27a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
27ad:	00 00 00

00000000000027b0 <isz85>:
27b0:	40 80 ff 5a          	cmp    dil,0x5a
27b4:	7f 32                	jg     27e8 <isz85+0x38>
27b6:	40 80 ff 41          	cmp    dil,0x41
27ba:	7d 33                	jge    27ef <isz85+0x3f>
27bc:	8d 47 d0             	lea    eax,[rdi-0x30]
27bf:	3c 09                	cmp    al,0x9
27c1:	76 2c                	jbe    27ef <isz85+0x3f>
27c3:	40 0f be f7          	movsx  esi,dil
27c7:	48 8d 3d 56 4b 00 00 	lea    rdi,[rip+0x4b56]        # 7324 <_IO_stdin_used+0x4>
27ce:	48 83 ec 08          	sub    rsp,0x8
27d2:	e8 b9 ee ff ff       	call   1690 <strchr@plt>
27d7:	48 85 c0             	test   rax,rax
27da:	0f 95 c0             	setne  al
27dd:	48 83 c4 08          	add    rsp,0x8
27e1:	c3                   	ret
27e2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
27e8:	8d 47 9f             	lea    eax,[rdi-0x61]
27eb:	3c 19                	cmp    al,0x19
27ed:	77 d4                	ja     27c3 <isz85+0x13>
27ef:	b8 01 00 00 00       	mov    eax,0x1
27f4:	c3                   	ret
27f5:	90                   	nop
27f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
27fd:	00 00 00

0000000000002800 <base32_decode_ctx_wrapper>:
2800:	53                   	push   rbx
2801:	48 89 fb             	mov    rbx,rdi
2804:	48 8d 7f 04          	lea    rdi,[rdi+0x4]
2808:	e8 e3 10 00 00       	call   38f0 <base32_decode_ctx>
280d:	8b 53 04             	mov    edx,DWORD PTR [rbx+0x4]
2810:	89 13                	mov    DWORD PTR [rbx],edx
2812:	5b                   	pop    rbx
2813:	c3                   	ret
2814:	66 90                	xchg   ax,ax
2816:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
281d:	00 00 00

0000000000002820 <base32hex_decode_ctx_init_wrapper>:
2820:	53                   	push   rbx
2821:	48 89 fb             	mov    rbx,rdi
2824:	48 8d 7f 04          	lea    rdi,[rdi+0x4]
2828:	e8 b3 10 00 00       	call   38e0 <base32_decode_ctx_init>
282d:	48 c7 43 18 00 14 00 	mov    QWORD PTR [rbx+0x18],0x1400
2834:	00
2835:	bf 00 14 00 00       	mov    edi,0x1400
283a:	e8 81 3f 00 00       	call   67c0 <xmalloc>
283f:	48 89 43 10          	mov    QWORD PTR [rbx+0x10],rax
2843:	5b                   	pop    rbx
2844:	c3                   	ret
2845:	90                   	nop
2846:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
284d:	00 00 00

0000000000002850 <base32_decode_ctx_init_wrapper>:
2850:	48 83 c7 04          	add    rdi,0x4
2854:	e9 87 10 00 00       	jmp    38e0 <base32_decode_ctx_init>
2859:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002860 <base64_decode_ctx_wrapper>:
2860:	53                   	push   rbx
2861:	48 89 fb             	mov    rbx,rdi
2864:	48 8d 7f 04          	lea    rdi,[rdi+0x4]
2868:	e8 83 17 00 00       	call   3ff0 <base64_decode_ctx>
286d:	8b 53 04             	mov    edx,DWORD PTR [rbx+0x4]
2870:	89 13                	mov    DWORD PTR [rbx],edx
2872:	5b                   	pop    rbx
2873:	c3                   	ret
2874:	66 90                	xchg   ax,ax
2876:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
287d:	00 00 00

0000000000002880 <base64url_decode_ctx_init_wrapper>:
2880:	53                   	push   rbx
2881:	48 89 fb             	mov    rbx,rdi
2884:	48 8d 7f 04          	lea    rdi,[rdi+0x4]
2888:	e8 53 17 00 00       	call   3fe0 <base64_decode_ctx_init>
288d:	48 c7 43 18 00 14 00 	mov    QWORD PTR [rbx+0x18],0x1400
2894:	00
2895:	bf 00 14 00 00       	mov    edi,0x1400
289a:	e8 21 3f 00 00       	call   67c0 <xmalloc>
289f:	48 89 43 10          	mov    QWORD PTR [rbx+0x10],rax
28a3:	5b                   	pop    rbx
28a4:	c3                   	ret
28a5:	90                   	nop
28a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
28ad:	00 00 00

00000000000028b0 <base64_decode_ctx_init_wrapper>:
28b0:	48 83 c7 04          	add    rdi,0x4
28b4:	e9 27 17 00 00       	jmp    3fe0 <base64_decode_ctx_init>
28b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000028c0 <base16_decode_ctx>:
28c0:	48 85 d2             	test   rdx,rdx
28c3:	49 c7 00 00 00 00 00 	mov    QWORD PTR [r8],0x0
28ca:	74 74                	je     2940 <base16_decode_ctx+0x80>
28cc:	4c 8d 4e 01          	lea    r9,[rsi+0x1]
28d0:	4c 8d 54 16 01       	lea    r10,[rsi+rdx*1+0x1]
28d5:	eb 37                	jmp    290e <base16_decode_ctx+0x4e>
28d7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
28de:	00 00
28e0:	0f b6 57 05          	movzx  edx,BYTE PTR [rdi+0x5]
28e4:	83 e8 37             	sub    eax,0x37
28e7:	84 d2                	test   dl,dl
28e9:	74 47                	je     2932 <base16_decode_ctx+0x72>
28eb:	0f b6 77 04          	movzx  esi,BYTE PTR [rdi+0x4]
28ef:	49 83 00 01          	add    QWORD PTR [r8],0x1
28f3:	48 83 c1 01          	add    rcx,0x1
28f7:	c1 e6 04             	shl    esi,0x4
28fa:	01 f0                	add    eax,esi
28fc:	88 41 ff             	mov    BYTE PTR [rcx-0x1],al
28ff:	83 f2 01             	xor    edx,0x1
2902:	88 57 05             	mov    BYTE PTR [rdi+0x5],dl
2905:	49 83 c1 01          	add    r9,0x1
2909:	4d 39 ca             	cmp    r10,r9
290c:	74 42                	je     2950 <base16_decode_ctx+0x90>
290e:	41 0f be 41 ff       	movsx  eax,BYTE PTR [r9-0x1]
2913:	3c 0a                	cmp    al,0xa
2915:	74 ee                	je     2905 <base16_decode_ctx+0x45>
2917:	8d 50 bf             	lea    edx,[rax-0x41]
291a:	80 fa 05             	cmp    dl,0x5
291d:	76 c1                	jbe    28e0 <base16_decode_ctx+0x20>
291f:	8d 50 d0             	lea    edx,[rax-0x30]
2922:	80 fa 09             	cmp    dl,0x9
2925:	77 39                	ja     2960 <base16_decode_ctx+0xa0>
2927:	0f b6 57 05          	movzx  edx,BYTE PTR [rdi+0x5]
292b:	83 e8 30             	sub    eax,0x30
292e:	84 d2                	test   dl,dl
2930:	75 b9                	jne    28eb <base16_decode_ctx+0x2b>
2932:	88 47 04             	mov    BYTE PTR [rdi+0x4],al
2935:	eb c8                	jmp    28ff <base16_decode_ctx+0x3f>
2937:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
293e:	00 00
2940:	0f b6 47 05          	movzx  eax,BYTE PTR [rdi+0x5]
2944:	83 f0 01             	xor    eax,0x1
2947:	c3                   	ret
2948:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
294f:	00
2950:	b8 01 00 00 00       	mov    eax,0x1
2955:	c3                   	ret
2956:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
295d:	00 00 00
2960:	31 c0                	xor    eax,eax
2962:	c3                   	ret
2963:	0f 1f 00             	nop    DWORD PTR [rax]
2966:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
296d:	00 00 00

0000000000002970 <z85_decode_ctx>:
2970:	48 85 d2             	test   rdx,rdx
2973:	49 c7 00 00 00 00 00 	mov    QWORD PTR [r8],0x0
297a:	75 0c                	jne    2988 <z85_decode_ctx+0x18>
297c:	8b 47 04             	mov    eax,DWORD PTR [rdi+0x4]
297f:	85 c0                	test   eax,eax
2981:	0f 9e c0             	setle  al
2984:	c3                   	ret
2985:	0f 1f 00             	nop    DWORD PTR [rax]
2988:	4c 8d 4e 01          	lea    r9,[rsi+0x1]
298c:	4c 8d 15 ed 52 00 00 	lea    r10,[rip+0x52ed]        # 7c80 <z85_decoding>
2993:	48 8d 74 16 01       	lea    rsi,[rsi+rdx*1+0x1]
2998:	eb 13                	jmp    29ad <z85_decode_ctx+0x3d>
299a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
29a0:	49 83 c1 01          	add    r9,0x1
29a4:	49 39 f1             	cmp    r9,rsi
29a7:	0f 84 c2 00 00 00    	je     2a6f <z85_decode_ctx+0xff>
29ad:	41 0f b6 41 ff       	movzx  eax,BYTE PTR [r9-0x1]
29b2:	3c 0a                	cmp    al,0xa
29b4:	74 ea                	je     29a0 <z85_decode_ctx+0x30>
29b6:	8d 50 df             	lea    edx,[rax-0x21]
29b9:	80 fa 5c             	cmp    dl,0x5c
29bc:	0f 87 be 00 00 00    	ja     2a80 <z85_decode_ctx+0x110>
29c2:	83 e8 21             	sub    eax,0x21
29c5:	48 98                	cdqe
29c7:	41 0f b6 14 02       	movzx  edx,BYTE PTR [r10+rax*1]
29cc:	80 fa ff             	cmp    dl,0xff
29cf:	0f 84 ab 00 00 00    	je     2a80 <z85_decode_ctx+0x110>
29d5:	48 63 47 04          	movsxd rax,DWORD PTR [rdi+0x4]
29d9:	44 8d 58 01          	lea    r11d,[rax+0x1]
29dd:	41 83 fb 05          	cmp    r11d,0x5
29e1:	44 89 5f 04          	mov    DWORD PTR [rdi+0x4],r11d
29e5:	88 54 07 08          	mov    BYTE PTR [rdi+rax*1+0x8],dl
29e9:	75 b5                	jne    29a0 <z85_decode_ctx+0x30>
29eb:	0f b6 47 09          	movzx  eax,BYTE PTR [rdi+0x9]
29ef:	44 0f b6 5f 0a       	movzx  r11d,BYTE PTR [rdi+0xa]
29f4:	0f b6 57 08          	movzx  edx,BYTE PTR [rdi+0x8]
29f8:	45 69 db 39 1c 00 00 	imul   r11d,r11d,0x1c39
29ff:	69 c0 ed 5e 09 00    	imul   eax,eax,0x95eed
2a05:	44 01 d8             	add    eax,r11d
2a08:	44 0f b6 5f 0b       	movzx  r11d,BYTE PTR [rdi+0xb]
2a0d:	45 6b db 55          	imul   r11d,r11d,0x55
2a11:	44 01 d8             	add    eax,r11d
2a14:	44 0f b6 5f 0c       	movzx  r11d,BYTE PTR [rdi+0xc]
2a19:	41 01 c3             	add    r11d,eax
2a1c:	8d 42 ad             	lea    eax,[rdx-0x53]
2a1f:	3c 01                	cmp    al,0x1
2a21:	76 5d                	jbe    2a80 <z85_decode_ctx+0x110>
2a23:	80 fa 52             	cmp    dl,0x52
2a26:	75 09                	jne    2a31 <z85_decode_ctx+0xc1>
2a28:	41 81 fb 4d 7f dd 00 	cmp    r11d,0xdd7f4d
2a2f:	7f 4f                	jg     2a80 <z85_decode_ctx+0x110>
2a31:	0f b6 c2             	movzx  eax,dl
2a34:	49 83 c1 01          	add    r9,0x1
2a38:	49 83 00 04          	add    QWORD PTR [r8],0x4
2a3c:	69 c0 b1 84 1c 03    	imul   eax,eax,0x31c84b1
2a42:	48 83 c1 04          	add    rcx,0x4
2a46:	c7 47 04 00 00 00 00 	mov    DWORD PTR [rdi+0x4],0x0
2a4d:	44 01 d8             	add    eax,r11d
2a50:	89 c2                	mov    edx,eax
2a52:	88 61 fe             	mov    BYTE PTR [rcx-0x2],ah
2a55:	88 41 ff             	mov    BYTE PTR [rcx-0x1],al
2a58:	c1 ea 18             	shr    edx,0x18
2a5b:	88 51 fc             	mov    BYTE PTR [rcx-0x4],dl
2a5e:	89 c2                	mov    edx,eax
2a60:	c1 ea 10             	shr    edx,0x10
2a63:	88 51 fd             	mov    BYTE PTR [rcx-0x3],dl
2a66:	49 39 f1             	cmp    r9,rsi
2a69:	0f 85 3e ff ff ff    	jne    29ad <z85_decode_ctx+0x3d>
2a6f:	8b 47 04             	mov    eax,DWORD PTR [rdi+0x4]
2a72:	89 07                	mov    DWORD PTR [rdi],eax
2a74:	b8 01 00 00 00       	mov    eax,0x1
2a79:	c3                   	ret
2a7a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
2a80:	31 c0                	xor    eax,eax
2a82:	c3                   	ret
2a83:	0f 1f 00             	nop    DWORD PTR [rax]
2a86:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
2a8d:	00 00 00

0000000000002a90 <base2lsbf_decode_ctx>:
2a90:	48 85 d2             	test   rdx,rdx
2a93:	49 89 ca             	mov    r10,rcx
2a96:	49 c7 00 00 00 00 00 	mov    QWORD PTR [r8],0x0
2a9d:	74 69                	je     2b08 <base2lsbf_decode_ctx+0x78>
2a9f:	4c 8d 4e 01          	lea    r9,[rsi+0x1]
2aa3:	48 8d 74 16 01       	lea    rsi,[rsi+rdx*1+0x1]
2aa8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
2aaf:	00
2ab0:	41 0f b6 41 ff       	movzx  eax,BYTE PTR [r9-0x1]
2ab5:	3c 0a                	cmp    al,0xa
2ab7:	74 3c                	je     2af5 <base2lsbf_decode_ctx+0x65>
2ab9:	8d 50 d0             	lea    edx,[rax-0x30]
2abc:	80 fa 01             	cmp    dl,0x1
2abf:	77 4f                	ja     2b10 <base2lsbf_decode_ctx+0x80>
2ac1:	3c 31                	cmp    al,0x31
2ac3:	8b 0f                	mov    ecx,DWORD PTR [rdi]
2ac5:	0f 94 c0             	sete   al
2ac8:	0f b6 c0             	movzx  eax,al
2acb:	d3 e0                	shl    eax,cl
2acd:	0b 47 04             	or     eax,DWORD PTR [rdi+0x4]
2ad0:	83 c1 01             	add    ecx,0x1
2ad3:	83 f9 08             	cmp    ecx,0x8
2ad6:	89 0f                	mov    DWORD PTR [rdi],ecx
2ad8:	89 47 04             	mov    DWORD PTR [rdi+0x4],eax
2adb:	75 18                	jne    2af5 <base2lsbf_decode_ctx+0x65>
2add:	41 88 02             	mov    BYTE PTR [r10],al
2ae0:	c7 47 04 00 00 00 00 	mov    DWORD PTR [rdi+0x4],0x0
2ae7:	49 83 c2 01          	add    r10,0x1
2aeb:	49 83 00 01          	add    QWORD PTR [r8],0x1
2aef:	c7 07 00 00 00 00    	mov    DWORD PTR [rdi],0x0
2af5:	49 83 c1 01          	add    r9,0x1
2af9:	4c 39 ce             	cmp    rsi,r9
2afc:	75 b2                	jne    2ab0 <base2lsbf_decode_ctx+0x20>
2afe:	b8 01 00 00 00       	mov    eax,0x1
2b03:	c3                   	ret
2b04:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2b08:	8b 07                	mov    eax,DWORD PTR [rdi]
2b0a:	85 c0                	test   eax,eax
2b0c:	0f 94 c0             	sete   al
2b0f:	c3                   	ret
2b10:	31 c0                	xor    eax,eax
2b12:	c3                   	ret
2b13:	0f 1f 00             	nop    DWORD PTR [rax]
2b16:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
2b1d:	00 00 00

0000000000002b20 <base2msbf_decode_ctx>:
2b20:	48 85 d2             	test   rdx,rdx
2b23:	49 89 ca             	mov    r10,rcx
2b26:	49 c7 00 00 00 00 00 	mov    QWORD PTR [r8],0x0
2b2d:	0f 84 85 00 00 00    	je     2bb8 <base2msbf_decode_ctx+0x98>
2b33:	4c 8d 4e 01          	lea    r9,[rsi+0x1]
2b37:	48 8d 74 16 01       	lea    rsi,[rsi+rdx*1+0x1]
2b3c:	eb 1a                	jmp    2b58 <base2msbf_decode_ctx+0x38>
2b3e:	66 90                	xchg   ax,ax
2b40:	c1 e0 07             	shl    eax,0x7
2b43:	c7 07 07 00 00 00    	mov    DWORD PTR [rdi],0x7
2b49:	44 09 d8             	or     eax,r11d
2b4c:	89 47 04             	mov    DWORD PTR [rdi+0x4],eax
2b4f:	49 83 c1 01          	add    r9,0x1
2b53:	49 39 f1             	cmp    r9,rsi
2b56:	74 55                	je     2bad <base2msbf_decode_ctx+0x8d>
2b58:	41 0f b6 51 ff       	movzx  edx,BYTE PTR [r9-0x1]
2b5d:	80 fa 0a             	cmp    dl,0xa
2b60:	74 ed                	je     2b4f <base2msbf_decode_ctx+0x2f>
2b62:	8d 42 d0             	lea    eax,[rdx-0x30]
2b65:	3c 01                	cmp    al,0x1
2b67:	77 57                	ja     2bc0 <base2msbf_decode_ctx+0xa0>
2b69:	8b 0f                	mov    ecx,DWORD PTR [rdi]
2b6b:	31 c0                	xor    eax,eax
2b6d:	80 fa 31             	cmp    dl,0x31
2b70:	0f 94 c0             	sete   al
2b73:	44 8b 5f 04          	mov    r11d,DWORD PTR [rdi+0x4]
2b77:	85 c9                	test   ecx,ecx
2b79:	74 c5                	je     2b40 <base2msbf_decode_ctx+0x20>
2b7b:	83 e9 01             	sub    ecx,0x1
2b7e:	d3 e0                	shl    eax,cl
2b80:	89 0f                	mov    DWORD PTR [rdi],ecx
2b82:	44 09 d8             	or     eax,r11d
2b85:	85 c9                	test   ecx,ecx
2b87:	89 47 04             	mov    DWORD PTR [rdi+0x4],eax
2b8a:	75 c3                	jne    2b4f <base2msbf_decode_ctx+0x2f>
2b8c:	49 83 c1 01          	add    r9,0x1
2b90:	41 88 02             	mov    BYTE PTR [r10],al
2b93:	c7 47 04 00 00 00 00 	mov    DWORD PTR [rdi+0x4],0x0
2b9a:	49 83 c2 01          	add    r10,0x1
2b9e:	49 83 00 01          	add    QWORD PTR [r8],0x1
2ba2:	49 39 f1             	cmp    r9,rsi
2ba5:	c7 07 00 00 00 00    	mov    DWORD PTR [rdi],0x0
2bab:	75 ab                	jne    2b58 <base2msbf_decode_ctx+0x38>
2bad:	b8 01 00 00 00       	mov    eax,0x1
2bb2:	c3                   	ret
2bb3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
2bb8:	8b 07                	mov    eax,DWORD PTR [rdi]
2bba:	85 c0                	test   eax,eax
2bbc:	0f 94 c0             	sete   al
2bbf:	c3                   	ret
2bc0:	31 c0                	xor    eax,eax
2bc2:	c3                   	ret
2bc3:	0f 1f 00             	nop    DWORD PTR [rax]
2bc6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
2bcd:	00 00 00

0000000000002bd0 <z85_encode>:
2bd0:	41 55                	push   r13
2bd2:	41 54                	push   r12
2bd4:	55                   	push   rbp
2bd5:	53                   	push   rbx
2bd6:	48 83 ec 18          	sub    rsp,0x18
2bda:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
2be1:	00 00
2be3:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
2be8:	31 c0                	xor    eax,eax
2bea:	48 85 f6             	test   rsi,rsi
2bed:	0f 84 d1 00 00 00    	je     2cc4 <z85_encode+0xf4>
2bf3:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
2bf6:	4c 8d 4f 01          	lea    r9,[rdi+0x1]
2bfa:	48 01 fe             	add    rsi,rdi
2bfd:	49 89 d3             	mov    r11,rdx
2c00:	45 31 d2             	xor    r10d,r10d
2c03:	bf c1 c0 c0 c0       	mov    edi,0xc0c0c0c1
2c08:	48 8d 1d d1 50 00 00 	lea    rbx,[rip+0x50d1]        # 7ce0 <z85_encoding>
2c0f:	88 44 24 04          	mov    BYTE PTR [rsp+0x4],al
2c13:	b8 01 00 00 00       	mov    eax,0x1
2c18:	eb 09                	jmp    2c23 <z85_encode+0x53>
2c1a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
2c20:	48 63 c2             	movsxd rax,edx
2c23:	4c 39 ce             	cmp    rsi,r9
2c26:	0f 84 94 00 00 00    	je     2cc0 <z85_encode+0xf0>
2c2c:	49 83 c1 01          	add    r9,0x1
2c30:	45 0f b6 41 ff       	movzx  r8d,BYTE PTR [r9-0x1]
2c35:	8d 50 01             	lea    edx,[rax+0x1]
2c38:	83 fa 04             	cmp    edx,0x4
2c3b:	44 88 44 04 04       	mov    BYTE PTR [rsp+rax*1+0x4],r8b
2c40:	75 de                	jne    2c20 <z85_encode+0x50>
2c42:	0f b6 44 24 04       	movzx  eax,BYTE PTR [rsp+0x4]
2c47:	44 0f b6 44 24 05    	movzx  r8d,BYTE PTR [rsp+0x5]
2c4d:	4d 89 dd             	mov    r13,r11
2c50:	49 8d 6a 04          	lea    rbp,[r10+0x4]
2c54:	4d 8d 62 ff          	lea    r12,[r10-0x1]
2c58:	4d 29 d5             	sub    r13,r10
2c5b:	41 c1 e0 10          	shl    r8d,0x10
2c5f:	c1 e0 18             	shl    eax,0x18
2c62:	42 8d 04 00          	lea    eax,[rax+r8*1]
2c66:	44 0f b6 44 24 06    	movzx  r8d,BYTE PTR [rsp+0x6]
2c6c:	41 c1 e0 08          	shl    r8d,0x8
2c70:	41 01 c0             	add    r8d,eax
2c73:	0f b6 44 24 07       	movzx  eax,BYTE PTR [rsp+0x7]
2c78:	41 01 c0             	add    r8d,eax
2c7b:	44 89 c0             	mov    eax,r8d
2c7e:	f7 e7                	mul    edi
2c80:	c1 ea 06             	shr    edx,0x6
2c83:	48 39 cd             	cmp    rbp,rcx
2c86:	73 13                	jae    2c9b <z85_encode+0xcb>
2c88:	6b c2 55             	imul   eax,edx,0x55
2c8b:	41 29 c0             	sub    r8d,eax
2c8e:	4d 63 c0             	movsxd r8,r8d
2c91:	42 0f b6 04 03       	movzx  eax,BYTE PTR [rbx+r8*1]
2c96:	41 88 44 2d 00       	mov    BYTE PTR [r13+rbp*1+0x0],al
2c9b:	48 83 ed 01          	sub    rbp,0x1
2c9f:	41 89 d0             	mov    r8d,edx
2ca2:	4c 39 e5             	cmp    rbp,r12
2ca5:	75 d4                	jne    2c7b <z85_encode+0xab>
2ca7:	49 83 c3 05          	add    r11,0x5
2cab:	49 83 c2 05          	add    r10,0x5
2caf:	31 d2                	xor    edx,edx
2cb1:	e9 6a ff ff ff       	jmp    2c20 <z85_encode+0x50>
2cb6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
2cbd:	00 00 00
2cc0:	85 c0                	test   eax,eax
2cc2:	75 1b                	jne    2cdf <z85_encode+0x10f>
2cc4:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
2cc9:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
2cd0:	00 00
2cd2:	75 2f                	jne    2d03 <z85_encode+0x133>
2cd4:	48 83 c4 18          	add    rsp,0x18
2cd8:	5b                   	pop    rbx
2cd9:	5d                   	pop    rbp
2cda:	41 5c                	pop    r12
2cdc:	41 5d                	pop    r13
2cde:	c3                   	ret
2cdf:	48 8d 35 52 48 00 00 	lea    rsi,[rip+0x4852]        # 7538 <_IO_stdin_used+0x218>
2ce6:	ba 05 00 00 00       	mov    edx,0x5
2ceb:	31 ff                	xor    edi,edi
2ced:	e8 3e e9 ff ff       	call   1630 <dcgettext@plt>
2cf2:	31 f6                	xor    esi,esi
2cf4:	48 89 c2             	mov    rdx,rax
2cf7:	bf 01 00 00 00       	mov    edi,0x1
2cfc:	31 c0                	xor    eax,eax
2cfe:	e8 0d eb ff ff       	call   1810 <error@plt>
2d03:	e8 58 e9 ff ff       	call   1660 <__stack_chk_fail@plt>
2d08:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
2d0f:	00

0000000000002d10 <base32hex_encode>:
2d10:	55                   	push   rbp
2d11:	53                   	push   rbx
2d12:	48 89 cd             	mov    rbp,rcx
2d15:	48 89 d3             	mov    rbx,rdx
2d18:	48 83 ec 08          	sub    rsp,0x8
2d1c:	e8 ef 08 00 00       	call   3610 <base32_encode>
2d21:	48 85 ed             	test   rbp,rbp
2d24:	74 3a                	je     2d60 <base32hex_encode+0x50>
2d26:	0f be 03             	movsx  eax,BYTE PTR [rbx]
2d29:	8d 50 ce             	lea    edx,[rax-0x32]
2d2c:	80 fa 28             	cmp    dl,0x28
2d2f:	77 36                	ja     2d67 <base32hex_encode+0x57>
2d31:	48 8d 0c 2b          	lea    rcx,[rbx+rbp*1]
2d35:	48 8d 35 64 50 00 00 	lea    rsi,[rip+0x5064]        # 7da0 <base32_norm_to_hex>
2d3c:	eb 0d                	jmp    2d4b <base32hex_encode+0x3b>
2d3e:	66 90                	xchg   ax,ax
2d40:	0f be 03             	movsx  eax,BYTE PTR [rbx]
2d43:	8d 50 ce             	lea    edx,[rax-0x32]
2d46:	80 fa 28             	cmp    dl,0x28
2d49:	77 1c                	ja     2d67 <base32hex_encode+0x57>
2d4b:	83 e8 32             	sub    eax,0x32
2d4e:	48 83 c3 01          	add    rbx,0x1
2d52:	48 98                	cdqe
2d54:	0f b6 04 06          	movzx  eax,BYTE PTR [rsi+rax*1]
2d58:	88 43 ff             	mov    BYTE PTR [rbx-0x1],al
2d5b:	48 39 cb             	cmp    rbx,rcx
2d5e:	75 e0                	jne    2d40 <base32hex_encode+0x30>
2d60:	48 83 c4 08          	add    rsp,0x8
2d64:	5b                   	pop    rbx
2d65:	5d                   	pop    rbp
2d66:	c3                   	ret
2d67:	48 8d 0d f2 4e 00 00 	lea    rcx,[rip+0x4ef2]        # 7c60 <__PRETTY_FUNCTION__.7847>
2d6e:	48 8d 35 fb 47 00 00 	lea    rsi,[rip+0x47fb]        # 7570 <_IO_stdin_used+0x250>
2d75:	48 8d 3d c0 45 00 00 	lea    rdi,[rip+0x45c0]        # 733c <_IO_stdin_used+0x1c>
2d7c:	ba c2 01 00 00       	mov    edx,0x1c2
2d81:	e8 4a e9 ff ff       	call   16d0 <__assert_fail@plt>
2d86:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
2d8d:	00 00 00

0000000000002d90 <base64url_decode_ctx_wrapper>:
2d90:	41 56                	push   r14
2d92:	41 55                	push   r13
2d94:	49 89 f6             	mov    r14,rsi
2d97:	41 54                	push   r12
2d99:	55                   	push   rbp
2d9a:	49 89 d5             	mov    r13,rdx
2d9d:	53                   	push   rbx
2d9e:	48 89 fb             	mov    rbx,rdi
2da1:	48 89 cd             	mov    rbp,rcx
2da4:	48 3b 53 18          	cmp    rdx,QWORD PTR [rbx+0x18]
2da8:	4d 89 c4             	mov    r12,r8
2dab:	48 8b 7f 10          	mov    rdi,QWORD PTR [rdi+0x10]
2daf:	0f 87 9b 00 00 00    	ja     2e50 <base64url_decode_ctx_wrapper+0xc0>
2db5:	4c 89 f6             	mov    rsi,r14
2db8:	4c 89 ea             	mov    rdx,r13
2dbb:	e8 a0 e9 ff ff       	call   1760 <memcpy@plt>
2dc0:	4d 85 ed             	test   r13,r13
2dc3:	48 8b 73 10          	mov    rsi,QWORD PTR [rbx+0x10]
2dc7:	74 48                	je     2e11 <base64url_decode_ctx_wrapper+0x81>
2dc9:	0f b6 06             	movzx  eax,BYTE PTR [rsi]
2dcc:	4a 8d 0c 2e          	lea    rcx,[rsi+r13*1]
2dd0:	89 c2                	mov    edx,eax
2dd2:	83 e2 fb             	and    edx,0xfffffffb
2dd5:	80 fa 2b             	cmp    dl,0x2b
2dd8:	75 23                	jne    2dfd <base64url_decode_ctx_wrapper+0x6d>
2dda:	eb 5c                	jmp    2e38 <base64url_decode_ctx_wrapper+0xa8>
2ddc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
2de0:	3c 5f                	cmp    al,0x5f
2de2:	75 03                	jne    2de7 <base64url_decode_ctx_wrapper+0x57>
2de4:	c6 06 2f             	mov    BYTE PTR [rsi],0x2f
2de7:	48 83 c6 01          	add    rsi,0x1
2deb:	48 39 ce             	cmp    rsi,rcx
2dee:	74 1d                	je     2e0d <base64url_decode_ctx_wrapper+0x7d>
2df0:	0f b6 06             	movzx  eax,BYTE PTR [rsi]
2df3:	89 c2                	mov    edx,eax
2df5:	83 e2 fb             	and    edx,0xfffffffb
2df8:	80 fa 2b             	cmp    dl,0x2b
2dfb:	74 3b                	je     2e38 <base64url_decode_ctx_wrapper+0xa8>
2dfd:	3c 2d                	cmp    al,0x2d
2dff:	75 df                	jne    2de0 <base64url_decode_ctx_wrapper+0x50>
2e01:	c6 06 2b             	mov    BYTE PTR [rsi],0x2b
2e04:	48 83 c6 01          	add    rsi,0x1
2e08:	48 39 ce             	cmp    rsi,rcx
2e0b:	75 e3                	jne    2df0 <base64url_decode_ctx_wrapper+0x60>
2e0d:	48 8b 73 10          	mov    rsi,QWORD PTR [rbx+0x10]
2e11:	48 8d 7b 04          	lea    rdi,[rbx+0x4]
2e15:	4c 89 ea             	mov    rdx,r13
2e18:	4d 89 e0             	mov    r8,r12
2e1b:	48 89 e9             	mov    rcx,rbp
2e1e:	e8 cd 11 00 00       	call   3ff0 <base64_decode_ctx>
2e23:	8b 53 04             	mov    edx,DWORD PTR [rbx+0x4]
2e26:	89 13                	mov    DWORD PTR [rbx],edx
2e28:	5b                   	pop    rbx
2e29:	5d                   	pop    rbp
2e2a:	41 5c                	pop    r12
2e2c:	41 5d                	pop    r13
2e2e:	41 5e                	pop    r14
2e30:	c3                   	ret
2e31:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
2e38:	5b                   	pop    rbx
2e39:	49 c7 04 24 00 00 00 	mov    QWORD PTR [r12],0x0
2e40:	00
2e41:	31 c0                	xor    eax,eax
2e43:	5d                   	pop    rbp
2e44:	41 5c                	pop    r12
2e46:	41 5d                	pop    r13
2e48:	41 5e                	pop    r14
2e4a:	c3                   	ret
2e4b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
2e50:	48 8d 34 12          	lea    rsi,[rdx+rdx*1]
2e54:	48 85 f6             	test   rsi,rsi
2e57:	48 89 73 18          	mov    QWORD PTR [rbx+0x18],rsi
2e5b:	78 11                	js     2e6e <base64url_decode_ctx_wrapper+0xde>
2e5d:	e8 be 39 00 00       	call   6820 <xrealloc>
2e62:	48 89 c7             	mov    rdi,rax
2e65:	48 89 43 10          	mov    QWORD PTR [rbx+0x10],rax
2e69:	e9 47 ff ff ff       	jmp    2db5 <base64url_decode_ctx_wrapper+0x25>
2e6e:	e8 9d 3b 00 00       	call   6a10 <xalloc_die>
2e73:	0f 1f 00             	nop    DWORD PTR [rax]
2e76:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
2e7d:	00 00 00

0000000000002e80 <base32hex_decode_ctx_wrapper>:
2e80:	55                   	push   rbp
2e81:	53                   	push   rbx
2e82:	48 89 f5             	mov    rbp,rsi
2e85:	48 89 fb             	mov    rbx,rdi
2e88:	48 83 ec 28          	sub    rsp,0x28
2e8c:	48 3b 57 18          	cmp    rdx,QWORD PTR [rdi+0x18]
2e90:	48 8b 47 10          	mov    rax,QWORD PTR [rdi+0x10]
2e94:	77 7a                	ja     2f10 <base32hex_decode_ctx_wrapper+0x90>
2e96:	48 85 d2             	test   rdx,rdx
2e99:	74 57                	je     2ef2 <base32hex_decode_ctx_wrapper+0x72>
2e9b:	45 31 c9             	xor    r9d,r9d
2e9e:	4c 8d 1d bb 4e 00 00 	lea    r11,[rip+0x4ebb]        # 7d60 <base32_hex_to_norm>
2ea5:	eb 1f                	jmp    2ec6 <base32hex_decode_ctx_wrapper+0x46>
2ea7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
2eae:	00 00
2eb0:	8d 7e bf             	lea    edi,[rsi-0x41]
2eb3:	40 80 ff 15          	cmp    dil,0x15
2eb7:	76 1d                	jbe    2ed6 <base32hex_decode_ctx_wrapper+0x56>
2eb9:	42 88 34 08          	mov    BYTE PTR [rax+r9*1],sil
2ebd:	49 83 c1 01          	add    r9,0x1
2ec1:	4c 39 ca             	cmp    rdx,r9
2ec4:	74 28                	je     2eee <base32hex_decode_ctx_wrapper+0x6e>
2ec6:	42 0f be 74 0d 00    	movsx  esi,BYTE PTR [rbp+r9*1+0x0]
2ecc:	44 8d 56 d0          	lea    r10d,[rsi-0x30]
2ed0:	41 80 fa 09          	cmp    r10b,0x9
2ed4:	77 da                	ja     2eb0 <base32hex_decode_ctx_wrapper+0x30>
2ed6:	83 ee 30             	sub    esi,0x30
2ed9:	48 63 f6             	movsxd rsi,esi
2edc:	41 0f b6 34 33       	movzx  esi,BYTE PTR [r11+rsi*1]
2ee1:	42 88 34 08          	mov    BYTE PTR [rax+r9*1],sil
2ee5:	49 83 c1 01          	add    r9,0x1
2ee9:	4c 39 ca             	cmp    rdx,r9
2eec:	75 d8                	jne    2ec6 <base32hex_decode_ctx_wrapper+0x46>
2eee:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
2ef2:	48 8d 7b 04          	lea    rdi,[rbx+0x4]
2ef6:	48 89 c6             	mov    rsi,rax
2ef9:	e8 f2 09 00 00       	call   38f0 <base32_decode_ctx>
2efe:	8b 53 04             	mov    edx,DWORD PTR [rbx+0x4]
2f01:	89 13                	mov    DWORD PTR [rbx],edx
2f03:	48 83 c4 28          	add    rsp,0x28
2f07:	5b                   	pop    rbx
2f08:	5d                   	pop    rbp
2f09:	c3                   	ret
2f0a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
2f10:	48 8d 34 12          	lea    rsi,[rdx+rdx*1]
2f14:	4c 89 44 24 18       	mov    QWORD PTR [rsp+0x18],r8
2f19:	48 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],rcx
2f1e:	48 89 54 24 08       	mov    QWORD PTR [rsp+0x8],rdx
2f23:	48 85 f6             	test   rsi,rsi
2f26:	48 89 77 18          	mov    QWORD PTR [rdi+0x18],rsi
2f2a:	78 20                	js     2f4c <base32hex_decode_ctx_wrapper+0xcc>
2f2c:	48 89 c7             	mov    rdi,rax
2f2f:	e8 ec 38 00 00       	call   6820 <xrealloc>
2f34:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
2f39:	48 89 43 10          	mov    QWORD PTR [rbx+0x10],rax
2f3d:	48 8b 4c 24 10       	mov    rcx,QWORD PTR [rsp+0x10]
2f42:	4c 8b 44 24 18       	mov    r8,QWORD PTR [rsp+0x18]
2f47:	e9 4a ff ff ff       	jmp    2e96 <base32hex_decode_ctx_wrapper+0x16>
2f4c:	e8 bf 3a 00 00       	call   6a10 <xalloc_die>
2f51:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
2f56:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
2f5d:	00 00 00

0000000000002f60 <usage>:
2f60:	41 55                	push   r13
2f62:	41 54                	push   r12
2f64:	ba 05 00 00 00       	mov    edx,0x5
2f69:	55                   	push   rbp
2f6a:	53                   	push   rbx
2f6b:	89 fd                	mov    ebp,edi
2f6d:	48 81 ec 88 00 00 00 	sub    rsp,0x88
2f74:	48 8b 1d 8d 81 20 00 	mov    rbx,QWORD PTR [rip+0x20818d]        # 20b108 <program_name>
2f7b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
2f82:	00 00
2f84:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
2f89:	31 c0                	xor    eax,eax
2f8b:	85 ff                	test   edi,edi
2f8d:	74 2e                	je     2fbd <usage+0x5d>
2f8f:	48 8d 35 fa 45 00 00 	lea    rsi,[rip+0x45fa]        # 7590 <_IO_stdin_used+0x270>
2f96:	31 ff                	xor    edi,edi
2f98:	e8 93 e6 ff ff       	call   1630 <dcgettext@plt>
2f9d:	48 8b 3d 1c 81 20 00 	mov    rdi,QWORD PTR [rip+0x20811c]        # 20b0c0 <stderr@@GLIBC_2.2.5>
2fa4:	48 89 c2             	mov    rdx,rax
2fa7:	48 89 d9             	mov    rcx,rbx
2faa:	be 01 00 00 00       	mov    esi,0x1
2faf:	31 c0                	xor    eax,eax
2fb1:	e8 ba e8 ff ff       	call   1870 <__fprintf_chk@plt>
2fb6:	89 ef                	mov    edi,ebp
2fb8:	e8 93 e8 ff ff       	call   1850 <exit@plt>
2fbd:	48 8d 35 98 43 00 00 	lea    rsi,[rip+0x4398]        # 735c <_IO_stdin_used+0x3c>
2fc4:	31 ff                	xor    edi,edi
2fc6:	e8 65 e6 ff ff       	call   1630 <dcgettext@plt>
2fcb:	48 89 da             	mov    rdx,rbx
2fce:	48 89 c6             	mov    rsi,rax
2fd1:	bf 01 00 00 00       	mov    edi,0x1
2fd6:	31 c0                	xor    eax,eax
2fd8:	e8 13 e8 ff ff       	call   17f0 <__printf_chk@plt>
2fdd:	48 8b 1d a4 80 20 00 	mov    rbx,QWORD PTR [rip+0x2080a4]        # 20b088 <stdout@@GLIBC_2.2.5>
2fe4:	48 8d 35 cd 45 00 00 	lea    rsi,[rip+0x45cd]        # 75b8 <_IO_stdin_used+0x298>
2feb:	ba 05 00 00 00       	mov    edx,0x5
2ff0:	31 ff                	xor    edi,edi
2ff2:	e8 39 e6 ff ff       	call   1630 <dcgettext@plt>
2ff7:	48 89 de             	mov    rsi,rbx
2ffa:	48 89 c7             	mov    rdi,rax
2ffd:	e8 2e e7 ff ff       	call   1730 <fputs_unlocked@plt>
3002:	48 8b 1d 7f 80 20 00 	mov    rbx,QWORD PTR [rip+0x20807f]        # 20b088 <stdout@@GLIBC_2.2.5>
3009:	48 8d 35 f0 45 00 00 	lea    rsi,[rip+0x45f0]        # 7600 <_IO_stdin_used+0x2e0>
3010:	ba 05 00 00 00       	mov    edx,0x5
3015:	31 ff                	xor    edi,edi
3017:	e8 14 e6 ff ff       	call   1630 <dcgettext@plt>
301c:	48 89 de             	mov    rsi,rbx
301f:	48 89 c7             	mov    rdi,rax
3022:	e8 09 e7 ff ff       	call   1730 <fputs_unlocked@plt>
3027:	48 8b 1d 5a 80 20 00 	mov    rbx,QWORD PTR [rip+0x20805a]        # 20b088 <stdout@@GLIBC_2.2.5>
302e:	48 8d 35 03 46 00 00 	lea    rsi,[rip+0x4603]        # 7638 <_IO_stdin_used+0x318>
3035:	ba 05 00 00 00       	mov    edx,0x5
303a:	31 ff                	xor    edi,edi
303c:	e8 ef e5 ff ff       	call   1630 <dcgettext@plt>
3041:	48 89 de             	mov    rsi,rbx
3044:	48 89 c7             	mov    rdi,rax
3047:	e8 e4 e6 ff ff       	call   1730 <fputs_unlocked@plt>
304c:	48 8b 1d 35 80 20 00 	mov    rbx,QWORD PTR [rip+0x208035]        # 20b088 <stdout@@GLIBC_2.2.5>
3053:	48 8d 35 2e 46 00 00 	lea    rsi,[rip+0x462e]        # 7688 <_IO_stdin_used+0x368>
305a:	ba 05 00 00 00       	mov    edx,0x5
305f:	31 ff                	xor    edi,edi
3061:	e8 ca e5 ff ff       	call   1630 <dcgettext@plt>
3066:	48 89 de             	mov    rsi,rbx
3069:	48 89 c7             	mov    rdi,rax
306c:	e8 bf e6 ff ff       	call   1730 <fputs_unlocked@plt>
3071:	48 8b 1d 10 80 20 00 	mov    rbx,QWORD PTR [rip+0x208010]        # 20b088 <stdout@@GLIBC_2.2.5>
3078:	48 8d 35 51 46 00 00 	lea    rsi,[rip+0x4651]        # 76d0 <_IO_stdin_used+0x3b0>
307f:	ba 05 00 00 00       	mov    edx,0x5
3084:	31 ff                	xor    edi,edi
3086:	e8 a5 e5 ff ff       	call   1630 <dcgettext@plt>
308b:	48 89 de             	mov    rsi,rbx
308e:	48 89 c7             	mov    rdi,rax
3091:	e8 9a e6 ff ff       	call   1730 <fputs_unlocked@plt>
3096:	48 8b 1d eb 7f 20 00 	mov    rbx,QWORD PTR [rip+0x207feb]        # 20b088 <stdout@@GLIBC_2.2.5>
309d:	48 8d 35 74 46 00 00 	lea    rsi,[rip+0x4674]        # 7718 <_IO_stdin_used+0x3f8>
30a4:	ba 05 00 00 00       	mov    edx,0x5
30a9:	31 ff                	xor    edi,edi
30ab:	e8 80 e5 ff ff       	call   1630 <dcgettext@plt>
30b0:	48 89 de             	mov    rsi,rbx
30b3:	48 89 c7             	mov    rdi,rax
30b6:	e8 75 e6 ff ff       	call   1730 <fputs_unlocked@plt>
30bb:	48 8b 1d c6 7f 20 00 	mov    rbx,QWORD PTR [rip+0x207fc6]        # 20b088 <stdout@@GLIBC_2.2.5>
30c2:	48 8d 35 97 46 00 00 	lea    rsi,[rip+0x4697]        # 7760 <_IO_stdin_used+0x440>
30c9:	ba 05 00 00 00       	mov    edx,0x5
30ce:	31 ff                	xor    edi,edi
30d0:	e8 5b e5 ff ff       	call   1630 <dcgettext@plt>
30d5:	48 89 de             	mov    rsi,rbx
30d8:	48 89 c7             	mov    rdi,rax
30db:	e8 50 e6 ff ff       	call   1730 <fputs_unlocked@plt>
30e0:	48 8b 1d a1 7f 20 00 	mov    rbx,QWORD PTR [rip+0x207fa1]        # 20b088 <stdout@@GLIBC_2.2.5>
30e7:	48 8d 35 c2 46 00 00 	lea    rsi,[rip+0x46c2]        # 77b0 <_IO_stdin_used+0x490>
30ee:	ba 05 00 00 00       	mov    edx,0x5
30f3:	31 ff                	xor    edi,edi
30f5:	e8 36 e5 ff ff       	call   1630 <dcgettext@plt>
30fa:	48 89 de             	mov    rsi,rbx
30fd:	48 89 c7             	mov    rdi,rax
3100:	e8 2b e6 ff ff       	call   1730 <fputs_unlocked@plt>
3105:	48 8b 1d 7c 7f 20 00 	mov    rbx,QWORD PTR [rip+0x207f7c]        # 20b088 <stdout@@GLIBC_2.2.5>
310c:	48 8d 35 dd 46 00 00 	lea    rsi,[rip+0x46dd]        # 77f0 <_IO_stdin_used+0x4d0>
3113:	ba 05 00 00 00       	mov    edx,0x5
3118:	31 ff                	xor    edi,edi
311a:	e8 11 e5 ff ff       	call   1630 <dcgettext@plt>
311f:	48 89 de             	mov    rsi,rbx
3122:	48 89 c7             	mov    rdi,rax
3125:	e8 06 e6 ff ff       	call   1730 <fputs_unlocked@plt>
312a:	48 8b 1d 57 7f 20 00 	mov    rbx,QWORD PTR [rip+0x207f57]        # 20b088 <stdout@@GLIBC_2.2.5>
3131:	48 8d 35 08 47 00 00 	lea    rsi,[rip+0x4708]        # 7840 <_IO_stdin_used+0x520>
3138:	ba 05 00 00 00       	mov    edx,0x5
313d:	31 ff                	xor    edi,edi
313f:	e8 ec e4 ff ff       	call   1630 <dcgettext@plt>
3144:	48 89 de             	mov    rsi,rbx
3147:	48 89 c7             	mov    rdi,rax
314a:	e8 e1 e5 ff ff       	call   1730 <fputs_unlocked@plt>
314f:	48 8b 1d 32 7f 20 00 	mov    rbx,QWORD PTR [rip+0x207f32]        # 20b088 <stdout@@GLIBC_2.2.5>
3156:	48 8d 35 33 47 00 00 	lea    rsi,[rip+0x4733]        # 7890 <_IO_stdin_used+0x570>
315d:	ba 05 00 00 00       	mov    edx,0x5
3162:	31 ff                	xor    edi,edi
3164:	e8 c7 e4 ff ff       	call   1630 <dcgettext@plt>
3169:	48 89 de             	mov    rsi,rbx
316c:	48 89 c7             	mov    rdi,rax
316f:	e8 bc e5 ff ff       	call   1730 <fputs_unlocked@plt>
3174:	48 8b 1d 0d 7f 20 00 	mov    rbx,QWORD PTR [rip+0x207f0d]        # 20b088 <stdout@@GLIBC_2.2.5>
317b:	48 8d 35 06 48 00 00 	lea    rsi,[rip+0x4806]        # 7988 <_IO_stdin_used+0x668>
3182:	ba 05 00 00 00       	mov    edx,0x5
3187:	31 ff                	xor    edi,edi
3189:	e8 a2 e4 ff ff       	call   1630 <dcgettext@plt>
318e:	48 89 de             	mov    rsi,rbx
3191:	48 89 c7             	mov    rdi,rax
3194:	e8 97 e5 ff ff       	call   1730 <fputs_unlocked@plt>
3199:	48 8b 1d e8 7e 20 00 	mov    rbx,QWORD PTR [rip+0x207ee8]        # 20b088 <stdout@@GLIBC_2.2.5>
31a0:	48 8d 35 c1 48 00 00 	lea    rsi,[rip+0x48c1]        # 7a68 <_IO_stdin_used+0x748>
31a7:	ba 05 00 00 00       	mov    edx,0x5
31ac:	31 ff                	xor    edi,edi
31ae:	e8 7d e4 ff ff       	call   1630 <dcgettext@plt>
31b3:	48 89 de             	mov    rsi,rbx
31b6:	48 89 c7             	mov    rdi,rax
31b9:	e8 72 e5 ff ff       	call   1730 <fputs_unlocked@plt>
31be:	48 8b 1d c3 7e 20 00 	mov    rbx,QWORD PTR [rip+0x207ec3]        # 20b088 <stdout@@GLIBC_2.2.5>
31c5:	48 8d 35 cc 48 00 00 	lea    rsi,[rip+0x48cc]        # 7a98 <_IO_stdin_used+0x778>
31cc:	ba 05 00 00 00       	mov    edx,0x5
31d1:	31 ff                	xor    edi,edi
31d3:	e8 58 e4 ff ff       	call   1630 <dcgettext@plt>
31d8:	48 89 de             	mov    rsi,rbx
31db:	48 89 c7             	mov    rdi,rax
31de:	e8 4d e5 ff ff       	call   1730 <fputs_unlocked@plt>
31e3:	48 8b 1d 9e 7e 20 00 	mov    rbx,QWORD PTR [rip+0x207e9e]        # 20b088 <stdout@@GLIBC_2.2.5>
31ea:	48 8d 35 df 48 00 00 	lea    rsi,[rip+0x48df]        # 7ad0 <_IO_stdin_used+0x7b0>
31f1:	ba 05 00 00 00       	mov    edx,0x5
31f6:	31 ff                	xor    edi,edi
31f8:	e8 33 e4 ff ff       	call   1630 <dcgettext@plt>
31fd:	48 89 de             	mov    rsi,rbx
3200:	48 89 c7             	mov    rdi,rax
3203:	48 8d 1d 4b 41 00 00 	lea    rbx,[rip+0x414b]        # 7355 <_IO_stdin_used+0x35>
320a:	e8 21 e5 ff ff       	call   1730 <fputs_unlocked@plt>
320f:	48 8d 05 64 41 00 00 	lea    rax,[rip+0x4164]        # 737a <_IO_stdin_used+0x5a>
3216:	48 8d 0d 9e 41 00 00 	lea    rcx,[rip+0x419e]        # 73bb <_IO_stdin_used+0x9b>
321d:	48 c7 44 24 60 00 00 	mov    QWORD PTR [rsp+0x60],0x0
3224:	00 00
3226:	48 c7 44 24 68 00 00 	mov    QWORD PTR [rsp+0x68],0x0
322d:	00 00
322f:	48 89 e2             	mov    rdx,rsp
3232:	48 89 04 24          	mov    QWORD PTR [rsp],rax
3236:	48 8d 05 3f 41 00 00 	lea    rax,[rip+0x413f]        # 737c <_IO_stdin_used+0x5c>
323d:	48 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],rcx
3242:	48 8d 0d 7c 41 00 00 	lea    rcx,[rip+0x417c]        # 73c5 <_IO_stdin_used+0xa5>
3249:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
324e:	48 8d 05 9f 41 00 00 	lea    rax,[rip+0x419f]        # 73f4 <_IO_stdin_used+0xd4>
3255:	48 89 4c 24 40       	mov    QWORD PTR [rsp+0x40],rcx
325a:	48 8d 0d 6e 41 00 00 	lea    rcx,[rip+0x416e]        # 73cf <_IO_stdin_used+0xaf>
3261:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
3266:	48 8d 05 1f 41 00 00 	lea    rax,[rip+0x411f]        # 738c <_IO_stdin_used+0x6c>
326d:	48 89 4c 24 50       	mov    QWORD PTR [rsp+0x50],rcx
3272:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
3277:	48 8d 05 24 41 00 00 	lea    rax,[rip+0x4124]        # 73a2 <_IO_stdin_used+0x82>
327e:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
3283:	48 8d 05 22 41 00 00 	lea    rax,[rip+0x4122]        # 73ac <_IO_stdin_used+0x8c>
328a:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
328f:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
3294:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
3299:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
329e:	66 90                	xchg   ax,ax
32a0:	48 83 c2 10          	add    rdx,0x10
32a4:	48 8b 3a             	mov    rdi,QWORD PTR [rdx]
32a7:	48 85 ff             	test   rdi,rdi
32aa:	74 13                	je     32bf <usage+0x35f>
32ac:	b9 07 00 00 00       	mov    ecx,0x7
32b1:	48 89 de             	mov    rsi,rbx
32b4:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
32b6:	0f 97 c0             	seta   al
32b9:	1c 00                	sbb    al,0x0
32bb:	84 c0                	test   al,al
32bd:	75 e1                	jne    32a0 <usage+0x340>
32bf:	4c 8b 62 08          	mov    r12,QWORD PTR [rdx+0x8]
32c3:	31 ff                	xor    edi,edi
32c5:	ba 05 00 00 00       	mov    edx,0x5
32ca:	48 8d 35 08 41 00 00 	lea    rsi,[rip+0x4108]        # 73d9 <_IO_stdin_used+0xb9>
32d1:	4d 85 e4             	test   r12,r12
32d4:	0f 84 c1 00 00 00    	je     339b <usage+0x43b>
32da:	e8 51 e3 ff ff       	call   1630 <dcgettext@plt>
32df:	48 8d 0d b2 48 00 00 	lea    rcx,[rip+0x48b2]        # 7b98 <_IO_stdin_used+0x878>
32e6:	48 8d 15 03 41 00 00 	lea    rdx,[rip+0x4103]        # 73f0 <_IO_stdin_used+0xd0>
32ed:	48 89 c6             	mov    rsi,rax
32f0:	bf 01 00 00 00       	mov    edi,0x1
32f5:	31 c0                	xor    eax,eax
32f7:	e8 f4 e4 ff ff       	call   17f0 <__printf_chk@plt>
32fc:	31 f6                	xor    esi,esi
32fe:	bf 05 00 00 00       	mov    edi,0x5
3303:	e8 d8 e4 ff ff       	call   17e0 <setlocale@plt>
3308:	48 85 c0             	test   rax,rax
330b:	74 1c                	je     3329 <usage+0x3c9>
330d:	48 8d 35 ea 40 00 00 	lea    rsi,[rip+0x40ea]        # 73fe <_IO_stdin_used+0xde>
3314:	ba 03 00 00 00       	mov    edx,0x3
3319:	48 89 c7             	mov    rdi,rax
331c:	e8 9f e2 ff ff       	call   15c0 <strncmp@plt>
3321:	85 c0                	test   eax,eax
3323:	0f 85 07 01 00 00    	jne    3430 <usage+0x4d0>
3329:	48 8d 35 d2 40 00 00 	lea    rsi,[rip+0x40d2]        # 7402 <_IO_stdin_used+0xe2>
3330:	31 ff                	xor    edi,edi
3332:	ba 05 00 00 00       	mov    edx,0x5
3337:	e8 f4 e2 ff ff       	call   1630 <dcgettext@plt>
333c:	48 8d 0d 12 40 00 00 	lea    rcx,[rip+0x4012]        # 7355 <_IO_stdin_used+0x35>
3343:	48 8d 15 4e 48 00 00 	lea    rdx,[rip+0x484e]        # 7b98 <_IO_stdin_used+0x878>
334a:	48 89 c6             	mov    rsi,rax
334d:	bf 01 00 00 00       	mov    edi,0x1
3352:	31 c0                	xor    eax,eax
3354:	e8 97 e4 ff ff       	call   17f0 <__printf_chk@plt>
3359:	49 39 dc             	cmp    r12,rbx
335c:	48 8d 0d 33 40 00 00 	lea    rcx,[rip+0x4033]        # 7396 <_IO_stdin_used+0x76>
3363:	48 8d 1d 57 52 00 00 	lea    rbx,[rip+0x5257]        # 85c1 <quoting_style_vals+0x81>
336a:	48 0f 44 d9          	cmove  rbx,rcx
336e:	48 8d 35 93 48 00 00 	lea    rsi,[rip+0x4893]        # 7c08 <_IO_stdin_used+0x8e8>
3375:	31 ff                	xor    edi,edi
3377:	ba 05 00 00 00       	mov    edx,0x5
337c:	e8 af e2 ff ff       	call   1630 <dcgettext@plt>
3381:	48 89 d9             	mov    rcx,rbx
3384:	48 89 c6             	mov    rsi,rax
3387:	4c 89 e2             	mov    rdx,r12
338a:	bf 01 00 00 00       	mov    edi,0x1
338f:	31 c0                	xor    eax,eax
3391:	e8 5a e4 ff ff       	call   17f0 <__printf_chk@plt>
3396:	e9 1b fc ff ff       	jmp    2fb6 <usage+0x56>
339b:	e8 90 e2 ff ff       	call   1630 <dcgettext@plt>
33a0:	48 8d 0d f1 47 00 00 	lea    rcx,[rip+0x47f1]        # 7b98 <_IO_stdin_used+0x878>
33a7:	48 8d 15 42 40 00 00 	lea    rdx,[rip+0x4042]        # 73f0 <_IO_stdin_used+0xd0>
33ae:	48 89 c6             	mov    rsi,rax
33b1:	bf 01 00 00 00       	mov    edi,0x1
33b6:	31 c0                	xor    eax,eax
33b8:	e8 33 e4 ff ff       	call   17f0 <__printf_chk@plt>
33bd:	31 f6                	xor    esi,esi
33bf:	bf 05 00 00 00       	mov    edi,0x5
33c4:	e8 17 e4 ff ff       	call   17e0 <setlocale@plt>
33c9:	48 85 c0             	test   rax,rax
33cc:	74 18                	je     33e6 <usage+0x486>
33ce:	48 8d 35 29 40 00 00 	lea    rsi,[rip+0x4029]        # 73fe <_IO_stdin_used+0xde>
33d5:	ba 03 00 00 00       	mov    edx,0x3
33da:	48 89 c7             	mov    rdi,rax
33dd:	e8 de e1 ff ff       	call   15c0 <strncmp@plt>
33e2:	85 c0                	test   eax,eax
33e4:	75 43                	jne    3429 <usage+0x4c9>
33e6:	48 8d 35 15 40 00 00 	lea    rsi,[rip+0x4015]        # 7402 <_IO_stdin_used+0xe2>
33ed:	ba 05 00 00 00       	mov    edx,0x5
33f2:	31 ff                	xor    edi,edi
33f4:	4c 8d 25 5a 3f 00 00 	lea    r12,[rip+0x3f5a]        # 7355 <_IO_stdin_used+0x35>
33fb:	48 8d 1d 94 3f 00 00 	lea    rbx,[rip+0x3f94]        # 7396 <_IO_stdin_used+0x76>
3402:	e8 29 e2 ff ff       	call   1630 <dcgettext@plt>
3407:	48 8d 0d 47 3f 00 00 	lea    rcx,[rip+0x3f47]        # 7355 <_IO_stdin_used+0x35>
340e:	48 8d 15 83 47 00 00 	lea    rdx,[rip+0x4783]        # 7b98 <_IO_stdin_used+0x878>
3415:	48 89 c6             	mov    rsi,rax
3418:	bf 01 00 00 00       	mov    edi,0x1
341d:	31 c0                	xor    eax,eax
341f:	e8 cc e3 ff ff       	call   17f0 <__printf_chk@plt>
3424:	e9 45 ff ff ff       	jmp    336e <usage+0x40e>
3429:	4c 8d 25 25 3f 00 00 	lea    r12,[rip+0x3f25]        # 7355 <_IO_stdin_used+0x35>
3430:	4c 8b 2d 51 7c 20 00 	mov    r13,QWORD PTR [rip+0x207c51]        # 20b088 <stdout@@GLIBC_2.2.5>
3437:	48 8d 35 82 47 00 00 	lea    rsi,[rip+0x4782]        # 7bc0 <_IO_stdin_used+0x8a0>
343e:	31 ff                	xor    edi,edi
3440:	ba 05 00 00 00       	mov    edx,0x5
3445:	e8 e6 e1 ff ff       	call   1630 <dcgettext@plt>
344a:	4c 89 ee             	mov    rsi,r13
344d:	48 89 c7             	mov    rdi,rax
3450:	e8 db e2 ff ff       	call   1730 <fputs_unlocked@plt>
3455:	e9 cf fe ff ff       	jmp    3329 <usage+0x3c9>
345a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000003460 <decode_8>:
3460:	31 c0                	xor    eax,eax
3462:	48 83 fe 07          	cmp    rsi,0x7
3466:	0f 86 6c 01 00 00    	jbe    35d8 <decode_8+0x178>
346c:	44 0f b6 07          	movzx  r8d,BYTE PTR [rdi]
3470:	48 8d 35 89 49 00 00 	lea    rsi,[rip+0x4989]        # 7e00 <b32>
3477:	46 0f b6 04 06       	movzx  r8d,BYTE PTR [rsi+r8*1]
347c:	45 84 c0             	test   r8b,r8b
347f:	0f 88 53 01 00 00    	js     35d8 <decode_8+0x178>
3485:	44 0f b6 4f 01       	movzx  r9d,BYTE PTR [rdi+0x1]
348a:	46 0f b6 0c 0e       	movzx  r9d,BYTE PTR [rsi+r9*1]
348f:	45 84 c9             	test   r9b,r9b
3492:	0f 88 40 01 00 00    	js     35d8 <decode_8+0x178>
3498:	48 83 39 00          	cmp    QWORD PTR [rcx],0x0
349c:	48 8b 02             	mov    rax,QWORD PTR [rdx]
349f:	74 1a                	je     34bb <decode_8+0x5b>
34a1:	45 89 ca             	mov    r10d,r9d
34a4:	41 c1 e0 03          	shl    r8d,0x3
34a8:	48 83 c0 01          	add    rax,0x1
34ac:	41 c0 fa 02          	sar    r10b,0x2
34b0:	45 09 d0             	or     r8d,r10d
34b3:	44 88 40 ff          	mov    BYTE PTR [rax-0x1],r8b
34b7:	48 83 29 01          	sub    QWORD PTR [rcx],0x1
34bb:	44 0f b6 47 02       	movzx  r8d,BYTE PTR [rdi+0x2]
34c0:	41 80 f8 3d          	cmp    r8b,0x3d
34c4:	0f 84 16 01 00 00    	je     35e0 <decode_8+0x180>
34ca:	46 0f b6 04 06       	movzx  r8d,BYTE PTR [rsi+r8*1]
34cf:	45 84 c0             	test   r8b,r8b
34d2:	0f 88 0e 01 00 00    	js     35e6 <decode_8+0x186>
34d8:	44 0f b6 57 03       	movzx  r10d,BYTE PTR [rdi+0x3]
34dd:	46 0f b6 14 16       	movzx  r10d,BYTE PTR [rsi+r10*1]
34e2:	45 84 d2             	test   r10b,r10b
34e5:	0f 88 fb 00 00 00    	js     35e6 <decode_8+0x186>
34eb:	48 83 39 00          	cmp    QWORD PTR [rcx],0x0
34ef:	74 20                	je     3511 <decode_8+0xb1>
34f1:	45 01 c0             	add    r8d,r8d
34f4:	41 c1 e1 06          	shl    r9d,0x6
34f8:	48 83 c0 01          	add    rax,0x1
34fc:	45 09 c1             	or     r9d,r8d
34ff:	45 89 d0             	mov    r8d,r10d
3502:	41 c0 f8 04          	sar    r8b,0x4
3506:	45 09 c1             	or     r9d,r8d
3509:	44 88 48 ff          	mov    BYTE PTR [rax-0x1],r9b
350d:	48 83 29 01          	sub    QWORD PTR [rcx],0x1
3511:	44 0f b6 47 04       	movzx  r8d,BYTE PTR [rdi+0x4]
3516:	41 80 f8 3d          	cmp    r8b,0x3d
351a:	0f 84 d6 00 00 00    	je     35f6 <decode_8+0x196>
3520:	46 0f b6 04 06       	movzx  r8d,BYTE PTR [rsi+r8*1]
3525:	45 84 c0             	test   r8b,r8b
3528:	0f 88 b8 00 00 00    	js     35e6 <decode_8+0x186>
352e:	48 83 39 00          	cmp    QWORD PTR [rcx],0x0
3532:	74 19                	je     354d <decode_8+0xed>
3534:	45 89 c1             	mov    r9d,r8d
3537:	41 c1 e2 04          	shl    r10d,0x4
353b:	48 83 c0 01          	add    rax,0x1
353f:	41 d0 f9             	sar    r9b,1
3542:	45 09 ca             	or     r10d,r9d
3545:	44 88 50 ff          	mov    BYTE PTR [rax-0x1],r10b
3549:	48 83 29 01          	sub    QWORD PTR [rcx],0x1
354d:	44 0f b6 4f 05       	movzx  r9d,BYTE PTR [rdi+0x5]
3552:	41 80 f9 3d          	cmp    r9b,0x3d
3556:	0f 84 a0 00 00 00    	je     35fc <decode_8+0x19c>
355c:	46 0f b6 0c 0e       	movzx  r9d,BYTE PTR [rsi+r9*1]
3561:	45 84 c9             	test   r9b,r9b
3564:	0f 88 7c 00 00 00    	js     35e6 <decode_8+0x186>
356a:	44 0f b6 57 06       	movzx  r10d,BYTE PTR [rdi+0x6]
356f:	46 0f b6 14 16       	movzx  r10d,BYTE PTR [rsi+r10*1]
3574:	45 84 d2             	test   r10b,r10b
3577:	78 6d                	js     35e6 <decode_8+0x186>
3579:	48 83 39 00          	cmp    QWORD PTR [rcx],0x0
357d:	74 21                	je     35a0 <decode_8+0x140>
357f:	41 c1 e1 02          	shl    r9d,0x2
3583:	41 c1 e0 07          	shl    r8d,0x7
3587:	48 83 c0 01          	add    rax,0x1
358b:	45 09 c8             	or     r8d,r9d
358e:	45 89 d1             	mov    r9d,r10d
3591:	41 c0 f9 03          	sar    r9b,0x3
3595:	45 09 c8             	or     r8d,r9d
3598:	44 88 40 ff          	mov    BYTE PTR [rax-0x1],r8b
359c:	48 83 29 01          	sub    QWORD PTR [rcx],0x1
35a0:	0f b6 7f 07          	movzx  edi,BYTE PTR [rdi+0x7]
35a4:	40 80 ff 3d          	cmp    dil,0x3d
35a8:	74 26                	je     35d0 <decode_8+0x170>
35aa:	0f b6 34 3e          	movzx  esi,BYTE PTR [rsi+rdi*1]
35ae:	40 84 f6             	test   sil,sil
35b1:	78 33                	js     35e6 <decode_8+0x186>
35b3:	48 83 39 00          	cmp    QWORD PTR [rcx],0x0
35b7:	74 17                	je     35d0 <decode_8+0x170>
35b9:	41 c1 e2 05          	shl    r10d,0x5
35bd:	48 83 c0 01          	add    rax,0x1
35c1:	41 09 f2             	or     r10d,esi
35c4:	44 88 50 ff          	mov    BYTE PTR [rax-0x1],r10b
35c8:	48 83 29 01          	sub    QWORD PTR [rcx],0x1
35cc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
35d0:	48 89 02             	mov    QWORD PTR [rdx],rax
35d3:	b8 01 00 00 00       	mov    eax,0x1
35d8:	f3 c3                	repz ret
35da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
35e0:	80 7f 03 3d          	cmp    BYTE PTR [rdi+0x3],0x3d
35e4:	74 0a                	je     35f0 <decode_8+0x190>
35e6:	48 89 02             	mov    QWORD PTR [rdx],rax
35e9:	31 c0                	xor    eax,eax
35eb:	c3                   	ret
35ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
35f0:	80 7f 04 3d          	cmp    BYTE PTR [rdi+0x4],0x3d
35f4:	75 f0                	jne    35e6 <decode_8+0x186>
35f6:	80 7f 05 3d          	cmp    BYTE PTR [rdi+0x5],0x3d
35fa:	75 ea                	jne    35e6 <decode_8+0x186>
35fc:	80 7f 06 3d          	cmp    BYTE PTR [rdi+0x6],0x3d
3600:	75 e4                	jne    35e6 <decode_8+0x186>
3602:	80 7f 07 3d          	cmp    BYTE PTR [rdi+0x7],0x3d
3606:	75 de                	jne    35e6 <decode_8+0x186>
3608:	eb c6                	jmp    35d0 <decode_8+0x170>
360a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000003610 <base32_encode>:
3610:	4c 8d 05 c9 47 00 00 	lea    r8,[rip+0x47c9]        # 7de0 <b32str.3066>
3617:	e9 1f 01 00 00       	jmp    373b <base32_encode+0x12b>
361c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
3620:	44 0f b6 4f 01       	movzx  r9d,BYTE PTR [rdi+0x1]
3625:	45 89 ca             	mov    r10d,r9d
3628:	41 c0 ea 06          	shr    r10b,0x6
362c:	44 01 d0             	add    eax,r10d
362f:	83 e0 1f             	and    eax,0x1f
3632:	48 83 f9 02          	cmp    rcx,0x2
3636:	41 0f b6 04 00       	movzx  eax,BYTE PTR [r8+rax*1]
363b:	88 42 01             	mov    BYTE PTR [rdx+0x1],al
363e:	0f 84 a1 01 00 00    	je     37e5 <base32_encode+0x1d5>
3644:	44 89 c8             	mov    eax,r9d
3647:	d0 e8                	shr    al,1
3649:	83 e0 1f             	and    eax,0x1f
364c:	48 83 f9 03          	cmp    rcx,0x3
3650:	41 0f b6 04 00       	movzx  eax,BYTE PTR [r8+rax*1]
3655:	88 42 02             	mov    BYTE PTR [rdx+0x2],al
3658:	0f 84 87 01 00 00    	je     37e5 <base32_encode+0x1d5>
365e:	41 c1 e1 04          	shl    r9d,0x4
3662:	48 83 fe 02          	cmp    rsi,0x2
3666:	0f 84 64 01 00 00    	je     37d0 <base32_encode+0x1c0>
366c:	0f b6 47 02          	movzx  eax,BYTE PTR [rdi+0x2]
3670:	41 89 c2             	mov    r10d,eax
3673:	41 c0 ea 04          	shr    r10b,0x4
3677:	45 01 d1             	add    r9d,r10d
367a:	41 83 e1 1f          	and    r9d,0x1f
367e:	48 83 f9 04          	cmp    rcx,0x4
3682:	47 0f b6 0c 08       	movzx  r9d,BYTE PTR [r8+r9*1]
3687:	44 88 4a 03          	mov    BYTE PTR [rdx+0x3],r9b
368b:	0f 84 54 01 00 00    	je     37e5 <base32_encode+0x1d5>
3691:	48 83 fe 03          	cmp    rsi,0x3
3695:	44 8d 0c 00          	lea    r9d,[rax+rax*1]
3699:	0f 84 51 01 00 00    	je     37f0 <base32_encode+0x1e0>
369f:	0f b6 47 03          	movzx  eax,BYTE PTR [rdi+0x3]
36a3:	41 89 c2             	mov    r10d,eax
36a6:	41 c0 ea 07          	shr    r10b,0x7
36aa:	45 01 d1             	add    r9d,r10d
36ad:	41 83 e1 1f          	and    r9d,0x1f
36b1:	48 83 f9 05          	cmp    rcx,0x5
36b5:	47 0f b6 0c 08       	movzx  r9d,BYTE PTR [r8+r9*1]
36ba:	44 88 4a 04          	mov    BYTE PTR [rdx+0x4],r9b
36be:	0f 84 21 01 00 00    	je     37e5 <base32_encode+0x1d5>
36c4:	41 89 c1             	mov    r9d,eax
36c7:	41 c0 e9 02          	shr    r9b,0x2
36cb:	41 83 e1 1f          	and    r9d,0x1f
36cf:	48 83 f9 06          	cmp    rcx,0x6
36d3:	47 0f b6 0c 08       	movzx  r9d,BYTE PTR [r8+r9*1]
36d8:	44 88 4a 05          	mov    BYTE PTR [rdx+0x5],r9b
36dc:	0f 84 03 01 00 00    	je     37e5 <base32_encode+0x1d5>
36e2:	c1 e0 03             	shl    eax,0x3
36e5:	48 83 fe 04          	cmp    rsi,0x4
36e9:	0f 84 19 01 00 00    	je     3808 <base32_encode+0x1f8>
36ef:	44 0f b6 4f 04       	movzx  r9d,BYTE PTR [rdi+0x4]
36f4:	45 89 ca             	mov    r10d,r9d
36f7:	41 c0 ea 05          	shr    r10b,0x5
36fb:	44 01 d0             	add    eax,r10d
36fe:	83 e0 1f             	and    eax,0x1f
3701:	48 83 f9 07          	cmp    rcx,0x7
3705:	41 0f b6 04 00       	movzx  eax,BYTE PTR [r8+rax*1]
370a:	88 42 06             	mov    BYTE PTR [rdx+0x6],al
370d:	0f 84 d2 00 00 00    	je     37e5 <base32_encode+0x1d5>
3713:	41 83 e1 1f          	and    r9d,0x1f
3717:	48 83 f9 08          	cmp    rcx,0x8
371b:	43 0f b6 04 08       	movzx  eax,BYTE PTR [r8+r9*1]
3720:	88 42 07             	mov    BYTE PTR [rdx+0x7],al
3723:	0f 84 bc 00 00 00    	je     37e5 <base32_encode+0x1d5>
3729:	48 83 ee 05          	sub    rsi,0x5
372d:	74 04                	je     3733 <base32_encode+0x123>
372f:	48 83 c7 05          	add    rdi,0x5
3733:	48 83 c2 08          	add    rdx,0x8
3737:	48 83 e9 08          	sub    rcx,0x8
373b:	48 85 f6             	test   rsi,rsi
373e:	0f 84 dc 00 00 00    	je     3820 <base32_encode+0x210>
3744:	48 85 c9             	test   rcx,rcx
3747:	0f 84 d3 00 00 00    	je     3820 <base32_encode+0x210>
374d:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
3750:	41 89 c1             	mov    r9d,eax
3753:	41 c0 e9 03          	shr    r9b,0x3
3757:	41 83 e1 1f          	and    r9d,0x1f
375b:	48 83 f9 01          	cmp    rcx,0x1
375f:	47 0f b6 0c 08       	movzx  r9d,BYTE PTR [r8+r9*1]
3764:	44 88 0a             	mov    BYTE PTR [rdx],r9b
3767:	74 7c                	je     37e5 <base32_encode+0x1d5>
3769:	c1 e0 02             	shl    eax,0x2
376c:	48 83 fe 01          	cmp    rsi,0x1
3770:	0f 85 aa fe ff ff    	jne    3620 <base32_encode+0x10>
3776:	83 e0 1c             	and    eax,0x1c
3779:	48 83 f9 02          	cmp    rcx,0x2
377d:	41 0f b6 04 00       	movzx  eax,BYTE PTR [r8+rax*1]
3782:	88 42 01             	mov    BYTE PTR [rdx+0x1],al
3785:	74 5e                	je     37e5 <base32_encode+0x1d5>
3787:	48 83 f9 03          	cmp    rcx,0x3
378b:	c6 42 02 3d          	mov    BYTE PTR [rdx+0x2],0x3d
378f:	74 54                	je     37e5 <base32_encode+0x1d5>
3791:	48 83 f9 04          	cmp    rcx,0x4
3795:	c6 42 03 3d          	mov    BYTE PTR [rdx+0x3],0x3d
3799:	74 4a                	je     37e5 <base32_encode+0x1d5>
379b:	48 83 f9 05          	cmp    rcx,0x5
379f:	c6 42 04 3d          	mov    BYTE PTR [rdx+0x4],0x3d
37a3:	74 40                	je     37e5 <base32_encode+0x1d5>
37a5:	48 83 f9 06          	cmp    rcx,0x6
37a9:	c6 42 05 3d          	mov    BYTE PTR [rdx+0x5],0x3d
37ad:	74 36                	je     37e5 <base32_encode+0x1d5>
37af:	48 83 f9 07          	cmp    rcx,0x7
37b3:	c6 42 06 3d          	mov    BYTE PTR [rdx+0x6],0x3d
37b7:	74 2c                	je     37e5 <base32_encode+0x1d5>
37b9:	48 83 f9 08          	cmp    rcx,0x8
37bd:	c6 42 07 3d          	mov    BYTE PTR [rdx+0x7],0x3d
37c1:	74 22                	je     37e5 <base32_encode+0x1d5>
37c3:	31 f6                	xor    esi,esi
37c5:	e9 69 ff ff ff       	jmp    3733 <base32_encode+0x123>
37ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
37d0:	41 83 e1 1f          	and    r9d,0x1f
37d4:	48 83 f9 04          	cmp    rcx,0x4
37d8:	4d 63 c9             	movsxd r9,r9d
37db:	43 0f b6 04 08       	movzx  eax,BYTE PTR [r8+r9*1]
37e0:	88 42 03             	mov    BYTE PTR [rdx+0x3],al
37e3:	75 b6                	jne    379b <base32_encode+0x18b>
37e5:	c3                   	ret
37e6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
37ed:	00 00 00
37f0:	41 83 e1 1e          	and    r9d,0x1e
37f4:	48 83 f9 05          	cmp    rcx,0x5
37f8:	43 0f b6 04 08       	movzx  eax,BYTE PTR [r8+r9*1]
37fd:	88 42 04             	mov    BYTE PTR [rdx+0x4],al
3800:	75 a3                	jne    37a5 <base32_encode+0x195>
3802:	f3 c3                	repz ret
3804:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
3808:	83 e0 18             	and    eax,0x18
380b:	48 83 f9 07          	cmp    rcx,0x7
380f:	41 0f b6 04 00       	movzx  eax,BYTE PTR [r8+rax*1]
3814:	88 42 06             	mov    BYTE PTR [rdx+0x6],al
3817:	74 cc                	je     37e5 <base32_encode+0x1d5>
3819:	eb 9e                	jmp    37b9 <base32_encode+0x1a9>
381b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3820:	48 85 c9             	test   rcx,rcx
3823:	74 c0                	je     37e5 <base32_encode+0x1d5>
3825:	c6 02 00             	mov    BYTE PTR [rdx],0x0
3828:	c3                   	ret
3829:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000003830 <base32_encode_alloc>:
3830:	41 56                	push   r14
3832:	41 55                	push   r13
3834:	49 89 d5             	mov    r13,rdx
3837:	48 8d 56 04          	lea    rdx,[rsi+0x4]
383b:	41 54                	push   r12
383d:	55                   	push   rbp
383e:	53                   	push   rbx
383f:	48 bb cd cc cc cc cc 	movabs rbx,0xcccccccccccccccd
3846:	cc cc cc
3849:	48 89 d0             	mov    rax,rdx
384c:	48 f7 e3             	mul    rbx
384f:	48 c1 ea 02          	shr    rdx,0x2
3853:	48 8d 1c d5 00 00 00 	lea    rbx,[rdx*8+0x0]
385a:	00
385b:	48 8d 6b 01          	lea    rbp,[rbx+0x1]
385f:	48 39 ee             	cmp    rsi,rbp
3862:	76 1c                	jbe    3880 <base32_encode_alloc+0x50>
3864:	49 c7 45 00 00 00 00 	mov    QWORD PTR [r13+0x0],0x0
386b:	00
386c:	31 ed                	xor    ebp,ebp
386e:	5b                   	pop    rbx
386f:	48 89 e8             	mov    rax,rbp
3872:	5d                   	pop    rbp
3873:	41 5c                	pop    r12
3875:	41 5d                	pop    r13
3877:	41 5e                	pop    r14
3879:	c3                   	ret
387a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3880:	49 89 fe             	mov    r14,rdi
3883:	48 89 ef             	mov    rdi,rbp
3886:	49 89 f4             	mov    r12,rsi
3889:	e8 f2 de ff ff       	call   1780 <malloc@plt>
388e:	48 85 c0             	test   rax,rax
3891:	49 89 45 00          	mov    QWORD PTR [r13+0x0],rax
3895:	74 d7                	je     386e <base32_encode_alloc+0x3e>
3897:	48 89 e9             	mov    rcx,rbp
389a:	48 89 c2             	mov    rdx,rax
389d:	48 89 dd             	mov    rbp,rbx
38a0:	4c 89 e6             	mov    rsi,r12
38a3:	4c 89 f7             	mov    rdi,r14
38a6:	e8 65 fd ff ff       	call   3610 <base32_encode>
38ab:	5b                   	pop    rbx
38ac:	48 89 e8             	mov    rax,rbp
38af:	5d                   	pop    rbp
38b0:	41 5c                	pop    r12
38b2:	41 5d                	pop    r13
38b4:	41 5e                	pop    r14
38b6:	c3                   	ret
38b7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
38be:	00 00

00000000000038c0 <isbase32>:
38c0:	48 8d 05 39 45 00 00 	lea    rax,[rip+0x4539]        # 7e00 <b32>
38c7:	40 0f b6 ff          	movzx  edi,dil
38cb:	0f b6 04 38          	movzx  eax,BYTE PTR [rax+rdi*1]
38cf:	f7 d0                	not    eax
38d1:	c0 e8 07             	shr    al,0x7
38d4:	c3                   	ret
38d5:	90                   	nop
38d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
38dd:	00 00 00

00000000000038e0 <base32_decode_ctx_init>:
38e0:	c7 07 00 00 00 00    	mov    DWORD PTR [rdi],0x0
38e6:	c3                   	ret
38e7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
38ee:	00 00

00000000000038f0 <base32_decode_ctx>:
38f0:	41 57                	push   r15
38f2:	41 56                	push   r14
38f4:	49 89 d3             	mov    r11,rdx
38f7:	41 55                	push   r13
38f9:	41 54                	push   r12
38fb:	49 89 fe             	mov    r14,rdi
38fe:	55                   	push   rbp
38ff:	53                   	push   rbx
3900:	49 89 f4             	mov    r12,rsi
3903:	48 83 ec 38          	sub    rsp,0x38
3907:	4d 8b 38             	mov    r15,QWORD PTR [r8]
390a:	64 48 8b 1c 25 28 00 	mov    rbx,QWORD PTR fs:0x28
3911:	00 00
3913:	48 89 5c 24 28       	mov    QWORD PTR [rsp+0x28],rbx
3918:	31 db                	xor    ebx,ebx
391a:	48 85 ff             	test   rdi,rdi
391d:	48 89 4c 24 18       	mov    QWORD PTR [rsp+0x18],rcx
3922:	4c 89 44 24 10       	mov    QWORD PTR [rsp+0x10],r8
3927:	4c 89 7c 24 20       	mov    QWORD PTR [rsp+0x20],r15
392c:	0f 95 44 24 07       	setne  BYTE PTR [rsp+0x7]
3931:	0f 84 29 02 00 00    	je     3b60 <base32_decode_ctx+0x270>
3937:	48 85 d2             	test   rdx,rdx
393a:	8b 17                	mov    edx,DWORD PTR [rdi]
393c:	0f 95 44 24 06       	setne  BYTE PTR [rsp+0x6]
3941:	0f b6 44 24 06       	movzx  eax,BYTE PTR [rsp+0x6]
3946:	85 d2                	test   edx,edx
3948:	41 0f 94 c5          	sete   r13b
394c:	41 21 c5             	and    r13d,eax
394f:	49 8d 46 04          	lea    rax,[r14+0x4]
3953:	48 8d 6c 24 20       	lea    rbp,[rsp+0x20]
3958:	48 8d 5c 24 18       	lea    rbx,[rsp+0x18]
395d:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
3962:	45 84 ed             	test   r13b,r13b
3965:	4c 89 fa             	mov    rdx,r15
3968:	0f 85 cf 00 00 00    	jne    3a3d <base32_decode_ctx+0x14d>
396e:	4d 85 db             	test   r11,r11
3971:	0f 94 c0             	sete   al
3974:	22 44 24 06          	and    al,BYTE PTR [rsp+0x6]
3978:	0f 85 82 00 00 00    	jne    3a00 <base32_decode_ctx+0x110>
397e:	4d 85 db             	test   r11,r11
3981:	0f 84 d9 00 00 00    	je     3a60 <base32_decode_ctx+0x170>
3987:	41 80 3c 24 0a       	cmp    BYTE PTR [r12],0xa
398c:	0f 84 9e 01 00 00    	je     3b30 <base32_decode_ctx+0x240>
3992:	4c 29 fa             	sub    rdx,r15
3995:	48 01 54 24 18       	add    QWORD PTR [rsp+0x18],rdx
399a:	4d 85 f6             	test   r14,r14
399d:	4c 89 7c 24 20       	mov    QWORD PTR [rsp+0x20],r15
39a2:	4f 8d 3c 1c          	lea    r15,[r12+r11*1]
39a6:	0f 85 cd 00 00 00    	jne    3a79 <base32_decode_ctx+0x189>
39ac:	4c 89 e7             	mov    rdi,r12
39af:	49 83 fb 07          	cmp    r11,0x7
39b3:	77 12                	ja     39c7 <base32_decode_ctx+0xd7>
39b5:	80 7c 24 07 00       	cmp    BYTE PTR [rsp+0x7],0x0
39ba:	74 0b                	je     39c7 <base32_decode_ctx+0xd7>
39bc:	80 7c 24 06 00       	cmp    BYTE PTR [rsp+0x6],0x0
39c1:	0f 85 00 01 00 00    	jne    3ac7 <base32_decode_ctx+0x1d7>
39c7:	48 89 e9             	mov    rcx,rbp
39ca:	48 89 da             	mov    rdx,rbx
39cd:	4c 89 de             	mov    rsi,r11
39d0:	e8 8b fa ff ff       	call   3460 <decode_8>
39d5:	84 c0                	test   al,al
39d7:	0f 84 b2 01 00 00    	je     3b8f <base32_decode_ctx+0x29f>
39dd:	4d 89 fb             	mov    r11,r15
39e0:	4c 8b 7c 24 20       	mov    r15,QWORD PTR [rsp+0x20]
39e5:	4d 29 e3             	sub    r11,r12
39e8:	45 84 ed             	test   r13b,r13b
39eb:	4c 89 fa             	mov    rdx,r15
39ee:	75 4d                	jne    3a3d <base32_decode_ctx+0x14d>
39f0:	4d 85 db             	test   r11,r11
39f3:	0f 94 c0             	sete   al
39f6:	22 44 24 06          	and    al,BYTE PTR [rsp+0x6]
39fa:	74 82                	je     397e <base32_decode_ctx+0x8e>
39fc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
3a00:	48 8b 5c 24 10       	mov    rbx,QWORD PTR [rsp+0x10]
3a05:	48 29 13             	sub    QWORD PTR [rbx],rdx
3a08:	48 8b 5c 24 28       	mov    rbx,QWORD PTR [rsp+0x28]
3a0d:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
3a14:	00 00
3a16:	0f 85 7d 01 00 00    	jne    3b99 <base32_decode_ctx+0x2a9>
3a1c:	48 83 c4 38          	add    rsp,0x38
3a20:	5b                   	pop    rbx
3a21:	5d                   	pop    rbp
3a22:	41 5c                	pop    r12
3a24:	41 5d                	pop    r13
3a26:	41 5e                	pop    r14
3a28:	41 5f                	pop    r15
3a2a:	c3                   	ret
3a2b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3a30:	4c 8b 7c 24 20       	mov    r15,QWORD PTR [rsp+0x20]
3a35:	49 83 c4 08          	add    r12,0x8
3a39:	49 83 eb 08          	sub    r11,0x8
3a3d:	48 89 e9             	mov    rcx,rbp
3a40:	48 89 da             	mov    rdx,rbx
3a43:	4c 89 de             	mov    rsi,r11
3a46:	4c 89 e7             	mov    rdi,r12
3a49:	e8 12 fa ff ff       	call   3460 <decode_8>
3a4e:	84 c0                	test   al,al
3a50:	75 de                	jne    3a30 <base32_decode_ctx+0x140>
3a52:	48 8b 54 24 20       	mov    rdx,QWORD PTR [rsp+0x20]
3a57:	e9 12 ff ff ff       	jmp    396e <base32_decode_ctx+0x7e>
3a5c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
3a60:	4c 29 fa             	sub    rdx,r15
3a63:	48 01 54 24 18       	add    QWORD PTR [rsp+0x18],rdx
3a68:	4d 85 f6             	test   r14,r14
3a6b:	4c 89 7c 24 20       	mov    QWORD PTR [rsp+0x20],r15
3a70:	0f 84 fa 00 00 00    	je     3b70 <base32_decode_ctx+0x280>
3a76:	4d 89 e7             	mov    r15,r12
3a79:	41 8b 06             	mov    eax,DWORD PTR [r14]
3a7c:	83 f8 08             	cmp    eax,0x8
3a7f:	74 5f                	je     3ae0 <base32_decode_ctx+0x1f0>
3a81:	85 c0                	test   eax,eax
3a83:	74 62                	je     3ae7 <base32_decode_ctx+0x1f7>
3a85:	4d 39 fc             	cmp    r12,r15
3a88:	73 2c                	jae    3ab6 <base32_decode_ctx+0x1c6>
3a8a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3a90:	49 83 c4 01          	add    r12,0x1
3a94:	41 0f b6 54 24 ff    	movzx  edx,BYTE PTR [r12-0x1]
3a9a:	80 fa 0a             	cmp    dl,0xa
3a9d:	74 12                	je     3ab1 <base32_decode_ctx+0x1c1>
3a9f:	8d 48 01             	lea    ecx,[rax+0x1]
3aa2:	83 f9 08             	cmp    ecx,0x8
3aa5:	41 89 0e             	mov    DWORD PTR [r14],ecx
3aa8:	41 88 54 06 04       	mov    BYTE PTR [r14+rax*1+0x4],dl
3aad:	74 61                	je     3b10 <base32_decode_ctx+0x220>
3aaf:	89 c8                	mov    eax,ecx
3ab1:	4d 39 fc             	cmp    r12,r15
3ab4:	75 da                	jne    3a90 <base32_decode_ctx+0x1a0>
3ab6:	41 89 c3             	mov    r11d,eax
3ab9:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
3abe:	4d 85 db             	test   r11,r11
3ac1:	0f 85 e8 fe ff ff    	jne    39af <base32_decode_ctx+0xbf>
3ac7:	48 8b 54 24 20       	mov    rdx,QWORD PTR [rsp+0x20]
3acc:	b8 01 00 00 00       	mov    eax,0x1
3ad1:	e9 2a ff ff ff       	jmp    3a00 <base32_decode_ctx+0x110>
3ad6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
3add:	00 00 00
3ae0:	41 c7 06 00 00 00 00 	mov    DWORD PTR [r14],0x0
3ae7:	49 83 fb 07          	cmp    r11,0x7
3aeb:	7e 17                	jle    3b04 <base32_decode_ctx+0x214>
3aed:	ba 08 00 00 00       	mov    edx,0x8
3af2:	be 0a 00 00 00       	mov    esi,0xa
3af7:	4c 89 e7             	mov    rdi,r12
3afa:	e8 11 dc ff ff       	call   1710 <memchr@plt>
3aff:	48 85 c0             	test   rax,rax
3b02:	74 79                	je     3b7d <base32_decode_ctx+0x28d>
3b04:	41 8b 06             	mov    eax,DWORD PTR [r14]
3b07:	e9 79 ff ff ff       	jmp    3a85 <base32_decode_ctx+0x195>
3b0c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
3b10:	b8 08 00 00 00       	mov    eax,0x8
3b15:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
3b1a:	41 89 c3             	mov    r11d,eax
3b1d:	4d 85 db             	test   r11,r11
3b20:	0f 85 89 fe ff ff    	jne    39af <base32_decode_ctx+0xbf>
3b26:	eb 9f                	jmp    3ac7 <base32_decode_ctx+0x1d7>
3b28:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
3b2f:	00
3b30:	4d 85 f6             	test   r14,r14
3b33:	74 13                	je     3b48 <base32_decode_ctx+0x258>
3b35:	49 83 c4 01          	add    r12,0x1
3b39:	49 83 eb 01          	sub    r11,0x1
3b3d:	49 89 d7             	mov    r15,rdx
3b40:	e9 1d fe ff ff       	jmp    3962 <base32_decode_ctx+0x72>
3b45:	0f 1f 00             	nop    DWORD PTR [rax]
3b48:	4c 29 fa             	sub    rdx,r15
3b4b:	4c 89 7c 24 20       	mov    QWORD PTR [rsp+0x20],r15
3b50:	48 01 54 24 18       	add    QWORD PTR [rsp+0x18],rdx
3b55:	4f 8d 3c 1c          	lea    r15,[r12+r11*1]
3b59:	e9 4e fe ff ff       	jmp    39ac <base32_decode_ctx+0xbc>
3b5e:	66 90                	xchg   ax,ax
3b60:	41 bd 01 00 00 00    	mov    r13d,0x1
3b66:	c6 44 24 06 01       	mov    BYTE PTR [rsp+0x6],0x1
3b6b:	e9 df fd ff ff       	jmp    394f <base32_decode_ctx+0x5f>
3b70:	4c 89 fa             	mov    rdx,r15
3b73:	b8 01 00 00 00       	mov    eax,0x1
3b78:	e9 83 fe ff ff       	jmp    3a00 <base32_decode_ctx+0x110>
3b7d:	4c 89 e7             	mov    rdi,r12
3b80:	41 bb 08 00 00 00    	mov    r11d,0x8
3b86:	49 83 c4 08          	add    r12,0x8
3b8a:	e9 38 fe ff ff       	jmp    39c7 <base32_decode_ctx+0xd7>
3b8f:	48 8b 54 24 20       	mov    rdx,QWORD PTR [rsp+0x20]
3b94:	e9 67 fe ff ff       	jmp    3a00 <base32_decode_ctx+0x110>
3b99:	e8 c2 da ff ff       	call   1660 <__stack_chk_fail@plt>
3b9e:	66 90                	xchg   ax,ax

0000000000003ba0 <base32_decode_alloc_ctx>:
3ba0:	41 56                	push   r14
3ba2:	41 55                	push   r13
3ba4:	49 89 d6             	mov    r14,rdx
3ba7:	41 54                	push   r12
3ba9:	55                   	push   rbp
3baa:	49 89 fc             	mov    r12,rdi
3bad:	53                   	push   rbx
3bae:	49 89 f5             	mov    r13,rsi
3bb1:	48 89 cb             	mov    rbx,rcx
3bb4:	4c 89 c5             	mov    rbp,r8
3bb7:	48 83 ec 20          	sub    rsp,0x20
3bbb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
3bc2:	00 00
3bc4:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
3bc9:	31 c0                	xor    eax,eax
3bcb:	48 89 d0             	mov    rax,rdx
3bce:	48 c1 e8 03          	shr    rax,0x3
3bd2:	48 8d 7c 80 05       	lea    rdi,[rax+rax*4+0x5]
3bd7:	48 89 7c 24 10       	mov    QWORD PTR [rsp+0x10],rdi
3bdc:	e8 9f db ff ff       	call   1780 <malloc@plt>
3be1:	48 85 c0             	test   rax,rax
3be4:	48 89 03             	mov    QWORD PTR [rbx],rax
3be7:	74 2f                	je     3c18 <base32_decode_alloc_ctx+0x78>
3be9:	4c 8d 44 24 10       	lea    r8,[rsp+0x10]
3bee:	48 89 c1             	mov    rcx,rax
3bf1:	4c 89 f2             	mov    rdx,r14
3bf4:	4c 89 ee             	mov    rsi,r13
3bf7:	4c 89 e7             	mov    rdi,r12
3bfa:	e8 f1 fc ff ff       	call   38f0 <base32_decode_ctx>
3bff:	84 c0                	test   al,al
3c01:	74 3d                	je     3c40 <base32_decode_alloc_ctx+0xa0>
3c03:	48 85 ed             	test   rbp,rbp
3c06:	74 10                	je     3c18 <base32_decode_alloc_ctx+0x78>
3c08:	48 8b 54 24 10       	mov    rdx,QWORD PTR [rsp+0x10]
3c0d:	48 89 55 00          	mov    QWORD PTR [rbp+0x0],rdx
3c11:	eb 0a                	jmp    3c1d <base32_decode_alloc_ctx+0x7d>
3c13:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3c18:	b8 01 00 00 00       	mov    eax,0x1
3c1d:	48 8b 4c 24 18       	mov    rcx,QWORD PTR [rsp+0x18]
3c22:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
3c29:	00 00
3c2b:	75 2d                	jne    3c5a <base32_decode_alloc_ctx+0xba>
3c2d:	48 83 c4 20          	add    rsp,0x20
3c31:	5b                   	pop    rbx
3c32:	5d                   	pop    rbp
3c33:	41 5c                	pop    r12
3c35:	41 5d                	pop    r13
3c37:	41 5e                	pop    r14
3c39:	c3                   	ret
3c3a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3c40:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
3c43:	88 44 24 0f          	mov    BYTE PTR [rsp+0xf],al
3c47:	e8 44 d9 ff ff       	call   1590 <free@plt>
3c4c:	48 c7 03 00 00 00 00 	mov    QWORD PTR [rbx],0x0
3c53:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [rsp+0xf]
3c58:	eb c3                	jmp    3c1d <base32_decode_alloc_ctx+0x7d>
3c5a:	e8 01 da ff ff       	call   1660 <__stack_chk_fail@plt>
3c5f:	90                   	nop

0000000000003c60 <decode_4>:
3c60:	31 c0                	xor    eax,eax
3c62:	48 83 fe 01          	cmp    rsi,0x1
3c66:	0f 86 8d 00 00 00    	jbe    3cf9 <decode_4+0x99>
3c6c:	44 0f b6 07          	movzx  r8d,BYTE PTR [rdi]
3c70:	4c 8d 0d 89 42 00 00 	lea    r9,[rip+0x4289]        # 7f00 <b64>
3c77:	47 0f b6 04 01       	movzx  r8d,BYTE PTR [r9+r8*1]
3c7c:	45 84 c0             	test   r8b,r8b
3c7f:	78 78                	js     3cf9 <decode_4+0x99>
3c81:	44 0f b6 57 01       	movzx  r10d,BYTE PTR [rdi+0x1]
3c86:	47 0f b6 14 11       	movzx  r10d,BYTE PTR [r9+r10*1]
3c8b:	45 84 d2             	test   r10b,r10b
3c8e:	78 69                	js     3cf9 <decode_4+0x99>
3c90:	48 83 39 00          	cmp    QWORD PTR [rcx],0x0
3c94:	48 8b 02             	mov    rax,QWORD PTR [rdx]
3c97:	75 77                	jne    3d10 <decode_4+0xb0>
3c99:	48 83 fe 02          	cmp    rsi,0x2
3c9d:	74 67                	je     3d06 <decode_4+0xa6>
3c9f:	44 0f b6 47 02       	movzx  r8d,BYTE PTR [rdi+0x2]
3ca4:	41 80 f8 3d          	cmp    r8b,0x3d
3ca8:	74 56                	je     3d00 <decode_4+0xa0>
3caa:	47 0f b6 04 01       	movzx  r8d,BYTE PTR [r9+r8*1]
3caf:	45 84 c0             	test   r8b,r8b
3cb2:	78 52                	js     3d06 <decode_4+0xa6>
3cb4:	48 83 39 00          	cmp    QWORD PTR [rcx],0x0
3cb8:	75 76                	jne    3d30 <decode_4+0xd0>
3cba:	48 83 fe 03          	cmp    rsi,0x3
3cbe:	74 46                	je     3d06 <decode_4+0xa6>
3cc0:	0f b6 7f 03          	movzx  edi,BYTE PTR [rdi+0x3]
3cc4:	40 80 ff 3d          	cmp    dil,0x3d
3cc8:	0f 84 92 00 00 00    	je     3d60 <decode_4+0x100>
3cce:	41 0f b6 34 39       	movzx  esi,BYTE PTR [r9+rdi*1]
3cd3:	40 84 f6             	test   sil,sil
3cd6:	78 2e                	js     3d06 <decode_4+0xa6>
3cd8:	48 83 39 00          	cmp    QWORD PTR [rcx],0x0
3cdc:	74 13                	je     3cf1 <decode_4+0x91>
3cde:	41 c1 e0 06          	shl    r8d,0x6
3ce2:	48 83 c0 01          	add    rax,0x1
3ce6:	41 09 f0             	or     r8d,esi
3ce9:	44 88 40 ff          	mov    BYTE PTR [rax-0x1],r8b
3ced:	48 83 29 01          	sub    QWORD PTR [rcx],0x1
3cf1:	48 89 02             	mov    QWORD PTR [rdx],rax
3cf4:	b8 01 00 00 00       	mov    eax,0x1
3cf9:	f3 c3                	repz ret
3cfb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
3d00:	48 83 fe 04          	cmp    rsi,0x4
3d04:	74 4a                	je     3d50 <decode_4+0xf0>
3d06:	48 89 02             	mov    QWORD PTR [rdx],rax
3d09:	31 c0                	xor    eax,eax
3d0b:	c3                   	ret
3d0c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
3d10:	45 89 d3             	mov    r11d,r10d
3d13:	41 c1 e0 02          	shl    r8d,0x2
3d17:	48 83 c0 01          	add    rax,0x1
3d1b:	41 c0 fb 04          	sar    r11b,0x4
3d1f:	45 09 d8             	or     r8d,r11d
3d22:	44 88 40 ff          	mov    BYTE PTR [rax-0x1],r8b
3d26:	48 83 29 01          	sub    QWORD PTR [rcx],0x1
3d2a:	e9 6a ff ff ff       	jmp    3c99 <decode_4+0x39>
3d2f:	90                   	nop
3d30:	45 89 c3             	mov    r11d,r8d
3d33:	41 c1 e2 04          	shl    r10d,0x4
3d37:	48 83 c0 01          	add    rax,0x1
3d3b:	41 c0 fb 02          	sar    r11b,0x2
3d3f:	45 09 da             	or     r10d,r11d
3d42:	44 88 50 ff          	mov    BYTE PTR [rax-0x1],r10b
3d46:	48 83 29 01          	sub    QWORD PTR [rcx],0x1
3d4a:	e9 6b ff ff ff       	jmp    3cba <decode_4+0x5a>
3d4f:	90                   	nop
3d50:	80 7f 03 3d          	cmp    BYTE PTR [rdi+0x3],0x3d
3d54:	75 b0                	jne    3d06 <decode_4+0xa6>
3d56:	eb 99                	jmp    3cf1 <decode_4+0x91>
3d58:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
3d5f:	00
3d60:	48 83 fe 04          	cmp    rsi,0x4
3d64:	75 a0                	jne    3d06 <decode_4+0xa6>
3d66:	eb 89                	jmp    3cf1 <decode_4+0x91>
3d68:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
3d6f:	00

0000000000003d70 <base64_encode>:
3d70:	f6 c1 03             	test   cl,0x3
3d73:	75 14                	jne    3d89 <base64_encode+0x19>
3d75:	48 89 c8             	mov    rax,rcx
3d78:	48 c1 e8 02          	shr    rax,0x2
3d7c:	48 8d 04 40          	lea    rax,[rax+rax*2]
3d80:	48 39 f0             	cmp    rax,rsi
3d83:	0f 84 0f 01 00 00    	je     3e98 <base64_encode+0x128>
3d89:	4c 8d 0d 70 42 00 00 	lea    r9,[rip+0x4270]        # 8000 <b64c>
3d90:	e9 81 00 00 00       	jmp    3e16 <base64_encode+0xa6>
3d95:	0f 1f 00             	nop    DWORD PTR [rax]
3d98:	44 0f b6 47 01       	movzx  r8d,BYTE PTR [rdi+0x1]
3d9d:	45 89 c2             	mov    r10d,r8d
3da0:	41 c0 ea 04          	shr    r10b,0x4
3da4:	44 01 d0             	add    eax,r10d
3da7:	83 e0 3f             	and    eax,0x3f
3daa:	48 83 f9 02          	cmp    rcx,0x2
3dae:	41 0f b6 04 01       	movzx  eax,BYTE PTR [r9+rax*1]
3db3:	88 42 01             	mov    BYTE PTR [rdx+0x1],al
3db6:	0f 84 d6 00 00 00    	je     3e92 <base64_encode+0x122>
3dbc:	41 c1 e0 02          	shl    r8d,0x2
3dc0:	48 83 fe 02          	cmp    rsi,0x2
3dc4:	0f 84 b6 00 00 00    	je     3e80 <base64_encode+0x110>
3dca:	0f b6 47 02          	movzx  eax,BYTE PTR [rdi+0x2]
3dce:	41 89 c2             	mov    r10d,eax
3dd1:	41 c0 ea 06          	shr    r10b,0x6
3dd5:	45 01 d0             	add    r8d,r10d
3dd8:	41 83 e0 3f          	and    r8d,0x3f
3ddc:	48 83 f9 03          	cmp    rcx,0x3
3de0:	47 0f b6 04 01       	movzx  r8d,BYTE PTR [r9+r8*1]
3de5:	44 88 42 02          	mov    BYTE PTR [rdx+0x2],r8b
3de9:	0f 84 a3 00 00 00    	je     3e92 <base64_encode+0x122>
3def:	83 e0 3f             	and    eax,0x3f
3df2:	48 83 f9 04          	cmp    rcx,0x4
3df6:	41 0f b6 04 01       	movzx  eax,BYTE PTR [r9+rax*1]
3dfb:	88 42 03             	mov    BYTE PTR [rdx+0x3],al
3dfe:	0f 84 8e 00 00 00    	je     3e92 <base64_encode+0x122>
3e04:	48 83 ee 03          	sub    rsi,0x3
3e08:	74 04                	je     3e0e <base64_encode+0x9e>
3e0a:	48 83 c7 03          	add    rdi,0x3
3e0e:	48 83 c2 04          	add    rdx,0x4
3e12:	48 83 e9 04          	sub    rcx,0x4
3e16:	48 85 f6             	test   rsi,rsi
3e19:	0f 84 f9 00 00 00    	je     3f18 <base64_encode+0x1a8>
3e1f:	48 85 c9             	test   rcx,rcx
3e22:	0f 84 f0 00 00 00    	je     3f18 <base64_encode+0x1a8>
3e28:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
3e2b:	41 89 c0             	mov    r8d,eax
3e2e:	41 c0 e8 02          	shr    r8b,0x2
3e32:	41 83 e0 3f          	and    r8d,0x3f
3e36:	48 83 f9 01          	cmp    rcx,0x1
3e3a:	47 0f b6 04 01       	movzx  r8d,BYTE PTR [r9+r8*1]
3e3f:	44 88 02             	mov    BYTE PTR [rdx],r8b
3e42:	74 4e                	je     3e92 <base64_encode+0x122>
3e44:	c1 e0 04             	shl    eax,0x4
3e47:	48 83 fe 01          	cmp    rsi,0x1
3e4b:	0f 85 47 ff ff ff    	jne    3d98 <base64_encode+0x28>
3e51:	83 e0 30             	and    eax,0x30
3e54:	48 83 f9 02          	cmp    rcx,0x2
3e58:	41 0f b6 04 01       	movzx  eax,BYTE PTR [r9+rax*1]
3e5d:	88 42 01             	mov    BYTE PTR [rdx+0x1],al
3e60:	74 30                	je     3e92 <base64_encode+0x122>
3e62:	48 83 f9 03          	cmp    rcx,0x3
3e66:	c6 42 02 3d          	mov    BYTE PTR [rdx+0x2],0x3d
3e6a:	74 26                	je     3e92 <base64_encode+0x122>
3e6c:	48 83 f9 04          	cmp    rcx,0x4
3e70:	c6 42 03 3d          	mov    BYTE PTR [rdx+0x3],0x3d
3e74:	74 1c                	je     3e92 <base64_encode+0x122>
3e76:	31 f6                	xor    esi,esi
3e78:	eb 94                	jmp    3e0e <base64_encode+0x9e>
3e7a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3e80:	41 83 e0 3c          	and    r8d,0x3c
3e84:	48 83 f9 03          	cmp    rcx,0x3
3e88:	43 0f b6 04 01       	movzx  eax,BYTE PTR [r9+r8*1]
3e8d:	88 42 02             	mov    BYTE PTR [rdx+0x2],al
3e90:	75 da                	jne    3e6c <base64_encode+0xfc>
3e92:	f3 c3                	repz ret
3e94:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
3e98:	48 85 c0             	test   rax,rax
3e9b:	4c 8d 04 07          	lea    r8,[rdi+rax*1]
3e9f:	48 8d 0d 5a 41 00 00 	lea    rcx,[rip+0x415a]        # 8000 <b64c>
3ea6:	74 ea                	je     3e92 <base64_encode+0x122>
3ea8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
3eaf:	00
3eb0:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
3eb3:	48 83 c7 03          	add    rdi,0x3
3eb7:	48 83 c2 04          	add    rdx,0x4
3ebb:	89 c6                	mov    esi,eax
3ebd:	c1 e0 04             	shl    eax,0x4
3ec0:	40 c0 ee 02          	shr    sil,0x2
3ec4:	83 e6 3f             	and    esi,0x3f
3ec7:	0f b6 34 31          	movzx  esi,BYTE PTR [rcx+rsi*1]
3ecb:	40 88 72 fc          	mov    BYTE PTR [rdx-0x4],sil
3ecf:	0f b6 77 fe          	movzx  esi,BYTE PTR [rdi-0x2]
3ed3:	41 89 f1             	mov    r9d,esi
3ed6:	41 c0 e9 04          	shr    r9b,0x4
3eda:	44 01 c8             	add    eax,r9d
3edd:	83 e0 3f             	and    eax,0x3f
3ee0:	0f b6 04 01          	movzx  eax,BYTE PTR [rcx+rax*1]
3ee4:	88 42 fd             	mov    BYTE PTR [rdx-0x3],al
3ee7:	0f b6 47 ff          	movzx  eax,BYTE PTR [rdi-0x1]
3eeb:	41 89 c1             	mov    r9d,eax
3eee:	83 e0 3f             	and    eax,0x3f
3ef1:	41 c0 e9 06          	shr    r9b,0x6
3ef5:	0f b6 04 01          	movzx  eax,BYTE PTR [rcx+rax*1]
3ef9:	41 8d 34 b1          	lea    esi,[r9+rsi*4]
3efd:	83 e6 3f             	and    esi,0x3f
3f00:	0f b6 34 31          	movzx  esi,BYTE PTR [rcx+rsi*1]
3f04:	40 88 72 fe          	mov    BYTE PTR [rdx-0x2],sil
3f08:	49 39 f8             	cmp    r8,rdi
3f0b:	88 42 ff             	mov    BYTE PTR [rdx-0x1],al
3f0e:	75 a0                	jne    3eb0 <base64_encode+0x140>
3f10:	f3 c3                	repz ret
3f12:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
3f18:	48 85 c9             	test   rcx,rcx
3f1b:	0f 84 71 ff ff ff    	je     3e92 <base64_encode+0x122>
3f21:	c6 02 00             	mov    BYTE PTR [rdx],0x0
3f24:	c3                   	ret
3f25:	90                   	nop
3f26:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
3f2d:	00 00 00

0000000000003f30 <base64_encode_alloc>:
3f30:	41 56                	push   r14
3f32:	41 55                	push   r13
3f34:	49 89 d5             	mov    r13,rdx
3f37:	48 8d 56 02          	lea    rdx,[rsi+0x2]
3f3b:	41 54                	push   r12
3f3d:	55                   	push   rbp
3f3e:	53                   	push   rbx
3f3f:	48 bb ab aa aa aa aa 	movabs rbx,0xaaaaaaaaaaaaaaab
3f46:	aa aa aa
3f49:	48 89 d0             	mov    rax,rdx
3f4c:	48 f7 e3             	mul    rbx
3f4f:	48 d1 ea             	shr    rdx,1
3f52:	48 8d 1c 95 00 00 00 	lea    rbx,[rdx*4+0x0]
3f59:	00
3f5a:	48 8d 6b 01          	lea    rbp,[rbx+0x1]
3f5e:	48 39 ee             	cmp    rsi,rbp
3f61:	76 1d                	jbe    3f80 <base64_encode_alloc+0x50>
3f63:	49 c7 45 00 00 00 00 	mov    QWORD PTR [r13+0x0],0x0
3f6a:	00
3f6b:	31 ed                	xor    ebp,ebp
3f6d:	5b                   	pop    rbx
3f6e:	48 89 e8             	mov    rax,rbp
3f71:	5d                   	pop    rbp
3f72:	41 5c                	pop    r12
3f74:	41 5d                	pop    r13
3f76:	41 5e                	pop    r14
3f78:	c3                   	ret
3f79:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
3f80:	49 89 fe             	mov    r14,rdi
3f83:	48 89 ef             	mov    rdi,rbp
3f86:	49 89 f4             	mov    r12,rsi
3f89:	e8 f2 d7 ff ff       	call   1780 <malloc@plt>
3f8e:	48 85 c0             	test   rax,rax
3f91:	49 89 45 00          	mov    QWORD PTR [r13+0x0],rax
3f95:	74 d6                	je     3f6d <base64_encode_alloc+0x3d>
3f97:	48 89 e9             	mov    rcx,rbp
3f9a:	48 89 c2             	mov    rdx,rax
3f9d:	48 89 dd             	mov    rbp,rbx
3fa0:	4c 89 e6             	mov    rsi,r12
3fa3:	4c 89 f7             	mov    rdi,r14
3fa6:	e8 c5 fd ff ff       	call   3d70 <base64_encode>
3fab:	5b                   	pop    rbx
3fac:	48 89 e8             	mov    rax,rbp
3faf:	5d                   	pop    rbp
3fb0:	41 5c                	pop    r12
3fb2:	41 5d                	pop    r13
3fb4:	41 5e                	pop    r14
3fb6:	c3                   	ret
3fb7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
3fbe:	00 00

0000000000003fc0 <isbase64>:
3fc0:	48 8d 05 39 3f 00 00 	lea    rax,[rip+0x3f39]        # 7f00 <b64>
3fc7:	40 0f b6 ff          	movzx  edi,dil
3fcb:	0f b6 04 38          	movzx  eax,BYTE PTR [rax+rdi*1]
3fcf:	f7 d0                	not    eax
3fd1:	c0 e8 07             	shr    al,0x7
3fd4:	c3                   	ret
3fd5:	90                   	nop
3fd6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
3fdd:	00 00 00

0000000000003fe0 <base64_decode_ctx_init>:
3fe0:	c7 07 00 00 00 00    	mov    DWORD PTR [rdi],0x0
3fe6:	c3                   	ret
3fe7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
3fee:	00 00

0000000000003ff0 <base64_decode_ctx>:
3ff0:	41 57                	push   r15
3ff2:	41 56                	push   r14
3ff4:	49 89 fe             	mov    r14,rdi
3ff7:	41 55                	push   r13
3ff9:	41 54                	push   r12
3ffb:	49 89 d5             	mov    r13,rdx
3ffe:	55                   	push   rbp
3fff:	53                   	push   rbx
4000:	49 89 f4             	mov    r12,rsi
4003:	48 83 ec 38          	sub    rsp,0x38
4007:	4d 8b 38             	mov    r15,QWORD PTR [r8]
400a:	64 48 8b 1c 25 28 00 	mov    rbx,QWORD PTR fs:0x28
4011:	00 00
4013:	48 89 5c 24 28       	mov    QWORD PTR [rsp+0x28],rbx
4018:	31 db                	xor    ebx,ebx
401a:	48 85 ff             	test   rdi,rdi
401d:	48 89 4c 24 18       	mov    QWORD PTR [rsp+0x18],rcx
4022:	4c 89 44 24 10       	mov    QWORD PTR [rsp+0x10],r8
4027:	4c 89 7c 24 20       	mov    QWORD PTR [rsp+0x20],r15
402c:	0f 95 44 24 07       	setne  BYTE PTR [rsp+0x7]
4031:	0f 84 29 02 00 00    	je     4260 <base64_decode_ctx+0x270>
4037:	48 85 d2             	test   rdx,rdx
403a:	8b 07                	mov    eax,DWORD PTR [rdi]
403c:	0f 95 44 24 05       	setne  BYTE PTR [rsp+0x5]
4041:	0f b6 5c 24 05       	movzx  ebx,BYTE PTR [rsp+0x5]
4046:	85 c0                	test   eax,eax
4048:	0f 94 c0             	sete   al
404b:	21 d8                	and    eax,ebx
404d:	88 44 24 06          	mov    BYTE PTR [rsp+0x6],al
4051:	49 8d 46 04          	lea    rax,[r14+0x4]
4055:	48 8d 6c 24 20       	lea    rbp,[rsp+0x20]
405a:	48 8d 5c 24 18       	lea    rbx,[rsp+0x18]
405f:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
4064:	80 7c 24 06 00       	cmp    BYTE PTR [rsp+0x6],0x0
4069:	4c 89 fa             	mov    rdx,r15
406c:	0f 85 d3 00 00 00    	jne    4145 <base64_decode_ctx+0x155>
4072:	4d 85 ed             	test   r13,r13
4075:	0f 94 c0             	sete   al
4078:	22 44 24 05          	and    al,BYTE PTR [rsp+0x5]
407c:	0f 85 86 00 00 00    	jne    4108 <base64_decode_ctx+0x118>
4082:	4d 85 ed             	test   r13,r13
4085:	0f 84 dd 00 00 00    	je     4168 <base64_decode_ctx+0x178>
408b:	41 80 3c 24 0a       	cmp    BYTE PTR [r12],0xa
4090:	0f 84 9a 01 00 00    	je     4230 <base64_decode_ctx+0x240>
4096:	4c 29 fa             	sub    rdx,r15
4099:	48 01 54 24 18       	add    QWORD PTR [rsp+0x18],rdx
409e:	4d 85 f6             	test   r14,r14
40a1:	4c 89 7c 24 20       	mov    QWORD PTR [rsp+0x20],r15
40a6:	4f 8d 3c 2c          	lea    r15,[r12+r13*1]
40aa:	0f 85 d1 00 00 00    	jne    4181 <base64_decode_ctx+0x191>
40b0:	4c 89 e7             	mov    rdi,r12
40b3:	49 83 fd 03          	cmp    r13,0x3
40b7:	77 12                	ja     40cb <base64_decode_ctx+0xdb>
40b9:	80 7c 24 07 00       	cmp    BYTE PTR [rsp+0x7],0x0
40be:	74 0b                	je     40cb <base64_decode_ctx+0xdb>
40c0:	80 7c 24 05 00       	cmp    BYTE PTR [rsp+0x5],0x0
40c5:	0f 85 04 01 00 00    	jne    41cf <base64_decode_ctx+0x1df>
40cb:	48 89 e9             	mov    rcx,rbp
40ce:	48 89 da             	mov    rdx,rbx
40d1:	4c 89 ee             	mov    rsi,r13
40d4:	e8 87 fb ff ff       	call   3c60 <decode_4>
40d9:	84 c0                	test   al,al
40db:	0f 84 ad 01 00 00    	je     428e <base64_decode_ctx+0x29e>
40e1:	4d 29 e7             	sub    r15,r12
40e4:	80 7c 24 06 00       	cmp    BYTE PTR [rsp+0x6],0x0
40e9:	4d 89 fd             	mov    r13,r15
40ec:	4c 8b 7c 24 20       	mov    r15,QWORD PTR [rsp+0x20]
40f1:	4c 89 fa             	mov    rdx,r15
40f4:	75 4f                	jne    4145 <base64_decode_ctx+0x155>
40f6:	4d 85 ed             	test   r13,r13
40f9:	0f 94 c0             	sete   al
40fc:	22 44 24 05          	and    al,BYTE PTR [rsp+0x5]
4100:	74 80                	je     4082 <base64_decode_ctx+0x92>
4102:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4108:	48 8b 5c 24 10       	mov    rbx,QWORD PTR [rsp+0x10]
410d:	48 29 13             	sub    QWORD PTR [rbx],rdx
4110:	48 8b 5c 24 28       	mov    rbx,QWORD PTR [rsp+0x28]
4115:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
411c:	00 00
411e:	0f 85 74 01 00 00    	jne    4298 <base64_decode_ctx+0x2a8>
4124:	48 83 c4 38          	add    rsp,0x38
4128:	5b                   	pop    rbx
4129:	5d                   	pop    rbp
412a:	41 5c                	pop    r12
412c:	41 5d                	pop    r13
412e:	41 5e                	pop    r14
4130:	41 5f                	pop    r15
4132:	c3                   	ret
4133:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
4138:	4c 8b 7c 24 20       	mov    r15,QWORD PTR [rsp+0x20]
413d:	49 83 c4 04          	add    r12,0x4
4141:	49 83 ed 04          	sub    r13,0x4
4145:	48 89 e9             	mov    rcx,rbp
4148:	48 89 da             	mov    rdx,rbx
414b:	4c 89 ee             	mov    rsi,r13
414e:	4c 89 e7             	mov    rdi,r12
4151:	e8 0a fb ff ff       	call   3c60 <decode_4>
4156:	84 c0                	test   al,al
4158:	75 de                	jne    4138 <base64_decode_ctx+0x148>
415a:	48 8b 54 24 20       	mov    rdx,QWORD PTR [rsp+0x20]
415f:	e9 0e ff ff ff       	jmp    4072 <base64_decode_ctx+0x82>
4164:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
4168:	4c 29 fa             	sub    rdx,r15
416b:	48 01 54 24 18       	add    QWORD PTR [rsp+0x18],rdx
4170:	4d 85 f6             	test   r14,r14
4173:	4c 89 7c 24 20       	mov    QWORD PTR [rsp+0x20],r15
4178:	0f 84 f1 00 00 00    	je     426f <base64_decode_ctx+0x27f>
417e:	4d 89 e7             	mov    r15,r12
4181:	41 8b 06             	mov    eax,DWORD PTR [r14]
4184:	83 f8 04             	cmp    eax,0x4
4187:	74 57                	je     41e0 <base64_decode_ctx+0x1f0>
4189:	85 c0                	test   eax,eax
418b:	74 5a                	je     41e7 <base64_decode_ctx+0x1f7>
418d:	4d 39 fc             	cmp    r12,r15
4190:	73 2c                	jae    41be <base64_decode_ctx+0x1ce>
4192:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4198:	49 83 c4 01          	add    r12,0x1
419c:	41 0f b6 54 24 ff    	movzx  edx,BYTE PTR [r12-0x1]
41a2:	80 fa 0a             	cmp    dl,0xa
41a5:	74 12                	je     41b9 <base64_decode_ctx+0x1c9>
41a7:	8d 48 01             	lea    ecx,[rax+0x1]
41aa:	83 f9 04             	cmp    ecx,0x4
41ad:	41 89 0e             	mov    DWORD PTR [r14],ecx
41b0:	41 88 54 06 04       	mov    BYTE PTR [r14+rax*1+0x4],dl
41b5:	74 59                	je     4210 <base64_decode_ctx+0x220>
41b7:	89 c8                	mov    eax,ecx
41b9:	4d 39 fc             	cmp    r12,r15
41bc:	75 da                	jne    4198 <base64_decode_ctx+0x1a8>
41be:	41 89 c5             	mov    r13d,eax
41c1:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
41c6:	4d 85 ed             	test   r13,r13
41c9:	0f 85 e4 fe ff ff    	jne    40b3 <base64_decode_ctx+0xc3>
41cf:	48 8b 54 24 20       	mov    rdx,QWORD PTR [rsp+0x20]
41d4:	b8 01 00 00 00       	mov    eax,0x1
41d9:	e9 2a ff ff ff       	jmp    4108 <base64_decode_ctx+0x118>
41de:	66 90                	xchg   ax,ax
41e0:	41 c7 06 00 00 00 00 	mov    DWORD PTR [r14],0x0
41e7:	49 83 fd 03          	cmp    r13,0x3
41eb:	7e 17                	jle    4204 <base64_decode_ctx+0x214>
41ed:	ba 04 00 00 00       	mov    edx,0x4
41f2:	be 0a 00 00 00       	mov    esi,0xa
41f7:	4c 89 e7             	mov    rdi,r12
41fa:	e8 11 d5 ff ff       	call   1710 <memchr@plt>
41ff:	48 85 c0             	test   rax,rax
4202:	74 78                	je     427c <base64_decode_ctx+0x28c>
4204:	41 8b 06             	mov    eax,DWORD PTR [r14]
4207:	e9 81 ff ff ff       	jmp    418d <base64_decode_ctx+0x19d>
420c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
4210:	b8 04 00 00 00       	mov    eax,0x4
4215:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
421a:	41 89 c5             	mov    r13d,eax
421d:	4d 85 ed             	test   r13,r13
4220:	0f 85 8d fe ff ff    	jne    40b3 <base64_decode_ctx+0xc3>
4226:	eb a7                	jmp    41cf <base64_decode_ctx+0x1df>
4228:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
422f:	00
4230:	4d 85 f6             	test   r14,r14
4233:	74 13                	je     4248 <base64_decode_ctx+0x258>
4235:	49 83 c4 01          	add    r12,0x1
4239:	49 83 ed 01          	sub    r13,0x1
423d:	49 89 d7             	mov    r15,rdx
4240:	e9 1f fe ff ff       	jmp    4064 <base64_decode_ctx+0x74>
4245:	0f 1f 00             	nop    DWORD PTR [rax]
4248:	4c 29 fa             	sub    rdx,r15
424b:	4c 89 7c 24 20       	mov    QWORD PTR [rsp+0x20],r15
4250:	48 01 54 24 18       	add    QWORD PTR [rsp+0x18],rdx
4255:	4f 8d 3c 2c          	lea    r15,[r12+r13*1]
4259:	e9 52 fe ff ff       	jmp    40b0 <base64_decode_ctx+0xc0>
425e:	66 90                	xchg   ax,ax
4260:	c6 44 24 06 01       	mov    BYTE PTR [rsp+0x6],0x1
4265:	c6 44 24 05 01       	mov    BYTE PTR [rsp+0x5],0x1
426a:	e9 e2 fd ff ff       	jmp    4051 <base64_decode_ctx+0x61>
426f:	4c 89 fa             	mov    rdx,r15
4272:	b8 01 00 00 00       	mov    eax,0x1
4277:	e9 8c fe ff ff       	jmp    4108 <base64_decode_ctx+0x118>
427c:	4c 89 e7             	mov    rdi,r12
427f:	41 bd 04 00 00 00    	mov    r13d,0x4
4285:	49 83 c4 04          	add    r12,0x4
4289:	e9 3d fe ff ff       	jmp    40cb <base64_decode_ctx+0xdb>
428e:	48 8b 54 24 20       	mov    rdx,QWORD PTR [rsp+0x20]
4293:	e9 70 fe ff ff       	jmp    4108 <base64_decode_ctx+0x118>
4298:	e8 c3 d3 ff ff       	call   1660 <__stack_chk_fail@plt>
429d:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000042a0 <base64_decode_alloc_ctx>:
42a0:	41 56                	push   r14
42a2:	41 55                	push   r13
42a4:	49 89 d6             	mov    r14,rdx
42a7:	41 54                	push   r12
42a9:	55                   	push   rbp
42aa:	49 89 fc             	mov    r12,rdi
42ad:	53                   	push   rbx
42ae:	49 89 f5             	mov    r13,rsi
42b1:	48 89 cb             	mov    rbx,rcx
42b4:	4c 89 c5             	mov    rbp,r8
42b7:	48 83 ec 20          	sub    rsp,0x20
42bb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
42c2:	00 00
42c4:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
42c9:	31 c0                	xor    eax,eax
42cb:	48 89 d0             	mov    rax,rdx
42ce:	48 c1 e8 02          	shr    rax,0x2
42d2:	48 8d 7c 40 03       	lea    rdi,[rax+rax*2+0x3]
42d7:	48 89 7c 24 10       	mov    QWORD PTR [rsp+0x10],rdi
42dc:	e8 9f d4 ff ff       	call   1780 <malloc@plt>
42e1:	48 85 c0             	test   rax,rax
42e4:	48 89 03             	mov    QWORD PTR [rbx],rax
42e7:	74 2f                	je     4318 <base64_decode_alloc_ctx+0x78>
42e9:	4c 8d 44 24 10       	lea    r8,[rsp+0x10]
42ee:	48 89 c1             	mov    rcx,rax
42f1:	4c 89 f2             	mov    rdx,r14
42f4:	4c 89 ee             	mov    rsi,r13
42f7:	4c 89 e7             	mov    rdi,r12
42fa:	e8 f1 fc ff ff       	call   3ff0 <base64_decode_ctx>
42ff:	84 c0                	test   al,al
4301:	74 3d                	je     4340 <base64_decode_alloc_ctx+0xa0>
4303:	48 85 ed             	test   rbp,rbp
4306:	74 10                	je     4318 <base64_decode_alloc_ctx+0x78>
4308:	48 8b 54 24 10       	mov    rdx,QWORD PTR [rsp+0x10]
430d:	48 89 55 00          	mov    QWORD PTR [rbp+0x0],rdx
4311:	eb 0a                	jmp    431d <base64_decode_alloc_ctx+0x7d>
4313:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
4318:	b8 01 00 00 00       	mov    eax,0x1
431d:	48 8b 4c 24 18       	mov    rcx,QWORD PTR [rsp+0x18]
4322:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
4329:	00 00
432b:	75 2d                	jne    435a <base64_decode_alloc_ctx+0xba>
432d:	48 83 c4 20          	add    rsp,0x20
4331:	5b                   	pop    rbx
4332:	5d                   	pop    rbp
4333:	41 5c                	pop    r12
4335:	41 5d                	pop    r13
4337:	41 5e                	pop    r14
4339:	c3                   	ret
433a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4340:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
4343:	88 44 24 0f          	mov    BYTE PTR [rsp+0xf],al
4347:	e8 44 d2 ff ff       	call   1590 <free@plt>
434c:	48 c7 03 00 00 00 00 	mov    QWORD PTR [rbx],0x0
4353:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [rsp+0xf]
4358:	eb c3                	jmp    431d <base64_decode_alloc_ctx+0x7d>
435a:	e8 01 d3 ff ff       	call   1660 <__stack_chk_fail@plt>
435f:	90                   	nop

0000000000004360 <close_stdout_set_file_name>:
4360:	48 89 3d 99 6d 20 00 	mov    QWORD PTR [rip+0x206d99],rdi        # 20b100 <file_name>
4367:	c3                   	ret
4368:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
436f:	00

0000000000004370 <close_stdout_set_ignore_EPIPE>:
4370:	40 88 3d 81 6d 20 00 	mov    BYTE PTR [rip+0x206d81],dil        # 20b0f8 <ignore_EPIPE>
4377:	c3                   	ret
4378:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
437f:	00

0000000000004380 <close_stdout>:
4380:	55                   	push   rbp
4381:	53                   	push   rbx
4382:	48 83 ec 08          	sub    rsp,0x8
4386:	48 8b 3d fb 6c 20 00 	mov    rdi,QWORD PTR [rip+0x206cfb]        # 20b088 <stdout@@GLIBC_2.2.5>
438d:	e8 be 2d 00 00       	call   7150 <close_stream>
4392:	85 c0                	test   eax,eax
4394:	74 16                	je     43ac <close_stdout+0x2c>
4396:	e8 15 d2 ff ff       	call   15b0 <__errno_location@plt>
439b:	80 3d 56 6d 20 00 00 	cmp    BYTE PTR [rip+0x206d56],0x0        # 20b0f8 <ignore_EPIPE>
43a2:	48 89 c3             	mov    rbx,rax
43a5:	74 1c                	je     43c3 <close_stdout+0x43>
43a7:	83 38 20             	cmp    DWORD PTR [rax],0x20
43aa:	75 17                	jne    43c3 <close_stdout+0x43>
43ac:	48 8b 3d 0d 6d 20 00 	mov    rdi,QWORD PTR [rip+0x206d0d]        # 20b0c0 <stderr@@GLIBC_2.2.5>
43b3:	e8 98 2d 00 00       	call   7150 <close_stream>
43b8:	85 c0                	test   eax,eax
43ba:	75 46                	jne    4402 <close_stdout+0x82>
43bc:	48 83 c4 08          	add    rsp,0x8
43c0:	5b                   	pop    rbx
43c1:	5d                   	pop    rbp
43c2:	c3                   	ret
43c3:	48 8d 35 d4 30 00 00 	lea    rsi,[rip+0x30d4]        # 749e <_IO_stdin_used+0x17e>
43ca:	31 ff                	xor    edi,edi
43cc:	ba 05 00 00 00       	mov    edx,0x5
43d1:	e8 5a d2 ff ff       	call   1630 <dcgettext@plt>
43d6:	48 8b 3d 23 6d 20 00 	mov    rdi,QWORD PTR [rip+0x206d23]        # 20b100 <file_name>
43dd:	48 89 c5             	mov    rbp,rax
43e0:	48 85 ff             	test   rdi,rdi
43e3:	74 28                	je     440d <close_stdout+0x8d>
43e5:	e8 96 1b 00 00       	call   5f80 <quotearg_colon>
43ea:	8b 33                	mov    esi,DWORD PTR [rbx]
43ec:	48 8d 15 4d 3c 00 00 	lea    rdx,[rip+0x3c4d]        # 8040 <b64c+0x40>
43f3:	48 89 c1             	mov    rcx,rax
43f6:	49 89 e8             	mov    r8,rbp
43f9:	31 ff                	xor    edi,edi
43fb:	31 c0                	xor    eax,eax
43fd:	e8 0e d4 ff ff       	call   1810 <error@plt>
4402:	8b 3d 10 6c 20 00    	mov    edi,DWORD PTR [rip+0x206c10]        # 20b018 <exit_failure>
4408:	e8 c3 d1 ff ff       	call   15d0 <_exit@plt>
440d:	8b 33                	mov    esi,DWORD PTR [rbx]
440f:	48 8d 15 2e 3c 00 00 	lea    rdx,[rip+0x3c2e]        # 8044 <b64c+0x44>
4416:	48 89 c1             	mov    rcx,rax
4419:	31 ff                	xor    edi,edi
441b:	31 c0                	xor    eax,eax
441d:	e8 ee d3 ff ff       	call   1810 <error@plt>
4422:	eb de                	jmp    4402 <close_stdout+0x82>
4424:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
442b:	00 00 00
442e:	66 90                	xchg   ax,ax

0000000000004430 <fdadvise>:
4430:	e9 cb d2 ff ff       	jmp    1700 <posix_fadvise@plt>
4435:	90                   	nop
4436:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
443d:	00 00 00

0000000000004440 <fadvise>:
4440:	48 85 ff             	test   rdi,rdi
4443:	74 1b                	je     4460 <fadvise+0x20>
4445:	53                   	push   rbx
4446:	89 f3                	mov    ebx,esi
4448:	e8 23 d3 ff ff       	call   1770 <fileno@plt>
444d:	89 d9                	mov    ecx,ebx
444f:	31 d2                	xor    edx,edx
4451:	31 f6                	xor    esi,esi
4453:	5b                   	pop    rbx
4454:	89 c7                	mov    edi,eax
4456:	e9 a5 d2 ff ff       	jmp    1700 <posix_fadvise@plt>
445b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
4460:	f3 c3                	repz ret
4462:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
4469:	00 00 00
446c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000004470 <set_program_name>:
4470:	48 85 ff             	test   rdi,rdi
4473:	53                   	push   rbx
4474:	74 77                	je     44ed <set_program_name+0x7d>
4476:	be 2f 00 00 00       	mov    esi,0x2f
447b:	48 89 fb             	mov    rbx,rdi
447e:	e8 2d d2 ff ff       	call   16b0 <strrchr@plt>
4483:	48 85 c0             	test   rax,rax
4486:	74 55                	je     44dd <set_program_name+0x6d>
4488:	4c 8d 40 01          	lea    r8,[rax+0x1]
448c:	4c 89 c2             	mov    rdx,r8
448f:	48 29 da             	sub    rdx,rbx
4492:	48 83 fa 06          	cmp    rdx,0x6
4496:	7e 45                	jle    44dd <set_program_name+0x6d>
4498:	48 8d 70 fa          	lea    rsi,[rax-0x6]
449c:	48 8d 3d dd 3b 00 00 	lea    rdi,[rip+0x3bdd]        # 8080 <b64c+0x80>
44a3:	b9 07 00 00 00       	mov    ecx,0x7
44a8:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
44aa:	0f 97 c2             	seta   dl
44ad:	80 da 00             	sbb    dl,0x0
44b0:	84 d2                	test   dl,dl
44b2:	75 29                	jne    44dd <set_program_name+0x6d>
44b4:	48 8d 3d cd 3b 00 00 	lea    rdi,[rip+0x3bcd]        # 8088 <b64c+0x88>
44bb:	b9 03 00 00 00       	mov    ecx,0x3
44c0:	4c 89 c6             	mov    rsi,r8
44c3:	4c 89 c3             	mov    rbx,r8
44c6:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
44c8:	0f 97 c2             	seta   dl
44cb:	80 da 00             	sbb    dl,0x0
44ce:	84 d2                	test   dl,dl
44d0:	75 0b                	jne    44dd <set_program_name+0x6d>
44d2:	48 8d 58 04          	lea    rbx,[rax+0x4]
44d6:	48 89 1d a3 6b 20 00 	mov    QWORD PTR [rip+0x206ba3],rbx        # 20b080 <__progname@@GLIBC_2.2.5>
44dd:	48 89 1d 24 6c 20 00 	mov    QWORD PTR [rip+0x206c24],rbx        # 20b108 <program_name>
44e4:	48 89 1d bd 6b 20 00 	mov    QWORD PTR [rip+0x206bbd],rbx        # 20b0a8 <__progname_full@@GLIBC_2.2.5>
44eb:	5b                   	pop    rbx
44ec:	c3                   	ret
44ed:	48 8b 0d cc 6b 20 00 	mov    rcx,QWORD PTR [rip+0x206bcc]        # 20b0c0 <stderr@@GLIBC_2.2.5>
44f4:	48 8d 3d 4d 3b 00 00 	lea    rdi,[rip+0x3b4d]        # 8048 <b64c+0x48>
44fb:	ba 37 00 00 00       	mov    edx,0x37
4500:	be 01 00 00 00       	mov    esi,0x1
4505:	e8 56 d3 ff ff       	call   1860 <fwrite@plt>
450a:	e8 91 d0 ff ff       	call   15a0 <abort@plt>
450f:	90                   	nop

0000000000004510 <gettext_quote.part.1>:
4510:	55                   	push   rbp
4511:	53                   	push   rbx
4512:	48 89 fd             	mov    rbp,rdi
4515:	89 f3                	mov    ebx,esi
4517:	48 83 ec 08          	sub    rsp,0x8
451b:	e8 10 2d 00 00       	call   7230 <locale_charset>
4520:	0f b6 10             	movzx  edx,BYTE PTR [rax]
4523:	83 e2 df             	and    edx,0xffffffdf
4526:	80 fa 55             	cmp    dl,0x55
4529:	74 75                	je     45a0 <gettext_quote.part.1+0x90>
452b:	80 fa 47             	cmp    dl,0x47
452e:	74 20                	je     4550 <gettext_quote.part.1+0x40>
4530:	48 8d 05 64 3b 00 00 	lea    rax,[rip+0x3b64]        # 809b <b64c+0x9b>
4537:	48 8d 15 5f 3b 00 00 	lea    rdx,[rip+0x3b5f]        # 809d <b64c+0x9d>
453e:	83 fb 09             	cmp    ebx,0x9
4541:	48 0f 45 c2          	cmovne rax,rdx
4545:	48 83 c4 08          	add    rsp,0x8
4549:	5b                   	pop    rbx
454a:	5d                   	pop    rbp
454b:	c3                   	ret
454c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
4550:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
4554:	83 e2 df             	and    edx,0xffffffdf
4557:	80 fa 42             	cmp    dl,0x42
455a:	75 d4                	jne    4530 <gettext_quote.part.1+0x20>
455c:	80 78 02 31          	cmp    BYTE PTR [rax+0x2],0x31
4560:	75 ce                	jne    4530 <gettext_quote.part.1+0x20>
4562:	80 78 03 38          	cmp    BYTE PTR [rax+0x3],0x38
4566:	75 c8                	jne    4530 <gettext_quote.part.1+0x20>
4568:	80 78 04 30          	cmp    BYTE PTR [rax+0x4],0x30
456c:	75 c2                	jne    4530 <gettext_quote.part.1+0x20>
456e:	80 78 05 33          	cmp    BYTE PTR [rax+0x5],0x33
4572:	75 bc                	jne    4530 <gettext_quote.part.1+0x20>
4574:	80 78 06 30          	cmp    BYTE PTR [rax+0x6],0x30
4578:	75 b6                	jne    4530 <gettext_quote.part.1+0x20>
457a:	80 78 07 00          	cmp    BYTE PTR [rax+0x7],0x0
457e:	75 b0                	jne    4530 <gettext_quote.part.1+0x20>
4580:	80 7d 00 60          	cmp    BYTE PTR [rbp+0x0],0x60
4584:	48 8d 05 09 3b 00 00 	lea    rax,[rip+0x3b09]        # 8094 <b64c+0x94>
458b:	48 8d 15 06 3b 00 00 	lea    rdx,[rip+0x3b06]        # 8098 <b64c+0x98>
4592:	48 0f 45 c2          	cmovne rax,rdx
4596:	48 83 c4 08          	add    rsp,0x8
459a:	5b                   	pop    rbx
459b:	5d                   	pop    rbp
459c:	c3                   	ret
459d:	0f 1f 00             	nop    DWORD PTR [rax]
45a0:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
45a4:	83 e2 df             	and    edx,0xffffffdf
45a7:	80 fa 54             	cmp    dl,0x54
45aa:	75 84                	jne    4530 <gettext_quote.part.1+0x20>
45ac:	0f b6 50 02          	movzx  edx,BYTE PTR [rax+0x2]
45b0:	83 e2 df             	and    edx,0xffffffdf
45b3:	80 fa 46             	cmp    dl,0x46
45b6:	0f 85 74 ff ff ff    	jne    4530 <gettext_quote.part.1+0x20>
45bc:	80 78 03 2d          	cmp    BYTE PTR [rax+0x3],0x2d
45c0:	0f 85 6a ff ff ff    	jne    4530 <gettext_quote.part.1+0x20>
45c6:	80 78 04 38          	cmp    BYTE PTR [rax+0x4],0x38
45ca:	0f 85 60 ff ff ff    	jne    4530 <gettext_quote.part.1+0x20>
45d0:	80 78 05 00          	cmp    BYTE PTR [rax+0x5],0x0
45d4:	0f 85 56 ff ff ff    	jne    4530 <gettext_quote.part.1+0x20>
45da:	80 7d 00 60          	cmp    BYTE PTR [rbp+0x0],0x60
45de:	48 8d 05 a7 3a 00 00 	lea    rax,[rip+0x3aa7]        # 808c <b64c+0x8c>
45e5:	48 8d 15 a4 3a 00 00 	lea    rdx,[rip+0x3aa4]        # 8090 <b64c+0x90>
45ec:	48 0f 45 c2          	cmovne rax,rdx
45f0:	48 83 c4 08          	add    rsp,0x8
45f4:	5b                   	pop    rbx
45f5:	5d                   	pop    rbp
45f6:	c3                   	ret
45f7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
45fe:	00 00

0000000000004600 <quotearg_buffer_restyled>:
4600:	41 57                	push   r15
4602:	41 56                	push   r14
4604:	45 89 c7             	mov    r15d,r8d
4607:	41 55                	push   r13
4609:	41 54                	push   r12
460b:	49 89 fe             	mov    r14,rdi
460e:	55                   	push   rbp
460f:	53                   	push   rbx
4610:	44 89 cb             	mov    ebx,r9d
4613:	49 89 f5             	mov    r13,rsi
4616:	48 89 cd             	mov    rbp,rcx
4619:	83 e3 02             	and    ebx,0x2
461c:	48 81 ec b8 00 00 00 	sub    rsp,0xb8
4623:	48 8b 84 24 f0 00 00 	mov    rax,QWORD PTR [rsp+0xf0]
462a:	00
462b:	48 89 54 24 10       	mov    QWORD PTR [rsp+0x10],rdx
4630:	44 89 44 24 08       	mov    DWORD PTR [rsp+0x8],r8d
4635:	44 89 4c 24 78       	mov    DWORD PTR [rsp+0x78],r9d
463a:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
463f:	48 8b 84 24 f8 00 00 	mov    rax,QWORD PTR [rsp+0xf8]
4646:	00
4647:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
464c:	48 8b 84 24 00 01 00 	mov    rax,QWORD PTR [rsp+0x100]
4653:	00
4654:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
4659:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
4660:	00 00
4662:	48 89 84 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],rax
4669:	00
466a:	31 c0                	xor    eax,eax
466c:	e8 cf cf ff ff       	call   1640 <__ctype_get_mb_cur_max@plt>
4671:	41 83 ff 0a          	cmp    r15d,0xa
4675:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
467a:	0f 87 af 11 00 00    	ja     582f <quotearg_buffer_restyled+0x122f>
4680:	48 8d 0d 79 3a 00 00 	lea    rcx,[rip+0x3a79]        # 8100 <b64c+0x100>
4687:	44 89 fa             	mov    edx,r15d
468a:	48 63 04 91          	movsxd rax,DWORD PTR [rcx+rdx*4]
468e:	48 01 c8             	add    rax,rcx
4691:	ff e0                	jmp    rax
4693:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
4698:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
469d:	45 31 e4             	xor    r12d,r12d
46a0:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
46a7:	00 00
46a9:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
46ae:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
46b3:	48 8d 05 e3 39 00 00 	lea    rax,[rip+0x39e3]        # 809d <b64c+0x9d>
46ba:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
46c1:	00 00
46c3:	45 31 ff             	xor    r15d,r15d
46c6:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
46cd:	00
46ce:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
46d3:	45 31 db             	xor    r11d,r11d
46d6:	48 89 e8             	mov    rax,rbp
46d9:	45 89 e0             	mov    r8d,r12d
46dc:	4c 89 dd             	mov    rbp,r11
46df:	49 89 c3             	mov    r11,rax
46e2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
46e8:	49 39 eb             	cmp    r11,rbp
46eb:	41 0f 95 c4          	setne  r12b
46ef:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
46f3:	75 0d                	jne    4702 <quotearg_buffer_restyled+0x102>
46f5:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
46fa:	80 3c 28 00          	cmp    BYTE PTR [rax+rbp*1],0x0
46fe:	41 0f 95 c4          	setne  r12b
4702:	45 84 e4             	test   r12b,r12b
4705:	0f 84 55 06 00 00    	je     4d60 <quotearg_buffer_restyled+0x760>
470b:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4710:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
4715:	4c 8d 0c 2f          	lea    r9,[rdi+rbp*1]
4719:	0f 95 c0             	setne  al
471c:	22 44 24 0d          	and    al,BYTE PTR [rsp+0xd]
4720:	41 89 c2             	mov    r10d,eax
4723:	0f 84 a7 00 00 00    	je     47d0 <quotearg_buffer_restyled+0x1d0>
4729:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
472e:	48 85 c0             	test   rax,rax
4731:	0f 84 29 04 00 00    	je     4b60 <quotearg_buffer_restyled+0x560>
4737:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
473b:	48 8d 5c 05 00       	lea    rbx,[rbp+rax*1+0x0]
4740:	75 2e                	jne    4770 <quotearg_buffer_restyled+0x170>
4742:	48 83 f8 01          	cmp    rax,0x1
4746:	76 28                	jbe    4770 <quotearg_buffer_restyled+0x170>
4748:	44 88 44 24 38       	mov    BYTE PTR [rsp+0x38],r8b
474d:	44 88 54 24 30       	mov    BYTE PTR [rsp+0x30],r10b
4752:	4c 89 4c 24 28       	mov    QWORD PTR [rsp+0x28],r9
4757:	e8 f4 ce ff ff       	call   1650 <strlen@plt>
475c:	44 0f b6 44 24 38    	movzx  r8d,BYTE PTR [rsp+0x38]
4762:	44 0f b6 54 24 30    	movzx  r10d,BYTE PTR [rsp+0x30]
4768:	49 89 c3             	mov    r11,rax
476b:	4c 8b 4c 24 28       	mov    r9,QWORD PTR [rsp+0x28]
4770:	4c 39 db             	cmp    rbx,r11
4773:	44 88 54 24 28       	mov    BYTE PTR [rsp+0x28],r10b
4778:	0f 87 b2 05 00 00    	ja     4d30 <quotearg_buffer_restyled+0x730>
477e:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
4783:	48 8b 74 24 48       	mov    rsi,QWORD PTR [rsp+0x48]
4788:	4c 89 cf             	mov    rdi,r9
478b:	4c 89 5c 24 40       	mov    QWORD PTR [rsp+0x40],r11
4790:	44 88 44 24 38       	mov    BYTE PTR [rsp+0x38],r8b
4795:	4c 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],r9
479a:	e8 81 cf ff ff       	call   1720 <memcmp@plt>
479f:	85 c0                	test   eax,eax
47a1:	4c 8b 4c 24 30       	mov    r9,QWORD PTR [rsp+0x30]
47a6:	44 0f b6 44 24 38    	movzx  r8d,BYTE PTR [rsp+0x38]
47ac:	4c 8b 5c 24 40       	mov    r11,QWORD PTR [rsp+0x40]
47b1:	0f 85 79 05 00 00    	jne    4d30 <quotearg_buffer_restyled+0x730>
47b7:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
47bc:	44 0f b6 54 24 28    	movzx  r10d,BYTE PTR [rsp+0x28]
47c2:	0f 85 7d 0f 00 00    	jne    5745 <quotearg_buffer_restyled+0x1145>
47c8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
47cf:	00
47d0:	41 0f b6 19          	movzx  ebx,BYTE PTR [r9]
47d4:	80 fb 7e             	cmp    bl,0x7e
47d7:	0f 87 1b 03 00 00    	ja     4af8 <quotearg_buffer_restyled+0x4f8>
47dd:	48 8d 0d 48 39 00 00 	lea    rcx,[rip+0x3948]        # 812c <b64c+0x12c>
47e4:	0f b6 d3             	movzx  edx,bl
47e7:	48 63 04 91          	movsxd rax,DWORD PTR [rcx+rdx*4]
47eb:	48 01 c8             	add    rax,rcx
47ee:	ff e0                	jmp    rax
47f0:	45 31 d2             	xor    r10d,r10d
47f3:	49 83 fb 01          	cmp    r11,0x1
47f7:	0f 95 c0             	setne  al
47fa:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
47fe:	75 0c                	jne    480c <quotearg_buffer_restyled+0x20c>
4800:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
4805:	80 78 01 00          	cmp    BYTE PTR [rax+0x1],0x0
4809:	0f 95 c0             	setne  al
480c:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4811:	0f 94 c2             	sete   dl
4814:	84 c0                	test   al,al
4816:	0f 84 4c 02 00 00    	je     4a68 <quotearg_buffer_restyled+0x468>
481c:	45 31 e4             	xor    r12d,r12d
481f:	31 c0                	xor    eax,eax
4821:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
4828:	80 7c 24 0d 01       	cmp    BYTE PTR [rsp+0xd],0x1
482d:	0f 85 0f 01 00 00    	jne    4942 <quotearg_buffer_restyled+0x342>
4833:	84 d2                	test   dl,dl
4835:	0f 85 07 01 00 00    	jne    4942 <quotearg_buffer_restyled+0x342>
483b:	48 8b 74 24 20       	mov    rsi,QWORD PTR [rsp+0x20]
4840:	48 85 f6             	test   rsi,rsi
4843:	74 14                	je     4859 <quotearg_buffer_restyled+0x259>
4845:	89 da                	mov    edx,ebx
4847:	c0 ea 05             	shr    dl,0x5
484a:	0f b6 d2             	movzx  edx,dl
484d:	8b 14 96             	mov    edx,DWORD PTR [rsi+rdx*4]
4850:	0f a3 da             	bt     edx,ebx
4853:	0f 82 4a 01 00 00    	jb     49a3 <quotearg_buffer_restyled+0x3a3>
4859:	45 84 d2             	test   r10b,r10b
485c:	0f 85 41 01 00 00    	jne    49a3 <quotearg_buffer_restyled+0x3a3>
4862:	83 f0 01             	xor    eax,0x1
4865:	48 83 c5 01          	add    rbp,0x1
4869:	44 21 c0             	and    eax,r8d
486c:	84 c0                	test   al,al
486e:	74 20                	je     4890 <quotearg_buffer_restyled+0x290>
4870:	4d 39 fd             	cmp    r13,r15
4873:	76 05                	jbe    487a <quotearg_buffer_restyled+0x27a>
4875:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
487a:	49 8d 47 01          	lea    rax,[r15+0x1]
487e:	49 39 c5             	cmp    r13,rax
4881:	76 06                	jbe    4889 <quotearg_buffer_restyled+0x289>
4883:	43 c6 44 3e 01 27    	mov    BYTE PTR [r14+r15*1+0x1],0x27
4889:	49 83 c7 02          	add    r15,0x2
488d:	45 31 c0             	xor    r8d,r8d
4890:	4d 39 ef             	cmp    r15,r13
4893:	73 04                	jae    4899 <quotearg_buffer_restyled+0x299>
4895:	43 88 1c 3e          	mov    BYTE PTR [r14+r15*1],bl
4899:	0f b6 7c 24 0e       	movzx  edi,BYTE PTR [rsp+0xe]
489e:	49 83 c7 01          	add    r15,0x1
48a2:	b8 00 00 00 00       	mov    eax,0x0
48a7:	45 84 e4             	test   r12b,r12b
48aa:	0f 44 f8             	cmove  edi,eax
48ad:	40 88 7c 24 0e       	mov    BYTE PTR [rsp+0xe],dil
48b2:	e9 31 fe ff ff       	jmp    46e8 <quotearg_buffer_restyled+0xe8>
48b7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
48be:	00 00
48c0:	45 31 d2             	xor    r10d,r10d
48c3:	8b 44 24 08          	mov    eax,DWORD PTR [rsp+0x8]
48c7:	83 f8 02             	cmp    eax,0x2
48ca:	0f 84 b8 05 00 00    	je     4e88 <quotearg_buffer_restyled+0x888>
48d0:	83 f8 05             	cmp    eax,0x5
48d3:	0f 84 6f 05 00 00    	je     4e48 <quotearg_buffer_restyled+0x848>
48d9:	83 f8 02             	cmp    eax,0x2
48dc:	bb 3f 00 00 00       	mov    ebx,0x3f
48e1:	0f 94 c2             	sete   dl
48e4:	45 31 e4             	xor    r12d,r12d
48e7:	31 c0                	xor    eax,eax
48e9:	e9 3a ff ff ff       	jmp    4828 <quotearg_buffer_restyled+0x228>
48ee:	66 90                	xchg   ax,ax
48f0:	45 31 d2             	xor    r10d,r10d
48f3:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
48f8:	0f 84 02 05 00 00    	je     4e00 <quotearg_buffer_restyled+0x800>
48fe:	44 88 64 24 7c       	mov    BYTE PTR [rsp+0x7c],r12b
4903:	31 d2                	xor    edx,edx
4905:	31 c0                	xor    eax,eax
4907:	bb 27 00 00 00       	mov    ebx,0x27
490c:	e9 17 ff ff ff       	jmp    4828 <quotearg_buffer_restyled+0x228>
4911:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
4918:	ba 09 00 00 00       	mov    edx,0x9
491d:	bb 74 00 00 00       	mov    ebx,0x74
4922:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4927:	0f 94 c0             	sete   al
492a:	22 44 24 0f          	and    al,BYTE PTR [rsp+0xf]
492e:	0f 85 4a 01 00 00    	jne    4a7e <quotearg_buffer_restyled+0x47e>
4934:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
4939:	75 65                	jne    49a0 <quotearg_buffer_restyled+0x3a0>
493b:	89 d3                	mov    ebx,edx
493d:	45 31 e4             	xor    r12d,r12d
4940:	31 c0                	xor    eax,eax
4942:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
4947:	0f 85 ee fe ff ff    	jne    483b <quotearg_buffer_restyled+0x23b>
494d:	e9 07 ff ff ff       	jmp    4859 <quotearg_buffer_restyled+0x259>
4952:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4958:	ba 08 00 00 00       	mov    edx,0x8
495d:	bb 62 00 00 00       	mov    ebx,0x62
4962:	eb d0                	jmp    4934 <quotearg_buffer_restyled+0x334>
4964:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
4968:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
496d:	0f 84 cd 03 00 00    	je     4d40 <quotearg_buffer_restyled+0x740>
4973:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
4978:	0f 84 12 02 00 00    	je     4b90 <quotearg_buffer_restyled+0x590>
497e:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
4983:	0f 84 07 02 00 00    	je     4b90 <quotearg_buffer_restyled+0x590>
4989:	48 83 7c 24 18 00    	cmp    QWORD PTR [rsp+0x18],0x0
498f:	0f 85 b6 03 00 00    	jne    4d4b <quotearg_buffer_restyled+0x74b>
4995:	bb 5c 00 00 00       	mov    ebx,0x5c
499a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
49a0:	45 31 e4             	xor    r12d,r12d
49a3:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
49a8:	0f 94 c2             	sete   dl
49ab:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
49b0:	89 d0                	mov    eax,edx
49b2:	0f 85 50 08 00 00    	jne    5208 <quotearg_buffer_restyled+0xc08>
49b8:	44 89 c0             	mov    eax,r8d
49bb:	83 f0 01             	xor    eax,0x1
49be:	20 d0                	and    al,dl
49c0:	74 2f                	je     49f1 <quotearg_buffer_restyled+0x3f1>
49c2:	4d 39 fd             	cmp    r13,r15
49c5:	76 05                	jbe    49cc <quotearg_buffer_restyled+0x3cc>
49c7:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
49cc:	49 8d 57 01          	lea    rdx,[r15+0x1]
49d0:	49 39 d5             	cmp    r13,rdx
49d3:	76 06                	jbe    49db <quotearg_buffer_restyled+0x3db>
49d5:	43 c6 44 3e 01 24    	mov    BYTE PTR [r14+r15*1+0x1],0x24
49db:	49 8d 57 02          	lea    rdx,[r15+0x2]
49df:	49 39 d5             	cmp    r13,rdx
49e2:	76 06                	jbe    49ea <quotearg_buffer_restyled+0x3ea>
49e4:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
49ea:	49 83 c7 03          	add    r15,0x3
49ee:	41 89 c0             	mov    r8d,eax
49f1:	4d 39 fd             	cmp    r13,r15
49f4:	76 05                	jbe    49fb <quotearg_buffer_restyled+0x3fb>
49f6:	43 c6 04 3e 5c       	mov    BYTE PTR [r14+r15*1],0x5c
49fb:	49 83 c7 01          	add    r15,0x1
49ff:	48 83 c5 01          	add    rbp,0x1
4a03:	e9 88 fe ff ff       	jmp    4890 <quotearg_buffer_restyled+0x290>
4a08:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
4a0f:	00
4a10:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
4a15:	0f 85 c8 01 00 00    	jne    4be3 <quotearg_buffer_restyled+0x5e3>
4a1b:	31 d2                	xor    edx,edx
4a1d:	f6 44 24 78 01       	test   BYTE PTR [rsp+0x78],0x1
4a22:	0f 84 13 ff ff ff    	je     493b <quotearg_buffer_restyled+0x33b>
4a28:	48 83 c5 01          	add    rbp,0x1
4a2c:	e9 b7 fc ff ff       	jmp    46e8 <quotearg_buffer_restyled+0xe8>
4a31:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
4a38:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4a3d:	0f 94 c2             	sete   dl
4a40:	31 c0                	xor    eax,eax
4a42:	e9 e1 fd ff ff       	jmp    4828 <quotearg_buffer_restyled+0x228>
4a47:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
4a4e:	00 00
4a50:	ba 07 00 00 00       	mov    edx,0x7
4a55:	bb 61 00 00 00       	mov    ebx,0x61
4a5a:	e9 d5 fe ff ff       	jmp    4934 <quotearg_buffer_restyled+0x334>
4a5f:	90                   	nop
4a60:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4a65:	0f 94 c2             	sete   dl
4a68:	48 85 ed             	test   rbp,rbp
4a6b:	0f 85 ab fd ff ff    	jne    481c <quotearg_buffer_restyled+0x21c>
4a71:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [rsp+0xf]
4a76:	20 d0                	and    al,dl
4a78:	0f 84 aa fd ff ff    	je     4828 <quotearg_buffer_restyled+0x228>
4a7e:	4c 89 dd             	mov    rbp,r11
4a81:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
4a88:	00
4a89:	e9 fb 06 00 00       	jmp    5189 <quotearg_buffer_restyled+0xb89>
4a8e:	66 90                	xchg   ax,ax
4a90:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4a95:	0f 94 c2             	sete   dl
4a98:	45 31 e4             	xor    r12d,r12d
4a9b:	eb d4                	jmp    4a71 <quotearg_buffer_restyled+0x471>
4a9d:	0f 1f 00             	nop    DWORD PTR [rax]
4aa0:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4aa5:	bb 20 00 00 00       	mov    ebx,0x20
4aaa:	0f 94 c2             	sete   dl
4aad:	eb c2                	jmp    4a71 <quotearg_buffer_restyled+0x471>
4aaf:	90                   	nop
4ab0:	ba 0d 00 00 00       	mov    edx,0xd
4ab5:	bb 72 00 00 00       	mov    ebx,0x72
4aba:	e9 63 fe ff ff       	jmp    4922 <quotearg_buffer_restyled+0x322>
4abf:	90                   	nop
4ac0:	ba 0c 00 00 00       	mov    edx,0xc
4ac5:	bb 66 00 00 00       	mov    ebx,0x66
4aca:	e9 65 fe ff ff       	jmp    4934 <quotearg_buffer_restyled+0x334>
4acf:	90                   	nop
4ad0:	ba 0b 00 00 00       	mov    edx,0xb
4ad5:	bb 76 00 00 00       	mov    ebx,0x76
4ada:	e9 55 fe ff ff       	jmp    4934 <quotearg_buffer_restyled+0x334>
4adf:	90                   	nop
4ae0:	ba 0a 00 00 00       	mov    edx,0xa
4ae5:	bb 6e 00 00 00       	mov    ebx,0x6e
4aea:	e9 33 fe ff ff       	jmp    4922 <quotearg_buffer_restyled+0x322>
4aef:	90                   	nop
4af0:	45 31 d2             	xor    r10d,r10d
4af3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
4af8:	48 83 7c 24 58 01    	cmp    QWORD PTR [rsp+0x58],0x1
4afe:	0f 85 a4 03 00 00    	jne    4ea8 <quotearg_buffer_restyled+0x8a8>
4b04:	4c 89 5c 24 38       	mov    QWORD PTR [rsp+0x38],r11
4b09:	44 88 44 24 30       	mov    BYTE PTR [rsp+0x30],r8b
4b0e:	44 88 54 24 28       	mov    BYTE PTR [rsp+0x28],r10b
4b13:	e8 88 cd ff ff       	call   18a0 <__ctype_b_loc@plt>
4b18:	48 8b 08             	mov    rcx,QWORD PTR [rax]
4b1b:	0f b6 d3             	movzx  edx,bl
4b1e:	44 0f b6 54 24 28    	movzx  r10d,BYTE PTR [rsp+0x28]
4b24:	44 0f b6 44 24 30    	movzx  r8d,BYTE PTR [rsp+0x30]
4b2a:	4c 8b 5c 24 38       	mov    r11,QWORD PTR [rsp+0x38]
4b2f:	bf 01 00 00 00       	mov    edi,0x1
4b34:	0f b7 04 51          	movzx  eax,WORD PTR [rcx+rdx*2]
4b38:	66 25 00 40          	and    ax,0x4000
4b3c:	41 0f 95 c4          	setne  r12b
4b40:	0f 94 c0             	sete   al
4b43:	22 44 24 0d          	and    al,BYTE PTR [rsp+0xd]
4b47:	84 c0                	test   al,al
4b49:	0f 85 92 09 00 00    	jne    54e1 <quotearg_buffer_restyled+0xee1>
4b4f:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4b54:	0f 94 c2             	sete   dl
4b57:	e9 cc fc ff ff       	jmp    4828 <quotearg_buffer_restyled+0x228>
4b5c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
4b60:	41 0f b6 19          	movzx  ebx,BYTE PTR [r9]
4b64:	80 fb 7e             	cmp    bl,0x7e
4b67:	77 87                	ja     4af0 <quotearg_buffer_restyled+0x4f0>
4b69:	48 8d 0d b8 37 00 00 	lea    rcx,[rip+0x37b8]        # 8328 <b64c+0x328>
4b70:	0f b6 d3             	movzx  edx,bl
4b73:	48 63 04 91          	movsxd rax,DWORD PTR [rcx+rdx*4]
4b77:	48 01 c8             	add    rax,rcx
4b7a:	ff e0                	jmp    rax
4b7c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
4b80:	45 31 d2             	xor    r10d,r10d
4b83:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
4b88:	0f 85 f0 fd ff ff    	jne    497e <quotearg_buffer_restyled+0x37e>
4b8e:	66 90                	xchg   ax,ax
4b90:	ba 5c 00 00 00       	mov    edx,0x5c
4b95:	bb 5c 00 00 00       	mov    ebx,0x5c
4b9a:	e9 95 fd ff ff       	jmp    4934 <quotearg_buffer_restyled+0x334>
4b9f:	90                   	nop
4ba0:	ba 0c 00 00 00       	mov    edx,0xc
4ba5:	45 31 d2             	xor    r10d,r10d
4ba8:	bb 66 00 00 00       	mov    ebx,0x66
4bad:	e9 82 fd ff ff       	jmp    4934 <quotearg_buffer_restyled+0x334>
4bb2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4bb8:	ba 0a 00 00 00       	mov    edx,0xa
4bbd:	45 31 d2             	xor    r10d,r10d
4bc0:	bb 6e 00 00 00       	mov    ebx,0x6e
4bc5:	e9 58 fd ff ff       	jmp    4922 <quotearg_buffer_restyled+0x322>
4bca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4bd0:	bb 61 00 00 00       	mov    ebx,0x61
4bd5:	e9 c6 fd ff ff       	jmp    49a0 <quotearg_buffer_restyled+0x3a0>
4bda:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4be0:	45 31 d2             	xor    r10d,r10d
4be3:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4be8:	0f 94 c2             	sete   dl
4beb:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
4bf0:	0f 85 94 0b 00 00    	jne    578a <quotearg_buffer_restyled+0x118a>
4bf6:	44 89 c0             	mov    eax,r8d
4bf9:	4c 89 f9             	mov    rcx,r15
4bfc:	83 f0 01             	xor    eax,0x1
4bff:	20 d0                	and    al,dl
4c01:	74 2d                	je     4c30 <quotearg_buffer_restyled+0x630>
4c03:	4d 39 fd             	cmp    r13,r15
4c06:	76 05                	jbe    4c0d <quotearg_buffer_restyled+0x60d>
4c08:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
4c0d:	49 8d 4f 01          	lea    rcx,[r15+0x1]
4c11:	49 39 cd             	cmp    r13,rcx
4c14:	76 06                	jbe    4c1c <quotearg_buffer_restyled+0x61c>
4c16:	43 c6 44 3e 01 24    	mov    BYTE PTR [r14+r15*1+0x1],0x24
4c1c:	49 8d 4f 02          	lea    rcx,[r15+0x2]
4c20:	49 39 cd             	cmp    r13,rcx
4c23:	0f 87 30 06 00 00    	ja     5259 <quotearg_buffer_restyled+0xc59>
4c29:	49 8d 4f 03          	lea    rcx,[r15+0x3]
4c2d:	41 89 c0             	mov    r8d,eax
4c30:	49 39 cd             	cmp    r13,rcx
4c33:	76 05                	jbe    4c3a <quotearg_buffer_restyled+0x63a>
4c35:	41 c6 04 0e 5c       	mov    BYTE PTR [r14+rcx*1],0x5c
4c3a:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4c3f:	4c 8d 79 01          	lea    r15,[rcx+0x1]
4c43:	0f 84 00 06 00 00    	je     5249 <quotearg_buffer_restyled+0xc49>
4c49:	48 8d 45 01          	lea    rax,[rbp+0x1]
4c4d:	4c 39 d8             	cmp    rax,r11
4c50:	73 19                	jae    4c6b <quotearg_buffer_restyled+0x66b>
4c52:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
4c57:	0f b6 44 28 01       	movzx  eax,BYTE PTR [rax+rbp*1+0x1]
4c5c:	88 44 24 28          	mov    BYTE PTR [rsp+0x28],al
4c60:	83 e8 30             	sub    eax,0x30
4c63:	3c 09                	cmp    al,0x9
4c65:	0f 86 2e 08 00 00    	jbe    5499 <quotearg_buffer_restyled+0xe99>
4c6b:	44 89 e0             	mov    eax,r12d
4c6e:	bb 30 00 00 00       	mov    ebx,0x30
4c73:	45 31 e4             	xor    r12d,r12d
4c76:	e9 ad fb ff ff       	jmp    4828 <quotearg_buffer_restyled+0x228>
4c7b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
4c80:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4c85:	45 89 d4             	mov    r12d,r10d
4c88:	0f 94 c2             	sete   dl
4c8b:	45 31 d2             	xor    r10d,r10d
4c8e:	31 c0                	xor    eax,eax
4c90:	e9 93 fb ff ff       	jmp    4828 <quotearg_buffer_restyled+0x228>
4c95:	0f 1f 00             	nop    DWORD PTR [rax]
4c98:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4c9d:	0f 94 c2             	sete   dl
4ca0:	45 31 d2             	xor    r10d,r10d
4ca3:	e9 c0 fd ff ff       	jmp    4a68 <quotearg_buffer_restyled+0x468>
4ca8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
4caf:	00
4cb0:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4cb5:	0f 94 c2             	sete   dl
4cb8:	45 31 d2             	xor    r10d,r10d
4cbb:	45 31 e4             	xor    r12d,r12d
4cbe:	e9 ae fd ff ff       	jmp    4a71 <quotearg_buffer_restyled+0x471>
4cc3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
4cc8:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4ccd:	45 89 d4             	mov    r12d,r10d
4cd0:	bb 20 00 00 00       	mov    ebx,0x20
4cd5:	0f 94 c2             	sete   dl
4cd8:	45 31 d2             	xor    r10d,r10d
4cdb:	e9 91 fd ff ff       	jmp    4a71 <quotearg_buffer_restyled+0x471>
4ce0:	ba 0d 00 00 00       	mov    edx,0xd
4ce5:	45 31 d2             	xor    r10d,r10d
4ce8:	bb 72 00 00 00       	mov    ebx,0x72
4ced:	e9 30 fc ff ff       	jmp    4922 <quotearg_buffer_restyled+0x322>
4cf2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4cf8:	bb 76 00 00 00       	mov    ebx,0x76
4cfd:	e9 9e fc ff ff       	jmp    49a0 <quotearg_buffer_restyled+0x3a0>
4d02:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4d08:	ba 09 00 00 00       	mov    edx,0x9
4d0d:	45 31 d2             	xor    r10d,r10d
4d10:	bb 74 00 00 00       	mov    ebx,0x74
4d15:	e9 08 fc ff ff       	jmp    4922 <quotearg_buffer_restyled+0x322>
4d1a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4d20:	bb 62 00 00 00       	mov    ebx,0x62
4d25:	e9 76 fc ff ff       	jmp    49a0 <quotearg_buffer_restyled+0x3a0>
4d2a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4d30:	45 31 d2             	xor    r10d,r10d
4d33:	e9 98 fa ff ff       	jmp    47d0 <quotearg_buffer_restyled+0x1d0>
4d38:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
4d3f:	00
4d40:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
4d45:	0f 85 65 09 00 00    	jne    56b0 <quotearg_buffer_restyled+0x10b0>
4d4b:	48 83 c5 01          	add    rbp,0x1
4d4f:	44 89 c0             	mov    eax,r8d
4d52:	45 31 e4             	xor    r12d,r12d
4d55:	bb 5c 00 00 00       	mov    ebx,0x5c
4d5a:	e9 0d fb ff ff       	jmp    486c <quotearg_buffer_restyled+0x26c>
4d5f:	90                   	nop
4d60:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4d65:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
4d6a:	45 89 c4             	mov    r12d,r8d
4d6d:	4c 89 dd             	mov    rbp,r11
4d70:	0f 94 c2             	sete   dl
4d73:	89 d8                	mov    eax,ebx
4d75:	4d 85 ff             	test   r15,r15
4d78:	0f 94 c1             	sete   cl
4d7b:	21 d0                	and    eax,edx
4d7d:	20 c8                	and    al,cl
4d7f:	0f 85 61 0a 00 00    	jne    57e6 <quotearg_buffer_restyled+0x11e6>
4d85:	89 d8                	mov    eax,ebx
4d87:	83 f0 01             	xor    eax,0x1
4d8a:	20 c2                	and    dl,al
4d8c:	0f 84 6a 09 00 00    	je     56fc <quotearg_buffer_restyled+0x10fc>
4d92:	80 7c 24 7c 00       	cmp    BYTE PTR [rsp+0x7c],0x0
4d97:	0f 84 5d 09 00 00    	je     56fa <quotearg_buffer_restyled+0x10fa>
4d9d:	80 7c 24 0e 00       	cmp    BYTE PTR [rsp+0xe],0x0
4da2:	0f 85 f5 09 00 00    	jne    579d <quotearg_buffer_restyled+0x119d>
4da8:	4d 85 ed             	test   r13,r13
4dab:	0f 94 c0             	sete   al
4dae:	48 83 7c 24 50 00    	cmp    QWORD PTR [rsp+0x50],0x0
4db4:	0f 95 c2             	setne  dl
4db7:	20 d0                	and    al,dl
4db9:	0f 84 1d 0a 00 00    	je     57dc <quotearg_buffer_restyled+0x11dc>
4dbf:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
4dc4:	48 8d 1d d2 32 00 00 	lea    rbx,[rip+0x32d2]        # 809d <b64c+0x9d>
4dcb:	41 c6 06 27          	mov    BYTE PTR [r14],0x27
4dcf:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
4dd6:	00
4dd7:	41 bf 01 00 00 00    	mov    r15d,0x1
4ddd:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
4de4:	00 00
4de6:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
4deb:	48 89 5c 24 48       	mov    QWORD PTR [rsp+0x48],rbx
4df0:	88 44 24 7c          	mov    BYTE PTR [rsp+0x7c],al
4df4:	e9 da f8 ff ff       	jmp    46d3 <quotearg_buffer_restyled+0xd3>
4df9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
4e00:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
4e05:	0f 85 a5 08 00 00    	jne    56b0 <quotearg_buffer_restyled+0x10b0>
4e0b:	4d 85 ed             	test   r13,r13
4e0e:	0f 84 fc 03 00 00    	je     5210 <quotearg_buffer_restyled+0xc10>
4e14:	31 d2                	xor    edx,edx
4e16:	48 83 7c 24 50 00    	cmp    QWORD PTR [rsp+0x50],0x0
4e1c:	0f 85 ee 03 00 00    	jne    5210 <quotearg_buffer_restyled+0xc10>
4e22:	4c 89 6c 24 50       	mov    QWORD PTR [rsp+0x50],r13
4e27:	49 83 c7 03          	add    r15,0x3
4e2b:	31 c0                	xor    eax,eax
4e2d:	44 88 64 24 7c       	mov    BYTE PTR [rsp+0x7c],r12b
4e32:	45 31 c0             	xor    r8d,r8d
4e35:	49 89 d5             	mov    r13,rdx
4e38:	bb 27 00 00 00       	mov    ebx,0x27
4e3d:	e9 17 fa ff ff       	jmp    4859 <quotearg_buffer_restyled+0x259>
4e42:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4e48:	f6 44 24 78 04       	test   BYTE PTR [rsp+0x78],0x4
4e4d:	74 21                	je     4e70 <quotearg_buffer_restyled+0x870>
4e4f:	48 8d 4d 02          	lea    rcx,[rbp+0x2]
4e53:	4c 39 d9             	cmp    rcx,r11
4e56:	73 18                	jae    4e70 <quotearg_buffer_restyled+0x870>
4e58:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
4e5d:	80 7c 28 01 3f       	cmp    BYTE PTR [rax+rbp*1+0x1],0x3f
4e62:	0f 84 8a 07 00 00    	je     55f2 <quotearg_buffer_restyled+0xff2>
4e68:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
4e6f:	00
4e70:	31 d2                	xor    edx,edx
4e72:	45 31 e4             	xor    r12d,r12d
4e75:	31 c0                	xor    eax,eax
4e77:	bb 3f 00 00 00       	mov    ebx,0x3f
4e7c:	e9 a7 f9 ff ff       	jmp    4828 <quotearg_buffer_restyled+0x228>
4e81:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
4e88:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
4e8d:	0f 85 1d 08 00 00    	jne    56b0 <quotearg_buffer_restyled+0x10b0>
4e93:	45 31 e4             	xor    r12d,r12d
4e96:	31 c0                	xor    eax,eax
4e98:	bb 3f 00 00 00       	mov    ebx,0x3f
4e9d:	e9 b7 f9 ff ff       	jmp    4859 <quotearg_buffer_restyled+0x259>
4ea2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
4ea8:	48 8d 84 24 a0 00 00 	lea    rax,[rsp+0xa0]
4eaf:	00
4eb0:	49 83 fb ff          	cmp    r11,0xffffffffffffffff
4eb4:	48 c7 84 24 a0 00 00 	mov    QWORD PTR [rsp+0xa0],0x0
4ebb:	00 00 00 00 00
4ec0:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
4ec5:	75 2d                	jne    4ef4 <quotearg_buffer_restyled+0x8f4>
4ec7:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
4ecc:	44 88 44 24 40       	mov    BYTE PTR [rsp+0x40],r8b
4ed1:	44 88 54 24 38       	mov    BYTE PTR [rsp+0x38],r10b
4ed6:	4c 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],r9
4edb:	e8 70 c7 ff ff       	call   1650 <strlen@plt>
4ee0:	44 0f b6 44 24 40    	movzx  r8d,BYTE PTR [rsp+0x40]
4ee6:	44 0f b6 54 24 38    	movzx  r10d,BYTE PTR [rsp+0x38]
4eec:	49 89 c3             	mov    r11,rax
4eef:	4c 8b 4c 24 30       	mov    r9,QWORD PTR [rsp+0x30]
4ef4:	48 8d 84 24 9c 00 00 	lea    rax,[rsp+0x9c]
4efb:	00
4efc:	31 c9                	xor    ecx,ecx
4efe:	88 5c 24 7e          	mov    BYTE PTR [rsp+0x7e],bl
4f02:	44 88 44 24 7d       	mov    BYTE PTR [rsp+0x7d],r8b
4f07:	48 89 cb             	mov    rbx,rcx
4f0a:	4c 89 8c 24 88 00 00 	mov    QWORD PTR [rsp+0x88],r9
4f11:	00
4f12:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
4f17:	44 88 54 24 7f       	mov    BYTE PTR [rsp+0x7f],r10b
4f1c:	4c 89 bc 24 80 00 00 	mov    QWORD PTR [rsp+0x80],r15
4f23:	00
4f24:	4c 89 74 24 40       	mov    QWORD PTR [rsp+0x40],r14
4f29:	4c 89 6c 24 70       	mov    QWORD PTR [rsp+0x70],r13
4f2e:	4c 89 5c 24 30       	mov    QWORD PTR [rsp+0x30],r11
4f33:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
4f38:	4c 8d 74 1d 00       	lea    r14,[rbp+rbx*1+0x0]
4f3d:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
4f42:	48 8b 4c 24 28       	mov    rcx,QWORD PTR [rsp+0x28]
4f47:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
4f4c:	4e 8d 2c 30          	lea    r13,[rax+r14*1]
4f50:	4c 29 f2             	sub    rdx,r14
4f53:	4c 89 ee             	mov    rsi,r13
4f56:	e8 65 21 00 00       	call   70c0 <rpl_mbrtowc>
4f5b:	48 85 c0             	test   rax,rax
4f5e:	49 89 c7             	mov    r15,rax
4f61:	74 4e                	je     4fb1 <quotearg_buffer_restyled+0x9b1>
4f63:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
4f67:	0f 84 18 06 00 00    	je     5585 <quotearg_buffer_restyled+0xf85>
4f6d:	48 83 f8 fe          	cmp    rax,0xfffffffffffffffe
4f71:	0f 84 9a 05 00 00    	je     5511 <quotearg_buffer_restyled+0xf11>
4f77:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
4f7c:	0f 94 c0             	sete   al
4f7f:	22 44 24 0f          	and    al,BYTE PTR [rsp+0xf]
4f83:	0f 85 97 01 00 00    	jne    5120 <quotearg_buffer_restyled+0xb20>
4f89:	8b bc 24 9c 00 00 00 	mov    edi,DWORD PTR [rsp+0x9c]
4f90:	e8 fb c8 ff ff       	call   1890 <iswprint@plt>
4f95:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
4f9a:	85 c0                	test   eax,eax
4f9c:	b8 00 00 00 00       	mov    eax,0x0
4fa1:	44 0f 44 e0          	cmove  r12d,eax
4fa5:	4c 01 fb             	add    rbx,r15
4fa8:	e8 d3 c8 ff ff       	call   1880 <mbsinit@plt>
4fad:	85 c0                	test   eax,eax
4faf:	74 82                	je     4f33 <quotearg_buffer_restyled+0x933>
4fb1:	44 89 e2             	mov    edx,r12d
4fb4:	48 89 df             	mov    rdi,rbx
4fb7:	44 0f b6 44 24 7d    	movzx  r8d,BYTE PTR [rsp+0x7d]
4fbd:	83 f2 01             	xor    edx,0x1
4fc0:	0f b6 5c 24 7e       	movzx  ebx,BYTE PTR [rsp+0x7e]
4fc5:	44 0f b6 54 24 7f    	movzx  r10d,BYTE PTR [rsp+0x7f]
4fcb:	22 54 24 0d          	and    dl,BYTE PTR [rsp+0xd]
4fcf:	4c 8b bc 24 80 00 00 	mov    r15,QWORD PTR [rsp+0x80]
4fd6:	00
4fd7:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
4fdc:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
4fe1:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
4fe6:	48 83 ff 01          	cmp    rdi,0x1
4fea:	0f 86 fb 05 00 00    	jbe    55eb <quotearg_buffer_restyled+0xfeb>
4ff0:	48 89 f9             	mov    rcx,rdi
4ff3:	31 f6                	xor    esi,esi
4ff5:	44 0f b6 4c 24 0f    	movzx  r9d,BYTE PTR [rsp+0xf]
4ffb:	48 01 e9             	add    rcx,rbp
4ffe:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
5003:	e9 b6 00 00 00       	jmp    50be <quotearg_buffer_restyled+0xabe>
5008:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
500f:	00
5010:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
5015:	0f 94 c0             	sete   al
5018:	45 84 c9             	test   r9b,r9b
501b:	0f 85 af 04 00 00    	jne    54d0 <quotearg_buffer_restyled+0xed0>
5021:	44 89 c6             	mov    esi,r8d
5024:	83 f6 01             	xor    esi,0x1
5027:	40 20 f0             	and    al,sil
502a:	74 2f                	je     505b <quotearg_buffer_restyled+0xa5b>
502c:	4d 39 fd             	cmp    r13,r15
502f:	76 05                	jbe    5036 <quotearg_buffer_restyled+0xa36>
5031:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
5036:	49 8d 77 01          	lea    rsi,[r15+0x1]
503a:	49 39 f5             	cmp    r13,rsi
503d:	76 06                	jbe    5045 <quotearg_buffer_restyled+0xa45>
503f:	43 c6 44 3e 01 24    	mov    BYTE PTR [r14+r15*1+0x1],0x24
5045:	49 8d 77 02          	lea    rsi,[r15+0x2]
5049:	49 39 f5             	cmp    r13,rsi
504c:	76 06                	jbe    5054 <quotearg_buffer_restyled+0xa54>
504e:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
5054:	49 83 c7 03          	add    r15,0x3
5058:	41 89 c0             	mov    r8d,eax
505b:	4d 39 fd             	cmp    r13,r15
505e:	76 05                	jbe    5065 <quotearg_buffer_restyled+0xa65>
5060:	43 c6 04 3e 5c       	mov    BYTE PTR [r14+r15*1],0x5c
5065:	49 8d 47 01          	lea    rax,[r15+0x1]
5069:	49 39 c5             	cmp    r13,rax
506c:	76 0d                	jbe    507b <quotearg_buffer_restyled+0xa7b>
506e:	89 d8                	mov    eax,ebx
5070:	c0 e8 06             	shr    al,0x6
5073:	83 c0 30             	add    eax,0x30
5076:	43 88 44 3e 01       	mov    BYTE PTR [r14+r15*1+0x1],al
507b:	49 8d 47 02          	lea    rax,[r15+0x2]
507f:	49 39 c5             	cmp    r13,rax
5082:	76 10                	jbe    5094 <quotearg_buffer_restyled+0xa94>
5084:	89 d8                	mov    eax,ebx
5086:	c0 e8 03             	shr    al,0x3
5089:	83 e0 07             	and    eax,0x7
508c:	83 c0 30             	add    eax,0x30
508f:	43 88 44 3e 02       	mov    BYTE PTR [r14+r15*1+0x2],al
5094:	83 e3 07             	and    ebx,0x7
5097:	48 83 c5 01          	add    rbp,0x1
509b:	49 83 c7 03          	add    r15,0x3
509f:	83 c3 30             	add    ebx,0x30
50a2:	48 39 cd             	cmp    rbp,rcx
50a5:	0f 83 e5 f7 ff ff    	jae    4890 <quotearg_buffer_restyled+0x290>
50ab:	89 d6                	mov    esi,edx
50ad:	4d 39 fd             	cmp    r13,r15
50b0:	76 04                	jbe    50b6 <quotearg_buffer_restyled+0xab6>
50b2:	43 88 1c 3e          	mov    BYTE PTR [r14+r15*1],bl
50b6:	0f b6 1c 2f          	movzx  ebx,BYTE PTR [rdi+rbp*1]
50ba:	49 83 c7 01          	add    r15,0x1
50be:	84 d2                	test   dl,dl
50c0:	0f 85 4a ff ff ff    	jne    5010 <quotearg_buffer_restyled+0xa10>
50c6:	89 f0                	mov    eax,esi
50c8:	83 f0 01             	xor    eax,0x1
50cb:	44 21 c0             	and    eax,r8d
50ce:	45 84 d2             	test   r10b,r10b
50d1:	74 0e                	je     50e1 <quotearg_buffer_restyled+0xae1>
50d3:	4d 39 fd             	cmp    r13,r15
50d6:	76 05                	jbe    50dd <quotearg_buffer_restyled+0xadd>
50d8:	43 c6 04 3e 5c       	mov    BYTE PTR [r14+r15*1],0x5c
50dd:	49 83 c7 01          	add    r15,0x1
50e1:	48 83 c5 01          	add    rbp,0x1
50e5:	48 39 cd             	cmp    rbp,rcx
50e8:	0f 83 7e f7 ff ff    	jae    486c <quotearg_buffer_restyled+0x26c>
50ee:	84 c0                	test   al,al
50f0:	0f 84 f8 03 00 00    	je     54ee <quotearg_buffer_restyled+0xeee>
50f6:	4d 39 fd             	cmp    r13,r15
50f9:	76 05                	jbe    5100 <quotearg_buffer_restyled+0xb00>
50fb:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
5100:	49 8d 47 01          	lea    rax,[r15+0x1]
5104:	49 39 c5             	cmp    r13,rax
5107:	76 06                	jbe    510f <quotearg_buffer_restyled+0xb0f>
5109:	43 c6 44 3e 01 27    	mov    BYTE PTR [r14+r15*1+0x1],0x27
510f:	49 83 c7 02          	add    r15,0x2
5113:	45 31 d2             	xor    r10d,r10d
5116:	45 31 c0             	xor    r8d,r8d
5119:	eb 92                	jmp    50ad <quotearg_buffer_restyled+0xaad>
511b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5120:	49 83 ff 01          	cmp    r15,0x1
5124:	0f 84 5f fe ff ff    	je     4f89 <quotearg_buffer_restyled+0x989>
512a:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
512f:	4a 8d 0c 3f          	lea    rcx,[rdi+r15*1]
5133:	4a 8d 54 37 01       	lea    rdx,[rdi+r14*1+0x1]
5138:	4e 8d 04 31          	lea    r8,[rcx+r14*1]
513c:	eb 0f                	jmp    514d <quotearg_buffer_restyled+0xb4d>
513e:	66 90                	xchg   ax,ax
5140:	48 83 c2 01          	add    rdx,0x1
5144:	49 39 d0             	cmp    r8,rdx
5147:	0f 84 3c fe ff ff    	je     4f89 <quotearg_buffer_restyled+0x989>
514d:	0f b6 0a             	movzx  ecx,BYTE PTR [rdx]
5150:	83 e9 5b             	sub    ecx,0x5b
5153:	80 f9 21             	cmp    cl,0x21
5156:	77 e8                	ja     5140 <quotearg_buffer_restyled+0xb40>
5158:	be 01 00 00 00       	mov    esi,0x1
515d:	48 d3 e6             	shl    rsi,cl
5160:	48 89 f1             	mov    rcx,rsi
5163:	48 be 2b 00 00 00 02 	movabs rsi,0x20000002b
516a:	00 00 00
516d:	48 85 f1             	test   rcx,rsi
5170:	74 ce                	je     5140 <quotearg_buffer_restyled+0xb40>
5172:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
5177:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
517c:	48 8b 6c 24 30       	mov    rbp,QWORD PTR [rsp+0x30]
5181:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
5188:	00
5189:	80 7c 24 0d 00       	cmp    BYTE PTR [rsp+0xd],0x0
518e:	74 10                	je     51a0 <quotearg_buffer_restyled+0xba0>
5190:	84 c0                	test   al,al
5192:	b8 04 00 00 00       	mov    eax,0x4
5197:	0f 44 44 24 08       	cmove  eax,DWORD PTR [rsp+0x8]
519c:	89 44 24 08          	mov    DWORD PTR [rsp+0x8],eax
51a0:	48 83 ec 08          	sub    rsp,0x8
51a4:	48 89 e9             	mov    rcx,rbp
51a7:	4c 89 ee             	mov    rsi,r13
51aa:	ff 74 24 68          	push   QWORD PTR [rsp+0x68]
51ae:	ff 74 24 78          	push   QWORD PTR [rsp+0x78]
51b2:	4c 89 f7             	mov    rdi,r14
51b5:	6a 00                	push   0x0
51b7:	44 8b 8c 24 98 00 00 	mov    r9d,DWORD PTR [rsp+0x98]
51be:	00
51bf:	44 8b 44 24 28       	mov    r8d,DWORD PTR [rsp+0x28]
51c4:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
51c9:	41 83 e1 fd          	and    r9d,0xfffffffd
51cd:	e8 2e f4 ff ff       	call   4600 <quotearg_buffer_restyled>
51d2:	48 83 c4 20          	add    rsp,0x20
51d6:	49 89 c7             	mov    r15,rax
51d9:	48 8b 9c 24 a8 00 00 	mov    rbx,QWORD PTR [rsp+0xa8]
51e0:	00
51e1:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
51e8:	00 00
51ea:	4c 89 f8             	mov    rax,r15
51ed:	0f 85 00 06 00 00    	jne    57f3 <quotearg_buffer_restyled+0x11f3>
51f3:	48 81 c4 b8 00 00 00 	add    rsp,0xb8
51fa:	5b                   	pop    rbx
51fb:	5d                   	pop    rbp
51fc:	41 5c                	pop    r12
51fe:	41 5d                	pop    r13
5200:	41 5e                	pop    r14
5202:	41 5f                	pop    r15
5204:	c3                   	ret
5205:	0f 1f 00             	nop    DWORD PTR [rax]
5208:	4c 89 dd             	mov    rbp,r11
520b:	e9 79 ff ff ff       	jmp    5189 <quotearg_buffer_restyled+0xb89>
5210:	4d 39 fd             	cmp    r13,r15
5213:	76 05                	jbe    521a <quotearg_buffer_restyled+0xc1a>
5215:	43 c6 04 3e 27       	mov    BYTE PTR [r14+r15*1],0x27
521a:	49 8d 47 01          	lea    rax,[r15+0x1]
521e:	49 39 c5             	cmp    r13,rax
5221:	76 06                	jbe    5229 <quotearg_buffer_restyled+0xc29>
5223:	43 c6 44 3e 01 5c    	mov    BYTE PTR [r14+r15*1+0x1],0x5c
5229:	49 8d 47 02          	lea    rax,[r15+0x2]
522d:	49 39 c5             	cmp    r13,rax
5230:	0f 86 ec 05 00 00    	jbe    5822 <quotearg_buffer_restyled+0x1222>
5236:	4c 89 ea             	mov    rdx,r13
5239:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
523f:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
5244:	e9 d9 fb ff ff       	jmp    4e22 <quotearg_buffer_restyled+0x822>
5249:	44 89 e0             	mov    eax,r12d
524c:	bb 30 00 00 00       	mov    ebx,0x30
5251:	45 31 e4             	xor    r12d,r12d
5254:	e9 00 f6 ff ff       	jmp    4859 <quotearg_buffer_restyled+0x259>
5259:	43 c6 44 3e 02 27    	mov    BYTE PTR [r14+r15*1+0x2],0x27
525f:	e9 c5 f9 ff ff       	jmp    4c29 <quotearg_buffer_restyled+0x629>
5264:	85 db                	test   ebx,ebx
5266:	0f 85 27 f4 ff ff    	jne    4693 <quotearg_buffer_restyled+0x93>
526c:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
5271:	4d 85 ed             	test   r13,r13
5274:	0f 85 90 05 00 00    	jne    580a <quotearg_buffer_restyled+0x120a>
527a:	48 8d 05 1c 2e 00 00 	lea    rax,[rip+0x2e1c]        # 809d <b64c+0x9d>
5281:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
5288:	00 00
528a:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
528f:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
5294:	45 31 e4             	xor    r12d,r12d
5297:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
529c:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
52a3:	00 00
52a5:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
52aa:	41 bf 01 00 00 00    	mov    r15d,0x1
52b0:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
52b7:	00
52b8:	e9 16 f4 ff ff       	jmp    46d3 <quotearg_buffer_restyled+0xd3>
52bd:	0f 1f 00             	nop    DWORD PTR [rax]
52c0:	85 db                	test   ebx,ebx
52c2:	0f 85 f5 03 00 00    	jne    56bd <quotearg_buffer_restyled+0x10bd>
52c8:	4d 85 ed             	test   r13,r13
52cb:	0f 84 25 02 00 00    	je     54f6 <quotearg_buffer_restyled+0xef6>
52d1:	41 c6 06 22          	mov    BYTE PTR [r14],0x22
52d5:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
52da:	45 31 e4             	xor    r12d,r12d
52dd:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
52e2:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
52e9:	00 00
52eb:	48 8d 05 a9 2d 00 00 	lea    rax,[rip+0x2da9]        # 809b <b64c+0x9b>
52f2:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
52f7:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
52fc:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
5303:	00 00
5305:	41 bf 01 00 00 00    	mov    r15d,0x1
530b:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
5310:	e9 be f3 ff ff       	jmp    46d3 <quotearg_buffer_restyled+0xd3>
5315:	48 8d 05 7f 2d 00 00 	lea    rax,[rip+0x2d7f]        # 809b <b64c+0x9b>
531c:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
5321:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
5326:	45 31 e4             	xor    r12d,r12d
5329:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
5330:	00 00
5332:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
5337:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
533c:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
5343:	00 00
5345:	45 31 ff             	xor    r15d,r15d
5348:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
534d:	c7 44 24 08 05 00 00 	mov    DWORD PTR [rsp+0x8],0x5
5354:	00
5355:	e9 79 f3 ff ff       	jmp    46d3 <quotearg_buffer_restyled+0xd3>
535a:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
535f:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
5364:	45 31 e4             	xor    r12d,r12d
5367:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
536e:	00 00
5370:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
5375:	45 31 ff             	xor    r15d,r15d
5378:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
537d:	48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
5384:	00 00
5386:	48 c7 44 24 48 00 00 	mov    QWORD PTR [rsp+0x48],0x0
538d:	00 00
538f:	e9 3f f3 ff ff       	jmp    46d3 <quotearg_buffer_restyled+0xd3>
5394:	83 7c 24 08 0a       	cmp    DWORD PTR [rsp+0x8],0xa
5399:	74 56                	je     53f1 <quotearg_buffer_restyled+0xdf1>
539b:	48 8d 35 fd 2c 00 00 	lea    rsi,[rip+0x2cfd]        # 809f <b64c+0x9f>
53a2:	31 ff                	xor    edi,edi
53a4:	ba 05 00 00 00       	mov    edx,0x5
53a9:	e8 82 c2 ff ff       	call   1630 <dcgettext@plt>
53ae:	48 89 c1             	mov    rcx,rax
53b1:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
53b6:	48 8d 05 e2 2c 00 00 	lea    rax,[rip+0x2ce2]        # 809f <b64c+0x9f>
53bd:	48 39 c1             	cmp    rcx,rax
53c0:	0f 84 98 03 00 00    	je     575e <quotearg_buffer_restyled+0x115e>
53c6:	48 8d 35 d0 2c 00 00 	lea    rsi,[rip+0x2cd0]        # 809d <b64c+0x9d>
53cd:	31 ff                	xor    edi,edi
53cf:	ba 05 00 00 00       	mov    edx,0x5
53d4:	e8 57 c2 ff ff       	call   1630 <dcgettext@plt>
53d9:	48 89 c1             	mov    rcx,rax
53dc:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
53e1:	48 8d 05 b5 2c 00 00 	lea    rax,[rip+0x2cb5]        # 809d <b64c+0x9d>
53e8:	48 39 c1             	cmp    rcx,rax
53eb:	0f 84 83 03 00 00    	je     5774 <quotearg_buffer_restyled+0x1174>
53f1:	45 31 ff             	xor    r15d,r15d
53f4:	85 db                	test   ebx,ebx
53f6:	0f 84 c1 01 00 00    	je     55bd <quotearg_buffer_restyled+0xfbd>
53fc:	85 db                	test   ebx,ebx
53fe:	48 8b 5c 24 60       	mov    rbx,QWORD PTR [rsp+0x60]
5403:	0f 95 44 24 0f       	setne  BYTE PTR [rsp+0xf]
5408:	45 31 e4             	xor    r12d,r12d
540b:	48 89 df             	mov    rdi,rbx
540e:	e8 3d c2 ff ff       	call   1650 <strlen@plt>
5413:	48 89 5c 24 48       	mov    QWORD PTR [rsp+0x48],rbx
5418:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
541d:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
5422:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
5427:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
542e:	00 00
5430:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
5435:	e9 99 f2 ff ff       	jmp    46d3 <quotearg_buffer_restyled+0xd3>
543a:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
543f:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
5444:	45 31 e4             	xor    r12d,r12d
5447:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
544e:	00 00
5450:	c6 44 24 0f 00       	mov    BYTE PTR [rsp+0xf],0x0
5455:	45 31 ff             	xor    r15d,r15d
5458:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
545d:	48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
5464:	00 00
5466:	48 c7 44 24 48 00 00 	mov    QWORD PTR [rsp+0x48],0x0
546d:	00 00
546f:	e9 5f f2 ff ff       	jmp    46d3 <quotearg_buffer_restyled+0xd3>
5474:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
5479:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
547e:	45 31 e4             	xor    r12d,r12d
5481:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
5488:	00 00
548a:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
548f:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
5494:	e9 1a f2 ff ff       	jmp    46b3 <quotearg_buffer_restyled+0xb3>
5499:	4d 39 fd             	cmp    r13,r15
549c:	76 05                	jbe    54a3 <quotearg_buffer_restyled+0xea3>
549e:	43 c6 04 3e 30       	mov    BYTE PTR [r14+r15*1],0x30
54a3:	48 8d 41 02          	lea    rax,[rcx+0x2]
54a7:	49 39 c5             	cmp    r13,rax
54aa:	76 06                	jbe    54b2 <quotearg_buffer_restyled+0xeb2>
54ac:	41 c6 44 0e 02 30    	mov    BYTE PTR [r14+rcx*1+0x2],0x30
54b2:	44 89 e0             	mov    eax,r12d
54b5:	4c 8d 79 03          	lea    r15,[rcx+0x3]
54b9:	45 31 e4             	xor    r12d,r12d
54bc:	bb 30 00 00 00       	mov    ebx,0x30
54c1:	e9 62 f3 ff ff       	jmp    4828 <quotearg_buffer_restyled+0x228>
54c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
54cd:	00 00 00
54d0:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
54d5:	4c 89 dd             	mov    rbp,r11
54d8:	88 5c 24 0d          	mov    BYTE PTR [rsp+0xd],bl
54dc:	e9 a8 fc ff ff       	jmp    5189 <quotearg_buffer_restyled+0xb89>
54e1:	0f b6 54 24 0d       	movzx  edx,BYTE PTR [rsp+0xd]
54e6:	45 31 e4             	xor    r12d,r12d
54e9:	e9 02 fb ff ff       	jmp    4ff0 <quotearg_buffer_restyled+0x9f0>
54ee:	45 31 d2             	xor    r10d,r10d
54f1:	e9 b7 fb ff ff       	jmp    50ad <quotearg_buffer_restyled+0xaad>
54f6:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
54fd:	00 00
54ff:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
5504:	45 31 e4             	xor    r12d,r12d
5507:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
550c:	e9 da fd ff ff       	jmp    52eb <quotearg_buffer_restyled+0xceb>
5511:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
5516:	4c 89 f6             	mov    rsi,r14
5519:	4c 89 e9             	mov    rcx,r13
551c:	48 89 d8             	mov    rax,rbx
551f:	48 89 df             	mov    rdi,rbx
5522:	44 0f b6 44 24 7d    	movzx  r8d,BYTE PTR [rsp+0x7d]
5528:	0f b6 5c 24 7e       	movzx  ebx,BYTE PTR [rsp+0x7e]
552d:	4c 8b 8c 24 88 00 00 	mov    r9,QWORD PTR [rsp+0x88]
5534:	00
5535:	4c 39 de             	cmp    rsi,r11
5538:	44 0f b6 54 24 7f    	movzx  r10d,BYTE PTR [rsp+0x7f]
553e:	4c 8b bc 24 80 00 00 	mov    r15,QWORD PTR [rsp+0x80]
5545:	00
5546:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
554b:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
5550:	73 26                	jae    5578 <quotearg_buffer_restyled+0xf78>
5552:	80 39 00             	cmp    BYTE PTR [rcx],0x0
5555:	75 10                	jne    5567 <quotearg_buffer_restyled+0xf67>
5557:	eb 1f                	jmp    5578 <quotearg_buffer_restyled+0xf78>
5559:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
5560:	41 80 3c 01 00       	cmp    BYTE PTR [r9+rax*1],0x0
5565:	74 0e                	je     5575 <quotearg_buffer_restyled+0xf75>
5567:	48 83 c0 01          	add    rax,0x1
556b:	48 8d 54 05 00       	lea    rdx,[rbp+rax*1+0x0]
5570:	49 39 d3             	cmp    r11,rdx
5573:	77 eb                	ja     5560 <quotearg_buffer_restyled+0xf60>
5575:	48 89 c7             	mov    rdi,rax
5578:	0f b6 54 24 0d       	movzx  edx,BYTE PTR [rsp+0xd]
557d:	45 31 e4             	xor    r12d,r12d
5580:	e9 61 fa ff ff       	jmp    4fe6 <quotearg_buffer_restyled+0x9e6>
5585:	48 89 df             	mov    rdi,rbx
5588:	44 0f b6 44 24 7d    	movzx  r8d,BYTE PTR [rsp+0x7d]
558e:	0f b6 5c 24 7e       	movzx  ebx,BYTE PTR [rsp+0x7e]
5593:	44 0f b6 54 24 7f    	movzx  r10d,BYTE PTR [rsp+0x7f]
5599:	4c 8b bc 24 80 00 00 	mov    r15,QWORD PTR [rsp+0x80]
55a0:	00
55a1:	45 31 e4             	xor    r12d,r12d
55a4:	4c 8b 74 24 40       	mov    r14,QWORD PTR [rsp+0x40]
55a9:	4c 8b 6c 24 70       	mov    r13,QWORD PTR [rsp+0x70]
55ae:	4c 8b 5c 24 30       	mov    r11,QWORD PTR [rsp+0x30]
55b3:	0f b6 54 24 0d       	movzx  edx,BYTE PTR [rsp+0xd]
55b8:	e9 29 fa ff ff       	jmp    4fe6 <quotearg_buffer_restyled+0x9e6>
55bd:	48 8b 54 24 68       	mov    rdx,QWORD PTR [rsp+0x68]
55c2:	0f b6 02             	movzx  eax,BYTE PTR [rdx]
55c5:	84 c0                	test   al,al
55c7:	0f 84 2f fe ff ff    	je     53fc <quotearg_buffer_restyled+0xdfc>
55cd:	0f 1f 00             	nop    DWORD PTR [rax]
55d0:	4d 39 fd             	cmp    r13,r15
55d3:	76 04                	jbe    55d9 <quotearg_buffer_restyled+0xfd9>
55d5:	43 88 04 3e          	mov    BYTE PTR [r14+r15*1],al
55d9:	49 83 c7 01          	add    r15,0x1
55dd:	42 0f b6 04 3a       	movzx  eax,BYTE PTR [rdx+r15*1]
55e2:	84 c0                	test   al,al
55e4:	75 ea                	jne    55d0 <quotearg_buffer_restyled+0xfd0>
55e6:	e9 11 fe ff ff       	jmp    53fc <quotearg_buffer_restyled+0xdfc>
55eb:	89 d0                	mov    eax,edx
55ed:	e9 55 f5 ff ff       	jmp    4b47 <quotearg_buffer_restyled+0x547>
55f2:	0f b6 1c 08          	movzx  ebx,BYTE PTR [rax+rcx*1]
55f6:	80 fb 3e             	cmp    bl,0x3e
55f9:	0f 87 71 f8 ff ff    	ja     4e70 <quotearg_buffer_restyled+0x870>
55ff:	48 b8 00 00 00 00 82 	movabs rax,0x7000a38200000000
5606:	a3 00 70
5609:	48 0f a3 d8          	bt     rax,rbx
560d:	0f 83 5d f8 ff ff    	jae    4e70 <quotearg_buffer_restyled+0x870>
5613:	80 7c 24 0f 00       	cmp    BYTE PTR [rsp+0xf],0x0
5618:	0f 85 e4 01 00 00    	jne    5802 <quotearg_buffer_restyled+0x1202>
561e:	4d 39 fd             	cmp    r13,r15
5621:	76 05                	jbe    5628 <quotearg_buffer_restyled+0x1028>
5623:	43 c6 04 3e 3f       	mov    BYTE PTR [r14+r15*1],0x3f
5628:	49 8d 47 01          	lea    rax,[r15+0x1]
562c:	49 39 c5             	cmp    r13,rax
562f:	76 06                	jbe    5637 <quotearg_buffer_restyled+0x1037>
5631:	43 c6 44 3e 01 22    	mov    BYTE PTR [r14+r15*1+0x1],0x22
5637:	49 8d 47 02          	lea    rax,[r15+0x2]
563b:	49 39 c5             	cmp    r13,rax
563e:	76 06                	jbe    5646 <quotearg_buffer_restyled+0x1046>
5640:	43 c6 44 3e 02 22    	mov    BYTE PTR [r14+r15*1+0x2],0x22
5646:	49 8d 47 03          	lea    rax,[r15+0x3]
564a:	49 39 c5             	cmp    r13,rax
564d:	76 06                	jbe    5655 <quotearg_buffer_restyled+0x1055>
564f:	43 c6 44 3e 03 3f    	mov    BYTE PTR [r14+r15*1+0x3],0x3f
5655:	49 83 c7 04          	add    r15,0x4
5659:	31 d2                	xor    edx,edx
565b:	45 31 e4             	xor    r12d,r12d
565e:	31 c0                	xor    eax,eax
5660:	48 89 cd             	mov    rbp,rcx
5663:	e9 c0 f1 ff ff       	jmp    4828 <quotearg_buffer_restyled+0x228>
5668:	85 db                	test   ebx,ebx
566a:	0f 84 88 01 00 00    	je     57f8 <quotearg_buffer_restyled+0x11f8>
5670:	48 8d 05 26 2a 00 00 	lea    rax,[rip+0x2a26]        # 809d <b64c+0x9d>
5677:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
567c:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
5681:	45 31 e4             	xor    r12d,r12d
5684:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
568b:	00 00
568d:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
5692:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
5697:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
569e:	00 00
56a0:	45 31 ff             	xor    r15d,r15d
56a3:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
56a8:	e9 26 f0 ff ff       	jmp    46d3 <quotearg_buffer_restyled+0xd3>
56ad:	0f 1f 00             	nop    DWORD PTR [rax]
56b0:	4c 89 dd             	mov    rbp,r11
56b3:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [rsp+0xf]
56b8:	e9 cc fa ff ff       	jmp    5189 <quotearg_buffer_restyled+0xb89>
56bd:	48 8d 05 d7 29 00 00 	lea    rax,[rip+0x29d7]        # 809b <b64c+0x9b>
56c4:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
56c9:	c6 44 24 7c 00       	mov    BYTE PTR [rsp+0x7c],0x0
56ce:	45 31 e4             	xor    r12d,r12d
56d1:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
56d8:	00 00
56da:	c6 44 24 0f 01       	mov    BYTE PTR [rsp+0xf],0x1
56df:	c6 44 24 0d 01       	mov    BYTE PTR [rsp+0xd],0x1
56e4:	48 c7 44 24 18 01 00 	mov    QWORD PTR [rsp+0x18],0x1
56eb:	00 00
56ed:	45 31 ff             	xor    r15d,r15d
56f0:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
56f5:	e9 d9 ef ff ff       	jmp    46d3 <quotearg_buffer_restyled+0xd3>
56fa:	89 d0                	mov    eax,edx
56fc:	48 8b 5c 24 48       	mov    rbx,QWORD PTR [rsp+0x48]
5701:	48 85 db             	test   rbx,rbx
5704:	74 2c                	je     5732 <quotearg_buffer_restyled+0x1132>
5706:	84 c0                	test   al,al
5708:	74 28                	je     5732 <quotearg_buffer_restyled+0x1132>
570a:	0f b6 0b             	movzx  ecx,BYTE PTR [rbx]
570d:	48 89 d8             	mov    rax,rbx
5710:	84 c9                	test   cl,cl
5712:	74 1e                	je     5732 <quotearg_buffer_restyled+0x1132>
5714:	4c 89 fa             	mov    rdx,r15
5717:	4c 29 f8             	sub    rax,r15
571a:	49 39 d5             	cmp    r13,rdx
571d:	76 04                	jbe    5723 <quotearg_buffer_restyled+0x1123>
571f:	41 88 0c 16          	mov    BYTE PTR [r14+rdx*1],cl
5723:	48 83 c2 01          	add    rdx,0x1
5727:	0f b6 0c 10          	movzx  ecx,BYTE PTR [rax+rdx*1]
572b:	84 c9                	test   cl,cl
572d:	75 eb                	jne    571a <quotearg_buffer_restyled+0x111a>
572f:	49 89 d7             	mov    r15,rdx
5732:	4d 39 fd             	cmp    r13,r15
5735:	0f 86 9e fa ff ff    	jbe    51d9 <quotearg_buffer_restyled+0xbd9>
573b:	43 c6 04 3e 00       	mov    BYTE PTR [r14+r15*1],0x0
5740:	e9 94 fa ff ff       	jmp    51d9 <quotearg_buffer_restyled+0xbd9>
5745:	83 7c 24 08 02       	cmp    DWORD PTR [rsp+0x8],0x2
574a:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
574f:	4c 89 dd             	mov    rbp,r11
5752:	0f 94 c0             	sete   al
5755:	88 5c 24 0d          	mov    BYTE PTR [rsp+0xd],bl
5759:	e9 2b fa ff ff       	jmp    5189 <quotearg_buffer_restyled+0xb89>
575e:	8b 74 24 08          	mov    esi,DWORD PTR [rsp+0x8]
5762:	48 89 cf             	mov    rdi,rcx
5765:	e8 a6 ed ff ff       	call   4510 <gettext_quote.part.1>
576a:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
576f:	e9 52 fc ff ff       	jmp    53c6 <quotearg_buffer_restyled+0xdc6>
5774:	8b 74 24 08          	mov    esi,DWORD PTR [rsp+0x8]
5778:	48 89 cf             	mov    rdi,rcx
577b:	e8 90 ed ff ff       	call   4510 <gettext_quote.part.1>
5780:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
5785:	e9 67 fc ff ff       	jmp    53f1 <quotearg_buffer_restyled+0xdf1>
578a:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [rsp+0xf]
578f:	4c 89 dd             	mov    rbp,r11
5792:	89 d0                	mov    eax,edx
5794:	88 5c 24 0d          	mov    BYTE PTR [rsp+0xd],bl
5798:	e9 ec f9 ff ff       	jmp    5189 <quotearg_buffer_restyled+0xb89>
579d:	48 83 ec 08          	sub    rsp,0x8
57a1:	41 b8 05 00 00 00    	mov    r8d,0x5
57a7:	4c 89 d9             	mov    rcx,r11
57aa:	ff 74 24 68          	push   QWORD PTR [rsp+0x68]
57ae:	ff 74 24 78          	push   QWORD PTR [rsp+0x78]
57b2:	4c 89 f7             	mov    rdi,r14
57b5:	ff 74 24 38          	push   QWORD PTR [rsp+0x38]
57b9:	44 8b 8c 24 98 00 00 	mov    r9d,DWORD PTR [rsp+0x98]
57c0:	00
57c1:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
57c6:	48 8b 74 24 70       	mov    rsi,QWORD PTR [rsp+0x70]
57cb:	e8 30 ee ff ff       	call   4600 <quotearg_buffer_restyled>
57d0:	48 83 c4 20          	add    rsp,0x20
57d4:	49 89 c7             	mov    r15,rax
57d7:	e9 fd f9 ff ff       	jmp    51d9 <quotearg_buffer_restyled+0xbd9>
57dc:	0f b6 44 24 7c       	movzx  eax,BYTE PTR [rsp+0x7c]
57e1:	e9 16 ff ff ff       	jmp    56fc <quotearg_buffer_restyled+0x10fc>
57e6:	c7 44 24 08 02 00 00 	mov    DWORD PTR [rsp+0x8],0x2
57ed:	00
57ee:	e9 96 f9 ff ff       	jmp    5189 <quotearg_buffer_restyled+0xb89>
57f3:	e8 68 be ff ff       	call   1660 <__stack_chk_fail@plt>
57f8:	c6 44 24 0d 00       	mov    BYTE PTR [rsp+0xd],0x0
57fd:	e9 6f fa ff ff       	jmp    5271 <quotearg_buffer_restyled+0xc71>
5802:	4c 89 dd             	mov    rbp,r11
5805:	e9 96 f9 ff ff       	jmp    51a0 <quotearg_buffer_restyled+0xba0>
580a:	c6 44 24 0e 01       	mov    BYTE PTR [rsp+0xe],0x1
580f:	31 c0                	xor    eax,eax
5811:	45 31 e4             	xor    r12d,r12d
5814:	48 c7 44 24 50 00 00 	mov    QWORD PTR [rsp+0x50],0x0
581b:	00 00
581d:	e9 a2 f5 ff ff       	jmp    4dc4 <quotearg_buffer_restyled+0x7c4>
5822:	4c 89 ea             	mov    rdx,r13
5825:	4c 8b 6c 24 50       	mov    r13,QWORD PTR [rsp+0x50]
582a:	e9 f3 f5 ff ff       	jmp    4e22 <quotearg_buffer_restyled+0x822>
582f:	e8 6c bd ff ff       	call   15a0 <abort@plt>
5834:	66 90                	xchg   ax,ax
5836:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
583d:	00 00 00

0000000000005840 <quotearg_n_options>:
5840:	41 57                	push   r15
5842:	41 56                	push   r14
5844:	4c 63 ff             	movsxd r15,edi
5847:	41 55                	push   r13
5849:	41 54                	push   r12
584b:	49 89 d6             	mov    r14,rdx
584e:	55                   	push   rbp
584f:	53                   	push   rbx
5850:	48 89 cd             	mov    rbp,rcx
5853:	48 83 ec 28          	sub    rsp,0x28
5857:	48 89 74 24 08       	mov    QWORD PTR [rsp+0x8],rsi
585c:	e8 4f bd ff ff       	call   15b0 <__errno_location@plt>
5861:	49 89 c5             	mov    r13,rax
5864:	8b 00                	mov    eax,DWORD PTR [rax]
5866:	45 85 ff             	test   r15d,r15d
5869:	48 8b 1d f0 57 20 00 	mov    rbx,QWORD PTR [rip+0x2057f0]        # 20b060 <slotvec>
5870:	89 44 24 18          	mov    DWORD PTR [rsp+0x18],eax
5874:	0f 88 67 01 00 00    	js     59e1 <quotearg_n_options+0x1a1>
587a:	44 39 3d d7 57 20 00 	cmp    DWORD PTR [rip+0x2057d7],r15d        # 20b058 <nslots>
5881:	7f 62                	jg     58e5 <quotearg_n_options+0xa5>
5883:	41 81 ff ff ff ff 7f 	cmp    r15d,0x7fffffff
588a:	0f 84 56 01 00 00    	je     59e6 <quotearg_n_options+0x1a6>
5890:	45 8d 67 01          	lea    r12d,[r15+0x1]
5894:	48 8d 05 d5 57 20 00 	lea    rax,[rip+0x2057d5]        # 20b070 <slotvec0>
589b:	49 63 f4             	movsxd rsi,r12d
589e:	48 c1 e6 04          	shl    rsi,0x4
58a2:	48 39 c3             	cmp    rbx,rax
58a5:	0f 84 15 01 00 00    	je     59c0 <quotearg_n_options+0x180>
58ab:	48 89 df             	mov    rdi,rbx
58ae:	e8 6d 0f 00 00       	call   6820 <xrealloc>
58b3:	48 89 c3             	mov    rbx,rax
58b6:	48 89 05 a3 57 20 00 	mov    QWORD PTR [rip+0x2057a3],rax        # 20b060 <slotvec>
58bd:	48 63 3d 94 57 20 00 	movsxd rdi,DWORD PTR [rip+0x205794]        # 20b058 <nslots>
58c4:	44 89 e2             	mov    edx,r12d
58c7:	31 f6                	xor    esi,esi
58c9:	29 fa                	sub    edx,edi
58cb:	48 c1 e7 04          	shl    rdi,0x4
58cf:	48 63 d2             	movsxd rdx,edx
58d2:	48 01 df             	add    rdi,rbx
58d5:	48 c1 e2 04          	shl    rdx,0x4
58d9:	e8 12 be ff ff       	call   16f0 <memset@plt>
58de:	44 89 25 73 57 20 00 	mov    DWORD PTR [rip+0x205773],r12d        # 20b058 <nslots>
58e5:	8b 45 04             	mov    eax,DWORD PTR [rbp+0x4]
58e8:	49 c1 e7 04          	shl    r15,0x4
58ec:	48 83 ec 08          	sub    rsp,0x8
58f0:	4c 01 fb             	add    rbx,r15
58f3:	4c 8d 7d 08          	lea    r15,[rbp+0x8]
58f7:	44 8b 45 00          	mov    r8d,DWORD PTR [rbp+0x0]
58fb:	4c 8b 1b             	mov    r11,QWORD PTR [rbx]
58fe:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
5902:	4c 89 f1             	mov    rcx,r14
5905:	83 c8 01             	or     eax,0x1
5908:	89 44 24 24          	mov    DWORD PTR [rsp+0x24],eax
590c:	ff 75 30             	push   QWORD PTR [rbp+0x30]
590f:	41 89 c1             	mov    r9d,eax
5912:	ff 75 28             	push   QWORD PTR [rbp+0x28]
5915:	41 57                	push   r15
5917:	4c 89 de             	mov    rsi,r11
591a:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
591f:	4c 89 e7             	mov    rdi,r12
5922:	4c 89 5c 24 30       	mov    QWORD PTR [rsp+0x30],r11
5927:	e8 d4 ec ff ff       	call   4600 <quotearg_buffer_restyled>
592c:	48 83 c4 20          	add    rsp,0x20
5930:	4c 8b 5c 24 10       	mov    r11,QWORD PTR [rsp+0x10]
5935:	49 39 c3             	cmp    r11,rax
5938:	77 67                	ja     59a1 <quotearg_n_options+0x161>
593a:	48 8d 70 01          	lea    rsi,[rax+0x1]
593e:	48 8d 05 db 57 20 00 	lea    rax,[rip+0x2057db]        # 20b120 <slot0>
5945:	49 39 c4             	cmp    r12,rax
5948:	48 89 33             	mov    QWORD PTR [rbx],rsi
594b:	74 12                	je     595f <quotearg_n_options+0x11f>
594d:	4c 89 e7             	mov    rdi,r12
5950:	48 89 74 24 10       	mov    QWORD PTR [rsp+0x10],rsi
5955:	e8 36 bc ff ff       	call   1590 <free@plt>
595a:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
595f:	48 89 f7             	mov    rdi,rsi
5962:	48 89 74 24 10       	mov    QWORD PTR [rsp+0x10],rsi
5967:	e8 54 0e 00 00       	call   67c0 <xmalloc>
596c:	48 83 ec 08          	sub    rsp,0x8
5970:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
5974:	44 8b 45 00          	mov    r8d,DWORD PTR [rbp+0x0]
5978:	ff 75 30             	push   QWORD PTR [rbp+0x30]
597b:	ff 75 28             	push   QWORD PTR [rbp+0x28]
597e:	4c 89 f1             	mov    rcx,r14
5981:	41 57                	push   r15
5983:	44 8b 4c 24 3c       	mov    r9d,DWORD PTR [rsp+0x3c]
5988:	48 89 c7             	mov    rdi,rax
598b:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
5990:	48 8b 74 24 30       	mov    rsi,QWORD PTR [rsp+0x30]
5995:	49 89 c4             	mov    r12,rax
5998:	e8 63 ec ff ff       	call   4600 <quotearg_buffer_restyled>
599d:	48 83 c4 20          	add    rsp,0x20
59a1:	8b 44 24 18          	mov    eax,DWORD PTR [rsp+0x18]
59a5:	41 89 45 00          	mov    DWORD PTR [r13+0x0],eax
59a9:	48 83 c4 28          	add    rsp,0x28
59ad:	4c 89 e0             	mov    rax,r12
59b0:	5b                   	pop    rbx
59b1:	5d                   	pop    rbp
59b2:	41 5c                	pop    r12
59b4:	41 5d                	pop    r13
59b6:	41 5e                	pop    r14
59b8:	41 5f                	pop    r15
59ba:	c3                   	ret
59bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
59c0:	31 ff                	xor    edi,edi
59c2:	e8 59 0e 00 00       	call   6820 <xrealloc>
59c7:	66 0f 6f 05 a1 56 20 	movdqa xmm0,XMMWORD PTR [rip+0x2056a1]        # 20b070 <slotvec0>
59ce:	00
59cf:	48 89 c3             	mov    rbx,rax
59d2:	48 89 05 87 56 20 00 	mov    QWORD PTR [rip+0x205687],rax        # 20b060 <slotvec>
59d9:	0f 11 00             	movups XMMWORD PTR [rax],xmm0
59dc:	e9 dc fe ff ff       	jmp    58bd <quotearg_n_options+0x7d>
59e1:	e8 ba bb ff ff       	call   15a0 <abort@plt>
59e6:	e8 25 10 00 00       	call   6a10 <xalloc_die>
59eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000059f0 <clone_quoting_options>:
59f0:	41 54                	push   r12
59f2:	55                   	push   rbp
59f3:	53                   	push   rbx
59f4:	48 89 fb             	mov    rbx,rdi
59f7:	e8 b4 bb ff ff       	call   15b0 <__errno_location@plt>
59fc:	44 8b 20             	mov    r12d,DWORD PTR [rax]
59ff:	48 89 c5             	mov    rbp,rax
5a02:	48 8d 05 17 58 20 00 	lea    rax,[rip+0x205817]        # 20b220 <default_quoting_options>
5a09:	48 85 db             	test   rbx,rbx
5a0c:	be 38 00 00 00       	mov    esi,0x38
5a11:	48 0f 44 d8          	cmove  rbx,rax
5a15:	48 89 df             	mov    rdi,rbx
5a18:	e8 a3 0f 00 00       	call   69c0 <xmemdup>
5a1d:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
5a21:	5b                   	pop    rbx
5a22:	5d                   	pop    rbp
5a23:	41 5c                	pop    r12
5a25:	c3                   	ret
5a26:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5a2d:	00 00 00

0000000000005a30 <get_quoting_style>:
5a30:	48 8d 05 e9 57 20 00 	lea    rax,[rip+0x2057e9]        # 20b220 <default_quoting_options>
5a37:	48 85 ff             	test   rdi,rdi
5a3a:	48 0f 44 f8          	cmove  rdi,rax
5a3e:	8b 07                	mov    eax,DWORD PTR [rdi]
5a40:	c3                   	ret
5a41:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5a46:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5a4d:	00 00 00

0000000000005a50 <set_quoting_style>:
5a50:	48 8d 05 c9 57 20 00 	lea    rax,[rip+0x2057c9]        # 20b220 <default_quoting_options>
5a57:	48 85 ff             	test   rdi,rdi
5a5a:	48 0f 44 f8          	cmove  rdi,rax
5a5e:	89 37                	mov    DWORD PTR [rdi],esi
5a60:	c3                   	ret
5a61:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5a66:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5a6d:	00 00 00

0000000000005a70 <set_char_quoting>:
5a70:	48 8d 05 a9 57 20 00 	lea    rax,[rip+0x2057a9]        # 20b220 <default_quoting_options>
5a77:	48 85 ff             	test   rdi,rdi
5a7a:	89 f1                	mov    ecx,esi
5a7c:	48 0f 44 f8          	cmove  rdi,rax
5a80:	89 f0                	mov    eax,esi
5a82:	83 e1 1f             	and    ecx,0x1f
5a85:	c0 e8 05             	shr    al,0x5
5a88:	0f b6 c0             	movzx  eax,al
5a8b:	48 8d 7c 87 08       	lea    rdi,[rdi+rax*4+0x8]
5a90:	8b 37                	mov    esi,DWORD PTR [rdi]
5a92:	89 f0                	mov    eax,esi
5a94:	d3 e8                	shr    eax,cl
5a96:	31 c2                	xor    edx,eax
5a98:	83 e0 01             	and    eax,0x1
5a9b:	83 e2 01             	and    edx,0x1
5a9e:	d3 e2                	shl    edx,cl
5aa0:	31 f2                	xor    edx,esi
5aa2:	89 17                	mov    DWORD PTR [rdi],edx
5aa4:	c3                   	ret
5aa5:	90                   	nop
5aa6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5aad:	00 00 00

0000000000005ab0 <set_quoting_flags>:
5ab0:	48 8d 05 69 57 20 00 	lea    rax,[rip+0x205769]        # 20b220 <default_quoting_options>
5ab7:	48 85 ff             	test   rdi,rdi
5aba:	48 0f 44 f8          	cmove  rdi,rax
5abe:	8b 47 04             	mov    eax,DWORD PTR [rdi+0x4]
5ac1:	89 77 04             	mov    DWORD PTR [rdi+0x4],esi
5ac4:	c3                   	ret
5ac5:	90                   	nop
5ac6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5acd:	00 00 00

0000000000005ad0 <set_custom_quoting>:
5ad0:	48 8d 05 49 57 20 00 	lea    rax,[rip+0x205749]        # 20b220 <default_quoting_options>
5ad7:	48 85 ff             	test   rdi,rdi
5ada:	48 0f 44 f8          	cmove  rdi,rax
5ade:	48 85 f6             	test   rsi,rsi
5ae1:	c7 07 0a 00 00 00    	mov    DWORD PTR [rdi],0xa
5ae7:	74 0e                	je     5af7 <set_custom_quoting+0x27>
5ae9:	48 85 d2             	test   rdx,rdx
5aec:	74 09                	je     5af7 <set_custom_quoting+0x27>
5aee:	48 89 77 28          	mov    QWORD PTR [rdi+0x28],rsi
5af2:	48 89 57 30          	mov    QWORD PTR [rdi+0x30],rdx
5af6:	c3                   	ret
5af7:	48 83 ec 08          	sub    rsp,0x8
5afb:	e8 a0 ba ff ff       	call   15a0 <abort@plt>

0000000000005b00 <quotearg_buffer>:
5b00:	41 57                	push   r15
5b02:	41 56                	push   r14
5b04:	48 8d 05 15 57 20 00 	lea    rax,[rip+0x205715]        # 20b220 <default_quoting_options>
5b0b:	41 55                	push   r13
5b0d:	41 54                	push   r12
5b0f:	49 89 fd             	mov    r13,rdi
5b12:	55                   	push   rbp
5b13:	53                   	push   rbx
5b14:	4c 89 c3             	mov    rbx,r8
5b17:	49 89 f6             	mov    r14,rsi
5b1a:	49 89 d7             	mov    r15,rdx
5b1d:	48 83 ec 18          	sub    rsp,0x18
5b21:	4d 85 c0             	test   r8,r8
5b24:	48 0f 44 d8          	cmove  rbx,rax
5b28:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
5b2d:	e8 7e ba ff ff       	call   15b0 <__errno_location@plt>
5b32:	44 8b 20             	mov    r12d,DWORD PTR [rax]
5b35:	48 89 c5             	mov    rbp,rax
5b38:	48 8d 43 08          	lea    rax,[rbx+0x8]
5b3c:	48 83 ec 08          	sub    rsp,0x8
5b40:	44 8b 4b 04          	mov    r9d,DWORD PTR [rbx+0x4]
5b44:	ff 73 30             	push   QWORD PTR [rbx+0x30]
5b47:	44 8b 03             	mov    r8d,DWORD PTR [rbx]
5b4a:	ff 73 28             	push   QWORD PTR [rbx+0x28]
5b4d:	4c 89 fa             	mov    rdx,r15
5b50:	50                   	push   rax
5b51:	48 8b 4c 24 28       	mov    rcx,QWORD PTR [rsp+0x28]
5b56:	4c 89 f6             	mov    rsi,r14
5b59:	4c 89 ef             	mov    rdi,r13
5b5c:	e8 9f ea ff ff       	call   4600 <quotearg_buffer_restyled>
5b61:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
5b65:	48 83 c4 38          	add    rsp,0x38
5b69:	5b                   	pop    rbx
5b6a:	5d                   	pop    rbp
5b6b:	41 5c                	pop    r12
5b6d:	41 5d                	pop    r13
5b6f:	41 5e                	pop    r14
5b71:	41 5f                	pop    r15
5b73:	c3                   	ret
5b74:	66 90                	xchg   ax,ax
5b76:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5b7d:	00 00 00

0000000000005b80 <quotearg_alloc_mem>:
5b80:	41 57                	push   r15
5b82:	41 56                	push   r14
5b84:	48 8d 05 95 56 20 00 	lea    rax,[rip+0x205695]        # 20b220 <default_quoting_options>
5b8b:	41 55                	push   r13
5b8d:	41 54                	push   r12
5b8f:	49 89 d4             	mov    r12,rdx
5b92:	55                   	push   rbp
5b93:	53                   	push   rbx
5b94:	48 89 cb             	mov    rbx,rcx
5b97:	49 89 fe             	mov    r14,rdi
5b9a:	49 89 f7             	mov    r15,rsi
5b9d:	48 83 ec 38          	sub    rsp,0x38
5ba1:	48 85 c9             	test   rcx,rcx
5ba4:	48 0f 44 d8          	cmove  rbx,rax
5ba8:	31 ed                	xor    ebp,ebp
5baa:	e8 01 ba ff ff       	call   15b0 <__errno_location@plt>
5baf:	4d 85 e4             	test   r12,r12
5bb2:	49 89 c5             	mov    r13,rax
5bb5:	8b 00                	mov    eax,DWORD PTR [rax]
5bb7:	40 0f 94 c5          	sete   bpl
5bbb:	0b 6b 04             	or     ebp,DWORD PTR [rbx+0x4]
5bbe:	4c 8d 53 08          	lea    r10,[rbx+0x8]
5bc2:	48 83 ec 08          	sub    rsp,0x8
5bc6:	44 8b 03             	mov    r8d,DWORD PTR [rbx]
5bc9:	4c 89 f9             	mov    rcx,r15
5bcc:	89 44 24 14          	mov    DWORD PTR [rsp+0x14],eax
5bd0:	ff 73 30             	push   QWORD PTR [rbx+0x30]
5bd3:	4c 89 f2             	mov    rdx,r14
5bd6:	ff 73 28             	push   QWORD PTR [rbx+0x28]
5bd9:	41 52                	push   r10
5bdb:	31 f6                	xor    esi,esi
5bdd:	41 89 e9             	mov    r9d,ebp
5be0:	31 ff                	xor    edi,edi
5be2:	4c 89 54 24 40       	mov    QWORD PTR [rsp+0x40],r10
5be7:	e8 14 ea ff ff       	call   4600 <quotearg_buffer_restyled>
5bec:	48 8d 70 01          	lea    rsi,[rax+0x1]
5bf0:	48 89 44 24 48       	mov    QWORD PTR [rsp+0x48],rax
5bf5:	48 83 c4 20          	add    rsp,0x20
5bf9:	48 89 f7             	mov    rdi,rsi
5bfc:	48 89 74 24 18       	mov    QWORD PTR [rsp+0x18],rsi
5c01:	e8 ba 0b 00 00       	call   67c0 <xmalloc>
5c06:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
5c0b:	48 83 ec 08          	sub    rsp,0x8
5c0f:	ff 73 30             	push   QWORD PTR [rbx+0x30]
5c12:	ff 73 28             	push   QWORD PTR [rbx+0x28]
5c15:	4c 8b 54 24 38       	mov    r10,QWORD PTR [rsp+0x38]
5c1a:	41 89 e9             	mov    r9d,ebp
5c1d:	44 8b 03             	mov    r8d,DWORD PTR [rbx]
5c20:	4c 89 f9             	mov    rcx,r15
5c23:	4c 89 f2             	mov    rdx,r14
5c26:	48 89 c7             	mov    rdi,rax
5c29:	41 52                	push   r10
5c2b:	48 8b 74 24 38       	mov    rsi,QWORD PTR [rsp+0x38]
5c30:	e8 cb e9 ff ff       	call   4600 <quotearg_buffer_restyled>
5c35:	8b 44 24 2c          	mov    eax,DWORD PTR [rsp+0x2c]
5c39:	48 83 c4 20          	add    rsp,0x20
5c3d:	4d 85 e4             	test   r12,r12
5c40:	41 89 45 00          	mov    DWORD PTR [r13+0x0],eax
5c44:	74 09                	je     5c4f <quotearg_alloc_mem+0xcf>
5c46:	4c 8b 5c 24 28       	mov    r11,QWORD PTR [rsp+0x28]
5c4b:	4d 89 1c 24          	mov    QWORD PTR [r12],r11
5c4f:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
5c54:	48 83 c4 38          	add    rsp,0x38
5c58:	5b                   	pop    rbx
5c59:	5d                   	pop    rbp
5c5a:	41 5c                	pop    r12
5c5c:	41 5d                	pop    r13
5c5e:	41 5e                	pop    r14
5c60:	41 5f                	pop    r15
5c62:	c3                   	ret
5c63:	0f 1f 00             	nop    DWORD PTR [rax]
5c66:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5c6d:	00 00 00

0000000000005c70 <quotearg_alloc>:
5c70:	48 89 d1             	mov    rcx,rdx
5c73:	31 d2                	xor    edx,edx
5c75:	e9 06 ff ff ff       	jmp    5b80 <quotearg_alloc_mem>
5c7a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005c80 <quotearg_free>:
5c80:	8b 05 d2 53 20 00    	mov    eax,DWORD PTR [rip+0x2053d2]        # 20b058 <nslots>
5c86:	41 54                	push   r12
5c88:	4c 8b 25 d1 53 20 00 	mov    r12,QWORD PTR [rip+0x2053d1]        # 20b060 <slotvec>
5c8f:	55                   	push   rbp
5c90:	53                   	push   rbx
5c91:	83 f8 01             	cmp    eax,0x1
5c94:	7e 2b                	jle    5cc1 <quotearg_free+0x41>
5c96:	83 e8 02             	sub    eax,0x2
5c99:	49 8d 5c 24 18       	lea    rbx,[r12+0x18]
5c9e:	48 c1 e0 04          	shl    rax,0x4
5ca2:	49 8d 6c 04 28       	lea    rbp,[r12+rax*1+0x28]
5ca7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
5cae:	00 00
5cb0:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
5cb3:	48 83 c3 10          	add    rbx,0x10
5cb7:	e8 d4 b8 ff ff       	call   1590 <free@plt>
5cbc:	48 39 eb             	cmp    rbx,rbp
5cbf:	75 ef                	jne    5cb0 <quotearg_free+0x30>
5cc1:	49 8b 7c 24 08       	mov    rdi,QWORD PTR [r12+0x8]
5cc6:	48 8d 1d 53 54 20 00 	lea    rbx,[rip+0x205453]        # 20b120 <slot0>
5ccd:	48 39 df             	cmp    rdi,rbx
5cd0:	74 17                	je     5ce9 <quotearg_free+0x69>
5cd2:	e8 b9 b8 ff ff       	call   1590 <free@plt>
5cd7:	48 c7 05 8e 53 20 00 	mov    QWORD PTR [rip+0x20538e],0x100        # 20b070 <slotvec0>
5cde:	00 01 00 00
5ce2:	48 89 1d 8f 53 20 00 	mov    QWORD PTR [rip+0x20538f],rbx        # 20b078 <slotvec0+0x8>
5ce9:	48 8d 1d 80 53 20 00 	lea    rbx,[rip+0x205380]        # 20b070 <slotvec0>
5cf0:	49 39 dc             	cmp    r12,rbx
5cf3:	74 0f                	je     5d04 <quotearg_free+0x84>
5cf5:	4c 89 e7             	mov    rdi,r12
5cf8:	e8 93 b8 ff ff       	call   1590 <free@plt>
5cfd:	48 89 1d 5c 53 20 00 	mov    QWORD PTR [rip+0x20535c],rbx        # 20b060 <slotvec>
5d04:	5b                   	pop    rbx
5d05:	c7 05 49 53 20 00 01 	mov    DWORD PTR [rip+0x205349],0x1        # 20b058 <nslots>
5d0c:	00 00 00
5d0f:	5d                   	pop    rbp
5d10:	41 5c                	pop    r12
5d12:	c3                   	ret
5d13:	0f 1f 00             	nop    DWORD PTR [rax]
5d16:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5d1d:	00 00 00

0000000000005d20 <quotearg_n>:
5d20:	48 8d 0d f9 54 20 00 	lea    rcx,[rip+0x2054f9]        # 20b220 <default_quoting_options>
5d27:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
5d2e:	e9 0d fb ff ff       	jmp    5840 <quotearg_n_options>
5d33:	0f 1f 00             	nop    DWORD PTR [rax]
5d36:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5d3d:	00 00 00

0000000000005d40 <quotearg_n_mem>:
5d40:	48 8d 0d d9 54 20 00 	lea    rcx,[rip+0x2054d9]        # 20b220 <default_quoting_options>
5d47:	e9 f4 fa ff ff       	jmp    5840 <quotearg_n_options>
5d4c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000005d50 <quotearg>:
5d50:	48 8d 0d c9 54 20 00 	lea    rcx,[rip+0x2054c9]        # 20b220 <default_quoting_options>
5d57:	48 89 fe             	mov    rsi,rdi
5d5a:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
5d61:	31 ff                	xor    edi,edi
5d63:	e9 d8 fa ff ff       	jmp    5840 <quotearg_n_options>
5d68:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
5d6f:	00

0000000000005d70 <quotearg_mem>:
5d70:	48 8d 0d a9 54 20 00 	lea    rcx,[rip+0x2054a9]        # 20b220 <default_quoting_options>
5d77:	48 89 f2             	mov    rdx,rsi
5d7a:	48 89 fe             	mov    rsi,rdi
5d7d:	31 ff                	xor    edi,edi
5d7f:	e9 bc fa ff ff       	jmp    5840 <quotearg_n_options>
5d84:	66 90                	xchg   ax,ax
5d86:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5d8d:	00 00 00

0000000000005d90 <quotearg_n_style>:
5d90:	48 83 ec 48          	sub    rsp,0x48
5d94:	48 89 d0             	mov    rax,rdx
5d97:	64 48 8b 14 25 28 00 	mov    rdx,QWORD PTR fs:0x28
5d9e:	00 00
5da0:	48 89 54 24 38       	mov    QWORD PTR [rsp+0x38],rdx
5da5:	31 d2                	xor    edx,edx
5da7:	83 fe 0a             	cmp    esi,0xa
5daa:	74 68                	je     5e14 <quotearg_n_style+0x84>
5dac:	89 34 24             	mov    DWORD PTR [rsp],esi
5daf:	48 89 e1             	mov    rcx,rsp
5db2:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
5db9:	48 89 c6             	mov    rsi,rax
5dbc:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
5dc3:	00 00
5dc5:	48 c7 44 24 0c 00 00 	mov    QWORD PTR [rsp+0xc],0x0
5dcc:	00 00
5dce:	48 c7 44 24 14 00 00 	mov    QWORD PTR [rsp+0x14],0x0
5dd5:	00 00
5dd7:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
5dde:	00 00
5de0:	48 c7 44 24 24 00 00 	mov    QWORD PTR [rsp+0x24],0x0
5de7:	00 00
5de9:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
5df0:	00 00
5df2:	c7 44 24 34 00 00 00 	mov    DWORD PTR [rsp+0x34],0x0
5df9:	00
5dfa:	e8 41 fa ff ff       	call   5840 <quotearg_n_options>
5dff:	48 8b 4c 24 38       	mov    rcx,QWORD PTR [rsp+0x38]
5e04:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
5e0b:	00 00
5e0d:	75 0a                	jne    5e19 <quotearg_n_style+0x89>
5e0f:	48 83 c4 48          	add    rsp,0x48
5e13:	c3                   	ret
5e14:	e8 87 b7 ff ff       	call   15a0 <abort@plt>
5e19:	e8 42 b8 ff ff       	call   1660 <__stack_chk_fail@plt>
5e1e:	66 90                	xchg   ax,ax

0000000000005e20 <quotearg_n_style_mem>:
5e20:	48 83 ec 48          	sub    rsp,0x48
5e24:	48 89 d0             	mov    rax,rdx
5e27:	48 89 ca             	mov    rdx,rcx
5e2a:	64 48 8b 0c 25 28 00 	mov    rcx,QWORD PTR fs:0x28
5e31:	00 00
5e33:	48 89 4c 24 38       	mov    QWORD PTR [rsp+0x38],rcx
5e38:	31 c9                	xor    ecx,ecx
5e3a:	83 fe 0a             	cmp    esi,0xa
5e3d:	74 61                	je     5ea0 <quotearg_n_style_mem+0x80>
5e3f:	89 34 24             	mov    DWORD PTR [rsp],esi
5e42:	48 89 e1             	mov    rcx,rsp
5e45:	48 89 c6             	mov    rsi,rax
5e48:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
5e4f:	00 00
5e51:	48 c7 44 24 0c 00 00 	mov    QWORD PTR [rsp+0xc],0x0
5e58:	00 00
5e5a:	48 c7 44 24 14 00 00 	mov    QWORD PTR [rsp+0x14],0x0
5e61:	00 00
5e63:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
5e6a:	00 00
5e6c:	48 c7 44 24 24 00 00 	mov    QWORD PTR [rsp+0x24],0x0
5e73:	00 00
5e75:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
5e7c:	00 00
5e7e:	c7 44 24 34 00 00 00 	mov    DWORD PTR [rsp+0x34],0x0
5e85:	00
5e86:	e8 b5 f9 ff ff       	call   5840 <quotearg_n_options>
5e8b:	48 8b 54 24 38       	mov    rdx,QWORD PTR [rsp+0x38]
5e90:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
5e97:	00 00
5e99:	75 0a                	jne    5ea5 <quotearg_n_style_mem+0x85>
5e9b:	48 83 c4 48          	add    rsp,0x48
5e9f:	c3                   	ret
5ea0:	e8 fb b6 ff ff       	call   15a0 <abort@plt>
5ea5:	e8 b6 b7 ff ff       	call   1660 <__stack_chk_fail@plt>
5eaa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005eb0 <quotearg_style>:
5eb0:	48 89 f2             	mov    rdx,rsi
5eb3:	89 fe                	mov    esi,edi
5eb5:	31 ff                	xor    edi,edi
5eb7:	e9 d4 fe ff ff       	jmp    5d90 <quotearg_n_style>
5ebc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000005ec0 <quotearg_style_mem>:
5ec0:	48 89 d1             	mov    rcx,rdx
5ec3:	48 89 f2             	mov    rdx,rsi
5ec6:	89 fe                	mov    esi,edi
5ec8:	31 ff                	xor    edi,edi
5eca:	e9 51 ff ff ff       	jmp    5e20 <quotearg_n_style_mem>
5ecf:	90                   	nop

0000000000005ed0 <quotearg_char_mem>:
5ed0:	48 83 ec 48          	sub    rsp,0x48
5ed4:	89 d1                	mov    ecx,edx
5ed6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
5edd:	00 00
5edf:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
5ee4:	31 c0                	xor    eax,eax
5ee6:	48 8b 05 63 53 20 00 	mov    rax,QWORD PTR [rip+0x205363]        # 20b250 <default_quoting_options+0x30>
5eed:	49 89 e0             	mov    r8,rsp
5ef0:	83 e1 1f             	and    ecx,0x1f
5ef3:	66 0f 6f 05 25 53 20 	movdqa xmm0,XMMWORD PTR [rip+0x205325]        # 20b220 <default_quoting_options>
5efa:	00
5efb:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
5f00:	89 d0                	mov    eax,edx
5f02:	0f 29 04 24          	movaps XMMWORD PTR [rsp],xmm0
5f06:	c0 e8 05             	shr    al,0x5
5f09:	0f b6 c0             	movzx  eax,al
5f0c:	4d 8d 4c 80 08       	lea    r9,[r8+rax*4+0x8]
5f11:	66 0f 6f 05 17 53 20 	movdqa xmm0,XMMWORD PTR [rip+0x205317]        # 20b230 <default_quoting_options+0x10>
5f18:	00
5f19:	0f 29 44 24 10       	movaps XMMWORD PTR [rsp+0x10],xmm0
5f1e:	66 0f 6f 05 1a 53 20 	movdqa xmm0,XMMWORD PTR [rip+0x20531a]        # 20b240 <default_quoting_options+0x20>
5f25:	00
5f26:	0f 29 44 24 20       	movaps XMMWORD PTR [rsp+0x20],xmm0
5f2b:	41 8b 11             	mov    edx,DWORD PTR [r9]
5f2e:	89 d0                	mov    eax,edx
5f30:	d3 e8                	shr    eax,cl
5f32:	f7 d0                	not    eax
5f34:	83 e0 01             	and    eax,0x1
5f37:	d3 e0                	shl    eax,cl
5f39:	4c 89 c1             	mov    rcx,r8
5f3c:	31 d0                	xor    eax,edx
5f3e:	48 89 f2             	mov    rdx,rsi
5f41:	48 89 fe             	mov    rsi,rdi
5f44:	41 89 01             	mov    DWORD PTR [r9],eax
5f47:	31 ff                	xor    edi,edi
5f49:	e8 f2 f8 ff ff       	call   5840 <quotearg_n_options>
5f4e:	48 8b 74 24 38       	mov    rsi,QWORD PTR [rsp+0x38]
5f53:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
5f5a:	00 00
5f5c:	75 05                	jne    5f63 <quotearg_char_mem+0x93>
5f5e:	48 83 c4 48          	add    rsp,0x48
5f62:	c3                   	ret
5f63:	e8 f8 b6 ff ff       	call   1660 <__stack_chk_fail@plt>
5f68:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
5f6f:	00

0000000000005f70 <quotearg_char>:
5f70:	40 0f be d6          	movsx  edx,sil
5f74:	48 c7 c6 ff ff ff ff 	mov    rsi,0xffffffffffffffff
5f7b:	e9 50 ff ff ff       	jmp    5ed0 <quotearg_char_mem>

0000000000005f80 <quotearg_colon>:
5f80:	ba 3a 00 00 00       	mov    edx,0x3a
5f85:	48 c7 c6 ff ff ff ff 	mov    rsi,0xffffffffffffffff
5f8c:	e9 3f ff ff ff       	jmp    5ed0 <quotearg_char_mem>
5f91:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
5f96:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
5f9d:	00 00 00

0000000000005fa0 <quotearg_colon_mem>:
5fa0:	ba 3a 00 00 00       	mov    edx,0x3a
5fa5:	e9 26 ff ff ff       	jmp    5ed0 <quotearg_char_mem>
5faa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005fb0 <quotearg_n_style_colon>:
5fb0:	48 83 ec 48          	sub    rsp,0x48
5fb4:	48 89 d0             	mov    rax,rdx
5fb7:	64 48 8b 14 25 28 00 	mov    rdx,QWORD PTR fs:0x28
5fbe:	00 00
5fc0:	48 89 54 24 38       	mov    QWORD PTR [rsp+0x38],rdx
5fc5:	31 d2                	xor    edx,edx
5fc7:	83 fe 0a             	cmp    esi,0xa
5fca:	74 68                	je     6034 <quotearg_n_style_colon+0x84>
5fcc:	89 34 24             	mov    DWORD PTR [rsp],esi
5fcf:	48 89 e1             	mov    rcx,rsp
5fd2:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
5fd9:	48 89 c6             	mov    rsi,rax
5fdc:	48 c7 44 24 04 00 00 	mov    QWORD PTR [rsp+0x4],0x0
5fe3:	00 00
5fe5:	48 c7 44 24 0c 00 00 	mov    QWORD PTR [rsp+0xc],0x4000000
5fec:	00 04
5fee:	48 c7 44 24 14 00 00 	mov    QWORD PTR [rsp+0x14],0x0
5ff5:	00 00
5ff7:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
5ffe:	00 00
6000:	48 c7 44 24 24 00 00 	mov    QWORD PTR [rsp+0x24],0x0
6007:	00 00
6009:	48 c7 44 24 2c 00 00 	mov    QWORD PTR [rsp+0x2c],0x0
6010:	00 00
6012:	c7 44 24 34 00 00 00 	mov    DWORD PTR [rsp+0x34],0x0
6019:	00
601a:	e8 21 f8 ff ff       	call   5840 <quotearg_n_options>
601f:	48 8b 4c 24 38       	mov    rcx,QWORD PTR [rsp+0x38]
6024:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
602b:	00 00
602d:	75 0a                	jne    6039 <quotearg_n_style_colon+0x89>
602f:	48 83 c4 48          	add    rsp,0x48
6033:	c3                   	ret
6034:	e8 67 b5 ff ff       	call   15a0 <abort@plt>
6039:	e8 22 b6 ff ff       	call   1660 <__stack_chk_fail@plt>
603e:	66 90                	xchg   ax,ax

0000000000006040 <quotearg_n_custom_mem>:
6040:	48 83 ec 48          	sub    rsp,0x48
6044:	49 89 c9             	mov    r9,rcx
6047:	48 8b 0d 02 52 20 00 	mov    rcx,QWORD PTR [rip+0x205202]        # 20b250 <default_quoting_options+0x30>
604e:	66 0f 6f 05 ca 51 20 	movdqa xmm0,XMMWORD PTR [rip+0x2051ca]        # 20b220 <default_quoting_options>
6055:	00
6056:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
605d:	00 00
605f:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
6064:	31 c0                	xor    eax,eax
6066:	0f 29 04 24          	movaps XMMWORD PTR [rsp],xmm0
606a:	48 85 f6             	test   rsi,rsi
606d:	48 89 4c 24 30       	mov    QWORD PTR [rsp+0x30],rcx
6072:	c7 04 24 0a 00 00 00 	mov    DWORD PTR [rsp],0xa
6079:	66 0f 6f 05 af 51 20 	movdqa xmm0,XMMWORD PTR [rip+0x2051af]        # 20b230 <default_quoting_options+0x10>
6080:	00
6081:	0f 29 44 24 10       	movaps XMMWORD PTR [rsp+0x10],xmm0
6086:	66 0f 6f 05 b2 51 20 	movdqa xmm0,XMMWORD PTR [rip+0x2051b2]        # 20b240 <default_quoting_options+0x20>
608d:	00
608e:	0f 29 44 24 20       	movaps XMMWORD PTR [rsp+0x20],xmm0
6093:	74 32                	je     60c7 <quotearg_n_custom_mem+0x87>
6095:	48 85 d2             	test   rdx,rdx
6098:	74 2d                	je     60c7 <quotearg_n_custom_mem+0x87>
609a:	48 89 74 24 28       	mov    QWORD PTR [rsp+0x28],rsi
609f:	48 89 54 24 30       	mov    QWORD PTR [rsp+0x30],rdx
60a4:	48 89 e1             	mov    rcx,rsp
60a7:	4c 89 c2             	mov    rdx,r8
60aa:	4c 89 ce             	mov    rsi,r9
60ad:	e8 8e f7 ff ff       	call   5840 <quotearg_n_options>
60b2:	48 8b 7c 24 38       	mov    rdi,QWORD PTR [rsp+0x38]
60b7:	64 48 33 3c 25 28 00 	xor    rdi,QWORD PTR fs:0x28
60be:	00 00
60c0:	75 0a                	jne    60cc <quotearg_n_custom_mem+0x8c>
60c2:	48 83 c4 48          	add    rsp,0x48
60c6:	c3                   	ret
60c7:	e8 d4 b4 ff ff       	call   15a0 <abort@plt>
60cc:	e8 8f b5 ff ff       	call   1660 <__stack_chk_fail@plt>
60d1:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
60d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
60dd:	00 00 00

00000000000060e0 <quotearg_n_custom>:
60e0:	49 c7 c0 ff ff ff ff 	mov    r8,0xffffffffffffffff
60e7:	e9 54 ff ff ff       	jmp    6040 <quotearg_n_custom_mem>
60ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000060f0 <quotearg_custom>:
60f0:	48 89 d1             	mov    rcx,rdx
60f3:	49 c7 c0 ff ff ff ff 	mov    r8,0xffffffffffffffff
60fa:	48 89 f2             	mov    rdx,rsi
60fd:	48 89 fe             	mov    rsi,rdi
6100:	31 ff                	xor    edi,edi
6102:	e9 39 ff ff ff       	jmp    6040 <quotearg_n_custom_mem>
6107:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
610e:	00 00

0000000000006110 <quotearg_custom_mem>:
6110:	49 89 c8             	mov    r8,rcx
6113:	48 89 d1             	mov    rcx,rdx
6116:	48 89 f2             	mov    rdx,rsi
6119:	48 89 fe             	mov    rsi,rdi
611c:	31 ff                	xor    edi,edi
611e:	e9 1d ff ff ff       	jmp    6040 <quotearg_n_custom_mem>
6123:	0f 1f 00             	nop    DWORD PTR [rax]
6126:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
612d:	00 00 00

0000000000006130 <quote_n_mem>:
6130:	48 8d 0d e9 4e 20 00 	lea    rcx,[rip+0x204ee9]        # 20b020 <quote_quoting_options>
6137:	e9 04 f7 ff ff       	jmp    5840 <quotearg_n_options>
613c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006140 <quote_mem>:
6140:	48 8d 0d d9 4e 20 00 	lea    rcx,[rip+0x204ed9]        # 20b020 <quote_quoting_options>
6147:	48 89 f2             	mov    rdx,rsi
614a:	48 89 fe             	mov    rsi,rdi
614d:	31 ff                	xor    edi,edi
614f:	e9 ec f6 ff ff       	jmp    5840 <quotearg_n_options>
6154:	66 90                	xchg   ax,ax
6156:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
615d:	00 00 00

0000000000006160 <quote_n>:
6160:	48 8d 0d b9 4e 20 00 	lea    rcx,[rip+0x204eb9]        # 20b020 <quote_quoting_options>
6167:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
616e:	e9 cd f6 ff ff       	jmp    5840 <quotearg_n_options>
6173:	0f 1f 00             	nop    DWORD PTR [rax]
6176:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
617d:	00 00 00

0000000000006180 <quote>:
6180:	48 8d 0d 99 4e 20 00 	lea    rcx,[rip+0x204e99]        # 20b020 <quote_quoting_options>
6187:	48 89 fe             	mov    rsi,rdi
618a:	48 c7 c2 ff ff ff ff 	mov    rdx,0xffffffffffffffff
6191:	31 ff                	xor    edi,edi
6193:	e9 a8 f6 ff ff       	jmp    5840 <quotearg_n_options>
6198:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
619f:	00

00000000000061a0 <version_etc_arn>:
61a0:	41 57                	push   r15
61a2:	41 56                	push   r14
61a4:	41 55                	push   r13
61a6:	41 54                	push   r12
61a8:	4d 89 cc             	mov    r12,r9
61ab:	55                   	push   rbp
61ac:	53                   	push   rbx
61ad:	48 89 fd             	mov    rbp,rdi
61b0:	4c 89 c3             	mov    rbx,r8
61b3:	48 83 ec 28          	sub    rsp,0x28
61b7:	48 85 f6             	test   rsi,rsi
61ba:	0f 84 18 01 00 00    	je     62d8 <version_etc_arn+0x138>
61c0:	49 89 d0             	mov    r8,rdx
61c3:	48 8d 15 9e 23 00 00 	lea    rdx,[rip+0x239e]        # 8568 <quoting_style_vals+0x28>
61ca:	49 89 c9             	mov    r9,rcx
61cd:	31 c0                	xor    eax,eax
61cf:	48 89 f1             	mov    rcx,rsi
61d2:	be 01 00 00 00       	mov    esi,0x1
61d7:	e8 94 b6 ff ff       	call   1870 <__fprintf_chk@plt>
61dc:	48 8d 35 98 23 00 00 	lea    rsi,[rip+0x2398]        # 857b <quoting_style_vals+0x3b>
61e3:	31 ff                	xor    edi,edi
61e5:	ba 05 00 00 00       	mov    edx,0x5
61ea:	e8 41 b4 ff ff       	call   1630 <dcgettext@plt>
61ef:	48 8d 15 aa 26 00 00 	lea    rdx,[rip+0x26aa]        # 88a0 <version_etc_copyright>
61f6:	48 89 c1             	mov    rcx,rax
61f9:	41 b8 e3 07 00 00    	mov    r8d,0x7e3
61ff:	be 01 00 00 00       	mov    esi,0x1
6204:	48 89 ef             	mov    rdi,rbp
6207:	31 c0                	xor    eax,eax
6209:	e8 62 b6 ff ff       	call   1870 <__fprintf_chk@plt>
620e:	48 8d 35 f3 23 00 00 	lea    rsi,[rip+0x23f3]        # 8608 <quoting_style_vals+0xc8>
6215:	31 ff                	xor    edi,edi
6217:	ba 05 00 00 00       	mov    edx,0x5
621c:	e8 0f b4 ff ff       	call   1630 <dcgettext@plt>
6221:	48 89 ee             	mov    rsi,rbp
6224:	48 89 c7             	mov    rdi,rax
6227:	e8 04 b5 ff ff       	call   1730 <fputs_unlocked@plt>
622c:	49 83 fc 09          	cmp    r12,0x9
6230:	0f 87 3a 03 00 00    	ja     6570 <version_etc_arn+0x3d0>
6236:	48 8d 15 27 26 00 00 	lea    rdx,[rip+0x2627]        # 8864 <quoting_style_vals+0x324>
623d:	4a 63 04 a2          	movsxd rax,DWORD PTR [rdx+r12*4]
6241:	48 01 d0             	add    rax,rdx
6244:	ff e0                	jmp    rax
6246:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
624d:	00 00 00
6250:	4c 8b 4b 38          	mov    r9,QWORD PTR [rbx+0x38]
6254:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
6258:	48 8d 35 19 25 00 00 	lea    rsi,[rip+0x2519]        # 8778 <quoting_style_vals+0x238>
625f:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
6263:	ba 05 00 00 00       	mov    edx,0x5
6268:	31 ff                	xor    edi,edi
626a:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
626e:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
6272:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
6277:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
627b:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
627f:	48 89 04 24          	mov    QWORD PTR [rsp],rax
6283:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
6288:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
628b:	e8 a0 b3 ff ff       	call   1630 <dcgettext@plt>
6290:	48 83 ec 08          	sub    rsp,0x8
6294:	4c 8b 4c 24 18       	mov    r9,QWORD PTR [rsp+0x18]
6299:	48 89 c2             	mov    rdx,rax
629c:	48 89 d9             	mov    rcx,rbx
629f:	be 01 00 00 00       	mov    esi,0x1
62a4:	48 89 ef             	mov    rdi,rbp
62a7:	31 c0                	xor    eax,eax
62a9:	41 51                	push   r9
62ab:	41 55                	push   r13
62ad:	41 54                	push   r12
62af:	41 57                	push   r15
62b1:	41 56                	push   r14
62b3:	4c 8b 4c 24 30       	mov    r9,QWORD PTR [rsp+0x30]
62b8:	4c 8b 44 24 38       	mov    r8,QWORD PTR [rsp+0x38]
62bd:	e8 ae b5 ff ff       	call   1870 <__fprintf_chk@plt>
62c2:	48 83 c4 30          	add    rsp,0x30
62c6:	48 83 c4 28          	add    rsp,0x28
62ca:	5b                   	pop    rbx
62cb:	5d                   	pop    rbp
62cc:	41 5c                	pop    r12
62ce:	41 5d                	pop    r13
62d0:	41 5e                	pop    r14
62d2:	41 5f                	pop    r15
62d4:	c3                   	ret
62d5:	0f 1f 00             	nop    DWORD PTR [rax]
62d8:	49 89 c8             	mov    r8,rcx
62db:	48 89 d1             	mov    rcx,rdx
62de:	48 8d 15 8f 22 00 00 	lea    rdx,[rip+0x228f]        # 8574 <quoting_style_vals+0x34>
62e5:	be 01 00 00 00       	mov    esi,0x1
62ea:	31 c0                	xor    eax,eax
62ec:	e8 7f b5 ff ff       	call   1870 <__fprintf_chk@plt>
62f1:	e9 e6 fe ff ff       	jmp    61dc <version_etc_arn+0x3c>
62f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
62fd:	00 00 00
6300:	4c 8b 53 40          	mov    r10,QWORD PTR [rbx+0x40]
6304:	4c 8b 4b 38          	mov    r9,QWORD PTR [rbx+0x38]
6308:	48 8d 35 99 24 00 00 	lea    rsi,[rip+0x2499]        # 87a8 <quoting_style_vals+0x268>
630f:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
6313:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
6317:	ba 05 00 00 00       	mov    edx,0x5
631c:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
6320:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
6324:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
6328:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
632c:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
632f:	4c 89 54 24 18       	mov    QWORD PTR [rsp+0x18],r10
6334:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
6339:	48 89 04 24          	mov    QWORD PTR [rsp],rax
633d:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
6342:	31 ff                	xor    edi,edi
6344:	e8 e7 b2 ff ff       	call   1630 <dcgettext@plt>
6349:	4c 8b 54 24 18       	mov    r10,QWORD PTR [rsp+0x18]
634e:	41 52                	push   r10
6350:	e9 3f ff ff ff       	jmp    6294 <version_etc_arn+0xf4>
6355:	0f 1f 00             	nop    DWORD PTR [rax]
6358:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
635b:	48 8d 35 1d 22 00 00 	lea    rsi,[rip+0x221d]        # 857f <quoting_style_vals+0x3f>
6362:	ba 05 00 00 00       	mov    edx,0x5
6367:	31 ff                	xor    edi,edi
6369:	e8 c2 b2 ff ff       	call   1630 <dcgettext@plt>
636e:	48 83 c4 28          	add    rsp,0x28
6372:	48 89 d9             	mov    rcx,rbx
6375:	48 89 ef             	mov    rdi,rbp
6378:	5b                   	pop    rbx
6379:	5d                   	pop    rbp
637a:	41 5c                	pop    r12
637c:	41 5d                	pop    r13
637e:	41 5e                	pop    r14
6380:	41 5f                	pop    r15
6382:	48 89 c2             	mov    rdx,rax
6385:	be 01 00 00 00       	mov    esi,0x1
638a:	31 c0                	xor    eax,eax
638c:	e9 df b4 ff ff       	jmp    1870 <__fprintf_chk@plt>
6391:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
6398:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
639c:	48 8d 35 ec 21 00 00 	lea    rsi,[rip+0x21ec]        # 858f <quoting_style_vals+0x4f>
63a3:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
63a6:	ba 05 00 00 00       	mov    edx,0x5
63ab:	31 ff                	xor    edi,edi
63ad:	e8 7e b2 ff ff       	call   1630 <dcgettext@plt>
63b2:	48 83 c4 28          	add    rsp,0x28
63b6:	4d 89 e0             	mov    r8,r12
63b9:	48 89 d9             	mov    rcx,rbx
63bc:	48 89 ef             	mov    rdi,rbp
63bf:	48 89 c2             	mov    rdx,rax
63c2:	be 01 00 00 00       	mov    esi,0x1
63c7:	5b                   	pop    rbx
63c8:	5d                   	pop    rbp
63c9:	41 5c                	pop    r12
63cb:	41 5d                	pop    r13
63cd:	41 5e                	pop    r14
63cf:	41 5f                	pop    r15
63d1:	31 c0                	xor    eax,eax
63d3:	e9 98 b4 ff ff       	jmp    1870 <__fprintf_chk@plt>
63d8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
63df:	00
63e0:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
63e4:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
63e8:	48 8d 35 b7 21 00 00 	lea    rsi,[rip+0x21b7]        # 85a6 <quoting_style_vals+0x66>
63ef:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
63f2:	ba 05 00 00 00       	mov    edx,0x5
63f7:	31 ff                	xor    edi,edi
63f9:	e8 32 b2 ff ff       	call   1630 <dcgettext@plt>
63fe:	48 83 c4 28          	add    rsp,0x28
6402:	4d 89 e9             	mov    r9,r13
6405:	4d 89 e0             	mov    r8,r12
6408:	48 89 d9             	mov    rcx,rbx
640b:	48 89 ef             	mov    rdi,rbp
640e:	48 89 c2             	mov    rdx,rax
6411:	5b                   	pop    rbx
6412:	5d                   	pop    rbp
6413:	41 5c                	pop    r12
6415:	41 5d                	pop    r13
6417:	41 5e                	pop    r14
6419:	41 5f                	pop    r15
641b:	be 01 00 00 00       	mov    esi,0x1
6420:	31 c0                	xor    eax,eax
6422:	e9 49 b4 ff ff       	jmp    1870 <__fprintf_chk@plt>
6427:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
642e:	00 00
6430:	48 8d 35 a1 22 00 00 	lea    rsi,[rip+0x22a1]        # 86d8 <quoting_style_vals+0x198>
6437:	ba 05 00 00 00       	mov    edx,0x5
643c:	31 ff                	xor    edi,edi
643e:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
6442:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
6446:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
644a:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
644d:	e8 de b1 ff ff       	call   1630 <dcgettext@plt>
6452:	48 83 ec 08          	sub    rsp,0x8
6456:	41 56                	push   r14
6458:	48 89 c2             	mov    rdx,rax
645b:	4d 89 e9             	mov    r9,r13
645e:	4d 89 e0             	mov    r8,r12
6461:	48 89 d9             	mov    rcx,rbx
6464:	48 89 ef             	mov    rdi,rbp
6467:	be 01 00 00 00       	mov    esi,0x1
646c:	31 c0                	xor    eax,eax
646e:	e8 fd b3 ff ff       	call   1870 <__fprintf_chk@plt>
6473:	58                   	pop    rax
6474:	5a                   	pop    rdx
6475:	48 83 c4 28          	add    rsp,0x28
6479:	5b                   	pop    rbx
647a:	5d                   	pop    rbp
647b:	41 5c                	pop    r12
647d:	41 5d                	pop    r13
647f:	41 5e                	pop    r14
6481:	41 5f                	pop    r15
6483:	c3                   	ret
6484:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
6488:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
648c:	48 8d 35 65 22 00 00 	lea    rsi,[rip+0x2265]        # 86f8 <quoting_style_vals+0x1b8>
6493:	ba 05 00 00 00       	mov    edx,0x5
6498:	31 ff                	xor    edi,edi
649a:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
649e:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
64a2:	4c 8b 63 08          	mov    r12,QWORD PTR [rbx+0x8]
64a6:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
64a9:	e8 82 b1 ff ff       	call   1630 <dcgettext@plt>
64ae:	41 57                	push   r15
64b0:	eb a4                	jmp    6456 <version_etc_arn+0x2b6>
64b2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
64b8:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
64bc:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
64c0:	48 8d 35 59 22 00 00 	lea    rsi,[rip+0x2259]        # 8720 <quoting_style_vals+0x1e0>
64c7:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
64cb:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
64cf:	ba 05 00 00 00       	mov    edx,0x5
64d4:	4c 8b 6b 10          	mov    r13,QWORD PTR [rbx+0x10]
64d8:	31 ff                	xor    edi,edi
64da:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
64dd:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
64e1:	e8 4a b1 ff ff       	call   1630 <dcgettext@plt>
64e6:	48 83 ec 08          	sub    rsp,0x8
64ea:	4d 89 e9             	mov    r9,r13
64ed:	41 54                	push   r12
64ef:	41 57                	push   r15
64f1:	41 56                	push   r14
64f3:	4c 8b 44 24 20       	mov    r8,QWORD PTR [rsp+0x20]
64f8:	48 89 d9             	mov    rcx,rbx
64fb:	48 89 c2             	mov    rdx,rax
64fe:	48 89 ef             	mov    rdi,rbp
6501:	be 01 00 00 00       	mov    esi,0x1
6506:	31 c0                	xor    eax,eax
6508:	e8 63 b3 ff ff       	call   1870 <__fprintf_chk@plt>
650d:	48 83 c4 20          	add    rsp,0x20
6511:	48 83 c4 28          	add    rsp,0x28
6515:	5b                   	pop    rbx
6516:	5d                   	pop    rbp
6517:	41 5c                	pop    r12
6519:	41 5d                	pop    r13
651b:	41 5e                	pop    r14
651d:	41 5f                	pop    r15
651f:	c3                   	ret
6520:	4c 8b 4b 10          	mov    r9,QWORD PTR [rbx+0x10]
6524:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
6528:	48 8d 35 19 22 00 00 	lea    rsi,[rip+0x2219]        # 8748 <quoting_style_vals+0x208>
652f:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
6533:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
6537:	ba 05 00 00 00       	mov    edx,0x5
653c:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
6540:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
6544:	31 ff                	xor    edi,edi
6546:	4c 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],r9
654b:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
654e:	4c 89 04 24          	mov    QWORD PTR [rsp],r8
6552:	e8 d9 b0 ff ff       	call   1630 <dcgettext@plt>
6557:	41 55                	push   r13
6559:	41 54                	push   r12
655b:	41 57                	push   r15
655d:	41 56                	push   r14
655f:	4c 8b 4c 24 28       	mov    r9,QWORD PTR [rsp+0x28]
6564:	eb 8d                	jmp    64f3 <version_etc_arn+0x353>
6566:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
656d:	00 00 00
6570:	4c 8b 53 40          	mov    r10,QWORD PTR [rbx+0x40]
6574:	4c 8b 4b 38          	mov    r9,QWORD PTR [rbx+0x38]
6578:	ba 05 00 00 00       	mov    edx,0x5
657d:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
6581:	4c 8b 43 08          	mov    r8,QWORD PTR [rbx+0x8]
6585:	48 8d 35 54 22 00 00 	lea    rsi,[rip+0x2254]        # 87e0 <quoting_style_vals+0x2a0>
658c:	4c 8b 6b 30          	mov    r13,QWORD PTR [rbx+0x30]
6590:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
6594:	4c 8b 7b 20          	mov    r15,QWORD PTR [rbx+0x20]
6598:	4c 8b 73 18          	mov    r14,QWORD PTR [rbx+0x18]
659c:	4c 89 54 24 18       	mov    QWORD PTR [rsp+0x18],r10
65a1:	4c 89 4c 24 10       	mov    QWORD PTR [rsp+0x10],r9
65a6:	48 89 04 24          	mov    QWORD PTR [rsp],rax
65aa:	4c 89 44 24 08       	mov    QWORD PTR [rsp+0x8],r8
65af:	48 8b 1b             	mov    rbx,QWORD PTR [rbx]
65b2:	e9 8b fd ff ff       	jmp    6342 <version_etc_arn+0x1a2>
65b7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
65be:	00 00

00000000000065c0 <version_etc_ar>:
65c0:	45 31 c9             	xor    r9d,r9d
65c3:	49 83 38 00          	cmp    QWORD PTR [r8],0x0
65c7:	74 12                	je     65db <version_etc_ar+0x1b>
65c9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
65d0:	49 83 c1 01          	add    r9,0x1
65d4:	4b 83 3c c8 00       	cmp    QWORD PTR [r8+r9*8],0x0
65d9:	75 f5                	jne    65d0 <version_etc_ar+0x10>
65db:	e9 c0 fb ff ff       	jmp    61a0 <version_etc_arn>

00000000000065e0 <version_etc_va>:
65e0:	48 83 ec 68          	sub    rsp,0x68
65e4:	4d 89 c2             	mov    r10,r8
65e7:	45 31 c9             	xor    r9d,r9d
65ea:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
65f1:	00 00
65f3:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
65f8:	31 c0                	xor    eax,eax
65fa:	49 89 e0             	mov    r8,rsp
65fd:	0f 1f 00             	nop    DWORD PTR [rax]
6600:	41 8b 02             	mov    eax,DWORD PTR [r10]
6603:	83 f8 2f             	cmp    eax,0x2f
6606:	77 42                	ja     664a <version_etc_va+0x6a>
6608:	41 89 c3             	mov    r11d,eax
660b:	4d 03 5a 10          	add    r11,QWORD PTR [r10+0x10]
660f:	83 c0 08             	add    eax,0x8
6612:	41 89 02             	mov    DWORD PTR [r10],eax
6615:	49 8b 03             	mov    rax,QWORD PTR [r11]
6618:	48 85 c0             	test   rax,rax
661b:	4b 89 04 c8          	mov    QWORD PTR [r8+r9*8],rax
661f:	74 0a                	je     662b <version_etc_va+0x4b>
6621:	49 83 c1 01          	add    r9,0x1
6625:	49 83 f9 0a          	cmp    r9,0xa
6629:	75 d5                	jne    6600 <version_etc_va+0x20>
662b:	e8 70 fb ff ff       	call   61a0 <version_etc_arn>
6630:	48 8b 44 24 58       	mov    rax,QWORD PTR [rsp+0x58]
6635:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
663c:	00 00
663e:	75 05                	jne    6645 <version_etc_va+0x65>
6640:	48 83 c4 68          	add    rsp,0x68
6644:	c3                   	ret
6645:	e8 16 b0 ff ff       	call   1660 <__stack_chk_fail@plt>
664a:	4d 8b 5a 08          	mov    r11,QWORD PTR [r10+0x8]
664e:	49 8d 43 08          	lea    rax,[r11+0x8]
6652:	49 89 42 08          	mov    QWORD PTR [r10+0x8],rax
6656:	eb bd                	jmp    6615 <version_etc_va+0x35>
6658:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
665f:	00

0000000000006660 <version_etc>:
6660:	55                   	push   rbp
6661:	53                   	push   rbx
6662:	41 ba 20 00 00 00    	mov    r10d,0x20
6668:	45 31 db             	xor    r11d,r11d
666b:	48 81 ec b8 00 00 00 	sub    rsp,0xb8
6672:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
6679:	00 00
667b:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
6680:	31 c0                	xor    eax,eax
6682:	48 8d 84 24 d0 00 00 	lea    rax,[rsp+0xd0]
6689:	00
668a:	4c 89 84 24 a0 00 00 	mov    QWORD PTR [rsp+0xa0],r8
6691:	00
6692:	48 8d 9c 24 d0 00 00 	lea    rbx,[rsp+0xd0]
6699:	00
669a:	4c 8d 44 24 20       	lea    r8,[rsp+0x20]
669f:	4c 89 8c 24 a8 00 00 	mov    QWORD PTR [rsp+0xa8],r9
66a6:	00
66a7:	c7 44 24 08 20 00 00 	mov    DWORD PTR [rsp+0x8],0x20
66ae:	00
66af:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
66b4:	48 8d 84 24 80 00 00 	lea    rax,[rsp+0x80]
66bb:	00
66bc:	45 31 c9             	xor    r9d,r9d
66bf:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
66c4:	48 89 c5             	mov    rbp,rax
66c7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
66ce:	00 00
66d0:	41 83 fa 2f          	cmp    r10d,0x2f
66d4:	77 56                	ja     672c <version_etc+0xcc>
66d6:	44 89 d0             	mov    eax,r10d
66d9:	41 bb 01 00 00 00    	mov    r11d,0x1
66df:	41 83 c2 08          	add    r10d,0x8
66e3:	48 01 e8             	add    rax,rbp
66e6:	48 8b 00             	mov    rax,QWORD PTR [rax]
66e9:	48 85 c0             	test   rax,rax
66ec:	4b 89 04 c8          	mov    QWORD PTR [r8+r9*8],rax
66f0:	74 0a                	je     66fc <version_etc+0x9c>
66f2:	49 83 c1 01          	add    r9,0x1
66f6:	49 83 f9 0a          	cmp    r9,0xa
66fa:	75 d4                	jne    66d0 <version_etc+0x70>
66fc:	45 84 db             	test   r11b,r11b
66ff:	75 24                	jne    6725 <version_etc+0xc5>
6701:	e8 9a fa ff ff       	call   61a0 <version_etc_arn>
6706:	48 8b 44 24 78       	mov    rax,QWORD PTR [rsp+0x78]
670b:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
6712:	00 00
6714:	75 0a                	jne    6720 <version_etc+0xc0>
6716:	48 81 c4 b8 00 00 00 	add    rsp,0xb8
671d:	5b                   	pop    rbx
671e:	5d                   	pop    rbp
671f:	c3                   	ret
6720:	e8 3b af ff ff       	call   1660 <__stack_chk_fail@plt>
6725:	44 89 54 24 08       	mov    DWORD PTR [rsp+0x8],r10d
672a:	eb d5                	jmp    6701 <version_etc+0xa1>
672c:	48 89 d8             	mov    rax,rbx
672f:	48 83 c3 08          	add    rbx,0x8
6733:	eb b1                	jmp    66e6 <version_etc+0x86>
6735:	90                   	nop
6736:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
673d:	00 00 00

0000000000006740 <emit_bug_reporting_address>:
6740:	53                   	push   rbx
6741:	48 8d 35 7a 1e 00 00 	lea    rsi,[rip+0x1e7a]        # 85c2 <quoting_style_vals+0x82>
6748:	ba 05 00 00 00       	mov    edx,0x5
674d:	31 ff                	xor    edi,edi
674f:	e8 dc ae ff ff       	call   1630 <dcgettext@plt>
6754:	48 8d 15 7c 1e 00 00 	lea    rdx,[rip+0x1e7c]        # 85d7 <quoting_style_vals+0x97>
675b:	48 89 c6             	mov    rsi,rax
675e:	bf 01 00 00 00       	mov    edi,0x1
6763:	31 c0                	xor    eax,eax
6765:	e8 86 b0 ff ff       	call   17f0 <__printf_chk@plt>
676a:	48 8d 35 7c 1e 00 00 	lea    rsi,[rip+0x1e7c]        # 85ed <quoting_style_vals+0xad>
6771:	ba 05 00 00 00       	mov    edx,0x5
6776:	31 ff                	xor    edi,edi
6778:	e8 b3 ae ff ff       	call   1630 <dcgettext@plt>
677d:	48 8d 0d 14 14 00 00 	lea    rcx,[rip+0x1414]        # 7b98 <_IO_stdin_used+0x878>
6784:	48 8d 15 65 0c 00 00 	lea    rdx,[rip+0xc65]        # 73f0 <_IO_stdin_used+0xd0>
678b:	48 89 c6             	mov    rsi,rax
678e:	bf 01 00 00 00       	mov    edi,0x1
6793:	31 c0                	xor    eax,eax
6795:	e8 56 b0 ff ff       	call   17f0 <__printf_chk@plt>
679a:	48 8b 1d e7 48 20 00 	mov    rbx,QWORD PTR [rip+0x2048e7]        # 20b088 <stdout@@GLIBC_2.2.5>
67a1:	48 8d 35 78 20 00 00 	lea    rsi,[rip+0x2078]        # 8820 <quoting_style_vals+0x2e0>
67a8:	31 ff                	xor    edi,edi
67aa:	ba 05 00 00 00       	mov    edx,0x5
67af:	e8 7c ae ff ff       	call   1630 <dcgettext@plt>
67b4:	48 89 de             	mov    rsi,rbx
67b7:	48 89 c7             	mov    rdi,rax
67ba:	5b                   	pop    rbx
67bb:	e9 70 af ff ff       	jmp    1730 <fputs_unlocked@plt>

00000000000067c0 <xmalloc>:
67c0:	53                   	push   rbx
67c1:	48 89 fb             	mov    rbx,rdi
67c4:	e8 b7 af ff ff       	call   1780 <malloc@plt>
67c9:	48 85 c0             	test   rax,rax
67cc:	75 05                	jne    67d3 <xmalloc+0x13>
67ce:	48 85 db             	test   rbx,rbx
67d1:	75 02                	jne    67d5 <xmalloc+0x15>
67d3:	5b                   	pop    rbx
67d4:	c3                   	ret
67d5:	e8 36 02 00 00       	call   6a10 <xalloc_die>
67da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000067e0 <xnmalloc>:
67e0:	48 89 f8             	mov    rax,rdi
67e3:	48 f7 e6             	mul    rsi
67e6:	48 89 c7             	mov    rdi,rax
67e9:	0f 90 c0             	seto   al
67ec:	48 85 ff             	test   rdi,rdi
67ef:	78 0a                	js     67fb <xnmalloc+0x1b>
67f1:	0f b6 c0             	movzx  eax,al
67f4:	48 85 c0             	test   rax,rax
67f7:	75 02                	jne    67fb <xnmalloc+0x1b>
67f9:	eb c5                	jmp    67c0 <xmalloc>
67fb:	48 83 ec 08          	sub    rsp,0x8
67ff:	e8 0c 02 00 00       	call   6a10 <xalloc_die>
6804:	66 90                	xchg   ax,ax
6806:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
680d:	00 00 00

0000000000006810 <xcharalloc>:
6810:	eb ae                	jmp    67c0 <xmalloc>
6812:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
6816:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
681d:	00 00 00

0000000000006820 <xrealloc>:
6820:	48 85 f6             	test   rsi,rsi
6823:	53                   	push   rbx
6824:	48 89 f3             	mov    rbx,rsi
6827:	75 05                	jne    682e <xrealloc+0xe>
6829:	48 85 ff             	test   rdi,rdi
682c:	75 1a                	jne    6848 <xrealloc+0x28>
682e:	48 89 de             	mov    rsi,rbx
6831:	e8 9a af ff ff       	call   17d0 <realloc@plt>
6836:	48 85 c0             	test   rax,rax
6839:	75 05                	jne    6840 <xrealloc+0x20>
683b:	48 85 db             	test   rbx,rbx
683e:	75 11                	jne    6851 <xrealloc+0x31>
6840:	5b                   	pop    rbx
6841:	c3                   	ret
6842:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
6848:	e8 43 ad ff ff       	call   1590 <free@plt>
684d:	31 c0                	xor    eax,eax
684f:	5b                   	pop    rbx
6850:	c3                   	ret
6851:	e8 ba 01 00 00       	call   6a10 <xalloc_die>
6856:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
685d:	00 00 00

0000000000006860 <xnrealloc>:
6860:	48 89 f0             	mov    rax,rsi
6863:	48 f7 e2             	mul    rdx
6866:	48 89 c6             	mov    rsi,rax
6869:	0f 90 c0             	seto   al
686c:	48 85 f6             	test   rsi,rsi
686f:	78 0a                	js     687b <xnrealloc+0x1b>
6871:	0f b6 c0             	movzx  eax,al
6874:	48 85 c0             	test   rax,rax
6877:	75 02                	jne    687b <xnrealloc+0x1b>
6879:	eb a5                	jmp    6820 <xrealloc>
687b:	48 83 ec 08          	sub    rsp,0x8
687f:	e8 8c 01 00 00       	call   6a10 <xalloc_die>
6884:	66 90                	xchg   ax,ax
6886:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
688d:	00 00 00

0000000000006890 <x2nrealloc>:
6890:	48 85 ff             	test   rdi,rdi
6893:	49 89 d1             	mov    r9,rdx
6896:	48 8b 0e             	mov    rcx,QWORD PTR [rsi]
6899:	74 35                	je     68d0 <x2nrealloc+0x40>
689b:	31 d2                	xor    edx,edx
689d:	48 b8 54 55 55 55 55 	movabs rax,0x5555555555555554
68a4:	55 55 55
68a7:	49 f7 f1             	div    r9
68aa:	48 39 c8             	cmp    rax,rcx
68ad:	76 3c                	jbe    68eb <x2nrealloc+0x5b>
68af:	48 89 c8             	mov    rax,rcx
68b2:	48 d1 e8             	shr    rax,1
68b5:	48 8d 4c 08 01       	lea    rcx,[rax+rcx*1+0x1]
68ba:	48 89 0e             	mov    QWORD PTR [rsi],rcx
68bd:	49 0f af c9          	imul   rcx,r9
68c1:	48 89 ce             	mov    rsi,rcx
68c4:	e9 57 ff ff ff       	jmp    6820 <xrealloc>
68c9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
68d0:	48 85 c9             	test   rcx,rcx
68d3:	74 23                	je     68f8 <x2nrealloc+0x68>
68d5:	48 89 c8             	mov    rax,rcx
68d8:	49 f7 e1             	mul    r9
68db:	0f 90 c2             	seto   dl
68de:	48 85 c0             	test   rax,rax
68e1:	0f b6 d2             	movzx  edx,dl
68e4:	78 05                	js     68eb <x2nrealloc+0x5b>
68e6:	48 85 d2             	test   rdx,rdx
68e9:	74 cf                	je     68ba <x2nrealloc+0x2a>
68eb:	48 83 ec 08          	sub    rsp,0x8
68ef:	e8 1c 01 00 00       	call   6a10 <xalloc_die>
68f4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
68f8:	31 d2                	xor    edx,edx
68fa:	b8 80 00 00 00       	mov    eax,0x80
68ff:	45 31 c0             	xor    r8d,r8d
6902:	49 f7 f1             	div    r9
6905:	48 85 c0             	test   rax,rax
6908:	41 0f 94 c0          	sete   r8b
690c:	49 8d 0c 00          	lea    rcx,[r8+rax*1]
6910:	eb c3                	jmp    68d5 <x2nrealloc+0x45>
6912:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
6916:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
691d:	00 00 00

0000000000006920 <x2realloc>:
6920:	48 85 ff             	test   rdi,rdi
6923:	48 8b 06             	mov    rax,QWORD PTR [rsi]
6926:	74 28                	je     6950 <x2realloc+0x30>
6928:	48 ba 53 55 55 55 55 	movabs rdx,0x5555555555555553
692f:	55 55 55
6932:	48 39 d0             	cmp    rax,rdx
6935:	77 2a                	ja     6961 <x2realloc+0x41>
6937:	48 89 c2             	mov    rdx,rax
693a:	48 d1 ea             	shr    rdx,1
693d:	48 8d 44 02 01       	lea    rax,[rdx+rax*1+0x1]
6942:	48 89 06             	mov    QWORD PTR [rsi],rax
6945:	48 89 c6             	mov    rsi,rax
6948:	e9 d3 fe ff ff       	jmp    6820 <xrealloc>
694d:	0f 1f 00             	nop    DWORD PTR [rax]
6950:	48 85 c0             	test   rax,rax
6953:	ba 80 00 00 00       	mov    edx,0x80
6958:	48 0f 44 c2          	cmove  rax,rdx
695c:	48 85 c0             	test   rax,rax
695f:	79 e1                	jns    6942 <x2realloc+0x22>
6961:	48 83 ec 08          	sub    rsp,0x8
6965:	e8 a6 00 00 00       	call   6a10 <xalloc_die>
696a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000006970 <xzalloc>:
6970:	53                   	push   rbx
6971:	48 89 fb             	mov    rbx,rdi
6974:	e8 47 fe ff ff       	call   67c0 <xmalloc>
6979:	48 89 da             	mov    rdx,rbx
697c:	31 f6                	xor    esi,esi
697e:	48 89 c7             	mov    rdi,rax
6981:	5b                   	pop    rbx
6982:	e9 69 ad ff ff       	jmp    16f0 <memset@plt>
6987:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
698e:	00 00

0000000000006990 <xcalloc>:
6990:	48 89 f8             	mov    rax,rdi
6993:	48 83 ec 08          	sub    rsp,0x8
6997:	48 f7 e6             	mul    rsi
699a:	0f 90 c2             	seto   dl
699d:	48 85 c0             	test   rax,rax
69a0:	78 17                	js     69b9 <xcalloc+0x29>
69a2:	0f b6 d2             	movzx  edx,dl
69a5:	48 85 d2             	test   rdx,rdx
69a8:	75 0f                	jne    69b9 <xcalloc+0x29>
69aa:	e8 91 ad ff ff       	call   1740 <calloc@plt>
69af:	48 85 c0             	test   rax,rax
69b2:	74 05                	je     69b9 <xcalloc+0x29>
69b4:	48 83 c4 08          	add    rsp,0x8
69b8:	c3                   	ret
69b9:	e8 52 00 00 00       	call   6a10 <xalloc_die>
69be:	66 90                	xchg   ax,ax

00000000000069c0 <xmemdup>:
69c0:	55                   	push   rbp
69c1:	53                   	push   rbx
69c2:	48 89 fd             	mov    rbp,rdi
69c5:	48 89 f7             	mov    rdi,rsi
69c8:	48 89 f3             	mov    rbx,rsi
69cb:	48 83 ec 08          	sub    rsp,0x8
69cf:	e8 ec fd ff ff       	call   67c0 <xmalloc>
69d4:	48 83 c4 08          	add    rsp,0x8
69d8:	48 89 da             	mov    rdx,rbx
69db:	48 89 ee             	mov    rsi,rbp
69de:	5b                   	pop    rbx
69df:	5d                   	pop    rbp
69e0:	48 89 c7             	mov    rdi,rax
69e3:	e9 78 ad ff ff       	jmp    1760 <memcpy@plt>
69e8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
69ef:	00

00000000000069f0 <xstrdup>:
69f0:	53                   	push   rbx
69f1:	48 89 fb             	mov    rbx,rdi
69f4:	e8 57 ac ff ff       	call   1650 <strlen@plt>
69f9:	48 89 df             	mov    rdi,rbx
69fc:	48 8d 70 01          	lea    rsi,[rax+0x1]
6a00:	5b                   	pop    rbx
6a01:	eb bd                	jmp    69c0 <xmemdup>
6a03:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
6a0a:	00 00 00
6a0d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006a10 <xalloc_die>:
6a10:	48 8d 35 b8 1e 00 00 	lea    rsi,[rip+0x1eb8]        # 88cf <version_etc_copyright+0x2f>
6a17:	48 83 ec 08          	sub    rsp,0x8
6a1b:	ba 05 00 00 00       	mov    edx,0x5
6a20:	31 ff                	xor    edi,edi
6a22:	e8 09 ac ff ff       	call   1630 <dcgettext@plt>
6a27:	8b 3d eb 45 20 00    	mov    edi,DWORD PTR [rip+0x2045eb]        # 20b018 <exit_failure>
6a2d:	48 8d 15 10 16 00 00 	lea    rdx,[rip+0x1610]        # 8044 <b64c+0x44>
6a34:	48 89 c1             	mov    rcx,rax
6a37:	31 f6                	xor    esi,esi
6a39:	31 c0                	xor    eax,eax
6a3b:	e8 d0 ad ff ff       	call   1810 <error@plt>
6a40:	e8 5b ab ff ff       	call   15a0 <abort@plt>
6a45:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
6a4c:	00 00 00
6a4f:	90                   	nop

0000000000006a50 <xnumtoumax>:
6a50:	41 57                	push   r15
6a52:	41 56                	push   r14
6a54:	49 89 cf             	mov    r15,rcx
6a57:	41 55                	push   r13
6a59:	41 54                	push   r12
6a5b:	49 89 d6             	mov    r14,rdx
6a5e:	55                   	push   rbp
6a5f:	53                   	push   rbx
6a60:	89 f2                	mov    edx,esi
6a62:	31 f6                	xor    esi,esi
6a64:	49 89 fc             	mov    r12,rdi
6a67:	4d 89 cd             	mov    r13,r9
6a6a:	48 83 ec 18          	sub    rsp,0x18
6a6e:	48 89 e1             	mov    rcx,rsp
6a71:	8b 5c 24 50          	mov    ebx,DWORD PTR [rsp+0x50]
6a75:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
6a7c:	00 00
6a7e:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
6a83:	31 c0                	xor    eax,eax
6a85:	e8 f6 00 00 00       	call   6b80 <xstrtoumax>
6a8a:	85 c0                	test   eax,eax
6a8c:	0f 85 8e 00 00 00    	jne    6b20 <xnumtoumax+0xd0>
6a92:	48 8b 2c 24          	mov    rbp,QWORD PTR [rsp]
6a96:	4c 39 f5             	cmp    rbp,r14
6a99:	72 05                	jb     6aa0 <xnumtoumax+0x50>
6a9b:	4c 39 fd             	cmp    rbp,r15
6a9e:	76 54                	jbe    6af4 <xnumtoumax+0xa4>
6aa0:	e8 0b ab ff ff       	call   15b0 <__errno_location@plt>
6aa5:	48 81 fd 00 00 00 40 	cmp    rbp,0x40000000
6aac:	49 89 c6             	mov    r14,rax
6aaf:	19 c0                	sbb    eax,eax
6ab1:	83 e0 d7             	and    eax,0xffffffd7
6ab4:	83 c0 4b             	add    eax,0x4b
6ab7:	41 89 06             	mov    DWORD PTR [r14],eax
6aba:	4c 89 e7             	mov    rdi,r12
6abd:	e8 be f6 ff ff       	call   6180 <quote>
6ac2:	41 8b 36             	mov    esi,DWORD PTR [r14]
6ac5:	49 89 c0             	mov    r8,rax
6ac8:	b8 00 00 00 00       	mov    eax,0x0
6acd:	48 8d 15 6c 15 00 00 	lea    rdx,[rip+0x156c]        # 8040 <b64c+0x40>
6ad4:	4c 89 e9             	mov    rcx,r13
6ad7:	83 fe 16             	cmp    esi,0x16
6ada:	0f 44 f0             	cmove  esi,eax
6add:	85 db                	test   ebx,ebx
6adf:	b8 01 00 00 00       	mov    eax,0x1
6ae4:	0f 44 d8             	cmove  ebx,eax
6ae7:	31 c0                	xor    eax,eax
6ae9:	89 df                	mov    edi,ebx
6aeb:	e8 20 ad ff ff       	call   1810 <error@plt>
6af0:	48 8b 2c 24          	mov    rbp,QWORD PTR [rsp]
6af4:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
6af9:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
6b00:	00 00
6b02:	48 89 e8             	mov    rax,rbp
6b05:	75 44                	jne    6b4b <xnumtoumax+0xfb>
6b07:	48 83 c4 18          	add    rsp,0x18
6b0b:	5b                   	pop    rbx
6b0c:	5d                   	pop    rbp
6b0d:	41 5c                	pop    r12
6b0f:	41 5d                	pop    r13
6b11:	41 5e                	pop    r14
6b13:	41 5f                	pop    r15
6b15:	c3                   	ret
6b16:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
6b1d:	00 00 00
6b20:	89 c5                	mov    ebp,eax
6b22:	e8 89 aa ff ff       	call   15b0 <__errno_location@plt>
6b27:	83 fd 01             	cmp    ebp,0x1
6b2a:	49 89 c6             	mov    r14,rax
6b2d:	74 11                	je     6b40 <xnumtoumax+0xf0>
6b2f:	83 fd 03             	cmp    ebp,0x3
6b32:	75 86                	jne    6aba <xnumtoumax+0x6a>
6b34:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
6b3a:	e9 7b ff ff ff       	jmp    6aba <xnumtoumax+0x6a>
6b3f:	90                   	nop
6b40:	c7 00 4b 00 00 00    	mov    DWORD PTR [rax],0x4b
6b46:	e9 6f ff ff ff       	jmp    6aba <xnumtoumax+0x6a>
6b4b:	e8 10 ab ff ff       	call   1660 <__stack_chk_fail@plt>

0000000000006b50 <xdectoumax>:
6b50:	48 83 ec 10          	sub    rsp,0x10
6b54:	41 51                	push   r9
6b56:	4d 89 c1             	mov    r9,r8
6b59:	49 89 c8             	mov    r8,rcx
6b5c:	48 89 d1             	mov    rcx,rdx
6b5f:	48 89 f2             	mov    rdx,rsi
6b62:	be 0a 00 00 00       	mov    esi,0xa
6b67:	e8 e4 fe ff ff       	call   6a50 <xnumtoumax>
6b6c:	48 83 c4 18          	add    rsp,0x18
6b70:	c3                   	ret
6b71:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
6b78:	00 00 00
6b7b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000006b80 <xstrtoumax>:
6b80:	41 57                	push   r15
6b82:	41 56                	push   r14
6b84:	41 55                	push   r13
6b86:	41 54                	push   r12
6b88:	55                   	push   rbp
6b89:	53                   	push   rbx
6b8a:	48 83 ec 28          	sub    rsp,0x28
6b8e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
6b95:	00 00
6b97:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
6b9c:	31 c0                	xor    eax,eax
6b9e:	83 fa 24             	cmp    edx,0x24
6ba1:	0f 87 5e 03 00 00    	ja     6f05 <xstrtoumax+0x385>
6ba7:	48 8d 44 24 10       	lea    rax,[rsp+0x10]
6bac:	49 89 f7             	mov    r15,rsi
6baf:	48 85 f6             	test   rsi,rsi
6bb2:	48 89 fd             	mov    rbp,rdi
6bb5:	89 54 24 08          	mov    DWORD PTR [rsp+0x8],edx
6bb9:	49 89 ce             	mov    r14,rcx
6bbc:	4d 89 c5             	mov    r13,r8
6bbf:	4c 0f 44 f8          	cmove  r15,rax
6bc3:	e8 e8 a9 ff ff       	call   15b0 <__errno_location@plt>
6bc8:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
6bce:	49 89 c4             	mov    r12,rax
6bd1:	0f b6 5d 00          	movzx  ebx,BYTE PTR [rbp+0x0]
6bd5:	e8 c6 ac ff ff       	call   18a0 <__ctype_b_loc@plt>
6bda:	8b 54 24 08          	mov    edx,DWORD PTR [rsp+0x8]
6bde:	48 8b 30             	mov    rsi,QWORD PTR [rax]
6be1:	48 89 e8             	mov    rax,rbp
6be4:	eb 11                	jmp    6bf7 <xstrtoumax+0x77>
6be6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
6bed:	00 00 00
6bf0:	48 83 c0 01          	add    rax,0x1
6bf4:	0f b6 18             	movzx  ebx,BYTE PTR [rax]
6bf7:	0f b6 cb             	movzx  ecx,bl
6bfa:	f6 44 4e 01 20       	test   BYTE PTR [rsi+rcx*2+0x1],0x20
6bff:	75 ef                	jne    6bf0 <xstrtoumax+0x70>
6c01:	80 fb 2d             	cmp    bl,0x2d
6c04:	74 52                	je     6c58 <xstrtoumax+0xd8>
6c06:	31 c9                	xor    ecx,ecx
6c08:	4c 89 fe             	mov    rsi,r15
6c0b:	48 89 ef             	mov    rdi,rbp
6c0e:	e8 cd aa ff ff       	call   16e0 <__strtoul_internal@plt>
6c13:	49 8b 0f             	mov    rcx,QWORD PTR [r15]
6c16:	48 89 c3             	mov    rbx,rax
6c19:	48 39 e9             	cmp    rcx,rbp
6c1c:	74 2a                	je     6c48 <xstrtoumax+0xc8>
6c1e:	41 8b 04 24          	mov    eax,DWORD PTR [r12]
6c22:	85 c0                	test   eax,eax
6c24:	74 62                	je     6c88 <xstrtoumax+0x108>
6c26:	83 f8 22             	cmp    eax,0x22
6c29:	bd 01 00 00 00       	mov    ebp,0x1
6c2e:	75 28                	jne    6c58 <xstrtoumax+0xd8>
6c30:	4d 85 ed             	test   r13,r13
6c33:	74 09                	je     6c3e <xstrtoumax+0xbe>
6c35:	44 0f b6 21          	movzx  r12d,BYTE PTR [rcx]
6c39:	45 84 e4             	test   r12b,r12b
6c3c:	75 79                	jne    6cb7 <xstrtoumax+0x137>
6c3e:	49 89 1e             	mov    QWORD PTR [r14],rbx
6c41:	eb 1a                	jmp    6c5d <xstrtoumax+0xdd>
6c43:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
6c48:	4d 85 ed             	test   r13,r13
6c4b:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
6c50:	75 3e                	jne    6c90 <xstrtoumax+0x110>
6c52:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
6c58:	bd 04 00 00 00       	mov    ebp,0x4
6c5d:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
6c62:	64 48 33 3c 25 28 00 	xor    rdi,QWORD PTR fs:0x28
6c69:	00 00
6c6b:	89 e8                	mov    eax,ebp
6c6d:	0f 85 8d 02 00 00    	jne    6f00 <xstrtoumax+0x380>
6c73:	48 83 c4 28          	add    rsp,0x28
6c77:	5b                   	pop    rbx
6c78:	5d                   	pop    rbp
6c79:	41 5c                	pop    r12
6c7b:	41 5d                	pop    r13
6c7d:	41 5e                	pop    r14
6c7f:	41 5f                	pop    r15
6c81:	c3                   	ret
6c82:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
6c88:	31 ed                	xor    ebp,ebp
6c8a:	eb a4                	jmp    6c30 <xstrtoumax+0xb0>
6c8c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
6c90:	44 0f b6 65 00       	movzx  r12d,BYTE PTR [rbp+0x0]
6c95:	45 84 e4             	test   r12b,r12b
6c98:	74 be                	je     6c58 <xstrtoumax+0xd8>
6c9a:	41 0f be f4          	movsx  esi,r12b
6c9e:	4c 89 ef             	mov    rdi,r13
6ca1:	31 ed                	xor    ebp,ebp
6ca3:	e8 e8 a9 ff ff       	call   1690 <strchr@plt>
6ca8:	48 85 c0             	test   rax,rax
6cab:	bb 01 00 00 00       	mov    ebx,0x1
6cb0:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
6cb5:	74 a1                	je     6c58 <xstrtoumax+0xd8>
6cb7:	41 0f be f4          	movsx  esi,r12b
6cbb:	4c 89 ef             	mov    rdi,r13
6cbe:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
6cc3:	e8 c8 a9 ff ff       	call   1690 <strchr@plt>
6cc8:	48 85 c0             	test   rax,rax
6ccb:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
6cd0:	0f 84 c6 00 00 00    	je     6d9c <xstrtoumax+0x21c>
6cd6:	41 8d 44 24 bb       	lea    eax,[r12-0x45]
6cdb:	3c 2f                	cmp    al,0x2f
6cdd:	77 51                	ja     6d30 <xstrtoumax+0x1b0>
6cdf:	48 ba 45 89 30 00 44 	movabs rdx,0x814400308945
6ce6:	81 00 00
6ce9:	48 0f a3 c2          	bt     rdx,rax
6ced:	73 41                	jae    6d30 <xstrtoumax+0x1b0>
6cef:	be 30 00 00 00       	mov    esi,0x30
6cf4:	4c 89 ef             	mov    rdi,r13
6cf7:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
6cfc:	e8 8f a9 ff ff       	call   1690 <strchr@plt>
6d01:	48 85 c0             	test   rax,rax
6d04:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
6d09:	74 25                	je     6d30 <xstrtoumax+0x1b0>
6d0b:	0f b6 41 01          	movzx  eax,BYTE PTR [rcx+0x1]
6d0f:	3c 44                	cmp    al,0x44
6d11:	74 0c                	je     6d1f <xstrtoumax+0x19f>
6d13:	3c 69                	cmp    al,0x69
6d15:	0f 84 cd 01 00 00    	je     6ee8 <xstrtoumax+0x368>
6d1b:	3c 42                	cmp    al,0x42
6d1d:	75 11                	jne    6d30 <xstrtoumax+0x1b0>
6d1f:	bf 02 00 00 00       	mov    edi,0x2
6d24:	be e8 03 00 00       	mov    esi,0x3e8
6d29:	eb 0f                	jmp    6d3a <xstrtoumax+0x1ba>
6d2b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
6d30:	bf 01 00 00 00       	mov    edi,0x1
6d35:	be 00 04 00 00       	mov    esi,0x400
6d3a:	41 83 ec 42          	sub    r12d,0x42
6d3e:	41 80 fc 35          	cmp    r12b,0x35
6d42:	77 58                	ja     6d9c <xstrtoumax+0x21c>
6d44:	48 8d 15 dd 1b 00 00 	lea    rdx,[rip+0x1bdd]        # 8928 <version_etc_copyright+0x88>
6d4b:	45 0f b6 e4          	movzx  r12d,r12b
6d4f:	4a 63 04 a2          	movsxd rax,DWORD PTR [rdx+r12*4]
6d53:	48 01 d0             	add    rax,rdx
6d56:	ff e0                	jmp    rax
6d58:	48 89 d8             	mov    rax,rbx
6d5b:	48 f7 e6             	mul    rsi
6d5e:	0f 80 ed 01 00 00    	jo     6f51 <xstrtoumax+0x3d1>
6d64:	45 31 c0             	xor    r8d,r8d
6d67:	48 f7 e6             	mul    rsi
6d6a:	0f 80 d2 01 00 00    	jo     6f42 <xstrtoumax+0x3c2>
6d70:	48 89 c3             	mov    rbx,rax
6d73:	44 09 c5             	or     ebp,r8d
6d76:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
6d7d:	00 00 00
6d80:	48 63 ff             	movsxd rdi,edi
6d83:	89 e8                	mov    eax,ebp
6d85:	48 01 f9             	add    rcx,rdi
6d88:	83 c8 02             	or     eax,0x2
6d8b:	49 89 0f             	mov    QWORD PTR [r15],rcx
6d8e:	80 39 00             	cmp    BYTE PTR [rcx],0x0
6d91:	49 89 1e             	mov    QWORD PTR [r14],rbx
6d94:	0f 45 e8             	cmovne ebp,eax
6d97:	e9 c1 fe ff ff       	jmp    6c5d <xstrtoumax+0xdd>
6d9c:	49 89 1e             	mov    QWORD PTR [r14],rbx
6d9f:	83 cd 02             	or     ebp,0x2
6da2:	e9 b6 fe ff ff       	jmp    6c5d <xstrtoumax+0xdd>
6da7:	ba 02 00 00 00       	mov    edx,0x2
6dac:	48 89 d0             	mov    rax,rdx
6daf:	48 f7 e3             	mul    rbx
6db2:	0f 80 96 00 00 00    	jo     6e4e <xstrtoumax+0x2ce>
6db8:	48 01 db             	add    rbx,rbx
6dbb:	eb c3                	jmp    6d80 <xstrtoumax+0x200>
6dbd:	ba 00 02 00 00       	mov    edx,0x200
6dc2:	48 89 d0             	mov    rax,rdx
6dc5:	48 f7 e3             	mul    rbx
6dc8:	0f 80 80 00 00 00    	jo     6e4e <xstrtoumax+0x2ce>
6dce:	48 c1 e3 09          	shl    rbx,0x9
6dd2:	eb ac                	jmp    6d80 <xstrtoumax+0x200>
6dd4:	41 b8 07 00 00 00    	mov    r8d,0x7
6dda:	45 31 c9             	xor    r9d,r9d
6ddd:	0f 1f 00             	nop    DWORD PTR [rax]
6de0:	48 89 d8             	mov    rax,rbx
6de3:	48 f7 e6             	mul    rsi
6de6:	48 89 c3             	mov    rbx,rax
6de9:	0f 80 8f 01 00 00    	jo     6f7e <xstrtoumax+0x3fe>
6def:	41 83 e8 01          	sub    r8d,0x1
6df3:	75 eb                	jne    6de0 <xstrtoumax+0x260>
6df5:	44 09 cd             	or     ebp,r9d
6df8:	eb 86                	jmp    6d80 <xstrtoumax+0x200>
6dfa:	41 b8 08 00 00 00    	mov    r8d,0x8
6e00:	45 31 c9             	xor    r9d,r9d
6e03:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
6e08:	48 89 d8             	mov    rax,rbx
6e0b:	48 f7 e6             	mul    rsi
6e0e:	48 89 c3             	mov    rbx,rax
6e11:	0f 80 49 01 00 00    	jo     6f60 <xstrtoumax+0x3e0>
6e17:	41 83 e8 01          	sub    r8d,0x1
6e1b:	75 eb                	jne    6e08 <xstrtoumax+0x288>
6e1d:	eb d6                	jmp    6df5 <xstrtoumax+0x275>
6e1f:	41 b8 04 00 00 00    	mov    r8d,0x4
6e25:	45 31 c9             	xor    r9d,r9d
6e28:	48 89 d8             	mov    rax,rbx
6e2b:	48 f7 e6             	mul    rsi
6e2e:	48 89 c3             	mov    rbx,rax
6e31:	0f 80 fc 00 00 00    	jo     6f33 <xstrtoumax+0x3b3>
6e37:	41 83 e8 01          	sub    r8d,0x1
6e3b:	75 eb                	jne    6e28 <xstrtoumax+0x2a8>
6e3d:	eb b6                	jmp    6df5 <xstrtoumax+0x275>
6e3f:	48 89 d8             	mov    rax,rbx
6e42:	48 f7 e6             	mul    rsi
6e45:	48 89 c3             	mov    rbx,rax
6e48:	0f 81 32 ff ff ff    	jno    6d80 <xstrtoumax+0x200>
6e4e:	bd 01 00 00 00       	mov    ebp,0x1
6e53:	48 83 cb ff          	or     rbx,0xffffffffffffffff
6e57:	e9 24 ff ff ff       	jmp    6d80 <xstrtoumax+0x200>
6e5c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
6e60:	41 b8 05 00 00 00    	mov    r8d,0x5
6e66:	45 31 c9             	xor    r9d,r9d
6e69:	48 89 d8             	mov    rax,rbx
6e6c:	48 f7 e6             	mul    rsi
6e6f:	48 89 c3             	mov    rbx,rax
6e72:	0f 80 f7 00 00 00    	jo     6f6f <xstrtoumax+0x3ef>
6e78:	41 83 e8 01          	sub    r8d,0x1
6e7c:	75 eb                	jne    6e69 <xstrtoumax+0x2e9>
6e7e:	e9 72 ff ff ff       	jmp    6df5 <xstrtoumax+0x275>
6e83:	41 b8 06 00 00 00    	mov    r8d,0x6
6e89:	45 31 c9             	xor    r9d,r9d
6e8c:	48 89 d8             	mov    rax,rbx
6e8f:	48 f7 e6             	mul    rsi
6e92:	48 89 c3             	mov    rbx,rax
6e95:	0f 80 89 00 00 00    	jo     6f24 <xstrtoumax+0x3a4>
6e9b:	41 83 e8 01          	sub    r8d,0x1
6e9f:	75 eb                	jne    6e8c <xstrtoumax+0x30c>
6ea1:	e9 4f ff ff ff       	jmp    6df5 <xstrtoumax+0x275>
6ea6:	ba 00 04 00 00       	mov    edx,0x400
6eab:	48 89 d0             	mov    rax,rdx
6eae:	48 f7 e3             	mul    rbx
6eb1:	70 9b                	jo     6e4e <xstrtoumax+0x2ce>
6eb3:	48 c1 e3 0a          	shl    rbx,0xa
6eb7:	e9 c4 fe ff ff       	jmp    6d80 <xstrtoumax+0x200>
6ebc:	48 89 d8             	mov    rax,rbx
6ebf:	48 f7 e6             	mul    rsi
6ec2:	0f 80 c5 00 00 00    	jo     6f8d <xstrtoumax+0x40d>
6ec8:	45 31 c0             	xor    r8d,r8d
6ecb:	48 f7 e6             	mul    rsi
6ece:	0f 81 93 fe ff ff    	jno    6d67 <xstrtoumax+0x1e7>
6ed4:	41 b8 01 00 00 00    	mov    r8d,0x1
6eda:	48 83 c8 ff          	or     rax,0xffffffffffffffff
6ede:	e9 84 fe ff ff       	jmp    6d67 <xstrtoumax+0x1e7>
6ee3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
6ee8:	31 ff                	xor    edi,edi
6eea:	80 79 02 42          	cmp    BYTE PTR [rcx+0x2],0x42
6eee:	be 00 04 00 00       	mov    esi,0x400
6ef3:	40 0f 94 c7          	sete   dil
6ef7:	8d 7c 3f 01          	lea    edi,[rdi+rdi*1+0x1]
6efb:	e9 3a fe ff ff       	jmp    6d3a <xstrtoumax+0x1ba>
6f00:	e8 5b a7 ff ff       	call   1660 <__stack_chk_fail@plt>
6f05:	48 8d 0d f4 1a 00 00 	lea    rcx,[rip+0x1af4]        # 8a00 <__PRETTY_FUNCTION__.4162>
6f0c:	48 8d 35 cd 19 00 00 	lea    rsi,[rip+0x19cd]        # 88e0 <version_etc_copyright+0x40>
6f13:	48 8d 3d e6 19 00 00 	lea    rdi,[rip+0x19e6]        # 8900 <version_etc_copyright+0x60>
6f1a:	ba 54 00 00 00       	mov    edx,0x54
6f1f:	e8 ac a7 ff ff       	call   16d0 <__assert_fail@plt>
6f24:	41 b9 01 00 00 00    	mov    r9d,0x1
6f2a:	48 83 cb ff          	or     rbx,0xffffffffffffffff
6f2e:	e9 68 ff ff ff       	jmp    6e9b <xstrtoumax+0x31b>
6f33:	41 b9 01 00 00 00    	mov    r9d,0x1
6f39:	48 83 cb ff          	or     rbx,0xffffffffffffffff
6f3d:	e9 f5 fe ff ff       	jmp    6e37 <xstrtoumax+0x2b7>
6f42:	41 b8 01 00 00 00    	mov    r8d,0x1
6f48:	48 83 cb ff          	or     rbx,0xffffffffffffffff
6f4c:	e9 22 fe ff ff       	jmp    6d73 <xstrtoumax+0x1f3>
6f51:	48 83 c8 ff          	or     rax,0xffffffffffffffff
6f55:	41 b8 01 00 00 00    	mov    r8d,0x1
6f5b:	e9 07 fe ff ff       	jmp    6d67 <xstrtoumax+0x1e7>
6f60:	41 b9 01 00 00 00    	mov    r9d,0x1
6f66:	48 83 cb ff          	or     rbx,0xffffffffffffffff
6f6a:	e9 a8 fe ff ff       	jmp    6e17 <xstrtoumax+0x297>
6f6f:	41 b9 01 00 00 00    	mov    r9d,0x1
6f75:	48 83 cb ff          	or     rbx,0xffffffffffffffff
6f79:	e9 fa fe ff ff       	jmp    6e78 <xstrtoumax+0x2f8>
6f7e:	41 b9 01 00 00 00    	mov    r9d,0x1
6f84:	48 83 cb ff          	or     rbx,0xffffffffffffffff
6f88:	e9 62 fe ff ff       	jmp    6def <xstrtoumax+0x26f>
6f8d:	41 b8 01 00 00 00    	mov    r8d,0x1
6f93:	48 83 c8 ff          	or     rax,0xffffffffffffffff
6f97:	e9 2f ff ff ff       	jmp    6ecb <xstrtoumax+0x34b>
6f9c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006fa0 <rpl_fclose>:
6fa0:	41 54                	push   r12
6fa2:	55                   	push   rbp
6fa3:	53                   	push   rbx
6fa4:	48 89 fb             	mov    rbx,rdi
6fa7:	e8 c4 a7 ff ff       	call   1770 <fileno@plt>
6fac:	85 c0                	test   eax,eax
6fae:	48 89 df             	mov    rdi,rbx
6fb1:	78 54                	js     7007 <rpl_fclose+0x67>
6fb3:	e8 f8 a7 ff ff       	call   17b0 <__freading@plt>
6fb8:	85 c0                	test   eax,eax
6fba:	75 2c                	jne    6fe8 <rpl_fclose+0x48>
6fbc:	48 89 df             	mov    rdi,rbx
6fbf:	e8 5c 00 00 00       	call   7020 <rpl_fflush>
6fc4:	85 c0                	test   eax,eax
6fc6:	74 3c                	je     7004 <rpl_fclose+0x64>
6fc8:	e8 e3 a5 ff ff       	call   15b0 <__errno_location@plt>
6fcd:	44 8b 20             	mov    r12d,DWORD PTR [rax]
6fd0:	48 89 df             	mov    rdi,rbx
6fd3:	48 89 c5             	mov    rbp,rax
6fd6:	e8 35 a6 ff ff       	call   1610 <fclose@plt>
6fdb:	45 85 e4             	test   r12d,r12d
6fde:	75 30                	jne    7010 <rpl_fclose+0x70>
6fe0:	5b                   	pop    rbx
6fe1:	5d                   	pop    rbp
6fe2:	41 5c                	pop    r12
6fe4:	c3                   	ret
6fe5:	0f 1f 00             	nop    DWORD PTR [rax]
6fe8:	48 89 df             	mov    rdi,rbx
6feb:	e8 80 a7 ff ff       	call   1770 <fileno@plt>
6ff0:	31 f6                	xor    esi,esi
6ff2:	ba 01 00 00 00       	mov    edx,0x1
6ff7:	89 c7                	mov    edi,eax
6ff9:	e8 c2 a6 ff ff       	call   16c0 <lseek@plt>
6ffe:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
7002:	75 b8                	jne    6fbc <rpl_fclose+0x1c>
7004:	48 89 df             	mov    rdi,rbx
7007:	5b                   	pop    rbx
7008:	5d                   	pop    rbp
7009:	41 5c                	pop    r12
700b:	e9 00 a6 ff ff       	jmp    1610 <fclose@plt>
7010:	44 89 65 00          	mov    DWORD PTR [rbp+0x0],r12d
7014:	b8 ff ff ff ff       	mov    eax,0xffffffff
7019:	eb c5                	jmp    6fe0 <rpl_fclose+0x40>
701b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000007020 <rpl_fflush>:
7020:	48 85 ff             	test   rdi,rdi
7023:	53                   	push   rbx
7024:	48 89 fb             	mov    rbx,rdi
7027:	74 11                	je     703a <rpl_fflush+0x1a>
7029:	e8 82 a7 ff ff       	call   17b0 <__freading@plt>
702e:	85 c0                	test   eax,eax
7030:	74 08                	je     703a <rpl_fflush+0x1a>
7032:	f7 03 00 01 00 00    	test   DWORD PTR [rbx],0x100
7038:	75 0e                	jne    7048 <rpl_fflush+0x28>
703a:	48 89 df             	mov    rdi,rbx
703d:	5b                   	pop    rbx
703e:	e9 4d a7 ff ff       	jmp    1790 <fflush@plt>
7043:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
7048:	48 89 df             	mov    rdi,rbx
704b:	ba 01 00 00 00       	mov    edx,0x1
7050:	31 f6                	xor    esi,esi
7052:	e8 09 00 00 00       	call   7060 <rpl_fseeko>
7057:	48 89 df             	mov    rdi,rbx
705a:	5b                   	pop    rbx
705b:	e9 30 a7 ff ff       	jmp    1790 <fflush@plt>

0000000000007060 <rpl_fseeko>:
7060:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
7064:	48 39 47 10          	cmp    QWORD PTR [rdi+0x10],rax
7068:	74 06                	je     7070 <rpl_fseeko+0x10>
706a:	e9 b1 a7 ff ff       	jmp    1820 <fseeko@plt>
706f:	90                   	nop
7070:	48 8b 47 20          	mov    rax,QWORD PTR [rdi+0x20]
7074:	48 39 47 28          	cmp    QWORD PTR [rdi+0x28],rax
7078:	75 f0                	jne    706a <rpl_fseeko+0xa>
707a:	48 83 7f 48 00       	cmp    QWORD PTR [rdi+0x48],0x0
707f:	75 e9                	jne    706a <rpl_fseeko+0xa>
7081:	41 54                	push   r12
7083:	55                   	push   rbp
7084:	41 89 d4             	mov    r12d,edx
7087:	53                   	push   rbx
7088:	48 89 f5             	mov    rbp,rsi
708b:	48 89 fb             	mov    rbx,rdi
708e:	e8 dd a6 ff ff       	call   1770 <fileno@plt>
7093:	44 89 e2             	mov    edx,r12d
7096:	48 89 ee             	mov    rsi,rbp
7099:	89 c7                	mov    edi,eax
709b:	e8 20 a6 ff ff       	call   16c0 <lseek@plt>
70a0:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
70a4:	74 0c                	je     70b2 <rpl_fseeko+0x52>
70a6:	83 23 ef             	and    DWORD PTR [rbx],0xffffffef
70a9:	48 89 83 90 00 00 00 	mov    QWORD PTR [rbx+0x90],rax
70b0:	31 c0                	xor    eax,eax
70b2:	5b                   	pop    rbx
70b3:	5d                   	pop    rbp
70b4:	41 5c                	pop    r12
70b6:	c3                   	ret
70b7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
70be:	00 00

00000000000070c0 <rpl_mbrtowc>:
70c0:	41 55                	push   r13
70c2:	41 54                	push   r12
70c4:	49 89 f5             	mov    r13,rsi
70c7:	55                   	push   rbp
70c8:	53                   	push   rbx
70c9:	48 89 fb             	mov    rbx,rdi
70cc:	49 89 d4             	mov    r12,rdx
70cf:	48 83 ec 18          	sub    rsp,0x18
70d3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
70da:	00 00
70dc:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
70e1:	31 c0                	xor    eax,eax
70e3:	48 8d 44 24 04       	lea    rax,[rsp+0x4]
70e8:	48 85 ff             	test   rdi,rdi
70eb:	48 0f 44 d8          	cmove  rbx,rax
70ef:	48 89 df             	mov    rdi,rbx
70f2:	e8 89 a5 ff ff       	call   1680 <mbrtowc@plt>
70f7:	48 83 f8 fd          	cmp    rax,0xfffffffffffffffd
70fb:	48 89 c5             	mov    rbp,rax
70fe:	76 20                	jbe    7120 <rpl_mbrtowc+0x60>
7100:	4d 85 e4             	test   r12,r12
7103:	74 1b                	je     7120 <rpl_mbrtowc+0x60>
7105:	31 ff                	xor    edi,edi
7107:	e8 c4 00 00 00       	call   71d0 <hard_locale>
710c:	84 c0                	test   al,al
710e:	75 10                	jne    7120 <rpl_mbrtowc+0x60>
7110:	41 0f b6 45 00       	movzx  eax,BYTE PTR [r13+0x0]
7115:	bd 01 00 00 00       	mov    ebp,0x1
711a:	89 03                	mov    DWORD PTR [rbx],eax
711c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
7120:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
7125:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
712c:	00 00
712e:	48 89 e8             	mov    rax,rbp
7131:	75 0b                	jne    713e <rpl_mbrtowc+0x7e>
7133:	48 83 c4 18          	add    rsp,0x18
7137:	5b                   	pop    rbx
7138:	5d                   	pop    rbp
7139:	41 5c                	pop    r12
713b:	41 5d                	pop    r13
713d:	c3                   	ret
713e:	e8 1d a5 ff ff       	call   1660 <__stack_chk_fail@plt>
7143:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
714a:	00 00 00
714d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000007150 <close_stream>:
7150:	41 54                	push   r12
7152:	55                   	push   rbp
7153:	48 89 fd             	mov    rbp,rdi
7156:	53                   	push   rbx
7157:	e8 84 a4 ff ff       	call   15e0 <__fpending@plt>
715c:	8b 5d 00             	mov    ebx,DWORD PTR [rbp+0x0]
715f:	48 89 ef             	mov    rdi,rbp
7162:	49 89 c4             	mov    r12,rax
7165:	e8 36 fe ff ff       	call   6fa0 <rpl_fclose>
716a:	83 e3 20             	and    ebx,0x20
716d:	85 db                	test   ebx,ebx
716f:	75 17                	jne    7188 <close_stream+0x38>
7171:	85 c0                	test   eax,eax
7173:	74 0a                	je     717f <close_stream+0x2f>
7175:	4d 85 e4             	test   r12,r12
7178:	b8 ff ff ff ff       	mov    eax,0xffffffff
717d:	74 39                	je     71b8 <close_stream+0x68>
717f:	5b                   	pop    rbx
7180:	5d                   	pop    rbp
7181:	41 5c                	pop    r12
7183:	c3                   	ret
7184:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
7188:	85 c0                	test   eax,eax
718a:	75 1c                	jne    71a8 <close_stream+0x58>
718c:	e8 1f a4 ff ff       	call   15b0 <__errno_location@plt>
7191:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
7197:	b8 ff ff ff ff       	mov    eax,0xffffffff
719c:	5b                   	pop    rbx
719d:	5d                   	pop    rbp
719e:	41 5c                	pop    r12
71a0:	c3                   	ret
71a1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
71a8:	5b                   	pop    rbx
71a9:	b8 ff ff ff ff       	mov    eax,0xffffffff
71ae:	5d                   	pop    rbp
71af:	41 5c                	pop    r12
71b1:	c3                   	ret
71b2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
71b8:	e8 f3 a3 ff ff       	call   15b0 <__errno_location@plt>
71bd:	83 38 09             	cmp    DWORD PTR [rax],0x9
71c0:	5b                   	pop    rbx
71c1:	5d                   	pop    rbp
71c2:	41 5c                	pop    r12
71c4:	0f 95 c0             	setne  al
71c7:	0f b6 c0             	movzx  eax,al
71ca:	f7 d8                	neg    eax
71cc:	c3                   	ret
71cd:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000071d0 <hard_locale>:
71d0:	48 83 ec 08          	sub    rsp,0x8
71d4:	31 f6                	xor    esi,esi
71d6:	e8 05 a6 ff ff       	call   17e0 <setlocale@plt>
71db:	48 89 c2             	mov    rdx,rax
71de:	b8 01 00 00 00       	mov    eax,0x1
71e3:	48 85 d2             	test   rdx,rdx
71e6:	74 1d                	je     7205 <hard_locale+0x35>
71e8:	48 8d 3d 1c 18 00 00 	lea    rdi,[rip+0x181c]        # 8a0b <__PRETTY_FUNCTION__.4162+0xb>
71ef:	b9 02 00 00 00       	mov    ecx,0x2
71f4:	48 89 d6             	mov    rsi,rdx
71f7:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
71f9:	0f 97 c1             	seta   cl
71fc:	80 d9 00             	sbb    cl,0x0
71ff:	31 c0                	xor    eax,eax
7201:	84 c9                	test   cl,cl
7203:	75 0b                	jne    7210 <hard_locale+0x40>
7205:	48 83 c4 08          	add    rsp,0x8
7209:	c3                   	ret
720a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
7210:	48 8d 3d f6 17 00 00 	lea    rdi,[rip+0x17f6]        # 8a0d <__PRETTY_FUNCTION__.4162+0xd>
7217:	b9 06 00 00 00       	mov    ecx,0x6
721c:	48 89 d6             	mov    rsi,rdx
721f:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
7221:	0f 97 c0             	seta   al
7224:	1c 00                	sbb    al,0x0
7226:	84 c0                	test   al,al
7228:	0f 95 c0             	setne  al
722b:	48 83 c4 08          	add    rsp,0x8
722f:	c3                   	ret

0000000000007230 <locale_charset>:
7230:	48 83 ec 08          	sub    rsp,0x8
7234:	bf 0e 00 00 00       	mov    edi,0xe
7239:	e8 62 a5 ff ff       	call   17a0 <nl_langinfo@plt>
723e:	48 85 c0             	test   rax,rax
7241:	74 1d                	je     7260 <locale_charset+0x30>
7243:	80 38 00             	cmp    BYTE PTR [rax],0x0
7246:	48 8d 15 c6 17 00 00 	lea    rdx,[rip+0x17c6]        # 8a13 <__PRETTY_FUNCTION__.4162+0x13>
724d:	48 0f 44 c2          	cmove  rax,rdx
7251:	48 83 c4 08          	add    rsp,0x8
7255:	c3                   	ret
7256:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
725d:	00 00 00
7260:	48 8d 05 ac 17 00 00 	lea    rax,[rip+0x17ac]        # 8a13 <__PRETTY_FUNCTION__.4162+0x13>
7267:	48 83 c4 08          	add    rsp,0x8
726b:	c3                   	ret
726c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007270 <__libc_csu_init>:
7270:	41 57                	push   r15
7272:	41 56                	push   r14
7274:	49 89 d7             	mov    r15,rdx
7277:	41 55                	push   r13
7279:	41 54                	push   r12
727b:	4c 8d 25 8e 37 20 00 	lea    r12,[rip+0x20378e]        # 20aa10 <__frame_dummy_init_array_entry>
7282:	55                   	push   rbp
7283:	48 8d 2d 8e 37 20 00 	lea    rbp,[rip+0x20378e]        # 20aa18 <__init_array_end>
728a:	53                   	push   rbx
728b:	41 89 fd             	mov    r13d,edi
728e:	49 89 f6             	mov    r14,rsi
7291:	4c 29 e5             	sub    rbp,r12
7294:	48 83 ec 08          	sub    rsp,0x8
7298:	48 c1 fd 03          	sar    rbp,0x3
729c:	e8 c7 a2 ff ff       	call   1568 <_init>
72a1:	48 85 ed             	test   rbp,rbp
72a4:	74 20                	je     72c6 <__libc_csu_init+0x56>
72a6:	31 db                	xor    ebx,ebx
72a8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
72af:	00
72b0:	4c 89 fa             	mov    rdx,r15
72b3:	4c 89 f6             	mov    rsi,r14
72b6:	44 89 ef             	mov    edi,r13d
72b9:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
72bd:	48 83 c3 01          	add    rbx,0x1
72c1:	48 39 dd             	cmp    rbp,rbx
72c4:	75 ea                	jne    72b0 <__libc_csu_init+0x40>
72c6:	48 83 c4 08          	add    rsp,0x8
72ca:	5b                   	pop    rbx
72cb:	5d                   	pop    rbp
72cc:	41 5c                	pop    r12
72ce:	41 5d                	pop    r13
72d0:	41 5e                	pop    r14
72d2:	41 5f                	pop    r15
72d4:	c3                   	ret
72d5:	90                   	nop
72d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
72dd:	00 00 00

00000000000072e0 <__libc_csu_fini>:
72e0:	f3 c3                	repz ret
72e2:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
72e9:	00 00 00
72ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000072f0 <atexit>:
72f0:	48 8b 15 11 3d 20 00 	mov    rdx,QWORD PTR [rip+0x203d11]        # 20b008 <__dso_handle>
72f7:	31 f6                	xor    esi,esi
72f9:	e9 42 a5 ff ff       	jmp    1840 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000007300 <_fini>:
7300:	48 83 ec 08          	sub    rsp,0x8
7304:	48 83 c4 08          	add    rsp,0x8
7308:	c3                   	ret
